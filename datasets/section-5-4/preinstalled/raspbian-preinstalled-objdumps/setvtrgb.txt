
raspbian-preinstalled/setvtrgb:     file format elf32-littlearm


Disassembly of section .init:

00010738 <.init>:
   10738:	push	{r3, lr}
   1073c:	bl	10ad4 <close@plt+0x25c>
   10740:	pop	{r3, pc}

Disassembly of section .plt:

00010744 <strcmp@plt-0x14>:
   10744:	push	{lr}		; (str lr, [sp, #-4]!)
   10748:	ldr	lr, [pc, #4]	; 10754 <strcmp@plt-0x4>
   1074c:	add	lr, pc, lr
   10750:	ldr	pc, [lr, #8]!
   10754:	andeq	r1, r1, ip, lsr #17

00010758 <strcmp@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2220]!	; 0x8ac

00010764 <__isoc99_fscanf@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2212]!	; 0x8a4

00010770 <fopen@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2204]!	; 0x89c

0001077c <dcgettext@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2196]!	; 0x894

00010788 <__stack_chk_fail@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2188]!	; 0x88c

00010794 <textdomain@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2180]!	; 0x884

000107a0 <ioctl@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2172]!	; 0x87c

000107ac <__libc_start_main@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2164]!	; 0x874

000107b8 <strerror@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2156]!	; 0x86c

000107c4 <__vfprintf_chk@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2148]!	; 0x864

000107d0 <__gmon_start__@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #69632	; 0x11000
   107d8:	ldr	pc, [ip, #2140]!	; 0x85c

000107dc <open@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #69632	; 0x11000
   107e4:	ldr	pc, [ip, #2132]!	; 0x854

000107e8 <exit@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #69632	; 0x11000
   107f0:	ldr	pc, [ip, #2124]!	; 0x84c

000107f4 <getopt@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #69632	; 0x11000
   107fc:	ldr	pc, [ip, #2116]!	; 0x844

00010800 <__errno_location@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #69632	; 0x11000
   10808:	ldr	pc, [ip, #2108]!	; 0x83c

0001080c <fgetc@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #69632	; 0x11000
   10814:	ldr	pc, [ip, #2100]!	; 0x834

00010818 <__printf_chk@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #69632	; 0x11000
   10820:	ldr	pc, [ip, #2092]!	; 0x82c

00010824 <__fprintf_chk@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #69632	; 0x11000
   1082c:	ldr	pc, [ip, #2084]!	; 0x824

00010830 <fclose@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #69632	; 0x11000
   10838:	ldr	pc, [ip, #2076]!	; 0x81c

0001083c <setlocale@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #69632	; 0x11000
   10844:	ldr	pc, [ip, #2068]!	; 0x814

00010848 <strrchr@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #69632	; 0x11000
   10850:	ldr	pc, [ip, #2060]!	; 0x80c

00010854 <bindtextdomain@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #69632	; 0x11000
   1085c:	ldr	pc, [ip, #2052]!	; 0x804

00010860 <isatty@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #69632	; 0x11000
   10868:	ldr	pc, [ip, #2044]!	; 0x7fc

0001086c <abort@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #69632	; 0x11000
   10874:	ldr	pc, [ip, #2036]!	; 0x7f4

00010878 <close@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #69632	; 0x11000
   10880:	ldr	pc, [ip, #2028]!	; 0x7ec

Disassembly of section .text:

00010884 <.text>:
   10884:	push	{r4, r5, r6, r7, r8, lr}
   10888:	mov	r4, r1
   1088c:	ldr	r6, [r1]
   10890:	mov	r5, r0
   10894:	mov	r1, #47	; 0x2f
   10898:	mov	r0, r6
   1089c:	bl	10848 <strrchr@plt>
   108a0:	ldr	r7, [pc, #420]	; 10a4c <close@plt+0x1d4>
   108a4:	ldr	r1, [pc, #420]	; 10a50 <close@plt+0x1d8>
   108a8:	cmp	r0, #0
   108ac:	addne	r6, r0, #1
   108b0:	mov	r0, #6
   108b4:	str	r6, [r7]
   108b8:	bl	1083c <setlocale@plt>
   108bc:	ldr	r1, [pc, #400]	; 10a54 <close@plt+0x1dc>
   108c0:	ldr	r0, [pc, #400]	; 10a58 <close@plt+0x1e0>
   108c4:	bl	10854 <bindtextdomain@plt>
   108c8:	ldr	r0, [pc, #392]	; 10a58 <close@plt+0x1e0>
   108cc:	bl	10794 <textdomain@plt>
   108d0:	ldr	r6, [pc, #388]	; 10a5c <close@plt+0x1e4>
   108d4:	b	108e8 <close@plt+0x70>
   108d8:	cmp	r0, #86	; 0x56
   108dc:	beq	10a18 <close@plt+0x1a0>
   108e0:	cmp	r0, #104	; 0x68
   108e4:	beq	10a10 <close@plt+0x198>
   108e8:	mov	r2, r6
   108ec:	mov	r1, r4
   108f0:	mov	r0, r5
   108f4:	bl	107f4 <getopt@plt>
   108f8:	cmn	r0, #1
   108fc:	bne	108d8 <close@plt+0x60>
   10900:	ldr	r3, [pc, #344]	; 10a60 <close@plt+0x1e8>
   10904:	ldr	r3, [r3]
   10908:	cmp	r3, r5
   1090c:	beq	10a44 <close@plt+0x1cc>
   10910:	ldr	r4, [r4, r3, lsl #2]
   10914:	ldr	r1, [pc, #328]	; 10a64 <close@plt+0x1ec>
   10918:	mov	r0, r4
   1091c:	bl	10758 <strcmp@plt>
   10920:	cmp	r0, #0
   10924:	ldreq	r5, [pc, #316]	; 10a68 <close@plt+0x1f0>
   10928:	beq	1096c <close@plt+0xf4>
   1092c:	ldr	r1, [pc, #312]	; 10a6c <close@plt+0x1f4>
   10930:	mov	r0, r4
   10934:	bl	10758 <strcmp@plt>
   10938:	cmp	r0, #0
   1093c:	beq	109a4 <close@plt+0x12c>
   10940:	ldr	r1, [pc, #296]	; 10a70 <close@plt+0x1f8>
   10944:	mov	r0, r4
   10948:	bl	10770 <fopen@plt>
   1094c:	subs	r5, r0, #0
   10950:	beq	109f8 <close@plt+0x180>
   10954:	mov	r0, r5
   10958:	mov	r1, r4
   1095c:	bl	10bdc <close@plt+0x364>
   10960:	mov	r0, r5
   10964:	bl	10830 <fclose@plt>
   10968:	ldr	r5, [pc, #260]	; 10a74 <close@plt+0x1fc>
   1096c:	mov	r0, #0
   10970:	bl	10e48 <close@plt+0x5d0>
   10974:	subs	r4, r0, #0
   10978:	blt	109d4 <close@plt+0x15c>
   1097c:	mov	r2, r5
   10980:	ldr	r1, [pc, #240]	; 10a78 <close@plt+0x200>
   10984:	mov	r0, r4
   10988:	bl	107a0 <ioctl@plt>
   1098c:	cmn	r0, #1
   10990:	beq	109bc <close@plt+0x144>
   10994:	mov	r0, r4
   10998:	bl	10878 <close@plt>
   1099c:	mov	r0, #0
   109a0:	pop	{r4, r5, r6, r7, r8, pc}
   109a4:	ldr	r3, [pc, #208]	; 10a7c <close@plt+0x204>
   109a8:	ldr	r1, [pc, #208]	; 10a80 <close@plt+0x208>
   109ac:	ldr	r5, [pc, #192]	; 10a74 <close@plt+0x1fc>
   109b0:	ldr	r0, [r3]
   109b4:	bl	10bdc <close@plt+0x364>
   109b8:	b	1096c <close@plt+0xf4>
   109bc:	bl	10800 <__errno_location@plt>
   109c0:	ldr	r2, [pc, #188]	; 10a84 <close@plt+0x20c>
   109c4:	ldr	r1, [r0]
   109c8:	mov	r0, #1
   109cc:	bl	1100c <close@plt+0x794>
   109d0:	b	10994 <close@plt+0x11c>
   109d4:	mov	r2, #5
   109d8:	ldr	r1, [pc, #168]	; 10a88 <close@plt+0x210>
   109dc:	mov	r0, #0
   109e0:	bl	1077c <dcgettext@plt>
   109e4:	mov	r1, #0
   109e8:	mov	r2, r0
   109ec:	mov	r0, #1
   109f0:	bl	1100c <close@plt+0x794>
   109f4:	b	1097c <close@plt+0x104>
   109f8:	bl	10800 <__errno_location@plt>
   109fc:	ldr	r2, [pc, #136]	; 10a8c <close@plt+0x214>
   10a00:	ldr	r1, [r0]
   10a04:	mov	r0, #1
   10a08:	bl	1100c <close@plt+0x794>
   10a0c:	b	10954 <close@plt+0xdc>
   10a10:	mov	r0, #0
   10a14:	bl	10b88 <close@plt+0x310>
   10a18:	mov	r2, #5
   10a1c:	ldr	r1, [pc, #108]	; 10a90 <close@plt+0x218>
   10a20:	mov	r0, #0
   10a24:	bl	1077c <dcgettext@plt>
   10a28:	ldr	r2, [r7]
   10a2c:	ldr	r3, [pc, #96]	; 10a94 <close@plt+0x21c>
   10a30:	mov	r1, r0
   10a34:	mov	r0, #1
   10a38:	bl	10818 <__printf_chk@plt>
   10a3c:	mov	r0, #0
   10a40:	bl	107e8 <exit@plt>
   10a44:	mov	r0, #1
   10a48:	bl	10b88 <close@plt+0x310>
   10a4c:	strdeq	r2, [r2], -r8
   10a50:	andeq	r1, r1, r0, asr r3
   10a54:	andeq	r1, r1, r4, asr r3
   10a58:	andeq	r1, r1, r8, ror #6
   10a5c:	andeq	r1, r1, r4, lsl #7
   10a60:	strheq	r2, [r2], -r0
   10a64:	andeq	r1, r1, r8, lsl #7
   10a68:	andeq	r2, r2, ip, ror r0
   10a6c:	andeq	r1, r1, ip, lsl #7
   10a70:	muleq	r1, r8, r3
   10a74:	andeq	r2, r2, r8, asr #1
   10a78:	andeq	r4, r0, r1, ror fp
   10a7c:	andeq	r2, r2, r0, asr #1
   10a80:	muleq	r1, r0, r3
   10a84:	ldrdeq	r1, [r1], -ip
   10a88:	andeq	r1, r1, r4, lsr #7
   10a8c:	muleq	r1, ip, r3
   10a90:	andeq	r1, r1, ip, ror #6
   10a94:	andeq	r1, r1, r8, ror r3
   10a98:	mov	fp, #0
   10a9c:	mov	lr, #0
   10aa0:	pop	{r1}		; (ldr r1, [sp], #4)
   10aa4:	mov	r2, sp
   10aa8:	push	{r2}		; (str r2, [sp, #-4]!)
   10aac:	push	{r0}		; (str r0, [sp, #-4]!)
   10ab0:	ldr	ip, [pc, #16]	; 10ac8 <close@plt+0x250>
   10ab4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ab8:	ldr	r0, [pc, #12]	; 10acc <close@plt+0x254>
   10abc:	ldr	r3, [pc, #12]	; 10ad0 <close@plt+0x258>
   10ac0:	bl	107ac <__libc_start_main@plt>
   10ac4:	bl	1086c <abort@plt>
   10ac8:	andeq	r1, r1, ip, lsl #2
   10acc:	andeq	r0, r1, r4, lsl #17
   10ad0:	andeq	r1, r1, ip, lsr #1
   10ad4:	ldr	r3, [pc, #20]	; 10af0 <close@plt+0x278>
   10ad8:	ldr	r2, [pc, #20]	; 10af4 <close@plt+0x27c>
   10adc:	add	r3, pc, r3
   10ae0:	ldr	r2, [r3, r2]
   10ae4:	cmp	r2, #0
   10ae8:	bxeq	lr
   10aec:	b	107d0 <__gmon_start__@plt>
   10af0:	andeq	r1, r1, ip, lsl r5
   10af4:	andeq	r0, r0, r0, ror r0
   10af8:	ldr	r0, [pc, #24]	; 10b18 <close@plt+0x2a0>
   10afc:	ldr	r3, [pc, #24]	; 10b1c <close@plt+0x2a4>
   10b00:	cmp	r3, r0
   10b04:	bxeq	lr
   10b08:	ldr	r3, [pc, #16]	; 10b20 <close@plt+0x2a8>
   10b0c:	cmp	r3, #0
   10b10:	bxeq	lr
   10b14:	bx	r3
   10b18:	andeq	r2, r2, ip, lsr #1
   10b1c:	andeq	r2, r2, ip, lsr #1
   10b20:	andeq	r0, r0, r0
   10b24:	ldr	r0, [pc, #36]	; 10b50 <close@plt+0x2d8>
   10b28:	ldr	r1, [pc, #36]	; 10b54 <close@plt+0x2dc>
   10b2c:	sub	r1, r1, r0
   10b30:	asr	r1, r1, #2
   10b34:	add	r1, r1, r1, lsr #31
   10b38:	asrs	r1, r1, #1
   10b3c:	bxeq	lr
   10b40:	ldr	r3, [pc, #16]	; 10b58 <close@plt+0x2e0>
   10b44:	cmp	r3, #0
   10b48:	bxeq	lr
   10b4c:	bx	r3
   10b50:	andeq	r2, r2, ip, lsr #1
   10b54:	andeq	r2, r2, ip, lsr #1
   10b58:	andeq	r0, r0, r0
   10b5c:	push	{r4, lr}
   10b60:	ldr	r4, [pc, #24]	; 10b80 <close@plt+0x308>
   10b64:	ldrb	r3, [r4]
   10b68:	cmp	r3, #0
   10b6c:	popne	{r4, pc}
   10b70:	bl	10af8 <close@plt+0x280>
   10b74:	mov	r3, #1
   10b78:	strb	r3, [r4]
   10b7c:	pop	{r4, pc}
   10b80:	andeq	r2, r2, r4, asr #1
   10b84:	b	10b24 <close@plt+0x2ac>
   10b88:	ldr	r3, [pc, #64]	; 10bd0 <close@plt+0x358>
   10b8c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b90:	mov	r4, r0
   10b94:	sub	sp, sp, #12
   10b98:	mov	r2, #5
   10b9c:	ldr	r1, [pc, #48]	; 10bd4 <close@plt+0x35c>
   10ba0:	mov	r0, #0
   10ba4:	ldr	r5, [r3]
   10ba8:	bl	1077c <dcgettext@plt>
   10bac:	ldr	r3, [pc, #36]	; 10bd8 <close@plt+0x360>
   10bb0:	mov	r1, #1
   10bb4:	ldr	r3, [r3]
   10bb8:	str	r3, [sp]
   10bbc:	mov	r2, r0
   10bc0:	mov	r0, r5
   10bc4:	bl	10824 <__fprintf_chk@plt>
   10bc8:	mov	r0, r4
   10bcc:	bl	107e8 <exit@plt>
   10bd0:	strheq	r2, [r2], -r8
   10bd4:	andeq	r1, r1, ip, lsl r1
   10bd8:	strdeq	r2, [r2], -r8
   10bdc:	ldr	r3, [pc, #384]	; 10d64 <close@plt+0x4ec>
   10be0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10be4:	mov	r5, r0
   10be8:	ldr	r8, [pc, #376]	; 10d68 <close@plt+0x4f0>
   10bec:	ldr	r9, [pc, #376]	; 10d6c <close@plt+0x4f4>
   10bf0:	ldr	sl, [pc, #376]	; 10d70 <close@plt+0x4f8>
   10bf4:	ldr	fp, [pc, #376]	; 10d74 <close@plt+0x4fc>
   10bf8:	sub	sp, sp, #20
   10bfc:	ldr	r3, [r3]
   10c00:	mov	r7, r1
   10c04:	mov	r6, #0
   10c08:	str	r3, [sp, #12]
   10c0c:	add	r6, r6, #1
   10c10:	mov	r4, #0
   10c14:	b	10c98 <close@plt+0x420>
   10c18:	mov	r2, #5
   10c1c:	mov	r1, sl
   10c20:	mov	r0, #0
   10c24:	bl	1077c <dcgettext@plt>
   10c28:	add	r3, r4, #1
   10c2c:	str	r3, [sp, #4]
   10c30:	str	r6, [sp]
   10c34:	mov	r3, r7
   10c38:	mov	r1, #0
   10c3c:	mov	r2, r0
   10c40:	mov	r0, #1
   10c44:	bl	1100c <close@plt+0x794>
   10c48:	add	r3, r4, r4, lsl #1
   10c4c:	ldr	r2, [sp, #8]
   10c50:	cmp	r4, #15
   10c54:	mov	r0, r5
   10c58:	strb	r2, [r8, r3]
   10c5c:	beq	10cd0 <close@plt+0x458>
   10c60:	bl	1080c <fgetc@plt>
   10c64:	cmp	r0, #44	; 0x2c
   10c68:	beq	10c94 <close@plt+0x41c>
   10c6c:	mov	r2, #5
   10c70:	mov	r1, fp
   10c74:	mov	r0, #0
   10c78:	bl	1077c <dcgettext@plt>
   10c7c:	str	r6, [sp]
   10c80:	mov	r3, r7
   10c84:	mov	r1, #0
   10c88:	mov	r2, r0
   10c8c:	mov	r0, #1
   10c90:	bl	1100c <close@plt+0x794>
   10c94:	add	r4, r4, #1
   10c98:	add	r2, sp, #8
   10c9c:	mov	r1, r9
   10ca0:	mov	r0, r5
   10ca4:	bl	10764 <__isoc99_fscanf@plt>
   10ca8:	cmp	r0, #1
   10cac:	beq	10c48 <close@plt+0x3d0>
   10cb0:	cmn	r0, #1
   10cb4:	bne	10c18 <close@plt+0x3a0>
   10cb8:	bl	10800 <__errno_location@plt>
   10cbc:	ldr	r2, [pc, #180]	; 10d78 <close@plt+0x500>
   10cc0:	ldr	r1, [r0]
   10cc4:	mov	r0, #1
   10cc8:	bl	1100c <close@plt+0x794>
   10ccc:	b	10c18 <close@plt+0x3a0>
   10cd0:	bl	1080c <fgetc@plt>
   10cd4:	cmn	r0, #1
   10cd8:	beq	10d0c <close@plt+0x494>
   10cdc:	cmp	r0, #10
   10ce0:	bne	10d34 <close@plt+0x4bc>
   10ce4:	cmp	r6, #3
   10ce8:	add	r8, r8, #1
   10cec:	bne	10c0c <close@plt+0x394>
   10cf0:	ldr	r3, [pc, #108]	; 10d64 <close@plt+0x4ec>
   10cf4:	ldr	r2, [sp, #12]
   10cf8:	ldr	r3, [r3]
   10cfc:	cmp	r2, r3
   10d00:	bne	10d60 <close@plt+0x4e8>
   10d04:	add	sp, sp, #20
   10d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d0c:	mov	r2, #5
   10d10:	ldr	r1, [pc, #100]	; 10d7c <close@plt+0x504>
   10d14:	mov	r0, #0
   10d18:	bl	1077c <dcgettext@plt>
   10d1c:	str	r6, [sp]
   10d20:	mov	r3, r7
   10d24:	mov	r1, #0
   10d28:	mov	r2, r0
   10d2c:	mov	r0, #1
   10d30:	bl	1100c <close@plt+0x794>
   10d34:	mov	r2, #5
   10d38:	ldr	r1, [pc, #64]	; 10d80 <close@plt+0x508>
   10d3c:	mov	r0, #0
   10d40:	bl	1077c <dcgettext@plt>
   10d44:	str	r6, [sp]
   10d48:	mov	r3, r7
   10d4c:	mov	r1, #0
   10d50:	mov	r2, r0
   10d54:	mov	r0, #1
   10d58:	bl	1100c <close@plt+0x794>
   10d5c:	b	10ce4 <close@plt+0x46c>
   10d60:	bl	10788 <__stack_chk_fail@plt>
   10d64:	andeq	r1, r2, r8, lsl #30
   10d68:	andeq	r2, r2, r8, asr #1
   10d6c:	andeq	r1, r1, ip, lsl #5
   10d70:	muleq	r1, r8, r2
   10d74:	andeq	r1, r1, ip, asr #5
   10d78:	muleq	r1, r0, r2
   10d7c:	andeq	r1, r1, r4, lsl #6
   10d80:	andeq	r1, r1, r0, lsr r3
   10d84:	push	{r4, lr}
   10d88:	mov	r1, #2
   10d8c:	mov	r4, r0
   10d90:	bl	107dc <open@plt>
   10d94:	cmp	r0, #0
   10d98:	popge	{r4, pc}
   10d9c:	mov	r1, #1
   10da0:	mov	r0, r4
   10da4:	bl	107dc <open@plt>
   10da8:	cmp	r0, #0
   10dac:	popge	{r4, pc}
   10db0:	mov	r0, r4
   10db4:	mov	r1, #0
   10db8:	bl	107dc <open@plt>
   10dbc:	orr	r0, r0, r0, asr #31
   10dc0:	pop	{r4, pc}
   10dc4:	push	{r4, r5, lr}
   10dc8:	sub	sp, sp, #12
   10dcc:	ldr	r4, [pc, #108]	; 10e40 <close@plt+0x5c8>
   10dd0:	mov	r3, #0
   10dd4:	strb	r3, [sp, #3]
   10dd8:	ldr	r3, [r4]
   10ddc:	mov	r5, r0
   10de0:	str	r3, [sp, #4]
   10de4:	bl	10860 <isatty@plt>
   10de8:	cmp	r0, #0
   10dec:	bne	10e0c <close@plt+0x594>
   10df0:	mov	r0, #0
   10df4:	ldr	r2, [sp, #4]
   10df8:	ldr	r3, [r4]
   10dfc:	cmp	r2, r3
   10e00:	bne	10e3c <close@plt+0x5c4>
   10e04:	add	sp, sp, #12
   10e08:	pop	{r4, r5, pc}
   10e0c:	mov	r0, r5
   10e10:	add	r2, sp, #3
   10e14:	ldr	r1, [pc, #40]	; 10e44 <close@plt+0x5cc>
   10e18:	bl	107a0 <ioctl@plt>
   10e1c:	cmp	r0, #0
   10e20:	bne	10df0 <close@plt+0x578>
   10e24:	ldrb	r0, [sp, #3]
   10e28:	sub	r0, r0, #1
   10e2c:	cmp	r0, #1
   10e30:	movhi	r0, #0
   10e34:	movls	r0, #1
   10e38:	b	10df4 <close@plt+0x57c>
   10e3c:	bl	10788 <__stack_chk_fail@plt>
   10e40:	andeq	r1, r2, r8, lsl #30
   10e44:	andeq	r4, r0, r3, lsr fp
   10e48:	push	{r4, r5, r6, lr}
   10e4c:	subs	r5, r0, #0
   10e50:	beq	10e74 <close@plt+0x5fc>
   10e54:	bl	10d84 <close@plt+0x50c>
   10e58:	subs	r4, r0, #0
   10e5c:	blt	10f0c <close@plt+0x694>
   10e60:	bl	10dc4 <close@plt+0x54c>
   10e64:	cmp	r0, #0
   10e68:	beq	10f04 <close@plt+0x68c>
   10e6c:	mov	r0, r4
   10e70:	pop	{r4, r5, r6, pc}
   10e74:	ldr	r5, [pc, #196]	; 10f40 <close@plt+0x6c8>
   10e78:	ldr	r0, [pc, #196]	; 10f44 <close@plt+0x6cc>
   10e7c:	b	10e8c <close@plt+0x614>
   10e80:	ldr	r0, [r5], #4
   10e84:	cmp	r0, #0
   10e88:	beq	10eb8 <close@plt+0x640>
   10e8c:	bl	10d84 <close@plt+0x50c>
   10e90:	subs	r4, r0, #0
   10e94:	blt	10e80 <close@plt+0x608>
   10e98:	bl	10dc4 <close@plt+0x54c>
   10e9c:	cmp	r0, #0
   10ea0:	bne	10e6c <close@plt+0x5f4>
   10ea4:	mov	r0, r4
   10ea8:	bl	10878 <close@plt>
   10eac:	ldr	r0, [r5], #4
   10eb0:	cmp	r0, #0
   10eb4:	bne	10e8c <close@plt+0x614>
   10eb8:	mov	r4, r0
   10ebc:	mov	r0, r4
   10ec0:	bl	10dc4 <close@plt+0x54c>
   10ec4:	cmp	r0, #0
   10ec8:	bne	10e6c <close@plt+0x5f4>
   10ecc:	add	r4, r4, #1
   10ed0:	cmp	r4, #3
   10ed4:	bne	10ebc <close@plt+0x644>
   10ed8:	ldr	r3, [pc, #104]	; 10f48 <close@plt+0x6d0>
   10edc:	mov	r2, #5
   10ee0:	ldr	r1, [pc, #100]	; 10f4c <close@plt+0x6d4>
   10ee4:	ldr	r4, [r3]
   10ee8:	bl	1077c <dcgettext@plt>
   10eec:	mov	r1, #1
   10ef0:	mov	r2, r0
   10ef4:	mov	r0, r4
   10ef8:	bl	10824 <__fprintf_chk@plt>
   10efc:	mov	r0, #1
   10f00:	bl	107e8 <exit@plt>
   10f04:	mov	r0, r4
   10f08:	bl	10878 <close@plt>
   10f0c:	ldr	r3, [pc, #52]	; 10f48 <close@plt+0x6d0>
   10f10:	mov	r2, #5
   10f14:	ldr	r1, [pc, #52]	; 10f50 <close@plt+0x6d8>
   10f18:	mov	r0, #0
   10f1c:	ldr	r4, [r3]
   10f20:	bl	1077c <dcgettext@plt>
   10f24:	mov	r3, r5
   10f28:	mov	r1, #1
   10f2c:	mov	r2, r0
   10f30:	mov	r0, r4
   10f34:	bl	10824 <__fprintf_chk@plt>
   10f38:	mov	r0, #1
   10f3c:	bl	107e8 <exit@plt>
   10f40:	andeq	r1, r1, r8, ror #7
   10f44:	andeq	r1, r1, r0, lsl #8
   10f48:	strheq	r2, [r2], -r8
   10f4c:	andeq	r1, r1, r4, lsr #8
   10f50:	andeq	r1, r1, r0, lsl r4
   10f54:	push	{r1, r2, r3}
   10f58:	push	{r4, r5, r6, r7, lr}
   10f5c:	sub	sp, sp, #8
   10f60:	ldr	r5, [pc, #144]	; 10ff8 <close@plt+0x780>
   10f64:	ldr	r4, [pc, #144]	; 10ffc <close@plt+0x784>
   10f68:	ldr	r3, [pc, #144]	; 11000 <close@plt+0x788>
   10f6c:	ldr	r1, [r5]
   10f70:	ldr	r7, [sp, #28]
   10f74:	add	ip, sp, #32
   10f78:	mov	r6, r0
   10f7c:	ldr	r3, [r3]
   10f80:	ldr	r2, [pc, #124]	; 11004 <close@plt+0x78c>
   10f84:	str	r1, [sp, #4]
   10f88:	ldr	r0, [r4]
   10f8c:	mov	r1, #1
   10f90:	str	ip, [sp]
   10f94:	bl	10824 <__fprintf_chk@plt>
   10f98:	mov	r2, r7
   10f9c:	ldr	r0, [r4]
   10fa0:	ldr	r3, [sp]
   10fa4:	mov	r1, #1
   10fa8:	bl	107c4 <__vfprintf_chk@plt>
   10fac:	cmp	r6, #0
   10fb0:	ble	10fd4 <close@plt+0x75c>
   10fb4:	mov	r0, r6
   10fb8:	ldr	r4, [r4]
   10fbc:	bl	107b8 <strerror@plt>
   10fc0:	ldr	r2, [pc, #64]	; 11008 <close@plt+0x790>
   10fc4:	mov	r1, #1
   10fc8:	mov	r3, r0
   10fcc:	mov	r0, r4
   10fd0:	bl	10824 <__fprintf_chk@plt>
   10fd4:	ldr	r2, [sp, #4]
   10fd8:	ldr	r3, [r5]
   10fdc:	cmp	r2, r3
   10fe0:	bne	10ff4 <close@plt+0x77c>
   10fe4:	add	sp, sp, #8
   10fe8:	pop	{r4, r5, r6, r7, lr}
   10fec:	add	sp, sp, #12
   10ff0:	bx	lr
   10ff4:	bl	10788 <__stack_chk_fail@plt>
   10ff8:	andeq	r1, r2, r8, lsl #30
   10ffc:	strheq	r2, [r2], -r8
   11000:	strdeq	r2, [r2], -r8
   11004:	andeq	r1, r1, r0, lsr #9
   11008:	andeq	r1, r1, r8, lsr #9
   1100c:	push	{r2, r3}
   11010:	mov	r5, r1
   11014:	ldr	r2, [pc, #124]	; 11098 <close@plt+0x820>
   11018:	push	{r7, lr}
   1101c:	sub	sp, sp, #8
   11020:	ldr	r4, [pc, #116]	; 1109c <close@plt+0x824>
   11024:	ldr	r3, [pc, #116]	; 110a0 <close@plt+0x828>
   11028:	ldr	lr, [r2]
   1102c:	ldr	r7, [sp, #16]
   11030:	add	ip, sp, #20
   11034:	ldr	r3, [r3]
   11038:	ldr	r2, [pc, #100]	; 110a4 <close@plt+0x82c>
   1103c:	mov	r1, #1
   11040:	mov	r6, r0
   11044:	ldr	r0, [r4]
   11048:	str	lr, [sp, #4]
   1104c:	str	ip, [sp]
   11050:	bl	10824 <__fprintf_chk@plt>
   11054:	mov	r2, r7
   11058:	ldr	r0, [r4]
   1105c:	ldr	r3, [sp]
   11060:	mov	r1, #1
   11064:	bl	107c4 <__vfprintf_chk@plt>
   11068:	cmp	r5, #0
   1106c:	ble	11090 <close@plt+0x818>
   11070:	mov	r0, r5
   11074:	ldr	r4, [r4]
   11078:	bl	107b8 <strerror@plt>
   1107c:	ldr	r2, [pc, #36]	; 110a8 <close@plt+0x830>
   11080:	mov	r1, #1
   11084:	mov	r3, r0
   11088:	mov	r0, r4
   1108c:	bl	10824 <__fprintf_chk@plt>
   11090:	mov	r0, r6
   11094:	bl	107e8 <exit@plt>
   11098:	andeq	r1, r2, r8, lsl #30
   1109c:	strheq	r2, [r2], -r8
   110a0:	strdeq	r2, [r2], -r8
   110a4:	andeq	r1, r1, r0, lsr #9
   110a8:	andeq	r1, r1, r8, lsr #9
   110ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110b0:	mov	r7, r0
   110b4:	ldr	r6, [pc, #72]	; 11104 <close@plt+0x88c>
   110b8:	ldr	r5, [pc, #72]	; 11108 <close@plt+0x890>
   110bc:	add	r6, pc, r6
   110c0:	add	r5, pc, r5
   110c4:	sub	r6, r6, r5
   110c8:	mov	r8, r1
   110cc:	mov	r9, r2
   110d0:	bl	10738 <strcmp@plt-0x20>
   110d4:	asrs	r6, r6, #2
   110d8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   110dc:	mov	r4, #0
   110e0:	add	r4, r4, #1
   110e4:	ldr	r3, [r5], #4
   110e8:	mov	r2, r9
   110ec:	mov	r1, r8
   110f0:	mov	r0, r7
   110f4:	blx	r3
   110f8:	cmp	r6, r4
   110fc:	bne	110e0 <close@plt+0x868>
   11100:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11104:	andeq	r0, r1, r0, asr #28
   11108:	andeq	r0, r1, r8, lsr lr
   1110c:	bx	lr

Disassembly of section .fini:

00011110 <.fini>:
   11110:	push	{r3, lr}
   11114:	pop	{r3, pc}
