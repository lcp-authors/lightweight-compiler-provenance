
raspbian-preinstalled/xmodmap:     file format elf32-littlearm


Disassembly of section .init:

00010da8 <.init>:
   10da8:	push	{r3, lr}
   10dac:	bl	11984 <abort@plt+0x958>
   10db0:	pop	{r3, pc}

Disassembly of section .plt:

00010db4 <strcmp@plt-0x14>:
   10db4:	push	{lr}		; (str lr, [sp, #-4]!)
   10db8:	ldr	lr, [pc, #4]	; 10dc4 <strcmp@plt-0x4>
   10dbc:	add	lr, pc, lr
   10dc0:	ldr	pc, [lr, #8]!
   10dc4:	andeq	r5, r1, ip, lsr r2

00010dc8 <strcmp@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #572]!	; 0x23c

00010dd4 <fopen@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #564]!	; 0x234

00010de0 <XChangeKeyboardMapping@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #556]!	; 0x22c

00010dec <free@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #548]!	; 0x224

00010df8 <fgets@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #540]!	; 0x21c

00010e04 <XEventsQueued@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #532]!	; 0x214

00010e10 <XInsertModifiermapEntry@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #524]!	; 0x20c

00010e1c <sleep@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #516]!	; 0x204

00010e28 <strdup@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #508]!	; 0x1fc

00010e34 <__stack_chk_fail@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #500]!	; 0x1f4

00010e40 <XFree@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #492]!	; 0x1ec

00010e4c <realloc@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #484]!	; 0x1e4

00010e58 <fwrite@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #476]!	; 0x1dc

00010e64 <XSetModifierMapping@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #468]!	; 0x1d4

00010e70 <__asprintf_chk@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #460]!	; 0x1cc

00010e7c <puts@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #452]!	; 0x1c4

00010e88 <malloc@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #444]!	; 0x1bc

00010e94 <__libc_start_main@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea0 <XOpenDisplay@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #428]!	; 0x1ac

00010eac <__ctype_tolower_loc@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #420]!	; 0x1a4

00010eb8 <__gmon_start__@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #412]!	; 0x19c

00010ec4 <XGetModifierMapping@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #404]!	; 0x194

00010ed0 <__ctype_b_loc@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #396]!	; 0x18c

00010edc <exit@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #388]!	; 0x184

00010ee8 <XQueryPointer@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #380]!	; 0x17c

00010ef4 <strlen@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #372]!	; 0x174

00010f00 <XGetPointerMapping@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #364]!	; 0x16c

00010f0c <XNextEvent@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #356]!	; 0x164

00010f18 <XQueryKeymap@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #348]!	; 0x15c

00010f24 <strncasecmp@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #340]!	; 0x154

00010f30 <XDisplayName@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #332]!	; 0x14c

00010f3c <putchar@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #324]!	; 0x144

00010f48 <strncpy@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #316]!	; 0x13c

00010f54 <XSetPointerMapping@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #308]!	; 0x134

00010f60 <XRefreshKeyboardMapping@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #300]!	; 0x12c

00010f6c <XSync@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #292]!	; 0x124

00010f78 <__printf_chk@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #284]!	; 0x11c

00010f84 <__fprintf_chk@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #86016	; 0x15000
   10f8c:	ldr	pc, [ip, #276]!	; 0x114

00010f90 <fclose@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #86016	; 0x15000
   10f98:	ldr	pc, [ip, #268]!	; 0x10c

00010f9c <XKeycodeToKeysym@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #86016	; 0x15000
   10fa4:	ldr	pc, [ip, #260]!	; 0x104

00010fa8 <XDisplayKeycodes@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #86016	; 0x15000
   10fb0:	ldr	pc, [ip, #252]!	; 0xfc

00010fb4 <XDeleteModifiermapEntry@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #86016	; 0x15000
   10fbc:	ldr	pc, [ip, #244]!	; 0xf4

00010fc0 <XGetKeyboardMapping@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #86016	; 0x15000
   10fc8:	ldr	pc, [ip, #236]!	; 0xec

00010fcc <fputc@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #86016	; 0x15000
   10fd4:	ldr	pc, [ip, #228]!	; 0xe4

00010fd8 <XCheckTypedEvent@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #86016	; 0x15000
   10fe0:	ldr	pc, [ip, #220]!	; 0xdc

00010fe4 <sscanf@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #86016	; 0x15000
   10fec:	ldr	pc, [ip, #212]!	; 0xd4

00010ff0 <putc@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #86016	; 0x15000
   10ff8:	ldr	pc, [ip, #204]!	; 0xcc

00010ffc <XStringToKeysym@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #86016	; 0x15000
   11004:	ldr	pc, [ip, #196]!	; 0xc4

00011008 <XCloseDisplay@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #86016	; 0x15000
   11010:	ldr	pc, [ip, #188]!	; 0xbc

00011014 <XKeysymToString@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #86016	; 0x15000
   1101c:	ldr	pc, [ip, #180]!	; 0xb4

00011020 <strncmp@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #86016	; 0x15000
   11028:	ldr	pc, [ip, #172]!	; 0xac

0001102c <abort@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #86016	; 0x15000
   11034:	ldr	pc, [ip, #164]!	; 0xa4

Disassembly of section .text:

00011038 <.text>:
   11038:	push	{r4, lr}
   1103c:	mov	r5, r0
   11040:	ldr	r4, [pc, #48]	; 11078 <abort@plt+0x4c>
   11044:	ldr	r3, [pc, #48]	; 1107c <abort@plt+0x50>
   11048:	ldr	r2, [pc, #48]	; 11080 <abort@plt+0x54>
   1104c:	mov	r1, #1
   11050:	ldr	r3, [r3]
   11054:	ldr	r0, [r4]
   11058:	bl	10f84 <__fprintf_chk@plt>
   1105c:	ldr	r0, [r4]
   11060:	ldr	r3, [pc, #28]	; 11084 <abort@plt+0x58>
   11064:	ldr	r2, [pc, #28]	; 11088 <abort@plt+0x5c>
   11068:	mov	r1, #1
   1106c:	bl	10f84 <__fprintf_chk@plt>
   11070:	mov	r0, r5
   11074:	bl	14688 <abort@plt+0x365c>
   11078:			; <UNDEFINED> instruction: 0x000261b8
   1107c:	strdeq	r6, [r2], -ip
   11080:	andeq	r5, r1, r8, lsl sl
   11084:	andeq	r5, r1, r8, asr r3
   11088:			; <UNDEFINED> instruction: 0x00015ab4
   1108c:	ldr	r2, [pc, #40]	; 110bc <abort@plt+0x90>
   11090:	ldr	r3, [pc, #40]	; 110c0 <abort@plt+0x94>
   11094:	push	{lr}		; (str lr, [sp, #-4]!)
   11098:	sub	sp, sp, #12
   1109c:	mov	r1, #1
   110a0:	str	r0, [sp]
   110a4:	ldr	r0, [r2]
   110a8:	ldr	r3, [r3]
   110ac:	ldr	r2, [pc, #16]	; 110c4 <abort@plt+0x98>
   110b0:	bl	10f84 <__fprintf_chk@plt>
   110b4:	mov	r0, #1
   110b8:	bl	11038 <abort@plt+0xc>
   110bc:			; <UNDEFINED> instruction: 0x000261b8
   110c0:	strdeq	r6, [r2], -ip
   110c4:	andeq	r5, r1, r0, asr #20
   110c8:	ldr	r2, [pc, #40]	; 110f8 <abort@plt+0xcc>
   110cc:	ldr	r3, [pc, #40]	; 110fc <abort@plt+0xd0>
   110d0:	push	{lr}		; (str lr, [sp, #-4]!)
   110d4:	sub	sp, sp, #12
   110d8:	mov	r1, #1
   110dc:	str	r0, [sp]
   110e0:	ldr	r0, [r2]
   110e4:	ldr	r3, [r3]
   110e8:	ldr	r2, [pc, #16]	; 11100 <abort@plt+0xd4>
   110ec:	bl	10f84 <__fprintf_chk@plt>
   110f0:	mov	r0, #1
   110f4:	bl	11038 <abort@plt+0xc>
   110f8:			; <UNDEFINED> instruction: 0x000261b8
   110fc:	strdeq	r6, [r2], -ip
   11100:	andeq	r5, r1, r0, ror #20
   11104:	ldr	r3, [pc, #2012]	; 118e8 <abort@plt+0x8bc>
   11108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1110c:	sub	sp, sp, #60	; 0x3c
   11110:	ldr	r7, [pc, #2004]	; 118ec <abort@plt+0x8c0>
   11114:	ldr	r2, [r1]
   11118:	ldr	r3, [r3]
   1111c:	cmp	r0, #1
   11120:	mov	r4, r1
   11124:	mov	r5, r0
   11128:	str	r2, [r7]
   1112c:	str	r3, [sp, #52]	; 0x34
   11130:	ble	117a0 <abort@plt+0x774>
   11134:	ldr	r9, [pc, #1972]	; 118f0 <abort@plt+0x8c4>
   11138:	mov	r8, #0
   1113c:	mov	r6, #1
   11140:	b	11150 <abort@plt+0x124>
   11144:	add	r6, r6, #1
   11148:	cmp	r5, r6
   1114c:	ble	111a4 <abort@plt+0x178>
   11150:	ldr	r0, [r4, r6, lsl #2]
   11154:	lsl	r2, r6, #2
   11158:	ldrb	r3, [r0]
   1115c:	cmp	r3, #45	; 0x2d
   11160:	bne	11144 <abort@plt+0x118>
   11164:	ldrb	r3, [r0, #1]
   11168:	cmp	r3, #103	; 0x67
   1116c:	beq	11360 <abort@plt+0x334>
   11170:	bhi	1132c <abort@plt+0x300>
   11174:	cmp	r3, #63	; 0x3f
   11178:	beq	118d8 <abort@plt+0x8ac>
   1117c:	cmp	r3, #100	; 0x64
   11180:	bne	11144 <abort@plt+0x118>
   11184:	add	r6, r6, #1
   11188:	cmp	r5, r6
   1118c:	ble	118d4 <abort@plt+0x8a8>
   11190:	add	r2, r4, r2
   11194:	add	r6, r6, #1
   11198:	cmp	r5, r6
   1119c:	ldr	r8, [r2, #4]
   111a0:	bgt	11150 <abort@plt+0x124>
   111a4:	mov	r0, r8
   111a8:	bl	10ea0 <XOpenDisplay@plt>
   111ac:	ldr	r9, [pc, #1856]	; 118f4 <abort@plt+0x8c8>
   111b0:	cmp	r0, #0
   111b4:	str	r0, [r9]
   111b8:	beq	1140c <abort@plt+0x3e0>
   111bc:	ldr	sl, [pc, #1844]	; 118f8 <abort@plt+0x8cc>
   111c0:	mov	r6, #1
   111c4:	mov	fp, #0
   111c8:	ldr	r2, [pc, #1836]	; 118fc <abort@plt+0x8d0>
   111cc:	ldr	r1, [pc, #1836]	; 11900 <abort@plt+0x8d4>
   111d0:	bl	10fa8 <XDisplayKeycodes@plt>
   111d4:	str	fp, [sp, #24]
   111d8:	bl	13cdc <abort@plt+0x2cb0>
   111dc:	str	fp, [sp, #20]
   111e0:	str	fp, [sp, #16]
   111e4:	str	fp, [sp, #12]
   111e8:	cmp	r6, r5
   111ec:	bge	117c0 <abort@plt+0x794>
   111f0:	ldr	r8, [r4, r6, lsl #2]
   111f4:	lsl	r2, r6, #2
   111f8:	ldrb	r3, [r8]
   111fc:	cmp	r3, #45	; 0x2d
   11200:	beq	11454 <abort@plt+0x428>
   11204:	cmp	r3, #43	; 0x2b
   11208:	bne	11640 <abort@plt+0x614>
   1120c:	ldrb	fp, [r8, #1]
   11210:	sub	r1, fp, #49	; 0x31
   11214:	cmp	r1, #66	; 0x42
   11218:	ldrls	pc, [pc, r1, lsl #2]
   1121c:	b	118e0 <abort@plt+0x8b4>
   11220:	ldrdeq	r1, [r1], -r0
   11224:	ldrdeq	r1, [r1], -r0
   11228:	ldrdeq	r1, [r1], -r0
   1122c:	ldrdeq	r1, [r1], -r0
   11230:	ldrdeq	r1, [r1], -r0
   11234:	andeq	r1, r1, r0, ror #17
   11238:	andeq	r1, r1, r0, ror #17
   1123c:	andeq	r1, r1, r0, ror #17
   11240:	andeq	r1, r1, r0, ror #17
   11244:	andeq	r1, r1, r0, ror #17
   11248:	andeq	r1, r1, r0, ror #17
   1124c:	andeq	r1, r1, r0, ror #17
   11250:	andeq	r1, r1, r0, ror #17
   11254:	andeq	r1, r1, r0, ror #17
   11258:	andeq	r1, r1, r0, ror #17
   1125c:	andeq	r1, r1, r0, ror #17
   11260:	andeq	r1, r1, r0, ror #17
   11264:	andeq	r1, r1, r0, ror #17
   11268:	andeq	r1, r1, r4, ror #6
   1126c:	andeq	r1, r1, r0, ror #17
   11270:	andeq	r1, r1, r0, ror #17
   11274:	andeq	r1, r1, r0, ror #17
   11278:	andeq	r1, r1, r0, ror #17
   1127c:	andeq	r1, r1, r0, ror #17
   11280:	andeq	r1, r1, r0, ror #17
   11284:	andeq	r1, r1, r0, ror #17
   11288:	andeq	r1, r1, r0, ror #17
   1128c:	andeq	r1, r1, r4, ror #6
   11290:	andeq	r1, r1, r0, ror #17
   11294:	andeq	r1, r1, r0, ror #17
   11298:	andeq	r1, r1, r0, ror #17
   1129c:	andeq	r1, r1, r0, ror #17
   112a0:	andeq	r1, r1, r0, ror #17
   112a4:	andeq	r1, r1, r0, ror #17
   112a8:	andeq	r1, r1, r4, ror #6
   112ac:	andeq	r1, r1, r0, ror #17
   112b0:	andeq	r1, r1, r0, ror #17
   112b4:	andeq	r1, r1, r0, ror #17
   112b8:	andeq	r1, r1, r0, ror #17
   112bc:	andeq	r1, r1, r0, ror #17
   112c0:	andeq	r1, r1, r0, ror #17
   112c4:	andeq	r1, r1, r0, ror #17
   112c8:	andeq	r1, r1, r0, ror #17
   112cc:	andeq	r1, r1, r0, ror #17
   112d0:	andeq	r1, r1, r0, ror #17
   112d4:	andeq	r1, r1, r0, ror #17
   112d8:	andeq	r1, r1, r0, ror #17
   112dc:	andeq	r1, r1, r0, ror #17
   112e0:	andeq	r1, r1, r0, ror #17
   112e4:	andeq	r1, r1, r0, ror #17
   112e8:	andeq	r1, r1, ip, ror r3
   112ec:	andeq	r1, r1, r0, ror #17
   112f0:	andeq	r1, r1, r0, ror #17
   112f4:	andeq	r1, r1, r0, ror #17
   112f8:	andeq	r1, r1, r0, ror #17
   112fc:	andeq	r1, r1, r0, ror #17
   11300:	andeq	r1, r1, r0, ror #17
   11304:	andeq	r1, r1, r0, ror #17
   11308:	andeq	r1, r1, r0, ror #17
   1130c:	andeq	r1, r1, ip, ror r3
   11310:	andeq	r1, r1, r0, ror #17
   11314:	andeq	r1, r1, r0, ror #17
   11318:	andeq	r1, r1, r0, ror #17
   1131c:	andeq	r1, r1, r0, ror #17
   11320:	andeq	r1, r1, r0, ror #17
   11324:	andeq	r1, r1, r0, ror #17
   11328:	andeq	r1, r1, ip, ror r3
   1132c:	cmp	r3, #104	; 0x68
   11330:	beq	118d8 <abort@plt+0x8ac>
   11334:	cmp	r3, #118	; 0x76
   11338:	bne	11144 <abort@plt+0x118>
   1133c:	mov	r1, r9
   11340:	bl	10dc8 <strcmp@plt>
   11344:	cmp	r0, #0
   11348:	bne	11144 <abort@plt+0x118>
   1134c:	mov	sl, r0
   11350:	ldr	r0, [pc, #1452]	; 11904 <abort@plt+0x8d8>
   11354:	bl	10e7c <puts@plt>
   11358:	mov	r0, sl
   1135c:	bl	10edc <exit@plt>
   11360:	bl	146b8 <abort@plt+0x368c>
   11364:	str	r2, [sp, #28]
   11368:	bl	10eac <__ctype_tolower_loc@plt>
   1136c:	ldr	r2, [sp, #28]
   11370:	ldr	r3, [r0]
   11374:	ldr	r3, [r3, fp, lsl #2]
   11378:	strb	r3, [r8, #1]
   1137c:	add	r6, r6, #1
   11380:	cmp	r5, r6
   11384:	ble	118d0 <abort@plt+0x8a4>
   11388:	ldrb	r1, [r8, #1]
   1138c:	cmp	r1, #115	; 0x73
   11390:	beq	11650 <abort@plt+0x624>
   11394:	ldr	r0, [pc, #1388]	; 11908 <abort@plt+0x8dc>
   11398:	cmp	r1, #108	; 0x6c
   1139c:	ldr	r3, [pc, #1384]	; 1190c <abort@plt+0x8e0>
   113a0:	moveq	r3, r0
   113a4:	add	r2, r4, r2
   113a8:	add	r0, sp, #36	; 0x24
   113ac:	ldr	r1, [r2, #4]
   113b0:	mov	r2, sl
   113b4:	str	r1, [sp]
   113b8:	mov	r1, #1
   113bc:	bl	10e70 <__asprintf_chk@plt>
   113c0:	cmn	r0, #1
   113c4:	bne	11440 <abort@plt+0x414>
   113c8:	ldr	r0, [pc, #1344]	; 11910 <abort@plt+0x8e4>
   113cc:	bl	14708 <abort@plt+0x36dc>
   113d0:	add	r6, r6, #1
   113d4:	cmp	r5, r6
   113d8:	ble	118d0 <abort@plt+0x8a4>
   113dc:	add	r2, r4, r2
   113e0:	mov	r3, fp
   113e4:	ldr	r1, [r2, #4]
   113e8:	add	r0, sp, #36	; 0x24
   113ec:	str	r1, [sp]
   113f0:	ldr	r2, [pc, #1308]	; 11914 <abort@plt+0x8e8>
   113f4:	mov	r1, #1
   113f8:	bl	10e70 <__asprintf_chk@plt>
   113fc:	cmn	r0, #1
   11400:	bne	11440 <abort@plt+0x414>
   11404:	ldr	r0, [pc, #1292]	; 11918 <abort@plt+0x8ec>
   11408:	bl	14708 <abort@plt+0x36dc>
   1140c:	ldr	r3, [pc, #1288]	; 1191c <abort@plt+0x8f0>
   11410:	mov	r0, r8
   11414:	ldr	r5, [r7]
   11418:	ldr	r4, [r3]
   1141c:	bl	10f30 <XDisplayName@plt>
   11420:	mov	r3, r5
   11424:	ldr	r2, [pc, #1268]	; 11920 <abort@plt+0x8f4>
   11428:	mov	r1, #1
   1142c:	str	r0, [sp]
   11430:	mov	r0, r4
   11434:	bl	10f84 <__fprintf_chk@plt>
   11438:	mov	r0, #1
   1143c:	bl	14688 <abort@plt+0x365c>
   11440:	ldr	r0, [sp, #36]	; 0x24
   11444:	bl	14388 <abort@plt+0x335c>
   11448:	mov	fp, #1
   1144c:	add	r6, r6, #1
   11450:	b	111e8 <abort@plt+0x1bc>
   11454:	ldrb	r3, [r8, #1]
   11458:	cmp	r3, #118	; 0x76
   1145c:	ldrls	pc, [pc, r3, lsl #2]
   11460:	b	118e0 <abort@plt+0x8b4>
   11464:	andeq	r1, r1, r8, asr r6
   11468:	andeq	r1, r1, r0, ror #17
   1146c:	andeq	r1, r1, r0, ror #17
   11470:	andeq	r1, r1, r0, ror #17
   11474:	andeq	r1, r1, r0, ror #17
   11478:	andeq	r1, r1, r0, ror #17
   1147c:	andeq	r1, r1, r0, ror #17
   11480:	andeq	r1, r1, r0, ror #17
   11484:	andeq	r1, r1, r0, ror #17
   11488:	andeq	r1, r1, r0, ror #17
   1148c:	andeq	r1, r1, r0, ror #17
   11490:	andeq	r1, r1, r0, ror #17
   11494:	andeq	r1, r1, r0, ror #17
   11498:	andeq	r1, r1, r0, ror #17
   1149c:	andeq	r1, r1, r0, ror #17
   114a0:	andeq	r1, r1, r0, ror #17
   114a4:	andeq	r1, r1, r0, ror #17
   114a8:	andeq	r1, r1, r0, ror #17
   114ac:	andeq	r1, r1, r0, ror #17
   114b0:	andeq	r1, r1, r0, ror #17
   114b4:	andeq	r1, r1, r0, ror #17
   114b8:	andeq	r1, r1, r0, ror #17
   114bc:	andeq	r1, r1, r0, ror #17
   114c0:	andeq	r1, r1, r0, ror #17
   114c4:	andeq	r1, r1, r0, ror #17
   114c8:	andeq	r1, r1, r0, ror #17
   114cc:	andeq	r1, r1, r0, ror #17
   114d0:	andeq	r1, r1, r0, ror #17
   114d4:	andeq	r1, r1, r0, ror #17
   114d8:	andeq	r1, r1, r0, ror #17
   114dc:	andeq	r1, r1, r0, ror #17
   114e0:	andeq	r1, r1, r0, ror #17
   114e4:	andeq	r1, r1, r0, ror #17
   114e8:	andeq	r1, r1, r0, ror #17
   114ec:	andeq	r1, r1, r0, ror #17
   114f0:	andeq	r1, r1, r0, ror #17
   114f4:	andeq	r1, r1, r0, ror #17
   114f8:	andeq	r1, r1, r0, ror #17
   114fc:	andeq	r1, r1, r0, ror #17
   11500:	andeq	r1, r1, r0, ror #17
   11504:	andeq	r1, r1, r0, ror #17
   11508:	andeq	r1, r1, r0, ror #17
   1150c:	andeq	r1, r1, r0, ror #17
   11510:	andeq	r1, r1, r0, ror #17
   11514:	andeq	r1, r1, r0, ror #17
   11518:	andeq	r1, r1, r0, ror #17
   1151c:	andeq	r1, r1, r0, ror #17
   11520:	andeq	r1, r1, r0, ror #17
   11524:	andeq	r1, r1, r0, ror #17
   11528:	andeq	r1, r1, r8, ror r6
   1152c:	andeq	r1, r1, r8, ror r6
   11530:	andeq	r1, r1, r8, ror r6
   11534:	andeq	r1, r1, r8, ror r6
   11538:	andeq	r1, r1, r8, ror r6
   1153c:	andeq	r1, r1, r0, ror #17
   11540:	andeq	r1, r1, r0, ror #17
   11544:	andeq	r1, r1, r0, ror #17
   11548:	andeq	r1, r1, r0, ror #17
   1154c:	andeq	r1, r1, r0, ror #17
   11550:	andeq	r1, r1, r0, ror #17
   11554:	andeq	r1, r1, r0, ror #17
   11558:	andeq	r1, r1, r0, ror #17
   1155c:	andeq	r1, r1, r0, ror #17
   11560:	andeq	r1, r1, r0, ror #17
   11564:	andeq	r1, r1, r0, ror #17
   11568:	andeq	r1, r1, r0, ror #17
   1156c:	andeq	r1, r1, r0, ror #17
   11570:	andeq	r1, r1, r8, ror #12
   11574:	andeq	r1, r1, r0, ror #17
   11578:	andeq	r1, r1, r0, ror #17
   1157c:	andeq	r1, r1, r0, ror #17
   11580:	andeq	r1, r1, r0, ror #17
   11584:	andeq	r1, r1, r0, ror #17
   11588:	andeq	r1, r1, r0, ror #17
   1158c:	andeq	r1, r1, r0, ror #17
   11590:	andeq	r1, r1, r0, ror #17
   11594:	andeq	r1, r1, ip, lsl r7
   11598:	andeq	r1, r1, r0, ror #17
   1159c:	andeq	r1, r1, r0, ror #17
   115a0:	andeq	r1, r1, r0, ror #17
   115a4:	andeq	r1, r1, r0, ror #17
   115a8:	andeq	r1, r1, r0, ror #17
   115ac:	andeq	r1, r1, r0, ror #17
   115b0:	andeq	r1, r1, ip, lsl #14
   115b4:	andeq	r1, r1, r0, ror #17
   115b8:	andeq	r1, r1, r0, ror #17
   115bc:	andeq	r1, r1, r0, ror #17
   115c0:	andeq	r1, r1, r0, ror #17
   115c4:	andeq	r1, r1, r0, ror #17
   115c8:	andeq	r1, r1, r0, ror #17
   115cc:	andeq	r1, r1, r0, ror #17
   115d0:	andeq	r1, r1, r0, ror #17
   115d4:	andeq	r1, r1, r0, ror #17
   115d8:	andeq	r1, r1, r0, ror #17
   115dc:	andeq	r1, r1, r0, ror #17
   115e0:	andeq	r1, r1, r0, ror #17
   115e4:	andeq	r1, r1, r0, ror #17
   115e8:	andeq	r1, r1, r0, ror #17
   115ec:	andeq	r1, r1, r0, ror #17
   115f0:			; <UNDEFINED> instruction: 0x000116b0
   115f4:	andeq	r1, r1, r8, lsr #13
   115f8:	andeq	r1, r1, r0, lsl #15
   115fc:	andeq	r1, r1, r0, ror #17
   11600:	andeq	r1, r1, r0, ror #6
   11604:	andeq	r1, r1, r0, ror #17
   11608:	andeq	r1, r1, r0, ror #17
   1160c:	andeq	r1, r1, r0, ror #17
   11610:	andeq	r1, r1, r0, ror #17
   11614:			; <UNDEFINED> instruction: 0x000116b0
   11618:	andeq	r1, r1, r0, ror #17
   1161c:	andeq	r1, r1, r4, ror r7
   11620:	andeq	r1, r1, r0, ror #17
   11624:	andeq	r1, r1, r4, asr #14
   11628:	andeq	r1, r1, r8, lsr r7
   1162c:	andeq	r1, r1, r0, ror #17
   11630:			; <UNDEFINED> instruction: 0x000116b0
   11634:	andeq	r1, r1, r0, ror #17
   11638:	andeq	r1, r1, r0, ror #17
   1163c:	andeq	r1, r1, ip, lsr #14
   11640:	mov	r0, r8
   11644:	bl	14518 <abort@plt+0x34ec>
   11648:	mov	fp, #1
   1164c:	b	1144c <abort@plt+0x420>
   11650:	ldr	r3, [pc, #716]	; 11924 <abort@plt+0x8f8>
   11654:	b	113a4 <abort@plt+0x378>
   11658:	mov	r0, #0
   1165c:	bl	14518 <abort@plt+0x34ec>
   11660:	mov	fp, #1
   11664:	b	1144c <abort@plt+0x420>
   11668:	ldr	r0, [pc, #696]	; 11928 <abort@plt+0x8fc>
   1166c:	bl	14388 <abort@plt+0x335c>
   11670:	mov	fp, #1
   11674:	b	1144c <abort@plt+0x420>
   11678:	ldr	r2, [pc, #684]	; 1192c <abort@plt+0x900>
   1167c:	add	r3, sp, #40	; 0x28
   11680:	ldm	r2, {r0, r1, r2}
   11684:	lsr	ip, r2, #16
   11688:	stmia	r3!, {r0, r1}
   1168c:	strh	r2, [r3], #2
   11690:	strb	ip, [r3]
   11694:	ldrb	r3, [r8, #1]
   11698:	add	r0, sp, #40	; 0x28
   1169c:	strb	r3, [sp, #49]	; 0x31
   116a0:	bl	14388 <abort@plt+0x335c>
   116a4:	b	1144c <abort@plt+0x420>
   116a8:	add	r6, r6, #1
   116ac:	b	1144c <abort@plt+0x420>
   116b0:	add	r6, r6, #1
   116b4:	cmp	r5, r6
   116b8:	ble	118d0 <abort@plt+0x8a4>
   116bc:	cmp	r3, #115	; 0x73
   116c0:	beq	11870 <abort@plt+0x844>
   116c4:	ldr	r1, [pc, #576]	; 1190c <abort@plt+0x8e0>
   116c8:	ldr	r0, [pc, #568]	; 11908 <abort@plt+0x8dc>
   116cc:	cmp	r3, #108	; 0x6c
   116d0:	movne	r0, r1
   116d4:	mov	r3, r0
   116d8:	add	r2, r4, r2
   116dc:	add	r0, sp, #32
   116e0:	ldr	r1, [r2, #4]
   116e4:	ldr	r2, [pc, #580]	; 11930 <abort@plt+0x904>
   116e8:	str	r1, [sp]
   116ec:	mov	r1, #1
   116f0:	bl	10e70 <__asprintf_chk@plt>
   116f4:	cmn	r0, #1
   116f8:	beq	113c8 <abort@plt+0x39c>
   116fc:	ldr	r0, [sp, #32]
   11700:	bl	14388 <abort@plt+0x335c>
   11704:	mov	fp, #1
   11708:	b	1144c <abort@plt+0x420>
   1170c:	ldr	r0, [pc, #544]	; 11934 <abort@plt+0x908>
   11710:	bl	14388 <abort@plt+0x335c>
   11714:	mov	fp, #1
   11718:	b	1144c <abort@plt+0x420>
   1171c:	ldr	r0, [pc, #532]	; 11938 <abort@plt+0x90c>
   11720:	bl	14388 <abort@plt+0x335c>
   11724:	mov	fp, #1
   11728:	b	1144c <abort@plt+0x420>
   1172c:	mov	r3, #1
   11730:	str	r3, [r9, #4]
   11734:	b	1144c <abort@plt+0x420>
   11738:	mov	r3, #0
   1173c:	str	r3, [r9, #4]
   11740:	b	1144c <abort@plt+0x420>
   11744:	ldrb	r3, [r8, #2]
   11748:	cmp	r3, #107	; 0x6b
   1174c:	beq	11854 <abort@plt+0x828>
   11750:	bls	117a8 <abort@plt+0x77c>
   11754:	cmp	r3, #109	; 0x6d
   11758:	beq	117b0 <abort@plt+0x784>
   1175c:	cmp	r3, #112	; 0x70
   11760:	bne	118e0 <abort@plt+0x8b4>
   11764:	mov	r3, #1
   11768:	str	r3, [sp, #24]
   1176c:	mov	fp, r3
   11770:	b	1144c <abort@plt+0x420>
   11774:	mov	r3, #1
   11778:	str	r3, [r9, #8]
   1177c:	b	1144c <abort@plt+0x420>
   11780:	add	r6, r6, #1
   11784:	cmp	r5, r6
   11788:	ble	118d0 <abort@plt+0x8a4>
   1178c:	add	r2, r4, r2
   11790:	mov	fp, #1
   11794:	ldr	r0, [r2, #4]
   11798:	bl	14388 <abort@plt+0x335c>
   1179c:	b	1144c <abort@plt+0x420>
   117a0:	mov	r8, #0
   117a4:	b	111a4 <abort@plt+0x178>
   117a8:	cmp	r3, #0
   117ac:	bne	118e0 <abort@plt+0x8b4>
   117b0:	mov	r3, #1
   117b4:	str	r3, [sp, #12]
   117b8:	mov	fp, r3
   117bc:	b	1144c <abort@plt+0x420>
   117c0:	ldr	r2, [r9, #8]
   117c4:	cmp	fp, #0
   117c8:	ldr	r3, [sp, #12]
   117cc:	moveq	r3, #1
   117d0:	cmp	r2, #0
   117d4:	str	r3, [sp, #12]
   117d8:	bne	11890 <abort@plt+0x864>
   117dc:	ldr	r3, [r9, #12]
   117e0:	cmp	r3, #0
   117e4:	beq	1189c <abort@plt+0x870>
   117e8:	ldr	r0, [pc, #332]	; 1193c <abort@plt+0x910>
   117ec:	ldr	r1, [pc, #296]	; 1191c <abort@plt+0x8f0>
   117f0:	ldr	r2, [pc, #328]	; 11940 <abort@plt+0x914>
   117f4:	cmp	r3, #1
   117f8:	movne	r2, r0
   117fc:	str	r3, [sp]
   11800:	str	r2, [sp, #4]
   11804:	ldr	r3, [r7]
   11808:	ldr	r0, [r1]
   1180c:	ldr	r2, [pc, #304]	; 11944 <abort@plt+0x918>
   11810:	mov	r1, #1
   11814:	bl	10f84 <__fprintf_chk@plt>
   11818:	mvn	r4, #0
   1181c:	ldr	r3, [sp, #12]
   11820:	cmp	r3, #0
   11824:	bne	118b4 <abort@plt+0x888>
   11828:	ldr	r3, [sp, #16]
   1182c:	cmp	r3, #0
   11830:	bne	118a8 <abort@plt+0x87c>
   11834:	ldr	r3, [sp, #20]
   11838:	cmp	r3, #0
   1183c:	bne	118c4 <abort@plt+0x898>
   11840:	ldr	r3, [sp, #24]
   11844:	cmp	r3, #0
   11848:	bne	118bc <abort@plt+0x890>
   1184c:	lsr	r0, r4, #31
   11850:	bl	14688 <abort@plt+0x365c>
   11854:	ldrb	r3, [r8, #3]
   11858:	cmp	r3, #0
   1185c:	bne	11878 <abort@plt+0x84c>
   11860:	mov	r3, #1
   11864:	str	r3, [sp, #16]
   11868:	mov	fp, r3
   1186c:	b	1144c <abort@plt+0x420>
   11870:	ldr	r3, [pc, #172]	; 11924 <abort@plt+0x8f8>
   11874:	b	116d8 <abort@plt+0x6ac>
   11878:	cmp	r3, #101	; 0x65
   1187c:	bne	118e0 <abort@plt+0x8b4>
   11880:	mov	r3, #1
   11884:	str	r3, [sp, #20]
   11888:	mov	fp, r3
   1188c:	b	1144c <abort@plt+0x420>
   11890:	bl	13e24 <abort@plt+0x2df8>
   11894:	mov	r0, #0
   11898:	bl	14688 <abort@plt+0x365c>
   1189c:	bl	13e60 <abort@plt+0x2e34>
   118a0:	mov	r4, r0
   118a4:	b	1181c <abort@plt+0x7f0>
   118a8:	mov	r0, #0
   118ac:	bl	14368 <abort@plt+0x333c>
   118b0:	b	11834 <abort@plt+0x808>
   118b4:	bl	1434c <abort@plt+0x3320>
   118b8:	b	11828 <abort@plt+0x7fc>
   118bc:	bl	14378 <abort@plt+0x334c>
   118c0:	b	1184c <abort@plt+0x820>
   118c4:	mov	r0, #1
   118c8:	bl	14368 <abort@plt+0x333c>
   118cc:	b	11840 <abort@plt+0x814>
   118d0:	mov	r0, r8
   118d4:	bl	1108c <abort@plt+0x60>
   118d8:	mov	r0, #0
   118dc:	bl	11038 <abort@plt+0xc>
   118e0:	mov	r0, r8
   118e4:	bl	110c8 <abort@plt+0x9c>
   118e8:	andeq	r5, r2, r0, lsl #30
   118ec:	strdeq	r6, [r2], -ip
   118f0:			; <UNDEFINED> instruction: 0x00015ab8
   118f4:	andeq	r6, r2, r4, ror #3
   118f8:	muleq	r1, r4, fp
   118fc:	strdeq	r6, [r2], -r4
   11900:	strdeq	r6, [r2], -r8
   11904:	andeq	r5, r1, r4, asr #21
   11908:	andeq	r5, r1, r4, ror r2
   1190c:	andeq	r5, r1, ip, ror r2
   11910:	andeq	r5, r1, r0, lsr fp
   11914:	andeq	r5, r1, ip, asr fp
   11918:	andeq	r5, r1, ip, ror #22
   1191c:			; <UNDEFINED> instruction: 0x000261b8
   11920:	ldrdeq	r5, [r1], -r4
   11924:	andeq	r5, r1, ip, ror #4
   11928:	andeq	r5, r1, r0, lsl fp
   1192c:	andeq	r5, r1, r8, asr #23
   11930:	andeq	r5, r1, r0, lsr #22
   11934:	strdeq	r5, [r1], -r8
   11938:	andeq	r5, r1, r4, lsl #22
   1193c:	strdeq	r4, [r1], -ip
   11940:	andeq	r4, r1, r4, lsr #20
   11944:	andeq	r5, r1, r0, lsr #23
   11948:	mov	fp, #0
   1194c:	mov	lr, #0
   11950:	pop	{r1}		; (ldr r1, [sp], #4)
   11954:	mov	r2, sp
   11958:	push	{r2}		; (str r2, [sp, #-4]!)
   1195c:	push	{r0}		; (str r0, [sp, #-4]!)
   11960:	ldr	ip, [pc, #16]	; 11978 <abort@plt+0x94c>
   11964:	push	{ip}		; (str ip, [sp, #-4]!)
   11968:	ldr	r0, [pc, #12]	; 1197c <abort@plt+0x950>
   1196c:	ldr	r3, [pc, #12]	; 11980 <abort@plt+0x954>
   11970:	bl	10e94 <__libc_start_main@plt>
   11974:	bl	1102c <abort@plt>
   11978:	andeq	r4, r1, r4, lsr #15
   1197c:	andeq	r1, r1, r4, lsl #2
   11980:	andeq	r4, r1, r4, asr #14
   11984:	ldr	r3, [pc, #20]	; 119a0 <abort@plt+0x974>
   11988:	ldr	r2, [pc, #20]	; 119a4 <abort@plt+0x978>
   1198c:	add	r3, pc, r3
   11990:	ldr	r2, [r3, r2]
   11994:	cmp	r2, #0
   11998:	bxeq	lr
   1199c:	b	10eb8 <__gmon_start__@plt>
   119a0:	andeq	r4, r1, ip, ror #12
   119a4:	ldrdeq	r0, [r0], -ip
   119a8:	ldr	r0, [pc, #24]	; 119c8 <abort@plt+0x99c>
   119ac:	ldr	r3, [pc, #24]	; 119cc <abort@plt+0x9a0>
   119b0:	cmp	r3, r0
   119b4:	bxeq	lr
   119b8:	ldr	r3, [pc, #16]	; 119d0 <abort@plt+0x9a4>
   119bc:	cmp	r3, #0
   119c0:	bxeq	lr
   119c4:	bx	r3
   119c8:			; <UNDEFINED> instruction: 0x000261b8
   119cc:			; <UNDEFINED> instruction: 0x000261b8
   119d0:	andeq	r0, r0, r0
   119d4:	ldr	r0, [pc, #36]	; 11a00 <abort@plt+0x9d4>
   119d8:	ldr	r1, [pc, #36]	; 11a04 <abort@plt+0x9d8>
   119dc:	sub	r1, r1, r0
   119e0:	asr	r1, r1, #2
   119e4:	add	r1, r1, r1, lsr #31
   119e8:	asrs	r1, r1, #1
   119ec:	bxeq	lr
   119f0:	ldr	r3, [pc, #16]	; 11a08 <abort@plt+0x9dc>
   119f4:	cmp	r3, #0
   119f8:	bxeq	lr
   119fc:	bx	r3
   11a00:			; <UNDEFINED> instruction: 0x000261b8
   11a04:			; <UNDEFINED> instruction: 0x000261b8
   11a08:	andeq	r0, r0, r0
   11a0c:	push	{r4, lr}
   11a10:	ldr	r4, [pc, #24]	; 11a30 <abort@plt+0xa04>
   11a14:	ldrb	r3, [r4]
   11a18:	cmp	r3, #0
   11a1c:	popne	{r4, pc}
   11a20:	bl	119a8 <abort@plt+0x97c>
   11a24:	mov	r3, #1
   11a28:	strb	r3, [r4]
   11a2c:	pop	{r4, pc}
   11a30:	andeq	r6, r2, r8, asr #3
   11a34:	b	119d4 <abort@plt+0x9a8>
   11a38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a3c:	mov	r1, #5
   11a40:	ldr	r7, [pc, #408]	; 11be0 <abort@plt+0xbb4>
   11a44:	ldr	r6, [pc, #408]	; 11be4 <abort@plt+0xbb8>
   11a48:	ldr	r8, [pc, #408]	; 11be8 <abort@plt+0xbbc>
   11a4c:	ldr	sl, [pc, #408]	; 11bec <abort@plt+0xbc0>
   11a50:	ldr	r9, [pc, #408]	; 11bf0 <abort@plt+0xbc4>
   11a54:	sub	sp, sp, #60	; 0x3c
   11a58:	mov	fp, r0
   11a5c:	ldr	r3, [r7]
   11a60:	mov	r0, #2
   11a64:	str	r3, [sp, #52]	; 0x34
   11a68:	strd	r0, [sp, #8]
   11a6c:	mov	r1, fp
   11a70:	ldr	r0, [r6]
   11a74:	bl	10e64 <XSetModifierMapping@plt>
   11a78:	cmp	r0, #1
   11a7c:	mov	r4, r0
   11a80:	beq	11ad4 <abort@plt+0xaa8>
   11a84:	cmp	r0, #2
   11a88:	beq	11bb8 <abort@plt+0xb8c>
   11a8c:	cmp	r0, #0
   11a90:	beq	11ab8 <abort@plt+0xa8c>
   11a94:	ldr	r2, [pc, #332]	; 11be8 <abort@plt+0xbbc>
   11a98:	ldr	r3, [pc, #340]	; 11bf4 <abort@plt+0xbc8>
   11a9c:	str	r0, [sp]
   11aa0:	mov	r1, #1
   11aa4:	ldr	r0, [r2]
   11aa8:	ldr	r3, [r3]
   11aac:	ldr	r2, [pc, #324]	; 11bf8 <abort@plt+0xbcc>
   11ab0:	bl	10f84 <__fprintf_chk@plt>
   11ab4:	mvn	r4, #0
   11ab8:	ldr	r2, [sp, #52]	; 0x34
   11abc:	ldr	r3, [r7]
   11ac0:	mov	r0, r4
   11ac4:	cmp	r2, r3
   11ac8:	bne	11bdc <abort@plt+0xbb0>
   11acc:	add	sp, sp, #60	; 0x3c
   11ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ad4:	add	r1, sp, #20
   11ad8:	ldr	r0, [r6]
   11adc:	bl	10f18 <XQueryKeymap@plt>
   11ae0:	ldr	r3, [sp, #8]
   11ae4:	ldr	r2, [pc, #272]	; 11bfc <abort@plt+0xbd0>
   11ae8:	str	r3, [sp]
   11aec:	ldr	r3, [pc, #256]	; 11bf4 <abort@plt+0xbc8>
   11af0:	mov	r1, r4
   11af4:	ldr	r0, [r8]
   11af8:	ldr	r3, [r3]
   11afc:	bl	10f84 <__fprintf_chk@plt>
   11b00:	mov	r5, #0
   11b04:	b	11b1c <abort@plt+0xaf0>
   11b08:	add	r5, r5, #1
   11b0c:	cmp	r5, #256	; 0x100
   11b10:	beq	11b74 <abort@plt+0xb48>
   11b14:	and	r3, r5, #7
   11b18:	ldr	r4, [r9, r3, lsl #2]
   11b1c:	add	r3, sp, #56	; 0x38
   11b20:	add	r3, r3, r5, asr #3
   11b24:	ldrb	r3, [r3, #-36]	; 0xffffffdc
   11b28:	tst	r3, r4
   11b2c:	beq	11b08 <abort@plt+0xadc>
   11b30:	uxtb	r1, r5
   11b34:	mov	r2, #0
   11b38:	ldr	r0, [r6]
   11b3c:	bl	10f9c <XKeycodeToKeysym@plt>
   11b40:	mov	r4, r0
   11b44:	bl	11014 <XKeysymToString@plt>
   11b48:	strd	r4, [sp]
   11b4c:	ldr	r2, [pc, #172]	; 11c00 <abort@plt+0xbd4>
   11b50:	mov	r1, #1
   11b54:	add	r5, r5, #1
   11b58:	cmp	r0, #0
   11b5c:	movne	r3, r0
   11b60:	moveq	r3, sl
   11b64:	ldr	r0, [r8]
   11b68:	bl	10f84 <__fprintf_chk@plt>
   11b6c:	cmp	r5, #256	; 0x100
   11b70:	bne	11b14 <abort@plt+0xae8>
   11b74:	ldr	r4, [sp, #8]
   11b78:	mov	r0, r4
   11b7c:	bl	10e1c <sleep@plt>
   11b80:	ldr	r3, [sp, #12]
   11b84:	subs	r3, r3, #1
   11b88:	str	r3, [sp, #12]
   11b8c:	lsl	r3, r4, #1
   11b90:	str	r3, [sp, #8]
   11b94:	bne	11a6c <abort@plt+0xa40>
   11b98:	ldr	r3, [pc, #84]	; 11bf4 <abort@plt+0xbc8>
   11b9c:	ldr	r0, [r8]
   11ba0:	ldr	r2, [pc, #92]	; 11c04 <abort@plt+0xbd8>
   11ba4:	ldr	r3, [r3]
   11ba8:	mov	r1, #1
   11bac:	bl	10f84 <__fprintf_chk@plt>
   11bb0:	mvn	r4, #0
   11bb4:	b	11ab8 <abort@plt+0xa8c>
   11bb8:	ldr	r1, [pc, #40]	; 11be8 <abort@plt+0xbbc>
   11bbc:	ldr	r3, [pc, #48]	; 11bf4 <abort@plt+0xbc8>
   11bc0:	ldr	r2, [pc, #64]	; 11c08 <abort@plt+0xbdc>
   11bc4:	ldr	r0, [r1]
   11bc8:	ldr	r3, [r3]
   11bcc:	mov	r1, #1
   11bd0:	bl	10f84 <__fprintf_chk@plt>
   11bd4:	mvn	r4, #0
   11bd8:	b	11ab8 <abort@plt+0xa8c>
   11bdc:	bl	10e34 <__stack_chk_fail@plt>
   11be0:	andeq	r5, r2, r0, lsl #30
   11be4:	andeq	r6, r2, r4, ror #3
   11be8:			; <UNDEFINED> instruction: 0x000261b8
   11bec:	andeq	r4, r1, r8, ror #15
   11bf0:			; <UNDEFINED> instruction: 0x000147b4
   11bf4:	strdeq	r6, [r2], -ip
   11bf8:	andeq	r4, r1, r0, ror r8
   11bfc:	strdeq	r4, [r1], -r0
   11c00:	andeq	r4, r1, ip, lsr #16
   11c04:	andeq	r4, r1, r0, lsr #17
   11c08:	andeq	r4, r1, r0, asr r8
   11c0c:	cmp	r1, #0
   11c10:	beq	11c34 <abort@plt+0xc08>
   11c14:	push	{r4, lr}
   11c18:	mov	r4, r0
   11c1c:	ldr	r0, [r0]
   11c20:	bl	10e10 <XInsertModifiermapEntry@plt>
   11c24:	mov	r3, #0
   11c28:	str	r0, [r4]
   11c2c:	mov	r0, r3
   11c30:	pop	{r4, pc}
   11c34:	mvn	r3, #0
   11c38:	mov	r0, r3
   11c3c:	bx	lr
   11c40:	cmp	r1, #0
   11c44:	beq	11c68 <abort@plt+0xc3c>
   11c48:	push	{r4, lr}
   11c4c:	mov	r4, r0
   11c50:	ldr	r0, [r0]
   11c54:	bl	10fb4 <XDeleteModifiermapEntry@plt>
   11c58:	mov	r3, #0
   11c5c:	str	r0, [r4]
   11c60:	mov	r0, r3
   11c64:	pop	{r4, pc}
   11c68:	mvn	r3, #0
   11c6c:	mov	r0, r3
   11c70:	bx	lr
   11c74:	ldr	r0, [r0]
   11c78:	ldr	r3, [r0]
   11c7c:	ldr	r2, [r0, #4]
   11c80:	cmp	r3, #0
   11c84:	mla	r1, r1, r3, r2
   11c88:	ble	11ca8 <abort@plt+0xc7c>
   11c8c:	mov	r3, #0
   11c90:	mov	ip, r3
   11c94:	strb	ip, [r1], #1
   11c98:	ldr	r2, [r0]
   11c9c:	add	r3, r3, #1
   11ca0:	cmp	r2, r3
   11ca4:	bgt	11c94 <abort@plt+0xc68>
   11ca8:	mov	r0, #0
   11cac:	bx	lr
   11cb0:	ldr	r3, [pc, #400]	; 11e48 <abort@plt+0xe1c>
   11cb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cb8:	sub	sp, sp, #28
   11cbc:	ldr	r7, [pc, #392]	; 11e4c <abort@plt+0xe20>
   11cc0:	ldr	r3, [r3]
   11cc4:	mov	r5, r0
   11cc8:	mov	r8, r1
   11ccc:	add	r2, sp, #12
   11cd0:	add	r1, sp, #8
   11cd4:	ldr	r0, [r7]
   11cd8:	mov	r4, #0
   11cdc:	str	r3, [sp, #20]
   11ce0:	str	r4, [sp, #16]
   11ce4:	bl	10fa8 <XDisplayKeycodes@plt>
   11ce8:	ldr	r1, [sp, #8]
   11cec:	ldr	r2, [sp, #12]
   11cf0:	add	r3, sp, #16
   11cf4:	sub	r2, r2, r1
   11cf8:	add	r2, r2, #1
   11cfc:	uxtb	r1, r1
   11d00:	ldr	r0, [r7]
   11d04:	bl	10fc0 <XGetKeyboardMapping@plt>
   11d08:	ldr	r3, [pc, #320]	; 11e50 <abort@plt+0xe24>
   11d0c:	ldr	r2, [r5]
   11d10:	mov	r0, r8
   11d14:	str	r2, [sp]
   11d18:	mov	r1, #1
   11d1c:	ldr	r3, [r3]
   11d20:	ldr	r2, [pc, #300]	; 11e54 <abort@plt+0xe28>
   11d24:	bl	10f84 <__fprintf_chk@plt>
   11d28:	ldr	r9, [pc, #296]	; 11e58 <abort@plt+0xe2c>
   11d2c:	ldr	r2, [pc, #296]	; 11e5c <abort@plt+0xe30>
   11d30:	ldr	r3, [r9]
   11d34:	mov	r1, #1
   11d38:	mov	r0, r8
   11d3c:	bl	10f84 <__fprintf_chk@plt>
   11d40:	ldr	r2, [r5]
   11d44:	cmp	r2, #0
   11d48:	ble	11e00 <abort@plt+0xdd4>
   11d4c:	ldr	fp, [pc, #268]	; 11e60 <abort@plt+0xe34>
   11d50:	mov	sl, #0
   11d54:	b	11d68 <abort@plt+0xd3c>
   11d58:	add	sl, sl, #1
   11d5c:	cmp	r2, sl
   11d60:	add	r4, r4, #1
   11d64:	ble	11e00 <abort@plt+0xdd4>
   11d68:	ldr	r3, [r5, #4]
   11d6c:	ldrb	r1, [r3, r4]
   11d70:	cmp	r1, #0
   11d74:	beq	11d58 <abort@plt+0xd2c>
   11d78:	mov	r6, #0
   11d7c:	b	11d94 <abort@plt+0xd68>
   11d80:	ldr	r3, [sp, #16]
   11d84:	cmp	r3, r6
   11d88:	ble	11dac <abort@plt+0xd80>
   11d8c:	ldr	r3, [r5, #4]
   11d90:	ldrb	r1, [r3, r4]
   11d94:	mov	r2, r6
   11d98:	ldr	r0, [r7]
   11d9c:	bl	10f9c <XKeycodeToKeysym@plt>
   11da0:	add	r6, r6, #1
   11da4:	cmp	r0, #0
   11da8:	beq	11d80 <abort@plt+0xd54>
   11dac:	bl	11014 <XKeysymToString@plt>
   11db0:	ldr	r1, [r5, #4]
   11db4:	ldr	r2, [pc, #168]	; 11e64 <abort@plt+0xe38>
   11db8:	cmp	sl, #0
   11dbc:	ldrb	ip, [r1, r4]
   11dc0:	ldr	r3, [pc, #160]	; 11e68 <abort@plt+0xe3c>
   11dc4:	moveq	r3, r2
   11dc8:	str	ip, [sp, #4]
   11dcc:	ldr	ip, [pc, #152]	; 11e6c <abort@plt+0xe40>
   11dd0:	mov	r2, fp
   11dd4:	mov	r1, #1
   11dd8:	add	sl, sl, #1
   11ddc:	add	r4, r4, #1
   11de0:	cmp	r0, #0
   11de4:	moveq	r0, ip
   11de8:	str	r0, [sp]
   11dec:	mov	r0, r8
   11df0:	bl	10f84 <__fprintf_chk@plt>
   11df4:	ldr	r2, [r5]
   11df8:	cmp	r2, sl
   11dfc:	bgt	11d68 <abort@plt+0xd3c>
   11e00:	mov	r1, r8
   11e04:	mov	r0, #10
   11e08:	bl	10fcc <fputc@plt>
   11e0c:	ldr	r3, [pc, #92]	; 11e70 <abort@plt+0xe44>
   11e10:	add	r9, r9, #12
   11e14:	cmp	r3, r9
   11e18:	bne	11d2c <abort@plt+0xd00>
   11e1c:	mov	r1, r8
   11e20:	mov	r0, #10
   11e24:	bl	10fcc <fputc@plt>
   11e28:	ldr	r3, [pc, #24]	; 11e48 <abort@plt+0xe1c>
   11e2c:	ldr	r2, [sp, #20]
   11e30:	ldr	r3, [r3]
   11e34:	cmp	r2, r3
   11e38:	bne	11e44 <abort@plt+0xe18>
   11e3c:	add	sp, sp, #28
   11e40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e44:	bl	10e34 <__stack_chk_fail@plt>
   11e48:	andeq	r5, r2, r0, lsl #30
   11e4c:	andeq	r6, r2, r4, ror #3
   11e50:	strdeq	r6, [r2], -ip
   11e54:	andeq	r4, r1, r4, ror #17
   11e58:	andeq	r6, r2, r8, ror #1
   11e5c:	andeq	r4, r1, r4, lsr #18
   11e60:	andeq	r4, r1, ip, lsr #18
   11e64:	andeq	r4, r1, r4, lsr #20
   11e68:	ldrdeq	r4, [r1], -r8
   11e6c:	ldrdeq	r4, [r1], -ip
   11e70:	andeq	r6, r2, r8, asr #2
   11e74:	ldr	r3, [pc, #568]	; 120b4 <abort@plt+0x1088>
   11e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e7c:	sub	sp, sp, #36	; 0x24
   11e80:	ldr	r4, [pc, #560]	; 120b8 <abort@plt+0x108c>
   11e84:	ldr	r3, [r3]
   11e88:	add	r2, sp, #20
   11e8c:	mov	r8, r0
   11e90:	mov	r7, r1
   11e94:	ldr	r0, [r4]
   11e98:	add	r1, sp, #16
   11e9c:	str	r3, [sp, #28]
   11ea0:	bl	10fa8 <XDisplayKeycodes@plt>
   11ea4:	ldr	r1, [sp, #16]
   11ea8:	ldr	r2, [sp, #20]
   11eac:	add	r3, sp, #24
   11eb0:	sub	r2, r2, r1
   11eb4:	ldr	r0, [r4]
   11eb8:	add	r2, r2, #1
   11ebc:	uxtb	r1, r1
   11ec0:	bl	10fc0 <XGetKeyboardMapping@plt>
   11ec4:	subs	r3, r0, #0
   11ec8:	str	r3, [sp, #12]
   11ecc:	beq	12090 <abort@plt+0x1064>
   11ed0:	cmp	r8, #0
   11ed4:	ldr	sl, [sp, #16]
   11ed8:	ldr	r3, [sp, #20]
   11edc:	beq	12040 <abort@plt+0x1014>
   11ee0:	cmp	sl, r3
   11ee4:	bgt	11f64 <abort@plt+0xf38>
   11ee8:	ldr	fp, [pc, #460]	; 120bc <abort@plt+0x1090>
   11eec:	ldr	r9, [sp, #12]
   11ef0:	cmp	r8, #0
   11ef4:	mov	r3, sl
   11ef8:	ldrne	r2, [pc, #448]	; 120c0 <abort@plt+0x1094>
   11efc:	ldreq	r2, [pc, #448]	; 120c4 <abort@plt+0x1098>
   11f00:	mov	r1, #1
   11f04:	mov	r0, r7
   11f08:	bl	10f84 <__fprintf_chk@plt>
   11f0c:	ldr	ip, [sp, #24]
   11f10:	subs	r4, ip, #1
   11f14:	bmi	11f44 <abort@plt+0xf18>
   11f18:	ldr	r3, [r9, r4, lsl #2]
   11f1c:	cmp	r3, #0
   11f20:	bne	11f88 <abort@plt+0xf5c>
   11f24:	sub	r3, ip, #-1073741823	; 0xc0000001
   11f28:	add	r3, r9, r3, lsl #2
   11f2c:	b	11f3c <abort@plt+0xf10>
   11f30:	ldr	r2, [r3, #-4]!
   11f34:	cmp	r2, #0
   11f38:	bne	11f88 <abort@plt+0xf5c>
   11f3c:	subs	r4, r4, #1
   11f40:	bcs	11f30 <abort@plt+0xf04>
   11f44:	mov	r1, r7
   11f48:	mov	r0, #10
   11f4c:	add	r9, r9, ip, lsl #2
   11f50:	bl	10fcc <fputc@plt>
   11f54:	ldr	r3, [sp, #20]
   11f58:	add	sl, sl, #1
   11f5c:	cmp	r3, sl
   11f60:	bge	11ef0 <abort@plt+0xec4>
   11f64:	ldr	r0, [sp, #12]
   11f68:	bl	10e40 <XFree@plt>
   11f6c:	ldr	r3, [pc, #320]	; 120b4 <abort@plt+0x1088>
   11f70:	ldr	r2, [sp, #28]
   11f74:	ldr	r3, [r3]
   11f78:	cmp	r2, r3
   11f7c:	bne	120b0 <abort@plt+0x1084>
   11f80:	add	sp, sp, #36	; 0x24
   11f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f88:	sub	r6, r9, #4
   11f8c:	mov	r5, #0
   11f90:	str	r9, [sp, #8]
   11f94:	b	11fb8 <abort@plt+0xf8c>
   11f98:	mov	r3, r0
   11f9c:	ldr	r2, [pc, #292]	; 120c8 <abort@plt+0x109c>
   11fa0:	mov	r1, #1
   11fa4:	mov	r0, r7
   11fa8:	bl	10f84 <__fprintf_chk@plt>
   11fac:	add	r5, r5, #1
   11fb0:	cmp	r4, r5
   11fb4:	blt	11ff4 <abort@plt+0xfc8>
   11fb8:	ldr	r9, [r6, #4]!
   11fbc:	cmp	r9, #0
   11fc0:	bne	12000 <abort@plt+0xfd4>
   11fc4:	cmp	r8, #0
   11fc8:	ldr	r0, [pc, #252]	; 120cc <abort@plt+0x10a0>
   11fcc:	bne	11f98 <abort@plt+0xf6c>
   11fd0:	str	r0, [sp]
   11fd4:	mov	r3, r9
   11fd8:	mov	r2, fp
   11fdc:	mov	r1, #1
   11fe0:	mov	r0, r7
   11fe4:	add	r5, r5, #1
   11fe8:	bl	10f84 <__fprintf_chk@plt>
   11fec:	cmp	r4, r5
   11ff0:	bge	11fb8 <abort@plt+0xf8c>
   11ff4:	ldr	r9, [sp, #8]
   11ff8:	ldr	ip, [sp, #24]
   11ffc:	b	11f44 <abort@plt+0xf18>
   12000:	mov	r0, r9
   12004:	bl	11014 <XKeysymToString@plt>
   12008:	cmp	r8, #0
   1200c:	bne	12020 <abort@plt+0xff4>
   12010:	ldr	r3, [pc, #184]	; 120d0 <abort@plt+0x10a4>
   12014:	cmp	r0, #0
   12018:	moveq	r0, r3
   1201c:	b	11fd0 <abort@plt+0xfa4>
   12020:	cmp	r0, #0
   12024:	bne	11f98 <abort@plt+0xf6c>
   12028:	mov	r3, r9
   1202c:	ldr	r2, [pc, #160]	; 120d4 <abort@plt+0x10a8>
   12030:	mov	r1, #1
   12034:	mov	r0, r7
   12038:	bl	10f84 <__fprintf_chk@plt>
   1203c:	b	11fac <abort@plt+0xf80>
   12040:	str	r3, [sp, #4]
   12044:	str	sl, [sp]
   12048:	ldr	r3, [sp, #24]
   1204c:	ldr	r2, [pc, #132]	; 120d8 <abort@plt+0x10ac>
   12050:	mov	r1, #1
   12054:	mov	r0, r7
   12058:	bl	10f84 <__fprintf_chk@plt>
   1205c:	mov	r3, r7
   12060:	mov	r2, #32
   12064:	mov	r1, #1
   12068:	ldr	r0, [pc, #108]	; 120dc <abort@plt+0x10b0>
   1206c:	bl	10e58 <fwrite@plt>
   12070:	mov	r3, r7
   12074:	mov	r2, #33	; 0x21
   12078:	mov	r1, #1
   1207c:	ldr	r0, [pc, #92]	; 120e0 <abort@plt+0x10b4>
   12080:	bl	10e58 <fwrite@plt>
   12084:	ldr	sl, [sp, #16]
   12088:	ldr	r3, [sp, #20]
   1208c:	b	11ee0 <abort@plt+0xeb4>
   12090:	ldr	r1, [pc, #76]	; 120e4 <abort@plt+0x10b8>
   12094:	ldr	r3, [pc, #76]	; 120e8 <abort@plt+0x10bc>
   12098:	ldr	r2, [pc, #76]	; 120ec <abort@plt+0x10c0>
   1209c:	ldr	r0, [r1]
   120a0:	ldr	r3, [r3]
   120a4:	mov	r1, #1
   120a8:	bl	10f84 <__fprintf_chk@plt>
   120ac:	b	11f6c <abort@plt+0xf40>
   120b0:	bl	10e34 <__stack_chk_fail@plt>
   120b4:	andeq	r5, r2, r0, lsl #30
   120b8:	andeq	r6, r2, r4, ror #3
   120bc:	andeq	r4, r1, r8, lsr #20
   120c0:	andeq	r4, r1, r8, lsl #20
   120c4:	andeq	r4, r1, r8, lsl sl
   120c8:	muleq	r1, ip, fp
   120cc:	andeq	r4, r1, r4, asr #18
   120d0:	andeq	r4, r1, ip, lsr r9
   120d4:	andeq	r4, r1, r8, lsr sl
   120d8:	andeq	r4, r1, ip, ror r9
   120dc:	andeq	r4, r1, r0, asr #19
   120e0:	andeq	r4, r1, r4, ror #19
   120e4:			; <UNDEFINED> instruction: 0x000261b8
   120e8:	strdeq	r6, [r2], -ip
   120ec:	andeq	r4, r1, r0, asr r9
   120f0:	push	{r4, r5, r6, r7, r8, r9, lr}
   120f4:	sub	sp, sp, #276	; 0x114
   120f8:	ldr	r9, [pc, #192]	; 121c0 <abort@plt+0x1194>
   120fc:	ldr	r2, [pc, #192]	; 121c4 <abort@plt+0x1198>
   12100:	mov	r6, r0
   12104:	ldr	r3, [r9]
   12108:	add	r1, sp, #12
   1210c:	ldr	r0, [r2]
   12110:	mov	r2, #256	; 0x100
   12114:	str	r3, [sp, #268]	; 0x10c
   12118:	bl	10f00 <XGetPointerMapping@plt>
   1211c:	ldr	r2, [pc, #164]	; 121c8 <abort@plt+0x119c>
   12120:	mov	r1, #1
   12124:	mov	r3, r0
   12128:	mov	r7, r0
   1212c:	mov	r0, r6
   12130:	bl	10f84 <__fprintf_chk@plt>
   12134:	mov	r3, r6
   12138:	mov	r2, #27
   1213c:	mov	r1, #1
   12140:	ldr	r0, [pc, #132]	; 121cc <abort@plt+0x11a0>
   12144:	bl	10e58 <fwrite@plt>
   12148:	mov	r3, r6
   1214c:	mov	r2, #26
   12150:	mov	r1, #1
   12154:	ldr	r0, [pc, #116]	; 121d0 <abort@plt+0x11a4>
   12158:	bl	10e58 <fwrite@plt>
   1215c:	cmp	r7, #0
   12160:	ble	12198 <abort@plt+0x116c>
   12164:	ldr	r8, [pc, #104]	; 121d4 <abort@plt+0x11a8>
   12168:	add	r5, sp, #11
   1216c:	mov	r4, #0
   12170:	ldrb	r2, [r5, #1]!
   12174:	add	r4, r4, #1
   12178:	mov	r3, r4
   1217c:	str	r2, [sp]
   12180:	mov	r1, #1
   12184:	mov	r2, r8
   12188:	mov	r0, r6
   1218c:	bl	10f84 <__fprintf_chk@plt>
   12190:	cmp	r4, r7
   12194:	bne	12170 <abort@plt+0x1144>
   12198:	mov	r1, r6
   1219c:	mov	r0, #10
   121a0:	bl	10fcc <fputc@plt>
   121a4:	ldr	r2, [sp, #268]	; 0x10c
   121a8:	ldr	r3, [r9]
   121ac:	cmp	r2, r3
   121b0:	bne	121bc <abort@plt+0x1190>
   121b4:	add	sp, sp, #276	; 0x114
   121b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   121bc:	bl	10e34 <__stack_chk_fail@plt>
   121c0:	andeq	r5, r2, r0, lsl #30
   121c4:	andeq	r6, r2, r4, ror #3
   121c8:	andeq	r4, r1, r0, asr #20
   121cc:	andeq	r4, r1, r8, ror #20
   121d0:	andeq	r4, r1, r4, lsl #21
   121d4:	andeq	r4, r1, r0, lsr #21
   121d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121dc:	sub	sp, sp, #324	; 0x144
   121e0:	ldr	r7, [pc, #500]	; 123dc <abort@plt+0x13b0>
   121e4:	ldr	r8, [pc, #500]	; 123e0 <abort@plt+0x13b4>
   121e8:	subs	r4, r1, #0
   121ec:	ldr	r3, [r7]
   121f0:	mov	r6, r0
   121f4:	str	r3, [sp, #316]	; 0x13c
   121f8:	ldr	r0, [r8]
   121fc:	beq	12270 <abort@plt+0x1244>
   12200:	ldr	sl, [pc, #476]	; 123e4 <abort@plt+0x13b8>
   12204:	mov	fp, #2
   12208:	mov	r3, #5
   1220c:	str	r3, [sp, #28]
   12210:	mov	r2, r4
   12214:	mov	r1, r6
   12218:	bl	10f54 <XSetPointerMapping@plt>
   1221c:	cmp	r0, #1
   12220:	beq	122d4 <abort@plt+0x12a8>
   12224:	cmp	r0, #2
   12228:	beq	122b0 <abort@plt+0x1284>
   1222c:	cmp	r0, #0
   12230:	beq	12258 <abort@plt+0x122c>
   12234:	ldr	r2, [pc, #424]	; 123e4 <abort@plt+0x13b8>
   12238:	ldr	r3, [pc, #424]	; 123e8 <abort@plt+0x13bc>
   1223c:	str	r0, [sp]
   12240:	mov	r1, #1
   12244:	ldr	r0, [r2]
   12248:	ldr	r3, [r3]
   1224c:	ldr	r2, [pc, #408]	; 123ec <abort@plt+0x13c0>
   12250:	bl	10f84 <__fprintf_chk@plt>
   12254:	mvn	r0, #0
   12258:	ldr	r2, [sp, #316]	; 0x13c
   1225c:	ldr	r3, [r7]
   12260:	cmp	r2, r3
   12264:	bne	123d8 <abort@plt+0x13ac>
   12268:	add	sp, sp, #324	; 0x144
   1226c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12270:	add	r1, sp, #60	; 0x3c
   12274:	mov	r2, #256	; 0x100
   12278:	bl	10f00 <XGetPointerMapping@plt>
   1227c:	subs	r4, r0, #0
   12280:	addle	r6, sp, #60	; 0x3c
   12284:	ldrle	r0, [r8]
   12288:	ble	12200 <abort@plt+0x11d4>
   1228c:	add	r2, sp, #59	; 0x3b
   12290:	mov	r3, #1
   12294:	cmp	r3, r4
   12298:	strb	r3, [r2, #1]!
   1229c:	add	r3, r3, #1
   122a0:	bne	12294 <abort@plt+0x1268>
   122a4:	ldr	r0, [r8]
   122a8:	add	r6, sp, #60	; 0x3c
   122ac:	b	12200 <abort@plt+0x11d4>
   122b0:	ldr	r1, [pc, #300]	; 123e4 <abort@plt+0x13b8>
   122b4:	ldr	r3, [pc, #300]	; 123e8 <abort@plt+0x13bc>
   122b8:	ldr	r2, [pc, #304]	; 123f0 <abort@plt+0x13c4>
   122bc:	ldr	r0, [r1]
   122c0:	ldr	r3, [r3]
   122c4:	mov	r1, #1
   122c8:	bl	10f84 <__fprintf_chk@plt>
   122cc:	mvn	r0, #0
   122d0:	b	12258 <abort@plt+0x122c>
   122d4:	ldr	r0, [r8]
   122d8:	add	r5, sp, #48	; 0x30
   122dc:	add	lr, sp, #56	; 0x38
   122e0:	ldr	r3, [r0, #132]	; 0x84
   122e4:	ldr	r2, [r0, #140]	; 0x8c
   122e8:	add	ip, sp, #52	; 0x34
   122ec:	add	r3, r3, r3, lsl #2
   122f0:	ldr	r9, [pc, #252]	; 123f4 <abort@plt+0x13c8>
   122f4:	add	r3, r2, r3, lsl #4
   122f8:	add	r2, sp, #44	; 0x2c
   122fc:	ldr	r1, [r3, #8]
   12300:	add	r3, sp, #40	; 0x28
   12304:	stmib	sp, {r2, r5}
   12308:	str	lr, [sp, #16]
   1230c:	str	ip, [sp, #12]
   12310:	str	r3, [sp]
   12314:	add	r2, sp, #32
   12318:	add	r3, sp, #36	; 0x24
   1231c:	bl	10ee8 <XQueryPointer@plt>
   12320:	ldr	r3, [pc, #192]	; 123e8 <abort@plt+0x13bc>
   12324:	str	fp, [sp]
   12328:	ldr	r2, [pc, #200]	; 123f8 <abort@plt+0x13cc>
   1232c:	ldr	r3, [r3]
   12330:	mov	r1, #1
   12334:	mov	r5, #0
   12338:	add	r5, r5, #1
   1233c:	cmp	r0, #0
   12340:	streq	r0, [sp, #56]	; 0x38
   12344:	ldr	r0, [sl]
   12348:	bl	10f84 <__fprintf_chk@plt>
   1234c:	ldr	r3, [sp, #56]	; 0x38
   12350:	mov	r2, #256	; 0x100
   12354:	tst	r2, r3
   12358:	bne	12378 <abort@plt+0x134c>
   1235c:	cmp	r5, #5
   12360:	beq	12394 <abort@plt+0x1368>
   12364:	ldr	r2, [r9], #4
   12368:	ldr	r3, [sp, #56]	; 0x38
   1236c:	add	r5, r5, #1
   12370:	tst	r2, r3
   12374:	beq	1235c <abort@plt+0x1330>
   12378:	mov	r3, r5
   1237c:	ldr	r2, [pc, #120]	; 123fc <abort@plt+0x13d0>
   12380:	mov	r1, #1
   12384:	ldr	r0, [sl]
   12388:	bl	10f84 <__fprintf_chk@plt>
   1238c:	cmp	r5, #5
   12390:	bne	12364 <abort@plt+0x1338>
   12394:	mov	r0, fp
   12398:	bl	10e1c <sleep@plt>
   1239c:	ldr	r3, [sp, #28]
   123a0:	subs	r3, r3, #1
   123a4:	str	r3, [sp, #28]
   123a8:	bne	123cc <abort@plt+0x13a0>
   123ac:	ldr	r3, [pc, #52]	; 123e8 <abort@plt+0x13bc>
   123b0:	ldr	r0, [sl]
   123b4:	ldr	r2, [pc, #68]	; 12400 <abort@plt+0x13d4>
   123b8:	ldr	r3, [r3]
   123bc:	mov	r1, #1
   123c0:	bl	10f84 <__fprintf_chk@plt>
   123c4:	mvn	r0, #0
   123c8:	b	12258 <abort@plt+0x122c>
   123cc:	lsl	fp, fp, #1
   123d0:	ldr	r0, [r8]
   123d4:	b	12210 <abort@plt+0x11e4>
   123d8:	bl	10e34 <__stack_chk_fail@plt>
   123dc:	andeq	r5, r2, r0, lsl #30
   123e0:	andeq	r6, r2, r4, ror #3
   123e4:			; <UNDEFINED> instruction: 0x000261b8
   123e8:	strdeq	r6, [r2], -ip
   123ec:	andeq	r4, r1, r8, lsr #22
   123f0:	andeq	r4, r1, ip, lsl #22
   123f4:	ldrdeq	r4, [r1], -r8
   123f8:			; <UNDEFINED> instruction: 0x00014abc
   123fc:	strdeq	r4, [r1], -ip
   12400:	andeq	r4, r1, r4, asr fp
   12404:	push	{r4, r5, r6, lr}
   12408:	mov	r4, r0
   1240c:	ldrb	r3, [r0]
   12410:	mov	r5, r1
   12414:	cmp	r3, #48	; 0x30
   12418:	bne	1247c <abort@plt+0x1450>
   1241c:	bl	10ed0 <__ctype_b_loc@plt>
   12420:	add	r3, r4, #1
   12424:	ldr	lr, [r0]
   12428:	mov	r4, r3
   1242c:	ldrb	r0, [r3], #1
   12430:	lsl	ip, r0, #1
   12434:	ldrh	ip, [lr, ip]
   12438:	tst	ip, #8192	; 0x2000
   1243c:	bne	12428 <abort@plt+0x13fc>
   12440:	cmp	r0, #0
   12444:	beq	12484 <abort@plt+0x1458>
   12448:	and	r0, r0, #223	; 0xdf
   1244c:	ldr	ip, [pc, #60]	; 12490 <abort@plt+0x1464>
   12450:	cmp	r0, #88	; 0x58
   12454:	ldr	r1, [pc, #56]	; 12494 <abort@plt+0x1468>
   12458:	moveq	r4, r3
   1245c:	movne	r1, ip
   12460:	mov	r2, r5
   12464:	mov	r0, r4
   12468:	bl	10fe4 <sscanf@plt>
   1246c:	sub	r0, r0, #1
   12470:	clz	r0, r0
   12474:	lsr	r0, r0, #5
   12478:	pop	{r4, r5, r6, pc}
   1247c:	ldr	r1, [pc, #20]	; 12498 <abort@plt+0x146c>
   12480:	b	12460 <abort@plt+0x1434>
   12484:	str	r0, [r5]
   12488:	mov	r0, #1
   1248c:	pop	{r4, r5, r6, pc}
   12490:	andeq	r4, r1, r0, lsl #23
   12494:	andeq	r4, r1, r8, ror fp
   12498:	andeq	r4, r1, ip, ror fp
   1249c:	push	{r4, r5, r6, r7, r8, lr}
   124a0:	mov	r4, r0
   124a4:	ldr	r1, [pc, #532]	; 126c0 <abort@plt+0x1694>
   124a8:	mov	r0, #1
   124ac:	bl	10f78 <__printf_chk@plt>
   124b0:	ldr	r2, [r4]
   124b4:	cmp	r2, #4
   124b8:	ldrls	pc, [pc, r2, lsl #2]
   124bc:	b	126b0 <abort@plt+0x1684>
   124c0:	andeq	r2, r1, ip, lsr #10
   124c4:	muleq	r1, ip, r5
   124c8:	andeq	r2, r1, r0, lsl r6
   124cc:	andeq	r2, r1, r0, ror r6
   124d0:	ldrdeq	r2, [r1], -r4
   124d4:	ldr	r1, [pc, #488]	; 126c4 <abort@plt+0x1698>
   124d8:	mov	r0, #1
   124dc:	bl	10f78 <__printf_chk@plt>
   124e0:	ldr	r3, [r4, #8]
   124e4:	cmp	r3, #0
   124e8:	beq	126a0 <abort@plt+0x1674>
   124ec:	ldrgt	r6, [pc, #468]	; 126c8 <abort@plt+0x169c>
   124f0:	addgt	r5, r4, #11
   124f4:	ble	12520 <abort@plt+0x14f4>
   124f8:	ldrb	r2, [r5, #1]
   124fc:	mov	r1, r6
   12500:	mov	r0, #1
   12504:	bl	10f78 <__printf_chk@plt>
   12508:	sub	r3, r5, #10
   1250c:	ldr	r2, [r4, #8]
   12510:	sub	r3, r3, r4
   12514:	cmp	r2, r3
   12518:	add	r5, r5, #1
   1251c:	bgt	124f8 <abort@plt+0x14cc>
   12520:	mov	r0, #10
   12524:	pop	{r4, r5, r6, r7, r8, lr}
   12528:	b	10f3c <putchar@plt>
   1252c:	ldrb	r2, [r4, #8]
   12530:	cmp	r2, #0
   12534:	beq	12690 <abort@plt+0x1664>
   12538:	ldr	r1, [pc, #396]	; 126cc <abort@plt+0x16a0>
   1253c:	mov	r0, #1
   12540:	bl	10f78 <__printf_chk@plt>
   12544:	ldr	r3, [r4, #12]
   12548:	cmp	r3, #0
   1254c:	ble	12520 <abort@plt+0x14f4>
   12550:	ldr	r7, [pc, #376]	; 126d0 <abort@plt+0x16a4>
   12554:	ldr	r6, [pc, #376]	; 126d4 <abort@plt+0x16a8>
   12558:	mov	r5, #0
   1255c:	ldr	r3, [r4, #16]
   12560:	ldr	r0, [r3, r5, lsl #2]
   12564:	bl	11014 <XKeysymToString@plt>
   12568:	mov	r1, r6
   1256c:	add	r5, r5, #1
   12570:	cmp	r0, #0
   12574:	movne	r2, r0
   12578:	moveq	r2, r7
   1257c:	mov	r0, #1
   12580:	bl	10f78 <__printf_chk@plt>
   12584:	ldr	r3, [r4, #12]
   12588:	cmp	r3, r5
   1258c:	bgt	1255c <abort@plt+0x1530>
   12590:	mov	r0, #10
   12594:	pop	{r4, r5, r6, r7, r8, lr}
   12598:	b	10f3c <putchar@plt>
   1259c:	ldr	r3, [r4, #8]
   125a0:	ldr	r2, [pc, #304]	; 126d8 <abort@plt+0x16ac>
   125a4:	ldr	r1, [pc, #304]	; 126dc <abort@plt+0x16b0>
   125a8:	add	r3, r3, r3, lsl #1
   125ac:	mov	r0, #1
   125b0:	ldr	r2, [r2, r3, lsl #2]
   125b4:	bl	10f78 <__printf_chk@plt>
   125b8:	ldr	r3, [r4, #12]
   125bc:	cmp	r3, #0
   125c0:	ble	12520 <abort@plt+0x14f4>
   125c4:	ldr	r7, [pc, #260]	; 126d0 <abort@plt+0x16a4>
   125c8:	ldr	r6, [pc, #260]	; 126d4 <abort@plt+0x16a8>
   125cc:	mov	r5, #0
   125d0:	ldr	r3, [r4, #16]
   125d4:	ldr	r0, [r3, r5, lsl #2]
   125d8:	bl	11014 <XKeysymToString@plt>
   125dc:	mov	r1, r6
   125e0:	add	r5, r5, #1
   125e4:	cmp	r0, #0
   125e8:	movne	r2, r0
   125ec:	moveq	r2, r7
   125f0:	mov	r0, #1
   125f4:	bl	10f78 <__printf_chk@plt>
   125f8:	ldr	r3, [r4, #12]
   125fc:	cmp	r3, r5
   12600:	bgt	125d0 <abort@plt+0x15a4>
   12604:	mov	r0, #10
   12608:	pop	{r4, r5, r6, r7, r8, lr}
   1260c:	b	10f3c <putchar@plt>
   12610:	ldr	r3, [r4, #8]
   12614:	ldr	r2, [pc, #188]	; 126d8 <abort@plt+0x16ac>
   12618:	ldr	r1, [pc, #192]	; 126e0 <abort@plt+0x16b4>
   1261c:	add	r3, r3, r3, lsl #1
   12620:	mov	r0, #1
   12624:	ldr	r2, [r2, r3, lsl #2]
   12628:	bl	10f78 <__printf_chk@plt>
   1262c:	ldr	r3, [r4, #12]
   12630:	cmp	r3, #0
   12634:	ble	12520 <abort@plt+0x14f4>
   12638:	ldr	r6, [pc, #164]	; 126e4 <abort@plt+0x16b8>
   1263c:	mov	r5, #0
   12640:	ldr	r3, [r4, #16]
   12644:	mov	r1, r6
   12648:	mov	r0, #1
   1264c:	ldrb	r2, [r3, r5]
   12650:	bl	10f78 <__printf_chk@plt>
   12654:	ldr	r3, [r4, #12]
   12658:	add	r5, r5, #1
   1265c:	cmp	r3, r5
   12660:	bgt	12640 <abort@plt+0x1614>
   12664:	mov	r0, #10
   12668:	pop	{r4, r5, r6, r7, r8, lr}
   1266c:	b	10f3c <putchar@plt>
   12670:	ldr	r3, [r4, #8]
   12674:	ldr	r2, [pc, #92]	; 126d8 <abort@plt+0x16ac>
   12678:	ldr	r1, [pc, #104]	; 126e8 <abort@plt+0x16bc>
   1267c:	add	r3, r3, r3, lsl #1
   12680:	mov	r0, #1
   12684:	ldr	r2, [r2, r3, lsl #2]
   12688:	pop	{r4, r5, r6, r7, r8, lr}
   1268c:	b	10f78 <__printf_chk@plt>
   12690:	ldr	r1, [pc, #84]	; 126ec <abort@plt+0x16c0>
   12694:	mov	r0, #1
   12698:	bl	10f78 <__printf_chk@plt>
   1269c:	b	12544 <abort@plt+0x1518>
   126a0:	ldr	r1, [pc, #72]	; 126f0 <abort@plt+0x16c4>
   126a4:	mov	r0, #1
   126a8:	bl	10f78 <__printf_chk@plt>
   126ac:	b	12520 <abort@plt+0x14f4>
   126b0:	ldr	r1, [pc, #60]	; 126f4 <abort@plt+0x16c8>
   126b4:	mov	r0, #1
   126b8:	pop	{r4, r5, r6, r7, r8, lr}
   126bc:	b	10f78 <__printf_chk@plt>
   126c0:	muleq	r1, r0, fp
   126c4:	andeq	r4, r1, ip, ror #23
   126c8:	andeq	r4, r1, r4, lsl #24
   126cc:	muleq	r1, ip, fp
   126d0:	andeq	r4, r1, r4, lsl #23
   126d4:	muleq	r1, ip, fp
   126d8:	andeq	r6, r2, r8, ror #1
   126dc:			; <UNDEFINED> instruction: 0x00014bbc
   126e0:	andeq	r4, r1, r8, asr #23
   126e4:	ldrdeq	r4, [r1], -r8
   126e8:	andeq	r4, r1, r0, ror #23
   126ec:	andeq	r4, r1, ip, lsr #23
   126f0:	strdeq	r4, [r1], -r8
   126f4:	andeq	r4, r1, r8, lsl #24
   126f8:	ldr	r3, [pc, #52]	; 12734 <abort@plt+0x1708>
   126fc:	ldr	r2, [r3]
   12700:	cmp	r2, #0
   12704:	streq	r0, [r3, #4]
   12708:	ldrne	r2, [r3, #4]
   1270c:	streq	r0, [r3]
   12710:	strne	r0, [r2, #4]
   12714:	strne	r0, [r3, #4]
   12718:	ldr	r3, [pc, #24]	; 12738 <abort@plt+0x170c>
   1271c:	mov	r2, #0
   12720:	str	r2, [r0, #4]
   12724:	ldr	r3, [r3]
   12728:	cmp	r3, r2
   1272c:	bxeq	lr
   12730:	b	1249c <abort@plt+0x1470>
   12734:	andeq	r6, r2, ip, asr #3
   12738:	andeq	r6, r2, r8, ror #3
   1273c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12740:	subs	r6, r1, #0
   12744:	mov	r7, r0
   12748:	ble	1278c <abort@plt+0x1760>
   1274c:	sub	r4, r0, #1
   12750:	bl	10ed0 <__ctype_b_loc@plt>
   12754:	add	r8, r4, r6
   12758:	mov	r9, r0
   1275c:	ldrb	r5, [r4, #1]!
   12760:	ldr	r2, [r9]
   12764:	lsl	r3, r5, #1
   12768:	ldrh	r3, [r2, r3]
   1276c:	tst	r3, #256	; 0x100
   12770:	beq	12784 <abort@plt+0x1758>
   12774:	bl	10eac <__ctype_tolower_loc@plt>
   12778:	ldr	r3, [r0]
   1277c:	ldr	r3, [r3, r5, lsl #2]
   12780:	strb	r3, [r4]
   12784:	cmp	r4, r8
   12788:	bne	1275c <abort@plt+0x1730>
   1278c:	ldr	r4, [pc, #72]	; 127dc <abort@plt+0x17b0>
   12790:	ldr	r1, [r4]
   12794:	cmp	r1, #0
   12798:	bne	127ac <abort@plt+0x1780>
   1279c:	b	127d4 <abort@plt+0x17a8>
   127a0:	ldr	r1, [r4, #12]!
   127a4:	cmp	r1, #0
   127a8:	beq	127d4 <abort@plt+0x17a8>
   127ac:	ldr	r3, [r4, #4]
   127b0:	cmp	r6, r3
   127b4:	bne	127a0 <abort@plt+0x1774>
   127b8:	mov	r2, r6
   127bc:	mov	r0, r7
   127c0:	bl	11020 <strncmp@plt>
   127c4:	cmp	r0, #0
   127c8:	bne	127a0 <abort@plt+0x1774>
   127cc:	ldr	r0, [r4, #8]
   127d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   127d4:	mvn	r0, #0
   127d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   127dc:	andeq	r6, r2, r8, ror #1
   127e0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127e4:	mov	r9, #0
   127e8:	ldr	r3, [pc, #180]	; 128a4 <abort@plt+0x1878>
   127ec:	ldr	fp, [pc, #180]	; 128a8 <abort@plt+0x187c>
   127f0:	str	r9, [r2]
   127f4:	ldr	r8, [r3]
   127f8:	ldr	r3, [fp]
   127fc:	cmp	r8, r3
   12800:	bgt	1284c <abort@plt+0x1820>
   12804:	mov	r7, r1
   12808:	mov	r6, r0
   1280c:	mov	sl, r2
   12810:	uxtb	r5, r8
   12814:	mov	r4, #0
   12818:	mov	r2, r4
   1281c:	mov	r1, r5
   12820:	mov	r0, r6
   12824:	bl	10f9c <XKeycodeToKeysym@plt>
   12828:	add	r4, r4, #1
   1282c:	cmp	r0, r7
   12830:	beq	12854 <abort@plt+0x1828>
   12834:	cmp	r4, #8
   12838:	bne	12818 <abort@plt+0x17ec>
   1283c:	ldr	r3, [fp]
   12840:	add	r8, r8, #1
   12844:	cmp	r3, r8
   12848:	bge	12810 <abort@plt+0x17e4>
   1284c:	mov	r0, r9
   12850:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12854:	cmp	r9, #0
   12858:	beq	12894 <abort@plt+0x1868>
   1285c:	ldr	r1, [sl]
   12860:	mov	r0, r9
   12864:	add	r1, r1, #1
   12868:	bl	10e4c <realloc@plt>
   1286c:	mov	r9, r0
   12870:	ldr	r3, [sl]
   12874:	add	r8, r8, #1
   12878:	add	r2, r3, #1
   1287c:	str	r2, [sl]
   12880:	strb	r5, [r9, r3]
   12884:	ldr	r3, [fp]
   12888:	cmp	r3, r8
   1288c:	bge	12810 <abort@plt+0x17e4>
   12890:	b	1284c <abort@plt+0x1820>
   12894:	mov	r0, #1
   12898:	bl	10e88 <malloc@plt>
   1289c:	mov	r9, r0
   128a0:	b	12870 <abort@plt+0x1844>
   128a4:	strdeq	r6, [r2], -r8
   128a8:	strdeq	r6, [r2], -r4
   128ac:	ldr	r3, [pc, #76]	; 12900 <abort@plt+0x18d4>
   128b0:	ldr	r0, [pc, #76]	; 12904 <abort@plt+0x18d8>
   128b4:	push	{lr}		; (str lr, [sp, #-4]!)
   128b8:	sub	sp, sp, #12
   128bc:	ldr	r3, [r3]
   128c0:	ldr	r0, [r0]
   128c4:	ldr	r1, [pc, #60]	; 12908 <abort@plt+0x18dc>
   128c8:	ldr	r2, [pc, #60]	; 1290c <abort@plt+0x18e0>
   128cc:	add	r3, r3, #1
   128d0:	stm	sp, {r0, r3}
   128d4:	ldr	r3, [r1]
   128d8:	ldr	r0, [r2]
   128dc:	mov	r1, #1
   128e0:	ldr	r2, [pc, #40]	; 12910 <abort@plt+0x18e4>
   128e4:	bl	10f84 <__fprintf_chk@plt>
   128e8:	ldr	r2, [pc, #36]	; 12914 <abort@plt+0x18e8>
   128ec:	ldr	r3, [r2]
   128f0:	add	r3, r3, #1
   128f4:	str	r3, [r2]
   128f8:	add	sp, sp, #12
   128fc:	pop	{pc}		; (ldr pc, [sp], #4)
   12900:	andeq	r6, r2, r0, ror #3
   12904:			; <UNDEFINED> instruction: 0x000261b4
   12908:	strdeq	r6, [r2], -ip
   1290c:			; <UNDEFINED> instruction: 0x000261b8
   12910:	andeq	r4, r1, r0, lsr #24
   12914:	strdeq	r6, [r2], -r0
   12918:	push	{r4, r5, r6, r7, r8, lr}
   1291c:	bic	r6, r1, r1, asr #31
   12920:	ldr	r5, [pc, #148]	; 129bc <abort@plt+0x1990>
   12924:	mov	r8, r0
   12928:	ldr	r3, [r5, #12]
   1292c:	ldr	r4, [r5, #8]
   12930:	cmp	r3, r6
   12934:	bgt	12980 <abort@plt+0x1954>
   12938:	cmp	r4, #0
   1293c:	mov	r7, r1
   12940:	beq	1294c <abort@plt+0x1920>
   12944:	mov	r0, r4
   12948:	bl	10dec <free@plt>
   1294c:	cmp	r7, #39	; 0x27
   12950:	lslgt	r3, r6, #1
   12954:	addgt	r7, r3, #1
   12958:	movle	r0, #81	; 0x51
   1295c:	movle	r3, #80	; 0x50
   12960:	movgt	r0, r7
   12964:	movle	r7, r0
   12968:	str	r3, [r5, #12]
   1296c:	bl	10e88 <malloc@plt>
   12970:	cmp	r0, #0
   12974:	mov	r4, r0
   12978:	str	r0, [r5, #8]
   1297c:	beq	129a0 <abort@plt+0x1974>
   12980:	mov	r1, r8
   12984:	mov	r2, r6
   12988:	mov	r0, r4
   1298c:	bl	10f48 <strncpy@plt>
   12990:	mov	r3, #0
   12994:	strb	r3, [r4, r6]
   12998:	mov	r0, r4
   1299c:	pop	{r4, r5, r6, r7, r8, pc}
   129a0:	ldr	r1, [pc, #24]	; 129c0 <abort@plt+0x1994>
   129a4:	mov	r3, r7
   129a8:	ldr	r2, [pc, #20]	; 129c4 <abort@plt+0x1998>
   129ac:	ldr	r0, [r1]
   129b0:	mov	r1, #1
   129b4:	bl	10f84 <__fprintf_chk@plt>
   129b8:	b	12998 <abort@plt+0x196c>
   129bc:	andeq	r6, r2, ip, asr #3
   129c0:			; <UNDEFINED> instruction: 0x000261b8
   129c4:	andeq	r4, r1, r4, lsr ip
   129c8:	push	{r4, r5, r6, lr}
   129cc:	mov	r5, r2
   129d0:	mov	r6, r3
   129d4:	bl	12918 <abort@plt+0x18ec>
   129d8:	ldr	r1, [pc, #96]	; 12a40 <abort@plt+0x1a14>
   129dc:	str	r0, [r5]
   129e0:	mov	r4, r0
   129e4:	bl	10dc8 <strcmp@plt>
   129e8:	cmp	r0, #0
   129ec:	bne	129fc <abort@plt+0x19d0>
   129f0:	str	r0, [r6]
   129f4:	mov	r0, #1
   129f8:	pop	{r4, r5, r6, pc}
   129fc:	mov	r0, r4
   12a00:	bl	10ffc <XStringToKeysym@plt>
   12a04:	cmp	r0, #0
   12a08:	str	r0, [r6]
   12a0c:	bne	12a24 <abort@plt+0x19f8>
   12a10:	ldr	r2, [r5]
   12a14:	ldrb	r3, [r2]
   12a18:	sub	r3, r3, #48	; 0x30
   12a1c:	cmp	r3, #9
   12a20:	bls	12a30 <abort@plt+0x1a04>
   12a24:	adds	r0, r0, #0
   12a28:	movne	r0, #1
   12a2c:	pop	{r4, r5, r6, pc}
   12a30:	mov	r1, r6
   12a34:	mov	r0, r2
   12a38:	pop	{r4, r5, r6, lr}
   12a3c:	b	12404 <abort@plt+0x13d8>
   12a40:	andeq	r4, r1, r4, asr #18
   12a44:	cmp	r0, #0
   12a48:	cmpne	r1, #0
   12a4c:	push	{r4, r5, r6, r7, r8, lr}
   12a50:	movle	r5, #1
   12a54:	movgt	r5, #0
   12a58:	movle	r5, #0
   12a5c:	ble	12aa8 <abort@plt+0x1a7c>
   12a60:	ldrb	r4, [r0]
   12a64:	cmp	r4, #0
   12a68:	moveq	r5, r4
   12a6c:	beq	12aa8 <abort@plt+0x1a7c>
   12a70:	mov	r6, r0
   12a74:	mov	r7, r1
   12a78:	bl	10ed0 <__ctype_b_loc@plt>
   12a7c:	mov	r2, r6
   12a80:	ldr	r1, [r0]
   12a84:	b	12a8c <abort@plt+0x1a60>
   12a88:	ldrb	r4, [r2, #1]!
   12a8c:	lsl	r4, r4, #1
   12a90:	ldrh	r0, [r1, r4]
   12a94:	tst	r0, #8192	; 0x2000
   12a98:	bne	12aa8 <abort@plt+0x1a7c>
   12a9c:	add	r5, r5, #1
   12aa0:	cmp	r7, r5
   12aa4:	bgt	12a88 <abort@plt+0x1a5c>
   12aa8:	mov	r0, r5
   12aac:	pop	{r4, r5, r6, r7, r8, pc}
   12ab0:	cmp	r0, #0
   12ab4:	cmpne	r1, #0
   12ab8:	push	{r4, r5, r6, r7, r8, lr}
   12abc:	movle	r5, #1
   12ac0:	movgt	r5, #0
   12ac4:	ble	12b1c <abort@plt+0x1af0>
   12ac8:	ldrb	r4, [r0]
   12acc:	cmp	r4, #0
   12ad0:	beq	12b1c <abort@plt+0x1af0>
   12ad4:	mov	r6, r0
   12ad8:	mov	r7, r1
   12adc:	bl	10ed0 <__ctype_b_loc@plt>
   12ae0:	mov	r2, r6
   12ae4:	ldr	r1, [r0]
   12ae8:	b	12af8 <abort@plt+0x1acc>
   12aec:	ldrb	r4, [r2, #1]!
   12af0:	cmp	r4, #0
   12af4:	beq	12b20 <abort@plt+0x1af4>
   12af8:	lsl	r4, r4, #1
   12afc:	ldrh	r0, [r1, r4]
   12b00:	tst	r0, #8192	; 0x2000
   12b04:	beq	12b20 <abort@plt+0x1af4>
   12b08:	add	r5, r5, #1
   12b0c:	cmp	r7, r5
   12b10:	bgt	12aec <abort@plt+0x1ac0>
   12b14:	mov	r0, r5
   12b18:	pop	{r4, r5, r6, r7, r8, pc}
   12b1c:	mov	r5, #0
   12b20:	mov	r0, r5
   12b24:	pop	{r4, r5, r6, r7, r8, pc}
   12b28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b2c:	sub	sp, sp, #284	; 0x11c
   12b30:	ldr	r9, [pc, #688]	; 12de8 <abort@plt+0x1dbc>
   12b34:	cmp	r0, #0
   12b38:	cmpne	r1, #1
   12b3c:	movle	r6, #1
   12b40:	ldr	r3, [r9]
   12b44:	movgt	r6, #0
   12b48:	str	r3, [sp, #276]	; 0x114
   12b4c:	ble	12b60 <abort@plt+0x1b34>
   12b50:	ldrb	r3, [r0]
   12b54:	mov	r7, r0
   12b58:	cmp	r3, #0
   12b5c:	bne	12ba0 <abort@plt+0x1b74>
   12b60:	ldr	r4, [pc, #644]	; 12dec <abort@plt+0x1dc0>
   12b64:	bl	128ac <abort@plt+0x1880>
   12b68:	mov	r1, #1
   12b6c:	mov	r2, #18
   12b70:	ldr	r3, [r4]
   12b74:	ldr	r0, [pc, #628]	; 12df0 <abort@plt+0x1dc4>
   12b78:	bl	10e58 <fwrite@plt>
   12b7c:	ldr	r1, [r4]
   12b80:	mov	r0, #10
   12b84:	bl	10ff0 <putc@plt>
   12b88:	ldr	r2, [sp, #276]	; 0x114
   12b8c:	ldr	r3, [r9]
   12b90:	cmp	r2, r3
   12b94:	bne	12de4 <abort@plt+0x1db8>
   12b98:	add	sp, sp, #284	; 0x11c
   12b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ba0:	ldr	r3, [pc, #588]	; 12df4 <abort@plt+0x1dc8>
   12ba4:	mov	r4, r1
   12ba8:	mov	r2, #256	; 0x100
   12bac:	ldr	r0, [r3]
   12bb0:	add	r1, sp, #20
   12bb4:	bl	10f00 <XGetPointerMapping@plt>
   12bb8:	mov	r1, r4
   12bbc:	str	r0, [sp, #12]
   12bc0:	mov	r0, r7
   12bc4:	bl	12ab0 <abort@plt+0x1a84>
   12bc8:	ldrb	r3, [r7, r0]
   12bcc:	add	r5, r7, r0
   12bd0:	cmp	r3, #61	; 0x3d
   12bd4:	bne	12d5c <abort@plt+0x1d30>
   12bd8:	sub	r4, r4, r0
   12bdc:	sub	r4, r4, #1
   12be0:	add	r5, r5, #1
   12be4:	mov	r1, r4
   12be8:	mov	r0, r5
   12bec:	bl	12ab0 <abort@plt+0x1a84>
   12bf0:	sub	r4, r4, r0
   12bf4:	cmp	r4, #6
   12bf8:	add	r5, r5, r0
   12bfc:	bgt	12d20 <abort@plt+0x1cf4>
   12c00:	cmp	r4, #0
   12c04:	ble	12d38 <abort@plt+0x1d0c>
   12c08:	add	r7, sp, #19
   12c0c:	mov	r8, r7
   12c10:	mov	r6, #0
   12c14:	b	12c88 <abort@plt+0x1c5c>
   12c18:	mov	r1, r4
   12c1c:	mov	r0, r5
   12c20:	bl	12a44 <abort@plt+0x1a18>
   12c24:	mov	sl, r0
   12c28:	sub	r1, r4, r0
   12c2c:	add	r0, r5, r0
   12c30:	bl	12ab0 <abort@plt+0x1a84>
   12c34:	add	sl, sl, r0
   12c38:	cmp	sl, #0
   12c3c:	ble	12db4 <abort@plt+0x1d88>
   12c40:	mov	r1, sl
   12c44:	mov	r0, r5
   12c48:	bl	12918 <abort@plt+0x18ec>
   12c4c:	subs	fp, r0, #0
   12c50:	beq	12b88 <abort@plt+0x1b5c>
   12c54:	add	r1, sp, #16
   12c58:	bl	12404 <abort@plt+0x13d8>
   12c5c:	cmp	r0, #0
   12c60:	beq	12d88 <abort@plt+0x1d5c>
   12c64:	ldr	r2, [sp, #16]
   12c68:	cmp	r2, #255	; 0xff
   12c6c:	bhi	12d88 <abort@plt+0x1d5c>
   12c70:	sub	r4, r4, sl
   12c74:	cmp	r4, #0
   12c78:	add	r6, r6, #1
   12c7c:	strb	r2, [r8, #1]!
   12c80:	add	r5, r5, sl
   12c84:	ble	12ca8 <abort@plt+0x1c7c>
   12c88:	mov	r1, r4
   12c8c:	mov	r0, r5
   12c90:	bl	12ab0 <abort@plt+0x1a84>
   12c94:	ldrb	r3, [r5, r0]
   12c98:	sub	r4, r4, r0
   12c9c:	add	r5, r5, r0
   12ca0:	cmp	r3, #0
   12ca4:	bne	12c18 <abort@plt+0x1bec>
   12ca8:	ldr	r3, [sp, #12]
   12cac:	cmp	r3, r6
   12cb0:	cmpne	r6, #0
   12cb4:	strle	r6, [sp, #12]
   12cb8:	ble	12cd8 <abort@plt+0x1cac>
   12cbc:	ldr	r2, [pc, #296]	; 12dec <abort@plt+0x1dc0>
   12cc0:	str	r3, [sp]
   12cc4:	mov	r1, #1
   12cc8:	ldr	r0, [r2]
   12ccc:	mov	r3, r6
   12cd0:	ldr	r2, [pc, #288]	; 12df8 <abort@plt+0x1dcc>
   12cd4:	bl	10f84 <__fprintf_chk@plt>
   12cd8:	mov	r0, #268	; 0x10c
   12cdc:	bl	10e88 <malloc@plt>
   12ce0:	cmp	r0, #0
   12ce4:	beq	12dcc <abort@plt+0x1da0>
   12ce8:	ldr	r2, [sp, #12]
   12cec:	mov	r3, #4
   12cf0:	cmp	r2, #0
   12cf4:	str	r2, [r0, #8]
   12cf8:	str	r3, [r0]
   12cfc:	ble	12d54 <abort@plt+0x1d28>
   12d00:	add	sl, r0, r2
   12d04:	add	sl, sl, #11
   12d08:	add	r3, r0, #11
   12d0c:	ldrb	r2, [r7, #1]!
   12d10:	strb	r2, [r3, #1]!
   12d14:	cmp	r3, sl
   12d18:	bne	12d0c <abort@plt+0x1ce0>
   12d1c:	b	12d54 <abort@plt+0x1d28>
   12d20:	mov	r2, #7
   12d24:	ldr	r1, [pc, #208]	; 12dfc <abort@plt+0x1dd0>
   12d28:	mov	r0, r5
   12d2c:	bl	10f24 <strncasecmp@plt>
   12d30:	subs	r6, r0, #0
   12d34:	bne	12c08 <abort@plt+0x1bdc>
   12d38:	mov	r0, #268	; 0x10c
   12d3c:	bl	10e88 <malloc@plt>
   12d40:	cmp	r0, #0
   12d44:	movne	r3, #4
   12d48:	strne	r6, [r0, #8]
   12d4c:	strne	r3, [r0]
   12d50:	beq	12dcc <abort@plt+0x1da0>
   12d54:	bl	126f8 <abort@plt+0x16cc>
   12d58:	b	12b88 <abort@plt+0x1b5c>
   12d5c:	ldr	r4, [pc, #136]	; 12dec <abort@plt+0x1dc0>
   12d60:	bl	128ac <abort@plt+0x1880>
   12d64:	mov	r2, #45	; 0x2d
   12d68:	ldr	r3, [r4]
   12d6c:	mov	r1, #1
   12d70:	ldr	r0, [pc, #136]	; 12e00 <abort@plt+0x1dd4>
   12d74:	bl	10e58 <fwrite@plt>
   12d78:	ldr	r1, [r4]
   12d7c:	mov	r0, #10
   12d80:	bl	10ff0 <putc@plt>
   12d84:	b	12b88 <abort@plt+0x1b5c>
   12d88:	ldr	r4, [pc, #92]	; 12dec <abort@plt+0x1dc0>
   12d8c:	bl	128ac <abort@plt+0x1880>
   12d90:	ldr	r2, [pc, #108]	; 12e04 <abort@plt+0x1dd8>
   12d94:	ldr	r0, [r4]
   12d98:	mov	r3, fp
   12d9c:	mov	r1, #1
   12da0:	bl	10f84 <__fprintf_chk@plt>
   12da4:	ldr	r1, [r4]
   12da8:	mov	r0, #10
   12dac:	bl	10ff0 <putc@plt>
   12db0:	b	12b88 <abort@plt+0x1b5c>
   12db4:	ldr	r4, [pc, #48]	; 12dec <abort@plt+0x1dc0>
   12db8:	bl	128ac <abort@plt+0x1880>
   12dbc:	mov	r3, r5
   12dc0:	ldr	r0, [r4]
   12dc4:	ldr	r2, [pc, #60]	; 12e08 <abort@plt+0x1ddc>
   12dc8:	b	12d9c <abort@plt+0x1d70>
   12dcc:	ldr	r4, [pc, #24]	; 12dec <abort@plt+0x1dc0>
   12dd0:	bl	128ac <abort@plt+0x1880>
   12dd4:	mov	r3, #268	; 0x10c
   12dd8:	ldr	r0, [r4]
   12ddc:	ldr	r2, [pc, #40]	; 12e0c <abort@plt+0x1de0>
   12de0:	b	12d9c <abort@plt+0x1d70>
   12de4:	bl	10e34 <__stack_chk_fail@plt>
   12de8:	andeq	r5, r2, r0, lsl #30
   12dec:			; <UNDEFINED> instruction: 0x000261b8
   12df0:	andeq	r4, r1, r0, ror #24
   12df4:	andeq	r6, r2, r4, ror #3
   12df8:	andeq	r4, r1, r0, lsr #26
   12dfc:	andeq	r4, r1, r4, lsr #25
   12e00:	andeq	r4, r1, r4, ror ip
   12e04:	andeq	r4, r1, r0, lsl #26
   12e08:	ldrdeq	r4, [r1], -ip
   12e0c:	andeq	r4, r1, ip, lsr #25
   12e10:	cmp	r0, #0
   12e14:	cmpne	r1, #3
   12e18:	push	{r4, r5, r6, r7, r8, lr}
   12e1c:	ble	12e30 <abort@plt+0x1e04>
   12e20:	ldrb	r3, [r0]
   12e24:	mov	r6, r0
   12e28:	cmp	r3, #0
   12e2c:	bne	12e5c <abort@plt+0x1e30>
   12e30:	ldr	r4, [pc, #272]	; 12f48 <abort@plt+0x1f1c>
   12e34:	bl	128ac <abort@plt+0x1880>
   12e38:	mov	r1, #1
   12e3c:	ldr	r3, [r4]
   12e40:	mov	r2, #25
   12e44:	ldr	r0, [pc, #256]	; 12f4c <abort@plt+0x1f20>
   12e48:	bl	10e58 <fwrite@plt>
   12e4c:	ldr	r1, [r4]
   12e50:	mov	r0, #10
   12e54:	pop	{r4, r5, r6, r7, r8, lr}
   12e58:	b	10ff0 <putc@plt>
   12e5c:	mov	r4, r1
   12e60:	bl	12a44 <abort@plt+0x1a18>
   12e64:	mov	r1, r0
   12e68:	mov	r5, r0
   12e6c:	mov	r0, r6
   12e70:	bl	1273c <abort@plt+0x1710>
   12e74:	subs	r7, r0, #0
   12e78:	blt	12f20 <abort@plt+0x1ef4>
   12e7c:	sub	r1, r4, r5
   12e80:	add	r0, r6, r5
   12e84:	bl	12ab0 <abort@plt+0x1a84>
   12e88:	add	r5, r5, r0
   12e8c:	cmp	r4, r5
   12e90:	bne	12eb8 <abort@plt+0x1e8c>
   12e94:	mov	r0, #268	; 0x10c
   12e98:	bl	10e88 <malloc@plt>
   12e9c:	subs	r3, r0, #0
   12ea0:	beq	12ef4 <abort@plt+0x1ec8>
   12ea4:	mov	r2, #3
   12ea8:	str	r7, [r3, #8]
   12eac:	str	r2, [r3]
   12eb0:	pop	{r4, r5, r6, r7, r8, lr}
   12eb4:	b	126f8 <abort@plt+0x16cc>
   12eb8:	ldr	r8, [pc, #136]	; 12f48 <abort@plt+0x1f1c>
   12ebc:	bl	128ac <abort@plt+0x1880>
   12ec0:	sub	r1, r4, r5
   12ec4:	add	r0, r6, r5
   12ec8:	ldr	r4, [r8]
   12ecc:	bl	12918 <abort@plt+0x18ec>
   12ed0:	ldr	r2, [pc, #120]	; 12f50 <abort@plt+0x1f24>
   12ed4:	mov	r1, #1
   12ed8:	mov	r3, r0
   12edc:	mov	r0, r4
   12ee0:	bl	10f84 <__fprintf_chk@plt>
   12ee4:	ldr	r1, [r8]
   12ee8:	mov	r0, #10
   12eec:	bl	10ff0 <putc@plt>
   12ef0:	b	12e94 <abort@plt+0x1e68>
   12ef4:	ldr	r4, [pc, #76]	; 12f48 <abort@plt+0x1f1c>
   12ef8:	bl	128ac <abort@plt+0x1880>
   12efc:	ldr	r2, [pc, #80]	; 12f54 <abort@plt+0x1f28>
   12f00:	ldr	r0, [r4]
   12f04:	mov	r3, #12
   12f08:	mov	r1, #1
   12f0c:	bl	10f84 <__fprintf_chk@plt>
   12f10:	ldr	r1, [r4]
   12f14:	mov	r0, #10
   12f18:	pop	{r4, r5, r6, r7, r8, lr}
   12f1c:	b	10ff0 <putc@plt>
   12f20:	ldr	r4, [pc, #32]	; 12f48 <abort@plt+0x1f1c>
   12f24:	bl	128ac <abort@plt+0x1880>
   12f28:	mov	r1, r5
   12f2c:	mov	r0, r6
   12f30:	ldr	r5, [r4]
   12f34:	bl	12918 <abort@plt+0x18ec>
   12f38:	ldr	r2, [pc, #24]	; 12f58 <abort@plt+0x1f2c>
   12f3c:	mov	r3, r0
   12f40:	mov	r0, r5
   12f44:	b	12f08 <abort@plt+0x1edc>
   12f48:			; <UNDEFINED> instruction: 0x000261b8
   12f4c:	andeq	r4, r1, r4, asr sp
   12f50:	andeq	r4, r1, ip, lsl #27
   12f54:			; <UNDEFINED> instruction: 0x00014db4
   12f58:	andeq	r4, r1, r0, ror sp
   12f5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f60:	mov	r4, r1
   12f64:	ldr	r1, [pc, #436]	; 13120 <abort@plt+0x20f4>
   12f68:	sub	sp, sp, #28
   12f6c:	mov	r5, r0
   12f70:	ldr	r1, [r1]
   12f74:	mov	r0, #16
   12f78:	strd	r2, [sp]
   12f7c:	str	r1, [sp, #20]
   12f80:	bl	10e88 <malloc@plt>
   12f84:	subs	r8, r0, #0
   12f88:	beq	130ec <abort@plt+0x20c0>
   12f8c:	cmp	r4, #0
   12f90:	movle	r6, #0
   12f94:	ble	13064 <abort@plt+0x2038>
   12f98:	ldr	r9, [pc, #388]	; 13124 <abort@plt+0x20f8>
   12f9c:	ldr	sl, [pc, #388]	; 13128 <abort@plt+0x20fc>
   12fa0:	mov	r7, #4
   12fa4:	mov	r6, #0
   12fa8:	b	12fc0 <abort@plt+0x1f94>
   12fac:	ldr	r3, [sp, #12]
   12fb0:	cmp	r4, #0
   12fb4:	str	r3, [r8, r6, lsl #2]
   12fb8:	add	r6, r6, #1
   12fbc:	ble	13064 <abort@plt+0x2038>
   12fc0:	mov	r1, r4
   12fc4:	mov	r0, r5
   12fc8:	bl	12ab0 <abort@plt+0x1a84>
   12fcc:	sub	r4, r4, r0
   12fd0:	add	r5, r5, r0
   12fd4:	mov	r1, r4
   12fd8:	mov	r0, r5
   12fdc:	bl	12a44 <abort@plt+0x1a18>
   12fe0:	subs	fp, r0, #0
   12fe4:	blt	13094 <abort@plt+0x2068>
   12fe8:	mov	r0, r5
   12fec:	add	r3, sp, #12
   12ff0:	add	r2, sp, #16
   12ff4:	mov	r1, fp
   12ff8:	bl	129c8 <abort@plt+0x199c>
   12ffc:	sub	r4, r4, fp
   13000:	add	r5, r5, fp
   13004:	cmp	r0, #0
   13008:	beq	13038 <abort@plt+0x200c>
   1300c:	cmp	r7, r6
   13010:	bgt	12fac <abort@plt+0x1f80>
   13014:	lsl	r7, r7, #1
   13018:	mov	r0, r8
   1301c:	lsl	fp, r7, #2
   13020:	mov	r1, fp
   13024:	bl	10e4c <realloc@plt>
   13028:	cmp	r0, #0
   1302c:	beq	130cc <abort@plt+0x20a0>
   13030:	mov	r8, r0
   13034:	b	12fac <abort@plt+0x1f80>
   13038:	bl	128ac <abort@plt+0x1880>
   1303c:	ldr	r3, [sp, #16]
   13040:	mov	r2, sl
   13044:	mov	r1, #1
   13048:	ldr	r0, [r9]
   1304c:	bl	10f84 <__fprintf_chk@plt>
   13050:	ldr	r1, [r9]
   13054:	mov	r0, #10
   13058:	bl	10ff0 <putc@plt>
   1305c:	cmp	r4, #0
   13060:	bgt	12fc0 <abort@plt+0x1f94>
   13064:	ldr	r3, [sp, #4]
   13068:	mov	r0, #0
   1306c:	str	r8, [r3]
   13070:	ldr	r3, [sp]
   13074:	str	r6, [r3]
   13078:	ldr	r3, [pc, #160]	; 13120 <abort@plt+0x20f4>
   1307c:	ldr	r2, [sp, #20]
   13080:	ldr	r3, [r3]
   13084:	cmp	r2, r3
   13088:	bne	1311c <abort@plt+0x20f0>
   1308c:	add	sp, sp, #28
   13090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13094:	ldr	r4, [pc, #136]	; 13124 <abort@plt+0x20f8>
   13098:	bl	128ac <abort@plt+0x1880>
   1309c:	mov	r2, #16
   130a0:	ldr	r3, [r4]
   130a4:	mov	r1, #1
   130a8:	ldr	r0, [pc, #124]	; 1312c <abort@plt+0x2100>
   130ac:	bl	10e58 <fwrite@plt>
   130b0:	ldr	r1, [r4]
   130b4:	mov	r0, #10
   130b8:	bl	10ff0 <putc@plt>
   130bc:	mov	r0, r8
   130c0:	bl	10dec <free@plt>
   130c4:	mvn	r0, #0
   130c8:	b	13078 <abort@plt+0x204c>
   130cc:	ldr	r4, [pc, #80]	; 13124 <abort@plt+0x20f8>
   130d0:	bl	128ac <abort@plt+0x1880>
   130d4:	mov	r3, fp
   130d8:	ldr	r0, [r4]
   130dc:	ldr	r2, [pc, #76]	; 13130 <abort@plt+0x2104>
   130e0:	mov	r1, #1
   130e4:	bl	10f84 <__fprintf_chk@plt>
   130e8:	b	130b0 <abort@plt+0x2084>
   130ec:	ldr	r4, [pc, #48]	; 13124 <abort@plt+0x20f8>
   130f0:	bl	128ac <abort@plt+0x1880>
   130f4:	mov	r3, #16
   130f8:	ldr	r2, [pc, #52]	; 13134 <abort@plt+0x2108>
   130fc:	mov	r1, #1
   13100:	ldr	r0, [r4]
   13104:	bl	10f84 <__fprintf_chk@plt>
   13108:	ldr	r1, [r4]
   1310c:	mov	r0, #10
   13110:	bl	10ff0 <putc@plt>
   13114:	mvn	r0, #0
   13118:	b	13078 <abort@plt+0x204c>
   1311c:	bl	10e34 <__stack_chk_fail@plt>
   13120:	andeq	r5, r2, r0, lsl #30
   13124:			; <UNDEFINED> instruction: 0x000261b8
   13128:	andeq	r4, r1, ip, lsr #28
   1312c:	andeq	r4, r1, r8, lsl lr
   13130:	andeq	r4, r1, ip, asr #28
   13134:	andeq	r4, r1, r8, ror #27
   13138:	push	{r4, r5, r6, r7, r8, lr}
   1313c:	sub	sp, sp, #16
   13140:	ldr	r6, [pc, #532]	; 1335c <abort@plt+0x2330>
   13144:	cmp	r0, #0
   13148:	cmpne	r1, #5
   1314c:	ldr	r3, [r6]
   13150:	str	r3, [sp, #12]
   13154:	ble	13234 <abort@plt+0x2208>
   13158:	ldrb	r3, [r0]
   1315c:	mov	r4, r0
   13160:	cmp	r3, #0
   13164:	beq	13234 <abort@plt+0x2208>
   13168:	mov	r5, r1
   1316c:	bl	12a44 <abort@plt+0x1a18>
   13170:	cmp	r0, #0
   13174:	str	r0, [sp, #4]
   13178:	ble	132cc <abort@plt+0x22a0>
   1317c:	mov	r1, r0
   13180:	mov	r0, r4
   13184:	bl	1273c <abort@plt+0x1710>
   13188:	subs	r7, r0, #0
   1318c:	blt	132f8 <abort@plt+0x22cc>
   13190:	ldr	r3, [sp, #4]
   13194:	sub	r5, r5, r3
   13198:	cmp	r5, #0
   1319c:	add	r8, r4, r3
   131a0:	ble	13320 <abort@plt+0x22f4>
   131a4:	ldrb	r3, [r4, r3]
   131a8:	cmp	r3, #61	; 0x3d
   131ac:	subne	r1, r8, #1
   131b0:	addne	r1, r1, r5
   131b4:	movne	r3, r8
   131b8:	rsbne	ip, r8, #2
   131bc:	bne	131d0 <abort@plt+0x21a4>
   131c0:	b	13320 <abort@plt+0x22f4>
   131c4:	ldrb	r2, [r3, #1]!
   131c8:	cmp	r2, #61	; 0x3d
   131cc:	beq	131e0 <abort@plt+0x21b4>
   131d0:	add	r0, ip, r3
   131d4:	cmp	r3, r1
   131d8:	mov	r4, r0
   131dc:	bne	131c4 <abort@plt+0x2198>
   131e0:	sub	r1, r5, r4
   131e4:	add	r0, r8, r0
   131e8:	str	r4, [sp, #4]
   131ec:	bl	12ab0 <abort@plt+0x1a84>
   131f0:	mov	r3, #0
   131f4:	str	r3, [sp, #4]
   131f8:	str	r3, [sp, #8]
   131fc:	add	r0, r0, r4
   13200:	subs	r1, r5, r0
   13204:	bne	13274 <abort@plt+0x2248>
   13208:	ldr	r4, [pc, #336]	; 13360 <abort@plt+0x2334>
   1320c:	bl	128ac <abort@plt+0x1880>
   13210:	mov	r2, #32
   13214:	ldr	r3, [r4]
   13218:	mov	r1, #1
   1321c:	ldr	r0, [pc, #320]	; 13364 <abort@plt+0x2338>
   13220:	bl	10e58 <fwrite@plt>
   13224:	ldr	r1, [r4]
   13228:	mov	r0, #10
   1322c:	bl	10ff0 <putc@plt>
   13230:	b	1325c <abort@plt+0x2230>
   13234:	ldr	r4, [pc, #292]	; 13360 <abort@plt+0x2334>
   13238:	bl	128ac <abort@plt+0x1880>
   1323c:	mov	r1, #1
   13240:	mov	r2, #23
   13244:	ldr	r3, [r4]
   13248:	ldr	r0, [pc, #280]	; 13368 <abort@plt+0x233c>
   1324c:	bl	10e58 <fwrite@plt>
   13250:	ldr	r1, [r4]
   13254:	mov	r0, #10
   13258:	bl	10ff0 <putc@plt>
   1325c:	ldr	r2, [sp, #12]
   13260:	ldr	r3, [r6]
   13264:	cmp	r2, r3
   13268:	bne	13358 <abort@plt+0x232c>
   1326c:	add	sp, sp, #16
   13270:	pop	{r4, r5, r6, r7, r8, pc}
   13274:	add	r0, r8, r0
   13278:	add	r3, sp, #8
   1327c:	add	r2, sp, #4
   13280:	bl	12f5c <abort@plt+0x1f30>
   13284:	cmp	r0, #0
   13288:	blt	1325c <abort@plt+0x2230>
   1328c:	ldr	r3, [sp, #4]
   13290:	cmp	r3, #0
   13294:	beq	13208 <abort@plt+0x21dc>
   13298:	mov	r0, #268	; 0x10c
   1329c:	bl	10e88 <malloc@plt>
   132a0:	subs	r3, r0, #0
   132a4:	beq	1332c <abort@plt+0x2300>
   132a8:	ldr	ip, [sp, #4]
   132ac:	ldr	r1, [sp, #8]
   132b0:	mov	r2, #1
   132b4:	str	r7, [r3, #8]
   132b8:	str	ip, [r3, #12]
   132bc:	str	r1, [r3, #16]
   132c0:	str	r2, [r3]
   132c4:	bl	126f8 <abort@plt+0x16cc>
   132c8:	b	1325c <abort@plt+0x2230>
   132cc:	ldr	r5, [pc, #140]	; 13360 <abort@plt+0x2334>
   132d0:	bl	128ac <abort@plt+0x1880>
   132d4:	ldr	r2, [pc, #144]	; 1336c <abort@plt+0x2340>
   132d8:	ldr	r0, [r5]
   132dc:	mov	r3, r4
   132e0:	mov	r1, #1
   132e4:	bl	10f84 <__fprintf_chk@plt>
   132e8:	ldr	r1, [r5]
   132ec:	mov	r0, #10
   132f0:	bl	10ff0 <putc@plt>
   132f4:	b	1325c <abort@plt+0x2230>
   132f8:	ldr	r5, [pc, #96]	; 13360 <abort@plt+0x2334>
   132fc:	bl	128ac <abort@plt+0x1880>
   13300:	mov	r0, r4
   13304:	ldr	r1, [sp, #4]
   13308:	ldr	r4, [r5]
   1330c:	bl	12918 <abort@plt+0x18ec>
   13310:	ldr	r2, [pc, #88]	; 13370 <abort@plt+0x2344>
   13314:	mov	r3, r0
   13318:	mov	r0, r4
   1331c:	b	132e0 <abort@plt+0x22b4>
   13320:	mov	r0, #1
   13324:	mov	r4, r0
   13328:	b	131e0 <abort@plt+0x21b4>
   1332c:	ldr	r4, [pc, #44]	; 13360 <abort@plt+0x2334>
   13330:	bl	128ac <abort@plt+0x1880>
   13334:	mov	r3, #20
   13338:	ldr	r0, [r4]
   1333c:	ldr	r2, [pc, #48]	; 13374 <abort@plt+0x2348>
   13340:	mov	r1, #1
   13344:	bl	10f84 <__fprintf_chk@plt>
   13348:	ldr	r1, [r4]
   1334c:	mov	r0, #10
   13350:	bl	10ff0 <putc@plt>
   13354:	b	1325c <abort@plt+0x2230>
   13358:	bl	10e34 <__stack_chk_fail@plt>
   1335c:	andeq	r5, r2, r0, lsl #30
   13360:			; <UNDEFINED> instruction: 0x000261b8
   13364:	andeq	r4, r1, ip, asr #29
   13368:	andeq	r4, r1, r8, ror lr
   1336c:	muleq	r1, r0, lr
   13370:	andeq	r4, r1, r8, lsr #29
   13374:	strdeq	r4, [r1], -r0
   13378:	push	{r4, r5, r6, r7, r8, lr}
   1337c:	sub	sp, sp, #16
   13380:	ldr	r6, [pc, #368]	; 134f8 <abort@plt+0x24cc>
   13384:	cmp	r1, #0
   13388:	ldr	ip, [r6]
   1338c:	str	ip, [sp, #12]
   13390:	ble	134e8 <abort@plt+0x24bc>
   13394:	mov	r7, r3
   13398:	ldrb	r3, [r0]
   1339c:	mov	r5, r2
   133a0:	cmp	r3, #61	; 0x3d
   133a4:	beq	13418 <abort@plt+0x23ec>
   133a8:	add	r3, r0, #1
   133ac:	mov	r2, #0
   133b0:	b	133c4 <abort@plt+0x2398>
   133b4:	mov	r3, r0
   133b8:	ldrb	ip, [r3], #1
   133bc:	cmp	ip, #61	; 0x3d
   133c0:	beq	134d4 <abort@plt+0x24a8>
   133c4:	add	r2, r2, #1
   133c8:	cmp	r1, r2
   133cc:	mov	r0, r3
   133d0:	bne	133b4 <abort@plt+0x2388>
   133d4:	str	r1, [sp, #4]
   133d8:	ldr	r4, [pc, #284]	; 134fc <abort@plt+0x24d0>
   133dc:	bl	128ac <abort@plt+0x1880>
   133e0:	mov	r1, #1
   133e4:	mov	r2, #38	; 0x26
   133e8:	ldr	r3, [r4]
   133ec:	ldr	r0, [pc, #268]	; 13500 <abort@plt+0x24d4>
   133f0:	bl	10e58 <fwrite@plt>
   133f4:	ldr	r1, [r4]
   133f8:	mov	r0, #10
   133fc:	bl	10ff0 <putc@plt>
   13400:	ldr	r2, [sp, #12]
   13404:	ldr	r3, [r6]
   13408:	cmp	r2, r3
   1340c:	bne	134f4 <abort@plt+0x24c8>
   13410:	add	sp, sp, #16
   13414:	pop	{r4, r5, r6, r7, r8, pc}
   13418:	mov	r3, #0
   1341c:	str	r3, [sp, #4]
   13420:	sub	r8, r1, #1
   13424:	add	r4, r0, #1
   13428:	mov	r1, r8
   1342c:	mov	r0, r4
   13430:	bl	12ab0 <abort@plt+0x1a84>
   13434:	mov	r3, #0
   13438:	str	r3, [sp, #4]
   1343c:	str	r3, [sp, #8]
   13440:	subs	r1, r8, r0
   13444:	beq	13460 <abort@plt+0x2434>
   13448:	add	r0, r4, r0
   1344c:	add	r3, sp, #8
   13450:	add	r2, sp, #4
   13454:	bl	12f5c <abort@plt+0x1f30>
   13458:	cmp	r0, #0
   1345c:	blt	13400 <abort@plt+0x23d4>
   13460:	cmp	r7, #0
   13464:	addgt	r7, r5, r7
   13468:	movgt	r4, #0
   1346c:	bgt	13498 <abort@plt+0x246c>
   13470:	b	13400 <abort@plt+0x23d4>
   13474:	ldrb	ip, [r7, #-1]!
   13478:	ldmib	sp, {r1, r3}
   1347c:	str	r4, [r2]
   13480:	strb	ip, [r2, #8]
   13484:	str	r1, [r2, #12]
   13488:	str	r3, [r2, #16]
   1348c:	bl	126f8 <abort@plt+0x16cc>
   13490:	cmp	r5, r7
   13494:	beq	13400 <abort@plt+0x23d4>
   13498:	mov	r0, #268	; 0x10c
   1349c:	bl	10e88 <malloc@plt>
   134a0:	subs	r2, r0, #0
   134a4:	bne	13474 <abort@plt+0x2448>
   134a8:	ldr	r4, [pc, #76]	; 134fc <abort@plt+0x24d0>
   134ac:	bl	128ac <abort@plt+0x1880>
   134b0:	mov	r3, #20
   134b4:	ldr	r0, [r4]
   134b8:	ldr	r2, [pc, #68]	; 13504 <abort@plt+0x24d8>
   134bc:	mov	r1, #1
   134c0:	bl	10f84 <__fprintf_chk@plt>
   134c4:	ldr	r1, [r4]
   134c8:	mov	r0, #10
   134cc:	bl	10ff0 <putc@plt>
   134d0:	b	13400 <abort@plt+0x23d4>
   134d4:	sub	r1, r1, r2
   134d8:	cmp	r1, #0
   134dc:	str	r2, [sp, #4]
   134e0:	bgt	13420 <abort@plt+0x23f4>
   134e4:	b	133d8 <abort@plt+0x23ac>
   134e8:	mov	r3, #0
   134ec:	str	r3, [sp, #4]
   134f0:	b	133d8 <abort@plt+0x23ac>
   134f4:	bl	10e34 <__stack_chk_fail@plt>
   134f8:	andeq	r5, r2, r0, lsl #30
   134fc:			; <UNDEFINED> instruction: 0x000261b8
   13500:	andeq	r4, r1, r0, lsr #30
   13504:	andeq	r4, r1, r8, asr #30
   13508:	push	{r4, r5, r6, r7, lr}
   1350c:	sub	sp, sp, #20
   13510:	ldr	r5, [pc, #368]	; 13688 <abort@plt+0x265c>
   13514:	cmp	r0, #0
   13518:	cmpne	r1, #2
   1351c:	ldr	r3, [r5]
   13520:	str	r3, [sp, #12]
   13524:	ble	1362c <abort@plt+0x2600>
   13528:	ldrb	r7, [r0]
   1352c:	mov	r4, r0
   13530:	cmp	r7, #0
   13534:	beq	1362c <abort@plt+0x2600>
   13538:	mov	r6, r1
   1353c:	mov	r2, #3
   13540:	mov	r1, r0
   13544:	ldr	r0, [pc, #320]	; 1368c <abort@plt+0x2660>
   13548:	bl	11020 <strncmp@plt>
   1354c:	cmp	r0, #0
   13550:	strbeq	r0, [sp, #7]
   13554:	bne	13584 <abort@plt+0x2558>
   13558:	mov	r1, r6
   1355c:	mov	r0, r4
   13560:	mov	r3, #1
   13564:	add	r2, sp, #7
   13568:	bl	13378 <abort@plt+0x234c>
   1356c:	ldr	r2, [sp, #12]
   13570:	ldr	r3, [r5]
   13574:	cmp	r2, r3
   13578:	bne	13684 <abort@plt+0x2658>
   1357c:	add	sp, sp, #20
   13580:	pop	{r4, r5, r6, r7, pc}
   13584:	cmp	r7, #48	; 0x30
   13588:	subeq	r6, r6, #1
   1358c:	ldrbeq	r7, [r4, #1]
   13590:	ldreq	r1, [pc, #248]	; 13690 <abort@plt+0x2664>
   13594:	addeq	r4, r4, #1
   13598:	and	r7, r7, #223	; 0xdf
   1359c:	ldrne	r1, [pc, #240]	; 13694 <abort@plt+0x2668>
   135a0:	cmp	r7, #88	; 0x58
   135a4:	addeq	r4, r4, #1
   135a8:	ldreq	r1, [pc, #232]	; 13698 <abort@plt+0x266c>
   135ac:	mov	r3, #0
   135b0:	add	r2, sp, #8
   135b4:	mov	r0, r4
   135b8:	subeq	r6, r6, #1
   135bc:	str	r3, [sp, #8]
   135c0:	bl	10fe4 <sscanf@plt>
   135c4:	cmp	r0, #1
   135c8:	bne	13658 <abort@plt+0x262c>
   135cc:	ldr	r3, [sp, #8]
   135d0:	cmp	r3, #0
   135d4:	beq	13658 <abort@plt+0x262c>
   135d8:	ldr	r1, [pc, #188]	; 1369c <abort@plt+0x2670>
   135dc:	uxtb	r2, r3
   135e0:	strb	r3, [sp, #7]
   135e4:	ldr	r3, [r1]
   135e8:	cmp	r3, r2
   135ec:	bgt	13600 <abort@plt+0x25d4>
   135f0:	ldr	r3, [pc, #168]	; 136a0 <abort@plt+0x2674>
   135f4:	ldr	r3, [r3]
   135f8:	cmp	r3, r2
   135fc:	bge	13558 <abort@plt+0x252c>
   13600:	ldr	r4, [pc, #156]	; 136a4 <abort@plt+0x2678>
   13604:	bl	128ac <abort@plt+0x1880>
   13608:	mov	r2, #28
   1360c:	ldr	r3, [r4]
   13610:	mov	r1, #1
   13614:	ldr	r0, [pc, #140]	; 136a8 <abort@plt+0x267c>
   13618:	bl	10e58 <fwrite@plt>
   1361c:	ldr	r1, [r4]
   13620:	mov	r0, #10
   13624:	bl	10ff0 <putc@plt>
   13628:	b	1356c <abort@plt+0x2540>
   1362c:	ldr	r4, [pc, #112]	; 136a4 <abort@plt+0x2678>
   13630:	bl	128ac <abort@plt+0x1880>
   13634:	mov	r2, #18
   13638:	ldr	r3, [r4]
   1363c:	mov	r1, #1
   13640:	ldr	r0, [pc, #100]	; 136ac <abort@plt+0x2680>
   13644:	bl	10e58 <fwrite@plt>
   13648:	ldr	r1, [r4]
   1364c:	mov	r0, #10
   13650:	bl	10ff0 <putc@plt>
   13654:	b	1356c <abort@plt+0x2540>
   13658:	ldr	r4, [pc, #68]	; 136a4 <abort@plt+0x2678>
   1365c:	bl	128ac <abort@plt+0x1880>
   13660:	mov	r2, #13
   13664:	ldr	r3, [r4]
   13668:	mov	r1, #1
   1366c:	ldr	r0, [pc, #60]	; 136b0 <abort@plt+0x2684>
   13670:	bl	10e58 <fwrite@plt>
   13674:	ldr	r1, [r4]
   13678:	mov	r0, #10
   1367c:	bl	10ff0 <putc@plt>
   13680:	b	1356c <abort@plt+0x2540>
   13684:	bl	10e34 <__stack_chk_fail@plt>
   13688:	andeq	r5, r2, r0, lsl #30
   1368c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   13690:	andeq	r4, r1, r8, ror pc
   13694:	andeq	r4, r1, ip, ror pc
   13698:	andeq	r4, r1, r0, lsl #31
   1369c:	strdeq	r6, [r2], -r8
   136a0:	strdeq	r6, [r2], -r4
   136a4:			; <UNDEFINED> instruction: 0x000261b8
   136a8:	andeq	r4, r1, ip, lsr #31
   136ac:	andeq	r4, r1, r4, lsl #31
   136b0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   136b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   136b8:	sub	sp, sp, #20
   136bc:	ldr	r5, [pc, #428]	; 13870 <abort@plt+0x2844>
   136c0:	cmp	r0, #0
   136c4:	cmpne	r1, #2
   136c8:	ldr	r3, [r5]
   136cc:	str	r3, [sp, #12]
   136d0:	ble	13770 <abort@plt+0x2744>
   136d4:	ldrb	r3, [r0]
   136d8:	mov	r6, r0
   136dc:	cmp	r3, #0
   136e0:	beq	13770 <abort@plt+0x2744>
   136e4:	mov	r7, r1
   136e8:	bl	12a44 <abort@plt+0x1a18>
   136ec:	cmp	r0, #0
   136f0:	str	r0, [sp]
   136f4:	ble	1379c <abort@plt+0x2770>
   136f8:	mov	r1, r0
   136fc:	add	r3, sp, #4
   13700:	add	r2, sp, #8
   13704:	mov	r0, r6
   13708:	bl	129c8 <abort@plt+0x199c>
   1370c:	cmp	r0, #0
   13710:	beq	13828 <abort@plt+0x27fc>
   13714:	ldr	r3, [pc, #344]	; 13874 <abort@plt+0x2848>
   13718:	mov	r2, sp
   1371c:	ldr	r1, [sp, #4]
   13720:	ldr	r0, [r3]
   13724:	bl	127e0 <abort@plt+0x17b4>
   13728:	ldr	r3, [sp]
   1372c:	cmp	r3, #0
   13730:	mov	r8, r0
   13734:	beq	13854 <abort@plt+0x2828>
   13738:	ldr	r2, [pc, #312]	; 13878 <abort@plt+0x284c>
   1373c:	ldr	r2, [r2]
   13740:	cmp	r2, #0
   13744:	bne	137c8 <abort@plt+0x279c>
   13748:	mov	r2, r8
   1374c:	mov	r1, r7
   13750:	mov	r0, r6
   13754:	bl	13378 <abort@plt+0x234c>
   13758:	ldr	r2, [sp, #12]
   1375c:	ldr	r3, [r5]
   13760:	cmp	r2, r3
   13764:	bne	1386c <abort@plt+0x2840>
   13768:	add	sp, sp, #20
   1376c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13770:	ldr	r4, [pc, #260]	; 1387c <abort@plt+0x2850>
   13774:	bl	128ac <abort@plt+0x1880>
   13778:	mov	r2, #17
   1377c:	ldr	r3, [r4]
   13780:	mov	r1, #1
   13784:	ldr	r0, [pc, #244]	; 13880 <abort@plt+0x2854>
   13788:	bl	10e58 <fwrite@plt>
   1378c:	ldr	r1, [r4]
   13790:	mov	r0, #10
   13794:	bl	10ff0 <putc@plt>
   13798:	b	13758 <abort@plt+0x272c>
   1379c:	ldr	r4, [pc, #216]	; 1387c <abort@plt+0x2850>
   137a0:	bl	128ac <abort@plt+0x1880>
   137a4:	mov	r2, #18
   137a8:	ldr	r3, [r4]
   137ac:	mov	r1, #1
   137b0:	ldr	r0, [pc, #204]	; 13884 <abort@plt+0x2858>
   137b4:	bl	10e58 <fwrite@plt>
   137b8:	ldr	r1, [r4]
   137bc:	mov	r0, #10
   137c0:	bl	10ff0 <putc@plt>
   137c4:	b	13758 <abort@plt+0x272c>
   137c8:	ldr	r3, [sp, #4]
   137cc:	ldr	r2, [sp, #8]
   137d0:	ldr	r1, [pc, #176]	; 13888 <abort@plt+0x285c>
   137d4:	mov	r0, #1
   137d8:	bl	10f78 <__printf_chk@plt>
   137dc:	ldr	r3, [sp]
   137e0:	cmp	r3, #0
   137e4:	subgt	r4, r8, #1
   137e8:	ldrgt	r9, [pc, #156]	; 1388c <abort@plt+0x2860>
   137ec:	ble	13818 <abort@plt+0x27ec>
   137f0:	ldrb	r2, [r4, #1]
   137f4:	mov	r1, r9
   137f8:	mov	r0, #1
   137fc:	bl	10f78 <__printf_chk@plt>
   13800:	add	r3, r4, #2
   13804:	ldr	r2, [sp]
   13808:	sub	r3, r3, r8
   1380c:	cmp	r2, r3
   13810:	add	r4, r4, #1
   13814:	bgt	137f0 <abort@plt+0x27c4>
   13818:	mov	r0, #10
   1381c:	bl	10f3c <putchar@plt>
   13820:	ldr	r3, [sp]
   13824:	b	13748 <abort@plt+0x271c>
   13828:	ldr	r4, [pc, #76]	; 1387c <abort@plt+0x2850>
   1382c:	bl	128ac <abort@plt+0x1880>
   13830:	ldr	r3, [sp, #8]
   13834:	ldr	r0, [r4]
   13838:	ldr	r2, [pc, #80]	; 13890 <abort@plt+0x2864>
   1383c:	mov	r1, #1
   13840:	bl	10f84 <__fprintf_chk@plt>
   13844:	ldr	r1, [r4]
   13848:	mov	r0, #10
   1384c:	bl	10ff0 <putc@plt>
   13850:	b	13758 <abort@plt+0x272c>
   13854:	ldr	r4, [pc, #32]	; 1387c <abort@plt+0x2850>
   13858:	bl	128ac <abort@plt+0x1880>
   1385c:	ldr	r3, [sp, #8]
   13860:	ldr	r0, [r4]
   13864:	ldr	r2, [pc, #40]	; 13894 <abort@plt+0x2868>
   13868:	b	1383c <abort@plt+0x2810>
   1386c:	bl	10e34 <__stack_chk_fail@plt>
   13870:	andeq	r5, r2, r0, lsl #30
   13874:	andeq	r6, r2, r4, ror #3
   13878:	andeq	r6, r2, r8, ror #3
   1387c:			; <UNDEFINED> instruction: 0x000261b8
   13880:	andeq	r4, r1, ip, asr #31
   13884:	andeq	r4, r1, r0, ror #31
   13888:	andeq	r5, r1, ip, asr #32
   1388c:	andeq	r5, r1, ip, ror r0
   13890:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13894:	andeq	r5, r1, r4, lsl r0
   13898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1389c:	sub	sp, sp, #28
   138a0:	ldr	r8, [pc, #1020]	; 13ca4 <abort@plt+0x2c78>
   138a4:	cmp	r0, #0
   138a8:	cmpne	r1, #5
   138ac:	ldr	r3, [r8]
   138b0:	str	r3, [sp, #20]
   138b4:	ble	13998 <abort@plt+0x296c>
   138b8:	ldrb	r3, [r0]
   138bc:	mov	r4, r0
   138c0:	cmp	r3, #0
   138c4:	beq	13998 <abort@plt+0x296c>
   138c8:	mov	r7, r1
   138cc:	bl	12a44 <abort@plt+0x1a18>
   138d0:	cmp	r0, #0
   138d4:	str	r0, [sp, #8]
   138d8:	ble	13ae8 <abort@plt+0x2abc>
   138dc:	mov	r1, r0
   138e0:	mov	r0, r4
   138e4:	bl	1273c <abort@plt+0x1710>
   138e8:	subs	r3, r0, #0
   138ec:	str	r3, [sp, #4]
   138f0:	blt	13bf0 <abort@plt+0x2bc4>
   138f4:	ldr	r3, [sp, #8]
   138f8:	sub	r7, r7, r3
   138fc:	cmp	r7, #0
   13900:	add	r6, r4, r3
   13904:	ble	13c18 <abort@plt+0x2bec>
   13908:	ldrb	r3, [r4, r3]
   1390c:	cmp	r3, #61	; 0x3d
   13910:	subne	r1, r6, #1
   13914:	addne	r1, r1, r7
   13918:	movne	r3, r6
   1391c:	rsbne	ip, r6, #2
   13920:	bne	13934 <abort@plt+0x2908>
   13924:	b	13c18 <abort@plt+0x2bec>
   13928:	ldrb	r2, [r3, #1]!
   1392c:	cmp	r2, #61	; 0x3d
   13930:	beq	13944 <abort@plt+0x2918>
   13934:	add	r0, ip, r3
   13938:	cmp	r3, r1
   1393c:	mov	r4, r0
   13940:	bne	13928 <abort@plt+0x28fc>
   13944:	sub	r1, r7, r4
   13948:	add	r0, r6, r0
   1394c:	str	r4, [sp, #8]
   13950:	bl	12ab0 <abort@plt+0x1a84>
   13954:	mov	r5, #0
   13958:	str	r5, [sp, #8]
   1395c:	str	r5, [sp, #12]
   13960:	add	r0, r0, r4
   13964:	subs	r1, r7, r0
   13968:	bne	139d8 <abort@plt+0x29ac>
   1396c:	ldr	r4, [pc, #820]	; 13ca8 <abort@plt+0x2c7c>
   13970:	bl	128ac <abort@plt+0x1880>
   13974:	mov	r2, #35	; 0x23
   13978:	ldr	r3, [r4]
   1397c:	mov	r1, #1
   13980:	ldr	r0, [pc, #804]	; 13cac <abort@plt+0x2c80>
   13984:	bl	10e58 <fwrite@plt>
   13988:	ldr	r1, [r4]
   1398c:	mov	r0, #10
   13990:	bl	10ff0 <putc@plt>
   13994:	b	139c0 <abort@plt+0x2994>
   13998:	ldr	r4, [pc, #776]	; 13ca8 <abort@plt+0x2c7c>
   1399c:	bl	128ac <abort@plt+0x1880>
   139a0:	mov	r1, #1
   139a4:	mov	r2, #26
   139a8:	ldr	r3, [r4]
   139ac:	ldr	r0, [pc, #764]	; 13cb0 <abort@plt+0x2c84>
   139b0:	bl	10e58 <fwrite@plt>
   139b4:	ldr	r1, [r4]
   139b8:	mov	r0, #10
   139bc:	bl	10ff0 <putc@plt>
   139c0:	ldr	r2, [sp, #20]
   139c4:	ldr	r3, [r8]
   139c8:	cmp	r2, r3
   139cc:	bne	13ca0 <abort@plt+0x2c74>
   139d0:	add	sp, sp, #28
   139d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139d8:	add	r0, r6, r0
   139dc:	add	r3, sp, #12
   139e0:	add	r2, sp, #8
   139e4:	bl	12f5c <abort@plt+0x1f30>
   139e8:	cmp	r0, #0
   139ec:	blt	139c0 <abort@plt+0x2994>
   139f0:	ldr	r0, [sp, #8]
   139f4:	cmp	r0, #0
   139f8:	beq	1396c <abort@plt+0x2940>
   139fc:	bl	10e88 <malloc@plt>
   13a00:	subs	r7, r0, #0
   13a04:	beq	13c88 <abort@plt+0x2c5c>
   13a08:	ldr	r9, [sp, #8]
   13a0c:	cmp	r9, #0
   13a10:	ble	13c98 <abort@plt+0x2c6c>
   13a14:	ldr	fp, [pc, #664]	; 13cb4 <abort@plt+0x2c88>
   13a18:	mov	r6, r5
   13a1c:	ldr	r3, [sp, #12]
   13a20:	ldr	r1, [pc, #656]	; 13cb8 <abort@plt+0x2c8c>
   13a24:	add	r2, sp, #16
   13a28:	lsl	sl, r5, #2
   13a2c:	ldr	r0, [r1]
   13a30:	ldr	r1, [r3, r5, lsl #2]
   13a34:	bl	127e0 <abort@plt+0x17b4>
   13a38:	ldr	ip, [sp, #16]
   13a3c:	cmp	ip, #0
   13a40:	mov	r4, r0
   13a44:	beq	13b34 <abort@plt+0x2b08>
   13a48:	ldr	r3, [fp]
   13a4c:	cmp	r3, #0
   13a50:	bne	13b7c <abort@plt+0x2b50>
   13a54:	add	sl, r6, ip
   13a58:	cmp	sl, r9
   13a5c:	bgt	13b14 <abort@plt+0x2ae8>
   13a60:	sub	r3, ip, #1
   13a64:	cmp	r3, #0
   13a68:	subge	r1, r6, #1
   13a6c:	str	r3, [sp, #16]
   13a70:	addge	r1, r7, r1
   13a74:	addge	lr, r4, ip
   13a78:	movge	r2, r4
   13a7c:	blt	13aa4 <abort@plt+0x2a78>
   13a80:	ldrb	r0, [r2], #1
   13a84:	mvn	r3, r2
   13a88:	add	r3, r4, r3
   13a8c:	add	r3, r3, ip
   13a90:	cmp	r2, lr
   13a94:	strb	r0, [r1, #1]!
   13a98:	str	r3, [sp, #16]
   13a9c:	bne	13a80 <abort@plt+0x2a54>
   13aa0:	add	r6, r6, ip
   13aa4:	ldr	r3, [sp, #8]
   13aa8:	add	r5, r5, #1
   13aac:	cmp	r3, r5
   13ab0:	bgt	13a1c <abort@plt+0x29f0>
   13ab4:	ldr	r0, [sp, #12]
   13ab8:	bl	10dec <free@plt>
   13abc:	mov	r0, #268	; 0x10c
   13ac0:	bl	10e88 <malloc@plt>
   13ac4:	subs	r3, r0, #0
   13ac8:	beq	13c5c <abort@plt+0x2c30>
   13acc:	ldr	r1, [sp, #4]
   13ad0:	mov	r2, #2
   13ad4:	str	r1, [r3, #8]
   13ad8:	strd	r6, [r3, #12]
   13adc:	str	r2, [r3]
   13ae0:	bl	126f8 <abort@plt+0x16cc>
   13ae4:	b	139c0 <abort@plt+0x2994>
   13ae8:	ldr	r5, [pc, #440]	; 13ca8 <abort@plt+0x2c7c>
   13aec:	bl	128ac <abort@plt+0x1880>
   13af0:	ldr	r2, [pc, #452]	; 13cbc <abort@plt+0x2c90>
   13af4:	ldr	r0, [r5]
   13af8:	mov	r3, r4
   13afc:	mov	r1, #1
   13b00:	bl	10f84 <__fprintf_chk@plt>
   13b04:	ldr	r1, [r5]
   13b08:	mov	r0, #10
   13b0c:	bl	10ff0 <putc@plt>
   13b10:	b	139c0 <abort@plt+0x2994>
   13b14:	mov	r0, r7
   13b18:	mov	r1, sl
   13b1c:	bl	10e4c <realloc@plt>
   13b20:	subs	r7, r0, #0
   13b24:	beq	13c24 <abort@plt+0x2bf8>
   13b28:	mov	r9, sl
   13b2c:	ldr	ip, [sp, #16]
   13b30:	b	13a60 <abort@plt+0x2a34>
   13b34:	ldr	r3, [sp, #12]
   13b38:	ldr	r0, [r3, r5, lsl #2]
   13b3c:	bl	11014 <XKeysymToString@plt>
   13b40:	mov	r4, r0
   13b44:	bl	128ac <abort@plt+0x1880>
   13b48:	ldr	r0, [pc, #344]	; 13ca8 <abort@plt+0x2c7c>
   13b4c:	cmp	r4, #0
   13b50:	ldr	r3, [pc, #360]	; 13cc0 <abort@plt+0x2c94>
   13b54:	movne	r3, r4
   13b58:	mov	r4, r0
   13b5c:	ldr	r2, [pc, #352]	; 13cc4 <abort@plt+0x2c98>
   13b60:	mov	r1, #1
   13b64:	ldr	r0, [r0]
   13b68:	bl	10f84 <__fprintf_chk@plt>
   13b6c:	ldr	r1, [r4]
   13b70:	mov	r0, #10
   13b74:	bl	10ff0 <putc@plt>
   13b78:	b	13aa4 <abort@plt+0x2a78>
   13b7c:	ldr	r3, [sp, #12]
   13b80:	ldr	r0, [r3, sl]
   13b84:	bl	11014 <XKeysymToString@plt>
   13b88:	ldr	r3, [sp, #12]
   13b8c:	ldr	r2, [pc, #300]	; 13cc0 <abort@plt+0x2c94>
   13b90:	ldr	r1, [pc, #304]	; 13cc8 <abort@plt+0x2c9c>
   13b94:	ldr	r3, [r3, sl]
   13b98:	cmp	r0, #0
   13b9c:	movne	r2, r0
   13ba0:	mov	r0, #1
   13ba4:	bl	10f78 <__printf_chk@plt>
   13ba8:	ldr	r3, [sp, #16]
   13bac:	cmp	r3, #0
   13bb0:	subgt	sl, r4, #1
   13bb4:	ble	13be0 <abort@plt+0x2bb4>
   13bb8:	ldrb	r2, [sl, #1]
   13bbc:	ldr	r1, [pc, #264]	; 13ccc <abort@plt+0x2ca0>
   13bc0:	mov	r0, #1
   13bc4:	bl	10f78 <__printf_chk@plt>
   13bc8:	add	r3, sl, #2
   13bcc:	ldr	r2, [sp, #16]
   13bd0:	sub	r3, r3, r4
   13bd4:	cmp	r2, r3
   13bd8:	add	sl, sl, #1
   13bdc:	bgt	13bb8 <abort@plt+0x2b8c>
   13be0:	mov	r0, #10
   13be4:	bl	10f3c <putchar@plt>
   13be8:	ldr	ip, [sp, #16]
   13bec:	b	13a54 <abort@plt+0x2a28>
   13bf0:	ldr	r5, [pc, #176]	; 13ca8 <abort@plt+0x2c7c>
   13bf4:	bl	128ac <abort@plt+0x1880>
   13bf8:	mov	r0, r4
   13bfc:	ldr	r1, [sp, #8]
   13c00:	ldr	r4, [r5]
   13c04:	bl	12918 <abort@plt+0x18ec>
   13c08:	ldr	r2, [pc, #192]	; 13cd0 <abort@plt+0x2ca4>
   13c0c:	mov	r3, r0
   13c10:	mov	r0, r4
   13c14:	b	13afc <abort@plt+0x2ad0>
   13c18:	mov	r0, #1
   13c1c:	mov	r4, r0
   13c20:	b	13944 <abort@plt+0x2918>
   13c24:	str	sl, [sp, #4]
   13c28:	ldr	r4, [pc, #120]	; 13ca8 <abort@plt+0x2c7c>
   13c2c:	bl	128ac <abort@plt+0x1880>
   13c30:	ldr	r3, [sp, #4]
   13c34:	ldr	r2, [pc, #152]	; 13cd4 <abort@plt+0x2ca8>
   13c38:	ldr	r0, [r4]
   13c3c:	mov	r1, #1
   13c40:	bl	10f84 <__fprintf_chk@plt>
   13c44:	ldr	r1, [r4]
   13c48:	mov	r0, #10
   13c4c:	bl	10ff0 <putc@plt>
   13c50:	ldr	r0, [sp, #12]
   13c54:	bl	10dec <free@plt>
   13c58:	b	139c0 <abort@plt+0x2994>
   13c5c:	ldr	r4, [pc, #68]	; 13ca8 <abort@plt+0x2c7c>
   13c60:	bl	128ac <abort@plt+0x1880>
   13c64:	mov	r3, #20
   13c68:	ldr	r0, [r4]
   13c6c:	ldr	r2, [pc, #100]	; 13cd8 <abort@plt+0x2cac>
   13c70:	mov	r1, #1
   13c74:	bl	10f84 <__fprintf_chk@plt>
   13c78:	ldr	r1, [r4]
   13c7c:	mov	r0, #10
   13c80:	bl	10ff0 <putc@plt>
   13c84:	b	139c0 <abort@plt+0x2994>
   13c88:	bl	128ac <abort@plt+0x1880>
   13c8c:	ldr	r4, [pc, #20]	; 13ca8 <abort@plt+0x2c7c>
   13c90:	ldr	r3, [sp, #8]
   13c94:	b	13c34 <abort@plt+0x2c08>
   13c98:	mov	r6, r5
   13c9c:	b	13ab4 <abort@plt+0x2a88>
   13ca0:	bl	10e34 <__stack_chk_fail@plt>
   13ca4:	andeq	r5, r2, r0, lsl #30
   13ca8:			; <UNDEFINED> instruction: 0x000261b8
   13cac:	andeq	r5, r1, r4, ror #1
   13cb0:	andeq	r5, r1, r8, lsl #1
   13cb4:	andeq	r6, r2, r8, ror #3
   13cb8:	andeq	r6, r2, r4, ror #3
   13cbc:	andeq	r5, r1, r4, lsr #1
   13cc0:	andeq	r5, r1, r4, lsl #1
   13cc4:	andeq	r5, r1, r4, lsr r1
   13cc8:	andeq	r5, r1, ip, asr #32
   13ccc:	andeq	r5, r1, ip, ror r0
   13cd0:	strheq	r5, [r1], -ip
   13cd4:	andeq	r5, r1, r8, lsl #2
   13cd8:	andeq	r5, r1, r4, ror r1
   13cdc:	ldr	r3, [pc, #20]	; 13cf8 <abort@plt+0x2ccc>
   13ce0:	push	{r4, lr}
   13ce4:	ldr	r0, [r3]
   13ce8:	bl	10ec4 <XGetModifierMapping@plt>
   13cec:	ldr	r3, [pc, #8]	; 13cfc <abort@plt+0x2cd0>
   13cf0:	str	r0, [r3, #16]
   13cf4:	pop	{r4, pc}
   13cf8:	andeq	r6, r2, r4, ror #3
   13cfc:	andeq	r6, r2, ip, asr #3
   13d00:	push	{r4, r5, r6, r7, lr}
   13d04:	sub	sp, sp, #12
   13d08:	mov	r6, r0
   13d0c:	mov	r7, r1
   13d10:	bl	12a44 <abort@plt+0x1a18>
   13d14:	subs	r5, r0, #0
   13d18:	blt	13dd4 <abort@plt+0x2da8>
   13d1c:	ldr	r4, [pc, #224]	; 13e04 <abort@plt+0x2dd8>
   13d20:	ldr	r1, [r4, #120]	; 0x78
   13d24:	cmp	r1, #0
   13d28:	addne	r4, r4, #120	; 0x78
   13d2c:	bne	13d40 <abort@plt+0x2d14>
   13d30:	b	13d88 <abort@plt+0x2d5c>
   13d34:	ldr	r1, [r4, #12]!
   13d38:	cmp	r1, #0
   13d3c:	beq	13d88 <abort@plt+0x2d5c>
   13d40:	ldr	r3, [r4, #4]
   13d44:	cmp	r3, r5
   13d48:	bne	13d34 <abort@plt+0x2d08>
   13d4c:	mov	r2, r5
   13d50:	mov	r0, r6
   13d54:	bl	11020 <strncmp@plt>
   13d58:	cmp	r0, #0
   13d5c:	bne	13d34 <abort@plt+0x2d08>
   13d60:	sub	r1, r7, r5
   13d64:	add	r0, r6, r5
   13d68:	bl	12ab0 <abort@plt+0x1a84>
   13d6c:	ldr	r3, [r4, #8]
   13d70:	add	r0, r5, r0
   13d74:	sub	r1, r7, r0
   13d78:	add	r0, r6, r0
   13d7c:	add	sp, sp, #12
   13d80:	pop	{r4, r5, r6, r7, lr}
   13d84:	bx	r3
   13d88:	ldr	r3, [pc, #120]	; 13e08 <abort@plt+0x2ddc>
   13d8c:	ldr	r0, [pc, #120]	; 13e0c <abort@plt+0x2de0>
   13d90:	ldr	r1, [pc, #120]	; 13e10 <abort@plt+0x2de4>
   13d94:	ldr	r3, [r3]
   13d98:	ldr	r0, [r0]
   13d9c:	ldr	r2, [pc, #112]	; 13e14 <abort@plt+0x2de8>
   13da0:	add	r3, r3, #1
   13da4:	stm	sp, {r0, r3}
   13da8:	ldr	r3, [r1]
   13dac:	ldr	r0, [r2]
   13db0:	mov	r1, #1
   13db4:	ldr	r2, [pc, #92]	; 13e18 <abort@plt+0x2dec>
   13db8:	bl	10f84 <__fprintf_chk@plt>
   13dbc:	ldr	r2, [pc, #88]	; 13e1c <abort@plt+0x2df0>
   13dc0:	ldr	r3, [r2]
   13dc4:	add	r3, r3, #1
   13dc8:	str	r3, [r2]
   13dcc:	add	sp, sp, #12
   13dd0:	pop	{r4, r5, r6, r7, pc}
   13dd4:	ldr	r4, [pc, #56]	; 13e14 <abort@plt+0x2de8>
   13dd8:	bl	128ac <abort@plt+0x1880>
   13ddc:	mov	r3, r6
   13de0:	ldr	r0, [r4]
   13de4:	ldr	r2, [pc, #52]	; 13e20 <abort@plt+0x2df4>
   13de8:	mov	r1, #1
   13dec:	bl	10f84 <__fprintf_chk@plt>
   13df0:	ldr	r1, [r4]
   13df4:	mov	r0, #10
   13df8:	add	sp, sp, #12
   13dfc:	pop	{r4, r5, r6, r7, lr}
   13e00:	b	10ff0 <putc@plt>
   13e04:	andeq	r6, r2, r8, ror #1
   13e08:	andeq	r6, r2, r0, ror #3
   13e0c:			; <UNDEFINED> instruction: 0x000261b4
   13e10:	strdeq	r6, [r2], -ip
   13e14:			; <UNDEFINED> instruction: 0x000261b8
   13e18:			; <UNDEFINED> instruction: 0x000151b8
   13e1c:	strdeq	r6, [r2], -r0
   13e20:	andeq	r5, r1, r8, lsr #3
   13e24:	push	{r4, lr}
   13e28:	ldr	r0, [pc, #40]	; 13e58 <abort@plt+0x2e2c>
   13e2c:	bl	10e7c <puts@plt>
   13e30:	ldr	r3, [pc, #36]	; 13e5c <abort@plt+0x2e30>
   13e34:	ldr	r4, [r3]
   13e38:	cmp	r4, #0
   13e3c:	popeq	{r4, pc}
   13e40:	mov	r0, r4
   13e44:	bl	1249c <abort@plt+0x1470>
   13e48:	ldr	r4, [r4, #4]
   13e4c:	cmp	r4, #0
   13e50:	bne	13e40 <abort@plt+0x2e14>
   13e54:	pop	{r4, pc}
   13e58:	ldrdeq	r5, [r1], -ip
   13e5c:	andeq	r6, r2, ip, asr #3
   13e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e64:	sub	sp, sp, #124	; 0x7c
   13e68:	ldr	sl, [pc, #1188]	; 14314 <abort@plt+0x32e8>
   13e6c:	ldr	r3, [pc, #1188]	; 14318 <abort@plt+0x32ec>
   13e70:	ldr	r2, [sl]
   13e74:	ldr	r3, [r3]
   13e78:	cmp	r2, #0
   13e7c:	str	r3, [sp, #116]	; 0x74
   13e80:	bne	14278 <abort@plt+0x324c>
   13e84:	ldr	r3, [pc, #1168]	; 1431c <abort@plt+0x32f0>
   13e88:	ldr	r4, [r3]
   13e8c:	cmp	r4, #0
   13e90:	beq	142a0 <abort@plt+0x3274>
   13e94:	ldr	r5, [pc, #1156]	; 14320 <abort@plt+0x32f4>
   13e98:	ldr	r8, [pc, #1156]	; 14324 <abort@plt+0x32f8>
   13e9c:	mov	r6, #0
   13ea0:	str	r6, [sp, #12]
   13ea4:	str	r6, [sp, #8]
   13ea8:	ldr	r3, [sl]
   13eac:	cmp	r3, #0
   13eb0:	bne	13fac <abort@plt+0x2f80>
   13eb4:	cmp	r6, #0
   13eb8:	beq	13f58 <abort@plt+0x2f2c>
   13ebc:	cmn	r6, #1
   13ec0:	beq	140dc <abort@plt+0x30b0>
   13ec4:	ldr	r3, [r4]
   13ec8:	cmp	r3, #0
   13ecc:	bne	140dc <abort@plt+0x30b0>
   13ed0:	ldrb	r9, [r4, #8]
   13ed4:	cmp	r9, #0
   13ed8:	ldrne	ip, [r4, #12]
   13edc:	beq	140dc <abort@plt+0x30b0>
   13ee0:	cmp	ip, #0
   13ee4:	ldr	r0, [r5]
   13ee8:	beq	141fc <abort@plt+0x31d0>
   13eec:	mov	lr, #1
   13ef0:	ldr	r3, [r4, #16]
   13ef4:	mov	r2, ip
   13ef8:	mov	r1, r9
   13efc:	str	lr, [sp]
   13f00:	bl	10de0 <XChangeKeyboardMapping@plt>
   13f04:	ldrb	r3, [r4, #8]
   13f08:	ldr	r4, [r4, #4]
   13f0c:	cmp	r3, #0
   13f10:	movne	r6, #1
   13f14:	mvneq	r6, #0
   13f18:	cmp	r4, #0
   13f1c:	bne	13ea8 <abort@plt+0x2e7c>
   13f20:	ldr	r3, [sp, #12]
   13f24:	cmp	r3, #0
   13f28:	bne	142a8 <abort@plt+0x327c>
   13f2c:	ldr	r3, [sp, #8]
   13f30:	adds	r0, r3, #0
   13f34:	movne	r0, #1
   13f38:	rsb	r0, r0, #0
   13f3c:	ldr	r3, [pc, #980]	; 14318 <abort@plt+0x32ec>
   13f40:	ldr	r2, [sp, #116]	; 0x74
   13f44:	ldr	r3, [r3]
   13f48:	cmp	r2, r3
   13f4c:	bne	142ec <abort@plt+0x32c0>
   13f50:	add	sp, sp, #124	; 0x7c
   13f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f58:	ldr	r3, [r4]
   13f5c:	cmp	r3, #4
   13f60:	ldrls	pc, [pc, r3, lsl #2]
   13f64:	b	142f0 <abort@plt+0x32c4>
   13f68:	andeq	r4, r1, r8, asr r1
   13f6c:	andeq	r4, r1, ip, lsr r0
   13f70:	ldrdeq	r3, [r1], -ip
   13f74:			; <UNDEFINED> instruction: 0x00013fb8
   13f78:	andeq	r3, r1, ip, ror pc
   13f7c:	ldr	r1, [r4, #8]
   13f80:	add	r0, r4, #12
   13f84:	bl	121d8 <abort@plt+0x11ac>
   13f88:	cmp	r0, #0
   13f8c:	movge	r6, #0
   13f90:	blt	14028 <abort@plt+0x2ffc>
   13f94:	ldr	r4, [r4, #4]
   13f98:	cmp	r4, #0
   13f9c:	beq	13f20 <abort@plt+0x2ef4>
   13fa0:	ldr	r3, [sl]
   13fa4:	cmp	r3, #0
   13fa8:	beq	13eb4 <abort@plt+0x2e88>
   13fac:	mov	r0, r4
   13fb0:	bl	1249c <abort@plt+0x1470>
   13fb4:	b	13eb4 <abort@plt+0x2e88>
   13fb8:	ldr	r1, [r4, #8]
   13fbc:	ldr	r0, [pc, #868]	; 14328 <abort@plt+0x32fc>
   13fc0:	bl	11c74 <abort@plt+0xc48>
   13fc4:	cmp	r0, #0
   13fc8:	blt	14028 <abort@plt+0x2ffc>
   13fcc:	mov	r6, #0
   13fd0:	mov	r3, #1
   13fd4:	str	r3, [sp, #12]
   13fd8:	b	13f94 <abort@plt+0x2f68>
   13fdc:	ldr	r3, [r4, #12]
   13fe0:	cmp	r3, #0
   13fe4:	ble	13fcc <abort@plt+0x2fa0>
   13fe8:	mov	r9, #0
   13fec:	ldr	r7, [pc, #820]	; 14328 <abort@plt+0x32fc>
   13ff0:	mov	r6, r9
   13ff4:	ldr	r3, [r4, #16]
   13ff8:	ldr	r2, [r4, #8]
   13ffc:	mov	r0, r7
   14000:	ldrb	r1, [r3, r6]
   14004:	bl	11c40 <abort@plt+0xc14>
   14008:	ldr	r3, [r4, #12]
   1400c:	add	r6, r6, #1
   14010:	cmp	r0, #0
   14014:	mvnlt	r9, #0
   14018:	cmp	r6, r3
   1401c:	blt	13ff4 <abort@plt+0x2fc8>
   14020:	cmn	r9, #1
   14024:	bne	13fcc <abort@plt+0x2fa0>
   14028:	ldr	r3, [sp, #8]
   1402c:	mov	r6, #0
   14030:	add	r3, r3, #1
   14034:	str	r3, [sp, #8]
   14038:	b	13f94 <abort@plt+0x2f68>
   1403c:	ldr	r3, [r4, #12]
   14040:	mov	r6, #0
   14044:	cmp	r3, #0
   14048:	movgt	r9, r6
   1404c:	ldrgt	r7, [pc, #724]	; 14328 <abort@plt+0x32fc>
   14050:	bgt	14068 <abort@plt+0x303c>
   14054:	b	13fd0 <abort@plt+0x2fa4>
   14058:	ldr	r3, [r4, #12]
   1405c:	add	r9, r9, #1
   14060:	cmp	r9, r3
   14064:	bge	140a0 <abort@plt+0x3074>
   14068:	ldr	r3, [r4, #16]
   1406c:	add	r2, sp, #16
   14070:	ldr	r0, [r5]
   14074:	ldr	r1, [r3, r9, lsl #2]
   14078:	bl	127e0 <abort@plt+0x17b4>
   1407c:	ldr	r3, [sp, #16]
   14080:	cmp	r3, #0
   14084:	mvneq	r6, #0
   14088:	mov	fp, r0
   1408c:	bne	140c8 <abort@plt+0x309c>
   14090:	ldr	r3, [r4, #12]
   14094:	add	r9, r9, #1
   14098:	cmp	r9, r3
   1409c:	blt	14068 <abort@plt+0x303c>
   140a0:	cmn	r6, #1
   140a4:	bne	13fcc <abort@plt+0x2fa0>
   140a8:	b	14028 <abort@plt+0x2ffc>
   140ac:	ldr	r2, [r4, #8]
   140b0:	ldrb	r1, [fp], #1
   140b4:	mov	r0, r7
   140b8:	bl	11c0c <abort@plt+0xbe0>
   140bc:	ldr	r3, [sp, #16]
   140c0:	cmp	r0, #0
   140c4:	mvnlt	r6, #0
   140c8:	sub	r3, r3, #1
   140cc:	cmp	r3, #0
   140d0:	str	r3, [sp, #16]
   140d4:	bge	140ac <abort@plt+0x3080>
   140d8:	b	14058 <abort@plt+0x302c>
   140dc:	mov	r1, #0
   140e0:	ldr	r0, [r5]
   140e4:	bl	10f6c <XSync@plt>
   140e8:	mov	r1, #0
   140ec:	ldr	r0, [r5]
   140f0:	bl	10e04 <XEventsQueued@plt>
   140f4:	cmp	r0, #0
   140f8:	ble	13f58 <abort@plt+0x2f2c>
   140fc:	add	r1, sp, #20
   14100:	ldr	r0, [r5]
   14104:	bl	10f0c <XNextEvent@plt>
   14108:	ldr	r3, [sp, #20]
   1410c:	cmp	r3, #34	; 0x22
   14110:	beq	14134 <abort@plt+0x3108>
   14114:	ldr	r0, [pc, #528]	; 1432c <abort@plt+0x3300>
   14118:	str	r3, [sp]
   1411c:	ldr	r2, [pc, #524]	; 14330 <abort@plt+0x3304>
   14120:	ldr	r3, [r8]
   14124:	mov	r1, #1
   14128:	ldr	r0, [r0]
   1412c:	bl	10f84 <__fprintf_chk@plt>
   14130:	b	140e8 <abort@plt+0x30bc>
   14134:	add	r2, sp, #20
   14138:	mov	r1, #34	; 0x22
   1413c:	ldr	r0, [r5]
   14140:	bl	10fd8 <XCheckTypedEvent@plt>
   14144:	cmp	r0, #0
   14148:	bne	14134 <abort@plt+0x3108>
   1414c:	add	r0, sp, #20
   14150:	bl	10f60 <XRefreshKeyboardMapping@plt>
   14154:	b	140e8 <abort@plt+0x30bc>
   14158:	ldrb	r9, [r4, #8]
   1415c:	ldr	ip, [r4, #12]
   14160:	cmp	r9, #0
   14164:	bne	13ee0 <abort@plt+0x2eb4>
   14168:	cmp	ip, #0
   1416c:	mvneq	r6, #0
   14170:	beq	13f94 <abort@plt+0x2f68>
   14174:	ldr	r3, [pc, #440]	; 14334 <abort@plt+0x3308>
   14178:	ldr	r7, [r3]
   1417c:	ldr	r3, [pc, #436]	; 14338 <abort@plt+0x330c>
   14180:	ldr	r3, [r3]
   14184:	cmp	r7, r3
   14188:	bgt	1424c <abort@plt+0x3220>
   1418c:	cmp	ip, #0
   14190:	ble	13f04 <abort@plt+0x2ed8>
   14194:	uxtb	fp, r7
   14198:	mov	r6, #0
   1419c:	b	141ac <abort@plt+0x3180>
   141a0:	add	r6, r6, #1
   141a4:	cmp	r6, r3
   141a8:	bge	13f04 <abort@plt+0x2ed8>
   141ac:	mov	r2, r6
   141b0:	mov	r1, fp
   141b4:	ldr	r0, [r5]
   141b8:	bl	10f9c <XKeycodeToKeysym@plt>
   141bc:	ldr	r3, [r4, #16]
   141c0:	ldr	r3, [r3, r6, lsl #2]
   141c4:	cmp	r0, r3
   141c8:	ldr	r3, [r4, #12]
   141cc:	beq	141a0 <abort@plt+0x3174>
   141d0:	cmp	r3, r6
   141d4:	ble	13f04 <abort@plt+0x2ed8>
   141d8:	cmp	r9, #0
   141dc:	beq	1421c <abort@plt+0x31f0>
   141e0:	ldr	r3, [pc, #336]	; 14338 <abort@plt+0x330c>
   141e4:	add	r7, r7, #1
   141e8:	ldr	r3, [r3]
   141ec:	cmp	r7, r3
   141f0:	bgt	142c4 <abort@plt+0x3298>
   141f4:	ldr	ip, [r4, #12]
   141f8:	b	1418c <abort@plt+0x3160>
   141fc:	mov	r2, #1
   14200:	add	r3, sp, #16
   14204:	mov	r1, r9
   14208:	str	r2, [sp]
   1420c:	str	ip, [sp, #16]
   14210:	bl	10de0 <XChangeKeyboardMapping@plt>
   14214:	ldrb	r3, [r4, #8]
   14218:	b	13f08 <abort@plt+0x2edc>
   1421c:	mov	r6, r9
   14220:	mov	r2, r6
   14224:	mov	r1, fp
   14228:	ldr	r0, [r5]
   1422c:	bl	10f9c <XKeycodeToKeysym@plt>
   14230:	cmp	r0, #0
   14234:	bne	141e0 <abort@plt+0x31b4>
   14238:	add	r6, r6, #1
   1423c:	cmp	r6, #8
   14240:	bne	14220 <abort@plt+0x31f4>
   14244:	mov	r9, fp
   14248:	b	141e0 <abort@plt+0x31b4>
   1424c:	ldr	r0, [pc, #216]	; 1432c <abort@plt+0x3300>
   14250:	ldr	ip, [sp, #8]
   14254:	mov	r1, #1
   14258:	ldr	r3, [r8]
   1425c:	add	ip, ip, r1
   14260:	ldr	r2, [pc, #212]	; 1433c <abort@plt+0x3310>
   14264:	ldr	r0, [r0]
   14268:	str	ip, [sp, #8]
   1426c:	bl	10f84 <__fprintf_chk@plt>
   14270:	ldrb	r3, [r4, #8]
   14274:	b	13f08 <abort@plt+0x2edc>
   14278:	ldr	r0, [pc, #192]	; 14340 <abort@plt+0x3314>
   1427c:	bl	10e7c <puts@plt>
   14280:	ldr	r0, [pc, #188]	; 14344 <abort@plt+0x3318>
   14284:	bl	10e7c <puts@plt>
   14288:	ldr	r0, [pc, #176]	; 14340 <abort@plt+0x3314>
   1428c:	bl	10e7c <puts@plt>
   14290:	ldr	r3, [pc, #132]	; 1431c <abort@plt+0x32f0>
   14294:	ldr	r4, [r3]
   14298:	cmp	r4, #0
   1429c:	bne	13e94 <abort@plt+0x2e68>
   142a0:	mov	r0, r4
   142a4:	b	13f3c <abort@plt+0x2f10>
   142a8:	ldr	r3, [pc, #108]	; 1431c <abort@plt+0x32f0>
   142ac:	ldr	r0, [r3, #16]
   142b0:	bl	11a38 <abort@plt+0xa0c>
   142b4:	cmp	r0, #0
   142b8:	mvnlt	r0, #0
   142bc:	bge	13f2c <abort@plt+0x2f00>
   142c0:	b	13f3c <abort@plt+0x2f10>
   142c4:	cmp	r9, #0
   142c8:	beq	1424c <abort@plt+0x3220>
   142cc:	mov	r0, #1
   142d0:	ldrd	r2, [r4, #12]
   142d4:	mov	r1, r9
   142d8:	str	r0, [sp]
   142dc:	ldr	r0, [r5]
   142e0:	bl	10de0 <XChangeKeyboardMapping@plt>
   142e4:	ldrb	r3, [r4, #8]
   142e8:	b	13f08 <abort@plt+0x2edc>
   142ec:	bl	10e34 <__stack_chk_fail@plt>
   142f0:	ldr	r0, [pc, #52]	; 1432c <abort@plt+0x3300>
   142f4:	str	r3, [sp]
   142f8:	ldr	r2, [pc, #72]	; 14348 <abort@plt+0x331c>
   142fc:	ldr	r3, [r8]
   14300:	mov	r1, #1
   14304:	ldr	r0, [r0]
   14308:	bl	10f84 <__fprintf_chk@plt>
   1430c:	mov	r6, #0
   14310:	b	13f94 <abort@plt+0x2f68>
   14314:	andeq	r6, r2, r8, ror #3
   14318:	andeq	r5, r2, r0, lsl #30
   1431c:	andeq	r6, r2, ip, asr #3
   14320:	andeq	r6, r2, r4, ror #3
   14324:	strdeq	r6, [r2], -ip
   14328:	ldrdeq	r6, [r2], -ip
   1432c:			; <UNDEFINED> instruction: 0x000261b8
   14330:	andeq	r5, r1, r0, lsl r2
   14334:	strdeq	r6, [r2], -r8
   14338:	strdeq	r6, [r2], -r4
   1433c:	andeq	r5, r1, r8, lsr #4
   14340:	strdeq	r5, [r1], -r4
   14344:	strdeq	r5, [r1], -r8
   14348:	andeq	r5, r1, r4, asr r2
   1434c:	ldr	r2, [pc, #12]	; 14360 <abort@plt+0x3334>
   14350:	ldr	r3, [pc, #12]	; 14364 <abort@plt+0x3338>
   14354:	ldr	r1, [r2]
   14358:	ldr	r0, [r3, #16]
   1435c:	b	11cb0 <abort@plt+0xc84>
   14360:	andeq	r6, r2, r4, asr #3
   14364:	andeq	r6, r2, ip, asr #3
   14368:	ldr	r3, [pc, #4]	; 14374 <abort@plt+0x3348>
   1436c:	ldr	r1, [r3]
   14370:	b	11e74 <abort@plt+0xe48>
   14374:	andeq	r6, r2, r4, asr #3
   14378:	ldr	r3, [pc, #4]	; 14384 <abort@plt+0x3358>
   1437c:	ldr	r0, [r3]
   14380:	b	120f0 <abort@plt+0x10c4>
   14384:	andeq	r6, r2, r4, asr #3
   14388:	push	{r4, r5, r6, r7, lr}
   1438c:	sub	sp, sp, #12
   14390:	mov	r4, r0
   14394:	bl	10ef4 <strlen@plt>
   14398:	mov	r7, r0
   1439c:	mov	r0, r4
   143a0:	bl	10e28 <strdup@plt>
   143a4:	subs	r5, r0, #0
   143a8:	beq	144d8 <abort@plt+0x34ac>
   143ac:	cmp	r7, #0
   143b0:	beq	14400 <abort@plt+0x33d4>
   143b4:	bl	10ed0 <__ctype_b_loc@plt>
   143b8:	mov	r2, r5
   143bc:	mov	ip, #0
   143c0:	ldr	r0, [r0]
   143c4:	ldrb	r1, [r2]
   143c8:	mov	r4, r2
   143cc:	add	r2, r2, #1
   143d0:	lsl	r3, r1, #1
   143d4:	ldrh	r3, [r0, r3]
   143d8:	lsr	r3, r3, #13
   143dc:	eor	r3, r3, #1
   143e0:	cmp	r1, #10
   143e4:	moveq	r3, #0
   143e8:	andne	r3, r3, #1
   143ec:	cmp	r3, #0
   143f0:	bne	14410 <abort@plt+0x33e4>
   143f4:	add	ip, ip, #1
   143f8:	cmp	r7, ip
   143fc:	bne	143c4 <abort@plt+0x3398>
   14400:	mov	r0, r5
   14404:	add	sp, sp, #12
   14408:	pop	{r4, r5, r6, r7, lr}
   1440c:	b	10dec <free@plt>
   14410:	cmp	r1, #33	; 0x21
   14414:	beq	14400 <abort@plt+0x33d4>
   14418:	sub	r7, r7, ip
   1441c:	subs	r6, r7, #1
   14420:	bmi	14460 <abort@plt+0x3434>
   14424:	bl	10ed0 <__ctype_b_loc@plt>
   14428:	add	r1, r4, r7
   1442c:	ldr	r0, [r0]
   14430:	ldrb	r2, [r1, #-1]!
   14434:	lsl	r3, r2, #1
   14438:	ldrh	r3, [r0, r3]
   1443c:	lsr	r3, r3, #13
   14440:	eor	r3, r3, #1
   14444:	cmp	r2, #10
   14448:	moveq	r3, #0
   1444c:	andne	r3, r3, #1
   14450:	cmp	r3, #0
   14454:	bne	144b8 <abort@plt+0x348c>
   14458:	subs	r6, r6, #1
   1445c:	bcs	14430 <abort@plt+0x3404>
   14460:	ldr	r3, [pc, #152]	; 14500 <abort@plt+0x34d4>
   14464:	ldr	r3, [r3]
   14468:	cmp	r3, #0
   1446c:	bne	1448c <abort@plt+0x3460>
   14470:	mov	r1, r7
   14474:	mov	r0, r4
   14478:	bl	13d00 <abort@plt+0x2cd4>
   1447c:	mov	r0, r5
   14480:	add	sp, sp, #12
   14484:	pop	{r4, r5, r6, r7, lr}
   14488:	b	10dec <free@plt>
   1448c:	ldr	r2, [pc, #112]	; 14504 <abort@plt+0x34d8>
   14490:	mov	r0, #1
   14494:	mov	r3, r4
   14498:	ldr	r2, [r2]
   1449c:	ldr	r1, [pc, #100]	; 14508 <abort@plt+0x34dc>
   144a0:	add	r2, r2, r0
   144a4:	bl	10f78 <__printf_chk@plt>
   144a8:	mov	r1, r7
   144ac:	mov	r0, r4
   144b0:	bl	13d00 <abort@plt+0x2cd4>
   144b4:	b	1447c <abort@plt+0x3450>
   144b8:	add	r7, r6, #1
   144bc:	mov	r3, #0
   144c0:	strb	r3, [r4, r7]
   144c4:	ldr	r3, [pc, #52]	; 14500 <abort@plt+0x34d4>
   144c8:	ldr	r3, [r3]
   144cc:	cmp	r3, #0
   144d0:	beq	14470 <abort@plt+0x3444>
   144d4:	b	1448c <abort@plt+0x3460>
   144d8:	ldr	r2, [pc, #44]	; 1450c <abort@plt+0x34e0>
   144dc:	ldr	r3, [pc, #44]	; 14510 <abort@plt+0x34e4>
   144e0:	str	r7, [sp]
   144e4:	mov	r1, #1
   144e8:	ldr	r0, [r2]
   144ec:	ldr	r3, [r3]
   144f0:	ldr	r2, [pc, #28]	; 14514 <abort@plt+0x34e8>
   144f4:	bl	10f84 <__fprintf_chk@plt>
   144f8:	mvn	r0, #0
   144fc:	bl	14688 <abort@plt+0x365c>
   14500:	andeq	r6, r2, r8, ror #3
   14504:	andeq	r6, r2, r0, ror #3
   14508:	andeq	r5, r1, r4, lsl #6
   1450c:			; <UNDEFINED> instruction: 0x000261b8
   14510:	strdeq	r6, [r2], -ip
   14514:	andeq	r5, r1, r0, ror #5
   14518:	push	{r4, r5, r6, r7, r8, lr}
   1451c:	sub	sp, sp, #8192	; 0x2000
   14520:	ldr	r8, [pc, #300]	; 14654 <abort@plt+0x3628>
   14524:	sub	sp, sp, #16
   14528:	add	r2, sp, #8192	; 0x2000
   1452c:	ldr	r3, [r8]
   14530:	add	r2, r2, #12
   14534:	subs	r4, r0, #0
   14538:	str	r3, [r2]
   1453c:	beq	145e4 <abort@plt+0x35b8>
   14540:	ldr	r1, [pc, #272]	; 14658 <abort@plt+0x362c>
   14544:	bl	10dd4 <fopen@plt>
   14548:	subs	r5, r0, #0
   1454c:	ldrne	r7, [pc, #264]	; 1465c <abort@plt+0x3630>
   14550:	strne	r4, [r7]
   14554:	beq	1461c <abort@plt+0x35f0>
   14558:	ldr	r3, [pc, #256]	; 14660 <abort@plt+0x3634>
   1455c:	ldr	r3, [r3]
   14560:	cmp	r3, #0
   14564:	bne	14608 <abort@plt+0x35dc>
   14568:	ldr	r4, [pc, #244]	; 14664 <abort@plt+0x3638>
   1456c:	mov	r3, #0
   14570:	mov	r6, r3
   14574:	str	r3, [r4]
   14578:	b	14590 <abort@plt+0x3564>
   1457c:	add	r0, sp, #12
   14580:	bl	14388 <abort@plt+0x335c>
   14584:	ldr	r3, [r4]
   14588:	add	r3, r3, #1
   1458c:	str	r3, [r4]
   14590:	mov	r2, r5
   14594:	mov	r1, #8192	; 0x2000
   14598:	add	r0, sp, #12
   1459c:	strb	r6, [sp, #12]
   145a0:	bl	10df8 <fgets@plt>
   145a4:	subs	r3, r0, #0
   145a8:	bne	1457c <abort@plt+0x3550>
   145ac:	ldr	r2, [pc, #180]	; 14668 <abort@plt+0x363c>
   145b0:	mov	r0, r5
   145b4:	str	r3, [r4]
   145b8:	str	r2, [r7]
   145bc:	bl	10f90 <fclose@plt>
   145c0:	add	r3, sp, #8192	; 0x2000
   145c4:	add	r3, r3, #12
   145c8:	ldr	r2, [r3]
   145cc:	ldr	r3, [r8]
   145d0:	cmp	r2, r3
   145d4:	bne	14650 <abort@plt+0x3624>
   145d8:	add	sp, sp, #8192	; 0x2000
   145dc:	add	sp, sp, #16
   145e0:	pop	{r4, r5, r6, r7, r8, pc}
   145e4:	ldr	r7, [pc, #112]	; 1465c <abort@plt+0x3630>
   145e8:	ldr	r3, [pc, #124]	; 1466c <abort@plt+0x3640>
   145ec:	ldr	r2, [pc, #124]	; 14670 <abort@plt+0x3644>
   145f0:	str	r3, [r7]
   145f4:	ldr	r3, [pc, #100]	; 14660 <abort@plt+0x3634>
   145f8:	ldr	r5, [r2]
   145fc:	ldr	r3, [r3]
   14600:	cmp	r3, #0
   14604:	beq	14568 <abort@plt+0x353c>
   14608:	ldr	r2, [r7]
   1460c:	ldr	r1, [pc, #96]	; 14674 <abort@plt+0x3648>
   14610:	mov	r0, #1
   14614:	bl	10f78 <__printf_chk@plt>
   14618:	b	14568 <abort@plt+0x353c>
   1461c:	ldr	r2, [pc, #84]	; 14678 <abort@plt+0x364c>
   14620:	ldr	r3, [pc, #84]	; 1467c <abort@plt+0x3650>
   14624:	str	r4, [sp]
   14628:	mov	r1, #1
   1462c:	ldr	r3, [r3]
   14630:	ldr	r0, [r2]
   14634:	ldr	r2, [pc, #68]	; 14680 <abort@plt+0x3654>
   14638:	bl	10f84 <__fprintf_chk@plt>
   1463c:	ldr	r2, [pc, #64]	; 14684 <abort@plt+0x3658>
   14640:	ldr	r3, [r2]
   14644:	add	r3, r3, #1
   14648:	str	r3, [r2]
   1464c:	b	145c0 <abort@plt+0x3594>
   14650:	bl	10e34 <__stack_chk_fail@plt>
   14654:	andeq	r5, r2, r0, lsl #30
   14658:	ldrdeq	r5, [r1], -r4
   1465c:			; <UNDEFINED> instruction: 0x000261b4
   14660:	andeq	r6, r2, r8, ror #3
   14664:	andeq	r6, r2, r0, ror #3
   14668:	andeq	r5, r1, ip, asr #6
   1466c:	andeq	r5, r1, r0, lsl r3
   14670:	andeq	r6, r2, r0, asr #3
   14674:	andeq	r5, r1, r4, asr #6
   14678:			; <UNDEFINED> instruction: 0x000261b8
   1467c:	strdeq	r6, [r2], -ip
   14680:	andeq	r5, r1, r8, lsl r3
   14684:	strdeq	r6, [r2], -r0
   14688:	push	{r4, lr}
   1468c:	mov	r5, r0
   14690:	ldr	r4, [pc, #28]	; 146b4 <abort@plt+0x3688>
   14694:	ldr	r0, [r4]
   14698:	cmp	r0, #0
   1469c:	beq	146ac <abort@plt+0x3680>
   146a0:	bl	11008 <XCloseDisplay@plt>
   146a4:	mov	r3, #0
   146a8:	str	r3, [r4]
   146ac:	mov	r0, r5
   146b0:	bl	10edc <exit@plt>
   146b4:	andeq	r6, r2, r4, ror #3
   146b8:	push	{r4, lr}
   146bc:	mov	r1, #1
   146c0:	ldr	r4, [pc, #44]	; 146f4 <abort@plt+0x36c8>
   146c4:	ldr	r3, [pc, #44]	; 146f8 <abort@plt+0x36cc>
   146c8:	ldr	r2, [pc, #44]	; 146fc <abort@plt+0x36d0>
   146cc:	ldr	r0, [r4]
   146d0:	ldr	r3, [r3]
   146d4:	bl	10f84 <__fprintf_chk@plt>
   146d8:	ldr	r0, [r4]
   146dc:	ldr	r3, [pc, #28]	; 14700 <abort@plt+0x36d4>
   146e0:	ldr	r2, [pc, #28]	; 14704 <abort@plt+0x36d8>
   146e4:	mov	r1, #1
   146e8:	bl	10f84 <__fprintf_chk@plt>
   146ec:	mov	r0, #0
   146f0:	bl	14688 <abort@plt+0x365c>
   146f4:			; <UNDEFINED> instruction: 0x000261b8
   146f8:	strdeq	r6, [r2], -ip
   146fc:	andeq	r5, r1, r0, lsl #21
   14700:	andeq	r5, r1, r4, lsr #12
   14704:			; <UNDEFINED> instruction: 0x00015ab4
   14708:	ldr	r2, [pc, #40]	; 14738 <abort@plt+0x370c>
   1470c:	ldr	r3, [pc, #40]	; 1473c <abort@plt+0x3710>
   14710:	push	{lr}		; (str lr, [sp, #-4]!)
   14714:	sub	sp, sp, #12
   14718:	mov	r1, #1
   1471c:	str	r0, [sp]
   14720:	ldr	r0, [r2]
   14724:	ldr	r3, [r3]
   14728:	ldr	r2, [pc, #16]	; 14740 <abort@plt+0x3714>
   1472c:	bl	10f84 <__fprintf_chk@plt>
   14730:	mvn	r0, #0
   14734:	bl	14688 <abort@plt+0x365c>
   14738:			; <UNDEFINED> instruction: 0x000261b8
   1473c:	strdeq	r6, [r2], -ip
   14740:			; <UNDEFINED> instruction: 0x00015ab0
   14744:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14748:	mov	r7, r0
   1474c:	ldr	r6, [pc, #72]	; 1479c <abort@plt+0x3770>
   14750:	ldr	r5, [pc, #72]	; 147a0 <abort@plt+0x3774>
   14754:	add	r6, pc, r6
   14758:	add	r5, pc, r5
   1475c:	sub	r6, r6, r5
   14760:	mov	r8, r1
   14764:	mov	r9, r2
   14768:	bl	10da8 <strcmp@plt-0x20>
   1476c:	asrs	r6, r6, #2
   14770:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14774:	mov	r4, #0
   14778:	add	r4, r4, #1
   1477c:	ldr	r3, [r5], #4
   14780:	mov	r2, r9
   14784:	mov	r1, r8
   14788:	mov	r0, r7
   1478c:	blx	r3
   14790:	cmp	r6, r4
   14794:	bne	14778 <abort@plt+0x374c>
   14798:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1479c:	andeq	r1, r1, r0, lsr #15
   147a0:	muleq	r1, r8, r7
   147a4:	bx	lr

Disassembly of section .fini:

000147a8 <.fini>:
   147a8:	push	{r3, lr}
   147ac:	pop	{r3, pc}
