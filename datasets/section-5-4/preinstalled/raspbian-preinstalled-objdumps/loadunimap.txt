
raspbian-preinstalled/loadunimap:     file format elf32-littlearm


Disassembly of section .init:

00010b68 <.init>:
   10b68:	push	{r3, lr}
   10b6c:	bl	11038 <pclose@plt+0x258>
   10b70:	pop	{r3, pc}

Disassembly of section .plt:

00010b74 <strcmp@plt-0x14>:
   10b74:	push	{lr}		; (str lr, [sp, #-4]!)
   10b78:	ldr	lr, [pc, #4]	; 10b84 <strcmp@plt-0x4>
   10b7c:	add	lr, pc, lr
   10b80:	ldr	pc, [lr, #8]!
   10b84:	andeq	r4, r1, ip, ror r4

00010b88 <strcmp@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #20, 20	; 0x14000
   10b90:	ldr	pc, [ip, #1148]!	; 0x47c

00010b94 <strtol@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #20, 20	; 0x14000
   10b9c:	ldr	pc, [ip, #1140]!	; 0x474

00010ba0 <fopen@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #20, 20	; 0x14000
   10ba8:	ldr	pc, [ip, #1132]!	; 0x46c

00010bac <free@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #20, 20	; 0x14000
   10bb4:	ldr	pc, [ip, #1124]!	; 0x464

00010bb8 <fgets@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #20, 20	; 0x14000
   10bc0:	ldr	pc, [ip, #1116]!	; 0x45c

00010bc4 <ferror@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #20, 20	; 0x14000
   10bcc:	ldr	pc, [ip, #1108]!	; 0x454

00010bd0 <strndup@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #20, 20	; 0x14000
   10bd8:	ldr	pc, [ip, #1100]!	; 0x44c

00010bdc <dcgettext@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #20, 20	; 0x14000
   10be4:	ldr	pc, [ip, #1092]!	; 0x444

00010be8 <strdup@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #20, 20	; 0x14000
   10bf0:	ldr	pc, [ip, #1084]!	; 0x43c

00010bf4 <__stack_chk_fail@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #20, 20	; 0x14000
   10bfc:	ldr	pc, [ip, #1076]!	; 0x434

00010c00 <realloc@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #20, 20	; 0x14000
   10c08:	ldr	pc, [ip, #1068]!	; 0x42c

00010c0c <textdomain@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #20, 20	; 0x14000
   10c14:	ldr	pc, [ip, #1060]!	; 0x424

00010c18 <perror@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #20, 20	; 0x14000
   10c20:	ldr	pc, [ip, #1052]!	; 0x41c

00010c24 <__xstat@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #20, 20	; 0x14000
   10c2c:	ldr	pc, [ip, #1044]!	; 0x414

00010c30 <fwrite@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #20, 20	; 0x14000
   10c38:	ldr	pc, [ip, #1036]!	; 0x40c

00010c3c <ioctl@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #20, 20	; 0x14000
   10c44:	ldr	pc, [ip, #1028]!	; 0x404

00010c48 <strcpy@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #20, 20	; 0x14000
   10c50:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c54 <__strcpy_chk@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #20, 20	; 0x14000
   10c5c:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c60 <fread@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #20, 20	; 0x14000
   10c68:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c6c <opendir@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #20, 20	; 0x14000
   10c74:	ldr	pc, [ip, #996]!	; 0x3e4

00010c78 <malloc@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #20, 20	; 0x14000
   10c80:	ldr	pc, [ip, #988]!	; 0x3dc

00010c84 <__libc_start_main@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #20, 20	; 0x14000
   10c8c:	ldr	pc, [ip, #980]!	; 0x3d4

00010c90 <strerror@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #20, 20	; 0x14000
   10c98:	ldr	pc, [ip, #972]!	; 0x3cc

00010c9c <__vfprintf_chk@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #20, 20	; 0x14000
   10ca4:	ldr	pc, [ip, #964]!	; 0x3c4

00010ca8 <seekdir@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #20, 20	; 0x14000
   10cb0:	ldr	pc, [ip, #956]!	; 0x3bc

00010cb4 <__gmon_start__@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #20, 20	; 0x14000
   10cbc:	ldr	pc, [ip, #948]!	; 0x3b4

00010cc0 <open@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #20, 20	; 0x14000
   10cc8:	ldr	pc, [ip, #940]!	; 0x3ac

00010ccc <__ctype_b_loc@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #20, 20	; 0x14000
   10cd4:	ldr	pc, [ip, #932]!	; 0x3a4

00010cd8 <exit@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #20, 20	; 0x14000
   10ce0:	ldr	pc, [ip, #924]!	; 0x39c

00010ce4 <feof@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #20, 20	; 0x14000
   10cec:	ldr	pc, [ip, #916]!	; 0x394

00010cf0 <strlen@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #20, 20	; 0x14000
   10cf8:	ldr	pc, [ip, #908]!	; 0x38c

00010cfc <strchr@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #20, 20	; 0x14000
   10d04:	ldr	pc, [ip, #900]!	; 0x384

00010d08 <getopt@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #20, 20	; 0x14000
   10d10:	ldr	pc, [ip, #892]!	; 0x37c

00010d14 <__errno_location@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #20, 20	; 0x14000
   10d1c:	ldr	pc, [ip, #884]!	; 0x374

00010d20 <__sprintf_chk@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #20, 20	; 0x14000
   10d28:	ldr	pc, [ip, #876]!	; 0x36c

00010d2c <putchar@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #20, 20	; 0x14000
   10d34:	ldr	pc, [ip, #868]!	; 0x364

00010d38 <__printf_chk@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #20, 20	; 0x14000
   10d40:	ldr	pc, [ip, #860]!	; 0x35c

00010d44 <__fprintf_chk@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #20, 20	; 0x14000
   10d4c:	ldr	pc, [ip, #852]!	; 0x354

00010d50 <access@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #20, 20	; 0x14000
   10d58:	ldr	pc, [ip, #844]!	; 0x34c

00010d5c <fclose@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #20, 20	; 0x14000
   10d64:	ldr	pc, [ip, #836]!	; 0x344

00010d68 <setlocale@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #20, 20	; 0x14000
   10d70:	ldr	pc, [ip, #828]!	; 0x33c

00010d74 <popen@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #20, 20	; 0x14000
   10d7c:	ldr	pc, [ip, #820]!	; 0x334

00010d80 <readdir@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #20, 20	; 0x14000
   10d88:	ldr	pc, [ip, #812]!	; 0x32c

00010d8c <strrchr@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #20, 20	; 0x14000
   10d94:	ldr	pc, [ip, #804]!	; 0x324

00010d98 <bindtextdomain@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #20, 20	; 0x14000
   10da0:	ldr	pc, [ip, #796]!	; 0x31c

00010da4 <isatty@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #20, 20	; 0x14000
   10dac:	ldr	pc, [ip, #788]!	; 0x314

00010db0 <strncmp@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #20, 20	; 0x14000
   10db8:	ldr	pc, [ip, #780]!	; 0x30c

00010dbc <abort@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #20, 20	; 0x14000
   10dc4:	ldr	pc, [ip, #772]!	; 0x304

00010dc8 <close@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #20, 20	; 0x14000
   10dd0:	ldr	pc, [ip, #764]!	; 0x2fc

00010dd4 <closedir@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #20, 20	; 0x14000
   10ddc:	ldr	pc, [ip, #756]!	; 0x2f4

00010de0 <pclose@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #20, 20	; 0x14000
   10de8:	ldr	pc, [ip, #748]!	; 0x2ec

Disassembly of section .text:

00010dec <.text>:
   10dec:	ldr	r3, [pc, #52]	; 10e28 <pclose@plt+0x48>
   10df0:	push	{r4, lr}
   10df4:	mov	r2, #5
   10df8:	ldr	r1, [pc, #44]	; 10e2c <pclose@plt+0x4c>
   10dfc:	mov	r0, #0
   10e00:	ldr	r4, [r3]
   10e04:	bl	10bdc <dcgettext@plt>
   10e08:	ldr	r3, [pc, #32]	; 10e30 <pclose@plt+0x50>
   10e0c:	mov	r1, #1
   10e10:	ldr	r3, [r3]
   10e14:	mov	r2, r0
   10e18:	mov	r0, r4
   10e1c:	bl	10d44 <__fprintf_chk@plt>
   10e20:	mov	r0, #71	; 0x47
   10e24:	bl	10cd8 <exit@plt>
   10e28:	andeq	r5, r2, r8, lsl #2
   10e2c:	andeq	r3, r1, r8, lsr #29
   10e30:	andeq	r5, r2, r8, lsr r1
   10e34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e38:	mov	r4, r0
   10e3c:	ldr	r6, [r1]
   10e40:	mov	r5, r1
   10e44:	mov	r0, r6
   10e48:	mov	r1, #47	; 0x2f
   10e4c:	bl	10d8c <strrchr@plt>
   10e50:	ldr	r7, [pc, #368]	; 10fc8 <pclose@plt+0x1e8>
   10e54:	ldr	r1, [pc, #368]	; 10fcc <pclose@plt+0x1ec>
   10e58:	cmp	r0, #0
   10e5c:	addne	r6, r0, #1
   10e60:	mov	r0, #6
   10e64:	str	r6, [r7]
   10e68:	bl	10d68 <setlocale@plt>
   10e6c:	ldr	r1, [pc, #348]	; 10fd0 <pclose@plt+0x1f0>
   10e70:	ldr	r0, [pc, #348]	; 10fd4 <pclose@plt+0x1f4>
   10e74:	bl	10d98 <bindtextdomain@plt>
   10e78:	ldr	r0, [pc, #340]	; 10fd4 <pclose@plt+0x1f4>
   10e7c:	bl	10c0c <textdomain@plt>
   10e80:	cmp	r4, #2
   10e84:	beq	10ed0 <pclose@plt+0xf0>
   10e88:	mov	r7, #0
   10e8c:	ldr	r6, [pc, #324]	; 10fd8 <pclose@plt+0x1f8>
   10e90:	ldr	r8, [pc, #324]	; 10fdc <pclose@plt+0x1fc>
   10e94:	mov	r9, r7
   10e98:	mov	r2, r6
   10e9c:	mov	r1, r5
   10ea0:	mov	r0, r4
   10ea4:	bl	10d08 <getopt@plt>
   10ea8:	cmn	r0, #1
   10eac:	beq	10f28 <pclose@plt+0x148>
   10eb0:	cmp	r0, #67	; 0x43
   10eb4:	beq	10ec8 <pclose@plt+0xe8>
   10eb8:	cmp	r0, #111	; 0x6f
   10ebc:	ldreq	r7, [r8]
   10ec0:	beq	10e98 <pclose@plt+0xb8>
   10ec4:	bl	110ec <pclose@plt+0x30c>
   10ec8:	ldr	r9, [r8]
   10ecc:	b	10e98 <pclose@plt+0xb8>
   10ed0:	ldr	r6, [r5, #4]
   10ed4:	ldr	r1, [pc, #260]	; 10fe0 <pclose@plt+0x200>
   10ed8:	mov	r0, r6
   10edc:	bl	10b88 <strcmp@plt>
   10ee0:	cmp	r0, #0
   10ee4:	beq	10efc <pclose@plt+0x11c>
   10ee8:	mov	r0, r6
   10eec:	ldr	r1, [pc, #240]	; 10fe4 <pclose@plt+0x204>
   10ef0:	bl	10b88 <strcmp@plt>
   10ef4:	cmp	r0, #0
   10ef8:	bne	10e88 <pclose@plt+0xa8>
   10efc:	mov	r2, #5
   10f00:	ldr	r1, [pc, #224]	; 10fe8 <pclose@plt+0x208>
   10f04:	mov	r0, #0
   10f08:	bl	10bdc <dcgettext@plt>
   10f0c:	ldr	r2, [r7]
   10f10:	ldr	r3, [pc, #212]	; 10fec <pclose@plt+0x20c>
   10f14:	mov	r1, r0
   10f18:	mov	r0, #1
   10f1c:	bl	10d38 <__printf_chk@plt>
   10f20:	mov	r0, #0
   10f24:	bl	10cd8 <exit@plt>
   10f28:	ldr	r8, [pc, #192]	; 10ff0 <pclose@plt+0x210>
   10f2c:	ldr	r3, [r8]
   10f30:	add	r2, r3, #1
   10f34:	cmp	r2, r4
   10f38:	blt	10ec4 <pclose@plt+0xe4>
   10f3c:	cmp	r3, r4
   10f40:	cmpeq	r7, #0
   10f44:	moveq	r6, #1
   10f48:	movne	r6, #0
   10f4c:	beq	10ec4 <pclose@plt+0xe4>
   10f50:	mov	r0, r9
   10f54:	bl	11c3c <pclose@plt+0xe5c>
   10f58:	subs	r9, r0, #0
   10f5c:	blt	10fa4 <pclose@plt+0x1c4>
   10f60:	cmp	r7, #0
   10f64:	beq	10f80 <pclose@plt+0x1a0>
   10f68:	mov	r1, r7
   10f6c:	mov	r0, r9
   10f70:	bl	118ec <pclose@plt+0xb0c>
   10f74:	ldr	r3, [r8]
   10f78:	cmp	r3, r4
   10f7c:	beq	10f9c <pclose@plt+0x1bc>
   10f80:	ldr	r3, [r8]
   10f84:	mov	r0, r9
   10f88:	add	r2, r3, #1
   10f8c:	cmp	r2, r4
   10f90:	ldreq	r1, [r5, r3, lsl #2]
   10f94:	ldrne	r1, [pc, #88]	; 10ff4 <pclose@plt+0x214>
   10f98:	bl	11308 <pclose@plt+0x528>
   10f9c:	mov	r0, #0
   10fa0:	bl	10cd8 <exit@plt>
   10fa4:	mov	r2, #5
   10fa8:	ldr	r1, [pc, #72]	; 10ff8 <pclose@plt+0x218>
   10fac:	mov	r0, r6
   10fb0:	bl	10bdc <dcgettext@plt>
   10fb4:	mov	r1, r6
   10fb8:	mov	r2, r0
   10fbc:	mov	r0, #1
   10fc0:	bl	11e70 <pclose@plt+0x1090>
   10fc4:	b	10f60 <pclose@plt+0x180>
   10fc8:	andeq	r5, r2, r8, lsr r1
   10fcc:	ldrdeq	r3, [r1], -r4
   10fd0:	andeq	r3, r1, r8, lsl sp
   10fd4:	andeq	r3, r1, ip, lsr #26
   10fd8:	andeq	r3, r1, r8, asr sp
   10fdc:	andeq	r5, r2, r0, lsl r1
   10fe0:	andeq	r3, r1, r0, lsr sp
   10fe4:	andeq	r3, r1, r4, lsr sp
   10fe8:	andeq	r3, r1, r0, asr #26
   10fec:	andeq	r3, r1, ip, asr #26
   10ff0:	andeq	r5, r2, r0, lsl #2
   10ff4:	andeq	r3, r1, r0, lsl sp
   10ff8:	andeq	r3, r1, r0, ror #26
   10ffc:	mov	fp, #0
   11000:	mov	lr, #0
   11004:	pop	{r1}		; (ldr r1, [sp], #4)
   11008:	mov	r2, sp
   1100c:	push	{r2}		; (str r2, [sp, #-4]!)
   11010:	push	{r0}		; (str r0, [sp, #-4]!)
   11014:	ldr	ip, [pc, #16]	; 1102c <pclose@plt+0x24c>
   11018:	push	{ip}		; (str ip, [sp, #-4]!)
   1101c:	ldr	r0, [pc, #12]	; 11030 <pclose@plt+0x250>
   11020:	ldr	r3, [pc, #12]	; 11034 <pclose@plt+0x254>
   11024:	bl	10c84 <__libc_start_main@plt>
   11028:	bl	10dbc <abort@plt>
   1102c:			; <UNDEFINED> instruction: 0x00013ab0
   11030:	andeq	r0, r1, r4, lsr lr
   11034:	andeq	r3, r1, r0, asr sl
   11038:	ldr	r3, [pc, #20]	; 11054 <pclose@plt+0x274>
   1103c:	ldr	r2, [pc, #20]	; 11058 <pclose@plt+0x278>
   11040:	add	r3, pc, r3
   11044:	ldr	r2, [r3, r2]
   11048:	cmp	r2, #0
   1104c:	bxeq	lr
   11050:	b	10cb4 <__gmon_start__@plt>
   11054:			; <UNDEFINED> instruction: 0x00013fb8
   11058:	ldrdeq	r0, [r0], -ip
   1105c:	ldr	r0, [pc, #24]	; 1107c <pclose@plt+0x29c>
   11060:	ldr	r3, [pc, #24]	; 11080 <pclose@plt+0x2a0>
   11064:	cmp	r3, r0
   11068:	bxeq	lr
   1106c:	ldr	r3, [pc, #16]	; 11084 <pclose@plt+0x2a4>
   11070:	cmp	r3, #0
   11074:	bxeq	lr
   11078:	bx	r3
   1107c:	andeq	r5, r2, r0, lsl #2
   11080:	andeq	r5, r2, r0, lsl #2
   11084:	andeq	r0, r0, r0
   11088:	ldr	r0, [pc, #36]	; 110b4 <pclose@plt+0x2d4>
   1108c:	ldr	r1, [pc, #36]	; 110b8 <pclose@plt+0x2d8>
   11090:	sub	r1, r1, r0
   11094:	asr	r1, r1, #2
   11098:	add	r1, r1, r1, lsr #31
   1109c:	asrs	r1, r1, #1
   110a0:	bxeq	lr
   110a4:	ldr	r3, [pc, #16]	; 110bc <pclose@plt+0x2dc>
   110a8:	cmp	r3, #0
   110ac:	bxeq	lr
   110b0:	bx	r3
   110b4:	andeq	r5, r2, r0, lsl #2
   110b8:	andeq	r5, r2, r0, lsl #2
   110bc:	andeq	r0, r0, r0
   110c0:	push	{r4, lr}
   110c4:	ldr	r4, [pc, #24]	; 110e4 <pclose@plt+0x304>
   110c8:	ldrb	r3, [r4]
   110cc:	cmp	r3, #0
   110d0:	popne	{r4, pc}
   110d4:	bl	1105c <pclose@plt+0x27c>
   110d8:	mov	r3, #1
   110dc:	strb	r3, [r4]
   110e0:	pop	{r4, pc}
   110e4:	andeq	r5, r2, r4, lsl r1
   110e8:	b	11088 <pclose@plt+0x2a8>
   110ec:	ldr	r3, [pc, #52]	; 11128 <pclose@plt+0x348>
   110f0:	push	{r4, lr}
   110f4:	mov	r2, #5
   110f8:	ldr	r1, [pc, #44]	; 1112c <pclose@plt+0x34c>
   110fc:	mov	r0, #0
   11100:	ldr	r4, [r3]
   11104:	bl	10bdc <dcgettext@plt>
   11108:	ldr	r3, [pc, #32]	; 11130 <pclose@plt+0x350>
   1110c:	mov	r1, #1
   11110:	ldr	r3, [r3]
   11114:	mov	r2, r0
   11118:	mov	r0, r4
   1111c:	bl	10d44 <__fprintf_chk@plt>
   11120:	mov	r0, #1
   11124:	bl	10cd8 <exit@plt>
   11128:	andeq	r5, r2, r8, lsl #2
   1112c:	ldrdeq	r3, [r1], -ip
   11130:	andeq	r5, r2, r8, lsr r1
   11134:	push	{r4, r5, r6, lr}
   11138:	mov	r6, r0
   1113c:	ldr	r4, [pc, #72]	; 1118c <pclose@plt+0x3ac>
   11140:	mov	r5, r1
   11144:	ldmib	r4, {r0, r3}
   11148:	ldr	r1, [r4]
   1114c:	cmp	r1, r3
   11150:	beq	11170 <pclose@plt+0x390>
   11154:	lsl	r3, r1, #2
   11158:	add	r2, r0, r3
   1115c:	add	r1, r1, #1
   11160:	strh	r6, [r2, #2]
   11164:	str	r1, [r4]
   11168:	strh	r5, [r0, r3]
   1116c:	pop	{r4, r5, r6, pc}
   11170:	add	r3, r1, #4096	; 0x1000
   11174:	mov	r1, r3
   11178:	str	r3, [r4, #8]
   1117c:	bl	11d5c <pclose@plt+0xf7c>
   11180:	ldr	r1, [r4]
   11184:	str	r0, [r4, #4]
   11188:	b	11154 <pclose@plt+0x374>
   1118c:	andeq	r5, r2, r8, lsl r1
   11190:	push	{r4, r5, r6, lr}
   11194:	ldr	r4, [r0]
   11198:	ldrb	r3, [r4]
   1119c:	cmp	r3, #9
   111a0:	cmpne	r3, #32
   111a4:	bne	111b8 <pclose@plt+0x3d8>
   111a8:	ldrb	r3, [r4, #1]!
   111ac:	cmp	r3, #9
   111b0:	cmpne	r3, #32
   111b4:	beq	111a8 <pclose@plt+0x3c8>
   111b8:	cmp	r3, #85	; 0x55
   111bc:	bne	11254 <pclose@plt+0x474>
   111c0:	ldrb	r3, [r4, #1]
   111c4:	cmp	r3, #43	; 0x2b
   111c8:	bne	11254 <pclose@plt+0x474>
   111cc:	mov	r5, r0
   111d0:	bl	10ccc <__ctype_b_loc@plt>
   111d4:	ldrb	r2, [r4, #2]
   111d8:	lsl	r2, r2, #1
   111dc:	ldr	r3, [r0]
   111e0:	ldrh	r2, [r3, r2]
   111e4:	tst	r2, #4096	; 0x1000
   111e8:	beq	11254 <pclose@plt+0x474>
   111ec:	ldrb	r2, [r4, #3]
   111f0:	lsl	r2, r2, #1
   111f4:	ldrh	r2, [r3, r2]
   111f8:	tst	r2, #4096	; 0x1000
   111fc:	beq	11254 <pclose@plt+0x474>
   11200:	ldrb	r2, [r4, #4]
   11204:	lsl	r2, r2, #1
   11208:	ldrh	r2, [r3, r2]
   1120c:	tst	r2, #4096	; 0x1000
   11210:	beq	11254 <pclose@plt+0x474>
   11214:	ldrb	r2, [r4, #5]
   11218:	lsl	r2, r2, #1
   1121c:	ldrh	r2, [r3, r2]
   11220:	tst	r2, #4096	; 0x1000
   11224:	beq	11254 <pclose@plt+0x474>
   11228:	ldrb	r2, [r4, #6]
   1122c:	lsl	r2, r2, #1
   11230:	ldrh	r1, [r3, r2]
   11234:	ands	r1, r1, #4096	; 0x1000
   11238:	bne	11254 <pclose@plt+0x474>
   1123c:	add	r3, r4, #6
   11240:	str	r3, [r5]
   11244:	add	r0, r4, #2
   11248:	mov	r2, #16
   1124c:	pop	{r4, r5, r6, lr}
   11250:	b	10b94 <strtol@plt>
   11254:	mvn	r0, #0
   11258:	pop	{r4, r5, r6, pc}
   1125c:	push	{r4, r5, r6, r7, r8, lr}
   11260:	sub	sp, sp, #24
   11264:	ldr	r6, [pc, #136]	; 112f4 <pclose@plt+0x514>
   11268:	add	r4, sp, #12
   1126c:	mov	r5, r0
   11270:	ldr	r3, [r6]
   11274:	mov	r0, r1
   11278:	mov	r1, r4
   1127c:	str	r3, [sp, #20]
   11280:	bl	12dac <pclose@plt+0x1fcc>
   11284:	cmp	r0, #0
   11288:	bne	112e8 <pclose@plt+0x508>
   1128c:	ldrh	r7, [sp, #12]
   11290:	ldr	r3, [pc, #96]	; 112f8 <pclose@plt+0x518>
   11294:	mov	r2, #5
   11298:	cmp	r7, #1
   1129c:	ldr	r8, [r3]
   112a0:	ldreq	r1, [pc, #84]	; 112fc <pclose@plt+0x51c>
   112a4:	ldrne	r1, [pc, #84]	; 11300 <pclose@plt+0x520>
   112a8:	bl	10bdc <dcgettext@plt>
   112ac:	mov	r3, r7
   112b0:	ldr	r2, [pc, #76]	; 11304 <pclose@plt+0x524>
   112b4:	mov	r1, #1
   112b8:	str	r0, [sp]
   112bc:	mov	r0, r8
   112c0:	bl	10d44 <__fprintf_chk@plt>
   112c4:	ldm	r4, {r0, r1}
   112c8:	ldr	r2, [sp, #20]
   112cc:	ldr	r3, [r6]
   112d0:	stm	r5, {r0, r1}
   112d4:	cmp	r2, r3
   112d8:	mov	r0, r5
   112dc:	bne	112f0 <pclose@plt+0x510>
   112e0:	add	sp, sp, #24
   112e4:	pop	{r4, r5, r6, r7, r8, pc}
   112e8:	mov	r0, #1
   112ec:	bl	10cd8 <exit@plt>
   112f0:	bl	10bf4 <__stack_chk_fail@plt>
   112f4:	andeq	r4, r2, r8, lsl #30
   112f8:	andeq	r5, r2, r8, lsl #2
   112fc:	andeq	r3, r1, r4, lsl #22
   11300:	andeq	r3, r1, ip, lsl #22
   11304:	andeq	r3, r1, r4, lsl fp
   11308:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1130c:	sub	sp, sp, #69632	; 0x11000
   11310:	ldr	fp, [pc, #1424]	; 118a8 <pclose@plt+0xac8>
   11314:	sub	sp, sp, #60	; 0x3c
   11318:	ldr	r2, [pc, #1420]	; 118ac <pclose@plt+0xacc>
   1131c:	add	lr, sp, #69632	; 0x11000
   11320:	ldr	ip, [fp]
   11324:	add	lr, lr, #52	; 0x34
   11328:	str	r0, [sp, #24]
   1132c:	mov	r9, r1
   11330:	mov	r0, r1
   11334:	add	r3, sp, #44	; 0x2c
   11338:	add	r1, r2, #16
   1133c:	str	ip, [lr]
   11340:	bl	136ac <pclose@plt+0x28cc>
   11344:	cmp	r0, #0
   11348:	bne	1183c <pclose@plt+0xa5c>
   1134c:	ldr	r7, [pc, #1372]	; 118b0 <pclose@plt+0xad0>
   11350:	ldr	r3, [r7, #12]
   11354:	cmp	r3, #0
   11358:	bne	11608 <pclose@plt+0x828>
   1135c:	add	r8, sp, #4096	; 0x1000
   11360:	add	r5, sp, #4096	; 0x1000
   11364:	ldr	sl, [pc, #1352]	; 118b4 <pclose@plt+0xad4>
   11368:	add	r8, r8, #56	; 0x38
   1136c:	add	r5, r5, #52	; 0x34
   11370:	str	r9, [sp, #20]
   11374:	ldr	r2, [sp, #44]	; 0x2c
   11378:	mov	r1, #65536	; 0x10000
   1137c:	mov	r0, r5
   11380:	bl	10bb8 <fgets@plt>
   11384:	cmp	r0, #0
   11388:	beq	114bc <pclose@plt+0x6dc>
   1138c:	mov	r1, #10
   11390:	mov	r0, r5
   11394:	bl	10cfc <strchr@plt>
   11398:	subs	r3, r0, #0
   1139c:	beq	11528 <pclose@plt+0x748>
   113a0:	mov	r2, #0
   113a4:	strb	r2, [r3]
   113a8:	ldrb	r3, [r8, #-4]
   113ac:	str	r5, [sp, #36]	; 0x24
   113b0:	mov	r0, r5
   113b4:	cmp	r3, #32
   113b8:	cmpne	r3, #9
   113bc:	bne	113d4 <pclose@plt+0x5f4>
   113c0:	ldrb	r3, [r0, #1]!
   113c4:	cmp	r3, #9
   113c8:	cmpne	r3, #32
   113cc:	beq	113c0 <pclose@plt+0x5e0>
   113d0:	str	r0, [sp, #36]	; 0x24
   113d4:	cmp	r3, #0
   113d8:	sub	r6, r3, #35	; 0x23
   113dc:	clz	r6, r6
   113e0:	lsr	r6, r6, #5
   113e4:	moveq	r6, #1
   113e8:	cmp	r6, #0
   113ec:	bne	11374 <pclose@plt+0x594>
   113f0:	mov	r2, r6
   113f4:	add	r1, sp, #40	; 0x28
   113f8:	bl	10b94 <strtol@plt>
   113fc:	ldrd	r2, [sp, #36]	; 0x24
   11400:	cmp	r3, r2
   11404:	mov	r4, r0
   11408:	bne	11414 <pclose@plt+0x634>
   1140c:	b	117a0 <pclose@plt+0x9c0>
   11410:	add	r3, r3, #1
   11414:	str	r3, [sp, #36]	; 0x24
   11418:	ldrb	r2, [r3]
   1141c:	cmp	r2, #9
   11420:	cmpne	r2, #32
   11424:	beq	11410 <pclose@plt+0x630>
   11428:	cmp	r2, #45	; 0x2d
   1142c:	beq	11560 <pclose@plt+0x780>
   11430:	cmp	r4, sl
   11434:	bhi	11764 <pclose@plt+0x984>
   11438:	add	r9, sp, #36	; 0x24
   1143c:	b	11448 <pclose@plt+0x668>
   11440:	mov	r0, r4
   11444:	bl	11134 <pclose@plt+0x354>
   11448:	mov	r0, r9
   1144c:	bl	11190 <pclose@plt+0x3b0>
   11450:	subs	r1, r0, #0
   11454:	bge	11440 <pclose@plt+0x660>
   11458:	ldr	r3, [sp, #36]	; 0x24
   1145c:	b	11468 <pclose@plt+0x688>
   11460:	add	r3, r3, #1
   11464:	str	r3, [sp, #36]	; 0x24
   11468:	ldrb	r2, [r3]
   1146c:	cmp	r2, #9
   11470:	cmpne	r2, #32
   11474:	beq	11460 <pclose@plt+0x680>
   11478:	cmp	r2, #0
   1147c:	cmpne	r2, #35	; 0x23
   11480:	beq	11374 <pclose@plt+0x594>
   11484:	ldr	r3, [pc, #1068]	; 118b8 <pclose@plt+0xad8>
   11488:	mov	r2, #5
   1148c:	ldr	r1, [pc, #1064]	; 118bc <pclose@plt+0xadc>
   11490:	mov	r0, #0
   11494:	ldr	r4, [r3]
   11498:	bl	10bdc <dcgettext@plt>
   1149c:	ldr	r2, [sp, #36]	; 0x24
   114a0:	ldr	r3, [sp, #20]
   114a4:	str	r2, [sp]
   114a8:	mov	r1, #1
   114ac:	mov	r2, r0
   114b0:	mov	r0, r4
   114b4:	bl	10d44 <__fprintf_chk@plt>
   114b8:	b	11374 <pclose@plt+0x594>
   114bc:	add	r0, sp, #44	; 0x2c
   114c0:	bl	13670 <pclose@plt+0x2890>
   114c4:	ldr	r3, [r7]
   114c8:	cmp	r3, #0
   114cc:	bne	114dc <pclose@plt+0x6fc>
   114d0:	ldr	r0, [r7, #16]
   114d4:	cmp	r0, #0
   114d8:	beq	11690 <pclose@plt+0x8b0>
   114dc:	ldr	ip, [r7, #4]
   114e0:	ldr	r0, [sp, #24]
   114e4:	ldr	r2, [pc, #980]	; 118c0 <pclose@plt+0xae0>
   114e8:	mov	r1, #0
   114ec:	strh	r3, [r7, #20]
   114f0:	str	ip, [r7, #24]
   114f4:	bl	12f10 <pclose@plt+0x2130>
   114f8:	cmp	r0, #0
   114fc:	streq	r0, [r7]
   11500:	bne	117d8 <pclose@plt+0x9f8>
   11504:	add	r3, sp, #69632	; 0x11000
   11508:	add	r3, r3, #52	; 0x34
   1150c:	ldr	r2, [r3]
   11510:	ldr	r3, [fp]
   11514:	cmp	r2, r3
   11518:	bne	117d4 <pclose@plt+0x9f4>
   1151c:	add	sp, sp, #69632	; 0x11000
   11520:	add	sp, sp, #60	; 0x3c
   11524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11528:	ldr	r3, [pc, #904]	; 118b8 <pclose@plt+0xad8>
   1152c:	mov	r2, #5
   11530:	ldr	r1, [pc, #908]	; 118c4 <pclose@plt+0xae4>
   11534:	ldr	r4, [r3]
   11538:	bl	10bdc <dcgettext@plt>
   1153c:	ldr	r3, [pc, #900]	; 118c8 <pclose@plt+0xae8>
   11540:	ldr	r2, [sp, #20]
   11544:	mov	r1, #1
   11548:	ldr	r3, [r3]
   1154c:	str	r2, [sp]
   11550:	mov	r2, r0
   11554:	mov	r0, r4
   11558:	bl	10d44 <__fprintf_chk@plt>
   1155c:	b	113a8 <pclose@plt+0x5c8>
   11560:	add	r3, r3, #1
   11564:	mov	r0, r3
   11568:	add	r1, sp, #40	; 0x28
   1156c:	mov	r2, #0
   11570:	str	r3, [sp, #36]	; 0x24
   11574:	bl	10b94 <strtol@plt>
   11578:	ldr	r9, [sp, #40]	; 0x28
   1157c:	ldr	r3, [sp, #36]	; 0x24
   11580:	cmp	r9, r3
   11584:	mov	r6, r0
   11588:	beq	117e0 <pclose@plt+0xa00>
   1158c:	cmp	r4, sl
   11590:	str	r9, [sp, #36]	; 0x24
   11594:	bhi	11764 <pclose@plt+0x984>
   11598:	cmp	r0, #0
   1159c:	beq	11438 <pclose@plt+0x658>
   115a0:	cmp	r0, sl
   115a4:	cmple	r4, r0
   115a8:	ble	115b8 <pclose@plt+0x7d8>
   115ac:	b	117f8 <pclose@plt+0xa18>
   115b0:	add	r9, r9, #1
   115b4:	str	r9, [sp, #36]	; 0x24
   115b8:	ldrb	r3, [r9]
   115bc:	cmp	r3, #9
   115c0:	cmpne	r3, #32
   115c4:	beq	115b0 <pclose@plt+0x7d0>
   115c8:	mov	r2, #4
   115cc:	ldr	r1, [pc, #760]	; 118cc <pclose@plt+0xaec>
   115d0:	mov	r0, r9
   115d4:	bl	10db0 <strncmp@plt>
   115d8:	cmp	r0, #0
   115dc:	bne	11628 <pclose@plt+0x848>
   115e0:	add	r6, r6, #1
   115e4:	add	r9, r9, #4
   115e8:	str	r9, [sp, #36]	; 0x24
   115ec:	mov	r1, r4
   115f0:	mov	r0, r4
   115f4:	add	r4, r4, #1
   115f8:	bl	11134 <pclose@plt+0x354>
   115fc:	cmp	r4, r6
   11600:	bne	115ec <pclose@plt+0x80c>
   11604:	b	11458 <pclose@plt+0x678>
   11608:	mov	r2, #5
   1160c:	ldr	r1, [pc, #700]	; 118d0 <pclose@plt+0xaf0>
   11610:	bl	10bdc <dcgettext@plt>
   11614:	add	r2, sp, #52	; 0x34
   11618:	mov	r1, r0
   1161c:	mov	r0, #1
   11620:	bl	10d38 <__printf_chk@plt>
   11624:	b	1135c <pclose@plt+0x57c>
   11628:	add	r9, sp, #36	; 0x24
   1162c:	mov	r0, r9
   11630:	bl	11190 <pclose@plt+0x3b0>
   11634:	ldr	r3, [sp, #36]	; 0x24
   11638:	str	r0, [sp, #28]
   1163c:	ldrb	r2, [r3]
   11640:	cmp	r2, #32
   11644:	cmpne	r2, #9
   11648:	bne	11664 <pclose@plt+0x884>
   1164c:	add	r3, r3, #1
   11650:	str	r3, [sp, #36]	; 0x24
   11654:	ldrb	r2, [r3]
   11658:	cmp	r2, #9
   1165c:	cmpne	r2, #32
   11660:	beq	1164c <pclose@plt+0x86c>
   11664:	cmp	r2, #45	; 0x2d
   11668:	beq	116c0 <pclose@plt+0x8e0>
   1166c:	ldr	r9, [sp, #28]
   11670:	add	r6, r6, #1
   11674:	mov	r0, r4
   11678:	mov	r1, r9
   1167c:	add	r4, r4, #1
   11680:	bl	11134 <pclose@plt+0x354>
   11684:	cmp	r4, r6
   11688:	bne	11674 <pclose@plt+0x894>
   1168c:	b	11458 <pclose@plt+0x678>
   11690:	ldr	r3, [pc, #544]	; 118b8 <pclose@plt+0xad8>
   11694:	mov	r2, #5
   11698:	ldr	r1, [pc, #564]	; 118d4 <pclose@plt+0xaf4>
   1169c:	ldr	r4, [r3]
   116a0:	bl	10bdc <dcgettext@plt>
   116a4:	ldr	r3, [pc, #540]	; 118c8 <pclose@plt+0xae8>
   116a8:	mov	r1, #1
   116ac:	ldr	r3, [r3]
   116b0:	mov	r2, r0
   116b4:	mov	r0, r4
   116b8:	bl	10d44 <__fprintf_chk@plt>
   116bc:	b	11504 <pclose@plt+0x724>
   116c0:	add	r3, r3, #1
   116c4:	mov	r0, r9
   116c8:	str	r3, [sp, #36]	; 0x24
   116cc:	bl	11190 <pclose@plt+0x3b0>
   116d0:	ldr	r2, [sp, #28]
   116d4:	lsr	r3, r0, #31
   116d8:	orrs	r3, r3, r2, lsr #31
   116dc:	bne	1171c <pclose@plt+0x93c>
   116e0:	ldr	r2, [sp, #28]
   116e4:	sub	r1, r6, r4
   116e8:	sub	r2, r0, r2
   116ec:	cmp	r2, r1
   116f0:	bne	1184c <pclose@plt+0xa6c>
   116f4:	ldr	r3, [sp, #28]
   116f8:	add	r6, r6, #1
   116fc:	sub	r9, r3, r4
   11700:	add	r1, r9, r4
   11704:	mov	r0, r4
   11708:	add	r4, r4, #1
   1170c:	bl	11134 <pclose@plt+0x354>
   11710:	cmp	r4, r6
   11714:	bne	11700 <pclose@plt+0x920>
   11718:	b	11458 <pclose@plt+0x678>
   1171c:	ldr	ip, [pc, #404]	; 118b8 <pclose@plt+0xad8>
   11720:	mov	r2, #5
   11724:	ldr	r1, [pc, #428]	; 118d8 <pclose@plt+0xaf8>
   11728:	mov	r0, #0
   1172c:	ldr	r5, [ip]
   11730:	ldr	r9, [sp, #20]
   11734:	str	r6, [sp, #24]
   11738:	bl	10bdc <dcgettext@plt>
   1173c:	ldr	r3, [sp, #24]
   11740:	str	r4, [sp]
   11744:	str	r3, [sp, #4]
   11748:	mov	r1, #1
   1174c:	mov	r3, r9
   11750:	mov	r2, r0
   11754:	mov	r0, r5
   11758:	bl	10d44 <__fprintf_chk@plt>
   1175c:	mov	r0, #65	; 0x41
   11760:	bl	10cd8 <exit@plt>
   11764:	ldr	r3, [pc, #332]	; 118b8 <pclose@plt+0xad8>
   11768:	mov	r2, #5
   1176c:	ldr	r1, [pc, #360]	; 118dc <pclose@plt+0xafc>
   11770:	mov	r0, #0
   11774:	ldr	r5, [r3]
   11778:	ldr	r9, [sp, #20]
   1177c:	bl	10bdc <dcgettext@plt>
   11780:	str	r4, [sp]
   11784:	mov	r3, r9
   11788:	mov	r1, #1
   1178c:	mov	r2, r0
   11790:	mov	r0, r5
   11794:	bl	10d44 <__fprintf_chk@plt>
   11798:	mov	r0, #65	; 0x41
   1179c:	bl	10cd8 <exit@plt>
   117a0:	ldr	r3, [pc, #272]	; 118b8 <pclose@plt+0xad8>
   117a4:	ldr	r1, [pc, #308]	; 118e0 <pclose@plt+0xb00>
   117a8:	mov	r0, r6
   117ac:	ldr	r4, [r3]
   117b0:	mov	r2, #5
   117b4:	bl	10bdc <dcgettext@plt>
   117b8:	mov	r3, r5
   117bc:	mov	r1, #1
   117c0:	mov	r2, r0
   117c4:	mov	r0, r4
   117c8:	bl	10d44 <__fprintf_chk@plt>
   117cc:	mov	r0, #65	; 0x41
   117d0:	bl	10cd8 <exit@plt>
   117d4:	bl	10bf4 <__stack_chk_fail@plt>
   117d8:	mov	r0, #1
   117dc:	bl	10cd8 <exit@plt>
   117e0:	ldr	r3, [pc, #208]	; 118b8 <pclose@plt+0xad8>
   117e4:	mov	r2, #5
   117e8:	ldr	r1, [pc, #240]	; 118e0 <pclose@plt+0xb00>
   117ec:	ldr	r4, [r3]
   117f0:	mov	r0, #0
   117f4:	b	117b4 <pclose@plt+0x9d4>
   117f8:	ldr	ip, [pc, #184]	; 118b8 <pclose@plt+0xad8>
   117fc:	str	r0, [sp, #24]
   11800:	mov	r2, #5
   11804:	ldr	r1, [pc, #216]	; 118e4 <pclose@plt+0xb04>
   11808:	mov	r0, #0
   1180c:	ldr	r4, [ip]
   11810:	ldr	r9, [sp, #20]
   11814:	bl	10bdc <dcgettext@plt>
   11818:	ldr	r3, [sp, #24]
   1181c:	mov	r1, #1
   11820:	str	r3, [sp]
   11824:	mov	r3, r9
   11828:	mov	r2, r0
   1182c:	mov	r0, r4
   11830:	bl	10d44 <__fprintf_chk@plt>
   11834:	mov	r0, #65	; 0x41
   11838:	bl	10cd8 <exit@plt>
   1183c:	mov	r0, r9
   11840:	bl	10c18 <perror@plt>
   11844:	mov	r0, #66	; 0x42
   11848:	bl	10cd8 <exit@plt>
   1184c:	ldr	ip, [pc, #100]	; 118b8 <pclose@plt+0xad8>
   11850:	mov	r2, r3
   11854:	ldr	r9, [sp, #20]
   11858:	ldr	r1, [pc, #136]	; 118e8 <pclose@plt+0xb08>
   1185c:	str	r6, [sp, #20]
   11860:	mov	r6, r0
   11864:	mov	r0, r2
   11868:	mov	r2, #5
   1186c:	ldr	r5, [ip]
   11870:	bl	10bdc <dcgettext@plt>
   11874:	ldr	r3, [sp, #20]
   11878:	str	r4, [sp, #8]
   1187c:	str	r3, [sp, #12]
   11880:	ldr	r3, [sp, #28]
   11884:	str	r6, [sp, #4]
   11888:	str	r3, [sp]
   1188c:	mov	r1, #1
   11890:	mov	r3, r9
   11894:	mov	r2, r0
   11898:	mov	r0, r5
   1189c:	bl	10d44 <__fprintf_chk@plt>
   118a0:	mov	r0, #65	; 0x41
   118a4:	bl	10cd8 <exit@plt>
   118a8:	andeq	r4, r2, r8, lsl #30
   118ac:	andeq	r3, r1, r0, asr #21
   118b0:	andeq	r5, r2, r8, lsl r1
   118b4:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   118b8:	andeq	r5, r2, r8, lsl #2
   118bc:	andeq	r3, r1, ip, ror #24
   118c0:	andeq	r5, r2, ip, lsr #2
   118c4:	andeq	r3, r1, r4, asr #22
   118c8:	andeq	r5, r2, r8, lsr r1
   118cc:	ldrdeq	r3, [r1], -r8
   118d0:	andeq	r3, r1, r0, lsr #22
   118d4:	andeq	r3, r1, ip, lsl #25
   118d8:	andeq	r3, r1, ip, asr #23
   118dc:	andeq	r3, r1, r8, ror fp
   118e0:	andeq	r3, r1, r4, ror #22
   118e4:	andeq	r3, r1, ip, lsr #23
   118e8:	andeq	r3, r1, r4, lsl ip
   118ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   118f0:	sub	sp, sp, #28
   118f4:	ldr	r8, [pc, #228]	; 119e0 <pclose@plt+0xc00>
   118f8:	mov	r9, r1
   118fc:	mov	r4, r0
   11900:	ldr	r3, [r8]
   11904:	mov	r0, r1
   11908:	ldr	r1, [pc, #212]	; 119e4 <pclose@plt+0xc04>
   1190c:	str	r3, [sp, #20]
   11910:	bl	10ba0 <fopen@plt>
   11914:	subs	r6, r0, #0
   11918:	beq	119cc <pclose@plt+0xbec>
   1191c:	mov	r1, r4
   11920:	add	r0, sp, #12
   11924:	bl	1125c <pclose@plt+0x47c>
   11928:	ldrh	r5, [sp, #12]
   1192c:	ldr	r4, [sp, #16]
   11930:	cmp	r5, #0
   11934:	beq	11964 <pclose@plt+0xb84>
   11938:	ldr	r7, [pc, #168]	; 119e8 <pclose@plt+0xc08>
   1193c:	add	r5, r4, r5, lsl #2
   11940:	ldrh	r3, [r4, #2]
   11944:	ldrh	r1, [r4], #4
   11948:	mov	r2, r7
   1194c:	mov	r0, r6
   11950:	str	r1, [sp]
   11954:	mov	r1, #1
   11958:	bl	10d44 <__fprintf_chk@plt>
   1195c:	cmp	r5, r4
   11960:	bne	11940 <pclose@plt+0xb60>
   11964:	mov	r0, r6
   11968:	bl	10d5c <fclose@plt>
   1196c:	ldr	r3, [pc, #120]	; 119ec <pclose@plt+0xc0c>
   11970:	ldr	r3, [r3, #12]
   11974:	cmp	r3, #0
   11978:	bne	11994 <pclose@plt+0xbb4>
   1197c:	ldr	r2, [sp, #20]
   11980:	ldr	r3, [r8]
   11984:	cmp	r2, r3
   11988:	bne	119dc <pclose@plt+0xbfc>
   1198c:	add	sp, sp, #28
   11990:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11994:	mov	r2, #5
   11998:	ldr	r1, [pc, #80]	; 119f0 <pclose@plt+0xc10>
   1199c:	mov	r0, #0
   119a0:	bl	10bdc <dcgettext@plt>
   119a4:	ldr	r2, [sp, #20]
   119a8:	ldr	r3, [r8]
   119ac:	cmp	r2, r3
   119b0:	mov	r1, r0
   119b4:	bne	119dc <pclose@plt+0xbfc>
   119b8:	mov	r2, r9
   119bc:	mov	r0, #1
   119c0:	add	sp, sp, #28
   119c4:	pop	{r4, r5, r6, r7, r8, r9, lr}
   119c8:	b	10d38 <__printf_chk@plt>
   119cc:	mov	r0, r9
   119d0:	bl	10c18 <perror@plt>
   119d4:	mov	r0, #1
   119d8:	bl	10cd8 <exit@plt>
   119dc:	bl	10bf4 <__stack_chk_fail@plt>
   119e0:	andeq	r4, r2, r8, lsl #30
   119e4:	andeq	r3, r1, r0, ror #25
   119e8:	andeq	r3, r1, r4, ror #25
   119ec:	andeq	r5, r2, r8, lsl r1
   119f0:	strdeq	r3, [r1], -r4
   119f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119f8:	mov	r9, r2
   119fc:	ldr	r2, [pc, #352]	; 11b64 <pclose@plt+0xd84>
   11a00:	sub	sp, sp, #28
   11a04:	mov	r7, r1
   11a08:	ldr	r2, [r2]
   11a0c:	mov	r1, r0
   11a10:	add	r0, sp, #12
   11a14:	mov	r8, r3
   11a18:	str	r2, [sp, #20]
   11a1c:	bl	1125c <pclose@plt+0x47c>
   11a20:	ldr	r3, [sp, #16]
   11a24:	cmp	r9, #0
   11a28:	ldr	r6, [pc, #312]	; 11b68 <pclose@plt+0xd88>
   11a2c:	ldrh	sl, [sp, #12]
   11a30:	str	r3, [sp, #4]
   11a34:	ble	11abc <pclose@plt+0xcdc>
   11a38:	ldr	r3, [sp, #4]
   11a3c:	mov	fp, #0
   11a40:	add	r5, r3, sl, lsl #2
   11a44:	ldr	r2, [r6, #28]
   11a48:	cmp	r2, #0
   11a4c:	bne	11b08 <pclose@plt+0xd28>
   11a50:	cmp	sl, #0
   11a54:	beq	11aa0 <pclose@plt+0xcc0>
   11a58:	ldr	r4, [sp, #4]
   11a5c:	b	11a6c <pclose@plt+0xc8c>
   11a60:	add	r4, r4, #4
   11a64:	cmp	r4, r5
   11a68:	beq	11aa0 <pclose@plt+0xcc0>
   11a6c:	ldrh	r3, [r4, #2]
   11a70:	cmp	r3, fp
   11a74:	bne	11a60 <pclose@plt+0xc80>
   11a78:	ldr	r3, [r6, #28]
   11a7c:	ldrh	r1, [r4]
   11a80:	cmp	r3, #0
   11a84:	bne	11af0 <pclose@plt+0xd10>
   11a88:	mov	r2, r8
   11a8c:	mov	r0, r7
   11a90:	add	r4, r4, #4
   11a94:	bl	125a8 <pclose@plt+0x17c8>
   11a98:	cmp	r4, r5
   11a9c:	bne	11a6c <pclose@plt+0xc8c>
   11aa0:	add	fp, fp, #1
   11aa4:	mov	r2, r8
   11aa8:	mov	r1, #0
   11aac:	mov	r0, r7
   11ab0:	bl	12784 <pclose@plt+0x19a4>
   11ab4:	cmp	r9, fp
   11ab8:	bne	11a44 <pclose@plt+0xc64>
   11abc:	ldr	r3, [r6, #28]
   11ac0:	cmp	r3, #0
   11ac4:	bne	11b54 <pclose@plt+0xd74>
   11ac8:	ldr	r3, [r6, #12]
   11acc:	cmp	r3, #0
   11ad0:	bne	11b1c <pclose@plt+0xd3c>
   11ad4:	ldr	r3, [pc, #136]	; 11b64 <pclose@plt+0xd84>
   11ad8:	ldr	r2, [sp, #20]
   11adc:	ldr	r3, [r3]
   11ae0:	cmp	r2, r3
   11ae4:	bne	11b60 <pclose@plt+0xd80>
   11ae8:	add	sp, sp, #28
   11aec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11af0:	mov	r2, r1
   11af4:	mov	r0, #1
   11af8:	ldr	r1, [pc, #108]	; 11b6c <pclose@plt+0xd8c>
   11afc:	bl	10d38 <__printf_chk@plt>
   11b00:	ldrh	r1, [r4]
   11b04:	b	11a88 <pclose@plt+0xca8>
   11b08:	mov	r2, fp
   11b0c:	ldr	r1, [pc, #92]	; 11b70 <pclose@plt+0xd90>
   11b10:	mov	r0, #1
   11b14:	bl	10d38 <__printf_chk@plt>
   11b18:	b	11a50 <pclose@plt+0xc70>
   11b1c:	mov	r2, #5
   11b20:	ldr	r1, [pc, #76]	; 11b74 <pclose@plt+0xd94>
   11b24:	mov	r0, #0
   11b28:	bl	10bdc <dcgettext@plt>
   11b2c:	ldr	r3, [pc, #48]	; 11b64 <pclose@plt+0xd84>
   11b30:	ldr	r2, [sp, #20]
   11b34:	ldr	r3, [r3]
   11b38:	cmp	r2, r3
   11b3c:	mov	r1, r0
   11b40:	bne	11b60 <pclose@plt+0xd80>
   11b44:	mov	r0, #1
   11b48:	add	sp, sp, #28
   11b4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b50:	b	10d38 <__printf_chk@plt>
   11b54:	mov	r0, #10
   11b58:	bl	10d2c <putchar@plt>
   11b5c:	b	11ac8 <pclose@plt+0xce8>
   11b60:	bl	10bf4 <__stack_chk_fail@plt>
   11b64:	andeq	r4, r2, r8, lsl #30
   11b68:	andeq	r5, r2, r8, lsl r1
   11b6c:	andeq	r3, r1, r8, lsr #27
   11b70:	muleq	r1, r8, sp
   11b74:			; <UNDEFINED> instruction: 0x00013db0
   11b78:	push	{r4, lr}
   11b7c:	mov	r1, #2
   11b80:	mov	r4, r0
   11b84:	bl	10cc0 <open@plt>
   11b88:	cmp	r0, #0
   11b8c:	popge	{r4, pc}
   11b90:	mov	r1, #1
   11b94:	mov	r0, r4
   11b98:	bl	10cc0 <open@plt>
   11b9c:	cmp	r0, #0
   11ba0:	popge	{r4, pc}
   11ba4:	mov	r0, r4
   11ba8:	mov	r1, #0
   11bac:	bl	10cc0 <open@plt>
   11bb0:	orr	r0, r0, r0, asr #31
   11bb4:	pop	{r4, pc}
   11bb8:	push	{r4, r5, lr}
   11bbc:	sub	sp, sp, #12
   11bc0:	ldr	r4, [pc, #108]	; 11c34 <pclose@plt+0xe54>
   11bc4:	mov	r3, #0
   11bc8:	strb	r3, [sp, #3]
   11bcc:	ldr	r3, [r4]
   11bd0:	mov	r5, r0
   11bd4:	str	r3, [sp, #4]
   11bd8:	bl	10da4 <isatty@plt>
   11bdc:	cmp	r0, #0
   11be0:	bne	11c00 <pclose@plt+0xe20>
   11be4:	mov	r0, #0
   11be8:	ldr	r2, [sp, #4]
   11bec:	ldr	r3, [r4]
   11bf0:	cmp	r2, r3
   11bf4:	bne	11c30 <pclose@plt+0xe50>
   11bf8:	add	sp, sp, #12
   11bfc:	pop	{r4, r5, pc}
   11c00:	mov	r0, r5
   11c04:	add	r2, sp, #3
   11c08:	ldr	r1, [pc, #40]	; 11c38 <pclose@plt+0xe58>
   11c0c:	bl	10c3c <ioctl@plt>
   11c10:	cmp	r0, #0
   11c14:	bne	11be4 <pclose@plt+0xe04>
   11c18:	ldrb	r0, [sp, #3]
   11c1c:	sub	r0, r0, #1
   11c20:	cmp	r0, #1
   11c24:	movhi	r0, #0
   11c28:	movls	r0, #1
   11c2c:	b	11be8 <pclose@plt+0xe08>
   11c30:	bl	10bf4 <__stack_chk_fail@plt>
   11c34:	andeq	r4, r2, r8, lsl #30
   11c38:	andeq	r4, r0, r3, lsr fp
   11c3c:	push	{r4, r5, r6, lr}
   11c40:	subs	r5, r0, #0
   11c44:	beq	11c68 <pclose@plt+0xe88>
   11c48:	bl	11b78 <pclose@plt+0xd98>
   11c4c:	subs	r4, r0, #0
   11c50:	blt	11d00 <pclose@plt+0xf20>
   11c54:	bl	11bb8 <pclose@plt+0xdd8>
   11c58:	cmp	r0, #0
   11c5c:	beq	11cf8 <pclose@plt+0xf18>
   11c60:	mov	r0, r4
   11c64:	pop	{r4, r5, r6, pc}
   11c68:	ldr	r5, [pc, #196]	; 11d34 <pclose@plt+0xf54>
   11c6c:	ldr	r0, [pc, #196]	; 11d38 <pclose@plt+0xf58>
   11c70:	b	11c80 <pclose@plt+0xea0>
   11c74:	ldr	r0, [r5], #4
   11c78:	cmp	r0, #0
   11c7c:	beq	11cac <pclose@plt+0xecc>
   11c80:	bl	11b78 <pclose@plt+0xd98>
   11c84:	subs	r4, r0, #0
   11c88:	blt	11c74 <pclose@plt+0xe94>
   11c8c:	bl	11bb8 <pclose@plt+0xdd8>
   11c90:	cmp	r0, #0
   11c94:	bne	11c60 <pclose@plt+0xe80>
   11c98:	mov	r0, r4
   11c9c:	bl	10dc8 <close@plt>
   11ca0:	ldr	r0, [r5], #4
   11ca4:	cmp	r0, #0
   11ca8:	bne	11c80 <pclose@plt+0xea0>
   11cac:	mov	r4, r0
   11cb0:	mov	r0, r4
   11cb4:	bl	11bb8 <pclose@plt+0xdd8>
   11cb8:	cmp	r0, #0
   11cbc:	bne	11c60 <pclose@plt+0xe80>
   11cc0:	add	r4, r4, #1
   11cc4:	cmp	r4, #3
   11cc8:	bne	11cb0 <pclose@plt+0xed0>
   11ccc:	ldr	r3, [pc, #104]	; 11d3c <pclose@plt+0xf5c>
   11cd0:	mov	r2, #5
   11cd4:	ldr	r1, [pc, #100]	; 11d40 <pclose@plt+0xf60>
   11cd8:	ldr	r4, [r3]
   11cdc:	bl	10bdc <dcgettext@plt>
   11ce0:	mov	r1, #1
   11ce4:	mov	r2, r0
   11ce8:	mov	r0, r4
   11cec:	bl	10d44 <__fprintf_chk@plt>
   11cf0:	mov	r0, #1
   11cf4:	bl	10cd8 <exit@plt>
   11cf8:	mov	r0, r4
   11cfc:	bl	10dc8 <close@plt>
   11d00:	ldr	r3, [pc, #52]	; 11d3c <pclose@plt+0xf5c>
   11d04:	mov	r2, #5
   11d08:	ldr	r1, [pc, #52]	; 11d44 <pclose@plt+0xf64>
   11d0c:	mov	r0, #0
   11d10:	ldr	r4, [r3]
   11d14:	bl	10bdc <dcgettext@plt>
   11d18:	mov	r3, r5
   11d1c:	mov	r1, #1
   11d20:	mov	r2, r0
   11d24:	mov	r0, r4
   11d28:	bl	10d44 <__fprintf_chk@plt>
   11d2c:	mov	r0, #1
   11d30:	bl	10cd8 <exit@plt>
   11d34:	strdeq	r3, [r1], -r0
   11d38:	andeq	r3, r1, r8, lsl #28
   11d3c:	andeq	r5, r2, r8, lsl #2
   11d40:	andeq	r3, r1, ip, lsr #28
   11d44:	andeq	r3, r1, r8, lsl lr
   11d48:	push	{r4, lr}
   11d4c:	bl	10c78 <malloc@plt>
   11d50:	cmp	r0, #0
   11d54:	popne	{r4, pc}
   11d58:	bl	10dec <pclose@plt+0xc>
   11d5c:	push	{r4, lr}
   11d60:	bl	10c00 <realloc@plt>
   11d64:	cmp	r0, #0
   11d68:	popne	{r4, pc}
   11d6c:	bl	10dec <pclose@plt+0xc>
   11d70:	push	{r4, lr}
   11d74:	bl	10be8 <strdup@plt>
   11d78:	cmp	r0, #0
   11d7c:	popne	{r4, pc}
   11d80:	bl	10dec <pclose@plt+0xc>
   11d84:	push	{r4, lr}
   11d88:	bl	10bd0 <strndup@plt>
   11d8c:	cmp	r0, #0
   11d90:	popne	{r4, pc}
   11d94:	bl	10dec <pclose@plt+0xc>
   11d98:	cmp	r0, #0
   11d9c:	beq	11db0 <pclose@plt+0xfd0>
   11da0:	push	{r4, lr}
   11da4:	bl	10bac <free@plt>
   11da8:	mov	r0, #0
   11dac:	pop	{r4, pc}
   11db0:	mov	r0, #0
   11db4:	bx	lr
   11db8:	push	{r1, r2, r3}
   11dbc:	push	{r4, r5, r6, r7, lr}
   11dc0:	sub	sp, sp, #8
   11dc4:	ldr	r5, [pc, #144]	; 11e5c <pclose@plt+0x107c>
   11dc8:	ldr	r4, [pc, #144]	; 11e60 <pclose@plt+0x1080>
   11dcc:	ldr	r3, [pc, #144]	; 11e64 <pclose@plt+0x1084>
   11dd0:	ldr	r1, [r5]
   11dd4:	ldr	r7, [sp, #28]
   11dd8:	add	ip, sp, #32
   11ddc:	mov	r6, r0
   11de0:	ldr	r3, [r3]
   11de4:	ldr	r2, [pc, #124]	; 11e68 <pclose@plt+0x1088>
   11de8:	str	r1, [sp, #4]
   11dec:	ldr	r0, [r4]
   11df0:	mov	r1, #1
   11df4:	str	ip, [sp]
   11df8:	bl	10d44 <__fprintf_chk@plt>
   11dfc:	mov	r2, r7
   11e00:	ldr	r0, [r4]
   11e04:	ldr	r3, [sp]
   11e08:	mov	r1, #1
   11e0c:	bl	10c9c <__vfprintf_chk@plt>
   11e10:	cmp	r6, #0
   11e14:	ble	11e38 <pclose@plt+0x1058>
   11e18:	mov	r0, r6
   11e1c:	ldr	r4, [r4]
   11e20:	bl	10c90 <strerror@plt>
   11e24:	ldr	r2, [pc, #64]	; 11e6c <pclose@plt+0x108c>
   11e28:	mov	r1, #1
   11e2c:	mov	r3, r0
   11e30:	mov	r0, r4
   11e34:	bl	10d44 <__fprintf_chk@plt>
   11e38:	ldr	r2, [sp, #4]
   11e3c:	ldr	r3, [r5]
   11e40:	cmp	r2, r3
   11e44:	bne	11e58 <pclose@plt+0x1078>
   11e48:	add	sp, sp, #8
   11e4c:	pop	{r4, r5, r6, r7, lr}
   11e50:	add	sp, sp, #12
   11e54:	bx	lr
   11e58:	bl	10bf4 <__stack_chk_fail@plt>
   11e5c:	andeq	r4, r2, r8, lsl #30
   11e60:	andeq	r5, r2, r8, lsl #2
   11e64:	andeq	r5, r2, r8, lsr r1
   11e68:			; <UNDEFINED> instruction: 0x00013ebc
   11e6c:	andeq	r3, r1, r4, asr #29
   11e70:	push	{r2, r3}
   11e74:	mov	r5, r1
   11e78:	ldr	r2, [pc, #124]	; 11efc <pclose@plt+0x111c>
   11e7c:	push	{r7, lr}
   11e80:	sub	sp, sp, #8
   11e84:	ldr	r4, [pc, #116]	; 11f00 <pclose@plt+0x1120>
   11e88:	ldr	r3, [pc, #116]	; 11f04 <pclose@plt+0x1124>
   11e8c:	ldr	lr, [r2]
   11e90:	ldr	r7, [sp, #16]
   11e94:	add	ip, sp, #20
   11e98:	ldr	r3, [r3]
   11e9c:	ldr	r2, [pc, #100]	; 11f08 <pclose@plt+0x1128>
   11ea0:	mov	r1, #1
   11ea4:	mov	r6, r0
   11ea8:	ldr	r0, [r4]
   11eac:	str	lr, [sp, #4]
   11eb0:	str	ip, [sp]
   11eb4:	bl	10d44 <__fprintf_chk@plt>
   11eb8:	mov	r2, r7
   11ebc:	ldr	r0, [r4]
   11ec0:	ldr	r3, [sp]
   11ec4:	mov	r1, #1
   11ec8:	bl	10c9c <__vfprintf_chk@plt>
   11ecc:	cmp	r5, #0
   11ed0:	ble	11ef4 <pclose@plt+0x1114>
   11ed4:	mov	r0, r5
   11ed8:	ldr	r4, [r4]
   11edc:	bl	10c90 <strerror@plt>
   11ee0:	ldr	r2, [pc, #36]	; 11f0c <pclose@plt+0x112c>
   11ee4:	mov	r1, #1
   11ee8:	mov	r3, r0
   11eec:	mov	r0, r4
   11ef0:	bl	10d44 <__fprintf_chk@plt>
   11ef4:	mov	r0, r6
   11ef8:	bl	10cd8 <exit@plt>
   11efc:	andeq	r4, r2, r8, lsl #30
   11f00:	andeq	r5, r2, r8, lsl #2
   11f04:	andeq	r5, r2, r8, lsr r1
   11f08:			; <UNDEFINED> instruction: 0x00013ebc
   11f0c:	andeq	r3, r1, r4, asr #29
   11f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f14:	sub	sp, sp, #84	; 0x54
   11f18:	mov	r9, r1
   11f1c:	str	r3, [sp, #16]
   11f20:	ldr	r3, [sp, #120]	; 0x78
   11f24:	ldr	r1, [pc, #1588]	; 12560 <pclose@plt+0x1780>
   11f28:	str	r3, [sp, #24]
   11f2c:	ldr	r3, [sp, #128]	; 0x80
   11f30:	ldr	r1, [r1]
   11f34:	str	r3, [sp, #28]
   11f38:	ldr	r3, [sp, #136]	; 0x88
   11f3c:	subs	r6, r0, #0
   11f40:	mov	r8, r2
   11f44:	str	r1, [sp, #76]	; 0x4c
   11f48:	ldr	sl, [sp, #124]	; 0x7c
   11f4c:	str	r3, [sp, #20]
   11f50:	beq	121ec <pclose@plt+0x140c>
   11f54:	mov	r0, #16384	; 0x4000
   11f58:	bl	11d48 <pclose@plt+0xf68>
   11f5c:	mov	r4, #0
   11f60:	mov	r7, #16384	; 0x4000
   11f64:	mov	r5, r0
   11f68:	sub	r2, r7, r4
   11f6c:	mov	r3, r6
   11f70:	mov	r1, #1
   11f74:	add	r0, r5, r4
   11f78:	bl	10c60 <fread@plt>
   11f7c:	add	r4, r4, r0
   11f80:	mov	r0, r6
   11f84:	bl	10bc4 <ferror@plt>
   11f88:	cmp	r0, #0
   11f8c:	bne	12498 <pclose@plt+0x16b8>
   11f90:	mov	r0, r6
   11f94:	bl	10ce4 <feof@plt>
   11f98:	cmp	r0, #0
   11f9c:	bne	11fc0 <pclose@plt+0x11e0>
   11fa0:	cmp	r7, r4
   11fa4:	bhi	11f68 <pclose@plt+0x1188>
   11fa8:	lsl	r7, r7, #1
   11fac:	mov	r0, r5
   11fb0:	mov	r1, r7
   11fb4:	bl	11d5c <pclose@plt+0xf7c>
   11fb8:	mov	r5, r0
   11fbc:	b	11f68 <pclose@plt+0x1188>
   11fc0:	cmp	r9, #0
   11fc4:	strne	r5, [r9]
   11fc8:	cmp	r8, #0
   11fcc:	strne	r4, [r8]
   11fd0:	cmp	r4, #3
   11fd4:	bls	121cc <pclose@plt+0x13ec>
   11fd8:	ldrb	r3, [r5]
   11fdc:	cmp	r3, #54	; 0x36
   11fe0:	beq	123c8 <pclose@plt+0x15e8>
   11fe4:	cmp	r4, #31
   11fe8:	bls	121cc <pclose@plt+0x13ec>
   11fec:	cmp	r3, #114	; 0x72
   11ff0:	bne	121cc <pclose@plt+0x13ec>
   11ff4:	ldrb	r3, [r5, #1]
   11ff8:	cmp	r3, #181	; 0xb5
   11ffc:	bne	121cc <pclose@plt+0x13ec>
   12000:	ldrb	r3, [r5, #2]
   12004:	cmp	r3, #74	; 0x4a
   12008:	bne	121cc <pclose@plt+0x13ec>
   1200c:	ldrb	r3, [r5, #3]
   12010:	cmp	r3, #134	; 0x86
   12014:	bne	121cc <pclose@plt+0x13ec>
   12018:	ldr	r0, [r5]
   1201c:	ldr	r1, [r5, #4]
   12020:	ldr	r2, [r5, #8]
   12024:	ldr	r3, [r5, #12]
   12028:	add	ip, sp, #44	; 0x2c
   1202c:	stmia	ip!, {r0, r1, r2, r3}
   12030:	ldr	r0, [r5, #16]
   12034:	ldr	r1, [r5, #20]
   12038:	ldr	r2, [r5, #24]
   1203c:	ldr	r3, [r5, #28]
   12040:	ldr	r6, [sp, #48]	; 0x30
   12044:	cmp	r6, #0
   12048:	stmia	ip!, {r0, r1, r2, r3}
   1204c:	bne	124a8 <pclose@plt+0x16c8>
   12050:	ldrb	r2, [sp, #61]	; 0x3d
   12054:	ldrb	r8, [sp, #60]	; 0x3c
   12058:	ldrb	r3, [sp, #65]	; 0x41
   1205c:	ldrb	r0, [sp, #62]	; 0x3e
   12060:	add	r8, r8, r2, lsl #8
   12064:	ldrb	r2, [sp, #64]	; 0x40
   12068:	ldrb	r1, [sp, #53]	; 0x35
   1206c:	ldrb	r6, [sp, #63]	; 0x3f
   12070:	add	r2, r2, r3, lsl #8
   12074:	ldrb	r3, [sp, #52]	; 0x34
   12078:	ldrb	lr, [sp, #73]	; 0x49
   1207c:	add	r8, r8, r0, lsl #16
   12080:	ldrb	ip, [sp, #54]	; 0x36
   12084:	ldrb	r0, [sp, #66]	; 0x42
   12088:	add	r3, r3, r1, lsl #8
   1208c:	ldrb	r1, [sp, #72]	; 0x48
   12090:	adds	r6, r8, r6, lsl #24
   12094:	str	r6, [sp, #12]
   12098:	ldrb	r6, [sp, #74]	; 0x4a
   1209c:	add	r0, r2, r0, lsl #16
   120a0:	add	r1, r1, lr, lsl #8
   120a4:	add	r3, r3, ip, lsl #16
   120a8:	ldrb	r2, [sp, #67]	; 0x43
   120ac:	ldrb	ip, [sp, #55]	; 0x37
   120b0:	ldrb	lr, [sp, #75]	; 0x4b
   120b4:	ldrb	fp, [sp, #56]	; 0x38
   120b8:	add	r1, r1, r6, lsl #16
   120bc:	add	r0, r0, r2, lsl #24
   120c0:	add	r3, r3, ip, lsl #24
   120c4:	add	r1, r1, lr, lsl #24
   120c8:	and	fp, fp, #1
   120cc:	movne	r7, #1
   120d0:	beq	124c8 <pclose@plt+0x16e8>
   120d4:	cmp	r0, #0
   120d8:	moveq	r2, #5
   120dc:	ldreq	r1, [pc, #1152]	; 12564 <pclose@plt+0x1784>
   120e0:	beq	123a0 <pclose@plt+0x15c0>
   120e4:	ldr	r2, [sp, #12]
   120e8:	mul	r0, r0, r2
   120ec:	add	r6, r0, r3
   120f0:	cmp	r4, r6
   120f4:	bcc	124e8 <pclose@plt+0x1708>
   120f8:	subs	r2, r4, r6
   120fc:	movne	r2, #1
   12100:	cmp	fp, #0
   12104:	movne	r2, #0
   12108:	cmp	r2, #0
   1210c:	bne	124e8 <pclose@plt+0x1708>
   12110:	ldr	ip, [sp, #16]
   12114:	cmp	ip, #0
   12118:	cmpne	r9, #0
   1211c:	ldrne	r2, [r9]
   12120:	addne	r3, r2, r3
   12124:	strne	r3, [ip]
   12128:	ldr	r3, [sp, #24]
   1212c:	cmp	r3, #0
   12130:	strne	r0, [r3]
   12134:	ldr	r3, [sp, #28]
   12138:	cmp	r3, #0
   1213c:	ldrne	r2, [sp, #12]
   12140:	strne	r2, [r3]
   12144:	ldr	r3, [sp, #20]
   12148:	cmp	sl, #0
   1214c:	strne	r1, [sl]
   12150:	cmp	r3, #0
   12154:	beq	121c4 <pclose@plt+0x13e4>
   12158:	ldr	r3, [sp, #132]	; 0x84
   1215c:	ldr	r9, [sp, #12]
   12160:	ldr	r8, [sp, #20]
   12164:	add	r1, r3, r9
   12168:	add	r1, r1, r1, lsl #1
   1216c:	ldr	r0, [r8]
   12170:	lsl	r1, r1, #2
   12174:	bl	11d5c <pclose@plt+0xf7c>
   12178:	cmp	fp, #0
   1217c:	mov	lr, r8
   12180:	str	r0, [r8]
   12184:	bne	12204 <pclose@plt+0x1424>
   12188:	ldr	r3, [sp, #132]	; 0x84
   1218c:	mov	r1, fp
   12190:	mov	ip, r9
   12194:	add	r3, r3, r3, lsl #1
   12198:	lsl	r3, r3, #2
   1219c:	b	121a4 <pclose@plt+0x13c4>
   121a0:	ldr	r0, [lr]
   121a4:	add	r2, r0, r3
   121a8:	add	fp, fp, #1
   121ac:	cmp	fp, ip
   121b0:	str	r1, [r0, r3]
   121b4:	str	r1, [r2, #8]
   121b8:	str	r2, [r2, #4]
   121bc:	add	r3, r3, #12
   121c0:	bcc	121a0 <pclose@plt+0x13c0>
   121c4:	mov	r0, #0
   121c8:	b	121d0 <pclose@plt+0x13f0>
   121cc:	mvn	r0, #0
   121d0:	ldr	r3, [pc, #904]	; 12560 <pclose@plt+0x1780>
   121d4:	ldr	r2, [sp, #76]	; 0x4c
   121d8:	ldr	r3, [r3]
   121dc:	cmp	r2, r3
   121e0:	bne	12494 <pclose@plt+0x16b4>
   121e4:	add	sp, sp, #84	; 0x54
   121e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121ec:	cmp	r2, #0
   121f0:	cmpne	r9, #0
   121f4:	beq	12508 <pclose@plt+0x1728>
   121f8:	ldr	r4, [r2]
   121fc:	ldr	r5, [r9]
   12200:	b	11fd0 <pclose@plt+0x11f0>
   12204:	ldr	r9, [pc, #860]	; 12568 <pclose@plt+0x1788>
   12208:	mov	r3, #0
   1220c:	add	r4, r5, r4
   12210:	str	r3, [sp, #16]
   12214:	add	r3, r5, r6
   12218:	str	r3, [sp, #36]	; 0x24
   1221c:	ldr	r1, [sp, #16]
   12220:	ldr	r2, [sp, #132]	; 0x84
   12224:	add	r2, r2, r1
   12228:	mov	r1, #0
   1222c:	add	r2, r2, r2, lsl #1
   12230:	mov	r5, r1
   12234:	add	r6, r0, r2, lsl #2
   12238:	str	r1, [r0, r2, lsl #2]
   1223c:	str	r1, [r6, #8]
   12240:	str	r6, [r6, #4]
   12244:	cmp	r4, r3
   12248:	beq	12404 <pclose@plt+0x1624>
   1224c:	cmp	r7, #0
   12250:	beq	122d8 <pclose@plt+0x14f8>
   12254:	add	r2, r3, #1
   12258:	str	r2, [sp, #36]	; 0x24
   1225c:	ldrb	r1, [r3]
   12260:	cmp	r1, #255	; 0xff
   12264:	beq	12368 <pclose@plt+0x1588>
   12268:	cmp	r1, #254	; 0xfe
   1226c:	beq	12314 <pclose@plt+0x1534>
   12270:	sub	r1, r4, r3
   12274:	add	r2, sp, #40	; 0x28
   12278:	add	r0, sp, #36	; 0x24
   1227c:	str	r3, [sp, #36]	; 0x24
   12280:	bl	12c08 <pclose@plt+0x1e28>
   12284:	ldr	r3, [sp, #40]	; 0x28
   12288:	cmp	r3, #0
   1228c:	mov	fp, r0
   12290:	bne	12414 <pclose@plt+0x1634>
   12294:	cmp	r5, #1
   12298:	ble	12320 <pclose@plt+0x1540>
   1229c:	ldr	r3, [r6, #4]
   122a0:	ldr	sl, [r3, #8]
   122a4:	b	122ac <pclose@plt+0x14cc>
   122a8:	mov	sl, r8
   122ac:	ldr	r8, [sl]
   122b0:	cmp	r8, #0
   122b4:	bne	122a8 <pclose@plt+0x14c8>
   122b8:	mov	r0, #12
   122bc:	bl	11d48 <pclose@plt+0xf68>
   122c0:	strd	sl, [r0, #4]
   122c4:	str	r8, [r0]
   122c8:	str	r0, [sl]
   122cc:	add	r5, r5, #1
   122d0:	ldr	r3, [sp, #36]	; 0x24
   122d4:	b	12244 <pclose@plt+0x1464>
   122d8:	sub	r2, r4, r3
   122dc:	cmp	r2, #1
   122e0:	ble	124d8 <pclose@plt+0x16f8>
   122e4:	mov	r2, r3
   122e8:	add	r1, r3, #1
   122ec:	str	r1, [sp, #36]	; 0x24
   122f0:	ldrb	fp, [r2], #2
   122f4:	str	r2, [sp, #36]	; 0x24
   122f8:	ldrb	r3, [r3, #1]
   122fc:	orr	fp, fp, r3, lsl #8
   12300:	cmp	fp, r9
   12304:	beq	12368 <pclose@plt+0x1588>
   12308:	ldr	r3, [pc, #604]	; 1256c <pclose@plt+0x178c>
   1230c:	cmp	fp, r3
   12310:	bne	12294 <pclose@plt+0x14b4>
   12314:	mov	r3, r2
   12318:	mov	r5, #1
   1231c:	b	12244 <pclose@plt+0x1464>
   12320:	mov	r0, #12
   12324:	bl	11d48 <pclose@plt+0xf68>
   12328:	mov	r8, r0
   1232c:	mov	r0, #12
   12330:	bl	11d48 <pclose@plt+0xf68>
   12334:	ldr	r2, [r6, #4]
   12338:	mov	r3, #0
   1233c:	cmp	r5, #0
   12340:	str	fp, [r0, #8]
   12344:	str	r0, [r0, #4]
   12348:	str	r3, [r0]
   1234c:	str	r0, [r8, #8]
   12350:	str	r2, [r8, #4]
   12354:	str	r8, [r2]
   12358:	str	r3, [r8]
   1235c:	str	r8, [r6, #4]
   12360:	beq	122d0 <pclose@plt+0x14f0>
   12364:	b	122cc <pclose@plt+0x14ec>
   12368:	ldr	r3, [sp, #16]
   1236c:	ldr	r1, [sp, #12]
   12370:	add	r3, r3, #1
   12374:	cmp	r3, r1
   12378:	str	r3, [sp, #16]
   1237c:	movcc	r3, r2
   12380:	ldrcc	r2, [sp, #20]
   12384:	ldrcc	r0, [r2]
   12388:	bcc	1221c <pclose@plt+0x143c>
   1238c:	cmp	r4, r2
   12390:	movne	r2, #5
   12394:	ldrne	r1, [pc, #468]	; 12570 <pclose@plt+0x1790>
   12398:	movne	r0, #0
   1239c:	beq	121c4 <pclose@plt+0x13e4>
   123a0:	bl	10bdc <dcgettext@plt>
   123a4:	ldr	ip, [pc, #456]	; 12574 <pclose@plt+0x1794>
   123a8:	ldr	r3, [pc, #456]	; 12578 <pclose@plt+0x1798>
   123ac:	mov	r1, #1
   123b0:	ldr	r3, [r3]
   123b4:	mov	r2, r0
   123b8:	ldr	r0, [ip]
   123bc:	bl	10d44 <__fprintf_chk@plt>
   123c0:	mov	r0, #65	; 0x41
   123c4:	bl	10cd8 <exit@plt>
   123c8:	ldrb	r3, [r5, #1]
   123cc:	cmp	r3, #4
   123d0:	bne	121cc <pclose@plt+0x13ec>
   123d4:	ldrb	fp, [r5, #2]
   123d8:	cmp	fp, #5
   123dc:	bhi	12458 <pclose@plt+0x1678>
   123e0:	tst	fp, #1
   123e4:	moveq	r2, #256	; 0x100
   123e8:	movne	r2, #512	; 0x200
   123ec:	and	fp, fp, #6
   123f0:	str	r2, [sp, #12]
   123f4:	ldrb	r0, [r5, #3]
   123f8:	mov	r7, #0
   123fc:	mov	r1, #8
   12400:	b	120d4 <pclose@plt+0x12f4>
   12404:	mov	r2, #5
   12408:	ldr	r1, [pc, #364]	; 1257c <pclose@plt+0x179c>
   1240c:	mov	r0, #0
   12410:	b	123a0 <pclose@plt+0x15c0>
   12414:	cmn	r3, #2
   12418:	beq	1254c <pclose@plt+0x176c>
   1241c:	cmn	r3, #1
   12420:	bne	12538 <pclose@plt+0x1758>
   12424:	mov	r2, #5
   12428:	ldr	r1, [pc, #336]	; 12580 <pclose@plt+0x17a0>
   1242c:	mov	r0, #0
   12430:	bl	10bdc <dcgettext@plt>
   12434:	ldr	r1, [pc, #312]	; 12574 <pclose@plt+0x1794>
   12438:	ldr	r3, [pc, #312]	; 12578 <pclose@plt+0x1798>
   1243c:	mov	r2, r0
   12440:	ldr	r0, [r1]
   12444:	ldr	r3, [r3]
   12448:	mov	r1, #1
   1244c:	bl	10d44 <__fprintf_chk@plt>
   12450:	mov	r0, #65	; 0x41
   12454:	bl	10cd8 <exit@plt>
   12458:	mov	r2, #5
   1245c:	ldr	r1, [pc, #288]	; 12584 <pclose@plt+0x17a4>
   12460:	mov	r0, #0
   12464:	bl	10bdc <dcgettext@plt>
   12468:	ldrb	r2, [r5, #2]
   1246c:	ldr	r3, [pc, #260]	; 12578 <pclose@plt+0x1798>
   12470:	ldr	ip, [pc, #252]	; 12574 <pclose@plt+0x1794>
   12474:	str	r2, [sp]
   12478:	mov	r2, r0
   1247c:	ldr	r3, [r3]
   12480:	mov	r1, #1
   12484:	ldr	r0, [ip]
   12488:	bl	10d44 <__fprintf_chk@plt>
   1248c:	mov	r0, #65	; 0x41
   12490:	bl	10cd8 <exit@plt>
   12494:	bl	10bf4 <__stack_chk_fail@plt>
   12498:	mov	r2, #5
   1249c:	ldr	r1, [pc, #228]	; 12588 <pclose@plt+0x17a8>
   124a0:	mov	r0, #0
   124a4:	b	123a0 <pclose@plt+0x15c0>
   124a8:	mov	r2, #5
   124ac:	ldr	r1, [pc, #216]	; 1258c <pclose@plt+0x17ac>
   124b0:	mov	r0, #0
   124b4:	bl	10bdc <dcgettext@plt>
   124b8:	ldr	r3, [pc, #184]	; 12578 <pclose@plt+0x1798>
   124bc:	ldr	ip, [pc, #176]	; 12574 <pclose@plt+0x1794>
   124c0:	str	r6, [sp]
   124c4:	b	12478 <pclose@plt+0x1698>
   124c8:	ldr	r0, [sp, #12]
   124cc:	mov	r2, #5
   124d0:	ldr	r1, [pc, #184]	; 12590 <pclose@plt+0x17b0>
   124d4:	b	123a0 <pclose@plt+0x15c0>
   124d8:	mov	r0, r7
   124dc:	mov	r2, #5
   124e0:	ldr	r1, [pc, #172]	; 12594 <pclose@plt+0x17b4>
   124e4:	b	123a0 <pclose@plt+0x15c0>
   124e8:	mov	r2, #5
   124ec:	ldr	r1, [pc, #164]	; 12598 <pclose@plt+0x17b8>
   124f0:	mov	r0, #0
   124f4:	bl	10bdc <dcgettext@plt>
   124f8:	ldr	r3, [pc, #120]	; 12578 <pclose@plt+0x1798>
   124fc:	ldr	ip, [pc, #112]	; 12574 <pclose@plt+0x1794>
   12500:	str	r4, [sp]
   12504:	b	12478 <pclose@plt+0x1698>
   12508:	mov	r2, #5
   1250c:	ldr	r1, [pc, #136]	; 1259c <pclose@plt+0x17bc>
   12510:	bl	10bdc <dcgettext@plt>
   12514:	ldr	ip, [pc, #88]	; 12574 <pclose@plt+0x1794>
   12518:	ldr	r3, [pc, #88]	; 12578 <pclose@plt+0x1798>
   1251c:	mov	r1, #1
   12520:	ldr	r3, [r3]
   12524:	mov	r2, r0
   12528:	ldr	r0, [ip]
   1252c:	bl	10d44 <__fprintf_chk@plt>
   12530:	mov	r0, #70	; 0x46
   12534:	bl	10cd8 <exit@plt>
   12538:	mov	r2, #5
   1253c:	ldr	r1, [pc, #92]	; 125a0 <pclose@plt+0x17c0>
   12540:	mov	r0, #0
   12544:	bl	10bdc <dcgettext@plt>
   12548:	b	12434 <pclose@plt+0x1654>
   1254c:	mov	r2, #5
   12550:	ldr	r1, [pc, #76]	; 125a4 <pclose@plt+0x17c4>
   12554:	mov	r0, #0
   12558:	bl	10bdc <dcgettext@plt>
   1255c:	b	12434 <pclose@plt+0x1654>
   12560:	andeq	r4, r2, r8, lsl #30
   12564:	andeq	r3, r1, r4, ror pc
   12568:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   1256c:	strdeq	pc, [r0], -lr
   12570:	andeq	r4, r1, r0, asr #32
   12574:	andeq	r5, r2, r8, lsl #2
   12578:	andeq	r5, r2, r8, lsr r1
   1257c:			; <UNDEFINED> instruction: 0x00013fbc
   12580:	strdeq	r3, [r1], -r8
   12584:	andeq	r3, r1, ip, lsl #30
   12588:	andeq	r3, r1, ip, asr #29
   1258c:	andeq	r3, r1, r0, lsr pc
   12590:	andeq	r3, r1, r4, asr pc
   12594:	andeq	r4, r1, r0, lsr #32
   12598:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1259c:	andeq	r3, r1, ip, ror #29
   125a0:	andeq	r4, r1, r8
   125a4:	ldrdeq	r3, [r1], -r8
   125a8:	push	{r4, r5, r6, r7, lr}
   125ac:	subs	r4, r1, #0
   125b0:	ldr	r6, [pc, #432]	; 12768 <pclose@plt+0x1988>
   125b4:	sub	sp, sp, #20
   125b8:	ldr	r1, [r6]
   125bc:	str	r1, [sp, #12]
   125c0:	blt	12734 <pclose@plt+0x1954>
   125c4:	cmp	r2, #0
   125c8:	mov	r3, r0
   125cc:	mov	r7, r2
   125d0:	uxtb	ip, r4
   125d4:	bne	12634 <pclose@plt+0x1854>
   125d8:	mov	r0, #4
   125dc:	mov	r5, r0
   125e0:	mov	r1, #2
   125e4:	lsr	r4, r4, #8
   125e8:	strb	r4, [sp, #9]
   125ec:	strb	ip, [sp, #8]
   125f0:	add	r2, sp, #4
   125f4:	add	r0, r2, r0
   125f8:	mov	r2, #1
   125fc:	bl	10c30 <fwrite@plt>
   12600:	cmp	r0, #1
   12604:	mov	r4, r0
   12608:	bne	12724 <pclose@plt+0x1944>
   1260c:	ldr	r3, [pc, #344]	; 1276c <pclose@plt+0x198c>
   12610:	ldr	r3, [r3]
   12614:	cmp	r3, #0
   12618:	bne	126b8 <pclose@plt+0x18d8>
   1261c:	ldr	r2, [sp, #12]
   12620:	ldr	r3, [r6]
   12624:	cmp	r2, r3
   12628:	bne	12720 <pclose@plt+0x1940>
   1262c:	add	sp, sp, #20
   12630:	pop	{r4, r5, r6, r7, pc}
   12634:	cmp	r4, #127	; 0x7f
   12638:	bls	126a4 <pclose@plt+0x18c4>
   1263c:	bics	r2, r4, #63	; 0x3f
   12640:	addne	r0, sp, #9
   12644:	movne	r1, #63	; 0x3f
   12648:	movne	r5, #6
   1264c:	bne	12658 <pclose@plt+0x1878>
   12650:	b	1270c <pclose@plt+0x192c>
   12654:	mov	r5, r2
   12658:	and	r2, r4, #63	; 0x3f
   1265c:	asr	r1, r1, #1
   12660:	lsr	r4, r4, #6
   12664:	sub	r2, r2, #128	; 0x80
   12668:	bics	ip, r4, r1
   1266c:	strb	r2, [r0], #-1
   12670:	sub	r2, r5, #1
   12674:	bne	12654 <pclose@plt+0x1874>
   12678:	sub	r5, r5, #2
   1267c:	uxtb	r2, r1
   12680:	uxtb	ip, r4
   12684:	mov	r0, r5
   12688:	rsb	r1, r5, #6
   1268c:	sub	r2, ip, r2, lsl #1
   12690:	add	ip, sp, #16
   12694:	add	ip, ip, r5
   12698:	sub	r2, r2, #2
   1269c:	strb	r2, [ip, #-12]
   126a0:	b	125f0 <pclose@plt+0x1810>
   126a4:	mov	r0, #5
   126a8:	strb	ip, [sp, #9]
   126ac:	mov	r5, r0
   126b0:	mov	r1, #1
   126b4:	b	125f0 <pclose@plt+0x1810>
   126b8:	mov	r0, #40	; 0x28
   126bc:	bl	10d2c <putchar@plt>
   126c0:	cmp	r7, #0
   126c4:	beq	126fc <pclose@plt+0x191c>
   126c8:	add	r3, sp, #4
   126cc:	ldr	r7, [pc, #156]	; 12770 <pclose@plt+0x1990>
   126d0:	add	r4, r3, r5
   126d4:	add	r5, sp, #10
   126d8:	ldrb	r2, [r4], #1
   126dc:	mov	r1, r7
   126e0:	mov	r0, #1
   126e4:	bl	10d38 <__printf_chk@plt>
   126e8:	cmp	r5, r4
   126ec:	bne	126d8 <pclose@plt+0x18f8>
   126f0:	mov	r0, #41	; 0x29
   126f4:	bl	10d2c <putchar@plt>
   126f8:	b	1261c <pclose@plt+0x183c>
   126fc:	mov	r0, r4
   12700:	ldr	r1, [pc, #108]	; 12774 <pclose@plt+0x1994>
   12704:	bl	10d38 <__printf_chk@plt>
   12708:	b	126c8 <pclose@plt+0x18e8>
   1270c:	mov	r0, #5
   12710:	mov	r5, r0
   12714:	mov	r1, #1
   12718:	mov	r2, #63	; 0x3f
   1271c:	b	1268c <pclose@plt+0x18ac>
   12720:	bl	10bf4 <__stack_chk_fail@plt>
   12724:	ldr	r0, [pc, #76]	; 12778 <pclose@plt+0x1998>
   12728:	bl	10c18 <perror@plt>
   1272c:	mov	r0, #1
   12730:	bl	10cd8 <exit@plt>
   12734:	ldr	r3, [pc, #64]	; 1277c <pclose@plt+0x199c>
   12738:	mov	r2, #5
   1273c:	ldr	r1, [pc, #60]	; 12780 <pclose@plt+0x19a0>
   12740:	mov	r0, #0
   12744:	ldr	r5, [r3]
   12748:	bl	10bdc <dcgettext@plt>
   1274c:	mov	r3, r4
   12750:	mov	r1, #1
   12754:	mov	r2, r0
   12758:	mov	r0, r5
   1275c:	bl	10d44 <__fprintf_chk@plt>
   12760:	mov	r0, #1
   12764:	bl	10cd8 <exit@plt>
   12768:	andeq	r4, r2, r8, lsl #30
   1276c:	andeq	r5, r2, r4, lsr r1
   12770:	muleq	r1, ip, r0
   12774:	muleq	r1, r8, r0
   12778:	andeq	r4, r1, r8, lsl #1
   1277c:	andeq	r5, r2, r8, lsl #2
   12780:	andeq	r4, r1, r4, rrx
   12784:	push	{r4, lr}
   12788:	cmp	r2, #0
   1278c:	ldr	r4, [pc, #148]	; 12828 <pclose@plt+0x1a48>
   12790:	sub	sp, sp, #8
   12794:	mov	r3, r0
   12798:	ldr	r2, [r4]
   1279c:	str	r2, [sp, #4]
   127a0:	beq	127e4 <pclose@plt+0x1a04>
   127a4:	cmp	r1, #0
   127a8:	add	r0, sp, #8
   127ac:	movne	r1, #254	; 0xfe
   127b0:	moveq	r1, #255	; 0xff
   127b4:	mov	r2, #1
   127b8:	strb	r1, [r0, #-6]!
   127bc:	mov	r1, r2
   127c0:	bl	10c30 <fwrite@plt>
   127c4:	cmp	r0, #1
   127c8:	bne	12814 <pclose@plt+0x1a34>
   127cc:	ldr	r2, [sp, #4]
   127d0:	ldr	r3, [r4]
   127d4:	cmp	r2, r3
   127d8:	bne	12824 <pclose@plt+0x1a44>
   127dc:	add	sp, sp, #8
   127e0:	pop	{r4, pc}
   127e4:	ldr	r2, [pc, #64]	; 1282c <pclose@plt+0x1a4c>
   127e8:	ldr	r0, [pc, #64]	; 12830 <pclose@plt+0x1a50>
   127ec:	cmp	r1, #0
   127f0:	add	ip, sp, #8
   127f4:	movne	r1, r2
   127f8:	moveq	r1, r0
   127fc:	strh	r1, [ip, #-6]!
   12800:	mov	r2, #1
   12804:	mov	r0, ip
   12808:	mov	r1, #2
   1280c:	bl	10c30 <fwrite@plt>
   12810:	b	127c4 <pclose@plt+0x19e4>
   12814:	ldr	r0, [pc, #24]	; 12834 <pclose@plt+0x1a54>
   12818:	bl	10c18 <perror@plt>
   1281c:	mov	r0, #1
   12820:	bl	10cd8 <exit@plt>
   12824:	bl	10bf4 <__stack_chk_fail@plt>
   12828:	andeq	r4, r2, r8, lsl #30
   1282c:	strdeq	pc, [r0], -lr
   12830:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   12834:	andeq	r4, r1, r4, lsr #1
   12838:	push	{r4, r5, r6, r7, lr}
   1283c:	adds	ip, r1, #7
   12840:	ldr	r4, [pc, #432]	; 129f8 <pclose@plt+0x1c18>
   12844:	addmi	ip, r1, #14
   12848:	mov	r5, r3
   1284c:	sub	r3, r3, #256	; 0x100
   12850:	sub	sp, sp, #44	; 0x2c
   12854:	bic	r3, r3, #256	; 0x100
   12858:	ldr	r6, [r4]
   1285c:	asr	ip, ip, #3
   12860:	cmp	r3, #0
   12864:	cmpeq	r1, #8
   12868:	mov	lr, r1
   1286c:	mov	r3, r0
   12870:	str	r6, [sp, #36]	; 0x24
   12874:	movne	r1, #1
   12878:	moveq	r1, #0
   1287c:	mul	ip, r2, ip
   12880:	ldr	r0, [sp, #64]	; 0x40
   12884:	ldr	r6, [sp, #68]	; 0x44
   12888:	beq	12960 <pclose@plt+0x1b80>
   1288c:	mov	r1, #2
   12890:	str	r1, [r0]
   12894:	ldr	r0, [pc, #352]	; 129fc <pclose@plt+0x1c1c>
   12898:	and	r6, r6, #1
   1289c:	str	r0, [sp, #4]
   128a0:	mov	r0, #0
   128a4:	mov	r7, #32
   128a8:	strb	r6, [sp, #16]
   128ac:	str	r0, [sp, #8]
   128b0:	asr	r6, r5, #16
   128b4:	strb	r0, [sp, #17]
   128b8:	strb	r0, [sp, #18]
   128bc:	strb	r0, [sp, #19]
   128c0:	asr	r0, ip, #8
   128c4:	mov	r1, r7
   128c8:	strb	r5, [sp, #20]
   128cc:	strb	ip, [sp, #24]
   128d0:	str	r7, [sp, #12]
   128d4:	strb	r6, [sp, #22]
   128d8:	asr	r7, r5, #8
   128dc:	asr	r6, ip, #16
   128e0:	lsr	r5, r5, #24
   128e4:	lsr	ip, ip, #24
   128e8:	strb	r0, [sp, #25]
   128ec:	asr	r0, lr, #16
   128f0:	strb	lr, [sp, #32]
   128f4:	strb	r2, [sp, #28]
   128f8:	strb	r7, [sp, #21]
   128fc:	strb	r5, [sp, #23]
   12900:	asr	r7, lr, #8
   12904:	asr	r5, r2, #16
   12908:	lsr	lr, lr, #24
   1290c:	strb	r6, [sp, #26]
   12910:	strb	ip, [sp, #27]
   12914:	asr	r6, r2, #8
   12918:	lsr	ip, r2, #24
   1291c:	strb	r0, [sp, #34]	; 0x22
   12920:	mov	r2, #1
   12924:	add	r0, sp, #4
   12928:	strb	r7, [sp, #33]	; 0x21
   1292c:	strb	lr, [sp, #35]	; 0x23
   12930:	strb	r6, [sp, #29]
   12934:	strb	r5, [sp, #30]
   12938:	strb	ip, [sp, #31]
   1293c:	bl	10c30 <fwrite@plt>
   12940:	cmp	r0, #1
   12944:	bne	129c4 <pclose@plt+0x1be4>
   12948:	ldr	r2, [sp, #36]	; 0x24
   1294c:	ldr	r3, [r4]
   12950:	cmp	r2, r3
   12954:	bne	129f4 <pclose@plt+0x1c14>
   12958:	add	sp, sp, #44	; 0x2c
   1295c:	pop	{r4, r5, r6, r7, pc}
   12960:	ldr	r0, [r0]
   12964:	cmp	r0, #2
   12968:	beq	12894 <pclose@plt+0x1ab4>
   1296c:	ldr	r2, [pc, #140]	; 12a00 <pclose@plt+0x1c20>
   12970:	cmp	r5, #512	; 0x200
   12974:	strh	r2, [sp, #4]
   12978:	moveq	r2, #1
   1297c:	strbne	r1, [sp, #6]
   12980:	strbeq	r2, [sp, #6]
   12984:	tst	r6, #2
   12988:	beq	129b0 <pclose@plt+0x1bd0>
   1298c:	ldrb	r2, [sp, #6]
   12990:	orr	r2, r2, #4
   12994:	strb	r2, [sp, #6]
   12998:	mov	r1, #4
   1299c:	mov	r2, #1
   129a0:	add	r0, sp, r1
   129a4:	strb	ip, [sp, #7]
   129a8:	bl	10c30 <fwrite@plt>
   129ac:	b	12940 <pclose@plt+0x1b60>
   129b0:	tst	r6, #1
   129b4:	ldrbne	r2, [sp, #6]
   129b8:	orrne	r2, r2, #2
   129bc:	strbne	r2, [sp, #6]
   129c0:	b	12998 <pclose@plt+0x1bb8>
   129c4:	ldr	r3, [pc, #56]	; 12a04 <pclose@plt+0x1c24>
   129c8:	mov	r2, #5
   129cc:	ldr	r1, [pc, #52]	; 12a08 <pclose@plt+0x1c28>
   129d0:	mov	r0, #0
   129d4:	ldr	r4, [r3]
   129d8:	bl	10bdc <dcgettext@plt>
   129dc:	mov	r1, #1
   129e0:	mov	r2, r0
   129e4:	mov	r0, r4
   129e8:	bl	10d44 <__fprintf_chk@plt>
   129ec:	mov	r0, #74	; 0x4a
   129f0:	bl	10cd8 <exit@plt>
   129f4:	bl	10bf4 <__stack_chk_fail@plt>
   129f8:	andeq	r4, r2, r8, lsl #30
   129fc:			; <UNDEFINED> instruction: 0x864ab572
   12a00:	andeq	r0, r0, r6, lsr r4
   12a04:	andeq	r5, r2, r8, lsl #2
   12a08:	strheq	r4, [r1], -r4	; <UNPREDICTABLE>
   12a0c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12a10:	adds	ip, r2, #7
   12a14:	sub	sp, sp, #12
   12a18:	addmi	ip, r2, #14
   12a1c:	ldr	r8, [sp, #48]	; 0x30
   12a20:	asr	ip, ip, #3
   12a24:	cmp	r8, #0
   12a28:	mov	lr, r2
   12a2c:	mov	r9, r1
   12a30:	mul	r7, r3, ip
   12a34:	mov	r6, r0
   12a38:	ldr	r4, [sp, #40]	; 0x28
   12a3c:	beq	12b88 <pclose@plt+0x1da8>
   12a40:	cmp	r4, #0
   12a44:	ble	12a90 <pclose@plt+0x1cb0>
   12a48:	mov	r2, r8
   12a4c:	mov	ip, #0
   12a50:	ldr	r1, [r2]
   12a54:	cmp	r1, #0
   12a58:	beq	12a80 <pclose@plt+0x1ca0>
   12a5c:	ldr	r0, [r1, #8]
   12a60:	cmp	r0, #0
   12a64:	beq	12a74 <pclose@plt+0x1c94>
   12a68:	ldr	r0, [r0]
   12a6c:	cmp	r0, #0
   12a70:	bne	12a98 <pclose@plt+0x1cb8>
   12a74:	ldr	r1, [r1]
   12a78:	cmp	r1, #0
   12a7c:	bne	12a5c <pclose@plt+0x1c7c>
   12a80:	add	ip, ip, #1
   12a84:	cmp	ip, r4
   12a88:	add	r2, r2, #12
   12a8c:	bne	12a50 <pclose@plt+0x1c70>
   12a90:	mov	r2, #1
   12a94:	b	12a9c <pclose@plt+0x1cbc>
   12a98:	mov	r2, #3
   12a9c:	add	r0, sp, #44	; 0x2c
   12aa0:	mov	r1, lr
   12aa4:	str	r2, [sp, #4]
   12aa8:	str	r0, [sp]
   12aac:	mov	r2, r3
   12ab0:	mov	r0, r6
   12ab4:	mov	r3, r4
   12ab8:	bl	12838 <pclose@plt+0x1a58>
   12abc:	mov	r1, r7
   12ac0:	mov	r0, r9
   12ac4:	mov	r3, r6
   12ac8:	mov	r2, r4
   12acc:	ldr	r5, [sp, #44]	; 0x2c
   12ad0:	bl	10c30 <fwrite@plt>
   12ad4:	sub	r5, r5, #2
   12ad8:	clz	r5, r5
   12adc:	lsr	r5, r5, #5
   12ae0:	cmp	r0, r4
   12ae4:	bne	12bd0 <pclose@plt+0x1df0>
   12ae8:	sub	r3, r8, #1
   12aec:	cmn	r3, #3
   12af0:	bhi	12b7c <pclose@plt+0x1d9c>
   12af4:	cmp	r4, #0
   12af8:	beq	12b7c <pclose@plt+0x1d9c>
   12afc:	add	r4, r4, r4, lsl #1
   12b00:	add	r9, r8, r4, lsl #2
   12b04:	ldr	r7, [r8]
   12b08:	cmp	r7, #0
   12b0c:	beq	12b60 <pclose@plt+0x1d80>
   12b10:	ldr	r4, [r7, #8]
   12b14:	cmp	r4, #0
   12b18:	beq	12b54 <pclose@plt+0x1d74>
   12b1c:	ldr	r3, [r4]
   12b20:	cmp	r3, #0
   12b24:	beq	12b38 <pclose@plt+0x1d58>
   12b28:	mov	r2, r5
   12b2c:	mov	r1, #1
   12b30:	mov	r0, r6
   12b34:	bl	12784 <pclose@plt+0x19a4>
   12b38:	ldr	r1, [r4, #8]
   12b3c:	mov	r2, r5
   12b40:	mov	r0, r6
   12b44:	bl	125a8 <pclose@plt+0x17c8>
   12b48:	ldr	r4, [r4]
   12b4c:	cmp	r4, #0
   12b50:	bne	12b38 <pclose@plt+0x1d58>
   12b54:	ldr	r7, [r7]
   12b58:	cmp	r7, #0
   12b5c:	bne	12b10 <pclose@plt+0x1d30>
   12b60:	add	r8, r8, #12
   12b64:	mov	r2, r5
   12b68:	mov	r1, #0
   12b6c:	mov	r0, r6
   12b70:	bl	12784 <pclose@plt+0x19a4>
   12b74:	cmp	r8, r9
   12b78:	bne	12b04 <pclose@plt+0x1d24>
   12b7c:	mov	r0, r5
   12b80:	add	sp, sp, #12
   12b84:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12b88:	add	ip, sp, #44	; 0x2c
   12b8c:	mov	r2, r3
   12b90:	mov	r1, lr
   12b94:	str	ip, [sp]
   12b98:	mov	r3, r4
   12b9c:	str	r8, [sp, #4]
   12ba0:	bl	12838 <pclose@plt+0x1a58>
   12ba4:	mov	r3, r6
   12ba8:	mov	r1, r7
   12bac:	mov	r0, r9
   12bb0:	mov	r2, r4
   12bb4:	ldr	r5, [sp, #44]	; 0x2c
   12bb8:	bl	10c30 <fwrite@plt>
   12bbc:	sub	r5, r5, #2
   12bc0:	clz	r5, r5
   12bc4:	lsr	r5, r5, #5
   12bc8:	cmp	r4, r0
   12bcc:	beq	12b7c <pclose@plt+0x1d9c>
   12bd0:	ldr	r3, [pc, #40]	; 12c00 <pclose@plt+0x1e20>
   12bd4:	mov	r2, #5
   12bd8:	ldr	r1, [pc, #36]	; 12c04 <pclose@plt+0x1e24>
   12bdc:	mov	r0, #0
   12be0:	ldr	r4, [r3]
   12be4:	bl	10bdc <dcgettext@plt>
   12be8:	mov	r1, #1
   12bec:	mov	r2, r0
   12bf0:	mov	r0, r4
   12bf4:	bl	10d44 <__fprintf_chk@plt>
   12bf8:	mov	r0, #74	; 0x4a
   12bfc:	bl	10cd8 <exit@plt>
   12c00:	andeq	r5, r2, r8, lsl #2
   12c04:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12c08:	push	{r4, r5, r6, lr}
   12c0c:	ldr	r5, [r0]
   12c10:	add	r6, r5, #1
   12c14:	ldrb	ip, [r5]
   12c18:	tst	ip, #128	; 0x80
   12c1c:	beq	12cb8 <pclose@plt+0x1ed8>
   12c20:	mov	r3, #128	; 0x80
   12c24:	mov	lr, #0
   12c28:	b	12c30 <pclose@plt+0x1e50>
   12c2c:	mov	lr, r4
   12c30:	asr	r3, r3, #1
   12c34:	tst	r3, ip
   12c38:	add	r4, lr, #1
   12c3c:	bne	12c2c <pclose@plt+0x1e4c>
   12c40:	cmp	r1, #0
   12c44:	cmpne	r1, r4
   12c48:	blt	12cc4 <pclose@plt+0x1ee4>
   12c4c:	cmp	r4, #1
   12c50:	beq	12cd8 <pclose@plt+0x1ef8>
   12c54:	sub	r3, r3, #1
   12c58:	cmp	lr, #0
   12c5c:	and	r3, r3, ip
   12c60:	beq	12ca4 <pclose@plt+0x1ec4>
   12c64:	ldrb	r1, [r5, #1]
   12c68:	add	r5, r5, #2
   12c6c:	and	ip, r1, #192	; 0xc0
   12c70:	cmp	ip, #128	; 0x80
   12c74:	bne	12cd8 <pclose@plt+0x1ef8>
   12c78:	sub	lr, lr, #1
   12c7c:	add	r6, r5, lr
   12c80:	b	12c94 <pclose@plt+0x1eb4>
   12c84:	ldrb	r1, [r5], #1
   12c88:	and	ip, r1, #192	; 0xc0
   12c8c:	cmp	ip, #128	; 0x80
   12c90:	bne	12cd8 <pclose@plt+0x1ef8>
   12c94:	and	r1, r1, #63	; 0x3f
   12c98:	cmp	r6, r5
   12c9c:	orr	r3, r1, r3, lsl #6
   12ca0:	bne	12c84 <pclose@plt+0x1ea4>
   12ca4:	mov	r1, #0
   12ca8:	str	r6, [r0]
   12cac:	str	r1, [r2]
   12cb0:	mov	r0, r3
   12cb4:	pop	{r4, r5, r6, pc}
   12cb8:	cmp	r1, #0
   12cbc:	movge	r3, ip
   12cc0:	bge	12ca4 <pclose@plt+0x1ec4>
   12cc4:	mvn	r3, #1
   12cc8:	str	r3, [r2]
   12ccc:	mov	r3, #0
   12cd0:	mov	r0, r3
   12cd4:	pop	{r4, r5, r6, pc}
   12cd8:	mvn	r3, #0
   12cdc:	str	r3, [r2]
   12ce0:	mov	r3, #0
   12ce4:	mov	r0, r3
   12ce8:	pop	{r4, r5, r6, pc}
   12cec:	push	{r4, lr}
   12cf0:	mov	r2, r1
   12cf4:	ldr	r1, [pc, #24]	; 12d14 <pclose@plt+0x1f34>
   12cf8:	bl	10c3c <ioctl@plt>
   12cfc:	cmp	r0, #0
   12d00:	popeq	{r4, pc}
   12d04:	ldr	r0, [pc, #12]	; 12d18 <pclose@plt+0x1f38>
   12d08:	bl	10c18 <perror@plt>
   12d0c:	mvn	r0, #0
   12d10:	pop	{r4, pc}
   12d14:	andeq	r4, r0, r0, asr #22
   12d18:	andeq	r4, r1, ip, ror #1
   12d1c:	push	{r4, lr}
   12d20:	mov	r2, r1
   12d24:	ldr	r1, [pc, #24]	; 12d44 <pclose@plt+0x1f64>
   12d28:	bl	10c3c <ioctl@plt>
   12d2c:	cmp	r0, #0
   12d30:	popeq	{r4, pc}
   12d34:	ldr	r0, [pc, #12]	; 12d48 <pclose@plt+0x1f68>
   12d38:	bl	10c18 <perror@plt>
   12d3c:	mvn	r0, #0
   12d40:	pop	{r4, pc}
   12d44:	andeq	r4, r0, r1, asr #22
   12d48:	strdeq	r4, [r1], -r8
   12d4c:	push	{r4, lr}
   12d50:	mov	r2, r1
   12d54:	ldr	r1, [pc, #24]	; 12d74 <pclose@plt+0x1f94>
   12d58:	bl	10c3c <ioctl@plt>
   12d5c:	cmp	r0, #0
   12d60:	popeq	{r4, pc}
   12d64:	ldr	r0, [pc, #12]	; 12d78 <pclose@plt+0x1f98>
   12d68:	bl	10c18 <perror@plt>
   12d6c:	mvn	r0, #0
   12d70:	pop	{r4, pc}
   12d74:	andeq	r4, r0, r9, ror #22
   12d78:	andeq	r4, r1, r4, lsl #2
   12d7c:	push	{r4, lr}
   12d80:	mov	r2, r1
   12d84:	ldr	r1, [pc, #24]	; 12da4 <pclose@plt+0x1fc4>
   12d88:	bl	10c3c <ioctl@plt>
   12d8c:	cmp	r0, #0
   12d90:	popeq	{r4, pc}
   12d94:	ldr	r0, [pc, #12]	; 12da8 <pclose@plt+0x1fc8>
   12d98:	bl	10c18 <perror@plt>
   12d9c:	mvn	r0, #0
   12da0:	pop	{r4, pc}
   12da4:	andeq	r4, r0, sl, ror #22
   12da8:	andeq	r4, r1, r4, lsl r1
   12dac:	push	{r4, r5, r6, r7, r8, lr}
   12db0:	sub	sp, sp, #24
   12db4:	ldr	r5, [pc, #308]	; 12ef0 <pclose@plt+0x2110>
   12db8:	add	r4, sp, #12
   12dbc:	mov	r3, #0
   12dc0:	ldr	ip, [r5]
   12dc4:	mov	r6, r1
   12dc8:	mov	r2, r4
   12dcc:	ldr	r1, [pc, #288]	; 12ef4 <pclose@plt+0x2114>
   12dd0:	str	ip, [sp, #20]
   12dd4:	strh	r3, [sp, #12]
   12dd8:	str	r3, [sp, #16]
   12ddc:	mov	r8, r0
   12de0:	bl	10c3c <ioctl@plt>
   12de4:	cmp	r0, #0
   12de8:	beq	12e70 <pclose@plt+0x2090>
   12dec:	bl	10d14 <__errno_location@plt>
   12df0:	ldr	r3, [r0]
   12df4:	cmp	r3, #12
   12df8:	bne	12e98 <pclose@plt+0x20b8>
   12dfc:	ldrh	r7, [sp, #12]
   12e00:	cmp	r7, #0
   12e04:	beq	12e98 <pclose@plt+0x20b8>
   12e08:	lsl	r0, r7, #2
   12e0c:	bl	10c78 <malloc@plt>
   12e10:	cmp	r0, #0
   12e14:	str	r0, [sp, #16]
   12e18:	beq	12eb8 <pclose@plt+0x20d8>
   12e1c:	mov	r0, r8
   12e20:	mov	r2, r4
   12e24:	ldr	r1, [pc, #200]	; 12ef4 <pclose@plt+0x2114>
   12e28:	bl	10c3c <ioctl@plt>
   12e2c:	cmp	r0, #0
   12e30:	bne	12ea8 <pclose@plt+0x20c8>
   12e34:	ldrh	r3, [sp, #12]
   12e38:	cmp	r3, r7
   12e3c:	beq	12e70 <pclose@plt+0x2090>
   12e40:	ldr	r3, [pc, #176]	; 12ef8 <pclose@plt+0x2118>
   12e44:	mov	r2, #5
   12e48:	ldr	r1, [pc, #172]	; 12efc <pclose@plt+0x211c>
   12e4c:	ldr	r8, [r3]
   12e50:	bl	10bdc <dcgettext@plt>
   12e54:	ldrh	r2, [sp, #12]
   12e58:	mov	r3, r7
   12e5c:	mov	r1, #1
   12e60:	str	r2, [sp]
   12e64:	mov	r2, r0
   12e68:	mov	r0, r8
   12e6c:	bl	10d44 <__fprintf_chk@plt>
   12e70:	ldm	r4, {r0, r1}
   12e74:	mov	ip, #0
   12e78:	stm	r6, {r0, r1}
   12e7c:	ldr	r2, [sp, #20]
   12e80:	ldr	r3, [r5]
   12e84:	mov	r0, ip
   12e88:	cmp	r2, r3
   12e8c:	bne	12eec <pclose@plt+0x210c>
   12e90:	add	sp, sp, #24
   12e94:	pop	{r4, r5, r6, r7, r8, pc}
   12e98:	ldr	r0, [pc, #96]	; 12f00 <pclose@plt+0x2120>
   12e9c:	bl	10c18 <perror@plt>
   12ea0:	mvn	ip, #0
   12ea4:	b	12e7c <pclose@plt+0x209c>
   12ea8:	ldr	r0, [pc, #84]	; 12f04 <pclose@plt+0x2124>
   12eac:	bl	10c18 <perror@plt>
   12eb0:	mvn	ip, #0
   12eb4:	b	12e7c <pclose@plt+0x209c>
   12eb8:	ldr	r3, [pc, #56]	; 12ef8 <pclose@plt+0x2118>
   12ebc:	mov	r2, #5
   12ec0:	ldr	r1, [pc, #64]	; 12f08 <pclose@plt+0x2128>
   12ec4:	ldr	r4, [r3]
   12ec8:	bl	10bdc <dcgettext@plt>
   12ecc:	ldr	r3, [pc, #56]	; 12f0c <pclose@plt+0x212c>
   12ed0:	mov	r1, #1
   12ed4:	ldr	r3, [r3]
   12ed8:	mov	r2, r0
   12edc:	mov	r0, r4
   12ee0:	bl	10d44 <__fprintf_chk@plt>
   12ee4:	mvn	ip, #0
   12ee8:	b	12e7c <pclose@plt+0x209c>
   12eec:	bl	10bf4 <__stack_chk_fail@plt>
   12ef0:	andeq	r4, r2, r8, lsl #30
   12ef4:	andeq	r4, r0, r6, ror #22
   12ef8:	andeq	r5, r2, r8, lsl #2
   12efc:	andeq	r4, r1, r0, asr #2
   12f00:	andeq	r4, r1, r4, lsr #2
   12f04:	andeq	r4, r1, r4, lsr r1
   12f08:	andeq	r3, r1, r8, lsr #29
   12f0c:	andeq	r5, r2, r8, lsr r1
   12f10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f14:	sub	sp, sp, #16
   12f18:	ldr	r9, [pc, #220]	; 12ffc <pclose@plt+0x221c>
   12f1c:	cmp	r1, #0
   12f20:	mov	r4, r0
   12f24:	ldr	r3, [r9]
   12f28:	mov	r5, r2
   12f2c:	str	r3, [sp, #12]
   12f30:	beq	12fe8 <pclose@plt+0x2208>
   12f34:	ldrh	r3, [r1, #4]
   12f38:	ldr	r0, [r1]
   12f3c:	add	r6, sp, #4
   12f40:	str	r0, [sp, #4]
   12f44:	strh	r3, [r6, #4]
   12f48:	ldr	r7, [pc, #176]	; 13000 <pclose@plt+0x2220>
   12f4c:	ldr	r8, [pc, #176]	; 13004 <pclose@plt+0x2224>
   12f50:	b	12f98 <pclose@plt+0x21b8>
   12f54:	cmp	r5, #0
   12f58:	beq	12fbc <pclose@plt+0x21dc>
   12f5c:	mov	r2, r5
   12f60:	mov	r1, r8
   12f64:	mov	r0, r4
   12f68:	bl	10c3c <ioctl@plt>
   12f6c:	cmp	r0, #0
   12f70:	beq	12fbc <pclose@plt+0x21dc>
   12f74:	bl	10d14 <__errno_location@plt>
   12f78:	ldr	r3, [r0]
   12f7c:	cmp	r3, #12
   12f80:	bne	12fd8 <pclose@plt+0x21f8>
   12f84:	ldrh	r3, [sp, #8]
   12f88:	cmp	r3, #99	; 0x63
   12f8c:	bhi	12fd8 <pclose@plt+0x21f8>
   12f90:	add	r3, r3, #1
   12f94:	strh	r3, [sp, #8]
   12f98:	mov	r2, r6
   12f9c:	mov	r1, r7
   12fa0:	mov	r0, r4
   12fa4:	bl	10c3c <ioctl@plt>
   12fa8:	subs	sl, r0, #0
   12fac:	beq	12f54 <pclose@plt+0x2174>
   12fb0:	ldr	r0, [pc, #80]	; 13008 <pclose@plt+0x2228>
   12fb4:	bl	10c18 <perror@plt>
   12fb8:	mvn	sl, #0
   12fbc:	ldr	r2, [sp, #12]
   12fc0:	ldr	r3, [r9]
   12fc4:	mov	r0, sl
   12fc8:	cmp	r2, r3
   12fcc:	bne	12ff8 <pclose@plt+0x2218>
   12fd0:	add	sp, sp, #16
   12fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12fd8:	ldr	r0, [pc, #44]	; 1300c <pclose@plt+0x222c>
   12fdc:	bl	10c18 <perror@plt>
   12fe0:	mvn	sl, #0
   12fe4:	b	12fbc <pclose@plt+0x21dc>
   12fe8:	str	r1, [sp, #4]
   12fec:	strh	r1, [sp, #8]
   12ff0:	add	r6, sp, #4
   12ff4:	b	12f48 <pclose@plt+0x2168>
   12ff8:	bl	10bf4 <__stack_chk_fail@plt>
   12ffc:	andeq	r4, r2, r8, lsl #30
   13000:	andeq	r4, r0, r8, ror #22
   13004:	andeq	r4, r0, r7, ror #22
   13008:	andeq	r4, r1, r8, ror #2
   1300c:	andeq	r4, r1, r8, ror r1
   13010:	push	{r4, r5, r6, r7, r8, lr}
   13014:	sub	sp, sp, #8
   13018:	add	r6, r1, #8
   1301c:	mov	r5, r1
   13020:	mov	r8, r0
   13024:	bl	10cf0 <strlen@plt>
   13028:	mov	r4, r0
   1302c:	mov	r0, r6
   13030:	bl	10cf0 <strlen@plt>
   13034:	add	r0, r4, r0
   13038:	add	r0, r0, #2
   1303c:	bl	10c78 <malloc@plt>
   13040:	subs	r7, r0, #0
   13044:	beq	130a0 <pclose@plt+0x22c0>
   13048:	ldr	r3, [pc, #88]	; 130a8 <pclose@plt+0x22c8>
   1304c:	mvn	r2, #0
   13050:	add	r3, pc, r3
   13054:	mov	r1, #1
   13058:	str	r6, [sp, #4]
   1305c:	str	r8, [sp]
   13060:	bl	10d20 <__sprintf_chk@plt>
   13064:	ldr	r1, [pc, #64]	; 130ac <pclose@plt+0x22cc>
   13068:	mov	r0, r7
   1306c:	add	r1, pc, r1
   13070:	bl	10d74 <popen@plt>
   13074:	mov	r3, #1
   13078:	str	r3, [r5, #4]
   1307c:	mov	r4, r0
   13080:	str	r0, [r5]
   13084:	mov	r0, r7
   13088:	bl	10bac <free@plt>
   1308c:	clz	r0, r4
   13090:	lsr	r0, r0, #5
   13094:	rsb	r0, r0, #0
   13098:	add	sp, sp, #8
   1309c:	pop	{r4, r5, r6, r7, r8, pc}
   130a0:	mvn	r0, #0
   130a4:	b	13098 <pclose@plt+0x22b8>
   130a8:	andeq	r1, r0, ip, lsr #2
   130ac:	andeq	r1, r0, ip, asr r0
   130b0:	ldr	r3, [pc, #268]	; 131c4 <pclose@plt+0x23e4>
   130b4:	ldr	r2, [pc, #268]	; 131c8 <pclose@plt+0x23e8>
   130b8:	add	r3, pc, r3
   130bc:	push	{r4, r5, r6, r7, r8, r9, lr}
   130c0:	add	r7, r0, #8
   130c4:	ldr	r9, [r3, r2]
   130c8:	sub	sp, sp, #100	; 0x64
   130cc:	mov	r8, r0
   130d0:	ldr	ip, [r9]
   130d4:	mov	r1, r7
   130d8:	mov	r2, sp
   130dc:	mov	r0, #3
   130e0:	str	ip, [sp, #92]	; 0x5c
   130e4:	bl	10c24 <__xstat@plt>
   130e8:	cmn	r0, #1
   130ec:	beq	131b8 <pclose@plt+0x23d8>
   130f0:	ldr	r3, [sp, #16]
   130f4:	and	r3, r3, #61440	; 0xf000
   130f8:	cmp	r3, #32768	; 0x8000
   130fc:	bne	131b8 <pclose@plt+0x23d8>
   13100:	mov	r1, #4
   13104:	mov	r0, r7
   13108:	bl	10d50 <access@plt>
   1310c:	cmn	r0, #1
   13110:	beq	131b8 <pclose@plt+0x23d8>
   13114:	mov	r1, #46	; 0x2e
   13118:	mov	r0, r7
   1311c:	bl	10d8c <strrchr@plt>
   13120:	subs	r6, r0, #0
   13124:	beq	13178 <pclose@plt+0x2398>
   13128:	ldr	r4, [pc, #156]	; 131cc <pclose@plt+0x23ec>
   1312c:	add	r4, pc, r4
   13130:	ldr	r5, [r4, #4]
   13134:	cmp	r5, #0
   13138:	beq	13178 <pclose@plt+0x2398>
   1313c:	add	r4, r4, #8
   13140:	b	13154 <pclose@plt+0x2374>
   13144:	add	r4, r4, #8
   13148:	ldr	r5, [r4, #-4]
   1314c:	cmp	r5, #0
   13150:	beq	13178 <pclose@plt+0x2398>
   13154:	ldr	r1, [r4, #-8]
   13158:	mov	r0, r6
   1315c:	bl	10b88 <strcmp@plt>
   13160:	cmp	r0, #0
   13164:	bne	13144 <pclose@plt+0x2364>
   13168:	mov	r1, r8
   1316c:	mov	r0, r5
   13170:	bl	13010 <pclose@plt+0x2230>
   13174:	b	131a0 <pclose@plt+0x23c0>
   13178:	ldr	r1, [pc, #80]	; 131d0 <pclose@plt+0x23f0>
   1317c:	mov	r0, r7
   13180:	add	r1, pc, r1
   13184:	bl	10ba0 <fopen@plt>
   13188:	clz	r3, r0
   1318c:	lsr	r3, r3, #5
   13190:	mov	r2, r0
   13194:	rsb	r0, r3, #0
   13198:	mov	r3, #0
   1319c:	strd	r2, [r8]
   131a0:	ldr	r2, [sp, #92]	; 0x5c
   131a4:	ldr	r3, [r9]
   131a8:	cmp	r2, r3
   131ac:	bne	131c0 <pclose@plt+0x23e0>
   131b0:	add	sp, sp, #100	; 0x64
   131b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   131b8:	mvn	r0, #0
   131bc:	b	131a0 <pclose@plt+0x23c0>
   131c0:	bl	10bf4 <__stack_chk_fail@plt>
   131c4:	andeq	r1, r1, r0, asr #30
   131c8:	ldrdeq	r0, [r0], -r8
   131cc:			; <UNDEFINED> instruction: 0x00011fb4
   131d0:	andeq	r0, r0, r8, asr #30
   131d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131d8:	sub	sp, sp, #156	; 0x9c
   131dc:	ldr	ip, [pc, #1132]	; 13650 <pclose@plt+0x2870>
   131e0:	ldr	lr, [pc, #1132]	; 13654 <pclose@plt+0x2874>
   131e4:	ldr	r5, [sp, #192]	; 0xc0
   131e8:	add	ip, pc, ip
   131ec:	str	r1, [sp, #20]
   131f0:	str	r5, [sp, #36]	; 0x24
   131f4:	mov	r6, r1
   131f8:	mov	r1, ip
   131fc:	ldr	ip, [ip, lr]
   13200:	mov	r4, r0
   13204:	mov	lr, ip
   13208:	str	ip, [sp, #40]	; 0x28
   1320c:	ldr	lr, [lr]
   13210:	mov	ip, #0
   13214:	str	r0, [sp, #28]
   13218:	str	ip, [r5, #4]
   1321c:	str	ip, [r5]
   13220:	mov	r0, r6
   13224:	mov	fp, r2
   13228:	str	r3, [sp, #48]	; 0x30
   1322c:	str	lr, [sp, #148]	; 0x94
   13230:	bl	10c6c <opendir@plt>
   13234:	subs	r7, r0, #0
   13238:	beq	1362c <pclose@plt+0x284c>
   1323c:	mov	r0, r6
   13240:	bl	10cf0 <strlen@plt>
   13244:	mov	r1, #47	; 0x2f
   13248:	str	r0, [sp, #12]
   1324c:	mov	r0, r4
   13250:	bl	10cfc <strchr@plt>
   13254:	subs	r9, r0, #0
   13258:	beq	1358c <pclose@plt+0x27ac>
   1325c:	sub	r1, r9, r4
   13260:	mov	r0, r4
   13264:	bl	10bd0 <strndup@plt>
   13268:	subs	r3, r0, #0
   1326c:	str	r3, [sp, #16]
   13270:	beq	13638 <pclose@plt+0x2858>
   13274:	ldr	r3, [pc, #988]	; 13658 <pclose@plt+0x2878>
   13278:	mov	r5, #0
   1327c:	add	r3, pc, r3
   13280:	str	r3, [sp, #44]	; 0x2c
   13284:	ldr	r3, [pc, #976]	; 1365c <pclose@plt+0x287c>
   13288:	add	r3, pc, r3
   1328c:	str	r3, [sp, #52]	; 0x34
   13290:	mvn	r3, #0
   13294:	str	r3, [sp, #32]
   13298:	mov	r0, r7
   1329c:	bl	10d80 <readdir@plt>
   132a0:	subs	r6, r0, #0
   132a4:	beq	134a4 <pclose@plt+0x26c4>
   132a8:	add	r4, r6, #11
   132ac:	mov	r0, r4
   132b0:	bl	10cf0 <strlen@plt>
   132b4:	cmp	r0, #2
   132b8:	mov	r8, r0
   132bc:	bhi	132f0 <pclose@plt+0x2510>
   132c0:	ldr	r1, [pc, #920]	; 13660 <pclose@plt+0x2880>
   132c4:	mov	r0, r4
   132c8:	add	r1, pc, r1
   132cc:	bl	10b88 <strcmp@plt>
   132d0:	cmp	r0, #0
   132d4:	beq	13298 <pclose@plt+0x24b8>
   132d8:	ldr	r1, [pc, #900]	; 13664 <pclose@plt+0x2884>
   132dc:	mov	r0, r4
   132e0:	add	r1, pc, r1
   132e4:	bl	10b88 <strcmp@plt>
   132e8:	cmp	r0, #0
   132ec:	beq	13298 <pclose@plt+0x24b8>
   132f0:	ldr	r3, [sp, #12]
   132f4:	add	sl, r3, #2
   132f8:	add	sl, sl, r8
   132fc:	cmp	sl, #4096	; 0x1000
   13300:	bhi	13298 <pclose@plt+0x24b8>
   13304:	adds	r8, fp, #0
   13308:	movne	r8, #1
   1330c:	cmp	r9, #0
   13310:	beq	1352c <pclose@plt+0x274c>
   13314:	ldr	r1, [sp, #16]
   13318:	mov	r0, r4
   1331c:	bl	10b88 <strcmp@plt>
   13320:	cmp	r0, #0
   13324:	bne	134d0 <pclose@plt+0x26f0>
   13328:	mov	r3, #1
   1332c:	str	r3, [sp, #24]
   13330:	mov	r0, sl
   13334:	bl	10c78 <malloc@plt>
   13338:	subs	sl, r0, #0
   1333c:	beq	134f0 <pclose@plt+0x2710>
   13340:	ldr	r3, [sp, #20]
   13344:	mvn	r2, #0
   13348:	str	r3, [sp]
   1334c:	ldr	r3, [pc, #788]	; 13668 <pclose@plt+0x2888>
   13350:	mov	r1, #1
   13354:	add	r3, pc, r3
   13358:	str	r4, [sp, #4]
   1335c:	bl	10d20 <__sprintf_chk@plt>
   13360:	add	r2, sp, #56	; 0x38
   13364:	mov	r1, sl
   13368:	mov	r0, #3
   1336c:	bl	10c24 <__xstat@plt>
   13370:	cmp	r0, #0
   13374:	bne	13388 <pclose@plt+0x25a8>
   13378:	ldr	r3, [sp, #72]	; 0x48
   1337c:	and	r3, r3, #61440	; 0xf000
   13380:	cmp	r3, #16384	; 0x4000
   13384:	beq	13540 <pclose@plt+0x2760>
   13388:	mov	r0, sl
   1338c:	bl	10bac <free@plt>
   13390:	and	r3, r5, #1
   13394:	cmp	r9, #0
   13398:	movne	r3, #1
   1339c:	cmp	r3, #0
   133a0:	bne	13298 <pclose@plt+0x24b8>
   133a4:	ldrb	r3, [r6, #11]
   133a8:	ldr	r1, [sp, #28]
   133ac:	mov	r6, r4
   133b0:	cmp	r3, #0
   133b4:	ldrb	r2, [r1]
   133b8:	bne	133d0 <pclose@plt+0x25f0>
   133bc:	b	133d8 <pclose@plt+0x25f8>
   133c0:	ldrb	r3, [r6, #1]!
   133c4:	ldrb	r2, [r1, #1]!
   133c8:	cmp	r3, #0
   133cc:	beq	133d8 <pclose@plt+0x25f8>
   133d0:	cmp	r3, r2
   133d4:	beq	133c0 <pclose@plt+0x25e0>
   133d8:	cmp	r2, #0
   133dc:	bne	13298 <pclose@plt+0x24b8>
   133e0:	ldr	r3, [sp, #36]	; 0x24
   133e4:	ldr	r2, [sp, #20]
   133e8:	add	r3, r3, #8
   133ec:	str	r4, [sp, #4]
   133f0:	str	r2, [sp]
   133f4:	mov	r4, r3
   133f8:	mov	r0, r3
   133fc:	mvn	r2, #0
   13400:	ldr	r3, [sp, #44]	; 0x2c
   13404:	mov	r1, #1
   13408:	bl	10d20 <__sprintf_chk@plt>
   1340c:	mov	r1, r4
   13410:	add	r2, sp, #56	; 0x38
   13414:	mov	r0, #3
   13418:	bl	10c24 <__xstat@plt>
   1341c:	cmp	r0, #0
   13420:	bne	13298 <pclose@plt+0x24b8>
   13424:	ldr	r3, [sp, #72]	; 0x48
   13428:	and	r3, r3, #61440	; 0xf000
   1342c:	cmp	r3, #32768	; 0x8000
   13430:	bne	13298 <pclose@plt+0x24b8>
   13434:	ldr	r5, [sp, #48]	; 0x30
   13438:	ldr	r4, [r5]
   1343c:	cmp	r4, #0
   13440:	beq	1349c <pclose@plt+0x26bc>
   13444:	ldr	r3, [pc, #544]	; 1366c <pclose@plt+0x288c>
   13448:	str	r9, [sp, #24]
   1344c:	add	r3, pc, r3
   13450:	ldr	r8, [r3, #4]
   13454:	mov	r1, r4
   13458:	mov	r0, r6
   1345c:	bl	10b88 <strcmp@plt>
   13460:	cmp	r0, #0
   13464:	beq	1361c <pclose@plt+0x283c>
   13468:	mov	r0, r4
   1346c:	bl	10cf0 <strlen@plt>
   13470:	mov	r1, r4
   13474:	mov	r2, r0
   13478:	mov	r9, r0
   1347c:	mov	r0, r6
   13480:	bl	10db0 <strncmp@plt>
   13484:	cmp	r0, #0
   13488:	beq	13594 <pclose@plt+0x27b4>
   1348c:	ldr	r4, [r5, #4]!
   13490:	cmp	r4, #0
   13494:	bne	13454 <pclose@plt+0x2674>
   13498:	ldr	r9, [sp, #24]
   1349c:	mov	r5, #0
   134a0:	b	13298 <pclose@plt+0x24b8>
   134a4:	eor	r5, r5, #1
   134a8:	cmp	fp, #0
   134ac:	movle	r5, #0
   134b0:	andgt	r5, r5, #1
   134b4:	cmp	r5, #0
   134b8:	beq	134f0 <pclose@plt+0x2710>
   134bc:	mov	r1, r6
   134c0:	mov	r0, r7
   134c4:	bl	10ca8 <seekdir@plt>
   134c8:	mov	r5, #1
   134cc:	b	13298 <pclose@plt+0x24b8>
   134d0:	ands	r8, r8, r5
   134d4:	beq	13298 <pclose@plt+0x24b8>
   134d8:	mov	r3, #0
   134dc:	mov	r0, sl
   134e0:	str	r3, [sp, #24]
   134e4:	bl	10c78 <malloc@plt>
   134e8:	subs	sl, r0, #0
   134ec:	bne	13340 <pclose@plt+0x2560>
   134f0:	ldr	r3, [sp, #16]
   134f4:	cmp	r3, #0
   134f8:	beq	13504 <pclose@plt+0x2724>
   134fc:	mov	r0, r3
   13500:	bl	10bac <free@plt>
   13504:	mov	r0, r7
   13508:	bl	10dd4 <closedir@plt>
   1350c:	ldr	r3, [sp, #40]	; 0x28
   13510:	ldr	r2, [sp, #148]	; 0x94
   13514:	ldr	r0, [sp, #32]
   13518:	ldr	r3, [r3]
   1351c:	cmp	r2, r3
   13520:	bne	1364c <pclose@plt+0x286c>
   13524:	add	sp, sp, #156	; 0x9c
   13528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1352c:	and	r3, r5, #1
   13530:	ands	r8, r8, r3
   13534:	strne	r9, [sp, #24]
   13538:	beq	13394 <pclose@plt+0x25b4>
   1353c:	b	13330 <pclose@plt+0x2550>
   13540:	ldr	r3, [sp, #24]
   13544:	cmp	r3, #0
   13548:	bne	135e8 <pclose@plt+0x2808>
   1354c:	cmp	r8, #0
   13550:	beq	13388 <pclose@plt+0x25a8>
   13554:	ldr	r3, [sp, #36]	; 0x24
   13558:	sub	r2, fp, #1
   1355c:	str	r3, [sp]
   13560:	mov	r1, sl
   13564:	ldr	r3, [sp, #48]	; 0x30
   13568:	ldr	r0, [sp, #28]
   1356c:	bl	131d4 <pclose@plt+0x23f4>
   13570:	str	r0, [sp, #32]
   13574:	ldr	r3, [sp, #32]
   13578:	cmp	r3, #0
   1357c:	bne	13388 <pclose@plt+0x25a8>
   13580:	mov	r0, sl
   13584:	bl	10bac <free@plt>
   13588:	b	134f0 <pclose@plt+0x2710>
   1358c:	str	r9, [sp, #16]
   13590:	b	13274 <pclose@plt+0x2494>
   13594:	cmp	r8, #0
   13598:	beq	1348c <pclose@plt+0x26ac>
   1359c:	ldr	r3, [sp, #52]	; 0x34
   135a0:	add	r4, r6, r9
   135a4:	mov	sl, r8
   135a8:	add	r9, r3, #8
   135ac:	b	135c0 <pclose@plt+0x27e0>
   135b0:	add	r9, r9, #8
   135b4:	ldr	sl, [r9, #-4]
   135b8:	cmp	sl, #0
   135bc:	beq	1348c <pclose@plt+0x26ac>
   135c0:	ldr	r1, [r9, #-8]
   135c4:	mov	r0, r4
   135c8:	bl	10b88 <strcmp@plt>
   135cc:	cmp	r0, #0
   135d0:	bne	135b0 <pclose@plt+0x27d0>
   135d4:	ldr	r1, [sp, #36]	; 0x24
   135d8:	mov	r0, sl
   135dc:	bl	13010 <pclose@plt+0x2230>
   135e0:	str	r0, [sp, #32]
   135e4:	b	134f0 <pclose@plt+0x2710>
   135e8:	ldr	r3, [sp, #36]	; 0x24
   135ec:	mov	r2, r0
   135f0:	str	r3, [sp]
   135f4:	mov	r1, sl
   135f8:	ldr	r3, [sp, #48]	; 0x30
   135fc:	add	r0, r9, #1
   13600:	bl	131d4 <pclose@plt+0x23f4>
   13604:	cmp	r0, #0
   13608:	moveq	r8, #0
   1360c:	cmp	r8, #0
   13610:	str	r0, [sp, #32]
   13614:	beq	13574 <pclose@plt+0x2794>
   13618:	b	13554 <pclose@plt+0x2774>
   1361c:	ldr	r0, [sp, #36]	; 0x24
   13620:	bl	130b0 <pclose@plt+0x22d0>
   13624:	str	r0, [sp, #32]
   13628:	b	134f0 <pclose@plt+0x2710>
   1362c:	mvn	r3, #0
   13630:	str	r3, [sp, #32]
   13634:	b	1350c <pclose@plt+0x272c>
   13638:	mov	r0, r7
   1363c:	bl	10dd4 <closedir@plt>
   13640:	mvn	r3, #0
   13644:	str	r3, [sp, #32]
   13648:	b	1350c <pclose@plt+0x272c>
   1364c:	bl	10bf4 <__stack_chk_fail@plt>
   13650:	andeq	r1, r1, r0, lsl lr
   13654:	ldrdeq	r0, [r0], -r8
   13658:	andeq	r0, r0, r0, lsl pc
   1365c:	andeq	r1, r1, r8, asr lr
   13660:			; <UNDEFINED> instruction: 0x00000ebc
   13664:	andeq	r0, r0, r8, lsr #29
   13668:	andeq	r0, r0, r8, lsr lr
   1366c:	muleq	r1, r4, ip
   13670:	push	{r4, lr}
   13674:	subs	r4, r0, #0
   13678:	popeq	{r4, pc}
   1367c:	ldr	r0, [r4]
   13680:	cmp	r0, #0
   13684:	popeq	{r4, pc}
   13688:	ldr	r3, [r4, #4]
   1368c:	cmp	r3, #0
   13690:	bne	136a4 <pclose@plt+0x28c4>
   13694:	bl	10d5c <fclose@plt>
   13698:	mov	r3, #0
   1369c:	str	r3, [r4]
   136a0:	pop	{r4, pc}
   136a4:	bl	10de0 <pclose@plt>
   136a8:	b	13698 <pclose@plt+0x28b8>
   136ac:	ldr	ip, [pc, #812]	; 139e0 <pclose@plt+0x2c00>
   136b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136b4:	add	ip, pc, ip
   136b8:	ldr	lr, [pc, #804]	; 139e4 <pclose@plt+0x2c04>
   136bc:	mov	r7, r0
   136c0:	sub	sp, sp, #140	; 0x8c
   136c4:	ldr	r0, [ip, lr]
   136c8:	mov	r8, r3
   136cc:	mov	r4, #0
   136d0:	mov	r3, ip
   136d4:	add	r5, r8, #8
   136d8:	ldr	ip, [r0]
   136dc:	str	r0, [sp, #16]
   136e0:	str	r1, [sp, #20]
   136e4:	str	r4, [r8]
   136e8:	mov	r1, r7
   136ec:	str	r4, [r8, #4]
   136f0:	mov	r0, r5
   136f4:	str	r2, [sp, #24]
   136f8:	str	ip, [sp, #132]	; 0x84
   136fc:	bl	10c48 <strcpy@plt>
   13700:	mov	r0, r8
   13704:	bl	130b0 <pclose@plt+0x22d0>
   13708:	cmp	r0, r4
   1370c:	beq	13808 <pclose@plt+0x2a28>
   13710:	ldrb	r3, [r7]
   13714:	cmp	r3, #47	; 0x2f
   13718:	beq	13880 <pclose@plt+0x2aa0>
   1371c:	ldr	r3, [sp, #20]
   13720:	ldr	r6, [r3]
   13724:	cmp	r6, #0
   13728:	beq	137d4 <pclose@plt+0x29f4>
   1372c:	ldr	r4, [pc, #692]	; 139e8 <pclose@plt+0x2c08>
   13730:	ldr	r5, [sp, #20]
   13734:	ldr	sl, [sp, #24]
   13738:	add	r4, pc, r4
   1373c:	mov	r0, r6
   13740:	bl	10cf0 <strlen@plt>
   13744:	cmp	r0, #0
   13748:	mov	r1, r0
   1374c:	beq	13878 <pclose@plt+0x2a98>
   13750:	sub	r2, r0, #1
   13754:	add	r3, r6, r2
   13758:	ldrb	r2, [r6, r2]
   1375c:	cmp	r2, #42	; 0x2a
   13760:	bne	1382c <pclose@plt+0x2a4c>
   13764:	mov	r9, #0
   13768:	b	1377c <pclose@plt+0x299c>
   1376c:	ldrb	r2, [r3, #-1]!
   13770:	mov	r1, r0
   13774:	cmp	r2, #42	; 0x2a
   13778:	bne	13838 <pclose@plt+0x2a58>
   1377c:	subs	r0, r0, #1
   13780:	add	r9, r9, #1
   13784:	bne	1376c <pclose@plt+0x298c>
   13788:	mov	r0, r4
   1378c:	bl	10be8 <strdup@plt>
   13790:	mov	r6, r0
   13794:	cmp	r6, #0
   13798:	beq	137d4 <pclose@plt+0x29f4>
   1379c:	mov	r2, r9
   137a0:	mov	r3, sl
   137a4:	mov	r1, r6
   137a8:	str	r8, [sp]
   137ac:	mov	r0, r7
   137b0:	bl	131d4 <pclose@plt+0x23f4>
   137b4:	mov	r9, r0
   137b8:	mov	r0, r6
   137bc:	bl	10bac <free@plt>
   137c0:	cmp	r9, #0
   137c4:	beq	13808 <pclose@plt+0x2a28>
   137c8:	ldr	r6, [r5, #4]!
   137cc:	cmp	r6, #0
   137d0:	bne	1373c <pclose@plt+0x295c>
   137d4:	mov	r4, #1
   137d8:	b	1380c <pclose@plt+0x2a2c>
   137dc:	mov	r1, #4
   137e0:	mov	r0, r5
   137e4:	bl	10d50 <access@plt>
   137e8:	cmp	r0, #0
   137ec:	bne	13994 <pclose@plt+0x2bb4>
   137f0:	ldr	r8, [sp, #36]	; 0x24
   137f4:	ldr	r0, [r4, #4]
   137f8:	mov	r1, r8
   137fc:	bl	13010 <pclose@plt+0x2230>
   13800:	cmp	r0, #0
   13804:	bne	1371c <pclose@plt+0x293c>
   13808:	mov	r4, #0
   1380c:	ldr	r3, [sp, #16]
   13810:	ldr	r2, [sp, #132]	; 0x84
   13814:	mov	r0, r4
   13818:	ldr	r3, [r3]
   1381c:	cmp	r2, r3
   13820:	bne	139dc <pclose@plt+0x2bfc>
   13824:	add	sp, sp, #140	; 0x8c
   13828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1382c:	add	r3, r6, r0
   13830:	mov	r9, #0
   13834:	ldrb	r2, [r3, #-1]
   13838:	cmp	r2, #47	; 0x2f
   1383c:	subeq	r0, r0, #1
   13840:	addeq	r3, r6, r0
   13844:	beq	13850 <pclose@plt+0x2a70>
   13848:	b	13868 <pclose@plt+0x2a88>
   1384c:	sub	r0, r0, #1
   13850:	cmp	r0, #0
   13854:	beq	13788 <pclose@plt+0x29a8>
   13858:	ldrb	r2, [r3, #-1]!
   1385c:	mov	r1, r0
   13860:	cmp	r2, #47	; 0x2f
   13864:	beq	1384c <pclose@plt+0x2a6c>
   13868:	mov	r0, r6
   1386c:	bl	10bd0 <strndup@plt>
   13870:	mov	r6, r0
   13874:	b	13794 <pclose@plt+0x29b4>
   13878:	mov	r9, r0
   1387c:	b	13788 <pclose@plt+0x29a8>
   13880:	str	r4, [r8, #4]
   13884:	mov	r0, r7
   13888:	bl	10cf0 <strlen@plt>
   1388c:	ldr	r9, [sp, #24]
   13890:	ldr	r4, [r9]
   13894:	cmp	r4, #0
   13898:	beq	1371c <pclose@plt+0x293c>
   1389c:	ldr	r3, [pc, #328]	; 139ec <pclose@plt+0x2c0c>
   138a0:	ldr	sl, [pc, #328]	; 139f0 <pclose@plt+0x2c10>
   138a4:	add	r3, pc, r3
   138a8:	add	sl, pc, sl
   138ac:	str	r3, [sp, #32]
   138b0:	add	r3, r0, #1
   138b4:	str	r3, [sp, #28]
   138b8:	str	r8, [sp, #36]	; 0x24
   138bc:	mov	r0, r4
   138c0:	bl	10cf0 <strlen@plt>
   138c4:	ldr	r3, [sp, #28]
   138c8:	add	r6, r3, r0
   138cc:	cmp	r6, #4096	; 0x1000
   138d0:	bhi	139a4 <pclose@plt+0x2bc4>
   138d4:	str	r4, [sp, #4]
   138d8:	ldr	r3, [sp, #32]
   138dc:	mvn	r2, #0
   138e0:	mov	r1, #1
   138e4:	str	r7, [sp]
   138e8:	mov	r0, r5
   138ec:	add	r8, sp, #40	; 0x28
   138f0:	bl	10d20 <__sprintf_chk@plt>
   138f4:	mov	r2, r8
   138f8:	mov	r1, r5
   138fc:	mov	r0, #3
   13900:	bl	10c24 <__xstat@plt>
   13904:	subs	r4, r0, #0
   13908:	bne	1391c <pclose@plt+0x2b3c>
   1390c:	ldr	r3, [sp, #56]	; 0x38
   13910:	and	r3, r3, #61440	; 0xf000
   13914:	cmp	r3, #32768	; 0x8000
   13918:	beq	139b8 <pclose@plt+0x2bd8>
   1391c:	ldr	r4, [pc, #208]	; 139f4 <pclose@plt+0x2c14>
   13920:	add	r4, pc, r4
   13924:	ldr	r3, [r4, #4]
   13928:	cmp	r3, #0
   1392c:	beq	139a4 <pclose@plt+0x2bc4>
   13930:	ldr	fp, [r4]
   13934:	mov	r0, fp
   13938:	bl	10cf0 <strlen@plt>
   1393c:	add	r0, r6, r0
   13940:	cmp	r0, #4096	; 0x1000
   13944:	bhi	13994 <pclose@plt+0x2bb4>
   13948:	ldr	r3, [r9]
   1394c:	mvn	r2, #0
   13950:	str	r3, [sp, #4]
   13954:	mov	r1, #1
   13958:	mov	r3, sl
   1395c:	str	fp, [sp, #8]
   13960:	str	r7, [sp]
   13964:	mov	r0, r5
   13968:	bl	10d20 <__sprintf_chk@plt>
   1396c:	mov	r2, r8
   13970:	mov	r1, r5
   13974:	mov	r0, #3
   13978:	bl	10c24 <__xstat@plt>
   1397c:	cmp	r0, #0
   13980:	bne	13994 <pclose@plt+0x2bb4>
   13984:	ldr	r3, [sp, #56]	; 0x38
   13988:	and	r3, r3, #61440	; 0xf000
   1398c:	cmp	r3, #32768	; 0x8000
   13990:	beq	137dc <pclose@plt+0x29fc>
   13994:	add	r4, r4, #8
   13998:	ldr	r3, [r4, #4]
   1399c:	cmp	r3, #0
   139a0:	bne	13930 <pclose@plt+0x2b50>
   139a4:	ldr	r4, [r9, #4]!
   139a8:	cmp	r4, #0
   139ac:	bne	138bc <pclose@plt+0x2adc>
   139b0:	ldr	r8, [sp, #36]	; 0x24
   139b4:	b	1371c <pclose@plt+0x293c>
   139b8:	ldr	r1, [pc, #56]	; 139f8 <pclose@plt+0x2c18>
   139bc:	mov	r0, r5
   139c0:	add	r1, pc, r1
   139c4:	bl	10ba0 <fopen@plt>
   139c8:	ldr	r3, [sp, #36]	; 0x24
   139cc:	cmp	r0, #0
   139d0:	str	r0, [r3]
   139d4:	beq	1391c <pclose@plt+0x2b3c>
   139d8:	b	1380c <pclose@plt+0x2a2c>
   139dc:	bl	10bf4 <__stack_chk_fail@plt>
   139e0:	andeq	r1, r1, r4, asr #18
   139e4:	ldrdeq	r0, [r0], -r8
   139e8:	andeq	r0, r0, ip, asr #20
   139ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   139f0:	strdeq	r0, [r0], -r4
   139f4:	andeq	r1, r1, r0, asr #15
   139f8:	andeq	r0, r0, r8, lsl #14
   139fc:	push	{r4, r5, r6, lr}
   13a00:	mov	r5, r0
   13a04:	ldr	r0, [pc, #64]	; 13a4c <pclose@plt+0x2c6c>
   13a08:	bl	10c78 <malloc@plt>
   13a0c:	subs	r4, r0, #0
   13a10:	beq	13a34 <pclose@plt+0x2c54>
   13a14:	mov	r1, r5
   13a18:	mov	r2, #4096	; 0x1000
   13a1c:	add	r0, r4, #8
   13a20:	bl	10c54 <__strcpy_chk@plt>
   13a24:	mov	r0, r4
   13a28:	bl	130b0 <pclose@plt+0x22d0>
   13a2c:	cmp	r0, #0
   13a30:	blt	13a3c <pclose@plt+0x2c5c>
   13a34:	mov	r0, r4
   13a38:	pop	{r4, r5, r6, pc}
   13a3c:	mov	r0, r4
   13a40:	bl	10bac <free@plt>
   13a44:	mov	r4, #0
   13a48:	b	13a34 <pclose@plt+0x2c54>
   13a4c:	andeq	r1, r0, r8
   13a50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a54:	mov	r7, r0
   13a58:	ldr	r6, [pc, #72]	; 13aa8 <pclose@plt+0x2cc8>
   13a5c:	ldr	r5, [pc, #72]	; 13aac <pclose@plt+0x2ccc>
   13a60:	add	r6, pc, r6
   13a64:	add	r5, pc, r5
   13a68:	sub	r6, r6, r5
   13a6c:	mov	r8, r1
   13a70:	mov	r9, r2
   13a74:	bl	10b68 <strcmp@plt-0x20>
   13a78:	asrs	r6, r6, #2
   13a7c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a80:	mov	r4, #0
   13a84:	add	r4, r4, #1
   13a88:	ldr	r3, [r5], #4
   13a8c:	mov	r2, r9
   13a90:	mov	r1, r8
   13a94:	mov	r0, r7
   13a98:	blx	r3
   13a9c:	cmp	r6, r4
   13aa0:	bne	13a84 <pclose@plt+0x2ca4>
   13aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13aa8:	muleq	r1, ip, r4
   13aac:	muleq	r1, r4, r4
   13ab0:	bx	lr

Disassembly of section .fini:

00013ab4 <.fini>:
   13ab4:	push	{r3, lr}
   13ab8:	pop	{r3, pc}
