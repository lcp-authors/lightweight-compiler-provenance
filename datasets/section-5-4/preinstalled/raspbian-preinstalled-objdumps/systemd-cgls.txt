
raspbian-preinstalled/systemd-cgls:     file format elf32-littlearm


Disassembly of section .init:

00000ae8 <.init>:
 ae8:	push	{r3, lr}
 aec:	bl	19cc <log_oom_internal@plt+0xd08>
 af0:	pop	{r3, pc}

Disassembly of section .plt:

00000af4 <version@plt-0x14>:
 af4:	push	{lr}		; (str lr, [sp, #-4]!)
 af8:	ldr	lr, [pc, #4]	; b04 <version@plt-0x4>
 afc:	add	lr, pc, lr
 b00:	ldr	pc, [lr, #8]!
 b04:	andeq	r2, r1, r4, lsr #8

00000b08 <version@plt>:
 b08:	add	ip, pc, #0, 12
 b0c:	add	ip, ip, #73728	; 0x12000
 b10:	ldr	pc, [ip, #1060]!	; 0x424

00000b14 <path_startswith@plt>:
 b14:	add	ip, pc, #0, 12
 b18:	add	ip, ip, #73728	; 0x12000
 b1c:	ldr	pc, [ip, #1052]!	; 0x41c

00000b20 <free@plt>:
 b20:	add	ip, pc, #0, 12
 b24:	add	ip, ip, #73728	; 0x12000
 b28:	ldr	pc, [ip, #1044]!	; 0x414

00000b2c <log_open@plt>:
 b2c:	add	ip, pc, #0, 12
 b30:	add	ip, ip, #73728	; 0x12000
 b34:	ldr	pc, [ip, #1036]!	; 0x40c

00000b38 <log_assert_failed_unreachable_realm@plt>:
 b38:	add	ip, pc, #0, 12
 b3c:	add	ip, ip, #73728	; 0x12000
 b40:	ldr	pc, [ip, #1028]!	; 0x404

00000b44 <ask_password_agent_close@plt>:
 b44:	add	ip, pc, #0, 12
 b48:	add	ip, ip, #73728	; 0x12000
 b4c:	ldr	pc, [ip, #1020]!	; 0x3fc

00000b50 <polkit_agent_close@plt>:
 b50:	add	ip, pc, #0, 12
 b54:	add	ip, ip, #73728	; 0x12000
 b58:	ldr	pc, [ip, #1012]!	; 0x3f4

00000b5c <mac_selinux_finish@plt>:
 b5c:	add	ip, pc, #0, 12
 b60:	add	ip, ip, #73728	; 0x12000
 b64:	ldr	pc, [ip, #1004]!	; 0x3ec

00000b68 <puts@plt>:
 b68:	add	ip, pc, #0, 12
 b6c:	add	ip, ip, #73728	; 0x12000
 b70:	ldr	pc, [ip, #996]!	; 0x3e4

00000b74 <log_get_max_level_realm@plt>:
 b74:	add	ip, pc, #0, 12
 b78:	add	ip, ip, #73728	; 0x12000
 b7c:	ldr	pc, [ip, #988]!	; 0x3dc

00000b80 <strv_push@plt>:
 b80:	add	ip, pc, #0, 12
 b84:	add	ip, ip, #73728	; 0x12000
 b88:	ldr	pc, [ip, #980]!	; 0x3d4

00000b8c <path_simplify@plt>:
 b8c:	add	ip, pc, #0, 12
 b90:	add	ip, ip, #73728	; 0x12000
 b94:	ldr	pc, [ip, #972]!	; 0x3cc

00000b98 <abort@plt>:
 b98:	add	ip, pc, #0, 12
 b9c:	add	ip, ip, #73728	; 0x12000
 ba0:	ldr	pc, [ip, #964]!	; 0x3c4

00000ba4 <cg_all_unified@plt>:
 ba4:	add	ip, pc, #0, 12
 ba8:	add	ip, ip, #73728	; 0x12000
 bac:	ldr	pc, [ip, #956]!	; 0x3bc

00000bb0 <sd_bus_flush_close_unref@plt>:
 bb0:	add	ip, pc, #0, 12
 bb4:	add	ip, ip, #73728	; 0x12000
 bb8:	ldr	pc, [ip, #948]!	; 0x3b4

00000bbc <show_cgroup_get_unit_path_and_warn@plt>:
 bbc:	add	ip, pc, #0, 12
 bc0:	add	ip, ip, #73728	; 0x12000
 bc4:	ldr	pc, [ip, #940]!	; 0x3ac

00000bc8 <__stack_chk_fail@plt>:
 bc8:	add	ip, pc, #0, 12
 bcc:	add	ip, ip, #73728	; 0x12000
 bd0:	ldr	pc, [ip, #932]!	; 0x3a4

00000bd4 <terminal_urlify_man@plt>:
 bd4:	add	ip, pc, #0, 12
 bd8:	add	ip, ip, #73728	; 0x12000
 bdc:	ldr	pc, [ip, #924]!	; 0x39c

00000be0 <show_cgroup_by_path@plt>:
 be0:	add	ip, pc, #0, 12
 be4:	add	ip, ip, #73728	; 0x12000
 be8:	ldr	pc, [ip, #916]!	; 0x394

00000bec <show_cgroup@plt>:
 bec:	add	ip, pc, #0, 12
 bf0:	add	ip, ip, #73728	; 0x12000
 bf4:	ldr	pc, [ip, #908]!	; 0x38c

00000bf8 <bus_connect_transport_systemd@plt>:
 bf8:	add	ip, pc, #0, 12
 bfc:	add	ip, ip, #73728	; 0x12000
 c00:	ldr	pc, [ip, #900]!	; 0x384

00000c04 <getopt_long@plt>:
 c04:	add	ip, pc, #0, 12
 c08:	add	ip, ip, #73728	; 0x12000
 c0c:	ldr	pc, [ip, #892]!	; 0x37c

00000c10 <pager_close@plt>:
 c10:	add	ip, pc, #0, 12
 c14:	add	ip, ip, #73728	; 0x12000
 c18:	ldr	pc, [ip, #884]!	; 0x374

00000c1c <strjoin_real@plt>:
 c1c:	add	ip, pc, #0, 12
 c20:	add	ip, ip, #73728	; 0x12000
 c24:	ldr	pc, [ip, #876]!	; 0x36c

00000c28 <cg_split_spec@plt>:
 c28:	add	ip, pc, #0, 12
 c2c:	add	ip, ip, #73728	; 0x12000
 c30:	ldr	pc, [ip, #868]!	; 0x364

00000c34 <strcmp@plt>:
 c34:	add	ip, pc, #0, 12
 c38:	add	ip, ip, #73728	; 0x12000
 c3c:	ldr	pc, [ip, #860]!	; 0x35c

00000c40 <log_parse_environment_realm@plt>:
 c40:	add	ip, pc, #0, 12
 c44:	add	ip, ip, #73728	; 0x12000
 c48:	ldr	pc, [ip, #852]!	; 0x354

00000c4c <show_cgroup_get_path_and_warn@plt>:
 c4c:	add	ip, pc, #0, 12
 c50:	add	ip, ip, #73728	; 0x12000
 c54:	ldr	pc, [ip, #844]!	; 0x34c

00000c58 <fflush@plt>:
 c58:	add	ip, pc, #0, 12
 c5c:	add	ip, ip, #73728	; 0x12000
 c60:	ldr	pc, [ip, #836]!	; 0x344

00000c64 <log_assert_failed_realm@plt>:
 c64:	add	ip, pc, #0, 12
 c68:	add	ip, ip, #73728	; 0x12000
 c6c:	ldr	pc, [ip, #828]!	; 0x33c

00000c70 <log_internal_realm@plt>:
 c70:	add	ip, pc, #0, 12
 c74:	add	ip, ip, #73728	; 0x12000
 c78:	ldr	pc, [ip, #820]!	; 0x334

00000c7c <pager_open@plt>:
 c7c:	add	ip, pc, #0, 12
 c80:	add	ip, ip, #73728	; 0x12000
 c84:	ldr	pc, [ip, #812]!	; 0x32c

00000c88 <__libc_start_main@plt>:
 c88:	add	ip, pc, #0, 12
 c8c:	add	ip, ip, #73728	; 0x12000
 c90:	ldr	pc, [ip, #804]!	; 0x324

00000c94 <__gmon_start__@plt>:
 c94:	add	ip, pc, #0, 12
 c98:	add	ip, ip, #73728	; 0x12000
 c9c:	ldr	pc, [ip, #796]!	; 0x31c

00000ca0 <safe_getcwd@plt>:
 ca0:	add	ip, pc, #0, 12
 ca4:	add	ip, ip, #73728	; 0x12000
 ca8:	ldr	pc, [ip, #788]!	; 0x314

00000cac <__cxa_finalize@plt>:
 cac:	add	ip, pc, #0, 12
 cb0:	add	ip, ip, #73728	; 0x12000
 cb4:	ldr	pc, [ip, #780]!	; 0x30c

00000cb8 <__printf_chk@plt>:
 cb8:	add	ip, pc, #0, 12
 cbc:	add	ip, ip, #73728	; 0x12000
 cc0:	ldr	pc, [ip, #772]!	; 0x304

00000cc4 <log_oom_internal@plt>:
 cc4:	add	ip, pc, #0, 12
 cc8:	add	ip, ip, #73728	; 0x12000
 ccc:	ldr	pc, [ip, #764]!	; 0x2fc

Disassembly of section .text:

00000cd0 <.text>:
     cd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     cd4:	sub	sp, sp, #60	; 0x3c
     cd8:	ldr	r6, [pc, #2892]	; 182c <log_oom_internal@plt+0xb68>
     cdc:	ldr	r3, [pc, #2892]	; 1830 <log_oom_internal@plt+0xb6c>
     ce0:	add	r6, pc, r6
     ce4:	mov	r5, r0
     ce8:	ldr	r3, [r6, r3]
     cec:	mov	r0, #0
     cf0:	str	r3, [sp, #20]
     cf4:	ldr	r3, [r3]
     cf8:	mov	r7, r1
     cfc:	str	r3, [sp, #52]	; 0x34
     d00:	bl	c40 <log_parse_environment_realm@plt>
     d04:	bl	b2c <log_open@plt>
     d08:	cmp	r5, #0
     d0c:	ble	1550 <log_oom_internal@plt+0x88c>
     d10:	cmp	r7, #0
     d14:	beq	1578 <log_oom_internal@plt+0x8b4>
     d18:	ldr	fp, [pc, #2836]	; 1834 <log_oom_internal@plt+0xb70>
     d1c:	ldr	sl, [pc, #2836]	; 1838 <log_oom_internal@plt+0xb74>
     d20:	ldr	r9, [pc, #2836]	; 183c <log_oom_internal@plt+0xb78>
     d24:	ldr	r8, [pc, #2836]	; 1840 <log_oom_internal@plt+0xb7c>
     d28:	add	fp, pc, fp
     d2c:	add	r3, fp, #12
     d30:	add	sl, pc, sl
     d34:	add	r9, pc, r9
     d38:	add	r8, pc, r8
     d3c:	str	r3, [sp, #16]
     d40:	add	r3, sl, #12
     d44:	str	r3, [sp, #24]
     d48:	mov	r4, #0
     d4c:	str	r4, [sp]
     d50:	mov	r3, r9
     d54:	mov	r2, r8
     d58:	mov	r1, r7
     d5c:	mov	r0, r5
     d60:	bl	c04 <getopt_long@plt>
     d64:	cmp	r0, #0
     d68:	blt	15a0 <log_oom_internal@plt+0x8dc>
     d6c:	cmp	r0, #107	; 0x6b
     d70:	beq	145c <log_oom_internal@plt+0x798>
     d74:	bgt	e04 <log_oom_internal@plt+0x140>
     d78:	cmp	r0, #77	; 0x4d
     d7c:	beq	f30 <log_oom_internal@plt+0x26c>
     d80:	bgt	ed0 <log_oom_internal@plt+0x20c>
     d84:	cmp	r0, #1
     d88:	beq	f60 <log_oom_internal@plt+0x29c>
     d8c:	cmp	r0, #63	; 0x3f
     d90:	bne	1800 <log_oom_internal@plt+0xb3c>
     d94:	mvn	r4, #21
     d98:	ldr	r3, [pc, #2724]	; 1844 <log_oom_internal@plt+0xb80>
     d9c:	ldr	r5, [r6, r3]
     da0:	cmp	r5, #0
     da4:	beq	dd4 <log_oom_internal@plt+0x110>
     da8:	ldr	r3, [pc, #2712]	; 1848 <log_oom_internal@plt+0xb84>
     dac:	add	r5, r5, #3
     db0:	bic	r5, r5, #3
     db4:	ldr	r6, [r6, r3]
     db8:	cmp	r5, r6
     dbc:	bcs	dd4 <log_oom_internal@plt+0x110>
     dc0:	ldm	r5, {r0, r3}
     dc4:	add	r5, r5, #8
     dc8:	blx	r3
     dcc:	cmp	r5, r6
     dd0:	bcc	dc0 <log_oom_internal@plt+0xfc>
     dd4:	bl	b44 <ask_password_agent_close@plt>
     dd8:	bl	b50 <polkit_agent_close@plt>
     ddc:	bl	b5c <mac_selinux_finish@plt>
     de0:	bl	c10 <pager_close@plt>
     de4:	ldr	r3, [sp, #20]
     de8:	ldr	r2, [sp, #52]	; 0x34
     dec:	lsr	r0, r4, #31
     df0:	ldr	r3, [r3]
     df4:	cmp	r2, r3
     df8:	bne	1828 <log_oom_internal@plt+0xb64>
     dfc:	add	sp, sp, #60	; 0x3c
     e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     e04:	cmp	r0, #256	; 0x100
     e08:	beq	fc0 <log_oom_internal@plt+0x2fc>
     e0c:	ble	e74 <log_oom_internal@plt+0x1b0>
     e10:	ldr	r3, [pc, #2612]	; 184c <log_oom_internal@plt+0xb88>
     e14:	cmp	r0, r3
     e18:	beq	fd8 <log_oom_internal@plt+0x314>
     e1c:	add	r3, r3, #1
     e20:	cmp	r0, r3
     e24:	bne	1800 <log_oom_internal@plt+0xb3c>
     e28:	ldr	r3, [pc, #2592]	; 1850 <log_oom_internal@plt+0xb8c>
     e2c:	mov	r2, #2
     e30:	str	r2, [fp, #8]
     e34:	ldr	r3, [r6, r3]
     e38:	ldr	r0, [sp, #16]
     e3c:	ldr	r1, [r3]
     e40:	bl	b80 <strv_push@plt>
     e44:	cmp	r0, #0
     e48:	bge	d48 <log_oom_internal@plt+0x84>
     e4c:	ldr	r3, [pc, #2560]	; 1854 <log_oom_internal@plt+0xb90>
     e50:	ldr	r1, [pc, #2560]	; 1858 <log_oom_internal@plt+0xb94>
     e54:	add	r3, pc, r3
     e58:	mov	r0, r4
     e5c:	add	r3, r3, #20
     e60:	mov	r2, #121	; 0x79
     e64:	add	r1, pc, r1
     e68:	bl	cc4 <log_oom_internal@plt>
     e6c:	mov	r4, r0
     e70:	b	fe0 <log_oom_internal@plt+0x31c>
     e74:	cmp	r0, #108	; 0x6c
     e78:	beq	fac <log_oom_internal@plt+0x2e8>
     e7c:	cmp	r0, #117	; 0x75
     e80:	bne	1800 <log_oom_internal@plt+0xb3c>
     e84:	ldr	r3, [pc, #2500]	; 1850 <log_oom_internal@plt+0xb8c>
     e88:	mov	r2, #1
     e8c:	str	r2, [sl, #8]
     e90:	ldr	r3, [r6, r3]
     e94:	ldr	r0, [sp, #24]
     e98:	ldr	r1, [r3]
     e9c:	bl	b80 <strv_push@plt>
     ea0:	cmp	r0, #0
     ea4:	bge	d48 <log_oom_internal@plt+0x84>
     ea8:	ldr	r3, [pc, #2476]	; 185c <log_oom_internal@plt+0xb98>
     eac:	ldr	r1, [pc, #2476]	; 1860 <log_oom_internal@plt+0xb9c>
     eb0:	add	r3, pc, r3
     eb4:	mov	r0, r4
     eb8:	add	r3, r3, #20
     ebc:	mov	r2, #115	; 0x73
     ec0:	add	r1, pc, r1
     ec4:	bl	cc4 <log_oom_internal@plt>
     ec8:	mov	r4, r0
     ecc:	b	fe0 <log_oom_internal@plt+0x31c>
     ed0:	cmp	r0, #97	; 0x61
     ed4:	beq	f4c <log_oom_internal@plt+0x288>
     ed8:	cmp	r0, #104	; 0x68
     edc:	bne	1800 <log_oom_internal@plt+0xb3c>
     ee0:	add	r2, sp, #56	; 0x38
     ee4:	ldr	r1, [pc, #2424]	; 1864 <log_oom_internal@plt+0xba0>
     ee8:	ldr	r0, [pc, #2424]	; 1868 <log_oom_internal@plt+0xba4>
     eec:	add	r1, pc, r1
     ef0:	str	r4, [r2, #-8]!
     ef4:	add	r0, pc, r0
     ef8:	bl	bd4 <terminal_urlify_man@plt>
     efc:	cmp	r0, #0
     f00:	blt	1484 <log_oom_internal@plt+0x7c0>
     f04:	ldr	r2, [pc, #2400]	; 186c <log_oom_internal@plt+0xba8>
     f08:	ldr	r1, [pc, #2400]	; 1870 <log_oom_internal@plt+0xbac>
     f0c:	ldr	r3, [sp, #48]	; 0x30
     f10:	ldr	r2, [r6, r2]
     f14:	add	r1, pc, r1
     f18:	mov	r0, #1
     f1c:	ldr	r2, [r2]
     f20:	bl	cb8 <__printf_chk@plt>
     f24:	ldr	r0, [sp, #48]	; 0x30
     f28:	bl	b20 <free@plt>
     f2c:	b	d98 <log_oom_internal@plt+0xd4>
     f30:	ldr	r3, [pc, #2328]	; 1850 <log_oom_internal@plt+0xb8c>
     f34:	ldr	r2, [pc, #2360]	; 1874 <log_oom_internal@plt+0xbb0>
     f38:	ldr	r3, [r6, r3]
     f3c:	add	r2, pc, r2
     f40:	ldr	r3, [r3]
     f44:	str	r3, [r2, #20]
     f48:	b	d48 <log_oom_internal@plt+0x84>
     f4c:	ldr	r3, [pc, #2340]	; 1878 <log_oom_internal@plt+0xbb4>
     f50:	mov	r2, #1
     f54:	add	r3, pc, r3
     f58:	strb	r2, [r3, #4]
     f5c:	b	d48 <log_oom_internal@plt+0x84>
     f60:	ldr	r3, [pc, #2280]	; 1850 <log_oom_internal@plt+0xb8c>
     f64:	ldr	r0, [pc, #2320]	; 187c <log_oom_internal@plt+0xbb8>
     f68:	ldr	r3, [r6, r3]
     f6c:	add	r0, pc, r0
     f70:	add	r0, r0, #12
     f74:	ldr	r1, [r3]
     f78:	bl	b80 <strv_push@plt>
     f7c:	cmp	r0, #0
     f80:	bge	d48 <log_oom_internal@plt+0x84>
     f84:	ldr	r3, [pc, #2292]	; 1880 <log_oom_internal@plt+0xbbc>
     f88:	ldr	r1, [pc, #2292]	; 1884 <log_oom_internal@plt+0xbc0>
     f8c:	add	r3, pc, r3
     f90:	mov	r0, r4
     f94:	add	r3, r3, #20
     f98:	mov	r2, #127	; 0x7f
     f9c:	add	r1, pc, r1
     fa0:	bl	cc4 <log_oom_internal@plt>
     fa4:	mov	r4, r0
     fa8:	b	fe0 <log_oom_internal@plt+0x31c>
     fac:	ldr	r3, [pc, #2260]	; 1888 <log_oom_internal@plt+0xbc4>
     fb0:	mov	r2, #1
     fb4:	add	r3, pc, r3
     fb8:	str	r2, [r3]
     fbc:	b	d48 <log_oom_internal@plt+0x84>
     fc0:	ldr	r2, [pc, #2244]	; 188c <log_oom_internal@plt+0xbc8>
     fc4:	add	r2, pc, r2
     fc8:	ldr	r3, [r2]
     fcc:	orr	r3, r3, #1
     fd0:	str	r3, [r2]
     fd4:	b	d48 <log_oom_internal@plt+0x84>
     fd8:	bl	b08 <version@plt>
     fdc:	mov	r4, r0
     fe0:	cmp	r4, #0
     fe4:	ble	d98 <log_oom_internal@plt+0xd4>
     fe8:	ldr	r5, [pc, #2208]	; 1890 <log_oom_internal@plt+0xbcc>
     fec:	add	r5, pc, r5
     ff0:	ldr	r0, [r5]
     ff4:	bl	c7c <pager_open@plt>
     ff8:	subs	r4, r0, #0
     ffc:	ble	1014 <log_oom_internal@plt+0x350>
    1000:	ldr	r3, [pc, #2188]	; 1894 <log_oom_internal@plt+0xbd0>
    1004:	add	r3, pc, r3
    1008:	ldr	r2, [r3]
    100c:	cmp	r2, #0
    1010:	blt	1470 <log_oom_internal@plt+0x7ac>
    1014:	ldr	r2, [pc, #2172]	; 1898 <log_oom_internal@plt+0xbd4>
    1018:	ldr	r3, [pc, #2172]	; 189c <log_oom_internal@plt+0xbd8>
    101c:	add	r2, pc, r2
    1020:	add	r3, pc, r3
    1024:	ldr	r1, [r2]
    1028:	ldrb	r2, [r3, #4]
    102c:	cmp	r1, #0
    1030:	movle	r8, #0
    1034:	movgt	r8, #8
    1038:	ldr	r3, [pc, #2144]	; 18a0 <log_oom_internal@plt+0xbdc>
    103c:	orr	r8, r8, r2
    1040:	add	r3, pc, r3
    1044:	ldrb	r2, [r3, #16]
    1048:	ldr	r5, [r3, #12]
    104c:	cmp	r5, #0
    1050:	orr	r8, r8, r2, lsl #8
    1054:	beq	14c0 <log_oom_internal@plt+0x7fc>
    1058:	ldr	r3, [pc, #2116]	; 18a4 <log_oom_internal@plt+0xbe0>
    105c:	ldr	r2, [pc, #2116]	; 18a8 <log_oom_internal@plt+0xbe4>
    1060:	add	r3, pc, r3
    1064:	add	r3, r3, #32
    1068:	str	r3, [sp, #24]
    106c:	ldr	r3, [pc, #2104]	; 18ac <log_oom_internal@plt+0xbe8>
    1070:	add	r2, pc, r2
    1074:	ldr	r7, [pc, #2100]	; 18b0 <log_oom_internal@plt+0xbec>
    1078:	mov	r1, #0
    107c:	add	r2, r2, #32
    1080:	add	r3, pc, r3
    1084:	str	r2, [sp, #28]
    1088:	str	r1, [sp, #36]	; 0x24
    108c:	str	r1, [sp, #40]	; 0x28
    1090:	add	r7, pc, r7
    1094:	str	r3, [sp, #16]
    1098:	b	1150 <log_oom_internal@plt+0x48c>
    109c:	ldr	sl, [sp, #36]	; 0x24
    10a0:	mov	r3, #0
    10a4:	cmp	sl, r3
    10a8:	str	r3, [sp, #48]	; 0x30
    10ac:	beq	12b4 <log_oom_internal@plt+0x5f0>
    10b0:	mov	r0, sl
    10b4:	add	r2, sp, #48	; 0x30
    10b8:	ldr	r1, [r5, #-4]
    10bc:	bl	bbc <show_cgroup_get_unit_path_and_warn@plt>
    10c0:	ldr	r9, [sp, #48]	; 0x30
    10c4:	subs	sl, r0, #0
    10c8:	blt	11d8 <log_oom_internal@plt+0x514>
    10cc:	cmp	r9, #0
    10d0:	beq	11c4 <log_oom_internal@plt+0x500>
    10d4:	ldrb	r3, [r9]
    10d8:	cmp	r3, #0
    10dc:	beq	11c4 <log_oom_internal@plt+0x500>
    10e0:	ldr	r1, [pc, #1996]	; 18b4 <log_oom_internal@plt+0xbf0>
    10e4:	mov	r3, r9
    10e8:	ldr	r2, [r5, #-4]
    10ec:	add	r1, pc, r1
    10f0:	mov	r0, #1
    10f4:	bl	cb8 <__printf_chk@plt>
    10f8:	ldr	r3, [pc, #1976]	; 18b8 <log_oom_internal@plt+0xbf4>
    10fc:	ldr	r3, [r6, r3]
    1100:	ldr	r0, [r3]
    1104:	bl	c58 <fflush@plt>
    1108:	mov	r2, #0
    110c:	mov	r3, r8
    1110:	mov	r1, r2
    1114:	ldr	r0, [sp, #48]	; 0x30
    1118:	bl	be0 <show_cgroup_by_path@plt>
    111c:	mov	r9, r0
    1120:	ldr	r0, [sp, #48]	; 0x30
    1124:	bl	b20 <free@plt>
    1128:	mov	r2, r4
    112c:	lsr	r3, r9, #31
    1130:	mov	r4, r9
    1134:	cmp	r2, #0
    1138:	movlt	r3, #0
    113c:	andge	r3, r3, #1
    1140:	cmp	r3, #0
    1144:	moveq	r4, r2
    1148:	cmp	r5, #0
    114c:	beq	13e0 <log_oom_internal@plt+0x71c>
    1150:	ldr	sl, [r5], #4
    1154:	cmp	sl, #0
    1158:	beq	13e0 <log_oom_internal@plt+0x71c>
    115c:	ldr	r9, [r7, #8]
    1160:	cmp	r9, #0
    1164:	bne	109c <log_oom_internal@plt+0x3d8>
    1168:	ldr	r1, [sp, #16]
    116c:	mov	r0, sl
    1170:	bl	b14 <path_startswith@plt>
    1174:	cmp	r0, #0
    1178:	beq	11f0 <log_oom_internal@plt+0x52c>
    117c:	ldr	r1, [pc, #1848]	; 18bc <log_oom_internal@plt+0xbf8>
    1180:	mov	r2, sl
    1184:	add	r1, pc, r1
    1188:	mov	r0, #1
    118c:	bl	cb8 <__printf_chk@plt>
    1190:	ldr	r3, [pc, #1824]	; 18b8 <log_oom_internal@plt+0xbf4>
    1194:	ldr	r3, [r6, r3]
    1198:	ldr	r0, [r3]
    119c:	bl	c58 <fflush@plt>
    11a0:	mov	r3, r8
    11a4:	mov	r2, r9
    11a8:	mov	r1, r9
    11ac:	ldr	r0, [r5, #-4]
    11b0:	bl	be0 <show_cgroup_by_path@plt>
    11b4:	mov	r2, r4
    11b8:	lsr	r3, r0, #31
    11bc:	mov	r4, r0
    11c0:	b	1134 <log_oom_internal@plt+0x470>
    11c4:	mov	r0, #0
    11c8:	bl	b74 <log_get_max_level_realm@plt>
    11cc:	cmp	r0, #3
    11d0:	bgt	12e0 <log_oom_internal@plt+0x61c>
    11d4:	mvn	sl, #1
    11d8:	mov	r0, r9
    11dc:	bl	b20 <free@plt>
    11e0:	mov	r2, r4
    11e4:	mov	r3, #1
    11e8:	mov	r4, sl
    11ec:	b	1134 <log_oom_internal@plt+0x470>
    11f0:	ldr	r9, [sp, #40]	; 0x28
    11f4:	str	r0, [sp, #44]	; 0x2c
    11f8:	cmp	r9, #0
    11fc:	str	r0, [sp, #48]	; 0x30
    1200:	beq	1348 <log_oom_internal@plt+0x684>
    1204:	add	r2, sp, #48	; 0x30
    1208:	add	r1, sp, #44	; 0x2c
    120c:	ldr	r0, [r5, #-4]
    1210:	bl	c28 <cg_split_spec@plt>
    1214:	subs	r9, r0, #0
    1218:	blt	1318 <log_oom_internal@plt+0x654>
    121c:	ldr	sl, [sp, #44]	; 0x2c
    1220:	cmp	sl, #0
    1224:	beq	14b4 <log_oom_internal@plt+0x7f0>
    1228:	ldr	fp, [sp, #48]	; 0x30
    122c:	ldr	r9, [sp, #40]	; 0x28
    1230:	cmp	fp, #0
    1234:	beq	1264 <log_oom_internal@plt+0x5a0>
    1238:	ldr	r1, [pc, #1664]	; 18c0 <log_oom_internal@plt+0xbfc>
    123c:	mov	r0, r9
    1240:	mov	r2, fp
    1244:	mov	r3, #0
    1248:	add	r1, pc, r1
    124c:	bl	c1c <strjoin_real@plt>
    1250:	subs	r9, r0, #0
    1254:	beq	1740 <log_oom_internal@plt+0xa7c>
    1258:	mov	r1, #0
    125c:	bl	b8c <path_simplify@plt>
    1260:	mov	fp, r9
    1264:	mov	r1, r9
    1268:	mov	r0, sl
    126c:	bl	1af8 <log_oom_internal@plt+0xe34>
    1270:	mov	r3, #0
    1274:	mov	r2, r3
    1278:	mov	r1, r9
    127c:	str	r8, [sp]
    1280:	mov	r0, sl
    1284:	bl	bec <show_cgroup@plt>
    1288:	mov	r9, r0
    128c:	mov	r0, fp
    1290:	bl	b20 <free@plt>
    1294:	ldr	r0, [sp, #48]	; 0x30
    1298:	bl	b20 <free@plt>
    129c:	ldr	r0, [sp, #44]	; 0x2c
    12a0:	bl	b20 <free@plt>
    12a4:	mov	r2, r4
    12a8:	lsr	r3, r9, #31
    12ac:	mov	r4, r9
    12b0:	b	1134 <log_oom_internal@plt+0x470>
    12b4:	sub	r2, r9, #2
    12b8:	add	r3, sp, #36	; 0x24
    12bc:	clz	r2, r2
    12c0:	mov	r1, sl
    12c4:	lsr	r2, r2, #5
    12c8:	mov	r0, sl
    12cc:	bl	bf8 <bus_connect_transport_systemd@plt>
    12d0:	subs	r4, r0, #0
    12d4:	blt	16e0 <log_oom_internal@plt+0xa1c>
    12d8:	ldr	sl, [sp, #36]	; 0x24
    12dc:	b	10b0 <log_oom_internal@plt+0x3ec>
    12e0:	ldr	r2, [r5, #-4]
    12e4:	ldr	r3, [pc, #1496]	; 18c4 <log_oom_internal@plt+0xc00>
    12e8:	str	r2, [sp, #8]
    12ec:	ldr	r2, [sp, #24]
    12f0:	add	r3, pc, r3
    12f4:	mov	r1, #0
    12f8:	strd	r2, [sp]
    12fc:	ldr	r2, [pc, #1476]	; 18c8 <log_oom_internal@plt+0xc04>
    1300:	mov	r3, #210	; 0xd2
    1304:	add	r2, pc, r2
    1308:	mov	r0, #4
    130c:	bl	c70 <log_internal_realm@plt>
    1310:	ldr	r9, [sp, #48]	; 0x30
    1314:	b	11d4 <log_oom_internal@plt+0x510>
    1318:	mov	r0, #0
    131c:	bl	b74 <log_get_max_level_realm@plt>
    1320:	cmp	r0, #2
    1324:	bgt	151c <log_oom_internal@plt+0x858>
    1328:	ldr	r0, [sp, #48]	; 0x30
    132c:	bl	b20 <free@plt>
    1330:	ldr	r0, [sp, #44]	; 0x2c
    1334:	bl	b20 <free@plt>
    1338:	mov	r2, r4
    133c:	mov	r3, #1
    1340:	mov	r4, r9
    1344:	b	1134 <log_oom_internal@plt+0x470>
    1348:	add	r2, sp, #40	; 0x28
    134c:	mov	r1, r9
    1350:	ldr	r0, [r7, #20]
    1354:	bl	c4c <show_cgroup_get_path_and_warn@plt>
    1358:	subs	r4, r0, #0
    135c:	bge	1204 <log_oom_internal@plt+0x540>
    1360:	mov	r0, r9
    1364:	bl	b74 <log_get_max_level_realm@plt>
    1368:	cmp	r0, #2
    136c:	rsble	r4, r4, #0
    1370:	uxtble	r4, r4
    1374:	rsble	r4, r4, #0
    1378:	ble	13b4 <log_oom_internal@plt+0x6f0>
    137c:	ldr	r2, [pc, #1352]	; 18cc <log_oom_internal@plt+0xc08>
    1380:	ldr	r3, [pc, #1352]	; 18d0 <log_oom_internal@plt+0xc0c>
    1384:	add	r2, pc, r2
    1388:	str	r2, [sp, #4]
    138c:	add	r3, pc, r3
    1390:	ldr	r2, [pc, #1340]	; 18d4 <log_oom_internal@plt+0xc10>
    1394:	add	r3, r3, #32
    1398:	mov	r1, r4
    139c:	str	r3, [sp]
    13a0:	add	r2, pc, r2
    13a4:	mov	r3, #234	; 0xea
    13a8:	mov	r0, #3
    13ac:	bl	c70 <log_internal_realm@plt>
    13b0:	mov	r4, r0
    13b4:	ldr	r0, [sp, #48]	; 0x30
    13b8:	bl	b20 <free@plt>
    13bc:	ldr	r0, [sp, #44]	; 0x2c
    13c0:	bl	b20 <free@plt>
    13c4:	ldr	r0, [sp, #40]	; 0x28
    13c8:	bl	b20 <free@plt>
    13cc:	ldr	r0, [sp, #36]	; 0x24
    13d0:	cmp	r0, #0
    13d4:	beq	d98 <log_oom_internal@plt+0xd4>
    13d8:	bl	bb0 <sd_bus_flush_close_unref@plt>
    13dc:	b	d98 <log_oom_internal@plt+0xd4>
    13e0:	ldr	r0, [sp, #40]	; 0x28
    13e4:	bl	b20 <free@plt>
    13e8:	ldr	r0, [sp, #36]	; 0x24
    13ec:	cmp	r0, #0
    13f0:	beq	13f8 <log_oom_internal@plt+0x734>
    13f4:	bl	bb0 <sd_bus_flush_close_unref@plt>
    13f8:	cmp	r4, #0
    13fc:	movge	r4, #0
    1400:	bge	d98 <log_oom_internal@plt+0xd4>
    1404:	mov	r0, #0
    1408:	bl	b74 <log_get_max_level_realm@plt>
    140c:	cmp	r0, #2
    1410:	rsble	r4, r4, #0
    1414:	uxtble	r4, r4
    1418:	rsble	r4, r4, #0
    141c:	ble	d98 <log_oom_internal@plt+0xd4>
    1420:	ldr	r2, [pc, #1200]	; 18d8 <log_oom_internal@plt+0xc14>
    1424:	ldr	r3, [pc, #1200]	; 18dc <log_oom_internal@plt+0xc18>
    1428:	add	r2, pc, r2
    142c:	str	r2, [sp, #4]
    1430:	add	r3, pc, r3
    1434:	ldr	r2, [pc, #1188]	; 18e0 <log_oom_internal@plt+0xc1c>
    1438:	add	r3, r3, #32
    143c:	mov	r1, r4
    1440:	str	r3, [sp]
    1444:	add	r2, pc, r2
    1448:	ldr	r3, [pc, #1172]	; 18e4 <log_oom_internal@plt+0xc20>
    144c:	mov	r0, #3
    1450:	bl	c70 <log_internal_realm@plt>
    1454:	mov	r4, r0
    1458:	b	d98 <log_oom_internal@plt+0xd4>
    145c:	ldr	r3, [pc, #1156]	; 18e8 <log_oom_internal@plt+0xc24>
    1460:	mov	r2, #1
    1464:	add	r3, pc, r3
    1468:	strb	r2, [r3, #16]
    146c:	b	d48 <log_oom_internal@plt+0x84>
    1470:	mov	r1, #1
    1474:	ldrb	r2, [r5, #4]
    1478:	str	r1, [r3]
    147c:	mov	r8, #8
    1480:	b	1038 <log_oom_internal@plt+0x374>
    1484:	ldr	r3, [pc, #1120]	; 18ec <log_oom_internal@plt+0xc28>
    1488:	ldr	r1, [pc, #1120]	; 18f0 <log_oom_internal@plt+0xc2c>
    148c:	add	r3, pc, r3
    1490:	mov	r0, r4
    1494:	add	r3, r3, #12
    1498:	mov	r2, #48	; 0x30
    149c:	add	r1, pc, r1
    14a0:	bl	cc4 <log_oom_internal@plt>
    14a4:	mov	r4, r0
    14a8:	ldr	r0, [sp, #48]	; 0x30
    14ac:	bl	b20 <free@plt>
    14b0:	b	fe0 <log_oom_internal@plt+0x31c>
    14b4:	ldr	sl, [pc, #1080]	; 18f4 <log_oom_internal@plt+0xc30>
    14b8:	add	sl, pc, sl
    14bc:	b	1228 <log_oom_internal@plt+0x564>
    14c0:	ldr	r4, [r3, #20]
    14c4:	cmp	r4, #0
    14c8:	addne	r2, sp, #48	; 0x30
    14cc:	beq	1654 <log_oom_internal@plt+0x990>
    14d0:	ldr	r1, [pc, #1056]	; 18f8 <log_oom_internal@plt+0xc34>
    14d4:	mov	r4, #0
    14d8:	add	r1, pc, r1
    14dc:	str	r4, [sp, #48]	; 0x30
    14e0:	ldr	r0, [r1, #20]
    14e4:	mov	r1, r4
    14e8:	bl	c4c <show_cgroup_get_path_and_warn@plt>
    14ec:	subs	r5, r0, #0
    14f0:	bge	160c <log_oom_internal@plt+0x948>
    14f4:	mov	r0, r4
    14f8:	bl	b74 <log_get_max_level_realm@plt>
    14fc:	cmp	r0, #2
    1500:	bgt	17b0 <log_oom_internal@plt+0xaec>
    1504:	rsb	r4, r5, #0
    1508:	uxtb	r4, r4
    150c:	rsb	r4, r4, #0
    1510:	ldr	r0, [sp, #48]	; 0x30
    1514:	bl	b20 <free@plt>
    1518:	b	d98 <log_oom_internal@plt+0xd4>
    151c:	ldr	r2, [r5, #-4]
    1520:	ldr	r3, [pc, #980]	; 18fc <log_oom_internal@plt+0xc38>
    1524:	str	r2, [sp, #8]
    1528:	ldr	r2, [sp, #28]
    152c:	add	r3, pc, r3
    1530:	mov	r1, r9
    1534:	strd	r2, [sp]
    1538:	ldr	r2, [pc, #960]	; 1900 <log_oom_internal@plt+0xc3c>
    153c:	mov	r3, #239	; 0xef
    1540:	add	r2, pc, r2
    1544:	mov	r0, #3
    1548:	bl	c70 <log_internal_realm@plt>
    154c:	b	1328 <log_oom_internal@plt+0x664>
    1550:	ldr	r2, [pc, #940]	; 1904 <log_oom_internal@plt+0xc40>
    1554:	ldr	r1, [pc, #940]	; 1908 <log_oom_internal@plt+0xc44>
    1558:	add	r2, pc, r2
    155c:	str	r2, [sp]
    1560:	ldr	r2, [pc, #932]	; 190c <log_oom_internal@plt+0xc48>
    1564:	mov	r3, #91	; 0x5b
    1568:	add	r2, pc, r2
    156c:	add	r1, pc, r1
    1570:	mov	r0, #0
    1574:	bl	c64 <log_assert_failed_realm@plt>
    1578:	ldr	r3, [pc, #912]	; 1910 <log_oom_internal@plt+0xc4c>
    157c:	ldr	r2, [pc, #912]	; 1914 <log_oom_internal@plt+0xc50>
    1580:	ldr	r1, [pc, #912]	; 1918 <log_oom_internal@plt+0xc54>
    1584:	add	r3, pc, r3
    1588:	str	r3, [sp]
    158c:	mov	r0, r7
    1590:	mov	r3, #92	; 0x5c
    1594:	add	r2, pc, r2
    1598:	add	r1, pc, r1
    159c:	bl	c64 <log_assert_failed_realm@plt>
    15a0:	ldr	r3, [pc, #884]	; 191c <log_oom_internal@plt+0xc58>
    15a4:	add	r3, pc, r3
    15a8:	ldr	r2, [r3, #20]
    15ac:	cmp	r2, r4
    15b0:	beq	fe8 <log_oom_internal@plt+0x324>
    15b4:	ldr	r3, [r3, #8]
    15b8:	cmp	r3, #0
    15bc:	beq	fe8 <log_oom_internal@plt+0x324>
    15c0:	mov	r0, r4
    15c4:	bl	b74 <log_get_max_level_realm@plt>
    15c8:	cmp	r0, #2
    15cc:	ble	d94 <log_oom_internal@plt+0xd0>
    15d0:	ldr	r2, [pc, #840]	; 1920 <log_oom_internal@plt+0xc5c>
    15d4:	ldr	r3, [pc, #840]	; 1924 <log_oom_internal@plt+0xc60>
    15d8:	add	r2, pc, r2
    15dc:	str	r2, [sp, #4]
    15e0:	add	r3, pc, r3
    15e4:	ldr	r2, [pc, #828]	; 1928 <log_oom_internal@plt+0xc64>
    15e8:	add	r3, r3, #20
    15ec:	str	r3, [sp]
    15f0:	add	r2, pc, r2
    15f4:	mov	r3, #151	; 0x97
    15f8:	mov	r1, #1073741846	; 0x40000016
    15fc:	mov	r0, #3
    1600:	bl	c70 <log_internal_realm@plt>
    1604:	mov	r4, r0
    1608:	b	fe0 <log_oom_internal@plt+0x31c>
    160c:	ldr	r5, [pc, #792]	; 192c <log_oom_internal@plt+0xc68>
    1610:	ldr	r1, [sp, #48]	; 0x30
    1614:	add	r5, pc, r5
    1618:	mov	r0, r5
    161c:	bl	1af8 <log_oom_internal@plt+0xe34>
    1620:	ldr	r0, [pc, #776]	; 1930 <log_oom_internal@plt+0xc6c>
    1624:	add	r0, pc, r0
    1628:	bl	b68 <puts@plt>
    162c:	mov	r3, r4
    1630:	mov	r2, r4
    1634:	mov	r0, r5
    1638:	str	r8, [sp]
    163c:	ldr	r1, [sp, #48]	; 0x30
    1640:	bl	bec <show_cgroup@plt>
    1644:	mov	r4, r0
    1648:	ldr	r0, [sp, #48]	; 0x30
    164c:	bl	b20 <free@plt>
    1650:	b	13f8 <log_oom_internal@plt+0x734>
    1654:	add	r2, sp, #56	; 0x38
    1658:	str	r4, [r2, #-8]!
    165c:	mov	r0, r2
    1660:	str	r2, [sp, #16]
    1664:	bl	ca0 <safe_getcwd@plt>
    1668:	ldr	r2, [sp, #16]
    166c:	subs	r5, r0, #0
    1670:	blt	1764 <log_oom_internal@plt+0xaa0>
    1674:	ldr	r5, [sp, #48]	; 0x30
    1678:	ldr	r1, [pc, #692]	; 1934 <log_oom_internal@plt+0xc70>
    167c:	mov	r0, r5
    1680:	add	r1, pc, r1
    1684:	str	r2, [sp, #16]
    1688:	bl	b14 <path_startswith@plt>
    168c:	ldr	r2, [sp, #16]
    1690:	cmp	r0, #0
    1694:	beq	17ec <log_oom_internal@plt+0xb28>
    1698:	ldr	r1, [pc, #664]	; 1938 <log_oom_internal@plt+0xc74>
    169c:	mov	r2, r5
    16a0:	add	r1, pc, r1
    16a4:	mov	r0, #1
    16a8:	bl	cb8 <__printf_chk@plt>
    16ac:	ldr	r3, [pc, #516]	; 18b8 <log_oom_internal@plt+0xbf4>
    16b0:	ldr	r3, [r6, r3]
    16b4:	ldr	r0, [r3]
    16b8:	bl	c58 <fflush@plt>
    16bc:	mov	r2, r4
    16c0:	mov	r1, r4
    16c4:	mov	r3, r8
    16c8:	ldr	r0, [sp, #48]	; 0x30
    16cc:	bl	be0 <show_cgroup_by_path@plt>
    16d0:	mov	r4, r0
    16d4:	ldr	r0, [sp, #48]	; 0x30
    16d8:	bl	b20 <free@plt>
    16dc:	b	13f8 <log_oom_internal@plt+0x734>
    16e0:	mov	r0, sl
    16e4:	bl	b74 <log_get_max_level_realm@plt>
    16e8:	cmp	r0, #2
    16ec:	rsble	r4, r4, #0
    16f0:	uxtble	r4, r4
    16f4:	rsble	r4, r4, #0
    16f8:	ble	1734 <log_oom_internal@plt+0xa70>
    16fc:	ldr	r2, [pc, #568]	; 193c <log_oom_internal@plt+0xc78>
    1700:	ldr	r3, [pc, #568]	; 1940 <log_oom_internal@plt+0xc7c>
    1704:	add	r2, pc, r2
    1708:	str	r2, [sp, #4]
    170c:	add	r3, pc, r3
    1710:	ldr	r2, [pc, #556]	; 1944 <log_oom_internal@plt+0xc80>
    1714:	add	r3, r3, #32
    1718:	mov	r1, r4
    171c:	str	r3, [sp]
    1720:	add	r2, pc, r2
    1724:	mov	r3, #202	; 0xca
    1728:	mov	r0, #3
    172c:	bl	c70 <log_internal_realm@plt>
    1730:	mov	r4, r0
    1734:	ldr	r0, [sp, #48]	; 0x30
    1738:	bl	b20 <free@plt>
    173c:	b	13c4 <log_oom_internal@plt+0x700>
    1740:	ldr	r3, [pc, #512]	; 1948 <log_oom_internal@plt+0xc84>
    1744:	ldr	r1, [pc, #512]	; 194c <log_oom_internal@plt+0xc88>
    1748:	add	r3, pc, r3
    174c:	mov	r2, #247	; 0xf7
    1750:	add	r3, r3, #32
    1754:	add	r1, pc, r1
    1758:	bl	cc4 <log_oom_internal@plt>
    175c:	mov	r4, r0
    1760:	b	13b4 <log_oom_internal@plt+0x6f0>
    1764:	mov	r0, r4
    1768:	bl	b74 <log_get_max_level_realm@plt>
    176c:	cmp	r0, #2
    1770:	ble	1504 <log_oom_internal@plt+0x840>
    1774:	ldr	r2, [pc, #468]	; 1950 <log_oom_internal@plt+0xc8c>
    1778:	ldr	r3, [pc, #468]	; 1954 <log_oom_internal@plt+0xc90>
    177c:	add	r2, pc, r2
    1780:	str	r2, [sp, #4]
    1784:	add	r3, pc, r3
    1788:	ldr	r2, [pc, #456]	; 1958 <log_oom_internal@plt+0xc94>
    178c:	add	r3, r3, #32
    1790:	str	r3, [sp]
    1794:	mov	r1, r5
    1798:	mov	r3, #272	; 0x110
    179c:	add	r2, pc, r2
    17a0:	mov	r0, #3
    17a4:	bl	c70 <log_internal_realm@plt>
    17a8:	mov	r4, r0
    17ac:	b	1510 <log_oom_internal@plt+0x84c>
    17b0:	ldr	r2, [pc, #420]	; 195c <log_oom_internal@plt+0xc98>
    17b4:	ldr	r3, [pc, #420]	; 1960 <log_oom_internal@plt+0xc9c>
    17b8:	add	r2, pc, r2
    17bc:	str	r2, [sp, #4]
    17c0:	add	r3, pc, r3
    17c4:	ldr	r2, [pc, #408]	; 1964 <log_oom_internal@plt+0xca0>
    17c8:	add	r3, r3, #32
    17cc:	str	r3, [sp]
    17d0:	mov	r1, r5
    17d4:	mov	r3, #288	; 0x120
    17d8:	add	r2, pc, r2
    17dc:	mov	r0, #3
    17e0:	bl	c70 <log_internal_realm@plt>
    17e4:	mov	r4, r0
    17e8:	b	1510 <log_oom_internal@plt+0x84c>
    17ec:	mov	r0, r5
    17f0:	str	r2, [sp, #16]
    17f4:	bl	b20 <free@plt>
    17f8:	ldr	r2, [sp, #16]
    17fc:	b	14d0 <log_oom_internal@plt+0x80c>
    1800:	ldr	r2, [pc, #352]	; 1968 <log_oom_internal@plt+0xca4>
    1804:	ldr	r1, [pc, #352]	; 196c <log_oom_internal@plt+0xca8>
    1808:	add	r2, pc, r2
    180c:	str	r2, [sp]
    1810:	ldr	r2, [pc, #344]	; 1970 <log_oom_internal@plt+0xcac>
    1814:	mov	r3, #146	; 0x92
    1818:	add	r2, pc, r2
    181c:	add	r1, pc, r1
    1820:	mov	r0, #0
    1824:	bl	b38 <log_assert_failed_unreachable_realm@plt>
    1828:	bl	bc8 <__stack_chk_fail@plt>
    182c:	andeq	r2, r1, r0, asr #4
    1830:	andeq	r0, r0, r4, lsr #1
    1834:	andeq	r2, r1, r4, ror #5
    1838:	ldrdeq	r2, [r1], -ip
    183c:	andeq	r2, r1, ip, asr #32
    1840:	andeq	r1, r0, r8, asr #3
    1844:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1848:	strheq	r0, [r0], -r4
    184c:	andeq	r0, r0, r1, lsl #2
    1850:	andeq	r0, r0, ip, lsr #1
    1854:	ldrdeq	r0, [r0], -r8
    1858:	andeq	r0, r0, r0, lsr #28
    185c:	andeq	r0, r0, ip, ror sp
    1860:	andeq	r0, r0, r4, asr #27
    1864:			; <UNDEFINED> instruction: 0x00000db4
    1868:			; <UNDEFINED> instruction: 0x00000db8
    186c:	andeq	r0, r0, r8, asr #1
    1870:	andeq	r0, r0, r8, lsr #27
    1874:	ldrdeq	r2, [r1], -r0
    1878:	strheq	r2, [r1], -r8
    187c:	andeq	r2, r1, r0, lsr #1
    1880:	andeq	r0, r0, r0, lsr #25
    1884:	andeq	r0, r0, r8, ror #25
    1888:	andeq	r2, r1, r8, asr #32
    188c:	andeq	r2, r1, r8, asr #32
    1890:	andeq	r2, r1, r0, lsr #32
    1894:	strdeq	r1, [r1], -r8
    1898:	andeq	r1, r1, r0, ror #31
    189c:	andeq	r1, r1, ip, ror #31
    18a0:	andeq	r1, r1, ip, asr #31
    18a4:	andeq	r0, r0, ip, asr #23
    18a8:			; <UNDEFINED> instruction: 0x00000bbc
    18ac:	strdeq	r0, [r0], -ip
    18b0:	andeq	r1, r1, ip, ror pc
    18b4:	andeq	r0, r0, r0, asr #30
    18b8:	strheq	r0, [r0], -ip
    18bc:	andeq	r0, r0, r8, lsl #28
    18c0:	andeq	r0, r0, r8, lsl #20
    18c4:	andeq	r0, r0, r8, ror ip
    18c8:	andeq	r0, r0, r0, lsl #19
    18cc:	andeq	r0, r0, r8, lsl ip
    18d0:	andeq	r0, r0, r0, lsr #17
    18d4:	andeq	r0, r0, r4, ror #17
    18d8:	andeq	r0, r0, r4, ror fp
    18dc:	strdeq	r0, [r0], -ip
    18e0:	andeq	r0, r0, r0, asr #16
    18e4:	andeq	r0, r0, r9, lsr #2
    18e8:	andeq	r1, r1, r8, lsr #23
    18ec:	andeq	r0, r0, r0, lsr #15
    18f0:	andeq	r0, r0, r8, ror #15
    18f4:	muleq	r0, ip, r7
    18f8:	andeq	r1, r1, r4, lsr fp
    18fc:	muleq	r0, r0, sl
    1900:	andeq	r0, r0, r4, asr #14
    1904:	ldrdeq	r0, [r0], -r4
    1908:	andeq	r0, r0, ip, lsr #14
    190c:	andeq	r0, r0, ip, lsl r7
    1910:	andeq	r0, r0, r8, lsr #13
    1914:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1918:	andeq	r0, r0, ip, lsl #14
    191c:	andeq	r1, r1, r8, ror #20
    1920:	andeq	r0, r0, r4, lsr r9
    1924:	andeq	r0, r0, ip, asr #12
    1928:	muleq	r0, r4, r6
    192c:	andeq	r0, r0, r0, asr #12
    1930:	andeq	r0, r0, r0, lsl #20
    1934:	strdeq	r0, [r0], -ip
    1938:	andeq	r0, r0, ip, ror #18
    193c:	andeq	r0, r0, r0, asr #16
    1940:	andeq	r0, r0, r0, lsr #10
    1944:	andeq	r0, r0, r4, ror #10
    1948:	andeq	r0, r0, r4, ror #9
    194c:	andeq	r0, r0, r0, lsr r5
    1950:	andeq	r0, r0, r0, ror #16
    1954:	andeq	r0, r0, r8, lsr #9
    1958:	andeq	r0, r0, r8, ror #9
    195c:	andeq	r0, r0, r4, ror #15
    1960:	andeq	r0, r0, ip, ror #8
    1964:	andeq	r0, r0, ip, lsr #9
    1968:	andeq	r0, r0, r4, lsr #8
    196c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1970:	andeq	r0, r0, ip, ror #8
    1974:	mov	fp, #0
    1978:	mov	lr, #0
    197c:	pop	{r1}		; (ldr r1, [sp], #4)
    1980:	mov	r2, sp
    1984:	push	{r2}		; (str r2, [sp, #-4]!)
    1988:	push	{r0}		; (str r0, [sp, #-4]!)
    198c:	ldr	sl, [pc, #40]	; 19bc <log_oom_internal@plt+0xcf8>
    1990:	add	r3, pc, #36	; 0x24
    1994:	add	sl, sl, r3
    1998:	ldr	ip, [pc, #32]	; 19c0 <log_oom_internal@plt+0xcfc>
    199c:	ldr	ip, [sl, ip]
    19a0:	push	{ip}		; (str ip, [sp, #-4]!)
    19a4:	ldr	r3, [pc, #24]	; 19c4 <log_oom_internal@plt+0xd00>
    19a8:	ldr	r3, [sl, r3]
    19ac:	ldr	r0, [pc, #20]	; 19c8 <log_oom_internal@plt+0xd04>
    19b0:	ldr	r0, [sl, r0]
    19b4:	bl	c88 <__libc_start_main@plt>
    19b8:	bl	b98 <abort@plt>
    19bc:	andeq	r1, r1, ip, ror #10
    19c0:	andeq	r0, r0, r4, asr #1
    19c4:	strheq	r0, [r0], -r8
    19c8:	andeq	r0, r0, r8, lsr #1
    19cc:	ldr	r3, [pc, #20]	; 19e8 <log_oom_internal@plt+0xd24>
    19d0:	ldr	r2, [pc, #20]	; 19ec <log_oom_internal@plt+0xd28>
    19d4:	add	r3, pc, r3
    19d8:	ldr	r2, [r3, r2]
    19dc:	cmp	r2, #0
    19e0:	bxeq	lr
    19e4:	b	c94 <__gmon_start__@plt>
    19e8:	andeq	r1, r1, ip, asr #10
    19ec:	andeq	r0, r0, ip, asr #1
    19f0:	ldr	r0, [pc, #44]	; 1a24 <log_oom_internal@plt+0xd60>
    19f4:	ldr	r3, [pc, #44]	; 1a28 <log_oom_internal@plt+0xd64>
    19f8:	add	r0, pc, r0
    19fc:	add	r3, pc, r3
    1a00:	cmp	r3, r0
    1a04:	ldr	r3, [pc, #32]	; 1a2c <log_oom_internal@plt+0xd68>
    1a08:	add	r3, pc, r3
    1a0c:	bxeq	lr
    1a10:	ldr	r2, [pc, #24]	; 1a30 <log_oom_internal@plt+0xd6c>
    1a14:	ldr	r3, [r3, r2]
    1a18:	cmp	r3, #0
    1a1c:	bxeq	lr
    1a20:	bx	r3
    1a24:	andeq	r1, r1, r8, lsl #12
    1a28:	andeq	r1, r1, r4, lsl #12
    1a2c:	andeq	r1, r1, r8, lsl r5
    1a30:	andeq	r0, r0, r0, asr #1
    1a34:	ldr	r0, [pc, #56]	; 1a74 <log_oom_internal@plt+0xdb0>
    1a38:	ldr	r3, [pc, #56]	; 1a78 <log_oom_internal@plt+0xdb4>
    1a3c:	add	r0, pc, r0
    1a40:	add	r3, pc, r3
    1a44:	sub	r1, r3, r0
    1a48:	ldr	r3, [pc, #44]	; 1a7c <log_oom_internal@plt+0xdb8>
    1a4c:	asr	r1, r1, #2
    1a50:	add	r3, pc, r3
    1a54:	add	r1, r1, r1, lsr #31
    1a58:	asrs	r1, r1, #1
    1a5c:	bxeq	lr
    1a60:	ldr	r2, [pc, #24]	; 1a80 <log_oom_internal@plt+0xdbc>
    1a64:	ldr	r3, [r3, r2]
    1a68:	cmp	r3, #0
    1a6c:	bxeq	lr
    1a70:	bx	r3
    1a74:	andeq	r1, r1, r4, asr #11
    1a78:	andeq	r1, r1, r0, asr #11
    1a7c:	ldrdeq	r1, [r1], -r0
    1a80:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1a84:	ldr	r3, [pc, #76]	; 1ad8 <log_oom_internal@plt+0xe14>
    1a88:	ldr	r2, [pc, #76]	; 1adc <log_oom_internal@plt+0xe18>
    1a8c:	add	r3, pc, r3
    1a90:	add	r2, pc, r2
    1a94:	ldrb	r3, [r3]
    1a98:	cmp	r3, #0
    1a9c:	bxne	lr
    1aa0:	ldr	r3, [pc, #56]	; 1ae0 <log_oom_internal@plt+0xe1c>
    1aa4:	push	{r4, lr}
    1aa8:	ldr	r3, [r2, r3]
    1aac:	cmp	r3, #0
    1ab0:	beq	1ac0 <log_oom_internal@plt+0xdfc>
    1ab4:	ldr	r3, [pc, #40]	; 1ae4 <log_oom_internal@plt+0xe20>
    1ab8:	ldr	r0, [pc, r3]
    1abc:	bl	cac <__cxa_finalize@plt>
    1ac0:	bl	19f0 <log_oom_internal@plt+0xd2c>
    1ac4:	ldr	r3, [pc, #28]	; 1ae8 <log_oom_internal@plt+0xe24>
    1ac8:	mov	r2, #1
    1acc:	add	r3, pc, r3
    1ad0:	strb	r2, [r3]
    1ad4:	pop	{r4, pc}
    1ad8:	andeq	r1, r1, ip, ror r5
    1adc:	muleq	r1, r0, r4
    1ae0:	ldrdeq	r0, [r0], -r4
    1ae4:	andeq	r1, r1, r0, asr #10
    1ae8:	andeq	r1, r1, ip, lsr r5
    1aec:	b	1a34 <log_oom_internal@plt+0xd70>
    1af0:	ldr	r0, [r0]
    1af4:	b	b20 <free@plt>
    1af8:	push	{r4, r5, r6, lr}
    1afc:	mov	r6, r0
    1b00:	mov	r4, r1
    1b04:	bl	ba4 <cg_all_unified@plt>
    1b08:	adds	r3, r6, #0
    1b0c:	movne	r3, #1
    1b10:	ldr	r5, [pc, #148]	; 1bac <log_oom_internal@plt+0xee8>
    1b14:	add	r5, pc, r5
    1b18:	cmp	r0, #0
    1b1c:	moveq	r0, r3
    1b20:	movne	r0, #0
    1b24:	cmp	r0, #0
    1b28:	bne	1b6c <log_oom_internal@plt+0xea8>
    1b2c:	cmp	r4, #0
    1b30:	beq	1ba0 <log_oom_internal@plt+0xedc>
    1b34:	ldrb	r3, [r4]
    1b38:	cmp	r3, #0
    1b3c:	ldreq	r4, [pc, #108]	; 1bb0 <log_oom_internal@plt+0xeec>
    1b40:	addeq	r4, pc, r4
    1b44:	ldr	r1, [pc, #104]	; 1bb4 <log_oom_internal@plt+0xef0>
    1b48:	mov	r2, r4
    1b4c:	add	r1, pc, r1
    1b50:	mov	r0, #1
    1b54:	bl	cb8 <__printf_chk@plt>
    1b58:	ldr	r3, [pc, #88]	; 1bb8 <log_oom_internal@plt+0xef4>
    1b5c:	ldr	r3, [r5, r3]
    1b60:	pop	{r4, r5, r6, lr}
    1b64:	ldr	r0, [r3]
    1b68:	b	c58 <fflush@plt>
    1b6c:	ldr	r1, [pc, #72]	; 1bbc <log_oom_internal@plt+0xef8>
    1b70:	mov	r0, r6
    1b74:	add	r1, pc, r1
    1b78:	bl	c34 <strcmp@plt>
    1b7c:	cmp	r0, #0
    1b80:	beq	1b2c <log_oom_internal@plt+0xe68>
    1b84:	ldr	r1, [pc, #52]	; 1bc0 <log_oom_internal@plt+0xefc>
    1b88:	mov	r2, r6
    1b8c:	add	r1, pc, r1
    1b90:	mov	r0, #1
    1b94:	bl	cb8 <__printf_chk@plt>
    1b98:	cmp	r4, #0
    1b9c:	bne	1b34 <log_oom_internal@plt+0xe70>
    1ba0:	ldr	r4, [pc, #28]	; 1bc4 <log_oom_internal@plt+0xf00>
    1ba4:	add	r4, pc, r4
    1ba8:	b	1b44 <log_oom_internal@plt+0xe80>
    1bac:	andeq	r1, r1, ip, lsl #8
    1bb0:	andeq	r0, r0, r0, lsl r1
    1bb4:	andeq	r0, r0, r4, lsr #2
    1bb8:	strheq	r0, [r0], -ip
    1bbc:	andeq	r0, r0, r0, ror #1
    1bc0:	ldrdeq	r0, [r0], -r4
    1bc4:	andeq	r0, r0, ip, lsr #1
    1bc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1bcc:	mov	r7, r0
    1bd0:	ldr	r6, [pc, #72]	; 1c20 <log_oom_internal@plt+0xf5c>
    1bd4:	ldr	r5, [pc, #72]	; 1c24 <log_oom_internal@plt+0xf60>
    1bd8:	add	r6, pc, r6
    1bdc:	add	r5, pc, r5
    1be0:	sub	r6, r6, r5
    1be4:	mov	r8, r1
    1be8:	mov	r9, r2
    1bec:	bl	ae8 <version@plt-0x20>
    1bf0:	asrs	r6, r6, #2
    1bf4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    1bf8:	mov	r4, #0
    1bfc:	add	r4, r4, #1
    1c00:	ldr	r3, [r5], #4
    1c04:	mov	r2, r9
    1c08:	mov	r1, r8
    1c0c:	mov	r0, r7
    1c10:	blx	r3
    1c14:	cmp	r6, r4
    1c18:	bne	1bfc <log_oom_internal@plt+0xf38>
    1c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1c20:	andeq	r1, r1, r4, lsr #3
    1c24:	muleq	r1, ip, r1
    1c28:	bx	lr

Disassembly of section .fini:

00001c2c <.fini>:
    1c2c:	push	{r3, lr}
    1c30:	pop	{r3, pc}
