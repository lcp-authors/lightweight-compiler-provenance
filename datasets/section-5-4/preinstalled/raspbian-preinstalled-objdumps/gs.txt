
raspbian-preinstalled/gs:     file format elf32-littlearm


Disassembly of section .init:

000106c0 <.init>:
   106c0:	push	{r3, lr}
   106c4:	bl	1090c <__gmon_start__@plt+0x190>
   106c8:	pop	{r3, pc}

Disassembly of section .plt:

000106cc <gsapi_init_with_args@plt-0x14>:
   106cc:	push	{lr}		; (str lr, [sp, #-4]!)
   106d0:	ldr	lr, [pc, #4]	; 106dc <gsapi_init_with_args@plt-0x4>
   106d4:	add	lr, pc, lr
   106d8:	ldr	pc, [lr, #8]!
   106dc:	andeq	r0, r1, r4, lsr #18

000106e0 <gsapi_init_with_args@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #16, 20	; 0x10000
   106e8:	ldr	pc, [ip, #2340]!	; 0x924

000106ec <gsapi_new_instance@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #16, 20	; 0x10000
   106f4:	ldr	pc, [ip, #2332]!	; 0x91c

000106f8 <read@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #16, 20	; 0x10000
   10700:	ldr	pc, [ip, #2324]!	; 0x914

00010704 <abort@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #16, 20	; 0x10000
   1070c:	ldr	pc, [ip, #2316]!	; 0x90c

00010710 <gsapi_delete_instance@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #16, 20	; 0x10000
   10718:	ldr	pc, [ip, #2308]!	; 0x904

0001071c <fileno@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #16, 20	; 0x10000
   10724:	ldr	pc, [ip, #2300]!	; 0x8fc

00010728 <__stack_chk_fail@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #16, 20	; 0x10000
   10730:	ldr	pc, [ip, #2292]!	; 0x8f4

00010734 <gsapi_run_string@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #16, 20	; 0x10000
   1073c:	ldr	pc, [ip, #2284]!	; 0x8ec

00010740 <fwrite@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #16, 20	; 0x10000
   10748:	ldr	pc, [ip, #2276]!	; 0x8e4

0001074c <gsapi_set_stdio@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #16, 20	; 0x10000
   10754:	ldr	pc, [ip, #2268]!	; 0x8dc

00010758 <gsapi_exit@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #16, 20	; 0x10000
   10760:	ldr	pc, [ip, #2260]!	; 0x8d4

00010764 <fflush@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #16, 20	; 0x10000
   1076c:	ldr	pc, [ip, #2252]!	; 0x8cc

00010770 <__libc_start_main@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #16, 20	; 0x10000
   10778:	ldr	pc, [ip, #2244]!	; 0x8c4

0001077c <__gmon_start__@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #16, 20	; 0x10000
   10784:	ldr	pc, [ip, #2236]!	; 0x8bc

Disassembly of section .text:

00010788 <.text>:
   10788:	push	{r4, r5, r6, r7, r8, lr}
   1078c:	mov	r2, #0
   10790:	ldr	r5, [pc, #288]	; 108b8 <__gmon_start__@plt+0x13c>
   10794:	ldr	r3, [pc, #288]	; 108bc <__gmon_start__@plt+0x140>
   10798:	add	r5, pc, r5
   1079c:	sub	sp, sp, #16
   107a0:	ldr	r6, [r5, r3]
   107a4:	mov	r7, r0
   107a8:	mov	r8, r1
   107ac:	ldr	r3, [r6]
   107b0:	mov	r1, r2
   107b4:	add	r0, sp, #4
   107b8:	str	r2, [sp, #4]
   107bc:	str	r3, [sp, #12]
   107c0:	bl	106ec <gsapi_new_instance@plt>
   107c4:	subs	r4, r0, #0
   107c8:	beq	10818 <__gmon_start__@plt+0x9c>
   107cc:	cmn	r4, #101	; 0x65
   107d0:	beq	108ac <__gmon_start__@plt+0x130>
   107d4:	ble	10808 <__gmon_start__@plt+0x8c>
   107d8:	cmn	r4, #100	; 0x64
   107dc:	moveq	r4, #1
   107e0:	beq	107ec <__gmon_start__@plt+0x70>
   107e4:	cmp	r4, #0
   107e8:	movne	r4, #255	; 0xff
   107ec:	ldr	r2, [sp, #12]
   107f0:	ldr	r3, [r6]
   107f4:	mov	r0, r4
   107f8:	cmp	r2, r3
   107fc:	bne	108b4 <__gmon_start__@plt+0x138>
   10800:	add	sp, sp, #16
   10804:	pop	{r4, r5, r6, r7, r8, pc}
   10808:	cmn	r4, #110	; 0x6e
   1080c:	moveq	r4, #0
   10810:	movne	r4, #255	; 0xff
   10814:	b	107ec <__gmon_start__@plt+0x70>
   10818:	ldr	r3, [pc, #160]	; 108c0 <__gmon_start__@plt+0x144>
   1081c:	ldr	r2, [pc, #160]	; 108c4 <__gmon_start__@plt+0x148>
   10820:	ldr	r1, [pc, #160]	; 108c8 <__gmon_start__@plt+0x14c>
   10824:	add	r3, pc, r3
   10828:	add	r2, pc, r2
   1082c:	add	r1, pc, r1
   10830:	ldr	r0, [sp, #4]
   10834:	bl	1074c <gsapi_set_stdio@plt>
   10838:	mov	r1, r7
   1083c:	mov	r2, r8
   10840:	ldr	r0, [sp, #4]
   10844:	bl	106e0 <gsapi_init_with_args@plt>
   10848:	subs	r7, r0, #0
   1084c:	beq	1088c <__gmon_start__@plt+0x110>
   10850:	ldr	r0, [sp, #4]
   10854:	bl	10758 <gsapi_exit@plt>
   10858:	cmn	r7, #101	; 0x65
   1085c:	cmpne	r7, #0
   10860:	bne	1087c <__gmon_start__@plt+0x100>
   10864:	cmn	r0, #101	; 0x65
   10868:	bne	10878 <__gmon_start__@plt+0xfc>
   1086c:	ldr	r0, [sp, #4]
   10870:	bl	10710 <gsapi_delete_instance@plt>
   10874:	b	107ec <__gmon_start__@plt+0x70>
   10878:	mov	r7, r0
   1087c:	ldr	r0, [sp, #4]
   10880:	bl	10710 <gsapi_delete_instance@plt>
   10884:	mov	r4, r7
   10888:	b	107cc <__gmon_start__@plt+0x50>
   1088c:	ldr	r1, [pc, #56]	; 108cc <__gmon_start__@plt+0x150>
   10890:	mov	r2, r7
   10894:	add	r3, sp, #8
   10898:	ldr	r1, [r5, r1]
   1089c:	ldr	r0, [sp, #4]
   108a0:	bl	10734 <gsapi_run_string@plt>
   108a4:	mov	r7, r0
   108a8:	b	10850 <__gmon_start__@plt+0xd4>
   108ac:	mov	r4, #0
   108b0:	b	107ec <__gmon_start__@plt+0x70>
   108b4:	bl	10728 <__stack_chk_fail@plt>
   108b8:	andeq	r0, r1, r0, ror #16
   108bc:	andeq	r0, r0, r8, asr #32
   108c0:	muleq	r0, r4, r1
   108c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   108c8:	andeq	r0, r0, ip, lsl #4
   108cc:	andeq	r0, r0, ip, asr #32
   108d0:	mov	fp, #0
   108d4:	mov	lr, #0
   108d8:	pop	{r1}		; (ldr r1, [sp], #4)
   108dc:	mov	r2, sp
   108e0:	push	{r2}		; (str r2, [sp, #-4]!)
   108e4:	push	{r0}		; (str r0, [sp, #-4]!)
   108e8:	ldr	ip, [pc, #16]	; 10900 <__gmon_start__@plt+0x184>
   108ec:	push	{ip}		; (str ip, [sp, #-4]!)
   108f0:	ldr	r0, [pc, #12]	; 10904 <__gmon_start__@plt+0x188>
   108f4:	ldr	r3, [pc, #12]	; 10908 <__gmon_start__@plt+0x18c>
   108f8:	bl	10770 <__libc_start_main@plt>
   108fc:	bl	10704 <abort@plt>
   10900:	ldrdeq	r0, [r1], -ip
   10904:	andeq	r0, r1, r8, lsl #15
   10908:	andeq	r0, r1, ip, ror sl
   1090c:	ldr	r3, [pc, #20]	; 10928 <__gmon_start__@plt+0x1ac>
   10910:	ldr	r2, [pc, #20]	; 1092c <__gmon_start__@plt+0x1b0>
   10914:	add	r3, pc, r3
   10918:	ldr	r2, [r3, r2]
   1091c:	cmp	r2, #0
   10920:	bxeq	lr
   10924:	b	1077c <__gmon_start__@plt>
   10928:	andeq	r0, r1, r4, ror #13
   1092c:	andeq	r0, r0, r8, asr r0
   10930:	ldr	r0, [pc, #24]	; 10950 <__gmon_start__@plt+0x1d4>
   10934:	ldr	r3, [pc, #24]	; 10954 <__gmon_start__@plt+0x1d8>
   10938:	cmp	r3, r0
   1093c:	bxeq	lr
   10940:	ldr	r3, [pc, #16]	; 10958 <__gmon_start__@plt+0x1dc>
   10944:	cmp	r3, #0
   10948:	bxeq	lr
   1094c:	bx	r3
   10950:	andeq	r1, r2, r4, rrx
   10954:	andeq	r1, r2, r4, rrx
   10958:	andeq	r0, r0, r0
   1095c:	ldr	r0, [pc, #36]	; 10988 <__gmon_start__@plt+0x20c>
   10960:	ldr	r1, [pc, #36]	; 1098c <__gmon_start__@plt+0x210>
   10964:	sub	r1, r1, r0
   10968:	asr	r1, r1, #2
   1096c:	add	r1, r1, r1, lsr #31
   10970:	asrs	r1, r1, #1
   10974:	bxeq	lr
   10978:	ldr	r3, [pc, #16]	; 10990 <__gmon_start__@plt+0x214>
   1097c:	cmp	r3, #0
   10980:	bxeq	lr
   10984:	bx	r3
   10988:	andeq	r1, r2, r4, rrx
   1098c:	andeq	r1, r2, r4, rrx
   10990:	andeq	r0, r0, r0
   10994:	push	{r4, lr}
   10998:	ldr	r4, [pc, #24]	; 109b8 <__gmon_start__@plt+0x23c>
   1099c:	ldrb	r3, [r4]
   109a0:	cmp	r3, #0
   109a4:	popne	{r4, pc}
   109a8:	bl	10930 <__gmon_start__@plt+0x1b4>
   109ac:	mov	r3, #1
   109b0:	strb	r3, [r4]
   109b4:	pop	{r4, pc}
   109b8:	andeq	r1, r2, r4, rrx
   109bc:	b	1095c <__gmon_start__@plt+0x1e0>
   109c0:	ldr	r3, [pc, #48]	; 109f8 <__gmon_start__@plt+0x27c>
   109c4:	ldr	ip, [pc, #48]	; 109fc <__gmon_start__@plt+0x280>
   109c8:	add	r3, pc, r3
   109cc:	push	{r4, r5, r6, lr}
   109d0:	mov	r0, r1
   109d4:	ldr	r4, [r3, ip]
   109d8:	mov	r1, #1
   109dc:	mov	r5, r2
   109e0:	ldr	r3, [r4]
   109e4:	bl	10740 <fwrite@plt>
   109e8:	ldr	r0, [r4]
   109ec:	bl	10764 <fflush@plt>
   109f0:	mov	r0, r5
   109f4:	pop	{r4, r5, r6, pc}
   109f8:	andeq	r0, r1, r0, lsr r6
   109fc:	andeq	r0, r0, r0, asr r0
   10a00:	ldr	r3, [pc, #48]	; 10a38 <__gmon_start__@plt+0x2bc>
   10a04:	ldr	ip, [pc, #48]	; 10a3c <__gmon_start__@plt+0x2c0>
   10a08:	add	r3, pc, r3
   10a0c:	push	{r4, r5, r6, lr}
   10a10:	mov	r0, r1
   10a14:	ldr	r4, [r3, ip]
   10a18:	mov	r1, #1
   10a1c:	mov	r5, r2
   10a20:	ldr	r3, [r4]
   10a24:	bl	10740 <fwrite@plt>
   10a28:	ldr	r0, [r4]
   10a2c:	bl	10764 <fflush@plt>
   10a30:	mov	r0, r5
   10a34:	pop	{r4, r5, r6, pc}
   10a38:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10a3c:	andeq	r0, r0, r4, asr r0
   10a40:	ldr	r3, [pc, #44]	; 10a74 <__gmon_start__@plt+0x2f8>
   10a44:	ldr	r0, [pc, #44]	; 10a78 <__gmon_start__@plt+0x2fc>
   10a48:	add	r3, pc, r3
   10a4c:	push	{r4, r5, r6, lr}
   10a50:	mov	r5, r2
   10a54:	ldr	r2, [r3, r0]
   10a58:	mov	r4, r1
   10a5c:	ldr	r0, [r2]
   10a60:	bl	1071c <fileno@plt>
   10a64:	mov	r2, r5
   10a68:	mov	r1, r4
   10a6c:	pop	{r4, r5, r6, lr}
   10a70:	b	106f8 <read@plt>
   10a74:			; <UNDEFINED> instruction: 0x000105b0
   10a78:	andeq	r0, r0, r4, asr #32
   10a7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a80:	mov	r7, r0
   10a84:	ldr	r6, [pc, #72]	; 10ad4 <__gmon_start__@plt+0x358>
   10a88:	ldr	r5, [pc, #72]	; 10ad8 <__gmon_start__@plt+0x35c>
   10a8c:	add	r6, pc, r6
   10a90:	add	r5, pc, r5
   10a94:	sub	r6, r6, r5
   10a98:	mov	r8, r1
   10a9c:	mov	r9, r2
   10aa0:	bl	106c0 <gsapi_init_with_args@plt-0x20>
   10aa4:	asrs	r6, r6, #2
   10aa8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10aac:	mov	r4, #0
   10ab0:	add	r4, r4, #1
   10ab4:	ldr	r3, [r5], #4
   10ab8:	mov	r2, r9
   10abc:	mov	r1, r8
   10ac0:	mov	r0, r7
   10ac4:	blx	r3
   10ac8:	cmp	r6, r4
   10acc:	bne	10ab0 <__gmon_start__@plt+0x334>
   10ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ad4:	andeq	r0, r1, r0, ror r4
   10ad8:	andeq	r0, r1, r8, ror #8
   10adc:	bx	lr

Disassembly of section .fini:

00010ae0 <.fini>:
   10ae0:	push	{r3, lr}
   10ae4:	pop	{r3, pc}
