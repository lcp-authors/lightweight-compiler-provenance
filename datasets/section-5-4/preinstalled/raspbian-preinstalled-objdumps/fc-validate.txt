
raspbian-preinstalled/fc-validate:     file format elf32-littlearm


Disassembly of section .init:

00010898 <_init@@Base>:
   10898:	push	{r3, lr}
   1089c:	bl	10ed0 <exit@plt+0x4ec>
   108a0:	pop	{r3, pc}

Disassembly of section .plt:

000108a4 <abort@plt-0x14>:
   108a4:	push	{lr}		; (str lr, [sp, #-4]!)
   108a8:	ldr	lr, [pc, #4]	; 108b4 <_init@@Base+0x1c>
   108ac:	add	lr, pc, lr
   108b0:	ldr	pc, [lr, #8]!
   108b4:	andeq	r1, r1, ip, asr #14

000108b8 <abort@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #69632	; 0x11000
   108c0:	ldr	pc, [ip, #1868]!	; 0x74c

000108c4 <__libc_start_main@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #69632	; 0x11000
   108cc:	ldr	pc, [ip, #1860]!	; 0x744

000108d0 <FcCharSetSubtract@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #69632	; 0x11000
   108d8:	ldr	pc, [ip, #1852]!	; 0x73c

000108dc <__gmon_start__@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #69632	; 0x11000
   108e4:	ldr	pc, [ip, #1844]!	; 0x734

000108e8 <__printf_chk@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #69632	; 0x11000
   108f0:	ldr	pc, [ip, #1836]!	; 0x72c

000108f4 <FcFini@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #69632	; 0x11000
   108fc:	ldr	pc, [ip, #1828]!	; 0x724

00010900 <FT_Done_FreeType@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #69632	; 0x11000
   10908:	ldr	pc, [ip, #1820]!	; 0x71c

0001090c <getopt_long@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #69632	; 0x11000
   10914:	ldr	pc, [ip, #1812]!	; 0x714

00010918 <dcgettext@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #69632	; 0x11000
   10920:	ldr	pc, [ip, #1804]!	; 0x70c

00010924 <FcCharSetNextPage@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #69632	; 0x11000
   1092c:	ldr	pc, [ip, #1796]!	; 0x704

00010930 <setlocale@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #69632	; 0x11000
   10938:	ldr	pc, [ip, #1788]!	; 0x6fc

0001093c <FcCharSetCount@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #69632	; 0x11000
   10944:	ldr	pc, [ip, #1780]!	; 0x6f4

00010948 <FT_Init_FreeType@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #69632	; 0x11000
   10950:	ldr	pc, [ip, #1772]!	; 0x6ec

00010954 <strtol@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #69632	; 0x11000
   1095c:	ldr	pc, [ip, #1764]!	; 0x6e4

00010960 <FcLangGetCharSet@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #69632	; 0x11000
   10968:	ldr	pc, [ip, #1756]!	; 0x6dc

0001096c <__stack_chk_fail@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #69632	; 0x11000
   10974:	ldr	pc, [ip, #1748]!	; 0x6d4

00010978 <__fprintf_chk@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #69632	; 0x11000
   10980:	ldr	pc, [ip, #1740]!	; 0x6cc

00010984 <fputc@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #69632	; 0x11000
   1098c:	ldr	pc, [ip, #1732]!	; 0x6c4

00010990 <FcStrFree@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #69632	; 0x11000
   10998:	ldr	pc, [ip, #1724]!	; 0x6bc

0001099c <FcCharSetDestroy@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #69632	; 0x11000
   109a4:	ldr	pc, [ip, #1716]!	; 0x6b4

000109a8 <FcLangNormalize@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #69632	; 0x11000
   109b0:	ldr	pc, [ip, #1708]!	; 0x6ac

000109b4 <FT_New_Face@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #69632	; 0x11000
   109bc:	ldr	pc, [ip, #1700]!	; 0x6a4

000109c0 <FcFreeTypeCharSet@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #69632	; 0x11000
   109c8:	ldr	pc, [ip, #1692]!	; 0x69c

000109cc <FcCharSetFirstPage@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #69632	; 0x11000
   109d4:	ldr	pc, [ip, #1684]!	; 0x694

000109d8 <FT_Done_Face@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #69632	; 0x11000
   109e0:	ldr	pc, [ip, #1676]!	; 0x68c

000109e4 <exit@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #69632	; 0x11000
   109ec:	ldr	pc, [ip, #1668]!	; 0x684

Disassembly of section .text:

000109f0 <.text>:
   109f0:	ldr	r3, [pc, #1124]	; 10e5c <exit@plt+0x478>
   109f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109f8:	sub	sp, sp, #108	; 0x6c
   109fc:	ldr	r7, [pc, #1116]	; 10e60 <exit@plt+0x47c>
   10a00:	ldr	r6, [pc, #1116]	; 10e64 <exit@plt+0x480>
   10a04:	ldr	r8, [pc, #1116]	; 10e68 <exit@plt+0x484>
   10a08:	ldr	r3, [r3]
   10a0c:	mov	r9, #0
   10a10:	str	r0, [sp, #48]	; 0x30
   10a14:	mov	r5, r0
   10a18:	mov	sl, r1
   10a1c:	mov	r0, #6
   10a20:	ldr	r1, [pc, #1092]	; 10e6c <exit@plt+0x488>
   10a24:	str	r9, [sp, #32]
   10a28:	str	r3, [sp, #100]	; 0x64
   10a2c:	str	r9, [sp, #16]
   10a30:	bl	10930 <setlocale@plt>
   10a34:	str	r9, [sp, #36]	; 0x24
   10a38:	mov	r4, #0
   10a3c:	str	r4, [sp]
   10a40:	mov	r3, r7
   10a44:	mov	r2, r6
   10a48:	mov	r1, sl
   10a4c:	mov	r0, r5
   10a50:	bl	1090c <getopt_long@plt>
   10a54:	cmn	r0, #1
   10a58:	beq	10b54 <exit@plt+0x170>
   10a5c:	sub	r0, r0, #86	; 0x56
   10a60:	cmp	r0, #32
   10a64:	ldrls	pc, [pc, r0, lsl #2]
   10a68:	b	10e4c <exit@plt+0x468>
   10a6c:	andeq	r0, r1, r8, lsr #22
   10a70:	andeq	r0, r1, ip, asr #28
   10a74:	andeq	r0, r1, ip, asr #28
   10a78:	andeq	r0, r1, ip, asr #28
   10a7c:	andeq	r0, r1, ip, asr #28
   10a80:	andeq	r0, r1, ip, asr #28
   10a84:	andeq	r0, r1, ip, asr #28
   10a88:	andeq	r0, r1, ip, asr #28
   10a8c:	andeq	r0, r1, ip, asr #28
   10a90:	andeq	r0, r1, ip, asr #28
   10a94:	andeq	r0, r1, ip, asr #28
   10a98:	andeq	r0, r1, ip, asr #28
   10a9c:	andeq	r0, r1, ip, asr #28
   10aa0:	andeq	r0, r1, ip, asr #28
   10aa4:	andeq	r0, r1, ip, asr #28
   10aa8:	andeq	r0, r1, ip, asr #28
   10aac:	andeq	r0, r1, ip, asr #28
   10ab0:	andeq	r0, r1, ip, asr #28
   10ab4:	andeq	r0, r1, r0, asr #28
   10ab8:	andeq	r0, r1, ip, lsl #22
   10abc:	andeq	r0, r1, ip, asr #28
   10ac0:	andeq	r0, r1, ip, asr #28
   10ac4:	strdeq	r0, [r1], -ip
   10ac8:	andeq	r0, r1, ip, asr #28
   10acc:	andeq	r0, r1, ip, asr #28
   10ad0:	andeq	r0, r1, ip, asr #28
   10ad4:	andeq	r0, r1, ip, asr #28
   10ad8:	andeq	r0, r1, ip, asr #28
   10adc:	andeq	r0, r1, ip, asr #28
   10ae0:	andeq	r0, r1, ip, asr #28
   10ae4:	andeq	r0, r1, ip, asr #28
   10ae8:	andeq	r0, r1, ip, asr #28
   10aec:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10af0:	mov	r3, #1
   10af4:	str	r3, [sp, #32]
   10af8:	b	10a3c <exit@plt+0x58>
   10afc:	ldr	r0, [r8]
   10b00:	bl	109a8 <FcLangNormalize@plt>
   10b04:	str	r0, [sp, #16]
   10b08:	b	10a38 <exit@plt+0x54>
   10b0c:	mov	r2, #10
   10b10:	mov	r1, #0
   10b14:	ldr	r0, [r8]
   10b18:	bl	10954 <strtol@plt>
   10b1c:	mov	r9, #1
   10b20:	str	r0, [sp, #36]	; 0x24
   10b24:	b	10a38 <exit@plt+0x54>
   10b28:	ldr	r2, [pc, #832]	; 10e70 <exit@plt+0x48c>
   10b2c:	mov	r1, #1
   10b30:	mov	r3, #13
   10b34:	ldr	r0, [r2]
   10b38:	str	r3, [sp]
   10b3c:	str	r1, [sp, #4]
   10b40:	mov	r3, #2
   10b44:	ldr	r2, [pc, #808]	; 10e74 <exit@plt+0x490>
   10b48:	bl	10978 <__fprintf_chk@plt>
   10b4c:	mov	r0, #0
   10b50:	bl	109e4 <exit@plt>
   10b54:	ldr	r3, [pc, #796]	; 10e78 <exit@plt+0x494>
   10b58:	ldr	r2, [sp, #48]	; 0x30
   10b5c:	ldr	r3, [r3]
   10b60:	cmp	r2, r3
   10b64:	str	r3, [sp, #44]	; 0x2c
   10b68:	beq	10e4c <exit@plt+0x468>
   10b6c:	ldr	r3, [sp, #16]
   10b70:	cmp	r3, #0
   10b74:	beq	10de4 <exit@plt+0x400>
   10b78:	ldr	r0, [sp, #16]
   10b7c:	bl	10960 <FcLangGetCharSet@plt>
   10b80:	str	r0, [sp, #40]	; 0x28
   10b84:	add	r0, sp, #56	; 0x38
   10b88:	bl	10948 <FT_Init_FreeType@plt>
   10b8c:	cmp	r0, #0
   10b90:	bne	10e0c <exit@plt+0x428>
   10b94:	ldr	r3, [sp, #44]	; 0x2c
   10b98:	ldr	fp, [pc, #732]	; 10e7c <exit@plt+0x498>
   10b9c:	str	r0, [sp, #24]
   10ba0:	add	sl, sl, r3, lsl #2
   10ba4:	str	r9, [sp, #12]
   10ba8:	ldr	r3, [sp, #44]	; 0x2c
   10bac:	ldr	r2, [sp, #48]	; 0x30
   10bb0:	cmp	r3, r2
   10bb4:	bge	10da4 <exit@plt+0x3c0>
   10bb8:	ldr	r6, [sp, #36]	; 0x24
   10bbc:	b	10c1c <exit@plt+0x238>
   10bc0:	ldr	r3, [sp, #12]
   10bc4:	eor	r3, r3, #1
   10bc8:	cmp	r6, #0
   10bcc:	movle	r3, #0
   10bd0:	andgt	r3, r3, #1
   10bd4:	cmp	r3, #0
   10bd8:	bne	10cc4 <exit@plt+0x2e0>
   10bdc:	ldr	r3, [pc, #652]	; 10e70 <exit@plt+0x48c>
   10be0:	mov	r2, #5
   10be4:	ldr	r1, [pc, #660]	; 10e80 <exit@plt+0x49c>
   10be8:	ldr	r0, [pc, #660]	; 10e84 <exit@plt+0x4a0>
   10bec:	ldr	r4, [r3]
   10bf0:	bl	10918 <dcgettext@plt>
   10bf4:	ldr	r3, [sl]
   10bf8:	mov	r1, #1
   10bfc:	str	r1, [sp, #24]
   10c00:	add	r6, r6, #1
   10c04:	mov	r2, r0
   10c08:	mov	r0, r4
   10c0c:	bl	10978 <__fprintf_chk@plt>
   10c10:	ldr	r3, [sp, #12]
   10c14:	cmp	r3, #0
   10c18:	bne	10cc4 <exit@plt+0x2e0>
   10c1c:	ldr	r1, [sl]
   10c20:	add	r3, sp, #60	; 0x3c
   10c24:	mov	r2, r6
   10c28:	ldr	r0, [sp, #56]	; 0x38
   10c2c:	bl	109b4 <FT_New_Face@plt>
   10c30:	subs	r1, r0, #0
   10c34:	bne	10bc0 <exit@plt+0x1dc>
   10c38:	ldr	r0, [sp, #60]	; 0x3c
   10c3c:	bl	109c0 <FcFreeTypeCharSet@plt>
   10c40:	mov	r1, r0
   10c44:	str	r0, [sp, #28]
   10c48:	ldr	r0, [sp, #40]	; 0x28
   10c4c:	bl	108d0 <FcCharSetSubtract@plt>
   10c50:	str	r0, [sp, #20]
   10c54:	bl	1093c <FcCharSetCount@plt>
   10c58:	mov	r2, #5
   10c5c:	subs	r4, r0, #0
   10c60:	beq	10cd8 <exit@plt+0x2f4>
   10c64:	ldr	r1, [pc, #540]	; 10e88 <exit@plt+0x4a4>
   10c68:	ldr	r0, [pc, #532]	; 10e84 <exit@plt+0x4a0>
   10c6c:	bl	10918 <dcgettext@plt>
   10c70:	ldr	r3, [sp, #16]
   10c74:	str	r4, [sp]
   10c78:	str	r3, [sp, #4]
   10c7c:	mov	r3, r6
   10c80:	ldr	r2, [sl]
   10c84:	mov	r1, r0
   10c88:	mov	r0, #1
   10c8c:	bl	108e8 <__printf_chk@plt>
   10c90:	ldr	r3, [sp, #32]
   10c94:	cmp	r3, #0
   10c98:	bne	10d04 <exit@plt+0x320>
   10c9c:	ldr	r0, [sp, #28]
   10ca0:	bl	1099c <FcCharSetDestroy@plt>
   10ca4:	ldr	r0, [sp, #20]
   10ca8:	bl	1099c <FcCharSetDestroy@plt>
   10cac:	ldr	r0, [sp, #60]	; 0x3c
   10cb0:	bl	109d8 <FT_Done_Face@plt>
   10cb4:	ldr	r3, [sp, #12]
   10cb8:	add	r6, r6, #1
   10cbc:	cmp	r3, #0
   10cc0:	beq	10c1c <exit@plt+0x238>
   10cc4:	ldr	r3, [sp, #44]	; 0x2c
   10cc8:	add	sl, sl, #4
   10ccc:	add	r3, r3, #1
   10cd0:	str	r3, [sp, #44]	; 0x2c
   10cd4:	b	10ba8 <exit@plt+0x1c4>
   10cd8:	ldr	r1, [pc, #428]	; 10e8c <exit@plt+0x4a8>
   10cdc:	ldr	r0, [pc, #416]	; 10e84 <exit@plt+0x4a0>
   10ce0:	bl	10918 <dcgettext@plt>
   10ce4:	ldr	r3, [sp, #16]
   10ce8:	str	r3, [sp]
   10cec:	mov	r3, r6
   10cf0:	ldr	r2, [sl]
   10cf4:	mov	r1, r0
   10cf8:	mov	r0, #1
   10cfc:	bl	108e8 <__printf_chk@plt>
   10d00:	b	10c9c <exit@plt+0x2b8>
   10d04:	ldr	r9, [sp, #20]
   10d08:	add	r2, sp, #64	; 0x40
   10d0c:	add	r1, sp, #68	; 0x44
   10d10:	mov	r0, r9
   10d14:	bl	109cc <FcCharSetFirstPage@plt>
   10d18:	cmn	r0, #1
   10d1c:	mov	r5, r0
   10d20:	beq	10c9c <exit@plt+0x2b8>
   10d24:	str	r6, [sp, #52]	; 0x34
   10d28:	add	r7, sp, #68	; 0x44
   10d2c:	add	r8, r5, #256	; 0x100
   10d30:	ldr	r4, [r7], #4
   10d34:	cmp	r4, #0
   10d38:	beq	10d74 <exit@plt+0x390>
   10d3c:	mov	r6, r5
   10d40:	b	10d50 <exit@plt+0x36c>
   10d44:	lsrs	r4, r4, #1
   10d48:	add	r6, r6, #1
   10d4c:	beq	10d74 <exit@plt+0x390>
   10d50:	tst	r4, #1
   10d54:	beq	10d44 <exit@plt+0x360>
   10d58:	mov	r2, r6
   10d5c:	mov	r1, fp
   10d60:	mov	r0, #1
   10d64:	bl	108e8 <__printf_chk@plt>
   10d68:	lsrs	r4, r4, #1
   10d6c:	add	r6, r6, #1
   10d70:	bne	10d50 <exit@plt+0x36c>
   10d74:	add	r5, r5, #32
   10d78:	cmp	r5, r8
   10d7c:	bne	10d30 <exit@plt+0x34c>
   10d80:	add	r2, sp, #64	; 0x40
   10d84:	add	r1, sp, #68	; 0x44
   10d88:	mov	r0, r9
   10d8c:	bl	10924 <FcCharSetNextPage@plt>
   10d90:	cmn	r0, #1
   10d94:	mov	r5, r0
   10d98:	bne	10d28 <exit@plt+0x344>
   10d9c:	ldr	r6, [sp, #52]	; 0x34
   10da0:	b	10c9c <exit@plt+0x2b8>
   10da4:	ldr	r0, [sp, #56]	; 0x38
   10da8:	bl	10900 <FT_Done_FreeType@plt>
   10dac:	ldr	r3, [sp, #16]
   10db0:	cmp	r3, #0
   10db4:	beq	10dc0 <exit@plt+0x3dc>
   10db8:	mov	r0, r3
   10dbc:	bl	10990 <FcStrFree@plt>
   10dc0:	bl	108f4 <FcFini@plt>
   10dc4:	ldr	r3, [pc, #144]	; 10e5c <exit@plt+0x478>
   10dc8:	ldr	r2, [sp, #100]	; 0x64
   10dcc:	ldr	r0, [sp, #24]
   10dd0:	ldr	r3, [r3]
   10dd4:	cmp	r2, r3
   10dd8:	bne	10e58 <exit@plt+0x474>
   10ddc:	add	sp, sp, #108	; 0x6c
   10de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10de4:	mov	r1, r3
   10de8:	mov	r0, r3
   10dec:	bl	10930 <setlocale@plt>
   10df0:	bl	109a8 <FcLangNormalize@plt>
   10df4:	subs	r3, r0, #0
   10df8:	str	r3, [sp, #16]
   10dfc:	ldreq	r3, [sp, #16]
   10e00:	streq	r3, [sp, #40]	; 0x28
   10e04:	beq	10b84 <exit@plt+0x1a0>
   10e08:	b	10b78 <exit@plt+0x194>
   10e0c:	ldr	r3, [pc, #92]	; 10e70 <exit@plt+0x48c>
   10e10:	mov	r2, #5
   10e14:	ldr	r1, [pc, #116]	; 10e90 <exit@plt+0x4ac>
   10e18:	ldr	r0, [pc, #100]	; 10e84 <exit@plt+0x4a0>
   10e1c:	ldr	r4, [r3]
   10e20:	bl	10918 <dcgettext@plt>
   10e24:	mov	r1, #1
   10e28:	mov	r2, r0
   10e2c:	mov	r0, r4
   10e30:	bl	10978 <__fprintf_chk@plt>
   10e34:	mov	r3, #1
   10e38:	str	r3, [sp, #24]
   10e3c:	b	10dc4 <exit@plt+0x3e0>
   10e40:	ldr	r0, [sl]
   10e44:	mov	r1, #0
   10e48:	bl	10f84 <exit@plt+0x5a0>
   10e4c:	ldr	r0, [sl]
   10e50:	mov	r1, #1
   10e54:	bl	10f84 <exit@plt+0x5a0>
   10e58:	bl	1096c <__stack_chk_fail@plt>
   10e5c:	strdeq	r1, [r2], -r0
   10e60:	andeq	r1, r1, ip, lsr #2
   10e64:	andeq	r1, r1, r4, lsl #7
   10e68:	muleq	r2, r0, r0
   10e6c:	andeq	r1, r1, r0, lsl #7
   10e70:	andeq	r2, r2, r8, lsl #1
   10e74:	andeq	r1, r1, r4, ror #6
   10e78:	andeq	r2, r2, r0, lsl #1
   10e7c:	andeq	r1, r1, ip, lsl #8
   10e80:			; <UNDEFINED> instruction: 0x000113b4
   10e84:	andeq	r1, r1, r0, lsl #4
   10e88:	andeq	r1, r1, r8, asr #7
   10e8c:	andeq	r1, r1, r8, lsl r4
   10e90:	muleq	r1, r0, r3
   10e94:	mov	fp, #0
   10e98:	mov	lr, #0
   10e9c:	pop	{r1}		; (ldr r1, [sp], #4)
   10ea0:	mov	r2, sp
   10ea4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ea8:	push	{r0}		; (str r0, [sp, #-4]!)
   10eac:	ldr	ip, [pc, #16]	; 10ec4 <exit@plt+0x4e0>
   10eb0:	push	{ip}		; (str ip, [sp, #-4]!)
   10eb4:	ldr	r0, [pc, #12]	; 10ec8 <exit@plt+0x4e4>
   10eb8:	ldr	r3, [pc, #12]	; 10ecc <exit@plt+0x4e8>
   10ebc:	bl	108c4 <__libc_start_main@plt>
   10ec0:	bl	108b8 <abort@plt>
   10ec4:	andeq	r1, r1, ip, lsl r1
   10ec8:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10ecc:	strheq	r1, [r1], -ip
   10ed0:	ldr	r3, [pc, #20]	; 10eec <exit@plt+0x508>
   10ed4:	ldr	r2, [pc, #20]	; 10ef0 <exit@plt+0x50c>
   10ed8:	add	r3, pc, r3
   10edc:	ldr	r2, [r3, r2]
   10ee0:	cmp	r2, #0
   10ee4:	bxeq	lr
   10ee8:	b	108dc <__gmon_start__@plt>
   10eec:	andeq	r1, r1, r0, lsr #2
   10ef0:	andeq	r0, r0, r4, ror r0
   10ef4:	ldr	r0, [pc, #24]	; 10f14 <exit@plt+0x530>
   10ef8:	ldr	r3, [pc, #24]	; 10f18 <exit@plt+0x534>
   10efc:	cmp	r3, r0
   10f00:	bxeq	lr
   10f04:	ldr	r3, [pc, #16]	; 10f1c <exit@plt+0x538>
   10f08:	cmp	r3, #0
   10f0c:	bxeq	lr
   10f10:	bx	r3
   10f14:	andeq	r2, r2, r0, lsl #1
   10f18:	andeq	r2, r2, r0, lsl #1
   10f1c:	andeq	r0, r0, r0
   10f20:	ldr	r0, [pc, #36]	; 10f4c <exit@plt+0x568>
   10f24:	ldr	r1, [pc, #36]	; 10f50 <exit@plt+0x56c>
   10f28:	sub	r1, r1, r0
   10f2c:	asr	r1, r1, #2
   10f30:	add	r1, r1, r1, lsr #31
   10f34:	asrs	r1, r1, #1
   10f38:	bxeq	lr
   10f3c:	ldr	r3, [pc, #16]	; 10f54 <exit@plt+0x570>
   10f40:	cmp	r3, #0
   10f44:	bxeq	lr
   10f48:	bx	r3
   10f4c:	andeq	r2, r2, r0, lsl #1
   10f50:	andeq	r2, r2, r0, lsl #1
   10f54:	andeq	r0, r0, r0
   10f58:	push	{r4, lr}
   10f5c:	ldr	r4, [pc, #24]	; 10f7c <exit@plt+0x598>
   10f60:	ldrb	r3, [r4]
   10f64:	cmp	r3, #0
   10f68:	popne	{r4, pc}
   10f6c:	bl	10ef4 <exit@plt+0x510>
   10f70:	mov	r3, #1
   10f74:	strb	r3, [r4]
   10f78:	pop	{r4, pc}
   10f7c:	muleq	r2, r4, r0
   10f80:	b	10f20 <exit@plt+0x53c>
   10f84:	push	{r4, r5, r6, lr}
   10f88:	subs	r5, r1, #0
   10f8c:	mov	r6, r0
   10f90:	ldrne	r3, [pc, #252]	; 11094 <exit@plt+0x6b0>
   10f94:	ldreq	r3, [pc, #252]	; 11098 <exit@plt+0x6b4>
   10f98:	mov	r2, #5
   10f9c:	ldr	r1, [pc, #248]	; 1109c <exit@plt+0x6b8>
   10fa0:	ldr	r0, [pc, #248]	; 110a0 <exit@plt+0x6bc>
   10fa4:	ldr	r4, [r3]
   10fa8:	bl	10918 <dcgettext@plt>
   10fac:	mov	r3, r6
   10fb0:	mov	r1, #1
   10fb4:	mov	r2, r0
   10fb8:	mov	r0, r4
   10fbc:	bl	10978 <__fprintf_chk@plt>
   10fc0:	mov	r2, #5
   10fc4:	ldr	r1, [pc, #216]	; 110a4 <exit@plt+0x6c0>
   10fc8:	ldr	r0, [pc, #208]	; 110a0 <exit@plt+0x6bc>
   10fcc:	bl	10918 <dcgettext@plt>
   10fd0:	mov	r1, #1
   10fd4:	mov	r2, r0
   10fd8:	mov	r0, r4
   10fdc:	bl	10978 <__fprintf_chk@plt>
   10fe0:	mov	r1, r4
   10fe4:	mov	r0, #10
   10fe8:	bl	10984 <fputc@plt>
   10fec:	mov	r2, #5
   10ff0:	ldr	r1, [pc, #176]	; 110a8 <exit@plt+0x6c4>
   10ff4:	ldr	r0, [pc, #164]	; 110a0 <exit@plt+0x6bc>
   10ff8:	bl	10918 <dcgettext@plt>
   10ffc:	mov	r1, #1
   11000:	mov	r2, r0
   11004:	mov	r0, r4
   11008:	bl	10978 <__fprintf_chk@plt>
   1100c:	mov	r2, #5
   11010:	ldr	r1, [pc, #148]	; 110ac <exit@plt+0x6c8>
   11014:	ldr	r0, [pc, #132]	; 110a0 <exit@plt+0x6bc>
   11018:	bl	10918 <dcgettext@plt>
   1101c:	mov	r1, #1
   11020:	mov	r2, r0
   11024:	mov	r0, r4
   11028:	bl	10978 <__fprintf_chk@plt>
   1102c:	mov	r2, #5
   11030:	ldr	r1, [pc, #120]	; 110b0 <exit@plt+0x6cc>
   11034:	ldr	r0, [pc, #100]	; 110a0 <exit@plt+0x6bc>
   11038:	bl	10918 <dcgettext@plt>
   1103c:	mov	r1, #1
   11040:	mov	r2, r0
   11044:	mov	r0, r4
   11048:	bl	10978 <__fprintf_chk@plt>
   1104c:	mov	r2, #5
   11050:	ldr	r1, [pc, #92]	; 110b4 <exit@plt+0x6d0>
   11054:	ldr	r0, [pc, #68]	; 110a0 <exit@plt+0x6bc>
   11058:	bl	10918 <dcgettext@plt>
   1105c:	mov	r1, #1
   11060:	mov	r2, r0
   11064:	mov	r0, r4
   11068:	bl	10978 <__fprintf_chk@plt>
   1106c:	mov	r2, #5
   11070:	ldr	r1, [pc, #64]	; 110b8 <exit@plt+0x6d4>
   11074:	ldr	r0, [pc, #36]	; 110a0 <exit@plt+0x6bc>
   11078:	bl	10918 <dcgettext@plt>
   1107c:	mov	r1, #1
   11080:	mov	r2, r0
   11084:	mov	r0, r4
   11088:	bl	10978 <__fprintf_chk@plt>
   1108c:	mov	r0, r5
   11090:	bl	109e4 <exit@plt>
   11094:	andeq	r2, r2, r8, lsl #1
   11098:	andeq	r2, r2, r4, lsl #1
   1109c:	andeq	r1, r1, ip, lsl #3
   110a0:	andeq	r1, r1, r0, lsl #4
   110a4:	andeq	r1, r1, ip, lsl #4
   110a8:	andeq	r1, r1, r4, lsr r2
   110ac:	andeq	r1, r1, ip, ror r2
   110b0:			; <UNDEFINED> instruction: 0x000112b8
   110b4:	strdeq	r1, [r1], -r0
   110b8:	andeq	r1, r1, r0, lsr r3
   110bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110c0:	mov	r7, r0
   110c4:	ldr	r6, [pc, #72]	; 11114 <exit@plt+0x730>
   110c8:	ldr	r5, [pc, #72]	; 11118 <exit@plt+0x734>
   110cc:	add	r6, pc, r6
   110d0:	add	r5, pc, r5
   110d4:	sub	r6, r6, r5
   110d8:	mov	r8, r1
   110dc:	mov	r9, r2
   110e0:	bl	10898 <_init@@Base>
   110e4:	asrs	r6, r6, #2
   110e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   110ec:	mov	r4, #0
   110f0:	add	r4, r4, #1
   110f4:	ldr	r3, [r5], #4
   110f8:	mov	r2, r9
   110fc:	mov	r1, r8
   11100:	mov	r0, r7
   11104:	blx	r3
   11108:	cmp	r6, r4
   1110c:	bne	110f0 <exit@plt+0x70c>
   11110:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11114:	andeq	r0, r1, r8, lsl lr
   11118:	andeq	r0, r1, r0, lsl lr
   1111c:	bx	lr

Disassembly of section .fini:

00011120 <_fini@@Base>:
   11120:	push	{r3, lr}
   11124:	pop	{r3, pc}
