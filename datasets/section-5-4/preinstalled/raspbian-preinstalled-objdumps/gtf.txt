
raspbian-preinstalled/gtf:     file format elf32-littlearm


Disassembly of section .init:

000105e4 <.init>:
   105e4:	push	{r3, lr}
   105e8:	bl	1078c <abort@plt+0xbc>
   105ec:	pop	{r3, pc}

Disassembly of section .plt:

000105f0 <calloc@plt-0x14>:
   105f0:	push	{lr}		; (str lr, [sp, #-4]!)
   105f4:	ldr	lr, [pc, #4]	; 10600 <calloc@plt-0x4>
   105f8:	add	lr, pc, lr
   105fc:	ldr	pc, [lr, #8]!
   10600:	andeq	r1, r1, r0, lsl #20

00010604 <calloc@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #69632	; 0x11000
   1060c:	ldr	pc, [ip, #2560]!	; 0xa00

00010610 <strcmp@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #69632	; 0x11000
   10618:	ldr	pc, [ip, #2552]!	; 0x9f8

0001061c <strtol@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #69632	; 0x11000
   10624:	ldr	pc, [ip, #2544]!	; 0x9f0

00010628 <free@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #69632	; 0x11000
   10630:	ldr	pc, [ip, #2536]!	; 0x9e8

00010634 <fwrite@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #69632	; 0x11000
   1063c:	ldr	pc, [ip, #2528]!	; 0x9e0

00010640 <puts@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #69632	; 0x11000
   10648:	ldr	pc, [ip, #2520]!	; 0x9d8

0001064c <malloc@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #69632	; 0x11000
   10654:	ldr	pc, [ip, #2512]!	; 0x9d0

00010658 <__libc_start_main@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #69632	; 0x11000
   10660:	ldr	pc, [ip, #2504]!	; 0x9c8

00010664 <__gmon_start__@plt>:
   10664:	add	ip, pc, #0, 12
   10668:	add	ip, ip, #69632	; 0x11000
   1066c:	ldr	pc, [ip, #2496]!	; 0x9c0

00010670 <exit@plt>:
   10670:	add	ip, pc, #0, 12
   10674:	add	ip, ip, #69632	; 0x11000
   10678:	ldr	pc, [ip, #2488]!	; 0x9b8

0001067c <putchar@plt>:
   1067c:	add	ip, pc, #0, 12
   10680:	add	ip, ip, #69632	; 0x11000
   10684:	ldr	pc, [ip, #2480]!	; 0x9b0

00010688 <__printf_chk@plt>:
   10688:	add	ip, pc, #0, 12
   1068c:	add	ip, ip, #69632	; 0x11000
   10690:	ldr	pc, [ip, #2472]!	; 0x9a8

00010694 <strtod@plt>:
   10694:	add	ip, pc, #0, 12
   10698:	add	ip, ip, #69632	; 0x11000
   1069c:	ldr	pc, [ip, #2464]!	; 0x9a0

000106a0 <rint@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #69632	; 0x11000
   106a8:	ldr	pc, [ip, #2456]!	; 0x998

000106ac <__fprintf_chk@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #69632	; 0x11000
   106b4:	ldr	pc, [ip, #2448]!	; 0x990

000106b8 <lrint@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #69632	; 0x11000
   106c0:	ldr	pc, [ip, #2440]!	; 0x988

000106c4 <fputc@plt>:
   106c4:	add	ip, pc, #0, 12
   106c8:	add	ip, ip, #69632	; 0x11000
   106cc:	ldr	pc, [ip, #2432]!	; 0x980

000106d0 <abort@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #69632	; 0x11000
   106d8:	ldr	pc, [ip, #2424]!	; 0x978

Disassembly of section .text:

000106e0 <.text>:
   106e0:	push	{r4, r5, r6, lr}
   106e4:	bl	11328 <abort@plt+0xc58>
   106e8:	subs	r4, r0, #0
   106ec:	beq	10748 <abort@plt+0x78>
   106f0:	mov	r3, #0
   106f4:	mov	r2, r3
   106f8:	vldr	s0, [r4, #16]
   106fc:	ldrd	r0, [r4]
   10700:	bl	10a74 <abort@plt+0x3a4>
   10704:	subs	r5, r0, #0
   10708:	beq	10748 <abort@plt+0x78>
   1070c:	ldr	r3, [r4, #8]
   10710:	cmp	r3, #0
   10714:	bne	10734 <abort@plt+0x64>
   10718:	ldr	r3, [r4, #12]
   1071c:	cmp	r3, #0
   10720:	bne	1073c <abort@plt+0x6c>
   10724:	mov	r0, r5
   10728:	bl	10628 <free@plt>
   1072c:	mov	r0, #0
   10730:	pop	{r4, r5, r6, pc}
   10734:	bl	10888 <abort@plt+0x1b8>
   10738:	b	10718 <abort@plt+0x48>
   1073c:	mov	r0, r5
   10740:	bl	10948 <abort@plt+0x278>
   10744:	b	10724 <abort@plt+0x54>
   10748:	mov	r0, #1
   1074c:	bl	10670 <exit@plt>
   10750:	mov	fp, #0
   10754:	mov	lr, #0
   10758:	pop	{r1}		; (ldr r1, [sp], #4)
   1075c:	mov	r2, sp
   10760:	push	{r2}		; (str r2, [sp, #-4]!)
   10764:	push	{r0}		; (str r0, [sp, #-4]!)
   10768:	ldr	ip, [pc, #16]	; 10780 <abort@plt+0xb0>
   1076c:	push	{ip}		; (str ip, [sp, #-4]!)
   10770:	ldr	r0, [pc, #12]	; 10784 <abort@plt+0xb4>
   10774:	ldr	r3, [pc, #12]	; 10788 <abort@plt+0xb8>
   10778:	bl	10658 <__libc_start_main@plt>
   1077c:	bl	106d0 <abort@plt>
   10780:	strdeq	r1, [r1], -r4
   10784:	andeq	r0, r1, r0, ror #13
   10788:	muleq	r1, r4, r5
   1078c:	ldr	r3, [pc, #20]	; 107a8 <abort@plt+0xd8>
   10790:	ldr	r2, [pc, #20]	; 107ac <abort@plt+0xdc>
   10794:	add	r3, pc, r3
   10798:	ldr	r2, [r3, r2]
   1079c:	cmp	r2, #0
   107a0:	bxeq	lr
   107a4:	b	10664 <__gmon_start__@plt>
   107a8:	andeq	r1, r1, r4, ror #16
   107ac:	andeq	r0, r0, r4, asr r0
   107b0:	ldr	r0, [pc, #24]	; 107d0 <abort@plt+0x100>
   107b4:	ldr	r3, [pc, #24]	; 107d4 <abort@plt+0x104>
   107b8:	cmp	r3, r0
   107bc:	bxeq	lr
   107c0:	ldr	r3, [pc, #16]	; 107d8 <abort@plt+0x108>
   107c4:	cmp	r3, #0
   107c8:	bxeq	lr
   107cc:	bx	r3
   107d0:	andeq	r2, r2, r0, rrx
   107d4:	andeq	r2, r2, r0, rrx
   107d8:	andeq	r0, r0, r0
   107dc:	ldr	r0, [pc, #36]	; 10808 <abort@plt+0x138>
   107e0:	ldr	r1, [pc, #36]	; 1080c <abort@plt+0x13c>
   107e4:	sub	r1, r1, r0
   107e8:	asr	r1, r1, #2
   107ec:	add	r1, r1, r1, lsr #31
   107f0:	asrs	r1, r1, #1
   107f4:	bxeq	lr
   107f8:	ldr	r3, [pc, #16]	; 10810 <abort@plt+0x140>
   107fc:	cmp	r3, #0
   10800:	bxeq	lr
   10804:	bx	r3
   10808:	andeq	r2, r2, r0, rrx
   1080c:	andeq	r2, r2, r0, rrx
   10810:	andeq	r0, r0, r0
   10814:	push	{r4, lr}
   10818:	ldr	r4, [pc, #24]	; 10838 <abort@plt+0x168>
   1081c:	ldrb	r3, [r4]
   10820:	cmp	r3, #0
   10824:	popne	{r4, pc}
   10828:	bl	107b0 <abort@plt+0xe0>
   1082c:	mov	r3, #1
   10830:	strb	r3, [r4]
   10834:	pop	{r4, pc}
   10838:	andeq	r2, r2, r4, rrx
   1083c:	b	107dc <abort@plt+0x10c>
   10840:	vcvt.f64.f32	d0, s0
   10844:	push	{lr}		; (str lr, [sp, #-4]!)
   10848:	sub	sp, sp, #12
   1084c:	mov	r3, r1
   10850:	mov	r2, r0
   10854:	ldr	r1, [pc, #16]	; 1086c <abort@plt+0x19c>
   10858:	mov	r0, #1
   1085c:	vstr	d0, [sp]
   10860:	bl	10688 <__printf_chk@plt>
   10864:	add	sp, sp, #12
   10868:	pop	{pc}		; (ldr pc, [sp], #4)
   1086c:	andeq	r1, r1, r4, lsl #12
   10870:	ldr	r3, [pc, #12]	; 10884 <abort@plt+0x1b4>
   10874:	ldr	r3, [r3]
   10878:	cmp	r3, #0
   1087c:	bxeq	lr
   10880:	b	10840 <abort@plt+0x170>
   10884:	andeq	r2, r2, r8, rrx
   10888:	push	{r4, lr}
   1088c:	mov	r4, r0
   10890:	sub	sp, sp, #48	; 0x30
   10894:	mov	r0, #10
   10898:	bl	1067c <putchar@plt>
   1089c:	vldr	s10, [r4, #32]
   108a0:	vldr	s12, [r4, #36]	; 0x24
   108a4:	vldr	s14, [r4, #40]	; 0x28
   108a8:	ldr	r3, [r4, #16]
   108ac:	vcvt.f64.f32	d5, s10
   108b0:	vcvt.f64.f32	d6, s12
   108b4:	vcvt.f64.f32	d7, s14
   108b8:	ldr	r2, [r4]
   108bc:	ldr	r1, [pc, #124]	; 10940 <abort@plt+0x270>
   108c0:	mov	r0, #1
   108c4:	vstr	d5, [sp, #16]
   108c8:	vstr	d6, [sp, #8]
   108cc:	vstr	d7, [sp]
   108d0:	bl	10688 <__printf_chk@plt>
   108d4:	vldr	s12, [r4, #32]
   108d8:	vldr	s14, [r4, #40]	; 0x28
   108dc:	ldr	r0, [r4, #28]
   108e0:	ldr	r1, [r4, #24]
   108e4:	vcvt.f64.f32	d6, s12
   108e8:	vcvt.f64.f32	d7, s14
   108ec:	ldr	r2, [r4]
   108f0:	ldr	r3, [r4, #16]
   108f4:	ldr	lr, [r4, #20]
   108f8:	str	r2, [sp, #16]
   108fc:	str	r3, [sp, #32]
   10900:	str	r0, [sp, #44]	; 0x2c
   10904:	vstr	d6, [sp, #8]
   10908:	vstr	d7, [sp]
   1090c:	ldr	ip, [r4, #12]
   10910:	str	r1, [sp, #40]	; 0x28
   10914:	ldr	r0, [r4, #8]
   10918:	ldr	r1, [r4, #4]
   1091c:	str	r0, [sp, #24]
   10920:	str	r1, [sp, #20]
   10924:	str	lr, [sp, #36]	; 0x24
   10928:	str	ip, [sp, #28]
   1092c:	ldr	r1, [pc, #16]	; 10944 <abort@plt+0x274>
   10930:	mov	r0, #1
   10934:	bl	10688 <__printf_chk@plt>
   10938:	add	sp, sp, #48	; 0x30
   1093c:	pop	{r4, pc}
   10940:	andeq	r1, r1, r8, lsl r6
   10944:	andeq	r1, r1, r4, asr r6
   10948:	push	{r4, r5, lr}
   1094c:	mov	r4, r0
   10950:	sub	sp, sp, #28
   10954:	mov	r0, #10
   10958:	bl	1067c <putchar@plt>
   1095c:	vldr	s14, [r4, #40]	; 0x28
   10960:	ldr	r3, [r4, #16]
   10964:	ldr	r2, [r4]
   10968:	ldr	r1, [pc, #232]	; 10a58 <abort@plt+0x388>
   1096c:	vcvt.f64.f32	d7, s14
   10970:	mov	r0, #1
   10974:	vstr	d7, [sp]
   10978:	bl	10688 <__printf_chk@plt>
   1097c:	vldr	s12, [r4, #40]	; 0x28
   10980:	vldr	s14, [r4, #36]	; 0x24
   10984:	vldr	s11, [r4, #32]
   10988:	ldr	r1, [pc, #204]	; 10a5c <abort@plt+0x38c>
   1098c:	vcvt.f64.f32	d6, s12
   10990:	vcvt.f64.f32	d7, s14
   10994:	vcvt.f64.f32	d5, s11
   10998:	mov	r0, #1
   1099c:	vstr	d6, [sp, #8]
   109a0:	vstr	d7, [sp]
   109a4:	vmov	r2, r3, d5
   109a8:	bl	10688 <__printf_chk@plt>
   109ac:	ldr	r2, [r4]
   109b0:	ldr	r3, [r4, #16]
   109b4:	ldr	r1, [pc, #164]	; 10a60 <abort@plt+0x390>
   109b8:	mov	r0, #1
   109bc:	strd	r2, [sp]
   109c0:	bl	10688 <__printf_chk@plt>
   109c4:	vldr	s14, [r4, #32]
   109c8:	vldr	d0, [pc, #128]	; 10a50 <abort@plt+0x380>
   109cc:	vcvt.f64.f32	d7, s14
   109d0:	vdiv.f64	d0, d0, d7
   109d4:	bl	106b8 <lrint@plt>
   109d8:	ldmib	r4, {r1, r3}
   109dc:	ldr	lr, [r4]
   109e0:	ldr	r5, [r4, #24]
   109e4:	sub	ip, r3, r1
   109e8:	ldr	r2, [r4, #20]
   109ec:	sub	r1, r1, lr
   109f0:	ldr	lr, [r4, #16]
   109f4:	str	ip, [sp, #12]
   109f8:	ldr	ip, [r4, #28]
   109fc:	sub	lr, r2, lr
   10a00:	ldr	r4, [r4, #12]
   10a04:	sub	ip, ip, r5
   10a08:	sub	r2, r5, r2
   10a0c:	sub	r3, r4, r3
   10a10:	stmib	sp, {ip, lr}
   10a14:	str	r1, [sp]
   10a18:	str	r2, [sp, #16]
   10a1c:	ldr	r1, [pc, #64]	; 10a64 <abort@plt+0x394>
   10a20:	mov	r2, r0
   10a24:	mov	r0, #1
   10a28:	bl	10688 <__printf_chk@plt>
   10a2c:	ldr	r0, [pc, #52]	; 10a68 <abort@plt+0x398>
   10a30:	bl	10640 <puts@plt>
   10a34:	ldr	r0, [pc, #48]	; 10a6c <abort@plt+0x39c>
   10a38:	bl	10640 <puts@plt>
   10a3c:	ldr	r0, [pc, #44]	; 10a70 <abort@plt+0x3a0>
   10a40:	add	sp, sp, #28
   10a44:	pop	{r4, r5, lr}
   10a48:	b	10640 <puts@plt>
   10a4c:	nop			; (mov r0, r0)
   10a50:	andeq	r0, r0, r0
   10a54:	smlawbmi	lr, r0, r4, r8
   10a58:	andeq	r1, r1, r0, lsr #13
   10a5c:	andeq	r1, r1, r4, asr #13
   10a60:	strdeq	r1, [r1], -r4
   10a64:	andeq	r1, r1, r4, lsl r7
   10a68:	andeq	r1, r1, r8, lsr r7
   10a6c:	andeq	r1, r1, r8, asr #14
   10a70:	andeq	r1, r1, r8, asr r7
   10a74:	push	{r4, r5, r6, r7, r8, lr}
   10a78:	vpush	{d8-d15}
   10a7c:	vmov	s16, r0
   10a80:	mov	r0, #44	; 0x2c
   10a84:	vmov.f32	s29, s0
   10a88:	mov	r7, r2
   10a8c:	mov	r8, r3
   10a90:	vmov	s18, r1
   10a94:	bl	1064c <malloc@plt>
   10a98:	vcvt.f32.s32	s14, s16
   10a9c:	vldr	d0, [pc, #580]	; 10ce8 <abort@plt+0x618>
   10aa0:	ldr	r5, [pc, #704]	; 10d68 <abort@plt+0x698>
   10aa4:	vcvt.f64.f32	d7, s14
   10aa8:	vmul.f64	d0, d7, d0
   10aac:	mov	r4, r0
   10ab0:	bl	106a0 <rint@plt>
   10ab4:	vldr	d7, [pc, #564]	; 10cf0 <abort@plt+0x620>
   10ab8:	ldr	r6, [r5]
   10abc:	cmp	r6, #0
   10ac0:	vmul.f64	d0, d0, d7
   10ac4:	vcvt.f32.f64	s19, d0
   10ac8:	bne	11204 <abort@plt+0xb34>
   10acc:	cmp	r7, #0
   10ad0:	vcvt.f32.s32	s18, s18
   10ad4:	vmoveq.f32	s16, s29
   10ad8:	moveq	r6, r7
   10adc:	beq	10b18 <abort@plt+0x448>
   10ae0:	vcvt.f64.f32	d7, s18
   10ae4:	vldr	d6, [pc, #524]	; 10cf8 <abort@plt+0x628>
   10ae8:	vmul.f64	d7, d7, d6
   10aec:	vcvt.f32.f64	s18, d7
   10af0:	vcvt.f64.f32	d8, s29
   10af4:	vadd.f64	d8, d8, d8
   10af8:	vcvt.f32.f64	s16, d8
   10afc:	cmp	r6, #0
   10b00:	beq	10b18 <abort@plt+0x448>
   10b04:	vmov.f32	s0, s16
   10b08:	ldr	r1, [pc, #604]	; 10d6c <abort@plt+0x69c>
   10b0c:	mov	r0, #3
   10b10:	bl	10840 <abort@plt+0x170>
   10b14:	ldr	r6, [r5]
   10b18:	cmp	r8, #0
   10b1c:	bne	10d70 <abort@plt+0x6a0>
   10b20:	cmp	r6, #0
   10b24:	vldr	s26, [pc, #556]	; 10d58 <abort@plt+0x688>
   10b28:	bne	10d8c <abort@plt+0x6bc>
   10b2c:	cmp	r7, #0
   10b30:	bne	111fc <abort@plt+0xb2c>
   10b34:	vldr	s28, [pc, #540]	; 10d58 <abort@plt+0x688>
   10b38:	vcvt.f64.f32	d3, s16
   10b3c:	vldr	d2, [pc, #444]	; 10d00 <abort@plt+0x630>
   10b40:	vadd.f32	s14, s26, s26
   10b44:	vldr	s15, [pc, #528]	; 10d5c <abort@plt+0x68c>
   10b48:	vldr	d4, [pc, #440]	; 10d08 <abort@plt+0x638>
   10b4c:	vldr	d5, [pc, #444]	; 10d10 <abort@plt+0x640>
   10b50:	vdiv.f64	d6, d2, d3
   10b54:	vadd.f32	s14, s14, s18
   10b58:	vadd.f32	s14, s14, s15
   10b5c:	vadd.f32	s14, s14, s28
   10b60:	vcvt.f64.f32	d7, s14
   10b64:	vsub.f64	d6, d6, d4
   10b68:	vdiv.f64	d3, d6, d7
   10b6c:	vmul.f64	d5, d3, d5
   10b70:	vcvt.f32.f64	s31, d5
   10b74:	vcvt.f64.f32	d10, s31
   10b78:	vldr	d0, [pc, #408]	; 10d18 <abort@plt+0x648>
   10b7c:	vdiv.f64	d0, d0, d10
   10b80:	bl	106a0 <rint@plt>
   10b84:	vcvt.f32.f64	s30, d0
   10b88:	vadd.f32	s17, s26, s18
   10b8c:	vldr	s15, [pc, #456]	; 10d5c <abort@plt+0x68c>
   10b90:	vadd.f32	s17, s17, s26
   10b94:	vadd.f32	s17, s17, s30
   10b98:	vadd.f32	s17, s17, s28
   10b9c:	vadd.f32	s17, s17, s15
   10ba0:	vldr	d4, [pc, #344]	; 10d00 <abort@plt+0x630>
   10ba4:	vcvt.f64.f32	d7, s17
   10ba8:	vldr	d6, [pc, #352]	; 10d10 <abort@plt+0x640>
   10bac:	vdiv.f64	d5, d4, d10
   10bb0:	vdiv.f64	d0, d5, d7
   10bb4:	vmul.f64	d0, d0, d6
   10bb8:	vcvt.f32.f64	s20, d0
   10bbc:	vdiv.f32	s15, s16, s20
   10bc0:	vdiv.f32	s30, s31, s15
   10bc4:	vcvt.f64.f32	d10, s30
   10bc8:	cmp	r8, #0
   10bcc:	bne	10ff4 <abort@plt+0x924>
   10bd0:	vldr	s16, [pc, #384]	; 10d58 <abort@plt+0x688>
   10bd4:	vadd.f32	s0, s19, s16
   10bd8:	vadd.f32	s16, s0, s16
   10bdc:	vldr	d6, [pc, #316]	; 10d20 <abort@plt+0x650>
   10be0:	vldr	d5, [pc, #320]	; 10d28 <abort@plt+0x658>
   10be4:	vldr	d7, [pc, #324]	; 10d30 <abort@plt+0x660>
   10be8:	vmul.f64	d10, d10, d6
   10bec:	vdiv.f64	d6, d10, d5
   10bf0:	vsub.f64	d7, d7, d6
   10bf4:	vcvt.f32.f64	s20, d7
   10bf8:	vmul.f32	s10, s16, s20
   10bfc:	vcvt.f64.f32	d7, s20
   10c00:	vldr	d6, [pc, #304]	; 10d38 <abort@plt+0x668>
   10c04:	vldr	d4, [pc, #308]	; 10d40 <abort@plt+0x670>
   10c08:	vcvt.f64.f32	d5, s10
   10c0c:	vsub.f64	d7, d6, d7
   10c10:	vdiv.f64	d0, d5, d7
   10c14:	vmul.f64	d0, d0, d4
   10c18:	bl	106a0 <rint@plt>
   10c1c:	vldr	d7, [pc, #292]	; 10d48 <abort@plt+0x678>
   10c20:	vmul.f64	d0, d0, d7
   10c24:	vcvt.f32.f64	s22, d0
   10c28:	vadd.f32	s16, s16, s22
   10c2c:	vdiv.f32	s20, s16, s30
   10c30:	vldr	s15, [pc, #296]	; 10d60 <abort@plt+0x690>
   10c34:	vdiv.f32	s21, s15, s30
   10c38:	vcvt.f64.f32	d7, s16
   10c3c:	vldr	d6, [pc, #268]	; 10d50 <abort@plt+0x680>
   10c40:	vldr	d0, [pc, #160]	; 10ce8 <abort@plt+0x618>
   10c44:	vmul.f64	d7, d7, d6
   10c48:	vmul.f64	d0, d7, d0
   10c4c:	bl	106a0 <rint@plt>
   10c50:	vldr	d7, [pc, #152]	; 10cf0 <abort@plt+0x620>
   10c54:	vmul.f64	d0, d0, d7
   10c58:	vcvt.f32.f64	s23, d0
   10c5c:	vcvt.f64.f32	d7, s22
   10c60:	vcvt.f64.f32	d0, s23
   10c64:	vldr	d6, [pc, #140]	; 10cf8 <abort@plt+0x628>
   10c68:	vnmls.f64	d0, d7, d6
   10c6c:	vcvt.f32.f64	s22, d0
   10c70:	vldr	s15, [pc, #228]	; 10d5c <abort@plt+0x68c>
   10c74:	vadd.f32	s28, s28, s15
   10c78:	vadd.f32	s15, s19, s22
   10c7c:	vadd.f32	s28, s28, s18
   10c80:	vldr	s14, [pc, #220]	; 10d64 <abort@plt+0x694>
   10c84:	vcvt.s32.f32	s19, s19
   10c88:	vcvt.s32.f32	s16, s16
   10c8c:	vcvt.s32.f32	s18, s18
   10c90:	vcvt.s32.f32	s17, s17
   10c94:	vstr	s20, [r4, #32]
   10c98:	vadd.f32	s13, s15, s23
   10c9c:	vadd.f32	s14, s28, s14
   10ca0:	vcvt.s32.f32	s28, s28
   10ca4:	vcvt.s32.f32	s15, s15
   10ca8:	vstr	s21, [r4, #36]	; 0x24
   10cac:	vstr	s29, [r4, #40]	; 0x28
   10cb0:	vstr	s19, [r4]
   10cb4:	vstr	s16, [r4, #12]
   10cb8:	vcvt.s32.f32	s13, s13
   10cbc:	vcvt.s32.f32	s14, s14
   10cc0:	vstr	s28, [r4, #20]
   10cc4:	vstr	s18, [r4, #16]
   10cc8:	vstr	s17, [r4, #28]
   10ccc:	vpop	{d8-d15}
   10cd0:	mov	r0, r4
   10cd4:	vstr	s15, [r4, #4]
   10cd8:	vstr	s13, [r4, #8]
   10cdc:	vstr	s14, [r4, #24]
   10ce0:	pop	{r4, r5, r6, r7, r8, pc}
   10ce4:	nop			; (mov r0, r0)
   10ce8:	andeq	r0, r0, r0
   10cec:	svccc	0x00c00000
   10cf0:	andeq	r0, r0, r0
   10cf4:	eormi	r0, r0, r0
   10cf8:	andeq	r0, r0, r0
   10cfc:	svccc	0x00e00000
   10d00:	andeq	r0, r0, r0
   10d04:	svccc	0x00f00000	; IMB
   10d08:			; <UNDEFINED> instruction: 0x01a36e2f
   10d0c:	svccc	0x004205bc
   10d10:	andeq	r0, r0, r0
   10d14:	smlawbmi	lr, r0, r4, r8
   10d18:	andeq	r0, r0, r0
   10d1c:	addmi	r3, r1, r0
   10d20:	andeq	r0, r0, r0
   10d24:	rsbsmi	ip, r2, r0
   10d28:	andeq	r0, r0, r0
   10d2c:	addmi	r4, pc, r0
   10d30:	andeq	r0, r0, r0
   10d34:	eorsmi	r0, lr, r0
   10d38:	andeq	r0, r0, r0
   10d3c:	subsmi	r0, r9, r0
   10d40:	andeq	r0, r0, r0
   10d44:	svccc	0x00b00000
   10d48:	andeq	r0, r0, r0
   10d4c:	eorsmi	r0, r0, r0
   10d50:			; <UNDEFINED> instruction: 0x47ae147b
   10d54:	svccc	0x00b47ae1
   10d58:	andeq	r0, r0, r0
   10d5c:	svccc	0x00800000
   10d60:	ldrbtmi	r0, [sl], #-0
   10d64:	submi	r0, r0, r0
   10d68:	andeq	r2, r2, r8, rrx
   10d6c:	andeq	r1, r1, r4, ror r7
   10d70:	vcvt.f64.f32	d0, s18
   10d74:	vldr	d7, [pc, #524]	; 10f88 <abort@plt+0x8b8>
   10d78:	vmul.f64	d0, d0, d7
   10d7c:	bl	106a0 <rint@plt>
   10d80:	cmp	r6, #0
   10d84:	vcvt.f32.f64	s26, d0
   10d88:	beq	10b2c <abort@plt+0x45c>
   10d8c:	vmov.f32	s0, s26
   10d90:	ldr	r1, [pc, #560]	; 10fc8 <abort@plt+0x8f8>
   10d94:	mov	r0, #4
   10d98:	bl	10840 <abort@plt+0x170>
   10d9c:	ldr	r3, [r5]
   10da0:	cmp	r3, #0
   10da4:	beq	10b2c <abort@plt+0x45c>
   10da8:	vmov.f32	s0, s26
   10dac:	ldr	r1, [pc, #536]	; 10fcc <abort@plt+0x8fc>
   10db0:	mov	r0, #5
   10db4:	bl	10840 <abort@plt+0x170>
   10db8:	vldr	s28, [pc, #504]	; 10fb8 <abort@plt+0x8e8>
   10dbc:	vldr	s15, [pc, #504]	; 10fbc <abort@plt+0x8ec>
   10dc0:	cmp	r7, #0
   10dc4:	ldr	r3, [r5]
   10dc8:	vmovne.f32	s28, s15
   10dcc:	cmp	r3, #0
   10dd0:	beq	10b38 <abort@plt+0x468>
   10dd4:	vmov.f32	s0, s28
   10dd8:	ldr	r1, [pc, #496]	; 10fd0 <abort@plt+0x900>
   10ddc:	mov	r0, #6
   10de0:	bl	10840 <abort@plt+0x170>
   10de4:	vcvt.f64.f32	d4, s16
   10de8:	vldr	d12, [pc, #416]	; 10f90 <abort@plt+0x8c0>
   10dec:	vadd.f32	s14, s26, s26
   10df0:	vldr	s27, [pc, #456]	; 10fc0 <abort@plt+0x8f0>
   10df4:	vldr	d5, [pc, #412]	; 10f98 <abort@plt+0x8c8>
   10df8:	vldr	d11, [pc, #416]	; 10fa0 <abort@plt+0x8d0>
   10dfc:	ldr	r3, [r5]
   10e00:	vdiv.f64	d6, d12, d4
   10e04:	cmp	r3, #0
   10e08:	vadd.f32	s14, s14, s18
   10e0c:	vadd.f32	s14, s14, s27
   10e10:	vadd.f32	s14, s14, s28
   10e14:	vcvt.f64.f32	d7, s14
   10e18:	vsub.f64	d6, d6, d5
   10e1c:	vdiv.f64	d4, d6, d7
   10e20:	vmul.f64	d4, d4, d11
   10e24:	vcvt.f32.f64	s31, d4
   10e28:	beq	10b74 <abort@plt+0x4a4>
   10e2c:	vmov.f32	s0, s31
   10e30:	ldr	r1, [pc, #412]	; 10fd4 <abort@plt+0x904>
   10e34:	mov	r0, #7
   10e38:	bl	10840 <abort@plt+0x170>
   10e3c:	vcvt.f64.f32	d10, s31
   10e40:	vldr	d0, [pc, #352]	; 10fa8 <abort@plt+0x8d8>
   10e44:	vdiv.f64	d0, d0, d10
   10e48:	bl	106a0 <rint@plt>
   10e4c:	ldr	r3, [r5]
   10e50:	cmp	r3, #0
   10e54:	vcvt.f32.f64	s30, d0
   10e58:	beq	10b88 <abort@plt+0x4b8>
   10e5c:	vmov.f32	s0, s30
   10e60:	ldr	r1, [pc, #368]	; 10fd8 <abort@plt+0x908>
   10e64:	mov	r0, #8
   10e68:	bl	10840 <abort@plt+0x170>
   10e6c:	vldr	s0, [pc, #336]	; 10fc4 <abort@plt+0x8f4>
   10e70:	ldr	r3, [r5]
   10e74:	cmp	r3, #0
   10e78:	vsub.f32	s0, s30, s0
   10e7c:	beq	10b88 <abort@plt+0x4b8>
   10e80:	ldr	r1, [pc, #340]	; 10fdc <abort@plt+0x90c>
   10e84:	mov	r0, #9
   10e88:	bl	10840 <abort@plt+0x170>
   10e8c:	vadd.f32	s17, s26, s18
   10e90:	ldr	r3, [r5]
   10e94:	cmp	r3, #0
   10e98:	vadd.f32	s17, s17, s26
   10e9c:	vadd.f32	s17, s17, s30
   10ea0:	vadd.f32	s17, s17, s28
   10ea4:	vadd.f32	s17, s17, s27
   10ea8:	beq	10ba0 <abort@plt+0x4d0>
   10eac:	vmov.f32	s0, s17
   10eb0:	ldr	r1, [pc, #296]	; 10fe0 <abort@plt+0x910>
   10eb4:	mov	r0, #10
   10eb8:	bl	10840 <abort@plt+0x170>
   10ebc:	vdiv.f64	d7, d12, d10
   10ec0:	vcvt.f64.f32	d13, s17
   10ec4:	ldr	r3, [r5]
   10ec8:	cmp	r3, #0
   10ecc:	vdiv.f64	d0, d7, d13
   10ed0:	vmul.f64	d0, d0, d11
   10ed4:	vcvt.f32.f64	s20, d0
   10ed8:	beq	10bbc <abort@plt+0x4ec>
   10edc:	vmov.f32	s0, s20
   10ee0:	ldr	r1, [pc, #252]	; 10fe4 <abort@plt+0x914>
   10ee4:	mov	r0, #11
   10ee8:	bl	10840 <abort@plt+0x170>
   10eec:	vdiv.f32	s15, s16, s20
   10ef0:	ldr	r3, [r5]
   10ef4:	cmp	r3, #0
   10ef8:	vdiv.f32	s30, s31, s15
   10efc:	beq	10bc4 <abort@plt+0x4f4>
   10f00:	vmov.f32	s0, s30
   10f04:	ldr	r1, [pc, #220]	; 10fe8 <abort@plt+0x918>
   10f08:	mov	r0, #12
   10f0c:	bl	10840 <abort@plt+0x170>
   10f10:	vcvt.f64.f32	d10, s30
   10f14:	ldr	r3, [r5]
   10f18:	cmp	r3, #0
   10f1c:	vdiv.f64	d6, d12, d10
   10f20:	vdiv.f64	d7, d6, d13
   10f24:	vmul.f64	d11, d7, d11
   10f28:	vcvt.f32.f64	s22, d11
   10f2c:	beq	10bc8 <abort@plt+0x4f8>
   10f30:	vmov.f32	s0, s22
   10f34:	ldr	r1, [pc, #176]	; 10fec <abort@plt+0x91c>
   10f38:	mov	r0, #13
   10f3c:	bl	10840 <abort@plt+0x170>
   10f40:	cmp	r7, #0
   10f44:	vcvtne.f64.f32	d11, s22
   10f48:	vldrne	d7, [pc, #96]	; 10fb0 <abort@plt+0x8e0>
   10f4c:	ldreq	r3, [r5]
   10f50:	ldrne	r3, [r5]
   10f54:	vmulne.f64	d11, d11, d7
   10f58:	vcvtne.f32.f64	s22, d11
   10f5c:	cmp	r3, #0
   10f60:	beq	10bc8 <abort@plt+0x4f8>
   10f64:	vmov.f32	s0, s22
   10f68:	ldr	r1, [pc, #128]	; 10ff0 <abort@plt+0x920>
   10f6c:	mov	r0, #14
   10f70:	bl	10840 <abort@plt+0x170>
   10f74:	cmp	r8, #0
   10f78:	ldr	r6, [r5]
   10f7c:	bne	10ff8 <abort@plt+0x928>
   10f80:	vldr	s16, [pc, #48]	; 10fb8 <abort@plt+0x8e8>
   10f84:	b	11024 <abort@plt+0x954>
   10f88:	stclhi	15, cr13, [pc, #-240]	; 10ea0 <abort@plt+0x7d0>
   10f8c:	svccc	0x00926e97
   10f90:	andeq	r0, r0, r0
   10f94:	svccc	0x00f00000	; IMB
   10f98:			; <UNDEFINED> instruction: 0x01a36e2f
   10f9c:	svccc	0x004205bc
   10fa0:	andeq	r0, r0, r0
   10fa4:	smlawbmi	lr, r0, r4, r8
   10fa8:	andeq	r0, r0, r0
   10fac:	addmi	r3, r1, r0
   10fb0:	andeq	r0, r0, r0
   10fb4:	svccc	0x00e00000
   10fb8:	andeq	r0, r0, r0
   10fbc:	svccc	0x00000000
   10fc0:	svccc	0x00800000
   10fc4:	submi	r0, r0, r0
   10fc8:	andeq	r1, r1, r8, lsl #15
   10fcc:	andeq	r1, r1, r0, lsr #15
   10fd0:			; <UNDEFINED> instruction: 0x000117b8
   10fd4:	andeq	r1, r1, r4, asr #15
   10fd8:	ldrdeq	r1, [r1], -r4
   10fdc:	andeq	r1, r1, r0, ror #15
   10fe0:	strdeq	r1, [r1], -r0
   10fe4:	andeq	r1, r1, r0, lsl #16
   10fe8:	andeq	r1, r1, r4, lsl r8
   10fec:	andeq	r1, r1, r0, lsr #16
   10ff0:	andeq	r1, r1, r0, lsr r8
   10ff4:	mov	r6, #0
   10ff8:	vcvt.f64.f32	d7, s19
   10ffc:	vldr	d4, [pc, #652]	; 11290 <abort@plt+0xbc0>
   11000:	vldr	d5, [pc, #656]	; 11298 <abort@plt+0xbc8>
   11004:	vldr	d6, [pc, #660]	; 112a0 <abort@plt+0xbd0>
   11008:	vmul.f64	d7, d7, d4
   1100c:	vdiv.f64	d0, d7, d5
   11010:	vmul.f64	d0, d0, d6
   11014:	bl	106a0 <rint@plt>
   11018:	vldr	d7, [pc, #648]	; 112a8 <abort@plt+0xbd8>
   1101c:	vmul.f64	d0, d0, d7
   11020:	vcvt.f32.f64	s16, d0
   11024:	cmp	r6, #0
   11028:	beq	10bd4 <abort@plt+0x504>
   1102c:	vmov.f32	s0, s16
   11030:	ldr	r1, [pc, #700]	; 112f4 <abort@plt+0xc24>
   11034:	mov	r0, #15
   11038:	bl	10840 <abort@plt+0x170>
   1103c:	ldr	r3, [r5]
   11040:	cmp	r3, #0
   11044:	beq	10bd4 <abort@plt+0x504>
   11048:	vmov.f32	s0, s16
   1104c:	ldr	r1, [pc, #676]	; 112f8 <abort@plt+0xc28>
   11050:	mov	r0, #16
   11054:	bl	10840 <abort@plt+0x170>
   11058:	vadd.f32	s0, s16, s19
   1105c:	ldr	r3, [r5]
   11060:	cmp	r3, #0
   11064:	vadd.f32	s16, s0, s16
   11068:	beq	10bdc <abort@plt+0x50c>
   1106c:	vmov.f32	s0, s16
   11070:	ldr	r1, [pc, #644]	; 112fc <abort@plt+0xc2c>
   11074:	mov	r0, #17
   11078:	bl	10840 <abort@plt+0x170>
   1107c:	vldr	d6, [pc, #556]	; 112b0 <abort@plt+0xbe0>
   11080:	vldr	d5, [pc, #560]	; 112b8 <abort@plt+0xbe8>
   11084:	vldr	d7, [pc, #564]	; 112c0 <abort@plt+0xbf0>
   11088:	ldr	r3, [r5]
   1108c:	vmul.f64	d10, d10, d6
   11090:	cmp	r3, #0
   11094:	vdiv.f64	d6, d10, d5
   11098:	vsub.f64	d7, d7, d6
   1109c:	vcvt.f32.f64	s20, d7
   110a0:	beq	10bf8 <abort@plt+0x528>
   110a4:	vmov.f32	s0, s20
   110a8:	ldr	r1, [pc, #592]	; 11300 <abort@plt+0xc30>
   110ac:	mov	r0, #18
   110b0:	bl	10840 <abort@plt+0x170>
   110b4:	vmul.f32	s10, s16, s20
   110b8:	vcvt.f64.f32	d7, s20
   110bc:	vldr	d6, [pc, #468]	; 11298 <abort@plt+0xbc8>
   110c0:	vldr	d4, [pc, #512]	; 112c8 <abort@plt+0xbf8>
   110c4:	vldr	d11, [pc, #516]	; 112d0 <abort@plt+0xc00>
   110c8:	vcvt.f64.f32	d5, s10
   110cc:	vsub.f64	d7, d6, d7
   110d0:	vdiv.f64	d0, d5, d7
   110d4:	vmul.f64	d0, d0, d4
   110d8:	bl	106a0 <rint@plt>
   110dc:	ldr	r3, [r5]
   110e0:	cmp	r3, #0
   110e4:	vmul.f64	d11, d0, d11
   110e8:	vcvt.f32.f64	s22, d11
   110ec:	beq	10c28 <abort@plt+0x558>
   110f0:	vmov.f32	s0, s22
   110f4:	ldr	r1, [pc, #520]	; 11304 <abort@plt+0xc34>
   110f8:	mov	r0, #19
   110fc:	bl	10840 <abort@plt+0x170>
   11100:	ldr	r3, [r5]
   11104:	vadd.f32	s16, s16, s22
   11108:	cmp	r3, #0
   1110c:	beq	10c2c <abort@plt+0x55c>
   11110:	vmov.f32	s0, s16
   11114:	ldr	r1, [pc, #492]	; 11308 <abort@plt+0xc38>
   11118:	mov	r0, #20
   1111c:	bl	10840 <abort@plt+0x170>
   11120:	ldr	r3, [r5]
   11124:	vdiv.f32	s20, s16, s30
   11128:	cmp	r3, #0
   1112c:	beq	10c30 <abort@plt+0x560>
   11130:	vmov.f32	s0, s20
   11134:	ldr	r1, [pc, #464]	; 1130c <abort@plt+0xc3c>
   11138:	mov	r0, #21
   1113c:	bl	10840 <abort@plt+0x170>
   11140:	vldr	s15, [pc, #416]	; 112e8 <abort@plt+0xc18>
   11144:	ldr	r3, [r5]
   11148:	cmp	r3, #0
   1114c:	vdiv.f32	s21, s15, s30
   11150:	beq	10c38 <abort@plt+0x568>
   11154:	vmov.f32	s0, s21
   11158:	ldr	r1, [pc, #432]	; 11310 <abort@plt+0xc40>
   1115c:	mov	r0, #22
   11160:	bl	10840 <abort@plt+0x170>
   11164:	vcvt.f64.f32	d7, s16
   11168:	vldr	d6, [pc, #360]	; 112d8 <abort@plt+0xc08>
   1116c:	vldr	d0, [pc, #300]	; 112a0 <abort@plt+0xbd0>
   11170:	vmul.f64	d7, d7, d6
   11174:	vmul.f64	d0, d7, d0
   11178:	bl	106a0 <rint@plt>
   1117c:	vldr	d7, [pc, #292]	; 112a8 <abort@plt+0xbd8>
   11180:	ldr	r3, [r5]
   11184:	cmp	r3, #0
   11188:	vmul.f64	d0, d0, d7
   1118c:	vcvt.f32.f64	s23, d0
   11190:	beq	10c5c <abort@plt+0x58c>
   11194:	vmov.f32	s0, s23
   11198:	ldr	r1, [pc, #372]	; 11314 <abort@plt+0xc44>
   1119c:	mov	r0, #17
   111a0:	bl	10840 <abort@plt+0x170>
   111a4:	vcvt.f64.f32	d7, s22
   111a8:	vcvt.f64.f32	d0, s23
   111ac:	vldr	d6, [pc, #300]	; 112e0 <abort@plt+0xc10>
   111b0:	ldr	r3, [r5]
   111b4:	cmp	r3, #0
   111b8:	vnmls.f64	d0, d7, d6
   111bc:	vcvt.f32.f64	s22, d0
   111c0:	beq	10c70 <abort@plt+0x5a0>
   111c4:	vmov.f32	s0, s22
   111c8:	ldr	r1, [pc, #328]	; 11318 <abort@plt+0xc48>
   111cc:	mov	r0, #18
   111d0:	bl	10840 <abort@plt+0x170>
   111d4:	vldr	s15, [pc, #272]	; 112ec <abort@plt+0xc1c>
   111d8:	ldr	r3, [r5]
   111dc:	cmp	r3, #0
   111e0:	vadd.f32	s28, s28, s15
   111e4:	beq	10c78 <abort@plt+0x5a8>
   111e8:	vmov.f32	s0, s28
   111ec:	ldr	r1, [pc, #296]	; 1131c <abort@plt+0xc4c>
   111f0:	mov	r0, #36	; 0x24
   111f4:	bl	10840 <abort@plt+0x170>
   111f8:	b	10c78 <abort@plt+0x5a8>
   111fc:	vldr	s28, [pc, #236]	; 112f0 <abort@plt+0xc20>
   11200:	b	10b38 <abort@plt+0x468>
   11204:	vmov.f32	s0, s19
   11208:	ldr	r1, [pc, #272]	; 11320 <abort@plt+0xc50>
   1120c:	mov	r0, #1
   11210:	bl	10840 <abort@plt+0x170>
   11214:	cmp	r7, #0
   11218:	vcvt.f32.s32	s18, s18
   1121c:	ldr	r6, [r5]
   11220:	beq	11254 <abort@plt+0xb84>
   11224:	vcvt.f64.f32	d7, s18
   11228:	vldr	d6, [pc, #176]	; 112e0 <abort@plt+0xc10>
   1122c:	cmp	r6, #0
   11230:	vmul.f64	d7, d7, d6
   11234:	vcvt.f32.f64	s18, d7
   11238:	beq	1127c <abort@plt+0xbac>
   1123c:	vmov.f32	s0, s18
   11240:	ldr	r1, [pc, #220]	; 11324 <abort@plt+0xc54>
   11244:	mov	r0, #2
   11248:	bl	10840 <abort@plt+0x170>
   1124c:	ldr	r6, [r5]
   11250:	b	10af0 <abort@plt+0x420>
   11254:	cmp	r6, #0
   11258:	vmoveq.f32	s16, s29
   1125c:	beq	10b18 <abort@plt+0x448>
   11260:	vmov.f32	s0, s18
   11264:	ldr	r1, [pc, #184]	; 11324 <abort@plt+0xc54>
   11268:	mov	r0, #2
   1126c:	bl	10840 <abort@plt+0x170>
   11270:	vmov.f32	s16, s29
   11274:	ldr	r6, [r5]
   11278:	b	10afc <abort@plt+0x42c>
   1127c:	vcvt.f64.f32	d8, s29
   11280:	vadd.f64	d8, d8, d8
   11284:	vcvt.f32.f64	s16, d8
   11288:	b	10b18 <abort@plt+0x448>
   1128c:	nop			; (mov r0, r0)
   11290:	stclgt	12, cr12, [ip], {205}	; 0xcd
   11294:	svccc	0x00fccccc
   11298:	andeq	r0, r0, r0
   1129c:	subsmi	r0, r9, r0
   112a0:	andeq	r0, r0, r0
   112a4:	svccc	0x00c00000
   112a8:	andeq	r0, r0, r0
   112ac:	eormi	r0, r0, r0
   112b0:	andeq	r0, r0, r0
   112b4:	rsbsmi	ip, r2, r0
   112b8:	andeq	r0, r0, r0
   112bc:	addmi	r4, pc, r0
   112c0:	andeq	r0, r0, r0
   112c4:	eorsmi	r0, lr, r0
   112c8:	andeq	r0, r0, r0
   112cc:	svccc	0x00b00000
   112d0:	andeq	r0, r0, r0
   112d4:	eorsmi	r0, r0, r0
   112d8:			; <UNDEFINED> instruction: 0x47ae147b
   112dc:	svccc	0x00b47ae1
   112e0:	andeq	r0, r0, r0
   112e4:	svccc	0x00e00000
   112e8:	ldrbtmi	r0, [sl], #-0
   112ec:	svccc	0x00800000
   112f0:	svccc	0x00000000
   112f4:	andeq	r1, r1, r0, asr #16
   112f8:	andeq	r1, r1, r8, asr r8
   112fc:	andeq	r1, r1, r0, ror r8
   11300:	andeq	r1, r1, r8, lsl #17
   11304:	muleq	r1, ip, r8
   11308:			; <UNDEFINED> instruction: 0x000118b0
   1130c:	andeq	r1, r1, r0, asr #17
   11310:	ldrdeq	r1, [r1], -r0
   11314:	ldrdeq	r1, [r1], -ip
   11318:	strdeq	r1, [r1], -r0
   1131c:	andeq	r1, r1, ip, lsl #18
   11320:	andeq	r1, r1, r4, ror #14
   11324:	andeq	r1, r1, r8, lsr #18
   11328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1132c:	sub	sp, sp, #12
   11330:	mov	r7, r0
   11334:	str	r1, [sp, #4]
   11338:	mov	r4, r1
   1133c:	mov	r0, #1
   11340:	mov	r1, #20
   11344:	bl	10604 <calloc@plt>
   11348:	cmp	r7, #3
   1134c:	mov	fp, r0
   11350:	ble	11484 <abort@plt+0xdb4>
   11354:	mov	r2, #10
   11358:	mov	r1, #0
   1135c:	ldr	r0, [r4, #4]
   11360:	bl	1061c <strtol@plt>
   11364:	mov	r2, #10
   11368:	mov	r1, #0
   1136c:	str	r0, [fp]
   11370:	ldr	r0, [r4, #8]
   11374:	bl	1061c <strtol@plt>
   11378:	mov	r1, #0
   1137c:	str	r0, [fp, #4]
   11380:	ldr	r0, [r4, #12]
   11384:	bl	10694 <strtod@plt>
   11388:	cmp	r7, #4
   1138c:	vcvt.f32.f64	s0, d0
   11390:	vstr	s0, [fp, #16]
   11394:	beq	11424 <abort@plt+0xd54>
   11398:	ldr	r8, [pc, #436]	; 11554 <abort@plt+0xe84>
   1139c:	ldr	sl, [pc, #436]	; 11558 <abort@plt+0xe88>
   113a0:	add	r6, r4, #12
   113a4:	mov	r9, #1
   113a8:	mov	r4, #4
   113ac:	ldr	r5, [r6, #4]!
   113b0:	mov	r1, r8
   113b4:	mov	r0, r5
   113b8:	bl	10610 <strcmp@plt>
   113bc:	cmp	r0, #0
   113c0:	beq	1144c <abort@plt+0xd7c>
   113c4:	ldr	r1, [pc, #400]	; 1155c <abort@plt+0xe8c>
   113c8:	mov	r0, r5
   113cc:	bl	10610 <strcmp@plt>
   113d0:	cmp	r0, #0
   113d4:	beq	1144c <abort@plt+0xd7c>
   113d8:	ldr	r1, [pc, #384]	; 11560 <abort@plt+0xe90>
   113dc:	mov	r0, r5
   113e0:	bl	10610 <strcmp@plt>
   113e4:	cmp	r0, #0
   113e8:	beq	11454 <abort@plt+0xd84>
   113ec:	ldr	r1, [pc, #368]	; 11564 <abort@plt+0xe94>
   113f0:	mov	r0, r5
   113f4:	bl	10610 <strcmp@plt>
   113f8:	cmp	r0, #0
   113fc:	beq	11454 <abort@plt+0xd84>
   11400:	ldr	r1, [pc, #352]	; 11568 <abort@plt+0xe98>
   11404:	mov	r0, r5
   11408:	bl	10610 <strcmp@plt>
   1140c:	cmp	r0, #0
   11410:	bne	1145c <abort@plt+0xd8c>
   11414:	str	r9, [fp, #8]
   11418:	add	r4, r4, #1
   1141c:	cmp	r7, r4
   11420:	bne	113ac <abort@plt+0xcdc>
   11424:	ldr	r3, [fp, #12]
   11428:	cmp	r3, #0
   1142c:	bne	11440 <abort@plt+0xd70>
   11430:	ldr	r3, [fp, #8]
   11434:	cmp	r3, #0
   11438:	moveq	r3, #1
   1143c:	streq	r3, [fp, #8]
   11440:	mov	r0, fp
   11444:	add	sp, sp, #12
   11448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1144c:	str	r9, [sl]
   11450:	b	11418 <abort@plt+0xd48>
   11454:	str	r9, [fp, #12]
   11458:	b	11418 <abort@plt+0xd48>
   1145c:	ldr	r1, [pc, #264]	; 1156c <abort@plt+0xe9c>
   11460:	mov	r0, r5
   11464:	bl	10610 <strcmp@plt>
   11468:	cmp	r0, #0
   1146c:	beq	11414 <abort@plt+0xd44>
   11470:	mov	r0, r5
   11474:	ldr	r1, [pc, #244]	; 11570 <abort@plt+0xea0>
   11478:	bl	10610 <strcmp@plt>
   1147c:	cmp	r0, #0
   11480:	beq	11414 <abort@plt+0xd44>
   11484:	ldr	r4, [pc, #232]	; 11574 <abort@plt+0xea4>
   11488:	mov	r0, #10
   1148c:	ldr	r1, [r4]
   11490:	bl	106c4 <fputc@plt>
   11494:	ldr	r3, [sp, #4]
   11498:	ldr	r2, [pc, #216]	; 11578 <abort@plt+0xea8>
   1149c:	ldr	r0, [r4]
   114a0:	ldr	r3, [r3]
   114a4:	mov	r1, #1
   114a8:	bl	106ac <__fprintf_chk@plt>
   114ac:	ldr	r1, [r4]
   114b0:	mov	r0, #10
   114b4:	bl	106c4 <fputc@plt>
   114b8:	ldr	r3, [r4]
   114bc:	mov	r2, #61	; 0x3d
   114c0:	mov	r1, #1
   114c4:	ldr	r0, [pc, #176]	; 1157c <abort@plt+0xeac>
   114c8:	bl	10634 <fwrite@plt>
   114cc:	ldr	r3, [r4]
   114d0:	mov	r2, #59	; 0x3b
   114d4:	mov	r1, #1
   114d8:	ldr	r0, [pc, #160]	; 11580 <abort@plt+0xeb0>
   114dc:	bl	10634 <fwrite@plt>
   114e0:	ldr	r3, [r4]
   114e4:	mov	r2, #52	; 0x34
   114e8:	mov	r1, #1
   114ec:	ldr	r0, [pc, #144]	; 11584 <abort@plt+0xeb4>
   114f0:	bl	10634 <fwrite@plt>
   114f4:	ldr	r3, [r4]
   114f8:	mov	r2, #79	; 0x4f
   114fc:	mov	r1, #1
   11500:	ldr	r0, [pc, #128]	; 11588 <abort@plt+0xeb8>
   11504:	bl	10634 <fwrite@plt>
   11508:	ldr	r3, [r4]
   1150c:	mov	r2, #58	; 0x3a
   11510:	mov	r1, #1
   11514:	ldr	r0, [pc, #112]	; 1158c <abort@plt+0xebc>
   11518:	bl	10634 <fwrite@plt>
   1151c:	ldr	r3, [r4]
   11520:	mov	r2, #129	; 0x81
   11524:	mov	r1, #1
   11528:	ldr	r0, [pc, #96]	; 11590 <abort@plt+0xec0>
   1152c:	bl	10634 <fwrite@plt>
   11530:	ldr	r1, [r4]
   11534:	mov	r0, #10
   11538:	bl	106c4 <fputc@plt>
   1153c:	mov	r0, fp
   11540:	bl	10628 <free@plt>
   11544:	mov	fp, #0
   11548:	mov	r0, fp
   1154c:	add	sp, sp, #12
   11550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11554:	andeq	r1, r1, r8, lsr r9
   11558:	andeq	r2, r2, r8, rrx
   1155c:	andeq	r1, r1, ip, lsr r9
   11560:	andeq	r1, r1, r8, asr #18
   11564:	andeq	r1, r1, ip, asr #18
   11568:	andeq	r1, r1, r8, asr r9
   1156c:	andeq	r1, r1, ip, asr r9
   11570:	andeq	r1, r1, r8, ror #18
   11574:	andeq	r2, r2, r0, rrx
   11578:	andeq	r1, r1, r4, ror r9
   1157c:			; <UNDEFINED> instruction: 0x000119b8
   11580:	strdeq	r1, [r1], -r8
   11584:	andeq	r1, r1, r4, lsr sl
   11588:	andeq	r1, r1, ip, ror #20
   1158c:			; <UNDEFINED> instruction: 0x00011abc
   11590:	strdeq	r1, [r1], -r8
   11594:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11598:	mov	r7, r0
   1159c:	ldr	r6, [pc, #72]	; 115ec <abort@plt+0xf1c>
   115a0:	ldr	r5, [pc, #72]	; 115f0 <abort@plt+0xf20>
   115a4:	add	r6, pc, r6
   115a8:	add	r5, pc, r5
   115ac:	sub	r6, r6, r5
   115b0:	mov	r8, r1
   115b4:	mov	r9, r2
   115b8:	bl	105e4 <calloc@plt-0x20>
   115bc:	asrs	r6, r6, #2
   115c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   115c4:	mov	r4, #0
   115c8:	add	r4, r4, #1
   115cc:	ldr	r3, [r5], #4
   115d0:	mov	r2, r9
   115d4:	mov	r1, r8
   115d8:	mov	r0, r7
   115dc:	blx	r3
   115e0:	cmp	r6, r4
   115e4:	bne	115c8 <abort@plt+0xef8>
   115e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   115ec:	andeq	r0, r1, r8, asr #18
   115f0:	andeq	r0, r1, r0, asr #18
   115f4:	bx	lr

Disassembly of section .fini:

000115f8 <.fini>:
   115f8:	push	{r3, lr}
   115fc:	pop	{r3, pc}
