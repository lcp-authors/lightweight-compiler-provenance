
raspbian-preinstalled/colrm:     file format elf32-littlearm


Disassembly of section .init:

00010594 <.init>:
   10594:	push	{r3, lr}
   10598:	bl	108ac <abort@plt+0x250>
   1059c:	pop	{r3, pc}

Disassembly of section .plt:

000105a0 <strtol@plt-0x14>:
   105a0:	push	{lr}		; (str lr, [sp, #-4]!)
   105a4:	ldr	lr, [pc, #4]	; 105b0 <strtol@plt-0x4>
   105a8:	add	lr, pc, lr
   105ac:	ldr	pc, [lr, #8]!
   105b0:	andeq	r0, r1, r0, asr sl

000105b4 <strtol@plt>:
   105b4:	add	ip, pc, #0, 12
   105b8:	add	ip, ip, #16, 20	; 0x10000
   105bc:	ldr	pc, [ip, #2640]!	; 0xa50

000105c0 <wcwidth@plt>:
   105c0:	add	ip, pc, #0, 12
   105c4:	add	ip, ip, #16, 20	; 0x10000
   105c8:	ldr	pc, [ip, #2632]!	; 0xa48

000105cc <ferror@plt>:
   105cc:	add	ip, pc, #0, 12
   105d0:	add	ip, ip, #16, 20	; 0x10000
   105d4:	ldr	pc, [ip, #2624]!	; 0xa40

000105d8 <err@plt>:
   105d8:	add	ip, pc, #0, 12
   105dc:	add	ip, ip, #16, 20	; 0x10000
   105e0:	ldr	pc, [ip, #2616]!	; 0xa38

000105e4 <putwchar@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #16, 20	; 0x10000
   105ec:	ldr	pc, [ip, #2608]!	; 0xa30

000105f0 <fwrite@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #16, 20	; 0x10000
   105f8:	ldr	pc, [ip, #2600]!	; 0xa28

000105fc <__libc_start_main@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #16, 20	; 0x10000
   10604:	ldr	pc, [ip, #2592]!	; 0xa20

00010608 <__gmon_start__@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #16, 20	; 0x10000
   10610:	ldr	pc, [ip, #2584]!	; 0xa18

00010614 <exit@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #16, 20	; 0x10000
   1061c:	ldr	pc, [ip, #2576]!	; 0xa10

00010620 <feof@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #16, 20	; 0x10000
   10628:	ldr	pc, [ip, #2568]!	; 0xa08

0001062c <getopt@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #16, 20	; 0x10000
   10634:	ldr	pc, [ip, #2560]!	; 0xa00

00010638 <getwchar@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #16, 20	; 0x10000
   10640:	ldr	pc, [ip, #2552]!	; 0x9f8

00010644 <setlocale@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #16, 20	; 0x10000
   1064c:	ldr	pc, [ip, #2544]!	; 0x9f0

00010650 <errx@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #16, 20	; 0x10000
   10658:	ldr	pc, [ip, #2536]!	; 0x9e8

0001065c <abort@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2528]!	; 0x9e0

Disassembly of section .text:

00010668 <.text>:
   10668:	ldr	r3, [pc, #484]	; 10854 <abort@plt+0x1f8>
   1066c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10670:	sub	sp, sp, #8
   10674:	ldr	r3, [r3]
   10678:	mov	r6, r0
   1067c:	mov	r4, r1
   10680:	mov	r0, #6
   10684:	ldr	r1, [pc, #460]	; 10858 <abort@plt+0x1fc>
   10688:	str	r3, [sp, #4]
   1068c:	bl	10644 <setlocale@plt>
   10690:	mov	r1, r4
   10694:	mov	r0, r6
   10698:	ldr	r2, [pc, #440]	; 10858 <abort@plt+0x1fc>
   1069c:	bl	1062c <getopt@plt>
   106a0:	cmn	r0, #1
   106a4:	bne	10740 <abort@plt+0xe4>
   106a8:	ldr	r3, [pc, #428]	; 1085c <abort@plt+0x200>
   106ac:	ldr	r7, [r3]
   106b0:	sub	r6, r6, r7
   106b4:	cmp	r6, #1
   106b8:	add	r8, r4, r7, lsl #2
   106bc:	beq	107cc <abort@plt+0x170>
   106c0:	cmp	r6, #2
   106c4:	beq	1080c <abort@plt+0x1b0>
   106c8:	cmp	r6, #0
   106cc:	bne	10740 <abort@plt+0xe4>
   106d0:	mov	r5, r6
   106d4:	adds	r7, r6, #0
   106d8:	movne	r7, #1
   106dc:	cmp	r5, r6
   106e0:	movls	r4, #0
   106e4:	andhi	r4, r7, #1
   106e8:	cmp	r4, #0
   106ec:	bne	10848 <abort@plt+0x1ec>
   106f0:	ldr	r9, [pc, #360]	; 10860 <abort@plt+0x204>
   106f4:	ldr	r8, [pc, #360]	; 10864 <abort@plt+0x208>
   106f8:	bl	10638 <getwchar@plt>
   106fc:	add	r3, r0, #1
   10700:	mov	sl, r0
   10704:	cmp	r3, #11
   10708:	ldrls	pc, [pc, r3, lsl #2]
   1070c:	b	107bc <abort@plt+0x160>
   10710:			; <UNDEFINED> instruction: 0x000107b0
   10714:			; <UNDEFINED> instruction: 0x000107bc
   10718:			; <UNDEFINED> instruction: 0x000107bc
   1071c:			; <UNDEFINED> instruction: 0x000107bc
   10720:			; <UNDEFINED> instruction: 0x000107bc
   10724:			; <UNDEFINED> instruction: 0x000107bc
   10728:			; <UNDEFINED> instruction: 0x000107bc
   1072c:			; <UNDEFINED> instruction: 0x000107bc
   10730:			; <UNDEFINED> instruction: 0x000107bc
   10734:	andeq	r0, r1, r0, lsr #15
   10738:	muleq	r1, r4, r7
   1073c:	andeq	r0, r1, r4, asr #14
   10740:	bl	10960 <abort@plt+0x304>
   10744:	mov	r4, #0
   10748:	cmp	r4, r5
   1074c:	movcs	r3, #0
   10750:	movcc	r3, #1
   10754:	cmp	r5, #0
   10758:	moveq	r3, #1
   1075c:	cmp	r3, #0
   10760:	bne	10778 <abort@plt+0x11c>
   10764:	cmp	r4, r6
   10768:	movls	r3, #0
   1076c:	andhi	r3, r7, #1
   10770:	cmp	r3, #0
   10774:	beq	106f8 <abort@plt+0x9c>
   10778:	mov	r0, sl
   1077c:	bl	105e4 <putwchar@plt>
   10780:	cmn	r0, #1
   10784:	bne	106f8 <abort@plt+0x9c>
   10788:	ldr	r0, [r8]
   1078c:	bl	1098c <abort@plt+0x330>
   10790:	b	106f8 <abort@plt+0x9c>
   10794:	add	r4, r4, #8
   10798:	bic	r4, r4, #7
   1079c:	b	10748 <abort@plt+0xec>
   107a0:	cmp	r4, #0
   107a4:	subne	r4, r4, #1
   107a8:	bne	10748 <abort@plt+0xec>
   107ac:	b	10778 <abort@plt+0x11c>
   107b0:	ldr	r0, [r9]
   107b4:	bl	1098c <abort@plt+0x330>
   107b8:	b	10748 <abort@plt+0xec>
   107bc:	bl	105c0 <wcwidth@plt>
   107c0:	cmp	r0, #0
   107c4:	addgt	r4, r4, r0
   107c8:	b	10748 <abort@plt+0xec>
   107cc:	mov	r6, #0
   107d0:	mov	r5, sp
   107d4:	mov	r1, r5
   107d8:	mov	r2, #10
   107dc:	ldr	r0, [r4, r7, lsl #2]
   107e0:	bl	105b4 <strtol@plt>
   107e4:	subs	r5, r0, #0
   107e8:	beq	107fc <abort@plt+0x1a0>
   107ec:	ldr	r3, [sp]
   107f0:	ldrb	r3, [r3]
   107f4:	cmp	r3, #0
   107f8:	beq	106d4 <abort@plt+0x78>
   107fc:	ldr	r2, [r4, r7, lsl #2]
   10800:	ldr	r1, [pc, #96]	; 10868 <abort@plt+0x20c>
   10804:	mov	r0, #1
   10808:	bl	10650 <errx@plt>
   1080c:	mov	r5, sp
   10810:	mov	r1, r5
   10814:	mov	r2, #10
   10818:	ldr	r0, [r8, #4]
   1081c:	bl	105b4 <strtol@plt>
   10820:	subs	r6, r0, #0
   10824:	beq	10838 <abort@plt+0x1dc>
   10828:	ldr	r3, [sp]
   1082c:	ldrb	r3, [r3]
   10830:	cmp	r3, #0
   10834:	beq	107d4 <abort@plt+0x178>
   10838:	ldr	r2, [r8, #4]
   1083c:	ldr	r1, [pc, #36]	; 10868 <abort@plt+0x20c>
   10840:	mov	r0, #1
   10844:	bl	10650 <errx@plt>
   10848:	ldr	r1, [pc, #28]	; 1086c <abort@plt+0x210>
   1084c:	mov	r0, #1
   10850:	bl	10650 <errx@plt>
   10854:	andeq	r0, r2, r8, lsl #30
   10858:	andeq	r0, r1, r8, ror sl
   1085c:	andeq	r1, r2, r8, asr r0
   10860:	andeq	r1, r2, r8, rrx
   10864:	andeq	r1, r2, ip, rrx
   10868:	muleq	r1, r0, sl
   1086c:	andeq	r0, r1, r8, lsr #21
   10870:	mov	fp, #0
   10874:	mov	lr, #0
   10878:	pop	{r1}		; (ldr r1, [sp], #4)
   1087c:	mov	r2, sp
   10880:	push	{r2}		; (str r2, [sp, #-4]!)
   10884:	push	{r0}		; (str r0, [sp, #-4]!)
   10888:	ldr	ip, [pc, #16]	; 108a0 <abort@plt+0x244>
   1088c:	push	{ip}		; (str ip, [sp, #-4]!)
   10890:	ldr	r0, [pc, #12]	; 108a4 <abort@plt+0x248>
   10894:	ldr	r3, [pc, #12]	; 108a8 <abort@plt+0x24c>
   10898:	bl	105fc <__libc_start_main@plt>
   1089c:	bl	1065c <abort@plt>
   108a0:	andeq	r0, r1, ip, asr #20
   108a4:	andeq	r0, r1, r8, ror #12
   108a8:	andeq	r0, r1, ip, ror #19
   108ac:	ldr	r3, [pc, #20]	; 108c8 <abort@plt+0x26c>
   108b0:	ldr	r2, [pc, #20]	; 108cc <abort@plt+0x270>
   108b4:	add	r3, pc, r3
   108b8:	ldr	r2, [r3, r2]
   108bc:	cmp	r2, #0
   108c0:	bxeq	lr
   108c4:	b	10608 <__gmon_start__@plt>
   108c8:	andeq	r0, r1, r4, asr #14
   108cc:	andeq	r0, r0, r8, asr #32
   108d0:	ldr	r0, [pc, #24]	; 108f0 <abort@plt+0x294>
   108d4:	ldr	r3, [pc, #24]	; 108f4 <abort@plt+0x298>
   108d8:	cmp	r3, r0
   108dc:	bxeq	lr
   108e0:	ldr	r3, [pc, #16]	; 108f8 <abort@plt+0x29c>
   108e4:	cmp	r3, #0
   108e8:	bxeq	lr
   108ec:	bx	r3
   108f0:	andeq	r1, r2, r4, asr r0
   108f4:	andeq	r1, r2, r4, asr r0
   108f8:	andeq	r0, r0, r0
   108fc:	ldr	r0, [pc, #36]	; 10928 <abort@plt+0x2cc>
   10900:	ldr	r1, [pc, #36]	; 1092c <abort@plt+0x2d0>
   10904:	sub	r1, r1, r0
   10908:	asr	r1, r1, #2
   1090c:	add	r1, r1, r1, lsr #31
   10910:	asrs	r1, r1, #1
   10914:	bxeq	lr
   10918:	ldr	r3, [pc, #16]	; 10930 <abort@plt+0x2d4>
   1091c:	cmp	r3, #0
   10920:	bxeq	lr
   10924:	bx	r3
   10928:	andeq	r1, r2, r4, asr r0
   1092c:	andeq	r1, r2, r4, asr r0
   10930:	andeq	r0, r0, r0
   10934:	push	{r4, lr}
   10938:	ldr	r4, [pc, #24]	; 10958 <abort@plt+0x2fc>
   1093c:	ldrb	r3, [r4]
   10940:	cmp	r3, #0
   10944:	popne	{r4, pc}
   10948:	bl	108d0 <abort@plt+0x274>
   1094c:	mov	r3, #1
   10950:	strb	r3, [r4]
   10954:	pop	{r4, pc}
   10958:	andeq	r1, r2, r0, ror r0
   1095c:	b	108fc <abort@plt+0x2a0>
   10960:	ldr	r3, [pc, #28]	; 10984 <abort@plt+0x328>
   10964:	push	{r4, lr}
   10968:	mov	r2, #28
   1096c:	mov	r1, #1
   10970:	ldr	r3, [r3]
   10974:	ldr	r0, [pc, #12]	; 10988 <abort@plt+0x32c>
   10978:	bl	105f0 <fwrite@plt>
   1097c:	mov	r0, #1
   10980:	bl	10614 <exit@plt>
   10984:	andeq	r1, r2, r0, rrx
   10988:	andeq	r0, r1, ip, asr sl
   1098c:	push	{r4, lr}
   10990:	mov	r4, r0
   10994:	bl	10620 <feof@plt>
   10998:	cmp	r0, #0
   1099c:	beq	109a8 <abort@plt+0x34c>
   109a0:	mov	r0, #0
   109a4:	bl	10614 <exit@plt>
   109a8:	mov	r0, r4
   109ac:	bl	105cc <ferror@plt>
   109b0:	cmp	r0, #0
   109b4:	popeq	{r4, pc}
   109b8:	ldr	r1, [pc, #28]	; 109dc <abort@plt+0x380>
   109bc:	ldr	r3, [pc, #28]	; 109e0 <abort@plt+0x384>
   109c0:	ldr	r2, [pc, #28]	; 109e4 <abort@plt+0x388>
   109c4:	ldr	r0, [r1]
   109c8:	ldr	r1, [pc, #24]	; 109e8 <abort@plt+0x38c>
   109cc:	cmp	r4, r0
   109d0:	movne	r2, r3
   109d4:	mov	r0, #1
   109d8:	bl	105d8 <err@plt>
   109dc:	andeq	r1, r2, r8, rrx
   109e0:	andeq	r0, r1, r4, lsl #21
   109e4:	andeq	r0, r1, ip, ror sl
   109e8:	andeq	r0, r1, ip, lsl #21
   109ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109f0:	mov	r7, r0
   109f4:	ldr	r6, [pc, #72]	; 10a44 <abort@plt+0x3e8>
   109f8:	ldr	r5, [pc, #72]	; 10a48 <abort@plt+0x3ec>
   109fc:	add	r6, pc, r6
   10a00:	add	r5, pc, r5
   10a04:	sub	r6, r6, r5
   10a08:	mov	r8, r1
   10a0c:	mov	r9, r2
   10a10:	bl	10594 <strtol@plt-0x20>
   10a14:	asrs	r6, r6, #2
   10a18:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a1c:	mov	r4, #0
   10a20:	add	r4, r4, #1
   10a24:	ldr	r3, [r5], #4
   10a28:	mov	r2, r9
   10a2c:	mov	r1, r8
   10a30:	mov	r0, r7
   10a34:	blx	r3
   10a38:	cmp	r6, r4
   10a3c:	bne	10a20 <abort@plt+0x3c4>
   10a40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a44:	andeq	r0, r1, r0, lsl #10
   10a48:	strdeq	r0, [r1], -r8
   10a4c:	bx	lr

Disassembly of section .fini:

00010a50 <.fini>:
   10a50:	push	{r3, lr}
   10a54:	pop	{r3, pc}
