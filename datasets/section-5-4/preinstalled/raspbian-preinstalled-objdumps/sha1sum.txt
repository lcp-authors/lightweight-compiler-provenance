
raspbian-preinstalled/sha1sum:     file format elf32-littlearm


Disassembly of section .init:

00010d64 <.init>:
   10d64:	push	{r3, lr}
   10d68:	bl	121d0 <dcngettext@plt+0x11b8>
   10d6c:	pop	{r3, pc}

Disassembly of section .plt:

00010d70 <fdopen@plt-0x14>:
   10d70:	push	{lr}		; (str lr, [sp, #-4]!)
   10d74:	ldr	lr, [pc, #4]	; 10d80 <fdopen@plt-0x4>
   10d78:	add	lr, pc, lr
   10d7c:	ldr	pc, [lr, #8]!
   10d80:	andeq	r8, r1, r0, lsl #5

00010d84 <fdopen@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #24, 20	; 0x18000
   10d8c:	ldr	pc, [ip, #640]!	; 0x280

00010d90 <calloc@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #24, 20	; 0x18000
   10d98:	ldr	pc, [ip, #632]!	; 0x278

00010d9c <fputs_unlocked@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #24, 20	; 0x18000
   10da4:	ldr	pc, [ip, #624]!	; 0x270

00010da8 <raise@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #24, 20	; 0x18000
   10db0:	ldr	pc, [ip, #616]!	; 0x268

00010db4 <__getdelim@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #24, 20	; 0x18000
   10dbc:	ldr	pc, [ip, #608]!	; 0x260

00010dc0 <strcmp@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #24, 20	; 0x18000
   10dc8:	ldr	pc, [ip, #600]!	; 0x258

00010dcc <posix_fadvise64@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #24, 20	; 0x18000
   10dd4:	ldr	pc, [ip, #592]!	; 0x250

00010dd8 <fflush@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #24, 20	; 0x18000
   10de0:	ldr	pc, [ip, #584]!	; 0x248

00010de4 <free@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #24, 20	; 0x18000
   10dec:	ldr	pc, [ip, #576]!	; 0x240

00010df0 <_exit@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #24, 20	; 0x18000
   10df8:	ldr	pc, [ip, #568]!	; 0x238

00010dfc <memcpy@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #24, 20	; 0x18000
   10e04:	ldr	pc, [ip, #560]!	; 0x230

00010e08 <mbsinit@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #24, 20	; 0x18000
   10e10:	ldr	pc, [ip, #552]!	; 0x228

00010e14 <fwrite_unlocked@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #24, 20	; 0x18000
   10e1c:	ldr	pc, [ip, #544]!	; 0x220

00010e20 <memcmp@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #24, 20	; 0x18000
   10e28:	ldr	pc, [ip, #536]!	; 0x218

00010e2c <dcgettext@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #24, 20	; 0x18000
   10e34:	ldr	pc, [ip, #528]!	; 0x210

00010e38 <__stack_chk_fail@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #24, 20	; 0x18000
   10e40:	ldr	pc, [ip, #520]!	; 0x208

00010e44 <realloc@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #24, 20	; 0x18000
   10e4c:	ldr	pc, [ip, #512]!	; 0x200

00010e50 <textdomain@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #24, 20	; 0x18000
   10e58:	ldr	pc, [ip, #504]!	; 0x1f8

00010e5c <iswprint@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #24, 20	; 0x18000
   10e64:	ldr	pc, [ip, #496]!	; 0x1f0

00010e68 <fwrite@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #24, 20	; 0x18000
   10e70:	ldr	pc, [ip, #488]!	; 0x1e8

00010e74 <lseek64@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #24, 20	; 0x18000
   10e7c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e80 <__ctype_get_mb_cur_max@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #24, 20	; 0x18000
   10e88:	ldr	pc, [ip, #472]!	; 0x1d8

00010e8c <__fpending@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #24, 20	; 0x18000
   10e94:	ldr	pc, [ip, #464]!	; 0x1d0

00010e98 <mbrtowc@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #24, 20	; 0x18000
   10ea0:	ldr	pc, [ip, #456]!	; 0x1c8

00010ea4 <error@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #24, 20	; 0x18000
   10eac:	ldr	pc, [ip, #448]!	; 0x1c0

00010eb0 <malloc@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #24, 20	; 0x18000
   10eb8:	ldr	pc, [ip, #440]!	; 0x1b8

00010ebc <__libc_start_main@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #24, 20	; 0x18000
   10ec4:	ldr	pc, [ip, #432]!	; 0x1b0

00010ec8 <__freading@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #24, 20	; 0x18000
   10ed0:	ldr	pc, [ip, #424]!	; 0x1a8

00010ed4 <__ctype_tolower_loc@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #24, 20	; 0x18000
   10edc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ee0 <__gmon_start__@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #24, 20	; 0x18000
   10ee8:	ldr	pc, [ip, #408]!	; 0x198

00010eec <getopt_long@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #24, 20	; 0x18000
   10ef4:	ldr	pc, [ip, #400]!	; 0x190

00010ef8 <__ctype_b_loc@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #24, 20	; 0x18000
   10f00:	ldr	pc, [ip, #392]!	; 0x188

00010f04 <exit@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #24, 20	; 0x18000
   10f0c:	ldr	pc, [ip, #384]!	; 0x180

00010f10 <strlen@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #24, 20	; 0x18000
   10f18:	ldr	pc, [ip, #376]!	; 0x178

00010f1c <strchr@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #24, 20	; 0x18000
   10f24:	ldr	pc, [ip, #368]!	; 0x170

00010f28 <__errno_location@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #24, 20	; 0x18000
   10f30:	ldr	pc, [ip, #360]!	; 0x168

00010f34 <__cxa_atexit@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #24, 20	; 0x18000
   10f3c:	ldr	pc, [ip, #352]!	; 0x160

00010f40 <setvbuf@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #24, 20	; 0x18000
   10f48:	ldr	pc, [ip, #344]!	; 0x158

00010f4c <memset@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #24, 20	; 0x18000
   10f54:	ldr	pc, [ip, #336]!	; 0x150

00010f58 <__printf_chk@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #24, 20	; 0x18000
   10f60:	ldr	pc, [ip, #328]!	; 0x148

00010f64 <fileno@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #24, 20	; 0x18000
   10f6c:	ldr	pc, [ip, #320]!	; 0x140

00010f70 <__fprintf_chk@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #24, 20	; 0x18000
   10f78:	ldr	pc, [ip, #312]!	; 0x138

00010f7c <fclose@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #24, 20	; 0x18000
   10f84:	ldr	pc, [ip, #304]!	; 0x130

00010f88 <fseeko64@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #24, 20	; 0x18000
   10f90:	ldr	pc, [ip, #296]!	; 0x128

00010f94 <fcntl64@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #24, 20	; 0x18000
   10f9c:	ldr	pc, [ip, #288]!	; 0x120

00010fa0 <__overflow@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #24, 20	; 0x18000
   10fa8:	ldr	pc, [ip, #280]!	; 0x118

00010fac <setlocale@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #24, 20	; 0x18000
   10fb4:	ldr	pc, [ip, #272]!	; 0x110

00010fb8 <strrchr@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #24, 20	; 0x18000
   10fc0:	ldr	pc, [ip, #264]!	; 0x108

00010fc4 <nl_langinfo@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #24, 20	; 0x18000
   10fcc:	ldr	pc, [ip, #256]!	; 0x100

00010fd0 <fopen64@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #24, 20	; 0x18000
   10fd8:	ldr	pc, [ip, #248]!	; 0xf8

00010fdc <bindtextdomain@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #24, 20	; 0x18000
   10fe4:	ldr	pc, [ip, #240]!	; 0xf0

00010fe8 <fread_unlocked@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #24, 20	; 0x18000
   10ff0:	ldr	pc, [ip, #232]!	; 0xe8

00010ff4 <strncmp@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #24, 20	; 0x18000
   10ffc:	ldr	pc, [ip, #224]!	; 0xe0

00011000 <abort@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #24, 20	; 0x18000
   11008:	ldr	pc, [ip, #216]!	; 0xd8

0001100c <close@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #24, 20	; 0x18000
   11014:	ldr	pc, [ip, #208]!	; 0xd0

00011018 <dcngettext@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #24, 20	; 0x18000
   11020:	ldr	pc, [ip, #200]!	; 0xc8

Disassembly of section .text:

00011024 <.text>:
   11024:	ldr	r3, [pc, #4072]	; 12014 <dcngettext@plt+0xffc>
   11028:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1102c:	sub	sp, sp, #172	; 0xac
   11030:	ldr	r3, [r3]
   11034:	mov	r7, r0
   11038:	ldr	r0, [r1]
   1103c:	str	r3, [sp, #164]	; 0xa4
   11040:	mov	r6, r1
   11044:	bl	14628 <dcngettext@plt+0x3610>
   11048:	ldr	r1, [pc, #4040]	; 12018 <dcngettext@plt+0x1000>
   1104c:	mov	r0, #6
   11050:	bl	10fac <setlocale@plt>
   11054:	ldr	r1, [pc, #4032]	; 1201c <dcngettext@plt+0x1004>
   11058:	ldr	r0, [pc, #4032]	; 12020 <dcngettext@plt+0x1008>
   1105c:	bl	10fdc <bindtextdomain@plt>
   11060:	ldr	r0, [pc, #4024]	; 12020 <dcngettext@plt+0x1008>
   11064:	bl	10e50 <textdomain@plt>
   11068:	ldr	r0, [pc, #4020]	; 12024 <dcngettext@plt+0x100c>
   1106c:	bl	178d4 <dcngettext@plt+0x68bc>
   11070:	ldr	r2, [pc, #4016]	; 12028 <dcngettext@plt+0x1010>
   11074:	ldr	r9, [pc, #4016]	; 1202c <dcngettext@plt+0x1014>
   11078:	ldr	r8, [pc, #4016]	; 12030 <dcngettext@plt+0x1018>
   1107c:	ldr	fp, [pc, #4016]	; 12034 <dcngettext@plt+0x101c>
   11080:	ldr	sl, [pc, #4016]	; 12038 <dcngettext@plt+0x1020>
   11084:	mov	r3, #0
   11088:	mvn	r5, #0
   1108c:	ldr	r0, [r2]
   11090:	mov	r4, r3
   11094:	mov	r1, r3
   11098:	mov	r2, #1
   1109c:	str	r3, [sp, #36]	; 0x24
   110a0:	bl	10f40 <setvbuf@plt>
   110a4:	str	r4, [sp, #32]
   110a8:	mov	r4, #0
   110ac:	str	r4, [sp]
   110b0:	mov	r3, r9
   110b4:	mov	r2, r8
   110b8:	mov	r1, r6
   110bc:	mov	r0, r7
   110c0:	bl	10eec <getopt_long@plt>
   110c4:	cmn	r0, #1
   110c8:	beq	11218 <dcngettext@plt+0x200>
   110cc:	cmp	r0, #119	; 0x77
   110d0:	beq	111e8 <dcngettext@plt+0x1d0>
   110d4:	ble	11108 <dcngettext@plt+0xf0>
   110d8:	cmp	r0, fp
   110dc:	beq	11200 <dcngettext@plt+0x1e8>
   110e0:	ble	11140 <dcngettext@plt+0x128>
   110e4:	cmp	r0, sl
   110e8:	beq	111d8 <dcngettext@plt+0x1c0>
   110ec:	bge	11128 <dcngettext@plt+0x110>
   110f0:	ldr	r2, [pc, #3908]	; 1203c <dcngettext@plt+0x1024>
   110f4:	mov	r3, #1
   110f8:	strb	r4, [r2, #6]
   110fc:	strb	r4, [r2, #7]
   11100:	strb	r3, [r2, #8]
   11104:	b	110a8 <dcngettext@plt+0x90>
   11108:	cmp	r0, #98	; 0x62
   1110c:	beq	111d0 <dcngettext@plt+0x1b8>
   11110:	ble	11164 <dcngettext@plt+0x14c>
   11114:	cmp	r0, #99	; 0x63
   11118:	bne	11154 <dcngettext@plt+0x13c>
   1111c:	mov	r3, #1
   11120:	str	r3, [sp, #32]
   11124:	b	110a8 <dcngettext@plt+0x90>
   11128:	cmp	r0, #260	; 0x104
   1112c:	bne	112bc <dcngettext@plt+0x2a4>
   11130:	mov	r3, #1
   11134:	str	r3, [sp, #36]	; 0x24
   11138:	mov	r5, r3
   1113c:	b	110a8 <dcngettext@plt+0x90>
   11140:	cmp	r0, #122	; 0x7a
   11144:	bne	111a8 <dcngettext@plt+0x190>
   11148:	ldr	r3, [pc, #3824]	; 12040 <dcngettext@plt+0x1028>
   1114c:	strb	r4, [r3]
   11150:	b	110a8 <dcngettext@plt+0x90>
   11154:	cmp	r0, #116	; 0x74
   11158:	bne	112bc <dcngettext@plt+0x2a4>
   1115c:	mov	r5, r4
   11160:	b	110a8 <dcngettext@plt+0x90>
   11164:	cmn	r0, #3
   11168:	bne	111c0 <dcngettext@plt+0x1a8>
   1116c:	ldr	ip, [pc, #3792]	; 12044 <dcngettext@plt+0x102c>
   11170:	ldr	r1, [pc, #3792]	; 12048 <dcngettext@plt+0x1030>
   11174:	ldr	r3, [pc, #3792]	; 1204c <dcngettext@plt+0x1034>
   11178:	ldr	r0, [pc, #3752]	; 12028 <dcngettext@plt+0x1010>
   1117c:	ldr	r2, [pc, #3788]	; 12050 <dcngettext@plt+0x1038>
   11180:	str	r4, [sp, #12]
   11184:	ldr	r0, [r0]
   11188:	ldr	r3, [r3]
   1118c:	stmib	sp, {r1, ip}
   11190:	str	r2, [sp]
   11194:	ldr	r1, [pc, #3768]	; 12054 <dcngettext@plt+0x103c>
   11198:	ldr	r2, [pc, #3768]	; 12058 <dcngettext@plt+0x1040>
   1119c:	bl	16d04 <dcngettext@plt+0x5cec>
   111a0:	mov	r0, r4
   111a4:	bl	10f04 <exit@plt>
   111a8:	cmp	r0, #256	; 0x100
   111ac:	bne	112bc <dcngettext@plt+0x2a4>
   111b0:	ldr	r2, [pc, #3716]	; 1203c <dcngettext@plt+0x1024>
   111b4:	mov	r3, #1
   111b8:	strb	r3, [r2, #5]
   111bc:	b	110a8 <dcngettext@plt+0x90>
   111c0:	cmn	r0, #2
   111c4:	bne	112bc <dcngettext@plt+0x2a4>
   111c8:	mov	r0, r4
   111cc:	bl	125c8 <dcngettext@plt+0x15b0>
   111d0:	mov	r5, #1
   111d4:	b	110a8 <dcngettext@plt+0x90>
   111d8:	ldr	r2, [pc, #3676]	; 1203c <dcngettext@plt+0x1024>
   111dc:	mov	r3, #1
   111e0:	strb	r3, [r2, #9]
   111e4:	b	110a8 <dcngettext@plt+0x90>
   111e8:	ldr	r2, [pc, #3660]	; 1203c <dcngettext@plt+0x1024>
   111ec:	mov	r3, #1
   111f0:	strb	r4, [r2, #6]
   111f4:	strb	r4, [r2, #8]
   111f8:	strb	r3, [r2, #7]
   111fc:	b	110a8 <dcngettext@plt+0x90>
   11200:	ldr	r2, [pc, #3636]	; 1203c <dcngettext@plt+0x1024>
   11204:	mov	r3, #1
   11208:	strb	r4, [r2, #7]
   1120c:	strb	r4, [r2, #8]
   11210:	strb	r3, [r2, #6]
   11214:	b	110a8 <dcngettext@plt+0x90>
   11218:	ldr	sl, [pc, #3612]	; 1203c <dcngettext@plt+0x1024>
   1121c:	ldr	r8, [sp, #36]	; 0x24
   11220:	cmp	r5, r4
   11224:	mov	r3, #42	; 0x2a
   11228:	movne	r8, r4
   1122c:	str	r3, [sl, #12]
   11230:	cmp	r8, r4
   11234:	mov	r3, #40	; 0x28
   11238:	str	r3, [sl]
   1123c:	bne	12188 <dcngettext@plt+0x1170>
   11240:	ldr	r3, [pc, #3576]	; 12040 <dcngettext@plt+0x1028>
   11244:	ldrb	r3, [r3]
   11248:	cmp	r3, #10
   1124c:	ldr	r3, [sp, #32]
   11250:	beq	112c4 <dcngettext@plt+0x2ac>
   11254:	cmp	r3, #0
   11258:	movne	r2, #5
   1125c:	ldrne	r1, [pc, #3576]	; 1205c <dcngettext@plt+0x1044>
   11260:	bne	12140 <dcngettext@plt+0x1128>
   11264:	ldrb	r3, [sl, #5]
   11268:	cmp	r3, #0
   1126c:	bne	12138 <dcngettext@plt+0x1120>
   11270:	ldrb	r3, [sl, #6]
   11274:	cmp	r3, #0
   11278:	bne	1217c <dcngettext@plt+0x1164>
   1127c:	ldrb	r3, [sl, #7]
   11280:	cmp	r3, #0
   11284:	bne	11fa4 <dcngettext@plt+0xf8c>
   11288:	ldrb	r3, [sl, #8]
   1128c:	ldr	r2, [sp, #32]
   11290:	eor	r3, r3, #1
   11294:	orrs	r4, r2, r3
   11298:	moveq	r2, #5
   1129c:	ldreq	r1, [pc, #3516]	; 12060 <dcngettext@plt+0x1048>
   112a0:	bne	1131c <dcngettext@plt+0x304>
   112a4:	mov	r0, r4
   112a8:	bl	10e2c <dcgettext@plt>
   112ac:	mov	r1, r4
   112b0:	mov	r2, r0
   112b4:	mov	r0, r4
   112b8:	bl	10ea4 <error@plt>
   112bc:	mov	r0, #1
   112c0:	bl	125c8 <dcngettext@plt+0x15b0>
   112c4:	ldr	r2, [sp, #36]	; 0x24
   112c8:	ands	r4, r3, r2
   112cc:	movne	r2, #5
   112d0:	ldrne	r1, [pc, #3468]	; 12064 <dcngettext@plt+0x104c>
   112d4:	bne	12140 <dcngettext@plt+0x1128>
   112d8:	ldr	r3, [sp, #32]
   112dc:	cmp	r5, #0
   112e0:	movlt	r3, #0
   112e4:	andge	r3, r3, #1
   112e8:	cmp	r3, #0
   112ec:	movne	r2, #5
   112f0:	ldrne	r1, [pc, #3440]	; 12068 <dcngettext@plt+0x1050>
   112f4:	bne	112a4 <dcngettext@plt+0x28c>
   112f8:	ldrb	r3, [sl, #5]
   112fc:	cmp	r3, #0
   11300:	beq	12164 <dcngettext@plt+0x114c>
   11304:	ldr	r3, [sp, #32]
   11308:	cmp	r3, #0
   1130c:	beq	12138 <dcngettext@plt+0x1120>
   11310:	ldrb	r3, [sl, #7]
   11314:	cmp	r3, #0
   11318:	bne	11338 <dcngettext@plt+0x320>
   1131c:	ldrb	r2, [sl, #9]
   11320:	ldr	r3, [sp, #32]
   11324:	eor	r3, r3, #1
   11328:	tst	r2, r3
   1132c:	movne	r2, #5
   11330:	ldrne	r1, [pc, #3380]	; 1206c <dcngettext@plt+0x1054>
   11334:	bne	12140 <dcngettext@plt+0x1128>
   11338:	ldr	r3, [pc, #3376]	; 12070 <dcngettext@plt+0x1058>
   1133c:	cmn	r5, #1
   11340:	add	r2, r6, r7, lsl #2
   11344:	ldr	r3, [r3]
   11348:	moveq	r5, #0
   1134c:	cmp	r3, r7
   11350:	str	r2, [sp, #80]	; 0x50
   11354:	addeq	r2, r2, #4
   11358:	streq	r2, [sp, #80]	; 0x50
   1135c:	ldreq	r2, [pc, #3344]	; 12074 <dcngettext@plt+0x105c>
   11360:	streq	r2, [r6, r7, lsl #2]
   11364:	add	r6, r6, r3, lsl #2
   11368:	ldr	r3, [sp, #80]	; 0x50
   1136c:	cmp	r3, r6
   11370:	bls	120ec <dcngettext@plt+0x10d4>
   11374:	cmp	r5, #0
   11378:	movne	r3, #42	; 0x2a
   1137c:	moveq	r3, #32
   11380:	str	r3, [sp, #100]	; 0x64
   11384:	uxtb	r3, r3
   11388:	str	r3, [sp, #96]	; 0x60
   1138c:	mov	r3, #1
   11390:	str	r6, [sp, #52]	; 0x34
   11394:	str	r3, [sp, #72]	; 0x48
   11398:	ldr	r3, [sp, #32]
   1139c:	cmp	r3, #0
   113a0:	ldr	r3, [sp, #52]	; 0x34
   113a4:	ldr	r0, [r3], #4
   113a8:	str	r0, [sp, #48]	; 0x30
   113ac:	str	r3, [sp, #52]	; 0x34
   113b0:	beq	11a04 <dcngettext@plt+0x9ec>
   113b4:	ldr	r1, [pc, #3256]	; 12074 <dcngettext@plt+0x105c>
   113b8:	bl	10dc0 <strcmp@plt>
   113bc:	subs	r3, r0, #0
   113c0:	str	r3, [sp, #56]	; 0x38
   113c4:	bne	11ad8 <dcngettext@plt+0xac0>
   113c8:	mov	r3, #1
   113cc:	mov	r2, #5
   113d0:	ldr	r1, [pc, #3232]	; 12078 <dcngettext@plt+0x1060>
   113d4:	strb	r3, [sl, #4]
   113d8:	bl	10e2c <dcgettext@plt>
   113dc:	ldr	r3, [pc, #3224]	; 1207c <dcngettext@plt+0x1064>
   113e0:	ldr	r9, [r3]
   113e4:	str	r0, [sp, #48]	; 0x30
   113e8:	mov	r3, #0
   113ec:	mov	r0, #0
   113f0:	mov	r1, #0
   113f4:	mov	r2, r0
   113f8:	mov	fp, r3
   113fc:	str	r3, [sp, #84]	; 0x54
   11400:	str	r3, [sp, #108]	; 0x6c
   11404:	str	r3, [sp, #112]	; 0x70
   11408:	mov	r3, r1
   1140c:	strd	r0, [sp, #64]	; 0x40
   11410:	strd	r2, [sp, #40]	; 0x28
   11414:	strd	r2, [sp, #24]
   11418:	mov	r2, #1
   1141c:	mov	r3, #0
   11420:	strd	r2, [sp, #16]
   11424:	mov	r3, r9
   11428:	mov	r2, #10
   1142c:	add	r1, sp, #112	; 0x70
   11430:	add	r0, sp, #108	; 0x6c
   11434:	bl	10db4 <__getdelim@plt>
   11438:	subs	r7, r0, #0
   1143c:	ble	1171c <dcngettext@plt+0x704>
   11440:	ldr	r4, [sp, #108]	; 0x6c
   11444:	ldrb	r3, [r4]
   11448:	cmp	r3, #35	; 0x23
   1144c:	beq	1150c <dcngettext@plt+0x4f4>
   11450:	add	r2, r4, r7
   11454:	ldrb	r2, [r2, #-1]
   11458:	cmp	r2, #10
   1145c:	subeq	r7, r7, #1
   11460:	moveq	r3, #0
   11464:	strbeq	r3, [r4, r7]
   11468:	ldreq	r4, [sp, #108]	; 0x6c
   1146c:	ldrbeq	r3, [r4]
   11470:	cmp	r3, #32
   11474:	cmpne	r3, #9
   11478:	moveq	r8, #1
   1147c:	movne	r8, #0
   11480:	bne	114a0 <dcngettext@plt+0x488>
   11484:	mov	r2, r4
   11488:	rsb	r1, r4, #1
   1148c:	add	r8, r1, r2
   11490:	ldrb	r3, [r2, #1]!
   11494:	cmp	r3, #9
   11498:	cmpne	r3, #32
   1149c:	beq	1148c <dcngettext@plt+0x474>
   114a0:	cmp	r3, #92	; 0x5c
   114a4:	addeq	r8, r8, #1
   114a8:	add	r6, r4, r8
   114ac:	mov	r0, r6
   114b0:	mov	r2, #4
   114b4:	ldr	r1, [pc, #3012]	; 12080 <dcngettext@plt+0x1068>
   114b8:	ldreq	r5, [sp, #32]
   114bc:	movne	r5, #0
   114c0:	bl	10ff4 <strncmp@plt>
   114c4:	cmp	r0, #0
   114c8:	bne	11578 <dcngettext@plt+0x560>
   114cc:	add	r3, r8, #4
   114d0:	ldrb	r2, [r4, r3]
   114d4:	cmp	r2, #32
   114d8:	addeq	r3, r8, #5
   114dc:	ldrbeq	r2, [r4, r3]
   114e0:	cmp	r2, #40	; 0x28
   114e4:	beq	11a68 <dcngettext@plt+0xa50>
   114e8:	ldr	r2, [sp, #24]
   114ec:	ldrb	r3, [sl, #7]
   114f0:	adds	r2, r2, #1
   114f4:	str	r2, [sp, #24]
   114f8:	ldr	r2, [sp, #28]
   114fc:	adc	r2, r2, #0
   11500:	cmp	r3, #0
   11504:	str	r2, [sp, #28]
   11508:	bne	118b8 <dcngettext@plt+0x8a0>
   1150c:	ldr	r3, [r9]
   11510:	ands	r3, r3, #48	; 0x30
   11514:	bne	1171c <dcngettext@plt+0x704>
   11518:	ldr	r2, [sp, #16]
   1151c:	adds	r2, r2, #1
   11520:	str	r2, [sp, #16]
   11524:	ldr	r2, [sp, #20]
   11528:	adc	r2, r2, #0
   1152c:	str	r2, [sp, #20]
   11530:	ldrd	r0, [sp, #16]
   11534:	orrs	r2, r0, r1
   11538:	bne	11424 <dcngettext@plt+0x40c>
   1153c:	mov	r0, r3
   11540:	mov	r2, #5
   11544:	ldr	r1, [pc, #2872]	; 12084 <dcngettext@plt+0x106c>
   11548:	mov	r4, r3
   1154c:	bl	10e2c <dcgettext@plt>
   11550:	ldr	r2, [sp, #48]	; 0x30
   11554:	mov	r1, #3
   11558:	mov	r5, r0
   1155c:	mov	r0, r4
   11560:	bl	166c0 <dcngettext@plt+0x56a8>
   11564:	mov	r2, r5
   11568:	mov	r1, r4
   1156c:	mov	r3, r0
   11570:	mov	r0, #1
   11574:	bl	10ea4 <error@plt>
   11578:	ldrb	r1, [r4, r8]
   1157c:	ldr	r3, [sl, #12]
   11580:	sub	r2, r7, r8
   11584:	cmp	r1, #92	; 0x5c
   11588:	addeq	r3, r3, #1
   1158c:	cmp	r2, r3
   11590:	bcc	114e8 <dcngettext@plt+0x4d0>
   11594:	ldr	r3, [sl]
   11598:	add	r8, r8, r3
   1159c:	ldrb	r3, [r4, r8]
   115a0:	cmp	r3, #32
   115a4:	cmpne	r3, #9
   115a8:	movne	r3, #1
   115ac:	moveq	r3, #0
   115b0:	bne	114e8 <dcngettext@plt+0x4d0>
   115b4:	strb	r3, [r4, r8]
   115b8:	mov	r0, r6
   115bc:	bl	12284 <dcngettext@plt+0x126c>
   115c0:	cmp	r0, #0
   115c4:	beq	114e8 <dcngettext@plt+0x4d0>
   115c8:	add	r1, r8, #1
   115cc:	sub	r3, r7, r1
   115d0:	cmp	r3, #1
   115d4:	ldr	r3, [pc, #2660]	; 12040 <dcngettext@plt+0x1028>
   115d8:	ldr	r2, [r3, #4]
   115dc:	beq	11ac0 <dcngettext@plt+0xaa8>
   115e0:	ldrb	r3, [r4, r1]
   115e4:	cmp	r3, #32
   115e8:	cmpne	r3, #42	; 0x2a
   115ec:	movne	r3, #1
   115f0:	moveq	r3, #0
   115f4:	bne	11ac0 <dcngettext@plt+0xaa8>
   115f8:	cmp	r2, #1
   115fc:	addne	r1, r8, #2
   11600:	ldrne	r2, [pc, #2616]	; 12040 <dcngettext@plt+0x1028>
   11604:	strne	r3, [r2, #4]
   11608:	cmp	r5, #0
   1160c:	add	r4, r4, r1
   11610:	bne	11d40 <dcngettext@plt+0xd28>
   11614:	ldr	r3, [sp, #56]	; 0x38
   11618:	cmp	r3, #0
   1161c:	bne	11634 <dcngettext@plt+0x61c>
   11620:	ldr	r1, [pc, #2636]	; 12074 <dcngettext@plt+0x105c>
   11624:	mov	r0, r4
   11628:	bl	10dc0 <strcmp@plt>
   1162c:	cmp	r0, #0
   11630:	beq	114e8 <dcngettext@plt+0x4d0>
   11634:	ldrb	r7, [sl, #6]
   11638:	cmp	r7, #0
   1163c:	movne	r7, #0
   11640:	strne	r7, [sp, #60]	; 0x3c
   11644:	bne	1166c <dcngettext@plt+0x654>
   11648:	mov	r1, #10
   1164c:	mov	r0, r4
   11650:	bl	10f1c <strchr@plt>
   11654:	ldr	r3, [sp, #32]
   11658:	cmp	r0, #0
   1165c:	movne	r7, r3
   11660:	moveq	r3, #0
   11664:	movne	r3, #1
   11668:	str	r3, [sp, #60]	; 0x3c
   1166c:	add	r2, sp, #107	; 0x6b
   11670:	add	r1, sp, #140	; 0x8c
   11674:	mov	r0, r4
   11678:	bl	12434 <dcngettext@plt+0x141c>
   1167c:	subs	r3, r0, #0
   11680:	str	r3, [sp, #76]	; 0x4c
   11684:	bne	11904 <dcngettext@plt+0x8ec>
   11688:	ldr	r2, [sp, #40]	; 0x28
   1168c:	ldrb	r3, [sl, #6]
   11690:	adds	r2, r2, #1
   11694:	str	r2, [sp, #40]	; 0x28
   11698:	ldr	r2, [sp, #44]	; 0x2c
   1169c:	adc	r2, r2, #0
   116a0:	cmp	r3, #0
   116a4:	str	r2, [sp, #44]	; 0x2c
   116a8:	bne	1170c <dcngettext@plt+0x6f4>
   116ac:	ldr	r3, [sp, #60]	; 0x3c
   116b0:	cmp	r3, #0
   116b4:	beq	116e0 <dcngettext@plt+0x6c8>
   116b8:	ldr	r3, [pc, #2408]	; 12028 <dcngettext@plt+0x1010>
   116bc:	ldr	r0, [r3]
   116c0:	ldr	r3, [r0, #20]
   116c4:	ldr	r2, [r0, #24]
   116c8:	cmp	r3, r2
   116cc:	addcc	r1, r3, #1
   116d0:	movcc	r2, #92	; 0x5c
   116d4:	strcc	r1, [r0, #20]
   116d8:	strbcc	r2, [r3]
   116dc:	bcs	12008 <dcngettext@plt+0xff0>
   116e0:	mov	r1, r7
   116e4:	mov	r0, r4
   116e8:	bl	12374 <dcngettext@plt+0x135c>
   116ec:	ldr	r1, [pc, #2452]	; 12088 <dcngettext@plt+0x1070>
   116f0:	mov	r2, #5
   116f4:	mov	r0, #0
   116f8:	bl	10e2c <dcgettext@plt>
   116fc:	ldr	r1, [pc, #2440]	; 1208c <dcngettext@plt+0x1074>
   11700:	mov	r2, r0
   11704:	mov	r0, #1
   11708:	bl	10f58 <__printf_chk@plt>
   1170c:	ldr	r3, [r9]
   11710:	ldr	fp, [sp, #32]
   11714:	ands	r3, r3, #48	; 0x30
   11718:	beq	11518 <dcngettext@plt+0x500>
   1171c:	ldr	r0, [sp, #108]	; 0x6c
   11720:	bl	10de4 <free@plt>
   11724:	ldr	r4, [r9]
   11728:	ands	r4, r4, #32
   1172c:	bne	11d58 <dcngettext@plt+0xd40>
   11730:	ldr	r3, [sp, #56]	; 0x38
   11734:	cmp	r3, #0
   11738:	bne	11cbc <dcngettext@plt+0xca4>
   1173c:	cmp	fp, #0
   11740:	beq	11cfc <dcngettext@plt+0xce4>
   11744:	ldrb	r3, [sl, #6]
   11748:	cmp	r3, #0
   1174c:	bne	11b20 <dcngettext@plt+0xb08>
   11750:	ldrd	r0, [sp, #24]
   11754:	orrs	r3, r0, r1
   11758:	beq	117a4 <dcngettext@plt+0x78c>
   1175c:	mov	r3, #0
   11760:	cmp	r1, r3
   11764:	mvn	r2, #0
   11768:	cmpeq	r0, r2
   1176c:	ldrls	r3, [sp, #24]
   11770:	bhi	11f8c <dcngettext@plt+0xf74>
   11774:	mov	r2, #5
   11778:	str	r2, [sp]
   1177c:	ldr	r1, [pc, #2316]	; 12090 <dcngettext@plt+0x1078>
   11780:	ldr	r2, [pc, #2316]	; 12094 <dcngettext@plt+0x107c>
   11784:	mov	r0, #0
   11788:	bl	11018 <dcngettext@plt>
   1178c:	ldrd	r2, [sp, #24]
   11790:	mov	r1, #0
   11794:	strd	r2, [sp]
   11798:	mov	r2, r0
   1179c:	mov	r0, r1
   117a0:	bl	10ea4 <error@plt>
   117a4:	ldrd	r0, [sp, #40]	; 0x28
   117a8:	orrs	r3, r0, r1
   117ac:	beq	117f8 <dcngettext@plt+0x7e0>
   117b0:	mov	r3, #0
   117b4:	cmp	r1, r3
   117b8:	mvn	r2, #0
   117bc:	cmpeq	r0, r2
   117c0:	ldrls	r3, [sp, #40]	; 0x28
   117c4:	bhi	11f74 <dcngettext@plt+0xf5c>
   117c8:	mov	r2, #5
   117cc:	str	r2, [sp]
   117d0:	ldr	r1, [pc, #2240]	; 12098 <dcngettext@plt+0x1080>
   117d4:	ldr	r2, [pc, #2240]	; 1209c <dcngettext@plt+0x1084>
   117d8:	mov	r0, #0
   117dc:	bl	11018 <dcngettext@plt>
   117e0:	ldrd	r2, [sp, #40]	; 0x28
   117e4:	mov	r1, #0
   117e8:	strd	r2, [sp]
   117ec:	mov	r2, r0
   117f0:	mov	r0, r1
   117f4:	bl	10ea4 <error@plt>
   117f8:	ldrd	r0, [sp, #64]	; 0x40
   117fc:	orrs	r3, r0, r1
   11800:	beq	1184c <dcngettext@plt+0x834>
   11804:	mov	r3, #0
   11808:	cmp	r1, r3
   1180c:	mvn	r2, #0
   11810:	cmpeq	r0, r2
   11814:	ldrls	r3, [sp, #64]	; 0x40
   11818:	bhi	11f5c <dcngettext@plt+0xf44>
   1181c:	mov	r2, #5
   11820:	str	r2, [sp]
   11824:	ldr	r1, [pc, #2164]	; 120a0 <dcngettext@plt+0x1088>
   11828:	ldr	r2, [pc, #2164]	; 120a4 <dcngettext@plt+0x108c>
   1182c:	mov	r0, #0
   11830:	bl	11018 <dcngettext@plt>
   11834:	ldrd	r2, [sp, #64]	; 0x40
   11838:	mov	r1, #0
   1183c:	strd	r2, [sp]
   11840:	mov	r2, r0
   11844:	mov	r0, r1
   11848:	bl	10ea4 <error@plt>
   1184c:	ldrb	r3, [sl, #5]
   11850:	cmp	r3, #0
   11854:	beq	11b20 <dcngettext@plt+0xb08>
   11858:	ldr	r3, [sp, #84]	; 0x54
   1185c:	cmp	r3, #0
   11860:	beq	11fc0 <dcngettext@plt+0xfa8>
   11864:	ldrd	r2, [sp, #64]	; 0x40
   11868:	ldrd	r0, [sp, #40]	; 0x28
   1186c:	mov	lr, r2
   11870:	orr	ip, r0, r2
   11874:	orr	r3, r1, r3
   11878:	str	ip, [sp, #88]	; 0x58
   1187c:	str	r3, [sp, #92]	; 0x5c
   11880:	ldrd	r2, [sp, #88]	; 0x58
   11884:	orrs	r3, r2, r3
   11888:	bne	118a4 <dcngettext@plt+0x88c>
   1188c:	ldrd	r2, [sp, #24]
   11890:	ldrb	r4, [sl, #9]
   11894:	mov	r1, r2
   11898:	orrs	r3, r1, r3
   1189c:	eor	r4, r4, #1
   118a0:	orreq	r4, r4, #1
   118a4:	and	r4, r4, #1
   118a8:	ldr	r3, [sp, #72]	; 0x48
   118ac:	and	r3, r3, r4
   118b0:	str	r3, [sp, #72]	; 0x48
   118b4:	b	11a24 <dcngettext@plt+0xa0c>
   118b8:	mov	r2, #5
   118bc:	ldr	r1, [pc, #2020]	; 120a8 <dcngettext@plt+0x1090>
   118c0:	mov	r0, #0
   118c4:	bl	10e2c <dcgettext@plt>
   118c8:	ldr	r2, [sp, #48]	; 0x30
   118cc:	mov	r1, #3
   118d0:	mov	r4, r0
   118d4:	mov	r0, #0
   118d8:	bl	166c0 <dcngettext@plt+0x56a8>
   118dc:	mov	r2, r4
   118e0:	ldrd	r4, [sp, #16]
   118e4:	ldr	r3, [pc, #1940]	; 12080 <dcngettext@plt+0x1068>
   118e8:	mov	r1, #0
   118ec:	str	r3, [sp, #8]
   118f0:	strd	r4, [sp]
   118f4:	mov	r3, r0
   118f8:	mov	r0, r1
   118fc:	bl	10ea4 <error@plt>
   11900:	b	1150c <dcngettext@plt+0x4f4>
   11904:	ldrb	r3, [sl, #5]
   11908:	cmp	r3, #0
   1190c:	beq	1191c <dcngettext@plt+0x904>
   11910:	ldrb	r3, [sp, #107]	; 0x6b
   11914:	cmp	r3, #0
   11918:	bne	1170c <dcngettext@plt+0x6f4>
   1191c:	ldr	r8, [sl]
   11920:	lsrs	r8, r8, #1
   11924:	beq	11c80 <dcngettext@plt+0xc68>
   11928:	bl	10ed4 <__ctype_tolower_loc@plt>
   1192c:	mov	r5, #0
   11930:	ldr	ip, [pc, #1908]	; 120ac <dcngettext@plt+0x1094>
   11934:	add	r2, sp, #139	; 0x8b
   11938:	add	lr, r6, #1
   1193c:	ldr	r1, [r0]
   11940:	b	1196c <dcngettext@plt+0x954>
   11944:	and	r3, r3, #15
   11948:	ldrb	r0, [lr, r5, lsl #1]
   1194c:	add	r3, ip, r3
   11950:	ldrb	r3, [r3, #264]	; 0x108
   11954:	ldr	r0, [r1, r0, lsl #2]
   11958:	cmp	r0, r3
   1195c:	bne	11988 <dcngettext@plt+0x970>
   11960:	add	r5, r5, #1
   11964:	cmp	r8, r5
   11968:	beq	11c80 <dcngettext@plt+0xc68>
   1196c:	ldrb	r3, [r2, #1]!
   11970:	ldrb	fp, [r6, r5, lsl #1]
   11974:	add	r0, ip, r3, lsr #4
   11978:	ldr	fp, [r1, fp, lsl #2]
   1197c:	ldrb	r0, [r0, #264]	; 0x108
   11980:	cmp	fp, r0
   11984:	beq	11944 <dcngettext@plt+0x92c>
   11988:	ldr	r2, [sp, #64]	; 0x40
   1198c:	ldrb	r3, [sl, #6]
   11990:	adds	r2, r2, #1
   11994:	str	r2, [sp, #64]	; 0x40
   11998:	ldr	r2, [sp, #68]	; 0x44
   1199c:	adc	r2, r2, #0
   119a0:	cmp	r3, #0
   119a4:	str	r2, [sp, #68]	; 0x44
   119a8:	bne	1170c <dcngettext@plt+0x6f4>
   119ac:	ldr	r3, [sp, #60]	; 0x3c
   119b0:	cmp	r3, #0
   119b4:	beq	119e0 <dcngettext@plt+0x9c8>
   119b8:	ldr	r3, [pc, #1640]	; 12028 <dcngettext@plt+0x1010>
   119bc:	ldr	r0, [r3]
   119c0:	ldr	r3, [r0, #20]
   119c4:	ldr	r2, [r0, #24]
   119c8:	cmp	r3, r2
   119cc:	addcc	r1, r3, #1
   119d0:	movcc	r2, #92	; 0x5c
   119d4:	strcc	r1, [r0, #20]
   119d8:	strbcc	r2, [r3]
   119dc:	bcs	120f8 <dcngettext@plt+0x10e0>
   119e0:	mov	r1, r7
   119e4:	mov	r0, r4
   119e8:	bl	12374 <dcngettext@plt+0x135c>
   119ec:	cmp	r8, r5
   119f0:	beq	11e4c <dcngettext@plt+0xe34>
   119f4:	mov	r2, #5
   119f8:	ldr	r1, [pc, #1712]	; 120b0 <dcngettext@plt+0x1098>
   119fc:	mov	r0, #0
   11a00:	b	116f8 <dcngettext@plt+0x6e0>
   11a04:	add	r4, sp, #116	; 0x74
   11a08:	mov	r1, r4
   11a0c:	add	r2, sp, #112	; 0x70
   11a10:	ldr	r0, [sp, #48]	; 0x30
   11a14:	bl	12434 <dcngettext@plt+0x141c>
   11a18:	subs	r5, r0, #0
   11a1c:	bne	11b30 <dcngettext@plt+0xb18>
   11a20:	str	r5, [sp, #72]	; 0x48
   11a24:	ldr	r3, [sp, #80]	; 0x50
   11a28:	ldr	r2, [sp, #52]	; 0x34
   11a2c:	cmp	r3, r2
   11a30:	bhi	11398 <dcngettext@plt+0x380>
   11a34:	ldrb	r3, [sl, #4]
   11a38:	cmp	r3, #0
   11a3c:	bne	11e94 <dcngettext@plt+0xe7c>
   11a40:	ldr	r3, [pc, #1484]	; 12014 <dcngettext@plt+0xffc>
   11a44:	ldr	r1, [sp, #72]	; 0x48
   11a48:	ldr	r2, [sp, #164]	; 0xa4
   11a4c:	ldr	r3, [r3]
   11a50:	eor	r0, r1, #1
   11a54:	cmp	r2, r3
   11a58:	uxtb	r0, r0
   11a5c:	bne	12160 <dcngettext@plt+0x1148>
   11a60:	add	sp, sp, #172	; 0xac
   11a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a68:	add	r3, r3, #1
   11a6c:	subs	r7, r7, r3
   11a70:	beq	114e8 <dcngettext@plt+0x4d0>
   11a74:	subs	r7, r7, #1
   11a78:	add	r4, r4, r3
   11a7c:	beq	11aa8 <dcngettext@plt+0xa90>
   11a80:	ldrb	r2, [r4, r7]
   11a84:	add	r3, r4, r7
   11a88:	cmp	r2, #41	; 0x29
   11a8c:	bne	11aa0 <dcngettext@plt+0xa88>
   11a90:	b	11bec <dcngettext@plt+0xbd4>
   11a94:	ldrb	r2, [r3, #-1]!
   11a98:	cmp	r2, #41	; 0x29
   11a9c:	beq	11be8 <dcngettext@plt+0xbd0>
   11aa0:	subs	r7, r7, #1
   11aa4:	bne	11a94 <dcngettext@plt+0xa7c>
   11aa8:	ldrb	r3, [r4]
   11aac:	cmp	r3, #41	; 0x29
   11ab0:	bne	114e8 <dcngettext@plt+0x4d0>
   11ab4:	mov	r6, r4
   11ab8:	mov	r7, #0
   11abc:	b	11bf0 <dcngettext@plt+0xbd8>
   11ac0:	cmp	r2, #0
   11ac4:	beq	114e8 <dcngettext@plt+0x4d0>
   11ac8:	ldr	r2, [pc, #1392]	; 12040 <dcngettext@plt+0x1028>
   11acc:	mov	r3, #1
   11ad0:	str	r3, [r2, #4]
   11ad4:	b	11608 <dcngettext@plt+0x5f0>
   11ad8:	ldr	r1, [pc, #1492]	; 120b4 <dcngettext@plt+0x109c>
   11adc:	ldr	r0, [sp, #48]	; 0x30
   11ae0:	bl	14590 <dcngettext@plt+0x3578>
   11ae4:	subs	r9, r0, #0
   11ae8:	bne	113e8 <dcngettext@plt+0x3d0>
   11aec:	bl	10f28 <__errno_location@plt>
   11af0:	ldr	r2, [sp, #48]	; 0x30
   11af4:	mov	r1, #3
   11af8:	ldr	r4, [r0]
   11afc:	mov	r0, r9
   11b00:	bl	166c0 <dcngettext@plt+0x56a8>
   11b04:	mov	r1, r4
   11b08:	ldr	r2, [pc, #1448]	; 120b8 <dcngettext@plt+0x10a0>
   11b0c:	mov	r4, r9
   11b10:	mov	r3, r0
   11b14:	mov	r0, r9
   11b18:	bl	10ea4 <error@plt>
   11b1c:	b	118a8 <dcngettext@plt+0x890>
   11b20:	ldr	r3, [sp, #84]	; 0x54
   11b24:	cmp	r3, #0
   11b28:	bne	11864 <dcngettext@plt+0x84c>
   11b2c:	b	118a4 <dcngettext@plt+0x88c>
   11b30:	mov	r1, #92	; 0x5c
   11b34:	ldr	r0, [sp, #48]	; 0x30
   11b38:	bl	10f1c <strchr@plt>
   11b3c:	cmp	r0, #0
   11b40:	beq	11e7c <dcngettext@plt+0xe64>
   11b44:	ldr	r3, [pc, #1268]	; 12040 <dcngettext@plt+0x1028>
   11b48:	ldrb	r3, [r3]
   11b4c:	cmp	r3, #10
   11b50:	beq	11d98 <dcngettext@plt+0xd80>
   11b54:	ldr	r3, [sp, #36]	; 0x24
   11b58:	cmp	r3, #0
   11b5c:	bne	12000 <dcngettext@plt+0xfe8>
   11b60:	ldr	r3, [sl]
   11b64:	ldr	r5, [sp, #36]	; 0x24
   11b68:	lsrs	r3, r3, #1
   11b6c:	beq	11dd8 <dcngettext@plt+0xdc0>
   11b70:	ldr	r6, [pc, #1348]	; 120bc <dcngettext@plt+0x10a4>
   11b74:	add	r7, sp, #115	; 0x73
   11b78:	ldrb	r2, [r7, #1]
   11b7c:	mov	r1, r6
   11b80:	mov	r0, #1
   11b84:	bl	10f58 <__printf_chk@plt>
   11b88:	ldr	r2, [sl]
   11b8c:	add	r3, r7, #2
   11b90:	sub	r3, r3, r4
   11b94:	cmp	r3, r2, lsr #1
   11b98:	add	r7, r7, #1
   11b9c:	bcc	11b78 <dcngettext@plt+0xb60>
   11ba0:	ldr	r3, [sp, #36]	; 0x24
   11ba4:	cmp	r3, #0
   11ba8:	beq	11dd8 <dcngettext@plt+0xdc0>
   11bac:	ldr	r3, [pc, #1140]	; 12028 <dcngettext@plt+0x1010>
   11bb0:	ldr	r0, [r3]
   11bb4:	ldr	r3, [pc, #1156]	; 12040 <dcngettext@plt+0x1028>
   11bb8:	ldr	r2, [r0, #24]
   11bbc:	ldrb	r1, [r3]
   11bc0:	ldr	r3, [r0, #20]
   11bc4:	cmp	r3, r2
   11bc8:	addcc	r2, r3, #1
   11bcc:	strcc	r2, [r0, #20]
   11bd0:	ldrcc	r5, [sp, #72]	; 0x48
   11bd4:	strbcc	r1, [r3]
   11bd8:	bcc	11a20 <dcngettext@plt+0xa08>
   11bdc:	bl	10fa0 <__overflow@plt>
   11be0:	ldr	r5, [sp, #72]	; 0x48
   11be4:	b	11a20 <dcngettext@plt+0xa08>
   11be8:	add	r3, r4, r7
   11bec:	mov	r6, r3
   11bf0:	cmp	r5, #0
   11bf4:	bne	11e64 <dcngettext@plt+0xe4c>
   11bf8:	add	r7, r7, #1
   11bfc:	mov	r3, #0
   11c00:	strb	r3, [r6]
   11c04:	ldrb	r3, [r4, r7]
   11c08:	add	r2, r4, r7
   11c0c:	cmp	r3, #32
   11c10:	cmpne	r3, #9
   11c14:	rsbeq	r1, r4, #1
   11c18:	bne	11c30 <dcngettext@plt+0xc18>
   11c1c:	add	r7, r1, r2
   11c20:	ldrb	r3, [r2, #1]!
   11c24:	cmp	r3, #9
   11c28:	cmpne	r3, #32
   11c2c:	beq	11c1c <dcngettext@plt+0xc04>
   11c30:	cmp	r3, #61	; 0x3d
   11c34:	bne	114e8 <dcngettext@plt+0x4d0>
   11c38:	add	r3, r7, #1
   11c3c:	add	r6, r4, r3
   11c40:	ldrb	r3, [r4, r3]
   11c44:	cmp	r3, #9
   11c48:	cmpne	r3, #32
   11c4c:	bne	11c6c <dcngettext@plt+0xc54>
   11c50:	add	r7, r7, #2
   11c54:	add	r3, r4, r7
   11c58:	mov	r6, r3
   11c5c:	ldrb	r2, [r3], #1
   11c60:	cmp	r2, #9
   11c64:	cmpne	r2, #32
   11c68:	beq	11c58 <dcngettext@plt+0xc40>
   11c6c:	mov	r0, r6
   11c70:	bl	12284 <dcngettext@plt+0x126c>
   11c74:	cmp	r0, #0
   11c78:	bne	11614 <dcngettext@plt+0x5fc>
   11c7c:	b	114e8 <dcngettext@plt+0x4d0>
   11c80:	ldrb	r3, [sl, #6]
   11c84:	mov	r5, r8
   11c88:	cmp	r3, #0
   11c8c:	str	r3, [sp, #84]	; 0x54
   11c90:	bne	1170c <dcngettext@plt+0x6f4>
   11c94:	ldrb	r3, [sl, #8]
   11c98:	cmp	r3, #0
   11c9c:	str	r3, [sp, #84]	; 0x54
   11ca0:	bne	1170c <dcngettext@plt+0x6f4>
   11ca4:	ldr	r3, [sp, #60]	; 0x3c
   11ca8:	cmp	r3, #0
   11cac:	beq	11e38 <dcngettext@plt+0xe20>
   11cb0:	ldr	r3, [sp, #76]	; 0x4c
   11cb4:	str	r3, [sp, #84]	; 0x54
   11cb8:	b	119b8 <dcngettext@plt+0x9a0>
   11cbc:	mov	r0, r9
   11cc0:	bl	17090 <dcngettext@plt+0x6078>
   11cc4:	cmp	r0, #0
   11cc8:	beq	1173c <dcngettext@plt+0x724>
   11ccc:	bl	10f28 <__errno_location@plt>
   11cd0:	ldr	r2, [sp, #48]	; 0x30
   11cd4:	mov	r1, #3
   11cd8:	ldr	r5, [r0]
   11cdc:	mov	r0, r4
   11ce0:	bl	166c0 <dcngettext@plt+0x56a8>
   11ce4:	mov	r1, r5
   11ce8:	ldr	r2, [pc, #968]	; 120b8 <dcngettext@plt+0x10a0>
   11cec:	mov	r3, r0
   11cf0:	mov	r0, r4
   11cf4:	bl	10ea4 <error@plt>
   11cf8:	b	118a8 <dcngettext@plt+0x890>
   11cfc:	mov	r2, #5
   11d00:	ldr	r1, [pc, #952]	; 120c0 <dcngettext@plt+0x10a8>
   11d04:	mov	r0, fp
   11d08:	bl	10e2c <dcgettext@plt>
   11d0c:	ldr	r2, [sp, #48]	; 0x30
   11d10:	mov	r1, #3
   11d14:	mov	r5, r0
   11d18:	mov	r0, fp
   11d1c:	bl	166c0 <dcngettext@plt+0x56a8>
   11d20:	ldr	r3, [pc, #856]	; 12080 <dcngettext@plt+0x1068>
   11d24:	mov	r2, r5
   11d28:	str	r3, [sp]
   11d2c:	mov	r1, fp
   11d30:	mov	r3, r0
   11d34:	mov	r0, fp
   11d38:	bl	10ea4 <error@plt>
   11d3c:	b	118a4 <dcngettext@plt+0x88c>
   11d40:	sub	r1, r7, r1
   11d44:	mov	r0, r4
   11d48:	bl	122e0 <dcngettext@plt+0x12c8>
   11d4c:	adds	r0, r0, #0
   11d50:	movne	r0, #1
   11d54:	b	11c74 <dcngettext@plt+0xc5c>
   11d58:	mov	r2, #5
   11d5c:	ldr	r1, [pc, #864]	; 120c4 <dcngettext@plt+0x10ac>
   11d60:	mov	r0, #0
   11d64:	bl	10e2c <dcgettext@plt>
   11d68:	ldr	r2, [sp, #48]	; 0x30
   11d6c:	mov	r1, #3
   11d70:	mov	r4, r0
   11d74:	mov	r0, #0
   11d78:	bl	166c0 <dcngettext@plt+0x56a8>
   11d7c:	mov	r1, #0
   11d80:	mov	r2, r4
   11d84:	mov	r4, #0
   11d88:	mov	r3, r0
   11d8c:	mov	r0, r1
   11d90:	bl	10ea4 <error@plt>
   11d94:	b	118a8 <dcngettext@plt+0x890>
   11d98:	ldr	r3, [sp, #36]	; 0x24
   11d9c:	cmp	r3, #0
   11da0:	bne	11ed0 <dcngettext@plt+0xeb8>
   11da4:	ldr	r3, [pc, #636]	; 12028 <dcngettext@plt+0x1010>
   11da8:	ldr	r0, [r3]
   11dac:	ldr	r3, [r0, #20]
   11db0:	ldr	r2, [r0, #24]
   11db4:	cmp	r3, r2
   11db8:	addcc	r1, r3, #1
   11dbc:	movcc	r2, #92	; 0x5c
   11dc0:	strcc	r1, [r0, #20]
   11dc4:	strbcc	r2, [r3]
   11dc8:	bcs	1211c <dcngettext@plt+0x1104>
   11dcc:	ldr	r3, [sl]
   11dd0:	lsrs	r3, r3, #1
   11dd4:	bne	11b70 <dcngettext@plt+0xb58>
   11dd8:	ldr	r3, [pc, #584]	; 12028 <dcngettext@plt+0x1010>
   11ddc:	ldr	r0, [r3]
   11de0:	ldr	r3, [r0, #20]
   11de4:	ldr	r2, [r0, #24]
   11de8:	cmp	r3, r2
   11dec:	addcc	r1, r3, #1
   11df0:	movcc	r2, #32
   11df4:	strcc	r1, [r0, #20]
   11df8:	strbcc	r2, [r3]
   11dfc:	bcs	12104 <dcngettext@plt+0x10ec>
   11e00:	ldr	r3, [pc, #544]	; 12028 <dcngettext@plt+0x1010>
   11e04:	ldr	r0, [r3]
   11e08:	ldr	r2, [r0, #24]
   11e0c:	ldr	r3, [r0, #20]
   11e10:	cmp	r3, r2
   11e14:	addcc	r2, r3, #1
   11e18:	strcc	r2, [r0, #20]
   11e1c:	ldrcc	r2, [sp, #96]	; 0x60
   11e20:	strbcc	r2, [r3]
   11e24:	bcs	12110 <dcngettext@plt+0x10f8>
   11e28:	mov	r1, r5
   11e2c:	ldr	r0, [sp, #48]	; 0x30
   11e30:	bl	12374 <dcngettext@plt+0x135c>
   11e34:	b	11bac <dcngettext@plt+0xb94>
   11e38:	mov	r1, r7
   11e3c:	mov	r0, r4
   11e40:	bl	12374 <dcngettext@plt+0x135c>
   11e44:	ldr	r3, [sp, #76]	; 0x4c
   11e48:	str	r3, [sp, #84]	; 0x54
   11e4c:	ldrb	r0, [sl, #8]
   11e50:	cmp	r0, #0
   11e54:	bne	1170c <dcngettext@plt+0x6f4>
   11e58:	mov	r2, #5
   11e5c:	ldr	r1, [pc, #612]	; 120c8 <dcngettext@plt+0x10b0>
   11e60:	b	116f8 <dcngettext@plt+0x6e0>
   11e64:	mov	r1, r7
   11e68:	mov	r0, r4
   11e6c:	bl	122e0 <dcngettext@plt+0x12c8>
   11e70:	cmp	r0, #0
   11e74:	bne	11bf8 <dcngettext@plt+0xbe0>
   11e78:	b	114e8 <dcngettext@plt+0x4d0>
   11e7c:	mov	r1, #10
   11e80:	ldr	r0, [sp, #48]	; 0x30
   11e84:	bl	10f1c <strchr@plt>
   11e88:	cmp	r0, #0
   11e8c:	bne	11b44 <dcngettext@plt+0xb2c>
   11e90:	b	11b54 <dcngettext@plt+0xb3c>
   11e94:	ldr	r3, [pc, #480]	; 1207c <dcngettext@plt+0x1064>
   11e98:	ldr	r0, [r3]
   11e9c:	bl	17090 <dcngettext@plt+0x6078>
   11ea0:	cmn	r0, #1
   11ea4:	bne	11a40 <dcngettext@plt+0xa28>
   11ea8:	bl	10f28 <__errno_location@plt>
   11eac:	mov	r2, #5
   11eb0:	ldr	r1, [pc, #448]	; 12078 <dcngettext@plt+0x1060>
   11eb4:	ldr	r4, [r0]
   11eb8:	mov	r0, #0
   11ebc:	bl	10e2c <dcgettext@plt>
   11ec0:	mov	r1, r4
   11ec4:	mov	r2, r0
   11ec8:	mov	r0, #1
   11ecc:	bl	10ea4 <error@plt>
   11ed0:	ldr	r3, [pc, #336]	; 12028 <dcngettext@plt+0x1010>
   11ed4:	ldr	r0, [r3]
   11ed8:	ldr	r3, [r0, #20]
   11edc:	ldr	r2, [r0, #24]
   11ee0:	cmp	r3, r2
   11ee4:	bcs	12128 <dcngettext@plt+0x1110>
   11ee8:	ldr	r5, [sp, #36]	; 0x24
   11eec:	add	r1, r3, #1
   11ef0:	mov	r2, #92	; 0x5c
   11ef4:	str	r1, [r0, #20]
   11ef8:	strb	r2, [r3]
   11efc:	ldr	r3, [pc, #292]	; 12028 <dcngettext@plt+0x1010>
   11f00:	mov	r2, #4
   11f04:	mov	r6, r3
   11f08:	mov	r1, #1
   11f0c:	ldr	r3, [r3]
   11f10:	ldr	r0, [pc, #360]	; 12080 <dcngettext@plt+0x1068>
   11f14:	bl	10e14 <fwrite_unlocked@plt>
   11f18:	ldr	r3, [r6]
   11f1c:	mov	r2, #2
   11f20:	mov	r1, #1
   11f24:	ldr	r0, [pc, #416]	; 120cc <dcngettext@plt+0x10b4>
   11f28:	bl	10e14 <fwrite_unlocked@plt>
   11f2c:	mov	r1, r5
   11f30:	ldr	r0, [sp, #48]	; 0x30
   11f34:	bl	12374 <dcngettext@plt+0x135c>
   11f38:	ldr	r3, [r6]
   11f3c:	mov	r2, #4
   11f40:	mov	r1, #1
   11f44:	ldr	r0, [pc, #388]	; 120d0 <dcngettext@plt+0x10b8>
   11f48:	bl	10e14 <fwrite_unlocked@plt>
   11f4c:	ldr	r3, [sl]
   11f50:	lsrs	r3, r3, #1
   11f54:	bne	11b70 <dcngettext@plt+0xb58>
   11f58:	b	11ba0 <dcngettext@plt+0xb88>
   11f5c:	ldr	r2, [pc, #368]	; 120d4 <dcngettext@plt+0x10bc>
   11f60:	mov	r3, #0
   11f64:	bl	176fc <dcngettext@plt+0x66e4>
   11f68:	add	r3, r2, #999424	; 0xf4000
   11f6c:	add	r3, r3, #576	; 0x240
   11f70:	b	1181c <dcngettext@plt+0x804>
   11f74:	ldr	r2, [pc, #344]	; 120d4 <dcngettext@plt+0x10bc>
   11f78:	mov	r3, #0
   11f7c:	bl	176fc <dcngettext@plt+0x66e4>
   11f80:	add	r3, r2, #999424	; 0xf4000
   11f84:	add	r3, r3, #576	; 0x240
   11f88:	b	117c8 <dcngettext@plt+0x7b0>
   11f8c:	ldr	r2, [pc, #320]	; 120d4 <dcngettext@plt+0x10bc>
   11f90:	mov	r3, #0
   11f94:	bl	176fc <dcngettext@plt+0x66e4>
   11f98:	add	r3, r2, #999424	; 0xf4000
   11f9c:	add	r3, r3, #576	; 0x240
   11fa0:	b	11774 <dcngettext@plt+0x75c>
   11fa4:	ldr	r3, [sp, #32]
   11fa8:	cmp	r3, #0
   11fac:	moveq	r2, #5
   11fb0:	ldreq	r1, [pc, #288]	; 120d8 <dcngettext@plt+0x10c0>
   11fb4:	moveq	r4, r3
   11fb8:	bne	11338 <dcngettext@plt+0x320>
   11fbc:	b	112a4 <dcngettext@plt+0x28c>
   11fc0:	ldr	r6, [sp, #84]	; 0x54
   11fc4:	mov	r2, #5
   11fc8:	ldr	r1, [pc, #268]	; 120dc <dcngettext@plt+0x10c4>
   11fcc:	mov	r0, r6
   11fd0:	bl	10e2c <dcgettext@plt>
   11fd4:	ldr	r2, [sp, #48]	; 0x30
   11fd8:	mov	r1, #3
   11fdc:	mov	r5, r0
   11fe0:	mov	r0, r6
   11fe4:	bl	166c0 <dcngettext@plt+0x56a8>
   11fe8:	mov	r2, r5
   11fec:	mov	r1, r6
   11ff0:	mov	r3, r0
   11ff4:	mov	r0, r6
   11ff8:	bl	10ea4 <error@plt>
   11ffc:	b	118a4 <dcngettext@plt+0x88c>
   12000:	mov	r5, #0
   12004:	b	11efc <dcngettext@plt+0xee4>
   12008:	mov	r1, #92	; 0x5c
   1200c:	bl	10fa0 <__overflow@plt>
   12010:	b	116e0 <dcngettext@plt+0x6c8>
   12014:	andeq	r8, r2, r8, lsl #30
   12018:	andeq	r7, r1, r4, ror pc
   1201c:	andeq	r8, r1, r4, ror r0
   12020:	andeq	r7, r1, r8, asr #31
   12024:			; <UNDEFINED> instruction: 0x000129b0
   12028:	andeq	r9, r2, r4, ror #2
   1202c:	andeq	r7, r1, r0, lsr r9
   12030:	strheq	r8, [r1], -r8	; <UNPREDICTABLE>
   12034:	andeq	r0, r0, r1, lsl #2
   12038:	andeq	r0, r0, r3, lsl #2
   1203c:	andeq	r9, r2, ip, ror #2
   12040:	strdeq	r9, [r2], -r8
   12044:	andeq	r8, r1, r8, lsl #1
   12048:	muleq	r1, r8, r0
   1204c:	andeq	r9, r2, r0, lsl #2
   12050:	andeq	r8, r1, r8, lsr #1
   12054:	andeq	r7, r1, r0, lsr #20
   12058:	andeq	r7, r1, r4, asr #31
   1205c:	andeq	r8, r1, r4, ror #1
   12060:	andeq	r8, r1, r0, ror r2
   12064:	andeq	r8, r1, r0, lsr #2
   12068:	andeq	r8, r1, ip, asr r1
   1206c:			; <UNDEFINED> instruction: 0x000182b0
   12070:	andeq	r9, r2, r0, asr r1
   12074:	andeq	r7, r1, r8, lsl sl
   12078:	strdeq	r8, [r1], -r0
   1207c:	andeq	r9, r2, r0, ror #2
   12080:	muleq	r1, r8, sl
   12084:	andeq	r8, r1, r0, lsl #6
   12088:	andeq	r8, r1, ip, asr #6
   1208c:	andeq	r8, r1, r0, ror #6
   12090:	andeq	r8, r1, r8, ror #7
   12094:			; <UNDEFINED> instruction: 0x000183b8
   12098:	andeq	r8, r1, r4, asr #8
   1209c:	andeq	r8, r1, r4, lsl r4
   120a0:	andeq	r8, r1, r0, lsr #9
   120a4:	andeq	r8, r1, r0, ror r4
   120a8:	andeq	r8, r1, ip, lsl r3
   120ac:	strdeq	r7, [r1], -r8
   120b0:	andeq	r8, r1, r8, ror #6
   120b4:	andeq	r7, r1, ip, lsl sl
   120b8:	andeq	r8, r1, r8, ror #11
   120bc:	andeq	r8, r1, ip, ror #9
   120c0:	andeq	r8, r1, r4, lsl #7
   120c4:	andeq	r8, r1, r4, ror r3
   120c8:	andeq	r8, r1, r0, ror r3
   120cc:	strdeq	r8, [r1], -r4
   120d0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   120d4:	andeq	r4, pc, r0, asr #4
   120d8:	andeq	r8, r1, r0, lsr r2
   120dc:	ldrdeq	r8, [r1], -r0
   120e0:	andeq	r8, r1, r8, lsr #3
   120e4:	strdeq	r8, [r1], -r0
   120e8:	andeq	r8, r1, r0, asr #1
   120ec:	mov	r3, #1
   120f0:	str	r3, [sp, #72]	; 0x48
   120f4:	b	11a34 <dcngettext@plt+0xa1c>
   120f8:	mov	r1, #92	; 0x5c
   120fc:	bl	10fa0 <__overflow@plt>
   12100:	b	119e0 <dcngettext@plt+0x9c8>
   12104:	mov	r1, #32
   12108:	bl	10fa0 <__overflow@plt>
   1210c:	b	11e00 <dcngettext@plt+0xde8>
   12110:	ldr	r1, [sp, #100]	; 0x64
   12114:	bl	10fa0 <__overflow@plt>
   12118:	b	11e28 <dcngettext@plt+0xe10>
   1211c:	mov	r1, #92	; 0x5c
   12120:	bl	10fa0 <__overflow@plt>
   12124:	b	11dcc <dcngettext@plt+0xdb4>
   12128:	mov	r1, #92	; 0x5c
   1212c:	bl	10fa0 <__overflow@plt>
   12130:	ldr	r5, [sp, #36]	; 0x24
   12134:	b	11efc <dcngettext@plt+0xee4>
   12138:	ldr	r1, [pc, #-96]	; 120e0 <dcngettext@plt+0x10c8>
   1213c:	mov	r2, #5
   12140:	mov	r0, #0
   12144:	bl	10e2c <dcgettext@plt>
   12148:	mov	r1, #0
   1214c:	mov	r2, r0
   12150:	mov	r0, r1
   12154:	bl	10ea4 <error@plt>
   12158:	mov	r0, #1
   1215c:	bl	125c8 <dcngettext@plt+0x15b0>
   12160:	bl	10e38 <__stack_chk_fail@plt>
   12164:	ldrb	r3, [sl, #6]
   12168:	cmp	r3, #0
   1216c:	beq	1127c <dcngettext@plt+0x264>
   12170:	ldr	r3, [sp, #32]
   12174:	cmp	r3, #0
   12178:	bne	11310 <dcngettext@plt+0x2f8>
   1217c:	mov	r2, #5
   12180:	ldr	r1, [pc, #-164]	; 120e4 <dcngettext@plt+0x10cc>
   12184:	b	12140 <dcngettext@plt+0x1128>
   12188:	mov	r2, #5
   1218c:	ldr	r1, [pc, #-172]	; 120e8 <dcngettext@plt+0x10d0>
   12190:	b	112a4 <dcngettext@plt+0x28c>
   12194:	mov	fp, #0
   12198:	mov	lr, #0
   1219c:	pop	{r1}		; (ldr r1, [sp], #4)
   121a0:	mov	r2, sp
   121a4:	push	{r2}		; (str r2, [sp, #-4]!)
   121a8:	push	{r0}		; (str r0, [sp, #-4]!)
   121ac:	ldr	ip, [pc, #16]	; 121c4 <dcngettext@plt+0x11ac>
   121b0:	push	{ip}		; (str ip, [sp, #-4]!)
   121b4:	ldr	r0, [pc, #12]	; 121c8 <dcngettext@plt+0x11b0>
   121b8:	ldr	r3, [pc, #12]	; 121cc <dcngettext@plt+0x11b4>
   121bc:	bl	10ebc <__libc_start_main@plt>
   121c0:	bl	11000 <abort@plt>
   121c4:	ldrdeq	r7, [r1], -r0
   121c8:	andeq	r1, r1, r4, lsr #32
   121cc:	andeq	r7, r1, r0, ror r8
   121d0:	ldr	r3, [pc, #20]	; 121ec <dcngettext@plt+0x11d4>
   121d4:	ldr	r2, [pc, #20]	; 121f0 <dcngettext@plt+0x11d8>
   121d8:	add	r3, pc, r3
   121dc:	ldr	r2, [r3, r2]
   121e0:	cmp	r2, #0
   121e4:	bxeq	lr
   121e8:	b	10ee0 <__gmon_start__@plt>
   121ec:	andeq	r6, r1, r0, lsr #28
   121f0:	andeq	r0, r0, ip, ror #1
   121f4:	ldr	r0, [pc, #24]	; 12214 <dcngettext@plt+0x11fc>
   121f8:	ldr	r3, [pc, #24]	; 12218 <dcngettext@plt+0x1200>
   121fc:	cmp	r3, r0
   12200:	bxeq	lr
   12204:	ldr	r3, [pc, #16]	; 1221c <dcngettext@plt+0x1204>
   12208:	cmp	r3, #0
   1220c:	bxeq	lr
   12210:	bx	r3
   12214:	andeq	r9, r2, r8, asr #2
   12218:	andeq	r9, r2, r8, asr #2
   1221c:	andeq	r0, r0, r0
   12220:	ldr	r0, [pc, #36]	; 1224c <dcngettext@plt+0x1234>
   12224:	ldr	r1, [pc, #36]	; 12250 <dcngettext@plt+0x1238>
   12228:	sub	r1, r1, r0
   1222c:	asr	r1, r1, #2
   12230:	add	r1, r1, r1, lsr #31
   12234:	asrs	r1, r1, #1
   12238:	bxeq	lr
   1223c:	ldr	r3, [pc, #16]	; 12254 <dcngettext@plt+0x123c>
   12240:	cmp	r3, #0
   12244:	bxeq	lr
   12248:	bx	r3
   1224c:	andeq	r9, r2, r8, asr #2
   12250:	andeq	r9, r2, r8, asr #2
   12254:	andeq	r0, r0, r0
   12258:	push	{r4, lr}
   1225c:	ldr	r4, [pc, #24]	; 1227c <dcngettext@plt+0x1264>
   12260:	ldrb	r3, [r4]
   12264:	cmp	r3, #0
   12268:	popne	{r4, pc}
   1226c:	bl	121f4 <dcngettext@plt+0x11dc>
   12270:	mov	r3, #1
   12274:	strb	r3, [r4]
   12278:	pop	{r4, pc}
   1227c:	andeq	r9, r2, r8, ror #2
   12280:	b	12220 <dcngettext@plt+0x1208>
   12284:	ldr	r3, [pc, #80]	; 122dc <dcngettext@plt+0x12c4>
   12288:	push	{r4, r5, r6, lr}
   1228c:	mov	r5, r0
   12290:	ldr	r4, [r3]
   12294:	cmp	r4, #0
   12298:	beq	122cc <dcngettext@plt+0x12b4>
   1229c:	bl	10ef8 <__ctype_b_loc@plt>
   122a0:	mov	r3, r5
   122a4:	add	r1, r5, r4
   122a8:	ldr	ip, [r0]
   122ac:	ldrb	r2, [r3], #1
   122b0:	mov	r5, r3
   122b4:	lsl	r2, r2, #1
   122b8:	ldrh	r0, [ip, r2]
   122bc:	ands	r0, r0, #4096	; 0x1000
   122c0:	popeq	{r4, r5, r6, pc}
   122c4:	cmp	r1, r3
   122c8:	bne	122ac <dcngettext@plt+0x1294>
   122cc:	ldrb	r0, [r5]
   122d0:	clz	r0, r0
   122d4:	lsr	r0, r0, #5
   122d8:	pop	{r4, r5, r6, pc}
   122dc:	andeq	r9, r2, ip, ror #2
   122e0:	cmp	r1, #0
   122e4:	bxeq	lr
   122e8:	push	{r4, r5, lr}
   122ec:	add	ip, r0, #1
   122f0:	mov	r2, #0
   122f4:	sub	r4, r1, #1
   122f8:	mov	r5, #10
   122fc:	ldrb	r3, [r0, r2]
   12300:	cmp	r3, #0
   12304:	beq	12334 <dcngettext@plt+0x131c>
   12308:	cmp	r3, #92	; 0x5c
   1230c:	mov	lr, ip
   12310:	bne	1233c <dcngettext@plt+0x1324>
   12314:	cmp	r4, r2
   12318:	add	r2, r2, #1
   1231c:	beq	12334 <dcngettext@plt+0x131c>
   12320:	ldrb	r3, [r0, r2]
   12324:	cmp	r3, #92	; 0x5c
   12328:	beq	1236c <dcngettext@plt+0x1354>
   1232c:	cmp	r3, #110	; 0x6e
   12330:	beq	12364 <dcngettext@plt+0x134c>
   12334:	mov	r0, #0
   12338:	pop	{r4, r5, pc}
   1233c:	strb	r3, [ip, #-1]
   12340:	add	r2, r2, #1
   12344:	cmp	r1, r2
   12348:	add	ip, ip, #1
   1234c:	bhi	122fc <dcngettext@plt+0x12e4>
   12350:	add	r1, r0, r1
   12354:	cmp	lr, r1
   12358:	movcc	r3, #0
   1235c:	strbcc	r3, [lr]
   12360:	pop	{r4, r5, pc}
   12364:	strb	r5, [ip, #-1]
   12368:	b	12340 <dcngettext@plt+0x1328>
   1236c:	strb	r3, [ip, #-1]
   12370:	b	12340 <dcngettext@plt+0x1328>
   12374:	cmp	r1, #0
   12378:	beq	1241c <dcngettext@plt+0x1404>
   1237c:	push	{r4, r5, r6, r7, r8, lr}
   12380:	mov	r4, r0
   12384:	ldrb	ip, [r0]
   12388:	cmp	ip, #0
   1238c:	popeq	{r4, r5, r6, r7, r8, pc}
   12390:	ldr	r6, [pc, #144]	; 12428 <dcngettext@plt+0x1410>
   12394:	ldr	r7, [pc, #144]	; 1242c <dcngettext@plt+0x1414>
   12398:	ldr	r5, [pc, #144]	; 12430 <dcngettext@plt+0x1418>
   1239c:	b	123c8 <dcngettext@plt+0x13b0>
   123a0:	ldr	r3, [lr, #20]
   123a4:	ldr	r2, [lr, #24]
   123a8:	add	r1, r3, #1
   123ac:	cmp	r3, r2
   123b0:	strcc	r1, [lr, #20]
   123b4:	strbcc	ip, [r3]
   123b8:	bcs	1240c <dcngettext@plt+0x13f4>
   123bc:	ldrb	ip, [r4, #1]!
   123c0:	cmp	ip, #0
   123c4:	popeq	{r4, r5, r6, r7, r8, pc}
   123c8:	cmp	ip, #10
   123cc:	ldr	lr, [r6]
   123d0:	beq	123f4 <dcngettext@plt+0x13dc>
   123d4:	cmp	ip, #92	; 0x5c
   123d8:	mov	r3, lr
   123dc:	mov	r2, #2
   123e0:	mov	r1, #1
   123e4:	mov	r0, r5
   123e8:	bne	123a0 <dcngettext@plt+0x1388>
   123ec:	bl	10e14 <fwrite_unlocked@plt>
   123f0:	b	123bc <dcngettext@plt+0x13a4>
   123f4:	mov	r3, lr
   123f8:	mov	r2, #2
   123fc:	mov	r1, #1
   12400:	mov	r0, r7
   12404:	bl	10e14 <fwrite_unlocked@plt>
   12408:	b	123bc <dcngettext@plt+0x13a4>
   1240c:	mov	r1, ip
   12410:	mov	r0, lr
   12414:	bl	10fa0 <__overflow@plt>
   12418:	b	123bc <dcngettext@plt+0x13a4>
   1241c:	ldr	r3, [pc, #4]	; 12428 <dcngettext@plt+0x1410>
   12420:	ldr	r1, [r3]
   12424:	b	10d9c <fputs_unlocked@plt>
   12428:	andeq	r9, r2, r4, ror #2
   1242c:	andeq	r7, r1, r0, lsl sl
   12430:	andeq	r7, r1, r4, lsl sl
   12434:	push	{r4, r5, r6, r7, r8, lr}
   12438:	mov	r6, r1
   1243c:	ldr	r1, [pc, #368]	; 125b4 <dcngettext@plt+0x159c>
   12440:	mov	r5, r2
   12444:	mov	r7, r0
   12448:	bl	10dc0 <strcmp@plt>
   1244c:	mov	r3, #0
   12450:	strb	r3, [r5]
   12454:	cmp	r0, r3
   12458:	bne	1249c <dcngettext@plt+0x1484>
   1245c:	ldr	r5, [pc, #340]	; 125b8 <dcngettext@plt+0x15a0>
   12460:	ldr	r3, [pc, #340]	; 125bc <dcngettext@plt+0x15a4>
   12464:	mov	r2, #1
   12468:	ldr	r4, [r5]
   1246c:	mov	r1, #2
   12470:	mov	r0, r4
   12474:	strb	r2, [r3, #4]
   12478:	bl	1455c <dcngettext@plt+0x3544>
   1247c:	mov	r1, r6
   12480:	mov	r0, r4
   12484:	bl	14414 <dcngettext@plt+0x33fc>
   12488:	cmp	r0, #0
   1248c:	bne	12514 <dcngettext@plt+0x14fc>
   12490:	mov	r4, #1
   12494:	mov	r0, r4
   12498:	pop	{r4, r5, r6, r7, r8, pc}
   1249c:	ldr	r1, [pc, #284]	; 125c0 <dcngettext@plt+0x15a8>
   124a0:	mov	r0, r7
   124a4:	bl	14590 <dcngettext@plt+0x3578>
   124a8:	subs	r4, r0, #0
   124ac:	beq	12560 <dcngettext@plt+0x1548>
   124b0:	mov	r1, #2
   124b4:	bl	1455c <dcngettext@plt+0x3544>
   124b8:	mov	r1, r6
   124bc:	mov	r0, r4
   124c0:	bl	14414 <dcngettext@plt+0x33fc>
   124c4:	subs	r5, r0, #0
   124c8:	ldrne	r5, [pc, #232]	; 125b8 <dcngettext@plt+0x15a0>
   124cc:	bne	12514 <dcngettext@plt+0x14fc>
   124d0:	mov	r0, r4
   124d4:	bl	17090 <dcngettext@plt+0x6078>
   124d8:	cmp	r0, #0
   124dc:	beq	12490 <dcngettext@plt+0x1478>
   124e0:	bl	10f28 <__errno_location@plt>
   124e4:	mov	r2, r7
   124e8:	mov	r1, #3
   124ec:	mov	r4, r5
   124f0:	ldr	r6, [r0]
   124f4:	mov	r0, r5
   124f8:	bl	166c0 <dcngettext@plt+0x56a8>
   124fc:	mov	r1, r6
   12500:	ldr	r2, [pc, #188]	; 125c4 <dcngettext@plt+0x15ac>
   12504:	mov	r3, r0
   12508:	mov	r0, r5
   1250c:	bl	10ea4 <error@plt>
   12510:	b	12494 <dcngettext@plt+0x147c>
   12514:	bl	10f28 <__errno_location@plt>
   12518:	mov	r2, r7
   1251c:	mov	r1, #3
   12520:	ldr	r6, [r0]
   12524:	mov	r0, #0
   12528:	bl	166c0 <dcngettext@plt+0x56a8>
   1252c:	mov	r1, r6
   12530:	ldr	r2, [pc, #140]	; 125c4 <dcngettext@plt+0x15ac>
   12534:	mov	r3, r0
   12538:	mov	r0, #0
   1253c:	bl	10ea4 <error@plt>
   12540:	ldr	r3, [r5]
   12544:	cmp	r3, r4
   12548:	moveq	r4, #0
   1254c:	beq	12494 <dcngettext@plt+0x147c>
   12550:	mov	r0, r4
   12554:	bl	17090 <dcngettext@plt+0x6078>
   12558:	mov	r4, #0
   1255c:	b	12494 <dcngettext@plt+0x147c>
   12560:	ldr	r3, [pc, #84]	; 125bc <dcngettext@plt+0x15a4>
   12564:	ldrb	r4, [r3, #5]
   12568:	bl	10f28 <__errno_location@plt>
   1256c:	cmp	r4, #0
   12570:	ldr	r6, [r0]
   12574:	beq	12588 <dcngettext@plt+0x1570>
   12578:	cmp	r6, #2
   1257c:	moveq	r3, #1
   12580:	strbeq	r3, [r5]
   12584:	beq	12494 <dcngettext@plt+0x147c>
   12588:	mov	r2, r7
   1258c:	mov	r1, #3
   12590:	mov	r0, #0
   12594:	bl	166c0 <dcngettext@plt+0x56a8>
   12598:	mov	r1, r6
   1259c:	ldr	r2, [pc, #32]	; 125c4 <dcngettext@plt+0x15ac>
   125a0:	mov	r4, #0
   125a4:	mov	r3, r0
   125a8:	mov	r0, #0
   125ac:	bl	10ea4 <error@plt>
   125b0:	b	12494 <dcngettext@plt+0x147c>
   125b4:	andeq	r7, r1, r8, lsl sl
   125b8:	andeq	r9, r2, r0, ror #2
   125bc:	andeq	r9, r2, ip, ror #2
   125c0:	andeq	r7, r1, ip, lsl sl
   125c4:	andeq	r8, r1, r8, ror #11
   125c8:	ldr	r3, [pc, #844]	; 1291c <dcngettext@plt+0x1904>
   125cc:	push	{r7, lr}
   125d0:	sub	sp, sp, #72	; 0x48
   125d4:	ldr	r3, [r3]
   125d8:	subs	r4, r0, #0
   125dc:	str	r3, [sp, #68]	; 0x44
   125e0:	beq	1261c <dcngettext@plt+0x1604>
   125e4:	ldr	r3, [pc, #820]	; 12920 <dcngettext@plt+0x1908>
   125e8:	mov	r2, #5
   125ec:	ldr	r1, [pc, #816]	; 12924 <dcngettext@plt+0x190c>
   125f0:	mov	r0, #0
   125f4:	ldr	r5, [r3]
   125f8:	bl	10e2c <dcgettext@plt>
   125fc:	ldr	r3, [pc, #804]	; 12928 <dcngettext@plt+0x1910>
   12600:	mov	r1, #1
   12604:	ldr	r3, [r3]
   12608:	mov	r2, r0
   1260c:	mov	r0, r5
   12610:	bl	10f70 <__fprintf_chk@plt>
   12614:	mov	r0, r4
   12618:	bl	10f04 <exit@plt>
   1261c:	mov	r2, #5
   12620:	ldr	r1, [pc, #772]	; 1292c <dcngettext@plt+0x1914>
   12624:	bl	10e2c <dcgettext@plt>
   12628:	ldr	r2, [pc, #760]	; 12928 <dcngettext@plt+0x1910>
   1262c:	ldr	r5, [pc, #764]	; 12930 <dcngettext@plt+0x1918>
   12630:	mov	r3, #160	; 0xa0
   12634:	ldr	r2, [r2]
   12638:	str	r3, [sp]
   1263c:	ldr	r3, [pc, #752]	; 12934 <dcngettext@plt+0x191c>
   12640:	mov	r1, r0
   12644:	mov	r0, #1
   12648:	bl	10f58 <__printf_chk@plt>
   1264c:	mov	r2, #5
   12650:	ldr	r1, [pc, #736]	; 12938 <dcngettext@plt+0x1920>
   12654:	mov	r0, r4
   12658:	bl	10e2c <dcgettext@plt>
   1265c:	ldr	r1, [r5]
   12660:	bl	10d9c <fputs_unlocked@plt>
   12664:	mov	r2, #5
   12668:	ldr	r1, [pc, #716]	; 1293c <dcngettext@plt+0x1924>
   1266c:	mov	r0, r4
   12670:	bl	10e2c <dcgettext@plt>
   12674:	ldr	r1, [r5]
   12678:	bl	10d9c <fputs_unlocked@plt>
   1267c:	mov	r2, #5
   12680:	ldr	r1, [pc, #696]	; 12940 <dcngettext@plt+0x1928>
   12684:	mov	r0, r4
   12688:	bl	10e2c <dcgettext@plt>
   1268c:	ldr	r2, [pc, #672]	; 12934 <dcngettext@plt+0x191c>
   12690:	mov	r1, r0
   12694:	mov	r0, #1
   12698:	bl	10f58 <__printf_chk@plt>
   1269c:	mov	r2, #5
   126a0:	ldr	r1, [pc, #668]	; 12944 <dcngettext@plt+0x192c>
   126a4:	mov	r0, r4
   126a8:	bl	10e2c <dcgettext@plt>
   126ac:	ldr	r1, [r5]
   126b0:	bl	10d9c <fputs_unlocked@plt>
   126b4:	mov	r2, #5
   126b8:	ldr	r1, [pc, #648]	; 12948 <dcngettext@plt+0x1930>
   126bc:	mov	r0, r4
   126c0:	bl	10e2c <dcgettext@plt>
   126c4:	ldr	r1, [r5]
   126c8:	bl	10d9c <fputs_unlocked@plt>
   126cc:	mov	r2, #5
   126d0:	ldr	r1, [pc, #628]	; 1294c <dcngettext@plt+0x1934>
   126d4:	mov	r0, r4
   126d8:	bl	10e2c <dcgettext@plt>
   126dc:	ldr	r1, [r5]
   126e0:	bl	10d9c <fputs_unlocked@plt>
   126e4:	mov	r2, #5
   126e8:	ldr	r1, [pc, #608]	; 12950 <dcngettext@plt+0x1938>
   126ec:	mov	r0, r4
   126f0:	bl	10e2c <dcgettext@plt>
   126f4:	ldr	r1, [r5]
   126f8:	bl	10d9c <fputs_unlocked@plt>
   126fc:	mov	r2, #5
   12700:	ldr	r1, [pc, #588]	; 12954 <dcngettext@plt+0x193c>
   12704:	mov	r0, r4
   12708:	bl	10e2c <dcgettext@plt>
   1270c:	ldr	r1, [r5]
   12710:	bl	10d9c <fputs_unlocked@plt>
   12714:	mov	r2, #5
   12718:	ldr	r1, [pc, #568]	; 12958 <dcngettext@plt+0x1940>
   1271c:	mov	r0, r4
   12720:	bl	10e2c <dcgettext@plt>
   12724:	ldr	r1, [r5]
   12728:	bl	10d9c <fputs_unlocked@plt>
   1272c:	mov	r2, #5
   12730:	ldr	r1, [pc, #548]	; 1295c <dcngettext@plt+0x1944>
   12734:	mov	r0, r4
   12738:	bl	10e2c <dcgettext@plt>
   1273c:	ldr	r2, [pc, #540]	; 12960 <dcngettext@plt+0x1948>
   12740:	mov	r1, r0
   12744:	mov	r0, #1
   12748:	bl	10f58 <__printf_chk@plt>
   1274c:	ldr	lr, [pc, #528]	; 12964 <dcngettext@plt+0x194c>
   12750:	add	ip, sp, #12
   12754:	ldm	lr!, {r0, r1, r2, r3}
   12758:	stmia	ip!, {r0, r1, r2, r3}
   1275c:	ldm	lr!, {r0, r1, r2, r3}
   12760:	ldr	r6, [sp, #12]
   12764:	stmia	ip!, {r0, r1, r2, r3}
   12768:	cmp	r6, #0
   1276c:	ldm	lr!, {r0, r1, r2, r3}
   12770:	addeq	r5, sp, #12
   12774:	stmia	ip!, {r0, r1, r2, r3}
   12778:	ldm	lr, {r0, r1}
   1277c:	stm	ip, {r0, r1}
   12780:	beq	127b0 <dcngettext@plt+0x1798>
   12784:	ldr	r7, [pc, #476]	; 12968 <dcngettext@plt+0x1950>
   12788:	add	r5, sp, #12
   1278c:	b	1279c <dcngettext@plt+0x1784>
   12790:	ldr	r6, [r5, #8]!
   12794:	cmp	r6, #0
   12798:	beq	127b0 <dcngettext@plt+0x1798>
   1279c:	mov	r1, r6
   127a0:	mov	r0, r7
   127a4:	bl	10dc0 <strcmp@plt>
   127a8:	cmp	r0, #0
   127ac:	bne	12790 <dcngettext@plt+0x1778>
   127b0:	ldr	r5, [r5, #4]
   127b4:	mov	r2, #5
   127b8:	cmp	r5, #0
   127bc:	ldr	r1, [pc, #424]	; 1296c <dcngettext@plt+0x1954>
   127c0:	beq	12868 <dcngettext@plt+0x1850>
   127c4:	mov	r0, #0
   127c8:	bl	10e2c <dcgettext@plt>
   127cc:	ldr	r3, [pc, #412]	; 12970 <dcngettext@plt+0x1958>
   127d0:	ldr	r2, [pc, #412]	; 12974 <dcngettext@plt+0x195c>
   127d4:	mov	r1, r0
   127d8:	mov	r0, #1
   127dc:	bl	10f58 <__printf_chk@plt>
   127e0:	mov	r1, #0
   127e4:	mov	r0, #5
   127e8:	bl	10fac <setlocale@plt>
   127ec:	cmp	r0, #0
   127f0:	ldreq	r6, [pc, #368]	; 12968 <dcngettext@plt+0x1950>
   127f4:	beq	12810 <dcngettext@plt+0x17f8>
   127f8:	mov	r2, #3
   127fc:	ldr	r1, [pc, #372]	; 12978 <dcngettext@plt+0x1960>
   12800:	bl	10ff4 <strncmp@plt>
   12804:	ldr	r6, [pc, #348]	; 12968 <dcngettext@plt+0x1950>
   12808:	cmp	r0, #0
   1280c:	bne	128f8 <dcngettext@plt+0x18e0>
   12810:	mov	r2, #5
   12814:	ldr	r1, [pc, #352]	; 1297c <dcngettext@plt+0x1964>
   12818:	mov	r0, #0
   1281c:	bl	10e2c <dcgettext@plt>
   12820:	ldr	r3, [pc, #320]	; 12968 <dcngettext@plt+0x1950>
   12824:	ldr	r2, [pc, #324]	; 12970 <dcngettext@plt+0x1958>
   12828:	mov	r1, r0
   1282c:	mov	r0, #1
   12830:	bl	10f58 <__printf_chk@plt>
   12834:	mov	r2, #5
   12838:	ldr	r1, [pc, #320]	; 12980 <dcngettext@plt+0x1968>
   1283c:	mov	r0, #0
   12840:	bl	10e2c <dcgettext@plt>
   12844:	ldr	r2, [pc, #312]	; 12984 <dcngettext@plt+0x196c>
   12848:	cmp	r5, r6
   1284c:	ldr	r3, [pc, #308]	; 12988 <dcngettext@plt+0x1970>
   12850:	movne	r3, r2
   12854:	mov	r1, r0
   12858:	mov	r2, r5
   1285c:	mov	r0, #1
   12860:	bl	10f58 <__printf_chk@plt>
   12864:	b	12614 <dcngettext@plt+0x15fc>
   12868:	mov	r0, r5
   1286c:	bl	10e2c <dcgettext@plt>
   12870:	ldr	r3, [pc, #248]	; 12970 <dcngettext@plt+0x1958>
   12874:	ldr	r2, [pc, #248]	; 12974 <dcngettext@plt+0x195c>
   12878:	mov	r1, r0
   1287c:	mov	r0, #1
   12880:	bl	10f58 <__printf_chk@plt>
   12884:	mov	r1, r5
   12888:	mov	r0, #5
   1288c:	bl	10fac <setlocale@plt>
   12890:	cmp	r0, #0
   12894:	beq	128ac <dcngettext@plt+0x1894>
   12898:	mov	r2, #3
   1289c:	ldr	r1, [pc, #212]	; 12978 <dcngettext@plt+0x1960>
   128a0:	bl	10ff4 <strncmp@plt>
   128a4:	cmp	r0, #0
   128a8:	bne	128f0 <dcngettext@plt+0x18d8>
   128ac:	mov	r2, #5
   128b0:	ldr	r1, [pc, #196]	; 1297c <dcngettext@plt+0x1964>
   128b4:	mov	r0, #0
   128b8:	bl	10e2c <dcgettext@plt>
   128bc:	ldr	r3, [pc, #164]	; 12968 <dcngettext@plt+0x1950>
   128c0:	ldr	r2, [pc, #168]	; 12970 <dcngettext@plt+0x1958>
   128c4:	mov	r5, r3
   128c8:	mov	r1, r0
   128cc:	mov	r0, #1
   128d0:	bl	10f58 <__printf_chk@plt>
   128d4:	ldr	r1, [pc, #164]	; 12980 <dcngettext@plt+0x1968>
   128d8:	mov	r2, #5
   128dc:	mov	r0, #0
   128e0:	bl	10e2c <dcgettext@plt>
   128e4:	ldr	r3, [pc, #156]	; 12988 <dcngettext@plt+0x1970>
   128e8:	mov	r1, r0
   128ec:	b	12858 <dcngettext@plt+0x1840>
   128f0:	ldr	r6, [pc, #112]	; 12968 <dcngettext@plt+0x1950>
   128f4:	mov	r5, r6
   128f8:	mov	r2, #5
   128fc:	ldr	r1, [pc, #136]	; 1298c <dcngettext@plt+0x1974>
   12900:	mov	r0, #0
   12904:	bl	10e2c <dcgettext@plt>
   12908:	ldr	r2, [pc, #88]	; 12968 <dcngettext@plt+0x1950>
   1290c:	mov	r1, r0
   12910:	mov	r0, #1
   12914:	bl	10f58 <__printf_chk@plt>
   12918:	b	12810 <dcngettext@plt+0x17f8>
   1291c:	andeq	r8, r2, r8, lsl #30
   12920:	andeq	r9, r2, r8, asr r1
   12924:	andeq	r7, r1, r8, lsr #20
   12928:	andeq	r9, r2, r4, lsl #3
   1292c:	andeq	r7, r1, r0, asr sl
   12930:	andeq	r9, r2, r4, ror #2
   12934:	muleq	r1, r8, sl
   12938:	andeq	r7, r1, r0, lsr #21
   1293c:	ldrdeq	r7, [r1], -r8
   12940:	andeq	r7, r1, r8, lsl #22
   12944:	andeq	r7, r1, ip, asr #22
   12948:	andeq	r7, r1, r0, lsl #23
   1294c:			; <UNDEFINED> instruction: 0x00017bb4
   12950:	andeq	r7, r1, r0, lsr ip
   12954:	andeq	r7, r1, r4, ror #27
   12958:	andeq	r7, r1, r4, lsl lr
   1295c:	andeq	r7, r1, ip, asr #28
   12960:	andeq	r7, r1, r8, ror pc
   12964:	strdeq	r7, [r1], -r8
   12968:	andeq	r7, r1, r0, lsr #20
   1296c:	andeq	r7, r1, r4, lsl #31
   12970:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12974:	andeq	r7, r1, r4, asr #31
   12978:	ldrdeq	r7, [r1], -r4
   1297c:	andeq	r8, r1, r0, lsr #32
   12980:	andeq	r8, r1, r0, asr #32
   12984:	andeq	r7, r1, r4, ror pc
   12988:	andeq	r8, r1, r8, lsl #10
   1298c:	ldrdeq	r7, [r1], -r8
   12990:	ldr	r3, [pc, #4]	; 1299c <dcngettext@plt+0x1984>
   12994:	str	r0, [r3]
   12998:	bx	lr
   1299c:	andeq	r9, r2, ip, ror r1
   129a0:	ldr	r3, [pc, #4]	; 129ac <dcngettext@plt+0x1994>
   129a4:	strb	r0, [r3, #4]
   129a8:	bx	lr
   129ac:	andeq	r9, r2, ip, ror r1
   129b0:	ldr	r3, [pc, #180]	; 12a6c <dcngettext@plt+0x1a54>
   129b4:	push	{r4, r5, r6, lr}
   129b8:	sub	sp, sp, #8
   129bc:	ldr	r0, [r3]
   129c0:	bl	173fc <dcngettext@plt+0x63e4>
   129c4:	cmp	r0, #0
   129c8:	beq	129f0 <dcngettext@plt+0x19d8>
   129cc:	bl	10f28 <__errno_location@plt>
   129d0:	ldr	r5, [pc, #152]	; 12a70 <dcngettext@plt+0x1a58>
   129d4:	ldrb	r3, [r5, #4]
   129d8:	cmp	r3, #0
   129dc:	mov	r4, r0
   129e0:	beq	12a0c <dcngettext@plt+0x19f4>
   129e4:	ldr	r3, [r0]
   129e8:	cmp	r3, #32
   129ec:	bne	12a0c <dcngettext@plt+0x19f4>
   129f0:	ldr	r3, [pc, #124]	; 12a74 <dcngettext@plt+0x1a5c>
   129f4:	ldr	r0, [r3]
   129f8:	bl	173fc <dcngettext@plt+0x63e4>
   129fc:	cmp	r0, #0
   12a00:	bne	12a4c <dcngettext@plt+0x1a34>
   12a04:	add	sp, sp, #8
   12a08:	pop	{r4, r5, r6, pc}
   12a0c:	mov	r2, #5
   12a10:	ldr	r1, [pc, #96]	; 12a78 <dcngettext@plt+0x1a60>
   12a14:	mov	r0, #0
   12a18:	bl	10e2c <dcgettext@plt>
   12a1c:	mov	r6, r0
   12a20:	ldr	r0, [r5]
   12a24:	cmp	r0, #0
   12a28:	beq	12a58 <dcngettext@plt+0x1a40>
   12a2c:	ldr	r4, [r4]
   12a30:	bl	166ac <dcngettext@plt+0x5694>
   12a34:	mov	r1, r4
   12a38:	str	r6, [sp]
   12a3c:	ldr	r2, [pc, #56]	; 12a7c <dcngettext@plt+0x1a64>
   12a40:	mov	r3, r0
   12a44:	mov	r0, #0
   12a48:	bl	10ea4 <error@plt>
   12a4c:	ldr	r3, [pc, #44]	; 12a80 <dcngettext@plt+0x1a68>
   12a50:	ldr	r0, [r3]
   12a54:	bl	10df0 <_exit@plt>
   12a58:	mov	r3, r6
   12a5c:	ldr	r1, [r4]
   12a60:	ldr	r2, [pc, #28]	; 12a84 <dcngettext@plt+0x1a6c>
   12a64:	bl	10ea4 <error@plt>
   12a68:	b	12a4c <dcngettext@plt+0x1a34>
   12a6c:	andeq	r9, r2, r4, ror #2
   12a70:	andeq	r9, r2, ip, ror r1
   12a74:	andeq	r9, r2, r8, asr r1
   12a78:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   12a7c:	andeq	r8, r1, r4, ror #11
   12a80:	andeq	r9, r2, r4, lsl #2
   12a84:	andeq	r8, r1, r8, ror #11
   12a88:	ldr	r3, [pc, #56]	; 12ac8 <dcngettext@plt+0x1ab0>
   12a8c:	push	{lr}		; (str lr, [sp, #-4]!)
   12a90:	ldr	ip, [pc, #52]	; 12acc <dcngettext@plt+0x1ab4>
   12a94:	ldr	lr, [pc, #52]	; 12ad0 <dcngettext@plt+0x1ab8>
   12a98:	ldr	r1, [pc, #52]	; 12ad4 <dcngettext@plt+0x1abc>
   12a9c:	ldr	r2, [pc, #52]	; 12ad8 <dcngettext@plt+0x1ac0>
   12aa0:	str	r3, [r0]
   12aa4:	mov	r3, #0
   12aa8:	str	lr, [r0, #4]
   12aac:	str	ip, [r0, #8]
   12ab0:	str	r1, [r0, #12]
   12ab4:	str	r2, [r0, #16]
   12ab8:	str	r3, [r0, #24]
   12abc:	str	r3, [r0, #20]
   12ac0:	str	r3, [r0, #28]
   12ac4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ac8:	strbvs	r2, [r5, -r1, lsl #6]
   12acc:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   12ad0:	svc	0x00cdab89
   12ad4:	eorsne	r5, r2, r6, ror r4
   12ad8:	bicsgt	lr, r2, #240, 2	; 0x3c
   12adc:	ldr	r2, [r0]
   12ae0:	mov	r3, r0
   12ae4:	rev	r2, r2
   12ae8:	str	r2, [r1]
   12aec:	ldr	r2, [r3, #4]
   12af0:	mov	r0, r1
   12af4:	rev	r2, r2
   12af8:	str	r2, [r1, #4]
   12afc:	ldr	r2, [r3, #8]
   12b00:	rev	r2, r2
   12b04:	str	r2, [r1, #8]
   12b08:	ldr	r2, [r3, #12]
   12b0c:	rev	r2, r2
   12b10:	str	r2, [r1, #12]
   12b14:	ldr	r3, [r3, #16]
   12b18:	rev	r3, r3
   12b1c:	str	r3, [r1, #16]
   12b20:	bx	lr
   12b24:	ldr	r3, [r2, #20]
   12b28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b2c:	sub	sp, sp, #172	; 0xac
   12b30:	adds	r3, r3, r1
   12b34:	bic	lr, r1, #3
   12b38:	ldr	r1, [pc, #4088]	; 13b38 <dcngettext@plt+0x2b20>
   12b3c:	mov	r5, r2
   12b40:	str	r2, [sp, #88]	; 0x58
   12b44:	ldr	r2, [r2, #24]
   12b48:	movcs	ip, #1
   12b4c:	movcc	ip, #0
   12b50:	add	r2, r2, ip
   12b54:	ldr	r1, [r1]
   12b58:	mov	ip, r5
   12b5c:	add	r4, r0, lr
   12b60:	cmp	r0, r4
   12b64:	str	r3, [r5, #20]
   12b68:	str	r2, [r5, #24]
   12b6c:	str	r1, [sp, #164]	; 0xa4
   12b70:	ldr	r2, [r5]
   12b74:	ldr	r3, [ip, #12]
   12b78:	ldmib	r5, {r1, r5}
   12b7c:	ldr	ip, [ip, #16]
   12b80:	bcs	14110 <dcngettext@plt+0x30f8>
   12b84:	sub	lr, lr, #1
   12b88:	add	r4, r0, #124	; 0x7c
   12b8c:	bic	lr, lr, #63	; 0x3f
   12b90:	add	lr, lr, r4
   12b94:	add	r0, r0, #60	; 0x3c
   12b98:	str	lr, [sp, #92]	; 0x5c
   12b9c:	str	r0, [sp, #60]	; 0x3c
   12ba0:	str	ip, [sp, #84]	; 0x54
   12ba4:	str	r3, [sp, #80]	; 0x50
   12ba8:	str	r5, [sp, #76]	; 0x4c
   12bac:	str	r1, [sp, #72]	; 0x48
   12bb0:	str	r2, [sp, #68]	; 0x44
   12bb4:	ldr	r6, [sp, #60]	; 0x3c
   12bb8:	add	r4, sp, #100	; 0x64
   12bbc:	sub	lr, r6, #64	; 0x40
   12bc0:	ldr	r0, [lr, #4]!
   12bc4:	rev	r0, r0
   12bc8:	cmp	r6, lr
   12bcc:	str	r0, [r4], #4
   12bd0:	bne	12bc0 <dcngettext@plt+0x1ba8>
   12bd4:	ldr	r9, [sp, #100]	; 0x64
   12bd8:	ldr	r0, [pc, #3932]	; 13b3c <dcngettext@plt+0x2b24>
   12bdc:	ror	r6, r1, #2
   12be0:	add	r0, r9, r0
   12be4:	add	ip, r0, ip
   12be8:	add	r0, ip, r2, ror #27
   12bec:	ldr	ip, [sp, #104]	; 0x68
   12bf0:	eor	lr, r5, r3
   12bf4:	add	ip, ip, #1509949440	; 0x5a000000
   12bf8:	add	ip, ip, #8519680	; 0x820000
   12bfc:	and	lr, lr, r1
   12c00:	add	ip, ip, #30976	; 0x7900
   12c04:	eor	r1, r6, r5
   12c08:	and	r1, r1, r2
   12c0c:	add	ip, ip, #153	; 0x99
   12c10:	add	ip, ip, r3
   12c14:	eor	lr, lr, r3
   12c18:	eor	r1, r1, r5
   12c1c:	ldr	r8, [sp, #108]	; 0x6c
   12c20:	add	lr, lr, r0
   12c24:	add	r1, r1, ip
   12c28:	ror	r0, r2, #2
   12c2c:	ldr	ip, [pc, #3848]	; 13b3c <dcngettext@plt+0x2b24>
   12c30:	eor	r3, r6, r0
   12c34:	add	ip, r8, ip
   12c38:	and	r3, r3, lr
   12c3c:	add	r1, r1, lr, ror #27
   12c40:	add	r5, ip, r5
   12c44:	ror	lr, lr, #2
   12c48:	eor	r3, r3, r6
   12c4c:	ldr	ip, [sp, #112]	; 0x70
   12c50:	eor	r2, r0, lr
   12c54:	add	r3, r3, r5
   12c58:	ror	r4, r1, #2
   12c5c:	add	r3, r3, r1, ror #27
   12c60:	and	r2, r2, r1
   12c64:	add	ip, ip, #1509949440	; 0x5a000000
   12c68:	ldr	r1, [sp, #116]	; 0x74
   12c6c:	add	ip, ip, #8519680	; 0x820000
   12c70:	add	ip, ip, #30976	; 0x7900
   12c74:	add	r1, r1, #1509949440	; 0x5a000000
   12c78:	add	ip, ip, #153	; 0x99
   12c7c:	add	r1, r1, #8519680	; 0x820000
   12c80:	add	r6, ip, r6
   12c84:	add	r1, r1, #30976	; 0x7900
   12c88:	eor	ip, r2, r0
   12c8c:	eor	r2, lr, r4
   12c90:	ldr	sl, [sp, #120]	; 0x78
   12c94:	add	ip, ip, r6
   12c98:	add	r1, r1, #153	; 0x99
   12c9c:	and	r2, r2, r3
   12ca0:	ldr	r5, [pc, #3732]	; 13b3c <dcngettext@plt+0x2b24>
   12ca4:	add	ip, ip, r3, ror #27
   12ca8:	eor	r2, r2, lr
   12cac:	ror	r3, r3, #2
   12cb0:	add	r0, r1, r0
   12cb4:	add	r0, r2, r0
   12cb8:	add	r5, sl, r5
   12cbc:	eor	r2, r4, r3
   12cc0:	add	r1, r0, ip, ror #27
   12cc4:	ldr	fp, [sp, #124]	; 0x7c
   12cc8:	add	lr, r5, lr
   12ccc:	and	r2, r2, ip
   12cd0:	ldr	r5, [pc, #3684]	; 13b3c <dcngettext@plt+0x2b24>
   12cd4:	ror	ip, ip, #2
   12cd8:	eor	r0, r3, ip
   12cdc:	eor	r2, r2, r4
   12ce0:	add	r5, fp, r5
   12ce4:	add	r2, r2, lr
   12ce8:	and	r0, r0, r1
   12cec:	ror	lr, r1, #2
   12cf0:	add	r2, r2, r1, ror #27
   12cf4:	add	r4, r5, r4
   12cf8:	eor	r1, r0, r3
   12cfc:	add	r1, r1, r4
   12d00:	ldr	r4, [sp, #128]	; 0x80
   12d04:	eor	r0, ip, lr
   12d08:	add	r4, r4, #1509949440	; 0x5a000000
   12d0c:	add	r4, r4, #8519680	; 0x820000
   12d10:	add	r4, r4, #30976	; 0x7900
   12d14:	add	r4, r4, #153	; 0x99
   12d18:	add	r3, r4, r3
   12d1c:	ldr	r4, [sp, #132]	; 0x84
   12d20:	and	r0, r0, r2
   12d24:	add	r4, r4, #1509949440	; 0x5a000000
   12d28:	add	r1, r1, r2, ror #27
   12d2c:	eor	r0, r0, ip
   12d30:	ror	r2, r2, #2
   12d34:	add	r4, r4, #8519680	; 0x820000
   12d38:	add	r3, r0, r3
   12d3c:	add	r4, r4, #30976	; 0x7900
   12d40:	eor	r0, lr, r2
   12d44:	and	r0, r0, r1
   12d48:	add	r4, r4, #153	; 0x99
   12d4c:	add	r4, r4, ip
   12d50:	eor	r0, r0, lr
   12d54:	add	r0, r0, r4
   12d58:	ldr	r4, [sp, #136]	; 0x88
   12d5c:	add	r3, r3, r1, ror #27
   12d60:	add	r4, r4, #1509949440	; 0x5a000000
   12d64:	ror	r1, r1, #2
   12d68:	add	r4, r4, #8519680	; 0x820000
   12d6c:	eor	ip, r2, r1
   12d70:	add	r4, r4, #30976	; 0x7900
   12d74:	and	ip, ip, r3
   12d78:	add	r4, r4, #153	; 0x99
   12d7c:	add	r4, r4, lr
   12d80:	eor	ip, ip, r2
   12d84:	ror	r5, r3, #2
   12d88:	add	r0, r0, r3, ror #27
   12d8c:	add	ip, ip, r4
   12d90:	ldr	r3, [sp, #140]	; 0x8c
   12d94:	ldr	r4, [pc, #3488]	; 13b3c <dcngettext@plt+0x2b24>
   12d98:	eor	lr, r1, r5
   12d9c:	add	r4, r3, r4
   12da0:	and	lr, lr, r0
   12da4:	add	ip, ip, r0, ror #27
   12da8:	eor	lr, lr, r1
   12dac:	add	r2, r4, r2
   12db0:	add	r2, lr, r2
   12db4:	add	lr, r2, ip, ror #27
   12db8:	ror	r0, r0, #2
   12dbc:	ldr	r3, [sp, #144]	; 0x90
   12dc0:	ldr	r2, [pc, #3444]	; 13b3c <dcngettext@plt+0x2b24>
   12dc4:	eor	r4, r5, r0
   12dc8:	add	r2, r3, r2
   12dcc:	and	r4, r4, ip
   12dd0:	ror	r3, ip, #2
   12dd4:	add	r1, r2, r1
   12dd8:	eor	ip, r0, r3
   12ddc:	ldr	r2, [sp, #148]	; 0x94
   12de0:	eor	r4, r4, r5
   12de4:	ldr	r6, [pc, #3408]	; 13b3c <dcngettext@plt+0x2b24>
   12de8:	add	r4, r4, r1
   12dec:	and	ip, ip, lr
   12df0:	ror	r1, lr, #2
   12df4:	add	r4, r4, lr, ror #27
   12df8:	add	r6, r2, r6
   12dfc:	eor	lr, ip, r0
   12e00:	ldr	r7, [pc, #3380]	; 13b3c <dcngettext@plt+0x2b24>
   12e04:	ldr	ip, [sp, #152]	; 0x98
   12e08:	add	r5, r6, r5
   12e0c:	eor	r2, r3, r1
   12e10:	and	r2, r2, r4
   12e14:	add	lr, lr, r5
   12e18:	add	r7, ip, r7
   12e1c:	ldr	ip, [sp, #132]	; 0x84
   12e20:	add	lr, lr, r4, ror #27
   12e24:	add	r7, r7, r0
   12e28:	eor	r0, r2, r3
   12e2c:	ror	r2, r4, #2
   12e30:	eor	r4, r9, r8
   12e34:	eor	r4, r4, ip
   12e38:	ldr	ip, [sp, #156]	; 0x9c
   12e3c:	add	r0, r0, r7
   12e40:	add	ip, ip, #1509949440	; 0x5a000000
   12e44:	add	ip, ip, #8519680	; 0x820000
   12e48:	eor	r7, r1, r2
   12e4c:	add	ip, ip, #30976	; 0x7900
   12e50:	and	r7, r7, lr
   12e54:	add	ip, ip, #153	; 0x99
   12e58:	ldr	r5, [sp, #152]	; 0x98
   12e5c:	add	ip, ip, r3
   12e60:	eor	r7, r7, r1
   12e64:	add	r0, r0, lr, ror #27
   12e68:	add	r7, r7, ip
   12e6c:	ror	lr, lr, #2
   12e70:	ldr	ip, [sp, #160]	; 0xa0
   12e74:	eor	r4, r4, r5
   12e78:	eor	r5, r2, lr
   12e7c:	ror	r9, r0, #2
   12e80:	add	r7, r7, r0, ror #27
   12e84:	and	r5, r5, r0
   12e88:	add	ip, ip, #1509949440	; 0x5a000000
   12e8c:	ldr	r0, [sp, #116]	; 0x74
   12e90:	ror	r4, r4, #31
   12e94:	add	ip, ip, #8519680	; 0x820000
   12e98:	eor	r0, r8, r0
   12e9c:	add	ip, ip, #30976	; 0x7900
   12ea0:	mov	r8, r4
   12ea4:	ldr	r4, [pc, #3216]	; 13b3c <dcngettext@plt+0x2b24>
   12ea8:	ldr	r6, [sp, #112]	; 0x70
   12eac:	ldr	r3, [sp, #104]	; 0x68
   12eb0:	add	ip, ip, #153	; 0x99
   12eb4:	add	r1, ip, r1
   12eb8:	eor	r5, r5, r2
   12ebc:	add	r4, r8, r4
   12ec0:	add	r4, r4, r2
   12ec4:	eor	r3, r3, r6
   12ec8:	ldr	r2, [sp, #112]	; 0x70
   12ecc:	ldr	r6, [sp, #136]	; 0x88
   12ed0:	add	r5, r5, r1
   12ed4:	ldr	r1, [sp, #140]	; 0x8c
   12ed8:	eor	r3, r3, r6
   12edc:	eor	r0, r0, r1
   12ee0:	ldr	r6, [sp, #156]	; 0x9c
   12ee4:	eor	r1, r2, sl
   12ee8:	ldr	r2, [sp, #160]	; 0xa0
   12eec:	eor	ip, lr, r9
   12ef0:	eor	r3, r3, r6
   12ef4:	and	ip, ip, r7
   12ef8:	eor	r0, r0, r2
   12efc:	ldr	r2, [sp, #144]	; 0x90
   12f00:	add	r5, r5, r7, ror #27
   12f04:	eor	ip, ip, lr
   12f08:	ror	r7, r7, #2
   12f0c:	ldr	r6, [pc, #3112]	; 13b3c <dcngettext@plt+0x2b24>
   12f10:	ror	r3, r3, #31
   12f14:	add	ip, ip, r4
   12f18:	eor	r1, r1, r2
   12f1c:	eor	r4, r9, r7
   12f20:	ldr	r2, [sp, #116]	; 0x74
   12f24:	ror	r0, r0, #31
   12f28:	add	r6, r3, r6
   12f2c:	str	r0, [sp, #4]
   12f30:	and	r4, r4, r5
   12f34:	ldr	r0, [sp, #148]	; 0x94
   12f38:	add	lr, r6, lr
   12f3c:	eor	r2, r2, fp
   12f40:	eor	r4, r4, r9
   12f44:	eor	r2, r2, r0
   12f48:	add	r4, r4, lr
   12f4c:	ldr	r0, [sp, #4]
   12f50:	ldr	lr, [pc, #3044]	; 13b3c <dcngettext@plt+0x2b24>
   12f54:	str	r3, [sp, #12]
   12f58:	add	lr, r0, lr
   12f5c:	ldr	r0, [sp, #128]	; 0x80
   12f60:	add	ip, ip, r5, ror #27
   12f64:	eor	sl, sl, r0
   12f68:	ldr	r0, [sp, #12]
   12f6c:	ror	r5, r5, #2
   12f70:	mov	r3, r8
   12f74:	eor	r1, r1, r8
   12f78:	eor	r2, r2, r0
   12f7c:	eor	r8, r7, r5
   12f80:	ldr	r0, [sp, #152]	; 0x98
   12f84:	and	r8, r8, ip
   12f88:	eor	r8, r8, r7
   12f8c:	add	lr, lr, r9
   12f90:	eor	sl, sl, r0
   12f94:	ldr	r0, [sp, #132]	; 0x84
   12f98:	ror	r6, ip, #2
   12f9c:	add	lr, r8, lr
   12fa0:	ldr	r8, [pc, #2964]	; 13b3c <dcngettext@plt+0x2b24>
   12fa4:	ror	r1, r1, #31
   12fa8:	add	r4, r4, ip, ror #27
   12fac:	eor	fp, fp, r0
   12fb0:	eor	ip, r5, r6
   12fb4:	ldr	r0, [sp, #4]
   12fb8:	add	r8, r1, r8
   12fbc:	and	ip, ip, r4
   12fc0:	add	r7, r8, r7
   12fc4:	eor	sl, sl, r0
   12fc8:	eor	ip, ip, r5
   12fcc:	ldr	r0, [sp, #156]	; 0x9c
   12fd0:	add	ip, ip, r7
   12fd4:	ldr	r7, [pc, #2916]	; 13b40 <dcngettext@plt+0x2b28>
   12fd8:	ror	r2, r2, #31
   12fdc:	eor	fp, fp, r0
   12fe0:	ldr	r9, [sp, #136]	; 0x88
   12fe4:	ldr	r0, [sp, #128]	; 0x80
   12fe8:	add	r7, r2, r7
   12fec:	add	lr, lr, r4, ror #27
   12ff0:	add	r5, r7, r5
   12ff4:	ror	r4, r4, #2
   12ff8:	eor	r9, r0, r9
   12ffc:	ldr	r7, [pc, #2876]	; 13b40 <dcngettext@plt+0x2b28>
   13000:	ldr	r0, [sp, #160]	; 0xa0
   13004:	eor	r8, r6, r4
   13008:	ror	sl, sl, #31
   1300c:	add	ip, ip, lr, ror #27
   13010:	str	sl, [sp, #24]
   13014:	eor	fp, fp, r1
   13018:	eor	r8, r8, lr
   1301c:	eor	r9, r9, r0
   13020:	ror	lr, lr, #2
   13024:	ldr	r0, [sp, #132]	; 0x84
   13028:	add	r7, sl, r7
   1302c:	ldr	sl, [sp, #140]	; 0x8c
   13030:	add	r8, r8, r5
   13034:	add	r7, r7, r6
   13038:	eor	r5, r4, lr
   1303c:	ldr	r6, [pc, #2812]	; 13b40 <dcngettext@plt+0x2b28>
   13040:	add	r8, r8, ip, ror #27
   13044:	ror	fp, fp, #31
   13048:	eor	r5, r5, ip
   1304c:	eor	sl, r0, sl
   13050:	ror	ip, ip, #2
   13054:	add	r6, fp, r6
   13058:	ldr	r0, [sp, #136]	; 0x88
   1305c:	str	r3, [sp, #36]	; 0x24
   13060:	eor	sl, sl, r3
   13064:	add	r7, r5, r7
   13068:	mov	r3, fp
   1306c:	eor	r5, lr, ip
   13070:	ldr	fp, [sp, #144]	; 0x90
   13074:	add	r4, r6, r4
   13078:	eor	r6, r5, r8
   1307c:	ldr	r5, [sp, #12]
   13080:	eor	r9, r9, r2
   13084:	eor	fp, r0, fp
   13088:	eor	fp, fp, r5
   1308c:	ldr	r0, [sp, #24]
   13090:	ldr	r5, [pc, #2728]	; 13b40 <dcngettext@plt+0x2b28>
   13094:	ror	r9, r9, #31
   13098:	eor	sl, sl, r0
   1309c:	str	r9, [sp, #16]
   130a0:	add	r5, r9, r5
   130a4:	ldr	r0, [sp, #140]	; 0x8c
   130a8:	ldr	r9, [sp, #148]	; 0x94
   130ac:	str	r3, [sp, #44]	; 0x2c
   130b0:	eor	fp, fp, r3
   130b4:	ldr	r3, [sp, #4]
   130b8:	eor	r9, r0, r9
   130bc:	add	r7, r7, r8, ror #27
   130c0:	ror	r0, sl, #31
   130c4:	ror	r8, r8, #2
   130c8:	eor	r9, r9, r3
   130cc:	ldr	sl, [sp, #144]	; 0x90
   130d0:	ldr	r3, [sp, #152]	; 0x98
   130d4:	add	r6, r6, r4
   130d8:	ror	fp, fp, #31
   130dc:	eor	r4, ip, r8
   130e0:	add	lr, r5, lr
   130e4:	eor	sl, sl, r3
   130e8:	eor	r5, r4, r7
   130ec:	mov	r3, fp
   130f0:	ldr	fp, [sp, #16]
   130f4:	add	r5, r5, lr
   130f8:	ldr	lr, [pc, #2624]	; 13b40 <dcngettext@plt+0x2b28>
   130fc:	add	r6, r6, r7, ror #27
   13100:	eor	r9, r9, fp
   13104:	ror	r7, r7, #2
   13108:	ldr	fp, [pc, #2608]	; 13b40 <dcngettext@plt+0x2b28>
   1310c:	eor	r4, r8, r7
   13110:	add	lr, r0, lr
   13114:	add	ip, lr, ip
   13118:	str	r3, [sp, #28]
   1311c:	eor	lr, r4, r6
   13120:	add	fp, r3, fp
   13124:	eor	sl, sl, r1
   13128:	ldr	r3, [sp, #148]	; 0x94
   1312c:	ldr	r4, [sp, #156]	; 0x9c
   13130:	eor	sl, sl, r0
   13134:	ror	r9, r9, #31
   13138:	add	r8, fp, r8
   1313c:	eor	r4, r3, r4
   13140:	ldr	fp, [sp, #28]
   13144:	str	r9, [sp, #20]
   13148:	add	r9, r9, #1845493760	; 0x6e000000
   1314c:	eor	r4, r4, r2
   13150:	ror	sl, sl, #31
   13154:	add	r9, r9, #14221312	; 0xd90000
   13158:	add	r5, r5, r6, ror #27
   1315c:	ldr	r3, [sp, #152]	; 0x98
   13160:	ror	r6, r6, #2
   13164:	str	r0, [sp, #48]	; 0x30
   13168:	eor	r4, r4, fp
   1316c:	add	r9, r9, #60160	; 0xeb00
   13170:	mov	fp, sl
   13174:	ldr	sl, [sp, #160]	; 0xa0
   13178:	add	lr, lr, ip
   1317c:	ldr	r0, [sp, #24]
   13180:	eor	ip, r7, r6
   13184:	add	r9, r9, #161	; 0xa1
   13188:	add	lr, lr, r5, ror #27
   1318c:	add	r7, r9, r7
   13190:	eor	ip, ip, r5
   13194:	ldr	r9, [sp, #20]
   13198:	ror	r5, r5, #2
   1319c:	eor	sl, r3, sl
   131a0:	ror	r4, r4, #31
   131a4:	str	r4, [sp, #8]
   131a8:	ldr	r3, [sp, #156]	; 0x9c
   131ac:	ldr	r4, [sp, #36]	; 0x24
   131b0:	add	ip, ip, r8
   131b4:	eor	sl, sl, r0
   131b8:	eor	r8, r6, r5
   131bc:	mov	r0, fp
   131c0:	ldr	fp, [pc, #2424]	; 13b40 <dcngettext@plt+0x2b28>
   131c4:	add	ip, ip, lr, ror #27
   131c8:	eor	r8, r8, lr
   131cc:	eor	sl, sl, r9
   131d0:	ror	lr, lr, #2
   131d4:	ldr	r9, [sp, #44]	; 0x2c
   131d8:	add	fp, r0, fp
   131dc:	add	r8, r8, r7
   131e0:	eor	r4, r3, r4
   131e4:	eor	r7, r5, lr
   131e8:	add	r6, fp, r6
   131ec:	eor	r7, r7, ip
   131f0:	eor	r4, r4, r9
   131f4:	ror	sl, sl, #31
   131f8:	str	r0, [sp, #32]
   131fc:	ldr	r3, [sp, #160]	; 0xa0
   13200:	add	r7, r7, r6
   13204:	eor	r4, r4, r0
   13208:	ldr	r6, [sp, #8]
   1320c:	mov	r0, sl
   13210:	ldr	r9, [pc, #2344]	; 13b40 <dcngettext@plt+0x2b28>
   13214:	ldr	sl, [sp, #12]
   13218:	ldr	fp, [sp, #16]
   1321c:	add	r9, r6, r9
   13220:	eor	sl, r3, sl
   13224:	ror	r4, r4, #31
   13228:	add	r5, r9, r5
   1322c:	eor	sl, sl, fp
   13230:	mov	r9, r4
   13234:	ldr	fp, [pc, #2308]	; 13b40 <dcngettext@plt+0x2b28>
   13238:	ldr	r4, [sp, #8]
   1323c:	mov	r3, r0
   13240:	add	fp, r0, fp
   13244:	eor	sl, sl, r4
   13248:	ldr	r0, [sp, #4]
   1324c:	ldr	r4, [sp, #36]	; 0x24
   13250:	add	r8, r8, ip, ror #27
   13254:	eor	r4, r4, r0
   13258:	ldr	r0, [sp, #48]	; 0x30
   1325c:	ror	ip, ip, #2
   13260:	eor	r6, lr, ip
   13264:	eor	r4, r4, r0
   13268:	add	r7, r7, r8, ror #27
   1326c:	eor	r6, r6, r8
   13270:	ror	sl, sl, #31
   13274:	ror	r8, r8, #2
   13278:	str	r3, [sp, #36]	; 0x24
   1327c:	eor	r4, r4, r3
   13280:	ldr	r3, [sp, #12]
   13284:	mov	r0, sl
   13288:	add	lr, fp, lr
   1328c:	ldr	sl, [sp, #28]
   13290:	mov	fp, r9
   13294:	add	r6, r6, r5
   13298:	ldr	r9, [pc, #2208]	; 13b40 <dcngettext@plt+0x2b28>
   1329c:	eor	r5, ip, r8
   132a0:	add	r6, r6, r7, ror #27
   132a4:	eor	r5, r5, r7
   132a8:	eor	r3, r3, r1
   132ac:	ror	r7, r7, #2
   132b0:	add	r9, fp, r9
   132b4:	add	r5, r5, lr
   132b8:	eor	r3, r3, sl
   132bc:	eor	lr, r8, r7
   132c0:	ldr	sl, [pc, #2168]	; 13b40 <dcngettext@plt+0x2b28>
   132c4:	add	r5, r5, r6, ror #27
   132c8:	add	ip, r9, ip
   132cc:	eor	lr, lr, r6
   132d0:	eor	r3, r3, fp
   132d4:	ror	r6, r6, #2
   132d8:	str	r0, [sp, #40]	; 0x28
   132dc:	add	sl, r0, sl
   132e0:	add	lr, lr, ip
   132e4:	ror	r4, r4, #31
   132e8:	eor	ip, r7, r6
   132ec:	ldr	r0, [sp, #4]
   132f0:	mov	r9, r4
   132f4:	eor	ip, ip, r5
   132f8:	ldr	r4, [sp, #20]
   132fc:	add	r8, sl, r8
   13300:	ror	r3, r3, #31
   13304:	eor	r0, r0, r2
   13308:	add	r8, ip, r8
   1330c:	mov	ip, r3
   13310:	ldr	r3, [sp, #40]	; 0x28
   13314:	ldr	sl, [sp, #24]
   13318:	eor	r0, r0, r4
   1331c:	eor	r0, r0, r3
   13320:	ldr	r3, [sp, #32]
   13324:	add	lr, lr, r5, ror #27
   13328:	str	ip, [sp, #12]
   1332c:	ror	r5, r5, #2
   13330:	str	fp, [sp, #56]	; 0x38
   13334:	eor	r1, r1, sl
   13338:	mov	fp, r9
   1333c:	add	ip, ip, #1845493760	; 0x6e000000
   13340:	ldr	r9, [pc, #2040]	; 13b40 <dcngettext@plt+0x2b28>
   13344:	eor	r4, r6, r5
   13348:	eor	r1, r1, r3
   1334c:	add	ip, ip, #14221312	; 0xd90000
   13350:	add	r8, r8, lr, ror #27
   13354:	add	r9, fp, r9
   13358:	eor	r4, r4, lr
   1335c:	eor	r1, r1, fp
   13360:	ror	lr, lr, #2
   13364:	add	ip, ip, #60160	; 0xeb00
   13368:	eor	r3, r5, lr
   1336c:	add	r7, r9, r7
   13370:	add	ip, ip, #161	; 0xa1
   13374:	ldr	r9, [sp, #44]	; 0x2c
   13378:	eor	r3, r3, r8
   1337c:	add	r7, r4, r7
   13380:	add	r6, ip, r6
   13384:	ror	r4, r0, #31
   13388:	ldr	ip, [sp, #8]
   1338c:	ror	r1, r1, #31
   13390:	eor	r2, r2, r9
   13394:	add	r6, r3, r6
   13398:	str	r4, [sp, #44]	; 0x2c
   1339c:	mov	r3, r1
   133a0:	add	r4, r4, #1845493760	; 0x6e000000
   133a4:	ldr	r1, [sp, #12]
   133a8:	eor	r2, r2, ip
   133ac:	add	r4, r4, #14221312	; 0xd90000
   133b0:	add	r7, r7, r8, ror #27
   133b4:	eor	r2, r2, r1
   133b8:	ror	r8, r8, #2
   133bc:	str	fp, [sp, #64]	; 0x40
   133c0:	add	r4, r4, #60160	; 0xeb00
   133c4:	ldr	fp, [sp, #16]
   133c8:	eor	r0, lr, r8
   133cc:	add	r4, r4, #161	; 0xa1
   133d0:	eor	r1, sl, fp
   133d4:	eor	r0, r0, r7
   133d8:	ldr	sl, [sp, #36]	; 0x24
   133dc:	add	r5, r4, r5
   133e0:	ror	r2, r2, #31
   133e4:	add	r5, r0, r5
   133e8:	mov	r0, r2
   133ec:	ldr	r2, [sp, #44]	; 0x2c
   133f0:	ldr	r4, [sp, #48]	; 0x30
   133f4:	eor	r1, r1, sl
   133f8:	ldr	ip, [pc, #1856]	; 13b40 <dcngettext@plt+0x2b28>
   133fc:	add	r6, r6, r7, ror #27
   13400:	str	r0, [sp, #24]
   13404:	ror	r7, r7, #2
   13408:	eor	r1, r1, r2
   1340c:	add	r0, r0, #1845493760	; 0x6e000000
   13410:	ldr	r2, [sp, #56]	; 0x38
   13414:	mov	sl, r3
   13418:	add	ip, r3, ip
   1341c:	eor	fp, r9, r4
   13420:	eor	r3, r8, r7
   13424:	add	r0, r0, #14221312	; 0xd90000
   13428:	add	r5, r5, r6, ror #27
   1342c:	eor	r3, r3, r6
   13430:	ldr	r9, [sp, #16]
   13434:	ror	r6, r6, #2
   13438:	add	lr, ip, lr
   1343c:	eor	fp, fp, r2
   13440:	ldr	ip, [sp, #28]
   13444:	ror	r1, r1, #31
   13448:	add	r0, r0, #60160	; 0xeb00
   1344c:	eor	r2, r7, r6
   13450:	eor	fp, fp, sl
   13454:	add	lr, r3, lr
   13458:	add	r0, r0, #161	; 0xa1
   1345c:	mov	r3, r1
   13460:	ldr	r1, [sp, #40]	; 0x28
   13464:	eor	r2, r2, r5
   13468:	eor	r9, r9, ip
   1346c:	add	r8, r0, r8
   13470:	ldr	r0, [sp, #24]
   13474:	eor	r9, r9, r1
   13478:	add	r8, r2, r8
   1347c:	ror	r2, fp, #31
   13480:	mov	fp, r2
   13484:	eor	r9, r9, r0
   13488:	ldr	r2, [sp, #20]
   1348c:	ldr	r1, [pc, #1708]	; 13b40 <dcngettext@plt+0x2b28>
   13490:	add	lr, lr, r5, ror #27
   13494:	ror	r5, r5, #2
   13498:	str	sl, [sp, #48]	; 0x30
   1349c:	str	r3, [sp, #16]
   134a0:	add	r1, r3, r1
   134a4:	eor	sl, r4, r2
   134a8:	eor	r3, r6, r5
   134ac:	ror	r4, r9, #31
   134b0:	eor	r3, r3, lr
   134b4:	add	r7, r1, r7
   134b8:	mov	r1, r4
   134bc:	ldr	r4, [sp, #64]	; 0x40
   134c0:	add	r7, r3, r7
   134c4:	ldr	r0, [pc, #1652]	; 13b40 <dcngettext@plt+0x2b28>
   134c8:	ldr	r3, [sp, #16]
   134cc:	add	r8, r8, lr, ror #27
   134d0:	eor	sl, sl, r4
   134d4:	ror	lr, lr, #2
   134d8:	add	r0, fp, r0
   134dc:	eor	r2, r5, lr
   134e0:	eor	sl, sl, r3
   134e4:	ldr	r3, [sp, #32]
   134e8:	eor	r2, r2, r8
   134ec:	add	r6, r0, r6
   134f0:	str	fp, [sp, #28]
   134f4:	ldr	r0, [sp, #12]
   134f8:	eor	fp, ip, r3
   134fc:	add	r6, r2, r6
   13500:	ror	ip, sl, #31
   13504:	mov	r2, r1
   13508:	ldr	r1, [pc, #1584]	; 13b40 <dcngettext@plt+0x2b28>
   1350c:	add	r7, r7, r8, ror #27
   13510:	mov	sl, ip
   13514:	ror	r8, r8, #2
   13518:	ldr	ip, [sp, #28]
   1351c:	add	r1, r2, r1
   13520:	eor	r3, lr, r8
   13524:	eor	fp, fp, r0
   13528:	add	r6, r6, r7, ror #27
   1352c:	eor	r3, r3, r7
   13530:	eor	fp, fp, ip
   13534:	add	r5, r1, r5
   13538:	add	r5, r3, r5
   1353c:	add	r1, r5, r6, ror #27
   13540:	ldr	r9, [sp, #20]
   13544:	ldr	ip, [sp, #8]
   13548:	ror	r5, fp, #31
   1354c:	mov	fp, r5
   13550:	ldr	r3, [pc, #1516]	; 13b44 <dcngettext@plt+0x2b2c>
   13554:	ldr	r5, [sp, #44]	; 0x2c
   13558:	ror	r7, r7, #2
   1355c:	eor	r4, r9, ip
   13560:	add	r3, sl, r3
   13564:	orr	r0, r6, r7
   13568:	eor	r4, r4, r5
   1356c:	ror	ip, r6, #2
   13570:	ldr	r9, [sp, #36]	; 0x24
   13574:	and	r0, r0, r8
   13578:	eor	r4, r4, r2
   1357c:	add	lr, r3, lr
   13580:	and	r6, r6, r7
   13584:	str	r2, [sp, #52]	; 0x34
   13588:	ldr	r2, [sp, #32]
   1358c:	orr	r3, r1, ip
   13590:	orr	r6, r0, r6
   13594:	add	lr, lr, r1, ror #27
   13598:	add	lr, r6, lr
   1359c:	and	r0, r1, ip
   135a0:	str	sl, [sp, #20]
   135a4:	ldr	r5, [sp, #48]	; 0x30
   135a8:	eor	sl, r2, r9
   135ac:	ror	r6, r4, #31
   135b0:	add	r2, fp, #-1895825408	; 0x8f000000
   135b4:	and	r3, r3, r7
   135b8:	orr	r3, r3, r0
   135bc:	add	r2, r2, #1802240	; 0x1b8000
   135c0:	mov	r0, r6
   135c4:	ldr	r6, [sp, #20]
   135c8:	eor	sl, sl, r5
   135cc:	add	r2, r2, #15552	; 0x3cc0
   135d0:	add	r2, r2, #28
   135d4:	eor	sl, sl, r6
   135d8:	add	r8, r2, r8
   135dc:	add	r8, r3, r8
   135e0:	str	fp, [sp, #32]
   135e4:	ldr	r3, [sp, #8]
   135e8:	ldr	fp, [sp, #56]	; 0x38
   135ec:	ror	sl, sl, #31
   135f0:	str	r0, [sp, #36]	; 0x24
   135f4:	str	sl, [sp, #4]
   135f8:	ldr	r6, [sp, #24]
   135fc:	add	r2, r8, lr, ror #27
   13600:	eor	r4, r3, fp
   13604:	ldr	r8, [sp, #32]
   13608:	ldr	r3, [pc, #1332]	; 13b44 <dcngettext@plt+0x2b2c>
   1360c:	ror	r1, r1, #2
   13610:	eor	r4, r4, r6
   13614:	add	r3, r0, r3
   13618:	eor	r4, r4, r8
   1361c:	orr	r0, lr, r1
   13620:	ldr	r8, [sp, #40]	; 0x28
   13624:	ror	r5, lr, #2
   13628:	and	r0, r0, ip
   1362c:	and	lr, lr, r1
   13630:	eor	sl, r9, r8
   13634:	orr	lr, r0, lr
   13638:	ldr	r9, [sp, #4]
   1363c:	add	r7, r3, r7
   13640:	ldr	r0, [pc, #1276]	; 13b44 <dcngettext@plt+0x2b2c>
   13644:	orr	r3, r2, r5
   13648:	add	r7, r7, r2, ror #27
   1364c:	add	r7, lr, r7
   13650:	and	r6, r2, r5
   13654:	add	r0, r9, r0
   13658:	ror	lr, r4, #31
   1365c:	ldr	r9, [sp, #16]
   13660:	and	r3, r3, r1
   13664:	orr	r3, r3, r6
   13668:	mov	r6, lr
   1366c:	ldr	lr, [sp, #36]	; 0x24
   13670:	eor	sl, sl, r9
   13674:	add	ip, r0, ip
   13678:	eor	sl, sl, lr
   1367c:	ror	r2, r2, #2
   13680:	add	r0, r3, ip
   13684:	ldr	r3, [pc, #1208]	; 13b44 <dcngettext@plt+0x2b2c>
   13688:	orr	ip, r7, r2
   1368c:	ror	lr, sl, #31
   13690:	add	r0, r0, r7, ror #27
   13694:	str	lr, [sp, #8]
   13698:	str	r6, [sp, #40]	; 0x28
   1369c:	add	r3, r6, r3
   136a0:	and	ip, ip, r5
   136a4:	ror	r6, r7, #2
   136a8:	and	r7, r7, r2
   136ac:	ldr	r9, [sp, #64]	; 0x40
   136b0:	orr	r7, ip, r7
   136b4:	ldr	ip, [sp, #8]
   136b8:	ldr	lr, [sp, #28]
   136bc:	eor	r4, fp, r9
   136c0:	add	ip, ip, #-1895825408	; 0x8f000000
   136c4:	ldr	fp, [sp, #4]
   136c8:	eor	r4, r4, lr
   136cc:	add	ip, ip, #1802240	; 0x1b8000
   136d0:	ldr	lr, [sp, #12]
   136d4:	add	r1, r3, r1
   136d8:	add	ip, ip, #15552	; 0x3cc0
   136dc:	orr	r3, r0, r6
   136e0:	eor	sl, r8, lr
   136e4:	eor	r4, r4, fp
   136e8:	and	lr, r0, r6
   136ec:	add	ip, ip, #28
   136f0:	and	r3, r3, r2
   136f4:	add	r5, ip, r5
   136f8:	orr	r3, r3, lr
   136fc:	ldr	r8, [sp, #52]	; 0x34
   13700:	add	lr, r3, r5
   13704:	ror	r4, r4, #31
   13708:	ldr	r3, [pc, #1076]	; 13b44 <dcngettext@plt+0x2b2c>
   1370c:	mov	ip, r4
   13710:	ldr	r4, [sp, #40]	; 0x28
   13714:	add	r3, ip, r3
   13718:	add	r1, r1, r0, ror #27
   1371c:	eor	sl, sl, r8
   13720:	ror	fp, r0, #2
   13724:	add	r1, r7, r1
   13728:	ldr	r0, [sp, #48]	; 0x30
   1372c:	ldr	r7, [sp, #44]	; 0x2c
   13730:	eor	sl, sl, r4
   13734:	add	r2, r3, r2
   13738:	ldr	r3, [sp, #12]
   1373c:	add	lr, lr, r1, ror #27
   13740:	eor	r4, r9, r7
   13744:	orr	r5, r1, fp
   13748:	ror	r9, r1, #2
   1374c:	ror	sl, sl, #31
   13750:	eor	r3, r3, r0
   13754:	ldr	r0, [pc, #1000]	; 13b44 <dcngettext@plt+0x2b2c>
   13758:	mov	r8, sl
   1375c:	str	ip, [sp, #44]	; 0x2c
   13760:	ldr	sl, [sp, #20]
   13764:	and	r5, r5, r6
   13768:	orr	ip, lr, r9
   1376c:	and	r1, r1, fp
   13770:	orr	r1, r5, r1
   13774:	add	r0, r8, r0
   13778:	and	r5, lr, r9
   1377c:	and	ip, ip, fp
   13780:	add	r6, r0, r6
   13784:	eor	r4, r4, sl
   13788:	orr	ip, ip, r5
   1378c:	ldr	sl, [sp, #8]
   13790:	str	r8, [sp, #12]
   13794:	add	ip, ip, r6
   13798:	ldr	r8, [sp, #32]
   1379c:	ldr	r6, [sp, #24]
   137a0:	ldr	r5, [sp, #44]	; 0x2c
   137a4:	eor	r4, r4, sl
   137a8:	add	r2, r2, lr, ror #27
   137ac:	add	r2, r1, r2
   137b0:	ror	lr, lr, #2
   137b4:	eor	r0, r7, r6
   137b8:	eor	r3, r3, r8
   137bc:	ldr	r7, [sp, #36]	; 0x24
   137c0:	ldr	r1, [pc, #892]	; 13b44 <dcngettext@plt+0x2b2c>
   137c4:	ror	r4, r4, #31
   137c8:	eor	r3, r3, r5
   137cc:	orr	r5, r2, lr
   137d0:	add	ip, ip, r2, ror #27
   137d4:	str	r4, [sp, #56]	; 0x38
   137d8:	add	r1, r4, r1
   137dc:	eor	r8, r0, r7
   137e0:	ror	r4, r2, #2
   137e4:	and	r5, r5, r9
   137e8:	ldr	r7, [sp, #12]
   137ec:	and	r2, r2, lr
   137f0:	orr	r2, r5, r2
   137f4:	ldr	r5, [pc, #840]	; 13b44 <dcngettext@plt+0x2b2c>
   137f8:	ror	sl, r3, #31
   137fc:	add	r0, r1, fp
   13800:	eor	r8, r8, r7
   13804:	ldr	r1, [sp, #48]	; 0x30
   13808:	ldr	r7, [sp, #16]
   1380c:	add	r5, sl, r5
   13810:	ldr	fp, [sp, #4]
   13814:	add	r9, r5, r9
   13818:	eor	r1, r1, r7
   1381c:	ldr	r5, [sp, #56]	; 0x38
   13820:	orr	r3, ip, r4
   13824:	add	r0, r0, ip, ror #27
   13828:	eor	r1, r1, fp
   1382c:	add	r0, r2, r0
   13830:	and	r6, ip, r4
   13834:	ldr	r2, [sp, #24]
   13838:	eor	r1, r1, r5
   1383c:	and	r3, r3, lr
   13840:	ldr	r5, [sp, #28]
   13844:	ror	ip, ip, #2
   13848:	orr	r3, r3, r6
   1384c:	ldr	r7, [pc, #752]	; 13b44 <dcngettext@plt+0x2b2c>
   13850:	ror	r6, r8, #31
   13854:	add	r3, r3, r9
   13858:	eor	r8, r2, r5
   1385c:	orr	r5, r0, ip
   13860:	add	r3, r3, r0, ror #27
   13864:	str	r6, [sp, #24]
   13868:	add	r7, r6, r7
   1386c:	ldr	r9, [sp, #40]	; 0x28
   13870:	ror	r6, r0, #2
   13874:	and	r5, r5, r4
   13878:	and	r0, r0, ip
   1387c:	ror	fp, r1, #31
   13880:	ldr	r2, [sp, #16]
   13884:	ldr	r1, [sp, #52]	; 0x34
   13888:	orr	r0, r5, r0
   1388c:	ldr	r5, [pc, #688]	; 13b44 <dcngettext@plt+0x2b2c>
   13890:	eor	r8, r8, r9
   13894:	orr	r9, r3, r6
   13898:	add	r5, fp, r5
   1389c:	add	lr, r7, lr
   138a0:	eor	r1, r2, r1
   138a4:	and	r7, r3, r6
   138a8:	and	r2, r9, ip
   138ac:	eor	r8, r8, sl
   138b0:	add	lr, lr, r3, ror #27
   138b4:	add	r4, r5, r4
   138b8:	orr	r2, r2, r7
   138bc:	add	r0, r0, lr
   138c0:	ldr	r9, [sp, #8]
   138c4:	ldr	lr, [sp, #28]
   138c8:	add	r2, r2, r4
   138cc:	ldr	r4, [sp, #20]
   138d0:	ror	r7, r8, #31
   138d4:	eor	r1, r1, r9
   138d8:	eor	r8, lr, r4
   138dc:	ldr	r9, [sp, #24]
   138e0:	add	lr, r7, #-1895825408	; 0x8f000000
   138e4:	add	lr, lr, #1802240	; 0x1b8000
   138e8:	ror	r3, r3, #2
   138ec:	str	r7, [sp, #16]
   138f0:	eor	r1, r1, r9
   138f4:	ldr	r7, [sp, #44]	; 0x2c
   138f8:	add	lr, lr, #15552	; 0x3cc0
   138fc:	add	r2, r2, r0, ror #27
   13900:	orr	r5, r0, r3
   13904:	add	lr, lr, #28
   13908:	ror	r4, r0, #2
   1390c:	ror	r9, r1, #31
   13910:	and	r0, r0, r3
   13914:	eor	r8, r8, r7
   13918:	add	ip, lr, ip
   1391c:	ldr	r7, [sp, #32]
   13920:	and	r5, r5, r6
   13924:	ldr	r1, [sp, #52]	; 0x34
   13928:	add	ip, ip, r2, ror #27
   1392c:	orr	r5, r5, r0
   13930:	ldr	r0, [sp, #12]
   13934:	add	r5, r5, ip
   13938:	eor	r1, r1, r7
   1393c:	ldr	ip, [sp, #16]
   13940:	ldr	r7, [pc, #508]	; 13b44 <dcngettext@plt+0x2b2c>
   13944:	orr	lr, r2, r4
   13948:	eor	r1, r1, r0
   1394c:	str	r9, [sp, #28]
   13950:	add	r7, r9, r7
   13954:	and	lr, lr, r3
   13958:	and	r9, r2, r4
   1395c:	eor	r1, r1, ip
   13960:	ldr	r0, [sp, #20]
   13964:	orr	lr, lr, r9
   13968:	ldr	ip, [sp, #36]	; 0x24
   1396c:	eor	r8, r8, fp
   13970:	add	r6, r7, r6
   13974:	ror	r2, r2, #2
   13978:	add	r6, lr, r6
   1397c:	ror	r1, r1, #31
   13980:	ldr	lr, [pc, #444]	; 13b44 <dcngettext@plt+0x2b2c>
   13984:	str	r1, [sp, #20]
   13988:	ror	r8, r8, #31
   1398c:	ldr	r1, [sp, #56]	; 0x38
   13990:	eor	ip, r0, ip
   13994:	orr	r0, r5, r2
   13998:	add	r6, r6, r5, ror #27
   1399c:	str	r8, [sp, #48]	; 0x30
   139a0:	ldr	r9, [sp, #28]
   139a4:	add	lr, r8, lr
   139a8:	and	r0, r0, r4
   139ac:	ror	r8, r5, #2
   139b0:	and	r5, r5, r2
   139b4:	eor	ip, ip, r1
   139b8:	orr	r0, r0, r5
   139bc:	ldr	r5, [sp, #20]
   139c0:	eor	ip, ip, r9
   139c4:	ldr	r7, [sp, #4]
   139c8:	add	lr, lr, r3
   139cc:	ldr	r1, [sp, #32]
   139d0:	orr	r3, r6, r8
   139d4:	add	lr, lr, r6, ror #27
   139d8:	add	r5, r5, #-1895825408	; 0x8f000000
   139dc:	add	r0, r0, lr
   139e0:	eor	r1, r1, r7
   139e4:	ror	lr, ip, #31
   139e8:	and	r7, r6, r8
   139ec:	and	r3, r3, r2
   139f0:	add	r5, r5, #1802240	; 0x1b8000
   139f4:	orr	r3, r3, r7
   139f8:	add	r5, r5, #15552	; 0x3cc0
   139fc:	mov	r7, lr
   13a00:	ldr	lr, [sp, #48]	; 0x30
   13a04:	eor	r1, r1, sl
   13a08:	add	r5, r5, #28
   13a0c:	eor	r9, r1, lr
   13a10:	add	r4, r5, r4
   13a14:	ror	ip, r6, #2
   13a18:	add	r5, r3, r4
   13a1c:	ldr	r6, [sp, #40]	; 0x28
   13a20:	ldr	r3, [sp, #36]	; 0x24
   13a24:	ror	r4, r9, #31
   13a28:	add	lr, r7, #-1895825408	; 0x8f000000
   13a2c:	ldr	r9, [sp, #24]
   13a30:	eor	r3, r3, r6
   13a34:	add	lr, lr, #1802240	; 0x1b8000
   13a38:	mov	r6, r4
   13a3c:	ldr	r4, [sp, #20]
   13a40:	eor	r3, r3, r9
   13a44:	add	lr, lr, #15552	; 0x3cc0
   13a48:	add	r5, r5, r0, ror #27
   13a4c:	orr	r1, r0, ip
   13a50:	str	r7, [sp, #36]	; 0x24
   13a54:	add	lr, lr, #28
   13a58:	eor	r3, r3, r4
   13a5c:	ldmib	sp, {r4, r9}
   13a60:	ror	r7, r0, #2
   13a64:	add	r2, lr, r2
   13a68:	and	r0, r0, ip
   13a6c:	and	r1, r1, r8
   13a70:	str	r6, [sp, #4]
   13a74:	add	r2, r2, r5, ror #27
   13a78:	orr	r1, r1, r0
   13a7c:	add	r6, r6, #-1895825408	; 0x8f000000
   13a80:	add	r1, r1, r2
   13a84:	eor	r4, r4, r9
   13a88:	ldr	r2, [sp, #36]	; 0x24
   13a8c:	add	r6, r6, #1802240	; 0x1b8000
   13a90:	orr	lr, r5, r7
   13a94:	eor	r4, r4, fp
   13a98:	add	r6, r6, #15552	; 0x3cc0
   13a9c:	and	r9, r5, r7
   13aa0:	and	r0, lr, ip
   13aa4:	add	r6, r6, #28
   13aa8:	eor	r4, r4, r2
   13aac:	add	r8, r6, r8
   13ab0:	orr	r0, r0, r9
   13ab4:	ldr	r6, [sp, #40]	; 0x28
   13ab8:	ldr	r2, [sp, #44]	; 0x2c
   13abc:	add	r9, r0, r8
   13ac0:	ror	r4, r4, #31
   13ac4:	ldr	r8, [sp, #16]
   13ac8:	str	fp, [sp, #52]	; 0x34
   13acc:	eor	r2, r6, r2
   13ad0:	mov	fp, r4
   13ad4:	ldr	r6, [pc, #104]	; 13b44 <dcngettext@plt+0x2b2c>
   13ad8:	ldr	r4, [sp, #4]
   13adc:	ror	r3, r3, #31
   13ae0:	eor	r2, r2, r8
   13ae4:	ldr	r0, [sp, #8]
   13ae8:	add	r6, r3, r6
   13aec:	eor	r2, r2, r4
   13af0:	ldr	r4, [sp, #12]
   13af4:	add	r6, r6, ip
   13af8:	ldr	ip, [sp, #28]
   13afc:	eor	r0, r0, r4
   13b00:	eor	r0, r0, ip
   13b04:	add	ip, fp, #-1895825408	; 0x8f000000
   13b08:	add	r9, r9, r1, ror #27
   13b0c:	ror	r8, r1, #2
   13b10:	add	ip, ip, #1802240	; 0x1b8000
   13b14:	ror	r5, r5, #2
   13b18:	orr	r4, r9, r8
   13b1c:	add	ip, ip, #15552	; 0x3cc0
   13b20:	str	r8, [sp, #40]	; 0x28
   13b24:	orr	lr, r1, r5
   13b28:	and	r8, r9, r8
   13b2c:	and	r4, r4, r5
   13b30:	add	ip, ip, #28
   13b34:	b	13b50 <dcngettext@plt+0x2b38>
   13b38:	andeq	r8, r2, r8, lsl #30
   13b3c:	bpl	fe0b21a8 <stdout@@GLIBC_2.4+0xfe089044>
   13b40:	vfnmsvs.f64	d30, d25, d17
   13b44:	svchi	0x001bbcdc
   13b48:	bgt	18c42a8 <stdout@@GLIBC_2.4+0x189b144>
   13b4c:	andeq	r8, r2, r8, lsl #30
   13b50:	and	r1, r1, r5
   13b54:	orr	r4, r4, r8
   13b58:	and	lr, lr, r7
   13b5c:	add	ip, ip, r7
   13b60:	add	r6, r6, r9, ror #27
   13b64:	ldr	r7, [sp, #40]	; 0x28
   13b68:	orr	lr, lr, r1
   13b6c:	add	ip, r4, ip
   13b70:	ldr	r4, [pc, #-48]	; 13b48 <dcngettext@plt+0x2b30>
   13b74:	add	lr, lr, r6
   13b78:	str	fp, [sp, #8]
   13b7c:	ror	r6, r9, #2
   13b80:	ldr	fp, [sp, #56]	; 0x38
   13b84:	ror	r2, r2, #31
   13b88:	ldr	r1, [sp, #44]	; 0x2c
   13b8c:	eor	r8, r7, r6
   13b90:	ldr	r9, [sp, #48]	; 0x30
   13b94:	ldr	r7, [sp, #12]
   13b98:	add	r4, r2, r4
   13b9c:	str	r2, [sp, #32]
   13ba0:	add	r5, r4, r5
   13ba4:	eor	r1, r1, fp
   13ba8:	ldr	r4, [sp, #20]
   13bac:	eor	r1, r1, r9
   13bb0:	eor	r9, r7, sl
   13bb4:	eor	r7, r8, lr
   13bb8:	ldr	r8, [sp, #32]
   13bbc:	eor	r9, r9, r4
   13bc0:	eor	r0, r0, r3
   13bc4:	eor	r9, r9, r8
   13bc8:	ldr	r8, [sp, #24]
   13bcc:	ldr	r2, [sp, #8]
   13bd0:	ldr	r4, [pc, #-144]	; 13b48 <dcngettext@plt+0x2b30>
   13bd4:	ror	r0, r0, #31
   13bd8:	eor	r8, fp, r8
   13bdc:	ldr	fp, [sp, #40]	; 0x28
   13be0:	add	ip, ip, lr, ror #27
   13be4:	eor	r1, r1, r2
   13be8:	ror	lr, lr, #2
   13bec:	add	r4, r0, r4
   13bf0:	ror	r9, r9, #31
   13bf4:	add	r4, r4, fp
   13bf8:	str	r9, [sp, #12]
   13bfc:	ldr	fp, [sp, #36]	; 0x24
   13c00:	add	r7, r7, r5
   13c04:	ldr	r9, [pc, #-196]	; 13b48 <dcngettext@plt+0x2b30>
   13c08:	eor	r5, r6, lr
   13c0c:	ror	r1, r1, #31
   13c10:	add	r7, r7, ip, ror #27
   13c14:	eor	r5, r5, ip
   13c18:	ror	ip, ip, #2
   13c1c:	eor	r8, r8, fp
   13c20:	add	r5, r5, r4
   13c24:	ldr	fp, [sp, #52]	; 0x34
   13c28:	eor	r4, lr, ip
   13c2c:	add	r9, r1, r9
   13c30:	add	r5, r5, r7, ror #27
   13c34:	add	r9, r9, r6
   13c38:	eor	r4, r4, r7
   13c3c:	ror	r6, r7, #2
   13c40:	ldr	r7, [sp, #4]
   13c44:	eor	sl, sl, fp
   13c48:	eor	sl, sl, r7
   13c4c:	eor	r7, ip, r6
   13c50:	eor	r8, r8, r0
   13c54:	mov	fp, r7
   13c58:	ldr	r7, [sp, #12]
   13c5c:	add	r4, r4, r9
   13c60:	add	r7, r7, #-905969664	; 0xca000000
   13c64:	ror	r9, r8, #31
   13c68:	eor	sl, sl, r1
   13c6c:	ldr	r8, [sp, #16]
   13c70:	add	r7, r7, #6422528	; 0x620000
   13c74:	str	r9, [sp, #100]	; 0x64
   13c78:	ldr	r9, [sp, #24]
   13c7c:	add	r7, r7, #49408	; 0xc100
   13c80:	add	r7, r7, #214	; 0xd6
   13c84:	eor	r9, r9, r8
   13c88:	ror	sl, sl, #31
   13c8c:	add	r4, r4, r5, ror #27
   13c90:	str	sl, [sp, #104]	; 0x68
   13c94:	mov	r8, r9
   13c98:	ldr	sl, [sp, #12]
   13c9c:	ror	r9, r5, #2
   13ca0:	add	lr, r7, lr
   13ca4:	eor	r5, r5, fp
   13ca8:	ldr	r7, [sp, #100]	; 0x64
   13cac:	ldr	fp, [pc, #-364]	; 13b48 <dcngettext@plt+0x2b30>
   13cb0:	eor	r8, r8, r3
   13cb4:	add	fp, r7, fp
   13cb8:	eor	r8, r8, sl
   13cbc:	add	lr, r5, lr
   13cc0:	ldr	sl, [sp, #28]
   13cc4:	ldr	r5, [sp, #52]	; 0x34
   13cc8:	add	ip, fp, ip
   13ccc:	ldr	fp, [sp, #104]	; 0x68
   13cd0:	ror	r8, r8, #31
   13cd4:	str	r8, [sp, #108]	; 0x6c
   13cd8:	eor	r5, r5, sl
   13cdc:	ldr	r8, [sp, #100]	; 0x64
   13ce0:	add	fp, fp, #-905969664	; 0xca000000
   13ce4:	eor	r5, r5, r2
   13ce8:	add	fp, fp, #6422528	; 0x620000
   13cec:	eor	r5, r5, r8
   13cf0:	add	fp, fp, #49408	; 0xc100
   13cf4:	ldr	r2, [sp, #48]	; 0x30
   13cf8:	ldr	r8, [sp, #16]
   13cfc:	add	fp, fp, #214	; 0xd6
   13d00:	eor	r7, r6, r9
   13d04:	add	fp, fp, r6
   13d08:	ror	r5, r5, #31
   13d0c:	ldr	r6, [sp, #32]
   13d10:	add	lr, lr, r4, ror #27
   13d14:	str	r5, [sp, #112]	; 0x70
   13d18:	eor	r7, r7, r4
   13d1c:	ldr	r5, [sp, #104]	; 0x68
   13d20:	ror	r4, r4, #2
   13d24:	eor	r8, r8, r2
   13d28:	add	ip, r7, ip
   13d2c:	eor	r8, r8, r6
   13d30:	eor	r7, r9, r4
   13d34:	ldr	r6, [sp, #108]	; 0x6c
   13d38:	ldr	sl, [pc, #-504]	; 13b48 <dcngettext@plt+0x2b30>
   13d3c:	eor	r7, r7, lr
   13d40:	eor	r8, r8, r5
   13d44:	add	sl, r6, sl
   13d48:	add	r7, r7, fp
   13d4c:	ldr	r5, [sp, #28]
   13d50:	ldr	fp, [sp, #20]
   13d54:	add	sl, sl, r9
   13d58:	ror	r8, r8, #31
   13d5c:	ldr	r9, [sp, #112]	; 0x70
   13d60:	str	r8, [sp, #116]	; 0x74
   13d64:	eor	r5, r5, fp
   13d68:	ldr	r8, [sp, #108]	; 0x6c
   13d6c:	eor	r5, r5, r0
   13d70:	add	r9, r9, #-905969664	; 0xca000000
   13d74:	eor	r5, r5, r8
   13d78:	add	r9, r9, #6422528	; 0x620000
   13d7c:	mov	r8, r2
   13d80:	add	r9, r9, #49408	; 0xc100
   13d84:	ldr	r2, [sp, #36]	; 0x24
   13d88:	add	ip, ip, lr, ror #27
   13d8c:	add	r9, r9, #214	; 0xd6
   13d90:	ror	lr, lr, #2
   13d94:	ror	r5, r5, #31
   13d98:	eor	r6, r4, lr
   13d9c:	str	r5, [sp, #120]	; 0x78
   13da0:	eor	r8, r8, r2
   13da4:	ldr	r5, [sp, #112]	; 0x70
   13da8:	add	r4, r9, r4
   13dac:	ldr	r9, [sp, #116]	; 0x74
   13db0:	eor	r8, r8, r1
   13db4:	eor	r8, r8, r5
   13db8:	add	r9, r9, #-905969664	; 0xca000000
   13dbc:	ldr	r5, [sp, #4]
   13dc0:	add	r9, r9, #6422528	; 0x620000
   13dc4:	eor	r5, fp, r5
   13dc8:	add	r9, r9, #49408	; 0xc100
   13dcc:	ldr	fp, [sp, #120]	; 0x78
   13dd0:	add	r7, r7, ip, ror #27
   13dd4:	eor	r6, r6, ip
   13dd8:	add	r9, r9, #214	; 0xd6
   13ddc:	ror	ip, ip, #2
   13de0:	add	r6, r6, sl
   13de4:	ror	r8, r8, #31
   13de8:	eor	sl, lr, ip
   13dec:	add	fp, fp, #-905969664	; 0xca000000
   13df0:	add	lr, r9, lr
   13df4:	ldr	r9, [sp, #12]
   13df8:	str	r8, [sp, #124]	; 0x7c
   13dfc:	add	fp, fp, #6422528	; 0x620000
   13e00:	ldr	r8, [sp, #116]	; 0x74
   13e04:	eor	r5, r5, r9
   13e08:	add	fp, fp, #49408	; 0xc100
   13e0c:	add	r6, r6, r7, ror #27
   13e10:	eor	sl, sl, r7
   13e14:	add	fp, fp, #214	; 0xd6
   13e18:	ror	r7, r7, #2
   13e1c:	eor	r5, r5, r8
   13e20:	add	r4, sl, r4
   13e24:	eor	sl, ip, r7
   13e28:	add	ip, fp, ip
   13e2c:	ldr	fp, [sp, #100]	; 0x64
   13e30:	eor	r8, r2, r3
   13e34:	ror	r5, r5, #31
   13e38:	add	r4, r4, r6, ror #27
   13e3c:	eor	sl, sl, r6
   13e40:	eor	r8, r8, fp
   13e44:	ror	r6, r6, #2
   13e48:	ldr	fp, [sp, #124]	; 0x7c
   13e4c:	str	r5, [sp, #128]	; 0x80
   13e50:	ldr	r5, [sp, #120]	; 0x78
   13e54:	eor	r9, r7, r6
   13e58:	add	lr, sl, lr
   13e5c:	ldr	sl, [pc, #-796]	; 13b48 <dcngettext@plt+0x2b30>
   13e60:	add	lr, lr, r4, ror #27
   13e64:	eor	r9, r9, r4
   13e68:	eor	r8, r8, r5
   13e6c:	ror	r4, r4, #2
   13e70:	ldmib	sp, {r2, r5}
   13e74:	add	sl, fp, sl
   13e78:	add	ip, r9, ip
   13e7c:	eor	fp, r6, r4
   13e80:	add	ip, ip, lr, ror #27
   13e84:	eor	fp, fp, lr
   13e88:	add	r7, sl, r7
   13e8c:	ror	sl, lr, #2
   13e90:	ldr	lr, [sp, #104]	; 0x68
   13e94:	eor	r5, r2, r5
   13e98:	ror	r8, r8, #31
   13e9c:	eor	r9, r5, lr
   13ea0:	str	r8, [sp, #132]	; 0x84
   13ea4:	ldr	lr, [sp, #128]	; 0x80
   13ea8:	ldr	r8, [sp, #124]	; 0x7c
   13eac:	ldr	r5, [pc, #-876]	; 13b48 <dcngettext@plt+0x2b30>
   13eb0:	ldr	r2, [sp, #32]
   13eb4:	add	r5, lr, r5
   13eb8:	eor	r8, r9, r8
   13ebc:	eor	lr, r4, sl
   13ec0:	eor	lr, lr, ip
   13ec4:	add	r7, fp, r7
   13ec8:	eor	r3, r3, r2
   13ecc:	add	r6, r5, r6
   13ed0:	ldr	r2, [sp, #8]
   13ed4:	add	fp, r7, ip, ror #27
   13ed8:	ror	r9, ip, #2
   13edc:	add	r6, lr, r6
   13ee0:	ldr	ip, [sp, #108]	; 0x6c
   13ee4:	ror	lr, r8, #31
   13ee8:	str	lr, [sp, #136]	; 0x88
   13eec:	eor	r8, r2, r0
   13ef0:	ldr	lr, [sp, #128]	; 0x80
   13ef4:	ldr	r2, [sp, #112]	; 0x70
   13ef8:	eor	r3, r3, ip
   13efc:	ldr	ip, [sp, #132]	; 0x84
   13f00:	eor	r3, r3, lr
   13f04:	eor	r8, r8, r2
   13f08:	ldr	lr, [pc, #-968]	; 13b48 <dcngettext@plt+0x2b30>
   13f0c:	ldr	r2, [sp, #136]	; 0x88
   13f10:	add	ip, ip, #-905969664	; 0xca000000
   13f14:	add	lr, r2, lr
   13f18:	add	ip, ip, #6422528	; 0x620000
   13f1c:	ldr	r2, [sp, #132]	; 0x84
   13f20:	add	ip, ip, #49408	; 0xc100
   13f24:	add	ip, ip, #214	; 0xd6
   13f28:	eor	r8, r8, r2
   13f2c:	ldr	r2, [sp, #32]
   13f30:	add	r4, ip, r4
   13f34:	ldr	ip, [sp, #116]	; 0x74
   13f38:	eor	r2, r2, r1
   13f3c:	eor	r5, sl, r9
   13f40:	eor	r2, r2, ip
   13f44:	ldr	ip, [pc, #-1028]	; 13b48 <dcngettext@plt+0x2b30>
   13f48:	ror	r7, fp, #2
   13f4c:	add	r6, r6, fp, ror #27
   13f50:	ror	r3, r3, #31
   13f54:	eor	r5, r5, fp
   13f58:	ldr	fp, [sp, #136]	; 0x88
   13f5c:	add	lr, lr, sl
   13f60:	add	ip, r3, ip
   13f64:	ldr	sl, [sp, #12]
   13f68:	add	ip, ip, r9
   13f6c:	add	r5, r5, r4
   13f70:	eor	r2, r2, fp
   13f74:	eor	r4, r9, r7
   13f78:	ldr	fp, [pc, #-1080]	; 13b48 <dcngettext@plt+0x2b30>
   13f7c:	ldr	r9, [sp, #120]	; 0x78
   13f80:	ror	r8, r8, #31
   13f84:	eor	r0, r0, sl
   13f88:	add	r5, r5, r6, ror #27
   13f8c:	eor	r4, r4, r6
   13f90:	eor	r0, r0, r9
   13f94:	ror	r6, r6, #2
   13f98:	ldr	r9, [sp, #100]	; 0x64
   13f9c:	add	fp, r8, fp
   13fa0:	add	fp, fp, r7
   13fa4:	add	r4, r4, lr
   13fa8:	eor	lr, r7, r6
   13fac:	ldr	r7, [sp, #124]	; 0x7c
   13fb0:	eor	r1, r1, r9
   13fb4:	add	r4, r4, r5, ror #27
   13fb8:	eor	lr, lr, r5
   13fbc:	eor	r1, r1, r7
   13fc0:	ror	r5, r5, #2
   13fc4:	ldr	r7, [sp, #104]	; 0x68
   13fc8:	add	lr, lr, ip
   13fcc:	eor	ip, r6, r5
   13fd0:	eor	r9, sl, r7
   13fd4:	eor	ip, ip, r4
   13fd8:	ldr	sl, [pc, #-1176]	; 13b48 <dcngettext@plt+0x2b30>
   13fdc:	ror	r2, r2, #31
   13fe0:	add	lr, lr, r4, ror #27
   13fe4:	add	ip, ip, fp
   13fe8:	ror	r4, r4, #2
   13fec:	ldr	fp, [sp, #128]	; 0x80
   13ff0:	add	sl, r2, sl
   13ff4:	eor	r7, r5, r4
   13ff8:	eor	r0, r0, r3
   13ffc:	add	r6, sl, r6
   14000:	eor	r9, r9, fp
   14004:	eor	r7, r7, lr
   14008:	eor	r1, r1, r8
   1400c:	ldr	fp, [pc, #-1228]	; 13b48 <dcngettext@plt+0x2b30>
   14010:	ror	r0, r0, #31
   14014:	add	r7, r7, r6
   14018:	ldr	r6, [pc, #-1240]	; 13b48 <dcngettext@plt+0x2b30>
   1401c:	add	fp, r0, fp
   14020:	ror	r1, r1, #31
   14024:	eor	r9, r9, r2
   14028:	add	ip, ip, lr, ror #27
   1402c:	add	r6, r1, r6
   14030:	ror	lr, lr, #2
   14034:	add	r5, fp, r5
   14038:	ldr	fp, [pc, #-1272]	; 13b48 <dcngettext@plt+0x2b30>
   1403c:	eor	sl, r4, lr
   14040:	ror	r9, r9, #31
   14044:	add	r4, r6, r4
   14048:	ldr	r6, [sp, #68]	; 0x44
   1404c:	add	r7, r7, ip, ror #27
   14050:	eor	sl, sl, ip
   14054:	add	fp, r9, fp
   14058:	ror	ip, ip, #2
   1405c:	add	r6, fp, r6
   14060:	add	r5, sl, r5
   14064:	eor	sl, lr, ip
   14068:	eor	sl, sl, r7
   1406c:	add	lr, r6, lr
   14070:	ldr	r6, [sp, #60]	; 0x3c
   14074:	add	r4, sl, r4
   14078:	ldr	sl, [sp, #92]	; 0x5c
   1407c:	add	r6, r6, #64	; 0x40
   14080:	add	r5, r5, r7, ror #27
   14084:	str	r6, [sp, #60]	; 0x3c
   14088:	ror	r7, r7, #2
   1408c:	cmp	r6, sl
   14090:	ldr	r6, [sp, #76]	; 0x4c
   14094:	eor	fp, ip, r7
   14098:	add	r4, r4, r5, ror #27
   1409c:	eor	fp, fp, r5
   140a0:	add	r5, r6, r5, ror #2
   140a4:	ldr	r6, [sp, #84]	; 0x54
   140a8:	str	r5, [sp, #76]	; 0x4c
   140ac:	add	ip, r6, ip
   140b0:	str	ip, [sp, #84]	; 0x54
   140b4:	ldr	r6, [sp, #72]	; 0x48
   140b8:	add	lr, lr, fp
   140bc:	add	lr, lr, r4, ror #27
   140c0:	strd	r0, [sp, #152]	; 0x98
   140c4:	add	r4, r6, r4
   140c8:	ldr	r0, [sp, #88]	; 0x58
   140cc:	ldr	r6, [sp, #80]	; 0x50
   140d0:	str	r3, [sp, #140]	; 0x8c
   140d4:	add	r6, r6, r7
   140d8:	str	r2, [sp, #148]	; 0x94
   140dc:	str	lr, [sp, #68]	; 0x44
   140e0:	str	r4, [sp, #72]	; 0x48
   140e4:	str	r6, [sp, #80]	; 0x50
   140e8:	str	r8, [sp, #144]	; 0x90
   140ec:	str	r9, [sp, #160]	; 0xa0
   140f0:	mov	r2, lr
   140f4:	str	lr, [r0]
   140f8:	mov	r1, r4
   140fc:	strd	r4, [r0, #4]
   14100:	mov	r3, r6
   14104:	str	r6, [r0, #12]
   14108:	str	ip, [r0, #16]
   1410c:	bne	12bb4 <dcngettext@plt+0x1b9c>
   14110:	ldr	r3, [pc, #-1484]	; 13b4c <dcngettext@plt+0x2b34>
   14114:	ldr	r2, [sp, #164]	; 0xa4
   14118:	ldr	r3, [r3]
   1411c:	cmp	r2, r3
   14120:	bne	1412c <dcngettext@plt+0x3114>
   14124:	add	sp, sp, #172	; 0xac
   14128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1412c:	bl	10e38 <__stack_chk_fail@plt>
   14130:	push	{r4, r5, r6, r7, r8, lr}
   14134:	mov	r4, r0
   14138:	ldr	r0, [r0, #28]
   1413c:	ldr	r3, [r4, #20]
   14140:	cmp	r0, #56	; 0x38
   14144:	ldr	r7, [r4, #24]
   14148:	movcc	r6, #64	; 0x40
   1414c:	movcs	r6, #128	; 0x80
   14150:	movcc	r2, #56	; 0x38
   14154:	movcs	r2, #120	; 0x78
   14158:	movcc	ip, #15
   1415c:	movcs	ip, #31
   14160:	movcc	lr, #14
   14164:	movcs	lr, #30
   14168:	adds	r3, r3, r0
   1416c:	addcs	r7, r7, #1
   14170:	mov	r5, r1
   14174:	lsr	r1, r3, #29
   14178:	str	r3, [r4, #20]
   1417c:	add	lr, lr, #8
   14180:	add	ip, ip, #8
   14184:	orr	r1, r1, r7, lsl #3
   14188:	lsl	r3, r3, #3
   1418c:	strcs	r7, [r4, #24]
   14190:	rev	r3, r3
   14194:	add	r7, r4, #32
   14198:	rev	r1, r1
   1419c:	str	r1, [r4, lr, lsl #2]
   141a0:	sub	r2, r2, r0
   141a4:	str	r3, [r4, ip, lsl #2]
   141a8:	add	r0, r7, r0
   141ac:	ldr	r1, [pc, #32]	; 141d4 <dcngettext@plt+0x31bc>
   141b0:	bl	10dfc <memcpy@plt>
   141b4:	mov	r1, r6
   141b8:	mov	r0, r7
   141bc:	mov	r2, r4
   141c0:	bl	12b24 <dcngettext@plt+0x1b0c>
   141c4:	mov	r1, r5
   141c8:	mov	r0, r4
   141cc:	pop	{r4, r5, r6, r7, r8, lr}
   141d0:	b	12adc <dcngettext@plt+0x1ac4>
   141d4:	andeq	r8, r1, ip, ror #11
   141d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   141dc:	mov	r5, r2
   141e0:	ldr	r7, [r2, #28]
   141e4:	mov	r4, r0
   141e8:	cmp	r7, #0
   141ec:	mov	r6, r1
   141f0:	bne	142d4 <dcngettext@plt+0x32bc>
   141f4:	cmp	r6, #63	; 0x3f
   141f8:	bls	142c0 <dcngettext@plt+0x32a8>
   141fc:	tst	r4, #3
   14200:	beq	142a4 <dcngettext@plt+0x328c>
   14204:	cmp	r6, #64	; 0x40
   14208:	add	r7, r5, #32
   1420c:	beq	14374 <dcngettext@plt+0x335c>
   14210:	sub	r9, r6, #65	; 0x41
   14214:	lsr	r9, r9, #6
   14218:	add	r8, r9, #1
   1421c:	add	r8, r4, r8, lsl #6
   14220:	add	lr, r4, #64	; 0x40
   14224:	mov	r3, r7
   14228:	ldr	ip, [r4]
   1422c:	ldr	r0, [r4, #4]
   14230:	ldr	r1, [r4, #8]
   14234:	ldr	r2, [r4, #12]
   14238:	add	r4, r4, #16
   1423c:	cmp	r4, lr
   14240:	str	ip, [r3]
   14244:	str	r0, [r3, #4]
   14248:	str	r1, [r3, #8]
   1424c:	str	r2, [r3, #12]
   14250:	add	r3, r3, #16
   14254:	bne	14228 <dcngettext@plt+0x3210>
   14258:	mov	r2, r5
   1425c:	mov	r1, #64	; 0x40
   14260:	mov	r0, r7
   14264:	bl	12b24 <dcngettext@plt+0x1b0c>
   14268:	cmp	r4, r8
   1426c:	bne	14220 <dcngettext@plt+0x3208>
   14270:	rsb	r9, r9, r9, lsl #26
   14274:	sub	r6, r6, #64	; 0x40
   14278:	add	r6, r6, r9, lsl #6
   1427c:	ldr	r4, [r5, #28]
   14280:	mov	r1, r8
   14284:	add	r0, r7, r4
   14288:	mov	r2, r6
   1428c:	add	r4, r4, r6
   14290:	bl	10dfc <memcpy@plt>
   14294:	cmp	r4, #63	; 0x3f
   14298:	bhi	14314 <dcngettext@plt+0x32fc>
   1429c:	str	r4, [r5, #28]
   142a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   142a4:	bic	r7, r6, #63	; 0x3f
   142a8:	mov	r0, r4
   142ac:	mov	r1, r7
   142b0:	mov	r2, r5
   142b4:	bl	12b24 <dcngettext@plt+0x1b0c>
   142b8:	and	r6, r6, #63	; 0x3f
   142bc:	add	r4, r4, r7
   142c0:	cmp	r6, #0
   142c4:	movne	r8, r4
   142c8:	addne	r7, r5, #32
   142cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   142d0:	b	1427c <dcngettext@plt+0x3264>
   142d4:	rsb	r8, r7, #128	; 0x80
   142d8:	cmp	r8, r1
   142dc:	movcs	r8, r1
   142e0:	add	r9, r2, #32
   142e4:	mov	r1, r4
   142e8:	mov	r2, r8
   142ec:	add	r0, r9, r7
   142f0:	bl	10dfc <memcpy@plt>
   142f4:	ldr	r1, [r5, #28]
   142f8:	add	r1, r8, r1
   142fc:	cmp	r1, #64	; 0x40
   14300:	str	r1, [r5, #28]
   14304:	bhi	14340 <dcngettext@plt+0x3328>
   14308:	add	r4, r4, r8
   1430c:	sub	r6, r6, r8
   14310:	b	141f4 <dcngettext@plt+0x31dc>
   14314:	sub	r4, r4, #64	; 0x40
   14318:	mov	r2, r5
   1431c:	mov	r1, #64	; 0x40
   14320:	mov	r0, r7
   14324:	bl	12b24 <dcngettext@plt+0x1b0c>
   14328:	mov	r0, r7
   1432c:	mov	r2, r4
   14330:	add	r1, r5, #96	; 0x60
   14334:	bl	10dfc <memcpy@plt>
   14338:	str	r4, [r5, #28]
   1433c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14340:	mov	r2, r5
   14344:	mov	r0, r9
   14348:	bic	r1, r1, #63	; 0x3f
   1434c:	bl	12b24 <dcngettext@plt+0x1b0c>
   14350:	ldr	r2, [r5, #28]
   14354:	add	r1, r7, r8
   14358:	and	r2, r2, #63	; 0x3f
   1435c:	bic	r1, r1, #63	; 0x3f
   14360:	add	r1, r9, r1
   14364:	mov	r0, r9
   14368:	str	r2, [r5, #28]
   1436c:	bl	10dfc <memcpy@plt>
   14370:	b	14308 <dcngettext@plt+0x32f0>
   14374:	mov	r8, r4
   14378:	b	1427c <dcngettext@plt+0x3264>
   1437c:	push	{r4, r5, r6, lr}
   14380:	sub	sp, sp, #168	; 0xa8
   14384:	ldr	r4, [pc, #112]	; 143fc <dcngettext@plt+0x33e4>
   14388:	ldr	ip, [pc, #112]	; 14400 <dcngettext@plt+0x33e8>
   1438c:	ldr	lr, [pc, #112]	; 14404 <dcngettext@plt+0x33ec>
   14390:	ldr	r3, [r4]
   14394:	str	ip, [sp, #4]
   14398:	str	r3, [sp, #164]	; 0xa4
   1439c:	ldr	r3, [pc, #100]	; 14408 <dcngettext@plt+0x33f0>
   143a0:	ldr	ip, [pc, #100]	; 1440c <dcngettext@plt+0x33f4>
   143a4:	ldr	r6, [pc, #100]	; 14410 <dcngettext@plt+0x33f8>
   143a8:	mov	r5, r2
   143ac:	str	r3, [sp, #16]
   143b0:	add	r2, sp, #4
   143b4:	mov	r3, #0
   143b8:	str	r3, [sp, #28]
   143bc:	str	r3, [sp, #24]
   143c0:	str	r3, [sp, #32]
   143c4:	str	lr, [sp, #12]
   143c8:	str	ip, [sp, #20]
   143cc:	str	r6, [sp, #8]
   143d0:	bl	141d8 <dcngettext@plt+0x31c0>
   143d4:	mov	r1, r5
   143d8:	add	r0, sp, #4
   143dc:	bl	14130 <dcngettext@plt+0x3118>
   143e0:	ldr	r2, [sp, #164]	; 0xa4
   143e4:	ldr	r3, [r4]
   143e8:	cmp	r2, r3
   143ec:	bne	143f8 <dcngettext@plt+0x33e0>
   143f0:	add	sp, sp, #168	; 0xa8
   143f4:	pop	{r4, r5, r6, pc}
   143f8:	bl	10e38 <__stack_chk_fail@plt>
   143fc:	andeq	r8, r2, r8, lsl #30
   14400:	strbvs	r2, [r5, -r1, lsl #6]
   14404:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   14408:	eorsne	r5, r2, r6, ror r4
   1440c:	bicsgt	lr, r2, #240, 2	; 0x3c
   14410:	svc	0x00cdab89
   14414:	push	{r4, r5, r6, r7, r8, lr}
   14418:	sub	sp, sp, #168	; 0xa8
   1441c:	ldr	r7, [pc, #284]	; 14540 <dcngettext@plt+0x3528>
   14420:	mov	r5, r0
   14424:	ldr	r0, [pc, #280]	; 14544 <dcngettext@plt+0x352c>
   14428:	ldr	r3, [r7]
   1442c:	mov	r8, r1
   14430:	str	r3, [sp, #164]	; 0xa4
   14434:	bl	10eb0 <malloc@plt>
   14438:	subs	r6, r0, #0
   1443c:	moveq	r0, #1
   14440:	beq	144e0 <dcngettext@plt+0x34c8>
   14444:	ldr	r3, [pc, #252]	; 14548 <dcngettext@plt+0x3530>
   14448:	ldr	r2, [pc, #252]	; 1454c <dcngettext@plt+0x3534>
   1444c:	str	r3, [sp, #4]
   14450:	ldr	r3, [pc, #248]	; 14550 <dcngettext@plt+0x3538>
   14454:	str	r2, [sp, #8]
   14458:	str	r3, [sp, #12]
   1445c:	add	r3, r3, #1264	; 0x4f0
   14460:	ldr	r2, [pc, #236]	; 14554 <dcngettext@plt+0x353c>
   14464:	add	r3, r3, #671088642	; 0x28000002
   14468:	add	r3, r3, #51904512	; 0x3180000
   1446c:	strd	r2, [sp, #16]
   14470:	mov	r3, #0
   14474:	str	r3, [sp, #28]
   14478:	str	r3, [sp, #24]
   1447c:	str	r3, [sp, #32]
   14480:	mov	r4, #0
   14484:	b	144b0 <dcngettext@plt+0x3498>
   14488:	rsb	r2, r4, #32768	; 0x8000
   1448c:	add	r0, r6, r4
   14490:	mov	r3, r5
   14494:	mov	r1, #1
   14498:	bl	10fe8 <fread_unlocked@plt>
   1449c:	add	r4, r4, r0
   144a0:	cmp	r4, #32768	; 0x8000
   144a4:	beq	1450c <dcngettext@plt+0x34f4>
   144a8:	cmp	r0, #0
   144ac:	beq	14520 <dcngettext@plt+0x3508>
   144b0:	ldr	r3, [r5]
   144b4:	tst	r3, #16
   144b8:	beq	14488 <dcngettext@plt+0x3470>
   144bc:	cmp	r4, #0
   144c0:	add	r5, sp, #4
   144c4:	bne	144f8 <dcngettext@plt+0x34e0>
   144c8:	mov	r1, r8
   144cc:	mov	r0, r5
   144d0:	bl	14130 <dcngettext@plt+0x3118>
   144d4:	mov	r0, r6
   144d8:	bl	10de4 <free@plt>
   144dc:	mov	r0, #0
   144e0:	ldr	r2, [sp, #164]	; 0xa4
   144e4:	ldr	r3, [r7]
   144e8:	cmp	r2, r3
   144ec:	bne	1453c <dcngettext@plt+0x3524>
   144f0:	add	sp, sp, #168	; 0xa8
   144f4:	pop	{r4, r5, r6, r7, r8, pc}
   144f8:	mov	r1, r4
   144fc:	mov	r2, r5
   14500:	mov	r0, r6
   14504:	bl	141d8 <dcngettext@plt+0x31c0>
   14508:	b	144c8 <dcngettext@plt+0x34b0>
   1450c:	mov	r1, r4
   14510:	add	r2, sp, #4
   14514:	mov	r0, r6
   14518:	bl	12b24 <dcngettext@plt+0x1b0c>
   1451c:	b	14480 <dcngettext@plt+0x3468>
   14520:	ldr	r3, [r5]
   14524:	tst	r3, #32
   14528:	beq	144bc <dcngettext@plt+0x34a4>
   1452c:	mov	r0, r6
   14530:	bl	10de4 <free@plt>
   14534:	mov	r0, #1
   14538:	b	144e0 <dcngettext@plt+0x34c8>
   1453c:	bl	10e38 <__stack_chk_fail@plt>
   14540:	andeq	r8, r2, r8, lsl #30
   14544:	andeq	r8, r0, r8, asr #32
   14548:	strbvs	r2, [r5, -r1, lsl #6]
   1454c:	svc	0x00cdab89
   14550:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   14554:	eorsne	r5, r2, r6, ror r4
   14558:	b	10dcc <posix_fadvise64@plt>
   1455c:	cmp	r0, #0
   14560:	bxeq	lr
   14564:	push	{r4, lr}
   14568:	sub	sp, sp, #16
   1456c:	mov	r4, r1
   14570:	bl	10f64 <fileno@plt>
   14574:	mov	r2, #0
   14578:	mov	r3, #0
   1457c:	str	r4, [sp, #8]
   14580:	strd	r2, [sp]
   14584:	bl	10dcc <posix_fadvise64@plt>
   14588:	add	sp, sp, #16
   1458c:	pop	{r4, pc}
   14590:	push	{r4, r5, r6, lr}
   14594:	mov	r5, r1
   14598:	bl	10fd0 <fopen64@plt>
   1459c:	subs	r4, r0, #0
   145a0:	beq	145b0 <dcngettext@plt+0x3598>
   145a4:	bl	10f64 <fileno@plt>
   145a8:	cmp	r0, #2
   145ac:	bls	145b8 <dcngettext@plt+0x35a0>
   145b0:	mov	r0, r4
   145b4:	pop	{r4, r5, r6, pc}
   145b8:	bl	168a4 <dcngettext@plt+0x588c>
   145bc:	subs	r6, r0, #0
   145c0:	blt	14608 <dcngettext@plt+0x35f0>
   145c4:	mov	r0, r4
   145c8:	bl	17090 <dcngettext@plt+0x6078>
   145cc:	cmp	r0, #0
   145d0:	bne	145e8 <dcngettext@plt+0x35d0>
   145d4:	mov	r1, r5
   145d8:	mov	r0, r6
   145dc:	bl	10d84 <fdopen@plt>
   145e0:	subs	r4, r0, #0
   145e4:	bne	145b0 <dcngettext@plt+0x3598>
   145e8:	bl	10f28 <__errno_location@plt>
   145ec:	mov	r4, #0
   145f0:	mov	r5, r0
   145f4:	mov	r0, r6
   145f8:	ldr	r6, [r5]
   145fc:	bl	1100c <close@plt>
   14600:	str	r6, [r5]
   14604:	b	145b0 <dcngettext@plt+0x3598>
   14608:	bl	10f28 <__errno_location@plt>
   1460c:	mov	r5, r0
   14610:	mov	r0, r4
   14614:	ldr	r6, [r5]
   14618:	mov	r4, #0
   1461c:	bl	17090 <dcngettext@plt+0x6078>
   14620:	str	r6, [r5]
   14624:	b	145b0 <dcngettext@plt+0x3598>
   14628:	push	{r4, r5, r6, lr}
   1462c:	subs	r4, r0, #0
   14630:	beq	146a4 <dcngettext@plt+0x368c>
   14634:	mov	r1, #47	; 0x2f
   14638:	bl	10fb8 <strrchr@plt>
   1463c:	subs	r5, r0, #0
   14640:	beq	14690 <dcngettext@plt+0x3678>
   14644:	add	r6, r5, #1
   14648:	sub	r3, r6, r4
   1464c:	cmp	r3, #6
   14650:	ble	14690 <dcngettext@plt+0x3678>
   14654:	mov	r2, #7
   14658:	ldr	r1, [pc, #96]	; 146c0 <dcngettext@plt+0x36a8>
   1465c:	sub	r0, r5, #6
   14660:	bl	10ff4 <strncmp@plt>
   14664:	cmp	r0, #0
   14668:	bne	14690 <dcngettext@plt+0x3678>
   1466c:	mov	r2, #3
   14670:	ldr	r1, [pc, #76]	; 146c4 <dcngettext@plt+0x36ac>
   14674:	mov	r0, r6
   14678:	bl	10ff4 <strncmp@plt>
   1467c:	cmp	r0, #0
   14680:	movne	r4, r6
   14684:	ldreq	r3, [pc, #60]	; 146c8 <dcngettext@plt+0x36b0>
   14688:	addeq	r4, r5, #4
   1468c:	streq	r4, [r3]
   14690:	ldr	r2, [pc, #52]	; 146cc <dcngettext@plt+0x36b4>
   14694:	ldr	r3, [pc, #52]	; 146d0 <dcngettext@plt+0x36b8>
   14698:	str	r4, [r2]
   1469c:	str	r4, [r3]
   146a0:	pop	{r4, r5, r6, pc}
   146a4:	ldr	r3, [pc, #40]	; 146d4 <dcngettext@plt+0x36bc>
   146a8:	mov	r2, #55	; 0x37
   146ac:	mov	r1, #1
   146b0:	ldr	r3, [r3]
   146b4:	ldr	r0, [pc, #28]	; 146d8 <dcngettext@plt+0x36c0>
   146b8:	bl	10e68 <fwrite@plt>
   146bc:	bl	11000 <abort@plt>
   146c0:	andeq	r8, r1, r4, ror #12
   146c4:	andeq	r8, r1, ip, ror #12
   146c8:	andeq	r9, r2, r8, asr #2
   146cc:	andeq	r9, r2, r4, lsl #3
   146d0:	andeq	r9, r2, ip, asr #2
   146d4:	andeq	r9, r2, r8, asr r1
   146d8:	andeq	r8, r1, ip, lsr #12
   146dc:	push	{r4, lr}
   146e0:	mov	r2, #48	; 0x30
   146e4:	mov	r4, r1
   146e8:	mov	r1, #0
   146ec:	bl	10f4c <memset@plt>
   146f0:	cmp	r4, #10
   146f4:	beq	14700 <dcngettext@plt+0x36e8>
   146f8:	str	r4, [r0]
   146fc:	pop	{r4, pc}
   14700:	bl	11000 <abort@plt>
   14704:	push	{r4, r5, r6, lr}
   14708:	mov	r2, #5
   1470c:	mov	r5, r0
   14710:	mov	r6, r1
   14714:	mov	r1, r0
   14718:	mov	r0, #0
   1471c:	bl	10e2c <dcgettext@plt>
   14720:	cmp	r5, r0
   14724:	mov	r4, r0
   14728:	beq	14734 <dcngettext@plt+0x371c>
   1472c:	mov	r0, r4
   14730:	pop	{r4, r5, r6, pc}
   14734:	bl	174bc <dcngettext@plt+0x64a4>
   14738:	ldrb	r3, [r0]
   1473c:	bic	r3, r3, #32
   14740:	cmp	r3, #85	; 0x55
   14744:	bne	147a4 <dcngettext@plt+0x378c>
   14748:	ldrb	r3, [r0, #1]
   1474c:	bic	r3, r3, #32
   14750:	cmp	r3, #84	; 0x54
   14754:	bne	1481c <dcngettext@plt+0x3804>
   14758:	ldrb	r3, [r0, #2]
   1475c:	bic	r3, r3, #32
   14760:	cmp	r3, #70	; 0x46
   14764:	bne	1481c <dcngettext@plt+0x3804>
   14768:	ldrb	r3, [r0, #3]
   1476c:	cmp	r3, #45	; 0x2d
   14770:	bne	1481c <dcngettext@plt+0x3804>
   14774:	ldrb	r3, [r0, #4]
   14778:	cmp	r3, #56	; 0x38
   1477c:	bne	1481c <dcngettext@plt+0x3804>
   14780:	ldrb	r3, [r0, #5]
   14784:	cmp	r3, #0
   14788:	bne	1481c <dcngettext@plt+0x3804>
   1478c:	ldrb	r2, [r4]
   14790:	ldr	r3, [pc, #156]	; 14834 <dcngettext@plt+0x381c>
   14794:	ldr	r4, [pc, #156]	; 14838 <dcngettext@plt+0x3820>
   14798:	cmp	r2, #96	; 0x60
   1479c:	movne	r4, r3
   147a0:	b	1472c <dcngettext@plt+0x3714>
   147a4:	cmp	r3, #71	; 0x47
   147a8:	bne	1481c <dcngettext@plt+0x3804>
   147ac:	ldrb	r3, [r0, #1]
   147b0:	bic	r3, r3, #32
   147b4:	cmp	r3, #66	; 0x42
   147b8:	bne	1481c <dcngettext@plt+0x3804>
   147bc:	ldrb	r3, [r0, #2]
   147c0:	cmp	r3, #49	; 0x31
   147c4:	bne	1481c <dcngettext@plt+0x3804>
   147c8:	ldrb	r3, [r0, #3]
   147cc:	cmp	r3, #56	; 0x38
   147d0:	bne	1481c <dcngettext@plt+0x3804>
   147d4:	ldrb	r3, [r0, #4]
   147d8:	cmp	r3, #48	; 0x30
   147dc:	bne	1481c <dcngettext@plt+0x3804>
   147e0:	ldrb	r3, [r0, #5]
   147e4:	cmp	r3, #51	; 0x33
   147e8:	bne	1481c <dcngettext@plt+0x3804>
   147ec:	ldrb	r3, [r0, #6]
   147f0:	cmp	r3, #48	; 0x30
   147f4:	bne	1481c <dcngettext@plt+0x3804>
   147f8:	ldrb	r3, [r0, #7]
   147fc:	cmp	r3, #0
   14800:	bne	1481c <dcngettext@plt+0x3804>
   14804:	ldrb	r2, [r4]
   14808:	ldr	r3, [pc, #44]	; 1483c <dcngettext@plt+0x3824>
   1480c:	ldr	r4, [pc, #44]	; 14840 <dcngettext@plt+0x3828>
   14810:	cmp	r2, #96	; 0x60
   14814:	movne	r4, r3
   14818:	b	1472c <dcngettext@plt+0x3714>
   1481c:	ldr	r3, [pc, #32]	; 14844 <dcngettext@plt+0x382c>
   14820:	ldr	r4, [pc, #32]	; 14848 <dcngettext@plt+0x3830>
   14824:	cmp	r6, #9
   14828:	movne	r4, r3
   1482c:	mov	r0, r4
   14830:	pop	{r4, r5, r6, pc}
   14834:	andeq	r8, r1, r8, asr #13
   14838:	ldrdeq	r8, [r1], -r4
   1483c:	andeq	r8, r1, ip, asr #13
   14840:	ldrdeq	r8, [r1], -r0
   14844:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   14848:	andeq	r8, r1, r4, asr #13
   1484c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14850:	sub	sp, sp, #124	; 0x7c
   14854:	ldr	ip, [pc, #3576]	; 15654 <dcngettext@plt+0x463c>
   14858:	str	r3, [sp, #24]
   1485c:	ldr	r3, [sp, #168]	; 0xa8
   14860:	ldr	ip, [ip]
   14864:	str	r3, [sp, #56]	; 0x38
   14868:	ldr	r3, [sp, #172]	; 0xac
   1486c:	ldr	r8, [sp, #160]	; 0xa0
   14870:	str	r3, [sp, #80]	; 0x50
   14874:	ldr	r3, [sp, #176]	; 0xb0
   14878:	mov	fp, r0
   1487c:	str	r3, [sp, #76]	; 0x4c
   14880:	mov	sl, r1
   14884:	str	r2, [sp, #36]	; 0x24
   14888:	str	ip, [sp, #116]	; 0x74
   1488c:	bl	10e80 <__ctype_get_mb_cur_max@plt>
   14890:	ldr	r3, [sp, #164]	; 0xa4
   14894:	ands	r4, r3, #2
   14898:	movne	r3, #1
   1489c:	moveq	r3, #0
   148a0:	str	r3, [sp, #32]
   148a4:	str	r0, [sp, #64]	; 0x40
   148a8:	cmp	r8, #10
   148ac:	ldrls	pc, [pc, r8, lsl #2]
   148b0:	b	16060 <dcngettext@plt+0x5048>
   148b4:	andeq	r4, r1, r8, lsr #25
   148b8:	andeq	r4, r1, r0, asr #26
   148bc:	andeq	r5, r1, r0, asr #6
   148c0:	andeq	r4, r1, r0, ror #26
   148c4:	andeq	r4, r1, r4, lsl ip
   148c8:	andeq	r4, r1, ip, asr ip
   148cc:	ldrdeq	r4, [r1], -r8
   148d0:	andeq	r4, r1, r0, lsl sp
   148d4:	andeq	r4, r1, r0, ror #17
   148d8:	andeq	r4, r1, r0, ror #17
   148dc:	andeq	r4, r1, r0, ror #17
   148e0:	cmp	r8, #10
   148e4:	beq	14908 <dcngettext@plt+0x38f0>
   148e8:	mov	r1, r8
   148ec:	ldr	r0, [pc, #3428]	; 15658 <dcngettext@plt+0x4640>
   148f0:	bl	14704 <dcngettext@plt+0x36ec>
   148f4:	mov	r1, r8
   148f8:	str	r0, [sp, #80]	; 0x50
   148fc:	ldr	r0, [pc, #3420]	; 15660 <dcngettext@plt+0x4648>
   14900:	bl	14704 <dcngettext@plt+0x36ec>
   14904:	str	r0, [sp, #76]	; 0x4c
   14908:	cmp	r4, #0
   1490c:	movne	r4, #0
   14910:	beq	15d20 <dcngettext@plt+0x4d08>
   14914:	ldr	r7, [sp, #76]	; 0x4c
   14918:	mov	r5, #0
   1491c:	mov	r6, #1
   14920:	mov	r0, r7
   14924:	str	r6, [sp, #40]	; 0x28
   14928:	str	r5, [sp, #68]	; 0x44
   1492c:	bl	10f10 <strlen@plt>
   14930:	str	r6, [sp, #28]
   14934:	str	r5, [sp, #44]	; 0x2c
   14938:	str	r5, [sp, #72]	; 0x48
   1493c:	str	r7, [sp, #60]	; 0x3c
   14940:	str	r0, [sp, #52]	; 0x34
   14944:	str	r8, [sp, #160]	; 0xa0
   14948:	mov	r8, fp
   1494c:	ldr	fp, [sp, #160]	; 0xa0
   14950:	mov	r9, #0
   14954:	ldr	r3, [sp, #24]
   14958:	cmn	r3, #1
   1495c:	beq	14ec4 <dcngettext@plt+0x3eac>
   14960:	ldr	r3, [sp, #24]
   14964:	subs	r6, r3, r9
   14968:	movne	r6, #1
   1496c:	cmp	r6, #0
   14970:	beq	14edc <dcngettext@plt+0x3ec4>
   14974:	ldr	r7, [sp, #28]
   14978:	ldr	r0, [sp, #36]	; 0x24
   1497c:	cmp	fp, #2
   14980:	moveq	r7, #0
   14984:	andne	r7, r7, #1
   14988:	add	r3, r0, r9
   1498c:	cmp	r7, #0
   14990:	str	r3, [sp, #48]	; 0x30
   14994:	beq	15380 <dcngettext@plt+0x4368>
   14998:	ldr	r2, [sp, #52]	; 0x34
   1499c:	cmp	r2, #0
   149a0:	beq	15664 <dcngettext@plt+0x464c>
   149a4:	ldr	r1, [sp, #24]
   149a8:	cmp	r2, #1
   149ac:	mov	r3, r2
   149b0:	movls	r3, #0
   149b4:	movhi	r3, #1
   149b8:	cmn	r1, #1
   149bc:	movne	r3, #0
   149c0:	cmp	r3, #0
   149c4:	add	r5, r9, r2
   149c8:	beq	149d4 <dcngettext@plt+0x39bc>
   149cc:	bl	10f10 <strlen@plt>
   149d0:	str	r0, [sp, #24]
   149d4:	ldr	r3, [sp, #24]
   149d8:	cmp	r5, r3
   149dc:	bhi	15664 <dcngettext@plt+0x464c>
   149e0:	ldr	r2, [sp, #52]	; 0x34
   149e4:	ldr	r1, [sp, #60]	; 0x3c
   149e8:	ldr	r0, [sp, #48]	; 0x30
   149ec:	bl	10e20 <memcmp@plt>
   149f0:	cmp	r0, #0
   149f4:	bne	15664 <dcngettext@plt+0x464c>
   149f8:	ldr	r3, [sp, #32]
   149fc:	cmp	r3, #0
   14a00:	bne	15f20 <dcngettext@plt+0x4f08>
   14a04:	ldr	r3, [sp, #48]	; 0x30
   14a08:	ldrb	r5, [r3]
   14a0c:	cmp	r5, #126	; 0x7e
   14a10:	ldrls	pc, [pc, r5, lsl #2]
   14a14:	b	152e4 <dcngettext@plt+0x42cc>
   14a18:	ldrdeq	r5, [r1], -r0
   14a1c:	andeq	r5, r1, r4, ror #5
   14a20:	andeq	r5, r1, r4, ror #5
   14a24:	andeq	r5, r1, r4, ror #5
   14a28:	andeq	r5, r1, r4, ror #5
   14a2c:	andeq	r5, r1, r4, ror #5
   14a30:	andeq	r5, r1, r4, ror #5
   14a34:	muleq	r1, ip, r2
   14a38:	andeq	r5, r1, ip, lsl #5
   14a3c:	andeq	r5, r1, ip, lsl #3
   14a40:	andeq	r5, r1, r4, asr r1
   14a44:	andeq	r5, r1, ip, lsr #3
   14a48:	muleq	r1, r4, r1
   14a4c:	andeq	r5, r1, r4, asr #1
   14a50:	andeq	r5, r1, r4, ror #5
   14a54:	andeq	r5, r1, r4, ror #5
   14a58:	andeq	r5, r1, r4, ror #5
   14a5c:	andeq	r5, r1, r4, ror #5
   14a60:	andeq	r5, r1, r4, ror #5
   14a64:	andeq	r5, r1, r4, ror #5
   14a68:	andeq	r5, r1, r4, ror #5
   14a6c:	andeq	r5, r1, r4, ror #5
   14a70:	andeq	r5, r1, r4, ror #5
   14a74:	andeq	r5, r1, r4, ror #5
   14a78:	andeq	r5, r1, r4, ror #5
   14a7c:	andeq	r5, r1, r4, ror #5
   14a80:	andeq	r5, r1, r4, ror #5
   14a84:	andeq	r5, r1, r4, ror #5
   14a88:	andeq	r5, r1, r4, ror #5
   14a8c:	andeq	r5, r1, r4, ror #5
   14a90:	andeq	r5, r1, r4, ror #5
   14a94:	andeq	r5, r1, r4, ror #5
   14a98:	andeq	r5, r1, r4, lsr #5
   14a9c:			; <UNDEFINED> instruction: 0x000151b8
   14aa0:			; <UNDEFINED> instruction: 0x000151b8
   14aa4:			; <UNDEFINED> instruction: 0x000152bc
   14aa8:			; <UNDEFINED> instruction: 0x000151b8
   14aac:	ldrdeq	r5, [r1], -r8
   14ab0:			; <UNDEFINED> instruction: 0x000151b8
   14ab4:	strdeq	r4, [r1], -r8
   14ab8:			; <UNDEFINED> instruction: 0x000151b8
   14abc:			; <UNDEFINED> instruction: 0x000151b8
   14ac0:			; <UNDEFINED> instruction: 0x000151b8
   14ac4:	ldrdeq	r5, [r1], -r8
   14ac8:	ldrdeq	r5, [r1], -r8
   14acc:	ldrdeq	r5, [r1], -r8
   14ad0:	ldrdeq	r5, [r1], -r8
   14ad4:	ldrdeq	r5, [r1], -r8
   14ad8:	ldrdeq	r5, [r1], -r8
   14adc:	ldrdeq	r5, [r1], -r8
   14ae0:	ldrdeq	r5, [r1], -r8
   14ae4:	ldrdeq	r5, [r1], -r8
   14ae8:	ldrdeq	r5, [r1], -r8
   14aec:	ldrdeq	r5, [r1], -r8
   14af0:	ldrdeq	r5, [r1], -r8
   14af4:	ldrdeq	r5, [r1], -r8
   14af8:	ldrdeq	r5, [r1], -r8
   14afc:	ldrdeq	r5, [r1], -r8
   14b00:	ldrdeq	r5, [r1], -r8
   14b04:			; <UNDEFINED> instruction: 0x000151b8
   14b08:			; <UNDEFINED> instruction: 0x000151b8
   14b0c:			; <UNDEFINED> instruction: 0x000151b8
   14b10:			; <UNDEFINED> instruction: 0x000151b8
   14b14:	andeq	r4, r1, ip, asr #31
   14b18:	andeq	r5, r1, r4, ror #5
   14b1c:	ldrdeq	r5, [r1], -r8
   14b20:	ldrdeq	r5, [r1], -r8
   14b24:	ldrdeq	r5, [r1], -r8
   14b28:	ldrdeq	r5, [r1], -r8
   14b2c:	ldrdeq	r5, [r1], -r8
   14b30:	ldrdeq	r5, [r1], -r8
   14b34:	ldrdeq	r5, [r1], -r8
   14b38:	ldrdeq	r5, [r1], -r8
   14b3c:	ldrdeq	r5, [r1], -r8
   14b40:	ldrdeq	r5, [r1], -r8
   14b44:	ldrdeq	r5, [r1], -r8
   14b48:	ldrdeq	r5, [r1], -r8
   14b4c:	ldrdeq	r5, [r1], -r8
   14b50:	ldrdeq	r5, [r1], -r8
   14b54:	ldrdeq	r5, [r1], -r8
   14b58:	ldrdeq	r5, [r1], -r8
   14b5c:	ldrdeq	r5, [r1], -r8
   14b60:	ldrdeq	r5, [r1], -r8
   14b64:	ldrdeq	r5, [r1], -r8
   14b68:	ldrdeq	r5, [r1], -r8
   14b6c:	ldrdeq	r5, [r1], -r8
   14b70:	ldrdeq	r5, [r1], -r8
   14b74:	ldrdeq	r5, [r1], -r8
   14b78:	ldrdeq	r5, [r1], -r8
   14b7c:	ldrdeq	r5, [r1], -r8
   14b80:	ldrdeq	r5, [r1], -r8
   14b84:			; <UNDEFINED> instruction: 0x000151b8
   14b88:	andeq	r4, r1, r4, lsl #31
   14b8c:	ldrdeq	r5, [r1], -r8
   14b90:			; <UNDEFINED> instruction: 0x000151b8
   14b94:	ldrdeq	r5, [r1], -r8
   14b98:			; <UNDEFINED> instruction: 0x000151b8
   14b9c:	ldrdeq	r5, [r1], -r8
   14ba0:	ldrdeq	r5, [r1], -r8
   14ba4:	ldrdeq	r5, [r1], -r8
   14ba8:	ldrdeq	r5, [r1], -r8
   14bac:	ldrdeq	r5, [r1], -r8
   14bb0:	ldrdeq	r5, [r1], -r8
   14bb4:	ldrdeq	r5, [r1], -r8
   14bb8:	ldrdeq	r5, [r1], -r8
   14bbc:	ldrdeq	r5, [r1], -r8
   14bc0:	ldrdeq	r5, [r1], -r8
   14bc4:	ldrdeq	r5, [r1], -r8
   14bc8:	ldrdeq	r5, [r1], -r8
   14bcc:	ldrdeq	r5, [r1], -r8
   14bd0:	ldrdeq	r5, [r1], -r8
   14bd4:	ldrdeq	r5, [r1], -r8
   14bd8:	ldrdeq	r5, [r1], -r8
   14bdc:	ldrdeq	r5, [r1], -r8
   14be0:	ldrdeq	r5, [r1], -r8
   14be4:	ldrdeq	r5, [r1], -r8
   14be8:	ldrdeq	r5, [r1], -r8
   14bec:	ldrdeq	r5, [r1], -r8
   14bf0:	ldrdeq	r5, [r1], -r8
   14bf4:	ldrdeq	r5, [r1], -r8
   14bf8:	ldrdeq	r5, [r1], -r8
   14bfc:	ldrdeq	r5, [r1], -r8
   14c00:	ldrdeq	r5, [r1], -r8
   14c04:	muleq	r1, ip, sp
   14c08:			; <UNDEFINED> instruction: 0x000151b8
   14c0c:	muleq	r1, ip, sp
   14c10:			; <UNDEFINED> instruction: 0x000152bc
   14c14:	cmp	r4, #0
   14c18:	moveq	r3, #1
   14c1c:	streq	r3, [sp, #28]
   14c20:	beq	1534c <dcngettext@plt+0x4334>
   14c24:	mov	r3, #0
   14c28:	mov	r4, r3
   14c2c:	mov	r2, #1
   14c30:	str	r2, [sp, #40]	; 0x28
   14c34:	str	r3, [sp, #68]	; 0x44
   14c38:	str	r2, [sp, #32]
   14c3c:	str	r2, [sp, #52]	; 0x34
   14c40:	ldr	r3, [pc, #2584]	; 15660 <dcngettext@plt+0x4648>
   14c44:	str	r4, [sp, #44]	; 0x2c
   14c48:	str	r4, [sp, #72]	; 0x48
   14c4c:	str	r4, [sp, #28]
   14c50:	str	r3, [sp, #60]	; 0x3c
   14c54:	mov	r8, #2
   14c58:	b	14944 <dcngettext@plt+0x392c>
   14c5c:	cmp	r4, #0
   14c60:	bne	15eec <dcngettext@plt+0x4ed4>
   14c64:	cmp	sl, #0
   14c68:	beq	15cac <dcngettext@plt+0x4c94>
   14c6c:	mov	r3, #34	; 0x22
   14c70:	strb	r3, [fp]
   14c74:	ldr	r3, [pc, #2528]	; 1565c <dcngettext@plt+0x4644>
   14c78:	mov	r1, r4
   14c7c:	mov	r2, #1
   14c80:	str	r4, [sp, #68]	; 0x44
   14c84:	str	r2, [sp, #40]	; 0x28
   14c88:	mov	r4, r2
   14c8c:	str	r1, [sp, #44]	; 0x2c
   14c90:	str	r1, [sp, #72]	; 0x48
   14c94:	str	r1, [sp, #32]
   14c98:	str	r2, [sp, #28]
   14c9c:	str	r2, [sp, #52]	; 0x34
   14ca0:	str	r3, [sp, #60]	; 0x3c
   14ca4:	b	14944 <dcngettext@plt+0x392c>
   14ca8:	mov	r3, #0
   14cac:	str	r3, [sp, #68]	; 0x44
   14cb0:	str	r3, [sp, #44]	; 0x2c
   14cb4:	str	r3, [sp, #32]
   14cb8:	str	r3, [sp, #28]
   14cbc:	str	r3, [sp, #60]	; 0x3c
   14cc0:	mov	r3, #1
   14cc4:	str	r8, [sp, #72]	; 0x48
   14cc8:	str	r8, [sp, #52]	; 0x34
   14ccc:	mov	r4, r8
   14cd0:	str	r3, [sp, #40]	; 0x28
   14cd4:	b	14944 <dcngettext@plt+0x392c>
   14cd8:	mov	r3, #1
   14cdc:	str	r3, [sp, #40]	; 0x28
   14ce0:	str	r3, [sp, #32]
   14ce4:	str	r3, [sp, #28]
   14ce8:	str	r3, [sp, #52]	; 0x34
   14cec:	ldr	r3, [pc, #2408]	; 1565c <dcngettext@plt+0x4644>
   14cf0:	mov	r2, #0
   14cf4:	mov	r4, r2
   14cf8:	str	r2, [sp, #68]	; 0x44
   14cfc:	str	r2, [sp, #44]	; 0x2c
   14d00:	str	r2, [sp, #72]	; 0x48
   14d04:	str	r3, [sp, #60]	; 0x3c
   14d08:	mov	r8, #5
   14d0c:	b	14944 <dcngettext@plt+0x392c>
   14d10:	mov	r3, #0
   14d14:	mov	r2, #1
   14d18:	str	r2, [sp, #40]	; 0x28
   14d1c:	mov	r4, r3
   14d20:	str	r3, [sp, #68]	; 0x44
   14d24:	str	r2, [sp, #28]
   14d28:	str	r3, [sp, #44]	; 0x2c
   14d2c:	str	r3, [sp, #72]	; 0x48
   14d30:	str	r3, [sp, #32]
   14d34:	str	r3, [sp, #52]	; 0x34
   14d38:	str	r3, [sp, #60]	; 0x3c
   14d3c:	b	14944 <dcngettext@plt+0x392c>
   14d40:	mov	r2, #1
   14d44:	mov	r3, #0
   14d48:	str	r2, [sp, #40]	; 0x28
   14d4c:	mov	r4, r3
   14d50:	str	r3, [sp, #68]	; 0x44
   14d54:	str	r8, [sp, #52]	; 0x34
   14d58:	str	r2, [sp, #32]
   14d5c:	b	14c40 <dcngettext@plt+0x3c28>
   14d60:	mov	r3, #1
   14d64:	str	r3, [sp, #40]	; 0x28
   14d68:	str	r3, [sp, #32]
   14d6c:	str	r3, [sp, #28]
   14d70:	str	r3, [sp, #52]	; 0x34
   14d74:	ldr	r3, [pc, #2276]	; 15660 <dcngettext@plt+0x4648>
   14d78:	mov	r2, #0
   14d7c:	mov	r4, r2
   14d80:	str	r2, [sp, #68]	; 0x44
   14d84:	str	r2, [sp, #44]	; 0x2c
   14d88:	str	r2, [sp, #72]	; 0x48
   14d8c:	str	r3, [sp, #60]	; 0x3c
   14d90:	mov	r8, #2
   14d94:	b	14944 <dcngettext@plt+0x392c>
   14d98:	mov	r7, #0
   14d9c:	ldr	r3, [sp, #24]
   14da0:	cmn	r3, #1
   14da4:	beq	158e0 <dcngettext@plt+0x48c8>
   14da8:	ldr	r3, [sp, #24]
   14dac:	subs	r3, r3, #1
   14db0:	movne	r3, #1
   14db4:	cmp	r3, #0
   14db8:	sub	r2, fp, #2
   14dbc:	clz	r2, r2
   14dc0:	lsr	r2, r2, #5
   14dc4:	bne	14fc0 <dcngettext@plt+0x3fa8>
   14dc8:	cmp	r9, #0
   14dcc:	bne	14fc0 <dcngettext@plt+0x3fa8>
   14dd0:	ldr	r3, [sp, #32]
   14dd4:	tst	r3, r2
   14dd8:	bne	150e0 <dcngettext@plt+0x40c8>
   14ddc:	ldr	r3, [sp, #28]
   14de0:	eor	r3, r3, #1
   14de4:	orr	r3, r2, r3
   14de8:	ldr	r2, [sp, #32]
   14dec:	eor	r3, r3, #1
   14df0:	orrs	r3, r2, r3
   14df4:	beq	14e24 <dcngettext@plt+0x3e0c>
   14df8:	mov	r3, #0
   14dfc:	ldr	r1, [sp, #56]	; 0x38
   14e00:	cmp	r1, #0
   14e04:	beq	14e24 <dcngettext@plt+0x3e0c>
   14e08:	lsr	r2, r5, #5
   14e0c:	and	r0, r5, #31
   14e10:	uxtb	r2, r2
   14e14:	ldr	r1, [r1, r2, lsl #2]
   14e18:	lsr	r2, r1, r0
   14e1c:	tst	r2, #1
   14e20:	bne	14e2c <dcngettext@plt+0x3e14>
   14e24:	cmp	r7, #0
   14e28:	beq	1507c <dcngettext@plt+0x4064>
   14e2c:	sub	r2, fp, #2
   14e30:	clz	r2, r2
   14e34:	lsr	r2, r2, #5
   14e38:	ldr	r3, [sp, #32]
   14e3c:	cmp	r3, #0
   14e40:	bne	1516c <dcngettext@plt+0x4154>
   14e44:	ldr	r3, [sp, #44]	; 0x2c
   14e48:	eor	r3, r3, #1
   14e4c:	ands	r3, r2, r3
   14e50:	beq	14e88 <dcngettext@plt+0x3e70>
   14e54:	cmp	sl, r4
   14e58:	movhi	r2, #39	; 0x27
   14e5c:	strbhi	r2, [r8, r4]
   14e60:	add	r2, r4, #1
   14e64:	cmp	r2, sl
   14e68:	movcc	r1, #36	; 0x24
   14e6c:	strbcc	r1, [r8, r2]
   14e70:	add	r2, r4, #2
   14e74:	cmp	r2, sl
   14e78:	add	r4, r4, #3
   14e7c:	movcc	r1, #39	; 0x27
   14e80:	strbcc	r1, [r8, r2]
   14e84:	str	r3, [sp, #44]	; 0x2c
   14e88:	cmp	r4, sl
   14e8c:	movcc	r3, #92	; 0x5c
   14e90:	strbcc	r3, [r8, r4]
   14e94:	add	r9, r9, #1
   14e98:	add	r4, r4, #1
   14e9c:	cmp	r4, sl
   14ea0:	ldr	r3, [sp, #40]	; 0x28
   14ea4:	strbcc	r5, [r8, r4]
   14ea8:	cmp	r6, #0
   14eac:	moveq	r3, #0
   14eb0:	str	r3, [sp, #40]	; 0x28
   14eb4:	ldr	r3, [sp, #24]
   14eb8:	add	r4, r4, #1
   14ebc:	cmn	r3, #1
   14ec0:	bne	14960 <dcngettext@plt+0x3948>
   14ec4:	ldr	r3, [sp, #36]	; 0x24
   14ec8:	ldrb	r6, [r3, r9]
   14ecc:	adds	r6, r6, #0
   14ed0:	movne	r6, #1
   14ed4:	cmp	r6, #0
   14ed8:	bne	14974 <dcngettext@plt+0x395c>
   14edc:	str	fp, [sp, #160]	; 0xa0
   14ee0:	mov	fp, r8
   14ee4:	ldr	r8, [sp, #160]	; 0xa0
   14ee8:	ldr	r1, [sp, #32]
   14eec:	cmp	r4, #0
   14ef0:	sub	r2, r8, #2
   14ef4:	clz	r2, r2
   14ef8:	lsr	r2, r2, #5
   14efc:	andeq	r3, r2, r1
   14f00:	movne	r3, #0
   14f04:	cmp	r3, #0
   14f08:	bne	15ff4 <dcngettext@plt+0x4fdc>
   14f0c:	eor	r3, r1, #1
   14f10:	ands	r2, r2, r3
   14f14:	beq	15f30 <dcngettext@plt+0x4f18>
   14f18:	ldr	r3, [sp, #68]	; 0x44
   14f1c:	cmp	r3, #0
   14f20:	beq	15f34 <dcngettext@plt+0x4f1c>
   14f24:	ldr	r3, [sp, #40]	; 0x28
   14f28:	cmp	r3, #0
   14f2c:	bne	15fb0 <dcngettext@plt+0x4f98>
   14f30:	ldr	r3, [sp, #72]	; 0x48
   14f34:	adds	r3, r3, #0
   14f38:	movne	r3, #1
   14f3c:	cmp	sl, #0
   14f40:	movne	r3, #0
   14f44:	cmp	r3, #0
   14f48:	ldreq	r2, [sp, #68]	; 0x44
   14f4c:	beq	15f34 <dcngettext@plt+0x4f1c>
   14f50:	ldr	sl, [sp, #72]	; 0x48
   14f54:	str	r3, [sp, #68]	; 0x44
   14f58:	ldr	r3, [pc, #1792]	; 15660 <dcngettext@plt+0x4648>
   14f5c:	mov	r2, #39	; 0x27
   14f60:	mov	r4, #1
   14f64:	str	r3, [sp, #60]	; 0x3c
   14f68:	mov	r3, #0
   14f6c:	strb	r2, [fp]
   14f70:	str	r4, [sp, #52]	; 0x34
   14f74:	mov	r8, #2
   14f78:	str	r3, [sp, #32]
   14f7c:	b	14944 <dcngettext@plt+0x392c>
   14f80:	mov	r7, #0
   14f84:	cmp	fp, #2
   14f88:	beq	158c0 <dcngettext@plt+0x48a8>
   14f8c:	ldr	r3, [sp, #52]	; 0x34
   14f90:	ldr	r2, [sp, #28]
   14f94:	ldr	r1, [sp, #32]
   14f98:	cmp	r3, #0
   14f9c:	andne	r2, r2, r1
   14fa0:	moveq	r2, #0
   14fa4:	cmp	r2, #0
   14fa8:	moveq	r5, #92	; 0x5c
   14fac:	moveq	r3, r5
   14fb0:	bne	158cc <dcngettext@plt+0x48b4>
   14fb4:	ldr	r1, [sp, #28]
   14fb8:	cmp	r1, #0
   14fbc:	bne	1603c <dcngettext@plt+0x5024>
   14fc0:	mov	r6, #0
   14fc4:	b	14ddc <dcngettext@plt+0x3dc4>
   14fc8:	mov	r7, #0
   14fcc:	cmp	fp, #2
   14fd0:	beq	15930 <dcngettext@plt+0x4918>
   14fd4:	cmp	fp, #5
   14fd8:	beq	158f4 <dcngettext@plt+0x48dc>
   14fdc:	sub	r2, fp, #2
   14fe0:	mov	r6, #0
   14fe4:	clz	r2, r2
   14fe8:	mov	r5, #63	; 0x3f
   14fec:	lsr	r2, r2, #5
   14ff0:	b	14ddc <dcngettext@plt+0x3dc4>
   14ff4:	mov	r7, #0
   14ff8:	cmp	fp, #2
   14ffc:	strne	r6, [sp, #68]	; 0x44
   15000:	movne	r2, #0
   15004:	movne	r5, #39	; 0x27
   15008:	bne	14ddc <dcngettext@plt+0x3dc4>
   1500c:	ldr	r3, [sp, #32]
   15010:	cmp	r3, #0
   15014:	bne	15d10 <dcngettext@plt+0x4cf8>
   15018:	cmp	sl, #0
   1501c:	ldr	r3, [sp, #72]	; 0x48
   15020:	clz	r3, r3
   15024:	lsr	r3, r3, #5
   15028:	moveq	r3, #0
   1502c:	cmp	r3, #0
   15030:	bne	15c44 <dcngettext@plt+0x4c2c>
   15034:	cmp	sl, r4
   15038:	movhi	r3, #39	; 0x27
   1503c:	strbhi	r3, [r8, r4]
   15040:	add	r3, r4, #1
   15044:	cmp	sl, r3
   15048:	movhi	r2, #92	; 0x5c
   1504c:	strbhi	r2, [r8, r3]
   15050:	add	r3, r4, #2
   15054:	cmp	sl, r3
   15058:	movhi	r2, #39	; 0x27
   1505c:	strbhi	r2, [r8, r3]
   15060:	mov	r3, #0
   15064:	cmp	r7, #0
   15068:	add	r4, r4, #3
   1506c:	str	r3, [sp, #44]	; 0x2c
   15070:	str	r6, [sp, #68]	; 0x44
   15074:	mov	r5, #39	; 0x27
   15078:	bne	14e2c <dcngettext@plt+0x3e14>
   1507c:	ldr	r2, [sp, #44]	; 0x2c
   15080:	eor	r3, r3, #1
   15084:	and	r3, r3, r2
   15088:	add	r9, r9, #1
   1508c:	uxtb	r3, r3
   15090:	cmp	r3, #0
   15094:	beq	14e9c <dcngettext@plt+0x3e84>
   15098:	cmp	sl, r4
   1509c:	movhi	r3, #39	; 0x27
   150a0:	strbhi	r3, [r8, r4]
   150a4:	add	r3, r4, #1
   150a8:	cmp	sl, r3
   150ac:	movhi	r2, #39	; 0x27
   150b0:	strbhi	r2, [r8, r3]
   150b4:	mov	r3, #0
   150b8:	add	r4, r4, #2
   150bc:	str	r3, [sp, #44]	; 0x2c
   150c0:	b	14e9c <dcngettext@plt+0x3e84>
   150c4:	mov	r3, #114	; 0x72
   150c8:	ldr	r1, [sp, #32]
   150cc:	sub	r2, fp, #2
   150d0:	clz	r2, r2
   150d4:	lsr	r2, r2, #5
   150d8:	tst	r2, r1
   150dc:	beq	14fb4 <dcngettext@plt+0x3f9c>
   150e0:	mov	fp, r8
   150e4:	mov	r8, #2
   150e8:	ldr	r3, [sp, #28]
   150ec:	cmp	r3, #0
   150f0:	movne	r8, #4
   150f4:	ldr	r3, [sp, #164]	; 0xa4
   150f8:	mov	ip, #0
   150fc:	bic	r3, r3, #2
   15100:	str	r3, [sp, #4]
   15104:	ldr	r3, [sp, #76]	; 0x4c
   15108:	str	r8, [sp]
   1510c:	str	r3, [sp, #16]
   15110:	ldr	r3, [sp, #80]	; 0x50
   15114:	ldr	r2, [sp, #36]	; 0x24
   15118:	str	r3, [sp, #12]
   1511c:	mov	r1, sl
   15120:	ldr	r3, [sp, #24]
   15124:	mov	r0, fp
   15128:	str	ip, [sp, #8]
   1512c:	bl	1484c <dcngettext@plt+0x3834>
   15130:	mov	r4, r0
   15134:	ldr	r3, [pc, #1304]	; 15654 <dcngettext@plt+0x463c>
   15138:	ldr	r2, [sp, #116]	; 0x74
   1513c:	mov	r0, r4
   15140:	ldr	r3, [r3]
   15144:	cmp	r2, r3
   15148:	bne	16038 <dcngettext@plt+0x5020>
   1514c:	add	sp, sp, #124	; 0x7c
   15150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15154:	mov	r5, #110	; 0x6e
   15158:	ldr	r3, [sp, #32]
   1515c:	mov	r2, #0
   15160:	cmp	r3, #0
   15164:	mov	r6, r2
   15168:	beq	14e44 <dcngettext@plt+0x3e2c>
   1516c:	str	fp, [sp, #160]	; 0xa0
   15170:	mov	fp, r8
   15174:	ldr	r8, [sp, #160]	; 0xa0
   15178:	mov	r3, r2
   1517c:	ldr	r2, [sp, #28]
   15180:	and	r2, r2, r3
   15184:	str	r2, [sp, #28]
   15188:	b	150e8 <dcngettext@plt+0x40d0>
   1518c:	mov	r5, #116	; 0x74
   15190:	b	15158 <dcngettext@plt+0x4140>
   15194:	mov	r5, #102	; 0x66
   15198:	ldr	r3, [sp, #32]
   1519c:	cmp	r3, #0
   151a0:	bne	15d4c <dcngettext@plt+0x4d34>
   151a4:	mov	r6, #0
   151a8:	b	14e88 <dcngettext@plt+0x3e70>
   151ac:	mov	r5, #118	; 0x76
   151b0:	b	15198 <dcngettext@plt+0x4180>
   151b4:	mov	r7, #0
   151b8:	mov	r6, #0
   151bc:	b	14df8 <dcngettext@plt+0x3de0>
   151c0:	ldr	r3, [sp, #32]
   151c4:	cmp	r3, #0
   151c8:	bne	15f90 <dcngettext@plt+0x4f78>
   151cc:	mov	r7, r3
   151d0:	ldr	r3, [sp, #44]	; 0x2c
   151d4:	sub	r2, fp, #2
   151d8:	eor	r3, r3, #1
   151dc:	clz	r2, r2
   151e0:	lsr	r2, r2, #5
   151e4:	ands	r3, r2, r3
   151e8:	beq	15c30 <dcngettext@plt+0x4c18>
   151ec:	cmp	sl, r4
   151f0:	movhi	r1, #39	; 0x27
   151f4:	strbhi	r1, [r8, r4]
   151f8:	add	r1, r4, #1
   151fc:	cmp	sl, r1
   15200:	movhi	r0, #36	; 0x24
   15204:	strbhi	r0, [r8, r1]
   15208:	add	r1, r4, #2
   1520c:	cmp	sl, r1
   15210:	movhi	r0, #39	; 0x27
   15214:	strbhi	r0, [r8, r1]
   15218:	add	r1, r4, #3
   1521c:	cmp	sl, r1
   15220:	bls	15c90 <dcngettext@plt+0x4c78>
   15224:	mov	r4, r1
   15228:	mov	r1, #92	; 0x5c
   1522c:	strb	r1, [r8, r4]
   15230:	mov	r1, r4
   15234:	str	r3, [sp, #44]	; 0x2c
   15238:	cmp	fp, #2
   1523c:	add	r4, r4, #1
   15240:	beq	15cd8 <dcngettext@plt+0x4cc0>
   15244:	ldr	r0, [sp, #24]
   15248:	add	r3, r9, #1
   1524c:	cmp	r3, r0
   15250:	bcs	15268 <dcngettext@plt+0x4250>
   15254:	ldr	r0, [sp, #36]	; 0x24
   15258:	ldrb	r3, [r0, r3]
   1525c:	sub	r3, r3, #48	; 0x30
   15260:	cmp	r3, #9
   15264:	bls	15ce8 <dcngettext@plt+0x4cd0>
   15268:	mov	r5, #48	; 0x30
   1526c:	ldr	r3, [sp, #28]
   15270:	eor	r3, r3, #1
   15274:	orrs	r2, r2, r3
   15278:	mov	r3, r6
   1527c:	moveq	r6, r2
   15280:	beq	14dfc <dcngettext@plt+0x3de4>
   15284:	mov	r6, #0
   15288:	b	14e24 <dcngettext@plt+0x3e0c>
   1528c:	mov	r2, #0
   15290:	mov	r6, r2
   15294:	mov	r5, #98	; 0x62
   15298:	b	14e44 <dcngettext@plt+0x3e2c>
   1529c:	mov	r5, #97	; 0x61
   152a0:	b	151a4 <dcngettext@plt+0x418c>
   152a4:	mov	r3, r7
   152a8:	mov	r6, r7
   152ac:	mov	r2, #0
   152b0:	mov	r7, r3
   152b4:	mov	r5, #32
   152b8:	b	14ddc <dcngettext@plt+0x3dc4>
   152bc:	cmp	r9, #0
   152c0:	mov	r3, r7
   152c4:	bne	1588c <dcngettext@plt+0x4874>
   152c8:	mov	r6, r7
   152cc:	mov	r2, r9
   152d0:	mov	r7, r3
   152d4:	b	14ddc <dcngettext@plt+0x3dc4>
   152d8:	mov	r6, r7
   152dc:	b	14df8 <dcngettext@plt+0x3de0>
   152e0:	mov	r7, #0
   152e4:	ldr	r3, [sp, #64]	; 0x40
   152e8:	cmp	r3, #1
   152ec:	bne	15948 <dcngettext@plt+0x4930>
   152f0:	bl	10ef8 <__ctype_b_loc@plt>
   152f4:	ldr	r2, [sp, #64]	; 0x40
   152f8:	sxth	r3, r5
   152fc:	mov	ip, r2
   15300:	lsl	r3, r3, #1
   15304:	ldr	r2, [r0]
   15308:	ldrh	r3, [r2, r3]
   1530c:	and	r3, r3, #16384	; 0x4000
   15310:	cmp	r3, #0
   15314:	ldr	r3, [sp, #28]
   15318:	movne	r6, #1
   1531c:	moveq	r6, #0
   15320:	movne	r2, #0
   15324:	andeq	r2, r3, #1
   15328:	cmp	r2, #0
   1532c:	bne	15c58 <dcngettext@plt+0x4c40>
   15330:	sub	r2, fp, #2
   15334:	clz	r2, r2
   15338:	lsr	r2, r2, #5
   1533c:	b	14ddc <dcngettext@plt+0x3dc4>
   15340:	cmp	r4, #0
   15344:	bne	16004 <dcngettext@plt+0x4fec>
   15348:	str	r4, [sp, #28]
   1534c:	cmp	sl, #0
   15350:	bne	16048 <dcngettext@plt+0x5030>
   15354:	ldr	r3, [pc, #772]	; 15660 <dcngettext@plt+0x4648>
   15358:	mov	r4, #1
   1535c:	str	r4, [sp, #40]	; 0x28
   15360:	str	r3, [sp, #60]	; 0x3c
   15364:	str	r4, [sp, #52]	; 0x34
   15368:	str	sl, [sp, #72]	; 0x48
   1536c:	str	sl, [sp, #68]	; 0x44
   15370:	str	sl, [sp, #44]	; 0x2c
   15374:	str	sl, [sp, #32]
   15378:	mov	r8, #2
   1537c:	b	14944 <dcngettext@plt+0x392c>
   15380:	ldr	r3, [sp, #36]	; 0x24
   15384:	ldrb	r5, [r3, r9]
   15388:	cmp	r5, #126	; 0x7e
   1538c:	ldrls	pc, [pc, r5, lsl #2]
   15390:	b	152e4 <dcngettext@plt+0x42cc>
   15394:	andeq	r5, r1, r8, asr #11
   15398:	andeq	r5, r1, r4, ror #5
   1539c:	andeq	r5, r1, r4, ror #5
   153a0:	andeq	r5, r1, r4, ror #5
   153a4:	andeq	r5, r1, r4, ror #5
   153a8:	andeq	r5, r1, r4, ror #5
   153ac:	andeq	r5, r1, r4, ror #5
   153b0:			; <UNDEFINED> instruction: 0x000155b4
   153b4:	andeq	r5, r1, r0, lsr #11
   153b8:	muleq	r1, r8, r5
   153bc:	muleq	r1, r0, r5
   153c0:	andeq	r5, r1, r0, asr #12
   153c4:	andeq	r5, r1, ip, lsr #12
   153c8:	andeq	r5, r1, r4, asr #1
   153cc:	andeq	r5, r1, r4, ror #5
   153d0:	andeq	r5, r1, r4, ror #5
   153d4:	andeq	r5, r1, r4, ror #5
   153d8:	andeq	r5, r1, r4, ror #5
   153dc:	andeq	r5, r1, r4, ror #5
   153e0:	andeq	r5, r1, r4, ror #5
   153e4:	andeq	r5, r1, r4, ror #5
   153e8:	andeq	r5, r1, r4, ror #5
   153ec:	andeq	r5, r1, r4, ror #5
   153f0:	andeq	r5, r1, r4, ror #5
   153f4:	andeq	r5, r1, r4, ror #5
   153f8:	andeq	r5, r1, r4, ror #5
   153fc:	andeq	r5, r1, r4, ror #5
   15400:	andeq	r5, r1, r4, ror #5
   15404:	andeq	r5, r1, r4, ror #5
   15408:	andeq	r5, r1, r4, ror #5
   1540c:	andeq	r5, r1, r4, ror #5
   15410:	andeq	r5, r1, r4, ror #5
   15414:	andeq	r5, r1, ip, lsl r6
   15418:	andeq	r5, r1, r8, lsl #12
   1541c:	andeq	r5, r1, r8, lsl #12
   15420:	strdeq	r5, [r1], -r8
   15424:	andeq	r5, r1, r8, lsl #12
   15428:	andeq	r5, r1, r0, lsr r3
   1542c:	andeq	r5, r1, r8, lsl #12
   15430:	strdeq	r4, [r1], -r8
   15434:	andeq	r5, r1, r8, lsl #12
   15438:	andeq	r5, r1, r8, lsl #12
   1543c:	andeq	r5, r1, r8, lsl #12
   15440:	andeq	r5, r1, r0, lsr r3
   15444:	andeq	r5, r1, r0, lsr r3
   15448:	andeq	r5, r1, r0, lsr r3
   1544c:	andeq	r5, r1, r0, lsr r3
   15450:	andeq	r5, r1, r0, lsr r3
   15454:	andeq	r5, r1, r0, lsr r3
   15458:	andeq	r5, r1, r0, lsr r3
   1545c:	andeq	r5, r1, r0, lsr r3
   15460:	andeq	r5, r1, r0, lsr r3
   15464:	andeq	r5, r1, r0, lsr r3
   15468:	andeq	r5, r1, r0, lsr r3
   1546c:	andeq	r5, r1, r0, lsr r3
   15470:	andeq	r5, r1, r0, lsr r3
   15474:	andeq	r5, r1, r0, lsr r3
   15478:	andeq	r5, r1, r0, lsr r3
   1547c:	andeq	r5, r1, r0, lsr r3
   15480:	andeq	r5, r1, r8, lsl #12
   15484:	andeq	r5, r1, r8, lsl #12
   15488:	andeq	r5, r1, r8, lsl #12
   1548c:	andeq	r5, r1, r8, lsl #12
   15490:	andeq	r4, r1, ip, asr #31
   15494:	andeq	r5, r1, r4, ror #5
   15498:	andeq	r5, r1, r0, lsr r3
   1549c:	andeq	r5, r1, r0, lsr r3
   154a0:	andeq	r5, r1, r0, lsr r3
   154a4:	andeq	r5, r1, r0, lsr r3
   154a8:	andeq	r5, r1, r0, lsr r3
   154ac:	andeq	r5, r1, r0, lsr r3
   154b0:	andeq	r5, r1, r0, lsr r3
   154b4:	andeq	r5, r1, r0, lsr r3
   154b8:	andeq	r5, r1, r0, lsr r3
   154bc:	andeq	r5, r1, r0, lsr r3
   154c0:	andeq	r5, r1, r0, lsr r3
   154c4:	andeq	r5, r1, r0, lsr r3
   154c8:	andeq	r5, r1, r0, lsr r3
   154cc:	andeq	r5, r1, r0, lsr r3
   154d0:	andeq	r5, r1, r0, lsr r3
   154d4:	andeq	r5, r1, r0, lsr r3
   154d8:	andeq	r5, r1, r0, lsr r3
   154dc:	andeq	r5, r1, r0, lsr r3
   154e0:	andeq	r5, r1, r0, lsr r3
   154e4:	andeq	r5, r1, r0, lsr r3
   154e8:	andeq	r5, r1, r0, lsr r3
   154ec:	andeq	r5, r1, r0, lsr r3
   154f0:	andeq	r5, r1, r0, lsr r3
   154f4:	andeq	r5, r1, r0, lsr r3
   154f8:	andeq	r5, r1, r0, lsr r3
   154fc:	andeq	r5, r1, r0, lsr r3
   15500:	andeq	r5, r1, r8, lsl #12
   15504:	andeq	r4, r1, r4, lsl #31
   15508:	andeq	r5, r1, r0, lsr r3
   1550c:	andeq	r5, r1, r8, lsl #12
   15510:	andeq	r5, r1, r0, lsr r3
   15514:	andeq	r5, r1, r8, lsl #12
   15518:	andeq	r5, r1, r0, lsr r3
   1551c:	andeq	r5, r1, r0, lsr r3
   15520:	andeq	r5, r1, r0, lsr r3
   15524:	andeq	r5, r1, r0, lsr r3
   15528:	andeq	r5, r1, r0, lsr r3
   1552c:	andeq	r5, r1, r0, lsr r3
   15530:	andeq	r5, r1, r0, lsr r3
   15534:	andeq	r5, r1, r0, lsr r3
   15538:	andeq	r5, r1, r0, lsr r3
   1553c:	andeq	r5, r1, r0, lsr r3
   15540:	andeq	r5, r1, r0, lsr r3
   15544:	andeq	r5, r1, r0, lsr r3
   15548:	andeq	r5, r1, r0, lsr r3
   1554c:	andeq	r5, r1, r0, lsr r3
   15550:	andeq	r5, r1, r0, lsr r3
   15554:	andeq	r5, r1, r0, lsr r3
   15558:	andeq	r5, r1, r0, lsr r3
   1555c:	andeq	r5, r1, r0, lsr r3
   15560:	andeq	r5, r1, r0, lsr r3
   15564:	andeq	r5, r1, r0, lsr r3
   15568:	andeq	r5, r1, r0, lsr r3
   1556c:	andeq	r5, r1, r0, lsr r3
   15570:	andeq	r5, r1, r0, lsr r3
   15574:	andeq	r5, r1, r0, lsr r3
   15578:	andeq	r5, r1, r0, lsr r3
   1557c:	andeq	r5, r1, r0, lsr r3
   15580:	muleq	r1, ip, sp
   15584:	andeq	r5, r1, r8, lsl #12
   15588:	muleq	r1, ip, sp
   1558c:	strdeq	r5, [r1], -r8
   15590:	mov	r3, #110	; 0x6e
   15594:	b	150c8 <dcngettext@plt+0x40b0>
   15598:	mov	r3, #116	; 0x74
   1559c:	b	150c8 <dcngettext@plt+0x40b0>
   155a0:	sub	r2, fp, #2
   155a4:	mov	r3, #98	; 0x62
   155a8:	clz	r2, r2
   155ac:	lsr	r2, r2, #5
   155b0:	b	14fb4 <dcngettext@plt+0x3f9c>
   155b4:	sub	r2, fp, #2
   155b8:	mov	r3, #97	; 0x61
   155bc:	clz	r2, r2
   155c0:	lsr	r2, r2, #5
   155c4:	b	14fb4 <dcngettext@plt+0x3f9c>
   155c8:	ldr	r3, [sp, #28]
   155cc:	cmp	r3, #0
   155d0:	bne	151c0 <dcngettext@plt+0x41a8>
   155d4:	ldr	r3, [sp, #164]	; 0xa4
   155d8:	tst	r3, #1
   155dc:	bne	15c50 <dcngettext@plt+0x4c38>
   155e0:	ldr	r6, [sp, #28]
   155e4:	sub	r2, fp, #2
   155e8:	mov	r7, r6
   155ec:	clz	r2, r2
   155f0:	lsr	r2, r2, #5
   155f4:	b	14ddc <dcngettext@plt+0x3dc4>
   155f8:	sub	r2, fp, #2
   155fc:	clz	r2, r2
   15600:	lsr	r2, r2, #5
   15604:	b	14dc8 <dcngettext@plt+0x3db0>
   15608:	sub	r2, fp, #2
   1560c:	mov	r6, #0
   15610:	clz	r2, r2
   15614:	lsr	r2, r2, #5
   15618:	b	14dd0 <dcngettext@plt+0x3db8>
   1561c:	sub	r2, fp, #2
   15620:	clz	r2, r2
   15624:	lsr	r2, r2, #5
   15628:	b	14dd0 <dcngettext@plt+0x3db8>
   1562c:	sub	r2, fp, #2
   15630:	mov	r3, #102	; 0x66
   15634:	clz	r2, r2
   15638:	lsr	r2, r2, #5
   1563c:	b	14fb4 <dcngettext@plt+0x3f9c>
   15640:	sub	r2, fp, #2
   15644:	mov	r3, #118	; 0x76
   15648:	clz	r2, r2
   1564c:	lsr	r2, r2, #5
   15650:	b	14fb4 <dcngettext@plt+0x3f9c>
   15654:	andeq	r8, r2, r8, lsl #30
   15658:	ldrdeq	r8, [r1], -ip
   1565c:	andeq	r8, r1, r4, asr #13
   15660:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   15664:	ldr	r3, [sp, #48]	; 0x30
   15668:	ldrb	r5, [r3]
   1566c:	cmp	r5, #126	; 0x7e
   15670:	ldrls	pc, [pc, r5, lsl #2]
   15674:	b	152e0 <dcngettext@plt+0x42c8>
   15678:	andeq	r5, r1, r0, asr #3
   1567c:	andeq	r5, r1, r0, ror #5
   15680:	andeq	r5, r1, r0, ror #5
   15684:	andeq	r5, r1, r0, ror #5
   15688:	andeq	r5, r1, r0, ror #5
   1568c:	andeq	r5, r1, r0, ror #5
   15690:	andeq	r5, r1, r0, ror #5
   15694:			; <UNDEFINED> instruction: 0x000158b8
   15698:			; <UNDEFINED> instruction: 0x000158b0
   1569c:	andeq	r5, r1, ip, lsl #3
   156a0:	andeq	r5, r1, r4, asr r1
   156a4:	andeq	r5, r1, ip, lsr #3
   156a8:	muleq	r1, r4, r1
   156ac:	andeq	r5, r1, r4, lsr #17
   156b0:	andeq	r5, r1, r0, ror #5
   156b4:	andeq	r5, r1, r0, ror #5
   156b8:	andeq	r5, r1, r0, ror #5
   156bc:	andeq	r5, r1, r0, ror #5
   156c0:	andeq	r5, r1, r0, ror #5
   156c4:	andeq	r5, r1, r0, ror #5
   156c8:	andeq	r5, r1, r0, ror #5
   156cc:	andeq	r5, r1, r0, ror #5
   156d0:	andeq	r5, r1, r0, ror #5
   156d4:	andeq	r5, r1, r0, ror #5
   156d8:	andeq	r5, r1, r0, ror #5
   156dc:	andeq	r5, r1, r0, ror #5
   156e0:	andeq	r5, r1, r0, ror #5
   156e4:	andeq	r5, r1, r0, ror #5
   156e8:	andeq	r5, r1, r0, ror #5
   156ec:	andeq	r5, r1, r0, ror #5
   156f0:	andeq	r5, r1, r0, ror #5
   156f4:	andeq	r5, r1, r0, ror #5
   156f8:	muleq	r1, ip, r8
   156fc:			; <UNDEFINED> instruction: 0x000151b4
   15700:			; <UNDEFINED> instruction: 0x000151b4
   15704:	andeq	r5, r1, r0, lsl #17
   15708:			; <UNDEFINED> instruction: 0x000151b4
   1570c:	andeq	r5, r1, r4, ror r8
   15710:			; <UNDEFINED> instruction: 0x000151b4
   15714:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15718:			; <UNDEFINED> instruction: 0x000151b4
   1571c:			; <UNDEFINED> instruction: 0x000151b4
   15720:			; <UNDEFINED> instruction: 0x000151b4
   15724:	andeq	r5, r1, r4, ror r8
   15728:	andeq	r5, r1, r4, ror r8
   1572c:	andeq	r5, r1, r4, ror r8
   15730:	andeq	r5, r1, r4, ror r8
   15734:	andeq	r5, r1, r4, ror r8
   15738:	andeq	r5, r1, r4, ror r8
   1573c:	andeq	r5, r1, r4, ror r8
   15740:	andeq	r5, r1, r4, ror r8
   15744:	andeq	r5, r1, r4, ror r8
   15748:	andeq	r5, r1, r4, ror r8
   1574c:	andeq	r5, r1, r4, ror r8
   15750:	andeq	r5, r1, r4, ror r8
   15754:	andeq	r5, r1, r4, ror r8
   15758:	andeq	r5, r1, r4, ror r8
   1575c:	andeq	r5, r1, r4, ror r8
   15760:	andeq	r5, r1, r4, ror r8
   15764:			; <UNDEFINED> instruction: 0x000151b4
   15768:			; <UNDEFINED> instruction: 0x000151b4
   1576c:			; <UNDEFINED> instruction: 0x000151b4
   15770:			; <UNDEFINED> instruction: 0x000151b4
   15774:	andeq	r4, r1, r8, asr #31
   15778:	andeq	r5, r1, r0, ror #5
   1577c:	andeq	r5, r1, r4, ror r8
   15780:	andeq	r5, r1, r4, ror r8
   15784:	andeq	r5, r1, r4, ror r8
   15788:	andeq	r5, r1, r4, ror r8
   1578c:	andeq	r5, r1, r4, ror r8
   15790:	andeq	r5, r1, r4, ror r8
   15794:	andeq	r5, r1, r4, ror r8
   15798:	andeq	r5, r1, r4, ror r8
   1579c:	andeq	r5, r1, r4, ror r8
   157a0:	andeq	r5, r1, r4, ror r8
   157a4:	andeq	r5, r1, r4, ror r8
   157a8:	andeq	r5, r1, r4, ror r8
   157ac:	andeq	r5, r1, r4, ror r8
   157b0:	andeq	r5, r1, r4, ror r8
   157b4:	andeq	r5, r1, r4, ror r8
   157b8:	andeq	r5, r1, r4, ror r8
   157bc:	andeq	r5, r1, r4, ror r8
   157c0:	andeq	r5, r1, r4, ror r8
   157c4:	andeq	r5, r1, r4, ror r8
   157c8:	andeq	r5, r1, r4, ror r8
   157cc:	andeq	r5, r1, r4, ror r8
   157d0:	andeq	r5, r1, r4, ror r8
   157d4:	andeq	r5, r1, r4, ror r8
   157d8:	andeq	r5, r1, r4, ror r8
   157dc:	andeq	r5, r1, r4, ror r8
   157e0:	andeq	r5, r1, r4, ror r8
   157e4:			; <UNDEFINED> instruction: 0x000151b4
   157e8:	andeq	r4, r1, r0, lsl #31
   157ec:	andeq	r5, r1, r4, ror r8
   157f0:			; <UNDEFINED> instruction: 0x000151b4
   157f4:	andeq	r5, r1, r4, ror r8
   157f8:			; <UNDEFINED> instruction: 0x000151b4
   157fc:	andeq	r5, r1, r4, ror r8
   15800:	andeq	r5, r1, r4, ror r8
   15804:	andeq	r5, r1, r4, ror r8
   15808:	andeq	r5, r1, r4, ror r8
   1580c:	andeq	r5, r1, r4, ror r8
   15810:	andeq	r5, r1, r4, ror r8
   15814:	andeq	r5, r1, r4, ror r8
   15818:	andeq	r5, r1, r4, ror r8
   1581c:	andeq	r5, r1, r4, ror r8
   15820:	andeq	r5, r1, r4, ror r8
   15824:	andeq	r5, r1, r4, ror r8
   15828:	andeq	r5, r1, r4, ror r8
   1582c:	andeq	r5, r1, r4, ror r8
   15830:	andeq	r5, r1, r4, ror r8
   15834:	andeq	r5, r1, r4, ror r8
   15838:	andeq	r5, r1, r4, ror r8
   1583c:	andeq	r5, r1, r4, ror r8
   15840:	andeq	r5, r1, r4, ror r8
   15844:	andeq	r5, r1, r4, ror r8
   15848:	andeq	r5, r1, r4, ror r8
   1584c:	andeq	r5, r1, r4, ror r8
   15850:	andeq	r5, r1, r4, ror r8
   15854:	andeq	r5, r1, r4, ror r8
   15858:	andeq	r5, r1, r4, ror r8
   1585c:	andeq	r5, r1, r4, ror r8
   15860:	andeq	r5, r1, r4, ror r8
   15864:	muleq	r1, r8, sp
   15868:			; <UNDEFINED> instruction: 0x000151b4
   1586c:	muleq	r1, r8, sp
   15870:	andeq	r5, r1, r0, lsl #17
   15874:	mov	r6, r7
   15878:	mov	r7, #0
   1587c:	b	14df8 <dcngettext@plt+0x3de0>
   15880:	cmp	r9, #0
   15884:	mov	r3, #0
   15888:	beq	152c8 <dcngettext@plt+0x42b0>
   1588c:	mov	r6, #0
   15890:	mov	r7, r3
   15894:	mov	r3, r6
   15898:	b	14dfc <dcngettext@plt+0x3de4>
   1589c:	mov	r3, #0
   158a0:	b	152a8 <dcngettext@plt+0x4290>
   158a4:	mov	r7, #0
   158a8:	mov	r3, #114	; 0x72
   158ac:	b	150c8 <dcngettext@plt+0x40b0>
   158b0:	mov	r5, #98	; 0x62
   158b4:	b	15158 <dcngettext@plt+0x4140>
   158b8:	mov	r5, #97	; 0x61
   158bc:	b	15198 <dcngettext@plt+0x4180>
   158c0:	ldr	r3, [sp, #32]
   158c4:	cmp	r3, #0
   158c8:	bne	15d10 <dcngettext@plt+0x4cf8>
   158cc:	add	r9, r9, #1
   158d0:	ldr	r3, [sp, #44]	; 0x2c
   158d4:	mov	r6, #0
   158d8:	mov	r5, #92	; 0x5c
   158dc:	b	15090 <dcngettext@plt+0x4078>
   158e0:	ldr	r3, [sp, #36]	; 0x24
   158e4:	ldrb	r3, [r3, #1]
   158e8:	adds	r3, r3, #0
   158ec:	movne	r3, #1
   158f0:	b	14db4 <dcngettext@plt+0x3d9c>
   158f4:	ldr	r3, [sp, #164]	; 0xa4
   158f8:	ands	r3, r3, #4
   158fc:	beq	15920 <dcngettext@plt+0x4908>
   15900:	ldr	r2, [sp, #24]
   15904:	add	r3, r9, #2
   15908:	cmp	r3, r2
   1590c:	bcs	15920 <dcngettext@plt+0x4908>
   15910:	ldr	r2, [sp, #48]	; 0x30
   15914:	ldrb	r5, [r2, #1]
   15918:	cmp	r5, #63	; 0x3f
   1591c:	beq	15d84 <dcngettext@plt+0x4d6c>
   15920:	mov	r2, #0
   15924:	mov	r6, r2
   15928:	mov	r5, #63	; 0x3f
   1592c:	b	14ddc <dcngettext@plt+0x3dc4>
   15930:	ldr	r3, [sp, #32]
   15934:	cmp	r3, #0
   15938:	bne	15d10 <dcngettext@plt+0x4cf8>
   1593c:	mov	r6, r3
   15940:	mov	r5, #63	; 0x3f
   15944:	b	14e24 <dcngettext@plt+0x3e0c>
   15948:	ldr	r3, [sp, #24]
   1594c:	cmn	r3, #1
   15950:	mov	r3, #0
   15954:	str	r3, [sp, #108]	; 0x6c
   15958:	str	r3, [sp, #112]	; 0x70
   1595c:	bne	1596c <dcngettext@plt+0x4954>
   15960:	ldr	r0, [sp, #36]	; 0x24
   15964:	bl	10f10 <strlen@plt>
   15968:	str	r0, [sp, #24]
   1596c:	mov	r3, #0
   15970:	str	sl, [sp, #88]	; 0x58
   15974:	ldr	sl, [sp, #36]	; 0x24
   15978:	str	r5, [sp, #92]	; 0x5c
   1597c:	mov	r5, r3
   15980:	str	r7, [sp, #96]	; 0x60
   15984:	str	r4, [sp, #100]	; 0x64
   15988:	str	r8, [sp, #84]	; 0x54
   1598c:	ldr	r3, [sp, #24]
   15990:	add	r4, r9, r5
   15994:	add	r7, sl, r4
   15998:	sub	r2, r3, r4
   1599c:	mov	r1, r7
   159a0:	add	r3, sp, #108	; 0x6c
   159a4:	add	r0, sp, #104	; 0x68
   159a8:	bl	1737c <dcngettext@plt+0x6364>
   159ac:	subs	r8, r0, #0
   159b0:	beq	15a00 <dcngettext@plt+0x49e8>
   159b4:	cmn	r8, #1
   159b8:	beq	15d60 <dcngettext@plt+0x4d48>
   159bc:	cmn	r8, #2
   159c0:	beq	15e80 <dcngettext@plt+0x4e68>
   159c4:	ldr	r3, [sp, #32]
   159c8:	cmp	fp, #2
   159cc:	movne	r3, #0
   159d0:	andeq	r3, r3, #1
   159d4:	cmp	r3, #0
   159d8:	bne	15b60 <dcngettext@plt+0x4b48>
   159dc:	ldr	r0, [sp, #104]	; 0x68
   159e0:	bl	10e5c <iswprint@plt>
   159e4:	add	r5, r5, r8
   159e8:	cmp	r0, #0
   159ec:	add	r0, sp, #108	; 0x6c
   159f0:	moveq	r6, #0
   159f4:	bl	10e08 <mbsinit@plt>
   159f8:	cmp	r0, #0
   159fc:	beq	1598c <dcngettext@plt+0x4974>
   15a00:	ldr	r3, [sp, #28]
   15a04:	mov	ip, r5
   15a08:	eor	r2, r6, #1
   15a0c:	ldr	r5, [sp, #92]	; 0x5c
   15a10:	ldr	r7, [sp, #96]	; 0x60
   15a14:	ldr	r4, [sp, #100]	; 0x64
   15a18:	ldr	r8, [sp, #84]	; 0x54
   15a1c:	ldr	sl, [sp, #88]	; 0x58
   15a20:	and	r2, r2, r3
   15a24:	cmp	ip, #1
   15a28:	bls	15328 <dcngettext@plt+0x4310>
   15a2c:	add	r1, ip, r9
   15a30:	ldr	lr, [sp, #48]	; 0x30
   15a34:	mov	r0, #0
   15a38:	str	r6, [sp, #48]	; 0x30
   15a3c:	mov	ip, #39	; 0x27
   15a40:	ldr	r6, [sp, #44]	; 0x2c
   15a44:	b	15afc <dcngettext@plt+0x4ae4>
   15a48:	ldr	r0, [sp, #32]
   15a4c:	sub	r3, fp, #2
   15a50:	cmp	r0, #0
   15a54:	clz	r3, r3
   15a58:	lsr	r3, r3, #5
   15a5c:	bne	15c64 <dcngettext@plt+0x4c4c>
   15a60:	eor	r0, r6, #1
   15a64:	ands	r3, r3, r0
   15a68:	beq	15a98 <dcngettext@plt+0x4a80>
   15a6c:	add	r0, r4, #1
   15a70:	cmp	sl, r4
   15a74:	strbhi	ip, [r8, r4]
   15a78:	cmp	sl, r0
   15a7c:	movhi	r6, #36	; 0x24
   15a80:	strbhi	r6, [r8, r0]
   15a84:	add	r0, r4, #2
   15a88:	mov	r6, r3
   15a8c:	add	r4, r4, #3
   15a90:	cmp	sl, r0
   15a94:	strbhi	ip, [r8, r0]
   15a98:	cmp	sl, r4
   15a9c:	movhi	r3, #92	; 0x5c
   15aa0:	strbhi	r3, [r8, r4]
   15aa4:	add	r3, r4, #1
   15aa8:	cmp	sl, r3
   15aac:	lsrhi	r0, r5, #6
   15ab0:	addhi	r0, r0, #48	; 0x30
   15ab4:	strbhi	r0, [r8, r3]
   15ab8:	add	r0, r4, #2
   15abc:	cmp	sl, r0
   15ac0:	lsrhi	r3, r5, #3
   15ac4:	andhi	r3, r3, #7
   15ac8:	addhi	r3, r3, #48	; 0x30
   15acc:	add	r9, r9, #1
   15ad0:	strbhi	r3, [r8, r0]
   15ad4:	and	r5, r5, #7
   15ad8:	cmp	r9, r1
   15adc:	add	r5, r5, #48	; 0x30
   15ae0:	add	r4, r4, #3
   15ae4:	bcs	15c84 <dcngettext@plt+0x4c6c>
   15ae8:	mov	r0, r2
   15aec:	cmp	sl, r4
   15af0:	strbhi	r5, [r8, r4]
   15af4:	ldrb	r5, [lr, #1]!
   15af8:	add	r4, r4, #1
   15afc:	cmp	r2, #0
   15b00:	bne	15a48 <dcngettext@plt+0x4a30>
   15b04:	eor	r3, r0, #1
   15b08:	and	r3, r3, r6
   15b0c:	cmp	r7, #0
   15b10:	uxtb	r3, r3
   15b14:	beq	15b28 <dcngettext@plt+0x4b10>
   15b18:	cmp	sl, r4
   15b1c:	movhi	r7, #92	; 0x5c
   15b20:	strbhi	r7, [r8, r4]
   15b24:	add	r4, r4, #1
   15b28:	add	r9, r9, #1
   15b2c:	cmp	r9, r1
   15b30:	bcs	15c78 <dcngettext@plt+0x4c60>
   15b34:	cmp	r3, #0
   15b38:	beq	15ca4 <dcngettext@plt+0x4c8c>
   15b3c:	cmp	sl, r4
   15b40:	add	r3, r4, #1
   15b44:	strbhi	ip, [r8, r4]
   15b48:	mov	r7, #0
   15b4c:	cmp	sl, r3
   15b50:	strbhi	ip, [r8, r3]
   15b54:	add	r4, r4, #2
   15b58:	mov	r6, r7
   15b5c:	b	15aec <dcngettext@plt+0x4ad4>
   15b60:	cmp	r8, #1
   15b64:	beq	159dc <dcngettext@plt+0x49c4>
   15b68:	add	r1, r4, #1
   15b6c:	add	r3, sl, r8
   15b70:	add	r1, sl, r1
   15b74:	add	r4, r3, r4
   15b78:	ldrb	r3, [r1], #1
   15b7c:	sub	r3, r3, #91	; 0x5b
   15b80:	cmp	r3, #33	; 0x21
   15b84:	ldrls	pc, [pc, r3, lsl #2]
   15b88:	b	15c14 <dcngettext@plt+0x4bfc>
   15b8c:	andeq	r5, r1, r0, lsr #24
   15b90:	andeq	r5, r1, r0, lsr #24
   15b94:	andeq	r5, r1, r4, lsl ip
   15b98:	andeq	r5, r1, r0, lsr #24
   15b9c:	andeq	r5, r1, r4, lsl ip
   15ba0:	andeq	r5, r1, r0, lsr #24
   15ba4:	andeq	r5, r1, r4, lsl ip
   15ba8:	andeq	r5, r1, r4, lsl ip
   15bac:	andeq	r5, r1, r4, lsl ip
   15bb0:	andeq	r5, r1, r4, lsl ip
   15bb4:	andeq	r5, r1, r4, lsl ip
   15bb8:	andeq	r5, r1, r4, lsl ip
   15bbc:	andeq	r5, r1, r4, lsl ip
   15bc0:	andeq	r5, r1, r4, lsl ip
   15bc4:	andeq	r5, r1, r4, lsl ip
   15bc8:	andeq	r5, r1, r4, lsl ip
   15bcc:	andeq	r5, r1, r4, lsl ip
   15bd0:	andeq	r5, r1, r4, lsl ip
   15bd4:	andeq	r5, r1, r4, lsl ip
   15bd8:	andeq	r5, r1, r4, lsl ip
   15bdc:	andeq	r5, r1, r4, lsl ip
   15be0:	andeq	r5, r1, r4, lsl ip
   15be4:	andeq	r5, r1, r4, lsl ip
   15be8:	andeq	r5, r1, r4, lsl ip
   15bec:	andeq	r5, r1, r4, lsl ip
   15bf0:	andeq	r5, r1, r4, lsl ip
   15bf4:	andeq	r5, r1, r4, lsl ip
   15bf8:	andeq	r5, r1, r4, lsl ip
   15bfc:	andeq	r5, r1, r4, lsl ip
   15c00:	andeq	r5, r1, r4, lsl ip
   15c04:	andeq	r5, r1, r4, lsl ip
   15c08:	andeq	r5, r1, r4, lsl ip
   15c0c:	andeq	r5, r1, r4, lsl ip
   15c10:	andeq	r5, r1, r0, lsr #24
   15c14:	cmp	r4, r1
   15c18:	bne	15b78 <dcngettext@plt+0x4b60>
   15c1c:	b	159dc <dcngettext@plt+0x49c4>
   15c20:	ldr	fp, [sp, #84]	; 0x54
   15c24:	ldr	sl, [sp, #88]	; 0x58
   15c28:	mov	r8, #2
   15c2c:	b	150e8 <dcngettext@plt+0x40d0>
   15c30:	cmp	sl, r4
   15c34:	movls	r1, r4
   15c38:	bls	15238 <dcngettext@plt+0x4220>
   15c3c:	ldr	r3, [sp, #44]	; 0x2c
   15c40:	b	15228 <dcngettext@plt+0x4210>
   15c44:	str	sl, [sp, #72]	; 0x48
   15c48:	ldr	sl, [sp, #32]
   15c4c:	b	15060 <dcngettext@plt+0x4048>
   15c50:	add	r9, r9, #1
   15c54:	b	14954 <dcngettext@plt+0x393c>
   15c58:	ldr	r2, [sp, #28]
   15c5c:	mov	r6, #0
   15c60:	b	15a2c <dcngettext@plt+0x4a14>
   15c64:	str	fp, [sp, #160]	; 0xa0
   15c68:	str	r3, [sp, #28]
   15c6c:	mov	fp, r8
   15c70:	ldr	r8, [sp, #160]	; 0xa0
   15c74:	b	150e8 <dcngettext@plt+0x40d0>
   15c78:	str	r6, [sp, #44]	; 0x2c
   15c7c:	ldr	r6, [sp, #48]	; 0x30
   15c80:	b	15090 <dcngettext@plt+0x4078>
   15c84:	str	r6, [sp, #44]	; 0x2c
   15c88:	ldr	r6, [sp, #48]	; 0x30
   15c8c:	b	14e9c <dcngettext@plt+0x3e84>
   15c90:	add	r4, r4, #4
   15c94:	str	r3, [sp, #44]	; 0x2c
   15c98:	mov	r6, #0
   15c9c:	mov	r5, #48	; 0x30
   15ca0:	b	14e24 <dcngettext@plt+0x3e0c>
   15ca4:	mov	r7, r3
   15ca8:	b	15aec <dcngettext@plt+0x4ad4>
   15cac:	ldr	r3, [pc, #-1624]	; 1565c <dcngettext@plt+0x4644>
   15cb0:	mov	r4, #1
   15cb4:	str	r4, [sp, #40]	; 0x28
   15cb8:	str	r4, [sp, #28]
   15cbc:	str	r4, [sp, #52]	; 0x34
   15cc0:	str	sl, [sp, #72]	; 0x48
   15cc4:	str	sl, [sp, #68]	; 0x44
   15cc8:	str	sl, [sp, #44]	; 0x2c
   15ccc:	str	sl, [sp, #32]
   15cd0:	str	r3, [sp, #60]	; 0x3c
   15cd4:	b	14944 <dcngettext@plt+0x392c>
   15cd8:	mov	r3, r6
   15cdc:	mov	r5, #48	; 0x30
   15ce0:	mov	r6, #0
   15ce4:	b	14e24 <dcngettext@plt+0x3e0c>
   15ce8:	cmp	sl, r4
   15cec:	movhi	r3, #48	; 0x30
   15cf0:	strbhi	r3, [r8, r4]
   15cf4:	add	r3, r1, #2
   15cf8:	cmp	sl, r3
   15cfc:	movhi	r0, #48	; 0x30
   15d00:	strbhi	r0, [r8, r3]
   15d04:	add	r4, r1, #3
   15d08:	mov	r5, #48	; 0x30
   15d0c:	b	1526c <dcngettext@plt+0x4254>
   15d10:	str	fp, [sp, #160]	; 0xa0
   15d14:	mov	fp, r8
   15d18:	ldr	r8, [sp, #160]	; 0xa0
   15d1c:	b	150e8 <dcngettext@plt+0x40d0>
   15d20:	ldr	r2, [sp, #80]	; 0x50
   15d24:	ldrb	r3, [r2]
   15d28:	cmp	r3, #0
   15d2c:	beq	14914 <dcngettext@plt+0x38fc>
   15d30:	cmp	sl, r4
   15d34:	strbhi	r3, [fp, r4]
   15d38:	ldrb	r3, [r2, #1]!
   15d3c:	add	r4, r4, #1
   15d40:	cmp	r3, #0
   15d44:	bne	15d30 <dcngettext@plt+0x4d18>
   15d48:	b	14914 <dcngettext@plt+0x38fc>
   15d4c:	str	fp, [sp, #160]	; 0xa0
   15d50:	mov	r3, #0
   15d54:	mov	fp, r8
   15d58:	ldr	r8, [sp, #160]	; 0xa0
   15d5c:	b	1517c <dcngettext@plt+0x4164>
   15d60:	mov	ip, r5
   15d64:	ldr	r7, [sp, #96]	; 0x60
   15d68:	ldr	r5, [sp, #92]	; 0x5c
   15d6c:	ldr	r4, [sp, #100]	; 0x64
   15d70:	ldr	r8, [sp, #84]	; 0x54
   15d74:	ldr	sl, [sp, #88]	; 0x58
   15d78:	ldr	r2, [sp, #28]
   15d7c:	mov	r6, #0
   15d80:	b	15a24 <dcngettext@plt+0x4a0c>
   15d84:	ldr	r2, [sp, #36]	; 0x24
   15d88:	ldrb	r1, [r2, r3]
   15d8c:	sub	r2, r1, #33	; 0x21
   15d90:	cmp	r2, #29
   15d94:	ldrls	pc, [pc, r2, lsl #2]
   15d98:	b	15e74 <dcngettext@plt+0x4e5c>
   15d9c:	andeq	r5, r1, r4, lsl lr
   15da0:	andeq	r5, r1, r4, ror lr
   15da4:	andeq	r5, r1, r4, ror lr
   15da8:	andeq	r5, r1, r4, ror lr
   15dac:	andeq	r5, r1, r4, ror lr
   15db0:	andeq	r5, r1, r4, ror lr
   15db4:	andeq	r5, r1, r4, lsl lr
   15db8:	andeq	r5, r1, r4, lsl lr
   15dbc:	andeq	r5, r1, r4, lsl lr
   15dc0:	andeq	r5, r1, r4, ror lr
   15dc4:	andeq	r5, r1, r4, ror lr
   15dc8:	andeq	r5, r1, r4, ror lr
   15dcc:	andeq	r5, r1, r4, lsl lr
   15dd0:	andeq	r5, r1, r4, ror lr
   15dd4:	andeq	r5, r1, r4, lsl lr
   15dd8:	andeq	r5, r1, r4, ror lr
   15ddc:	andeq	r5, r1, r4, ror lr
   15de0:	andeq	r5, r1, r4, ror lr
   15de4:	andeq	r5, r1, r4, ror lr
   15de8:	andeq	r5, r1, r4, ror lr
   15dec:	andeq	r5, r1, r4, ror lr
   15df0:	andeq	r5, r1, r4, ror lr
   15df4:	andeq	r5, r1, r4, ror lr
   15df8:	andeq	r5, r1, r4, ror lr
   15dfc:	andeq	r5, r1, r4, ror lr
   15e00:	andeq	r5, r1, r4, ror lr
   15e04:	andeq	r5, r1, r4, ror lr
   15e08:	andeq	r5, r1, r4, lsl lr
   15e0c:	andeq	r5, r1, r4, lsl lr
   15e10:	andeq	r5, r1, r4, lsl lr
   15e14:	ldr	r2, [sp, #32]
   15e18:	cmp	r2, #0
   15e1c:	bne	15f20 <dcngettext@plt+0x4f08>
   15e20:	cmp	sl, r4
   15e24:	movhi	r2, #63	; 0x3f
   15e28:	strbhi	r2, [r8, r4]
   15e2c:	add	r2, r4, #1
   15e30:	cmp	sl, r2
   15e34:	movhi	r0, #34	; 0x22
   15e38:	strbhi	r0, [r8, r2]
   15e3c:	add	r2, r4, #2
   15e40:	cmp	sl, r2
   15e44:	movhi	r0, #34	; 0x22
   15e48:	strbhi	r0, [r8, r2]
   15e4c:	add	r2, r4, #3
   15e50:	cmp	sl, r2
   15e54:	movhi	r0, #63	; 0x3f
   15e58:	strbhi	r0, [r8, r2]
   15e5c:	mov	r2, #0
   15e60:	add	r4, r4, #4
   15e64:	mov	r5, r1
   15e68:	mov	r9, r3
   15e6c:	mov	r6, r2
   15e70:	b	1526c <dcngettext@plt+0x4254>
   15e74:	mov	r2, #0
   15e78:	mov	r6, r2
   15e7c:	b	14ddc <dcngettext@plt+0x3dc4>
   15e80:	ldr	r0, [sp, #24]
   15e84:	mov	r1, r4
   15e88:	cmp	r1, r0
   15e8c:	mov	r2, r7
   15e90:	mov	r3, r5
   15e94:	mov	ip, r5
   15e98:	ldr	r7, [sp, #96]	; 0x60
   15e9c:	ldr	r5, [sp, #92]	; 0x5c
   15ea0:	ldr	r4, [sp, #100]	; 0x64
   15ea4:	ldr	r8, [sp, #84]	; 0x54
   15ea8:	ldr	sl, [sp, #88]	; 0x58
   15eac:	bcs	15ee0 <dcngettext@plt+0x4ec8>
   15eb0:	ldrb	r6, [r2]
   15eb4:	cmp	r6, #0
   15eb8:	bne	15ecc <dcngettext@plt+0x4eb4>
   15ebc:	b	15ffc <dcngettext@plt+0x4fe4>
   15ec0:	ldrb	r6, [r2, #1]!
   15ec4:	cmp	r6, #0
   15ec8:	beq	15f84 <dcngettext@plt+0x4f6c>
   15ecc:	add	r3, r3, #1
   15ed0:	add	r1, r9, r3
   15ed4:	cmp	r1, r0
   15ed8:	bcc	15ec0 <dcngettext@plt+0x4ea8>
   15edc:	mov	ip, r3
   15ee0:	ldr	r2, [sp, #28]
   15ee4:	mov	r6, #0
   15ee8:	b	15a24 <dcngettext@plt+0x4a0c>
   15eec:	mov	r3, #1
   15ef0:	str	r3, [sp, #40]	; 0x28
   15ef4:	str	r3, [sp, #32]
   15ef8:	str	r3, [sp, #28]
   15efc:	str	r3, [sp, #52]	; 0x34
   15f00:	ldr	r3, [pc, #-2220]	; 1565c <dcngettext@plt+0x4644>
   15f04:	mov	r2, #0
   15f08:	str	r2, [sp, #68]	; 0x44
   15f0c:	str	r2, [sp, #44]	; 0x2c
   15f10:	str	r2, [sp, #72]	; 0x48
   15f14:	mov	r4, r2
   15f18:	str	r3, [sp, #60]	; 0x3c
   15f1c:	b	14944 <dcngettext@plt+0x392c>
   15f20:	str	fp, [sp, #160]	; 0xa0
   15f24:	mov	fp, r8
   15f28:	ldr	r8, [sp, #160]	; 0xa0
   15f2c:	b	150f4 <dcngettext@plt+0x40dc>
   15f30:	mov	r2, r3
   15f34:	ldr	r3, [sp, #60]	; 0x3c
   15f38:	cmp	r3, #0
   15f3c:	moveq	r2, #0
   15f40:	andne	r2, r2, #1
   15f44:	cmp	r2, #0
   15f48:	beq	15f74 <dcngettext@plt+0x4f5c>
   15f4c:	mov	r2, r3
   15f50:	ldrb	r3, [r3]
   15f54:	cmp	r3, #0
   15f58:	beq	15f74 <dcngettext@plt+0x4f5c>
   15f5c:	cmp	sl, r4
   15f60:	strbhi	r3, [fp, r4]
   15f64:	ldrb	r3, [r2, #1]!
   15f68:	add	r4, r4, #1
   15f6c:	cmp	r3, #0
   15f70:	bne	15f5c <dcngettext@plt+0x4f44>
   15f74:	cmp	sl, r4
   15f78:	movhi	r3, #0
   15f7c:	strbhi	r3, [fp, r4]
   15f80:	b	15134 <dcngettext@plt+0x411c>
   15f84:	mov	ip, r3
   15f88:	ldr	r2, [sp, #28]
   15f8c:	b	15a24 <dcngettext@plt+0x4a0c>
   15f90:	str	fp, [sp, #160]	; 0xa0
   15f94:	mov	fp, r8
   15f98:	ldr	r8, [sp, #160]	; 0xa0
   15f9c:	sub	r3, r8, #2
   15fa0:	clz	r3, r3
   15fa4:	lsr	r3, r3, #5
   15fa8:	str	r3, [sp, #28]
   15fac:	b	150e8 <dcngettext@plt+0x40d0>
   15fb0:	ldr	r3, [sp, #76]	; 0x4c
   15fb4:	mov	ip, #5
   15fb8:	str	r3, [sp, #16]
   15fbc:	ldr	r3, [sp, #80]	; 0x50
   15fc0:	ldr	r2, [sp, #36]	; 0x24
   15fc4:	str	r3, [sp, #12]
   15fc8:	ldr	r3, [sp, #56]	; 0x38
   15fcc:	ldr	r1, [sp, #72]	; 0x48
   15fd0:	str	r3, [sp, #8]
   15fd4:	ldr	r3, [sp, #164]	; 0xa4
   15fd8:	mov	r0, fp
   15fdc:	str	r3, [sp, #4]
   15fe0:	str	ip, [sp]
   15fe4:	ldr	r3, [sp, #24]
   15fe8:	bl	1484c <dcngettext@plt+0x3834>
   15fec:	mov	r4, r0
   15ff0:	b	15134 <dcngettext@plt+0x411c>
   15ff4:	mov	r8, #2
   15ff8:	b	150e8 <dcngettext@plt+0x40d0>
   15ffc:	ldr	r2, [sp, #28]
   16000:	b	15a24 <dcngettext@plt+0x4a0c>
   16004:	mov	r3, #0
   16008:	str	r3, [sp, #68]	; 0x44
   1600c:	str	r3, [sp, #44]	; 0x2c
   16010:	str	r3, [sp, #72]	; 0x48
   16014:	str	r3, [sp, #28]
   16018:	mov	r4, r3
   1601c:	ldr	r3, [pc, #-2500]	; 15660 <dcngettext@plt+0x4648>
   16020:	mov	r2, #1
   16024:	str	r2, [sp, #40]	; 0x28
   16028:	str	r2, [sp, #32]
   1602c:	str	r2, [sp, #52]	; 0x34
   16030:	str	r3, [sp, #60]	; 0x3c
   16034:	b	14944 <dcngettext@plt+0x392c>
   16038:	bl	10e38 <__stack_chk_fail@plt>
   1603c:	mov	r5, r3
   16040:	mov	r6, #0
   16044:	b	14e38 <dcngettext@plt+0x3e20>
   16048:	mov	r3, #0
   1604c:	mov	r2, #1
   16050:	str	r3, [sp, #44]	; 0x2c
   16054:	str	r3, [sp, #72]	; 0x48
   16058:	str	r2, [sp, #40]	; 0x28
   1605c:	b	14f54 <dcngettext@plt+0x3f3c>
   16060:	bl	11000 <abort@plt>
   16064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16068:	sub	sp, sp, #44	; 0x2c
   1606c:	mov	r6, r0
   16070:	mov	r4, r3
   16074:	mov	sl, r1
   16078:	mov	fp, r2
   1607c:	bl	10f28 <__errno_location@plt>
   16080:	ldr	r7, [pc, #364]	; 161f4 <dcngettext@plt+0x51dc>
   16084:	cmp	r6, #0
   16088:	ldr	r5, [r7]
   1608c:	ldr	r3, [r0]
   16090:	str	r3, [sp, #24]
   16094:	blt	161f0 <dcngettext@plt+0x51d8>
   16098:	ldr	r3, [r7, #4]
   1609c:	mov	r8, r0
   160a0:	cmp	r3, r6
   160a4:	bgt	160f0 <dcngettext@plt+0x50d8>
   160a8:	cmn	r6, #-268435454	; 0xf0000002
   160ac:	bgt	161ec <dcngettext@plt+0x51d4>
   160b0:	add	r9, r6, #1
   160b4:	add	r3, r7, #8
   160b8:	cmp	r5, r3
   160bc:	lsl	r1, r9, #3
   160c0:	beq	161cc <dcngettext@plt+0x51b4>
   160c4:	mov	r0, r5
   160c8:	bl	16e64 <dcngettext@plt+0x5e4c>
   160cc:	mov	r5, r0
   160d0:	str	r0, [r7]
   160d4:	ldr	r0, [r7, #4]
   160d8:	mov	r1, #0
   160dc:	sub	r2, r9, r0
   160e0:	add	r0, r5, r0, lsl #3
   160e4:	lsl	r2, r2, #3
   160e8:	bl	10f4c <memset@plt>
   160ec:	str	r9, [r7, #4]
   160f0:	add	r3, r5, r6, lsl #3
   160f4:	ldr	r1, [r4, #4]
   160f8:	ldr	r7, [r3, #4]
   160fc:	ldr	r9, [r5, r6, lsl #3]
   16100:	ldr	r2, [r4, #40]	; 0x28
   16104:	ldr	ip, [r4, #44]	; 0x2c
   16108:	str	r3, [sp, #28]
   1610c:	ldr	r3, [r4]
   16110:	orr	r1, r1, #1
   16114:	add	lr, r4, #8
   16118:	str	r1, [sp, #36]	; 0x24
   1611c:	str	r1, [sp, #4]
   16120:	str	r2, [sp, #12]
   16124:	str	r3, [sp]
   16128:	mov	r0, r7
   1612c:	mov	r1, r9
   16130:	str	ip, [sp, #16]
   16134:	str	lr, [sp, #8]
   16138:	mov	r3, fp
   1613c:	mov	r2, sl
   16140:	str	lr, [sp, #32]
   16144:	bl	1484c <dcngettext@plt+0x3834>
   16148:	cmp	r9, r0
   1614c:	bhi	161b8 <dcngettext@plt+0x51a0>
   16150:	ldr	r3, [pc, #160]	; 161f8 <dcngettext@plt+0x51e0>
   16154:	add	r9, r0, #1
   16158:	cmp	r7, r3
   1615c:	str	r9, [r5, r6, lsl #3]
   16160:	beq	1616c <dcngettext@plt+0x5154>
   16164:	mov	r0, r7
   16168:	bl	10de4 <free@plt>
   1616c:	mov	r0, r9
   16170:	bl	16e08 <dcngettext@plt+0x5df0>
   16174:	ldr	lr, [sp, #28]
   16178:	ldr	ip, [r4, #44]	; 0x2c
   1617c:	ldr	r5, [r4, #40]	; 0x28
   16180:	mov	r3, fp
   16184:	mov	r2, sl
   16188:	mov	r1, r9
   1618c:	str	r0, [lr, #4]
   16190:	ldr	lr, [r4]
   16194:	ldr	r4, [sp, #32]
   16198:	str	ip, [sp, #16]
   1619c:	str	r4, [sp, #8]
   161a0:	ldr	r4, [sp, #36]	; 0x24
   161a4:	str	r5, [sp, #12]
   161a8:	str	r4, [sp, #4]
   161ac:	str	lr, [sp]
   161b0:	mov	r7, r0
   161b4:	bl	1484c <dcngettext@plt+0x3834>
   161b8:	ldr	r3, [sp, #24]
   161bc:	mov	r0, r7
   161c0:	str	r3, [r8]
   161c4:	add	sp, sp, #44	; 0x2c
   161c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161cc:	mov	r0, #0
   161d0:	bl	16e64 <dcngettext@plt+0x5e4c>
   161d4:	ldr	r3, [pc, #32]	; 161fc <dcngettext@plt+0x51e4>
   161d8:	mov	r5, r0
   161dc:	ldm	r3, {r0, r1}
   161e0:	str	r5, [r7]
   161e4:	stm	r5, {r0, r1}
   161e8:	b	160d4 <dcngettext@plt+0x50bc>
   161ec:	bl	17050 <dcngettext@plt+0x6038>
   161f0:	bl	11000 <abort@plt>
   161f4:	andeq	r9, r2, r8, lsl #2
   161f8:	andeq	r9, r2, r8, lsl #3
   161fc:	andeq	r9, r2, r0, lsl r1
   16200:	push	{r4, r5, r6, lr}
   16204:	mov	r5, r0
   16208:	bl	10f28 <__errno_location@plt>
   1620c:	cmp	r5, #0
   16210:	mov	r1, #48	; 0x30
   16214:	mov	r4, r0
   16218:	ldr	r0, [pc, #16]	; 16230 <dcngettext@plt+0x5218>
   1621c:	ldr	r6, [r4]
   16220:	movne	r0, r5
   16224:	bl	17010 <dcngettext@plt+0x5ff8>
   16228:	str	r6, [r4]
   1622c:	pop	{r4, r5, r6, pc}
   16230:	andeq	r9, r2, r8, lsl #5
   16234:	ldr	r3, [pc, #12]	; 16248 <dcngettext@plt+0x5230>
   16238:	cmp	r0, #0
   1623c:	moveq	r0, r3
   16240:	ldr	r0, [r0]
   16244:	bx	lr
   16248:	andeq	r9, r2, r8, lsl #5
   1624c:	ldr	r3, [pc, #12]	; 16260 <dcngettext@plt+0x5248>
   16250:	cmp	r0, #0
   16254:	moveq	r0, r3
   16258:	str	r1, [r0]
   1625c:	bx	lr
   16260:	andeq	r9, r2, r8, lsl #5
   16264:	ldr	r3, [pc, #52]	; 162a0 <dcngettext@plt+0x5288>
   16268:	cmp	r0, #0
   1626c:	moveq	r0, r3
   16270:	add	r3, r0, #8
   16274:	push	{lr}		; (str lr, [sp, #-4]!)
   16278:	lsr	lr, r1, #5
   1627c:	and	r1, r1, #31
   16280:	ldr	ip, [r3, lr, lsl #2]
   16284:	lsr	r0, ip, r1
   16288:	eor	r2, r2, r0
   1628c:	and	r2, r2, #1
   16290:	and	r0, r0, #1
   16294:	eor	r1, ip, r2, lsl r1
   16298:	str	r1, [r3, lr, lsl #2]
   1629c:	pop	{pc}		; (ldr pc, [sp], #4)
   162a0:	andeq	r9, r2, r8, lsl #5
   162a4:	ldr	r3, [pc, #16]	; 162bc <dcngettext@plt+0x52a4>
   162a8:	cmp	r0, #0
   162ac:	movne	r3, r0
   162b0:	ldr	r0, [r3, #4]
   162b4:	str	r1, [r3, #4]
   162b8:	bx	lr
   162bc:	andeq	r9, r2, r8, lsl #5
   162c0:	ldr	r3, [pc, #44]	; 162f4 <dcngettext@plt+0x52dc>
   162c4:	cmp	r0, #0
   162c8:	moveq	r0, r3
   162cc:	mov	ip, #10
   162d0:	cmp	r2, #0
   162d4:	cmpne	r1, #0
   162d8:	str	ip, [r0]
   162dc:	beq	162ec <dcngettext@plt+0x52d4>
   162e0:	str	r1, [r0, #40]	; 0x28
   162e4:	str	r2, [r0, #44]	; 0x2c
   162e8:	bx	lr
   162ec:	push	{r4, lr}
   162f0:	bl	11000 <abort@plt>
   162f4:	andeq	r9, r2, r8, lsl #5
   162f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   162fc:	sub	sp, sp, #24
   16300:	ldr	ip, [pc, #108]	; 16374 <dcngettext@plt+0x535c>
   16304:	ldr	r4, [sp, #56]	; 0x38
   16308:	mov	r9, r2
   1630c:	cmp	r4, #0
   16310:	moveq	r4, ip
   16314:	mov	sl, r3
   16318:	mov	r7, r0
   1631c:	mov	r8, r1
   16320:	bl	10f28 <__errno_location@plt>
   16324:	ldr	r3, [r4, #44]	; 0x2c
   16328:	mov	r1, r8
   1632c:	ldr	r6, [r0]
   16330:	str	r3, [sp, #16]
   16334:	ldr	r2, [r4, #40]	; 0x28
   16338:	add	r3, r4, #8
   1633c:	str	r3, [sp, #8]
   16340:	str	r2, [sp, #12]
   16344:	ldr	r2, [r4, #4]
   16348:	mov	r5, r0
   1634c:	str	r2, [sp, #4]
   16350:	ldr	ip, [r4]
   16354:	mov	r3, sl
   16358:	mov	r2, r9
   1635c:	mov	r0, r7
   16360:	str	ip, [sp]
   16364:	bl	1484c <dcngettext@plt+0x3834>
   16368:	str	r6, [r5]
   1636c:	add	sp, sp, #24
   16370:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16374:	andeq	r9, r2, r8, lsl #5
   16378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1637c:	cmp	r3, #0
   16380:	sub	sp, sp, #44	; 0x2c
   16384:	ldr	r4, [pc, #192]	; 1644c <dcngettext@plt+0x5434>
   16388:	mov	r6, r2
   1638c:	movne	r4, r3
   16390:	mov	r9, r1
   16394:	mov	r8, r0
   16398:	bl	10f28 <__errno_location@plt>
   1639c:	ldr	r3, [r4, #44]	; 0x2c
   163a0:	ldr	r5, [r4, #4]
   163a4:	add	sl, r4, #8
   163a8:	cmp	r6, #0
   163ac:	orreq	r5, r5, #1
   163b0:	mov	r1, #0
   163b4:	ldr	r2, [r0]
   163b8:	str	r3, [sp, #16]
   163bc:	ldr	r3, [r4, #40]	; 0x28
   163c0:	stmib	sp, {r5, sl}
   163c4:	str	r3, [sp, #12]
   163c8:	ldr	r3, [r4]
   163cc:	mov	r7, r0
   163d0:	str	r2, [sp, #28]
   163d4:	str	r3, [sp]
   163d8:	mov	r2, r8
   163dc:	mov	r3, r9
   163e0:	mov	r0, r1
   163e4:	bl	1484c <dcngettext@plt+0x3834>
   163e8:	add	r1, r0, #1
   163ec:	mov	fp, r0
   163f0:	mov	r0, r1
   163f4:	str	r1, [sp, #36]	; 0x24
   163f8:	bl	16e08 <dcngettext@plt+0x5df0>
   163fc:	ldr	r3, [r4, #44]	; 0x2c
   16400:	mov	r2, r8
   16404:	str	r3, [sp, #16]
   16408:	ldr	r3, [r4, #40]	; 0x28
   1640c:	str	r5, [sp, #4]
   16410:	str	r3, [sp, #12]
   16414:	str	sl, [sp, #8]
   16418:	ldr	ip, [r4]
   1641c:	ldr	r1, [sp, #36]	; 0x24
   16420:	mov	r3, r9
   16424:	str	ip, [sp]
   16428:	str	r0, [sp, #32]
   1642c:	bl	1484c <dcngettext@plt+0x3834>
   16430:	ldr	r2, [sp, #28]
   16434:	cmp	r6, #0
   16438:	str	r2, [r7]
   1643c:	ldr	r0, [sp, #32]
   16440:	strne	fp, [r6]
   16444:	add	sp, sp, #44	; 0x2c
   16448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1644c:	andeq	r9, r2, r8, lsl #5
   16450:	mov	r3, r2
   16454:	mov	r2, #0
   16458:	b	16378 <dcngettext@plt+0x5360>
   1645c:	push	{r4, r5, r6, r7, r8, lr}
   16460:	ldr	r6, [pc, #112]	; 164d8 <dcngettext@plt+0x54c0>
   16464:	ldr	r3, [r6, #4]
   16468:	ldr	r7, [r6]
   1646c:	cmp	r3, #1
   16470:	ble	16494 <dcngettext@plt+0x547c>
   16474:	sub	r5, r7, #8
   16478:	add	r5, r5, r3, lsl #3
   1647c:	mov	r4, r7
   16480:	ldr	r0, [r4, #12]
   16484:	add	r4, r4, #8
   16488:	bl	10de4 <free@plt>
   1648c:	cmp	r4, r5
   16490:	bne	16480 <dcngettext@plt+0x5468>
   16494:	ldr	r0, [r7, #4]
   16498:	ldr	r4, [pc, #60]	; 164dc <dcngettext@plt+0x54c4>
   1649c:	cmp	r0, r4
   164a0:	beq	164b4 <dcngettext@plt+0x549c>
   164a4:	bl	10de4 <free@plt>
   164a8:	mov	r3, #256	; 0x100
   164ac:	str	r4, [r6, #12]
   164b0:	str	r3, [r6, #8]
   164b4:	ldr	r4, [pc, #36]	; 164e0 <dcngettext@plt+0x54c8>
   164b8:	cmp	r7, r4
   164bc:	beq	164cc <dcngettext@plt+0x54b4>
   164c0:	mov	r0, r7
   164c4:	bl	10de4 <free@plt>
   164c8:	str	r4, [r6]
   164cc:	mov	r3, #1
   164d0:	str	r3, [r6, #4]
   164d4:	pop	{r4, r5, r6, r7, r8, pc}
   164d8:	andeq	r9, r2, r8, lsl #2
   164dc:	andeq	r9, r2, r8, lsl #3
   164e0:	andeq	r9, r2, r0, lsl r1
   164e4:	ldr	r3, [pc, #4]	; 164f0 <dcngettext@plt+0x54d8>
   164e8:	mvn	r2, #0
   164ec:	b	16064 <dcngettext@plt+0x504c>
   164f0:	andeq	r9, r2, r8, lsl #5
   164f4:	ldr	r3, [pc]	; 164fc <dcngettext@plt+0x54e4>
   164f8:	b	16064 <dcngettext@plt+0x504c>
   164fc:	andeq	r9, r2, r8, lsl #5
   16500:	mov	r1, r0
   16504:	ldr	r3, [pc, #8]	; 16514 <dcngettext@plt+0x54fc>
   16508:	mvn	r2, #0
   1650c:	mov	r0, #0
   16510:	b	16064 <dcngettext@plt+0x504c>
   16514:	andeq	r9, r2, r8, lsl #5
   16518:	mov	r2, r1
   1651c:	ldr	r3, [pc, #8]	; 1652c <dcngettext@plt+0x5514>
   16520:	mov	r1, r0
   16524:	mov	r0, #0
   16528:	b	16064 <dcngettext@plt+0x504c>
   1652c:	andeq	r9, r2, r8, lsl #5
   16530:	push	{r4, r5, r6, lr}
   16534:	sub	sp, sp, #56	; 0x38
   16538:	ldr	r4, [pc, #68]	; 16584 <dcngettext@plt+0x556c>
   1653c:	mov	r6, r2
   16540:	mov	r5, r0
   16544:	ldr	r3, [r4]
   16548:	add	r0, sp, #4
   1654c:	str	r3, [sp, #52]	; 0x34
   16550:	bl	146dc <dcngettext@plt+0x36c4>
   16554:	add	r3, sp, #4
   16558:	mvn	r2, #0
   1655c:	mov	r1, r6
   16560:	mov	r0, r5
   16564:	bl	16064 <dcngettext@plt+0x504c>
   16568:	ldr	r2, [sp, #52]	; 0x34
   1656c:	ldr	r3, [r4]
   16570:	cmp	r2, r3
   16574:	bne	16580 <dcngettext@plt+0x5568>
   16578:	add	sp, sp, #56	; 0x38
   1657c:	pop	{r4, r5, r6, pc}
   16580:	bl	10e38 <__stack_chk_fail@plt>
   16584:	andeq	r8, r2, r8, lsl #30
   16588:	push	{r4, r5, r6, r7, lr}
   1658c:	sub	sp, sp, #60	; 0x3c
   16590:	ldr	r4, [pc, #72]	; 165e0 <dcngettext@plt+0x55c8>
   16594:	mov	r6, r2
   16598:	mov	r7, r3
   1659c:	ldr	ip, [r4]
   165a0:	mov	r5, r0
   165a4:	add	r0, sp, #4
   165a8:	str	ip, [sp, #52]	; 0x34
   165ac:	bl	146dc <dcngettext@plt+0x36c4>
   165b0:	add	r3, sp, #4
   165b4:	mov	r2, r7
   165b8:	mov	r1, r6
   165bc:	mov	r0, r5
   165c0:	bl	16064 <dcngettext@plt+0x504c>
   165c4:	ldr	r2, [sp, #52]	; 0x34
   165c8:	ldr	r3, [r4]
   165cc:	cmp	r2, r3
   165d0:	bne	165dc <dcngettext@plt+0x55c4>
   165d4:	add	sp, sp, #60	; 0x3c
   165d8:	pop	{r4, r5, r6, r7, pc}
   165dc:	bl	10e38 <__stack_chk_fail@plt>
   165e0:	andeq	r8, r2, r8, lsl #30
   165e4:	mov	r2, r1
   165e8:	mov	r1, r0
   165ec:	mov	r0, #0
   165f0:	b	16530 <dcngettext@plt+0x5518>
   165f4:	mov	r3, r2
   165f8:	mov	r2, r1
   165fc:	mov	r1, r0
   16600:	mov	r0, #0
   16604:	b	16588 <dcngettext@plt+0x5570>
   16608:	push	{r4, r5, r6, r7, r8, r9, lr}
   1660c:	mov	r4, r2
   16610:	ldr	lr, [pc, #128]	; 16698 <dcngettext@plt+0x5680>
   16614:	mov	r8, r0
   16618:	mov	r9, r1
   1661c:	ldm	lr!, {r0, r1, r2, r3}
   16620:	sub	sp, sp, #60	; 0x3c
   16624:	add	ip, sp, #4
   16628:	lsr	r6, r4, #5
   1662c:	stmia	ip!, {r0, r1, r2, r3}
   16630:	add	r7, sp, #12
   16634:	ldm	lr!, {r0, r1, r2, r3}
   16638:	and	r4, r4, #31
   1663c:	ldr	r5, [pc, #88]	; 1669c <dcngettext@plt+0x5684>
   16640:	stmia	ip!, {r0, r1, r2, r3}
   16644:	ldm	lr, {r0, r1, r2, r3}
   16648:	stm	ip, {r0, r1, r2, r3}
   1664c:	mov	r2, r9
   16650:	ldr	r3, [r7, r6, lsl #2]
   16654:	ldr	ip, [r5]
   16658:	mov	r1, r8
   1665c:	mvn	r0, r3, lsr r4
   16660:	and	r0, r0, #1
   16664:	str	ip, [sp, #52]	; 0x34
   16668:	eor	r4, r3, r0, lsl r4
   1666c:	add	r3, sp, #4
   16670:	mov	r0, #0
   16674:	str	r4, [r7, r6, lsl #2]
   16678:	bl	16064 <dcngettext@plt+0x504c>
   1667c:	ldr	r2, [sp, #52]	; 0x34
   16680:	ldr	r3, [r5]
   16684:	cmp	r2, r3
   16688:	bne	16694 <dcngettext@plt+0x567c>
   1668c:	add	sp, sp, #60	; 0x3c
   16690:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16694:	bl	10e38 <__stack_chk_fail@plt>
   16698:	andeq	r9, r2, r8, lsl #5
   1669c:	andeq	r8, r2, r8, lsl #30
   166a0:	mov	r2, r1
   166a4:	mvn	r1, #0
   166a8:	b	16608 <dcngettext@plt+0x55f0>
   166ac:	mov	r2, #58	; 0x3a
   166b0:	mvn	r1, #0
   166b4:	b	16608 <dcngettext@plt+0x55f0>
   166b8:	mov	r2, #58	; 0x3a
   166bc:	b	16608 <dcngettext@plt+0x55f0>
   166c0:	push	{r4, r5, r6, r7, r8, lr}
   166c4:	sub	sp, sp, #104	; 0x68
   166c8:	ldr	r5, [pc, #120]	; 16748 <dcngettext@plt+0x5730>
   166cc:	mov	r6, r0
   166d0:	mov	r0, sp
   166d4:	ldr	r3, [r5]
   166d8:	mov	r7, r2
   166dc:	str	r3, [sp, #100]	; 0x64
   166e0:	bl	146dc <dcngettext@plt+0x36c4>
   166e4:	mov	ip, sp
   166e8:	add	lr, sp, #52	; 0x34
   166ec:	ldm	ip!, {r0, r1, r2, r3}
   166f0:	stmia	lr!, {r0, r1, r2, r3}
   166f4:	ldm	ip!, {r0, r1, r2, r3}
   166f8:	ldr	r8, [sp, #64]	; 0x40
   166fc:	stmia	lr!, {r0, r1, r2, r3}
   16700:	mvn	r4, r8
   16704:	ldm	ip, {r0, r1, r2, r3}
   16708:	and	ip, r4, #67108864	; 0x4000000
   1670c:	eor	ip, ip, r8
   16710:	str	ip, [sp, #64]	; 0x40
   16714:	stm	lr, {r0, r1, r2, r3}
   16718:	add	r3, sp, #52	; 0x34
   1671c:	mvn	r2, #0
   16720:	mov	r1, r7
   16724:	mov	r0, r6
   16728:	bl	16064 <dcngettext@plt+0x504c>
   1672c:	ldr	r2, [sp, #100]	; 0x64
   16730:	ldr	r3, [r5]
   16734:	cmp	r2, r3
   16738:	bne	16744 <dcngettext@plt+0x572c>
   1673c:	add	sp, sp, #104	; 0x68
   16740:	pop	{r4, r5, r6, r7, r8, pc}
   16744:	bl	10e38 <__stack_chk_fail@plt>
   16748:	andeq	r8, r2, r8, lsl #30
   1674c:	push	{r4, r5, r6, r7, r8, r9, lr}
   16750:	mov	r6, r1
   16754:	ldr	lr, [pc, #132]	; 167e0 <dcngettext@plt+0x57c8>
   16758:	mov	r5, r2
   1675c:	mov	r8, r0
   16760:	mov	r9, r3
   16764:	ldm	lr!, {r0, r1, r2, r3}
   16768:	sub	sp, sp, #60	; 0x3c
   1676c:	add	ip, sp, #4
   16770:	ldr	r4, [pc, #108]	; 167e4 <dcngettext@plt+0x57cc>
   16774:	stmia	ip!, {r0, r1, r2, r3}
   16778:	mov	r7, #10
   1677c:	ldm	lr!, {r0, r1, r2, r3}
   16780:	cmp	r5, #0
   16784:	cmpne	r6, #0
   16788:	str	r7, [sp, #4]
   1678c:	stmia	ip!, {r0, r1, r2, r3}
   16790:	ldm	lr, {r0, r1, r2, r3}
   16794:	ldr	lr, [r4]
   16798:	stm	ip, {r0, r1, r2, r3}
   1679c:	str	lr, [sp, #52]	; 0x34
   167a0:	beq	167dc <dcngettext@plt+0x57c4>
   167a4:	add	r3, sp, #4
   167a8:	ldr	r2, [sp, #88]	; 0x58
   167ac:	mov	r1, r9
   167b0:	mov	r0, r8
   167b4:	str	r6, [sp, #44]	; 0x2c
   167b8:	str	r5, [sp, #48]	; 0x30
   167bc:	bl	16064 <dcngettext@plt+0x504c>
   167c0:	ldr	r2, [sp, #52]	; 0x34
   167c4:	ldr	r3, [r4]
   167c8:	cmp	r2, r3
   167cc:	bne	167d8 <dcngettext@plt+0x57c0>
   167d0:	add	sp, sp, #60	; 0x3c
   167d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   167d8:	bl	10e38 <__stack_chk_fail@plt>
   167dc:	bl	11000 <abort@plt>
   167e0:	andeq	r9, r2, r8, lsl #5
   167e4:	andeq	r8, r2, r8, lsl #30
   167e8:	push	{lr}		; (str lr, [sp, #-4]!)
   167ec:	sub	sp, sp, #12
   167f0:	mvn	ip, #0
   167f4:	str	ip, [sp]
   167f8:	bl	1674c <dcngettext@plt+0x5734>
   167fc:	add	sp, sp, #12
   16800:	pop	{pc}		; (ldr pc, [sp], #4)
   16804:	push	{lr}		; (str lr, [sp, #-4]!)
   16808:	sub	sp, sp, #12
   1680c:	mvn	ip, #0
   16810:	mov	r3, r2
   16814:	str	ip, [sp]
   16818:	mov	r2, r1
   1681c:	mov	r1, r0
   16820:	mov	r0, #0
   16824:	bl	1674c <dcngettext@plt+0x5734>
   16828:	add	sp, sp, #12
   1682c:	pop	{pc}		; (ldr pc, [sp], #4)
   16830:	push	{lr}		; (str lr, [sp, #-4]!)
   16834:	sub	sp, sp, #12
   16838:	str	r3, [sp]
   1683c:	mov	r3, r2
   16840:	mov	r2, r1
   16844:	mov	r1, r0
   16848:	mov	r0, #0
   1684c:	bl	1674c <dcngettext@plt+0x5734>
   16850:	add	sp, sp, #12
   16854:	pop	{pc}		; (ldr pc, [sp], #4)
   16858:	ldr	r3, [pc]	; 16860 <dcngettext@plt+0x5848>
   1685c:	b	16064 <dcngettext@plt+0x504c>
   16860:	andeq	r9, r2, r8, lsl r1
   16864:	mov	r2, r1
   16868:	ldr	r3, [pc, #8]	; 16878 <dcngettext@plt+0x5860>
   1686c:	mov	r1, r0
   16870:	mov	r0, #0
   16874:	b	16064 <dcngettext@plt+0x504c>
   16878:	andeq	r9, r2, r8, lsl r1
   1687c:	ldr	r3, [pc, #4]	; 16888 <dcngettext@plt+0x5870>
   16880:	mvn	r2, #0
   16884:	b	16064 <dcngettext@plt+0x504c>
   16888:	andeq	r9, r2, r8, lsl r1
   1688c:	mov	r1, r0
   16890:	ldr	r3, [pc, #8]	; 168a0 <dcngettext@plt+0x5888>
   16894:	mvn	r2, #0
   16898:	mov	r0, #0
   1689c:	b	16064 <dcngettext@plt+0x504c>
   168a0:	andeq	r9, r2, r8, lsl r1
   168a4:	mov	r2, #3
   168a8:	mov	r1, #0
   168ac:	b	17130 <dcngettext@plt+0x6118>
   168b0:	push	{r4, r5, r6, lr}
   168b4:	sub	sp, sp, #32
   168b8:	cmp	r1, #0
   168bc:	mov	r5, r0
   168c0:	ldr	r4, [sp, #48]	; 0x30
   168c4:	ldr	r6, [sp, #52]	; 0x34
   168c8:	beq	16958 <dcngettext@plt+0x5940>
   168cc:	strd	r2, [sp]
   168d0:	mov	r3, r1
   168d4:	ldr	r2, [pc, #828]	; 16c18 <dcngettext@plt+0x5c00>
   168d8:	mov	r1, #1
   168dc:	bl	10f70 <__fprintf_chk@plt>
   168e0:	mov	r2, #5
   168e4:	ldr	r1, [pc, #816]	; 16c1c <dcngettext@plt+0x5c04>
   168e8:	mov	r0, #0
   168ec:	bl	10e2c <dcgettext@plt>
   168f0:	ldr	r3, [pc, #808]	; 16c20 <dcngettext@plt+0x5c08>
   168f4:	ldr	r2, [pc, #808]	; 16c24 <dcngettext@plt+0x5c0c>
   168f8:	str	r3, [sp]
   168fc:	mov	r1, #1
   16900:	mov	r3, r0
   16904:	mov	r0, r5
   16908:	bl	10f70 <__fprintf_chk@plt>
   1690c:	ldr	r1, [pc, #788]	; 16c28 <dcngettext@plt+0x5c10>
   16910:	mov	r2, #5
   16914:	mov	r0, #0
   16918:	bl	10e2c <dcgettext@plt>
   1691c:	mov	r1, r5
   16920:	bl	10d9c <fputs_unlocked@plt>
   16924:	cmp	r6, #9
   16928:	ldrls	pc, [pc, r6, lsl #2]
   1692c:	b	16c08 <dcngettext@plt+0x5bf0>
   16930:	andeq	r6, r1, r4, lsl ip
   16934:	ldrdeq	r6, [r1], -ip
   16938:	andeq	r6, r1, r8, lsl #20
   1693c:	andeq	r6, r1, ip, lsr sl
   16940:	andeq	r6, r1, r8, ror sl
   16944:			; <UNDEFINED> instruction: 0x00016ab8
   16948:	andeq	r6, r1, r0, lsl #22
   1694c:	andeq	r6, r1, r0, asr fp
   16950:	andeq	r6, r1, r8, lsr #23
   16954:	andeq	r6, r1, r0, ror r9
   16958:	str	r3, [sp]
   1695c:	mov	r1, #1
   16960:	mov	r3, r2
   16964:	ldr	r2, [pc, #704]	; 16c2c <dcngettext@plt+0x5c14>
   16968:	bl	10f70 <__fprintf_chk@plt>
   1696c:	b	168e0 <dcngettext@plt+0x58c8>
   16970:	ldr	r1, [pc, #696]	; 16c30 <dcngettext@plt+0x5c18>
   16974:	mov	r2, #5
   16978:	mov	r0, #0
   1697c:	bl	10e2c <dcgettext@plt>
   16980:	ldr	r2, [r4, #32]
   16984:	ldr	r3, [r4, #28]
   16988:	ldr	r1, [r4, #24]
   1698c:	str	r2, [sp, #28]
   16990:	ldr	r2, [r4, #20]
   16994:	str	r3, [sp, #24]
   16998:	ldr	r3, [r4, #16]
   1699c:	str	r1, [sp, #20]
   169a0:	ldr	r1, [r4, #12]
   169a4:	str	r2, [sp, #16]
   169a8:	ldr	r2, [r4, #8]
   169ac:	str	r3, [sp, #12]
   169b0:	ldr	r3, [r4, #4]
   169b4:	str	r1, [sp, #8]
   169b8:	str	r2, [sp, #4]
   169bc:	str	r3, [sp]
   169c0:	mov	r1, #1
   169c4:	ldr	r3, [r4]
   169c8:	mov	r2, r0
   169cc:	mov	r0, r5
   169d0:	bl	10f70 <__fprintf_chk@plt>
   169d4:	add	sp, sp, #32
   169d8:	pop	{r4, r5, r6, pc}
   169dc:	mov	r2, #5
   169e0:	ldr	r1, [pc, #588]	; 16c34 <dcngettext@plt+0x5c1c>
   169e4:	mov	r0, #0
   169e8:	bl	10e2c <dcgettext@plt>
   169ec:	ldr	r3, [r4]
   169f0:	mov	r1, #1
   169f4:	mov	r2, r0
   169f8:	mov	r0, r5
   169fc:	add	sp, sp, #32
   16a00:	pop	{r4, r5, r6, lr}
   16a04:	b	10f70 <__fprintf_chk@plt>
   16a08:	mov	r2, #5
   16a0c:	ldr	r1, [pc, #548]	; 16c38 <dcngettext@plt+0x5c20>
   16a10:	mov	r0, #0
   16a14:	bl	10e2c <dcgettext@plt>
   16a18:	ldr	r2, [r4, #4]
   16a1c:	ldr	r3, [r4]
   16a20:	mov	r1, #1
   16a24:	str	r2, [sp, #48]	; 0x30
   16a28:	mov	r2, r0
   16a2c:	mov	r0, r5
   16a30:	add	sp, sp, #32
   16a34:	pop	{r4, r5, r6, lr}
   16a38:	b	10f70 <__fprintf_chk@plt>
   16a3c:	mov	r2, #5
   16a40:	ldr	r1, [pc, #500]	; 16c3c <dcngettext@plt+0x5c24>
   16a44:	mov	r0, #0
   16a48:	bl	10e2c <dcgettext@plt>
   16a4c:	ldr	r2, [r4, #8]
   16a50:	ldr	r3, [r4, #4]
   16a54:	mov	r1, #1
   16a58:	str	r2, [sp, #52]	; 0x34
   16a5c:	str	r3, [sp, #48]	; 0x30
   16a60:	ldr	r3, [r4]
   16a64:	mov	r2, r0
   16a68:	mov	r0, r5
   16a6c:	add	sp, sp, #32
   16a70:	pop	{r4, r5, r6, lr}
   16a74:	b	10f70 <__fprintf_chk@plt>
   16a78:	mov	r2, #5
   16a7c:	ldr	r1, [pc, #444]	; 16c40 <dcngettext@plt+0x5c28>
   16a80:	mov	r0, #0
   16a84:	bl	10e2c <dcgettext@plt>
   16a88:	ldr	r1, [r4, #12]
   16a8c:	ldr	r2, [r4, #8]
   16a90:	ldr	r3, [r4, #4]
   16a94:	str	r1, [sp, #8]
   16a98:	str	r2, [sp, #4]
   16a9c:	str	r3, [sp]
   16aa0:	mov	r1, #1
   16aa4:	ldr	r3, [r4]
   16aa8:	mov	r2, r0
   16aac:	mov	r0, r5
   16ab0:	bl	10f70 <__fprintf_chk@plt>
   16ab4:	b	169d4 <dcngettext@plt+0x59bc>
   16ab8:	mov	r2, #5
   16abc:	ldr	r1, [pc, #384]	; 16c44 <dcngettext@plt+0x5c2c>
   16ac0:	mov	r0, #0
   16ac4:	bl	10e2c <dcgettext@plt>
   16ac8:	ldr	r3, [r4, #16]
   16acc:	ldr	r1, [r4, #12]
   16ad0:	ldr	r2, [r4, #8]
   16ad4:	str	r3, [sp, #12]
   16ad8:	ldr	r3, [r4, #4]
   16adc:	str	r1, [sp, #8]
   16ae0:	str	r2, [sp, #4]
   16ae4:	str	r3, [sp]
   16ae8:	mov	r1, #1
   16aec:	ldr	r3, [r4]
   16af0:	mov	r2, r0
   16af4:	mov	r0, r5
   16af8:	bl	10f70 <__fprintf_chk@plt>
   16afc:	b	169d4 <dcngettext@plt+0x59bc>
   16b00:	mov	r2, #5
   16b04:	ldr	r1, [pc, #316]	; 16c48 <dcngettext@plt+0x5c30>
   16b08:	mov	r0, #0
   16b0c:	bl	10e2c <dcgettext@plt>
   16b10:	ldr	r2, [r4, #20]
   16b14:	ldr	r3, [r4, #16]
   16b18:	ldr	r1, [r4, #12]
   16b1c:	str	r2, [sp, #16]
   16b20:	ldr	r2, [r4, #8]
   16b24:	str	r3, [sp, #12]
   16b28:	ldr	r3, [r4, #4]
   16b2c:	str	r1, [sp, #8]
   16b30:	str	r2, [sp, #4]
   16b34:	str	r3, [sp]
   16b38:	mov	r1, #1
   16b3c:	ldr	r3, [r4]
   16b40:	mov	r2, r0
   16b44:	mov	r0, r5
   16b48:	bl	10f70 <__fprintf_chk@plt>
   16b4c:	b	169d4 <dcngettext@plt+0x59bc>
   16b50:	mov	r2, #5
   16b54:	ldr	r1, [pc, #240]	; 16c4c <dcngettext@plt+0x5c34>
   16b58:	mov	r0, #0
   16b5c:	bl	10e2c <dcgettext@plt>
   16b60:	ldr	r1, [r4, #24]
   16b64:	ldr	r2, [r4, #20]
   16b68:	ldr	r3, [r4, #16]
   16b6c:	str	r1, [sp, #20]
   16b70:	ldr	r1, [r4, #12]
   16b74:	str	r2, [sp, #16]
   16b78:	ldr	r2, [r4, #8]
   16b7c:	str	r3, [sp, #12]
   16b80:	ldr	r3, [r4, #4]
   16b84:	str	r1, [sp, #8]
   16b88:	str	r2, [sp, #4]
   16b8c:	str	r3, [sp]
   16b90:	mov	r1, #1
   16b94:	ldr	r3, [r4]
   16b98:	mov	r2, r0
   16b9c:	mov	r0, r5
   16ba0:	bl	10f70 <__fprintf_chk@plt>
   16ba4:	b	169d4 <dcngettext@plt+0x59bc>
   16ba8:	mov	r2, #5
   16bac:	ldr	r1, [pc, #156]	; 16c50 <dcngettext@plt+0x5c38>
   16bb0:	mov	r0, #0
   16bb4:	bl	10e2c <dcgettext@plt>
   16bb8:	ldr	r3, [r4, #28]
   16bbc:	ldr	r1, [r4, #24]
   16bc0:	ldr	r2, [r4, #20]
   16bc4:	str	r3, [sp, #24]
   16bc8:	ldr	r3, [r4, #16]
   16bcc:	str	r1, [sp, #20]
   16bd0:	ldr	r1, [r4, #12]
   16bd4:	str	r2, [sp, #16]
   16bd8:	ldr	r2, [r4, #8]
   16bdc:	str	r3, [sp, #12]
   16be0:	ldr	r3, [r4, #4]
   16be4:	str	r1, [sp, #8]
   16be8:	str	r2, [sp, #4]
   16bec:	str	r3, [sp]
   16bf0:	mov	r1, #1
   16bf4:	ldr	r3, [r4]
   16bf8:	mov	r2, r0
   16bfc:	mov	r0, r5
   16c00:	bl	10f70 <__fprintf_chk@plt>
   16c04:	b	169d4 <dcngettext@plt+0x59bc>
   16c08:	mov	r2, #5
   16c0c:	ldr	r1, [pc, #64]	; 16c54 <dcngettext@plt+0x5c3c>
   16c10:	b	16978 <dcngettext@plt+0x5960>
   16c14:	bl	11000 <abort@plt>
   16c18:	andeq	r8, r1, r8, asr #14
   16c1c:	andeq	r8, r1, ip, asr r7
   16c20:	andeq	r0, r0, r2, ror #15
   16c24:	andeq	r8, r1, r0, lsr sl
   16c28:	andeq	r8, r1, r0, ror #14
   16c2c:	andeq	r8, r1, r4, asr r7
   16c30:	andeq	r8, r1, r8, lsr r9
   16c34:	andeq	r8, r1, ip, lsr #16
   16c38:	andeq	r8, r1, ip, lsr r8
   16c3c:	andeq	r8, r1, r4, asr r8
   16c40:	andeq	r8, r1, r0, ror r8
   16c44:	muleq	r1, r0, r8
   16c48:			; <UNDEFINED> instruction: 0x000188b4
   16c4c:	ldrdeq	r8, [r1], -ip
   16c50:	andeq	r8, r1, r8, lsl #18
   16c54:	andeq	r8, r1, ip, ror #18
   16c58:	push	{r4, r5, lr}
   16c5c:	sub	sp, sp, #12
   16c60:	ldr	r5, [sp, #24]
   16c64:	ldr	ip, [r5]
   16c68:	cmp	ip, #0
   16c6c:	beq	16c88 <dcngettext@plt+0x5c70>
   16c70:	mov	lr, r5
   16c74:	mov	ip, #0
   16c78:	ldr	r4, [lr, #4]!
   16c7c:	add	ip, ip, #1
   16c80:	cmp	r4, #0
   16c84:	bne	16c78 <dcngettext@plt+0x5c60>
   16c88:	stm	sp, {r5, ip}
   16c8c:	bl	168b0 <dcngettext@plt+0x5898>
   16c90:	add	sp, sp, #12
   16c94:	pop	{r4, r5, pc}
   16c98:	push	{r4, r5, r6, lr}
   16c9c:	sub	sp, sp, #56	; 0x38
   16ca0:	ldr	r6, [pc, #88]	; 16d00 <dcngettext@plt+0x5ce8>
   16ca4:	ldr	r5, [sp, #72]	; 0x48
   16ca8:	add	r4, sp, #8
   16cac:	ldr	ip, [r6]
   16cb0:	str	ip, [sp, #52]	; 0x34
   16cb4:	mov	ip, #0
   16cb8:	ldr	lr, [r5], #4
   16cbc:	cmp	lr, #0
   16cc0:	str	lr, [r4, #4]!
   16cc4:	beq	16cd4 <dcngettext@plt+0x5cbc>
   16cc8:	add	ip, ip, #1
   16ccc:	cmp	ip, #10
   16cd0:	bne	16cb8 <dcngettext@plt+0x5ca0>
   16cd4:	add	lr, sp, #12
   16cd8:	str	ip, [sp, #4]
   16cdc:	str	lr, [sp]
   16ce0:	bl	168b0 <dcngettext@plt+0x5898>
   16ce4:	ldr	r2, [sp, #52]	; 0x34
   16ce8:	ldr	r3, [r6]
   16cec:	cmp	r2, r3
   16cf0:	bne	16cfc <dcngettext@plt+0x5ce4>
   16cf4:	add	sp, sp, #56	; 0x38
   16cf8:	pop	{r4, r5, r6, pc}
   16cfc:	bl	10e38 <__stack_chk_fail@plt>
   16d00:	andeq	r8, r2, r8, lsl #30
   16d04:	push	{r3}		; (str r3, [sp, #-4]!)
   16d08:	mov	ip, #0
   16d0c:	push	{r4, r5, r6, lr}
   16d10:	sub	sp, sp, #60	; 0x3c
   16d14:	ldr	r6, [pc, #100]	; 16d80 <dcngettext@plt+0x5d68>
   16d18:	add	r5, sp, #8
   16d1c:	add	r4, sp, #80	; 0x50
   16d20:	ldr	r3, [r6]
   16d24:	str	r4, [sp, #8]
   16d28:	str	r3, [sp, #52]	; 0x34
   16d2c:	ldr	r3, [sp, #76]	; 0x4c
   16d30:	ldr	lr, [r4], #4
   16d34:	cmp	lr, #0
   16d38:	str	lr, [r5, #4]!
   16d3c:	beq	16d4c <dcngettext@plt+0x5d34>
   16d40:	add	ip, ip, #1
   16d44:	cmp	ip, #10
   16d48:	bne	16d30 <dcngettext@plt+0x5d18>
   16d4c:	add	lr, sp, #12
   16d50:	str	ip, [sp, #4]
   16d54:	str	lr, [sp]
   16d58:	bl	168b0 <dcngettext@plt+0x5898>
   16d5c:	ldr	r2, [sp, #52]	; 0x34
   16d60:	ldr	r3, [r6]
   16d64:	cmp	r2, r3
   16d68:	bne	16d7c <dcngettext@plt+0x5d64>
   16d6c:	add	sp, sp, #60	; 0x3c
   16d70:	pop	{r4, r5, r6, lr}
   16d74:	add	sp, sp, #4
   16d78:	bx	lr
   16d7c:	bl	10e38 <__stack_chk_fail@plt>
   16d80:	andeq	r8, r2, r8, lsl #30
   16d84:	push	{r4, lr}
   16d88:	mov	r2, #5
   16d8c:	ldr	r1, [pc, #88]	; 16dec <dcngettext@plt+0x5dd4>
   16d90:	mov	r0, #0
   16d94:	bl	10e2c <dcgettext@plt>
   16d98:	ldr	r2, [pc, #80]	; 16df0 <dcngettext@plt+0x5dd8>
   16d9c:	mov	r1, r0
   16da0:	mov	r0, #1
   16da4:	bl	10f58 <__printf_chk@plt>
   16da8:	mov	r2, #5
   16dac:	ldr	r1, [pc, #64]	; 16df4 <dcngettext@plt+0x5ddc>
   16db0:	mov	r0, #0
   16db4:	bl	10e2c <dcgettext@plt>
   16db8:	ldr	r3, [pc, #56]	; 16df8 <dcngettext@plt+0x5de0>
   16dbc:	ldr	r2, [pc, #56]	; 16dfc <dcngettext@plt+0x5de4>
   16dc0:	mov	r1, r0
   16dc4:	mov	r0, #1
   16dc8:	bl	10f58 <__printf_chk@plt>
   16dcc:	ldr	r1, [pc, #44]	; 16e00 <dcngettext@plt+0x5de8>
   16dd0:	mov	r2, #5
   16dd4:	mov	r0, #0
   16dd8:	bl	10e2c <dcgettext@plt>
   16ddc:	ldr	r3, [pc, #32]	; 16e04 <dcngettext@plt+0x5dec>
   16de0:	pop	{r4, lr}
   16de4:	ldr	r1, [r3]
   16de8:	b	10d9c <fputs_unlocked@plt>
   16dec:	andeq	r8, r1, r8, lsr #19
   16df0:	andeq	r8, r1, r0, asr #19
   16df4:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   16df8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   16dfc:	andeq	r7, r1, r4, asr #31
   16e00:	andeq	r8, r1, ip, ror #19
   16e04:	andeq	r9, r2, r4, ror #2
   16e08:	push	{r4, lr}
   16e0c:	mov	r4, r0
   16e10:	bl	10eb0 <malloc@plt>
   16e14:	adds	r4, r4, #0
   16e18:	movne	r4, #1
   16e1c:	cmp	r0, #0
   16e20:	movne	r4, #0
   16e24:	cmp	r4, #0
   16e28:	popeq	{r4, pc}
   16e2c:	bl	17050 <dcngettext@plt+0x6038>
   16e30:	push	{r4, r5, r6, lr}
   16e34:	umull	r4, r5, r0, r1
   16e38:	adds	r3, r5, #0
   16e3c:	movne	r3, #1
   16e40:	cmp	r4, #0
   16e44:	blt	16e5c <dcngettext@plt+0x5e44>
   16e48:	cmp	r3, #0
   16e4c:	bne	16e5c <dcngettext@plt+0x5e44>
   16e50:	mul	r0, r1, r0
   16e54:	pop	{r4, r5, r6, lr}
   16e58:	b	16e08 <dcngettext@plt+0x5df0>
   16e5c:	bl	17050 <dcngettext@plt+0x6038>
   16e60:	b	16e08 <dcngettext@plt+0x5df0>
   16e64:	adds	r3, r0, #0
   16e68:	movne	r3, #1
   16e6c:	cmp	r1, #0
   16e70:	movne	r3, #0
   16e74:	cmp	r3, #0
   16e78:	push	{r4, lr}
   16e7c:	bne	16ea4 <dcngettext@plt+0x5e8c>
   16e80:	mov	r4, r1
   16e84:	bl	10e44 <realloc@plt>
   16e88:	adds	r4, r4, #0
   16e8c:	movne	r4, #1
   16e90:	cmp	r0, #0
   16e94:	movne	r4, #0
   16e98:	cmp	r4, #0
   16e9c:	popeq	{r4, pc}
   16ea0:	bl	17050 <dcngettext@plt+0x6038>
   16ea4:	bl	10de4 <free@plt>
   16ea8:	mov	r0, #0
   16eac:	pop	{r4, pc}
   16eb0:	push	{r4, r5, r6, lr}
   16eb4:	umull	r4, r5, r1, r2
   16eb8:	adds	r3, r5, #0
   16ebc:	movne	r3, #1
   16ec0:	cmp	r4, #0
   16ec4:	blt	16edc <dcngettext@plt+0x5ec4>
   16ec8:	cmp	r3, #0
   16ecc:	bne	16edc <dcngettext@plt+0x5ec4>
   16ed0:	mul	r1, r2, r1
   16ed4:	pop	{r4, r5, r6, lr}
   16ed8:	b	16e64 <dcngettext@plt+0x5e4c>
   16edc:	bl	17050 <dcngettext@plt+0x6038>
   16ee0:	push	{r4, r5, r6, r7, r8, lr}
   16ee4:	subs	r7, r0, #0
   16ee8:	mov	r6, r1
   16eec:	mov	r5, r2
   16ef0:	ldr	r4, [r1]
   16ef4:	beq	16f28 <dcngettext@plt+0x5f10>
   16ef8:	mov	r1, r2
   16efc:	ldr	r0, [pc, #104]	; 16f6c <dcngettext@plt+0x5f54>
   16f00:	bl	174f0 <dcngettext@plt+0x64d8>
   16f04:	cmp	r0, r4
   16f08:	bls	16f4c <dcngettext@plt+0x5f34>
   16f0c:	add	r3, r4, #1
   16f10:	add	r4, r3, r4, lsr #1
   16f14:	str	r4, [r6]
   16f18:	mul	r1, r5, r4
   16f1c:	mov	r0, r7
   16f20:	pop	{r4, r5, r6, r7, r8, lr}
   16f24:	b	16e64 <dcngettext@plt+0x5e4c>
   16f28:	cmp	r4, #0
   16f2c:	beq	16f50 <dcngettext@plt+0x5f38>
   16f30:	umull	r0, r1, r4, r5
   16f34:	adds	r3, r1, #0
   16f38:	movne	r3, #1
   16f3c:	cmp	r0, #0
   16f40:	blt	16f4c <dcngettext@plt+0x5f34>
   16f44:	cmp	r3, #0
   16f48:	beq	16f14 <dcngettext@plt+0x5efc>
   16f4c:	bl	17050 <dcngettext@plt+0x6038>
   16f50:	mov	r1, r2
   16f54:	mov	r0, #64	; 0x40
   16f58:	bl	174f0 <dcngettext@plt+0x64d8>
   16f5c:	cmp	r5, #64	; 0x40
   16f60:	movls	r4, r0
   16f64:	addhi	r4, r0, #1
   16f68:	b	16f30 <dcngettext@plt+0x5f18>
   16f6c:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   16f70:	cmp	r0, #0
   16f74:	ldr	r3, [r1]
   16f78:	beq	16f9c <dcngettext@plt+0x5f84>
   16f7c:	ldr	r2, [pc, #60]	; 16fc0 <dcngettext@plt+0x5fa8>
   16f80:	cmp	r3, r2
   16f84:	bhi	16fb8 <dcngettext@plt+0x5fa0>
   16f88:	add	r2, r3, #1
   16f8c:	add	r3, r2, r3, lsr #1
   16f90:	str	r3, [r1]
   16f94:	mov	r1, r3
   16f98:	b	16e64 <dcngettext@plt+0x5e4c>
   16f9c:	cmp	r3, #0
   16fa0:	bne	16fb4 <dcngettext@plt+0x5f9c>
   16fa4:	mov	r3, #64	; 0x40
   16fa8:	str	r3, [r1]
   16fac:	mov	r1, r3
   16fb0:	b	16e64 <dcngettext@plt+0x5e4c>
   16fb4:	bge	16f90 <dcngettext@plt+0x5f78>
   16fb8:	push	{r4, lr}
   16fbc:	bl	17050 <dcngettext@plt+0x6038>
   16fc0:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   16fc4:	push	{r4, lr}
   16fc8:	mov	r4, r0
   16fcc:	bl	16e08 <dcngettext@plt+0x5df0>
   16fd0:	mov	r2, r4
   16fd4:	mov	r1, #0
   16fd8:	pop	{r4, lr}
   16fdc:	b	10f4c <memset@plt>
   16fe0:	push	{r4, r5, r6, lr}
   16fe4:	umull	r4, r5, r0, r1
   16fe8:	adds	r3, r5, #0
   16fec:	movne	r3, #1
   16ff0:	cmp	r4, #0
   16ff4:	blt	1700c <dcngettext@plt+0x5ff4>
   16ff8:	cmp	r3, #0
   16ffc:	bne	1700c <dcngettext@plt+0x5ff4>
   17000:	bl	10d90 <calloc@plt>
   17004:	cmp	r0, #0
   17008:	popne	{r4, r5, r6, pc}
   1700c:	bl	17050 <dcngettext@plt+0x6038>
   17010:	push	{r4, r5, r6, lr}
   17014:	mov	r4, r1
   17018:	mov	r5, r0
   1701c:	mov	r0, r1
   17020:	bl	16e08 <dcngettext@plt+0x5df0>
   17024:	mov	r2, r4
   17028:	mov	r1, r5
   1702c:	pop	{r4, r5, r6, lr}
   17030:	b	10dfc <memcpy@plt>
   17034:	push	{r4, lr}
   17038:	mov	r4, r0
   1703c:	bl	10f10 <strlen@plt>
   17040:	add	r1, r0, #1
   17044:	mov	r0, r4
   17048:	pop	{r4, lr}
   1704c:	b	17010 <dcngettext@plt+0x5ff8>
   17050:	ldr	r3, [pc, #44]	; 17084 <dcngettext@plt+0x606c>
   17054:	push	{r4, lr}
   17058:	mov	r2, #5
   1705c:	ldr	r1, [pc, #36]	; 17088 <dcngettext@plt+0x6070>
   17060:	mov	r0, #0
   17064:	ldr	r4, [r3]
   17068:	bl	10e2c <dcgettext@plt>
   1706c:	ldr	r2, [pc, #24]	; 1708c <dcngettext@plt+0x6074>
   17070:	mov	r1, #0
   17074:	mov	r3, r0
   17078:	mov	r0, r4
   1707c:	bl	10ea4 <error@plt>
   17080:	bl	11000 <abort@plt>
   17084:	andeq	r9, r2, r4, lsl #2
   17088:	andeq	r8, r1, r0, ror #20
   1708c:	andeq	r8, r1, r8, ror #11
   17090:	push	{r4, r5, lr}
   17094:	sub	sp, sp, #12
   17098:	mov	r4, r0
   1709c:	bl	10f64 <fileno@plt>
   170a0:	cmp	r0, #0
   170a4:	mov	r0, r4
   170a8:	blt	17124 <dcngettext@plt+0x610c>
   170ac:	bl	10ec8 <__freading@plt>
   170b0:	cmp	r0, #0
   170b4:	bne	170f0 <dcngettext@plt+0x60d8>
   170b8:	mov	r0, r4
   170bc:	bl	1727c <dcngettext@plt+0x6264>
   170c0:	cmp	r0, #0
   170c4:	beq	17120 <dcngettext@plt+0x6108>
   170c8:	bl	10f28 <__errno_location@plt>
   170cc:	mov	r5, r0
   170d0:	mov	r0, r4
   170d4:	ldr	r4, [r5]
   170d8:	bl	10f7c <fclose@plt>
   170dc:	cmp	r4, #0
   170e0:	mvnne	r0, #0
   170e4:	strne	r4, [r5]
   170e8:	add	sp, sp, #12
   170ec:	pop	{r4, r5, pc}
   170f0:	mov	r0, r4
   170f4:	bl	10f64 <fileno@plt>
   170f8:	mov	r3, #1
   170fc:	str	r3, [sp]
   17100:	mov	r2, #0
   17104:	mov	r3, #0
   17108:	bl	10e74 <lseek64@plt>
   1710c:	mvn	r3, #0
   17110:	mvn	r2, #0
   17114:	cmp	r1, r3
   17118:	cmpeq	r0, r2
   1711c:	bne	170b8 <dcngettext@plt+0x60a0>
   17120:	mov	r0, r4
   17124:	add	sp, sp, #12
   17128:	pop	{r4, r5, lr}
   1712c:	b	10f7c <fclose@plt>
   17130:	push	{r1, r2, r3}
   17134:	push	{r4, r5, r6, r7, r8, lr}
   17138:	sub	sp, sp, #12
   1713c:	ldr	r4, [pc, #300]	; 17270 <dcngettext@plt+0x6258>
   17140:	ldr	r3, [pc, #300]	; 17274 <dcngettext@plt+0x625c>
   17144:	ldr	r1, [sp, #36]	; 0x24
   17148:	ldr	r2, [r4]
   1714c:	cmp	r1, r3
   17150:	add	r3, sp, #40	; 0x28
   17154:	str	r2, [sp, #4]
   17158:	str	r3, [sp]
   1715c:	bne	17228 <dcngettext@plt+0x6210>
   17160:	ldr	r6, [pc, #272]	; 17278 <dcngettext@plt+0x6260>
   17164:	add	r3, sp, #44	; 0x2c
   17168:	str	r3, [sp]
   1716c:	ldr	r3, [r6]
   17170:	ldr	r7, [sp, #40]	; 0x28
   17174:	cmp	r3, #0
   17178:	blt	171bc <dcngettext@plt+0x61a4>
   1717c:	mov	r2, r7
   17180:	mov	r8, r0
   17184:	bl	10f94 <fcntl64@plt>
   17188:	subs	r5, r0, #0
   1718c:	blt	17238 <dcngettext@plt+0x6220>
   17190:	mov	r3, #1
   17194:	str	r3, [r6]
   17198:	ldr	r2, [sp, #4]
   1719c:	ldr	r3, [r4]
   171a0:	mov	r0, r5
   171a4:	cmp	r2, r3
   171a8:	bne	1726c <dcngettext@plt+0x6254>
   171ac:	add	sp, sp, #12
   171b0:	pop	{r4, r5, r6, r7, r8, lr}
   171b4:	add	sp, sp, #12
   171b8:	bx	lr
   171bc:	mov	r2, r7
   171c0:	mov	r1, #0
   171c4:	bl	17130 <dcngettext@plt+0x6118>
   171c8:	subs	r5, r0, #0
   171cc:	blt	17198 <dcngettext@plt+0x6180>
   171d0:	ldr	r3, [r6]
   171d4:	cmn	r3, #1
   171d8:	bne	17198 <dcngettext@plt+0x6180>
   171dc:	mov	r1, #1
   171e0:	mov	r0, r5
   171e4:	bl	10f94 <fcntl64@plt>
   171e8:	subs	r2, r0, #0
   171ec:	blt	17208 <dcngettext@plt+0x61f0>
   171f0:	orr	r2, r2, #1
   171f4:	mov	r1, #2
   171f8:	mov	r0, r5
   171fc:	bl	10f94 <fcntl64@plt>
   17200:	cmn	r0, #1
   17204:	bne	17198 <dcngettext@plt+0x6180>
   17208:	bl	10f28 <__errno_location@plt>
   1720c:	mov	r6, r0
   17210:	mov	r0, r5
   17214:	ldr	r7, [r6]
   17218:	mvn	r5, #0
   1721c:	bl	1100c <close@plt>
   17220:	str	r7, [r6]
   17224:	b	17198 <dcngettext@plt+0x6180>
   17228:	ldr	r2, [sp, #40]	; 0x28
   1722c:	bl	10f94 <fcntl64@plt>
   17230:	mov	r5, r0
   17234:	b	17198 <dcngettext@plt+0x6180>
   17238:	bl	10f28 <__errno_location@plt>
   1723c:	ldr	r3, [r0]
   17240:	cmp	r3, #22
   17244:	bne	17190 <dcngettext@plt+0x6178>
   17248:	mov	r2, r7
   1724c:	mov	r0, r8
   17250:	mov	r1, #0
   17254:	bl	17130 <dcngettext@plt+0x6118>
   17258:	subs	r5, r0, #0
   1725c:	mvnge	r3, #0
   17260:	strge	r3, [r6]
   17264:	bge	171dc <dcngettext@plt+0x61c4>
   17268:	b	17198 <dcngettext@plt+0x6180>
   1726c:	bl	10e38 <__stack_chk_fail@plt>
   17270:	andeq	r8, r2, r8, lsl #30
   17274:	andeq	r0, r0, r6, lsl #8
   17278:			; <UNDEFINED> instruction: 0x000292b8
   1727c:	push	{r4, lr}
   17280:	subs	r4, r0, #0
   17284:	sub	sp, sp, #8
   17288:	beq	172a4 <dcngettext@plt+0x628c>
   1728c:	bl	10ec8 <__freading@plt>
   17290:	cmp	r0, #0
   17294:	beq	172a4 <dcngettext@plt+0x628c>
   17298:	ldr	r3, [r4]
   1729c:	tst	r3, #256	; 0x100
   172a0:	bne	172b4 <dcngettext@plt+0x629c>
   172a4:	mov	r0, r4
   172a8:	add	sp, sp, #8
   172ac:	pop	{r4, lr}
   172b0:	b	10dd8 <fflush@plt>
   172b4:	mov	r3, #1
   172b8:	str	r3, [sp]
   172bc:	mov	r2, #0
   172c0:	mov	r3, #0
   172c4:	mov	r0, r4
   172c8:	bl	172dc <dcngettext@plt+0x62c4>
   172cc:	mov	r0, r4
   172d0:	add	sp, sp, #8
   172d4:	pop	{r4, lr}
   172d8:	b	10dd8 <fflush@plt>
   172dc:	push	{r4, r5, r6, r7, r8, lr}
   172e0:	sub	sp, sp, #8
   172e4:	ldmib	r0, {ip, lr}
   172e8:	mov	r4, r0
   172ec:	ldr	r5, [sp, #32]
   172f0:	cmp	lr, ip
   172f4:	beq	1730c <dcngettext@plt+0x62f4>
   172f8:	str	r5, [sp, #32]
   172fc:	mov	r0, r4
   17300:	add	sp, sp, #8
   17304:	pop	{r4, r5, r6, r7, r8, lr}
   17308:	b	10f88 <fseeko64@plt>
   1730c:	ldr	lr, [r0, #20]
   17310:	ldr	ip, [r0, #16]
   17314:	cmp	lr, ip
   17318:	bne	172f8 <dcngettext@plt+0x62e0>
   1731c:	ldr	r8, [r0, #36]	; 0x24
   17320:	cmp	r8, #0
   17324:	bne	172f8 <dcngettext@plt+0x62e0>
   17328:	mov	r6, r2
   1732c:	mov	r7, r3
   17330:	bl	10f64 <fileno@plt>
   17334:	mov	r2, r6
   17338:	mov	r3, r7
   1733c:	str	r5, [sp]
   17340:	bl	10e74 <lseek64@plt>
   17344:	mvn	r3, #0
   17348:	mvn	r2, #0
   1734c:	cmp	r1, r3
   17350:	cmpeq	r0, r2
   17354:	beq	17374 <dcngettext@plt+0x635c>
   17358:	ldr	r3, [r4]
   1735c:	strd	r0, [r4, #80]	; 0x50
   17360:	mov	r0, r8
   17364:	bic	r3, r3, #16
   17368:	str	r3, [r4]
   1736c:	add	sp, sp, #8
   17370:	pop	{r4, r5, r6, r7, r8, pc}
   17374:	mvn	r0, #0
   17378:	b	1736c <dcngettext@plt+0x6354>
   1737c:	push	{r4, r5, r6, r7, r8, lr}
   17380:	subs	r7, r0, #0
   17384:	ldr	r5, [pc, #108]	; 173f8 <dcngettext@plt+0x63e0>
   17388:	sub	sp, sp, #8
   1738c:	mov	r8, r1
   17390:	ldr	r1, [r5]
   17394:	moveq	r7, sp
   17398:	str	r1, [sp, #4]
   1739c:	mov	r0, r7
   173a0:	mov	r1, r8
   173a4:	mov	r6, r2
   173a8:	bl	10e98 <mbrtowc@plt>
   173ac:	cmp	r6, #0
   173b0:	cmnne	r0, #3
   173b4:	mov	r4, r0
   173b8:	bhi	173d8 <dcngettext@plt+0x63c0>
   173bc:	ldr	r2, [sp, #4]
   173c0:	ldr	r3, [r5]
   173c4:	mov	r0, r4
   173c8:	cmp	r2, r3
   173cc:	bne	173f4 <dcngettext@plt+0x63dc>
   173d0:	add	sp, sp, #8
   173d4:	pop	{r4, r5, r6, r7, r8, pc}
   173d8:	mov	r0, #0
   173dc:	bl	17470 <dcngettext@plt+0x6458>
   173e0:	cmp	r0, #0
   173e4:	moveq	r4, #1
   173e8:	ldrbeq	r3, [r8]
   173ec:	streq	r3, [r7]
   173f0:	b	173bc <dcngettext@plt+0x63a4>
   173f4:	bl	10e38 <__stack_chk_fail@plt>
   173f8:	andeq	r8, r2, r8, lsl #30
   173fc:	push	{r4, r5, r6, lr}
   17400:	mov	r4, r0
   17404:	bl	10e8c <__fpending@plt>
   17408:	ldr	r5, [r4]
   1740c:	and	r5, r5, #32
   17410:	mov	r6, r0
   17414:	mov	r0, r4
   17418:	bl	17090 <dcngettext@plt+0x6078>
   1741c:	cmp	r5, #0
   17420:	mov	r4, r0
   17424:	bne	17450 <dcngettext@plt+0x6438>
   17428:	cmp	r0, #0
   1742c:	beq	17448 <dcngettext@plt+0x6430>
   17430:	cmp	r6, #0
   17434:	bne	17468 <dcngettext@plt+0x6450>
   17438:	bl	10f28 <__errno_location@plt>
   1743c:	ldr	r4, [r0]
   17440:	subs	r4, r4, #9
   17444:	mvnne	r4, #0
   17448:	mov	r0, r4
   1744c:	pop	{r4, r5, r6, pc}
   17450:	cmp	r0, #0
   17454:	bne	17468 <dcngettext@plt+0x6450>
   17458:	bl	10f28 <__errno_location@plt>
   1745c:	str	r4, [r0]
   17460:	mvn	r4, #0
   17464:	b	17448 <dcngettext@plt+0x6430>
   17468:	mvn	r4, #0
   1746c:	b	17448 <dcngettext@plt+0x6430>
   17470:	push	{r4, lr}
   17474:	mov	r1, #0
   17478:	bl	10fac <setlocale@plt>
   1747c:	subs	r4, r0, #0
   17480:	beq	174ac <dcngettext@plt+0x6494>
   17484:	ldr	r1, [pc, #40]	; 174b4 <dcngettext@plt+0x649c>
   17488:	bl	10dc0 <strcmp@plt>
   1748c:	cmp	r0, #0
   17490:	popeq	{r4, pc}
   17494:	mov	r0, r4
   17498:	ldr	r1, [pc, #24]	; 174b8 <dcngettext@plt+0x64a0>
   1749c:	bl	10dc0 <strcmp@plt>
   174a0:	adds	r0, r0, #0
   174a4:	movne	r0, #1
   174a8:	pop	{r4, pc}
   174ac:	mov	r0, #1
   174b0:	pop	{r4, pc}
   174b4:	andeq	r8, r1, r4, ror sl
   174b8:	andeq	r8, r1, r8, ror sl
   174bc:	push	{r4, lr}
   174c0:	mov	r0, #14
   174c4:	bl	10fc4 <nl_langinfo@plt>
   174c8:	cmp	r0, #0
   174cc:	beq	174e4 <dcngettext@plt+0x64cc>
   174d0:	ldrb	r2, [r0]
   174d4:	ldr	r3, [pc, #16]	; 174ec <dcngettext@plt+0x64d4>
   174d8:	cmp	r2, #0
   174dc:	moveq	r0, r3
   174e0:	pop	{r4, pc}
   174e4:	ldr	r0, [pc]	; 174ec <dcngettext@plt+0x64d4>
   174e8:	pop	{r4, pc}
   174ec:	andeq	r8, r1, r0, lsl #21
   174f0:	subs	r2, r1, #1
   174f4:	bxeq	lr
   174f8:	bcc	176d0 <dcngettext@plt+0x66b8>
   174fc:	cmp	r0, r1
   17500:	bls	176b4 <dcngettext@plt+0x669c>
   17504:	tst	r1, r2
   17508:	beq	176c0 <dcngettext@plt+0x66a8>
   1750c:	clz	r3, r0
   17510:	clz	r2, r1
   17514:	sub	r3, r2, r3
   17518:	rsbs	r3, r3, #31
   1751c:	addne	r3, r3, r3, lsl #1
   17520:	mov	r2, #0
   17524:	addne	pc, pc, r3, lsl #2
   17528:	nop			; (mov r0, r0)
   1752c:	cmp	r0, r1, lsl #31
   17530:	adc	r2, r2, r2
   17534:	subcs	r0, r0, r1, lsl #31
   17538:	cmp	r0, r1, lsl #30
   1753c:	adc	r2, r2, r2
   17540:	subcs	r0, r0, r1, lsl #30
   17544:	cmp	r0, r1, lsl #29
   17548:	adc	r2, r2, r2
   1754c:	subcs	r0, r0, r1, lsl #29
   17550:	cmp	r0, r1, lsl #28
   17554:	adc	r2, r2, r2
   17558:	subcs	r0, r0, r1, lsl #28
   1755c:	cmp	r0, r1, lsl #27
   17560:	adc	r2, r2, r2
   17564:	subcs	r0, r0, r1, lsl #27
   17568:	cmp	r0, r1, lsl #26
   1756c:	adc	r2, r2, r2
   17570:	subcs	r0, r0, r1, lsl #26
   17574:	cmp	r0, r1, lsl #25
   17578:	adc	r2, r2, r2
   1757c:	subcs	r0, r0, r1, lsl #25
   17580:	cmp	r0, r1, lsl #24
   17584:	adc	r2, r2, r2
   17588:	subcs	r0, r0, r1, lsl #24
   1758c:	cmp	r0, r1, lsl #23
   17590:	adc	r2, r2, r2
   17594:	subcs	r0, r0, r1, lsl #23
   17598:	cmp	r0, r1, lsl #22
   1759c:	adc	r2, r2, r2
   175a0:	subcs	r0, r0, r1, lsl #22
   175a4:	cmp	r0, r1, lsl #21
   175a8:	adc	r2, r2, r2
   175ac:	subcs	r0, r0, r1, lsl #21
   175b0:	cmp	r0, r1, lsl #20
   175b4:	adc	r2, r2, r2
   175b8:	subcs	r0, r0, r1, lsl #20
   175bc:	cmp	r0, r1, lsl #19
   175c0:	adc	r2, r2, r2
   175c4:	subcs	r0, r0, r1, lsl #19
   175c8:	cmp	r0, r1, lsl #18
   175cc:	adc	r2, r2, r2
   175d0:	subcs	r0, r0, r1, lsl #18
   175d4:	cmp	r0, r1, lsl #17
   175d8:	adc	r2, r2, r2
   175dc:	subcs	r0, r0, r1, lsl #17
   175e0:	cmp	r0, r1, lsl #16
   175e4:	adc	r2, r2, r2
   175e8:	subcs	r0, r0, r1, lsl #16
   175ec:	cmp	r0, r1, lsl #15
   175f0:	adc	r2, r2, r2
   175f4:	subcs	r0, r0, r1, lsl #15
   175f8:	cmp	r0, r1, lsl #14
   175fc:	adc	r2, r2, r2
   17600:	subcs	r0, r0, r1, lsl #14
   17604:	cmp	r0, r1, lsl #13
   17608:	adc	r2, r2, r2
   1760c:	subcs	r0, r0, r1, lsl #13
   17610:	cmp	r0, r1, lsl #12
   17614:	adc	r2, r2, r2
   17618:	subcs	r0, r0, r1, lsl #12
   1761c:	cmp	r0, r1, lsl #11
   17620:	adc	r2, r2, r2
   17624:	subcs	r0, r0, r1, lsl #11
   17628:	cmp	r0, r1, lsl #10
   1762c:	adc	r2, r2, r2
   17630:	subcs	r0, r0, r1, lsl #10
   17634:	cmp	r0, r1, lsl #9
   17638:	adc	r2, r2, r2
   1763c:	subcs	r0, r0, r1, lsl #9
   17640:	cmp	r0, r1, lsl #8
   17644:	adc	r2, r2, r2
   17648:	subcs	r0, r0, r1, lsl #8
   1764c:	cmp	r0, r1, lsl #7
   17650:	adc	r2, r2, r2
   17654:	subcs	r0, r0, r1, lsl #7
   17658:	cmp	r0, r1, lsl #6
   1765c:	adc	r2, r2, r2
   17660:	subcs	r0, r0, r1, lsl #6
   17664:	cmp	r0, r1, lsl #5
   17668:	adc	r2, r2, r2
   1766c:	subcs	r0, r0, r1, lsl #5
   17670:	cmp	r0, r1, lsl #4
   17674:	adc	r2, r2, r2
   17678:	subcs	r0, r0, r1, lsl #4
   1767c:	cmp	r0, r1, lsl #3
   17680:	adc	r2, r2, r2
   17684:	subcs	r0, r0, r1, lsl #3
   17688:	cmp	r0, r1, lsl #2
   1768c:	adc	r2, r2, r2
   17690:	subcs	r0, r0, r1, lsl #2
   17694:	cmp	r0, r1, lsl #1
   17698:	adc	r2, r2, r2
   1769c:	subcs	r0, r0, r1, lsl #1
   176a0:	cmp	r0, r1
   176a4:	adc	r2, r2, r2
   176a8:	subcs	r0, r0, r1
   176ac:	mov	r0, r2
   176b0:	bx	lr
   176b4:	moveq	r0, #1
   176b8:	movne	r0, #0
   176bc:	bx	lr
   176c0:	clz	r2, r1
   176c4:	rsb	r2, r2, #31
   176c8:	lsr	r0, r0, r2
   176cc:	bx	lr
   176d0:	cmp	r0, #0
   176d4:	mvnne	r0, #0
   176d8:	b	17738 <dcngettext@plt+0x6720>
   176dc:	cmp	r1, #0
   176e0:	beq	176d0 <dcngettext@plt+0x66b8>
   176e4:	push	{r0, r1, lr}
   176e8:	bl	174f0 <dcngettext@plt+0x64d8>
   176ec:	pop	{r1, r2, lr}
   176f0:	mul	r3, r2, r0
   176f4:	sub	r1, r1, r3
   176f8:	bx	lr
   176fc:	cmp	r3, #0
   17700:	cmpeq	r2, #0
   17704:	bne	1771c <dcngettext@plt+0x6704>
   17708:	cmp	r1, #0
   1770c:	cmpeq	r0, #0
   17710:	mvnne	r1, #0
   17714:	mvnne	r0, #0
   17718:	b	17738 <dcngettext@plt+0x6720>
   1771c:	sub	sp, sp, #8
   17720:	push	{sp, lr}
   17724:	bl	17748 <dcngettext@plt+0x6730>
   17728:	ldr	lr, [sp, #4]
   1772c:	add	sp, sp, #8
   17730:	pop	{r2, r3}
   17734:	bx	lr
   17738:	push	{r1, lr}
   1773c:	mov	r0, #8
   17740:	bl	10da8 <raise@plt>
   17744:	pop	{r1, pc}
   17748:	cmp	r1, r3
   1774c:	cmpeq	r0, r2
   17750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17754:	mov	r4, r0
   17758:	movcc	r0, #0
   1775c:	mov	r5, r1
   17760:	ldr	lr, [sp, #36]	; 0x24
   17764:	movcc	r1, r0
   17768:	bcc	17864 <dcngettext@plt+0x684c>
   1776c:	cmp	r3, #0
   17770:	clzeq	ip, r2
   17774:	clzne	ip, r3
   17778:	addeq	ip, ip, #32
   1777c:	cmp	r5, #0
   17780:	clzeq	r1, r4
   17784:	addeq	r1, r1, #32
   17788:	clzne	r1, r5
   1778c:	sub	ip, ip, r1
   17790:	sub	sl, ip, #32
   17794:	lsl	r9, r3, ip
   17798:	rsb	fp, ip, #32
   1779c:	orr	r9, r9, r2, lsl sl
   177a0:	orr	r9, r9, r2, lsr fp
   177a4:	lsl	r8, r2, ip
   177a8:	cmp	r5, r9
   177ac:	cmpeq	r4, r8
   177b0:	movcc	r0, #0
   177b4:	movcc	r1, r0
   177b8:	bcc	177d4 <dcngettext@plt+0x67bc>
   177bc:	mov	r0, #1
   177c0:	subs	r4, r4, r8
   177c4:	lsl	r1, r0, sl
   177c8:	orr	r1, r1, r0, lsr fp
   177cc:	lsl	r0, r0, ip
   177d0:	sbc	r5, r5, r9
   177d4:	cmp	ip, #0
   177d8:	beq	17864 <dcngettext@plt+0x684c>
   177dc:	lsr	r6, r8, #1
   177e0:	orr	r6, r6, r9, lsl #31
   177e4:	lsr	r7, r9, #1
   177e8:	mov	r2, ip
   177ec:	b	17810 <dcngettext@plt+0x67f8>
   177f0:	subs	r3, r4, r6
   177f4:	sbc	r8, r5, r7
   177f8:	adds	r3, r3, r3
   177fc:	adc	r8, r8, r8
   17800:	adds	r4, r3, #1
   17804:	adc	r5, r8, #0
   17808:	subs	r2, r2, #1
   1780c:	beq	1782c <dcngettext@plt+0x6814>
   17810:	cmp	r5, r7
   17814:	cmpeq	r4, r6
   17818:	bcs	177f0 <dcngettext@plt+0x67d8>
   1781c:	adds	r4, r4, r4
   17820:	adc	r5, r5, r5
   17824:	subs	r2, r2, #1
   17828:	bne	17810 <dcngettext@plt+0x67f8>
   1782c:	lsr	r3, r4, ip
   17830:	orr	r3, r3, r5, lsl fp
   17834:	lsr	r2, r5, ip
   17838:	orr	r3, r3, r5, lsr sl
   1783c:	adds	r0, r0, r4
   17840:	mov	r4, r3
   17844:	lsl	r3, r2, ip
   17848:	orr	r3, r3, r4, lsl sl
   1784c:	lsl	ip, r4, ip
   17850:	orr	r3, r3, r4, lsr fp
   17854:	adc	r1, r1, r5
   17858:	subs	r0, r0, ip
   1785c:	mov	r5, r2
   17860:	sbc	r1, r1, r3
   17864:	cmp	lr, #0
   17868:	strdne	r4, [lr]
   1786c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17870:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17874:	mov	r7, r0
   17878:	ldr	r6, [pc, #72]	; 178c8 <dcngettext@plt+0x68b0>
   1787c:	ldr	r5, [pc, #72]	; 178cc <dcngettext@plt+0x68b4>
   17880:	add	r6, pc, r6
   17884:	add	r5, pc, r5
   17888:	sub	r6, r6, r5
   1788c:	mov	r8, r1
   17890:	mov	r9, r2
   17894:	bl	10d64 <fdopen@plt-0x20>
   17898:	asrs	r6, r6, #2
   1789c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   178a0:	mov	r4, #0
   178a4:	add	r4, r4, #1
   178a8:	ldr	r3, [r5], #4
   178ac:	mov	r2, r9
   178b0:	mov	r1, r8
   178b4:	mov	r0, r7
   178b8:	blx	r3
   178bc:	cmp	r6, r4
   178c0:	bne	178a4 <dcngettext@plt+0x688c>
   178c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   178c8:	andeq	r1, r1, ip, ror r6
   178cc:	andeq	r1, r1, r4, ror r6
   178d0:	bx	lr
   178d4:	ldr	r3, [pc, #12]	; 178e8 <dcngettext@plt+0x68d0>
   178d8:	mov	r1, #0
   178dc:	add	r3, pc, r3
   178e0:	ldr	r2, [r3]
   178e4:	b	10f34 <__cxa_atexit@plt>
   178e8:	andeq	r1, r1, r0, lsl r8

Disassembly of section .fini:

000178ec <.fini>:
   178ec:	push	{r3, lr}
   178f0:	pop	{r3, pc}
