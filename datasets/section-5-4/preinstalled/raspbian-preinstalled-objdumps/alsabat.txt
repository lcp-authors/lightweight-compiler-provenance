
raspbian-preinstalled/alsabat:     file format elf32-littlearm


Disassembly of section .init:

000113f4 <.init>:
   113f4:	push	{r3, lr}
   113f8:	bl	128a8 <fftwf_malloc@plt+0x10c8>
   113fc:	pop	{r3, pc}

Disassembly of section .plt:

00011400 <__sigsetjmp@plt-0x14>:
   11400:	push	{lr}		; (str lr, [sp, #-4]!)
   11404:	ldr	lr, [pc, #4]	; 11410 <__sigsetjmp@plt-0x4>
   11408:	add	lr, pc, lr
   1140c:	ldr	pc, [lr, #8]!
   11410:	muleq	r1, r4, sl

00011414 <__sigsetjmp@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #94208	; 0x17000
   1141c:	ldr	pc, [ip, #2708]!	; 0xa94

00011420 <snd_pcm_hw_params_any@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #94208	; 0x17000
   11428:	ldr	pc, [ip, #2700]!	; 0xa8c

0001142c <powf@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #94208	; 0x17000
   11434:	ldr	pc, [ip, #2692]!	; 0xa84

00011438 <snd_pcm_close@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #94208	; 0x17000
   11440:	ldr	pc, [ip, #2684]!	; 0xa7c

00011444 <abort@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #94208	; 0x17000
   1144c:	ldr	pc, [ip, #2676]!	; 0xa74

00011450 <pthread_exit@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #94208	; 0x17000
   11458:	ldr	pc, [ip, #2668]!	; 0xa6c

0001145c <__libc_start_main@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #94208	; 0x17000
   11464:	ldr	pc, [ip, #2660]!	; 0xa64

00011468 <__gmon_start__@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #94208	; 0x17000
   11470:	ldr	pc, [ip, #2652]!	; 0xa5c

00011474 <sqrtf@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #94208	; 0x17000
   1147c:	ldr	pc, [ip, #2644]!	; 0xa54

00011480 <rewind@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #94208	; 0x17000
   11488:	ldr	pc, [ip, #2636]!	; 0xa4c

0001148c <snd_pcm_hw_params_set_period_time_near@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #94208	; 0x17000
   11494:	ldr	pc, [ip, #2628]!	; 0xa44

00011498 <snd_pcm_prepare@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #94208	; 0x17000
   114a0:	ldr	pc, [ip, #2620]!	; 0xa3c

000114a4 <snd_pcm_hw_params_set_period_size_near@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #94208	; 0x17000
   114ac:	ldr	pc, [ip, #2612]!	; 0xa34

000114b0 <fclose@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #94208	; 0x17000
   114b8:	ldr	pc, [ip, #2604]!	; 0xa2c

000114bc <fftwf_plan_r2r_1d@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #94208	; 0x17000
   114c4:	ldr	pc, [ip, #2596]!	; 0xa24

000114c8 <strtod@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #94208	; 0x17000
   114d0:	ldr	pc, [ip, #2588]!	; 0xa1c

000114d4 <strchr@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #94208	; 0x17000
   114dc:	ldr	pc, [ip, #2580]!	; 0xa14

000114e0 <strcasecmp@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #94208	; 0x17000
   114e8:	ldr	pc, [ip, #2572]!	; 0xa0c

000114ec <sincos@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #94208	; 0x17000
   114f4:	ldr	pc, [ip, #2564]!	; 0xa04

000114f8 <fopen@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #94208	; 0x17000
   11500:	ldr	pc, [ip, #2556]!	; 0x9fc

00011504 <snd_pcm_hw_params_get_period_size@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #94208	; 0x17000
   1150c:	ldr	pc, [ip, #2548]!	; 0x9f4

00011510 <fftwf_execute@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #94208	; 0x17000
   11518:	ldr	pc, [ip, #2540]!	; 0x9ec

0001151c <memset@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #94208	; 0x17000
   11524:	ldr	pc, [ip, #2532]!	; 0x9e4

00011528 <snd_pcm_drain@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #94208	; 0x17000
   11530:	ldr	pc, [ip, #2524]!	; 0x9dc

00011534 <snd_pcm_hw_params@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #94208	; 0x17000
   1153c:	ldr	pc, [ip, #2516]!	; 0x9d4

00011540 <snd_pcm_hw_params_sizeof@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #94208	; 0x17000
   11548:	ldr	pc, [ip, #2508]!	; 0x9cc

0001154c <snd_pcm_name@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #94208	; 0x17000
   11554:	ldr	pc, [ip, #2500]!	; 0x9c4

00011558 <usleep@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #94208	; 0x17000
   11560:	ldr	pc, [ip, #2492]!	; 0x9bc

00011564 <snd_pcm_open@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #94208	; 0x17000
   1156c:	ldr	pc, [ip, #2484]!	; 0x9b4

00011570 <free@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #94208	; 0x17000
   11578:	ldr	pc, [ip, #2476]!	; 0x9ac

0001157c <getopt_long@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #94208	; 0x17000
   11584:	ldr	pc, [ip, #2468]!	; 0x9a4

00011588 <dcgettext@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #94208	; 0x17000
   11590:	ldr	pc, [ip, #2460]!	; 0x99c

00011594 <mkstemp@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #94208	; 0x17000
   1159c:	ldr	pc, [ip, #2452]!	; 0x994

000115a0 <fseek@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #94208	; 0x17000
   115a8:	ldr	pc, [ip, #2444]!	; 0x98c

000115ac <ceilf@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #94208	; 0x17000
   115b4:	ldr	pc, [ip, #2436]!	; 0x984

000115b8 <snd_pcm_hw_params_get_period_size_min@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #94208	; 0x17000
   115c0:	ldr	pc, [ip, #2428]!	; 0x97c

000115c4 <snd_pcm_writei@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #94208	; 0x17000
   115cc:	ldr	pc, [ip, #2420]!	; 0x974

000115d0 <pthread_create@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #94208	; 0x17000
   115d8:	ldr	pc, [ip, #2412]!	; 0x96c

000115dc <snd_pcm_wait@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #94208	; 0x17000
   115e4:	ldr	pc, [ip, #2404]!	; 0x964

000115e8 <memcpy@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #94208	; 0x17000
   115f0:	ldr	pc, [ip, #2396]!	; 0x95c

000115f4 <setlocale@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #94208	; 0x17000
   115fc:	ldr	pc, [ip, #2388]!	; 0x954

00011600 <snd_pcm_readi@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #94208	; 0x17000
   11608:	ldr	pc, [ip, #2380]!	; 0x94c

0001160c <snd_pcm_resume@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #94208	; 0x17000
   11614:	ldr	pc, [ip, #2372]!	; 0x944

00011618 <snd_strerror@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #94208	; 0x17000
   11620:	ldr	pc, [ip, #2364]!	; 0x93c

00011624 <feof@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #94208	; 0x17000
   1162c:	ldr	pc, [ip, #2356]!	; 0x934

00011630 <strtol@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #94208	; 0x17000
   11638:	ldr	pc, [ip, #2348]!	; 0x92c

0001163c <raise@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #94208	; 0x17000
   11644:	ldr	pc, [ip, #2340]!	; 0x924

00011648 <strtof@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #94208	; 0x17000
   11650:	ldr	pc, [ip, #2332]!	; 0x91c

00011654 <close@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #94208	; 0x17000
   1165c:	ldr	pc, [ip, #2324]!	; 0x914

00011660 <fwrite@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #94208	; 0x17000
   11668:	ldr	pc, [ip, #2316]!	; 0x90c

0001166c <snd_pcm_format_physical_width@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #94208	; 0x17000
   11674:	ldr	pc, [ip, #2308]!	; 0x904

00011678 <snd_pcm_hw_params_get_buffer_time_max@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #94208	; 0x17000
   11680:	ldr	pc, [ip, #2300]!	; 0x8fc

00011684 <remove@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #94208	; 0x17000
   1168c:	ldr	pc, [ip, #2292]!	; 0x8f4

00011690 <log10f@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #94208	; 0x17000
   11698:	ldr	pc, [ip, #2284]!	; 0x8ec

0001169c <snd_pcm_hw_params_get_buffer_size@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #94208	; 0x17000
   116a4:	ldr	pc, [ip, #2276]!	; 0x8e4

000116a8 <strdup@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #94208	; 0x17000
   116b0:	ldr	pc, [ip, #2268]!	; 0x8dc

000116b4 <malloc@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #94208	; 0x17000
   116bc:	ldr	pc, [ip, #2260]!	; 0x8d4

000116c0 <__stack_chk_fail@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #94208	; 0x17000
   116c8:	ldr	pc, [ip, #2252]!	; 0x8cc

000116cc <__fprintf_chk@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #94208	; 0x17000
   116d4:	ldr	pc, [ip, #2244]!	; 0x8c4

000116d8 <snd_pcm_hw_params_set_rate_near@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #94208	; 0x17000
   116e0:	ldr	pc, [ip, #2236]!	; 0x8bc

000116e4 <snd_pcm_hw_params_set_access@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #94208	; 0x17000
   116ec:	ldr	pc, [ip, #2228]!	; 0x8b4

000116f0 <sleep@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #94208	; 0x17000
   116f8:	ldr	pc, [ip, #2220]!	; 0x8ac

000116fc <snd_pcm_hw_params_set_channels@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #94208	; 0x17000
   11704:	ldr	pc, [ip, #2212]!	; 0x8a4

00011708 <textdomain@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #94208	; 0x17000
   11710:	ldr	pc, [ip, #2204]!	; 0x89c

00011714 <snd_pcm_hw_params_set_buffer_time_near@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #94208	; 0x17000
   1171c:	ldr	pc, [ip, #2196]!	; 0x894

00011720 <__pthread_register_cancel@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #94208	; 0x17000
   11728:	ldr	pc, [ip, #2188]!	; 0x88c

0001172c <__pthread_unregister_cancel@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #94208	; 0x17000
   11734:	ldr	pc, [ip, #2180]!	; 0x884

00011738 <fread@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #94208	; 0x17000
   11740:	ldr	pc, [ip, #2172]!	; 0x87c

00011744 <snd_pcm_hw_params_set_buffer_size_near@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #94208	; 0x17000
   1174c:	ldr	pc, [ip, #2164]!	; 0x874

00011750 <fftwf_free@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #94208	; 0x17000
   11758:	ldr	pc, [ip, #2156]!	; 0x86c

0001175c <ferror@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #94208	; 0x17000
   11764:	ldr	pc, [ip, #2148]!	; 0x864

00011768 <fftwf_destroy_plan@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #94208	; 0x17000
   11770:	ldr	pc, [ip, #2140]!	; 0x85c

00011774 <pthread_setcancelstate@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #94208	; 0x17000
   1177c:	ldr	pc, [ip, #2132]!	; 0x854

00011780 <snd_pcm_hw_params_get_buffer_size_min@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #94208	; 0x17000
   11788:	ldr	pc, [ip, #2124]!	; 0x84c

0001178c <exit@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #94208	; 0x17000
   11794:	ldr	pc, [ip, #2116]!	; 0x844

00011798 <pthread_setcanceltype@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #94208	; 0x17000
   117a0:	ldr	pc, [ip, #2108]!	; 0x83c

000117a4 <__pthread_unwind_next@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #94208	; 0x17000
   117ac:	ldr	pc, [ip, #2100]!	; 0x834

000117b0 <__errno_location@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #94208	; 0x17000
   117b8:	ldr	pc, [ip, #2092]!	; 0x82c

000117bc <pthread_cancel@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #94208	; 0x17000
   117c4:	ldr	pc, [ip, #2084]!	; 0x824

000117c8 <snd_pcm_hw_params_set_format@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #94208	; 0x17000
   117d0:	ldr	pc, [ip, #2076]!	; 0x81c

000117d4 <pthread_join@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #94208	; 0x17000
   117dc:	ldr	pc, [ip, #2068]!	; 0x814

000117e0 <fftwf_malloc@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #94208	; 0x17000
   117e8:	ldr	pc, [ip, #2060]!	; 0x80c

Disassembly of section .text:

000117f0 <.text>:
   117f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117f4:	vpush	{d8}
   117f8:	ldr	r5, [pc, #1492]	; 11dd4 <fftwf_malloc@plt+0x5f4>
   117fc:	mov	r2, #188	; 0xbc
   11800:	mov	r8, r0
   11804:	sub	sp, sp, #260	; 0x104
   11808:	ldr	r3, [r5]
   1180c:	mov	r7, r1
   11810:	add	r0, sp, #44	; 0x2c
   11814:	mov	r1, #0
   11818:	str	r3, [sp, #252]	; 0xfc
   1181c:	bl	1151c <memset@plt>
   11820:	ldr	r1, [pc, #1456]	; 11dd8 <fftwf_malloc@plt+0x5f8>
   11824:	ldr	r2, [pc, #1456]	; 11ddc <fftwf_malloc@plt+0x5fc>
   11828:	ldr	r3, [pc, #1456]	; 11de0 <fftwf_malloc@plt+0x600>
   1182c:	ldr	r0, [r1]
   11830:	ldr	r2, [r2]
   11834:	ldr	r4, [pc, #1448]	; 11de4 <fftwf_malloc@plt+0x604>
   11838:	ldr	r1, [pc, #1548]	; 11e4c <fftwf_malloc@plt+0x66c>
   1183c:	str	r0, [sp, #208]	; 0xd0
   11840:	ldr	r0, [pc, #1440]	; 11de8 <fftwf_malloc@plt+0x608>
   11844:	ldr	lr, [pc, #1440]	; 11dec <fftwf_malloc@plt+0x60c>
   11848:	ldr	ip, [pc, #1440]	; 11df0 <fftwf_malloc@plt+0x610>
   1184c:	str	r2, [sp, #212]	; 0xd4
   11850:	ldr	sl, [pc, #1436]	; 11df4 <fftwf_malloc@plt+0x614>
   11854:	ldr	r2, [pc, #1436]	; 11df8 <fftwf_malloc@plt+0x618>
   11858:	ldr	r9, [pc, #1436]	; 11dfc <fftwf_malloc@plt+0x61c>
   1185c:	str	r3, [sp, #64]	; 0x40
   11860:	str	r3, [sp, #68]	; 0x44
   11864:	str	r4, [sp, #56]	; 0x38
   11868:	mov	r3, #2
   1186c:	mov	r4, #1
   11870:	str	r1, [sp, #24]
   11874:	str	r0, [sp, #32]
   11878:	ldr	r1, [pc, #1408]	; 11e00 <fftwf_malloc@plt+0x620>
   1187c:	mov	r0, #6
   11880:	str	r3, [sp, #36]	; 0x24
   11884:	str	r3, [sp, #40]	; 0x28
   11888:	str	lr, [sp, #60]	; 0x3c
   1188c:	str	ip, [sp, #112]	; 0x70
   11890:	str	r2, [sp, #136]	; 0x88
   11894:	str	r4, [sp, #28]
   11898:	str	r4, [sp, #108]	; 0x6c
   1189c:	str	r4, [sp, #132]	; 0x84
   118a0:	str	sl, [sp, #220]	; 0xdc
   118a4:	str	r9, [sp, #216]	; 0xd8
   118a8:	bl	115f4 <setlocale@plt>
   118ac:	ldr	r0, [pc, #1360]	; 11e04 <fftwf_malloc@plt+0x624>
   118b0:	bl	11708 <textdomain@plt>
   118b4:	mov	r2, #5
   118b8:	ldr	r1, [pc, #1352]	; 11e08 <fftwf_malloc@plt+0x628>
   118bc:	mov	r0, #0
   118c0:	ldr	fp, [sp, #208]	; 0xd0
   118c4:	bl	11588 <dcgettext@plt>
   118c8:	ldr	r3, [pc, #1340]	; 11e0c <fftwf_malloc@plt+0x62c>
   118cc:	mov	r1, r4
   118d0:	str	r3, [sp]
   118d4:	ldr	r3, [pc, #1320]	; 11e04 <fftwf_malloc@plt+0x624>
   118d8:	ldr	r6, [pc, #1328]	; 11e10 <fftwf_malloc@plt+0x630>
   118dc:	ldr	r4, [pc, #1328]	; 11e14 <fftwf_malloc@plt+0x634>
   118e0:	mov	r2, r0
   118e4:	mov	r0, fp
   118e8:	bl	116cc <__fprintf_chk@plt>
   118ec:	add	r3, sp, #16
   118f0:	str	r3, [sp]
   118f4:	ldr	r2, [pc, #1308]	; 11e18 <fftwf_malloc@plt+0x638>
   118f8:	mov	r3, r6
   118fc:	mov	r1, r7
   11900:	mov	r0, r8
   11904:	bl	1157c <getopt_long@plt>
   11908:	cmn	r0, #1
   1190c:	beq	11aec <fftwf_malloc@plt+0x30c>
   11910:	cmp	r0, #110	; 0x6e
   11914:	beq	12048 <fftwf_malloc@plt+0x868>
   11918:	ble	1195c <fftwf_malloc@plt+0x17c>
   1191c:	ldr	r3, [pc, #1272]	; 11e1c <fftwf_malloc@plt+0x63c>
   11920:	cmp	r0, r3
   11924:	beq	1203c <fftwf_malloc@plt+0x85c>
   11928:	ble	11a04 <fftwf_malloc@plt+0x224>
   1192c:	ldr	r3, [pc, #1260]	; 11e20 <fftwf_malloc@plt+0x640>
   11930:	cmp	r0, r3
   11934:	beq	12030 <fftwf_malloc@plt+0x850>
   11938:	bgt	119ac <fftwf_malloc@plt+0x1cc>
   1193c:	cmp	r0, #304	; 0x130
   11940:	beq	11d9c <fftwf_malloc@plt+0x5bc>
   11944:	sub	r3, r3, #1
   11948:	cmp	r0, r3
   1194c:	bne	11f50 <fftwf_malloc@plt+0x770>
   11950:	mov	r3, #1
   11954:	strb	r3, [sp, #88]	; 0x58
   11958:	b	118ec <fftwf_malloc@plt+0x10c>
   1195c:	cmp	r0, #70	; 0x46
   11960:	beq	11efc <fftwf_malloc@plt+0x71c>
   11964:	bgt	11a64 <fftwf_malloc@plt+0x284>
   11968:	cmp	r0, #67	; 0x43
   1196c:	beq	11ed8 <fftwf_malloc@plt+0x6f8>
   11970:	ble	11a34 <fftwf_malloc@plt+0x254>
   11974:	cmp	r0, #68	; 0x44
   11978:	beq	12088 <fftwf_malloc@plt+0x8a8>
   1197c:	cmp	r0, #69	; 0x45
   11980:	bne	11f50 <fftwf_malloc@plt+0x770>
   11984:	mov	r2, #10
   11988:	mov	r1, #0
   1198c:	ldr	r0, [r4]
   11990:	bl	11630 <strtol@plt>
   11994:	ldr	r2, [pc, #1160]	; 11e24 <fftwf_malloc@plt+0x644>
   11998:	sub	r3, r0, #32
   1199c:	cmp	r3, r2
   119a0:	movhi	r0, #0
   119a4:	str	r0, [sp, #52]	; 0x34
   119a8:	b	118ec <fftwf_malloc@plt+0x10c>
   119ac:	ldr	r3, [pc, #1140]	; 11e28 <fftwf_malloc@plt+0x648>
   119b0:	cmp	r0, r3
   119b4:	beq	12054 <fftwf_malloc@plt+0x874>
   119b8:	cmp	r0, #308	; 0x134
   119bc:	bne	11f50 <fftwf_malloc@plt+0x770>
   119c0:	ldr	fp, [r4]
   119c4:	add	r1, sp, #20
   119c8:	mov	r0, fp
   119cc:	bl	11648 <strtof@plt>
   119d0:	vcmpe.f32	s0, #0.0
   119d4:	vmrs	APSR_nzcv, fpscr
   119d8:	bls	12448 <fftwf_malloc@plt+0xc68>
   119dc:	vldr	s15, [pc, #988]	; 11dc0 <fftwf_malloc@plt+0x5e0>
   119e0:	vcmpe.f32	s0, s15
   119e4:	vmrs	APSR_nzcv, fpscr
   119e8:	bge	12448 <fftwf_malloc@plt+0xc68>
   119ec:	vdiv.f32	s0, s15, s0
   119f0:	bl	11690 <log10f@plt>
   119f4:	vldr	s15, [pc, #968]	; 11dc4 <fftwf_malloc@plt+0x5e4>
   119f8:	vmul.f32	s0, s0, s15
   119fc:	vstr	s0, [sp, #60]	; 0x3c
   11a00:	b	118ec <fftwf_malloc@plt+0x10c>
   11a04:	cmp	r0, #114	; 0x72
   11a08:	beq	11e84 <fftwf_malloc@plt+0x6a4>
   11a0c:	ble	11a98 <fftwf_malloc@plt+0x2b8>
   11a10:	ldr	r3, [pc, #1044]	; 11e2c <fftwf_malloc@plt+0x64c>
   11a14:	cmp	r0, r3
   11a18:	beq	11ecc <fftwf_malloc@plt+0x6ec>
   11a1c:	add	r3, r3, #1
   11a20:	cmp	r0, r3
   11a24:	bne	11f50 <fftwf_malloc@plt+0x770>
   11a28:	ldr	r3, [r4]
   11a2c:	str	r3, [sp, #104]	; 0x68
   11a30:	b	118ec <fftwf_malloc@plt+0x10c>
   11a34:	cmp	r0, #66	; 0x42
   11a38:	bne	11f50 <fftwf_malloc@plt+0x770>
   11a3c:	mov	r2, #10
   11a40:	mov	r1, #0
   11a44:	ldr	r0, [r4]
   11a48:	bl	11630 <strtol@plt>
   11a4c:	ldr	r2, [pc, #976]	; 11e24 <fftwf_malloc@plt+0x644>
   11a50:	sub	r3, r0, #32
   11a54:	cmp	r3, r2
   11a58:	movhi	r0, #0
   11a5c:	str	r0, [sp, #48]	; 0x30
   11a60:	b	118ec <fftwf_malloc@plt+0x10c>
   11a64:	cmp	r0, #99	; 0x63
   11a68:	beq	11da8 <fftwf_malloc@plt+0x5c8>
   11a6c:	ble	11ac0 <fftwf_malloc@plt+0x2e0>
   11a70:	cmp	r0, #102	; 0x66
   11a74:	beq	11e9c <fftwf_malloc@plt+0x6bc>
   11a78:	cmp	r0, #107	; 0x6b
   11a7c:	bne	11f50 <fftwf_malloc@plt+0x770>
   11a80:	mov	r1, #0
   11a84:	ldr	r0, [r4]
   11a88:	bl	114c8 <strtod@plt>
   11a8c:	vcvt.f32.f64	s0, d0
   11a90:	vstr	s0, [sp, #56]	; 0x38
   11a94:	b	118ec <fftwf_malloc@plt+0x10c>
   11a98:	cmp	r0, #112	; 0x70
   11a9c:	bne	11f50 <fftwf_malloc@plt+0x770>
   11aa0:	mov	r2, #10
   11aa4:	mov	r1, #0
   11aa8:	ldr	r0, [r4]
   11aac:	bl	11630 <strtol@plt>
   11ab0:	mov	r3, #1
   11ab4:	strb	r3, [sp, #200]	; 0xc8
   11ab8:	str	r0, [sp, #196]	; 0xc4
   11abc:	b	118ec <fftwf_malloc@plt+0x10c>
   11ac0:	cmp	r0, #80	; 0x50
   11ac4:	bne	11f50 <fftwf_malloc@plt+0x770>
   11ac8:	ldr	r3, [sp, #132]	; 0x84
   11acc:	cmp	r3, #0
   11ad0:	moveq	r3, #1
   11ad4:	movne	r3, #0
   11ad8:	streq	r3, [sp, #132]	; 0x84
   11adc:	strne	r3, [sp, #108]	; 0x6c
   11ae0:	ldr	r3, [r4]
   11ae4:	str	r3, [sp, #100]	; 0x64
   11ae8:	b	118ec <fftwf_malloc@plt+0x10c>
   11aec:	ldr	lr, [pc, #828]	; 11e30 <fftwf_malloc@plt+0x650>
   11af0:	ldr	r4, [sp, #80]	; 0x50
   11af4:	add	ip, sp, #232	; 0xe8
   11af8:	ldm	lr!, {r0, r1, r2, r3}
   11afc:	cmp	r4, #0
   11b00:	ldr	lr, [lr]
   11b04:	stmia	ip!, {r0, r1, r2, r3}
   11b08:	str	lr, [ip]
   11b0c:	beq	11b44 <fftwf_malloc@plt+0x364>
   11b10:	mov	r3, #0
   11b14:	mov	r0, r4
   11b18:	ldr	r1, [pc, #788]	; 11e34 <fftwf_malloc@plt+0x654>
   11b1c:	str	r3, [sp, #208]	; 0xd0
   11b20:	bl	114f8 <fopen@plt>
   11b24:	mov	r6, r0
   11b28:	str	r0, [sp, #208]	; 0xd0
   11b2c:	bl	117b0 <__errno_location@plt>
   11b30:	cmp	r6, #0
   11b34:	strne	r6, [sp, #212]	; 0xd4
   11b38:	ldr	r4, [r0]
   11b3c:	rsb	r4, r4, #0
   11b40:	beq	124c4 <fftwf_malloc@plt+0xce4>
   11b44:	ldr	r0, [sp, #76]	; 0x4c
   11b48:	cmp	r0, #0
   11b4c:	beq	11cd0 <fftwf_malloc@plt+0x4f0>
   11b50:	add	r1, sp, #16
   11b54:	bl	11648 <strtof@plt>
   11b58:	vmov.f32	s16, s0
   11b5c:	bl	117b0 <__errno_location@plt>
   11b60:	vldr	s14, [pc, #608]	; 11dc8 <fftwf_malloc@plt+0x5e8>
   11b64:	vldr	s15, [pc, #608]	; 11dcc <fftwf_malloc@plt+0x5ec>
   11b68:	vcmp.f32	s16, s14
   11b6c:	vmrs	APSR_nzcv, fpscr
   11b70:	vcmp.f32	s16, s15
   11b74:	moveq	r3, #1
   11b78:	movne	r3, #0
   11b7c:	vmrs	APSR_nzcv, fpscr
   11b80:	moveq	r3, #1
   11b84:	ldr	r6, [r0]
   11b88:	cmp	r3, #0
   11b8c:	rsb	r4, r6, #0
   11b90:	bne	11d68 <fftwf_malloc@plt+0x588>
   11b94:	vcmp.f32	s16, #0.0
   11b98:	vmrs	APSR_nzcv, fpscr
   11b9c:	moveq	r3, #1
   11ba0:	movne	r3, #0
   11ba4:	cmp	r6, #0
   11ba8:	moveq	r3, #0
   11bac:	cmp	r3, #0
   11bb0:	bne	11d68 <fftwf_malloc@plt+0x588>
   11bb4:	mov	r2, #10
   11bb8:	add	r1, sp, #20
   11bbc:	ldr	r0, [sp, #76]	; 0x4c
   11bc0:	bl	11630 <strtol@plt>
   11bc4:	sub	r3, r0, #-2147483647	; 0x80000001
   11bc8:	cmn	r3, #3
   11bcc:	bhi	11d68 <fftwf_malloc@plt+0x588>
   11bd0:	ldr	r3, [sp, #16]
   11bd4:	ldrb	r3, [r3]
   11bd8:	cmp	r3, #115	; 0x73
   11bdc:	beq	11ca8 <fftwf_malloc@plt+0x4c8>
   11be0:	ldr	r3, [sp, #20]
   11be4:	ldrb	r3, [r3]
   11be8:	cmp	r3, #0
   11bec:	mvnne	r3, #0
   11bf0:	streq	r0, [sp, #32]
   11bf4:	strne	r3, [sp, #32]
   11bf8:	beq	11cbc <fftwf_malloc@plt+0x4dc>
   11bfc:	mov	r2, #5
   11c00:	ldr	r1, [pc, #560]	; 11e38 <fftwf_malloc@plt+0x658>
   11c04:	mov	r0, #0
   11c08:	ldr	r6, [sp, #212]	; 0xd4
   11c0c:	bl	11588 <dcgettext@plt>
   11c10:	vldr	s15, [sp, #24]
   11c14:	vldr	s13, [pc, #436]	; 11dd0 <fftwf_malloc@plt+0x5f0>
   11c18:	mov	r3, #10485760	; 0xa00000
   11c1c:	mov	r1, #1
   11c20:	vcvt.f32.u32	s15, s15
   11c24:	mvn	r4, #21
   11c28:	vdiv.f32	s14, s13, s15
   11c2c:	vcvt.f64.f32	d7, s14
   11c30:	mov	r2, r0
   11c34:	mov	r0, r6
   11c38:	vstr	d7, [sp]
   11c3c:	bl	116cc <__fprintf_chk@plt>
   11c40:	mov	r2, #5
   11c44:	ldr	r1, [pc, #496]	; 11e3c <fftwf_malloc@plt+0x65c>
   11c48:	mov	r0, #0
   11c4c:	ldr	r6, [sp, #208]	; 0xd0
   11c50:	bl	11588 <dcgettext@plt>
   11c54:	mov	r3, r4
   11c58:	mov	r1, #1
   11c5c:	mov	r2, r0
   11c60:	mov	r0, r6
   11c64:	bl	116cc <__fprintf_chk@plt>
   11c68:	ldr	r3, [sp, #80]	; 0x50
   11c6c:	cmp	r3, #0
   11c70:	beq	11c7c <fftwf_malloc@plt+0x49c>
   11c74:	ldr	r0, [sp, #208]	; 0xd0
   11c78:	bl	114b0 <fclose@plt>
   11c7c:	ldrb	r3, [sp, #228]	; 0xe4
   11c80:	cmp	r3, #0
   11c84:	beq	12348 <fftwf_malloc@plt+0xb68>
   11c88:	ldr	r2, [sp, #252]	; 0xfc
   11c8c:	ldr	r3, [r5]
   11c90:	mov	r0, r4
   11c94:	cmp	r2, r3
   11c98:	bne	1278c <fftwf_malloc@plt+0xfac>
   11c9c:	add	sp, sp, #260	; 0x104
   11ca0:	vpop	{d8}
   11ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ca8:	vldr	s15, [sp, #24]
   11cac:	vcvt.f32.u32	s15, s15
   11cb0:	vmul.f32	s15, s15, s16
   11cb4:	vcvt.s32.f32	s15, s15
   11cb8:	vstr	s15, [sp, #32]
   11cbc:	ldr	r3, [sp, #32]
   11cc0:	sub	r3, r3, #1
   11cc4:	cmp	r3, #10485760	; 0xa00000
   11cc8:	bcs	11bfc <fftwf_malloc@plt+0x41c>
   11ccc:	mov	r4, #0
   11cd0:	ldr	r3, [sp, #100]	; 0x64
   11cd4:	cmp	r3, #0
   11cd8:	beq	123f8 <fftwf_malloc@plt+0xc18>
   11cdc:	ldrb	r6, [sp, #228]	; 0xe4
   11ce0:	cmp	r6, #0
   11ce4:	beq	12398 <fftwf_malloc@plt+0xbb8>
   11ce8:	ldr	r0, [sp, #104]	; 0x68
   11cec:	str	r0, [sp, #128]	; 0x80
   11cf0:	cmp	r0, #0
   11cf4:	beq	12354 <fftwf_malloc@plt+0xb74>
   11cf8:	ldr	r1, [pc, #320]	; 11e40 <fftwf_malloc@plt+0x660>
   11cfc:	bl	114f8 <fopen@plt>
   11d00:	cmp	r0, #0
   11d04:	mov	r6, r0
   11d08:	str	r0, [sp, #204]	; 0xcc
   11d0c:	beq	12488 <fftwf_malloc@plt+0xca8>
   11d10:	mov	r2, r0
   11d14:	mov	r3, #0
   11d18:	ldr	r1, [sp, #104]	; 0x68
   11d1c:	add	r0, sp, #24
   11d20:	bl	12c04 <fftwf_malloc@plt+0x1424>
   11d24:	mov	r4, r0
   11d28:	ldr	r0, [sp, #204]	; 0xcc
   11d2c:	bl	114b0 <fclose@plt>
   11d30:	cmp	r4, #0
   11d34:	bne	12110 <fftwf_malloc@plt+0x930>
   11d38:	ldr	r3, [sp, #40]	; 0x28
   11d3c:	ldr	r1, [sp, #28]
   11d40:	sub	r2, r3, #1
   11d44:	mul	r3, r3, r1
   11d48:	str	r3, [sp, #36]	; 0x24
   11d4c:	cmp	r2, #3
   11d50:	ldrls	pc, [pc, r2, lsl #2]
   11d54:	b	12850 <fftwf_malloc@plt+0x1070>
   11d58:	andeq	r2, r1, r8, lsr #4
   11d5c:	andeq	r2, r1, ip, lsr r2
   11d60:	andeq	r2, r1, r4, lsl r2
   11d64:	andeq	r2, r1, r0, lsl #2
   11d68:	mov	r2, #5
   11d6c:	ldr	r1, [pc, #208]	; 11e44 <fftwf_malloc@plt+0x664>
   11d70:	mov	r0, #0
   11d74:	ldr	r7, [sp, #212]	; 0xd4
   11d78:	bl	11588 <dcgettext@plt>
   11d7c:	mov	r3, r4
   11d80:	mov	r1, #1
   11d84:	mov	r2, r0
   11d88:	mov	r0, r7
   11d8c:	bl	116cc <__fprintf_chk@plt>
   11d90:	cmp	r6, #0
   11d94:	ble	11cd0 <fftwf_malloc@plt+0x4f0>
   11d98:	b	11c40 <fftwf_malloc@plt+0x460>
   11d9c:	mov	r3, #1
   11da0:	strb	r3, [sp, #228]	; 0xe4
   11da4:	b	118ec <fftwf_malloc@plt+0x10c>
   11da8:	mov	r2, #10
   11dac:	mov	r1, #0
   11db0:	ldr	r0, [r4]
   11db4:	bl	11630 <strtol@plt>
   11db8:	str	r0, [sp, #28]
   11dbc:	b	118ec <fftwf_malloc@plt+0x10c>
   11dc0:	sbcmi	r0, r8, #0
   11dc4:	movmi	r0, r0
   11dc8:	svcvc	0x00800000
   11dcc:			; <UNDEFINED> instruction: 0xff800000
   11dd0:	blmi	811dd8 <optarg@@GLIBC_2.4+0x7e8d90>
   11dd4:	andeq	r8, r2, r8, ror sp
   11dd8:	andeq	r9, r2, r8, lsr r0
   11ddc:	andeq	r9, r2, r0, asr #32
   11de0:	ldrbtmi	r4, [r9], #-0
   11de4:	submi	r0, r0, r0
   11de8:	andeq	r5, r1, r8, lsl #17
   11dec:	svclt	0x00800000
   11df0:	andeq	r5, r1, r4, lsl sp
   11df4:	andeq	r3, r1, ip, ror #26
   11df8:	andeq	r6, r1, r0, asr #2
   11dfc:	andeq	r3, r1, r8, ror #24
   11e00:	andeq	r7, r1, r8, asr r8
   11e04:	andeq	r6, r1, r0, ror #24
   11e08:	andeq	r6, r1, ip, ror #24
   11e0c:	andeq	r6, r1, ip, ror ip
   11e10:	muleq	r1, r4, sl
   11e14:	andeq	r9, r2, r8, asr #32
   11e18:	andeq	r6, r1, r4, lsr fp
   11e1c:	andeq	r0, r0, pc, lsr #2
   11e20:	andeq	r0, r0, r2, lsr r1
   11e24:	andeq	r0, r3, pc, lsl sp
   11e28:	andeq	r0, r0, r3, lsr r1
   11e2c:	andeq	r0, r0, sp, lsr #2
   11e30:	andeq	r7, r1, r0, asr #7
   11e34:	andeq	r7, r1, r0, asr #4
   11e38:	andeq	r7, r1, r0, ror #4
   11e3c:	andeq	r7, r1, r8, lsr #7
   11e40:	ldrdeq	r7, [r1], -r4
   11e44:	andeq	r7, r1, r8, lsl #5
   11e48:	andeq	r6, r1, r0, lsr #25
   11e4c:	andeq	sl, r0, r4, asr #24
   11e50:	andeq	r6, r1, r0, ror #25
   11e54:	andeq	r7, r1, r0, lsl #3
   11e58:	andeq	r7, r1, r0, lsr #3
   11e5c:			; <UNDEFINED> instruction: 0x000171bc
   11e60:	andeq	r7, r1, r0, ror #3
   11e64:	andeq	r7, r1, r0, lsl r2
   11e68:	andeq	r6, r1, r4, lsr #25
   11e6c:	andeq	r6, r1, r8, lsr #25
   11e70:	andeq	fp, r0, r0, lsl #23
   11e74:	andeq	r3, r1, ip, asr #28
   11e78:	ldrdeq	r3, [r1], -ip
   11e7c:	strdeq	r7, [r1], -r8
   11e80:	movtmi	r0, #32768	; 0x8000
   11e84:	mov	r2, #10
   11e88:	mov	r1, #0
   11e8c:	ldr	r0, [r4]
   11e90:	bl	11630 <strtol@plt>
   11e94:	str	r0, [sp, #24]
   11e98:	b	118ec <fftwf_malloc@plt+0x10c>
   11e9c:	ldr	fp, [r4]
   11ea0:	ldr	r1, [pc, #-96]	; 11e48 <fftwf_malloc@plt+0x668>
   11ea4:	mov	r0, fp
   11ea8:	bl	114e0 <strcasecmp@plt>
   11eac:	cmp	r0, #0
   11eb0:	bne	120a8 <fftwf_malloc@plt+0x8c8>
   11eb4:	ldr	r2, [pc, #-112]	; 11e4c <fftwf_malloc@plt+0x66c>
   11eb8:	mov	r3, #2
   11ebc:	str	r0, [sp, #44]	; 0x2c
   11ec0:	strd	r2, [sp, #24]
   11ec4:	str	r3, [sp, #40]	; 0x28
   11ec8:	b	118ec <fftwf_malloc@plt+0x10c>
   11ecc:	ldr	r3, [r4]
   11ed0:	str	r3, [sp, #80]	; 0x50
   11ed4:	b	118ec <fftwf_malloc@plt+0x10c>
   11ed8:	ldr	r3, [sp, #108]	; 0x6c
   11edc:	cmp	r3, #0
   11ee0:	moveq	r3, #1
   11ee4:	movne	r3, #0
   11ee8:	streq	r3, [sp, #108]	; 0x6c
   11eec:	strne	r3, [sp, #132]	; 0x84
   11ef0:	ldr	r3, [r4]
   11ef4:	str	r3, [sp, #124]	; 0x7c
   11ef8:	b	118ec <fftwf_malloc@plt+0x10c>
   11efc:	ldr	fp, [r4]
   11f00:	mov	r1, #58	; 0x3a
   11f04:	mov	r0, fp
   11f08:	bl	114d4 <strchr@plt>
   11f0c:	subs	r1, r0, #0
   11f10:	beq	123e0 <fftwf_malloc@plt+0xc00>
   11f14:	mov	fp, r1
   11f18:	mov	r3, #0
   11f1c:	strb	r3, [fp], #1
   11f20:	mov	r1, r3
   11f24:	ldr	r0, [r4]
   11f28:	bl	114c8 <strtod@plt>
   11f2c:	mov	r3, #0
   11f30:	mov	r0, fp
   11f34:	mov	r1, r3
   11f38:	vcvt.f32.f64	s0, d0
   11f3c:	vstr	s0, [sp, #64]	; 0x40
   11f40:	bl	114c8 <strtod@plt>
   11f44:	vcvt.f32.f64	s0, d0
   11f48:	vstr	s0, [sp, #68]	; 0x44
   11f4c:	b	118ec <fftwf_malloc@plt+0x10c>
   11f50:	mov	r2, #5
   11f54:	ldr	r1, [pc, #-268]	; 11e50 <fftwf_malloc@plt+0x670>
   11f58:	mov	r0, #0
   11f5c:	ldr	r4, [sp, #208]	; 0xd0
   11f60:	bl	11588 <dcgettext@plt>
   11f64:	mov	r1, #1
   11f68:	mov	r2, r0
   11f6c:	mov	r0, r4
   11f70:	bl	116cc <__fprintf_chk@plt>
   11f74:	mov	r2, #5
   11f78:	ldr	r1, [pc, #-300]	; 11e54 <fftwf_malloc@plt+0x674>
   11f7c:	mov	r0, #0
   11f80:	ldr	r4, [sp, #208]	; 0xd0
   11f84:	bl	11588 <dcgettext@plt>
   11f88:	mov	r1, #1
   11f8c:	mov	r2, r0
   11f90:	mov	r0, r4
   11f94:	bl	116cc <__fprintf_chk@plt>
   11f98:	mov	r2, #5
   11f9c:	ldr	r1, [pc, #-332]	; 11e58 <fftwf_malloc@plt+0x678>
   11fa0:	mov	r0, #0
   11fa4:	ldr	r4, [sp, #208]	; 0xd0
   11fa8:	bl	11588 <dcgettext@plt>
   11fac:	mov	r1, #1
   11fb0:	mov	r2, r0
   11fb4:	mov	r0, r4
   11fb8:	bl	116cc <__fprintf_chk@plt>
   11fbc:	mov	r2, #5
   11fc0:	ldr	r1, [pc, #-364]	; 11e5c <fftwf_malloc@plt+0x67c>
   11fc4:	mov	r0, #0
   11fc8:	ldr	r4, [sp, #208]	; 0xd0
   11fcc:	bl	11588 <dcgettext@plt>
   11fd0:	mov	r1, #1
   11fd4:	mov	r2, r0
   11fd8:	mov	r0, r4
   11fdc:	bl	116cc <__fprintf_chk@plt>
   11fe0:	mov	r2, #5
   11fe4:	ldr	r1, [pc, #-396]	; 11e60 <fftwf_malloc@plt+0x680>
   11fe8:	mov	r0, #0
   11fec:	ldr	r4, [sp, #208]	; 0xd0
   11ff0:	bl	11588 <dcgettext@plt>
   11ff4:	mov	r1, #1
   11ff8:	mov	r2, r0
   11ffc:	mov	r0, r4
   12000:	bl	116cc <__fprintf_chk@plt>
   12004:	mov	r2, #5
   12008:	ldr	r1, [pc, #-428]	; 11e64 <fftwf_malloc@plt+0x684>
   1200c:	mov	r0, #0
   12010:	ldr	r4, [sp, #208]	; 0xd0
   12014:	bl	11588 <dcgettext@plt>
   12018:	mov	r1, #1
   1201c:	mov	r2, r0
   12020:	mov	r0, r4
   12024:	bl	116cc <__fprintf_chk@plt>
   12028:	mov	r0, #0
   1202c:	bl	1178c <exit@plt>
   12030:	mov	r3, #1
   12034:	strb	r3, [sp, #89]	; 0x59
   12038:	b	118ec <fftwf_malloc@plt+0x10c>
   1203c:	ldr	r3, [r4]
   12040:	str	r3, [sp, #84]	; 0x54
   12044:	b	118ec <fftwf_malloc@plt+0x10c>
   12048:	ldr	r3, [r4]
   1204c:	str	r3, [sp, #76]	; 0x4c
   12050:	b	118ec <fftwf_malloc@plt+0x10c>
   12054:	ldr	fp, [r4]
   12058:	add	r1, sp, #20
   1205c:	mov	r0, fp
   12060:	bl	11648 <strtof@plt>
   12064:	vcmpe.f32	s0, #0.0
   12068:	vmrs	APSR_nzcv, fpscr
   1206c:	ble	12448 <fftwf_malloc@plt+0xc68>
   12070:	vldr	s15, [pc, #-504]	; 11e80 <fftwf_malloc@plt+0x6a0>
   12074:	vcmpe.f32	s0, s15
   12078:	vmrs	APSR_nzcv, fpscr
   1207c:	bpl	12448 <fftwf_malloc@plt+0xc68>
   12080:	vstr	s0, [sp, #60]	; 0x3c
   12084:	b	118ec <fftwf_malloc@plt+0x10c>
   12088:	ldr	r3, [sp, #100]	; 0x64
   1208c:	cmp	r3, #0
   12090:	ldreq	r3, [r4]
   12094:	streq	r3, [sp, #100]	; 0x64
   12098:	ldr	r3, [sp, #124]	; 0x7c
   1209c:	cmp	r3, #0
   120a0:	bne	118ec <fftwf_malloc@plt+0x10c>
   120a4:	b	11ef0 <fftwf_malloc@plt+0x710>
   120a8:	ldr	r1, [pc, #-584]	; 11e68 <fftwf_malloc@plt+0x688>
   120ac:	mov	r0, fp
   120b0:	bl	114e0 <strcasecmp@plt>
   120b4:	cmp	r0, #0
   120b8:	beq	120e0 <fftwf_malloc@plt+0x900>
   120bc:	ldr	r1, [pc, #-600]	; 11e6c <fftwf_malloc@plt+0x68c>
   120c0:	mov	r0, fp
   120c4:	bl	114e0 <strcasecmp@plt>
   120c8:	cmp	r0, #0
   120cc:	bne	12410 <fftwf_malloc@plt+0xc30>
   120d0:	mov	r2, #1
   120d4:	mov	r3, #2
   120d8:	strd	r2, [sp, #40]	; 0x28
   120dc:	b	118ec <fftwf_malloc@plt+0x10c>
   120e0:	ldr	r3, [pc, #-632]	; 11e70 <fftwf_malloc@plt+0x690>
   120e4:	mov	r2, #0
   120e8:	str	r3, [sp, #24]
   120ec:	mov	r3, #2
   120f0:	str	r2, [sp, #44]	; 0x2c
   120f4:	str	r3, [sp, #28]
   120f8:	str	r3, [sp, #40]	; 0x28
   120fc:	b	118ec <fftwf_malloc@plt+0x10c>
   12100:	ldr	r2, [pc, #-660]	; 11e74 <fftwf_malloc@plt+0x694>
   12104:	ldr	r3, [pc, #-660]	; 11e78 <fftwf_malloc@plt+0x698>
   12108:	str	r2, [sp, #220]	; 0xdc
   1210c:	str	r3, [sp, #216]	; 0xd8
   12110:	cmp	r4, #0
   12114:	blt	11c40 <fftwf_malloc@plt+0x460>
   12118:	ldrb	r2, [sp, #228]	; 0xe4
   1211c:	cmp	r2, #0
   12120:	beq	1213c <fftwf_malloc@plt+0x95c>
   12124:	ldr	r0, [sp, #128]	; 0x80
   12128:	cmp	r0, #0
   1212c:	moveq	r2, #5
   12130:	ldreq	r4, [sp, #212]	; 0xd4
   12134:	ldreq	r1, [pc, #-704]	; 11e7c <fftwf_malloc@plt+0x69c>
   12138:	beq	12770 <fftwf_malloc@plt+0xf90>
   1213c:	ldr	r3, [sp, #28]
   12140:	sub	r1, r3, #1
   12144:	cmp	r1, #1
   12148:	bhi	12734 <fftwf_malloc@plt+0xf54>
   1214c:	ldr	r4, [sp, #108]	; 0x6c
   12150:	ldr	r6, [sp, #132]	; 0x84
   12154:	orrs	r0, r4, r6
   12158:	beq	12764 <fftwf_malloc@plt+0xf84>
   1215c:	vldr	s15, [sp, #24]
   12160:	vldr	d5, [pc, #936]	; 12510 <fftwf_malloc@plt+0xd30>
   12164:	vldr	s12, [pc, #948]	; 12520 <fftwf_malloc@plt+0xd40>
   12168:	vldr	s13, [sp, #64]	; 0x40
   1216c:	vcvt.f64.u32	d7, s15
   12170:	vcmpe.f32	s13, s12
   12174:	vmrs	APSR_nzcv, fpscr
   12178:	vmul.f64	d7, d7, d5
   1217c:	vcvt.f32.f64	s16, d7
   12180:	bmi	122e4 <fftwf_malloc@plt+0xb04>
   12184:	vcmpe.f32	s13, s16
   12188:	vmrs	APSR_nzcv, fpscr
   1218c:	bgt	122e4 <fftwf_malloc@plt+0xb04>
   12190:	cmp	r3, #2
   12194:	bne	121b4 <fftwf_malloc@plt+0x9d4>
   12198:	vldr	s15, [sp, #68]	; 0x44
   1219c:	vcmpe.f32	s15, s12
   121a0:	vmrs	APSR_nzcv, fpscr
   121a4:	bmi	122e4 <fftwf_malloc@plt+0xb04>
   121a8:	vcmpe.f32	s16, s15
   121ac:	vmrs	APSR_nzcv, fpscr
   121b0:	bmi	122e4 <fftwf_malloc@plt+0xb04>
   121b4:	ldrb	r3, [sp, #89]	; 0x59
   121b8:	cmp	r3, #0
   121bc:	bne	12248 <fftwf_malloc@plt+0xa68>
   121c0:	cmp	r4, #0
   121c4:	beq	1259c <fftwf_malloc@plt+0xdbc>
   121c8:	cmp	r6, #0
   121cc:	beq	12638 <fftwf_malloc@plt+0xe58>
   121d0:	cmp	r2, #0
   121d4:	beq	12504 <fftwf_malloc@plt+0xd24>
   121d8:	ldrb	r3, [sp, #88]	; 0x58
   121dc:	cmp	r3, #0
   121e0:	beq	12204 <fftwf_malloc@plt+0xa24>
   121e4:	vldr	s15, [sp, #60]	; 0x3c
   121e8:	vcmpe.f32	s15, #0.0
   121ec:	vmrs	APSR_nzcv, fpscr
   121f0:	ble	122dc <fftwf_malloc@plt+0xafc>
   121f4:	vldr	s14, [pc, #808]	; 12524 <fftwf_malloc@plt+0xd44>
   121f8:	vcmpe.f32	s15, s14
   121fc:	vmrs	APSR_nzcv, fpscr
   12200:	bpl	122dc <fftwf_malloc@plt+0xafc>
   12204:	add	r0, sp, #24
   12208:	bl	1413c <fftwf_malloc@plt+0x295c>
   1220c:	mov	r4, r0
   12210:	b	11c40 <fftwf_malloc@plt+0x460>
   12214:	ldr	r2, [pc, #780]	; 12528 <fftwf_malloc@plt+0xd48>
   12218:	ldr	r3, [pc, #780]	; 1252c <fftwf_malloc@plt+0xd4c>
   1221c:	str	r2, [sp, #220]	; 0xdc
   12220:	str	r3, [sp, #216]	; 0xd8
   12224:	b	12110 <fftwf_malloc@plt+0x930>
   12228:	ldr	r2, [pc, #768]	; 12530 <fftwf_malloc@plt+0xd50>
   1222c:	ldr	r3, [pc, #768]	; 12534 <fftwf_malloc@plt+0xd54>
   12230:	str	r2, [sp, #220]	; 0xdc
   12234:	str	r3, [sp, #216]	; 0xd8
   12238:	b	12110 <fftwf_malloc@plt+0x930>
   1223c:	str	sl, [sp, #220]	; 0xdc
   12240:	str	r9, [sp, #216]	; 0xd8
   12244:	b	12110 <fftwf_malloc@plt+0x930>
   12248:	vldr	d8, [pc, #712]	; 12518 <fftwf_malloc@plt+0xd38>
   1224c:	ldr	r6, [pc, #740]	; 12538 <fftwf_malloc@plt+0xd58>
   12250:	ldr	r7, [pc, #740]	; 1253c <fftwf_malloc@plt+0xd5c>
   12254:	b	1229c <fftwf_malloc@plt+0xabc>
   12258:	vldr	s15, [sp, #24]
   1225c:	ldr	r3, [sp, #52]	; 0x34
   12260:	vmov	r2, s15
   12264:	vcvt.f64.u32	d6, s15
   12268:	umull	r1, r2, r7, r2
   1226c:	add	r3, r3, r2, lsr #6
   12270:	vmul.f64	d6, d6, d8
   12274:	vmov	s15, r3
   12278:	lsl	r2, r3, #1
   1227c:	str	r3, [sp, #52]	; 0x34
   12280:	str	r2, [sp, #48]	; 0x30
   12284:	vcvt.f64.s32	d7, s15
   12288:	vcmpe.f64	d7, d6
   1228c:	vmrs	APSR_nzcv, fpscr
   12290:	bgt	122dc <fftwf_malloc@plt+0xafc>
   12294:	ldr	r0, [pc, #676]	; 12540 <fftwf_malloc@plt+0xd60>
   12298:	bl	11558 <usleep@plt>
   1229c:	mov	r2, #5
   122a0:	mov	r1, r6
   122a4:	mov	r0, #0
   122a8:	ldr	r4, [sp, #208]	; 0xd0
   122ac:	bl	11588 <dcgettext@plt>
   122b0:	mov	r1, #1
   122b4:	mov	r2, r0
   122b8:	mov	r0, r4
   122bc:	bl	116cc <__fprintf_chk@plt>
   122c0:	add	r0, sp, #24
   122c4:	bl	137b4 <fftwf_malloc@plt+0x1fd4>
   122c8:	add	r0, sp, #24
   122cc:	bl	1295c <fftwf_malloc@plt+0x117c>
   122d0:	ldrb	r3, [sp, #190]	; 0xbe
   122d4:	cmp	r3, #0
   122d8:	bne	12258 <fftwf_malloc@plt+0xa78>
   122dc:	mov	r4, #0
   122e0:	b	11c40 <fftwf_malloc@plt+0x460>
   122e4:	mov	r2, #5
   122e8:	ldr	r1, [pc, #596]	; 12544 <fftwf_malloc@plt+0xd64>
   122ec:	mov	r0, #0
   122f0:	ldr	r4, [sp, #212]	; 0xd4
   122f4:	bl	11588 <dcgettext@plt>
   122f8:	mov	r1, #1
   122fc:	mov	r2, r0
   12300:	mov	r0, r4
   12304:	bl	116cc <__fprintf_chk@plt>
   12308:	mov	r2, #5
   1230c:	ldr	r1, [pc, #564]	; 12548 <fftwf_malloc@plt+0xd68>
   12310:	mov	r0, #0
   12314:	ldr	r6, [sp, #212]	; 0xd4
   12318:	bl	11588 <dcgettext@plt>
   1231c:	vcvt.f64.f32	d8, s16
   12320:	ldr	r3, [pc, #548]	; 1254c <fftwf_malloc@plt+0xd6c>
   12324:	mov	r2, #-2147483648	; 0x80000000
   12328:	mov	r1, #1
   1232c:	strd	r2, [sp]
   12330:	mvn	r4, #21
   12334:	vstr	d8, [sp, #8]
   12338:	mov	r2, r0
   1233c:	mov	r0, r6
   12340:	bl	116cc <__fprintf_chk@plt>
   12344:	b	11c40 <fftwf_malloc@plt+0x460>
   12348:	ldr	r0, [sp, #128]	; 0x80
   1234c:	bl	11570 <free@plt>
   12350:	b	11c88 <fftwf_malloc@plt+0x4a8>
   12354:	ldr	r3, [sp, #32]
   12358:	cmp	r3, #0
   1235c:	streq	r0, [sp, #72]	; 0x48
   12360:	streq	r0, [sp, #108]	; 0x6c
   12364:	beq	11d38 <fftwf_malloc@plt+0x558>
   12368:	ldr	r2, [sp, #108]	; 0x6c
   1236c:	cmp	r2, #0
   12370:	movne	r0, #500	; 0x1f4
   12374:	ldrne	r2, [sp, #24]
   12378:	ldrne	r1, [pc, #444]	; 1253c <fftwf_malloc@plt+0xd5c>
   1237c:	mulne	r0, r0, r2
   12380:	addne	r2, r3, r3, lsr #31
   12384:	umullne	r0, r1, r0, r1
   12388:	addne	r3, r3, r2, asr #1
   1238c:	addne	r3, r3, r1, lsr #6
   12390:	str	r3, [sp, #72]	; 0x48
   12394:	b	11d38 <fftwf_malloc@plt+0x558>
   12398:	add	r0, sp, #232	; 0xe8
   1239c:	bl	11594 <mkstemp@plt>
   123a0:	mov	r7, r0
   123a4:	bl	117b0 <__errno_location@plt>
   123a8:	cmn	r7, #1
   123ac:	mov	r4, r0
   123b0:	beq	12604 <fftwf_malloc@plt+0xe24>
   123b4:	add	r0, sp, #232	; 0xe8
   123b8:	bl	116a8 <strdup@plt>
   123bc:	ldr	r4, [r4]
   123c0:	rsb	r4, r4, #0
   123c4:	cmp	r0, #0
   123c8:	str	r0, [sp, #128]	; 0x80
   123cc:	beq	12110 <fftwf_malloc@plt+0x930>
   123d0:	mov	r0, r7
   123d4:	bl	11654 <close@plt>
   123d8:	ldr	r0, [sp, #104]	; 0x68
   123dc:	b	11cf0 <fftwf_malloc@plt+0x510>
   123e0:	mov	r0, fp
   123e4:	bl	114c8 <strtod@plt>
   123e8:	vcvt.f32.f64	s0, d0
   123ec:	vstr	s0, [sp, #64]	; 0x40
   123f0:	vstr	s0, [sp, #68]	; 0x44
   123f4:	b	118ec <fftwf_malloc@plt+0x10c>
   123f8:	ldr	r3, [sp, #124]	; 0x7c
   123fc:	cmp	r3, #0
   12400:	ldreq	r3, [pc, #328]	; 12550 <fftwf_malloc@plt+0xd70>
   12404:	streq	r3, [sp, #124]	; 0x7c
   12408:	streq	r3, [sp, #100]	; 0x64
   1240c:	b	11cdc <fftwf_malloc@plt+0x4fc>
   12410:	ldr	r1, [pc, #316]	; 12554 <fftwf_malloc@plt+0xd74>
   12414:	mov	r0, fp
   12418:	bl	114e0 <strcasecmp@plt>
   1241c:	cmp	r0, #0
   12420:	beq	124f4 <fftwf_malloc@plt+0xd14>
   12424:	ldr	r1, [pc, #300]	; 12558 <fftwf_malloc@plt+0xd78>
   12428:	mov	r0, fp
   1242c:	bl	114e0 <strcasecmp@plt>
   12430:	cmp	r0, #0
   12434:	bne	126a0 <fftwf_malloc@plt+0xec0>
   12438:	mov	r3, #3
   1243c:	str	r3, [sp, #44]	; 0x2c
   12440:	str	r3, [sp, #40]	; 0x28
   12444:	b	118ec <fftwf_malloc@plt+0x10c>
   12448:	bl	117b0 <__errno_location@plt>
   1244c:	mov	r2, #5
   12450:	ldr	r1, [pc, #260]	; 1255c <fftwf_malloc@plt+0xd7c>
   12454:	ldr	r5, [sp, #212]	; 0xd4
   12458:	ldr	r4, [r0]
   1245c:	mov	r0, #0
   12460:	bl	11588 <dcgettext@plt>
   12464:	rsb	r4, r4, #0
   12468:	str	r4, [sp]
   1246c:	mov	r3, fp
   12470:	mov	r1, #1
   12474:	mov	r2, r0
   12478:	mov	r0, r5
   1247c:	bl	116cc <__fprintf_chk@plt>
   12480:	mov	r0, #1
   12484:	bl	1178c <exit@plt>
   12488:	bl	117b0 <__errno_location@plt>
   1248c:	mov	r2, #5
   12490:	ldr	r1, [pc, #200]	; 12560 <fftwf_malloc@plt+0xd80>
   12494:	ldr	r7, [sp, #212]	; 0xd4
   12498:	ldr	r4, [r0]
   1249c:	mov	r0, r6
   124a0:	bl	11588 <dcgettext@plt>
   124a4:	rsb	r4, r4, #0
   124a8:	str	r4, [sp]
   124ac:	ldr	r3, [sp, #104]	; 0x68
   124b0:	mov	r1, #1
   124b4:	mov	r2, r0
   124b8:	mov	r0, r7
   124bc:	bl	116cc <__fprintf_chk@plt>
   124c0:	b	12110 <fftwf_malloc@plt+0x930>
   124c4:	mov	r0, r6
   124c8:	mov	r2, #5
   124cc:	ldr	r1, [pc, #140]	; 12560 <fftwf_malloc@plt+0xd80>
   124d0:	ldr	r6, [sp, #212]	; 0xd4
   124d4:	bl	11588 <dcgettext@plt>
   124d8:	str	r4, [sp]
   124dc:	ldr	r3, [sp, #80]	; 0x50
   124e0:	mov	r1, #1
   124e4:	mov	r2, r0
   124e8:	mov	r0, r6
   124ec:	bl	116cc <__fprintf_chk@plt>
   124f0:	b	12110 <fftwf_malloc@plt+0x930>
   124f4:	mov	r3, #2
   124f8:	str	r0, [sp, #44]	; 0x2c
   124fc:	str	r3, [sp, #40]	; 0x28
   12500:	b	118ec <fftwf_malloc@plt+0x10c>
   12504:	add	r0, sp, #24
   12508:	bl	1295c <fftwf_malloc@plt+0x117c>
   1250c:	b	121d8 <fftwf_malloc@plt+0x9f8>
   12510:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   12514:	svccc	0x00d99999
   12518:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   1251c:	svccc	0x00c99999
   12520:	rscmi	r5, r0, ip, ror #3
   12524:	movtmi	r0, #32768	; 0x8000
   12528:	ldrdeq	r3, [r1], -r4
   1252c:	muleq	r1, r4, ip
   12530:	andeq	r3, r1, r8, lsl #26
   12534:	andeq	r3, r1, ip, lsr ip
   12538:	andeq	r7, r1, ip, lsl #7
   1253c:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   12540:	andeq	sl, r7, r0, lsr #2
   12544:	andeq	r7, r1, r8, asr r3
   12548:	andeq	r7, r1, r4, ror r3
   1254c:	andsmi	r0, ip, sp, lsr sl
   12550:	andeq	r7, r1, ip, lsr #5
   12554:	andeq	r6, r1, ip, lsr #25
   12558:			; <UNDEFINED> instruction: 0x00016cb4
   1255c:	andeq	r6, r1, r4, lsl #25
   12560:	andeq	r7, r1, r4, asr #4
   12564:	andeq	r6, r1, r0, ror #23
   12568:			; <UNDEFINED> instruction: 0x000172b4
   1256c:	andeq	r6, r1, ip, asr #24
   12570:			; <UNDEFINED> instruction: 0x00016cbc
   12574:	muleq	r1, ip, fp
   12578:	strdeq	r6, [r1], -r8
   1257c:	andeq	r7, r1, ip, lsl r3
   12580:	andeq	r7, r1, r8, lsr r3
   12584:	andeq	r6, r1, r0, asr #23
   12588:	andeq	r6, r1, ip, lsr #24
   1258c:	andeq	r6, r1, r8, ror fp
   12590:	andeq	r6, r1, r4, asr fp
   12594:	andeq	r6, r1, r4, asr #25
   12598:	ldrdeq	r7, [r1], -r8
   1259c:	add	r0, sp, #16
   125a0:	add	r3, sp, #24
   125a4:	ldr	r2, [sp, #112]	; 0x70
   125a8:	mov	r1, r4
   125ac:	bl	115d0 <pthread_create@plt>
   125b0:	subs	r6, r0, #0
   125b4:	bne	127fc <fftwf_malloc@plt+0x101c>
   125b8:	ldr	r6, [sp, #16]
   125bc:	add	r1, sp, #20
   125c0:	mov	r0, r6
   125c4:	bl	117d4 <pthread_join@plt>
   125c8:	subs	r7, r0, #0
   125cc:	bne	126c4 <fftwf_malloc@plt+0xee4>
   125d0:	ldr	r3, [sp, #20]
   125d4:	ldr	r4, [r3]
   125d8:	cmp	r4, #0
   125dc:	bne	12790 <fftwf_malloc@plt+0xfb0>
   125e0:	mov	r2, #5
   125e4:	ldr	r1, [pc, #-136]	; 12564 <fftwf_malloc@plt+0xd84>
   125e8:	ldr	r6, [sp, #208]	; 0xd0
   125ec:	bl	11588 <dcgettext@plt>
   125f0:	mov	r1, #1
   125f4:	mov	r2, r0
   125f8:	mov	r0, r6
   125fc:	bl	116cc <__fprintf_chk@plt>
   12600:	b	11c40 <fftwf_malloc@plt+0x460>
   12604:	ldr	r4, [r0]
   12608:	mov	r2, #5
   1260c:	mov	r0, r6
   12610:	ldr	r1, [pc, #-176]	; 12568 <fftwf_malloc@plt+0xd88>
   12614:	ldr	r7, [sp, #212]	; 0xd4
   12618:	bl	11588 <dcgettext@plt>
   1261c:	rsb	r4, r4, #0
   12620:	mov	r3, r4
   12624:	mov	r1, #1
   12628:	mov	r2, r0
   1262c:	mov	r0, r7
   12630:	bl	116cc <__fprintf_chk@plt>
   12634:	b	12110 <fftwf_malloc@plt+0x930>
   12638:	add	r0, sp, #16
   1263c:	add	r3, sp, #24
   12640:	ldr	r2, [sp, #136]	; 0x88
   12644:	mov	r1, r6
   12648:	bl	115d0 <pthread_create@plt>
   1264c:	subs	r4, r0, #0
   12650:	bne	127cc <fftwf_malloc@plt+0xfec>
   12654:	ldr	r4, [sp, #16]
   12658:	add	r1, sp, #20
   1265c:	mov	r0, r4
   12660:	bl	117d4 <pthread_join@plt>
   12664:	subs	r7, r0, #0
   12668:	bne	12704 <fftwf_malloc@plt+0xf24>
   1266c:	ldr	r3, [sp, #20]
   12670:	ldr	r3, [r3]
   12674:	cmp	r3, #0
   12678:	bne	127c0 <fftwf_malloc@plt+0xfe0>
   1267c:	mov	r2, #5
   12680:	ldr	r1, [pc, #-284]	; 1256c <fftwf_malloc@plt+0xd8c>
   12684:	ldr	r4, [sp, #208]	; 0xd0
   12688:	bl	11588 <dcgettext@plt>
   1268c:	mov	r1, #1
   12690:	mov	r2, r0
   12694:	mov	r0, r4
   12698:	bl	116cc <__fprintf_chk@plt>
   1269c:	b	121d8 <fftwf_malloc@plt+0x9f8>
   126a0:	ldr	r1, [pc, #-312]	; 12570 <fftwf_malloc@plt+0xd90>
   126a4:	mov	r0, fp
   126a8:	bl	114e0 <strcasecmp@plt>
   126ac:	cmp	r0, #0
   126b0:	bne	12818 <fftwf_malloc@plt+0x1038>
   126b4:	mov	r2, #4
   126b8:	mov	r3, #1
   126bc:	strd	r2, [sp, #40]	; 0x28
   126c0:	b	118ec <fftwf_malloc@plt+0x10c>
   126c4:	mov	r0, r6
   126c8:	bl	117bc <pthread_cancel@plt>
   126cc:	mov	r2, #5
   126d0:	ldr	r1, [pc, #-356]	; 12574 <fftwf_malloc@plt+0xd94>
   126d4:	mov	r0, r4
   126d8:	ldr	r5, [sp, #212]	; 0xd4
   126dc:	bl	11588 <dcgettext@plt>
   126e0:	mov	r3, r7
   126e4:	mov	r1, #1
   126e8:	mov	r2, r0
   126ec:	mov	r0, r5
   126f0:	bl	116cc <__fprintf_chk@plt>
   126f4:	ldr	r0, [sp, #20]
   126f8:	bl	11570 <free@plt>
   126fc:	mov	r0, #1
   12700:	bl	1178c <exit@plt>
   12704:	mov	r0, r4
   12708:	bl	117bc <pthread_cancel@plt>
   1270c:	mov	r2, #5
   12710:	ldr	r1, [pc, #-416]	; 12578 <fftwf_malloc@plt+0xd98>
   12714:	mov	r0, r6
   12718:	ldr	r4, [sp, #212]	; 0xd4
   1271c:	bl	11588 <dcgettext@plt>
   12720:	mov	r3, r7
   12724:	mov	r1, #1
   12728:	mov	r2, r0
   1272c:	mov	r0, r4
   12730:	b	126f0 <fftwf_malloc@plt+0xf10>
   12734:	mov	r2, #5
   12738:	ldr	r1, [pc, #-452]	; 1257c <fftwf_malloc@plt+0xd9c>
   1273c:	mov	r0, #0
   12740:	ldr	r6, [sp, #212]	; 0xd4
   12744:	bl	11588 <dcgettext@plt>
   12748:	ldr	r3, [sp, #28]
   1274c:	mov	r2, r0
   12750:	mov	r1, #1
   12754:	mov	r0, r6
   12758:	mvn	r4, #21
   1275c:	bl	116cc <__fprintf_chk@plt>
   12760:	b	11c40 <fftwf_malloc@plt+0x460>
   12764:	ldr	r4, [sp, #212]	; 0xd4
   12768:	ldr	r1, [pc, #-496]	; 12580 <fftwf_malloc@plt+0xda0>
   1276c:	mov	r2, #5
   12770:	bl	11588 <dcgettext@plt>
   12774:	mov	r1, #1
   12778:	mov	r2, r0
   1277c:	mov	r0, r4
   12780:	bl	116cc <__fprintf_chk@plt>
   12784:	mvn	r4, #21
   12788:	b	11c40 <fftwf_malloc@plt+0x460>
   1278c:	bl	116c0 <__stack_chk_fail@plt>
   12790:	ldr	r1, [pc, #-532]	; 12584 <fftwf_malloc@plt+0xda4>
   12794:	mov	r2, #5
   12798:	ldr	r4, [sp, #212]	; 0xd4
   1279c:	bl	11588 <dcgettext@plt>
   127a0:	ldr	r3, [sp, #20]
   127a4:	mov	r1, #1
   127a8:	ldr	r3, [r3]
   127ac:	mov	r2, r0
   127b0:	mov	r0, r4
   127b4:	bl	116cc <__fprintf_chk@plt>
   127b8:	mov	r0, #1
   127bc:	bl	1178c <exit@plt>
   127c0:	mov	r2, #5
   127c4:	ldr	r1, [pc, #-580]	; 12588 <fftwf_malloc@plt+0xda8>
   127c8:	b	12798 <fftwf_malloc@plt+0xfb8>
   127cc:	mov	r0, r6
   127d0:	mov	r2, #5
   127d4:	ldr	r1, [pc, #-592]	; 1258c <fftwf_malloc@plt+0xdac>
   127d8:	ldr	r5, [sp, #212]	; 0xd4
   127dc:	bl	11588 <dcgettext@plt>
   127e0:	mov	r3, r4
   127e4:	mov	r2, r0
   127e8:	mov	r1, #1
   127ec:	mov	r0, r5
   127f0:	bl	116cc <__fprintf_chk@plt>
   127f4:	mov	r0, #1
   127f8:	bl	1178c <exit@plt>
   127fc:	mov	r0, r4
   12800:	mov	r2, #5
   12804:	ldr	r1, [pc, #-636]	; 12590 <fftwf_malloc@plt+0xdb0>
   12808:	ldr	r5, [sp, #212]	; 0xd4
   1280c:	bl	11588 <dcgettext@plt>
   12810:	mov	r3, r6
   12814:	b	127e4 <fftwf_malloc@plt+0x1004>
   12818:	mvn	r3, #0
   1281c:	mov	r2, #5
   12820:	ldr	r1, [pc, #-660]	; 12594 <fftwf_malloc@plt+0xdb4>
   12824:	mov	r0, #0
   12828:	ldr	r4, [sp, #212]	; 0xd4
   1282c:	str	r3, [sp, #44]	; 0x2c
   12830:	bl	11588 <dcgettext@plt>
   12834:	mov	r3, fp
   12838:	mov	r1, #1
   1283c:	mov	r2, r0
   12840:	mov	r0, r4
   12844:	bl	116cc <__fprintf_chk@plt>
   12848:	mov	r0, #1
   1284c:	bl	1178c <exit@plt>
   12850:	mov	r2, #5
   12854:	ldr	r1, [pc, #-708]	; 12598 <fftwf_malloc@plt+0xdb8>
   12858:	mov	r0, #0
   1285c:	ldr	r6, [sp, #212]	; 0xd4
   12860:	bl	11588 <dcgettext@plt>
   12864:	ldr	r3, [sp, #40]	; 0x28
   12868:	b	1274c <fftwf_malloc@plt+0xf6c>
   1286c:	mov	fp, #0
   12870:	mov	lr, #0
   12874:	pop	{r1}		; (ldr r1, [sp], #4)
   12878:	mov	r2, sp
   1287c:	push	{r2}		; (str r2, [sp, #-4]!)
   12880:	push	{r0}		; (str r0, [sp, #-4]!)
   12884:	ldr	ip, [pc, #16]	; 1289c <fftwf_malloc@plt+0x10bc>
   12888:	push	{ip}		; (str ip, [sp, #-4]!)
   1288c:	ldr	r0, [pc, #12]	; 128a0 <fftwf_malloc@plt+0x10c0>
   12890:	ldr	r3, [pc, #12]	; 128a4 <fftwf_malloc@plt+0x10c4>
   12894:	bl	1145c <__libc_start_main@plt>
   12898:	bl	11444 <abort@plt>
   1289c:	andeq	r6, r1, r4, lsl #21
   128a0:	strdeq	r1, [r1], -r0
   128a4:	andeq	r6, r1, r4, lsr #20
   128a8:	ldr	r3, [pc, #20]	; 128c4 <fftwf_malloc@plt+0x10e4>
   128ac:	ldr	r2, [pc, #20]	; 128c8 <fftwf_malloc@plt+0x10e8>
   128b0:	add	r3, pc, r3
   128b4:	ldr	r2, [r3, r2]
   128b8:	cmp	r2, #0
   128bc:	bxeq	lr
   128c0:	b	11468 <__gmon_start__@plt>
   128c4:	andeq	r6, r1, ip, ror #11
   128c8:	andeq	r0, r0, r4, asr r1
   128cc:	ldr	r0, [pc, #24]	; 128ec <fftwf_malloc@plt+0x110c>
   128d0:	ldr	r3, [pc, #24]	; 128f0 <fftwf_malloc@plt+0x1110>
   128d4:	cmp	r3, r0
   128d8:	bxeq	lr
   128dc:	ldr	r3, [pc, #16]	; 128f4 <fftwf_malloc@plt+0x1114>
   128e0:	cmp	r3, #0
   128e4:	bxeq	lr
   128e8:	bx	r3
   128ec:	andeq	r9, r2, r8, lsr r0
   128f0:	andeq	r9, r2, r8, lsr r0
   128f4:	andeq	r0, r0, r0
   128f8:	ldr	r0, [pc, #36]	; 12924 <fftwf_malloc@plt+0x1144>
   128fc:	ldr	r1, [pc, #36]	; 12928 <fftwf_malloc@plt+0x1148>
   12900:	sub	r1, r1, r0
   12904:	asr	r1, r1, #2
   12908:	add	r1, r1, r1, lsr #31
   1290c:	asrs	r1, r1, #1
   12910:	bxeq	lr
   12914:	ldr	r3, [pc, #16]	; 1292c <fftwf_malloc@plt+0x114c>
   12918:	cmp	r3, #0
   1291c:	bxeq	lr
   12920:	bx	r3
   12924:	andeq	r9, r2, r8, lsr r0
   12928:	andeq	r9, r2, r8, lsr r0
   1292c:	andeq	r0, r0, r0
   12930:	push	{r4, lr}
   12934:	ldr	r4, [pc, #24]	; 12954 <fftwf_malloc@plt+0x1174>
   12938:	ldrb	r3, [r4]
   1293c:	cmp	r3, #0
   12940:	popne	{r4, pc}
   12944:	bl	128cc <fftwf_malloc@plt+0x10ec>
   12948:	mov	r3, #1
   1294c:	strb	r3, [r4]
   12950:	pop	{r4, pc}
   12954:	andeq	r9, r2, ip, asr #32
   12958:	b	128f8 <fftwf_malloc@plt+0x1118>
   1295c:	push	{r4, r5, r6, r7, r8, lr}
   12960:	sub	sp, sp, #24
   12964:	ldr	r5, [pc, #620]	; 12bd8 <fftwf_malloc@plt+0x13f8>
   12968:	mov	r3, r0
   1296c:	ldr	r2, [r0, #88]	; 0x58
   12970:	ldr	ip, [r5]
   12974:	mov	r4, r0
   12978:	mov	r1, #0
   1297c:	add	r0, sp, #8
   12980:	str	ip, [sp, #20]
   12984:	bl	115d0 <pthread_create@plt>
   12988:	subs	r6, r0, #0
   1298c:	bne	12b6c <fftwf_malloc@plt+0x138c>
   12990:	ldr	r0, [pc, #580]	; 12bdc <fftwf_malloc@plt+0x13fc>
   12994:	bl	11558 <usleep@plt>
   12998:	mov	r3, r4
   1299c:	ldr	r2, [r4, #112]	; 0x70
   129a0:	mov	r1, r6
   129a4:	add	r0, sp, #4
   129a8:	bl	115d0 <pthread_create@plt>
   129ac:	subs	r7, r0, #0
   129b0:	bne	12ba0 <fftwf_malloc@plt+0x13c0>
   129b4:	ldr	r6, [sp, #8]
   129b8:	add	r1, sp, #16
   129bc:	mov	r0, r6
   129c0:	bl	117d4 <pthread_join@plt>
   129c4:	subs	r8, r0, #0
   129c8:	bne	12a6c <fftwf_malloc@plt+0x128c>
   129cc:	ldr	r3, [sp, #16]
   129d0:	ldr	r6, [r3]
   129d4:	cmp	r6, #0
   129d8:	bne	12b04 <fftwf_malloc@plt+0x1324>
   129dc:	mov	r2, #5
   129e0:	ldr	r1, [pc, #504]	; 12be0 <fftwf_malloc@plt+0x1400>
   129e4:	ldr	r7, [r4, #184]	; 0xb8
   129e8:	bl	11588 <dcgettext@plt>
   129ec:	mov	r1, #1
   129f0:	mov	r2, r0
   129f4:	mov	r0, r7
   129f8:	bl	116cc <__fprintf_chk@plt>
   129fc:	ldr	r0, [sp, #4]
   12a00:	bl	117bc <pthread_cancel@plt>
   12a04:	ldr	r7, [sp, #4]
   12a08:	add	r1, sp, #12
   12a0c:	mov	r0, r7
   12a10:	bl	117d4 <pthread_join@plt>
   12a14:	subs	r8, r0, #0
   12a18:	bne	12ab4 <fftwf_malloc@plt+0x12d4>
   12a1c:	ldr	r3, [sp, #12]
   12a20:	cmn	r3, #1
   12a24:	beq	12af4 <fftwf_malloc@plt+0x1314>
   12a28:	ldr	r3, [r3]
   12a2c:	cmp	r3, #0
   12a30:	bne	12b3c <fftwf_malloc@plt+0x135c>
   12a34:	ldr	r4, [r4, #184]	; 0xb8
   12a38:	ldr	r1, [pc, #420]	; 12be4 <fftwf_malloc@plt+0x1404>
   12a3c:	mov	r2, #5
   12a40:	bl	11588 <dcgettext@plt>
   12a44:	mov	r1, #1
   12a48:	mov	r2, r0
   12a4c:	mov	r0, r4
   12a50:	bl	116cc <__fprintf_chk@plt>
   12a54:	ldr	r2, [sp, #20]
   12a58:	ldr	r3, [r5]
   12a5c:	cmp	r2, r3
   12a60:	bne	12b9c <fftwf_malloc@plt+0x13bc>
   12a64:	add	sp, sp, #24
   12a68:	pop	{r4, r5, r6, r7, r8, pc}
   12a6c:	mov	r0, r6
   12a70:	bl	117bc <pthread_cancel@plt>
   12a74:	mov	r2, #5
   12a78:	ldr	r1, [pc, #360]	; 12be8 <fftwf_malloc@plt+0x1408>
   12a7c:	mov	r0, r7
   12a80:	ldr	r4, [r4, #188]	; 0xbc
   12a84:	bl	11588 <dcgettext@plt>
   12a88:	mov	r3, r8
   12a8c:	mov	r1, #1
   12a90:	mov	r2, r0
   12a94:	mov	r0, r4
   12a98:	bl	116cc <__fprintf_chk@plt>
   12a9c:	ldr	r0, [sp, #16]
   12aa0:	bl	11570 <free@plt>
   12aa4:	ldr	r0, [sp, #4]
   12aa8:	bl	117bc <pthread_cancel@plt>
   12aac:	mov	r0, #1
   12ab0:	bl	1178c <exit@plt>
   12ab4:	mov	r0, r7
   12ab8:	bl	117bc <pthread_cancel@plt>
   12abc:	mov	r2, #5
   12ac0:	ldr	r1, [pc, #292]	; 12bec <fftwf_malloc@plt+0x140c>
   12ac4:	mov	r0, r6
   12ac8:	ldr	r4, [r4, #188]	; 0xbc
   12acc:	bl	11588 <dcgettext@plt>
   12ad0:	mov	r3, r8
   12ad4:	mov	r1, #1
   12ad8:	mov	r2, r0
   12adc:	mov	r0, r4
   12ae0:	bl	116cc <__fprintf_chk@plt>
   12ae4:	ldr	r0, [sp, #12]
   12ae8:	bl	11570 <free@plt>
   12aec:	mov	r0, #1
   12af0:	bl	1178c <exit@plt>
   12af4:	ldr	r4, [r4, #184]	; 0xb8
   12af8:	mov	r2, #5
   12afc:	ldr	r1, [pc, #236]	; 12bf0 <fftwf_malloc@plt+0x1410>
   12b00:	b	12a40 <fftwf_malloc@plt+0x1260>
   12b04:	mov	r2, #5
   12b08:	ldr	r1, [pc, #228]	; 12bf4 <fftwf_malloc@plt+0x1414>
   12b0c:	ldr	r4, [r4, #188]	; 0xbc
   12b10:	bl	11588 <dcgettext@plt>
   12b14:	ldr	r3, [sp, #16]
   12b18:	mov	r1, #1
   12b1c:	ldr	r3, [r3]
   12b20:	mov	r2, r0
   12b24:	mov	r0, r4
   12b28:	bl	116cc <__fprintf_chk@plt>
   12b2c:	ldr	r0, [sp, #4]
   12b30:	bl	117bc <pthread_cancel@plt>
   12b34:	mov	r0, #1
   12b38:	bl	1178c <exit@plt>
   12b3c:	mov	r2, #5
   12b40:	ldr	r1, [pc, #176]	; 12bf8 <fftwf_malloc@plt+0x1418>
   12b44:	ldr	r4, [r4, #188]	; 0xbc
   12b48:	bl	11588 <dcgettext@plt>
   12b4c:	ldr	r3, [sp, #12]
   12b50:	mov	r1, #1
   12b54:	ldr	r3, [r3]
   12b58:	mov	r2, r0
   12b5c:	mov	r0, r4
   12b60:	bl	116cc <__fprintf_chk@plt>
   12b64:	mov	r0, #1
   12b68:	bl	1178c <exit@plt>
   12b6c:	mov	r2, #5
   12b70:	ldr	r1, [pc, #132]	; 12bfc <fftwf_malloc@plt+0x141c>
   12b74:	mov	r0, #0
   12b78:	ldr	r4, [r4, #188]	; 0xbc
   12b7c:	bl	11588 <dcgettext@plt>
   12b80:	mov	r3, r6
   12b84:	mov	r1, #1
   12b88:	mov	r2, r0
   12b8c:	mov	r0, r4
   12b90:	bl	116cc <__fprintf_chk@plt>
   12b94:	mov	r0, #1
   12b98:	bl	1178c <exit@plt>
   12b9c:	bl	116c0 <__stack_chk_fail@plt>
   12ba0:	mov	r2, #5
   12ba4:	ldr	r1, [pc, #84]	; 12c00 <fftwf_malloc@plt+0x1420>
   12ba8:	mov	r0, r6
   12bac:	ldr	r4, [r4, #188]	; 0xbc
   12bb0:	bl	11588 <dcgettext@plt>
   12bb4:	mov	r3, r7
   12bb8:	mov	r1, #1
   12bbc:	mov	r2, r0
   12bc0:	mov	r0, r4
   12bc4:	bl	116cc <__fprintf_chk@plt>
   12bc8:	ldr	r0, [sp, #8]
   12bcc:	bl	117bc <pthread_cancel@plt>
   12bd0:	mov	r0, #1
   12bd4:	bl	1178c <exit@plt>
   12bd8:	andeq	r8, r2, r8, ror sp
   12bdc:	andeq	sl, r7, r0, lsr #2
   12be0:	andeq	r6, r1, r0, ror #23
   12be4:	andeq	r6, r1, ip, asr #24
   12be8:	muleq	r1, ip, fp
   12bec:	strdeq	r6, [r1], -r8
   12bf0:	andeq	r6, r1, r8, lsl ip
   12bf4:	andeq	r6, r1, r0, asr #23
   12bf8:	andeq	r6, r1, ip, lsr #24
   12bfc:	andeq	r6, r1, r4, asr fp
   12c00:	andeq	r6, r1, r8, ror fp
   12c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c08:	sub	sp, sp, #60	; 0x3c
   12c0c:	ldr	sl, [pc, #760]	; 12f0c <fftwf_malloc@plt+0x172c>
   12c10:	mov	r5, r2
   12c14:	str	r1, [sp, #12]
   12c18:	ldr	ip, [sl]
   12c1c:	mov	r7, r0
   12c20:	mov	r6, r3
   12c24:	mov	r2, #1
   12c28:	mov	r3, r5
   12c2c:	mov	r1, #12
   12c30:	add	r0, sp, #24
   12c34:	str	ip, [sp, #52]	; 0x34
   12c38:	bl	11738 <fread@plt>
   12c3c:	cmp	r0, #1
   12c40:	bne	12eac <fftwf_malloc@plt+0x16cc>
   12c44:	ldr	r3, [pc, #708]	; 12f10 <fftwf_malloc@plt+0x1730>
   12c48:	ldr	r2, [sp, #24]
   12c4c:	cmp	r2, r3
   12c50:	bne	12e7c <fftwf_malloc@plt+0x169c>
   12c54:	sub	r3, r3, #15728640	; 0xf00000
   12c58:	sub	r3, r3, #2032	; 0x7f0
   12c5c:	ldr	r2, [sp, #32]
   12c60:	sub	r3, r3, #11
   12c64:	cmp	r2, r3
   12c68:	bne	12e7c <fftwf_malloc@plt+0x169c>
   12c6c:	ldr	r9, [pc, #672]	; 12f14 <fftwf_malloc@plt+0x1734>
   12c70:	ldr	r8, [pc, #672]	; 12f18 <fftwf_malloc@plt+0x1738>
   12c74:	mov	r3, r5
   12c78:	mov	r2, #1
   12c7c:	mov	r1, #8
   12c80:	add	r0, sp, #16
   12c84:	bl	11738 <fread@plt>
   12c88:	cmp	r0, #1
   12c8c:	mov	r4, r0
   12c90:	bne	12e24 <fftwf_malloc@plt+0x1644>
   12c94:	ldr	r3, [sp, #16]
   12c98:	cmp	r3, r9
   12c9c:	beq	12d1c <fftwf_malloc@plt+0x153c>
   12ca0:	cmp	r3, r8
   12ca4:	beq	12d84 <fftwf_malloc@plt+0x15a4>
   12ca8:	mov	r2, r0
   12cac:	ldr	r1, [sp, #20]
   12cb0:	mov	r0, r5
   12cb4:	bl	115a0 <fseek@plt>
   12cb8:	cmn	r0, #1
   12cbc:	mov	fp, r0
   12cc0:	bne	12c74 <fftwf_malloc@plt+0x1494>
   12cc4:	mov	r2, #5
   12cc8:	ldr	r1, [pc, #588]	; 12f1c <fftwf_malloc@plt+0x173c>
   12ccc:	mov	r0, #0
   12cd0:	ldr	r5, [r7, #188]	; 0xbc
   12cd4:	bl	11588 <dcgettext@plt>
   12cd8:	mov	r1, r4
   12cdc:	mov	r2, r0
   12ce0:	mov	r0, r5
   12ce4:	bl	116cc <__fprintf_chk@plt>
   12ce8:	mov	r2, #5
   12cec:	ldr	r1, [pc, #556]	; 12f20 <fftwf_malloc@plt+0x1740>
   12cf0:	mov	r0, #0
   12cf4:	ldr	r5, [r7, #188]	; 0xbc
   12cf8:	bl	11588 <dcgettext@plt>
   12cfc:	str	fp, [sp]
   12d00:	ldr	r3, [sp, #12]
   12d04:	mov	r1, r4
   12d08:	mov	r2, r0
   12d0c:	mov	r0, r5
   12d10:	bl	116cc <__fprintf_chk@plt>
   12d14:	mvn	r0, #21
   12d18:	b	12d90 <fftwf_malloc@plt+0x15b0>
   12d1c:	mov	r2, r0
   12d20:	mov	r3, r5
   12d24:	mov	r1, #16
   12d28:	add	r0, sp, #36	; 0x24
   12d2c:	bl	11738 <fread@plt>
   12d30:	cmp	r0, #1
   12d34:	mov	fp, r0
   12d38:	bne	12ebc <fftwf_malloc@plt+0x16dc>
   12d3c:	ldr	r1, [sp, #20]
   12d40:	sub	r1, r1, #16
   12d44:	cmp	r1, #0
   12d48:	bgt	12dd8 <fftwf_malloc@plt+0x15f8>
   12d4c:	cmp	r6, #0
   12d50:	bne	12c74 <fftwf_malloc@plt+0x1494>
   12d54:	ldrh	r3, [sp, #50]	; 0x32
   12d58:	ldrh	r1, [sp, #38]	; 0x26
   12d5c:	ldr	r2, [sp, #40]	; 0x28
   12d60:	lsr	r3, r3, #3
   12d64:	cmp	r3, #4
   12d68:	str	r3, [r7, #16]
   12d6c:	str	r1, [r7, #4]
   12d70:	str	r2, [r7]
   12d74:	bhi	12ed8 <fftwf_malloc@plt+0x16f8>
   12d78:	ldrh	r3, [sp, #48]	; 0x30
   12d7c:	str	r3, [r7, #12]
   12d80:	b	12c74 <fftwf_malloc@plt+0x1494>
   12d84:	cmp	r6, #0
   12d88:	beq	12da8 <fftwf_malloc@plt+0x15c8>
   12d8c:	mov	r0, #0
   12d90:	ldr	r2, [sp, #52]	; 0x34
   12d94:	ldr	r3, [sl]
   12d98:	cmp	r2, r3
   12d9c:	bne	12f08 <fftwf_malloc@plt+0x1728>
   12da0:	add	sp, sp, #60	; 0x3c
   12da4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12da8:	ldr	r1, [r7, #12]
   12dac:	ldr	r0, [sp, #20]
   12db0:	bl	165c8 <fftwf_malloc@plt+0x4de8>
   12db4:	ldrb	r3, [r7, #204]	; 0xcc
   12db8:	cmp	r3, #0
   12dbc:	str	r0, [r7, #8]
   12dc0:	bne	12d8c <fftwf_malloc@plt+0x15ac>
   12dc4:	add	r3, r0, r0, lsr #31
   12dc8:	mov	r0, r6
   12dcc:	asr	r3, r3, #1
   12dd0:	str	r3, [r7, #8]
   12dd4:	b	12d90 <fftwf_malloc@plt+0x15b0>
   12dd8:	mov	r2, r0
   12ddc:	mov	r0, r5
   12de0:	bl	115a0 <fseek@plt>
   12de4:	cmn	r0, #1
   12de8:	mov	r4, r0
   12dec:	bne	12d4c <fftwf_malloc@plt+0x156c>
   12df0:	mov	r2, #5
   12df4:	ldr	r1, [pc, #296]	; 12f24 <fftwf_malloc@plt+0x1744>
   12df8:	mov	r0, #0
   12dfc:	ldr	r5, [r7, #188]	; 0xbc
   12e00:	bl	11588 <dcgettext@plt>
   12e04:	str	r4, [sp]
   12e08:	ldr	r3, [sp, #12]
   12e0c:	mov	r1, fp
   12e10:	mov	r2, r0
   12e14:	mov	r0, r5
   12e18:	bl	116cc <__fprintf_chk@plt>
   12e1c:	mvn	r0, #21
   12e20:	b	12d90 <fftwf_malloc@plt+0x15b0>
   12e24:	mov	r2, #5
   12e28:	ldr	r1, [pc, #248]	; 12f28 <fftwf_malloc@plt+0x1748>
   12e2c:	mov	r0, #0
   12e30:	ldr	r5, [r7, #188]	; 0xbc
   12e34:	bl	11588 <dcgettext@plt>
   12e38:	mov	r1, #1
   12e3c:	mov	r2, r0
   12e40:	mov	r0, r5
   12e44:	bl	116cc <__fprintf_chk@plt>
   12e48:	ldr	r1, [pc, #220]	; 12f2c <fftwf_malloc@plt+0x174c>
   12e4c:	mov	r2, #5
   12e50:	mov	r0, #0
   12e54:	ldr	r5, [r7, #188]	; 0xbc
   12e58:	bl	11588 <dcgettext@plt>
   12e5c:	str	r4, [sp]
   12e60:	mov	r2, r0
   12e64:	ldr	r3, [sp, #12]
   12e68:	mov	r1, #1
   12e6c:	mov	r0, r5
   12e70:	bl	116cc <__fprintf_chk@plt>
   12e74:	mvn	r0, #4
   12e78:	b	12d90 <fftwf_malloc@plt+0x15b0>
   12e7c:	mov	r2, #5
   12e80:	ldr	r1, [pc, #168]	; 12f30 <fftwf_malloc@plt+0x1750>
   12e84:	mov	r0, #0
   12e88:	ldr	r4, [r7, #188]	; 0xbc
   12e8c:	bl	11588 <dcgettext@plt>
   12e90:	ldr	r3, [sp, #12]
   12e94:	mov	r1, #1
   12e98:	mov	r2, r0
   12e9c:	mov	r0, r4
   12ea0:	bl	116cc <__fprintf_chk@plt>
   12ea4:	mvn	r0, #21
   12ea8:	b	12d90 <fftwf_malloc@plt+0x15b0>
   12eac:	mov	r4, r0
   12eb0:	mov	r2, #5
   12eb4:	ldr	r1, [pc, #120]	; 12f34 <fftwf_malloc@plt+0x1754>
   12eb8:	b	12e50 <fftwf_malloc@plt+0x1670>
   12ebc:	mov	r2, #5
   12ec0:	ldr	r1, [pc, #112]	; 12f38 <fftwf_malloc@plt+0x1758>
   12ec4:	mov	r0, #0
   12ec8:	ldr	r5, [r7, #188]	; 0xbc
   12ecc:	bl	11588 <dcgettext@plt>
   12ed0:	str	fp, [sp]
   12ed4:	b	12e60 <fftwf_malloc@plt+0x1680>
   12ed8:	mov	r2, #5
   12edc:	ldr	r1, [pc, #88]	; 12f3c <fftwf_malloc@plt+0x175c>
   12ee0:	mov	r0, r6
   12ee4:	ldr	r4, [r7, #188]	; 0xbc
   12ee8:	bl	11588 <dcgettext@plt>
   12eec:	ldr	r3, [r7, #16]
   12ef0:	mov	r1, #1
   12ef4:	mov	r2, r0
   12ef8:	mov	r0, r4
   12efc:	bl	116cc <__fprintf_chk@plt>
   12f00:	mvn	r0, #21
   12f04:	b	12d90 <fftwf_malloc@plt+0x15b0>
   12f08:	bl	116c0 <__stack_chk_fail@plt>
   12f0c:	andeq	r8, r2, r8, ror sp
   12f10:			; <UNDEFINED> instruction: 0x46464952
   12f14:	rsbscs	r6, r4, r6, ror #26
   12f18:	cmnvs	r4, r4, ror #2
   12f1c:	andeq	r7, r1, r8, ror #9
   12f20:	andeq	r7, r1, r0, lsl #10
   12f24:	andeq	r7, r1, r8, lsr #9
   12f28:	andeq	r7, r1, r4, ror #8
   12f2c:	andeq	r7, r1, r0, lsl #9
   12f30:	andeq	r7, r1, r8, asr #8
   12f34:	andeq	r7, r1, ip, lsr #8
   12f38:	andeq	r7, r1, r8, lsl #9
   12f3c:	andeq	r7, r1, r8, asr #9
   12f40:	ldrh	ip, [r1, #16]
   12f44:	push	{r4, lr}
   12f48:	ldrh	lr, [r1, #4]
   12f4c:	ldr	r4, [r1, #12]
   12f50:	ldr	r3, [r1, #8]
   12f54:	ldr	r1, [r1]
   12f58:	smulbb	r2, lr, ip
   12f5c:	mul	r3, r4, r3
   12f60:	ldr	r4, [pc, #96]	; 12fc8 <fftwf_malloc@plt+0x17e8>
   12f64:	uxth	r2, r2
   12f68:	lsl	ip, ip, #3
   12f6c:	str	r4, [r0]
   12f70:	sub	r4, r4, #15728640	; 0xf00000
   12f74:	sub	r4, r4, #2032	; 0x7f0
   12f78:	strh	ip, [r0, #34]	; 0x22
   12f7c:	mov	ip, #16
   12f80:	sub	r4, r4, #11
   12f84:	strh	lr, [r0, #22]
   12f88:	str	ip, [r0, #16]
   12f8c:	mul	lr, r1, r2
   12f90:	mov	ip, #1
   12f94:	str	r4, [r0, #8]
   12f98:	strh	ip, [r0, #20]
   12f9c:	ldr	r4, [pc, #40]	; 12fcc <fftwf_malloc@plt+0x17ec>
   12fa0:	ldr	ip, [pc, #40]	; 12fd0 <fftwf_malloc@plt+0x17f0>
   12fa4:	strh	r2, [r0, #32]
   12fa8:	add	r2, r3, #36	; 0x24
   12fac:	str	r4, [r0, #12]
   12fb0:	str	lr, [r0, #28]
   12fb4:	str	r1, [r0, #24]
   12fb8:	str	r3, [r0, #40]	; 0x28
   12fbc:	str	r2, [r0, #4]
   12fc0:	str	ip, [r0, #36]	; 0x24
   12fc4:	pop	{r4, pc}
   12fc8:			; <UNDEFINED> instruction: 0x46464952
   12fcc:	rsbscs	r6, r4, r6, ror #26
   12fd0:	cmnvs	r4, r4, ror #2
   12fd4:	push	{r4, r5, r6, r7, r8, lr}
   12fd8:	mov	r3, r0
   12fdc:	mov	r5, r0
   12fe0:	mov	r4, r1
   12fe4:	mov	r0, r1
   12fe8:	mov	r7, r2
   12fec:	mov	r1, #1
   12ff0:	mov	r2, #12
   12ff4:	bl	11660 <fwrite@plt>
   12ff8:	cmp	r0, #12
   12ffc:	bne	13048 <fftwf_malloc@plt+0x1868>
   13000:	mov	r3, r5
   13004:	mov	r2, #24
   13008:	mov	r1, #1
   1300c:	add	r0, r4, #12
   13010:	bl	11660 <fwrite@plt>
   13014:	cmp	r0, #24
   13018:	mov	r6, r0
   1301c:	bne	1307c <fftwf_malloc@plt+0x189c>
   13020:	add	r0, r4, #36	; 0x24
   13024:	mov	r3, r5
   13028:	mov	r2, #8
   1302c:	mov	r1, #1
   13030:	bl	11660 <fwrite@plt>
   13034:	cmp	r0, #8
   13038:	mov	r4, r0
   1303c:	bne	1308c <fftwf_malloc@plt+0x18ac>
   13040:	mov	r0, #0
   13044:	pop	{r4, r5, r6, r7, r8, pc}
   13048:	ldr	r4, [r7, #188]	; 0xbc
   1304c:	ldr	r1, [pc, #104]	; 130bc <fftwf_malloc@plt+0x18dc>
   13050:	mov	r6, r0
   13054:	mov	r2, #5
   13058:	mov	r0, #0
   1305c:	bl	11588 <dcgettext@plt>
   13060:	mov	r3, r6
   13064:	mov	r1, #1
   13068:	mov	r2, r0
   1306c:	mov	r0, r4
   13070:	bl	116cc <__fprintf_chk@plt>
   13074:	mvn	r0, #4
   13078:	pop	{r4, r5, r6, r7, r8, pc}
   1307c:	ldr	r4, [r7, #188]	; 0xbc
   13080:	mov	r2, #5
   13084:	ldr	r1, [pc, #52]	; 130c0 <fftwf_malloc@plt+0x18e0>
   13088:	b	13058 <fftwf_malloc@plt+0x1878>
   1308c:	mov	r2, #5
   13090:	ldr	r1, [pc, #44]	; 130c4 <fftwf_malloc@plt+0x18e4>
   13094:	mov	r0, #0
   13098:	ldr	r5, [r7, #188]	; 0xbc
   1309c:	bl	11588 <dcgettext@plt>
   130a0:	mov	r3, r4
   130a4:	mov	r1, #1
   130a8:	mov	r2, r0
   130ac:	mov	r0, r5
   130b0:	bl	116cc <__fprintf_chk@plt>
   130b4:	mvn	r0, #4
   130b8:	pop	{r4, r5, r6, r7, r8, pc}
   130bc:	andeq	r7, r1, r4, lsl r5
   130c0:	andeq	r7, r1, r4, lsr r5
   130c4:	andeq	r7, r1, r4, asr r5
   130c8:	push	{r4, r5, r6, lr}
   130cc:	mov	r4, r0
   130d0:	ldrh	lr, [r0, #4]
   130d4:	ldrh	r3, [r0, #16]
   130d8:	ldr	ip, [r0]
   130dc:	sub	sp, sp, #48	; 0x30
   130e0:	ldr	r5, [pc, #164]	; 1318c <fftwf_malloc@plt+0x19ac>
   130e4:	smulbb	r0, lr, r3
   130e8:	str	r2, [sp, #40]	; 0x28
   130ec:	add	r2, r2, #36	; 0x24
   130f0:	uxth	r0, r0
   130f4:	str	r2, [sp, #4]
   130f8:	mul	r2, ip, r0
   130fc:	lsl	r3, r3, #3
   13100:	strh	r3, [sp, #34]	; 0x22
   13104:	ldr	r3, [pc, #132]	; 13190 <fftwf_malloc@plt+0x19b0>
   13108:	str	r2, [sp, #28]
   1310c:	ldr	r2, [pc, #128]	; 13194 <fftwf_malloc@plt+0x19b4>
   13110:	str	r3, [sp, #8]
   13114:	add	r3, r3, #268435469	; 0x1000000d
   13118:	str	r2, [sp]
   1311c:	add	r3, r3, #202375168	; 0xc100000
   13120:	ldr	r2, [pc, #112]	; 13198 <fftwf_malloc@plt+0x19b8>
   13124:	mov	r6, r1
   13128:	add	r3, r3, #925696	; 0xe2000
   1312c:	ldr	r1, [r5]
   13130:	strh	r0, [sp, #32]
   13134:	str	r2, [sp, #12]
   13138:	mov	r0, r6
   1313c:	mov	r2, #16
   13140:	str	r3, [sp, #36]	; 0x24
   13144:	mov	r3, #1
   13148:	strh	r3, [sp, #20]
   1314c:	strh	lr, [sp, #22]
   13150:	str	ip, [sp, #24]
   13154:	str	r1, [sp, #44]	; 0x2c
   13158:	str	r2, [sp, #16]
   1315c:	bl	11480 <rewind@plt>
   13160:	mov	r2, r4
   13164:	mov	r0, r6
   13168:	mov	r1, sp
   1316c:	bl	12fd4 <fftwf_malloc@plt+0x17f4>
   13170:	ldr	r2, [sp, #44]	; 0x2c
   13174:	ldr	r3, [r5]
   13178:	cmp	r2, r3
   1317c:	bne	13188 <fftwf_malloc@plt+0x19a8>
   13180:	add	sp, sp, #48	; 0x30
   13184:	pop	{r4, r5, r6, pc}
   13188:	bl	116c0 <__stack_chk_fail@plt>
   1318c:	andeq	r8, r2, r8, ror sp
   13190:	ldrbmi	r4, [r6, #-343]	; 0xfffffea9
   13194:			; <UNDEFINED> instruction: 0x46464952
   13198:	rsbscs	r6, r4, r6, ror #26
   1319c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   131a0:	mov	r9, r1
   131a4:	ldr	r1, [r0, #80]	; 0x50
   131a8:	mov	r6, r0
   131ac:	cmp	r1, #0
   131b0:	beq	13228 <fftwf_malloc@plt+0x1a48>
   131b4:	mov	r3, #0
   131b8:	ldr	r8, [pc, #320]	; 13300 <fftwf_malloc@plt+0x1b20>
   131bc:	mov	r7, r2
   131c0:	mov	r4, r3
   131c4:	str	r3, [r8]
   131c8:	ldr	r3, [r6, #180]	; 0xb4
   131cc:	sub	r2, r7, r4
   131d0:	add	r0, r9, r4
   131d4:	mov	r1, #1
   131d8:	bl	11738 <fread@plt>
   131dc:	subs	r5, r0, #0
   131e0:	beq	13210 <fftwf_malloc@plt+0x1a30>
   131e4:	ldr	r4, [r8]
   131e8:	sub	r3, r7, r4
   131ec:	cmp	r3, r5
   131f0:	ble	13270 <fftwf_malloc@plt+0x1a90>
   131f4:	ldr	r0, [r6, #180]	; 0xb4
   131f8:	bl	1175c <ferror@plt>
   131fc:	add	r4, r4, r5
   13200:	cmp	r0, #0
   13204:	bne	13278 <fftwf_malloc@plt+0x1a98>
   13208:	str	r4, [r8]
   1320c:	b	131c8 <fftwf_malloc@plt+0x19e8>
   13210:	ldr	r0, [r6, #180]	; 0xb4
   13214:	bl	11624 <feof@plt>
   13218:	cmp	r0, #0
   1321c:	bne	132d4 <fftwf_malloc@plt+0x1af4>
   13220:	ldr	r4, [r8]
   13224:	b	131c8 <fftwf_malloc@plt+0x19e8>
   13228:	mov	r4, r3
   1322c:	ldr	r3, [r0, #48]	; 0x30
   13230:	cmp	r3, #0
   13234:	beq	13248 <fftwf_malloc@plt+0x1a68>
   13238:	ldr	r2, [pc, #192]	; 13300 <fftwf_malloc@plt+0x1b20>
   1323c:	ldr	r2, [r2]
   13240:	cmp	r3, r2
   13244:	blt	132cc <fftwf_malloc@plt+0x1aec>
   13248:	mov	r2, r9
   1324c:	mov	r0, r6
   13250:	mov	r1, r4
   13254:	bl	134cc <fftwf_malloc@plt+0x1cec>
   13258:	cmp	r0, #0
   1325c:	ldreq	r2, [pc, #156]	; 13300 <fftwf_malloc@plt+0x1b20>
   13260:	ldreq	r3, [r2]
   13264:	addeq	r3, r3, r4
   13268:	streq	r3, [r2]
   1326c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13270:	mov	r0, #0
   13274:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13278:	mov	r2, #5
   1327c:	ldr	r1, [pc, #128]	; 13304 <fftwf_malloc@plt+0x1b24>
   13280:	mov	r0, #0
   13284:	ldr	r4, [r6, #188]	; 0xbc
   13288:	bl	11588 <dcgettext@plt>
   1328c:	mov	r1, #1
   13290:	mov	r2, r0
   13294:	mov	r0, r4
   13298:	bl	116cc <__fprintf_chk@plt>
   1329c:	mov	r2, #5
   132a0:	ldr	r1, [pc, #96]	; 13308 <fftwf_malloc@plt+0x1b28>
   132a4:	mov	r0, #0
   132a8:	ldr	r4, [r6, #188]	; 0xbc
   132ac:	bl	11588 <dcgettext@plt>
   132b0:	mov	r3, r5
   132b4:	mov	r1, #1
   132b8:	mov	r2, r0
   132bc:	mov	r0, r4
   132c0:	bl	116cc <__fprintf_chk@plt>
   132c4:	mvn	r0, #4
   132c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   132cc:	mov	r0, #1
   132d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   132d4:	mov	r0, r5
   132d8:	mov	r2, #5
   132dc:	ldr	r1, [pc, #40]	; 1330c <fftwf_malloc@plt+0x1b2c>
   132e0:	ldr	r4, [r6, #184]	; 0xb8
   132e4:	bl	11588 <dcgettext@plt>
   132e8:	mov	r1, #1
   132ec:	mov	r2, r0
   132f0:	mov	r0, r4
   132f4:	bl	116cc <__fprintf_chk@plt>
   132f8:	mov	r0, #1
   132fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13300:	andeq	r9, r2, r0, asr r0
   13304:	andeq	r7, r1, r4, lsl #11
   13308:	muleq	r1, r4, fp
   1330c:	andeq	r7, r1, r0, ror r5
   13310:	cmp	r0, #3
   13314:	push	{r4, lr}
   13318:	bhi	13370 <fftwf_malloc@plt+0x1b90>
   1331c:	ldr	r1, [pc, #116]	; 13398 <fftwf_malloc@plt+0x1bb8>
   13320:	vldr	d5, [pc, #104]	; 13390 <fftwf_malloc@plt+0x1bb0>
   13324:	add	r0, r1, r0, lsl #2
   13328:	ldr	r1, [sp, #8]
   1332c:	vldr	s14, [r0, #16]
   13330:	vldr	s13, [r0]
   13334:	mul	r3, r3, r1
   13338:	vcvt.f64.s32	d7, s14
   1333c:	cmp	r3, #0
   13340:	addgt	r3, r2, r3, lsl #2
   13344:	vmul.f64	d7, d7, d5
   13348:	vcvt.f32.f64	s14, d7
   1334c:	ble	13368 <fftwf_malloc@plt+0x1b88>
   13350:	vldr	s15, [r2]
   13354:	vmov.f32	s12, s13
   13358:	vmla.f32	s12, s14, s15
   1335c:	vstmia	r2!, {s12}
   13360:	cmp	r2, r3
   13364:	bne	13350 <fftwf_malloc@plt+0x1b70>
   13368:	mov	r0, #0
   1336c:	pop	{r4, pc}
   13370:	mov	r3, r0
   13374:	ldr	r2, [pc, #32]	; 1339c <fftwf_malloc@plt+0x1bbc>
   13378:	ldr	r0, [r1]
   1337c:	mov	r1, #1
   13380:	bl	116cc <__fprintf_chk@plt>
   13384:	mvn	r0, #21
   13388:	pop	{r4, pc}
   1338c:	nop			; (mov r0, r0)
   13390:	strbtvs	r6, [r6], -r6, ror #12
   13394:	svccc	0x00ee6666
   13398:	muleq	r1, r4, r5
   1339c:			; <UNDEFINED> instruction: 0x000175b4
   133a0:	vdiv.f32	s14, s1, s2
   133a4:	vldr	s15, [pc, #156]	; 13448 <fftwf_malloc@plt+0x1c68>
   133a8:	vldr	d6, [pc, #144]	; 13440 <fftwf_malloc@plt+0x1c60>
   133ac:	vmul.f32	s15, s2, s15
   133b0:	vcmpe.f32	s15, s1
   133b4:	vmrs	APSR_nzcv, fpscr
   133b8:	vadd.f32	s14, s14, s14
   133bc:	vcvt.f64.f32	d7, s14
   133c0:	vmul.f64	d7, d7, d6
   133c4:	bls	13434 <fftwf_malloc@plt+0x1c54>
   133c8:	vcvt.f32.f64	s14, d7
   133cc:	push	{r4, r5, r6, r7, r8, r9, lr}
   133d0:	sub	sp, sp, #20
   133d4:	mov	r4, r0
   133d8:	vmov	r5, s0
   133dc:	vmov	r6, s1
   133e0:	mov	r1, sp
   133e4:	add	r0, sp, #8
   133e8:	vcvt.f64.f32	d0, s14
   133ec:	vmov	r7, s2
   133f0:	bl	114ec <sincos@plt>
   133f4:	vmov	s15, r5
   133f8:	ldrd	r0, [sp]
   133fc:	ldrd	r2, [sp, #8]
   13400:	mov	r8, #0
   13404:	vcvt.f64.f32	d7, s15
   13408:	mov	r9, #0
   1340c:	strd	r0, [r4, #16]
   13410:	str	r5, [r4, #40]	; 0x28
   13414:	mov	r0, #0
   13418:	str	r6, [r4, #32]
   1341c:	str	r7, [r4, #36]	; 0x24
   13420:	strd	r8, [r4]
   13424:	vstr	d7, [r4, #8]
   13428:	strd	r2, [r4, #24]
   1342c:	add	sp, sp, #20
   13430:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13434:	mvn	r0, #0
   13438:	bx	lr
   1343c:	nop			; (mov r0, r0)
   13440:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   13444:	strdmi	r2, [r9], -fp
   13448:	svccc	0x00000000
   1344c:	vldr	d7, [r0, #8]
   13450:	vldr	d3, [r0, #16]
   13454:	vldr	d4, [r0, #24]
   13458:	vldr	d5, [r0]
   1345c:	vmul.f64	d6, d4, d7
   13460:	vmul.f64	d7, d3, d7
   13464:	vcvt.f32.f64	s0, d5
   13468:	vnmls.f64	d6, d3, d5
   1346c:	vmla.f64	d7, d4, d5
   13470:	vstr	d6, [r0]
   13474:	vstr	d7, [r0, #8]
   13478:	bx	lr
   1347c:	cmp	r2, #0
   13480:	bxle	lr
   13484:	vldr	d4, [r0, #16]
   13488:	vldr	d5, [r0, #24]
   1348c:	vldr	d6, [r0]
   13490:	vldr	d7, [r0, #8]
   13494:	mov	r3, #0
   13498:	vmul.f64	d3, d7, d5
   1349c:	add	r3, r3, #1
   134a0:	vmul.f64	d7, d7, d4
   134a4:	cmp	r2, r3
   134a8:	vcvt.f32.f64	s5, d6
   134ac:	vnmls.f64	d3, d6, d4
   134b0:	vmla.f64	d7, d6, d5
   134b4:	vstmia	r1!, {s5}
   134b8:	vmov.f64	d6, d3
   134bc:	bne	13498 <fftwf_malloc@plt+0x1cb8>
   134c0:	vstr	d3, [r0]
   134c4:	vstr	d7, [r0, #8]
   134c8:	bx	lr
   134cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134d0:	vpush	{d8}
   134d4:	ldr	r5, [r0, #4]
   134d8:	mov	r6, r0
   134dc:	mov	r4, r1
   134e0:	mul	sl, r1, r5
   134e4:	sub	sp, sp, #20
   134e8:	lsl	sl, sl, #2
   134ec:	mov	r0, sl
   134f0:	str	r2, [sp, #8]
   134f4:	bl	116b4 <malloc@plt>
   134f8:	subs	r7, r0, #0
   134fc:	beq	136bc <fftwf_malloc@plt+0x1edc>
   13500:	cmp	r5, #0
   13504:	ble	135b0 <fftwf_malloc@plt+0x1dd0>
   13508:	vldr	s16, [pc, #456]	; 136d8 <fftwf_malloc@plt+0x1ef8>
   1350c:	lsl	r2, r4, #2
   13510:	ldr	r8, [pc, #452]	; 136dc <fftwf_malloc@plt+0x1efc>
   13514:	mov	sl, r7
   13518:	str	r7, [sp, #12]
   1351c:	add	fp, r6, #40	; 0x28
   13520:	mov	r9, #0
   13524:	mov	r7, r2
   13528:	vldmia	fp!, {s1}
   1352c:	vldr	s15, [r8, #32]
   13530:	vcmp.f32	s15, s1
   13534:	vmrs	APSR_nzcv, fpscr
   13538:	bne	13688 <fftwf_malloc@plt+0x1ea8>
   1353c:	cmp	r4, #0
   13540:	mov	r1, sl
   13544:	ble	1358c <fftwf_malloc@plt+0x1dac>
   13548:	vldr	d4, [r8, #16]
   1354c:	vldr	d5, [r8, #24]
   13550:	vldr	d6, [r8]
   13554:	vldr	d7, [r8, #8]
   13558:	mov	r3, #0
   1355c:	vmul.f64	d3, d5, d7
   13560:	add	r3, r3, #1
   13564:	vmul.f64	d7, d4, d7
   13568:	cmp	r4, r3
   1356c:	vcvt.f32.f64	s5, d6
   13570:	vnmls.f64	d3, d4, d6
   13574:	vmla.f64	d7, d5, d6
   13578:	vstmia	r1!, {s5}
   1357c:	vmov.f64	d6, d3
   13580:	bne	1355c <fftwf_malloc@plt+0x1d7c>
   13584:	vstr	d3, [r8]
   13588:	vstr	d7, [r8, #8]
   1358c:	ldr	r5, [r6, #4]
   13590:	add	r9, r9, #1
   13594:	cmp	r5, r9
   13598:	add	r8, r8, #48	; 0x30
   1359c:	add	sl, sl, r7
   135a0:	bgt	13528 <fftwf_malloc@plt+0x1d48>
   135a4:	mul	sl, r4, r5
   135a8:	ldr	r7, [sp, #12]
   135ac:	lsl	sl, sl, #2
   135b0:	mov	r0, sl
   135b4:	bl	116b4 <malloc@plt>
   135b8:	add	r8, r6, #188	; 0xbc
   135bc:	subs	r9, r0, #0
   135c0:	beq	136a0 <fftwf_malloc@plt+0x1ec0>
   135c4:	mov	r2, sl
   135c8:	mov	r1, r7
   135cc:	bl	115e8 <memcpy@plt>
   135d0:	cmp	r4, #0
   135d4:	ble	1362c <fftwf_malloc@plt+0x1e4c>
   135d8:	rsb	sl, r5, r5, lsl #30
   135dc:	lsl	fp, r5, #2
   135e0:	lsl	sl, sl, #2
   135e4:	add	r1, r7, fp
   135e8:	mov	ip, r9
   135ec:	lsl	lr, r4, #2
   135f0:	mov	r0, #0
   135f4:	cmp	r5, #0
   135f8:	addgt	r2, r1, sl
   135fc:	movgt	r3, ip
   13600:	ble	13618 <fftwf_malloc@plt+0x1e38>
   13604:	vldr	s15, [r3]
   13608:	add	r3, r3, lr
   1360c:	vstmia	r2!, {s15}
   13610:	cmp	r1, r2
   13614:	bne	13604 <fftwf_malloc@plt+0x1e24>
   13618:	add	r0, r0, #1
   1361c:	cmp	r4, r0
   13620:	add	ip, ip, #4
   13624:	add	r1, r1, fp
   13628:	bne	135f4 <fftwf_malloc@plt+0x1e14>
   1362c:	mov	r0, r9
   13630:	bl	11570 <free@plt>
   13634:	ldr	r3, [r6, #4]
   13638:	mov	r1, r8
   1363c:	str	r3, [sp]
   13640:	mov	r2, r7
   13644:	mov	r3, r4
   13648:	ldr	r0, [r6, #20]
   1364c:	bl	13310 <fftwf_malloc@plt+0x1b30>
   13650:	subs	r5, r0, #0
   13654:	bne	13670 <fftwf_malloc@plt+0x1e90>
   13658:	mov	r2, r4
   1365c:	ldr	r1, [sp, #8]
   13660:	ldr	r4, [r6, #196]	; 0xc4
   13664:	ldr	r3, [r6, #4]
   13668:	mov	r0, r7
   1366c:	blx	r4
   13670:	mov	r0, r7
   13674:	bl	11570 <free@plt>
   13678:	mov	r0, r5
   1367c:	add	sp, sp, #20
   13680:	vpop	{d8}
   13684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13688:	vldr	s15, [r6]
   1368c:	vmov.f32	s0, s16
   13690:	mov	r0, r8
   13694:	vcvt.f32.u32	s2, s15
   13698:	bl	133a0 <fftwf_malloc@plt+0x1bc0>
   1369c:	b	1353c <fftwf_malloc@plt+0x1d5c>
   136a0:	ldr	r3, [r6, #188]	; 0xbc
   136a4:	mov	r2, #19
   136a8:	mov	r1, #1
   136ac:	ldr	r0, [pc, #44]	; 136e0 <fftwf_malloc@plt+0x1f00>
   136b0:	bl	11660 <fwrite@plt>
   136b4:	mvn	r5, #11
   136b8:	b	13670 <fftwf_malloc@plt+0x1e90>
   136bc:	ldr	r3, [r6, #188]	; 0xbc
   136c0:	mov	r2, #19
   136c4:	mov	r1, #1
   136c8:	ldr	r0, [pc, #16]	; 136e0 <fftwf_malloc@plt+0x1f00>
   136cc:	bl	11660 <fwrite@plt>
   136d0:	mvn	r5, #11
   136d4:	b	13678 <fftwf_malloc@plt+0x1e98>
   136d8:	svccc	0x00800000
   136dc:	andeq	r9, r2, r8, asr r0
   136e0:	andeq	r7, r1, ip, asr #11
   136e4:	push	{r4, r5, r6, r7, lr}
   136e8:	vldr	s15, [r0]
   136ec:	ldr	r6, [pc, #188]	; 137b0 <fftwf_malloc@plt+0x1fd0>
   136f0:	sub	sp, sp, #68	; 0x44
   136f4:	vmov.f32	s1, s0
   136f8:	ldr	r3, [r6]
   136fc:	mov	r5, r0
   13700:	vcvt.f32.u32	s2, s15
   13704:	vldr	s0, [pc, #160]	; 137ac <fftwf_malloc@plt+0x1fcc>
   13708:	add	r0, sp, #8
   1370c:	mov	r7, r1
   13710:	mov	r4, r2
   13714:	str	r3, [sp, #60]	; 0x3c
   13718:	bl	133a0 <fftwf_malloc@plt+0x1bc0>
   1371c:	cmp	r0, #0
   13720:	blt	13790 <fftwf_malloc@plt+0x1fb0>
   13724:	cmp	r4, #0
   13728:	ble	13774 <fftwf_malloc@plt+0x1f94>
   1372c:	vldr	d4, [sp, #24]
   13730:	vldr	d5, [sp, #32]
   13734:	vldr	d6, [sp, #8]
   13738:	vldr	d7, [sp, #16]
   1373c:	mov	ip, r7
   13740:	mov	r0, #0
   13744:	vmul.f64	d3, d5, d7
   13748:	add	r0, r0, #1
   1374c:	vmul.f64	d7, d4, d7
   13750:	cmp	r4, r0
   13754:	vcvt.f32.f64	s5, d6
   13758:	vnmls.f64	d3, d4, d6
   1375c:	vmla.f64	d7, d5, d6
   13760:	vstmia	ip!, {s5}
   13764:	vmov.f64	d6, d3
   13768:	bne	13744 <fftwf_malloc@plt+0x1f64>
   1376c:	vstr	d3, [sp, #8]
   13770:	vstr	d7, [sp, #16]
   13774:	mov	r1, #1
   13778:	str	r1, [sp]
   1377c:	mov	r3, r4
   13780:	mov	r2, r7
   13784:	add	r1, r5, #188	; 0xbc
   13788:	ldr	r0, [r5, #20]
   1378c:	bl	13310 <fftwf_malloc@plt+0x1b30>
   13790:	ldr	r2, [sp, #60]	; 0x3c
   13794:	ldr	r3, [r6]
   13798:	cmp	r2, r3
   1379c:	bne	137a8 <fftwf_malloc@plt+0x1fc8>
   137a0:	add	sp, sp, #68	; 0x44
   137a4:	pop	{r4, r5, r6, r7, pc}
   137a8:	bl	116c0 <__stack_chk_fail@plt>
   137ac:	svccc	0x00800000
   137b0:	andeq	r8, r2, r8, ror sp
   137b4:	ldr	r2, [r0]
   137b8:	mov	r3, #0
   137bc:	mov	r1, #1
   137c0:	add	r2, r2, r2, lsl #2
   137c4:	mov	ip, #0
   137c8:	add	r2, r2, r2, lsl #2
   137cc:	str	ip, [r0, #152]	; 0x98
   137d0:	str	r1, [r0, #116]	; 0x74
   137d4:	str	r2, [r0, #8]
   137d8:	str	r1, [r0, #120]	; 0x78
   137dc:	str	r3, [r0, #144]	; 0x90
   137e0:	str	r3, [r0, #148]	; 0x94
   137e4:	str	r3, [r0, #156]	; 0x9c
   137e8:	str	r3, [r0, #160]	; 0xa0
   137ec:	strh	r3, [r0, #164]	; 0xa4
   137f0:	strb	r3, [r0, #166]	; 0xa6
   137f4:	str	r3, [r0, #168]	; 0xa8
   137f8:	bx	lr
   137fc:	push	{r4, r5, r6, r7, r8, lr}
   13800:	vpush	{d8}
   13804:	ldr	r3, [r0, #120]	; 0x78
   13808:	mov	r4, r0
   1380c:	cmp	r3, #2
   13810:	sub	sp, sp, #8
   13814:	beq	13838 <fftwf_malloc@plt+0x2058>
   13818:	cmp	r3, #3
   1381c:	beq	13a00 <fftwf_malloc@plt+0x2220>
   13820:	cmp	r3, #1
   13824:	beq	13928 <fftwf_malloc@plt+0x2148>
   13828:	mov	r0, #0
   1382c:	add	sp, sp, #8
   13830:	vpop	{d8}
   13834:	pop	{r4, r5, r6, r7, r8, pc}
   13838:	ldr	r7, [r0, #4]
   1383c:	cmp	r2, #0
   13840:	ldr	r5, [r0, #116]	; 0x74
   13844:	vmov	s15, r7
   13848:	ldr	r6, [r0, #156]	; 0x9c
   1384c:	vcvt.f32.s32	s12, s15
   13850:	vmov	s15, r2
   13854:	vcvt.f32.s32	s13, s15
   13858:	beq	13b58 <fftwf_malloc@plt+0x2378>
   1385c:	vldr	s14, [pc, #844]	; 13bb0 <fftwf_malloc@plt+0x23d0>
   13860:	lsl	r8, r7, #1
   13864:	mov	r0, r1
   13868:	mov	lr, r2
   1386c:	cmp	r7, #0
   13870:	sub	lr, lr, #1
   13874:	ble	1389c <fftwf_malloc@plt+0x20bc>
   13878:	add	ip, r0, r8
   1387c:	ldrsh	r3, [r0], #2
   13880:	cmp	r3, #0
   13884:	rsblt	r3, r3, #0
   13888:	cmp	ip, r0
   1388c:	vmov	s15, r3
   13890:	vcvt.f32.s32	s15, s15
   13894:	vadd.f32	s14, s14, s15
   13898:	bne	1387c <fftwf_malloc@plt+0x209c>
   1389c:	cmp	lr, #0
   138a0:	bne	1386c <fftwf_malloc@plt+0x208c>
   138a4:	vdiv.f32	s11, s14, s12
   138a8:	vdiv.f32	s15, s11, s13
   138ac:	vcvt.s32.f32	s15, s15
   138b0:	vmov	r3, s15
   138b4:	cmp	r3, r6
   138b8:	ble	13a38 <fftwf_malloc@plt+0x2258>
   138bc:	cmp	r2, #0
   138c0:	ble	138fc <fftwf_malloc@plt+0x211c>
   138c4:	ldrsh	r3, [r1]
   138c8:	cmp	r3, r6
   138cc:	bgt	138fc <fftwf_malloc@plt+0x211c>
   138d0:	uxth	r7, r7
   138d4:	b	138e0 <fftwf_malloc@plt+0x2100>
   138d8:	cmp	r3, r6
   138dc:	bgt	138fc <fftwf_malloc@plt+0x211c>
   138e0:	ldrh	r3, [r1, #2]!
   138e4:	add	lr, lr, #1
   138e8:	cmp	r2, lr
   138ec:	add	r3, r7, r3
   138f0:	sxth	r3, r3
   138f4:	strh	r3, [r1]
   138f8:	bne	138d8 <fftwf_malloc@plt+0x20f8>
   138fc:	ldr	r3, [r4, #148]	; 0x94
   13900:	add	lr, lr, r3
   13904:	cmp	r2, lr
   13908:	str	lr, [r4, #148]	; 0x94
   1390c:	blt	13aa0 <fftwf_malloc@plt+0x22c0>
   13910:	mov	r3, #3
   13914:	mov	r0, #0
   13918:	str	r3, [r4, #120]	; 0x78
   1391c:	add	sp, sp, #8
   13920:	vpop	{d8}
   13924:	pop	{r4, r5, r6, r7, r8, pc}
   13928:	cmp	r2, #0
   1392c:	vldr	s14, [pc, #636]	; 13bb0 <fftwf_malloc@plt+0x23d0>
   13930:	ldr	lr, [r0, #4]
   13934:	beq	13978 <fftwf_malloc@plt+0x2198>
   13938:	lsl	r5, lr, #1
   1393c:	mov	ip, r2
   13940:	cmp	lr, #0
   13944:	sub	ip, ip, #1
   13948:	ble	13970 <fftwf_malloc@plt+0x2190>
   1394c:	add	r0, r1, r5
   13950:	ldrsh	r3, [r1], #2
   13954:	cmp	r3, #0
   13958:	rsblt	r3, r3, #0
   1395c:	cmp	r1, r0
   13960:	vmov	s15, r3
   13964:	vcvt.f32.s32	s15, s15
   13968:	vadd.f32	s14, s14, s15
   1396c:	bne	13950 <fftwf_malloc@plt+0x2170>
   13970:	cmp	ip, #0
   13974:	bne	13940 <fftwf_malloc@plt+0x2160>
   13978:	vmov	s15, lr
   1397c:	vldr	s12, [r4, #152]	; 0x98
   13980:	ldr	r3, [r4, #148]	; 0x94
   13984:	ldr	r1, [r4]
   13988:	vcvt.f32.s32	s15, s15
   1398c:	add	r2, r2, r3
   13990:	cmp	r2, r1
   13994:	str	r2, [r4, #148]	; 0x94
   13998:	vdiv.f32	s13, s14, s15
   1399c:	vadd.f32	s14, s13, s12
   139a0:	vstr	s14, [r4, #152]	; 0x98
   139a4:	bcc	13828 <fftwf_malloc@plt+0x2048>
   139a8:	vmov	s15, r2
   139ac:	vldr	s16, [pc, #512]	; 13bb4 <fftwf_malloc@plt+0x23d4>
   139b0:	vcvt.f32.s32	s15, s15
   139b4:	vdiv.f32	s0, s14, s15
   139b8:	vdiv.f32	s0, s0, s16
   139bc:	bl	11690 <log10f@plt>
   139c0:	vldr	s1, [pc, #496]	; 13bb8 <fftwf_malloc@plt+0x23d8>
   139c4:	vldr	s15, [pc, #496]	; 13bbc <fftwf_malloc@plt+0x23dc>
   139c8:	vmla.f32	s15, s0, s1
   139cc:	vldr	s0, [pc, #492]	; 13bc0 <fftwf_malloc@plt+0x23e0>
   139d0:	vdiv.f32	s1, s15, s1
   139d4:	bl	1142c <powf@plt>
   139d8:	mov	r2, #0
   139dc:	mov	r1, #2
   139e0:	mov	r3, #0
   139e4:	str	r1, [r4, #120]	; 0x78
   139e8:	str	r2, [r4, #152]	; 0x98
   139ec:	str	r3, [r4, #148]	; 0x94
   139f0:	vmul.f32	s0, s0, s16
   139f4:	vcvt.s32.f32	s0, s0
   139f8:	vstr	s0, [r4, #156]	; 0x9c
   139fc:	b	13828 <fftwf_malloc@plt+0x2048>
   13a00:	ldr	r3, [r0, #148]	; 0x94
   13a04:	ldr	r1, [r0]
   13a08:	add	r2, r2, r3
   13a0c:	cmp	r2, r1
   13a10:	str	r2, [r0, #148]	; 0x94
   13a14:	bls	13828 <fftwf_malloc@plt+0x2048>
   13a18:	mov	r2, #0
   13a1c:	mov	r3, #1
   13a20:	str	r2, [r0, #148]	; 0x94
   13a24:	str	r3, [r0, #120]	; 0x78
   13a28:	mov	r0, #0
   13a2c:	add	sp, sp, #8
   13a30:	vpop	{d8}
   13a34:	pop	{r4, r5, r6, r7, r8, pc}
   13a38:	ldr	r3, [r4, #148]	; 0x94
   13a3c:	ldr	r1, [r4]
   13a40:	add	r2, r2, r3
   13a44:	cmp	r2, r1
   13a48:	str	r2, [r4, #148]	; 0x94
   13a4c:	bls	13828 <fftwf_malloc@plt+0x2048>
   13a50:	ldr	r3, [r4, #160]	; 0xa0
   13a54:	add	r3, r3, #1
   13a58:	cmp	r3, #5
   13a5c:	str	r3, [r4, #160]	; 0xa0
   13a60:	ble	13910 <fftwf_malloc@plt+0x2130>
   13a64:	ldr	r3, [r4, #188]	; 0xbc
   13a68:	mov	r2, #24
   13a6c:	mov	r1, #1
   13a70:	ldr	r0, [pc, #348]	; 13bd4 <fftwf_malloc@plt+0x23f4>
   13a74:	bl	11660 <fwrite@plt>
   13a78:	ldr	r3, [r4, #188]	; 0xbc
   13a7c:	mov	r2, #27
   13a80:	mov	r1, #1
   13a84:	ldr	r0, [pc, #332]	; 13bd8 <fftwf_malloc@plt+0x23f8>
   13a88:	bl	11660 <fwrite@plt>
   13a8c:	mvn	r2, #0
   13a90:	mov	r3, #0
   13a94:	str	r2, [r4, #120]	; 0x78
   13a98:	strb	r3, [r4, #164]	; 0xa4
   13a9c:	b	13828 <fftwf_malloc@plt+0x2048>
   13aa0:	vmov	s15, lr
   13aa4:	vldr	s14, [r4]
   13aa8:	vldr	s13, [pc, #276]	; 13bc4 <fftwf_malloc@plt+0x23e4>
   13aac:	add	lr, r4, r5, lsl #2
   13ab0:	vcvt.f32.s32	s15, s15
   13ab4:	vcvt.f32.u32	s14, s14
   13ab8:	ldr	r0, [r4, #184]	; 0xb8
   13abc:	mov	r3, r5
   13ac0:	ldr	r2, [pc, #276]	; 13bdc <fftwf_malloc@plt+0x23fc>
   13ac4:	mov	r1, #1
   13ac8:	vmul.f32	s15, s15, s13
   13acc:	vdiv.f32	s13, s15, s14
   13ad0:	vcvt.s32.f32	s15, s13
   13ad4:	vstr	s13, [lr, #120]	; 0x78
   13ad8:	vstr	s15, [sp]
   13adc:	bl	116cc <__fprintf_chk@plt>
   13ae0:	cmp	r5, #0
   13ae4:	ble	13b40 <fftwf_malloc@plt+0x2360>
   13ae8:	vldr	s12, [pc, #192]	; 13bb0 <fftwf_malloc@plt+0x23d0>
   13aec:	vldr	s14, [pc, #212]	; 13bc8 <fftwf_malloc@plt+0x23e8>
   13af0:	add	r3, r4, #124	; 0x7c
   13af4:	add	r2, r3, r5, lsl #2
   13af8:	vmov.f32	s13, s12
   13afc:	vldmia	r3!, {s15}
   13b00:	vcmp.f32	s15, s13
   13b04:	vadd.f32	s12, s12, s15
   13b08:	vmrs	APSR_nzcv, fpscr
   13b0c:	vcmp.f32	s15, s14
   13b10:	vmovgt.f32	s13, s15
   13b14:	vmrs	APSR_nzcv, fpscr
   13b18:	vmovmi.f32	s14, s15
   13b1c:	cmp	r2, r3
   13b20:	bne	13afc <fftwf_malloc@plt+0x231c>
   13b24:	vdiv.f32	s11, s13, s14
   13b28:	vldr	s15, [pc, #156]	; 13bcc <fftwf_malloc@plt+0x23ec>
   13b2c:	vcmpe.f32	s11, s15
   13b30:	vmrs	APSR_nzcv, fpscr
   13b34:	bgt	13a8c <fftwf_malloc@plt+0x22ac>
   13b38:	cmp	r5, #5
   13b3c:	beq	13b7c <fftwf_malloc@plt+0x239c>
   13b40:	ldr	r3, [r4, #116]	; 0x74
   13b44:	mov	r2, #3
   13b48:	add	r3, r3, #1
   13b4c:	str	r3, [r4, #116]	; 0x74
   13b50:	str	r2, [r4, #120]	; 0x78
   13b54:	b	13828 <fftwf_malloc@plt+0x2048>
   13b58:	vldr	s15, [pc, #80]	; 13bb0 <fftwf_malloc@plt+0x23d0>
   13b5c:	vdiv.f32	s14, s15, s12
   13b60:	vdiv.f32	s15, s14, s13
   13b64:	vcvt.s32.f32	s15, s15
   13b68:	vmov	r3, s15
   13b6c:	cmp	r3, r6
   13b70:	ble	13a38 <fftwf_malloc@plt+0x2258>
   13b74:	mov	lr, r2
   13b78:	b	138fc <fftwf_malloc@plt+0x211c>
   13b7c:	vldr	s14, [pc, #76]	; 13bd0 <fftwf_malloc@plt+0x23f0>
   13b80:	ldr	r2, [pc, #88]	; 13be0 <fftwf_malloc@plt+0x2400>
   13b84:	mov	r1, #1
   13b88:	ldr	r0, [r4, #184]	; 0xb8
   13b8c:	vdiv.f32	s15, s12, s14
   13b90:	vcvt.s32.f32	s15, s15
   13b94:	vmov	r3, s15
   13b98:	vstr	s15, [r4, #144]	; 0x90
   13b9c:	bl	116cc <__fprintf_chk@plt>
   13ba0:	mov	r3, #0
   13ba4:	str	r3, [r4, #120]	; 0x78
   13ba8:	strb	r3, [r4, #164]	; 0xa4
   13bac:	b	13828 <fftwf_malloc@plt+0x2048>
   13bb0:	andeq	r0, r0, r0
   13bb4:	ldrbtmi	pc, [pc], r0, lsl #28	; <UNPREDICTABLE>
   13bb8:	movmi	r0, r0
   13bbc:	orrmi	r0, r0, r0
   13bc0:			; <UNDEFINED> instruction: 0x41200000
   13bc4:	ldrbtmi	r0, [sl], #-0
   13bc8:	strbmi	r5, [r3, r0]
   13bcc:	andmi	r0, r0, r0
   13bd0:	adcmi	r0, r0, r0
   13bd4:	andeq	r7, r1, r4, lsr #12
   13bd8:	andeq	r7, r1, r0, asr #12
   13bdc:	andeq	r7, r1, r0, ror #11
   13be0:	andeq	r7, r1, r4, lsl #12
   13be4:	ldr	ip, [r0, #168]	; 0xa8
   13be8:	push	{r4, lr}
   13bec:	mul	ip, ip, r3
   13bf0:	ldr	lr, [r0]
   13bf4:	cmp	ip, lr, lsl #1
   13bf8:	ldr	ip, [r0, #120]	; 0x78
   13bfc:	bls	13c0c <fftwf_malloc@plt+0x242c>
   13c00:	ldrb	lr, [r0, #164]	; 0xa4
   13c04:	cmp	lr, #0
   13c08:	beq	13c24 <fftwf_malloc@plt+0x2444>
   13c0c:	cmp	ip, #2
   13c10:	beq	13c2c <fftwf_malloc@plt+0x244c>
   13c14:	mov	r0, r1
   13c18:	mov	r1, #0
   13c1c:	bl	1151c <memset@plt>
   13c20:	mov	ip, #0
   13c24:	mov	r0, ip
   13c28:	pop	{r4, pc}
   13c2c:	mov	r2, r1
   13c30:	pop	{r4, lr}
   13c34:	mov	r1, r3
   13c38:	b	134cc <fftwf_malloc@plt+0x1cec>
   13c3c:	cmp	r2, #0
   13c40:	bxle	lr
   13c44:	sub	r0, r0, #1
   13c48:	add	r2, r0, r2
   13c4c:	ldrb	r3, [r0, #1]!
   13c50:	cmp	r0, r2
   13c54:	vmov	s15, r3
   13c58:	vcvt.f32.u32	s15, s15
   13c5c:	vstmia	r1!, {s15}
   13c60:	bne	13c4c <fftwf_malloc@plt+0x246c>
   13c64:	bx	lr
   13c68:	cmp	r2, #0
   13c6c:	bxle	lr
   13c70:	sub	r0, r0, #2
   13c74:	add	r2, r0, r2, lsl #1
   13c78:	ldrsh	r3, [r0, #2]!
   13c7c:	cmp	r0, r2
   13c80:	vmov	s15, r3
   13c84:	vcvt.f32.s32	s15, s15
   13c88:	vstmia	r1!, {s15}
   13c8c:	bne	13c78 <fftwf_malloc@plt+0x2498>
   13c90:	bx	lr
   13c94:	cmp	r2, #0
   13c98:	bxle	lr
   13c9c:	add	r2, r2, r2, lsl #1
   13ca0:	push	{lr}		; (str lr, [sp, #-4]!)
   13ca4:	add	lr, r0, r2
   13ca8:	ldrb	r3, [r0, #1]
   13cac:	ldrb	ip, [r0, #2]
   13cb0:	ldrb	r2, [r0], #3
   13cb4:	lsl	r3, r3, #16
   13cb8:	orr	r3, r3, ip, lsl #24
   13cbc:	orr	r3, r3, r2, lsl #8
   13cc0:	cmp	lr, r0
   13cc4:	asr	r3, r3, #8
   13cc8:	vmov	s15, r3
   13ccc:	vcvt.f32.s32	s15, s15
   13cd0:	vstmia	r1!, {s15}
   13cd4:	bne	13ca8 <fftwf_malloc@plt+0x24c8>
   13cd8:	pop	{pc}		; (ldr pc, [sp], #4)
   13cdc:	cmp	r2, #0
   13ce0:	bxle	lr
   13ce4:	sub	r0, r0, #4
   13ce8:	add	r2, r0, r2, lsl #2
   13cec:	ldr	r3, [r0, #4]!
   13cf0:	cmp	r0, r2
   13cf4:	vmov	s15, r3
   13cf8:	vcvt.f32.s32	s15, s15
   13cfc:	vstmia	r1!, {s15}
   13d00:	bne	13cec <fftwf_malloc@plt+0x250c>
   13d04:	bx	lr
   13d08:	cmp	r2, #0
   13d0c:	bxle	lr
   13d10:	push	{r4, r5, r6, r7, lr}
   13d14:	rsb	r6, r3, r3, lsl #30
   13d18:	lsl	r7, r3, #2
   13d1c:	sub	r4, r1, #1
   13d20:	lsl	r6, r6, #2
   13d24:	add	lr, r0, r7
   13d28:	mov	r5, #0
   13d2c:	cmp	r3, #0
   13d30:	addgt	r0, lr, r6
   13d34:	movgt	ip, r4
   13d38:	ble	13d54 <fftwf_malloc@plt+0x2574>
   13d3c:	vldmia	r0!, {s15}
   13d40:	vcvt.u32.f32	s15, s15
   13d44:	cmp	r0, lr
   13d48:	vmov	r1, s15
   13d4c:	strb	r1, [ip, #1]!
   13d50:	bne	13d3c <fftwf_malloc@plt+0x255c>
   13d54:	add	r5, r5, #1
   13d58:	cmp	r2, r5
   13d5c:	add	r4, r4, r3
   13d60:	add	lr, lr, r7
   13d64:	bne	13d2c <fftwf_malloc@plt+0x254c>
   13d68:	pop	{r4, r5, r6, r7, pc}
   13d6c:	cmp	r2, #0
   13d70:	bxle	lr
   13d74:	push	{r4, r5, r6, r7, r8, lr}
   13d78:	rsb	r5, r3, r3, lsl #30
   13d7c:	lsl	r6, r3, #2
   13d80:	sub	lr, r1, #2
   13d84:	lsl	r5, r5, #2
   13d88:	add	ip, r0, r6
   13d8c:	lsl	r7, r3, #1
   13d90:	mov	r4, #0
   13d94:	cmp	r3, #0
   13d98:	addgt	r1, ip, r5
   13d9c:	movgt	r0, lr
   13da0:	ble	13dbc <fftwf_malloc@plt+0x25dc>
   13da4:	vldmia	r1!, {s15}
   13da8:	vcvt.s32.f32	s15, s15
   13dac:	cmp	r1, ip
   13db0:	vmov	r8, s15
   13db4:	strh	r8, [r0, #2]!
   13db8:	bne	13da4 <fftwf_malloc@plt+0x25c4>
   13dbc:	add	r4, r4, #1
   13dc0:	cmp	r2, r4
   13dc4:	add	lr, lr, r7
   13dc8:	add	ip, ip, r6
   13dcc:	bne	13d94 <fftwf_malloc@plt+0x25b4>
   13dd0:	pop	{r4, r5, r6, r7, r8, pc}
   13dd4:	cmp	r2, #0
   13dd8:	bxle	lr
   13ddc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13de0:	rsb	r8, r3, r3, lsl #30
   13de4:	lsl	r9, r3, #2
   13de8:	lsl	r8, r8, #2
   13dec:	add	r6, r0, r9
   13df0:	add	sl, r3, r3, lsl #1
   13df4:	mov	r7, #0
   13df8:	cmp	r3, #0
   13dfc:	addgt	lr, r6, r8
   13e00:	movgt	ip, r1
   13e04:	ble	13e34 <fftwf_malloc@plt+0x2654>
   13e08:	vldmia	lr!, {s15}
   13e0c:	add	ip, ip, #3
   13e10:	vcvt.s32.f32	s15, s15
   13e14:	cmp	lr, r6
   13e18:	vmov	r0, s15
   13e1c:	asr	r5, r0, #8
   13e20:	asr	r4, r0, #16
   13e24:	strb	r0, [ip, #-3]
   13e28:	strb	r5, [ip, #-2]
   13e2c:	strb	r4, [ip, #-1]
   13e30:	bne	13e08 <fftwf_malloc@plt+0x2628>
   13e34:	add	r7, r7, #1
   13e38:	cmp	r2, r7
   13e3c:	add	r1, r1, sl
   13e40:	add	r6, r6, r9
   13e44:	bne	13df8 <fftwf_malloc@plt+0x2618>
   13e48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e4c:	cmp	r2, #0
   13e50:	bxle	lr
   13e54:	push	{r4, r5, r6, r7, lr}
   13e58:	lsl	r6, r3, #2
   13e5c:	sub	r4, r1, r0
   13e60:	rsb	r5, r3, r3, lsl #30
   13e64:	sub	r4, r4, r6
   13e68:	sub	r4, r4, #4
   13e6c:	add	ip, r6, r0
   13e70:	lsl	r5, r5, #2
   13e74:	mov	lr, #0
   13e78:	cmp	r3, #0
   13e7c:	addgt	r1, ip, r5
   13e80:	addgt	r0, r4, ip
   13e84:	ble	13ea0 <fftwf_malloc@plt+0x26c0>
   13e88:	vldmia	r1!, {s15}
   13e8c:	vcvt.s32.f32	s15, s15
   13e90:	cmp	r1, ip
   13e94:	vmov	r7, s15
   13e98:	str	r7, [r0, #4]!
   13e9c:	bne	13e88 <fftwf_malloc@plt+0x26a8>
   13ea0:	add	lr, lr, #1
   13ea4:	cmp	r2, lr
   13ea8:	add	ip, ip, r6
   13eac:	bne	13e78 <fftwf_malloc@plt+0x2698>
   13eb0:	pop	{r4, r5, r6, r7, pc}
   13eb4:	andeq	r0, r0, r0
   13eb8:	push	{r4, r5, r6, r7, r8, lr}
   13ebc:	vpush	{d8-d12}
   13ec0:	vldr	d5, [pc, #568]	; 14100 <fftwf_malloc@plt+0x2920>
   13ec4:	vldr	s15, [pc, #588]	; 14118 <fftwf_malloc@plt+0x2938>
   13ec8:	vmov	s14, r3
   13ecc:	sub	sp, sp, #32
   13ed0:	mov	r4, r0
   13ed4:	ldr	r5, [sp, #96]	; 0x60
   13ed8:	vcvt.f32.s32	s21, s14
   13edc:	mov	r8, r1
   13ee0:	add	r5, r0, r5, lsl #2
   13ee4:	vmov	s22, r2
   13ee8:	vldr	s12, [r5, #40]	; 0x28
   13eec:	mov	r2, #5
   13ef0:	ldr	r1, [pc, #548]	; 1411c <fftwf_malloc@plt+0x293c>
   13ef4:	mov	r0, #0
   13ef8:	vcvt.f64.f32	d6, s12
   13efc:	vmov.f32	s25, s2
   13f00:	vmov.f32	s24, s1
   13f04:	vmov.f32	s23, s0
   13f08:	vmul.f32	s21, s21, s0
   13f0c:	ldr	r7, [r4, #184]	; 0xb8
   13f10:	str	r3, [sp, #28]
   13f14:	vldr	d9, [pc, #492]	; 14108 <fftwf_malloc@plt+0x2928>
   13f18:	vmul.f64	d6, d6, d5
   13f1c:	vcvt.f32.f64	s20, d6
   13f20:	vcmpe.f32	s20, s15
   13f24:	vmrs	APSR_nzcv, fpscr
   13f28:	vmovle.f32	s20, s15
   13f2c:	bl	11588 <dcgettext@plt>
   13f30:	ldr	r3, [sp, #28]
   13f34:	ldr	r1, [r8, #12]
   13f38:	vcvt.f64.f32	d8, s21
   13f3c:	add	r3, r1, r3, lsl #2
   13f40:	vldr	s0, [r3]
   13f44:	vdiv.f32	s0, s0, s24
   13f48:	mov	r6, r0
   13f4c:	bl	11690 <log10f@plt>
   13f50:	mov	r2, r6
   13f54:	mov	r0, r7
   13f58:	mov	r1, #1
   13f5c:	vstr	d8, [sp]
   13f60:	vcvt.f64.f32	d0, s0
   13f64:	vmul.f64	d0, d0, d9
   13f68:	vstr	d0, [sp, #8]
   13f6c:	bl	116cc <__fprintf_chk@plt>
   13f70:	mov	r2, #5
   13f74:	ldr	r1, [pc, #420]	; 14120 <fftwf_malloc@plt+0x2940>
   13f78:	mov	r0, #0
   13f7c:	ldr	r7, [r4, #184]	; 0xb8
   13f80:	bl	11588 <dcgettext@plt>
   13f84:	vdiv.f32	s0, s25, s24
   13f88:	mov	r6, r0
   13f8c:	bl	11690 <log10f@plt>
   13f90:	vldr	s15, [sp, #100]	; 0x64
   13f94:	vcvt.f32.s32	s12, s22
   13f98:	mov	r0, r7
   13f9c:	mov	r2, r6
   13fa0:	vcvt.f32.s32	s14, s15
   13fa4:	mov	r1, #1
   13fa8:	vmul.f32	s12, s12, s23
   13fac:	vmul.f32	s14, s14, s23
   13fb0:	vcvt.f64.f32	d6, s12
   13fb4:	vcvt.f64.f32	d7, s14
   13fb8:	vstr	d6, [sp, #16]
   13fbc:	vstr	d7, [sp, #8]
   13fc0:	vcvt.f64.f32	d0, s0
   13fc4:	vmul.f64	d9, d0, d9
   13fc8:	vstr	d9, [sp]
   13fcc:	bl	116cc <__fprintf_chk@plt>
   13fd0:	vldr	d7, [pc, #312]	; 14110 <fftwf_malloc@plt+0x2930>
   13fd4:	vcmpe.f64	d8, d7
   13fd8:	vmrs	APSR_nzcv, fpscr
   13fdc:	bmi	140a0 <fftwf_malloc@plt+0x28c0>
   13fe0:	vldr	s12, [r5, #40]	; 0x28
   13fe4:	vsub.f32	s15, s12, s20
   13fe8:	vcmpe.f32	s15, s21
   13fec:	vmrs	APSR_nzcv, fpscr
   13ff0:	bgt	14094 <fftwf_malloc@plt+0x28b4>
   13ff4:	vadd.f32	s12, s12, s20
   13ff8:	vcmpe.f32	s12, s21
   13ffc:	vmrs	APSR_nzcv, fpscr
   14000:	bpl	1403c <fftwf_malloc@plt+0x285c>
   14004:	ldr	r1, [pc, #280]	; 14124 <fftwf_malloc@plt+0x2944>
   14008:	mov	r2, #5
   1400c:	mov	r0, #0
   14010:	ldr	r4, [r4, #188]	; 0xbc
   14014:	bl	11588 <dcgettext@plt>
   14018:	vstr	d8, [sp]
   1401c:	mov	r1, #1
   14020:	mov	r2, r0
   14024:	mov	r0, r4
   14028:	bl	116cc <__fprintf_chk@plt>
   1402c:	mov	r0, #1
   14030:	add	sp, sp, #32
   14034:	vpop	{d8-d12}
   14038:	pop	{r4, r5, r6, r7, r8, pc}
   1403c:	mov	r2, #5
   14040:	ldr	r1, [pc, #224]	; 14128 <fftwf_malloc@plt+0x2948>
   14044:	mov	r0, #0
   14048:	ldr	r5, [r4, #184]	; 0xb8
   1404c:	bl	11588 <dcgettext@plt>
   14050:	mov	r1, #1
   14054:	mov	r2, r0
   14058:	mov	r0, r5
   1405c:	bl	116cc <__fprintf_chk@plt>
   14060:	mov	r2, #5
   14064:	ldr	r1, [pc, #192]	; 1412c <fftwf_malloc@plt+0x294c>
   14068:	mov	r0, #0
   1406c:	ldr	r4, [r4, #184]	; 0xb8
   14070:	bl	11588 <dcgettext@plt>
   14074:	mov	r1, #1
   14078:	mov	r2, r0
   1407c:	mov	r0, r4
   14080:	bl	116cc <__fprintf_chk@plt>
   14084:	mov	r0, #0
   14088:	add	sp, sp, #32
   1408c:	vpop	{d8-d12}
   14090:	pop	{r4, r5, r6, r7, r8, pc}
   14094:	mov	r2, #5
   14098:	ldr	r1, [pc, #144]	; 14130 <fftwf_malloc@plt+0x2950>
   1409c:	b	1400c <fftwf_malloc@plt+0x282c>
   140a0:	mov	r2, #5
   140a4:	ldr	r1, [pc, #136]	; 14134 <fftwf_malloc@plt+0x2954>
   140a8:	mov	r0, #0
   140ac:	ldr	r5, [r4, #188]	; 0xbc
   140b0:	bl	11588 <dcgettext@plt>
   140b4:	vstr	d8, [sp]
   140b8:	mov	r1, #1
   140bc:	mov	r2, r0
   140c0:	mov	r0, r5
   140c4:	bl	116cc <__fprintf_chk@plt>
   140c8:	mov	r2, #5
   140cc:	ldr	r1, [pc, #100]	; 14138 <fftwf_malloc@plt+0x2958>
   140d0:	mov	r0, #0
   140d4:	ldr	r4, [r4, #188]	; 0xbc
   140d8:	bl	11588 <dcgettext@plt>
   140dc:	mov	r1, #1
   140e0:	mov	r2, r0
   140e4:	mov	r0, r4
   140e8:	bl	116cc <__fprintf_chk@plt>
   140ec:	mov	r0, #2
   140f0:	add	sp, sp, #32
   140f4:	vpop	{d8-d12}
   140f8:	pop	{r4, r5, r6, r7, r8, pc}
   140fc:	nop			; (mov r0, r0)
   14100:			; <UNDEFINED> instruction: 0x47ae147b
   14104:	svccc	0x00747ae1
   14108:	andeq	r0, r0, r0
   1410c:	eormi	r0, r4, r0
   14110:	adcvc	sp, r3, sl, lsl #14
   14114:	andsmi	r0, ip, sp, lsr sl
   14118:	svccc	0x00800000
   1411c:	andeq	r7, r1, ip, asr r6
   14120:	andeq	r7, r1, r4, lsl #13
   14124:	andeq	r7, r1, r8, lsl #14
   14128:	andeq	r7, r1, ip, lsr #14
   1412c:	andeq	r7, r1, r4, asr #14
   14130:	andeq	r7, r1, r4, ror #13
   14134:	andeq	r7, r1, ip, lsr #13
   14138:	ldrdeq	r7, [r1], -r0
   1413c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14140:	vpush	{d8-d13}
   14144:	ldr	r2, [pc, #1484]	; 14718 <fftwf_malloc@plt+0x2f38>
   14148:	mov	r4, r0
   1414c:	ldr	r1, [r0, #8]
   14150:	sub	sp, sp, #84	; 0x54
   14154:	ldr	r2, [r2]
   14158:	mov	r3, #30
   1415c:	str	r2, [sp, #76]	; 0x4c
   14160:	b	14170 <fftwf_malloc@plt+0x2990>
   14164:	sub	r3, r3, #1
   14168:	cmp	r3, #8
   1416c:	beq	1429c <fftwf_malloc@plt+0x2abc>
   14170:	asr	r8, r1, r3
   14174:	ands	r8, r8, #1
   14178:	beq	14164 <fftwf_malloc@plt+0x2984>
   1417c:	mov	r5, #1
   14180:	mov	r2, #5
   14184:	lsl	r3, r5, r3
   14188:	ldr	r1, [pc, #1420]	; 1471c <fftwf_malloc@plt+0x2f3c>
   1418c:	str	r3, [r4, #8]
   14190:	mov	r0, #0
   14194:	ldr	r6, [r4, #184]	; 0xb8
   14198:	bl	11588 <dcgettext@plt>
   1419c:	ldr	r3, [r4]
   141a0:	mov	r1, r5
   141a4:	str	r3, [sp]
   141a8:	ldr	r3, [r4, #8]
   141ac:	mov	r2, r0
   141b0:	mov	r0, r6
   141b4:	bl	116cc <__fprintf_chk@plt>
   141b8:	mov	r2, #5
   141bc:	ldr	r1, [pc, #1372]	; 14720 <fftwf_malloc@plt+0x2f40>
   141c0:	mov	r0, #0
   141c4:	ldr	r6, [r4, #184]	; 0xb8
   141c8:	bl	11588 <dcgettext@plt>
   141cc:	ldr	r3, [r4, #16]
   141d0:	mov	r1, r5
   141d4:	str	r3, [sp]
   141d8:	ldr	r3, [r4, #4]
   141dc:	mov	r2, r0
   141e0:	mov	r0, r6
   141e4:	bl	116cc <__fprintf_chk@plt>
   141e8:	ldr	r3, [r4, #8]
   141ec:	ldr	r0, [r4, #12]
   141f0:	mul	r0, r0, r3
   141f4:	bl	116b4 <malloc@plt>
   141f8:	cmp	r0, #0
   141fc:	str	r0, [r4, #200]	; 0xc8
   14200:	beq	14ef8 <fftwf_malloc@plt+0x3718>
   14204:	ldr	r1, [pc, #1304]	; 14724 <fftwf_malloc@plt+0x2f44>
   14208:	ldr	r0, [r4, #104]	; 0x68
   1420c:	bl	114f8 <fopen@plt>
   14210:	cmp	r0, #0
   14214:	mov	r6, r0
   14218:	str	r0, [r4, #180]	; 0xb4
   1421c:	beq	142d0 <fftwf_malloc@plt+0x2af0>
   14220:	mov	r3, r5
   14224:	mov	r2, r0
   14228:	ldr	r1, [r4, #104]	; 0x68
   1422c:	mov	r0, r4
   14230:	bl	12c04 <fftwf_malloc@plt+0x1424>
   14234:	subs	r3, r0, #0
   14238:	str	r3, [sp, #28]
   1423c:	bne	14268 <fftwf_malloc@plt+0x2a88>
   14240:	ldr	r3, [r4, #180]	; 0xb4
   14244:	ldr	r2, [r4, #8]
   14248:	ldr	r1, [r4, #12]
   1424c:	ldr	r0, [r4, #200]	; 0xc8
   14250:	bl	11738 <fread@plt>
   14254:	ldr	r6, [r4, #8]
   14258:	cmp	r6, r0
   1425c:	mvnne	r3, #4
   14260:	strne	r3, [sp, #28]
   14264:	beq	14314 <fftwf_malloc@plt+0x2b34>
   14268:	ldr	r0, [r4, #180]	; 0xb4
   1426c:	bl	114b0 <fclose@plt>
   14270:	ldr	r0, [r4, #200]	; 0xc8
   14274:	bl	11570 <free@plt>
   14278:	ldr	r3, [pc, #1176]	; 14718 <fftwf_malloc@plt+0x2f38>
   1427c:	ldr	r2, [sp, #76]	; 0x4c
   14280:	ldr	r0, [sp, #28]
   14284:	ldr	r3, [r3]
   14288:	cmp	r2, r3
   1428c:	bne	14f4c <fftwf_malloc@plt+0x376c>
   14290:	add	sp, sp, #84	; 0x54
   14294:	vpop	{d8-d13}
   14298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1429c:	mov	r0, r8
   142a0:	mov	r2, #5
   142a4:	ldr	r1, [pc, #1148]	; 14728 <fftwf_malloc@plt+0x2f48>
   142a8:	ldr	r5, [r4, #188]	; 0xbc
   142ac:	bl	11588 <dcgettext@plt>
   142b0:	mvn	r2, #21
   142b4:	str	r2, [sp, #28]
   142b8:	ldr	r3, [r4, #8]
   142bc:	mov	r1, #1
   142c0:	mov	r2, r0
   142c4:	mov	r0, r5
   142c8:	bl	116cc <__fprintf_chk@plt>
   142cc:	b	14278 <fftwf_malloc@plt+0x2a98>
   142d0:	bl	117b0 <__errno_location@plt>
   142d4:	mov	r2, #5
   142d8:	ldr	r1, [pc, #1100]	; 1472c <fftwf_malloc@plt+0x2f4c>
   142dc:	ldr	r7, [r4, #188]	; 0xbc
   142e0:	ldr	r3, [r0]
   142e4:	mov	r0, r6
   142e8:	rsb	r3, r3, #0
   142ec:	mov	r6, r3
   142f0:	str	r3, [sp, #28]
   142f4:	bl	11588 <dcgettext@plt>
   142f8:	str	r6, [sp]
   142fc:	mov	r1, r5
   14300:	ldr	r3, [r4, #104]	; 0x68
   14304:	mov	r2, r0
   14308:	mov	r0, r7
   1430c:	bl	116cc <__fprintf_chk@plt>
   14310:	b	14270 <fftwf_malloc@plt+0x2a90>
   14314:	ldr	fp, [r4, #4]
   14318:	cmp	fp, #1
   1431c:	beq	143d0 <fftwf_malloc@plt+0x2bf0>
   14320:	ldr	r7, [r4, #12]
   14324:	mul	r0, r7, r6
   14328:	bl	116b4 <malloc@plt>
   1432c:	subs	r3, r0, #0
   14330:	str	r3, [sp, #32]
   14334:	beq	14df0 <fftwf_malloc@plt+0x3610>
   14338:	ldr	r3, [r4, #200]	; 0xc8
   1433c:	cmp	fp, #0
   14340:	str	r3, [sp, #24]
   14344:	ble	143bc <fftwf_malloc@plt+0x2bdc>
   14348:	ldr	r0, [sp, #32]
   1434c:	ldr	sl, [sp, #28]
   14350:	str	r8, [sp, #36]	; 0x24
   14354:	cmp	r6, #0
   14358:	ble	143ac <fftwf_malloc@plt+0x2bcc>
   1435c:	ldr	r8, [r4, #16]
   14360:	ldr	r3, [sp, #24]
   14364:	mov	r5, #0
   14368:	mla	lr, r8, sl, r3
   1436c:	sub	r9, r8, #1
   14370:	sub	lr, lr, #1
   14374:	cmp	r8, #0
   14378:	subgt	r3, r0, #1
   1437c:	addgt	ip, r0, r9
   14380:	movgt	r2, lr
   14384:	ble	1439c <fftwf_malloc@plt+0x2bbc>
   14388:	ldrb	r1, [r2, #1]!
   1438c:	strb	r1, [r3, #1]!
   14390:	cmp	ip, r3
   14394:	bne	14388 <fftwf_malloc@plt+0x2ba8>
   14398:	add	r0, r0, r8
   1439c:	add	r5, r5, #1
   143a0:	cmp	r6, r5
   143a4:	add	lr, lr, r7
   143a8:	bne	14374 <fftwf_malloc@plt+0x2b94>
   143ac:	add	sl, sl, #1
   143b0:	cmp	fp, sl
   143b4:	bne	14354 <fftwf_malloc@plt+0x2b74>
   143b8:	ldr	r8, [sp, #36]	; 0x24
   143bc:	ldr	r0, [sp, #24]
   143c0:	bl	11570 <free@plt>
   143c4:	ldr	fp, [r4, #4]
   143c8:	ldr	r3, [sp, #32]
   143cc:	str	r3, [r4, #200]	; 0xc8
   143d0:	vldr	d10, [pc, #800]	; 146f8 <fftwf_malloc@plt+0x2f18>
   143d4:	vldr	d9, [pc, #804]	; 14700 <fftwf_malloc@plt+0x2f20>
   143d8:	vldr	s24, [pc, #888]	; 14758 <fftwf_malloc@plt+0x2f78>
   143dc:	vldr	d8, [pc, #804]	; 14708 <fftwf_malloc@plt+0x2f28>
   143e0:	add	r3, r4, #40	; 0x28
   143e4:	str	r8, [sp, #52]	; 0x34
   143e8:	mov	r6, #0
   143ec:	mov	r8, r3
   143f0:	cmp	r6, fp
   143f4:	bge	14268 <fftwf_malloc@plt+0x2a88>
   143f8:	mov	r2, #5
   143fc:	ldr	r1, [pc, #812]	; 14730 <fftwf_malloc@plt+0x2f50>
   14400:	mov	r0, #0
   14404:	ldr	r5, [r4, #184]	; 0xb8
   14408:	bl	11588 <dcgettext@plt>
   1440c:	add	r3, r6, #1
   14410:	mov	r1, #1
   14414:	str	r3, [sp, #40]	; 0x28
   14418:	mov	r2, r0
   1441c:	mov	r0, r5
   14420:	bl	116cc <__fprintf_chk@plt>
   14424:	mov	r2, #5
   14428:	ldr	r1, [pc, #772]	; 14734 <fftwf_malloc@plt+0x2f54>
   1442c:	mov	r0, #0
   14430:	ldr	r5, [r4, #184]	; 0xb8
   14434:	bl	11588 <dcgettext@plt>
   14438:	vldr	s14, [r8]
   1443c:	mov	r1, #1
   14440:	vcvt.f64.f32	d7, s14
   14444:	vstr	d7, [sp]
   14448:	mov	r2, r0
   1444c:	mov	r0, r5
   14450:	bl	116cc <__fprintf_chk@plt>
   14454:	ldr	r7, [r4, #8]
   14458:	ldr	r0, [r4, #12]
   1445c:	ldr	r1, [r4, #4]
   14460:	mul	r3, r6, r7
   14464:	mul	r0, r0, r3
   14468:	bl	167d4 <fftwf_malloc@plt+0x4ff4>
   1446c:	ldrb	r9, [r4, #64]	; 0x40
   14470:	ldr	r2, [r4, #200]	; 0xc8
   14474:	cmp	r9, #0
   14478:	add	r0, r2, r0
   1447c:	str	r0, [sp, #60]	; 0x3c
   14480:	beq	14a20 <fftwf_malloc@plt+0x3240>
   14484:	vldr	s15, [r4, #36]	; 0x24
   14488:	vcmpe.f32	s15, #0.0
   1448c:	vmrs	APSR_nzcv, fpscr
   14490:	ble	14858 <fftwf_malloc@plt+0x3078>
   14494:	vldr	s14, [pc, #628]	; 14710 <fftwf_malloc@plt+0x2f30>
   14498:	vcmpe.f32	s15, s14
   1449c:	vmrs	APSR_nzcv, fpscr
   144a0:	bpl	14858 <fftwf_malloc@plt+0x3078>
   144a4:	mov	r2, #5
   144a8:	ldr	r1, [pc, #648]	; 14738 <fftwf_malloc@plt+0x2f58>
   144ac:	mov	r0, #0
   144b0:	ldr	r5, [r4, #184]	; 0xb8
   144b4:	bl	11588 <dcgettext@plt>
   144b8:	mov	r1, #1
   144bc:	mov	r2, r0
   144c0:	mov	r0, r5
   144c4:	bl	116cc <__fprintf_chk@plt>
   144c8:	mov	r2, #5
   144cc:	ldr	r1, [pc, #616]	; 1473c <fftwf_malloc@plt+0x2f5c>
   144d0:	mov	r0, #0
   144d4:	ldr	r5, [r4, #184]	; 0xb8
   144d8:	bl	11588 <dcgettext@plt>
   144dc:	vldr	s22, [r4, #36]	; 0x24
   144e0:	vldr	s0, [pc, #556]	; 14714 <fftwf_malloc@plt+0x2f34>
   144e4:	vdiv.f32	s1, s22, s24
   144e8:	mov	r6, r0
   144ec:	bl	1142c <powf@plt>
   144f0:	vcvt.f64.f32	d11, s22
   144f4:	mov	r2, r6
   144f8:	mov	r0, r5
   144fc:	mov	r1, #1
   14500:	vstr	d11, [sp]
   14504:	vcvt.f64.f32	d0, s0
   14508:	vdiv.f64	d7, d8, d0
   1450c:	vstr	d7, [sp, #8]
   14510:	bl	116cc <__fprintf_chk@plt>
   14514:	ldr	r5, [r4, #8]
   14518:	ldr	r6, [sp, #60]	; 0x3c
   1451c:	lsl	r0, r5, #2
   14520:	bl	116b4 <malloc@plt>
   14524:	subs	r3, r0, #0
   14528:	str	r3, [sp, #32]
   1452c:	beq	14df0 <fftwf_malloc@plt+0x3610>
   14530:	mov	r2, r5
   14534:	ldr	r3, [r4, #192]	; 0xc0
   14538:	mov	r0, r6
   1453c:	ldr	r1, [sp, #32]
   14540:	blx	r3
   14544:	vldr	s15, [r4]
   14548:	vldr	s22, [r8]
   1454c:	vcvt.f32.u32	s0, s15
   14550:	vdiv.f32	s0, s0, s22
   14554:	bl	115ac <ceilf@plt>
   14558:	ldr	r0, [r4, #8]
   1455c:	vcvt.s32.f32	s15, s0
   14560:	vmov	r1, s15
   14564:	vmov	r5, s15
   14568:	bl	167d4 <fftwf_malloc@plt+0x4ff4>
   1456c:	mov	r2, #5
   14570:	ldr	r1, [pc, #456]	; 14740 <fftwf_malloc@plt+0x2f60>
   14574:	ldr	r6, [r4, #184]	; 0xb8
   14578:	lsl	r9, r5, #2
   1457c:	sub	r7, r0, #1
   14580:	mov	r0, #0
   14584:	str	r7, [sp, #44]	; 0x2c
   14588:	bl	11588 <dcgettext@plt>
   1458c:	mov	r3, r5
   14590:	mov	r1, #1
   14594:	mov	r2, r0
   14598:	mov	r0, r6
   1459c:	bl	116cc <__fprintf_chk@plt>
   145a0:	mov	r2, #5
   145a4:	ldr	r1, [pc, #408]	; 14744 <fftwf_malloc@plt+0x2f64>
   145a8:	mov	r0, #0
   145ac:	ldr	r6, [r4, #184]	; 0xb8
   145b0:	bl	11588 <dcgettext@plt>
   145b4:	mov	r3, r7
   145b8:	mov	r1, #1
   145bc:	mov	r2, r0
   145c0:	mov	r0, r6
   145c4:	bl	116cc <__fprintf_chk@plt>
   145c8:	mov	r0, r9
   145cc:	bl	116b4 <malloc@plt>
   145d0:	subs	r6, r0, #0
   145d4:	beq	14de8 <fftwf_malloc@plt+0x3608>
   145d8:	mov	r0, r9
   145dc:	bl	116b4 <malloc@plt>
   145e0:	subs	r3, r0, #0
   145e4:	str	r3, [sp, #36]	; 0x24
   145e8:	beq	14de0 <fftwf_malloc@plt+0x3600>
   145ec:	ldr	r7, [sp, #36]	; 0x24
   145f0:	vmov.f32	s0, s22
   145f4:	mov	r2, r5
   145f8:	mov	r1, r7
   145fc:	mov	r0, r4
   14600:	bl	136e4 <fftwf_malloc@plt+0x1f04>
   14604:	subs	r3, r0, #0
   14608:	str	r3, [sp, #24]
   1460c:	blt	14dfc <fftwf_malloc@plt+0x361c>
   14610:	cmp	r5, #0
   14614:	vldr	s14, [pc, #320]	; 1475c <fftwf_malloc@plt+0x2f7c>
   14618:	ble	14634 <fftwf_malloc@plt+0x2e54>
   1461c:	mov	r3, r7
   14620:	add	r2, r9, r7
   14624:	vldmia	r3!, {s15}
   14628:	cmp	r2, r3
   1462c:	vmla.f32	s14, s15, s15
   14630:	bne	14624 <fftwf_malloc@plt+0x2e44>
   14634:	vmov	s15, r5
   14638:	vcvt.f32.s32	s22, s15
   1463c:	vdiv.f32	s0, s14, s22
   14640:	vcmp.f32	s0, #0.0
   14644:	vsqrt.f32	s23, s0
   14648:	vmrs	APSR_nzcv, fpscr
   1464c:	bmi	14f44 <fftwf_malloc@plt+0x3764>
   14650:	ldr	r3, [sp, #44]	; 0x2c
   14654:	vldr	s25, [pc, #256]	; 1475c <fftwf_malloc@plt+0x2f7c>
   14658:	cmp	r3, #0
   1465c:	ble	14eec <fftwf_malloc@plt+0x370c>
   14660:	ldr	r3, [sp, #36]	; 0x24
   14664:	vldr	s26, [pc, #168]	; 14714 <fftwf_malloc@plt+0x2f34>
   14668:	mov	sl, #0
   1466c:	add	fp, r9, r6
   14670:	add	r9, r9, r3
   14674:	mov	r3, r4
   14678:	mov	r7, r3
   1467c:	mov	r4, sl
   14680:	str	sl, [sp, #24]
   14684:	str	sl, [sp, #48]	; 0x30
   14688:	ldr	r3, [sp, #32]
   1468c:	cmp	r5, #0
   14690:	add	r1, r3, sl, lsl #2
   14694:	mov	r0, r1
   14698:	ble	146cc <fftwf_malloc@plt+0x2eec>
   1469c:	mov	r3, #0
   146a0:	vldmia	r1!, {s15}
   146a4:	vcmpe.f32	s15, #0.0
   146a8:	vmrs	APSR_nzcv, fpscr
   146ac:	bmi	146c0 <fftwf_malloc@plt+0x2ee0>
   146b0:	vldr	s14, [r1]
   146b4:	vcmpe.f32	s14, #0.0
   146b8:	vmrs	APSR_nzcv, fpscr
   146bc:	bmi	14868 <fftwf_malloc@plt+0x3088>
   146c0:	add	r3, r3, #1
   146c4:	cmp	r5, r3
   146c8:	bne	146a0 <fftwf_malloc@plt+0x2ec0>
   146cc:	mov	r4, r7
   146d0:	mvn	r7, #21
   146d4:	ldr	r0, [sp, #36]	; 0x24
   146d8:	bl	11570 <free@plt>
   146dc:	mov	r0, r6
   146e0:	bl	11570 <free@plt>
   146e4:	ldr	r0, [sp, #32]
   146e8:	bl	11570 <free@plt>
   146ec:	str	r7, [sp, #28]
   146f0:	b	14268 <fftwf_malloc@plt+0x2a88>
   146f4:	nop			; (mov r0, r0)
   146f8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   146fc:	strdmi	r2, [r9], -fp
   14700:	andeq	r0, r0, r0
   14704:	svccc	0x00e00000
   14708:	andeq	r0, r0, r0
   1470c:	subsmi	r0, r9, r0
   14710:	movtmi	r0, #32768	; 0x8000
   14714:			; <UNDEFINED> instruction: 0x41200000
   14718:	andeq	r8, r2, r8, ror sp
   1471c:	andeq	r7, r1, ip, asr r7
   14720:	andeq	r7, r1, ip, lsl #15
   14724:	ldrdeq	r7, [r1], -r4
   14728:			; <UNDEFINED> instruction: 0x000177b0
   1472c:	andeq	r7, r1, r4, asr #4
   14730:	ldrdeq	r7, [r1], -r8
   14734:	andeq	r7, r1, r8, ror #15
   14738:	andeq	r7, r1, r0, lsr r9
   1473c:	andeq	r7, r1, r4, asr #18
   14740:	muleq	r1, r4, r8
   14744:	andeq	r7, r1, ip, lsr #17
   14748:	andeq	r7, r1, ip, ror #17
   1474c:	andeq	r7, r1, ip, asr #17
   14750:	andeq	r7, r1, r0, lsl #18
   14754:	andeq	r7, r1, r0, lsl r8
   14758:	movmi	r0, r0
   1475c:	andeq	r0, r0, r0
   14760:	sbcmi	r0, r8, #0
   14764:	vdiv.f32	s1, s0, s24
   14768:	vmov.f32	s0, s26
   1476c:	bl	1142c <powf@plt>
   14770:	vcvt.f64.f32	d6, s25
   14774:	ldr	r3, [sp, #44]	; 0x2c
   14778:	add	r4, r4, #1
   1477c:	cmp	r4, r3
   14780:	ldr	r3, [sp, #48]	; 0x30
   14784:	add	sl, sl, r5
   14788:	add	r3, r3, #1
   1478c:	str	r3, [sp, #48]	; 0x30
   14790:	vcvt.f64.f32	d0, s0
   14794:	vdiv.f64	d7, d8, d0
   14798:	vadd.f64	d7, d7, d6
   1479c:	vcvt.f32.f64	s25, d7
   147a0:	bne	14688 <fftwf_malloc@plt+0x2ea8>
   147a4:	ldr	r3, [sp, #24]
   147a8:	mov	r4, r7
   147ac:	cmp	r3, #0
   147b0:	bne	14f5c <fftwf_malloc@plt+0x377c>
   147b4:	mov	r2, #5
   147b8:	ldr	r1, [pc, #-120]	; 14748 <fftwf_malloc@plt+0x2f68>
   147bc:	mov	r0, #0
   147c0:	ldr	r5, [r4, #184]	; 0xb8
   147c4:	bl	11588 <dcgettext@plt>
   147c8:	mov	r1, #1
   147cc:	mov	r2, r0
   147d0:	mov	r0, r5
   147d4:	bl	116cc <__fprintf_chk@plt>
   147d8:	vldr	s15, [sp, #48]	; 0x30
   147dc:	vldr	s0, [pc, #-132]	; 14760 <fftwf_malloc@plt+0x2f80>
   147e0:	vcvt.f32.s32	s15, s15
   147e4:	vdiv.f32	s23, s25, s15
   147e8:	vdiv.f32	s0, s0, s23
   147ec:	bl	11690 <log10f@plt>
   147f0:	mov	r2, #5
   147f4:	ldr	r1, [pc, #-172]	; 14750 <fftwf_malloc@plt+0x2f70>
   147f8:	mov	r0, #0
   147fc:	ldr	r5, [r4, #184]	; 0xb8
   14800:	vmov.f32	s22, s0
   14804:	bl	11588 <dcgettext@plt>
   14808:	vcvt.f64.f32	d6, s23
   1480c:	ldr	r3, [sp, #48]	; 0x30
   14810:	vmul.f32	s14, s22, s24
   14814:	str	r3, [sp, #16]
   14818:	mov	r1, #1
   1481c:	vstr	d6, [sp, #8]
   14820:	vcvt.f64.f32	d7, s14
   14824:	vstr	d7, [sp]
   14828:	mov	r2, r0
   1482c:	mov	r0, r5
   14830:	bl	116cc <__fprintf_chk@plt>
   14834:	ldr	r0, [sp, #36]	; 0x24
   14838:	bl	11570 <free@plt>
   1483c:	mov	r0, r6
   14840:	bl	11570 <free@plt>
   14844:	ldr	r0, [sp, #32]
   14848:	bl	11570 <free@plt>
   1484c:	ldr	r3, [sp, #24]
   14850:	cmp	r3, #0
   14854:	bne	14f50 <fftwf_malloc@plt+0x3770>
   14858:	add	r8, r8, #4
   1485c:	ldr	r6, [sp, #40]	; 0x28
   14860:	ldr	fp, [r4, #4]
   14864:	b	143f0 <fftwf_malloc@plt+0x2c10>
   14868:	vsub.f32	s11, s15, s14
   1486c:	vneg.f32	s10, s14
   14870:	add	r3, r3, #1
   14874:	mov	r1, r6
   14878:	add	r3, r0, r3, lsl #2
   1487c:	vdiv.f32	s12, s15, s11
   14880:	vdiv.f32	s13, s10, s11
   14884:	b	14890 <fftwf_malloc@plt+0x30b0>
   14888:	vldr	s14, [r3, #4]
   1488c:	vldmia	r3!, {s15}
   14890:	vmul.f32	s15, s13, s15
   14894:	vmla.f32	s15, s12, s14
   14898:	vstmia	r1!, {s15}
   1489c:	cmp	fp, r1
   148a0:	bne	14888 <fftwf_malloc@plt+0x30a8>
   148a4:	vldr	s14, [pc, #-336]	; 1475c <fftwf_malloc@plt+0x2f7c>
   148a8:	mov	r3, r6
   148ac:	vldmia	r3!, {s15}
   148b0:	cmp	fp, r3
   148b4:	vmla.f32	s14, s15, s15
   148b8:	bne	148ac <fftwf_malloc@plt+0x30cc>
   148bc:	vdiv.f32	s0, s14, s22
   148c0:	vcmp.f32	s0, #0.0
   148c4:	vsqrt.f32	s27, s0
   148c8:	vmrs	APSR_nzcv, fpscr
   148cc:	bmi	14f2c <fftwf_malloc@plt+0x374c>
   148d0:	vdiv.f32	s14, s23, s27
   148d4:	mov	r3, r6
   148d8:	vldr	s15, [r3]
   148dc:	vmul.f32	s15, s14, s15
   148e0:	vstmia	r3!, {s15}
   148e4:	cmp	fp, r3
   148e8:	bne	148d8 <fftwf_malloc@plt+0x30f8>
   148ec:	vldr	s14, [pc, #-408]	; 1475c <fftwf_malloc@plt+0x2f7c>
   148f0:	ldr	r3, [sp, #36]	; 0x24
   148f4:	mov	r1, r6
   148f8:	vldmia	r3!, {s15}
   148fc:	vldmia	r1!, {s13}
   14900:	cmp	r9, r3
   14904:	vsub.f32	s15, s15, s13
   14908:	vmla.f32	s14, s15, s15
   1490c:	bne	148f8 <fftwf_malloc@plt+0x3118>
   14910:	vdiv.f32	s0, s14, s22
   14914:	vcmp.f32	s0, #0.0
   14918:	vsqrt.f32	s27, s0
   1491c:	vmrs	APSR_nzcv, fpscr
   14920:	bmi	14f24 <fftwf_malloc@plt+0x3744>
   14924:	vdiv.f32	s0, s23, s27
   14928:	bl	11690 <log10f@plt>
   1492c:	vldr	s15, [r7, #36]	; 0x24
   14930:	vmul.f32	s0, s0, s24
   14934:	vcmpe.f32	s15, s0
   14938:	vmrs	APSR_nzcv, fpscr
   1493c:	bmi	14764 <fftwf_malloc@plt+0x2f84>
   14940:	ldr	r3, [sp, #44]	; 0x2c
   14944:	add	r4, r4, #1
   14948:	cmp	r4, r3
   1494c:	ldr	r3, [sp, #24]
   14950:	add	sl, sl, r5
   14954:	add	r3, r3, #1
   14958:	str	r3, [sp, #24]
   1495c:	bne	14688 <fftwf_malloc@plt+0x2ea8>
   14960:	mov	r4, r7
   14964:	mov	r7, r3
   14968:	mov	r2, #5
   1496c:	ldr	r1, [pc, #-552]	; 1474c <fftwf_malloc@plt+0x2f6c>
   14970:	mov	r0, #0
   14974:	ldr	r5, [r4, #188]	; 0xbc
   14978:	bl	11588 <dcgettext@plt>
   1497c:	mov	r3, r7
   14980:	mov	r1, #1
   14984:	rsb	r7, r7, #0
   14988:	mov	r2, r0
   1498c:	mov	r0, r5
   14990:	bl	116cc <__fprintf_chk@plt>
   14994:	ldr	r3, [sp, #48]	; 0x30
   14998:	cmp	r3, #0
   1499c:	beq	146d4 <fftwf_malloc@plt+0x2ef4>
   149a0:	vldr	s15, [sp, #48]	; 0x30
   149a4:	vldr	s0, [pc, #-588]	; 14760 <fftwf_malloc@plt+0x2f80>
   149a8:	str	r7, [sp, #28]
   149ac:	vcvt.f32.s32	s15, s15
   149b0:	vdiv.f32	s17, s25, s15
   149b4:	vdiv.f32	s0, s0, s17
   149b8:	bl	11690 <log10f@plt>
   149bc:	mov	r2, #5
   149c0:	ldr	r1, [pc, #-632]	; 14750 <fftwf_malloc@plt+0x2f70>
   149c4:	mov	r0, #0
   149c8:	ldr	r5, [r4, #184]	; 0xb8
   149cc:	vmov.f32	s16, s0
   149d0:	bl	11588 <dcgettext@plt>
   149d4:	vldr	s14, [pc, #-644]	; 14758 <fftwf_malloc@plt+0x2f78>
   149d8:	vcvt.f64.f32	d6, s17
   149dc:	ldr	r3, [sp, #48]	; 0x30
   149e0:	mov	r1, #1
   149e4:	vmul.f32	s14, s16, s14
   149e8:	str	r3, [sp, #16]
   149ec:	vstr	d6, [sp, #8]
   149f0:	vcvt.f64.f32	d7, s14
   149f4:	vstr	d7, [sp]
   149f8:	mov	r2, r0
   149fc:	mov	r0, r5
   14a00:	bl	116cc <__fprintf_chk@plt>
   14a04:	ldr	r0, [sp, #36]	; 0x24
   14a08:	bl	11570 <free@plt>
   14a0c:	mov	r0, r6
   14a10:	bl	11570 <free@plt>
   14a14:	ldr	r0, [sp, #32]
   14a18:	bl	11570 <free@plt>
   14a1c:	b	14268 <fftwf_malloc@plt+0x2a88>
   14a20:	lsl	r5, r7, #2
   14a24:	mov	r0, r5
   14a28:	bl	117e0 <fftwf_malloc@plt>
   14a2c:	cmp	r0, #0
   14a30:	str	r0, [sp, #64]	; 0x40
   14a34:	beq	14df0 <fftwf_malloc@plt+0x3610>
   14a38:	ldr	r0, [r4, #8]
   14a3c:	lsl	r0, r0, #2
   14a40:	bl	117e0 <fftwf_malloc@plt>
   14a44:	cmp	r0, #0
   14a48:	str	r0, [sp, #68]	; 0x44
   14a4c:	beq	14d68 <fftwf_malloc@plt+0x3588>
   14a50:	ldr	r0, [r4, #8]
   14a54:	lsl	r0, r0, #2
   14a58:	bl	117e0 <fftwf_malloc@plt>
   14a5c:	cmp	r0, #0
   14a60:	str	r0, [sp, #72]	; 0x48
   14a64:	beq	14d60 <fftwf_malloc@plt+0x3580>
   14a68:	mov	r2, #16
   14a6c:	mov	r3, r9
   14a70:	str	r2, [sp]
   14a74:	ldr	r1, [sp, #64]	; 0x40
   14a78:	ldr	r2, [sp, #68]	; 0x44
   14a7c:	mov	r0, r7
   14a80:	bl	114bc <fftwf_plan_r2r_1d@plt>
   14a84:	subs	r3, r0, #0
   14a88:	str	r3, [sp, #24]
   14a8c:	beq	14d58 <fftwf_malloc@plt+0x3578>
   14a90:	ldr	r3, [r4, #192]	; 0xc0
   14a94:	ldrd	r0, [sp, #60]	; 0x3c
   14a98:	ldr	r2, [r4, #8]
   14a9c:	blx	r3
   14aa0:	ldr	r0, [r4, #8]
   14aa4:	ldr	r3, [sp, #64]	; 0x40
   14aa8:	cmp	r0, #0
   14aac:	ble	14eac <fftwf_malloc@plt+0x36cc>
   14ab0:	vldr	s15, [pc, #-860]	; 1475c <fftwf_malloc@plt+0x2f7c>
   14ab4:	add	r1, r3, r0, lsl #2
   14ab8:	mov	r2, r3
   14abc:	vldmia	r2!, {s14}
   14ac0:	cmp	r1, r2
   14ac4:	vadd.f32	s15, s15, s14
   14ac8:	bne	14abc <fftwf_malloc@plt+0x32dc>
   14acc:	vmov	s14, r0
   14ad0:	vcvt.f32.s32	s12, s14
   14ad4:	vldr	s14, [pc, #-896]	; 1475c <fftwf_malloc@plt+0x2f7c>
   14ad8:	vdiv.f32	s13, s15, s12
   14adc:	vldmia	r3!, {s15}
   14ae0:	vsub.f32	s15, s15, s13
   14ae4:	cmp	r1, r3
   14ae8:	vabs.f32	s15, s15
   14aec:	vadd.f32	s14, s14, s15
   14af0:	bne	14adc <fftwf_malloc@plt+0x32fc>
   14af4:	vdiv.f32	s15, s14, s12
   14af8:	ldr	r3, [r4, #16]
   14afc:	mov	sl, #1
   14b00:	vldr	s12, [pc, #-936]	; 14760 <fftwf_malloc@plt+0x2f80>
   14b04:	lsl	r3, r3, #3
   14b08:	sub	r3, r3, #1
   14b0c:	mov	r2, #5
   14b10:	lsl	r3, sl, r3
   14b14:	sub	r3, r3, #1
   14b18:	ldr	r1, [pc, #-972]	; 14754 <fftwf_malloc@plt+0x2f74>
   14b1c:	vmov	s14, r3
   14b20:	mov	r0, #0
   14b24:	ldr	fp, [r4, #184]	; 0xb8
   14b28:	vcvt.f32.s32	s13, s14
   14b2c:	vcvt.f64.f32	d7, s15
   14b30:	vmul.f64	d7, d7, d10
   14b34:	vmul.f64	d7, d7, d9
   14b38:	vcvt.f32.f64	s22, d7
   14b3c:	vmul.f32	s15, s22, s12
   14b40:	vdiv.f32	s14, s15, s13
   14b44:	vcvt.s32.f32	s15, s14
   14b48:	vmov	r9, s15
   14b4c:	bl	11588 <dcgettext@plt>
   14b50:	vcvt.f64.f32	d11, s22
   14b54:	mov	r1, sl
   14b58:	str	r9, [sp, #8]
   14b5c:	vstr	d11, [sp]
   14b60:	mov	r2, r0
   14b64:	mov	r0, fp
   14b68:	bl	116cc <__fprintf_chk@plt>
   14b6c:	cmp	r9, #0
   14b70:	blt	14e88 <fftwf_malloc@plt+0x36a8>
   14b74:	beq	14e98 <fftwf_malloc@plt+0x36b8>
   14b78:	cmp	r9, #100	; 0x64
   14b7c:	bgt	14e04 <fftwf_malloc@plt+0x3624>
   14b80:	ldr	r0, [sp, #24]
   14b84:	add	r9, r7, r7, lsr #31
   14b88:	bl	11510 <fftwf_execute@plt>
   14b8c:	cmp	r7, #3
   14b90:	ldr	r2, [sp, #72]	; 0x48
   14b94:	asr	r9, r9, #1
   14b98:	ble	14bec <fftwf_malloc@plt+0x340c>
   14b9c:	ldr	r7, [sp, #52]	; 0x34
   14ba0:	sub	r5, r5, #4
   14ba4:	ldr	r1, [sp, #68]	; 0x44
   14ba8:	lsl	r3, r7, #2
   14bac:	add	r0, r1, r5
   14bb0:	add	r1, r1, r3
   14bb4:	vldr	s0, [r0]
   14bb8:	vldr	s15, [r1]
   14bbc:	add	r3, r2, r3
   14bc0:	vmul.f32	s0, s0, s0
   14bc4:	vmla.f32	s0, s15, s15
   14bc8:	vcmp.f32	s0, #0.0
   14bcc:	vsqrt.f32	s22, s0
   14bd0:	vmrs	APSR_nzcv, fpscr
   14bd4:	bmi	14f10 <fftwf_malloc@plt+0x3730>
   14bd8:	add	r7, r7, #1
   14bdc:	cmp	r7, r9
   14be0:	vstr	s22, [r3]
   14be4:	sub	r5, r5, #4
   14be8:	blt	14ba4 <fftwf_malloc@plt+0x33c4>
   14bec:	ldr	r5, [r4, #8]
   14bf0:	vldr	s11, [pc, #876]	; 14f64 <fftwf_malloc@plt+0x3784>
   14bf4:	cmp	r5, #1
   14bf8:	vmov	s15, r5
   14bfc:	add	r7, r5, r5, lsr #31
   14c00:	asr	r7, r7, #1
   14c04:	vcvt.f32.s32	s10, s15
   14c08:	vldr	s15, [r4]
   14c0c:	vmov	s13, r7
   14c10:	vcvt.f32.u32	s14, s15
   14c14:	vldr	s15, [pc, #844]	; 14f68 <fftwf_malloc@plt+0x3788>
   14c18:	vcvt.f32.s32	s13, s13
   14c1c:	vstr	s15, [r2]
   14c20:	vdiv.f32	s12, s10, s14
   14c24:	vdiv.f32	s23, s11, s12
   14c28:	ble	14ebc <fftwf_malloc@plt+0x36dc>
   14c2c:	add	r2, r2, #4
   14c30:	mov	r1, r2
   14c34:	mov	r3, #0
   14c38:	vmov.f32	s14, s15
   14c3c:	b	14c44 <fftwf_malloc@plt+0x3464>
   14c40:	vldmia	r1!, {s15}
   14c44:	add	r3, r3, #1
   14c48:	cmp	r7, r3
   14c4c:	vadd.f32	s14, s14, s15
   14c50:	bgt	14c40 <fftwf_malloc@plt+0x3460>
   14c54:	vldr	s15, [pc, #780]	; 14f68 <fftwf_malloc@plt+0x3788>
   14c58:	vdiv.f32	s22, s14, s13
   14c5c:	mov	r3, #0
   14c60:	vmov.f32	s14, s15
   14c64:	b	14c6c <fftwf_malloc@plt+0x348c>
   14c68:	vldmia	r2!, {s15}
   14c6c:	vsub.f32	s15, s15, s22
   14c70:	add	r3, r3, #1
   14c74:	cmp	r7, r3
   14c78:	vmla.f32	s14, s15, s15
   14c7c:	bgt	14c68 <fftwf_malloc@plt+0x3488>
   14c80:	vdiv.f32	s0, s14, s13
   14c84:	vcmp.f32	s0, #0.0
   14c88:	vsqrt.f32	s26, s0
   14c8c:	vmrs	APSR_nzcv, fpscr
   14c90:	bmi	14ed4 <fftwf_malloc@plt+0x36f4>
   14c94:	mov	sl, #0
   14c98:	mvn	r2, #0
   14c9c:	vldr	s25, [pc, #708]	; 14f68 <fftwf_malloc@plt+0x3788>
   14ca0:	mov	r9, sl
   14ca4:	mov	fp, sl
   14ca8:	mov	r5, sl
   14cac:	mov	r0, r2
   14cb0:	b	14cf0 <fftwf_malloc@plt+0x3510>
   14cb4:	cmn	r0, #1
   14cb8:	addeq	fp, fp, #1
   14cbc:	moveq	r9, r5
   14cc0:	moveq	r0, r5
   14cc4:	beq	14cdc <fftwf_malloc@plt+0x34fc>
   14cc8:	add	r3, r3, r9, lsl #2
   14ccc:	vldr	s14, [r3]
   14cd0:	vcmp.f32	s15, s14
   14cd4:	vmrs	APSR_nzcv, fpscr
   14cd8:	movgt	r9, r5
   14cdc:	vadd.f32	s25, s25, s15
   14ce0:	mov	r2, r5
   14ce4:	add	r5, r5, #1
   14ce8:	cmp	r7, r5
   14cec:	ble	14d7c <fftwf_malloc@plt+0x359c>
   14cf0:	vldr	s15, [r4, #32]
   14cf4:	vmov.f32	s14, s22
   14cf8:	ldr	r3, [sp, #72]	; 0x48
   14cfc:	add	r1, r3, r5, lsl #2
   14d00:	vmla.f32	s14, s26, s15
   14d04:	vldr	s15, [r1]
   14d08:	vcmpe.f32	s15, s14
   14d0c:	vmrs	APSR_nzcv, fpscr
   14d10:	bgt	14cb4 <fftwf_malloc@plt+0x34d4>
   14d14:	cmn	r0, #1
   14d18:	beq	14ce4 <fftwf_malloc@plt+0x3504>
   14d1c:	str	r0, [sp, #4]
   14d20:	str	r6, [sp]
   14d24:	vmov.f32	s2, s25
   14d28:	vmov.f32	s1, s22
   14d2c:	vmov.f32	s0, s23
   14d30:	mov	r3, r9
   14d34:	add	r1, sp, #60	; 0x3c
   14d38:	mov	r0, r4
   14d3c:	bl	13eb8 <fftwf_malloc@plt+0x26d8>
   14d40:	cmp	fp, #10
   14d44:	orr	sl, sl, r0
   14d48:	beq	14d90 <fftwf_malloc@plt+0x35b0>
   14d4c:	mvn	r2, #0
   14d50:	mov	r0, r2
   14d54:	b	14ce4 <fftwf_malloc@plt+0x3504>
   14d58:	ldr	r0, [sp, #72]	; 0x48
   14d5c:	bl	11750 <fftwf_free@plt>
   14d60:	ldr	r0, [sp, #68]	; 0x44
   14d64:	bl	11750 <fftwf_free@plt>
   14d68:	ldr	r0, [sp, #64]	; 0x40
   14d6c:	bl	11750 <fftwf_free@plt>
   14d70:	mvn	r3, #11
   14d74:	str	r3, [sp, #28]
   14d78:	b	14268 <fftwf_malloc@plt+0x2a88>
   14d7c:	cmp	fp, #0
   14d80:	beq	14f34 <fftwf_malloc@plt+0x3754>
   14d84:	cmp	sl, #2
   14d88:	cmpeq	fp, #1
   14d8c:	beq	14e2c <fftwf_malloc@plt+0x364c>
   14d90:	ands	r0, sl, #1
   14d94:	ldr	r5, [r4, #184]	; 0xb8
   14d98:	bne	14f04 <fftwf_malloc@plt+0x3724>
   14d9c:	mov	r2, #5
   14da0:	ldr	r1, [pc, #452]	; 14f6c <fftwf_malloc@plt+0x378c>
   14da4:	bl	11588 <dcgettext@plt>
   14da8:	mov	r3, fp
   14dac:	mov	r1, #1
   14db0:	mov	r2, r0
   14db4:	mov	r0, r5
   14db8:	bl	116cc <__fprintf_chk@plt>
   14dbc:	ldr	r0, [sp, #24]
   14dc0:	bl	11768 <fftwf_destroy_plan@plt>
   14dc4:	ldr	r0, [sp, #72]	; 0x48
   14dc8:	bl	11750 <fftwf_free@plt>
   14dcc:	ldr	r0, [sp, #68]	; 0x44
   14dd0:	bl	11750 <fftwf_free@plt>
   14dd4:	ldr	r0, [sp, #64]	; 0x40
   14dd8:	bl	11750 <fftwf_free@plt>
   14ddc:	b	14484 <fftwf_malloc@plt+0x2ca4>
   14de0:	mov	r0, r6
   14de4:	bl	11570 <free@plt>
   14de8:	ldr	r0, [sp, #32]
   14dec:	bl	11570 <free@plt>
   14df0:	mvn	r3, #11
   14df4:	str	r3, [sp, #28]
   14df8:	b	14268 <fftwf_malloc@plt+0x2a88>
   14dfc:	ldr	r7, [sp, #24]
   14e00:	b	146d4 <fftwf_malloc@plt+0x2ef4>
   14e04:	ldr	r9, [r4, #188]	; 0xbc
   14e08:	ldr	r1, [pc, #352]	; 14f70 <fftwf_malloc@plt+0x3790>
   14e0c:	mov	r2, #5
   14e10:	mov	r0, #0
   14e14:	bl	11588 <dcgettext@plt>
   14e18:	mov	r1, sl
   14e1c:	mov	r2, r0
   14e20:	mov	r0, r9
   14e24:	bl	116cc <__fprintf_chk@plt>
   14e28:	b	14b80 <fftwf_malloc@plt+0x33a0>
   14e2c:	ldr	r5, [r4, #184]	; 0xb8
   14e30:	ldr	r6, [pc, #316]	; 14f74 <fftwf_malloc@plt+0x3794>
   14e34:	ldr	r8, [sp, #52]	; 0x34
   14e38:	str	r8, [sp, #28]
   14e3c:	mov	r2, #5
   14e40:	ldr	r1, [pc, #292]	; 14f6c <fftwf_malloc@plt+0x378c>
   14e44:	mov	r0, #0
   14e48:	bl	11588 <dcgettext@plt>
   14e4c:	ldr	r3, [sp, #28]
   14e50:	mov	r1, #1
   14e54:	mov	r2, r0
   14e58:	mov	r0, r5
   14e5c:	bl	116cc <__fprintf_chk@plt>
   14e60:	ldr	r0, [sp, #24]
   14e64:	bl	11768 <fftwf_destroy_plan@plt>
   14e68:	ldr	r0, [sp, #72]	; 0x48
   14e6c:	bl	11750 <fftwf_free@plt>
   14e70:	ldr	r0, [sp, #68]	; 0x44
   14e74:	bl	11750 <fftwf_free@plt>
   14e78:	ldr	r0, [sp, #64]	; 0x40
   14e7c:	str	r6, [sp, #28]
   14e80:	bl	11750 <fftwf_free@plt>
   14e84:	b	14268 <fftwf_malloc@plt+0x2a88>
   14e88:	ldr	r9, [r4, #188]	; 0xbc
   14e8c:	mov	r2, #5
   14e90:	ldr	r1, [pc, #224]	; 14f78 <fftwf_malloc@plt+0x3798>
   14e94:	b	14e10 <fftwf_malloc@plt+0x3630>
   14e98:	mov	r0, r9
   14e9c:	mov	r2, #5
   14ea0:	ldr	r9, [r4, #188]	; 0xbc
   14ea4:	ldr	r1, [pc, #208]	; 14f7c <fftwf_malloc@plt+0x379c>
   14ea8:	b	14e14 <fftwf_malloc@plt+0x3634>
   14eac:	vmov	s15, r0
   14eb0:	vldr	s14, [pc, #176]	; 14f68 <fftwf_malloc@plt+0x3788>
   14eb4:	vcvt.f32.s32	s12, s15
   14eb8:	b	14af4 <fftwf_malloc@plt+0x3314>
   14ebc:	vdiv.f32	s22, s15, s13
   14ec0:	vcmp.f32	s22, #0.0
   14ec4:	vsqrt.f32	s26, s22
   14ec8:	vmrs	APSR_nzcv, fpscr
   14ecc:	bpl	14ee0 <fftwf_malloc@plt+0x3700>
   14ed0:	vmov.f32	s0, s22
   14ed4:	bl	11474 <sqrtf@plt>
   14ed8:	cmp	r5, #1
   14edc:	bgt	14c94 <fftwf_malloc@plt+0x34b4>
   14ee0:	ldr	r5, [r4, #184]	; 0xb8
   14ee4:	mvn	r6, #1000	; 0x3e8
   14ee8:	b	14e3c <fftwf_malloc@plt+0x365c>
   14eec:	mov	r3, #0
   14ef0:	str	r3, [sp, #48]	; 0x30
   14ef4:	b	147b4 <fftwf_malloc@plt+0x2fd4>
   14ef8:	mvn	r3, #11
   14efc:	str	r3, [sp, #28]
   14f00:	b	14278 <fftwf_malloc@plt+0x2a98>
   14f04:	ldr	r6, [pc, #116]	; 14f80 <fftwf_malloc@plt+0x37a0>
   14f08:	str	fp, [sp, #28]
   14f0c:	b	14e3c <fftwf_malloc@plt+0x365c>
   14f10:	str	r3, [sp, #32]
   14f14:	bl	11474 <sqrtf@plt>
   14f18:	ldr	r2, [sp, #72]	; 0x48
   14f1c:	ldr	r3, [sp, #32]
   14f20:	b	14bd8 <fftwf_malloc@plt+0x33f8>
   14f24:	bl	11474 <sqrtf@plt>
   14f28:	b	14924 <fftwf_malloc@plt+0x3144>
   14f2c:	bl	11474 <sqrtf@plt>
   14f30:	b	148d0 <fftwf_malloc@plt+0x30f0>
   14f34:	str	fp, [sp, #28]
   14f38:	ldr	r5, [r4, #184]	; 0xb8
   14f3c:	mvn	r6, #1000	; 0x3e8
   14f40:	b	14e3c <fftwf_malloc@plt+0x365c>
   14f44:	bl	11474 <sqrtf@plt>
   14f48:	b	14650 <fftwf_malloc@plt+0x2e70>
   14f4c:	bl	116c0 <__stack_chk_fail@plt>
   14f50:	ldr	r7, [sp, #24]
   14f54:	str	r7, [sp, #28]
   14f58:	b	14268 <fftwf_malloc@plt+0x2a88>
   14f5c:	mov	r7, r3
   14f60:	b	14968 <fftwf_malloc@plt+0x3188>
   14f64:	svccc	0x00800000
   14f68:	andeq	r0, r0, r0
   14f6c:	andeq	r7, r1, r4, ror #18
   14f70:	andeq	r7, r1, r8, ror r8
   14f74:			; <UNDEFINED> instruction: 0xfffffc16
   14f78:	andeq	r7, r1, r4, lsr r8
   14f7c:	andeq	r7, r1, ip, asr r8
   14f80:			; <UNDEFINED> instruction: 0xfffffc15
   14f84:	andeq	r0, r0, r0
   14f88:	b	11438 <snd_pcm_close@plt>
   14f8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f90:	subs	r8, r1, #0
   14f94:	sub	sp, sp, #20
   14f98:	ble	1501c <fftwf_malloc@plt+0x383c>
   14f9c:	ldr	fp, [pc, #344]	; 150fc <fftwf_malloc@plt+0x391c>
   14fa0:	mov	r9, r2
   14fa4:	mov	r5, r0
   14fa8:	mov	r6, r8
   14fac:	mov	r7, #0
   14fb0:	ldr	r1, [r5, #32]
   14fb4:	mov	r2, r6
   14fb8:	add	r1, r1, r7
   14fbc:	ldr	r0, [r5]
   14fc0:	bl	115c4 <snd_pcm_writei@plt>
   14fc4:	cmn	r0, #11
   14fc8:	mov	r4, r0
   14fcc:	beq	1505c <fftwf_malloc@plt+0x387c>
   14fd0:	cmp	r0, #0
   14fd4:	cmpge	r8, r0
   14fd8:	movgt	r0, #1
   14fdc:	movle	r0, #0
   14fe0:	bgt	1505c <fftwf_malloc@plt+0x387c>
   14fe4:	cmn	r4, #32
   14fe8:	beq	1506c <fftwf_malloc@plt+0x388c>
   14fec:	cmn	r4, #86	; 0x56
   14ff0:	beq	15030 <fftwf_malloc@plt+0x3850>
   14ff4:	cmp	r4, #0
   14ff8:	blt	150bc <fftwf_malloc@plt+0x38dc>
   14ffc:	cmp	r4, #0
   15000:	ble	14fb0 <fftwf_malloc@plt+0x37d0>
   15004:	ldr	r3, [r5, #28]
   15008:	sub	r6, r6, r4
   1500c:	cmp	r6, #0
   15010:	mul	r4, r3, r4
   15014:	add	r7, r7, r4, lsr #3
   15018:	bgt	14fb0 <fftwf_malloc@plt+0x37d0>
   1501c:	mov	r4, #0
   15020:	mov	r0, r4
   15024:	add	sp, sp, #20
   15028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1502c:	bl	116f0 <sleep@plt>
   15030:	ldr	r0, [r5]
   15034:	bl	1160c <snd_pcm_resume@plt>
   15038:	mov	r4, r0
   1503c:	cmn	r4, #11
   15040:	mov	r0, #1
   15044:	beq	1502c <fftwf_malloc@plt+0x384c>
   15048:	cmp	r4, #0
   1504c:	bge	14ffc <fftwf_malloc@plt+0x381c>
   15050:	ldr	r0, [r5]
   15054:	bl	11498 <snd_pcm_prepare@plt>
   15058:	b	14fb0 <fftwf_malloc@plt+0x37d0>
   1505c:	mov	r1, #500	; 0x1f4
   15060:	ldr	r0, [r5]
   15064:	bl	115dc <snd_pcm_wait@plt>
   15068:	b	14ffc <fftwf_malloc@plt+0x381c>
   1506c:	mov	r1, fp
   15070:	mov	r2, #5
   15074:	ldr	sl, [r9, #188]	; 0xbc
   15078:	bl	11588 <dcgettext@plt>
   1507c:	str	r0, [sp, #12]
   15080:	mov	r0, r4
   15084:	bl	11618 <snd_strerror@plt>
   15088:	ldr	r2, [sp, #12]
   1508c:	str	r4, [sp]
   15090:	mov	r1, #1
   15094:	mov	r3, r0
   15098:	mov	r0, sl
   1509c:	bl	116cc <__fprintf_chk@plt>
   150a0:	ldrb	r3, [r9, #65]	; 0x41
   150a4:	ldr	r0, [r5]
   150a8:	cmp	r3, #0
   150ac:	movne	r3, #1
   150b0:	strbne	r3, [r9, #166]	; 0xa6
   150b4:	bl	11498 <snd_pcm_prepare@plt>
   150b8:	b	14fb0 <fftwf_malloc@plt+0x37d0>
   150bc:	mov	r2, #5
   150c0:	ldr	r1, [pc, #56]	; 15100 <fftwf_malloc@plt+0x3920>
   150c4:	ldr	r5, [r9, #188]	; 0xbc
   150c8:	bl	11588 <dcgettext@plt>
   150cc:	mov	r6, r0
   150d0:	mov	r0, r4
   150d4:	bl	11618 <snd_strerror@plt>
   150d8:	mov	r2, r6
   150dc:	str	r4, [sp]
   150e0:	mov	r1, #1
   150e4:	mov	r3, r0
   150e8:	mov	r0, r5
   150ec:	bl	116cc <__fprintf_chk@plt>
   150f0:	mov	r0, r4
   150f4:	add	sp, sp, #20
   150f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150fc:	muleq	r1, r0, r9
   15100:	andeq	r7, r1, r4, lsr #19
   15104:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15108:	subs	r6, r1, #0
   1510c:	sub	sp, sp, #12
   15110:	ble	15194 <fftwf_malloc@plt+0x39b4>
   15114:	ldr	r9, [pc, #352]	; 1527c <fftwf_malloc@plt+0x3a9c>
   15118:	mov	r5, r0
   1511c:	mov	r8, r2
   15120:	mov	r7, #0
   15124:	ldr	r1, [r5, #32]
   15128:	mov	r2, r6
   1512c:	add	r1, r1, r7
   15130:	ldr	r0, [r5]
   15134:	bl	11600 <snd_pcm_readi@plt>
   15138:	cmn	r0, #11
   1513c:	mov	r4, r0
   15140:	beq	151d4 <fftwf_malloc@plt+0x39f4>
   15144:	mvn	fp, r0
   15148:	cmp	r0, r6
   1514c:	lsr	fp, fp, #31
   15150:	movge	fp, #0
   15154:	cmp	fp, #0
   15158:	bne	151d4 <fftwf_malloc@plt+0x39f4>
   1515c:	cmn	r0, #32
   15160:	beq	151e4 <fftwf_malloc@plt+0x3a04>
   15164:	cmn	r0, #86	; 0x56
   15168:	beq	151a8 <fftwf_malloc@plt+0x39c8>
   1516c:	cmp	r0, #0
   15170:	blt	15238 <fftwf_malloc@plt+0x3a58>
   15174:	cmp	r4, #0
   15178:	ble	15124 <fftwf_malloc@plt+0x3944>
   1517c:	ldr	r3, [r5, #28]
   15180:	sub	r6, r6, r4
   15184:	cmp	r6, #0
   15188:	mul	r4, r3, r4
   1518c:	add	r7, r7, r4, lsr #3
   15190:	bgt	15124 <fftwf_malloc@plt+0x3944>
   15194:	mov	r4, #0
   15198:	mov	r0, r4
   1519c:	add	sp, sp, #12
   151a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151a4:	bl	116f0 <sleep@plt>
   151a8:	ldr	r0, [r5]
   151ac:	bl	1160c <snd_pcm_resume@plt>
   151b0:	mov	r4, r0
   151b4:	cmn	r4, #11
   151b8:	mov	r0, #1
   151bc:	beq	151a4 <fftwf_malloc@plt+0x39c4>
   151c0:	cmp	r4, #0
   151c4:	bge	15174 <fftwf_malloc@plt+0x3994>
   151c8:	ldr	r0, [r5]
   151cc:	bl	11498 <snd_pcm_prepare@plt>
   151d0:	b	15124 <fftwf_malloc@plt+0x3944>
   151d4:	mov	r1, #500	; 0x1f4
   151d8:	ldr	r0, [r5]
   151dc:	bl	115dc <snd_pcm_wait@plt>
   151e0:	b	15174 <fftwf_malloc@plt+0x3994>
   151e4:	ldr	r0, [r5]
   151e8:	bl	11498 <snd_pcm_prepare@plt>
   151ec:	mov	r2, #5
   151f0:	mov	r1, r9
   151f4:	mov	r0, fp
   151f8:	ldr	fp, [r8, #188]	; 0xbc
   151fc:	bl	11588 <dcgettext@plt>
   15200:	mov	sl, r0
   15204:	mov	r0, r4
   15208:	bl	11618 <snd_strerror@plt>
   1520c:	mov	r2, sl
   15210:	str	r4, [sp]
   15214:	mov	r1, #1
   15218:	mov	r3, r0
   1521c:	mov	r0, fp
   15220:	bl	116cc <__fprintf_chk@plt>
   15224:	ldrb	r3, [r8, #65]	; 0x41
   15228:	cmp	r3, #0
   1522c:	movne	r3, #1
   15230:	strbne	r3, [r8, #166]	; 0xa6
   15234:	b	15124 <fftwf_malloc@plt+0x3944>
   15238:	mov	r2, #5
   1523c:	ldr	r1, [pc, #60]	; 15280 <fftwf_malloc@plt+0x3aa0>
   15240:	mov	r0, fp
   15244:	ldr	r5, [r8, #188]	; 0xbc
   15248:	bl	11588 <dcgettext@plt>
   1524c:	mov	r6, r0
   15250:	mov	r0, r4
   15254:	bl	11618 <snd_strerror@plt>
   15258:	mov	r2, r6
   1525c:	str	r4, [sp]
   15260:	mov	r1, #1
   15264:	mov	r3, r0
   15268:	mov	r0, r5
   1526c:	bl	116cc <__fprintf_chk@plt>
   15270:	mov	r0, r4
   15274:	add	sp, sp, #12
   15278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1527c:	andeq	r7, r1, r4, asr #19
   15280:	ldrdeq	r7, [r1], -r8
   15284:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15288:	vpush	{d8}
   1528c:	ldr	r7, [pc, #1348]	; 157d8 <fftwf_malloc@plt+0x3ff8>
   15290:	mov	r3, #0
   15294:	mov	r4, r0
   15298:	add	fp, sp, #40	; 0x28
   1529c:	sub	sp, sp, #52	; 0x34
   152a0:	ldr	r2, [r7]
   152a4:	ldr	r0, [r1]
   152a8:	mov	r6, r1
   152ac:	str	r2, [fp, #-48]	; 0xffffffd0
   152b0:	str	r3, [fp, #-64]	; 0xffffffc0
   152b4:	str	r3, [fp, #-60]	; 0xffffffc4
   152b8:	str	r3, [fp, #-56]	; 0xffffffc8
   152bc:	str	r3, [fp, #-52]	; 0xffffffcc
   152c0:	bl	1154c <snd_pcm_name@plt>
   152c4:	ldr	r3, [pc, #1296]	; 157dc <fftwf_malloc@plt+0x3ffc>
   152c8:	ldr	r1, [r4, #20]
   152cc:	ldr	r2, [r3]
   152d0:	cmp	r2, #4
   152d4:	beq	152fc <fftwf_malloc@plt+0x3b1c>
   152d8:	cmp	r1, r2
   152dc:	mov	r9, r0
   152e0:	bne	152f0 <fftwf_malloc@plt+0x3b10>
   152e4:	b	15344 <fftwf_malloc@plt+0x3b64>
   152e8:	cmp	r1, r2
   152ec:	beq	15344 <fftwf_malloc@plt+0x3b64>
   152f0:	ldr	r2, [r3, #8]!
   152f4:	cmp	r2, #4
   152f8:	bne	152e8 <fftwf_malloc@plt+0x3b08>
   152fc:	mov	r2, #5
   15300:	ldr	r1, [pc, #1240]	; 157e0 <fftwf_malloc@plt+0x4000>
   15304:	mov	r0, #0
   15308:	ldr	r4, [r4, #188]	; 0xbc
   1530c:	bl	11588 <dcgettext@plt>
   15310:	mov	r1, #1
   15314:	mvn	r5, #21
   15318:	mov	r2, r0
   1531c:	mov	r0, r4
   15320:	bl	116cc <__fprintf_chk@plt>
   15324:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15328:	ldr	r3, [r7]
   1532c:	mov	r0, r5
   15330:	cmp	r2, r3
   15334:	bne	15bbc <fftwf_malloc@plt+0x43dc>
   15338:	sub	sp, fp, #40	; 0x28
   1533c:	vpop	{d8}
   15340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15344:	ldr	sl, [r3, #4]
   15348:	bl	11540 <snd_pcm_hw_params_sizeof@plt>
   1534c:	add	r0, r0, #7
   15350:	bic	r0, r0, #7
   15354:	sub	sp, sp, r0
   15358:	bl	11540 <snd_pcm_hw_params_sizeof@plt>
   1535c:	add	r8, sp, #16
   15360:	mov	r1, #0
   15364:	mov	r2, r0
   15368:	mov	r0, r8
   1536c:	bl	1151c <memset@plt>
   15370:	mov	r1, r8
   15374:	ldr	r0, [r6]
   15378:	bl	11420 <snd_pcm_hw_params_any@plt>
   1537c:	subs	r5, r0, #0
   15380:	blt	15604 <fftwf_malloc@plt+0x3e24>
   15384:	mov	r2, #3
   15388:	mov	r1, r8
   1538c:	ldr	r0, [r6]
   15390:	bl	116e4 <snd_pcm_hw_params_set_access@plt>
   15394:	subs	r5, r0, #0
   15398:	blt	15668 <fftwf_malloc@plt+0x3e88>
   1539c:	mov	r2, sl
   153a0:	mov	r1, r8
   153a4:	ldr	r0, [r6]
   153a8:	bl	117c8 <snd_pcm_hw_params_set_format@plt>
   153ac:	subs	r5, r0, #0
   153b0:	blt	1559c <fftwf_malloc@plt+0x3dbc>
   153b4:	ldr	r2, [r4, #4]
   153b8:	mov	r1, r8
   153bc:	ldr	r0, [r6]
   153c0:	bl	116fc <snd_pcm_hw_params_set_channels@plt>
   153c4:	subs	r5, r0, #0
   153c8:	blt	15698 <fftwf_malloc@plt+0x3eb8>
   153cc:	mov	r3, #0
   153d0:	mov	r2, r4
   153d4:	mov	r1, r8
   153d8:	ldr	r0, [r6]
   153dc:	vldr	s16, [r4]
   153e0:	bl	116d8 <snd_pcm_hw_params_set_rate_near@plt>
   153e4:	subs	r5, r0, #0
   153e8:	blt	15920 <fftwf_malloc@plt+0x4140>
   153ec:	vcvt.f32.u32	s14, s16
   153f0:	vldr	s15, [r4]
   153f4:	vldr	d5, [pc, #972]	; 157c8 <fftwf_malloc@plt+0x3fe8>
   153f8:	vcvt.f64.u32	d6, s15
   153fc:	vcvt.f64.f32	d7, s14
   15400:	vmul.f64	d5, d7, d5
   15404:	vcmpe.f64	d5, d6
   15408:	vmrs	APSR_nzcv, fpscr
   1540c:	bmi	15af8 <fftwf_malloc@plt+0x4318>
   15410:	vldr	d5, [pc, #952]	; 157d0 <fftwf_malloc@plt+0x3ff0>
   15414:	vmul.f64	d7, d7, d5
   15418:	vcmpe.f64	d6, d7
   1541c:	vmrs	APSR_nzcv, fpscr
   15420:	bmi	15af8 <fftwf_malloc@plt+0x4318>
   15424:	ldr	r3, [r4, #24]
   15428:	cmp	r3, #0
   1542c:	ble	1584c <fftwf_malloc@plt+0x406c>
   15430:	ldr	ip, [r4, #28]
   15434:	sub	r2, fp, #56	; 0x38
   15438:	cmp	ip, #0
   1543c:	asreq	ip, r3, #1
   15440:	streq	ip, [r4, #28]
   15444:	str	r2, [fp, #-72]	; 0xffffffb8
   15448:	mov	r2, #5
   1544c:	ldr	r1, [pc, #912]	; 157e4 <fftwf_malloc@plt+0x4004>
   15450:	mov	r0, #0
   15454:	str	ip, [fp, #-52]	; 0xffffffcc
   15458:	ldr	r5, [r4, #184]	; 0xb8
   1545c:	str	r3, [fp, #-56]	; 0xffffffc8
   15460:	bl	11588 <dcgettext@plt>
   15464:	ldrd	r2, [fp, #-56]	; 0xffffffc8
   15468:	mov	r1, #1
   1546c:	str	r2, [sp]
   15470:	mov	r2, r0
   15474:	mov	r0, r5
   15478:	bl	116cc <__fprintf_chk@plt>
   1547c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15480:	mov	r1, r8
   15484:	ldr	r0, [r6]
   15488:	bl	11744 <snd_pcm_hw_params_set_buffer_size_near@plt>
   1548c:	subs	r5, r0, #0
   15490:	blt	15a00 <fftwf_malloc@plt+0x4220>
   15494:	mov	r3, #0
   15498:	sub	r2, fp, #52	; 0x34
   1549c:	mov	r1, r8
   154a0:	ldr	r0, [r6]
   154a4:	bl	114a4 <snd_pcm_hw_params_set_period_size_near@plt>
   154a8:	subs	r5, r0, #0
   154ac:	blt	15770 <fftwf_malloc@plt+0x3f90>
   154b0:	mov	r1, r8
   154b4:	ldr	r0, [r6]
   154b8:	bl	11534 <snd_pcm_hw_params@plt>
   154bc:	cmp	r0, #0
   154c0:	blt	15b54 <fftwf_malloc@plt+0x4374>
   154c4:	mov	r2, #0
   154c8:	add	r1, r6, #4
   154cc:	mov	r0, r8
   154d0:	bl	11504 <snd_pcm_hw_params_get_period_size@plt>
   154d4:	subs	r5, r0, #0
   154d8:	blt	159b8 <fftwf_malloc@plt+0x41d8>
   154dc:	mov	r0, r8
   154e0:	add	r1, r6, #8
   154e4:	bl	1169c <snd_pcm_hw_params_get_buffer_size@plt>
   154e8:	subs	r5, r0, #0
   154ec:	blt	15704 <fftwf_malloc@plt+0x3f24>
   154f0:	ldrd	r2, [r6, #4]
   154f4:	cmp	r2, r3
   154f8:	beq	15bc0 <fftwf_malloc@plt+0x43e0>
   154fc:	mov	r2, #5
   15500:	ldr	r1, [pc, #736]	; 157e8 <fftwf_malloc@plt+0x4008>
   15504:	mov	r0, #0
   15508:	ldr	r5, [r4, #184]	; 0xb8
   1550c:	bl	11588 <dcgettext@plt>
   15510:	ldr	r2, [r6, #8]
   15514:	ldr	r3, [r6, #4]
   15518:	mov	r1, #1
   1551c:	str	r2, [sp]
   15520:	mov	r2, r0
   15524:	mov	r0, r5
   15528:	bl	116cc <__fprintf_chk@plt>
   1552c:	mov	r0, sl
   15530:	bl	1166c <snd_pcm_format_physical_width@plt>
   15534:	subs	r5, r0, #0
   15538:	blt	15aa8 <fftwf_malloc@plt+0x42c8>
   1553c:	ldr	r3, [r4, #4]
   15540:	str	r5, [r6, #24]
   15544:	ldr	r0, [r6, #4]
   15548:	mul	r5, r3, r5
   1554c:	str	r5, [r6, #28]
   15550:	mul	r0, r0, r5
   15554:	lsr	r0, r0, #3
   15558:	str	r0, [r6, #20]
   1555c:	bl	116b4 <malloc@plt>
   15560:	cmp	r0, #0
   15564:	str	r0, [r6, #32]
   15568:	movne	r5, #0
   1556c:	bne	15324 <fftwf_malloc@plt+0x3b44>
   15570:	mov	r2, #5
   15574:	ldr	r1, [pc, #624]	; 157ec <fftwf_malloc@plt+0x400c>
   15578:	ldr	r4, [r4, #188]	; 0xbc
   1557c:	bl	11588 <dcgettext@plt>
   15580:	ldr	r3, [r6, #20]
   15584:	mov	r1, #1
   15588:	mvn	r5, #11
   1558c:	mov	r2, r0
   15590:	mov	r0, r4
   15594:	bl	116cc <__fprintf_chk@plt>
   15598:	b	15324 <fftwf_malloc@plt+0x3b44>
   1559c:	mov	r2, #5
   155a0:	ldr	r1, [pc, #644]	; 1582c <fftwf_malloc@plt+0x404c>
   155a4:	mov	r0, #0
   155a8:	ldr	r6, [r4, #188]	; 0xbc
   155ac:	bl	11588 <dcgettext@plt>
   155b0:	mov	r1, #1
   155b4:	mov	r2, r0
   155b8:	mov	r0, r6
   155bc:	bl	116cc <__fprintf_chk@plt>
   155c0:	mov	r2, #5
   155c4:	ldr	r1, [pc, #548]	; 157f0 <fftwf_malloc@plt+0x4010>
   155c8:	mov	r0, #0
   155cc:	ldr	r4, [r4, #188]	; 0xbc
   155d0:	bl	11588 <dcgettext@plt>
   155d4:	mov	r6, r0
   155d8:	mov	r0, r5
   155dc:	bl	11618 <snd_strerror@plt>
   155e0:	mov	r2, r6
   155e4:	str	r5, [sp, #8]
   155e8:	str	r9, [sp]
   155ec:	mov	r3, sl
   155f0:	mov	r1, #1
   155f4:	str	r0, [sp, #4]
   155f8:	mov	r0, r4
   155fc:	bl	116cc <__fprintf_chk@plt>
   15600:	b	15324 <fftwf_malloc@plt+0x3b44>
   15604:	mov	r2, #5
   15608:	ldr	r1, [pc, #540]	; 1582c <fftwf_malloc@plt+0x404c>
   1560c:	mov	r0, #0
   15610:	ldr	r6, [r4, #188]	; 0xbc
   15614:	bl	11588 <dcgettext@plt>
   15618:	mov	r1, #1
   1561c:	mov	r2, r0
   15620:	mov	r0, r6
   15624:	bl	116cc <__fprintf_chk@plt>
   15628:	ldr	r1, [pc, #452]	; 157f4 <fftwf_malloc@plt+0x4014>
   1562c:	mov	r2, #5
   15630:	mov	r0, #0
   15634:	ldr	r4, [r4, #188]	; 0xbc
   15638:	bl	11588 <dcgettext@plt>
   1563c:	mov	r6, r0
   15640:	mov	r0, r5
   15644:	bl	11618 <snd_strerror@plt>
   15648:	mov	r2, r6
   1564c:	str	r5, [sp, #4]
   15650:	mov	r3, r9
   15654:	mov	r1, #1
   15658:	str	r0, [sp]
   1565c:	mov	r0, r4
   15660:	bl	116cc <__fprintf_chk@plt>
   15664:	b	15324 <fftwf_malloc@plt+0x3b44>
   15668:	mov	r2, #5
   1566c:	ldr	r1, [pc, #440]	; 1582c <fftwf_malloc@plt+0x404c>
   15670:	mov	r0, #0
   15674:	ldr	r6, [r4, #188]	; 0xbc
   15678:	bl	11588 <dcgettext@plt>
   1567c:	mov	r1, #1
   15680:	mov	r2, r0
   15684:	mov	r0, r6
   15688:	bl	116cc <__fprintf_chk@plt>
   1568c:	mov	r2, #5
   15690:	ldr	r1, [pc, #352]	; 157f8 <fftwf_malloc@plt+0x4018>
   15694:	b	15630 <fftwf_malloc@plt+0x3e50>
   15698:	mov	r2, #5
   1569c:	ldr	r1, [pc, #392]	; 1582c <fftwf_malloc@plt+0x404c>
   156a0:	mov	r0, #0
   156a4:	ldr	r6, [r4, #188]	; 0xbc
   156a8:	bl	11588 <dcgettext@plt>
   156ac:	mov	r1, #1
   156b0:	mov	r2, r0
   156b4:	mov	r0, r6
   156b8:	bl	116cc <__fprintf_chk@plt>
   156bc:	mov	r2, #5
   156c0:	ldr	r1, [pc, #308]	; 157fc <fftwf_malloc@plt+0x401c>
   156c4:	mov	r0, #0
   156c8:	ldr	r6, [r4, #188]	; 0xbc
   156cc:	bl	11588 <dcgettext@plt>
   156d0:	ldr	r4, [r4, #4]
   156d4:	mov	r8, r0
   156d8:	mov	r0, r5
   156dc:	bl	11618 <snd_strerror@plt>
   156e0:	mov	r3, r4
   156e4:	mov	r2, r8
   156e8:	str	r5, [sp, #8]
   156ec:	str	r9, [sp]
   156f0:	mov	r1, #1
   156f4:	str	r0, [sp, #4]
   156f8:	mov	r0, r6
   156fc:	bl	116cc <__fprintf_chk@plt>
   15700:	b	15324 <fftwf_malloc@plt+0x3b44>
   15704:	mov	r2, #5
   15708:	ldr	r1, [pc, #308]	; 15844 <fftwf_malloc@plt+0x4064>
   1570c:	mov	r0, #0
   15710:	ldr	r8, [r4, #188]	; 0xbc
   15714:	bl	11588 <dcgettext@plt>
   15718:	mov	r1, #1
   1571c:	mov	r2, r0
   15720:	mov	r0, r8
   15724:	bl	116cc <__fprintf_chk@plt>
   15728:	mov	r2, #5
   1572c:	ldr	r1, [pc, #204]	; 15800 <fftwf_malloc@plt+0x4020>
   15730:	mov	r0, #0
   15734:	ldr	r4, [r4, #188]	; 0xbc
   15738:	bl	11588 <dcgettext@plt>
   1573c:	ldr	r6, [r6, #8]
   15740:	mov	r8, r0
   15744:	mov	r0, r5
   15748:	bl	11618 <snd_strerror@plt>
   1574c:	mov	r3, r6
   15750:	mov	r2, r8
   15754:	str	r0, [sp, #4]
   15758:	str	r5, [sp, #8]
   1575c:	str	r9, [sp]
   15760:	mov	r1, #1
   15764:	mov	r0, r4
   15768:	bl	116cc <__fprintf_chk@plt>
   1576c:	b	15324 <fftwf_malloc@plt+0x3b44>
   15770:	mov	r2, #5
   15774:	ldr	r1, [pc, #176]	; 1582c <fftwf_malloc@plt+0x404c>
   15778:	mov	r0, #0
   1577c:	ldr	r6, [r4, #188]	; 0xbc
   15780:	bl	11588 <dcgettext@plt>
   15784:	mov	r1, #1
   15788:	mov	r2, r0
   1578c:	mov	r0, r6
   15790:	bl	116cc <__fprintf_chk@plt>
   15794:	mov	r2, #5
   15798:	ldr	r1, [pc, #100]	; 15804 <fftwf_malloc@plt+0x4024>
   1579c:	mov	r0, #0
   157a0:	ldr	r4, [r4, #188]	; 0xbc
   157a4:	bl	11588 <dcgettext@plt>
   157a8:	ldr	r8, [fp, #-52]	; 0xffffffcc
   157ac:	mov	r6, r0
   157b0:	mov	r0, r5
   157b4:	bl	11618 <snd_strerror@plt>
   157b8:	mov	r3, r8
   157bc:	mov	r2, r6
   157c0:	b	15754 <fftwf_malloc@plt+0x3f74>
   157c4:	nop			; (mov r0, r0)
   157c8:	stclgt	12, cr12, [ip], {205}	; 0xcd
   157cc:	svccc	0x00f0cccc
   157d0:	strbtvs	r6, [r6], -r6, ror #12
   157d4:	svccc	0x00ee6666
   157d8:	andeq	r8, r2, r8, ror sp
   157dc:	andeq	r9, r2, r8
   157e0:	strdeq	r7, [r1], -r8
   157e4:	andeq	r7, r1, r0, ror #22
   157e8:	muleq	r1, r4, ip
   157ec:	strdeq	r7, [r1], -r8
   157f0:	andeq	r7, r1, r4, ror #20
   157f4:	andeq	r7, r1, ip, lsr #20
   157f8:	andeq	r7, r1, r8, asr #20
   157fc:	andeq	r7, r1, r0, lsl #21
   15800:	andeq	r7, r1, r0, lsr ip
   15804:	andeq	r7, r1, r4, lsr #23
   15808:	andeq	sl, r7, r0, lsr #2
   1580c:	ldrdeq	r7, [r1], -ip
   15810:	andeq	r7, r1, r0, lsr #21
   15814:	andeq	r7, r1, r0, lsl ip
   15818:	andeq	r7, r1, r8, lsl #23
   1581c:			; <UNDEFINED> instruction: 0x00017cbc
   15820:	ldrdeq	r7, [r1], -r4
   15824:			; <UNDEFINED> instruction: 0x00017abc
   15828:	andeq	r7, r1, r0, ror #21
   1582c:	andeq	r7, r1, ip, lsl #20
   15830:	strdeq	r7, [r1], -r8
   15834:	andeq	r7, r1, r0, asr ip
   15838:	andeq	r7, r1, r8, ror ip
   1583c:	andeq	r7, r1, r0, asr #23
   15840:	andeq	r7, r1, r0, asr #22
   15844:	strdeq	r7, [r1], -ip
   15848:	andeq	r7, r1, r0, lsr #22
   1584c:	ldrb	r3, [r4, #65]	; 0x41
   15850:	movne	r3, #0
   15854:	andeq	r3, r3, #1
   15858:	cmp	r3, #0
   1585c:	bne	15968 <fftwf_malloc@plt+0x4188>
   15860:	sub	r1, fp, #64	; 0x40
   15864:	mov	r2, #0
   15868:	mov	r0, r8
   1586c:	bl	11678 <snd_pcm_hw_params_get_buffer_time_max@plt>
   15870:	cmp	r0, #0
   15874:	blt	15c14 <fftwf_malloc@plt+0x4434>
   15878:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1587c:	ldr	r2, [pc, #-124]	; 15808 <fftwf_malloc@plt+0x4028>
   15880:	mov	r1, r8
   15884:	cmp	r3, r2
   15888:	movhi	r3, r2
   1588c:	strhi	r2, [fp, #-64]	; 0xffffffc0
   15890:	lsr	ip, r3, #3
   15894:	sub	r2, fp, #64	; 0x40
   15898:	mov	r3, #0
   1589c:	ldr	r0, [r6]
   158a0:	str	ip, [fp, #-60]	; 0xffffffc4
   158a4:	bl	11714 <snd_pcm_hw_params_set_buffer_time_near@plt>
   158a8:	subs	r5, r0, #0
   158ac:	blt	15a54 <fftwf_malloc@plt+0x4274>
   158b0:	mov	r3, #0
   158b4:	sub	r2, fp, #60	; 0x3c
   158b8:	mov	r1, r8
   158bc:	ldr	r0, [r6]
   158c0:	bl	1148c <snd_pcm_hw_params_set_period_time_near@plt>
   158c4:	subs	r5, r0, #0
   158c8:	bge	154b0 <fftwf_malloc@plt+0x3cd0>
   158cc:	mov	r2, #5
   158d0:	ldr	r1, [pc, #-172]	; 1582c <fftwf_malloc@plt+0x404c>
   158d4:	mov	r0, #0
   158d8:	ldr	r6, [r4, #188]	; 0xbc
   158dc:	bl	11588 <dcgettext@plt>
   158e0:	mov	r1, #1
   158e4:	mov	r2, r0
   158e8:	mov	r0, r6
   158ec:	bl	116cc <__fprintf_chk@plt>
   158f0:	mov	r2, #5
   158f4:	ldr	r1, [pc, #-240]	; 1580c <fftwf_malloc@plt+0x402c>
   158f8:	mov	r0, #0
   158fc:	ldr	r4, [r4, #188]	; 0xbc
   15900:	bl	11588 <dcgettext@plt>
   15904:	ldr	r8, [fp, #-60]	; 0xffffffc4
   15908:	mov	r6, r0
   1590c:	mov	r0, r5
   15910:	bl	11618 <snd_strerror@plt>
   15914:	mov	r3, r8
   15918:	mov	r2, r6
   1591c:	b	15754 <fftwf_malloc@plt+0x3f74>
   15920:	mov	r2, #5
   15924:	ldr	r1, [pc, #-256]	; 1582c <fftwf_malloc@plt+0x404c>
   15928:	mov	r0, #0
   1592c:	ldr	r6, [r4, #188]	; 0xbc
   15930:	bl	11588 <dcgettext@plt>
   15934:	mov	r1, #1
   15938:	mov	r2, r0
   1593c:	mov	r0, r6
   15940:	bl	116cc <__fprintf_chk@plt>
   15944:	mov	r2, #5
   15948:	ldr	r1, [pc, #-320]	; 15810 <fftwf_malloc@plt+0x4030>
   1594c:	mov	r0, #0
   15950:	ldr	r6, [r4, #188]	; 0xbc
   15954:	bl	11588 <dcgettext@plt>
   15958:	ldr	r4, [r4]
   1595c:	mov	r8, r0
   15960:	mov	r0, r5
   15964:	b	156dc <fftwf_malloc@plt+0x3efc>
   15968:	sub	r3, fp, #56	; 0x38
   1596c:	mov	r1, r3
   15970:	mov	r0, r8
   15974:	str	r3, [fp, #-72]	; 0xffffffb8
   15978:	bl	11780 <snd_pcm_hw_params_get_buffer_size_min@plt>
   1597c:	cmp	r0, #0
   15980:	blt	15ccc <fftwf_malloc@plt+0x44ec>
   15984:	mov	r2, #0
   15988:	sub	r1, fp, #52	; 0x34
   1598c:	mov	r0, r8
   15990:	bl	115b8 <snd_pcm_hw_params_get_period_size_min@plt>
   15994:	cmp	r0, #0
   15998:	blt	15c84 <fftwf_malloc@plt+0x44a4>
   1599c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   159a0:	ldr	ip, [fp, #-52]	; 0xffffffcc
   159a4:	cmp	r3, #0
   159a8:	str	r3, [r4, #24]
   159ac:	str	ip, [r4, #28]
   159b0:	ble	15860 <fftwf_malloc@plt+0x4080>
   159b4:	b	15448 <fftwf_malloc@plt+0x3c68>
   159b8:	mov	r2, #5
   159bc:	ldr	r1, [pc, #-384]	; 15844 <fftwf_malloc@plt+0x4064>
   159c0:	mov	r0, #0
   159c4:	ldr	r8, [r4, #188]	; 0xbc
   159c8:	bl	11588 <dcgettext@plt>
   159cc:	mov	r1, #1
   159d0:	mov	r2, r0
   159d4:	mov	r0, r8
   159d8:	bl	116cc <__fprintf_chk@plt>
   159dc:	mov	r2, #5
   159e0:	ldr	r1, [pc, #-468]	; 15814 <fftwf_malloc@plt+0x4034>
   159e4:	mov	r0, #0
   159e8:	ldr	r4, [r4, #188]	; 0xbc
   159ec:	bl	11588 <dcgettext@plt>
   159f0:	ldr	r6, [r6, #4]
   159f4:	mov	r8, r0
   159f8:	mov	r0, r5
   159fc:	b	15748 <fftwf_malloc@plt+0x3f68>
   15a00:	mov	r2, #5
   15a04:	ldr	r1, [pc, #-480]	; 1582c <fftwf_malloc@plt+0x404c>
   15a08:	mov	r0, #0
   15a0c:	ldr	r6, [r4, #188]	; 0xbc
   15a10:	bl	11588 <dcgettext@plt>
   15a14:	mov	r1, #1
   15a18:	mov	r2, r0
   15a1c:	mov	r0, r6
   15a20:	bl	116cc <__fprintf_chk@plt>
   15a24:	mov	r2, #5
   15a28:	ldr	r1, [pc, #-536]	; 15818 <fftwf_malloc@plt+0x4038>
   15a2c:	mov	r0, #0
   15a30:	ldr	r4, [r4, #188]	; 0xbc
   15a34:	bl	11588 <dcgettext@plt>
   15a38:	ldr	r8, [fp, #-56]	; 0xffffffc8
   15a3c:	mov	r6, r0
   15a40:	mov	r0, r5
   15a44:	bl	11618 <snd_strerror@plt>
   15a48:	mov	r3, r8
   15a4c:	mov	r2, r6
   15a50:	b	15754 <fftwf_malloc@plt+0x3f74>
   15a54:	mov	r2, #5
   15a58:	ldr	r1, [pc, #-564]	; 1582c <fftwf_malloc@plt+0x404c>
   15a5c:	mov	r0, #0
   15a60:	ldr	r6, [r4, #188]	; 0xbc
   15a64:	bl	11588 <dcgettext@plt>
   15a68:	mov	r1, #1
   15a6c:	mov	r2, r0
   15a70:	mov	r0, r6
   15a74:	bl	116cc <__fprintf_chk@plt>
   15a78:	mov	r2, #5
   15a7c:	ldr	r1, [pc, #-584]	; 1583c <fftwf_malloc@plt+0x405c>
   15a80:	mov	r0, #0
   15a84:	ldr	r4, [r4, #188]	; 0xbc
   15a88:	bl	11588 <dcgettext@plt>
   15a8c:	ldr	r8, [fp, #-64]	; 0xffffffc0
   15a90:	mov	r6, r0
   15a94:	mov	r0, r5
   15a98:	bl	11618 <snd_strerror@plt>
   15a9c:	mov	r3, r8
   15aa0:	mov	r2, r6
   15aa4:	b	15754 <fftwf_malloc@plt+0x3f74>
   15aa8:	mov	r2, #5
   15aac:	ldr	r1, [pc, #-664]	; 1581c <fftwf_malloc@plt+0x403c>
   15ab0:	mov	r0, #0
   15ab4:	ldr	r6, [r4, #188]	; 0xbc
   15ab8:	bl	11588 <dcgettext@plt>
   15abc:	mov	r1, #1
   15ac0:	mov	r2, r0
   15ac4:	mov	r0, r6
   15ac8:	bl	116cc <__fprintf_chk@plt>
   15acc:	mov	r2, #5
   15ad0:	ldr	r1, [pc, #-696]	; 15820 <fftwf_malloc@plt+0x4040>
   15ad4:	mov	r0, #0
   15ad8:	ldr	r4, [r4, #188]	; 0xbc
   15adc:	bl	11588 <dcgettext@plt>
   15ae0:	mov	r3, r5
   15ae4:	mov	r1, #1
   15ae8:	mov	r2, r0
   15aec:	mov	r0, r4
   15af0:	bl	116cc <__fprintf_chk@plt>
   15af4:	b	15324 <fftwf_malloc@plt+0x3b44>
   15af8:	mov	r2, #5
   15afc:	ldr	r1, [pc, #-736]	; 15824 <fftwf_malloc@plt+0x4044>
   15b00:	mov	r0, #0
   15b04:	ldr	r5, [r4, #188]	; 0xbc
   15b08:	bl	11588 <dcgettext@plt>
   15b0c:	mov	r1, #1
   15b10:	mov	r2, r0
   15b14:	mov	r0, r5
   15b18:	bl	116cc <__fprintf_chk@plt>
   15b1c:	mov	r2, #5
   15b20:	ldr	r1, [pc, #-768]	; 15828 <fftwf_malloc@plt+0x4048>
   15b24:	mov	r0, #0
   15b28:	ldr	r6, [r4, #188]	; 0xbc
   15b2c:	bl	11588 <dcgettext@plt>
   15b30:	ldr	r2, [r4]
   15b34:	vmov	r3, s16
   15b38:	str	r2, [sp]
   15b3c:	mov	r1, #1
   15b40:	mvn	r5, #21
   15b44:	mov	r2, r0
   15b48:	mov	r0, r6
   15b4c:	bl	116cc <__fprintf_chk@plt>
   15b50:	b	15324 <fftwf_malloc@plt+0x3b44>
   15b54:	mov	r2, #5
   15b58:	ldr	r1, [pc, #-820]	; 1582c <fftwf_malloc@plt+0x404c>
   15b5c:	mov	r0, #0
   15b60:	ldr	r6, [r4, #188]	; 0xbc
   15b64:	bl	11588 <dcgettext@plt>
   15b68:	mov	r1, #1
   15b6c:	mov	r2, r0
   15b70:	mov	r0, r6
   15b74:	bl	116cc <__fprintf_chk@plt>
   15b78:	mov	r2, #5
   15b7c:	ldr	r1, [pc, #-852]	; 15830 <fftwf_malloc@plt+0x4050>
   15b80:	mov	r0, #0
   15b84:	ldr	r4, [r4, #188]	; 0xbc
   15b88:	bl	11588 <dcgettext@plt>
   15b8c:	mov	r6, r0
   15b90:	mov	r0, r5
   15b94:	bl	11618 <snd_strerror@plt>
   15b98:	str	r5, [sp, #4]
   15b9c:	mov	r2, r6
   15ba0:	mov	r3, r9
   15ba4:	mov	r1, #1
   15ba8:	mvn	r5, #21
   15bac:	str	r0, [sp]
   15bb0:	mov	r0, r4
   15bb4:	bl	116cc <__fprintf_chk@plt>
   15bb8:	b	15324 <fftwf_malloc@plt+0x3b44>
   15bbc:	bl	116c0 <__stack_chk_fail@plt>
   15bc0:	mov	r2, #5
   15bc4:	ldr	r1, [pc, #-920]	; 15834 <fftwf_malloc@plt+0x4054>
   15bc8:	mov	r0, #0
   15bcc:	ldr	r5, [r4, #188]	; 0xbc
   15bd0:	bl	11588 <dcgettext@plt>
   15bd4:	mov	r1, #1
   15bd8:	mov	r2, r0
   15bdc:	mov	r0, r5
   15be0:	bl	116cc <__fprintf_chk@plt>
   15be4:	mov	r2, #5
   15be8:	ldr	r1, [pc, #-952]	; 15838 <fftwf_malloc@plt+0x4058>
   15bec:	mov	r0, #0
   15bf0:	ldr	r4, [r4, #188]	; 0xbc
   15bf4:	bl	11588 <dcgettext@plt>
   15bf8:	ldr	r3, [r6, #4]
   15bfc:	mov	r1, #1
   15c00:	mvn	r5, #21
   15c04:	mov	r2, r0
   15c08:	mov	r0, r4
   15c0c:	bl	116cc <__fprintf_chk@plt>
   15c10:	b	15324 <fftwf_malloc@plt+0x3b44>
   15c14:	mov	r2, #5
   15c18:	ldr	r1, [pc, #-988]	; 15844 <fftwf_malloc@plt+0x4064>
   15c1c:	mov	r0, #0
   15c20:	ldr	r6, [r4, #188]	; 0xbc
   15c24:	bl	11588 <dcgettext@plt>
   15c28:	mov	r1, #1
   15c2c:	mov	r2, r0
   15c30:	mov	r0, r6
   15c34:	bl	116cc <__fprintf_chk@plt>
   15c38:	mov	r2, #5
   15c3c:	ldr	r1, [pc, #-1032]	; 1583c <fftwf_malloc@plt+0x405c>
   15c40:	mov	r0, #0
   15c44:	ldr	r4, [r4, #188]	; 0xbc
   15c48:	bl	11588 <dcgettext@plt>
   15c4c:	ldr	r8, [fp, #-64]	; 0xffffffc0
   15c50:	mov	r6, r0
   15c54:	mov	r0, r5
   15c58:	bl	11618 <snd_strerror@plt>
   15c5c:	str	r5, [sp, #8]
   15c60:	mov	r3, r8
   15c64:	mov	r2, r6
   15c68:	str	r9, [sp]
   15c6c:	mov	r1, #1
   15c70:	mvn	r5, #21
   15c74:	str	r0, [sp, #4]
   15c78:	mov	r0, r4
   15c7c:	bl	116cc <__fprintf_chk@plt>
   15c80:	b	15324 <fftwf_malloc@plt+0x3b44>
   15c84:	mov	r2, #5
   15c88:	ldr	r1, [pc, #-1100]	; 15844 <fftwf_malloc@plt+0x4064>
   15c8c:	mov	r0, #0
   15c90:	ldr	r6, [r4, #188]	; 0xbc
   15c94:	bl	11588 <dcgettext@plt>
   15c98:	mov	r1, #1
   15c9c:	mov	r2, r0
   15ca0:	mov	r0, r6
   15ca4:	bl	116cc <__fprintf_chk@plt>
   15ca8:	mov	r2, #5
   15cac:	ldr	r1, [pc, #-1140]	; 15840 <fftwf_malloc@plt+0x4060>
   15cb0:	mov	r0, #0
   15cb4:	ldr	r4, [r4, #188]	; 0xbc
   15cb8:	bl	11588 <dcgettext@plt>
   15cbc:	ldr	r8, [fp, #-52]	; 0xffffffcc
   15cc0:	mov	r6, r0
   15cc4:	mov	r0, r5
   15cc8:	b	15c58 <fftwf_malloc@plt+0x4478>
   15ccc:	mov	r2, #5
   15cd0:	ldr	r1, [pc, #-1172]	; 15844 <fftwf_malloc@plt+0x4064>
   15cd4:	mov	r0, #0
   15cd8:	ldr	r6, [r4, #188]	; 0xbc
   15cdc:	bl	11588 <dcgettext@plt>
   15ce0:	mov	r1, #1
   15ce4:	mov	r2, r0
   15ce8:	mov	r0, r6
   15cec:	bl	116cc <__fprintf_chk@plt>
   15cf0:	mov	r2, #5
   15cf4:	ldr	r1, [pc, #-1204]	; 15848 <fftwf_malloc@plt+0x4068>
   15cf8:	mov	r0, #0
   15cfc:	ldr	r4, [r4, #188]	; 0xbc
   15d00:	bl	11588 <dcgettext@plt>
   15d04:	ldr	r8, [fp, #-56]	; 0xffffffc8
   15d08:	mov	r6, r0
   15d0c:	mov	r0, r5
   15d10:	b	15c58 <fftwf_malloc@plt+0x4478>
   15d14:	ldr	r3, [pc, #1012]	; 16110 <fftwf_malloc@plt+0x4930>
   15d18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d1c:	sub	sp, sp, #52	; 0x34
   15d20:	ldr	r3, [r3]
   15d24:	ldr	r6, [r0, #184]	; 0xb8
   15d28:	mov	r4, r0
   15d2c:	mov	r2, #5
   15d30:	ldr	r1, [pc, #988]	; 16114 <fftwf_malloc@plt+0x4934>
   15d34:	mov	r0, #0
   15d38:	mov	r5, r0
   15d3c:	str	r3, [sp, #44]	; 0x2c
   15d40:	bl	11588 <dcgettext@plt>
   15d44:	ldr	r7, [pc, #972]	; 16118 <fftwf_malloc@plt+0x4938>
   15d48:	mov	r1, #1
   15d4c:	mov	r2, r0
   15d50:	mov	r0, r6
   15d54:	bl	116cc <__fprintf_chk@plt>
   15d58:	mov	r1, r5
   15d5c:	mov	r2, #36	; 0x24
   15d60:	add	r0, sp, #8
   15d64:	str	r5, [r7]
   15d68:	bl	1151c <memset@plt>
   15d6c:	mov	r3, r5
   15d70:	mov	r2, r5
   15d74:	ldr	r1, [r4, #76]	; 0x4c
   15d78:	add	r0, sp, #8
   15d7c:	bl	11564 <snd_pcm_open@plt>
   15d80:	subs	r6, r0, #0
   15d84:	bne	15f58 <fftwf_malloc@plt+0x4778>
   15d88:	add	r1, sp, #8
   15d8c:	mov	r0, r4
   15d90:	bl	15284 <fftwf_malloc@plt+0x3aa4>
   15d94:	subs	r8, r0, #0
   15d98:	strne	r8, [r7]
   15d9c:	bne	15f48 <fftwf_malloc@plt+0x4768>
   15da0:	ldr	r3, [r4, #80]	; 0x50
   15da4:	ldr	r5, [r4, #184]	; 0xb8
   15da8:	cmp	r3, #0
   15dac:	mov	r2, #5
   15db0:	beq	16030 <fftwf_malloc@plt+0x4850>
   15db4:	ldr	r1, [pc, #864]	; 1611c <fftwf_malloc@plt+0x493c>
   15db8:	bl	11588 <dcgettext@plt>
   15dbc:	ldr	r3, [r4, #80]	; 0x50
   15dc0:	mov	r1, #1
   15dc4:	mov	r2, r0
   15dc8:	mov	r0, r5
   15dcc:	bl	116cc <__fprintf_chk@plt>
   15dd0:	ldr	r1, [pc, #840]	; 16120 <fftwf_malloc@plt+0x4940>
   15dd4:	ldr	r0, [r4, #80]	; 0x50
   15dd8:	bl	114f8 <fopen@plt>
   15ddc:	cmp	r0, #0
   15de0:	mov	r5, r0
   15de4:	str	r0, [r4, #180]	; 0xb4
   15de8:	beq	1607c <fftwf_malloc@plt+0x489c>
   15dec:	mov	r2, r0
   15df0:	mov	r3, #1
   15df4:	ldr	r1, [r4, #80]	; 0x50
   15df8:	mov	r0, r4
   15dfc:	bl	12c04 <fftwf_malloc@plt+0x1424>
   15e00:	cmp	r0, #0
   15e04:	strne	r0, [r7]
   15e08:	bne	15f2c <fftwf_malloc@plt+0x474c>
   15e0c:	ldrb	r5, [r4, #65]	; 0x41
   15e10:	ldr	r6, [sp, #28]
   15e14:	cmp	r5, #0
   15e18:	bne	15fbc <fftwf_malloc@plt+0x47dc>
   15e1c:	ldr	r1, [sp, #36]	; 0x24
   15e20:	lsl	r0, r6, #3
   15e24:	bl	165c8 <fftwf_malloc@plt+0x4de8>
   15e28:	ldr	sl, [r4, #60]	; 0x3c
   15e2c:	cmp	sl, #0
   15e30:	mov	r9, r0
   15e34:	beq	15edc <fftwf_malloc@plt+0x46fc>
   15e38:	mov	r0, sl
   15e3c:	ldr	r1, [pc, #736]	; 16124 <fftwf_malloc@plt+0x4944>
   15e40:	bl	114f8 <fopen@plt>
   15e44:	mov	sl, r0
   15e48:	bl	117b0 <__errno_location@plt>
   15e4c:	cmp	sl, #0
   15e50:	mov	fp, r0
   15e54:	beq	160c4 <fftwf_malloc@plt+0x48e4>
   15e58:	mov	r2, r5
   15e5c:	mov	r1, #44	; 0x2c
   15e60:	mov	r0, sl
   15e64:	bl	115a0 <fseek@plt>
   15e68:	cmp	r0, #0
   15e6c:	beq	15edc <fftwf_malloc@plt+0x46fc>
   15e70:	b	160fc <fftwf_malloc@plt+0x491c>
   15e74:	ldr	r3, [r4, #60]	; 0x3c
   15e78:	cmp	r3, #0
   15e7c:	beq	15ea0 <fftwf_malloc@plt+0x46c0>
   15e80:	mov	r3, sl
   15e84:	mov	r2, r6
   15e88:	mov	r1, #1
   15e8c:	ldr	r0, [sp, #40]	; 0x28
   15e90:	bl	11660 <fwrite@plt>
   15e94:	cmp	r0, r6
   15e98:	bne	160bc <fftwf_malloc@plt+0x48dc>
   15e9c:	add	r8, r8, r6
   15ea0:	ldrb	r2, [r4, #176]	; 0xb0
   15ea4:	ldr	r3, [r4, #168]	; 0xa8
   15ea8:	cmp	r2, #0
   15eac:	add	r3, r3, #1
   15eb0:	str	r3, [r4, #168]	; 0xa8
   15eb4:	beq	15ec4 <fftwf_malloc@plt+0x46e4>
   15eb8:	ldr	r2, [r4, #172]	; 0xac
   15ebc:	cmp	r3, r2
   15ec0:	bcs	15ef8 <fftwf_malloc@plt+0x4718>
   15ec4:	mov	r2, r4
   15ec8:	mov	r1, r9
   15ecc:	add	r0, sp, #8
   15ed0:	bl	14f8c <fftwf_malloc@plt+0x37ac>
   15ed4:	subs	r5, r0, #0
   15ed8:	bne	15ef8 <fftwf_malloc@plt+0x4718>
   15edc:	mov	r3, r9
   15ee0:	mov	r2, r6
   15ee4:	ldr	r1, [sp, #40]	; 0x28
   15ee8:	mov	r0, r4
   15eec:	bl	1319c <fftwf_malloc@plt+0x19bc>
   15ef0:	subs	r5, r0, #0
   15ef4:	beq	15e74 <fftwf_malloc@plt+0x4694>
   15ef8:	ldr	r3, [r4, #60]	; 0x3c
   15efc:	cmp	r3, #0
   15f00:	beq	15f1c <fftwf_malloc@plt+0x473c>
   15f04:	mov	r2, r8
   15f08:	mov	r1, sl
   15f0c:	mov	r0, r4
   15f10:	bl	130c8 <fftwf_malloc@plt+0x18e8>
   15f14:	mov	r0, sl
   15f18:	bl	114b0 <fclose@plt>
   15f1c:	ldr	r0, [sp, #8]
   15f20:	bl	11528 <snd_pcm_drain@plt>
   15f24:	cmp	r5, #0
   15f28:	strlt	r5, [r7]
   15f2c:	ldr	r3, [r4, #80]	; 0x50
   15f30:	cmp	r3, #0
   15f34:	beq	15f40 <fftwf_malloc@plt+0x4760>
   15f38:	ldr	r0, [r4, #180]	; 0xb4
   15f3c:	bl	114b0 <fclose@plt>
   15f40:	ldr	r0, [sp, #40]	; 0x28
   15f44:	bl	11570 <free@plt>
   15f48:	ldr	r0, [sp, #8]
   15f4c:	bl	11438 <snd_pcm_close@plt>
   15f50:	ldr	r0, [pc, #448]	; 16118 <fftwf_malloc@plt+0x4938>
   15f54:	bl	11450 <pthread_exit@plt>
   15f58:	mov	r2, #5
   15f5c:	ldr	r1, [pc, #452]	; 16128 <fftwf_malloc@plt+0x4948>
   15f60:	mov	r0, r5
   15f64:	ldr	r8, [r4, #188]	; 0xbc
   15f68:	bl	11588 <dcgettext@plt>
   15f6c:	mov	r1, #1
   15f70:	mov	r2, r0
   15f74:	mov	r0, r8
   15f78:	bl	116cc <__fprintf_chk@plt>
   15f7c:	mov	r2, #5
   15f80:	ldr	r1, [pc, #420]	; 1612c <fftwf_malloc@plt+0x494c>
   15f84:	mov	r0, r5
   15f88:	ldr	r4, [r4, #188]	; 0xbc
   15f8c:	bl	11588 <dcgettext@plt>
   15f90:	mov	r5, r0
   15f94:	mov	r0, r6
   15f98:	bl	11618 <snd_strerror@plt>
   15f9c:	mov	r2, r5
   15fa0:	str	r6, [sp]
   15fa4:	mov	r1, #1
   15fa8:	mov	r3, r0
   15fac:	mov	r0, r4
   15fb0:	bl	116cc <__fprintf_chk@plt>
   15fb4:	str	r6, [r7]
   15fb8:	b	15f50 <fftwf_malloc@plt+0x4770>
   15fbc:	mov	r3, #1
   15fc0:	ldr	r8, [sp, #12]
   15fc4:	strb	r3, [r4, #165]	; 0xa5
   15fc8:	b	16008 <fftwf_malloc@plt+0x4828>
   15fcc:	mov	r2, r4
   15fd0:	mov	r1, r8
   15fd4:	add	r0, sp, #8
   15fd8:	bl	14f8c <fftwf_malloc@plt+0x37ac>
   15fdc:	subs	r5, r0, #0
   15fe0:	bne	16024 <fftwf_malloc@plt+0x4844>
   15fe4:	ldrb	r3, [r4, #166]	; 0xa6
   15fe8:	cmp	r3, #0
   15fec:	bne	16024 <fftwf_malloc@plt+0x4844>
   15ff0:	ldr	r5, [r4, #120]	; 0x78
   15ff4:	cmp	r5, #0
   15ff8:	beq	16024 <fftwf_malloc@plt+0x4844>
   15ffc:	ldr	r3, [r4, #168]	; 0xa8
   16000:	add	r3, r3, #1
   16004:	str	r3, [r4, #168]	; 0xa8
   16008:	mov	r3, r8
   1600c:	mov	r2, r6
   16010:	ldr	r1, [sp, #40]	; 0x28
   16014:	mov	r0, r4
   16018:	bl	13be4 <fftwf_malloc@plt+0x2404>
   1601c:	subs	r5, r0, #0
   16020:	beq	15fcc <fftwf_malloc@plt+0x47ec>
   16024:	mov	r3, #0
   16028:	strb	r3, [r4, #165]	; 0xa5
   1602c:	b	15f24 <fftwf_malloc@plt+0x4744>
   16030:	ldr	r1, [pc, #248]	; 16130 <fftwf_malloc@plt+0x4950>
   16034:	bl	11588 <dcgettext@plt>
   16038:	mov	r1, #1
   1603c:	mov	r2, r0
   16040:	mov	r0, r5
   16044:	bl	116cc <__fprintf_chk@plt>
   16048:	ldr	r3, [r4, #48]	; 0x30
   1604c:	mov	r2, #5
   16050:	cmp	r3, #0
   16054:	mov	r0, r8
   16058:	ldreq	r1, [pc, #212]	; 16134 <fftwf_malloc@plt+0x4954>
   1605c:	ldrne	r1, [pc, #212]	; 16138 <fftwf_malloc@plt+0x4958>
   16060:	ldr	r5, [r4, #184]	; 0xb8
   16064:	bl	11588 <dcgettext@plt>
   16068:	mov	r1, #1
   1606c:	mov	r2, r0
   16070:	mov	r0, r5
   16074:	bl	116cc <__fprintf_chk@plt>
   16078:	b	15e0c <fftwf_malloc@plt+0x462c>
   1607c:	bl	117b0 <__errno_location@plt>
   16080:	mov	r2, #5
   16084:	ldr	r1, [pc, #176]	; 1613c <fftwf_malloc@plt+0x495c>
   16088:	ldr	r6, [r4, #188]	; 0xbc
   1608c:	ldr	r3, [r0]
   16090:	mov	r0, r5
   16094:	rsb	r5, r3, #0
   16098:	bl	11588 <dcgettext@plt>
   1609c:	str	r5, [sp]
   160a0:	mov	r1, #1
   160a4:	ldr	r3, [r4, #80]	; 0x50
   160a8:	mov	r2, r0
   160ac:	mov	r0, r6
   160b0:	bl	116cc <__fprintf_chk@plt>
   160b4:	str	r5, [r7]
   160b8:	b	15f40 <fftwf_malloc@plt+0x4760>
   160bc:	mvn	r5, #4
   160c0:	b	15ef8 <fftwf_malloc@plt+0x4718>
   160c4:	ldr	r5, [r0]
   160c8:	mov	r2, #5
   160cc:	mov	r0, sl
   160d0:	ldr	r1, [pc, #100]	; 1613c <fftwf_malloc@plt+0x495c>
   160d4:	ldr	r6, [r4, #188]	; 0xbc
   160d8:	bl	11588 <dcgettext@plt>
   160dc:	rsb	r5, r5, #0
   160e0:	str	r5, [sp]
   160e4:	mov	r1, #1
   160e8:	ldr	r3, [r4, #60]	; 0x3c
   160ec:	mov	r2, r0
   160f0:	mov	r0, r6
   160f4:	bl	116cc <__fprintf_chk@plt>
   160f8:	b	15f24 <fftwf_malloc@plt+0x4744>
   160fc:	ldr	r5, [fp]
   16100:	mov	r0, sl
   16104:	rsb	r5, r5, #0
   16108:	bl	114b0 <fclose@plt>
   1610c:	b	15f24 <fftwf_malloc@plt+0x4744>
   16110:	andeq	r8, r2, r8, ror sp
   16114:	andeq	r7, r1, r8, lsl sp
   16118:	strheq	r9, [r2], -ip
   1611c:	muleq	r1, r0, sp
   16120:	ldrdeq	r7, [r1], -r4
   16124:	andeq	r7, r1, r0, asr #4
   16128:	andeq	r7, r1, ip, lsr sp
   1612c:			; <UNDEFINED> instruction: 0x000179bc
   16130:	andeq	r7, r1, r0, ror #26
   16134:	andeq	r7, r1, r4, lsl #27
   16138:	andeq	r7, r1, r0, lsr #19
   1613c:	andeq	r7, r1, r4, asr #4
   16140:	ldr	r3, [pc, #1112]	; 165a0 <fftwf_malloc@plt+0x4dc0>
   16144:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16148:	sub	sp, sp, #636	; 0x27c
   1614c:	ldr	r3, [r3]
   16150:	mov	r7, r0
   16154:	str	r0, [sp, #8]
   16158:	mov	r1, #0
   1615c:	mov	r0, #1
   16160:	str	r3, [sp, #628]	; 0x274
   16164:	bl	11774 <pthread_setcancelstate@plt>
   16168:	mov	r2, #5
   1616c:	ldr	r1, [pc, #1072]	; 165a4 <fftwf_malloc@plt+0x4dc4>
   16170:	mov	r0, #0
   16174:	ldr	r4, [r7, #184]	; 0xb8
   16178:	bl	11588 <dcgettext@plt>
   1617c:	ldr	r5, [pc, #1060]	; 165a8 <fftwf_malloc@plt+0x4dc8>
   16180:	mov	r1, #1
   16184:	mov	r2, r0
   16188:	mov	r0, r4
   1618c:	mov	r4, #0
   16190:	bl	116cc <__fprintf_chk@plt>
   16194:	mov	r1, r4
   16198:	mov	r2, #36	; 0x24
   1619c:	add	r0, sp, #28
   161a0:	str	r4, [r5]
   161a4:	bl	1151c <memset@plt>
   161a8:	mov	r3, r4
   161ac:	ldr	r1, [r7, #100]	; 0x64
   161b0:	add	r0, sp, #28
   161b4:	mov	r2, #1
   161b8:	bl	11564 <snd_pcm_open@plt>
   161bc:	subs	r6, r0, #0
   161c0:	beq	16230 <fftwf_malloc@plt+0x4a50>
   161c4:	mov	r2, #5
   161c8:	ldr	r1, [pc, #988]	; 165ac <fftwf_malloc@plt+0x4dcc>
   161cc:	mov	r0, r4
   161d0:	mov	r8, r7
   161d4:	ldr	r7, [r7, #188]	; 0xbc
   161d8:	bl	11588 <dcgettext@plt>
   161dc:	mov	r1, #1
   161e0:	mov	r2, r0
   161e4:	mov	r0, r7
   161e8:	bl	116cc <__fprintf_chk@plt>
   161ec:	mov	r2, #5
   161f0:	ldr	r1, [pc, #952]	; 165b0 <fftwf_malloc@plt+0x4dd0>
   161f4:	mov	r0, r4
   161f8:	ldr	r4, [r8, #188]	; 0xbc
   161fc:	bl	11588 <dcgettext@plt>
   16200:	mov	r7, r0
   16204:	mov	r0, r6
   16208:	bl	11618 <snd_strerror@plt>
   1620c:	mov	r2, r7
   16210:	str	r6, [sp]
   16214:	mov	r1, #1
   16218:	mov	r3, r0
   1621c:	mov	r0, r4
   16220:	bl	116cc <__fprintf_chk@plt>
   16224:	str	r6, [r5]
   16228:	ldr	r0, [pc, #888]	; 165a8 <fftwf_malloc@plt+0x4dc8>
   1622c:	bl	11450 <pthread_exit@plt>
   16230:	add	r1, sp, #28
   16234:	ldr	r0, [sp, #8]
   16238:	bl	15284 <fftwf_malloc@plt+0x3aa4>
   1623c:	subs	r4, r0, #0
   16240:	strne	r4, [r5]
   16244:	beq	16254 <fftwf_malloc@plt+0x4a74>
   16248:	ldr	r0, [sp, #28]
   1624c:	bl	11438 <snd_pcm_close@plt>
   16250:	b	16228 <fftwf_malloc@plt+0x4a48>
   16254:	mov	r1, r4
   16258:	bl	11774 <pthread_setcancelstate@plt>
   1625c:	mov	r1, r4
   16260:	mov	r0, r4
   16264:	bl	11798 <pthread_setcanceltype@plt>
   16268:	ldr	r3, [sp, #28]
   1626c:	mov	r1, r4
   16270:	add	r0, sp, #64	; 0x40
   16274:	str	r3, [sp, #20]
   16278:	bl	11414 <__sigsetjmp@plt>
   1627c:	subs	r4, r0, #0
   16280:	bne	16518 <fftwf_malloc@plt+0x4d38>
   16284:	add	r0, sp, #64	; 0x40
   16288:	bl	11720 <__pthread_register_cancel@plt>
   1628c:	ldr	r3, [sp, #60]	; 0x3c
   16290:	mov	r1, r4
   16294:	add	r0, sp, #344	; 0x158
   16298:	str	r3, [sp, #16]
   1629c:	bl	11414 <__sigsetjmp@plt>
   162a0:	subs	r7, r0, #0
   162a4:	bne	16504 <fftwf_malloc@plt+0x4d24>
   162a8:	add	r0, sp, #344	; 0x158
   162ac:	bl	11720 <__pthread_register_cancel@plt>
   162b0:	ldr	r9, [sp, #8]
   162b4:	mov	r2, #5
   162b8:	ldr	r1, [pc, #756]	; 165b4 <fftwf_malloc@plt+0x4dd4>
   162bc:	mov	r0, r7
   162c0:	ldr	r4, [r9, #184]	; 0xb8
   162c4:	bl	11588 <dcgettext@plt>
   162c8:	mov	r1, #1
   162cc:	mov	r2, r0
   162d0:	mov	r0, r4
   162d4:	bl	116cc <__fprintf_chk@plt>
   162d8:	ldrb	r4, [r9, #65]	; 0x41
   162dc:	ldr	r3, [r9, #12]
   162e0:	ldr	r5, [r9, #8]
   162e4:	cmp	r4, #0
   162e8:	ldr	r0, [r9, #104]	; 0x68
   162ec:	mul	r5, r5, r3
   162f0:	beq	16418 <fftwf_malloc@plt+0x4c38>
   162f4:	ldr	r8, [sp, #32]
   162f8:	ldr	r6, [sp, #48]	; 0x30
   162fc:	bl	11684 <remove@plt>
   16300:	ldr	r1, [pc, #688]	; 165b8 <fftwf_malloc@plt+0x4dd8>
   16304:	ldr	r0, [r9, #104]	; 0x68
   16308:	bl	114f8 <fopen@plt>
   1630c:	mov	sl, r0
   16310:	bl	117b0 <__errno_location@plt>
   16314:	cmp	sl, #0
   16318:	ldr	r9, [r0]
   1631c:	moveq	r0, sl
   16320:	rsb	r9, r9, #0
   16324:	beq	16530 <fftwf_malloc@plt+0x4d50>
   16328:	mov	r2, r7
   1632c:	mov	r1, #44	; 0x2c
   16330:	mov	r0, sl
   16334:	bl	115a0 <fseek@plt>
   16338:	subs	r4, r0, #0
   1633c:	bne	163e8 <fftwf_malloc@plt+0x4c08>
   16340:	ldr	r3, [sp, #8]
   16344:	mov	r7, #1
   16348:	str	r6, [sp, #12]
   1634c:	strb	r7, [r3, #164]	; 0xa4
   16350:	mov	fp, r3
   16354:	b	163c4 <fftwf_malloc@plt+0x4be4>
   16358:	mov	r2, fp
   1635c:	mov	r1, r8
   16360:	add	r0, sp, #28
   16364:	bl	15104 <fftwf_malloc@plt+0x3924>
   16368:	subs	r9, r0, #0
   1636c:	bne	163cc <fftwf_malloc@plt+0x4bec>
   16370:	ldrb	r3, [fp, #166]	; 0xa6
   16374:	cmp	r3, #0
   16378:	bne	163cc <fftwf_malloc@plt+0x4bec>
   1637c:	mov	r2, r8
   16380:	ldr	r1, [sp, #60]	; 0x3c
   16384:	mov	r0, fp
   16388:	bl	137fc <fftwf_malloc@plt+0x201c>
   1638c:	cmp	r0, #0
   16390:	bne	1657c <fftwf_malloc@plt+0x4d9c>
   16394:	ldrb	r3, [fp, #165]	; 0xa5
   16398:	cmp	r3, #0
   1639c:	beq	163cc <fftwf_malloc@plt+0x4bec>
   163a0:	mov	r3, sl
   163a4:	mov	r2, r6
   163a8:	mov	r1, r7
   163ac:	ldr	r0, [sp, #60]	; 0x3c
   163b0:	bl	11660 <fwrite@plt>
   163b4:	cmp	r6, r0
   163b8:	bne	16584 <fftwf_malloc@plt+0x4da4>
   163bc:	ldr	r3, [sp, #12]
   163c0:	add	r4, r4, r3
   163c4:	cmp	r4, r5
   163c8:	blt	16358 <fftwf_malloc@plt+0x4b78>
   163cc:	ldr	r1, [sp, #8]
   163d0:	mov	r3, #0
   163d4:	mov	r0, r1
   163d8:	strb	r3, [r1, #164]	; 0xa4
   163dc:	mov	r2, r4
   163e0:	mov	r1, sl
   163e4:	bl	130c8 <fftwf_malloc@plt+0x18e8>
   163e8:	mov	r0, sl
   163ec:	bl	114b0 <fclose@plt>
   163f0:	add	r0, sp, #344	; 0x158
   163f4:	bl	1172c <__pthread_unregister_cancel@plt>
   163f8:	add	r0, sp, #64	; 0x40
   163fc:	bl	1172c <__pthread_unregister_cancel@plt>
   16400:	cmp	r9, #0
   16404:	bne	1658c <fftwf_malloc@plt+0x4dac>
   16408:	ldr	r0, [sp, #28]
   1640c:	bl	11528 <snd_pcm_drain@plt>
   16410:	ldr	r0, [pc, #400]	; 165a8 <fftwf_malloc@plt+0x4dc8>
   16414:	bl	11450 <pthread_exit@plt>
   16418:	bl	11684 <remove@plt>
   1641c:	ldr	r3, [sp, #8]
   16420:	ldr	r1, [pc, #400]	; 165b8 <fftwf_malloc@plt+0x4dd8>
   16424:	ldr	r0, [r3, #104]	; 0x68
   16428:	bl	114f8 <fopen@plt>
   1642c:	mov	r7, r0
   16430:	bl	117b0 <__errno_location@plt>
   16434:	cmp	r7, #0
   16438:	ldr	r9, [r0]
   1643c:	mov	r8, r0
   16440:	rsb	r9, r9, #0
   16444:	beq	1652c <fftwf_malloc@plt+0x4d4c>
   16448:	mov	r2, r4
   1644c:	mov	r1, #44	; 0x2c
   16450:	mov	r0, r7
   16454:	bl	115a0 <fseek@plt>
   16458:	subs	r6, r0, #0
   1645c:	bne	16568 <fftwf_malloc@plt+0x4d88>
   16460:	ldr	sl, [sp, #8]
   16464:	mov	r8, #1
   16468:	cmp	r5, #0
   1646c:	ble	164e8 <fftwf_malloc@plt+0x4d08>
   16470:	ldr	r4, [sp, #48]	; 0x30
   16474:	ldr	r1, [sp, #56]	; 0x38
   16478:	cmp	r5, r4
   1647c:	movcc	r4, r5
   16480:	lsl	r0, r4, #3
   16484:	bl	165c8 <fftwf_malloc@plt+0x4de8>
   16488:	mov	r2, sl
   1648c:	mov	r1, r0
   16490:	add	r0, sp, #28
   16494:	bl	15104 <fftwf_malloc@plt+0x3924>
   16498:	subs	r9, r0, #0
   1649c:	bne	164e8 <fftwf_malloc@plt+0x4d08>
   164a0:	mov	r3, r7
   164a4:	mov	r2, r4
   164a8:	mov	r1, r8
   164ac:	ldr	r0, [sp, #60]	; 0x3c
   164b0:	bl	11660 <fwrite@plt>
   164b4:	cmp	r4, r0
   164b8:	bne	16560 <fftwf_malloc@plt+0x4d80>
   164bc:	ldrb	r2, [sl, #176]	; 0xb0
   164c0:	ldr	r3, [sl, #168]	; 0xa8
   164c4:	add	r6, r6, r4
   164c8:	add	r3, r3, #1
   164cc:	cmp	r2, #0
   164d0:	sub	r5, r5, r4
   164d4:	str	r3, [sl, #168]	; 0xa8
   164d8:	beq	16468 <fftwf_malloc@plt+0x4c88>
   164dc:	ldr	r2, [sl, #172]	; 0xac
   164e0:	cmp	r3, r2
   164e4:	bcc	16468 <fftwf_malloc@plt+0x4c88>
   164e8:	mov	r2, r6
   164ec:	ldr	r0, [sp, #8]
   164f0:	mov	r1, r7
   164f4:	bl	130c8 <fftwf_malloc@plt+0x18e8>
   164f8:	mov	r0, r7
   164fc:	bl	114b0 <fclose@plt>
   16500:	b	163f0 <fftwf_malloc@plt+0x4c10>
   16504:	ldr	r0, [sp, #16]
   16508:	ldr	r3, [pc, #172]	; 165bc <fftwf_malloc@plt+0x4ddc>
   1650c:	blx	r3
   16510:	add	r0, sp, #344	; 0x158
   16514:	bl	117a4 <__pthread_unwind_next@plt>
   16518:	ldr	r0, [sp, #20]
   1651c:	ldr	r3, [pc, #156]	; 165c0 <fftwf_malloc@plt+0x4de0>
   16520:	blx	r3
   16524:	add	r0, sp, #64	; 0x40
   16528:	bl	117a4 <__pthread_unwind_next@plt>
   1652c:	mov	r0, r7
   16530:	ldr	r5, [sp, #8]
   16534:	mov	r2, #5
   16538:	ldr	r1, [pc, #132]	; 165c4 <fftwf_malloc@plt+0x4de4>
   1653c:	ldr	r4, [r5, #188]	; 0xbc
   16540:	bl	11588 <dcgettext@plt>
   16544:	str	r9, [sp]
   16548:	mov	r1, #1
   1654c:	ldr	r3, [r5, #104]	; 0x68
   16550:	mov	r2, r0
   16554:	mov	r0, r4
   16558:	bl	116cc <__fprintf_chk@plt>
   1655c:	b	163f0 <fftwf_malloc@plt+0x4c10>
   16560:	mvn	r9, #4
   16564:	b	164e8 <fftwf_malloc@plt+0x4d08>
   16568:	ldr	r9, [r8]
   1656c:	mov	r0, r7
   16570:	rsb	r9, r9, #0
   16574:	bl	114b0 <fclose@plt>
   16578:	b	163f0 <fftwf_malloc@plt+0x4c10>
   1657c:	mov	r9, r0
   16580:	b	163cc <fftwf_malloc@plt+0x4bec>
   16584:	mvn	r9, #4
   16588:	b	163cc <fftwf_malloc@plt+0x4bec>
   1658c:	ldr	r3, [pc, #20]	; 165a8 <fftwf_malloc@plt+0x4dc8>
   16590:	ldr	r0, [sp, #60]	; 0x3c
   16594:	str	r9, [r3]
   16598:	bl	11570 <free@plt>
   1659c:	b	16248 <fftwf_malloc@plt+0x4a68>
   165a0:	andeq	r8, r2, r8, ror sp
   165a4:			; <UNDEFINED> instruction: 0x00017db0
   165a8:	strheq	r9, [r2], -r8
   165ac:	ldrdeq	r7, [r1], -r4
   165b0:			; <UNDEFINED> instruction: 0x000179bc
   165b4:	strdeq	r7, [r1], -r8
   165b8:	andeq	r7, r1, r0, asr #4
   165bc:	andeq	r1, r1, r0, ror r5
   165c0:	andeq	r4, r1, r8, lsl #31
   165c4:	andeq	r7, r1, r4, asr #4
   165c8:	subs	r2, r1, #1
   165cc:	bxeq	lr
   165d0:	bcc	167a8 <fftwf_malloc@plt+0x4fc8>
   165d4:	cmp	r0, r1
   165d8:	bls	1678c <fftwf_malloc@plt+0x4fac>
   165dc:	tst	r1, r2
   165e0:	beq	16798 <fftwf_malloc@plt+0x4fb8>
   165e4:	clz	r3, r0
   165e8:	clz	r2, r1
   165ec:	sub	r3, r2, r3
   165f0:	rsbs	r3, r3, #31
   165f4:	addne	r3, r3, r3, lsl #1
   165f8:	mov	r2, #0
   165fc:	addne	pc, pc, r3, lsl #2
   16600:	nop			; (mov r0, r0)
   16604:	cmp	r0, r1, lsl #31
   16608:	adc	r2, r2, r2
   1660c:	subcs	r0, r0, r1, lsl #31
   16610:	cmp	r0, r1, lsl #30
   16614:	adc	r2, r2, r2
   16618:	subcs	r0, r0, r1, lsl #30
   1661c:	cmp	r0, r1, lsl #29
   16620:	adc	r2, r2, r2
   16624:	subcs	r0, r0, r1, lsl #29
   16628:	cmp	r0, r1, lsl #28
   1662c:	adc	r2, r2, r2
   16630:	subcs	r0, r0, r1, lsl #28
   16634:	cmp	r0, r1, lsl #27
   16638:	adc	r2, r2, r2
   1663c:	subcs	r0, r0, r1, lsl #27
   16640:	cmp	r0, r1, lsl #26
   16644:	adc	r2, r2, r2
   16648:	subcs	r0, r0, r1, lsl #26
   1664c:	cmp	r0, r1, lsl #25
   16650:	adc	r2, r2, r2
   16654:	subcs	r0, r0, r1, lsl #25
   16658:	cmp	r0, r1, lsl #24
   1665c:	adc	r2, r2, r2
   16660:	subcs	r0, r0, r1, lsl #24
   16664:	cmp	r0, r1, lsl #23
   16668:	adc	r2, r2, r2
   1666c:	subcs	r0, r0, r1, lsl #23
   16670:	cmp	r0, r1, lsl #22
   16674:	adc	r2, r2, r2
   16678:	subcs	r0, r0, r1, lsl #22
   1667c:	cmp	r0, r1, lsl #21
   16680:	adc	r2, r2, r2
   16684:	subcs	r0, r0, r1, lsl #21
   16688:	cmp	r0, r1, lsl #20
   1668c:	adc	r2, r2, r2
   16690:	subcs	r0, r0, r1, lsl #20
   16694:	cmp	r0, r1, lsl #19
   16698:	adc	r2, r2, r2
   1669c:	subcs	r0, r0, r1, lsl #19
   166a0:	cmp	r0, r1, lsl #18
   166a4:	adc	r2, r2, r2
   166a8:	subcs	r0, r0, r1, lsl #18
   166ac:	cmp	r0, r1, lsl #17
   166b0:	adc	r2, r2, r2
   166b4:	subcs	r0, r0, r1, lsl #17
   166b8:	cmp	r0, r1, lsl #16
   166bc:	adc	r2, r2, r2
   166c0:	subcs	r0, r0, r1, lsl #16
   166c4:	cmp	r0, r1, lsl #15
   166c8:	adc	r2, r2, r2
   166cc:	subcs	r0, r0, r1, lsl #15
   166d0:	cmp	r0, r1, lsl #14
   166d4:	adc	r2, r2, r2
   166d8:	subcs	r0, r0, r1, lsl #14
   166dc:	cmp	r0, r1, lsl #13
   166e0:	adc	r2, r2, r2
   166e4:	subcs	r0, r0, r1, lsl #13
   166e8:	cmp	r0, r1, lsl #12
   166ec:	adc	r2, r2, r2
   166f0:	subcs	r0, r0, r1, lsl #12
   166f4:	cmp	r0, r1, lsl #11
   166f8:	adc	r2, r2, r2
   166fc:	subcs	r0, r0, r1, lsl #11
   16700:	cmp	r0, r1, lsl #10
   16704:	adc	r2, r2, r2
   16708:	subcs	r0, r0, r1, lsl #10
   1670c:	cmp	r0, r1, lsl #9
   16710:	adc	r2, r2, r2
   16714:	subcs	r0, r0, r1, lsl #9
   16718:	cmp	r0, r1, lsl #8
   1671c:	adc	r2, r2, r2
   16720:	subcs	r0, r0, r1, lsl #8
   16724:	cmp	r0, r1, lsl #7
   16728:	adc	r2, r2, r2
   1672c:	subcs	r0, r0, r1, lsl #7
   16730:	cmp	r0, r1, lsl #6
   16734:	adc	r2, r2, r2
   16738:	subcs	r0, r0, r1, lsl #6
   1673c:	cmp	r0, r1, lsl #5
   16740:	adc	r2, r2, r2
   16744:	subcs	r0, r0, r1, lsl #5
   16748:	cmp	r0, r1, lsl #4
   1674c:	adc	r2, r2, r2
   16750:	subcs	r0, r0, r1, lsl #4
   16754:	cmp	r0, r1, lsl #3
   16758:	adc	r2, r2, r2
   1675c:	subcs	r0, r0, r1, lsl #3
   16760:	cmp	r0, r1, lsl #2
   16764:	adc	r2, r2, r2
   16768:	subcs	r0, r0, r1, lsl #2
   1676c:	cmp	r0, r1, lsl #1
   16770:	adc	r2, r2, r2
   16774:	subcs	r0, r0, r1, lsl #1
   16778:	cmp	r0, r1
   1677c:	adc	r2, r2, r2
   16780:	subcs	r0, r0, r1
   16784:	mov	r0, r2
   16788:	bx	lr
   1678c:	moveq	r0, #1
   16790:	movne	r0, #0
   16794:	bx	lr
   16798:	clz	r2, r1
   1679c:	rsb	r2, r2, #31
   167a0:	lsr	r0, r0, r2
   167a4:	bx	lr
   167a8:	cmp	r0, #0
   167ac:	mvnne	r0, #0
   167b0:	b	16a14 <fftwf_malloc@plt+0x5234>
   167b4:	cmp	r1, #0
   167b8:	beq	167a8 <fftwf_malloc@plt+0x4fc8>
   167bc:	push	{r0, r1, lr}
   167c0:	bl	165c8 <fftwf_malloc@plt+0x4de8>
   167c4:	pop	{r1, r2, lr}
   167c8:	mul	r3, r2, r0
   167cc:	sub	r1, r1, r3
   167d0:	bx	lr
   167d4:	cmp	r1, #0
   167d8:	beq	169e4 <fftwf_malloc@plt+0x5204>
   167dc:	eor	ip, r0, r1
   167e0:	rsbmi	r1, r1, #0
   167e4:	subs	r2, r1, #1
   167e8:	beq	169b0 <fftwf_malloc@plt+0x51d0>
   167ec:	movs	r3, r0
   167f0:	rsbmi	r3, r0, #0
   167f4:	cmp	r3, r1
   167f8:	bls	169bc <fftwf_malloc@plt+0x51dc>
   167fc:	tst	r1, r2
   16800:	beq	169cc <fftwf_malloc@plt+0x51ec>
   16804:	clz	r2, r3
   16808:	clz	r0, r1
   1680c:	sub	r2, r0, r2
   16810:	rsbs	r2, r2, #31
   16814:	addne	r2, r2, r2, lsl #1
   16818:	mov	r0, #0
   1681c:	addne	pc, pc, r2, lsl #2
   16820:	nop			; (mov r0, r0)
   16824:	cmp	r3, r1, lsl #31
   16828:	adc	r0, r0, r0
   1682c:	subcs	r3, r3, r1, lsl #31
   16830:	cmp	r3, r1, lsl #30
   16834:	adc	r0, r0, r0
   16838:	subcs	r3, r3, r1, lsl #30
   1683c:	cmp	r3, r1, lsl #29
   16840:	adc	r0, r0, r0
   16844:	subcs	r3, r3, r1, lsl #29
   16848:	cmp	r3, r1, lsl #28
   1684c:	adc	r0, r0, r0
   16850:	subcs	r3, r3, r1, lsl #28
   16854:	cmp	r3, r1, lsl #27
   16858:	adc	r0, r0, r0
   1685c:	subcs	r3, r3, r1, lsl #27
   16860:	cmp	r3, r1, lsl #26
   16864:	adc	r0, r0, r0
   16868:	subcs	r3, r3, r1, lsl #26
   1686c:	cmp	r3, r1, lsl #25
   16870:	adc	r0, r0, r0
   16874:	subcs	r3, r3, r1, lsl #25
   16878:	cmp	r3, r1, lsl #24
   1687c:	adc	r0, r0, r0
   16880:	subcs	r3, r3, r1, lsl #24
   16884:	cmp	r3, r1, lsl #23
   16888:	adc	r0, r0, r0
   1688c:	subcs	r3, r3, r1, lsl #23
   16890:	cmp	r3, r1, lsl #22
   16894:	adc	r0, r0, r0
   16898:	subcs	r3, r3, r1, lsl #22
   1689c:	cmp	r3, r1, lsl #21
   168a0:	adc	r0, r0, r0
   168a4:	subcs	r3, r3, r1, lsl #21
   168a8:	cmp	r3, r1, lsl #20
   168ac:	adc	r0, r0, r0
   168b0:	subcs	r3, r3, r1, lsl #20
   168b4:	cmp	r3, r1, lsl #19
   168b8:	adc	r0, r0, r0
   168bc:	subcs	r3, r3, r1, lsl #19
   168c0:	cmp	r3, r1, lsl #18
   168c4:	adc	r0, r0, r0
   168c8:	subcs	r3, r3, r1, lsl #18
   168cc:	cmp	r3, r1, lsl #17
   168d0:	adc	r0, r0, r0
   168d4:	subcs	r3, r3, r1, lsl #17
   168d8:	cmp	r3, r1, lsl #16
   168dc:	adc	r0, r0, r0
   168e0:	subcs	r3, r3, r1, lsl #16
   168e4:	cmp	r3, r1, lsl #15
   168e8:	adc	r0, r0, r0
   168ec:	subcs	r3, r3, r1, lsl #15
   168f0:	cmp	r3, r1, lsl #14
   168f4:	adc	r0, r0, r0
   168f8:	subcs	r3, r3, r1, lsl #14
   168fc:	cmp	r3, r1, lsl #13
   16900:	adc	r0, r0, r0
   16904:	subcs	r3, r3, r1, lsl #13
   16908:	cmp	r3, r1, lsl #12
   1690c:	adc	r0, r0, r0
   16910:	subcs	r3, r3, r1, lsl #12
   16914:	cmp	r3, r1, lsl #11
   16918:	adc	r0, r0, r0
   1691c:	subcs	r3, r3, r1, lsl #11
   16920:	cmp	r3, r1, lsl #10
   16924:	adc	r0, r0, r0
   16928:	subcs	r3, r3, r1, lsl #10
   1692c:	cmp	r3, r1, lsl #9
   16930:	adc	r0, r0, r0
   16934:	subcs	r3, r3, r1, lsl #9
   16938:	cmp	r3, r1, lsl #8
   1693c:	adc	r0, r0, r0
   16940:	subcs	r3, r3, r1, lsl #8
   16944:	cmp	r3, r1, lsl #7
   16948:	adc	r0, r0, r0
   1694c:	subcs	r3, r3, r1, lsl #7
   16950:	cmp	r3, r1, lsl #6
   16954:	adc	r0, r0, r0
   16958:	subcs	r3, r3, r1, lsl #6
   1695c:	cmp	r3, r1, lsl #5
   16960:	adc	r0, r0, r0
   16964:	subcs	r3, r3, r1, lsl #5
   16968:	cmp	r3, r1, lsl #4
   1696c:	adc	r0, r0, r0
   16970:	subcs	r3, r3, r1, lsl #4
   16974:	cmp	r3, r1, lsl #3
   16978:	adc	r0, r0, r0
   1697c:	subcs	r3, r3, r1, lsl #3
   16980:	cmp	r3, r1, lsl #2
   16984:	adc	r0, r0, r0
   16988:	subcs	r3, r3, r1, lsl #2
   1698c:	cmp	r3, r1, lsl #1
   16990:	adc	r0, r0, r0
   16994:	subcs	r3, r3, r1, lsl #1
   16998:	cmp	r3, r1
   1699c:	adc	r0, r0, r0
   169a0:	subcs	r3, r3, r1
   169a4:	cmp	ip, #0
   169a8:	rsbmi	r0, r0, #0
   169ac:	bx	lr
   169b0:	teq	ip, r0
   169b4:	rsbmi	r0, r0, #0
   169b8:	bx	lr
   169bc:	movcc	r0, #0
   169c0:	asreq	r0, ip, #31
   169c4:	orreq	r0, r0, #1
   169c8:	bx	lr
   169cc:	clz	r2, r1
   169d0:	rsb	r2, r2, #31
   169d4:	cmp	ip, #0
   169d8:	lsr	r0, r3, r2
   169dc:	rsbmi	r0, r0, #0
   169e0:	bx	lr
   169e4:	cmp	r0, #0
   169e8:	mvngt	r0, #-2147483648	; 0x80000000
   169ec:	movlt	r0, #-2147483648	; 0x80000000
   169f0:	b	16a14 <fftwf_malloc@plt+0x5234>
   169f4:	cmp	r1, #0
   169f8:	beq	169e4 <fftwf_malloc@plt+0x5204>
   169fc:	push	{r0, r1, lr}
   16a00:	bl	167dc <fftwf_malloc@plt+0x4ffc>
   16a04:	pop	{r1, r2, lr}
   16a08:	mul	r3, r2, r0
   16a0c:	sub	r1, r1, r3
   16a10:	bx	lr
   16a14:	push	{r1, lr}
   16a18:	mov	r0, #8
   16a1c:	bl	1163c <raise@plt>
   16a20:	pop	{r1, pc}
   16a24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16a28:	mov	r7, r0
   16a2c:	ldr	r6, [pc, #72]	; 16a7c <fftwf_malloc@plt+0x529c>
   16a30:	ldr	r5, [pc, #72]	; 16a80 <fftwf_malloc@plt+0x52a0>
   16a34:	add	r6, pc, r6
   16a38:	add	r5, pc, r5
   16a3c:	sub	r6, r6, r5
   16a40:	mov	r8, r1
   16a44:	mov	r9, r2
   16a48:	bl	113f4 <__sigsetjmp@plt-0x20>
   16a4c:	asrs	r6, r6, #2
   16a50:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a54:	mov	r4, #0
   16a58:	add	r4, r4, #1
   16a5c:	ldr	r3, [r5], #4
   16a60:	mov	r2, r9
   16a64:	mov	r1, r8
   16a68:	mov	r0, r7
   16a6c:	blx	r3
   16a70:	cmp	r6, r4
   16a74:	bne	16a58 <fftwf_malloc@plt+0x5278>
   16a78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a7c:	andeq	r2, r1, r8, lsr r3
   16a80:	andeq	r2, r1, r0, lsr r3
   16a84:	bx	lr

Disassembly of section .fini:

00016a88 <.fini>:
   16a88:	push	{r3, lr}
   16a8c:	pop	{r3, pc}
