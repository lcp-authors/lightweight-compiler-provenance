
raspbian-preinstalled/timedatectl:     file format elf32-littlearm


Disassembly of section .init:

0000133c <.init>:
    133c:	push	{r3, lr}
    1340:	bl	1bc8 <log_oom_internal@plt+0x4e8>
    1344:	pop	{r3, pc}

Disassembly of section .plt:

00001348 <__exp2_finite@plt-0x14>:
    1348:	push	{lr}		; (str lr, [sp, #-4]!)
    134c:	ldr	lr, [pc, #4]	; 1358 <__exp2_finite@plt-0x4>
    1350:	add	lr, pc, lr
    1354:	ldr	pc, [lr, #8]!
    1358:	andeq	r5, r1, r8, lsr fp

0000135c <__exp2_finite@plt>:
    135c:	add	ip, pc, #0, 12
    1360:	add	ip, ip, #86016	; 0x15000
    1364:	ldr	pc, [ip, #2872]!	; 0xb38

00001368 <localtime_r@plt>:
    1368:	add	ip, pc, #0, 12
    136c:	add	ip, ip, #86016	; 0x15000
    1370:	ldr	pc, [ip, #2864]!	; 0xb30

00001374 <sd_bus_match_signal@plt>:
    1374:	add	ip, pc, #0, 12
    1378:	add	ip, ip, #86016	; 0x15000
    137c:	ldr	pc, [ip, #2856]!	; 0xb28

00001380 <version@plt>:
    1380:	add	ip, pc, #0, 12
    1384:	add	ip, ip, #86016	; 0x15000
    1388:	ldr	pc, [ip, #2848]!	; 0xb20

0000138c <sd_event_loop@plt>:
    138c:	add	ip, pc, #0, 12
    1390:	add	ip, ip, #86016	; 0x15000
    1394:	ldr	pc, [ip, #2840]!	; 0xb18

00001398 <free@plt>:
    1398:	add	ip, pc, #0, 12
    139c:	add	ip, ip, #86016	; 0x15000
    13a0:	ldr	pc, [ip, #2832]!	; 0xb10

000013a4 <log_open@plt>:
    13a4:	add	ip, pc, #0, 12
    13a8:	add	ip, ip, #86016	; 0x15000
    13ac:	ldr	pc, [ip, #2824]!	; 0xb08

000013b0 <log_assert_failed_unreachable_realm@plt>:
    13b0:	add	ip, pc, #0, 12
    13b4:	add	ip, ip, #86016	; 0x15000
    13b8:	ldr	pc, [ip, #2816]!	; 0xb00

000013bc <strcmp_ptr@plt>:
    13bc:	add	ip, pc, #0, 12
    13c0:	add	ip, ip, #86016	; 0x15000
    13c4:	ldr	pc, [ip, #2808]!	; 0xaf8

000013c8 <parse_timestamp@plt>:
    13c8:	add	ip, pc, #0, 12
    13cc:	add	ip, ip, #86016	; 0x15000
    13d0:	ldr	pc, [ip, #2800]!	; 0xaf0

000013d4 <ask_password_agent_close@plt>:
    13d4:	add	ip, pc, #0, 12
    13d8:	add	ip, ip, #86016	; 0x15000
    13dc:	ldr	pc, [ip, #2792]!	; 0xae8

000013e0 <polkit_agent_close@plt>:
    13e0:	add	ip, pc, #0, 12
    13e4:	add	ip, ip, #86016	; 0x15000
    13e8:	ldr	pc, [ip, #2784]!	; 0xae0

000013ec <mac_selinux_finish@plt>:
    13ec:	add	ip, pc, #0, 12
    13f0:	add	ip, ip, #86016	; 0x15000
    13f4:	ldr	pc, [ip, #2776]!	; 0xad8

000013f8 <puts@plt>:
    13f8:	add	ip, pc, #0, 12
    13fc:	add	ip, ip, #86016	; 0x15000
    1400:	ldr	pc, [ip, #2768]!	; 0xad0

00001404 <sd_event_default@plt>:
    1404:	add	ip, pc, #0, 12
    1408:	add	ip, ip, #86016	; 0x15000
    140c:	ldr	pc, [ip, #2760]!	; 0xac8

00001410 <strftime@plt>:
    1410:	add	ip, pc, #0, 12
    1414:	add	ip, ip, #86016	; 0x15000
    1418:	ldr	pc, [ip, #2752]!	; 0xac0

0000141c <memset@plt>:
    141c:	add	ip, pc, #0, 12
    1420:	add	ip, ip, #86016	; 0x15000
    1424:	ldr	pc, [ip, #2744]!	; 0xab8

00001428 <log_get_max_level_realm@plt>:
    1428:	add	ip, pc, #0, 12
    142c:	add	ip, ip, #86016	; 0x15000
    1430:	ldr	pc, [ip, #2736]!	; 0xab0

00001434 <abort@plt>:
    1434:	add	ip, pc, #0, 12
    1438:	add	ip, ip, #86016	; 0x15000
    143c:	ldr	pc, [ip, #2728]!	; 0xaa8

00001440 <dispatch_verb@plt>:
    1440:	add	ip, pc, #0, 12
    1444:	add	ip, ip, #86016	; 0x15000
    1448:	ldr	pc, [ip, #2720]!	; 0xaa0

0000144c <unsetenv@plt>:
    144c:	add	ip, pc, #0, 12
    1450:	add	ip, ip, #86016	; 0x15000
    1454:	ldr	pc, [ip, #2712]!	; 0xa98

00001458 <gmtime_r@plt>:
    1458:	add	ip, pc, #0, 12
    145c:	add	ip, ip, #86016	; 0x15000
    1460:	ldr	pc, [ip, #2704]!	; 0xa90

00001464 <in_addr_to_string@plt>:
    1464:	add	ip, pc, #0, 12
    1468:	add	ip, ip, #86016	; 0x15000
    146c:	ldr	pc, [ip, #2696]!	; 0xa88

00001470 <sd_bus_error_free@plt>:
    1470:	add	ip, pc, #0, 12
    1474:	add	ip, ip, #86016	; 0x15000
    1478:	ldr	pc, [ip, #2688]!	; 0xa80

0000147c <sd_bus_flush_close_unref@plt>:
    147c:	add	ip, pc, #0, 12
    1480:	add	ip, ip, #86016	; 0x15000
    1484:	ldr	pc, [ip, #2680]!	; 0xa78

00001488 <tzset@plt>:
    1488:	add	ip, pc, #0, 12
    148c:	add	ip, ip, #86016	; 0x15000
    1490:	ldr	pc, [ip, #2672]!	; 0xa70

00001494 <sd_bus_message_exit_container@plt>:
    1494:	add	ip, pc, #0, 12
    1498:	add	ip, ip, #86016	; 0x15000
    149c:	ldr	pc, [ip, #2664]!	; 0xa68

000014a0 <bus_map_all_properties@plt>:
    14a0:	add	ip, pc, #0, 12
    14a4:	add	ip, ip, #86016	; 0x15000
    14a8:	ldr	pc, [ip, #2656]!	; 0xa60

000014ac <sd_bus_message_enter_container@plt>:
    14ac:	add	ip, pc, #0, 12
    14b0:	add	ip, ip, #86016	; 0x15000
    14b4:	ldr	pc, [ip, #2648]!	; 0xa58

000014b8 <__stack_chk_fail@plt>:
    14b8:	add	ip, pc, #0, 12
    14bc:	add	ip, ip, #86016	; 0x15000
    14c0:	ldr	pc, [ip, #2640]!	; 0xa50

000014c4 <terminal_urlify_man@plt>:
    14c4:	add	ip, pc, #0, 12
    14c8:	add	ip, ip, #86016	; 0x15000
    14cc:	ldr	pc, [ip, #2632]!	; 0xa48

000014d0 <setenv@plt>:
    14d0:	add	ip, pc, #0, 12
    14d4:	add	ip, ip, #86016	; 0x15000
    14d8:	ldr	pc, [ip, #2624]!	; 0xa40

000014dc <terminal_is_dumb@plt>:
    14dc:	add	ip, pc, #0, 12
    14e0:	add	ip, ip, #86016	; 0x15000
    14e4:	ldr	pc, [ip, #2616]!	; 0xa38

000014e8 <sd_bus_attach_event@plt>:
    14e8:	add	ip, pc, #0, 12
    14ec:	add	ip, ip, #86016	; 0x15000
    14f0:	ldr	pc, [ip, #2608]!	; 0xa30

000014f4 <polkit_agent_open@plt>:
    14f4:	add	ip, pc, #0, 12
    14f8:	add	ip, ip, #86016	; 0x15000
    14fc:	ldr	pc, [ip, #2600]!	; 0xa28

00001500 <format_timestamp@plt>:
    1500:	add	ip, pc, #0, 12
    1504:	add	ip, ip, #86016	; 0x15000
    1508:	ldr	pc, [ip, #2592]!	; 0xa20

0000150c <parse_boolean@plt>:
    150c:	add	ip, pc, #0, 12
    1510:	add	ip, ip, #86016	; 0x15000
    1514:	ldr	pc, [ip, #2584]!	; 0xa18

00001518 <sd_bus_message_peek_type@plt>:
    1518:	add	ip, pc, #0, 12
    151c:	add	ip, ip, #86016	; 0x15000
    1520:	ldr	pc, [ip, #2576]!	; 0xa10

00001524 <getopt_long@plt>:
    1524:	add	ip, pc, #0, 12
    1528:	add	ip, ip, #86016	; 0x15000
    152c:	ldr	pc, [ip, #2568]!	; 0xa08

00001530 <raise@plt>:
    1530:	add	ip, pc, #0, 12
    1534:	add	ip, ip, #86016	; 0x15000
    1538:	ldr	pc, [ip, #2560]!	; 0xa00

0000153c <sd_bus_message_unref@plt>:
    153c:	add	ip, pc, #0, 12
    1540:	add	ip, ip, #86016	; 0x15000
    1544:	ldr	pc, [ip, #2552]!	; 0x9f8

00001548 <pager_close@plt>:
    1548:	add	ip, pc, #0, 12
    154c:	add	ip, ip, #86016	; 0x15000
    1550:	ldr	pc, [ip, #2544]!	; 0x9f0

00001554 <sd_bus_message_read@plt>:
    1554:	add	ip, pc, #0, 12
    1558:	add	ip, ip, #86016	; 0x15000
    155c:	ldr	pc, [ip, #2536]!	; 0x9e8

00001560 <bus_print_all_properties@plt>:
    1560:	add	ip, pc, #0, 12
    1564:	add	ip, ip, #86016	; 0x15000
    1568:	ldr	pc, [ip, #2528]!	; 0x9e0

0000156c <sd_bus_message_read_strv@plt>:
    156c:	add	ip, pc, #0, 12
    1570:	add	ip, ip, #86016	; 0x15000
    1574:	ldr	pc, [ip, #2520]!	; 0x9d8

00001578 <setlocale@plt>:
    1578:	add	ip, pc, #0, 12
    157c:	add	ip, ip, #86016	; 0x15000
    1580:	ldr	pc, [ip, #2512]!	; 0x9d0

00001584 <fputc@plt>:
    1584:	add	ip, pc, #0, 12
    1588:	add	ip, ip, #86016	; 0x15000
    158c:	ldr	pc, [ip, #2504]!	; 0x9c8

00001590 <bus_log_parse_error@plt>:
    1590:	add	ip, pc, #0, 12
    1594:	add	ip, ip, #86016	; 0x15000
    1598:	ldr	pc, [ip, #2496]!	; 0x9c0

0000159c <fwrite@plt>:
    159c:	add	ip, pc, #0, 12
    15a0:	add	ip, ip, #86016	; 0x15000
    15a4:	ldr	pc, [ip, #2488]!	; 0x9b8

000015a8 <memcpy@plt>:
    15a8:	add	ip, pc, #0, 12
    15ac:	add	ip, ip, #86016	; 0x15000
    15b0:	ldr	pc, [ip, #2480]!	; 0x9b0

000015b4 <strv_extend@plt>:
    15b4:	add	ip, pc, #0, 12
    15b8:	add	ip, ip, #86016	; 0x15000
    15bc:	ldr	pc, [ip, #2472]!	; 0x9a8

000015c0 <sd_bus_message_read_array@plt>:
    15c0:	add	ip, pc, #0, 12
    15c4:	add	ip, ip, #86016	; 0x15000
    15c8:	ldr	pc, [ip, #2464]!	; 0x9a0

000015cc <strlen@plt>:
    15cc:	add	ip, pc, #0, 12
    15d0:	add	ip, ip, #86016	; 0x15000
    15d4:	ldr	pc, [ip, #2456]!	; 0x998

000015d8 <strv_print@plt>:
    15d8:	add	ip, pc, #0, 12
    15dc:	add	ip, ip, #86016	; 0x15000
    15e0:	ldr	pc, [ip, #2448]!	; 0x990

000015e4 <sd_bus_message_get_bus@plt>:
    15e4:	add	ip, pc, #0, 12
    15e8:	add	ip, ip, #86016	; 0x15000
    15ec:	ldr	pc, [ip, #2440]!	; 0x988

000015f0 <bus_error_message@plt>:
    15f0:	add	ip, pc, #0, 12
    15f4:	add	ip, ip, #86016	; 0x15000
    15f8:	ldr	pc, [ip, #2432]!	; 0x980

000015fc <strcmp@plt>:
    15fc:	add	ip, pc, #0, 12
    1600:	add	ip, ip, #86016	; 0x15000
    1604:	ldr	pc, [ip, #2424]!	; 0x978

00001608 <log_parse_environment_realm@plt>:
    1608:	add	ip, pc, #0, 12
    160c:	add	ip, ip, #86016	; 0x15000
    1610:	ldr	pc, [ip, #2416]!	; 0x970

00001614 <sd_event_unref@plt>:
    1614:	add	ip, pc, #0, 12
    1618:	add	ip, ip, #86016	; 0x15000
    161c:	ldr	pc, [ip, #2408]!	; 0x968

00001620 <time@plt>:
    1620:	add	ip, pc, #0, 12
    1624:	add	ip, ip, #86016	; 0x15000
    1628:	ldr	pc, [ip, #2400]!	; 0x960

0000162c <sd_bus_call_method@plt>:
    162c:	add	ip, pc, #0, 12
    1630:	add	ip, ip, #86016	; 0x15000
    1634:	ldr	pc, [ip, #2392]!	; 0x958

00001638 <__errno_location@plt>:
    1638:	add	ip, pc, #0, 12
    163c:	add	ip, ip, #86016	; 0x15000
    1640:	ldr	pc, [ip, #2384]!	; 0x950

00001644 <log_assert_failed_realm@plt>:
    1644:	add	ip, pc, #0, 12
    1648:	add	ip, ip, #86016	; 0x15000
    164c:	ldr	pc, [ip, #2376]!	; 0x948

00001650 <log_internal_realm@plt>:
    1650:	add	ip, pc, #0, 12
    1654:	add	ip, ip, #86016	; 0x15000
    1658:	ldr	pc, [ip, #2368]!	; 0x940

0000165c <format_timespan@plt>:
    165c:	add	ip, pc, #0, 12
    1660:	add	ip, ip, #86016	; 0x15000
    1664:	ldr	pc, [ip, #2360]!	; 0x938

00001668 <bus_print_property_value@plt>:
    1668:	add	ip, pc, #0, 12
    166c:	add	ip, ip, #86016	; 0x15000
    1670:	ldr	pc, [ip, #2352]!	; 0x930

00001674 <pager_open@plt>:
    1674:	add	ip, pc, #0, 12
    1678:	add	ip, ip, #86016	; 0x15000
    167c:	ldr	pc, [ip, #2344]!	; 0x928

00001680 <fputs@plt>:
    1680:	add	ip, pc, #0, 12
    1684:	add	ip, ip, #86016	; 0x15000
    1688:	ldr	pc, [ip, #2336]!	; 0x920

0000168c <getenv@plt>:
    168c:	add	ip, pc, #0, 12
    1690:	add	ip, ip, #86016	; 0x15000
    1694:	ldr	pc, [ip, #2328]!	; 0x918

00001698 <__libc_start_main@plt>:
    1698:	add	ip, pc, #0, 12
    169c:	add	ip, ip, #86016	; 0x15000
    16a0:	ldr	pc, [ip, #2320]!	; 0x910

000016a4 <colors_enabled@plt>:
    16a4:	add	ip, pc, #0, 12
    16a8:	add	ip, ip, #86016	; 0x15000
    16ac:	ldr	pc, [ip, #2312]!	; 0x908

000016b0 <__gmon_start__@plt>:
    16b0:	add	ip, pc, #0, 12
    16b4:	add	ip, ip, #86016	; 0x15000
    16b8:	ldr	pc, [ip, #2304]!	; 0x900

000016bc <__cxa_finalize@plt>:
    16bc:	add	ip, pc, #0, 12
    16c0:	add	ip, ip, #86016	; 0x15000
    16c4:	ldr	pc, [ip, #2296]!	; 0x8f8

000016c8 <__printf_chk@plt>:
    16c8:	add	ip, pc, #0, 12
    16cc:	add	ip, ip, #86016	; 0x15000
    16d0:	ldr	pc, [ip, #2288]!	; 0x8f0

000016d4 <bus_connect_transport@plt>:
    16d4:	add	ip, pc, #0, 12
    16d8:	add	ip, ip, #86016	; 0x15000
    16dc:	ldr	pc, [ip, #2280]!	; 0x8e8

000016e0 <log_oom_internal@plt>:
    16e0:	add	ip, pc, #0, 12
    16e4:	add	ip, ip, #86016	; 0x15000
    16e8:	ldr	pc, [ip, #2272]!	; 0x8e0

Disassembly of section .text:

000016f0 <.text>:
    16f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    16f4:	mov	r9, r1
    16f8:	ldr	r7, [pc, #980]	; 1ad4 <log_oom_internal@plt+0x3f4>
    16fc:	ldr	r3, [pc, #980]	; 1ad8 <log_oom_internal@plt+0x3f8>
    1700:	add	r7, pc, r7
    1704:	ldr	r1, [pc, #976]	; 1adc <log_oom_internal@plt+0x3fc>
    1708:	ldr	r8, [r7, r3]
    170c:	sub	sp, sp, #20
    1710:	mov	r4, #0
    1714:	ldr	r3, [r8]
    1718:	add	r1, pc, r1
    171c:	mov	r6, r0
    1720:	mov	r0, #6
    1724:	str	r3, [sp, #12]
    1728:	str	r4, [sp, #8]
    172c:	bl	1578 <setlocale@plt>
    1730:	mov	r0, r4
    1734:	bl	1608 <log_parse_environment_realm@plt>
    1738:	bl	13a4 <log_open@plt>
    173c:	cmp	r6, r4
    1740:	blt	1a24 <log_oom_internal@plt+0x344>
    1744:	cmp	r9, #0
    1748:	beq	1a50 <log_oom_internal@plt+0x370>
    174c:	ldr	r4, [pc, #908]	; 1ae0 <log_oom_internal@plt+0x400>
    1750:	ldr	sl, [pc, #908]	; 1ae4 <log_oom_internal@plt+0x404>
    1754:	add	r4, pc, r4
    1758:	add	sl, pc, sl
    175c:	add	r4, r4, #288	; 0x120
    1760:	add	fp, sl, #4
    1764:	ldr	r2, [pc, #892]	; 1ae8 <log_oom_internal@plt+0x408>
    1768:	mov	r5, #0
    176c:	str	r5, [sp]
    1770:	mov	r3, r4
    1774:	add	r2, pc, r2
    1778:	mov	r1, r9
    177c:	mov	r0, r6
    1780:	bl	1524 <getopt_long@plt>
    1784:	cmp	r0, #0
    1788:	blt	18ec <log_oom_internal@plt+0x20c>
    178c:	cmp	r0, #112	; 0x70
    1790:	beq	19cc <log_oom_internal@plt+0x2ec>
    1794:	ble	17d4 <log_oom_internal@plt+0xf4>
    1798:	ldr	r3, [pc, #844]	; 1aec <log_oom_internal@plt+0x40c>
    179c:	cmp	r0, r3
    17a0:	beq	1968 <log_oom_internal@plt+0x288>
    17a4:	ble	18c0 <log_oom_internal@plt+0x1e0>
    17a8:	cmp	r0, #260	; 0x104
    17ac:	beq	18ac <log_oom_internal@plt+0x1cc>
    17b0:	blt	19bc <log_oom_internal@plt+0x2dc>
    17b4:	ldr	r3, [pc, #820]	; 1af0 <log_oom_internal@plt+0x410>
    17b8:	cmp	r0, r3
    17bc:	bne	1aa4 <log_oom_internal@plt+0x3c4>
    17c0:	ldr	r3, [pc, #812]	; 1af4 <log_oom_internal@plt+0x414>
    17c4:	mov	r2, #1
    17c8:	add	r3, pc, r3
    17cc:	strb	r2, [r3, #1]
    17d0:	b	1764 <log_oom_internal@plt+0x84>
    17d4:	cmp	r0, #77	; 0x4d
    17d8:	beq	197c <log_oom_internal@plt+0x29c>
    17dc:	ble	1878 <log_oom_internal@plt+0x198>
    17e0:	cmp	r0, #97	; 0x61
    17e4:	beq	19a8 <log_oom_internal@plt+0x2c8>
    17e8:	cmp	r0, #104	; 0x68
    17ec:	bne	1aa4 <log_oom_internal@plt+0x3c4>
    17f0:	bl	1cf0 <log_oom_internal@plt+0x610>
    17f4:	mov	r5, r0
    17f8:	cmp	r5, #0
    17fc:	bgt	18ec <log_oom_internal@plt+0x20c>
    1800:	ldr	r0, [sp, #8]
    1804:	cmp	r0, #0
    1808:	beq	1810 <log_oom_internal@plt+0x130>
    180c:	bl	147c <sd_bus_flush_close_unref@plt>
    1810:	ldr	r3, [pc, #736]	; 1af8 <log_oom_internal@plt+0x418>
    1814:	ldr	r4, [r7, r3]
    1818:	cmp	r4, #0
    181c:	beq	184c <log_oom_internal@plt+0x16c>
    1820:	ldr	r3, [pc, #724]	; 1afc <log_oom_internal@plt+0x41c>
    1824:	add	r4, r4, #3
    1828:	bic	r4, r4, #3
    182c:	ldr	r6, [r7, r3]
    1830:	cmp	r4, r6
    1834:	bcs	184c <log_oom_internal@plt+0x16c>
    1838:	ldm	r4, {r0, r3}
    183c:	add	r4, r4, #8
    1840:	blx	r3
    1844:	cmp	r4, r6
    1848:	bcc	1838 <log_oom_internal@plt+0x158>
    184c:	bl	13d4 <ask_password_agent_close@plt>
    1850:	bl	13e0 <polkit_agent_close@plt>
    1854:	bl	13ec <mac_selinux_finish@plt>
    1858:	bl	1548 <pager_close@plt>
    185c:	ldr	r2, [sp, #12]
    1860:	ldr	r3, [r8]
    1864:	lsr	r0, r5, #31
    1868:	cmp	r2, r3
    186c:	bne	1ad0 <log_oom_internal@plt+0x3f0>
    1870:	add	sp, sp, #20
    1874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1878:	cmp	r0, #63	; 0x3f
    187c:	beq	19a0 <log_oom_internal@plt+0x2c0>
    1880:	cmp	r0, #72	; 0x48
    1884:	bne	1aa4 <log_oom_internal@plt+0x3c4>
    1888:	ldr	r2, [pc, #624]	; 1b00 <log_oom_internal@plt+0x420>
    188c:	ldr	r3, [pc, #624]	; 1b04 <log_oom_internal@plt+0x424>
    1890:	add	r2, pc, r2
    1894:	mov	r1, #1
    1898:	str	r1, [r2, #16]
    189c:	ldr	r3, [r7, r3]
    18a0:	ldr	r3, [r3]
    18a4:	str	r3, [r2, #24]
    18a8:	b	1764 <log_oom_internal@plt+0x84>
    18ac:	ldr	r3, [pc, #596]	; 1b08 <log_oom_internal@plt+0x428>
    18b0:	mov	r2, #1
    18b4:	add	r3, pc, r3
    18b8:	strb	r2, [r3, #8]
    18bc:	b	1764 <log_oom_internal@plt+0x84>
    18c0:	cmp	r0, #256	; 0x100
    18c4:	beq	19f4 <log_oom_internal@plt+0x314>
    18c8:	sub	r3, r3, #1
    18cc:	cmp	r0, r3
    18d0:	bne	1aa4 <log_oom_internal@plt+0x3c4>
    18d4:	ldr	r2, [pc, #560]	; 1b0c <log_oom_internal@plt+0x42c>
    18d8:	add	r2, pc, r2
    18dc:	ldr	r3, [r2, #12]
    18e0:	orr	r3, r3, #1
    18e4:	str	r3, [r2, #12]
    18e8:	b	1764 <log_oom_internal@plt+0x84>
    18ec:	ldr	r0, [pc, #540]	; 1b10 <log_oom_internal@plt+0x430>
    18f0:	add	r3, sp, #8
    18f4:	add	r0, pc, r0
    18f8:	mov	r2, #0
    18fc:	ldr	r1, [r0, #24]
    1900:	ldr	r0, [r0, #16]
    1904:	bl	16d4 <bus_connect_transport@plt>
    1908:	subs	r5, r0, #0
    190c:	bge	1a00 <log_oom_internal@plt+0x320>
    1910:	mov	r0, #0
    1914:	bl	1428 <log_get_max_level_realm@plt>
    1918:	cmp	r0, #2
    191c:	rsble	r5, r5, #0
    1920:	uxtble	r5, r5
    1924:	rsble	r5, r5, #0
    1928:	ble	1800 <log_oom_internal@plt+0x120>
    192c:	ldr	r2, [pc, #480]	; 1b14 <log_oom_internal@plt+0x434>
    1930:	ldr	r3, [pc, #480]	; 1b18 <log_oom_internal@plt+0x438>
    1934:	add	r2, pc, r2
    1938:	str	r2, [sp, #4]
    193c:	add	r3, pc, r3
    1940:	ldr	r2, [pc, #468]	; 1b1c <log_oom_internal@plt+0x43c>
    1944:	add	r3, r3, #452	; 0x1c4
    1948:	mov	r1, r5
    194c:	str	r3, [sp]
    1950:	add	r2, pc, r2
    1954:	ldr	r3, [pc, #452]	; 1b20 <log_oom_internal@plt+0x440>
    1958:	mov	r0, #3
    195c:	bl	1650 <log_internal_realm@plt>
    1960:	mov	r5, r0
    1964:	b	1800 <log_oom_internal@plt+0x120>
    1968:	ldr	r3, [pc, #436]	; 1b24 <log_oom_internal@plt+0x444>
    196c:	mov	r2, #1
    1970:	add	r3, pc, r3
    1974:	strb	r2, [r3, #20]
    1978:	b	1764 <log_oom_internal@plt+0x84>
    197c:	ldr	r2, [pc, #420]	; 1b28 <log_oom_internal@plt+0x448>
    1980:	ldr	r3, [pc, #380]	; 1b04 <log_oom_internal@plt+0x424>
    1984:	add	r2, pc, r2
    1988:	mov	r1, #2
    198c:	str	r1, [r2, #16]
    1990:	ldr	r3, [r7, r3]
    1994:	ldr	r3, [r3]
    1998:	str	r3, [r2, #24]
    199c:	b	1764 <log_oom_internal@plt+0x84>
    19a0:	mvn	r5, #21
    19a4:	b	1800 <log_oom_internal@plt+0x120>
    19a8:	ldr	r3, [pc, #380]	; 1b2c <log_oom_internal@plt+0x44c>
    19ac:	mov	r2, #1
    19b0:	add	r3, pc, r3
    19b4:	strb	r2, [r3]
    19b8:	b	1764 <log_oom_internal@plt+0x84>
    19bc:	ldr	r3, [pc, #364]	; 1b30 <log_oom_internal@plt+0x450>
    19c0:	add	r3, pc, r3
    19c4:	strb	r5, [r3]
    19c8:	b	1764 <log_oom_internal@plt+0x84>
    19cc:	ldr	r3, [pc, #304]	; 1b04 <log_oom_internal@plt+0x424>
    19d0:	mov	r0, fp
    19d4:	ldr	r3, [r7, r3]
    19d8:	ldr	r1, [r3]
    19dc:	bl	15b4 <strv_extend@plt>
    19e0:	cmp	r0, #0
    19e4:	blt	1a7c <log_oom_internal@plt+0x39c>
    19e8:	mov	r3, #1
    19ec:	strb	r3, [sl]
    19f0:	b	1764 <log_oom_internal@plt+0x84>
    19f4:	bl	1380 <version@plt>
    19f8:	mov	r5, r0
    19fc:	b	17f8 <log_oom_internal@plt+0x118>
    1a00:	ldr	r2, [pc, #300]	; 1b34 <log_oom_internal@plt+0x454>
    1a04:	mov	r1, r9
    1a08:	add	r2, pc, r2
    1a0c:	mov	r0, r6
    1a10:	add	r2, r2, #480	; 0x1e0
    1a14:	ldr	r3, [sp, #8]
    1a18:	bl	1440 <dispatch_verb@plt>
    1a1c:	mov	r5, r0
    1a20:	b	1800 <log_oom_internal@plt+0x120>
    1a24:	ldr	r3, [pc, #268]	; 1b38 <log_oom_internal@plt+0x458>
    1a28:	ldr	r2, [pc, #268]	; 1b3c <log_oom_internal@plt+0x45c>
    1a2c:	add	r3, pc, r3
    1a30:	ldr	r1, [pc, #264]	; 1b40 <log_oom_internal@plt+0x460>
    1a34:	add	r3, r3, #428	; 0x1ac
    1a38:	str	r3, [sp]
    1a3c:	mov	r0, r4
    1a40:	ldr	r3, [pc, #252]	; 1b44 <log_oom_internal@plt+0x464>
    1a44:	add	r2, pc, r2
    1a48:	add	r1, pc, r1
    1a4c:	bl	1644 <log_assert_failed_realm@plt>
    1a50:	ldr	r3, [pc, #240]	; 1b48 <log_oom_internal@plt+0x468>
    1a54:	ldr	r2, [pc, #240]	; 1b4c <log_oom_internal@plt+0x46c>
    1a58:	add	r3, pc, r3
    1a5c:	ldr	r1, [pc, #236]	; 1b50 <log_oom_internal@plt+0x470>
    1a60:	add	r3, r3, #428	; 0x1ac
    1a64:	str	r3, [sp]
    1a68:	mov	r0, r9
    1a6c:	ldr	r3, [pc, #224]	; 1b54 <log_oom_internal@plt+0x474>
    1a70:	add	r2, pc, r2
    1a74:	add	r1, pc, r1
    1a78:	bl	1644 <log_assert_failed_realm@plt>
    1a7c:	ldr	r3, [pc, #212]	; 1b58 <log_oom_internal@plt+0x478>
    1a80:	ldr	r1, [pc, #212]	; 1b5c <log_oom_internal@plt+0x47c>
    1a84:	add	r3, pc, r3
    1a88:	mov	r0, r5
    1a8c:	add	r3, r3, #440	; 0x1b8
    1a90:	ldr	r2, [pc, #200]	; 1b60 <log_oom_internal@plt+0x480>
    1a94:	add	r1, pc, r1
    1a98:	bl	16e0 <log_oom_internal@plt>
    1a9c:	mov	r5, r0
    1aa0:	b	17f8 <log_oom_internal@plt+0x118>
    1aa4:	ldr	r2, [pc, #184]	; 1b64 <log_oom_internal@plt+0x484>
    1aa8:	ldr	r1, [pc, #184]	; 1b68 <log_oom_internal@plt+0x488>
    1aac:	add	r2, pc, r2
    1ab0:	add	r2, r2, #428	; 0x1ac
    1ab4:	str	r2, [sp]
    1ab8:	ldr	r2, [pc, #172]	; 1b6c <log_oom_internal@plt+0x48c>
    1abc:	mov	r3, #840	; 0x348
    1ac0:	add	r2, pc, r2
    1ac4:	add	r1, pc, r1
    1ac8:	mov	r0, #0
    1acc:	bl	13b0 <log_assert_failed_unreachable_realm@plt>
    1ad0:	bl	14b8 <__stack_chk_fail@plt>
    1ad4:	andeq	r5, r1, r8, lsl #15
    1ad8:	andeq	r0, r0, ip, lsr r1
    1adc:	ldrdeq	r3, [r0], -r8
    1ae0:	andeq	r5, r1, r0, ror #6
    1ae4:	andeq	r5, r1, ip, lsr #17
    1ae8:	andeq	r4, r0, r0, lsl #6
    1aec:	andeq	r0, r0, r2, lsl #2
    1af0:	andeq	r0, r0, r5, lsl #2
    1af4:	andeq	r5, r1, ip, lsr r8
    1af8:	andeq	r0, r0, r8, asr #2
    1afc:	andeq	r0, r0, ip, asr #2
    1b00:	andeq	r5, r1, r4, ror r7
    1b04:	andeq	r0, r0, r4, asr #2
    1b08:	andeq	r5, r1, r0, asr r7
    1b0c:	andeq	r5, r1, ip, lsr #14
    1b10:	andeq	r5, r1, r0, lsl r7
    1b14:	andeq	r4, r0, ip, asr #2
    1b18:	strdeq	r2, [r0], -r8
    1b1c:			; <UNDEFINED> instruction: 0x000031b8
    1b20:	andeq	r0, r0, lr, ror #6
    1b24:	muleq	r1, r4, r6
    1b28:	andeq	r5, r1, r0, lsl #13
    1b2c:	andeq	r5, r1, r4, asr r6
    1b30:	andeq	r5, r1, ip, lsr r6
    1b34:	andeq	r5, r1, ip, lsr #1
    1b38:	andeq	r2, r0, r8, lsl #30
    1b3c:	andeq	r3, r0, r4, asr #1
    1b40:	andeq	r4, r0, r4
    1b44:	andeq	r0, r0, r9, lsl #6
    1b48:	ldrdeq	r2, [r0], -ip
    1b4c:	muleq	r0, r8, r0
    1b50:	andeq	r3, r0, r4, ror #31
    1b54:	andeq	r0, r0, sl, lsl #6
    1b58:			; <UNDEFINED> instruction: 0x00002eb0
    1b5c:	andeq	r3, r0, r4, ror r0
    1b60:	andeq	r0, r0, r3, lsr r3
    1b64:	andeq	r2, r0, r8, lsl #29
    1b68:	muleq	r0, ip, pc	; <UNPREDICTABLE>
    1b6c:	andeq	r3, r0, r8, asr #32
    1b70:	mov	fp, #0
    1b74:	mov	lr, #0
    1b78:	pop	{r1}		; (ldr r1, [sp], #4)
    1b7c:	mov	r2, sp
    1b80:	push	{r2}		; (str r2, [sp, #-4]!)
    1b84:	push	{r0}		; (str r0, [sp, #-4]!)
    1b88:	ldr	sl, [pc, #40]	; 1bb8 <log_oom_internal@plt+0x4d8>
    1b8c:	add	r3, pc, #36	; 0x24
    1b90:	add	sl, sl, r3
    1b94:	ldr	ip, [pc, #32]	; 1bbc <log_oom_internal@plt+0x4dc>
    1b98:	ldr	ip, [sl, ip]
    1b9c:	push	{ip}		; (str ip, [sp, #-4]!)
    1ba0:	ldr	r3, [pc, #24]	; 1bc0 <log_oom_internal@plt+0x4e0>
    1ba4:	ldr	r3, [sl, r3]
    1ba8:	ldr	r0, [pc, #20]	; 1bc4 <log_oom_internal@plt+0x4e4>
    1bac:	ldr	r0, [sl, r0]
    1bb0:	bl	1698 <__libc_start_main@plt>
    1bb4:	bl	1434 <abort@plt>
    1bb8:	ldrdeq	r5, [r1], -r8
    1bbc:	andeq	r0, r0, ip, asr r1
    1bc0:	andeq	r0, r0, r0, asr r1
    1bc4:	andeq	r0, r0, r0, asr #2
    1bc8:	ldr	r3, [pc, #20]	; 1be4 <log_oom_internal@plt+0x504>
    1bcc:	ldr	r2, [pc, #20]	; 1be8 <log_oom_internal@plt+0x508>
    1bd0:	add	r3, pc, r3
    1bd4:	ldr	r2, [r3, r2]
    1bd8:	cmp	r2, #0
    1bdc:	bxeq	lr
    1be0:	b	16b0 <__gmon_start__@plt>
    1be4:			; <UNDEFINED> instruction: 0x000152b8
    1be8:	andeq	r0, r0, r4, ror #2
    1bec:	ldr	r0, [pc, #44]	; 1c20 <log_oom_internal@plt+0x540>
    1bf0:	ldr	r3, [pc, #44]	; 1c24 <log_oom_internal@plt+0x544>
    1bf4:	add	r0, pc, r0
    1bf8:	add	r3, pc, r3
    1bfc:	cmp	r3, r0
    1c00:	ldr	r3, [pc, #32]	; 1c28 <log_oom_internal@plt+0x548>
    1c04:	add	r3, pc, r3
    1c08:	bxeq	lr
    1c0c:	ldr	r2, [pc, #24]	; 1c2c <log_oom_internal@plt+0x54c>
    1c10:	ldr	r3, [r3, r2]
    1c14:	cmp	r3, #0
    1c18:	bxeq	lr
    1c1c:	bx	r3
    1c20:	andeq	r5, r1, ip, lsl #8
    1c24:	andeq	r5, r1, r8, lsl #8
    1c28:	andeq	r5, r1, r4, lsl #5
    1c2c:	andeq	r0, r0, r8, asr r1
    1c30:	ldr	r0, [pc, #56]	; 1c70 <log_oom_internal@plt+0x590>
    1c34:	ldr	r3, [pc, #56]	; 1c74 <log_oom_internal@plt+0x594>
    1c38:	add	r0, pc, r0
    1c3c:	add	r3, pc, r3
    1c40:	sub	r1, r3, r0
    1c44:	ldr	r3, [pc, #44]	; 1c78 <log_oom_internal@plt+0x598>
    1c48:	asr	r1, r1, #2
    1c4c:	add	r3, pc, r3
    1c50:	add	r1, r1, r1, lsr #31
    1c54:	asrs	r1, r1, #1
    1c58:	bxeq	lr
    1c5c:	ldr	r2, [pc, #24]	; 1c7c <log_oom_internal@plt+0x59c>
    1c60:	ldr	r3, [r3, r2]
    1c64:	cmp	r3, #0
    1c68:	bxeq	lr
    1c6c:	bx	r3
    1c70:	andeq	r5, r1, r8, asr #7
    1c74:	andeq	r5, r1, r4, asr #7
    1c78:	andeq	r5, r1, ip, lsr r2
    1c7c:	andeq	r0, r0, r8, ror #2
    1c80:	ldr	r3, [pc, #76]	; 1cd4 <log_oom_internal@plt+0x5f4>
    1c84:	ldr	r2, [pc, #76]	; 1cd8 <log_oom_internal@plt+0x5f8>
    1c88:	add	r3, pc, r3
    1c8c:	add	r2, pc, r2
    1c90:	ldrb	r3, [r3]
    1c94:	cmp	r3, #0
    1c98:	bxne	lr
    1c9c:	ldr	r3, [pc, #56]	; 1cdc <log_oom_internal@plt+0x5fc>
    1ca0:	push	{r4, lr}
    1ca4:	ldr	r3, [r2, r3]
    1ca8:	cmp	r3, #0
    1cac:	beq	1cbc <log_oom_internal@plt+0x5dc>
    1cb0:	ldr	r3, [pc, #40]	; 1ce0 <log_oom_internal@plt+0x600>
    1cb4:	ldr	r0, [pc, r3]
    1cb8:	bl	16bc <__cxa_finalize@plt>
    1cbc:	bl	1bec <log_oom_internal@plt+0x50c>
    1cc0:	ldr	r3, [pc, #28]	; 1ce4 <log_oom_internal@plt+0x604>
    1cc4:	mov	r2, #1
    1cc8:	add	r3, pc, r3
    1ccc:	strb	r2, [r3]
    1cd0:	pop	{r4, pc}
    1cd4:	andeq	r5, r1, r8, ror r3
    1cd8:	strdeq	r5, [r1], -ip
    1cdc:	andeq	r0, r0, ip, ror #2
    1ce0:	andeq	r5, r1, r4, asr #6
    1ce4:	andeq	r5, r1, r8, lsr r3
    1ce8:	b	1c30 <log_oom_internal@plt+0x550>
    1cec:	andeq	r0, r0, r0
    1cf0:	push	{r4, r5, r6, lr}
    1cf4:	sub	sp, sp, #8
    1cf8:	ldr	r5, [pc, #164]	; 1da4 <log_oom_internal@plt+0x6c4>
    1cfc:	ldr	r3, [pc, #164]	; 1da8 <log_oom_internal@plt+0x6c8>
    1d00:	add	r5, pc, r5
    1d04:	add	r2, sp, #8
    1d08:	ldr	r6, [r5, r3]
    1d0c:	ldr	r1, [pc, #152]	; 1dac <log_oom_internal@plt+0x6cc>
    1d10:	ldr	r0, [pc, #152]	; 1db0 <log_oom_internal@plt+0x6d0>
    1d14:	mov	r4, #0
    1d18:	ldr	r3, [r6]
    1d1c:	add	r1, pc, r1
    1d20:	str	r4, [r2, #-8]!
    1d24:	add	r0, pc, r0
    1d28:	str	r3, [sp, #4]
    1d2c:	bl	14c4 <terminal_urlify_man@plt>
    1d30:	cmp	r0, r4
    1d34:	blt	1d7c <log_oom_internal@plt+0x69c>
    1d38:	ldr	r2, [pc, #116]	; 1db4 <log_oom_internal@plt+0x6d4>
    1d3c:	ldr	r1, [pc, #116]	; 1db8 <log_oom_internal@plt+0x6d8>
    1d40:	ldr	r3, [sp]
    1d44:	ldr	r2, [r5, r2]
    1d48:	add	r1, pc, r1
    1d4c:	mov	r0, #1
    1d50:	ldr	r2, [r2]
    1d54:	bl	16c8 <__printf_chk@plt>
    1d58:	ldr	r0, [sp]
    1d5c:	bl	1398 <free@plt>
    1d60:	ldr	r2, [sp, #4]
    1d64:	ldr	r3, [r6]
    1d68:	mov	r0, r4
    1d6c:	cmp	r2, r3
    1d70:	bne	1da0 <log_oom_internal@plt+0x6c0>
    1d74:	add	sp, sp, #8
    1d78:	pop	{r4, r5, r6, pc}
    1d7c:	ldr	r3, [pc, #56]	; 1dbc <log_oom_internal@plt+0x6dc>
    1d80:	ldr	r1, [pc, #56]	; 1dc0 <log_oom_internal@plt+0x6e0>
    1d84:	mov	r0, r4
    1d88:	add	r3, pc, r3
    1d8c:	ldr	r2, [pc, #48]	; 1dc4 <log_oom_internal@plt+0x6e4>
    1d90:	add	r1, pc, r1
    1d94:	bl	16e0 <log_oom_internal@plt>
    1d98:	mov	r4, r0
    1d9c:	b	1d58 <log_oom_internal@plt+0x678>
    1da0:	bl	14b8 <__stack_chk_fail@plt>
    1da4:	andeq	r5, r1, r8, lsl #3
    1da8:	andeq	r0, r0, ip, lsr r1
    1dac:	andeq	r3, r0, ip, ror #6
    1db0:	ldrdeq	r2, [r0], -r8
    1db4:	andeq	r0, r0, r0, ror #2
    1db8:	andeq	r2, r0, r0, ror #27
    1dbc:	andeq	r2, r0, ip, lsr #23
    1dc0:	andeq	r2, r0, r8, ror sp
    1dc4:	andeq	r0, r0, r5, asr #5
    1dc8:	b	1cf0 <log_oom_internal@plt+0x610>
    1dcc:	subs	r0, r2, #0
    1dd0:	push	{r4, lr}
    1dd4:	sub	sp, sp, #16
    1dd8:	beq	1e40 <log_oom_internal@plt+0x760>
    1ddc:	ldr	r3, [pc, #132]	; 1e68 <log_oom_internal@plt+0x788>
    1de0:	mov	r4, #0
    1de4:	add	r3, pc, r3
    1de8:	ldrb	r1, [r3]
    1dec:	ldrb	r2, [r3, #1]
    1df0:	ldr	r3, [r3, #4]
    1df4:	str	r1, [sp, #8]
    1df8:	str	r2, [sp, #4]
    1dfc:	str	r3, [sp]
    1e00:	ldr	r2, [pc, #100]	; 1e6c <log_oom_internal@plt+0x78c>
    1e04:	ldr	r3, [pc, #100]	; 1e70 <log_oom_internal@plt+0x790>
    1e08:	ldr	r1, [pc, #100]	; 1e74 <log_oom_internal@plt+0x794>
    1e0c:	str	r4, [sp, #12]
    1e10:	add	r3, pc, r3
    1e14:	add	r2, pc, r2
    1e18:	add	r1, pc, r1
    1e1c:	bl	1560 <bus_print_all_properties@plt>
    1e20:	cmp	r0, r4
    1e24:	blt	1e34 <log_oom_internal@plt+0x754>
    1e28:	mov	r0, r4
    1e2c:	add	sp, sp, #16
    1e30:	pop	{r4, pc}
    1e34:	add	sp, sp, #16
    1e38:	pop	{r4, lr}
    1e3c:	b	1590 <bus_log_parse_error@plt>
    1e40:	ldr	r3, [pc, #48]	; 1e78 <log_oom_internal@plt+0x798>
    1e44:	ldr	r2, [pc, #48]	; 1e7c <log_oom_internal@plt+0x79c>
    1e48:	add	r3, pc, r3
    1e4c:	ldr	r1, [pc, #44]	; 1e80 <log_oom_internal@plt+0x7a0>
    1e50:	add	r3, r3, #8
    1e54:	str	r3, [sp]
    1e58:	add	r2, pc, r2
    1e5c:	ldr	r3, [pc, #32]	; 1e84 <log_oom_internal@plt+0x7a4>
    1e60:	add	r1, pc, r1
    1e64:	bl	1644 <log_assert_failed_realm@plt>
    1e68:	andeq	r5, r1, r0, lsr #4
    1e6c:	andeq	r3, r0, r0, asr #4
    1e70:	andeq	r1, r0, r0, lsr r3
    1e74:	andeq	r3, r0, r8, asr r2
    1e78:	andeq	r2, r0, ip, ror #21
    1e7c:			; <UNDEFINED> instruction: 0x00002cb0
    1e80:	strdeq	r3, [r0], -r0
    1e84:	andeq	r0, r0, pc, lsr #5
    1e88:	subs	r0, r2, #0
    1e8c:	push	{r4, lr}
    1e90:	sub	sp, sp, #16
    1e94:	beq	1ef8 <log_oom_internal@plt+0x818>
    1e98:	ldr	r3, [pc, #128]	; 1f20 <log_oom_internal@plt+0x840>
    1e9c:	mov	r4, #0
    1ea0:	add	r3, pc, r3
    1ea4:	ldrb	r1, [r3]
    1ea8:	ldrb	r2, [r3, #1]
    1eac:	ldr	r3, [r3, #4]
    1eb0:	str	r1, [sp, #8]
    1eb4:	str	r2, [sp, #4]
    1eb8:	ldr	r1, [pc, #100]	; 1f24 <log_oom_internal@plt+0x844>
    1ebc:	ldr	r2, [pc, #100]	; 1f28 <log_oom_internal@plt+0x848>
    1ec0:	str	r3, [sp]
    1ec4:	str	r4, [sp, #12]
    1ec8:	mov	r3, r4
    1ecc:	add	r2, pc, r2
    1ed0:	add	r1, pc, r1
    1ed4:	bl	1560 <bus_print_all_properties@plt>
    1ed8:	cmp	r0, r4
    1edc:	blt	1eec <log_oom_internal@plt+0x80c>
    1ee0:	mov	r0, r4
    1ee4:	add	sp, sp, #16
    1ee8:	pop	{r4, pc}
    1eec:	add	sp, sp, #16
    1ef0:	pop	{r4, lr}
    1ef4:	b	1590 <bus_log_parse_error@plt>
    1ef8:	ldr	r3, [pc, #44]	; 1f2c <log_oom_internal@plt+0x84c>
    1efc:	ldr	r2, [pc, #44]	; 1f30 <log_oom_internal@plt+0x850>
    1f00:	add	r3, pc, r3
    1f04:	ldr	r1, [pc, #40]	; 1f34 <log_oom_internal@plt+0x854>
    1f08:	add	r3, r3, #24
    1f0c:	str	r3, [sp]
    1f10:	add	r2, pc, r2
    1f14:	mov	r3, #171	; 0xab
    1f18:	add	r1, pc, r1
    1f1c:	bl	1644 <log_assert_failed_realm@plt>
    1f20:	andeq	r5, r1, r4, ror #2
    1f24:	ldrdeq	r3, [r0], -r8
    1f28:	andeq	r3, r0, r0, asr #3
    1f2c:	andeq	r2, r0, r4, lsr sl
    1f30:	strdeq	r2, [r0], -r8
    1f34:	andeq	r3, r0, r8, lsr r1
    1f38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f3c:	sub	sp, sp, #428	; 0x1ac
    1f40:	ldr	r6, [pc, #1544]	; 2550 <log_oom_internal@plt+0xe70>
    1f44:	ldr	r3, [pc, #1544]	; 2554 <log_oom_internal@plt+0xe74>
    1f48:	add	r6, pc, r6
    1f4c:	add	r7, sp, #264	; 0x108
    1f50:	ldr	r8, [r6, r3]
    1f54:	mov	r4, #0
    1f58:	mov	r5, r0
    1f5c:	ldr	r3, [r8]
    1f60:	mov	r0, r7
    1f64:	mov	r2, #152	; 0x98
    1f68:	mov	r1, #0
    1f6c:	str	r3, [sp, #420]	; 0x1a4
    1f70:	bl	141c <memset@plt>
    1f74:	cmp	r5, r4
    1f78:	str	r4, [sp, #60]	; 0x3c
    1f7c:	str	r4, [sp, #64]	; 0x40
    1f80:	str	r4, [sp, #68]	; 0x44
    1f84:	str	r4, [sp, #56]	; 0x38
    1f88:	beq	24e8 <log_oom_internal@plt+0xe08>
    1f8c:	mov	r2, #2
    1f90:	add	r9, sp, #60	; 0x3c
    1f94:	add	r3, sp, #56	; 0x38
    1f98:	str	r3, [sp, #8]
    1f9c:	stm	sp, {r2, r9}
    1fa0:	ldr	r3, [pc, #1456]	; 2558 <log_oom_internal@plt+0xe78>
    1fa4:	ldr	r2, [pc, #1456]	; 255c <log_oom_internal@plt+0xe7c>
    1fa8:	ldr	r1, [pc, #1456]	; 2560 <log_oom_internal@plt+0xe80>
    1fac:	mov	r0, r5
    1fb0:	str	r7, [sp, #12]
    1fb4:	add	r3, pc, r3
    1fb8:	add	r2, pc, r2
    1fbc:	add	r1, pc, r1
    1fc0:	bl	14a0 <bus_map_all_properties@plt>
    1fc4:	subs	r5, r0, #0
    1fc8:	blt	20f4 <log_oom_internal@plt+0xa14>
    1fcc:	ldr	r3, [pc, #1424]	; 2564 <log_oom_internal@plt+0xe84>
    1fd0:	add	r3, pc, r3
    1fd4:	ldrb	r3, [r3, #8]
    1fd8:	cmp	r3, #0
    1fdc:	bne	215c <log_oom_internal@plt+0xa7c>
    1fe0:	ldr	r1, [pc, #1408]	; 2568 <log_oom_internal@plt+0xe88>
    1fe4:	ldr	r3, [sp, #264]	; 0x108
    1fe8:	ldr	r2, [sp, #268]	; 0x10c
    1fec:	add	r1, pc, r1
    1ff0:	mov	r0, #1
    1ff4:	bl	16c8 <__printf_chk@plt>
    1ff8:	mov	r4, #0
    1ffc:	mov	r5, #0
    2000:	add	r3, sp, #272	; 0x110
    2004:	add	sl, sp, #72	; 0x48
    2008:	ldrd	r2, [r3]
    200c:	mov	r1, #64	; 0x40
    2010:	strd	r4, [sp]
    2014:	mov	r0, sl
    2018:	bl	165c <format_timespan@plt>
    201c:	add	r3, sp, #288	; 0x120
    2020:	mov	r1, #64	; 0x40
    2024:	ldrd	r2, [r3]
    2028:	strd	r4, [sp]
    202c:	add	fp, sp, #200	; 0xc8
    2030:	mov	r6, r0
    2034:	add	r0, sp, #136	; 0x88
    2038:	bl	165c <format_timespan@plt>
    203c:	add	r3, sp, #280	; 0x118
    2040:	mov	r1, #64	; 0x40
    2044:	ldrd	r2, [r3]
    2048:	strd	r4, [sp]
    204c:	mov	r7, r0
    2050:	mov	r0, fp
    2054:	bl	165c <format_timespan@plt>
    2058:	ldr	r1, [pc, #1292]	; 256c <log_oom_internal@plt+0xe8c>
    205c:	mov	r3, r7
    2060:	mov	r2, r6
    2064:	add	r1, pc, r1
    2068:	str	r0, [sp]
    206c:	mov	r0, #1
    2070:	bl	16c8 <__printf_chk@plt>
    2074:	add	r3, sp, #392	; 0x188
    2078:	ldrd	r2, [r3]
    207c:	orrs	r3, r2, r3
    2080:	beq	218c <log_oom_internal@plt+0xaac>
    2084:	add	r3, sp, #376	; 0x178
    2088:	ldrd	r0, [r3]
    208c:	add	r3, sp, #352	; 0x160
    2090:	ldrd	r2, [r3]
    2094:	cmp	r1, r3
    2098:	cmpeq	r0, r2
    209c:	strd	r2, [sp, #16]
    20a0:	bcs	219c <log_oom_internal@plt+0xabc>
    20a4:	mov	r0, #0
    20a8:	bl	1428 <log_get_max_level_realm@plt>
    20ac:	cmp	r0, #2
    20b0:	bgt	24b0 <log_oom_internal@plt+0xdd0>
    20b4:	mov	r4, #0
    20b8:	ldr	r0, [sp, #56]	; 0x38
    20bc:	cmp	r0, #0
    20c0:	beq	20c8 <log_oom_internal@plt+0x9e8>
    20c4:	bl	153c <sd_bus_message_unref@plt>
    20c8:	mov	r0, r9
    20cc:	bl	1470 <sd_bus_error_free@plt>
    20d0:	ldr	r0, [sp, #268]	; 0x10c
    20d4:	bl	1398 <free@plt>
    20d8:	ldr	r2, [sp, #420]	; 0x1a4
    20dc:	ldr	r3, [r8]
    20e0:	mov	r0, r4
    20e4:	cmp	r2, r3
    20e8:	bne	2538 <log_oom_internal@plt+0xe58>
    20ec:	add	sp, sp, #428	; 0x1ac
    20f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    20f4:	mov	r0, r4
    20f8:	bl	1428 <log_get_max_level_realm@plt>
    20fc:	cmp	r0, #2
    2100:	rsble	r4, r5, #0
    2104:	uxtble	r4, r4
    2108:	rsble	r4, r4, #0
    210c:	ble	20b8 <log_oom_internal@plt+0x9d8>
    2110:	mov	r1, r5
    2114:	mov	r0, r9
    2118:	bl	15f0 <bus_error_message@plt>
    211c:	ldr	r2, [pc, #1100]	; 2570 <log_oom_internal@plt+0xe90>
    2120:	ldr	r3, [pc, #1100]	; 2574 <log_oom_internal@plt+0xe94>
    2124:	add	r2, pc, r2
    2128:	str	r2, [sp, #4]
    212c:	add	r3, pc, r3
    2130:	ldr	r2, [pc, #1088]	; 2578 <log_oom_internal@plt+0xe98>
    2134:	add	r3, r3, #68	; 0x44
    2138:	str	r3, [sp]
    213c:	mov	r1, r5
    2140:	ldr	r3, [pc, #1076]	; 257c <log_oom_internal@plt+0xe9c>
    2144:	add	r2, pc, r2
    2148:	str	r0, [sp, #8]
    214c:	mov	r0, #3
    2150:	bl	1650 <log_internal_realm@plt>
    2154:	mov	r4, r0
    2158:	b	20b8 <log_oom_internal@plt+0x9d8>
    215c:	bl	14dc <terminal_is_dumb@plt>
    2160:	cmp	r0, #0
    2164:	bne	1fe0 <log_oom_internal@plt+0x900>
    2168:	ldr	r3, [pc, #1040]	; 2580 <log_oom_internal@plt+0xea0>
    216c:	ldr	r0, [pc, #1040]	; 2584 <log_oom_internal@plt+0xea4>
    2170:	mov	r2, #7
    2174:	ldr	r3, [r6, r3]
    2178:	mov	r1, #1
    217c:	add	r0, pc, r0
    2180:	ldr	r3, [r3]
    2184:	bl	159c <fwrite@plt>
    2188:	b	1fe0 <log_oom_internal@plt+0x900>
    218c:	ldr	r0, [pc, #1012]	; 2588 <log_oom_internal@plt+0xea8>
    2190:	add	r0, pc, r0
    2194:	bl	13f8 <puts@plt>
    2198:	b	20b4 <log_oom_internal@plt+0x9d4>
    219c:	add	ip, sp, #368	; 0x170
    21a0:	ldrd	r6, [ip]
    21a4:	add	ip, sp, #360	; 0x168
    21a8:	ldrd	r4, [ip]
    21ac:	strd	r6, [sp, #32]
    21b0:	cmp	r7, r5
    21b4:	cmpeq	r6, r4
    21b8:	strd	r4, [sp, #40]	; 0x28
    21bc:	strd	r4, [sp, #24]
    21c0:	bcc	20a4 <log_oom_internal@plt+0x9c4>
    21c4:	ldrd	r2, [sp, #16]
    21c8:	subs	r2, r0, r2
    21cc:	sbc	r3, r1, r3
    21d0:	mov	r4, r2
    21d4:	mov	r5, r3
    21d8:	ldrd	r2, [sp, #24]
    21dc:	subs	r2, r6, r2
    21e0:	sbc	r3, r7, r3
    21e4:	cmp	r5, r3
    21e8:	cmpeq	r4, r2
    21ec:	bcc	20a4 <log_oom_internal@plt+0x9c4>
    21f0:	ldrd	r2, [sp, #32]
    21f4:	subs	r6, r4, r2
    21f8:	sbc	r7, r5, r3
    21fc:	mov	r4, r6
    2200:	mov	r5, r7
    2204:	ldrd	r6, [sp, #16]
    2208:	adds	r6, r6, r0
    220c:	adc	r7, r7, r1
    2210:	mov	r0, r6
    2214:	mov	r1, r7
    2218:	ldrd	r6, [sp, #40]	; 0x28
    221c:	strd	r0, [sp, #16]
    2220:	adds	r2, r2, r6
    2224:	adc	r3, r3, r7
    2228:	adds	r6, r6, r4
    222c:	adc	r7, r7, r5
    2230:	mov	r4, r6
    2234:	mov	r5, r7
    2238:	cmp	r1, r3
    223c:	cmpeq	r0, r2
    2240:	strd	r2, [sp, #24]
    2244:	strd	r4, [sp, #32]
    2248:	ldrdcs	r2, [sp, #16]
    224c:	ldrdcs	r0, [sp, #24]
    2250:	subs	r2, r2, r0
    2254:	sbc	r3, r3, r1
    2258:	lsrs	r3, r3, #1
    225c:	rrx	r2, r2
    2260:	strd	r2, [sp, #48]	; 0x30
    2264:	add	r3, sp, #328	; 0x148
    2268:	ldrd	r0, [r3]
    226c:	add	r3, sp, #336	; 0x150
    2270:	ldrd	r4, [r3]
    2274:	lsrs	r1, r1, #1
    2278:	rrx	r0, r0
    227c:	ldr	r3, [sp, #304]	; 0x130
    2280:	adds	r6, r0, r4
    2284:	adc	r7, r1, r5
    2288:	cmp	r3, #3
    228c:	strd	r6, [sp, #40]	; 0x28
    2290:	movhi	r2, #0
    2294:	ldrls	r2, [pc, #752]	; 258c <log_oom_internal@plt+0xeac>
    2298:	addls	r2, pc, r2
    229c:	addls	r3, r2, r3, lsl #2
    22a0:	ldrls	r2, [r3, #144]	; 0x90
    22a4:	ldr	r1, [sp, #316]	; 0x13c
    22a8:	ldr	r3, [sp, #308]	; 0x134
    22ac:	str	r1, [sp]
    22b0:	ldr	r1, [pc, #728]	; 2590 <log_oom_internal@plt+0xeb0>
    22b4:	mov	r0, #1
    22b8:	add	r1, pc, r1
    22bc:	bl	16c8 <__printf_chk@plt>
    22c0:	ldr	r3, [sp, #316]	; 0x13c
    22c4:	cmp	r3, #1
    22c8:	bls	2520 <log_oom_internal@plt+0xe40>
    22cc:	ldr	r2, [sp, #344]	; 0x158
    22d0:	ldr	r1, [pc, #700]	; 2594 <log_oom_internal@plt+0xeb4>
    22d4:	rev	r2, r2
    22d8:	add	r1, pc, r1
    22dc:	mov	r0, #1
    22e0:	bl	16c8 <__printf_chk@plt>
    22e4:	vldr	s15, [sp, #320]	; 0x140
    22e8:	mov	r6, #0
    22ec:	mov	r7, #0
    22f0:	vcvt.f64.s32	d0, s15
    22f4:	bl	135c <__exp2_finite@plt>
    22f8:	vldr	d7, [pc, #576]	; 2540 <log_oom_internal@plt+0xe60>
    22fc:	vmul.f64	d7, d0, d7
    2300:	vmov	r0, r1, d7
    2304:	bl	4728 <log_oom_internal@plt+0x3048>
    2308:	mov	r2, #1000	; 0x3e8
    230c:	mov	r3, #0
    2310:	mov	r4, r0
    2314:	mov	r5, r1
    2318:	bl	46d8 <log_oom_internal@plt+0x2ff8>
    231c:	mov	r0, r4
    2320:	mov	r1, r5
    2324:	mov	r5, #0
    2328:	orrs	r3, r2, r3
    232c:	mov	r2, #1000	; 0x3e8
    2330:	mov	r3, #0
    2334:	movne	r4, #1
    2338:	moveq	r4, #0
    233c:	bl	46d8 <log_oom_internal@plt+0x2ff8>
    2340:	strd	r6, [sp]
    2344:	adds	r2, r4, r0
    2348:	adc	r3, r5, r1
    234c:	mov	r0, sl
    2350:	mov	r1, #64	; 0x40
    2354:	bl	165c <format_timespan@plt>
    2358:	ldr	r1, [pc, #568]	; 2598 <log_oom_internal@plt+0xeb8>
    235c:	ldr	r3, [sp, #320]	; 0x140
    2360:	add	r1, pc, r1
    2364:	mov	r2, r0
    2368:	mov	r0, #1
    236c:	bl	16c8 <__printf_chk@plt>
    2370:	ldrd	r2, [sp, #40]	; 0x28
    2374:	mov	r1, #64	; 0x40
    2378:	strd	r6, [sp]
    237c:	mov	r0, sl
    2380:	bl	165c <format_timespan@plt>
    2384:	add	r3, sp, #296	; 0x128
    2388:	mov	r1, #64	; 0x40
    238c:	ldrd	r2, [r3]
    2390:	strd	r6, [sp]
    2394:	mov	r4, r0
    2398:	mov	r0, fp
    239c:	bl	165c <format_timespan@plt>
    23a0:	ldr	r1, [pc, #500]	; 259c <log_oom_internal@plt+0xebc>
    23a4:	mov	r2, r4
    23a8:	add	r1, pc, r1
    23ac:	mov	r3, r0
    23b0:	mov	r0, #1
    23b4:	bl	16c8 <__printf_chk@plt>
    23b8:	ldrd	r2, [sp, #16]
    23bc:	ldrd	r0, [sp, #24]
    23c0:	cmp	r3, r1
    23c4:	cmpeq	r2, r0
    23c8:	bcc	2514 <log_oom_internal@plt+0xe34>
    23cc:	ldr	r6, [pc, #460]	; 25a0 <log_oom_internal@plt+0xec0>
    23d0:	add	r6, pc, r6
    23d4:	mov	r4, #0
    23d8:	mov	r5, #0
    23dc:	ldrd	r2, [sp, #48]	; 0x30
    23e0:	mov	r1, #64	; 0x40
    23e4:	strd	r4, [sp]
    23e8:	mov	r0, sl
    23ec:	bl	165c <format_timespan@plt>
    23f0:	ldr	r1, [pc, #428]	; 25a4 <log_oom_internal@plt+0xec4>
    23f4:	mov	r2, r6
    23f8:	add	r1, pc, r1
    23fc:	mov	r3, r0
    2400:	mov	r0, #1
    2404:	bl	16c8 <__printf_chk@plt>
    2408:	ldrd	r2, [sp, #32]
    240c:	mov	r1, #64	; 0x40
    2410:	strd	r4, [sp]
    2414:	mov	r0, sl
    2418:	bl	165c <format_timespan@plt>
    241c:	ldr	r1, [pc, #388]	; 25a8 <log_oom_internal@plt+0xec8>
    2420:	add	r1, pc, r1
    2424:	mov	r2, r0
    2428:	mov	r0, #1
    242c:	bl	16c8 <__printf_chk@plt>
    2430:	add	r3, sp, #400	; 0x190
    2434:	mov	r1, #64	; 0x40
    2438:	ldrd	r2, [r3]
    243c:	mov	r0, sl
    2440:	strd	r4, [sp]
    2444:	bl	165c <format_timespan@plt>
    2448:	ldr	r1, [pc, #348]	; 25ac <log_oom_internal@plt+0xecc>
    244c:	add	r1, pc, r1
    2450:	mov	r2, r0
    2454:	mov	r0, #1
    2458:	bl	16c8 <__printf_chk@plt>
    245c:	add	r3, sp, #392	; 0x188
    2460:	ldr	r1, [pc, #328]	; 25b0 <log_oom_internal@plt+0xed0>
    2464:	ldrd	r2, [r3]
    2468:	add	r1, pc, r1
    246c:	mov	r0, #1
    2470:	bl	16c8 <__printf_chk@plt>
    2474:	ldrb	r3, [sp, #384]	; 0x180
    2478:	cmp	r3, #0
    247c:	bne	20b4 <log_oom_internal@plt+0x9d4>
    2480:	add	r3, sp, #408	; 0x198
    2484:	ldrd	r0, [r3]
    2488:	bl	4678 <log_oom_internal@plt+0x2f98>
    248c:	vldr	d7, [pc, #180]	; 2548 <log_oom_internal@plt+0xe68>
    2490:	vmov	d6, r0, r1
    2494:	ldr	r1, [pc, #280]	; 25b4 <log_oom_internal@plt+0xed4>
    2498:	mov	r0, #1
    249c:	add	r1, pc, r1
    24a0:	vmul.f64	d7, d6, d7
    24a4:	vmov	r2, r3, d7
    24a8:	bl	16c8 <__printf_chk@plt>
    24ac:	b	20b4 <log_oom_internal@plt+0x9d4>
    24b0:	ldr	r2, [pc, #256]	; 25b8 <log_oom_internal@plt+0xed8>
    24b4:	ldr	r3, [pc, #256]	; 25bc <log_oom_internal@plt+0xedc>
    24b8:	add	r2, pc, r2
    24bc:	str	r2, [sp, #4]
    24c0:	add	r3, pc, r3
    24c4:	ldr	r2, [pc, #244]	; 25c0 <log_oom_internal@plt+0xee0>
    24c8:	add	r3, r3, #96	; 0x60
    24cc:	str	r3, [sp]
    24d0:	add	r2, pc, r2
    24d4:	mov	r3, #384	; 0x180
    24d8:	mov	r1, #0
    24dc:	mov	r0, #3
    24e0:	bl	1650 <log_internal_realm@plt>
    24e4:	b	20b4 <log_oom_internal@plt+0x9d4>
    24e8:	ldr	r3, [pc, #212]	; 25c4 <log_oom_internal@plt+0xee4>
    24ec:	ldr	r2, [pc, #212]	; 25c8 <log_oom_internal@plt+0xee8>
    24f0:	add	r3, pc, r3
    24f4:	ldr	r1, [pc, #208]	; 25cc <log_oom_internal@plt+0xeec>
    24f8:	add	r3, r3, #40	; 0x28
    24fc:	str	r3, [sp]
    2500:	mov	r0, r5
    2504:	ldr	r3, [pc, #196]	; 25d0 <log_oom_internal@plt+0xef0>
    2508:	add	r2, pc, r2
    250c:	add	r1, pc, r1
    2510:	bl	1644 <log_assert_failed_realm@plt>
    2514:	ldr	r6, [pc, #184]	; 25d4 <log_oom_internal@plt+0xef4>
    2518:	add	r6, pc, r6
    251c:	b	23d4 <log_oom_internal@plt+0xcf4>
    2520:	ldr	r1, [pc, #176]	; 25d8 <log_oom_internal@plt+0xef8>
    2524:	add	r2, sp, #344	; 0x158
    2528:	add	r1, pc, r1
    252c:	mov	r0, #1
    2530:	bl	16c8 <__printf_chk@plt>
    2534:	b	22e4 <log_oom_internal@plt+0xc04>
    2538:	bl	14b8 <__stack_chk_fail@plt>
    253c:	nop			; (mov r0, r0)
    2540:	andeq	r0, r0, r0
    2544:	bicmi	ip, sp, r5, ror #26
    2548:	andeq	r0, r0, r0
    254c:	cdpcc	0, 15, cr0, cr0, cr0, {0}
    2550:	andeq	r4, r1, r0, asr #30
    2554:	andeq	r0, r0, ip, lsr r1
    2558:	andeq	r4, r1, r0, lsl #22
    255c:	muleq	r0, ip, r0
    2560:	strheq	r3, [r0], -r4
    2564:	andeq	r5, r1, r4, lsr r0
    2568:	andeq	r3, r0, r4, lsl #2
    256c:	andeq	r3, r0, r4, lsr #1
    2570:	andeq	r2, r0, r8, lsr #31
    2574:	andeq	r2, r0, r8, lsl #16
    2578:	andeq	r2, r0, r4, asr #19
    257c:	andeq	r0, r0, lr, lsl r2
    2580:	andeq	r0, r0, r4, asr r1
    2584:	andeq	r2, r0, ip, ror #30
    2588:	andeq	r2, r0, r0, lsr #31
    258c:	andeq	r4, r1, ip, lsl r8
    2590:	andeq	r2, r0, r4, lsr #29
    2594:	ldrdeq	r2, [r0], -r0
    2598:	andeq	r2, r0, ip, asr lr
    259c:	andeq	r2, r0, ip, lsr #28
    25a0:	strdeq	r2, [r0], -r8
    25a4:	strdeq	r2, [r0], -ip
    25a8:	andeq	r2, r0, ip, ror #27
    25ac:	ldrdeq	r2, [r0], -r4
    25b0:	andeq	r2, r0, ip, asr #27
    25b4:			; <UNDEFINED> instruction: 0x00002db0
    25b8:	andeq	r2, r0, ip, lsl #25
    25bc:	andeq	r2, r0, r4, ror r4
    25c0:	andeq	r2, r0, r8, lsr r6
    25c4:	andeq	r2, r0, r4, asr #8
    25c8:	andeq	r2, r0, r0, lsl #12
    25cc:	andeq	r2, r0, r4, asr #22
    25d0:	andeq	r0, r0, r3, lsl r2
    25d4:	andeq	r2, r0, ip, lsr #23
    25d8:	andeq	r2, r0, ip, ror #24
    25dc:	ldr	r3, [pc, #624]	; 2854 <log_oom_internal@plt+0x1174>
    25e0:	ldr	r1, [pc, #624]	; 2858 <log_oom_internal@plt+0x1178>
    25e4:	add	r3, pc, r3
    25e8:	push	{r4, r5, r6, r7, lr}
    25ec:	sub	sp, sp, #28
    25f0:	ldr	r7, [r3, r1]
    25f4:	mov	r5, #0
    25f8:	subs	r6, r2, #0
    25fc:	ldr	r3, [r7]
    2600:	str	r5, [sp, #16]
    2604:	str	r3, [sp, #20]
    2608:	beq	2690 <log_oom_internal@plt+0xfb0>
    260c:	mov	r0, r6
    2610:	bl	1f38 <log_oom_internal@plt+0x858>
    2614:	subs	r4, r0, #0
    2618:	blt	2634 <log_oom_internal@plt+0xf54>
    261c:	ldr	r3, [pc, #568]	; 285c <log_oom_internal@plt+0x117c>
    2620:	add	r3, pc, r3
    2624:	ldrb	r3, [r3, #8]
    2628:	cmp	r3, #0
    262c:	bne	2660 <log_oom_internal@plt+0xf80>
    2630:	mov	r4, #0
    2634:	ldr	r0, [sp, #16]
    2638:	cmp	r0, #0
    263c:	beq	2644 <log_oom_internal@plt+0xf64>
    2640:	bl	1614 <sd_event_unref@plt>
    2644:	ldr	r2, [sp, #20]
    2648:	ldr	r3, [r7]
    264c:	mov	r0, r4
    2650:	cmp	r2, r3
    2654:	bne	2850 <log_oom_internal@plt+0x1170>
    2658:	add	sp, sp, #28
    265c:	pop	{r4, r5, r6, r7, pc}
    2660:	add	r0, sp, #16
    2664:	bl	1404 <sd_event_default@plt>
    2668:	subs	r4, r0, #0
    266c:	bge	26bc <log_oom_internal@plt+0xfdc>
    2670:	mov	r0, r5
    2674:	bl	1428 <log_get_max_level_realm@plt>
    2678:	cmp	r0, #2
    267c:	bgt	27b8 <log_oom_internal@plt+0x10d8>
    2680:	rsb	r4, r4, #0
    2684:	uxtb	r4, r4
    2688:	rsb	r4, r4, #0
    268c:	b	2634 <log_oom_internal@plt+0xf54>
    2690:	ldr	r3, [pc, #456]	; 2860 <log_oom_internal@plt+0x1180>
    2694:	ldr	r2, [pc, #456]	; 2864 <log_oom_internal@plt+0x1184>
    2698:	add	r3, pc, r3
    269c:	ldr	r1, [pc, #452]	; 2868 <log_oom_internal@plt+0x1188>
    26a0:	add	r3, r3, #120	; 0x78
    26a4:	str	r3, [sp]
    26a8:	mov	r0, r6
    26ac:	ldr	r3, [pc, #440]	; 286c <log_oom_internal@plt+0x118c>
    26b0:	add	r2, pc, r2
    26b4:	add	r1, pc, r1
    26b8:	bl	1644 <log_assert_failed_realm@plt>
    26bc:	ldr	r2, [pc, #428]	; 2870 <log_oom_internal@plt+0x1190>
    26c0:	ldr	r3, [pc, #428]	; 2874 <log_oom_internal@plt+0x1194>
    26c4:	add	r2, pc, r2
    26c8:	add	r3, pc, r3
    26cc:	ldr	r1, [pc, #420]	; 2878 <log_oom_internal@plt+0x1198>
    26d0:	str	r2, [sp, #4]
    26d4:	str	r3, [sp]
    26d8:	ldr	r2, [pc, #412]	; 287c <log_oom_internal@plt+0x119c>
    26dc:	ldr	r3, [pc, #412]	; 2880 <log_oom_internal@plt+0x11a0>
    26e0:	add	r1, pc, r1
    26e4:	str	r1, [sp, #8]
    26e8:	str	r5, [sp, #12]
    26ec:	add	r3, pc, r3
    26f0:	add	r2, pc, r2
    26f4:	mov	r1, r5
    26f8:	mov	r0, r6
    26fc:	bl	1374 <sd_bus_match_signal@plt>
    2700:	subs	r4, r0, #0
    2704:	bge	2754 <log_oom_internal@plt+0x1074>
    2708:	mov	r0, r5
    270c:	bl	1428 <log_get_max_level_realm@plt>
    2710:	cmp	r0, #2
    2714:	ble	2680 <log_oom_internal@plt+0xfa0>
    2718:	ldr	r2, [pc, #356]	; 2884 <log_oom_internal@plt+0x11a4>
    271c:	ldr	r3, [pc, #356]	; 2888 <log_oom_internal@plt+0x11a8>
    2720:	add	r2, pc, r2
    2724:	str	r2, [sp, #4]
    2728:	add	r3, pc, r3
    272c:	ldr	r2, [pc, #344]	; 288c <log_oom_internal@plt+0x11ac>
    2730:	add	r3, r3, #144	; 0x90
    2734:	mov	r1, r4
    2738:	str	r3, [sp]
    273c:	add	r2, pc, r2
    2740:	ldr	r3, [pc, #328]	; 2890 <log_oom_internal@plt+0x11b0>
    2744:	mov	r0, #3
    2748:	bl	1650 <log_internal_realm@plt>
    274c:	mov	r4, r0
    2750:	b	2634 <log_oom_internal@plt+0xf54>
    2754:	mov	r0, r6
    2758:	mov	r2, r5
    275c:	ldr	r1, [sp, #16]
    2760:	bl	14e8 <sd_bus_attach_event@plt>
    2764:	subs	r4, r0, #0
    2768:	bge	27f4 <log_oom_internal@plt+0x1114>
    276c:	mov	r0, r5
    2770:	bl	1428 <log_get_max_level_realm@plt>
    2774:	cmp	r0, #2
    2778:	ble	2680 <log_oom_internal@plt+0xfa0>
    277c:	ldr	r2, [pc, #272]	; 2894 <log_oom_internal@plt+0x11b4>
    2780:	ldr	r3, [pc, #272]	; 2898 <log_oom_internal@plt+0x11b8>
    2784:	add	r2, pc, r2
    2788:	str	r2, [sp, #4]
    278c:	add	r3, pc, r3
    2790:	ldr	r2, [pc, #260]	; 289c <log_oom_internal@plt+0x11bc>
    2794:	add	r3, r3, #144	; 0x90
    2798:	mov	r1, r4
    279c:	str	r3, [sp]
    27a0:	add	r2, pc, r2
    27a4:	ldr	r3, [pc, #244]	; 28a0 <log_oom_internal@plt+0x11c0>
    27a8:	mov	r0, #3
    27ac:	bl	1650 <log_internal_realm@plt>
    27b0:	mov	r4, r0
    27b4:	b	2634 <log_oom_internal@plt+0xf54>
    27b8:	ldr	r2, [pc, #228]	; 28a4 <log_oom_internal@plt+0x11c4>
    27bc:	ldr	r3, [pc, #228]	; 28a8 <log_oom_internal@plt+0x11c8>
    27c0:	add	r2, pc, r2
    27c4:	str	r2, [sp, #4]
    27c8:	add	r3, pc, r3
    27cc:	ldr	r2, [pc, #216]	; 28ac <log_oom_internal@plt+0x11cc>
    27d0:	add	r3, r3, #144	; 0x90
    27d4:	mov	r1, r4
    27d8:	str	r3, [sp]
    27dc:	add	r2, pc, r2
    27e0:	mov	r3, #584	; 0x248
    27e4:	mov	r0, #3
    27e8:	bl	1650 <log_internal_realm@plt>
    27ec:	mov	r4, r0
    27f0:	b	2634 <log_oom_internal@plt+0xf54>
    27f4:	ldr	r0, [sp, #16]
    27f8:	bl	138c <sd_event_loop@plt>
    27fc:	subs	r4, r0, #0
    2800:	bge	2630 <log_oom_internal@plt+0xf50>
    2804:	mov	r0, r5
    2808:	bl	1428 <log_get_max_level_realm@plt>
    280c:	cmp	r0, #2
    2810:	ble	2680 <log_oom_internal@plt+0xfa0>
    2814:	ldr	r2, [pc, #148]	; 28b0 <log_oom_internal@plt+0x11d0>
    2818:	ldr	r3, [pc, #148]	; 28b4 <log_oom_internal@plt+0x11d4>
    281c:	add	r2, pc, r2
    2820:	str	r2, [sp, #4]
    2824:	add	r3, pc, r3
    2828:	ldr	r2, [pc, #136]	; 28b8 <log_oom_internal@plt+0x11d8>
    282c:	add	r3, r3, #144	; 0x90
    2830:	mov	r1, r4
    2834:	str	r3, [sp]
    2838:	add	r2, pc, r2
    283c:	ldr	r3, [pc, #120]	; 28bc <log_oom_internal@plt+0x11dc>
    2840:	mov	r0, #3
    2844:	bl	1650 <log_internal_realm@plt>
    2848:	mov	r4, r0
    284c:	b	2634 <log_oom_internal@plt+0xf54>
    2850:	bl	14b8 <__stack_chk_fail@plt>
    2854:	andeq	r4, r1, r4, lsr #17
    2858:	andeq	r0, r0, ip, lsr r1
    285c:	andeq	r4, r1, r4, ror #19
    2860:	muleq	r0, ip, r2
    2864:	andeq	r2, r0, r8, asr r4
    2868:	muleq	r0, ip, r9
    286c:	andeq	r0, r0, sp, lsr r2
    2870:	andeq	r2, r0, r4, asr #23
    2874:	ldrdeq	r2, [r0], -r4
    2878:	ldrdeq	r0, [r0], -r8
    287c:	andeq	r2, r0, r0, lsl #19
    2880:	andeq	r2, r0, r8, ror #18
    2884:	muleq	r0, ip, fp
    2888:	andeq	r2, r0, ip, lsl #4
    288c:	andeq	r2, r0, ip, asr #7
    2890:	andeq	r0, r0, r2, asr r2
    2894:	andeq	r2, r0, r4, ror fp
    2898:	andeq	r2, r0, r8, lsr #3
    289c:	andeq	r2, r0, r8, ror #6
    28a0:	andeq	r0, r0, r6, asr r2
    28a4:	andeq	r2, r0, r8, lsr #21
    28a8:	andeq	r2, r0, ip, ror #2
    28ac:	andeq	r2, r0, ip, lsr #6
    28b0:	andeq	r2, r0, r4, lsl #22
    28b4:	andeq	r2, r0, r0, lsl r1
    28b8:	ldrdeq	r2, [r0], -r0
    28bc:	andeq	r0, r0, sl, asr r2
    28c0:	ldr	r3, [pc, #252]	; 29c4 <log_oom_internal@plt+0x12e4>
    28c4:	ldr	r2, [pc, #252]	; 29c8 <log_oom_internal@plt+0x12e8>
    28c8:	add	r3, pc, r3
    28cc:	push	{r4, r5, r6, lr}
    28d0:	sub	sp, sp, #16
    28d4:	ldr	r5, [r3, r2]
    28d8:	subs	r6, r0, #0
    28dc:	ldr	r3, [r5]
    28e0:	str	r3, [sp, #12]
    28e4:	beq	2998 <log_oom_internal@plt+0x12b8>
    28e8:	ldr	r1, [pc, #220]	; 29cc <log_oom_internal@plt+0x12ec>
    28ec:	add	r2, sp, #8
    28f0:	add	r1, pc, r1
    28f4:	bl	1554 <sd_bus_message_read@plt>
    28f8:	subs	r4, r0, #0
    28fc:	blt	2944 <log_oom_internal@plt+0x1264>
    2900:	ldr	r1, [pc, #200]	; 29d0 <log_oom_internal@plt+0x12f0>
    2904:	ldr	r0, [sp, #8]
    2908:	add	r1, pc, r1
    290c:	bl	13bc <strcmp_ptr@plt>
    2910:	cmp	r0, #0
    2914:	movne	r0, #0
    2918:	beq	2934 <log_oom_internal@plt+0x1254>
    291c:	ldr	r2, [sp, #12]
    2920:	ldr	r3, [r5]
    2924:	cmp	r2, r3
    2928:	bne	29c0 <log_oom_internal@plt+0x12e0>
    292c:	add	sp, sp, #16
    2930:	pop	{r4, r5, r6, pc}
    2934:	mov	r0, r6
    2938:	bl	15e4 <sd_bus_message_get_bus@plt>
    293c:	bl	1f38 <log_oom_internal@plt+0x858>
    2940:	b	291c <log_oom_internal@plt+0x123c>
    2944:	mov	r0, #0
    2948:	bl	1428 <log_get_max_level_realm@plt>
    294c:	cmp	r0, #2
    2950:	rsble	r0, r4, #0
    2954:	uxtble	r0, r0
    2958:	rsble	r0, r0, #0
    295c:	ble	291c <log_oom_internal@plt+0x123c>
    2960:	ldr	r2, [pc, #108]	; 29d4 <log_oom_internal@plt+0x12f4>
    2964:	ldr	r3, [pc, #108]	; 29d8 <log_oom_internal@plt+0x12f8>
    2968:	add	r2, pc, r2
    296c:	str	r2, [sp, #4]
    2970:	add	r3, pc, r3
    2974:	ldr	r2, [pc, #96]	; 29dc <log_oom_internal@plt+0x12fc>
    2978:	add	r3, r3, #192	; 0xc0
    297c:	str	r3, [sp]
    2980:	mov	r1, r4
    2984:	mov	r3, #560	; 0x230
    2988:	add	r2, pc, r2
    298c:	mov	r0, #3
    2990:	bl	1650 <log_internal_realm@plt>
    2994:	b	291c <log_oom_internal@plt+0x123c>
    2998:	ldr	r2, [pc, #64]	; 29e0 <log_oom_internal@plt+0x1300>
    299c:	ldr	r1, [pc, #64]	; 29e4 <log_oom_internal@plt+0x1304>
    29a0:	add	r2, pc, r2
    29a4:	add	r2, r2, #168	; 0xa8
    29a8:	str	r2, [sp]
    29ac:	ldr	r2, [pc, #52]	; 29e8 <log_oom_internal@plt+0x1308>
    29b0:	mov	r3, #556	; 0x22c
    29b4:	add	r2, pc, r2
    29b8:	add	r1, pc, r1
    29bc:	bl	1644 <log_assert_failed_realm@plt>
    29c0:	bl	14b8 <__stack_chk_fail@plt>
    29c4:	andeq	r4, r1, r0, asr #11
    29c8:	andeq	r0, r0, ip, lsr r1
    29cc:	strdeq	r2, [r0], -ip
    29d0:	andeq	r2, r0, ip, asr sl
    29d4:	ldrdeq	r2, [r0], -r8
    29d8:	andeq	r1, r0, r4, asr #31
    29dc:	andeq	r2, r0, r0, lsl #3
    29e0:	muleq	r0, r4, pc	; <UNPREDICTABLE>
    29e4:	andeq	r2, r0, r8, lsr #19
    29e8:	andeq	r2, r0, r4, asr r1
    29ec:	ldr	r3, [pc, #376]	; 2b6c <log_oom_internal@plt+0x148c>
    29f0:	ldr	r1, [pc, #376]	; 2b70 <log_oom_internal@plt+0x1490>
    29f4:	add	r3, pc, r3
    29f8:	push	{r4, r5, r6, lr}
    29fc:	sub	sp, sp, #40	; 0x28
    2a00:	ldr	r5, [r3, r1]
    2a04:	ldr	r4, [sp, #56]	; 0x38
    2a08:	ldr	r3, [r5]
    2a0c:	cmp	r4, #0
    2a10:	str	r3, [sp, #36]	; 0x24
    2a14:	beq	2b34 <log_oom_internal@plt+0x1454>
    2a18:	mov	r6, r2
    2a1c:	ldr	r2, [pc, #336]	; 2b74 <log_oom_internal@plt+0x1494>
    2a20:	mov	r1, #114	; 0x72
    2a24:	add	r2, pc, r2
    2a28:	mov	r0, r6
    2a2c:	bl	14ac <sd_bus_message_enter_container@plt>
    2a30:	cmp	r0, #0
    2a34:	blt	2b1c <log_oom_internal@plt+0x143c>
    2a38:	add	r1, r4, #56	; 0x38
    2a3c:	str	r1, [sp, #8]
    2a40:	ldr	r1, [pc, #304]	; 2b78 <log_oom_internal@plt+0x1498>
    2a44:	add	ip, r4, #72	; 0x48
    2a48:	add	r0, r4, #64	; 0x40
    2a4c:	add	r2, r4, #52	; 0x34
    2a50:	add	r3, r4, #48	; 0x30
    2a54:	str	r0, [sp, #12]
    2a58:	str	r2, [sp, #4]
    2a5c:	str	r3, [sp]
    2a60:	str	ip, [sp, #16]
    2a64:	add	r3, r4, #44	; 0x2c
    2a68:	add	r2, r4, #40	; 0x28
    2a6c:	add	r1, pc, r1
    2a70:	mov	r0, r6
    2a74:	bl	1554 <sd_bus_message_read@plt>
    2a78:	cmp	r0, #0
    2a7c:	blt	2b1c <log_oom_internal@plt+0x143c>
    2a80:	add	r3, sp, #28
    2a84:	add	r2, sp, #24
    2a88:	mov	r1, #121	; 0x79
    2a8c:	mov	r0, r6
    2a90:	bl	15c0 <sd_bus_message_read_array@plt>
    2a94:	cmp	r0, #0
    2a98:	blt	2b1c <log_oom_internal@plt+0x143c>
    2a9c:	add	r3, r4, #128	; 0x80
    2aa0:	add	r1, r4, #112	; 0x70
    2aa4:	str	r3, [sp, #12]
    2aa8:	add	r3, sp, #32
    2aac:	add	r0, r4, #136	; 0x88
    2ab0:	stmib	sp, {r1, r3}
    2ab4:	ldr	r1, [pc, #192]	; 2b7c <log_oom_internal@plt+0x149c>
    2ab8:	add	r2, r4, #104	; 0x68
    2abc:	str	r0, [sp, #16]
    2ac0:	str	r2, [sp]
    2ac4:	add	r3, r4, #96	; 0x60
    2ac8:	add	r2, r4, #88	; 0x58
    2acc:	add	r1, pc, r1
    2ad0:	mov	r0, r6
    2ad4:	bl	1554 <sd_bus_message_read@plt>
    2ad8:	cmp	r0, #0
    2adc:	blt	2b1c <log_oom_internal@plt+0x143c>
    2ae0:	mov	r0, r6
    2ae4:	bl	1494 <sd_bus_message_exit_container@plt>
    2ae8:	cmp	r0, #0
    2aec:	blt	2b1c <log_oom_internal@plt+0x143c>
    2af0:	ldr	r3, [sp, #28]
    2af4:	cmp	r3, #4
    2af8:	bne	2b60 <log_oom_internal@plt+0x1480>
    2afc:	ldr	r2, [sp, #24]
    2b00:	ldr	r3, [sp, #32]
    2b04:	mov	r0, #0
    2b08:	ldr	r2, [r2]
    2b0c:	subs	r3, r3, r0
    2b10:	movne	r3, #1
    2b14:	str	r2, [r4, #80]	; 0x50
    2b18:	strb	r3, [r4, #120]	; 0x78
    2b1c:	ldr	r2, [sp, #36]	; 0x24
    2b20:	ldr	r3, [r5]
    2b24:	cmp	r2, r3
    2b28:	bne	2b68 <log_oom_internal@plt+0x1488>
    2b2c:	add	sp, sp, #40	; 0x28
    2b30:	pop	{r4, r5, r6, pc}
    2b34:	ldr	r3, [pc, #68]	; 2b80 <log_oom_internal@plt+0x14a0>
    2b38:	ldr	r2, [pc, #68]	; 2b84 <log_oom_internal@plt+0x14a4>
    2b3c:	add	r3, pc, r3
    2b40:	ldr	r1, [pc, #64]	; 2b88 <log_oom_internal@plt+0x14a8>
    2b44:	add	r3, r3, #216	; 0xd8
    2b48:	str	r3, [sp]
    2b4c:	mov	r0, r4
    2b50:	ldr	r3, [pc, #52]	; 2b8c <log_oom_internal@plt+0x14ac>
    2b54:	add	r2, pc, r2
    2b58:	add	r1, pc, r1
    2b5c:	bl	1644 <log_assert_failed_realm@plt>
    2b60:	mvn	r0, #21
    2b64:	b	2b1c <log_oom_internal@plt+0x143c>
    2b68:	bl	14b8 <__stack_chk_fail@plt>
    2b6c:	muleq	r1, r4, r4
    2b70:	andeq	r0, r0, ip, lsr r1
    2b74:	andeq	r2, r0, r8, ror #18
    2b78:	andeq	r2, r0, r4, lsr r9
    2b7c:	ldrdeq	r2, [r0], -ip
    2b80:	strdeq	r1, [r0], -r8
    2b84:			; <UNDEFINED> instruction: 0x00001fb4
    2b88:	andeq	r2, r0, r0, lsr r8
    2b8c:	ldrdeq	r0, [r0], -lr
    2b90:	ldr	r3, [pc, #476]	; 2d74 <log_oom_internal@plt+0x1694>
    2b94:	ldr	r1, [pc, #476]	; 2d78 <log_oom_internal@plt+0x1698>
    2b98:	add	r3, pc, r3
    2b9c:	push	{r4, r5, r6, r7, lr}
    2ba0:	sub	sp, sp, #36	; 0x24
    2ba4:	ldr	r5, [r3, r1]
    2ba8:	ldr	r7, [sp, #56]	; 0x38
    2bac:	ldr	r3, [r5]
    2bb0:	cmp	r7, #0
    2bb4:	str	r3, [sp, #28]
    2bb8:	beq	2cc4 <log_oom_internal@plt+0x15e4>
    2bbc:	mov	r6, r2
    2bc0:	ldr	r2, [pc, #436]	; 2d7c <log_oom_internal@plt+0x169c>
    2bc4:	mov	r1, #114	; 0x72
    2bc8:	add	r2, pc, r2
    2bcc:	mov	r0, r6
    2bd0:	bl	14ac <sd_bus_message_enter_container@plt>
    2bd4:	subs	r4, r0, #0
    2bd8:	blt	2c48 <log_oom_internal@plt+0x1568>
    2bdc:	ldr	r1, [pc, #412]	; 2d80 <log_oom_internal@plt+0x16a0>
    2be0:	add	r2, sp, #20
    2be4:	add	r1, pc, r1
    2be8:	mov	r0, r6
    2bec:	bl	1554 <sd_bus_message_read@plt>
    2bf0:	subs	r4, r0, #0
    2bf4:	blt	2c48 <log_oom_internal@plt+0x1568>
    2bf8:	add	r3, sp, #24
    2bfc:	add	r2, sp, #16
    2c00:	mov	r1, #121	; 0x79
    2c04:	mov	r0, r6
    2c08:	bl	15c0 <sd_bus_message_read_array@plt>
    2c0c:	subs	r4, r0, #0
    2c10:	blt	2c48 <log_oom_internal@plt+0x1568>
    2c14:	mov	r0, r6
    2c18:	bl	1494 <sd_bus_message_exit_container@plt>
    2c1c:	subs	r4, r0, #0
    2c20:	blt	2c48 <log_oom_internal@plt+0x1568>
    2c24:	ldr	r3, [sp, #24]
    2c28:	ldr	r4, [sp, #20]
    2c2c:	cmp	r3, #0
    2c30:	bne	2c64 <log_oom_internal@plt+0x1584>
    2c34:	cmp	r4, #0
    2c38:	bne	2c64 <log_oom_internal@plt+0x1584>
    2c3c:	ldr	r0, [r7]
    2c40:	bl	1398 <free@plt>
    2c44:	str	r4, [r7]
    2c48:	ldr	r2, [sp, #28]
    2c4c:	ldr	r3, [r5]
    2c50:	mov	r0, r4
    2c54:	cmp	r2, r3
    2c58:	bne	2d70 <log_oom_internal@plt+0x1690>
    2c5c:	add	sp, sp, #36	; 0x24
    2c60:	pop	{r4, r5, r6, r7, pc}
    2c64:	cmp	r4, #2
    2c68:	beq	2d48 <log_oom_internal@plt+0x1668>
    2c6c:	cmp	r4, #10
    2c70:	beq	2cf0 <log_oom_internal@plt+0x1610>
    2c74:	mov	r0, #0
    2c78:	bl	1428 <log_get_max_level_realm@plt>
    2c7c:	cmp	r0, #2
    2c80:	ble	2d68 <log_oom_internal@plt+0x1688>
    2c84:	ldr	r2, [pc, #248]	; 2d84 <log_oom_internal@plt+0x16a4>
    2c88:	ldr	r3, [pc, #248]	; 2d88 <log_oom_internal@plt+0x16a8>
    2c8c:	add	r2, pc, r2
    2c90:	str	r2, [sp, #4]
    2c94:	add	r3, pc, r3
    2c98:	ldr	r2, [pc, #236]	; 2d8c <log_oom_internal@plt+0x16ac>
    2c9c:	add	r3, r3, #272	; 0x110
    2ca0:	str	r4, [sp, #8]
    2ca4:	str	r3, [sp]
    2ca8:	add	r2, pc, r2
    2cac:	ldr	r3, [pc, #220]	; 2d90 <log_oom_internal@plt+0x16b0>
    2cb0:	mov	r1, #1073741846	; 0x40000016
    2cb4:	mov	r0, #3
    2cb8:	bl	1650 <log_internal_realm@plt>
    2cbc:	mov	r4, r0
    2cc0:	b	2c48 <log_oom_internal@plt+0x1568>
    2cc4:	ldr	r3, [pc, #200]	; 2d94 <log_oom_internal@plt+0x16b4>
    2cc8:	ldr	r2, [pc, #200]	; 2d98 <log_oom_internal@plt+0x16b8>
    2ccc:	add	r3, pc, r3
    2cd0:	ldr	r1, [pc, #196]	; 2d9c <log_oom_internal@plt+0x16bc>
    2cd4:	add	r3, r3, #232	; 0xe8
    2cd8:	str	r3, [sp]
    2cdc:	mov	r0, r7
    2ce0:	ldr	r3, [pc, #184]	; 2da0 <log_oom_internal@plt+0x16c0>
    2ce4:	add	r2, pc, r2
    2ce8:	add	r1, pc, r1
    2cec:	bl	1644 <log_assert_failed_realm@plt>
    2cf0:	mov	r2, #16
    2cf4:	cmp	r3, r2
    2cf8:	beq	2d50 <log_oom_internal@plt+0x1670>
    2cfc:	mov	r0, #0
    2d00:	bl	1428 <log_get_max_level_realm@plt>
    2d04:	cmp	r0, #2
    2d08:	ble	2d68 <log_oom_internal@plt+0x1688>
    2d0c:	ldr	r2, [pc, #144]	; 2da4 <log_oom_internal@plt+0x16c4>
    2d10:	ldr	r3, [pc, #144]	; 2da8 <log_oom_internal@plt+0x16c8>
    2d14:	add	r2, pc, r2
    2d18:	str	r2, [sp, #4]
    2d1c:	add	r3, pc, r3
    2d20:	ldr	r2, [pc, #132]	; 2dac <log_oom_internal@plt+0x16cc>
    2d24:	add	r3, r3, #272	; 0x110
    2d28:	str	r3, [sp]
    2d2c:	add	r2, pc, r2
    2d30:	ldr	r3, [pc, #120]	; 2db0 <log_oom_internal@plt+0x16d0>
    2d34:	mov	r1, #1073741846	; 0x40000016
    2d38:	mov	r0, #3
    2d3c:	bl	1650 <log_internal_realm@plt>
    2d40:	mov	r4, r0
    2d44:	b	2c48 <log_oom_internal@plt+0x1568>
    2d48:	mov	r2, #4
    2d4c:	b	2cf4 <log_oom_internal@plt+0x1614>
    2d50:	mov	r0, r4
    2d54:	mov	r2, r7
    2d58:	ldr	r1, [sp, #16]
    2d5c:	bl	1464 <in_addr_to_string@plt>
    2d60:	and	r4, r0, r0, asr #31
    2d64:	b	2c48 <log_oom_internal@plt+0x1568>
    2d68:	mvn	r4, #21
    2d6c:	b	2c48 <log_oom_internal@plt+0x1568>
    2d70:	bl	14b8 <__stack_chk_fail@plt>
    2d74:	strdeq	r4, [r1], -r0
    2d78:	andeq	r0, r0, ip, lsr r1
    2d7c:	andeq	r2, r0, r8, ror #15
    2d80:	andeq	r2, r0, r8, lsr #16
    2d84:	andeq	r2, r0, r8, ror #14
    2d88:	andeq	r1, r0, r0, lsr #25
    2d8c:	andeq	r1, r0, r0, ror #28
    2d90:	andeq	r0, r0, sl, asr #3
    2d94:	andeq	r1, r0, r8, ror #24
    2d98:	andeq	r1, r0, r4, lsr #28
    2d9c:	andeq	r2, r0, r0, lsr #13
    2da0:			; <UNDEFINED> instruction: 0x000001b1
    2da4:	strdeq	r2, [r0], -ip
    2da8:	andeq	r1, r0, r8, lsl ip
    2dac:	ldrdeq	r1, [r0], -ip
    2db0:	andeq	r0, r0, lr, asr #3
    2db4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2db8:	mov	r8, r1
    2dbc:	ldr	r4, [pc, #820]	; 30f8 <log_oom_internal@plt+0x1a18>
    2dc0:	ldr	ip, [pc, #820]	; 30fc <log_oom_internal@plt+0x1a1c>
    2dc4:	add	r4, pc, r4
    2dc8:	ldr	r1, [pc, #816]	; 3100 <log_oom_internal@plt+0x1a20>
    2dcc:	ldr	r5, [r4, ip]
    2dd0:	sub	sp, sp, #288	; 0x120
    2dd4:	mov	r9, r3
    2dd8:	ldr	r3, [r5]
    2ddc:	add	r1, pc, r1
    2de0:	mov	sl, r2
    2de4:	mov	r7, r0
    2de8:	str	r3, [sp, #284]	; 0x11c
    2dec:	bl	15fc <strcmp@plt>
    2df0:	subs	r6, r0, #0
    2df4:	beq	2e84 <log_oom_internal@plt+0x17a4>
    2df8:	ldr	r1, [pc, #772]	; 3104 <log_oom_internal@plt+0x1a24>
    2dfc:	mov	r0, r7
    2e00:	add	r1, pc, r1
    2e04:	bl	15fc <strcmp@plt>
    2e08:	subs	r3, r0, #0
    2e0c:	movne	r6, #0
    2e10:	beq	2e30 <log_oom_internal@plt+0x1750>
    2e14:	ldr	r2, [sp, #284]	; 0x11c
    2e18:	ldr	r3, [r5]
    2e1c:	mov	r0, r6
    2e20:	cmp	r2, r3
    2e24:	bne	30f4 <log_oom_internal@plt+0x1a14>
    2e28:	add	sp, sp, #288	; 0x120
    2e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2e30:	add	r1, sp, #288	; 0x120
    2e34:	mov	r2, sl
    2e38:	str	r3, [r1, #-268]!	; 0xfffffef4
    2e3c:	str	r1, [sp]
    2e40:	mov	r1, r3
    2e44:	bl	2b90 <log_oom_internal@plt+0x14b0>
    2e48:	subs	r6, r0, #0
    2e4c:	blt	30a4 <log_oom_internal@plt+0x19c4>
    2e50:	ldr	r3, [pc, #688]	; 3108 <log_oom_internal@plt+0x1a28>
    2e54:	ldr	r0, [sp, #20]
    2e58:	add	r3, pc, r3
    2e5c:	ldrb	r3, [r3]
    2e60:	cmp	r3, #0
    2e64:	bne	3084 <log_oom_internal@plt+0x19a4>
    2e68:	cmp	r0, #0
    2e6c:	beq	2e7c <log_oom_internal@plt+0x179c>
    2e70:	ldrb	r3, [r0]
    2e74:	cmp	r3, #0
    2e78:	bne	3084 <log_oom_internal@plt+0x19a4>
    2e7c:	mov	r6, #1
    2e80:	b	30a8 <log_oom_internal@plt+0x19c8>
    2e84:	add	r3, sp, #128	; 0x80
    2e88:	mov	r1, r6
    2e8c:	mov	r0, r3
    2e90:	mov	r2, #152	; 0x98
    2e94:	bl	141c <memset@plt>
    2e98:	mov	r3, r6
    2e9c:	mov	r1, r6
    2ea0:	mov	r2, sl
    2ea4:	str	r0, [sp]
    2ea8:	mov	r0, r6
    2eac:	bl	29ec <log_oom_internal@plt+0x130c>
    2eb0:	subs	r6, r0, #0
    2eb4:	blt	3078 <log_oom_internal@plt+0x1998>
    2eb8:	add	r3, sp, #256	; 0x100
    2ebc:	ldrd	r2, [r3]
    2ec0:	orrs	r3, r2, r3
    2ec4:	moveq	r6, #1
    2ec8:	beq	3078 <log_oom_internal@plt+0x1998>
    2ecc:	cmp	r9, #0
    2ed0:	beq	30d0 <log_oom_internal@plt+0x19f0>
    2ed4:	ldr	r1, [sp, #176]	; 0xb0
    2ed8:	ldr	ip, [sp, #184]	; 0xb8
    2edc:	ldr	r0, [sp, #180]	; 0xb4
    2ee0:	str	r1, [sp]
    2ee4:	ldr	r1, [pc, #544]	; 310c <log_oom_internal@plt+0x1a2c>
    2ee8:	mov	r8, #0
    2eec:	mov	r9, #0
    2ef0:	stmib	sp, {r0, ip}
    2ef4:	ldrd	r2, [sp, #168]	; 0xa8
    2ef8:	add	r1, pc, r1
    2efc:	add	r6, sp, #64	; 0x40
    2f00:	mov	r0, #1
    2f04:	bl	16c8 <__printf_chk@plt>
    2f08:	ldrd	r2, [sp, #192]	; 0xc0
    2f0c:	mov	r1, #64	; 0x40
    2f10:	strd	r8, [sp]
    2f14:	mov	r0, r6
    2f18:	bl	165c <format_timespan@plt>
    2f1c:	ldr	r1, [pc, #492]	; 3110 <log_oom_internal@plt+0x1a30>
    2f20:	add	r1, pc, r1
    2f24:	mov	r2, r0
    2f28:	mov	r0, #1
    2f2c:	bl	16c8 <__printf_chk@plt>
    2f30:	ldrd	r2, [sp, #200]	; 0xc8
    2f34:	mov	r1, #64	; 0x40
    2f38:	strd	r8, [sp]
    2f3c:	mov	r0, r6
    2f40:	bl	165c <format_timespan@plt>
    2f44:	ldr	r1, [pc, #456]	; 3114 <log_oom_internal@plt+0x1a34>
    2f48:	add	r1, pc, r1
    2f4c:	mov	r2, r0
    2f50:	mov	r0, #1
    2f54:	bl	16c8 <__printf_chk@plt>
    2f58:	ldr	r0, [sp, #180]	; 0xb4
    2f5c:	cmp	r0, #1
    2f60:	beq	30bc <log_oom_internal@plt+0x19dc>
    2f64:	ldr	r2, [sp, #208]	; 0xd0
    2f68:	ldr	r1, [pc, #424]	; 3118 <log_oom_internal@plt+0x1a38>
    2f6c:	rev	r2, r2
    2f70:	add	r1, pc, r1
    2f74:	mov	r0, #1
    2f78:	bl	16c8 <__printf_chk@plt>
    2f7c:	add	r4, sp, #24
    2f80:	ldrd	r2, [sp, #216]	; 0xd8
    2f84:	mov	r1, #38	; 0x26
    2f88:	mov	r0, r4
    2f8c:	bl	1500 <format_timestamp@plt>
    2f90:	ldr	r1, [pc, #388]	; 311c <log_oom_internal@plt+0x1a3c>
    2f94:	add	r1, pc, r1
    2f98:	mov	r2, r0
    2f9c:	mov	r0, #1
    2fa0:	bl	16c8 <__printf_chk@plt>
    2fa4:	ldrd	r2, [sp, #224]	; 0xe0
    2fa8:	mov	r1, #38	; 0x26
    2fac:	mov	r0, r4
    2fb0:	bl	1500 <format_timestamp@plt>
    2fb4:	ldr	r1, [pc, #356]	; 3120 <log_oom_internal@plt+0x1a40>
    2fb8:	add	r1, pc, r1
    2fbc:	mov	r2, r0
    2fc0:	mov	r0, #1
    2fc4:	bl	16c8 <__printf_chk@plt>
    2fc8:	ldrd	r2, [sp, #232]	; 0xe8
    2fcc:	mov	r1, #38	; 0x26
    2fd0:	mov	r0, r4
    2fd4:	bl	1500 <format_timestamp@plt>
    2fd8:	ldr	r1, [pc, #324]	; 3124 <log_oom_internal@plt+0x1a44>
    2fdc:	add	r1, pc, r1
    2fe0:	mov	r2, r0
    2fe4:	mov	r0, #1
    2fe8:	bl	16c8 <__printf_chk@plt>
    2fec:	ldrd	r2, [sp, #240]	; 0xf0
    2ff0:	mov	r1, #38	; 0x26
    2ff4:	mov	r0, r4
    2ff8:	bl	1500 <format_timestamp@plt>
    2ffc:	ldr	r1, [pc, #292]	; 3128 <log_oom_internal@plt+0x1a48>
    3000:	add	r1, pc, r1
    3004:	mov	r2, r0
    3008:	mov	r0, #1
    300c:	bl	16c8 <__printf_chk@plt>
    3010:	ldrb	r3, [sp, #248]	; 0xf8
    3014:	cmp	r3, #0
    3018:	beq	30b0 <log_oom_internal@plt+0x19d0>
    301c:	ldr	r2, [pc, #264]	; 312c <log_oom_internal@plt+0x1a4c>
    3020:	add	r2, pc, r2
    3024:	add	r3, sp, #256	; 0x100
    3028:	ldr	r1, [pc, #256]	; 3130 <log_oom_internal@plt+0x1a50>
    302c:	ldrd	r8, [r3]
    3030:	add	r1, pc, r1
    3034:	mov	r0, #1
    3038:	strd	r8, [sp]
    303c:	bl	16c8 <__printf_chk@plt>
    3040:	mov	r8, #0
    3044:	add	r3, sp, #264	; 0x108
    3048:	mov	r9, #0
    304c:	ldrd	r2, [r3]
    3050:	mov	r0, r6
    3054:	mov	r1, #64	; 0x40
    3058:	strd	r8, [sp]
    305c:	bl	165c <format_timespan@plt>
    3060:	ldr	r1, [pc, #204]	; 3134 <log_oom_internal@plt+0x1a54>
    3064:	mov	r6, #1
    3068:	add	r1, pc, r1
    306c:	mov	r2, r0
    3070:	mov	r0, #1
    3074:	bl	16c8 <__printf_chk@plt>
    3078:	ldr	r0, [sp, #132]	; 0x84
    307c:	bl	1398 <free@plt>
    3080:	b	2e14 <log_oom_internal@plt+0x1734>
    3084:	ldr	r3, [pc, #172]	; 3138 <log_oom_internal@plt+0x1a58>
    3088:	str	r0, [sp]
    308c:	mov	r2, r9
    3090:	mov	r1, r8
    3094:	mov	r0, r7
    3098:	add	r3, pc, r3
    309c:	bl	1668 <bus_print_property_value@plt>
    30a0:	mov	r6, #1
    30a4:	ldr	r0, [sp, #20]
    30a8:	bl	1398 <free@plt>
    30ac:	b	2e14 <log_oom_internal@plt+0x1734>
    30b0:	ldr	r2, [pc, #132]	; 313c <log_oom_internal@plt+0x1a5c>
    30b4:	add	r2, pc, r2
    30b8:	b	3024 <log_oom_internal@plt+0x1944>
    30bc:	ldr	r1, [pc, #124]	; 3140 <log_oom_internal@plt+0x1a60>
    30c0:	add	r2, sp, #208	; 0xd0
    30c4:	add	r1, pc, r1
    30c8:	bl	16c8 <__printf_chk@plt>
    30cc:	b	2f7c <log_oom_internal@plt+0x189c>
    30d0:	ldr	r3, [pc, #108]	; 3144 <log_oom_internal@plt+0x1a64>
    30d4:	mov	r0, r7
    30d8:	ldr	r4, [r4, r3]
    30dc:	ldr	r1, [r4]
    30e0:	bl	1680 <fputs@plt>
    30e4:	ldr	r1, [r4]
    30e8:	mov	r0, #61	; 0x3d
    30ec:	bl	1584 <fputc@plt>
    30f0:	b	2ed4 <log_oom_internal@plt+0x17f4>
    30f4:	bl	14b8 <__stack_chk_fail@plt>
    30f8:	andeq	r4, r1, r4, asr #1
    30fc:	andeq	r0, r0, ip, lsr r1
    3100:	andeq	r2, r0, r4, asr r6
    3104:	andeq	r2, r0, r0, asr r7
    3108:	andeq	r4, r1, ip, lsr #3
    310c:	andeq	r2, r0, r4, asr #10
    3110:	andeq	r2, r0, r8, asr r5
    3114:	andeq	r2, r0, r0, asr #10
    3118:	andeq	r2, r0, ip, lsr r5
    311c:	andeq	r2, r0, r8, lsr #10
    3120:	andeq	r2, r0, ip, lsl r5
    3124:	andeq	r2, r0, r0, lsl r5
    3128:	andeq	r2, r0, r4, lsl #10
    312c:	andeq	r2, r0, r8, lsl #8
    3130:	strdeq	r2, [r0], -r0
    3134:	ldrdeq	r2, [r0], -r8
    3138:	andeq	r2, r0, r8, lsr #12
    313c:	andeq	r2, r0, r8, ror r3
    3140:	ldrdeq	r2, [r0], -r8
    3144:	andeq	r0, r0, r4, asr r1
    3148:	ldr	ip, [pc, #228]	; 3234 <log_oom_internal@plt+0x1b54>
    314c:	push	{r4, r5, r6, r7, r8, lr}
    3150:	add	ip, pc, ip
    3154:	ldr	lr, [pc, #220]	; 3238 <log_oom_internal@plt+0x1b58>
    3158:	sub	sp, sp, #24
    315c:	mov	r4, r2
    3160:	ldr	r5, [ip, lr]
    3164:	mov	r2, ip
    3168:	subs	r7, r0, #0
    316c:	ldr	r2, [r5]
    3170:	str	r2, [sp, #20]
    3174:	beq	31dc <log_oom_internal@plt+0x1afc>
    3178:	cmp	r4, #0
    317c:	beq	3204 <log_oom_internal@plt+0x1b24>
    3180:	mov	r6, r1
    3184:	add	r2, sp, #16
    3188:	add	r1, sp, #15
    318c:	mov	r0, r4
    3190:	mov	r8, r3
    3194:	bl	1518 <sd_bus_message_peek_type@plt>
    3198:	cmp	r0, #0
    319c:	blt	31c4 <log_oom_internal@plt+0x1ae4>
    31a0:	ldrb	r3, [sp, #15]
    31a4:	cmp	r3, #114	; 0x72
    31a8:	movne	r0, #0
    31ac:	bne	31c4 <log_oom_internal@plt+0x1ae4>
    31b0:	mov	r3, r8
    31b4:	mov	r2, r4
    31b8:	mov	r1, r6
    31bc:	mov	r0, r7
    31c0:	bl	2db4 <log_oom_internal@plt+0x16d4>
    31c4:	ldr	r2, [sp, #20]
    31c8:	ldr	r3, [r5]
    31cc:	cmp	r2, r3
    31d0:	bne	3230 <log_oom_internal@plt+0x1b50>
    31d4:	add	sp, sp, #24
    31d8:	pop	{r4, r5, r6, r7, r8, pc}
    31dc:	ldr	r2, [pc, #88]	; 323c <log_oom_internal@plt+0x1b5c>
    31e0:	ldr	r1, [pc, #88]	; 3240 <log_oom_internal@plt+0x1b60>
    31e4:	add	r2, pc, r2
    31e8:	add	r2, r2, #292	; 0x124
    31ec:	str	r2, [sp]
    31f0:	ldr	r2, [pc, #76]	; 3244 <log_oom_internal@plt+0x1b64>
    31f4:	mov	r3, #612	; 0x264
    31f8:	add	r2, pc, r2
    31fc:	add	r1, pc, r1
    3200:	bl	1644 <log_assert_failed_realm@plt>
    3204:	ldr	r3, [pc, #60]	; 3248 <log_oom_internal@plt+0x1b68>
    3208:	ldr	r2, [pc, #60]	; 324c <log_oom_internal@plt+0x1b6c>
    320c:	add	r3, pc, r3
    3210:	ldr	r1, [pc, #56]	; 3250 <log_oom_internal@plt+0x1b70>
    3214:	add	r3, r3, #292	; 0x124
    3218:	str	r3, [sp]
    321c:	mov	r0, r4
    3220:	ldr	r3, [pc, #44]	; 3254 <log_oom_internal@plt+0x1b74>
    3224:	add	r2, pc, r2
    3228:	add	r1, pc, r1
    322c:	bl	1644 <log_assert_failed_realm@plt>
    3230:	bl	14b8 <__stack_chk_fail@plt>
    3234:	andeq	r3, r1, r8, lsr sp
    3238:	andeq	r0, r0, ip, lsr r1
    323c:	andeq	r1, r0, r0, asr r7
    3240:	andeq	r2, r0, r4, ror #6
    3244:	andeq	r1, r0, r0, lsl r9
    3248:	andeq	r1, r0, r8, lsr #14
    324c:	andeq	r1, r0, r4, ror #17
    3250:	andeq	r2, r0, r8, lsr r1
    3254:	andeq	r0, r0, r5, ror #4
    3258:	ldr	ip, [pc, #328]	; 33a8 <log_oom_internal@plt+0x1cc8>
    325c:	ldr	r1, [pc, #328]	; 33ac <log_oom_internal@plt+0x1ccc>
    3260:	add	ip, pc, ip
    3264:	push	{r4, r5, r6, r7, lr}
    3268:	sub	sp, sp, #44	; 0x2c
    326c:	ldr	r6, [ip, r1]
    3270:	ldr	r1, [pc, #312]	; 33b0 <log_oom_internal@plt+0x1cd0>
    3274:	ldr	r3, [pc, #312]	; 33b4 <log_oom_internal@plt+0x1cd4>
    3278:	add	lr, sp, #40	; 0x28
    327c:	add	r1, pc, r1
    3280:	mov	r0, r2
    3284:	add	r5, sp, #24
    3288:	ldr	r2, [pc, #296]	; 33b8 <log_oom_internal@plt+0x1cd8>
    328c:	ldr	r7, [r6]
    3290:	mov	r4, #0
    3294:	add	r3, pc, r3
    3298:	str	r4, [lr, #-20]!	; 0xffffffec
    329c:	add	r2, pc, r2
    32a0:	stm	sp, {r1, r5}
    32a4:	str	r4, [sp, #12]
    32a8:	str	lr, [sp, #8]
    32ac:	mov	r1, r3
    32b0:	str	r7, [sp, #36]	; 0x24
    32b4:	str	r4, [sp, #24]
    32b8:	str	r4, [sp, #28]
    32bc:	str	r4, [sp, #32]
    32c0:	bl	162c <sd_bus_call_method@plt>
    32c4:	subs	r7, r0, #0
    32c8:	bge	331c <log_oom_internal@plt+0x1c3c>
    32cc:	mov	r0, r4
    32d0:	bl	1428 <log_get_max_level_realm@plt>
    32d4:	cmp	r0, #2
    32d8:	rsble	r4, r7, #0
    32dc:	uxtble	r4, r4
    32e0:	rsble	r4, r4, #0
    32e4:	bgt	334c <log_oom_internal@plt+0x1c6c>
    32e8:	ldr	r0, [sp, #20]
    32ec:	cmp	r0, #0
    32f0:	beq	32f8 <log_oom_internal@plt+0x1c18>
    32f4:	bl	153c <sd_bus_message_unref@plt>
    32f8:	mov	r0, r5
    32fc:	bl	1470 <sd_bus_error_free@plt>
    3300:	ldr	r2, [sp, #36]	; 0x24
    3304:	ldr	r3, [r6]
    3308:	mov	r0, r4
    330c:	cmp	r2, r3
    3310:	bne	33a4 <log_oom_internal@plt+0x1cc4>
    3314:	add	sp, sp, #44	; 0x2c
    3318:	pop	{r4, r5, r6, r7, pc}
    331c:	add	r1, sp, #16
    3320:	ldr	r0, [sp, #20]
    3324:	bl	156c <sd_bus_message_read_strv@plt>
    3328:	cmp	r0, #0
    332c:	blt	3398 <log_oom_internal@plt+0x1cb8>
    3330:	ldr	r3, [pc, #132]	; 33bc <log_oom_internal@plt+0x1cdc>
    3334:	add	r3, pc, r3
    3338:	ldr	r0, [r3, #12]
    333c:	bl	1674 <pager_open@plt>
    3340:	ldr	r0, [sp, #16]
    3344:	bl	15d8 <strv_print@plt>
    3348:	b	32e8 <log_oom_internal@plt+0x1c08>
    334c:	mov	r1, r7
    3350:	mov	r0, r5
    3354:	bl	15f0 <bus_error_message@plt>
    3358:	ldr	r2, [pc, #96]	; 33c0 <log_oom_internal@plt+0x1ce0>
    335c:	ldr	r3, [pc, #96]	; 33c4 <log_oom_internal@plt+0x1ce4>
    3360:	add	r2, pc, r2
    3364:	str	r2, [sp, #4]
    3368:	add	r3, pc, r3
    336c:	ldr	r2, [pc, #84]	; 33c8 <log_oom_internal@plt+0x1ce8>
    3370:	add	r3, r3, #316	; 0x13c
    3374:	str	r3, [sp]
    3378:	mov	r1, r7
    337c:	ldr	r3, [pc, #72]	; 33cc <log_oom_internal@plt+0x1cec>
    3380:	add	r2, pc, r2
    3384:	str	r0, [sp, #8]
    3388:	mov	r0, #3
    338c:	bl	1650 <log_internal_realm@plt>
    3390:	mov	r4, r0
    3394:	b	32e8 <log_oom_internal@plt+0x1c08>
    3398:	bl	1590 <bus_log_parse_error@plt>
    339c:	mov	r4, r0
    33a0:	b	32e8 <log_oom_internal@plt+0x1c08>
    33a4:	bl	14b8 <__stack_chk_fail@plt>
    33a8:	andeq	r3, r1, r8, lsr #24
    33ac:	andeq	r0, r0, ip, lsr r1
    33b0:	andeq	r2, r0, ip, ror #5
    33b4:	andeq	r1, r0, r4, lsl lr
    33b8:	strdeq	r1, [r0], -r0
    33bc:	ldrdeq	r3, [r1], -r0
    33c0:	andeq	r2, r0, r8, lsl r2
    33c4:	andeq	r1, r0, ip, asr #11
    33c8:	andeq	r1, r0, r8, lsl #15
    33cc:	andeq	r0, r0, lr, lsr #2
    33d0:	ldr	r3, [pc, #464]	; 35a8 <log_oom_internal@plt+0x1ec8>
    33d4:	ldr	r0, [pc, #464]	; 35ac <log_oom_internal@plt+0x1ecc>
    33d8:	push	{r4, r5, r6, r7, r8, lr}
    33dc:	add	r3, pc, r3
    33e0:	ldr	lr, [pc, #456]	; 35b0 <log_oom_internal@plt+0x1ed0>
    33e4:	ldr	ip, [pc, #456]	; 35b4 <log_oom_internal@plt+0x1ed4>
    33e8:	add	r0, pc, r0
    33ec:	add	ip, pc, ip
    33f0:	ldr	r5, [r3, lr]
    33f4:	ldrb	r0, [r0]
    33f8:	ldr	ip, [ip, #16]
    33fc:	sub	sp, sp, #48	; 0x30
    3400:	cmp	ip, #0
    3404:	movne	r0, #0
    3408:	andeq	r0, r0, #1
    340c:	ldr	ip, [r5]
    3410:	cmp	r0, #0
    3414:	mov	r0, #0
    3418:	mov	r7, r2
    341c:	str	ip, [sp, #44]	; 0x2c
    3420:	str	r0, [sp, #32]
    3424:	str	r0, [sp, #36]	; 0x24
    3428:	str	r0, [sp, #40]	; 0x28
    342c:	bne	3594 <log_oom_internal@plt+0x1eb4>
    3430:	ldr	r6, [r1, #4]
    3434:	mov	r0, r6
    3438:	bl	150c <parse_boolean@plt>
    343c:	subs	r8, r0, #0
    3440:	bge	3488 <log_oom_internal@plt+0x1da8>
    3444:	mov	r0, #0
    3448:	bl	1428 <log_get_max_level_realm@plt>
    344c:	cmp	r0, #2
    3450:	bgt	3550 <log_oom_internal@plt+0x1e70>
    3454:	rsb	r4, r8, #0
    3458:	add	r6, sp, #32
    345c:	uxtb	r4, r4
    3460:	rsb	r4, r4, #0
    3464:	mov	r0, r6
    3468:	bl	1470 <sd_bus_error_free@plt>
    346c:	ldr	r2, [sp, #44]	; 0x2c
    3470:	ldr	r3, [r5]
    3474:	mov	r0, r4
    3478:	cmp	r2, r3
    347c:	bne	35a4 <log_oom_internal@plt+0x1ec4>
    3480:	add	sp, sp, #48	; 0x30
    3484:	pop	{r4, r5, r6, r7, r8, pc}
    3488:	ldr	r2, [pc, #296]	; 35b8 <log_oom_internal@plt+0x1ed8>
    348c:	ldr	r3, [pc, #296]	; 35bc <log_oom_internal@plt+0x1edc>
    3490:	add	r2, pc, r2
    3494:	ldr	ip, [pc, #292]	; 35c0 <log_oom_internal@plt+0x1ee0>
    3498:	ldrb	r1, [r2]
    349c:	ldr	r2, [pc, #288]	; 35c4 <log_oom_internal@plt+0x1ee4>
    34a0:	add	r3, pc, r3
    34a4:	add	r2, pc, r2
    34a8:	str	r2, [sp]
    34ac:	ldr	r2, [pc, #276]	; 35c8 <log_oom_internal@plt+0x1ee8>
    34b0:	add	ip, pc, ip
    34b4:	mov	r4, #0
    34b8:	add	r6, sp, #32
    34bc:	mov	r0, r7
    34c0:	str	r1, [sp, #20]
    34c4:	str	r8, [sp, #16]
    34c8:	mov	r1, r3
    34cc:	str	ip, [sp, #12]
    34d0:	str	r4, [sp, #8]
    34d4:	str	r6, [sp, #4]
    34d8:	add	r2, pc, r2
    34dc:	bl	162c <sd_bus_call_method@plt>
    34e0:	subs	r7, r0, #0
    34e4:	bge	3464 <log_oom_internal@plt+0x1d84>
    34e8:	mov	r0, r4
    34ec:	bl	1428 <log_get_max_level_realm@plt>
    34f0:	cmp	r0, #2
    34f4:	rsble	r4, r7, #0
    34f8:	uxtble	r4, r4
    34fc:	rsble	r4, r4, #0
    3500:	ble	3464 <log_oom_internal@plt+0x1d84>
    3504:	mov	r1, r7
    3508:	mov	r0, r6
    350c:	bl	15f0 <bus_error_message@plt>
    3510:	ldr	r2, [pc, #180]	; 35cc <log_oom_internal@plt+0x1eec>
    3514:	ldr	r3, [pc, #180]	; 35d0 <log_oom_internal@plt+0x1ef0>
    3518:	add	r2, pc, r2
    351c:	str	r2, [sp, #4]
    3520:	add	r3, pc, r3
    3524:	ldr	r2, [pc, #168]	; 35d4 <log_oom_internal@plt+0x1ef4>
    3528:	add	r3, r3, #332	; 0x14c
    352c:	str	r3, [sp]
    3530:	mov	r1, r7
    3534:	mov	r3, #280	; 0x118
    3538:	add	r2, pc, r2
    353c:	str	r0, [sp, #8]
    3540:	mov	r0, #3
    3544:	bl	1650 <log_internal_realm@plt>
    3548:	mov	r4, r0
    354c:	b	3464 <log_oom_internal@plt+0x1d84>
    3550:	ldr	r2, [pc, #128]	; 35d8 <log_oom_internal@plt+0x1ef8>
    3554:	ldr	r3, [pc, #128]	; 35dc <log_oom_internal@plt+0x1efc>
    3558:	add	r2, pc, r2
    355c:	str	r2, [sp, #4]
    3560:	add	r3, pc, r3
    3564:	ldr	r2, [pc, #116]	; 35e0 <log_oom_internal@plt+0x1f00>
    3568:	add	r3, r3, #332	; 0x14c
    356c:	str	r6, [sp, #8]
    3570:	str	r3, [sp]
    3574:	mov	r1, r8
    3578:	ldr	r3, [pc, #100]	; 35e4 <log_oom_internal@plt+0x1f04>
    357c:	add	r2, pc, r2
    3580:	mov	r0, #3
    3584:	bl	1650 <log_internal_realm@plt>
    3588:	add	r6, sp, #32
    358c:	mov	r4, r0
    3590:	b	3464 <log_oom_internal@plt+0x1d84>
    3594:	str	r1, [sp, #28]
    3598:	bl	14f4 <polkit_agent_open@plt>
    359c:	ldr	r1, [sp, #28]
    35a0:	b	3430 <log_oom_internal@plt+0x1d50>
    35a4:	bl	14b8 <__stack_chk_fail@plt>
    35a8:	andeq	r3, r1, ip, lsr #21
    35ac:	andeq	r3, r1, r4, lsl ip
    35b0:	andeq	r0, r0, ip, lsr r1
    35b4:	andeq	r3, r1, r8, lsl ip
    35b8:	andeq	r3, r1, ip, ror #22
    35bc:	andeq	r1, r0, r8, lsl #24
    35c0:	andeq	r2, r0, ip, lsl r1
    35c4:	andeq	r2, r0, ip, lsr #2
    35c8:			; <UNDEFINED> instruction: 0x00001bb4
    35cc:	andeq	r2, r0, r0, asr #1
    35d0:	andeq	r1, r0, r4, lsl r4
    35d4:	ldrdeq	r1, [r0], -r0
    35d8:	andeq	r2, r0, ip, asr #32
    35dc:	ldrdeq	r1, [r0], -r4
    35e0:	andeq	r1, r0, ip, lsl #11
    35e4:	andeq	r0, r0, sp, lsl #2
    35e8:	ldr	r3, [pc, #480]	; 37d0 <log_oom_internal@plt+0x20f0>
    35ec:	ldr	r0, [pc, #480]	; 37d4 <log_oom_internal@plt+0x20f4>
    35f0:	push	{r4, r5, r6, r7, lr}
    35f4:	add	r3, pc, r3
    35f8:	ldr	lr, [pc, #472]	; 37d8 <log_oom_internal@plt+0x20f8>
    35fc:	ldr	ip, [pc, #472]	; 37dc <log_oom_internal@plt+0x20fc>
    3600:	add	r0, pc, r0
    3604:	add	ip, pc, ip
    3608:	ldr	r5, [r3, lr]
    360c:	ldrb	r0, [r0]
    3610:	ldr	ip, [ip, #16]
    3614:	sub	sp, sp, #60	; 0x3c
    3618:	cmp	ip, #0
    361c:	movne	r0, #0
    3620:	andeq	r0, r0, #1
    3624:	ldr	ip, [r5]
    3628:	cmp	r0, #0
    362c:	mov	r0, #0
    3630:	mov	r7, r2
    3634:	str	ip, [sp, #52]	; 0x34
    3638:	str	r0, [sp, #40]	; 0x28
    363c:	str	r0, [sp, #44]	; 0x2c
    3640:	str	r0, [sp, #48]	; 0x30
    3644:	bne	37bc <log_oom_internal@plt+0x20dc>
    3648:	ldr	r6, [r1, #4]
    364c:	mov	r0, r6
    3650:	bl	150c <parse_boolean@plt>
    3654:	subs	r4, r0, #0
    3658:	bge	36a0 <log_oom_internal@plt+0x1fc0>
    365c:	mov	r0, #0
    3660:	bl	1428 <log_get_max_level_realm@plt>
    3664:	cmp	r0, #2
    3668:	bgt	3778 <log_oom_internal@plt+0x2098>
    366c:	rsb	r4, r4, #0
    3670:	add	r6, sp, #40	; 0x28
    3674:	uxtb	r4, r4
    3678:	rsb	r4, r4, #0
    367c:	mov	r0, r6
    3680:	bl	1470 <sd_bus_error_free@plt>
    3684:	ldr	r2, [sp, #52]	; 0x34
    3688:	ldr	r3, [r5]
    368c:	mov	r0, r4
    3690:	cmp	r2, r3
    3694:	bne	37cc <log_oom_internal@plt+0x20ec>
    3698:	add	sp, sp, #60	; 0x3c
    369c:	pop	{r4, r5, r6, r7, pc}
    36a0:	ldr	r1, [pc, #312]	; 37e0 <log_oom_internal@plt+0x2100>
    36a4:	ldr	r2, [pc, #312]	; 37e4 <log_oom_internal@plt+0x2104>
    36a8:	add	r1, pc, r1
    36ac:	add	r2, pc, r2
    36b0:	ldrb	lr, [r1]
    36b4:	ldrb	r1, [r2, #20]
    36b8:	ldr	r2, [pc, #296]	; 37e8 <log_oom_internal@plt+0x2108>
    36bc:	ldr	r3, [pc, #296]	; 37ec <log_oom_internal@plt+0x210c>
    36c0:	add	r2, pc, r2
    36c4:	ldr	ip, [pc, #292]	; 37f0 <log_oom_internal@plt+0x2110>
    36c8:	str	r2, [sp]
    36cc:	ldr	r2, [pc, #288]	; 37f4 <log_oom_internal@plt+0x2114>
    36d0:	add	r3, pc, r3
    36d4:	add	ip, pc, ip
    36d8:	str	r4, [sp, #16]
    36dc:	add	r6, sp, #40	; 0x28
    36e0:	mov	r4, #0
    36e4:	mov	r0, r7
    36e8:	str	r1, [sp, #20]
    36ec:	str	r6, [sp, #4]
    36f0:	str	lr, [sp, #24]
    36f4:	mov	r1, r3
    36f8:	str	ip, [sp, #12]
    36fc:	str	r4, [sp, #8]
    3700:	add	r2, pc, r2
    3704:	bl	162c <sd_bus_call_method@plt>
    3708:	subs	r7, r0, #0
    370c:	bge	367c <log_oom_internal@plt+0x1f9c>
    3710:	mov	r0, r4
    3714:	bl	1428 <log_get_max_level_realm@plt>
    3718:	cmp	r0, #2
    371c:	rsble	r4, r7, #0
    3720:	uxtble	r4, r4
    3724:	rsble	r4, r4, #0
    3728:	ble	367c <log_oom_internal@plt+0x1f9c>
    372c:	mov	r1, r7
    3730:	mov	r0, r6
    3734:	bl	15f0 <bus_error_message@plt>
    3738:	ldr	r2, [pc, #184]	; 37f8 <log_oom_internal@plt+0x2118>
    373c:	ldr	r3, [pc, #184]	; 37fc <log_oom_internal@plt+0x211c>
    3740:	add	r2, pc, r2
    3744:	str	r2, [sp, #4]
    3748:	add	r3, pc, r3
    374c:	ldr	r2, [pc, #172]	; 3800 <log_oom_internal@plt+0x2120>
    3750:	add	r3, r3, #340	; 0x154
    3754:	str	r3, [sp]
    3758:	mov	r1, r7
    375c:	mov	r3, #255	; 0xff
    3760:	add	r2, pc, r2
    3764:	str	r0, [sp, #8]
    3768:	mov	r0, #3
    376c:	bl	1650 <log_internal_realm@plt>
    3770:	mov	r4, r0
    3774:	b	367c <log_oom_internal@plt+0x1f9c>
    3778:	ldr	r2, [pc, #132]	; 3804 <log_oom_internal@plt+0x2124>
    377c:	ldr	r3, [pc, #132]	; 3808 <log_oom_internal@plt+0x2128>
    3780:	add	r2, pc, r2
    3784:	str	r2, [sp, #4]
    3788:	add	r3, pc, r3
    378c:	ldr	r2, [pc, #120]	; 380c <log_oom_internal@plt+0x212c>
    3790:	add	r3, r3, #340	; 0x154
    3794:	str	r6, [sp, #8]
    3798:	mov	r1, r4
    379c:	str	r3, [sp]
    37a0:	add	r2, pc, r2
    37a4:	mov	r3, #244	; 0xf4
    37a8:	mov	r0, #3
    37ac:	bl	1650 <log_internal_realm@plt>
    37b0:	add	r6, sp, #40	; 0x28
    37b4:	mov	r4, r0
    37b8:	b	367c <log_oom_internal@plt+0x1f9c>
    37bc:	str	r1, [sp, #36]	; 0x24
    37c0:	bl	14f4 <polkit_agent_open@plt>
    37c4:	ldr	r1, [sp, #36]	; 0x24
    37c8:	b	3648 <log_oom_internal@plt+0x1f68>
    37cc:	bl	14b8 <__stack_chk_fail@plt>
    37d0:	muleq	r1, r4, r8
    37d4:	strdeq	r3, [r1], -ip
    37d8:	andeq	r0, r0, ip, lsr r1
    37dc:	andeq	r3, r1, r0, lsl #20
    37e0:	andeq	r3, r1, r4, asr r9
    37e4:	andeq	r3, r1, r8, asr r9
    37e8:	andeq	r1, r0, r0, ror #30
    37ec:	ldrdeq	r1, [r0], -r8
    37f0:	andeq	r1, r0, r8, asr #30
    37f4:	andeq	r1, r0, ip, lsl #19
    37f8:	andeq	r1, r0, ip, ror #29
    37fc:	andeq	r1, r0, ip, ror #3
    3800:	andeq	r1, r0, r8, lsr #7
    3804:	andeq	r1, r0, r0, ror lr
    3808:	andeq	r1, r0, ip, lsr #3
    380c:	andeq	r1, r0, r8, ror #6
    3810:	push	{r4, r5, r6, r7, lr}
    3814:	sub	sp, sp, #52	; 0x34
    3818:	ldr	r4, [pc, #336]	; 3970 <log_oom_internal@plt+0x2290>
    381c:	ldr	r3, [pc, #336]	; 3974 <log_oom_internal@plt+0x2294>
    3820:	ldr	r0, [pc, #336]	; 3978 <log_oom_internal@plt+0x2298>
    3824:	ldr	ip, [pc, #336]	; 397c <log_oom_internal@plt+0x229c>
    3828:	add	r4, pc, r4
    382c:	add	r3, pc, r3
    3830:	add	r0, pc, r0
    3834:	ldrb	r7, [r4]
    3838:	ldr	r5, [r3, ip]
    383c:	ldr	r0, [r0, #16]
    3840:	mov	r3, #0
    3844:	cmp	r0, #0
    3848:	movne	r0, #0
    384c:	andeq	r0, r7, #1
    3850:	cmp	r0, #0
    3854:	ldr	r0, [r5]
    3858:	str	r3, [sp, #32]
    385c:	str	r0, [sp, #44]	; 0x2c
    3860:	str	r3, [sp, #36]	; 0x24
    3864:	str	r3, [sp, #40]	; 0x28
    3868:	bne	3950 <log_oom_internal@plt+0x2270>
    386c:	ldr	r3, [pc, #268]	; 3980 <log_oom_internal@plt+0x22a0>
    3870:	ldr	lr, [pc, #268]	; 3984 <log_oom_internal@plt+0x22a4>
    3874:	ldr	ip, [pc, #268]	; 3988 <log_oom_internal@plt+0x22a8>
    3878:	ldr	r1, [r1, #4]
    387c:	mov	r0, r2
    3880:	ldr	r2, [pc, #260]	; 398c <log_oom_internal@plt+0x22ac>
    3884:	add	r3, pc, r3
    3888:	add	lr, pc, lr
    388c:	add	ip, pc, ip
    3890:	mov	r4, #0
    3894:	add	r6, sp, #32
    3898:	str	r1, [sp, #16]
    389c:	str	r7, [sp, #20]
    38a0:	mov	r1, r3
    38a4:	str	lr, [sp, #12]
    38a8:	str	ip, [sp]
    38ac:	str	r4, [sp, #8]
    38b0:	str	r6, [sp, #4]
    38b4:	add	r2, pc, r2
    38b8:	bl	162c <sd_bus_call_method@plt>
    38bc:	subs	r7, r0, #0
    38c0:	blt	38e8 <log_oom_internal@plt+0x2208>
    38c4:	mov	r0, r6
    38c8:	bl	1470 <sd_bus_error_free@plt>
    38cc:	ldr	r2, [sp, #44]	; 0x2c
    38d0:	ldr	r3, [r5]
    38d4:	mov	r0, r4
    38d8:	cmp	r2, r3
    38dc:	bne	396c <log_oom_internal@plt+0x228c>
    38e0:	add	sp, sp, #52	; 0x34
    38e4:	pop	{r4, r5, r6, r7, pc}
    38e8:	mov	r0, r4
    38ec:	bl	1428 <log_get_max_level_realm@plt>
    38f0:	cmp	r0, #2
    38f4:	rsble	r4, r7, #0
    38f8:	uxtble	r4, r4
    38fc:	rsble	r4, r4, #0
    3900:	ble	38c4 <log_oom_internal@plt+0x21e4>
    3904:	mov	r1, r7
    3908:	mov	r0, r6
    390c:	bl	15f0 <bus_error_message@plt>
    3910:	ldr	r2, [pc, #120]	; 3990 <log_oom_internal@plt+0x22b0>
    3914:	ldr	r3, [pc, #120]	; 3994 <log_oom_internal@plt+0x22b4>
    3918:	add	r2, pc, r2
    391c:	str	r2, [sp, #4]
    3920:	add	r3, pc, r3
    3924:	ldr	r2, [pc, #108]	; 3998 <log_oom_internal@plt+0x22b8>
    3928:	add	r3, r3, #356	; 0x164
    392c:	str	r3, [sp]
    3930:	mov	r1, r7
    3934:	mov	r3, #230	; 0xe6
    3938:	add	r2, pc, r2
    393c:	str	r0, [sp, #8]
    3940:	mov	r0, #3
    3944:	bl	1650 <log_internal_realm@plt>
    3948:	mov	r4, r0
    394c:	b	38c4 <log_oom_internal@plt+0x21e4>
    3950:	str	r2, [sp, #28]
    3954:	str	r1, [sp, #24]
    3958:	bl	14f4 <polkit_agent_open@plt>
    395c:	ldrb	r7, [r4]
    3960:	ldr	r2, [sp, #28]
    3964:	ldr	r1, [sp, #24]
    3968:	b	386c <log_oom_internal@plt+0x218c>
    396c:	bl	14b8 <__stack_chk_fail@plt>
    3970:	ldrdeq	r3, [r1], -r4
    3974:	andeq	r3, r1, ip, asr r6
    3978:	ldrdeq	r3, [r1], -r4
    397c:	andeq	r0, r0, ip, lsr r1
    3980:	andeq	r1, r0, r4, lsr #16
    3984:	andeq	r1, r0, r0, asr #27
    3988:	andeq	r1, r0, r0, asr #27
    398c:	ldrdeq	r1, [r0], -r8
    3990:	andeq	r1, r0, r0, asr #26
    3994:	andeq	r1, r0, r4, lsl r0
    3998:	ldrdeq	r1, [r0], -r0
    399c:	ldr	r3, [pc, #460]	; 3b70 <log_oom_internal@plt+0x2490>
    39a0:	ldr	ip, [pc, #460]	; 3b74 <log_oom_internal@plt+0x2494>
    39a4:	push	{r4, r5, r6, r7, r8, lr}
    39a8:	add	r3, pc, r3
    39ac:	ldr	lr, [pc, #452]	; 3b78 <log_oom_internal@plt+0x2498>
    39b0:	ldr	r0, [pc, #452]	; 3b7c <log_oom_internal@plt+0x249c>
    39b4:	add	ip, pc, ip
    39b8:	add	r0, pc, r0
    39bc:	ldr	r5, [r3, lr]
    39c0:	ldrb	r7, [ip]
    39c4:	ldr	r0, [r0, #16]
    39c8:	sub	sp, sp, #56	; 0x38
    39cc:	mov	r8, r1
    39d0:	cmp	r0, #0
    39d4:	movne	r0, #0
    39d8:	andeq	r0, r7, #1
    39dc:	ldr	r1, [r5]
    39e0:	cmp	r0, #0
    39e4:	mov	r3, #0
    39e8:	mov	r6, r2
    39ec:	str	r1, [sp, #52]	; 0x34
    39f0:	str	r3, [sp, #40]	; 0x28
    39f4:	str	r3, [sp, #44]	; 0x2c
    39f8:	str	r3, [sp, #48]	; 0x30
    39fc:	bne	3b64 <log_oom_internal@plt+0x2484>
    3a00:	add	r1, sp, #32
    3a04:	ldr	r0, [r8, #4]
    3a08:	bl	13c8 <parse_timestamp@plt>
    3a0c:	subs	r4, r0, #0
    3a10:	bge	3a58 <log_oom_internal@plt+0x2378>
    3a14:	mov	r0, #0
    3a18:	bl	1428 <log_get_max_level_realm@plt>
    3a1c:	cmp	r0, #2
    3a20:	bgt	3b1c <log_oom_internal@plt+0x243c>
    3a24:	rsb	r4, r4, #0
    3a28:	add	r6, sp, #40	; 0x28
    3a2c:	uxtb	r4, r4
    3a30:	rsb	r4, r4, #0
    3a34:	mov	r0, r6
    3a38:	bl	1470 <sd_bus_error_free@plt>
    3a3c:	ldr	r2, [sp, #52]	; 0x34
    3a40:	ldr	r3, [r5]
    3a44:	mov	r0, r4
    3a48:	cmp	r2, r3
    3a4c:	bne	3b6c <log_oom_internal@plt+0x248c>
    3a50:	add	sp, sp, #56	; 0x38
    3a54:	pop	{r4, r5, r6, r7, r8, pc}
    3a58:	ldrd	r2, [sp, #32]
    3a5c:	ldr	r1, [pc, #284]	; 3b80 <log_oom_internal@plt+0x24a0>
    3a60:	ldr	lr, [pc, #284]	; 3b84 <log_oom_internal@plt+0x24a4>
    3a64:	ldr	ip, [pc, #284]	; 3b88 <log_oom_internal@plt+0x24a8>
    3a68:	strd	r2, [sp, #16]
    3a6c:	ldr	r2, [pc, #280]	; 3b8c <log_oom_internal@plt+0x24ac>
    3a70:	add	r1, pc, r1
    3a74:	add	lr, pc, lr
    3a78:	add	ip, pc, ip
    3a7c:	mov	r4, #0
    3a80:	mov	r0, r6
    3a84:	add	r6, sp, #40	; 0x28
    3a88:	str	r7, [sp, #28]
    3a8c:	mov	r3, r1
    3a90:	str	lr, [sp, #12]
    3a94:	str	ip, [sp]
    3a98:	str	r4, [sp, #24]
    3a9c:	str	r4, [sp, #8]
    3aa0:	str	r6, [sp, #4]
    3aa4:	add	r2, pc, r2
    3aa8:	bl	162c <sd_bus_call_method@plt>
    3aac:	subs	r7, r0, #0
    3ab0:	bge	3a34 <log_oom_internal@plt+0x2354>
    3ab4:	mov	r0, r4
    3ab8:	bl	1428 <log_get_max_level_realm@plt>
    3abc:	cmp	r0, #2
    3ac0:	rsble	r4, r7, #0
    3ac4:	uxtble	r4, r4
    3ac8:	rsble	r4, r4, #0
    3acc:	ble	3a34 <log_oom_internal@plt+0x2354>
    3ad0:	mov	r1, r7
    3ad4:	mov	r0, r6
    3ad8:	bl	15f0 <bus_error_message@plt>
    3adc:	ldr	r2, [pc, #172]	; 3b90 <log_oom_internal@plt+0x24b0>
    3ae0:	ldr	r3, [pc, #172]	; 3b94 <log_oom_internal@plt+0x24b4>
    3ae4:	add	r2, pc, r2
    3ae8:	str	r2, [sp, #4]
    3aec:	add	r3, pc, r3
    3af0:	ldr	r2, [pc, #160]	; 3b98 <log_oom_internal@plt+0x24b8>
    3af4:	add	r3, r3, #372	; 0x174
    3af8:	str	r3, [sp]
    3afc:	mov	r1, r7
    3b00:	mov	r3, #209	; 0xd1
    3b04:	add	r2, pc, r2
    3b08:	str	r0, [sp, #8]
    3b0c:	mov	r0, #3
    3b10:	bl	1650 <log_internal_realm@plt>
    3b14:	mov	r4, r0
    3b18:	b	3a34 <log_oom_internal@plt+0x2354>
    3b1c:	ldr	r2, [pc, #120]	; 3b9c <log_oom_internal@plt+0x24bc>
    3b20:	ldr	r3, [pc, #120]	; 3ba0 <log_oom_internal@plt+0x24c0>
    3b24:	add	r2, pc, r2
    3b28:	ldr	r1, [r8, #4]
    3b2c:	add	r3, pc, r3
    3b30:	str	r2, [sp, #4]
    3b34:	ldr	r2, [pc, #104]	; 3ba4 <log_oom_internal@plt+0x24c4>
    3b38:	add	r3, r3, #372	; 0x174
    3b3c:	str	r1, [sp, #8]
    3b40:	str	r3, [sp]
    3b44:	mov	r1, r4
    3b48:	mov	r3, #198	; 0xc6
    3b4c:	add	r2, pc, r2
    3b50:	mov	r0, #3
    3b54:	bl	1650 <log_internal_realm@plt>
    3b58:	add	r6, sp, #40	; 0x28
    3b5c:	mov	r4, r0
    3b60:	b	3a34 <log_oom_internal@plt+0x2354>
    3b64:	bl	14f4 <polkit_agent_open@plt>
    3b68:	b	3a00 <log_oom_internal@plt+0x2320>
    3b6c:	bl	14b8 <__stack_chk_fail@plt>
    3b70:	andeq	r3, r1, r0, ror #9
    3b74:	andeq	r3, r1, r8, asr #12
    3b78:	andeq	r0, r0, ip, lsr r1
    3b7c:	andeq	r3, r1, ip, asr #12
    3b80:	andeq	r1, r0, r8, lsr r6
    3b84:	andeq	r1, r0, ip, lsr #24
    3b88:	andeq	r1, r0, ip, lsr #24
    3b8c:	andeq	r1, r0, r8, ror #11
    3b90:	andeq	r1, r0, r8, asr #23
    3b94:	andeq	r0, r0, r8, asr #28
    3b98:	andeq	r1, r0, r4
    3b9c:	andeq	r1, r0, r0, asr fp
    3ba0:	andeq	r0, r0, r8, lsl #28
    3ba4:			; <UNDEFINED> instruction: 0x00000fbc
    3ba8:	ldr	r3, [pc, #1288]	; 40b8 <log_oom_internal@plt+0x29d8>
    3bac:	ldr	r2, [pc, #1288]	; 40bc <log_oom_internal@plt+0x29dc>
    3bb0:	add	r3, pc, r3
    3bb4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    3bb8:	add	fp, sp, #28
    3bbc:	sub	sp, sp, #2112	; 0x840
    3bc0:	sub	sp, sp, #8
    3bc4:	ldr	r7, [r3, r2]
    3bc8:	mov	r4, r0
    3bcc:	ldr	r0, [pc, #1260]	; 40c0 <log_oom_internal@plt+0x29e0>
    3bd0:	ldr	r3, [r7]
    3bd4:	add	r0, pc, r0
    3bd8:	str	r3, [fp, #-32]	; 0xffffffe0
    3bdc:	bl	168c <getenv@plt>
    3be0:	subs	r8, r0, #0
    3be4:	beq	3c0c <log_oom_internal@plt+0x252c>
    3be8:	bl	15cc <strlen@plt>
    3bec:	mov	r1, r8
    3bf0:	add	r3, r0, #15
    3bf4:	bic	r3, r3, #7
    3bf8:	sub	sp, sp, r3
    3bfc:	add	r2, r0, #1
    3c00:	add	r0, sp, #16
    3c04:	bl	15a8 <memcpy@plt>
    3c08:	mov	r8, r0
    3c0c:	ldr	r1, [r4, #8]
    3c10:	cmp	r1, #0
    3c14:	beq	3fc8 <log_oom_internal@plt+0x28e8>
    3c18:	ldrb	r3, [r1]
    3c1c:	cmp	r3, #0
    3c20:	ldreq	r1, [pc, #1180]	; 40c4 <log_oom_internal@plt+0x29e4>
    3c24:	addeq	r1, pc, r1
    3c28:	ldr	r0, [pc, #1176]	; 40c8 <log_oom_internal@plt+0x29e8>
    3c2c:	mov	r2, #1
    3c30:	add	r0, pc, r0
    3c34:	bl	14d0 <setenv@plt>
    3c38:	cmp	r0, #0
    3c3c:	bge	3e64 <log_oom_internal@plt+0x2784>
    3c40:	bl	1638 <__errno_location@plt>
    3c44:	mov	r5, r0
    3c48:	mov	r0, #0
    3c4c:	bl	1428 <log_get_max_level_realm@plt>
    3c50:	cmp	r0, #3
    3c54:	bgt	4038 <log_oom_internal@plt+0x2958>
    3c58:	ldrd	r0, [r4]
    3c5c:	orrs	r3, r0, r1
    3c60:	beq	3e74 <log_oom_internal@plt+0x2794>
    3c64:	ldr	r2, [pc, #1120]	; 40cc <log_oom_internal@plt+0x29ec>
    3c68:	mov	r3, #0
    3c6c:	bl	46d8 <log_oom_internal@plt+0x2ff8>
    3c70:	str	r0, [fp, #-2132]	; 0xfffff7ac
    3c74:	sub	r6, fp, #2112	; 0x840
    3c78:	sub	r6, r6, #12
    3c7c:	sub	r9, r6, #8
    3c80:	mov	r1, r6
    3c84:	mov	r0, r9
    3c88:	bl	1368 <localtime_r@plt>
    3c8c:	ldr	r2, [pc, #1084]	; 40d0 <log_oom_internal@plt+0x29f0>
    3c90:	sub	r5, fp, #2080	; 0x820
    3c94:	add	r2, pc, r2
    3c98:	mov	r1, #2048	; 0x800
    3c9c:	mov	r3, r0
    3ca0:	mov	r0, r5
    3ca4:	bl	1410 <strftime@plt>
    3ca8:	cmp	r0, #0
    3cac:	movne	r2, r5
    3cb0:	ldreq	r2, [pc, #1052]	; 40d4 <log_oom_internal@plt+0x29f4>
    3cb4:	addeq	r2, pc, r2
    3cb8:	ldr	r1, [pc, #1048]	; 40d8 <log_oom_internal@plt+0x29f8>
    3cbc:	mov	r0, #1
    3cc0:	add	r1, pc, r1
    3cc4:	bl	16c8 <__printf_chk@plt>
    3cc8:	mov	r1, r6
    3ccc:	mov	r0, r9
    3cd0:	bl	1458 <gmtime_r@plt>
    3cd4:	ldr	r2, [pc, #1024]	; 40dc <log_oom_internal@plt+0x29fc>
    3cd8:	mov	r1, #2048	; 0x800
    3cdc:	add	r2, pc, r2
    3ce0:	mov	r3, r0
    3ce4:	mov	r0, r5
    3ce8:	bl	1410 <strftime@plt>
    3cec:	subs	r6, r0, #0
    3cf0:	movne	r2, r5
    3cf4:	ldreq	r2, [pc, #996]	; 40e0 <log_oom_internal@plt+0x2a00>
    3cf8:	addeq	r2, pc, r2
    3cfc:	ldr	r1, [pc, #992]	; 40e4 <log_oom_internal@plt+0x2a04>
    3d00:	mov	r0, #1
    3d04:	add	r1, pc, r1
    3d08:	bl	16c8 <__printf_chk@plt>
    3d0c:	ldrd	r0, [r4, #16]
    3d10:	mov	r5, #1
    3d14:	orrs	r3, r0, r1
    3d18:	beq	3ee0 <log_oom_internal@plt+0x2800>
    3d1c:	ldr	r2, [pc, #936]	; 40cc <log_oom_internal@plt+0x29ec>
    3d20:	mov	r3, #0
    3d24:	bl	46d8 <log_oom_internal@plt+0x2ff8>
    3d28:	sub	r1, fp, #2112	; 0x840
    3d2c:	sub	r1, r1, #12
    3d30:	sub	r9, fp, #2080	; 0x820
    3d34:	str	r0, [fp, #-2128]	; 0xfffff7b0
    3d38:	sub	r0, r1, #4
    3d3c:	bl	1458 <gmtime_r@plt>
    3d40:	ldr	r2, [pc, #928]	; 40e8 <log_oom_internal@plt+0x2a08>
    3d44:	mov	r1, #2048	; 0x800
    3d48:	add	r2, pc, r2
    3d4c:	mov	r3, r0
    3d50:	mov	r0, r9
    3d54:	bl	1410 <strftime@plt>
    3d58:	subs	r6, r0, #0
    3d5c:	movne	r2, r9
    3d60:	ldreq	r2, [pc, #900]	; 40ec <log_oom_internal@plt+0x2a0c>
    3d64:	addeq	r2, pc, r2
    3d68:	ldr	r1, [pc, #896]	; 40f0 <log_oom_internal@plt+0x2a10>
    3d6c:	mov	r0, #1
    3d70:	add	r1, pc, r1
    3d74:	bl	16c8 <__printf_chk@plt>
    3d78:	cmp	r5, #0
    3d7c:	bne	3f00 <log_oom_internal@plt+0x2820>
    3d80:	cmp	r8, #0
    3d84:	beq	3f34 <log_oom_internal@plt+0x2854>
    3d88:	ldr	r0, [pc, #868]	; 40f4 <log_oom_internal@plt+0x2a14>
    3d8c:	mov	r1, r8
    3d90:	mov	r2, #1
    3d94:	add	r0, pc, r0
    3d98:	bl	14d0 <setenv@plt>
    3d9c:	cmp	r0, #0
    3da0:	bge	3f48 <log_oom_internal@plt+0x2868>
    3da4:	bl	1638 <__errno_location@plt>
    3da8:	mov	r8, r0
    3dac:	mov	r0, #0
    3db0:	bl	1428 <log_get_max_level_realm@plt>
    3db4:	cmp	r0, #3
    3db8:	bgt	4000 <log_oom_internal@plt+0x2920>
    3dbc:	ldr	r2, [r4, #8]
    3dc0:	cmp	r2, #0
    3dc4:	beq	3f58 <log_oom_internal@plt+0x2878>
    3dc8:	cmp	r6, #0
    3dcc:	moveq	r5, #0
    3dd0:	cmp	r5, #0
    3dd4:	subne	r3, fp, #2080	; 0x820
    3dd8:	ldreq	r3, [pc, #792]	; 40f8 <log_oom_internal@plt+0x2a18>
    3ddc:	addeq	r3, pc, r3
    3de0:	ldrb	r1, [r4, #27]
    3de4:	cmp	r1, #0
    3de8:	bne	3f7c <log_oom_internal@plt+0x289c>
    3dec:	ldr	r1, [pc, #776]	; 40fc <log_oom_internal@plt+0x2a1c>
    3df0:	add	r1, pc, r1
    3df4:	ldrb	r0, [r4, #25]
    3df8:	cmp	r0, #0
    3dfc:	beq	3f70 <log_oom_internal@plt+0x2890>
    3e00:	ldrb	r0, [r4, #26]
    3e04:	cmp	r0, #0
    3e08:	bne	3fd4 <log_oom_internal@plt+0x28f4>
    3e0c:	ldr	r0, [pc, #748]	; 4100 <log_oom_internal@plt+0x2a20>
    3e10:	add	r0, pc, r0
    3e14:	ldrb	ip, [r4, #24]
    3e18:	cmp	ip, #0
    3e1c:	bne	3f64 <log_oom_internal@plt+0x2884>
    3e20:	ldr	ip, [pc, #732]	; 4104 <log_oom_internal@plt+0x2a24>
    3e24:	add	ip, pc, ip
    3e28:	str	r1, [sp]
    3e2c:	ldr	r1, [pc, #724]	; 4108 <log_oom_internal@plt+0x2a28>
    3e30:	stmib	sp, {r0, ip}
    3e34:	add	r1, pc, r1
    3e38:	mov	r0, #1
    3e3c:	bl	16c8 <__printf_chk@plt>
    3e40:	ldrb	r3, [r4, #24]
    3e44:	cmp	r3, #0
    3e48:	bne	3f88 <log_oom_internal@plt+0x28a8>
    3e4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3e50:	ldr	r3, [r7]
    3e54:	cmp	r2, r3
    3e58:	bne	40b4 <log_oom_internal@plt+0x29d4>
    3e5c:	sub	sp, fp, #28
    3e60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3e64:	bl	1488 <tzset@plt>
    3e68:	ldrd	r0, [r4]
    3e6c:	orrs	r3, r0, r1
    3e70:	bne	3c64 <log_oom_internal@plt+0x2584>
    3e74:	ldr	r3, [pc, #656]	; 410c <log_oom_internal@plt+0x2a2c>
    3e78:	mov	r0, #0
    3e7c:	add	r3, pc, r3
    3e80:	ldr	r3, [r3, #16]
    3e84:	cmp	r3, #0
    3e88:	beq	4070 <log_oom_internal@plt+0x2990>
    3e8c:	cmp	r3, #2
    3e90:	beq	4070 <log_oom_internal@plt+0x2990>
    3e94:	bl	1428 <log_get_max_level_realm@plt>
    3e98:	cmp	r0, #3
    3e9c:	bgt	407c <log_oom_internal@plt+0x299c>
    3ea0:	ldr	r5, [pc, #616]	; 4110 <log_oom_internal@plt+0x2a30>
    3ea4:	ldr	r1, [pc, #616]	; 4114 <log_oom_internal@plt+0x2a34>
    3ea8:	add	r5, pc, r5
    3eac:	mov	r2, r5
    3eb0:	add	r1, pc, r1
    3eb4:	mov	r0, #1
    3eb8:	bl	16c8 <__printf_chk@plt>
    3ebc:	ldr	r1, [pc, #596]	; 4118 <log_oom_internal@plt+0x2a38>
    3ec0:	mov	r2, r5
    3ec4:	add	r1, pc, r1
    3ec8:	mov	r0, #1
    3ecc:	bl	16c8 <__printf_chk@plt>
    3ed0:	ldrd	r0, [r4, #16]
    3ed4:	mov	r5, #0
    3ed8:	orrs	r3, r0, r1
    3edc:	bne	3d1c <log_oom_internal@plt+0x263c>
    3ee0:	ldr	r2, [pc, #564]	; 411c <log_oom_internal@plt+0x2a3c>
    3ee4:	ldr	r1, [pc, #564]	; 4120 <log_oom_internal@plt+0x2a40>
    3ee8:	add	r2, pc, r2
    3eec:	add	r1, pc, r1
    3ef0:	mov	r0, #1
    3ef4:	bl	16c8 <__printf_chk@plt>
    3ef8:	cmp	r5, #0
    3efc:	beq	3d80 <log_oom_internal@plt+0x26a0>
    3f00:	sub	r1, fp, #2112	; 0x840
    3f04:	sub	r1, r1, #12
    3f08:	sub	r0, r1, #8
    3f0c:	bl	1368 <localtime_r@plt>
    3f10:	ldr	r2, [pc, #524]	; 4124 <log_oom_internal@plt+0x2a44>
    3f14:	mov	r1, #2048	; 0x800
    3f18:	add	r2, pc, r2
    3f1c:	mov	r3, r0
    3f20:	sub	r0, fp, #2080	; 0x820
    3f24:	bl	1410 <strftime@plt>
    3f28:	cmp	r8, #0
    3f2c:	mov	r6, r0
    3f30:	bne	3d88 <log_oom_internal@plt+0x26a8>
    3f34:	ldr	r0, [pc, #492]	; 4128 <log_oom_internal@plt+0x2a48>
    3f38:	add	r0, pc, r0
    3f3c:	bl	144c <unsetenv@plt>
    3f40:	cmp	r0, #0
    3f44:	blt	3da4 <log_oom_internal@plt+0x26c4>
    3f48:	bl	1488 <tzset@plt>
    3f4c:	ldr	r2, [r4, #8]
    3f50:	cmp	r2, #0
    3f54:	bne	3dc8 <log_oom_internal@plt+0x26e8>
    3f58:	ldr	r2, [pc, #460]	; 412c <log_oom_internal@plt+0x2a4c>
    3f5c:	add	r2, pc, r2
    3f60:	b	3dc8 <log_oom_internal@plt+0x26e8>
    3f64:	ldr	ip, [pc, #452]	; 4130 <log_oom_internal@plt+0x2a50>
    3f68:	add	ip, pc, ip
    3f6c:	b	3e28 <log_oom_internal@plt+0x2748>
    3f70:	ldr	r0, [pc, #444]	; 4134 <log_oom_internal@plt+0x2a54>
    3f74:	add	r0, pc, r0
    3f78:	b	3e14 <log_oom_internal@plt+0x2734>
    3f7c:	ldr	r1, [pc, #436]	; 4138 <log_oom_internal@plt+0x2a58>
    3f80:	add	r1, pc, r1
    3f84:	b	3df4 <log_oom_internal@plt+0x2714>
    3f88:	bl	16a4 <colors_enabled@plt>
    3f8c:	cmp	r0, #0
    3f90:	bne	3fe0 <log_oom_internal@plt+0x2900>
    3f94:	bl	16a4 <colors_enabled@plt>
    3f98:	ldr	r4, [pc, #412]	; 413c <log_oom_internal@plt+0x2a5c>
    3f9c:	add	r4, pc, r4
    3fa0:	cmp	r0, #0
    3fa4:	bne	3ff4 <log_oom_internal@plt+0x2914>
    3fa8:	ldr	r3, [pc, #400]	; 4140 <log_oom_internal@plt+0x2a60>
    3fac:	add	r3, pc, r3
    3fb0:	ldr	r1, [pc, #396]	; 4144 <log_oom_internal@plt+0x2a64>
    3fb4:	mov	r2, r4
    3fb8:	add	r1, pc, r1
    3fbc:	mov	r0, #1
    3fc0:	bl	16c8 <__printf_chk@plt>
    3fc4:	b	3e4c <log_oom_internal@plt+0x276c>
    3fc8:	ldr	r1, [pc, #376]	; 4148 <log_oom_internal@plt+0x2a68>
    3fcc:	add	r1, pc, r1
    3fd0:	b	3c28 <log_oom_internal@plt+0x2548>
    3fd4:	ldr	r0, [pc, #368]	; 414c <log_oom_internal@plt+0x2a6c>
    3fd8:	add	r0, pc, r0
    3fdc:	b	3e14 <log_oom_internal@plt+0x2734>
    3fe0:	bl	16a4 <colors_enabled@plt>
    3fe4:	ldr	r4, [pc, #356]	; 4150 <log_oom_internal@plt+0x2a70>
    3fe8:	add	r4, pc, r4
    3fec:	cmp	r0, #0
    3ff0:	beq	3fa8 <log_oom_internal@plt+0x28c8>
    3ff4:	ldr	r3, [pc, #344]	; 4154 <log_oom_internal@plt+0x2a74>
    3ff8:	add	r3, pc, r3
    3ffc:	b	3fb0 <log_oom_internal@plt+0x28d0>
    4000:	ldr	r2, [pc, #336]	; 4158 <log_oom_internal@plt+0x2a78>
    4004:	ldr	r3, [pc, #336]	; 415c <log_oom_internal@plt+0x2a7c>
    4008:	add	r2, pc, r2
    400c:	ldr	r1, [r8]
    4010:	add	r3, pc, r3
    4014:	str	r2, [sp, #4]
    4018:	ldr	r2, [pc, #320]	; 4160 <log_oom_internal@plt+0x2a80>
    401c:	add	r3, r3, #384	; 0x180
    4020:	str	r3, [sp]
    4024:	add	r2, pc, r2
    4028:	mov	r3, #108	; 0x6c
    402c:	mov	r0, #4
    4030:	bl	1650 <log_internal_realm@plt>
    4034:	b	3dbc <log_oom_internal@plt+0x26dc>
    4038:	ldr	r2, [pc, #292]	; 4164 <log_oom_internal@plt+0x2a84>
    403c:	ldr	r3, [pc, #292]	; 4168 <log_oom_internal@plt+0x2a88>
    4040:	add	r2, pc, r2
    4044:	ldr	r1, [r5]
    4048:	add	r3, pc, r3
    404c:	str	r2, [sp, #4]
    4050:	ldr	r2, [pc, #276]	; 416c <log_oom_internal@plt+0x2a8c>
    4054:	add	r3, r3, #384	; 0x180
    4058:	str	r3, [sp]
    405c:	add	r2, pc, r2
    4060:	mov	r3, #66	; 0x42
    4064:	mov	r0, #4
    4068:	bl	1650 <log_internal_realm@plt>
    406c:	b	3c58 <log_oom_internal@plt+0x2578>
    4070:	bl	1620 <time@plt>
    4074:	str	r0, [fp, #-2132]	; 0xfffff7ac
    4078:	b	3c74 <log_oom_internal@plt+0x2594>
    407c:	ldr	r2, [pc, #236]	; 4170 <log_oom_internal@plt+0x2a90>
    4080:	ldr	r3, [pc, #236]	; 4174 <log_oom_internal@plt+0x2a94>
    4084:	add	r2, pc, r2
    4088:	str	r2, [sp, #4]
    408c:	add	r3, pc, r3
    4090:	ldr	r2, [pc, #224]	; 4178 <log_oom_internal@plt+0x2a98>
    4094:	add	r3, r3, #384	; 0x180
    4098:	str	r3, [sp]
    409c:	add	r2, pc, r2
    40a0:	mov	r3, #77	; 0x4d
    40a4:	mov	r1, #0
    40a8:	mov	r0, #4
    40ac:	bl	1650 <log_internal_realm@plt>
    40b0:	b	3ea0 <log_oom_internal@plt+0x27c0>
    40b4:	bl	14b8 <__stack_chk_fail@plt>
    40b8:	ldrdeq	r3, [r1], -r8
    40bc:	andeq	r0, r0, ip, lsr r1
    40c0:	andeq	r1, r0, r0, lsr #22
    40c4:	andeq	r1, r0, r0, lsr #21
    40c8:	andeq	r1, r0, r4, asr #21
    40cc:	andeq	r4, pc, r0, asr #4
    40d0:	andeq	r1, r0, r0, lsr #22
    40d4:	andeq	r1, r0, r4, lsl sl
    40d8:			; <UNDEFINED> instruction: 0x00001ab4
    40dc:	strdeq	r1, [r0], -r0
    40e0:	ldrdeq	r1, [r0], -r0
    40e4:	muleq	r0, r0, sl
    40e8:	andeq	r1, r0, r0, lsr #21
    40ec:	andeq	r1, r0, r4, ror #18
    40f0:	muleq	r0, r0, sl
    40f4:	andeq	r1, r0, r0, ror #18
    40f8:	andeq	r1, r0, ip, ror #17
    40fc:	andeq	r1, r0, ip, lsr r6
    4100:	andeq	r1, r0, r4, asr #17
    4104:	andeq	r1, r0, r8, lsl #12
    4108:	strdeq	r1, [r0], -r4
    410c:	andeq	r3, r1, r8, lsl #3
    4110:	andeq	r1, r0, r0, lsr #16
    4114:	andeq	r1, r0, r4, asr #17
    4118:	ldrdeq	r1, [r0], -r0
    411c:	andeq	r1, r0, r0, ror #15
    4120:	andeq	r1, r0, r4, lsl r9
    4124:	andeq	r1, r0, r8, lsl #18
    4128:			; <UNDEFINED> instruction: 0x000017bc
    412c:	andeq	r1, r0, ip, ror #14
    4130:	andeq	r1, r0, r0, asr #9
    4134:	andeq	r1, r0, r4, asr r7
    4138:	andeq	r1, r0, r8, lsr #9
    413c:	andeq	r1, r0, r4, asr r2
    4140:	andeq	r1, r0, r4, asr #4
    4144:	strdeq	r1, [r0], -r0
    4148:	strdeq	r1, [r0], -r8
    414c:	strdeq	r1, [r0], -r4
    4150:	strdeq	r1, [r0], -r8
    4154:	strdeq	r1, [r0], -r4
    4158:	strdeq	r1, [r0], -r0
    415c:	andeq	r0, r0, r4, lsr #18
    4160:	andeq	r0, r0, r4, ror #21
    4164:			; <UNDEFINED> instruction: 0x000016b8
    4168:	andeq	r0, r0, ip, ror #17
    416c:	andeq	r0, r0, ip, lsr #21
    4170:	andeq	r1, r0, r8, lsr #13
    4174:	andeq	r0, r0, r8, lsr #17
    4178:	andeq	r0, r0, ip, ror #20
    417c:	ldr	r3, [pc, #360]	; 42ec <log_oom_internal@plt+0x2c0c>
    4180:	ldr	r1, [pc, #360]	; 42f0 <log_oom_internal@plt+0x2c10>
    4184:	add	r3, pc, r3
    4188:	push	{r4, r5, r6, r7, r8, lr}
    418c:	sub	sp, sp, #72	; 0x48
    4190:	ldr	r7, [r3, r1]
    4194:	add	r6, sp, #32
    4198:	mov	r4, #0
    419c:	ldr	ip, [r7]
    41a0:	mov	r5, r2
    41a4:	mov	r0, r6
    41a8:	mov	r2, #32
    41ac:	mov	r1, #0
    41b0:	str	ip, [sp, #68]	; 0x44
    41b4:	bl	141c <memset@plt>
    41b8:	cmp	r5, r4
    41bc:	str	r4, [sp, #20]
    41c0:	str	r4, [sp, #24]
    41c4:	str	r4, [sp, #28]
    41c8:	str	r4, [sp, #16]
    41cc:	beq	42bc <log_oom_internal@plt+0x2bdc>
    41d0:	mov	r1, #2
    41d4:	add	r8, sp, #20
    41d8:	add	r2, sp, #16
    41dc:	ldr	r3, [pc, #272]	; 42f4 <log_oom_internal@plt+0x2c14>
    41e0:	str	r2, [sp, #8]
    41e4:	stm	sp, {r1, r8}
    41e8:	ldr	r2, [pc, #264]	; 42f8 <log_oom_internal@plt+0x2c18>
    41ec:	ldr	r1, [pc, #264]	; 42fc <log_oom_internal@plt+0x2c1c>
    41f0:	add	r3, pc, r3
    41f4:	mov	r0, r5
    41f8:	str	r6, [sp, #12]
    41fc:	add	r3, r3, #160	; 0xa0
    4200:	add	r2, pc, r2
    4204:	add	r1, pc, r1
    4208:	bl	14a0 <bus_map_all_properties@plt>
    420c:	subs	r5, r0, #0
    4210:	bge	4264 <log_oom_internal@plt+0x2b84>
    4214:	mov	r0, r4
    4218:	bl	1428 <log_get_max_level_realm@plt>
    421c:	cmp	r0, #2
    4220:	rsble	r5, r5, #0
    4224:	uxtble	r5, r5
    4228:	rsble	r5, r5, #0
    422c:	bgt	4270 <log_oom_internal@plt+0x2b90>
    4230:	ldr	r0, [sp, #16]
    4234:	cmp	r0, #0
    4238:	beq	4240 <log_oom_internal@plt+0x2b60>
    423c:	bl	153c <sd_bus_message_unref@plt>
    4240:	mov	r0, r8
    4244:	bl	1470 <sd_bus_error_free@plt>
    4248:	ldr	r2, [sp, #68]	; 0x44
    424c:	ldr	r3, [r7]
    4250:	mov	r0, r5
    4254:	cmp	r2, r3
    4258:	bne	42e8 <log_oom_internal@plt+0x2c08>
    425c:	add	sp, sp, #72	; 0x48
    4260:	pop	{r4, r5, r6, r7, r8, pc}
    4264:	mov	r0, r6
    4268:	bl	3ba8 <log_oom_internal@plt+0x24c8>
    426c:	b	4230 <log_oom_internal@plt+0x2b50>
    4270:	mov	r1, r5
    4274:	mov	r0, r8
    4278:	bl	15f0 <bus_error_message@plt>
    427c:	ldr	r2, [pc, #124]	; 4300 <log_oom_internal@plt+0x2c20>
    4280:	ldr	r3, [pc, #124]	; 4304 <log_oom_internal@plt+0x2c24>
    4284:	add	r2, pc, r2
    4288:	str	r2, [sp, #4]
    428c:	add	r3, pc, r3
    4290:	ldr	r2, [pc, #112]	; 4308 <log_oom_internal@plt+0x2c28>
    4294:	add	r3, r3, #416	; 0x1a0
    4298:	mov	r1, r5
    429c:	str	r3, [sp]
    42a0:	add	r2, pc, r2
    42a4:	mov	r3, #160	; 0xa0
    42a8:	str	r0, [sp, #8]
    42ac:	mov	r0, #3
    42b0:	bl	1650 <log_internal_realm@plt>
    42b4:	mov	r5, r0
    42b8:	b	4230 <log_oom_internal@plt+0x2b50>
    42bc:	ldr	r3, [pc, #72]	; 430c <log_oom_internal@plt+0x2c2c>
    42c0:	ldr	r2, [pc, #72]	; 4310 <log_oom_internal@plt+0x2c30>
    42c4:	add	r3, pc, r3
    42c8:	ldr	r1, [pc, #68]	; 4314 <log_oom_internal@plt+0x2c34>
    42cc:	add	r3, r3, #404	; 0x194
    42d0:	str	r3, [sp]
    42d4:	mov	r0, r5
    42d8:	mov	r3, #149	; 0x95
    42dc:	add	r2, pc, r2
    42e0:	add	r1, pc, r1
    42e4:	bl	1644 <log_assert_failed_realm@plt>
    42e8:	bl	14b8 <__stack_chk_fail@plt>
    42ec:	andeq	r2, r1, r4, lsl #26
    42f0:	andeq	r0, r0, ip, lsr r1
    42f4:	andeq	r2, r1, r4, asr #17
    42f8:	andeq	r0, r0, ip, lsl #29
    42fc:	andeq	r0, r0, r4, lsr #29
    4300:	andeq	r0, r0, r8, asr #28
    4304:	andeq	r0, r0, r8, lsr #13
    4308:	andeq	r0, r0, r8, ror #16
    430c:	andeq	r0, r0, r0, ror r6
    4310:	andeq	r0, r0, ip, lsr #16
    4314:	andeq	r0, r0, r0, ror sp
    4318:	eor	r1, r1, #-2147483648	; 0x80000000
    431c:	b	4324 <log_oom_internal@plt+0x2c44>
    4320:	eor	r3, r3, #-2147483648	; 0x80000000
    4324:	push	{r4, r5, lr}
    4328:	lsl	r4, r1, #1
    432c:	lsl	r5, r3, #1
    4330:	teq	r4, r5
    4334:	teqeq	r0, r2
    4338:	orrsne	ip, r4, r0
    433c:	orrsne	ip, r5, r2
    4340:	mvnsne	ip, r4, asr #21
    4344:	mvnsne	ip, r5, asr #21
    4348:	beq	4534 <log_oom_internal@plt+0x2e54>
    434c:	lsr	r4, r4, #21
    4350:	rsbs	r5, r4, r5, lsr #21
    4354:	rsblt	r5, r5, #0
    4358:	ble	4378 <log_oom_internal@plt+0x2c98>
    435c:	add	r4, r4, r5
    4360:	eor	r2, r0, r2
    4364:	eor	r3, r1, r3
    4368:	eor	r0, r2, r0
    436c:	eor	r1, r3, r1
    4370:	eor	r2, r0, r2
    4374:	eor	r3, r1, r3
    4378:	cmp	r5, #54	; 0x36
    437c:	pophi	{r4, r5, pc}
    4380:	tst	r1, #-2147483648	; 0x80000000
    4384:	lsl	r1, r1, #12
    4388:	mov	ip, #1048576	; 0x100000
    438c:	orr	r1, ip, r1, lsr #12
    4390:	beq	439c <log_oom_internal@plt+0x2cbc>
    4394:	rsbs	r0, r0, #0
    4398:	rsc	r1, r1, #0
    439c:	tst	r3, #-2147483648	; 0x80000000
    43a0:	lsl	r3, r3, #12
    43a4:	orr	r3, ip, r3, lsr #12
    43a8:	beq	43b4 <log_oom_internal@plt+0x2cd4>
    43ac:	rsbs	r2, r2, #0
    43b0:	rsc	r3, r3, #0
    43b4:	teq	r4, r5
    43b8:	beq	451c <log_oom_internal@plt+0x2e3c>
    43bc:	sub	r4, r4, #1
    43c0:	rsbs	lr, r5, #32
    43c4:	blt	43e0 <log_oom_internal@plt+0x2d00>
    43c8:	lsl	ip, r2, lr
    43cc:	adds	r0, r0, r2, lsr r5
    43d0:	adc	r1, r1, #0
    43d4:	adds	r0, r0, r3, lsl lr
    43d8:	adcs	r1, r1, r3, asr r5
    43dc:	b	43fc <log_oom_internal@plt+0x2d1c>
    43e0:	sub	r5, r5, #32
    43e4:	add	lr, lr, #32
    43e8:	cmp	r2, #1
    43ec:	lsl	ip, r3, lr
    43f0:	orrcs	ip, ip, #2
    43f4:	adds	r0, r0, r3, asr r5
    43f8:	adcs	r1, r1, r3, asr #31
    43fc:	and	r5, r1, #-2147483648	; 0x80000000
    4400:	bpl	4410 <log_oom_internal@plt+0x2d30>
    4404:	rsbs	ip, ip, #0
    4408:	rscs	r0, r0, #0
    440c:	rsc	r1, r1, #0
    4410:	cmp	r1, #1048576	; 0x100000
    4414:	bcc	4454 <log_oom_internal@plt+0x2d74>
    4418:	cmp	r1, #2097152	; 0x200000
    441c:	bcc	443c <log_oom_internal@plt+0x2d5c>
    4420:	lsrs	r1, r1, #1
    4424:	rrxs	r0, r0
    4428:	rrx	ip, ip
    442c:	add	r4, r4, #1
    4430:	lsl	r2, r4, #21
    4434:	cmn	r2, #4194304	; 0x400000
    4438:	bcs	4594 <log_oom_internal@plt+0x2eb4>
    443c:	cmp	ip, #-2147483648	; 0x80000000
    4440:	lsrseq	ip, r0, #1
    4444:	adcs	r0, r0, #0
    4448:	adc	r1, r1, r4, lsl #20
    444c:	orr	r1, r1, r5
    4450:	pop	{r4, r5, pc}
    4454:	lsls	ip, ip, #1
    4458:	adcs	r0, r0, r0
    445c:	adc	r1, r1, r1
    4460:	tst	r1, #1048576	; 0x100000
    4464:	sub	r4, r4, #1
    4468:	bne	443c <log_oom_internal@plt+0x2d5c>
    446c:	teq	r1, #0
    4470:	moveq	r1, r0
    4474:	moveq	r0, #0
    4478:	clz	r3, r1
    447c:	addeq	r3, r3, #32
    4480:	sub	r3, r3, #11
    4484:	subs	r2, r3, #32
    4488:	bge	44ac <log_oom_internal@plt+0x2dcc>
    448c:	adds	r2, r2, #12
    4490:	ble	44a8 <log_oom_internal@plt+0x2dc8>
    4494:	add	ip, r2, #20
    4498:	rsb	r2, r2, #12
    449c:	lsl	r0, r1, ip
    44a0:	lsr	r1, r1, r2
    44a4:	b	44bc <log_oom_internal@plt+0x2ddc>
    44a8:	add	r2, r2, #20
    44ac:	rsble	ip, r2, #32
    44b0:	lsl	r1, r1, r2
    44b4:	orrle	r1, r1, r0, lsr ip
    44b8:	lslle	r0, r0, r2
    44bc:	subs	r4, r4, r3
    44c0:	addge	r1, r1, r4, lsl #20
    44c4:	orrge	r1, r1, r5
    44c8:	popge	{r4, r5, pc}
    44cc:	mvn	r4, r4
    44d0:	subs	r4, r4, #31
    44d4:	bge	4510 <log_oom_internal@plt+0x2e30>
    44d8:	adds	r4, r4, #12
    44dc:	bgt	44f8 <log_oom_internal@plt+0x2e18>
    44e0:	add	r4, r4, #20
    44e4:	rsb	r2, r4, #32
    44e8:	lsr	r0, r0, r4
    44ec:	orr	r0, r0, r1, lsl r2
    44f0:	orr	r1, r5, r1, lsr r4
    44f4:	pop	{r4, r5, pc}
    44f8:	rsb	r4, r4, #12
    44fc:	rsb	r2, r4, #32
    4500:	lsr	r0, r0, r2
    4504:	orr	r0, r0, r1, lsl r4
    4508:	mov	r1, r5
    450c:	pop	{r4, r5, pc}
    4510:	lsr	r0, r1, r4
    4514:	mov	r1, r5
    4518:	pop	{r4, r5, pc}
    451c:	teq	r4, #0
    4520:	eor	r3, r3, #1048576	; 0x100000
    4524:	eoreq	r1, r1, #1048576	; 0x100000
    4528:	addeq	r4, r4, #1
    452c:	subne	r5, r5, #1
    4530:	b	43bc <log_oom_internal@plt+0x2cdc>
    4534:	mvns	ip, r4, asr #21
    4538:	mvnsne	ip, r5, asr #21
    453c:	beq	45a4 <log_oom_internal@plt+0x2ec4>
    4540:	teq	r4, r5
    4544:	teqeq	r0, r2
    4548:	beq	455c <log_oom_internal@plt+0x2e7c>
    454c:	orrs	ip, r4, r0
    4550:	moveq	r1, r3
    4554:	moveq	r0, r2
    4558:	pop	{r4, r5, pc}
    455c:	teq	r1, r3
    4560:	movne	r1, #0
    4564:	movne	r0, #0
    4568:	popne	{r4, r5, pc}
    456c:	lsrs	ip, r4, #21
    4570:	bne	4584 <log_oom_internal@plt+0x2ea4>
    4574:	lsls	r0, r0, #1
    4578:	adcs	r1, r1, r1
    457c:	orrcs	r1, r1, #-2147483648	; 0x80000000
    4580:	pop	{r4, r5, pc}
    4584:	adds	r4, r4, #4194304	; 0x400000
    4588:	addcc	r1, r1, #1048576	; 0x100000
    458c:	popcc	{r4, r5, pc}
    4590:	and	r5, r1, #-2147483648	; 0x80000000
    4594:	orr	r1, r5, #2130706432	; 0x7f000000
    4598:	orr	r1, r1, #15728640	; 0xf00000
    459c:	mov	r0, #0
    45a0:	pop	{r4, r5, pc}
    45a4:	mvns	ip, r4, asr #21
    45a8:	movne	r1, r3
    45ac:	movne	r0, r2
    45b0:	mvnseq	ip, r5, asr #21
    45b4:	movne	r3, r1
    45b8:	movne	r2, r0
    45bc:	orrs	r4, r0, r1, lsl #12
    45c0:	orrseq	r5, r2, r3, lsl #12
    45c4:	teqeq	r1, r3
    45c8:	orrne	r1, r1, #524288	; 0x80000
    45cc:	pop	{r4, r5, pc}
    45d0:	teq	r0, #0
    45d4:	moveq	r1, #0
    45d8:	bxeq	lr
    45dc:	push	{r4, r5, lr}
    45e0:	mov	r4, #1024	; 0x400
    45e4:	add	r4, r4, #50	; 0x32
    45e8:	mov	r5, #0
    45ec:	mov	r1, #0
    45f0:	b	446c <log_oom_internal@plt+0x2d8c>
    45f4:	teq	r0, #0
    45f8:	moveq	r1, #0
    45fc:	bxeq	lr
    4600:	push	{r4, r5, lr}
    4604:	mov	r4, #1024	; 0x400
    4608:	add	r4, r4, #50	; 0x32
    460c:	ands	r5, r0, #-2147483648	; 0x80000000
    4610:	rsbmi	r0, r0, #0
    4614:	mov	r1, #0
    4618:	b	446c <log_oom_internal@plt+0x2d8c>
    461c:	lsls	r2, r0, #1
    4620:	asr	r1, r2, #3
    4624:	rrx	r1, r1
    4628:	lsl	r0, r2, #28
    462c:	andsne	r3, r2, #-16777216	; 0xff000000
    4630:	teqne	r3, #-16777216	; 0xff000000
    4634:	eorne	r1, r1, #939524096	; 0x38000000
    4638:	bxne	lr
    463c:	bics	r2, r2, #-16777216	; 0xff000000
    4640:	bxeq	lr
    4644:	teq	r3, #-16777216	; 0xff000000
    4648:	orreq	r1, r1, #524288	; 0x80000
    464c:	bxeq	lr
    4650:	push	{r4, r5, lr}
    4654:	mov	r4, #896	; 0x380
    4658:	and	r5, r1, #-2147483648	; 0x80000000
    465c:	bic	r1, r1, #-2147483648	; 0x80000000
    4660:	b	446c <log_oom_internal@plt+0x2d8c>
    4664:	orrs	r2, r0, r1
    4668:	bxeq	lr
    466c:	push	{r4, r5, lr}
    4670:	mov	r5, #0
    4674:	b	4694 <log_oom_internal@plt+0x2fb4>
    4678:	orrs	r2, r0, r1
    467c:	bxeq	lr
    4680:	push	{r4, r5, lr}
    4684:	ands	r5, r1, #-2147483648	; 0x80000000
    4688:	bpl	4694 <log_oom_internal@plt+0x2fb4>
    468c:	rsbs	r0, r0, #0
    4690:	rsc	r1, r1, #0
    4694:	mov	r4, #1024	; 0x400
    4698:	add	r4, r4, #50	; 0x32
    469c:	lsrs	ip, r1, #22
    46a0:	beq	4410 <log_oom_internal@plt+0x2d30>
    46a4:	mov	r2, #3
    46a8:	lsrs	ip, ip, #3
    46ac:	addne	r2, r2, #3
    46b0:	lsrs	ip, ip, #3
    46b4:	addne	r2, r2, #3
    46b8:	add	r2, r2, ip, lsr #3
    46bc:	rsb	r3, r2, #32
    46c0:	lsl	ip, r0, r3
    46c4:	lsr	r0, r0, r2
    46c8:	orr	r0, r0, r1, lsl r3
    46cc:	lsr	r1, r1, r2
    46d0:	add	r4, r4, r2
    46d4:	b	4410 <log_oom_internal@plt+0x2d30>
    46d8:	cmp	r3, #0
    46dc:	cmpeq	r2, #0
    46e0:	bne	46f8 <log_oom_internal@plt+0x3018>
    46e4:	cmp	r1, #0
    46e8:	cmpeq	r0, #0
    46ec:	mvnne	r1, #0
    46f0:	mvnne	r0, #0
    46f4:	b	4714 <log_oom_internal@plt+0x3034>
    46f8:	sub	sp, sp, #8
    46fc:	push	{sp, lr}
    4700:	bl	4778 <log_oom_internal@plt+0x3098>
    4704:	ldr	lr, [sp, #4]
    4708:	add	sp, sp, #8
    470c:	pop	{r2, r3}
    4710:	bx	lr
    4714:	push	{r1, lr}
    4718:	mov	r0, #8
    471c:	bl	1530 <raise@plt>
    4720:	pop	{r1, pc}
    4724:	andeq	r0, r0, r0
    4728:	vmov	d7, r0, r1
    472c:	vldr	d6, [pc, #52]	; 4768 <log_oom_internal@plt+0x3088>
    4730:	vldr	d5, [pc, #56]	; 4770 <log_oom_internal@plt+0x3090>
    4734:	push	{r4, r5}
    4738:	mov	r4, #0
    473c:	vmul.f64	d6, d7, d6
    4740:	vcvt.u32.f64	s12, d6
    4744:	vcvt.f64.u32	d4, s12
    4748:	vmov	r1, s12
    474c:	vmls.f64	d7, d4, d5
    4750:	vcvt.u32.f64	s14, d7
    4754:	vmov	r3, s14
    4758:	orr	r0, r4, r3
    475c:	pop	{r4, r5}
    4760:	bx	lr
    4764:	nop			; (mov r0, r0)
    4768:	andeq	r0, r0, r0
    476c:	ldclcc	0, cr0, [r0]
    4770:	andeq	r0, r0, r0
    4774:	mvnsmi	r0, r0
    4778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    477c:	cmp	r1, r3
    4780:	sub	sp, sp, #12
    4784:	cmpeq	r0, r2
    4788:	mov	sl, r0
    478c:	mov	fp, r1
    4790:	ldr	r8, [sp, #48]	; 0x30
    4794:	bcc	488c <log_oom_internal@plt+0x31ac>
    4798:	cmp	r3, #0
    479c:	mov	r0, r2
    47a0:	mov	r1, r3
    47a4:	clzne	r2, r3
    47a8:	clzeq	r3, r0
    47ac:	addeq	r2, r3, #32
    47b0:	cmp	fp, #0
    47b4:	clzeq	r3, sl
    47b8:	addeq	r3, r3, #32
    47bc:	clzne	r3, fp
    47c0:	sub	r3, r2, r3
    47c4:	sub	ip, r3, #32
    47c8:	lsl	r7, r1, r3
    47cc:	rsb	lr, r3, #32
    47d0:	orr	r7, r7, r0, lsl ip
    47d4:	orr	r7, r7, r0, lsr lr
    47d8:	lsl	r6, r0, r3
    47dc:	cmp	fp, r7
    47e0:	cmpeq	sl, r6
    47e4:	bcs	48ac <log_oom_internal@plt+0x31cc>
    47e8:	mov	r0, #0
    47ec:	mov	r1, #0
    47f0:	strd	r0, [sp]
    47f4:	cmp	r3, #0
    47f8:	beq	4898 <log_oom_internal@plt+0x31b8>
    47fc:	lsrs	r7, r7, #1
    4800:	rrx	r6, r6
    4804:	mov	r2, r3
    4808:	b	482c <log_oom_internal@plt+0x314c>
    480c:	subs	r0, sl, r6
    4810:	sbc	r1, fp, r7
    4814:	adds	r4, r0, r0
    4818:	adc	r5, r1, r1
    481c:	adds	sl, r4, #1
    4820:	adc	fp, r5, #0
    4824:	subs	r2, r2, #1
    4828:	beq	4848 <log_oom_internal@plt+0x3168>
    482c:	cmp	fp, r7
    4830:	cmpeq	sl, r6
    4834:	bcs	480c <log_oom_internal@plt+0x312c>
    4838:	adds	sl, sl, sl
    483c:	adc	fp, fp, fp
    4840:	subs	r2, r2, #1
    4844:	bne	482c <log_oom_internal@plt+0x314c>
    4848:	lsr	r2, sl, r3
    484c:	lsr	r9, fp, r3
    4850:	orr	r2, r2, fp, lsl lr
    4854:	orr	r2, r2, fp, lsr ip
    4858:	lsl	r1, r9, r3
    485c:	ldrd	r6, [sp]
    4860:	orr	r1, r1, r2, lsl ip
    4864:	lsl	r0, r2, r3
    4868:	adds	r6, r6, sl
    486c:	orr	r1, r1, r2, lsr lr
    4870:	adc	r7, r7, fp
    4874:	subs	r6, r6, r0
    4878:	sbc	r7, r7, r1
    487c:	mov	sl, r2
    4880:	mov	fp, r9
    4884:	strd	r6, [sp]
    4888:	b	4898 <log_oom_internal@plt+0x31b8>
    488c:	mov	r2, #0
    4890:	mov	r3, #0
    4894:	strd	r2, [sp]
    4898:	cmp	r8, #0
    489c:	strdne	sl, [r8]
    48a0:	ldrd	r0, [sp]
    48a4:	add	sp, sp, #12
    48a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    48ac:	mov	r2, #1
    48b0:	subs	sl, sl, r6
    48b4:	lsl	r1, r2, ip
    48b8:	orr	r1, r1, r2, lsr lr
    48bc:	lsl	r2, r2, r3
    48c0:	str	r1, [sp, #4]
    48c4:	sbc	fp, fp, r7
    48c8:	str	r2, [sp]
    48cc:	b	47f4 <log_oom_internal@plt+0x3114>
    48d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    48d4:	mov	r7, r0
    48d8:	ldr	r6, [pc, #72]	; 4928 <log_oom_internal@plt+0x3248>
    48dc:	ldr	r5, [pc, #72]	; 492c <log_oom_internal@plt+0x324c>
    48e0:	add	r6, pc, r6
    48e4:	add	r5, pc, r5
    48e8:	sub	r6, r6, r5
    48ec:	mov	r8, r1
    48f0:	mov	r9, r2
    48f4:	bl	133c <__exp2_finite@plt-0x20>
    48f8:	asrs	r6, r6, #2
    48fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    4900:	mov	r4, #0
    4904:	add	r4, r4, #1
    4908:	ldr	r3, [r5], #4
    490c:	mov	r2, r9
    4910:	mov	r1, r8
    4914:	mov	r0, r7
    4918:	blx	r3
    491c:	cmp	r6, r4
    4920:	bne	4904 <log_oom_internal@plt+0x3224>
    4924:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4928:	ldrdeq	r2, [r1], -r0
    492c:	andeq	r2, r1, r8, asr #3
    4930:	bx	lr

Disassembly of section .fini:

00004934 <.fini>:
    4934:	push	{r3, lr}
    4938:	pop	{r3, pc}
