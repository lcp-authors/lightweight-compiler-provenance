
raspbian-preinstalled/ffplay:     file format elf32-littlearm


Disassembly of section .init:

00005c94 <.init>:
    5c94:	push	{r3, lr}
    5c98:	bl	8e58 <main@@Base+0x2288>
    5c9c:	pop	{r3, pc}

Disassembly of section .plt:

00005ca0 <fputs@plt-0x14>:
    5ca0:	push	{lr}		; (str lr, [sp, #-4]!)
    5ca4:	ldr	lr, [pc, #4]	; 5cb0 <fputs@plt-0x4>
    5ca8:	add	lr, pc, lr
    5cac:	ldr	pc, [lr, #8]!
    5cb0:	andeq	r2, r3, ip, ror #27

00005cb4 <fputs@plt>:
    5cb4:	add	ip, pc, #0, 12
    5cb8:	add	ip, ip, #204800	; 0x32000
    5cbc:	ldr	pc, [ip, #3564]!	; 0xdec

00005cc0 <vchi_msg_queuev@plt>:
    5cc0:	add	ip, pc, #0, 12
    5cc4:	add	ip, ip, #204800	; 0x32000
    5cc8:	ldr	pc, [ip, #3556]!	; 0xde4

00005ccc <setrlimit64@plt>:
    5ccc:	add	ip, pc, #0, 12
    5cd0:	add	ip, ip, #204800	; 0x32000
    5cd4:	ldr	pc, [ip, #3548]!	; 0xddc

00005cd8 <avfilter_inout_free@plt>:
    5cd8:	add	ip, pc, #0, 12
    5cdc:	add	ip, ip, #204800	; 0x32000
    5ce0:	ldr	pc, [ip, #3540]!	; 0xdd4

00005ce4 <avfilter_get_class@plt>:
    5ce4:	add	ip, pc, #0, 12
    5ce8:	add	ip, ip, #204800	; 0x32000
    5cec:	ldr	pc, [ip, #3532]!	; 0xdcc

00005cf0 <av_buffersink_get_frame_rate@plt>:
    5cf0:	add	ip, pc, #0, 12
    5cf4:	add	ip, ip, #204800	; 0x32000
    5cf8:	ldr	pc, [ip, #3524]!	; 0xdc4

00005cfc <avfilter_version@plt>:
    5cfc:	add	ip, pc, #0, 12
    5d00:	add	ip, ip, #204800	; 0x32000
    5d04:	ldr	pc, [ip, #3516]!	; 0xdbc

00005d08 <SDL_PeepEvents@plt>:
    5d08:	add	ip, pc, #0, 12
    5d0c:	add	ip, ip, #204800	; 0x32000
    5d10:	ldr	pc, [ip, #3508]!	; 0xdb4

00005d14 <avsubtitle_free@plt>:
    5d14:	add	ip, pc, #0, 12
    5d18:	add	ip, ip, #204800	; 0x32000
    5d1c:	ldr	pc, [ip, #3500]!	; 0xdac

00005d20 <fopen64@plt>:
    5d20:	add	ip, pc, #0, 12
    5d24:	add	ip, ip, #204800	; 0x32000
    5d28:	ldr	pc, [ip, #3492]!	; 0xda4

00005d2c <avfilter_link@plt>:
    5d2c:	add	ip, pc, #0, 12
    5d30:	add	ip, ip, #204800	; 0x32000
    5d34:	ldr	pc, [ip, #3484]!	; 0xd9c

00005d38 <vchi_service_close@plt>:
    5d38:	add	ip, pc, #0, 12
    5d3c:	add	ip, ip, #204800	; 0x32000
    5d40:	ldr	pc, [ip, #3476]!	; 0xd94

00005d44 <av_hwdevice_get_type_name@plt>:
    5d44:	add	ip, pc, #0, 12
    5d48:	add	ip, ip, #204800	; 0x32000
    5d4c:	ldr	pc, [ip, #3468]!	; 0xd8c

00005d50 <SDL_RenderCopy@plt>:
    5d50:	add	ip, pc, #0, 12
    5d54:	add	ip, ip, #204800	; 0x32000
    5d58:	ldr	pc, [ip, #3460]!	; 0xd84

00005d5c <strstr@plt>:
    5d5c:	add	ip, pc, #0, 12
    5d60:	add	ip, ip, #204800	; 0x32000
    5d64:	ldr	pc, [ip, #3452]!	; 0xd7c

00005d68 <av_read_pause@plt>:
    5d68:	add	ip, pc, #0, 12
    5d6c:	add	ip, ip, #204800	; 0x32000
    5d70:	ldr	pc, [ip, #3444]!	; 0xd74

00005d74 <av_demuxer_iterate@plt>:
    5d74:	add	ip, pc, #0, 12
    5d78:	add	ip, ip, #204800	; 0x32000
    5d7c:	ldr	pc, [ip, #3436]!	; 0xd6c

00005d80 <SDL_UpdateTexture@plt>:
    5d80:	add	ip, pc, #0, 12
    5d84:	add	ip, ip, #204800	; 0x32000
    5d88:	ldr	pc, [ip, #3428]!	; 0xd64

00005d8c <av_get_cpu_flags@plt>:
    5d8c:	add	ip, pc, #0, 12
    5d90:	add	ip, ip, #204800	; 0x32000
    5d94:	ldr	pc, [ip, #3420]!	; 0xd5c

00005d98 <avfilter_configuration@plt>:
    5d98:	add	ip, pc, #0, 12
    5d9c:	add	ip, ip, #204800	; 0x32000
    5da0:	ldr	pc, [ip, #3412]!	; 0xd54

00005da4 <av_get_bits_per_pixel@plt>:
    5da4:	add	ip, pc, #0, 12
    5da8:	add	ip, ip, #204800	; 0x32000
    5dac:	ldr	pc, [ip, #3404]!	; 0xd4c

00005db0 <sws_isSupportedInput@plt>:
    5db0:	add	ip, pc, #0, 12
    5db4:	add	ip, ip, #204800	; 0x32000
    5db8:	ldr	pc, [ip, #3396]!	; 0xd44

00005dbc <avresample_get_class@plt>:
    5dbc:	add	ip, pc, #0, 12
    5dc0:	add	ip, ip, #204800	; 0x32000
    5dc4:	ldr	pc, [ip, #3388]!	; 0xd3c

00005dc8 <qsort@plt>:
    5dc8:	add	ip, pc, #0, 12
    5dcc:	add	ip, ip, #204800	; 0x32000
    5dd0:	ldr	pc, [ip, #3380]!	; 0xd34

00005dd4 <vchiq_queue_message@plt>:
    5dd4:	add	ip, pc, #0, 12
    5dd8:	add	ip, ip, #204800	; 0x32000
    5ddc:	ldr	pc, [ip, #3372]!	; 0xd2c

00005de0 <av_log_set_level@plt>:
    5de0:	add	ip, pc, #0, 12
    5de4:	add	ip, ip, #204800	; 0x32000
    5de8:	ldr	pc, [ip, #3364]!	; 0xd24

00005dec <SDL_CondSignal@plt>:
    5dec:	add	ip, pc, #0, 12
    5df0:	add	ip, ip, #204800	; 0x32000
    5df4:	ldr	pc, [ip, #3356]!	; 0xd1c

00005df8 <av_freep@plt>:
    5df8:	add	ip, pc, #0, 12
    5dfc:	add	ip, ip, #204800	; 0x32000
    5e00:	ldr	pc, [ip, #3348]!	; 0xd14

00005e04 <avresample_configuration@plt>:
    5e04:	add	ip, pc, #0, 12
    5e08:	add	ip, ip, #204800	; 0x32000
    5e0c:	ldr	pc, [ip, #3340]!	; 0xd0c

00005e10 <SDL_WaitThread@plt>:
    5e10:	add	ip, pc, #0, 12
    5e14:	add	ip, ip, #204800	; 0x32000
    5e18:	ldr	pc, [ip, #3332]!	; 0xd04

00005e1c <avfilter_pad_get_name@plt>:
    5e1c:	add	ip, pc, #0, 12
    5e20:	add	ip, ip, #204800	; 0x32000
    5e24:	ldr	pc, [ip, #3324]!	; 0xcfc

00005e28 <av_dict_free@plt>:
    5e28:	add	ip, pc, #0, 12
    5e2c:	add	ip, ip, #204800	; 0x32000
    5e30:	ldr	pc, [ip, #3316]!	; 0xcf4

00005e34 <av_bsf_get_by_name@plt>:
    5e34:	add	ip, pc, #0, 12
    5e38:	add	ip, ip, #204800	; 0x32000
    5e3c:	ldr	pc, [ip, #3308]!	; 0xcec

00005e40 <av_malloc@plt>:
    5e40:	add	ip, pc, #0, 12
    5e44:	add	ip, ip, #204800	; 0x32000
    5e48:	ldr	pc, [ip, #3300]!	; 0xce4

00005e4c <av_find_best_stream@plt>:
    5e4c:	add	ip, pc, #0, 12
    5e50:	add	ip, ip, #204800	; 0x32000
    5e54:	ldr	pc, [ip, #3292]!	; 0xcdc

00005e58 <swr_convert@plt>:
    5e58:	add	ip, pc, #0, 12
    5e5c:	add	ip, ip, #204800	; 0x32000
    5e60:	ldr	pc, [ip, #3284]!	; 0xcd4

00005e64 <av_rdft_init@plt>:
    5e64:	add	ip, pc, #0, 12
    5e68:	add	ip, ip, #204800	; 0x32000
    5e6c:	ldr	pc, [ip, #3276]!	; 0xccc

00005e70 <SDL_GetRendererInfo@plt>:
    5e70:	add	ip, pc, #0, 12
    5e74:	add	ip, ip, #204800	; 0x32000
    5e78:	ldr	pc, [ip, #3268]!	; 0xcc4

00005e7c <__stack_chk_fail@plt>:
    5e7c:	add	ip, pc, #0, 12
    5e80:	add	ip, ip, #204800	; 0x32000
    5e84:	ldr	pc, [ip, #3260]!	; 0xcbc

00005e88 <avio_feof@plt>:
    5e88:	add	ip, pc, #0, 12
    5e8c:	add	ip, ip, #204800	; 0x32000
    5e90:	ldr	pc, [ip, #3252]!	; 0xcb4

00005e94 <av_get_channel_description@plt>:
    5e94:	add	ip, pc, #0, 12
    5e98:	add	ip, ip, #204800	; 0x32000
    5e9c:	ldr	pc, [ip, #3244]!	; 0xcac

00005ea0 <SDL_SetTextureBlendMode@plt>:
    5ea0:	add	ip, pc, #0, 12
    5ea4:	add	ip, ip, #204800	; 0x32000
    5ea8:	ldr	pc, [ip, #3236]!	; 0xca4

00005eac <vcos_generic_mem_free@plt>:
    5eac:	add	ip, pc, #0, 12
    5eb0:	add	ip, ip, #204800	; 0x32000
    5eb4:	ldr	pc, [ip, #3228]!	; 0xc9c

00005eb8 <avcodec_find_encoder@plt>:
    5eb8:	add	ip, pc, #0, 12
    5ebc:	add	ip, ip, #204800	; 0x32000
    5ec0:	ldr	pc, [ip, #3220]!	; 0xc94

00005ec4 <SDL_Quit@plt>:
    5ec4:	add	ip, pc, #0, 12
    5ec8:	add	ip, ip, #204800	; 0x32000
    5ecc:	ldr	pc, [ip, #3212]!	; 0xc8c

00005ed0 <av_buffersink_get_channels@plt>:
    5ed0:	add	ip, pc, #0, 12
    5ed4:	add	ip, ip, #204800	; 0x32000
    5ed8:	ldr	pc, [ip, #3204]!	; 0xc84

00005edc <SDL_setenv@plt>:
    5edc:	add	ip, pc, #0, 12
    5ee0:	add	ip, ip, #204800	; 0x32000
    5ee4:	ldr	pc, [ip, #3196]!	; 0xc7c

00005ee8 <SDL_CreateTexture@plt>:
    5ee8:	add	ip, pc, #0, 12
    5eec:	add	ip, ip, #204800	; 0x32000
    5ef0:	ldr	pc, [ip, #3188]!	; 0xc74

00005ef4 <SDL_EventState@plt>:
    5ef4:	add	ip, pc, #0, 12
    5ef8:	add	ip, ip, #204800	; 0x32000
    5efc:	ldr	pc, [ip, #3180]!	; 0xc6c

00005f00 <avutil_version@plt>:
    5f00:	add	ip, pc, #0, 12
    5f04:	add	ip, ip, #204800	; 0x32000
    5f08:	ldr	pc, [ip, #3172]!	; 0xc64

00005f0c <strerror@plt>:
    5f0c:	add	ip, pc, #0, 12
    5f10:	add	ip, ip, #204800	; 0x32000
    5f14:	ldr	pc, [ip, #3164]!	; 0xc5c

00005f18 <avio_seek@plt>:
    5f18:	add	ip, pc, #0, 12
    5f1c:	add	ip, ip, #204800	; 0x32000
    5f20:	ldr	pc, [ip, #3156]!	; 0xc54

00005f24 <av_bprint_init@plt>:
    5f24:	add	ip, pc, #0, 12
    5f28:	add	ip, ip, #204800	; 0x32000
    5f2c:	ldr	pc, [ip, #3148]!	; 0xc4c

00005f30 <vchiq_initialise@plt>:
    5f30:	add	ip, pc, #0, 12
    5f34:	add	ip, ip, #204800	; 0x32000
    5f38:	ldr	pc, [ip, #3140]!	; 0xc44

00005f3c <av_log_set_callback@plt>:
    5f3c:	add	ip, pc, #0, 12
    5f40:	add	ip, ip, #204800	; 0x32000
    5f44:	ldr	pc, [ip, #3132]!	; 0xc3c

00005f48 <avutil_configuration@plt>:
    5f48:	add	ip, pc, #0, 12
    5f4c:	add	ip, ip, #204800	; 0x32000
    5f50:	ldr	pc, [ip, #3124]!	; 0xc34

00005f54 <av_opt_get_key_value@plt>:
    5f54:	add	ip, pc, #0, 12
    5f58:	add	ip, ip, #204800	; 0x32000
    5f5c:	ldr	pc, [ip, #3116]!	; 0xc2c

00005f60 <avcodec_get_name@plt>:
    5f60:	add	ip, pc, #0, 12
    5f64:	add	ip, ip, #204800	; 0x32000
    5f68:	ldr	pc, [ip, #3108]!	; 0xc24

00005f6c <SDL_CreateWindow@plt>:
    5f6c:	add	ip, pc, #0, 12
    5f70:	add	ip, ip, #204800	; 0x32000
    5f74:	ldr	pc, [ip, #3100]!	; 0xc1c

00005f78 <av_asprintf@plt>:
    5f78:	add	ip, pc, #0, 12
    5f7c:	add	ip, ip, #204800	; 0x32000
    5f80:	ldr	pc, [ip, #3092]!	; 0xc14

00005f84 <av_frame_free@plt>:
    5f84:	add	ip, pc, #0, 12
    5f88:	add	ip, ip, #204800	; 0x32000
    5f8c:	ldr	pc, [ip, #3084]!	; 0xc0c

00005f90 <avio_size@plt>:
    5f90:	add	ip, pc, #0, 12
    5f94:	add	ip, ip, #204800	; 0x32000
    5f98:	ldr	pc, [ip, #3076]!	; 0xc04

00005f9c <av_frame_unref@plt>:
    5f9c:	add	ip, pc, #0, 12
    5fa0:	add	ip, ip, #204800	; 0x32000
    5fa4:	ldr	pc, [ip, #3068]!	; 0xbfc

00005fa8 <SDL_Delay@plt>:
    5fa8:	add	ip, pc, #0, 12
    5fac:	add	ip, ip, #204800	; 0x32000
    5fb0:	ldr	pc, [ip, #3060]!	; 0xbf4

00005fb4 <__errno_location@plt>:
    5fb4:	add	ip, pc, #0, 12
    5fb8:	add	ip, ip, #204800	; 0x32000
    5fbc:	ldr	pc, [ip, #3052]!	; 0xbec

00005fc0 <avfilter_pad_get_type@plt>:
    5fc0:	add	ip, pc, #0, 12
    5fc4:	add	ip, ip, #204800	; 0x32000
    5fc8:	ldr	pc, [ip, #3044]!	; 0xbe4

00005fcc <sem_destroy@plt>:
    5fcc:	add	ip, pc, #0, 12
    5fd0:	add	ip, ip, #204800	; 0x32000
    5fd4:	ldr	pc, [ip, #3036]!	; 0xbdc

00005fd8 <av_int_list_length_for_size@plt>:
    5fd8:	add	ip, pc, #0, 12
    5fdc:	add	ip, ip, #204800	; 0x32000
    5fe0:	ldr	pc, [ip, #3028]!	; 0xbd4

00005fe4 <avdevice_free_list_devices@plt>:
    5fe4:	add	ip, pc, #0, 12
    5fe8:	add	ip, ip, #204800	; 0x32000
    5fec:	ldr	pc, [ip, #3020]!	; 0xbcc

00005ff0 <avfilter_graph_free@plt>:
    5ff0:	add	ip, pc, #0, 12
    5ff4:	add	ip, ip, #204800	; 0x32000
    5ff8:	ldr	pc, [ip, #3012]!	; 0xbc4

00005ffc <pthread_mutex_lock@plt>:
    5ffc:	add	ip, pc, #0, 12
    6000:	add	ip, ip, #204800	; 0x32000
    6004:	ldr	pc, [ip, #3004]!	; 0xbbc

00006008 <vchiq_open_service@plt>:
    6008:	add	ip, pc, #0, 12
    600c:	add	ip, ip, #204800	; 0x32000
    6010:	ldr	pc, [ip, #2996]!	; 0xbb4

00006014 <vchi_service_release@plt>:
    6014:	add	ip, pc, #0, 12
    6018:	add	ip, ip, #204800	; 0x32000
    601c:	ldr	pc, [ip, #2988]!	; 0xbac

00006020 <avcodec_descriptor_next@plt>:
    6020:	add	ip, pc, #0, 12
    6024:	add	ip, ip, #204800	; 0x32000
    6028:	ldr	pc, [ip, #2980]!	; 0xba4

0000602c <sws_alloc_context@plt>:
    602c:	add	ip, pc, #0, 12
    6030:	add	ip, ip, #204800	; 0x32000
    6034:	ldr	pc, [ip, #2972]!	; 0xb9c

00006038 <av_get_channel_layout_string@plt>:
    6038:	add	ip, pc, #0, 12
    603c:	add	ip, ip, #204800	; 0x32000
    6040:	ldr	pc, [ip, #2964]!	; 0xb94

00006044 <av_calloc@plt>:
    6044:	add	ip, pc, #0, 12
    6048:	add	ip, ip, #204800	; 0x32000
    604c:	ldr	pc, [ip, #2956]!	; 0xb8c

00006050 <av_get_channel_name@plt>:
    6050:	add	ip, pc, #0, 12
    6054:	add	ip, ip, #204800	; 0x32000
    6058:	ldr	pc, [ip, #2948]!	; 0xb84

0000605c <av_dict_set_int@plt>:
    605c:	add	ip, pc, #0, 12
    6060:	add	ip, ip, #204800	; 0x32000
    6064:	ldr	pc, [ip, #2940]!	; 0xb7c

00006068 <av_packet_ref@plt>:
    6068:	add	ip, pc, #0, 12
    606c:	add	ip, ip, #204800	; 0x32000
    6070:	ldr	pc, [ip, #2932]!	; 0xb74

00006074 <SDL_DestroyRenderer@plt>:
    6074:	add	ip, pc, #0, 12
    6078:	add	ip, ip, #204800	; 0x32000
    607c:	ldr	pc, [ip, #2924]!	; 0xb6c

00006080 <av_samples_get_buffer_size@plt>:
    6080:	add	ip, pc, #0, 12
    6084:	add	ip, ip, #204800	; 0x32000
    6088:	ldr	pc, [ip, #2916]!	; 0xb64

0000608c <avcodec_get_class@plt>:
    608c:	add	ip, pc, #0, 12
    6090:	add	ip, ip, #204800	; 0x32000
    6094:	ldr	pc, [ip, #2908]!	; 0xb5c

00006098 <vcos_pthreads_map_errno@plt>:
    6098:	add	ip, pc, #0, 12
    609c:	add	ip, ip, #204800	; 0x32000
    60a0:	ldr	pc, [ip, #2900]!	; 0xb54

000060a4 <swr_set_compensation@plt>:
    60a4:	add	ip, pc, #0, 12
    60a8:	add	ip, ip, #204800	; 0x32000
    60ac:	ldr	pc, [ip, #2892]!	; 0xb4c

000060b0 <av_mallocz_array@plt>:
    60b0:	add	ip, pc, #0, 12
    60b4:	add	ip, ip, #204800	; 0x32000
    60b8:	ldr	pc, [ip, #2884]!	; 0xb44

000060bc <SDL_CondWait@plt>:
    60bc:	add	ip, pc, #0, 12
    60c0:	add	ip, ip, #204800	; 0x32000
    60c4:	ldr	pc, [ip, #2876]!	; 0xb3c

000060c8 <av_guess_sample_aspect_ratio@plt>:
    60c8:	add	ip, pc, #0, 12
    60cc:	add	ip, ip, #204800	; 0x32000
    60d0:	ldr	pc, [ip, #2868]!	; 0xb34

000060d4 <raise@plt>:
    60d4:	add	ip, pc, #0, 12
    60d8:	add	ip, ip, #204800	; 0x32000
    60dc:	ldr	pc, [ip, #2860]!	; 0xb2c

000060e0 <av_rdft_end@plt>:
    60e0:	add	ip, pc, #0, 12
    60e4:	add	ip, ip, #204800	; 0x32000
    60e8:	ldr	pc, [ip, #2852]!	; 0xb24

000060ec <av_strdup@plt>:
    60ec:	add	ip, pc, #0, 12
    60f0:	add	ip, ip, #204800	; 0x32000
    60f4:	ldr	pc, [ip, #2844]!	; 0xb1c

000060f8 <av_parse_time@plt>:
    60f8:	add	ip, pc, #0, 12
    60fc:	add	ip, ip, #204800	; 0x32000
    6100:	ldr	pc, [ip, #2836]!	; 0xb14

00006104 <av_buffersink_get_frame_flags@plt>:
    6104:	add	ip, pc, #0, 12
    6108:	add	ip, ip, #204800	; 0x32000
    610c:	ldr	pc, [ip, #2828]!	; 0xb0c

00006110 <avcodec_send_packet@plt>:
    6110:	add	ip, pc, #0, 12
    6114:	add	ip, ip, #204800	; 0x32000
    6118:	ldr	pc, [ip, #2820]!	; 0xb04

0000611c <av_realloc_array@plt>:
    611c:	add	ip, pc, #0, 12
    6120:	add	ip, ip, #204800	; 0x32000
    6124:	ldr	pc, [ip, #2812]!	; 0xafc

00006128 <__cxa_finalize@plt>:
    6128:	add	ip, pc, #0, 12
    612c:	add	ip, ip, #204800	; 0x32000
    6130:	ldr	pc, [ip, #2804]!	; 0xaf4

00006134 <vchi_service_use@plt>:
    6134:	add	ip, pc, #0, 12
    6138:	add	ip, ip, #204800	; 0x32000
    613c:	ldr	pc, [ip, #2796]!	; 0xaec

00006140 <SDL_RenderClear@plt>:
    6140:	add	ip, pc, #0, 12
    6144:	add	ip, ip, #204800	; 0x32000
    6148:	ldr	pc, [ip, #2788]!	; 0xae4

0000614c <SDL_getenv@plt>:
    614c:	add	ip, pc, #0, 12
    6150:	add	ip, ip, #204800	; 0x32000
    6154:	ldr	pc, [ip, #2780]!	; 0xadc

00006158 <av_get_standard_channel_layout@plt>:
    6158:	add	ip, pc, #0, 12
    615c:	add	ip, ip, #204800	; 0x32000
    6160:	ldr	pc, [ip, #2772]!	; 0xad4

00006164 <malloc@plt>:
    6164:	add	ip, pc, #0, 12
    6168:	add	ip, ip, #204800	; 0x32000
    616c:	ldr	pc, [ip, #2764]!	; 0xacc

00006170 <avio_enum_protocols@plt>:
    6170:	add	ip, pc, #0, 12
    6174:	add	ip, ip, #204800	; 0x32000
    6178:	ldr	pc, [ip, #2756]!	; 0xac4

0000617c <av_strlcat@plt>:
    617c:	add	ip, pc, #0, 12
    6180:	add	ip, ip, #204800	; 0x32000
    6184:	ldr	pc, [ip, #2748]!	; 0xabc

00006188 <av_log@plt>:
    6188:	add	ip, pc, #0, 12
    618c:	add	ip, ip, #204800	; 0x32000
    6190:	ldr	pc, [ip, #2740]!	; 0xab4

00006194 <SDL_ShowWindow@plt>:
    6194:	add	ip, pc, #0, 12
    6198:	add	ip, ip, #204800	; 0x32000
    619c:	ldr	pc, [ip, #2732]!	; 0xaac

000061a0 <strlen@plt>:
    61a0:	add	ip, pc, #0, 12
    61a4:	add	ip, ip, #204800	; 0x32000
    61a8:	ldr	pc, [ip, #2724]!	; 0xaa4

000061ac <SDL_DestroyTexture@plt>:
    61ac:	add	ip, pc, #0, 12
    61b0:	add	ip, ip, #204800	; 0x32000
    61b4:	ldr	pc, [ip, #2716]!	; 0xa9c

000061b8 <SDL_SetHint@plt>:
    61b8:	add	ip, pc, #0, 12
    61bc:	add	ip, ip, #204800	; 0x32000
    61c0:	ldr	pc, [ip, #2708]!	; 0xa94

000061c4 <vchi_msg_dequeue@plt>:
    61c4:	add	ip, pc, #0, 12
    61c8:	add	ip, ip, #204800	; 0x32000
    61cc:	ldr	pc, [ip, #2700]!	; 0xa8c

000061d0 <avcodec_receive_frame@plt>:
    61d0:	add	ip, pc, #0, 12
    61d4:	add	ip, ip, #204800	; 0x32000
    61d8:	ldr	pc, [ip, #2692]!	; 0xa84

000061dc <SDL_PushEvent@plt>:
    61dc:	add	ip, pc, #0, 12
    61e0:	add	ip, ip, #204800	; 0x32000
    61e4:	ldr	pc, [ip, #2684]!	; 0xa7c

000061e8 <av_output_audio_device_next@plt>:
    61e8:	add	ip, pc, #0, 12
    61ec:	add	ip, ip, #204800	; 0x32000
    61f0:	ldr	pc, [ip, #2676]!	; 0xa74

000061f4 <av_stream_get_side_data@plt>:
    61f4:	add	ip, pc, #0, 12
    61f8:	add	ip, ip, #204800	; 0x32000
    61fc:	ldr	pc, [ip, #2668]!	; 0xa6c

00006200 <SDL_CreateMutex@plt>:
    6200:	add	ip, pc, #0, 12
    6204:	add	ip, ip, #204800	; 0x32000
    6208:	ldr	pc, [ip, #2660]!	; 0xa64

0000620c <postproc_configuration@plt>:
    620c:	add	ip, pc, #0, 12
    6210:	add	ip, ip, #204800	; 0x32000
    6214:	ldr	pc, [ip, #2652]!	; 0xa5c

00006218 <SDL_MixAudioFormat@plt>:
    6218:	add	ip, pc, #0, 12
    621c:	add	ip, ip, #204800	; 0x32000
    6220:	ldr	pc, [ip, #2644]!	; 0xa54

00006224 <av_opt_find@plt>:
    6224:	add	ip, pc, #0, 12
    6228:	add	ip, ip, #204800	; 0x32000
    622c:	ldr	pc, [ip, #2636]!	; 0xa4c

00006230 <floor@plt>:
    6230:	add	ip, pc, #0, 12
    6234:	add	ip, ip, #204800	; 0x32000
    6238:	ldr	pc, [ip, #2628]!	; 0xa44

0000623c <SDL_SetWindowSize@plt>:
    623c:	add	ip, pc, #0, 12
    6240:	add	ip, ip, #204800	; 0x32000
    6244:	ldr	pc, [ip, #2620]!	; 0xa3c

00006248 <vchi_bulk_queue_receive@plt>:
    6248:	add	ip, pc, #0, 12
    624c:	add	ip, ip, #204800	; 0x32000
    6250:	ldr	pc, [ip, #2612]!	; 0xa34

00006254 <av_bsf_iterate@plt>:
    6254:	add	ip, pc, #0, 12
    6258:	add	ip, ip, #204800	; 0x32000
    625c:	ldr	pc, [ip, #2604]!	; 0xa2c

00006260 <SDL_GetPixelFormatName@plt>:
    6260:	add	ip, pc, #0, 12
    6264:	add	ip, ip, #204800	; 0x32000
    6268:	ldr	pc, [ip, #2596]!	; 0xa24

0000626c <sws_isSupportedOutput@plt>:
    626c:	add	ip, pc, #0, 12
    6270:	add	ip, ip, #204800	; 0x32000
    6274:	ldr	pc, [ip, #2588]!	; 0xa1c

00006278 <fflush@plt>:
    6278:	add	ip, pc, #0, 12
    627c:	add	ip, ip, #204800	; 0x32000
    6280:	ldr	pc, [ip, #2580]!	; 0xa14

00006284 <av_guess_format@plt>:
    6284:	add	ip, pc, #0, 12
    6288:	add	ip, ip, #204800	; 0x32000
    628c:	ldr	pc, [ip, #2572]!	; 0xa0c

00006290 <SDL_UnlockMutex@plt>:
    6290:	add	ip, pc, #0, 12
    6294:	add	ip, ip, #204800	; 0x32000
    6298:	ldr	pc, [ip, #2564]!	; 0xa04

0000629c <av_input_video_device_next@plt>:
    629c:	add	ip, pc, #0, 12
    62a0:	add	ip, ip, #204800	; 0x32000
    62a4:	ldr	pc, [ip, #2556]!	; 0x9fc

000062a8 <av_fast_malloc@plt>:
    62a8:	add	ip, pc, #0, 12
    62ac:	add	ip, ip, #204800	; 0x32000
    62b0:	ldr	pc, [ip, #2548]!	; 0x9f4

000062b4 <av_log_default_callback@plt>:
    62b4:	add	ip, pc, #0, 12
    62b8:	add	ip, ip, #204800	; 0x32000
    62bc:	ldr	pc, [ip, #2540]!	; 0x9ec

000062c0 <avcodec_find_decoder_by_name@plt>:
    62c0:	add	ip, pc, #0, 12
    62c4:	add	ip, ip, #204800	; 0x32000
    62c8:	ldr	pc, [ip, #2532]!	; 0x9e4

000062cc <vcos_thread_create@plt>:
    62cc:	add	ip, pc, #0, 12
    62d0:	add	ip, ip, #204800	; 0x32000
    62d4:	ldr	pc, [ip, #2524]!	; 0x9dc

000062d8 <__snprintf_chk@plt>:
    62d8:	add	ip, pc, #0, 12
    62dc:	add	ip, ip, #204800	; 0x32000
    62e0:	ldr	pc, [ip, #2516]!	; 0x9d4

000062e4 <memset@plt>:
    62e4:	add	ip, pc, #0, 12
    62e8:	add	ip, ip, #204800	; 0x32000
    62ec:	ldr	pc, [ip, #2508]!	; 0x9cc

000062f0 <avcodec_find_encoder_by_name@plt>:
    62f0:	add	ip, pc, #0, 12
    62f4:	add	ip, ip, #204800	; 0x32000
    62f8:	ldr	pc, [ip, #2500]!	; 0x9c4

000062fc <sws_getCachedContext@plt>:
    62fc:	add	ip, pc, #0, 12
    6300:	add	ip, ip, #204800	; 0x32000
    6304:	ldr	pc, [ip, #2492]!	; 0x9bc

00006308 <av_opt_set@plt>:
    6308:	add	ip, pc, #0, 12
    630c:	add	ip, ip, #204800	; 0x32000
    6310:	ldr	pc, [ip, #2484]!	; 0x9b4

00006314 <SDL_SetYUVConversionMode@plt>:
    6314:	add	ip, pc, #0, 12
    6318:	add	ip, ip, #204800	; 0x32000
    631c:	ldr	pc, [ip, #2476]!	; 0x9ac

00006320 <swresample_configuration@plt>:
    6320:	add	ip, pc, #0, 12
    6324:	add	ip, ip, #204800	; 0x32000
    6328:	ldr	pc, [ip, #2468]!	; 0x9a4

0000632c <av_strtod@plt>:
    632c:	add	ip, pc, #0, 12
    6330:	add	ip, ip, #204800	; 0x32000
    6334:	ldr	pc, [ip, #2460]!	; 0x99c

00006338 <avcodec_version@plt>:
    6338:	add	ip, pc, #0, 12
    633c:	add	ip, ip, #204800	; 0x32000
    6340:	ldr	pc, [ip, #2452]!	; 0x994

00006344 <sws_freeContext@plt>:
    6344:	add	ip, pc, #0, 12
    6348:	add	ip, ip, #204800	; 0x32000
    634c:	ldr	pc, [ip, #2444]!	; 0x98c

00006350 <SDL_RenderPresent@plt>:
    6350:	add	ip, pc, #0, 12
    6354:	add	ip, ip, #204800	; 0x32000
    6358:	ldr	pc, [ip, #2436]!	; 0x984

0000635c <swresample_version@plt>:
    635c:	add	ip, pc, #0, 12
    6360:	add	ip, ip, #204800	; 0x32000
    6364:	ldr	pc, [ip, #2428]!	; 0x97c

00006368 <av_find_input_format@plt>:
    6368:	add	ip, pc, #0, 12
    636c:	add	ip, ip, #204800	; 0x32000
    6370:	ldr	pc, [ip, #2420]!	; 0x974

00006374 <__fprintf_chk@plt>:
    6374:	add	ip, pc, #0, 12
    6378:	add	ip, ip, #204800	; 0x32000
    637c:	ldr	pc, [ip, #2412]!	; 0x96c

00006380 <avdevice_configuration@plt>:
    6380:	add	ip, pc, #0, 12
    6384:	add	ip, ip, #204800	; 0x32000
    6388:	ldr	pc, [ip, #2404]!	; 0x964

0000638c <avformat_match_stream_specifier@plt>:
    638c:	add	ip, pc, #0, 12
    6390:	add	ip, ip, #204800	; 0x32000
    6394:	ldr	pc, [ip, #2396]!	; 0x95c

00006398 <SDL_DestroyMutex@plt>:
    6398:	add	ip, pc, #0, 12
    639c:	add	ip, ip, #204800	; 0x32000
    63a0:	ldr	pc, [ip, #2388]!	; 0x954

000063a4 <SDL_GetError@plt>:
    63a4:	add	ip, pc, #0, 12
    63a8:	add	ip, ip, #204800	; 0x32000
    63ac:	ldr	pc, [ip, #2380]!	; 0x94c

000063b0 <lrintf@plt>:
    63b0:	add	ip, pc, #0, 12
    63b4:	add	ip, ip, #204800	; 0x32000
    63b8:	ldr	pc, [ip, #2372]!	; 0x944

000063bc <abort@plt>:
    63bc:	add	ip, pc, #0, 12
    63c0:	add	ip, ip, #204800	; 0x32000
    63c4:	ldr	pc, [ip, #2364]!	; 0x93c

000063c8 <SDL_CreateCond@plt>:
    63c8:	add	ip, pc, #0, 12
    63cc:	add	ip, ip, #204800	; 0x32000
    63d0:	ldr	pc, [ip, #2356]!	; 0x934

000063d4 <SDL_RenderFillRect@plt>:
    63d4:	add	ip, pc, #0, 12
    63d8:	add	ip, ip, #204800	; 0x32000
    63dc:	ldr	pc, [ip, #2348]!	; 0x92c

000063e0 <avfilter_get_by_name@plt>:
    63e0:	add	ip, pc, #0, 12
    63e4:	add	ip, ip, #204800	; 0x32000
    63e8:	ldr	pc, [ip, #2340]!	; 0x924

000063ec <av_codec_is_encoder@plt>:
    63ec:	add	ip, pc, #0, 12
    63f0:	add	ip, ip, #204800	; 0x32000
    63f4:	ldr	pc, [ip, #2332]!	; 0x91c

000063f8 <avcodec_descriptor_get_by_name@plt>:
    63f8:	add	ip, pc, #0, 12
    63fc:	add	ip, ip, #204800	; 0x32000
    6400:	ldr	pc, [ip, #2324]!	; 0x914

00006404 <av_strlcpy@plt>:
    6404:	add	ip, pc, #0, 12
    6408:	add	ip, ip, #204800	; 0x32000
    640c:	ldr	pc, [ip, #2316]!	; 0x90c

00006410 <avresample_version@plt>:
    6410:	add	ip, pc, #0, 12
    6414:	add	ip, ip, #204800	; 0x32000
    6418:	ldr	pc, [ip, #2308]!	; 0x904

0000641c <av_codec_next@plt>:
    641c:	add	ip, pc, #0, 12
    6420:	add	ip, ip, #204800	; 0x32000
    6424:	ldr	pc, [ip, #2300]!	; 0x8fc

00006428 <av_parse_cpu_caps@plt>:
    6428:	add	ip, pc, #0, 12
    642c:	add	ip, ip, #204800	; 0x32000
    6430:	ldr	pc, [ip, #2292]!	; 0x8f4

00006434 <av_force_cpu_flags@plt>:
    6434:	add	ip, pc, #0, 12
    6438:	add	ip, ip, #204800	; 0x32000
    643c:	ldr	pc, [ip, #2284]!	; 0x8ec

00006440 <av_bprint_finalize@plt>:
    6440:	add	ip, pc, #0, 12
    6444:	add	ip, ip, #204800	; 0x32000
    6448:	ldr	pc, [ip, #2276]!	; 0x8e4

0000644c <pow@plt>:
    644c:	add	ip, pc, #0, 12
    6450:	add	ip, ip, #204800	; 0x32000
    6454:	ldr	pc, [ip, #2268]!	; 0x8dc

00006458 <avcodec_find_decoder@plt>:
    6458:	add	ip, pc, #0, 12
    645c:	add	ip, ip, #204800	; 0x32000
    6460:	ldr	pc, [ip, #2260]!	; 0x8d4

00006464 <avfilter_graph_create_filter@plt>:
    6464:	add	ip, pc, #0, 12
    6468:	add	ip, ip, #204800	; 0x32000
    646c:	ldr	pc, [ip, #2252]!	; 0x8cc

00006470 <avfilter_pad_count@plt>:
    6470:	add	ip, pc, #0, 12
    6474:	add	ip, ip, #204800	; 0x32000
    6478:	ldr	pc, [ip, #2244]!	; 0x8c4

0000647c <avformat_version@plt>:
    647c:	add	ip, pc, #0, 12
    6480:	add	ip, ip, #204800	; 0x32000
    6484:	ldr	pc, [ip, #2236]!	; 0x8bc

00006488 <avformat_alloc_context@plt>:
    6488:	add	ip, pc, #0, 12
    648c:	add	ip, ip, #204800	; 0x32000
    6490:	ldr	pc, [ip, #2228]!	; 0x8b4

00006494 <av_log_set_flags@plt>:
    6494:	add	ip, pc, #0, 12
    6498:	add	ip, ip, #204800	; 0x32000
    649c:	ldr	pc, [ip, #2220]!	; 0x8ac

000064a0 <av_guess_frame_rate@plt>:
    64a0:	add	ip, pc, #0, 12
    64a4:	add	ip, ip, #204800	; 0x32000
    64a8:	ldr	pc, [ip, #2212]!	; 0x8a4

000064ac <avcodec_decode_subtitle2@plt>:
    64ac:	add	ip, pc, #0, 12
    64b0:	add	ip, ip, #204800	; 0x32000
    64b4:	ldr	pc, [ip, #2204]!	; 0x89c

000064b8 <av_find_program_from_stream@plt>:
    64b8:	add	ip, pc, #0, 12
    64bc:	add	ip, ip, #204800	; 0x32000
    64c0:	ldr	pc, [ip, #2196]!	; 0x894

000064c4 <getc@plt>:
    64c4:	add	ip, pc, #0, 12
    64c8:	add	ip, ip, #204800	; 0x32000
    64cc:	ldr	pc, [ip, #2188]!	; 0x88c

000064d0 <av_get_sample_fmt_name@plt>:
    64d0:	add	ip, pc, #0, 12
    64d4:	add	ip, ip, #204800	; 0x32000
    64d8:	ldr	pc, [ip, #2180]!	; 0x884

000064dc <sws_get_class@plt>:
    64dc:	add	ip, pc, #0, 12
    64e0:	add	ip, ip, #204800	; 0x32000
    64e4:	ldr	pc, [ip, #2172]!	; 0x87c

000064e8 <SDL_SetWindowFullscreen@plt>:
    64e8:	add	ip, pc, #0, 12
    64ec:	add	ip, ip, #204800	; 0x32000
    64f0:	ldr	pc, [ip, #2164]!	; 0x874

000064f4 <avfilter_graph_alloc@plt>:
    64f4:	add	ip, pc, #0, 12
    64f8:	add	ip, ip, #204800	; 0x32000
    64fc:	ldr	pc, [ip, #2156]!	; 0x86c

00006500 <av_display_rotation_get@plt>:
    6500:	add	ip, pc, #0, 12
    6504:	add	ip, ip, #204800	; 0x32000
    6508:	ldr	pc, [ip, #2148]!	; 0x864

0000650c <SDL_SetWindowTitle@plt>:
    650c:	add	ip, pc, #0, 12
    6510:	add	ip, ip, #204800	; 0x32000
    6514:	ldr	pc, [ip, #2140]!	; 0x85c

00006518 <av_packet_move_ref@plt>:
    6518:	add	ip, pc, #0, 12
    651c:	add	ip, ip, #204800	; 0x32000
    6520:	ldr	pc, [ip, #2132]!	; 0x854

00006524 <sem_getvalue@plt>:
    6524:	add	ip, pc, #0, 12
    6528:	add	ip, ip, #204800	; 0x32000
    652c:	ldr	pc, [ip, #2124]!	; 0x84c

00006530 <SDL_PumpEvents@plt>:
    6530:	add	ip, pc, #0, 12
    6534:	add	ip, ip, #204800	; 0x32000
    6538:	ldr	pc, [ip, #2116]!	; 0x844

0000653c <avdevice_register_all@plt>:
    653c:	add	ip, pc, #0, 12
    6540:	add	ip, ip, #204800	; 0x32000
    6544:	ldr	pc, [ip, #2108]!	; 0x83c

00006548 <postproc_version@plt>:
    6548:	add	ip, pc, #0, 12
    654c:	add	ip, ip, #204800	; 0x32000
    6550:	ldr	pc, [ip, #2100]!	; 0x834

00006554 <strncmp@plt>:
    6554:	add	ip, pc, #0, 12
    6558:	add	ip, ip, #204800	; 0x32000
    655c:	ldr	pc, [ip, #2092]!	; 0x82c

00006560 <av_opt_set_bin@plt>:
    6560:	add	ip, pc, #0, 12
    6564:	add	ip, ip, #204800	; 0x32000
    6568:	ldr	pc, [ip, #2084]!	; 0x824

0000656c <avformat_configuration@plt>:
    656c:	add	ip, pc, #0, 12
    6570:	add	ip, ip, #204800	; 0x32000
    6574:	ldr	pc, [ip, #2076]!	; 0x81c

00006578 <avformat_seek_file@plt>:
    6578:	add	ip, pc, #0, 12
    657c:	add	ip, ip, #204800	; 0x32000
    6580:	ldr	pc, [ip, #2068]!	; 0x814

00006584 <SDL_PauseAudioDevice@plt>:
    6584:	add	ip, pc, #0, 12
    6588:	add	ip, ip, #204800	; 0x32000
    658c:	ldr	pc, [ip, #2060]!	; 0x80c

00006590 <av_get_known_color_name@plt>:
    6590:	add	ip, pc, #0, 12
    6594:	add	ip, ip, #204800	; 0x32000
    6598:	ldr	pc, [ip, #2052]!	; 0x804

0000659c <fputc@plt>:
    659c:	add	ip, pc, #0, 12
    65a0:	add	ip, ip, #204800	; 0x32000
    65a4:	ldr	pc, [ip, #2044]!	; 0x7fc

000065a8 <av_compare_ts@plt>:
    65a8:	add	ip, pc, #0, 12
    65ac:	add	ip, ip, #204800	; 0x32000
    65b0:	ldr	pc, [ip, #2036]!	; 0x7f4

000065b4 <av_filter_iterate@plt>:
    65b4:	add	ip, pc, #0, 12
    65b8:	add	ip, ip, #204800	; 0x32000
    65bc:	ldr	pc, [ip, #2028]!	; 0x7ec

000065c0 <av_dump_format@plt>:
    65c0:	add	ip, pc, #0, 12
    65c4:	add	ip, ip, #204800	; 0x32000
    65c8:	ldr	pc, [ip, #2020]!	; 0x7e4

000065cc <swscale_configuration@plt>:
    65cc:	add	ip, pc, #0, 12
    65d0:	add	ip, ip, #204800	; 0x32000
    65d4:	ldr	pc, [ip, #2012]!	; 0x7dc

000065d8 <SDL_UnlockTexture@plt>:
    65d8:	add	ip, pc, #0, 12
    65dc:	add	ip, ip, #204800	; 0x32000
    65e0:	ldr	pc, [ip, #2004]!	; 0x7d4

000065e4 <avformat_get_class@plt>:
    65e4:	add	ip, pc, #0, 12
    65e8:	add	ip, ip, #204800	; 0x32000
    65ec:	ldr	pc, [ip, #1996]!	; 0x7cc

000065f0 <av_gettime_relative@plt>:
    65f0:	add	ip, pc, #0, 12
    65f4:	add	ip, ip, #204800	; 0x32000
    65f8:	ldr	pc, [ip, #1988]!	; 0x7c4

000065fc <vcos_log_register@plt>:
    65fc:	add	ip, pc, #0, 12
    6600:	add	ip, ip, #204800	; 0x32000
    6604:	ldr	pc, [ip, #1980]!	; 0x7bc

00006608 <__libc_start_main@plt>:
    6608:	add	ip, pc, #0, 12
    660c:	add	ip, ip, #204800	; 0x32000
    6610:	ldr	pc, [ip, #1972]!	; 0x7b4

00006614 <__gmon_start__@plt>:
    6614:	add	ip, pc, #0, 12
    6618:	add	ip, ip, #204800	; 0x32000
    661c:	ldr	pc, [ip, #1964]!	; 0x7ac

00006620 <SDL_CreateRenderer@plt>:
    6620:	add	ip, pc, #0, 12
    6624:	add	ip, ip, #204800	; 0x32000
    6628:	ldr	pc, [ip, #1956]!	; 0x7a4

0000662c <strchr@plt>:
    662c:	add	ip, pc, #0, 12
    6630:	add	ip, ip, #204800	; 0x32000
    6634:	ldr	pc, [ip, #1948]!	; 0x79c

00006638 <vcos_thread_attr_init@plt>:
    6638:	add	ip, pc, #0, 12
    663c:	add	ip, ip, #204800	; 0x32000
    6640:	ldr	pc, [ip, #1940]!	; 0x794

00006644 <avcodec_flush_buffers@plt>:
    6644:	add	ip, pc, #0, 12
    6648:	add	ip, ip, #204800	; 0x32000
    664c:	ldr	pc, [ip, #1932]!	; 0x78c

00006650 <__sysv_signal@plt>:
    6650:	add	ip, pc, #0, 12
    6654:	add	ip, ip, #204800	; 0x32000
    6658:	ldr	pc, [ip, #1924]!	; 0x784

0000665c <av_frame_alloc@plt>:
    665c:	add	ip, pc, #0, 12
    6660:	add	ip, ip, #204800	; 0x32000
    6664:	ldr	pc, [ip, #1916]!	; 0x77c

00006668 <av_get_bytes_per_sample@plt>:
    6668:	add	ip, pc, #0, 12
    666c:	add	ip, ip, #204800	; 0x32000
    6670:	ldr	pc, [ip, #1908]!	; 0x774

00006674 <avformat_open_input@plt>:
    6674:	add	ip, pc, #0, 12
    6678:	add	ip, ip, #204800	; 0x32000
    667c:	ldr	pc, [ip, #1900]!	; 0x76c

00006680 <swr_free@plt>:
    6680:	add	ip, pc, #0, 12
    6684:	add	ip, ip, #204800	; 0x32000
    6688:	ldr	pc, [ip, #1892]!	; 0x764

0000668c <free@plt>:
    668c:	add	ip, pc, #0, 12
    6690:	add	ip, ip, #204800	; 0x32000
    6694:	ldr	pc, [ip, #1884]!	; 0x75c

00006698 <lrint@plt>:
    6698:	add	ip, pc, #0, 12
    669c:	add	ip, ip, #204800	; 0x32000
    66a0:	ldr	pc, [ip, #1876]!	; 0x754

000066a4 <SDL_SetWindowPosition@plt>:
    66a4:	add	ip, pc, #0, 12
    66a8:	add	ip, ip, #204800	; 0x32000
    66ac:	ldr	pc, [ip, #1868]!	; 0x74c

000066b0 <av_strerror@plt>:
    66b0:	add	ip, pc, #0, 12
    66b4:	add	ip, ip, #204800	; 0x32000
    66b8:	ldr	pc, [ip, #1860]!	; 0x744

000066bc <avcodec_open2@plt>:
    66bc:	add	ip, pc, #0, 12
    66c0:	add	ip, ip, #204800	; 0x32000
    66c4:	ldr	pc, [ip, #1852]!	; 0x73c

000066c8 <sem_post@plt>:
    66c8:	add	ip, pc, #0, 12
    66cc:	add	ip, ip, #204800	; 0x32000
    66d0:	ldr	pc, [ip, #1844]!	; 0x734

000066d4 <av_muxer_iterate@plt>:
    66d4:	add	ip, pc, #0, 12
    66d8:	add	ip, ip, #204800	; 0x32000
    66dc:	ldr	pc, [ip, #1836]!	; 0x72c

000066e0 <av_frame_move_ref@plt>:
    66e0:	add	ip, pc, #0, 12
    66e4:	add	ip, ip, #204800	; 0x32000
    66e8:	ldr	pc, [ip, #1828]!	; 0x724

000066ec <avdevice_list_input_sources@plt>:
    66ec:	add	ip, pc, #0, 12
    66f0:	add	ip, ip, #204800	; 0x32000
    66f4:	ldr	pc, [ip, #1820]!	; 0x71c

000066f8 <memcpy@plt>:
    66f8:	add	ip, pc, #0, 12
    66fc:	add	ip, ip, #204800	; 0x32000
    6700:	ldr	pc, [ip, #1812]!	; 0x714

00006704 <av_dict_set@plt>:
    6704:	add	ip, pc, #0, 12
    6708:	add	ip, ip, #204800	; 0x32000
    670c:	ldr	pc, [ip, #1804]!	; 0x70c

00006710 <av_buffersink_get_sample_rate@plt>:
    6710:	add	ip, pc, #0, 12
    6714:	add	ip, ip, #204800	; 0x32000
    6718:	ldr	pc, [ip, #1796]!	; 0x704

0000671c <SDL_DestroyWindow@plt>:
    671c:	add	ip, pc, #0, 12
    6720:	add	ip, ip, #204800	; 0x32000
    6724:	ldr	pc, [ip, #1788]!	; 0x6fc

00006728 <swr_init@plt>:
    6728:	add	ip, pc, #0, 12
    672c:	add	ip, ip, #204800	; 0x32000
    6730:	ldr	pc, [ip, #1780]!	; 0x6f4

00006734 <av_malloc_array@plt>:
    6734:	add	ip, pc, #0, 12
    6738:	add	ip, ip, #204800	; 0x32000
    673c:	ldr	pc, [ip, #1772]!	; 0x6ec

00006740 <avfilter_graph_parse_ptr@plt>:
    6740:	add	ip, pc, #0, 12
    6744:	add	ip, ip, #204800	; 0x32000
    6748:	ldr	pc, [ip, #1764]!	; 0x6e4

0000674c <vchi_bulk_queue_transmit@plt>:
    674c:	add	ip, pc, #0, 12
    6750:	add	ip, ip, #204800	; 0x32000
    6754:	ldr	pc, [ip, #1756]!	; 0x6dc

00006758 <av_buffersink_get_time_base@plt>:
    6758:	add	ip, pc, #0, 12
    675c:	add	ip, ip, #204800	; 0x32000
    6760:	ldr	pc, [ip, #1748]!	; 0x6d4

00006764 <avformat_network_deinit@plt>:
    6764:	add	ip, pc, #0, 12
    6768:	add	ip, ip, #204800	; 0x32000
    676c:	ldr	pc, [ip, #1740]!	; 0x6cc

00006770 <SDL_CondWaitTimeout@plt>:
    6770:	add	ip, pc, #0, 12
    6774:	add	ip, ip, #204800	; 0x32000
    6778:	ldr	pc, [ip, #1732]!	; 0x6c4

0000677c <SDL_CreateThread@plt>:
    677c:	add	ip, pc, #0, 12
    6780:	add	ip, ip, #204800	; 0x32000
    6784:	ldr	pc, [ip, #1724]!	; 0x6bc

00006788 <avformat_find_stream_info@plt>:
    6788:	add	ip, pc, #0, 12
    678c:	add	ip, ip, #204800	; 0x32000
    6790:	ldr	pc, [ip, #1716]!	; 0x6b4

00006794 <av_log_format_line@plt>:
    6794:	add	ip, pc, #0, 12
    6798:	add	ip, ip, #204800	; 0x32000
    679c:	ldr	pc, [ip, #1708]!	; 0x6ac

000067a0 <av_read_frame@plt>:
    67a0:	add	ip, pc, #0, 12
    67a4:	add	ip, ip, #204800	; 0x32000
    67a8:	ldr	pc, [ip, #1700]!	; 0x6a4

000067ac <av_bprintf@plt>:
    67ac:	add	ip, pc, #0, 12
    67b0:	add	ip, ip, #204800	; 0x32000
    67b4:	ldr	pc, [ip, #1692]!	; 0x69c

000067b8 <avfilter_graph_config@plt>:
    67b8:	add	ip, pc, #0, 12
    67bc:	add	ip, ip, #204800	; 0x32000
    67c0:	ldr	pc, [ip, #1684]!	; 0x694

000067c4 <SDL_UpdateYUVTexture@plt>:
    67c4:	add	ip, pc, #0, 12
    67c8:	add	ip, ip, #204800	; 0x32000
    67cc:	ldr	pc, [ip, #1676]!	; 0x68c

000067d0 <av_dict_parse_string@plt>:
    67d0:	add	ip, pc, #0, 12
    67d4:	add	ip, ip, #204800	; 0x32000
    67d8:	ldr	pc, [ip, #1668]!	; 0x684

000067dc <av_input_audio_device_next@plt>:
    67dc:	add	ip, pc, #0, 12
    67e0:	add	ip, ip, #204800	; 0x32000
    67e4:	ldr	pc, [ip, #1660]!	; 0x67c

000067e8 <sem_wait@plt>:
    67e8:	add	ip, pc, #0, 12
    67ec:	add	ip, ip, #204800	; 0x32000
    67f0:	ldr	pc, [ip, #1652]!	; 0x674

000067f4 <av_log_get_level@plt>:
    67f4:	add	ip, pc, #0, 12
    67f8:	add	ip, ip, #204800	; 0x32000
    67fc:	ldr	pc, [ip, #1644]!	; 0x66c

00006800 <av_codec_is_decoder@plt>:
    6800:	add	ip, pc, #0, 12
    6804:	add	ip, ip, #204800	; 0x32000
    6808:	ldr	pc, [ip, #1636]!	; 0x664

0000680c <localtime@plt>:
    680c:	add	ip, pc, #0, 12
    6810:	add	ip, ip, #204800	; 0x32000
    6814:	ldr	pc, [ip, #1628]!	; 0x65c

00006818 <av_bprint_chars@plt>:
    6818:	add	ip, pc, #0, 12
    681c:	add	ip, ip, #204800	; 0x32000
    6820:	ldr	pc, [ip, #1620]!	; 0x654

00006824 <avdevice_version@plt>:
    6824:	add	ip, pc, #0, 12
    6828:	add	ip, ip, #204800	; 0x32000
    682c:	ldr	pc, [ip, #1612]!	; 0x64c

00006830 <vcos_generic_mem_calloc@plt>:
    6830:	add	ip, pc, #0, 12
    6834:	add	ip, ip, #204800	; 0x32000
    6838:	ldr	pc, [ip, #1604]!	; 0x644

0000683c <avformat_close_input@plt>:
    683c:	add	ip, pc, #0, 12
    6840:	add	ip, ip, #204800	; 0x32000
    6844:	ldr	pc, [ip, #1596]!	; 0x63c

00006848 <vchiq_release_message@plt>:
    6848:	add	ip, pc, #0, 12
    684c:	add	ip, ip, #204800	; 0x32000
    6850:	ldr	pc, [ip, #1588]!	; 0x634

00006854 <av_opt_child_class_next@plt>:
    6854:	add	ip, pc, #0, 12
    6858:	add	ip, ip, #204800	; 0x32000
    685c:	ldr	pc, [ip, #1580]!	; 0x62c

00006860 <SDL_QueryTexture@plt>:
    6860:	add	ip, pc, #0, 12
    6864:	add	ip, ip, #204800	; 0x32000
    6868:	ldr	pc, [ip, #1572]!	; 0x624

0000686c <av_init_packet@plt>:
    686c:	add	ip, pc, #0, 12
    6870:	add	ip, ip, #204800	; 0x32000
    6874:	ldr	pc, [ip, #1564]!	; 0x61c

00006878 <av_dict_get@plt>:
    6878:	add	ip, pc, #0, 12
    687c:	add	ip, ip, #204800	; 0x32000
    6880:	ldr	pc, [ip, #1556]!	; 0x614

00006884 <av_rescale_q@plt>:
    6884:	add	ip, pc, #0, 12
    6888:	add	ip, ip, #204800	; 0x32000
    688c:	ldr	pc, [ip, #1548]!	; 0x60c

00006890 <__vfprintf_chk@plt>:
    6890:	add	ip, pc, #0, 12
    6894:	add	ip, ip, #204800	; 0x32000
    6898:	ldr	pc, [ip, #1540]!	; 0x604

0000689c <vchi_service_open@plt>:
    689c:	add	ip, pc, #0, 12
    68a0:	add	ip, ip, #204800	; 0x32000
    68a4:	ldr	pc, [ip, #1532]!	; 0x5fc

000068a8 <av_max_alloc@plt>:
    68a8:	add	ip, pc, #0, 12
    68ac:	add	ip, ip, #204800	; 0x32000
    68b0:	ldr	pc, [ip, #1524]!	; 0x5f4

000068b4 <avdevice_list_output_sinks@plt>:
    68b4:	add	ip, pc, #0, 12
    68b8:	add	ip, ip, #204800	; 0x32000
    68bc:	ldr	pc, [ip, #1516]!	; 0x5ec

000068c0 <av_read_play@plt>:
    68c0:	add	ip, pc, #0, 12
    68c4:	add	ip, ip, #204800	; 0x32000
    68c8:	ldr	pc, [ip, #1508]!	; 0x5e4

000068cc <av_buffersrc_add_frame@plt>:
    68cc:	add	ip, pc, #0, 12
    68d0:	add	ip, ip, #204800	; 0x32000
    68d4:	ldr	pc, [ip, #1500]!	; 0x5dc

000068d8 <pthread_mutex_destroy@plt>:
    68d8:	add	ip, pc, #0, 12
    68dc:	add	ip, ip, #204800	; 0x32000
    68e0:	ldr	pc, [ip, #1492]!	; 0x5d4

000068e4 <av_get_channel_layout_nb_channels@plt>:
    68e4:	add	ip, pc, #0, 12
    68e8:	add	ip, ip, #204800	; 0x32000
    68ec:	ldr	pc, [ip, #1484]!	; 0x5cc

000068f0 <SDL_ShowCursor@plt>:
    68f0:	add	ip, pc, #0, 12
    68f4:	add	ip, ip, #204800	; 0x32000
    68f8:	ldr	pc, [ip, #1476]!	; 0x5c4

000068fc <hypot@plt>:
    68fc:	add	ip, pc, #0, 12
    6900:	add	ip, ip, #204800	; 0x32000
    6904:	ldr	pc, [ip, #1468]!	; 0x5bc

00006908 <round@plt>:
    6908:	add	ip, pc, #0, 12
    690c:	add	ip, ip, #204800	; 0x32000
    6910:	ldr	pc, [ip, #1460]!	; 0x5b4

00006914 <SDL_RenderCopyEx@plt>:
    6914:	add	ip, pc, #0, 12
    6918:	add	ip, ip, #204800	; 0x32000
    691c:	ldr	pc, [ip, #1452]!	; 0x5ac

00006920 <SDL_DestroyCond@plt>:
    6920:	add	ip, pc, #0, 12
    6924:	add	ip, ip, #204800	; 0x32000
    6928:	ldr	pc, [ip, #1444]!	; 0x5a4

0000692c <SDL_OpenAudioDevice@plt>:
    692c:	add	ip, pc, #0, 12
    6930:	add	ip, ip, #204800	; 0x32000
    6934:	ldr	pc, [ip, #1436]!	; 0x59c

00006938 <swscale_version@plt>:
    6938:	add	ip, pc, #0, 12
    693c:	add	ip, ip, #204800	; 0x32000
    6940:	ldr	pc, [ip, #1428]!	; 0x594

00006944 <perror@plt>:
    6944:	add	ip, pc, #0, 12
    6948:	add	ip, ip, #204800	; 0x32000
    694c:	ldr	pc, [ip, #1420]!	; 0x58c

00006950 <av_match_name@plt>:
    6950:	add	ip, pc, #0, 12
    6954:	add	ip, ip, #204800	; 0x32000
    6958:	ldr	pc, [ip, #1412]!	; 0x584

0000695c <strcmp@plt>:
    695c:	add	ip, pc, #0, 12
    6960:	add	ip, ip, #204800	; 0x32000
    6964:	ldr	pc, [ip, #1404]!	; 0x57c

00006968 <swr_alloc_set_opts@plt>:
    6968:	add	ip, pc, #0, 12
    696c:	add	ip, ip, #204800	; 0x32000
    6970:	ldr	pc, [ip, #1396]!	; 0x574

00006974 <av_format_inject_global_side_data@plt>:
    6974:	add	ip, pc, #0, 12
    6978:	add	ip, ip, #204800	; 0x32000
    697c:	ldr	pc, [ip, #1388]!	; 0x56c

00006980 <SDL_CloseAudioDevice@plt>:
    6980:	add	ip, pc, #0, 12
    6984:	add	ip, ip, #204800	; 0x32000
    6988:	ldr	pc, [ip, #1380]!	; 0x564

0000698c <vcos_thread_join@plt>:
    698c:	add	ip, pc, #0, 12
    6990:	add	ip, ip, #204800	; 0x32000
    6994:	ldr	pc, [ip, #1372]!	; 0x55c

00006998 <avcodec_free_context@plt>:
    6998:	add	ip, pc, #0, 12
    699c:	add	ip, ip, #204800	; 0x32000
    69a0:	ldr	pc, [ip, #1364]!	; 0x554

000069a4 <avcodec_get_hw_config@plt>:
    69a4:	add	ip, pc, #0, 12
    69a8:	add	ip, ip, #204800	; 0x32000
    69ac:	ldr	pc, [ip, #1356]!	; 0x54c

000069b0 <av_free@plt>:
    69b0:	add	ip, pc, #0, 12
    69b4:	add	ip, ip, #204800	; 0x32000
    69b8:	ldr	pc, [ip, #1348]!	; 0x544

000069bc <SDL_SetRenderDrawColor@plt>:
    69bc:	add	ip, pc, #0, 12
    69c0:	add	ip, ip, #204800	; 0x32000
    69c4:	ldr	pc, [ip, #1340]!	; 0x53c

000069c8 <getenv@plt>:
    69c8:	add	ip, pc, #0, 12
    69cc:	add	ip, ip, #204800	; 0x32000
    69d0:	ldr	pc, [ip, #1332]!	; 0x534

000069d4 <avcodec_alloc_context3@plt>:
    69d4:	add	ip, pc, #0, 12
    69d8:	add	ip, ip, #204800	; 0x32000
    69dc:	ldr	pc, [ip, #1324]!	; 0x52c

000069e0 <av_log_get_flags@plt>:
    69e0:	add	ip, pc, #0, 12
    69e4:	add	ip, ip, #204800	; 0x32000
    69e8:	ldr	pc, [ip, #1316]!	; 0x524

000069ec <time@plt>:
    69ec:	add	ip, pc, #0, 12
    69f0:	add	ip, ip, #204800	; 0x32000
    69f4:	ldr	pc, [ip, #1308]!	; 0x51c

000069f8 <avcodec_configuration@plt>:
    69f8:	add	ip, pc, #0, 12
    69fc:	add	ip, ip, #204800	; 0x32000
    6a00:	ldr	pc, [ip, #1300]!	; 0x514

00006a04 <avcodec_descriptor_get@plt>:
    6a04:	add	ip, pc, #0, 12
    6a08:	add	ip, ip, #204800	; 0x32000
    6a0c:	ldr	pc, [ip, #1292]!	; 0x50c

00006a10 <av_opt_set_int@plt>:
    6a10:	add	ip, pc, #0, 12
    6a14:	add	ip, ip, #204800	; 0x32000
    6a18:	ldr	pc, [ip, #1284]!	; 0x504

00006a1c <__printf_chk@plt>:
    6a1c:	add	ip, pc, #0, 12
    6a20:	add	ip, ip, #204800	; 0x32000
    6a24:	ldr	pc, [ip, #1276]!	; 0x4fc

00006a28 <av_packet_unref@plt>:
    6a28:	add	ip, pc, #0, 12
    6a2c:	add	ip, ip, #204800	; 0x32000
    6a30:	ldr	pc, [ip, #1268]!	; 0x4f4

00006a34 <av_output_video_device_next@plt>:
    6a34:	add	ip, pc, #0, 12
    6a38:	add	ip, ip, #204800	; 0x32000
    6a3c:	ldr	pc, [ip, #1260]!	; 0x4ec

00006a40 <sws_scale@plt>:
    6a40:	add	ip, pc, #0, 12
    6a44:	add	ip, ip, #204800	; 0x32000
    6a48:	ldr	pc, [ip, #1252]!	; 0x4e4

00006a4c <swr_alloc@plt>:
    6a4c:	add	ip, pc, #0, 12
    6a50:	add	ip, ip, #204800	; 0x32000
    6a54:	ldr	pc, [ip, #1244]!	; 0x4dc

00006a58 <av_mallocz@plt>:
    6a58:	add	ip, pc, #0, 12
    6a5c:	add	ip, ip, #204800	; 0x32000
    6a60:	ldr	pc, [ip, #1236]!	; 0x4d4

00006a64 <vchiq_connect@plt>:
    6a64:	add	ip, pc, #0, 12
    6a68:	add	ip, ip, #204800	; 0x32000
    6a6c:	ldr	pc, [ip, #1228]!	; 0x4cc

00006a70 <avfilter_inout_alloc@plt>:
    6a70:	add	ip, pc, #0, 12
    6a74:	add	ip, ip, #204800	; 0x32000
    6a78:	ldr	pc, [ip, #1220]!	; 0x4c4

00006a7c <av_get_pix_fmt_name@plt>:
    6a7c:	add	ip, pc, #0, 12
    6a80:	add	ip, ip, #204800	; 0x32000
    6a84:	ldr	pc, [ip, #1212]!	; 0x4bc

00006a88 <av_pix_fmt_desc_next@plt>:
    6a88:	add	ip, pc, #0, 12
    6a8c:	add	ip, ip, #204800	; 0x32000
    6a90:	ldr	pc, [ip, #1204]!	; 0x4b4

00006a94 <sem_init@plt>:
    6a94:	add	ip, pc, #0, 12
    6a98:	add	ip, ip, #204800	; 0x32000
    6a9c:	ldr	pc, [ip, #1196]!	; 0x4ac

00006aa0 <av_get_packed_sample_fmt@plt>:
    6aa0:	add	ip, pc, #0, 12
    6aa4:	add	ip, ip, #204800	; 0x32000
    6aa8:	ldr	pc, [ip, #1188]!	; 0x4a4

00006aac <strtol@plt>:
    6aac:	add	ip, pc, #0, 12
    6ab0:	add	ip, ip, #204800	; 0x32000
    6ab4:	ldr	pc, [ip, #1180]!	; 0x49c

00006ab8 <av_get_sample_fmt_string@plt>:
    6ab8:	add	ip, pc, #0, 12
    6abc:	add	ip, ip, #204800	; 0x32000
    6ac0:	ldr	pc, [ip, #1172]!	; 0x494

00006ac4 <SDL_LockTexture@plt>:
    6ac4:	add	ip, pc, #0, 12
    6ac8:	add	ip, ip, #204800	; 0x32000
    6acc:	ldr	pc, [ip, #1164]!	; 0x48c

00006ad0 <av_rdft_calc@plt>:
    6ad0:	add	ip, pc, #0, 12
    6ad4:	add	ip, ip, #204800	; 0x32000
    6ad8:	ldr	pc, [ip, #1156]!	; 0x484

00006adc <exit@plt>:
    6adc:	add	ip, pc, #0, 12
    6ae0:	add	ip, ip, #204800	; 0x32000
    6ae4:	ldr	pc, [ip, #1148]!	; 0x47c

00006ae8 <av_opt_show2@plt>:
    6ae8:	add	ip, pc, #0, 12
    6aec:	add	ip, ip, #204800	; 0x32000
    6af0:	ldr	pc, [ip, #1140]!	; 0x474

00006af4 <av_get_media_type_string@plt>:
    6af4:	add	ip, pc, #0, 12
    6af8:	add	ip, ip, #204800	; 0x32000
    6afc:	ldr	pc, [ip, #1132]!	; 0x46c

00006b00 <vcos_once@plt>:
    6b00:	add	ip, pc, #0, 12
    6b04:	add	ip, ip, #204800	; 0x32000
    6b08:	ldr	pc, [ip, #1124]!	; 0x464

00006b0c <av_log2@plt>:
    6b0c:	add	ip, pc, #0, 12
    6b10:	add	ip, ip, #204800	; 0x32000
    6b14:	ldr	pc, [ip, #1116]!	; 0x45c

00006b18 <av_strlcatf@plt>:
    6b18:	add	ip, pc, #0, 12
    6b1c:	add	ip, ip, #204800	; 0x32000
    6b20:	ldr	pc, [ip, #1108]!	; 0x454

00006b24 <av_get_default_channel_layout@plt>:
    6b24:	add	ip, pc, #0, 12
    6b28:	add	ip, ip, #204800	; 0x32000
    6b2c:	ldr	pc, [ip, #1100]!	; 0x44c

00006b30 <avcodec_parameters_to_context@plt>:
    6b30:	add	ip, pc, #0, 12
    6b34:	add	ip, ip, #204800	; 0x32000
    6b38:	ldr	pc, [ip, #1092]!	; 0x444

00006b3c <SDL_LockMutex@plt>:
    6b3c:	add	ip, pc, #0, 12
    6b40:	add	ip, ip, #204800	; 0x32000
    6b44:	ldr	pc, [ip, #1084]!	; 0x43c

00006b48 <log@plt>:
    6b48:	add	ip, pc, #0, 12
    6b4c:	add	ip, ip, #204800	; 0x32000
    6b50:	ldr	pc, [ip, #1076]!	; 0x434

00006b54 <av_pix_fmt_desc_get_id@plt>:
    6b54:	add	ip, pc, #0, 12
    6b58:	add	ip, ip, #204800	; 0x32000
    6b5c:	ldr	pc, [ip, #1068]!	; 0x42c

00006b60 <vcos_log_impl@plt>:
    6b60:	add	ip, pc, #0, 12
    6b64:	add	ip, ip, #204800	; 0x32000
    6b68:	ldr	pc, [ip, #1060]!	; 0x424

00006b6c <strtok@plt>:
    6b6c:	add	ip, pc, #0, 12
    6b70:	add	ip, ip, #204800	; 0x32000
    6b74:	ldr	pc, [ip, #1052]!	; 0x41c

00006b78 <avformat_network_init@plt>:
    6b78:	add	ip, pc, #0, 12
    6b7c:	add	ip, ip, #204800	; 0x32000
    6b80:	ldr	pc, [ip, #1044]!	; 0x414

00006b84 <pthread_mutex_unlock@plt>:
    6b84:	add	ip, pc, #0, 12
    6b88:	add	ip, ip, #204800	; 0x32000
    6b8c:	ldr	pc, [ip, #1036]!	; 0x40c

00006b90 <swr_get_class@plt>:
    6b90:	add	ip, pc, #0, 12
    6b94:	add	ip, ip, #204800	; 0x32000
    6b98:	ldr	pc, [ip, #1028]!	; 0x404

00006b9c <pthread_mutex_init@plt>:
    6b9c:	add	ip, pc, #0, 12
    6ba0:	add	ip, ip, #204800	; 0x32000
    6ba4:	ldr	pc, [ip, #1020]!	; 0x3fc

00006ba8 <SDL_Init@plt>:
    6ba8:	add	ip, pc, #0, 12
    6bac:	add	ip, ip, #204800	; 0x32000
    6bb0:	ldr	pc, [ip, #1012]!	; 0x3f4

00006bb4 <av_buffersink_get_channel_layout@plt>:
    6bb4:	add	ip, pc, #0, 12
    6bb8:	add	ip, ip, #204800	; 0x32000
    6bbc:	ldr	pc, [ip, #1004]!	; 0x3ec

00006bc0 <av_usleep@plt>:
    6bc0:	add	ip, pc, #0, 12
    6bc4:	add	ip, ip, #204800	; 0x32000
    6bc8:	ldr	pc, [ip, #996]!	; 0x3e4

Disassembly of section .text:

00006bd0 <main@@Base>:
    6bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6bd4:	vpush	{d8-d15}
    6bd8:	mov	r5, r0
    6bdc:	mov	r6, r1
    6be0:	ldr	r2, [pc, #640]	; 6e68 <main@@Base+0x298>
    6be4:	sub	sp, sp, #196	; 0xc4
    6be8:	add	r2, pc, r2
    6bec:	ldr	r3, [pc, #632]	; 6e6c <main@@Base+0x29c>
    6bf0:	str	r2, [sp, #104]	; 0x68
    6bf4:	ldr	r3, [r2, r3]
    6bf8:	ldr	r4, [pc, #624]	; 6e70 <main@@Base+0x2a0>
    6bfc:	ldr	r3, [r3]
    6c00:	ldr	r7, [pc, #620]	; 6e74 <main@@Base+0x2a4>
    6c04:	str	r3, [sp, #188]	; 0xbc
    6c08:	add	r4, pc, r4
    6c0c:	bl	a8bc <main@@Base+0x3cec>
    6c10:	mov	r0, #1
    6c14:	bl	6494 <av_log_set_flags@plt>
    6c18:	add	r7, pc, r7
    6c1c:	mov	r2, r4
    6c20:	mov	r1, r6
    6c24:	mov	r0, r5
    6c28:	bl	cdd8 <main@@Base+0x6208>
    6c2c:	bl	653c <avdevice_register_all@plt>
    6c30:	bl	6b78 <avformat_network_init@plt>
    6c34:	bl	a7b8 <main@@Base+0x3be8>
    6c38:	mov	r1, r7
    6c3c:	mov	r0, #2
    6c40:	bl	6650 <__sysv_signal@plt>
    6c44:	mov	r1, r7
    6c48:	mov	r0, #15
    6c4c:	bl	6650 <__sysv_signal@plt>
    6c50:	mov	r2, r4
    6c54:	mov	r1, r6
    6c58:	mov	r0, r5
    6c5c:	bl	d544 <main@@Base+0x6974>
    6c60:	ldr	r0, [pc, #528]	; 6e78 <main@@Base+0x2a8>
    6c64:	mov	r3, r4
    6c68:	add	r0, pc, r0
    6c6c:	str	r0, [sp]
    6c70:	mov	r2, r6
    6c74:	mov	r1, r5
    6c78:	mov	r0, #0
    6c7c:	bl	f998 <main@@Base+0x8dc8>
    6c80:	ldr	r3, [pc, #500]	; 6e7c <main@@Base+0x2ac>
    6c84:	add	r3, pc, r3
    6c88:	ldr	r4, [r3, #16]
    6c8c:	cmp	r4, #0
    6c90:	beq	8250 <main@@Base+0x1680>
    6c94:	ldr	r2, [r3, #280]	; 0x118
    6c98:	ldr	r1, [r3, #268]	; 0x10c
    6c9c:	cmp	r2, #0
    6ca0:	bne	6cf4 <main@@Base+0x124>
    6ca4:	cmp	r1, #0
    6ca8:	movne	r0, #33	; 0x21
    6cac:	beq	6e34 <main@@Base+0x264>
    6cb0:	bl	6ba8 <SDL_Init@plt>
    6cb4:	subs	r5, r0, #0
    6cb8:	beq	6d10 <main@@Base+0x140>
    6cbc:	bl	63a4 <SDL_GetError@plt>
    6cc0:	ldr	r2, [pc, #440]	; 6e80 <main@@Base+0x2b0>
    6cc4:	mov	r3, r0
    6cc8:	add	r2, pc, r2
    6ccc:	mov	r1, #8
    6cd0:	mov	r0, #0
    6cd4:	bl	6188 <av_log@plt>
    6cd8:	ldr	r2, [pc, #420]	; 6e84 <main@@Base+0x2b4>
    6cdc:	mov	r0, #0
    6ce0:	add	r2, pc, r2
    6ce4:	mov	r1, #8
    6ce8:	bl	6188 <av_log@plt>
    6cec:	mov	r0, #1
    6cf0:	bl	6adc <exit@plt>
    6cf4:	mov	r2, #1
    6cf8:	cmp	r1, #0
    6cfc:	str	r2, [r3, #264]	; 0x108
    6d00:	movne	r0, #33	; 0x21
    6d04:	beq	6e34 <main@@Base+0x264>
    6d08:	bic	r0, r0, #32
    6d0c:	b	6cb0 <main@@Base+0xe0>
    6d10:	ldr	r4, [pc, #368]	; 6e88 <main@@Base+0x2b8>
    6d14:	mov	r1, r5
    6d18:	add	r4, pc, r4
    6d1c:	ldr	r0, [pc, #360]	; 6e8c <main@@Base+0x2bc>
    6d20:	bl	5ef4 <SDL_EventState@plt>
    6d24:	mov	r1, r5
    6d28:	mov	r0, #32768	; 0x8000
    6d2c:	add	r5, r4, #104	; 0x68
    6d30:	bl	5ef4 <SDL_EventState@plt>
    6d34:	mov	r0, r5
    6d38:	bl	686c <av_init_packet@plt>
    6d3c:	ldr	r3, [r4, #280]	; 0x118
    6d40:	str	r5, [r4, #128]	; 0x80
    6d44:	cmp	r3, #0
    6d48:	bne	6ee8 <main@@Base+0x318>
    6d4c:	ldr	r2, [r4, #284]	; 0x11c
    6d50:	ldr	r1, [pc, #312]	; 6e90 <main@@Base+0x2c0>
    6d54:	cmp	r2, #0
    6d58:	movne	ip, #24
    6d5c:	moveq	ip, #40	; 0x28
    6d60:	ldr	r2, [sp, #104]	; 0x68
    6d64:	ldr	r3, [pc, #296]	; 6e94 <main@@Base+0x2c4>
    6d68:	add	r1, pc, r1
    6d6c:	ldr	r0, [r2, r3]
    6d70:	ldr	r3, [r1, #32]
    6d74:	ldr	r2, [pc, #284]	; 6e98 <main@@Base+0x2c8>
    6d78:	stm	sp, {r3, ip}
    6d7c:	ldr	r3, [r1, #28]
    6d80:	mov	r1, r2
    6d84:	bl	5f6c <SDL_CreateWindow@plt>
    6d88:	ldr	r1, [pc, #268]	; 6e9c <main@@Base+0x2cc>
    6d8c:	str	r0, [r4, #204]	; 0xcc
    6d90:	ldr	r0, [pc, #264]	; 6ea0 <main@@Base+0x2d0>
    6d94:	add	r1, pc, r1
    6d98:	add	r0, pc, r0
    6d9c:	bl	61b8 <SDL_SetHint@plt>
    6da0:	ldr	r0, [r4, #204]	; 0xcc
    6da4:	cmp	r0, #0
    6da8:	beq	6e10 <main@@Base+0x240>
    6dac:	mov	r2, #6
    6db0:	mvn	r1, #0
    6db4:	bl	6620 <SDL_CreateRenderer@plt>
    6db8:	cmp	r0, #0
    6dbc:	mov	r5, r0
    6dc0:	str	r0, [r4, #176]	; 0xb0
    6dc4:	beq	8728 <main@@Base+0x1b58>
    6dc8:	ldr	r4, [pc, #212]	; 6ea4 <main@@Base+0x2d4>
    6dcc:	mov	r0, r5
    6dd0:	add	r4, pc, r4
    6dd4:	add	r1, r4, #20
    6dd8:	bl	5e70 <SDL_GetRendererInfo@plt>
    6ddc:	cmp	r0, #0
    6de0:	beq	8b14 <main@@Base+0x1f44>
    6de4:	ldr	r3, [pc, #188]	; 6ea8 <main@@Base+0x2d8>
    6de8:	add	r3, pc, r3
    6dec:	ldr	r2, [r3, #204]	; 0xcc
    6df0:	cmp	r2, #0
    6df4:	beq	6e10 <main@@Base+0x240>
    6df8:	ldr	r2, [r3, #176]	; 0xb0
    6dfc:	cmp	r2, #0
    6e00:	beq	6e10 <main@@Base+0x240>
    6e04:	ldr	r3, [r3, #28]
    6e08:	cmp	r3, #0
    6e0c:	bne	6ee8 <main@@Base+0x318>
    6e10:	bl	63a4 <SDL_GetError@plt>
    6e14:	ldr	r2, [pc, #144]	; 6eac <main@@Base+0x2dc>
    6e18:	mov	r3, r0
    6e1c:	add	r2, pc, r2
    6e20:	mov	r0, #0
    6e24:	mov	r1, #8
    6e28:	bl	6188 <av_log@plt>
    6e2c:	mov	r0, #0
    6e30:	bl	16c18 <main@@Base+0x10048>
    6e34:	ldr	r4, [pc, #116]	; 6eb0 <main@@Base+0x2e0>
    6e38:	add	r4, pc, r4
    6e3c:	mov	r0, r4
    6e40:	bl	614c <SDL_getenv@plt>
    6e44:	cmp	r0, #0
    6e48:	beq	8a10 <main@@Base+0x1e40>
    6e4c:	ldr	r3, [pc, #96]	; 6eb4 <main@@Base+0x2e4>
    6e50:	mov	r0, #49	; 0x31
    6e54:	add	r3, pc, r3
    6e58:	ldr	r3, [r3, #280]	; 0x118
    6e5c:	cmp	r3, #0
    6e60:	beq	6cb0 <main@@Base+0xe0>
    6e64:	b	6d08 <main@@Base+0x138>
    6e68:	andeq	r1, r3, ip, lsr #29
    6e6c:	andeq	r0, r0, r8, asr r5
    6e70:	andeq	r1, r3, ip, lsr #14
    6e74:	andeq	sl, r0, ip, asr #1
    6e78:			; <UNDEFINED> instruction: 0x00009fb8
    6e7c:	andeq	r2, r3, ip, lsr r4
    6e80:	andeq	lr, r1, ip, ror #27
    6e84:	strdeq	lr, [r1], -r4
    6e88:	andeq	r2, r3, r8, lsr #7
    6e8c:	andeq	r0, r0, r1, lsl #4
    6e90:	andeq	r2, r3, r8, ror #5
    6e94:	andeq	r0, r0, r4, lsr r5
    6e98:	svcne	0x00ff0000
    6e9c:	andeq	lr, r1, r8, ror #26
    6ea0:	andeq	lr, r1, ip, ror #26
    6ea4:	strdeq	r2, [r3], -r0
    6ea8:	ldrdeq	r2, [r3], -r8
    6eac:	andeq	lr, r1, ip, asr sp
    6eb0:	andeq	lr, r1, ip, asr ip
    6eb4:	andeq	r2, r3, ip, ror #4
    6eb8:	ldrdeq	r2, [r3], -r0
    6ebc:	andseq	r1, r0, r0, ror #16
    6ec0:	andseq	r1, r0, r0, ror #15
    6ec4:	mulseq	r0, r8, r7
    6ec8:			; <UNDEFINED> instruction: 0x001017fc
    6ecc:	andeq	r2, r3, r0, lsr #32
    6ed0:	andeq	r2, r3, r8
    6ed4:	strdeq	r1, [r3], -r0
    6ed8:	mvnpl	r8, pc, lsl r5
    6edc:	andeq	r2, r3, r8, lsr r0
    6ee0:	andeq	lr, r1, r8, lsr fp
    6ee4:	andeq	pc, r0, r8, ror #29
    6ee8:	ldr	r3, [pc, #-56]	; 6eb8 <main@@Base+0x2e8>
    6eec:	ldr	r0, [pc, #-56]	; 6ebc <main@@Base+0x2ec>
    6ef0:	add	r3, pc, r3
    6ef4:	ldr	r4, [r3, #16]
    6ef8:	ldr	r5, [r3, #196]	; 0xc4
    6efc:	bl	6a58 <av_mallocz@plt>
    6f00:	subs	r8, r0, #0
    6f04:	beq	7754 <main@@Base+0xb84>
    6f08:	mov	r0, r4
    6f0c:	bl	60ec <av_strdup@plt>
    6f10:	add	r3, r8, #1048576	; 0x100000
    6f14:	add	fp, r3, #4096	; 0x1000
    6f18:	cmp	r0, #0
    6f1c:	str	r3, [sp, #80]	; 0x50
    6f20:	str	r0, [fp, #2076]	; 0x81c
    6f24:	beq	774c <main@@Base+0xb7c>
    6f28:	mov	r6, #0
    6f2c:	ldr	r4, [pc, #-116]	; 6ec0 <main@@Base+0x2f0>
    6f30:	add	r3, r8, #216	; 0xd8
    6f34:	add	r4, r8, r4
    6f38:	str	r5, [r8, #4]
    6f3c:	str	r3, [sp, #60]	; 0x3c
    6f40:	mov	r0, r3
    6f44:	mov	r1, r4
    6f48:	str	r6, [fp, #2092]	; 0x82c
    6f4c:	str	r6, [fp, #2088]	; 0x828
    6f50:	mov	r3, #1
    6f54:	mov	r2, #3
    6f58:	bl	12208 <main@@Base+0xb638>
    6f5c:	cmp	r0, r6
    6f60:	blt	774c <main@@Base+0xb7c>
    6f64:	ldr	r5, [pc, #-168]	; 6ec4 <main@@Base+0x2f4>
    6f68:	add	r3, r8, #1920	; 0x780
    6f6c:	add	r5, r8, r5
    6f70:	mov	r0, r3
    6f74:	str	r3, [sp, #68]	; 0x44
    6f78:	mov	r1, r5
    6f7c:	mov	r3, r6
    6f80:	mov	r2, #16
    6f84:	bl	12208 <main@@Base+0xb638>
    6f88:	cmp	r0, r6
    6f8c:	blt	774c <main@@Base+0xb7c>
    6f90:	add	r7, r8, #5760	; 0x1680
    6f94:	add	r6, r7, #32
    6f98:	add	r0, r8, #3616	; 0xe20
    6f9c:	mov	r1, r6
    6fa0:	add	r0, r0, #8
    6fa4:	mov	r3, #1
    6fa8:	mov	r2, #9
    6fac:	bl	12208 <main@@Base+0xb638>
    6fb0:	cmp	r0, #0
    6fb4:	blt	774c <main@@Base+0xb7c>
    6fb8:	mov	r0, r4
    6fbc:	bl	13ad0 <main@@Base+0xcf00>
    6fc0:	cmp	r0, #0
    6fc4:	blt	774c <main@@Base+0xb7c>
    6fc8:	mov	r0, r6
    6fcc:	bl	13ad0 <main@@Base+0xcf00>
    6fd0:	cmp	r0, #0
    6fd4:	blt	774c <main@@Base+0xb7c>
    6fd8:	mov	r0, r5
    6fdc:	bl	13ad0 <main@@Base+0xcf00>
    6fe0:	cmp	r0, #0
    6fe4:	blt	774c <main@@Base+0xb7c>
    6fe8:	bl	63c8 <SDL_CreateCond@plt>
    6fec:	cmp	r0, #0
    6ff0:	mov	r4, r0
    6ff4:	str	r0, [fp, #2136]	; 0x858
    6ff8:	beq	8d38 <main@@Base+0x2168>
    6ffc:	ldr	r1, [pc, #-316]	; 6ec8 <main@@Base+0x2f8>
    7000:	add	r0, r8, #120	; 0x78
    7004:	add	r1, r8, r1
    7008:	bl	10dec <main@@Base+0xa21c>
    700c:	add	r1, r7, #60	; 0x3c
    7010:	add	r0, r8, #72	; 0x48
    7014:	bl	10dec <main@@Base+0xa21c>
    7018:	add	r1, r8, #200	; 0xc8
    701c:	add	r0, r8, #168	; 0xa8
    7020:	bl	10dec <main@@Base+0xa21c>
    7024:	mvn	r2, #0
    7028:	ldr	r3, [pc, #-356]	; 6ecc <main@@Base+0x2fc>
    702c:	add	r5, r8, #4096	; 0x1000
    7030:	add	r3, pc, r3
    7034:	ldr	r3, [r3, #72]	; 0x48
    7038:	str	r2, [r5, #1656]	; 0x678
    703c:	cmp	r3, #0
    7040:	blt	8b34 <main@@Base+0x1f64>
    7044:	ldr	r3, [pc, #-380]	; 6ed0 <main@@Base+0x300>
    7048:	add	r3, pc, r3
    704c:	ldr	r3, [r3, #72]	; 0x48
    7050:	cmp	r3, #100	; 0x64
    7054:	bgt	8954 <main@@Base+0x1d84>
    7058:	ldr	r0, [pc, #-396]	; 6ed4 <main@@Base+0x304>
    705c:	mov	r1, #0
    7060:	add	r0, pc, r0
    7064:	ldr	r3, [r0, #72]	; 0x48
    7068:	ldr	r2, [pc, #-408]	; 6ed8 <main@@Base+0x308>
    706c:	cmp	r3, #100	; 0x64
    7070:	movge	r3, #100	; 0x64
    7074:	bic	r3, r3, r3, asr #31
    7078:	lsl	r3, r3, #7
    707c:	umull	r6, r7, r3, r2
    7080:	ldr	r2, [pc, #-428]	; 6edc <main@@Base+0x30c>
    7084:	lsr	ip, r7, #5
    7088:	add	r2, pc, r2
    708c:	ldr	r3, [r2, #192]	; 0xc0
    7090:	str	r1, [r5, #1768]	; 0x6e8
    7094:	str	ip, [r0, #72]	; 0x48
    7098:	ldr	r1, [pc, #-448]	; 6ee0 <main@@Base+0x310>
    709c:	ldr	r0, [pc, #-448]	; 6ee4 <main@@Base+0x314>
    70a0:	str	ip, [r5, #1764]	; 0x6e4
    70a4:	str	r3, [r5, #1644]	; 0x66c
    70a8:	mov	r2, r8
    70ac:	add	r1, pc, r1
    70b0:	add	r0, pc, r0
    70b4:	bl	677c <SDL_CreateThread@plt>
    70b8:	cmp	r0, #0
    70bc:	mov	r4, r0
    70c0:	str	r0, [r8]
    70c4:	beq	7730 <main@@Base+0xb60>
    70c8:	mov	r7, fp
    70cc:	vldr	d8, [pc, #980]	; 74a8 <main@@Base+0x8d8>
    70d0:	vldr	d12, [pc, #984]	; 74b0 <main@@Base+0x8e0>
    70d4:	mov	fp, r5
    70d8:	add	r3, sp, #128	; 0x80
    70dc:	str	r3, [sp, #108]	; 0x6c
    70e0:	ldr	r3, [pc, #1008]	; 74d8 <main@@Base+0x908>
    70e4:	vldr	d9, [pc, #972]	; 74b8 <main@@Base+0x8e8>
    70e8:	mov	r4, r3
    70ec:	bl	6530 <SDL_PumpEvents@plt>
    70f0:	add	r3, r8, r4
    70f4:	str	r3, [sp, #64]	; 0x40
    70f8:	ldr	r2, [pc, #988]	; 74dc <main@@Base+0x90c>
    70fc:	mov	r3, #0
    7100:	str	r2, [sp]
    7104:	mov	r1, #1
    7108:	mov	r2, #2
    710c:	ldr	r0, [sp, #108]	; 0x6c
    7110:	bl	5d08 <SDL_PeepEvents@plt>
    7114:	subs	r3, r0, #0
    7118:	str	r3, [sp, #84]	; 0x54
    711c:	bne	8018 <main@@Base+0x1448>
    7120:	ldr	r4, [pc, #952]	; 74e0 <main@@Base+0x910>
    7124:	add	r4, pc, r4
    7128:	ldr	r3, [r4, #288]	; 0x120
    712c:	cmp	r3, #0
    7130:	beq	7784 <main@@Base+0xbb4>
    7134:	vcmpe.f64	d9, #0.0
    7138:	vmrs	APSR_nzcv, fpscr
    713c:	ble	7150 <main@@Base+0x580>
    7140:	vmul.f64	d7, d9, d8
    7144:	vmov	r0, r1, d7
    7148:	bl	224b8 <vc_dispmanx_send_command_reply@@Base+0x87c>
    714c:	bl	6bc0 <av_usleep@plt>
    7150:	ldr	r3, [fp, #1884]	; 0x75c
    7154:	cmn	r3, #1
    7158:	beq	777c <main@@Base+0xbac>
    715c:	ldr	r3, [r8, #16]
    7160:	cmp	r3, #0
    7164:	beq	7c5c <main@@Base+0x108c>
    7168:	ldr	r3, [r8, #12]
    716c:	cmp	r3, #0
    7170:	beq	777c <main@@Base+0xbac>
    7174:	ldr	r3, [pc, #872]	; 74e4 <main@@Base+0x914>
    7178:	add	r3, pc, r3
    717c:	ldr	r3, [r3, #280]	; 0x118
    7180:	cmp	r3, #0
    7184:	bne	7c54 <main@@Base+0x1084>
    7188:	ldr	r3, [fp, #1884]	; 0x75c
    718c:	cmp	r3, #0
    7190:	beq	7c54 <main@@Base+0x1084>
    7194:	ldr	r3, [fp, #1692]	; 0x69c
    7198:	cmp	r3, #0
    719c:	beq	7c54 <main@@Base+0x1084>
    71a0:	bl	65f0 <av_gettime_relative@plt>
    71a4:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    71a8:	vmov	d7, r0, r1
    71ac:	ldr	r3, [r8, #12]
    71b0:	vdiv.f64	d10, d7, d8
    71b4:	cmp	r3, #0
    71b8:	ldr	r3, [pc, #808]	; 74e8 <main@@Base+0x918>
    71bc:	bne	858c <main@@Base+0x19bc>
    71c0:	ldr	r2, [sp, #80]	; 0x50
    71c4:	add	r4, r2, #6016	; 0x1780
    71c8:	ldr	r2, [sp, #104]	; 0x68
    71cc:	vldr	d7, [r4, #-8]
    71d0:	ldr	r5, [r2, r3]
    71d4:	vldr	d6, [r5]
    71d8:	vadd.f64	d7, d7, d6
    71dc:	vcmpe.f64	d10, d7
    71e0:	vmrs	APSR_nzcv, fpscr
    71e4:	ble	71f4 <main@@Base+0x624>
    71e8:	mov	r0, r8
    71ec:	bl	123a8 <main@@Base+0xb7d8>
    71f0:	vstr	d10, [r4, #-8]
    71f4:	vldr	d7, [r5]
    71f8:	vldr	d9, [r4, #-8]
    71fc:	vadd.f64	d9, d9, d7
    7200:	vldr	d7, [pc, #696]	; 74c0 <main@@Base+0x8f0>
    7204:	vsub.f64	d9, d9, d10
    7208:	vcmpe.f64	d9, d7
    720c:	vmrs	APSR_nzcv, fpscr
    7210:	bpl	7c54 <main@@Base+0x1084>
    7214:	ldr	r3, [r7, #2012]	; 0x7dc
    7218:	cmp	r3, #0
    721c:	beq	770c <main@@Base+0xb3c>
    7220:	ldr	r3, [r8, #1888]	; 0x760
    7224:	vldr	d13, [pc, #652]	; 74b8 <main@@Base+0x8e8>
    7228:	vldr	d11, [pc, #664]	; 74c8 <main@@Base+0x8f8>
    722c:	mov	sl, r3
    7230:	ldr	r6, [r8, #1900]	; 0x76c
    7234:	cmp	sl, r6
    7238:	beq	76ec <main@@Base+0xb1c>
    723c:	ldr	r4, [r8, #1880]	; 0x758
    7240:	ldr	r1, [r8, #1892]	; 0x764
    7244:	add	r0, r4, r6
    7248:	bl	21ff4 <vc_dispmanx_send_command_reply@@Base+0x3b8>
    724c:	lsl	r9, r1, #1
    7250:	add	r3, r9, r1
    7254:	add	r3, r1, r3, lsl #2
    7258:	add	r3, r8, r3, lsl #3
    725c:	ldr	r2, [r3, #256]	; 0x100
    7260:	ldr	r3, [r7, #2044]	; 0x7fc
    7264:	mov	r5, r1
    7268:	cmp	r2, r3
    726c:	bne	7da4 <main@@Base+0x11d4>
    7270:	lsl	r6, r4, #1
    7274:	add	r3, r6, r4
    7278:	add	r3, r4, r3, lsl #2
    727c:	add	r3, r8, r3, lsl #3
    7280:	ldr	r3, [r3, #256]	; 0x100
    7284:	cmp	r2, r3
    7288:	beq	72a8 <main@@Base+0x6d8>
    728c:	bl	65f0 <av_gettime_relative@plt>
    7290:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    7294:	vmov	d7, r0, r1
    7298:	vdiv.f64	d7, d7, d8
    729c:	ldr	r3, [sp, #80]	; 0x50
    72a0:	add	r3, r3, #6080	; 0x17c0
    72a4:	vstr	d7, [r3]
    72a8:	ldr	r3, [r8, #16]
    72ac:	cmp	r3, #0
    72b0:	bne	76ec <main@@Base+0xb1c>
    72b4:	ldr	r1, [sp, #60]	; 0x3c
    72b8:	add	r2, r9, r5
    72bc:	add	r3, r6, r4
    72c0:	add	r2, r5, r2, lsl #2
    72c4:	add	r3, r4, r3, lsl #2
    72c8:	add	r2, r1, r2, lsl #3
    72cc:	add	r3, r8, r3, lsl #3
    72d0:	ldr	r0, [r2, #40]	; 0x28
    72d4:	ldr	r1, [r3, #256]	; 0x100
    72d8:	cmp	r0, r1
    72dc:	bne	7d9c <main@@Base+0x11cc>
    72e0:	vldr	d14, [r2, #48]	; 0x30
    72e4:	vldr	d7, [r3, #264]	; 0x108
    72e8:	vsub.f64	d14, d14, d7
    72ec:	vcmp.f64	d14, d14
    72f0:	vmrs	APSR_nzcv, fpscr
    72f4:	bvs	7318 <main@@Base+0x748>
    72f8:	vcmpe.f64	d14, #0.0
    72fc:	vmrs	APSR_nzcv, fpscr
    7300:	bls	7318 <main@@Base+0x748>
    7304:	ldr	r3, [sp, #64]	; 0x40
    7308:	vldr	d7, [r3, #-8]
    730c:	vcmpe.f64	d14, d7
    7310:	vmrs	APSR_nzcv, fpscr
    7314:	ble	7328 <main@@Base+0x758>
    7318:	add	r6, r6, r4
    731c:	add	r4, r4, r6, lsl #2
    7320:	add	r4, r8, r4, lsl #3
    7324:	vldr	d14, [r4, #272]	; 0x110
    7328:	ldr	r3, [fp, #1644]	; 0x66c
    732c:	cmp	r3, #1
    7330:	beq	7860 <main@@Base+0xc90>
    7334:	ldr	r2, [r8, #160]	; 0xa0
    7338:	ldr	r3, [r8, #152]	; 0x98
    733c:	ldr	r2, [r2]
    7340:	cmp	r2, r3
    7344:	bne	7858 <main@@Base+0xc88>
    7348:	ldr	r3, [r8, #156]	; 0x9c
    734c:	cmp	r3, #0
    7350:	beq	7828 <main@@Base+0xc58>
    7354:	vldr	d10, [r8, #120]	; 0x78
    7358:	mov	r0, r8
    735c:	bl	14f00 <main@@Base+0xe330>
    7360:	vcmpe.f64	d14, d12
    7364:	vmrs	APSR_nzcv, fpscr
    7368:	vsub.f64	d7, d10, d0
    736c:	vmovpl.f64	d6, d12
    7370:	bpl	7384 <main@@Base+0x7b4>
    7374:	vldr	d6, [pc, #340]	; 74d0 <main@@Base+0x900>
    7378:	vcmpe.f64	d14, d6
    737c:	vmrs	APSR_nzcv, fpscr
    7380:	vmovpl.f64	d6, d14
    7384:	vcmp.f64	d7, d7
    7388:	vmrs	APSR_nzcv, fpscr
    738c:	bvs	7820 <main@@Base+0xc50>
    7390:	ldr	r3, [sp, #64]	; 0x40
    7394:	vabs.f64	d5, d7
    7398:	vldr	d4, [r3, #-8]
    739c:	vcmpe.f64	d5, d4
    73a0:	vmrs	APSR_nzcv, fpscr
    73a4:	bpl	7820 <main@@Base+0xc50>
    73a8:	vneg.f64	d5, d6
    73ac:	vcmpe.f64	d7, d5
    73b0:	vmrs	APSR_nzcv, fpscr
    73b4:	bhi	77fc <main@@Base+0xc2c>
    73b8:	vadd.f64	d14, d14, d7
    73bc:	vcmpe.f64	d14, #0.0
    73c0:	vmrs	APSR_nzcv, fpscr
    73c4:	vsub.f64	d10, d0, d10
    73c8:	bmi	8190 <main@@Base+0x15c0>
    73cc:	ldr	r2, [pc, #280]	; 74ec <main@@Base+0x91c>
    73d0:	vstr	d10, [sp, #8]
    73d4:	add	r2, pc, r2
    73d8:	mov	r1, #56	; 0x38
    73dc:	mov	r0, #0
    73e0:	vstr	d14, [sp]
    73e4:	bl	6188 <av_log@plt>
    73e8:	ldr	r3, [sp, #80]	; 0x50
    73ec:	add	r6, r3, #6080	; 0x17c0
    73f0:	bl	65f0 <av_gettime_relative@plt>
    73f4:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    73f8:	vldr	d7, [r6]
    73fc:	vmov	d6, r0, r1
    7400:	vadd.f64	d7, d14, d7
    7404:	vdiv.f64	d10, d6, d8
    7408:	vcmpe.f64	d10, d7
    740c:	vmrs	APSR_nzcv, fpscr
    7410:	bmi	81d4 <main@@Base+0x1604>
    7414:	vcmpe.f64	d14, #0.0
    7418:	vmrs	APSR_nzcv, fpscr
    741c:	vstr	d7, [r6]
    7420:	ble	7434 <main@@Base+0x864>
    7424:	vsub.f64	d7, d10, d7
    7428:	vcmpe.f64	d7, d12
    742c:	vmrs	APSR_nzcv, fpscr
    7430:	vstrgt	d10, [r6]
    7434:	ldr	r0, [r8, #1904]	; 0x770
    7438:	bl	6b3c <SDL_LockMutex@plt>
    743c:	add	r3, r9, r5
    7440:	add	r3, r5, r3, lsl #2
    7444:	add	r3, r8, r3, lsl #3
    7448:	vldr	d14, [r3, #264]	; 0x108
    744c:	vcmp.f64	d14, d14
    7450:	vmrs	APSR_nzcv, fpscr
    7454:	bvs	7568 <main@@Base+0x998>
    7458:	ldr	r4, [r3, #256]	; 0x100
    745c:	bl	65f0 <av_gettime_relative@plt>
    7460:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    7464:	vmov	d7, r0, r1
    7468:	vdiv.f64	d7, d7, d8
    746c:	vsub.f64	d6, d14, d7
    7470:	ldr	r3, [r8, #208]	; 0xd0
    7474:	str	r4, [r8, #152]	; 0x98
    7478:	ldr	r2, [r3]
    747c:	ldr	r3, [r8, #200]	; 0xc8
    7480:	vstr	d14, [r8, #120]	; 0x78
    7484:	cmp	r2, r3
    7488:	vstr	d6, [r8, #128]	; 0x80
    748c:	vstr	d7, [r8, #136]	; 0x88
    7490:	bne	7c4c <main@@Base+0x107c>
    7494:	ldr	r3, [r8, #204]	; 0xcc
    7498:	cmp	r3, #0
    749c:	beq	7c18 <main@@Base+0x1048>
    74a0:	vldr	d14, [r8, #168]	; 0xa8
    74a4:	b	74f0 <main@@Base+0x920>
    74a8:	andeq	r0, r0, r0
    74ac:	smlawbmi	lr, r0, r4, r8
    74b0:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
    74b4:	svccc	0x00b99999
	...
    74c0:			; <UNDEFINED> instruction: 0x47ae147b
    74c4:	svccc	0x00847ae1
    74c8:	andeq	r0, r0, r0
    74cc:	svccc	0x00f00000	; IMB
    74d0:			; <UNDEFINED> instruction: 0x47ae147b
    74d4:	svccc	0x00a47ae1
    74d8:	andseq	r1, r0, r0, lsl r8
    74dc:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    74e0:	muleq	r3, ip, pc	; <UNPREDICTABLE>
    74e4:	andeq	r1, r3, r8, asr #30
    74e8:	andeq	r0, r0, ip, asr #10
    74ec:	andeq	lr, r1, r0, asr #16
    74f0:	ldr	r3, [r8, #160]	; 0xa0
    74f4:	ldr	r3, [r3]
    74f8:	cmp	r3, r4
    74fc:	bne	7568 <main@@Base+0x998>
    7500:	ldr	r3, [r8, #156]	; 0x9c
    7504:	cmp	r3, #0
    7508:	beq	77cc <main@@Base+0xbfc>
    750c:	vldr	d15, [r8, #120]	; 0x78
    7510:	vcmp.f64	d15, d15
    7514:	vmrs	APSR_nzcv, fpscr
    7518:	bvs	7568 <main@@Base+0x998>
    751c:	vcmp.f64	d14, d14
    7520:	vmrs	APSR_nzcv, fpscr
    7524:	bvs	7540 <main@@Base+0x970>
    7528:	vsub.f64	d14, d14, d15
    752c:	vldr	d7, [pc, #836]	; 7878 <main@@Base+0xca8>
    7530:	vabs.f64	d14, d14
    7534:	vcmpe.f64	d14, d7
    7538:	vmrs	APSR_nzcv, fpscr
    753c:	ble	7568 <main@@Base+0x998>
    7540:	ldr	r4, [r8, #152]	; 0x98
    7544:	bl	65f0 <av_gettime_relative@plt>
    7548:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    754c:	vmov	d7, r0, r1
    7550:	vdiv.f64	d7, d7, d8
    7554:	vsub.f64	d6, d15, d7
    7558:	vstr	d15, [r8, #168]	; 0xa8
    755c:	vstr	d6, [r8, #176]	; 0xb0
    7560:	vstr	d7, [r8, #184]	; 0xb8
    7564:	str	r4, [r8, #200]	; 0xc8
    7568:	ldr	r0, [r8, #1904]	; 0x770
    756c:	bl	6290 <SDL_UnlockMutex@plt>
    7570:	ldr	sl, [r8, #1888]	; 0x760
    7574:	ldr	r3, [r8, #1900]	; 0x76c
    7578:	sub	r2, sl, r3
    757c:	cmp	r2, #1
    7580:	ble	78cc <main@@Base+0xcfc>
    7584:	ldr	r4, [r8, #1880]	; 0x758
    7588:	ldr	r1, [r8, #1892]	; 0x764
    758c:	add	r0, r3, r4
    7590:	add	r0, r0, #1
    7594:	str	r3, [sp, #88]	; 0x58
    7598:	bl	21ff4 <vc_dispmanx_send_command_reply@@Base+0x3b8>
    759c:	ldr	r3, [sp, #60]	; 0x3c
    75a0:	add	r0, r1, r1, lsl #1
    75a4:	add	r2, r9, r5
    75a8:	add	r1, r1, r0, lsl #2
    75ac:	add	r2, r5, r2, lsl #2
    75b0:	add	r1, r3, r1, lsl #3
    75b4:	add	r2, r8, r2, lsl #3
    75b8:	ldr	ip, [r1, #40]	; 0x28
    75bc:	ldr	r0, [r2, #256]	; 0x100
    75c0:	ldr	r3, [sp, #88]	; 0x58
    75c4:	cmp	ip, r0
    75c8:	vmovne.f64	d7, d13
    75cc:	bne	7618 <main@@Base+0xa48>
    75d0:	vldr	d7, [r1, #48]	; 0x30
    75d4:	vldr	d6, [r2, #264]	; 0x108
    75d8:	vsub.f64	d7, d7, d6
    75dc:	vcmp.f64	d7, d7
    75e0:	vmrs	APSR_nzcv, fpscr
    75e4:	bvs	7608 <main@@Base+0xa38>
    75e8:	vcmpe.f64	d7, #0.0
    75ec:	vmrs	APSR_nzcv, fpscr
    75f0:	bls	7608 <main@@Base+0xa38>
    75f4:	ldr	r2, [sp, #64]	; 0x40
    75f8:	vldr	d6, [r2, #-8]
    75fc:	vcmpe.f64	d7, d6
    7600:	vmrs	APSR_nzcv, fpscr
    7604:	ble	7618 <main@@Base+0xa48>
    7608:	add	r9, r9, r5
    760c:	add	r5, r5, r9, lsl #2
    7610:	add	r5, r8, r5, lsl #3
    7614:	vldr	d7, [r5, #272]	; 0x110
    7618:	ldr	r2, [r7, #2096]	; 0x830
    761c:	cmp	r2, #0
    7620:	bne	78cc <main@@Base+0xcfc>
    7624:	ldr	r2, [pc, #612]	; 7890 <main@@Base+0xcc0>
    7628:	add	r2, pc, r2
    762c:	ldr	r2, [r2, #48]	; 0x30
    7630:	cmp	r2, #0
    7634:	ble	78b0 <main@@Base+0xce0>
    7638:	vldr	d6, [r6]
    763c:	vadd.f64	d7, d7, d6
    7640:	vcmpe.f64	d7, d10
    7644:	vmrs	APSR_nzcv, fpscr
    7648:	bpl	78cc <main@@Base+0xcfc>
    764c:	clz	r3, r3
    7650:	ldr	r5, [r8, #1896]	; 0x768
    7654:	lsr	r3, r3, #5
    7658:	cmp	r5, #0
    765c:	movne	r5, r3
    7660:	moveq	r5, #0
    7664:	ldr	r3, [fp, #1880]	; 0x758
    7668:	cmp	r5, #0
    766c:	add	r3, r3, #1
    7670:	str	r3, [fp, #1880]	; 0x758
    7674:	bne	7770 <main@@Base+0xba0>
    7678:	add	r0, r4, r4, lsl #1
    767c:	add	r4, r4, r0, lsl #2
    7680:	lsl	r4, r4, #3
    7684:	add	r3, r8, r4
    7688:	ldr	r0, [r3, #216]	; 0xd8
    768c:	bl	5f9c <av_frame_unref@plt>
    7690:	ldr	r3, [sp, #60]	; 0x3c
    7694:	add	r4, r4, #8
    7698:	add	r0, r3, r4
    769c:	bl	5d14 <avsubtitle_free@plt>
    76a0:	ldr	r3, [r8, #1880]	; 0x758
    76a4:	ldr	r2, [r8, #1892]	; 0x764
    76a8:	add	r3, r3, #1
    76ac:	cmp	r3, r2
    76b0:	moveq	r3, r5
    76b4:	str	r3, [r8, #1880]	; 0x758
    76b8:	ldr	r0, [r8, #1904]	; 0x770
    76bc:	bl	6b3c <SDL_LockMutex@plt>
    76c0:	ldr	r3, [r8, #1888]	; 0x760
    76c4:	ldr	r0, [r8, #1908]	; 0x774
    76c8:	sub	r3, r3, #1
    76cc:	str	r3, [r8, #1888]	; 0x760
    76d0:	bl	5dec <SDL_CondSignal@plt>
    76d4:	ldr	r0, [r8, #1904]	; 0x770
    76d8:	bl	6290 <SDL_UnlockMutex@plt>
    76dc:	ldr	sl, [r8, #1888]	; 0x760
    76e0:	ldr	r6, [r8, #1900]	; 0x76c
    76e4:	cmp	sl, r6
    76e8:	bne	723c <main@@Base+0x66c>
    76ec:	ldr	r3, [pc, #416]	; 7894 <main@@Base+0xcc4>
    76f0:	add	r3, pc, r3
    76f4:	ldr	r3, [r3, #280]	; 0x118
    76f8:	cmp	r3, #0
    76fc:	bne	770c <main@@Base+0xb3c>
    7700:	ldr	r3, [r8, #12]
    7704:	cmp	r3, #0
    7708:	bne	7ad0 <main@@Base+0xf00>
    770c:	mov	r2, #0
    7710:	ldr	r3, [pc, #384]	; 7898 <main@@Base+0xcc8>
    7714:	str	r2, [r8, #12]
    7718:	add	r3, pc, r3
    771c:	ldr	r3, [r3, #52]	; 0x34
    7720:	cmp	r3, r2
    7724:	bne	7e00 <main@@Base+0x1230>
    7728:	bl	6530 <SDL_PumpEvents@plt>
    772c:	b	70f8 <main@@Base+0x528>
    7730:	bl	63a4 <SDL_GetError@plt>
    7734:	ldr	r2, [pc, #352]	; 789c <main@@Base+0xccc>
    7738:	mov	r3, r0
    773c:	add	r2, pc, r2
    7740:	mov	r0, r4
    7744:	mov	r1, #8
    7748:	bl	6188 <av_log@plt>
    774c:	mov	r0, r8
    7750:	bl	16acc <main@@Base+0xfefc>
    7754:	ldr	r2, [pc, #324]	; 78a0 <main@@Base+0xcd0>
    7758:	mov	r0, #0
    775c:	add	r2, pc, r2
    7760:	mov	r1, #8
    7764:	bl	6188 <av_log@plt>
    7768:	mov	r0, #0
    776c:	bl	16c18 <main@@Base+0x10048>
    7770:	mov	r6, #1
    7774:	str	r6, [r8, #1900]	; 0x76c
    7778:	b	7234 <main@@Base+0x664>
    777c:	vldr	d9, [pc, #252]	; 7880 <main@@Base+0xcb0>
    7780:	b	7728 <main@@Base+0xb58>
    7784:	bl	65f0 <av_gettime_relative@plt>
    7788:	mov	r3, #0
    778c:	ldr	ip, [r4, #296]	; 0x128
    7790:	ldr	lr, [r4, #300]	; 0x12c
    7794:	subs	r0, r0, ip
    7798:	sbc	r1, r1, lr
    779c:	ldr	r2, [pc, #256]	; 78a4 <main@@Base+0xcd4>
    77a0:	str	r0, [sp, #72]	; 0x48
    77a4:	str	r1, [sp, #76]	; 0x4c
    77a8:	ldrd	r0, [sp, #72]	; 0x48
    77ac:	cmp	r2, r0
    77b0:	sbcs	r3, r3, r1
    77b4:	bge	7134 <main@@Base+0x564>
    77b8:	ldr	r0, [sp, #84]	; 0x54
    77bc:	bl	68f0 <SDL_ShowCursor@plt>
    77c0:	mov	r3, #1
    77c4:	str	r3, [r4, #288]	; 0x120
    77c8:	b	7134 <main@@Base+0x564>
    77cc:	bl	65f0 <av_gettime_relative@plt>
    77d0:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    77d4:	vmov	d7, r0, r1
    77d8:	vldr	d6, [r8, #136]	; 0x88
    77dc:	vdiv.f64	d4, d7, d8
    77e0:	vldr	d15, [r8, #128]	; 0x80
    77e4:	vldr	d7, [r8, #144]	; 0x90
    77e8:	vsub.f64	d6, d4, d6
    77ec:	vadd.f64	d15, d4, d15
    77f0:	vsub.f64	d7, d7, d11
    77f4:	vmla.f64	d15, d6, d7
    77f8:	b	7510 <main@@Base+0x940>
    77fc:	vcmpe.f64	d7, d6
    7800:	vmrs	APSR_nzcv, fpscr
    7804:	vsub.f64	d10, d0, d10
    7808:	blt	73cc <main@@Base+0x7fc>
    780c:	vcmpe.f64	d14, d12
    7810:	vmrs	APSR_nzcv, fpscr
    7814:	vaddgt.f64	d14, d14, d7
    7818:	vaddle.f64	d14, d14, d14
    781c:	b	73cc <main@@Base+0x7fc>
    7820:	vsub.f64	d10, d0, d10
    7824:	b	73cc <main@@Base+0x7fc>
    7828:	bl	65f0 <av_gettime_relative@plt>
    782c:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    7830:	vmov	d6, r0, r1
    7834:	vldr	d7, [r8, #136]	; 0x88
    7838:	vdiv.f64	d10, d6, d8
    783c:	vldr	d5, [r8, #144]	; 0x90
    7840:	vldr	d6, [r8, #128]	; 0x80
    7844:	vsub.f64	d7, d10, d7
    7848:	vsub.f64	d5, d5, d11
    784c:	vadd.f64	d10, d10, d6
    7850:	vmla.f64	d10, d7, d5
    7854:	b	7358 <main@@Base+0x788>
    7858:	vldr	d10, [pc, #40]	; 7888 <main@@Base+0xcb8>
    785c:	b	7358 <main@@Base+0x788>
    7860:	ldr	r3, [r7, #2012]	; 0x7dc
    7864:	cmp	r3, #0
    7868:	vmovne.f64	d10, d13
    786c:	bne	73cc <main@@Base+0x7fc>
    7870:	b	7334 <main@@Base+0x764>
    7874:	nop	{0}
    7878:	andeq	r0, r0, r0
    787c:	eormi	r0, r4, r0
    7880:			; <UNDEFINED> instruction: 0x47ae147b
    7884:	svccc	0x00847ae1
    7888:	andeq	r0, r0, r0
    788c:	svcvc	0x00f80000
    7890:	andeq	r1, r3, r8, lsr #20
    7894:	ldrdeq	r1, [r3], -r0
    7898:	andeq	r1, r3, r8, lsr r9
    789c:	andeq	sp, r1, r4, lsr #20
    78a0:	muleq	r1, r4, r4
    78a4:	andeq	r4, pc, r0, asr #4
    78a8:	andeq	r1, r3, r0, lsl #12
    78ac:	ldrbtmi	r0, [sl], #-0
    78b0:	beq	78cc <main@@Base+0xcfc>
    78b4:	ldr	r2, [fp, #1644]	; 0x66c
    78b8:	cmp	r2, #1
    78bc:	bne	7638 <main@@Base+0xa68>
    78c0:	ldr	r2, [r7, #2012]	; 0x7dc
    78c4:	cmp	r2, #0
    78c8:	beq	7638 <main@@Base+0xa68>
    78cc:	ldr	r3, [r7, #1936]	; 0x790
    78d0:	cmp	r3, #0
    78d4:	beq	7a10 <main@@Base+0xe40>
    78d8:	vldr	s20, [pc, #-52]	; 78ac <main@@Base+0xcdc>
    78dc:	ldr	r5, [r8, #3604]	; 0xe14
    78e0:	ldr	r6, [r8, #3592]	; 0xe08
    78e4:	sub	r6, r6, r5
    78e8:	cmp	r6, #0
    78ec:	ble	7a10 <main@@Base+0xe40>
    78f0:	ldr	r3, [r8, #3584]	; 0xe00
    78f4:	ldr	r9, [r8, #3596]	; 0xe0c
    78f8:	add	r5, r5, r3
    78fc:	mov	r0, r5
    7900:	mov	r1, r9
    7904:	bl	21ff4 <vc_dispmanx_send_command_reply@@Base+0x3b8>
    7908:	cmp	r6, #1
    790c:	mov	r4, r1
    7910:	moveq	r1, #0
    7914:	beq	7934 <main@@Base+0xd64>
    7918:	mov	r1, r9
    791c:	add	r0, r5, #1
    7920:	bl	21ff4 <vc_dispmanx_send_command_reply@@Base+0x3b8>
    7924:	add	r3, r1, r1, lsl #1
    7928:	add	r1, r1, r3, lsl #2
    792c:	ldr	r3, [sp, #68]	; 0x44
    7930:	add	r1, r3, r1, lsl #3
    7934:	lsl	r2, r4, #1
    7938:	add	r3, r2, r4
    793c:	add	r3, r4, r3, lsl #2
    7940:	lsl	r3, r3, #3
    7944:	add	r0, r8, r3
    7948:	ldr	lr, [r0, #1960]	; 0x7a8
    794c:	ldr	ip, [r7, #1972]	; 0x7b4
    7950:	cmp	lr, ip
    7954:	beq	7af4 <main@@Base+0xf24>
    7958:	add	r2, r2, r4
    795c:	add	r4, r4, r2, lsl #2
    7960:	add	r4, r8, r4, lsl #3
    7964:	ldr	r3, [r4, #2012]	; 0x7dc
    7968:	cmp	r3, #0
    796c:	bne	7b58 <main@@Base+0xf88>
    7970:	ldr	r3, [r8, #3600]	; 0xe10
    7974:	cmp	r3, #0
    7978:	beq	7990 <main@@Base+0xdc0>
    797c:	ldr	r3, [r8, #3604]	; 0xe14
    7980:	cmp	r3, #0
    7984:	moveq	r5, #1
    7988:	streq	r5, [r8, #3604]	; 0xe14
    798c:	beq	78e0 <main@@Base+0xd10>
    7990:	ldr	r0, [r8, #3584]	; 0xe00
    7994:	add	r4, r0, r0, lsl #1
    7998:	add	r0, r0, r4, lsl #2
    799c:	lsl	r4, r0, #3
    79a0:	add	r3, r8, r4
    79a4:	ldr	r0, [r3, #1920]	; 0x780
    79a8:	bl	5f9c <av_frame_unref@plt>
    79ac:	ldr	r3, [sp, #68]	; 0x44
    79b0:	add	r0, r4, #8
    79b4:	add	r0, r3, r0
    79b8:	bl	5d14 <avsubtitle_free@plt>
    79bc:	ldr	r3, [r8, #3584]	; 0xe00
    79c0:	ldr	r2, [r8, #3596]	; 0xe0c
    79c4:	add	r3, r3, #1
    79c8:	cmp	r3, r2
    79cc:	movne	r2, r3
    79d0:	moveq	r2, #0
    79d4:	ldr	r0, [r8, #3608]	; 0xe18
    79d8:	str	r2, [r8, #3584]	; 0xe00
    79dc:	bl	6b3c <SDL_LockMutex@plt>
    79e0:	ldr	r3, [r8, #3592]	; 0xe08
    79e4:	ldr	r0, [r8, #3612]	; 0xe1c
    79e8:	sub	r3, r3, #1
    79ec:	str	r3, [r8, #3592]	; 0xe08
    79f0:	bl	5dec <SDL_CondSignal@plt>
    79f4:	ldr	r0, [r8, #3608]	; 0xe18
    79f8:	bl	6290 <SDL_UnlockMutex@plt>
    79fc:	ldr	r5, [r8, #3604]	; 0xe14
    7a00:	ldr	r6, [r8, #3592]	; 0xe08
    7a04:	sub	r6, r6, r5
    7a08:	cmp	r6, #0
    7a0c:	bgt	78f0 <main@@Base+0xd20>
    7a10:	ldr	r3, [r8, #1896]	; 0x768
    7a14:	cmp	r3, #0
    7a18:	beq	7a30 <main@@Base+0xe60>
    7a1c:	ldr	r3, [r8, #1900]	; 0x76c
    7a20:	cmp	r3, #0
    7a24:	moveq	r3, #1
    7a28:	streq	r3, [r8, #1900]	; 0x76c
    7a2c:	beq	7a9c <main@@Base+0xecc>
    7a30:	ldr	r0, [r8, #1880]	; 0x758
    7a34:	add	r4, r0, r0, lsl #1
    7a38:	add	r0, r0, r4, lsl #2
    7a3c:	lsl	r4, r0, #3
    7a40:	add	r3, r8, r4
    7a44:	ldr	r0, [r3, #216]	; 0xd8
    7a48:	bl	5f9c <av_frame_unref@plt>
    7a4c:	ldr	r3, [sp, #60]	; 0x3c
    7a50:	add	r0, r4, #8
    7a54:	add	r0, r3, r0
    7a58:	bl	5d14 <avsubtitle_free@plt>
    7a5c:	ldr	r3, [r8, #1880]	; 0x758
    7a60:	ldr	r2, [r8, #1892]	; 0x764
    7a64:	add	r3, r3, #1
    7a68:	cmp	r3, r2
    7a6c:	str	r3, [r8, #1880]	; 0x758
    7a70:	moveq	r3, #0
    7a74:	ldr	r0, [r8, #1904]	; 0x770
    7a78:	streq	r3, [r8, #1880]	; 0x758
    7a7c:	bl	6b3c <SDL_LockMutex@plt>
    7a80:	ldr	r3, [r8, #1888]	; 0x760
    7a84:	ldr	r0, [r8, #1908]	; 0x774
    7a88:	sub	r3, r3, #1
    7a8c:	str	r3, [r8, #1888]	; 0x760
    7a90:	bl	5dec <SDL_CondSignal@plt>
    7a94:	ldr	r0, [r8, #1904]	; 0x770
    7a98:	bl	6290 <SDL_UnlockMutex@plt>
    7a9c:	mov	r2, #1
    7aa0:	ldr	r3, [r7, #2096]	; 0x830
    7aa4:	str	r2, [r8, #12]
    7aa8:	cmp	r3, #0
    7aac:	beq	7abc <main@@Base+0xeec>
    7ab0:	ldr	r3, [r8, #16]
    7ab4:	cmp	r3, #0
    7ab8:	beq	81fc <main@@Base+0x162c>
    7abc:	ldr	r3, [pc, #-540]	; 78a8 <main@@Base+0xcd8>
    7ac0:	add	r3, pc, r3
    7ac4:	ldr	r3, [r3, #280]	; 0x118
    7ac8:	cmp	r3, #0
    7acc:	bne	770c <main@@Base+0xb3c>
    7ad0:	ldr	r3, [fp, #1884]	; 0x75c
    7ad4:	cmp	r3, #0
    7ad8:	bne	770c <main@@Base+0xb3c>
    7adc:	ldr	r3, [r8, #1900]	; 0x76c
    7ae0:	cmp	r3, #0
    7ae4:	beq	770c <main@@Base+0xb3c>
    7ae8:	mov	r0, r8
    7aec:	bl	123a8 <main@@Base+0xb7d8>
    7af0:	b	770c <main@@Base+0xb3c>
    7af4:	ldr	r0, [r0, #1936]	; 0x790
    7af8:	vldr	d6, [r8, #120]	; 0x78
    7afc:	vmov	s15, r0
    7b00:	vcvt.f32.u32	s15, s15
    7b04:	vdiv.f32	s14, s15, s20
    7b08:	ldr	r0, [sp, #68]	; 0x44
    7b0c:	vcvt.f64.f32	d7, s14
    7b10:	add	r3, r0, r3
    7b14:	vldr	d5, [r3, #48]	; 0x30
    7b18:	vadd.f64	d7, d7, d5
    7b1c:	vcmpe.f64	d6, d7
    7b20:	vmrs	APSR_nzcv, fpscr
    7b24:	bgt	7958 <main@@Base+0xd88>
    7b28:	cmp	r1, #0
    7b2c:	beq	7a10 <main@@Base+0xe40>
    7b30:	vldr	s15, [r1, #12]
    7b34:	vcvt.f32.u32	s15, s15
    7b38:	vdiv.f32	s14, s15, s20
    7b3c:	vldr	d5, [r1, #48]	; 0x30
    7b40:	vcvt.f64.f32	d7, s14
    7b44:	vadd.f64	d7, d7, d5
    7b48:	vcmpe.f64	d6, d7
    7b4c:	vmrs	APSR_nzcv, fpscr
    7b50:	bgt	7958 <main@@Base+0xd88>
    7b54:	b	7a10 <main@@Base+0xe40>
    7b58:	ldr	r3, [r4, #1940]	; 0x794
    7b5c:	add	r4, r4, #1936	; 0x790
    7b60:	cmp	r3, #0
    7b64:	beq	7970 <main@@Base+0xda0>
    7b68:	mov	r5, #0
    7b6c:	add	sl, sp, #124	; 0x7c
    7b70:	add	r9, sp, #120	; 0x78
    7b74:	b	7b88 <main@@Base+0xfb8>
    7b78:	ldr	r3, [r4, #4]
    7b7c:	add	r5, r5, #1
    7b80:	cmp	r5, r3
    7b84:	bcs	7970 <main@@Base+0xda0>
    7b88:	ldr	r2, [r4, #8]
    7b8c:	mov	r3, sl
    7b90:	ldr	r6, [r2, r5, lsl #2]
    7b94:	ldr	r0, [r7, #1924]	; 0x784
    7b98:	mov	r2, r9
    7b9c:	mov	r1, r6
    7ba0:	bl	6ac4 <SDL_LockTexture@plt>
    7ba4:	subs	r3, r0, #0
    7ba8:	bne	7b78 <main@@Base+0xfa8>
    7bac:	ldr	r2, [r6, #12]
    7bb0:	cmp	r2, #0
    7bb4:	ble	7c0c <main@@Base+0x103c>
    7bb8:	str	fp, [sp, #88]	; 0x58
    7bbc:	mov	fp, r7
    7bc0:	mov	r7, r4
    7bc4:	mov	r4, r6
    7bc8:	mov	r6, r3
    7bcc:	ldr	r0, [sp, #120]	; 0x78
    7bd0:	ldr	r2, [r4, #8]
    7bd4:	mov	r1, #0
    7bd8:	lsl	r2, r2, #2
    7bdc:	bl	62e4 <memset@plt>
    7be0:	ldr	r0, [sp, #120]	; 0x78
    7be4:	ldr	r1, [r4, #12]
    7be8:	ldr	r2, [sp, #124]	; 0x7c
    7bec:	add	r6, r6, #1
    7bf0:	add	r0, r0, r2
    7bf4:	cmp	r6, r1
    7bf8:	str	r0, [sp, #120]	; 0x78
    7bfc:	blt	7bd0 <main@@Base+0x1000>
    7c00:	mov	r4, r7
    7c04:	mov	r7, fp
    7c08:	ldr	fp, [sp, #88]	; 0x58
    7c0c:	ldr	r0, [r7, #1924]	; 0x784
    7c10:	bl	65d8 <SDL_UnlockTexture@plt>
    7c14:	b	7b78 <main@@Base+0xfa8>
    7c18:	bl	65f0 <av_gettime_relative@plt>
    7c1c:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    7c20:	vmov	d7, r0, r1
    7c24:	vldr	d6, [r8, #184]	; 0xb8
    7c28:	vdiv.f64	d14, d7, d8
    7c2c:	vldr	d5, [r8, #176]	; 0xb0
    7c30:	vldr	d7, [r8, #192]	; 0xc0
    7c34:	vsub.f64	d6, d14, d6
    7c38:	vsub.f64	d7, d7, d11
    7c3c:	vadd.f64	d14, d14, d5
    7c40:	ldr	r4, [r8, #152]	; 0x98
    7c44:	vmla.f64	d14, d6, d7
    7c48:	b	74f0 <main@@Base+0x920>
    7c4c:	vldr	d14, [pc, #860]	; 7fb0 <main@@Base+0x13e0>
    7c50:	b	74f0 <main@@Base+0x920>
    7c54:	vldr	d9, [pc, #860]	; 7fb8 <main@@Base+0x13e8>
    7c58:	b	7214 <main@@Base+0x644>
    7c5c:	ldr	r3, [fp, #1644]	; 0x66c
    7c60:	cmp	r3, #1
    7c64:	beq	7174 <main@@Base+0x5a4>
    7c68:	cmp	r3, #0
    7c6c:	bne	7c7c <main@@Base+0x10ac>
    7c70:	ldr	r3, [fp, #1692]	; 0x69c
    7c74:	cmp	r3, #0
    7c78:	bne	7174 <main@@Base+0x5a4>
    7c7c:	ldr	r3, [r8, #64]	; 0x40
    7c80:	cmp	r3, #0
    7c84:	beq	7174 <main@@Base+0x5a4>
    7c88:	ldr	r3, [r7, #2008]	; 0x7d8
    7c8c:	cmp	r3, #0
    7c90:	blt	88fc <main@@Base+0x1d2c>
    7c94:	ldr	r3, [r7, #2024]	; 0x7e8
    7c98:	cmp	r3, #2
    7c9c:	ble	7d30 <main@@Base+0x1160>
    7ca0:	ldr	r2, [fp, #1640]	; 0x668
    7ca4:	cmp	r2, #0
    7ca8:	bge	8b4c <main@@Base+0x1f7c>
    7cac:	cmp	r3, #10
    7cb0:	bgt	891c <main@@Base+0x1d4c>
    7cb4:	vldr	d7, [r8, #192]	; 0xc0
    7cb8:	vldr	d10, [pc, #768]	; 7fc0 <main@@Base+0x13f0>
    7cbc:	vcmp.f64	d7, d10
    7cc0:	vmrs	APSR_nzcv, fpscr
    7cc4:	beq	7174 <main@@Base+0x5a4>
    7cc8:	vsub.f64	d6, d10, d7
    7ccc:	vldr	d4, [pc, #756]	; 7fc8 <main@@Base+0x13f8>
    7cd0:	vabs.f64	d5, d6
    7cd4:	vmul.f64	d6, d6, d4
    7cd8:	vdiv.f64	d9, d6, d5
    7cdc:	ldr	r3, [r8, #208]	; 0xd0
    7ce0:	ldr	r4, [r8, #200]	; 0xc8
    7ce4:	ldr	r3, [r3]
    7ce8:	vadd.f64	d9, d9, d7
    7cec:	cmp	r3, r4
    7cf0:	bne	8c7c <main@@Base+0x20ac>
    7cf4:	ldr	r3, [r8, #204]	; 0xcc
    7cf8:	cmp	r3, #0
    7cfc:	vldrne	d10, [r8, #168]	; 0xa8
    7d00:	beq	8d60 <main@@Base+0x2190>
    7d04:	bl	65f0 <av_gettime_relative@plt>
    7d08:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    7d0c:	vmov	d7, r0, r1
    7d10:	vdiv.f64	d7, d7, d8
    7d14:	vsub.f64	d6, d10, d7
    7d18:	vstr	d10, [r8, #168]	; 0xa8
    7d1c:	vstr	d9, [r8, #192]	; 0xc0
    7d20:	vstr	d6, [r8, #176]	; 0xb0
    7d24:	vstr	d7, [r8, #184]	; 0xb8
    7d28:	str	r4, [r8, #200]	; 0xc8
    7d2c:	b	7174 <main@@Base+0x5a4>
    7d30:	vldr	d9, [r8, #192]	; 0xc0
    7d34:	vldr	d6, [pc, #652]	; 7fc8 <main@@Base+0x13f8>
    7d38:	vldr	d7, [pc, #656]	; 7fd0 <main@@Base+0x1400>
    7d3c:	vsub.f64	d9, d9, d6
    7d40:	vcmp.f64	d9, d7
    7d44:	vmrs	APSR_nzcv, fpscr
    7d48:	ldr	r3, [r8, #208]	; 0xd0
    7d4c:	ldr	r4, [r8, #200]	; 0xc8
    7d50:	ldr	r3, [r3]
    7d54:	vmovmi.f64	d9, d7
    7d58:	cmp	r3, r4
    7d5c:	bne	894c <main@@Base+0x1d7c>
    7d60:	ldr	r3, [r8, #204]	; 0xcc
    7d64:	cmp	r3, #0
    7d68:	vldrne	d10, [r8, #168]	; 0xa8
    7d6c:	beq	8b64 <main@@Base+0x1f94>
    7d70:	bl	65f0 <av_gettime_relative@plt>
    7d74:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    7d78:	vmov	d7, r0, r1
    7d7c:	vdiv.f64	d7, d7, d8
    7d80:	vsub.f64	d6, d10, d7
    7d84:	vstr	d10, [r8, #168]	; 0xa8
    7d88:	str	r4, [r8, #200]	; 0xc8
    7d8c:	vstr	d9, [r8, #192]	; 0xc0
    7d90:	vstr	d6, [r8, #176]	; 0xb0
    7d94:	vstr	d7, [r8, #184]	; 0xb8
    7d98:	b	7174 <main@@Base+0x5a4>
    7d9c:	vldr	d14, [pc, #564]	; 7fd8 <main@@Base+0x1408>
    7da0:	b	7328 <main@@Base+0x758>
    7da4:	clz	r6, r6
    7da8:	ldr	r3, [r8, #1896]	; 0x768
    7dac:	lsr	r6, r6, #5
    7db0:	cmp	r3, #0
    7db4:	moveq	r6, #0
    7db8:	cmp	r6, #0
    7dbc:	bne	7770 <main@@Base+0xba0>
    7dc0:	add	r0, r4, r4, lsl #1
    7dc4:	add	r4, r4, r0, lsl #2
    7dc8:	lsl	r4, r4, #3
    7dcc:	add	r3, r8, r4
    7dd0:	ldr	r0, [r3, #216]	; 0xd8
    7dd4:	bl	5f9c <av_frame_unref@plt>
    7dd8:	ldr	r3, [sp, #60]	; 0x3c
    7ddc:	add	r4, r4, #8
    7de0:	add	r0, r3, r4
    7de4:	bl	5d14 <avsubtitle_free@plt>
    7de8:	ldr	r3, [r8, #1880]	; 0x758
    7dec:	ldr	r2, [r8, #1892]	; 0x764
    7df0:	add	r3, r3, #1
    7df4:	cmp	r3, r2
    7df8:	moveq	r3, r6
    7dfc:	b	76b4 <main@@Base+0xae4>
    7e00:	bl	65f0 <av_gettime_relative@plt>
    7e04:	ldr	r3, [pc, #468]	; 7fe0 <main@@Base+0x1410>
    7e08:	mov	r5, r1
    7e0c:	add	r3, pc, r3
    7e10:	add	r3, r3, #304	; 0x130
    7e14:	ldrd	r2, [r3]
    7e18:	orrs	r1, r2, r3
    7e1c:	mov	r4, r0
    7e20:	beq	7e4c <main@@Base+0x127c>
    7e24:	mov	r1, #0
    7e28:	subs	ip, r4, r2
    7e2c:	sbc	r3, r5, r3
    7e30:	ldr	r0, [pc, #428]	; 7fe4 <main@@Base+0x1414>
    7e34:	str	ip, [sp, #96]	; 0x60
    7e38:	str	r3, [sp, #100]	; 0x64
    7e3c:	ldrd	r2, [sp, #96]	; 0x60
    7e40:	cmp	r0, r2
    7e44:	sbcs	r3, r1, r3
    7e48:	bge	7728 <main@@Base+0xb58>
    7e4c:	ldr	r3, [fp, #1692]	; 0x69c
    7e50:	ldr	r2, [r7, #2012]	; 0x7dc
    7e54:	cmp	r3, #0
    7e58:	ldr	r1, [r7, #1936]	; 0x790
    7e5c:	ldrne	r9, [fp, #1708]	; 0x6ac
    7e60:	moveq	r9, r3
    7e64:	cmp	r2, #0
    7e68:	ldrne	r6, [r7, #2028]	; 0x7ec
    7e6c:	moveq	r6, r2
    7e70:	cmp	r1, #0
    7e74:	ldrne	r1, [r7, #1956]	; 0x7a4
    7e78:	strne	r1, [sp, #84]	; 0x54
    7e7c:	cmp	r3, #0
    7e80:	beq	8208 <main@@Base+0x1638>
    7e84:	cmp	r2, #0
    7e88:	beq	85f8 <main@@Base+0x1a28>
    7e8c:	ldr	r2, [r8, #112]	; 0x70
    7e90:	ldr	r3, [r8, #104]	; 0x68
    7e94:	ldr	r2, [r2]
    7e98:	cmp	r2, r3
    7e9c:	bne	8584 <main@@Base+0x19b4>
    7ea0:	ldr	r3, [r8, #108]	; 0x6c
    7ea4:	cmp	r3, #0
    7ea8:	vldrne	d10, [r8, #72]	; 0x48
    7eac:	beq	8ab0 <main@@Base+0x1ee0>
    7eb0:	ldr	r2, [r8, #160]	; 0xa0
    7eb4:	ldr	r3, [r8, #152]	; 0x98
    7eb8:	ldr	r2, [r2]
    7ebc:	cmp	r2, r3
    7ec0:	bne	857c <main@@Base+0x19ac>
    7ec4:	ldr	r3, [r8, #156]	; 0x9c
    7ec8:	cmp	r3, #0
    7ecc:	vldrne	d0, [r8, #120]	; 0x78
    7ed0:	beq	8a7c <main@@Base+0x1eac>
    7ed4:	vsub.f64	d10, d10, d0
    7ed8:	mov	r0, r8
    7edc:	bl	14f00 <main@@Base+0xe330>
    7ee0:	ldr	r3, [fp, #1692]	; 0x69c
    7ee4:	cmp	r3, #0
    7ee8:	ldr	r3, [r7, #2012]	; 0x7dc
    7eec:	beq	81e8 <main@@Base+0x1618>
    7ef0:	cmp	r3, #0
    7ef4:	beq	82d0 <main@@Base+0x1700>
    7ef8:	ldr	r0, [pc, #232]	; 7fe8 <main@@Base+0x1418>
    7efc:	add	r0, pc, r0
    7f00:	cmp	r9, #0
    7f04:	add	r2, r9, #1020	; 0x3fc
    7f08:	add	r3, r6, #1020	; 0x3fc
    7f0c:	add	r2, r2, #3
    7f10:	movge	r2, r9
    7f14:	cmp	r6, #0
    7f18:	add	r3, r3, #3
    7f1c:	movge	r3, r6
    7f20:	ldr	r1, [fp, #1444]	; 0x5a4
    7f24:	ldr	sl, [fp, #1880]	; 0x758
    7f28:	ldr	lr, [r1, #792]	; 0x318
    7f2c:	ldr	ip, [r1, #796]	; 0x31c
    7f30:	ldr	r9, [r1, #784]	; 0x310
    7f34:	ldr	r6, [r1, #788]	; 0x314
    7f38:	ldr	r1, [fp, #1876]	; 0x754
    7f3c:	asr	r2, r2, #10
    7f40:	asr	r3, r3, #10
    7f44:	add	r1, sl, r1
    7f48:	strd	r2, [sp, #28]
    7f4c:	str	ip, [sp, #44]	; 0x2c
    7f50:	ldr	r2, [pc, #148]	; 7fec <main@@Base+0x141c>
    7f54:	ldr	ip, [sp, #84]	; 0x54
    7f58:	str	lr, [sp, #40]	; 0x28
    7f5c:	str	ip, [sp, #36]	; 0x24
    7f60:	str	r1, [sp, #24]
    7f64:	str	r0, [sp, #8]
    7f68:	vstr	d0, [sp]
    7f6c:	add	r2, pc, r2
    7f70:	mov	r1, #32
    7f74:	mov	r0, #0
    7f78:	str	r9, [sp, #48]	; 0x30
    7f7c:	str	r6, [sp, #52]	; 0x34
    7f80:	vstr	d10, [sp, #16]
    7f84:	bl	6188 <av_log@plt>
    7f88:	ldr	r2, [sp, #104]	; 0x68
    7f8c:	ldr	r3, [pc, #92]	; 7ff0 <main@@Base+0x1420>
    7f90:	ldr	r3, [r2, r3]
    7f94:	ldr	r0, [r3]
    7f98:	bl	6278 <fflush@plt>
    7f9c:	ldr	r3, [pc, #80]	; 7ff4 <main@@Base+0x1424>
    7fa0:	add	r3, pc, r3
    7fa4:	str	r4, [r3, #304]	; 0x130
    7fa8:	str	r5, [r3, #308]	; 0x134
    7fac:	b	7728 <main@@Base+0xb58>
    7fb0:	andeq	r0, r0, r0
    7fb4:	svcvc	0x00f80000
    7fb8:			; <UNDEFINED> instruction: 0x47ae147b
    7fbc:	svccc	0x00847ae1
    7fc0:	andeq	r0, r0, r0
    7fc4:	svccc	0x00f00000	; IMB
    7fc8:	rscsle	sl, r1, #252, 18	; 0x3f0000
    7fcc:	svccc	0x0050624d
    7fd0:	stclgt	12, cr12, [ip], {205}	; 0xcd
    7fd4:	svccc	0x00eccccc
	...
    7fe0:			; <UNDEFINED> instruction: 0x000312b4
    7fe4:	andeq	r7, r0, pc, lsr #10
    7fe8:	andeq	sp, r1, r4, lsr fp
    7fec:	andeq	sp, r1, r4, asr #25
    7ff0:	andeq	r0, r0, r4, lsr #10
    7ff4:	andeq	r1, r3, r0, lsr #2
    7ff8:	andeq	r8, r0, r2
    7ffc:	andeq	r1, r3, r4, ror r0
    8000:	andeq	r1, r3, r4, asr r0
    8004:	andeq	r0, r0, r1, lsl #8
    8008:			; <UNDEFINED> instruction: 0x00030fb8
    800c:	andeq	r0, r3, r4, ror #30
    8010:	andeq	sp, r1, ip, ror sl
    8014:	andeq	sp, r1, r0, asr #16
    8018:	ldr	r3, [sp, #128]	; 0x80
    801c:	cmp	r3, #768	; 0x300
    8020:	beq	8398 <main@@Base+0x17c8>
    8024:	bls	8128 <main@@Base+0x1558>
    8028:	ldr	r2, [pc, #-44]	; 8004 <main@@Base+0x1434>
    802c:	cmp	r3, r2
    8030:	beq	8328 <main@@Base+0x1758>
    8034:	ldr	r2, [pc, #-68]	; 7ff8 <main@@Base+0x1428>
    8038:	cmp	r3, r2
    803c:	beq	8320 <main@@Base+0x1750>
    8040:	cmp	r3, #1024	; 0x400
    8044:	bne	70e0 <main@@Base+0x510>
    8048:	ldr	r4, [pc, #-84]	; 7ffc <main@@Base+0x142c>
    804c:	add	r4, pc, r4
    8050:	ldr	r3, [r4, #288]	; 0x120
    8054:	cmp	r3, #0
    8058:	bne	8670 <main@@Base+0x1aa0>
    805c:	bl	65f0 <av_gettime_relative@plt>
    8060:	ldr	r3, [pc, #-104]	; 8000 <main@@Base+0x1430>
    8064:	ldr	r2, [pc, #-104]	; 8004 <main@@Base+0x1434>
    8068:	ldr	ip, [sp, #128]	; 0x80
    806c:	add	r3, pc, r3
    8070:	add	r3, r3, #304	; 0x130
    8074:	cmp	ip, r2
    8078:	strd	r0, [r3, #-8]
    807c:	beq	8660 <main@@Base+0x1a90>
    8080:	ldr	r3, [sp, #144]	; 0x90
    8084:	tst	r3, #4
    8088:	beq	70e0 <main@@Base+0x510>
    808c:	vldr	s15, [sp, #148]	; 0x94
    8090:	ldr	r3, [pc, #-144]	; 8008 <main@@Base+0x1438>
    8094:	vcvt.f64.s32	d9, s15
    8098:	add	r3, pc, r3
    809c:	ldr	r4, [r3, #60]	; 0x3c
    80a0:	ldr	r2, [r8, #60]	; 0x3c
    80a4:	cmp	r4, #0
    80a8:	bne	80c0 <main@@Base+0x14f0>
    80ac:	add	r3, r2, #1072	; 0x430
    80b0:	ldrd	r0, [r3]
    80b4:	cmp	r0, #1
    80b8:	sbcs	r3, r1, #0
    80bc:	bge	87c0 <main@@Base+0x1bf0>
    80c0:	ldr	r0, [r2, #16]
    80c4:	bl	5f90 <avio_size@plt>
    80c8:	ldr	r3, [r8, #28]
    80cc:	cmp	r3, #0
    80d0:	bne	70e0 <main@@Base+0x510>
    80d4:	bl	22360 <vc_dispmanx_send_command_reply@@Base+0x724>
    80d8:	vmov	d7, r0, r1
    80dc:	ldr	r3, [r7, #2080]	; 0x820
    80e0:	vmul.f64	d9, d7, d9
    80e4:	vmov	s15, r3
    80e8:	vcvt.f64.s32	d7, s15
    80ec:	vdiv.f64	d7, d9, d7
    80f0:	vmov	r0, r1, d7
    80f4:	bl	224b8 <vc_dispmanx_send_command_reply@@Base+0x87c>
    80f8:	mov	r2, #0
    80fc:	mov	r3, #0
    8100:	mov	ip, #1
    8104:	strd	r0, [r8, #40]	; 0x28
    8108:	ldr	r1, [r8, #32]
    810c:	strd	r2, [r8, #48]	; 0x30
    8110:	orr	r3, r1, #2
    8114:	str	r3, [r8, #32]
    8118:	str	ip, [r8, #28]
    811c:	ldr	r0, [r7, #2136]	; 0x858
    8120:	bl	5dec <SDL_CondSignal@plt>
    8124:	b	70e0 <main@@Base+0x510>
    8128:	cmp	r3, #256	; 0x100
    812c:	beq	8320 <main@@Base+0x1750>
    8130:	cmp	r3, #512	; 0x200
    8134:	bne	70e0 <main@@Base+0x510>
    8138:	ldrb	r3, [sp, #140]	; 0x8c
    813c:	cmp	r3, #3
    8140:	beq	8184 <main@@Base+0x15b4>
    8144:	cmp	r3, #5
    8148:	bne	70e0 <main@@Base+0x510>
    814c:	ldr	r0, [r7, #1920]	; 0x780
    8150:	ldr	r3, [pc, #-332]	; 800c <main@@Base+0x143c>
    8154:	ldr	r1, [sp, #144]	; 0x90
    8158:	ldr	r2, [sp, #148]	; 0x94
    815c:	add	r3, pc, r3
    8160:	cmp	r0, #0
    8164:	str	r1, [r7, #2080]	; 0x820
    8168:	str	r1, [r3, #4]
    816c:	str	r2, [r3]
    8170:	str	r2, [r7, #2084]	; 0x824
    8174:	beq	8184 <main@@Base+0x15b4>
    8178:	bl	61ac <SDL_DestroyTexture@plt>
    817c:	mov	r3, #0
    8180:	str	r3, [r7, #1920]	; 0x780
    8184:	mov	r3, #1
    8188:	str	r3, [r8, #12]
    818c:	b	70e0 <main@@Base+0x510>
    8190:	ldr	r2, [pc, #-392]	; 8010 <main@@Base+0x1440>
    8194:	vstr	d10, [sp, #8]
    8198:	add	r2, pc, r2
    819c:	mov	r1, #56	; 0x38
    81a0:	mov	r0, #0
    81a4:	vstr	d13, [sp]
    81a8:	bl	6188 <av_log@plt>
    81ac:	bl	65f0 <av_gettime_relative@plt>
    81b0:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    81b4:	vmov	d7, r0, r1
    81b8:	ldr	r3, [sp, #80]	; 0x50
    81bc:	vdiv.f64	d10, d7, d8
    81c0:	add	r6, r3, #6080	; 0x17c0
    81c4:	vldr	d7, [r6]
    81c8:	vcmpe.f64	d10, d7
    81cc:	vmrs	APSR_nzcv, fpscr
    81d0:	bpl	7434 <main@@Base+0x864>
    81d4:	vsub.f64	d10, d7, d10
    81d8:	vcmpe.f64	d10, d9
    81dc:	vmrs	APSR_nzcv, fpscr
    81e0:	vmovle.f64	d9, d10
    81e4:	b	76ec <main@@Base+0xb1c>
    81e8:	cmp	r3, #0
    81ec:	beq	8b08 <main@@Base+0x1f38>
    81f0:	ldr	r0, [pc, #-484]	; 8014 <main@@Base+0x1444>
    81f4:	add	r0, pc, r0
    81f8:	b	7f00 <main@@Base+0x1330>
    81fc:	mov	r0, r8
    8200:	bl	164ec <main@@Base+0xf91c>
    8204:	b	76ec <main@@Base+0xb1c>
    8208:	cmp	r2, #0
    820c:	vldreq	d10, [pc, #908]	; 85a0 <main@@Base+0x19d0>
    8210:	beq	7ed8 <main@@Base+0x1308>
    8214:	mov	r0, r8
    8218:	bl	14f00 <main@@Base+0xe330>
    821c:	ldr	r2, [r8, #160]	; 0xa0
    8220:	ldr	r3, [r8, #152]	; 0x98
    8224:	ldr	r2, [r2]
    8228:	cmp	r2, r3
    822c:	bne	8248 <main@@Base+0x1678>
    8230:	ldr	r3, [r8, #156]	; 0x9c
    8234:	cmp	r3, #0
    8238:	vldrne	d10, [r8, #120]	; 0x78
    823c:	beq	8ae4 <main@@Base+0x1f14>
    8240:	vsub.f64	d10, d0, d10
    8244:	b	7ed8 <main@@Base+0x1308>
    8248:	vldr	d10, [pc, #856]	; 85a8 <main@@Base+0x19d8>
    824c:	b	8240 <main@@Base+0x1670>
    8250:	ldr	r2, [pc, #872]	; 85c0 <main@@Base+0x19f0>
    8254:	mov	r1, #32
    8258:	add	r2, pc, r2
    825c:	mov	r0, r4
    8260:	bl	6188 <av_log@plt>
    8264:	ldr	r1, [sp, #104]	; 0x68
    8268:	ldr	r3, [pc, #852]	; 85c4 <main@@Base+0x19f4>
    826c:	ldr	r2, [pc, #852]	; 85c8 <main@@Base+0x19f8>
    8270:	ldr	r5, [r1, r3]
    8274:	add	r2, pc, r2
    8278:	mov	r3, r5
    827c:	mov	r1, #32
    8280:	mov	r0, r4
    8284:	bl	6188 <av_log@plt>
    8288:	ldr	r2, [pc, #828]	; 85cc <main@@Base+0x19fc>
    828c:	mov	r1, #32
    8290:	add	r2, pc, r2
    8294:	mov	r0, r4
    8298:	bl	6188 <av_log@plt>
    829c:	ldr	r2, [pc, #812]	; 85d0 <main@@Base+0x1a00>
    82a0:	mov	r1, #8
    82a4:	add	r2, pc, r2
    82a8:	mov	r0, r4
    82ac:	bl	6188 <av_log@plt>
    82b0:	ldr	r2, [pc, #796]	; 85d4 <main@@Base+0x1a04>
    82b4:	mov	r0, r4
    82b8:	mov	r3, r5
    82bc:	add	r2, pc, r2
    82c0:	mov	r1, #8
    82c4:	bl	6188 <av_log@plt>
    82c8:	mov	r0, #1
    82cc:	bl	6adc <exit@plt>
    82d0:	ldr	r0, [pc, #768]	; 85d8 <main@@Base+0x1a08>
    82d4:	add	r0, pc, r0
    82d8:	cmp	r9, #0
    82dc:	add	r2, r9, #1020	; 0x3fc
    82e0:	add	r3, r6, #1020	; 0x3fc
    82e4:	add	r2, r2, #3
    82e8:	movge	r2, r9
    82ec:	cmp	r6, #0
    82f0:	mov	lr, #0
    82f4:	add	r3, r3, #3
    82f8:	movge	r3, r6
    82fc:	ldr	r1, [fp, #1876]	; 0x754
    8300:	ldr	sl, [fp, #1880]	; 0x758
    8304:	mov	ip, lr
    8308:	asr	r2, r2, #10
    830c:	asr	r3, r3, #10
    8310:	mov	r9, lr
    8314:	mov	r6, lr
    8318:	add	r1, r1, sl
    831c:	b	7f48 <main@@Base+0x1378>
    8320:	mov	r0, r8
    8324:	bl	16c18 <main@@Base+0x10048>
    8328:	ldr	r4, [pc, #684]	; 85dc <main@@Base+0x1a0c>
    832c:	add	r4, pc, r4
    8330:	ldr	r3, [r4, #316]	; 0x13c
    8334:	cmp	r3, #0
    8338:	bne	8320 <main@@Base+0x1750>
    833c:	ldrb	r5, [sp, #144]	; 0x90
    8340:	cmp	r5, #1
    8344:	bne	8048 <main@@Base+0x1478>
    8348:	bl	65f0 <av_gettime_relative@plt>
    834c:	mov	r3, #0
    8350:	add	r4, r4, #320	; 0x140
    8354:	ldr	ip, [r4]
    8358:	ldr	r2, [pc, #640]	; 85e0 <main@@Base+0x1a10>
    835c:	subs	r0, r0, ip
    8360:	str	r0, [sp, #112]	; 0x70
    8364:	ldr	r0, [r4, #4]
    8368:	sbc	r1, r1, r0
    836c:	str	r1, [sp, #116]	; 0x74
    8370:	ldrd	r0, [sp, #112]	; 0x70
    8374:	cmp	r2, r0
    8378:	sbcs	r3, r3, r1
    837c:	blt	8b9c <main@@Base+0x1fcc>
    8380:	bl	12330 <main@@Base+0xb760>
    8384:	mov	r2, #0
    8388:	mov	r3, #0
    838c:	str	r5, [r8, #12]
    8390:	strd	r2, [r4]
    8394:	b	8048 <main@@Base+0x1478>
    8398:	ldr	r3, [pc, #580]	; 85e4 <main@@Base+0x1a14>
    839c:	add	r3, pc, r3
    83a0:	ldr	r3, [r3, #312]	; 0x138
    83a4:	cmp	r3, #0
    83a8:	bne	8320 <main@@Base+0x1750>
    83ac:	ldr	r3, [sp, #148]	; 0x94
    83b0:	cmp	r3, #27
    83b4:	cmpne	r3, #113	; 0x71
    83b8:	moveq	r1, #1
    83bc:	movne	r1, #0
    83c0:	beq	8320 <main@@Base+0x1750>
    83c4:	ldr	r2, [r7, #2080]	; 0x820
    83c8:	cmp	r2, #0
    83cc:	beq	70e0 <main@@Base+0x510>
    83d0:	cmp	r3, #116	; 0x74
    83d4:	beq	8c84 <main@@Base+0x20b4>
    83d8:	ble	853c <main@@Base+0x196c>
    83dc:	ldr	r2, [pc, #516]	; 85e8 <main@@Base+0x1a18>
    83e0:	cmp	r3, r2
    83e4:	beq	8c94 <main@@Base+0x20c4>
    83e8:	bgt	8430 <main@@Base+0x1860>
    83ec:	cmp	r3, #119	; 0x77
    83f0:	beq	8c08 <main@@Base+0x2038>
    83f4:	ble	8684 <main@@Base+0x1ab4>
    83f8:	ldr	r2, [pc, #492]	; 85ec <main@@Base+0x1a1c>
    83fc:	cmp	r3, r2
    8400:	beq	8768 <main@@Base+0x1b98>
    8404:	add	r2, r2, #3
    8408:	cmp	r3, r2
    840c:	bne	70e0 <main@@Base+0x510>
    8410:	ldr	r3, [r8, #60]	; 0x3c
    8414:	ldr	r3, [r3, #1156]	; 0x484
    8418:	cmp	r3, #1
    841c:	bls	89fc <main@@Base+0x1e2c>
    8420:	mvn	r1, #0
    8424:	mov	r0, r8
    8428:	bl	1583c <main@@Base+0xec6c>
    842c:	b	70e0 <main@@Base+0x510>
    8430:	ldr	r2, [pc, #440]	; 85f0 <main@@Base+0x1a20>
    8434:	cmp	r3, r2
    8438:	beq	8b2c <main@@Base+0x1f5c>
    843c:	bgt	869c <main@@Base+0x1acc>
    8440:	sub	r2, r2, #2
    8444:	cmp	r3, r2
    8448:	beq	8788 <main@@Base+0x1bb8>
    844c:	add	r2, r2, #1
    8450:	cmp	r3, r2
    8454:	vldreq	d9, [pc, #340]	; 85b0 <main@@Base+0x19e0>
    8458:	bne	70e0 <main@@Base+0x510>
    845c:	ldr	r3, [pc, #400]	; 85f4 <main@@Base+0x1a24>
    8460:	add	r3, pc, r3
    8464:	ldr	r3, [r3, #60]	; 0x3c
    8468:	cmp	r3, #0
    846c:	beq	896c <main@@Base+0x1d9c>
    8470:	ldr	r3, [r7, #2008]	; 0x7d8
    8474:	cmp	r3, #0
    8478:	blt	8bb4 <main@@Base+0x1fe4>
    847c:	ldr	r2, [r8, #1900]	; 0x76c
    8480:	ldr	r3, [r8, #1880]	; 0x758
    8484:	cmp	r2, #0
    8488:	beq	8bb4 <main@@Base+0x1fe4>
    848c:	mov	r2, #104	; 0x68
    8490:	mla	r3, r2, r3, r8
    8494:	ldr	r2, [r8, #1912]	; 0x778
    8498:	ldr	r1, [r3, #256]	; 0x100
    849c:	ldr	r2, [r2, #28]
    84a0:	cmp	r1, r2
    84a4:	bne	8bb4 <main@@Base+0x1fe4>
    84a8:	add	r3, r3, #280	; 0x118
    84ac:	ldrd	r0, [r3]
    84b0:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    84b4:	vmov	d10, r0, r1
    84b8:	vcmpe.f64	d10, #0.0
    84bc:	vmrs	APSR_nzcv, fpscr
    84c0:	bmi	8bb4 <main@@Base+0x1fe4>
    84c4:	vcmpe.f64	d10, #0.0
    84c8:	vmrs	APSR_nzcv, fpscr
    84cc:	bmi	8cb4 <main@@Base+0x20e4>
    84d0:	ldr	r3, [r8, #60]	; 0x3c
    84d4:	add	r3, r3, #1088	; 0x440
    84d8:	ldrd	r0, [r3, #-8]
    84dc:	orrs	r3, r0, r1
    84e0:	beq	8ba8 <main@@Base+0x1fd8>
    84e4:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    84e8:	vldr	d7, [pc, #200]	; 85b8 <main@@Base+0x19e8>
    84ec:	vmov	d6, r0, r1
    84f0:	vmul.f64	d7, d6, d7
    84f4:	vmul.f64	d9, d7, d9
    84f8:	ldr	r3, [r8, #28]
    84fc:	cmp	r3, #0
    8500:	bne	70e0 <main@@Base+0x510>
    8504:	vadd.f64	d7, d9, d10
    8508:	vmov	r0, r1, d7
    850c:	bl	224b8 <vc_dispmanx_send_command_reply@@Base+0x87c>
    8510:	strd	r0, [r8, #40]	; 0x28
    8514:	vmov	r0, r1, d9
    8518:	bl	224b8 <vc_dispmanx_send_command_reply@@Base+0x87c>
    851c:	mov	r2, #1
    8520:	ldr	r3, [r8, #32]
    8524:	strd	r0, [r8, #48]	; 0x30
    8528:	orr	r3, r3, #2
    852c:	strd	r2, [r8, #28]
    8530:	ldr	r0, [r7, #2136]	; 0x858
    8534:	bl	5dec <SDL_CondSignal@plt>
    8538:	b	70e0 <main@@Base+0x510>
    853c:	cmp	r3, #99	; 0x63
    8540:	beq	8c44 <main@@Base+0x2074>
    8544:	ble	86e0 <main@@Base+0x1b10>
    8548:	cmp	r3, #109	; 0x6d
    854c:	beq	8c68 <main@@Base+0x2098>
    8550:	ble	86c8 <main@@Base+0x1af8>
    8554:	cmp	r3, #112	; 0x70
    8558:	beq	8714 <main@@Base+0x1b44>
    855c:	cmp	r3, #115	; 0x73
    8560:	bne	70e0 <main@@Base+0x510>
    8564:	ldr	r3, [r8, #16]
    8568:	cmp	r3, #0
    856c:	bne	8a04 <main@@Base+0x1e34>
    8570:	mov	r3, #1
    8574:	str	r3, [r7, #2096]	; 0x830
    8578:	b	70e0 <main@@Base+0x510>
    857c:	vldr	d0, [pc, #36]	; 85a8 <main@@Base+0x19d8>
    8580:	b	7ed4 <main@@Base+0x1304>
    8584:	vldr	d10, [pc, #28]	; 85a8 <main@@Base+0x19d8>
    8588:	b	7eb0 <main@@Base+0x12e0>
    858c:	ldr	r2, [sp, #104]	; 0x68
    8590:	add	r4, r8, #1048576	; 0x100000
    8594:	ldr	r5, [r2, r3]
    8598:	add	r4, r4, #6016	; 0x1780
    859c:	b	71e8 <main@@Base+0x618>
	...
    85ac:	svcvc	0x00f80000
    85b0:	andeq	r0, r0, r0
    85b4:	subgt	r0, lr, r0
    85b8:	andeq	r0, r0, r0
    85bc:	svccc	0x00c00000
    85c0:	strdeq	sp, [r1], -r8
    85c4:	andeq	r0, r0, r4, lsr r5
    85c8:	strdeq	sp, [r1], -r4
    85cc:	andeq	sp, r1, r8, lsr #20
    85d0:	muleq	r1, r4, r7
    85d4:	andeq	sp, r1, r0, lsr #15
    85d8:	andeq	sp, r1, r4, asr r7
    85dc:	muleq	r3, r4, sp
    85e0:	andeq	sl, r7, r0, lsr #2
    85e4:	andeq	r0, r3, r4, lsr #26
    85e8:	andmi	r0, r0, pc, asr #32
    85ec:	andmi	r0, r0, fp, asr #32
    85f0:	andmi	r0, r0, r2, asr r0
    85f4:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
    85f8:	mov	r0, r8
    85fc:	bl	14f00 <main@@Base+0xe330>
    8600:	ldr	r2, [r8, #112]	; 0x70
    8604:	ldr	r3, [r8, #104]	; 0x68
    8608:	ldr	r2, [r2]
    860c:	cmp	r2, r3
    8610:	bne	8248 <main@@Base+0x1678>
    8614:	ldr	r3, [r8, #108]	; 0x6c
    8618:	cmp	r3, #0
    861c:	vldrne	d10, [r8, #72]	; 0x48
    8620:	bne	8240 <main@@Base+0x1670>
    8624:	vstr	d0, [sp, #88]	; 0x58
    8628:	bl	65f0 <av_gettime_relative@plt>
    862c:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    8630:	vmov	d7, r0, r1
    8634:	vldr	d6, [r8, #88]	; 0x58
    8638:	vdiv.f64	d4, d7, d8
    863c:	vldr	d10, [r8, #80]	; 0x50
    8640:	vldr	d7, [r8, #96]	; 0x60
    8644:	vldr	d3, [pc, #988]	; 8a28 <main@@Base+0x1e58>
    8648:	vsub.f64	d6, d4, d6
    864c:	vadd.f64	d10, d4, d10
    8650:	vsub.f64	d7, d7, d3
    8654:	vldr	d0, [sp, #88]	; 0x58
    8658:	vmla.f64	d10, d6, d7
    865c:	b	8240 <main@@Base+0x1670>
    8660:	ldrb	r3, [sp, #144]	; 0x90
    8664:	cmp	r3, #3
    8668:	bne	70e0 <main@@Base+0x510>
    866c:	b	808c <main@@Base+0x14bc>
    8670:	mov	r0, #1
    8674:	bl	68f0 <SDL_ShowCursor@plt>
    8678:	mov	r3, #0
    867c:	str	r3, [r4, #288]	; 0x120
    8680:	b	805c <main@@Base+0x148c>
    8684:	cmp	r3, #118	; 0x76
    8688:	bne	70e0 <main@@Base+0x510>
    868c:	mov	r1, #0
    8690:	mov	r0, r8
    8694:	bl	16d00 <main@@Base+0x10130>
    8698:	b	70e0 <main@@Base+0x510>
    869c:	ldr	r2, [pc, #956]	; 8a60 <main@@Base+0x1e90>
    86a0:	cmp	r3, r2
    86a4:	beq	87ac <main@@Base+0x1bdc>
    86a8:	add	r2, r2, #1
    86ac:	cmp	r3, r2
    86b0:	bne	70e0 <main@@Base+0x510>
    86b4:	add	r0, r8, #5824	; 0x16c0
    86b8:	add	r0, r0, #36	; 0x24
    86bc:	mov	r1, #1
    86c0:	bl	139bc <main@@Base+0xcdec>
    86c4:	b	70e0 <main@@Base+0x510>
    86c8:	cmp	r3, #102	; 0x66
    86cc:	bne	70e0 <main@@Base+0x510>
    86d0:	bl	12330 <main@@Base+0xb760>
    86d4:	mov	r3, #1
    86d8:	str	r3, [r8, #12]
    86dc:	b	70e0 <main@@Base+0x510>
    86e0:	cmp	r3, #48	; 0x30
    86e4:	beq	86b4 <main@@Base+0x1ae4>
    86e8:	ble	870c <main@@Base+0x1b3c>
    86ec:	cmp	r3, #57	; 0x39
    86f0:	beq	87ac <main@@Base+0x1bdc>
    86f4:	cmp	r3, #97	; 0x61
    86f8:	bne	70e0 <main@@Base+0x510>
    86fc:	mov	r1, #1
    8700:	mov	r0, r8
    8704:	bl	16d00 <main@@Base+0x10130>
    8708:	b	70e0 <main@@Base+0x510>
    870c:	cmp	r3, #32
    8710:	bne	70e0 <main@@Base+0x510>
    8714:	mov	r0, r8
    8718:	bl	164ec <main@@Base+0xf91c>
    871c:	mov	r3, #0
    8720:	str	r3, [r7, #2096]	; 0x830
    8724:	b	70e0 <main@@Base+0x510>
    8728:	bl	63a4 <SDL_GetError@plt>
    872c:	ldr	r2, [pc, #816]	; 8a64 <main@@Base+0x1e94>
    8730:	mov	r3, r0
    8734:	add	r2, pc, r2
    8738:	mov	r0, r5
    873c:	mov	r1, #24
    8740:	bl	6188 <av_log@plt>
    8744:	mov	r2, r5
    8748:	mvn	r1, #0
    874c:	ldr	r0, [r4, #204]	; 0xcc
    8750:	bl	6620 <SDL_CreateRenderer@plt>
    8754:	cmp	r0, #0
    8758:	mov	r5, r0
    875c:	str	r0, [r4, #176]	; 0xb0
    8760:	beq	6e10 <main@@Base+0x240>
    8764:	b	6dc8 <main@@Base+0x1f8>
    8768:	ldr	r3, [r8, #60]	; 0x3c
    876c:	ldr	r3, [r3, #1156]	; 0x484
    8770:	cmp	r3, #1
    8774:	bls	8d58 <main@@Base+0x2188>
    8778:	mov	r1, #1
    877c:	mov	r0, r8
    8780:	bl	1583c <main@@Base+0xec6c>
    8784:	b	70e0 <main@@Base+0x510>
    8788:	ldr	r3, [pc, #728]	; 8a68 <main@@Base+0x1e98>
    878c:	add	r3, pc, r3
    8790:	vldr	s15, [r3, #76]	; 0x4c
    8794:	vcmp.f32	s15, #0.0
    8798:	vmrs	APSR_nzcv, fpscr
    879c:	vnegne.f32	s15, s15
    87a0:	vcvtne.f64.f32	d9, s15
    87a4:	vldreq	d9, [pc, #644]	; 8a30 <main@@Base+0x1e60>
    87a8:	b	845c <main@@Base+0x188c>
    87ac:	add	r0, r8, #5824	; 0x16c0
    87b0:	add	r0, r0, #36	; 0x24
    87b4:	mvn	r1, #0
    87b8:	bl	139bc <main@@Base+0xcdec>
    87bc:	b	70e0 <main@@Base+0x510>
    87c0:	ldr	r2, [pc, #676]	; 8a6c <main@@Base+0x1e9c>
    87c4:	mov	r3, #0
    87c8:	bl	223d4 <vc_dispmanx_send_command_reply@@Base+0x798>
    87cc:	ldr	r3, [r7, #2080]	; 0x820
    87d0:	vmov	s15, r0
    87d4:	vmov	s13, r3
    87d8:	vcvt.f64.s32	d6, s13
    87dc:	vcvt.f64.s32	d7, s15
    87e0:	vdiv.f64	d10, d9, d6
    87e4:	vmul.f64	d7, d7, d10
    87e8:	vcvt.s32.f64	s15, d7
    87ec:	mov	r1, #60	; 0x3c
    87f0:	vstr	s15, [sp, #64]	; 0x40
    87f4:	str	r0, [sp, #84]	; 0x54
    87f8:	bl	21ff4 <vc_dispmanx_send_command_reply@@Base+0x3b8>
    87fc:	ldr	r0, [sp, #84]	; 0x54
    8800:	str	r1, [sp, #28]
    8804:	mov	r1, #3600	; 0xe10
    8808:	bl	21ff4 <vc_dispmanx_send_command_reply@@Base+0x3b8>
    880c:	mov	r0, r1
    8810:	mov	r1, #60	; 0x3c
    8814:	bl	21dd4 <vc_dispmanx_send_command_reply@@Base+0x198>
    8818:	mov	r1, #3600	; 0xe10
    881c:	str	r0, [sp, #24]
    8820:	ldr	r0, [sp, #84]	; 0x54
    8824:	bl	21dd4 <vc_dispmanx_send_command_reply@@Base+0x198>
    8828:	mov	r1, #60	; 0x3c
    882c:	str	r0, [sp, #20]
    8830:	ldr	r0, [sp, #64]	; 0x40
    8834:	bl	21ff4 <vc_dispmanx_send_command_reply@@Base+0x3b8>
    8838:	ldr	r0, [sp, #64]	; 0x40
    883c:	str	r1, [sp, #16]
    8840:	mov	r1, #3600	; 0xe10
    8844:	bl	21ff4 <vc_dispmanx_send_command_reply@@Base+0x3b8>
    8848:	mov	r0, r1
    884c:	mov	r1, #60	; 0x3c
    8850:	bl	21dd4 <vc_dispmanx_send_command_reply@@Base+0x198>
    8854:	mov	r1, #3600	; 0xe10
    8858:	str	r0, [sp, #12]
    885c:	ldr	r0, [sp, #64]	; 0x40
    8860:	bl	21dd4 <vc_dispmanx_send_command_reply@@Base+0x198>
    8864:	vldr	d7, [pc, #460]	; 8a38 <main@@Base+0x1e68>
    8868:	vmul.f64	d7, d10, d7
    886c:	ldr	r2, [pc, #508]	; 8a70 <main@@Base+0x1ea0>
    8870:	vstr	d7, [sp]
    8874:	add	r2, pc, r2
    8878:	str	r0, [sp, #8]
    887c:	mov	r1, #32
    8880:	mov	r0, r4
    8884:	bl	6188 <av_log@plt>
    8888:	ldr	r4, [r8, #60]	; 0x3c
    888c:	add	r4, r4, #1072	; 0x430
    8890:	ldrd	r0, [r4]
    8894:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    8898:	vmov	d7, r0, r1
    889c:	vmul.f64	d7, d7, d10
    88a0:	vmov	r0, r1, d7
    88a4:	bl	224b8 <vc_dispmanx_send_command_reply@@Base+0x87c>
    88a8:	ldrd	r2, [r4, #-8]
    88ac:	cmp	r3, #-2147483648	; 0x80000000
    88b0:	cmpeq	r2, #0
    88b4:	beq	88c0 <main@@Base+0x1cf0>
    88b8:	adds	r0, r0, r2
    88bc:	adc	r1, r1, r3
    88c0:	ldr	r3, [r8, #28]
    88c4:	cmp	r3, #0
    88c8:	bne	70e0 <main@@Base+0x510>
    88cc:	mov	r2, #0
    88d0:	mov	r3, #0
    88d4:	mov	ip, #1
    88d8:	strd	r0, [r8, #40]	; 0x28
    88dc:	ldr	r1, [r8, #32]
    88e0:	strd	r2, [r8, #48]	; 0x30
    88e4:	bic	r3, r1, #2
    88e8:	str	r3, [r8, #32]
    88ec:	str	ip, [r8, #28]
    88f0:	ldr	r0, [r7, #2136]	; 0x858
    88f4:	bl	5dec <SDL_CondSignal@plt>
    88f8:	b	70e0 <main@@Base+0x510>
    88fc:	ldr	r3, [fp, #1640]	; 0x668
    8900:	cmp	r3, #0
    8904:	blt	891c <main@@Base+0x1d4c>
    8908:	ldr	r2, [fp, #1704]	; 0x6a8
    890c:	cmp	r2, #2
    8910:	ble	7d30 <main@@Base+0x1160>
    8914:	cmp	r2, #10
    8918:	ble	7cb4 <main@@Base+0x10e4>
    891c:	vldr	d9, [r8, #192]	; 0xc0
    8920:	vldr	d6, [pc, #280]	; 8a40 <main@@Base+0x1e70>
    8924:	vldr	d7, [pc, #284]	; 8a48 <main@@Base+0x1e78>
    8928:	vadd.f64	d9, d9, d6
    892c:	vcmpe.f64	d9, d7
    8930:	vmrs	APSR_nzcv, fpscr
    8934:	ldr	r3, [r8, #208]	; 0xd0
    8938:	ldr	r4, [r8, #200]	; 0xc8
    893c:	ldr	r3, [r3]
    8940:	vmovpl.f64	d9, d7
    8944:	cmp	r3, r4
    8948:	beq	7d60 <main@@Base+0x1190>
    894c:	vldr	d10, [pc, #252]	; 8a50 <main@@Base+0x1e80>
    8950:	b	7d70 <main@@Base+0x11a0>
    8954:	ldr	r2, [pc, #280]	; 8a74 <main@@Base+0x1ea4>
    8958:	mov	r1, #24
    895c:	add	r2, pc, r2
    8960:	mov	r0, #0
    8964:	bl	6188 <av_log@plt>
    8968:	b	7058 <main@@Base+0x488>
    896c:	mov	r0, r8
    8970:	bl	14f00 <main@@Base+0xe330>
    8974:	vcmp.f64	d0, d0
    8978:	vmrs	APSR_nzcv, fpscr
    897c:	bvs	8d98 <main@@Base+0x21c8>
    8980:	ldr	r3, [r8, #60]	; 0x3c
    8984:	vadd.f64	d10, d9, d0
    8988:	add	r3, r3, #1072	; 0x430
    898c:	ldrd	r0, [r3, #-8]
    8990:	cmp	r1, #-2147483648	; 0x80000000
    8994:	cmpeq	r0, #0
    8998:	beq	89b4 <main@@Base+0x1de4>
    899c:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    89a0:	vmov	d7, r0, r1
    89a4:	vdiv.f64	d7, d7, d8
    89a8:	vcmp.f64	d10, d7
    89ac:	vmrs	APSR_nzcv, fpscr
    89b0:	vmovmi.f64	d10, d7
    89b4:	ldr	r3, [r8, #28]
    89b8:	cmp	r3, #0
    89bc:	bne	70e0 <main@@Base+0x510>
    89c0:	vmul.f64	d7, d10, d8
    89c4:	vmov	r0, r1, d7
    89c8:	bl	224b8 <vc_dispmanx_send_command_reply@@Base+0x87c>
    89cc:	vmul.f64	d7, d9, d8
    89d0:	strd	r0, [r8, #40]	; 0x28
    89d4:	vmov	r0, r1, d7
    89d8:	bl	224b8 <vc_dispmanx_send_command_reply@@Base+0x87c>
    89dc:	mov	r2, #1
    89e0:	ldr	r3, [r8, #32]
    89e4:	strd	r0, [r8, #48]	; 0x30
    89e8:	bic	r3, r3, #2
    89ec:	strd	r2, [r8, #28]
    89f0:	ldr	r0, [r7, #2136]	; 0x858
    89f4:	bl	5dec <SDL_CondSignal@plt>
    89f8:	b	70e0 <main@@Base+0x510>
    89fc:	vldr	d9, [pc, #84]	; 8a58 <main@@Base+0x1e88>
    8a00:	b	845c <main@@Base+0x188c>
    8a04:	mov	r0, r8
    8a08:	bl	164ec <main@@Base+0xf91c>
    8a0c:	b	8570 <main@@Base+0x19a0>
    8a10:	ldr	r1, [pc, #96]	; 8a78 <main@@Base+0x1ea8>
    8a14:	mov	r0, r4
    8a18:	mov	r2, #1
    8a1c:	add	r1, pc, r1
    8a20:	bl	5edc <SDL_setenv@plt>
    8a24:	b	6e4c <main@@Base+0x27c>
    8a28:	andeq	r0, r0, r0
    8a2c:	svccc	0x00f00000	; IMB
    8a30:	andeq	r0, r0, r0
    8a34:	eorgt	r0, r4, r0
    8a38:	andeq	r0, r0, r0
    8a3c:	subsmi	r0, r9, r0
    8a40:	rscsle	sl, r1, #252, 18	; 0x3f0000
    8a44:	svccc	0x0050624d
    8a48:	addgt	r5, pc, #10496	; 0x2900
    8a4c:	svccc	0x00f028f5
    8a50:	andeq	r0, r0, r0
    8a54:	svcvc	0x00f80000
    8a58:	andeq	r0, r0, r0
    8a5c:	addgt	ip, r2, r0
    8a60:	andmi	r0, r0, r4, asr r0
    8a64:	andeq	sp, r1, ip, ror #7
    8a68:	andeq	r0, r3, r4, asr #17
    8a6c:	andeq	r4, pc, r0, asr #4
    8a70:	strdeq	sp, [r1], -ip
    8a74:	andeq	sp, r1, r4, ror #4
    8a78:	andeq	fp, r1, r4, ror #25
    8a7c:	bl	65f0 <av_gettime_relative@plt>
    8a80:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    8a84:	vmov	d7, r0, r1
    8a88:	vldr	d6, [r8, #136]	; 0x88
    8a8c:	vdiv.f64	d4, d7, d8
    8a90:	vldr	d0, [r8, #128]	; 0x80
    8a94:	vldr	d7, [r8, #144]	; 0x90
    8a98:	vldr	d3, [pc, #792]	; 8db8 <main@@Base+0x21e8>
    8a9c:	vsub.f64	d6, d4, d6
    8aa0:	vadd.f64	d0, d4, d0
    8aa4:	vsub.f64	d7, d7, d3
    8aa8:	vmla.f64	d0, d6, d7
    8aac:	b	7ed4 <main@@Base+0x1304>
    8ab0:	bl	65f0 <av_gettime_relative@plt>
    8ab4:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    8ab8:	vmov	d7, r0, r1
    8abc:	vldr	d6, [r8, #88]	; 0x58
    8ac0:	vdiv.f64	d10, d7, d8
    8ac4:	vldr	d5, [r8, #80]	; 0x50
    8ac8:	vldr	d7, [r8, #96]	; 0x60
    8acc:	vldr	d4, [pc, #740]	; 8db8 <main@@Base+0x21e8>
    8ad0:	vsub.f64	d6, d10, d6
    8ad4:	vsub.f64	d7, d7, d4
    8ad8:	vadd.f64	d10, d10, d5
    8adc:	vmla.f64	d10, d6, d7
    8ae0:	b	7eb0 <main@@Base+0x12e0>
    8ae4:	vstr	d0, [sp, #88]	; 0x58
    8ae8:	bl	65f0 <av_gettime_relative@plt>
    8aec:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    8af0:	vmov	d7, r0, r1
    8af4:	vldr	d6, [r8, #136]	; 0x88
    8af8:	vdiv.f64	d4, d7, d8
    8afc:	vldr	d10, [r8, #128]	; 0x80
    8b00:	vldr	d7, [r8, #144]	; 0x90
    8b04:	b	8644 <main@@Base+0x1a74>
    8b08:	ldr	r0, [pc, #728]	; 8de8 <main@@Base+0x2218>
    8b0c:	add	r0, pc, r0
    8b10:	b	82d8 <main@@Base+0x1708>
    8b14:	ldr	r2, [pc, #720]	; 8dec <main@@Base+0x221c>
    8b18:	ldr	r3, [r4, #20]
    8b1c:	add	r2, pc, r2
    8b20:	mov	r1, #40	; 0x28
    8b24:	bl	6188 <av_log@plt>
    8b28:	b	6de4 <main@@Base+0x214>
    8b2c:	vldr	d9, [pc, #652]	; 8dc0 <main@@Base+0x21f0>
    8b30:	b	845c <main@@Base+0x188c>
    8b34:	ldr	r2, [pc, #692]	; 8df0 <main@@Base+0x2220>
    8b38:	mov	r1, #24
    8b3c:	add	r2, pc, r2
    8b40:	mov	r0, #0
    8b44:	bl	6188 <av_log@plt>
    8b48:	b	7044 <main@@Base+0x474>
    8b4c:	ldr	r2, [fp, #1704]	; 0x6a8
    8b50:	cmp	r2, #2
    8b54:	ble	7d30 <main@@Base+0x1160>
    8b58:	cmp	r3, #10
    8b5c:	bgt	8914 <main@@Base+0x1d44>
    8b60:	b	7cb4 <main@@Base+0x10e4>
    8b64:	bl	65f0 <av_gettime_relative@plt>
    8b68:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    8b6c:	vmov	d7, r0, r1
    8b70:	vldr	d6, [r8, #184]	; 0xb8
    8b74:	vdiv.f64	d4, d7, d8
    8b78:	vldr	d10, [r8, #176]	; 0xb0
    8b7c:	vldr	d7, [r8, #192]	; 0xc0
    8b80:	vldr	d3, [pc, #560]	; 8db8 <main@@Base+0x21e8>
    8b84:	vsub.f64	d6, d4, d6
    8b88:	vadd.f64	d10, d4, d10
    8b8c:	vsub.f64	d7, d7, d3
    8b90:	ldr	r4, [r8, #200]	; 0xc8
    8b94:	vmla.f64	d10, d6, d7
    8b98:	b	7d70 <main@@Base+0x11a0>
    8b9c:	bl	65f0 <av_gettime_relative@plt>
    8ba0:	strd	r0, [r4]
    8ba4:	b	8048 <main@@Base+0x1478>
    8ba8:	vldr	d7, [pc, #536]	; 8dc8 <main@@Base+0x21f8>
    8bac:	vmul.f64	d9, d9, d7
    8bb0:	b	84f8 <main@@Base+0x1928>
    8bb4:	ldr	r3, [fp, #1640]	; 0x668
    8bb8:	cmp	r3, #0
    8bbc:	blt	8cb4 <main@@Base+0x20e4>
    8bc0:	ldr	r3, [fp, #1212]	; 0x4bc
    8bc4:	ldr	r2, [fp, #1192]	; 0x4a8
    8bc8:	cmp	r3, #0
    8bcc:	beq	8dac <main@@Base+0x21dc>
    8bd0:	mov	r3, #104	; 0x68
    8bd4:	mul	r3, r3, r2
    8bd8:	ldr	r2, [fp, #1224]	; 0x4c8
    8bdc:	add	r1, r8, r3
    8be0:	ldr	r1, [r1, #3664]	; 0xe50
    8be4:	ldr	r2, [r2, #28]
    8be8:	cmp	r1, r2
    8bec:	bne	8dac <main@@Base+0x21dc>
    8bf0:	add	r2, r8, #3632	; 0xe30
    8bf4:	add	r3, r2, r3
    8bf8:	ldrd	r0, [r3, #56]	; 0x38
    8bfc:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    8c00:	vmov	d10, r0, r1
    8c04:	b	84c4 <main@@Base+0x18f4>
    8c08:	ldr	r4, [fp, #1884]	; 0x75c
    8c0c:	cmp	r4, #0
    8c10:	bne	8cdc <main@@Base+0x210c>
    8c14:	ldr	r2, [pc, #472]	; 8df4 <main@@Base+0x2224>
    8c18:	ldr	r3, [r7, #2100]	; 0x834
    8c1c:	add	r2, pc, r2
    8c20:	ldr	r2, [r2, #8]
    8c24:	sub	r1, r2, #1
    8c28:	cmp	r3, r1
    8c2c:	bge	8cdc <main@@Base+0x210c>
    8c30:	add	r3, r3, #1
    8c34:	cmp	r2, r3
    8c38:	movle	r3, r4
    8c3c:	str	r3, [r7, #2100]	; 0x834
    8c40:	b	70e0 <main@@Base+0x510>
    8c44:	mov	r0, r8
    8c48:	bl	16d00 <main@@Base+0x10130>
    8c4c:	mov	r0, r8
    8c50:	mov	r1, #1
    8c54:	bl	16d00 <main@@Base+0x10130>
    8c58:	mov	r1, #3
    8c5c:	mov	r0, r8
    8c60:	bl	16d00 <main@@Base+0x10130>
    8c64:	b	70e0 <main@@Base+0x510>
    8c68:	ldr	r3, [fp, #1768]	; 0x6e8
    8c6c:	clz	r3, r3
    8c70:	lsr	r3, r3, #5
    8c74:	str	r3, [fp, #1768]	; 0x6e8
    8c78:	b	70e0 <main@@Base+0x510>
    8c7c:	vldr	d10, [pc, #332]	; 8dd0 <main@@Base+0x2200>
    8c80:	b	7d04 <main@@Base+0x1134>
    8c84:	mov	r1, #3
    8c88:	mov	r0, r8
    8c8c:	bl	16d00 <main@@Base+0x10130>
    8c90:	b	70e0 <main@@Base+0x510>
    8c94:	ldr	r3, [pc, #348]	; 8df8 <main@@Base+0x2228>
    8c98:	add	r3, pc, r3
    8c9c:	vldr	s18, [r3, #76]	; 0x4c
    8ca0:	vcmp.f32	s18, #0.0
    8ca4:	vmrs	APSR_nzcv, fpscr
    8ca8:	vcvtne.f64.f32	d9, s18
    8cac:	vldreq	d9, [pc, #292]	; 8dd8 <main@@Base+0x2208>
    8cb0:	b	845c <main@@Base+0x188c>
    8cb4:	mov	r2, #1
    8cb8:	ldr	r3, [r8, #60]	; 0x3c
    8cbc:	str	r2, [sp]
    8cc0:	ldr	r0, [r3, #16]
    8cc4:	mov	r2, #0
    8cc8:	mov	r3, #0
    8ccc:	bl	5f18 <avio_seek@plt>
    8cd0:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    8cd4:	vmov	d10, r0, r1
    8cd8:	b	84d0 <main@@Base+0x1900>
    8cdc:	mov	r3, #0
    8ce0:	mov	r1, r4
    8ce4:	str	r3, [r7, #2100]	; 0x834
    8ce8:	add	r0, r1, #1
    8cec:	mov	r1, #3
    8cf0:	bl	21ff4 <vc_dispmanx_send_command_reply@@Base+0x3b8>
    8cf4:	cmp	r4, r1
    8cf8:	beq	70e0 <main@@Base+0x510>
    8cfc:	cmp	r1, #0
    8d00:	bne	8d28 <main@@Base+0x2158>
    8d04:	ldr	r3, [r7, #2012]	; 0x7dc
    8d08:	cmp	r3, #0
    8d0c:	beq	8ce8 <main@@Base+0x2118>
    8d10:	cmp	r4, #0
    8d14:	beq	70e0 <main@@Base+0x510>
    8d18:	mov	r3, #1
    8d1c:	str	r3, [r8, #12]
    8d20:	str	r1, [fp, #1884]	; 0x75c
    8d24:	b	70e0 <main@@Base+0x510>
    8d28:	ldr	r3, [fp, #1692]	; 0x69c
    8d2c:	cmp	r3, #0
    8d30:	beq	8ce8 <main@@Base+0x2118>
    8d34:	b	8d18 <main@@Base+0x2148>
    8d38:	bl	63a4 <SDL_GetError@plt>
    8d3c:	ldr	r2, [pc, #184]	; 8dfc <main@@Base+0x222c>
    8d40:	mov	r3, r0
    8d44:	add	r2, pc, r2
    8d48:	mov	r0, r4
    8d4c:	mov	r1, #8
    8d50:	bl	6188 <av_log@plt>
    8d54:	b	774c <main@@Base+0xb7c>
    8d58:	vldr	d9, [pc, #128]	; 8de0 <main@@Base+0x2210>
    8d5c:	b	845c <main@@Base+0x188c>
    8d60:	bl	65f0 <av_gettime_relative@plt>
    8d64:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    8d68:	vmov	d7, r0, r1
    8d6c:	vldr	d6, [r8, #184]	; 0xb8
    8d70:	vdiv.f64	d4, d7, d8
    8d74:	vldr	d5, [r8, #176]	; 0xb0
    8d78:	vldr	d7, [r8, #192]	; 0xc0
    8d7c:	vsub.f64	d6, d4, d6
    8d80:	vsub.f64	d7, d7, d10
    8d84:	vadd.f64	d5, d4, d5
    8d88:	vmla.f64	d5, d6, d7
    8d8c:	ldr	r4, [r8, #200]	; 0xc8
    8d90:	vmov.f64	d10, d5
    8d94:	b	7d04 <main@@Base+0x1134>
    8d98:	ldrd	r0, [r8, #40]	; 0x28
    8d9c:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    8da0:	vmov	d7, r0, r1
    8da4:	vdiv.f64	d0, d7, d8
    8da8:	b	8980 <main@@Base+0x1db0>
    8dac:	mvn	r0, #0
    8db0:	mvn	r1, #0
    8db4:	b	8bfc <main@@Base+0x202c>
    8db8:	andeq	r0, r0, r0
    8dbc:	svccc	0x00f00000	; IMB
    8dc0:	andeq	r0, r0, r0
    8dc4:	submi	r0, lr, r0
    8dc8:	andeq	r0, r0, r0
    8dcc:	tstmi	r5, r0, lsl #18	; <UNPREDICTABLE>
    8dd0:	andeq	r0, r0, r0
    8dd4:	svcvc	0x00f80000
    8dd8:	andeq	r0, r0, r0
    8ddc:	eormi	r0, r4, r0
    8de0:	andeq	r0, r0, r0
    8de4:	addmi	ip, r2, r0
    8de8:	andeq	ip, r1, r0, lsr #30
    8dec:	andeq	sp, r1, r0, asr #32
    8df0:	andeq	sp, r1, r4, rrx
    8df4:	andeq	r0, r3, r4, lsr #9
    8df8:			; <UNDEFINED> instruction: 0x000303b8
    8dfc:	muleq	r1, r8, r2
    8e00:	mov	fp, #0
    8e04:	mov	lr, #0
    8e08:	pop	{r1}		; (ldr r1, [sp], #4)
    8e0c:	mov	r2, sp
    8e10:	push	{r2}		; (str r2, [sp, #-4]!)
    8e14:	push	{r0}		; (str r0, [sp, #-4]!)
    8e18:	ldr	sl, [pc, #40]	; 8e48 <main@@Base+0x2278>
    8e1c:	add	r3, pc, #36	; 0x24
    8e20:	add	sl, sl, r3
    8e24:	ldr	ip, [pc, #32]	; 8e4c <main@@Base+0x227c>
    8e28:	ldr	ip, [sl, ip]
    8e2c:	push	{ip}		; (str ip, [sp, #-4]!)
    8e30:	ldr	r3, [pc, #24]	; 8e50 <main@@Base+0x2280>
    8e34:	ldr	r3, [sl, r3]
    8e38:	ldr	r0, [pc, #20]	; 8e54 <main@@Base+0x2284>
    8e3c:	ldr	r0, [sl, r0]
    8e40:	bl	6608 <__libc_start_main@plt>
    8e44:	bl	63bc <abort@plt>
    8e48:	andeq	pc, r2, r4, asr ip	; <UNPREDICTABLE>
    8e4c:	andeq	r0, r0, r0, asr #10
    8e50:	andeq	r0, r0, r8, lsr #10
    8e54:	andeq	r0, r0, r4, lsl r5
    8e58:	ldr	r3, [pc, #20]	; 8e74 <main@@Base+0x22a4>
    8e5c:	ldr	r2, [pc, #20]	; 8e78 <main@@Base+0x22a8>
    8e60:	add	r3, pc, r3
    8e64:	ldr	r2, [r3, r2]
    8e68:	cmp	r2, #0
    8e6c:	bxeq	lr
    8e70:	b	6614 <__gmon_start__@plt>
    8e74:	andeq	pc, r2, r4, lsr ip	; <UNPREDICTABLE>
    8e78:	andeq	r0, r0, r8, asr #10
    8e7c:	ldr	r0, [pc, #44]	; 8eb0 <main@@Base+0x22e0>
    8e80:	ldr	r3, [pc, #44]	; 8eb4 <main@@Base+0x22e4>
    8e84:	add	r0, pc, r0
    8e88:	add	r3, pc, r3
    8e8c:	cmp	r3, r0
    8e90:	ldr	r3, [pc, #32]	; 8eb8 <main@@Base+0x22e8>
    8e94:	add	r3, pc, r3
    8e98:	bxeq	lr
    8e9c:	ldr	r2, [pc, #24]	; 8ebc <main@@Base+0x22ec>
    8ea0:	ldr	r3, [r3, r2]
    8ea4:	cmp	r3, #0
    8ea8:	bxeq	lr
    8eac:	bx	r3
    8eb0:	andeq	r0, r3, r4, lsr #4
    8eb4:	andeq	r0, r3, r0, lsr #4
    8eb8:	andeq	pc, r2, r0, lsl #24
    8ebc:	andeq	r0, r0, ip, lsr r5
    8ec0:	ldr	r0, [pc, #56]	; 8f00 <main@@Base+0x2330>
    8ec4:	ldr	r3, [pc, #56]	; 8f04 <main@@Base+0x2334>
    8ec8:	add	r0, pc, r0
    8ecc:	add	r3, pc, r3
    8ed0:	sub	r1, r3, r0
    8ed4:	ldr	r3, [pc, #44]	; 8f08 <main@@Base+0x2338>
    8ed8:	asr	r1, r1, #2
    8edc:	add	r3, pc, r3
    8ee0:	add	r1, r1, r1, lsr #31
    8ee4:	asrs	r1, r1, #1
    8ee8:	bxeq	lr
    8eec:	ldr	r2, [pc, #24]	; 8f0c <main@@Base+0x233c>
    8ef0:	ldr	r3, [r3, r2]
    8ef4:	cmp	r3, #0
    8ef8:	bxeq	lr
    8efc:	bx	r3
    8f00:	andeq	r0, r3, r0, ror #3
    8f04:	ldrdeq	r0, [r3], -ip
    8f08:			; <UNDEFINED> instruction: 0x0002fbb8
    8f0c:	andeq	r0, r0, r8, lsr r5
    8f10:	ldr	r3, [pc, #76]	; 8f64 <main@@Base+0x2394>
    8f14:	ldr	r2, [pc, #76]	; 8f68 <main@@Base+0x2398>
    8f18:	add	r3, pc, r3
    8f1c:	add	r2, pc, r2
    8f20:	ldrb	r3, [r3]
    8f24:	cmp	r3, #0
    8f28:	bxne	lr
    8f2c:	ldr	r3, [pc, #56]	; 8f6c <main@@Base+0x239c>
    8f30:	push	{r4, lr}
    8f34:	ldr	r3, [r2, r3]
    8f38:	cmp	r3, #0
    8f3c:	beq	8f4c <main@@Base+0x237c>
    8f40:	ldr	r3, [pc, #40]	; 8f70 <main@@Base+0x23a0>
    8f44:	ldr	r0, [pc, r3]
    8f48:	bl	6128 <__cxa_finalize@plt>
    8f4c:	bl	8e7c <main@@Base+0x22ac>
    8f50:	ldr	r3, [pc, #28]	; 8f74 <main@@Base+0x23a4>
    8f54:	mov	r2, #1
    8f58:	add	r3, pc, r3
    8f5c:	strb	r2, [r3]
    8f60:	pop	{r4, pc}
    8f64:	muleq	r3, r0, r1
    8f68:	andeq	pc, r2, r8, ror fp	; <UNPREDICTABLE>
    8f6c:	andeq	r0, r0, r0, lsr #10
    8f70:	strheq	r0, [r3], -r8
    8f74:	andeq	r0, r3, r0, asr r1
    8f78:	b	8ec0 <main@@Base+0x22f0>
    8f7c:	andeq	r0, r0, r0
    8f80:	push	{lr}		; (str lr, [sp, #-4]!)
    8f84:	ldr	r1, [pc, #68]	; 8fd0 <main@@Base+0x2400>
    8f88:	ldr	ip, [pc, #68]	; 8fd4 <main@@Base+0x2404>
    8f8c:	add	r1, pc, r1
    8f90:	ldr	ip, [r1, ip]
    8f94:	sub	sp, sp, #12
    8f98:	ldr	lr, [ip]
    8f9c:	ldr	r0, [pc, #52]	; 8fd8 <main@@Base+0x2408>
    8fa0:	str	lr, [sp, #4]
    8fa4:	ldr	lr, [sp, #4]
    8fa8:	ldr	ip, [ip]
    8fac:	ldr	r1, [r1, r0]
    8fb0:	cmp	lr, ip
    8fb4:	ldr	r0, [r1]
    8fb8:	bne	8fcc <main@@Base+0x23fc>
    8fbc:	mov	r1, #1
    8fc0:	add	sp, sp, #12
    8fc4:	pop	{lr}		; (ldr lr, [sp], #4)
    8fc8:	b	6890 <__vfprintf_chk@plt>
    8fcc:	bl	5e7c <__stack_chk_fail@plt>
    8fd0:	andeq	pc, r2, r8, lsl #22
    8fd4:	andeq	r0, r0, r8, asr r5
    8fd8:	andeq	r0, r0, r4, lsr #10
    8fdc:	push	{lr}		; (str lr, [sp, #-4]!)
    8fe0:	ldr	r3, [pc, #128]	; 9068 <main@@Base+0x2498>
    8fe4:	ldr	r2, [pc, #128]	; 906c <main@@Base+0x249c>
    8fe8:	add	r3, pc, r3
    8fec:	ldr	r0, [r0]
    8ff0:	ldr	r1, [r1]
    8ff4:	ldr	r2, [r3, r2]
    8ff8:	ldr	lr, [r0, #4]
    8ffc:	ldr	ip, [r1, #4]
    9000:	ldr	r3, [r2]
    9004:	sub	sp, sp, #12
    9008:	cmp	lr, ip
    900c:	str	r3, [sp, #4]
    9010:	beq	9040 <main@@Base+0x2470>
    9014:	movgt	ip, #1
    9018:	movle	ip, #0
    901c:	movlt	r0, #1
    9020:	movge	r0, #0
    9024:	ldr	r1, [sp, #4]
    9028:	ldr	r3, [r2]
    902c:	sub	r0, ip, r0
    9030:	cmp	r1, r3
    9034:	bne	9064 <main@@Base+0x2494>
    9038:	add	sp, sp, #12
    903c:	pop	{pc}		; (ldr pc, [sp], #4)
    9040:	ldr	ip, [sp, #4]
    9044:	ldr	r3, [r2]
    9048:	cmp	ip, r3
    904c:	bne	9064 <main@@Base+0x2494>
    9050:	ldr	r1, [r1, #8]
    9054:	ldr	r0, [r0, #8]
    9058:	add	sp, sp, #12
    905c:	pop	{lr}		; (ldr lr, [sp], #4)
    9060:	b	695c <strcmp@plt>
    9064:	bl	5e7c <__stack_chk_fail@plt>
    9068:	andeq	pc, r2, ip, lsr #21
    906c:	andeq	r0, r0, r8, asr r5
    9070:	push	{r4, r5, r6, r7, r8, r9, lr}
    9074:	ldr	ip, [pc, #164]	; 9120 <main@@Base+0x2550>
    9078:	ldr	lr, [pc, #164]	; 9124 <main@@Base+0x2554>
    907c:	add	ip, pc, ip
    9080:	ldr	r5, [ip, lr]
    9084:	sub	sp, sp, #1040	; 0x410
    9088:	ldr	ip, [r5]
    908c:	sub	sp, sp, #12
    9090:	mov	r6, r1
    9094:	mov	r8, r0
    9098:	str	r3, [sp, #16]
    909c:	str	ip, [sp, #1044]	; 0x414
    90a0:	mov	r9, r2
    90a4:	bl	62b4 <av_log_default_callback@plt>
    90a8:	mov	r3, #1024	; 0x400
    90ac:	ldr	r4, [pc, #116]	; 9128 <main@@Base+0x2558>
    90b0:	add	r7, sp, #20
    90b4:	add	r4, pc, r4
    90b8:	stmib	sp, {r3, r4}
    90bc:	mov	r2, r9
    90c0:	ldr	r3, [sp, #16]
    90c4:	mov	r0, r8
    90c8:	mov	r1, r6
    90cc:	str	r7, [sp]
    90d0:	bl	6794 <av_log_format_line@plt>
    90d4:	ldr	r3, [r4, #4]
    90d8:	cmp	r3, r6
    90dc:	bge	90fc <main@@Base+0x252c>
    90e0:	ldr	r2, [sp, #1044]	; 0x414
    90e4:	ldr	r3, [r5]
    90e8:	cmp	r2, r3
    90ec:	bne	911c <main@@Base+0x254c>
    90f0:	add	sp, sp, #1040	; 0x410
    90f4:	add	sp, sp, #12
    90f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
    90fc:	ldr	r4, [pc, #40]	; 912c <main@@Base+0x255c>
    9100:	mov	r0, r7
    9104:	add	r4, pc, r4
    9108:	ldr	r1, [r4]
    910c:	bl	5cb4 <fputs@plt>
    9110:	ldr	r0, [r4]
    9114:	bl	6278 <fflush@plt>
    9118:	b	90e0 <main@@Base+0x2510>
    911c:	bl	5e7c <__stack_chk_fail@plt>
    9120:	andeq	pc, r2, r8, lsl sl	; <UNPREDICTABLE>
    9124:	andeq	r0, r0, r8, asr r5
    9128:	andeq	pc, r2, ip, asr #30
    912c:	andeq	pc, r2, r8, lsr #31
    9130:	push	{r4, r5, r6, r7, lr}
    9134:	ldr	r3, [pc, #204]	; 9208 <main@@Base+0x2638>
    9138:	ldr	ip, [pc, #204]	; 920c <main@@Base+0x263c>
    913c:	add	r3, pc, r3
    9140:	ldr	r5, [r3, ip]
    9144:	sub	sp, sp, #20
    9148:	ldr	r3, [r5]
    914c:	subs	r4, r0, #0
    9150:	str	r3, [sp, #12]
    9154:	beq	91e8 <main@@Base+0x2618>
    9158:	mov	r6, r1
    915c:	mov	r7, r2
    9160:	bl	60ec <av_strdup@plt>
    9164:	cmp	r0, #0
    9168:	str	r0, [r6]
    916c:	beq	91fc <main@@Base+0x262c>
    9170:	mov	r1, #44	; 0x2c
    9174:	bl	662c <strchr@plt>
    9178:	cmp	r0, #0
    917c:	beq	9194 <main@@Base+0x25c4>
    9180:	mov	r3, #0
    9184:	ldrb	r2, [r0, #1]
    9188:	strb	r3, [r0]
    918c:	cmp	r2, r3
    9190:	bne	91b4 <main@@Base+0x25e4>
    9194:	mov	r4, #0
    9198:	ldr	r2, [sp, #12]
    919c:	ldr	r3, [r5]
    91a0:	mov	r0, r4
    91a4:	cmp	r2, r3
    91a8:	bne	9204 <main@@Base+0x2634>
    91ac:	add	sp, sp, #20
    91b0:	pop	{r4, r5, r6, r7, pc}
    91b4:	str	r3, [sp]
    91b8:	ldr	r2, [pc, #80]	; 9210 <main@@Base+0x2640>
    91bc:	ldr	r3, [pc, #80]	; 9214 <main@@Base+0x2644>
    91c0:	add	r1, r0, #1
    91c4:	add	r3, pc, r3
    91c8:	mov	r0, r7
    91cc:	add	r2, pc, r2
    91d0:	bl	67d0 <av_dict_parse_string@plt>
    91d4:	subs	r4, r0, #0
    91d8:	bge	9194 <main@@Base+0x25c4>
    91dc:	mov	r0, r6
    91e0:	bl	5df8 <av_freep@plt>
    91e4:	b	9198 <main@@Base+0x25c8>
    91e8:	ldr	r1, [pc, #40]	; 9218 <main@@Base+0x2648>
    91ec:	mov	r0, #1
    91f0:	add	r1, pc, r1
    91f4:	bl	6a1c <__printf_chk@plt>
    91f8:	b	9198 <main@@Base+0x25c8>
    91fc:	mvn	r4, #11
    9200:	b	9198 <main@@Base+0x25c8>
    9204:	bl	5e7c <__stack_chk_fail@plt>
    9208:	andeq	pc, r2, r8, asr r9	; <UNPREDICTABLE>
    920c:	andeq	r0, r0, r8, asr r5
    9210:	strdeq	r9, [r1], -r4
    9214:	andeq	fp, r1, r8, ror #21
    9218:	ldrdeq	r9, [r1], -r4
    921c:	mov	ip, #0
    9220:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9224:	ldr	r3, [pc, #404]	; 93c0 <main@@Base+0x27f0>
    9228:	ldr	r2, [pc, #404]	; 93c4 <main@@Base+0x27f4>
    922c:	add	r3, pc, r3
    9230:	ldr	r6, [r3, r2]
    9234:	sub	sp, sp, #16
    9238:	ldr	r3, [r6]
    923c:	subs	r5, r0, #0
    9240:	str	ip, [sp, #8]
    9244:	str	r3, [sp, #12]
    9248:	beq	93b4 <main@@Base+0x27e4>
    924c:	ldr	r3, [r5, #20]
    9250:	cmp	r3, ip
    9254:	beq	93b4 <main@@Base+0x27e4>
    9258:	ldr	r3, [r3, #32]
    925c:	bic	r4, r3, #2
    9260:	cmp	r4, #41	; 0x29
    9264:	cmpne	r3, #45	; 0x2d
    9268:	movne	r4, #1
    926c:	moveq	r4, #0
    9270:	bne	93b4 <main@@Base+0x27e4>
    9274:	mov	r8, r1
    9278:	ldr	r1, [pc, #328]	; 93c8 <main@@Base+0x27f8>
    927c:	ldr	r2, [r5]
    9280:	add	r1, pc, r1
    9284:	mov	r0, #1
    9288:	bl	6a1c <__printf_chk@plt>
    928c:	ldr	r3, [r5, #76]	; 0x4c
    9290:	cmp	r3, #0
    9294:	beq	9384 <main@@Base+0x27b4>
    9298:	add	r7, sp, #8
    929c:	mov	r2, r8
    92a0:	mov	r0, r5
    92a4:	mov	r3, r7
    92a8:	mov	r1, r4
    92ac:	bl	66ec <avdevice_list_input_sources@plt>
    92b0:	subs	sl, r0, #0
    92b4:	blt	93a0 <main@@Base+0x27d0>
    92b8:	ldr	r3, [sp, #8]
    92bc:	ldr	r2, [r3, #4]
    92c0:	cmp	r2, #0
    92c4:	ble	9328 <main@@Base+0x2758>
    92c8:	ldr	r9, [pc, #252]	; 93cc <main@@Base+0x27fc>
    92cc:	ldr	r8, [pc, #252]	; 93d0 <main@@Base+0x2800>
    92d0:	ldr	r5, [pc, #252]	; 93d4 <main@@Base+0x2804>
    92d4:	add	r9, pc, r9
    92d8:	add	r8, pc, r8
    92dc:	add	r5, pc, r5
    92e0:	ldr	r2, [r3, #8]
    92e4:	ldr	r3, [r3]
    92e8:	cmp	r2, r4
    92ec:	beq	934c <main@@Base+0x277c>
    92f0:	ldr	r0, [r3, r4, lsl #2]
    92f4:	ldr	r1, [pc, #220]	; 93d8 <main@@Base+0x2808>
    92f8:	ldr	r3, [r0]
    92fc:	ldr	r0, [r0, #4]
    9300:	mov	r2, r5
    9304:	str	r0, [sp]
    9308:	add	r1, pc, r1
    930c:	mov	r0, #1
    9310:	bl	6a1c <__printf_chk@plt>
    9314:	ldr	r3, [sp, #8]
    9318:	add	r4, r4, #1
    931c:	ldr	r2, [r3, #4]
    9320:	cmp	r4, r2
    9324:	blt	92e0 <main@@Base+0x2710>
    9328:	mov	r0, r7
    932c:	bl	5fe4 <avdevice_free_list_devices@plt>
    9330:	ldr	r2, [sp, #12]
    9334:	ldr	r3, [r6]
    9338:	mov	r0, sl
    933c:	cmp	r2, r3
    9340:	bne	93bc <main@@Base+0x27ec>
    9344:	add	sp, sp, #16
    9348:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    934c:	ldr	r0, [r3, r4, lsl #2]
    9350:	mov	r2, r9
    9354:	ldr	r3, [r0]
    9358:	ldr	r0, [r0, #4]
    935c:	mov	r1, r8
    9360:	str	r0, [sp]
    9364:	mov	r0, #1
    9368:	bl	6a1c <__printf_chk@plt>
    936c:	ldr	r3, [sp, #8]
    9370:	add	r4, r4, #1
    9374:	ldr	r2, [r3, #4]
    9378:	cmp	r2, r4
    937c:	bgt	92e0 <main@@Base+0x2710>
    9380:	b	9328 <main@@Base+0x2758>
    9384:	ldr	r1, [pc, #80]	; 93dc <main@@Base+0x280c>
    9388:	mov	r0, #1
    938c:	add	r1, pc, r1
    9390:	bl	6a1c <__printf_chk@plt>
    9394:	mvn	sl, #37	; 0x25
    9398:	add	r7, sp, #8
    939c:	b	9328 <main@@Base+0x2758>
    93a0:	ldr	r1, [pc, #56]	; 93e0 <main@@Base+0x2810>
    93a4:	mov	r0, #1
    93a8:	add	r1, pc, r1
    93ac:	bl	6a1c <__printf_chk@plt>
    93b0:	b	9328 <main@@Base+0x2758>
    93b4:	mvn	sl, #21
    93b8:	b	9330 <main@@Base+0x2760>
    93bc:	bl	5e7c <__stack_chk_fail@plt>
    93c0:	andeq	pc, r2, r8, ror #16
    93c4:	andeq	r0, r0, r8, asr r5
    93c8:	andeq	r9, r1, r8, lsr #9
    93cc:	andeq	r9, r1, r0, asr #9
    93d0:			; <UNDEFINED> instruction: 0x000194b0
    93d4:	strdeq	r9, [r1], -r4
    93d8:	andeq	r9, r1, r0, lsl #9
    93dc:			; <UNDEFINED> instruction: 0x000193bc
    93e0:	andeq	r9, r1, r8, asr #7
    93e4:	mov	ip, #0
    93e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    93ec:	ldr	r3, [pc, #404]	; 9588 <main@@Base+0x29b8>
    93f0:	ldr	r2, [pc, #404]	; 958c <main@@Base+0x29bc>
    93f4:	add	r3, pc, r3
    93f8:	ldr	r6, [r3, r2]
    93fc:	sub	sp, sp, #16
    9400:	ldr	r3, [r6]
    9404:	subs	r5, r0, #0
    9408:	str	ip, [sp, #8]
    940c:	str	r3, [sp, #12]
    9410:	beq	957c <main@@Base+0x29ac>
    9414:	ldr	r3, [r5, #36]	; 0x24
    9418:	cmp	r3, ip
    941c:	beq	957c <main@@Base+0x29ac>
    9420:	ldr	r3, [r3, #32]
    9424:	bic	r4, r3, #2
    9428:	cmp	r4, #40	; 0x28
    942c:	cmpne	r3, #44	; 0x2c
    9430:	movne	r4, #1
    9434:	moveq	r4, #0
    9438:	bne	957c <main@@Base+0x29ac>
    943c:	mov	r8, r1
    9440:	ldr	r1, [pc, #328]	; 9590 <main@@Base+0x29c0>
    9444:	ldr	r2, [r5]
    9448:	add	r1, pc, r1
    944c:	mov	r0, #1
    9450:	bl	6a1c <__printf_chk@plt>
    9454:	ldr	r3, [r5, #80]	; 0x50
    9458:	cmp	r3, #0
    945c:	beq	954c <main@@Base+0x297c>
    9460:	add	r7, sp, #8
    9464:	mov	r2, r8
    9468:	mov	r0, r5
    946c:	mov	r3, r7
    9470:	mov	r1, r4
    9474:	bl	68b4 <avdevice_list_output_sinks@plt>
    9478:	subs	sl, r0, #0
    947c:	blt	9568 <main@@Base+0x2998>
    9480:	ldr	r3, [sp, #8]
    9484:	ldr	r2, [r3, #4]
    9488:	cmp	r2, #0
    948c:	ble	94f0 <main@@Base+0x2920>
    9490:	ldr	r9, [pc, #252]	; 9594 <main@@Base+0x29c4>
    9494:	ldr	r8, [pc, #252]	; 9598 <main@@Base+0x29c8>
    9498:	ldr	r5, [pc, #252]	; 959c <main@@Base+0x29cc>
    949c:	add	r9, pc, r9
    94a0:	add	r8, pc, r8
    94a4:	add	r5, pc, r5
    94a8:	ldr	r2, [r3, #8]
    94ac:	ldr	r3, [r3]
    94b0:	cmp	r2, r4
    94b4:	beq	9514 <main@@Base+0x2944>
    94b8:	ldr	r0, [r3, r4, lsl #2]
    94bc:	ldr	r1, [pc, #220]	; 95a0 <main@@Base+0x29d0>
    94c0:	ldr	r3, [r0]
    94c4:	ldr	r0, [r0, #4]
    94c8:	mov	r2, r5
    94cc:	str	r0, [sp]
    94d0:	add	r1, pc, r1
    94d4:	mov	r0, #1
    94d8:	bl	6a1c <__printf_chk@plt>
    94dc:	ldr	r3, [sp, #8]
    94e0:	add	r4, r4, #1
    94e4:	ldr	r2, [r3, #4]
    94e8:	cmp	r4, r2
    94ec:	blt	94a8 <main@@Base+0x28d8>
    94f0:	mov	r0, r7
    94f4:	bl	5fe4 <avdevice_free_list_devices@plt>
    94f8:	ldr	r2, [sp, #12]
    94fc:	ldr	r3, [r6]
    9500:	mov	r0, sl
    9504:	cmp	r2, r3
    9508:	bne	9584 <main@@Base+0x29b4>
    950c:	add	sp, sp, #16
    9510:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    9514:	ldr	r0, [r3, r4, lsl #2]
    9518:	mov	r2, r9
    951c:	ldr	r3, [r0]
    9520:	ldr	r0, [r0, #4]
    9524:	mov	r1, r8
    9528:	str	r0, [sp]
    952c:	mov	r0, #1
    9530:	bl	6a1c <__printf_chk@plt>
    9534:	ldr	r3, [sp, #8]
    9538:	add	r4, r4, #1
    953c:	ldr	r2, [r3, #4]
    9540:	cmp	r2, r4
    9544:	bgt	94a8 <main@@Base+0x28d8>
    9548:	b	94f0 <main@@Base+0x2920>
    954c:	ldr	r1, [pc, #80]	; 95a4 <main@@Base+0x29d4>
    9550:	mov	r0, #1
    9554:	add	r1, pc, r1
    9558:	bl	6a1c <__printf_chk@plt>
    955c:	mvn	sl, #37	; 0x25
    9560:	add	r7, sp, #8
    9564:	b	94f0 <main@@Base+0x2920>
    9568:	ldr	r1, [pc, #56]	; 95a8 <main@@Base+0x29d8>
    956c:	mov	r0, #1
    9570:	add	r1, pc, r1
    9574:	bl	6a1c <__printf_chk@plt>
    9578:	b	94f0 <main@@Base+0x2920>
    957c:	mvn	sl, #21
    9580:	b	94f8 <main@@Base+0x2928>
    9584:	bl	5e7c <__stack_chk_fail@plt>
    9588:	andeq	pc, r2, r0, lsr #13
    958c:	andeq	r0, r0, r8, asr r5
    9590:	andeq	r9, r1, r0, asr r3
    9594:	strdeq	r9, [r1], -r8
    9598:	andeq	r9, r1, r8, ror #5
    959c:	andeq	r9, r1, ip, lsr #28
    95a0:			; <UNDEFINED> instruction: 0x000192b8
    95a4:	andeq	r9, r1, r4, ror #4
    95a8:	andeq	r9, r1, r0, ror r2
    95ac:	mov	ip, #0
    95b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    95b4:	ldr	r3, [pc, #900]	; 9940 <main@@Base+0x2d70>
    95b8:	sub	sp, sp, #60	; 0x3c
    95bc:	ldr	r2, [pc, #896]	; 9944 <main@@Base+0x2d74>
    95c0:	cmp	r0, #0
    95c4:	add	r3, pc, r3
    95c8:	str	r0, [sp, #16]
    95cc:	ldr	r2, [r3, r2]
    95d0:	str	r1, [sp, #20]
    95d4:	ldr	r3, [r2]
    95d8:	str	r2, [sp, #36]	; 0x24
    95dc:	str	ip, [sp, #44]	; 0x2c
    95e0:	str	r3, [sp, #52]	; 0x34
    95e4:	str	ip, [sp, #48]	; 0x30
    95e8:	bne	9848 <main@@Base+0x2c78>
    95ec:	ldr	r2, [pc, #852]	; 9948 <main@@Base+0x2d78>
    95f0:	add	r2, pc, r2
    95f4:	ldr	r1, [pc, #848]	; 994c <main@@Base+0x2d7c>
    95f8:	mov	r0, #1
    95fc:	add	r1, pc, r1
    9600:	bl	6a1c <__printf_chk@plt>
    9604:	ldr	r3, [pc, #836]	; 9950 <main@@Base+0x2d80>
    9608:	ldr	r7, [pc, #836]	; 9954 <main@@Base+0x2d84>
    960c:	add	r3, pc, r3
    9610:	str	r3, [sp, #24]
    9614:	ldr	r3, [pc, #828]	; 9958 <main@@Base+0x2d88>
    9618:	add	r7, pc, r7
    961c:	add	r3, pc, r3
    9620:	str	r3, [sp, #28]
    9624:	ldr	r3, [pc, #816]	; 995c <main@@Base+0x2d8c>
    9628:	add	r3, pc, r3
    962c:	str	r3, [sp, #32]
    9630:	ldr	r3, [sp, #20]
    9634:	mov	r5, #0
    9638:	cmp	r3, #1
    963c:	ldr	r3, [sp, #16]
    9640:	bne	976c <main@@Base+0x2b9c>
    9644:	cmp	r3, r5
    9648:	str	r5, [sp, #44]	; 0x2c
    964c:	movne	r4, r5
    9650:	movne	r8, r5
    9654:	beq	9854 <main@@Base+0x2c84>
    9658:	mov	r9, #0
    965c:	add	r6, sp, #44	; 0x2c
    9660:	mov	r0, r6
    9664:	bl	5d74 <av_demuxer_iterate@plt>
    9668:	subs	sl, r0, #0
    966c:	beq	96c0 <main@@Base+0x2af0>
    9670:	ldr	r3, [sl, #20]
    9674:	cmp	r3, #0
    9678:	beq	9660 <main@@Base+0x2a90>
    967c:	ldr	r3, [r3, #32]
    9680:	sub	r3, r3, #40	; 0x28
    9684:	cmp	r3, #5
    9688:	bhi	9660 <main@@Base+0x2a90>
    968c:	cmp	r4, #0
    9690:	ldr	fp, [sl]
    9694:	beq	9708 <main@@Base+0x2b38>
    9698:	mov	r1, r4
    969c:	mov	r0, fp
    96a0:	bl	695c <strcmp@plt>
    96a4:	cmp	r0, #0
    96a8:	blt	972c <main@@Base+0x2b5c>
    96ac:	mov	r0, r6
    96b0:	moveq	r9, #1
    96b4:	bl	5d74 <av_demuxer_iterate@plt>
    96b8:	subs	sl, r0, #0
    96bc:	bne	9670 <main@@Base+0x2aa0>
    96c0:	subs	r7, r4, #0
    96c4:	beq	9828 <main@@Base+0x2c58>
    96c8:	ldr	r3, [sp, #24]
    96cc:	cmp	r9, #0
    96d0:	ldr	r2, [sp, #28]
    96d4:	movne	r2, r3
    96d8:	cmp	r8, #0
    96dc:	bne	9750 <main@@Base+0x2b80>
    96e0:	ldr	r3, [pc, #632]	; 9960 <main@@Base+0x2d90>
    96e4:	cmp	r5, #0
    96e8:	add	r3, pc, r3
    96ec:	beq	9760 <main@@Base+0x2b90>
    96f0:	ldr	r1, [pc, #620]	; 9964 <main@@Base+0x2d94>
    96f4:	strd	r4, [sp]
    96f8:	add	r1, pc, r1
    96fc:	mov	r0, #1
    9700:	bl	6a1c <__printf_chk@plt>
    9704:	b	9630 <main@@Base+0x2a60>
    9708:	mov	r1, r7
    970c:	mov	r0, fp
    9710:	bl	695c <strcmp@plt>
    9714:	cmp	r0, #0
    9718:	ldrgt	r5, [sl, #4]
    971c:	movgt	r4, fp
    9720:	movgt	r8, #0
    9724:	movgt	r9, #1
    9728:	b	9660 <main@@Base+0x2a90>
    972c:	mov	r1, r7
    9730:	mov	r0, fp
    9734:	bl	695c <strcmp@plt>
    9738:	cmp	r0, #0
    973c:	ldrgt	r5, [sl, #4]
    9740:	movgt	r4, fp
    9744:	movgt	r8, #0
    9748:	movgt	r9, #1
    974c:	b	9660 <main@@Base+0x2a90>
    9750:	ldr	r3, [pc, #528]	; 9968 <main@@Base+0x2d98>
    9754:	cmp	r5, #0
    9758:	add	r3, pc, r3
    975c:	bne	96f0 <main@@Base+0x2b20>
    9760:	ldr	r5, [pc, #516]	; 996c <main@@Base+0x2d9c>
    9764:	add	r5, pc, r5
    9768:	b	96f0 <main@@Base+0x2b20>
    976c:	cmp	r3, r5
    9770:	addne	r3, sp, #48	; 0x30
    9774:	str	r5, [sp, #48]	; 0x30
    9778:	movne	r4, r5
    977c:	movne	r8, r5
    9780:	strne	r3, [sp, #12]
    9784:	beq	98a4 <main@@Base+0x2cd4>
    9788:	ldr	r0, [sp, #12]
    978c:	bl	66d4 <av_muxer_iterate@plt>
    9790:	subs	r6, r0, #0
    9794:	beq	9800 <main@@Base+0x2c30>
    9798:	ldr	r3, [r6, #36]	; 0x24
    979c:	cmp	r3, #0
    97a0:	beq	9788 <main@@Base+0x2bb8>
    97a4:	ldr	r3, [r3, #32]
    97a8:	sub	r3, r3, #40	; 0x28
    97ac:	cmp	r3, #5
    97b0:	bhi	9788 <main@@Base+0x2bb8>
    97b4:	cmp	r4, #0
    97b8:	ldr	r9, [r6]
    97bc:	beq	97d4 <main@@Base+0x2c04>
    97c0:	mov	r1, r4
    97c4:	mov	r0, r9
    97c8:	bl	695c <strcmp@plt>
    97cc:	cmp	r0, #0
    97d0:	bge	9788 <main@@Base+0x2bb8>
    97d4:	mov	r1, r7
    97d8:	mov	r0, r9
    97dc:	bl	695c <strcmp@plt>
    97e0:	cmp	r0, #0
    97e4:	ldr	r0, [sp, #12]
    97e8:	ldrgt	r5, [r6, #4]
    97ec:	movgt	r4, r9
    97f0:	ldrgt	r8, [sp, #16]
    97f4:	bl	66d4 <av_muxer_iterate@plt>
    97f8:	subs	r6, r0, #0
    97fc:	bne	9798 <main@@Base+0x2bc8>
    9800:	ldr	r3, [sp, #20]
    9804:	cmp	r3, #2
    9808:	bne	9820 <main@@Base+0x2c50>
    980c:	cmp	r4, #0
    9810:	beq	9828 <main@@Base+0x2c58>
    9814:	mov	r7, r4
    9818:	ldr	r2, [sp, #32]
    981c:	b	96d8 <main@@Base+0x2b08>
    9820:	str	r6, [sp, #44]	; 0x2c
    9824:	b	9658 <main@@Base+0x2a88>
    9828:	ldr	r3, [sp, #36]	; 0x24
    982c:	ldr	r2, [sp, #52]	; 0x34
    9830:	ldr	r3, [r3]
    9834:	mov	r0, #0
    9838:	cmp	r2, r3
    983c:	bne	98a0 <main@@Base+0x2cd0>
    9840:	add	sp, sp, #60	; 0x3c
    9844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9848:	ldr	r2, [pc, #288]	; 9970 <main@@Base+0x2da0>
    984c:	add	r2, pc, r2
    9850:	b	95f4 <main@@Base+0x2a24>
    9854:	mov	r4, r3
    9858:	mov	r8, r3
    985c:	mov	r5, r3
    9860:	mov	r9, #0
    9864:	add	r6, sp, #44	; 0x2c
    9868:	mov	r0, r6
    986c:	bl	5d74 <av_demuxer_iterate@plt>
    9870:	subs	fp, r0, #0
    9874:	beq	96c0 <main@@Base+0x2af0>
    9878:	cmp	r4, #0
    987c:	ldr	sl, [fp]
    9880:	beq	9908 <main@@Base+0x2d38>
    9884:	mov	r1, r4
    9888:	mov	r0, sl
    988c:	bl	695c <strcmp@plt>
    9890:	cmp	r0, #0
    9894:	blt	9908 <main@@Base+0x2d38>
    9898:	moveq	r9, #1
    989c:	b	9868 <main@@Base+0x2c98>
    98a0:	bl	5e7c <__stack_chk_fail@plt>
    98a4:	mov	r4, r3
    98a8:	mov	r8, r3
    98ac:	mov	r5, r3
    98b0:	add	r3, sp, #48	; 0x30
    98b4:	str	r3, [sp, #12]
    98b8:	ldr	r0, [sp, #12]
    98bc:	bl	66d4 <av_muxer_iterate@plt>
    98c0:	subs	r6, r0, #0
    98c4:	beq	992c <main@@Base+0x2d5c>
    98c8:	cmp	r4, #0
    98cc:	ldr	r9, [r6]
    98d0:	beq	98e8 <main@@Base+0x2d18>
    98d4:	mov	r1, r4
    98d8:	mov	r0, r9
    98dc:	bl	695c <strcmp@plt>
    98e0:	cmp	r0, #0
    98e4:	bge	98b8 <main@@Base+0x2ce8>
    98e8:	mov	r1, r7
    98ec:	mov	r0, r9
    98f0:	bl	695c <strcmp@plt>
    98f4:	cmp	r0, #0
    98f8:	ldrgt	r5, [r6, #4]
    98fc:	movgt	r4, r9
    9900:	movgt	r8, #1
    9904:	b	98b8 <main@@Base+0x2ce8>
    9908:	mov	r1, r7
    990c:	mov	r0, sl
    9910:	bl	695c <strcmp@plt>
    9914:	cmp	r0, #0
    9918:	ldrgt	r5, [fp, #4]
    991c:	movgt	r4, sl
    9920:	movgt	r8, #0
    9924:	movgt	r9, #1
    9928:	b	9868 <main@@Base+0x2c98>
    992c:	ldr	r3, [sp, #20]
    9930:	cmp	r3, #2
    9934:	beq	980c <main@@Base+0x2c3c>
    9938:	str	r6, [sp, #44]	; 0x2c
    993c:	b	9860 <main@@Base+0x2c90>
    9940:	ldrdeq	pc, [r2], -r0
    9944:	andeq	r0, r0, r8, asr r5
    9948:	andeq	r9, r1, r0, lsl r2
    994c:	andeq	r9, r1, r8, lsl r2
    9950:	andeq	sp, r1, r4, asr #24
    9954:	strdeq	r9, [r1], -r8
    9958:			; <UNDEFINED> instruction: 0x00019cb4
    995c:	andeq	r9, r1, r8, lsr #25
    9960:	andeq	r9, r1, r8, ror #23
    9964:	andeq	r9, r1, r4, asr r1
    9968:	andeq	sp, r1, r0, lsl fp
    996c:	andeq	r9, r1, ip, ror #22
    9970:	andeq	r8, r1, r8, lsr #31
    9974:	push	{r4, r5, r6, r7, r8, lr}
    9978:	ldr	r3, [pc, #328]	; 9ac8 <main@@Base+0x2ef8>
    997c:	ldr	r2, [pc, #328]	; 9acc <main@@Base+0x2efc>
    9980:	add	r3, pc, r3
    9984:	ldr	r6, [r3, r2]
    9988:	sub	sp, sp, #1280	; 0x500
    998c:	sub	sp, sp, #8
    9990:	ldr	r1, [pc, #312]	; 9ad0 <main@@Base+0x2f00>
    9994:	add	r5, sp, #8
    9998:	ldr	r7, [pc, #308]	; 9ad4 <main@@Base+0x2f04>
    999c:	ldr	r3, [r6]
    99a0:	ldr	r4, [pc, #304]	; 9ad8 <main@@Base+0x2f08>
    99a4:	mov	r0, r5
    99a8:	ldr	r2, [pc, #300]	; 9adc <main@@Base+0x2f0c>
    99ac:	add	r1, pc, r1
    99b0:	str	r3, [sp, #1284]	; 0x504
    99b4:	add	r7, pc, r7
    99b8:	bl	66f8 <memcpy@plt>
    99bc:	add	r4, pc, r4
    99c0:	b	99d4 <main@@Base+0x2e04>
    99c4:	ldrh	r2, [r4]
    99c8:	ldrb	r3, [r4, #2]
    99cc:	strh	r2, [r0]
    99d0:	strb	r3, [r0, #2]
    99d4:	mov	r1, r7
    99d8:	mov	r0, r5
    99dc:	bl	5d5c <strstr@plt>
    99e0:	cmp	r0, #0
    99e4:	bne	99c4 <main@@Base+0x2df4>
    99e8:	ldr	r7, [pc, #240]	; 9ae0 <main@@Base+0x2f10>
    99ec:	ldr	r8, [pc, #240]	; 9ae4 <main@@Base+0x2f14>
    99f0:	add	r7, pc, r7
    99f4:	add	r8, pc, r8
    99f8:	b	9a1c <main@@Base+0x2e4c>
    99fc:	mov	r3, r8
    9a00:	ldm	r3!, {r0, r1}
    9a04:	ldrh	r2, [r3]
    9a08:	ldrb	r3, [r3, #2]
    9a0c:	str	r0, [r4]
    9a10:	str	r1, [r4, #4]
    9a14:	strh	r2, [r4, #8]
    9a18:	strb	r3, [r4, #10]
    9a1c:	mov	r1, r7
    9a20:	mov	r0, r5
    9a24:	bl	5d5c <strstr@plt>
    9a28:	subs	r4, r0, #0
    9a2c:	bne	99fc <main@@Base+0x2e2c>
    9a30:	ldr	r1, [pc, #176]	; 9ae8 <main@@Base+0x2f18>
    9a34:	mov	r0, r5
    9a38:	add	r1, pc, r1
    9a3c:	bl	6b6c <strtok@plt>
    9a40:	mov	r7, r0
    9a44:	ldr	r5, [pc, #160]	; 9aec <main@@Base+0x2f1c>
    9a48:	ldr	r2, [pc, #160]	; 9af0 <main@@Base+0x2f20>
    9a4c:	add	r5, pc, r5
    9a50:	mov	r0, r4
    9a54:	mov	r3, r5
    9a58:	add	r2, pc, r2
    9a5c:	mov	r1, #32
    9a60:	bl	6188 <av_log@plt>
    9a64:	cmp	r7, #0
    9a68:	beq	9aa8 <main@@Base+0x2ed8>
    9a6c:	mov	r4, r5
    9a70:	ldr	r5, [pc, #124]	; 9af4 <main@@Base+0x2f24>
    9a74:	add	r5, pc, r5
    9a78:	stm	sp, {r4, r7}
    9a7c:	mov	r3, r4
    9a80:	mov	r2, r5
    9a84:	mov	r1, #32
    9a88:	mov	r0, #0
    9a8c:	bl	6188 <av_log@plt>
    9a90:	ldr	r1, [pc, #96]	; 9af8 <main@@Base+0x2f28>
    9a94:	mov	r0, #0
    9a98:	add	r1, pc, r1
    9a9c:	bl	6b6c <strtok@plt>
    9aa0:	subs	r7, r0, #0
    9aa4:	bne	9a78 <main@@Base+0x2ea8>
    9aa8:	ldr	r2, [sp, #1284]	; 0x504
    9aac:	ldr	r3, [r6]
    9ab0:	cmp	r2, r3
    9ab4:	bne	9ac4 <main@@Base+0x2ef4>
    9ab8:	add	sp, sp, #1280	; 0x500
    9abc:	add	sp, sp, #8
    9ac0:	pop	{r4, r5, r6, r7, r8, pc}
    9ac4:	bl	5e7c <__stack_chk_fail@plt>
    9ac8:	andeq	pc, r2, r4, lsl r1	; <UNPREDICTABLE>
    9acc:	andeq	r0, r0, r8, asr r5
    9ad0:	strdeq	r8, [r1], -r4
    9ad4:	andeq	r8, r1, ip, lsr #29
    9ad8:	andeq	r8, r1, r0, lsr #29
    9adc:	strdeq	r0, [r0], -r9
    9ae0:	andeq	r8, r1, r0, lsl #29
    9ae4:	andeq	r8, r1, r0, ror lr
    9ae8:	andeq	r8, r1, r4, asr #28
    9aec:	andeq	r8, r1, r4, lsr lr
    9af0:	andeq	r8, r1, ip, lsr #28
    9af4:	andeq	r8, r1, r4, lsr #28
    9af8:	andeq	r8, r1, r4, ror #27
    9afc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9b00:	ldr	r3, [pc, #2924]	; a674 <main@@Base+0x3aa4>
    9b04:	ldr	r2, [pc, #2924]	; a678 <main@@Base+0x3aa8>
    9b08:	add	r3, pc, r3
    9b0c:	ldr	r6, [r3, r2]
    9b10:	sub	sp, sp, #44	; 0x2c
    9b14:	ldr	r3, [r6]
    9b18:	tst	r0, #1
    9b1c:	mov	r4, r0
    9b20:	str	r3, [sp, #36]	; 0x24
    9b24:	bne	9b58 <main@@Base+0x2f88>
    9b28:	ldr	r5, [pc, #2892]	; a67c <main@@Base+0x3aac>
    9b2c:	ands	r7, r4, #2
    9b30:	add	r5, pc, r5
    9b34:	bne	9b68 <main@@Base+0x2f98>
    9b38:	tst	r4, #4
    9b3c:	bne	9e50 <main@@Base+0x3280>
    9b40:	ldr	r2, [sp, #36]	; 0x24
    9b44:	ldr	r3, [r6]
    9b48:	cmp	r2, r3
    9b4c:	bne	a670 <main@@Base+0x3aa0>
    9b50:	add	sp, sp, #44	; 0x2c
    9b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9b58:	ldr	r5, [pc, #2848]	; a680 <main@@Base+0x3ab0>
    9b5c:	ands	r7, r4, #2
    9b60:	add	r5, pc, r5
    9b64:	beq	9b38 <main@@Base+0x2f68>
    9b68:	bl	5f00 <avutil_version@plt>
    9b6c:	mov	r9, #100	; 0x64
    9b70:	mov	ip, #22
    9b74:	mov	r1, #56	; 0x38
    9b78:	lsr	r2, r0, #8
    9b7c:	ldr	r8, [pc, #2816]	; a684 <main@@Base+0x3ab4>
    9b80:	ldr	r3, [pc, #2816]	; a688 <main@@Base+0x3ab8>
    9b84:	uxtb	r2, r2
    9b88:	add	r3, pc, r3
    9b8c:	str	r2, [sp, #20]
    9b90:	add	r8, pc, r8
    9b94:	uxtb	r2, r0
    9b98:	lsr	r0, r0, #16
    9b9c:	str	r2, [sp, #24]
    9ba0:	str	r0, [sp, #16]
    9ba4:	stmib	sp, {r1, ip}
    9ba8:	str	r3, [sp]
    9bac:	str	r9, [sp, #12]
    9bb0:	mov	r2, r8
    9bb4:	mov	r3, r5
    9bb8:	mov	r1, #32
    9bbc:	mov	r0, #0
    9bc0:	bl	6188 <av_log@plt>
    9bc4:	ands	r4, r4, #4
    9bc8:	bne	9e50 <main@@Base+0x3280>
    9bcc:	bl	6338 <avcodec_version@plt>
    9bd0:	mov	r7, #58	; 0x3a
    9bd4:	mov	r1, #35	; 0x23
    9bd8:	ldr	r3, [pc, #2732]	; a68c <main@@Base+0x3abc>
    9bdc:	lsr	r2, r0, #8
    9be0:	uxtb	ip, r0
    9be4:	add	r3, pc, r3
    9be8:	uxtb	r2, r2
    9bec:	lsr	r0, r0, #16
    9bf0:	str	ip, [sp, #24]
    9bf4:	stm	sp, {r3, r7}
    9bf8:	str	r2, [sp, #20]
    9bfc:	mov	r3, r5
    9c00:	mov	r2, r8
    9c04:	str	r0, [sp, #16]
    9c08:	str	r1, [sp, #8]
    9c0c:	mov	r0, r4
    9c10:	mov	r1, #32
    9c14:	str	r9, [sp, #12]
    9c18:	bl	6188 <av_log@plt>
    9c1c:	bl	647c <avformat_version@plt>
    9c20:	mov	r1, #20
    9c24:	ldr	r3, [pc, #2660]	; a690 <main@@Base+0x3ac0>
    9c28:	lsr	r2, r0, #8
    9c2c:	uxtb	ip, r0
    9c30:	add	r3, pc, r3
    9c34:	uxtb	r2, r2
    9c38:	lsr	r0, r0, #16
    9c3c:	str	ip, [sp, #24]
    9c40:	str	r7, [sp, #4]
    9c44:	str	r2, [sp, #20]
    9c48:	str	r0, [sp, #16]
    9c4c:	mov	r2, r8
    9c50:	str	r1, [sp, #8]
    9c54:	str	r3, [sp]
    9c58:	mov	r1, #32
    9c5c:	mov	r3, r5
    9c60:	mov	r0, r4
    9c64:	str	r9, [sp, #12]
    9c68:	bl	6188 <av_log@plt>
    9c6c:	bl	6824 <avdevice_version@plt>
    9c70:	mov	sl, #5
    9c74:	ldr	r3, [pc, #2584]	; a694 <main@@Base+0x3ac4>
    9c78:	lsr	r2, r0, #8
    9c7c:	uxtb	r1, r0
    9c80:	add	r3, pc, r3
    9c84:	uxtb	r2, r2
    9c88:	lsr	r0, r0, #16
    9c8c:	str	r7, [sp, #4]
    9c90:	str	r2, [sp, #20]
    9c94:	str	r1, [sp, #24]
    9c98:	mov	r2, r8
    9c9c:	str	r0, [sp, #16]
    9ca0:	str	sl, [sp, #8]
    9ca4:	str	r3, [sp]
    9ca8:	mov	r1, #32
    9cac:	mov	r3, r5
    9cb0:	mov	r0, r4
    9cb4:	str	r9, [sp, #12]
    9cb8:	bl	6188 <av_log@plt>
    9cbc:	bl	5cfc <avfilter_version@plt>
    9cc0:	mov	ip, #101	; 0x65
    9cc4:	mov	r1, #40	; 0x28
    9cc8:	mov	r2, #7
    9ccc:	lsr	r3, r0, #8
    9cd0:	uxtb	r3, r3
    9cd4:	str	r3, [sp, #20]
    9cd8:	uxtb	r3, r0
    9cdc:	str	r3, [sp, #24]
    9ce0:	ldr	r3, [pc, #2480]	; a698 <main@@Base+0x3ac8>
    9ce4:	lsr	r0, r0, #16
    9ce8:	add	r3, pc, r3
    9cec:	str	ip, [sp, #12]
    9cf0:	str	r0, [sp, #16]
    9cf4:	str	r1, [sp, #8]
    9cf8:	str	r2, [sp, #4]
    9cfc:	str	r3, [sp]
    9d00:	mov	r2, r8
    9d04:	mov	r3, r5
    9d08:	mov	r1, #32
    9d0c:	mov	r0, r4
    9d10:	bl	6188 <av_log@plt>
    9d14:	bl	6410 <avresample_version@plt>
    9d18:	mov	r1, #4
    9d1c:	ldr	r3, [pc, #2424]	; a69c <main@@Base+0x3acc>
    9d20:	lsr	r2, r0, #8
    9d24:	uxtb	ip, r0
    9d28:	add	r3, pc, r3
    9d2c:	uxtb	r2, r2
    9d30:	lsr	r0, r0, #16
    9d34:	str	ip, [sp, #24]
    9d38:	str	r2, [sp, #20]
    9d3c:	str	r0, [sp, #16]
    9d40:	mov	r2, r8
    9d44:	str	r1, [sp, #4]
    9d48:	str	r3, [sp]
    9d4c:	mov	r1, #32
    9d50:	mov	r3, r5
    9d54:	mov	r0, r4
    9d58:	str	r4, [sp, #12]
    9d5c:	str	r4, [sp, #8]
    9d60:	bl	6188 <av_log@plt>
    9d64:	bl	6938 <swscale_version@plt>
    9d68:	mov	r7, #3
    9d6c:	ldr	r3, [pc, #2348]	; a6a0 <main@@Base+0x3ad0>
    9d70:	lsr	r2, r0, #8
    9d74:	uxtb	r1, r0
    9d78:	add	r3, pc, r3
    9d7c:	uxtb	r2, r2
    9d80:	lsr	r0, r0, #16
    9d84:	str	sl, [sp, #4]
    9d88:	str	r2, [sp, #20]
    9d8c:	str	r1, [sp, #24]
    9d90:	mov	r2, r8
    9d94:	str	r0, [sp, #16]
    9d98:	str	r3, [sp]
    9d9c:	mov	r1, #32
    9da0:	mov	r3, r5
    9da4:	mov	r0, r4
    9da8:	str	r9, [sp, #12]
    9dac:	str	r7, [sp, #8]
    9db0:	bl	6188 <av_log@plt>
    9db4:	bl	635c <swresample_version@plt>
    9db8:	ldr	r3, [pc, #2276]	; a6a4 <main@@Base+0x3ad4>
    9dbc:	lsr	r2, r0, #8
    9dc0:	uxtb	r1, r0
    9dc4:	add	r3, pc, r3
    9dc8:	uxtb	r2, r2
    9dcc:	lsr	r0, r0, #16
    9dd0:	str	r2, [sp, #20]
    9dd4:	str	r1, [sp, #24]
    9dd8:	mov	r2, r8
    9ddc:	str	r0, [sp, #16]
    9de0:	str	r3, [sp]
    9de4:	mov	r1, #32
    9de8:	mov	r3, r5
    9dec:	mov	r0, r4
    9df0:	str	r7, [sp, #8]
    9df4:	str	r7, [sp, #4]
    9df8:	str	r9, [sp, #12]
    9dfc:	bl	6188 <av_log@plt>
    9e00:	bl	6548 <postproc_version@plt>
    9e04:	mov	lr, #55	; 0x37
    9e08:	ldr	r1, [pc, #2200]	; a6a8 <main@@Base+0x3ad8>
    9e0c:	lsr	ip, r0, #8
    9e10:	uxtb	sl, r0
    9e14:	lsr	fp, r0, #16
    9e18:	add	r1, pc, r1
    9e1c:	uxtb	ip, ip
    9e20:	stm	sp, {r1, lr}
    9e24:	str	r7, [sp, #8]
    9e28:	str	r9, [sp, #12]
    9e2c:	mov	r3, r5
    9e30:	mov	r2, r8
    9e34:	mov	r0, r4
    9e38:	str	ip, [sp, #20]
    9e3c:	str	sl, [sp, #24]
    9e40:	str	fp, [sp, #16]
    9e44:	mov	r1, #32
    9e48:	bl	6188 <av_log@plt>
    9e4c:	b	9b40 <main@@Base+0x2f70>
    9e50:	bl	5f48 <avutil_configuration@plt>
    9e54:	mov	r1, r0
    9e58:	mov	r4, r0
    9e5c:	ldr	r0, [pc, #2120]	; a6ac <main@@Base+0x3adc>
    9e60:	add	r0, pc, r0
    9e64:	bl	695c <strcmp@plt>
    9e68:	cmp	r0, #0
    9e6c:	beq	9ea8 <main@@Base+0x32d8>
    9e70:	ldr	r8, [pc, #2104]	; a6b0 <main@@Base+0x3ae0>
    9e74:	add	r8, pc, r8
    9e78:	ldr	r0, [r8, #4]
    9e7c:	cmp	r0, #0
    9e80:	beq	a590 <main@@Base+0x39c0>
    9e84:	ldr	r3, [pc, #2088]	; a6b4 <main@@Base+0x3ae4>
    9e88:	ldr	r2, [pc, #2088]	; a6b8 <main@@Base+0x3ae8>
    9e8c:	add	r3, pc, r3
    9e90:	stm	sp, {r3, r4}
    9e94:	add	r2, pc, r2
    9e98:	mov	r3, r5
    9e9c:	mov	r1, #32
    9ea0:	mov	r0, #0
    9ea4:	bl	6188 <av_log@plt>
    9ea8:	cmp	r7, #0
    9eac:	bne	a4d0 <main@@Base+0x3900>
    9eb0:	bl	69f8 <avcodec_configuration@plt>
    9eb4:	mov	r1, r0
    9eb8:	mov	r4, r0
    9ebc:	ldr	r0, [pc, #2040]	; a6bc <main@@Base+0x3aec>
    9ec0:	add	r0, pc, r0
    9ec4:	bl	695c <strcmp@plt>
    9ec8:	cmp	r0, #0
    9ecc:	beq	a310 <main@@Base+0x3740>
    9ed0:	ldr	r8, [pc, #2024]	; a6c0 <main@@Base+0x3af0>
    9ed4:	add	r8, pc, r8
    9ed8:	ldr	r0, [r8, #4]
    9edc:	cmp	r0, #0
    9ee0:	beq	a630 <main@@Base+0x3a60>
    9ee4:	ldr	r3, [pc, #2008]	; a6c4 <main@@Base+0x3af4>
    9ee8:	ldr	r2, [pc, #2008]	; a6c8 <main@@Base+0x3af8>
    9eec:	add	r3, pc, r3
    9ef0:	stm	sp, {r3, r4}
    9ef4:	add	r2, pc, r2
    9ef8:	mov	r3, r5
    9efc:	mov	r1, #32
    9f00:	mov	r0, #0
    9f04:	bl	6188 <av_log@plt>
    9f08:	cmp	r7, #0
    9f0c:	beq	a310 <main@@Base+0x3740>
    9f10:	bl	647c <avformat_version@plt>
    9f14:	mov	r2, #58	; 0x3a
    9f18:	mov	ip, #100	; 0x64
    9f1c:	mov	r1, #20
    9f20:	lsr	r3, r0, #8
    9f24:	uxtb	r3, r3
    9f28:	str	r3, [sp, #20]
    9f2c:	uxtb	r3, r0
    9f30:	str	r3, [sp, #24]
    9f34:	ldr	r3, [pc, #1936]	; a6cc <main@@Base+0x3afc>
    9f38:	str	r2, [sp, #4]
    9f3c:	ldr	r2, [pc, #1932]	; a6d0 <main@@Base+0x3b00>
    9f40:	lsr	r0, r0, #16
    9f44:	add	r3, pc, r3
    9f48:	str	ip, [sp, #12]
    9f4c:	add	r2, pc, r2
    9f50:	str	r0, [sp, #16]
    9f54:	str	r1, [sp, #8]
    9f58:	str	r3, [sp]
    9f5c:	mov	r1, #32
    9f60:	mov	r3, r5
    9f64:	mov	r0, #0
    9f68:	bl	6188 <av_log@plt>
    9f6c:	bl	656c <avformat_configuration@plt>
    9f70:	mov	r1, r0
    9f74:	mov	r4, r0
    9f78:	ldr	r0, [pc, #1876]	; a6d4 <main@@Base+0x3b04>
    9f7c:	add	r0, pc, r0
    9f80:	bl	695c <strcmp@plt>
    9f84:	cmp	r0, #0
    9f88:	bne	a330 <main@@Base+0x3760>
    9f8c:	bl	6824 <avdevice_version@plt>
    9f90:	mov	r2, #58	; 0x3a
    9f94:	mov	ip, #100	; 0x64
    9f98:	mov	r1, #5
    9f9c:	lsr	r3, r0, #8
    9fa0:	uxtb	r3, r3
    9fa4:	str	r3, [sp, #20]
    9fa8:	uxtb	r3, r0
    9fac:	str	r3, [sp, #24]
    9fb0:	ldr	r3, [pc, #1824]	; a6d8 <main@@Base+0x3b08>
    9fb4:	str	r2, [sp, #4]
    9fb8:	ldr	r2, [pc, #1820]	; a6dc <main@@Base+0x3b0c>
    9fbc:	lsr	r0, r0, #16
    9fc0:	add	r3, pc, r3
    9fc4:	str	ip, [sp, #12]
    9fc8:	add	r2, pc, r2
    9fcc:	str	r0, [sp, #16]
    9fd0:	str	r1, [sp, #8]
    9fd4:	str	r3, [sp]
    9fd8:	mov	r1, #32
    9fdc:	mov	r3, r5
    9fe0:	mov	r0, #0
    9fe4:	bl	6188 <av_log@plt>
    9fe8:	bl	6380 <avdevice_configuration@plt>
    9fec:	mov	r1, r0
    9ff0:	mov	r4, r0
    9ff4:	ldr	r0, [pc, #1764]	; a6e0 <main@@Base+0x3b10>
    9ff8:	add	r0, pc, r0
    9ffc:	bl	695c <strcmp@plt>
    a000:	cmp	r0, #0
    a004:	bne	a390 <main@@Base+0x37c0>
    a008:	bl	5cfc <avfilter_version@plt>
    a00c:	mov	r2, #7
    a010:	mov	ip, #101	; 0x65
    a014:	mov	r1, #40	; 0x28
    a018:	lsr	r3, r0, #8
    a01c:	uxtb	r3, r3
    a020:	str	r3, [sp, #20]
    a024:	uxtb	r3, r0
    a028:	str	r3, [sp, #24]
    a02c:	ldr	r3, [pc, #1712]	; a6e4 <main@@Base+0x3b14>
    a030:	str	r2, [sp, #4]
    a034:	ldr	r2, [pc, #1708]	; a6e8 <main@@Base+0x3b18>
    a038:	lsr	r0, r0, #16
    a03c:	add	r3, pc, r3
    a040:	str	ip, [sp, #12]
    a044:	add	r2, pc, r2
    a048:	str	r0, [sp, #16]
    a04c:	str	r1, [sp, #8]
    a050:	str	r3, [sp]
    a054:	mov	r1, #32
    a058:	mov	r3, r5
    a05c:	mov	r0, #0
    a060:	bl	6188 <av_log@plt>
    a064:	bl	5d98 <avfilter_configuration@plt>
    a068:	mov	r1, r0
    a06c:	mov	r4, r0
    a070:	ldr	r0, [pc, #1652]	; a6ec <main@@Base+0x3b1c>
    a074:	add	r0, pc, r0
    a078:	bl	695c <strcmp@plt>
    a07c:	cmp	r0, #0
    a080:	bne	a3f0 <main@@Base+0x3820>
    a084:	bl	6410 <avresample_version@plt>
    a088:	mov	r3, r0
    a08c:	mov	ip, #4
    a090:	mov	r0, #0
    a094:	ldr	r2, [pc, #1620]	; a6f0 <main@@Base+0x3b20>
    a098:	lsr	r1, r3, #8
    a09c:	add	r2, pc, r2
    a0a0:	stm	sp, {r2, ip}
    a0a4:	uxtb	r1, r1
    a0a8:	ldr	r2, [pc, #1604]	; a6f4 <main@@Base+0x3b24>
    a0ac:	str	r1, [sp, #20]
    a0b0:	uxtb	r1, r3
    a0b4:	lsr	r3, r3, #16
    a0b8:	add	r2, pc, r2
    a0bc:	str	r1, [sp, #24]
    a0c0:	str	r3, [sp, #16]
    a0c4:	mov	r1, #32
    a0c8:	mov	r3, r5
    a0cc:	str	r0, [sp, #12]
    a0d0:	str	r0, [sp, #8]
    a0d4:	bl	6188 <av_log@plt>
    a0d8:	bl	5e04 <avresample_configuration@plt>
    a0dc:	mov	r1, r0
    a0e0:	mov	r4, r0
    a0e4:	ldr	r0, [pc, #1548]	; a6f8 <main@@Base+0x3b28>
    a0e8:	add	r0, pc, r0
    a0ec:	bl	695c <strcmp@plt>
    a0f0:	cmp	r0, #0
    a0f4:	beq	a138 <main@@Base+0x3568>
    a0f8:	ldr	r8, [pc, #1532]	; a6fc <main@@Base+0x3b2c>
    a0fc:	add	r8, pc, r8
    a100:	ldr	r0, [r8, #4]
    a104:	cmp	r0, #0
    a108:	beq	a5b0 <main@@Base+0x39e0>
    a10c:	ldr	r3, [pc, #1516]	; a700 <main@@Base+0x3b30>
    a110:	ldr	r2, [pc, #1516]	; a704 <main@@Base+0x3b34>
    a114:	add	r3, pc, r3
    a118:	stm	sp, {r3, r4}
    a11c:	add	r2, pc, r2
    a120:	mov	r3, r5
    a124:	mov	r1, #32
    a128:	mov	r0, #0
    a12c:	bl	6188 <av_log@plt>
    a130:	cmp	r7, #0
    a134:	beq	a194 <main@@Base+0x35c4>
    a138:	bl	6938 <swscale_version@plt>
    a13c:	mov	r2, #5
    a140:	mov	r1, #3
    a144:	mov	ip, #100	; 0x64
    a148:	lsr	r3, r0, #8
    a14c:	uxtb	r3, r3
    a150:	str	r3, [sp, #20]
    a154:	uxtb	r3, r0
    a158:	str	r3, [sp, #24]
    a15c:	ldr	r3, [pc, #1444]	; a708 <main@@Base+0x3b38>
    a160:	str	r2, [sp, #4]
    a164:	ldr	r2, [pc, #1440]	; a70c <main@@Base+0x3b3c>
    a168:	lsr	r0, r0, #16
    a16c:	add	r3, pc, r3
    a170:	str	r0, [sp, #16]
    a174:	str	r1, [sp, #8]
    a178:	str	r3, [sp]
    a17c:	str	ip, [sp, #12]
    a180:	mov	r3, r5
    a184:	add	r2, pc, r2
    a188:	mov	r1, #32
    a18c:	mov	r0, #0
    a190:	bl	6188 <av_log@plt>
    a194:	bl	65cc <swscale_configuration@plt>
    a198:	mov	r1, r0
    a19c:	mov	r4, r0
    a1a0:	ldr	r0, [pc, #1384]	; a710 <main@@Base+0x3b40>
    a1a4:	add	r0, pc, r0
    a1a8:	bl	695c <strcmp@plt>
    a1ac:	cmp	r0, #0
    a1b0:	beq	a1ec <main@@Base+0x361c>
    a1b4:	ldr	r8, [pc, #1368]	; a714 <main@@Base+0x3b44>
    a1b8:	add	r8, pc, r8
    a1bc:	ldr	r0, [r8, #4]
    a1c0:	cmp	r0, #0
    a1c4:	beq	a5d0 <main@@Base+0x3a00>
    a1c8:	ldr	r3, [pc, #1352]	; a718 <main@@Base+0x3b48>
    a1cc:	ldr	r2, [pc, #1352]	; a71c <main@@Base+0x3b4c>
    a1d0:	add	r3, pc, r3
    a1d4:	stm	sp, {r3, r4}
    a1d8:	add	r2, pc, r2
    a1dc:	mov	r3, r5
    a1e0:	mov	r1, #32
    a1e4:	mov	r0, #0
    a1e8:	bl	6188 <av_log@plt>
    a1ec:	cmp	r7, #0
    a1f0:	bne	a454 <main@@Base+0x3884>
    a1f4:	bl	6320 <swresample_configuration@plt>
    a1f8:	mov	r1, r0
    a1fc:	mov	r4, r0
    a200:	ldr	r0, [pc, #1304]	; a720 <main@@Base+0x3b50>
    a204:	add	r0, pc, r0
    a208:	bl	695c <strcmp@plt>
    a20c:	cmp	r0, #0
    a210:	beq	a2b0 <main@@Base+0x36e0>
    a214:	ldr	r8, [pc, #1288]	; a724 <main@@Base+0x3b54>
    a218:	add	r8, pc, r8
    a21c:	ldr	r0, [r8, #4]
    a220:	cmp	r0, #0
    a224:	beq	a5f0 <main@@Base+0x3a20>
    a228:	ldr	r3, [pc, #1272]	; a728 <main@@Base+0x3b58>
    a22c:	ldr	r2, [pc, #1272]	; a72c <main@@Base+0x3b5c>
    a230:	add	r3, pc, r3
    a234:	stm	sp, {r3, r4}
    a238:	add	r2, pc, r2
    a23c:	mov	r3, r5
    a240:	mov	r1, #32
    a244:	mov	r0, #0
    a248:	bl	6188 <av_log@plt>
    a24c:	cmp	r7, #0
    a250:	beq	a2b0 <main@@Base+0x36e0>
    a254:	bl	6548 <postproc_version@plt>
    a258:	mov	r2, #55	; 0x37
    a25c:	mov	r1, #3
    a260:	mov	ip, #100	; 0x64
    a264:	lsr	r3, r0, #8
    a268:	uxtb	r3, r3
    a26c:	str	r3, [sp, #20]
    a270:	uxtb	r3, r0
    a274:	str	r3, [sp, #24]
    a278:	ldr	r3, [pc, #1200]	; a730 <main@@Base+0x3b60>
    a27c:	str	r2, [sp, #4]
    a280:	ldr	r2, [pc, #1196]	; a734 <main@@Base+0x3b64>
    a284:	lsr	r0, r0, #16
    a288:	add	r3, pc, r3
    a28c:	str	r0, [sp, #16]
    a290:	str	r1, [sp, #8]
    a294:	str	r3, [sp]
    a298:	str	ip, [sp, #12]
    a29c:	mov	r3, r5
    a2a0:	add	r2, pc, r2
    a2a4:	mov	r1, #32
    a2a8:	mov	r0, #0
    a2ac:	bl	6188 <av_log@plt>
    a2b0:	bl	620c <postproc_configuration@plt>
    a2b4:	mov	r1, r0
    a2b8:	mov	r4, r0
    a2bc:	ldr	r0, [pc, #1140]	; a738 <main@@Base+0x3b68>
    a2c0:	add	r0, pc, r0
    a2c4:	bl	695c <strcmp@plt>
    a2c8:	cmp	r0, #0
    a2cc:	beq	9b40 <main@@Base+0x2f70>
    a2d0:	ldr	r7, [pc, #1124]	; a73c <main@@Base+0x3b6c>
    a2d4:	add	r7, pc, r7
    a2d8:	ldr	r0, [r7, #4]
    a2dc:	cmp	r0, #0
    a2e0:	beq	a550 <main@@Base+0x3980>
    a2e4:	ldr	r2, [pc, #1108]	; a740 <main@@Base+0x3b70>
    a2e8:	str	r4, [sp, #4]
    a2ec:	add	r2, pc, r2
    a2f0:	str	r2, [sp]
    a2f4:	ldr	r2, [pc, #1096]	; a744 <main@@Base+0x3b74>
    a2f8:	mov	r3, r5
    a2fc:	add	r2, pc, r2
    a300:	mov	r1, #32
    a304:	mov	r0, #0
    a308:	bl	6188 <av_log@plt>
    a30c:	b	9b40 <main@@Base+0x2f70>
    a310:	bl	656c <avformat_configuration@plt>
    a314:	mov	r1, r0
    a318:	mov	r4, r0
    a31c:	ldr	r0, [pc, #1060]	; a748 <main@@Base+0x3b78>
    a320:	add	r0, pc, r0
    a324:	bl	695c <strcmp@plt>
    a328:	cmp	r0, #0
    a32c:	beq	a370 <main@@Base+0x37a0>
    a330:	ldr	r8, [pc, #1044]	; a74c <main@@Base+0x3b7c>
    a334:	add	r8, pc, r8
    a338:	ldr	r0, [r8, #4]
    a33c:	cmp	r0, #0
    a340:	beq	a570 <main@@Base+0x39a0>
    a344:	ldr	r3, [pc, #1028]	; a750 <main@@Base+0x3b80>
    a348:	ldr	r2, [pc, #1028]	; a754 <main@@Base+0x3b84>
    a34c:	add	r3, pc, r3
    a350:	stm	sp, {r3, r4}
    a354:	add	r2, pc, r2
    a358:	mov	r3, r5
    a35c:	mov	r1, #32
    a360:	mov	r0, #0
    a364:	bl	6188 <av_log@plt>
    a368:	cmp	r7, #0
    a36c:	bne	9f8c <main@@Base+0x33bc>
    a370:	bl	6380 <avdevice_configuration@plt>
    a374:	mov	r1, r0
    a378:	mov	r4, r0
    a37c:	ldr	r0, [pc, #980]	; a758 <main@@Base+0x3b88>
    a380:	add	r0, pc, r0
    a384:	bl	695c <strcmp@plt>
    a388:	cmp	r0, #0
    a38c:	beq	a3d0 <main@@Base+0x3800>
    a390:	ldr	r8, [pc, #964]	; a75c <main@@Base+0x3b8c>
    a394:	add	r8, pc, r8
    a398:	ldr	r0, [r8, #4]
    a39c:	cmp	r0, #0
    a3a0:	beq	a610 <main@@Base+0x3a40>
    a3a4:	ldr	r3, [pc, #948]	; a760 <main@@Base+0x3b90>
    a3a8:	ldr	r2, [pc, #948]	; a764 <main@@Base+0x3b94>
    a3ac:	add	r3, pc, r3
    a3b0:	stm	sp, {r3, r4}
    a3b4:	add	r2, pc, r2
    a3b8:	mov	r3, r5
    a3bc:	mov	r1, #32
    a3c0:	mov	r0, #0
    a3c4:	bl	6188 <av_log@plt>
    a3c8:	cmp	r7, #0
    a3cc:	bne	a008 <main@@Base+0x3438>
    a3d0:	bl	5d98 <avfilter_configuration@plt>
    a3d4:	mov	r1, r0
    a3d8:	mov	r4, r0
    a3dc:	ldr	r0, [pc, #900]	; a768 <main@@Base+0x3b98>
    a3e0:	add	r0, pc, r0
    a3e4:	bl	695c <strcmp@plt>
    a3e8:	cmp	r0, #0
    a3ec:	beq	a430 <main@@Base+0x3860>
    a3f0:	ldr	r8, [pc, #884]	; a76c <main@@Base+0x3b9c>
    a3f4:	add	r8, pc, r8
    a3f8:	ldr	r0, [r8, #4]
    a3fc:	cmp	r0, #0
    a400:	beq	a650 <main@@Base+0x3a80>
    a404:	ldr	r3, [pc, #868]	; a770 <main@@Base+0x3ba0>
    a408:	ldr	r2, [pc, #868]	; a774 <main@@Base+0x3ba4>
    a40c:	add	r3, pc, r3
    a410:	stm	sp, {r3, r4}
    a414:	add	r2, pc, r2
    a418:	mov	r3, r5
    a41c:	mov	r1, #32
    a420:	mov	r0, #0
    a424:	bl	6188 <av_log@plt>
    a428:	cmp	r7, #0
    a42c:	bne	a084 <main@@Base+0x34b4>
    a430:	bl	5e04 <avresample_configuration@plt>
    a434:	mov	r1, r0
    a438:	mov	r4, r0
    a43c:	ldr	r0, [pc, #820]	; a778 <main@@Base+0x3ba8>
    a440:	add	r0, pc, r0
    a444:	bl	695c <strcmp@plt>
    a448:	cmp	r0, #0
    a44c:	bne	a0f8 <main@@Base+0x3528>
    a450:	b	a194 <main@@Base+0x35c4>
    a454:	bl	635c <swresample_version@plt>
    a458:	mov	ip, #100	; 0x64
    a45c:	mov	r1, #3
    a460:	lsr	r2, r0, #8
    a464:	uxtb	r2, r2
    a468:	str	r2, [sp, #20]
    a46c:	ldr	r3, [pc, #776]	; a77c <main@@Base+0x3bac>
    a470:	uxtb	r2, r0
    a474:	str	r2, [sp, #24]
    a478:	ldr	r2, [pc, #768]	; a780 <main@@Base+0x3bb0>
    a47c:	add	r3, pc, r3
    a480:	lsr	r0, r0, #16
    a484:	str	ip, [sp, #12]
    a488:	add	r2, pc, r2
    a48c:	str	r0, [sp, #16]
    a490:	str	r1, [sp, #8]
    a494:	str	r1, [sp, #4]
    a498:	str	r3, [sp]
    a49c:	mov	r1, #32
    a4a0:	mov	r3, r5
    a4a4:	mov	r0, #0
    a4a8:	bl	6188 <av_log@plt>
    a4ac:	bl	6320 <swresample_configuration@plt>
    a4b0:	mov	r1, r0
    a4b4:	mov	r4, r0
    a4b8:	ldr	r0, [pc, #708]	; a784 <main@@Base+0x3bb4>
    a4bc:	add	r0, pc, r0
    a4c0:	bl	695c <strcmp@plt>
    a4c4:	cmp	r0, #0
    a4c8:	bne	a214 <main@@Base+0x3644>
    a4cc:	b	a254 <main@@Base+0x3684>
    a4d0:	bl	6338 <avcodec_version@plt>
    a4d4:	mov	r2, #58	; 0x3a
    a4d8:	mov	ip, #100	; 0x64
    a4dc:	mov	r1, #35	; 0x23
    a4e0:	lsr	r3, r0, #8
    a4e4:	uxtb	r3, r3
    a4e8:	str	r3, [sp, #20]
    a4ec:	uxtb	r3, r0
    a4f0:	str	r3, [sp, #24]
    a4f4:	ldr	r3, [pc, #652]	; a788 <main@@Base+0x3bb8>
    a4f8:	str	r2, [sp, #4]
    a4fc:	ldr	r2, [pc, #648]	; a78c <main@@Base+0x3bbc>
    a500:	lsr	r0, r0, #16
    a504:	add	r3, pc, r3
    a508:	str	ip, [sp, #12]
    a50c:	add	r2, pc, r2
    a510:	str	r0, [sp, #16]
    a514:	str	r1, [sp, #8]
    a518:	str	r3, [sp]
    a51c:	mov	r1, #32
    a520:	mov	r3, r5
    a524:	mov	r0, #0
    a528:	bl	6188 <av_log@plt>
    a52c:	bl	69f8 <avcodec_configuration@plt>
    a530:	mov	r1, r0
    a534:	mov	r4, r0
    a538:	ldr	r0, [pc, #592]	; a790 <main@@Base+0x3bc0>
    a53c:	add	r0, pc, r0
    a540:	bl	695c <strcmp@plt>
    a544:	cmp	r0, #0
    a548:	bne	9ed0 <main@@Base+0x3300>
    a54c:	b	9f10 <main@@Base+0x3340>
    a550:	ldr	r2, [pc, #572]	; a794 <main@@Base+0x3bc4>
    a554:	mov	r3, r5
    a558:	add	r2, pc, r2
    a55c:	mov	r1, #32
    a560:	bl	6188 <av_log@plt>
    a564:	mov	r3, #1
    a568:	str	r3, [r7, #4]
    a56c:	b	a2e4 <main@@Base+0x3714>
    a570:	ldr	r2, [pc, #544]	; a798 <main@@Base+0x3bc8>
    a574:	mov	r3, r5
    a578:	add	r2, pc, r2
    a57c:	mov	r1, #32
    a580:	bl	6188 <av_log@plt>
    a584:	mov	r3, #1
    a588:	str	r3, [r8, #4]
    a58c:	b	a344 <main@@Base+0x3774>
    a590:	ldr	r2, [pc, #516]	; a79c <main@@Base+0x3bcc>
    a594:	mov	r3, r5
    a598:	add	r2, pc, r2
    a59c:	mov	r1, #32
    a5a0:	bl	6188 <av_log@plt>
    a5a4:	mov	r3, #1
    a5a8:	str	r3, [r8, #4]
    a5ac:	b	9e84 <main@@Base+0x32b4>
    a5b0:	ldr	r2, [pc, #488]	; a7a0 <main@@Base+0x3bd0>
    a5b4:	mov	r3, r5
    a5b8:	add	r2, pc, r2
    a5bc:	mov	r1, #32
    a5c0:	bl	6188 <av_log@plt>
    a5c4:	mov	r3, #1
    a5c8:	str	r3, [r8, #4]
    a5cc:	b	a10c <main@@Base+0x353c>
    a5d0:	ldr	r2, [pc, #460]	; a7a4 <main@@Base+0x3bd4>
    a5d4:	mov	r3, r5
    a5d8:	add	r2, pc, r2
    a5dc:	mov	r1, #32
    a5e0:	bl	6188 <av_log@plt>
    a5e4:	mov	r3, #1
    a5e8:	str	r3, [r8, #4]
    a5ec:	b	a1c8 <main@@Base+0x35f8>
    a5f0:	ldr	r2, [pc, #432]	; a7a8 <main@@Base+0x3bd8>
    a5f4:	mov	r3, r5
    a5f8:	add	r2, pc, r2
    a5fc:	mov	r1, #32
    a600:	bl	6188 <av_log@plt>
    a604:	mov	r3, #1
    a608:	str	r3, [r8, #4]
    a60c:	b	a228 <main@@Base+0x3658>
    a610:	ldr	r2, [pc, #404]	; a7ac <main@@Base+0x3bdc>
    a614:	mov	r3, r5
    a618:	add	r2, pc, r2
    a61c:	mov	r1, #32
    a620:	bl	6188 <av_log@plt>
    a624:	mov	r3, #1
    a628:	str	r3, [r8, #4]
    a62c:	b	a3a4 <main@@Base+0x37d4>
    a630:	ldr	r2, [pc, #376]	; a7b0 <main@@Base+0x3be0>
    a634:	mov	r3, r5
    a638:	add	r2, pc, r2
    a63c:	mov	r1, #32
    a640:	bl	6188 <av_log@plt>
    a644:	mov	r3, #1
    a648:	str	r3, [r8, #4]
    a64c:	b	9ee4 <main@@Base+0x3314>
    a650:	ldr	r2, [pc, #348]	; a7b4 <main@@Base+0x3be4>
    a654:	mov	r3, r5
    a658:	add	r2, pc, r2
    a65c:	mov	r1, #32
    a660:	bl	6188 <av_log@plt>
    a664:	mov	r3, #1
    a668:	str	r3, [r8, #4]
    a66c:	b	a404 <main@@Base+0x3834>
    a670:	bl	5e7c <__stack_chk_fail@plt>
    a674:	andeq	lr, r2, ip, lsl #31
    a678:	andeq	r0, r0, r8, asr r5
    a67c:	andeq	fp, r1, r4, lsr r9
    a680:	andeq	r8, r1, r0, lsr #26
    a684:	andeq	r9, r1, ip, lsl #4
    a688:	andeq	r9, r1, ip, lsr r2
    a68c:	andeq	r9, r1, r0, lsr r2
    a690:	andeq	r9, r1, ip, ror #3
    a694:	andeq	r9, r1, r8, lsr #3
    a698:	andeq	r9, r1, ip, asr #2
    a69c:	andeq	r9, r1, r8, lsl r1
    a6a0:	ldrdeq	r9, [r1], -r4
    a6a4:	muleq	r1, r0, r0
    a6a8:	andeq	r9, r1, r8, asr #32
    a6ac:	andeq	r8, r1, r0, asr #20
    a6b0:	andeq	pc, r2, r8, lsr r2	; <UNPREDICTABLE>
    a6b4:	andeq	r8, r1, r8, lsr pc
    a6b8:	andeq	r8, r1, r4, ror #30
    a6bc:	andeq	r8, r1, r0, ror #19
    a6c0:	ldrdeq	pc, [r2], -r8
    a6c4:	andeq	r8, r1, r8, lsr #30
    a6c8:	andeq	r8, r1, r4, lsl #30
    a6cc:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
    a6d0:	andeq	r8, r1, r0, asr lr
    a6d4:	andeq	r8, r1, r4, lsr #18
    a6d8:	andeq	r8, r1, r8, ror #28
    a6dc:	ldrdeq	r8, [r1], -r4
    a6e0:	andeq	r8, r1, r8, lsr #17
    a6e4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
    a6e8:	andeq	r8, r1, r8, asr sp
    a6ec:	andeq	r8, r1, ip, lsr #16
    a6f0:	andeq	r8, r1, r4, lsr #27
    a6f4:	andeq	r8, r1, r4, ror #25
    a6f8:			; <UNDEFINED> instruction: 0x000187b8
    a6fc:			; <UNDEFINED> instruction: 0x0002efb0
    a700:	andeq	r8, r1, ip, lsr #26
    a704:	ldrdeq	r8, [r1], -ip
    a708:	andeq	r8, r1, r0, ror #25
    a70c:	andeq	r8, r1, r8, lsl ip
    a710:	strdeq	r8, [r1], -ip
    a714:	strdeq	lr, [r2], -r4
    a718:	andeq	r8, r1, ip, ror ip
    a71c:	andeq	r8, r1, r0, lsr #24
    a720:	muleq	r1, ip, r6
    a724:	muleq	r2, r4, lr
    a728:	andeq	r8, r1, r4, lsr #24
    a72c:	andeq	r8, r1, r0, asr #23
    a730:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
    a734:	strdeq	r8, [r1], -ip
    a738:	andeq	r8, r1, r0, ror #11
    a73c:	ldrdeq	lr, [r2], -r8
    a740:	andeq	r8, r1, r4, ror fp
    a744:	strdeq	r8, [r1], -ip
    a748:	andeq	r8, r1, r0, lsl #11
    a74c:	andeq	lr, r2, r8, ror sp
    a750:	ldrdeq	r8, [r1], -r0
    a754:	andeq	r8, r1, r4, lsr #21
    a758:	andeq	r8, r1, r0, lsr #10
    a75c:	andeq	lr, r2, r8, lsl sp
    a760:	andeq	r8, r1, ip, ror sl
    a764:	andeq	r8, r1, r4, asr #20
    a768:	andeq	r8, r1, r0, asr #9
    a76c:			; <UNDEFINED> instruction: 0x0002ecb8
    a770:	andeq	r8, r1, r8, lsr #20
    a774:	andeq	r8, r1, r4, ror #19
    a778:	andeq	r8, r1, r0, ror #8
    a77c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
    a780:	andeq	r8, r1, r4, lsl r9
    a784:	andeq	r8, r1, r4, ror #7
    a788:	andeq	r8, r1, r0, lsl r9
    a78c:	muleq	r1, r0, r8
    a790:	andeq	r8, r1, r4, ror #6
    a794:	andeq	r8, r1, r4, ror r8
    a798:	andeq	r8, r1, r4, asr r8
    a79c:	andeq	r8, r1, r4, lsr r8
    a7a0:	andeq	r8, r1, r4, lsl r8
    a7a4:	strdeq	r8, [r1], -r4
    a7a8:	ldrdeq	r8, [r1], -r4
    a7ac:			; <UNDEFINED> instruction: 0x000187b4
    a7b0:	muleq	r1, r4, r7
    a7b4:	andeq	r8, r1, r4, ror r7
    a7b8:	push	{lr}		; (str lr, [sp, #-4]!)
    a7bc:	ldr	r2, [pc, #80]	; a814 <main@@Base+0x3c44>
    a7c0:	ldr	r3, [pc, #80]	; a818 <main@@Base+0x3c48>
    a7c4:	add	r2, pc, r2
    a7c8:	ldr	r3, [r2, r3]
    a7cc:	sub	sp, sp, #12
    a7d0:	ldr	r1, [r3]
    a7d4:	str	r1, [sp, #4]
    a7d8:	ldr	r1, [sp, #4]
    a7dc:	ldr	r3, [r3]
    a7e0:	cmp	r1, r3
    a7e4:	bne	a810 <main@@Base+0x3c40>
    a7e8:	mov	r3, #0
    a7ec:	ldr	r1, [pc, #40]	; a81c <main@@Base+0x3c4c>
    a7f0:	ldr	r0, [r2, r1]
    a7f4:	ldr	r2, [pc, #36]	; a820 <main@@Base+0x3c50>
    a7f8:	ldr	r1, [pc, #36]	; a824 <main@@Base+0x3c54>
    a7fc:	add	r2, pc, r2
    a800:	add	r1, pc, r1
    a804:	add	sp, sp, #12
    a808:	pop	{lr}		; (ldr lr, [sp], #4)
    a80c:	b	6704 <av_dict_set@plt>
    a810:	bl	5e7c <__stack_chk_fail@plt>
    a814:	ldrdeq	lr, [r2], -r0
    a818:	andeq	r0, r0, r8, asr r5
    a81c:	andeq	r0, r0, r4, asr #10
    a820:	andeq	r8, r1, r0, ror r6
    a824:	andeq	sl, r1, ip, lsl #10
    a828:	push	{r4, r5, lr}
    a82c:	ldr	r4, [pc, #108]	; a8a0 <main@@Base+0x3cd0>
    a830:	ldr	r2, [pc, #108]	; a8a4 <main@@Base+0x3cd4>
    a834:	add	r4, pc, r4
    a838:	ldr	r5, [r4, r2]
    a83c:	sub	sp, sp, #12
    a840:	ldr	r2, [r5]
    a844:	ldr	r3, [pc, #92]	; a8a8 <main@@Base+0x3cd8>
    a848:	str	r2, [sp, #4]
    a84c:	ldr	r0, [r4, r3]
    a850:	bl	5e28 <av_dict_free@plt>
    a854:	ldr	r3, [pc, #80]	; a8ac <main@@Base+0x3cdc>
    a858:	ldr	r0, [r4, r3]
    a85c:	bl	5e28 <av_dict_free@plt>
    a860:	ldr	r3, [pc, #72]	; a8b0 <main@@Base+0x3ce0>
    a864:	ldr	r0, [r4, r3]
    a868:	bl	5e28 <av_dict_free@plt>
    a86c:	ldr	r3, [pc, #64]	; a8b4 <main@@Base+0x3ce4>
    a870:	ldr	r0, [r4, r3]
    a874:	bl	5e28 <av_dict_free@plt>
    a878:	ldr	r2, [sp, #4]
    a87c:	ldr	r3, [r5]
    a880:	cmp	r2, r3
    a884:	bne	a89c <main@@Base+0x3ccc>
    a888:	ldr	r3, [pc, #40]	; a8b8 <main@@Base+0x3ce8>
    a88c:	ldr	r0, [r4, r3]
    a890:	add	sp, sp, #12
    a894:	pop	{r4, r5, lr}
    a898:	b	5e28 <av_dict_free@plt>
    a89c:	bl	5e7c <__stack_chk_fail@plt>
    a8a0:	andeq	lr, r2, r0, ror #4
    a8a4:	andeq	r0, r0, r8, asr r5
    a8a8:	andeq	r0, r0, r0, ror #10
    a8ac:	andeq	r0, r0, r4, asr #10
    a8b0:	andeq	r0, r0, r8, lsl r5
    a8b4:	andeq	r0, r0, ip, asr r5
    a8b8:	andeq	r0, r0, r0, asr r5
    a8bc:	push	{lr}		; (str lr, [sp, #-4]!)
    a8c0:	ldr	r3, [pc, #48]	; a8f8 <main@@Base+0x3d28>
    a8c4:	ldr	r2, [pc, #48]	; a8fc <main@@Base+0x3d2c>
    a8c8:	add	r3, pc, r3
    a8cc:	ldr	r3, [r3, r2]
    a8d0:	sub	sp, sp, #12
    a8d4:	ldr	r2, [r3]
    a8d8:	str	r2, [sp, #4]
    a8dc:	ldr	r2, [sp, #4]
    a8e0:	ldr	r3, [r3]
    a8e4:	cmp	r2, r3
    a8e8:	bne	a8f4 <main@@Base+0x3d24>
    a8ec:	add	sp, sp, #12
    a8f0:	pop	{pc}		; (ldr pc, [sp], #4)
    a8f4:	bl	5e7c <__stack_chk_fail@plt>
    a8f8:	andeq	lr, r2, ip, asr #3
    a8fc:	andeq	r0, r0, r8, asr r5
    a900:	push	{lr}		; (str lr, [sp, #-4]!)
    a904:	ldr	r3, [pc, #60]	; a948 <main@@Base+0x3d78>
    a908:	ldr	r1, [pc, #60]	; a94c <main@@Base+0x3d7c>
    a90c:	add	r3, pc, r3
    a910:	ldr	r1, [r3, r1]
    a914:	ldr	r2, [pc, #52]	; a950 <main@@Base+0x3d80>
    a918:	ldr	r3, [r1]
    a91c:	sub	sp, sp, #12
    a920:	add	r2, pc, r2
    a924:	str	r3, [sp, #4]
    a928:	str	r0, [r2, #8]
    a92c:	ldr	r2, [sp, #4]
    a930:	ldr	r3, [r1]
    a934:	cmp	r2, r3
    a938:	bne	a944 <main@@Base+0x3d74>
    a93c:	add	sp, sp, #12
    a940:	pop	{pc}		; (ldr pc, [sp], #4)
    a944:	bl	5e7c <__stack_chk_fail@plt>
    a948:	andeq	lr, r2, r8, lsl #3
    a94c:	andeq	r0, r0, r8, asr r5
    a950:	andeq	lr, r2, ip, lsl #15
    a954:	push	{lr}		; (str lr, [sp, #-4]!)
    a958:	ldr	r3, [pc, #56]	; a998 <main@@Base+0x3dc8>
    a95c:	ldr	r1, [pc, #56]	; a99c <main@@Base+0x3dcc>
    a960:	ldr	r2, [pc, #56]	; a9a0 <main@@Base+0x3dd0>
    a964:	add	r3, pc, r3
    a968:	ldr	r1, [r3, r1]
    a96c:	add	r2, pc, r2
    a970:	ldr	r2, [r2, #8]
    a974:	ldr	r1, [r1]
    a978:	sub	sp, sp, #12
    a97c:	cmp	r2, #0
    a980:	str	r1, [sp, #4]
    a984:	mov	r4, r0
    a988:	beq	a990 <main@@Base+0x3dc0>
    a98c:	blx	r2
    a990:	mov	r0, r4
    a994:	bl	6adc <exit@plt>
    a998:	andeq	lr, r2, r0, lsr r1
    a99c:	andeq	r0, r0, r8, asr r5
    a9a0:	andeq	lr, r2, r0, asr #14
    a9a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a9a8:	ldr	fp, [pc, #1200]	; ae60 <main@@Base+0x4290>
    a9ac:	sub	sp, sp, #1168	; 0x490
    a9b0:	sub	sp, sp, #12
    a9b4:	ldr	r2, [pc, #1192]	; ae64 <main@@Base+0x4294>
    a9b8:	ldr	r3, [pc, #1192]	; ae68 <main@@Base+0x4298>
    a9bc:	add	fp, pc, fp
    a9c0:	str	r0, [sp, #60]	; 0x3c
    a9c4:	ldr	r2, [fp, r2]
    a9c8:	add	r3, pc, r3
    a9cc:	ldr	r6, [r3]
    a9d0:	ldr	r3, [r2]
    a9d4:	cmp	r6, #0
    a9d8:	str	r2, [sp, #44]	; 0x2c
    a9dc:	str	r3, [sp, #1172]	; 0x494
    a9e0:	movne	r4, #0
    a9e4:	beq	aa0c <main@@Base+0x3e3c>
    a9e8:	ldr	r3, [sp, #44]	; 0x2c
    a9ec:	ldr	r2, [sp, #1172]	; 0x494
    a9f0:	ldr	r3, [r3]
    a9f4:	mov	r0, r4
    a9f8:	cmp	r2, r3
    a9fc:	bne	ae5c <main@@Base+0x428c>
    aa00:	add	sp, sp, #1168	; 0x490
    aa04:	add	sp, sp, #12
    aa08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aa0c:	add	r4, sp, #76	; 0x4c
    aa10:	add	r3, sp, #88	; 0x58
    aa14:	mov	r0, r4
    aa18:	str	r3, [sp, #48]	; 0x30
    aa1c:	bl	69ec <time@plt>
    aa20:	mov	r0, r4
    aa24:	bl	680c <localtime@plt>
    aa28:	ldr	r3, [sp, #60]	; 0x3c
    aa2c:	mov	r7, r0
    aa30:	cmp	r3, #0
    aa34:	beq	adf8 <main@@Base+0x4228>
    aa38:	ldrb	r3, [r3]
    aa3c:	cmp	r3, #0
    aa40:	beq	adf8 <main@@Base+0x4228>
    aa44:	ldr	r3, [pc, #1056]	; ae6c <main@@Base+0x429c>
    aa48:	ldr	sl, [pc, #1056]	; ae70 <main@@Base+0x42a0>
    aa4c:	ldr	r9, [pc, #1056]	; ae74 <main@@Base+0x42a4>
    aa50:	add	r3, pc, r3
    aa54:	add	r2, sp, #72	; 0x48
    aa58:	add	r1, sp, #68	; 0x44
    aa5c:	mov	r5, r6
    aa60:	str	r6, [sp, #40]	; 0x28
    aa64:	str	fp, [sp, #56]	; 0x38
    aa68:	add	sl, pc, sl
    aa6c:	add	r9, pc, r9
    aa70:	add	r8, sp, #60	; 0x3c
    aa74:	str	r0, [sp, #52]	; 0x34
    aa78:	mov	r7, r1
    aa7c:	mov	fp, r2
    aa80:	mov	r6, r3
    aa84:	b	aae4 <main@@Base+0x3f14>
    aa88:	ldr	r3, [sp, #48]	; 0x30
    aa8c:	mov	r2, #10
    aa90:	sub	r1, r3, #8
    aa94:	ldr	r0, [sp, #72]	; 0x48
    aa98:	bl	6aac <strtol@plt>
    aa9c:	ldr	r1, [sp, #80]	; 0x50
    aaa0:	ldr	r2, [pc, #976]	; ae78 <main@@Base+0x42a8>
    aaa4:	ldrb	r1, [r1]
    aaa8:	add	r2, pc, r2
    aaac:	cmp	r1, #0
    aab0:	str	r0, [r2, #4]
    aab4:	ldr	r3, [sp, #36]	; 0x24
    aab8:	bne	ae40 <main@@Base+0x4270>
    aabc:	ldr	r0, [sp, #72]	; 0x48
    aac0:	bl	69b0 <av_free@plt>
    aac4:	ldr	r0, [sp, #68]	; 0x44
    aac8:	bl	69b0 <av_free@plt>
    aacc:	ldr	r3, [sp, #60]	; 0x3c
    aad0:	cmp	r3, #0
    aad4:	beq	ab90 <main@@Base+0x3fc0>
    aad8:	ldrb	r3, [r3]
    aadc:	cmp	r3, #0
    aae0:	beq	ab90 <main@@Base+0x3fc0>
    aae4:	stm	sp, {r7, fp}
    aae8:	mov	r3, #0
    aaec:	mov	r2, sl
    aaf0:	mov	r1, r9
    aaf4:	mov	r0, r8
    aaf8:	bl	5f54 <av_opt_get_key_value@plt>
    aafc:	cmp	r0, #0
    ab00:	blt	ad54 <main@@Base+0x4184>
    ab04:	ldr	r3, [sp, #60]	; 0x3c
    ab08:	ldr	r4, [sp, #68]	; 0x44
    ab0c:	ldrb	r2, [r3]
    ab10:	mov	r1, r6
    ab14:	cmp	r2, #0
    ab18:	addne	r3, r3, #1
    ab1c:	mov	r0, r4
    ab20:	strne	r3, [sp, #60]	; 0x3c
    ab24:	bl	695c <strcmp@plt>
    ab28:	subs	r3, r0, #0
    ab2c:	add	r5, r5, #1
    ab30:	beq	ab6c <main@@Base+0x3f9c>
    ab34:	ldr	r1, [pc, #832]	; ae7c <main@@Base+0x42ac>
    ab38:	mov	r0, r4
    ab3c:	add	r1, pc, r1
    ab40:	bl	695c <strcmp@plt>
    ab44:	subs	r3, r0, #0
    ab48:	str	r3, [sp, #36]	; 0x24
    ab4c:	beq	aa88 <main@@Base+0x3eb8>
    ab50:	ldr	r2, [pc, #808]	; ae80 <main@@Base+0x42b0>
    ab54:	mov	r3, r4
    ab58:	add	r2, pc, r2
    ab5c:	mov	r1, #16
    ab60:	mov	r0, #0
    ab64:	bl	6188 <av_log@plt>
    ab68:	b	aabc <main@@Base+0x3eec>
    ab6c:	ldr	r0, [sp, #40]	; 0x28
    ab70:	str	r3, [sp, #36]	; 0x24
    ab74:	bl	69b0 <av_free@plt>
    ab78:	ldr	r3, [sp, #72]	; 0x48
    ab7c:	str	r3, [sp, #40]	; 0x28
    ab80:	ldr	r3, [sp, #36]	; 0x24
    ab84:	str	r3, [sp, #72]	; 0x48
    ab88:	mov	r0, r3
    ab8c:	b	aac0 <main@@Base+0x3ef0>
    ab90:	ldr	r6, [sp, #40]	; 0x28
    ab94:	ldr	r7, [sp, #52]	; 0x34
    ab98:	ldr	fp, [sp, #56]	; 0x38
    ab9c:	ldr	r3, [sp, #48]	; 0x30
    aba0:	mov	r2, #1
    aba4:	sub	r5, r3, #4
    aba8:	mov	r0, r5
    abac:	mov	r1, #0
    abb0:	bl	5f24 <av_bprint_init@plt>
    abb4:	cmp	r6, #0
    abb8:	beq	adb0 <main@@Base+0x41e0>
    abbc:	mov	r3, r6
    abc0:	ldrb	r1, [r6]
    abc4:	ldr	r9, [pc, #696]	; ae84 <main@@Base+0x42b4>
    abc8:	ldr	r8, [pc, #696]	; ae88 <main@@Base+0x42b8>
    abcc:	add	r9, pc, r9
    abd0:	add	r8, pc, r8
    abd4:	b	ac08 <main@@Base+0x4038>
    abd8:	ldrb	r2, [r3, #1]
    abdc:	add	r4, r3, #2
    abe0:	cmp	r2, #0
    abe4:	beq	ac98 <main@@Base+0x40c8>
    abe8:	cmp	r2, #112	; 0x70
    abec:	beq	ac80 <main@@Base+0x40b0>
    abf0:	cmp	r2, #116	; 0x74
    abf4:	beq	ac3c <main@@Base+0x406c>
    abf8:	cmp	r2, #37	; 0x25
    abfc:	beq	ac2c <main@@Base+0x405c>
    ac00:	mov	r3, r4
    ac04:	ldrb	r1, [r4]
    ac08:	cmp	r1, #0
    ac0c:	beq	ac98 <main@@Base+0x40c8>
    ac10:	cmp	r1, #37	; 0x25
    ac14:	beq	abd8 <main@@Base+0x4008>
    ac18:	mov	r2, #1
    ac1c:	mov	r0, r5
    ac20:	add	r4, r3, r2
    ac24:	bl	6818 <av_bprint_chars@plt>
    ac28:	b	ac00 <main@@Base+0x4030>
    ac2c:	mov	r2, #1
    ac30:	mov	r0, r5
    ac34:	bl	6818 <av_bprint_chars@plt>
    ac38:	b	ac00 <main@@Base+0x4030>
    ac3c:	ldr	r1, [r7]
    ac40:	ldr	r3, [r7, #16]
    ac44:	ldr	r2, [r7, #20]
    ac48:	str	r1, [sp, #12]
    ac4c:	ldr	r1, [r7, #4]
    ac50:	add	r2, r2, #1888	; 0x760
    ac54:	str	r1, [sp, #8]
    ac58:	ldr	r1, [r7, #8]
    ac5c:	add	r3, r3, #1
    ac60:	str	r1, [sp, #4]
    ac64:	ldr	r1, [r7, #12]
    ac68:	add	r2, r2, #12
    ac6c:	str	r1, [sp]
    ac70:	mov	r0, r5
    ac74:	mov	r1, r8
    ac78:	bl	67ac <av_bprintf@plt>
    ac7c:	b	ac00 <main@@Base+0x4030>
    ac80:	ldr	r3, [pc, #516]	; ae8c <main@@Base+0x42bc>
    ac84:	mov	r1, r9
    ac88:	ldr	r2, [fp, r3]
    ac8c:	mov	r0, r5
    ac90:	bl	67ac <av_bprintf@plt>
    ac94:	b	ac00 <main@@Base+0x4030>
    ac98:	mov	r0, r6
    ac9c:	bl	69b0 <av_free@plt>
    aca0:	ldrd	r2, [sp, #88]	; 0x58
    aca4:	cmp	r2, r3
    aca8:	bcs	ae24 <main@@Base+0x4254>
    acac:	ldr	r1, [pc, #476]	; ae90 <main@@Base+0x42c0>
    acb0:	ldr	r0, [sp, #84]	; 0x54
    acb4:	add	r1, pc, r1
    acb8:	bl	5d20 <fopen64@plt>
    acbc:	ldr	r3, [pc, #464]	; ae94 <main@@Base+0x42c4>
    acc0:	cmp	r0, #0
    acc4:	add	r3, pc, r3
    acc8:	mov	r6, r0
    accc:	str	r0, [r3]
    acd0:	beq	adc0 <main@@Base+0x41f0>
    acd4:	ldr	r0, [pc, #444]	; ae98 <main@@Base+0x42c8>
    acd8:	mov	r4, #0
    acdc:	add	r0, pc, r0
    ace0:	bl	5f3c <av_log_set_callback@plt>
    ace4:	ldr	r2, [sp, #84]	; 0x54
    ace8:	ldr	r3, [pc, #412]	; ae8c <main@@Base+0x42bc>
    acec:	ldr	r3, [fp, r3]
    acf0:	str	r2, [sp, #24]
    acf4:	ldr	r2, [r7]
    acf8:	str	r2, [sp, #20]
    acfc:	ldr	r1, [r7, #4]
    ad00:	ldr	r2, [pc, #404]	; ae9c <main@@Base+0x42cc>
    ad04:	str	r1, [sp, #16]
    ad08:	ldr	r0, [r7, #8]
    ad0c:	add	r2, pc, r2
    ad10:	str	r0, [sp, #12]
    ad14:	ldr	r0, [r7, #12]
    ad18:	mov	r1, #32
    ad1c:	str	r0, [sp, #8]
    ad20:	ldr	r0, [r7, #16]
    ad24:	add	r0, r0, #1
    ad28:	str	r0, [sp, #4]
    ad2c:	ldr	ip, [r7, #20]
    ad30:	mov	r0, #0
    ad34:	add	ip, ip, #1888	; 0x760
    ad38:	add	ip, ip, #12
    ad3c:	str	ip, [sp]
    ad40:	bl	6188 <av_log@plt>
    ad44:	mov	r0, r5
    ad48:	mov	r1, #0
    ad4c:	bl	6440 <av_bprint_finalize@plt>
    ad50:	b	a9e8 <main@@Base+0x3e18>
    ad54:	cmp	r5, #0
    ad58:	ldr	r6, [sp, #40]	; 0x28
    ad5c:	ldr	r7, [sp, #52]	; 0x34
    ad60:	mov	r4, r0
    ad64:	ldr	fp, [sp, #56]	; 0x38
    ad68:	beq	ab9c <main@@Base+0x3fcc>
    ad6c:	add	r5, sp, #1104	; 0x450
    ad70:	add	r5, r5, #4
    ad74:	mov	r0, r5
    ad78:	mov	r2, #64	; 0x40
    ad7c:	mov	r1, #0
    ad80:	bl	62e4 <memset@plt>
    ad84:	mov	r1, r5
    ad88:	mov	r0, r4
    ad8c:	mov	r2, #64	; 0x40
    ad90:	bl	66b0 <av_strerror@plt>
    ad94:	ldr	r2, [pc, #260]	; aea0 <main@@Base+0x42d0>
    ad98:	mov	r3, r5
    ad9c:	add	r2, pc, r2
    ada0:	mov	r1, #16
    ada4:	mov	r0, #0
    ada8:	bl	6188 <av_log@plt>
    adac:	b	ab9c <main@@Base+0x3fcc>
    adb0:	ldr	r3, [pc, #236]	; aea4 <main@@Base+0x42d4>
    adb4:	mov	r1, #37	; 0x25
    adb8:	add	r3, pc, r3
    adbc:	b	abc4 <main@@Base+0x3ff4>
    adc0:	bl	5fb4 <__errno_location@plt>
    adc4:	ldr	r4, [r0]
    adc8:	ldr	r5, [sp, #84]	; 0x54
    adcc:	mov	r0, r4
    add0:	bl	5f0c <strerror@plt>
    add4:	ldr	r2, [pc, #204]	; aea8 <main@@Base+0x42d8>
    add8:	str	r0, [sp]
    addc:	mov	r3, r5
    ade0:	add	r2, pc, r2
    ade4:	mov	r0, r6
    ade8:	mov	r1, #16
    adec:	rsb	r4, r4, #0
    adf0:	bl	6188 <av_log@plt>
    adf4:	b	a9e8 <main@@Base+0x3e18>
    adf8:	ldr	r3, [sp, #48]	; 0x30
    adfc:	mov	r1, #0
    ae00:	sub	r5, r3, #4
    ae04:	mov	r0, r5
    ae08:	mov	r2, #1
    ae0c:	bl	5f24 <av_bprint_init@plt>
    ae10:	ldr	r3, [pc, #148]	; aeac <main@@Base+0x42dc>
    ae14:	mov	r6, #0
    ae18:	mov	r1, #37	; 0x25
    ae1c:	add	r3, pc, r3
    ae20:	b	abc4 <main@@Base+0x3ff4>
    ae24:	ldr	r2, [pc, #132]	; aeb0 <main@@Base+0x42e0>
    ae28:	mov	r1, #16
    ae2c:	add	r2, pc, r2
    ae30:	mov	r0, #0
    ae34:	bl	6188 <av_log@plt>
    ae38:	mvn	r4, #11
    ae3c:	b	a9e8 <main@@Base+0x3e18>
    ae40:	ldr	r2, [pc, #108]	; aeb4 <main@@Base+0x42e4>
    ae44:	mov	r0, r3
    ae48:	add	r2, pc, r2
    ae4c:	mov	r1, #8
    ae50:	bl	6188 <av_log@plt>
    ae54:	mov	r0, #1
    ae58:	bl	a954 <main@@Base+0x3d84>
    ae5c:	bl	5e7c <__stack_chk_fail@plt>
    ae60:	ldrdeq	lr, [r2], -r8
    ae64:	andeq	r0, r0, r8, asr r5
    ae68:	andeq	lr, r2, r4, ror #13
    ae6c:	andeq	r8, r1, r4, ror #8
    ae70:	andeq	sl, r1, r4, asr #4
    ae74:	andeq	r7, r1, r4, asr ip
    ae78:	andeq	lr, r2, r8, asr r5
    ae7c:			; <UNDEFINED> instruction: 0x0001b3bc
    ae80:	andeq	r8, r1, r0, lsl #7
    ae84:			; <UNDEFINED> instruction: 0x0001c1bc
    ae88:	andeq	r8, r1, r8, lsr #6
    ae8c:	andeq	r0, r0, r4, lsr r5
    ae90:	andeq	fp, r1, r8, lsl r8
    ae94:	andeq	lr, r2, r8, ror #7
    ae98:			; <UNDEFINED> instruction: 0xffffe38c
    ae9c:	andeq	r8, r1, r4, asr r2
    aea0:	andeq	r8, r1, r4, ror #1
    aea4:	strheq	r8, [r1], -ip
    aea8:	andeq	r8, r1, r0, ror #2
    aeac:	andeq	r8, r1, r8, asr r0
    aeb0:	andeq	r8, r1, r8, ror #1
    aeb4:	andeq	r8, r1, r4, ror r0
    aeb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    aebc:	mov	r5, #0
    aec0:	ldr	r3, [pc, #248]	; afc0 <main@@Base+0x43f0>
    aec4:	ldr	r2, [pc, #248]	; afc4 <main@@Base+0x43f4>
    aec8:	add	r3, pc, r3
    aecc:	ldr	sl, [r3, r2]
    aed0:	sub	sp, sp, #16
    aed4:	ldr	r3, [sl]
    aed8:	mov	r8, r0
    aedc:	mov	r4, r5
    aee0:	str	r3, [sp, #12]
    aee4:	b	aeec <main@@Base+0x431c>
    aee8:	add	r5, r5, #1
    aeec:	mov	r0, r4
    aef0:	bl	6020 <avcodec_descriptor_next@plt>
    aef4:	subs	r4, r0, #0
    aef8:	bne	aee8 <main@@Base+0x4318>
    aefc:	mov	r1, #4
    af00:	mov	r0, r5
    af04:	bl	6044 <av_calloc@plt>
    af08:	subs	r9, r0, #0
    af0c:	beq	af74 <main@@Base+0x43a4>
    af10:	sub	r7, r9, #4
    af14:	mov	r6, r4
    af18:	b	af24 <main@@Base+0x4354>
    af1c:	add	r6, r6, #1
    af20:	str	r4, [r7, #4]!
    af24:	mov	r0, r4
    af28:	bl	6020 <avcodec_descriptor_next@plt>
    af2c:	subs	r4, r0, #0
    af30:	bne	af1c <main@@Base+0x434c>
    af34:	cmp	r5, r6
    af38:	bne	af90 <main@@Base+0x43c0>
    af3c:	ldr	r3, [pc, #132]	; afc8 <main@@Base+0x43f8>
    af40:	mov	r2, #4
    af44:	add	r3, pc, r3
    af48:	mov	r0, r9
    af4c:	mov	r1, r5
    af50:	bl	5dc8 <qsort@plt>
    af54:	str	r9, [r8]
    af58:	ldr	r2, [sp, #12]
    af5c:	ldr	r3, [sl]
    af60:	mov	r0, r5
    af64:	cmp	r2, r3
    af68:	bne	af8c <main@@Base+0x43bc>
    af6c:	add	sp, sp, #16
    af70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    af74:	ldr	r2, [pc, #80]	; afcc <main@@Base+0x43fc>
    af78:	mov	r1, #16
    af7c:	add	r2, pc, r2
    af80:	bl	6188 <av_log@plt>
    af84:	mov	r0, #1
    af88:	bl	a954 <main@@Base+0x3d84>
    af8c:	bl	5e7c <__stack_chk_fail@plt>
    af90:	ldr	r3, [pc, #56]	; afd0 <main@@Base+0x4400>
    af94:	ldr	r2, [pc, #56]	; afd4 <main@@Base+0x4404>
    af98:	add	r3, pc, r3
    af9c:	str	r2, [sp, #4]
    afa0:	str	r3, [sp]
    afa4:	ldr	r2, [pc, #44]	; afd8 <main@@Base+0x4408>
    afa8:	ldr	r3, [pc, #44]	; afdc <main@@Base+0x440c>
    afac:	mov	r1, r4
    afb0:	add	r3, pc, r3
    afb4:	add	r2, pc, r2
    afb8:	bl	6188 <av_log@plt>
    afbc:	bl	63bc <abort@plt>
    afc0:	andeq	sp, r2, ip, asr #23
    afc4:	andeq	r0, r0, r8, asr r5
    afc8:			; <UNDEFINED> instruction: 0xffffe090
    afcc:	andeq	r8, r1, ip, lsr #32
    afd0:	andeq	r8, r1, r0, asr r0
    afd4:	strdeq	r0, [r0], -fp
    afd8:	andeq	r8, r1, r4, lsl r0
    afdc:	andeq	r8, r1, r8
    afe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    afe4:	ldr	r3, [pc, #652]	; b278 <main@@Base+0x46a8>
    afe8:	ldr	r2, [pc, #652]	; b27c <main@@Base+0x46ac>
    afec:	add	r3, pc, r3
    aff0:	ldr	r2, [r3, r2]
    aff4:	sub	sp, sp, #28
    aff8:	ldr	r3, [r2]
    affc:	mov	r7, r0
    b000:	add	r0, sp, #16
    b004:	str	r2, [sp, #12]
    b008:	str	r3, [sp, #20]
    b00c:	bl	aeb8 <main@@Base+0x42e8>
    b010:	cmp	r7, #0
    b014:	str	r0, [sp, #8]
    b018:	bne	b268 <main@@Base+0x4698>
    b01c:	ldr	r2, [pc, #604]	; b280 <main@@Base+0x46b0>
    b020:	add	r2, pc, r2
    b024:	ldr	r1, [pc, #600]	; b284 <main@@Base+0x46b4>
    b028:	mov	r0, #1
    b02c:	add	r1, pc, r1
    b030:	bl	6a1c <__printf_chk@plt>
    b034:	ldr	r3, [sp, #8]
    b038:	cmp	r3, #0
    b03c:	beq	b1f0 <main@@Base+0x4620>
    b040:	mov	r3, #0
    b044:	ldr	fp, [pc, #572]	; b288 <main@@Base+0x46b8>
    b048:	ldr	r9, [pc, #572]	; b28c <main@@Base+0x46bc>
    b04c:	ldr	sl, [pc, #572]	; b290 <main@@Base+0x46c0>
    b050:	ldr	r8, [pc, #572]	; b294 <main@@Base+0x46c4>
    b054:	str	r3, [sp, #4]
    b058:	add	fp, pc, fp
    b05c:	add	r9, pc, r9
    b060:	add	sl, pc, sl
    b064:	add	r8, pc, r8
    b068:	ldr	r3, [sp, #16]
    b06c:	ldr	r2, [sp, #4]
    b070:	cmp	r7, #0
    b074:	ldr	r6, [r3, r2, lsl #2]
    b078:	mov	r4, #0
    b07c:	ldr	r5, [r6]
    b080:	bne	b1a0 <main@@Base+0x45d0>
    b084:	mov	r0, r4
    b088:	bl	641c <av_codec_next@plt>
    b08c:	subs	r4, r0, #0
    b090:	beq	b1d8 <main@@Base+0x4608>
    b094:	ldr	r3, [r4, #12]
    b098:	cmp	r5, r3
    b09c:	bne	b084 <main@@Base+0x44b4>
    b0a0:	bl	6800 <av_codec_is_decoder@plt>
    b0a4:	cmp	r0, #0
    b0a8:	beq	b084 <main@@Base+0x44b4>
    b0ac:	ldr	r3, [r6, #4]
    b0b0:	cmp	r3, #4
    b0b4:	movhi	r2, #63	; 0x3f
    b0b8:	ldrbls	r2, [fp, r3]
    b0bc:	mov	r1, r9
    b0c0:	mov	r0, #1
    b0c4:	bl	6a1c <__printf_chk@plt>
    b0c8:	ldr	r3, [r4, #16]
    b0cc:	tst	r3, #4096	; 0x1000
    b0d0:	movne	r1, sl
    b0d4:	ldreq	r1, [pc, #444]	; b298 <main@@Base+0x46c8>
    b0d8:	addeq	r1, pc, r1
    b0dc:	mov	r0, #1
    b0e0:	bl	6a1c <__printf_chk@plt>
    b0e4:	ldr	r3, [r4, #16]
    b0e8:	tst	r3, #8192	; 0x2000
    b0ec:	bne	b214 <main@@Base+0x4644>
    b0f0:	ldr	r1, [pc, #420]	; b29c <main@@Base+0x46cc>
    b0f4:	add	r1, pc, r1
    b0f8:	mov	r0, #1
    b0fc:	bl	6a1c <__printf_chk@plt>
    b100:	ldr	r3, [r4, #16]
    b104:	tst	r3, #512	; 0x200
    b108:	bne	b238 <main@@Base+0x4668>
    b10c:	ldr	r1, [pc, #396]	; b2a0 <main@@Base+0x46d0>
    b110:	add	r1, pc, r1
    b114:	mov	r0, #1
    b118:	bl	6a1c <__printf_chk@plt>
    b11c:	ldr	r3, [r4, #16]
    b120:	tst	r3, #1
    b124:	bne	b22c <main@@Base+0x465c>
    b128:	ldr	r1, [pc, #372]	; b2a4 <main@@Base+0x46d4>
    b12c:	add	r1, pc, r1
    b130:	mov	r0, #1
    b134:	bl	6a1c <__printf_chk@plt>
    b138:	ldr	r3, [r4, #16]
    b13c:	tst	r3, #2
    b140:	bne	b220 <main@@Base+0x4650>
    b144:	ldr	r1, [pc, #348]	; b2a8 <main@@Base+0x46d8>
    b148:	add	r1, pc, r1
    b14c:	mov	r0, #1
    b150:	bl	6a1c <__printf_chk@plt>
    b154:	ldrd	r2, [r4]
    b158:	cmp	r3, #0
    b15c:	beq	b25c <main@@Base+0x468c>
    b160:	mov	r1, r8
    b164:	mov	r0, #1
    b168:	bl	6a1c <__printf_chk@plt>
    b16c:	ldr	r5, [r6, #8]
    b170:	ldr	r0, [r4]
    b174:	mov	r1, r5
    b178:	bl	695c <strcmp@plt>
    b17c:	cmp	r0, #0
    b180:	bne	b244 <main@@Base+0x4674>
    b184:	ldr	r1, [pc, #288]	; b2ac <main@@Base+0x46dc>
    b188:	mov	r0, #1
    b18c:	add	r1, pc, r1
    b190:	bl	6a1c <__printf_chk@plt>
    b194:	cmp	r7, #0
    b198:	ldr	r5, [r6]
    b19c:	beq	b084 <main@@Base+0x44b4>
    b1a0:	mov	r0, r4
    b1a4:	bl	641c <av_codec_next@plt>
    b1a8:	subs	r4, r0, #0
    b1ac:	beq	b1d8 <main@@Base+0x4608>
    b1b0:	ldr	r3, [r4, #12]
    b1b4:	cmp	r5, r3
    b1b8:	bne	b1a0 <main@@Base+0x45d0>
    b1bc:	bl	63ec <av_codec_is_encoder@plt>
    b1c0:	cmp	r0, #0
    b1c4:	bne	b0ac <main@@Base+0x44dc>
    b1c8:	mov	r0, r4
    b1cc:	bl	641c <av_codec_next@plt>
    b1d0:	subs	r4, r0, #0
    b1d4:	bne	b1b0 <main@@Base+0x45e0>
    b1d8:	ldr	r3, [sp, #4]
    b1dc:	ldr	r2, [sp, #8]
    b1e0:	add	r3, r3, #1
    b1e4:	cmp	r2, r3
    b1e8:	str	r3, [sp, #4]
    b1ec:	bne	b068 <main@@Base+0x4498>
    b1f0:	ldr	r0, [sp, #16]
    b1f4:	bl	69b0 <av_free@plt>
    b1f8:	ldr	r3, [sp, #12]
    b1fc:	ldr	r2, [sp, #20]
    b200:	ldr	r3, [r3]
    b204:	cmp	r2, r3
    b208:	bne	b274 <main@@Base+0x46a4>
    b20c:	add	sp, sp, #28
    b210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b214:	ldr	r1, [pc, #148]	; b2b0 <main@@Base+0x46e0>
    b218:	add	r1, pc, r1
    b21c:	b	b0f8 <main@@Base+0x4528>
    b220:	ldr	r1, [pc, #140]	; b2b4 <main@@Base+0x46e4>
    b224:	add	r1, pc, r1
    b228:	b	b14c <main@@Base+0x457c>
    b22c:	ldr	r1, [pc, #132]	; b2b8 <main@@Base+0x46e8>
    b230:	add	r1, pc, r1
    b234:	b	b130 <main@@Base+0x4560>
    b238:	ldr	r1, [pc, #124]	; b2bc <main@@Base+0x46ec>
    b23c:	add	r1, pc, r1
    b240:	b	b114 <main@@Base+0x4544>
    b244:	ldr	r1, [pc, #116]	; b2c0 <main@@Base+0x46f0>
    b248:	mov	r2, r5
    b24c:	add	r1, pc, r1
    b250:	mov	r0, #1
    b254:	bl	6a1c <__printf_chk@plt>
    b258:	b	b184 <main@@Base+0x45b4>
    b25c:	ldr	r3, [pc, #96]	; b2c4 <main@@Base+0x46f4>
    b260:	add	r3, pc, r3
    b264:	b	b160 <main@@Base+0x4590>
    b268:	ldr	r2, [pc, #88]	; b2c8 <main@@Base+0x46f8>
    b26c:	add	r2, pc, r2
    b270:	b	b024 <main@@Base+0x4454>
    b274:	bl	5e7c <__stack_chk_fail@plt>
    b278:	andeq	sp, r2, r8, lsr #21
    b27c:	andeq	r0, r0, r8, asr r5
    b280:	andeq	r7, r1, ip, ror #31
    b284:	andeq	r8, r1, r0
    b288:	andeq	r7, r1, r0, ror #12
    b28c:	andeq	r8, r1, ip, asr #1
    b290:			; <UNDEFINED> instruction: 0x00017fb8
    b294:	andeq	r8, r1, r8, asr #1
    b298:	andeq	r7, r1, r4, asr #30
    b29c:	andeq	r7, r1, r8, lsr #30
    b2a0:	andeq	r7, r1, ip, lsl #30
    b2a4:	strdeq	r7, [r1], -r0
    b2a8:	ldrdeq	r7, [r1], -r4
    b2ac:	andeq	sl, r1, ip, lsr #22
    b2b0:	andeq	r7, r1, r8, lsl #28
    b2b4:	andeq	ip, r1, ip, lsr #32
    b2b8:	strdeq	r7, [r1], -r8
    b2bc:	andeq	r7, r1, r8, ror #27
    b2c0:	andeq	r7, r1, ip, ror #29
    b2c4:	andeq	sl, r1, r4, lsl #4
    b2c8:	muleq	r1, r4, sp
    b2cc:	push	{r4, r5, r6, r7, lr}
    b2d0:	vpush	{d8-d9}
    b2d4:	mov	r6, r1
    b2d8:	ldr	r3, [pc, #284]	; b3fc <main@@Base+0x482c>
    b2dc:	ldr	r1, [pc, #284]	; b400 <main@@Base+0x4830>
    b2e0:	add	r3, pc, r3
    b2e4:	ldr	r4, [r3, r1]
    b2e8:	sub	sp, sp, #44	; 0x2c
    b2ec:	ldr	r3, [r4]
    b2f0:	mov	r7, r0
    b2f4:	add	r1, sp, #32
    b2f8:	mov	r0, r6
    b2fc:	str	r3, [sp, #36]	; 0x24
    b300:	mov	r5, r2
    b304:	vmov.f64	d8, d0
    b308:	vmov.f64	d9, d1
    b30c:	bl	632c <av_strtod@plt>
    b310:	ldr	r3, [sp, #32]
    b314:	ldrb	r3, [r3]
    b318:	cmp	r3, #0
    b31c:	bne	b3e4 <main@@Base+0x4814>
    b320:	vcmpe.f64	d0, d8
    b324:	vmrs	APSR_nzcv, fpscr
    b328:	bmi	b3d4 <main@@Base+0x4804>
    b32c:	vcmpe.f64	d0, d9
    b330:	vmrs	APSR_nzcv, fpscr
    b334:	bgt	b3f0 <main@@Base+0x4820>
    b338:	cmp	r5, #1024	; 0x400
    b33c:	beq	b378 <main@@Base+0x47a8>
    b340:	cmp	r5, #128	; 0x80
    b344:	bne	b35c <main@@Base+0x478c>
    b348:	vcvt.s32.f64	s14, d0
    b34c:	vcvt.f64.s32	d7, s14
    b350:	vcmp.f64	d7, d0
    b354:	vmrs	APSR_nzcv, fpscr
    b358:	bne	b3a8 <main@@Base+0x47d8>
    b35c:	ldr	r2, [sp, #36]	; 0x24
    b360:	ldr	r3, [r4]
    b364:	cmp	r2, r3
    b368:	bne	b3e0 <main@@Base+0x4810>
    b36c:	add	sp, sp, #44	; 0x2c
    b370:	vpop	{d8-d9}
    b374:	pop	{r4, r5, r6, r7, pc}
    b378:	vmov	r0, r1, d0
    b37c:	vstr	d0, [sp, #24]
    b380:	bl	224b8 <vc_dispmanx_send_command_reply@@Base+0x87c>
    b384:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
    b388:	vldr	d0, [sp, #24]
    b38c:	vmov	d7, r0, r1
    b390:	vcmp.f64	d7, d0
    b394:	vmrs	APSR_nzcv, fpscr
    b398:	beq	b35c <main@@Base+0x478c>
    b39c:	ldr	r2, [pc, #96]	; b404 <main@@Base+0x4834>
    b3a0:	add	r2, pc, r2
    b3a4:	b	b3b0 <main@@Base+0x47e0>
    b3a8:	ldr	r2, [pc, #88]	; b408 <main@@Base+0x4838>
    b3ac:	add	r2, pc, r2
    b3b0:	mov	r0, #0
    b3b4:	vstr	d9, [sp, #16]
    b3b8:	vstr	d8, [sp, #8]
    b3bc:	str	r6, [sp]
    b3c0:	mov	r3, r7
    b3c4:	mov	r1, #8
    b3c8:	bl	6188 <av_log@plt>
    b3cc:	mov	r0, #1
    b3d0:	bl	a954 <main@@Base+0x3d84>
    b3d4:	ldr	r2, [pc, #48]	; b40c <main@@Base+0x483c>
    b3d8:	add	r2, pc, r2
    b3dc:	b	b3b0 <main@@Base+0x47e0>
    b3e0:	bl	5e7c <__stack_chk_fail@plt>
    b3e4:	ldr	r2, [pc, #36]	; b410 <main@@Base+0x4840>
    b3e8:	add	r2, pc, r2
    b3ec:	b	b3b0 <main@@Base+0x47e0>
    b3f0:	ldr	r2, [pc, #28]	; b414 <main@@Base+0x4844>
    b3f4:	add	r2, pc, r2
    b3f8:	b	b3b0 <main@@Base+0x47e0>
    b3fc:			; <UNDEFINED> instruction: 0x0002d7b4
    b400:	andeq	r0, r0, r8, asr r5
    b404:	andeq	r7, r1, r4, lsl #28
    b408:	andeq	r7, r1, ip, lsl lr
    b40c:	muleq	r1, r4, sp
    b410:	andeq	r7, r1, ip, asr sp
    b414:	andeq	r7, r1, r8, ror sp
    b418:	push	{r4, r5, r6, r7, lr}
    b41c:	ldr	r3, [pc, #140]	; b4b0 <main@@Base+0x48e0>
    b420:	ldr	ip, [pc, #140]	; b4b4 <main@@Base+0x48e4>
    b424:	add	r3, pc, r3
    b428:	ldr	r4, [r3, ip]
    b42c:	sub	sp, sp, #28
    b430:	ldr	r3, [r4]
    b434:	mov	r5, r0
    b438:	add	r0, sp, #8
    b43c:	mov	r6, r1
    b440:	str	r3, [sp, #20]
    b444:	mov	r7, r2
    b448:	bl	60f8 <av_parse_time@plt>
    b44c:	cmp	r0, #0
    b450:	blt	b470 <main@@Base+0x48a0>
    b454:	ldrd	r0, [sp, #8]
    b458:	ldr	r2, [sp, #20]
    b45c:	ldr	r3, [r4]
    b460:	cmp	r2, r3
    b464:	bne	b4a0 <main@@Base+0x48d0>
    b468:	add	sp, sp, #28
    b46c:	pop	{r4, r5, r6, r7, pc}
    b470:	cmp	r7, #0
    b474:	bne	b4a4 <main@@Base+0x48d4>
    b478:	ldr	r3, [pc, #56]	; b4b8 <main@@Base+0x48e8>
    b47c:	add	r3, pc, r3
    b480:	ldr	r2, [pc, #52]	; b4bc <main@@Base+0x48ec>
    b484:	mov	r0, #0
    b488:	stm	sp, {r5, r6}
    b48c:	add	r2, pc, r2
    b490:	mov	r1, #8
    b494:	bl	6188 <av_log@plt>
    b498:	mov	r0, #1
    b49c:	bl	a954 <main@@Base+0x3d84>
    b4a0:	bl	5e7c <__stack_chk_fail@plt>
    b4a4:	ldr	r3, [pc, #20]	; b4c0 <main@@Base+0x48f0>
    b4a8:	add	r3, pc, r3
    b4ac:	b	b480 <main@@Base+0x48b0>
    b4b0:	andeq	sp, r2, r0, ror r6
    b4b4:	andeq	r0, r0, r8, asr r5
    b4b8:	andeq	r7, r1, ip, ror sp
    b4bc:	andeq	r7, r1, r4, ror sp
    b4c0:	andeq	r7, r1, r4, asr #26
    b4c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b4c8:	ldr	lr, [pc, #484]	; b6b4 <main@@Base+0x4ae4>
    b4cc:	ldr	r5, [pc, #484]	; b6b8 <main@@Base+0x4ae8>
    b4d0:	add	lr, pc, lr
    b4d4:	ldr	r4, [lr, r5]
    b4d8:	sub	sp, sp, #84	; 0x54
    b4dc:	ldr	ip, [r0]
    b4e0:	str	r4, [sp]
    b4e4:	ldr	r4, [r4]
    b4e8:	cmp	ip, #0
    b4ec:	str	r4, [sp, #76]	; 0x4c
    b4f0:	ldr	r8, [sp, #120]	; 0x78
    b4f4:	beq	b5b8 <main@@Base+0x49e8>
    b4f8:	cmp	r8, #0
    b4fc:	mov	r5, r2
    b500:	mov	r9, r1
    b504:	mov	r7, r3
    b508:	mov	r4, r0
    b50c:	mov	r2, #1
    b510:	beq	b5e4 <main@@Base+0x4a14>
    b514:	mov	r1, ip
    b518:	ldr	r3, [pc, #412]	; b6bc <main@@Base+0x4aec>
    b51c:	ldr	sl, [pc, #412]	; b6c0 <main@@Base+0x4af0>
    b520:	ldr	fp, [pc, #412]	; b6c4 <main@@Base+0x4af4>
    b524:	add	r3, pc, r3
    b528:	add	sl, pc, sl
    b52c:	add	fp, pc, fp
    b530:	str	r3, [sp, #4]
    b534:	ldr	r3, [r4, #4]
    b538:	bics	r0, r5, r3
    b53c:	bne	b5ac <main@@Base+0x49dc>
    b540:	tst	r3, r8
    b544:	beq	b5ac <main@@Base+0x49dc>
    b548:	tst	r3, r7
    b54c:	bne	b5ac <main@@Base+0x49dc>
    b550:	cmp	r2, #0
    b554:	bne	b698 <main@@Base+0x4ac8>
    b558:	add	r6, sp, #12
    b55c:	mov	r0, r6
    b560:	mov	r2, #64	; 0x40
    b564:	bl	6404 <av_strlcpy@plt>
    b568:	ldr	r3, [r4, #16]
    b56c:	cmp	r3, #0
    b570:	beq	b594 <main@@Base+0x49c4>
    b574:	mov	r2, #64	; 0x40
    b578:	mov	r1, fp
    b57c:	mov	r0, r6
    b580:	bl	617c <av_strlcat@plt>
    b584:	mov	r2, #64	; 0x40
    b588:	ldr	r1, [r4, #16]
    b58c:	mov	r0, r6
    b590:	bl	617c <av_strlcat@plt>
    b594:	mov	r2, r6
    b598:	ldr	r3, [r4, #12]
    b59c:	mov	r1, sl
    b5a0:	mov	r0, #1
    b5a4:	bl	6a1c <__printf_chk@plt>
    b5a8:	mov	r2, #0
    b5ac:	ldr	r1, [r4, #20]!
    b5b0:	cmp	r1, #0
    b5b4:	bne	b534 <main@@Base+0x4964>
    b5b8:	ldr	r1, [pc, #264]	; b6c8 <main@@Base+0x4af8>
    b5bc:	mov	r0, #1
    b5c0:	add	r1, pc, r1
    b5c4:	bl	6a1c <__printf_chk@plt>
    b5c8:	ldr	r3, [sp]
    b5cc:	ldr	r2, [sp, #76]	; 0x4c
    b5d0:	ldr	r3, [r3]
    b5d4:	cmp	r2, r3
    b5d8:	bne	b6b0 <main@@Base+0x4ae0>
    b5dc:	add	sp, sp, #84	; 0x54
    b5e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b5e4:	mov	r1, ip
    b5e8:	ldr	fp, [pc, #220]	; b6cc <main@@Base+0x4afc>
    b5ec:	ldr	sl, [pc, #220]	; b6d0 <main@@Base+0x4b00>
    b5f0:	ldr	r8, [pc, #220]	; b6d4 <main@@Base+0x4b04>
    b5f4:	add	fp, pc, fp
    b5f8:	add	sl, pc, sl
    b5fc:	add	r8, pc, r8
    b600:	ldr	r3, [r4, #4]
    b604:	bics	r0, r5, r3
    b608:	bne	b670 <main@@Base+0x4aa0>
    b60c:	tst	r7, r3
    b610:	bne	b670 <main@@Base+0x4aa0>
    b614:	cmp	r2, #0
    b618:	bne	b680 <main@@Base+0x4ab0>
    b61c:	add	r6, sp, #12
    b620:	mov	r0, r6
    b624:	mov	r2, #64	; 0x40
    b628:	bl	6404 <av_strlcpy@plt>
    b62c:	ldr	r3, [r4, #16]
    b630:	cmp	r3, #0
    b634:	beq	b658 <main@@Base+0x4a88>
    b638:	mov	r2, #64	; 0x40
    b63c:	mov	r1, sl
    b640:	mov	r0, r6
    b644:	bl	617c <av_strlcat@plt>
    b648:	mov	r2, #64	; 0x40
    b64c:	ldr	r1, [r4, #16]
    b650:	mov	r0, r6
    b654:	bl	617c <av_strlcat@plt>
    b658:	mov	r2, r6
    b65c:	ldr	r3, [r4, #12]
    b660:	mov	r1, r8
    b664:	mov	r0, #1
    b668:	bl	6a1c <__printf_chk@plt>
    b66c:	mov	r2, #0
    b670:	ldr	r1, [r4, #20]!
    b674:	cmp	r1, #0
    b678:	bne	b600 <main@@Base+0x4a30>
    b67c:	b	b5b8 <main@@Base+0x49e8>
    b680:	mov	r1, fp
    b684:	mov	r2, r9
    b688:	mov	r0, #1
    b68c:	bl	6a1c <__printf_chk@plt>
    b690:	ldr	r1, [r4]
    b694:	b	b61c <main@@Base+0x4a4c>
    b698:	ldr	r1, [sp, #4]
    b69c:	mov	r2, r9
    b6a0:	mov	r0, #1
    b6a4:	bl	6a1c <__printf_chk@plt>
    b6a8:	ldr	r1, [r4]
    b6ac:	b	b558 <main@@Base+0x4988>
    b6b0:	bl	5e7c <__stack_chk_fail@plt>
    b6b4:	andeq	sp, r2, r4, asr #11
    b6b8:	andeq	r0, r0, r8, asr r5
    b6bc:	andeq	r7, r1, ip, lsl #26
    b6c0:	andeq	r7, r1, r0, lsl #26
    b6c4:	andeq	r7, r1, r4, lsr #27
    b6c8:	strdeq	sl, [r1], -r8
    b6cc:	andeq	r7, r1, ip, lsr ip
    b6d0:	ldrdeq	r7, [r1], -r8
    b6d4:	andeq	r7, r1, ip, lsr #24
    b6d8:	push	{r4, r5, r6, lr}
    b6dc:	ldr	r2, [pc, #152]	; b77c <main@@Base+0x4bac>
    b6e0:	sub	sp, sp, #16
    b6e4:	ldr	ip, [pc, #148]	; b780 <main@@Base+0x4bb0>
    b6e8:	add	r2, pc, r2
    b6ec:	str	r0, [sp, #4]
    b6f0:	ldr	r6, [r2, ip]
    b6f4:	ldr	ip, [r0, #8]
    b6f8:	mov	r3, r0
    b6fc:	ldr	r0, [r6]
    b700:	cmp	ip, #0
    b704:	mov	r5, r1
    b708:	str	r0, [sp, #12]
    b70c:	beq	b738 <main@@Base+0x4b68>
    b710:	mov	r3, #0
    b714:	mov	r2, r1
    b718:	add	r0, sp, #4
    b71c:	mov	r1, r3
    b720:	bl	6ae8 <av_opt_show2@plt>
    b724:	ldr	r1, [pc, #88]	; b784 <main@@Base+0x4bb4>
    b728:	mov	r0, #1
    b72c:	add	r1, pc, r1
    b730:	bl	6a1c <__printf_chk@plt>
    b734:	ldr	r3, [sp, #4]
    b738:	mov	r4, #0
    b73c:	mov	r1, r4
    b740:	mov	r0, r3
    b744:	bl	6854 <av_opt_child_class_next@plt>
    b748:	subs	r4, r0, #0
    b74c:	beq	b760 <main@@Base+0x4b90>
    b750:	mov	r1, r5
    b754:	bl	b6d8 <main@@Base+0x4b08>
    b758:	ldr	r3, [sp, #4]
    b75c:	b	b73c <main@@Base+0x4b6c>
    b760:	ldr	r2, [sp, #12]
    b764:	ldr	r3, [r6]
    b768:	cmp	r2, r3
    b76c:	bne	b778 <main@@Base+0x4ba8>
    b770:	add	sp, sp, #16
    b774:	pop	{r4, r5, r6, pc}
    b778:	bl	5e7c <__stack_chk_fail@plt>
    b77c:	andeq	sp, r2, ip, lsr #7
    b780:	andeq	r0, r0, r8, asr r5
    b784:	andeq	sl, r1, ip, lsl #11
    b788:	push	{r4, r5, r6, r7, r8, r9, lr}
    b78c:	ldr	r3, [pc, #1580]	; bdc0 <main@@Base+0x51f0>
    b790:	ldr	r2, [pc, #1580]	; bdc4 <main@@Base+0x51f4>
    b794:	add	r3, pc, r3
    b798:	ldr	r6, [r3, r2]
    b79c:	sub	sp, sp, #148	; 0x94
    b7a0:	ldr	r3, [r6]
    b7a4:	mov	r4, r0
    b7a8:	str	r3, [sp, #140]	; 0x8c
    b7ac:	bl	63ec <av_codec_is_encoder@plt>
    b7b0:	cmp	r0, #0
    b7b4:	bne	bb50 <main@@Base+0x4f80>
    b7b8:	ldr	r1, [r4, #4]
    b7bc:	ldr	r2, [pc, #1540]	; bdc8 <main@@Base+0x51f8>
    b7c0:	cmp	r1, #0
    b7c4:	add	r2, pc, r2
    b7c8:	ldr	r3, [r4]
    b7cc:	beq	bb68 <main@@Base+0x4f98>
    b7d0:	str	r1, [sp]
    b7d4:	ldr	r1, [pc, #1520]	; bdcc <main@@Base+0x51fc>
    b7d8:	mov	r0, #1
    b7dc:	add	r1, pc, r1
    b7e0:	bl	6a1c <__printf_chk@plt>
    b7e4:	ldr	r1, [pc, #1508]	; bdd0 <main@@Base+0x5200>
    b7e8:	mov	r0, #1
    b7ec:	add	r1, pc, r1
    b7f0:	bl	6a1c <__printf_chk@plt>
    b7f4:	ldr	r3, [r4, #16]
    b7f8:	tst	r3, #1
    b7fc:	bne	bcf4 <main@@Base+0x5124>
    b800:	tst	r3, #2
    b804:	bne	bcdc <main@@Base+0x510c>
    b808:	tst	r3, #8
    b80c:	bne	bcc4 <main@@Base+0x50f4>
    b810:	tst	r3, #32
    b814:	bne	bcac <main@@Base+0x50dc>
    b818:	tst	r3, #64	; 0x40
    b81c:	bne	bc94 <main@@Base+0x50c4>
    b820:	tst	r3, #256	; 0x100
    b824:	bne	bc7c <main@@Base+0x50ac>
    b828:	tst	r3, #512	; 0x200
    b82c:	bne	bc64 <main@@Base+0x5094>
    b830:	tst	r3, #1024	; 0x400
    b834:	bne	bc4c <main@@Base+0x507c>
    b838:	tst	r3, #16384	; 0x4000
    b83c:	bne	bc34 <main@@Base+0x5064>
    b840:	tst	r3, #65536	; 0x10000
    b844:	bne	bc1c <main@@Base+0x504c>
    b848:	tst	r3, #45056	; 0xb000
    b84c:	bne	bc04 <main@@Base+0x5034>
    b850:	tst	r3, #131072	; 0x20000
    b854:	bne	bbec <main@@Base+0x501c>
    b858:	tst	r3, #1073741824	; 0x40000000
    b85c:	bne	bbb8 <main@@Base+0x4fe8>
    b860:	cmp	r3, #0
    b864:	blt	bbd4 <main@@Base+0x5004>
    b868:	tst	r3, #262144	; 0x40000
    b86c:	bne	bba0 <main@@Base+0x4fd0>
    b870:	tst	r3, #524288	; 0x80000
    b874:	bne	bb88 <main@@Base+0x4fb8>
    b878:	cmp	r3, #0
    b87c:	beq	bb74 <main@@Base+0x4fa4>
    b880:	ldr	r1, [pc, #1356]	; bdd4 <main@@Base+0x5204>
    b884:	mov	r0, #1
    b888:	add	r1, pc, r1
    b88c:	bl	6a1c <__printf_chk@plt>
    b890:	ldr	r3, [r4, #8]
    b894:	cmp	r3, #1
    b898:	bls	bd0c <main@@Base+0x513c>
    b89c:	mov	r1, #0
    b8a0:	mov	r0, r4
    b8a4:	bl	69a4 <avcodec_get_hw_config@plt>
    b8a8:	cmp	r0, #0
    b8ac:	beq	b910 <main@@Base+0x4d40>
    b8b0:	ldr	r1, [pc, #1312]	; bdd8 <main@@Base+0x5208>
    b8b4:	ldr	r7, [pc, #1312]	; bddc <main@@Base+0x520c>
    b8b8:	add	r1, pc, r1
    b8bc:	mov	r0, #1
    b8c0:	bl	6a1c <__printf_chk@plt>
    b8c4:	mov	r5, #0
    b8c8:	add	r7, pc, r7
    b8cc:	b	b8ec <main@@Base+0x4d1c>
    b8d0:	ldr	r0, [r0, #8]
    b8d4:	bl	5d44 <av_hwdevice_get_type_name@plt>
    b8d8:	mov	r2, r0
    b8dc:	mov	r0, #1
    b8e0:	mov	r1, r7
    b8e4:	add	r5, r5, r0
    b8e8:	bl	6a1c <__printf_chk@plt>
    b8ec:	mov	r1, r5
    b8f0:	mov	r0, r4
    b8f4:	bl	69a4 <avcodec_get_hw_config@plt>
    b8f8:	cmp	r0, #0
    b8fc:	bne	b8d0 <main@@Base+0x4d00>
    b900:	ldr	r1, [pc, #1240]	; bde0 <main@@Base+0x5210>
    b904:	mov	r0, #1
    b908:	add	r1, pc, r1
    b90c:	bl	6a1c <__printf_chk@plt>
    b910:	ldr	r5, [r4, #20]
    b914:	cmp	r5, #0
    b918:	beq	b96c <main@@Base+0x4d9c>
    b91c:	ldr	r1, [pc, #1216]	; bde4 <main@@Base+0x5214>
    b920:	mov	r0, #1
    b924:	add	r1, pc, r1
    b928:	bl	6a1c <__printf_chk@plt>
    b92c:	ldr	r2, [r5]
    b930:	ldr	r7, [pc, #1200]	; bde8 <main@@Base+0x5218>
    b934:	cmp	r2, #0
    b938:	add	r7, pc, r7
    b93c:	beq	b95c <main@@Base+0x4d8c>
    b940:	ldr	r3, [r5, #4]
    b944:	mov	r1, r7
    b948:	mov	r0, #1
    b94c:	bl	6a1c <__printf_chk@plt>
    b950:	ldr	r2, [r5, #8]!
    b954:	cmp	r2, #0
    b958:	bne	b940 <main@@Base+0x4d70>
    b95c:	ldr	r1, [pc, #1160]	; bdec <main@@Base+0x521c>
    b960:	mov	r0, #1
    b964:	add	r1, pc, r1
    b968:	bl	6a1c <__printf_chk@plt>
    b96c:	ldr	r5, [r4, #24]
    b970:	cmp	r5, #0
    b974:	beq	b9cc <main@@Base+0x4dfc>
    b978:	ldr	r1, [pc, #1136]	; bdf0 <main@@Base+0x5220>
    b97c:	mov	r0, #1
    b980:	add	r1, pc, r1
    b984:	bl	6a1c <__printf_chk@plt>
    b988:	ldr	r0, [r5]
    b98c:	cmn	r0, #1
    b990:	beq	b9bc <main@@Base+0x4dec>
    b994:	ldr	r7, [pc, #1112]	; bdf4 <main@@Base+0x5224>
    b998:	add	r7, pc, r7
    b99c:	bl	6a7c <av_get_pix_fmt_name@plt>
    b9a0:	mov	r1, r7
    b9a4:	mov	r2, r0
    b9a8:	mov	r0, #1
    b9ac:	bl	6a1c <__printf_chk@plt>
    b9b0:	ldr	r0, [r5, #4]!
    b9b4:	cmn	r0, #1
    b9b8:	bne	b99c <main@@Base+0x4dcc>
    b9bc:	ldr	r1, [pc, #1076]	; bdf8 <main@@Base+0x5228>
    b9c0:	mov	r0, #1
    b9c4:	add	r1, pc, r1
    b9c8:	bl	6a1c <__printf_chk@plt>
    b9cc:	ldr	r7, [r4, #28]
    b9d0:	cmp	r7, #0
    b9d4:	beq	ba50 <main@@Base+0x4e80>
    b9d8:	ldr	r1, [pc, #1052]	; bdfc <main@@Base+0x522c>
    b9dc:	mov	r0, #1
    b9e0:	add	r1, pc, r1
    b9e4:	bl	6a1c <__printf_chk@plt>
    b9e8:	ldr	r2, [r7]
    b9ec:	cmp	r2, #0
    b9f0:	beq	ba40 <main@@Base+0x4e70>
    b9f4:	ldr	r9, [pc, #1028]	; be00 <main@@Base+0x5230>
    b9f8:	ldr	r8, [pc, #1028]	; be04 <main@@Base+0x5234>
    b9fc:	add	r5, sp, #12
    ba00:	add	r9, pc, r9
    ba04:	add	r8, pc, r8
    ba08:	mov	r3, #16
    ba0c:	str	r2, [sp, #4]
    ba10:	mov	r1, r3
    ba14:	mov	r2, #1
    ba18:	str	r9, [sp]
    ba1c:	mov	r0, r5
    ba20:	bl	62d8 <__snprintf_chk@plt>
    ba24:	mov	r2, r5
    ba28:	mov	r1, r8
    ba2c:	mov	r0, #1
    ba30:	bl	6a1c <__printf_chk@plt>
    ba34:	ldr	r2, [r7, #4]!
    ba38:	cmp	r2, #0
    ba3c:	bne	ba08 <main@@Base+0x4e38>
    ba40:	ldr	r1, [pc, #960]	; be08 <main@@Base+0x5238>
    ba44:	mov	r0, #1
    ba48:	add	r1, pc, r1
    ba4c:	bl	6a1c <__printf_chk@plt>
    ba50:	ldr	r5, [r4, #32]
    ba54:	cmp	r5, #0
    ba58:	beq	bab0 <main@@Base+0x4ee0>
    ba5c:	ldr	r1, [pc, #936]	; be0c <main@@Base+0x523c>
    ba60:	mov	r0, #1
    ba64:	add	r1, pc, r1
    ba68:	bl	6a1c <__printf_chk@plt>
    ba6c:	ldr	r0, [r5]
    ba70:	cmn	r0, #1
    ba74:	beq	baa0 <main@@Base+0x4ed0>
    ba78:	ldr	r7, [pc, #912]	; be10 <main@@Base+0x5240>
    ba7c:	add	r7, pc, r7
    ba80:	bl	64d0 <av_get_sample_fmt_name@plt>
    ba84:	mov	r1, r7
    ba88:	mov	r2, r0
    ba8c:	mov	r0, #1
    ba90:	bl	6a1c <__printf_chk@plt>
    ba94:	ldr	r0, [r5, #4]!
    ba98:	cmn	r0, #1
    ba9c:	bne	ba80 <main@@Base+0x4eb0>
    baa0:	ldr	r1, [pc, #876]	; be14 <main@@Base+0x5244>
    baa4:	mov	r0, #1
    baa8:	add	r1, pc, r1
    baac:	bl	6a1c <__printf_chk@plt>
    bab0:	ldr	r7, [r4, #36]	; 0x24
    bab4:	cmp	r7, #0
    bab8:	beq	bb24 <main@@Base+0x4f54>
    babc:	ldr	r1, [pc, #852]	; be18 <main@@Base+0x5248>
    bac0:	mov	r0, #1
    bac4:	add	r1, pc, r1
    bac8:	bl	6a1c <__printf_chk@plt>
    bacc:	ldrd	r2, [r7]
    bad0:	orrs	r1, r2, r3
    bad4:	beq	bb14 <main@@Base+0x4f44>
    bad8:	ldr	r8, [pc, #828]	; be1c <main@@Base+0x524c>
    badc:	add	r5, sp, #12
    bae0:	add	r8, pc, r8
    bae4:	strd	r2, [sp]
    bae8:	mov	r1, #128	; 0x80
    baec:	mov	r2, #0
    baf0:	mov	r0, r5
    baf4:	bl	6038 <av_get_channel_layout_string@plt>
    baf8:	mov	r2, r5
    bafc:	mov	r1, r8
    bb00:	mov	r0, #1
    bb04:	bl	6a1c <__printf_chk@plt>
    bb08:	ldrd	r2, [r7, #8]!
    bb0c:	orrs	r1, r2, r3
    bb10:	bne	bae4 <main@@Base+0x4f14>
    bb14:	ldr	r1, [pc, #772]	; be20 <main@@Base+0x5250>
    bb18:	mov	r0, #1
    bb1c:	add	r1, pc, r1
    bb20:	bl	6a1c <__printf_chk@plt>
    bb24:	ldr	r0, [r4, #44]	; 0x2c
    bb28:	cmp	r0, #0
    bb2c:	beq	bb38 <main@@Base+0x4f68>
    bb30:	mov	r1, #3
    bb34:	bl	b6d8 <main@@Base+0x4b08>
    bb38:	ldr	r2, [sp, #140]	; 0x8c
    bb3c:	ldr	r3, [r6]
    bb40:	cmp	r2, r3
    bb44:	bne	bdbc <main@@Base+0x51ec>
    bb48:	add	sp, sp, #148	; 0x94
    bb4c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    bb50:	ldr	r1, [r4, #4]
    bb54:	ldr	r2, [pc, #712]	; be24 <main@@Base+0x5254>
    bb58:	cmp	r1, #0
    bb5c:	add	r2, pc, r2
    bb60:	ldr	r3, [r4]
    bb64:	bne	b7d0 <main@@Base+0x4c00>
    bb68:	ldr	r1, [pc, #696]	; be28 <main@@Base+0x5258>
    bb6c:	add	r1, pc, r1
    bb70:	b	b7d0 <main@@Base+0x4c00>
    bb74:	ldr	r1, [pc, #688]	; be2c <main@@Base+0x525c>
    bb78:	mov	r0, #1
    bb7c:	add	r1, pc, r1
    bb80:	bl	6a1c <__printf_chk@plt>
    bb84:	b	b880 <main@@Base+0x4cb0>
    bb88:	ldr	r1, [pc, #672]	; be30 <main@@Base+0x5260>
    bb8c:	mov	r0, #1
    bb90:	add	r1, pc, r1
    bb94:	bl	6a1c <__printf_chk@plt>
    bb98:	ldr	r3, [r4, #16]
    bb9c:	b	b878 <main@@Base+0x4ca8>
    bba0:	ldr	r1, [pc, #652]	; be34 <main@@Base+0x5264>
    bba4:	mov	r0, #1
    bba8:	add	r1, pc, r1
    bbac:	bl	6a1c <__printf_chk@plt>
    bbb0:	ldr	r3, [r4, #16]
    bbb4:	b	b870 <main@@Base+0x4ca0>
    bbb8:	ldr	r1, [pc, #632]	; be38 <main@@Base+0x5268>
    bbbc:	mov	r0, #1
    bbc0:	add	r1, pc, r1
    bbc4:	bl	6a1c <__printf_chk@plt>
    bbc8:	ldr	r3, [r4, #16]
    bbcc:	cmp	r3, #0
    bbd0:	bge	b868 <main@@Base+0x4c98>
    bbd4:	ldr	r1, [pc, #608]	; be3c <main@@Base+0x526c>
    bbd8:	mov	r0, #1
    bbdc:	add	r1, pc, r1
    bbe0:	bl	6a1c <__printf_chk@plt>
    bbe4:	ldr	r3, [r4, #16]
    bbe8:	b	b868 <main@@Base+0x4c98>
    bbec:	ldr	r1, [pc, #588]	; be40 <main@@Base+0x5270>
    bbf0:	mov	r0, #1
    bbf4:	add	r1, pc, r1
    bbf8:	bl	6a1c <__printf_chk@plt>
    bbfc:	ldr	r3, [r4, #16]
    bc00:	b	b858 <main@@Base+0x4c88>
    bc04:	ldr	r1, [pc, #568]	; be44 <main@@Base+0x5274>
    bc08:	mov	r0, #1
    bc0c:	add	r1, pc, r1
    bc10:	bl	6a1c <__printf_chk@plt>
    bc14:	ldr	r3, [r4, #16]
    bc18:	b	b850 <main@@Base+0x4c80>
    bc1c:	ldr	r1, [pc, #548]	; be48 <main@@Base+0x5278>
    bc20:	mov	r0, #1
    bc24:	add	r1, pc, r1
    bc28:	bl	6a1c <__printf_chk@plt>
    bc2c:	ldr	r3, [r4, #16]
    bc30:	b	b848 <main@@Base+0x4c78>
    bc34:	ldr	r1, [pc, #528]	; be4c <main@@Base+0x527c>
    bc38:	mov	r0, #1
    bc3c:	add	r1, pc, r1
    bc40:	bl	6a1c <__printf_chk@plt>
    bc44:	ldr	r3, [r4, #16]
    bc48:	b	b840 <main@@Base+0x4c70>
    bc4c:	ldr	r1, [pc, #508]	; be50 <main@@Base+0x5280>
    bc50:	mov	r0, #1
    bc54:	add	r1, pc, r1
    bc58:	bl	6a1c <__printf_chk@plt>
    bc5c:	ldr	r3, [r4, #16]
    bc60:	b	b838 <main@@Base+0x4c68>
    bc64:	ldr	r1, [pc, #488]	; be54 <main@@Base+0x5284>
    bc68:	mov	r0, #1
    bc6c:	add	r1, pc, r1
    bc70:	bl	6a1c <__printf_chk@plt>
    bc74:	ldr	r3, [r4, #16]
    bc78:	b	b830 <main@@Base+0x4c60>
    bc7c:	ldr	r1, [pc, #468]	; be58 <main@@Base+0x5288>
    bc80:	mov	r0, #1
    bc84:	add	r1, pc, r1
    bc88:	bl	6a1c <__printf_chk@plt>
    bc8c:	ldr	r3, [r4, #16]
    bc90:	b	b828 <main@@Base+0x4c58>
    bc94:	ldr	r1, [pc, #448]	; be5c <main@@Base+0x528c>
    bc98:	mov	r0, #1
    bc9c:	add	r1, pc, r1
    bca0:	bl	6a1c <__printf_chk@plt>
    bca4:	ldr	r3, [r4, #16]
    bca8:	b	b820 <main@@Base+0x4c50>
    bcac:	ldr	r1, [pc, #428]	; be60 <main@@Base+0x5290>
    bcb0:	mov	r0, #1
    bcb4:	add	r1, pc, r1
    bcb8:	bl	6a1c <__printf_chk@plt>
    bcbc:	ldr	r3, [r4, #16]
    bcc0:	b	b818 <main@@Base+0x4c48>
    bcc4:	ldr	r1, [pc, #408]	; be64 <main@@Base+0x5294>
    bcc8:	mov	r0, #1
    bccc:	add	r1, pc, r1
    bcd0:	bl	6a1c <__printf_chk@plt>
    bcd4:	ldr	r3, [r4, #16]
    bcd8:	b	b810 <main@@Base+0x4c40>
    bcdc:	ldr	r1, [pc, #388]	; be68 <main@@Base+0x5298>
    bce0:	mov	r0, #1
    bce4:	add	r1, pc, r1
    bce8:	bl	6a1c <__printf_chk@plt>
    bcec:	ldr	r3, [r4, #16]
    bcf0:	b	b808 <main@@Base+0x4c38>
    bcf4:	ldr	r1, [pc, #368]	; be6c <main@@Base+0x529c>
    bcf8:	mov	r0, #1
    bcfc:	add	r1, pc, r1
    bd00:	bl	6a1c <__printf_chk@plt>
    bd04:	ldr	r3, [r4, #16]
    bd08:	b	b800 <main@@Base+0x4c30>
    bd0c:	ldr	r1, [pc, #348]	; be70 <main@@Base+0x52a0>
    bd10:	mov	r0, #1
    bd14:	add	r1, pc, r1
    bd18:	bl	6a1c <__printf_chk@plt>
    bd1c:	ldr	r3, [r4, #16]
    bd20:	and	r3, r3, #45056	; 0xb000
    bd24:	cmp	r3, #8192	; 0x2000
    bd28:	beq	bda8 <main@@Base+0x51d8>
    bd2c:	ble	bd54 <main@@Base+0x5184>
    bd30:	cmp	r3, #12288	; 0x3000
    bd34:	beq	bd80 <main@@Base+0x51b0>
    bd38:	cmp	r3, #32768	; 0x8000
    bd3c:	bne	bd94 <main@@Base+0x51c4>
    bd40:	ldr	r1, [pc, #300]	; be74 <main@@Base+0x52a4>
    bd44:	mov	r0, #1
    bd48:	add	r1, pc, r1
    bd4c:	bl	6a1c <__printf_chk@plt>
    bd50:	b	bd6c <main@@Base+0x519c>
    bd54:	cmp	r3, #4096	; 0x1000
    bd58:	bne	bd94 <main@@Base+0x51c4>
    bd5c:	ldr	r1, [pc, #276]	; be78 <main@@Base+0x52a8>
    bd60:	mov	r0, #1
    bd64:	add	r1, pc, r1
    bd68:	bl	6a1c <__printf_chk@plt>
    bd6c:	ldr	r1, [pc, #264]	; be7c <main@@Base+0x52ac>
    bd70:	mov	r0, #1
    bd74:	add	r1, pc, r1
    bd78:	bl	6a1c <__printf_chk@plt>
    bd7c:	b	b89c <main@@Base+0x4ccc>
    bd80:	ldr	r1, [pc, #248]	; be80 <main@@Base+0x52b0>
    bd84:	mov	r0, #1
    bd88:	add	r1, pc, r1
    bd8c:	bl	6a1c <__printf_chk@plt>
    bd90:	b	bd6c <main@@Base+0x519c>
    bd94:	ldr	r1, [pc, #232]	; be84 <main@@Base+0x52b4>
    bd98:	mov	r0, #1
    bd9c:	add	r1, pc, r1
    bda0:	bl	6a1c <__printf_chk@plt>
    bda4:	b	bd6c <main@@Base+0x519c>
    bda8:	ldr	r1, [pc, #216]	; be88 <main@@Base+0x52b8>
    bdac:	mov	r0, #1
    bdb0:	add	r1, pc, r1
    bdb4:	bl	6a1c <__printf_chk@plt>
    bdb8:	b	bd6c <main@@Base+0x519c>
    bdbc:	bl	5e7c <__stack_chk_fail@plt>
    bdc0:	andeq	sp, r2, r0, lsl #6
    bdc4:	andeq	r0, r0, r8, asr r5
    bdc8:	andeq	r7, r1, r8, ror sl
    bdcc:	andeq	r7, r1, r8, ror #20
    bdd0:	andeq	r7, r1, r8, ror #20
    bdd4:	andeq	sl, r1, r0, lsr r4
    bdd8:	andeq	r7, r1, r8, lsr #21
    bddc:			; <UNDEFINED> instruction: 0x00017abc
    bde0:			; <UNDEFINED> instruction: 0x0001a3b0
    bde4:	andeq	r7, r1, r4, ror #20
    bde8:	andeq	r7, r1, ip, ror #20
    bdec:	andeq	sl, r1, r4, asr r3
    bdf0:	andeq	r7, r1, ip, lsr #20
    bdf4:	andeq	r9, r1, r0, ror #23
    bdf8:	strdeq	sl, [r1], -r4
    bdfc:	andeq	r7, r1, ip, ror #19
    be00:	andeq	sl, r1, r0, ror #26
    be04:	andeq	r9, r1, r4, ror fp
    be08:	andeq	sl, r1, r0, ror r2
    be0c:	andeq	r7, r1, r4, lsl #19
    be10:	strdeq	r9, [r1], -ip
    be14:	andeq	sl, r1, r0, lsl r2
    be18:	andeq	r7, r1, r4, asr #18
    be1c:	muleq	r1, r8, sl
    be20:	muleq	r1, ip, r1
    be24:	ldrdeq	r7, [r1], -r8
    be28:	strdeq	r9, [r1], -r8
    be2c:	muleq	r1, ip, r7
    be30:	andeq	r7, r1, r0, lsl #15
    be34:	andeq	r7, r1, ip, asr r7
    be38:	andeq	r7, r1, ip, lsr #14
    be3c:	andeq	r7, r1, ip, lsl r7
    be40:	andeq	r7, r1, ip, ror #13
    be44:	andeq	r7, r1, r8, asr #13
    be48:	andeq	r7, r1, r4, lsr #13
    be4c:	andeq	r7, r1, ip, ror r6
    be50:	andeq	r7, r1, ip, asr r6
    be54:	andeq	r7, r1, ip, lsr r6
    be58:	andeq	r7, r1, r8, lsl r6
    be5c:	strdeq	r7, [r1], -r8
    be60:	ldrdeq	r7, [r1], -r8
    be64:			; <UNDEFINED> instruction: 0x000175b8
    be68:	muleq	r1, r8, r5
    be6c:	andeq	r7, r1, r4, ror r5
    be70:	andeq	r7, r1, ip, lsl #12
    be74:	andeq	sl, r1, ip, asr #8
    be78:	andeq	r7, r1, ip, ror #11
    be7c:	andeq	r9, r1, r4, asr #30
    be80:			; <UNDEFINED> instruction: 0x000175b8
    be84:	andeq	r7, r1, ip, ror r5
    be88:	andeq	r7, r1, r8, lsr #11
    be8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    be90:	ldr	r3, [pc, #436]	; c04c <main@@Base+0x547c>
    be94:	ldr	r2, [pc, #436]	; c050 <main@@Base+0x5480>
    be98:	add	r3, pc, r3
    be9c:	ldr	r7, [r3, r2]
    bea0:	sub	sp, sp, #16
    bea4:	ldr	r3, [r7]
    bea8:	subs	r8, r0, #0
    beac:	str	r3, [sp, #12]
    beb0:	beq	bff4 <main@@Base+0x5424>
    beb4:	cmp	r1, #0
    beb8:	mov	r6, r1
    bebc:	bne	bef0 <main@@Base+0x5320>
    bec0:	bl	62c0 <avcodec_find_decoder_by_name@plt>
    bec4:	mov	r4, r0
    bec8:	cmp	r4, #0
    becc:	beq	bf00 <main@@Base+0x5330>
    bed0:	ldr	r2, [sp, #12]
    bed4:	ldr	r3, [r7]
    bed8:	cmp	r2, r3
    bedc:	bne	c048 <main@@Base+0x5478>
    bee0:	mov	r0, r4
    bee4:	add	sp, sp, #16
    bee8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    beec:	b	b788 <main@@Base+0x4bb8>
    bef0:	bl	62f0 <avcodec_find_encoder_by_name@plt>
    bef4:	mov	r4, r0
    bef8:	cmp	r4, #0
    befc:	bne	bed0 <main@@Base+0x5300>
    bf00:	mov	r0, r8
    bf04:	bl	63f8 <avcodec_descriptor_get_by_name@plt>
    bf08:	subs	r9, r0, #0
    bf0c:	beq	c01c <main@@Base+0x544c>
    bf10:	cmp	r6, #0
    bf14:	mov	sl, r4
    bf18:	ldr	r5, [r9]
    bf1c:	bne	bf60 <main@@Base+0x5390>
    bf20:	mov	r0, r4
    bf24:	bl	641c <av_codec_next@plt>
    bf28:	subs	r4, r0, #0
    bf2c:	beq	bfac <main@@Base+0x53dc>
    bf30:	ldr	r3, [r4, #12]
    bf34:	cmp	r5, r3
    bf38:	bne	bf20 <main@@Base+0x5350>
    bf3c:	bl	6800 <av_codec_is_decoder@plt>
    bf40:	cmp	r0, #0
    bf44:	beq	bf20 <main@@Base+0x5350>
    bf48:	mov	r0, r4
    bf4c:	bl	b788 <main@@Base+0x4bb8>
    bf50:	cmp	r6, #0
    bf54:	mov	sl, #1
    bf58:	ldr	r5, [r9]
    bf5c:	beq	bf20 <main@@Base+0x5350>
    bf60:	mov	r0, r4
    bf64:	bl	641c <av_codec_next@plt>
    bf68:	subs	r4, r0, #0
    bf6c:	beq	bf98 <main@@Base+0x53c8>
    bf70:	ldr	r3, [r4, #12]
    bf74:	cmp	r5, r3
    bf78:	bne	bf60 <main@@Base+0x5390>
    bf7c:	bl	63ec <av_codec_is_encoder@plt>
    bf80:	cmp	r0, #0
    bf84:	bne	bf48 <main@@Base+0x5378>
    bf88:	mov	r0, r4
    bf8c:	bl	641c <av_codec_next@plt>
    bf90:	subs	r4, r0, #0
    bf94:	bne	bf70 <main@@Base+0x53a0>
    bf98:	cmp	sl, #0
    bf9c:	bne	bfb4 <main@@Base+0x53e4>
    bfa0:	ldr	r3, [pc, #172]	; c054 <main@@Base+0x5484>
    bfa4:	add	r3, pc, r3
    bfa8:	b	bfd4 <main@@Base+0x5404>
    bfac:	cmp	sl, #0
    bfb0:	beq	bfcc <main@@Base+0x53fc>
    bfb4:	ldr	r2, [sp, #12]
    bfb8:	ldr	r3, [r7]
    bfbc:	cmp	r2, r3
    bfc0:	bne	c048 <main@@Base+0x5478>
    bfc4:	add	sp, sp, #16
    bfc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    bfcc:	ldr	r3, [pc, #132]	; c058 <main@@Base+0x5488>
    bfd0:	add	r3, pc, r3
    bfd4:	ldr	r2, [pc, #128]	; c05c <main@@Base+0x548c>
    bfd8:	str	r3, [sp]
    bfdc:	add	r2, pc, r2
    bfe0:	mov	r3, r8
    bfe4:	mov	r1, #16
    bfe8:	mov	r0, #0
    bfec:	bl	6188 <av_log@plt>
    bff0:	b	bfb4 <main@@Base+0x53e4>
    bff4:	ldr	r2, [sp, #12]
    bff8:	ldr	r3, [r7]
    bffc:	cmp	r2, r3
    c000:	bne	c048 <main@@Base+0x5478>
    c004:	mov	r1, #16
    c008:	ldr	r2, [pc, #80]	; c060 <main@@Base+0x5490>
    c00c:	add	r2, pc, r2
    c010:	add	sp, sp, #16
    c014:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    c018:	b	6188 <av_log@plt>
    c01c:	ldr	r2, [sp, #12]
    c020:	ldr	r3, [r7]
    c024:	cmp	r2, r3
    c028:	bne	c048 <main@@Base+0x5478>
    c02c:	mov	r3, r8
    c030:	mov	r1, #16
    c034:	ldr	r2, [pc, #40]	; c064 <main@@Base+0x5494>
    c038:	add	r2, pc, r2
    c03c:	add	sp, sp, #16
    c040:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    c044:	b	6188 <av_log@plt>
    c048:	bl	5e7c <__stack_chk_fail@plt>
    c04c:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
    c050:	andeq	r0, r0, r8, asr r5
    c054:	andeq	r7, r1, r4, lsl #9
    c058:	andeq	r7, r1, r4, ror #8
    c05c:	andeq	r7, r1, r0, lsl #9
    c060:	andeq	r7, r1, r4, lsr r4
    c064:	andeq	r7, r1, ip, lsr #9
    c068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c06c:	mov	sl, r0
    c070:	ldr	r0, [pc, #452]	; c23c <main@@Base+0x566c>
    c074:	ldr	ip, [pc, #452]	; c240 <main@@Base+0x5670>
    c078:	add	r0, pc, r0
    c07c:	ldr	ip, [r0, ip]
    c080:	sub	sp, sp, #28
    c084:	str	r1, [sp]
    c088:	ldr	r1, [ip]
    c08c:	cmp	sl, #1
    c090:	str	ip, [sp, #12]
    c094:	strd	r2, [sp, #4]
    c098:	str	r1, [sp, #20]
    c09c:	ble	c15c <main@@Base+0x558c>
    c0a0:	mov	r4, #1
    c0a4:	b	c0b4 <main@@Base+0x54e4>
    c0a8:	add	r4, r4, #1
    c0ac:	cmp	sl, r4
    c0b0:	ble	c15c <main@@Base+0x558c>
    c0b4:	ldr	r3, [sp]
    c0b8:	ldr	r7, [r3, r4, lsl #2]
    c0bc:	ldrb	r3, [r7]
    c0c0:	cmp	r3, #45	; 0x2d
    c0c4:	bne	c0a8 <main@@Base+0x54d8>
    c0c8:	add	r8, r7, #1
    c0cc:	mov	r0, r8
    c0d0:	mov	r1, #58	; 0x3a
    c0d4:	bl	662c <strchr@plt>
    c0d8:	cmp	r0, #0
    c0dc:	subne	r5, r0, r8
    c0e0:	beq	c218 <main@@Base+0x5648>
    c0e4:	ldr	r6, [sp, #4]
    c0e8:	ldr	r9, [r6]
    c0ec:	cmp	r9, #0
    c0f0:	beq	c12c <main@@Base+0x555c>
    c0f4:	mov	fp, r9
    c0f8:	mov	r2, r5
    c0fc:	mov	r1, fp
    c100:	mov	r0, r8
    c104:	bl	6554 <strncmp@plt>
    c108:	cmp	r0, #0
    c10c:	bne	c120 <main@@Base+0x5550>
    c110:	mov	r0, fp
    c114:	bl	61a0 <strlen@plt>
    c118:	cmp	r0, r5
    c11c:	beq	c1f4 <main@@Base+0x5624>
    c120:	ldr	fp, [r6, #20]!
    c124:	cmp	fp, #0
    c128:	bne	c0f8 <main@@Base+0x5528>
    c12c:	ldrb	r3, [r7, #1]
    c130:	cmp	r3, #110	; 0x6e
    c134:	beq	c180 <main@@Base+0x55b0>
    c138:	mov	r0, r8
    c13c:	ldr	r1, [sp, #8]
    c140:	bl	695c <strcmp@plt>
    c144:	cmp	r0, #0
    c148:	beq	c160 <main@@Base+0x5590>
    c14c:	add	r4, r4, #1
    c150:	add	r4, r4, #1
    c154:	cmp	sl, r4
    c158:	bgt	c0b4 <main@@Base+0x54e4>
    c15c:	mov	r4, #0
    c160:	ldr	r3, [sp, #12]
    c164:	ldr	r2, [sp, #20]
    c168:	ldr	r3, [r3]
    c16c:	mov	r0, r4
    c170:	cmp	r2, r3
    c174:	bne	c238 <main@@Base+0x5668>
    c178:	add	sp, sp, #28
    c17c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c180:	ldrb	r3, [r7, #2]
    c184:	cmp	r3, #111	; 0x6f
    c188:	bne	c138 <main@@Base+0x5568>
    c18c:	add	r7, r7, #3
    c190:	mov	r0, r7
    c194:	mov	r1, #58	; 0x3a
    c198:	bl	662c <strchr@plt>
    c19c:	cmp	r0, #0
    c1a0:	subne	r5, r0, r7
    c1a4:	beq	c228 <main@@Base+0x5658>
    c1a8:	cmp	r9, #0
    c1ac:	beq	c138 <main@@Base+0x5568>
    c1b0:	ldr	fp, [sp, #4]
    c1b4:	b	c1c4 <main@@Base+0x55f4>
    c1b8:	ldr	r9, [fp, #20]!
    c1bc:	cmp	r9, #0
    c1c0:	beq	c138 <main@@Base+0x5568>
    c1c4:	mov	r2, r5
    c1c8:	mov	r1, r9
    c1cc:	mov	r0, r7
    c1d0:	bl	6554 <strncmp@plt>
    c1d4:	cmp	r0, #0
    c1d8:	mov	r6, fp
    c1dc:	bne	c1b8 <main@@Base+0x55e8>
    c1e0:	mov	r0, r9
    c1e4:	bl	61a0 <strlen@plt>
    c1e8:	cmp	r0, r5
    c1ec:	bne	c1b8 <main@@Base+0x55e8>
    c1f0:	mov	fp, r9
    c1f4:	mov	r1, fp
    c1f8:	ldr	r0, [sp, #8]
    c1fc:	bl	695c <strcmp@plt>
    c200:	cmp	r0, #0
    c204:	beq	c160 <main@@Base+0x5590>
    c208:	ldr	r3, [r6, #4]
    c20c:	tst	r3, #1
    c210:	beq	c0a8 <main@@Base+0x54d8>
    c214:	b	c14c <main@@Base+0x557c>
    c218:	mov	r0, r8
    c21c:	bl	61a0 <strlen@plt>
    c220:	mov	r5, r0
    c224:	b	c0e4 <main@@Base+0x5514>
    c228:	mov	r0, r7
    c22c:	bl	61a0 <strlen@plt>
    c230:	mov	r5, r0
    c234:	b	c1a8 <main@@Base+0x55d8>
    c238:	bl	5e7c <__stack_chk_fail@plt>
    c23c:	andeq	ip, r2, ip, lsl sl
    c240:	andeq	r0, r0, r8, asr r5
    c244:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    c248:	ldr	r6, [pc, #1448]	; c7f8 <main@@Base+0x5c28>
    c24c:	ldr	r3, [pc, #1448]	; c7fc <main@@Base+0x5c2c>
    c250:	add	r6, pc, r6
    c254:	ldr	r8, [r6, r3]
    c258:	sub	sp, sp, #168	; 0xa8
    c25c:	ldr	r3, [r8]
    c260:	mov	r4, r1
    c264:	mov	r7, r2
    c268:	str	r3, [sp, #164]	; 0xa4
    c26c:	bl	608c <avcodec_get_class@plt>
    c270:	str	r0, [sp, #12]
    c274:	bl	65e4 <avformat_get_class@plt>
    c278:	str	r0, [sp, #16]
    c27c:	bl	5dbc <avresample_get_class@plt>
    c280:	str	r0, [sp, #20]
    c284:	bl	64dc <sws_get_class@plt>
    c288:	str	r0, [sp, #24]
    c28c:	bl	6b90 <swr_get_class@plt>
    c290:	ldr	r1, [pc, #1384]	; c800 <main@@Base+0x5c30>
    c294:	str	r0, [sp, #28]
    c298:	add	r1, pc, r1
    c29c:	mov	r0, r4
    c2a0:	bl	695c <strcmp@plt>
    c2a4:	cmp	r0, #0
    c2a8:	beq	c448 <main@@Base+0x5878>
    c2ac:	ldr	r1, [pc, #1360]	; c804 <main@@Base+0x5c34>
    c2b0:	mov	r0, r4
    c2b4:	add	r1, pc, r1
    c2b8:	bl	695c <strcmp@plt>
    c2bc:	cmp	r0, #0
    c2c0:	beq	c448 <main@@Base+0x5878>
    c2c4:	mov	r1, #58	; 0x3a
    c2c8:	mov	r0, r4
    c2cc:	bl	662c <strchr@plt>
    c2d0:	cmp	r0, #0
    c2d4:	beq	c518 <main@@Base+0x5948>
    c2d8:	sub	r2, r0, r4
    c2dc:	add	r2, r2, #1
    c2e0:	cmp	r2, #128	; 0x80
    c2e4:	add	r5, sp, #36	; 0x24
    c2e8:	movcs	r2, #128	; 0x80
    c2ec:	mov	r1, r4
    c2f0:	mov	r0, r5
    c2f4:	bl	6404 <av_strlcpy@plt>
    c2f8:	mov	r2, #3
    c2fc:	mov	r3, #0
    c300:	add	r9, sp, #12
    c304:	str	r2, [sp]
    c308:	mov	r1, r5
    c30c:	mov	r2, r3
    c310:	mov	r0, r9
    c314:	bl	6224 <av_opt_find@plt>
    c318:	cmp	r0, #0
    c31c:	beq	c46c <main@@Base+0x589c>
    c320:	ldr	r3, [r0, #40]	; 0x28
    c324:	cmp	r3, #0
    c328:	beq	c46c <main@@Base+0x589c>
    c32c:	ldr	r3, [r0, #12]
    c330:	cmp	r3, #0
    c334:	movne	r3, #0
    c338:	beq	c454 <main@@Base+0x5884>
    c33c:	ldr	r2, [pc, #1220]	; c808 <main@@Base+0x5c38>
    c340:	mov	r1, r4
    c344:	ldr	r0, [r6, r2]
    c348:	mov	r2, r7
    c34c:	bl	6704 <av_dict_set@plt>
    c350:	mov	r2, #3
    c354:	mov	r3, #0
    c358:	str	r2, [sp]
    c35c:	mov	r1, r4
    c360:	mov	r2, r3
    c364:	add	r0, sp, #16
    c368:	bl	6224 <av_opt_find@plt>
    c36c:	cmp	r0, #0
    c370:	beq	c3c0 <main@@Base+0x57f0>
    c374:	ldr	r3, [r0, #40]	; 0x28
    c378:	cmp	r3, #0
    c37c:	beq	c3c0 <main@@Base+0x57f0>
    c380:	ldr	r3, [r0, #12]
    c384:	cmp	r3, #0
    c388:	bne	c528 <main@@Base+0x5958>
    c38c:	ldrb	r2, [r7]
    c390:	sub	r2, r2, #43	; 0x2b
    c394:	tst	r2, #253	; 0xfd
    c398:	moveq	r5, #1
    c39c:	moveq	r3, #32
    c3a0:	bne	c76c <main@@Base+0x5b9c>
    c3a4:	ldr	r2, [pc, #1120]	; c80c <main@@Base+0x5c3c>
    c3a8:	mov	r1, r4
    c3ac:	ldr	r0, [r6, r2]
    c3b0:	mov	r2, r7
    c3b4:	bl	6704 <av_dict_set@plt>
    c3b8:	cmp	r5, #0
    c3bc:	bne	c540 <main@@Base+0x5970>
    c3c0:	mov	r2, #3
    c3c4:	mov	r3, #0
    c3c8:	str	r2, [sp]
    c3cc:	mov	r1, r4
    c3d0:	mov	r2, r3
    c3d4:	add	r0, sp, #20
    c3d8:	bl	6224 <av_opt_find@plt>
    c3dc:	cmp	r0, #0
    c3e0:	beq	c428 <main@@Base+0x5858>
    c3e4:	ldr	r5, [r0, #40]	; 0x28
    c3e8:	cmp	r5, #0
    c3ec:	beq	c42c <main@@Base+0x585c>
    c3f0:	ldr	r3, [r0, #12]
    c3f4:	cmp	r3, #0
    c3f8:	movne	r3, #0
    c3fc:	bne	c414 <main@@Base+0x5844>
    c400:	ldrb	r3, [r7]
    c404:	sub	r3, r3, #43	; 0x2b
    c408:	tst	r3, #253	; 0xfd
    c40c:	movne	r3, #0
    c410:	moveq	r3, #32
    c414:	ldr	r2, [pc, #1012]	; c810 <main@@Base+0x5c40>
    c418:	mov	r1, r4
    c41c:	ldr	r0, [r6, r2]
    c420:	mov	r2, r7
    c424:	bl	6704 <av_dict_set@plt>
    c428:	mov	r5, #0
    c42c:	ldr	r2, [sp, #164]	; 0xa4
    c430:	ldr	r3, [r8]
    c434:	mov	r0, r5
    c438:	cmp	r2, r3
    c43c:	bne	c7a0 <main@@Base+0x5bd0>
    c440:	add	sp, sp, #168	; 0xa8
    c444:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c448:	mov	r0, #48	; 0x30
    c44c:	bl	5de0 <av_log_set_level@plt>
    c450:	b	c2c4 <main@@Base+0x56f4>
    c454:	ldrb	r3, [r7]
    c458:	sub	r3, r3, #43	; 0x2b
    c45c:	tst	r3, #253	; 0xfd
    c460:	movne	r3, #0
    c464:	moveq	r3, #32
    c468:	b	c33c <main@@Base+0x576c>
    c46c:	ldrb	r2, [r4]
    c470:	cmp	r2, #97	; 0x61
    c474:	cmpne	r2, #118	; 0x76
    c478:	moveq	r3, #1
    c47c:	movne	r3, #0
    c480:	cmp	r2, #115	; 0x73
    c484:	orreq	r3, r3, #1
    c488:	cmp	r3, #0
    c48c:	beq	c4c0 <main@@Base+0x58f0>
    c490:	mov	r2, #2
    c494:	mov	r3, #0
    c498:	str	r2, [sp]
    c49c:	mov	r0, r9
    c4a0:	mov	r2, r3
    c4a4:	add	r1, r4, #1
    c4a8:	bl	6224 <av_opt_find@plt>
    c4ac:	cmp	r0, #0
    c4b0:	beq	c4c0 <main@@Base+0x58f0>
    c4b4:	ldr	r3, [r0, #40]	; 0x28
    c4b8:	cmp	r3, #0
    c4bc:	bne	c32c <main@@Base+0x575c>
    c4c0:	mov	r2, #3
    c4c4:	mov	r3, #0
    c4c8:	str	r2, [sp]
    c4cc:	mov	r1, r4
    c4d0:	mov	r2, r3
    c4d4:	add	r0, sp, #16
    c4d8:	bl	6224 <av_opt_find@plt>
    c4dc:	cmp	r0, #0
    c4e0:	beq	c55c <main@@Base+0x598c>
    c4e4:	ldr	r3, [r0, #40]	; 0x28
    c4e8:	cmp	r3, #0
    c4ec:	beq	c55c <main@@Base+0x598c>
    c4f0:	ldr	r5, [r0, #12]
    c4f4:	cmp	r5, #0
    c4f8:	beq	c738 <main@@Base+0x5b68>
    c4fc:	ldr	r2, [pc, #776]	; c80c <main@@Base+0x5c3c>
    c500:	mov	r3, #0
    c504:	ldr	r0, [r6, r2]
    c508:	mov	r1, r4
    c50c:	mov	r2, r7
    c510:	bl	6704 <av_dict_set@plt>
    c514:	b	c3c0 <main@@Base+0x57f0>
    c518:	mov	r0, r4
    c51c:	bl	61a0 <strlen@plt>
    c520:	add	r0, r4, r0
    c524:	b	c2d8 <main@@Base+0x5708>
    c528:	ldr	r2, [pc, #732]	; c80c <main@@Base+0x5c3c>
    c52c:	mov	r3, #0
    c530:	ldr	r0, [r6, r2]
    c534:	mov	r1, r4
    c538:	mov	r2, r7
    c53c:	bl	6704 <av_dict_set@plt>
    c540:	ldr	r2, [pc, #716]	; c814 <main@@Base+0x5c44>
    c544:	mov	r3, r4
    c548:	add	r2, pc, r2
    c54c:	mov	r1, #40	; 0x28
    c550:	mov	r0, #0
    c554:	bl	6188 <av_log@plt>
    c558:	b	c3c0 <main@@Base+0x57f0>
    c55c:	mov	r2, #3
    c560:	mov	r3, #0
    c564:	str	r2, [sp]
    c568:	mov	r1, r4
    c56c:	mov	r2, r3
    c570:	add	r0, sp, #24
    c574:	bl	6224 <av_opt_find@plt>
    c578:	subs	r9, r0, #0
    c57c:	beq	c684 <main@@Base+0x5ab4>
    c580:	ldr	r3, [r9, #40]	; 0x28
    c584:	cmp	r3, #0
    c588:	beq	c684 <main@@Base+0x5ab4>
    c58c:	bl	602c <sws_alloc_context@plt>
    c590:	mov	r3, #0
    c594:	mov	r2, r7
    c598:	mov	r1, r4
    c59c:	mov	sl, r0
    c5a0:	bl	6308 <av_opt_set@plt>
    c5a4:	mov	r5, r0
    c5a8:	mov	r0, sl
    c5ac:	bl	6344 <sws_freeContext@plt>
    c5b0:	ldr	r1, [pc, #608]	; c818 <main@@Base+0x5c48>
    c5b4:	mov	r0, r4
    c5b8:	add	r1, pc, r1
    c5bc:	bl	695c <strcmp@plt>
    c5c0:	cmp	r0, #0
    c5c4:	beq	c784 <main@@Base+0x5bb4>
    c5c8:	ldr	r1, [pc, #588]	; c81c <main@@Base+0x5c4c>
    c5cc:	mov	r0, r4
    c5d0:	add	r1, pc, r1
    c5d4:	bl	695c <strcmp@plt>
    c5d8:	cmp	r0, #0
    c5dc:	beq	c784 <main@@Base+0x5bb4>
    c5e0:	ldr	r1, [pc, #568]	; c820 <main@@Base+0x5c50>
    c5e4:	mov	r0, r4
    c5e8:	add	r1, pc, r1
    c5ec:	bl	695c <strcmp@plt>
    c5f0:	cmp	r0, #0
    c5f4:	beq	c784 <main@@Base+0x5bb4>
    c5f8:	ldr	r1, [pc, #548]	; c824 <main@@Base+0x5c54>
    c5fc:	mov	r0, r4
    c600:	add	r1, pc, r1
    c604:	bl	695c <strcmp@plt>
    c608:	cmp	r0, #0
    c60c:	beq	c784 <main@@Base+0x5bb4>
    c610:	ldr	r1, [pc, #528]	; c828 <main@@Base+0x5c58>
    c614:	mov	r0, r4
    c618:	add	r1, pc, r1
    c61c:	bl	695c <strcmp@plt>
    c620:	cmp	r0, #0
    c624:	beq	c784 <main@@Base+0x5bb4>
    c628:	ldr	r1, [pc, #508]	; c82c <main@@Base+0x5c5c>
    c62c:	mov	r0, r4
    c630:	add	r1, pc, r1
    c634:	bl	695c <strcmp@plt>
    c638:	cmp	r0, #0
    c63c:	beq	c784 <main@@Base+0x5bb4>
    c640:	cmp	r5, #0
    c644:	blt	c71c <main@@Base+0x5b4c>
    c648:	ldr	r3, [r9, #12]
    c64c:	cmp	r3, #0
    c650:	movne	r3, #0
    c654:	bne	c66c <main@@Base+0x5a9c>
    c658:	ldrb	r3, [r7]
    c65c:	sub	r3, r3, #43	; 0x2b
    c660:	tst	r3, #253	; 0xfd
    c664:	movne	r3, #0
    c668:	moveq	r3, #32
    c66c:	ldr	r2, [pc, #444]	; c830 <main@@Base+0x5c60>
    c670:	mov	r1, r4
    c674:	ldr	r0, [r6, r2]
    c678:	mov	r2, r7
    c67c:	bl	6704 <av_dict_set@plt>
    c680:	b	c3c0 <main@@Base+0x57f0>
    c684:	mov	r2, #3
    c688:	mov	r3, #0
    c68c:	str	r2, [sp]
    c690:	mov	r1, r4
    c694:	mov	r2, r3
    c698:	add	r0, sp, #28
    c69c:	bl	6224 <av_opt_find@plt>
    c6a0:	subs	r9, r0, #0
    c6a4:	beq	c7c0 <main@@Base+0x5bf0>
    c6a8:	ldr	r3, [r9, #40]	; 0x28
    c6ac:	cmp	r3, #0
    c6b0:	beq	c7c0 <main@@Base+0x5bf0>
    c6b4:	bl	6a4c <swr_alloc@plt>
    c6b8:	mov	r3, #0
    c6bc:	mov	r2, r7
    c6c0:	mov	r1, r4
    c6c4:	str	r0, [sp, #32]
    c6c8:	bl	6308 <av_opt_set@plt>
    c6cc:	mov	r5, r0
    c6d0:	add	r0, sp, #32
    c6d4:	bl	6680 <swr_free@plt>
    c6d8:	cmp	r5, #0
    c6dc:	blt	c750 <main@@Base+0x5b80>
    c6e0:	ldr	r3, [r9, #12]
    c6e4:	cmp	r3, #0
    c6e8:	movne	r3, #0
    c6ec:	bne	c704 <main@@Base+0x5b34>
    c6f0:	ldrb	r3, [r7]
    c6f4:	sub	r3, r3, #43	; 0x2b
    c6f8:	tst	r3, #253	; 0xfd
    c6fc:	movne	r3, #0
    c700:	moveq	r3, #32
    c704:	ldr	r2, [pc, #296]	; c834 <main@@Base+0x5c64>
    c708:	mov	r1, r4
    c70c:	ldr	r0, [r6, r2]
    c710:	mov	r2, r7
    c714:	bl	6704 <av_dict_set@plt>
    c718:	b	c3c0 <main@@Base+0x57f0>
    c71c:	ldr	r2, [pc, #276]	; c838 <main@@Base+0x5c68>
    c720:	mov	r3, r4
    c724:	add	r2, pc, r2
    c728:	mov	r1, #16
    c72c:	mov	r0, #0
    c730:	bl	6188 <av_log@plt>
    c734:	b	c42c <main@@Base+0x585c>
    c738:	ldrb	r3, [r7]
    c73c:	sub	r3, r3, #43	; 0x2b
    c740:	tst	r3, #253	; 0xfd
    c744:	beq	c7a4 <main@@Base+0x5bd4>
    c748:	mov	r3, r5
    c74c:	b	c3a4 <main@@Base+0x57d4>
    c750:	ldr	r2, [pc, #228]	; c83c <main@@Base+0x5c6c>
    c754:	mov	r3, r4
    c758:	add	r2, pc, r2
    c75c:	mov	r1, #16
    c760:	mov	r0, #0
    c764:	bl	6188 <av_log@plt>
    c768:	b	c42c <main@@Base+0x585c>
    c76c:	ldr	r2, [pc, #152]	; c80c <main@@Base+0x5c3c>
    c770:	mov	r1, r4
    c774:	ldr	r0, [r6, r2]
    c778:	mov	r2, r7
    c77c:	bl	6704 <av_dict_set@plt>
    c780:	b	c540 <main@@Base+0x5970>
    c784:	ldr	r2, [pc, #180]	; c840 <main@@Base+0x5c70>
    c788:	mov	r1, #16
    c78c:	add	r2, pc, r2
    c790:	mov	r0, #0
    c794:	bl	6188 <av_log@plt>
    c798:	mvn	r5, #21
    c79c:	b	c42c <main@@Base+0x585c>
    c7a0:	bl	5e7c <__stack_chk_fail@plt>
    c7a4:	ldr	r2, [pc, #96]	; c80c <main@@Base+0x5c3c>
    c7a8:	mov	r3, #32
    c7ac:	ldr	r0, [r6, r2]
    c7b0:	mov	r1, r4
    c7b4:	mov	r2, r7
    c7b8:	bl	6704 <av_dict_set@plt>
    c7bc:	b	c3c0 <main@@Base+0x57f0>
    c7c0:	mov	r2, #3
    c7c4:	mov	r3, #0
    c7c8:	str	r2, [sp]
    c7cc:	mov	r1, r4
    c7d0:	mov	r2, r3
    c7d4:	add	r0, sp, #20
    c7d8:	bl	6224 <av_opt_find@plt>
    c7dc:	cmp	r0, #0
    c7e0:	beq	c7f0 <main@@Base+0x5c20>
    c7e4:	ldr	r3, [r0, #40]	; 0x28
    c7e8:	cmp	r3, #0
    c7ec:	bne	c3f0 <main@@Base+0x5820>
    c7f0:	ldr	r5, [pc, #76]	; c844 <main@@Base+0x5c74>
    c7f4:	b	c42c <main@@Base+0x585c>
    c7f8:	andeq	ip, r2, r4, asr #16
    c7fc:	andeq	r0, r0, r8, asr r5
    c800:	andeq	r7, r1, r8, ror r2
    c804:	andeq	r7, r1, r4, ror #4
    c808:	andeq	r0, r0, ip, asr r5
    c80c:	andeq	r0, r0, r8, lsl r5
    c810:	andeq	r0, r0, r0, asr r5
    c814:	ldrdeq	r6, [r1], -r8
    c818:	muleq	r1, ip, pc	; <UNPREDICTABLE>
    c81c:	andeq	r6, r1, ip, lsl #31
    c820:	andeq	r6, r1, ip, ror pc
    c824:	andeq	r6, r1, ip, ror #30
    c828:	andeq	r6, r1, ip, asr pc
    c82c:	andeq	r6, r1, r0, asr pc
    c830:	andeq	r0, r0, r4, asr #10
    c834:	andeq	r0, r0, r0, ror #10
    c838:	ldrdeq	r6, [r1], -r4
    c83c:	andeq	r6, r1, r0, lsr #29
    c840:	andeq	r6, r1, r0, lsl #28
    c844:	blge	febf886c <__bss_end__@@Base+0xfebbd9a0>
    c848:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    c84c:	ldr	r3, [pc, #272]	; c964 <main@@Base+0x5d94>
    c850:	ldr	r2, [pc, #272]	; c968 <main@@Base+0x5d98>
    c854:	add	r3, pc, r3
    c858:	ldr	r9, [r3, r2]
    c85c:	ldr	r1, [r0, #40]	; 0x28
    c860:	ldr	r2, [r9]
    c864:	sub	sp, sp, #8
    c868:	cmp	r1, #0
    c86c:	mov	r8, r0
    c870:	str	r2, [sp, #4]
    c874:	ble	c92c <main@@Base+0x5d5c>
    c878:	mov	r6, #0
    c87c:	mov	r7, r6
    c880:	ldr	r5, [r8, #36]	; 0x24
    c884:	add	r5, r5, r6
    c888:	ldr	r3, [r5, #8]
    c88c:	cmp	r3, #0
    c890:	ble	c910 <main@@Base+0x5d40>
    c894:	mov	r4, #0
    c898:	mov	sl, r4
    c89c:	ldr	r0, [r5, #4]
    c8a0:	add	sl, sl, #1
    c8a4:	add	r0, r0, r4
    c8a8:	add	r0, r0, #8
    c8ac:	bl	5df8 <av_freep@plt>
    c8b0:	ldr	r0, [r5, #4]
    c8b4:	add	r0, r0, r4
    c8b8:	add	r0, r0, #16
    c8bc:	bl	5e28 <av_dict_free@plt>
    c8c0:	ldr	r0, [r5, #4]
    c8c4:	add	r0, r0, r4
    c8c8:	add	r0, r0, #20
    c8cc:	bl	5e28 <av_dict_free@plt>
    c8d0:	ldr	r0, [r5, #4]
    c8d4:	add	r0, r0, r4
    c8d8:	add	r0, r0, #24
    c8dc:	bl	5e28 <av_dict_free@plt>
    c8e0:	ldr	r0, [r5, #4]
    c8e4:	add	r0, r0, r4
    c8e8:	add	r0, r0, #28
    c8ec:	bl	5e28 <av_dict_free@plt>
    c8f0:	ldr	r0, [r5, #4]
    c8f4:	add	r0, r0, r4
    c8f8:	add	r0, r0, #32
    c8fc:	bl	5e28 <av_dict_free@plt>
    c900:	ldr	r3, [r5, #8]
    c904:	add	r4, r4, #36	; 0x24
    c908:	cmp	r3, sl
    c90c:	bgt	c89c <main@@Base+0x5ccc>
    c910:	add	r0, r5, #4
    c914:	bl	5df8 <av_freep@plt>
    c918:	ldr	r3, [r8, #40]	; 0x28
    c91c:	add	r7, r7, #1
    c920:	cmp	r3, r7
    c924:	add	r6, r6, #12
    c928:	bgt	c880 <main@@Base+0x5cb0>
    c92c:	add	r0, r8, #36	; 0x24
    c930:	bl	5df8 <av_freep@plt>
    c934:	add	r0, r8, #52	; 0x34
    c938:	bl	5df8 <av_freep@plt>
    c93c:	add	r0, r8, #8
    c940:	bl	5df8 <av_freep@plt>
    c944:	ldr	r2, [sp, #4]
    c948:	ldr	r3, [r9]
    c94c:	cmp	r2, r3
    c950:	bne	c960 <main@@Base+0x5d90>
    c954:	add	sp, sp, #8
    c958:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    c95c:	b	a828 <main@@Base+0x3c58>
    c960:	bl	5e7c <__stack_chk_fail@plt>
    c964:	andeq	ip, r2, r0, asr #4
    c968:	andeq	r0, r0, r8, asr r5
    c96c:	push	{r4, r5, lr}
    c970:	ldr	r3, [pc, #92]	; c9d4 <main@@Base+0x5e04>
    c974:	ldr	r0, [pc, #92]	; c9d8 <main@@Base+0x5e08>
    c978:	add	r3, pc, r3
    c97c:	ldr	r4, [r3, r0]
    c980:	sub	sp, sp, #12
    c984:	ldr	r3, [r4]
    c988:	mov	r5, r2
    c98c:	str	r3, [sp, #4]
    c990:	bl	5d8c <av_get_cpu_flags@plt>
    c994:	mov	r1, r5
    c998:	str	r0, [sp]
    c99c:	mov	r0, sp
    c9a0:	bl	6428 <av_parse_cpu_caps@plt>
    c9a4:	cmp	r0, #0
    c9a8:	blt	c9b8 <main@@Base+0x5de8>
    c9ac:	ldr	r0, [sp]
    c9b0:	bl	6434 <av_force_cpu_flags@plt>
    c9b4:	mov	r0, #0
    c9b8:	ldr	r2, [sp, #4]
    c9bc:	ldr	r3, [r4]
    c9c0:	cmp	r2, r3
    c9c4:	bne	c9d0 <main@@Base+0x5e00>
    c9c8:	add	sp, sp, #12
    c9cc:	pop	{r4, r5, pc}
    c9d0:	bl	5e7c <__stack_chk_fail@plt>
    c9d4:	andeq	ip, r2, ip, lsl r1
    c9d8:	andeq	r0, r0, r8, asr r5
    c9dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c9e0:	ldr	r3, [pc, #952]	; cda0 <main@@Base+0x61d0>
    c9e4:	mov	r4, r2
    c9e8:	ldr	r2, [pc, #948]	; cda4 <main@@Base+0x61d4>
    c9ec:	add	r3, pc, r3
    c9f0:	ldr	r2, [r3, r2]
    c9f4:	ldr	r1, [pc, #940]	; cda8 <main@@Base+0x61d8>
    c9f8:	sub	sp, sp, #116	; 0x74
    c9fc:	ldr	ip, [r2]
    ca00:	add	r1, pc, r1
    ca04:	add	r1, r1, #8
    ca08:	str	r2, [sp, #20]
    ca0c:	add	r0, sp, #36	; 0x24
    ca10:	mov	r2, #72	; 0x48
    ca14:	str	ip, [sp, #108]	; 0x6c
    ca18:	str	r0, [sp, #24]
    ca1c:	bl	66f8 <memcpy@plt>
    ca20:	bl	69e0 <av_log_get_flags@plt>
    ca24:	mov	r7, r0
    ca28:	bl	67f4 <av_log_get_level@plt>
    ca2c:	cmp	r4, #0
    ca30:	str	r0, [sp, #16]
    ca34:	beq	cd68 <main@@Base+0x6198>
    ca38:	ldrb	r5, [r4]
    ca3c:	cmp	r5, #0
    ca40:	beq	cb1c <main@@Base+0x5f4c>
    ca44:	ldr	r3, [pc, #864]	; cdac <main@@Base+0x61dc>
    ca48:	ldr	r8, [pc, #864]	; cdb0 <main@@Base+0x61e0>
    ca4c:	add	r3, pc, r3
    ca50:	str	r3, [sp, #28]
    ca54:	ldr	r3, [pc, #856]	; cdb4 <main@@Base+0x61e4>
    ca58:	ldr	fp, [pc, #856]	; cdb8 <main@@Base+0x61e8>
    ca5c:	ldr	r9, [pc, #856]	; cdbc <main@@Base+0x61ec>
    ca60:	add	r3, pc, r3
    ca64:	mov	r6, #0
    ca68:	add	r8, pc, r8
    ca6c:	add	fp, pc, fp
    ca70:	add	r9, pc, r9
    ca74:	str	r3, [sp, #12]
    ca78:	b	cabc <main@@Base+0x5eec>
    ca7c:	add	sl, r4, #1
    ca80:	mov	r0, sl
    ca84:	mov	r2, #6
    ca88:	mov	r1, r9
    ca8c:	bl	6554 <strncmp@plt>
    ca90:	cmp	r0, #0
    ca94:	bne	cb78 <main@@Base+0x5fa8>
    ca98:	cmp	r5, #45	; 0x2d
    ca9c:	bne	cb68 <main@@Base+0x5f98>
    caa0:	mov	r4, sl
    caa4:	orr	r7, r7, #1
    caa8:	add	r4, r4, #6
    caac:	ldrb	r5, [r4]
    cab0:	add	r6, r6, #1
    cab4:	cmp	r5, #0
    cab8:	beq	cb1c <main@@Base+0x5f4c>
    cabc:	sub	r3, r5, #43	; 0x2b
    cac0:	tst	r3, #253	; 0xfd
    cac4:	beq	ca7c <main@@Base+0x5eac>
    cac8:	mov	r2, #6
    cacc:	mov	r1, r8
    cad0:	mov	r0, r4
    cad4:	bl	6554 <strncmp@plt>
    cad8:	cmp	r6, #0
    cadc:	mov	r3, r0
    cae0:	bne	cb4c <main@@Base+0x5f7c>
    cae4:	cmp	r0, #0
    cae8:	beq	cb70 <main@@Base+0x5fa0>
    caec:	mov	r2, #5
    caf0:	mov	r1, fp
    caf4:	mov	r0, r4
    caf8:	bl	6554 <strncmp@plt>
    cafc:	subs	r7, r0, #0
    cb00:	bne	cd24 <main@@Base+0x6154>
    cb04:	orr	r7, r7, #2
    cb08:	add	r4, r4, #5
    cb0c:	ldrb	r5, [r4]
    cb10:	add	r6, r6, #1
    cb14:	cmp	r5, #0
    cb18:	bne	cabc <main@@Base+0x5eec>
    cb1c:	mov	r0, r7
    cb20:	bl	6494 <av_log_set_flags@plt>
    cb24:	ldr	r0, [sp, #16]
    cb28:	bl	5de0 <av_log_set_level@plt>
    cb2c:	ldr	r3, [sp, #20]
    cb30:	ldr	r2, [sp, #108]	; 0x6c
    cb34:	ldr	r3, [r3]
    cb38:	mov	r0, #0
    cb3c:	cmp	r2, r3
    cb40:	bne	cd9c <main@@Base+0x61cc>
    cb44:	add	sp, sp, #116	; 0x74
    cb48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cb4c:	mov	r2, #6
    cb50:	mov	r1, r8
    cb54:	mov	r0, r4
    cb58:	bl	6554 <strncmp@plt>
    cb5c:	cmp	r0, #0
    cb60:	bne	cba8 <main@@Base+0x5fd8>
    cb64:	mov	sl, r4
    cb68:	mov	r4, sl
    cb6c:	bic	r3, r7, #1
    cb70:	mov	r7, r3
    cb74:	b	caa8 <main@@Base+0x5ed8>
    cb78:	mov	r2, #5
    cb7c:	ldr	r1, [sp, #12]
    cb80:	mov	r0, sl
    cb84:	bl	6554 <strncmp@plt>
    cb88:	cmp	r0, #0
    cb8c:	bne	cbc0 <main@@Base+0x5ff0>
    cb90:	cmp	r5, #45	; 0x2d
    cb94:	biceq	r7, r7, #2
    cb98:	moveq	r4, sl
    cb9c:	beq	cb08 <main@@Base+0x5f38>
    cba0:	mov	r4, sl
    cba4:	b	cb04 <main@@Base+0x5f34>
    cba8:	mov	r2, #5
    cbac:	ldr	r1, [sp, #28]
    cbb0:	mov	r0, r4
    cbb4:	bl	6554 <strncmp@plt>
    cbb8:	cmp	r0, #0
    cbbc:	beq	cb04 <main@@Base+0x5f34>
    cbc0:	cmp	r5, #43	; 0x2b
    cbc4:	beq	cd04 <main@@Base+0x6134>
    cbc8:	cmp	r6, #0
    cbcc:	beq	cd2c <main@@Base+0x615c>
    cbd0:	mov	r1, r4
    cbd4:	ldr	r0, [sp, #36]	; 0x24
    cbd8:	bl	695c <strcmp@plt>
    cbdc:	cmp	r0, #0
    cbe0:	beq	cd10 <main@@Base+0x6140>
    cbe4:	mov	r1, r4
    cbe8:	ldr	r0, [sp, #44]	; 0x2c
    cbec:	bl	695c <strcmp@plt>
    cbf0:	cmp	r0, #0
    cbf4:	beq	cd38 <main@@Base+0x6168>
    cbf8:	mov	r1, r4
    cbfc:	ldr	r0, [sp, #52]	; 0x34
    cc00:	bl	695c <strcmp@plt>
    cc04:	cmp	r0, #0
    cc08:	beq	cd40 <main@@Base+0x6170>
    cc0c:	mov	r1, r4
    cc10:	ldr	r0, [sp, #60]	; 0x3c
    cc14:	bl	695c <strcmp@plt>
    cc18:	cmp	r0, #0
    cc1c:	beq	cd48 <main@@Base+0x6178>
    cc20:	mov	r1, r4
    cc24:	ldr	r0, [sp, #68]	; 0x44
    cc28:	bl	695c <strcmp@plt>
    cc2c:	cmp	r0, #0
    cc30:	beq	cd50 <main@@Base+0x6180>
    cc34:	mov	r1, r4
    cc38:	ldr	r0, [sp, #76]	; 0x4c
    cc3c:	bl	695c <strcmp@plt>
    cc40:	cmp	r0, #0
    cc44:	beq	cd58 <main@@Base+0x6188>
    cc48:	mov	r1, r4
    cc4c:	ldr	r0, [sp, #84]	; 0x54
    cc50:	bl	695c <strcmp@plt>
    cc54:	cmp	r0, #0
    cc58:	beq	cd60 <main@@Base+0x6190>
    cc5c:	mov	r1, r4
    cc60:	ldr	r0, [sp, #92]	; 0x5c
    cc64:	bl	695c <strcmp@plt>
    cc68:	cmp	r0, #0
    cc6c:	beq	cd0c <main@@Base+0x613c>
    cc70:	mov	r1, r4
    cc74:	ldr	r0, [sp, #100]	; 0x64
    cc78:	bl	695c <strcmp@plt>
    cc7c:	cmp	r0, #0
    cc80:	moveq	r0, #8
    cc84:	beq	cd10 <main@@Base+0x6140>
    cc88:	mov	r2, #10
    cc8c:	add	r1, sp, #32
    cc90:	mov	r0, r4
    cc94:	bl	6aac <strtol@plt>
    cc98:	ldr	r3, [sp, #32]
    cc9c:	str	r0, [sp, #16]
    cca0:	ldrb	r3, [r3]
    cca4:	cmp	r3, #0
    cca8:	beq	cb1c <main@@Base+0x5f4c>
    ccac:	ldr	r2, [pc, #268]	; cdc0 <main@@Base+0x61f0>
    ccb0:	mov	r3, r4
    ccb4:	add	r2, pc, r2
    ccb8:	mov	r1, #8
    ccbc:	mov	r0, #0
    ccc0:	bl	6188 <av_log@plt>
    ccc4:	mov	r4, #1
    ccc8:	ldr	r5, [pc, #244]	; cdc4 <main@@Base+0x61f4>
    cccc:	add	r5, pc, r5
    ccd0:	ldr	r3, [sp, #24]
    ccd4:	mov	r2, r5
    ccd8:	add	r3, r3, r4, lsl #3
    ccdc:	ldr	r3, [r3, #-8]
    cce0:	add	r4, r4, #1
    cce4:	mov	r1, #8
    cce8:	mov	r0, #0
    ccec:	bl	6188 <av_log@plt>
    ccf0:	cmp	r4, #10
    ccf4:	bne	ccd0 <main@@Base+0x6100>
    ccf8:	mov	r0, #1
    ccfc:	bl	a954 <main@@Base+0x3d84>
    cd00:	mov	r7, r6
    cd04:	add	r4, r4, #1
    cd08:	b	cbd0 <main@@Base+0x6000>
    cd0c:	mov	r0, #7
    cd10:	add	r3, sp, #112	; 0x70
    cd14:	add	r0, r3, r0, lsl #3
    cd18:	ldr	r3, [r0, #-72]	; 0xffffffb8
    cd1c:	str	r3, [sp, #16]
    cd20:	b	cb1c <main@@Base+0x5f4c>
    cd24:	cmp	r5, #43	; 0x2b
    cd28:	beq	cd00 <main@@Base+0x6130>
    cd2c:	bl	69e0 <av_log_get_flags@plt>
    cd30:	mov	r7, r0
    cd34:	b	cbd0 <main@@Base+0x6000>
    cd38:	mov	r0, #1
    cd3c:	b	cd10 <main@@Base+0x6140>
    cd40:	mov	r0, #2
    cd44:	b	cd10 <main@@Base+0x6140>
    cd48:	mov	r0, #3
    cd4c:	b	cd10 <main@@Base+0x6140>
    cd50:	mov	r0, #4
    cd54:	b	cd10 <main@@Base+0x6140>
    cd58:	mov	r0, #5
    cd5c:	b	cd10 <main@@Base+0x6140>
    cd60:	mov	r0, #6
    cd64:	b	cd10 <main@@Base+0x6140>
    cd68:	ldr	r3, [pc, #88]	; cdc8 <main@@Base+0x61f8>
    cd6c:	ldr	r2, [pc, #88]	; cdcc <main@@Base+0x61fc>
    cd70:	add	r3, pc, r3
    cd74:	str	r2, [sp, #4]
    cd78:	str	r3, [sp]
    cd7c:	ldr	r2, [pc, #76]	; cdd0 <main@@Base+0x6200>
    cd80:	ldr	r3, [pc, #76]	; cdd4 <main@@Base+0x6204>
    cd84:	add	r2, pc, r2
    cd88:	add	r3, pc, r3
    cd8c:	mov	r1, r4
    cd90:	mov	r0, r4
    cd94:	bl	6188 <av_log@plt>
    cd98:	bl	63bc <abort@plt>
    cd9c:	bl	5e7c <__stack_chk_fail@plt>
    cda0:	andeq	ip, r2, r8, lsr #1
    cda4:	andeq	r0, r0, r8, asr r5
    cda8:	andeq	ip, r2, r0, lsl #12
    cdac:	andeq	r9, r1, ip, lsr #9
    cdb0:			; <UNDEFINED> instruction: 0x00016bb0
    cdb4:	muleq	r1, r8, r4
    cdb8:	andeq	r9, r1, ip, lsl #9
    cdbc:	andeq	r6, r1, r8, lsr #23
    cdc0:	andeq	r6, r1, ip, ror #18
    cdc4:	andeq	r6, r1, ip, lsl #19
    cdc8:	andeq	r6, r1, r8, ror r2
    cdcc:	andeq	r0, r0, sl, ror r3
    cdd0:	andeq	r6, r1, r4, asr #4
    cdd4:	andeq	r6, r1, ip, lsl #17
    cdd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cddc:	mov	fp, r2
    cde0:	ldr	lr, [pc, #1204]	; d29c <main@@Base+0x66cc>
    cde4:	sub	sp, sp, #44	; 0x2c
    cde8:	add	lr, pc, lr
    cdec:	ldr	ip, [pc, #1196]	; d2a0 <main@@Base+0x66d0>
    cdf0:	str	lr, [sp, #16]
    cdf4:	ldr	ip, [lr, ip]
    cdf8:	ldr	r3, [pc, #1188]	; d2a4 <main@@Base+0x66d4>
    cdfc:	str	ip, [sp, #12]
    ce00:	ldr	ip, [ip]
    ce04:	add	r3, pc, r3
    ce08:	mov	r6, r0
    ce0c:	str	r1, [sp, #8]
    ce10:	str	ip, [sp, #36]	; 0x24
    ce14:	bl	c068 <main@@Base+0x5498>
    ce18:	ldr	r3, [fp]
    ce1c:	cmp	r3, #0
    ce20:	beq	ce48 <main@@Base+0x6278>
    ce24:	mov	r3, fp
    ce28:	ldr	r2, [r3, #4]
    ce2c:	tst	r2, #8192	; 0x2000
    ce30:	beq	ce3c <main@@Base+0x626c>
    ce34:	ands	r2, r2, #786432	; 0xc0000
    ce38:	beq	d264 <main@@Base+0x6694>
    ce3c:	ldr	r2, [r3, #20]!
    ce40:	cmp	r2, #0
    ce44:	bne	ce28 <main@@Base+0x6258>
    ce48:	cmp	r0, #0
    ce4c:	beq	d240 <main@@Base+0x6670>
    ce50:	ldr	r3, [sp, #8]
    ce54:	add	r0, r0, #1
    ce58:	ldr	r2, [r3, r0, lsl #2]
    ce5c:	cmp	r2, #0
    ce60:	beq	ce74 <main@@Base+0x62a4>
    ce64:	ldr	r1, [pc, #1084]	; d2a8 <main@@Base+0x66d8>
    ce68:	mov	r0, #0
    ce6c:	add	r1, pc, r1
    ce70:	bl	c9dc <main@@Base+0x5e0c>
    ce74:	ldr	r3, [pc, #1072]	; d2ac <main@@Base+0x66dc>
    ce78:	mov	r2, fp
    ce7c:	add	r3, pc, r3
    ce80:	ldr	r1, [sp, #8]
    ce84:	mov	r0, r6
    ce88:	bl	c068 <main@@Base+0x5498>
    ce8c:	mov	r4, r0
    ce90:	ldr	r0, [pc, #1048]	; d2b0 <main@@Base+0x66e0>
    ce94:	add	r0, pc, r0
    ce98:	bl	69c8 <getenv@plt>
    ce9c:	orrs	r3, r0, r4
    cea0:	beq	d1a0 <main@@Base+0x65d0>
    cea4:	bl	a9a4 <main@@Base+0x3dd4>
    cea8:	ldr	r3, [pc, #1028]	; d2b4 <main@@Base+0x66e4>
    ceac:	ldr	r0, [pc, r3]
    ceb0:	cmp	r0, #0
    ceb4:	beq	d1a0 <main@@Base+0x65d0>
    ceb8:	ldr	r2, [pc, #1016]	; d2b8 <main@@Base+0x66e8>
    cebc:	mov	r1, #1
    cec0:	add	r2, pc, r2
    cec4:	bl	6374 <__fprintf_chk@plt>
    cec8:	cmp	r6, #0
    cecc:	ble	d194 <main@@Base+0x65c4>
    ced0:	sub	sl, r6, #1
    ced4:	cmp	sl, #0
    ced8:	movle	r4, #0
    cedc:	ble	d04c <main@@Base+0x647c>
    cee0:	ldr	r3, [pc, #980]	; d2bc <main@@Base+0x66ec>
    cee4:	cmp	r6, sl
    cee8:	add	r3, pc, r3
    ceec:	str	r3, [sp, #20]
    cef0:	ldr	r3, [pc, #968]	; d2c0 <main@@Base+0x66f0>
    cef4:	str	fp, [sp, #28]
    cef8:	add	r3, pc, r3
    cefc:	movlt	sl, r6
    cf00:	mov	r4, #0
    cf04:	mov	fp, r3
    cf08:	ldr	r8, [pc, #948]	; d2c4 <main@@Base+0x66f4>
    cf0c:	ldr	r9, [pc, #948]	; d2c8 <main@@Base+0x66f8>
    cf10:	ldr	r2, [sp, #8]
    cf14:	add	r8, pc, r8
    cf18:	add	r9, pc, r9
    cf1c:	sub	r7, r2, #4
    cf20:	str	r6, [sp, #24]
    cf24:	ldr	r5, [r7, #4]!
    cf28:	ldrb	r3, [r5]
    cf2c:	cmp	r3, #0
    cf30:	beq	d22c <main@@Base+0x665c>
    cf34:	mov	r1, r5
    cf38:	b	cf48 <main@@Base+0x6378>
    cf3c:	ldrb	r3, [r1, #1]!
    cf40:	cmp	r3, #0
    cf44:	beq	d22c <main@@Base+0x665c>
    cf48:	sub	r2, r3, #43	; 0x2b
    cf4c:	sub	r0, r3, #64	; 0x40
    cf50:	cmp	r2, #15
    cf54:	cmphi	r0, #26
    cf58:	movhi	r2, #1
    cf5c:	movls	r2, #0
    cf60:	cmp	r3, #95	; 0x5f
    cf64:	moveq	r2, #0
    cf68:	andne	r2, r2, #1
    cf6c:	cmp	r2, #0
    cf70:	beq	cf3c <main@@Base+0x636c>
    cf74:	sub	r3, r3, #97	; 0x61
    cf78:	cmp	r3, #25
    cf7c:	bls	cf3c <main@@Base+0x636c>
    cf80:	ldr	r1, [fp]
    cf84:	mov	r0, #34	; 0x22
    cf88:	bl	659c <fputc@plt>
    cf8c:	ldrb	r3, [r5]
    cf90:	cmp	r3, #0
    cf94:	beq	d008 <main@@Base+0x6438>
    cf98:	ldr	r6, [pc, #812]	; d2cc <main@@Base+0x66fc>
    cf9c:	add	r6, pc, r6
    cfa0:	b	cfbc <main@@Base+0x63ec>
    cfa4:	mov	r2, r9
    cfa8:	mov	r1, #1
    cfac:	bl	6374 <__fprintf_chk@plt>
    cfb0:	ldrb	r3, [r5, #1]!
    cfb4:	cmp	r3, #0
    cfb8:	beq	d008 <main@@Base+0x6438>
    cfbc:	sub	r2, r3, #34	; 0x22
    cfc0:	tst	r2, #253	; 0xfd
    cfc4:	sub	r1, r3, #92	; 0x5c
    cfc8:	moveq	r2, #1
    cfcc:	movne	r2, #0
    cfd0:	tst	r1, #251	; 0xfb
    cfd4:	moveq	r2, #1
    cfd8:	cmp	r2, #0
    cfdc:	ldr	r0, [r6]
    cfe0:	bne	cfa4 <main@@Base+0x63d4>
    cfe4:	sub	r2, r3, #32
    cfe8:	cmp	r2, #94	; 0x5e
    cfec:	bls	d1f4 <main@@Base+0x6624>
    cff0:	mov	r2, r8
    cff4:	mov	r1, #1
    cff8:	bl	6374 <__fprintf_chk@plt>
    cffc:	ldrb	r3, [r5, #1]!
    d000:	cmp	r3, #0
    d004:	bne	cfbc <main@@Base+0x63ec>
    d008:	ldr	r3, [pc, #704]	; d2d0 <main@@Base+0x6700>
    d00c:	mov	r0, #34	; 0x22
    d010:	add	r3, pc, r3
    d014:	ldr	r1, [r3]
    d018:	bl	659c <fputc@plt>
    d01c:	ldr	r3, [pc, #688]	; d2d4 <main@@Base+0x6704>
    d020:	add	r4, r4, #1
    d024:	add	r3, pc, r3
    d028:	ldr	r1, [r3]
    d02c:	mov	r0, #32
    d030:	bl	659c <fputc@plt>
    d034:	cmp	r4, sl
    d038:	blt	cf24 <main@@Base+0x6354>
    d03c:	ldr	r6, [sp, #24]
    d040:	ldr	fp, [sp, #28]
    d044:	cmp	r6, r4
    d048:	ble	d194 <main@@Base+0x65c4>
    d04c:	ldr	r3, [pc, #644]	; d2d8 <main@@Base+0x6708>
    d050:	str	fp, [sp, #20]
    d054:	add	r3, pc, r3
    d058:	mov	fp, r3
    d05c:	ldr	r9, [pc, #632]	; d2dc <main@@Base+0x670c>
    d060:	ldr	sl, [pc, #632]	; d2e0 <main@@Base+0x6710>
    d064:	ldr	r8, [pc, #632]	; d2e4 <main@@Base+0x6714>
    d068:	ldr	r2, [sp, #8]
    d06c:	sub	r7, r4, #-1073741823	; 0xc0000001
    d070:	add	r9, pc, r9
    d074:	add	sl, pc, sl
    d078:	add	r8, pc, r8
    d07c:	add	r7, r2, r7, lsl #2
    d080:	ldr	r5, [r7, #4]!
    d084:	ldrb	r3, [r5]
    d088:	cmp	r3, #0
    d08c:	movne	r1, r5
    d090:	bne	d0a4 <main@@Base+0x64d4>
    d094:	b	d214 <main@@Base+0x6644>
    d098:	ldrb	r3, [r1, #1]!
    d09c:	cmp	r3, #0
    d0a0:	beq	d214 <main@@Base+0x6644>
    d0a4:	sub	r2, r3, #64	; 0x40
    d0a8:	sub	r0, r3, #43	; 0x2b
    d0ac:	cmp	r2, #26
    d0b0:	cmphi	r0, #15
    d0b4:	movhi	r2, #1
    d0b8:	movls	r2, #0
    d0bc:	cmp	r3, #95	; 0x5f
    d0c0:	moveq	r2, #0
    d0c4:	andne	r2, r2, #1
    d0c8:	cmp	r2, #0
    d0cc:	beq	d098 <main@@Base+0x64c8>
    d0d0:	sub	r3, r3, #97	; 0x61
    d0d4:	cmp	r3, #25
    d0d8:	bls	d098 <main@@Base+0x64c8>
    d0dc:	ldr	r1, [fp]
    d0e0:	mov	r0, #34	; 0x22
    d0e4:	bl	659c <fputc@plt>
    d0e8:	ldrb	r3, [r5]
    d0ec:	cmp	r3, #0
    d0f0:	bne	d110 <main@@Base+0x6540>
    d0f4:	b	d15c <main@@Base+0x658c>
    d0f8:	mov	r2, r8
    d0fc:	mov	r1, #1
    d100:	bl	6374 <__fprintf_chk@plt>
    d104:	ldrb	r3, [r5, #1]!
    d108:	cmp	r3, #0
    d10c:	beq	d15c <main@@Base+0x658c>
    d110:	sub	r2, r3, #34	; 0x22
    d114:	tst	r2, #253	; 0xfd
    d118:	sub	r1, r3, #92	; 0x5c
    d11c:	moveq	r2, #1
    d120:	movne	r2, #0
    d124:	tst	r1, #251	; 0xfb
    d128:	moveq	r2, #1
    d12c:	cmp	r2, #0
    d130:	ldr	r0, [r9]
    d134:	bne	d0f8 <main@@Base+0x6528>
    d138:	sub	r2, r3, #32
    d13c:	cmp	r2, #94	; 0x5e
    d140:	bls	d204 <main@@Base+0x6634>
    d144:	mov	r2, sl
    d148:	mov	r1, #1
    d14c:	bl	6374 <__fprintf_chk@plt>
    d150:	ldrb	r3, [r5, #1]!
    d154:	cmp	r3, #0
    d158:	bne	d110 <main@@Base+0x6540>
    d15c:	ldr	r3, [pc, #388]	; d2e8 <main@@Base+0x6718>
    d160:	mov	r0, #34	; 0x22
    d164:	add	r3, pc, r3
    d168:	ldr	r1, [r3]
    d16c:	bl	659c <fputc@plt>
    d170:	ldr	r3, [pc, #372]	; d2ec <main@@Base+0x671c>
    d174:	add	r4, r4, #1
    d178:	add	r3, pc, r3
    d17c:	ldr	r1, [r3]
    d180:	mov	r0, #10
    d184:	bl	659c <fputc@plt>
    d188:	cmp	r6, r4
    d18c:	bgt	d080 <main@@Base+0x64b0>
    d190:	ldr	fp, [sp, #20]
    d194:	ldr	r3, [pc, #340]	; d2f0 <main@@Base+0x6720>
    d198:	ldr	r0, [pc, r3]
    d19c:	bl	6278 <fflush@plt>
    d1a0:	ldr	r3, [pc, #332]	; d2f4 <main@@Base+0x6724>
    d1a4:	mov	r2, fp
    d1a8:	ldr	r1, [sp, #8]
    d1ac:	mov	r0, r6
    d1b0:	add	r3, pc, r3
    d1b4:	bl	c068 <main@@Base+0x5498>
    d1b8:	cmp	r0, #0
    d1bc:	bne	d1dc <main@@Base+0x660c>
    d1c0:	ldr	r3, [sp, #12]
    d1c4:	ldr	r2, [sp, #36]	; 0x24
    d1c8:	ldr	r3, [r3]
    d1cc:	cmp	r2, r3
    d1d0:	bne	d298 <main@@Base+0x66c8>
    d1d4:	add	sp, sp, #44	; 0x2c
    d1d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d1dc:	mov	r2, #1
    d1e0:	ldr	r3, [pc, #272]	; d2f8 <main@@Base+0x6728>
    d1e4:	ldr	r1, [sp, #16]
    d1e8:	ldr	r3, [r1, r3]
    d1ec:	str	r2, [r3]
    d1f0:	b	d1c0 <main@@Base+0x65f0>
    d1f4:	mov	r1, r0
    d1f8:	mov	r0, r3
    d1fc:	bl	659c <fputc@plt>
    d200:	b	cfb0 <main@@Base+0x63e0>
    d204:	mov	r1, r0
    d208:	mov	r0, r3
    d20c:	bl	659c <fputc@plt>
    d210:	b	d104 <main@@Base+0x6534>
    d214:	ldr	r3, [pc, #224]	; d2fc <main@@Base+0x672c>
    d218:	mov	r0, r5
    d21c:	add	r3, pc, r3
    d220:	ldr	r1, [r3]
    d224:	bl	5cb4 <fputs@plt>
    d228:	b	d170 <main@@Base+0x65a0>
    d22c:	ldr	r3, [sp, #20]
    d230:	mov	r0, r5
    d234:	ldr	r1, [r3]
    d238:	bl	5cb4 <fputs@plt>
    d23c:	b	d01c <main@@Base+0x644c>
    d240:	ldr	r3, [pc, #184]	; d300 <main@@Base+0x6730>
    d244:	mov	r2, fp
    d248:	add	r3, pc, r3
    d24c:	ldr	r1, [sp, #8]
    d250:	mov	r0, r6
    d254:	bl	c068 <main@@Base+0x5498>
    d258:	cmp	r0, #0
    d25c:	beq	ce74 <main@@Base+0x62a4>
    d260:	b	ce50 <main@@Base+0x6280>
    d264:	mov	r1, r2
    d268:	ldr	r3, [pc, #148]	; d304 <main@@Base+0x6734>
    d26c:	ldr	r2, [pc, #148]	; d308 <main@@Base+0x6738>
    d270:	add	r3, pc, r3
    d274:	str	r2, [sp, #4]
    d278:	str	r3, [sp]
    d27c:	ldr	r2, [pc, #136]	; d30c <main@@Base+0x673c>
    d280:	ldr	r3, [pc, #136]	; d310 <main@@Base+0x6740>
    d284:	add	r2, pc, r2
    d288:	add	r3, pc, r3
    d28c:	mov	r0, r1
    d290:	bl	6188 <av_log@plt>
    d294:	bl	63bc <abort@plt>
    d298:	bl	5e7c <__stack_chk_fail@plt>
    d29c:	andeq	fp, r2, ip, lsr #25
    d2a0:	andeq	r0, r0, r8, asr r5
    d2a4:	andeq	r6, r1, ip, asr r8
    d2a8:	strdeq	r6, [r1], -r4
    d2ac:	andeq	r6, r1, r4, lsl r8
    d2b0:	andeq	r6, r1, r4, lsl #16
    d2b4:	andeq	ip, r2, r0, lsl #4
    d2b8:	andeq	r6, r1, r4, ror #15
    d2bc:	andeq	ip, r2, r4, asr #3
    d2c0:			; <UNDEFINED> instruction: 0x0002c1b4
    d2c4:	andeq	r6, r1, r4, lsr #15
    d2c8:	muleq	r1, ip, r7
    d2cc:	andeq	ip, r2, r0, lsl r1
    d2d0:	muleq	r2, ip, r0
    d2d4:	andeq	ip, r2, r8, lsl #1
    d2d8:	andeq	ip, r2, r8, asr r0
    d2dc:	andeq	ip, r2, ip, lsr r0
    d2e0:	andeq	r6, r1, r4, asr #12
    d2e4:	andeq	r6, r1, ip, lsr r6
    d2e8:	andeq	fp, r2, r8, asr #30
    d2ec:	andeq	fp, r2, r4, lsr pc
    d2f0:	andeq	fp, r2, r4, lsl pc
    d2f4:	andeq	r6, r1, r0, lsl r5
    d2f8:	andeq	r0, r0, ip, lsl r5
    d2fc:	muleq	r2, r0, lr
    d300:	andeq	r6, r1, r4, asr #8
    d304:	andeq	r5, r1, r8, ror sp
    d308:	strdeq	r0, [r0], -r5
    d30c:	andeq	r5, r1, r4, asr #26
    d310:	andeq	r6, r1, r4, ror #7
    d314:	push	{lr}		; (str lr, [sp, #-4]!)
    d318:	ldr	r3, [pc, #56]	; d358 <main@@Base+0x6788>
    d31c:	ldr	r2, [pc, #56]	; d35c <main@@Base+0x678c>
    d320:	add	r3, pc, r3
    d324:	ldr	r3, [r3, r2]
    d328:	sub	sp, sp, #12
    d32c:	ldr	r2, [r3]
    d330:	str	r2, [sp, #4]
    d334:	ldr	r2, [sp, #4]
    d338:	ldr	r3, [r3]
    d33c:	cmp	r2, r3
    d340:	bne	d354 <main@@Base+0x6784>
    d344:	mov	r0, #0
    d348:	add	sp, sp, #12
    d34c:	pop	{lr}		; (ldr lr, [sp], #4)
    d350:	b	a9a4 <main@@Base+0x3dd4>
    d354:	bl	5e7c <__stack_chk_fail@plt>
    d358:	andeq	fp, r2, r4, ror r7
    d35c:	andeq	r0, r0, r8, asr r5
    d360:	push	{r4, r5, r6, lr}
    d364:	mov	r6, r2
    d368:	ldr	r2, [pc, #120]	; d3e8 <main@@Base+0x6818>
    d36c:	ldr	r1, [pc, #120]	; d3ec <main@@Base+0x681c>
    d370:	add	r2, pc, r2
    d374:	ldr	r4, [r2, r1]
    d378:	sub	sp, sp, #8
    d37c:	ldr	r3, [r4]
    d380:	mov	r0, r6
    d384:	mov	r1, sp
    d388:	mov	r2, #10
    d38c:	str	r3, [sp, #4]
    d390:	bl	6aac <strtol@plt>
    d394:	ldr	r3, [sp]
    d398:	ldrb	r5, [r3]
    d39c:	cmp	r5, #0
    d3a0:	bne	d3c4 <main@@Base+0x67f4>
    d3a4:	bl	68a8 <av_max_alloc@plt>
    d3a8:	ldr	r2, [sp, #4]
    d3ac:	ldr	r3, [r4]
    d3b0:	mov	r0, r5
    d3b4:	cmp	r2, r3
    d3b8:	bne	d3e4 <main@@Base+0x6814>
    d3bc:	add	sp, sp, #8
    d3c0:	pop	{r4, r5, r6, pc}
    d3c4:	ldr	r2, [pc, #36]	; d3f0 <main@@Base+0x6820>
    d3c8:	mov	r0, #0
    d3cc:	mov	r3, r6
    d3d0:	add	r2, pc, r2
    d3d4:	mov	r1, #8
    d3d8:	bl	6188 <av_log@plt>
    d3dc:	mov	r0, #1
    d3e0:	bl	a954 <main@@Base+0x3d84>
    d3e4:	bl	5e7c <__stack_chk_fail@plt>
    d3e8:	andeq	fp, r2, r4, lsr #14
    d3ec:	andeq	r0, r0, r8, asr r5
    d3f0:	strdeq	r6, [r1], -ip
    d3f4:	push	{r4, r5, r6, lr}
    d3f8:	ldr	r3, [pc, #160]	; d4a0 <main@@Base+0x68d0>
    d3fc:	ldr	ip, [pc, #160]	; d4a4 <main@@Base+0x68d4>
    d400:	add	r3, pc, r3
    d404:	ldr	r6, [r3, ip]
    d408:	sub	sp, sp, #24
    d40c:	ldr	r3, [r6]
    d410:	mov	r0, r1
    d414:	vldr	d1, [pc, #116]	; d490 <main@@Base+0x68c0>
    d418:	mov	r1, r2
    d41c:	vldr	d0, [pc, #116]	; d498 <main@@Base+0x68c8>
    d420:	mov	r2, #1024	; 0x400
    d424:	str	r3, [sp, #20]
    d428:	bl	b2cc <main@@Base+0x46fc>
    d42c:	vcvt.s32.f64	s15, d0
    d430:	vmov	r2, s15
    d434:	add	r4, r2, #1
    d438:	asr	r3, r2, #31
    d43c:	asr	r5, r4, #31
    d440:	mov	r1, sp
    d444:	mov	r0, #0
    d448:	strd	r4, [sp, #8]
    d44c:	strd	r2, [sp]
    d450:	bl	5ccc <setrlimit64@plt>
    d454:	cmp	r0, #0
    d458:	bne	d478 <main@@Base+0x68a8>
    d45c:	ldr	r2, [sp, #20]
    d460:	ldr	r3, [r6]
    d464:	mov	r0, #0
    d468:	cmp	r2, r3
    d46c:	bne	d488 <main@@Base+0x68b8>
    d470:	add	sp, sp, #24
    d474:	pop	{r4, r5, r6, pc}
    d478:	ldr	r0, [pc, #40]	; d4a8 <main@@Base+0x68d8>
    d47c:	add	r0, pc, r0
    d480:	bl	6944 <perror@plt>
    d484:	b	d45c <main@@Base+0x688c>
    d488:	bl	5e7c <__stack_chk_fail@plt>
    d48c:	nop	{0}
    d490:			; <UNDEFINED> instruction: 0xffc00000
    d494:	ldrshmi	pc, [pc, #255]	; d59b <main@@Base+0x69cb>	; <UNPREDICTABLE>
	...
    d4a0:	muleq	r2, r4, r6
    d4a4:	andeq	r0, r0, r8, asr r5
    d4a8:	andeq	r6, r1, ip, ror #4
    d4ac:	push	{r4, r5, r6, r7, lr}
    d4b0:	ldr	r3, [pc, #128]	; d538 <main@@Base+0x6968>
    d4b4:	ldr	r2, [pc, #128]	; d53c <main@@Base+0x696c>
    d4b8:	add	r3, pc, r3
    d4bc:	ldr	r5, [r3, r2]
    d4c0:	sub	sp, sp, #148	; 0x94
    d4c4:	add	r4, sp, #12
    d4c8:	ldr	r3, [r5]
    d4cc:	mov	r6, r1
    d4d0:	mov	r7, r0
    d4d4:	mov	r2, #128	; 0x80
    d4d8:	mov	r0, r1
    d4dc:	mov	r1, r4
    d4e0:	str	r3, [sp, #140]	; 0x8c
    d4e4:	bl	66b0 <av_strerror@plt>
    d4e8:	cmp	r0, #0
    d4ec:	blt	d524 <main@@Base+0x6954>
    d4f0:	ldr	r2, [pc, #72]	; d540 <main@@Base+0x6970>
    d4f4:	mov	r3, r7
    d4f8:	add	r2, pc, r2
    d4fc:	str	r4, [sp]
    d500:	mov	r1, #16
    d504:	mov	r0, #0
    d508:	bl	6188 <av_log@plt>
    d50c:	ldr	r2, [sp, #140]	; 0x8c
    d510:	ldr	r3, [r5]
    d514:	cmp	r2, r3
    d518:	bne	d534 <main@@Base+0x6964>
    d51c:	add	sp, sp, #148	; 0x94
    d520:	pop	{r4, r5, r6, r7, pc}
    d524:	rsb	r0, r6, #0
    d528:	bl	5f0c <strerror@plt>
    d52c:	mov	r4, r0
    d530:	b	d4f0 <main@@Base+0x6920>
    d534:	bl	5e7c <__stack_chk_fail@plt>
    d538:	ldrdeq	fp, [r2], -ip
    d53c:	andeq	r0, r0, r8, asr r5
    d540:	strdeq	r6, [r1], -ip
    d544:	push	{r4, r5, r6, lr}
    d548:	ldr	r5, [pc, #276]	; d664 <main@@Base+0x6a94>
    d54c:	ldr	ip, [pc, #276]	; d668 <main@@Base+0x6a98>
    d550:	add	r5, pc, r5
    d554:	ldr	r6, [r5, ip]
    d558:	ldr	r3, [pc, #268]	; d66c <main@@Base+0x6a9c>
    d55c:	ldr	ip, [r6]
    d560:	sub	sp, sp, #16
    d564:	add	r3, pc, r3
    d568:	str	ip, [sp, #12]
    d56c:	bl	c068 <main@@Base+0x5498>
    d570:	ldr	r3, [pc, #248]	; d670 <main@@Base+0x6aa0>
    d574:	ldr	r3, [r5, r3]
    d578:	ldr	r4, [r3]
    d57c:	orrs	r4, r0, r4
    d580:	beq	d59c <main@@Base+0x69cc>
    d584:	ldr	r2, [sp, #12]
    d588:	ldr	r3, [r6]
    d58c:	cmp	r2, r3
    d590:	bne	d660 <main@@Base+0x6a90>
    d594:	add	sp, sp, #16
    d598:	pop	{r4, r5, r6, pc}
    d59c:	ldr	r3, [pc, #208]	; d674 <main@@Base+0x6aa4>
    d5a0:	ldr	r2, [pc, #208]	; d678 <main@@Base+0x6aa8>
    d5a4:	ldr	r3, [r5, r3]
    d5a8:	add	r2, pc, r2
    d5ac:	mov	r1, #32
    d5b0:	mov	r0, r4
    d5b4:	bl	6188 <av_log@plt>
    d5b8:	ldr	r3, [pc, #188]	; d67c <main@@Base+0x6aac>
    d5bc:	ldr	r1, [pc, #188]	; d680 <main@@Base+0x6ab0>
    d5c0:	ldr	r3, [r5, r3]
    d5c4:	ldr	r2, [pc, #184]	; d684 <main@@Base+0x6ab4>
    d5c8:	ldr	r3, [r3]
    d5cc:	add	r2, pc, r2
    d5d0:	str	r1, [sp]
    d5d4:	mov	r0, r4
    d5d8:	mov	r1, #32
    d5dc:	bl	6188 <av_log@plt>
    d5e0:	ldr	r2, [pc, #160]	; d688 <main@@Base+0x6ab8>
    d5e4:	mov	r1, #32
    d5e8:	add	r2, pc, r2
    d5ec:	mov	r0, r4
    d5f0:	bl	6188 <av_log@plt>
    d5f4:	ldr	r2, [pc, #144]	; d68c <main@@Base+0x6abc>
    d5f8:	ldr	r5, [pc, #144]	; d690 <main@@Base+0x6ac0>
    d5fc:	add	r2, pc, r2
    d600:	str	r2, [sp]
    d604:	ldr	r2, [pc, #136]	; d694 <main@@Base+0x6ac4>
    d608:	add	r5, pc, r5
    d60c:	mov	r3, r5
    d610:	add	r2, pc, r2
    d614:	mov	r1, #32
    d618:	mov	r0, r4
    d61c:	bl	6188 <av_log@plt>
    d620:	ldr	r2, [pc, #112]	; d698 <main@@Base+0x6ac8>
    d624:	mov	r3, r5
    d628:	add	r2, pc, r2
    d62c:	mov	r0, r4
    d630:	mov	r1, #32
    d634:	bl	6188 <av_log@plt>
    d638:	mov	r0, #5
    d63c:	bl	9afc <main@@Base+0x2f2c>
    d640:	ldr	r2, [sp, #12]
    d644:	ldr	r3, [r6]
    d648:	cmp	r2, r3
    d64c:	bne	d660 <main@@Base+0x6a90>
    d650:	mov	r0, #3
    d654:	add	sp, sp, #16
    d658:	pop	{r4, r5, r6, lr}
    d65c:	b	9afc <main@@Base+0x2f2c>
    d660:	bl	5e7c <__stack_chk_fail@plt>
    d664:	andeq	fp, r2, r4, asr #10
    d668:	andeq	r0, r0, r8, asr r5
    d66c:	muleq	r1, r8, r1
    d670:	andeq	r0, r0, ip, lsl r5
    d674:	andeq	r0, r0, r4, lsr r5
    d678:	andeq	r6, r1, ip, asr r1
    d67c:	andeq	r0, r0, r4, asr r5
    d680:	andeq	r0, r0, r4, ror #15
    d684:	andeq	r6, r1, r8, asr r1
    d688:	ldrdeq	r8, [r1], -r0
    d68c:	andeq	r6, r1, r8, ror #2
    d690:	andeq	r5, r1, r8, ror r2
    d694:	andeq	r6, r1, r0, asr #2
    d698:	andeq	r6, r1, ip, asr r1
    d69c:	push	{r4, r5, r6, lr}
    d6a0:	ldr	r4, [pc, #228]	; d78c <main@@Base+0x6bbc>
    d6a4:	ldr	r2, [pc, #228]	; d790 <main@@Base+0x6bc0>
    d6a8:	add	r4, pc, r4
    d6ac:	ldr	r6, [r4, r2]
    d6b0:	sub	sp, sp, #16
    d6b4:	ldr	r2, [r6]
    d6b8:	ldr	r3, [pc, #212]	; d794 <main@@Base+0x6bc4>
    d6bc:	str	r2, [sp, #12]
    d6c0:	ldr	r0, [r4, r3]
    d6c4:	bl	5f3c <av_log_set_callback@plt>
    d6c8:	ldr	r3, [pc, #200]	; d798 <main@@Base+0x6bc8>
    d6cc:	ldr	r2, [pc, #200]	; d79c <main@@Base+0x6bcc>
    d6d0:	ldr	r3, [r4, r3]
    d6d4:	add	r2, pc, r2
    d6d8:	mov	r1, #32
    d6dc:	mov	r0, #0
    d6e0:	bl	6188 <av_log@plt>
    d6e4:	ldr	r3, [pc, #180]	; d7a0 <main@@Base+0x6bd0>
    d6e8:	ldr	r1, [pc, #180]	; d7a4 <main@@Base+0x6bd4>
    d6ec:	ldr	r3, [r4, r3]
    d6f0:	ldr	r2, [pc, #176]	; d7a8 <main@@Base+0x6bd8>
    d6f4:	ldr	r3, [r3]
    d6f8:	add	r2, pc, r2
    d6fc:	str	r1, [sp]
    d700:	mov	r0, #0
    d704:	mov	r1, #32
    d708:	bl	6188 <av_log@plt>
    d70c:	ldr	r2, [pc, #152]	; d7ac <main@@Base+0x6bdc>
    d710:	mov	r1, #32
    d714:	add	r2, pc, r2
    d718:	mov	r0, #0
    d71c:	bl	6188 <av_log@plt>
    d720:	ldr	r2, [pc, #136]	; d7b0 <main@@Base+0x6be0>
    d724:	ldr	r5, [pc, #136]	; d7b4 <main@@Base+0x6be4>
    d728:	add	r2, pc, r2
    d72c:	str	r2, [sp]
    d730:	ldr	r2, [pc, #128]	; d7b8 <main@@Base+0x6be8>
    d734:	add	r5, pc, r5
    d738:	mov	r3, r5
    d73c:	add	r2, pc, r2
    d740:	mov	r1, #32
    d744:	mov	r0, #0
    d748:	bl	6188 <av_log@plt>
    d74c:	ldr	r2, [pc, #104]	; d7bc <main@@Base+0x6bec>
    d750:	mov	r3, r5
    d754:	add	r2, pc, r2
    d758:	mov	r1, #32
    d75c:	mov	r0, #0
    d760:	bl	6188 <av_log@plt>
    d764:	mov	r0, #2
    d768:	bl	9afc <main@@Base+0x2f2c>
    d76c:	ldr	r2, [sp, #12]
    d770:	ldr	r3, [r6]
    d774:	cmp	r2, r3
    d778:	bne	d788 <main@@Base+0x6bb8>
    d77c:	mov	r0, #0
    d780:	add	sp, sp, #16
    d784:	pop	{r4, r5, r6, pc}
    d788:	bl	5e7c <__stack_chk_fail@plt>
    d78c:	andeq	fp, r2, ip, ror #7
    d790:	andeq	r0, r0, r8, asr r5
    d794:	andeq	r0, r0, r0, lsr r5
    d798:	andeq	r0, r0, r4, lsr r5
    d79c:	andeq	r6, r1, r0, lsr r0
    d7a0:	andeq	r0, r0, r4, asr r5
    d7a4:	andeq	r0, r0, r4, ror #15
    d7a8:	andeq	r6, r1, ip, lsr #32
    d7ac:	andeq	r8, r1, r4, lsr #11
    d7b0:	andeq	r6, r1, ip, lsr r0
    d7b4:	andeq	r7, r1, r0, lsr sp
    d7b8:	andeq	r6, r1, r4, lsl r0
    d7bc:	andeq	r6, r1, r0, lsr r0
    d7c0:	push	{r4, lr}
    d7c4:	ldr	r3, [pc, #68]	; d810 <main@@Base+0x6c40>
    d7c8:	ldr	r1, [pc, #68]	; d814 <main@@Base+0x6c44>
    d7cc:	add	r3, pc, r3
    d7d0:	ldr	r4, [r3, r1]
    d7d4:	sub	sp, sp, #8
    d7d8:	ldr	r1, [r4]
    d7dc:	ldr	r2, [pc, #52]	; d818 <main@@Base+0x6c48>
    d7e0:	str	r1, [sp, #4]
    d7e4:	ldr	r0, [r3, r2]
    d7e8:	bl	5f3c <av_log_set_callback@plt>
    d7ec:	bl	9974 <main@@Base+0x2da4>
    d7f0:	ldr	r2, [sp, #4]
    d7f4:	ldr	r3, [r4]
    d7f8:	cmp	r2, r3
    d7fc:	bne	d80c <main@@Base+0x6c3c>
    d800:	mov	r0, #0
    d804:	add	sp, sp, #8
    d808:	pop	{r4, pc}
    d80c:	bl	5e7c <__stack_chk_fail@plt>
    d810:	andeq	fp, r2, r8, asr #5
    d814:	andeq	r0, r0, r8, asr r5
    d818:	andeq	r0, r0, r0, lsr r5
    d81c:	push	{r4, lr}
    d820:	ldr	r3, [pc, #84]	; d87c <main@@Base+0x6cac>
    d824:	ldr	r1, [pc, #84]	; d880 <main@@Base+0x6cb0>
    d828:	add	r3, pc, r3
    d82c:	ldr	r4, [r3, r1]
    d830:	sub	sp, sp, #16
    d834:	ldr	ip, [r4]
    d838:	ldr	r2, [pc, #68]	; d884 <main@@Base+0x6cb4>
    d83c:	str	ip, [sp, #12]
    d840:	ldr	r1, [pc, #64]	; d888 <main@@Base+0x6cb8>
    d844:	ldr	r3, [r3, r2]
    d848:	add	r1, pc, r1
    d84c:	mov	r2, r3
    d850:	str	r3, [sp]
    d854:	mov	r0, #1
    d858:	bl	6a1c <__printf_chk@plt>
    d85c:	ldr	r2, [sp, #12]
    d860:	ldr	r3, [r4]
    d864:	cmp	r2, r3
    d868:	bne	d878 <main@@Base+0x6ca8>
    d86c:	mov	r0, #0
    d870:	add	sp, sp, #16
    d874:	pop	{r4, pc}
    d878:	bl	5e7c <__stack_chk_fail@plt>
    d87c:	andeq	fp, r2, ip, ror #4
    d880:	andeq	r0, r0, r8, asr r5
    d884:	andeq	r0, r0, r4, lsr r5
    d888:	andeq	r6, r1, r8, asr #8
    d88c:	push	{lr}		; (str lr, [sp, #-4]!)
    d890:	ldr	r3, [pc, #60]	; d8d4 <main@@Base+0x6d04>
    d894:	ldr	r2, [pc, #60]	; d8d8 <main@@Base+0x6d08>
    d898:	add	r3, pc, r3
    d89c:	ldr	r3, [r3, r2]
    d8a0:	sub	sp, sp, #12
    d8a4:	ldr	r2, [r3]
    d8a8:	str	r2, [sp, #4]
    d8ac:	ldr	r2, [sp, #4]
    d8b0:	ldr	r3, [r3]
    d8b4:	cmp	r2, r3
    d8b8:	bne	d8d0 <main@@Base+0x6d00>
    d8bc:	mov	r1, #0
    d8c0:	mov	r0, r1
    d8c4:	add	sp, sp, #12
    d8c8:	pop	{lr}		; (ldr lr, [sp], #4)
    d8cc:	b	95ac <main@@Base+0x29dc>
    d8d0:	bl	5e7c <__stack_chk_fail@plt>
    d8d4:	strdeq	fp, [r2], -ip
    d8d8:	andeq	r0, r0, r8, asr r5
    d8dc:	push	{lr}		; (str lr, [sp, #-4]!)
    d8e0:	ldr	r3, [pc, #60]	; d924 <main@@Base+0x6d54>
    d8e4:	ldr	r2, [pc, #60]	; d928 <main@@Base+0x6d58>
    d8e8:	add	r3, pc, r3
    d8ec:	ldr	r3, [r3, r2]
    d8f0:	sub	sp, sp, #12
    d8f4:	ldr	r2, [r3]
    d8f8:	str	r2, [sp, #4]
    d8fc:	ldr	r2, [sp, #4]
    d900:	ldr	r3, [r3]
    d904:	cmp	r2, r3
    d908:	bne	d920 <main@@Base+0x6d50>
    d90c:	mov	r1, #2
    d910:	mov	r0, #0
    d914:	add	sp, sp, #12
    d918:	pop	{lr}		; (ldr lr, [sp], #4)
    d91c:	b	95ac <main@@Base+0x29dc>
    d920:	bl	5e7c <__stack_chk_fail@plt>
    d924:	andeq	fp, r2, ip, lsr #3
    d928:	andeq	r0, r0, r8, asr r5
    d92c:	push	{lr}		; (str lr, [sp, #-4]!)
    d930:	ldr	r3, [pc, #60]	; d974 <main@@Base+0x6da4>
    d934:	ldr	r2, [pc, #60]	; d978 <main@@Base+0x6da8>
    d938:	add	r3, pc, r3
    d93c:	ldr	r3, [r3, r2]
    d940:	sub	sp, sp, #12
    d944:	ldr	r2, [r3]
    d948:	str	r2, [sp, #4]
    d94c:	ldr	r2, [sp, #4]
    d950:	ldr	r3, [r3]
    d954:	cmp	r2, r3
    d958:	bne	d970 <main@@Base+0x6da0>
    d95c:	mov	r1, #1
    d960:	mov	r0, #0
    d964:	add	sp, sp, #12
    d968:	pop	{lr}		; (ldr lr, [sp], #4)
    d96c:	b	95ac <main@@Base+0x29dc>
    d970:	bl	5e7c <__stack_chk_fail@plt>
    d974:	andeq	fp, r2, ip, asr r1
    d978:	andeq	r0, r0, r8, asr r5
    d97c:	push	{lr}		; (str lr, [sp, #-4]!)
    d980:	ldr	r3, [pc, #60]	; d9c4 <main@@Base+0x6df4>
    d984:	ldr	r2, [pc, #60]	; d9c8 <main@@Base+0x6df8>
    d988:	add	r3, pc, r3
    d98c:	ldr	r3, [r3, r2]
    d990:	sub	sp, sp, #12
    d994:	ldr	r2, [r3]
    d998:	str	r2, [sp, #4]
    d99c:	ldr	r2, [sp, #4]
    d9a0:	ldr	r3, [r3]
    d9a4:	cmp	r2, r3
    d9a8:	bne	d9c0 <main@@Base+0x6df0>
    d9ac:	mov	r1, #0
    d9b0:	mov	r0, #1
    d9b4:	add	sp, sp, #12
    d9b8:	pop	{lr}		; (ldr lr, [sp], #4)
    d9bc:	b	95ac <main@@Base+0x29dc>
    d9c0:	bl	5e7c <__stack_chk_fail@plt>
    d9c4:	andeq	fp, r2, ip, lsl #2
    d9c8:	andeq	r0, r0, r8, asr r5
    d9cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d9d0:	ldr	r3, [pc, #904]	; dd60 <main@@Base+0x7190>
    d9d4:	ldr	r2, [pc, #904]	; dd64 <main@@Base+0x7194>
    d9d8:	add	r3, pc, r3
    d9dc:	ldr	r2, [r3, r2]
    d9e0:	sub	sp, sp, #28
    d9e4:	ldr	r3, [r2]
    d9e8:	add	r0, sp, #16
    d9ec:	str	r2, [sp, #12]
    d9f0:	str	r3, [sp, #20]
    d9f4:	bl	aeb8 <main@@Base+0x42e8>
    d9f8:	mov	r8, r0
    d9fc:	ldr	r1, [pc, #868]	; dd68 <main@@Base+0x7198>
    da00:	mov	r0, #1
    da04:	add	r1, pc, r1
    da08:	bl	6a1c <__printf_chk@plt>
    da0c:	cmp	r8, #0
    da10:	beq	dd54 <main@@Base+0x7184>
    da14:	ldr	r3, [pc, #848]	; dd6c <main@@Base+0x719c>
    da18:	ldr	r9, [pc, #848]	; dd70 <main@@Base+0x71a0>
    da1c:	add	r3, pc, r3
    da20:	str	r3, [sp, #8]
    da24:	ldr	r3, [pc, #840]	; dd74 <main@@Base+0x71a4>
    da28:	ldr	fp, [pc, #840]	; dd78 <main@@Base+0x71a8>
    da2c:	add	r3, pc, r3
    da30:	mov	r6, #0
    da34:	ldr	r7, [sp, #16]
    da38:	add	r9, pc, r9
    da3c:	add	fp, pc, fp
    da40:	str	r3, [sp, #4]
    da44:	b	da54 <main@@Base+0x6e84>
    da48:	add	r6, r6, #1
    da4c:	cmp	r8, r6
    da50:	beq	dce4 <main@@Base+0x7114>
    da54:	ldr	r4, [r7, r6, lsl #2]
    da58:	mov	r1, r9
    da5c:	ldr	r0, [r4, #8]
    da60:	bl	5d5c <strstr@plt>
    da64:	subs	r5, r0, #0
    da68:	bne	da48 <main@@Base+0x6e78>
    da6c:	ldr	r1, [sp, #8]
    da70:	mov	r0, #1
    da74:	bl	6a1c <__printf_chk@plt>
    da78:	ldr	r0, [r4]
    da7c:	bl	6458 <avcodec_find_decoder@plt>
    da80:	cmp	r0, #0
    da84:	beq	dd30 <main@@Base+0x7160>
    da88:	ldr	r1, [pc, #748]	; dd7c <main@@Base+0x71ac>
    da8c:	add	r1, pc, r1
    da90:	mov	r0, #1
    da94:	bl	6a1c <__printf_chk@plt>
    da98:	ldr	r0, [r4]
    da9c:	bl	5eb8 <avcodec_find_encoder@plt>
    daa0:	cmp	r0, #0
    daa4:	beq	dd48 <main@@Base+0x7178>
    daa8:	ldr	r1, [pc, #720]	; dd80 <main@@Base+0x71b0>
    daac:	add	r1, pc, r1
    dab0:	mov	r0, #1
    dab4:	bl	6a1c <__printf_chk@plt>
    dab8:	ldr	r3, [r4, #4]
    dabc:	cmp	r3, #4
    dac0:	movhi	r2, #63	; 0x3f
    dac4:	ldrls	r2, [pc, #696]	; dd84 <main@@Base+0x71b4>
    dac8:	addls	r2, pc, r2
    dacc:	ldrbls	r2, [r2, r3]
    dad0:	ldr	r1, [pc, #688]	; dd88 <main@@Base+0x71b8>
    dad4:	mov	r0, #1
    dad8:	add	r1, pc, r1
    dadc:	bl	6a1c <__printf_chk@plt>
    dae0:	ldr	r3, [r4, #16]
    dae4:	tst	r3, #1
    dae8:	bne	dd0c <main@@Base+0x713c>
    daec:	ldr	r1, [pc, #664]	; dd8c <main@@Base+0x71bc>
    daf0:	add	r1, pc, r1
    daf4:	mov	r0, #1
    daf8:	bl	6a1c <__printf_chk@plt>
    dafc:	ldr	r3, [r4, #16]
    db00:	tst	r3, #2
    db04:	bne	dd24 <main@@Base+0x7154>
    db08:	ldr	r1, [pc, #640]	; dd90 <main@@Base+0x71c0>
    db0c:	add	r1, pc, r1
    db10:	mov	r0, #1
    db14:	bl	6a1c <__printf_chk@plt>
    db18:	ldr	r3, [r4, #16]
    db1c:	tst	r3, #4
    db20:	bne	dd18 <main@@Base+0x7148>
    db24:	ldr	r1, [pc, #616]	; dd94 <main@@Base+0x71c4>
    db28:	add	r1, pc, r1
    db2c:	mov	r0, #1
    db30:	bl	6a1c <__printf_chk@plt>
    db34:	ldrd	r2, [r4, #8]
    db38:	cmp	r3, #0
    db3c:	beq	dd3c <main@@Base+0x716c>
    db40:	ldr	r1, [pc, #592]	; dd98 <main@@Base+0x71c8>
    db44:	mov	r0, #1
    db48:	add	r1, pc, r1
    db4c:	bl	6a1c <__printf_chk@plt>
    db50:	mov	sl, #0
    db54:	ldr	r7, [r4]
    db58:	mov	r0, sl
    db5c:	bl	641c <av_codec_next@plt>
    db60:	subs	sl, r0, #0
    db64:	beq	dc0c <main@@Base+0x703c>
    db68:	ldr	r3, [sl, #12]
    db6c:	cmp	r7, r3
    db70:	bne	db58 <main@@Base+0x6f88>
    db74:	bl	6800 <av_codec_is_decoder@plt>
    db78:	cmp	r0, #0
    db7c:	beq	db58 <main@@Base+0x6f88>
    db80:	ldr	r1, [r4, #8]
    db84:	ldr	r0, [sl]
    db88:	bl	695c <strcmp@plt>
    db8c:	cmp	r0, #0
    db90:	beq	db54 <main@@Base+0x6f84>
    db94:	ldr	r2, [pc, #512]	; dd9c <main@@Base+0x71cc>
    db98:	ldr	r1, [pc, #512]	; dda0 <main@@Base+0x71d0>
    db9c:	add	r2, pc, r2
    dba0:	add	r1, pc, r1
    dba4:	mov	r0, #1
    dba8:	ldr	r7, [r4]
    dbac:	mov	sl, #0
    dbb0:	bl	6a1c <__printf_chk@plt>
    dbb4:	mov	r0, sl
    dbb8:	bl	641c <av_codec_next@plt>
    dbbc:	subs	sl, r0, #0
    dbc0:	beq	dbfc <main@@Base+0x702c>
    dbc4:	ldr	r3, [sl, #12]
    dbc8:	cmp	r7, r3
    dbcc:	bne	dbb4 <main@@Base+0x6fe4>
    dbd0:	bl	6800 <av_codec_is_decoder@plt>
    dbd4:	cmp	r0, #0
    dbd8:	beq	dbb4 <main@@Base+0x6fe4>
    dbdc:	ldr	r2, [sl]
    dbe0:	ldr	r1, [sp, #4]
    dbe4:	mov	r0, #1
    dbe8:	bl	6a1c <__printf_chk@plt>
    dbec:	mov	r0, sl
    dbf0:	bl	641c <av_codec_next@plt>
    dbf4:	subs	sl, r0, #0
    dbf8:	bne	dbc4 <main@@Base+0x6ff4>
    dbfc:	ldr	r1, [pc, #416]	; dda4 <main@@Base+0x71d4>
    dc00:	mov	r0, #1
    dc04:	add	r1, pc, r1
    dc08:	bl	6a1c <__printf_chk@plt>
    dc0c:	mov	sl, #0
    dc10:	ldr	r7, [r4]
    dc14:	mov	r0, sl
    dc18:	bl	641c <av_codec_next@plt>
    dc1c:	subs	sl, r0, #0
    dc20:	beq	dcc4 <main@@Base+0x70f4>
    dc24:	ldr	r3, [sl, #12]
    dc28:	cmp	r7, r3
    dc2c:	bne	dc14 <main@@Base+0x7044>
    dc30:	bl	63ec <av_codec_is_encoder@plt>
    dc34:	cmp	r0, #0
    dc38:	beq	dc14 <main@@Base+0x7044>
    dc3c:	ldr	r1, [r4, #8]
    dc40:	ldr	r0, [sl]
    dc44:	bl	695c <strcmp@plt>
    dc48:	cmp	r0, #0
    dc4c:	beq	dc10 <main@@Base+0x7040>
    dc50:	ldr	r2, [pc, #336]	; dda8 <main@@Base+0x71d8>
    dc54:	ldr	r1, [pc, #336]	; ddac <main@@Base+0x71dc>
    dc58:	add	r2, pc, r2
    dc5c:	add	r1, pc, r1
    dc60:	mov	r0, #1
    dc64:	ldr	r4, [r4]
    dc68:	bl	6a1c <__printf_chk@plt>
    dc6c:	mov	r0, r5
    dc70:	bl	641c <av_codec_next@plt>
    dc74:	subs	r5, r0, #0
    dc78:	beq	dcb4 <main@@Base+0x70e4>
    dc7c:	ldr	r3, [r5, #12]
    dc80:	cmp	r4, r3
    dc84:	bne	dc6c <main@@Base+0x709c>
    dc88:	bl	63ec <av_codec_is_encoder@plt>
    dc8c:	cmp	r0, #0
    dc90:	beq	dc6c <main@@Base+0x709c>
    dc94:	ldr	r2, [r5]
    dc98:	mov	r1, fp
    dc9c:	mov	r0, #1
    dca0:	bl	6a1c <__printf_chk@plt>
    dca4:	mov	r0, r5
    dca8:	bl	641c <av_codec_next@plt>
    dcac:	subs	r5, r0, #0
    dcb0:	bne	dc7c <main@@Base+0x70ac>
    dcb4:	ldr	r1, [pc, #244]	; ddb0 <main@@Base+0x71e0>
    dcb8:	mov	r0, #1
    dcbc:	add	r1, pc, r1
    dcc0:	bl	6a1c <__printf_chk@plt>
    dcc4:	ldr	r1, [pc, #232]	; ddb4 <main@@Base+0x71e4>
    dcc8:	mov	r0, #1
    dccc:	add	r1, pc, r1
    dcd0:	add	r6, r6, #1
    dcd4:	bl	6a1c <__printf_chk@plt>
    dcd8:	cmp	r8, r6
    dcdc:	ldr	r7, [sp, #16]
    dce0:	bne	da54 <main@@Base+0x6e84>
    dce4:	mov	r0, r7
    dce8:	bl	69b0 <av_free@plt>
    dcec:	ldr	r3, [sp, #12]
    dcf0:	ldr	r2, [sp, #20]
    dcf4:	ldr	r3, [r3]
    dcf8:	mov	r0, #0
    dcfc:	cmp	r2, r3
    dd00:	bne	dd5c <main@@Base+0x718c>
    dd04:	add	sp, sp, #28
    dd08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dd0c:	ldr	r1, [pc, #164]	; ddb8 <main@@Base+0x71e8>
    dd10:	add	r1, pc, r1
    dd14:	b	daf4 <main@@Base+0x6f24>
    dd18:	ldr	r1, [pc, #156]	; ddbc <main@@Base+0x71ec>
    dd1c:	add	r1, pc, r1
    dd20:	b	db2c <main@@Base+0x6f5c>
    dd24:	ldr	r1, [pc, #148]	; ddc0 <main@@Base+0x71f0>
    dd28:	add	r1, pc, r1
    dd2c:	b	db10 <main@@Base+0x6f40>
    dd30:	ldr	r1, [pc, #140]	; ddc4 <main@@Base+0x71f4>
    dd34:	add	r1, pc, r1
    dd38:	b	da90 <main@@Base+0x6ec0>
    dd3c:	ldr	r3, [pc, #132]	; ddc8 <main@@Base+0x71f8>
    dd40:	add	r3, pc, r3
    dd44:	b	db40 <main@@Base+0x6f70>
    dd48:	ldr	r1, [pc, #124]	; ddcc <main@@Base+0x71fc>
    dd4c:	add	r1, pc, r1
    dd50:	b	dab0 <main@@Base+0x6ee0>
    dd54:	ldr	r7, [sp, #16]
    dd58:	b	dce4 <main@@Base+0x7114>
    dd5c:	bl	5e7c <__stack_chk_fail@plt>
    dd60:	strheq	fp, [r2], -ip
    dd64:	andeq	r0, r0, r8, asr r5
    dd68:	andeq	r6, r1, r0, lsr #10
    dd6c:			; <UNDEFINED> instruction: 0x000158b4
    dd70:	ldrdeq	r6, [r1], -ip
    dd74:	andeq	r5, r1, r8, asr r9
    dd78:	andeq	r5, r1, r8, asr #18
    dd7c:	andeq	r9, r1, r4, asr #15
    dd80:			; <UNDEFINED> instruction: 0x000197bc
    dd84:	strdeq	r4, [r1], -r0
    dd88:	andeq	r6, r1, r8, asr #10
    dd8c:	andeq	r5, r1, ip, lsr #10
    dd90:	andeq	r5, r1, r0, lsl r5
    dd94:	strdeq	r5, [r1], -r4
    dd98:	andeq	r5, r1, r4, ror #11
    dd9c:	muleq	r1, r8, r8
    dda0:	andeq	r6, r1, r4, lsl #9
    dda4:	andeq	r5, r1, ip, ror fp
    dda8:	ldrdeq	r5, [r1], -r0
    ddac:	andeq	r6, r1, r8, asr #7
    ddb0:	andeq	r5, r1, r4, asr #21
    ddb4:	andeq	r7, r1, ip, ror #31
    ddb8:	andeq	r6, r1, ip, lsl #4
    ddbc:	andeq	r5, r1, r4, lsl #6
    ddc0:	strdeq	r6, [r1], -r8
    ddc4:	andeq	r5, r1, r8, ror #5
    ddc8:	andeq	r7, r1, r4, lsr #14
    ddcc:	ldrdeq	r5, [r1], -r0
    ddd0:	push	{r4, lr}
    ddd4:	ldr	r3, [pc, #60]	; de18 <main@@Base+0x7248>
    ddd8:	ldr	r2, [pc, #60]	; de1c <main@@Base+0x724c>
    dddc:	add	r3, pc, r3
    dde0:	ldr	r4, [r3, r2]
    dde4:	sub	sp, sp, #8
    dde8:	ldr	r3, [r4]
    ddec:	mov	r0, #0
    ddf0:	str	r3, [sp, #4]
    ddf4:	bl	afe0 <main@@Base+0x4410>
    ddf8:	ldr	r2, [sp, #4]
    ddfc:	ldr	r3, [r4]
    de00:	cmp	r2, r3
    de04:	bne	de14 <main@@Base+0x7244>
    de08:	mov	r0, #0
    de0c:	add	sp, sp, #8
    de10:	pop	{r4, pc}
    de14:	bl	5e7c <__stack_chk_fail@plt>
    de18:			; <UNDEFINED> instruction: 0x0002acb8
    de1c:	andeq	r0, r0, r8, asr r5
    de20:	push	{r4, lr}
    de24:	ldr	r3, [pc, #60]	; de68 <main@@Base+0x7298>
    de28:	ldr	r2, [pc, #60]	; de6c <main@@Base+0x729c>
    de2c:	add	r3, pc, r3
    de30:	ldr	r4, [r3, r2]
    de34:	sub	sp, sp, #8
    de38:	ldr	r3, [r4]
    de3c:	mov	r0, #1
    de40:	str	r3, [sp, #4]
    de44:	bl	afe0 <main@@Base+0x4410>
    de48:	ldr	r2, [sp, #4]
    de4c:	ldr	r3, [r4]
    de50:	cmp	r2, r3
    de54:	bne	de64 <main@@Base+0x7294>
    de58:	mov	r0, #0
    de5c:	add	sp, sp, #8
    de60:	pop	{r4, pc}
    de64:	bl	5e7c <__stack_chk_fail@plt>
    de68:	andeq	sl, r2, r8, ror #24
    de6c:	andeq	r0, r0, r8, asr r5
    de70:	mov	ip, #0
    de74:	push	{r4, r5, r6, r7, lr}
    de78:	ldr	r3, [pc, #136]	; df08 <main@@Base+0x7338>
    de7c:	ldr	r2, [pc, #136]	; df0c <main@@Base+0x733c>
    de80:	add	r3, pc, r3
    de84:	ldr	r7, [r3, r2]
    de88:	ldr	r1, [pc, #128]	; df10 <main@@Base+0x7340>
    de8c:	ldr	r6, [pc, #128]	; df14 <main@@Base+0x7344>
    de90:	ldr	r3, [r7]
    de94:	sub	sp, sp, #12
    de98:	add	r1, pc, r1
    de9c:	mov	r0, #1
    dea0:	str	ip, [sp]
    dea4:	str	r3, [sp, #4]
    dea8:	mov	r5, sp
    deac:	bl	6a1c <__printf_chk@plt>
    deb0:	add	r6, pc, r6
    deb4:	b	dec8 <main@@Base+0x72f8>
    deb8:	ldr	r2, [r4]
    debc:	mov	r1, r6
    dec0:	mov	r0, #1
    dec4:	bl	6a1c <__printf_chk@plt>
    dec8:	mov	r0, r5
    decc:	bl	6254 <av_bsf_iterate@plt>
    ded0:	subs	r4, r0, #0
    ded4:	bne	deb8 <main@@Base+0x72e8>
    ded8:	ldr	r1, [pc, #56]	; df18 <main@@Base+0x7348>
    dedc:	mov	r0, #1
    dee0:	add	r1, pc, r1
    dee4:	bl	6a1c <__printf_chk@plt>
    dee8:	ldr	r2, [sp, #4]
    deec:	ldr	r3, [r7]
    def0:	mov	r0, r4
    def4:	cmp	r2, r3
    def8:	bne	df04 <main@@Base+0x7334>
    defc:	add	sp, sp, #12
    df00:	pop	{r4, r5, r6, r7, pc}
    df04:	bl	5e7c <__stack_chk_fail@plt>
    df08:	andeq	sl, r2, r4, lsl ip
    df0c:	andeq	r0, r0, r8, asr r5
    df10:	muleq	r1, r4, r1
    df14:	andeq	r5, r1, r0, lsl #7
    df18:	ldrdeq	r7, [r1], -r8
    df1c:	mov	ip, #0
    df20:	push	{r4, r5, r6, lr}
    df24:	ldr	r3, [pc, #176]	; dfdc <main@@Base+0x740c>
    df28:	ldr	r2, [pc, #176]	; dfe0 <main@@Base+0x7410>
    df2c:	add	r3, pc, r3
    df30:	ldr	r6, [r3, r2]
    df34:	ldr	r1, [pc, #168]	; dfe4 <main@@Base+0x7414>
    df38:	ldr	r5, [pc, #168]	; dfe8 <main@@Base+0x7418>
    df3c:	ldr	r3, [r6]
    df40:	sub	sp, sp, #8
    df44:	add	r1, pc, r1
    df48:	mov	r0, #1
    df4c:	str	ip, [sp]
    df50:	str	r3, [sp, #4]
    df54:	mov	r4, sp
    df58:	bl	6a1c <__printf_chk@plt>
    df5c:	add	r5, pc, r5
    df60:	b	df70 <main@@Base+0x73a0>
    df64:	mov	r1, r5
    df68:	mov	r0, #1
    df6c:	bl	6a1c <__printf_chk@plt>
    df70:	mov	r1, #0
    df74:	mov	r0, r4
    df78:	bl	6170 <avio_enum_protocols@plt>
    df7c:	subs	r2, r0, #0
    df80:	bne	df64 <main@@Base+0x7394>
    df84:	ldr	r1, [pc, #96]	; dfec <main@@Base+0x741c>
    df88:	ldr	r5, [pc, #96]	; dff0 <main@@Base+0x7420>
    df8c:	add	r1, pc, r1
    df90:	mov	r0, #1
    df94:	bl	6a1c <__printf_chk@plt>
    df98:	add	r5, pc, r5
    df9c:	b	dfac <main@@Base+0x73dc>
    dfa0:	mov	r1, r5
    dfa4:	mov	r0, #1
    dfa8:	bl	6a1c <__printf_chk@plt>
    dfac:	mov	r1, #1
    dfb0:	mov	r0, r4
    dfb4:	bl	6170 <avio_enum_protocols@plt>
    dfb8:	subs	r2, r0, #0
    dfbc:	bne	dfa0 <main@@Base+0x73d0>
    dfc0:	ldr	r2, [sp, #4]
    dfc4:	ldr	r3, [r6]
    dfc8:	cmp	r2, r3
    dfcc:	bne	dfd8 <main@@Base+0x7408>
    dfd0:	add	sp, sp, #8
    dfd4:	pop	{r4, r5, r6, pc}
    dfd8:	bl	5e7c <__stack_chk_fail@plt>
    dfdc:	andeq	sl, r2, r8, ror #22
    dfe0:	andeq	r0, r0, r8, asr r5
    dfe4:	strdeq	r6, [r1], -ip
    dfe8:	andeq	r6, r1, r8, lsl #2
    dfec:	andeq	r6, r1, r0, ror #1
    dff0:	andeq	r6, r1, ip, asr #1
    dff4:	mov	ip, #0
    dff8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dffc:	ldr	r3, [pc, #440]	; e1bc <main@@Base+0x75ec>
    e000:	ldr	r2, [pc, #440]	; e1c0 <main@@Base+0x75f0>
    e004:	add	r3, pc, r3
    e008:	ldr	r2, [r3, r2]
    e00c:	ldr	r1, [pc, #432]	; e1c4 <main@@Base+0x75f4>
    e010:	ldr	r3, [r2]
    e014:	sub	sp, sp, #100	; 0x64
    e018:	add	r1, pc, r1
    e01c:	str	r3, [sp, #92]	; 0x5c
    e020:	mov	r0, #1
    e024:	add	r3, sp, #24
    e028:	str	r2, [sp, #20]
    e02c:	str	ip, [sp, #24]
    e030:	str	r3, [sp, #16]
    e034:	bl	6a1c <__printf_chk@plt>
    e038:	ldr	r0, [sp, #16]
    e03c:	bl	65b4 <av_filter_iterate@plt>
    e040:	ldr	r7, [pc, #384]	; e1c8 <main@@Base+0x75f8>
    e044:	subs	r8, r0, #0
    e048:	add	r7, pc, r7
    e04c:	beq	e154 <main@@Base+0x7584>
    e050:	ldr	r5, [r8, #8]
    e054:	add	sl, sp, #28
    e058:	cmp	r5, #0
    e05c:	mov	r2, sl
    e060:	mov	r9, #0
    e064:	add	r6, sp, #88	; 0x58
    e068:	beq	e1a0 <main@@Base+0x75d0>
    e06c:	mov	r4, sl
    e070:	mov	fp, #0
    e074:	b	e098 <main@@Base+0x74c8>
    e078:	mov	r1, fp
    e07c:	mov	r0, r5
    e080:	bl	5fc0 <avfilter_pad_get_type@plt>
    e084:	cmp	r0, #4
    e088:	movhi	r2, #63	; 0x3f
    e08c:	ldrbls	r2, [r7, r0]
    e090:	add	fp, fp, #1
    e094:	strb	r2, [r4], #1
    e098:	mov	r1, fp
    e09c:	mov	r0, r5
    e0a0:	bl	5e1c <avfilter_pad_get_name@plt>
    e0a4:	cmp	r0, #0
    e0a8:	cmpne	r4, r6
    e0ac:	mov	r2, r4
    e0b0:	bcc	e078 <main@@Base+0x74a8>
    e0b4:	cmp	fp, #0
    e0b8:	bne	e0e0 <main@@Base+0x7510>
    e0bc:	cmp	r9, #0
    e0c0:	ldr	r3, [r8, #20]
    e0c4:	beq	e1a4 <main@@Base+0x75d4>
    e0c8:	tst	r3, #2
    e0cc:	moveq	r1, #124	; 0x7c
    e0d0:	movne	r1, #78	; 0x4e
    e0d4:	mov	r3, r2
    e0d8:	add	r2, r2, #1
    e0dc:	strb	r1, [r3]
    e0e0:	cmp	r9, #1
    e0e4:	bne	e170 <main@@Base+0x75a0>
    e0e8:	mov	r3, #0
    e0ec:	strb	r3, [r2]
    e0f0:	ldr	r3, [r8, #20]
    e0f4:	ldr	r1, [r8, #56]	; 0x38
    e0f8:	tst	r3, #196608	; 0x30000
    e0fc:	movne	r2, #84	; 0x54
    e100:	moveq	r2, #46	; 0x2e
    e104:	tst	r3, #4
    e108:	movne	r3, #83	; 0x53
    e10c:	moveq	r3, #46	; 0x2e
    e110:	cmp	r1, #0
    e114:	movne	ip, #67	; 0x43
    e118:	moveq	ip, #46	; 0x2e
    e11c:	ldr	r1, [r8, #4]
    e120:	str	sl, [sp, #8]
    e124:	str	r1, [sp, #12]
    e128:	ldr	r1, [r8]
    e12c:	mov	r0, r9
    e130:	str	r1, [sp, #4]
    e134:	ldr	r1, [pc, #144]	; e1cc <main@@Base+0x75fc>
    e138:	str	ip, [sp]
    e13c:	add	r1, pc, r1
    e140:	bl	6a1c <__printf_chk@plt>
    e144:	ldr	r0, [sp, #16]
    e148:	bl	65b4 <av_filter_iterate@plt>
    e14c:	subs	r8, r0, #0
    e150:	bne	e050 <main@@Base+0x7480>
    e154:	ldr	r3, [sp, #20]
    e158:	ldr	r2, [sp, #92]	; 0x5c
    e15c:	ldr	r3, [r3]
    e160:	cmp	r2, r3
    e164:	bne	e1b8 <main@@Base+0x75e8>
    e168:	add	sp, sp, #100	; 0x64
    e16c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e170:	mov	r1, #45	; 0x2d
    e174:	mov	r4, r2
    e178:	mov	r3, #62	; 0x3e
    e17c:	strb	r1, [r4], #2
    e180:	strb	r3, [r2, #1]
    e184:	ldr	r5, [r8, #12]
    e188:	mov	r9, #1
    e18c:	cmp	r5, #0
    e190:	bne	e070 <main@@Base+0x74a0>
    e194:	mov	r2, r4
    e198:	ldr	r3, [r8, #20]
    e19c:	b	e0c8 <main@@Base+0x74f8>
    e1a0:	ldr	r3, [r8, #20]
    e1a4:	tst	r3, #1
    e1a8:	moveq	r1, #124	; 0x7c
    e1ac:	movne	r1, #78	; 0x4e
    e1b0:	mov	r3, r2
    e1b4:	b	e0d8 <main@@Base+0x7508>
    e1b8:	bl	5e7c <__stack_chk_fail@plt>
    e1bc:	muleq	r2, r0, sl
    e1c0:	andeq	r0, r0, r8, asr r5
    e1c4:	andeq	r6, r1, r0, rrx
    e1c8:	andeq	r4, r1, r0, ror r6
    e1cc:	andeq	r6, r1, r0, lsl r0
    e1d0:	push	{r4, r5, r6, r7, lr}
    e1d4:	ldr	r3, [pc, #152]	; e274 <main@@Base+0x76a4>
    e1d8:	ldr	r1, [pc, #152]	; e278 <main@@Base+0x76a8>
    e1dc:	add	r3, pc, r3
    e1e0:	ldr	r7, [r3, r1]
    e1e4:	ldr	r2, [pc, #144]	; e27c <main@@Base+0x76ac>
    e1e8:	ldr	r1, [pc, #144]	; e280 <main@@Base+0x76b0>
    e1ec:	ldr	ip, [r7]
    e1f0:	ldr	r6, [pc, #140]	; e284 <main@@Base+0x76b4>
    e1f4:	sub	sp, sp, #20
    e1f8:	add	r2, pc, r2
    e1fc:	add	r1, pc, r1
    e200:	mov	r0, #1
    e204:	str	ip, [sp, #12]
    e208:	mov	r4, #0
    e20c:	bl	6a1c <__printf_chk@plt>
    e210:	add	r5, sp, #8
    e214:	add	r6, pc, r6
    e218:	b	e244 <main@@Base+0x7674>
    e21c:	ldr	r1, [sp, #8]
    e220:	add	r4, r4, #1
    e224:	ldrb	r0, [r1, #2]
    e228:	ldrb	r3, [r1]
    e22c:	str	r0, [sp, #4]
    e230:	ldrb	r1, [r1, #1]
    e234:	mov	r0, #1
    e238:	str	r1, [sp]
    e23c:	mov	r1, r6
    e240:	bl	6a1c <__printf_chk@plt>
    e244:	mov	r1, r5
    e248:	mov	r0, r4
    e24c:	bl	6590 <av_get_known_color_name@plt>
    e250:	subs	r2, r0, #0
    e254:	bne	e21c <main@@Base+0x764c>
    e258:	ldr	r2, [sp, #12]
    e25c:	ldr	r3, [r7]
    e260:	cmp	r2, r3
    e264:	bne	e270 <main@@Base+0x76a0>
    e268:	add	sp, sp, #20
    e26c:	pop	{r4, r5, r6, r7, pc}
    e270:	bl	5e7c <__stack_chk_fail@plt>
    e274:			; <UNDEFINED> instruction: 0x0002a8b8
    e278:	andeq	r0, r0, r8, asr r5
    e27c:	andeq	r8, r1, r8, lsl r4
    e280:	andeq	r5, r1, r8, ror #30
    e284:	andeq	r5, r1, r0, ror #30
    e288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e28c:	mov	r4, #0
    e290:	ldr	r3, [pc, #296]	; e3c0 <main@@Base+0x77f0>
    e294:	ldr	r2, [pc, #296]	; e3c4 <main@@Base+0x77f4>
    e298:	add	r3, pc, r3
    e29c:	ldr	r2, [r3, r2]
    e2a0:	ldr	r1, [pc, #288]	; e3c8 <main@@Base+0x77f8>
    e2a4:	ldr	r3, [r2]
    e2a8:	sub	sp, sp, #76	; 0x4c
    e2ac:	add	r1, pc, r1
    e2b0:	mov	r0, #1
    e2b4:	str	r3, [sp, #68]	; 0x44
    e2b8:	str	r2, [sp, #60]	; 0x3c
    e2bc:	bl	6a1c <__printf_chk@plt>
    e2c0:	ldr	r3, [pc, #260]	; e3cc <main@@Base+0x77fc>
    e2c4:	mov	r5, r4
    e2c8:	add	r3, pc, r3
    e2cc:	str	r3, [sp, #56]	; 0x38
    e2d0:	b	e390 <main@@Base+0x77c0>
    e2d4:	bl	6b54 <av_pix_fmt_desc_get_id@plt>
    e2d8:	mov	r6, r0
    e2dc:	bl	5db0 <sws_isSupportedInput@plt>
    e2e0:	cmp	r0, #0
    e2e4:	mov	r0, r6
    e2e8:	movne	r8, #73	; 0x49
    e2ec:	moveq	r8, #46	; 0x2e
    e2f0:	bl	626c <sws_isSupportedOutput@plt>
    e2f4:	ldr	r3, [r4, #8]
    e2f8:	cmp	r0, #0
    e2fc:	and	r2, r3, #8
    e300:	str	r2, [sp, #24]
    e304:	str	r5, [sp, #28]
    e308:	and	r2, r3, #2
    e30c:	and	r3, r3, #4
    e310:	str	r2, [sp, #32]
    e314:	str	r3, [sp, #40]	; 0x28
    e318:	movne	r9, #79	; 0x4f
    e31c:	ldrd	r2, [sp, #24]
    e320:	moveq	r9, #46	; 0x2e
    e324:	orrs	r3, r2, r3
    e328:	movne	r2, #72	; 0x48
    e32c:	moveq	r2, #46	; 0x2e
    e330:	str	r5, [sp, #36]	; 0x24
    e334:	str	r5, [sp, #44]	; 0x2c
    e338:	str	r2, [sp, #52]	; 0x34
    e33c:	ldrd	r2, [sp, #32]
    e340:	orrs	r3, r2, r3
    e344:	movne	sl, #80	; 0x50
    e348:	ldrd	r2, [sp, #40]	; 0x28
    e34c:	moveq	sl, #46	; 0x2e
    e350:	mov	r0, r4
    e354:	orrs	r3, r2, r3
    e358:	movne	fp, #66	; 0x42
    e35c:	moveq	fp, #46	; 0x2e
    e360:	ldr	r6, [r4]
    e364:	ldrb	r7, [r4, #4]
    e368:	bl	5da4 <av_get_bits_per_pixel@plt>
    e36c:	ldr	r2, [sp, #52]	; 0x34
    e370:	str	r0, [sp, #20]
    e374:	stm	sp, {r2, sl, fp}
    e378:	mov	r3, r9
    e37c:	mov	r2, r8
    e380:	strd	r6, [sp, #12]
    e384:	ldr	r1, [sp, #56]	; 0x38
    e388:	mov	r0, #1
    e38c:	bl	6a1c <__printf_chk@plt>
    e390:	mov	r0, r4
    e394:	bl	6a88 <av_pix_fmt_desc_next@plt>
    e398:	subs	r4, r0, #0
    e39c:	bne	e2d4 <main@@Base+0x7704>
    e3a0:	ldr	r3, [sp, #60]	; 0x3c
    e3a4:	ldr	r2, [sp, #68]	; 0x44
    e3a8:	ldr	r3, [r3]
    e3ac:	cmp	r2, r3
    e3b0:	bne	e3bc <main@@Base+0x77ec>
    e3b4:	add	sp, sp, #76	; 0x4c
    e3b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e3bc:	bl	5e7c <__stack_chk_fail@plt>
    e3c0:	strdeq	sl, [r2], -ip
    e3c4:	andeq	r0, r0, r8, asr r5
    e3c8:	andeq	r5, r1, r0, ror #29
    e3cc:	andeq	r5, r1, r0, asr #31
    e3d0:	mov	r0, #1
    e3d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e3d8:	ldr	r3, [pc, #468]	; e5b4 <main@@Base+0x79e4>
    e3dc:	ldr	r2, [pc, #468]	; e5b8 <main@@Base+0x79e8>
    e3e0:	add	r3, pc, r3
    e3e4:	ldr	r2, [r3, r2]
    e3e8:	ldr	r1, [pc, #460]	; e5bc <main@@Base+0x79ec>
    e3ec:	ldr	r3, [r2]
    e3f0:	sub	sp, sp, #68	; 0x44
    e3f4:	add	r1, pc, r1
    e3f8:	str	r2, [sp, #36]	; 0x24
    e3fc:	str	r3, [sp, #60]	; 0x3c
    e400:	mov	r5, r0
    e404:	mov	r4, #0
    e408:	bl	6a1c <__printf_chk@plt>
    e40c:	ldr	r6, [pc, #428]	; e5c0 <main@@Base+0x79f0>
    e410:	add	r6, pc, r6
    e414:	sub	r7, r4, #32
    e418:	rsb	r3, r4, #32
    e41c:	lsl	r7, r5, r7
    e420:	orr	r7, r7, r5, lsr r3
    e424:	lsl	sl, r5, r4
    e428:	mov	r1, r7
    e42c:	mov	r0, sl
    e430:	bl	6050 <av_get_channel_name@plt>
    e434:	cmp	r0, #0
    e438:	str	r0, [sp, #44]	; 0x2c
    e43c:	beq	e460 <main@@Base+0x7890>
    e440:	mov	r1, r7
    e444:	mov	r0, sl
    e448:	bl	5e94 <av_get_channel_description@plt>
    e44c:	ldr	r2, [sp, #44]	; 0x2c
    e450:	mov	r3, r0
    e454:	mov	r1, r6
    e458:	mov	r0, #1
    e45c:	bl	6a1c <__printf_chk@plt>
    e460:	add	r4, r4, #1
    e464:	cmp	r4, #63	; 0x3f
    e468:	bne	e414 <main@@Base+0x7844>
    e46c:	ldr	r1, [pc, #336]	; e5c4 <main@@Base+0x79f4>
    e470:	mov	r0, #1
    e474:	add	r1, pc, r1
    e478:	bl	6a1c <__printf_chk@plt>
    e47c:	mov	r3, #0
    e480:	str	r3, [sp, #20]
    e484:	add	r3, sp, #44	; 0x2c
    e488:	str	r3, [sp, #24]
    e48c:	add	r3, sp, #48	; 0x30
    e490:	str	r3, [sp, #28]
    e494:	ldr	r3, [pc, #300]	; e5c8 <main@@Base+0x79f8>
    e498:	ldr	fp, [pc, #300]	; e5cc <main@@Base+0x79fc>
    e49c:	add	r3, pc, r3
    e4a0:	str	r3, [sp, #32]
    e4a4:	ldr	r3, [pc, #292]	; e5d0 <main@@Base+0x7a00>
    e4a8:	add	fp, pc, fp
    e4ac:	add	r3, pc, r3
    e4b0:	str	r3, [sp, #12]
    e4b4:	str	fp, [sp, #16]
    e4b8:	ldr	r0, [sp, #20]
    e4bc:	b	e4d0 <main@@Base+0x7900>
    e4c0:	ldr	r3, [sp, #20]
    e4c4:	add	r3, r3, #1
    e4c8:	mov	r0, r3
    e4cc:	str	r3, [sp, #20]
    e4d0:	ldr	r2, [sp, #24]
    e4d4:	ldr	r1, [sp, #28]
    e4d8:	bl	6158 <av_get_standard_channel_layout@plt>
    e4dc:	cmp	r0, #0
    e4e0:	bne	e590 <main@@Base+0x79c0>
    e4e4:	ldr	r2, [sp, #44]	; 0x2c
    e4e8:	cmp	r2, #0
    e4ec:	beq	e4c0 <main@@Base+0x78f0>
    e4f0:	mov	r6, #64	; 0x40
    e4f4:	mov	r4, #1
    e4f8:	mov	r5, #0
    e4fc:	ldr	r1, [sp, #32]
    e500:	mov	r0, #1
    e504:	bl	6a1c <__printf_chk@plt>
    e508:	ldr	r3, [pc, #196]	; e5d4 <main@@Base+0x7a04>
    e50c:	add	r3, pc, r3
    e510:	str	r3, [sp]
    e514:	ldrd	r2, [sp, #48]	; 0x30
    e518:	and	r8, r2, r4
    e51c:	and	r9, r3, r5
    e520:	orrs	r1, r8, r9
    e524:	beq	e56c <main@@Base+0x799c>
    e528:	subs	r1, r4, #1
    e52c:	and	sl, r1, r2
    e530:	sbc	r2, r5, #0
    e534:	and	fp, r2, r3
    e538:	orrs	r3, sl, fp
    e53c:	ldr	r2, [sp]
    e540:	ldr	r3, [sp, #12]
    e544:	mov	r1, r5
    e548:	mov	r0, r4
    e54c:	movne	r7, r3
    e550:	moveq	r7, r2
    e554:	bl	6050 <av_get_channel_name@plt>
    e558:	mov	r2, r7
    e55c:	mov	r3, r0
    e560:	ldr	r1, [sp, #16]
    e564:	mov	r0, #1
    e568:	bl	6a1c <__printf_chk@plt>
    e56c:	adds	r4, r4, r4
    e570:	adc	r5, r5, r5
    e574:	subs	r6, r6, #1
    e578:	bne	e514 <main@@Base+0x7944>
    e57c:	ldr	r1, [pc, #84]	; e5d8 <main@@Base+0x7a08>
    e580:	mov	r0, #1
    e584:	add	r1, pc, r1
    e588:	bl	6a1c <__printf_chk@plt>
    e58c:	b	e4c0 <main@@Base+0x78f0>
    e590:	ldr	r3, [sp, #36]	; 0x24
    e594:	ldr	r2, [sp, #60]	; 0x3c
    e598:	ldr	r3, [r3]
    e59c:	mov	r0, #0
    e5a0:	cmp	r2, r3
    e5a4:	bne	e5b0 <main@@Base+0x79e0>
    e5a8:	add	sp, sp, #68	; 0x44
    e5ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e5b0:	bl	5e7c <__stack_chk_fail@plt>
    e5b4:			; <UNDEFINED> instruction: 0x0002a6b4
    e5b8:	andeq	r0, r0, r8, asr r5
    e5bc:	andeq	r5, r1, r4, asr #29
    e5c0:	ldrdeq	r5, [r1], -ip
    e5c4:	andeq	r5, r1, r4, lsl #29
    e5c8:	muleq	r1, r8, lr
    e5cc:	muleq	r1, r4, lr
    e5d0:	andeq	r5, r1, r8, lsl #28
    e5d4:	andeq	r6, r1, r8, asr pc
    e5d8:	andeq	r7, r1, r4, lsr r7
    e5dc:	push	{r4, r5, r6, r7, lr}
    e5e0:	mvn	r4, #0
    e5e4:	ldr	r3, [pc, #108]	; e658 <main@@Base+0x7a88>
    e5e8:	ldr	r2, [pc, #108]	; e65c <main@@Base+0x7a8c>
    e5ec:	add	r3, pc, r3
    e5f0:	ldr	r7, [r3, r2]
    e5f4:	ldr	r6, [pc, #100]	; e660 <main@@Base+0x7a90>
    e5f8:	ldr	r2, [r7]
    e5fc:	sub	sp, sp, #140	; 0x8c
    e600:	add	r6, pc, r6
    e604:	add	r5, sp, #4
    e608:	str	r2, [sp, #132]	; 0x84
    e60c:	mov	r2, r4
    e610:	mov	r1, #128	; 0x80
    e614:	mov	r0, r5
    e618:	bl	6ab8 <av_get_sample_fmt_string@plt>
    e61c:	add	r4, r4, #1
    e620:	mov	r2, r0
    e624:	mov	r1, r6
    e628:	mov	r0, #1
    e62c:	bl	6a1c <__printf_chk@plt>
    e630:	cmp	r4, #12
    e634:	bne	e60c <main@@Base+0x7a3c>
    e638:	ldr	r2, [sp, #132]	; 0x84
    e63c:	ldr	r3, [r7]
    e640:	mov	r0, #0
    e644:	cmp	r2, r3
    e648:	bne	e654 <main@@Base+0x7a84>
    e64c:	add	sp, sp, #140	; 0x8c
    e650:	pop	{r4, r5, r6, r7, pc}
    e654:	bl	5e7c <__stack_chk_fail@plt>
    e658:	andeq	sl, r2, r8, lsr #9
    e65c:	andeq	r0, r0, r8, asr r5
    e660:	andeq	r4, r1, r0, lsr ip
    e664:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    e668:	mov	r4, r2
    e66c:	ldr	r3, [pc, #1520]	; ec64 <main@@Base+0x8094>
    e670:	ldr	r0, [pc, #1520]	; ec68 <main@@Base+0x8098>
    e674:	add	r3, pc, r3
    e678:	ldr	r6, [r3, r0]
    e67c:	sub	sp, sp, #16
    e680:	ldr	r2, [r6]
    e684:	ldr	r1, [pc, #1504]	; ec6c <main@@Base+0x809c>
    e688:	str	r2, [sp, #12]
    e68c:	ldr	r0, [r3, r1]
    e690:	bl	5f3c <av_log_set_callback@plt>
    e694:	cmp	r4, #0
    e698:	beq	e848 <main@@Base+0x7c78>
    e69c:	mov	r0, r4
    e6a0:	bl	60ec <av_strdup@plt>
    e6a4:	cmp	r0, #0
    e6a8:	mov	r4, r0
    e6ac:	str	r0, [sp, #8]
    e6b0:	beq	ebd8 <main@@Base+0x8008>
    e6b4:	mov	r1, #61	; 0x3d
    e6b8:	bl	662c <strchr@plt>
    e6bc:	subs	r5, r0, #0
    e6c0:	movne	r3, #0
    e6c4:	strbne	r3, [r5], #1
    e6c8:	ldrb	r3, [r4]
    e6cc:	cmp	r3, #0
    e6d0:	beq	e838 <main@@Base+0x7c68>
    e6d4:	ldr	r1, [pc, #1428]	; ec70 <main@@Base+0x80a0>
    e6d8:	mov	r0, r4
    e6dc:	add	r1, pc, r1
    e6e0:	bl	695c <strcmp@plt>
    e6e4:	subs	r1, r0, #0
    e6e8:	beq	e80c <main@@Base+0x7c3c>
    e6ec:	ldr	r1, [pc, #1408]	; ec74 <main@@Base+0x80a4>
    e6f0:	mov	r0, r4
    e6f4:	add	r1, pc, r1
    e6f8:	bl	695c <strcmp@plt>
    e6fc:	cmp	r0, #0
    e700:	beq	e8f0 <main@@Base+0x7d20>
    e704:	ldr	r1, [pc, #1388]	; ec78 <main@@Base+0x80a8>
    e708:	mov	r0, r4
    e70c:	add	r1, pc, r1
    e710:	bl	695c <strcmp@plt>
    e714:	cmp	r0, #0
    e718:	beq	e900 <main@@Base+0x7d30>
    e71c:	ldr	r1, [pc, #1368]	; ec7c <main@@Base+0x80ac>
    e720:	mov	r0, r4
    e724:	add	r1, pc, r1
    e728:	bl	695c <strcmp@plt>
    e72c:	subs	r2, r0, #0
    e730:	beq	e854 <main@@Base+0x7c84>
    e734:	ldr	r1, [pc, #1348]	; ec80 <main@@Base+0x80b0>
    e738:	mov	r0, r4
    e73c:	add	r1, pc, r1
    e740:	bl	695c <strcmp@plt>
    e744:	subs	r7, r0, #0
    e748:	beq	e9c4 <main@@Base+0x7df4>
    e74c:	ldr	r1, [pc, #1328]	; ec84 <main@@Base+0x80b4>
    e750:	mov	r0, r4
    e754:	add	r1, pc, r1
    e758:	bl	695c <strcmp@plt>
    e75c:	cmp	r0, #0
    e760:	bne	e838 <main@@Base+0x7c68>
    e764:	mov	r0, r5
    e768:	bl	5e34 <av_bsf_get_by_name@plt>
    e76c:	cmp	r5, #0
    e770:	mov	r7, r0
    e774:	beq	ebe0 <main@@Base+0x8010>
    e778:	cmp	r0, #0
    e77c:	beq	eba8 <main@@Base+0x7fd8>
    e780:	ldr	r1, [pc, #1280]	; ec88 <main@@Base+0x80b8>
    e784:	ldr	r2, [r0]
    e788:	add	r1, pc, r1
    e78c:	mov	r0, #1
    e790:	bl	6a1c <__printf_chk@plt>
    e794:	ldr	r4, [r7, #4]
    e798:	cmp	r4, #0
    e79c:	beq	e7f4 <main@@Base+0x7c24>
    e7a0:	ldr	r1, [pc, #1252]	; ec8c <main@@Base+0x80bc>
    e7a4:	mov	r0, #1
    e7a8:	add	r1, pc, r1
    e7ac:	bl	6a1c <__printf_chk@plt>
    e7b0:	ldr	r0, [r4]
    e7b4:	cmp	r0, #0
    e7b8:	beq	e7e4 <main@@Base+0x7c14>
    e7bc:	ldr	r5, [pc, #1228]	; ec90 <main@@Base+0x80c0>
    e7c0:	add	r5, pc, r5
    e7c4:	bl	6a04 <avcodec_descriptor_get@plt>
    e7c8:	mov	r1, r5
    e7cc:	ldr	r2, [r0, #8]
    e7d0:	mov	r0, #1
    e7d4:	bl	6a1c <__printf_chk@plt>
    e7d8:	ldr	r0, [r4, #4]!
    e7dc:	cmp	r0, #0
    e7e0:	bne	e7c4 <main@@Base+0x7bf4>
    e7e4:	ldr	r1, [pc, #1192]	; ec94 <main@@Base+0x80c4>
    e7e8:	mov	r0, #1
    e7ec:	add	r1, pc, r1
    e7f0:	bl	6a1c <__printf_chk@plt>
    e7f4:	ldr	r0, [r7, #8]
    e7f8:	cmp	r0, #0
    e7fc:	beq	e814 <main@@Base+0x7c44>
    e800:	mov	r1, #256	; 0x100
    e804:	bl	b6d8 <main@@Base+0x4b08>
    e808:	b	e814 <main@@Base+0x7c44>
    e80c:	mov	r0, r5
    e810:	bl	be8c <main@@Base+0x52bc>
    e814:	add	r0, sp, #8
    e818:	bl	5df8 <av_freep@plt>
    e81c:	mov	r0, #0
    e820:	ldr	r2, [sp, #12]
    e824:	ldr	r3, [r6]
    e828:	cmp	r2, r3
    e82c:	bne	ec60 <main@@Base+0x8090>
    e830:	add	sp, sp, #16
    e834:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    e838:	mov	r1, r5
    e83c:	mov	r0, r4
    e840:	bl	183ac <main@@Base+0x117dc>
    e844:	b	e814 <main@@Base+0x7c44>
    e848:	ldr	r4, [pc, #1096]	; ec98 <main@@Base+0x80c8>
    e84c:	add	r4, pc, r4
    e850:	b	e69c <main@@Base+0x7acc>
    e854:	mov	r1, r2
    e858:	mov	r0, r5
    e85c:	bl	6284 <av_guess_format@plt>
    e860:	subs	r4, r0, #0
    e864:	beq	eb7c <main@@Base+0x7fac>
    e868:	ldrd	r2, [r4]
    e86c:	ldr	r1, [pc, #1064]	; ec9c <main@@Base+0x80cc>
    e870:	mov	r0, #1
    e874:	add	r1, pc, r1
    e878:	bl	6a1c <__printf_chk@plt>
    e87c:	ldr	r2, [r4, #12]
    e880:	cmp	r2, #0
    e884:	beq	e898 <main@@Base+0x7cc8>
    e888:	ldr	r1, [pc, #1040]	; eca0 <main@@Base+0x80d0>
    e88c:	mov	r0, #1
    e890:	add	r1, pc, r1
    e894:	bl	6a1c <__printf_chk@plt>
    e898:	ldr	r2, [r4, #8]
    e89c:	cmp	r2, #0
    e8a0:	beq	e8b4 <main@@Base+0x7ce4>
    e8a4:	ldr	r1, [pc, #1016]	; eca4 <main@@Base+0x80d4>
    e8a8:	mov	r0, #1
    e8ac:	add	r1, pc, r1
    e8b0:	bl	6a1c <__printf_chk@plt>
    e8b4:	ldr	r0, [r4, #20]
    e8b8:	cmp	r0, #0
    e8bc:	bne	e958 <main@@Base+0x7d88>
    e8c0:	ldr	r0, [r4, #16]
    e8c4:	cmp	r0, #0
    e8c8:	bne	e9a0 <main@@Base+0x7dd0>
    e8cc:	ldr	r0, [r4, #24]
    e8d0:	cmp	r0, #0
    e8d4:	bne	e97c <main@@Base+0x7dac>
    e8d8:	ldr	r0, [r4, #36]	; 0x24
    e8dc:	cmp	r0, #0
    e8e0:	beq	e814 <main@@Base+0x7c44>
    e8e4:	mov	r1, #1
    e8e8:	bl	b6d8 <main@@Base+0x4b08>
    e8ec:	b	e814 <main@@Base+0x7c44>
    e8f0:	mov	r0, r5
    e8f4:	mov	r1, #1
    e8f8:	bl	be8c <main@@Base+0x52bc>
    e8fc:	b	e814 <main@@Base+0x7c44>
    e900:	mov	r0, r5
    e904:	bl	6368 <av_find_input_format@plt>
    e908:	subs	r4, r0, #0
    e90c:	beq	eb64 <main@@Base+0x7f94>
    e910:	ldrd	r2, [r4]
    e914:	ldr	r1, [pc, #908]	; eca8 <main@@Base+0x80d8>
    e918:	mov	r0, #1
    e91c:	add	r1, pc, r1
    e920:	bl	6a1c <__printf_chk@plt>
    e924:	ldr	r2, [r4, #12]
    e928:	cmp	r2, #0
    e92c:	beq	e940 <main@@Base+0x7d70>
    e930:	ldr	r1, [pc, #884]	; ecac <main@@Base+0x80dc>
    e934:	mov	r0, #1
    e938:	add	r1, pc, r1
    e93c:	bl	6a1c <__printf_chk@plt>
    e940:	ldr	r0, [r4, #20]
    e944:	cmp	r0, #0
    e948:	beq	e814 <main@@Base+0x7c44>
    e94c:	mov	r1, #2
    e950:	bl	b6d8 <main@@Base+0x4b08>
    e954:	b	e814 <main@@Base+0x7c44>
    e958:	bl	6a04 <avcodec_descriptor_get@plt>
    e95c:	cmp	r0, #0
    e960:	beq	e8c0 <main@@Base+0x7cf0>
    e964:	ldr	r1, [pc, #836]	; ecb0 <main@@Base+0x80e0>
    e968:	ldr	r2, [r0, #8]
    e96c:	add	r1, pc, r1
    e970:	mov	r0, #1
    e974:	bl	6a1c <__printf_chk@plt>
    e978:	b	e8c0 <main@@Base+0x7cf0>
    e97c:	bl	6a04 <avcodec_descriptor_get@plt>
    e980:	cmp	r0, #0
    e984:	beq	e8d8 <main@@Base+0x7d08>
    e988:	ldr	r1, [pc, #804]	; ecb4 <main@@Base+0x80e4>
    e98c:	ldr	r2, [r0, #8]
    e990:	add	r1, pc, r1
    e994:	mov	r0, #1
    e998:	bl	6a1c <__printf_chk@plt>
    e99c:	b	e8d8 <main@@Base+0x7d08>
    e9a0:	bl	6a04 <avcodec_descriptor_get@plt>
    e9a4:	cmp	r0, #0
    e9a8:	beq	e8cc <main@@Base+0x7cfc>
    e9ac:	ldr	r1, [pc, #772]	; ecb8 <main@@Base+0x80e8>
    e9b0:	ldr	r2, [r0, #8]
    e9b4:	add	r1, pc, r1
    e9b8:	mov	r0, #1
    e9bc:	bl	6a1c <__printf_chk@plt>
    e9c0:	b	e8cc <main@@Base+0x7cfc>
    e9c4:	mov	r0, r5
    e9c8:	bl	63e0 <avfilter_get_by_name@plt>
    e9cc:	cmp	r5, #0
    e9d0:	mov	r8, r0
    e9d4:	beq	ebf8 <main@@Base+0x8028>
    e9d8:	cmp	r0, #0
    e9dc:	beq	ebc0 <main@@Base+0x7ff0>
    e9e0:	ldr	r1, [pc, #724]	; ecbc <main@@Base+0x80ec>
    e9e4:	ldr	r2, [r0]
    e9e8:	add	r1, pc, r1
    e9ec:	mov	r0, #1
    e9f0:	bl	6a1c <__printf_chk@plt>
    e9f4:	ldr	r2, [r8, #4]
    e9f8:	cmp	r2, #0
    e9fc:	beq	ea10 <main@@Base+0x7e40>
    ea00:	ldr	r1, [pc, #696]	; ecc0 <main@@Base+0x80f0>
    ea04:	mov	r0, #1
    ea08:	add	r1, pc, r1
    ea0c:	bl	6a1c <__printf_chk@plt>
    ea10:	ldr	r3, [r8, #20]
    ea14:	tst	r3, #4
    ea18:	bne	eb94 <main@@Base+0x7fc4>
    ea1c:	ldr	r1, [pc, #672]	; ecc4 <main@@Base+0x80f4>
    ea20:	mov	r0, #1
    ea24:	add	r1, pc, r1
    ea28:	bl	6a1c <__printf_chk@plt>
    ea2c:	ldr	r0, [r8, #8]
    ea30:	bl	6470 <avfilter_pad_count@plt>
    ea34:	subs	r9, r0, #0
    ea38:	ble	ec38 <main@@Base+0x8068>
    ea3c:	mov	r4, #0
    ea40:	ldr	sl, [pc, #640]	; ecc8 <main@@Base+0x80f8>
    ea44:	add	sl, pc, sl
    ea48:	mov	r1, r4
    ea4c:	ldr	r0, [r8, #8]
    ea50:	bl	5e1c <avfilter_pad_get_name@plt>
    ea54:	mov	r1, r4
    ea58:	mov	r5, r0
    ea5c:	ldr	r0, [r8, #8]
    ea60:	bl	5fc0 <avfilter_pad_get_type@plt>
    ea64:	bl	6af4 <av_get_media_type_string@plt>
    ea68:	mov	r2, r4
    ea6c:	str	r0, [sp]
    ea70:	mov	r3, r5
    ea74:	mov	r1, sl
    ea78:	add	r4, r4, #1
    ea7c:	mov	r0, #1
    ea80:	bl	6a1c <__printf_chk@plt>
    ea84:	cmp	r9, r4
    ea88:	bne	ea48 <main@@Base+0x7e78>
    ea8c:	ldr	r3, [r8, #20]
    ea90:	tst	r3, #1
    ea94:	beq	eaa8 <main@@Base+0x7ed8>
    ea98:	ldr	r1, [pc, #556]	; eccc <main@@Base+0x80fc>
    ea9c:	mov	r0, #1
    eaa0:	add	r1, pc, r1
    eaa4:	bl	6a1c <__printf_chk@plt>
    eaa8:	ldr	r1, [pc, #544]	; ecd0 <main@@Base+0x8100>
    eaac:	mov	r0, #1
    eab0:	add	r1, pc, r1
    eab4:	bl	6a1c <__printf_chk@plt>
    eab8:	ldr	r0, [r8, #12]
    eabc:	bl	6470 <avfilter_pad_count@plt>
    eac0:	subs	r5, r0, #0
    eac4:	ble	ec10 <main@@Base+0x8040>
    eac8:	ldr	r9, [pc, #516]	; ecd4 <main@@Base+0x8104>
    eacc:	add	r9, pc, r9
    ead0:	mov	r1, r7
    ead4:	ldr	r0, [r8, #12]
    ead8:	bl	5e1c <avfilter_pad_get_name@plt>
    eadc:	mov	r1, r7
    eae0:	mov	r4, r0
    eae4:	ldr	r0, [r8, #12]
    eae8:	bl	5fc0 <avfilter_pad_get_type@plt>
    eaec:	bl	6af4 <av_get_media_type_string@plt>
    eaf0:	mov	r2, r7
    eaf4:	str	r0, [sp]
    eaf8:	mov	r3, r4
    eafc:	mov	r1, r9
    eb00:	add	r7, r7, #1
    eb04:	mov	r0, #1
    eb08:	bl	6a1c <__printf_chk@plt>
    eb0c:	cmp	r5, r7
    eb10:	bne	ead0 <main@@Base+0x7f00>
    eb14:	ldr	r3, [r8, #20]
    eb18:	tst	r3, #2
    eb1c:	beq	eb30 <main@@Base+0x7f60>
    eb20:	ldr	r1, [pc, #432]	; ecd8 <main@@Base+0x8108>
    eb24:	mov	r0, #1
    eb28:	add	r1, pc, r1
    eb2c:	bl	6a1c <__printf_chk@plt>
    eb30:	ldr	r0, [r8, #16]
    eb34:	cmp	r0, #0
    eb38:	beq	eb44 <main@@Base+0x7f74>
    eb3c:	ldr	r1, [pc, #408]	; ecdc <main@@Base+0x810c>
    eb40:	bl	b6d8 <main@@Base+0x4b08>
    eb44:	ldr	r3, [r8, #20]
    eb48:	tst	r3, #196608	; 0x30000
    eb4c:	beq	e814 <main@@Base+0x7c44>
    eb50:	ldr	r1, [pc, #392]	; ece0 <main@@Base+0x8110>
    eb54:	mov	r0, #1
    eb58:	add	r1, pc, r1
    eb5c:	bl	6a1c <__printf_chk@plt>
    eb60:	b	e814 <main@@Base+0x7c44>
    eb64:	ldr	r2, [pc, #376]	; ece4 <main@@Base+0x8114>
    eb68:	mov	r3, r5
    eb6c:	add	r2, pc, r2
    eb70:	mov	r1, #16
    eb74:	bl	6188 <av_log@plt>
    eb78:	b	e814 <main@@Base+0x7c44>
    eb7c:	ldr	r2, [pc, #356]	; ece8 <main@@Base+0x8118>
    eb80:	mov	r3, r5
    eb84:	add	r2, pc, r2
    eb88:	mov	r1, #16
    eb8c:	bl	6188 <av_log@plt>
    eb90:	b	e814 <main@@Base+0x7c44>
    eb94:	ldr	r1, [pc, #336]	; ecec <main@@Base+0x811c>
    eb98:	mov	r0, #1
    eb9c:	add	r1, pc, r1
    eba0:	bl	6a1c <__printf_chk@plt>
    eba4:	b	ea1c <main@@Base+0x7e4c>
    eba8:	ldr	r2, [pc, #320]	; ecf0 <main@@Base+0x8120>
    ebac:	mov	r3, r5
    ebb0:	add	r2, pc, r2
    ebb4:	mov	r1, #16
    ebb8:	bl	6188 <av_log@plt>
    ebbc:	b	e814 <main@@Base+0x7c44>
    ebc0:	ldr	r2, [pc, #300]	; ecf4 <main@@Base+0x8124>
    ebc4:	mov	r3, r5
    ebc8:	add	r2, pc, r2
    ebcc:	mov	r1, #16
    ebd0:	bl	6188 <av_log@plt>
    ebd4:	b	e814 <main@@Base+0x7c44>
    ebd8:	mvn	r0, #11
    ebdc:	b	e820 <main@@Base+0x7c50>
    ebe0:	ldr	r2, [pc, #272]	; ecf8 <main@@Base+0x8128>
    ebe4:	mov	r0, r5
    ebe8:	add	r2, pc, r2
    ebec:	mov	r1, #16
    ebf0:	bl	6188 <av_log@plt>
    ebf4:	b	e814 <main@@Base+0x7c44>
    ebf8:	ldr	r2, [pc, #252]	; ecfc <main@@Base+0x812c>
    ebfc:	mov	r0, r5
    ec00:	add	r2, pc, r2
    ec04:	mov	r1, #16
    ec08:	bl	6188 <av_log@plt>
    ec0c:	b	e814 <main@@Base+0x7c44>
    ec10:	ldr	r3, [r8, #20]
    ec14:	tst	r3, #2
    ec18:	bne	eb20 <main@@Base+0x7f50>
    ec1c:	cmp	r5, #0
    ec20:	bne	eb30 <main@@Base+0x7f60>
    ec24:	ldr	r1, [pc, #212]	; ed00 <main@@Base+0x8130>
    ec28:	mov	r0, #1
    ec2c:	add	r1, pc, r1
    ec30:	bl	6a1c <__printf_chk@plt>
    ec34:	b	eb30 <main@@Base+0x7f60>
    ec38:	ldr	r3, [r8, #20]
    ec3c:	tst	r3, #1
    ec40:	bne	ea98 <main@@Base+0x7ec8>
    ec44:	cmp	r9, #0
    ec48:	bne	eaa8 <main@@Base+0x7ed8>
    ec4c:	ldr	r1, [pc, #176]	; ed04 <main@@Base+0x8134>
    ec50:	mov	r0, #1
    ec54:	add	r1, pc, r1
    ec58:	bl	6a1c <__printf_chk@plt>
    ec5c:	b	eaa8 <main@@Base+0x7ed8>
    ec60:	bl	5e7c <__stack_chk_fail@plt>
    ec64:	andeq	sl, r2, r0, lsr #8
    ec68:	andeq	r0, r0, r8, asr r5
    ec6c:	andeq	r0, r0, r0, lsr r5
    ec70:	andeq	r7, r1, ip, lsl #31
    ec74:	andeq	r5, r1, r0, asr ip
    ec78:	andeq	r5, r1, r0, asr #24
    ec7c:	andeq	r5, r1, r8, ror ip
    ec80:	strdeq	r5, [r1], -r0
    ec84:	andeq	r5, r1, r4, lsr #28
    ec88:	andeq	r5, r1, r0, asr #28
    ec8c:	andeq	r5, r1, r8, lsr lr
    ec90:			; <UNDEFINED> instruction: 0x00016db8
    ec94:	andeq	r7, r1, ip, asr #9
    ec98:	andeq	r6, r1, r8, lsl ip
    ec9c:	andeq	r5, r1, r0, lsr fp
    eca0:	strdeq	r5, [r1], -r0
    eca4:	andeq	r5, r1, r8, lsl #22
    eca8:	andeq	r5, r1, r0, asr sl
    ecac:	andeq	r5, r1, r8, asr #20
    ecb0:	andeq	r5, r1, ip, asr sl
    ecb4:	andeq	r5, r1, r8, ror sl
    ecb8:	andeq	r5, r1, r4, lsr sl
    ecbc:	andeq	r5, r1, r0, lsl #21
    ecc0:	andeq	r5, r1, ip, asr r6
    ecc4:	andeq	r5, r1, r0, ror sl
    ecc8:	andeq	r5, r1, r0, ror #20
    eccc:	andeq	r5, r1, ip, lsl sl
    ecd0:	andeq	r5, r1, r8, asr sl
    ecd4:	ldrdeq	r5, [r1], -r8
    ecd8:	muleq	r1, r4, r9
    ecdc:	andeq	r0, r1, r8, lsl r0
    ece0:	ldrdeq	r5, [r1], -ip
    ece4:	andeq	r5, r1, r8, ror #15
    ece8:	ldrdeq	r5, [r1], -r0
    ecec:	ldrdeq	r5, [r1], -r8
    ecf0:	strdeq	r5, [r1], -r4
    ecf4:	andeq	r5, r1, r8, lsl #17
    ecf8:	muleq	r1, r4, r9
    ecfc:	andeq	r5, r1, r4, lsr r8
    ed00:	andeq	r5, r1, ip, ror #17
    ed04:	muleq	r1, r4, r8
    ed08:	push	{r4, r5, r6, lr}
    ed0c:	ldr	r3, [pc, #128]	; ed94 <main@@Base+0x81c4>
    ed10:	ldr	r1, [pc, #128]	; ed98 <main@@Base+0x81c8>
    ed14:	add	r3, pc, r3
    ed18:	ldr	r6, [r3, r1]
    ed1c:	sub	sp, sp, #8
    ed20:	ldr	r1, [r6]
    ed24:	ldr	r2, [pc, #112]	; ed9c <main@@Base+0x81cc>
    ed28:	str	r1, [sp, #4]
    ed2c:	ldr	r4, [r3, r2]
    ed30:	ldr	r0, [r4]
    ed34:	bl	64c4 <getc@plt>
    ed38:	sub	r3, r0, #97	; 0x61
    ed3c:	cmp	r3, #25
    ed40:	movhi	r5, r0
    ed44:	eorls	r5, r0, #32
    ed48:	sub	r5, r5, #89	; 0x59
    ed4c:	clz	r5, r5
    ed50:	cmp	r0, #10
    ed54:	cmnne	r0, #1
    ed58:	lsr	r5, r5, #5
    ed5c:	beq	ed74 <main@@Base+0x81a4>
    ed60:	ldr	r0, [r4]
    ed64:	bl	64c4 <getc@plt>
    ed68:	cmp	r0, #10
    ed6c:	cmnne	r0, #1
    ed70:	bne	ed60 <main@@Base+0x8190>
    ed74:	ldr	r2, [sp, #4]
    ed78:	ldr	r3, [r6]
    ed7c:	mov	r0, r5
    ed80:	cmp	r2, r3
    ed84:	bne	ed90 <main@@Base+0x81c0>
    ed88:	add	sp, sp, #8
    ed8c:	pop	{r4, r5, r6, pc}
    ed90:	bl	5e7c <__stack_chk_fail@plt>
    ed94:	andeq	r9, r2, r0, lsl #27
    ed98:	andeq	r0, r0, r8, asr r5
    ed9c:	andeq	r0, r0, ip, lsr #10
    eda0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eda4:	ldr	ip, [pc, #456]	; ef74 <main@@Base+0x83a4>
    eda8:	ldr	lr, [pc, #456]	; ef78 <main@@Base+0x83a8>
    edac:	add	ip, pc, ip
    edb0:	mov	r6, r0
    edb4:	mov	r0, ip
    edb8:	ldr	r0, [ip, lr]
    edbc:	sub	sp, sp, #60	; 0x3c
    edc0:	mov	ip, r0
    edc4:	str	r0, [sp, #32]
    edc8:	ldr	r0, [pc, #428]	; ef7c <main@@Base+0x83ac>
    edcc:	ldr	ip, [ip]
    edd0:	add	r0, pc, r0
    edd4:	mov	r4, r3
    edd8:	mov	sl, r1
    eddc:	mov	r9, r2
    ede0:	str	ip, [sp, #52]	; 0x34
    ede4:	ldr	fp, [sp, #96]	; 0x60
    ede8:	bl	69c8 <getenv@plt>
    edec:	mov	r5, r0
    edf0:	ldr	r0, [pc, #392]	; ef80 <main@@Base+0x83b0>
    edf4:	str	r5, [sp, #40]	; 0x28
    edf8:	add	r0, pc, r0
    edfc:	bl	69c8 <getenv@plt>
    ee00:	ldr	r3, [pc, #380]	; ef84 <main@@Base+0x83b4>
    ee04:	cmp	r4, #0
    ee08:	add	r3, pc, r3
    ee0c:	str	r0, [sp, #44]	; 0x2c
    ee10:	str	r3, [sp, #48]	; 0x30
    ee14:	bne	ef34 <main@@Base+0x8364>
    ee18:	ldr	r3, [pc, #360]	; ef88 <main@@Base+0x83b8>
    ee1c:	cmp	r5, #0
    ee20:	add	r3, pc, r3
    ee24:	str	r3, [sp, #28]
    ee28:	ldr	r3, [pc, #348]	; ef8c <main@@Base+0x83bc>
    ee2c:	add	r8, sp, #44	; 0x2c
    ee30:	add	r3, pc, r3
    ee34:	str	r3, [sp, #24]
    ee38:	ldr	r3, [pc, #336]	; ef90 <main@@Base+0x83c0>
    ee3c:	add	r3, pc, r3
    ee40:	str	r3, [sp, #36]	; 0x24
    ee44:	beq	eec4 <main@@Base+0x82f4>
    ee48:	cmp	r4, #1
    ee4c:	beq	eeec <main@@Base+0x831c>
    ee50:	ldr	r7, [pc, #316]	; ef94 <main@@Base+0x83c4>
    ee54:	add	r7, pc, r7
    ee58:	ldr	r3, [sp, #28]
    ee5c:	mov	r2, #1
    ee60:	str	r3, [sp]
    ee64:	mov	r1, sl
    ee68:	mvn	r3, #0
    ee6c:	stmib	sp, {r5, r7, r9}
    ee70:	mov	r0, r6
    ee74:	bl	62d8 <__snprintf_chk@plt>
    ee78:	ldr	r1, [sp, #24]
    ee7c:	mov	r0, r6
    ee80:	bl	5d20 <fopen64@plt>
    ee84:	clz	r3, r0
    ee88:	cmp	fp, #0
    ee8c:	lsr	r3, r3, #5
    ee90:	movne	r2, r3
    ee94:	moveq	r2, #0
    ee98:	cmp	r2, #0
    ee9c:	bne	eef8 <main@@Base+0x8328>
    eea0:	add	r4, r4, #1
    eea4:	cmp	r4, #2
    eea8:	movgt	r3, #0
    eeac:	andle	r3, r3, #1
    eeb0:	cmp	r3, #0
    eeb4:	beq	eed0 <main@@Base+0x8300>
    eeb8:	ldr	r5, [r8], #4
    eebc:	cmp	r5, #0
    eec0:	bne	ee48 <main@@Base+0x8278>
    eec4:	mov	r0, r5
    eec8:	mov	r3, #1
    eecc:	b	eea0 <main@@Base+0x82d0>
    eed0:	ldr	r3, [sp, #32]
    eed4:	ldr	r2, [sp, #52]	; 0x34
    eed8:	ldr	r3, [r3]
    eedc:	cmp	r2, r3
    eee0:	bne	ef70 <main@@Base+0x83a0>
    eee4:	add	sp, sp, #60	; 0x3c
    eee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eeec:	ldr	r7, [pc, #164]	; ef98 <main@@Base+0x83c8>
    eef0:	add	r7, pc, r7
    eef4:	b	ee58 <main@@Base+0x8288>
    eef8:	ldr	r3, [sp, #36]	; 0x24
    eefc:	mov	r2, #1
    ef00:	str	r3, [sp]
    ef04:	mov	r1, sl
    ef08:	mvn	r3, #0
    ef0c:	str	r9, [sp, #16]
    ef10:	stmib	sp, {r5, r7, fp}
    ef14:	mov	r0, r6
    ef18:	bl	62d8 <__snprintf_chk@plt>
    ef1c:	ldr	r1, [sp, #24]
    ef20:	mov	r0, r6
    ef24:	bl	5d20 <fopen64@plt>
    ef28:	clz	r3, r0
    ef2c:	lsr	r3, r3, #5
    ef30:	b	eea0 <main@@Base+0x82d0>
    ef34:	mov	r2, sl
    ef38:	mov	r1, r9
    ef3c:	mov	r0, r6
    ef40:	bl	6404 <av_strlcpy@plt>
    ef44:	ldr	r3, [sp, #32]
    ef48:	ldr	r2, [sp, #52]	; 0x34
    ef4c:	ldr	r3, [r3]
    ef50:	cmp	r2, r3
    ef54:	bne	ef70 <main@@Base+0x83a0>
    ef58:	mov	r0, r6
    ef5c:	ldr	r1, [pc, #56]	; ef9c <main@@Base+0x83cc>
    ef60:	add	r1, pc, r1
    ef64:	add	sp, sp, #60	; 0x3c
    ef68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ef6c:	b	5d20 <fopen64@plt>
    ef70:	bl	5e7c <__stack_chk_fail@plt>
    ef74:	andeq	r9, r2, r8, ror #25
    ef78:	andeq	r0, r0, r8, asr r5
    ef7c:	andeq	r5, r1, r4, lsr r8
    ef80:	andeq	r5, r1, ip, lsl r8
    ef84:	andeq	r5, r1, r4, lsl r8
    ef88:	andeq	r5, r1, r0, lsl r8
    ef8c:	ldrdeq	r7, [r1], -r4
    ef90:	andeq	r5, r1, r8, lsl #16
    ef94:	andeq	r6, r1, r0, lsl r6
    ef98:	andeq	r5, r1, r8, lsl #14
    ef9c:	andeq	r7, r1, r4, lsr #13
    efa0:	push	{r4, r5, r6, r7, lr}
    efa4:	ldr	r3, [pc, #100]	; f010 <main@@Base+0x8440>
    efa8:	ldr	ip, [pc, #100]	; f014 <main@@Base+0x8444>
    efac:	add	r3, pc, r3
    efb0:	ldr	r4, [r3, ip]
    efb4:	sub	sp, sp, #12
    efb8:	ldr	r3, [r4]
    efbc:	mov	r6, r0
    efc0:	mov	r7, r2
    efc4:	str	r3, [sp, #4]
    efc8:	bl	638c <avformat_match_stream_specifier@plt>
    efcc:	subs	r5, r0, #0
    efd0:	blt	eff0 <main@@Base+0x8420>
    efd4:	ldr	r2, [sp, #4]
    efd8:	ldr	r3, [r4]
    efdc:	mov	r0, r5
    efe0:	cmp	r2, r3
    efe4:	bne	f00c <main@@Base+0x843c>
    efe8:	add	sp, sp, #12
    efec:	pop	{r4, r5, r6, r7, pc}
    eff0:	ldr	r2, [pc, #32]	; f018 <main@@Base+0x8448>
    eff4:	mov	r3, r7
    eff8:	mov	r0, r6
    effc:	add	r2, pc, r2
    f000:	mov	r1, #16
    f004:	bl	6188 <av_log@plt>
    f008:	b	efd4 <main@@Base+0x8404>
    f00c:	bl	5e7c <__stack_chk_fail@plt>
    f010:	andeq	r9, r2, r8, ror #21
    f014:	andeq	r0, r0, r8, asr r5
    f018:	andeq	r5, r1, ip, asr r6
    f01c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f020:	mov	r4, r2
    f024:	mov	ip, #0
    f028:	sub	sp, sp, #44	; 0x2c
    f02c:	str	r2, [sp, #12]
    f030:	ldr	r2, [pc, #588]	; f284 <main@@Base+0x86b4>
    f034:	ldr	lr, [pc, #588]	; f288 <main@@Base+0x86b8>
    f038:	add	r2, pc, r2
    f03c:	ldr	lr, [r2, lr]
    f040:	ldr	r4, [r4, #8]
    f044:	str	lr, [sp, #20]
    f048:	ldr	lr, [lr]
    f04c:	cmp	r4, ip
    f050:	movne	r5, #33	; 0x21
    f054:	moveq	r5, #34	; 0x22
    f058:	movne	r7, #9
    f05c:	moveq	r7, #10
    f060:	movne	r4, #17
    f064:	moveq	r4, #18
    f068:	movne	sl, #1
    f06c:	moveq	sl, #2
    f070:	ldr	r9, [sp, #80]	; 0x50
    f074:	mov	r8, r0
    f078:	mov	r6, r1
    f07c:	str	r3, [sp, #8]
    f080:	str	lr, [sp, #36]	; 0x24
    f084:	str	ip, [sp, #28]
    f088:	bl	608c <avcodec_get_class@plt>
    f08c:	cmp	r9, #0
    f090:	str	r0, [sp, #32]
    f094:	beq	f23c <main@@Base+0x866c>
    f098:	ldr	r3, [sp, #8]
    f09c:	ldr	r3, [r3, #176]	; 0xb0
    f0a0:	ldr	r3, [r3]
    f0a4:	cmp	r3, #1
    f0a8:	beq	f25c <main@@Base+0x868c>
    f0ac:	cmp	r3, #3
    f0b0:	beq	f22c <main@@Base+0x865c>
    f0b4:	cmp	r3, #0
    f0b8:	moveq	r3, #118	; 0x76
    f0bc:	movne	r3, #0
    f0c0:	moveq	sl, r4
    f0c4:	str	r3, [sp, #16]
    f0c8:	mov	r4, #0
    f0cc:	ldr	r7, [pc, #440]	; f28c <main@@Base+0x86bc>
    f0d0:	add	r7, pc, r7
    f0d4:	mov	r2, r4
    f0d8:	mov	r3, #2
    f0dc:	mov	r1, r7
    f0e0:	mov	r0, r8
    f0e4:	bl	6878 <av_dict_get@plt>
    f0e8:	subs	r4, r0, #0
    f0ec:	beq	f20c <main@@Base+0x863c>
    f0f0:	ldr	r6, [r4]
    f0f4:	mov	r1, #58	; 0x3a
    f0f8:	mov	r0, r6
    f0fc:	bl	662c <strchr@plt>
    f100:	subs	r5, r0, #0
    f104:	beq	f134 <main@@Base+0x8564>
    f108:	add	r2, r5, #1
    f10c:	ldr	r1, [sp, #8]
    f110:	ldr	r0, [sp, #12]
    f114:	bl	efa0 <main@@Base+0x83d0>
    f118:	cmp	r0, #0
    f11c:	beq	f0d4 <main@@Base+0x8504>
    f120:	cmp	r0, #1
    f124:	bne	f278 <main@@Base+0x86a8>
    f128:	mov	r3, #0
    f12c:	strb	r3, [r5]
    f130:	ldr	r6, [r4]
    f134:	mov	r3, #2
    f138:	add	fp, sp, #32
    f13c:	str	r3, [sp]
    f140:	mov	r2, #0
    f144:	mov	r1, r6
    f148:	mov	r0, fp
    f14c:	mov	r3, sl
    f150:	bl	6224 <av_opt_find@plt>
    f154:	adds	r2, r0, #0
    f158:	movne	r2, #1
    f15c:	cmp	r9, #0
    f160:	moveq	r2, #1
    f164:	cmp	r2, #0
    f168:	beq	f18c <main@@Base+0x85bc>
    f16c:	ldm	r4, {r1, r2}
    f170:	mov	r3, #0
    f174:	add	r0, sp, #28
    f178:	bl	6704 <av_dict_set@plt>
    f17c:	cmp	r5, #0
    f180:	movne	r3, #58	; 0x3a
    f184:	strbne	r3, [r5]
    f188:	b	f0d4 <main@@Base+0x8504>
    f18c:	ldr	r3, [r9, #44]	; 0x2c
    f190:	ldr	r1, [r4]
    f194:	cmp	r3, #0
    f198:	beq	f1bc <main@@Base+0x85ec>
    f19c:	mov	r3, #2
    f1a0:	add	r0, r9, #44	; 0x2c
    f1a4:	str	r3, [sp]
    f1a8:	mov	r3, sl
    f1ac:	bl	6224 <av_opt_find@plt>
    f1b0:	cmp	r0, #0
    f1b4:	ldreq	r1, [r4]
    f1b8:	bne	f16c <main@@Base+0x859c>
    f1bc:	ldrb	r3, [r1]
    f1c0:	ldr	r2, [sp, #16]
    f1c4:	cmp	r3, r2
    f1c8:	bne	f17c <main@@Base+0x85ac>
    f1cc:	mov	r3, #2
    f1d0:	add	r1, r1, #1
    f1d4:	str	r3, [sp]
    f1d8:	mov	r0, fp
    f1dc:	mov	r3, sl
    f1e0:	mov	r2, #0
    f1e4:	bl	6224 <av_opt_find@plt>
    f1e8:	cmp	r0, #0
    f1ec:	beq	f17c <main@@Base+0x85ac>
    f1f0:	ldr	r1, [r4]
    f1f4:	mov	r3, #0
    f1f8:	add	r1, r1, #1
    f1fc:	ldr	r2, [r4, #4]
    f200:	add	r0, sp, #28
    f204:	bl	6704 <av_dict_set@plt>
    f208:	b	f17c <main@@Base+0x85ac>
    f20c:	ldr	r3, [sp, #20]
    f210:	ldr	r2, [sp, #36]	; 0x24
    f214:	ldr	r3, [r3]
    f218:	ldr	r0, [sp, #28]
    f21c:	cmp	r2, r3
    f220:	bne	f280 <main@@Base+0x86b0>
    f224:	add	sp, sp, #44	; 0x2c
    f228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f22c:	mov	r3, #115	; 0x73
    f230:	mov	sl, r5
    f234:	str	r3, [sp, #16]
    f238:	b	f0c8 <main@@Base+0x84f8>
    f23c:	ldr	r3, [sp, #12]
    f240:	mov	r0, r6
    f244:	ldr	r3, [r3, #8]
    f248:	cmp	r3, #0
    f24c:	beq	f26c <main@@Base+0x869c>
    f250:	bl	5eb8 <avcodec_find_encoder@plt>
    f254:	mov	r9, r0
    f258:	b	f098 <main@@Base+0x84c8>
    f25c:	mov	r3, #97	; 0x61
    f260:	mov	sl, r7
    f264:	str	r3, [sp, #16]
    f268:	b	f0c8 <main@@Base+0x84f8>
    f26c:	bl	6458 <avcodec_find_decoder@plt>
    f270:	mov	r9, r0
    f274:	b	f098 <main@@Base+0x84c8>
    f278:	mov	r0, #1
    f27c:	bl	a954 <main@@Base+0x3d84>
    f280:	bl	5e7c <__stack_chk_fail@plt>
    f284:	andeq	r9, r2, ip, asr sl
    f288:	andeq	r0, r0, r8, asr r5
    f28c:	muleq	r1, r4, r3
    f290:	push	{r4, r5, r6, r7, r8, r9, lr}
    f294:	ldr	r3, [pc, #184]	; f354 <main@@Base+0x8784>
    f298:	ldr	r2, [pc, #184]	; f358 <main@@Base+0x8788>
    f29c:	add	r3, pc, r3
    f2a0:	ldr	r9, [r3, r2]
    f2a4:	mov	r5, r0
    f2a8:	ldr	r0, [r0, #24]
    f2ac:	ldr	r2, [r9]
    f2b0:	sub	sp, sp, #20
    f2b4:	cmp	r0, #0
    f2b8:	str	r2, [sp, #12]
    f2bc:	moveq	r6, r0
    f2c0:	beq	f320 <main@@Base+0x8750>
    f2c4:	mov	r7, r1
    f2c8:	mov	r1, #4
    f2cc:	bl	60b0 <av_mallocz_array@plt>
    f2d0:	subs	r6, r0, #0
    f2d4:	beq	f33c <main@@Base+0x876c>
    f2d8:	ldr	r3, [r5, #24]
    f2dc:	cmp	r3, #0
    f2e0:	movne	r4, #0
    f2e4:	movne	r8, r4
    f2e8:	beq	f320 <main@@Base+0x8750>
    f2ec:	ldr	r3, [r5, #28]
    f2f0:	mov	r2, r5
    f2f4:	ldr	r3, [r3, r4, lsl #2]
    f2f8:	mov	r0, r7
    f2fc:	ldr	r1, [r3, #176]	; 0xb0
    f300:	ldr	r1, [r1, #4]
    f304:	str	r8, [sp]
    f308:	bl	f01c <main@@Base+0x844c>
    f30c:	ldr	r3, [r5, #24]
    f310:	str	r0, [r6, r4, lsl #2]
    f314:	add	r4, r4, #1
    f318:	cmp	r3, r4
    f31c:	bhi	f2ec <main@@Base+0x871c>
    f320:	ldr	r2, [sp, #12]
    f324:	ldr	r3, [r9]
    f328:	mov	r0, r6
    f32c:	cmp	r2, r3
    f330:	bne	f350 <main@@Base+0x8780>
    f334:	add	sp, sp, #20
    f338:	pop	{r4, r5, r6, r7, r8, r9, pc}
    f33c:	ldr	r2, [pc, #24]	; f35c <main@@Base+0x878c>
    f340:	mov	r1, #16
    f344:	add	r2, pc, r2
    f348:	bl	6188 <av_log@plt>
    f34c:	b	f320 <main@@Base+0x8750>
    f350:	bl	5e7c <__stack_chk_fail@plt>
    f354:	strdeq	r9, [r2], -r8
    f358:	andeq	r0, r0, r8, asr r5
    f35c:	andeq	r5, r1, r4, lsr r3
    f360:	push	{r4, r5, r6, r7, r8, lr}
    f364:	ldr	ip, [pc, #208]	; f43c <main@@Base+0x886c>
    f368:	ldr	lr, [pc, #208]	; f440 <main@@Base+0x8870>
    f36c:	add	ip, pc, ip
    f370:	ldr	r5, [ip, lr]
    f374:	mov	r6, r0
    f378:	mov	r0, ip
    f37c:	ldr	ip, [r5]
    f380:	sub	sp, sp, #8
    f384:	mvn	r0, #-2147483648	; 0x80000000
    f388:	mov	r4, r3
    f38c:	mov	r7, r2
    f390:	str	ip, [sp, #4]
    f394:	mov	r8, r1
    f398:	bl	21dd4 <vc_dispmanx_send_command_reply@@Base+0x198>
    f39c:	cmp	r0, r4
    f3a0:	ble	f404 <main@@Base+0x8834>
    f3a4:	ldr	r3, [r7]
    f3a8:	cmp	r3, r4
    f3ac:	blt	f3cc <main@@Base+0x87fc>
    f3b0:	ldr	r2, [sp, #4]
    f3b4:	ldr	r3, [r5]
    f3b8:	mov	r0, r6
    f3bc:	cmp	r2, r3
    f3c0:	bne	f420 <main@@Base+0x8850>
    f3c4:	add	sp, sp, #8
    f3c8:	pop	{r4, r5, r6, r7, r8, pc}
    f3cc:	mov	r0, r6
    f3d0:	mov	r2, r8
    f3d4:	mov	r1, r4
    f3d8:	bl	611c <av_realloc_array@plt>
    f3dc:	subs	r6, r0, #0
    f3e0:	beq	f424 <main@@Base+0x8854>
    f3e4:	ldr	r0, [r7]
    f3e8:	mov	r1, #0
    f3ec:	sub	r2, r4, r0
    f3f0:	mul	r2, r8, r2
    f3f4:	mla	r0, r8, r0, r6
    f3f8:	bl	62e4 <memset@plt>
    f3fc:	str	r4, [r7]
    f400:	b	f3b0 <main@@Base+0x87e0>
    f404:	ldr	r2, [pc, #56]	; f444 <main@@Base+0x8874>
    f408:	mov	r0, #0
    f40c:	add	r2, pc, r2
    f410:	mov	r1, #16
    f414:	bl	6188 <av_log@plt>
    f418:	mov	r0, #1
    f41c:	bl	a954 <main@@Base+0x3d84>
    f420:	bl	5e7c <__stack_chk_fail@plt>
    f424:	ldr	r2, [pc, #28]	; f448 <main@@Base+0x8878>
    f428:	mov	r1, #16
    f42c:	add	r2, pc, r2
    f430:	bl	6188 <av_log@plt>
    f434:	mov	r0, #1
    f438:	bl	a954 <main@@Base+0x3d84>
    f43c:	andeq	r9, r2, r8, lsr #14
    f440:	andeq	r0, r0, r8, asr r5
    f444:	muleq	r1, r8, r2
    f448:	andeq	r5, r1, r8, lsl #5
    f44c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f450:	mov	r5, r1
    f454:	mov	r7, r2
    f458:	ldr	r1, [pc, #664]	; f6f8 <main@@Base+0x8b28>
    f45c:	ldr	ip, [pc, #664]	; f6fc <main@@Base+0x8b2c>
    f460:	add	r1, pc, r1
    f464:	ldr	r2, [r5]
    f468:	ldr	r6, [r1, ip]
    f46c:	ldr	r4, [r7]
    f470:	tst	r2, #49152	; 0xc000
    f474:	ldr	ip, [r6]
    f478:	sub	sp, sp, #84	; 0x54
    f47c:	addne	r4, r0, r4
    f480:	tst	r2, #32768	; 0x8000
    f484:	mov	sl, r0
    f488:	mov	r8, r3
    f48c:	str	ip, [sp, #76]	; 0x4c
    f490:	ldr	r9, [sp, #120]	; 0x78
    f494:	bne	f53c <main@@Base+0x896c>
    f498:	tst	r2, #8
    f49c:	bne	f5a0 <main@@Base+0x89d0>
    f4a0:	tst	r2, #130	; 0x82
    f4a4:	bne	f4f4 <main@@Base+0x8924>
    f4a8:	tst	r2, #1024	; 0x400
    f4ac:	bne	f5f0 <main@@Base+0x8a20>
    f4b0:	tst	r2, #65536	; 0x10000
    f4b4:	bne	f61c <main@@Base+0x8a4c>
    f4b8:	tst	r2, #256	; 0x100
    f4bc:	bne	f5c8 <main@@Base+0x89f8>
    f4c0:	ands	fp, r2, #131072	; 0x20000
    f4c4:	bne	f644 <main@@Base+0x8a74>
    f4c8:	ldr	r3, [r7]
    f4cc:	cmp	r3, #0
    f4d0:	beq	f518 <main@@Base+0x8948>
    f4d4:	mov	r0, sl
    f4d8:	mov	r2, r9
    f4dc:	mov	r1, r8
    f4e0:	blx	r3
    f4e4:	subs	r4, r0, #0
    f4e8:	blt	f668 <main@@Base+0x8a98>
    f4ec:	ldr	r2, [r5]
    f4f0:	b	f518 <main@@Base+0x8948>
    f4f4:	mov	r2, #1024	; 0x400
    f4f8:	mov	r1, r9
    f4fc:	mov	r0, r8
    f500:	vldr	d1, [pc, #448]	; f6c8 <main@@Base+0x8af8>
    f504:	vldr	d0, [pc, #452]	; f6d0 <main@@Base+0x8b00>
    f508:	bl	b2cc <main@@Base+0x46fc>
    f50c:	vcvt.s32.f64	s0, d0
    f510:	vstr	s0, [r4]
    f514:	ldr	r2, [r5]
    f518:	ands	r4, r2, #2048	; 0x800
    f51c:	bne	f6b8 <main@@Base+0x8ae8>
    f520:	ldr	r2, [sp, #76]	; 0x4c
    f524:	ldr	r3, [r6]
    f528:	mov	r0, r4
    f52c:	cmp	r2, r3
    f530:	bne	f6c0 <main@@Base+0x8af0>
    f534:	add	sp, sp, #84	; 0x54
    f538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f53c:	mov	r1, #58	; 0x3a
    f540:	mov	r0, r3
    f544:	bl	662c <strchr@plt>
    f548:	mov	r2, r4
    f54c:	ldr	r3, [r4, #4]
    f550:	mov	fp, r0
    f554:	add	r3, r3, #1
    f558:	ldr	r0, [r2], #4
    f55c:	mov	r1, #16
    f560:	bl	f360 <main@@Base+0x8790>
    f564:	cmp	fp, #0
    f568:	str	r0, [r4]
    f56c:	addne	r0, fp, #1
    f570:	beq	f638 <main@@Base+0x8a68>
    f574:	bl	60ec <av_strdup@plt>
    f578:	cmp	r0, #0
    f57c:	beq	f6b0 <main@@Base+0x8ae0>
    f580:	ldrd	r2, [r4]
    f584:	sub	r3, r3, #-268435455	; 0xf0000001
    f588:	add	r4, r2, r3, lsl #4
    f58c:	str	r0, [r2, r3, lsl #4]
    f590:	ldr	r2, [r5]
    f594:	add	r4, r4, #8
    f598:	tst	r2, #8
    f59c:	beq	f4a0 <main@@Base+0x88d0>
    f5a0:	mov	r0, r9
    f5a4:	bl	60ec <av_strdup@plt>
    f5a8:	mov	r7, r0
    f5ac:	mov	r0, r4
    f5b0:	bl	5df8 <av_freep@plt>
    f5b4:	cmp	r7, #0
    f5b8:	beq	f6b0 <main@@Base+0x8ae0>
    f5bc:	str	r7, [r4]
    f5c0:	ldr	r2, [r5]
    f5c4:	b	f518 <main@@Base+0x8948>
    f5c8:	mov	r2, #256	; 0x100
    f5cc:	mov	r1, r9
    f5d0:	mov	r0, r8
    f5d4:	vldr	d1, [pc, #252]	; f6d8 <main@@Base+0x8b08>
    f5d8:	vldr	d0, [pc, #256]	; f6e0 <main@@Base+0x8b10>
    f5dc:	bl	b2cc <main@@Base+0x46fc>
    f5e0:	vcvt.f32.f64	s0, d0
    f5e4:	ldr	r2, [r5]
    f5e8:	vstr	s0, [r4]
    f5ec:	b	f518 <main@@Base+0x8948>
    f5f0:	mov	r2, #1024	; 0x400
    f5f4:	mov	r1, r9
    f5f8:	mov	r0, r8
    f5fc:	vldr	d1, [pc, #228]	; f6e8 <main@@Base+0x8b18>
    f600:	vldr	d0, [pc, #232]	; f6f0 <main@@Base+0x8b20>
    f604:	bl	b2cc <main@@Base+0x46fc>
    f608:	vmov	r0, r1, d0
    f60c:	bl	224b8 <vc_dispmanx_send_command_reply@@Base+0x87c>
    f610:	ldr	r2, [r5]
    f614:	strd	r0, [r4]
    f618:	b	f518 <main@@Base+0x8948>
    f61c:	mov	r2, #1
    f620:	mov	r1, r9
    f624:	mov	r0, r8
    f628:	bl	b418 <main@@Base+0x4848>
    f62c:	ldr	r2, [r5]
    f630:	strd	r0, [r4]
    f634:	b	f518 <main@@Base+0x8948>
    f638:	ldr	r0, [pc, #192]	; f700 <main@@Base+0x8b30>
    f63c:	add	r0, pc, r0
    f640:	b	f574 <main@@Base+0x89a4>
    f644:	mov	r2, #131072	; 0x20000
    f648:	mov	r1, r9
    f64c:	mov	r0, r8
    f650:	vldr	d1, [pc, #128]	; f6d8 <main@@Base+0x8b08>
    f654:	vldr	d0, [pc, #132]	; f6e0 <main@@Base+0x8b10>
    f658:	bl	b2cc <main@@Base+0x46fc>
    f65c:	ldr	r2, [r5]
    f660:	vstr	d0, [r4]
    f664:	b	f518 <main@@Base+0x8948>
    f668:	add	r5, sp, #12
    f66c:	mov	r1, fp
    f670:	mov	r0, r5
    f674:	mov	r2, #64	; 0x40
    f678:	bl	62e4 <memset@plt>
    f67c:	mov	r1, r5
    f680:	mov	r2, #64	; 0x40
    f684:	mov	r0, r4
    f688:	bl	66b0 <av_strerror@plt>
    f68c:	ldr	r2, [pc, #112]	; f704 <main@@Base+0x8b34>
    f690:	str	r5, [sp, #4]
    f694:	str	r8, [sp]
    f698:	mov	r3, r9
    f69c:	mov	r0, fp
    f6a0:	add	r2, pc, r2
    f6a4:	mov	r1, #16
    f6a8:	bl	6188 <av_log@plt>
    f6ac:	b	f520 <main@@Base+0x8950>
    f6b0:	mvn	r4, #11
    f6b4:	b	f520 <main@@Base+0x8950>
    f6b8:	mov	r0, #0
    f6bc:	bl	a954 <main@@Base+0x3d84>
    f6c0:	bl	5e7c <__stack_chk_fail@plt>
    f6c4:	nop	{0}
    f6c8:			; <UNDEFINED> instruction: 0xffc00000
    f6cc:	ldrshmi	pc, [pc, #255]	; f7d3 <main@@Base+0x8c03>	; <UNPREDICTABLE>
    f6d0:	andeq	r0, r0, r0
    f6d4:	mvngt	r0, r0
    f6d8:	andeq	r0, r0, r0
    f6dc:	svcvc	0x00f00000	; IMB
    f6e0:	andeq	r0, r0, r0
    f6e4:			; <UNDEFINED> instruction: 0xfff00000	; IMB
    f6e8:	andeq	r0, r0, r0
    f6ec:	mvnmi	r0, #0
    f6f0:	andeq	r0, r0, r0
    f6f4:	mvngt	r0, #0
    f6f8:	andeq	r9, r2, r4, lsr r6
    f6fc:	andeq	r0, r0, r8, asr r5
    f700:	andeq	r5, r1, r8, lsr #28
    f704:	andeq	r5, r1, r0, lsr r0
    f708:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f70c:	mov	r7, r1
    f710:	ldr	r1, [pc, #608]	; f978 <main@@Base+0x8da8>
    f714:	ldr	ip, [pc, #608]	; f97c <main@@Base+0x8dac>
    f718:	add	r1, pc, r1
    f71c:	ldr	r1, [r1, ip]
    f720:	sub	sp, sp, #36	; 0x24
    f724:	ldr	ip, [r1]
    f728:	str	r1, [sp, #12]
    f72c:	mov	sl, r0
    f730:	mov	r1, #58	; 0x3a
    f734:	mov	r0, r7
    f738:	mov	r8, r2
    f73c:	mov	r6, r3
    f740:	str	ip, [sp, #28]
    f744:	bl	662c <strchr@plt>
    f748:	cmp	r0, #0
    f74c:	subne	fp, r0, r7
    f750:	beq	f8b8 <main@@Base+0x8ce8>
    f754:	ldr	r5, [r6]
    f758:	mov	r4, r6
    f75c:	cmp	r5, #0
    f760:	beq	f79c <main@@Base+0x8bcc>
    f764:	mov	r9, r5
    f768:	mov	r2, fp
    f76c:	mov	r1, r9
    f770:	mov	r0, r7
    f774:	bl	6554 <strncmp@plt>
    f778:	cmp	r0, #0
    f77c:	bne	f790 <main@@Base+0x8bc0>
    f780:	mov	r0, r9
    f784:	bl	61a0 <strlen@plt>
    f788:	cmp	r0, fp
    f78c:	beq	f81c <main@@Base+0x8c4c>
    f790:	ldr	r9, [r4, #20]!
    f794:	cmp	r9, #0
    f798:	bne	f768 <main@@Base+0x8b98>
    f79c:	ldrb	r3, [r7]
    f7a0:	cmp	r3, #110	; 0x6e
    f7a4:	beq	f8d4 <main@@Base+0x8d04>
    f7a8:	ldr	r3, [r4, #4]
    f7ac:	tst	r3, #2
    f7b0:	bne	f8c8 <main@@Base+0x8cf8>
    f7b4:	cmp	r5, #0
    f7b8:	beq	f7fc <main@@Base+0x8c2c>
    f7bc:	ldr	fp, [pc, #444]	; f980 <main@@Base+0x8db0>
    f7c0:	add	fp, pc, fp
    f7c4:	mov	r2, #7
    f7c8:	mov	r1, r5
    f7cc:	mov	r0, fp
    f7d0:	bl	6554 <strncmp@plt>
    f7d4:	cmp	r0, #0
    f7d8:	mov	r4, r6
    f7dc:	bne	f7f0 <main@@Base+0x8c20>
    f7e0:	mov	r0, r5
    f7e4:	bl	61a0 <strlen@plt>
    f7e8:	cmp	r0, #7
    f7ec:	beq	f95c <main@@Base+0x8d8c>
    f7f0:	ldr	r5, [r6, #20]!
    f7f4:	cmp	r5, #0
    f7f8:	bne	f7c4 <main@@Base+0x8bf4>
    f7fc:	ldr	r2, [pc, #384]	; f984 <main@@Base+0x8db4>
    f800:	mov	r0, #0
    f804:	mov	r3, r7
    f808:	add	r2, pc, r2
    f80c:	mov	r1, #16
    f810:	bl	6188 <av_log@plt>
    f814:	mvn	r0, #21
    f818:	b	f854 <main@@Base+0x8c84>
    f81c:	ldr	r3, [r4, #4]
    f820:	tst	r3, #2
    f824:	beq	f884 <main@@Base+0x8cb4>
    f828:	ldr	r8, [pc, #344]	; f988 <main@@Base+0x8db8>
    f82c:	add	r8, pc, r8
    f830:	str	r8, [sp]
    f834:	mov	r3, r7
    f838:	mov	r0, sl
    f83c:	add	r2, r4, #8
    f840:	add	r1, r4, #4
    f844:	bl	f44c <main@@Base+0x887c>
    f848:	cmp	r0, #0
    f84c:	ldrge	r0, [r4, #4]
    f850:	andge	r0, r0, #1
    f854:	ldr	r3, [sp, #12]
    f858:	ldr	r2, [sp, #28]
    f85c:	ldr	r3, [r3]
    f860:	cmp	r2, r3
    f864:	bne	f974 <main@@Base+0x8da4>
    f868:	add	sp, sp, #36	; 0x24
    f86c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f870:	ldr	r3, [r5, #4]
    f874:	mov	r4, r5
    f878:	tst	r3, #2
    f87c:	ldrne	r8, [pc, #264]	; f98c <main@@Base+0x8dbc>
    f880:	addne	r8, pc, r8
    f884:	cmp	r8, #0
    f888:	movne	r3, #0
    f88c:	andeq	r3, r3, #1
    f890:	cmp	r3, #0
    f894:	beq	f830 <main@@Base+0x8c60>
    f898:	ldr	r2, [pc, #240]	; f990 <main@@Base+0x8dc0>
    f89c:	mov	r0, #0
    f8a0:	mov	r3, r7
    f8a4:	add	r2, pc, r2
    f8a8:	mov	r1, #16
    f8ac:	bl	6188 <av_log@plt>
    f8b0:	mvn	r0, #21
    f8b4:	b	f854 <main@@Base+0x8c84>
    f8b8:	mov	r0, r7
    f8bc:	bl	61a0 <strlen@plt>
    f8c0:	mov	fp, r0
    f8c4:	b	f754 <main@@Base+0x8b84>
    f8c8:	ldr	r8, [pc, #196]	; f994 <main@@Base+0x8dc4>
    f8cc:	add	r8, pc, r8
    f8d0:	b	f7b4 <main@@Base+0x8be4>
    f8d4:	ldrb	r3, [r7, #1]
    f8d8:	cmp	r3, #111	; 0x6f
    f8dc:	bne	f7a8 <main@@Base+0x8bd8>
    f8e0:	add	r4, r7, #2
    f8e4:	mov	r0, r4
    f8e8:	mov	r1, #58	; 0x3a
    f8ec:	bl	662c <strchr@plt>
    f8f0:	cmp	r0, #0
    f8f4:	beq	f964 <main@@Base+0x8d94>
    f8f8:	sub	r3, r0, r4
    f8fc:	mov	r2, r3
    f900:	cmp	r5, #0
    f904:	beq	f7fc <main@@Base+0x8c2c>
    f908:	mov	fp, r5
    f90c:	str	r5, [sp, #16]
    f910:	mov	r9, r2
    f914:	mov	r5, r6
    f918:	str	r6, [sp, #20]
    f91c:	mov	r2, r9
    f920:	mov	r1, fp
    f924:	mov	r0, r4
    f928:	bl	6554 <strncmp@plt>
    f92c:	cmp	r0, #0
    f930:	bne	f944 <main@@Base+0x8d74>
    f934:	mov	r0, fp
    f938:	bl	61a0 <strlen@plt>
    f93c:	cmp	r0, r9
    f940:	beq	f870 <main@@Base+0x8ca0>
    f944:	ldr	fp, [r5, #20]!
    f948:	cmp	fp, #0
    f94c:	bne	f91c <main@@Base+0x8d4c>
    f950:	ldr	r5, [sp, #16]
    f954:	ldr	r6, [sp, #20]
    f958:	b	f7bc <main@@Base+0x8bec>
    f95c:	ldr	r3, [r6, #4]
    f960:	b	f884 <main@@Base+0x8cb4>
    f964:	mov	r0, r4
    f968:	bl	61a0 <strlen@plt>
    f96c:	mov	r2, r0
    f970:	b	f900 <main@@Base+0x8d30>
    f974:	bl	5e7c <__stack_chk_fail@plt>
    f978:	andeq	r9, r2, ip, ror r3
    f97c:	andeq	r0, r0, r8, asr r5
    f980:	andeq	r4, r1, r4, asr #30
    f984:	andeq	r4, r1, r4, lsl #30
    f988:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
    f98c:	andeq	r5, r1, r8, lsl #11
    f990:	andeq	r4, r1, r4, lsl #29
    f994:	andeq	r4, r1, r4, lsr lr
    f998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f99c:	mov	r6, r1
    f9a0:	ldr	r1, [pc, #368]	; fb18 <main@@Base+0x8f48>
    f9a4:	ldr	ip, [pc, #368]	; fb1c <main@@Base+0x8f4c>
    f9a8:	add	r1, pc, r1
    f9ac:	ldr	sl, [r1, ip]
    f9b0:	sub	sp, sp, #12
    f9b4:	ldr	r1, [sl]
    f9b8:	cmp	r6, #1
    f9bc:	str	r1, [sp, #4]
    f9c0:	ldr	r9, [sp, #48]	; 0x30
    f9c4:	ble	fa68 <main@@Base+0x8e98>
    f9c8:	mov	r7, #1
    f9cc:	cmp	r9, #0
    f9d0:	mov	r8, r0
    f9d4:	mov	r5, r2
    f9d8:	mov	fp, r3
    f9dc:	mov	r0, r7
    f9e0:	bne	f9fc <main@@Base+0x8e2c>
    f9e4:	b	fa98 <main@@Base+0x8ec8>
    f9e8:	mov	r0, r8
    f9ec:	blx	r9
    f9f0:	mov	r0, r4
    f9f4:	cmp	r0, r6
    f9f8:	bge	fa68 <main@@Base+0x8e98>
    f9fc:	cmp	r7, #0
    fa00:	add	r4, r0, #1
    fa04:	lsl	r3, r0, #2
    fa08:	ldr	r1, [r5, r0, lsl #2]
    fa0c:	beq	f9e8 <main@@Base+0x8e18>
    fa10:	ldrb	r2, [r1]
    fa14:	cmp	r2, #45	; 0x2d
    fa18:	bne	f9e8 <main@@Base+0x8e18>
    fa1c:	ldrb	r2, [r1, #1]
    fa20:	cmp	r2, #0
    fa24:	beq	f9e8 <main@@Base+0x8e18>
    fa28:	cmp	r2, #45	; 0x2d
    fa2c:	bne	fa3c <main@@Base+0x8e6c>
    fa30:	ldrb	r2, [r1, #2]
    fa34:	cmp	r2, #0
    fa38:	beq	fb00 <main@@Base+0x8f30>
    fa3c:	add	r3, r5, r3
    fa40:	ldr	r2, [r3, #4]
    fa44:	add	r1, r1, #1
    fa48:	mov	r3, fp
    fa4c:	mov	r0, r8
    fa50:	bl	f708 <main@@Base+0x8b38>
    fa54:	cmp	r0, #0
    fa58:	blt	fb0c <main@@Base+0x8f3c>
    fa5c:	add	r0, r4, r0
    fa60:	cmp	r0, r6
    fa64:	blt	f9fc <main@@Base+0x8e2c>
    fa68:	ldr	r2, [sp, #4]
    fa6c:	ldr	r3, [sl]
    fa70:	cmp	r2, r3
    fa74:	bne	fb14 <main@@Base+0x8f44>
    fa78:	add	sp, sp, #12
    fa7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fa80:	ldrb	r2, [r1, #1]
    fa84:	cmp	r2, #0
    fa88:	bne	fabc <main@@Base+0x8eec>
    fa8c:	mov	r0, r4
    fa90:	cmp	r6, r0
    fa94:	ble	fa68 <main@@Base+0x8e98>
    fa98:	cmp	r7, #0
    fa9c:	add	r4, r0, #1
    faa0:	lsl	r3, r0, #2
    faa4:	ldr	r1, [r5, r0, lsl #2]
    faa8:	beq	fa8c <main@@Base+0x8ebc>
    faac:	ldrb	r2, [r1]
    fab0:	cmp	r2, #45	; 0x2d
    fab4:	bne	fa8c <main@@Base+0x8ebc>
    fab8:	b	fa80 <main@@Base+0x8eb0>
    fabc:	cmp	r2, #45	; 0x2d
    fac0:	bne	fad8 <main@@Base+0x8f08>
    fac4:	ldrb	r2, [r1, #2]
    fac8:	cmp	r2, #0
    facc:	moveq	r0, r4
    fad0:	moveq	r7, r2
    fad4:	beq	fa90 <main@@Base+0x8ec0>
    fad8:	add	r3, r5, r3
    fadc:	ldr	r2, [r3, #4]
    fae0:	add	r1, r1, #1
    fae4:	mov	r3, fp
    fae8:	mov	r0, r8
    faec:	bl	f708 <main@@Base+0x8b38>
    faf0:	cmp	r0, #0
    faf4:	blt	fb0c <main@@Base+0x8f3c>
    faf8:	add	r0, r4, r0
    fafc:	b	fa90 <main@@Base+0x8ec0>
    fb00:	mov	r0, r4
    fb04:	mov	r7, r2
    fb08:	b	f9f4 <main@@Base+0x8e24>
    fb0c:	mov	r0, #1
    fb10:	bl	a954 <main@@Base+0x3d84>
    fb14:	bl	5e7c <__stack_chk_fail@plt>
    fb18:	andeq	r9, r2, ip, ror #1
    fb1c:	andeq	r0, r0, r8, asr r5
    fb20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    fb24:	mov	r6, r1
    fb28:	ldr	r2, [pc, #332]	; fc7c <main@@Base+0x90ac>
    fb2c:	ldr	r3, [pc, #332]	; fc80 <main@@Base+0x90b0>
    fb30:	ldr	r1, [r1]
    fb34:	add	r2, pc, r2
    fb38:	ldr	sl, [r2, r3]
    fb3c:	ldr	r3, [r1]
    fb40:	ldr	r2, [pc, #316]	; fc84 <main@@Base+0x90b4>
    fb44:	ldr	r1, [r6, #4]
    fb48:	sub	sp, sp, #24
    fb4c:	ldr	ip, [sl]
    fb50:	mov	r8, r0
    fb54:	str	r1, [sp]
    fb58:	add	r2, pc, r2
    fb5c:	mov	r1, #48	; 0x30
    fb60:	mov	r0, #0
    fb64:	str	ip, [sp, #20]
    fb68:	bl	6188 <av_log@plt>
    fb6c:	ldr	r3, [r6, #12]
    fb70:	cmp	r3, #0
    fb74:	ble	fc28 <main@@Base+0x9058>
    fb78:	mov	r5, #0
    fb7c:	ldr	r9, [pc, #260]	; fc88 <main@@Base+0x90b8>
    fb80:	mov	r7, r5
    fb84:	add	r9, pc, r9
    fb88:	b	fba0 <main@@Base+0x8fd0>
    fb8c:	ldr	r3, [r6, #12]
    fb90:	add	r7, r7, #1
    fb94:	cmp	r3, r7
    fb98:	add	r5, r5, #12
    fb9c:	ble	fc28 <main@@Base+0x9058>
    fba0:	ldr	r1, [r6]
    fba4:	ldr	r3, [r6, #8]
    fba8:	ldr	r0, [r1, #8]
    fbac:	add	r4, r3, r5
    fbb0:	cmp	r0, #0
    fbb4:	ldr	r2, [r3, r5]
    fbb8:	beq	fbc8 <main@@Base+0x8ff8>
    fbbc:	ldr	r3, [r2, #4]
    fbc0:	ands	r0, r0, r3
    fbc4:	beq	fc44 <main@@Base+0x9074>
    fbc8:	ldr	r1, [r4, #8]
    fbcc:	ldr	r3, [r4, #4]
    fbd0:	str	r1, [sp, #4]
    fbd4:	ldr	r2, [r2, #12]
    fbd8:	mov	r1, #48	; 0x30
    fbdc:	str	r2, [sp]
    fbe0:	mov	r0, #0
    fbe4:	mov	r2, r9
    fbe8:	bl	6188 <av_log@plt>
    fbec:	ldm	r4, {r1, r3}
    fbf0:	ldr	r0, [r4, #8]
    fbf4:	add	r2, r1, #8
    fbf8:	str	r0, [sp]
    fbfc:	add	r1, r1, #4
    fc00:	mov	r0, r8
    fc04:	bl	f44c <main@@Base+0x887c>
    fc08:	cmp	r0, #0
    fc0c:	bge	fb8c <main@@Base+0x8fbc>
    fc10:	ldr	r2, [sp, #20]
    fc14:	ldr	r3, [sl]
    fc18:	cmp	r2, r3
    fc1c:	bne	fc78 <main@@Base+0x90a8>
    fc20:	add	sp, sp, #24
    fc24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    fc28:	ldr	r2, [pc, #92]	; fc8c <main@@Base+0x90bc>
    fc2c:	mov	r0, #0
    fc30:	add	r2, pc, r2
    fc34:	mov	r1, #48	; 0x30
    fc38:	bl	6188 <av_log@plt>
    fc3c:	mov	r0, #0
    fc40:	b	fc10 <main@@Base+0x9040>
    fc44:	ldr	ip, [r6, #4]
    fc48:	ldr	r3, [r4, #4]
    fc4c:	str	ip, [sp, #8]
    fc50:	ldr	r1, [r1]
    fc54:	str	r1, [sp, #4]
    fc58:	ldr	r2, [r2, #12]
    fc5c:	mov	r1, #16
    fc60:	str	r2, [sp]
    fc64:	ldr	r2, [pc, #36]	; fc90 <main@@Base+0x90c0>
    fc68:	add	r2, pc, r2
    fc6c:	bl	6188 <av_log@plt>
    fc70:	mvn	r0, #21
    fc74:	b	fc10 <main@@Base+0x9040>
    fc78:	bl	5e7c <__stack_chk_fail@plt>
    fc7c:	andeq	r8, r2, r0, ror #30
    fc80:	andeq	r0, r0, r8, asr r5
    fc84:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
    fc88:	andeq	r4, r1, r0, asr #25
    fc8c:	andeq	r4, r1, r0, asr #22
    fc90:	andeq	r4, r1, r4, lsr fp
    fc94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fc98:	mov	r4, r0
    fc9c:	sub	sp, sp, #76	; 0x4c
    fca0:	ldr	r5, [sp, #116]	; 0x74
    fca4:	ldr	r9, [pc, #2032]	; 1049c <main@@Base+0x98cc>
    fca8:	ldr	ip, [pc, #2032]	; 104a0 <main@@Base+0x98d0>
    fcac:	str	r0, [sp, #16]
    fcb0:	add	r9, pc, r9
    fcb4:	str	r5, [sp, #52]	; 0x34
    fcb8:	ldr	ip, [r9, ip]
    fcbc:	str	r3, [sp, #56]	; 0x38
    fcc0:	str	ip, [sp, #60]	; 0x3c
    fcc4:	ldr	r3, [sp, #112]	; 0x70
    fcc8:	ldr	ip, [ip]
    fccc:	str	r1, [sp, #28]
    fcd0:	str	r2, [sp, #20]
    fcd4:	mov	r1, #0
    fcd8:	mov	r2, #80	; 0x50
    fcdc:	str	ip, [sp, #68]	; 0x44
    fce0:	str	r3, [sp, #40]	; 0x28
    fce4:	bl	62e4 <memset@plt>
    fce8:	str	r5, [r4, #40]	; 0x28
    fcec:	mov	r0, r5
    fcf0:	mov	r1, #12
    fcf4:	bl	60b0 <av_mallocz_array@plt>
    fcf8:	cmp	r0, #0
    fcfc:	str	r0, [r4, #36]	; 0x24
    fd00:	beq	10490 <main@@Base+0x98c0>
    fd04:	ldr	r1, [r4, #40]	; 0x28
    fd08:	cmp	r1, #0
    fd0c:	ble	fd34 <main@@Base+0x9164>
    fd10:	mov	r3, #0
    fd14:	add	r1, r1, r1, lsl #1
    fd18:	ldr	ip, [sp, #40]	; 0x28
    fd1c:	lsl	r1, r1, #2
    fd20:	add	r2, ip, r3
    fd24:	str	r2, [r0, r3]
    fd28:	add	r3, r3, #12
    fd2c:	cmp	r1, r3
    fd30:	bne	fd20 <main@@Base+0x9150>
    fd34:	ldr	r2, [pc, #1896]	; 104a4 <main@@Base+0x98d4>
    fd38:	ldr	r3, [pc, #1896]	; 104a8 <main@@Base+0x98d8>
    fd3c:	ldr	r1, [sp, #16]
    fd40:	add	r3, pc, r3
    fd44:	add	r2, pc, r2
    fd48:	strd	r2, [r1]
    fd4c:	bl	a7b8 <main@@Base+0x3be8>
    fd50:	ldr	r2, [pc, #1876]	; 104ac <main@@Base+0x98dc>
    fd54:	mov	r1, #48	; 0x30
    fd58:	add	r2, pc, r2
    fd5c:	mov	r0, #0
    fd60:	bl	6188 <av_log@plt>
    fd64:	ldr	r3, [sp, #28]
    fd68:	cmp	r3, #1
    fd6c:	ble	101f4 <main@@Base+0x9624>
    fd70:	mvn	r3, #1
    fd74:	mov	sl, #1
    fd78:	str	r3, [sp, #44]	; 0x2c
    fd7c:	ldr	r3, [pc, #1836]	; 104b0 <main@@Base+0x98e0>
    fd80:	mov	fp, r9
    fd84:	add	r3, pc, r3
    fd88:	str	r3, [sp, #36]	; 0x24
    fd8c:	ldr	r3, [pc, #1824]	; 104b4 <main@@Base+0x98e4>
    fd90:	mov	r9, sl
    fd94:	add	r3, pc, r3
    fd98:	str	r3, [sp, #48]	; 0x30
    fd9c:	b	fea4 <main@@Base+0x92d4>
    fda0:	ldr	sl, [sp, #16]
    fda4:	mov	r1, #36	; 0x24
    fda8:	ldr	r6, [sl, #36]	; 0x24
    fdac:	mov	r5, #0
    fdb0:	mov	r2, r6
    fdb4:	ldr	r3, [r2, #8]!
    fdb8:	ldr	r0, [r6, #4]
    fdbc:	add	r3, r3, #1
    fdc0:	bl	f360 <main@@Base+0x8790>
    fdc4:	ldr	r4, [r6, #8]
    fdc8:	mov	r9, r0
    fdcc:	add	r4, r4, r4, lsl #3
    fdd0:	lsl	r4, r4, #2
    fdd4:	sub	r4, r4, #36	; 0x24
    fdd8:	add	r8, r0, r4
    fddc:	mov	ip, r8
    fde0:	add	lr, sl, #44	; 0x2c
    fde4:	ldm	lr!, {r0, r1, r2, r3}
    fde8:	str	r9, [r6, #4]
    fdec:	stmia	ip!, {r0, r1, r2, r3}
    fdf0:	ldm	lr!, {r0, r1, r2, r3}
    fdf4:	stmia	ip!, {r0, r1, r2, r3}
    fdf8:	ldr	r2, [r6]
    fdfc:	ldr	r3, [pc, #1716]	; 104b8 <main@@Base+0x98e8>
    fe00:	str	r7, [r8, #4]
    fe04:	str	r2, [r9, r4]
    fe08:	ldr	r0, [fp, r3]
    fe0c:	ldr	r3, [pc, #1704]	; 104bc <main@@Base+0x98ec>
    fe10:	ldr	r2, [r0]
    fe14:	ldr	r1, [pc, #1700]	; 104c0 <main@@Base+0x98f0>
    fe18:	str	r2, [r8, #28]
    fe1c:	ldr	ip, [fp, r3]
    fe20:	ldr	r2, [pc, #1692]	; 104c4 <main@@Base+0x98f4>
    fe24:	ldr	lr, [ip]
    fe28:	ldr	r9, [sp, #12]
    fe2c:	str	lr, [r8, #32]
    fe30:	ldr	r1, [fp, r1]
    fe34:	ldr	r3, [pc, #1676]	; 104c8 <main@@Base+0x98f8>
    fe38:	ldr	lr, [r1]
    fe3c:	str	lr, [r8, #16]
    fe40:	ldr	r2, [fp, r2]
    fe44:	ldr	lr, [r2]
    fe48:	str	lr, [r8, #20]
    fe4c:	ldr	r3, [fp, r3]
    fe50:	str	r5, [ip]
    fe54:	ldr	ip, [r3]
    fe58:	str	r5, [r2]
    fe5c:	str	ip, [r8, #24]
    fe60:	str	r5, [r3]
    fe64:	str	r5, [r1]
    fe68:	str	r5, [r0]
    fe6c:	bl	a7b8 <main@@Base+0x3be8>
    fe70:	mov	r1, r5
    fe74:	mov	r2, #36	; 0x24
    fe78:	add	r0, sl, #44	; 0x2c
    fe7c:	bl	62e4 <memset@plt>
    fe80:	ldr	r3, [sp, #40]	; 0x28
    fe84:	mov	r0, r5
    fe88:	ldr	r3, [r3]
    fe8c:	ldr	r2, [sp, #48]	; 0x30
    fe90:	mov	r1, #48	; 0x30
    fe94:	bl	6188 <av_log@plt>
    fe98:	ldr	r3, [sp, #28]
    fe9c:	cmp	r9, r3
    fea0:	bge	101f0 <main@@Base+0x9620>
    fea4:	ldr	r3, [sp, #20]
    fea8:	ldr	r2, [sp, #36]	; 0x24
    feac:	ldr	r7, [r3, r9, lsl #2]
    feb0:	mov	r1, #48	; 0x30
    feb4:	mov	r3, r7
    feb8:	mov	r0, #0
    febc:	bl	6188 <av_log@plt>
    fec0:	ldrb	r3, [r7]
    fec4:	add	r2, r9, #1
    fec8:	cmp	r3, #45	; 0x2d
    fecc:	lsl	r3, r9, #2
    fed0:	str	r2, [sp, #12]
    fed4:	str	r3, [sp, #24]
    fed8:	bne	fda0 <main@@Base+0x91d0>
    fedc:	ldrb	r3, [r7, #1]
    fee0:	cmp	r3, #45	; 0x2d
    fee4:	str	r3, [sp, #32]
    fee8:	beq	10248 <main@@Base+0x9678>
    feec:	ldr	r3, [sp, #44]	; 0x2c
    fef0:	ldr	r2, [sp, #32]
    fef4:	sub	r3, r9, r3
    fef8:	clz	r3, r3
    fefc:	cmp	r2, #0
    ff00:	lsr	r3, r3, #5
    ff04:	moveq	r3, #1
    ff08:	cmp	r3, #0
    ff0c:	bne	fda0 <main@@Base+0x91d0>
    ff10:	ldr	r6, [sp, #52]	; 0x34
    ff14:	add	sl, r7, #1
    ff18:	cmp	r6, #0
    ff1c:	ble	ff5c <main@@Base+0x938c>
    ff20:	mov	r8, r3
    ff24:	ldr	r5, [sp, #40]	; 0x28
    ff28:	ldr	r0, [r5, #4]
    ff2c:	add	r4, r8, r8, lsl #1
    ff30:	cmp	r0, #0
    ff34:	lsl	r4, r4, #2
    ff38:	beq	ff4c <main@@Base+0x937c>
    ff3c:	mov	r1, sl
    ff40:	bl	695c <strcmp@plt>
    ff44:	subs	r3, r0, #0
    ff48:	beq	100b0 <main@@Base+0x94e0>
    ff4c:	add	r8, r8, #1
    ff50:	cmp	r6, r8
    ff54:	add	r5, r5, #12
    ff58:	bne	ff28 <main@@Base+0x9358>
    ff5c:	mov	r1, #58	; 0x3a
    ff60:	mov	r0, sl
    ff64:	bl	662c <strchr@plt>
    ff68:	cmp	r0, #0
    ff6c:	subne	r5, r0, sl
    ff70:	beq	10304 <main@@Base+0x9734>
    ff74:	ldr	r4, [sp, #56]	; 0x38
    ff78:	ldr	r6, [r4]
    ff7c:	cmp	r6, #0
    ff80:	beq	ffb8 <main@@Base+0x93e8>
    ff84:	mov	r2, r5
    ff88:	mov	r1, r6
    ff8c:	mov	r0, sl
    ff90:	bl	6554 <strncmp@plt>
    ff94:	cmp	r0, #0
    ff98:	bne	ffac <main@@Base+0x93dc>
    ff9c:	mov	r0, r6
    ffa0:	bl	61a0 <strlen@plt>
    ffa4:	cmp	r0, r5
    ffa8:	beq	10260 <main@@Base+0x9690>
    ffac:	ldr	r6, [r4, #20]!
    ffb0:	cmp	r6, #0
    ffb4:	bne	ff84 <main@@Base+0x93b4>
    ffb8:	ldr	r3, [sp, #24]
    ffbc:	add	r8, r3, #4
    ffc0:	ldr	r3, [sp, #20]
    ffc4:	ldr	r2, [r3, r8]
    ffc8:	add	r5, r3, r8
    ffcc:	cmp	r2, #0
    ffd0:	beq	fffc <main@@Base+0x942c>
    ffd4:	mov	r1, sl
    ffd8:	mov	r0, #0
    ffdc:	bl	c244 <main@@Base+0x5674>
    ffe0:	cmp	r0, #0
    ffe4:	bge	10400 <main@@Base+0x9830>
    ffe8:	ldr	r3, [pc, #1244]	; 104cc <main@@Base+0x98fc>
    ffec:	cmp	r0, r3
    fff0:	bne	10448 <main@@Base+0x9878>
    fff4:	ldrb	r3, [r7, #1]
    fff8:	str	r3, [sp, #32]
    fffc:	ldr	r3, [sp, #32]
   10000:	cmp	r3, #110	; 0x6e
   10004:	bne	10074 <main@@Base+0x94a4>
   10008:	ldrb	r3, [r7, #2]
   1000c:	cmp	r3, #111	; 0x6f
   10010:	bne	10074 <main@@Base+0x94a4>
   10014:	add	r7, r7, #3
   10018:	mov	r0, r7
   1001c:	mov	r1, #58	; 0x3a
   10020:	bl	662c <strchr@plt>
   10024:	cmp	r0, #0
   10028:	subne	r5, r0, r7
   1002c:	beq	103c4 <main@@Base+0x97f4>
   10030:	ldr	r4, [sp, #56]	; 0x38
   10034:	ldr	r6, [r4]
   10038:	cmp	r6, #0
   1003c:	beq	10074 <main@@Base+0x94a4>
   10040:	mov	r2, r5
   10044:	mov	r1, r6
   10048:	mov	r0, r7
   1004c:	bl	6554 <strncmp@plt>
   10050:	cmp	r0, #0
   10054:	bne	10068 <main@@Base+0x9498>
   10058:	mov	r0, r6
   1005c:	bl	61a0 <strlen@plt>
   10060:	cmp	r0, r5
   10064:	beq	10314 <main@@Base+0x9744>
   10068:	ldr	r6, [r4, #20]!
   1006c:	cmp	r6, #0
   10070:	bne	10040 <main@@Base+0x9470>
   10074:	ldr	r2, [pc, #1108]	; 104d0 <main@@Base+0x9900>
   10078:	mov	r3, sl
   1007c:	add	r2, pc, r2
   10080:	mov	r1, #16
   10084:	mov	r0, #0
   10088:	bl	6188 <av_log@plt>
   1008c:	ldr	r4, [pc, #1080]	; 104cc <main@@Base+0x98fc>
   10090:	ldr	r3, [sp, #60]	; 0x3c
   10094:	ldr	r2, [sp, #68]	; 0x44
   10098:	ldr	r3, [r3]
   1009c:	mov	r0, r4
   100a0:	cmp	r2, r3
   100a4:	bne	10498 <main@@Base+0x98c8>
   100a8:	add	sp, sp, #76	; 0x4c
   100ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   100b0:	mov	r6, r3
   100b4:	ldrd	r2, [sp, #20]
   100b8:	add	r8, r3, r2
   100bc:	ldr	r3, [r8, #4]
   100c0:	add	r9, r9, #2
   100c4:	cmp	r3, #0
   100c8:	str	r3, [sp, #12]
   100cc:	beq	1042c <main@@Base+0x985c>
   100d0:	ldr	sl, [sp, #16]
   100d4:	mov	r1, #36	; 0x24
   100d8:	ldr	r3, [sl, #36]	; 0x24
   100dc:	add	r8, r3, r4
   100e0:	mov	r2, r8
   100e4:	str	r3, [sp, #24]
   100e8:	ldr	r3, [r2, #8]!
   100ec:	ldr	r0, [r8, #4]
   100f0:	add	r3, r3, #1
   100f4:	bl	f360 <main@@Base+0x8790>
   100f8:	ldr	r7, [r8, #8]
   100fc:	str	sl, [sp, #16]
   10100:	add	r7, r7, r7, lsl #3
   10104:	lsl	r7, r7, #2
   10108:	sub	r3, r7, #36	; 0x24
   1010c:	add	lr, sl, #44	; 0x2c
   10110:	add	sl, r0, r3
   10114:	mov	r7, r0
   10118:	mov	ip, sl
   1011c:	str	r3, [sp, #32]
   10120:	ldm	lr!, {r0, r1, r2, r3}
   10124:	str	r7, [r8, #4]
   10128:	stmia	ip!, {r0, r1, r2, r3}
   1012c:	ldm	lr!, {r0, r1, r2, r3}
   10130:	stmia	ip!, {r0, r1, r2, r3}
   10134:	ldr	r3, [sp, #24]
   10138:	ldr	r1, [sp, #32]
   1013c:	ldr	r2, [r3, r4]
   10140:	ldr	r4, [sp, #12]
   10144:	ldr	r3, [pc, #876]	; 104b8 <main@@Base+0x98e8>
   10148:	str	r4, [sl, #4]
   1014c:	str	r2, [r7, r1]
   10150:	ldr	r0, [fp, r3]
   10154:	ldr	r3, [pc, #864]	; 104bc <main@@Base+0x98ec>
   10158:	ldr	r2, [r0]
   1015c:	ldr	r1, [pc, #860]	; 104c0 <main@@Base+0x98f0>
   10160:	str	r2, [sl, #28]
   10164:	ldr	ip, [fp, r3]
   10168:	ldr	r2, [pc, #852]	; 104c4 <main@@Base+0x98f4>
   1016c:	ldr	lr, [ip]
   10170:	ldr	r3, [pc, #848]	; 104c8 <main@@Base+0x98f8>
   10174:	str	lr, [sl, #32]
   10178:	ldr	r1, [fp, r1]
   1017c:	ldr	lr, [r1]
   10180:	str	lr, [sl, #16]
   10184:	ldr	r2, [fp, r2]
   10188:	ldr	lr, [r2]
   1018c:	str	lr, [sl, #20]
   10190:	ldr	r3, [fp, r3]
   10194:	str	r6, [ip]
   10198:	ldr	ip, [r3]
   1019c:	str	r6, [r2]
   101a0:	str	ip, [sl, #24]
   101a4:	str	r6, [r3]
   101a8:	str	r6, [r1]
   101ac:	str	r6, [r0]
   101b0:	bl	a7b8 <main@@Base+0x3be8>
   101b4:	ldr	sl, [sp, #16]
   101b8:	mov	r2, #36	; 0x24
   101bc:	mov	r1, r6
   101c0:	add	r0, sl, #44	; 0x2c
   101c4:	bl	62e4 <memset@plt>
   101c8:	ldr	r2, [pc, #772]	; 104d4 <main@@Base+0x9904>
   101cc:	str	r4, [sp]
   101d0:	ldr	r3, [r5]
   101d4:	mov	r0, r6
   101d8:	add	r2, pc, r2
   101dc:	mov	r1, #48	; 0x30
   101e0:	bl	6188 <av_log@plt>
   101e4:	ldr	r3, [sp, #28]
   101e8:	cmp	r9, r3
   101ec:	blt	fea4 <main@@Base+0x92d4>
   101f0:	mov	r9, fp
   101f4:	ldr	r3, [sp, #16]
   101f8:	ldr	r3, [r3, #56]	; 0x38
   101fc:	cmp	r3, #0
   10200:	bne	10218 <main@@Base+0x9648>
   10204:	ldr	r3, [pc, #692]	; 104c0 <main@@Base+0x98f0>
   10208:	ldr	r3, [r9, r3]
   1020c:	ldr	r3, [r3]
   10210:	cmp	r3, #0
   10214:	beq	103d4 <main@@Base+0x9804>
   10218:	ldr	r2, [pc, #696]	; 104d8 <main@@Base+0x9908>
   1021c:	mov	r1, #24
   10220:	add	r2, pc, r2
   10224:	mov	r0, #0
   10228:	bl	6188 <av_log@plt>
   1022c:	ldr	r2, [pc, #680]	; 104dc <main@@Base+0x990c>
   10230:	mov	r1, #48	; 0x30
   10234:	add	r2, pc, r2
   10238:	mov	r0, #0
   1023c:	bl	6188 <av_log@plt>
   10240:	mov	r4, #0
   10244:	b	10090 <main@@Base+0x94c0>
   10248:	ldrb	r3, [r7, #2]
   1024c:	cmp	r3, #0
   10250:	bne	feec <main@@Base+0x931c>
   10254:	str	r2, [sp, #44]	; 0x2c
   10258:	mov	r9, r2
   1025c:	b	fe98 <main@@Base+0x92c8>
   10260:	ldr	r3, [r4, #4]
   10264:	tst	r3, #2048	; 0x800
   10268:	bne	1039c <main@@Base+0x97cc>
   1026c:	tst	r3, #1
   10270:	beq	103b4 <main@@Base+0x97e4>
   10274:	ldr	r2, [sp, #20]
   10278:	ldr	r1, [sp, #24]
   1027c:	add	r9, r9, #2
   10280:	add	r8, r2, r1
   10284:	ldr	r6, [r8, #4]
   10288:	cmp	r6, #0
   1028c:	beq	10470 <main@@Base+0x98a0>
   10290:	tst	r3, #57344	; 0xe000
   10294:	ldrne	r3, [sp, #16]
   10298:	ldreq	r5, [sp, #16]
   1029c:	addne	r5, r3, #44	; 0x2c
   102a0:	mov	r2, r5
   102a4:	ldr	r3, [r2, #12]!
   102a8:	mov	r1, #12
   102ac:	add	r3, r3, #1
   102b0:	ldr	r0, [r5, #8]
   102b4:	bl	f360 <main@@Base+0x8790>
   102b8:	ldr	r3, [r5, #12]
   102bc:	str	r0, [r5, #8]
   102c0:	add	r3, r3, r3, lsl #1
   102c4:	lsl	r3, r3, #2
   102c8:	sub	r3, r3, #12
   102cc:	add	r2, r0, r3
   102d0:	str	r4, [r0, r3]
   102d4:	str	sl, [r2, #4]
   102d8:	str	r6, [r2, #8]
   102dc:	str	r6, [sp, #4]
   102e0:	ldr	r2, [r4, #12]
   102e4:	ldr	r3, [r4]
   102e8:	str	r2, [sp]
   102ec:	ldr	r2, [pc, #492]	; 104e0 <main@@Base+0x9910>
   102f0:	mov	r1, #48	; 0x30
   102f4:	add	r2, pc, r2
   102f8:	mov	r0, #0
   102fc:	bl	6188 <av_log@plt>
   10300:	b	fe98 <main@@Base+0x92c8>
   10304:	mov	r0, sl
   10308:	bl	61a0 <strlen@plt>
   1030c:	mov	r5, r0
   10310:	b	ff74 <main@@Base+0x93a4>
   10314:	ldr	r3, [r4, #4]
   10318:	tst	r3, #2
   1031c:	beq	10074 <main@@Base+0x94a4>
   10320:	tst	r3, #57344	; 0xe000
   10324:	ldrne	r3, [sp, #16]
   10328:	ldreq	r5, [sp, #16]
   1032c:	addne	r5, r3, #44	; 0x2c
   10330:	mov	r2, r5
   10334:	ldr	r3, [r2, #12]!
   10338:	mov	r1, #12
   1033c:	add	r3, r3, #1
   10340:	ldr	r0, [r5, #8]
   10344:	bl	f360 <main@@Base+0x8790>
   10348:	ldr	r3, [r5, #12]
   1034c:	ldr	r2, [pc, #400]	; 104e4 <main@@Base+0x9914>
   10350:	add	r3, r3, r3, lsl #1
   10354:	lsl	r3, r3, #2
   10358:	sub	r3, r3, #12
   1035c:	add	ip, r0, r3
   10360:	add	r2, pc, r2
   10364:	ldr	r1, [r4, #12]
   10368:	str	r0, [r5, #8]
   1036c:	str	r4, [r0, r3]
   10370:	ldr	r3, [r4]
   10374:	str	r2, [ip, #8]
   10378:	ldr	r2, [pc, #360]	; 104e8 <main@@Base+0x9918>
   1037c:	str	sl, [ip, #4]
   10380:	add	r2, pc, r2
   10384:	str	r1, [sp]
   10388:	mov	r0, #0
   1038c:	mov	r1, #48	; 0x30
   10390:	ldr	r9, [sp, #12]
   10394:	bl	6188 <av_log@plt>
   10398:	b	fe98 <main@@Base+0x92c8>
   1039c:	ldr	r2, [sp, #20]
   103a0:	ldr	r1, [sp, #24]
   103a4:	add	r9, r9, #2
   103a8:	add	r8, r2, r1
   103ac:	ldr	r6, [r8, #4]
   103b0:	b	10290 <main@@Base+0x96c0>
   103b4:	ldr	r6, [pc, #304]	; 104ec <main@@Base+0x991c>
   103b8:	ldr	r9, [sp, #12]
   103bc:	add	r6, pc, r6
   103c0:	b	10290 <main@@Base+0x96c0>
   103c4:	mov	r0, r7
   103c8:	bl	61a0 <strlen@plt>
   103cc:	mov	r5, r0
   103d0:	b	10030 <main@@Base+0x9460>
   103d4:	ldr	r3, [pc, #232]	; 104c4 <main@@Base+0x98f4>
   103d8:	ldr	r3, [r9, r3]
   103dc:	ldr	r3, [r3]
   103e0:	cmp	r3, #0
   103e4:	bne	10218 <main@@Base+0x9648>
   103e8:	ldr	r3, [pc, #216]	; 104c8 <main@@Base+0x98f8>
   103ec:	ldr	r3, [r9, r3]
   103f0:	ldr	r3, [r3]
   103f4:	cmp	r3, #0
   103f8:	bne	10218 <main@@Base+0x9648>
   103fc:	b	1022c <main@@Base+0x965c>
   10400:	ldr	r3, [sp, #20]
   10404:	mov	r1, #48	; 0x30
   10408:	ldr	r2, [r3, r8]
   1040c:	mov	r0, #0
   10410:	str	r2, [sp]
   10414:	ldr	r2, [pc, #212]	; 104f0 <main@@Base+0x9920>
   10418:	mov	r3, sl
   1041c:	add	r2, pc, r2
   10420:	add	r9, r9, #2
   10424:	bl	6188 <av_log@plt>
   10428:	b	fe98 <main@@Base+0x92c8>
   1042c:	ldr	r2, [pc, #192]	; 104f4 <main@@Base+0x9924>
   10430:	mov	r3, sl
   10434:	add	r2, pc, r2
   10438:	mov	r1, #16
   1043c:	bl	6188 <av_log@plt>
   10440:	mvn	r4, #21
   10444:	b	10090 <main@@Base+0x94c0>
   10448:	ldr	r2, [r5]
   1044c:	mov	r4, r0
   10450:	str	r2, [sp]
   10454:	ldr	r2, [pc, #156]	; 104f8 <main@@Base+0x9928>
   10458:	mov	r3, sl
   1045c:	add	r2, pc, r2
   10460:	mov	r1, #16
   10464:	mov	r0, #0
   10468:	bl	6188 <av_log@plt>
   1046c:	b	10090 <main@@Base+0x94c0>
   10470:	ldr	r2, [pc, #132]	; 104fc <main@@Base+0x992c>
   10474:	mov	r3, sl
   10478:	mov	r0, r6
   1047c:	add	r2, pc, r2
   10480:	mov	r1, #16
   10484:	bl	6188 <av_log@plt>
   10488:	mvn	r4, #21
   1048c:	b	10090 <main@@Base+0x94c0>
   10490:	mov	r0, #1
   10494:	bl	a954 <main@@Base+0x3d84>
   10498:	bl	5e7c <__stack_chk_fail@plt>
   1049c:	andeq	r8, r2, r4, ror #27
   104a0:	andeq	r0, r0, r8, asr r5
   104a4:	andeq	r8, r2, r4, ror r5
   104a8:	andeq	r5, r1, r4, lsr #14
   104ac:	andeq	r4, r1, r8, lsl fp
   104b0:	andeq	r4, r1, r8, lsl #22
   104b4:	andeq	r4, r1, r0, lsl fp
   104b8:	andeq	r0, r0, r4, asr #10
   104bc:	andeq	r0, r0, r0, ror #10
   104c0:	andeq	r0, r0, ip, asr r5
   104c4:	andeq	r0, r0, r8, lsl r5
   104c8:	andeq	r0, r0, r0, asr r5
   104cc:	blge	febfc4f4 <__bss_end__@@Base+0xfebc1628>
   104d0:	andeq	r4, r1, r8, asr #18
   104d4:	andeq	r4, r1, r4, lsl #14
   104d8:	andeq	r4, r1, r0, asr #15
   104dc:	andeq	r4, r1, r0, ror #15
   104e0:	andeq	r4, r1, ip, lsl #12
   104e4:	andeq	r4, r1, r8, lsr #21
   104e8:	andeq	r4, r1, r4, lsl r6
   104ec:	andeq	r4, r1, r4, asr #6
   104f0:	andeq	r4, r1, r8, lsl r5
   104f4:	andeq	r4, r1, r4, lsl #9
   104f8:	andeq	r4, r1, r8, lsl #10
   104fc:	andeq	r4, r1, ip, lsr r4
   10500:	push	{r4, lr}
   10504:	vpush	{d8-d10}
   10508:	ldr	r3, [pc, #216]	; 105e8 <main@@Base+0x9a18>
   1050c:	ldr	r1, [pc, #216]	; 105ec <main@@Base+0x9a1c>
   10510:	add	r3, pc, r3
   10514:	ldr	r4, [r3, r1]
   10518:	sub	sp, sp, #8
   1051c:	ldr	r3, [r4]
   10520:	mov	r2, #0
   10524:	mov	r1, #5
   10528:	str	r3, [sp, #4]
   1052c:	bl	61f4 <av_stream_get_side_data@plt>
   10530:	cmp	r0, #0
   10534:	beq	105b4 <main@@Base+0x99e4>
   10538:	bl	6500 <av_display_rotation_get@plt>
   1053c:	vldr	d10, [pc, #124]	; 105c0 <main@@Base+0x99f0>
   10540:	vneg.f64	d8, d0
   10544:	vldr	d7, [pc, #124]	; 105c8 <main@@Base+0x99f8>
   10548:	vdiv.f64	d0, d8, d10
   1054c:	vadd.f64	d0, d0, d7
   10550:	bl	6230 <floor@plt>
   10554:	vldr	d9, [pc, #116]	; 105d0 <main@@Base+0x9a00>
   10558:	vmls.f64	d8, d0, d10
   1055c:	vdiv.f64	d0, d8, d9
   10560:	bl	6908 <round@plt>
   10564:	vmov.f64	d7, d8
   10568:	vmls.f64	d7, d0, d9
   1056c:	vldr	d6, [pc, #100]	; 105d8 <main@@Base+0x9a08>
   10570:	vabs.f64	d7, d7
   10574:	vcmpe.f64	d7, d6
   10578:	vmrs	APSR_nzcv, fpscr
   1057c:	ble	10594 <main@@Base+0x99c4>
   10580:	ldr	r2, [pc, #104]	; 105f0 <main@@Base+0x9a20>
   10584:	mov	r1, #24
   10588:	add	r2, pc, r2
   1058c:	mov	r0, #0
   10590:	bl	6188 <av_log@plt>
   10594:	ldr	r2, [sp, #4]
   10598:	ldr	r3, [r4]
   1059c:	vmov.f64	d0, d8
   105a0:	cmp	r2, r3
   105a4:	bne	105bc <main@@Base+0x99ec>
   105a8:	add	sp, sp, #8
   105ac:	vpop	{d8-d10}
   105b0:	pop	{r4, pc}
   105b4:	vldr	d8, [pc, #36]	; 105e0 <main@@Base+0x9a10>
   105b8:	b	10594 <main@@Base+0x99c4>
   105bc:	bl	5e7c <__stack_chk_fail@plt>
   105c0:	andeq	r0, r0, r0
   105c4:	rsbsmi	r8, r6, r0
   105c8:			; <UNDEFINED> instruction: 0x47ae147b
   105cc:	svccc	0x00647ae1
   105d0:	andeq	r0, r0, r0
   105d4:	subsmi	r8, r6, r0
   105d8:	andeq	r0, r0, r0
   105dc:	andmi	r0, r0, r0
   105e0:	andeq	r0, r0, r0
   105e4:	andhi	r0, r0, r0
   105e8:	andeq	r8, r2, r4, lsl #11
   105ec:	andeq	r0, r0, r8, asr r5
   105f0:			; <UNDEFINED> instruction: 0x000144b4
   105f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   105f8:	mov	r4, #0
   105fc:	ldr	r3, [pc, #308]	; 10738 <main@@Base+0x9b68>
   10600:	ldr	r1, [pc, #308]	; 1073c <main@@Base+0x9b6c>
   10604:	add	r3, pc, r3
   10608:	ldr	r6, [r3, r1]
   1060c:	sub	sp, sp, #16
   10610:	ldr	r3, [r6]
   10614:	mov	r5, r2
   10618:	str	r3, [sp, #12]
   1061c:	str	r4, [sp, #4]
   10620:	str	r4, [sp, #8]
   10624:	bl	67f4 <av_log_get_level@plt>
   10628:	add	r7, sp, #8
   1062c:	mov	r9, r0
   10630:	mov	r0, #16
   10634:	bl	5de0 <av_log_set_level@plt>
   10638:	mov	r0, r5
   1063c:	mov	r2, r7
   10640:	add	r1, sp, #4
   10644:	bl	9130 <main@@Base+0x2560>
   10648:	subs	r8, r0, #0
   1064c:	blt	10700 <main@@Base+0x9b30>
   10650:	ldr	sl, [pc, #232]	; 10740 <main@@Base+0x9b70>
   10654:	add	sl, pc, sl
   10658:	mov	r0, r4
   1065c:	bl	67dc <av_input_audio_device_next@plt>
   10660:	subs	r4, r0, #0
   10664:	beq	106b8 <main@@Base+0x9ae8>
   10668:	ldr	r5, [r4]
   1066c:	mov	r1, sl
   10670:	mov	r0, r5
   10674:	bl	695c <strcmp@plt>
   10678:	cmp	r0, #0
   1067c:	beq	10658 <main@@Base+0x9a88>
   10680:	ldr	r0, [sp, #4]
   10684:	cmp	r0, #0
   10688:	beq	1069c <main@@Base+0x9acc>
   1068c:	mov	r1, r5
   10690:	bl	6950 <av_match_name@plt>
   10694:	cmp	r0, #0
   10698:	beq	10658 <main@@Base+0x9a88>
   1069c:	ldr	r1, [sp, #8]
   106a0:	mov	r0, r4
   106a4:	bl	921c <main@@Base+0x264c>
   106a8:	mov	r0, r4
   106ac:	bl	67dc <av_input_audio_device_next@plt>
   106b0:	subs	r4, r0, #0
   106b4:	bne	10668 <main@@Base+0x9a98>
   106b8:	mov	r0, r4
   106bc:	bl	629c <av_input_video_device_next@plt>
   106c0:	subs	r4, r0, #0
   106c4:	beq	10700 <main@@Base+0x9b30>
   106c8:	ldr	r0, [sp, #4]
   106cc:	cmp	r0, #0
   106d0:	beq	106e4 <main@@Base+0x9b14>
   106d4:	ldr	r1, [r4]
   106d8:	bl	6950 <av_match_name@plt>
   106dc:	cmp	r0, #0
   106e0:	beq	106b8 <main@@Base+0x9ae8>
   106e4:	ldr	r1, [sp, #8]
   106e8:	mov	r0, r4
   106ec:	bl	921c <main@@Base+0x264c>
   106f0:	mov	r0, r4
   106f4:	bl	629c <av_input_video_device_next@plt>
   106f8:	subs	r4, r0, #0
   106fc:	bne	106c8 <main@@Base+0x9af8>
   10700:	mov	r0, r7
   10704:	bl	5e28 <av_dict_free@plt>
   10708:	ldr	r0, [sp, #4]
   1070c:	bl	69b0 <av_free@plt>
   10710:	mov	r0, r9
   10714:	bl	5de0 <av_log_set_level@plt>
   10718:	ldr	r2, [sp, #12]
   1071c:	ldr	r3, [r6]
   10720:	mov	r0, r8
   10724:	cmp	r2, r3
   10728:	bne	10734 <main@@Base+0x9b64>
   1072c:	add	sp, sp, #16
   10730:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10734:	bl	5e7c <__stack_chk_fail@plt>
   10738:	muleq	r2, r0, r4
   1073c:	andeq	r0, r0, r8, asr r5
   10740:	muleq	r1, r8, r4
   10744:	push	{r4, r5, r6, r7, r8, lr}
   10748:	mov	r4, #0
   1074c:	ldr	r3, [pc, #276]	; 10868 <main@@Base+0x9c98>
   10750:	ldr	r1, [pc, #276]	; 1086c <main@@Base+0x9c9c>
   10754:	add	r3, pc, r3
   10758:	ldr	r5, [r3, r1]
   1075c:	sub	sp, sp, #16
   10760:	ldr	r3, [r5]
   10764:	mov	r7, r2
   10768:	str	r3, [sp, #12]
   1076c:	str	r4, [sp, #4]
   10770:	str	r4, [sp, #8]
   10774:	bl	67f4 <av_log_get_level@plt>
   10778:	add	r6, sp, #8
   1077c:	mov	r8, r0
   10780:	mov	r0, #16
   10784:	bl	5de0 <av_log_set_level@plt>
   10788:	mov	r0, r7
   1078c:	mov	r2, r6
   10790:	add	r1, sp, #4
   10794:	bl	9130 <main@@Base+0x2560>
   10798:	subs	r7, r0, #0
   1079c:	blt	10830 <main@@Base+0x9c60>
   107a0:	mov	r0, r4
   107a4:	bl	61e8 <av_output_audio_device_next@plt>
   107a8:	subs	r4, r0, #0
   107ac:	beq	107e8 <main@@Base+0x9c18>
   107b0:	ldr	r0, [sp, #4]
   107b4:	cmp	r0, #0
   107b8:	beq	107cc <main@@Base+0x9bfc>
   107bc:	ldr	r1, [r4]
   107c0:	bl	6950 <av_match_name@plt>
   107c4:	cmp	r0, #0
   107c8:	beq	107a0 <main@@Base+0x9bd0>
   107cc:	ldr	r1, [sp, #8]
   107d0:	mov	r0, r4
   107d4:	bl	93e4 <main@@Base+0x2814>
   107d8:	mov	r0, r4
   107dc:	bl	61e8 <av_output_audio_device_next@plt>
   107e0:	subs	r4, r0, #0
   107e4:	bne	107b0 <main@@Base+0x9be0>
   107e8:	mov	r0, r4
   107ec:	bl	6a34 <av_output_video_device_next@plt>
   107f0:	subs	r4, r0, #0
   107f4:	beq	10830 <main@@Base+0x9c60>
   107f8:	ldr	r0, [sp, #4]
   107fc:	cmp	r0, #0
   10800:	beq	10814 <main@@Base+0x9c44>
   10804:	ldr	r1, [r4]
   10808:	bl	6950 <av_match_name@plt>
   1080c:	cmp	r0, #0
   10810:	beq	107e8 <main@@Base+0x9c18>
   10814:	ldr	r1, [sp, #8]
   10818:	mov	r0, r4
   1081c:	bl	93e4 <main@@Base+0x2814>
   10820:	mov	r0, r4
   10824:	bl	6a34 <av_output_video_device_next@plt>
   10828:	subs	r4, r0, #0
   1082c:	bne	107f8 <main@@Base+0x9c28>
   10830:	mov	r0, r6
   10834:	bl	5e28 <av_dict_free@plt>
   10838:	ldr	r0, [sp, #4]
   1083c:	bl	69b0 <av_free@plt>
   10840:	mov	r0, r8
   10844:	bl	5de0 <av_log_set_level@plt>
   10848:	ldr	r2, [sp, #12]
   1084c:	ldr	r3, [r5]
   10850:	mov	r0, r7
   10854:	cmp	r2, r3
   10858:	bne	10864 <main@@Base+0x9c94>
   1085c:	add	sp, sp, #16
   10860:	pop	{r4, r5, r6, r7, r8, pc}
   10864:	bl	5e7c <__stack_chk_fail@plt>
   10868:	andeq	r8, r2, r0, asr #6
   1086c:	andeq	r0, r0, r8, asr r5
   10870:	push	{lr}		; (str lr, [sp, #-4]!)
   10874:	ldr	r3, [pc, #52]	; 108b0 <main@@Base+0x9ce0>
   10878:	ldr	r2, [pc, #52]	; 108b4 <main@@Base+0x9ce4>
   1087c:	add	r3, pc, r3
   10880:	ldr	r2, [r3, r2]
   10884:	sub	sp, sp, #12
   10888:	ldr	r3, [r2]
   1088c:	ldr	r0, [r0, #8]
   10890:	str	r3, [sp, #4]
   10894:	ldr	r1, [sp, #4]
   10898:	ldr	r3, [r2]
   1089c:	cmp	r1, r3
   108a0:	bne	108ac <main@@Base+0x9cdc>
   108a4:	add	sp, sp, #12
   108a8:	pop	{pc}		; (ldr pc, [sp], #4)
   108ac:	bl	5e7c <__stack_chk_fail@plt>
   108b0:	andeq	r8, r2, r8, lsl r2
   108b4:	andeq	r0, r0, r8, asr r5
   108b8:	push	{r4, r5, lr}
   108bc:	ldr	r3, [pc, #92]	; 10920 <main@@Base+0x9d50>
   108c0:	ldr	r1, [pc, #92]	; 10924 <main@@Base+0x9d54>
   108c4:	add	r3, pc, r3
   108c8:	ldr	r4, [r3, r1]
   108cc:	mov	r5, r2
   108d0:	ldr	r2, [pc, #80]	; 10928 <main@@Base+0x9d58>
   108d4:	ldr	r3, [r4]
   108d8:	sub	sp, sp, #12
   108dc:	add	r2, pc, r2
   108e0:	mov	r1, #24
   108e4:	mov	r0, #0
   108e8:	str	r3, [sp, #4]
   108ec:	bl	6188 <av_log@plt>
   108f0:	ldr	r2, [sp, #4]
   108f4:	ldr	r3, [r4]
   108f8:	cmp	r2, r3
   108fc:	bne	1091c <main@@Base+0x9d4c>
   10900:	mov	r2, r5
   10904:	mov	r0, #0
   10908:	ldr	r1, [pc, #28]	; 1092c <main@@Base+0x9d5c>
   1090c:	add	r1, pc, r1
   10910:	add	sp, sp, #12
   10914:	pop	{r4, r5, lr}
   10918:	b	c244 <main@@Base+0x5674>
   1091c:	bl	5e7c <__stack_chk_fail@plt>
   10920:	ldrdeq	r8, [r2], -r0
   10924:	andeq	r0, r0, r8, asr r5
   10928:	andeq	r4, r1, r0, asr #6
   1092c:	andeq	r4, r1, r4, asr #6
   10930:	push	{r4, r5, lr}
   10934:	ldr	r3, [pc, #92]	; 10998 <main@@Base+0x9dc8>
   10938:	ldr	r1, [pc, #92]	; 1099c <main@@Base+0x9dcc>
   1093c:	add	r3, pc, r3
   10940:	ldr	r4, [r3, r1]
   10944:	mov	r5, r2
   10948:	ldr	r2, [pc, #80]	; 109a0 <main@@Base+0x9dd0>
   1094c:	ldr	r3, [r4]
   10950:	sub	sp, sp, #12
   10954:	add	r2, pc, r2
   10958:	mov	r1, #24
   1095c:	mov	r0, #0
   10960:	str	r3, [sp, #4]
   10964:	bl	6188 <av_log@plt>
   10968:	ldr	r2, [sp, #4]
   1096c:	ldr	r3, [r4]
   10970:	cmp	r2, r3
   10974:	bne	10994 <main@@Base+0x9dc4>
   10978:	mov	r2, r5
   1097c:	mov	r0, #0
   10980:	ldr	r1, [pc, #28]	; 109a4 <main@@Base+0x9dd4>
   10984:	add	r1, pc, r1
   10988:	add	sp, sp, #12
   1098c:	pop	{r4, r5, lr}
   10990:	b	c244 <main@@Base+0x5674>
   10994:	bl	5e7c <__stack_chk_fail@plt>
   10998:	andeq	r8, r2, r8, asr r1
   1099c:	andeq	r0, r0, r8, asr r5
   109a0:	andeq	r4, r1, ip, lsl #6
   109a4:	andeq	r4, r1, r8, lsl #6
   109a8:	push	{r4, r5, r6, lr}
   109ac:	mov	r5, r2
   109b0:	ldr	r3, [pc, #200]	; 10a80 <main@@Base+0x9eb0>
   109b4:	ldr	r2, [pc, #200]	; 10a84 <main@@Base+0x9eb4>
   109b8:	add	r3, pc, r3
   109bc:	ldr	r4, [r3, r2]
   109c0:	mov	r6, r1
   109c4:	ldr	r1, [pc, #188]	; 10a88 <main@@Base+0x9eb8>
   109c8:	ldr	r3, [r4]
   109cc:	sub	sp, sp, #8
   109d0:	mov	r0, r5
   109d4:	add	r1, pc, r1
   109d8:	str	r3, [sp, #4]
   109dc:	bl	695c <strcmp@plt>
   109e0:	cmp	r0, #0
   109e4:	beq	10a04 <main@@Base+0x9e34>
   109e8:	ldr	r1, [pc, #156]	; 10a8c <main@@Base+0x9ebc>
   109ec:	mov	r0, r5
   109f0:	add	r1, pc, r1
   109f4:	bl	695c <strcmp@plt>
   109f8:	cmp	r0, #0
   109fc:	moveq	r0, #1
   10a00:	bne	10a2c <main@@Base+0x9e5c>
   10a04:	ldr	r1, [sp, #4]
   10a08:	ldr	r3, [pc, #128]	; 10a90 <main@@Base+0x9ec0>
   10a0c:	ldr	r2, [r4]
   10a10:	add	r3, pc, r3
   10a14:	cmp	r1, r2
   10a18:	str	r0, [r3]
   10a1c:	mov	r0, #0
   10a20:	bne	10a6c <main@@Base+0x9e9c>
   10a24:	add	sp, sp, #8
   10a28:	pop	{r4, r5, r6, pc}
   10a2c:	ldr	r1, [pc, #96]	; 10a94 <main@@Base+0x9ec4>
   10a30:	mov	r0, r5
   10a34:	add	r1, pc, r1
   10a38:	bl	695c <strcmp@plt>
   10a3c:	cmp	r0, #0
   10a40:	moveq	r0, #2
   10a44:	beq	10a04 <main@@Base+0x9e34>
   10a48:	mov	r0, r6
   10a4c:	mov	r1, r5
   10a50:	vldr	d1, [pc, #24]	; 10a70 <main@@Base+0x9ea0>
   10a54:	vldr	d0, [pc, #28]	; 10a78 <main@@Base+0x9ea8>
   10a58:	mov	r2, #128	; 0x80
   10a5c:	bl	b2cc <main@@Base+0x46fc>
   10a60:	vcvt.s32.f64	s15, d0
   10a64:	vmov	r0, s15
   10a68:	b	10a04 <main@@Base+0x9e34>
   10a6c:	bl	5e7c <__stack_chk_fail@plt>
   10a70:	andeq	r0, r0, r0
   10a74:	andmi	r0, r0, r0
	...
   10a80:	ldrdeq	r8, [r2], -ip
   10a84:	andeq	r0, r0, r8, asr r5
   10a88:			; <UNDEFINED> instruction: 0x000156b8
   10a8c:	andeq	r4, r1, r8, lsr #5
   10a90:	andeq	r8, r2, r0, asr #12
   10a94:	andeq	r4, r1, ip, ror #4
   10a98:	push	{r4, lr}
   10a9c:	ldr	r3, [pc, #108]	; 10b10 <main@@Base+0x9f40>
   10aa0:	ldr	ip, [pc, #108]	; 10b14 <main@@Base+0x9f44>
   10aa4:	add	r3, pc, r3
   10aa8:	ldr	r4, [r3, ip]
   10aac:	sub	sp, sp, #8
   10ab0:	ldr	r3, [r4]
   10ab4:	mov	r0, r1
   10ab8:	vldr	d1, [pc, #64]	; 10b00 <main@@Base+0x9f30>
   10abc:	mov	r1, r2
   10ac0:	vldr	d0, [pc, #64]	; 10b08 <main@@Base+0x9f38>
   10ac4:	mov	r2, #1024	; 0x400
   10ac8:	str	r3, [sp, #4]
   10acc:	bl	b2cc <main@@Base+0x46fc>
   10ad0:	vcvt.s32.f64	s0, d0
   10ad4:	ldr	r1, [sp, #4]
   10ad8:	ldr	r3, [pc, #56]	; 10b18 <main@@Base+0x9f48>
   10adc:	ldr	r2, [r4]
   10ae0:	add	r3, pc, r3
   10ae4:	cmp	r1, r2
   10ae8:	vstr	s0, [r3]
   10aec:	bne	10afc <main@@Base+0x9f2c>
   10af0:	mov	r0, #0
   10af4:	add	sp, sp, #8
   10af8:	pop	{r4, pc}
   10afc:	bl	5e7c <__stack_chk_fail@plt>
   10b00:			; <UNDEFINED> instruction: 0xffc00000
   10b04:	ldrshmi	pc, [pc, #255]	; 10c0b <main@@Base+0xa03b>	; <UNPREDICTABLE>
   10b08:	andeq	r0, r0, r0
   10b0c:	svccc	0x00f00000	; IMB
   10b10:	strdeq	r7, [r2], -r0
   10b14:	andeq	r0, r0, r8, asr r5
   10b18:	andeq	r8, r2, r0, ror #11
   10b1c:	push	{r4, lr}
   10b20:	ldr	r3, [pc, #112]	; 10b98 <main@@Base+0x9fc8>
   10b24:	ldr	ip, [pc, #112]	; 10b9c <main@@Base+0x9fcc>
   10b28:	add	r3, pc, r3
   10b2c:	ldr	r4, [r3, ip]
   10b30:	sub	sp, sp, #8
   10b34:	ldr	r3, [r4]
   10b38:	mov	r0, r1
   10b3c:	vldr	d1, [pc, #68]	; 10b88 <main@@Base+0x9fb8>
   10b40:	mov	r1, r2
   10b44:	vldr	d0, [pc, #68]	; 10b90 <main@@Base+0x9fc0>
   10b48:	mov	r2, #1024	; 0x400
   10b4c:	str	r3, [sp, #4]
   10b50:	bl	b2cc <main@@Base+0x46fc>
   10b54:	vcvt.s32.f64	s0, d0
   10b58:	ldr	r1, [sp, #4]
   10b5c:	ldr	r3, [pc, #60]	; 10ba0 <main@@Base+0x9fd0>
   10b60:	ldr	r2, [r4]
   10b64:	add	r3, pc, r3
   10b68:	cmp	r1, r2
   10b6c:	vstr	s0, [r3, #4]
   10b70:	bne	10b80 <main@@Base+0x9fb0>
   10b74:	mov	r0, #0
   10b78:	add	sp, sp, #8
   10b7c:	pop	{r4, pc}
   10b80:	bl	5e7c <__stack_chk_fail@plt>
   10b84:	nop	{0}
   10b88:			; <UNDEFINED> instruction: 0xffc00000
   10b8c:	ldrshmi	pc, [pc, #255]	; 10c93 <main@@Base+0xa0c3>	; <UNPREDICTABLE>
   10b90:	andeq	r0, r0, r0
   10b94:	svccc	0x00f00000	; IMB
   10b98:	andeq	r7, r2, ip, ror #30
   10b9c:	andeq	r0, r0, r8, asr r5
   10ba0:	andeq	r8, r2, ip, asr r5
   10ba4:	push	{r4, r5, r6, lr}
   10ba8:	ldr	r4, [pc, #108]	; 10c1c <main@@Base+0xa04c>
   10bac:	ldr	r1, [pc, #108]	; 10c20 <main@@Base+0xa050>
   10bb0:	add	r4, pc, r4
   10bb4:	mov	r0, r4
   10bb8:	ldr	ip, [pc, #100]	; 10c24 <main@@Base+0xa054>
   10bbc:	add	r1, pc, r1
   10bc0:	ldr	r5, [r1, ip]
   10bc4:	ldr	r3, [r0, #8]!
   10bc8:	ldr	ip, [r5]
   10bcc:	sub	sp, sp, #8
   10bd0:	mov	r6, r2
   10bd4:	mov	r2, r0
   10bd8:	add	r3, r3, #1
   10bdc:	ldr	r0, [r4, #12]
   10be0:	mov	r1, #4
   10be4:	str	ip, [sp, #4]
   10be8:	bl	f360 <main@@Base+0x8790>
   10bec:	ldr	r3, [r4, #8]
   10bf0:	str	r0, [r4, #12]
   10bf4:	sub	r3, r3, #-1073741823	; 0xc0000001
   10bf8:	str	r6, [r0, r3, lsl #2]
   10bfc:	ldr	r2, [sp, #4]
   10c00:	ldr	r3, [r5]
   10c04:	cmp	r2, r3
   10c08:	bne	10c18 <main@@Base+0xa048>
   10c0c:	mov	r0, #0
   10c10:	add	sp, sp, #8
   10c14:	pop	{r4, r5, r6, pc}
   10c18:	bl	5e7c <__stack_chk_fail@plt>
   10c1c:	andeq	r8, r2, r0, lsl r5
   10c20:	ldrdeq	r7, [r2], -r8
   10c24:	andeq	r0, r0, r8, asr r5
   10c28:	push	{r4, r5, lr}
   10c2c:	ldr	r2, [pc, #156]	; 10cd0 <main@@Base+0xa100>
   10c30:	ldr	r0, [pc, #156]	; 10cd4 <main@@Base+0xa104>
   10c34:	ldr	r3, [pc, #156]	; 10cd8 <main@@Base+0xa108>
   10c38:	add	r2, pc, r2
   10c3c:	ldr	r5, [r2, r0]
   10c40:	add	r3, pc, r3
   10c44:	ldr	r3, [r3, #16]
   10c48:	ldr	r0, [r5]
   10c4c:	sub	sp, sp, #20
   10c50:	cmp	r3, #0
   10c54:	mov	r4, r1
   10c58:	str	r0, [sp, #12]
   10c5c:	bne	10ca8 <main@@Base+0xa0d8>
   10c60:	ldr	r1, [pc, #116]	; 10cdc <main@@Base+0xa10c>
   10c64:	mov	r0, r4
   10c68:	add	r1, pc, r1
   10c6c:	bl	695c <strcmp@plt>
   10c70:	cmp	r0, #0
   10c74:	beq	10c9c <main@@Base+0xa0cc>
   10c78:	ldr	r1, [sp, #12]
   10c7c:	ldr	r2, [pc, #92]	; 10ce0 <main@@Base+0xa110>
   10c80:	ldr	r3, [r5]
   10c84:	add	r2, pc, r2
   10c88:	cmp	r1, r3
   10c8c:	str	r4, [r2, #16]
   10c90:	bne	10ccc <main@@Base+0xa0fc>
   10c94:	add	sp, sp, #20
   10c98:	pop	{r4, r5, pc}
   10c9c:	ldr	r4, [pc, #64]	; 10ce4 <main@@Base+0xa114>
   10ca0:	add	r4, pc, r4
   10ca4:	b	10c78 <main@@Base+0xa0a8>
   10ca8:	ldr	r2, [pc, #56]	; 10ce8 <main@@Base+0xa118>
   10cac:	str	r3, [sp]
   10cb0:	mov	r0, #0
   10cb4:	mov	r3, r1
   10cb8:	add	r2, pc, r2
   10cbc:	mov	r1, #8
   10cc0:	bl	6188 <av_log@plt>
   10cc4:	mov	r0, #1
   10cc8:	bl	6adc <exit@plt>
   10ccc:	bl	5e7c <__stack_chk_fail@plt>
   10cd0:	andeq	r7, r2, ip, asr lr
   10cd4:	andeq	r0, r0, r8, asr r5
   10cd8:	andeq	r8, r2, r0, lsl #9
   10cdc:	muleq	r1, r4, r0
   10ce0:	andeq	r8, r2, ip, lsr r4
   10ce4:	andeq	r4, r1, r8
   10ce8:	strdeq	r3, [r1], -r8
   10cec:	push	{lr}		; (str lr, [sp, #-4]!)
   10cf0:	ldr	r3, [pc, #28]	; 10d14 <main@@Base+0xa144>
   10cf4:	ldr	r2, [pc, #28]	; 10d18 <main@@Base+0xa148>
   10cf8:	add	r3, pc, r3
   10cfc:	ldr	r3, [r3, r2]
   10d00:	sub	sp, sp, #12
   10d04:	ldr	r3, [r3]
   10d08:	mov	r0, #123	; 0x7b
   10d0c:	str	r3, [sp, #4]
   10d10:	bl	6adc <exit@plt>
   10d14:	muleq	r2, ip, sp
   10d18:	andeq	r0, r0, r8, asr r5
   10d1c:	push	{r4, lr}
   10d20:	ldr	r3, [pc, #80]	; 10d78 <main@@Base+0xa1a8>
   10d24:	ldr	ip, [pc, #80]	; 10d7c <main@@Base+0xa1ac>
   10d28:	add	r3, pc, r3
   10d2c:	ldr	r4, [r3, ip]
   10d30:	sub	sp, sp, #8
   10d34:	ldr	r3, [r4]
   10d38:	mov	r0, r1
   10d3c:	mov	r1, r2
   10d40:	mov	r2, #1
   10d44:	str	r3, [sp, #4]
   10d48:	bl	b418 <main@@Base+0x4848>
   10d4c:	ldr	ip, [sp, #4]
   10d50:	ldr	r3, [pc, #40]	; 10d80 <main@@Base+0xa1b0>
   10d54:	ldr	r2, [r4]
   10d58:	add	r3, pc, r3
   10d5c:	cmp	ip, r2
   10d60:	strd	r0, [r3, #8]
   10d64:	bne	10d74 <main@@Base+0xa1a4>
   10d68:	mov	r0, #0
   10d6c:	add	sp, sp, #8
   10d70:	pop	{r4, pc}
   10d74:	bl	5e7c <__stack_chk_fail@plt>
   10d78:	andeq	r7, r2, ip, ror #26
   10d7c:	andeq	r0, r0, r8, asr r5
   10d80:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   10d84:	push	{r4, lr}
   10d88:	ldr	r3, [pc, #80]	; 10de0 <main@@Base+0xa210>
   10d8c:	ldr	ip, [pc, #80]	; 10de4 <main@@Base+0xa214>
   10d90:	add	r3, pc, r3
   10d94:	ldr	r4, [r3, ip]
   10d98:	sub	sp, sp, #8
   10d9c:	ldr	r3, [r4]
   10da0:	mov	r0, r1
   10da4:	mov	r1, r2
   10da8:	mov	r2, #1
   10dac:	str	r3, [sp, #4]
   10db0:	bl	b418 <main@@Base+0x4848>
   10db4:	ldr	ip, [sp, #4]
   10db8:	ldr	r3, [pc, #40]	; 10de8 <main@@Base+0xa218>
   10dbc:	ldr	r2, [r4]
   10dc0:	add	r3, pc, r3
   10dc4:	cmp	ip, r2
   10dc8:	strd	r0, [r3, #16]
   10dcc:	bne	10ddc <main@@Base+0xa20c>
   10dd0:	mov	r0, #0
   10dd4:	add	sp, sp, #8
   10dd8:	pop	{r4, pc}
   10ddc:	bl	5e7c <__stack_chk_fail@plt>
   10de0:	andeq	r7, r2, r4, lsl #26
   10de4:	andeq	r0, r0, r8, asr r5
   10de8:	muleq	r2, r0, r2
   10dec:	push	{r4, r5, r6, r7, lr}
   10df0:	mov	r4, r0
   10df4:	mov	r6, #0
   10df8:	mov	r0, #0
   10dfc:	ldr	r3, [pc, #132]	; 10e88 <main@@Base+0xa2b8>
   10e00:	ldr	r2, [pc, #132]	; 10e8c <main@@Base+0xa2bc>
   10e04:	add	r3, pc, r3
   10e08:	ldr	r5, [r3, r2]
   10e0c:	ldr	r7, [pc, #124]	; 10e90 <main@@Base+0xa2c0>
   10e10:	ldr	r3, [r5]
   10e14:	sub	sp, sp, #12
   10e18:	str	r1, [r4, #40]	; 0x28
   10e1c:	strd	r6, [r4, #24]
   10e20:	str	r0, [r4, #36]	; 0x24
   10e24:	str	r3, [sp, #4]
   10e28:	bl	65f0 <av_gettime_relative@plt>
   10e2c:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   10e30:	vldr	d5, [pc, #64]	; 10e78 <main@@Base+0xa2a8>
   10e34:	vmov	d6, r0, r1
   10e38:	vldr	d7, [pc, #64]	; 10e80 <main@@Base+0xa2b0>
   10e3c:	vdiv.f64	d6, d6, d5
   10e40:	mvn	r3, #0
   10e44:	vsub.f64	d5, d7, d6
   10e48:	ldr	r1, [sp, #4]
   10e4c:	ldr	r2, [r5]
   10e50:	vstr	d6, [r4, #16]
   10e54:	cmp	r1, r2
   10e58:	vstr	d5, [r4, #8]
   10e5c:	vstr	d7, [r4]
   10e60:	str	r3, [r4, #32]
   10e64:	bne	10e70 <main@@Base+0xa2a0>
   10e68:	add	sp, sp, #12
   10e6c:	pop	{r4, r5, r6, r7, pc}
   10e70:	bl	5e7c <__stack_chk_fail@plt>
   10e74:	nop	{0}
   10e78:	andeq	r0, r0, r0
   10e7c:	smlawbmi	lr, r0, r4, r8
   10e80:	andeq	r0, r0, r0
   10e84:	svcvc	0x00f80000
   10e88:	muleq	r2, r0, ip
   10e8c:	andeq	r0, r0, r8, asr r5
   10e90:	svccc	0x00f00000	; IMB
   10e94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e98:	mov	r4, r0
   10e9c:	mov	lr, #0
   10ea0:	ldr	r0, [pc, #372]	; 1101c <main@@Base+0xa44c>
   10ea4:	ldr	ip, [pc, #372]	; 11020 <main@@Base+0xa450>
   10ea8:	add	r0, pc, r0
   10eac:	ldr	r5, [r0, ip]
   10eb0:	mov	sl, r3
   10eb4:	ldr	r3, [r5]
   10eb8:	sub	sp, sp, #28
   10ebc:	subs	fp, r1, #0
   10ec0:	mov	r6, r2
   10ec4:	str	r3, [sp, #20]
   10ec8:	mov	r2, r0
   10ecc:	ldr	r8, [r4, #8]
   10ed0:	str	lr, [sp, #12]
   10ed4:	str	lr, [sp, #16]
   10ed8:	beq	10fe4 <main@@Base+0xa414>
   10edc:	bl	6a70 <avfilter_inout_alloc@plt>
   10ee0:	str	r0, [sp, #12]
   10ee4:	bl	6a70 <avfilter_inout_alloc@plt>
   10ee8:	clz	r9, r0
   10eec:	ldr	r7, [sp, #12]
   10ef0:	lsr	r9, r9, #5
   10ef4:	cmp	r7, #0
   10ef8:	moveq	r9, #1
   10efc:	cmp	r9, #0
   10f00:	str	r0, [sp, #16]
   10f04:	bne	11008 <main@@Base+0xa438>
   10f08:	ldr	r0, [pc, #276]	; 11024 <main@@Base+0xa454>
   10f0c:	add	r0, pc, r0
   10f10:	bl	60ec <av_strdup@plt>
   10f14:	ldr	r3, [sp, #12]
   10f18:	str	r0, [r7]
   10f1c:	ldr	r0, [pc, #260]	; 11028 <main@@Base+0xa458>
   10f20:	stmib	r3, {r6, r9}
   10f24:	str	r9, [r3, #12]
   10f28:	add	r0, pc, r0
   10f2c:	ldr	r6, [sp, #16]
   10f30:	bl	60ec <av_strdup@plt>
   10f34:	ldr	r3, [sp, #16]
   10f38:	add	r7, sp, #12
   10f3c:	str	r0, [r6]
   10f40:	add	r6, sp, #16
   10f44:	str	r9, [r3, #8]
   10f48:	str	r9, [r3, #12]
   10f4c:	str	sl, [r3, #4]
   10f50:	mov	r1, fp
   10f54:	str	r9, [sp]
   10f58:	mov	r3, r7
   10f5c:	mov	r2, r6
   10f60:	mov	r0, r4
   10f64:	bl	6740 <avfilter_graph_parse_ptr@plt>
   10f68:	subs	r9, r0, #0
   10f6c:	blt	10fb8 <main@@Base+0xa3e8>
   10f70:	ldr	ip, [r4, #8]
   10f74:	subs	ip, ip, r8
   10f78:	beq	10fa8 <main@@Base+0xa3d8>
   10f7c:	ldr	r2, [r4, #4]
   10f80:	sub	r8, r8, #-1073741823	; 0xc0000001
   10f84:	sub	r3, r2, #4
   10f88:	add	ip, r3, ip, lsl #2
   10f8c:	add	r2, r2, r8, lsl #2
   10f90:	ldr	r0, [r3, #4]!
   10f94:	ldr	r1, [r2, #4]!
   10f98:	cmp	ip, r3
   10f9c:	str	r0, [r2]
   10fa0:	str	r1, [r3]
   10fa4:	bne	10f90 <main@@Base+0xa3c0>
   10fa8:	mov	r0, r4
   10fac:	mov	r1, #0
   10fb0:	bl	67b8 <avfilter_graph_config@plt>
   10fb4:	mov	r9, r0
   10fb8:	mov	r0, r7
   10fbc:	bl	5cd8 <avfilter_inout_free@plt>
   10fc0:	mov	r0, r6
   10fc4:	bl	5cd8 <avfilter_inout_free@plt>
   10fc8:	ldr	r2, [sp, #20]
   10fcc:	ldr	r3, [r5]
   10fd0:	mov	r0, r9
   10fd4:	cmp	r2, r3
   10fd8:	bne	11018 <main@@Base+0xa448>
   10fdc:	add	sp, sp, #28
   10fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10fe4:	mov	r0, r6
   10fe8:	mov	r3, fp
   10fec:	mov	r2, sl
   10ff0:	bl	5d2c <avfilter_link@plt>
   10ff4:	subs	r9, r0, #0
   10ff8:	add	r7, sp, #12
   10ffc:	add	r6, sp, #16
   11000:	bge	10f70 <main@@Base+0xa3a0>
   11004:	b	10fb8 <main@@Base+0xa3e8>
   11008:	mvn	r9, #11
   1100c:	add	r7, sp, #12
   11010:	add	r6, sp, #16
   11014:	b	10fb8 <main@@Base+0xa3e8>
   11018:	bl	5e7c <__stack_chk_fail@plt>
   1101c:	andeq	r7, r2, ip, ror #23
   11020:	andeq	r0, r0, r8, asr r5
   11024:	strdeq	r3, [r1], -r4
   11028:	ldrdeq	r3, [r1], -ip
   1102c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11030:	mov	r5, r1
   11034:	ldr	r4, [pc, #1500]	; 11618 <main@@Base+0xaa48>
   11038:	sub	sp, sp, #1004	; 0x3ec
   1103c:	add	lr, r5, #1048576	; 0x100000
   11040:	ldr	r1, [pc, #1492]	; 1161c <main@@Base+0xaa4c>
   11044:	str	lr, [sp, #60]	; 0x3c
   11048:	add	r4, pc, r4
   1104c:	ldr	r1, [r4, r1]
   11050:	mov	r6, #0
   11054:	str	r2, [sp, #56]	; 0x38
   11058:	add	r2, lr, #4096	; 0x1000
   1105c:	mov	r7, r2
   11060:	ldr	ip, [r1]
   11064:	str	r1, [sp, #52]	; 0x34
   11068:	str	r0, [sp, #32]
   1106c:	str	r2, [sp, #44]	; 0x2c
   11070:	mov	r1, r6
   11074:	mov	r2, #508	; 0x1fc
   11078:	add	r0, sp, #488	; 0x1e8
   1107c:	mov	fp, r3
   11080:	str	ip, [sp, #996]	; 0x3e4
   11084:	str	r6, [sp, #484]	; 0x1e4
   11088:	bl	62e4 <memset@plt>
   1108c:	ldr	ip, [r7, #2012]	; 0x7dc
   11090:	mov	r3, r6
   11094:	mov	r2, ip
   11098:	ldr	ip, [ip, #176]	; 0xb0
   1109c:	ldr	r1, [r5, #60]	; 0x3c
   110a0:	add	r0, sp, #76	; 0x4c
   110a4:	str	ip, [sp, #48]	; 0x30
   110a8:	str	r6, [sp, #64]	; 0x40
   110ac:	str	r6, [sp, #68]	; 0x44
   110b0:	bl	64a0 <av_guess_frame_rate@plt>
   110b4:	ldr	ip, [pc, #1380]	; 11620 <main@@Base+0xaa50>
   110b8:	ldr	r3, [sp, #76]	; 0x4c
   110bc:	add	ip, pc, ip
   110c0:	ldr	lr, [ip, #28]
   110c4:	str	r3, [sp, #40]	; 0x28
   110c8:	ldr	r3, [sp, #80]	; 0x50
   110cc:	cmp	lr, r6
   110d0:	str	r3, [sp, #36]	; 0x24
   110d4:	beq	1114c <main@@Base+0xa57c>
   110d8:	add	ip, ip, #28
   110dc:	ldr	r0, [pc, #1344]	; 11624 <main@@Base+0xaa54>
   110e0:	ldr	r8, [pc, #1344]	; 11628 <main@@Base+0xaa58>
   110e4:	add	r5, ip, lr, lsl #2
   110e8:	ldr	r7, [pc, #1340]	; 1162c <main@@Base+0xaa5c>
   110ec:	mov	lr, r6
   110f0:	ldr	r6, [pc, #1336]	; 11630 <main@@Base+0xaa60>
   110f4:	add	r0, pc, r0
   110f8:	add	r8, pc, r8
   110fc:	ldr	r1, [ip, #4]!
   11100:	cmp	r1, r6
   11104:	beq	114b0 <main@@Base+0xa8e0>
   11108:	mov	r2, r7
   1110c:	mov	r3, #1
   11110:	b	11128 <main@@Base+0xa558>
   11114:	add	r3, r3, #1
   11118:	cmp	r3, #19
   1111c:	beq	11144 <main@@Base+0xa574>
   11120:	add	r2, r0, r3, lsl #3
   11124:	ldr	r2, [r2, #4]
   11128:	cmp	r2, r1
   1112c:	bne	11114 <main@@Base+0xa544>
   11130:	ldr	r2, [r8, r3, lsl #3]
   11134:	add	r3, sp, #1000	; 0x3e8
   11138:	add	r3, r3, lr, lsl #2
   1113c:	str	r2, [r3, #-916]	; 0xfffffc6c
   11140:	add	lr, lr, #1
   11144:	cmp	ip, r5
   11148:	bne	110fc <main@@Base+0xa52c>
   1114c:	mvn	r2, #0
   11150:	add	r3, sp, #1000	; 0x3e8
   11154:	add	lr, r3, lr, lsl #2
   11158:	ldr	r3, [pc, #1236]	; 11634 <main@@Base+0xaa64>
   1115c:	str	r2, [lr, #-916]	; 0xfffffc6c
   11160:	ldr	r7, [r4, r3]
   11164:	mov	r4, #0
   11168:	ldr	r6, [pc, #1224]	; 11638 <main@@Base+0xaa68>
   1116c:	ldr	r8, [pc, #1224]	; 1163c <main@@Base+0xaa6c>
   11170:	ldr	r9, [pc, #1224]	; 11640 <main@@Base+0xaa70>
   11174:	add	r5, sp, #484	; 0x1e4
   11178:	add	r6, pc, r6
   1117c:	add	r8, pc, r8
   11180:	add	r9, pc, r9
   11184:	mov	r2, r4
   11188:	mov	r3, #2
   1118c:	mov	r1, r6
   11190:	ldr	r0, [r7]
   11194:	bl	6878 <av_dict_get@plt>
   11198:	subs	r4, r0, #0
   1119c:	beq	111f8 <main@@Base+0xa628>
   111a0:	ldr	sl, [r4]
   111a4:	mov	r1, r8
   111a8:	mov	r0, sl
   111ac:	bl	695c <strcmp@plt>
   111b0:	ldr	r3, [r4, #4]
   111b4:	cmp	r0, #0
   111b8:	str	r3, [sp]
   111bc:	bne	111e0 <main@@Base+0xa610>
   111c0:	ldr	r3, [pc, #1148]	; 11644 <main@@Base+0xaa74>
   111c4:	ldr	r2, [pc, #1148]	; 11648 <main@@Base+0xaa78>
   111c8:	add	r3, pc, r3
   111cc:	add	r2, pc, r2
   111d0:	mov	r1, #512	; 0x200
   111d4:	mov	r0, r5
   111d8:	bl	6b18 <av_strlcatf@plt>
   111dc:	b	11184 <main@@Base+0xa5b4>
   111e0:	mov	r3, sl
   111e4:	mov	r2, r9
   111e8:	mov	r1, #512	; 0x200
   111ec:	mov	r0, r5
   111f0:	bl	6b18 <av_strlcatf@plt>
   111f4:	b	11184 <main@@Base+0xa5b4>
   111f8:	ldrb	r3, [sp, #484]	; 0x1e4
   111fc:	cmp	r3, #0
   11200:	beq	11218 <main@@Base+0xa648>
   11204:	mov	r0, r5
   11208:	bl	61a0 <strlen@plt>
   1120c:	add	r3, sp, #1000	; 0x3e8
   11210:	add	r0, r3, r0
   11214:	strb	r4, [r0, #-517]	; 0xfffffdfb
   11218:	mov	r0, r5
   1121c:	bl	60ec <av_strdup@plt>
   11220:	ldr	r1, [sp, #48]	; 0x30
   11224:	mov	r3, #256	; 0x100
   11228:	ldr	r2, [r1, #60]	; 0x3c
   1122c:	ldr	ip, [sp, #32]
   11230:	cmp	r2, #1
   11234:	movlt	r2, #1
   11238:	str	r2, [sp, #28]
   1123c:	ldr	r2, [sp, #44]	; 0x2c
   11240:	ldr	r1, [r1, #56]	; 0x38
   11244:	ldr	r2, [r2, #2012]	; 0x7dc
   11248:	str	r1, [sp, #24]
   1124c:	ldr	r1, [r2, #20]
   11250:	str	r0, [ip, #12]
   11254:	str	r1, [sp, #20]
   11258:	ldr	r1, [r2, #16]
   1125c:	ldr	r2, [pc, #1000]	; 1164c <main@@Base+0xaa7c>
   11260:	ldr	r0, [fp, #68]	; 0x44
   11264:	ldr	lr, [fp, #80]	; 0x50
   11268:	ldr	ip, [fp, #72]	; 0x48
   1126c:	add	r2, pc, r2
   11270:	add	r4, sp, #228	; 0xe4
   11274:	str	r1, [sp, #16]
   11278:	stmib	sp, {r0, ip}
   1127c:	mov	r1, r3
   11280:	str	r2, [sp]
   11284:	str	lr, [sp, #12]
   11288:	mov	r2, #1
   1128c:	mov	r0, r4
   11290:	bl	62d8 <__snprintf_chk@plt>
   11294:	ldrd	r2, [sp, #36]	; 0x24
   11298:	cmp	r3, #0
   1129c:	cmpne	r2, #0
   112a0:	bne	114b8 <main@@Base+0xa8e8>
   112a4:	ldr	r0, [pc, #932]	; 11650 <main@@Base+0xaa80>
   112a8:	mov	r5, #0
   112ac:	add	r0, pc, r0
   112b0:	bl	63e0 <avfilter_get_by_name@plt>
   112b4:	ldr	r6, [sp, #32]
   112b8:	ldr	r2, [pc, #916]	; 11654 <main@@Base+0xaa84>
   112bc:	mov	r1, r0
   112c0:	str	r6, [sp, #4]
   112c4:	mov	r3, r4
   112c8:	str	r5, [sp]
   112cc:	add	r2, pc, r2
   112d0:	add	r0, sp, #64	; 0x40
   112d4:	bl	6464 <avfilter_graph_create_filter@plt>
   112d8:	cmp	r0, #0
   112dc:	blt	11494 <main@@Base+0xa8c4>
   112e0:	ldr	r0, [pc, #880]	; 11658 <main@@Base+0xaa88>
   112e4:	add	r0, pc, r0
   112e8:	bl	63e0 <avfilter_get_by_name@plt>
   112ec:	ldr	r2, [pc, #872]	; 1165c <main@@Base+0xaa8c>
   112f0:	mov	r1, r0
   112f4:	str	r6, [sp, #4]
   112f8:	str	r5, [sp]
   112fc:	mov	r3, r5
   11300:	add	r2, pc, r2
   11304:	add	r0, sp, #68	; 0x44
   11308:	bl	6464 <avfilter_graph_create_filter@plt>
   1130c:	cmp	r0, #0
   11310:	blt	11494 <main@@Base+0xa8c4>
   11314:	add	r4, sp, #84	; 0x54
   11318:	mov	r1, r4
   1131c:	mvn	r2, #0
   11320:	mvn	r3, #0
   11324:	mov	r0, #4
   11328:	bl	5fd8 <av_int_list_length_for_size@plt>
   1132c:	cmn	r0, #-536870911	; 0xe0000001
   11330:	mvnhi	r0, #21
   11334:	bhi	11494 <main@@Base+0xa8c4>
   11338:	mov	r6, #1
   1133c:	ldr	r1, [pc, #796]	; 11660 <main@@Base+0xaa90>
   11340:	lsl	r3, r0, #2
   11344:	mov	r2, r4
   11348:	str	r6, [sp]
   1134c:	add	r1, pc, r1
   11350:	ldr	r0, [sp, #68]	; 0x44
   11354:	bl	6560 <av_opt_set_bin@plt>
   11358:	cmp	r0, #0
   1135c:	blt	11494 <main@@Base+0xa8c4>
   11360:	ldr	r3, [pc, #764]	; 11664 <main@@Base+0xaa94>
   11364:	ldr	r4, [sp, #68]	; 0x44
   11368:	add	r3, pc, r3
   1136c:	ldr	r3, [r3, #24]
   11370:	cmp	r3, r5
   11374:	beq	11460 <main@@Base+0xa890>
   11378:	ldr	r3, [sp, #44]	; 0x2c
   1137c:	ldr	r0, [r3, #2012]	; 0x7dc
   11380:	bl	10500 <main@@Base+0x9930>
   11384:	vldr	d7, [pc, #620]	; 115f8 <main@@Base+0xaa28>
   11388:	vsub.f64	d7, d0, d7
   1138c:	vldr	d6, [pc, #620]	; 11600 <main@@Base+0xaa30>
   11390:	vabs.f64	d7, d7
   11394:	vcmpe.f64	d7, d6
   11398:	vmrs	APSR_nzcv, fpscr
   1139c:	bmi	11568 <main@@Base+0xa998>
   113a0:	vldr	d7, [pc, #608]	; 11608 <main@@Base+0xaa38>
   113a4:	vsub.f64	d7, d0, d7
   113a8:	vabs.f64	d7, d7
   113ac:	vcmpe.f64	d7, d6
   113b0:	vmrs	APSR_nzcv, fpscr
   113b4:	bmi	114d8 <main@@Base+0xa908>
   113b8:	vldr	d7, [pc, #592]	; 11610 <main@@Base+0xaa40>
   113bc:	vsub.f64	d7, d0, d7
   113c0:	vabs.f64	d7, d7
   113c4:	vcmpe.f64	d7, d6
   113c8:	vmrs	APSR_nzcv, fpscr
   113cc:	bmi	115b0 <main@@Base+0xa9e0>
   113d0:	vabs.f64	d7, d0
   113d4:	vcmpe.f64	d7, d6
   113d8:	vmrs	APSR_nzcv, fpscr
   113dc:	ble	11460 <main@@Base+0xa890>
   113e0:	mov	r3, #64	; 0x40
   113e4:	ldr	r0, [pc, #636]	; 11668 <main@@Base+0xaa98>
   113e8:	mov	r2, r6
   113ec:	add	r0, pc, r0
   113f0:	add	r6, sp, #164	; 0xa4
   113f4:	mov	r1, r3
   113f8:	vstr	d0, [sp, #8]
   113fc:	str	r0, [sp]
   11400:	mov	r0, r6
   11404:	bl	62d8 <__snprintf_chk@plt>
   11408:	ldr	r0, [pc, #604]	; 1166c <main@@Base+0xaa9c>
   1140c:	add	r0, pc, r0
   11410:	bl	63e0 <avfilter_get_by_name@plt>
   11414:	ldr	r2, [sp, #32]
   11418:	mov	r1, r0
   1141c:	str	r2, [sp, #4]
   11420:	ldr	r2, [pc, #584]	; 11670 <main@@Base+0xaaa0>
   11424:	mov	r3, r6
   11428:	str	r5, [sp]
   1142c:	add	r2, pc, r2
   11430:	add	r0, sp, #72	; 0x48
   11434:	bl	6464 <avfilter_graph_create_filter@plt>
   11438:	cmp	r0, #0
   1143c:	blt	11494 <main@@Base+0xa8c4>
   11440:	mov	r3, #0
   11444:	mov	r2, r4
   11448:	mov	r1, r3
   1144c:	ldr	r0, [sp, #72]	; 0x48
   11450:	bl	5d2c <avfilter_link@plt>
   11454:	cmp	r0, #0
   11458:	blt	11494 <main@@Base+0xa8c4>
   1145c:	ldr	r4, [sp, #72]	; 0x48
   11460:	mov	r3, r4
   11464:	ldr	r1, [sp, #56]	; 0x38
   11468:	ldr	r0, [sp, #32]
   1146c:	ldr	r2, [sp, #64]	; 0x40
   11470:	bl	10e94 <main@@Base+0xa2c4>
   11474:	cmp	r0, #0
   11478:	blt	11494 <main@@Base+0xa8c4>
   1147c:	ldr	r3, [sp, #60]	; 0x3c
   11480:	ldr	r1, [sp, #64]	; 0x40
   11484:	ldr	r2, [sp, #68]	; 0x44
   11488:	add	r3, r3, #4096	; 0x1000
   1148c:	str	r1, [r3, #2104]	; 0x838
   11490:	str	r2, [r3, #2108]	; 0x83c
   11494:	ldr	r3, [sp, #52]	; 0x34
   11498:	ldr	r2, [sp, #996]	; 0x3e4
   1149c:	ldr	r3, [r3]
   114a0:	cmp	r2, r3
   114a4:	bne	115f0 <main@@Base+0xaa20>
   114a8:	add	sp, sp, #1004	; 0x3ec
   114ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114b0:	mov	r2, #20
   114b4:	b	11134 <main@@Base+0xa564>
   114b8:	str	r2, [sp]
   114bc:	ldr	r2, [pc, #432]	; 11674 <main@@Base+0xaaa4>
   114c0:	ldr	r3, [sp, #40]	; 0x28
   114c4:	add	r2, pc, r2
   114c8:	mov	r1, #256	; 0x100
   114cc:	mov	r0, r4
   114d0:	bl	6b18 <av_strlcatf@plt>
   114d4:	b	112a4 <main@@Base+0xa6d4>
   114d8:	ldr	r0, [pc, #408]	; 11678 <main@@Base+0xaaa8>
   114dc:	add	r6, sp, #72	; 0x48
   114e0:	add	r0, pc, r0
   114e4:	bl	63e0 <avfilter_get_by_name@plt>
   114e8:	ldr	r7, [sp, #32]
   114ec:	ldr	r2, [pc, #392]	; 1167c <main@@Base+0xaaac>
   114f0:	mov	r1, r0
   114f4:	stm	sp, {r5, r7}
   114f8:	mov	r0, r6
   114fc:	mov	r3, r5
   11500:	add	r2, pc, r2
   11504:	bl	6464 <avfilter_graph_create_filter@plt>
   11508:	cmp	r0, #0
   1150c:	blt	11494 <main@@Base+0xa8c4>
   11510:	mov	r2, r4
   11514:	mov	r3, r5
   11518:	mov	r1, r5
   1151c:	ldr	r0, [sp, #72]	; 0x48
   11520:	bl	5d2c <avfilter_link@plt>
   11524:	cmp	r0, #0
   11528:	blt	11494 <main@@Base+0xa8c4>
   1152c:	ldr	r0, [pc, #332]	; 11680 <main@@Base+0xaab0>
   11530:	ldr	r4, [sp, #72]	; 0x48
   11534:	add	r0, pc, r0
   11538:	bl	63e0 <avfilter_get_by_name@plt>
   1153c:	ldr	r2, [pc, #320]	; 11684 <main@@Base+0xaab4>
   11540:	mov	r1, r0
   11544:	str	r7, [sp, #4]
   11548:	str	r5, [sp]
   1154c:	mov	r3, r5
   11550:	mov	r0, r6
   11554:	add	r2, pc, r2
   11558:	bl	6464 <avfilter_graph_create_filter@plt>
   1155c:	cmp	r0, #0
   11560:	bge	11440 <main@@Base+0xa870>
   11564:	b	11494 <main@@Base+0xa8c4>
   11568:	ldr	r0, [pc, #280]	; 11688 <main@@Base+0xaab8>
   1156c:	add	r0, pc, r0
   11570:	bl	63e0 <avfilter_get_by_name@plt>
   11574:	ldr	r3, [sp, #32]
   11578:	ldr	r2, [pc, #268]	; 1168c <main@@Base+0xaabc>
   1157c:	str	r3, [sp, #4]
   11580:	ldr	r3, [pc, #264]	; 11690 <main@@Base+0xaac0>
   11584:	mov	r1, r0
   11588:	str	r5, [sp]
   1158c:	add	r3, pc, r3
   11590:	add	r2, pc, r2
   11594:	add	r0, sp, #72	; 0x48
   11598:	bl	6464 <avfilter_graph_create_filter@plt>
   1159c:	cmp	r0, #0
   115a0:	blt	11494 <main@@Base+0xa8c4>
   115a4:	mov	r2, r4
   115a8:	mov	r3, r5
   115ac:	b	11448 <main@@Base+0xa878>
   115b0:	ldr	r0, [pc, #220]	; 11694 <main@@Base+0xaac4>
   115b4:	add	r0, pc, r0
   115b8:	bl	63e0 <avfilter_get_by_name@plt>
   115bc:	ldr	r3, [sp, #32]
   115c0:	ldr	r2, [pc, #208]	; 11698 <main@@Base+0xaac8>
   115c4:	str	r3, [sp, #4]
   115c8:	ldr	r3, [pc, #204]	; 1169c <main@@Base+0xaacc>
   115cc:	mov	r1, r0
   115d0:	str	r5, [sp]
   115d4:	add	r3, pc, r3
   115d8:	add	r2, pc, r2
   115dc:	add	r0, sp, #72	; 0x48
   115e0:	bl	6464 <avfilter_graph_create_filter@plt>
   115e4:	cmp	r0, #0
   115e8:	bge	115a4 <main@@Base+0xa9d4>
   115ec:	b	11494 <main@@Base+0xa8c4>
   115f0:	bl	5e7c <__stack_chk_fail@plt>
   115f4:	nop	{0}
   115f8:	andeq	r0, r0, r0
   115fc:	subsmi	r8, r6, r0
   11600:	andeq	r0, r0, r0
   11604:	svccc	0x00f00000	; IMB
   11608:	andeq	r0, r0, r0
   1160c:	rsbmi	r8, r6, r0
   11610:	andeq	r0, r0, r0
   11614:	rsbsmi	lr, r0, r0
   11618:	andeq	r7, r2, ip, asr #20
   1161c:	andeq	r0, r0, r8, asr r5
   11620:	andeq	r8, r2, r4
   11624:	andeq	r3, r1, r0, asr #20
   11628:	andeq	r3, r1, ip, lsr sl
   1162c:	ldrne	r0, [r2, #-3074]	; 0xfffff3fe
   11630:	ldrne	r0, [r1], #-2049	; 0xfffff7ff
   11634:	andeq	r0, r0, r4, asr #10
   11638:	andeq	r4, r1, ip, ror #5
   1163c:	andeq	r3, r1, ip, lsl #23
   11640:	muleq	r1, r4, fp
   11644:	andeq	r3, r1, r4, asr #22
   11648:	andeq	r3, r1, r8, asr #22
   1164c:			; <UNDEFINED> instruction: 0x00013ab0
   11650:	andeq	r3, r1, r8, ror #23
   11654:	andeq	r3, r1, r4, lsr #21
   11658:	andeq	r3, r1, ip, asr #23
   1165c:	andeq	r3, r1, r0, lsl #21
   11660:	andeq	r3, r1, r8, asr #20
   11664:	andeq	r7, r2, r8, ror #25
   11668:	andeq	r3, r1, r4, lsl sl
   1166c:	andeq	r5, r1, r8, ror #4
   11670:	andeq	r3, r1, r0, ror #19
   11674:	muleq	r1, r8, r8
   11678:	andeq	r3, r1, r8, ror #17
   1167c:	ldrdeq	r3, [r1], -r0
   11680:	andeq	r3, r1, ip, lsr #17
   11684:	muleq	r1, r4, r8
   11688:	andeq	r3, r1, r4, lsr r8
   1168c:	andeq	r3, r1, r4, lsr #16
   11690:	andeq	r3, r1, r0, lsr #16
   11694:	andeq	r3, r1, ip, ror #15
   11698:	ldrdeq	r3, [r1], -ip
   1169c:	andeq	r3, r1, r4, lsr #16
   116a0:	mvn	r3, #0
   116a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116a8:	ldr	r5, [pc, #1084]	; 11aec <main@@Base+0xaf1c>
   116ac:	sub	sp, sp, #868	; 0x364
   116b0:	mov	r9, r0
   116b4:	ldr	r0, [pc, #1076]	; 11af0 <main@@Base+0xaf20>
   116b8:	add	r5, pc, r5
   116bc:	str	r1, [sp, #36]	; 0x24
   116c0:	ldr	r1, [r5, r0]
   116c4:	str	r3, [sp, #60]	; 0x3c
   116c8:	str	r3, [sp, #68]	; 0x44
   116cc:	add	r3, sp, #80	; 0x50
   116d0:	mov	r4, #0
   116d4:	mov	r0, r3
   116d8:	str	r2, [sp, #32]
   116dc:	str	r3, [sp, #44]	; 0x2c
   116e0:	mov	r2, #0
   116e4:	mov	r3, #0
   116e8:	mvn	r6, #0
   116ec:	mvn	r7, #0
   116f0:	str	r1, [sp, #28]
   116f4:	ldr	fp, [pc, #1016]	; 11af4 <main@@Base+0xaf24>
   116f8:	ldr	r1, [r1]
   116fc:	strd	r2, [r0, #-8]
   11700:	str	r1, [sp, #860]	; 0x35c
   11704:	mov	r2, #508	; 0x1fc
   11708:	mov	r1, r4
   1170c:	strd	r6, [r0]
   11710:	add	fp, r9, fp
   11714:	add	r0, sp, #352	; 0x160
   11718:	str	r4, [sp, #56]	; 0x38
   1171c:	str	r4, [sp, #64]	; 0x40
   11720:	str	r4, [sp, #48]	; 0x30
   11724:	str	r4, [sp, #52]	; 0x34
   11728:	str	r4, [sp, #348]	; 0x15c
   1172c:	bl	62e4 <memset@plt>
   11730:	mov	r0, fp
   11734:	bl	5ff0 <avfilter_graph_free@plt>
   11738:	bl	64f4 <avfilter_graph_alloc@plt>
   1173c:	add	r3, r9, #1048576	; 0x100000
   11740:	add	sl, r3, #4096	; 0x1000
   11744:	cmp	r0, r4
   11748:	str	r3, [sp, #40]	; 0x28
   1174c:	str	r0, [sl, #2120]	; 0x848
   11750:	beq	11ae0 <main@@Base+0xaf10>
   11754:	ldr	r3, [pc, #924]	; 11af8 <main@@Base+0xaf28>
   11758:	ldr	r6, [pc, #924]	; 11afc <main@@Base+0xaf2c>
   1175c:	ldr	r8, [pc, #924]	; 11b00 <main@@Base+0xaf30>
   11760:	ldr	r7, [r5, r3]
   11764:	add	r6, pc, r6
   11768:	add	r5, sp, #348	; 0x15c
   1176c:	add	r8, pc, r8
   11770:	b	11790 <main@@Base+0xabc0>
   11774:	ldr	r2, [r4, #4]
   11778:	ldr	r3, [r4]
   1177c:	mov	r1, #512	; 0x200
   11780:	str	r2, [sp]
   11784:	mov	r0, r5
   11788:	mov	r2, r8
   1178c:	bl	6b18 <av_strlcatf@plt>
   11790:	mov	r2, r4
   11794:	mov	r3, #2
   11798:	mov	r1, r6
   1179c:	ldr	r0, [r7]
   117a0:	bl	6878 <av_dict_get@plt>
   117a4:	subs	r4, r0, #0
   117a8:	bne	11774 <main@@Base+0xaba4>
   117ac:	ldrb	r3, [sp, #348]	; 0x15c
   117b0:	cmp	r3, #0
   117b4:	bne	11a74 <main@@Base+0xaea4>
   117b8:	ldr	r1, [pc, #836]	; 11b04 <main@@Base+0xaf34>
   117bc:	mov	r2, r5
   117c0:	add	r4, r9, #4096	; 0x1000
   117c4:	mov	r3, #0
   117c8:	add	r1, pc, r1
   117cc:	ldr	r0, [sl, #2120]	; 0x848
   117d0:	bl	6308 <av_opt_set@plt>
   117d4:	ldr	r0, [r4, #1824]	; 0x720
   117d8:	ldr	r7, [r4, #1808]	; 0x710
   117dc:	mov	r6, #1
   117e0:	bl	64d0 <av_get_sample_fmt_name@plt>
   117e4:	mov	r3, #256	; 0x100
   117e8:	ldr	ip, [pc, #792]	; 11b08 <main@@Base+0xaf38>
   117ec:	ldr	r1, [r4, #1808]	; 0x710
   117f0:	ldr	r2, [r4, #1812]	; 0x714
   117f4:	add	ip, pc, ip
   117f8:	add	r5, sp, #92	; 0x5c
   117fc:	str	r0, [sp, #8]
   11800:	str	r1, [sp, #20]
   11804:	str	r2, [sp, #12]
   11808:	mov	r1, r3
   1180c:	mov	r2, r6
   11810:	str	r7, [sp, #4]
   11814:	str	r6, [sp, #16]
   11818:	str	ip, [sp]
   1181c:	mov	r0, r5
   11820:	bl	62d8 <__snprintf_chk@plt>
   11824:	add	r3, r9, #5888	; 0x1700
   11828:	add	r3, r3, #32
   1182c:	ldrd	r2, [r3, #-8]
   11830:	orrs	r1, r2, r3
   11834:	bne	11ab8 <main@@Base+0xaee8>
   11838:	ldr	r0, [pc, #716]	; 11b0c <main@@Base+0xaf3c>
   1183c:	mov	r6, #0
   11840:	add	r0, pc, r0
   11844:	bl	63e0 <avfilter_get_by_name@plt>
   11848:	ldr	r2, [sl, #2120]	; 0x848
   1184c:	mov	r1, r0
   11850:	str	r2, [sp, #4]
   11854:	ldr	r2, [pc, #692]	; 11b10 <main@@Base+0xaf40>
   11858:	mov	r3, r5
   1185c:	str	r6, [sp]
   11860:	add	r2, pc, r2
   11864:	add	r0, sp, #48	; 0x30
   11868:	bl	6464 <avfilter_graph_create_filter@plt>
   1186c:	subs	r7, r0, #0
   11870:	blt	11a90 <main@@Base+0xaec0>
   11874:	ldr	r0, [pc, #664]	; 11b14 <main@@Base+0xaf44>
   11878:	add	r0, pc, r0
   1187c:	bl	63e0 <avfilter_get_by_name@plt>
   11880:	ldr	r3, [sl, #2120]	; 0x848
   11884:	ldr	r2, [pc, #652]	; 11b18 <main@@Base+0xaf48>
   11888:	mov	r1, r0
   1188c:	str	r3, [sp, #4]
   11890:	str	r6, [sp]
   11894:	mov	r3, r6
   11898:	add	r2, pc, r2
   1189c:	add	r0, sp, #52	; 0x34
   118a0:	bl	6464 <avfilter_graph_create_filter@plt>
   118a4:	subs	r7, r0, #0
   118a8:	blt	11a90 <main@@Base+0xaec0>
   118ac:	ldr	r5, [pc, #616]	; 11b1c <main@@Base+0xaf4c>
   118b0:	mvn	r2, #0
   118b4:	add	r5, pc, r5
   118b8:	add	r5, r5, #160	; 0xa0
   118bc:	mvn	r3, #0
   118c0:	mov	r1, r5
   118c4:	mov	r0, #4
   118c8:	bl	5fd8 <av_int_list_length_for_size@plt>
   118cc:	cmn	r0, #-536870911	; 0xe0000001
   118d0:	bhi	11a8c <main@@Base+0xaebc>
   118d4:	mov	r6, #1
   118d8:	ldr	r1, [pc, #576]	; 11b20 <main@@Base+0xaf50>
   118dc:	lsl	r3, r0, #2
   118e0:	mov	r2, r5
   118e4:	str	r6, [sp]
   118e8:	add	r1, pc, r1
   118ec:	ldr	r0, [sp, #52]	; 0x34
   118f0:	bl	6560 <av_opt_set_bin@plt>
   118f4:	subs	r7, r0, #0
   118f8:	blt	11a90 <main@@Base+0xaec0>
   118fc:	ldr	r5, [pc, #544]	; 11b24 <main@@Base+0xaf54>
   11900:	str	r6, [sp]
   11904:	add	r5, pc, r5
   11908:	mov	r1, r5
   1190c:	mov	r2, #1
   11910:	mov	r3, #0
   11914:	ldr	r0, [sp, #52]	; 0x34
   11918:	bl	6a10 <av_opt_set_int@plt>
   1191c:	subs	r7, r0, #0
   11920:	blt	11a90 <main@@Base+0xaec0>
   11924:	ldr	r3, [sp, #32]
   11928:	cmp	r3, #0
   1192c:	ldr	r3, [sp, #52]	; 0x34
   11930:	beq	11a44 <main@@Base+0xae74>
   11934:	mov	r0, r3
   11938:	ldr	r3, [sp, #44]	; 0x2c
   1193c:	ldr	ip, [r4, #1844]	; 0x734
   11940:	ldr	lr, [r4, #1840]	; 0x730
   11944:	add	r9, r9, #5952	; 0x1740
   11948:	str	r6, [sp]
   1194c:	mov	r1, r5
   11950:	ldrd	r4, [r9, #-8]
   11954:	mov	r2, #0
   11958:	strd	r4, [r3, #-8]
   1195c:	mov	r3, #0
   11960:	str	ip, [sp, #64]	; 0x40
   11964:	str	lr, [sp, #56]	; 0x38
   11968:	bl	6a10 <av_opt_set_int@plt>
   1196c:	subs	r7, r0, #0
   11970:	blt	11a90 <main@@Base+0xaec0>
   11974:	add	r4, sp, #72	; 0x48
   11978:	mov	r1, r4
   1197c:	mvn	r2, #0
   11980:	mvn	r3, #0
   11984:	mov	r0, #8
   11988:	bl	5fd8 <av_int_list_length_for_size@plt>
   1198c:	cmn	r0, #-268435455	; 0xf0000001
   11990:	bhi	11a8c <main@@Base+0xaebc>
   11994:	ldr	r1, [pc, #396]	; 11b28 <main@@Base+0xaf58>
   11998:	lsl	r3, r0, #3
   1199c:	str	r6, [sp]
   119a0:	mov	r2, r4
   119a4:	add	r1, pc, r1
   119a8:	ldr	r0, [sp, #52]	; 0x34
   119ac:	bl	6560 <av_opt_set_bin@plt>
   119b0:	subs	r7, r0, #0
   119b4:	blt	11a90 <main@@Base+0xaec0>
   119b8:	add	r4, sp, #64	; 0x40
   119bc:	mov	r1, r4
   119c0:	mvn	r2, #0
   119c4:	mvn	r3, #0
   119c8:	mov	r0, #4
   119cc:	bl	5fd8 <av_int_list_length_for_size@plt>
   119d0:	cmn	r0, #-536870911	; 0xe0000001
   119d4:	bhi	11a8c <main@@Base+0xaebc>
   119d8:	ldr	r1, [pc, #332]	; 11b2c <main@@Base+0xaf5c>
   119dc:	lsl	r3, r0, #2
   119e0:	mov	r2, r4
   119e4:	str	r6, [sp]
   119e8:	add	r1, pc, r1
   119ec:	ldr	r0, [sp, #52]	; 0x34
   119f0:	bl	6560 <av_opt_set_bin@plt>
   119f4:	subs	r7, r0, #0
   119f8:	blt	11a90 <main@@Base+0xaec0>
   119fc:	add	r4, sp, #56	; 0x38
   11a00:	mov	r1, r4
   11a04:	mvn	r2, #0
   11a08:	mvn	r3, #0
   11a0c:	mov	r0, #4
   11a10:	bl	5fd8 <av_int_list_length_for_size@plt>
   11a14:	cmn	r0, #-536870911	; 0xe0000001
   11a18:	bhi	11a8c <main@@Base+0xaebc>
   11a1c:	ldr	r1, [pc, #268]	; 11b30 <main@@Base+0xaf60>
   11a20:	lsl	r3, r0, #2
   11a24:	str	r6, [sp]
   11a28:	mov	r2, r4
   11a2c:	add	r1, pc, r1
   11a30:	ldr	r0, [sp, #52]	; 0x34
   11a34:	bl	6560 <av_opt_set_bin@plt>
   11a38:	subs	r7, r0, #0
   11a3c:	blt	11a90 <main@@Base+0xaec0>
   11a40:	ldr	r3, [sp, #52]	; 0x34
   11a44:	ldr	r2, [sp, #40]	; 0x28
   11a48:	ldr	r1, [sp, #36]	; 0x24
   11a4c:	add	r4, r2, #4096	; 0x1000
   11a50:	ldr	r0, [r4, #2120]	; 0x848
   11a54:	ldr	r2, [sp, #48]	; 0x30
   11a58:	bl	10e94 <main@@Base+0xa2c4>
   11a5c:	subs	r7, r0, #0
   11a60:	blt	11a90 <main@@Base+0xaec0>
   11a64:	ldrd	r2, [sp, #48]	; 0x30
   11a68:	str	r2, [r4, #2112]	; 0x840
   11a6c:	str	r3, [r4, #2116]	; 0x844
   11a70:	b	11a98 <main@@Base+0xaec8>
   11a74:	mov	r0, r5
   11a78:	bl	61a0 <strlen@plt>
   11a7c:	add	r3, sp, #864	; 0x360
   11a80:	add	r0, r3, r0
   11a84:	strb	r4, [r0, #-517]	; 0xfffffdfb
   11a88:	b	117b8 <main@@Base+0xabe8>
   11a8c:	mvn	r7, #21
   11a90:	mov	r0, fp
   11a94:	bl	5ff0 <avfilter_graph_free@plt>
   11a98:	ldr	r3, [sp, #28]
   11a9c:	ldr	r2, [sp, #860]	; 0x35c
   11aa0:	ldr	r3, [r3]
   11aa4:	mov	r0, r7
   11aa8:	cmp	r2, r3
   11aac:	bne	11ae8 <main@@Base+0xaf18>
   11ab0:	add	sp, sp, #868	; 0x364
   11ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ab8:	ldr	r1, [pc, #116]	; 11b34 <main@@Base+0xaf64>
   11abc:	strd	r2, [sp, #8]
   11ac0:	add	r1, pc, r1
   11ac4:	str	r1, [sp]
   11ac8:	mov	r2, r6
   11acc:	rsb	r1, r0, #256	; 0x100
   11ad0:	mvn	r3, #0
   11ad4:	add	r0, r5, r0
   11ad8:	bl	62d8 <__snprintf_chk@plt>
   11adc:	b	11838 <main@@Base+0xac68>
   11ae0:	mvn	r7, #11
   11ae4:	b	11a98 <main@@Base+0xaec8>
   11ae8:	bl	5e7c <__stack_chk_fail@plt>
   11aec:	ldrdeq	r7, [r2], -ip
   11af0:	andeq	r0, r0, r8, asr r5
   11af4:	andseq	r1, r0, r8, asr #16
   11af8:	andeq	r0, r0, r0, ror #10
   11afc:	andeq	r3, r1, r0, lsl #26
   11b00:	andeq	r3, r1, r8, lsr #11
   11b04:	andeq	r3, r1, r4, asr r6
   11b08:	andeq	r3, r1, ip, lsr r6
   11b0c:	andeq	r3, r1, r4, asr #12
   11b10:	andeq	r3, r1, ip, lsr #12
   11b14:	andeq	r3, r1, r4, lsr #12
   11b18:	andeq	r3, r1, r0, lsl r6
   11b1c:	andeq	r3, r1, r0, lsl #5
   11b20:	ldrdeq	r3, [r1], -r4
   11b24:	andeq	r3, r1, r4, asr #11
   11b28:	andeq	r3, r1, r8, lsr r5
   11b2c:	andeq	r3, r1, r4, ror #9
   11b30:	andeq	r3, r1, r0, asr #9
   11b34:	andeq	r3, r1, ip, lsr #7
   11b38:	push	{r4, r5, r6, r7, r8, lr}
   11b3c:	mov	r4, r0
   11b40:	ldr	r3, [pc, #312]	; 11c80 <main@@Base+0xb0b0>
   11b44:	ldr	r2, [pc, #312]	; 11c84 <main@@Base+0xb0b4>
   11b48:	add	r3, pc, r3
   11b4c:	ldr	r7, [r3, r2]
   11b50:	sub	sp, sp, #8
   11b54:	ldr	r3, [r7]
   11b58:	ldr	r0, [r0, #32]
   11b5c:	mov	r8, r1
   11b60:	str	r3, [sp, #4]
   11b64:	bl	6b3c <SDL_LockMutex@plt>
   11b68:	ldr	r6, [r4, #24]
   11b6c:	cmp	r6, #0
   11b70:	bne	11c30 <main@@Base+0xb060>
   11b74:	mov	r0, #80	; 0x50
   11b78:	bl	5e40 <av_malloc@plt>
   11b7c:	subs	r5, r0, #0
   11b80:	beq	11c5c <main@@Base+0xb08c>
   11b84:	mov	r2, #72	; 0x48
   11b88:	mov	r1, r8
   11b8c:	bl	66f8 <memcpy@plt>
   11b90:	ldr	r3, [pc, #240]	; 11c88 <main@@Base+0xb0b8>
   11b94:	ldr	r2, [r4, #4]
   11b98:	add	r3, pc, r3
   11b9c:	add	r3, r3, #104	; 0x68
   11ba0:	cmp	r8, r3
   11ba4:	ldr	r3, [r4, #28]
   11ba8:	ldr	r0, [r5, #28]
   11bac:	addeq	r3, r3, #1
   11bb0:	streq	r3, [r4, #28]
   11bb4:	ldr	r1, [r5, #48]	; 0x30
   11bb8:	cmp	r2, #0
   11bbc:	str	r3, [r5, #76]	; 0x4c
   11bc0:	str	r6, [r5, #72]	; 0x48
   11bc4:	strne	r5, [r2, #72]	; 0x48
   11bc8:	ldrd	r2, [r4, #12]
   11bcc:	add	r2, r2, #80	; 0x50
   11bd0:	add	r2, r2, r0
   11bd4:	streq	r5, [r4]
   11bd8:	ldr	r0, [r4, #20]
   11bdc:	adds	r3, r3, r1
   11be0:	ldr	r1, [r5, #52]	; 0x34
   11be4:	str	r2, [r4, #12]
   11be8:	adc	r0, r0, r1
   11bec:	ldr	r1, [r4, #8]
   11bf0:	str	r0, [r4, #20]
   11bf4:	add	r2, r1, #1
   11bf8:	str	r5, [r4, #4]
   11bfc:	str	r3, [r4, #16]
   11c00:	str	r2, [r4, #8]
   11c04:	ldr	r0, [r4, #36]	; 0x24
   11c08:	bl	5dec <SDL_CondSignal@plt>
   11c0c:	ldr	r0, [r4, #32]
   11c10:	bl	6290 <SDL_UnlockMutex@plt>
   11c14:	ldr	r2, [sp, #4]
   11c18:	ldr	r3, [r7]
   11c1c:	mov	r0, r6
   11c20:	cmp	r2, r3
   11c24:	bne	11c7c <main@@Base+0xb0ac>
   11c28:	add	sp, sp, #8
   11c2c:	pop	{r4, r5, r6, r7, r8, pc}
   11c30:	ldr	r0, [r4, #32]
   11c34:	bl	6290 <SDL_UnlockMutex@plt>
   11c38:	ldr	r3, [pc, #76]	; 11c8c <main@@Base+0xb0bc>
   11c3c:	add	r3, pc, r3
   11c40:	add	r3, r3, #104	; 0x68
   11c44:	cmp	r8, r3
   11c48:	beq	11c54 <main@@Base+0xb084>
   11c4c:	mov	r0, r8
   11c50:	bl	6a28 <av_packet_unref@plt>
   11c54:	mvn	r6, #0
   11c58:	b	11c14 <main@@Base+0xb044>
   11c5c:	ldr	r0, [r4, #32]
   11c60:	bl	6290 <SDL_UnlockMutex@plt>
   11c64:	ldr	r3, [pc, #36]	; 11c90 <main@@Base+0xb0c0>
   11c68:	add	r3, pc, r3
   11c6c:	add	r3, r3, #104	; 0x68
   11c70:	cmp	r8, r3
   11c74:	bne	11c4c <main@@Base+0xb07c>
   11c78:	b	11c54 <main@@Base+0xb084>
   11c7c:	bl	5e7c <__stack_chk_fail@plt>
   11c80:	andeq	r6, r2, ip, asr #30
   11c84:	andeq	r0, r0, r8, asr r5
   11c88:	andeq	r7, r2, r8, lsr #10
   11c8c:	andeq	r7, r2, r4, lsl #9
   11c90:	andeq	r7, r2, r8, asr r4
   11c94:	push	{r4, r5, r6, r7, lr}
   11c98:	mov	r4, r0
   11c9c:	ldr	r3, [pc, #160]	; 11d44 <main@@Base+0xb174>
   11ca0:	ldr	r2, [pc, #160]	; 11d48 <main@@Base+0xb178>
   11ca4:	add	r3, pc, r3
   11ca8:	ldr	r6, [r3, r2]
   11cac:	sub	sp, sp, #12
   11cb0:	ldr	r3, [r6]
   11cb4:	ldr	r0, [r0, #32]
   11cb8:	str	r3, [sp, #4]
   11cbc:	bl	6b3c <SDL_LockMutex@plt>
   11cc0:	ldr	r0, [r4]
   11cc4:	cmp	r0, #0
   11cc8:	str	r0, [sp]
   11ccc:	beq	11cf0 <main@@Base+0xb120>
   11cd0:	mov	r7, sp
   11cd4:	ldr	r5, [r0, #72]	; 0x48
   11cd8:	bl	6a28 <av_packet_unref@plt>
   11cdc:	mov	r0, r7
   11ce0:	bl	5df8 <av_freep@plt>
   11ce4:	subs	r0, r5, #0
   11ce8:	str	r5, [sp]
   11cec:	bne	11cd4 <main@@Base+0xb104>
   11cf0:	mov	r3, #0
   11cf4:	mov	r1, #0
   11cf8:	mov	r0, #0
   11cfc:	str	r3, [r4, #4]
   11d00:	str	r3, [r4]
   11d04:	str	r3, [r4, #8]
   11d08:	str	r3, [r4, #12]
   11d0c:	strd	r0, [r4, #16]
   11d10:	ldr	r0, [r4, #32]
   11d14:	bl	6290 <SDL_UnlockMutex@plt>
   11d18:	ldr	r0, [r4, #32]
   11d1c:	bl	6398 <SDL_DestroyMutex@plt>
   11d20:	ldr	r0, [r4, #36]	; 0x24
   11d24:	bl	6920 <SDL_DestroyCond@plt>
   11d28:	ldr	r2, [sp, #4]
   11d2c:	ldr	r3, [r6]
   11d30:	cmp	r2, r3
   11d34:	bne	11d40 <main@@Base+0xb170>
   11d38:	add	sp, sp, #12
   11d3c:	pop	{r4, r5, r6, r7, pc}
   11d40:	bl	5e7c <__stack_chk_fail@plt>
   11d44:	strdeq	r6, [r2], -r0
   11d48:	andeq	r0, r0, r8, asr r5
   11d4c:	push	{r4, r5, r6, r7, lr}
   11d50:	ldr	r3, [pc, #132]	; 11ddc <main@@Base+0xb20c>
   11d54:	ldr	r2, [pc, #132]	; 11de0 <main@@Base+0xb210>
   11d58:	add	r3, pc, r3
   11d5c:	ldr	r7, [r3, r2]
   11d60:	ldr	r1, [r0, #1676]	; 0x68c
   11d64:	ldr	r2, [r7]
   11d68:	cmp	r1, #0
   11d6c:	sub	sp, sp, #12
   11d70:	mov	r6, r0
   11d74:	str	r2, [sp, #4]
   11d78:	movgt	r5, #0
   11d7c:	addgt	r4, r0, #8
   11d80:	ble	11db0 <main@@Base+0xb1e0>
   11d84:	ldr	r0, [r4, #-8]
   11d88:	bl	5f9c <av_frame_unref@plt>
   11d8c:	mov	r0, r4
   11d90:	bl	5d14 <avsubtitle_free@plt>
   11d94:	sub	r0, r4, #8
   11d98:	bl	5f84 <av_frame_free@plt>
   11d9c:	ldr	r3, [r6, #1676]	; 0x68c
   11da0:	add	r5, r5, #1
   11da4:	cmp	r3, r5
   11da8:	add	r4, r4, #104	; 0x68
   11dac:	bgt	11d84 <main@@Base+0xb1b4>
   11db0:	ldr	r0, [r6, #1688]	; 0x698
   11db4:	bl	6398 <SDL_DestroyMutex@plt>
   11db8:	ldr	r2, [sp, #4]
   11dbc:	ldr	r3, [r7]
   11dc0:	cmp	r2, r3
   11dc4:	bne	11dd8 <main@@Base+0xb208>
   11dc8:	ldr	r0, [r6, #1692]	; 0x69c
   11dcc:	add	sp, sp, #12
   11dd0:	pop	{r4, r5, r6, r7, lr}
   11dd4:	b	6920 <SDL_DestroyCond@plt>
   11dd8:	bl	5e7c <__stack_chk_fail@plt>
   11ddc:	andeq	r6, r2, ip, lsr sp
   11de0:	andeq	r0, r0, r8, asr r5
   11de4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11de8:	ldr	ip, [pc, #356]	; 11f54 <main@@Base+0xb384>
   11dec:	ldr	lr, [pc, #356]	; 11f58 <main@@Base+0xb388>
   11df0:	add	ip, pc, ip
   11df4:	ldr	r7, [ip, lr]
   11df8:	mov	r4, r0
   11dfc:	ldr	r0, [r0]
   11e00:	ldr	lr, [r7]
   11e04:	sub	sp, sp, #40	; 0x28
   11e08:	cmp	r0, #0
   11e0c:	mov	r8, r1
   11e10:	mov	r6, r2
   11e14:	mov	r5, r3
   11e18:	str	lr, [sp, #36]	; 0x24
   11e1c:	ldr	r9, [sp, #72]	; 0x48
   11e20:	ldr	sl, [sp, #76]	; 0x4c
   11e24:	beq	11e64 <main@@Base+0xb294>
   11e28:	add	r3, sp, #24
   11e2c:	str	r3, [sp]
   11e30:	add	r2, sp, #16
   11e34:	add	r3, sp, #20
   11e38:	add	r1, sp, #12
   11e3c:	bl	6860 <SDL_QueryTexture@plt>
   11e40:	cmp	r0, #0
   11e44:	blt	11e54 <main@@Base+0xb284>
   11e48:	ldr	r3, [sp, #20]
   11e4c:	cmp	r3, r6
   11e50:	beq	11f28 <main@@Base+0xb358>
   11e54:	ldr	r0, [r4]
   11e58:	cmp	r0, #0
   11e5c:	beq	11e64 <main@@Base+0xb294>
   11e60:	bl	61ac <SDL_DestroyTexture@plt>
   11e64:	ldr	r3, [pc, #240]	; 11f5c <main@@Base+0xb38c>
   11e68:	str	r5, [sp]
   11e6c:	add	r3, pc, r3
   11e70:	ldr	r0, [r3, #176]	; 0xb0
   11e74:	mov	r2, #1
   11e78:	mov	r3, r6
   11e7c:	mov	r1, r8
   11e80:	bl	5ee8 <SDL_CreateTexture@plt>
   11e84:	cmp	r0, #0
   11e88:	str	r0, [r4]
   11e8c:	beq	11f48 <main@@Base+0xb378>
   11e90:	mov	r1, r9
   11e94:	bl	5ea0 <SDL_SetTextureBlendMode@plt>
   11e98:	cmp	r0, #0
   11e9c:	blt	11f48 <main@@Base+0xb378>
   11ea0:	cmp	sl, #0
   11ea4:	bne	11eec <main@@Base+0xb31c>
   11ea8:	mov	r0, r8
   11eac:	bl	6260 <SDL_GetPixelFormatName@plt>
   11eb0:	ldr	r2, [pc, #168]	; 11f60 <main@@Base+0xb390>
   11eb4:	str	r0, [sp, #4]
   11eb8:	str	r5, [sp]
   11ebc:	mov	r0, #0
   11ec0:	mov	r3, r6
   11ec4:	add	r2, pc, r2
   11ec8:	mov	r1, #40	; 0x28
   11ecc:	bl	6188 <av_log@plt>
   11ed0:	mov	r0, #0
   11ed4:	ldr	r2, [sp, #36]	; 0x24
   11ed8:	ldr	r3, [r7]
   11edc:	cmp	r2, r3
   11ee0:	bne	11f50 <main@@Base+0xb380>
   11ee4:	add	sp, sp, #40	; 0x28
   11ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11eec:	add	r3, sp, #32
   11ef0:	add	r2, sp, #28
   11ef4:	mov	r1, #0
   11ef8:	ldr	r0, [r4]
   11efc:	bl	6ac4 <SDL_LockTexture@plt>
   11f00:	cmp	r0, #0
   11f04:	blt	11f48 <main@@Base+0xb378>
   11f08:	ldr	r2, [sp, #32]
   11f0c:	mov	r1, #0
   11f10:	mul	r2, r2, r5
   11f14:	ldr	r0, [sp, #28]
   11f18:	bl	62e4 <memset@plt>
   11f1c:	ldr	r0, [r4]
   11f20:	bl	65d8 <SDL_UnlockTexture@plt>
   11f24:	b	11ea8 <main@@Base+0xb2d8>
   11f28:	ldr	r3, [sp, #24]
   11f2c:	cmp	r3, r5
   11f30:	bne	11e54 <main@@Base+0xb284>
   11f34:	ldr	r3, [sp, #12]
   11f38:	cmp	r3, r8
   11f3c:	moveq	r0, #0
   11f40:	bne	11e54 <main@@Base+0xb284>
   11f44:	b	11ed4 <main@@Base+0xb304>
   11f48:	mvn	r0, #0
   11f4c:	b	11ed4 <main@@Base+0xb304>
   11f50:	bl	5e7c <__stack_chk_fail@plt>
   11f54:	andeq	r6, r2, r4, lsr #25
   11f58:	andeq	r0, r0, r8, asr r5
   11f5c:	andeq	r7, r2, r4, asr r2
   11f60:	andeq	r3, r1, r8, lsr r0
   11f64:	push	{r4, r5, r6, lr}
   11f68:	mov	r5, r1
   11f6c:	ldr	r3, [pc, #224]	; 12054 <main@@Base+0xb484>
   11f70:	ldr	r1, [pc, #224]	; 12058 <main@@Base+0xb488>
   11f74:	add	r3, pc, r3
   11f78:	ldr	r4, [r3, r1]
   11f7c:	sub	sp, sp, #16
   11f80:	ldr	r3, [r4]
   11f84:	mov	r0, r5
   11f88:	mov	r1, #58	; 0x3a
   11f8c:	str	r3, [sp, #12]
   11f90:	mov	r6, r2
   11f94:	bl	662c <strchr@plt>
   11f98:	subs	r3, r0, #0
   11f9c:	beq	12030 <main@@Base+0xb460>
   11fa0:	ldrb	r1, [r3, #1]
   11fa4:	cmp	r1, #115	; 0x73
   11fa8:	beq	11ff4 <main@@Base+0xb424>
   11fac:	cmp	r1, #118	; 0x76
   11fb0:	beq	1201c <main@@Base+0xb44c>
   11fb4:	cmp	r1, #97	; 0x61
   11fb8:	beq	12008 <main@@Base+0xb438>
   11fbc:	ldr	r2, [pc, #152]	; 1205c <main@@Base+0xb48c>
   11fc0:	mov	r0, #0
   11fc4:	str	r5, [sp]
   11fc8:	add	r3, r3, #1
   11fcc:	add	r2, pc, r2
   11fd0:	mov	r1, #16
   11fd4:	bl	6188 <av_log@plt>
   11fd8:	mvn	r0, #21
   11fdc:	ldr	r2, [sp, #12]
   11fe0:	ldr	r3, [r4]
   11fe4:	cmp	r2, r3
   11fe8:	bne	12050 <main@@Base+0xb480>
   11fec:	add	sp, sp, #16
   11ff0:	pop	{r4, r5, r6, pc}
   11ff4:	ldr	r3, [pc, #100]	; 12060 <main@@Base+0xb490>
   11ff8:	mov	r0, #0
   11ffc:	add	r3, pc, r3
   12000:	str	r6, [r3, #184]	; 0xb8
   12004:	b	11fdc <main@@Base+0xb40c>
   12008:	ldr	r3, [pc, #84]	; 12064 <main@@Base+0xb494>
   1200c:	mov	r0, #0
   12010:	add	r3, pc, r3
   12014:	str	r6, [r3, #180]	; 0xb4
   12018:	b	11fdc <main@@Base+0xb40c>
   1201c:	ldr	r3, [pc, #68]	; 12068 <main@@Base+0xb498>
   12020:	mov	r0, #0
   12024:	add	r3, pc, r3
   12028:	str	r6, [r3, #188]	; 0xbc
   1202c:	b	11fdc <main@@Base+0xb40c>
   12030:	ldr	r2, [pc, #52]	; 1206c <main@@Base+0xb49c>
   12034:	str	r5, [sp]
   12038:	mov	r3, r6
   1203c:	add	r2, pc, r2
   12040:	mov	r1, #16
   12044:	bl	6188 <av_log@plt>
   12048:	mvn	r0, #21
   1204c:	b	11fdc <main@@Base+0xb40c>
   12050:	bl	5e7c <__stack_chk_fail@plt>
   12054:	andeq	r6, r2, r0, lsr #22
   12058:	andeq	r0, r0, r8, asr r5
   1205c:	andeq	r2, r1, ip, lsl #31
   12060:	andeq	r7, r2, r4, asr #1
   12064:	strheq	r7, [r2], -r0
   12068:	muleq	r2, ip, r0
   1206c:	andeq	r2, r1, r0, ror #29
   12070:	push	{r4, r5, r6, lr}
   12074:	mov	r5, r2
   12078:	ldr	r3, [pc, #216]	; 12158 <main@@Base+0xb588>
   1207c:	ldr	r2, [pc, #216]	; 1215c <main@@Base+0xb58c>
   12080:	add	r3, pc, r3
   12084:	ldr	r4, [r3, r2]
   12088:	mov	r6, r1
   1208c:	ldr	r1, [pc, #204]	; 12160 <main@@Base+0xb590>
   12090:	ldr	r3, [r4]
   12094:	sub	sp, sp, #16
   12098:	mov	r0, r5
   1209c:	add	r1, pc, r1
   120a0:	str	r3, [sp, #12]
   120a4:	bl	695c <strcmp@plt>
   120a8:	cmp	r0, #0
   120ac:	bne	120d8 <main@@Base+0xb508>
   120b0:	ldr	r3, [pc, #172]	; 12164 <main@@Base+0xb594>
   120b4:	add	r3, pc, r3
   120b8:	str	r0, [r3, #192]	; 0xc0
   120bc:	ldr	r2, [sp, #12]
   120c0:	ldr	r3, [r4]
   120c4:	mov	r0, #0
   120c8:	cmp	r2, r3
   120cc:	bne	12130 <main@@Base+0xb560>
   120d0:	add	sp, sp, #16
   120d4:	pop	{r4, r5, r6, pc}
   120d8:	ldr	r1, [pc, #136]	; 12168 <main@@Base+0xb598>
   120dc:	mov	r0, r5
   120e0:	add	r1, pc, r1
   120e4:	bl	695c <strcmp@plt>
   120e8:	cmp	r0, #0
   120ec:	bne	12104 <main@@Base+0xb534>
   120f0:	mov	r2, #1
   120f4:	ldr	r3, [pc, #112]	; 1216c <main@@Base+0xb59c>
   120f8:	add	r3, pc, r3
   120fc:	str	r2, [r3, #192]	; 0xc0
   12100:	b	120bc <main@@Base+0xb4ec>
   12104:	ldr	r1, [pc, #100]	; 12170 <main@@Base+0xb5a0>
   12108:	mov	r0, r5
   1210c:	add	r1, pc, r1
   12110:	bl	695c <strcmp@plt>
   12114:	cmp	r0, #0
   12118:	bne	12134 <main@@Base+0xb564>
   1211c:	mov	r2, #2
   12120:	ldr	r3, [pc, #76]	; 12174 <main@@Base+0xb5a4>
   12124:	add	r3, pc, r3
   12128:	str	r2, [r3, #192]	; 0xc0
   1212c:	b	120bc <main@@Base+0xb4ec>
   12130:	bl	5e7c <__stack_chk_fail@plt>
   12134:	ldr	r2, [pc, #60]	; 12178 <main@@Base+0xb5a8>
   12138:	mov	r0, #0
   1213c:	str	r5, [sp]
   12140:	mov	r3, r6
   12144:	add	r2, pc, r2
   12148:	mov	r1, #16
   1214c:	bl	6188 <av_log@plt>
   12150:	mov	r0, #1
   12154:	bl	6adc <exit@plt>
   12158:	andeq	r6, r2, r4, lsl sl
   1215c:	andeq	r0, r0, r8, asr r5
   12160:	ldrdeq	r3, [r1], -ip
   12164:	andeq	r7, r2, ip
   12168:	andeq	r3, r1, ip, lsr #31
   1216c:	andeq	r6, r2, r8, asr #31
   12170:	andeq	r2, r1, ip, ror lr
   12174:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   12178:	andeq	r2, r1, r8, asr #28
   1217c:	push	{r4, r5, lr}
   12180:	ldr	r1, [pc, #112]	; 121f8 <main@@Base+0xb628>
   12184:	ldr	ip, [pc, #112]	; 121fc <main@@Base+0xb62c>
   12188:	add	r1, pc, r1
   1218c:	ldr	r4, [r1, ip]
   12190:	sub	sp, sp, #12
   12194:	ldr	r3, [r4]
   12198:	mov	r0, r2
   1219c:	mov	r5, r2
   121a0:	str	r3, [sp, #4]
   121a4:	bl	6368 <av_find_input_format@plt>
   121a8:	ldr	r1, [pc, #80]	; 12200 <main@@Base+0xb630>
   121ac:	cmp	r0, #0
   121b0:	add	r1, pc, r1
   121b4:	str	r0, [r1, #196]	; 0xc4
   121b8:	movne	r0, #0
   121bc:	beq	121d8 <main@@Base+0xb608>
   121c0:	ldr	r2, [sp, #4]
   121c4:	ldr	r3, [r4]
   121c8:	cmp	r2, r3
   121cc:	bne	121f4 <main@@Base+0xb624>
   121d0:	add	sp, sp, #12
   121d4:	pop	{r4, r5, pc}
   121d8:	ldr	r2, [pc, #36]	; 12204 <main@@Base+0xb634>
   121dc:	mov	r3, r5
   121e0:	add	r2, pc, r2
   121e4:	mov	r1, #8
   121e8:	bl	6188 <av_log@plt>
   121ec:	mvn	r0, #21
   121f0:	b	121c0 <main@@Base+0xb5f0>
   121f4:	bl	5e7c <__stack_chk_fail@plt>
   121f8:	andeq	r6, r2, ip, lsl #18
   121fc:	andeq	r0, r0, r8, asr r5
   12200:	andeq	r6, r2, r0, lsl pc
   12204:	andeq	r2, r1, r8, asr #27
   12208:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1220c:	ldr	ip, [pc, #264]	; 1231c <main@@Base+0xb74c>
   12210:	ldr	lr, [pc, #264]	; 12320 <main@@Base+0xb750>
   12214:	add	ip, pc, ip
   12218:	ldr	r8, [ip, lr]
   1221c:	mov	r7, r1
   12220:	mov	r1, ip
   12224:	ldr	ip, [r8]
   12228:	sub	sp, sp, #8
   1222c:	mov	r1, #0
   12230:	mov	sl, r2
   12234:	ldr	r2, [pc, #232]	; 12324 <main@@Base+0xb754>
   12238:	mov	r9, r3
   1223c:	str	ip, [sp, #4]
   12240:	mov	r6, r0
   12244:	bl	62e4 <memset@plt>
   12248:	bl	6200 <SDL_CreateMutex@plt>
   1224c:	cmp	r0, #0
   12250:	str	r0, [r6, #1688]	; 0x698
   12254:	beq	122cc <main@@Base+0xb6fc>
   12258:	bl	63c8 <SDL_CreateCond@plt>
   1225c:	cmp	r0, #0
   12260:	mov	r4, r0
   12264:	str	r0, [r6, #1692]	; 0x69c
   12268:	beq	122f4 <main@@Base+0xb724>
   1226c:	mov	r4, r6
   12270:	mov	r5, #0
   12274:	str	r7, [r6, #1696]	; 0x6a0
   12278:	str	sl, [r6, #1676]	; 0x68c
   1227c:	str	r9, [r6, #1680]	; 0x690
   12280:	b	12298 <main@@Base+0xb6c8>
   12284:	ldr	r3, [r6, #1676]	; 0x68c
   12288:	add	r5, r5, #1
   1228c:	cmp	r3, r5
   12290:	add	r4, r4, #104	; 0x68
   12294:	ble	122c4 <main@@Base+0xb6f4>
   12298:	bl	665c <av_frame_alloc@plt>
   1229c:	cmp	r0, #0
   122a0:	str	r0, [r4]
   122a4:	bne	12284 <main@@Base+0xb6b4>
   122a8:	mvn	r0, #11
   122ac:	ldr	r2, [sp, #4]
   122b0:	ldr	r3, [r8]
   122b4:	cmp	r2, r3
   122b8:	bne	12318 <main@@Base+0xb748>
   122bc:	add	sp, sp, #8
   122c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   122c4:	mov	r0, #0
   122c8:	b	122ac <main@@Base+0xb6dc>
   122cc:	mov	r4, r0
   122d0:	bl	63a4 <SDL_GetError@plt>
   122d4:	ldr	r2, [pc, #76]	; 12328 <main@@Base+0xb758>
   122d8:	mov	r3, r0
   122dc:	add	r2, pc, r2
   122e0:	mov	r0, r4
   122e4:	mov	r1, #8
   122e8:	bl	6188 <av_log@plt>
   122ec:	mvn	r0, #11
   122f0:	b	122ac <main@@Base+0xb6dc>
   122f4:	bl	63a4 <SDL_GetError@plt>
   122f8:	ldr	r2, [pc, #44]	; 1232c <main@@Base+0xb75c>
   122fc:	mov	r3, r0
   12300:	add	r2, pc, r2
   12304:	mov	r0, r4
   12308:	mov	r1, #8
   1230c:	bl	6188 <av_log@plt>
   12310:	mvn	r0, #11
   12314:	b	122ac <main@@Base+0xb6dc>
   12318:	bl	5e7c <__stack_chk_fail@plt>
   1231c:	andeq	r6, r2, r0, lsl #17
   12320:	andeq	r0, r0, r8, asr r5
   12324:	andeq	r0, r0, r8, lsr #13
   12328:	andeq	r2, r1, r8, ror #25
   1232c:	ldrdeq	r2, [r1], -ip
   12330:	ldr	r2, [pc, #96]	; 12398 <main@@Base+0xb7c8>
   12334:	push	{lr}		; (str lr, [sp, #-4]!)
   12338:	add	r2, pc, r2
   1233c:	ldr	r0, [r2, #200]	; 0xc8
   12340:	ldr	r3, [pc, #84]	; 1239c <main@@Base+0xb7cc>
   12344:	cmp	r0, #0
   12348:	moveq	ip, #1
   1234c:	movne	ip, #0
   12350:	ldr	r1, [pc, #72]	; 123a0 <main@@Base+0xb7d0>
   12354:	add	r3, pc, r3
   12358:	ldr	r3, [r3, r1]
   1235c:	sub	sp, sp, #12
   12360:	ldr	r0, [r3]
   12364:	ldr	r1, [pc, #56]	; 123a4 <main@@Base+0xb7d4>
   12368:	str	r0, [sp, #4]
   1236c:	ldr	r0, [sp, #4]
   12370:	ldr	r3, [r3]
   12374:	movne	r1, #0
   12378:	cmp	r0, r3
   1237c:	str	ip, [r2, #200]	; 0xc8
   12380:	ldr	r0, [r2, #204]	; 0xcc
   12384:	bne	12394 <main@@Base+0xb7c4>
   12388:	add	sp, sp, #12
   1238c:	pop	{lr}		; (ldr lr, [sp], #4)
   12390:	b	64e8 <SDL_SetWindowFullscreen@plt>
   12394:	bl	5e7c <__stack_chk_fail@plt>
   12398:	andeq	r6, r2, r8, lsl #27
   1239c:	andeq	r6, r2, r0, asr #14
   123a0:	andeq	r0, r0, r8, asr r5
   123a4:	andeq	r1, r0, r1
   123a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123ac:	vpush	{d8}
   123b0:	ldr	r3, [pc, #836]	; 126fc <main@@Base+0xbb2c>
   123b4:	sub	sp, sp, #132	; 0x84
   123b8:	add	r1, r0, #1048576	; 0x100000
   123bc:	ldr	r2, [pc, #828]	; 12700 <main@@Base+0xbb30>
   123c0:	add	r3, pc, r3
   123c4:	str	r1, [sp, #40]	; 0x28
   123c8:	ldr	r2, [r3, r2]
   123cc:	add	r4, r1, #4096	; 0x1000
   123d0:	mov	r1, r2
   123d4:	str	r2, [sp, #32]
   123d8:	ldr	r2, [r4, #2080]	; 0x820
   123dc:	ldr	r3, [r1]
   123e0:	cmp	r2, #0
   123e4:	mov	r5, r0
   123e8:	str	r3, [sp, #124]	; 0x7c
   123ec:	beq	12968 <main@@Base+0xbd98>
   123f0:	mov	r2, #255	; 0xff
   123f4:	mov	r3, #0
   123f8:	ldr	r6, [pc, #772]	; 12704 <main@@Base+0xbb34>
   123fc:	str	r2, [sp]
   12400:	add	r6, pc, r6
   12404:	mov	r2, r3
   12408:	mov	r1, r3
   1240c:	ldr	r0, [r6, #176]	; 0xb0
   12410:	bl	69bc <SDL_SetRenderDrawColor@plt>
   12414:	add	r7, r5, #4096	; 0x1000
   12418:	ldr	r0, [r6, #176]	; 0xb0
   1241c:	bl	6140 <SDL_RenderClear@plt>
   12420:	ldr	r3, [r7, #1692]	; 0x69c
   12424:	cmp	r3, #0
   12428:	beq	12438 <main@@Base+0xb868>
   1242c:	ldr	r8, [r7, #1884]	; 0x75c
   12430:	cmp	r8, #0
   12434:	bne	126dc <main@@Base+0xbb0c>
   12438:	ldr	r3, [r4, #2012]	; 0x7dc
   1243c:	cmp	r3, #0
   12440:	beq	126ac <main@@Base+0xbadc>
   12444:	ldr	r3, [r4, #1936]	; 0x790
   12448:	ldr	r7, [r5, #1880]	; 0x758
   1244c:	cmp	r3, #0
   12450:	str	r3, [sp, #44]	; 0x2c
   12454:	beq	12a0c <main@@Base+0xbe3c>
   12458:	ldr	r2, [r5, #3604]	; 0xe14
   1245c:	ldr	r3, [r5, #3592]	; 0xe08
   12460:	sub	r3, r3, r2
   12464:	cmp	r3, #0
   12468:	ble	12a04 <main@@Base+0xbe34>
   1246c:	ldr	r0, [r5, #3584]	; 0xe00
   12470:	ldr	r1, [r5, #3596]	; 0xe0c
   12474:	add	r0, r2, r0
   12478:	bl	21ff4 <vc_dispmanx_send_command_reply@@Base+0x3b8>
   1247c:	lsl	r3, r1, #1
   12480:	str	r3, [sp, #52]	; 0x34
   12484:	add	r3, r3, r1
   12488:	add	r3, r1, r3, lsl #2
   1248c:	lsl	r3, r3, #3
   12490:	mov	r8, r1
   12494:	add	r1, r5, r3
   12498:	ldr	r2, [r1, #1932]	; 0x78c
   1249c:	vldr	s13, [pc, #596]	; 126f8 <main@@Base+0xbb28>
   124a0:	vmov	s15, r2
   124a4:	vcvt.f32.u32	s15, s15
   124a8:	vdiv.f32	s14, s15, s13
   124ac:	add	r2, r5, #1920	; 0x780
   124b0:	add	r3, r2, r3
   124b4:	vldr	d6, [r3, #48]	; 0x30
   124b8:	vcvt.f64.f32	d7, s14
   124bc:	str	r3, [sp, #44]	; 0x2c
   124c0:	lsl	r3, r7, #1
   124c4:	str	r3, [sp, #36]	; 0x24
   124c8:	add	r3, r3, r7
   124cc:	add	r3, r7, r3, lsl #2
   124d0:	add	r3, r5, r3, lsl #3
   124d4:	vadd.f64	d7, d7, d6
   124d8:	vldr	d6, [r3, #264]	; 0x108
   124dc:	vcmpe.f64	d6, d7
   124e0:	vmrs	APSR_nzcv, fpscr
   124e4:	blt	12c2c <main@@Base+0xc05c>
   124e8:	ldr	r3, [r1, #2012]	; 0x7dc
   124ec:	cmp	r3, #0
   124f0:	bne	12a14 <main@@Base+0xbe44>
   124f4:	ldr	r2, [r1, #1992]	; 0x7c8
   124f8:	cmp	r2, #0
   124fc:	bne	13300 <main@@Base+0xc730>
   12500:	ldr	r3, [sp, #36]	; 0x24
   12504:	ldr	r2, [sp, #52]	; 0x34
   12508:	add	r3, r3, r7
   1250c:	add	r3, r7, r3, lsl #2
   12510:	add	r3, r5, r3, lsl #3
   12514:	ldr	r0, [r3, #288]	; 0x120
   12518:	add	r1, r2, r8
   1251c:	mov	r2, r0
   12520:	add	r1, r8, r1, lsl #2
   12524:	add	r1, r5, r1, lsl #3
   12528:	str	r0, [r1, #1992]	; 0x7c8
   1252c:	ldr	r3, [r3, #292]	; 0x124
   12530:	str	r3, [r1, #1996]	; 0x7cc
   12534:	mov	r1, #1
   12538:	ldr	r0, [pc, #456]	; 12708 <main@@Base+0xbb38>
   1253c:	str	r1, [sp, #4]
   12540:	str	r1, [sp]
   12544:	add	r0, r5, r0
   12548:	ldr	r1, [pc, #452]	; 12714 <main@@Base+0xbb44>
   1254c:	bl	11de4 <main@@Base+0xb214>
   12550:	cmp	r0, #0
   12554:	blt	12cf0 <main@@Base+0xc120>
   12558:	ldr	r3, [sp, #52]	; 0x34
   1255c:	add	fp, r3, r8
   12560:	add	fp, r8, fp, lsl #2
   12564:	add	fp, r5, fp, lsl #3
   12568:	ldr	r3, [fp, #1940]	; 0x794
   1256c:	cmp	r3, #0
   12570:	beq	12690 <main@@Base+0xbac0>
   12574:	mov	r9, #0
   12578:	mov	sl, r9
   1257c:	add	r3, fp, #1984	; 0x7c0
   12580:	str	r3, [sp, #48]	; 0x30
   12584:	str	r7, [sp, #56]	; 0x38
   12588:	str	r8, [sp, #60]	; 0x3c
   1258c:	ldr	r3, [fp, #1944]	; 0x798
   12590:	ldr	r2, [sp, #48]	; 0x30
   12594:	ldr	r6, [r3, r9, lsl #2]
   12598:	ldr	ip, [r2, #8]
   1259c:	ldr	r3, [r6]
   125a0:	cmp	r3, #0
   125a4:	movlt	r3, #0
   125a8:	blt	125b8 <main@@Base+0xb9e8>
   125ac:	cmp	r3, ip
   125b0:	movge	r3, ip
   125b4:	sub	ip, ip, r3
   125b8:	ldr	r2, [r6, #4]
   125bc:	str	r3, [r6]
   125c0:	ldr	r3, [sp, #48]	; 0x30
   125c4:	cmp	r2, #0
   125c8:	ldr	r0, [r3, #12]
   125cc:	movlt	r2, #0
   125d0:	blt	125e0 <main@@Base+0xba10>
   125d4:	cmp	r2, r0
   125d8:	movge	r2, r0
   125dc:	sub	r0, r0, r2
   125e0:	ldr	r1, [r6, #8]
   125e4:	str	r2, [r6, #4]
   125e8:	cmp	r1, #0
   125ec:	movlt	r1, #0
   125f0:	blt	125fc <main@@Base+0xba2c>
   125f4:	cmp	r1, ip
   125f8:	movge	r1, ip
   125fc:	ldr	r3, [r6, #12]
   12600:	str	r1, [r6, #8]
   12604:	cmp	r3, #0
   12608:	movlt	r3, #0
   1260c:	blt	12618 <main@@Base+0xba48>
   12610:	cmp	r3, r0
   12614:	movge	r3, r0
   12618:	mov	r0, #28
   1261c:	str	r3, [r6, #12]
   12620:	stm	sp, {r1, r3}
   12624:	str	sl, [sp, #24]
   12628:	str	sl, [sp, #20]
   1262c:	str	sl, [sp, #16]
   12630:	str	sl, [sp, #12]
   12634:	str	r0, [sp, #8]
   12638:	mov	r2, r3
   1263c:	ldr	r0, [r4, #2068]	; 0x814
   12640:	mov	r3, #11
   12644:	bl	62fc <sws_getCachedContext@plt>
   12648:	cmp	r0, #0
   1264c:	str	r0, [r4, #2068]	; 0x814
   12650:	beq	134ec <main@@Base+0xc91c>
   12654:	add	r8, sp, #108	; 0x6c
   12658:	add	r7, sp, #92	; 0x5c
   1265c:	mov	r3, r8
   12660:	mov	r2, r7
   12664:	mov	r1, r6
   12668:	ldr	r0, [r4, #1924]	; 0x784
   1266c:	bl	6ac4 <SDL_LockTexture@plt>
   12670:	subs	r3, r0, #0
   12674:	beq	13310 <main@@Base+0xc740>
   12678:	ldr	r3, [fp, #1940]	; 0x794
   1267c:	add	r9, r9, #1
   12680:	cmp	r3, r9
   12684:	bhi	1258c <main@@Base+0xb9bc>
   12688:	ldr	r7, [sp, #56]	; 0x38
   1268c:	ldr	r8, [sp, #60]	; 0x3c
   12690:	mov	r2, #1
   12694:	ldr	r3, [sp, #52]	; 0x34
   12698:	add	r3, r3, r8
   1269c:	add	r3, r8, r3, lsl #2
   126a0:	add	r3, r5, r3, lsl #3
   126a4:	str	r2, [r3, #2012]	; 0x7dc
   126a8:	b	12a14 <main@@Base+0xbe44>
   126ac:	ldr	r3, [pc, #88]	; 1270c <main@@Base+0xbb3c>
   126b0:	add	r3, pc, r3
   126b4:	ldr	r0, [r3, #176]	; 0xb0
   126b8:	bl	6350 <SDL_RenderPresent@plt>
   126bc:	ldr	r3, [sp, #32]
   126c0:	ldr	r2, [sp, #124]	; 0x7c
   126c4:	ldr	r3, [r3]
   126c8:	cmp	r2, r3
   126cc:	bne	13568 <main@@Base+0xc998>
   126d0:	add	sp, sp, #132	; 0x84
   126d4:	vpop	{d8}
   126d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126dc:	ldr	r3, [r4, #2084]	; 0x824
   126e0:	lsl	r3, r3, #1
   126e4:	cmp	r3, #2
   126e8:	ble	134d4 <main@@Base+0xc904>
   126ec:	mov	r9, #1
   126f0:	mov	r2, r9
   126f4:	b	1271c <main@@Base+0xbb4c>
   126f8:	ldrbtmi	r0, [sl], #-0
   126fc:	ldrdeq	r6, [r2], -r4
   12700:	andeq	r0, r0, r8, asr r5
   12704:	andeq	r6, r2, r0, asr #25
   12708:	andseq	r1, r0, r4, lsl #15
   1270c:	andeq	r6, r2, r0, lsl sl
   12710:	andeq	r6, r2, ip, asr r9
   12714:	ldrtne	r2, [r6], -r4
   12718:	mov	r9, r6
   1271c:	add	r6, r9, #1
   12720:	cmp	r3, r2, lsl r6
   12724:	bgt	12718 <main@@Base+0xbb48>
   12728:	lsl	r3, r2, r9
   1272c:	str	r9, [sp, #48]	; 0x30
   12730:	str	r3, [sp, #36]	; 0x24
   12734:	ldr	r3, [r5, #16]
   12738:	ldr	fp, [r7, #1844]	; 0x734
   1273c:	cmp	r3, #0
   12740:	str	r3, [sp, #52]	; 0x34
   12744:	bne	12c20 <main@@Base+0xc050>
   12748:	cmp	r8, #1
   1274c:	movne	sl, #2
   12750:	ldrne	r3, [sp, #48]	; 0x30
   12754:	lsl	r1, fp, #1
   12758:	lslne	sl, sl, r3
   1275c:	ldr	r3, [pc, #-84]	; 12710 <main@@Base+0xbb40>
   12760:	ldr	r0, [r7, #1760]	; 0x6e0
   12764:	add	r3, pc, r3
   12768:	ldreq	sl, [r4, #2080]	; 0x820
   1276c:	str	r3, [sp, #56]	; 0x38
   12770:	bl	21dd4 <vc_dispmanx_send_command_reply@@Base+0x198>
   12774:	ldr	r3, [sp, #56]	; 0x38
   12778:	str	r0, [sp, #44]	; 0x2c
   1277c:	ldrd	r0, [r3, #216]	; 0xd8
   12780:	orrs	r2, r0, r1
   12784:	bne	13480 <main@@Base+0xc8b0>
   12788:	ldr	r3, [sp, #44]	; 0x2c
   1278c:	ldr	r2, [r4, #1888]	; 0x760
   12790:	add	r3, r3, sl, lsl #1
   12794:	cmp	sl, r3
   12798:	movlt	sl, r3
   1279c:	mul	sl, fp, sl
   127a0:	subs	r2, r2, sl
   127a4:	bmi	13368 <main@@Base+0xc798>
   127a8:	bic	r3, r2, #-16777216	; 0xff000000
   127ac:	bic	r3, r3, #16252928	; 0xf80000
   127b0:	str	r3, [sp, #44]	; 0x2c
   127b4:	cmp	r8, #1
   127b8:	beq	13398 <main@@Base+0xc7c8>
   127bc:	ldr	r3, [sp, #44]	; 0x2c
   127c0:	str	r3, [r4, #1892]	; 0x764
   127c4:	cmp	r8, #1
   127c8:	beq	13040 <main@@Base+0xc470>
   127cc:	mov	r3, #1
   127d0:	mov	r8, #0
   127d4:	ldr	r0, [sp, #40]	; 0x28
   127d8:	str	r3, [sp, #4]
   127dc:	str	r8, [sp]
   127e0:	ldr	r3, [r4, #2084]	; 0x824
   127e4:	ldr	r2, [r4, #2080]	; 0x820
   127e8:	ldr	r1, [pc, #-220]	; 12714 <main@@Base+0xbb44>
   127ec:	add	r0, r0, #6016	; 0x1780
   127f0:	bl	11de4 <main@@Base+0xb214>
   127f4:	cmp	r0, r8
   127f8:	blt	13388 <main@@Base+0xc7b8>
   127fc:	ldr	r3, [r4, #1900]	; 0x76c
   12800:	ldr	ip, [r4, #1896]	; 0x768
   12804:	cmp	r3, r6
   12808:	beq	12844 <main@@Base+0xbc74>
   1280c:	mov	r0, ip
   12810:	bl	60e0 <av_rdft_end@plt>
   12814:	ldr	r0, [r4, #1904]	; 0x770
   12818:	bl	69b0 <av_free@plt>
   1281c:	mov	r1, r8
   12820:	mov	r0, r6
   12824:	bl	5e64 <av_rdft_init@plt>
   12828:	str	r6, [r4, #1900]	; 0x76c
   1282c:	str	r0, [r4, #1896]	; 0x768
   12830:	mov	r1, #16
   12834:	ldr	r0, [sp, #36]	; 0x24
   12838:	bl	6734 <av_malloc_array@plt>
   1283c:	ldr	ip, [r4, #1896]	; 0x768
   12840:	str	r0, [r4, #1904]	; 0x770
   12844:	cmp	ip, #0
   12848:	beq	13348 <main@@Base+0xc778>
   1284c:	ldr	r3, [r4, #1904]	; 0x770
   12850:	cmp	r3, #0
   12854:	beq	13348 <main@@Base+0xc778>
   12858:	mov	r2, #1
   1285c:	mov	r6, #0
   12860:	ldr	r1, [r4, #1908]	; 0x774
   12864:	str	r2, [sp, #84]	; 0x54
   12868:	ldr	r2, [r4, #2084]	; 0x824
   1286c:	cmp	fp, r6
   12870:	str	r6, [sp, #80]	; 0x50
   12874:	str	r1, [sp, #76]	; 0x4c
   12878:	str	r2, [sp, #88]	; 0x58
   1287c:	ble	12d00 <main@@Base+0xc130>
   12880:	mov	sl, #2
   12884:	cmp	fp, sl
   12888:	movge	r2, sl
   1288c:	movlt	r2, fp
   12890:	vldr	d8, [pc, #928]	; 12c38 <main@@Base+0xc068>
   12894:	mov	r0, ip
   12898:	ldr	r9, [sp, #48]	; 0x30
   1289c:	str	r2, [sp, #52]	; 0x34
   128a0:	lsl	sl, sl, r9
   128a4:	lsl	r2, sl, #2
   128a8:	str	r2, [sp, #56]	; 0x38
   128ac:	ldr	r7, [pc, #912]	; 12c44 <main@@Base+0xc074>
   128b0:	add	r2, sp, #108	; 0x6c
   128b4:	str	r2, [sp, #48]	; 0x30
   128b8:	lsl	r1, r6, r9
   128bc:	add	r1, r3, r1, lsl #3
   128c0:	ldr	r3, [sp, #48]	; 0x30
   128c4:	cmp	sl, #0
   128c8:	str	r1, [r3, r6, lsl #2]
   128cc:	ldr	r3, [sp, #44]	; 0x2c
   128d0:	add	r2, r3, r6
   128d4:	ble	12944 <main@@Base+0xbd74>
   128d8:	vldr	s15, [sp, #36]	; 0x24
   128dc:	vcvt.f64.s32	d7, s15
   128e0:	mov	r3, r1
   128e4:	vdiv.f64	d5, d8, d7
   128e8:	ldr	ip, [sp, #36]	; 0x24
   128ec:	rsb	r8, ip, #0
   128f0:	ldr	ip, [sp, #56]	; 0x38
   128f4:	add	ip, ip, r1
   128f8:	vmov	s15, r8
   128fc:	vcvt.f64.s32	d6, s15
   12900:	add	lr, r2, #2992	; 0xbb0
   12904:	lsl	lr, lr, #1
   12908:	ldrsh	lr, [r5, lr]
   1290c:	vmul.f64	d6, d6, d5
   12910:	vmov	s14, lr
   12914:	vmov.f64	d4, d8
   12918:	vcvt.f64.s32	d7, s14
   1291c:	vmls.f64	d4, d6, d6
   12920:	vmul.f64	d7, d7, d4
   12924:	vcvt.f32.f64	s14, d7
   12928:	vstmia	r3!, {s14}
   1292c:	add	r2, r2, fp
   12930:	cmp	r2, r7
   12934:	subgt	r2, r2, #524288	; 0x80000
   12938:	cmp	ip, r3
   1293c:	add	r8, r8, #1
   12940:	bne	128f8 <main@@Base+0xbd28>
   12944:	bl	6ad0 <av_rdft_calc@plt>
   12948:	ldr	r3, [sp, #52]	; 0x34
   1294c:	add	r6, r6, #1
   12950:	cmp	r3, r6
   12954:	ble	12d00 <main@@Base+0xc130>
   12958:	ldr	r3, [r4, #1904]	; 0x770
   1295c:	ldr	r0, [r4, #1896]	; 0x768
   12960:	mov	r6, #1
   12964:	b	128b8 <main@@Base+0xbce8>
   12968:	ldr	r3, [pc, #728]	; 12c48 <main@@Base+0xc078>
   1296c:	add	r3, pc, r3
   12970:	ldr	r7, [r3, #4]
   12974:	cmp	r7, #0
   12978:	bne	12c18 <main@@Base+0xc048>
   1297c:	ldr	r3, [pc, #712]	; 12c4c <main@@Base+0xc07c>
   12980:	add	r3, pc, r3
   12984:	ldr	r7, [r3, #28]
   12988:	ldr	r8, [r3, #32]
   1298c:	ldr	r3, [pc, #700]	; 12c50 <main@@Base+0xc080>
   12990:	ldr	r6, [pc, #700]	; 12c54 <main@@Base+0xc084>
   12994:	add	r3, pc, r3
   12998:	ldr	r1, [r3, #208]	; 0xd0
   1299c:	add	r6, pc, r6
   129a0:	cmp	r1, #0
   129a4:	ldreq	r1, [r3, #16]
   129a8:	ldr	r0, [r6, #204]	; 0xcc
   129ac:	streq	r1, [r3, #208]	; 0xd0
   129b0:	bl	650c <SDL_SetWindowTitle@plt>
   129b4:	mov	r2, r8
   129b8:	mov	r1, r7
   129bc:	ldr	r0, [r6, #204]	; 0xcc
   129c0:	bl	623c <SDL_SetWindowSize@plt>
   129c4:	ldr	r3, [pc, #652]	; 12c58 <main@@Base+0xc088>
   129c8:	ldr	r0, [r6, #204]	; 0xcc
   129cc:	add	r3, pc, r3
   129d0:	ldr	r2, [r3, #36]	; 0x24
   129d4:	ldr	r1, [r3, #40]	; 0x28
   129d8:	bl	66a4 <SDL_SetWindowPosition@plt>
   129dc:	ldr	r3, [r6, #200]	; 0xc8
   129e0:	cmp	r3, #0
   129e4:	bne	13030 <main@@Base+0xc460>
   129e8:	ldr	r3, [pc, #620]	; 12c5c <main@@Base+0xc08c>
   129ec:	add	r3, pc, r3
   129f0:	ldr	r0, [r3, #204]	; 0xcc
   129f4:	bl	6194 <SDL_ShowWindow@plt>
   129f8:	str	r7, [r4, #2080]	; 0x820
   129fc:	str	r8, [r4, #2084]	; 0x824
   12a00:	b	123f0 <main@@Base+0xb820>
   12a04:	mov	r3, #0
   12a08:	str	r3, [sp, #44]	; 0x2c
   12a0c:	lsl	r3, r7, #1
   12a10:	str	r3, [sp, #36]	; 0x24
   12a14:	ldr	r3, [sp, #36]	; 0x24
   12a18:	ldr	sl, [r4, #2088]	; 0x828
   12a1c:	add	r6, r3, r7
   12a20:	add	r6, r7, r6, lsl #2
   12a24:	lsl	r6, r6, #3
   12a28:	add	r1, r6, #84	; 0x54
   12a2c:	add	r3, r5, #216	; 0xd8
   12a30:	ldr	r2, [r3, r1]
   12a34:	add	r3, r3, r1
   12a38:	cmp	r2, #0
   12a3c:	add	r1, r5, r6
   12a40:	ldr	r0, [r3, #4]
   12a44:	vldr	s13, [r1, #288]	; 0x120
   12a48:	ldr	r3, [r1, #292]	; 0x124
   12a4c:	ldr	r9, [r4, #2092]	; 0x82c
   12a50:	ldr	r8, [r4, #2080]	; 0x820
   12a54:	ldr	fp, [r4, #2084]	; 0x824
   12a58:	beq	12c10 <main@@Base+0xc040>
   12a5c:	vmov	s15, r2
   12a60:	vcvt.f64.s32	d5, s15
   12a64:	vmov	s15, r0
   12a68:	vcvt.f64.s32	d4, s15
   12a6c:	vdiv.f64	d7, d5, d4
   12a70:	vcvt.f32.f64	s14, d7
   12a74:	vcmp.f32	s14, #0.0
   12a78:	vldr	s15, [pc, #448]	; 12c40 <main@@Base+0xc070>
   12a7c:	vmrs	APSR_nzcv, fpscr
   12a80:	vmovls.f32	s14, s15
   12a84:	vmov	s15, r3
   12a88:	vcvt.f32.s32	s13, s13
   12a8c:	vcvt.f32.s32	s15, s15
   12a90:	vdiv.f32	s16, s13, s15
   12a94:	vmov	s15, fp
   12a98:	vmul.f32	s16, s16, s14
   12a9c:	vcvt.f32.s32	s0, s15
   12aa0:	vmul.f32	s0, s0, s16
   12aa4:	bl	63b0 <lrintf@plt>
   12aa8:	bic	r3, r0, #1
   12aac:	cmp	r8, r3
   12ab0:	blt	12bec <main@@Base+0xc01c>
   12ab4:	sub	r8, r8, r3
   12ab8:	add	r8, r8, r8, lsr #31
   12abc:	add	sl, sl, r8, asr #1
   12ac0:	mov	r0, fp
   12ac4:	mov	r8, r3
   12ac8:	cmp	r8, #1
   12acc:	movlt	r8, #1
   12ad0:	cmp	r0, #1
   12ad4:	movlt	r0, #1
   12ad8:	ldr	r3, [sp, #36]	; 0x24
   12adc:	add	r6, r5, r6
   12ae0:	add	r3, r3, r7
   12ae4:	add	r3, r7, r3, lsl #2
   12ae8:	add	r3, r5, r3, lsl #3
   12aec:	ldr	r3, [r3, #308]	; 0x134
   12af0:	str	r8, [sp, #84]	; 0x54
   12af4:	cmp	r3, #0
   12af8:	str	r0, [sp, #88]	; 0x58
   12afc:	str	sl, [sp, #76]	; 0x4c
   12b00:	str	r9, [sp, #80]	; 0x50
   12b04:	ldr	r8, [r6, #216]	; 0xd8
   12b08:	bne	12f4c <main@@Base+0xc37c>
   12b0c:	ldr	ip, [r8, #80]	; 0x50
   12b10:	ldr	r0, [pc, #328]	; 12c60 <main@@Base+0xc090>
   12b14:	sub	r3, ip, #27
   12b18:	cmp	r3, #1
   12b1c:	add	r0, r5, r0
   12b20:	movls	r1, #1
   12b24:	bls	12b38 <main@@Base+0xbf68>
   12b28:	sub	r1, ip, #25
   12b2c:	cmp	r1, #1
   12b30:	movhi	r1, #0
   12b34:	movls	r1, #1
   12b38:	cmp	ip, #20
   12b3c:	beq	132a0 <main@@Base+0xc6d0>
   12b40:	ldr	lr, [pc, #284]	; 12c64 <main@@Base+0xc094>
   12b44:	mov	r2, #54	; 0x36
   12b48:	mov	r3, #1
   12b4c:	add	lr, pc, lr
   12b50:	b	12b64 <main@@Base+0xbf94>
   12b54:	add	r3, r3, #1
   12b58:	cmp	r3, #19
   12b5c:	beq	12e7c <main@@Base+0xc2ac>
   12b60:	ldr	r2, [lr, r3, lsl #3]
   12b64:	cmp	ip, r2
   12b68:	bne	12b54 <main@@Base+0xbf84>
   12b6c:	ldr	ip, [pc, #244]	; 12c68 <main@@Base+0xc098>
   12b70:	ldr	r2, [r8, #68]	; 0x44
   12b74:	add	ip, pc, ip
   12b78:	add	r3, ip, r3, lsl #3
   12b7c:	ldr	r9, [r3, #4]
   12b80:	ldr	r3, [r8, #72]	; 0x48
   12b84:	cmp	r9, #0
   12b88:	beq	12e80 <main@@Base+0xc2b0>
   12b8c:	mov	sl, #0
   12b90:	stm	sp, {r1, sl}
   12b94:	mov	r1, r9
   12b98:	bl	11de4 <main@@Base+0xb214>
   12b9c:	cmp	r0, sl
   12ba0:	blt	12cf0 <main@@Base+0xc120>
   12ba4:	ldr	r3, [pc, #192]	; 12c6c <main@@Base+0xc09c>
   12ba8:	cmp	r9, r3
   12bac:	bne	132bc <main@@Base+0xc6ec>
   12bb0:	ldr	r3, [r8, #32]
   12bb4:	cmp	r3, #0
   12bb8:	ble	12c78 <main@@Base+0xc0a8>
   12bbc:	ldr	r1, [r8, #36]	; 0x24
   12bc0:	cmp	r1, #0
   12bc4:	ble	12bd4 <main@@Base+0xc004>
   12bc8:	ldr	r0, [r8, #40]	; 0x28
   12bcc:	cmp	r0, #0
   12bd0:	bgt	13500 <main@@Base+0xc930>
   12bd4:	ldr	r2, [pc, #148]	; 12c70 <main@@Base+0xc0a0>
   12bd8:	mov	r1, #16
   12bdc:	add	r2, pc, r2
   12be0:	mov	r0, #0
   12be4:	bl	6188 <av_log@plt>
   12be8:	b	12cf0 <main@@Base+0xc120>
   12bec:	vmov	s15, r8
   12bf0:	vcvt.f32.s32	s0, s15
   12bf4:	vdiv.f32	s0, s0, s16
   12bf8:	bl	63b0 <lrintf@plt>
   12bfc:	bic	r0, r0, #1
   12c00:	sub	fp, fp, r0
   12c04:	add	fp, fp, fp, lsr #31
   12c08:	add	r9, r9, fp, asr #1
   12c0c:	b	12ac8 <main@@Base+0xbef8>
   12c10:	vldr	s14, [pc, #40]	; 12c40 <main@@Base+0xc070>
   12c14:	b	12a84 <main@@Base+0xbeb4>
   12c18:	ldr	r8, [r3]
   12c1c:	b	1298c <main@@Base+0xbdbc>
   12c20:	ldr	r3, [r4, #1892]	; 0x764
   12c24:	str	r3, [sp, #44]	; 0x2c
   12c28:	b	127c4 <main@@Base+0xbbf4>
   12c2c:	mov	r3, #0
   12c30:	str	r3, [sp, #44]	; 0x2c
   12c34:	b	12a14 <main@@Base+0xbe44>
   12c38:	andeq	r0, r0, r0
   12c3c:	svccc	0x00f00000	; IMB
   12c40:	svccc	0x00800000
   12c44:	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
   12c48:	andeq	r6, r2, r4, asr r7
   12c4c:	ldrdeq	r6, [r2], -r0
   12c50:	andeq	r6, r2, ip, lsr #14
   12c54:	andeq	r6, r2, r4, lsr #14
   12c58:	andeq	r6, r2, r4, lsl #13
   12c5c:	ldrdeq	r6, [r2], -r4
   12c60:	andseq	r1, r0, r8, lsl #15
   12c64:	andeq	r1, r1, r8, ror #31
   12c68:	andeq	r1, r1, r0, asr #31
   12c6c:	ldrbpl	r5, [r5], -r9, asr #18
   12c70:	andeq	r2, r1, r8, lsl #9
   12c74:	andeq	r6, r2, ip, asr #7
   12c78:	beq	12bd4 <main@@Base+0xc004>
   12c7c:	ldr	ip, [r8, #36]	; 0x24
   12c80:	cmp	ip, #0
   12c84:	bge	12bd4 <main@@Base+0xc004>
   12c88:	ldr	r2, [r8, #40]	; 0x28
   12c8c:	cmp	r2, #0
   12c90:	bge	12bd4 <main@@Base+0xc004>
   12c94:	ldr	r0, [r8, #72]	; 0x48
   12c98:	rsb	lr, r2, #0
   12c9c:	ldr	r9, [r8]
   12ca0:	add	r1, r0, #1
   12ca4:	str	lr, [sp, #12]
   12ca8:	ldr	lr, [r8, #8]
   12cac:	asr	r1, r1, #1
   12cb0:	sub	r1, r1, #1
   12cb4:	mla	r2, r1, r2, lr
   12cb8:	rsb	lr, ip, #0
   12cbc:	str	r2, [sp, #8]
   12cc0:	str	lr, [sp, #4]
   12cc4:	ldr	lr, [r8, #4]
   12cc8:	sub	r2, r0, #1
   12ccc:	mla	ip, r1, ip, lr
   12cd0:	str	ip, [sp]
   12cd4:	mla	r2, r3, r2, r9
   12cd8:	mov	r1, sl
   12cdc:	rsb	r3, r3, #0
   12ce0:	ldr	r0, [r4, #1928]	; 0x788
   12ce4:	bl	67c4 <SDL_UpdateYUVTexture@plt>
   12ce8:	cmp	r0, #0
   12cec:	bge	12f20 <main@@Base+0xc350>
   12cf0:	ldr	r3, [pc, #-132]	; 12c74 <main@@Base+0xc0a4>
   12cf4:	add	r3, pc, r3
   12cf8:	ldr	r0, [r3, #176]	; 0xb0
   12cfc:	b	126b8 <main@@Base+0xbae8>
   12d00:	add	r3, sp, #72	; 0x48
   12d04:	add	r2, sp, #68	; 0x44
   12d08:	add	r1, sp, #76	; 0x4c
   12d0c:	ldr	r0, [r4, #1920]	; 0x780
   12d10:	bl	6ac4 <SDL_LockTexture@plt>
   12d14:	subs	r8, r0, #0
   12d18:	bne	12e28 <main@@Base+0xc258>
   12d1c:	ldr	r9, [sp, #72]	; 0x48
   12d20:	ldr	r3, [r4, #2084]	; 0x824
   12d24:	asr	r9, r9, #2
   12d28:	mul	r2, r3, r9
   12d2c:	ldr	r7, [sp, #68]	; 0x44
   12d30:	cmp	r3, #0
   12d34:	add	r7, r7, r2, lsl #2
   12d38:	str	r9, [sp, #72]	; 0x48
   12d3c:	str	r7, [sp, #68]	; 0x44
   12d40:	ble	12e20 <main@@Base+0xc250>
   12d44:	vldr	s15, [sp, #36]	; 0x24
   12d48:	vcvt.f64.s32	d7, s15
   12d4c:	vldr	d5, [pc, #940]	; 13100 <main@@Base+0xc530>
   12d50:	vsqrt.f64	d6, d7
   12d54:	ldr	r6, [sp, #108]	; 0x6c
   12d58:	str	r5, [sp, #36]	; 0x24
   12d5c:	vdiv.f64	d8, d5, d6
   12d60:	mov	r5, r4
   12d64:	ldr	sl, [sp, #112]	; 0x70
   12d68:	mov	r4, r9
   12d6c:	mov	r9, r8
   12d70:	mov	r8, r6
   12d74:	b	12d7c <main@@Base+0xc1ac>
   12d78:	ldr	r4, [sp, #72]	; 0x48
   12d7c:	vldr	s14, [r8, #4]
   12d80:	vldr	s15, [r8]
   12d84:	vmul.f32	s14, s14, s14
   12d88:	vmla.f32	s14, s15, s15
   12d8c:	vcvt.f64.f32	d7, s14
   12d90:	vsqrt.f64	d6, d7
   12d94:	vmul.f64	d6, d8, d6
   12d98:	vsqrt.f64	d7, d6
   12d9c:	vcvt.s32.f64	s15, d7
   12da0:	vmov	r6, s15
   12da4:	cmp	fp, #1
   12da8:	movle	r3, r6
   12dac:	ble	12dd4 <main@@Base+0xc204>
   12db0:	vldr	s2, [sl, #4]
   12db4:	vldr	s0, [sl]
   12db8:	vcvt.f64.f32	d1, s2
   12dbc:	vcvt.f64.f32	d0, s0
   12dc0:	bl	68fc <hypot@plt>
   12dc4:	vmul.f64	d0, d8, d0
   12dc8:	vsqrt.f64	d7, d0
   12dcc:	vcvt.s32.f64	s15, d7
   12dd0:	vmov	r3, s15
   12dd4:	cmp	r6, #255	; 0xff
   12dd8:	movge	r6, #255	; 0xff
   12ddc:	cmp	r3, #255	; 0xff
   12de0:	movge	r3, #255	; 0xff
   12de4:	lsl	r1, r3, #8
   12de8:	add	r1, r1, r6, lsl #16
   12dec:	add	r6, r6, r3
   12df0:	sub	r7, r7, r4, lsl #2
   12df4:	add	r6, r1, r6, asr #1
   12df8:	str	r6, [r7]
   12dfc:	ldr	r3, [r5, #2084]	; 0x824
   12e00:	add	r9, r9, #1
   12e04:	cmp	r9, r3
   12e08:	add	r8, r8, #8
   12e0c:	add	sl, sl, #8
   12e10:	blt	12d78 <main@@Base+0xc1a8>
   12e14:	mov	r4, r5
   12e18:	ldr	r5, [sp, #36]	; 0x24
   12e1c:	str	r7, [sp, #68]	; 0x44
   12e20:	ldr	r0, [r4, #1920]	; 0x780
   12e24:	bl	65d8 <SDL_UnlockTexture@plt>
   12e28:	mov	r3, #0
   12e2c:	ldr	r1, [pc, #732]	; 13110 <main@@Base+0xc540>
   12e30:	mov	r2, r3
   12e34:	add	r1, pc, r1
   12e38:	ldr	r0, [r1, #176]	; 0xb0
   12e3c:	ldr	r1, [r4, #1920]	; 0x780
   12e40:	bl	5d50 <SDL_RenderCopy@plt>
   12e44:	ldr	r2, [r5, #16]
   12e48:	ldr	r3, [r4, #1908]	; 0x774
   12e4c:	cmp	r2, #0
   12e50:	ldr	r2, [sp, #40]	; 0x28
   12e54:	addeq	r3, r3, #1
   12e58:	add	r2, r2, #4096	; 0x1000
   12e5c:	ldr	r1, [r2, #2080]	; 0x820
   12e60:	streq	r3, [r4, #1908]	; 0x774
   12e64:	cmp	r1, r3
   12e68:	ble	132e8 <main@@Base+0xc718>
   12e6c:	ldr	r3, [pc, #672]	; 13114 <main@@Base+0xc544>
   12e70:	add	r3, pc, r3
   12e74:	ldr	r0, [r3, #176]	; 0xb0
   12e78:	b	126b8 <main@@Base+0xbae8>
   12e7c:	ldrd	r2, [r8, #68]	; 0x44
   12e80:	mov	r9, #0
   12e84:	stm	sp, {r1, r9}
   12e88:	ldr	r1, [pc, #648]	; 13118 <main@@Base+0xc548>
   12e8c:	bl	11de4 <main@@Base+0xb214>
   12e90:	cmp	r0, r9
   12e94:	blt	12cf0 <main@@Base+0xc120>
   12e98:	mov	ip, #4
   12e9c:	mov	r0, #28
   12ea0:	ldr	r1, [r8, #68]	; 0x44
   12ea4:	ldr	r2, [r8, #72]	; 0x48
   12ea8:	ldr	r3, [r8, #80]	; 0x50
   12eac:	stm	sp, {r1, r2}
   12eb0:	str	ip, [sp, #12]
   12eb4:	str	r9, [sp, #24]
   12eb8:	str	r9, [sp, #20]
   12ebc:	str	r9, [sp, #16]
   12ec0:	str	r0, [sp, #8]
   12ec4:	ldr	r0, [r4, #2064]	; 0x810
   12ec8:	bl	62fc <sws_getCachedContext@plt>
   12ecc:	cmp	r0, #0
   12ed0:	str	r0, [r4, #2064]	; 0x810
   12ed4:	beq	13554 <main@@Base+0xc984>
   12ed8:	add	fp, sp, #108	; 0x6c
   12edc:	add	sl, sp, #92	; 0x5c
   12ee0:	mov	r3, fp
   12ee4:	mov	r1, r9
   12ee8:	mov	r2, sl
   12eec:	ldr	r0, [r4, #1928]	; 0x788
   12ef0:	bl	6ac4 <SDL_LockTexture@plt>
   12ef4:	subs	r3, r0, #0
   12ef8:	bne	12f20 <main@@Base+0xc350>
   12efc:	strd	sl, [sp, #4]
   12f00:	ldr	r2, [r8, #72]	; 0x48
   12f04:	mov	r1, r8
   12f08:	str	r2, [sp]
   12f0c:	ldr	r0, [r4, #2064]	; 0x810
   12f10:	add	r2, r8, #32
   12f14:	bl	6a40 <sws_scale@plt>
   12f18:	ldr	r0, [r4, #1928]	; 0x788
   12f1c:	bl	65d8 <SDL_UnlockTexture@plt>
   12f20:	mov	r2, #1
   12f24:	ldr	r3, [sp, #36]	; 0x24
   12f28:	add	r3, r3, r7
   12f2c:	add	r3, r7, r3, lsl #2
   12f30:	add	r3, r5, r3, lsl #3
   12f34:	str	r2, [r3, #308]	; 0x134
   12f38:	ldr	r2, [r6, #216]	; 0xd8
   12f3c:	ldr	r2, [r2, #32]
   12f40:	lsr	r2, r2, #31
   12f44:	str	r2, [r3, #312]	; 0x138
   12f48:	ldr	r8, [r6, #216]	; 0xd8
   12f4c:	cmp	r8, #0
   12f50:	beq	13028 <main@@Base+0xc458>
   12f54:	ldr	r3, [r8, #80]	; 0x50
   12f58:	cmp	r3, #15
   12f5c:	cmpne	r3, #1
   12f60:	bhi	13028 <main@@Base+0xc458>
   12f64:	ldr	r3, [r8, #300]	; 0x12c
   12f68:	cmp	r3, #2
   12f6c:	moveq	r0, #0
   12f70:	beq	12f94 <main@@Base+0xc3c4>
   12f74:	ldr	r3, [r8, #312]	; 0x138
   12f78:	cmp	r3, #1
   12f7c:	moveq	r0, #2
   12f80:	beq	12f94 <main@@Base+0xc3c4>
   12f84:	sub	r3, r3, #5
   12f88:	cmp	r3, #2
   12f8c:	movhi	r0, #3
   12f90:	movls	r0, #1
   12f94:	bl	6314 <SDL_SetYUVConversionMode@plt>
   12f98:	ldr	r3, [sp, #36]	; 0x24
   12f9c:	ldr	r6, [pc, #376]	; 1311c <main@@Base+0xc54c>
   12fa0:	add	r3, r3, r7
   12fa4:	add	r7, r7, r3, lsl #2
   12fa8:	add	r5, r5, r7, lsl #3
   12fac:	ldr	r3, [r5, #312]	; 0x138
   12fb0:	mov	r5, #0
   12fb4:	cmp	r3, r5
   12fb8:	movne	r3, #2
   12fbc:	moveq	r3, r5
   12fc0:	add	r6, pc, r6
   12fc4:	add	r7, sp, #76	; 0x4c
   12fc8:	ldr	r1, [r4, #1928]	; 0x788
   12fcc:	ldr	r0, [r6, #176]	; 0xb0
   12fd0:	mov	r2, r5
   12fd4:	str	r3, [sp, #4]
   12fd8:	vldr	d0, [pc, #296]	; 13108 <main@@Base+0xc538>
   12fdc:	mov	r3, r7
   12fe0:	str	r5, [sp]
   12fe4:	bl	6914 <SDL_RenderCopyEx@plt>
   12fe8:	mov	r0, #3
   12fec:	bl	6314 <SDL_SetYUVConversionMode@plt>
   12ff0:	ldr	r3, [sp, #44]	; 0x2c
   12ff4:	cmp	r3, r5
   12ff8:	beq	13018 <main@@Base+0xc448>
   12ffc:	ldr	r3, [sp, #40]	; 0x28
   13000:	mov	r2, r5
   13004:	add	r3, r3, #4096	; 0x1000
   13008:	ldr	r1, [r3, #1924]	; 0x784
   1300c:	ldr	r0, [r6, #176]	; 0xb0
   13010:	mov	r3, r7
   13014:	bl	5d50 <SDL_RenderCopy@plt>
   13018:	ldr	r3, [pc, #256]	; 13120 <main@@Base+0xc550>
   1301c:	add	r3, pc, r3
   13020:	ldr	r0, [r3, #176]	; 0xb0
   13024:	b	126b8 <main@@Base+0xbae8>
   13028:	mov	r0, #3
   1302c:	b	12f94 <main@@Base+0xc3c4>
   13030:	ldr	r0, [r6, #204]	; 0xcc
   13034:	ldr	r1, [pc, #232]	; 13124 <main@@Base+0xc554>
   13038:	bl	64e8 <SDL_SetWindowFullscreen@plt>
   1303c:	b	129e8 <main@@Base+0xbe18>
   13040:	mov	r6, #255	; 0xff
   13044:	ldr	r7, [pc, #220]	; 13128 <main@@Base+0xc558>
   13048:	str	r6, [sp]
   1304c:	add	r7, pc, r7
   13050:	mov	r3, r6
   13054:	mov	r2, r6
   13058:	mov	r1, r6
   1305c:	ldr	r0, [r7, #176]	; 0xb0
   13060:	bl	69bc <SDL_SetRenderDrawColor@plt>
   13064:	mov	r1, fp
   13068:	ldr	r0, [r4, #2084]	; 0x824
   1306c:	bl	21dd4 <vc_dispmanx_send_command_reply@@Base+0x198>
   13070:	ldr	r2, [pc, #180]	; 1312c <main@@Base+0xc55c>
   13074:	add	r3, r0, r0, lsl #3
   13078:	smull	r1, r2, r2, r3
   1307c:	asr	r3, r3, #31
   13080:	rsb	r3, r3, r2, asr #3
   13084:	cmp	fp, #0
   13088:	str	r0, [sp, #36]	; 0x24
   1308c:	str	r3, [sp, #40]	; 0x28
   13090:	ble	1352c <main@@Base+0xc95c>
   13094:	ldr	r3, [sp, #36]	; 0x24
   13098:	ldr	r2, [pc, #144]	; 13130 <main@@Base+0xc560>
   1309c:	add	r3, r3, r3, lsr #31
   130a0:	asr	r3, r3, #1
   130a4:	str	r3, [sp, #52]	; 0x34
   130a8:	mov	r3, r4
   130ac:	ldr	sl, [sp, #44]	; 0x2c
   130b0:	add	r2, pc, r2
   130b4:	ldr	r1, [r4, #2080]	; 0x820
   130b8:	str	r2, [sp, #44]	; 0x2c
   130bc:	mov	r4, sl
   130c0:	add	r2, fp, sl
   130c4:	mov	r9, #0
   130c8:	mov	sl, r3
   130cc:	str	r2, [sp, #56]	; 0x38
   130d0:	str	r8, [sp, #60]	; 0x3c
   130d4:	str	r5, [sp, #48]	; 0x30
   130d8:	ldr	r7, [sl, #2092]	; 0x82c
   130dc:	ldr	r3, [sp, #52]	; 0x34
   130e0:	cmp	r1, #0
   130e4:	add	r7, r3, r7
   130e8:	add	r7, r7, r9
   130ec:	mov	r6, r4
   130f0:	ble	131e0 <main@@Base+0xc610>
   130f4:	mov	r8, #0
   130f8:	add	r5, sp, #76	; 0x4c
   130fc:	b	13184 <main@@Base+0xc5b4>
   13100:	andeq	r0, r0, r0
   13104:	svccc	0x00f00000	; IMB
	...
   13110:	andeq	r6, r2, ip, lsl #5
   13114:	andeq	r6, r2, r0, asr r2
   13118:	ldrtne	r2, [r6], -r4
   1311c:	andeq	r6, r2, r0, lsl #2
   13120:	andeq	r6, r2, r4, lsr #1
   13124:	andeq	r1, r0, r1
   13128:	andeq	r6, r2, r4, ror r0
   1312c:	strbtvs	r6, [r6], -r7, ror #12
   13130:	andeq	r6, r2, r0, lsl r0
   13134:			; <UNDEFINED> instruction: 0x00025eb8
   13138:	andeq	r5, r2, r8, lsl #29
   1313c:	ldrne	r0, [r1], #-2049	; 0xfffff7ff
   13140:	ldrdeq	r5, [r2], -r0
   13144:	andeq	r1, r1, r4, lsr #25
   13148:	andeq	r5, r2, r4, lsr sp
   1314c:	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
   13150:	andeq	r0, r0, r7, ror #7
   13154:	str	r7, [sp, #80]	; 0x50
   13158:	str	r3, [sp, #88]	; 0x58
   1315c:	str	r1, [sp, #84]	; 0x54
   13160:	bne	131cc <main@@Base+0xc5fc>
   13164:	ldr	r3, [pc, #-32]	; 1314c <main@@Base+0xc57c>
   13168:	add	r6, r6, fp
   1316c:	ldr	r1, [sl, #2080]	; 0x820
   13170:	cmp	r6, r3
   13174:	add	r8, r8, #1
   13178:	subgt	r6, r6, #524288	; 0x80000
   1317c:	cmp	r8, r1
   13180:	bge	131e0 <main@@Base+0xc610>
   13184:	ldr	r2, [sp, #48]	; 0x30
   13188:	add	r3, r6, #2992	; 0xbb0
   1318c:	lsl	r3, r3, #1
   13190:	ldrsh	r3, [r2, r3]
   13194:	ldr	r1, [sp, #40]	; 0x28
   13198:	ldr	r2, [sl, #2088]	; 0x828
   1319c:	mul	r3, r1, r3
   131a0:	asr	r3, r3, #15
   131a4:	add	r2, r8, r2
   131a8:	cmp	r3, #0
   131ac:	mov	r1, #1
   131b0:	str	r2, [sp, #76]	; 0x4c
   131b4:	bge	13154 <main@@Base+0xc584>
   131b8:	add	r2, r7, r3
   131bc:	rsb	r3, r3, #0
   131c0:	str	r1, [sp, #84]	; 0x54
   131c4:	str	r2, [sp, #80]	; 0x50
   131c8:	str	r3, [sp, #88]	; 0x58
   131cc:	ldr	r3, [sp, #44]	; 0x2c
   131d0:	mov	r1, r5
   131d4:	ldr	r0, [r3, #176]	; 0xb0
   131d8:	bl	63d4 <SDL_RenderFillRect@plt>
   131dc:	b	13164 <main@@Base+0xc594>
   131e0:	ldr	r3, [sp, #56]	; 0x38
   131e4:	add	r4, r4, #1
   131e8:	cmp	r3, r4
   131ec:	ldr	r3, [sp, #36]	; 0x24
   131f0:	add	r9, r9, r3
   131f4:	bne	130d8 <main@@Base+0xc508>
   131f8:	mov	r3, #255	; 0xff
   131fc:	mov	r2, #0
   13200:	ldr	r5, [pc, #-212]	; 13134 <main@@Base+0xc564>
   13204:	str	r3, [sp]
   13208:	add	r5, pc, r5
   1320c:	ldr	r0, [r5, #176]	; 0xb0
   13210:	mov	r1, r2
   13214:	ldr	r8, [sp, #60]	; 0x3c
   13218:	bl	69bc <SDL_SetRenderDrawColor@plt>
   1321c:	cmp	fp, #1
   13220:	mov	r4, sl
   13224:	ble	13544 <main@@Base+0xc974>
   13228:	mov	r9, #1
   1322c:	ldr	r6, [pc, #-252]	; 13138 <main@@Base+0xc568>
   13230:	ldr	r7, [sp, #36]	; 0x24
   13234:	ldr	r0, [r5, #176]	; 0xb0
   13238:	add	r6, pc, r6
   1323c:	add	r5, sp, #76	; 0x4c
   13240:	ldr	r3, [r4, #2092]	; 0x82c
   13244:	ldr	r2, [r4, #2080]	; 0x820
   13248:	add	r3, r7, r3
   1324c:	str	r3, [sp, #80]	; 0x50
   13250:	ldr	r3, [r4, #2088]	; 0x828
   13254:	cmp	r2, #0
   13258:	add	r8, r8, #1
   1325c:	str	r9, [sp, #88]	; 0x58
   13260:	str	r2, [sp, #84]	; 0x54
   13264:	str	r3, [sp, #76]	; 0x4c
   13268:	bne	13280 <main@@Base+0xc6b0>
   1326c:	ldr	r3, [sp, #36]	; 0x24
   13270:	cmp	fp, r8
   13274:	add	r7, r7, r3
   13278:	bne	13240 <main@@Base+0xc670>
   1327c:	b	126b8 <main@@Base+0xbae8>
   13280:	mov	r1, r5
   13284:	bl	63d4 <SDL_RenderFillRect@plt>
   13288:	ldr	r3, [sp, #36]	; 0x24
   1328c:	cmp	fp, r8
   13290:	add	r7, r7, r3
   13294:	ldr	r0, [r6, #176]	; 0xb0
   13298:	bne	13240 <main@@Base+0xc670>
   1329c:	b	126b8 <main@@Base+0xbae8>
   132a0:	mov	ip, #0
   132a4:	ldrd	r2, [r8, #68]	; 0x44
   132a8:	stm	sp, {r1, ip}
   132ac:	ldr	r1, [pc, #-376]	; 1313c <main@@Base+0xc56c>
   132b0:	bl	11de4 <main@@Base+0xb214>
   132b4:	cmp	r0, #0
   132b8:	blt	12cf0 <main@@Base+0xc120>
   132bc:	ldr	r3, [r8, #32]
   132c0:	ldr	r2, [r8]
   132c4:	cmp	r3, #0
   132c8:	ldrlt	r1, [r8, #72]	; 0x48
   132cc:	ldr	r0, [r4, #1928]	; 0x788
   132d0:	sublt	r1, r1, #1
   132d4:	mlalt	r2, r3, r1, r2
   132d8:	rsblt	r3, r3, #0
   132dc:	mov	r1, #0
   132e0:	bl	5d80 <SDL_UpdateTexture@plt>
   132e4:	b	12ce8 <main@@Base+0xc118>
   132e8:	ldr	r3, [pc, #-432]	; 13140 <main@@Base+0xc570>
   132ec:	ldr	r1, [r2, #2088]	; 0x828
   132f0:	add	r3, pc, r3
   132f4:	str	r1, [r2, #1908]	; 0x774
   132f8:	ldr	r0, [r3, #176]	; 0xb0
   132fc:	b	126b8 <main@@Base+0xbae8>
   13300:	ldr	r3, [r1, #1996]	; 0x7cc
   13304:	cmp	r3, #0
   13308:	bne	12534 <main@@Base+0xb964>
   1330c:	b	12500 <main@@Base+0xb930>
   13310:	stmib	sp, {r7, r8}
   13314:	ldr	r2, [r6, #12]
   13318:	add	r1, r6, #84	; 0x54
   1331c:	str	r2, [sp]
   13320:	ldr	r0, [r4, #2068]	; 0x814
   13324:	add	r2, r6, #100	; 0x64
   13328:	bl	6a40 <sws_scale@plt>
   1332c:	ldr	r0, [r4, #1924]	; 0x784
   13330:	bl	65d8 <SDL_UnlockTexture@plt>
   13334:	ldr	r3, [fp, #1940]	; 0x794
   13338:	add	r9, r9, #1
   1333c:	cmp	r3, r9
   13340:	bhi	1258c <main@@Base+0xb9bc>
   13344:	b	12688 <main@@Base+0xbab8>
   13348:	ldr	r2, [pc, #-524]	; 13144 <main@@Base+0xc574>
   1334c:	mov	r1, #16
   13350:	add	r2, pc, r2
   13354:	mov	r0, #0
   13358:	bl	6188 <av_log@plt>
   1335c:	mov	r3, #1
   13360:	str	r3, [r7, #1884]	; 0x75c
   13364:	b	12e44 <main@@Base+0xc274>
   13368:	ldr	r1, [pc, #-548]	; 1314c <main@@Base+0xc57c>
   1336c:	rsbs	r3, r2, #0
   13370:	and	r3, r3, r1
   13374:	and	r2, r2, r1
   13378:	rsbpl	r2, r3, #0
   1337c:	add	r3, r2, #524288	; 0x80000
   13380:	str	r3, [sp, #44]	; 0x2c
   13384:	b	127b4 <main@@Base+0xbbe4>
   13388:	ldr	r3, [pc, #-584]	; 13148 <main@@Base+0xc578>
   1338c:	add	r3, pc, r3
   13390:	ldr	r0, [r3, #176]	; 0xb0
   13394:	b	126b8 <main@@Base+0xbae8>
   13398:	lsl	r3, fp, #2
   1339c:	str	r8, [sp, #56]	; 0x38
   133a0:	mov	r9, #-2147483648	; 0x80000000
   133a4:	mov	r8, r3
   133a8:	ldr	sl, [sp, #44]	; 0x2c
   133ac:	str	r7, [sp, #60]	; 0x3c
   133b0:	ldr	r2, [pc, #-620]	; 1314c <main@@Base+0xc57c>
   133b4:	ldr	r7, [sp, #52]	; 0x34
   133b8:	add	lr, sl, #524288	; 0x80000
   133bc:	str	r6, [sp, #44]	; 0x2c
   133c0:	rsbs	r3, lr, #0
   133c4:	and	r3, r3, r2
   133c8:	and	ip, lr, r2
   133cc:	rsbpl	ip, r3, #0
   133d0:	add	r3, ip, r8
   133d4:	rsbs	r1, r3, #0
   133d8:	and	r0, r3, r2
   133dc:	and	r1, r1, r2
   133e0:	add	r3, fp, r3
   133e4:	rsbpl	r0, r1, #0
   133e8:	rsbs	r6, r3, #0
   133ec:	and	r1, r3, r2
   133f0:	and	r6, r6, r2
   133f4:	add	r3, r8, r3
   133f8:	rsbpl	r1, r6, #0
   133fc:	rsbs	r6, r3, #0
   13400:	and	r6, r6, r2
   13404:	and	r3, r3, r2
   13408:	rsbpl	r3, r6, #0
   1340c:	add	r3, r3, #2992	; 0xbb0
   13410:	add	r6, ip, #2992	; 0xbb0
   13414:	lsl	r3, r3, #1
   13418:	lsl	r6, r6, #1
   1341c:	ldrsh	r3, [r5, r3]
   13420:	ldrsh	r6, [r5, r6]
   13424:	add	r0, r0, #2992	; 0xbb0
   13428:	add	r1, r1, #2992	; 0xbb0
   1342c:	sub	r3, r6, r3
   13430:	lsl	r0, r0, #1
   13434:	lsl	r1, r1, #1
   13438:	cmp	r3, r9
   1343c:	ldrsh	r0, [r5, r0]
   13440:	ldrsh	r1, [r5, r1]
   13444:	ble	13458 <main@@Base+0xc888>
   13448:	eor	r0, r0, r1
   1344c:	cmp	r0, #0
   13450:	movlt	r9, r3
   13454:	movlt	sl, ip
   13458:	ldr	r3, [pc, #-784]	; 13150 <main@@Base+0xc580>
   1345c:	add	r7, r7, fp
   13460:	cmp	r7, r3
   13464:	sub	lr, lr, fp
   13468:	ble	133c0 <main@@Base+0xc7f0>
   1346c:	ldr	r6, [sp, #44]	; 0x2c
   13470:	ldr	r8, [sp, #56]	; 0x38
   13474:	str	sl, [sp, #44]	; 0x2c
   13478:	ldr	r7, [sp, #60]	; 0x3c
   1347c:	b	127bc <main@@Base+0xbbec>
   13480:	bl	65f0 <av_gettime_relative@plt>
   13484:	ldr	r3, [sp, #56]	; 0x38
   13488:	ldr	r2, [r7, #1840]	; 0x730
   1348c:	ldr	ip, [r3, #216]	; 0xd8
   13490:	asr	r9, r2, #31
   13494:	subs	r0, r0, ip
   13498:	mul	ip, r0, r9
   1349c:	ldr	r3, [r3, #220]	; 0xdc
   134a0:	umull	r8, r9, r0, r2
   134a4:	sbc	r1, r1, r3
   134a8:	mla	ip, r2, r1, ip
   134ac:	add	r3, pc, #188	; 0xbc
   134b0:	ldrd	r2, [r3]
   134b4:	mov	r0, r8
   134b8:	add	r1, ip, r9
   134bc:	bl	223d4 <vc_dispmanx_send_command_reply@@Base+0x798>
   134c0:	ldr	r3, [sp, #44]	; 0x2c
   134c4:	ldr	r8, [r7, #1884]	; 0x75c
   134c8:	add	r3, r3, r0
   134cc:	str	r3, [sp, #44]	; 0x2c
   134d0:	b	12788 <main@@Base+0xbbb8>
   134d4:	mov	r3, #1
   134d8:	mov	r2, #0
   134dc:	str	r3, [sp, #36]	; 0x24
   134e0:	str	r2, [sp, #48]	; 0x30
   134e4:	mov	r6, r3
   134e8:	b	12734 <main@@Base+0xbb64>
   134ec:	ldr	r2, [pc, #132]	; 13578 <main@@Base+0xc9a8>
   134f0:	mov	r1, #8
   134f4:	add	r2, pc, r2
   134f8:	bl	6188 <av_log@plt>
   134fc:	b	12cf0 <main@@Base+0xc120>
   13500:	ldr	r2, [r8]
   13504:	str	r0, [sp, #12]
   13508:	ldr	r0, [r8, #8]
   1350c:	str	r1, [sp, #4]
   13510:	str	r0, [sp, #8]
   13514:	ldr	r0, [r8, #4]
   13518:	mov	r1, sl
   1351c:	str	r0, [sp]
   13520:	ldr	r0, [r4, #1928]	; 0x788
   13524:	bl	67c4 <SDL_UpdateYUVTexture@plt>
   13528:	b	12ce8 <main@@Base+0xc118>
   1352c:	mov	r2, #0
   13530:	ldr	r0, [r7, #176]	; 0xb0
   13534:	mov	r3, r6
   13538:	str	r6, [sp]
   1353c:	mov	r1, r2
   13540:	bl	69bc <SDL_SetRenderDrawColor@plt>
   13544:	ldr	r3, [pc, #48]	; 1357c <main@@Base+0xc9ac>
   13548:	add	r3, pc, r3
   1354c:	ldr	r0, [r3, #176]	; 0xb0
   13550:	b	126b8 <main@@Base+0xbae8>
   13554:	ldr	r2, [pc, #36]	; 13580 <main@@Base+0xc9b0>
   13558:	mov	r1, #8
   1355c:	add	r2, pc, r2
   13560:	bl	6188 <av_log@plt>
   13564:	b	12cf0 <main@@Base+0xc120>
   13568:	bl	5e7c <__stack_chk_fail@plt>
   1356c:	nop	{0}
   13570:			; <UNDEFINED> instruction: 0xfff0bdc0
   13574:			; <UNDEFINED> instruction: 0xffffffff
   13578:	andeq	r1, r1, r4, asr #22
   1357c:	andeq	r5, r2, r8, ror fp
   13580:	ldrdeq	r1, [r1], -ip
   13584:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13588:	mov	r5, r0
   1358c:	mov	r9, r1
   13590:	mvn	r8, #10
   13594:	sub	sp, sp, #108	; 0x6c
   13598:	ldr	r3, [pc, #1028]	; 139a4 <main@@Base+0xcdd4>
   1359c:	str	r2, [sp, #12]
   135a0:	ldr	r2, [pc, #1024]	; 139a8 <main@@Base+0xcdd8>
   135a4:	add	r3, pc, r3
   135a8:	ldr	r2, [r3, r2]
   135ac:	ldr	fp, [pc, #1016]	; 139ac <main@@Base+0xcddc>
   135b0:	str	r2, [sp, #8]
   135b4:	ldr	r2, [r2]
   135b8:	add	fp, pc, fp
   135bc:	str	r2, [sp, #100]	; 0x64
   135c0:	ldr	r3, [r5, #72]	; 0x48
   135c4:	ldr	r2, [r5, #80]	; 0x50
   135c8:	ldr	r1, [r3, #28]
   135cc:	cmp	r1, r2
   135d0:	beq	136f0 <main@@Base+0xcb20>
   135d4:	mov	sl, #0
   135d8:	add	r7, sp, #24
   135dc:	b	13604 <main@@Base+0xca34>
   135e0:	mov	r1, r5
   135e4:	mov	r0, r7
   135e8:	bl	6518 <av_packet_move_ref@plt>
   135ec:	str	sl, [r5, #88]	; 0x58
   135f0:	ldr	r3, [r5, #72]	; 0x48
   135f4:	ldr	r2, [r5, #80]	; 0x50
   135f8:	ldr	r1, [r3, #28]
   135fc:	cmp	r1, r2
   13600:	beq	137d4 <main@@Base+0xcc04>
   13604:	ldr	r3, [r3, #8]
   13608:	cmp	r3, #0
   1360c:	beq	1379c <main@@Base+0xcbcc>
   13610:	ldr	r3, [r5, #88]	; 0x58
   13614:	cmp	r3, #0
   13618:	bne	135e0 <main@@Base+0xca10>
   1361c:	ldr	r4, [r5, #72]	; 0x48
   13620:	ldr	r0, [r4, #32]
   13624:	bl	6b3c <SDL_LockMutex@plt>
   13628:	ldr	r3, [r4, #24]
   1362c:	cmp	r3, #0
   13630:	beq	13650 <main@@Base+0xca80>
   13634:	b	137a8 <main@@Base+0xcbd8>
   13638:	ldr	r1, [r4, #32]
   1363c:	ldr	r0, [r4, #36]	; 0x24
   13640:	bl	60bc <SDL_CondWait@plt>
   13644:	ldr	r3, [r4, #24]
   13648:	cmp	r3, #0
   1364c:	bne	137a8 <main@@Base+0xcbd8>
   13650:	ldr	r6, [r4]
   13654:	cmp	r6, #0
   13658:	beq	13638 <main@@Base+0xca68>
   1365c:	ldr	r3, [r6, #72]	; 0x48
   13660:	ldr	r2, [r6, #48]	; 0x30
   13664:	cmp	r3, #0
   13668:	streq	r3, [r4, #4]
   1366c:	str	r3, [r4]
   13670:	ldr	r3, [r4, #12]
   13674:	ldr	ip, [r6, #28]
   13678:	ldr	r0, [r4, #16]
   1367c:	sub	r3, r3, #80	; 0x50
   13680:	subs	r0, r0, r2
   13684:	ldr	r1, [r4, #20]
   13688:	sub	r3, r3, ip
   1368c:	ldr	r2, [r4, #8]
   13690:	ldr	ip, [r6, #52]	; 0x34
   13694:	sub	r2, r2, #1
   13698:	sbc	r1, r1, ip
   1369c:	strd	r0, [r4, #16]
   136a0:	str	r3, [r4, #12]
   136a4:	str	r2, [r4, #8]
   136a8:	mov	r1, r6
   136ac:	mov	r2, #72	; 0x48
   136b0:	mov	r0, r7
   136b4:	bl	66f8 <memcpy@plt>
   136b8:	ldr	r3, [r6, #76]	; 0x4c
   136bc:	mov	r0, r6
   136c0:	str	r3, [r5, #80]	; 0x50
   136c4:	bl	69b0 <av_free@plt>
   136c8:	ldr	r0, [r4, #32]
   136cc:	bl	6290 <SDL_UnlockMutex@plt>
   136d0:	b	135f0 <main@@Base+0xca20>
   136d4:	ldr	r2, [pc, #724]	; 139b0 <main@@Base+0xcde0>
   136d8:	cmp	r8, r2
   136dc:	beq	13988 <main@@Base+0xcdb8>
   136e0:	cmp	r8, #0
   136e4:	beq	13840 <main@@Base+0xcc70>
   136e8:	cmn	r8, #11
   136ec:	beq	135d4 <main@@Base+0xca04>
   136f0:	ldr	r6, [r3, #24]
   136f4:	cmp	r6, #0
   136f8:	bne	1397c <main@@Base+0xcdac>
   136fc:	ldr	r0, [r5, #76]	; 0x4c
   13700:	ldr	r4, [r0, #8]
   13704:	cmp	r4, #0
   13708:	beq	13810 <main@@Base+0xcc40>
   1370c:	cmp	r4, #1
   13710:	bne	136d4 <main@@Base+0xcb04>
   13714:	mov	r1, r9
   13718:	bl	61d0 <avcodec_receive_frame@plt>
   1371c:	subs	r8, r0, #0
   13720:	blt	13848 <main@@Base+0xcc78>
   13724:	ldrd	r2, [r9, #104]	; 0x68
   13728:	cmp	r3, #-2147483648	; 0x80000000
   1372c:	cmpeq	r2, #0
   13730:	ldr	r8, [r9, #232]	; 0xe8
   13734:	beq	1386c <main@@Base+0xcc9c>
   13738:	str	r4, [sp, #24]
   1373c:	str	r8, [sp, #28]
   13740:	add	r1, sp, #24
   13744:	ldm	r1, {r0, r1}
   13748:	stm	sp, {r0, r1}
   1374c:	ldr	ip, [r5, #76]	; 0x4c
   13750:	mov	r1, r3
   13754:	add	r3, ip, #772	; 0x304
   13758:	mov	r0, r2
   1375c:	ldm	r3, {r2, r3}
   13760:	bl	6884 <av_rescale_q@plt>
   13764:	mov	r6, r0
   13768:	mov	r7, r1
   1376c:	strd	r6, [r9, #104]	; 0x68
   13770:	cmp	r7, #-2147483648	; 0x80000000
   13774:	cmpeq	r6, #0
   13778:	beq	13840 <main@@Base+0xcc70>
   1377c:	mov	r3, #1
   13780:	ldr	r2, [r9, #76]	; 0x4c
   13784:	str	r8, [r5, #124]	; 0x7c
   13788:	adds	r0, r6, r2
   1378c:	adc	r1, r7, r2, asr #31
   13790:	strd	r0, [r5, #112]	; 0x70
   13794:	str	r3, [r5, #120]	; 0x78
   13798:	b	13840 <main@@Base+0xcc70>
   1379c:	ldr	r0, [r5, #92]	; 0x5c
   137a0:	bl	5dec <SDL_CondSignal@plt>
   137a4:	b	13610 <main@@Base+0xca40>
   137a8:	ldr	r0, [r4, #32]
   137ac:	bl	6290 <SDL_UnlockMutex@plt>
   137b0:	mvn	r6, #0
   137b4:	ldr	r3, [sp, #8]
   137b8:	ldr	r2, [sp, #100]	; 0x64
   137bc:	ldr	r3, [r3]
   137c0:	mov	r0, r6
   137c4:	cmp	r2, r3
   137c8:	bne	139a0 <main@@Base+0xcdd0>
   137cc:	add	sp, sp, #108	; 0x6c
   137d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137d4:	ldr	r2, [sp, #48]	; 0x30
   137d8:	ldr	r3, [fp, #128]	; 0x80
   137dc:	ldr	r0, [r5, #76]	; 0x4c
   137e0:	cmp	r2, r3
   137e4:	beq	138f4 <main@@Base+0xcd24>
   137e8:	ldr	r3, [r0, #8]
   137ec:	cmp	r3, #3
   137f0:	beq	138b4 <main@@Base+0xcce4>
   137f4:	mov	r1, r7
   137f8:	bl	6110 <avcodec_send_packet@plt>
   137fc:	cmn	r0, #11
   13800:	beq	13950 <main@@Base+0xcd80>
   13804:	mov	r0, r7
   13808:	bl	6a28 <av_packet_unref@plt>
   1380c:	b	135c0 <main@@Base+0xc9f0>
   13810:	mov	r1, r9
   13814:	bl	61d0 <avcodec_receive_frame@plt>
   13818:	subs	r8, r0, #0
   1381c:	blt	13848 <main@@Base+0xcc78>
   13820:	ldr	r3, [pc, #396]	; 139b4 <main@@Base+0xcde4>
   13824:	add	r3, pc, r3
   13828:	ldr	r3, [r3, #44]	; 0x2c
   1382c:	cmn	r3, #1
   13830:	beq	1385c <main@@Base+0xcc8c>
   13834:	cmp	r3, #0
   13838:	ldrdeq	r2, [r9, #120]	; 0x78
   1383c:	strdeq	r2, [r9, #104]	; 0x68
   13840:	mov	r6, #1
   13844:	b	137b4 <main@@Base+0xcbe4>
   13848:	ldr	r3, [pc, #352]	; 139b0 <main@@Base+0xcde0>
   1384c:	cmp	r8, r3
   13850:	beq	13984 <main@@Base+0xcdb4>
   13854:	ldr	r3, [r5, #72]	; 0x48
   13858:	b	136e8 <main@@Base+0xcb18>
   1385c:	add	r3, r9, #320	; 0x140
   13860:	ldrd	r2, [r3]
   13864:	strd	r2, [r9, #104]	; 0x68
   13868:	b	13840 <main@@Base+0xcc70>
   1386c:	ldrd	r6, [r5, #112]	; 0x70
   13870:	cmp	r7, r3
   13874:	cmpeq	r6, r2
   13878:	beq	13840 <main@@Base+0xcc70>
   1387c:	str	r4, [sp, #24]
   13880:	str	r8, [sp, #28]
   13884:	add	r2, sp, #24
   13888:	ldm	r2, {r0, r1}
   1388c:	stm	sp, {r0, r1}
   13890:	add	r3, r5, #120	; 0x78
   13894:	ldm	r3, {r2, r3}
   13898:	mov	r0, r6
   1389c:	mov	r1, r7
   138a0:	bl	6884 <av_rescale_q@plt>
   138a4:	mov	r6, r0
   138a8:	mov	r7, r1
   138ac:	strd	r6, [r9, #104]	; 0x68
   138b0:	b	13770 <main@@Base+0xcba0>
   138b4:	mov	ip, #0
   138b8:	mov	r3, r7
   138bc:	add	r2, sp, #20
   138c0:	ldr	r1, [sp, #12]
   138c4:	str	ip, [sp, #20]
   138c8:	bl	64ac <avcodec_decode_subtitle2@plt>
   138cc:	cmp	r0, #0
   138d0:	blt	13948 <main@@Base+0xcd78>
   138d4:	ldr	r2, [sp, #20]
   138d8:	ldr	r3, [sp, #48]	; 0x30
   138dc:	cmp	r2, #0
   138e0:	beq	13940 <main@@Base+0xcd70>
   138e4:	cmp	r3, #0
   138e8:	beq	1391c <main@@Base+0xcd4c>
   138ec:	mov	r8, #0
   138f0:	b	13804 <main@@Base+0xcc34>
   138f4:	bl	6644 <avcodec_flush_buffers@plt>
   138f8:	ldrd	r2, [r5, #96]	; 0x60
   138fc:	mov	r0, #0
   13900:	add	r1, r5, #104	; 0x68
   13904:	add	ip, r5, #120	; 0x78
   13908:	str	r0, [r5, #84]	; 0x54
   1390c:	ldm	r1, {r0, r1}
   13910:	strd	r2, [r5, #112]	; 0x70
   13914:	stm	ip, {r0, r1}
   13918:	b	135c0 <main@@Base+0xc9f0>
   1391c:	mov	r3, #1
   13920:	mov	r1, r7
   13924:	str	r3, [r5, #88]	; 0x58
   13928:	mov	r0, r5
   1392c:	bl	6518 <av_packet_move_ref@plt>
   13930:	ldr	r3, [sp, #20]
   13934:	cmp	r3, #0
   13938:	bne	138ec <main@@Base+0xcd1c>
   1393c:	ldr	r3, [sp, #48]	; 0x30
   13940:	cmp	r3, #0
   13944:	beq	13998 <main@@Base+0xcdc8>
   13948:	mvn	r8, #10
   1394c:	b	13804 <main@@Base+0xcc34>
   13950:	ldr	r2, [pc, #96]	; 139b8 <main@@Base+0xcde8>
   13954:	ldr	r0, [r5, #76]	; 0x4c
   13958:	add	r2, pc, r2
   1395c:	mov	r1, #16
   13960:	bl	6188 <av_log@plt>
   13964:	mov	r3, #1
   13968:	mov	r1, r7
   1396c:	str	r3, [r5, #88]	; 0x58
   13970:	mov	r0, r5
   13974:	bl	6518 <av_packet_move_ref@plt>
   13978:	b	13804 <main@@Base+0xcc34>
   1397c:	mvn	r6, #0
   13980:	b	137b4 <main@@Base+0xcbe4>
   13984:	ldr	r0, [r5, #76]	; 0x4c
   13988:	ldr	r3, [r5, #80]	; 0x50
   1398c:	str	r3, [r5, #84]	; 0x54
   13990:	bl	6644 <avcodec_flush_buffers@plt>
   13994:	b	137b4 <main@@Base+0xcbe4>
   13998:	ldr	r8, [pc, #16]	; 139b0 <main@@Base+0xcde0>
   1399c:	b	13804 <main@@Base+0xcc34>
   139a0:	bl	5e7c <__stack_chk_fail@plt>
   139a4:	strdeq	r5, [r2], -r0
   139a8:	andeq	r0, r0, r8, asr r5
   139ac:	andeq	r5, r2, r8, lsl #22
   139b0:	svcle	0x00b9b0bb
   139b4:	andeq	r5, r2, ip, lsr #16
   139b8:	andeq	r1, r1, r8, asr #14
   139bc:	push	{r4, r5, r6, lr}
   139c0:	ldr	r3, [pc, #256]	; 13ac8 <main@@Base+0xcef8>
   139c4:	ldr	r2, [pc, #256]	; 13acc <main@@Base+0xcefc>
   139c8:	add	r3, pc, r3
   139cc:	ldr	r6, [r3, r2]
   139d0:	ldr	r4, [r0]
   139d4:	ldr	r2, [r6]
   139d8:	sub	sp, sp, #16
   139dc:	cmp	r4, #0
   139e0:	mov	r5, r0
   139e4:	str	r1, [sp, #4]
   139e8:	str	r2, [sp, #12]
   139ec:	beq	13a6c <main@@Base+0xce9c>
   139f0:	vmov	s15, r4
   139f4:	vldr	d0, [pc, #148]	; 13a90 <main@@Base+0xcec0>
   139f8:	vcvt.f64.s32	d7, s15
   139fc:	vmul.f64	d0, d7, d0
   13a00:	bl	6b48 <log@plt>
   13a04:	vldr	d7, [pc, #140]	; 13a98 <main@@Base+0xcec8>
   13a08:	vldr	d6, [pc, #144]	; 13aa0 <main@@Base+0xced0>
   13a0c:	vmul.f64	d0, d0, d7
   13a10:	vdiv.f64	d1, d0, d6
   13a14:	vldr	s15, [sp, #4]
   13a18:	vldr	d5, [pc, #136]	; 13aa8 <main@@Base+0xced8>
   13a1c:	vcvt.f64.s32	d7, s15
   13a20:	vldr	d6, [pc, #112]	; 13a98 <main@@Base+0xcec8>
   13a24:	vmla.f64	d1, d7, d5
   13a28:	vldr	d0, [pc, #128]	; 13ab0 <main@@Base+0xcee0>
   13a2c:	vdiv.f64	d1, d1, d6
   13a30:	bl	644c <pow@plt>
   13a34:	vldr	d7, [pc, #124]	; 13ab8 <main@@Base+0xcee8>
   13a38:	vmul.f64	d0, d0, d7
   13a3c:	bl	6698 <lrint@plt>
   13a40:	cmp	r4, r0
   13a44:	beq	13a74 <main@@Base+0xcea4>
   13a48:	cmp	r0, #128	; 0x80
   13a4c:	movge	r0, #128	; 0x80
   13a50:	ldr	r2, [sp, #12]
   13a54:	ldr	r3, [r6]
   13a58:	str	r0, [r5]
   13a5c:	cmp	r2, r3
   13a60:	bne	13a88 <main@@Base+0xceb8>
   13a64:	add	sp, sp, #16
   13a68:	pop	{r4, r5, r6, pc}
   13a6c:	vldr	d1, [pc, #76]	; 13ac0 <main@@Base+0xcef0>
   13a70:	b	13a14 <main@@Base+0xce44>
   13a74:	ldr	r3, [sp, #4]
   13a78:	adds	r0, r4, r3
   13a7c:	movmi	r0, #0
   13a80:	bmi	13a50 <main@@Base+0xce80>
   13a84:	b	13a48 <main@@Base+0xce78>
   13a88:	bl	5e7c <__stack_chk_fail@plt>
   13a8c:	nop	{0}
   13a90:	andeq	r0, r0, r0
   13a94:	svccc	0x00800000
   13a98:	andeq	r0, r0, r0
   13a9c:	eorsmi	r0, r4, r0
   13aa0:	bllt	fed68f00 <__bss_end__@@Base+0xfed2e034>
   13aa4:			; <UNDEFINED> instruction: 0x40026bb1
   13aa8:	andeq	r0, r0, r0
   13aac:	svccc	0x00e80000
   13ab0:	andeq	r0, r0, r0
   13ab4:	eormi	r0, r4, r0
   13ab8:	andeq	r0, r0, r0
   13abc:	rsbmi	r0, r0, r0
   13ac0:	andeq	r0, r0, r0
   13ac4:	addgt	r4, pc, r0
   13ac8:	andeq	r5, r2, ip, asr #1
   13acc:	andeq	r0, r0, r8, asr r5
   13ad0:	push	{r4, r5, r6, lr}
   13ad4:	ldr	r3, [pc, #188]	; 13b98 <main@@Base+0xcfc8>
   13ad8:	ldr	r1, [pc, #188]	; 13b9c <main@@Base+0xcfcc>
   13adc:	add	r3, pc, r3
   13ae0:	ldr	r6, [r3, r1]
   13ae4:	sub	sp, sp, #8
   13ae8:	ldr	r3, [r6]
   13aec:	mov	r2, #40	; 0x28
   13af0:	mov	r1, #0
   13af4:	mov	r4, r0
   13af8:	str	r3, [sp, #4]
   13afc:	bl	62e4 <memset@plt>
   13b00:	bl	6200 <SDL_CreateMutex@plt>
   13b04:	cmp	r0, #0
   13b08:	str	r0, [r4, #32]
   13b0c:	beq	13b48 <main@@Base+0xcf78>
   13b10:	bl	63c8 <SDL_CreateCond@plt>
   13b14:	cmp	r0, #0
   13b18:	movne	r3, #1
   13b1c:	mov	r5, r0
   13b20:	str	r0, [r4, #36]	; 0x24
   13b24:	strne	r3, [r4, #24]
   13b28:	movne	r0, #0
   13b2c:	beq	13b70 <main@@Base+0xcfa0>
   13b30:	ldr	r2, [sp, #4]
   13b34:	ldr	r3, [r6]
   13b38:	cmp	r2, r3
   13b3c:	bne	13b94 <main@@Base+0xcfc4>
   13b40:	add	sp, sp, #8
   13b44:	pop	{r4, r5, r6, pc}
   13b48:	mov	r5, r0
   13b4c:	bl	63a4 <SDL_GetError@plt>
   13b50:	ldr	r2, [pc, #72]	; 13ba0 <main@@Base+0xcfd0>
   13b54:	mov	r3, r0
   13b58:	add	r2, pc, r2
   13b5c:	mov	r0, r5
   13b60:	mov	r1, #8
   13b64:	bl	6188 <av_log@plt>
   13b68:	mvn	r0, #11
   13b6c:	b	13b30 <main@@Base+0xcf60>
   13b70:	bl	63a4 <SDL_GetError@plt>
   13b74:	ldr	r2, [pc, #40]	; 13ba4 <main@@Base+0xcfd4>
   13b78:	mov	r3, r0
   13b7c:	add	r2, pc, r2
   13b80:	mov	r0, r5
   13b84:	mov	r1, #8
   13b88:	bl	6188 <av_log@plt>
   13b8c:	mvn	r0, #11
   13b90:	b	13b30 <main@@Base+0xcf60>
   13b94:	bl	5e7c <__stack_chk_fail@plt>
   13b98:			; <UNDEFINED> instruction: 0x00024fb8
   13b9c:	andeq	r0, r0, r8, asr r5
   13ba0:	andeq	r1, r1, ip, ror #8
   13ba4:	andeq	r1, r1, r0, ror #8
   13ba8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bac:	vpush	{d8-d9}
   13bb0:	ldr	r3, [pc, #1016]	; 13fb0 <main@@Base+0xd3e0>
   13bb4:	ldr	r2, [pc, #1016]	; 13fb4 <main@@Base+0xd3e4>
   13bb8:	add	r3, pc, r3
   13bbc:	sub	sp, sp, #2128	; 0x850
   13bc0:	ldr	r3, [r3, r2]
   13bc4:	sub	sp, sp, #12
   13bc8:	str	r3, [sp, #68]	; 0x44
   13bcc:	ldr	r3, [r3]
   13bd0:	mov	fp, r0
   13bd4:	str	r3, [sp, #2132]	; 0x854
   13bd8:	bl	665c <av_frame_alloc@plt>
   13bdc:	cmp	r0, #0
   13be0:	str	r0, [sp, #72]	; 0x48
   13be4:	beq	14064 <main@@Base+0xd494>
   13be8:	add	r3, fp, #5312	; 0x14c0
   13bec:	add	r3, r3, #16
   13bf0:	str	r3, [sp, #56]	; 0x38
   13bf4:	mvn	r3, #0
   13bf8:	mov	r1, r0
   13bfc:	mov	r6, #0
   13c00:	vldr	d9, [pc, #928]	; 13fa8 <main@@Base+0xd3d8>
   13c04:	str	r3, [sp, #52]	; 0x34
   13c08:	mov	r2, #0
   13c0c:	ldr	r0, [sp, #56]	; 0x38
   13c10:	bl	13584 <main@@Base+0xc9b4>
   13c14:	cmp	r0, #0
   13c18:	blt	13fe0 <main@@Base+0xd410>
   13c1c:	beq	13fc8 <main@@Base+0xd3f8>
   13c20:	ldr	r3, [sp, #72]	; 0x48
   13c24:	ldrd	r0, [r3, #240]	; 0xf0
   13c28:	orrs	r2, r0, r1
   13c2c:	strd	r0, [sp, #40]	; 0x28
   13c30:	ldr	r8, [r3, #352]	; 0x160
   13c34:	beq	13c54 <main@@Base+0xd084>
   13c38:	bl	68e4 <av_get_channel_layout_nb_channels@plt>
   13c3c:	cmp	r8, r0
   13c40:	movne	r3, #0
   13c44:	movne	r2, #0
   13c48:	strdne	r2, [sp, #40]	; 0x28
   13c4c:	ldr	r3, [sp, #72]	; 0x48
   13c50:	ldr	r8, [r3, #352]	; 0x160
   13c54:	add	r4, fp, #4096	; 0x1000
   13c58:	ldr	r6, [r4, #1812]	; 0x714
   13c5c:	ldr	r5, [r3, #80]	; 0x50
   13c60:	cmp	r6, #1
   13c64:	cmpeq	r8, #1
   13c68:	asr	r7, r6, #31
   13c6c:	ldr	r0, [r4, #1824]	; 0x720
   13c70:	asr	r9, r8, #31
   13c74:	beq	14038 <main@@Base+0xd468>
   13c78:	cmp	r7, r9
   13c7c:	cmpeq	r6, r8
   13c80:	movne	r3, #1
   13c84:	moveq	r3, #0
   13c88:	cmp	r0, r5
   13c8c:	moveq	r0, r3
   13c90:	orrne	r0, r3, #1
   13c94:	add	r5, fp, #5888	; 0x1700
   13c98:	add	r5, r5, #32
   13c9c:	cmp	r0, #0
   13ca0:	ldrd	r2, [r5, #-8]
   13ca4:	bne	13cdc <main@@Base+0xd10c>
   13ca8:	ldrd	r0, [sp, #40]	; 0x28
   13cac:	cmp	r3, r1
   13cb0:	cmpeq	r2, r0
   13cb4:	bne	13cdc <main@@Base+0xd10c>
   13cb8:	ldr	r1, [sp, #72]	; 0x48
   13cbc:	ldr	ip, [r4, #1808]	; 0x710
   13cc0:	ldr	r0, [r1, #232]	; 0xe8
   13cc4:	cmp	ip, r0
   13cc8:	bne	13cdc <main@@Base+0xd10c>
   13ccc:	ldr	r0, [r4, #1312]	; 0x520
   13cd0:	ldr	ip, [sp, #52]	; 0x34
   13cd4:	cmp	r0, ip
   13cd8:	beq	13ddc <main@@Base+0xd20c>
   13cdc:	add	r6, sp, #84	; 0x54
   13ce0:	add	r7, sp, #1104	; 0x450
   13ce4:	strd	r2, [sp]
   13ce8:	mov	r0, r6
   13cec:	mvn	r2, #0
   13cf0:	mov	r1, #1024	; 0x400
   13cf4:	add	r7, r7, #4
   13cf8:	bl	6038 <av_get_channel_layout_string@plt>
   13cfc:	ldrd	r2, [sp, #40]	; 0x28
   13d00:	mov	r1, #1024	; 0x400
   13d04:	strd	r2, [sp]
   13d08:	mov	r0, r7
   13d0c:	mvn	r2, #0
   13d10:	bl	6038 <av_get_channel_layout_string@plt>
   13d14:	ldr	r0, [r4, #1824]	; 0x720
   13d18:	ldr	r8, [r4, #1808]	; 0x710
   13d1c:	ldr	r9, [r4, #1812]	; 0x714
   13d20:	bl	64d0 <av_get_sample_fmt_name@plt>
   13d24:	ldr	r2, [sp, #72]	; 0x48
   13d28:	mov	sl, r0
   13d2c:	ldr	r3, [r2, #232]	; 0xe8
   13d30:	ldr	r0, [r2, #80]	; 0x50
   13d34:	ldr	r2, [r2, #352]	; 0x160
   13d38:	str	r3, [sp, #64]	; 0x40
   13d3c:	str	r2, [sp, #60]	; 0x3c
   13d40:	bl	64d0 <av_get_sample_fmt_name@plt>
   13d44:	ldr	r2, [sp, #60]	; 0x3c
   13d48:	ldr	r1, [r4, #1312]	; 0x520
   13d4c:	ldr	r3, [sp, #64]	; 0x40
   13d50:	str	r0, [sp, #24]
   13d54:	str	r2, [sp, #20]
   13d58:	ldr	r0, [sp, #52]	; 0x34
   13d5c:	ldr	r2, [pc, #596]	; 13fb8 <main@@Base+0xd3e8>
   13d60:	str	r3, [sp, #16]
   13d64:	str	r6, [sp, #8]
   13d68:	mov	r3, r8
   13d6c:	str	r0, [sp, #12]
   13d70:	str	r1, [sp, #32]
   13d74:	add	r2, pc, r2
   13d78:	mov	r1, #48	; 0x30
   13d7c:	mov	r0, #0
   13d80:	str	r7, [sp, #28]
   13d84:	stm	sp, {r9, sl}
   13d88:	bl	6188 <av_log@plt>
   13d8c:	ldr	r2, [sp, #72]	; 0x48
   13d90:	ldr	r3, [pc, #548]	; 13fbc <main@@Base+0xd3ec>
   13d94:	ldr	r1, [r2, #352]	; 0x160
   13d98:	ldr	ip, [r2, #80]	; 0x50
   13d9c:	ldr	r0, [r2, #232]	; 0xe8
   13da0:	add	r3, pc, r3
   13da4:	str	r1, [r4, #1812]	; 0x714
   13da8:	str	ip, [r4, #1824]	; 0x720
   13dac:	ldr	r1, [r3, #224]	; 0xe0
   13db0:	ldrd	r2, [sp, #40]	; 0x28
   13db4:	strd	r2, [r5, #-8]
   13db8:	ldr	r3, [r4, #1312]	; 0x520
   13dbc:	str	r0, [r4, #1808]	; 0x710
   13dc0:	mov	r2, #1
   13dc4:	mov	r0, fp
   13dc8:	str	r3, [sp, #52]	; 0x34
   13dcc:	bl	116a0 <main@@Base+0xaad0>
   13dd0:	subs	r6, r0, #0
   13dd4:	blt	13fe0 <main@@Base+0xd410>
   13dd8:	ldr	r1, [sp, #72]	; 0x48
   13ddc:	add	r5, fp, #1048576	; 0x100000
   13de0:	add	r5, r5, #4096	; 0x1000
   13de4:	ldr	r0, [r5, #2112]	; 0x840
   13de8:	bl	68cc <av_buffersrc_add_frame@plt>
   13dec:	subs	r6, r0, #0
   13df0:	blt	13fe0 <main@@Base+0xd410>
   13df4:	add	r7, sp, #76	; 0x4c
   13df8:	mov	r2, #0
   13dfc:	ldr	r1, [sp, #72]	; 0x48
   13e00:	ldr	r0, [r5, #2116]	; 0x844
   13e04:	bl	6104 <av_buffersink_get_frame_flags@plt>
   13e08:	subs	r6, r0, #0
   13e0c:	blt	1401c <main@@Base+0xd44c>
   13e10:	ldr	r1, [r5, #2116]	; 0x844
   13e14:	mov	r0, r7
   13e18:	bl	6758 <av_buffersink_get_time_base@plt>
   13e1c:	ldr	r0, [r4, #1216]	; 0x4c0
   13e20:	vldr	s16, [sp, #76]	; 0x4c
   13e24:	ldr	sl, [sp, #80]	; 0x50
   13e28:	bl	6b3c <SDL_LockMutex@plt>
   13e2c:	ldr	r2, [r4, #1204]	; 0x4b4
   13e30:	ldr	r3, [r4, #1200]	; 0x4b0
   13e34:	cmp	r2, r3
   13e38:	ble	13e5c <main@@Base+0xd28c>
   13e3c:	b	13e6c <main@@Base+0xd29c>
   13e40:	ldr	r1, [r4, #1216]	; 0x4c0
   13e44:	ldr	r0, [r4, #1220]	; 0x4c4
   13e48:	bl	60bc <SDL_CondWait@plt>
   13e4c:	ldr	r2, [r4, #1200]	; 0x4b0
   13e50:	ldr	r3, [r4, #1204]	; 0x4b4
   13e54:	cmp	r2, r3
   13e58:	blt	13e6c <main@@Base+0xd29c>
   13e5c:	ldr	r3, [r4, #1224]	; 0x4c8
   13e60:	ldr	r3, [r3, #24]
   13e64:	cmp	r3, #0
   13e68:	beq	13e40 <main@@Base+0xd270>
   13e6c:	ldr	r0, [r4, #1216]	; 0x4c0
   13e70:	bl	6290 <SDL_UnlockMutex@plt>
   13e74:	ldr	r3, [r4, #1224]	; 0x4c8
   13e78:	ldr	r3, [r3, #24]
   13e7c:	cmp	r3, #0
   13e80:	bne	13fe0 <main@@Base+0xd410>
   13e84:	ldr	r8, [sp, #72]	; 0x48
   13e88:	ldr	r9, [r4, #1196]	; 0x4ac
   13e8c:	ldrd	r0, [r8, #104]	; 0x68
   13e90:	cmp	r1, #-2147483648	; 0x80000000
   13e94:	cmpeq	r0, #0
   13e98:	vmoveq.f64	d8, d9
   13e9c:	beq	13ebc <main@@Base+0xd2ec>
   13ea0:	vmov	s15, sl
   13ea4:	vcvt.f64.s32	d6, s16
   13ea8:	vcvt.f64.s32	d7, s15
   13eac:	vdiv.f64	d8, d6, d7
   13eb0:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   13eb4:	vmov	d7, r0, r1
   13eb8:	vmul.f64	d8, d8, d7
   13ebc:	vldr	s15, [r8, #76]	; 0x4c
   13ec0:	vcvt.f64.s32	d6, s15
   13ec4:	vldr	s15, [r8, #232]	; 0xe8
   13ec8:	vcvt.f64.s32	d7, s15
   13ecc:	add	r1, r9, r9, lsl #1
   13ed0:	add	r3, r9, r1, lsl #2
   13ed4:	lsl	r1, r3, #3
   13ed8:	add	r0, fp, #3632	; 0xe30
   13edc:	add	r0, r0, r1
   13ee0:	vstr	d8, [r0, #40]	; 0x28
   13ee4:	vdiv.f64	d5, d6, d7
   13ee8:	add	r3, r8, #336	; 0x150
   13eec:	ldrd	r2, [r3, #-8]
   13ef0:	strd	r2, [r0, #56]	; 0x38
   13ef4:	ldr	r2, [r4, #1312]	; 0x520
   13ef8:	add	r3, fp, r1
   13efc:	str	r2, [r3, #3664]	; 0xe50
   13f00:	vstr	d5, [r0, #48]	; 0x30
   13f04:	mov	r1, r8
   13f08:	ldr	r0, [r3, #3624]	; 0xe28
   13f0c:	bl	66e0 <av_frame_move_ref@plt>
   13f10:	ldr	r3, [r4, #1196]	; 0x4ac
   13f14:	ldr	r2, [r4, #1204]	; 0x4b4
   13f18:	add	r3, r3, #1
   13f1c:	cmp	r3, r2
   13f20:	str	r3, [r4, #1196]	; 0x4ac
   13f24:	beq	13f64 <main@@Base+0xd394>
   13f28:	ldr	r0, [r4, #1216]	; 0x4c0
   13f2c:	bl	6b3c <SDL_LockMutex@plt>
   13f30:	ldr	r3, [r4, #1200]	; 0x4b0
   13f34:	ldr	r0, [r4, #1220]	; 0x4c4
   13f38:	add	r3, r3, #1
   13f3c:	str	r3, [r4, #1200]	; 0x4b0
   13f40:	bl	5dec <SDL_CondSignal@plt>
   13f44:	ldr	r0, [r4, #1216]	; 0x4c0
   13f48:	bl	6290 <SDL_UnlockMutex@plt>
   13f4c:	ldr	r2, [r4, #1724]	; 0x6bc
   13f50:	ldr	r3, [r4, #1312]	; 0x520
   13f54:	cmp	r2, r3
   13f58:	beq	13df8 <main@@Base+0xd228>
   13f5c:	ldr	r1, [sp, #72]	; 0x48
   13f60:	b	13c08 <main@@Base+0xd038>
   13f64:	mov	r3, #0
   13f68:	ldr	r0, [r4, #1216]	; 0x4c0
   13f6c:	str	r3, [r4, #1196]	; 0x4ac
   13f70:	bl	6b3c <SDL_LockMutex@plt>
   13f74:	ldr	r3, [r4, #1200]	; 0x4b0
   13f78:	ldr	r0, [r4, #1220]	; 0x4c4
   13f7c:	add	r3, r3, #1
   13f80:	str	r3, [r4, #1200]	; 0x4b0
   13f84:	bl	5dec <SDL_CondSignal@plt>
   13f88:	ldr	r0, [r4, #1216]	; 0x4c0
   13f8c:	bl	6290 <SDL_UnlockMutex@plt>
   13f90:	ldr	r2, [r4, #1312]	; 0x520
   13f94:	ldr	r3, [r4, #1724]	; 0x6bc
   13f98:	cmp	r2, r3
   13f9c:	beq	13df8 <main@@Base+0xd228>
   13fa0:	b	13f5c <main@@Base+0xd38c>
   13fa4:	nop	{0}
   13fa8:	andeq	r0, r0, r0
   13fac:	svcvc	0x00f80000
   13fb0:	ldrdeq	r4, [r2], -ip
   13fb4:	andeq	r0, r0, r8, asr r5
   13fb8:	andeq	r1, r1, ip, ror r3
   13fbc:	andeq	r5, r2, r0, lsr #6
   13fc0:	andseq	r1, r0, r8, asr #16
   13fc4:	svcle	0x00b9b0bb
   13fc8:	cmn	r6, #11
   13fcc:	cmpne	r6, #0
   13fd0:	bge	13f5c <main@@Base+0xd38c>
   13fd4:	ldr	r3, [pc, #-24]	; 13fc4 <main@@Base+0xd3f4>
   13fd8:	cmp	r6, r3
   13fdc:	beq	13f5c <main@@Base+0xd38c>
   13fe0:	ldr	r0, [pc, #-40]	; 13fc0 <main@@Base+0xd3f0>
   13fe4:	add	r0, fp, r0
   13fe8:	bl	5ff0 <avfilter_graph_free@plt>
   13fec:	add	r0, sp, #72	; 0x48
   13ff0:	bl	5f84 <av_frame_free@plt>
   13ff4:	ldr	r3, [sp, #68]	; 0x44
   13ff8:	ldr	r2, [sp, #2132]	; 0x854
   13ffc:	ldr	r3, [r3]
   14000:	mov	r0, r6
   14004:	cmp	r2, r3
   14008:	bne	1406c <main@@Base+0xd49c>
   1400c:	add	sp, sp, #2128	; 0x850
   14010:	add	sp, sp, #12
   14014:	vpop	{d8-d9}
   14018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1401c:	ldr	r3, [pc, #-96]	; 13fc4 <main@@Base+0xd3f4>
   14020:	cmp	r6, r3
   14024:	bne	14054 <main@@Base+0xd484>
   14028:	ldr	r3, [r4, #1312]	; 0x520
   1402c:	ldr	r1, [sp, #72]	; 0x48
   14030:	str	r3, [r4, #1316]	; 0x524
   14034:	b	13c08 <main@@Base+0xd038>
   14038:	bl	6aa0 <av_get_packed_sample_fmt@plt>
   1403c:	mov	r6, r0
   14040:	mov	r0, r5
   14044:	bl	6aa0 <av_get_packed_sample_fmt@plt>
   14048:	subs	r0, r6, r0
   1404c:	movne	r0, #1
   14050:	b	13c94 <main@@Base+0xd0c4>
   14054:	cmn	r6, #11
   14058:	bne	13fe0 <main@@Base+0xd410>
   1405c:	ldr	r1, [sp, #72]	; 0x48
   14060:	b	13c08 <main@@Base+0xd038>
   14064:	mvn	r6, #11
   14068:	b	13ff4 <main@@Base+0xd424>
   1406c:	bl	5e7c <__stack_chk_fail@plt>
   14070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14074:	vpush	{d8-d9}
   14078:	mov	r4, r0
   1407c:	mov	r8, #0
   14080:	mov	r9, #-2147483648	; 0x80000000
   14084:	vldr	d9, [pc, #412]	; 14228 <main@@Base+0xd658>
   14088:	vldr	d8, [pc, #416]	; 14230 <main@@Base+0xd660>
   1408c:	ldr	r3, [pc, #420]	; 14238 <main@@Base+0xd668>
   14090:	ldr	r2, [pc, #420]	; 1423c <main@@Base+0xd66c>
   14094:	add	r3, pc, r3
   14098:	ldr	r3, [r3, r2]
   1409c:	sub	sp, sp, #20
   140a0:	str	r3, [sp, #4]
   140a4:	ldr	r3, [r3]
   140a8:	str	r3, [sp, #12]
   140ac:	ldr	r0, [r4, #3608]	; 0xe18
   140b0:	bl	6b3c <SDL_LockMutex@plt>
   140b4:	ldr	r2, [r4, #3596]	; 0xe0c
   140b8:	ldr	r3, [r4, #3592]	; 0xe08
   140bc:	cmp	r2, r3
   140c0:	ble	140e4 <main@@Base+0xd514>
   140c4:	b	140f4 <main@@Base+0xd524>
   140c8:	ldr	r1, [r4, #3608]	; 0xe18
   140cc:	ldr	r0, [r4, #3612]	; 0xe1c
   140d0:	bl	60bc <SDL_CondWait@plt>
   140d4:	ldr	r2, [r4, #3592]	; 0xe08
   140d8:	ldr	r3, [r4, #3596]	; 0xe0c
   140dc:	cmp	r2, r3
   140e0:	blt	140f4 <main@@Base+0xd524>
   140e4:	ldr	r3, [r4, #3616]	; 0xe20
   140e8:	ldr	r3, [r3, #24]
   140ec:	cmp	r3, #0
   140f0:	beq	140c8 <main@@Base+0xd4f8>
   140f4:	ldr	r0, [r4, #3608]	; 0xe18
   140f8:	bl	6290 <SDL_UnlockMutex@plt>
   140fc:	ldr	r3, [r4, #3616]	; 0xe20
   14100:	ldr	r1, [r3, #24]
   14104:	cmp	r1, #0
   14108:	bne	141f4 <main@@Base+0xd624>
   1410c:	ldr	r7, [r4, #3588]	; 0xe04
   14110:	add	fp, r4, #1920	; 0x780
   14114:	lsl	r6, r7, #1
   14118:	add	r5, r6, r7
   1411c:	add	r5, r7, r5, lsl #2
   14120:	lsl	r5, r5, #3
   14124:	add	sl, r5, #8
   14128:	add	sl, fp, sl
   1412c:	add	r0, r4, #5568	; 0x15c0
   14130:	mov	r2, sl
   14134:	add	r0, r0, #32
   14138:	bl	13584 <main@@Base+0xc9b4>
   1413c:	cmp	r0, #0
   14140:	blt	141f4 <main@@Base+0xd624>
   14144:	beq	140ac <main@@Base+0xd4dc>
   14148:	add	r5, fp, r5
   1414c:	ldrh	r2, [r5, #8]
   14150:	cmp	r2, #0
   14154:	bne	14218 <main@@Base+0xd648>
   14158:	ldrd	r0, [r5, #32]
   1415c:	cmp	r1, r9
   14160:	cmpeq	r0, r8
   14164:	vmoveq.f64	d7, d9
   14168:	beq	14178 <main@@Base+0xd5a8>
   1416c:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   14170:	vmov	d7, r0, r1
   14174:	vdiv.f64	d7, d7, d8
   14178:	add	r6, r6, r7
   1417c:	add	r7, r7, r6, lsl #2
   14180:	lsl	r7, r7, #3
   14184:	add	r3, fp, r7
   14188:	vstr	d7, [r3, #48]	; 0x30
   1418c:	mov	r1, #0
   14190:	add	r2, r4, #4096	; 0x1000
   14194:	ldr	r0, [r2, #1584]	; 0x630
   14198:	ldr	r3, [r2, #1580]	; 0x62c
   1419c:	add	r7, r4, r7
   141a0:	ldrd	r2, [r3, #92]	; 0x5c
   141a4:	str	r0, [r7, #1960]	; 0x7a8
   141a8:	str	r1, [r7, #2012]	; 0x7dc
   141ac:	str	r2, [r7, #1992]	; 0x7c8
   141b0:	str	r3, [r7, #1996]	; 0x7cc
   141b4:	ldr	r3, [r4, #3588]	; 0xe04
   141b8:	ldr	r2, [r4, #3596]	; 0xe0c
   141bc:	add	r3, r3, #1
   141c0:	cmp	r3, r2
   141c4:	moveq	r3, r1
   141c8:	ldr	r0, [r4, #3608]	; 0xe18
   141cc:	str	r3, [r4, #3588]	; 0xe04
   141d0:	bl	6b3c <SDL_LockMutex@plt>
   141d4:	ldr	r3, [r4, #3592]	; 0xe08
   141d8:	ldr	r0, [r4, #3612]	; 0xe1c
   141dc:	add	r3, r3, #1
   141e0:	str	r3, [r4, #3592]	; 0xe08
   141e4:	bl	5dec <SDL_CondSignal@plt>
   141e8:	ldr	r0, [r4, #3608]	; 0xe18
   141ec:	bl	6290 <SDL_UnlockMutex@plt>
   141f0:	b	140ac <main@@Base+0xd4dc>
   141f4:	ldr	r3, [sp, #4]
   141f8:	ldr	r2, [sp, #12]
   141fc:	ldr	r3, [r3]
   14200:	mov	r0, #0
   14204:	cmp	r2, r3
   14208:	bne	14224 <main@@Base+0xd654>
   1420c:	add	sp, sp, #20
   14210:	vpop	{d8-d9}
   14214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14218:	mov	r0, sl
   1421c:	bl	5d14 <avsubtitle_free@plt>
   14220:	b	140ac <main@@Base+0xd4dc>
   14224:	bl	5e7c <__stack_chk_fail@plt>
	...
   14234:	smlawbmi	lr, r0, r4, r8
   14238:	andeq	r4, r2, r0, lsl #20
   1423c:	andeq	r0, r0, r8, asr r5
   14240:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14244:	mov	r4, r0
   14248:	mov	sl, #0
   1424c:	ldr	ip, [pc, #300]	; 14380 <main@@Base+0xd7b0>
   14250:	ldr	lr, [pc, #300]	; 14384 <main@@Base+0xd7b4>
   14254:	add	ip, pc, ip
   14258:	ldr	r6, [ip, lr]
   1425c:	mov	r7, r1
   14260:	ldr	r1, [r6]
   14264:	sub	sp, sp, #8
   14268:	ldr	r0, [r0, #32]
   1426c:	mov	r8, r2
   14270:	mov	r9, r3
   14274:	str	r1, [sp, #4]
   14278:	bl	6b3c <SDL_LockMutex@plt>
   1427c:	str	sl, [r4, #24]
   14280:	mov	r0, #80	; 0x50
   14284:	bl	5e40 <av_malloc@plt>
   14288:	subs	r5, r0, #0
   1428c:	beq	14310 <main@@Base+0xd740>
   14290:	ldr	r1, [pc, #240]	; 14388 <main@@Base+0xd7b8>
   14294:	mov	r2, #72	; 0x48
   14298:	add	r1, pc, r1
   1429c:	add	r1, r1, #104	; 0x68
   142a0:	bl	66f8 <memcpy@plt>
   142a4:	ldr	r3, [r4, #28]
   142a8:	ldr	r2, [r4, #4]
   142ac:	add	r3, r3, #1
   142b0:	cmp	r2, sl
   142b4:	str	r3, [r4, #28]
   142b8:	str	r3, [r5, #76]	; 0x4c
   142bc:	ldr	r3, [r4, #12]
   142c0:	ldr	r1, [r5, #28]
   142c4:	str	sl, [r5, #72]	; 0x48
   142c8:	ldr	r0, [r5, #48]	; 0x30
   142cc:	strne	r5, [r2, #72]	; 0x48
   142d0:	ldr	r2, [r4, #16]
   142d4:	add	r3, r3, #80	; 0x50
   142d8:	add	r3, r3, r1
   142dc:	streq	r5, [r4]
   142e0:	ldr	r1, [r4, #20]
   142e4:	adds	r0, r2, r0
   142e8:	ldr	r2, [r5, #52]	; 0x34
   142ec:	str	r3, [r4, #12]
   142f0:	adc	r1, r1, r2
   142f4:	ldr	r2, [r4, #8]
   142f8:	strd	r0, [r4, #16]
   142fc:	add	r3, r2, #1
   14300:	str	r5, [r4, #4]
   14304:	str	r3, [r4, #8]
   14308:	ldr	r0, [r4, #36]	; 0x24
   1430c:	bl	5dec <SDL_CondSignal@plt>
   14310:	ldr	r0, [r4, #32]
   14314:	bl	6290 <SDL_UnlockMutex@plt>
   14318:	ldr	r1, [pc, #108]	; 1438c <main@@Base+0xd7bc>
   1431c:	mov	r2, r9
   14320:	mov	r0, r8
   14324:	add	r1, pc, r1
   14328:	bl	677c <SDL_CreateThread@plt>
   1432c:	cmp	r0, #0
   14330:	mov	r4, r0
   14334:	str	r0, [r7]
   14338:	movne	r0, #0
   1433c:	beq	14358 <main@@Base+0xd788>
   14340:	ldr	r2, [sp, #4]
   14344:	ldr	r3, [r6]
   14348:	cmp	r2, r3
   1434c:	bne	1437c <main@@Base+0xd7ac>
   14350:	add	sp, sp, #8
   14354:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14358:	bl	63a4 <SDL_GetError@plt>
   1435c:	ldr	r2, [pc, #44]	; 14390 <main@@Base+0xd7c0>
   14360:	mov	r3, r0
   14364:	add	r2, pc, r2
   14368:	mov	r0, r4
   1436c:	mov	r1, #16
   14370:	bl	6188 <av_log@plt>
   14374:	mvn	r0, #11
   14378:	b	14340 <main@@Base+0xd770>
   1437c:	bl	5e7c <__stack_chk_fail@plt>
   14380:	andeq	r4, r2, r0, asr #16
   14384:	andeq	r0, r0, r8, asr r5
   14388:	andeq	r4, r2, r8, lsr #28
   1438c:	andeq	r2, r1, r4, asr #6
   14390:	strdeq	r0, [r1], -ip
   14394:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14398:	mov	r7, r0
   1439c:	mov	r0, #0
   143a0:	ldr	r6, [pc, #2456]	; 14d40 <main@@Base+0xe170>
   143a4:	ldr	r3, [pc, #2456]	; 14d44 <main@@Base+0xe174>
   143a8:	add	r6, pc, r6
   143ac:	ldr	r9, [r6, r3]
   143b0:	ldr	fp, [pc, #2448]	; 14d48 <main@@Base+0xe178>
   143b4:	ldr	r3, [r9]
   143b8:	sub	sp, sp, #124	; 0x7c
   143bc:	add	fp, pc, fp
   143c0:	subs	r4, r1, #0
   143c4:	ldr	r5, [r7, #60]	; 0x3c
   143c8:	str	r3, [sp, #116]	; 0x74
   143cc:	str	r0, [sp, #64]	; 0x40
   143d0:	ldr	sl, [fp, #228]	; 0xe4
   143d4:	blt	14c44 <main@@Base+0xe074>
   143d8:	ldr	r3, [r5, #24]
   143dc:	cmp	r3, r4
   143e0:	bls	14c44 <main@@Base+0xe074>
   143e4:	bl	69d4 <avcodec_alloc_context3@plt>
   143e8:	cmp	r0, #0
   143ec:	str	r0, [sp, #60]	; 0x3c
   143f0:	beq	14c7c <main@@Base+0xe0ac>
   143f4:	ldr	r3, [r5, #28]
   143f8:	ldr	r3, [r3, r4, lsl #2]
   143fc:	ldr	r1, [r3, #176]	; 0xb0
   14400:	bl	6b30 <avcodec_parameters_to_context@plt>
   14404:	subs	r8, r0, #0
   14408:	blt	14630 <main@@Base+0xda60>
   1440c:	ldr	r3, [r5, #28]
   14410:	ldr	r2, [sp, #60]	; 0x3c
   14414:	ldr	r3, [r3, r4, lsl #2]
   14418:	add	ip, r2, #772	; 0x304
   1441c:	add	r3, r3, #16
   14420:	ldm	r3, {r0, r1}
   14424:	stm	ip, {r0, r1}
   14428:	ldr	r0, [r2, #16]
   1442c:	bl	6458 <avcodec_find_decoder@plt>
   14430:	mov	r8, r0
   14434:	ldr	r0, [sp, #60]	; 0x3c
   14438:	ldr	r3, [r0, #8]
   1443c:	cmp	r3, #1
   14440:	beq	1467c <main@@Base+0xdaac>
   14444:	cmp	r3, #3
   14448:	beq	14638 <main@@Base+0xda68>
   1444c:	cmp	r3, #0
   14450:	beq	14668 <main@@Base+0xda98>
   14454:	cmp	r8, #0
   14458:	beq	14c18 <main@@Base+0xe048>
   1445c:	ldr	r1, [r8, #12]
   14460:	str	r1, [r0, #16]
   14464:	ldrb	r3, [r8, #40]	; 0x28
   14468:	cmp	r3, sl
   1446c:	blt	146e4 <main@@Base+0xdb14>
   14470:	ldr	r3, [pc, #2260]	; 14d4c <main@@Base+0xe17c>
   14474:	str	sl, [r0, #680]	; 0x2a8
   14478:	add	r3, pc, r3
   1447c:	ldr	r3, [r3, #232]	; 0xe8
   14480:	ldr	fp, [pc, #2248]	; 14d50 <main@@Base+0xe180>
   14484:	cmp	r3, #0
   14488:	ldrne	r3, [r0, #64]	; 0x40
   1448c:	add	fp, pc, fp
   14490:	orrne	r3, r3, #1
   14494:	strne	r3, [r0, #64]	; 0x40
   14498:	ldr	r3, [pc, #2228]	; 14d54 <main@@Base+0xe184>
   1449c:	ldr	r0, [r5, #28]
   144a0:	ldr	r2, [r6, r3]
   144a4:	ldr	r3, [r0, r4, lsl #2]
   144a8:	ldr	r0, [r2]
   144ac:	mov	r2, r5
   144b0:	str	r8, [sp]
   144b4:	bl	f01c <main@@Base+0x844c>
   144b8:	mov	r3, #0
   144bc:	mov	r1, fp
   144c0:	mov	r2, r3
   144c4:	str	r0, [sp, #64]	; 0x40
   144c8:	bl	6878 <av_dict_get@plt>
   144cc:	subs	r3, r0, #0
   144d0:	add	r6, sp, #64	; 0x40
   144d4:	beq	14704 <main@@Base+0xdb34>
   144d8:	cmp	sl, #0
   144dc:	bne	14690 <main@@Base+0xdac0>
   144e0:	ldr	r0, [sp, #60]	; 0x3c
   144e4:	ldr	r3, [r0, #8]
   144e8:	cmp	r3, #1
   144ec:	bls	146c0 <main@@Base+0xdaf0>
   144f0:	mov	r1, r8
   144f4:	mov	r2, r6
   144f8:	bl	66bc <avcodec_open2@plt>
   144fc:	subs	r8, r0, #0
   14500:	blt	145ec <main@@Base+0xda1c>
   14504:	ldr	r1, [pc, #2124]	; 14d58 <main@@Base+0xe188>
   14508:	mov	r2, #0
   1450c:	mov	r3, #2
   14510:	add	r1, pc, r1
   14514:	ldr	r0, [sp, #64]	; 0x40
   14518:	bl	6878 <av_dict_get@plt>
   1451c:	subs	r2, r0, #0
   14520:	bne	145d0 <main@@Base+0xda00>
   14524:	ldr	sl, [sp, #60]	; 0x3c
   14528:	ldr	r0, [r5, #28]
   1452c:	ldr	r1, [sl, #8]
   14530:	ldr	ip, [r0, r4, lsl #2]
   14534:	add	fp, r7, #1048576	; 0x100000
   14538:	add	fp, fp, #4096	; 0x1000
   1453c:	cmp	r1, #1
   14540:	str	r2, [fp, #2072]	; 0x818
   14544:	str	r2, [ip, #52]	; 0x34
   14548:	beq	1471c <main@@Base+0xdb4c>
   1454c:	cmp	r1, #3
   14550:	beq	14ba8 <main@@Base+0xdfd8>
   14554:	cmp	r1, #0
   14558:	bne	145f4 <main@@Base+0xda24>
   1455c:	add	r0, r7, #5440	; 0x1540
   14560:	str	r4, [fp, #2008]	; 0x7d8
   14564:	str	ip, [fp, #2012]	; 0x7dc
   14568:	mov	r2, #136	; 0x88
   1456c:	add	r0, r0, #24
   14570:	ldr	r8, [fp, #2136]	; 0x858
   14574:	mov	r4, #0
   14578:	bl	62e4 <memset@plt>
   1457c:	mov	r5, #-2147483648	; 0x80000000
   14580:	mvn	ip, #0
   14584:	ldr	r0, [pc, #2000]	; 14d5c <main@@Base+0xe18c>
   14588:	add	r2, r7, #4096	; 0x1000
   1458c:	add	r3, r2, #1376	; 0x560
   14590:	add	r0, r7, r0
   14594:	str	r8, [r2, #1460]	; 0x5b4
   14598:	str	sl, [r2, #1444]	; 0x5a4
   1459c:	str	r0, [r2, #1440]	; 0x5a0
   145a0:	strd	r4, [r3, #88]	; 0x58
   145a4:	str	ip, [r2, #1448]	; 0x5a8
   145a8:	ldr	r2, [pc, #1968]	; 14d60 <main@@Base+0xe190>
   145ac:	add	r1, r7, #5568	; 0x15c0
   145b0:	mov	r3, r7
   145b4:	add	r1, r1, #24
   145b8:	add	r2, pc, r2
   145bc:	bl	14240 <main@@Base+0xd670>
   145c0:	subs	r8, r0, #0
   145c4:	movge	r3, #1
   145c8:	strge	r3, [r7, #24]
   145cc:	b	145f4 <main@@Base+0xda24>
   145d0:	ldr	r3, [r2]
   145d4:	ldr	r2, [pc, #1928]	; 14d64 <main@@Base+0xe194>
   145d8:	mov	r1, #16
   145dc:	add	r2, pc, r2
   145e0:	mov	r0, #0
   145e4:	bl	6188 <av_log@plt>
   145e8:	ldr	r8, [pc, #1912]	; 14d68 <main@@Base+0xe198>
   145ec:	add	r0, sp, #60	; 0x3c
   145f0:	bl	6998 <avcodec_free_context@plt>
   145f4:	mov	r0, r6
   145f8:	bl	5e28 <av_dict_free@plt>
   145fc:	ldr	r2, [sp, #116]	; 0x74
   14600:	ldr	r3, [r9]
   14604:	mov	r0, r8
   14608:	cmp	r2, r3
   1460c:	bne	14cc0 <main@@Base+0xe0f0>
   14610:	add	sp, sp, #124	; 0x7c
   14614:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14618:	ldr	r2, [pc, #1868]	; 14d6c <main@@Base+0xe19c>
   1461c:	mov	r3, fp
   14620:	add	r2, pc, r2
   14624:	mov	r1, #24
   14628:	bl	6188 <av_log@plt>
   1462c:	mvn	r8, #21
   14630:	add	r6, sp, #64	; 0x40
   14634:	b	145ec <main@@Base+0xda1c>
   14638:	add	r3, r7, #1048576	; 0x100000
   1463c:	add	r3, r3, #4096	; 0x1000
   14640:	ldr	fp, [fp, #184]	; 0xb8
   14644:	str	r4, [r3, #2132]	; 0x854
   14648:	cmp	fp, #0
   1464c:	beq	14454 <main@@Base+0xd884>
   14650:	mov	r0, fp
   14654:	bl	62c0 <avcodec_find_decoder_by_name@plt>
   14658:	subs	r8, r0, #0
   1465c:	beq	14618 <main@@Base+0xda48>
   14660:	ldr	r0, [sp, #60]	; 0x3c
   14664:	b	1445c <main@@Base+0xd88c>
   14668:	add	r3, r7, #1048576	; 0x100000
   1466c:	add	r3, r3, #4096	; 0x1000
   14670:	ldr	fp, [fp, #188]	; 0xbc
   14674:	str	r4, [r3, #2124]	; 0x84c
   14678:	b	14648 <main@@Base+0xda78>
   1467c:	add	r3, r7, #1048576	; 0x100000
   14680:	add	r3, r3, #4096	; 0x1000
   14684:	ldr	fp, [fp, #180]	; 0xb4
   14688:	str	r4, [r3, #2128]	; 0x850
   1468c:	b	14648 <main@@Base+0xda78>
   14690:	mov	r1, #0
   14694:	str	r1, [sp]
   14698:	ldr	r1, [pc, #1744]	; 14d70 <main@@Base+0xe1a0>
   1469c:	asr	r3, sl, #31
   146a0:	mov	r2, sl
   146a4:	add	r1, pc, r1
   146a8:	mov	r0, r6
   146ac:	bl	605c <av_dict_set_int@plt>
   146b0:	ldr	r0, [sp, #60]	; 0x3c
   146b4:	ldr	r3, [r0, #8]
   146b8:	cmp	r3, #1
   146bc:	bhi	144f0 <main@@Base+0xd920>
   146c0:	ldr	r2, [pc, #1708]	; 14d74 <main@@Base+0xe1a4>
   146c4:	ldr	r1, [pc, #1708]	; 14d78 <main@@Base+0xe1a8>
   146c8:	mov	r3, #0
   146cc:	add	r2, pc, r2
   146d0:	add	r1, pc, r1
   146d4:	mov	r0, r6
   146d8:	bl	6704 <av_dict_set@plt>
   146dc:	ldr	r0, [sp, #60]	; 0x3c
   146e0:	b	144f0 <main@@Base+0xd920>
   146e4:	ldr	r2, [pc, #1680]	; 14d7c <main@@Base+0xe1ac>
   146e8:	mov	r1, #24
   146ec:	add	r2, pc, r2
   146f0:	bl	6188 <av_log@plt>
   146f4:	ldr	r0, [sp, #60]	; 0x3c
   146f8:	ldrb	sl, [r8, #40]	; 0x28
   146fc:	ldr	r1, [r0, #16]
   14700:	b	14470 <main@@Base+0xd8a0>
   14704:	ldr	r2, [pc, #1652]	; 14d80 <main@@Base+0xe1b0>
   14708:	mov	r1, fp
   1470c:	mov	r0, r6
   14710:	add	r2, pc, r2
   14714:	bl	6704 <av_dict_set@plt>
   14718:	b	144d8 <main@@Base+0xd908>
   1471c:	ldr	r1, [sl, #344]	; 0x158
   14720:	ldr	r8, [sl, #348]	; 0x15c
   14724:	add	r2, sl, #384	; 0x180
   14728:	ldrd	r2, [r2, #-8]
   1472c:	add	r0, r7, #4096	; 0x1000
   14730:	orrs	ip, r2, r3
   14734:	strd	r2, [sp, #8]
   14738:	str	r0, [sp, #28]
   1473c:	str	r1, [r0, #1808]	; 0x710
   14740:	str	r8, [r0, #1812]	; 0x714
   14744:	beq	14768 <main@@Base+0xdb98>
   14748:	mov	r0, r2
   1474c:	mov	r1, r3
   14750:	bl	68e4 <av_get_channel_layout_nb_channels@plt>
   14754:	cmp	r8, r0
   14758:	movne	r2, #0
   1475c:	movne	r3, #0
   14760:	strdne	r2, [sp, #8]
   14764:	ldr	sl, [sp, #60]	; 0x3c
   14768:	ldr	r3, [pc, #1556]	; 14d84 <main@@Base+0xe1b4>
   1476c:	add	r2, r7, #5888	; 0x1700
   14770:	add	r3, pc, r3
   14774:	ldrd	r0, [sp, #8]
   14778:	ldr	ip, [sl, #352]	; 0x160
   1477c:	strd	r0, [r2, #24]
   14780:	ldr	r1, [r3, #224]	; 0xe0
   14784:	ldr	r3, [sp, #28]
   14788:	mov	r2, #0
   1478c:	str	ip, [r3, #1824]	; 0x720
   14790:	mov	r0, r7
   14794:	bl	116a0 <main@@Base+0xaad0>
   14798:	subs	r8, r0, #0
   1479c:	blt	145ec <main@@Base+0xda1c>
   147a0:	ldr	r8, [fp, #2116]	; 0x844
   147a4:	mov	r0, r8
   147a8:	bl	6710 <av_buffersink_get_sample_rate@plt>
   147ac:	mov	sl, r0
   147b0:	mov	r0, r8
   147b4:	bl	5ed0 <av_buffersink_get_channels@plt>
   147b8:	str	r0, [sp, #8]
   147bc:	mov	r0, r8
   147c0:	bl	6bb4 <av_buffersink_get_channel_layout@plt>
   147c4:	str	r0, [sp, #24]
   147c8:	ldr	r0, [pc, #1464]	; 14d88 <main@@Base+0xe1b8>
   147cc:	mov	r8, r1
   147d0:	add	r0, pc, r0
   147d4:	bl	614c <SDL_getenv@plt>
   147d8:	cmp	r0, #0
   147dc:	beq	14c4c <main@@Base+0xe07c>
   147e0:	mov	r2, #10
   147e4:	mov	r1, #0
   147e8:	bl	6aac <strtol@plt>
   147ec:	str	r0, [sp, #8]
   147f0:	bl	6b24 <av_get_default_channel_layout@plt>
   147f4:	strd	r0, [sp, #16]
   147f8:	ldrd	r2, [sp, #16]
   147fc:	orrs	r3, r2, r3
   14800:	beq	14818 <main@@Base+0xdc48>
   14804:	ldrd	r0, [sp, #16]
   14808:	bl	68e4 <av_get_channel_layout_nb_channels@plt>
   1480c:	ldr	r3, [sp, #8]
   14810:	cmp	r0, r3
   14814:	beq	1482c <main@@Base+0xdc5c>
   14818:	ldr	r0, [sp, #8]
   1481c:	bl	6b24 <av_get_default_channel_layout@plt>
   14820:	bic	r3, r0, #1610612736	; 0x60000000
   14824:	str	r3, [sp, #16]
   14828:	str	r1, [sp, #20]
   1482c:	ldrd	r0, [sp, #16]
   14830:	bl	68e4 <av_get_channel_layout_nb_channels@plt>
   14834:	uxtb	r3, r0
   14838:	cmp	r3, #0
   1483c:	cmpne	sl, #0
   14840:	str	r3, [sp, #32]
   14844:	strb	r3, [sp, #74]	; 0x4a
   14848:	str	sl, [sp, #68]	; 0x44
   1484c:	ble	14cc4 <main@@Base+0xe0f4>
   14850:	ldr	r2, [pc, #1332]	; 14d8c <main@@Base+0xe1bc>
   14854:	cmp	sl, r2
   14858:	bgt	14ca8 <main@@Base+0xe0d8>
   1485c:	ldr	r2, [pc, #1324]	; 14d90 <main@@Base+0xe1c0>
   14860:	cmp	sl, r2
   14864:	bgt	14cb0 <main@@Base+0xe0e0>
   14868:	ldr	r2, [pc, #1316]	; 14d94 <main@@Base+0xe1c4>
   1486c:	cmp	sl, r2
   14870:	bgt	14cb8 <main@@Base+0xe0e8>
   14874:	ldr	r8, [pc, #1308]	; 14d98 <main@@Base+0xe1c8>
   14878:	cmp	sl, r8
   1487c:	movle	r8, #0
   14880:	movgt	r8, #1
   14884:	mov	ip, #0
   14888:	ldr	r2, [pc, #1292]	; 14d9c <main@@Base+0xe1cc>
   1488c:	asr	r0, sl, #31
   14890:	smull	r3, r2, r2, sl
   14894:	ldr	r1, [pc, #1284]	; 14da0 <main@@Base+0xe1d0>
   14898:	add	r3, r2, sl
   1489c:	rsb	r0, r0, r3, asr #4
   148a0:	strb	ip, [sp, #75]	; 0x4b
   148a4:	strh	r1, [sp, #72]	; 0x48
   148a8:	bl	6b0c <av_log2@plt>
   148ac:	mov	r3, #2
   148b0:	lsl	r0, r3, r0
   148b4:	cmp	r0, #512	; 0x200
   148b8:	movlt	r0, #512	; 0x200
   148bc:	ldr	r2, [pc, #1248]	; 14da4 <main@@Base+0xe1d4>
   148c0:	ldr	r3, [pc, #1248]	; 14da8 <main@@Base+0xe1d8>
   148c4:	add	r2, pc, r2
   148c8:	str	r2, [sp, #8]
   148cc:	ldr	r2, [pc, #1240]	; 14dac <main@@Base+0xe1dc>
   148d0:	add	r3, pc, r3
   148d4:	add	r2, pc, r2
   148d8:	str	r2, [sp, #24]
   148dc:	ldr	r2, [pc, #1228]	; 14db0 <main@@Base+0xe1e0>
   148e0:	str	r3, [sp, #84]	; 0x54
   148e4:	add	r2, pc, r2
   148e8:	add	r3, sp, #92	; 0x5c
   148ec:	str	r7, [sp, #88]	; 0x58
   148f0:	str	r5, [sp, #40]	; 0x28
   148f4:	str	r7, [sp, #44]	; 0x2c
   148f8:	ldr	r5, [sp, #32]
   148fc:	str	r4, [sp, #48]	; 0x30
   14900:	str	r6, [sp, #32]
   14904:	str	fp, [sp, #52]	; 0x34
   14908:	strh	r0, [sp, #76]	; 0x4c
   1490c:	add	sl, sp, #68	; 0x44
   14910:	ldrd	r6, [sp, #16]
   14914:	str	r9, [sp, #36]	; 0x24
   14918:	mov	fp, r3
   1491c:	mov	r4, r2
   14920:	b	14998 <main@@Base+0xddc8>
   14924:	ldrb	r6, [sp, #74]	; 0x4a
   14928:	ldr	r7, [sp, #68]	; 0x44
   1492c:	bl	63a4 <SDL_GetError@plt>
   14930:	mov	r3, r6
   14934:	str	r0, [sp, #4]
   14938:	str	r7, [sp]
   1493c:	mov	r0, r9
   14940:	ldr	r2, [sp, #24]
   14944:	mov	r1, #24
   14948:	bl	6188 <av_log@plt>
   1494c:	ldrb	r3, [sp, #74]	; 0x4a
   14950:	cmp	r3, #7
   14954:	movcs	r3, #7
   14958:	add	r3, r4, r3, lsl #2
   1495c:	ldrb	r0, [r3, #168]	; 0xa8
   14960:	cmp	r0, #0
   14964:	strb	r0, [sp, #74]	; 0x4a
   14968:	bne	1498c <main@@Base+0xddbc>
   1496c:	add	r3, r4, r8, lsl #2
   14970:	ldr	r0, [r3, #200]	; 0xc8
   14974:	strb	r5, [sp, #74]	; 0x4a
   14978:	cmp	r0, #0
   1497c:	str	r0, [sp, #68]	; 0x44
   14980:	sub	r8, r8, #1
   14984:	beq	14c5c <main@@Base+0xe08c>
   14988:	mov	r0, r5
   1498c:	bl	6b24 <av_get_default_channel_layout@plt>
   14990:	mov	r6, r0
   14994:	mov	r7, r1
   14998:	mov	r3, #5
   1499c:	mov	r1, #0
   149a0:	str	r3, [sp]
   149a4:	mov	r0, r1
   149a8:	mov	r3, fp
   149ac:	mov	r2, sl
   149b0:	bl	692c <SDL_OpenAudioDevice@plt>
   149b4:	ldr	r3, [sp, #8]
   149b8:	cmp	r0, #0
   149bc:	mov	r9, r0
   149c0:	str	r0, [r3, #236]	; 0xec
   149c4:	beq	14924 <main@@Base+0xdd54>
   149c8:	ldrh	r3, [sp, #96]	; 0x60
   149cc:	ldr	r2, [pc, #992]	; 14db4 <main@@Base+0xe1e4>
   149d0:	strd	r6, [sp, #16]
   149d4:	cmp	r3, r2
   149d8:	ldr	r5, [sp, #40]	; 0x28
   149dc:	ldr	r7, [sp, #44]	; 0x2c
   149e0:	ldr	r4, [sp, #48]	; 0x30
   149e4:	ldr	r6, [sp, #32]
   149e8:	ldr	r9, [sp, #36]	; 0x24
   149ec:	ldr	fp, [sp, #52]	; 0x34
   149f0:	bne	14cfc <main@@Base+0xe12c>
   149f4:	ldrb	r0, [sp, #98]	; 0x62
   149f8:	ldrb	r3, [sp, #74]	; 0x4a
   149fc:	cmp	r3, r0
   14a00:	beq	14a20 <main@@Base+0xde50>
   14a04:	bl	6b24 <av_get_default_channel_layout@plt>
   14a08:	mov	r2, r0
   14a0c:	mov	r3, r1
   14a10:	strd	r2, [sp, #16]
   14a14:	orrs	r3, r2, r3
   14a18:	beq	14d18 <main@@Base+0xe148>
   14a1c:	ldrb	r0, [sp, #98]	; 0x62
   14a20:	ldr	ip, [sp, #28]
   14a24:	mov	r8, #1
   14a28:	mov	sl, ip
   14a2c:	ldr	r3, [sp, #92]	; 0x5c
   14a30:	str	r8, [ip, #1856]	; 0x740
   14a34:	str	r3, [sl, #1840]!	; 0x730
   14a38:	mov	r1, r0
   14a3c:	ldrd	r2, [sp, #16]
   14a40:	str	r8, [sp]
   14a44:	strd	r2, [sl, #8]
   14a48:	str	r0, [ip, #1844]	; 0x734
   14a4c:	mov	r3, r8
   14a50:	mov	r2, r8
   14a54:	mov	r0, #0
   14a58:	bl	6080 <av_samples_get_buffer_size@plt>
   14a5c:	str	r8, [sp]
   14a60:	ldr	r8, [sp, #28]
   14a64:	str	r0, [r8, #1860]	; 0x744
   14a68:	ldr	r3, [r8, #1856]	; 0x740
   14a6c:	ldr	r2, [r8, #1840]	; 0x730
   14a70:	ldr	r1, [r8, #1844]	; 0x734
   14a74:	mov	r0, #0
   14a78:	bl	6080 <av_samples_get_buffer_size@plt>
   14a7c:	cmp	r0, #0
   14a80:	str	r0, [r8, #1864]	; 0x748
   14a84:	ble	14ce0 <main@@Base+0xe110>
   14a88:	ldr	r3, [r8, #1860]	; 0x744
   14a8c:	cmp	r3, #0
   14a90:	ble	14ce0 <main@@Base+0xe110>
   14a94:	ldr	r8, [sp, #104]	; 0x68
   14a98:	cmp	r8, #0
   14a9c:	blt	145ec <main@@Base+0xda1c>
   14aa0:	vmov	s15, r8
   14aa4:	vcvt.f64.s32	d5, s15
   14aa8:	vmov	s15, r0
   14aac:	ldm	sl!, {r0, r1, r2, r3}
   14ab0:	vcvt.f64.s32	d7, s15
   14ab4:	ldr	lr, [sp, #28]
   14ab8:	mov	ip, #0
   14abc:	str	r8, [lr, #1736]	; 0x6c8
   14ac0:	vdiv.f64	d6, d5, d7
   14ac4:	mov	r8, lr
   14ac8:	vldr	d7, [pc, #616]	; 14d38 <main@@Base+0xe168>
   14acc:	add	lr, lr, #1776	; 0x6f0
   14ad0:	stmia	lr!, {r0, r1, r2, r3}
   14ad4:	ldm	sl, {r0, r1, r2, r3}
   14ad8:	ldr	r5, [r5, #28]
   14adc:	stm	lr, {r0, r1, r2, r3}
   14ae0:	ldr	r5, [r5, r4, lsl #2]
   14ae4:	add	r3, r7, #5760	; 0x1680
   14ae8:	add	r0, r7, #5312	; 0x14c0
   14aec:	str	ip, [r8, #1748]	; 0x6d4
   14af0:	str	ip, [r8, #1756]	; 0x6dc
   14af4:	mov	r1, ip
   14af8:	vstr	d7, [r3, #8]
   14afc:	mov	r2, #136	; 0x88
   14b00:	str	ip, [r8, #1688]	; 0x698
   14b04:	add	r0, r0, #16
   14b08:	vstr	d6, [r3, #16]
   14b0c:	str	r4, [r8, #1640]	; 0x668
   14b10:	str	r5, [r8, #1692]	; 0x69c
   14b14:	add	r4, r3, #32
   14b18:	ldr	r8, [fp, #2136]	; 0x858
   14b1c:	ldr	sl, [sp, #60]	; 0x3c
   14b20:	bl	62e4 <memset@plt>
   14b24:	mov	r2, #0
   14b28:	mov	r3, #-2147483648	; 0x80000000
   14b2c:	mvn	ip, #0
   14b30:	ldr	r0, [r7, #60]	; 0x3c
   14b34:	ldr	fp, [sp, #28]
   14b38:	ldr	r0, [r0, #4]
   14b3c:	add	r1, fp, #1232	; 0x4d0
   14b40:	ldr	lr, [r0, #8]
   14b44:	str	r4, [fp, #1304]	; 0x518
   14b48:	tst	lr, #57344	; 0xe000
   14b4c:	str	sl, [fp, #1308]	; 0x51c
   14b50:	str	r8, [fp, #1324]	; 0x52c
   14b54:	strd	r2, [r1, #96]	; 0x60
   14b58:	str	ip, [fp, #1312]	; 0x520
   14b5c:	beq	14b6c <main@@Base+0xdf9c>
   14b60:	ldr	r3, [r0, #56]	; 0x38
   14b64:	cmp	r3, #0
   14b68:	beq	14c84 <main@@Base+0xe0b4>
   14b6c:	ldr	r2, [pc, #580]	; 14db8 <main@@Base+0xe1e8>
   14b70:	add	r1, r7, #5440	; 0x1540
   14b74:	mov	r0, r4
   14b78:	add	r1, r1, #16
   14b7c:	mov	r3, r7
   14b80:	add	r2, pc, r2
   14b84:	bl	14240 <main@@Base+0xd670>
   14b88:	subs	r8, r0, #0
   14b8c:	blt	145f4 <main@@Base+0xda24>
   14b90:	ldr	r3, [pc, #548]	; 14dbc <main@@Base+0xe1ec>
   14b94:	mov	r1, #0
   14b98:	add	r3, pc, r3
   14b9c:	ldr	r0, [r3, #236]	; 0xec
   14ba0:	bl	6584 <SDL_PauseAudioDevice@plt>
   14ba4:	b	145f4 <main@@Base+0xda24>
   14ba8:	add	r0, r7, #5568	; 0x15c0
   14bac:	mov	r1, r2
   14bb0:	str	r4, [fp, #1932]	; 0x78c
   14bb4:	str	ip, [fp, #1936]	; 0x790
   14bb8:	mov	r2, #136	; 0x88
   14bbc:	add	r0, r0, #32
   14bc0:	ldr	r8, [fp, #2136]	; 0x858
   14bc4:	mov	r4, #0
   14bc8:	bl	62e4 <memset@plt>
   14bcc:	mov	r5, #-2147483648	; 0x80000000
   14bd0:	mvn	ip, #0
   14bd4:	ldr	r0, [pc, #484]	; 14dc0 <main@@Base+0xe1f0>
   14bd8:	add	r2, r7, #4096	; 0x1000
   14bdc:	add	r3, r2, #1504	; 0x5e0
   14be0:	add	r0, r7, r0
   14be4:	str	r8, [r2, #1596]	; 0x63c
   14be8:	str	sl, [r2, #1580]	; 0x62c
   14bec:	str	r0, [r2, #1576]	; 0x628
   14bf0:	strd	r4, [r3, #96]	; 0x60
   14bf4:	str	ip, [r2, #1584]	; 0x630
   14bf8:	ldr	r2, [pc, #452]	; 14dc4 <main@@Base+0xe1f4>
   14bfc:	add	r1, r7, #5696	; 0x1640
   14c00:	add	r1, r1, #32
   14c04:	mov	r3, r7
   14c08:	add	r2, pc, r2
   14c0c:	bl	14240 <main@@Base+0xd670>
   14c10:	mov	r8, r0
   14c14:	b	145f4 <main@@Base+0xda24>
   14c18:	ldr	r0, [r0, #16]
   14c1c:	bl	5f60 <avcodec_get_name@plt>
   14c20:	ldr	r2, [pc, #416]	; 14dc8 <main@@Base+0xe1f8>
   14c24:	mov	r3, r0
   14c28:	add	r2, pc, r2
   14c2c:	mov	r1, #24
   14c30:	mov	r0, #0
   14c34:	bl	6188 <av_log@plt>
   14c38:	mvn	r8, #21
   14c3c:	add	r6, sp, #64	; 0x40
   14c40:	b	145ec <main@@Base+0xda1c>
   14c44:	mvn	r8, #0
   14c48:	b	145fc <main@@Base+0xda2c>
   14c4c:	ldr	r3, [sp, #24]
   14c50:	str	r8, [sp, #20]
   14c54:	str	r3, [sp, #16]
   14c58:	b	147f8 <main@@Base+0xdc28>
   14c5c:	ldr	r2, [pc, #360]	; 14dcc <main@@Base+0xe1fc>
   14c60:	mov	r1, #16
   14c64:	add	r2, pc, r2
   14c68:	ldr	r6, [sp, #32]
   14c6c:	ldr	r9, [sp, #36]	; 0x24
   14c70:	mvn	r8, #0
   14c74:	bl	6188 <av_log@plt>
   14c78:	b	145ec <main@@Base+0xda1c>
   14c7c:	mvn	r8, #11
   14c80:	b	145fc <main@@Base+0xda2c>
   14c84:	add	r3, fp, #1328	; 0x530
   14c88:	ldrd	r0, [r5, #24]
   14c8c:	add	r3, r3, #8
   14c90:	add	r2, r7, #5376	; 0x1500
   14c94:	add	r5, r5, #16
   14c98:	strd	r0, [r2, #48]	; 0x30
   14c9c:	ldm	r5, {r0, r1}
   14ca0:	stm	r3, {r0, r1}
   14ca4:	b	14b6c <main@@Base+0xdf9c>
   14ca8:	mov	r8, #4
   14cac:	b	14884 <main@@Base+0xdcb4>
   14cb0:	mov	r8, #3
   14cb4:	b	14884 <main@@Base+0xdcb4>
   14cb8:	mov	r8, #2
   14cbc:	b	14884 <main@@Base+0xdcb4>
   14cc0:	bl	5e7c <__stack_chk_fail@plt>
   14cc4:	ldr	r2, [pc, #260]	; 14dd0 <main@@Base+0xe200>
   14cc8:	mov	r1, #16
   14ccc:	add	r2, pc, r2
   14cd0:	mov	r0, #0
   14cd4:	bl	6188 <av_log@plt>
   14cd8:	mvn	r8, #0
   14cdc:	b	145ec <main@@Base+0xda1c>
   14ce0:	ldr	r2, [pc, #236]	; 14dd4 <main@@Base+0xe204>
   14ce4:	mov	r1, #16
   14ce8:	add	r2, pc, r2
   14cec:	mov	r0, #0
   14cf0:	bl	6188 <av_log@plt>
   14cf4:	mvn	r8, #0
   14cf8:	b	145ec <main@@Base+0xda1c>
   14cfc:	ldr	r2, [pc, #212]	; 14dd8 <main@@Base+0xe208>
   14d00:	mov	r1, #16
   14d04:	add	r2, pc, r2
   14d08:	mov	r0, #0
   14d0c:	bl	6188 <av_log@plt>
   14d10:	mvn	r8, #0
   14d14:	b	145ec <main@@Base+0xda1c>
   14d18:	ldr	r2, [pc, #188]	; 14ddc <main@@Base+0xe20c>
   14d1c:	ldrb	r3, [sp, #98]	; 0x62
   14d20:	add	r2, pc, r2
   14d24:	mov	r1, #16
   14d28:	mov	r0, #0
   14d2c:	bl	6188 <av_log@plt>
   14d30:	mvn	r8, #0
   14d34:	b	145ec <main@@Base+0xda1c>
   14d38:	bleq	ff385e10 <__bss_end__@@Base+0xff34af44>
   14d3c:	svccc	0x00e96b23
   14d40:	andeq	r4, r2, ip, ror #13
   14d44:	andeq	r0, r0, r8, asr r5
   14d48:	andeq	r4, r2, r4, lsl #26
   14d4c:	andeq	r4, r2, r8, asr #24
   14d50:	andeq	r0, r1, ip, ror sp
   14d54:	andeq	r0, r0, ip, asr r5
   14d58:	andeq	r0, r1, r4, asr pc
   14d5c:	andseq	r1, r0, r0, ror #15
   14d60:	ldrdeq	r0, [r0], -r8
   14d64:	andeq	r0, r1, r0, asr ip
   14d68:	blge	fec00d90 <__bss_end__@@Base+0xfebc5ec4>
   14d6c:	andeq	r0, r1, r8, asr fp
   14d70:	andeq	r0, r1, ip, ror #22
   14d74:	andeq	r0, r1, r4, lsr r0
   14d78:	andeq	r0, r1, r8, asr #22
   14d7c:	ldrdeq	r0, [r1], -ip
   14d80:	andeq	r1, r1, r4, lsl #21
   14d84:	andeq	r4, r2, r0, asr r9
   14d88:	andeq	r0, r1, r4, ror sl
   14d8c:	andeq	lr, r2, r0, lsl #28
   14d90:	andeq	r7, r1, r0, lsl #14
   14d94:	andeq	fp, r0, r0, lsl #23
   14d98:	andeq	sl, r0, r4, asr #24
   14d9c:	stmhi	r8, {r0, r3, r7, fp, pc}
   14da0:			; <UNDEFINED> instruction: 0xffff8010
   14da4:	strdeq	r4, [r2], -ip
   14da8:	andeq	r1, r0, r8, lsr #2
   14dac:	andeq	r0, r1, ip, lsr #19
   14db0:	andeq	r0, r1, r0, asr r2
   14db4:	andeq	r8, r0, r0, lsl r0
   14db8:			; <UNDEFINED> instruction: 0xfffff020
   14dbc:	andeq	r4, r2, r8, lsr #10
   14dc0:	mulseq	r0, r8, r7
   14dc4:			; <UNDEFINED> instruction: 0xfffff460
   14dc8:	andeq	r0, r1, r8, ror r5
   14dcc:	andeq	r0, r1, r4, asr #12
   14dd0:	andeq	r0, r1, ip, lsl #11
   14dd4:	andeq	r0, r1, r0, asr r6
   14dd8:	ldrdeq	r0, [r1], -r4
   14ddc:	andeq	r0, r1, r8, ror #11
   14de0:	push	{r4, r5, r6, r7, r8, lr}
   14de4:	sub	sp, sp, #80	; 0x50
   14de8:	mov	r8, sp
   14dec:	ldr	r3, [pc, #260]	; 14ef8 <main@@Base+0xe328>
   14df0:	ldr	r2, [pc, #260]	; 14efc <main@@Base+0xe32c>
   14df4:	add	r3, pc, r3
   14df8:	ldr	r7, [r3, r2]
   14dfc:	mov	r4, r0
   14e00:	ldr	r3, [r7]
   14e04:	mov	r0, r8
   14e08:	mov	r5, r1
   14e0c:	str	r3, [sp, #76]	; 0x4c
   14e10:	bl	686c <av_init_packet@plt>
   14e14:	mov	r3, #0
   14e18:	ldr	r0, [r4, #32]
   14e1c:	str	r5, [sp, #32]
   14e20:	str	r3, [sp, #24]
   14e24:	str	r3, [sp, #28]
   14e28:	bl	6b3c <SDL_LockMutex@plt>
   14e2c:	ldr	r6, [r4, #24]
   14e30:	cmp	r6, #0
   14e34:	bne	14edc <main@@Base+0xe30c>
   14e38:	mov	r0, #80	; 0x50
   14e3c:	bl	5e40 <av_malloc@plt>
   14e40:	subs	r5, r0, #0
   14e44:	beq	14edc <main@@Base+0xe30c>
   14e48:	mov	r1, r8
   14e4c:	mov	r2, #72	; 0x48
   14e50:	bl	66f8 <memcpy@plt>
   14e54:	ldr	r3, [r4, #4]
   14e58:	ldr	r2, [r4, #28]
   14e5c:	cmp	r3, #0
   14e60:	ldr	r0, [r5, #28]
   14e64:	ldr	r1, [r5, #48]	; 0x30
   14e68:	str	r2, [r5, #76]	; 0x4c
   14e6c:	str	r6, [r5, #72]	; 0x48
   14e70:	strne	r5, [r3, #72]	; 0x48
   14e74:	ldrd	r2, [r4, #12]
   14e78:	add	r2, r2, #80	; 0x50
   14e7c:	add	r2, r2, r0
   14e80:	streq	r5, [r4]
   14e84:	ldr	r0, [r4, #20]
   14e88:	adds	r3, r3, r1
   14e8c:	ldr	r1, [r5, #52]	; 0x34
   14e90:	str	r2, [r4, #12]
   14e94:	adc	r0, r0, r1
   14e98:	ldr	r1, [r4, #8]
   14e9c:	str	r0, [r4, #20]
   14ea0:	add	r2, r1, #1
   14ea4:	str	r5, [r4, #4]
   14ea8:	str	r3, [r4, #16]
   14eac:	str	r2, [r4, #8]
   14eb0:	ldr	r0, [r4, #36]	; 0x24
   14eb4:	bl	5dec <SDL_CondSignal@plt>
   14eb8:	ldr	r0, [r4, #32]
   14ebc:	bl	6290 <SDL_UnlockMutex@plt>
   14ec0:	ldr	r2, [sp, #76]	; 0x4c
   14ec4:	ldr	r3, [r7]
   14ec8:	mov	r0, r6
   14ecc:	cmp	r2, r3
   14ed0:	bne	14ef4 <main@@Base+0xe324>
   14ed4:	add	sp, sp, #80	; 0x50
   14ed8:	pop	{r4, r5, r6, r7, r8, pc}
   14edc:	ldr	r0, [r4, #32]
   14ee0:	bl	6290 <SDL_UnlockMutex@plt>
   14ee4:	mov	r0, r8
   14ee8:	bl	6a28 <av_packet_unref@plt>
   14eec:	mvn	r6, #0
   14ef0:	b	14ec0 <main@@Base+0xe2f0>
   14ef4:	bl	5e7c <__stack_chk_fail@plt>
   14ef8:	andeq	r3, r2, r0, lsr #25
   14efc:	andeq	r0, r0, r8, asr r5
   14f00:	push	{r4, r5, lr}
   14f04:	ldr	r3, [pc, #388]	; 15090 <main@@Base+0xe4c0>
   14f08:	ldr	r2, [pc, #388]	; 15094 <main@@Base+0xe4c4>
   14f0c:	add	r3, pc, r3
   14f10:	ldr	r5, [r3, r2]
   14f14:	add	r1, r0, #4096	; 0x1000
   14f18:	ldr	r2, [r1, #1644]	; 0x66c
   14f1c:	mov	r4, r0
   14f20:	ldr	r0, [r5]
   14f24:	sub	sp, sp, #12
   14f28:	cmp	r2, #1
   14f2c:	str	r0, [sp, #4]
   14f30:	beq	14fa0 <main@@Base+0xe3d0>
   14f34:	cmp	r2, #0
   14f38:	bne	14f78 <main@@Base+0xe3a8>
   14f3c:	ldr	r3, [r1, #1692]	; 0x69c
   14f40:	cmp	r3, #0
   14f44:	beq	14f78 <main@@Base+0xe3a8>
   14f48:	ldr	r2, [r4, #112]	; 0x70
   14f4c:	ldr	r3, [r4, #104]	; 0x68
   14f50:	ldr	r2, [r2]
   14f54:	cmp	r2, r3
   14f58:	beq	14fdc <main@@Base+0xe40c>
   14f5c:	vldr	d0, [pc, #276]	; 15078 <main@@Base+0xe4a8>
   14f60:	ldr	r2, [sp, #4]
   14f64:	ldr	r3, [r5]
   14f68:	cmp	r2, r3
   14f6c:	bne	15070 <main@@Base+0xe4a0>
   14f70:	add	sp, sp, #12
   14f74:	pop	{r4, r5, pc}
   14f78:	ldr	r2, [r4, #208]	; 0xd0
   14f7c:	ldr	r3, [r4, #200]	; 0xc8
   14f80:	ldr	r2, [r2]
   14f84:	cmp	r2, r3
   14f88:	bne	14f5c <main@@Base+0xe38c>
   14f8c:	ldr	r3, [r4, #204]	; 0xcc
   14f90:	cmp	r3, #0
   14f94:	beq	1504c <main@@Base+0xe47c>
   14f98:	vldr	d0, [r4, #168]	; 0xa8
   14f9c:	b	14f60 <main@@Base+0xe390>
   14fa0:	add	r3, r4, #1048576	; 0x100000
   14fa4:	add	r3, r3, #4096	; 0x1000
   14fa8:	ldr	r3, [r3, #2012]	; 0x7dc
   14fac:	cmp	r3, #0
   14fb0:	beq	14f48 <main@@Base+0xe378>
   14fb4:	ldr	r2, [r4, #160]	; 0xa0
   14fb8:	ldr	r3, [r4, #152]	; 0x98
   14fbc:	ldr	r2, [r2]
   14fc0:	cmp	r2, r3
   14fc4:	bne	14f5c <main@@Base+0xe38c>
   14fc8:	ldr	r3, [r4, #156]	; 0x9c
   14fcc:	cmp	r3, #0
   14fd0:	beq	14ff0 <main@@Base+0xe420>
   14fd4:	vldr	d0, [r4, #120]	; 0x78
   14fd8:	b	14f60 <main@@Base+0xe390>
   14fdc:	ldr	r3, [r4, #108]	; 0x6c
   14fe0:	cmp	r3, #0
   14fe4:	beq	15028 <main@@Base+0xe458>
   14fe8:	vldr	d0, [r4, #72]	; 0x48
   14fec:	b	14f60 <main@@Base+0xe390>
   14ff0:	bl	65f0 <av_gettime_relative@plt>
   14ff4:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   14ff8:	vldr	d7, [pc, #128]	; 15080 <main@@Base+0xe4b0>
   14ffc:	vmov	d5, r0, r1
   15000:	vldr	d6, [r4, #136]	; 0x88
   15004:	vdiv.f64	d0, d5, d7
   15008:	vldr	d4, [r4, #128]	; 0x80
   1500c:	vldr	d7, [r4, #144]	; 0x90
   15010:	vldr	d5, [pc, #112]	; 15088 <main@@Base+0xe4b8>
   15014:	vsub.f64	d6, d0, d6
   15018:	vsub.f64	d7, d7, d5
   1501c:	vadd.f64	d0, d0, d4
   15020:	vmla.f64	d0, d6, d7
   15024:	b	14f60 <main@@Base+0xe390>
   15028:	bl	65f0 <av_gettime_relative@plt>
   1502c:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   15030:	vldr	d7, [pc, #72]	; 15080 <main@@Base+0xe4b0>
   15034:	vmov	d5, r0, r1
   15038:	vldr	d6, [r4, #88]	; 0x58
   1503c:	vdiv.f64	d0, d5, d7
   15040:	vldr	d4, [r4, #80]	; 0x50
   15044:	vldr	d7, [r4, #96]	; 0x60
   15048:	b	15010 <main@@Base+0xe440>
   1504c:	bl	65f0 <av_gettime_relative@plt>
   15050:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   15054:	vldr	d7, [pc, #36]	; 15080 <main@@Base+0xe4b0>
   15058:	vmov	d5, r0, r1
   1505c:	vldr	d6, [r4, #184]	; 0xb8
   15060:	vdiv.f64	d0, d5, d7
   15064:	vldr	d4, [r4, #176]	; 0xb0
   15068:	vldr	d7, [r4, #192]	; 0xc0
   1506c:	b	15010 <main@@Base+0xe440>
   15070:	bl	5e7c <__stack_chk_fail@plt>
   15074:	nop	{0}
   15078:	andeq	r0, r0, r0
   1507c:	svcvc	0x00f80000
   15080:	andeq	r0, r0, r0
   15084:	smlawbmi	lr, r0, r4, r8
   15088:	andeq	r0, r0, r0
   1508c:	svccc	0x00f00000	; IMB
   15090:	andeq	r3, r2, r8, lsl #23
   15094:	andeq	r0, r0, r8, asr r5
   15098:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1509c:	vpush	{d8-d15}
   150a0:	ldr	r3, [pc, #1112]	; 15500 <main@@Base+0xe930>
   150a4:	ldr	r2, [pc, #1112]	; 15504 <main@@Base+0xe934>
   150a8:	add	r3, pc, r3
   150ac:	ldr	r3, [r3, r2]
   150b0:	sub	sp, sp, #196	; 0xc4
   150b4:	str	r3, [sp, #92]	; 0x5c
   150b8:	ldr	r3, [r3]
   150bc:	mov	sl, r0
   150c0:	add	r7, r0, #1048576	; 0x100000
   150c4:	str	r3, [sp, #188]	; 0xbc
   150c8:	bl	665c <av_frame_alloc@plt>
   150cc:	add	r7, r7, #4096	; 0x1000
   150d0:	add	r3, sp, #120	; 0x78
   150d4:	str	r3, [sp, #88]	; 0x58
   150d8:	str	r0, [sp, #104]	; 0x68
   150dc:	ldr	r2, [r7, #2012]	; 0x7dc
   150e0:	mov	r0, r3
   150e4:	ldr	r1, [sl, #60]	; 0x3c
   150e8:	mov	r3, #0
   150ec:	bl	64a0 <av_guess_frame_rate@plt>
   150f0:	vldr	s30, [sp, #120]	; 0x78
   150f4:	vldr	s29, [sp, #124]	; 0x7c
   150f8:	bl	64f4 <avfilter_graph_alloc@plt>
   150fc:	cmp	r0, #0
   15100:	str	r0, [sp, #108]	; 0x6c
   15104:	beq	15818 <main@@Base+0xec48>
   15108:	ldr	r6, [sp, #104]	; 0x68
   1510c:	cmp	r6, #0
   15110:	beq	1582c <main@@Base+0xec5c>
   15114:	mov	r3, #0
   15118:	mvn	r0, #1
   1511c:	mvn	r1, #0
   15120:	vldr	d13, [pc, #944]	; 154d8 <main@@Base+0xe908>
   15124:	vldr	d9, [pc, #948]	; 154e0 <main@@Base+0xe910>
   15128:	vldr	d10, [pc, #952]	; 154e8 <main@@Base+0xe918>
   1512c:	mov	r9, r7
   15130:	add	r2, sl, #5440	; 0x1540
   15134:	str	r3, [sp, #80]	; 0x50
   15138:	str	r3, [sp, #60]	; 0x3c
   1513c:	str	r3, [sp, #56]	; 0x38
   15140:	str	r3, [sp, #72]	; 0x48
   15144:	str	r3, [sp, #48]	; 0x30
   15148:	strd	r0, [sp, #64]	; 0x40
   1514c:	add	r3, r2, #24
   15150:	str	r3, [sp, #76]	; 0x4c
   15154:	add	r3, sp, #108	; 0x6c
   15158:	str	r3, [sp, #84]	; 0x54
   1515c:	ldr	r4, [pc, #932]	; 15508 <main@@Base+0xe938>
   15160:	ldr	r5, [pc, #932]	; 1550c <main@@Base+0xe93c>
   15164:	add	r4, sl, r4
   15168:	add	r5, pc, r5
   1516c:	mov	r2, #0
   15170:	mov	r1, r6
   15174:	ldr	r0, [sp, #76]	; 0x4c
   15178:	bl	13584 <main@@Base+0xc9b4>
   1517c:	cmp	r0, #0
   15180:	blt	15740 <main@@Base+0xeb70>
   15184:	bne	15190 <main@@Base+0xe5c0>
   15188:	ldr	r6, [sp, #104]	; 0x68
   1518c:	b	1516c <main@@Base+0xe59c>
   15190:	ldrd	r0, [r6, #104]	; 0x68
   15194:	cmp	r1, #-2147483648	; 0x80000000
   15198:	cmpeq	r0, #0
   1519c:	ldr	r7, [r9, #2012]	; 0x7dc
   151a0:	vmoveq.f64	d8, d13
   151a4:	beq	151c8 <main@@Base+0xe5f8>
   151a8:	vldr	s15, [r7, #16]
   151ac:	vcvt.f64.s32	d6, s15
   151b0:	vldr	s15, [r7, #20]
   151b4:	vcvt.f64.s32	d7, s15
   151b8:	vdiv.f64	d8, d6, d7
   151bc:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   151c0:	vmov	d7, r0, r1
   151c4:	vmul.f64	d8, d8, d7
   151c8:	mov	r2, r7
   151cc:	add	r7, sp, #96	; 0x60
   151d0:	mov	r0, r7
   151d4:	mov	r3, r6
   151d8:	ldr	r1, [sl, #60]	; 0x3c
   151dc:	bl	60c8 <av_guess_sample_aspect_ratio@plt>
   151e0:	ldm	r7, {r0, r1}
   151e4:	ldr	r2, [r5, #48]	; 0x30
   151e8:	add	r3, r6, #92	; 0x5c
   151ec:	cmp	r2, #0
   151f0:	add	r7, sl, #4096	; 0x1000
   151f4:	stm	r3, {r0, r1}
   151f8:	ble	15794 <main@@Base+0xebc4>
   151fc:	ldrd	r2, [r6, #104]	; 0x68
   15200:	cmp	r3, #-2147483648	; 0x80000000
   15204:	cmpeq	r2, #0
   15208:	beq	1524c <main@@Base+0xe67c>
   1520c:	mov	r0, sl
   15210:	bl	14f00 <main@@Base+0xe330>
   15214:	vsub.f64	d0, d8, d0
   15218:	vcmp.f64	d0, d0
   1521c:	vmrs	APSR_nzcv, fpscr
   15220:	bvs	1524c <main@@Base+0xe67c>
   15224:	vabs.f64	d7, d0
   15228:	vldr	d6, [pc, #704]	; 154f0 <main@@Base+0xe920>
   1522c:	vcmpe.f64	d7, d6
   15230:	vmrs	APSR_nzcv, fpscr
   15234:	bpl	1524c <main@@Base+0xe67c>
   15238:	vldr	d7, [r4]
   1523c:	vsub.f64	d0, d0, d7
   15240:	vcmpe.f64	d0, #0.0
   15244:	vmrs	APSR_nzcv, fpscr
   15248:	bmi	157cc <main@@Base+0xebfc>
   1524c:	ldr	r1, [sp, #104]	; 0x68
   15250:	ldr	r2, [sp, #56]	; 0x38
   15254:	ldr	r3, [r1, #68]	; 0x44
   15258:	cmp	r3, r2
   1525c:	bne	152a0 <main@@Base+0xe6d0>
   15260:	ldr	r3, [r1, #72]	; 0x48
   15264:	ldr	r2, [sp, #60]	; 0x3c
   15268:	cmp	r3, r2
   1526c:	bne	152a0 <main@@Base+0xe6d0>
   15270:	ldr	r3, [r1, #80]	; 0x50
   15274:	ldr	r2, [sp, #64]	; 0x40
   15278:	cmp	r3, r2
   1527c:	bne	152a0 <main@@Base+0xe6d0>
   15280:	ldr	r3, [r7, #1448]	; 0x5a8
   15284:	ldr	r2, [sp, #68]	; 0x44
   15288:	cmp	r3, r2
   1528c:	bne	152a0 <main@@Base+0xe6d0>
   15290:	ldr	r3, [r9, #2100]	; 0x834
   15294:	ldr	r2, [sp, #80]	; 0x50
   15298:	cmp	r3, r2
   1529c:	beq	1539c <main@@Base+0xe7cc>
   152a0:	ldr	r0, [sp, #64]	; 0x40
   152a4:	bl	6a7c <av_get_pix_fmt_name@plt>
   152a8:	subs	r4, r0, #0
   152ac:	beq	157c0 <main@@Base+0xebf0>
   152b0:	ldr	r3, [sp, #104]	; 0x68
   152b4:	ldr	r0, [r3, #80]	; 0x50
   152b8:	ldr	r5, [r3, #68]	; 0x44
   152bc:	ldr	r6, [r3, #72]	; 0x48
   152c0:	bl	6a7c <av_get_pix_fmt_name@plt>
   152c4:	cmp	r0, #0
   152c8:	beq	157b4 <main@@Base+0xebe4>
   152cc:	ldr	r2, [r7, #1448]	; 0x5a8
   152d0:	ldr	r3, [sp, #68]	; 0x44
   152d4:	str	r2, [sp, #24]
   152d8:	str	r3, [sp, #8]
   152dc:	ldr	r2, [pc, #556]	; 15510 <main@@Base+0xe940>
   152e0:	ldr	r3, [sp, #60]	; 0x3c
   152e4:	add	r2, pc, r2
   152e8:	mov	r1, #48	; 0x30
   152ec:	str	r0, [sp, #20]
   152f0:	str	r3, [sp]
   152f4:	mov	r0, #0
   152f8:	ldr	r3, [sp, #56]	; 0x38
   152fc:	str	r6, [sp, #16]
   15300:	str	r5, [sp, #12]
   15304:	str	r4, [sp, #4]
   15308:	bl	6188 <av_log@plt>
   1530c:	ldr	r0, [sp, #84]	; 0x54
   15310:	bl	5ff0 <avfilter_graph_free@plt>
   15314:	bl	64f4 <avfilter_graph_alloc@plt>
   15318:	ldr	r3, [pc, #500]	; 15514 <main@@Base+0xe944>
   1531c:	mov	r1, sl
   15320:	add	r3, pc, r3
   15324:	ldr	r2, [r3, #12]
   15328:	str	r0, [sp, #108]	; 0x6c
   1532c:	cmp	r2, #0
   15330:	ldrne	r3, [r9, #2100]	; 0x834
   15334:	ldrne	r2, [r2, r3, lsl #2]
   15338:	ldr	r3, [sp, #104]	; 0x68
   1533c:	bl	1102c <main@@Base+0xa45c>
   15340:	cmp	r0, #0
   15344:	blt	15800 <main@@Base+0xec30>
   15348:	ldr	r3, [r9, #2108]	; 0x83c
   1534c:	ldr	r0, [sp, #88]	; 0x58
   15350:	mov	r1, r3
   15354:	str	r3, [sp, #48]	; 0x30
   15358:	ldr	r3, [sp, #104]	; 0x68
   1535c:	ldr	r2, [r3, #68]	; 0x44
   15360:	str	r2, [sp, #56]	; 0x38
   15364:	ldr	r2, [r3, #72]	; 0x48
   15368:	ldr	r3, [r3, #80]	; 0x50
   1536c:	str	r2, [sp, #60]	; 0x3c
   15370:	str	r3, [sp, #64]	; 0x40
   15374:	ldr	r3, [r9, #2104]	; 0x838
   15378:	str	r3, [sp, #72]	; 0x48
   1537c:	ldr	r3, [r7, #1448]	; 0x5a8
   15380:	str	r3, [sp, #68]	; 0x44
   15384:	ldr	r3, [r9, #2100]	; 0x834
   15388:	str	r3, [sp, #80]	; 0x50
   1538c:	bl	5cf0 <av_buffersink_get_frame_rate@plt>
   15390:	vldr	s30, [sp, #120]	; 0x78
   15394:	vldr	s29, [sp, #124]	; 0x7c
   15398:	ldr	r1, [sp, #104]	; 0x68
   1539c:	ldr	r0, [sp, #72]	; 0x48
   153a0:	bl	68cc <av_buffersrc_add_frame@plt>
   153a4:	cmp	r0, #0
   153a8:	blt	15740 <main@@Base+0xeb70>
   153ac:	vmov	r3, s30
   153b0:	vmov	r2, s29
   153b4:	adds	r3, r3, #0
   153b8:	movne	r3, #1
   153bc:	cmp	r2, #0
   153c0:	moveq	r3, #0
   153c4:	vldr	d12, [pc, #300]	; 154f8 <main@@Base+0xe928>
   153c8:	vldr	s28, [pc, #348]	; 1552c <main@@Base+0xe95c>
   153cc:	ldr	r8, [pc, #308]	; 15508 <main@@Base+0xe938>
   153d0:	str	r3, [sp, #52]	; 0x34
   153d4:	add	r8, sl, r8
   153d8:	str	r7, [sp, #32]
   153dc:	bl	65f0 <av_gettime_relative@plt>
   153e0:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   153e4:	vmov	d7, r0, r1
   153e8:	vdiv.f64	d7, d7, d9
   153ec:	mov	r2, #0
   153f0:	vstr	d7, [r8, #-8]
   153f4:	ldr	r1, [sp, #104]	; 0x68
   153f8:	ldr	r0, [sp, #48]	; 0x30
   153fc:	bl	6104 <av_buffersink_get_frame_flags@plt>
   15400:	cmp	r0, #0
   15404:	blt	15774 <main@@Base+0xeba4>
   15408:	bl	65f0 <av_gettime_relative@plt>
   1540c:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   15410:	vmov	d7, r0, r1
   15414:	vldr	d6, [r8, #-8]
   15418:	vdiv.f64	d7, d7, d9
   1541c:	vsub.f64	d7, d7, d6
   15420:	vabs.f64	d6, d7
   15424:	vcmpe.f64	d6, d10
   15428:	vmrs	APSR_nzcv, fpscr
   1542c:	vmovgt.f64	d7, d12
   15430:	ldr	r1, [sp, #48]	; 0x30
   15434:	vstr	d7, [r8]
   15438:	add	r0, sp, #112	; 0x70
   1543c:	bl	6758 <av_buffersink_get_time_base@plt>
   15440:	ldr	r3, [sp, #52]	; 0x34
   15444:	ldr	r5, [sp, #104]	; 0x68
   15448:	cmp	r3, #0
   1544c:	vcvtne.f64.s32	d7, s29
   15450:	ldrd	r0, [r5, #104]	; 0x68
   15454:	vcvtne.f64.s32	d6, s30
   15458:	vmoveq.f64	d11, d12
   1545c:	vdivne.f64	d11, d7, d6
   15460:	cmp	r1, #-2147483648	; 0x80000000
   15464:	cmpeq	r0, #0
   15468:	vmoveq.f64	d8, d13
   1546c:	beq	15490 <main@@Base+0xe8c0>
   15470:	vldr	s15, [sp, #112]	; 0x70
   15474:	vcvt.f64.s32	d6, s15
   15478:	vldr	s15, [sp, #116]	; 0x74
   1547c:	vcvt.f64.s32	d7, s15
   15480:	vdiv.f64	d8, d6, d7
   15484:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   15488:	vmov	d7, r0, r1
   1548c:	vmul.f64	d8, d8, d7
   15490:	ldr	r7, [sp, #32]
   15494:	add	r3, r5, #336	; 0x150
   15498:	ldr	r6, [r7, #1448]	; 0x5a8
   1549c:	ldr	r0, [sl, #1904]	; 0x770
   154a0:	ldrd	r2, [r3, #-8]
   154a4:	str	r6, [sp, #36]	; 0x24
   154a8:	strd	r2, [sp, #40]	; 0x28
   154ac:	bl	6b3c <SDL_LockMutex@plt>
   154b0:	ldr	r2, [sl, #1892]	; 0x764
   154b4:	ldr	r3, [sl, #1888]	; 0x760
   154b8:	cmp	r2, r3
   154bc:	bgt	15564 <main@@Base+0xe994>
   154c0:	ldr	r3, [sl, #1912]	; 0x778
   154c4:	ldr	r3, [r3, #24]
   154c8:	cmp	r3, #0
   154cc:	beq	15540 <main@@Base+0xe970>
   154d0:	b	15564 <main@@Base+0xe994>
   154d4:	nop	{0}
   154d8:	andeq	r0, r0, r0
   154dc:	svcvc	0x00f80000
   154e0:	andeq	r0, r0, r0
   154e4:	smlawbmi	lr, r0, r4, r8
   154e8:	andeq	r0, r0, r0
   154ec:	svccc	0x00f00000	; IMB
   154f0:	andeq	r0, r0, r0
   154f4:	eormi	r0, r4, r0
	...
   15500:	andeq	r3, r2, ip, ror #19
   15504:	andeq	r0, r0, r8, asr r5
   15508:			; <UNDEFINED> instruction: 0x001017d0
   1550c:	andeq	r3, r2, r8, ror #29
   15510:	andeq	r0, r1, r8, ror r0
   15514:	andeq	r3, r2, r0, lsr #27
   15518:	andeq	r3, r2, r4, lsl #20
   1551c:	svcle	0x00b9b0bb
   15520:	andeq	sp, r0, r0, ror #22
   15524:	andeq	sp, r0, r4, asr fp
   15528:	andeq	r8, r0, r2
   1552c:	svccc	0x00800000
   15530:	ldr	r3, [sl, #1912]	; 0x778
   15534:	ldr	r3, [r3, #24]
   15538:	cmp	r3, #0
   1553c:	bne	1555c <main@@Base+0xe98c>
   15540:	ldr	r1, [sl, #1904]	; 0x770
   15544:	ldr	r0, [sl, #1908]	; 0x774
   15548:	bl	60bc <SDL_CondWait@plt>
   1554c:	ldr	r2, [sl, #1888]	; 0x760
   15550:	ldr	r3, [sl, #1892]	; 0x764
   15554:	cmp	r2, r3
   15558:	bge	15530 <main@@Base+0xe960>
   1555c:	str	r6, [sp, #36]	; 0x24
   15560:	str	r7, [sp, #32]
   15564:	ldr	r0, [sl, #1904]	; 0x770
   15568:	bl	6290 <SDL_UnlockMutex@plt>
   1556c:	ldr	r3, [sl, #1912]	; 0x778
   15570:	ldr	ip, [r3, #24]
   15574:	cmp	ip, #0
   15578:	bne	15738 <main@@Base+0xeb68>
   1557c:	ldrd	r6, [sp, #40]	; 0x28
   15580:	ldr	fp, [sl, #1884]	; 0x75c
   15584:	add	r1, r5, #92	; 0x5c
   15588:	lsl	r4, fp, #1
   1558c:	add	r2, r4, fp
   15590:	add	r2, fp, r2, lsl #2
   15594:	lsl	r2, r2, #3
   15598:	add	r3, sl, r2
   1559c:	add	lr, r3, #300	; 0x12c
   155a0:	ldm	r1, {r0, r1}
   155a4:	stm	lr, {r0, r1}
   155a8:	ldr	r0, [r5, #80]	; 0x50
   155ac:	ldr	lr, [r5, #68]	; 0x44
   155b0:	ldr	r1, [r5, #72]	; 0x48
   155b4:	vstr	d8, [r3, #264]	; 0x108
   155b8:	vstr	d11, [r3, #272]	; 0x110
   155bc:	str	r0, [r3, #296]	; 0x128
   155c0:	add	r0, r3, #280	; 0x118
   155c4:	str	ip, [r3, #308]	; 0x134
   155c8:	str	lr, [r3, #288]	; 0x120
   155cc:	str	r1, [r3, #292]	; 0x124
   155d0:	ldr	ip, [sp, #36]	; 0x24
   155d4:	strd	r6, [r0]
   155d8:	add	r0, sl, #216	; 0xd8
   155dc:	str	ip, [r3, #256]	; 0x100
   155e0:	add	r2, r0, r2
   155e4:	ldr	r3, [r2, #84]	; 0x54
   155e8:	ldr	r2, [r2, #88]	; 0x58
   155ec:	cmp	r3, #0
   155f0:	bne	156c4 <main@@Base+0xeaf4>
   155f4:	vldr	s15, [pc, #-208]	; 1552c <main@@Base+0xe95c>
   155f8:	vmov	s14, r1
   155fc:	vcvt.f32.s32	s13, s14
   15600:	vmov	s14, lr
   15604:	vcvt.f32.s32	s14, s14
   15608:	vdiv.f32	s0, s14, s13
   1560c:	vmul.f32	s0, s0, s15
   15610:	vmul.f32	s0, s0, s13
   15614:	str	r1, [sp, #36]	; 0x24
   15618:	bl	63b0 <lrintf@plt>
   1561c:	ldr	r1, [sp, #36]	; 0x24
   15620:	bic	r0, r0, #1
   15624:	cmp	r0, #1
   15628:	movge	r3, r0
   1562c:	movlt	r3, #1
   15630:	cmp	r1, #1
   15634:	movge	r2, r1
   15638:	movlt	r2, #1
   1563c:	add	r4, r4, fp
   15640:	add	fp, fp, r4, lsl #2
   15644:	ldr	ip, [pc, #-308]	; 15518 <main@@Base+0xe948>
   15648:	add	fp, sl, fp, lsl #3
   1564c:	add	ip, pc, ip
   15650:	ldr	r0, [fp, #216]	; 0xd8
   15654:	mov	r1, r5
   15658:	str	r3, [ip, #28]
   1565c:	str	r2, [ip, #32]
   15660:	bl	66e0 <av_frame_move_ref@plt>
   15664:	ldr	r3, [sl, #1884]	; 0x75c
   15668:	ldr	r2, [sl, #1892]	; 0x764
   1566c:	add	r3, r3, #1
   15670:	cmp	r3, r2
   15674:	str	r3, [sl, #1884]	; 0x75c
   15678:	beq	156ec <main@@Base+0xeb1c>
   1567c:	ldr	r0, [sl, #1904]	; 0x770
   15680:	bl	6b3c <SDL_LockMutex@plt>
   15684:	ldr	r3, [sl, #1888]	; 0x760
   15688:	ldr	r0, [sl, #1908]	; 0x774
   1568c:	add	r3, r3, #1
   15690:	str	r3, [sl, #1888]	; 0x760
   15694:	bl	5dec <SDL_CondSignal@plt>
   15698:	ldr	r0, [sl, #1904]	; 0x770
   1569c:	bl	6290 <SDL_UnlockMutex@plt>
   156a0:	ldr	r0, [sp, #104]	; 0x68
   156a4:	bl	5f9c <av_frame_unref@plt>
   156a8:	ldr	r3, [sp, #32]
   156ac:	ldr	r2, [r9, #2044]	; 0x7fc
   156b0:	ldr	r3, [r3, #1448]	; 0x5a8
   156b4:	cmp	r2, r3
   156b8:	beq	153dc <main@@Base+0xe80c>
   156bc:	ldr	r6, [sp, #104]	; 0x68
   156c0:	b	1515c <main@@Base+0xe58c>
   156c4:	vmov	s15, r3
   156c8:	vcvt.f64.s32	d5, s15
   156cc:	vmov	s15, r2
   156d0:	vcvt.f64.s32	d6, s15
   156d4:	vdiv.f64	d0, d5, d6
   156d8:	vcvt.f32.f64	s15, d0
   156dc:	vcmp.f32	s15, #0.0
   156e0:	vmrs	APSR_nzcv, fpscr
   156e4:	vmovls.f32	s15, s28
   156e8:	b	155f8 <main@@Base+0xea28>
   156ec:	mov	r3, #0
   156f0:	ldr	r0, [sl, #1904]	; 0x770
   156f4:	str	r3, [sl, #1884]	; 0x75c
   156f8:	bl	6b3c <SDL_LockMutex@plt>
   156fc:	ldr	r3, [sl, #1888]	; 0x760
   15700:	ldr	r0, [sl, #1908]	; 0x774
   15704:	add	r3, r3, #1
   15708:	str	r3, [sl, #1888]	; 0x760
   1570c:	bl	5dec <SDL_CondSignal@plt>
   15710:	ldr	r0, [sl, #1904]	; 0x770
   15714:	bl	6290 <SDL_UnlockMutex@plt>
   15718:	ldr	r0, [sp, #104]	; 0x68
   1571c:	bl	5f9c <av_frame_unref@plt>
   15720:	ldr	r3, [sp, #32]
   15724:	ldr	r2, [r3, #1448]	; 0x5a8
   15728:	ldr	r3, [r9, #2044]	; 0x7fc
   1572c:	cmp	r2, r3
   15730:	beq	153dc <main@@Base+0xe80c>
   15734:	b	156bc <main@@Base+0xeaec>
   15738:	ldr	r0, [sp, #104]	; 0x68
   1573c:	bl	5f9c <av_frame_unref@plt>
   15740:	ldr	r0, [sp, #84]	; 0x54
   15744:	bl	5ff0 <avfilter_graph_free@plt>
   15748:	add	r0, sp, #104	; 0x68
   1574c:	bl	5f84 <av_frame_free@plt>
   15750:	mov	r0, #0
   15754:	ldr	r3, [sp, #92]	; 0x5c
   15758:	ldr	r2, [sp, #188]	; 0xbc
   1575c:	ldr	r3, [r3]
   15760:	cmp	r2, r3
   15764:	bne	15828 <main@@Base+0xec58>
   15768:	add	sp, sp, #196	; 0xc4
   1576c:	vpop	{d8-d15}
   15770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15774:	ldr	r3, [pc, #-608]	; 1551c <main@@Base+0xe94c>
   15778:	ldr	r7, [sp, #32]
   1577c:	cmp	r0, r3
   15780:	bne	156bc <main@@Base+0xeaec>
   15784:	ldr	r3, [r7, #1448]	; 0x5a8
   15788:	ldr	r6, [sp, #104]	; 0x68
   1578c:	str	r3, [r7, #1452]	; 0x5ac
   15790:	b	1515c <main@@Base+0xe58c>
   15794:	beq	1524c <main@@Base+0xe67c>
   15798:	ldr	r3, [r7, #1644]	; 0x66c
   1579c:	cmp	r3, #1
   157a0:	bne	151fc <main@@Base+0xe62c>
   157a4:	ldr	r3, [r9, #2012]	; 0x7dc
   157a8:	cmp	r3, #0
   157ac:	bne	1524c <main@@Base+0xe67c>
   157b0:	b	151fc <main@@Base+0xe62c>
   157b4:	ldr	r0, [pc, #-668]	; 15520 <main@@Base+0xe950>
   157b8:	add	r0, pc, r0
   157bc:	b	152cc <main@@Base+0xe6fc>
   157c0:	ldr	r4, [pc, #-676]	; 15524 <main@@Base+0xe954>
   157c4:	add	r4, pc, r4
   157c8:	b	152b0 <main@@Base+0xe6e0>
   157cc:	ldr	r2, [r7, #1448]	; 0x5a8
   157d0:	ldr	r3, [sl, #152]	; 0x98
   157d4:	cmp	r2, r3
   157d8:	bne	1524c <main@@Base+0xe67c>
   157dc:	ldr	r3, [r9, #2024]	; 0x7e8
   157e0:	cmp	r3, #0
   157e4:	beq	1524c <main@@Base+0xe67c>
   157e8:	ldr	r3, [r7, #1876]	; 0x754
   157ec:	mov	r0, r6
   157f0:	add	r3, r3, #1
   157f4:	str	r3, [r7, #1876]	; 0x754
   157f8:	bl	5f9c <av_frame_unref@plt>
   157fc:	b	15188 <main@@Base+0xe5b8>
   15800:	ldr	r3, [pc, #-736]	; 15528 <main@@Base+0xe958>
   15804:	add	r0, sp, #128	; 0x80
   15808:	str	sl, [sp, #144]	; 0x90
   1580c:	str	r3, [sp, #128]	; 0x80
   15810:	bl	61dc <SDL_PushEvent@plt>
   15814:	b	15740 <main@@Base+0xeb70>
   15818:	add	r0, sp, #104	; 0x68
   1581c:	bl	5f84 <av_frame_free@plt>
   15820:	mvn	r0, #11
   15824:	b	15754 <main@@Base+0xeb84>
   15828:	bl	5e7c <__stack_chk_fail@plt>
   1582c:	add	r0, sp, #108	; 0x6c
   15830:	bl	5ff0 <avfilter_graph_free@plt>
   15834:	mvn	r0, #11
   15838:	b	15754 <main@@Base+0xeb84>
   1583c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15840:	mov	r9, r0
   15844:	ldr	r3, [pc, #420]	; 159f0 <main@@Base+0xee20>
   15848:	sub	sp, sp, #60	; 0x3c
   1584c:	ldr	r2, [pc, #416]	; 159f4 <main@@Base+0xee24>
   15850:	add	r3, pc, r3
   15854:	str	r1, [sp, #24]
   15858:	ldr	r3, [r3, r2]
   1585c:	str	r3, [sp, #20]
   15860:	ldr	r3, [r3]
   15864:	str	r3, [sp, #52]	; 0x34
   15868:	bl	14f00 <main@@Base+0xe330>
   1586c:	ldr	r3, [r9, #60]	; 0x3c
   15870:	ldr	r2, [r3, #1156]	; 0x484
   15874:	str	r3, [sp, #28]
   15878:	cmp	r2, #0
   1587c:	beq	1591c <main@@Base+0xed4c>
   15880:	vldr	d7, [pc, #352]	; 159e8 <main@@Base+0xee18>
   15884:	vmul.f64	d7, d0, d7
   15888:	vmov	r0, r1, d7
   1588c:	bl	224b8 <vc_dispmanx_send_command_reply@@Base+0x87c>
   15890:	mov	r4, #0
   15894:	mov	r6, r0
   15898:	mov	r7, r1
   1589c:	mov	fp, #1
   158a0:	ldr	sl, [pc, #336]	; 159f8 <main@@Base+0xee28>
   158a4:	add	r8, sp, #8
   158a8:	add	r5, sp, #36	; 0x24
   158ac:	ldr	r3, [sp, #28]
   158b0:	b	158c4 <main@@Base+0xecf4>
   158b4:	ldr	r2, [r3, #1156]	; 0x484
   158b8:	add	r4, r4, #1
   158bc:	cmp	r2, r4
   158c0:	bls	15908 <main@@Base+0xed38>
   158c4:	ldr	r3, [r3, #1160]	; 0x488
   158c8:	str	fp, [sp, #36]	; 0x24
   158cc:	ldr	ip, [r3, r4, lsl #2]
   158d0:	str	sl, [sp, #40]	; 0x28
   158d4:	ldmib	ip, {r0, r1}
   158d8:	stm	r8, {r0, r1}
   158dc:	ldrd	r0, [ip, #16]
   158e0:	ldm	r5, {r2, r3}
   158e4:	strd	r0, [sp]
   158e8:	mov	r0, r6
   158ec:	mov	r1, r7
   158f0:	bl	65a8 <av_compare_ts@plt>
   158f4:	cmp	r0, #0
   158f8:	ldr	r3, [r9, #60]	; 0x3c
   158fc:	bge	158b4 <main@@Base+0xece4>
   15900:	ldr	r2, [r3, #1156]	; 0x484
   15904:	sub	r4, r4, #1
   15908:	ldr	r3, [sp, #24]
   1590c:	add	r4, r4, r3
   15910:	bic	r4, r4, r4, asr #31
   15914:	cmp	r4, r2
   15918:	bcc	15938 <main@@Base+0xed68>
   1591c:	ldr	r3, [sp, #20]
   15920:	ldr	r2, [sp, #52]	; 0x34
   15924:	ldr	r3, [r3]
   15928:	cmp	r2, r3
   1592c:	bne	159e4 <main@@Base+0xee14>
   15930:	add	sp, sp, #60	; 0x3c
   15934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15938:	mov	r5, #1
   1593c:	ldr	r2, [pc, #184]	; 159fc <main@@Base+0xee2c>
   15940:	mov	r3, r4
   15944:	add	r2, pc, r2
   15948:	mov	r1, #40	; 0x28
   1594c:	mov	r0, #0
   15950:	bl	6188 <av_log@plt>
   15954:	ldr	r3, [r9, #60]	; 0x3c
   15958:	ldr	r1, [r9, #28]
   1595c:	ldr	r3, [r3, #1160]	; 0x488
   15960:	ldr	r2, [pc, #144]	; 159f8 <main@@Base+0xee28>
   15964:	ldr	r3, [r3, r4, lsl #2]
   15968:	cmp	r1, #0
   1596c:	ldrd	r6, [r3, #16]
   15970:	str	r5, [sp, #44]	; 0x2c
   15974:	str	r2, [sp, #48]	; 0x30
   15978:	bne	1591c <main@@Base+0xed4c>
   1597c:	add	r2, sp, #44	; 0x2c
   15980:	ldm	r2, {r0, r1}
   15984:	stm	sp, {r0, r1}
   15988:	mov	r0, r6
   1598c:	ldmib	r3, {r2, r3}
   15990:	mov	r1, r7
   15994:	bl	6884 <av_rescale_q@plt>
   15998:	mov	r6, #0
   1599c:	mov	r7, #0
   159a0:	ldr	r2, [sp, #20]
   159a4:	ldr	r3, [r9, #32]
   159a8:	ldr	ip, [sp, #52]	; 0x34
   159ac:	ldr	r2, [r2]
   159b0:	bic	r3, r3, #2
   159b4:	cmp	ip, r2
   159b8:	strd	r0, [r9, #40]	; 0x28
   159bc:	str	r5, [r9, #28]
   159c0:	str	r3, [r9, #32]
   159c4:	strd	r6, [r9, #48]	; 0x30
   159c8:	bne	159e4 <main@@Base+0xee14>
   159cc:	add	r9, r9, #1048576	; 0x100000
   159d0:	add	r9, r9, #4096	; 0x1000
   159d4:	ldr	r0, [r9, #2136]	; 0x858
   159d8:	add	sp, sp, #60	; 0x3c
   159dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159e0:	b	5dec <SDL_CondSignal@plt>
   159e4:	bl	5e7c <__stack_chk_fail@plt>
   159e8:	andeq	r0, r0, r0
   159ec:	smlawbmi	lr, r0, r4, r8
   159f0:	andeq	r3, r2, r4, asr #4
   159f4:	andeq	r0, r0, r8, asr r5
   159f8:	andeq	r4, pc, r0, asr #4
   159fc:	andeq	pc, r0, r4, ror sl	; <UNPREDICTABLE>
   15a00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a04:	vpush	{d8-d13}
   15a08:	ldr	r3, [pc, #1008]	; 15e00 <main@@Base+0xf230>
   15a0c:	ldr	ip, [pc, #1008]	; 15e04 <main@@Base+0xf234>
   15a10:	add	r3, pc, r3
   15a14:	ldr	r3, [r3, ip]
   15a18:	sub	sp, sp, #92	; 0x5c
   15a1c:	str	r3, [sp, #56]	; 0x38
   15a20:	ldr	r3, [r3]
   15a24:	mov	r9, r2
   15a28:	str	r3, [sp, #84]	; 0x54
   15a2c:	mov	fp, r0
   15a30:	str	r1, [sp, #40]	; 0x28
   15a34:	bl	65f0 <av_gettime_relative@plt>
   15a38:	ldr	r3, [pc, #968]	; 15e08 <main@@Base+0xf238>
   15a3c:	cmp	r9, #0
   15a40:	add	r3, pc, r3
   15a44:	strd	r0, [r3, #216]	; 0xd8
   15a48:	ble	15f40 <main@@Base+0xf370>
   15a4c:	add	sl, fp, #4096	; 0x1000
   15a50:	add	r3, fp, #5696	; 0x1640
   15a54:	vldr	d10, [pc, #892]	; 15dd8 <main@@Base+0xf208>
   15a58:	vldr	d13, [pc, #896]	; 15de0 <main@@Base+0xf210>
   15a5c:	vldr	d9, [pc, #900]	; 15de8 <main@@Base+0xf218>
   15a60:	vldr	d11, [pc, #904]	; 15df0 <main@@Base+0xf220>
   15a64:	vldr	d12, [pc, #908]	; 15df8 <main@@Base+0xf228>
   15a68:	ldr	r1, [sl, #1756]	; 0x6dc
   15a6c:	str	r3, [sp, #48]	; 0x30
   15a70:	b	15b10 <main@@Base+0xef40>
   15a74:	ldr	r3, [sl, #1768]	; 0x6e8
   15a78:	cmp	r9, r8
   15a7c:	movlt	r4, r9
   15a80:	movge	r4, r8
   15a84:	cmp	r3, #0
   15a88:	bne	15aa4 <main@@Base+0xeed4>
   15a8c:	ldr	r3, [sl, #1740]	; 0x6cc
   15a90:	cmp	r3, #0
   15a94:	beq	15aa4 <main@@Base+0xeed4>
   15a98:	ldr	r2, [sl, #1764]	; 0x6e4
   15a9c:	cmp	r2, #128	; 0x80
   15aa0:	beq	16088 <main@@Base+0xf4b8>
   15aa4:	mov	r2, r4
   15aa8:	mov	r1, #0
   15aac:	ldr	r0, [sp, #40]	; 0x28
   15ab0:	bl	62e4 <memset@plt>
   15ab4:	ldr	r3, [sl, #1768]	; 0x6e8
   15ab8:	cmp	r3, #0
   15abc:	bne	15aec <main@@Base+0xef1c>
   15ac0:	ldr	r3, [sl, #1740]	; 0x6cc
   15ac4:	ldr	r1, [sl, #1756]	; 0x6dc
   15ac8:	cmp	r3, #0
   15acc:	beq	15af0 <main@@Base+0xef20>
   15ad0:	ldr	r2, [sl, #1764]	; 0x6e4
   15ad4:	add	r1, r3, r1
   15ad8:	str	r2, [sp]
   15adc:	mov	r3, r4
   15ae0:	ldr	r2, [pc, #804]	; 15e0c <main@@Base+0xf23c>
   15ae4:	ldr	r0, [sp, #40]	; 0x28
   15ae8:	bl	6218 <SDL_MixAudioFormat@plt>
   15aec:	ldr	r1, [sl, #1756]	; 0x6dc
   15af0:	ldr	r3, [sp, #40]	; 0x28
   15af4:	sub	r9, r9, r4
   15af8:	add	r1, r4, r1
   15afc:	add	r3, r3, r4
   15b00:	cmp	r9, #0
   15b04:	str	r1, [sl, #1756]	; 0x6dc
   15b08:	str	r3, [sp, #40]	; 0x28
   15b0c:	ble	15f50 <main@@Base+0xf380>
   15b10:	ldr	r3, [sl, #1748]	; 0x6d4
   15b14:	cmp	r1, r3
   15b18:	subcc	r8, r3, r1
   15b1c:	bcc	15a74 <main@@Base+0xeea4>
   15b20:	ldr	r6, [fp, #16]
   15b24:	cmp	r6, #0
   15b28:	bne	15f10 <main@@Base+0xf340>
   15b2c:	add	r5, fp, #3616	; 0xe20
   15b30:	add	r5, r5, #8
   15b34:	ldr	r0, [sl, #1216]	; 0x4c0
   15b38:	bl	6b3c <SDL_LockMutex@plt>
   15b3c:	b	15b5c <main@@Base+0xef8c>
   15b40:	ldr	r3, [sl, #1224]	; 0x4c8
   15b44:	ldr	r3, [r3, #24]
   15b48:	cmp	r3, #0
   15b4c:	bne	15b70 <main@@Base+0xefa0>
   15b50:	ldr	r1, [sl, #1216]	; 0x4c0
   15b54:	ldr	r0, [sl, #1220]	; 0x4c4
   15b58:	bl	60bc <SDL_CondWait@plt>
   15b5c:	ldr	r3, [sl, #1200]	; 0x4b0
   15b60:	ldr	r2, [sl, #1212]	; 0x4bc
   15b64:	sub	r3, r3, r2
   15b68:	cmp	r3, #0
   15b6c:	ble	15b40 <main@@Base+0xef70>
   15b70:	ldr	r0, [sl, #1216]	; 0x4c0
   15b74:	bl	6290 <SDL_UnlockMutex@plt>
   15b78:	ldr	r3, [sl, #1224]	; 0x4c8
   15b7c:	ldr	r3, [r3, #24]
   15b80:	cmp	r3, #0
   15b84:	bne	15f10 <main@@Base+0xf340>
   15b88:	ldr	r8, [sl, #1192]	; 0x4a8
   15b8c:	ldr	r7, [sl, #1212]	; 0x4bc
   15b90:	ldr	r1, [sl, #1204]	; 0x4b4
   15b94:	add	r0, r8, r7
   15b98:	bl	21ff4 <vc_dispmanx_send_command_reply@@Base+0x3b8>
   15b9c:	ldr	r3, [sl, #1208]	; 0x4b8
   15ba0:	add	r4, r1, r1, lsl #1
   15ba4:	add	r4, r1, r4, lsl #2
   15ba8:	cmp	r3, #0
   15bac:	add	r4, r5, r4, lsl #3
   15bb0:	beq	15bc4 <main@@Base+0xeff4>
   15bb4:	cmp	r7, #0
   15bb8:	moveq	r3, #1
   15bbc:	streq	r3, [sl, #1212]	; 0x4bc
   15bc0:	beq	15c28 <main@@Base+0xf058>
   15bc4:	add	r7, r8, r8, lsl #1
   15bc8:	add	r7, r8, r7, lsl #2
   15bcc:	lsl	r7, r7, #3
   15bd0:	add	r3, fp, r7
   15bd4:	ldr	r0, [r3, #3624]	; 0xe28
   15bd8:	bl	5f9c <av_frame_unref@plt>
   15bdc:	add	r0, r7, #8
   15be0:	add	r0, r5, r0
   15be4:	bl	5d14 <avsubtitle_free@plt>
   15be8:	ldr	r3, [sl, #1192]	; 0x4a8
   15bec:	ldr	r2, [sl, #1204]	; 0x4b4
   15bf0:	add	r3, r3, #1
   15bf4:	cmp	r3, r2
   15bf8:	movne	r2, r3
   15bfc:	moveq	r2, r6
   15c00:	ldr	r0, [sl, #1216]	; 0x4c0
   15c04:	str	r2, [sl, #1192]	; 0x4a8
   15c08:	bl	6b3c <SDL_LockMutex@plt>
   15c0c:	ldr	r3, [sl, #1200]	; 0x4b0
   15c10:	ldr	r0, [sl, #1220]	; 0x4c4
   15c14:	sub	r3, r3, #1
   15c18:	str	r3, [sl, #1200]	; 0x4b0
   15c1c:	bl	5dec <SDL_CondSignal@plt>
   15c20:	ldr	r0, [sl, #1216]	; 0x4c0
   15c24:	bl	6290 <SDL_UnlockMutex@plt>
   15c28:	ldr	r2, [r4, #40]	; 0x28
   15c2c:	ldr	r3, [sl, #1724]	; 0x6bc
   15c30:	cmp	r2, r3
   15c34:	bne	15b34 <main@@Base+0xef64>
   15c38:	mov	ip, #1
   15c3c:	ldr	r1, [r4]
   15c40:	mov	r0, #0
   15c44:	ldrd	r2, [r1, #76]	; 0x4c
   15c48:	ldr	r1, [r1, #352]	; 0x160
   15c4c:	str	ip, [sp]
   15c50:	bl	6080 <av_samples_get_buffer_size@plt>
   15c54:	ldr	r3, [r4]
   15c58:	mov	r8, r0
   15c5c:	ldrd	r0, [r3, #240]	; 0xf0
   15c60:	orrs	r2, r0, r1
   15c64:	beq	15c7c <main@@Base+0xf0ac>
   15c68:	ldr	r5, [r3, #352]	; 0x160
   15c6c:	bl	68e4 <av_get_channel_layout_nb_channels@plt>
   15c70:	cmp	r5, r0
   15c74:	beq	16318 <main@@Base+0xf748>
   15c78:	ldr	r3, [r4]
   15c7c:	ldr	r0, [r3, #352]	; 0x160
   15c80:	bl	6b24 <av_get_default_channel_layout@plt>
   15c84:	mov	r6, r0
   15c88:	mov	r7, r1
   15c8c:	ldr	ip, [r4]
   15c90:	ldr	r3, [sl, #1644]	; 0x66c
   15c94:	ldr	r2, [ip, #76]	; 0x4c
   15c98:	cmp	r3, #1
   15c9c:	str	r2, [sp, #44]	; 0x2c
   15ca0:	beq	1610c <main@@Base+0xf53c>
   15ca4:	cmp	r3, #0
   15ca8:	bne	16120 <main@@Base+0xf550>
   15cac:	ldr	r3, [sl, #1692]	; 0x69c
   15cb0:	cmp	r3, #0
   15cb4:	beq	16120 <main@@Base+0xf550>
   15cb8:	ldr	r2, [ip, #80]	; 0x50
   15cbc:	ldr	r3, [sl, #1792]	; 0x700
   15cc0:	cmp	r2, r3
   15cc4:	bne	15cdc <main@@Base+0xf10c>
   15cc8:	add	r3, fp, #5888	; 0x1700
   15ccc:	ldrd	r2, [r3, #-8]
   15cd0:	cmp	r3, r7
   15cd4:	cmpeq	r2, r6
   15cd8:	beq	15e14 <main@@Base+0xf244>
   15cdc:	add	r3, fp, #5952	; 0x1740
   15ce0:	add	r5, r3, #16
   15ce4:	mov	r0, r5
   15ce8:	str	r3, [sp, #52]	; 0x34
   15cec:	bl	6680 <swr_free@plt>
   15cf0:	mov	r0, #0
   15cf4:	ldr	r3, [sp, #52]	; 0x34
   15cf8:	ldr	r1, [r4]
   15cfc:	ldrd	r2, [r3, #-8]
   15d00:	str	r0, [sp, #28]
   15d04:	str	r0, [sp, #24]
   15d08:	ldr	ip, [r1, #232]	; 0xe8
   15d0c:	str	ip, [sp, #20]
   15d10:	ldr	r1, [r1, #80]	; 0x50
   15d14:	ldr	ip, [sl, #1840]	; 0x730
   15d18:	str	r1, [sp, #16]
   15d1c:	ldr	r1, [sl, #1856]	; 0x740
   15d20:	strd	r6, [sp, #8]
   15d24:	stm	sp, {r1, ip}
   15d28:	bl	6968 <swr_alloc_set_opts@plt>
   15d2c:	cmp	r0, #0
   15d30:	str	r0, [sl, #1872]	; 0x750
   15d34:	beq	16438 <main@@Base+0xf868>
   15d38:	bl	6728 <swr_init@plt>
   15d3c:	cmp	r0, #0
   15d40:	blt	16438 <main@@Base+0xf868>
   15d44:	ldr	ip, [r4]
   15d48:	add	r3, fp, #5888	; 0x1700
   15d4c:	ldr	r1, [ip, #352]	; 0x160
   15d50:	ldr	r2, [ip, #232]	; 0xe8
   15d54:	ldr	r0, [ip, #80]	; 0x50
   15d58:	strd	r6, [r3, #-8]
   15d5c:	ldr	r3, [sl, #1872]	; 0x750
   15d60:	str	r1, [sl, #1780]	; 0x6f4
   15d64:	str	r2, [sl, #1776]	; 0x6f0
   15d68:	str	r0, [sl, #1792]	; 0x700
   15d6c:	cmp	r3, #0
   15d70:	bne	15e40 <main@@Base+0xf270>
   15d74:	ldr	r3, [ip]
   15d78:	str	r3, [sl, #1740]	; 0x6cc
   15d7c:	vldr	d6, [r4, #48]	; 0x30
   15d80:	vcmp.f64	d6, d6
   15d84:	vmrs	APSR_nzcv, fpscr
   15d88:	ldrvc	r3, [r4]
   15d8c:	vmovvs.f64	d7, d10
   15d90:	vldrvc	s8, [r3, #76]	; 0x4c
   15d94:	vldrvc	s10, [r3, #232]	; 0xe8
   15d98:	vcvtvc.f64.s32	d4, s8
   15d9c:	vcvtvc.f64.s32	d5, s10
   15da0:	vdivvc.f64	d7, d4, d5
   15da4:	vaddvc.f64	d7, d7, d6
   15da8:	ldr	r3, [r4, #40]	; 0x28
   15dac:	ldr	r2, [sp, #48]	; 0x30
   15db0:	cmp	r8, #0
   15db4:	vstr	d7, [r2, #48]	; 0x30
   15db8:	str	r3, [sl, #1656]	; 0x678
   15dbc:	blt	15f10 <main@@Base+0xf340>
   15dc0:	ldr	r3, [sl, #1884]	; 0x75c
   15dc4:	cmp	r3, #0
   15dc8:	bne	16258 <main@@Base+0xf688>
   15dcc:	str	r8, [sl, #1748]	; 0x6d4
   15dd0:	b	15f30 <main@@Base+0xf360>
   15dd4:	nop	{0}
   15dd8:	andeq	r0, r0, r0
   15ddc:	svcvc	0x00f80000
	...
   15dec:	eormi	r0, r4, r0
   15df0:	andeq	r0, r0, r0
   15df4:	svccc	0x00f00000	; IMB
   15df8:	andeq	r0, r0, r0
   15dfc:	smlawbmi	lr, r0, r4, r8
   15e00:	andeq	r3, r2, r4, lsl #1
   15e04:	andeq	r0, r0, r8, asr r5
   15e08:	andeq	r3, r2, r0, lsl #13
   15e0c:	andeq	r8, r0, r0, lsl r0
   15e10:	andeq	pc, r0, ip, lsl #11
   15e14:	ldr	r2, [ip, #232]	; 0xe8
   15e18:	ldr	r3, [sl, #1776]	; 0x6f0
   15e1c:	cmp	r2, r3
   15e20:	bne	15cdc <main@@Base+0xf10c>
   15e24:	ldr	r1, [ip, #76]	; 0x4c
   15e28:	ldr	r0, [sp, #44]	; 0x2c
   15e2c:	ldr	r3, [sl, #1872]	; 0x750
   15e30:	cmp	r1, r0
   15e34:	beq	15d6c <main@@Base+0xf19c>
   15e38:	cmp	r3, #0
   15e3c:	beq	15cdc <main@@Base+0xf10c>
   15e40:	ldr	r0, [sl, #1840]	; 0x730
   15e44:	ldr	r1, [sp, #44]	; 0x2c
   15e48:	ldr	ip, [ip, #64]	; 0x40
   15e4c:	asr	r3, r2, #31
   15e50:	smull	r0, r1, r1, r0
   15e54:	str	ip, [sp, #60]	; 0x3c
   15e58:	mov	r8, #0
   15e5c:	bl	223d4 <vc_dispmanx_send_command_reply@@Base+0x798>
   15e60:	str	r8, [sp]
   15e64:	add	r7, r0, #256	; 0x100
   15e68:	mov	r2, r7
   15e6c:	ldr	r3, [sl, #1856]	; 0x740
   15e70:	mov	r0, r8
   15e74:	ldr	r1, [sl, #1844]	; 0x734
   15e78:	bl	6080 <av_samples_get_buffer_size@plt>
   15e7c:	add	r3, fp, #5824	; 0x16c0
   15e80:	subs	r2, r0, #0
   15e84:	str	r2, [sp, #52]	; 0x34
   15e88:	add	r5, r3, #16
   15e8c:	blt	1649c <main@@Base+0xf8cc>
   15e90:	ldr	r2, [r4]
   15e94:	ldr	r0, [sp, #44]	; 0x2c
   15e98:	ldr	r6, [r2, #76]	; 0x4c
   15e9c:	cmp	r6, r0
   15ea0:	beq	160a0 <main@@Base+0xf4d0>
   15ea4:	str	r3, [sp, #76]	; 0x4c
   15ea8:	ldr	r3, [r2, #232]	; 0xe8
   15eac:	ldr	r2, [sl, #1840]	; 0x730
   15eb0:	mov	r1, r3
   15eb4:	mul	r0, r0, r2
   15eb8:	str	r3, [sp, #64]	; 0x40
   15ebc:	str	r2, [sp, #72]	; 0x48
   15ec0:	bl	21dd4 <vc_dispmanx_send_command_reply@@Base+0x198>
   15ec4:	ldr	r3, [sp, #44]	; 0x2c
   15ec8:	ldr	r2, [sp, #72]	; 0x48
   15ecc:	str	r0, [sp, #68]	; 0x44
   15ed0:	sub	r0, r3, r6
   15ed4:	ldr	r1, [sp, #64]	; 0x40
   15ed8:	mul	r0, r2, r0
   15edc:	bl	21dd4 <vc_dispmanx_send_command_reply@@Base+0x198>
   15ee0:	ldr	r2, [sp, #68]	; 0x44
   15ee4:	mov	r1, r0
   15ee8:	ldr	r0, [sl, #1872]	; 0x750
   15eec:	bl	60a4 <swr_set_compensation@plt>
   15ef0:	cmp	r0, #0
   15ef4:	ldr	r3, [sp, #76]	; 0x4c
   15ef8:	bge	160a0 <main@@Base+0xf4d0>
   15efc:	ldr	r2, [pc, #-244]	; 15e10 <main@@Base+0xf240>
   15f00:	mov	r0, r8
   15f04:	add	r2, pc, r2
   15f08:	mov	r1, #16
   15f0c:	bl	6188 <av_log@plt>
   15f10:	mov	r3, #0
   15f14:	ldr	r8, [sl, #1860]	; 0x744
   15f18:	str	r3, [sl, #1740]	; 0x6cc
   15f1c:	mov	r1, r8
   15f20:	mov	r0, #512	; 0x200
   15f24:	bl	21dd4 <vc_dispmanx_send_command_reply@@Base+0x198>
   15f28:	mul	r8, r8, r0
   15f2c:	str	r8, [sl, #1748]	; 0x6d4
   15f30:	mov	r3, #0
   15f34:	mov	r1, r3
   15f38:	str	r3, [sl, #1756]	; 0x6dc
   15f3c:	b	15a74 <main@@Base+0xeea4>
   15f40:	add	sl, fp, #4096	; 0x1000
   15f44:	add	r3, fp, #5696	; 0x1640
   15f48:	ldr	r1, [sl, #1756]	; 0x6dc
   15f4c:	str	r3, [sp, #48]	; 0x30
   15f50:	ldr	r3, [sp, #48]	; 0x30
   15f54:	vldr	d6, [r3, #48]	; 0x30
   15f58:	vcmp.f64	d6, d6
   15f5c:	vmrs	APSR_nzcv, fpscr
   15f60:	ldr	r3, [sl, #1748]	; 0x6d4
   15f64:	sub	r1, r3, r1
   15f68:	str	r1, [sl, #1760]	; 0x6e0
   15f6c:	bvs	16068 <main@@Base+0xf498>
   15f70:	ldr	r3, [sl, #1736]	; 0x6c8
   15f74:	vldr	d9, [pc, #956]	; 16338 <main@@Base+0xf768>
   15f78:	add	r1, r1, r3, lsl #1
   15f7c:	ldr	r3, [sl, #1864]	; 0x748
   15f80:	vmov	s15, r1
   15f84:	vmov	s11, r3
   15f88:	vcvt.f64.s32	d7, s15
   15f8c:	vcvt.f64.s32	d5, s11
   15f90:	vdiv.f64	d8, d7, d5
   15f94:	ldr	r3, [pc, #948]	; 16350 <main@@Base+0xf780>
   15f98:	vsub.f64	d8, d6, d8
   15f9c:	add	r3, pc, r3
   15fa0:	ldrd	r0, [r3, #216]	; 0xd8
   15fa4:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   15fa8:	vmov	d7, r0, r1
   15fac:	vdiv.f64	d7, d7, d9
   15fb0:	vsub.f64	d6, d8, d7
   15fb4:	ldr	r3, [sl, #1656]	; 0x678
   15fb8:	ldr	r2, [fp, #208]	; 0xd0
   15fbc:	str	r3, [fp, #104]	; 0x68
   15fc0:	ldr	r1, [r2]
   15fc4:	ldr	r2, [fp, #200]	; 0xc8
   15fc8:	vstr	d8, [fp, #72]	; 0x48
   15fcc:	cmp	r1, r2
   15fd0:	vstr	d6, [fp, #80]	; 0x50
   15fd4:	vstr	d7, [fp, #88]	; 0x58
   15fd8:	bne	162e4 <main@@Base+0xf714>
   15fdc:	ldr	r2, [fp, #204]	; 0xcc
   15fe0:	cmp	r2, #0
   15fe4:	beq	163d0 <main@@Base+0xf800>
   15fe8:	vldr	d8, [fp, #168]	; 0xa8
   15fec:	ldr	r2, [fp, #112]	; 0x70
   15ff0:	ldr	r2, [r2]
   15ff4:	cmp	r2, r3
   15ff8:	bne	16068 <main@@Base+0xf498>
   15ffc:	ldr	r3, [fp, #108]	; 0x6c
   16000:	cmp	r3, #0
   16004:	beq	16398 <main@@Base+0xf7c8>
   16008:	vldr	d9, [fp, #72]	; 0x48
   1600c:	vcmp.f64	d9, d9
   16010:	vmrs	APSR_nzcv, fpscr
   16014:	bvs	16068 <main@@Base+0xf498>
   16018:	vcmp.f64	d8, d8
   1601c:	vmrs	APSR_nzcv, fpscr
   16020:	bvs	1603c <main@@Base+0xf46c>
   16024:	vsub.f64	d8, d8, d9
   16028:	vldr	d7, [pc, #784]	; 16340 <main@@Base+0xf770>
   1602c:	vabs.f64	d8, d8
   16030:	vcmpe.f64	d8, d7
   16034:	vmrs	APSR_nzcv, fpscr
   16038:	ble	16068 <main@@Base+0xf498>
   1603c:	ldr	r4, [fp, #104]	; 0x68
   16040:	bl	65f0 <av_gettime_relative@plt>
   16044:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   16048:	vldr	d6, [pc, #744]	; 16338 <main@@Base+0xf768>
   1604c:	vmov	d7, r0, r1
   16050:	vdiv.f64	d7, d7, d6
   16054:	vsub.f64	d6, d9, d7
   16058:	vstr	d9, [fp, #168]	; 0xa8
   1605c:	vstr	d6, [fp, #176]	; 0xb0
   16060:	vstr	d7, [fp, #184]	; 0xb8
   16064:	str	r4, [fp, #200]	; 0xc8
   16068:	ldr	r3, [sp, #56]	; 0x38
   1606c:	ldr	r2, [sp, #84]	; 0x54
   16070:	ldr	r3, [r3]
   16074:	cmp	r2, r3
   16078:	bne	164cc <main@@Base+0xf8fc>
   1607c:	add	sp, sp, #92	; 0x5c
   16080:	vpop	{d8-d13}
   16084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16088:	add	r1, r3, r1
   1608c:	mov	r2, r4
   16090:	ldr	r0, [sp, #40]	; 0x28
   16094:	bl	66f8 <memcpy@plt>
   16098:	ldr	r1, [sl, #1756]	; 0x6dc
   1609c:	b	15af0 <main@@Base+0xef20>
   160a0:	add	r1, r3, #24
   160a4:	ldr	r2, [sp, #52]	; 0x34
   160a8:	mov	r0, r5
   160ac:	bl	62a8 <av_fast_malloc@plt>
   160b0:	ldr	r3, [sl, #1744]	; 0x6d0
   160b4:	cmp	r3, #0
   160b8:	beq	15f10 <main@@Base+0xf340>
   160bc:	ldr	r2, [r4]
   160c0:	ldr	r3, [sp, #60]	; 0x3c
   160c4:	ldr	r2, [r2, #76]	; 0x4c
   160c8:	mov	r1, r5
   160cc:	str	r2, [sp]
   160d0:	ldr	r0, [sl, #1872]	; 0x750
   160d4:	mov	r2, r7
   160d8:	bl	5e58 <swr_convert@plt>
   160dc:	subs	r6, r0, #0
   160e0:	blt	164b4 <main@@Base+0xf8e4>
   160e4:	cmp	r7, r6
   160e8:	beq	16364 <main@@Base+0xf794>
   160ec:	ldr	r3, [sl, #1744]	; 0x6d0
   160f0:	ldr	r0, [sl, #1856]	; 0x740
   160f4:	str	r3, [sl, #1740]	; 0x6cc
   160f8:	ldr	r5, [sl, #1844]	; 0x734
   160fc:	bl	6668 <av_get_bytes_per_sample@plt>
   16100:	mul	r5, r5, r6
   16104:	mul	r8, r0, r5
   16108:	b	15d7c <main@@Base+0xf1ac>
   1610c:	add	r3, fp, #1048576	; 0x100000
   16110:	add	r3, r3, #4096	; 0x1000
   16114:	ldr	r3, [r3, #2012]	; 0x7dc
   16118:	cmp	r3, #0
   1611c:	beq	15cb8 <main@@Base+0xf0e8>
   16120:	ldr	r2, [fp, #112]	; 0x70
   16124:	ldr	r3, [fp, #104]	; 0x68
   16128:	ldr	r2, [r2]
   1612c:	cmp	r2, r3
   16130:	vmovne.f64	d8, d10
   16134:	beq	162ec <main@@Base+0xf71c>
   16138:	mov	r0, fp
   1613c:	bl	14f00 <main@@Base+0xe330>
   16140:	vsub.f64	d0, d8, d0
   16144:	vcmp.f64	d0, d0
   16148:	vmrs	APSR_nzcv, fpscr
   1614c:	bvs	16300 <main@@Base+0xf730>
   16150:	vabs.f64	d7, d0
   16154:	vcmpe.f64	d7, d9
   16158:	vmrs	APSR_nzcv, fpscr
   1615c:	bpl	16300 <main@@Base+0xf730>
   16160:	add	r3, fp, #5760	; 0x1680
   16164:	vldr	d6, [r3]
   16168:	vldr	d7, [r3, #8]
   1616c:	vmov.f64	d5, d0
   16170:	vmla.f64	d5, d7, d6
   16174:	ldr	r2, [sl, #1688]	; 0x698
   16178:	vstr	d5, [r3]
   1617c:	cmp	r2, #19
   16180:	ble	16324 <main@@Base+0xf754>
   16184:	vsub.f64	d7, d11, d7
   16188:	vmul.f64	d7, d7, d5
   1618c:	vldr	d5, [r3, #16]
   16190:	vabs.f64	d6, d7
   16194:	vcmpe.f64	d6, d5
   16198:	vmrs	APSR_nzcv, fpscr
   1619c:	movlt	r1, #0
   161a0:	blt	16220 <main@@Base+0xf650>
   161a4:	ldr	r2, [sl, #1776]	; 0x6f0
   161a8:	ldr	r0, [sp, #44]	; 0x2c
   161ac:	vmov	s13, r2
   161b0:	vcvt.f64.s32	d6, s13
   161b4:	vmul.f64	d6, d6, d0
   161b8:	vcvt.s32.f64	s13, d6
   161bc:	vmov	r2, s13
   161c0:	add	r3, r0, r0, lsl #1
   161c4:	rsb	r3, r3, r3, lsl #4
   161c8:	ldr	r1, [pc, #388]	; 16354 <main@@Base+0xf784>
   161cc:	lsl	r3, r3, #1
   161d0:	smull	ip, r1, r1, r3
   161d4:	asr	r3, r3, #31
   161d8:	add	r2, r2, r0
   161dc:	rsb	r3, r3, r1, asr #5
   161e0:	cmp	r2, r3
   161e4:	movlt	r2, r0
   161e8:	strlt	r3, [sp, #44]	; 0x2c
   161ec:	sublt	r1, r3, r2
   161f0:	blt	16220 <main@@Base+0xf650>
   161f4:	rsb	r3, r0, r0, lsl #3
   161f8:	rsb	r3, r0, r3, lsl #3
   161fc:	ldr	r1, [pc, #336]	; 16354 <main@@Base+0xf784>
   16200:	lsl	r3, r3, #1
   16204:	smull	ip, r1, r1, r3
   16208:	asr	r3, r3, #31
   1620c:	rsb	r3, r3, r1, asr #5
   16210:	cmp	r3, r2
   16214:	movge	r3, r2
   16218:	sub	r1, r3, r0
   1621c:	str	r3, [sp, #44]	; 0x2c
   16220:	ldr	r3, [sp, #48]	; 0x30
   16224:	mov	r0, #0
   16228:	ldrd	r2, [r3, #48]	; 0x30
   1622c:	strd	r2, [sp, #24]
   16230:	ldr	r2, [pc, #288]	; 16358 <main@@Base+0xf788>
   16234:	str	r1, [sp, #16]
   16238:	vstr	d5, [sp, #32]
   1623c:	vstr	d7, [sp, #8]
   16240:	vstr	d0, [sp]
   16244:	add	r2, pc, r2
   16248:	mov	r1, #56	; 0x38
   1624c:	bl	6188 <av_log@plt>
   16250:	ldr	ip, [r4]
   16254:	b	15cb8 <main@@Base+0xf0e8>
   16258:	lsrs	r5, r8, #1
   1625c:	ldr	r6, [sl, #1740]	; 0x6cc
   16260:	beq	15dcc <main@@Base+0xf1fc>
   16264:	add	r3, fp, #1048576	; 0x100000
   16268:	add	r2, fp, #5952	; 0x1740
   1626c:	add	r3, r3, #4096	; 0x1000
   16270:	add	r2, r2, #32
   16274:	str	r8, [sp, #44]	; 0x2c
   16278:	str	r9, [sp, #52]	; 0x34
   1627c:	mov	r8, r2
   16280:	mov	r9, r3
   16284:	ldr	r0, [r3, #1888]	; 0x760
   16288:	rsb	r4, r0, #524288	; 0x80000
   1628c:	cmp	r4, r5
   16290:	movge	r4, r5
   16294:	lsl	r7, r4, #1
   16298:	mov	r1, r6
   1629c:	add	r0, r8, r0, lsl #1
   162a0:	mov	r2, r7
   162a4:	bl	66f8 <memcpy@plt>
   162a8:	ldr	r0, [r9, #1888]	; 0x760
   162ac:	ldr	r3, [pc, #168]	; 1635c <main@@Base+0xf78c>
   162b0:	add	r0, r4, r0
   162b4:	cmp	r0, r3
   162b8:	movgt	r0, #0
   162bc:	movgt	r3, r0
   162c0:	sub	r5, r5, r4
   162c4:	strle	r0, [r9, #1888]	; 0x760
   162c8:	strgt	r3, [r9, #1888]	; 0x760
   162cc:	cmp	r5, #0
   162d0:	add	r6, r6, r7
   162d4:	bgt	16288 <main@@Base+0xf6b8>
   162d8:	ldr	r8, [sp, #44]	; 0x2c
   162dc:	ldr	r9, [sp, #52]	; 0x34
   162e0:	b	15dcc <main@@Base+0xf1fc>
   162e4:	vldr	d8, [pc, #92]	; 16348 <main@@Base+0xf778>
   162e8:	b	15fec <main@@Base+0xf41c>
   162ec:	ldr	r3, [fp, #108]	; 0x6c
   162f0:	cmp	r3, #0
   162f4:	beq	16408 <main@@Base+0xf838>
   162f8:	vldr	d8, [fp, #72]	; 0x48
   162fc:	b	16138 <main@@Base+0xf568>
   16300:	mov	r2, #0
   16304:	add	r3, fp, #5760	; 0x1680
   16308:	str	r2, [sl, #1688]	; 0x698
   1630c:	ldr	ip, [r4]
   16310:	vstr	d13, [r3]
   16314:	b	15cb8 <main@@Base+0xf0e8>
   16318:	ldr	ip, [r4]
   1631c:	ldrd	r6, [ip, #240]	; 0xf0
   16320:	b	15c90 <main@@Base+0xf0c0>
   16324:	add	r2, r2, #1
   16328:	str	r2, [sl, #1688]	; 0x698
   1632c:	ldr	ip, [r4]
   16330:	b	15cb8 <main@@Base+0xf0e8>
   16334:	nop	{0}
   16338:	andeq	r0, r0, r0
   1633c:	smlawbmi	lr, r0, r4, r8
   16340:	andeq	r0, r0, r0
   16344:	eormi	r0, r4, r0
   16348:	andeq	r0, r0, r0
   1634c:	svcvc	0x00f80000
   16350:	andeq	r3, r2, r4, lsr #2
   16354:	mvnpl	r8, pc, lsl r5
   16358:	andeq	pc, r0, ip, lsl #3
   1635c:	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
   16360:	andeq	pc, r0, ip, asr r1	; <UNPREDICTABLE>
   16364:	ldr	r2, [pc, #-12]	; 16360 <main@@Base+0xf790>
   16368:	mov	r1, #24
   1636c:	add	r2, pc, r2
   16370:	mov	r0, #0
   16374:	bl	6188 <av_log@plt>
   16378:	ldr	r0, [sl, #1872]	; 0x750
   1637c:	bl	6728 <swr_init@plt>
   16380:	cmp	r0, #0
   16384:	bge	160ec <main@@Base+0xf51c>
   16388:	add	r0, fp, #5952	; 0x1740
   1638c:	add	r0, r0, #16
   16390:	bl	6680 <swr_free@plt>
   16394:	b	160ec <main@@Base+0xf51c>
   16398:	bl	65f0 <av_gettime_relative@plt>
   1639c:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   163a0:	vldr	d6, [pc, #296]	; 164d0 <main@@Base+0xf900>
   163a4:	vmov	d7, r0, r1
   163a8:	vldr	d5, [fp, #88]	; 0x58
   163ac:	vdiv.f64	d7, d7, d6
   163b0:	vldr	d9, [fp, #80]	; 0x50
   163b4:	vldr	d6, [fp, #96]	; 0x60
   163b8:	vldr	d4, [pc, #280]	; 164d8 <main@@Base+0xf908>
   163bc:	vsub.f64	d5, d7, d5
   163c0:	vadd.f64	d9, d7, d9
   163c4:	vsub.f64	d6, d6, d4
   163c8:	vmla.f64	d9, d5, d6
   163cc:	b	1600c <main@@Base+0xf43c>
   163d0:	bl	65f0 <av_gettime_relative@plt>
   163d4:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   163d8:	vmov	d7, r0, r1
   163dc:	vldr	d5, [fp, #184]	; 0xb8
   163e0:	vdiv.f64	d7, d7, d9
   163e4:	vldr	d8, [fp, #176]	; 0xb0
   163e8:	vldr	d6, [fp, #192]	; 0xc0
   163ec:	vldr	d4, [pc, #228]	; 164d8 <main@@Base+0xf908>
   163f0:	vsub.f64	d5, d7, d5
   163f4:	vadd.f64	d8, d7, d8
   163f8:	vsub.f64	d6, d6, d4
   163fc:	ldr	r3, [fp, #104]	; 0x68
   16400:	vmla.f64	d8, d5, d6
   16404:	b	15fec <main@@Base+0xf41c>
   16408:	bl	65f0 <av_gettime_relative@plt>
   1640c:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   16410:	vmov	d6, r0, r1
   16414:	vldr	d7, [fp, #88]	; 0x58
   16418:	vdiv.f64	d4, d6, d12
   1641c:	vldr	d8, [fp, #80]	; 0x50
   16420:	vldr	d5, [fp, #96]	; 0x60
   16424:	vsub.f64	d7, d4, d7
   16428:	vadd.f64	d8, d4, d8
   1642c:	vsub.f64	d5, d5, d11
   16430:	vmla.f64	d8, d7, d5
   16434:	b	16138 <main@@Base+0xf568>
   16438:	ldr	r3, [r4]
   1643c:	ldr	r0, [r3, #80]	; 0x50
   16440:	ldr	r7, [r3, #232]	; 0xe8
   16444:	bl	64d0 <av_get_sample_fmt_name@plt>
   16448:	ldr	r3, [r4]
   1644c:	mov	r6, r0
   16450:	ldr	r0, [sl, #1856]	; 0x740
   16454:	ldr	r8, [r3, #352]	; 0x160
   16458:	ldr	r4, [sl, #1840]	; 0x730
   1645c:	bl	64d0 <av_get_sample_fmt_name@plt>
   16460:	ldr	r2, [sl, #1844]	; 0x734
   16464:	mov	r3, r7
   16468:	str	r2, [sp, #16]
   1646c:	ldr	r2, [pc, #108]	; 164e0 <main@@Base+0xf910>
   16470:	str	r0, [sp, #12]
   16474:	str	r8, [sp, #4]
   16478:	str	r4, [sp, #8]
   1647c:	str	r6, [sp]
   16480:	add	r2, pc, r2
   16484:	mov	r1, #16
   16488:	mov	r0, #0
   1648c:	bl	6188 <av_log@plt>
   16490:	mov	r0, r5
   16494:	bl	6680 <swr_free@plt>
   16498:	b	15f10 <main@@Base+0xf340>
   1649c:	ldr	r2, [pc, #64]	; 164e4 <main@@Base+0xf914>
   164a0:	mov	r0, r8
   164a4:	add	r2, pc, r2
   164a8:	mov	r1, #16
   164ac:	bl	6188 <av_log@plt>
   164b0:	b	15f10 <main@@Base+0xf340>
   164b4:	ldr	r2, [pc, #44]	; 164e8 <main@@Base+0xf918>
   164b8:	mov	r1, #16
   164bc:	add	r2, pc, r2
   164c0:	mov	r0, #0
   164c4:	bl	6188 <av_log@plt>
   164c8:	b	15f10 <main@@Base+0xf340>
   164cc:	bl	5e7c <__stack_chk_fail@plt>
   164d0:	andeq	r0, r0, r0
   164d4:	smlawbmi	lr, r0, r4, r8
   164d8:	andeq	r0, r0, r0
   164dc:	svccc	0x00f00000	; IMB
   164e0:	andeq	lr, r0, r0, lsl #31
   164e4:	andeq	lr, r0, r4, asr #31
   164e8:	strdeq	lr, [r0], -r4
   164ec:	push	{r4, r5, r6, lr}
   164f0:	vpush	{d8}
   164f4:	ldr	r3, [pc, #476]	; 166d8 <main@@Base+0xfb08>
   164f8:	ldr	r2, [pc, #476]	; 166dc <main@@Base+0xfb0c>
   164fc:	add	r3, pc, r3
   16500:	ldr	r6, [r3, r2]
   16504:	ldr	r1, [r0, #16]
   16508:	ldr	r2, [r6]
   1650c:	sub	sp, sp, #8
   16510:	cmp	r1, #0
   16514:	mov	r4, r0
   16518:	str	r2, [sp, #4]
   1651c:	bne	165ac <main@@Base+0xf9dc>
   16520:	ldr	r3, [r4, #208]	; 0xd0
   16524:	ldr	r5, [r4, #200]	; 0xc8
   16528:	ldr	r3, [r3]
   1652c:	cmp	r3, r5
   16530:	bne	16548 <main@@Base+0xf978>
   16534:	ldr	r3, [r4, #204]	; 0xcc
   16538:	cmp	r3, #0
   1653c:	beq	16644 <main@@Base+0xfa74>
   16540:	vldr	d8, [r4, #168]	; 0xa8
   16544:	b	1654c <main@@Base+0xf97c>
   16548:	vldr	d8, [pc, #368]	; 166c0 <main@@Base+0xfaf0>
   1654c:	bl	65f0 <av_gettime_relative@plt>
   16550:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   16554:	vldr	d6, [pc, #364]	; 166c8 <main@@Base+0xfaf8>
   16558:	vmov	d7, r0, r1
   1655c:	vdiv.f64	d7, d7, d6
   16560:	ldr	r3, [r4, #16]
   16564:	vsub.f64	d6, d8, d7
   16568:	clz	r3, r3
   1656c:	ldr	r1, [sp, #4]
   16570:	ldr	r2, [r6]
   16574:	lsr	r3, r3, #5
   16578:	cmp	r1, r2
   1657c:	vstr	d8, [r4, #168]	; 0xa8
   16580:	str	r5, [r4, #200]	; 0xc8
   16584:	vstr	d6, [r4, #176]	; 0xb0
   16588:	vstr	d7, [r4, #184]	; 0xb8
   1658c:	str	r3, [r4, #204]	; 0xcc
   16590:	str	r3, [r4, #156]	; 0x9c
   16594:	str	r3, [r4, #108]	; 0x6c
   16598:	str	r3, [r4, #16]
   1659c:	bne	166bc <main@@Base+0xfaec>
   165a0:	add	sp, sp, #8
   165a4:	vpop	{d8}
   165a8:	pop	{r4, r5, r6, pc}
   165ac:	bl	65f0 <av_gettime_relative@plt>
   165b0:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   165b4:	vldr	d5, [pc, #268]	; 166c8 <main@@Base+0xfaf8>
   165b8:	vmov	d7, r0, r1
   165bc:	vldr	d6, [r4, #136]	; 0x88
   165c0:	vdiv.f64	d7, d7, d5
   165c4:	add	r3, r4, #1048576	; 0x100000
   165c8:	add	r3, r3, #6080	; 0x17c0
   165cc:	vsub.f64	d7, d7, d6
   165d0:	vldr	d6, [r3]
   165d4:	vadd.f64	d7, d7, d6
   165d8:	ldr	r2, [r4, #56]	; 0x38
   165dc:	vstr	d7, [r3]
   165e0:	cmn	r2, #38	; 0x26
   165e4:	movne	r3, #0
   165e8:	strne	r3, [r4, #156]	; 0x9c
   165ec:	ldr	r3, [r4, #160]	; 0xa0
   165f0:	ldr	r5, [r4, #152]	; 0x98
   165f4:	ldr	r3, [r3]
   165f8:	cmp	r3, r5
   165fc:	bne	1663c <main@@Base+0xfa6c>
   16600:	ldr	r3, [r4, #156]	; 0x9c
   16604:	cmp	r3, #0
   16608:	beq	16680 <main@@Base+0xfab0>
   1660c:	vldr	d8, [r4, #120]	; 0x78
   16610:	bl	65f0 <av_gettime_relative@plt>
   16614:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   16618:	vldr	d6, [pc, #168]	; 166c8 <main@@Base+0xfaf8>
   1661c:	vmov	d7, r0, r1
   16620:	vdiv.f64	d7, d7, d6
   16624:	vsub.f64	d6, d8, d7
   16628:	vstr	d8, [r4, #120]	; 0x78
   1662c:	vstr	d6, [r4, #128]	; 0x80
   16630:	vstr	d7, [r4, #136]	; 0x88
   16634:	str	r5, [r4, #152]	; 0x98
   16638:	b	16520 <main@@Base+0xf950>
   1663c:	vldr	d8, [pc, #124]	; 166c0 <main@@Base+0xfaf0>
   16640:	b	16610 <main@@Base+0xfa40>
   16644:	bl	65f0 <av_gettime_relative@plt>
   16648:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   1664c:	vldr	d7, [pc, #116]	; 166c8 <main@@Base+0xfaf8>
   16650:	vmov	d5, r0, r1
   16654:	vldr	d6, [r4, #184]	; 0xb8
   16658:	vdiv.f64	d8, d5, d7
   1665c:	vldr	d4, [pc, #108]	; 166d0 <main@@Base+0xfb00>
   16660:	vldr	d5, [r4, #176]	; 0xb0
   16664:	vldr	d7, [r4, #192]	; 0xc0
   16668:	vsub.f64	d6, d8, d6
   1666c:	vsub.f64	d7, d7, d4
   16670:	vadd.f64	d8, d8, d5
   16674:	ldr	r5, [r4, #200]	; 0xc8
   16678:	vmla.f64	d8, d6, d7
   1667c:	b	1654c <main@@Base+0xf97c>
   16680:	bl	65f0 <av_gettime_relative@plt>
   16684:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   16688:	vldr	d7, [pc, #56]	; 166c8 <main@@Base+0xfaf8>
   1668c:	vmov	d5, r0, r1
   16690:	vldr	d6, [r4, #136]	; 0x88
   16694:	vdiv.f64	d8, d5, d7
   16698:	vldr	d4, [pc, #48]	; 166d0 <main@@Base+0xfb00>
   1669c:	vldr	d5, [r4, #128]	; 0x80
   166a0:	vldr	d7, [r4, #144]	; 0x90
   166a4:	vsub.f64	d6, d8, d6
   166a8:	vsub.f64	d7, d7, d4
   166ac:	vadd.f64	d8, d8, d5
   166b0:	ldr	r5, [r4, #152]	; 0x98
   166b4:	vmla.f64	d8, d6, d7
   166b8:	b	16610 <main@@Base+0xfa40>
   166bc:	bl	5e7c <__stack_chk_fail@plt>
   166c0:	andeq	r0, r0, r0
   166c4:	svcvc	0x00f80000
   166c8:	andeq	r0, r0, r0
   166cc:	smlawbmi	lr, r0, r4, r8
   166d0:	andeq	r0, r0, r0
   166d4:	svccc	0x00f00000	; IMB
   166d8:	muleq	r2, r8, r5
   166dc:	andeq	r0, r0, r8, asr r5
   166e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166e4:	ldr	r3, [pc, #976]	; 16abc <main@@Base+0xfeec>
   166e8:	ldr	r2, [pc, #976]	; 16ac0 <main@@Base+0xfef0>
   166ec:	add	r3, pc, r3
   166f0:	ldr	r2, [r3, r2]
   166f4:	sub	sp, sp, #20
   166f8:	ldr	r3, [r2]
   166fc:	subs	r6, r1, #0
   16700:	str	r2, [sp, #4]
   16704:	str	r3, [sp, #12]
   16708:	blt	16768 <main@@Base+0xfb98>
   1670c:	ldr	r9, [r0, #60]	; 0x3c
   16710:	mov	r4, r0
   16714:	ldr	r3, [r9, #24]
   16718:	cmp	r3, r6
   1671c:	bls	16768 <main@@Base+0xfb98>
   16720:	ldr	r3, [r9, #28]
   16724:	ldr	r3, [r3, r6, lsl #2]
   16728:	ldr	sl, [r3, #176]	; 0xb0
   1672c:	ldr	r5, [sl]
   16730:	cmp	r5, #1
   16734:	beq	16984 <main@@Base+0xfdb4>
   16738:	cmp	r5, #3
   1673c:	beq	168a8 <main@@Base+0xfcd8>
   16740:	cmp	r5, #0
   16744:	beq	167d0 <main@@Base+0xfc00>
   16748:	mov	r2, #48	; 0x30
   1674c:	cmp	r5, #1
   16750:	str	r2, [r3, #52]	; 0x34
   16754:	beq	167b8 <main@@Base+0xfbe8>
   16758:	cmp	r5, #3
   1675c:	beq	1679c <main@@Base+0xfbcc>
   16760:	cmp	r5, #0
   16764:	beq	16784 <main@@Base+0xfbb4>
   16768:	ldr	r3, [sp, #4]
   1676c:	ldr	r2, [sp, #12]
   16770:	ldr	r3, [r3]
   16774:	cmp	r2, r3
   16778:	bne	16ab8 <main@@Base+0xfee8>
   1677c:	add	sp, sp, #20
   16780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16784:	mvn	r3, #0
   16788:	add	r4, r4, #1048576	; 0x100000
   1678c:	add	r4, r4, #4096	; 0x1000
   16790:	str	r5, [r4, #2012]	; 0x7dc
   16794:	str	r3, [r4, #2008]	; 0x7d8
   16798:	b	16768 <main@@Base+0xfb98>
   1679c:	mov	r2, #0
   167a0:	mvn	r3, #0
   167a4:	add	r4, r4, #1048576	; 0x100000
   167a8:	add	r4, r4, #4096	; 0x1000
   167ac:	str	r2, [r4, #1936]	; 0x790
   167b0:	str	r3, [r4, #1932]	; 0x78c
   167b4:	b	16768 <main@@Base+0xfb98>
   167b8:	mov	r2, #0
   167bc:	mvn	r3, #0
   167c0:	add	r4, r4, #4096	; 0x1000
   167c4:	str	r2, [r4, #1692]	; 0x69c
   167c8:	str	r3, [r4, #1640]	; 0x668
   167cc:	b	16768 <main@@Base+0xfb98>
   167d0:	add	r7, r0, #4096	; 0x1000
   167d4:	ldr	fp, [r7, #1440]	; 0x5a0
   167d8:	ldr	r0, [fp, #32]
   167dc:	bl	6b3c <SDL_LockMutex@plt>
   167e0:	mov	r3, #1
   167e4:	ldr	r0, [fp, #36]	; 0x24
   167e8:	str	r3, [fp, #24]
   167ec:	bl	5dec <SDL_CondSignal@plt>
   167f0:	ldr	r0, [fp, #32]
   167f4:	bl	6290 <SDL_UnlockMutex@plt>
   167f8:	ldr	r0, [r4, #1904]	; 0x770
   167fc:	bl	6b3c <SDL_LockMutex@plt>
   16800:	ldr	r0, [r4, #1908]	; 0x774
   16804:	bl	5dec <SDL_CondSignal@plt>
   16808:	ldr	r0, [r4, #1904]	; 0x770
   1680c:	bl	6290 <SDL_UnlockMutex@plt>
   16810:	mov	r1, r5
   16814:	ldr	r0, [r7, #1496]	; 0x5d8
   16818:	bl	5e10 <SDL_WaitThread@plt>
   1681c:	ldr	fp, [r7, #1440]	; 0x5a0
   16820:	str	r5, [r7, #1496]	; 0x5d8
   16824:	ldr	r0, [fp, #32]
   16828:	bl	6b3c <SDL_LockMutex@plt>
   1682c:	ldr	r0, [fp]
   16830:	cmp	r0, #0
   16834:	str	r0, [sp, #8]
   16838:	beq	1685c <main@@Base+0xfc8c>
   1683c:	add	r7, sp, #8
   16840:	ldr	r5, [r0, #72]	; 0x48
   16844:	bl	6a28 <av_packet_unref@plt>
   16848:	mov	r0, r7
   1684c:	bl	5df8 <av_freep@plt>
   16850:	subs	r0, r5, #0
   16854:	str	r5, [sp, #8]
   16858:	bne	16840 <main@@Base+0xfc70>
   1685c:	mov	r3, #0
   16860:	mov	r1, #0
   16864:	mov	r0, #0
   16868:	str	r3, [fp, #4]
   1686c:	strd	r0, [fp, #16]
   16870:	str	r3, [fp]
   16874:	str	r3, [fp, #8]
   16878:	str	r3, [fp, #12]
   1687c:	add	r5, r4, #5440	; 0x1540
   16880:	ldr	r0, [fp, #32]
   16884:	bl	6290 <SDL_UnlockMutex@plt>
   16888:	add	r0, r5, #24
   1688c:	bl	6a28 <av_packet_unref@plt>
   16890:	add	r0, r5, #100	; 0x64
   16894:	bl	6998 <avcodec_free_context@plt>
   16898:	ldr	r3, [r9, #28]
   1689c:	ldr	r5, [sl]
   168a0:	ldr	r3, [r3, r6, lsl #2]
   168a4:	b	16748 <main@@Base+0xfb78>
   168a8:	add	r5, r0, #4096	; 0x1000
   168ac:	ldr	r7, [r5, #1576]	; 0x628
   168b0:	ldr	r0, [r7, #32]
   168b4:	bl	6b3c <SDL_LockMutex@plt>
   168b8:	mov	r3, #1
   168bc:	ldr	r0, [r7, #36]	; 0x24
   168c0:	str	r3, [r7, #24]
   168c4:	bl	5dec <SDL_CondSignal@plt>
   168c8:	ldr	r0, [r7, #32]
   168cc:	bl	6290 <SDL_UnlockMutex@plt>
   168d0:	ldr	r0, [r4, #3608]	; 0xe18
   168d4:	bl	6b3c <SDL_LockMutex@plt>
   168d8:	ldr	r0, [r4, #3612]	; 0xe1c
   168dc:	bl	5dec <SDL_CondSignal@plt>
   168e0:	ldr	r0, [r4, #3608]	; 0xe18
   168e4:	bl	6290 <SDL_UnlockMutex@plt>
   168e8:	ldr	r0, [r5, #1632]	; 0x660
   168ec:	mov	r1, #0
   168f0:	bl	5e10 <SDL_WaitThread@plt>
   168f4:	mov	r3, #0
   168f8:	ldr	fp, [r5, #1576]	; 0x628
   168fc:	str	r3, [r5, #1632]	; 0x660
   16900:	ldr	r0, [fp, #32]
   16904:	bl	6b3c <SDL_LockMutex@plt>
   16908:	ldr	r0, [fp]
   1690c:	cmp	r0, #0
   16910:	str	r0, [sp, #8]
   16914:	beq	16938 <main@@Base+0xfd68>
   16918:	add	r7, sp, #8
   1691c:	ldr	r5, [r0, #72]	; 0x48
   16920:	bl	6a28 <av_packet_unref@plt>
   16924:	mov	r0, r7
   16928:	bl	5df8 <av_freep@plt>
   1692c:	subs	r0, r5, #0
   16930:	str	r5, [sp, #8]
   16934:	bne	1691c <main@@Base+0xfd4c>
   16938:	mov	r3, #0
   1693c:	mov	r1, #0
   16940:	mov	r0, #0
   16944:	str	r3, [fp, #4]
   16948:	str	r3, [fp]
   1694c:	str	r3, [fp, #8]
   16950:	str	r3, [fp, #12]
   16954:	strd	r0, [fp, #16]
   16958:	add	r5, r4, #5568	; 0x15c0
   1695c:	ldr	r0, [fp, #32]
   16960:	bl	6290 <SDL_UnlockMutex@plt>
   16964:	add	r0, r5, #32
   16968:	bl	6a28 <av_packet_unref@plt>
   1696c:	add	r0, r5, #108	; 0x6c
   16970:	bl	6998 <avcodec_free_context@plt>
   16974:	ldr	r3, [r9, #28]
   16978:	ldr	r5, [sl]
   1697c:	ldr	r3, [r3, r6, lsl #2]
   16980:	b	16748 <main@@Base+0xfb78>
   16984:	add	fp, r0, #4096	; 0x1000
   16988:	ldr	r7, [fp, #1304]	; 0x518
   1698c:	ldr	r0, [r7, #32]
   16990:	bl	6b3c <SDL_LockMutex@plt>
   16994:	str	r5, [r7, #24]
   16998:	ldr	r0, [r7, #36]	; 0x24
   1699c:	bl	5dec <SDL_CondSignal@plt>
   169a0:	ldr	r0, [r7, #32]
   169a4:	bl	6290 <SDL_UnlockMutex@plt>
   169a8:	ldr	r0, [fp, #1216]	; 0x4c0
   169ac:	bl	6b3c <SDL_LockMutex@plt>
   169b0:	ldr	r0, [fp, #1220]	; 0x4c4
   169b4:	bl	5dec <SDL_CondSignal@plt>
   169b8:	ldr	r0, [fp, #1216]	; 0x4c0
   169bc:	bl	6290 <SDL_UnlockMutex@plt>
   169c0:	ldr	r0, [fp, #1360]	; 0x550
   169c4:	mov	r1, #0
   169c8:	bl	5e10 <SDL_WaitThread@plt>
   169cc:	mov	r3, #0
   169d0:	ldr	r5, [fp, #1304]	; 0x518
   169d4:	str	r3, [fp, #1360]	; 0x550
   169d8:	ldr	r0, [r5, #32]
   169dc:	bl	6b3c <SDL_LockMutex@plt>
   169e0:	ldr	r0, [r5]
   169e4:	cmp	r0, #0
   169e8:	str	r0, [sp, #8]
   169ec:	beq	16a10 <main@@Base+0xfe40>
   169f0:	add	r7, sp, #8
   169f4:	ldr	r8, [r0, #72]	; 0x48
   169f8:	bl	6a28 <av_packet_unref@plt>
   169fc:	mov	r0, r7
   16a00:	bl	5df8 <av_freep@plt>
   16a04:	subs	r0, r8, #0
   16a08:	str	r8, [sp, #8]
   16a0c:	bne	169f4 <main@@Base+0xfe24>
   16a10:	mov	r7, #0
   16a14:	mov	r2, #0
   16a18:	mov	r3, #0
   16a1c:	str	r7, [r5, #4]
   16a20:	strd	r2, [r5, #16]
   16a24:	str	r7, [r5]
   16a28:	str	r7, [r5, #8]
   16a2c:	str	r7, [r5, #12]
   16a30:	ldr	r0, [r5, #32]
   16a34:	bl	6290 <SDL_UnlockMutex@plt>
   16a38:	ldr	r3, [pc, #132]	; 16ac4 <main@@Base+0xfef4>
   16a3c:	add	r5, r4, #5312	; 0x14c0
   16a40:	add	r3, pc, r3
   16a44:	ldr	r0, [r3, #236]	; 0xec
   16a48:	bl	6980 <SDL_CloseAudioDevice@plt>
   16a4c:	add	r0, r5, #16
   16a50:	bl	6a28 <av_packet_unref@plt>
   16a54:	add	r0, r5, #92	; 0x5c
   16a58:	bl	6998 <avcodec_free_context@plt>
   16a5c:	add	r0, r4, #5952	; 0x1740
   16a60:	add	r0, r0, #16
   16a64:	bl	6680 <swr_free@plt>
   16a68:	add	r5, r4, #1048576	; 0x100000
   16a6c:	add	r0, r4, #5824	; 0x16c0
   16a70:	add	r0, r0, #16
   16a74:	add	r5, r5, #4096	; 0x1000
   16a78:	bl	5df8 <av_freep@plt>
   16a7c:	ldr	r0, [r5, #1896]	; 0x768
   16a80:	str	r7, [fp, #1752]	; 0x6d8
   16a84:	cmp	r0, r7
   16a88:	str	r7, [fp, #1740]	; 0x6cc
   16a8c:	beq	16898 <main@@Base+0xfcc8>
   16a90:	bl	60e0 <av_rdft_end@plt>
   16a94:	ldr	r0, [pc, #44]	; 16ac8 <main@@Base+0xfef8>
   16a98:	add	r0, r4, r0
   16a9c:	bl	5df8 <av_freep@plt>
   16aa0:	ldr	r3, [r9, #28]
   16aa4:	str	r7, [r5, #1896]	; 0x768
   16aa8:	ldr	r3, [r3, r6, lsl #2]
   16aac:	str	r7, [r5, #1900]	; 0x76c
   16ab0:	ldr	r5, [sl]
   16ab4:	b	16748 <main@@Base+0xfb78>
   16ab8:	bl	5e7c <__stack_chk_fail@plt>
   16abc:	andeq	r2, r2, r8, lsr #7
   16ac0:	andeq	r0, r0, r8, asr r5
   16ac4:	andeq	r2, r2, r0, lsl #13
   16ac8:	andseq	r1, r0, r0, ror r7
   16acc:	push	{r4, r5, r6, lr}
   16ad0:	mov	r1, #1
   16ad4:	mov	r4, r0
   16ad8:	ldr	r3, [pc, #296]	; 16c08 <main@@Base+0x10038>
   16adc:	ldr	r2, [pc, #296]	; 16c0c <main@@Base+0x1003c>
   16ae0:	add	r3, pc, r3
   16ae4:	ldr	r6, [r3, r2]
   16ae8:	sub	sp, sp, #8
   16aec:	ldr	r2, [r6]
   16af0:	ldr	r0, [r0]
   16af4:	str	r1, [r4, #8]
   16af8:	mov	r1, #0
   16afc:	str	r2, [sp, #4]
   16b00:	bl	5e10 <SDL_WaitThread@plt>
   16b04:	add	r3, r4, #4096	; 0x1000
   16b08:	ldr	r1, [r3, #1640]	; 0x668
   16b0c:	cmp	r1, #0
   16b10:	blt	16b1c <main@@Base+0xff4c>
   16b14:	mov	r0, r4
   16b18:	bl	166e0 <main@@Base+0xfb10>
   16b1c:	add	r5, r4, #1048576	; 0x100000
   16b20:	add	r5, r5, #4096	; 0x1000
   16b24:	ldr	r1, [r5, #2008]	; 0x7d8
   16b28:	cmp	r1, #0
   16b2c:	blt	16b38 <main@@Base+0xff68>
   16b30:	mov	r0, r4
   16b34:	bl	166e0 <main@@Base+0xfb10>
   16b38:	ldr	r1, [r5, #1932]	; 0x78c
   16b3c:	cmp	r1, #0
   16b40:	blt	16b4c <main@@Base+0xff7c>
   16b44:	mov	r0, r4
   16b48:	bl	166e0 <main@@Base+0xfb10>
   16b4c:	add	r0, r4, #60	; 0x3c
   16b50:	bl	683c <avformat_close_input@plt>
   16b54:	ldr	r0, [pc, #180]	; 16c10 <main@@Base+0x10040>
   16b58:	add	r0, r4, r0
   16b5c:	bl	11c94 <main@@Base+0xb0c4>
   16b60:	add	r0, r4, #5760	; 0x1680
   16b64:	add	r0, r0, #32
   16b68:	bl	11c94 <main@@Base+0xb0c4>
   16b6c:	ldr	r0, [pc, #160]	; 16c14 <main@@Base+0x10044>
   16b70:	add	r0, r4, r0
   16b74:	bl	11c94 <main@@Base+0xb0c4>
   16b78:	add	r0, r4, #216	; 0xd8
   16b7c:	bl	11d4c <main@@Base+0xb17c>
   16b80:	add	r0, r4, #3616	; 0xe20
   16b84:	add	r0, r0, #8
   16b88:	bl	11d4c <main@@Base+0xb17c>
   16b8c:	add	r0, r4, #1920	; 0x780
   16b90:	bl	11d4c <main@@Base+0xb17c>
   16b94:	ldr	r0, [r5, #2136]	; 0x858
   16b98:	bl	6920 <SDL_DestroyCond@plt>
   16b9c:	ldr	r0, [r5, #2064]	; 0x810
   16ba0:	bl	6344 <sws_freeContext@plt>
   16ba4:	ldr	r0, [r5, #2068]	; 0x814
   16ba8:	bl	6344 <sws_freeContext@plt>
   16bac:	ldr	r0, [r5, #2076]	; 0x81c
   16bb0:	bl	69b0 <av_free@plt>
   16bb4:	ldr	r0, [r5, #1920]	; 0x780
   16bb8:	cmp	r0, #0
   16bbc:	beq	16bc4 <main@@Base+0xfff4>
   16bc0:	bl	61ac <SDL_DestroyTexture@plt>
   16bc4:	ldr	r0, [r5, #1928]	; 0x788
   16bc8:	cmp	r0, #0
   16bcc:	beq	16bd4 <main@@Base+0x10004>
   16bd0:	bl	61ac <SDL_DestroyTexture@plt>
   16bd4:	ldr	r0, [r5, #1924]	; 0x784
   16bd8:	cmp	r0, #0
   16bdc:	beq	16be4 <main@@Base+0x10014>
   16be0:	bl	61ac <SDL_DestroyTexture@plt>
   16be4:	ldr	r2, [sp, #4]
   16be8:	ldr	r3, [r6]
   16bec:	cmp	r2, r3
   16bf0:	bne	16c04 <main@@Base+0x10034>
   16bf4:	mov	r0, r4
   16bf8:	add	sp, sp, #8
   16bfc:	pop	{r4, r5, r6, lr}
   16c00:	b	69b0 <av_free@plt>
   16c04:	bl	5e7c <__stack_chk_fail@plt>
   16c08:			; <UNDEFINED> instruction: 0x00021fb4
   16c0c:	andeq	r0, r0, r8, asr r5
   16c10:	andseq	r1, r0, r0, ror #15
   16c14:	mulseq	r0, r8, r7
   16c18:	push	{lr}		; (str lr, [sp, #-4]!)
   16c1c:	ldr	r3, [pc, #184]	; 16cdc <main@@Base+0x1010c>
   16c20:	ldr	r2, [pc, #184]	; 16ce0 <main@@Base+0x10110>
   16c24:	add	r3, pc, r3
   16c28:	ldr	r2, [r3, r2]
   16c2c:	sub	sp, sp, #12
   16c30:	ldr	r3, [r2]
   16c34:	cmp	r0, #0
   16c38:	str	r3, [sp, #4]
   16c3c:	beq	16c44 <main@@Base+0x10074>
   16c40:	bl	16acc <main@@Base+0xfefc>
   16c44:	ldr	r3, [pc, #152]	; 16ce4 <main@@Base+0x10114>
   16c48:	add	r3, pc, r3
   16c4c:	ldr	r0, [r3, #176]	; 0xb0
   16c50:	cmp	r0, #0
   16c54:	beq	16c5c <main@@Base+0x1008c>
   16c58:	bl	6074 <SDL_DestroyRenderer@plt>
   16c5c:	ldr	r3, [pc, #132]	; 16ce8 <main@@Base+0x10118>
   16c60:	add	r3, pc, r3
   16c64:	ldr	r0, [r3, #204]	; 0xcc
   16c68:	cmp	r0, #0
   16c6c:	beq	16c74 <main@@Base+0x100a4>
   16c70:	bl	671c <SDL_DestroyWindow@plt>
   16c74:	bl	a828 <main@@Base+0x3c58>
   16c78:	ldr	r0, [pc, #108]	; 16cec <main@@Base+0x1011c>
   16c7c:	add	r0, pc, r0
   16c80:	add	r0, r0, #12
   16c84:	bl	5df8 <av_freep@plt>
   16c88:	bl	6764 <avformat_network_deinit@plt>
   16c8c:	ldr	r3, [pc, #92]	; 16cf0 <main@@Base+0x10120>
   16c90:	add	r3, pc, r3
   16c94:	ldr	r3, [r3, #52]	; 0x34
   16c98:	cmp	r3, #0
   16c9c:	bne	16cc8 <main@@Base+0x100f8>
   16ca0:	bl	5ec4 <SDL_Quit@plt>
   16ca4:	ldr	r3, [pc, #72]	; 16cf4 <main@@Base+0x10124>
   16ca8:	ldr	r2, [pc, #72]	; 16cf8 <main@@Base+0x10128>
   16cac:	mov	r0, #0
   16cb0:	add	r3, pc, r3
   16cb4:	add	r2, pc, r2
   16cb8:	mvn	r1, #7
   16cbc:	bl	6188 <av_log@plt>
   16cc0:	mov	r0, #0
   16cc4:	bl	6adc <exit@plt>
   16cc8:	ldr	r1, [pc, #44]	; 16cfc <main@@Base+0x1012c>
   16ccc:	mov	r0, #1
   16cd0:	add	r1, pc, r1
   16cd4:	bl	6a1c <__printf_chk@plt>
   16cd8:	b	16ca0 <main@@Base+0x100d0>
   16cdc:	andeq	r1, r2, r0, ror lr
   16ce0:	andeq	r0, r0, r8, asr r5
   16ce4:	andeq	r2, r2, r8, ror r4
   16ce8:	andeq	r2, r2, r0, ror #8
   16cec:	andeq	r2, r2, r4, asr #8
   16cf0:	andeq	r2, r2, r0, asr #7
   16cf4:			; <UNDEFINED> instruction: 0x0000e7b4
   16cf8:	ldrdeq	r0, [r1], -r4
   16cfc:	andeq	lr, r0, r8, ror #31
   16d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d04:	ldr	r3, [pc, #648]	; 16f94 <main@@Base+0x103c4>
   16d08:	ldr	r2, [pc, #648]	; 16f98 <main@@Base+0x103c8>
   16d0c:	add	r3, pc, r3
   16d10:	ldr	r8, [r3, r2]
   16d14:	add	sl, r0, #1048576	; 0x100000
   16d18:	mov	r6, r0
   16d1c:	ldr	r0, [r0, #60]	; 0x3c
   16d20:	ldr	r2, [r8]
   16d24:	sub	sp, sp, #20
   16d28:	add	sl, sl, #4096	; 0x1000
   16d2c:	subs	r5, r1, #0
   16d30:	ldr	r7, [sl, #2008]	; 0x7d8
   16d34:	str	r2, [sp, #12]
   16d38:	ldr	r9, [r0, #24]
   16d3c:	bne	16e3c <main@@Base+0x1026c>
   16d40:	ldr	r4, [sl, #2124]	; 0x84c
   16d44:	mov	r0, r5
   16d48:	mov	r1, r4
   16d4c:	add	r4, r4, #1
   16d50:	cmp	r9, r4
   16d54:	bgt	16d64 <main@@Base+0x10194>
   16d58:	cmn	r1, #1
   16d5c:	beq	16ed4 <main@@Base+0x10304>
   16d60:	mov	r4, #0
   16d64:	cmp	r1, r4
   16d68:	beq	16ed4 <main@@Base+0x10304>
   16d6c:	ldr	r3, [r6, #60]	; 0x3c
   16d70:	cmp	r0, #0
   16d74:	lsl	ip, r4, #2
   16d78:	ldr	r2, [r3, #28]
   16d7c:	moveq	r3, ip
   16d80:	ldrne	r3, [r0, #12]
   16d84:	ldrne	r3, [r3, r4, lsl #2]
   16d88:	lslne	r3, r3, #2
   16d8c:	ldr	r3, [r2, r3]
   16d90:	ldr	r3, [r3, #176]	; 0xb0
   16d94:	ldr	r2, [r3]
   16d98:	cmp	r2, r5
   16d9c:	bne	16d4c <main@@Base+0x1017c>
   16da0:	cmp	r5, #1
   16da4:	beq	16e20 <main@@Base+0x10250>
   16da8:	cmp	r5, #3
   16dac:	beq	16db8 <main@@Base+0x101e8>
   16db0:	cmp	r5, #0
   16db4:	bne	16d4c <main@@Base+0x1017c>
   16db8:	cmp	r0, #0
   16dbc:	cmnne	r4, #1
   16dc0:	ldrne	r3, [r0, #12]
   16dc4:	ldrne	r4, [r3, ip]
   16dc8:	mov	r0, r5
   16dcc:	bl	6af4 <av_get_media_type_string@plt>
   16dd0:	ldr	r2, [pc, #452]	; 16f9c <main@@Base+0x103cc>
   16dd4:	mov	r3, r0
   16dd8:	add	r2, pc, r2
   16ddc:	mov	r1, #32
   16de0:	mov	r0, #0
   16de4:	str	r4, [sp, #4]
   16de8:	str	r7, [sp]
   16dec:	bl	6188 <av_log@plt>
   16df0:	mov	r1, r7
   16df4:	mov	r0, r6
   16df8:	bl	166e0 <main@@Base+0xfb10>
   16dfc:	ldr	r2, [sp, #12]
   16e00:	ldr	r3, [r8]
   16e04:	cmp	r2, r3
   16e08:	bne	16f80 <main@@Base+0x103b0>
   16e0c:	mov	r1, r4
   16e10:	mov	r0, r6
   16e14:	add	sp, sp, #20
   16e18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e1c:	b	14394 <main@@Base+0xd7c4>
   16e20:	ldr	r2, [r3, #108]	; 0x6c
   16e24:	cmp	r2, #0
   16e28:	beq	16d4c <main@@Base+0x1017c>
   16e2c:	ldr	r3, [r3, #104]	; 0x68
   16e30:	cmp	r3, #0
   16e34:	beq	16d4c <main@@Base+0x1017c>
   16e38:	b	16db8 <main@@Base+0x101e8>
   16e3c:	cmp	r5, #1
   16e40:	beq	16eec <main@@Base+0x1031c>
   16e44:	ldr	fp, [sl, #1932]	; 0x78c
   16e48:	cmn	r7, #1
   16e4c:	ldr	r4, [sl, #2132]	; 0x854
   16e50:	moveq	r7, fp
   16e54:	moveq	r0, #0
   16e58:	bne	16e74 <main@@Base+0x102a4>
   16e5c:	cmp	r5, #3
   16e60:	addeq	r3, r4, #1
   16e64:	moveq	r1, r4
   16e68:	beq	16f50 <main@@Base+0x10380>
   16e6c:	mov	r1, r4
   16e70:	b	16d4c <main@@Base+0x1017c>
   16e74:	mov	r2, r7
   16e78:	mov	r1, #0
   16e7c:	bl	64b8 <av_find_program_from_stream@plt>
   16e80:	cmp	r0, #0
   16e84:	moveq	r7, fp
   16e88:	beq	16e5c <main@@Base+0x1028c>
   16e8c:	ldr	r1, [r0, #16]
   16e90:	cmp	r1, #0
   16e94:	ble	16f68 <main@@Base+0x10398>
   16e98:	ldr	r3, [r0, #12]
   16e9c:	mov	r9, #0
   16ea0:	ldr	r2, [r3]
   16ea4:	cmp	r2, r4
   16ea8:	bne	16ebc <main@@Base+0x102ec>
   16eac:	b	16f70 <main@@Base+0x103a0>
   16eb0:	ldr	r2, [r3, #4]!
   16eb4:	cmp	r2, r4
   16eb8:	beq	16f70 <main@@Base+0x103a0>
   16ebc:	add	r9, r9, #1
   16ec0:	cmp	r1, r9
   16ec4:	bne	16eb0 <main@@Base+0x102e0>
   16ec8:	mov	r7, fp
   16ecc:	mvn	r4, #0
   16ed0:	b	16e5c <main@@Base+0x1028c>
   16ed4:	ldr	r2, [sp, #12]
   16ed8:	ldr	r3, [r8]
   16edc:	cmp	r2, r3
   16ee0:	bne	16f80 <main@@Base+0x103b0>
   16ee4:	add	sp, sp, #20
   16ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16eec:	add	r3, r6, #4096	; 0x1000
   16ef0:	cmn	r7, #1
   16ef4:	ldr	fp, [r3, #1640]	; 0x668
   16ef8:	ldr	r4, [sl, #2128]	; 0x850
   16efc:	bne	16e74 <main@@Base+0x102a4>
   16f00:	mov	r7, fp
   16f04:	mov	r1, r4
   16f08:	mov	r0, #0
   16f0c:	b	16d4c <main@@Base+0x1017c>
   16f10:	cmp	r1, r3
   16f14:	beq	16ed4 <main@@Base+0x10304>
   16f18:	ldr	r2, [r6, #60]	; 0x3c
   16f1c:	cmp	r0, #0
   16f20:	lsl	ip, r3, #2
   16f24:	ldr	lr, [r2, #28]
   16f28:	moveq	r2, ip
   16f2c:	ldrne	r2, [r0, #12]
   16f30:	ldrne	r2, [r2, r3, lsl #2]
   16f34:	lslne	r2, r2, #2
   16f38:	ldr	r2, [lr, r2]
   16f3c:	ldr	r2, [r2, #176]	; 0xb0
   16f40:	ldr	r2, [r2]
   16f44:	cmp	r2, #3
   16f48:	beq	16db8 <main@@Base+0x101e8>
   16f4c:	add	r3, r3, #1
   16f50:	cmp	r3, r9
   16f54:	mov	r4, r3
   16f58:	blt	16f10 <main@@Base+0x10340>
   16f5c:	mvn	r4, #0
   16f60:	str	r4, [sl, #2132]	; 0x854
   16f64:	b	16dc8 <main@@Base+0x101f8>
   16f68:	beq	16f84 <main@@Base+0x103b4>
   16f6c:	mov	r9, #0
   16f70:	mov	r4, r9
   16f74:	mov	r7, fp
   16f78:	mov	r9, r1
   16f7c:	b	16e5c <main@@Base+0x1028c>
   16f80:	bl	5e7c <__stack_chk_fail@plt>
   16f84:	mov	r7, fp
   16f88:	mov	r9, r1
   16f8c:	mvn	r4, #0
   16f90:	b	16e5c <main@@Base+0x1028c>
   16f94:	andeq	r1, r2, r8, lsl #27
   16f98:	andeq	r0, r0, r8, asr r5
   16f9c:	andeq	lr, r0, r4, lsl r7
   16fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fa4:	vpush	{d8-d11}
   16fa8:	mov	r7, #0
   16fac:	ldr	r4, [pc, #820]	; 172e8 <main@@Base+0x10718>
   16fb0:	ldr	r3, [pc, #820]	; 172ec <main@@Base+0x1071c>
   16fb4:	add	r4, pc, r4
   16fb8:	ldr	r3, [r4, r3]
   16fbc:	sub	sp, sp, #292	; 0x124
   16fc0:	str	r3, [sp, #28]
   16fc4:	ldr	r3, [r3]
   16fc8:	mov	sl, r0
   16fcc:	str	r3, [sp, #284]	; 0x11c
   16fd0:	str	r7, [sp, #52]	; 0x34
   16fd4:	bl	6200 <SDL_CreateMutex@plt>
   16fd8:	subs	r3, r0, #0
   16fdc:	str	r3, [sp, #24]
   16fe0:	beq	17f34 <main@@Base+0x11364>
   16fe4:	mvn	r3, #0
   16fe8:	add	fp, sl, #1048576	; 0x100000
   16fec:	add	fp, fp, #4096	; 0x1000
   16ff0:	add	r9, sl, #4096	; 0x1000
   16ff4:	str	r3, [fp, #2008]	; 0x7d8
   16ff8:	str	r3, [fp, #2124]	; 0x84c
   16ffc:	str	r3, [r9, #1640]	; 0x668
   17000:	str	r3, [fp, #2128]	; 0x850
   17004:	str	r3, [fp, #1932]	; 0x78c
   17008:	str	r3, [fp, #2132]	; 0x854
   1700c:	str	r7, [fp, #2072]	; 0x818
   17010:	str	r3, [sp, #204]	; 0xcc
   17014:	str	r3, [sp, #208]	; 0xd0
   17018:	str	r3, [sp, #212]	; 0xd4
   1701c:	str	r3, [sp, #216]	; 0xd8
   17020:	str	r3, [sp, #220]	; 0xdc
   17024:	bl	6488 <avformat_alloc_context@plt>
   17028:	cmp	r0, #0
   1702c:	str	r0, [sp, #52]	; 0x34
   17030:	beq	17f74 <main@@Base+0x113a4>
   17034:	ldr	r1, [pc, #692]	; 172f0 <main@@Base+0x10720>
   17038:	ldr	r2, [pc, #692]	; 172f4 <main@@Base+0x10724>
   1703c:	add	r1, pc, r1
   17040:	str	r1, [r0, #1184]	; 0x4a0
   17044:	str	sl, [r0, #1188]	; 0x4a4
   17048:	ldr	r6, [pc, #680]	; 172f8 <main@@Base+0x10728>
   1704c:	ldr	r5, [r4, r2]
   17050:	add	r6, pc, r6
   17054:	mov	r2, r7
   17058:	ldr	r0, [r5]
   1705c:	mov	r1, r6
   17060:	mov	r3, #1
   17064:	bl	6878 <av_dict_get@plt>
   17068:	subs	r7, r0, #0
   1706c:	beq	180bc <main@@Base+0x114ec>
   17070:	add	r3, sp, #52	; 0x34
   17074:	str	r3, [sp, #40]	; 0x28
   17078:	mov	r0, r3
   1707c:	ldr	r1, [fp, #2076]	; 0x81c
   17080:	mov	r3, r5
   17084:	ldr	r2, [sl, #4]
   17088:	bl	6674 <avformat_open_input@plt>
   1708c:	subs	r1, r0, #0
   17090:	blt	17838 <main@@Base+0x10c68>
   17094:	ldr	r1, [pc, #608]	; 172fc <main@@Base+0x1072c>
   17098:	ldr	r0, [r5]
   1709c:	mov	r3, #2
   170a0:	mov	r2, #0
   170a4:	add	r1, pc, r1
   170a8:	bl	6878 <av_dict_get@plt>
   170ac:	cmp	r0, #0
   170b0:	bne	17264 <main@@Base+0x10694>
   170b4:	ldr	r3, [pc, #580]	; 17300 <main@@Base+0x10730>
   170b8:	ldr	r0, [sp, #52]	; 0x34
   170bc:	add	r3, pc, r3
   170c0:	ldr	r3, [r3, #240]	; 0xf0
   170c4:	str	r0, [sl, #60]	; 0x3c
   170c8:	cmp	r3, #0
   170cc:	ldrne	r3, [r0, #1096]	; 0x448
   170d0:	orrne	r3, r3, #1
   170d4:	strne	r3, [r0, #1096]	; 0x448
   170d8:	bl	6974 <av_format_inject_global_side_data@plt>
   170dc:	ldr	r3, [pc, #544]	; 17304 <main@@Base+0x10734>
   170e0:	add	r3, pc, r3
   170e4:	ldr	r3, [r3, #56]	; 0x38
   170e8:	cmp	r3, #0
   170ec:	bne	1803c <main@@Base+0x1146c>
   170f0:	ldr	r6, [sp, #52]	; 0x34
   170f4:	ldr	r3, [r6, #16]
   170f8:	cmp	r3, #0
   170fc:	movne	r2, #0
   17100:	strne	r2, [r3, #48]	; 0x30
   17104:	ldr	r3, [pc, #508]	; 17308 <main@@Base+0x10738>
   17108:	ldr	r2, [r6, #4]
   1710c:	add	r3, pc, r3
   17110:	ldr	r3, [r3, #60]	; 0x3c
   17114:	ldr	r4, [r2, #8]
   17118:	cmp	r3, #0
   1711c:	and	r4, r4, #512	; 0x200
   17120:	blt	18008 <main@@Base+0x11438>
   17124:	vldr	d7, [pc, #428]	; 172d8 <main@@Base+0x10708>
   17128:	vldr	d6, [pc, #432]	; 172e0 <main@@Base+0x10710>
   1712c:	cmp	r4, #0
   17130:	vmoveq.f64	d7, d6
   17134:	ldr	r4, [pc, #464]	; 1730c <main@@Base+0x1073c>
   17138:	ldr	r2, [pc, #464]	; 17310 <main@@Base+0x10740>
   1713c:	add	r4, pc, r4
   17140:	ldr	r3, [r4, #208]	; 0xd0
   17144:	add	r2, sl, r2
   17148:	cmp	r3, #0
   1714c:	vstr	d7, [r2, #-8]
   17150:	beq	181a0 <main@@Base+0x115d0>
   17154:	mov	r3, #-2147483648	; 0x80000000
   17158:	mov	r2, #0
   1715c:	ldr	r1, [pc, #432]	; 17314 <main@@Base+0x10744>
   17160:	add	r1, pc, r1
   17164:	ldrd	r4, [r1, #16]
   17168:	cmp	r5, r3
   1716c:	cmpeq	r4, r2
   17170:	beq	171c8 <main@@Base+0x105f8>
   17174:	add	r1, r6, #1072	; 0x430
   17178:	ldrd	r0, [r1, #-8]
   1717c:	cmp	r1, r3
   17180:	cmpeq	r0, r2
   17184:	beq	17190 <main@@Base+0x105c0>
   17188:	adds	r4, r4, r0
   1718c:	adc	r5, r5, r1
   17190:	mov	r7, #0
   17194:	mvn	r2, #0
   17198:	mvn	r3, #-2147483648	; 0x80000000
   1719c:	strd	r4, [sp]
   171a0:	strd	r2, [sp, #8]
   171a4:	mov	r0, r6
   171a8:	str	r7, [sp, #16]
   171ac:	mov	r2, #0
   171b0:	mov	r3, #-2147483648	; 0x80000000
   171b4:	mvn	r1, #0
   171b8:	bl	6578 <avformat_seek_file@plt>
   171bc:	cmp	r0, r7
   171c0:	blt	17978 <main@@Base+0x10da8>
   171c4:	ldr	r6, [sp, #52]	; 0x34
   171c8:	ldr	r3, [r6, #4]
   171cc:	ldr	r1, [pc, #324]	; 17318 <main@@Base+0x10748>
   171d0:	ldr	r4, [r3]
   171d4:	add	r1, pc, r1
   171d8:	mov	r0, r4
   171dc:	bl	695c <strcmp@plt>
   171e0:	cmp	r0, #0
   171e4:	beq	1735c <main@@Base+0x1078c>
   171e8:	ldr	r1, [pc, #300]	; 1731c <main@@Base+0x1074c>
   171ec:	mov	r0, r4
   171f0:	add	r1, pc, r1
   171f4:	bl	695c <strcmp@plt>
   171f8:	cmp	r0, #0
   171fc:	beq	1735c <main@@Base+0x1078c>
   17200:	ldr	r1, [pc, #280]	; 17320 <main@@Base+0x10750>
   17204:	mov	r0, r4
   17208:	add	r1, pc, r1
   1720c:	bl	695c <strcmp@plt>
   17210:	cmp	r0, #0
   17214:	beq	1735c <main@@Base+0x1078c>
   17218:	ldr	r0, [r6, #16]
   1721c:	cmp	r0, #0
   17220:	beq	17360 <main@@Base+0x10790>
   17224:	ldr	r4, [r6, #1056]	; 0x420
   17228:	ldr	r1, [pc, #244]	; 17324 <main@@Base+0x10754>
   1722c:	mov	r2, #4
   17230:	mov	r0, r4
   17234:	add	r1, pc, r1
   17238:	bl	6554 <strncmp@plt>
   1723c:	cmp	r0, #0
   17240:	beq	1735c <main@@Base+0x1078c>
   17244:	ldr	r1, [pc, #220]	; 17328 <main@@Base+0x10758>
   17248:	mov	r0, r4
   1724c:	mov	r2, #4
   17250:	add	r1, pc, r1
   17254:	bl	6554 <strncmp@plt>
   17258:	clz	r0, r0
   1725c:	lsr	r0, r0, #5
   17260:	b	17360 <main@@Base+0x10790>
   17264:	ldr	r2, [pc, #192]	; 1732c <main@@Base+0x1075c>
   17268:	ldr	r3, [r0]
   1726c:	add	r2, pc, r2
   17270:	mov	r1, #16
   17274:	mov	r0, #0
   17278:	bl	6188 <av_log@plt>
   1727c:	ldr	r3, [sp, #52]	; 0x34
   17280:	cmp	r3, #0
   17284:	beq	17294 <main@@Base+0x106c4>
   17288:	ldr	r3, [sl, #60]	; 0x3c
   1728c:	cmp	r3, #0
   17290:	beq	18180 <main@@Base+0x115b0>
   17294:	ldr	r3, [pc, #148]	; 17330 <main@@Base+0x10760>
   17298:	add	r0, sp, #224	; 0xe0
   1729c:	str	sl, [sp, #240]	; 0xf0
   172a0:	str	r3, [sp, #224]	; 0xe0
   172a4:	bl	61dc <SDL_PushEvent@plt>
   172a8:	ldr	r0, [sp, #24]
   172ac:	bl	6398 <SDL_DestroyMutex@plt>
   172b0:	ldr	r3, [sp, #28]
   172b4:	ldr	r2, [sp, #284]	; 0x11c
   172b8:	ldr	r3, [r3]
   172bc:	mov	r0, #0
   172c0:	cmp	r2, r3
   172c4:	bne	18388 <main@@Base+0x117b8>
   172c8:	add	sp, sp, #292	; 0x124
   172cc:	vpop	{d8-d11}
   172d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172d4:	nop	{0}
   172d8:	andeq	r0, r0, r0
   172dc:	eormi	r0, r4, r0
   172e0:	andeq	r0, r0, r0
   172e4:	adcmi	r2, ip, r0
   172e8:	andeq	r1, r2, r0, ror #21
   172ec:	andeq	r0, r0, r8, asr r5
   172f0:			; <UNDEFINED> instruction: 0xffff982c
   172f4:	andeq	r0, r0, r8, lsl r5
   172f8:	andeq	lr, r0, r0, ror #9
   172fc:	andeq	lr, r0, r0, asr #7
   17300:	andeq	r2, r2, r4
   17304:	andeq	r1, r2, r0, ror pc
   17308:	andeq	r1, r2, r4, asr #30
   1730c:	andeq	r1, r2, r4, lsl #31
   17310:	andseq	r1, r0, r0, lsl r8
   17314:	strdeq	r1, [r2], -r0
   17318:	ldrdeq	lr, [r0], -r0
   1731c:			; <UNDEFINED> instruction: 0x0000e3b8
   17320:	andeq	lr, r0, r8, lsr #7
   17324:	andeq	lr, r0, r0, lsl #7
   17328:	andeq	lr, r0, ip, ror #6
   1732c:	andeq	sp, r0, r0, asr #31
   17330:	andeq	r8, r0, r2
   17334:	andeq	r1, r2, r8, ror #25
   17338:	andeq	r1, r2, r0, lsr sp
   1733c:	ldrdeq	r1, [r2], -r8
   17340:			; <UNDEFINED> instruction: 0x00021cb8
   17344:	muleq	r2, r8, ip
   17348:	andeq	r1, r2, r8, ror ip
   1734c:	andeq	r1, r2, r8, asr ip
   17350:	andeq	r1, r2, r4, lsr ip
   17354:	andeq	r1, r2, r0, lsr #23
   17358:	andeq	r1, r2, r8, asr fp
   1735c:	mov	r0, #1
   17360:	ldr	r3, [pc, #-52]	; 17334 <main@@Base+0x10764>
   17364:	str	r0, [sl, #64]	; 0x40
   17368:	add	r3, pc, r3
   1736c:	ldr	r3, [r3, #52]	; 0x34
   17370:	cmp	r3, #0
   17374:	bne	18114 <main@@Base+0x11544>
   17378:	ldr	r0, [r6, #24]
   1737c:	cmp	r0, #0
   17380:	beq	173e4 <main@@Base+0x10814>
   17384:	mov	r5, #0
   17388:	mov	r7, #48	; 0x30
   1738c:	ldr	r8, [pc, #-92]	; 17338 <main@@Base+0x10768>
   17390:	add	r8, pc, r8
   17394:	ldr	r3, [r6, #28]
   17398:	ldr	r1, [r3, r5, lsl #2]
   1739c:	ldr	r3, [r1, #176]	; 0xb0
   173a0:	ldr	r3, [r3]
   173a4:	str	r7, [r1, #52]	; 0x34
   173a8:	cmp	r3, #0
   173ac:	blt	173d8 <main@@Base+0x10808>
   173b0:	lsl	r3, r3, #2
   173b4:	add	r2, r8, r3
   173b8:	ldr	r2, [r2, #244]	; 0xf4
   173bc:	cmp	r2, #0
   173c0:	beq	173d8 <main@@Base+0x10808>
   173c4:	add	ip, sp, #288	; 0x120
   173c8:	add	r4, ip, r3
   173cc:	ldr	r3, [r4, #-84]	; 0xffffffac
   173d0:	cmn	r3, #1
   173d4:	beq	1781c <main@@Base+0x10c4c>
   173d8:	add	r5, r5, #1
   173dc:	cmp	r5, r0
   173e0:	bcc	17394 <main@@Base+0x107c4>
   173e4:	ldr	r3, [pc, #-176]	; 1733c <main@@Base+0x1076c>
   173e8:	add	r3, pc, r3
   173ec:	ldr	r4, [r3, #244]	; 0xf4
   173f0:	cmp	r4, #0
   173f4:	beq	17404 <main@@Base+0x10834>
   173f8:	ldr	r3, [sp, #204]	; 0xcc
   173fc:	cmn	r3, #1
   17400:	beq	1826c <main@@Base+0x1169c>
   17404:	ldr	r3, [pc, #-204]	; 17340 <main@@Base+0x10770>
   17408:	add	r3, pc, r3
   1740c:	ldr	r4, [r3, #248]	; 0xf8
   17410:	cmp	r4, #0
   17414:	beq	17424 <main@@Base+0x10854>
   17418:	ldr	r3, [sp, #208]	; 0xd0
   1741c:	cmn	r3, #1
   17420:	beq	1829c <main@@Base+0x116cc>
   17424:	ldr	r3, [pc, #-232]	; 17344 <main@@Base+0x10774>
   17428:	add	r3, pc, r3
   1742c:	ldr	r4, [r3, #252]	; 0xfc
   17430:	cmp	r4, #0
   17434:	beq	17444 <main@@Base+0x10874>
   17438:	ldr	r3, [sp, #212]	; 0xd4
   1743c:	cmn	r3, #1
   17440:	beq	181dc <main@@Base+0x1160c>
   17444:	ldr	r3, [pc, #-260]	; 17348 <main@@Base+0x10778>
   17448:	add	r3, pc, r3
   1744c:	ldr	r4, [r3, #256]	; 0x100
   17450:	cmp	r4, #0
   17454:	beq	17464 <main@@Base+0x10894>
   17458:	ldr	r3, [sp, #216]	; 0xd8
   1745c:	cmn	r3, #1
   17460:	beq	1820c <main@@Base+0x1163c>
   17464:	ldr	r3, [pc, #-288]	; 1734c <main@@Base+0x1077c>
   17468:	add	r3, pc, r3
   1746c:	ldr	r4, [r3, #260]	; 0x104
   17470:	cmp	r4, #0
   17474:	beq	17484 <main@@Base+0x108b4>
   17478:	ldr	r3, [sp, #220]	; 0xdc
   1747c:	cmn	r3, #1
   17480:	beq	1823c <main@@Base+0x1166c>
   17484:	ldr	r4, [pc, #-316]	; 17350 <main@@Base+0x10780>
   17488:	ldr	r2, [sp, #204]	; 0xcc
   1748c:	add	r4, pc, r4
   17490:	ldr	r1, [r4, #264]	; 0x108
   17494:	cmp	r1, #0
   17498:	beq	178e0 <main@@Base+0x10d10>
   1749c:	ldr	r3, [r4, #268]	; 0x10c
   174a0:	cmp	r3, #0
   174a4:	beq	17908 <main@@Base+0x10d38>
   174a8:	ldr	r3, [pc, #-348]	; 17354 <main@@Base+0x10784>
   174ac:	cmp	r2, #0
   174b0:	add	r3, pc, r3
   174b4:	ldr	r3, [r3]
   174b8:	str	r3, [r9, #1884]	; 0x75c
   174bc:	bge	17844 <main@@Base+0x10c74>
   174c0:	ldr	r1, [sp, #208]	; 0xd0
   174c4:	cmp	r1, #0
   174c8:	bge	17fd4 <main@@Base+0x11404>
   174cc:	cmn	r3, #1
   174d0:	beq	18174 <main@@Base+0x115a4>
   174d4:	ldr	r1, [sp, #216]	; 0xd8
   174d8:	cmp	r1, #0
   174dc:	blt	174e8 <main@@Base+0x10918>
   174e0:	mov	r0, sl
   174e4:	bl	14394 <main@@Base+0xd7c4>
   174e8:	ldr	r3, [fp, #2008]	; 0x7d8
   174ec:	cmp	r3, #0
   174f0:	blt	17fe0 <main@@Base+0x11410>
   174f4:	ldr	r3, [pc, #-420]	; 17358 <main@@Base+0x10788>
   174f8:	add	r3, pc, r3
   174fc:	ldr	r2, [r3, #64]	; 0x40
   17500:	cmp	r2, #0
   17504:	bge	17518 <main@@Base+0x10948>
   17508:	ldr	r2, [sl, #64]	; 0x40
   1750c:	cmp	r2, #0
   17510:	movne	r2, #1
   17514:	strne	r2, [r3, #64]	; 0x40
   17518:	vldr	d9, [pc, #904]	; 178a8 <main@@Base+0x10cd8>
   1751c:	vldr	d11, [pc, #908]	; 178b0 <main@@Base+0x10ce0>
   17520:	vldr	d10, [pc, #912]	; 178b8 <main@@Base+0x10ce8>
   17524:	ldr	r3, [pc, #916]	; 178c0 <main@@Base+0x10cf0>
   17528:	add	r3, sl, r3
   1752c:	str	r3, [sp, #44]	; 0x2c
   17530:	ldr	r3, [sl, #8]
   17534:	cmp	r3, #0
   17538:	bne	1780c <main@@Base+0x10c3c>
   1753c:	ldrd	r2, [sl, #16]
   17540:	cmp	r2, r3
   17544:	beq	17564 <main@@Base+0x10994>
   17548:	cmp	r2, #0
   1754c:	str	r2, [sl, #20]
   17550:	ldr	r0, [sp, #52]	; 0x34
   17554:	beq	17b60 <main@@Base+0x10f90>
   17558:	bl	5d68 <av_read_pause@plt>
   1755c:	ldr	r3, [sl, #16]
   17560:	str	r0, [sl, #56]	; 0x38
   17564:	cmp	r3, #0
   17568:	beq	175bc <main@@Base+0x109ec>
   1756c:	ldr	r4, [sp, #52]	; 0x34
   17570:	ldr	r1, [pc, #844]	; 178c4 <main@@Base+0x10cf4>
   17574:	ldr	r3, [r4, #4]
   17578:	add	r1, pc, r1
   1757c:	ldr	r0, [r3]
   17580:	bl	695c <strcmp@plt>
   17584:	cmp	r0, #0
   17588:	beq	17c18 <main@@Base+0x11048>
   1758c:	ldr	r3, [r4, #16]
   17590:	cmp	r3, #0
   17594:	beq	175bc <main@@Base+0x109ec>
   17598:	ldr	r3, [pc, #808]	; 178c8 <main@@Base+0x10cf8>
   1759c:	ldr	r1, [pc, #808]	; 178cc <main@@Base+0x10cfc>
   175a0:	add	r3, pc, r3
   175a4:	mov	r2, #5
   175a8:	ldr	r0, [r3, #16]
   175ac:	add	r1, pc, r1
   175b0:	bl	6554 <strncmp@plt>
   175b4:	cmp	r0, #0
   175b8:	beq	17c18 <main@@Base+0x11048>
   175bc:	ldr	r3, [sl, #28]
   175c0:	cmp	r3, #0
   175c4:	beq	179bc <main@@Base+0x10dec>
   175c8:	ldrd	r4, [sl, #48]	; 0x30
   175cc:	ldrd	r6, [sl, #40]	; 0x28
   175d0:	cmp	r4, #1
   175d4:	sbcs	r3, r5, #0
   175d8:	blt	17cd8 <main@@Base+0x11108>
   175dc:	mvn	r0, #0
   175e0:	mvn	r1, #-2147483648	; 0x80000000
   175e4:	adds	r2, r6, #2
   175e8:	adc	r3, r7, #0
   175ec:	subs	r2, r2, r4
   175f0:	sbc	r3, r3, r5
   175f4:	ldr	ip, [sl, #32]
   175f8:	strd	r0, [sp, #8]
   175fc:	strd	r6, [sp]
   17600:	str	ip, [sp, #16]
   17604:	mvn	r1, #0
   17608:	ldr	r0, [sl, #60]	; 0x3c
   1760c:	bl	6578 <avformat_seek_file@plt>
   17610:	cmp	r0, #0
   17614:	blt	17f54 <main@@Base+0x11384>
   17618:	ldr	r3, [r9, #1640]	; 0x668
   1761c:	cmp	r3, #0
   17620:	bge	17da0 <main@@Base+0x111d0>
   17624:	ldr	r3, [fp, #1932]	; 0x78c
   17628:	cmp	r3, #0
   1762c:	bge	17e2c <main@@Base+0x1125c>
   17630:	ldr	r3, [fp, #2008]	; 0x7d8
   17634:	cmp	r3, #0
   17638:	bge	17eb0 <main@@Base+0x112e0>
   1763c:	ldr	r3, [sl, #32]
   17640:	ands	r4, r3, #2
   17644:	beq	17cfc <main@@Base+0x1112c>
   17648:	bl	65f0 <av_gettime_relative@plt>
   1764c:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   17650:	vmov	d7, r0, r1
   17654:	vdiv.f64	d7, d7, d9
   17658:	vsub.f64	d6, d10, d7
   1765c:	mov	r3, #0
   17660:	vstr	d10, [sl, #168]	; 0xa8
   17664:	vstr	d7, [sl, #184]	; 0xb8
   17668:	vstr	d6, [sl, #176]	; 0xb0
   1766c:	str	r3, [sl, #200]	; 0xc8
   17670:	mov	r3, #0
   17674:	mov	r4, #1
   17678:	ldr	r2, [sl, #16]
   1767c:	str	r3, [sl, #28]
   17680:	cmp	r2, r3
   17684:	str	r4, [sl, #24]
   17688:	str	r3, [fp, #2072]	; 0x818
   1768c:	bne	179b0 <main@@Base+0x10de0>
   17690:	ldr	r4, [fp, #2012]	; 0x7dc
   17694:	cmp	r4, #0
   17698:	beq	176a8 <main@@Base+0x10ad8>
   1769c:	ldr	r3, [r4, #48]	; 0x30
   176a0:	tst	r3, #1024	; 0x400
   176a4:	bne	17f88 <main@@Base+0x113b8>
   176a8:	mov	r3, #0
   176ac:	str	r3, [sl, #24]
   176b0:	ldr	r3, [pc, #536]	; 178d0 <main@@Base+0x10d00>
   176b4:	add	r3, pc, r3
   176b8:	ldr	r3, [r3, #64]	; 0x40
   176bc:	cmp	r3, #0
   176c0:	ble	179cc <main@@Base+0x10dfc>
   176c4:	ldr	r3, [sl, #16]
   176c8:	cmp	r3, #0
   176cc:	bne	176ec <main@@Base+0x10b1c>
   176d0:	ldr	r3, [r9, #1692]	; 0x69c
   176d4:	cmp	r3, #0
   176d8:	beq	17c34 <main@@Base+0x11064>
   176dc:	ldr	r2, [r9, #1316]	; 0x524
   176e0:	ldr	r3, [r9, #1724]	; 0x6bc
   176e4:	cmp	r2, r3
   176e8:	beq	17c24 <main@@Base+0x11054>
   176ec:	add	r4, sp, #56	; 0x38
   176f0:	mov	r1, r4
   176f4:	ldr	r0, [sp, #52]	; 0x34
   176f8:	bl	67a0 <av_read_frame@plt>
   176fc:	cmp	r0, #0
   17700:	blt	17b6c <main@@Base+0x10f9c>
   17704:	ldrd	r6, [sp, #64]	; 0x40
   17708:	mov	r3, #0
   1770c:	str	r3, [fp, #2072]	; 0x818
   17710:	mov	r3, #-2147483648	; 0x80000000
   17714:	mov	r2, #0
   17718:	ldr	r1, [pc, #436]	; 178d4 <main@@Base+0x10d04>
   1771c:	cmp	r7, #-2147483648	; 0x80000000
   17720:	cmpeq	r6, #0
   17724:	add	r1, pc, r1
   17728:	ldrd	r0, [r1, #8]
   1772c:	ldrdeq	r6, [sp, #72]	; 0x48
   17730:	cmp	r1, r3
   17734:	cmpeq	r0, r2
   17738:	ldr	r5, [sp, #88]	; 0x58
   1773c:	strd	r0, [sp, #32]
   17740:	beq	177d4 <main@@Base+0x10c04>
   17744:	ldr	r1, [sp, #52]	; 0x34
   17748:	ldr	r1, [r1, #28]
   1774c:	ldr	ip, [r1, r5, lsl #2]
   17750:	ldrd	r0, [ip, #24]
   17754:	cmp	r1, r3
   17758:	cmpeq	r0, r2
   1775c:	beq	17768 <main@@Base+0x10b98>
   17760:	subs	r6, r6, r0
   17764:	sbc	r7, r7, r1
   17768:	vldr	s12, [ip, #16]
   1776c:	vldr	s14, [ip, #20]
   17770:	vcvt.f64.s32	d6, s12
   17774:	vcvt.f64.s32	d7, s14
   17778:	mov	r0, r6
   1777c:	mov	r1, r7
   17780:	vdiv.f64	d8, d6, d7
   17784:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   17788:	vmov	d7, r0, r1
   1778c:	ldr	r3, [pc, #324]	; 178d8 <main@@Base+0x10d08>
   17790:	vmul.f64	d8, d8, d7
   17794:	add	r3, pc, r3
   17798:	ldrd	r0, [r3, #16]
   1779c:	cmp	r1, #-2147483648	; 0x80000000
   177a0:	cmpeq	r0, #0
   177a4:	beq	177b8 <main@@Base+0x10be8>
   177a8:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   177ac:	vmov	d7, r0, r1
   177b0:	vdiv.f64	d7, d7, d9
   177b4:	vsub.f64	d8, d8, d7
   177b8:	ldrd	r0, [sp, #32]
   177bc:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   177c0:	vmov	d7, r0, r1
   177c4:	vdiv.f64	d7, d7, d9
   177c8:	vcmpe.f64	d7, d8
   177cc:	vmrs	APSR_nzcv, fpscr
   177d0:	blt	177f8 <main@@Base+0x10c28>
   177d4:	ldr	r3, [r9, #1640]	; 0x668
   177d8:	cmp	r5, r3
   177dc:	beq	1818c <main@@Base+0x115bc>
   177e0:	ldr	r3, [fp, #2008]	; 0x7d8
   177e4:	cmp	r5, r3
   177e8:	beq	18130 <main@@Base+0x11560>
   177ec:	ldr	r3, [fp, #1932]	; 0x78c
   177f0:	cmp	r5, r3
   177f4:	beq	1815c <main@@Base+0x1158c>
   177f8:	mov	r0, r4
   177fc:	bl	6a28 <av_packet_unref@plt>
   17800:	ldr	r3, [sl, #8]
   17804:	cmp	r3, #0
   17808:	beq	1753c <main@@Base+0x1096c>
   1780c:	ldr	r3, [sp, #52]	; 0x34
   17810:	cmp	r3, #0
   17814:	beq	172a8 <main@@Base+0x106d8>
   17818:	b	17c00 <main@@Base+0x11030>
   1781c:	mov	r0, r6
   17820:	bl	638c <avformat_match_stream_specifier@plt>
   17824:	ldr	r6, [sp, #52]	; 0x34
   17828:	cmp	r0, #0
   1782c:	strgt	r5, [r4, #-84]	; 0xffffffac
   17830:	ldr	r0, [r6, #24]
   17834:	b	173d8 <main@@Base+0x10808>
   17838:	ldr	r0, [fp, #2076]	; 0x81c
   1783c:	bl	d4ac <main@@Base+0x68dc>
   17840:	b	1727c <main@@Base+0x106ac>
   17844:	ldr	r1, [sp, #52]	; 0x34
   17848:	mov	r3, #0
   1784c:	ldr	r0, [r1, #28]
   17850:	ldr	r2, [r0, r2, lsl #2]
   17854:	add	r0, sp, #128	; 0x80
   17858:	ldr	r4, [r2, #176]	; 0xb0
   1785c:	bl	60c8 <av_guess_sample_aspect_ratio@plt>
   17860:	ldr	r3, [r4, #48]	; 0x30
   17864:	cmp	r3, #0
   17868:	bne	182e4 <main@@Base+0x11714>
   1786c:	ldr	r1, [sp, #208]	; 0xd0
   17870:	cmp	r1, #0
   17874:	bge	17fd4 <main@@Base+0x11404>
   17878:	ldr	r1, [sp, #204]	; 0xcc
   1787c:	cmp	r1, #0
   17880:	blt	1816c <main@@Base+0x1159c>
   17884:	mov	r0, sl
   17888:	bl	14394 <main@@Base+0xd7c4>
   1788c:	ldr	r3, [r9, #1884]	; 0x75c
   17890:	cmn	r3, #1
   17894:	bne	174d4 <main@@Base+0x10904>
   17898:	cmp	r0, #0
   1789c:	blt	18174 <main@@Base+0x115a4>
   178a0:	mov	r3, #0
   178a4:	b	18178 <main@@Base+0x115a8>
   178a8:	andeq	r0, r0, r0
   178ac:	smlawbmi	lr, r0, r4, r8
   178b0:	andeq	r0, r0, r0
   178b4:	svccc	0x00f00000	; IMB
   178b8:	andeq	r0, r0, r0
   178bc:	svcvc	0x00f80000
   178c0:	mulseq	r0, r8, r7
   178c4:	andeq	lr, r0, r0, lsr r0
   178c8:	andeq	r1, r2, r0, lsr #22
   178cc:	andeq	lr, r0, r0, lsl #1
   178d0:	muleq	r2, ip, r9
   178d4:	andeq	r1, r2, ip, lsr #18
   178d8:			; <UNDEFINED> instruction: 0x000218bc
   178dc:	muleq	r2, r0, r7
   178e0:	mvn	r3, #0
   178e4:	str	r1, [sp, #4]
   178e8:	str	r1, [sp]
   178ec:	ldr	r0, [sp, #52]	; 0x34
   178f0:	bl	5e4c <av_find_best_stream@plt>
   178f4:	ldr	r3, [r4, #268]	; 0x10c
   178f8:	mov	r2, r0
   178fc:	cmp	r3, #0
   17900:	str	r0, [sp, #204]	; 0xcc
   17904:	bne	1792c <main@@Base+0x10d5c>
   17908:	mov	r1, #0
   1790c:	mov	r3, r2
   17910:	str	r1, [sp, #4]
   17914:	str	r1, [sp]
   17918:	ldr	r2, [sp, #208]	; 0xd0
   1791c:	mov	r1, #1
   17920:	ldr	r0, [sp, #52]	; 0x34
   17924:	bl	5e4c <av_find_best_stream@plt>
   17928:	str	r0, [sp, #208]	; 0xd0
   1792c:	ldr	r3, [pc, #-88]	; 178dc <main@@Base+0x10d0c>
   17930:	add	r3, pc, r3
   17934:	ldr	r2, [r3, #264]	; 0x108
   17938:	ldr	r3, [r3, #272]	; 0x110
   1793c:	orrs	r3, r2, r3
   17940:	bne	18154 <main@@Base+0x11584>
   17944:	mov	r1, #0
   17948:	ldr	r3, [sp, #208]	; 0xd0
   1794c:	ldr	r2, [sp, #216]	; 0xd8
   17950:	cmp	r3, #0
   17954:	str	r1, [sp, #4]
   17958:	str	r1, [sp]
   1795c:	ldr	r0, [sp, #52]	; 0x34
   17960:	ldrlt	r3, [sp, #204]	; 0xcc
   17964:	mov	r1, #3
   17968:	bl	5e4c <av_find_best_stream@plt>
   1796c:	ldr	r2, [sp, #204]	; 0xcc
   17970:	str	r0, [sp, #216]	; 0xd8
   17974:	b	174a8 <main@@Base+0x108d8>
   17978:	mov	r0, r4
   1797c:	mov	r1, r5
   17980:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   17984:	vldr	d6, [pc, #940]	; 17d38 <main@@Base+0x11168>
   17988:	vmov	d7, r0, r1
   1798c:	vdiv.f64	d7, d7, d6
   17990:	ldr	r2, [pc, #936]	; 17d40 <main@@Base+0x11170>
   17994:	ldr	r3, [fp, #2076]	; 0x81c
   17998:	add	r2, pc, r2
   1799c:	vstr	d7, [sp]
   179a0:	mov	r0, r7
   179a4:	mov	r1, #24
   179a8:	bl	6188 <av_log@plt>
   179ac:	b	171c4 <main@@Base+0x105f4>
   179b0:	mov	r0, sl
   179b4:	bl	164ec <main@@Base+0xf91c>
   179b8:	str	r4, [fp, #2096]	; 0x830
   179bc:	ldr	r3, [sl, #24]
   179c0:	cmp	r3, #0
   179c4:	beq	176b0 <main@@Base+0x10ae0>
   179c8:	b	17690 <main@@Base+0x10ac0>
   179cc:	ldr	r3, [r9, #1708]	; 0x6ac
   179d0:	ldr	r1, [fp, #2028]	; 0x7ec
   179d4:	ldr	r2, [fp, #1956]	; 0x7a4
   179d8:	add	r3, r3, r1
   179dc:	add	r3, r3, r2
   179e0:	cmp	r3, #15728640	; 0xf00000
   179e4:	bgt	17b38 <main@@Base+0x10f68>
   179e8:	ldr	r3, [r9, #1640]	; 0x668
   179ec:	cmp	r3, #0
   179f0:	blt	17a58 <main@@Base+0x10e88>
   179f4:	ldr	r3, [r9, #1720]	; 0x6b8
   179f8:	cmp	r3, #0
   179fc:	bne	17a58 <main@@Base+0x10e88>
   17a00:	ldr	r3, [r9, #1692]	; 0x69c
   17a04:	ldr	r2, [r3, #48]	; 0x30
   17a08:	tst	r2, #1024	; 0x400
   17a0c:	bne	17a58 <main@@Base+0x10e88>
   17a10:	ldr	r2, [r9, #1704]	; 0x6a8
   17a14:	cmp	r2, #25
   17a18:	ble	182cc <main@@Base+0x116fc>
   17a1c:	add	r2, r9, #1696	; 0x6a0
   17a20:	ldrd	r0, [r2, #16]
   17a24:	orrs	r2, r0, r1
   17a28:	beq	17a58 <main@@Base+0x10e88>
   17a2c:	vldr	s12, [r3, #16]
   17a30:	vldr	s14, [r3, #20]
   17a34:	vcvt.f64.s32	d6, s12
   17a38:	vcvt.f64.s32	d7, s14
   17a3c:	vdiv.f64	d8, d6, d7
   17a40:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   17a44:	vmov	d7, r0, r1
   17a48:	vmul.f64	d8, d8, d7
   17a4c:	vcmpe.f64	d8, d11
   17a50:	vmrs	APSR_nzcv, fpscr
   17a54:	ble	182cc <main@@Base+0x116fc>
   17a58:	ldr	r3, [fp, #2008]	; 0x7d8
   17a5c:	cmp	r3, #0
   17a60:	blt	17ac8 <main@@Base+0x10ef8>
   17a64:	ldr	r3, [fp, #2040]	; 0x7f8
   17a68:	cmp	r3, #0
   17a6c:	bne	17ac8 <main@@Base+0x10ef8>
   17a70:	ldr	r3, [fp, #2012]	; 0x7dc
   17a74:	ldr	r2, [r3, #48]	; 0x30
   17a78:	tst	r2, #1024	; 0x400
   17a7c:	bne	17ac8 <main@@Base+0x10ef8>
   17a80:	ldr	r2, [fp, #2024]	; 0x7e8
   17a84:	cmp	r2, #25
   17a88:	ble	176c4 <main@@Base+0x10af4>
   17a8c:	add	r2, fp, #2016	; 0x7e0
   17a90:	ldrd	r0, [r2, #16]
   17a94:	orrs	r2, r0, r1
   17a98:	beq	17ac8 <main@@Base+0x10ef8>
   17a9c:	vldr	s12, [r3, #16]
   17aa0:	vldr	s14, [r3, #20]
   17aa4:	vcvt.f64.s32	d6, s12
   17aa8:	vcvt.f64.s32	d7, s14
   17aac:	vdiv.f64	d8, d6, d7
   17ab0:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   17ab4:	vmov	d7, r0, r1
   17ab8:	vmul.f64	d8, d8, d7
   17abc:	vcmpe.f64	d8, d11
   17ac0:	vmrs	APSR_nzcv, fpscr
   17ac4:	ble	176c4 <main@@Base+0x10af4>
   17ac8:	ldr	r3, [fp, #1932]	; 0x78c
   17acc:	cmp	r3, #0
   17ad0:	blt	17b38 <main@@Base+0x10f68>
   17ad4:	ldr	r3, [fp, #1968]	; 0x7b0
   17ad8:	cmp	r3, #0
   17adc:	bne	17b38 <main@@Base+0x10f68>
   17ae0:	ldr	r3, [fp, #1936]	; 0x790
   17ae4:	ldr	r2, [r3, #48]	; 0x30
   17ae8:	tst	r2, #1024	; 0x400
   17aec:	bne	17b38 <main@@Base+0x10f68>
   17af0:	ldr	r2, [fp, #1952]	; 0x7a0
   17af4:	cmp	r2, #25
   17af8:	ble	176c4 <main@@Base+0x10af4>
   17afc:	add	r2, fp, #1952	; 0x7a0
   17b00:	ldrd	r0, [r2, #8]
   17b04:	orrs	r2, r0, r1
   17b08:	beq	17b38 <main@@Base+0x10f68>
   17b0c:	vldr	s12, [r3, #16]
   17b10:	vldr	s14, [r3, #20]
   17b14:	vcvt.f64.s32	d6, s12
   17b18:	vcvt.f64.s32	d7, s14
   17b1c:	vdiv.f64	d8, d6, d7
   17b20:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   17b24:	vmov	d7, r0, r1
   17b28:	vmul.f64	d8, d8, d7
   17b2c:	vcmpe.f64	d8, d11
   17b30:	vmrs	APSR_nzcv, fpscr
   17b34:	ble	176c4 <main@@Base+0x10af4>
   17b38:	ldr	r4, [sp, #24]
   17b3c:	mov	r0, r4
   17b40:	bl	6b3c <SDL_LockMutex@plt>
   17b44:	mov	r2, #10
   17b48:	mov	r1, r4
   17b4c:	ldr	r0, [fp, #2136]	; 0x858
   17b50:	bl	6770 <SDL_CondWaitTimeout@plt>
   17b54:	mov	r0, r4
   17b58:	bl	6290 <SDL_UnlockMutex@plt>
   17b5c:	b	17530 <main@@Base+0x10960>
   17b60:	bl	68c0 <av_read_play@plt>
   17b64:	ldr	r3, [sl, #16]
   17b68:	b	17564 <main@@Base+0x10994>
   17b6c:	ldr	r3, [pc, #464]	; 17d44 <main@@Base+0x11174>
   17b70:	cmp	r0, r3
   17b74:	beq	17b8c <main@@Base+0x10fbc>
   17b78:	ldr	r3, [sp, #52]	; 0x34
   17b7c:	ldr	r0, [r3, #16]
   17b80:	bl	5e88 <avio_feof@plt>
   17b84:	cmp	r0, #0
   17b88:	beq	17be4 <main@@Base+0x11014>
   17b8c:	ldr	r3, [fp, #2072]	; 0x818
   17b90:	cmp	r3, #0
   17b94:	bne	17be4 <main@@Base+0x11014>
   17b98:	ldr	r1, [fp, #2008]	; 0x7d8
   17b9c:	cmp	r1, #0
   17ba0:	blt	17bb0 <main@@Base+0x10fe0>
   17ba4:	ldr	r0, [pc, #468]	; 17d80 <main@@Base+0x111b0>
   17ba8:	add	r0, sl, r0
   17bac:	bl	14de0 <main@@Base+0xe210>
   17bb0:	ldr	r1, [r9, #1640]	; 0x668
   17bb4:	cmp	r1, #0
   17bb8:	blt	17bc8 <main@@Base+0x10ff8>
   17bbc:	add	r0, sl, #5760	; 0x1680
   17bc0:	add	r0, r0, #32
   17bc4:	bl	14de0 <main@@Base+0xe210>
   17bc8:	ldr	r1, [fp, #1932]	; 0x78c
   17bcc:	cmp	r1, #0
   17bd0:	blt	17bdc <main@@Base+0x1100c>
   17bd4:	ldr	r0, [sp, #44]	; 0x2c
   17bd8:	bl	14de0 <main@@Base+0xe210>
   17bdc:	mov	r3, #1
   17be0:	str	r3, [fp, #2072]	; 0x818
   17be4:	ldr	r3, [sp, #52]	; 0x34
   17be8:	ldr	r3, [r3, #16]
   17bec:	cmp	r3, #0
   17bf0:	beq	17b38 <main@@Base+0x10f68>
   17bf4:	ldr	r3, [r3, #72]	; 0x48
   17bf8:	cmp	r3, #0
   17bfc:	beq	17b38 <main@@Base+0x10f68>
   17c00:	ldr	r3, [sl, #60]	; 0x3c
   17c04:	cmp	r3, #0
   17c08:	bne	172a8 <main@@Base+0x106d8>
   17c0c:	ldr	r0, [sp, #40]	; 0x28
   17c10:	bl	683c <avformat_close_input@plt>
   17c14:	b	172a8 <main@@Base+0x106d8>
   17c18:	mov	r0, #10
   17c1c:	bl	5fa8 <SDL_Delay@plt>
   17c20:	b	17530 <main@@Base+0x10960>
   17c24:	ldr	r2, [r9, #1200]	; 0x4b0
   17c28:	ldr	r3, [r9, #1212]	; 0x4bc
   17c2c:	cmp	r2, r3
   17c30:	bne	176ec <main@@Base+0x10b1c>
   17c34:	ldr	r3, [fp, #2012]	; 0x7dc
   17c38:	cmp	r3, #0
   17c3c:	beq	17c60 <main@@Base+0x11090>
   17c40:	ldr	r2, [r9, #1452]	; 0x5ac
   17c44:	ldr	r3, [fp, #2044]	; 0x7fc
   17c48:	cmp	r2, r3
   17c4c:	bne	176ec <main@@Base+0x10b1c>
   17c50:	ldr	r2, [sl, #1888]	; 0x760
   17c54:	ldr	r3, [sl, #1900]	; 0x76c
   17c58:	cmp	r2, r3
   17c5c:	bne	176ec <main@@Base+0x10b1c>
   17c60:	ldr	r2, [pc, #224]	; 17d48 <main@@Base+0x11178>
   17c64:	add	r2, pc, r2
   17c68:	ldr	r3, [r2, #68]	; 0x44
   17c6c:	cmp	r3, #1
   17c70:	beq	18344 <main@@Base+0x11774>
   17c74:	cmp	r3, #0
   17c78:	subne	r3, r3, #1
   17c7c:	strne	r3, [r2, #68]	; 0x44
   17c80:	ldr	r3, [pc, #196]	; 17d4c <main@@Base+0x1117c>
   17c84:	ldr	r1, [sl, #28]
   17c88:	add	r3, pc, r3
   17c8c:	ldrd	r2, [r3, #16]
   17c90:	cmp	r3, #-2147483648	; 0x80000000
   17c94:	cmpeq	r2, #0
   17c98:	moveq	r2, #0
   17c9c:	moveq	r3, #0
   17ca0:	cmp	r1, #0
   17ca4:	bne	176ec <main@@Base+0x10b1c>
   17ca8:	mov	r0, #0
   17cac:	mov	r1, #0
   17cb0:	mov	ip, #1
   17cb4:	strd	r2, [sl, #40]	; 0x28
   17cb8:	ldr	r3, [sl, #32]
   17cbc:	strd	r0, [sl, #48]	; 0x30
   17cc0:	bic	r3, r3, #2
   17cc4:	str	r3, [sl, #32]
   17cc8:	str	ip, [sl, #28]
   17ccc:	ldr	r0, [fp, #2136]	; 0x858
   17cd0:	bl	5dec <SDL_CondSignal@plt>
   17cd4:	b	176ec <main@@Base+0x10b1c>
   17cd8:	orrs	r3, r4, r5
   17cdc:	beq	1838c <main@@Base+0x117bc>
   17ce0:	subs	r3, r6, #2
   17ce4:	sbc	r2, r7, #0
   17ce8:	subs	r0, r3, r4
   17cec:	sbc	r1, r2, r5
   17cf0:	mov	r3, #-2147483648	; 0x80000000
   17cf4:	mov	r2, #0
   17cf8:	b	175f4 <main@@Base+0x10a24>
   17cfc:	mov	r0, r6
   17d00:	mov	r1, r7
   17d04:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   17d08:	vmov	d7, r0, r1
   17d0c:	vdiv.f64	d8, d7, d9
   17d10:	bl	65f0 <av_gettime_relative@plt>
   17d14:	bl	22374 <vc_dispmanx_send_command_reply@@Base+0x738>
   17d18:	vmov	d7, r0, r1
   17d1c:	vdiv.f64	d7, d7, d9
   17d20:	vsub.f64	d6, d8, d7
   17d24:	vstr	d8, [sl, #168]	; 0xa8
   17d28:	vstr	d6, [sl, #176]	; 0xb0
   17d2c:	vstr	d7, [sl, #184]	; 0xb8
   17d30:	str	r4, [sl, #200]	; 0xc8
   17d34:	b	17670 <main@@Base+0x10aa0>
   17d38:	andeq	r0, r0, r0
   17d3c:	smlawbmi	lr, r0, r4, r8
   17d40:	andeq	sp, r0, r4, ror #23
   17d44:	svcle	0x00b9b0bb
   17d48:	andeq	r1, r2, ip, ror #7
   17d4c:	andeq	r1, r2, r8, asr #7
   17d50:	andeq	r1, r2, ip, lsr #5
   17d54:	andeq	r1, r2, r8, lsr #4
   17d58:	muleq	r2, ip, r1
   17d5c:	andeq	sp, r0, r4, lsl #1
   17d60:	ldrdeq	sp, [r0], -r4
   17d64:	muleq	r0, r4, r5
   17d68:	andeq	sp, r0, r4, lsl #12
   17d6c:	andeq	sp, r0, ip, asr #10
   17d70:	andeq	r1, r2, r0, lsr #32
   17d74:	andeq	r0, r0, ip, asr r5
   17d78:	muleq	r0, r8, r4
   17d7c:	andeq	ip, r0, r4, lsr r6
   17d80:	andseq	r1, r0, r0, ror #15
   17d84:	andeq	sp, r0, r0, asr #7
   17d88:	andeq	sp, r0, ip, lsr #7
   17d8c:	ldrdeq	sp, [r0], -r4
   17d90:	andeq	sp, r0, r4, lsr #7
   17d94:	andeq	sp, r0, r4, ror r3
   17d98:	andeq	sp, r0, r4, asr #6
   17d9c:	andeq	sp, r0, r4, lsl r3
   17da0:	ldr	r0, [r9, #1728]	; 0x6c0
   17da4:	bl	6b3c <SDL_LockMutex@plt>
   17da8:	ldr	r0, [r9, #1696]	; 0x6a0
   17dac:	add	r8, sl, #5760	; 0x1680
   17db0:	cmp	r0, #0
   17db4:	str	r0, [sp, #128]	; 0x80
   17db8:	add	r8, r8, #32
   17dbc:	beq	17de0 <main@@Base+0x11210>
   17dc0:	add	r5, sp, #128	; 0x80
   17dc4:	ldr	r4, [r0, #72]	; 0x48
   17dc8:	bl	6a28 <av_packet_unref@plt>
   17dcc:	mov	r0, r5
   17dd0:	bl	5df8 <av_freep@plt>
   17dd4:	subs	r0, r4, #0
   17dd8:	str	r4, [sp, #128]	; 0x80
   17ddc:	bne	17dc4 <main@@Base+0x111f4>
   17de0:	mov	r3, #0
   17de4:	mov	r1, #0
   17de8:	mov	r0, #0
   17dec:	add	r2, r9, #1696	; 0x6a0
   17df0:	str	r3, [r9, #1700]	; 0x6a4
   17df4:	str	r3, [r9, #1696]	; 0x6a0
   17df8:	str	r3, [r9, #1704]	; 0x6a8
   17dfc:	str	r3, [r9, #1708]	; 0x6ac
   17e00:	strd	r0, [r2, #16]
   17e04:	ldr	r0, [r9, #1728]	; 0x6c0
   17e08:	bl	6290 <SDL_UnlockMutex@plt>
   17e0c:	ldr	r1, [pc, #-196]	; 17d50 <main@@Base+0x11180>
   17e10:	mov	r0, r8
   17e14:	add	r1, pc, r1
   17e18:	add	r1, r1, #104	; 0x68
   17e1c:	bl	11b38 <main@@Base+0xaf68>
   17e20:	ldr	r3, [fp, #1932]	; 0x78c
   17e24:	cmp	r3, #0
   17e28:	blt	17630 <main@@Base+0x10a60>
   17e2c:	ldr	r0, [fp, #1976]	; 0x7b8
   17e30:	bl	6b3c <SDL_LockMutex@plt>
   17e34:	ldr	r0, [fp, #1944]	; 0x798
   17e38:	cmp	r0, #0
   17e3c:	str	r0, [sp, #128]	; 0x80
   17e40:	beq	17e64 <main@@Base+0x11294>
   17e44:	add	r5, sp, #128	; 0x80
   17e48:	ldr	r4, [r0, #72]	; 0x48
   17e4c:	bl	6a28 <av_packet_unref@plt>
   17e50:	mov	r0, r5
   17e54:	bl	5df8 <av_freep@plt>
   17e58:	subs	r0, r4, #0
   17e5c:	str	r4, [sp, #128]	; 0x80
   17e60:	bne	17e48 <main@@Base+0x11278>
   17e64:	mov	r3, #0
   17e68:	mov	r1, #0
   17e6c:	mov	r0, #0
   17e70:	add	r2, fp, #1952	; 0x7a0
   17e74:	str	r3, [fp, #1948]	; 0x79c
   17e78:	str	r3, [fp, #1944]	; 0x798
   17e7c:	str	r3, [fp, #1952]	; 0x7a0
   17e80:	str	r3, [fp, #1956]	; 0x7a4
   17e84:	strd	r0, [r2, #8]
   17e88:	ldr	r0, [fp, #1976]	; 0x7b8
   17e8c:	bl	6290 <SDL_UnlockMutex@plt>
   17e90:	ldr	r1, [pc, #-324]	; 17d54 <main@@Base+0x11184>
   17e94:	ldr	r0, [sp, #44]	; 0x2c
   17e98:	add	r1, pc, r1
   17e9c:	add	r1, r1, #104	; 0x68
   17ea0:	bl	11b38 <main@@Base+0xaf68>
   17ea4:	ldr	r3, [fp, #2008]	; 0x7d8
   17ea8:	cmp	r3, #0
   17eac:	blt	1763c <main@@Base+0x10a6c>
   17eb0:	ldr	r0, [fp, #2048]	; 0x800
   17eb4:	bl	6b3c <SDL_LockMutex@plt>
   17eb8:	ldr	r0, [fp, #2016]	; 0x7e0
   17ebc:	ldr	r8, [pc, #-324]	; 17d80 <main@@Base+0x111b0>
   17ec0:	cmp	r0, #0
   17ec4:	str	r0, [sp, #128]	; 0x80
   17ec8:	add	r8, sl, r8
   17ecc:	beq	17ef0 <main@@Base+0x11320>
   17ed0:	add	r5, sp, #128	; 0x80
   17ed4:	ldr	r4, [r0, #72]	; 0x48
   17ed8:	bl	6a28 <av_packet_unref@plt>
   17edc:	mov	r0, r5
   17ee0:	bl	5df8 <av_freep@plt>
   17ee4:	subs	r0, r4, #0
   17ee8:	str	r4, [sp, #128]	; 0x80
   17eec:	bne	17ed4 <main@@Base+0x11304>
   17ef0:	mov	r3, #0
   17ef4:	mov	r1, #0
   17ef8:	mov	r0, #0
   17efc:	add	r2, fp, #2016	; 0x7e0
   17f00:	str	r3, [fp, #2020]	; 0x7e4
   17f04:	str	r3, [fp, #2016]	; 0x7e0
   17f08:	str	r3, [fp, #2024]	; 0x7e8
   17f0c:	str	r3, [fp, #2028]	; 0x7ec
   17f10:	strd	r0, [r2, #16]
   17f14:	ldr	r0, [fp, #2048]	; 0x800
   17f18:	bl	6290 <SDL_UnlockMutex@plt>
   17f1c:	ldr	r1, [pc, #-460]	; 17d58 <main@@Base+0x11188>
   17f20:	mov	r0, r8
   17f24:	add	r1, pc, r1
   17f28:	add	r1, r1, #104	; 0x68
   17f2c:	bl	11b38 <main@@Base+0xaf68>
   17f30:	b	1763c <main@@Base+0x10a6c>
   17f34:	bl	63a4 <SDL_GetError@plt>
   17f38:	ldr	r2, [pc, #-484]	; 17d5c <main@@Base+0x1118c>
   17f3c:	mov	r3, r0
   17f40:	add	r2, pc, r2
   17f44:	mov	r1, #8
   17f48:	ldr	r0, [sp, #24]
   17f4c:	bl	6188 <av_log@plt>
   17f50:	b	1727c <main@@Base+0x106ac>
   17f54:	ldr	r3, [sl, #60]	; 0x3c
   17f58:	ldr	r2, [pc, #-512]	; 17d60 <main@@Base+0x11190>
   17f5c:	ldr	r3, [r3, #1056]	; 0x420
   17f60:	add	r2, pc, r2
   17f64:	mov	r1, #16
   17f68:	mov	r0, #0
   17f6c:	bl	6188 <av_log@plt>
   17f70:	b	17670 <main@@Base+0x10aa0>
   17f74:	ldr	r2, [pc, #-536]	; 17d64 <main@@Base+0x11194>
   17f78:	mov	r1, #8
   17f7c:	add	r2, pc, r2
   17f80:	bl	6188 <av_log@plt>
   17f84:	b	1727c <main@@Base+0x106ac>
   17f88:	add	r5, sp, #128	; 0x80
   17f8c:	mov	r2, #72	; 0x48
   17f90:	mov	r1, #0
   17f94:	mov	r0, r5
   17f98:	bl	62e4 <memset@plt>
   17f9c:	add	r1, r4, #80	; 0x50
   17fa0:	mov	r0, r5
   17fa4:	bl	6068 <av_packet_ref@plt>
   17fa8:	cmp	r0, #0
   17fac:	blt	1727c <main@@Base+0x106ac>
   17fb0:	ldr	r4, [pc, #-568]	; 17d80 <main@@Base+0x111b0>
   17fb4:	mov	r1, r5
   17fb8:	add	r4, sl, r4
   17fbc:	mov	r0, r4
   17fc0:	bl	11b38 <main@@Base+0xaf68>
   17fc4:	mov	r0, r4
   17fc8:	ldr	r1, [fp, #2008]	; 0x7d8
   17fcc:	bl	14de0 <main@@Base+0xe210>
   17fd0:	b	176a8 <main@@Base+0x10ad8>
   17fd4:	mov	r0, sl
   17fd8:	bl	14394 <main@@Base+0xd7c4>
   17fdc:	b	17878 <main@@Base+0x10ca8>
   17fe0:	ldr	r3, [r9, #1640]	; 0x668
   17fe4:	cmp	r3, #0
   17fe8:	bge	174f4 <main@@Base+0x10924>
   17fec:	ldr	r2, [pc, #-652]	; 17d68 <main@@Base+0x11198>
   17ff0:	ldr	r3, [fp, #2076]	; 0x81c
   17ff4:	add	r2, pc, r2
   17ff8:	mov	r1, #8
   17ffc:	mov	r0, #0
   18000:	bl	6188 <av_log@plt>
   18004:	b	1727c <main@@Base+0x106ac>
   18008:	cmp	r4, #0
   1800c:	moveq	r0, r4
   18010:	beq	1802c <main@@Base+0x1145c>
   18014:	ldr	r0, [pc, #-688]	; 17d6c <main@@Base+0x1119c>
   18018:	ldr	r1, [r2]
   1801c:	add	r0, pc, r0
   18020:	bl	695c <strcmp@plt>
   18024:	adds	r0, r0, #0
   18028:	movne	r0, #1
   1802c:	ldr	r3, [pc, #-708]	; 17d70 <main@@Base+0x111a0>
   18030:	add	r3, pc, r3
   18034:	str	r0, [r3, #60]	; 0x3c
   18038:	b	17124 <main@@Base+0x10554>
   1803c:	ldr	r3, [pc, #-720]	; 17d74 <main@@Base+0x111a4>
   18040:	ldr	r0, [sp, #52]	; 0x34
   18044:	ldr	r3, [r4, r3]
   18048:	ldr	r1, [r3]
   1804c:	bl	f290 <main@@Base+0x86c0>
   18050:	mov	r3, r0
   18054:	ldr	r0, [sp, #52]	; 0x34
   18058:	mov	r1, r3
   1805c:	ldr	r4, [r0, #24]
   18060:	str	r3, [sp, #128]	; 0x80
   18064:	bl	6788 <avformat_find_stream_info@plt>
   18068:	cmp	r4, #0
   1806c:	mov	r5, r0
   18070:	movgt	r6, #0
   18074:	ble	18090 <main@@Base+0x114c0>
   18078:	ldr	r0, [sp, #128]	; 0x80
   1807c:	add	r0, r0, r6, lsl #2
   18080:	add	r6, r6, #1
   18084:	bl	5e28 <av_dict_free@plt>
   18088:	cmp	r4, r6
   1808c:	bne	18078 <main@@Base+0x114a8>
   18090:	add	r0, sp, #128	; 0x80
   18094:	bl	5df8 <av_freep@plt>
   18098:	cmp	r5, #0
   1809c:	bge	170f0 <main@@Base+0x10520>
   180a0:	ldr	r2, [pc, #-816]	; 17d78 <main@@Base+0x111a8>
   180a4:	ldr	r3, [fp, #2076]	; 0x81c
   180a8:	add	r2, pc, r2
   180ac:	mov	r1, #24
   180b0:	mov	r0, #0
   180b4:	bl	6188 <av_log@plt>
   180b8:	b	1727c <main@@Base+0x106ac>
   180bc:	add	ip, sp, #52	; 0x34
   180c0:	mov	r8, ip
   180c4:	ldr	r2, [pc, #-848]	; 17d7c <main@@Base+0x111ac>
   180c8:	mov	r3, #16
   180cc:	add	r2, pc, r2
   180d0:	mov	r1, r6
   180d4:	mov	r0, r5
   180d8:	str	ip, [sp, #40]	; 0x28
   180dc:	bl	6704 <av_dict_set@plt>
   180e0:	ldr	r1, [fp, #2076]	; 0x81c
   180e4:	mov	r0, r8
   180e8:	mov	r3, r5
   180ec:	ldr	r2, [sl, #4]
   180f0:	bl	6674 <avformat_open_input@plt>
   180f4:	subs	r1, r0, #0
   180f8:	blt	17838 <main@@Base+0x10c68>
   180fc:	mov	r2, r7
   18100:	mov	r1, r6
   18104:	mov	r3, #1
   18108:	mov	r0, r5
   1810c:	bl	6704 <av_dict_set@plt>
   18110:	b	17094 <main@@Base+0x104c4>
   18114:	mov	r3, #0
   18118:	mov	r0, r6
   1811c:	mov	r1, r3
   18120:	ldr	r2, [fp, #2076]	; 0x81c
   18124:	bl	65c0 <av_dump_format@plt>
   18128:	ldr	r6, [sp, #52]	; 0x34
   1812c:	b	17378 <main@@Base+0x107a8>
   18130:	ldr	r3, [fp, #2012]	; 0x7dc
   18134:	ldr	r3, [r3, #48]	; 0x30
   18138:	tst	r3, #1024	; 0x400
   1813c:	bne	177ec <main@@Base+0x10c1c>
   18140:	ldr	r0, [pc, #-968]	; 17d80 <main@@Base+0x111b0>
   18144:	mov	r1, r4
   18148:	add	r0, sl, r0
   1814c:	bl	11b38 <main@@Base+0xaf68>
   18150:	b	17530 <main@@Base+0x10960>
   18154:	ldr	r2, [sp, #204]	; 0xcc
   18158:	b	174a8 <main@@Base+0x108d8>
   1815c:	mov	r1, r4
   18160:	ldr	r0, [sp, #44]	; 0x2c
   18164:	bl	11b38 <main@@Base+0xaf68>
   18168:	b	17530 <main@@Base+0x10960>
   1816c:	ldr	r3, [r9, #1884]	; 0x75c
   18170:	b	174cc <main@@Base+0x108fc>
   18174:	mov	r3, #2
   18178:	str	r3, [r9, #1884]	; 0x75c
   1817c:	b	174d4 <main@@Base+0x10904>
   18180:	add	r0, sp, #52	; 0x34
   18184:	bl	683c <avformat_close_input@plt>
   18188:	b	17294 <main@@Base+0x106c4>
   1818c:	add	r0, sl, #5760	; 0x1680
   18190:	mov	r1, r4
   18194:	add	r0, r0, #32
   18198:	bl	11b38 <main@@Base+0xaf68>
   1819c:	b	17530 <main@@Base+0x10960>
   181a0:	ldr	r1, [pc, #-1060]	; 17d84 <main@@Base+0x111b4>
   181a4:	ldr	r0, [r6, #1164]	; 0x48c
   181a8:	mov	r2, r3
   181ac:	add	r1, pc, r1
   181b0:	bl	6878 <av_dict_get@plt>
   181b4:	cmp	r0, #0
   181b8:	beq	182dc <main@@Base+0x1170c>
   181bc:	ldr	r1, [r0, #4]
   181c0:	ldr	r0, [pc, #-1088]	; 17d88 <main@@Base+0x111b8>
   181c4:	ldr	r2, [r4, #16]
   181c8:	add	r0, pc, r0
   181cc:	bl	5f78 <av_asprintf@plt>
   181d0:	ldr	r6, [sp, #52]	; 0x34
   181d4:	str	r0, [r4, #208]	; 0xd0
   181d8:	b	17154 <main@@Base+0x10584>
   181dc:	mov	r0, #2
   181e0:	bl	6af4 <av_get_media_type_string@plt>
   181e4:	ldr	r2, [pc, #-1120]	; 17d8c <main@@Base+0x111bc>
   181e8:	mov	r3, r4
   181ec:	str	r0, [sp]
   181f0:	add	r2, pc, r2
   181f4:	mov	r1, #16
   181f8:	mov	r0, #0
   181fc:	bl	6188 <av_log@plt>
   18200:	mvn	r3, #-2147483648	; 0x80000000
   18204:	str	r3, [sp, #212]	; 0xd4
   18208:	b	17444 <main@@Base+0x10874>
   1820c:	mov	r0, #3
   18210:	bl	6af4 <av_get_media_type_string@plt>
   18214:	ldr	r2, [pc, #-1164]	; 17d90 <main@@Base+0x111c0>
   18218:	mov	r3, r4
   1821c:	str	r0, [sp]
   18220:	add	r2, pc, r2
   18224:	mov	r1, #16
   18228:	mov	r0, #0
   1822c:	bl	6188 <av_log@plt>
   18230:	mvn	r3, #-2147483648	; 0x80000000
   18234:	str	r3, [sp, #216]	; 0xd8
   18238:	b	17464 <main@@Base+0x10894>
   1823c:	mov	r0, #4
   18240:	bl	6af4 <av_get_media_type_string@plt>
   18244:	ldr	r2, [pc, #-1208]	; 17d94 <main@@Base+0x111c4>
   18248:	mov	r3, r4
   1824c:	str	r0, [sp]
   18250:	add	r2, pc, r2
   18254:	mov	r1, #16
   18258:	mov	r0, #0
   1825c:	bl	6188 <av_log@plt>
   18260:	mvn	r3, #-2147483648	; 0x80000000
   18264:	str	r3, [sp, #220]	; 0xdc
   18268:	b	17484 <main@@Base+0x108b4>
   1826c:	mov	r0, #0
   18270:	bl	6af4 <av_get_media_type_string@plt>
   18274:	ldr	r2, [pc, #-1252]	; 17d98 <main@@Base+0x111c8>
   18278:	mov	r3, r4
   1827c:	str	r0, [sp]
   18280:	add	r2, pc, r2
   18284:	mov	r1, #16
   18288:	mov	r0, #0
   1828c:	bl	6188 <av_log@plt>
   18290:	mvn	r3, #-2147483648	; 0x80000000
   18294:	str	r3, [sp, #204]	; 0xcc
   18298:	b	17404 <main@@Base+0x10834>
   1829c:	mov	r0, #1
   182a0:	bl	6af4 <av_get_media_type_string@plt>
   182a4:	ldr	r2, [pc, #-1296]	; 17d9c <main@@Base+0x111cc>
   182a8:	mov	r3, r4
   182ac:	str	r0, [sp]
   182b0:	add	r2, pc, r2
   182b4:	mov	r1, #16
   182b8:	mov	r0, #0
   182bc:	bl	6188 <av_log@plt>
   182c0:	mvn	r3, #-2147483648	; 0x80000000
   182c4:	str	r3, [sp, #208]	; 0xd0
   182c8:	b	17424 <main@@Base+0x10854>
   182cc:	ldr	r3, [sl, #16]
   182d0:	cmp	r3, #0
   182d4:	beq	176dc <main@@Base+0x10b0c>
   182d8:	b	176ec <main@@Base+0x10b1c>
   182dc:	ldr	r6, [sp, #52]	; 0x34
   182e0:	b	17154 <main@@Base+0x10584>
   182e4:	ldr	r2, [sp, #128]	; 0x80
   182e8:	ldr	r4, [r4, #52]	; 0x34
   182ec:	cmp	r2, #0
   182f0:	ldr	r1, [sp, #132]	; 0x84
   182f4:	bne	1835c <main@@Base+0x1178c>
   182f8:	vldr	s14, [pc, #160]	; 183a0 <main@@Base+0x117d0>
   182fc:	vmov	s15, r4
   18300:	vcvt.f32.s32	s0, s15
   18304:	vmov	s15, r3
   18308:	vcvt.f32.s32	s15, s15
   1830c:	vdiv.f32	s13, s15, s0
   18310:	vmul.f32	s14, s13, s14
   18314:	vmul.f32	s0, s14, s0
   18318:	bl	63b0 <lrintf@plt>
   1831c:	bic	r0, r0, #1
   18320:	cmp	r0, #1
   18324:	movlt	r0, #1
   18328:	cmp	r4, #1
   1832c:	movlt	r4, #1
   18330:	ldr	r3, [pc, #108]	; 183a4 <main@@Base+0x117d4>
   18334:	add	r3, pc, r3
   18338:	str	r0, [r3, #28]
   1833c:	str	r4, [r3, #32]
   18340:	b	1786c <main@@Base+0x10c9c>
   18344:	ldr	r3, [pc, #92]	; 183a8 <main@@Base+0x117d8>
   18348:	add	r3, pc, r3
   1834c:	ldr	r3, [r3, #276]	; 0x114
   18350:	cmp	r3, #0
   18354:	beq	176ec <main@@Base+0x10b1c>
   18358:	b	1727c <main@@Base+0x106ac>
   1835c:	vmov	s15, r2
   18360:	vcvt.f64.s32	d6, s15
   18364:	vmov	s15, r1
   18368:	vcvt.f64.s32	d5, s15
   1836c:	vdiv.f64	d7, d6, d5
   18370:	vcvt.f32.f64	s14, d7
   18374:	vcmp.f32	s14, #0.0
   18378:	vldr	s15, [pc, #32]	; 183a0 <main@@Base+0x117d0>
   1837c:	vmrs	APSR_nzcv, fpscr
   18380:	vmovls.f32	s14, s15
   18384:	b	182fc <main@@Base+0x1172c>
   18388:	bl	5e7c <__stack_chk_fail@plt>
   1838c:	mov	r2, #0
   18390:	mov	r3, #-2147483648	; 0x80000000
   18394:	mvn	r0, #0
   18398:	mvn	r1, #-2147483648	; 0x80000000
   1839c:	b	175f4 <main@@Base+0x10a24>
   183a0:	svccc	0x00800000
   183a4:	andeq	r0, r2, ip, lsl sp
   183a8:	andeq	r0, r2, r8, ror sp
   183ac:	push	{r4, r5, r6, r7, r8, lr}
   183b0:	mov	r7, #0
   183b4:	ldr	r4, [pc, #260]	; 184c0 <main@@Base+0x118f0>
   183b8:	ldr	r2, [pc, #260]	; 184c4 <main@@Base+0x118f4>
   183bc:	add	r4, pc, r4
   183c0:	ldr	r8, [r4, r2]
   183c4:	sub	sp, sp, #16
   183c8:	ldr	r2, [r8]
   183cc:	ldr	r3, [pc, #244]	; 184c8 <main@@Base+0x118f8>
   183d0:	str	r2, [sp, #12]
   183d4:	ldr	r0, [r4, r3]
   183d8:	bl	5f3c <av_log_set_callback@plt>
   183dc:	ldr	r2, [pc, #232]	; 184cc <main@@Base+0x118fc>
   183e0:	mov	r1, #32
   183e4:	add	r2, pc, r2
   183e8:	mov	r0, r7
   183ec:	bl	6188 <av_log@plt>
   183f0:	ldr	r5, [pc, #216]	; 184d0 <main@@Base+0x11900>
   183f4:	ldr	r3, [pc, #216]	; 184d4 <main@@Base+0x11904>
   183f8:	ldr	r2, [pc, #216]	; 184d8 <main@@Base+0x11908>
   183fc:	ldr	r3, [r4, r3]
   18400:	add	r5, pc, r5
   18404:	add	r2, pc, r2
   18408:	mov	r1, #32
   1840c:	mov	r0, r7
   18410:	bl	6188 <av_log@plt>
   18414:	ldr	r6, [pc, #192]	; 184dc <main@@Base+0x1190c>
   18418:	mov	r2, r5
   1841c:	mov	r1, #32
   18420:	mov	r0, r7
   18424:	bl	6188 <av_log@plt>
   18428:	ldr	r1, [pc, #176]	; 184e0 <main@@Base+0x11910>
   1842c:	add	r6, pc, r6
   18430:	mov	r2, r7
   18434:	mov	r0, r6
   18438:	mov	r3, #4
   1843c:	add	r1, pc, r1
   18440:	str	r7, [sp]
   18444:	bl	b4c4 <main@@Base+0x48f4>
   18448:	ldr	r1, [pc, #148]	; 184e4 <main@@Base+0x11914>
   1844c:	mov	r3, r7
   18450:	mov	r2, #4
   18454:	mov	r0, r6
   18458:	add	r1, pc, r1
   1845c:	str	r7, [sp]
   18460:	bl	b4c4 <main@@Base+0x48f4>
   18464:	mov	r1, r5
   18468:	mov	r0, #1
   1846c:	bl	6a1c <__printf_chk@plt>
   18470:	bl	608c <avcodec_get_class@plt>
   18474:	mov	r1, #2
   18478:	bl	b6d8 <main@@Base+0x4b08>
   1847c:	bl	65e4 <avformat_get_class@plt>
   18480:	mov	r1, #2
   18484:	bl	b6d8 <main@@Base+0x4b08>
   18488:	bl	5ce4 <avfilter_get_class@plt>
   1848c:	mov	r1, #65536	; 0x10000
   18490:	bl	b6d8 <main@@Base+0x4b08>
   18494:	ldr	r2, [sp, #12]
   18498:	ldr	r3, [r8]
   1849c:	cmp	r2, r3
   184a0:	bne	184bc <main@@Base+0x118ec>
   184a4:	mov	r0, #1
   184a8:	ldr	r1, [pc, #56]	; 184e8 <main@@Base+0x11918>
   184ac:	add	r1, pc, r1
   184b0:	add	sp, sp, #16
   184b4:	pop	{r4, r5, r6, r7, r8, lr}
   184b8:	b	6a1c <__printf_chk@plt>
   184bc:	bl	5e7c <__stack_chk_fail@plt>
   184c0:	ldrdeq	r0, [r2], -r8
   184c4:	andeq	r0, r0, r8, asr r5
   184c8:	andeq	r0, r0, r0, lsr r5
   184cc:	andeq	sp, r0, ip, ror #4
   184d0:			; <UNDEFINED> instruction: 0x0000d8b8
   184d4:	andeq	r0, r0, r4, lsr r5
   184d8:	andeq	sp, r0, r4, ror #4
   184dc:	andeq	pc, r1, r8, lsl #30
   184e0:	andeq	sp, r0, ip, asr #4
   184e4:	andeq	sp, r0, r0, asr #4
   184e8:	andeq	sp, r0, r0, lsl #4
   184ec:	cmp	r0, #2
   184f0:	bne	18528 <main@@Base+0x11958>
   184f4:	push	{r3, r4, r5, lr}
   184f8:	ldr	r3, [r1, #8]
   184fc:	mov	r5, r2
   18500:	cmp	r3, #0
   18504:	mov	r4, r1
   18508:	beq	18514 <main@@Base+0x11944>
   1850c:	ldr	r0, [r1, #12]
   18510:	blx	r3
   18514:	mov	r0, r5
   18518:	mov	r1, r4
   1851c:	bl	6848 <vchiq_release_message@plt>
   18520:	mov	r0, #0
   18524:	pop	{r3, r4, r5, pc}
   18528:	mov	r0, #0
   1852c:	bx	lr
   18530:	ldr	r0, [pc, #32]	; 18558 <main@@Base+0x11988>
   18534:	push	{r3, lr}
   18538:	add	r0, pc, r0
   1853c:	mov	r1, #0
   18540:	add	r0, r0, #4
   18544:	bl	6b9c <pthread_mutex_init@plt>
   18548:	cmp	r0, #0
   1854c:	popeq	{r3, pc}
   18550:	pop	{r3, lr}
   18554:	b	6098 <vcos_pthreads_map_errno@plt>
   18558:	ldrdeq	r0, [r2], -r4

0001855c <vc_gpuserv_init@@Base>:
   1855c:	push	{r4, r5, r6, lr}
   18560:	ldr	r4, [pc, #428]	; 18714 <vc_gpuserv_init@@Base+0x1b8>
   18564:	ldr	r1, [pc, #428]	; 18718 <vc_gpuserv_init@@Base+0x1bc>
   18568:	add	r4, pc, r4
   1856c:	sub	sp, sp, #24
   18570:	add	r1, pc, r1
   18574:	add	r0, r4, #76	; 0x4c
   18578:	add	r5, r4, #4
   1857c:	bl	6b00 <vcos_once@plt>
   18580:	mov	r0, r5
   18584:	bl	5ffc <pthread_mutex_lock@plt>
   18588:	ldr	r3, [r4, #72]	; 0x48
   1858c:	cmp	r3, #0
   18590:	add	r3, r3, #1
   18594:	str	r3, [r4, #72]	; 0x48
   18598:	ble	185b0 <vc_gpuserv_init@@Base+0x54>
   1859c:	mov	r0, r5
   185a0:	bl	6b84 <pthread_mutex_unlock@plt>
   185a4:	mov	r0, #0
   185a8:	add	sp, sp, #24
   185ac:	pop	{r4, r5, r6, pc}
   185b0:	mov	r5, r4
   185b4:	mov	r6, #5
   185b8:	ldr	r0, [pc, #348]	; 1871c <vc_gpuserv_init@@Base+0x1c0>
   185bc:	str	r6, [r5, #80]!	; 0x50
   185c0:	mov	r1, r5
   185c4:	add	r0, pc, r0
   185c8:	bl	65fc <vcos_log_register@plt>
   185cc:	ldr	r3, [r4, #80]	; 0x50
   185d0:	cmp	r3, #4
   185d4:	bhi	18650 <vc_gpuserv_init@@Base+0xf4>
   185d8:	ldr	r5, [pc, #320]	; 18720 <vc_gpuserv_init@@Base+0x1c4>
   185dc:	add	r5, pc, r5
   185e0:	add	r0, r5, #104	; 0x68
   185e4:	bl	5f30 <vchiq_initialise@plt>
   185e8:	cmp	r0, #0
   185ec:	bne	18670 <vc_gpuserv_init@@Base+0x114>
   185f0:	ldr	r0, [r5, #104]	; 0x68
   185f4:	bl	6a64 <vchiq_connect@plt>
   185f8:	subs	lr, r0, #0
   185fc:	bne	186b4 <vc_gpuserv_init@@Base+0x158>
   18600:	mov	ip, #1
   18604:	ldr	r3, [pc, #280]	; 18724 <vc_gpuserv_init@@Base+0x1c8>
   18608:	ldr	r4, [pc, #280]	; 18728 <vc_gpuserv_init@@Base+0x1cc>
   1860c:	add	r3, pc, r3
   18610:	ldr	r0, [r5, #104]	; 0x68
   18614:	add	r1, sp, #8
   18618:	mov	r2, r5
   1861c:	str	r4, [sp, #8]
   18620:	str	lr, [sp, #16]
   18624:	strh	ip, [sp, #20]
   18628:	strh	ip, [sp, #22]
   1862c:	str	r3, [sp, #12]
   18630:	bl	6008 <vchiq_open_service@plt>
   18634:	subs	r4, r0, #0
   18638:	bne	186e4 <vc_gpuserv_init@@Base+0x188>
   1863c:	add	r0, r5, #4
   18640:	bl	6b84 <pthread_mutex_unlock@plt>
   18644:	mov	r0, r4
   18648:	add	sp, sp, #24
   1864c:	pop	{r4, r5, r6, pc}
   18650:	ldr	r2, [pc, #212]	; 1872c <vc_gpuserv_init@@Base+0x1d0>
   18654:	ldr	r3, [pc, #212]	; 18730 <vc_gpuserv_init@@Base+0x1d4>
   18658:	mov	r0, r5
   1865c:	mov	r1, r6
   18660:	add	r2, pc, r2
   18664:	add	r3, pc, r3
   18668:	bl	6b60 <vcos_log_impl@plt>
   1866c:	b	185d8 <vc_gpuserv_init@@Base+0x7c>
   18670:	ldr	r3, [r5, #80]	; 0x50
   18674:	cmp	r3, #1
   18678:	bls	1869c <vc_gpuserv_init@@Base+0x140>
   1867c:	ldr	r2, [pc, #176]	; 18734 <vc_gpuserv_init@@Base+0x1d8>
   18680:	ldr	r3, [pc, #176]	; 18738 <vc_gpuserv_init@@Base+0x1dc>
   18684:	str	r0, [sp]
   18688:	mov	r1, #2
   1868c:	add	r0, r5, #80	; 0x50
   18690:	add	r2, pc, r2
   18694:	add	r3, pc, r3
   18698:	bl	6b60 <vcos_log_impl@plt>
   1869c:	ldr	r0, [pc, #152]	; 1873c <vc_gpuserv_init@@Base+0x1e0>
   186a0:	add	r0, pc, r0
   186a4:	add	r0, r0, #4
   186a8:	bl	6b84 <pthread_mutex_unlock@plt>
   186ac:	mvn	r0, #0
   186b0:	b	185a8 <vc_gpuserv_init@@Base+0x4c>
   186b4:	ldr	r3, [r5, #80]	; 0x50
   186b8:	cmp	r3, #1
   186bc:	bls	1869c <vc_gpuserv_init@@Base+0x140>
   186c0:	ldr	r2, [pc, #120]	; 18740 <vc_gpuserv_init@@Base+0x1e4>
   186c4:	ldr	r3, [pc, #120]	; 18744 <vc_gpuserv_init@@Base+0x1e8>
   186c8:	str	lr, [sp]
   186cc:	add	r0, r5, #80	; 0x50
   186d0:	mov	r1, #2
   186d4:	add	r2, pc, r2
   186d8:	add	r3, pc, r3
   186dc:	bl	6b60 <vcos_log_impl@plt>
   186e0:	b	1869c <vc_gpuserv_init@@Base+0x140>
   186e4:	ldr	r3, [r5, #80]	; 0x50
   186e8:	cmp	r3, #1
   186ec:	bls	1869c <vc_gpuserv_init@@Base+0x140>
   186f0:	ldr	r2, [pc, #80]	; 18748 <vc_gpuserv_init@@Base+0x1ec>
   186f4:	ldr	r3, [pc, #80]	; 1874c <vc_gpuserv_init@@Base+0x1f0>
   186f8:	str	r4, [sp]
   186fc:	add	r0, r5, #80	; 0x50
   18700:	mov	r1, #2
   18704:	add	r2, pc, r2
   18708:	add	r3, pc, r3
   1870c:	bl	6b60 <vcos_log_impl@plt>
   18710:	b	1869c <vc_gpuserv_init@@Base+0x140>
   18714:	andeq	r0, r2, r4, lsr #25
   18718:			; <UNDEFINED> instruction: 0xffffffb8
   1871c:	andeq	lr, r0, r8, asr r1
   18720:	andeq	r0, r2, r0, lsr ip
   18724:			; <UNDEFINED> instruction: 0xfffffed8
   18728:			; <UNDEFINED> instruction: 0x47505553
   1872c:	andeq	lr, r0, r4, asr #1
   18730:	muleq	r0, r0, r0
   18734:	strheq	lr, [r0], -r0
   18738:	andeq	lr, r0, r0, rrx
   1873c:	andeq	r0, r2, ip, ror #22
   18740:	muleq	r0, r0, r0
   18744:	andeq	lr, r0, ip, lsl r0
   18748:	andeq	lr, r0, r4, lsl #1
   1874c:	andeq	sp, r0, ip, ror #31

00018750 <vc_gpuserv_deinit@@Base>:
   18750:	push	{r3, r4, r5, lr}
   18754:	ldr	r5, [pc, #72]	; 187a4 <vc_gpuserv_deinit@@Base+0x54>
   18758:	add	r5, pc, r5
   1875c:	add	r0, r5, #4
   18760:	bl	5ffc <pthread_mutex_lock@plt>
   18764:	ldr	r3, [r5, #72]	; 0x48
   18768:	cmp	r3, #0
   1876c:	ble	18780 <vc_gpuserv_deinit@@Base+0x30>
   18770:	sub	r4, r3, #1
   18774:	cmp	r4, #0
   18778:	str	r4, [r5, #72]	; 0x48
   1877c:	beq	18794 <vc_gpuserv_deinit@@Base+0x44>
   18780:	pop	{r3, r4, r5, lr}
   18784:	ldr	r0, [pc, #28]	; 187a8 <vc_gpuserv_deinit@@Base+0x58>
   18788:	add	r0, pc, r0
   1878c:	add	r0, r0, #4
   18790:	b	6b84 <pthread_mutex_unlock@plt>
   18794:	ldr	r0, [r5]
   18798:	bl	5d38 <vchi_service_close@plt>
   1879c:	str	r4, [r5]
   187a0:	b	18780 <vc_gpuserv_deinit@@Base+0x30>
   187a4:			; <UNDEFINED> instruction: 0x00020ab4
   187a8:	andeq	r0, r2, r4, lsl #21

000187ac <vc_gpuserv_execute_code@@Base>:
   187ac:	push	{r4, r5, r6, r7, r8, lr}
   187b0:	ldr	r6, [pc, #348]	; 18914 <vc_gpuserv_execute_code@@Base+0x168>
   187b4:	mov	r4, r0
   187b8:	add	r6, pc, r6
   187bc:	ldr	r0, [r6]
   187c0:	sub	sp, sp, #64	; 0x40
   187c4:	cmp	r0, #0
   187c8:	mov	r5, r1
   187cc:	beq	18890 <vc_gpuserv_execute_code@@Base+0xe4>
   187d0:	cmp	r4, #8
   187d4:	bgt	188f8 <vc_gpuserv_execute_code@@Base+0x14c>
   187d8:	cmp	r4, #0
   187dc:	ble	18874 <vc_gpuserv_execute_code@@Base+0xc8>
   187e0:	mov	r3, #132	; 0x84
   187e4:	cmp	r4, #1
   187e8:	str	r5, [sp]
   187ec:	str	r3, [sp, #4]
   187f0:	beq	18874 <vc_gpuserv_execute_code@@Base+0xc8>
   187f4:	add	r2, r5, r3
   187f8:	cmp	r4, #2
   187fc:	str	r3, [sp, #12]
   18800:	str	r2, [sp, #8]
   18804:	beq	18874 <vc_gpuserv_execute_code@@Base+0xc8>
   18808:	add	r2, r5, #264	; 0x108
   1880c:	cmp	r4, #3
   18810:	str	r3, [sp, #20]
   18814:	str	r2, [sp, #16]
   18818:	beq	18874 <vc_gpuserv_execute_code@@Base+0xc8>
   1881c:	add	r2, r5, #396	; 0x18c
   18820:	cmp	r4, #4
   18824:	str	r3, [sp, #28]
   18828:	str	r2, [sp, #24]
   1882c:	beq	18874 <vc_gpuserv_execute_code@@Base+0xc8>
   18830:	add	r2, r5, #528	; 0x210
   18834:	cmp	r4, #5
   18838:	str	r3, [sp, #36]	; 0x24
   1883c:	str	r2, [sp, #32]
   18840:	beq	18874 <vc_gpuserv_execute_code@@Base+0xc8>
   18844:	add	r2, r5, #660	; 0x294
   18848:	cmp	r4, #6
   1884c:	str	r3, [sp, #44]	; 0x2c
   18850:	str	r2, [sp, #40]	; 0x28
   18854:	beq	18874 <vc_gpuserv_execute_code@@Base+0xc8>
   18858:	add	r2, r5, #792	; 0x318
   1885c:	cmp	r4, #8
   18860:	str	r3, [sp, #52]	; 0x34
   18864:	str	r2, [sp, #48]	; 0x30
   18868:	addeq	r5, r5, #924	; 0x39c
   1886c:	streq	r5, [sp, #56]	; 0x38
   18870:	streq	r3, [sp, #60]	; 0x3c
   18874:	mov	r2, r4
   18878:	mov	r1, sp
   1887c:	bl	5dd4 <vchiq_queue_message@plt>
   18880:	adds	r0, r0, #0
   18884:	mvnne	r0, #0
   18888:	add	sp, sp, #64	; 0x40
   1888c:	pop	{r4, r5, r6, r7, r8, pc}
   18890:	bl	1855c <vc_gpuserv_init@@Base>
   18894:	ldr	r3, [r6, #80]	; 0x50
   18898:	cmp	r3, #1
   1889c:	bls	18904 <vc_gpuserv_execute_code@@Base+0x158>
   188a0:	ldr	r7, [pc, #112]	; 18918 <vc_gpuserv_execute_code@@Base+0x16c>
   188a4:	ldr	r2, [pc, #112]	; 1891c <vc_gpuserv_execute_code@@Base+0x170>
   188a8:	add	r7, pc, r7
   188ac:	add	r8, r6, #80	; 0x50
   188b0:	add	r7, r7, #16
   188b4:	mov	r0, r8
   188b8:	mov	r3, r7
   188bc:	mov	r1, #2
   188c0:	add	r2, pc, r2
   188c4:	bl	6b60 <vcos_log_impl@plt>
   188c8:	ldr	r0, [r6]
   188cc:	cmp	r0, #0
   188d0:	bne	187d0 <vc_gpuserv_execute_code@@Base+0x24>
   188d4:	ldr	r3, [r6, #80]	; 0x50
   188d8:	cmp	r3, #1
   188dc:	bls	188f8 <vc_gpuserv_execute_code@@Base+0x14c>
   188e0:	ldr	r2, [pc, #56]	; 18920 <vc_gpuserv_execute_code@@Base+0x174>
   188e4:	mov	r0, r8
   188e8:	mov	r3, r7
   188ec:	mov	r1, #2
   188f0:	add	r2, pc, r2
   188f4:	bl	6b60 <vcos_log_impl@plt>
   188f8:	mvn	r0, #0
   188fc:	add	sp, sp, #64	; 0x40
   18900:	pop	{r4, r5, r6, r7, r8, pc}
   18904:	ldr	r0, [r6]
   18908:	cmp	r0, #0
   1890c:	beq	188f8 <vc_gpuserv_execute_code@@Base+0x14c>
   18910:	b	187d0 <vc_gpuserv_execute_code@@Base+0x24>
   18914:	andeq	r0, r2, r4, asr sl
   18918:	andeq	sp, r0, ip, asr #28
   1891c:	strdeq	sp, [r0], -r0
   18920:	andeq	sp, r0, ip, ror #29
   18924:	mov	ip, #0
   18928:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1892c:	ldr	r3, [pc, #312]	; 18a6c <vc_gpuserv_execute_code@@Base+0x2c0>
   18930:	mov	r9, r0
   18934:	add	r3, pc, r3
   18938:	ldr	r0, [r3]
   1893c:	sub	sp, sp, #20
   18940:	cmp	r0, #4
   18944:	mov	sl, r1
   18948:	mov	fp, r2
   1894c:	str	ip, [sp, #12]
   18950:	bhi	18a38 <vc_gpuserv_execute_code@@Base+0x28c>
   18954:	mov	r8, #0
   18958:	ldr	r4, [pc, #272]	; 18a70 <vc_gpuserv_execute_code@@Base+0x2c4>
   1895c:	ldr	r7, [pc, #272]	; 18a74 <vc_gpuserv_execute_code@@Base+0x2c8>
   18960:	add	r4, pc, r4
   18964:	add	r4, r4, #3296	; 0xce0
   18968:	add	r7, pc, r7
   1896c:	add	r4, r4, #28
   18970:	add	r6, sp, #12
   18974:	ldr	r0, [r7, #24]
   18978:	mov	r3, r6
   1897c:	str	r8, [sp]
   18980:	mov	r1, r9
   18984:	mov	r2, sl
   18988:	bl	61c4 <vchi_msg_dequeue@plt>
   1898c:	ldr	r3, [sp, #12]
   18990:	mov	r5, r0
   18994:	cmp	r3, #0
   18998:	bne	18a10 <vc_gpuserv_execute_code@@Base+0x264>
   1899c:	mov	r0, r4
   189a0:	bl	67e8 <sem_wait@plt>
   189a4:	cmn	r0, #1
   189a8:	bne	189fc <vc_gpuserv_execute_code@@Base+0x250>
   189ac:	bl	5fb4 <__errno_location@plt>
   189b0:	ldr	r3, [r0]
   189b4:	cmp	r3, #4
   189b8:	beq	1899c <vc_gpuserv_execute_code@@Base+0x1f0>
   189bc:	cmp	r3, #0
   189c0:	beq	18974 <vc_gpuserv_execute_code@@Base+0x1c8>
   189c4:	ldr	r3, [sp, #12]
   189c8:	cmp	r3, #0
   189cc:	bne	18a10 <vc_gpuserv_execute_code@@Base+0x264>
   189d0:	ldr	r0, [pc, #160]	; 18a78 <vc_gpuserv_execute_code@@Base+0x2cc>
   189d4:	add	r0, pc, r0
   189d8:	ldr	r3, [r0]
   189dc:	cmp	r3, #2
   189e0:	bhi	18a58 <vc_gpuserv_execute_code@@Base+0x2ac>
   189e4:	mov	r0, r5
   189e8:	cmp	fp, #0
   189ec:	ldrne	r3, [sp, #12]
   189f0:	strne	r3, [fp]
   189f4:	add	sp, sp, #20
   189f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189fc:	cmp	r0, #0
   18a00:	beq	18974 <vc_gpuserv_execute_code@@Base+0x1c8>
   18a04:	bl	5fb4 <__errno_location@plt>
   18a08:	ldr	r3, [r0]
   18a0c:	b	189bc <vc_gpuserv_execute_code@@Base+0x210>
   18a10:	ldr	r0, [pc, #100]	; 18a7c <vc_gpuserv_execute_code@@Base+0x2d0>
   18a14:	add	r0, pc, r0
   18a18:	ldr	r2, [r0]
   18a1c:	cmp	r2, #4
   18a20:	bls	189e4 <vc_gpuserv_execute_code@@Base+0x238>
   18a24:	ldr	r2, [pc, #84]	; 18a80 <vc_gpuserv_execute_code@@Base+0x2d4>
   18a28:	mov	r1, #5
   18a2c:	add	r2, pc, r2
   18a30:	bl	6b60 <vcos_log_impl@plt>
   18a34:	b	189e4 <vc_gpuserv_execute_code@@Base+0x238>
   18a38:	mov	r0, r3
   18a3c:	ldr	r2, [pc, #64]	; 18a84 <vc_gpuserv_execute_code@@Base+0x2d8>
   18a40:	ldr	r3, [pc, #64]	; 18a88 <vc_gpuserv_execute_code@@Base+0x2dc>
   18a44:	mov	r1, #5
   18a48:	add	r2, pc, r2
   18a4c:	add	r3, pc, r3
   18a50:	bl	6b60 <vcos_log_impl@plt>
   18a54:	b	18954 <vc_gpuserv_execute_code@@Base+0x1a8>
   18a58:	ldr	r2, [pc, #44]	; 18a8c <vc_gpuserv_execute_code@@Base+0x2e0>
   18a5c:	mov	r1, #3
   18a60:	add	r2, pc, r2
   18a64:	bl	6b60 <vcos_log_impl@plt>
   18a68:	b	189e4 <vc_gpuserv_execute_code@@Base+0x238>
   18a6c:	andeq	r0, r2, r4, asr #18
   18a70:	andeq	r0, r2, r8, lsl r9
   18a74:	andeq	r0, r2, r0, lsl r9
   18a78:	andeq	r0, r2, r4, lsr #17
   18a7c:	andeq	r0, r2, r4, ror #16
   18a80:	andeq	lr, r0, ip, asr #4
   18a84:	andeq	lr, r0, r4, lsr r4
   18a88:			; <UNDEFINED> instruction: 0x0000ddb4
   18a8c:	andeq	lr, r0, r8, lsr r2
   18a90:	push	{r4, r5, lr}
   18a94:	ldr	r2, [pc, #164]	; 18b40 <vc_gpuserv_execute_code@@Base+0x394>
   18a98:	sub	sp, sp, #12
   18a9c:	add	r2, pc, r2
   18aa0:	ldr	r3, [r2]
   18aa4:	mov	r5, r0
   18aa8:	cmp	r3, #4
   18aac:	mov	r4, r1
   18ab0:	bhi	18b10 <vc_gpuserv_execute_code@@Base+0x364>
   18ab4:	subs	r4, r4, #1
   18ab8:	movne	r4, #1
   18abc:	cmp	r5, #0
   18ac0:	orreq	r4, r4, #1
   18ac4:	cmp	r4, #0
   18ac8:	beq	18ad4 <vc_gpuserv_execute_code@@Base+0x328>
   18acc:	add	sp, sp, #12
   18ad0:	pop	{r4, r5, pc}
   18ad4:	mov	r0, r5
   18ad8:	add	r4, r5, #24
   18adc:	bl	5ffc <pthread_mutex_lock@plt>
   18ae0:	mov	r0, r4
   18ae4:	add	r1, sp, #4
   18ae8:	bl	6524 <sem_getvalue@plt>
   18aec:	cmp	r0, #0
   18af0:	bne	18b00 <vc_gpuserv_execute_code@@Base+0x354>
   18af4:	ldr	r3, [sp, #4]
   18af8:	cmp	r3, #0
   18afc:	beq	18b34 <vc_gpuserv_execute_code@@Base+0x388>
   18b00:	mov	r0, r5
   18b04:	bl	6b84 <pthread_mutex_unlock@plt>
   18b08:	add	sp, sp, #12
   18b0c:	pop	{r4, r5, pc}
   18b10:	ldr	r3, [pc, #44]	; 18b44 <vc_gpuserv_execute_code@@Base+0x398>
   18b14:	mov	r0, r2
   18b18:	ldr	r2, [pc, #40]	; 18b48 <vc_gpuserv_execute_code@@Base+0x39c>
   18b1c:	add	r3, pc, r3
   18b20:	add	r3, r3, #28
   18b24:	mov	r1, #5
   18b28:	add	r2, pc, r2
   18b2c:	bl	6b60 <vcos_log_impl@plt>
   18b30:	b	18ab4 <vc_gpuserv_execute_code@@Base+0x308>
   18b34:	mov	r0, r4
   18b38:	bl	66c8 <sem_post@plt>
   18b3c:	b	18b00 <vc_gpuserv_execute_code@@Base+0x354>
   18b40:	ldrdeq	r0, [r2], -ip
   18b44:	andeq	sp, r0, r4, ror #25
   18b48:	andeq	lr, r0, r4, asr r3
   18b4c:	push	{r4, r5, lr}
   18b50:	ldr	r2, [pc, #164]	; 18bfc <vc_gpuserv_execute_code@@Base+0x450>
   18b54:	sub	sp, sp, #12
   18b58:	add	r2, pc, r2
   18b5c:	ldr	r3, [r2]
   18b60:	mov	r5, r0
   18b64:	cmp	r3, #4
   18b68:	mov	r4, r1
   18b6c:	bhi	18bcc <vc_gpuserv_execute_code@@Base+0x420>
   18b70:	subs	r4, r4, #1
   18b74:	movne	r4, #1
   18b78:	cmp	r5, #0
   18b7c:	orreq	r4, r4, #1
   18b80:	cmp	r4, #0
   18b84:	beq	18b90 <vc_gpuserv_execute_code@@Base+0x3e4>
   18b88:	add	sp, sp, #12
   18b8c:	pop	{r4, r5, pc}
   18b90:	mov	r0, r5
   18b94:	add	r4, r5, #24
   18b98:	bl	5ffc <pthread_mutex_lock@plt>
   18b9c:	mov	r0, r4
   18ba0:	add	r1, sp, #4
   18ba4:	bl	6524 <sem_getvalue@plt>
   18ba8:	cmp	r0, #0
   18bac:	bne	18bbc <vc_gpuserv_execute_code@@Base+0x410>
   18bb0:	ldr	r3, [sp, #4]
   18bb4:	cmp	r3, #0
   18bb8:	beq	18bf0 <vc_gpuserv_execute_code@@Base+0x444>
   18bbc:	mov	r0, r5
   18bc0:	bl	6b84 <pthread_mutex_unlock@plt>
   18bc4:	add	sp, sp, #12
   18bc8:	pop	{r4, r5, pc}
   18bcc:	ldr	r3, [pc, #44]	; 18c00 <vc_gpuserv_execute_code@@Base+0x454>
   18bd0:	mov	r0, r2
   18bd4:	ldr	r2, [pc, #40]	; 18c04 <vc_gpuserv_execute_code@@Base+0x458>
   18bd8:	add	r3, pc, r3
   18bdc:	add	r3, r3, #56	; 0x38
   18be0:	mov	r1, #5
   18be4:	add	r2, pc, r2
   18be8:	bl	6b60 <vcos_log_impl@plt>
   18bec:	b	18b70 <vc_gpuserv_execute_code@@Base+0x3c4>
   18bf0:	mov	r0, r4
   18bf4:	bl	66c8 <sem_post@plt>
   18bf8:	b	18bbc <vc_gpuserv_execute_code@@Base+0x410>
   18bfc:	andeq	r0, r2, r0, lsr #14
   18c00:	andeq	sp, r0, r8, lsr #24
   18c04:	muleq	r0, r8, r2
   18c08:	push	{r4, r5, r6, r7, lr}
   18c0c:	cmp	r1, #65536	; 0x10000
   18c10:	sub	sp, sp, #52	; 0x34
   18c14:	str	r1, [sp, #8]
   18c18:	mov	r6, r3
   18c1c:	mov	lr, #4
   18c20:	addne	r3, sp, #8
   18c24:	movne	r1, #2
   18c28:	moveq	r1, #1
   18c2c:	strne	r3, [sp, #32]
   18c30:	mov	r3, #0
   18c34:	str	r0, [sp, #12]
   18c38:	orrne	r0, r0, #-2147483648	; 0x80000000
   18c3c:	strne	r0, [sp, #12]
   18c40:	ldr	r0, [pc, #452]	; 18e0c <vc_gpuserv_execute_code@@Base+0x660>
   18c44:	add	ip, sp, #12
   18c48:	add	r0, pc, r0
   18c4c:	ldr	r0, [r0]
   18c50:	str	ip, [sp, #24]
   18c54:	add	ip, sp, #48	; 0x30
   18c58:	strne	lr, [sp, #36]	; 0x24
   18c5c:	add	r1, ip, r1, lsl #3
   18c60:	movne	r7, #3
   18c64:	moveq	r7, #2
   18c68:	cmp	r0, #4
   18c6c:	str	lr, [sp, #28]
   18c70:	str	r2, [r1, #-24]	; 0xffffffe8
   18c74:	str	r6, [r1, #-20]	; 0xffffffec
   18c78:	str	r3, [sp, #20]
   18c7c:	bls	18cbc <vc_gpuserv_execute_code@@Base+0x510>
   18c80:	ldr	r3, [sp, #12]
   18c84:	ldr	r2, [pc, #388]	; 18e10 <vc_gpuserv_execute_code@@Base+0x664>
   18c88:	cmp	r3, #26
   18c8c:	add	r2, pc, r2
   18c90:	bls	18d98 <vc_gpuserv_execute_code@@Base+0x5ec>
   18c94:	ldr	r3, [pc, #376]	; 18e14 <vc_gpuserv_execute_code@@Base+0x668>
   18c98:	stm	sp, {r2, r6}
   18c9c:	ldr	r0, [pc, #372]	; 18e18 <vc_gpuserv_execute_code@@Base+0x66c>
   18ca0:	ldr	r2, [pc, #372]	; 18e1c <vc_gpuserv_execute_code@@Base+0x670>
   18ca4:	add	r3, pc, r3
   18ca8:	add	r3, r3, #84	; 0x54
   18cac:	add	r0, pc, r0
   18cb0:	mov	r1, #5
   18cb4:	add	r2, pc, r2
   18cb8:	bl	6b60 <vcos_log_impl@plt>
   18cbc:	ldr	r4, [pc, #348]	; 18e20 <vc_gpuserv_execute_code@@Base+0x674>
   18cc0:	add	r4, pc, r4
   18cc4:	ldr	r3, [r4, #3208]	; 0xc88
   18cc8:	cmp	r3, #0
   18ccc:	beq	18dbc <vc_gpuserv_execute_code@@Base+0x610>
   18cd0:	add	r5, r4, #24
   18cd4:	add	r5, r5, #3120	; 0xc30
   18cd8:	mov	r0, r5
   18cdc:	bl	5ffc <pthread_mutex_lock@plt>
   18ce0:	ldr	r3, [r4, #3208]	; 0xc88
   18ce4:	cmp	r3, #0
   18ce8:	beq	18db4 <vc_gpuserv_execute_code@@Base+0x608>
   18cec:	ldr	r0, [r4, #24]
   18cf0:	bl	6134 <vchi_service_use@plt>
   18cf4:	mov	r3, #0
   18cf8:	ldr	r0, [r4, #24]
   18cfc:	mov	r2, r7
   18d00:	str	r3, [sp]
   18d04:	add	r1, sp, #24
   18d08:	mov	r3, #4
   18d0c:	bl	5cc0 <vchi_msg_queuev@plt>
   18d10:	subs	r5, r0, #0
   18d14:	beq	18dcc <vc_gpuserv_execute_code@@Base+0x620>
   18d18:	ldr	r3, [r4]
   18d1c:	cmp	r3, #1
   18d20:	bls	18d5c <vc_gpuserv_execute_code@@Base+0x5b0>
   18d24:	ldr	r3, [sp, #12]
   18d28:	cmp	r3, #26
   18d2c:	bhi	18da8 <vc_gpuserv_execute_code@@Base+0x5fc>
   18d30:	ldr	r2, [pc, #236]	; 18e24 <vc_gpuserv_execute_code@@Base+0x678>
   18d34:	add	r2, pc, r2
   18d38:	ldr	r3, [r2, r3, lsl #2]
   18d3c:	ldr	r0, [pc, #228]	; 18e28 <vc_gpuserv_execute_code@@Base+0x67c>
   18d40:	ldr	r2, [pc, #228]	; 18e2c <vc_gpuserv_execute_code@@Base+0x680>
   18d44:	str	r6, [sp]
   18d48:	str	r5, [sp, #4]
   18d4c:	add	r0, pc, r0
   18d50:	mov	r1, #2
   18d54:	add	r2, pc, r2
   18d58:	bl	6b60 <vcos_log_impl@plt>
   18d5c:	ldr	r3, [pc, #204]	; 18e30 <vc_gpuserv_execute_code@@Base+0x684>
   18d60:	add	r3, pc, r3
   18d64:	ldr	r2, [r3, #3208]	; 0xc88
   18d68:	cmp	r2, #0
   18d6c:	beq	18d78 <vc_gpuserv_execute_code@@Base+0x5cc>
   18d70:	ldr	r0, [r3, #24]
   18d74:	bl	6014 <vchi_service_release@plt>
   18d78:	ldr	r0, [pc, #180]	; 18e34 <vc_gpuserv_execute_code@@Base+0x688>
   18d7c:	add	r0, pc, r0
   18d80:	add	r0, r0, #24
   18d84:	add	r0, r0, #3120	; 0xc30
   18d88:	bl	6b84 <pthread_mutex_unlock@plt>
   18d8c:	mov	r0, r5
   18d90:	add	sp, sp, #52	; 0x34
   18d94:	pop	{r4, r5, r6, r7, pc}
   18d98:	ldr	r2, [pc, #152]	; 18e38 <vc_gpuserv_execute_code@@Base+0x68c>
   18d9c:	add	r2, pc, r2
   18da0:	ldr	r2, [r2, r3, lsl #2]
   18da4:	b	18c94 <vc_gpuserv_execute_code@@Base+0x4e8>
   18da8:	ldr	r3, [pc, #140]	; 18e3c <vc_gpuserv_execute_code@@Base+0x690>
   18dac:	add	r3, pc, r3
   18db0:	b	18d3c <vc_gpuserv_execute_code@@Base+0x590>
   18db4:	mov	r0, r5
   18db8:	bl	6b84 <pthread_mutex_unlock@plt>
   18dbc:	mov	r5, #0
   18dc0:	mov	r0, r5
   18dc4:	add	sp, sp, #52	; 0x34
   18dc8:	pop	{r4, r5, r6, r7, pc}
   18dcc:	ldr	r0, [sp, #72]	; 0x48
   18dd0:	ldr	r1, [sp, #76]	; 0x4c
   18dd4:	add	r2, sp, #20
   18dd8:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   18ddc:	ldr	r3, [sp, #76]	; 0x4c
   18de0:	mov	r5, r0
   18de4:	cmp	r3, #4
   18de8:	beq	18d5c <vc_gpuserv_execute_code@@Base+0x5b0>
   18dec:	ldr	r3, [sp, #20]
   18df0:	cmp	r3, #4
   18df4:	bne	18d5c <vc_gpuserv_execute_code@@Base+0x5b0>
   18df8:	ldr	r3, [sp, #72]	; 0x48
   18dfc:	ldr	r3, [r3]
   18e00:	cmp	r3, #0
   18e04:	movlt	r5, r3
   18e08:	b	18d5c <vc_gpuserv_execute_code@@Base+0x5b0>
   18e0c:	andeq	r0, r2, r0, lsr r6
   18e10:	andeq	lr, r0, r0, lsr r0
   18e14:	andeq	sp, r0, ip, asr fp
   18e18:	andeq	r0, r2, ip, asr #11
   18e1c:	andeq	lr, r0, r8, lsl r0
   18e20:			; <UNDEFINED> instruction: 0x000205b8
   18e24:	muleq	r1, r0, r5
   18e28:	andeq	r0, r2, ip, lsr #10
   18e2c:			; <UNDEFINED> instruction: 0x0000dfb0
   18e30:	andeq	r0, r2, r8, lsl r5
   18e34:	strdeq	r0, [r2], -ip
   18e38:	andeq	pc, r1, r8, lsr #10
   18e3c:	andeq	sp, r0, r0, lsl pc

00018e40 <vc_vchi_tv_stop@@Base>:
   18e40:	push	{r4, r5, r6, r7, lr}
   18e44:	ldr	r4, [pc, #460]	; 19018 <vc_vchi_tv_stop@@Base+0x1d8>
   18e48:	sub	sp, sp, #12
   18e4c:	add	r4, pc, r4
   18e50:	ldr	r3, [r4, #3208]	; 0xc88
   18e54:	cmp	r3, #0
   18e58:	beq	18fd4 <vc_vchi_tv_stop@@Base+0x194>
   18e5c:	ldr	r3, [r4]
   18e60:	cmp	r3, #4
   18e64:	bhi	18fdc <vc_vchi_tv_stop@@Base+0x19c>
   18e68:	ldr	r5, [pc, #428]	; 1901c <vc_vchi_tv_stop@@Base+0x1dc>
   18e6c:	add	r5, pc, r5
   18e70:	add	r4, r5, #24
   18e74:	add	r6, r4, #3120	; 0xc30
   18e78:	mov	r0, r6
   18e7c:	bl	5ffc <pthread_mutex_lock@plt>
   18e80:	ldr	r3, [r5, #3208]	; 0xc88
   18e84:	cmp	r3, #0
   18e88:	beq	1900c <vc_vchi_tv_stop@@Base+0x1cc>
   18e8c:	ldr	r0, [r5, #24]
   18e90:	bl	6134 <vchi_service_use@plt>
   18e94:	ldr	r0, [r5, #24]
   18e98:	bl	6014 <vchi_service_release@plt>
   18e9c:	ldr	r3, [r5, #3140]	; 0xc44
   18ea0:	cmp	r3, #0
   18ea4:	movne	r6, #0
   18ea8:	beq	18ee4 <vc_vchi_tv_stop@@Base+0xa4>
   18eac:	mov	r7, r4
   18eb0:	ldr	r0, [r4]
   18eb4:	bl	6134 <vchi_service_use@plt>
   18eb8:	ldr	r0, [r4, #12]
   18ebc:	bl	6134 <vchi_service_use@plt>
   18ec0:	add	r4, r4, #4
   18ec4:	ldr	r0, [r7]
   18ec8:	bl	5d38 <vchi_service_close@plt>
   18ecc:	ldr	r0, [r4, #8]
   18ed0:	bl	5d38 <vchi_service_close@plt>
   18ed4:	ldr	r3, [r5, #3140]	; 0xc44
   18ed8:	add	r6, r6, #1
   18edc:	cmp	r3, r6
   18ee0:	bhi	18eac <vc_vchi_tv_stop@@Base+0x6c>
   18ee4:	mov	r3, #0
   18ee8:	ldr	r4, [pc, #304]	; 19020 <vc_vchi_tv_stop@@Base+0x1e0>
   18eec:	add	r6, sp, #4
   18ef0:	add	r4, pc, r4
   18ef4:	add	r0, r4, #24
   18ef8:	add	r0, r0, #3120	; 0xc30
   18efc:	str	r3, [r4, #3208]	; 0xc88
   18f00:	bl	6b84 <pthread_mutex_unlock@plt>
   18f04:	mov	r2, #1
   18f08:	add	r3, r4, #3328	; 0xd00
   18f0c:	add	r5, r3, #36	; 0x24
   18f10:	add	r0, r3, #12
   18f14:	str	r2, [r4, #3212]	; 0xc8c
   18f18:	bl	5ffc <pthread_mutex_lock@plt>
   18f1c:	mov	r0, r5
   18f20:	mov	r1, r6
   18f24:	bl	6524 <sem_getvalue@plt>
   18f28:	cmp	r0, #0
   18f2c:	bne	18f44 <vc_vchi_tv_stop@@Base+0x104>
   18f30:	ldr	r3, [sp, #4]
   18f34:	cmp	r3, #0
   18f38:	bne	18f44 <vc_vchi_tv_stop@@Base+0x104>
   18f3c:	mov	r0, r5
   18f40:	bl	66c8 <sem_post@plt>
   18f44:	ldr	r4, [pc, #216]	; 19024 <vc_vchi_tv_stop@@Base+0x1e4>
   18f48:	add	r4, pc, r4
   18f4c:	add	r0, r4, #3328	; 0xd00
   18f50:	add	r0, r0, #12
   18f54:	bl	6b84 <pthread_mutex_unlock@plt>
   18f58:	add	r0, r4, #3376	; 0xd30
   18f5c:	add	r0, r0, #8
   18f60:	mov	r1, r6
   18f64:	bl	698c <vcos_thread_join@plt>
   18f68:	ldr	r0, [r4, #3280]	; 0xcd0
   18f6c:	cmp	r0, #0
   18f70:	beq	18f78 <vc_vchi_tv_stop@@Base+0x138>
   18f74:	bl	5eac <vcos_generic_mem_free@plt>
   18f78:	ldr	r3, [pc, #168]	; 19028 <vc_vchi_tv_stop@@Base+0x1e8>
   18f7c:	add	r3, pc, r3
   18f80:	ldr	r0, [r3, #3264]	; 0xcc0
   18f84:	cmp	r0, #0
   18f88:	beq	18f90 <vc_vchi_tv_stop@@Base+0x150>
   18f8c:	bl	5eac <vcos_generic_mem_free@plt>
   18f90:	ldr	r4, [pc, #148]	; 1902c <vc_vchi_tv_stop@@Base+0x1ec>
   18f94:	add	r4, pc, r4
   18f98:	add	r0, r4, #24
   18f9c:	add	r0, r0, #3120	; 0xc30
   18fa0:	bl	68d8 <pthread_mutex_destroy@plt>
   18fa4:	add	r0, r4, #3296	; 0xce0
   18fa8:	add	r5, r0, #4
   18fac:	add	r0, r0, #28
   18fb0:	bl	5fcc <sem_destroy@plt>
   18fb4:	mov	r0, r5
   18fb8:	bl	68d8 <pthread_mutex_destroy@plt>
   18fbc:	add	r0, r4, #3328	; 0xd00
   18fc0:	add	r5, r0, #12
   18fc4:	add	r0, r0, #36	; 0x24
   18fc8:	bl	5fcc <sem_destroy@plt>
   18fcc:	mov	r0, r5
   18fd0:	bl	68d8 <pthread_mutex_destroy@plt>
   18fd4:	add	sp, sp, #12
   18fd8:	pop	{r4, r5, r6, r7, pc}
   18fdc:	ldr	r3, [pc, #76]	; 19030 <vc_vchi_tv_stop@@Base+0x1f0>
   18fe0:	ldr	r2, [pc, #76]	; 19034 <vc_vchi_tv_stop@@Base+0x1f4>
   18fe4:	add	r3, pc, r3
   18fe8:	add	r3, r3, #116	; 0x74
   18fec:	mov	r0, r4
   18ff0:	mov	r1, #5
   18ff4:	add	r2, pc, r2
   18ff8:	bl	6b60 <vcos_log_impl@plt>
   18ffc:	ldr	r3, [r4, #3208]	; 0xc88
   19000:	cmp	r3, #0
   19004:	bne	18e68 <vc_vchi_tv_stop@@Base+0x28>
   19008:	b	18fd4 <vc_vchi_tv_stop@@Base+0x194>
   1900c:	mov	r0, r6
   19010:	bl	6b84 <pthread_mutex_unlock@plt>
   19014:	b	18fd4 <vc_vchi_tv_stop@@Base+0x194>
   19018:	andeq	r0, r2, ip, lsr #8
   1901c:	andeq	r0, r2, ip, lsl #8
   19020:	andeq	r0, r2, r8, lsl #7
   19024:	andeq	r0, r2, r0, lsr r3
   19028:	strdeq	r0, [r2], -ip
   1902c:	andeq	r0, r2, r4, ror #5
   19030:	andeq	sp, r0, ip, lsl r8
   19034:	andeq	sp, r0, r8, lsl #29

00019038 <vc_tv_register_callback@@Base>:
   19038:	push	{r3, r4, r5, r6, r7, lr}
   1903c:	ldr	r2, [pc, #296]	; 1916c <vc_tv_register_callback@@Base+0x134>
   19040:	mov	r7, r0
   19044:	add	r2, pc, r2
   19048:	ldr	r3, [r2]
   1904c:	mov	r6, r1
   19050:	cmp	r3, #4
   19054:	bhi	19124 <vc_tv_register_callback@@Base+0xec>
   19058:	ldr	r4, [pc, #272]	; 19170 <vc_tv_register_callback@@Base+0x138>
   1905c:	add	r4, pc, r4
   19060:	ldr	r3, [r4, #3208]	; 0xc88
   19064:	cmp	r3, #0
   19068:	popeq	{r3, r4, r5, r6, r7, pc}
   1906c:	add	r5, r4, #24
   19070:	add	r5, r5, #3120	; 0xc30
   19074:	mov	r0, r5
   19078:	bl	5ffc <pthread_mutex_lock@plt>
   1907c:	ldr	r3, [r4, #3208]	; 0xc88
   19080:	cmp	r3, #0
   19084:	beq	19160 <vc_tv_register_callback@@Base+0x128>
   19088:	ldr	r0, [r4, #24]
   1908c:	bl	6134 <vchi_service_use@plt>
   19090:	ldr	r3, [r4, #3168]	; 0xc60
   19094:	cmp	r3, #0
   19098:	beq	19104 <vc_tv_register_callback@@Base+0xcc>
   1909c:	ldr	r3, [r4, #3176]	; 0xc68
   190a0:	cmp	r3, #0
   190a4:	beq	19150 <vc_tv_register_callback@@Base+0x118>
   190a8:	ldr	r3, [r4, #3184]	; 0xc70
   190ac:	cmp	r3, #0
   190b0:	beq	19158 <vc_tv_register_callback@@Base+0x120>
   190b4:	ldr	r3, [r4, #3192]	; 0xc78
   190b8:	cmp	r3, #0
   190bc:	beq	19148 <vc_tv_register_callback@@Base+0x110>
   190c0:	ldr	r3, [r4, #3200]	; 0xc80
   190c4:	cmp	r3, #0
   190c8:	beq	19100 <vc_tv_register_callback@@Base+0xc8>
   190cc:	ldr	r3, [pc, #160]	; 19174 <vc_tv_register_callback@@Base+0x13c>
   190d0:	add	r3, pc, r3
   190d4:	ldr	r2, [r3, #3208]	; 0xc88
   190d8:	cmp	r2, #0
   190dc:	beq	190e8 <vc_tv_register_callback@@Base+0xb0>
   190e0:	ldr	r0, [r3, #24]
   190e4:	bl	6014 <vchi_service_release@plt>
   190e8:	pop	{r3, r4, r5, r6, r7, lr}
   190ec:	ldr	r0, [pc, #132]	; 19178 <vc_tv_register_callback@@Base+0x140>
   190f0:	add	r0, pc, r0
   190f4:	add	r0, r0, #24
   190f8:	add	r0, r0, #3120	; 0xc30
   190fc:	b	6b84 <pthread_mutex_unlock@plt>
   19100:	mov	r3, #4
   19104:	ldr	r2, [pc, #112]	; 1917c <vc_tv_register_callback@@Base+0x144>
   19108:	add	r3, r3, #392	; 0x188
   1910c:	add	r2, pc, r2
   19110:	add	r3, r3, #1
   19114:	add	r3, r2, r3, lsl #3
   19118:	str	r7, [r3, #24]
   1911c:	str	r6, [r3, #28]
   19120:	b	190cc <vc_tv_register_callback@@Base+0x94>
   19124:	ldr	r3, [pc, #84]	; 19180 <vc_tv_register_callback@@Base+0x148>
   19128:	mov	r0, r2
   1912c:	ldr	r2, [pc, #80]	; 19184 <vc_tv_register_callback@@Base+0x14c>
   19130:	add	r3, pc, r3
   19134:	add	r3, r3, #132	; 0x84
   19138:	mov	r1, #5
   1913c:	add	r2, pc, r2
   19140:	bl	6b60 <vcos_log_impl@plt>
   19144:	b	19058 <vc_tv_register_callback@@Base+0x20>
   19148:	mov	r3, #3
   1914c:	b	19104 <vc_tv_register_callback@@Base+0xcc>
   19150:	mov	r3, #1
   19154:	b	19104 <vc_tv_register_callback@@Base+0xcc>
   19158:	mov	r3, #2
   1915c:	b	19104 <vc_tv_register_callback@@Base+0xcc>
   19160:	mov	r0, r5
   19164:	pop	{r3, r4, r5, r6, r7, lr}
   19168:	b	6b84 <pthread_mutex_unlock@plt>
   1916c:	andeq	r0, r2, r4, lsr r2
   19170:	andeq	r0, r2, ip, lsl r2
   19174:	andeq	r0, r2, r8, lsr #3
   19178:	andeq	r0, r2, r8, lsl #3
   1917c:	andeq	r0, r2, ip, ror #2
   19180:	ldrdeq	sp, [r0], -r0
   19184:	andeq	sp, r0, r0, asr #26

00019188 <vc_tv_unregister_callback@@Base>:
   19188:	push	{r4, r5, r6, lr}
   1918c:	ldr	r2, [pc, #304]	; 192c4 <vc_tv_unregister_callback@@Base+0x13c>
   19190:	mov	r5, r0
   19194:	add	r2, pc, r2
   19198:	ldr	r3, [r2]
   1919c:	cmp	r3, #4
   191a0:	bhi	1924c <vc_tv_unregister_callback@@Base+0xc4>
   191a4:	ldr	r4, [pc, #284]	; 192c8 <vc_tv_unregister_callback@@Base+0x140>
   191a8:	add	r4, pc, r4
   191ac:	ldr	r3, [r4, #3208]	; 0xc88
   191b0:	cmp	r3, #0
   191b4:	popeq	{r4, r5, r6, pc}
   191b8:	add	r6, r4, #24
   191bc:	add	r6, r6, #3120	; 0xc30
   191c0:	mov	r0, r6
   191c4:	bl	5ffc <pthread_mutex_lock@plt>
   191c8:	ldr	r3, [r4, #3208]	; 0xc88
   191cc:	cmp	r3, #0
   191d0:	beq	192b8 <vc_tv_unregister_callback@@Base+0x130>
   191d4:	ldr	r0, [r4, #24]
   191d8:	bl	6134 <vchi_service_use@plt>
   191dc:	ldr	r3, [r4, #3168]	; 0xc60
   191e0:	cmp	r3, r5
   191e4:	beq	19298 <vc_tv_unregister_callback@@Base+0x110>
   191e8:	ldr	r3, [r4, #3176]	; 0xc68
   191ec:	cmp	r3, r5
   191f0:	beq	192a0 <vc_tv_unregister_callback@@Base+0x118>
   191f4:	ldr	r3, [r4, #3184]	; 0xc70
   191f8:	cmp	r3, r5
   191fc:	beq	192a8 <vc_tv_unregister_callback@@Base+0x120>
   19200:	ldr	r3, [r4, #3192]	; 0xc78
   19204:	cmp	r3, r5
   19208:	beq	19270 <vc_tv_unregister_callback@@Base+0xe8>
   1920c:	ldr	r3, [r4, #3200]	; 0xc80
   19210:	cmp	r3, r5
   19214:	beq	192b0 <vc_tv_unregister_callback@@Base+0x128>
   19218:	ldr	r3, [pc, #172]	; 192cc <vc_tv_unregister_callback@@Base+0x144>
   1921c:	add	r3, pc, r3
   19220:	ldr	r2, [r3, #3208]	; 0xc88
   19224:	cmp	r2, #0
   19228:	beq	19234 <vc_tv_unregister_callback@@Base+0xac>
   1922c:	ldr	r0, [r3, #24]
   19230:	bl	6014 <vchi_service_release@plt>
   19234:	pop	{r4, r5, r6, lr}
   19238:	ldr	r0, [pc, #144]	; 192d0 <vc_tv_unregister_callback@@Base+0x148>
   1923c:	add	r0, pc, r0
   19240:	add	r0, r0, #24
   19244:	add	r0, r0, #3120	; 0xc30
   19248:	b	6b84 <pthread_mutex_unlock@plt>
   1924c:	ldr	r3, [pc, #128]	; 192d4 <vc_tv_unregister_callback@@Base+0x14c>
   19250:	mov	r0, r2
   19254:	ldr	r2, [pc, #124]	; 192d8 <vc_tv_unregister_callback@@Base+0x150>
   19258:	add	r3, pc, r3
   1925c:	add	r3, r3, #156	; 0x9c
   19260:	mov	r1, #5
   19264:	add	r2, pc, r2
   19268:	bl	6b60 <vcos_log_impl@plt>
   1926c:	b	191a4 <vc_tv_unregister_callback@@Base+0x1c>
   19270:	mov	r3, #3
   19274:	mov	r1, #0
   19278:	add	r2, r3, #392	; 0x188
   1927c:	ldr	r3, [pc, #88]	; 192dc <vc_tv_unregister_callback@@Base+0x154>
   19280:	add	r2, r2, #1
   19284:	add	r3, pc, r3
   19288:	add	r3, r3, r2, lsl #3
   1928c:	str	r1, [r3, #24]
   19290:	str	r1, [r3, #28]
   19294:	b	19218 <vc_tv_unregister_callback@@Base+0x90>
   19298:	mov	r3, #0
   1929c:	b	19274 <vc_tv_unregister_callback@@Base+0xec>
   192a0:	mov	r3, #1
   192a4:	b	19274 <vc_tv_unregister_callback@@Base+0xec>
   192a8:	mov	r3, #2
   192ac:	b	19274 <vc_tv_unregister_callback@@Base+0xec>
   192b0:	mov	r3, #4
   192b4:	b	19274 <vc_tv_unregister_callback@@Base+0xec>
   192b8:	mov	r0, r6
   192bc:	pop	{r4, r5, r6, lr}
   192c0:	b	6b84 <pthread_mutex_unlock@plt>
   192c4:	andeq	r0, r2, r4, ror #1
   192c8:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   192cc:	andeq	r0, r2, ip, asr r0
   192d0:	andeq	r0, r2, ip, lsr r0
   192d4:	andeq	sp, r0, r8, lsr #11
   192d8:	andeq	sp, r0, r8, lsl ip
   192dc:	strdeq	pc, [r1], -r4

000192e0 <vc_tv_unregister_callback_full@@Base>:
   192e0:	push	{r3, r4, r5, r6, r7, lr}
   192e4:	ldr	r2, [pc, #404]	; 19480 <vc_tv_unregister_callback_full@@Base+0x1a0>
   192e8:	mov	r5, r0
   192ec:	add	r2, pc, r2
   192f0:	ldr	r3, [r2]
   192f4:	mov	r7, r1
   192f8:	cmp	r3, #4
   192fc:	bhi	193cc <vc_tv_unregister_callback_full@@Base+0xec>
   19300:	ldr	r4, [pc, #380]	; 19484 <vc_tv_unregister_callback_full@@Base+0x1a4>
   19304:	add	r4, pc, r4
   19308:	ldr	r3, [r4, #3208]	; 0xc88
   1930c:	cmp	r3, #0
   19310:	popeq	{r3, r4, r5, r6, r7, pc}
   19314:	add	r6, r4, #24
   19318:	add	r6, r6, #3120	; 0xc30
   1931c:	mov	r0, r6
   19320:	bl	5ffc <pthread_mutex_lock@plt>
   19324:	ldr	r3, [r4, #3208]	; 0xc88
   19328:	cmp	r3, #0
   1932c:	beq	19474 <vc_tv_unregister_callback_full@@Base+0x194>
   19330:	ldr	r0, [r4, #24]
   19334:	bl	6134 <vchi_service_use@plt>
   19338:	ldr	r3, [r4, #3168]	; 0xc60
   1933c:	cmp	r3, r5
   19340:	beq	193f0 <vc_tv_unregister_callback_full@@Base+0x110>
   19344:	ldr	r3, [pc, #316]	; 19488 <vc_tv_unregister_callback_full@@Base+0x1a8>
   19348:	add	r3, pc, r3
   1934c:	ldr	r2, [r3, #3176]	; 0xc68
   19350:	cmp	r2, r5
   19354:	beq	19424 <vc_tv_unregister_callback_full@@Base+0x144>
   19358:	ldr	r3, [pc, #300]	; 1948c <vc_tv_unregister_callback_full@@Base+0x1ac>
   1935c:	add	r3, pc, r3
   19360:	ldr	r2, [r3, #3184]	; 0xc70
   19364:	cmp	r2, r5
   19368:	beq	19438 <vc_tv_unregister_callback_full@@Base+0x158>
   1936c:	ldr	r3, [pc, #284]	; 19490 <vc_tv_unregister_callback_full@@Base+0x1b0>
   19370:	add	r3, pc, r3
   19374:	ldr	r2, [r3, #3192]	; 0xc78
   19378:	cmp	r2, r5
   1937c:	beq	1944c <vc_tv_unregister_callback_full@@Base+0x16c>
   19380:	ldr	r3, [pc, #268]	; 19494 <vc_tv_unregister_callback_full@@Base+0x1b4>
   19384:	add	r3, pc, r3
   19388:	ldr	r2, [r3, #3200]	; 0xc80
   1938c:	cmp	r2, r5
   19390:	beq	19460 <vc_tv_unregister_callback_full@@Base+0x180>
   19394:	ldr	r3, [pc, #252]	; 19498 <vc_tv_unregister_callback_full@@Base+0x1b8>
   19398:	add	r3, pc, r3
   1939c:	ldr	r2, [r3, #3208]	; 0xc88
   193a0:	cmp	r2, #0
   193a4:	bne	193c0 <vc_tv_unregister_callback_full@@Base+0xe0>
   193a8:	pop	{r3, r4, r5, r6, r7, lr}
   193ac:	ldr	r0, [pc, #232]	; 1949c <vc_tv_unregister_callback_full@@Base+0x1bc>
   193b0:	add	r0, pc, r0
   193b4:	add	r0, r0, #24
   193b8:	add	r0, r0, #3120	; 0xc30
   193bc:	b	6b84 <pthread_mutex_unlock@plt>
   193c0:	ldr	r0, [r3, #24]
   193c4:	bl	6014 <vchi_service_release@plt>
   193c8:	b	193a8 <vc_tv_unregister_callback_full@@Base+0xc8>
   193cc:	ldr	r3, [pc, #204]	; 194a0 <vc_tv_unregister_callback_full@@Base+0x1c0>
   193d0:	mov	r0, r2
   193d4:	ldr	r2, [pc, #200]	; 194a4 <vc_tv_unregister_callback_full@@Base+0x1c4>
   193d8:	add	r3, pc, r3
   193dc:	add	r3, r3, #184	; 0xb8
   193e0:	mov	r1, #5
   193e4:	add	r2, pc, r2
   193e8:	bl	6b60 <vcos_log_impl@plt>
   193ec:	b	19300 <vc_tv_unregister_callback_full@@Base+0x20>
   193f0:	ldr	r3, [r4, #3172]	; 0xc64
   193f4:	cmp	r3, r7
   193f8:	bne	19344 <vc_tv_unregister_callback_full@@Base+0x64>
   193fc:	mov	r3, #0
   19400:	mov	r1, #0
   19404:	add	r2, r3, #392	; 0x188
   19408:	ldr	r3, [pc, #152]	; 194a8 <vc_tv_unregister_callback_full@@Base+0x1c8>
   1940c:	add	r2, r2, #1
   19410:	add	r3, pc, r3
   19414:	add	r3, r3, r2, lsl #3
   19418:	str	r1, [r3, #24]
   1941c:	str	r1, [r3, #28]
   19420:	b	19394 <vc_tv_unregister_callback_full@@Base+0xb4>
   19424:	ldr	r3, [r3, #3180]	; 0xc6c
   19428:	cmp	r3, r7
   1942c:	bne	19358 <vc_tv_unregister_callback_full@@Base+0x78>
   19430:	mov	r3, #1
   19434:	b	19400 <vc_tv_unregister_callback_full@@Base+0x120>
   19438:	ldr	r3, [r3, #3188]	; 0xc74
   1943c:	cmp	r3, r7
   19440:	bne	1936c <vc_tv_unregister_callback_full@@Base+0x8c>
   19444:	mov	r3, #2
   19448:	b	19400 <vc_tv_unregister_callback_full@@Base+0x120>
   1944c:	ldr	r3, [r3, #3196]	; 0xc7c
   19450:	cmp	r3, r7
   19454:	bne	19380 <vc_tv_unregister_callback_full@@Base+0xa0>
   19458:	mov	r3, #3
   1945c:	b	19400 <vc_tv_unregister_callback_full@@Base+0x120>
   19460:	ldr	r3, [r3, #3204]	; 0xc84
   19464:	cmp	r3, r7
   19468:	moveq	r3, #4
   1946c:	bne	19394 <vc_tv_unregister_callback_full@@Base+0xb4>
   19470:	b	19400 <vc_tv_unregister_callback_full@@Base+0x120>
   19474:	mov	r0, r6
   19478:	pop	{r3, r4, r5, r6, r7, lr}
   1947c:	b	6b84 <pthread_mutex_unlock@plt>
   19480:	andeq	pc, r1, ip, lsl #31
   19484:	andeq	pc, r1, r4, ror pc	; <UNPREDICTABLE>
   19488:	andeq	pc, r1, r0, lsr pc	; <UNPREDICTABLE>
   1948c:	andeq	pc, r1, ip, lsl pc	; <UNPREDICTABLE>
   19490:	andeq	pc, r1, r8, lsl #30
   19494:	strdeq	pc, [r1], -r4
   19498:	andeq	pc, r1, r0, ror #29
   1949c:	andeq	pc, r1, r8, asr #29
   194a0:	andeq	sp, r0, r8, lsr #8
   194a4:	muleq	r0, r8, sl
   194a8:	andeq	pc, r1, r8, ror #28

000194ac <vc_tv_get_state_id@@Base>:
   194ac:	push	{r4, r5, r6, r7, lr}
   194b0:	ldr	r2, [pc, #576]	; 196f8 <vc_tv_get_state_id@@Base+0x24c>
   194b4:	sub	sp, sp, #52	; 0x34
   194b8:	add	r2, pc, r2
   194bc:	ldr	r3, [r2]
   194c0:	mov	r4, r0
   194c4:	cmp	r3, #4
   194c8:	mov	r6, r1
   194cc:	bhi	19648 <vc_tv_get_state_id@@Base+0x19c>
   194d0:	cmp	r6, #0
   194d4:	beq	196f0 <vc_tv_get_state_id@@Base+0x244>
   194d8:	mov	r3, #0
   194dc:	mov	r1, #4
   194e0:	add	r2, sp, #12
   194e4:	cmp	r4, #65536	; 0x10000
   194e8:	str	r4, [sp, #16]
   194ec:	str	r3, [sp, #12]
   194f0:	str	r1, [sp, #28]
   194f4:	str	r2, [sp, #24]
   194f8:	beq	1966c <vc_tv_get_state_id@@Base+0x1c0>
   194fc:	mov	r0, #-2147483648	; 0x80000000
   19500:	ldr	r2, [pc, #500]	; 196fc <vc_tv_get_state_id@@Base+0x250>
   19504:	str	r3, [sp, #40]	; 0x28
   19508:	add	r2, pc, r2
   1950c:	ldr	r2, [r2]
   19510:	str	r3, [sp, #44]	; 0x2c
   19514:	str	r3, [sp, #20]
   19518:	cmp	r2, r1
   1951c:	add	r3, sp, #16
   19520:	str	r1, [sp, #36]	; 0x24
   19524:	mov	r7, #3
   19528:	str	r0, [sp, #12]
   1952c:	str	r3, [sp, #32]
   19530:	bhi	19610 <vc_tv_get_state_id@@Base+0x164>
   19534:	ldr	r4, [pc, #452]	; 19700 <vc_tv_get_state_id@@Base+0x254>
   19538:	add	r4, pc, r4
   1953c:	ldr	r3, [r4, #3208]	; 0xc88
   19540:	cmp	r3, #0
   19544:	beq	196a4 <vc_tv_get_state_id@@Base+0x1f8>
   19548:	add	r5, r4, #24
   1954c:	add	r5, r5, #3120	; 0xc30
   19550:	mov	r0, r5
   19554:	bl	5ffc <pthread_mutex_lock@plt>
   19558:	ldr	r3, [r4, #3208]	; 0xc88
   1955c:	cmp	r3, #0
   19560:	beq	1969c <vc_tv_get_state_id@@Base+0x1f0>
   19564:	ldr	r0, [r4, #24]
   19568:	bl	6134 <vchi_service_use@plt>
   1956c:	mov	r3, #0
   19570:	ldr	r0, [r4, #24]
   19574:	mov	r2, r7
   19578:	str	r3, [sp]
   1957c:	add	r1, sp, #24
   19580:	mov	r3, #4
   19584:	bl	5cc0 <vchi_msg_queuev@plt>
   19588:	subs	r5, r0, #0
   1958c:	beq	196b4 <vc_tv_get_state_id@@Base+0x208>
   19590:	ldr	r3, [r4]
   19594:	cmp	r3, #1
   19598:	bls	195d4 <vc_tv_get_state_id@@Base+0x128>
   1959c:	ldr	r3, [sp, #12]
   195a0:	cmp	r3, #26
   195a4:	bhi	196e4 <vc_tv_get_state_id@@Base+0x238>
   195a8:	ldr	r2, [pc, #340]	; 19704 <vc_tv_get_state_id@@Base+0x258>
   195ac:	add	r2, pc, r2
   195b0:	ldr	r3, [r2, r3, lsl #2]
   195b4:	mov	r2, #0
   195b8:	ldr	r0, [pc, #328]	; 19708 <vc_tv_get_state_id@@Base+0x25c>
   195bc:	stm	sp, {r2, r5}
   195c0:	ldr	r2, [pc, #324]	; 1970c <vc_tv_get_state_id@@Base+0x260>
   195c4:	add	r0, pc, r0
   195c8:	mov	r1, #2
   195cc:	add	r2, pc, r2
   195d0:	bl	6b60 <vcos_log_impl@plt>
   195d4:	ldr	r3, [pc, #308]	; 19710 <vc_tv_get_state_id@@Base+0x264>
   195d8:	add	r3, pc, r3
   195dc:	ldr	r2, [r3, #3208]	; 0xc88
   195e0:	cmp	r2, #0
   195e4:	beq	195f0 <vc_tv_get_state_id@@Base+0x144>
   195e8:	ldr	r0, [r3, #24]
   195ec:	bl	6014 <vchi_service_release@plt>
   195f0:	ldr	r0, [pc, #284]	; 19714 <vc_tv_get_state_id@@Base+0x268>
   195f4:	add	r0, pc, r0
   195f8:	add	r0, r0, #24
   195fc:	add	r0, r0, #3120	; 0xc30
   19600:	bl	6b84 <pthread_mutex_unlock@plt>
   19604:	mov	r0, r5
   19608:	add	sp, sp, #52	; 0x34
   1960c:	pop	{r4, r5, r6, r7, pc}
   19610:	ldr	r1, [pc, #256]	; 19718 <vc_tv_get_state_id@@Base+0x26c>
   19614:	add	r1, pc, r1
   19618:	mov	r2, #0
   1961c:	ldr	r3, [pc, #248]	; 1971c <vc_tv_get_state_id@@Base+0x270>
   19620:	stm	sp, {r1, r2}
   19624:	ldr	r0, [pc, #244]	; 19720 <vc_tv_get_state_id@@Base+0x274>
   19628:	ldr	r2, [pc, #244]	; 19724 <vc_tv_get_state_id@@Base+0x278>
   1962c:	add	r3, pc, r3
   19630:	add	r3, r3, #84	; 0x54
   19634:	add	r0, pc, r0
   19638:	mov	r1, #5
   1963c:	add	r2, pc, r2
   19640:	bl	6b60 <vcos_log_impl@plt>
   19644:	b	19534 <vc_tv_get_state_id@@Base+0x88>
   19648:	ldr	r3, [pc, #216]	; 19728 <vc_tv_get_state_id@@Base+0x27c>
   1964c:	mov	r0, r2
   19650:	ldr	r2, [pc, #212]	; 1972c <vc_tv_get_state_id@@Base+0x280>
   19654:	add	r3, pc, r3
   19658:	add	r3, r3, #216	; 0xd8
   1965c:	mov	r1, #5
   19660:	add	r2, pc, r2
   19664:	bl	6b60 <vcos_log_impl@plt>
   19668:	b	194d0 <vc_tv_get_state_id@@Base+0x24>
   1966c:	ldr	r2, [pc, #188]	; 19730 <vc_tv_get_state_id@@Base+0x284>
   19670:	str	r3, [sp, #32]
   19674:	add	r2, pc, r2
   19678:	ldr	r2, [r2]
   1967c:	str	r3, [sp, #36]	; 0x24
   19680:	cmp	r2, #4
   19684:	mov	r7, #2
   19688:	str	r3, [sp, #20]
   1968c:	bls	19534 <vc_tv_get_state_id@@Base+0x88>
   19690:	ldr	r1, [pc, #156]	; 19734 <vc_tv_get_state_id@@Base+0x288>
   19694:	add	r1, pc, r1
   19698:	b	19618 <vc_tv_get_state_id@@Base+0x16c>
   1969c:	mov	r0, r5
   196a0:	bl	6b84 <pthread_mutex_unlock@plt>
   196a4:	mov	r5, #0
   196a8:	mov	r0, r5
   196ac:	add	sp, sp, #52	; 0x34
   196b0:	pop	{r4, r5, r6, r7, pc}
   196b4:	mov	r0, r6
   196b8:	mov	r1, #16
   196bc:	add	r2, sp, #20
   196c0:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   196c4:	ldr	r3, [sp, #20]
   196c8:	mov	r5, r0
   196cc:	cmp	r3, #4
   196d0:	bne	195d4 <vc_tv_get_state_id@@Base+0x128>
   196d4:	ldr	r3, [r6]
   196d8:	cmp	r3, #0
   196dc:	movlt	r5, r3
   196e0:	b	195d4 <vc_tv_get_state_id@@Base+0x128>
   196e4:	ldr	r3, [pc, #76]	; 19738 <vc_tv_get_state_id@@Base+0x28c>
   196e8:	add	r3, pc, r3
   196ec:	b	195b4 <vc_tv_get_state_id@@Base+0x108>
   196f0:	mvn	r5, #0
   196f4:	b	19604 <vc_tv_get_state_id@@Base+0x158>
   196f8:	andeq	pc, r1, r0, asr #27
   196fc:	andeq	pc, r1, r0, ror sp	; <UNPREDICTABLE>
   19700:	andeq	pc, r1, r0, asr #26
   19704:	andeq	lr, r1, r8, lsl sp
   19708:			; <UNDEFINED> instruction: 0x0001fcb4
   1970c:	andeq	sp, r0, r8, lsr r7
   19710:	andeq	pc, r1, r0, lsr #25
   19714:	andeq	pc, r1, r4, lsl #25
   19718:	andeq	sp, r0, r8, lsr #13
   1971c:	ldrdeq	sp, [r0], -r4
   19720:	andeq	pc, r1, r4, asr #24
   19724:	muleq	r0, r0, r6
   19728:	andeq	sp, r0, ip, lsr #3
   1972c:	andeq	sp, r0, ip, lsl r8
   19730:	andeq	pc, r1, r4, lsl #24
   19734:			; <UNDEFINED> instruction: 0x0000d6b4
   19738:	ldrdeq	sp, [r0], -r4

0001973c <vc_tv_get_state@@Base>:
   1973c:	ldr	r3, [pc, #12]	; 19750 <vc_tv_get_state@@Base+0x14>
   19740:	mov	r1, r0
   19744:	add	r3, pc, r3
   19748:	ldr	r0, [r3, #3592]	; 0xe08
   1974c:	b	194ac <vc_tv_get_state_id@@Base>
   19750:	andeq	pc, r1, r4, lsr fp	; <UNPREDICTABLE>

00019754 <vc_tv_get_display_state_id@@Base>:
   19754:	push	{r4, r5, r6, r7, lr}
   19758:	ldr	r2, [pc, #584]	; 199a8 <vc_tv_get_display_state_id@@Base+0x254>
   1975c:	sub	sp, sp, #52	; 0x34
   19760:	add	r2, pc, r2
   19764:	ldr	r3, [r2]
   19768:	mov	r4, r0
   1976c:	cmp	r3, #4
   19770:	mov	r6, r1
   19774:	bhi	198f4 <vc_tv_get_display_state_id@@Base+0x1a0>
   19778:	cmp	r6, #0
   1977c:	beq	199a0 <vc_tv_get_display_state_id@@Base+0x24c>
   19780:	mov	r3, #23
   19784:	mov	r1, #4
   19788:	str	r3, [sp, #12]
   1978c:	cmp	r4, #65536	; 0x10000
   19790:	add	r3, sp, #12
   19794:	str	r4, [sp, #16]
   19798:	str	r1, [sp, #28]
   1979c:	str	r3, [sp, #24]
   197a0:	beq	19918 <vc_tv_get_display_state_id@@Base+0x1c4>
   197a4:	mov	r3, #0
   197a8:	mov	r0, #-2147483625	; 0x80000017
   197ac:	ldr	r2, [pc, #504]	; 199ac <vc_tv_get_display_state_id@@Base+0x258>
   197b0:	str	r3, [sp, #40]	; 0x28
   197b4:	add	r2, pc, r2
   197b8:	ldr	r2, [r2]
   197bc:	str	r3, [sp, #44]	; 0x2c
   197c0:	str	r3, [sp, #20]
   197c4:	cmp	r2, r1
   197c8:	add	r3, sp, #16
   197cc:	str	r1, [sp, #36]	; 0x24
   197d0:	mov	r7, #3
   197d4:	str	r0, [sp, #12]
   197d8:	str	r3, [sp, #32]
   197dc:	bhi	198bc <vc_tv_get_display_state_id@@Base+0x168>
   197e0:	ldr	r4, [pc, #456]	; 199b0 <vc_tv_get_display_state_id@@Base+0x25c>
   197e4:	add	r4, pc, r4
   197e8:	ldr	r3, [r4, #3208]	; 0xc88
   197ec:	cmp	r3, #0
   197f0:	beq	19954 <vc_tv_get_display_state_id@@Base+0x200>
   197f4:	add	r5, r4, #24
   197f8:	add	r5, r5, #3120	; 0xc30
   197fc:	mov	r0, r5
   19800:	bl	5ffc <pthread_mutex_lock@plt>
   19804:	ldr	r3, [r4, #3208]	; 0xc88
   19808:	cmp	r3, #0
   1980c:	beq	1994c <vc_tv_get_display_state_id@@Base+0x1f8>
   19810:	ldr	r0, [r4, #24]
   19814:	bl	6134 <vchi_service_use@plt>
   19818:	mov	r3, #0
   1981c:	ldr	r0, [r4, #24]
   19820:	mov	r2, r7
   19824:	str	r3, [sp]
   19828:	add	r1, sp, #24
   1982c:	mov	r3, #4
   19830:	bl	5cc0 <vchi_msg_queuev@plt>
   19834:	subs	r5, r0, #0
   19838:	beq	19964 <vc_tv_get_display_state_id@@Base+0x210>
   1983c:	ldr	r3, [r4]
   19840:	cmp	r3, #1
   19844:	bls	19880 <vc_tv_get_display_state_id@@Base+0x12c>
   19848:	ldr	r3, [sp, #12]
   1984c:	cmp	r3, #26
   19850:	bhi	19994 <vc_tv_get_display_state_id@@Base+0x240>
   19854:	ldr	r2, [pc, #344]	; 199b4 <vc_tv_get_display_state_id@@Base+0x260>
   19858:	add	r2, pc, r2
   1985c:	ldr	r3, [r2, r3, lsl #2]
   19860:	mov	r2, #0
   19864:	ldr	r0, [pc, #332]	; 199b8 <vc_tv_get_display_state_id@@Base+0x264>
   19868:	stm	sp, {r2, r5}
   1986c:	ldr	r2, [pc, #328]	; 199bc <vc_tv_get_display_state_id@@Base+0x268>
   19870:	add	r0, pc, r0
   19874:	mov	r1, #2
   19878:	add	r2, pc, r2
   1987c:	bl	6b60 <vcos_log_impl@plt>
   19880:	ldr	r3, [pc, #312]	; 199c0 <vc_tv_get_display_state_id@@Base+0x26c>
   19884:	add	r3, pc, r3
   19888:	ldr	r2, [r3, #3208]	; 0xc88
   1988c:	cmp	r2, #0
   19890:	beq	1989c <vc_tv_get_display_state_id@@Base+0x148>
   19894:	ldr	r0, [r3, #24]
   19898:	bl	6014 <vchi_service_release@plt>
   1989c:	ldr	r0, [pc, #288]	; 199c4 <vc_tv_get_display_state_id@@Base+0x270>
   198a0:	add	r0, pc, r0
   198a4:	add	r0, r0, #24
   198a8:	add	r0, r0, #3120	; 0xc30
   198ac:	bl	6b84 <pthread_mutex_unlock@plt>
   198b0:	mov	r0, r5
   198b4:	add	sp, sp, #52	; 0x34
   198b8:	pop	{r4, r5, r6, r7, pc}
   198bc:	ldr	r1, [pc, #260]	; 199c8 <vc_tv_get_display_state_id@@Base+0x274>
   198c0:	add	r1, pc, r1
   198c4:	mov	r2, #0
   198c8:	ldr	r3, [pc, #252]	; 199cc <vc_tv_get_display_state_id@@Base+0x278>
   198cc:	stm	sp, {r1, r2}
   198d0:	ldr	r0, [pc, #248]	; 199d0 <vc_tv_get_display_state_id@@Base+0x27c>
   198d4:	ldr	r2, [pc, #248]	; 199d4 <vc_tv_get_display_state_id@@Base+0x280>
   198d8:	add	r3, pc, r3
   198dc:	add	r3, r3, #84	; 0x54
   198e0:	add	r0, pc, r0
   198e4:	mov	r1, #5
   198e8:	add	r2, pc, r2
   198ec:	bl	6b60 <vcos_log_impl@plt>
   198f0:	b	197e0 <vc_tv_get_display_state_id@@Base+0x8c>
   198f4:	ldr	r3, [pc, #220]	; 199d8 <vc_tv_get_display_state_id@@Base+0x284>
   198f8:	mov	r0, r2
   198fc:	ldr	r2, [pc, #216]	; 199dc <vc_tv_get_display_state_id@@Base+0x288>
   19900:	add	r3, pc, r3
   19904:	add	r3, r3, #236	; 0xec
   19908:	mov	r1, #5
   1990c:	add	r2, pc, r2
   19910:	bl	6b60 <vcos_log_impl@plt>
   19914:	b	19778 <vc_tv_get_display_state_id@@Base+0x24>
   19918:	mov	r3, #0
   1991c:	ldr	r2, [pc, #188]	; 199e0 <vc_tv_get_display_state_id@@Base+0x28c>
   19920:	str	r3, [sp, #32]
   19924:	add	r2, pc, r2
   19928:	ldr	r2, [r2]
   1992c:	str	r3, [sp, #36]	; 0x24
   19930:	cmp	r2, #4
   19934:	mov	r7, #2
   19938:	str	r3, [sp, #20]
   1993c:	bls	197e0 <vc_tv_get_display_state_id@@Base+0x8c>
   19940:	ldr	r1, [pc, #156]	; 199e4 <vc_tv_get_display_state_id@@Base+0x290>
   19944:	add	r1, pc, r1
   19948:	b	198c4 <vc_tv_get_display_state_id@@Base+0x170>
   1994c:	mov	r0, r5
   19950:	bl	6b84 <pthread_mutex_unlock@plt>
   19954:	mov	r5, #0
   19958:	mov	r0, r5
   1995c:	add	sp, sp, #52	; 0x34
   19960:	pop	{r4, r5, r6, r7, pc}
   19964:	mov	r0, r6
   19968:	mov	r1, #52	; 0x34
   1996c:	add	r2, sp, #20
   19970:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   19974:	ldr	r3, [sp, #20]
   19978:	mov	r5, r0
   1997c:	cmp	r3, #4
   19980:	bne	19880 <vc_tv_get_display_state_id@@Base+0x12c>
   19984:	ldr	r3, [r6]
   19988:	cmp	r3, #0
   1998c:	movlt	r5, r3
   19990:	b	19880 <vc_tv_get_display_state_id@@Base+0x12c>
   19994:	ldr	r3, [pc, #76]	; 199e8 <vc_tv_get_display_state_id@@Base+0x294>
   19998:	add	r3, pc, r3
   1999c:	b	19860 <vc_tv_get_display_state_id@@Base+0x10c>
   199a0:	mvn	r5, #0
   199a4:	b	198b0 <vc_tv_get_display_state_id@@Base+0x15c>
   199a8:	andeq	pc, r1, r8, lsl fp	; <UNPREDICTABLE>
   199ac:	andeq	pc, r1, r4, asr #21
   199b0:	muleq	r1, r4, sl
   199b4:	andeq	lr, r1, ip, ror #20
   199b8:	andeq	pc, r1, r8, lsl #20
   199bc:	andeq	sp, r0, ip, lsl #9
   199c0:	strdeq	pc, [r1], -r4
   199c4:	ldrdeq	pc, [r1], -r8
   199c8:	strdeq	sp, [r0], -ip
   199cc:	andeq	ip, r0, r8, lsr #30
   199d0:	muleq	r1, r8, r9
   199d4:	andeq	sp, r0, r4, ror #7
   199d8:	andeq	ip, r0, r0, lsl #30
   199dc:	andeq	sp, r0, r0, ror r5
   199e0:	andeq	pc, r1, r4, asr r9	; <UNPREDICTABLE>
   199e4:	andeq	sp, r0, r0, lsl r4
   199e8:	andeq	sp, r0, r4, lsr #6

000199ec <vc_tv_get_display_state@@Base>:
   199ec:	ldr	r3, [pc, #12]	; 19a00 <vc_tv_get_display_state@@Base+0x14>
   199f0:	mov	r1, r0
   199f4:	add	r3, pc, r3
   199f8:	ldr	r0, [r3, #3592]	; 0xe08
   199fc:	b	19754 <vc_tv_get_display_state_id@@Base>
   19a00:	andeq	pc, r1, r4, lsl #17

00019a04 <vc_tv_hdmi_power_on_preferred_id@@Base>:
   19a04:	push	{r4, r5, r6, r7, lr}
   19a08:	ldr	r5, [pc, #560]	; 19c40 <vc_tv_hdmi_power_on_preferred_id@@Base+0x23c>
   19a0c:	sub	sp, sp, #60	; 0x3c
   19a10:	add	r5, pc, r5
   19a14:	ldr	r3, [r5]
   19a18:	mov	r4, r0
   19a1c:	cmp	r3, #4
   19a20:	bhi	19b74 <vc_tv_hdmi_power_on_preferred_id@@Base+0x170>
   19a24:	mov	r3, #4
   19a28:	mov	r1, #0
   19a2c:	mov	r2, #1
   19a30:	str	r3, [sp, #36]	; 0x24
   19a34:	add	r3, sp, #20
   19a38:	str	r0, [sp, #24]
   19a3c:	str	r1, [sp, #16]
   19a40:	str	r2, [sp, #20]
   19a44:	str	r3, [sp, #32]
   19a48:	cmp	r4, #65536	; 0x10000
   19a4c:	beq	19c04 <vc_tv_hdmi_power_on_preferred_id@@Base+0x200>
   19a50:	mov	r2, #4
   19a54:	mov	r7, #3
   19a58:	mov	ip, #2
   19a5c:	ldr	r3, [sp, #20]
   19a60:	str	r2, [sp, #44]	; 0x2c
   19a64:	orr	r3, r3, #-2147483648	; 0x80000000
   19a68:	str	r3, [sp, #20]
   19a6c:	add	r3, sp, #24
   19a70:	str	r3, [sp, #40]	; 0x28
   19a74:	mov	r6, #4
   19a78:	mvn	r0, #0
   19a7c:	ldr	r4, [pc, #448]	; 19c44 <vc_tv_hdmi_power_on_preferred_id@@Base+0x240>
   19a80:	add	r3, sp, #56	; 0x38
   19a84:	add	r4, pc, r4
   19a88:	add	ip, r3, ip, lsl #3
   19a8c:	ldr	r3, [r4, #3208]	; 0xc88
   19a90:	add	lr, sp, #16
   19a94:	cmp	r3, #0
   19a98:	str	lr, [ip, #-24]	; 0xffffffe8
   19a9c:	str	r6, [ip, #-20]	; 0xffffffec
   19aa0:	str	r0, [sp, #28]
   19aa4:	beq	19b6c <vc_tv_hdmi_power_on_preferred_id@@Base+0x168>
   19aa8:	add	r5, r4, #24
   19aac:	add	r5, r5, #3120	; 0xc30
   19ab0:	mov	r0, r5
   19ab4:	bl	5ffc <pthread_mutex_lock@plt>
   19ab8:	ldr	r3, [r4, #3208]	; 0xc88
   19abc:	cmp	r3, #0
   19ac0:	beq	19c30 <vc_tv_hdmi_power_on_preferred_id@@Base+0x22c>
   19ac4:	ldr	r0, [r4, #24]
   19ac8:	bl	6134 <vchi_service_use@plt>
   19acc:	mov	r3, #0
   19ad0:	ldr	r0, [r4, #24]
   19ad4:	mov	r2, r7
   19ad8:	str	r3, [sp]
   19adc:	add	r1, sp, #32
   19ae0:	mov	r3, r6
   19ae4:	bl	5cc0 <vchi_msg_queuev@plt>
   19ae8:	subs	r5, r0, #0
   19aec:	beq	19c10 <vc_tv_hdmi_power_on_preferred_id@@Base+0x20c>
   19af0:	ldr	r3, [r4]
   19af4:	cmp	r3, #1
   19af8:	bls	19b34 <vc_tv_hdmi_power_on_preferred_id@@Base+0x130>
   19afc:	ldr	r3, [sp, #20]
   19b00:	cmp	r3, #26
   19b04:	bhi	19c24 <vc_tv_hdmi_power_on_preferred_id@@Base+0x220>
   19b08:	ldr	r2, [pc, #312]	; 19c48 <vc_tv_hdmi_power_on_preferred_id@@Base+0x244>
   19b0c:	add	r2, pc, r2
   19b10:	ldr	r3, [r2, r3, lsl #2]
   19b14:	mov	r2, #4
   19b18:	ldr	r0, [pc, #300]	; 19c4c <vc_tv_hdmi_power_on_preferred_id@@Base+0x248>
   19b1c:	stm	sp, {r2, r5}
   19b20:	ldr	r2, [pc, #296]	; 19c50 <vc_tv_hdmi_power_on_preferred_id@@Base+0x24c>
   19b24:	add	r0, pc, r0
   19b28:	mov	r1, #2
   19b2c:	add	r2, pc, r2
   19b30:	bl	6b60 <vcos_log_impl@plt>
   19b34:	str	r5, [sp, #28]
   19b38:	ldr	r3, [pc, #276]	; 19c54 <vc_tv_hdmi_power_on_preferred_id@@Base+0x250>
   19b3c:	add	r3, pc, r3
   19b40:	ldr	r2, [r3, #3208]	; 0xc88
   19b44:	cmp	r2, #0
   19b48:	beq	19b54 <vc_tv_hdmi_power_on_preferred_id@@Base+0x150>
   19b4c:	ldr	r0, [r3, #24]
   19b50:	bl	6014 <vchi_service_release@plt>
   19b54:	ldr	r0, [pc, #252]	; 19c58 <vc_tv_hdmi_power_on_preferred_id@@Base+0x254>
   19b58:	add	r0, pc, r0
   19b5c:	add	r0, r0, #24
   19b60:	add	r0, r0, #3120	; 0xc30
   19b64:	bl	6b84 <pthread_mutex_unlock@plt>
   19b68:	ldr	r0, [sp, #28]
   19b6c:	add	sp, sp, #60	; 0x3c
   19b70:	pop	{r4, r5, r6, r7, pc}
   19b74:	ldr	r6, [pc, #224]	; 19c5c <vc_tv_hdmi_power_on_preferred_id@@Base+0x258>
   19b78:	ldr	r2, [pc, #224]	; 19c60 <vc_tv_hdmi_power_on_preferred_id@@Base+0x25c>
   19b7c:	add	r6, pc, r6
   19b80:	mov	r0, r5
   19b84:	add	r3, r6, #264	; 0x108
   19b88:	mov	r1, #5
   19b8c:	add	r2, pc, r2
   19b90:	bl	6b60 <vcos_log_impl@plt>
   19b94:	mov	r2, #1
   19b98:	mov	r3, #4
   19b9c:	mov	r1, #0
   19ba0:	ldr	r0, [r5]
   19ba4:	str	r2, [sp, #20]
   19ba8:	cmp	r0, r3
   19bac:	add	r2, sp, #20
   19bb0:	str	r4, [sp, #24]
   19bb4:	str	r1, [sp, #16]
   19bb8:	str	r3, [sp, #36]	; 0x24
   19bbc:	str	r2, [sp, #32]
   19bc0:	bls	19a48 <vc_tv_hdmi_power_on_preferred_id@@Base+0x44>
   19bc4:	ldr	r2, [pc, #152]	; 19c64 <vc_tv_hdmi_power_on_preferred_id@@Base+0x260>
   19bc8:	ldr	r1, [pc, #152]	; 19c68 <vc_tv_hdmi_power_on_preferred_id@@Base+0x264>
   19bcc:	add	r2, pc, r2
   19bd0:	str	r2, [sp, #8]
   19bd4:	ldr	r2, [pc, #144]	; 19c6c <vc_tv_hdmi_power_on_preferred_id@@Base+0x268>
   19bd8:	add	r1, pc, r1
   19bdc:	str	r3, [sp, #4]
   19be0:	str	r1, [sp]
   19be4:	mov	r0, r5
   19be8:	add	r3, r6, #304	; 0x130
   19bec:	mov	r1, #5
   19bf0:	add	r2, pc, r2
   19bf4:	bl	6b60 <vcos_log_impl@plt>
   19bf8:	ldr	r4, [sp, #24]
   19bfc:	cmp	r4, #65536	; 0x10000
   19c00:	bne	19a50 <vc_tv_hdmi_power_on_preferred_id@@Base+0x4c>
   19c04:	mov	r7, #2
   19c08:	mov	ip, #1
   19c0c:	b	19a74 <vc_tv_hdmi_power_on_preferred_id@@Base+0x70>
   19c10:	mov	r1, r6
   19c14:	mov	r2, r5
   19c18:	add	r0, sp, #28
   19c1c:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   19c20:	b	19b38 <vc_tv_hdmi_power_on_preferred_id@@Base+0x134>
   19c24:	ldr	r3, [pc, #68]	; 19c70 <vc_tv_hdmi_power_on_preferred_id@@Base+0x26c>
   19c28:	add	r3, pc, r3
   19c2c:	b	19b14 <vc_tv_hdmi_power_on_preferred_id@@Base+0x110>
   19c30:	mov	r0, r5
   19c34:	bl	6b84 <pthread_mutex_unlock@plt>
   19c38:	ldr	r0, [sp, #28]
   19c3c:	b	19b6c <vc_tv_hdmi_power_on_preferred_id@@Base+0x168>
   19c40:	andeq	pc, r1, r8, ror #16
   19c44:	strdeq	pc, [r1], -r4
   19c48:			; <UNDEFINED> instruction: 0x0001e7b8
   19c4c:	andeq	pc, r1, r4, asr r7	; <UNPREDICTABLE>
   19c50:	andeq	sp, r0, r0, lsl #5
   19c54:	andeq	pc, r1, ip, lsr r7	; <UNPREDICTABLE>
   19c58:	andeq	pc, r1, r0, lsr #14
   19c5c:	andeq	ip, r0, r4, lsl #25
   19c60:	strdeq	sp, [r0], -r0
   19c64:	ldrdeq	sp, [r0], -r4
   19c68:			; <UNDEFINED> instruction: 0x0000d1b4
   19c6c:	andeq	sp, r0, r8, ror r1
   19c70:	muleq	r0, r4, r0

00019c74 <vc_tv_hdmi_power_on_preferred_3d_id@@Base>:
   19c74:	push	{r4, r5, r6, r7, lr}
   19c78:	ldr	r5, [pc, #552]	; 19ea8 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x234>
   19c7c:	sub	sp, sp, #60	; 0x3c
   19c80:	add	r5, pc, r5
   19c84:	ldr	r3, [r5]
   19c88:	mov	r4, r0
   19c8c:	cmp	r3, #4
   19c90:	bhi	19de0 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x16c>
   19c94:	mov	r3, #1
   19c98:	mov	r2, #4
   19c9c:	str	r3, [sp, #16]
   19ca0:	str	r3, [sp, #20]
   19ca4:	add	r3, sp, #20
   19ca8:	str	r0, [sp, #24]
   19cac:	str	r2, [sp, #36]	; 0x24
   19cb0:	str	r3, [sp, #32]
   19cb4:	cmp	r4, #65536	; 0x10000
   19cb8:	beq	19e6c <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x1f8>
   19cbc:	mov	r2, #4
   19cc0:	mov	r7, #3
   19cc4:	mov	ip, #2
   19cc8:	ldr	r3, [sp, #20]
   19ccc:	str	r2, [sp, #44]	; 0x2c
   19cd0:	orr	r3, r3, #-2147483648	; 0x80000000
   19cd4:	str	r3, [sp, #20]
   19cd8:	add	r3, sp, #24
   19cdc:	str	r3, [sp, #40]	; 0x28
   19ce0:	mov	r6, #4
   19ce4:	mvn	r0, #0
   19ce8:	ldr	r4, [pc, #444]	; 19eac <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x238>
   19cec:	add	r3, sp, #56	; 0x38
   19cf0:	add	r4, pc, r4
   19cf4:	add	ip, r3, ip, lsl #3
   19cf8:	ldr	r3, [r4, #3208]	; 0xc88
   19cfc:	add	lr, sp, #16
   19d00:	cmp	r3, #0
   19d04:	str	lr, [ip, #-24]	; 0xffffffe8
   19d08:	str	r6, [ip, #-20]	; 0xffffffec
   19d0c:	str	r0, [sp, #28]
   19d10:	beq	19dd8 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x164>
   19d14:	add	r5, r4, #24
   19d18:	add	r5, r5, #3120	; 0xc30
   19d1c:	mov	r0, r5
   19d20:	bl	5ffc <pthread_mutex_lock@plt>
   19d24:	ldr	r3, [r4, #3208]	; 0xc88
   19d28:	cmp	r3, #0
   19d2c:	beq	19e98 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x224>
   19d30:	ldr	r0, [r4, #24]
   19d34:	bl	6134 <vchi_service_use@plt>
   19d38:	mov	r3, #0
   19d3c:	ldr	r0, [r4, #24]
   19d40:	mov	r2, r7
   19d44:	str	r3, [sp]
   19d48:	add	r1, sp, #32
   19d4c:	mov	r3, r6
   19d50:	bl	5cc0 <vchi_msg_queuev@plt>
   19d54:	subs	r5, r0, #0
   19d58:	beq	19e78 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x204>
   19d5c:	ldr	r3, [r4]
   19d60:	cmp	r3, #1
   19d64:	bls	19da0 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x12c>
   19d68:	ldr	r3, [sp, #20]
   19d6c:	cmp	r3, #26
   19d70:	bhi	19e8c <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x218>
   19d74:	ldr	r2, [pc, #308]	; 19eb0 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x23c>
   19d78:	add	r2, pc, r2
   19d7c:	ldr	r3, [r2, r3, lsl #2]
   19d80:	mov	r2, #4
   19d84:	ldr	r0, [pc, #296]	; 19eb4 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x240>
   19d88:	stm	sp, {r2, r5}
   19d8c:	ldr	r2, [pc, #292]	; 19eb8 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x244>
   19d90:	add	r0, pc, r0
   19d94:	mov	r1, #2
   19d98:	add	r2, pc, r2
   19d9c:	bl	6b60 <vcos_log_impl@plt>
   19da0:	str	r5, [sp, #28]
   19da4:	ldr	r3, [pc, #272]	; 19ebc <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x248>
   19da8:	add	r3, pc, r3
   19dac:	ldr	r2, [r3, #3208]	; 0xc88
   19db0:	cmp	r2, #0
   19db4:	beq	19dc0 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x14c>
   19db8:	ldr	r0, [r3, #24]
   19dbc:	bl	6014 <vchi_service_release@plt>
   19dc0:	ldr	r0, [pc, #248]	; 19ec0 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x24c>
   19dc4:	add	r0, pc, r0
   19dc8:	add	r0, r0, #24
   19dcc:	add	r0, r0, #3120	; 0xc30
   19dd0:	bl	6b84 <pthread_mutex_unlock@plt>
   19dd4:	ldr	r0, [sp, #28]
   19dd8:	add	sp, sp, #60	; 0x3c
   19ddc:	pop	{r4, r5, r6, r7, pc}
   19de0:	ldr	r6, [pc, #220]	; 19ec4 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x250>
   19de4:	ldr	r2, [pc, #220]	; 19ec8 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x254>
   19de8:	add	r6, pc, r6
   19dec:	add	r3, r6, #264	; 0x108
   19df0:	mov	r1, #5
   19df4:	add	r2, pc, r2
   19df8:	mov	r0, r5
   19dfc:	bl	6b60 <vcos_log_impl@plt>
   19e00:	mov	r2, #1
   19e04:	mov	r3, #4
   19e08:	ldr	r1, [r5]
   19e0c:	str	r2, [sp, #16]
   19e10:	str	r2, [sp, #20]
   19e14:	cmp	r1, r3
   19e18:	add	r2, sp, #20
   19e1c:	str	r4, [sp, #24]
   19e20:	str	r3, [sp, #36]	; 0x24
   19e24:	str	r2, [sp, #32]
   19e28:	bls	19cb4 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x40>
   19e2c:	ldr	r2, [pc, #152]	; 19ecc <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x258>
   19e30:	ldr	r1, [pc, #152]	; 19ed0 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x25c>
   19e34:	add	r2, pc, r2
   19e38:	str	r2, [sp, #8]
   19e3c:	ldr	r2, [pc, #144]	; 19ed4 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x260>
   19e40:	add	r1, pc, r1
   19e44:	str	r3, [sp, #4]
   19e48:	str	r1, [sp]
   19e4c:	mov	r0, r5
   19e50:	add	r3, r6, #304	; 0x130
   19e54:	mov	r1, #5
   19e58:	add	r2, pc, r2
   19e5c:	bl	6b60 <vcos_log_impl@plt>
   19e60:	ldr	r4, [sp, #24]
   19e64:	cmp	r4, #65536	; 0x10000
   19e68:	bne	19cbc <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x48>
   19e6c:	mov	r7, #2
   19e70:	mov	ip, #1
   19e74:	b	19ce0 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x6c>
   19e78:	mov	r1, r6
   19e7c:	mov	r2, r5
   19e80:	add	r0, sp, #28
   19e84:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   19e88:	b	19da4 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x130>
   19e8c:	ldr	r3, [pc, #68]	; 19ed8 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x264>
   19e90:	add	r3, pc, r3
   19e94:	b	19d80 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x10c>
   19e98:	mov	r0, r5
   19e9c:	bl	6b84 <pthread_mutex_unlock@plt>
   19ea0:	ldr	r0, [sp, #28]
   19ea4:	b	19dd8 <vc_tv_hdmi_power_on_preferred_3d_id@@Base+0x164>
   19ea8:	strdeq	pc, [r1], -r8
   19eac:	andeq	pc, r1, r8, lsl #11
   19eb0:	andeq	lr, r1, ip, asr #10
   19eb4:	andeq	pc, r1, r8, ror #9
   19eb8:	andeq	sp, r0, r4, lsl r0
   19ebc:	ldrdeq	pc, [r1], -r0
   19ec0:			; <UNDEFINED> instruction: 0x0001f4b4
   19ec4:	andeq	ip, r0, r8, lsl sl
   19ec8:	andeq	sp, r0, r8, lsl #1
   19ecc:	andeq	ip, r0, ip, ror #30
   19ed0:	andeq	ip, r0, ip, asr #30
   19ed4:	andeq	ip, r0, r0, lsl pc
   19ed8:	andeq	ip, r0, ip, lsr #28

00019edc <vc_tv_hdmi_power_on_preferred@@Base>:
   19edc:	push	{r4, r5, r6, r7, lr}
   19ee0:	ldr	r4, [pc, #560]	; 1a118 <vc_tv_hdmi_power_on_preferred@@Base+0x23c>
   19ee4:	sub	sp, sp, #60	; 0x3c
   19ee8:	add	r4, pc, r4
   19eec:	ldr	r3, [r4]
   19ef0:	ldr	r5, [r4, #3592]	; 0xe08
   19ef4:	cmp	r3, #4
   19ef8:	bhi	1a04c <vc_tv_hdmi_power_on_preferred@@Base+0x170>
   19efc:	mov	r1, #0
   19f00:	mov	r2, #1
   19f04:	mov	r3, #4
   19f08:	add	r0, sp, #20
   19f0c:	str	r0, [sp, #32]
   19f10:	str	r5, [sp, #24]
   19f14:	str	r1, [sp, #16]
   19f18:	str	r2, [sp, #20]
   19f1c:	str	r3, [sp, #36]	; 0x24
   19f20:	cmp	r5, #65536	; 0x10000
   19f24:	beq	1a0dc <vc_tv_hdmi_power_on_preferred@@Base+0x200>
   19f28:	mov	r2, #4
   19f2c:	mov	r7, #3
   19f30:	mov	ip, #2
   19f34:	ldr	r3, [sp, #20]
   19f38:	str	r2, [sp, #44]	; 0x2c
   19f3c:	orr	r3, r3, #-2147483648	; 0x80000000
   19f40:	str	r3, [sp, #20]
   19f44:	add	r3, sp, #24
   19f48:	str	r3, [sp, #40]	; 0x28
   19f4c:	mov	r6, #4
   19f50:	mvn	r0, #0
   19f54:	ldr	r4, [pc, #448]	; 1a11c <vc_tv_hdmi_power_on_preferred@@Base+0x240>
   19f58:	add	r3, sp, #56	; 0x38
   19f5c:	add	r4, pc, r4
   19f60:	add	ip, r3, ip, lsl #3
   19f64:	ldr	r3, [r4, #3208]	; 0xc88
   19f68:	add	lr, sp, #16
   19f6c:	cmp	r3, #0
   19f70:	str	lr, [ip, #-24]	; 0xffffffe8
   19f74:	str	r6, [ip, #-20]	; 0xffffffec
   19f78:	str	r0, [sp, #28]
   19f7c:	beq	1a044 <vc_tv_hdmi_power_on_preferred@@Base+0x168>
   19f80:	add	r5, r4, #24
   19f84:	add	r5, r5, #3120	; 0xc30
   19f88:	mov	r0, r5
   19f8c:	bl	5ffc <pthread_mutex_lock@plt>
   19f90:	ldr	r3, [r4, #3208]	; 0xc88
   19f94:	cmp	r3, #0
   19f98:	beq	1a108 <vc_tv_hdmi_power_on_preferred@@Base+0x22c>
   19f9c:	ldr	r0, [r4, #24]
   19fa0:	bl	6134 <vchi_service_use@plt>
   19fa4:	mov	r3, #0
   19fa8:	ldr	r0, [r4, #24]
   19fac:	mov	r2, r7
   19fb0:	str	r3, [sp]
   19fb4:	add	r1, sp, #32
   19fb8:	mov	r3, r6
   19fbc:	bl	5cc0 <vchi_msg_queuev@plt>
   19fc0:	subs	r5, r0, #0
   19fc4:	beq	1a0e8 <vc_tv_hdmi_power_on_preferred@@Base+0x20c>
   19fc8:	ldr	r3, [r4]
   19fcc:	cmp	r3, #1
   19fd0:	bls	1a00c <vc_tv_hdmi_power_on_preferred@@Base+0x130>
   19fd4:	ldr	r3, [sp, #20]
   19fd8:	cmp	r3, #26
   19fdc:	bhi	1a0fc <vc_tv_hdmi_power_on_preferred@@Base+0x220>
   19fe0:	ldr	r2, [pc, #312]	; 1a120 <vc_tv_hdmi_power_on_preferred@@Base+0x244>
   19fe4:	add	r2, pc, r2
   19fe8:	ldr	r3, [r2, r3, lsl #2]
   19fec:	mov	r2, #4
   19ff0:	ldr	r0, [pc, #300]	; 1a124 <vc_tv_hdmi_power_on_preferred@@Base+0x248>
   19ff4:	stm	sp, {r2, r5}
   19ff8:	ldr	r2, [pc, #296]	; 1a128 <vc_tv_hdmi_power_on_preferred@@Base+0x24c>
   19ffc:	add	r0, pc, r0
   1a000:	mov	r1, #2
   1a004:	add	r2, pc, r2
   1a008:	bl	6b60 <vcos_log_impl@plt>
   1a00c:	str	r5, [sp, #28]
   1a010:	ldr	r3, [pc, #276]	; 1a12c <vc_tv_hdmi_power_on_preferred@@Base+0x250>
   1a014:	add	r3, pc, r3
   1a018:	ldr	r2, [r3, #3208]	; 0xc88
   1a01c:	cmp	r2, #0
   1a020:	beq	1a02c <vc_tv_hdmi_power_on_preferred@@Base+0x150>
   1a024:	ldr	r0, [r3, #24]
   1a028:	bl	6014 <vchi_service_release@plt>
   1a02c:	ldr	r0, [pc, #252]	; 1a130 <vc_tv_hdmi_power_on_preferred@@Base+0x254>
   1a030:	add	r0, pc, r0
   1a034:	add	r0, r0, #24
   1a038:	add	r0, r0, #3120	; 0xc30
   1a03c:	bl	6b84 <pthread_mutex_unlock@plt>
   1a040:	ldr	r0, [sp, #28]
   1a044:	add	sp, sp, #60	; 0x3c
   1a048:	pop	{r4, r5, r6, r7, pc}
   1a04c:	ldr	r6, [pc, #224]	; 1a134 <vc_tv_hdmi_power_on_preferred@@Base+0x258>
   1a050:	ldr	r2, [pc, #224]	; 1a138 <vc_tv_hdmi_power_on_preferred@@Base+0x25c>
   1a054:	add	r6, pc, r6
   1a058:	mov	r0, r4
   1a05c:	add	r3, r6, #264	; 0x108
   1a060:	mov	r1, #5
   1a064:	add	r2, pc, r2
   1a068:	bl	6b60 <vcos_log_impl@plt>
   1a06c:	mov	r2, #1
   1a070:	mov	r3, #4
   1a074:	mov	r1, #0
   1a078:	ldr	r0, [r4]
   1a07c:	str	r2, [sp, #20]
   1a080:	cmp	r0, r3
   1a084:	add	r2, sp, #20
   1a088:	str	r5, [sp, #24]
   1a08c:	str	r1, [sp, #16]
   1a090:	str	r3, [sp, #36]	; 0x24
   1a094:	str	r2, [sp, #32]
   1a098:	bls	19f20 <vc_tv_hdmi_power_on_preferred@@Base+0x44>
   1a09c:	ldr	r2, [pc, #152]	; 1a13c <vc_tv_hdmi_power_on_preferred@@Base+0x260>
   1a0a0:	ldr	r1, [pc, #152]	; 1a140 <vc_tv_hdmi_power_on_preferred@@Base+0x264>
   1a0a4:	add	r2, pc, r2
   1a0a8:	str	r2, [sp, #8]
   1a0ac:	ldr	r2, [pc, #144]	; 1a144 <vc_tv_hdmi_power_on_preferred@@Base+0x268>
   1a0b0:	add	r1, pc, r1
   1a0b4:	str	r3, [sp, #4]
   1a0b8:	str	r1, [sp]
   1a0bc:	mov	r0, r4
   1a0c0:	add	r3, r6, #304	; 0x130
   1a0c4:	mov	r1, #5
   1a0c8:	add	r2, pc, r2
   1a0cc:	bl	6b60 <vcos_log_impl@plt>
   1a0d0:	ldr	r5, [sp, #24]
   1a0d4:	cmp	r5, #65536	; 0x10000
   1a0d8:	bne	19f28 <vc_tv_hdmi_power_on_preferred@@Base+0x4c>
   1a0dc:	mov	r7, #2
   1a0e0:	mov	ip, #1
   1a0e4:	b	19f4c <vc_tv_hdmi_power_on_preferred@@Base+0x70>
   1a0e8:	mov	r1, r6
   1a0ec:	mov	r2, r5
   1a0f0:	add	r0, sp, #28
   1a0f4:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1a0f8:	b	1a010 <vc_tv_hdmi_power_on_preferred@@Base+0x134>
   1a0fc:	ldr	r3, [pc, #68]	; 1a148 <vc_tv_hdmi_power_on_preferred@@Base+0x26c>
   1a100:	add	r3, pc, r3
   1a104:	b	19fec <vc_tv_hdmi_power_on_preferred@@Base+0x110>
   1a108:	mov	r0, r5
   1a10c:	bl	6b84 <pthread_mutex_unlock@plt>
   1a110:	ldr	r0, [sp, #28]
   1a114:	b	1a044 <vc_tv_hdmi_power_on_preferred@@Base+0x168>
   1a118:	muleq	r1, r0, r3
   1a11c:	andeq	pc, r1, ip, lsl r3	; <UNPREDICTABLE>
   1a120:	andeq	lr, r1, r0, ror #5
   1a124:	andeq	pc, r1, ip, ror r2	; <UNPREDICTABLE>
   1a128:	andeq	ip, r0, r8, lsr #27
   1a12c:	andeq	pc, r1, r4, ror #4
   1a130:	andeq	pc, r1, r8, asr #4
   1a134:	andeq	ip, r0, ip, lsr #15
   1a138:	andeq	ip, r0, r8, lsl lr
   1a13c:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   1a140:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   1a144:	andeq	ip, r0, r0, lsr #25
   1a148:			; <UNDEFINED> instruction: 0x0000cbbc

0001a14c <vc_tv_hdmi_power_on_preferred_3d@@Base>:
   1a14c:	push	{r4, r5, r6, r7, lr}
   1a150:	ldr	r4, [pc, #552]	; 1a380 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x234>
   1a154:	sub	sp, sp, #60	; 0x3c
   1a158:	add	r4, pc, r4
   1a15c:	ldr	r3, [r4]
   1a160:	ldr	r5, [r4, #3592]	; 0xe08
   1a164:	cmp	r3, #4
   1a168:	bhi	1a2b8 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x16c>
   1a16c:	mov	r3, #1
   1a170:	mov	r2, #4
   1a174:	str	r3, [sp, #16]
   1a178:	str	r3, [sp, #20]
   1a17c:	add	r3, sp, #20
   1a180:	str	r5, [sp, #24]
   1a184:	str	r2, [sp, #36]	; 0x24
   1a188:	str	r3, [sp, #32]
   1a18c:	cmp	r5, #65536	; 0x10000
   1a190:	beq	1a344 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x1f8>
   1a194:	mov	r2, #4
   1a198:	mov	r7, #3
   1a19c:	mov	ip, #2
   1a1a0:	ldr	r3, [sp, #20]
   1a1a4:	str	r2, [sp, #44]	; 0x2c
   1a1a8:	orr	r3, r3, #-2147483648	; 0x80000000
   1a1ac:	str	r3, [sp, #20]
   1a1b0:	add	r3, sp, #24
   1a1b4:	str	r3, [sp, #40]	; 0x28
   1a1b8:	mov	r6, #4
   1a1bc:	mvn	r0, #0
   1a1c0:	ldr	r4, [pc, #444]	; 1a384 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x238>
   1a1c4:	add	r3, sp, #56	; 0x38
   1a1c8:	add	r4, pc, r4
   1a1cc:	add	ip, r3, ip, lsl #3
   1a1d0:	ldr	r3, [r4, #3208]	; 0xc88
   1a1d4:	add	lr, sp, #16
   1a1d8:	cmp	r3, #0
   1a1dc:	str	lr, [ip, #-24]	; 0xffffffe8
   1a1e0:	str	r6, [ip, #-20]	; 0xffffffec
   1a1e4:	str	r0, [sp, #28]
   1a1e8:	beq	1a2b0 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x164>
   1a1ec:	add	r5, r4, #24
   1a1f0:	add	r5, r5, #3120	; 0xc30
   1a1f4:	mov	r0, r5
   1a1f8:	bl	5ffc <pthread_mutex_lock@plt>
   1a1fc:	ldr	r3, [r4, #3208]	; 0xc88
   1a200:	cmp	r3, #0
   1a204:	beq	1a370 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x224>
   1a208:	ldr	r0, [r4, #24]
   1a20c:	bl	6134 <vchi_service_use@plt>
   1a210:	mov	r3, #0
   1a214:	ldr	r0, [r4, #24]
   1a218:	mov	r2, r7
   1a21c:	str	r3, [sp]
   1a220:	add	r1, sp, #32
   1a224:	mov	r3, r6
   1a228:	bl	5cc0 <vchi_msg_queuev@plt>
   1a22c:	subs	r5, r0, #0
   1a230:	beq	1a350 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x204>
   1a234:	ldr	r3, [r4]
   1a238:	cmp	r3, #1
   1a23c:	bls	1a278 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x12c>
   1a240:	ldr	r3, [sp, #20]
   1a244:	cmp	r3, #26
   1a248:	bhi	1a364 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x218>
   1a24c:	ldr	r2, [pc, #308]	; 1a388 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x23c>
   1a250:	add	r2, pc, r2
   1a254:	ldr	r3, [r2, r3, lsl #2]
   1a258:	mov	r2, #4
   1a25c:	ldr	r0, [pc, #296]	; 1a38c <vc_tv_hdmi_power_on_preferred_3d@@Base+0x240>
   1a260:	stm	sp, {r2, r5}
   1a264:	ldr	r2, [pc, #292]	; 1a390 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x244>
   1a268:	add	r0, pc, r0
   1a26c:	mov	r1, #2
   1a270:	add	r2, pc, r2
   1a274:	bl	6b60 <vcos_log_impl@plt>
   1a278:	str	r5, [sp, #28]
   1a27c:	ldr	r3, [pc, #272]	; 1a394 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x248>
   1a280:	add	r3, pc, r3
   1a284:	ldr	r2, [r3, #3208]	; 0xc88
   1a288:	cmp	r2, #0
   1a28c:	beq	1a298 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x14c>
   1a290:	ldr	r0, [r3, #24]
   1a294:	bl	6014 <vchi_service_release@plt>
   1a298:	ldr	r0, [pc, #248]	; 1a398 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x24c>
   1a29c:	add	r0, pc, r0
   1a2a0:	add	r0, r0, #24
   1a2a4:	add	r0, r0, #3120	; 0xc30
   1a2a8:	bl	6b84 <pthread_mutex_unlock@plt>
   1a2ac:	ldr	r0, [sp, #28]
   1a2b0:	add	sp, sp, #60	; 0x3c
   1a2b4:	pop	{r4, r5, r6, r7, pc}
   1a2b8:	ldr	r6, [pc, #220]	; 1a39c <vc_tv_hdmi_power_on_preferred_3d@@Base+0x250>
   1a2bc:	ldr	r2, [pc, #220]	; 1a3a0 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x254>
   1a2c0:	add	r6, pc, r6
   1a2c4:	add	r3, r6, #264	; 0x108
   1a2c8:	mov	r1, #5
   1a2cc:	add	r2, pc, r2
   1a2d0:	mov	r0, r4
   1a2d4:	bl	6b60 <vcos_log_impl@plt>
   1a2d8:	mov	r2, #1
   1a2dc:	mov	r3, #4
   1a2e0:	ldr	r1, [r4]
   1a2e4:	str	r2, [sp, #16]
   1a2e8:	str	r2, [sp, #20]
   1a2ec:	cmp	r1, r3
   1a2f0:	add	r2, sp, #20
   1a2f4:	str	r5, [sp, #24]
   1a2f8:	str	r3, [sp, #36]	; 0x24
   1a2fc:	str	r2, [sp, #32]
   1a300:	bls	1a18c <vc_tv_hdmi_power_on_preferred_3d@@Base+0x40>
   1a304:	ldr	r2, [pc, #152]	; 1a3a4 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x258>
   1a308:	ldr	r1, [pc, #152]	; 1a3a8 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x25c>
   1a30c:	add	r2, pc, r2
   1a310:	str	r2, [sp, #8]
   1a314:	ldr	r2, [pc, #144]	; 1a3ac <vc_tv_hdmi_power_on_preferred_3d@@Base+0x260>
   1a318:	add	r1, pc, r1
   1a31c:	str	r3, [sp, #4]
   1a320:	str	r1, [sp]
   1a324:	mov	r0, r4
   1a328:	add	r3, r6, #304	; 0x130
   1a32c:	mov	r1, #5
   1a330:	add	r2, pc, r2
   1a334:	bl	6b60 <vcos_log_impl@plt>
   1a338:	ldr	r5, [sp, #24]
   1a33c:	cmp	r5, #65536	; 0x10000
   1a340:	bne	1a194 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x48>
   1a344:	mov	r7, #2
   1a348:	mov	ip, #1
   1a34c:	b	1a1b8 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x6c>
   1a350:	mov	r1, r6
   1a354:	mov	r2, r5
   1a358:	add	r0, sp, #28
   1a35c:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1a360:	b	1a27c <vc_tv_hdmi_power_on_preferred_3d@@Base+0x130>
   1a364:	ldr	r3, [pc, #68]	; 1a3b0 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x264>
   1a368:	add	r3, pc, r3
   1a36c:	b	1a258 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x10c>
   1a370:	mov	r0, r5
   1a374:	bl	6b84 <pthread_mutex_unlock@plt>
   1a378:	ldr	r0, [sp, #28]
   1a37c:	b	1a2b0 <vc_tv_hdmi_power_on_preferred_3d@@Base+0x164>
   1a380:	andeq	pc, r1, r0, lsr #2
   1a384:	strheq	pc, [r1], -r0	; <UNPREDICTABLE>
   1a388:	andeq	lr, r1, r4, ror r0
   1a38c:	andeq	pc, r1, r0, lsl r0	; <UNPREDICTABLE>
   1a390:	andeq	ip, r0, ip, lsr fp
   1a394:	strdeq	lr, [r1], -r8
   1a398:	ldrdeq	lr, [r1], -ip
   1a39c:	andeq	ip, r0, r0, asr #10
   1a3a0:			; <UNDEFINED> instruction: 0x0000cbb0
   1a3a4:	muleq	r0, r4, sl
   1a3a8:	andeq	ip, r0, r4, ror sl
   1a3ac:	andeq	ip, r0, r8, lsr sl
   1a3b0:	andeq	ip, r0, r4, asr r9

0001a3b4 <vc_tv_hdmi_power_on_best_id@@Base>:
   1a3b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a3b8:	ldr	r5, [pc, #664]	; 1a658 <vc_tv_hdmi_power_on_best_id@@Base+0x2a4>
   1a3bc:	mov	r4, r0
   1a3c0:	add	r5, pc, r5
   1a3c4:	ldr	r0, [r5]
   1a3c8:	sub	sp, sp, #80	; 0x50
   1a3cc:	cmp	r0, #4
   1a3d0:	mov	r8, r1
   1a3d4:	mov	r7, r2
   1a3d8:	mov	r6, r3
   1a3dc:	bhi	1a54c <vc_tv_hdmi_power_on_best_id@@Base+0x198>
   1a3e0:	mov	r3, #4
   1a3e4:	mov	r1, #0
   1a3e8:	mov	r2, #2
   1a3ec:	ldr	r0, [sp, #112]	; 0x70
   1a3f0:	str	r3, [sp, #60]	; 0x3c
   1a3f4:	str	r0, [sp, #44]	; 0x2c
   1a3f8:	ldr	r0, [sp, #116]	; 0x74
   1a3fc:	add	r3, sp, #20
   1a400:	str	r8, [sp, #32]
   1a404:	str	r7, [sp, #36]	; 0x24
   1a408:	str	r6, [sp, #40]	; 0x28
   1a40c:	str	r0, [sp, #48]	; 0x30
   1a410:	str	r4, [sp, #24]
   1a414:	str	r1, [sp, #52]	; 0x34
   1a418:	str	r2, [sp, #20]
   1a41c:	str	r3, [sp, #56]	; 0x38
   1a420:	cmp	r4, #65536	; 0x10000
   1a424:	beq	1a61c <vc_tv_hdmi_power_on_best_id@@Base+0x268>
   1a428:	ldr	r3, [sp, #20]
   1a42c:	mov	r2, #4
   1a430:	orr	r3, r3, #-2147483648	; 0x80000000
   1a434:	str	r3, [sp, #20]
   1a438:	add	r3, sp, #24
   1a43c:	str	r3, [sp, #64]	; 0x40
   1a440:	mov	r6, #3
   1a444:	mov	r3, #2
   1a448:	str	r2, [sp, #68]	; 0x44
   1a44c:	mov	r2, #24
   1a450:	mvn	r0, #0
   1a454:	ldr	r4, [pc, #512]	; 1a65c <vc_tv_hdmi_power_on_best_id@@Base+0x2a8>
   1a458:	add	r1, sp, #80	; 0x50
   1a45c:	add	r4, pc, r4
   1a460:	add	r3, r1, r3, lsl #3
   1a464:	ldr	r1, [r4, #3208]	; 0xc88
   1a468:	str	r2, [r3, #-20]	; 0xffffffec
   1a46c:	cmp	r1, #0
   1a470:	add	r1, sp, #32
   1a474:	str	r1, [r3, #-24]	; 0xffffffe8
   1a478:	str	r0, [sp, #28]
   1a47c:	beq	1a544 <vc_tv_hdmi_power_on_best_id@@Base+0x190>
   1a480:	add	r5, r4, r2
   1a484:	add	r5, r5, #3120	; 0xc30
   1a488:	mov	r0, r5
   1a48c:	bl	5ffc <pthread_mutex_lock@plt>
   1a490:	ldr	r3, [r4, #3208]	; 0xc88
   1a494:	cmp	r3, #0
   1a498:	beq	1a648 <vc_tv_hdmi_power_on_best_id@@Base+0x294>
   1a49c:	ldr	r0, [r4, #24]
   1a4a0:	bl	6134 <vchi_service_use@plt>
   1a4a4:	mov	r3, #0
   1a4a8:	ldr	r0, [r4, #24]
   1a4ac:	mov	r2, r6
   1a4b0:	str	r3, [sp]
   1a4b4:	add	r1, sp, #56	; 0x38
   1a4b8:	mov	r3, #4
   1a4bc:	bl	5cc0 <vchi_msg_queuev@plt>
   1a4c0:	subs	r5, r0, #0
   1a4c4:	beq	1a628 <vc_tv_hdmi_power_on_best_id@@Base+0x274>
   1a4c8:	ldr	r3, [r4]
   1a4cc:	cmp	r3, #1
   1a4d0:	bls	1a50c <vc_tv_hdmi_power_on_best_id@@Base+0x158>
   1a4d4:	ldr	r3, [sp, #20]
   1a4d8:	cmp	r3, #26
   1a4dc:	bhi	1a63c <vc_tv_hdmi_power_on_best_id@@Base+0x288>
   1a4e0:	ldr	r2, [pc, #376]	; 1a660 <vc_tv_hdmi_power_on_best_id@@Base+0x2ac>
   1a4e4:	add	r2, pc, r2
   1a4e8:	ldr	r3, [r2, r3, lsl #2]
   1a4ec:	mov	r2, #24
   1a4f0:	ldr	r0, [pc, #364]	; 1a664 <vc_tv_hdmi_power_on_best_id@@Base+0x2b0>
   1a4f4:	stm	sp, {r2, r5}
   1a4f8:	ldr	r2, [pc, #360]	; 1a668 <vc_tv_hdmi_power_on_best_id@@Base+0x2b4>
   1a4fc:	add	r0, pc, r0
   1a500:	mov	r1, #2
   1a504:	add	r2, pc, r2
   1a508:	bl	6b60 <vcos_log_impl@plt>
   1a50c:	str	r5, [sp, #28]
   1a510:	ldr	r3, [pc, #340]	; 1a66c <vc_tv_hdmi_power_on_best_id@@Base+0x2b8>
   1a514:	add	r3, pc, r3
   1a518:	ldr	r2, [r3, #3208]	; 0xc88
   1a51c:	cmp	r2, #0
   1a520:	beq	1a52c <vc_tv_hdmi_power_on_best_id@@Base+0x178>
   1a524:	ldr	r0, [r3, #24]
   1a528:	bl	6014 <vchi_service_release@plt>
   1a52c:	ldr	r0, [pc, #316]	; 1a670 <vc_tv_hdmi_power_on_best_id@@Base+0x2bc>
   1a530:	add	r0, pc, r0
   1a534:	add	r0, r0, #24
   1a538:	add	r0, r0, #3120	; 0xc30
   1a53c:	bl	6b84 <pthread_mutex_unlock@plt>
   1a540:	ldr	r0, [sp, #28]
   1a544:	add	sp, sp, #80	; 0x50
   1a548:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a54c:	ldr	sl, [pc, #288]	; 1a674 <vc_tv_hdmi_power_on_best_id@@Base+0x2c0>
   1a550:	ldr	r9, [pc, #288]	; 1a678 <vc_tv_hdmi_power_on_best_id@@Base+0x2c4>
   1a554:	add	sl, pc, sl
   1a558:	add	r9, pc, r9
   1a55c:	add	r3, r9, #328	; 0x148
   1a560:	mov	r2, sl
   1a564:	mov	r0, r5
   1a568:	mov	r1, #5
   1a56c:	bl	6b60 <vcos_log_impl@plt>
   1a570:	ldr	r3, [r5]
   1a574:	cmp	r3, #4
   1a578:	bls	1a3e0 <vc_tv_hdmi_power_on_best_id@@Base+0x2c>
   1a57c:	mov	r2, sl
   1a580:	mov	r0, r5
   1a584:	mov	r1, #5
   1a588:	add	r3, r9, #356	; 0x164
   1a58c:	bl	6b60 <vcos_log_impl@plt>
   1a590:	mov	r3, #4
   1a594:	mov	r2, #2
   1a598:	mov	r1, #0
   1a59c:	ldr	r0, [r5]
   1a5a0:	str	r2, [sp, #20]
   1a5a4:	cmp	r0, r3
   1a5a8:	ldr	r0, [sp, #112]	; 0x70
   1a5ac:	add	r2, sp, #20
   1a5b0:	str	r0, [sp, #44]	; 0x2c
   1a5b4:	ldr	r0, [sp, #116]	; 0x74
   1a5b8:	str	r8, [sp, #32]
   1a5bc:	str	r7, [sp, #36]	; 0x24
   1a5c0:	str	r6, [sp, #40]	; 0x28
   1a5c4:	str	r0, [sp, #48]	; 0x30
   1a5c8:	str	r4, [sp, #24]
   1a5cc:	str	r1, [sp, #52]	; 0x34
   1a5d0:	str	r3, [sp, #60]	; 0x3c
   1a5d4:	str	r2, [sp, #56]	; 0x38
   1a5d8:	bls	1a420 <vc_tv_hdmi_power_on_best_id@@Base+0x6c>
   1a5dc:	mov	ip, #24
   1a5e0:	ldr	r2, [pc, #148]	; 1a67c <vc_tv_hdmi_power_on_best_id@@Base+0x2c8>
   1a5e4:	ldr	r1, [pc, #148]	; 1a680 <vc_tv_hdmi_power_on_best_id@@Base+0x2cc>
   1a5e8:	add	r2, pc, r2
   1a5ec:	str	r2, [sp, #8]
   1a5f0:	ldr	r2, [pc, #140]	; 1a684 <vc_tv_hdmi_power_on_best_id@@Base+0x2d0>
   1a5f4:	add	r1, pc, r1
   1a5f8:	stm	sp, {r1, ip}
   1a5fc:	mov	r0, r5
   1a600:	add	r3, r9, #304	; 0x130
   1a604:	mov	r1, #5
   1a608:	add	r2, pc, r2
   1a60c:	bl	6b60 <vcos_log_impl@plt>
   1a610:	ldr	r4, [sp, #24]
   1a614:	cmp	r4, #65536	; 0x10000
   1a618:	bne	1a428 <vc_tv_hdmi_power_on_best_id@@Base+0x74>
   1a61c:	mov	r6, #2
   1a620:	mov	r3, #1
   1a624:	b	1a44c <vc_tv_hdmi_power_on_best_id@@Base+0x98>
   1a628:	mov	r2, r5
   1a62c:	add	r0, sp, #28
   1a630:	mov	r1, #4
   1a634:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1a638:	b	1a510 <vc_tv_hdmi_power_on_best_id@@Base+0x15c>
   1a63c:	ldr	r3, [pc, #68]	; 1a688 <vc_tv_hdmi_power_on_best_id@@Base+0x2d4>
   1a640:	add	r3, pc, r3
   1a644:	b	1a4ec <vc_tv_hdmi_power_on_best_id@@Base+0x138>
   1a648:	mov	r0, r5
   1a64c:	bl	6b84 <pthread_mutex_unlock@plt>
   1a650:	ldr	r0, [sp, #28]
   1a654:	b	1a544 <vc_tv_hdmi_power_on_best_id@@Base+0x190>
   1a658:			; <UNDEFINED> instruction: 0x0001eeb8
   1a65c:	andeq	lr, r1, ip, lsl lr
   1a660:	andeq	sp, r1, r0, ror #27
   1a664:	andeq	lr, r1, ip, ror sp
   1a668:	andeq	ip, r0, r8, lsr #17
   1a66c:	andeq	lr, r1, r4, ror #26
   1a670:	andeq	lr, r1, r8, asr #26
   1a674:	andeq	ip, r0, r8, lsr #18
   1a678:	andeq	ip, r0, r8, lsr #5
   1a67c:			; <UNDEFINED> instruction: 0x0000c7b8
   1a680:	strdeq	ip, [r0], -r8
   1a684:	andeq	ip, r0, r0, ror #14
   1a688:	andeq	ip, r0, ip, ror r6

0001a68c <vc_tv_hdmi_power_on_best_3d_id@@Base>:
   1a68c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a690:	ldr	r5, [pc, #664]	; 1a930 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2a4>
   1a694:	mov	r4, r0
   1a698:	add	r5, pc, r5
   1a69c:	ldr	r0, [r5]
   1a6a0:	sub	sp, sp, #80	; 0x50
   1a6a4:	cmp	r0, #4
   1a6a8:	mov	r8, r1
   1a6ac:	mov	r7, r2
   1a6b0:	mov	r6, r3
   1a6b4:	bhi	1a824 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x198>
   1a6b8:	mov	r3, #4
   1a6bc:	mov	r1, #1
   1a6c0:	mov	r2, #2
   1a6c4:	ldr	r0, [sp, #112]	; 0x70
   1a6c8:	str	r3, [sp, #60]	; 0x3c
   1a6cc:	str	r0, [sp, #44]	; 0x2c
   1a6d0:	ldr	r0, [sp, #116]	; 0x74
   1a6d4:	add	r3, sp, #20
   1a6d8:	str	r8, [sp, #32]
   1a6dc:	str	r7, [sp, #36]	; 0x24
   1a6e0:	str	r6, [sp, #40]	; 0x28
   1a6e4:	str	r0, [sp, #48]	; 0x30
   1a6e8:	str	r4, [sp, #24]
   1a6ec:	str	r1, [sp, #52]	; 0x34
   1a6f0:	str	r2, [sp, #20]
   1a6f4:	str	r3, [sp, #56]	; 0x38
   1a6f8:	cmp	r4, #65536	; 0x10000
   1a6fc:	beq	1a8f4 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x268>
   1a700:	ldr	r3, [sp, #20]
   1a704:	mov	r2, #4
   1a708:	orr	r3, r3, #-2147483648	; 0x80000000
   1a70c:	str	r3, [sp, #20]
   1a710:	add	r3, sp, #24
   1a714:	str	r3, [sp, #64]	; 0x40
   1a718:	mov	r6, #3
   1a71c:	mov	r3, #2
   1a720:	str	r2, [sp, #68]	; 0x44
   1a724:	mov	r2, #24
   1a728:	mvn	r0, #0
   1a72c:	ldr	r4, [pc, #512]	; 1a934 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2a8>
   1a730:	add	r1, sp, #80	; 0x50
   1a734:	add	r4, pc, r4
   1a738:	add	r3, r1, r3, lsl #3
   1a73c:	ldr	r1, [r4, #3208]	; 0xc88
   1a740:	str	r2, [r3, #-20]	; 0xffffffec
   1a744:	cmp	r1, #0
   1a748:	add	r1, sp, #32
   1a74c:	str	r1, [r3, #-24]	; 0xffffffe8
   1a750:	str	r0, [sp, #28]
   1a754:	beq	1a81c <vc_tv_hdmi_power_on_best_3d_id@@Base+0x190>
   1a758:	add	r5, r4, r2
   1a75c:	add	r5, r5, #3120	; 0xc30
   1a760:	mov	r0, r5
   1a764:	bl	5ffc <pthread_mutex_lock@plt>
   1a768:	ldr	r3, [r4, #3208]	; 0xc88
   1a76c:	cmp	r3, #0
   1a770:	beq	1a920 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x294>
   1a774:	ldr	r0, [r4, #24]
   1a778:	bl	6134 <vchi_service_use@plt>
   1a77c:	mov	r3, #0
   1a780:	ldr	r0, [r4, #24]
   1a784:	mov	r2, r6
   1a788:	str	r3, [sp]
   1a78c:	add	r1, sp, #56	; 0x38
   1a790:	mov	r3, #4
   1a794:	bl	5cc0 <vchi_msg_queuev@plt>
   1a798:	subs	r5, r0, #0
   1a79c:	beq	1a900 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x274>
   1a7a0:	ldr	r3, [r4]
   1a7a4:	cmp	r3, #1
   1a7a8:	bls	1a7e4 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x158>
   1a7ac:	ldr	r3, [sp, #20]
   1a7b0:	cmp	r3, #26
   1a7b4:	bhi	1a914 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x288>
   1a7b8:	ldr	r2, [pc, #376]	; 1a938 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2ac>
   1a7bc:	add	r2, pc, r2
   1a7c0:	ldr	r3, [r2, r3, lsl #2]
   1a7c4:	mov	r2, #24
   1a7c8:	ldr	r0, [pc, #364]	; 1a93c <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2b0>
   1a7cc:	stm	sp, {r2, r5}
   1a7d0:	ldr	r2, [pc, #360]	; 1a940 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2b4>
   1a7d4:	add	r0, pc, r0
   1a7d8:	mov	r1, #2
   1a7dc:	add	r2, pc, r2
   1a7e0:	bl	6b60 <vcos_log_impl@plt>
   1a7e4:	str	r5, [sp, #28]
   1a7e8:	ldr	r3, [pc, #340]	; 1a944 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2b8>
   1a7ec:	add	r3, pc, r3
   1a7f0:	ldr	r2, [r3, #3208]	; 0xc88
   1a7f4:	cmp	r2, #0
   1a7f8:	beq	1a804 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x178>
   1a7fc:	ldr	r0, [r3, #24]
   1a800:	bl	6014 <vchi_service_release@plt>
   1a804:	ldr	r0, [pc, #316]	; 1a948 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2bc>
   1a808:	add	r0, pc, r0
   1a80c:	add	r0, r0, #24
   1a810:	add	r0, r0, #3120	; 0xc30
   1a814:	bl	6b84 <pthread_mutex_unlock@plt>
   1a818:	ldr	r0, [sp, #28]
   1a81c:	add	sp, sp, #80	; 0x50
   1a820:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a824:	ldr	sl, [pc, #288]	; 1a94c <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2c0>
   1a828:	ldr	r9, [pc, #288]	; 1a950 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2c4>
   1a82c:	add	sl, pc, sl
   1a830:	add	r9, pc, r9
   1a834:	add	r3, r9, #388	; 0x184
   1a838:	mov	r2, sl
   1a83c:	mov	r0, r5
   1a840:	mov	r1, #5
   1a844:	bl	6b60 <vcos_log_impl@plt>
   1a848:	ldr	r3, [r5]
   1a84c:	cmp	r3, #4
   1a850:	bls	1a6b8 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2c>
   1a854:	mov	r2, sl
   1a858:	mov	r0, r5
   1a85c:	mov	r1, #5
   1a860:	add	r3, r9, #356	; 0x164
   1a864:	bl	6b60 <vcos_log_impl@plt>
   1a868:	mov	r3, #4
   1a86c:	mov	r2, #2
   1a870:	mov	r1, #1
   1a874:	ldr	r0, [r5]
   1a878:	str	r2, [sp, #20]
   1a87c:	cmp	r0, r3
   1a880:	ldr	r0, [sp, #112]	; 0x70
   1a884:	add	r2, sp, #20
   1a888:	str	r0, [sp, #44]	; 0x2c
   1a88c:	ldr	r0, [sp, #116]	; 0x74
   1a890:	str	r8, [sp, #32]
   1a894:	str	r7, [sp, #36]	; 0x24
   1a898:	str	r6, [sp, #40]	; 0x28
   1a89c:	str	r0, [sp, #48]	; 0x30
   1a8a0:	str	r4, [sp, #24]
   1a8a4:	str	r1, [sp, #52]	; 0x34
   1a8a8:	str	r3, [sp, #60]	; 0x3c
   1a8ac:	str	r2, [sp, #56]	; 0x38
   1a8b0:	bls	1a6f8 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x6c>
   1a8b4:	mov	ip, #24
   1a8b8:	ldr	r2, [pc, #148]	; 1a954 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2c8>
   1a8bc:	ldr	r1, [pc, #148]	; 1a958 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2cc>
   1a8c0:	add	r2, pc, r2
   1a8c4:	str	r2, [sp, #8]
   1a8c8:	ldr	r2, [pc, #140]	; 1a95c <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2d0>
   1a8cc:	add	r1, pc, r1
   1a8d0:	stm	sp, {r1, ip}
   1a8d4:	mov	r0, r5
   1a8d8:	add	r3, r9, #304	; 0x130
   1a8dc:	mov	r1, #5
   1a8e0:	add	r2, pc, r2
   1a8e4:	bl	6b60 <vcos_log_impl@plt>
   1a8e8:	ldr	r4, [sp, #24]
   1a8ec:	cmp	r4, #65536	; 0x10000
   1a8f0:	bne	1a700 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x74>
   1a8f4:	mov	r6, #2
   1a8f8:	mov	r3, #1
   1a8fc:	b	1a724 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x98>
   1a900:	mov	r2, r5
   1a904:	add	r0, sp, #28
   1a908:	mov	r1, #4
   1a90c:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1a910:	b	1a7e8 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x15c>
   1a914:	ldr	r3, [pc, #68]	; 1a960 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x2d4>
   1a918:	add	r3, pc, r3
   1a91c:	b	1a7c4 <vc_tv_hdmi_power_on_best_3d_id@@Base+0x138>
   1a920:	mov	r0, r5
   1a924:	bl	6b84 <pthread_mutex_unlock@plt>
   1a928:	ldr	r0, [sp, #28]
   1a92c:	b	1a81c <vc_tv_hdmi_power_on_best_3d_id@@Base+0x190>
   1a930:	andeq	lr, r1, r0, ror #23
   1a934:	andeq	lr, r1, r4, asr #22
   1a938:	andeq	sp, r1, r8, lsl #22
   1a93c:	andeq	lr, r1, r4, lsr #21
   1a940:	ldrdeq	ip, [r0], -r0
   1a944:	andeq	lr, r1, ip, lsl #21
   1a948:	andeq	lr, r1, r0, ror sl
   1a94c:	andeq	ip, r0, r0, asr r6
   1a950:	ldrdeq	fp, [r0], -r0
   1a954:	andeq	ip, r0, r0, ror #9
   1a958:	andeq	ip, r0, r0, lsr #10
   1a95c:	andeq	ip, r0, r8, lsl #9
   1a960:	andeq	ip, r0, r4, lsr #7

0001a964 <vc_tv_hdmi_power_on_best@@Base>:
   1a964:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a968:	ldr	r4, [pc, #664]	; 1ac08 <vc_tv_hdmi_power_on_best@@Base+0x2a4>
   1a96c:	sub	sp, sp, #84	; 0x54
   1a970:	add	r4, pc, r4
   1a974:	ldr	ip, [r4]
   1a978:	mov	r9, r0
   1a97c:	cmp	ip, #4
   1a980:	mov	r8, r1
   1a984:	mov	r7, r2
   1a988:	mov	r6, r3
   1a98c:	bhi	1aafc <vc_tv_hdmi_power_on_best@@Base+0x198>
   1a990:	ldr	r5, [r4, #3592]	; 0xe08
   1a994:	mov	r1, #0
   1a998:	mov	r2, #2
   1a99c:	mov	r3, #4
   1a9a0:	add	r0, sp, #20
   1a9a4:	str	r0, [sp, #56]	; 0x38
   1a9a8:	ldr	r0, [sp, #120]	; 0x78
   1a9ac:	str	r9, [sp, #32]
   1a9b0:	str	r8, [sp, #36]	; 0x24
   1a9b4:	str	r7, [sp, #40]	; 0x28
   1a9b8:	str	r6, [sp, #44]	; 0x2c
   1a9bc:	str	r0, [sp, #48]	; 0x30
   1a9c0:	str	r5, [sp, #24]
   1a9c4:	str	r1, [sp, #52]	; 0x34
   1a9c8:	str	r2, [sp, #20]
   1a9cc:	str	r3, [sp, #60]	; 0x3c
   1a9d0:	cmp	r5, #65536	; 0x10000
   1a9d4:	beq	1abcc <vc_tv_hdmi_power_on_best@@Base+0x268>
   1a9d8:	ldr	r3, [sp, #20]
   1a9dc:	mov	r2, #4
   1a9e0:	orr	r3, r3, #-2147483648	; 0x80000000
   1a9e4:	str	r3, [sp, #20]
   1a9e8:	add	r3, sp, #24
   1a9ec:	str	r3, [sp, #64]	; 0x40
   1a9f0:	mov	r6, #3
   1a9f4:	mov	r3, #2
   1a9f8:	str	r2, [sp, #68]	; 0x44
   1a9fc:	mov	r2, #24
   1aa00:	mvn	r0, #0
   1aa04:	ldr	r4, [pc, #512]	; 1ac0c <vc_tv_hdmi_power_on_best@@Base+0x2a8>
   1aa08:	add	r1, sp, #80	; 0x50
   1aa0c:	add	r4, pc, r4
   1aa10:	add	r3, r1, r3, lsl #3
   1aa14:	ldr	r1, [r4, #3208]	; 0xc88
   1aa18:	str	r2, [r3, #-20]	; 0xffffffec
   1aa1c:	cmp	r1, #0
   1aa20:	add	r1, sp, #32
   1aa24:	str	r1, [r3, #-24]	; 0xffffffe8
   1aa28:	str	r0, [sp, #28]
   1aa2c:	beq	1aaf4 <vc_tv_hdmi_power_on_best@@Base+0x190>
   1aa30:	add	r5, r4, r2
   1aa34:	add	r5, r5, #3120	; 0xc30
   1aa38:	mov	r0, r5
   1aa3c:	bl	5ffc <pthread_mutex_lock@plt>
   1aa40:	ldr	r3, [r4, #3208]	; 0xc88
   1aa44:	cmp	r3, #0
   1aa48:	beq	1abf8 <vc_tv_hdmi_power_on_best@@Base+0x294>
   1aa4c:	ldr	r0, [r4, #24]
   1aa50:	bl	6134 <vchi_service_use@plt>
   1aa54:	mov	r3, #0
   1aa58:	ldr	r0, [r4, #24]
   1aa5c:	mov	r2, r6
   1aa60:	str	r3, [sp]
   1aa64:	add	r1, sp, #56	; 0x38
   1aa68:	mov	r3, #4
   1aa6c:	bl	5cc0 <vchi_msg_queuev@plt>
   1aa70:	subs	r5, r0, #0
   1aa74:	beq	1abd8 <vc_tv_hdmi_power_on_best@@Base+0x274>
   1aa78:	ldr	r3, [r4]
   1aa7c:	cmp	r3, #1
   1aa80:	bls	1aabc <vc_tv_hdmi_power_on_best@@Base+0x158>
   1aa84:	ldr	r3, [sp, #20]
   1aa88:	cmp	r3, #26
   1aa8c:	bhi	1abec <vc_tv_hdmi_power_on_best@@Base+0x288>
   1aa90:	ldr	r2, [pc, #376]	; 1ac10 <vc_tv_hdmi_power_on_best@@Base+0x2ac>
   1aa94:	add	r2, pc, r2
   1aa98:	ldr	r3, [r2, r3, lsl #2]
   1aa9c:	mov	r2, #24
   1aaa0:	ldr	r0, [pc, #364]	; 1ac14 <vc_tv_hdmi_power_on_best@@Base+0x2b0>
   1aaa4:	stm	sp, {r2, r5}
   1aaa8:	ldr	r2, [pc, #360]	; 1ac18 <vc_tv_hdmi_power_on_best@@Base+0x2b4>
   1aaac:	add	r0, pc, r0
   1aab0:	mov	r1, #2
   1aab4:	add	r2, pc, r2
   1aab8:	bl	6b60 <vcos_log_impl@plt>
   1aabc:	str	r5, [sp, #28]
   1aac0:	ldr	r3, [pc, #340]	; 1ac1c <vc_tv_hdmi_power_on_best@@Base+0x2b8>
   1aac4:	add	r3, pc, r3
   1aac8:	ldr	r2, [r3, #3208]	; 0xc88
   1aacc:	cmp	r2, #0
   1aad0:	beq	1aadc <vc_tv_hdmi_power_on_best@@Base+0x178>
   1aad4:	ldr	r0, [r3, #24]
   1aad8:	bl	6014 <vchi_service_release@plt>
   1aadc:	ldr	r0, [pc, #316]	; 1ac20 <vc_tv_hdmi_power_on_best@@Base+0x2bc>
   1aae0:	add	r0, pc, r0
   1aae4:	add	r0, r0, #24
   1aae8:	add	r0, r0, #3120	; 0xc30
   1aaec:	bl	6b84 <pthread_mutex_unlock@plt>
   1aaf0:	ldr	r0, [sp, #28]
   1aaf4:	add	sp, sp, #84	; 0x54
   1aaf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aafc:	ldr	fp, [pc, #288]	; 1ac24 <vc_tv_hdmi_power_on_best@@Base+0x2c0>
   1ab00:	ldr	sl, [pc, #288]	; 1ac28 <vc_tv_hdmi_power_on_best@@Base+0x2c4>
   1ab04:	add	fp, pc, fp
   1ab08:	add	sl, pc, sl
   1ab0c:	add	r3, sl, #420	; 0x1a4
   1ab10:	mov	r2, fp
   1ab14:	mov	r0, r4
   1ab18:	mov	r1, #5
   1ab1c:	bl	6b60 <vcos_log_impl@plt>
   1ab20:	ldr	r3, [r4]
   1ab24:	ldr	r5, [r4, #3592]	; 0xe08
   1ab28:	cmp	r3, #4
   1ab2c:	bls	1a994 <vc_tv_hdmi_power_on_best@@Base+0x30>
   1ab30:	mov	r2, fp
   1ab34:	mov	r0, r4
   1ab38:	mov	r1, #5
   1ab3c:	add	r3, sl, #356	; 0x164
   1ab40:	bl	6b60 <vcos_log_impl@plt>
   1ab44:	mov	r3, #4
   1ab48:	mov	r2, #2
   1ab4c:	mov	r1, #0
   1ab50:	ldr	r0, [r4]
   1ab54:	str	r2, [sp, #20]
   1ab58:	cmp	r0, r3
   1ab5c:	ldr	r0, [sp, #120]	; 0x78
   1ab60:	add	r2, sp, #20
   1ab64:	str	r9, [sp, #32]
   1ab68:	str	r8, [sp, #36]	; 0x24
   1ab6c:	str	r7, [sp, #40]	; 0x28
   1ab70:	str	r6, [sp, #44]	; 0x2c
   1ab74:	str	r0, [sp, #48]	; 0x30
   1ab78:	str	r5, [sp, #24]
   1ab7c:	str	r1, [sp, #52]	; 0x34
   1ab80:	str	r3, [sp, #60]	; 0x3c
   1ab84:	str	r2, [sp, #56]	; 0x38
   1ab88:	bls	1a9d0 <vc_tv_hdmi_power_on_best@@Base+0x6c>
   1ab8c:	mov	ip, #24
   1ab90:	ldr	r2, [pc, #148]	; 1ac2c <vc_tv_hdmi_power_on_best@@Base+0x2c8>
   1ab94:	ldr	r1, [pc, #148]	; 1ac30 <vc_tv_hdmi_power_on_best@@Base+0x2cc>
   1ab98:	add	r2, pc, r2
   1ab9c:	str	r2, [sp, #8]
   1aba0:	ldr	r2, [pc, #140]	; 1ac34 <vc_tv_hdmi_power_on_best@@Base+0x2d0>
   1aba4:	add	r1, pc, r1
   1aba8:	stm	sp, {r1, ip}
   1abac:	mov	r0, r4
   1abb0:	add	r3, sl, #304	; 0x130
   1abb4:	mov	r1, #5
   1abb8:	add	r2, pc, r2
   1abbc:	bl	6b60 <vcos_log_impl@plt>
   1abc0:	ldr	r5, [sp, #24]
   1abc4:	cmp	r5, #65536	; 0x10000
   1abc8:	bne	1a9d8 <vc_tv_hdmi_power_on_best@@Base+0x74>
   1abcc:	mov	r6, #2
   1abd0:	mov	r3, #1
   1abd4:	b	1a9fc <vc_tv_hdmi_power_on_best@@Base+0x98>
   1abd8:	mov	r2, r5
   1abdc:	add	r0, sp, #28
   1abe0:	mov	r1, #4
   1abe4:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1abe8:	b	1aac0 <vc_tv_hdmi_power_on_best@@Base+0x15c>
   1abec:	ldr	r3, [pc, #68]	; 1ac38 <vc_tv_hdmi_power_on_best@@Base+0x2d4>
   1abf0:	add	r3, pc, r3
   1abf4:	b	1aa9c <vc_tv_hdmi_power_on_best@@Base+0x138>
   1abf8:	mov	r0, r5
   1abfc:	bl	6b84 <pthread_mutex_unlock@plt>
   1ac00:	ldr	r0, [sp, #28]
   1ac04:	b	1aaf4 <vc_tv_hdmi_power_on_best@@Base+0x190>
   1ac08:	andeq	lr, r1, r8, lsl #18
   1ac0c:	andeq	lr, r1, ip, ror #16
   1ac10:	andeq	sp, r1, r0, lsr r8
   1ac14:	andeq	lr, r1, ip, asr #15
   1ac18:	strdeq	ip, [r0], -r8
   1ac1c:			; <UNDEFINED> instruction: 0x0001e7b4
   1ac20:	muleq	r1, r8, r7
   1ac24:	andeq	ip, r0, r8, ror r3
   1ac28:	strdeq	fp, [r0], -r8
   1ac2c:	andeq	ip, r0, r8, lsl #4
   1ac30:	andeq	ip, r0, r8, asr #4
   1ac34:			; <UNDEFINED> instruction: 0x0000c1b0
   1ac38:	andeq	ip, r0, ip, asr #1

0001ac3c <vc_tv_hdmi_power_on_best_3d@@Base>:
   1ac3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac40:	ldr	r4, [pc, #664]	; 1aee0 <vc_tv_hdmi_power_on_best_3d@@Base+0x2a4>
   1ac44:	sub	sp, sp, #84	; 0x54
   1ac48:	add	r4, pc, r4
   1ac4c:	ldr	ip, [r4]
   1ac50:	mov	r9, r0
   1ac54:	cmp	ip, #4
   1ac58:	mov	r8, r1
   1ac5c:	mov	r7, r2
   1ac60:	mov	r6, r3
   1ac64:	bhi	1add4 <vc_tv_hdmi_power_on_best_3d@@Base+0x198>
   1ac68:	ldr	r5, [r4, #3592]	; 0xe08
   1ac6c:	mov	r3, #4
   1ac70:	mov	r1, #1
   1ac74:	mov	r2, #2
   1ac78:	ldr	r0, [sp, #120]	; 0x78
   1ac7c:	str	r3, [sp, #60]	; 0x3c
   1ac80:	add	r3, sp, #20
   1ac84:	str	r9, [sp, #32]
   1ac88:	str	r8, [sp, #36]	; 0x24
   1ac8c:	str	r7, [sp, #40]	; 0x28
   1ac90:	str	r6, [sp, #44]	; 0x2c
   1ac94:	str	r0, [sp, #48]	; 0x30
   1ac98:	str	r5, [sp, #24]
   1ac9c:	str	r1, [sp, #52]	; 0x34
   1aca0:	str	r2, [sp, #20]
   1aca4:	str	r3, [sp, #56]	; 0x38
   1aca8:	cmp	r5, #65536	; 0x10000
   1acac:	beq	1aea4 <vc_tv_hdmi_power_on_best_3d@@Base+0x268>
   1acb0:	ldr	r3, [sp, #20]
   1acb4:	mov	r2, #4
   1acb8:	orr	r3, r3, #-2147483648	; 0x80000000
   1acbc:	str	r3, [sp, #20]
   1acc0:	add	r3, sp, #24
   1acc4:	str	r3, [sp, #64]	; 0x40
   1acc8:	mov	r6, #3
   1accc:	mov	r3, #2
   1acd0:	str	r2, [sp, #68]	; 0x44
   1acd4:	mov	r2, #24
   1acd8:	mvn	r0, #0
   1acdc:	ldr	r4, [pc, #512]	; 1aee4 <vc_tv_hdmi_power_on_best_3d@@Base+0x2a8>
   1ace0:	add	r1, sp, #80	; 0x50
   1ace4:	add	r4, pc, r4
   1ace8:	add	r3, r1, r3, lsl #3
   1acec:	ldr	r1, [r4, #3208]	; 0xc88
   1acf0:	str	r2, [r3, #-20]	; 0xffffffec
   1acf4:	cmp	r1, #0
   1acf8:	add	r1, sp, #32
   1acfc:	str	r1, [r3, #-24]	; 0xffffffe8
   1ad00:	str	r0, [sp, #28]
   1ad04:	beq	1adcc <vc_tv_hdmi_power_on_best_3d@@Base+0x190>
   1ad08:	add	r5, r4, r2
   1ad0c:	add	r5, r5, #3120	; 0xc30
   1ad10:	mov	r0, r5
   1ad14:	bl	5ffc <pthread_mutex_lock@plt>
   1ad18:	ldr	r3, [r4, #3208]	; 0xc88
   1ad1c:	cmp	r3, #0
   1ad20:	beq	1aed0 <vc_tv_hdmi_power_on_best_3d@@Base+0x294>
   1ad24:	ldr	r0, [r4, #24]
   1ad28:	bl	6134 <vchi_service_use@plt>
   1ad2c:	mov	r3, #0
   1ad30:	ldr	r0, [r4, #24]
   1ad34:	mov	r2, r6
   1ad38:	str	r3, [sp]
   1ad3c:	add	r1, sp, #56	; 0x38
   1ad40:	mov	r3, #4
   1ad44:	bl	5cc0 <vchi_msg_queuev@plt>
   1ad48:	subs	r5, r0, #0
   1ad4c:	beq	1aeb0 <vc_tv_hdmi_power_on_best_3d@@Base+0x274>
   1ad50:	ldr	r3, [r4]
   1ad54:	cmp	r3, #1
   1ad58:	bls	1ad94 <vc_tv_hdmi_power_on_best_3d@@Base+0x158>
   1ad5c:	ldr	r3, [sp, #20]
   1ad60:	cmp	r3, #26
   1ad64:	bhi	1aec4 <vc_tv_hdmi_power_on_best_3d@@Base+0x288>
   1ad68:	ldr	r2, [pc, #376]	; 1aee8 <vc_tv_hdmi_power_on_best_3d@@Base+0x2ac>
   1ad6c:	add	r2, pc, r2
   1ad70:	ldr	r3, [r2, r3, lsl #2]
   1ad74:	mov	r2, #24
   1ad78:	ldr	r0, [pc, #364]	; 1aeec <vc_tv_hdmi_power_on_best_3d@@Base+0x2b0>
   1ad7c:	stm	sp, {r2, r5}
   1ad80:	ldr	r2, [pc, #360]	; 1aef0 <vc_tv_hdmi_power_on_best_3d@@Base+0x2b4>
   1ad84:	add	r0, pc, r0
   1ad88:	mov	r1, #2
   1ad8c:	add	r2, pc, r2
   1ad90:	bl	6b60 <vcos_log_impl@plt>
   1ad94:	str	r5, [sp, #28]
   1ad98:	ldr	r3, [pc, #340]	; 1aef4 <vc_tv_hdmi_power_on_best_3d@@Base+0x2b8>
   1ad9c:	add	r3, pc, r3
   1ada0:	ldr	r2, [r3, #3208]	; 0xc88
   1ada4:	cmp	r2, #0
   1ada8:	beq	1adb4 <vc_tv_hdmi_power_on_best_3d@@Base+0x178>
   1adac:	ldr	r0, [r3, #24]
   1adb0:	bl	6014 <vchi_service_release@plt>
   1adb4:	ldr	r0, [pc, #316]	; 1aef8 <vc_tv_hdmi_power_on_best_3d@@Base+0x2bc>
   1adb8:	add	r0, pc, r0
   1adbc:	add	r0, r0, #24
   1adc0:	add	r0, r0, #3120	; 0xc30
   1adc4:	bl	6b84 <pthread_mutex_unlock@plt>
   1adc8:	ldr	r0, [sp, #28]
   1adcc:	add	sp, sp, #84	; 0x54
   1add0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1add4:	ldr	fp, [pc, #288]	; 1aefc <vc_tv_hdmi_power_on_best_3d@@Base+0x2c0>
   1add8:	ldr	sl, [pc, #288]	; 1af00 <vc_tv_hdmi_power_on_best_3d@@Base+0x2c4>
   1addc:	add	fp, pc, fp
   1ade0:	add	sl, pc, sl
   1ade4:	add	r3, sl, #448	; 0x1c0
   1ade8:	mov	r2, fp
   1adec:	mov	r0, r4
   1adf0:	mov	r1, #5
   1adf4:	bl	6b60 <vcos_log_impl@plt>
   1adf8:	ldr	r3, [r4]
   1adfc:	ldr	r5, [r4, #3592]	; 0xe08
   1ae00:	cmp	r3, #4
   1ae04:	bls	1ac6c <vc_tv_hdmi_power_on_best_3d@@Base+0x30>
   1ae08:	mov	r2, fp
   1ae0c:	mov	r0, r4
   1ae10:	mov	r1, #5
   1ae14:	add	r3, sl, #356	; 0x164
   1ae18:	bl	6b60 <vcos_log_impl@plt>
   1ae1c:	mov	r3, #4
   1ae20:	mov	r2, #2
   1ae24:	mov	r1, #1
   1ae28:	ldr	r0, [r4]
   1ae2c:	str	r2, [sp, #20]
   1ae30:	cmp	r0, r3
   1ae34:	ldr	r0, [sp, #120]	; 0x78
   1ae38:	add	r2, sp, #20
   1ae3c:	str	r9, [sp, #32]
   1ae40:	str	r8, [sp, #36]	; 0x24
   1ae44:	str	r7, [sp, #40]	; 0x28
   1ae48:	str	r6, [sp, #44]	; 0x2c
   1ae4c:	str	r0, [sp, #48]	; 0x30
   1ae50:	str	r5, [sp, #24]
   1ae54:	str	r1, [sp, #52]	; 0x34
   1ae58:	str	r3, [sp, #60]	; 0x3c
   1ae5c:	str	r2, [sp, #56]	; 0x38
   1ae60:	bls	1aca8 <vc_tv_hdmi_power_on_best_3d@@Base+0x6c>
   1ae64:	mov	ip, #24
   1ae68:	ldr	r2, [pc, #148]	; 1af04 <vc_tv_hdmi_power_on_best_3d@@Base+0x2c8>
   1ae6c:	ldr	r1, [pc, #148]	; 1af08 <vc_tv_hdmi_power_on_best_3d@@Base+0x2cc>
   1ae70:	add	r2, pc, r2
   1ae74:	str	r2, [sp, #8]
   1ae78:	ldr	r2, [pc, #140]	; 1af0c <vc_tv_hdmi_power_on_best_3d@@Base+0x2d0>
   1ae7c:	add	r1, pc, r1
   1ae80:	stm	sp, {r1, ip}
   1ae84:	mov	r0, r4
   1ae88:	add	r3, sl, #304	; 0x130
   1ae8c:	mov	r1, #5
   1ae90:	add	r2, pc, r2
   1ae94:	bl	6b60 <vcos_log_impl@plt>
   1ae98:	ldr	r5, [sp, #24]
   1ae9c:	cmp	r5, #65536	; 0x10000
   1aea0:	bne	1acb0 <vc_tv_hdmi_power_on_best_3d@@Base+0x74>
   1aea4:	mov	r6, #2
   1aea8:	mov	r3, #1
   1aeac:	b	1acd4 <vc_tv_hdmi_power_on_best_3d@@Base+0x98>
   1aeb0:	mov	r2, r5
   1aeb4:	add	r0, sp, #28
   1aeb8:	mov	r1, #4
   1aebc:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1aec0:	b	1ad98 <vc_tv_hdmi_power_on_best_3d@@Base+0x15c>
   1aec4:	ldr	r3, [pc, #68]	; 1af10 <vc_tv_hdmi_power_on_best_3d@@Base+0x2d4>
   1aec8:	add	r3, pc, r3
   1aecc:	b	1ad74 <vc_tv_hdmi_power_on_best_3d@@Base+0x138>
   1aed0:	mov	r0, r5
   1aed4:	bl	6b84 <pthread_mutex_unlock@plt>
   1aed8:	ldr	r0, [sp, #28]
   1aedc:	b	1adcc <vc_tv_hdmi_power_on_best_3d@@Base+0x190>
   1aee0:	andeq	lr, r1, r0, lsr r6
   1aee4:	muleq	r1, r4, r5
   1aee8:	andeq	sp, r1, r8, asr r5
   1aeec:	strdeq	lr, [r1], -r4
   1aef0:	andeq	ip, r0, r0, lsr #32
   1aef4:	ldrdeq	lr, [r1], -ip
   1aef8:	andeq	lr, r1, r0, asr #9
   1aefc:	andeq	ip, r0, r0, lsr #1
   1af00:	andeq	fp, r0, r0, lsr #20
   1af04:	andeq	fp, r0, r0, lsr pc
   1af08:	andeq	fp, r0, r0, ror pc
   1af0c:	ldrdeq	fp, [r0], -r8
   1af10:	strdeq	fp, [r0], -r4

0001af14 <vc_tv_hdmi_power_on_explicit_new_id@@Base>:
   1af14:	push	{r4, r5, r6, r7, r8, r9, lr}
   1af18:	ldr	r5, [pc, #592]	; 1b170 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x25c>
   1af1c:	mov	r4, r0
   1af20:	add	r5, pc, r5
   1af24:	ldr	r0, [r5]
   1af28:	sub	sp, sp, #68	; 0x44
   1af2c:	cmp	r0, #4
   1af30:	mov	r8, r1
   1af34:	mov	r7, r2
   1af38:	mov	r6, r3
   1af3c:	bhi	1b094 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x180>
   1af40:	mov	r3, #4
   1af44:	mov	r2, #3
   1af48:	str	r3, [sp, #44]	; 0x2c
   1af4c:	add	r3, sp, #16
   1af50:	str	r1, [sp, #28]
   1af54:	str	r7, [sp, #32]
   1af58:	str	r6, [sp, #36]	; 0x24
   1af5c:	str	r4, [sp, #20]
   1af60:	str	r2, [sp, #16]
   1af64:	str	r3, [sp, #40]	; 0x28
   1af68:	cmp	r4, #65536	; 0x10000
   1af6c:	beq	1b134 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x220>
   1af70:	ldr	r3, [sp, #16]
   1af74:	mov	r2, #4
   1af78:	orr	r3, r3, #-2147483648	; 0x80000000
   1af7c:	str	r3, [sp, #16]
   1af80:	add	r3, sp, #20
   1af84:	str	r3, [sp, #48]	; 0x30
   1af88:	mov	r6, #3
   1af8c:	mov	r3, #2
   1af90:	str	r2, [sp, #52]	; 0x34
   1af94:	mov	r2, #12
   1af98:	mvn	r0, #0
   1af9c:	ldr	r4, [pc, #464]	; 1b174 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x260>
   1afa0:	add	r1, sp, #64	; 0x40
   1afa4:	add	r4, pc, r4
   1afa8:	add	r3, r1, r3, lsl #3
   1afac:	ldr	r1, [r4, #3208]	; 0xc88
   1afb0:	str	r2, [r3, #-20]	; 0xffffffec
   1afb4:	cmp	r1, #0
   1afb8:	add	r1, sp, #28
   1afbc:	str	r1, [r3, #-24]	; 0xffffffe8
   1afc0:	str	r0, [sp, #24]
   1afc4:	beq	1b08c <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x178>
   1afc8:	add	r5, r4, #24
   1afcc:	add	r5, r5, #3120	; 0xc30
   1afd0:	mov	r0, r5
   1afd4:	bl	5ffc <pthread_mutex_lock@plt>
   1afd8:	ldr	r3, [r4, #3208]	; 0xc88
   1afdc:	cmp	r3, #0
   1afe0:	beq	1b160 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x24c>
   1afe4:	ldr	r0, [r4, #24]
   1afe8:	bl	6134 <vchi_service_use@plt>
   1afec:	mov	r3, #0
   1aff0:	ldr	r0, [r4, #24]
   1aff4:	mov	r2, r6
   1aff8:	str	r3, [sp]
   1affc:	add	r1, sp, #40	; 0x28
   1b000:	mov	r3, #4
   1b004:	bl	5cc0 <vchi_msg_queuev@plt>
   1b008:	subs	r5, r0, #0
   1b00c:	beq	1b140 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x22c>
   1b010:	ldr	r3, [r4]
   1b014:	cmp	r3, #1
   1b018:	bls	1b054 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x140>
   1b01c:	ldr	r3, [sp, #16]
   1b020:	cmp	r3, #26
   1b024:	bhi	1b154 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x240>
   1b028:	ldr	r2, [pc, #328]	; 1b178 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x264>
   1b02c:	add	r2, pc, r2
   1b030:	ldr	r3, [r2, r3, lsl #2]
   1b034:	mov	r2, #12
   1b038:	ldr	r0, [pc, #316]	; 1b17c <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x268>
   1b03c:	stm	sp, {r2, r5}
   1b040:	ldr	r2, [pc, #312]	; 1b180 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x26c>
   1b044:	add	r0, pc, r0
   1b048:	mov	r1, #2
   1b04c:	add	r2, pc, r2
   1b050:	bl	6b60 <vcos_log_impl@plt>
   1b054:	str	r5, [sp, #24]
   1b058:	ldr	r3, [pc, #292]	; 1b184 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x270>
   1b05c:	add	r3, pc, r3
   1b060:	ldr	r2, [r3, #3208]	; 0xc88
   1b064:	cmp	r2, #0
   1b068:	beq	1b074 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x160>
   1b06c:	ldr	r0, [r3, #24]
   1b070:	bl	6014 <vchi_service_release@plt>
   1b074:	ldr	r0, [pc, #268]	; 1b188 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x274>
   1b078:	add	r0, pc, r0
   1b07c:	add	r0, r0, #24
   1b080:	add	r0, r0, #3120	; 0xc30
   1b084:	bl	6b84 <pthread_mutex_unlock@plt>
   1b088:	ldr	r0, [sp, #24]
   1b08c:	add	sp, sp, #68	; 0x44
   1b090:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1b094:	ldr	r9, [pc, #240]	; 1b18c <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x278>
   1b098:	str	r2, [sp, #4]
   1b09c:	ldr	r2, [pc, #236]	; 1b190 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x27c>
   1b0a0:	add	r9, pc, r9
   1b0a4:	str	r1, [sp]
   1b0a8:	str	r3, [sp, #8]
   1b0ac:	mov	r1, #5
   1b0b0:	add	r3, r9, #476	; 0x1dc
   1b0b4:	add	r2, pc, r2
   1b0b8:	mov	r0, r5
   1b0bc:	bl	6b60 <vcos_log_impl@plt>
   1b0c0:	mov	r2, #3
   1b0c4:	mov	r3, #4
   1b0c8:	ldr	r1, [r5]
   1b0cc:	str	r2, [sp, #16]
   1b0d0:	cmp	r1, r3
   1b0d4:	add	r2, sp, #16
   1b0d8:	str	r8, [sp, #28]
   1b0dc:	str	r7, [sp, #32]
   1b0e0:	str	r6, [sp, #36]	; 0x24
   1b0e4:	str	r4, [sp, #20]
   1b0e8:	str	r3, [sp, #44]	; 0x2c
   1b0ec:	str	r2, [sp, #40]	; 0x28
   1b0f0:	bls	1af68 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x54>
   1b0f4:	mov	ip, #12
   1b0f8:	ldr	r2, [pc, #148]	; 1b194 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x280>
   1b0fc:	ldr	r1, [pc, #148]	; 1b198 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x284>
   1b100:	add	r2, pc, r2
   1b104:	str	r2, [sp, #8]
   1b108:	ldr	r2, [pc, #140]	; 1b19c <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x288>
   1b10c:	add	r1, pc, r1
   1b110:	stm	sp, {r1, ip}
   1b114:	mov	r0, r5
   1b118:	add	r3, r9, #304	; 0x130
   1b11c:	mov	r1, #5
   1b120:	add	r2, pc, r2
   1b124:	bl	6b60 <vcos_log_impl@plt>
   1b128:	ldr	r4, [sp, #20]
   1b12c:	cmp	r4, #65536	; 0x10000
   1b130:	bne	1af70 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x5c>
   1b134:	mov	r6, #2
   1b138:	mov	r3, #1
   1b13c:	b	1af94 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x80>
   1b140:	mov	r2, r5
   1b144:	add	r0, sp, #24
   1b148:	mov	r1, #4
   1b14c:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1b150:	b	1b058 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x144>
   1b154:	ldr	r3, [pc, #68]	; 1b1a0 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x28c>
   1b158:	add	r3, pc, r3
   1b15c:	b	1b034 <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x120>
   1b160:	mov	r0, r5
   1b164:	bl	6b84 <pthread_mutex_unlock@plt>
   1b168:	ldr	r0, [sp, #24]
   1b16c:	b	1b08c <vc_tv_hdmi_power_on_explicit_new_id@@Base+0x178>
   1b170:	andeq	lr, r1, r8, asr r3
   1b174:	ldrdeq	lr, [r1], -r4
   1b178:	muleq	r1, r8, r2
   1b17c:	andeq	lr, r1, r4, lsr r2
   1b180:	andeq	fp, r0, r0, ror #26
   1b184:	andeq	lr, r1, ip, lsl r2
   1b188:	andeq	lr, r1, r0, lsl #4
   1b18c:	andeq	fp, r0, r0, ror #14
   1b190:	andeq	fp, r0, r8, asr #26
   1b194:	andeq	fp, r0, r0, lsr #25
   1b198:	andeq	fp, r0, r0, lsl sp
   1b19c:	andeq	fp, r0, r8, asr #24
   1b1a0:	andeq	fp, r0, r4, ror #22

0001b1a4 <vc_tv_hdmi_power_on_explicit_new@@Base>:
   1b1a4:	push	{lr}		; (str lr, [sp, #-4]!)
   1b1a8:	mov	lr, r1
   1b1ac:	ldr	ip, [pc, #24]	; 1b1cc <vc_tv_hdmi_power_on_explicit_new@@Base+0x28>
   1b1b0:	mov	r3, r2
   1b1b4:	add	ip, pc, ip
   1b1b8:	mov	r1, r0
   1b1bc:	mov	r2, lr
   1b1c0:	ldr	r0, [ip, #3592]	; 0xe08
   1b1c4:	pop	{lr}		; (ldr lr, [sp], #4)
   1b1c8:	b	1af14 <vc_tv_hdmi_power_on_explicit_new_id@@Base>
   1b1cc:	andeq	lr, r1, r4, asr #1

0001b1d0 <vc_tv_sdtv_power_on_id@@Base>:
   1b1d0:	push	{r4, r5, r6, r7, lr}
   1b1d4:	ldr	r6, [pc, #604]	; 1b438 <vc_tv_sdtv_power_on_id@@Base+0x268>
   1b1d8:	sub	sp, sp, #68	; 0x44
   1b1dc:	add	r6, pc, r6
   1b1e0:	ldr	r3, [r6]
   1b1e4:	mov	r4, r0
   1b1e8:	cmp	r3, #4
   1b1ec:	mov	r7, r1
   1b1f0:	mov	r5, r2
   1b1f4:	bhi	1b3a0 <vc_tv_sdtv_power_on_id@@Base+0x1d0>
   1b1f8:	cmp	r2, #0
   1b1fc:	str	r1, [sp, #32]
   1b200:	beq	1b414 <vc_tv_sdtv_power_on_id@@Base+0x244>
   1b204:	ldr	r1, [r5]
   1b208:	mov	r2, #4
   1b20c:	cmp	r3, r2
   1b210:	add	r3, sp, #20
   1b214:	str	r1, [sp, #36]	; 0x24
   1b218:	str	r4, [sp, #24]
   1b21c:	str	r2, [sp, #20]
   1b220:	str	r2, [sp, #44]	; 0x2c
   1b224:	str	r3, [sp, #40]	; 0x28
   1b228:	bls	1b274 <vc_tv_sdtv_power_on_id@@Base+0xa4>
   1b22c:	mov	r0, #8
   1b230:	ldr	r2, [pc, #516]	; 1b43c <vc_tv_sdtv_power_on_id@@Base+0x26c>
   1b234:	ldr	r3, [pc, #516]	; 1b440 <vc_tv_sdtv_power_on_id@@Base+0x270>
   1b238:	add	r2, pc, r2
   1b23c:	ldr	r1, [pc, #512]	; 1b444 <vc_tv_sdtv_power_on_id@@Base+0x274>
   1b240:	str	r0, [sp, #4]
   1b244:	str	r2, [sp, #8]
   1b248:	ldr	r0, [pc, #504]	; 1b448 <vc_tv_sdtv_power_on_id@@Base+0x278>
   1b24c:	ldr	r2, [pc, #504]	; 1b44c <vc_tv_sdtv_power_on_id@@Base+0x27c>
   1b250:	add	r1, pc, r1
   1b254:	add	r3, pc, r3
   1b258:	str	r1, [sp]
   1b25c:	add	r3, r3, #304	; 0x130
   1b260:	add	r0, pc, r0
   1b264:	mov	r1, #5
   1b268:	add	r2, pc, r2
   1b26c:	bl	6b60 <vcos_log_impl@plt>
   1b270:	ldr	r4, [sp, #24]
   1b274:	cmp	r4, #65536	; 0x10000
   1b278:	beq	1b3d8 <vc_tv_sdtv_power_on_id@@Base+0x208>
   1b27c:	ldr	r3, [sp, #20]
   1b280:	mov	r2, #4
   1b284:	orr	r3, r3, #-2147483648	; 0x80000000
   1b288:	str	r3, [sp, #20]
   1b28c:	add	r3, sp, #24
   1b290:	str	r3, [sp, #48]	; 0x30
   1b294:	mov	r6, #3
   1b298:	mov	r3, #2
   1b29c:	str	r2, [sp, #52]	; 0x34
   1b2a0:	mov	r2, #8
   1b2a4:	mvn	r0, #0
   1b2a8:	ldr	r4, [pc, #416]	; 1b450 <vc_tv_sdtv_power_on_id@@Base+0x280>
   1b2ac:	add	r1, sp, #64	; 0x40
   1b2b0:	add	r4, pc, r4
   1b2b4:	add	r3, r1, r3, lsl #3
   1b2b8:	ldr	r1, [r4, #3208]	; 0xc88
   1b2bc:	str	r2, [r3, #-20]	; 0xffffffec
   1b2c0:	cmp	r1, #0
   1b2c4:	add	r1, sp, #32
   1b2c8:	str	r1, [r3, #-24]	; 0xffffffe8
   1b2cc:	str	r0, [sp, #28]
   1b2d0:	beq	1b398 <vc_tv_sdtv_power_on_id@@Base+0x1c8>
   1b2d4:	add	r5, r4, #24
   1b2d8:	add	r5, r5, #3120	; 0xc30
   1b2dc:	mov	r0, r5
   1b2e0:	bl	5ffc <pthread_mutex_lock@plt>
   1b2e4:	ldr	r3, [r4, #3208]	; 0xc88
   1b2e8:	cmp	r3, #0
   1b2ec:	beq	1b404 <vc_tv_sdtv_power_on_id@@Base+0x234>
   1b2f0:	ldr	r0, [r4, #24]
   1b2f4:	bl	6134 <vchi_service_use@plt>
   1b2f8:	mov	r3, #0
   1b2fc:	ldr	r0, [r4, #24]
   1b300:	mov	r2, r6
   1b304:	str	r3, [sp]
   1b308:	add	r1, sp, #40	; 0x28
   1b30c:	mov	r3, #4
   1b310:	bl	5cc0 <vchi_msg_queuev@plt>
   1b314:	subs	r5, r0, #0
   1b318:	beq	1b3e4 <vc_tv_sdtv_power_on_id@@Base+0x214>
   1b31c:	ldr	r3, [r4]
   1b320:	cmp	r3, #1
   1b324:	bls	1b360 <vc_tv_sdtv_power_on_id@@Base+0x190>
   1b328:	ldr	r3, [sp, #20]
   1b32c:	cmp	r3, #26
   1b330:	bhi	1b3f8 <vc_tv_sdtv_power_on_id@@Base+0x228>
   1b334:	ldr	r2, [pc, #280]	; 1b454 <vc_tv_sdtv_power_on_id@@Base+0x284>
   1b338:	add	r2, pc, r2
   1b33c:	ldr	r3, [r2, r3, lsl #2]
   1b340:	mov	r2, #8
   1b344:	ldr	r0, [pc, #268]	; 1b458 <vc_tv_sdtv_power_on_id@@Base+0x288>
   1b348:	stm	sp, {r2, r5}
   1b34c:	ldr	r2, [pc, #264]	; 1b45c <vc_tv_sdtv_power_on_id@@Base+0x28c>
   1b350:	add	r0, pc, r0
   1b354:	mov	r1, #2
   1b358:	add	r2, pc, r2
   1b35c:	bl	6b60 <vcos_log_impl@plt>
   1b360:	str	r5, [sp, #28]
   1b364:	ldr	r3, [pc, #244]	; 1b460 <vc_tv_sdtv_power_on_id@@Base+0x290>
   1b368:	add	r3, pc, r3
   1b36c:	ldr	r2, [r3, #3208]	; 0xc88
   1b370:	cmp	r2, #0
   1b374:	beq	1b380 <vc_tv_sdtv_power_on_id@@Base+0x1b0>
   1b378:	ldr	r0, [r3, #24]
   1b37c:	bl	6014 <vchi_service_release@plt>
   1b380:	ldr	r0, [pc, #220]	; 1b464 <vc_tv_sdtv_power_on_id@@Base+0x294>
   1b384:	add	r0, pc, r0
   1b388:	add	r0, r0, #24
   1b38c:	add	r0, r0, #3120	; 0xc30
   1b390:	bl	6b84 <pthread_mutex_unlock@plt>
   1b394:	ldr	r0, [sp, #28]
   1b398:	add	sp, sp, #68	; 0x44
   1b39c:	pop	{r4, r5, r6, r7, pc}
   1b3a0:	ldr	r3, [pc, #192]	; 1b468 <vc_tv_sdtv_power_on_id@@Base+0x298>
   1b3a4:	ldr	r2, [pc, #192]	; 1b46c <vc_tv_sdtv_power_on_id@@Base+0x29c>
   1b3a8:	add	r3, pc, r3
   1b3ac:	add	r3, r3, #512	; 0x200
   1b3b0:	mov	r0, r6
   1b3b4:	mov	r1, #5
   1b3b8:	add	r2, pc, r2
   1b3bc:	bl	6b60 <vcos_log_impl@plt>
   1b3c0:	cmp	r5, #0
   1b3c4:	ldr	r3, [r6]
   1b3c8:	str	r7, [sp, #32]
   1b3cc:	bne	1b204 <vc_tv_sdtv_power_on_id@@Base+0x34>
   1b3d0:	mov	r1, #1
   1b3d4:	b	1b208 <vc_tv_sdtv_power_on_id@@Base+0x38>
   1b3d8:	mov	r6, #2
   1b3dc:	mov	r3, #1
   1b3e0:	b	1b2a0 <vc_tv_sdtv_power_on_id@@Base+0xd0>
   1b3e4:	mov	r2, r5
   1b3e8:	add	r0, sp, #28
   1b3ec:	mov	r1, #4
   1b3f0:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1b3f4:	b	1b364 <vc_tv_sdtv_power_on_id@@Base+0x194>
   1b3f8:	ldr	r3, [pc, #112]	; 1b470 <vc_tv_sdtv_power_on_id@@Base+0x2a0>
   1b3fc:	add	r3, pc, r3
   1b400:	b	1b340 <vc_tv_sdtv_power_on_id@@Base+0x170>
   1b404:	mov	r0, r5
   1b408:	bl	6b84 <pthread_mutex_unlock@plt>
   1b40c:	ldr	r0, [sp, #28]
   1b410:	b	1b398 <vc_tv_sdtv_power_on_id@@Base+0x1c8>
   1b414:	mov	r3, #4
   1b418:	mov	r2, #1
   1b41c:	str	r3, [sp, #20]
   1b420:	str	r3, [sp, #44]	; 0x2c
   1b424:	add	r3, sp, #20
   1b428:	str	r4, [sp, #24]
   1b42c:	str	r2, [sp, #36]	; 0x24
   1b430:	str	r3, [sp, #40]	; 0x28
   1b434:	b	1b274 <vc_tv_sdtv_power_on_id@@Base+0xa4>
   1b438:	muleq	r1, ip, r0
   1b43c:	andeq	fp, r0, r8, ror #22
   1b440:	andeq	fp, r0, ip, lsr #11
   1b444:	andeq	fp, r0, r0, ror #23
   1b448:	andeq	lr, r1, r8, lsl r0
   1b44c:	andeq	fp, r0, r0, lsl #22
   1b450:	andeq	sp, r1, r8, asr #31
   1b454:	andeq	ip, r1, ip, lsl #31
   1b458:	andeq	sp, r1, r8, lsr #30
   1b45c:	andeq	fp, r0, r4, asr sl
   1b460:	andeq	sp, r1, r0, lsl pc
   1b464:	strdeq	sp, [r1], -r4
   1b468:	andeq	fp, r0, r8, asr r4
   1b46c:	andeq	fp, r0, r4, asr #21
   1b470:	andeq	fp, r0, r0, asr #17

0001b474 <vc_tv_sdtv_power_on@@Base>:
   1b474:	ldr	r3, [pc, #16]	; 1b48c <vc_tv_sdtv_power_on@@Base+0x18>
   1b478:	mov	r2, r1
   1b47c:	add	r3, pc, r3
   1b480:	mov	r1, r0
   1b484:	ldr	r0, [r3, #3592]	; 0xe08
   1b488:	b	1b1d0 <vc_tv_sdtv_power_on_id@@Base>
   1b48c:	strdeq	sp, [r1], -ip

0001b490 <vc_tv_power_off_id@@Base>:
   1b490:	push	{r4, r5, r6, r7, lr}
   1b494:	ldr	r5, [pc, #500]	; 1b690 <vc_tv_power_off_id@@Base+0x200>
   1b498:	sub	sp, sp, #52	; 0x34
   1b49c:	add	r5, pc, r5
   1b4a0:	ldr	r3, [r5]
   1b4a4:	mov	r4, r0
   1b4a8:	cmp	r3, #4
   1b4ac:	bhi	1b5e4 <vc_tv_power_off_id@@Base+0x154>
   1b4b0:	mov	r3, #4
   1b4b4:	mov	r2, #5
   1b4b8:	str	r3, [sp, #28]
   1b4bc:	add	r3, sp, #16
   1b4c0:	str	r0, [sp, #20]
   1b4c4:	str	r2, [sp, #16]
   1b4c8:	str	r3, [sp, #24]
   1b4cc:	cmp	r4, #65536	; 0x10000
   1b4d0:	beq	1b668 <vc_tv_power_off_id@@Base+0x1d8>
   1b4d4:	ldr	r3, [sp, #16]
   1b4d8:	mov	r2, #4
   1b4dc:	orr	r3, r3, #-2147483648	; 0x80000000
   1b4e0:	str	r3, [sp, #16]
   1b4e4:	add	r3, sp, #20
   1b4e8:	str	r3, [sp, #32]
   1b4ec:	mov	r7, #3
   1b4f0:	mov	r3, #2
   1b4f4:	str	r2, [sp, #36]	; 0x24
   1b4f8:	mov	r5, #0
   1b4fc:	ldr	r4, [pc, #400]	; 1b694 <vc_tv_power_off_id@@Base+0x204>
   1b500:	add	r2, sp, #48	; 0x30
   1b504:	add	r4, pc, r4
   1b508:	ldr	r1, [r4, #3208]	; 0xc88
   1b50c:	add	r3, r2, r3, lsl #3
   1b510:	cmp	r1, r5
   1b514:	str	r5, [r3, #-24]	; 0xffffffe8
   1b518:	str	r5, [r3, #-20]	; 0xffffffec
   1b51c:	beq	1b67c <vc_tv_power_off_id@@Base+0x1ec>
   1b520:	add	r6, r4, #24
   1b524:	add	r6, r6, #3120	; 0xc30
   1b528:	mov	r0, r6
   1b52c:	bl	5ffc <pthread_mutex_lock@plt>
   1b530:	ldr	r3, [r4, #3208]	; 0xc88
   1b534:	cmp	r3, r5
   1b538:	beq	1b674 <vc_tv_power_off_id@@Base+0x1e4>
   1b53c:	ldr	r0, [r4, #24]
   1b540:	bl	6134 <vchi_service_use@plt>
   1b544:	ldr	r0, [r4, #24]
   1b548:	mov	r2, r7
   1b54c:	str	r5, [sp]
   1b550:	add	r1, sp, #24
   1b554:	mov	r3, #4
   1b558:	bl	5cc0 <vchi_msg_queuev@plt>
   1b55c:	subs	r5, r0, #0
   1b560:	beq	1b5a8 <vc_tv_power_off_id@@Base+0x118>
   1b564:	ldr	r3, [r4]
   1b568:	cmp	r3, #1
   1b56c:	bls	1b5a8 <vc_tv_power_off_id@@Base+0x118>
   1b570:	ldr	r3, [sp, #16]
   1b574:	cmp	r3, #26
   1b578:	bhi	1b684 <vc_tv_power_off_id@@Base+0x1f4>
   1b57c:	ldr	r2, [pc, #276]	; 1b698 <vc_tv_power_off_id@@Base+0x208>
   1b580:	add	r2, pc, r2
   1b584:	ldr	r3, [r2, r3, lsl #2]
   1b588:	mov	r2, #0
   1b58c:	ldr	r0, [pc, #264]	; 1b69c <vc_tv_power_off_id@@Base+0x20c>
   1b590:	stm	sp, {r2, r5}
   1b594:	ldr	r2, [pc, #260]	; 1b6a0 <vc_tv_power_off_id@@Base+0x210>
   1b598:	add	r0, pc, r0
   1b59c:	mov	r1, #2
   1b5a0:	add	r2, pc, r2
   1b5a4:	bl	6b60 <vcos_log_impl@plt>
   1b5a8:	ldr	r3, [pc, #244]	; 1b6a4 <vc_tv_power_off_id@@Base+0x214>
   1b5ac:	add	r3, pc, r3
   1b5b0:	ldr	r2, [r3, #3208]	; 0xc88
   1b5b4:	cmp	r2, #0
   1b5b8:	beq	1b5c4 <vc_tv_power_off_id@@Base+0x134>
   1b5bc:	ldr	r0, [r3, #24]
   1b5c0:	bl	6014 <vchi_service_release@plt>
   1b5c4:	ldr	r0, [pc, #220]	; 1b6a8 <vc_tv_power_off_id@@Base+0x218>
   1b5c8:	add	r0, pc, r0
   1b5cc:	add	r0, r0, #24
   1b5d0:	add	r0, r0, #3120	; 0xc30
   1b5d4:	bl	6b84 <pthread_mutex_unlock@plt>
   1b5d8:	mov	r0, r5
   1b5dc:	add	sp, sp, #52	; 0x34
   1b5e0:	pop	{r4, r5, r6, r7, pc}
   1b5e4:	ldr	r6, [pc, #192]	; 1b6ac <vc_tv_power_off_id@@Base+0x21c>
   1b5e8:	ldr	r2, [pc, #192]	; 1b6b0 <vc_tv_power_off_id@@Base+0x220>
   1b5ec:	add	r6, pc, r6
   1b5f0:	add	r3, r6, #536	; 0x218
   1b5f4:	mov	r1, #5
   1b5f8:	add	r2, pc, r2
   1b5fc:	mov	r0, r5
   1b600:	bl	6b60 <vcos_log_impl@plt>
   1b604:	mov	r3, #4
   1b608:	mov	r1, #5
   1b60c:	ldr	r2, [r5]
   1b610:	str	r4, [sp, #20]
   1b614:	cmp	r2, r3
   1b618:	add	r2, sp, #16
   1b61c:	str	r1, [sp, #16]
   1b620:	str	r3, [sp, #28]
   1b624:	str	r2, [sp, #24]
   1b628:	bls	1b4cc <vc_tv_power_off_id@@Base+0x3c>
   1b62c:	mov	lr, #0
   1b630:	ldr	r2, [pc, #124]	; 1b6b4 <vc_tv_power_off_id@@Base+0x224>
   1b634:	ldr	ip, [pc, #124]	; 1b6b8 <vc_tv_power_off_id@@Base+0x228>
   1b638:	add	r2, pc, r2
   1b63c:	str	r2, [sp, #8]
   1b640:	ldr	r2, [pc, #116]	; 1b6bc <vc_tv_power_off_id@@Base+0x22c>
   1b644:	add	ip, pc, ip
   1b648:	mov	r0, r5
   1b64c:	add	r3, r6, #304	; 0x130
   1b650:	stm	sp, {ip, lr}
   1b654:	add	r2, pc, r2
   1b658:	bl	6b60 <vcos_log_impl@plt>
   1b65c:	ldr	r4, [sp, #20]
   1b660:	cmp	r4, #65536	; 0x10000
   1b664:	bne	1b4d4 <vc_tv_power_off_id@@Base+0x44>
   1b668:	mov	r7, #2
   1b66c:	mov	r3, #1
   1b670:	b	1b4f8 <vc_tv_power_off_id@@Base+0x68>
   1b674:	mov	r0, r6
   1b678:	bl	6b84 <pthread_mutex_unlock@plt>
   1b67c:	mvn	r5, #0
   1b680:	b	1b5d8 <vc_tv_power_off_id@@Base+0x148>
   1b684:	ldr	r3, [pc, #52]	; 1b6c0 <vc_tv_power_off_id@@Base+0x230>
   1b688:	add	r3, pc, r3
   1b68c:	b	1b588 <vc_tv_power_off_id@@Base+0xf8>
   1b690:	ldrdeq	sp, [r1], -ip
   1b694:	andeq	sp, r1, r4, ror sp
   1b698:	andeq	ip, r1, r4, asr #26
   1b69c:	andeq	sp, r1, r0, ror #25
   1b6a0:	andeq	fp, r0, ip, lsl #16
   1b6a4:	andeq	sp, r1, ip, asr #25
   1b6a8:			; <UNDEFINED> instruction: 0x0001dcb0
   1b6ac:	andeq	fp, r0, r4, lsl r2
   1b6b0:	andeq	fp, r0, r4, lsl #17
   1b6b4:	andeq	fp, r0, r4, lsl #16
   1b6b8:	strdeq	fp, [r0], -r4
   1b6bc:	andeq	fp, r0, r4, lsl r7
   1b6c0:	andeq	fp, r0, r4, lsr r6

0001b6c4 <vc_tv_power_off@@Base>:
   1b6c4:	ldr	r3, [pc, #8]	; 1b6d4 <vc_tv_power_off@@Base+0x10>
   1b6c8:	add	r3, pc, r3
   1b6cc:	ldr	r0, [r3, #3592]	; 0xe08
   1b6d0:	b	1b490 <vc_tv_power_off_id@@Base>
   1b6d4:			; <UNDEFINED> instruction: 0x0001dbb0

0001b6d8 <vc_tv_hdmi_get_supported_modes_new_id@@Base>:
   1b6d8:	mov	ip, #0
   1b6dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b6e0:	ldr	r4, [pc, #1848]	; 1be20 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x748>
   1b6e4:	sub	sp, sp, #44	; 0x2c
   1b6e8:	add	r4, pc, r4
   1b6ec:	mov	r5, r1
   1b6f0:	str	r1, [sp, #20]
   1b6f4:	ldr	r1, [r4]
   1b6f8:	mov	r8, r0
   1b6fc:	cmp	r1, #4
   1b700:	mov	r7, r2
   1b704:	mov	r6, r3
   1b708:	str	ip, [sp, #24]
   1b70c:	bhi	1b800 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x128>
   1b710:	cmp	r5, #1
   1b714:	beq	1b7ac <vc_tv_hdmi_get_supported_modes_new_id@@Base+0xd4>
   1b718:	cmp	r5, #2
   1b71c:	bne	1b7bc <vc_tv_hdmi_get_supported_modes_new_id@@Base+0xe4>
   1b720:	ldr	r4, [pc, #1788]	; 1be24 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x74c>
   1b724:	add	r4, pc, r4
   1b728:	add	r4, r4, #3248	; 0xcb0
   1b72c:	add	r4, r4, #4
   1b730:	cmp	r1, #4
   1b734:	bhi	1b994 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x2bc>
   1b738:	mov	r3, #0
   1b73c:	ldr	r2, [r4]
   1b740:	str	r3, [sp, #28]
   1b744:	cmp	r2, r3
   1b748:	str	r3, [sp, #32]
   1b74c:	str	r3, [sp, #36]	; 0x24
   1b750:	add	r9, sp, #28
   1b754:	beq	1b848 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x170>
   1b758:	cmp	r7, #0
   1b75c:	cmpne	r6, #0
   1b760:	ldreq	r5, [r4, #8]
   1b764:	bne	1ba50 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x378>
   1b768:	ldr	r3, [sp, #80]	; 0x50
   1b76c:	ldr	r2, [sp, #84]	; 0x54
   1b770:	cmp	r3, #0
   1b774:	cmpne	r2, #0
   1b778:	moveq	r0, r5
   1b77c:	beq	1b7a4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0xcc>
   1b780:	mov	r1, r3
   1b784:	mov	r0, r5
   1b788:	ldr	r3, [pc, #1688]	; 1be28 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x750>
   1b78c:	add	r3, pc, r3
   1b790:	ldr	r2, [r3, #3244]	; 0xcac
   1b794:	str	r2, [r1]
   1b798:	ldr	r3, [r3, #3248]	; 0xcb0
   1b79c:	ldr	r2, [sp, #84]	; 0x54
   1b7a0:	str	r3, [r2]
   1b7a4:	add	sp, sp, #44	; 0x2c
   1b7a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b7ac:	add	r4, r4, #3264	; 0xcc0
   1b7b0:	add	r4, r4, #4
   1b7b4:	b	1b738 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x60>
   1b7b8:	ldr	r1, [r4]
   1b7bc:	cmp	r1, #1
   1b7c0:	mvnls	r0, #0
   1b7c4:	bls	1b7a4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0xcc>
   1b7c8:	ldr	r2, [pc, #1628]	; 1be2c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x754>
   1b7cc:	ldr	r0, [pc, #1628]	; 1be30 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x758>
   1b7d0:	add	r2, pc, r2
   1b7d4:	add	r2, r2, #556	; 0x22c
   1b7d8:	str	r2, [sp]
   1b7dc:	ldr	r2, [pc, #1616]	; 1be34 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x75c>
   1b7e0:	mov	r3, r5
   1b7e4:	add	r0, pc, r0
   1b7e8:	mov	r1, #2
   1b7ec:	add	r2, pc, r2
   1b7f0:	bl	6b60 <vcos_log_impl@plt>
   1b7f4:	mvn	r0, #0
   1b7f8:	add	sp, sp, #44	; 0x2c
   1b7fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b800:	ldr	r3, [pc, #1584]	; 1be38 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x760>
   1b804:	ldr	r2, [pc, #1584]	; 1be3c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x764>
   1b808:	add	r3, pc, r3
   1b80c:	mov	r0, r4
   1b810:	add	r3, r3, #556	; 0x22c
   1b814:	mov	r1, #5
   1b818:	add	r2, pc, r2
   1b81c:	bl	6b60 <vcos_log_impl@plt>
   1b820:	cmp	r5, #1
   1b824:	beq	1b838 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x160>
   1b828:	cmp	r5, #2
   1b82c:	bne	1b7b8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0xe0>
   1b830:	ldr	r1, [r4]
   1b834:	b	1b720 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x48>
   1b838:	ldr	r1, [r4], #24
   1b83c:	add	r4, r4, #3232	; 0xca0
   1b840:	add	r4, r4, #12
   1b844:	b	1b730 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x58>
   1b848:	ldr	sl, [pc, #1520]	; 1be40 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x768>
   1b84c:	add	fp, sp, #20
   1b850:	add	sl, pc, sl
   1b854:	ldr	r0, [sl, #24]
   1b858:	bl	6134 <vchi_service_use@plt>
   1b85c:	mov	r3, #12
   1b860:	mov	r1, r8
   1b864:	str	r3, [sp, #4]
   1b868:	str	r9, [sp]
   1b86c:	mov	r2, fp
   1b870:	mov	r0, #6
   1b874:	mov	r3, #4
   1b878:	bl	18c08 <vc_gpuserv_execute_code@@Base+0x45c>
   1b87c:	subs	r1, r0, #0
   1b880:	bne	1b9c8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x2f0>
   1b884:	ldr	r3, [sp, #28]
   1b888:	cmp	r3, #0
   1b88c:	bne	1ba78 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x3a0>
   1b890:	ldr	r3, [sl]
   1b894:	cmp	r3, #4
   1b898:	bls	1b8f4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x21c>
   1b89c:	ldr	r3, [pc, #1440]	; 1be44 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x76c>
   1b8a0:	cmp	r5, #0
   1b8a4:	add	r3, pc, r3
   1b8a8:	beq	1b8cc <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x1f4>
   1b8ac:	cmp	r5, #1
   1b8b0:	beq	1bd3c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x664>
   1b8b4:	cmp	r5, #2
   1b8b8:	beq	1bd48 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x670>
   1b8bc:	cmp	r5, #4
   1b8c0:	beq	1bd54 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x67c>
   1b8c4:	ldr	r3, [pc, #1404]	; 1be48 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x770>
   1b8c8:	add	r3, pc, r3
   1b8cc:	ldr	r2, [pc, #1400]	; 1be4c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x774>
   1b8d0:	ldr	r0, [pc, #1400]	; 1be50 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x778>
   1b8d4:	add	r2, pc, r2
   1b8d8:	add	r2, r2, #556	; 0x22c
   1b8dc:	str	r2, [sp]
   1b8e0:	ldr	r2, [pc, #1388]	; 1be54 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x77c>
   1b8e4:	add	r0, pc, r0
   1b8e8:	mov	r1, #5
   1b8ec:	add	r2, pc, r2
   1b8f0:	bl	6b60 <vcos_log_impl@plt>
   1b8f4:	ldr	r8, [pc, #1372]	; 1be58 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x780>
   1b8f8:	add	r8, pc, r8
   1b8fc:	ldr	r0, [r8, #24]
   1b900:	bl	6014 <vchi_service_release@plt>
   1b904:	mov	r2, #1
   1b908:	ldr	r3, [r8]
   1b90c:	str	r2, [r4]
   1b910:	cmp	r3, #4
   1b914:	bls	1b978 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x2a0>
   1b918:	ldr	r1, [pc, #1340]	; 1be5c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x784>
   1b91c:	cmp	r5, #0
   1b920:	add	r1, pc, r1
   1b924:	ldr	r2, [sp, #28]
   1b928:	beq	1b94c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x274>
   1b92c:	cmp	r5, #1
   1b930:	beq	1bc60 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x588>
   1b934:	cmp	r5, #2
   1b938:	beq	1bd24 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x64c>
   1b93c:	cmp	r5, #4
   1b940:	beq	1bd30 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x658>
   1b944:	ldr	r1, [pc, #1300]	; 1be60 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x788>
   1b948:	add	r1, pc, r1
   1b94c:	ldr	r3, [pc, #1296]	; 1be64 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x78c>
   1b950:	str	r2, [sp]
   1b954:	ldr	r0, [pc, #1292]	; 1be68 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x790>
   1b958:	ldr	r2, [pc, #1292]	; 1be6c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x794>
   1b95c:	add	r3, pc, r3
   1b960:	str	r1, [sp, #4]
   1b964:	add	r3, r3, #556	; 0x22c
   1b968:	add	r0, pc, r0
   1b96c:	mov	r1, #5
   1b970:	add	r2, pc, r2
   1b974:	bl	6b60 <vcos_log_impl@plt>
   1b978:	ldr	r3, [pc, #1264]	; 1be70 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x798>
   1b97c:	ldr	r1, [sp, #32]
   1b980:	ldr	r2, [sp, #36]	; 0x24
   1b984:	add	r3, pc, r3
   1b988:	str	r1, [r3, #3244]	; 0xcac
   1b98c:	str	r2, [r3, #3248]	; 0xcb0
   1b990:	b	1ba40 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x368>
   1b994:	str	r5, [sp]
   1b998:	ldr	r2, [r4]
   1b99c:	ldr	r3, [pc, #1232]	; 1be74 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x79c>
   1b9a0:	str	r2, [sp, #4]
   1b9a4:	ldr	r0, [pc, #1228]	; 1be78 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7a0>
   1b9a8:	ldr	r2, [pc, #1228]	; 1be7c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7a4>
   1b9ac:	add	r3, pc, r3
   1b9b0:	add	r3, r3, #556	; 0x22c
   1b9b4:	add	r0, pc, r0
   1b9b8:	mov	r1, #5
   1b9bc:	add	r2, pc, r2
   1b9c0:	bl	6b60 <vcos_log_impl@plt>
   1b9c4:	b	1b738 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x60>
   1b9c8:	ldr	r3, [sl]
   1b9cc:	cmp	r3, #1
   1b9d0:	bls	1ba30 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x358>
   1b9d4:	ldr	r3, [pc, #1188]	; 1be80 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7a8>
   1b9d8:	cmp	r5, #0
   1b9dc:	add	r3, pc, r3
   1b9e0:	beq	1ba08 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x330>
   1b9e4:	cmp	r5, #1
   1b9e8:	beq	1bc48 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x570>
   1b9ec:	cmp	r5, #2
   1b9f0:	beq	1bc54 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x57c>
   1b9f4:	ldr	r3, [pc, #1160]	; 1be84 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7ac>
   1b9f8:	cmp	r5, #4
   1b9fc:	add	r3, pc, r3
   1ba00:	ldrne	r3, [pc, #1152]	; 1be88 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7b0>
   1ba04:	addne	r3, pc, r3
   1ba08:	ldr	r2, [pc, #1148]	; 1be8c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7b4>
   1ba0c:	ldr	r0, [pc, #1148]	; 1be90 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7b8>
   1ba10:	add	r2, pc, r2
   1ba14:	add	r2, r2, #556	; 0x22c
   1ba18:	str	r2, [sp]
   1ba1c:	ldr	r2, [pc, #1136]	; 1be94 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7bc>
   1ba20:	add	r0, pc, r0
   1ba24:	mov	r1, #2
   1ba28:	add	r2, pc, r2
   1ba2c:	bl	6b60 <vcos_log_impl@plt>
   1ba30:	ldr	r3, [pc, #1120]	; 1be98 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7c0>
   1ba34:	add	r3, pc, r3
   1ba38:	ldr	r0, [r3, #24]
   1ba3c:	bl	6014 <vchi_service_release@plt>
   1ba40:	ldr	r5, [r4]
   1ba44:	cmp	r5, #0
   1ba48:	beq	1b768 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x90>
   1ba4c:	b	1b758 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x80>
   1ba50:	ldr	r3, [r4, #8]
   1ba54:	mov	r0, r7
   1ba58:	cmp	r6, r3
   1ba5c:	movcc	r5, r6
   1ba60:	movcs	r5, r3
   1ba64:	add	r2, r5, r5, lsl #2
   1ba68:	ldr	r1, [r4, #12]
   1ba6c:	lsl	r2, r2, #2
   1ba70:	bl	66f8 <memcpy@plt>
   1ba74:	b	1b768 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x90>
   1ba78:	ldr	r2, [r4, #4]
   1ba7c:	cmp	r3, r2
   1ba80:	bls	1bc24 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x54c>
   1ba84:	ldr	r0, [r4, #12]
   1ba88:	str	r1, [sp, #12]
   1ba8c:	cmp	r0, #0
   1ba90:	str	r3, [r4, #4]
   1ba94:	beq	1baa8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x3d0>
   1ba98:	bl	5eac <vcos_generic_mem_free@plt>
   1ba9c:	ldr	r1, [sp, #12]
   1baa0:	ldr	r3, [r4, #4]
   1baa4:	str	r1, [r4, #12]
   1baa8:	ldr	r2, [pc, #1004]	; 1be9c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7c4>
   1baac:	mov	r0, r3
   1bab0:	mov	r1, #20
   1bab4:	add	r2, pc, r2
   1bab8:	bl	6830 <vcos_generic_mem_calloc@plt>
   1babc:	cmp	r0, #0
   1bac0:	str	r0, [r4, #12]
   1bac4:	beq	1bbb4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x4dc>
   1bac8:	mov	r3, #12
   1bacc:	ldr	ip, [sp, #28]
   1bad0:	str	r3, [sp, #4]
   1bad4:	str	r9, [sp]
   1bad8:	mov	r1, r8
   1badc:	mov	r2, fp
   1bae0:	mov	r0, #24
   1bae4:	mov	r3, #8
   1bae8:	str	ip, [sp, #24]
   1baec:	bl	18c08 <vc_gpuserv_execute_code@@Base+0x45c>
   1baf0:	cmp	r0, #0
   1baf4:	bne	1bb44 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x46c>
   1baf8:	ldr	r8, [sp, #28]
   1bafc:	cmp	r8, #0
   1bb00:	str	r8, [r4, #8]
   1bb04:	bne	1bc6c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x594>
   1bb08:	ldr	r0, [pc, #912]	; 1bea0 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7c8>
   1bb0c:	add	r0, pc, r0
   1bb10:	ldr	r3, [r0]
   1bb14:	cmp	r3, #1
   1bb18:	bls	1b8f4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x21c>
   1bb1c:	ldr	r2, [pc, #896]	; 1bea4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7cc>
   1bb20:	ldr	r3, [sp, #24]
   1bb24:	add	r2, pc, r2
   1bb28:	add	r2, r2, #556	; 0x22c
   1bb2c:	str	r2, [sp]
   1bb30:	ldr	r2, [pc, #880]	; 1bea8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7d0>
   1bb34:	mov	r1, #2
   1bb38:	add	r2, pc, r2
   1bb3c:	bl	6b60 <vcos_log_impl@plt>
   1bb40:	b	1b8f4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x21c>
   1bb44:	ldr	r3, [pc, #864]	; 1beac <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7d4>
   1bb48:	add	r3, pc, r3
   1bb4c:	ldr	r3, [r3]
   1bb50:	cmp	r3, #1
   1bb54:	bls	1ba30 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x358>
   1bb58:	ldr	r3, [pc, #848]	; 1beb0 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7d8>
   1bb5c:	cmp	r5, #0
   1bb60:	add	r3, pc, r3
   1bb64:	beq	1bb88 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x4b0>
   1bb68:	cmp	r5, #1
   1bb6c:	beq	1bd60 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x688>
   1bb70:	cmp	r5, #2
   1bb74:	beq	1bdc0 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x6e8>
   1bb78:	ldr	r3, [pc, #820]	; 1beb4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7dc>
   1bb7c:	cmp	r5, #4
   1bb80:	add	r3, pc, r3
   1bb84:	beq	1bdd8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x700>
   1bb88:	ldr	r2, [pc, #808]	; 1beb8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7e0>
   1bb8c:	ldr	r0, [pc, #808]	; 1bebc <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7e4>
   1bb90:	add	r2, pc, r2
   1bb94:	add	r2, r2, #556	; 0x22c
   1bb98:	str	r2, [sp]
   1bb9c:	ldr	r2, [pc, #796]	; 1bec0 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7e8>
   1bba0:	add	r0, pc, r0
   1bba4:	mov	r1, #2
   1bba8:	add	r2, pc, r2
   1bbac:	bl	6b60 <vcos_log_impl@plt>
   1bbb0:	b	1ba30 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x358>
   1bbb4:	ldr	r3, [pc, #776]	; 1bec4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7ec>
   1bbb8:	add	r3, pc, r3
   1bbbc:	ldr	r3, [r3]
   1bbc0:	cmp	r3, #1
   1bbc4:	bls	1b8f4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x21c>
   1bbc8:	ldr	r3, [pc, #760]	; 1bec8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7f0>
   1bbcc:	cmp	r5, #0
   1bbd0:	add	r3, pc, r3
   1bbd4:	beq	1bbf8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x520>
   1bbd8:	cmp	r5, #1
   1bbdc:	beq	1bd94 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x6bc>
   1bbe0:	cmp	r5, #2
   1bbe4:	beq	1bdcc <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x6f4>
   1bbe8:	cmp	r5, #4
   1bbec:	beq	1bdf0 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x718>
   1bbf0:	ldr	r3, [pc, #724]	; 1becc <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7f4>
   1bbf4:	add	r3, pc, r3
   1bbf8:	ldr	r2, [pc, #720]	; 1bed0 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7f8>
   1bbfc:	ldr	r0, [pc, #720]	; 1bed4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x7fc>
   1bc00:	add	r2, pc, r2
   1bc04:	add	r2, r2, #556	; 0x22c
   1bc08:	str	r2, [sp]
   1bc0c:	ldr	r2, [pc, #708]	; 1bed8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x800>
   1bc10:	add	r0, pc, r0
   1bc14:	mov	r1, #2
   1bc18:	add	r2, pc, r2
   1bc1c:	bl	6b60 <vcos_log_impl@plt>
   1bc20:	b	1b8f4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x21c>
   1bc24:	add	r2, r2, r2, lsl #2
   1bc28:	lsl	r2, r2, #2
   1bc2c:	ldr	r0, [r4, #12]
   1bc30:	bl	62e4 <memset@plt>
   1bc34:	ldr	r3, [r4, #12]
   1bc38:	cmp	r3, #0
   1bc3c:	bne	1bac8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x3f0>
   1bc40:	ldr	r3, [r4, #4]
   1bc44:	b	1baa8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x3d0>
   1bc48:	ldr	r3, [pc, #652]	; 1bedc <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x804>
   1bc4c:	add	r3, pc, r3
   1bc50:	b	1ba08 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x330>
   1bc54:	ldr	r3, [pc, #644]	; 1bee0 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x808>
   1bc58:	add	r3, pc, r3
   1bc5c:	b	1ba08 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x330>
   1bc60:	ldr	r1, [pc, #636]	; 1bee4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x80c>
   1bc64:	add	r1, pc, r1
   1bc68:	b	1b94c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x274>
   1bc6c:	ldr	r0, [pc, #628]	; 1bee8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x810>
   1bc70:	ldr	r9, [r4, #12]
   1bc74:	add	r0, pc, r0
   1bc78:	ldr	r3, [r0]
   1bc7c:	cmp	r3, #4
   1bc80:	bhi	1bda0 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x6c8>
   1bc84:	cmp	r9, #0
   1bc88:	beq	1bd6c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x694>
   1bc8c:	mov	ip, #0
   1bc90:	ldr	r3, [pc, #596]	; 1beec <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x814>
   1bc94:	add	r2, r8, r8, lsl #2
   1bc98:	add	r3, pc, r3
   1bc9c:	ldr	r0, [r3, #24]
   1bca0:	lsl	r2, r2, #2
   1bca4:	mov	r1, r9
   1bca8:	str	ip, [sp]
   1bcac:	mov	r3, #1
   1bcb0:	bl	6248 <vchi_bulk_queue_receive@plt>
   1bcb4:	cmp	r0, #0
   1bcb8:	beq	1b8f4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x21c>
   1bcbc:	ldr	r3, [pc, #556]	; 1bef0 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x818>
   1bcc0:	add	r3, pc, r3
   1bcc4:	ldr	r3, [r3]
   1bcc8:	cmp	r3, #1
   1bccc:	bls	1ba30 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x358>
   1bcd0:	cmp	r5, #0
   1bcd4:	beq	1bde4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x70c>
   1bcd8:	cmp	r5, #1
   1bcdc:	beq	1bdfc <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x724>
   1bce0:	cmp	r5, #2
   1bce4:	beq	1be08 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x730>
   1bce8:	cmp	r5, #4
   1bcec:	beq	1be14 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x73c>
   1bcf0:	ldr	r3, [pc, #508]	; 1bef4 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x81c>
   1bcf4:	add	r3, pc, r3
   1bcf8:	ldr	r2, [pc, #504]	; 1bef8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x820>
   1bcfc:	ldr	r0, [pc, #504]	; 1befc <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x824>
   1bd00:	add	r2, pc, r2
   1bd04:	add	r2, r2, #556	; 0x22c
   1bd08:	str	r2, [sp]
   1bd0c:	ldr	r2, [pc, #492]	; 1bf00 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x828>
   1bd10:	add	r0, pc, r0
   1bd14:	mov	r1, #2
   1bd18:	add	r2, pc, r2
   1bd1c:	bl	6b60 <vcos_log_impl@plt>
   1bd20:	b	1ba30 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x358>
   1bd24:	ldr	r1, [pc, #472]	; 1bf04 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x82c>
   1bd28:	add	r1, pc, r1
   1bd2c:	b	1b94c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x274>
   1bd30:	ldr	r1, [pc, #464]	; 1bf08 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x830>
   1bd34:	add	r1, pc, r1
   1bd38:	b	1b94c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x274>
   1bd3c:	ldr	r3, [pc, #456]	; 1bf0c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x834>
   1bd40:	add	r3, pc, r3
   1bd44:	b	1b8cc <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x1f4>
   1bd48:	ldr	r3, [pc, #448]	; 1bf10 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x838>
   1bd4c:	add	r3, pc, r3
   1bd50:	b	1b8cc <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x1f4>
   1bd54:	ldr	r3, [pc, #440]	; 1bf14 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x83c>
   1bd58:	add	r3, pc, r3
   1bd5c:	b	1b8cc <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x1f4>
   1bd60:	ldr	r3, [pc, #432]	; 1bf18 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x840>
   1bd64:	add	r3, pc, r3
   1bd68:	b	1bb88 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x4b0>
   1bd6c:	ldr	r0, [pc, #424]	; 1bf1c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x844>
   1bd70:	add	r0, pc, r0
   1bd74:	ldr	r3, [r0]
   1bd78:	cmp	r3, #1
   1bd7c:	bls	1bcbc <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x5e4>
   1bd80:	ldr	r2, [pc, #408]	; 1bf20 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x848>
   1bd84:	mov	r1, #2
   1bd88:	add	r2, pc, r2
   1bd8c:	bl	6b60 <vcos_log_impl@plt>
   1bd90:	b	1bcbc <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x5e4>
   1bd94:	ldr	r3, [pc, #392]	; 1bf24 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x84c>
   1bd98:	add	r3, pc, r3
   1bd9c:	b	1bbf8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x520>
   1bda0:	ldr	r3, [pc, #384]	; 1bf28 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x850>
   1bda4:	ldr	r2, [pc, #384]	; 1bf2c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x854>
   1bda8:	add	r3, pc, r3
   1bdac:	add	r3, r3, #596	; 0x254
   1bdb0:	mov	r1, #5
   1bdb4:	add	r2, pc, r2
   1bdb8:	bl	6b60 <vcos_log_impl@plt>
   1bdbc:	b	1bc84 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x5ac>
   1bdc0:	ldr	r3, [pc, #360]	; 1bf30 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x858>
   1bdc4:	add	r3, pc, r3
   1bdc8:	b	1bb88 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x4b0>
   1bdcc:	ldr	r3, [pc, #352]	; 1bf34 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x85c>
   1bdd0:	add	r3, pc, r3
   1bdd4:	b	1bbf8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x520>
   1bdd8:	ldr	r3, [pc, #344]	; 1bf38 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x860>
   1bddc:	add	r3, pc, r3
   1bde0:	b	1bb88 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x4b0>
   1bde4:	ldr	r3, [pc, #336]	; 1bf3c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x864>
   1bde8:	add	r3, pc, r3
   1bdec:	b	1bcf8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x620>
   1bdf0:	ldr	r3, [pc, #328]	; 1bf40 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x868>
   1bdf4:	add	r3, pc, r3
   1bdf8:	b	1bbf8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x520>
   1bdfc:	ldr	r3, [pc, #320]	; 1bf44 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x86c>
   1be00:	add	r3, pc, r3
   1be04:	b	1bcf8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x620>
   1be08:	ldr	r3, [pc, #312]	; 1bf48 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x870>
   1be0c:	add	r3, pc, r3
   1be10:	b	1bcf8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x620>
   1be14:	ldr	r3, [pc, #304]	; 1bf4c <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x874>
   1be18:	add	r3, pc, r3
   1be1c:	b	1bcf8 <vc_tv_hdmi_get_supported_modes_new_id@@Base+0x620>
   1be20:	muleq	r1, r0, fp
   1be24:	andeq	sp, r1, r4, asr fp
   1be28:	andeq	sp, r1, ip, ror #21
   1be2c:	andeq	fp, r0, r0, lsr r0
   1be30:	muleq	r1, r4, sl
   1be34:	andeq	fp, r0, ip, ror r6
   1be38:	strdeq	sl, [r0], -r8
   1be3c:	andeq	fp, r0, r4, ror #12
   1be40:	andeq	sp, r1, r8, lsr #20
   1be44:	andeq	fp, r0, r8, lsr #11
   1be48:	muleq	r0, r0, r5
   1be4c:	andeq	sl, r0, ip, lsr #30
   1be50:	muleq	r1, r4, r9
   1be54:	andeq	fp, r0, r8, ror #13
   1be58:	andeq	sp, r1, r0, lsl #19
   1be5c:	andeq	fp, r0, ip, lsr #10
   1be60:	andeq	fp, r0, r0, lsl r5
   1be64:	andeq	sl, r0, r4, lsr #29
   1be68:	andeq	sp, r1, r0, lsl r9
   1be6c:	ldrdeq	fp, [r0], -r0
   1be70:	strdeq	sp, [r1], -r4
   1be74:	andeq	sl, r0, r4, asr lr
   1be78:	andeq	sp, r1, r4, asr #17
   1be7c:	andeq	fp, r0, r8, asr #9
   1be80:	andeq	fp, r0, r0, ror r4
   1be84:	andeq	fp, r0, r4, ror #8
   1be88:	andeq	fp, r0, r4, asr r4
   1be8c:	strdeq	sl, [r0], -r0
   1be90:	andeq	sp, r1, r8, asr r8
   1be94:	andeq	fp, r0, r0, ror #11
   1be98:	andeq	sp, r1, r4, asr #16
   1be9c:	strdeq	fp, [r0], -r0
   1bea0:	andeq	sp, r1, ip, ror #14
   1bea4:	ldrdeq	sl, [r0], -ip
   1bea8:	ldrdeq	fp, [r0], -r8
   1beac:	andeq	sp, r1, r0, lsr r7
   1beb0:	andeq	fp, r0, ip, ror #5
   1beb4:	ldrdeq	fp, [r0], -r8
   1beb8:	andeq	sl, r0, r0, ror ip
   1bebc:	ldrdeq	sp, [r1], -r8
   1bec0:	ldrdeq	fp, [r0], -r8
   1bec4:	andeq	sp, r1, r0, asr #13
   1bec8:	andeq	fp, r0, ip, ror r2
   1becc:	andeq	fp, r0, r4, ror #4
   1bed0:	andeq	sl, r0, r0, lsl #24
   1bed4:	andeq	sp, r1, r8, ror #12
   1bed8:	andeq	fp, r0, ip, lsl #7
   1bedc:	strdeq	fp, [r0], -ip
   1bee0:	strdeq	fp, [r0], -ip
   1bee4:	andeq	fp, r0, r4, ror #3
   1bee8:	andeq	sp, r1, r4, lsl #12
   1beec:	andeq	sp, r1, r0, ror #11
   1bef0:			; <UNDEFINED> instruction: 0x0001d5b8
   1bef4:	andeq	fp, r0, r4, ror #2
   1bef8:	andeq	sl, r0, r0, lsl #22
   1befc:	andeq	sp, r1, r8, ror #10
   1bf00:	ldrdeq	fp, [r0], -r4
   1bf04:	andeq	fp, r0, ip, lsr #2
   1bf08:	andeq	fp, r0, ip, lsr #2
   1bf0c:	andeq	fp, r0, r8, lsl #2
   1bf10:	andeq	fp, r0, r8, lsl #2
   1bf14:	andeq	fp, r0, r8, lsl #2
   1bf18:	andeq	fp, r0, r4, ror #1
   1bf1c:	andeq	sp, r1, r8, lsl #10
   1bf20:	andeq	fp, r0, ip, lsr #2
   1bf24:	strheq	fp, [r0], -r0
   1bf28:	andeq	sl, r0, r8, asr sl
   1bf2c:	andeq	fp, r0, r8, asr #1
   1bf30:	muleq	r0, r0, r0
   1bf34:	andeq	fp, r0, r4, lsl #1
   1bf38:	andeq	fp, r0, r4, lsl #1
   1bf3c:	andeq	fp, r0, r4, rrx
   1bf40:	andeq	fp, r0, ip, rrx
   1bf44:	andeq	fp, r0, r8, asr #32
   1bf48:	andeq	fp, r0, r8, asr #32
   1bf4c:	andeq	fp, r0, r8, asr #32

0001bf50 <vc_tv_hdmi_get_supported_modes_new@@Base>:
   1bf50:	push	{r4, r5, r6, lr}
   1bf54:	mov	r6, r0
   1bf58:	mov	r5, r1
   1bf5c:	mov	r4, r2
   1bf60:	sub	sp, sp, #8
   1bf64:	ldr	ip, [pc, #40]	; 1bf94 <vc_tv_hdmi_get_supported_modes_new@@Base+0x44>
   1bf68:	ldr	lr, [sp, #24]
   1bf6c:	add	ip, pc, ip
   1bf70:	ldr	r0, [ip, #3592]	; 0xe08
   1bf74:	mov	r1, r6
   1bf78:	str	r3, [sp]
   1bf7c:	mov	r2, r5
   1bf80:	mov	r3, r4
   1bf84:	str	lr, [sp, #4]
   1bf88:	bl	1b6d8 <vc_tv_hdmi_get_supported_modes_new_id@@Base>
   1bf8c:	add	sp, sp, #8
   1bf90:	pop	{r4, r5, r6, pc}
   1bf94:	andeq	sp, r1, ip, lsl #6

0001bf98 <vc_tv_hdmi_mode_supported_id@@Base>:
   1bf98:	push	{r4, r5, r6, lr}
   1bf9c:	ldr	r5, [pc, #552]	; 1c1cc <vc_tv_hdmi_mode_supported_id@@Base+0x234>
   1bfa0:	sub	sp, sp, #64	; 0x40
   1bfa4:	add	r5, pc, r5
   1bfa8:	ldr	r3, [r5]
   1bfac:	mov	r4, r0
   1bfb0:	cmp	r3, #4
   1bfb4:	str	r1, [sp, #32]
   1bfb8:	str	r2, [sp, #36]	; 0x24
   1bfbc:	bhi	1c108 <vc_tv_hdmi_mode_supported_id@@Base+0x170>
   1bfc0:	mov	r3, #4
   1bfc4:	mov	r2, #7
   1bfc8:	str	r3, [sp, #44]	; 0x2c
   1bfcc:	add	r3, sp, #20
   1bfd0:	str	r0, [sp, #24]
   1bfd4:	str	r2, [sp, #20]
   1bfd8:	str	r3, [sp, #40]	; 0x28
   1bfdc:	cmp	r4, #65536	; 0x10000
   1bfe0:	beq	1c190 <vc_tv_hdmi_mode_supported_id@@Base+0x1f8>
   1bfe4:	ldr	r3, [sp, #20]
   1bfe8:	mov	r2, #4
   1bfec:	orr	r3, r3, #-2147483648	; 0x80000000
   1bff0:	str	r3, [sp, #20]
   1bff4:	add	r3, sp, #24
   1bff8:	str	r3, [sp, #48]	; 0x30
   1bffc:	mov	r6, #3
   1c000:	mov	r3, #2
   1c004:	str	r2, [sp, #52]	; 0x34
   1c008:	mov	r2, #8
   1c00c:	mvn	r0, #0
   1c010:	ldr	r4, [pc, #440]	; 1c1d0 <vc_tv_hdmi_mode_supported_id@@Base+0x238>
   1c014:	add	r1, sp, #64	; 0x40
   1c018:	add	r4, pc, r4
   1c01c:	add	r3, r1, r3, lsl #3
   1c020:	ldr	r1, [r4, #3208]	; 0xc88
   1c024:	str	r2, [r3, #-20]	; 0xffffffec
   1c028:	cmp	r1, #0
   1c02c:	add	r1, sp, #32
   1c030:	str	r1, [r3, #-24]	; 0xffffffe8
   1c034:	str	r0, [sp, #28]
   1c038:	beq	1c100 <vc_tv_hdmi_mode_supported_id@@Base+0x168>
   1c03c:	add	r5, r4, #24
   1c040:	add	r5, r5, #3120	; 0xc30
   1c044:	mov	r0, r5
   1c048:	bl	5ffc <pthread_mutex_lock@plt>
   1c04c:	ldr	r3, [r4, #3208]	; 0xc88
   1c050:	cmp	r3, #0
   1c054:	beq	1c1bc <vc_tv_hdmi_mode_supported_id@@Base+0x224>
   1c058:	ldr	r0, [r4, #24]
   1c05c:	bl	6134 <vchi_service_use@plt>
   1c060:	mov	r3, #0
   1c064:	ldr	r0, [r4, #24]
   1c068:	mov	r2, r6
   1c06c:	str	r3, [sp]
   1c070:	add	r1, sp, #40	; 0x28
   1c074:	mov	r3, #4
   1c078:	bl	5cc0 <vchi_msg_queuev@plt>
   1c07c:	subs	r5, r0, #0
   1c080:	beq	1c19c <vc_tv_hdmi_mode_supported_id@@Base+0x204>
   1c084:	ldr	r3, [r4]
   1c088:	cmp	r3, #1
   1c08c:	bls	1c0c8 <vc_tv_hdmi_mode_supported_id@@Base+0x130>
   1c090:	ldr	r3, [sp, #20]
   1c094:	cmp	r3, #26
   1c098:	bhi	1c1b0 <vc_tv_hdmi_mode_supported_id@@Base+0x218>
   1c09c:	ldr	r2, [pc, #304]	; 1c1d4 <vc_tv_hdmi_mode_supported_id@@Base+0x23c>
   1c0a0:	add	r2, pc, r2
   1c0a4:	ldr	r3, [r2, r3, lsl #2]
   1c0a8:	mov	r2, #8
   1c0ac:	ldr	r0, [pc, #292]	; 1c1d8 <vc_tv_hdmi_mode_supported_id@@Base+0x240>
   1c0b0:	stm	sp, {r2, r5}
   1c0b4:	ldr	r2, [pc, #288]	; 1c1dc <vc_tv_hdmi_mode_supported_id@@Base+0x244>
   1c0b8:	add	r0, pc, r0
   1c0bc:	mov	r1, #2
   1c0c0:	add	r2, pc, r2
   1c0c4:	bl	6b60 <vcos_log_impl@plt>
   1c0c8:	str	r5, [sp, #28]
   1c0cc:	ldr	r3, [pc, #268]	; 1c1e0 <vc_tv_hdmi_mode_supported_id@@Base+0x248>
   1c0d0:	add	r3, pc, r3
   1c0d4:	ldr	r2, [r3, #3208]	; 0xc88
   1c0d8:	cmp	r2, #0
   1c0dc:	beq	1c0e8 <vc_tv_hdmi_mode_supported_id@@Base+0x150>
   1c0e0:	ldr	r0, [r3, #24]
   1c0e4:	bl	6014 <vchi_service_release@plt>
   1c0e8:	ldr	r0, [pc, #244]	; 1c1e4 <vc_tv_hdmi_mode_supported_id@@Base+0x24c>
   1c0ec:	add	r0, pc, r0
   1c0f0:	add	r0, r0, #24
   1c0f4:	add	r0, r0, #3120	; 0xc30
   1c0f8:	bl	6b84 <pthread_mutex_unlock@plt>
   1c0fc:	ldr	r0, [sp, #28]
   1c100:	add	sp, sp, #64	; 0x40
   1c104:	pop	{r4, r5, r6, pc}
   1c108:	ldr	r6, [pc, #216]	; 1c1e8 <vc_tv_hdmi_mode_supported_id@@Base+0x250>
   1c10c:	ldr	r2, [pc, #216]	; 1c1ec <vc_tv_hdmi_mode_supported_id@@Base+0x254>
   1c110:	add	r6, pc, r6
   1c114:	add	r3, r6, #628	; 0x274
   1c118:	mov	r1, #5
   1c11c:	add	r2, pc, r2
   1c120:	mov	r0, r5
   1c124:	bl	6b60 <vcos_log_impl@plt>
   1c128:	mov	r2, #7
   1c12c:	mov	r3, #4
   1c130:	ldr	r1, [r5]
   1c134:	str	r2, [sp, #20]
   1c138:	cmp	r1, r3
   1c13c:	add	r2, sp, #20
   1c140:	str	r4, [sp, #24]
   1c144:	str	r3, [sp, #44]	; 0x2c
   1c148:	str	r2, [sp, #40]	; 0x28
   1c14c:	bls	1bfdc <vc_tv_hdmi_mode_supported_id@@Base+0x44>
   1c150:	mov	ip, #8
   1c154:	ldr	r2, [pc, #148]	; 1c1f0 <vc_tv_hdmi_mode_supported_id@@Base+0x258>
   1c158:	ldr	r1, [pc, #148]	; 1c1f4 <vc_tv_hdmi_mode_supported_id@@Base+0x25c>
   1c15c:	add	r2, pc, r2
   1c160:	str	r2, [sp, #8]
   1c164:	ldr	r2, [pc, #140]	; 1c1f8 <vc_tv_hdmi_mode_supported_id@@Base+0x260>
   1c168:	add	r1, pc, r1
   1c16c:	stm	sp, {r1, ip}
   1c170:	mov	r0, r5
   1c174:	add	r3, r6, #304	; 0x130
   1c178:	mov	r1, #5
   1c17c:	add	r2, pc, r2
   1c180:	bl	6b60 <vcos_log_impl@plt>
   1c184:	ldr	r4, [sp, #24]
   1c188:	cmp	r4, #65536	; 0x10000
   1c18c:	bne	1bfe4 <vc_tv_hdmi_mode_supported_id@@Base+0x4c>
   1c190:	mov	r6, #2
   1c194:	mov	r3, #1
   1c198:	b	1c008 <vc_tv_hdmi_mode_supported_id@@Base+0x70>
   1c19c:	mov	r2, r5
   1c1a0:	add	r0, sp, #28
   1c1a4:	mov	r1, #4
   1c1a8:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1c1ac:	b	1c0cc <vc_tv_hdmi_mode_supported_id@@Base+0x134>
   1c1b0:	ldr	r3, [pc, #68]	; 1c1fc <vc_tv_hdmi_mode_supported_id@@Base+0x264>
   1c1b4:	add	r3, pc, r3
   1c1b8:	b	1c0a8 <vc_tv_hdmi_mode_supported_id@@Base+0x110>
   1c1bc:	mov	r0, r5
   1c1c0:	bl	6b84 <pthread_mutex_unlock@plt>
   1c1c4:	ldr	r0, [sp, #28]
   1c1c8:	b	1c100 <vc_tv_hdmi_mode_supported_id@@Base+0x168>
   1c1cc:	ldrdeq	sp, [r1], -r4
   1c1d0:	andeq	sp, r1, r0, ror #4
   1c1d4:	andeq	ip, r1, r4, lsr #4
   1c1d8:	andeq	sp, r1, r0, asr #3
   1c1dc:	andeq	sl, r0, ip, ror #25
   1c1e0:	andeq	sp, r1, r8, lsr #3
   1c1e4:	andeq	sp, r1, ip, lsl #3
   1c1e8:	strdeq	sl, [r0], -r0
   1c1ec:	andeq	sl, r0, r0, ror #26
   1c1f0:	andeq	sl, r0, r4, asr #24
   1c1f4:	strdeq	sl, [r0], -r8
   1c1f8:	andeq	sl, r0, ip, ror #23
   1c1fc:	andeq	sl, r0, r8, lsl #22

0001c200 <vc_tv_hdmi_mode_supported@@Base>:
   1c200:	ldr	r3, [pc, #16]	; 1c218 <vc_tv_hdmi_mode_supported@@Base+0x18>
   1c204:	mov	r2, r1
   1c208:	add	r3, pc, r3
   1c20c:	mov	r1, r0
   1c210:	ldr	r0, [r3, #3592]	; 0xe08
   1c214:	b	1bf98 <vc_tv_hdmi_mode_supported_id@@Base>
   1c218:	andeq	sp, r1, r0, ror r0

0001c21c <vc_tv_hdmi_audio_supported_id@@Base>:
   1c21c:	push	{r4, r5, r6, lr}
   1c220:	mov	r5, r2
   1c224:	mov	r4, r3
   1c228:	ldr	r2, [pc, #592]	; 1c480 <vc_tv_hdmi_audio_supported_id@@Base+0x264>
   1c22c:	sub	sp, sp, #72	; 0x48
   1c230:	add	r2, pc, r2
   1c234:	ldr	ip, [r2]
   1c238:	ldr	r3, [sp, #88]	; 0x58
   1c23c:	cmp	ip, #4
   1c240:	str	r5, [sp, #36]	; 0x24
   1c244:	str	r4, [sp, #40]	; 0x28
   1c248:	mov	r6, r0
   1c24c:	str	r1, [sp, #32]
   1c250:	str	r3, [sp, #44]	; 0x2c
   1c254:	bhi	1c424 <vc_tv_hdmi_audio_supported_id@@Base+0x208>
   1c258:	clz	r3, r4
   1c25c:	sub	r5, r5, #1
   1c260:	lsr	r3, r3, #5
   1c264:	cmp	r5, #7
   1c268:	orrhi	r3, r3, #1
   1c26c:	cmp	r3, #0
   1c270:	bne	1c448 <vc_tv_hdmi_audio_supported_id@@Base+0x22c>
   1c274:	mov	r3, #4
   1c278:	mov	r2, #8
   1c27c:	ldr	r0, [pc, #512]	; 1c484 <vc_tv_hdmi_audio_supported_id@@Base+0x268>
   1c280:	str	r3, [sp, #52]	; 0x34
   1c284:	add	r0, pc, r0
   1c288:	ldr	r1, [r0]
   1c28c:	str	r6, [sp, #24]
   1c290:	cmp	r1, r3
   1c294:	add	r3, sp, #20
   1c298:	str	r2, [sp, #20]
   1c29c:	str	r3, [sp, #48]	; 0x30
   1c2a0:	bhi	1c3d0 <vc_tv_hdmi_audio_supported_id@@Base+0x1b4>
   1c2a4:	cmp	r6, #65536	; 0x10000
   1c2a8:	beq	1c418 <vc_tv_hdmi_audio_supported_id@@Base+0x1fc>
   1c2ac:	ldr	r3, [sp, #20]
   1c2b0:	mov	r2, #4
   1c2b4:	orr	r3, r3, #-2147483648	; 0x80000000
   1c2b8:	str	r3, [sp, #20]
   1c2bc:	add	r3, sp, #24
   1c2c0:	str	r3, [sp, #56]	; 0x38
   1c2c4:	mov	r6, #3
   1c2c8:	mov	r3, #2
   1c2cc:	str	r2, [sp, #60]	; 0x3c
   1c2d0:	mov	r2, #16
   1c2d4:	mvn	r0, #0
   1c2d8:	ldr	r4, [pc, #424]	; 1c488 <vc_tv_hdmi_audio_supported_id@@Base+0x26c>
   1c2dc:	add	r1, sp, #72	; 0x48
   1c2e0:	add	r4, pc, r4
   1c2e4:	add	r3, r1, r3, lsl #3
   1c2e8:	ldr	r1, [r4, #3208]	; 0xc88
   1c2ec:	str	r2, [r3, #-20]	; 0xffffffec
   1c2f0:	cmp	r1, #0
   1c2f4:	add	r1, sp, #32
   1c2f8:	str	r1, [r3, #-24]	; 0xffffffe8
   1c2fc:	str	r0, [sp, #28]
   1c300:	beq	1c3c8 <vc_tv_hdmi_audio_supported_id@@Base+0x1ac>
   1c304:	add	r5, r4, #24
   1c308:	add	r5, r5, #3120	; 0xc30
   1c30c:	mov	r0, r5
   1c310:	bl	5ffc <pthread_mutex_lock@plt>
   1c314:	ldr	r3, [r4, #3208]	; 0xc88
   1c318:	cmp	r3, #0
   1c31c:	beq	1c470 <vc_tv_hdmi_audio_supported_id@@Base+0x254>
   1c320:	ldr	r0, [r4, #24]
   1c324:	bl	6134 <vchi_service_use@plt>
   1c328:	mov	r3, #0
   1c32c:	ldr	r0, [r4, #24]
   1c330:	mov	r2, r6
   1c334:	str	r3, [sp]
   1c338:	add	r1, sp, #48	; 0x30
   1c33c:	mov	r3, #4
   1c340:	bl	5cc0 <vchi_msg_queuev@plt>
   1c344:	subs	r5, r0, #0
   1c348:	beq	1c450 <vc_tv_hdmi_audio_supported_id@@Base+0x234>
   1c34c:	ldr	r3, [r4]
   1c350:	cmp	r3, #1
   1c354:	bls	1c390 <vc_tv_hdmi_audio_supported_id@@Base+0x174>
   1c358:	ldr	r3, [sp, #20]
   1c35c:	cmp	r3, #26
   1c360:	bhi	1c464 <vc_tv_hdmi_audio_supported_id@@Base+0x248>
   1c364:	ldr	r2, [pc, #288]	; 1c48c <vc_tv_hdmi_audio_supported_id@@Base+0x270>
   1c368:	add	r2, pc, r2
   1c36c:	ldr	r3, [r2, r3, lsl #2]
   1c370:	mov	r2, #16
   1c374:	ldr	r0, [pc, #276]	; 1c490 <vc_tv_hdmi_audio_supported_id@@Base+0x274>
   1c378:	stm	sp, {r2, r5}
   1c37c:	ldr	r2, [pc, #272]	; 1c494 <vc_tv_hdmi_audio_supported_id@@Base+0x278>
   1c380:	add	r0, pc, r0
   1c384:	mov	r1, #2
   1c388:	add	r2, pc, r2
   1c38c:	bl	6b60 <vcos_log_impl@plt>
   1c390:	str	r5, [sp, #28]
   1c394:	ldr	r3, [pc, #252]	; 1c498 <vc_tv_hdmi_audio_supported_id@@Base+0x27c>
   1c398:	add	r3, pc, r3
   1c39c:	ldr	r2, [r3, #3208]	; 0xc88
   1c3a0:	cmp	r2, #0
   1c3a4:	beq	1c3b0 <vc_tv_hdmi_audio_supported_id@@Base+0x194>
   1c3a8:	ldr	r0, [r3, #24]
   1c3ac:	bl	6014 <vchi_service_release@plt>
   1c3b0:	ldr	r0, [pc, #228]	; 1c49c <vc_tv_hdmi_audio_supported_id@@Base+0x280>
   1c3b4:	add	r0, pc, r0
   1c3b8:	add	r0, r0, #24
   1c3bc:	add	r0, r0, #3120	; 0xc30
   1c3c0:	bl	6b84 <pthread_mutex_unlock@plt>
   1c3c4:	ldr	r0, [sp, #28]
   1c3c8:	add	sp, sp, #72	; 0x48
   1c3cc:	pop	{r4, r5, r6, pc}
   1c3d0:	mov	ip, #16
   1c3d4:	ldr	r2, [pc, #196]	; 1c4a0 <vc_tv_hdmi_audio_supported_id@@Base+0x284>
   1c3d8:	ldr	r3, [pc, #196]	; 1c4a4 <vc_tv_hdmi_audio_supported_id@@Base+0x288>
   1c3dc:	add	r2, pc, r2
   1c3e0:	ldr	r1, [pc, #192]	; 1c4a8 <vc_tv_hdmi_audio_supported_id@@Base+0x28c>
   1c3e4:	str	r2, [sp, #8]
   1c3e8:	ldr	r2, [pc, #188]	; 1c4ac <vc_tv_hdmi_audio_supported_id@@Base+0x290>
   1c3ec:	add	r1, pc, r1
   1c3f0:	add	r3, pc, r3
   1c3f4:	str	r1, [sp]
   1c3f8:	str	ip, [sp, #4]
   1c3fc:	add	r3, r3, #304	; 0x130
   1c400:	mov	r1, #5
   1c404:	add	r2, pc, r2
   1c408:	bl	6b60 <vcos_log_impl@plt>
   1c40c:	ldr	r6, [sp, #24]
   1c410:	cmp	r6, #65536	; 0x10000
   1c414:	bne	1c2ac <vc_tv_hdmi_audio_supported_id@@Base+0x90>
   1c418:	mov	r6, #2
   1c41c:	mov	r3, #1
   1c420:	b	1c2d0 <vc_tv_hdmi_audio_supported_id@@Base+0xb4>
   1c424:	ldr	r3, [pc, #132]	; 1c4b0 <vc_tv_hdmi_audio_supported_id@@Base+0x294>
   1c428:	mov	r0, r2
   1c42c:	ldr	r2, [pc, #128]	; 1c4b4 <vc_tv_hdmi_audio_supported_id@@Base+0x298>
   1c430:	add	r3, pc, r3
   1c434:	add	r3, r3, #660	; 0x294
   1c438:	mov	r1, #5
   1c43c:	add	r2, pc, r2
   1c440:	bl	6b60 <vcos_log_impl@plt>
   1c444:	b	1c258 <vc_tv_hdmi_audio_supported_id@@Base+0x3c>
   1c448:	mvn	r0, #0
   1c44c:	b	1c3c8 <vc_tv_hdmi_audio_supported_id@@Base+0x1ac>
   1c450:	mov	r2, r5
   1c454:	add	r0, sp, #28
   1c458:	mov	r1, #4
   1c45c:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1c460:	b	1c394 <vc_tv_hdmi_audio_supported_id@@Base+0x178>
   1c464:	ldr	r3, [pc, #76]	; 1c4b8 <vc_tv_hdmi_audio_supported_id@@Base+0x29c>
   1c468:	add	r3, pc, r3
   1c46c:	b	1c370 <vc_tv_hdmi_audio_supported_id@@Base+0x154>
   1c470:	mov	r0, r5
   1c474:	bl	6b84 <pthread_mutex_unlock@plt>
   1c478:	ldr	r0, [sp, #28]
   1c47c:	b	1c3c8 <vc_tv_hdmi_audio_supported_id@@Base+0x1ac>
   1c480:	andeq	sp, r1, r8, asr #32
   1c484:	strdeq	ip, [r1], -r4
   1c488:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1c48c:	andeq	fp, r1, ip, asr pc
   1c490:	strdeq	ip, [r1], -r8
   1c494:	andeq	sl, r0, r4, lsr #20
   1c498:	andeq	ip, r1, r0, ror #29
   1c49c:	andeq	ip, r1, r4, asr #29
   1c4a0:	andeq	sl, r0, r4, asr #19
   1c4a4:	andeq	sl, r0, r0, lsl r4
   1c4a8:	andeq	sl, r0, r8, lsl #25
   1c4ac:	andeq	sl, r0, r4, ror #18
   1c4b0:	ldrdeq	sl, [r0], -r0
   1c4b4:	andeq	sl, r0, r0, asr #20
   1c4b8:	andeq	sl, r0, r4, asr r8

0001c4bc <vc_tv_hdmi_audio_supported@@Base>:
   1c4bc:	push	{r4, lr}
   1c4c0:	mov	lr, r2
   1c4c4:	mov	r4, r1
   1c4c8:	ldr	ip, [pc, #36]	; 1c4f4 <vc_tv_hdmi_audio_supported@@Base+0x38>
   1c4cc:	sub	sp, sp, #8
   1c4d0:	add	ip, pc, ip
   1c4d4:	mov	r1, r0
   1c4d8:	mov	r2, r4
   1c4dc:	ldr	r0, [ip, #3592]	; 0xe08
   1c4e0:	str	r3, [sp]
   1c4e4:	mov	r3, lr
   1c4e8:	bl	1c21c <vc_tv_hdmi_audio_supported_id@@Base>
   1c4ec:	add	sp, sp, #8
   1c4f0:	pop	{r4, pc}
   1c4f4:	andeq	ip, r1, r8, lsr #27

0001c4f8 <vc_tv_enable_copyprotect_id@@Base>:
   1c4f8:	push	{r4, r5, r6, lr}
   1c4fc:	ldr	r5, [pc, #552]	; 1c72c <vc_tv_enable_copyprotect_id@@Base+0x234>
   1c500:	sub	sp, sp, #64	; 0x40
   1c504:	add	r5, pc, r5
   1c508:	ldr	r3, [r5]
   1c50c:	mov	r4, r0
   1c510:	cmp	r3, #4
   1c514:	str	r1, [sp, #32]
   1c518:	str	r2, [sp, #36]	; 0x24
   1c51c:	bhi	1c668 <vc_tv_enable_copyprotect_id@@Base+0x170>
   1c520:	mov	r3, #4
   1c524:	mov	r2, #9
   1c528:	str	r3, [sp, #44]	; 0x2c
   1c52c:	add	r3, sp, #20
   1c530:	str	r0, [sp, #24]
   1c534:	str	r2, [sp, #20]
   1c538:	str	r3, [sp, #40]	; 0x28
   1c53c:	cmp	r4, #65536	; 0x10000
   1c540:	beq	1c6f0 <vc_tv_enable_copyprotect_id@@Base+0x1f8>
   1c544:	ldr	r3, [sp, #20]
   1c548:	mov	r2, #4
   1c54c:	orr	r3, r3, #-2147483648	; 0x80000000
   1c550:	str	r3, [sp, #20]
   1c554:	add	r3, sp, #24
   1c558:	str	r3, [sp, #48]	; 0x30
   1c55c:	mov	r6, #3
   1c560:	mov	r3, #2
   1c564:	str	r2, [sp, #52]	; 0x34
   1c568:	mov	r2, #8
   1c56c:	mvn	r0, #0
   1c570:	ldr	r4, [pc, #440]	; 1c730 <vc_tv_enable_copyprotect_id@@Base+0x238>
   1c574:	add	r1, sp, #64	; 0x40
   1c578:	add	r4, pc, r4
   1c57c:	add	r3, r1, r3, lsl #3
   1c580:	ldr	r1, [r4, #3208]	; 0xc88
   1c584:	str	r2, [r3, #-20]	; 0xffffffec
   1c588:	cmp	r1, #0
   1c58c:	add	r1, sp, #32
   1c590:	str	r1, [r3, #-24]	; 0xffffffe8
   1c594:	str	r0, [sp, #28]
   1c598:	beq	1c660 <vc_tv_enable_copyprotect_id@@Base+0x168>
   1c59c:	add	r5, r4, #24
   1c5a0:	add	r5, r5, #3120	; 0xc30
   1c5a4:	mov	r0, r5
   1c5a8:	bl	5ffc <pthread_mutex_lock@plt>
   1c5ac:	ldr	r3, [r4, #3208]	; 0xc88
   1c5b0:	cmp	r3, #0
   1c5b4:	beq	1c71c <vc_tv_enable_copyprotect_id@@Base+0x224>
   1c5b8:	ldr	r0, [r4, #24]
   1c5bc:	bl	6134 <vchi_service_use@plt>
   1c5c0:	mov	r3, #0
   1c5c4:	ldr	r0, [r4, #24]
   1c5c8:	mov	r2, r6
   1c5cc:	str	r3, [sp]
   1c5d0:	add	r1, sp, #40	; 0x28
   1c5d4:	mov	r3, #4
   1c5d8:	bl	5cc0 <vchi_msg_queuev@plt>
   1c5dc:	subs	r5, r0, #0
   1c5e0:	beq	1c6fc <vc_tv_enable_copyprotect_id@@Base+0x204>
   1c5e4:	ldr	r3, [r4]
   1c5e8:	cmp	r3, #1
   1c5ec:	bls	1c628 <vc_tv_enable_copyprotect_id@@Base+0x130>
   1c5f0:	ldr	r3, [sp, #20]
   1c5f4:	cmp	r3, #26
   1c5f8:	bhi	1c710 <vc_tv_enable_copyprotect_id@@Base+0x218>
   1c5fc:	ldr	r2, [pc, #304]	; 1c734 <vc_tv_enable_copyprotect_id@@Base+0x23c>
   1c600:	add	r2, pc, r2
   1c604:	ldr	r3, [r2, r3, lsl #2]
   1c608:	mov	r2, #8
   1c60c:	ldr	r0, [pc, #292]	; 1c738 <vc_tv_enable_copyprotect_id@@Base+0x240>
   1c610:	stm	sp, {r2, r5}
   1c614:	ldr	r2, [pc, #288]	; 1c73c <vc_tv_enable_copyprotect_id@@Base+0x244>
   1c618:	add	r0, pc, r0
   1c61c:	mov	r1, #2
   1c620:	add	r2, pc, r2
   1c624:	bl	6b60 <vcos_log_impl@plt>
   1c628:	str	r5, [sp, #28]
   1c62c:	ldr	r3, [pc, #268]	; 1c740 <vc_tv_enable_copyprotect_id@@Base+0x248>
   1c630:	add	r3, pc, r3
   1c634:	ldr	r2, [r3, #3208]	; 0xc88
   1c638:	cmp	r2, #0
   1c63c:	beq	1c648 <vc_tv_enable_copyprotect_id@@Base+0x150>
   1c640:	ldr	r0, [r3, #24]
   1c644:	bl	6014 <vchi_service_release@plt>
   1c648:	ldr	r0, [pc, #244]	; 1c744 <vc_tv_enable_copyprotect_id@@Base+0x24c>
   1c64c:	add	r0, pc, r0
   1c650:	add	r0, r0, #24
   1c654:	add	r0, r0, #3120	; 0xc30
   1c658:	bl	6b84 <pthread_mutex_unlock@plt>
   1c65c:	ldr	r0, [sp, #28]
   1c660:	add	sp, sp, #64	; 0x40
   1c664:	pop	{r4, r5, r6, pc}
   1c668:	ldr	r6, [pc, #216]	; 1c748 <vc_tv_enable_copyprotect_id@@Base+0x250>
   1c66c:	ldr	r2, [pc, #216]	; 1c74c <vc_tv_enable_copyprotect_id@@Base+0x254>
   1c670:	add	r6, pc, r6
   1c674:	add	r3, r6, #692	; 0x2b4
   1c678:	mov	r1, #5
   1c67c:	add	r2, pc, r2
   1c680:	mov	r0, r5
   1c684:	bl	6b60 <vcos_log_impl@plt>
   1c688:	mov	r2, #9
   1c68c:	mov	r3, #4
   1c690:	ldr	r1, [r5]
   1c694:	str	r2, [sp, #20]
   1c698:	cmp	r1, r3
   1c69c:	add	r2, sp, #20
   1c6a0:	str	r4, [sp, #24]
   1c6a4:	str	r3, [sp, #44]	; 0x2c
   1c6a8:	str	r2, [sp, #40]	; 0x28
   1c6ac:	bls	1c53c <vc_tv_enable_copyprotect_id@@Base+0x44>
   1c6b0:	mov	ip, #8
   1c6b4:	ldr	r2, [pc, #148]	; 1c750 <vc_tv_enable_copyprotect_id@@Base+0x258>
   1c6b8:	ldr	r1, [pc, #148]	; 1c754 <vc_tv_enable_copyprotect_id@@Base+0x25c>
   1c6bc:	add	r2, pc, r2
   1c6c0:	str	r2, [sp, #8]
   1c6c4:	ldr	r2, [pc, #140]	; 1c758 <vc_tv_enable_copyprotect_id@@Base+0x260>
   1c6c8:	add	r1, pc, r1
   1c6cc:	stm	sp, {r1, ip}
   1c6d0:	mov	r0, r5
   1c6d4:	add	r3, r6, #304	; 0x130
   1c6d8:	mov	r1, #5
   1c6dc:	add	r2, pc, r2
   1c6e0:	bl	6b60 <vcos_log_impl@plt>
   1c6e4:	ldr	r4, [sp, #24]
   1c6e8:	cmp	r4, #65536	; 0x10000
   1c6ec:	bne	1c544 <vc_tv_enable_copyprotect_id@@Base+0x4c>
   1c6f0:	mov	r6, #2
   1c6f4:	mov	r3, #1
   1c6f8:	b	1c568 <vc_tv_enable_copyprotect_id@@Base+0x70>
   1c6fc:	mov	r2, r5
   1c700:	add	r0, sp, #28
   1c704:	mov	r1, #4
   1c708:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1c70c:	b	1c62c <vc_tv_enable_copyprotect_id@@Base+0x134>
   1c710:	ldr	r3, [pc, #68]	; 1c75c <vc_tv_enable_copyprotect_id@@Base+0x264>
   1c714:	add	r3, pc, r3
   1c718:	b	1c608 <vc_tv_enable_copyprotect_id@@Base+0x110>
   1c71c:	mov	r0, r5
   1c720:	bl	6b84 <pthread_mutex_unlock@plt>
   1c724:	ldr	r0, [sp, #28]
   1c728:	b	1c660 <vc_tv_enable_copyprotect_id@@Base+0x168>
   1c72c:	andeq	ip, r1, r4, ror sp
   1c730:	andeq	ip, r1, r0, lsl #26
   1c734:	andeq	fp, r1, r4, asr #25
   1c738:	andeq	ip, r1, r0, ror #24
   1c73c:	andeq	sl, r0, ip, lsl #15
   1c740:	andeq	ip, r1, r8, asr #24
   1c744:	andeq	ip, r1, ip, lsr #24
   1c748:	muleq	r0, r0, r1
   1c74c:	andeq	sl, r0, r0, lsl #16
   1c750:	andeq	sl, r0, r4, ror #13
   1c754:	andeq	sl, r0, r0, asr #19
   1c758:	andeq	sl, r0, ip, lsl #13
   1c75c:	andeq	sl, r0, r8, lsr #11

0001c760 <vc_tv_enable_copyprotect@@Base>:
   1c760:	ldr	r3, [pc, #16]	; 1c778 <vc_tv_enable_copyprotect@@Base+0x18>
   1c764:	mov	r2, r1
   1c768:	add	r3, pc, r3
   1c76c:	mov	r1, r0
   1c770:	ldr	r0, [r3, #3592]	; 0xe08
   1c774:	b	1c4f8 <vc_tv_enable_copyprotect_id@@Base>
   1c778:	andeq	ip, r1, r0, lsl fp

0001c77c <vc_tv_disable_copyprotect_id@@Base>:
   1c77c:	push	{r4, r5, r6, r7, lr}
   1c780:	ldr	r5, [pc, #536]	; 1c9a0 <vc_tv_disable_copyprotect_id@@Base+0x224>
   1c784:	sub	sp, sp, #60	; 0x3c
   1c788:	add	r5, pc, r5
   1c78c:	ldr	r3, [r5]
   1c790:	mov	r4, r0
   1c794:	cmp	r3, #4
   1c798:	bhi	1c8dc <vc_tv_disable_copyprotect_id@@Base+0x160>
   1c79c:	mov	r3, #4
   1c7a0:	mov	r2, #10
   1c7a4:	str	r3, [sp, #36]	; 0x24
   1c7a8:	add	r3, sp, #20
   1c7ac:	str	r0, [sp, #24]
   1c7b0:	str	r2, [sp, #20]
   1c7b4:	str	r3, [sp, #32]
   1c7b8:	cmp	r4, #65536	; 0x10000
   1c7bc:	beq	1c964 <vc_tv_disable_copyprotect_id@@Base+0x1e8>
   1c7c0:	ldr	r3, [sp, #20]
   1c7c4:	mov	r2, #4
   1c7c8:	orr	r3, r3, #-2147483648	; 0x80000000
   1c7cc:	str	r3, [sp, #20]
   1c7d0:	add	r3, sp, #24
   1c7d4:	str	r3, [sp, #40]	; 0x28
   1c7d8:	mov	r7, #3
   1c7dc:	mov	r3, #2
   1c7e0:	str	r2, [sp, #44]	; 0x2c
   1c7e4:	mov	r5, #0
   1c7e8:	mvn	r0, #0
   1c7ec:	ldr	r4, [pc, #432]	; 1c9a4 <vc_tv_disable_copyprotect_id@@Base+0x228>
   1c7f0:	add	r2, sp, #56	; 0x38
   1c7f4:	add	r4, pc, r4
   1c7f8:	add	r3, r2, r3, lsl #3
   1c7fc:	ldr	r2, [r4, #3208]	; 0xc88
   1c800:	str	r5, [r3, #-24]	; 0xffffffe8
   1c804:	cmp	r2, r5
   1c808:	str	r5, [r3, #-20]	; 0xffffffec
   1c80c:	str	r0, [sp, #28]
   1c810:	beq	1c8d4 <vc_tv_disable_copyprotect_id@@Base+0x158>
   1c814:	add	r6, r4, #24
   1c818:	add	r6, r6, #3120	; 0xc30
   1c81c:	mov	r0, r6
   1c820:	bl	5ffc <pthread_mutex_lock@plt>
   1c824:	ldr	r3, [r4, #3208]	; 0xc88
   1c828:	cmp	r3, r5
   1c82c:	beq	1c990 <vc_tv_disable_copyprotect_id@@Base+0x214>
   1c830:	ldr	r0, [r4, #24]
   1c834:	bl	6134 <vchi_service_use@plt>
   1c838:	ldr	r0, [r4, #24]
   1c83c:	mov	r2, r7
   1c840:	str	r5, [sp]
   1c844:	add	r1, sp, #32
   1c848:	mov	r3, #4
   1c84c:	bl	5cc0 <vchi_msg_queuev@plt>
   1c850:	subs	r5, r0, #0
   1c854:	beq	1c970 <vc_tv_disable_copyprotect_id@@Base+0x1f4>
   1c858:	ldr	r3, [r4]
   1c85c:	cmp	r3, #1
   1c860:	bls	1c89c <vc_tv_disable_copyprotect_id@@Base+0x120>
   1c864:	ldr	r3, [sp, #20]
   1c868:	cmp	r3, #26
   1c86c:	bhi	1c984 <vc_tv_disable_copyprotect_id@@Base+0x208>
   1c870:	ldr	r2, [pc, #304]	; 1c9a8 <vc_tv_disable_copyprotect_id@@Base+0x22c>
   1c874:	add	r2, pc, r2
   1c878:	ldr	r3, [r2, r3, lsl #2]
   1c87c:	mov	r2, #0
   1c880:	ldr	r0, [pc, #292]	; 1c9ac <vc_tv_disable_copyprotect_id@@Base+0x230>
   1c884:	stm	sp, {r2, r5}
   1c888:	ldr	r2, [pc, #288]	; 1c9b0 <vc_tv_disable_copyprotect_id@@Base+0x234>
   1c88c:	add	r0, pc, r0
   1c890:	mov	r1, #2
   1c894:	add	r2, pc, r2
   1c898:	bl	6b60 <vcos_log_impl@plt>
   1c89c:	str	r5, [sp, #28]
   1c8a0:	ldr	r3, [pc, #268]	; 1c9b4 <vc_tv_disable_copyprotect_id@@Base+0x238>
   1c8a4:	add	r3, pc, r3
   1c8a8:	ldr	r2, [r3, #3208]	; 0xc88
   1c8ac:	cmp	r2, #0
   1c8b0:	beq	1c8bc <vc_tv_disable_copyprotect_id@@Base+0x140>
   1c8b4:	ldr	r0, [r3, #24]
   1c8b8:	bl	6014 <vchi_service_release@plt>
   1c8bc:	ldr	r0, [pc, #244]	; 1c9b8 <vc_tv_disable_copyprotect_id@@Base+0x23c>
   1c8c0:	add	r0, pc, r0
   1c8c4:	add	r0, r0, #24
   1c8c8:	add	r0, r0, #3120	; 0xc30
   1c8cc:	bl	6b84 <pthread_mutex_unlock@plt>
   1c8d0:	ldr	r0, [sp, #28]
   1c8d4:	add	sp, sp, #60	; 0x3c
   1c8d8:	pop	{r4, r5, r6, r7, pc}
   1c8dc:	ldr	r6, [pc, #216]	; 1c9bc <vc_tv_disable_copyprotect_id@@Base+0x240>
   1c8e0:	ldr	r2, [pc, #216]	; 1c9c0 <vc_tv_disable_copyprotect_id@@Base+0x244>
   1c8e4:	add	r6, pc, r6
   1c8e8:	add	r3, r6, #720	; 0x2d0
   1c8ec:	mov	r1, #5
   1c8f0:	add	r2, pc, r2
   1c8f4:	mov	r0, r5
   1c8f8:	bl	6b60 <vcos_log_impl@plt>
   1c8fc:	mov	r2, #10
   1c900:	mov	r3, #4
   1c904:	ldr	r1, [r5]
   1c908:	str	r2, [sp, #20]
   1c90c:	cmp	r1, r3
   1c910:	add	r2, sp, #20
   1c914:	str	r4, [sp, #24]
   1c918:	str	r3, [sp, #36]	; 0x24
   1c91c:	str	r2, [sp, #32]
   1c920:	bls	1c7b8 <vc_tv_disable_copyprotect_id@@Base+0x3c>
   1c924:	mov	ip, #0
   1c928:	ldr	r2, [pc, #148]	; 1c9c4 <vc_tv_disable_copyprotect_id@@Base+0x248>
   1c92c:	ldr	r1, [pc, #148]	; 1c9c8 <vc_tv_disable_copyprotect_id@@Base+0x24c>
   1c930:	add	r2, pc, r2
   1c934:	str	r2, [sp, #8]
   1c938:	ldr	r2, [pc, #140]	; 1c9cc <vc_tv_disable_copyprotect_id@@Base+0x250>
   1c93c:	add	r1, pc, r1
   1c940:	stm	sp, {r1, ip}
   1c944:	mov	r0, r5
   1c948:	add	r3, r6, #304	; 0x130
   1c94c:	mov	r1, #5
   1c950:	add	r2, pc, r2
   1c954:	bl	6b60 <vcos_log_impl@plt>
   1c958:	ldr	r4, [sp, #24]
   1c95c:	cmp	r4, #65536	; 0x10000
   1c960:	bne	1c7c0 <vc_tv_disable_copyprotect_id@@Base+0x44>
   1c964:	mov	r7, #2
   1c968:	mov	r3, #1
   1c96c:	b	1c7e4 <vc_tv_disable_copyprotect_id@@Base+0x68>
   1c970:	mov	r2, r5
   1c974:	add	r0, sp, #28
   1c978:	mov	r1, #4
   1c97c:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1c980:	b	1c8a0 <vc_tv_disable_copyprotect_id@@Base+0x124>
   1c984:	ldr	r3, [pc, #68]	; 1c9d0 <vc_tv_disable_copyprotect_id@@Base+0x254>
   1c988:	add	r3, pc, r3
   1c98c:	b	1c87c <vc_tv_disable_copyprotect_id@@Base+0x100>
   1c990:	mov	r0, r6
   1c994:	bl	6b84 <pthread_mutex_unlock@plt>
   1c998:	ldr	r0, [sp, #28]
   1c99c:	b	1c8d4 <vc_tv_disable_copyprotect_id@@Base+0x158>
   1c9a0:	strdeq	ip, [r1], -r0
   1c9a4:	andeq	ip, r1, r4, lsl #21
   1c9a8:	andeq	fp, r1, r0, asr sl
   1c9ac:	andeq	ip, r1, ip, ror #19
   1c9b0:	andeq	sl, r0, r8, lsl r5
   1c9b4:	ldrdeq	ip, [r1], -r4
   1c9b8:			; <UNDEFINED> instruction: 0x0001c9b8
   1c9bc:	andeq	r9, r0, ip, lsl pc
   1c9c0:	andeq	sl, r0, ip, lsl #11
   1c9c4:	andeq	sl, r0, r0, ror r4
   1c9c8:	andeq	sl, r0, r0, ror #14
   1c9cc:	andeq	sl, r0, r8, lsl r4
   1c9d0:	andeq	sl, r0, r4, lsr r3

0001c9d4 <vc_tv_disable_copyprotect@@Base>:
   1c9d4:	ldr	r3, [pc, #8]	; 1c9e4 <vc_tv_disable_copyprotect@@Base+0x10>
   1c9d8:	add	r3, pc, r3
   1c9dc:	ldr	r0, [r3, #3592]	; 0xe08
   1c9e0:	b	1c77c <vc_tv_disable_copyprotect_id@@Base>
   1c9e4:	andeq	ip, r1, r0, lsr #17

0001c9e8 <vc_tv_show_info_id@@Base>:
   1c9e8:	push	{r4, r5, r6, r7, lr}
   1c9ec:	ldr	r5, [pc, #516]	; 1cbf8 <vc_tv_show_info_id@@Base+0x210>
   1c9f0:	sub	sp, sp, #60	; 0x3c
   1c9f4:	add	r5, pc, r5
   1c9f8:	ldr	r3, [r5]
   1c9fc:	mov	r4, r0
   1ca00:	cmp	r3, #4
   1ca04:	str	r1, [sp, #20]
   1ca08:	bhi	1cb48 <vc_tv_show_info_id@@Base+0x160>
   1ca0c:	mov	r3, #4
   1ca10:	mov	r2, #11
   1ca14:	str	r3, [sp, #36]	; 0x24
   1ca18:	add	r3, sp, #24
   1ca1c:	str	r0, [sp, #28]
   1ca20:	str	r2, [sp, #24]
   1ca24:	str	r3, [sp, #32]
   1ca28:	cmp	r4, #65536	; 0x10000
   1ca2c:	beq	1cbd0 <vc_tv_show_info_id@@Base+0x1e8>
   1ca30:	mov	r2, #4
   1ca34:	mov	r7, #3
   1ca38:	mov	r1, #2
   1ca3c:	ldr	r3, [sp, #24]
   1ca40:	str	r2, [sp, #44]	; 0x2c
   1ca44:	orr	r3, r3, #-2147483648	; 0x80000000
   1ca48:	str	r3, [sp, #24]
   1ca4c:	add	r3, sp, #28
   1ca50:	str	r3, [sp, #40]	; 0x28
   1ca54:	mov	r6, #4
   1ca58:	ldr	r4, [pc, #412]	; 1cbfc <vc_tv_show_info_id@@Base+0x214>
   1ca5c:	add	r3, sp, #56	; 0x38
   1ca60:	add	r4, pc, r4
   1ca64:	add	r1, r3, r1, lsl #3
   1ca68:	ldr	r3, [r4, #3208]	; 0xc88
   1ca6c:	add	r0, sp, #20
   1ca70:	cmp	r3, #0
   1ca74:	str	r0, [r1, #-24]	; 0xffffffe8
   1ca78:	str	r6, [r1, #-20]	; 0xffffffec
   1ca7c:	beq	1cbe4 <vc_tv_show_info_id@@Base+0x1fc>
   1ca80:	add	r5, r4, #24
   1ca84:	add	r5, r5, #3120	; 0xc30
   1ca88:	mov	r0, r5
   1ca8c:	bl	5ffc <pthread_mutex_lock@plt>
   1ca90:	ldr	r3, [r4, #3208]	; 0xc88
   1ca94:	cmp	r3, #0
   1ca98:	beq	1cbdc <vc_tv_show_info_id@@Base+0x1f4>
   1ca9c:	ldr	r0, [r4, #24]
   1caa0:	bl	6134 <vchi_service_use@plt>
   1caa4:	mov	r1, #0
   1caa8:	ldr	r0, [r4, #24]
   1caac:	mov	r2, r7
   1cab0:	str	r1, [sp]
   1cab4:	mov	r3, r6
   1cab8:	add	r1, sp, #32
   1cabc:	bl	5cc0 <vchi_msg_queuev@plt>
   1cac0:	subs	r5, r0, #0
   1cac4:	beq	1cb0c <vc_tv_show_info_id@@Base+0x124>
   1cac8:	ldr	r3, [r4]
   1cacc:	cmp	r3, #1
   1cad0:	bls	1cb0c <vc_tv_show_info_id@@Base+0x124>
   1cad4:	ldr	r3, [sp, #24]
   1cad8:	cmp	r3, #26
   1cadc:	bhi	1cbec <vc_tv_show_info_id@@Base+0x204>
   1cae0:	ldr	r2, [pc, #280]	; 1cc00 <vc_tv_show_info_id@@Base+0x218>
   1cae4:	add	r2, pc, r2
   1cae8:	ldr	r3, [r2, r3, lsl #2]
   1caec:	mov	r2, #4
   1caf0:	ldr	r0, [pc, #268]	; 1cc04 <vc_tv_show_info_id@@Base+0x21c>
   1caf4:	stm	sp, {r2, r5}
   1caf8:	ldr	r2, [pc, #264]	; 1cc08 <vc_tv_show_info_id@@Base+0x220>
   1cafc:	add	r0, pc, r0
   1cb00:	mov	r1, #2
   1cb04:	add	r2, pc, r2
   1cb08:	bl	6b60 <vcos_log_impl@plt>
   1cb0c:	ldr	r3, [pc, #248]	; 1cc0c <vc_tv_show_info_id@@Base+0x224>
   1cb10:	add	r3, pc, r3
   1cb14:	ldr	r2, [r3, #3208]	; 0xc88
   1cb18:	cmp	r2, #0
   1cb1c:	beq	1cb28 <vc_tv_show_info_id@@Base+0x140>
   1cb20:	ldr	r0, [r3, #24]
   1cb24:	bl	6014 <vchi_service_release@plt>
   1cb28:	ldr	r0, [pc, #224]	; 1cc10 <vc_tv_show_info_id@@Base+0x228>
   1cb2c:	add	r0, pc, r0
   1cb30:	add	r0, r0, #24
   1cb34:	add	r0, r0, #3120	; 0xc30
   1cb38:	bl	6b84 <pthread_mutex_unlock@plt>
   1cb3c:	mov	r0, r5
   1cb40:	add	sp, sp, #60	; 0x3c
   1cb44:	pop	{r4, r5, r6, r7, pc}
   1cb48:	ldr	r6, [pc, #196]	; 1cc14 <vc_tv_show_info_id@@Base+0x22c>
   1cb4c:	ldr	r2, [pc, #196]	; 1cc18 <vc_tv_show_info_id@@Base+0x230>
   1cb50:	add	r6, pc, r6
   1cb54:	add	r3, r6, #752	; 0x2f0
   1cb58:	mov	r1, #5
   1cb5c:	add	r2, pc, r2
   1cb60:	mov	r0, r5
   1cb64:	bl	6b60 <vcos_log_impl@plt>
   1cb68:	mov	r2, #11
   1cb6c:	mov	r3, #4
   1cb70:	ldr	r1, [r5]
   1cb74:	str	r2, [sp, #24]
   1cb78:	cmp	r1, r3
   1cb7c:	add	r2, sp, #24
   1cb80:	str	r4, [sp, #28]
   1cb84:	str	r3, [sp, #36]	; 0x24
   1cb88:	str	r2, [sp, #32]
   1cb8c:	bls	1ca28 <vc_tv_show_info_id@@Base+0x40>
   1cb90:	ldr	r2, [pc, #132]	; 1cc1c <vc_tv_show_info_id@@Base+0x234>
   1cb94:	ldr	r1, [pc, #132]	; 1cc20 <vc_tv_show_info_id@@Base+0x238>
   1cb98:	add	r2, pc, r2
   1cb9c:	str	r2, [sp, #8]
   1cba0:	ldr	r2, [pc, #124]	; 1cc24 <vc_tv_show_info_id@@Base+0x23c>
   1cba4:	add	r1, pc, r1
   1cba8:	str	r3, [sp, #4]
   1cbac:	str	r1, [sp]
   1cbb0:	mov	r0, r5
   1cbb4:	add	r3, r6, #304	; 0x130
   1cbb8:	mov	r1, #5
   1cbbc:	add	r2, pc, r2
   1cbc0:	bl	6b60 <vcos_log_impl@plt>
   1cbc4:	ldr	r4, [sp, #28]
   1cbc8:	cmp	r4, #65536	; 0x10000
   1cbcc:	bne	1ca30 <vc_tv_show_info_id@@Base+0x48>
   1cbd0:	mov	r7, #2
   1cbd4:	mov	r1, #1
   1cbd8:	b	1ca54 <vc_tv_show_info_id@@Base+0x6c>
   1cbdc:	mov	r0, r5
   1cbe0:	bl	6b84 <pthread_mutex_unlock@plt>
   1cbe4:	mvn	r5, #0
   1cbe8:	b	1cb3c <vc_tv_show_info_id@@Base+0x154>
   1cbec:	ldr	r3, [pc, #52]	; 1cc28 <vc_tv_show_info_id@@Base+0x240>
   1cbf0:	add	r3, pc, r3
   1cbf4:	b	1caec <vc_tv_show_info_id@@Base+0x104>
   1cbf8:	andeq	ip, r1, r4, lsl #17
   1cbfc:	andeq	ip, r1, r8, lsl r8
   1cc00:	andeq	fp, r1, r0, ror #15
   1cc04:	andeq	ip, r1, ip, ror r7
   1cc08:	andeq	sl, r0, r8, lsr #5
   1cc0c:	andeq	ip, r1, r8, ror #14
   1cc10:	andeq	ip, r1, ip, asr #14
   1cc14:			; <UNDEFINED> instruction: 0x00009cb0
   1cc18:	andeq	sl, r0, r0, lsr #6
   1cc1c:	andeq	sl, r0, r4, lsr #5
   1cc20:	andeq	sl, r0, r0, lsl r5
   1cc24:	andeq	sl, r0, ip, lsr #3
   1cc28:	andeq	sl, r0, ip, asr #1

0001cc2c <vc_tv_show_info@@Base>:
   1cc2c:	ldr	r3, [pc, #12]	; 1cc40 <vc_tv_show_info@@Base+0x14>
   1cc30:	mov	r1, r0
   1cc34:	add	r3, pc, r3
   1cc38:	ldr	r0, [r3, #3592]	; 0xe08
   1cc3c:	b	1c9e8 <vc_tv_show_info_id@@Base>
   1cc40:	andeq	ip, r1, r4, asr #12

0001cc44 <vc_tv_hdmi_get_av_latency_id@@Base>:
   1cc44:	push	{r4, r5, r6, r7, lr}
   1cc48:	ldr	r5, [pc, #536]	; 1ce68 <vc_tv_hdmi_get_av_latency_id@@Base+0x224>
   1cc4c:	sub	sp, sp, #60	; 0x3c
   1cc50:	add	r5, pc, r5
   1cc54:	ldr	r3, [r5]
   1cc58:	mov	r4, r0
   1cc5c:	cmp	r3, #4
   1cc60:	bhi	1cda4 <vc_tv_hdmi_get_av_latency_id@@Base+0x160>
   1cc64:	mov	r3, #4
   1cc68:	mov	r2, #12
   1cc6c:	str	r3, [sp, #36]	; 0x24
   1cc70:	add	r3, sp, #20
   1cc74:	str	r0, [sp, #24]
   1cc78:	str	r2, [sp, #20]
   1cc7c:	str	r3, [sp, #32]
   1cc80:	cmp	r4, #65536	; 0x10000
   1cc84:	beq	1ce2c <vc_tv_hdmi_get_av_latency_id@@Base+0x1e8>
   1cc88:	ldr	r3, [sp, #20]
   1cc8c:	mov	r2, #4
   1cc90:	orr	r3, r3, #-2147483648	; 0x80000000
   1cc94:	str	r3, [sp, #20]
   1cc98:	add	r3, sp, #24
   1cc9c:	str	r3, [sp, #40]	; 0x28
   1cca0:	mov	r7, #3
   1cca4:	mov	r3, #2
   1cca8:	str	r2, [sp, #44]	; 0x2c
   1ccac:	mov	r5, #0
   1ccb0:	mvn	r0, #0
   1ccb4:	ldr	r4, [pc, #432]	; 1ce6c <vc_tv_hdmi_get_av_latency_id@@Base+0x228>
   1ccb8:	add	r2, sp, #56	; 0x38
   1ccbc:	add	r4, pc, r4
   1ccc0:	add	r3, r2, r3, lsl #3
   1ccc4:	ldr	r2, [r4, #3208]	; 0xc88
   1ccc8:	str	r5, [r3, #-24]	; 0xffffffe8
   1cccc:	cmp	r2, r5
   1ccd0:	str	r5, [r3, #-20]	; 0xffffffec
   1ccd4:	str	r0, [sp, #28]
   1ccd8:	beq	1cd9c <vc_tv_hdmi_get_av_latency_id@@Base+0x158>
   1ccdc:	add	r6, r4, #24
   1cce0:	add	r6, r6, #3120	; 0xc30
   1cce4:	mov	r0, r6
   1cce8:	bl	5ffc <pthread_mutex_lock@plt>
   1ccec:	ldr	r3, [r4, #3208]	; 0xc88
   1ccf0:	cmp	r3, r5
   1ccf4:	beq	1ce58 <vc_tv_hdmi_get_av_latency_id@@Base+0x214>
   1ccf8:	ldr	r0, [r4, #24]
   1ccfc:	bl	6134 <vchi_service_use@plt>
   1cd00:	ldr	r0, [r4, #24]
   1cd04:	mov	r2, r7
   1cd08:	str	r5, [sp]
   1cd0c:	add	r1, sp, #32
   1cd10:	mov	r3, #4
   1cd14:	bl	5cc0 <vchi_msg_queuev@plt>
   1cd18:	subs	r5, r0, #0
   1cd1c:	beq	1ce38 <vc_tv_hdmi_get_av_latency_id@@Base+0x1f4>
   1cd20:	ldr	r3, [r4]
   1cd24:	cmp	r3, #1
   1cd28:	bls	1cd64 <vc_tv_hdmi_get_av_latency_id@@Base+0x120>
   1cd2c:	ldr	r3, [sp, #20]
   1cd30:	cmp	r3, #26
   1cd34:	bhi	1ce4c <vc_tv_hdmi_get_av_latency_id@@Base+0x208>
   1cd38:	ldr	r2, [pc, #304]	; 1ce70 <vc_tv_hdmi_get_av_latency_id@@Base+0x22c>
   1cd3c:	add	r2, pc, r2
   1cd40:	ldr	r3, [r2, r3, lsl #2]
   1cd44:	mov	r2, #0
   1cd48:	ldr	r0, [pc, #292]	; 1ce74 <vc_tv_hdmi_get_av_latency_id@@Base+0x230>
   1cd4c:	stm	sp, {r2, r5}
   1cd50:	ldr	r2, [pc, #288]	; 1ce78 <vc_tv_hdmi_get_av_latency_id@@Base+0x234>
   1cd54:	add	r0, pc, r0
   1cd58:	mov	r1, #2
   1cd5c:	add	r2, pc, r2
   1cd60:	bl	6b60 <vcos_log_impl@plt>
   1cd64:	str	r5, [sp, #28]
   1cd68:	ldr	r3, [pc, #268]	; 1ce7c <vc_tv_hdmi_get_av_latency_id@@Base+0x238>
   1cd6c:	add	r3, pc, r3
   1cd70:	ldr	r2, [r3, #3208]	; 0xc88
   1cd74:	cmp	r2, #0
   1cd78:	beq	1cd84 <vc_tv_hdmi_get_av_latency_id@@Base+0x140>
   1cd7c:	ldr	r0, [r3, #24]
   1cd80:	bl	6014 <vchi_service_release@plt>
   1cd84:	ldr	r0, [pc, #244]	; 1ce80 <vc_tv_hdmi_get_av_latency_id@@Base+0x23c>
   1cd88:	add	r0, pc, r0
   1cd8c:	add	r0, r0, #24
   1cd90:	add	r0, r0, #3120	; 0xc30
   1cd94:	bl	6b84 <pthread_mutex_unlock@plt>
   1cd98:	ldr	r0, [sp, #28]
   1cd9c:	add	sp, sp, #60	; 0x3c
   1cda0:	pop	{r4, r5, r6, r7, pc}
   1cda4:	ldr	r6, [pc, #216]	; 1ce84 <vc_tv_hdmi_get_av_latency_id@@Base+0x240>
   1cda8:	ldr	r2, [pc, #216]	; 1ce88 <vc_tv_hdmi_get_av_latency_id@@Base+0x244>
   1cdac:	add	r6, pc, r6
   1cdb0:	add	r3, r6, #772	; 0x304
   1cdb4:	mov	r1, #5
   1cdb8:	add	r2, pc, r2
   1cdbc:	mov	r0, r5
   1cdc0:	bl	6b60 <vcos_log_impl@plt>
   1cdc4:	mov	r2, #12
   1cdc8:	mov	r3, #4
   1cdcc:	ldr	r1, [r5]
   1cdd0:	str	r2, [sp, #20]
   1cdd4:	cmp	r1, r3
   1cdd8:	add	r2, sp, #20
   1cddc:	str	r4, [sp, #24]
   1cde0:	str	r3, [sp, #36]	; 0x24
   1cde4:	str	r2, [sp, #32]
   1cde8:	bls	1cc80 <vc_tv_hdmi_get_av_latency_id@@Base+0x3c>
   1cdec:	mov	ip, #0
   1cdf0:	ldr	r2, [pc, #148]	; 1ce8c <vc_tv_hdmi_get_av_latency_id@@Base+0x248>
   1cdf4:	ldr	r1, [pc, #148]	; 1ce90 <vc_tv_hdmi_get_av_latency_id@@Base+0x24c>
   1cdf8:	add	r2, pc, r2
   1cdfc:	str	r2, [sp, #8]
   1ce00:	ldr	r2, [pc, #140]	; 1ce94 <vc_tv_hdmi_get_av_latency_id@@Base+0x250>
   1ce04:	add	r1, pc, r1
   1ce08:	stm	sp, {r1, ip}
   1ce0c:	mov	r0, r5
   1ce10:	add	r3, r6, #304	; 0x130
   1ce14:	mov	r1, #5
   1ce18:	add	r2, pc, r2
   1ce1c:	bl	6b60 <vcos_log_impl@plt>
   1ce20:	ldr	r4, [sp, #24]
   1ce24:	cmp	r4, #65536	; 0x10000
   1ce28:	bne	1cc88 <vc_tv_hdmi_get_av_latency_id@@Base+0x44>
   1ce2c:	mov	r7, #2
   1ce30:	mov	r3, #1
   1ce34:	b	1ccac <vc_tv_hdmi_get_av_latency_id@@Base+0x68>
   1ce38:	mov	r2, r5
   1ce3c:	add	r0, sp, #28
   1ce40:	mov	r1, #4
   1ce44:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1ce48:	b	1cd68 <vc_tv_hdmi_get_av_latency_id@@Base+0x124>
   1ce4c:	ldr	r3, [pc, #68]	; 1ce98 <vc_tv_hdmi_get_av_latency_id@@Base+0x254>
   1ce50:	add	r3, pc, r3
   1ce54:	b	1cd44 <vc_tv_hdmi_get_av_latency_id@@Base+0x100>
   1ce58:	mov	r0, r6
   1ce5c:	bl	6b84 <pthread_mutex_unlock@plt>
   1ce60:	ldr	r0, [sp, #28]
   1ce64:	b	1cd9c <vc_tv_hdmi_get_av_latency_id@@Base+0x158>
   1ce68:	andeq	ip, r1, r8, lsr #12
   1ce6c:			; <UNDEFINED> instruction: 0x0001c5bc
   1ce70:	andeq	fp, r1, r8, lsl #11
   1ce74:	andeq	ip, r1, r4, lsr #10
   1ce78:	andeq	sl, r0, r0, asr r0
   1ce7c:	andeq	ip, r1, ip, lsl #10
   1ce80:	strdeq	ip, [r1], -r0
   1ce84:	andeq	r9, r0, r4, asr sl
   1ce88:	andeq	sl, r0, r4, asr #1
   1ce8c:	andeq	r9, r0, r8, lsr #31
   1ce90:			; <UNDEFINED> instruction: 0x0000a2bc
   1ce94:	andeq	r9, r0, r0, asr pc
   1ce98:	andeq	r9, r0, ip, ror #28

0001ce9c <vc_tv_hdmi_get_av_latency@@Base>:
   1ce9c:	ldr	r3, [pc, #8]	; 1ceac <vc_tv_hdmi_get_av_latency@@Base+0x10>
   1cea0:	add	r3, pc, r3
   1cea4:	ldr	r0, [r3, #3592]	; 0xe08
   1cea8:	b	1cc44 <vc_tv_hdmi_get_av_latency_id@@Base>
   1ceac:	ldrdeq	ip, [r1], -r8

0001ceb0 <vc_tv_hdmi_set_hdcp_key_id@@Base>:
   1ceb0:	push	{r4, r5, r6, r7, lr}
   1ceb4:	ldr	r2, [pc, #540]	; 1d0d8 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x228>
   1ceb8:	sub	sp, sp, #380	; 0x17c
   1cebc:	add	r2, pc, r2
   1cec0:	ldr	r3, [r2]
   1cec4:	mov	r4, r0
   1cec8:	cmp	r3, #4
   1cecc:	mov	r5, r1
   1ced0:	bhi	1d090 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x1e0>
   1ced4:	cmp	r5, #0
   1ced8:	beq	1d0d0 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x220>
   1cedc:	mov	r7, #328	; 0x148
   1cee0:	add	r6, sp, #48	; 0x30
   1cee4:	mov	r1, r5
   1cee8:	mov	r2, r7
   1ceec:	mov	r0, r6
   1cef0:	bl	66f8 <memcpy@plt>
   1cef4:	mov	r3, #4
   1cef8:	mov	r2, #13
   1cefc:	ldr	r0, [pc, #472]	; 1d0dc <vc_tv_hdmi_set_hdcp_key_id@@Base+0x22c>
   1cf00:	str	r3, [sp, #28]
   1cf04:	add	r0, pc, r0
   1cf08:	ldr	r1, [r0]
   1cf0c:	str	r4, [sp, #20]
   1cf10:	cmp	r1, r3
   1cf14:	add	r3, sp, #16
   1cf18:	str	r2, [sp, #16]
   1cf1c:	str	r3, [sp, #24]
   1cf20:	bhi	1d040 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x190>
   1cf24:	cmp	r4, #65536	; 0x10000
   1cf28:	beq	1d084 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x1d4>
   1cf2c:	ldr	r3, [sp, #16]
   1cf30:	mov	r2, #4
   1cf34:	orr	r3, r3, #-2147483648	; 0x80000000
   1cf38:	str	r3, [sp, #16]
   1cf3c:	add	r3, sp, #20
   1cf40:	str	r3, [sp, #32]
   1cf44:	mov	r7, #3
   1cf48:	mov	r3, #2
   1cf4c:	str	r2, [sp, #36]	; 0x24
   1cf50:	mov	r1, #328	; 0x148
   1cf54:	ldr	r4, [pc, #388]	; 1d0e0 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x230>
   1cf58:	add	r2, sp, #376	; 0x178
   1cf5c:	add	r4, pc, r4
   1cf60:	add	r3, r2, r3, lsl #3
   1cf64:	ldr	r2, [r4, #3208]	; 0xc88
   1cf68:	str	r6, [r3, #-352]	; 0xfffffea0
   1cf6c:	cmp	r2, #0
   1cf70:	str	r1, [r3, #-348]	; 0xfffffea4
   1cf74:	beq	1d0bc <vc_tv_hdmi_set_hdcp_key_id@@Base+0x20c>
   1cf78:	add	r5, r4, #24
   1cf7c:	add	r5, r5, #3120	; 0xc30
   1cf80:	mov	r0, r5
   1cf84:	bl	5ffc <pthread_mutex_lock@plt>
   1cf88:	ldr	r3, [r4, #3208]	; 0xc88
   1cf8c:	cmp	r3, #0
   1cf90:	beq	1d0b4 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x204>
   1cf94:	ldr	r0, [r4, #24]
   1cf98:	bl	6134 <vchi_service_use@plt>
   1cf9c:	mov	r3, #0
   1cfa0:	ldr	r0, [r4, #24]
   1cfa4:	mov	r2, r7
   1cfa8:	str	r3, [sp]
   1cfac:	add	r1, sp, #24
   1cfb0:	mov	r3, #4
   1cfb4:	bl	5cc0 <vchi_msg_queuev@plt>
   1cfb8:	subs	r5, r0, #0
   1cfbc:	beq	1d004 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x154>
   1cfc0:	ldr	r3, [r4]
   1cfc4:	cmp	r3, #1
   1cfc8:	bls	1d004 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x154>
   1cfcc:	ldr	r3, [sp, #16]
   1cfd0:	cmp	r3, #26
   1cfd4:	bhi	1d0c4 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x214>
   1cfd8:	ldr	r2, [pc, #260]	; 1d0e4 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x234>
   1cfdc:	add	r2, pc, r2
   1cfe0:	ldr	r3, [r2, r3, lsl #2]
   1cfe4:	mov	r2, #328	; 0x148
   1cfe8:	ldr	r0, [pc, #248]	; 1d0e8 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x238>
   1cfec:	stm	sp, {r2, r5}
   1cff0:	ldr	r2, [pc, #244]	; 1d0ec <vc_tv_hdmi_set_hdcp_key_id@@Base+0x23c>
   1cff4:	add	r0, pc, r0
   1cff8:	mov	r1, #2
   1cffc:	add	r2, pc, r2
   1d000:	bl	6b60 <vcos_log_impl@plt>
   1d004:	ldr	r3, [pc, #228]	; 1d0f0 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x240>
   1d008:	add	r3, pc, r3
   1d00c:	ldr	r2, [r3, #3208]	; 0xc88
   1d010:	cmp	r2, #0
   1d014:	beq	1d020 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x170>
   1d018:	ldr	r0, [r3, #24]
   1d01c:	bl	6014 <vchi_service_release@plt>
   1d020:	ldr	r0, [pc, #204]	; 1d0f4 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x244>
   1d024:	add	r0, pc, r0
   1d028:	add	r0, r0, #24
   1d02c:	add	r0, r0, #3120	; 0xc30
   1d030:	bl	6b84 <pthread_mutex_unlock@plt>
   1d034:	mov	r0, r5
   1d038:	add	sp, sp, #380	; 0x17c
   1d03c:	pop	{r4, r5, r6, r7, pc}
   1d040:	ldr	r2, [pc, #176]	; 1d0f8 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x248>
   1d044:	ldr	r3, [pc, #176]	; 1d0fc <vc_tv_hdmi_set_hdcp_key_id@@Base+0x24c>
   1d048:	add	r2, pc, r2
   1d04c:	ldr	r1, [pc, #172]	; 1d100 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x250>
   1d050:	str	r2, [sp, #8]
   1d054:	ldr	r2, [pc, #168]	; 1d104 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x254>
   1d058:	add	r1, pc, r1
   1d05c:	add	r3, pc, r3
   1d060:	str	r1, [sp]
   1d064:	str	r7, [sp, #4]
   1d068:	add	r3, r3, #304	; 0x130
   1d06c:	mov	r1, #5
   1d070:	add	r2, pc, r2
   1d074:	bl	6b60 <vcos_log_impl@plt>
   1d078:	ldr	r4, [sp, #20]
   1d07c:	cmp	r4, #65536	; 0x10000
   1d080:	bne	1cf2c <vc_tv_hdmi_set_hdcp_key_id@@Base+0x7c>
   1d084:	mov	r7, #2
   1d088:	mov	r3, #1
   1d08c:	b	1cf50 <vc_tv_hdmi_set_hdcp_key_id@@Base+0xa0>
   1d090:	ldr	r3, [pc, #112]	; 1d108 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x258>
   1d094:	mov	r0, r2
   1d098:	ldr	r2, [pc, #108]	; 1d10c <vc_tv_hdmi_set_hdcp_key_id@@Base+0x25c>
   1d09c:	add	r3, pc, r3
   1d0a0:	add	r3, r3, #804	; 0x324
   1d0a4:	mov	r1, #5
   1d0a8:	add	r2, pc, r2
   1d0ac:	bl	6b60 <vcos_log_impl@plt>
   1d0b0:	b	1ced4 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x24>
   1d0b4:	mov	r0, r5
   1d0b8:	bl	6b84 <pthread_mutex_unlock@plt>
   1d0bc:	mvn	r5, #0
   1d0c0:	b	1d034 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x184>
   1d0c4:	ldr	r3, [pc, #68]	; 1d110 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x260>
   1d0c8:	add	r3, pc, r3
   1d0cc:	b	1cfe4 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x134>
   1d0d0:	mvn	r0, #0
   1d0d4:	b	1d038 <vc_tv_hdmi_set_hdcp_key_id@@Base+0x188>
   1d0d8:			; <UNDEFINED> instruction: 0x0001c3bc
   1d0dc:	andeq	ip, r1, r4, ror r3
   1d0e0:	andeq	ip, r1, ip, lsl r3
   1d0e4:	andeq	fp, r1, r8, ror #5
   1d0e8:	andeq	ip, r1, r4, lsl #5
   1d0ec:			; <UNDEFINED> instruction: 0x00009db0
   1d0f0:	andeq	ip, r1, r0, ror r2
   1d0f4:	andeq	ip, r1, r4, asr r2
   1d0f8:	strdeq	r9, [r0], -r4
   1d0fc:	andeq	r9, r0, r4, lsr #15
   1d100:	andeq	sl, r0, r8, ror r0
   1d104:	strdeq	r9, [r0], -r8
   1d108:	andeq	r9, r0, r4, ror #14
   1d10c:	ldrdeq	r9, [r0], -r4
   1d110:	strdeq	r9, [r0], -r4

0001d114 <vc_tv_hdmi_set_hdcp_key@@Base>:
   1d114:	ldr	r3, [pc, #12]	; 1d128 <vc_tv_hdmi_set_hdcp_key@@Base+0x14>
   1d118:	mov	r1, r0
   1d11c:	add	r3, pc, r3
   1d120:	ldr	r0, [r3, #3592]	; 0xe08
   1d124:	b	1ceb0 <vc_tv_hdmi_set_hdcp_key_id@@Base>
   1d128:	andeq	ip, r1, ip, asr r1

0001d12c <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base>:
   1d12c:	mov	r3, #14
   1d130:	mov	ip, #4
   1d134:	push	{r4, r5, r6, r7, r8, r9, lr}
   1d138:	mov	r5, r2
   1d13c:	ldr	r2, [pc, #688]	; 1d3f4 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2c8>
   1d140:	sub	sp, sp, #60	; 0x3c
   1d144:	add	r2, pc, r2
   1d148:	ldr	lr, [r2]
   1d14c:	str	r3, [sp, #24]
   1d150:	cmp	lr, ip
   1d154:	add	r3, sp, #24
   1d158:	str	r0, [sp, #28]
   1d15c:	str	r5, [sp, #20]
   1d160:	mov	r6, r1
   1d164:	str	ip, [sp, #36]	; 0x24
   1d168:	str	r3, [sp, #32]
   1d16c:	bls	1d1b0 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x84>
   1d170:	ldr	r3, [pc, #640]	; 1d3f8 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2cc>
   1d174:	ldr	lr, [pc, #640]	; 1d3fc <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2d0>
   1d178:	ldr	r1, [pc, #640]	; 1d400 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2d4>
   1d17c:	mov	r0, r2
   1d180:	ldr	r2, [pc, #636]	; 1d404 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2d8>
   1d184:	add	lr, pc, lr
   1d188:	add	r1, pc, r1
   1d18c:	add	r3, pc, r3
   1d190:	str	r1, [sp, #8]
   1d194:	str	ip, [sp, #4]
   1d198:	add	r3, r3, #304	; 0x130
   1d19c:	str	lr, [sp]
   1d1a0:	mov	r1, #5
   1d1a4:	add	r2, pc, r2
   1d1a8:	bl	6b60 <vcos_log_impl@plt>
   1d1ac:	ldr	r0, [sp, #28]
   1d1b0:	cmp	r0, #65536	; 0x10000
   1d1b4:	beq	1d380 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x254>
   1d1b8:	mov	r2, #4
   1d1bc:	mov	r8, #3
   1d1c0:	mov	r0, #2
   1d1c4:	ldr	r3, [sp, #24]
   1d1c8:	str	r2, [sp, #44]	; 0x2c
   1d1cc:	orr	r3, r3, #-2147483648	; 0x80000000
   1d1d0:	str	r3, [sp, #24]
   1d1d4:	add	r3, sp, #28
   1d1d8:	str	r3, [sp, #40]	; 0x28
   1d1dc:	mov	r7, #4
   1d1e0:	ldr	r4, [pc, #544]	; 1d408 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2dc>
   1d1e4:	add	r3, sp, #56	; 0x38
   1d1e8:	add	r4, pc, r4
   1d1ec:	add	r0, r3, r0, lsl #3
   1d1f0:	ldr	r3, [r4, #3208]	; 0xc88
   1d1f4:	add	r1, sp, #20
   1d1f8:	cmp	r3, #0
   1d1fc:	str	r1, [r0, #-24]	; 0xffffffe8
   1d200:	str	r7, [r0, #-20]	; 0xffffffec
   1d204:	beq	1d394 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x268>
   1d208:	add	r9, r4, #24
   1d20c:	add	r9, r9, #3120	; 0xc30
   1d210:	mov	r0, r9
   1d214:	bl	5ffc <pthread_mutex_lock@plt>
   1d218:	ldr	r3, [r4, #3208]	; 0xc88
   1d21c:	cmp	r3, #0
   1d220:	beq	1d38c <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x260>
   1d224:	ldr	r0, [r4, #24]
   1d228:	bl	6134 <vchi_service_use@plt>
   1d22c:	mov	r1, #0
   1d230:	ldr	r0, [r4, #24]
   1d234:	mov	r3, r7
   1d238:	str	r1, [sp]
   1d23c:	mov	r2, r8
   1d240:	add	r1, sp, #32
   1d244:	bl	5cc0 <vchi_msg_queuev@plt>
   1d248:	subs	r7, r0, #0
   1d24c:	beq	1d294 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x168>
   1d250:	ldr	r3, [r4]
   1d254:	cmp	r3, #1
   1d258:	bls	1d294 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x168>
   1d25c:	ldr	r3, [sp, #24]
   1d260:	cmp	r3, #26
   1d264:	bhi	1d3e8 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2bc>
   1d268:	ldr	r2, [pc, #412]	; 1d40c <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2e0>
   1d26c:	add	r2, pc, r2
   1d270:	ldr	r3, [r2, r3, lsl #2]
   1d274:	mov	r2, #4
   1d278:	ldr	r0, [pc, #400]	; 1d410 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2e4>
   1d27c:	stm	sp, {r2, r7}
   1d280:	ldr	r2, [pc, #396]	; 1d414 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2e8>
   1d284:	add	r0, pc, r0
   1d288:	mov	r1, #2
   1d28c:	add	r2, pc, r2
   1d290:	bl	6b60 <vcos_log_impl@plt>
   1d294:	ldr	r3, [pc, #380]	; 1d418 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2ec>
   1d298:	add	r3, pc, r3
   1d29c:	ldr	r2, [r3, #3208]	; 0xc88
   1d2a0:	cmp	r2, #0
   1d2a4:	beq	1d2b0 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x184>
   1d2a8:	ldr	r0, [r3, #24]
   1d2ac:	bl	6014 <vchi_service_release@plt>
   1d2b0:	ldr	r4, [pc, #356]	; 1d41c <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2f0>
   1d2b4:	add	r4, pc, r4
   1d2b8:	add	r0, r4, #24
   1d2bc:	add	r0, r0, #3120	; 0xc30
   1d2c0:	bl	6b84 <pthread_mutex_unlock@plt>
   1d2c4:	ldr	r3, [r4]
   1d2c8:	clz	r4, r7
   1d2cc:	cmp	r5, #0
   1d2d0:	lsr	r4, r4, #5
   1d2d4:	moveq	r4, #0
   1d2d8:	cmp	r3, #4
   1d2dc:	bhi	1d3b0 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x284>
   1d2e0:	cmp	r4, #0
   1d2e4:	beq	1d374 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x248>
   1d2e8:	cmp	r6, #0
   1d2ec:	moveq	r7, r6
   1d2f0:	beq	1d374 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x248>
   1d2f4:	ldr	r4, [pc, #292]	; 1d420 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2f4>
   1d2f8:	add	r4, pc, r4
   1d2fc:	ldr	r3, [r4, #3208]	; 0xc88
   1d300:	cmp	r3, #0
   1d304:	beq	1d3e0 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2b4>
   1d308:	add	r7, r4, #24
   1d30c:	add	r7, r7, #3120	; 0xc30
   1d310:	mov	r0, r7
   1d314:	bl	5ffc <pthread_mutex_lock@plt>
   1d318:	ldr	r3, [r4, #3208]	; 0xc88
   1d31c:	cmp	r3, #0
   1d320:	beq	1d3d8 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2ac>
   1d324:	ldr	r0, [r4, #24]
   1d328:	bl	6134 <vchi_service_use@plt>
   1d32c:	mov	r3, #0
   1d330:	ldr	r0, [r4, #24]
   1d334:	mov	r1, r6
   1d338:	str	r3, [sp]
   1d33c:	add	r2, r5, r5, lsl #2
   1d340:	mov	r3, #4
   1d344:	bl	674c <vchi_bulk_queue_transmit@plt>
   1d348:	ldr	r3, [r4, #3208]	; 0xc88
   1d34c:	mov	r7, r0
   1d350:	cmp	r3, #0
   1d354:	beq	1d360 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x234>
   1d358:	ldr	r0, [r4, #24]
   1d35c:	bl	6014 <vchi_service_release@plt>
   1d360:	ldr	r0, [pc, #188]	; 1d424 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2f8>
   1d364:	add	r0, pc, r0
   1d368:	add	r0, r0, #24
   1d36c:	add	r0, r0, #3120	; 0xc30
   1d370:	bl	6b84 <pthread_mutex_unlock@plt>
   1d374:	mov	r0, r7
   1d378:	add	sp, sp, #60	; 0x3c
   1d37c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1d380:	mov	r8, #2
   1d384:	mov	r0, #1
   1d388:	b	1d1dc <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0xb0>
   1d38c:	mov	r0, r9
   1d390:	bl	6b84 <pthread_mutex_unlock@plt>
   1d394:	ldr	r3, [pc, #140]	; 1d428 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2fc>
   1d398:	add	r3, pc, r3
   1d39c:	ldr	r3, [r3]
   1d3a0:	cmp	r3, #4
   1d3a4:	bls	1d3e0 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x2b4>
   1d3a8:	mov	r4, #0
   1d3ac:	mvn	r7, #0
   1d3b0:	ldr	r3, [pc, #116]	; 1d42c <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x300>
   1d3b4:	ldr	r0, [pc, #116]	; 1d430 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x304>
   1d3b8:	ldr	r2, [pc, #116]	; 1d434 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x308>
   1d3bc:	add	r3, pc, r3
   1d3c0:	add	r0, pc, r0
   1d3c4:	add	r3, r3, #832	; 0x340
   1d3c8:	mov	r1, #5
   1d3cc:	add	r2, pc, r2
   1d3d0:	bl	6b60 <vcos_log_impl@plt>
   1d3d4:	b	1d2e0 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x1b4>
   1d3d8:	mov	r0, r7
   1d3dc:	bl	6b84 <pthread_mutex_unlock@plt>
   1d3e0:	mvn	r7, #0
   1d3e4:	b	1d374 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x248>
   1d3e8:	ldr	r3, [pc, #72]	; 1d438 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x30c>
   1d3ec:	add	r3, pc, r3
   1d3f0:	b	1d274 <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base+0x148>
   1d3f4:	andeq	ip, r1, r4, lsr r1
   1d3f8:	andeq	r9, r0, r4, ror r6
   1d3fc:	andeq	r9, r0, ip, asr pc
   1d400:			; <UNDEFINED> instruction: 0x00009cb4
   1d404:	andeq	r9, r0, r4, asr #23
   1d408:	muleq	r1, r0, r0
   1d40c:	andeq	fp, r1, r8, asr r0
   1d410:	strdeq	fp, [r1], -r4
   1d414:	andeq	r9, r0, r0, lsr #22
   1d418:	andeq	fp, r1, r0, ror #31
   1d41c:	andeq	fp, r1, r4, asr #31
   1d420:	andeq	fp, r1, r0, lsl #31
   1d424:	andeq	fp, r1, r4, lsl pc
   1d428:	andeq	fp, r1, r0, ror #29
   1d42c:	andeq	r9, r0, r4, asr #8
   1d430:			; <UNDEFINED> instruction: 0x0001beb8
   1d434:			; <UNDEFINED> instruction: 0x00009ab0
   1d438:	ldrdeq	r9, [r0], -r0

0001d43c <vc_tv_hdmi_set_hdcp_revoked_list@@Base>:
   1d43c:	ldr	r3, [pc, #16]	; 1d454 <vc_tv_hdmi_set_hdcp_revoked_list@@Base+0x18>
   1d440:	mov	r2, r1
   1d444:	add	r3, pc, r3
   1d448:	mov	r1, r0
   1d44c:	ldr	r0, [r3, #3592]	; 0xe08
   1d450:	b	1d12c <vc_tv_hdmi_set_hdcp_revoked_list_id@@Base>
   1d454:	andeq	fp, r1, r4, lsr lr

0001d458 <vc_tv_hdmi_set_spd_id@@Base>:
   1d458:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d45c:	ldr	ip, [pc, #588]	; 1d6b0 <vc_tv_hdmi_set_spd_id@@Base+0x258>
   1d460:	mov	r6, r0
   1d464:	add	ip, pc, ip
   1d468:	ldr	r0, [ip]
   1d46c:	sub	sp, sp, #80	; 0x50
   1d470:	cmp	r0, #4
   1d474:	mov	r5, r1
   1d478:	mov	r4, r2
   1d47c:	mov	r8, r3
   1d480:	bhi	1d620 <vc_tv_hdmi_set_spd_id@@Base+0x1c8>
   1d484:	cmp	r4, #0
   1d488:	cmpne	r5, #0
   1d48c:	beq	1d644 <vc_tv_hdmi_set_spd_id@@Base+0x1ec>
   1d490:	add	r7, sp, #52	; 0x34
   1d494:	mov	r2, r7
   1d498:	mov	r9, #4
   1d49c:	mov	sl, #15
   1d4a0:	ldr	lr, [pc, #524]	; 1d6b4 <vc_tv_hdmi_set_spd_id@@Base+0x25c>
   1d4a4:	ldr	r0, [r5]
   1d4a8:	ldr	r1, [r5, #4]
   1d4ac:	add	lr, pc, lr
   1d4b0:	ldr	ip, [lr]
   1d4b4:	stmia	r2!, {r0, r1}
   1d4b8:	ldr	r3, [r4, #12]
   1d4bc:	ldr	r2, [r4, #8]
   1d4c0:	ldr	r0, [r4]
   1d4c4:	ldr	r1, [r4, #4]
   1d4c8:	cmp	ip, r9
   1d4cc:	add	ip, sp, #60	; 0x3c
   1d4d0:	stmia	ip!, {r0, r1, r2, r3}
   1d4d4:	add	r3, sp, #20
   1d4d8:	str	r6, [sp, #24]
   1d4dc:	str	sl, [sp, #20]
   1d4e0:	str	r8, [sp, #76]	; 0x4c
   1d4e4:	str	r9, [sp, #32]
   1d4e8:	str	r3, [sp, #28]
   1d4ec:	bhi	1d5c8 <vc_tv_hdmi_set_spd_id@@Base+0x170>
   1d4f0:	cmp	r6, #65536	; 0x10000
   1d4f4:	beq	1d614 <vc_tv_hdmi_set_spd_id@@Base+0x1bc>
   1d4f8:	ldr	r3, [sp, #20]
   1d4fc:	mov	r2, #4
   1d500:	orr	r3, r3, #-2147483648	; 0x80000000
   1d504:	str	r3, [sp, #20]
   1d508:	add	r3, sp, #24
   1d50c:	str	r3, [sp, #36]	; 0x24
   1d510:	mov	r6, #3
   1d514:	mov	r3, #2
   1d518:	str	r2, [sp, #40]	; 0x28
   1d51c:	mov	r1, #28
   1d520:	ldr	r4, [pc, #400]	; 1d6b8 <vc_tv_hdmi_set_spd_id@@Base+0x260>
   1d524:	add	r2, sp, #80	; 0x50
   1d528:	add	r4, pc, r4
   1d52c:	add	r3, r2, r3, lsl #3
   1d530:	ldr	r2, [r4, #3208]	; 0xc88
   1d534:	str	r7, [r3, #-52]	; 0xffffffcc
   1d538:	cmp	r2, #0
   1d53c:	str	r1, [r3, #-48]	; 0xffffffd0
   1d540:	beq	1d654 <vc_tv_hdmi_set_spd_id@@Base+0x1fc>
   1d544:	add	r5, r4, #24
   1d548:	add	r5, r5, #3120	; 0xc30
   1d54c:	mov	r0, r5
   1d550:	bl	5ffc <pthread_mutex_lock@plt>
   1d554:	ldr	r3, [r4, #3208]	; 0xc88
   1d558:	cmp	r3, #0
   1d55c:	beq	1d64c <vc_tv_hdmi_set_spd_id@@Base+0x1f4>
   1d560:	ldr	r0, [r4, #24]
   1d564:	bl	6134 <vchi_service_use@plt>
   1d568:	mov	r3, #0
   1d56c:	ldr	r0, [r4, #24]
   1d570:	mov	r2, r6
   1d574:	str	r3, [sp]
   1d578:	add	r1, sp, #28
   1d57c:	mov	r3, #4
   1d580:	bl	5cc0 <vchi_msg_queuev@plt>
   1d584:	subs	r5, r0, #0
   1d588:	bne	1d65c <vc_tv_hdmi_set_spd_id@@Base+0x204>
   1d58c:	ldr	r3, [pc, #296]	; 1d6bc <vc_tv_hdmi_set_spd_id@@Base+0x264>
   1d590:	add	r3, pc, r3
   1d594:	ldr	r2, [r3, #3208]	; 0xc88
   1d598:	cmp	r2, #0
   1d59c:	beq	1d5a8 <vc_tv_hdmi_set_spd_id@@Base+0x150>
   1d5a0:	ldr	r0, [r3, #24]
   1d5a4:	bl	6014 <vchi_service_release@plt>
   1d5a8:	ldr	r0, [pc, #272]	; 1d6c0 <vc_tv_hdmi_set_spd_id@@Base+0x268>
   1d5ac:	add	r0, pc, r0
   1d5b0:	add	r0, r0, #24
   1d5b4:	add	r0, r0, #3120	; 0xc30
   1d5b8:	bl	6b84 <pthread_mutex_unlock@plt>
   1d5bc:	mov	r0, r5
   1d5c0:	add	sp, sp, #80	; 0x50
   1d5c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d5c8:	mov	ip, #28
   1d5cc:	ldr	r2, [pc, #240]	; 1d6c4 <vc_tv_hdmi_set_spd_id@@Base+0x26c>
   1d5d0:	ldr	r3, [pc, #240]	; 1d6c8 <vc_tv_hdmi_set_spd_id@@Base+0x270>
   1d5d4:	add	r2, pc, r2
   1d5d8:	ldr	r1, [pc, #236]	; 1d6cc <vc_tv_hdmi_set_spd_id@@Base+0x274>
   1d5dc:	str	r2, [sp, #8]
   1d5e0:	ldr	r2, [pc, #232]	; 1d6d0 <vc_tv_hdmi_set_spd_id@@Base+0x278>
   1d5e4:	add	r1, pc, r1
   1d5e8:	add	r3, pc, r3
   1d5ec:	str	r1, [sp]
   1d5f0:	mov	r0, lr
   1d5f4:	str	ip, [sp, #4]
   1d5f8:	add	r3, r3, #304	; 0x130
   1d5fc:	mov	r1, #5
   1d600:	add	r2, pc, r2
   1d604:	bl	6b60 <vcos_log_impl@plt>
   1d608:	ldr	r6, [sp, #24]
   1d60c:	cmp	r6, #65536	; 0x10000
   1d610:	bne	1d4f8 <vc_tv_hdmi_set_spd_id@@Base+0xa0>
   1d614:	mov	r6, #2
   1d618:	mov	r3, #1
   1d61c:	b	1d51c <vc_tv_hdmi_set_spd_id@@Base+0xc4>
   1d620:	ldr	r3, [pc, #172]	; 1d6d4 <vc_tv_hdmi_set_spd_id@@Base+0x27c>
   1d624:	ldr	r2, [pc, #172]	; 1d6d8 <vc_tv_hdmi_set_spd_id@@Base+0x280>
   1d628:	add	r3, pc, r3
   1d62c:	mov	r0, ip
   1d630:	add	r3, r3, #868	; 0x364
   1d634:	mov	r1, #5
   1d638:	add	r2, pc, r2
   1d63c:	bl	6b60 <vcos_log_impl@plt>
   1d640:	b	1d484 <vc_tv_hdmi_set_spd_id@@Base+0x2c>
   1d644:	mvn	r0, #0
   1d648:	b	1d5c0 <vc_tv_hdmi_set_spd_id@@Base+0x168>
   1d64c:	mov	r0, r5
   1d650:	bl	6b84 <pthread_mutex_unlock@plt>
   1d654:	mvn	r5, #0
   1d658:	b	1d5bc <vc_tv_hdmi_set_spd_id@@Base+0x164>
   1d65c:	ldr	r3, [r4]
   1d660:	cmp	r3, #1
   1d664:	bls	1d58c <vc_tv_hdmi_set_spd_id@@Base+0x134>
   1d668:	ldr	r3, [sp, #20]
   1d66c:	cmp	r3, #26
   1d670:	bhi	1d6a4 <vc_tv_hdmi_set_spd_id@@Base+0x24c>
   1d674:	ldr	r2, [pc, #96]	; 1d6dc <vc_tv_hdmi_set_spd_id@@Base+0x284>
   1d678:	add	r2, pc, r2
   1d67c:	ldr	r3, [r2, r3, lsl #2]
   1d680:	mov	r2, #28
   1d684:	ldr	r0, [pc, #84]	; 1d6e0 <vc_tv_hdmi_set_spd_id@@Base+0x288>
   1d688:	stm	sp, {r2, r5}
   1d68c:	ldr	r2, [pc, #80]	; 1d6e4 <vc_tv_hdmi_set_spd_id@@Base+0x28c>
   1d690:	add	r0, pc, r0
   1d694:	mov	r1, #2
   1d698:	add	r2, pc, r2
   1d69c:	bl	6b60 <vcos_log_impl@plt>
   1d6a0:	b	1d58c <vc_tv_hdmi_set_spd_id@@Base+0x134>
   1d6a4:	ldr	r3, [pc, #60]	; 1d6e8 <vc_tv_hdmi_set_spd_id@@Base+0x290>
   1d6a8:	add	r3, pc, r3
   1d6ac:	b	1d680 <vc_tv_hdmi_set_spd_id@@Base+0x228>
   1d6b0:	andeq	fp, r1, r4, lsl lr
   1d6b4:	andeq	fp, r1, ip, asr #27
   1d6b8:	andeq	fp, r1, r0, asr sp
   1d6bc:	andeq	fp, r1, r8, ror #25
   1d6c0:	andeq	fp, r1, ip, asr #25
   1d6c4:	andeq	r9, r0, r8, ror #16
   1d6c8:	andeq	r9, r0, r8, lsl r2
   1d6cc:	andeq	r9, r0, ip, lsl #22
   1d6d0:	andeq	r9, r0, r8, ror #14
   1d6d4:	ldrdeq	r9, [r0], -r8
   1d6d8:	andeq	r9, r0, r4, asr #16
   1d6dc:	andeq	sl, r1, ip, asr #24
   1d6e0:	andeq	fp, r1, r8, ror #23
   1d6e4:	andeq	r9, r0, r4, lsl r7
   1d6e8:	andeq	r9, r0, r4, lsl r6

0001d6ec <vc_tv_hdmi_set_spd@@Base>:
   1d6ec:	push	{lr}		; (str lr, [sp, #-4]!)
   1d6f0:	mov	lr, r1
   1d6f4:	ldr	ip, [pc, #24]	; 1d714 <vc_tv_hdmi_set_spd@@Base+0x28>
   1d6f8:	mov	r3, r2
   1d6fc:	add	ip, pc, ip
   1d700:	mov	r1, r0
   1d704:	mov	r2, lr
   1d708:	ldr	r0, [ip, #3592]	; 0xe08
   1d70c:	pop	{lr}		; (ldr lr, [sp], #4)
   1d710:	b	1d458 <vc_tv_hdmi_set_spd_id@@Base>
   1d714:	andeq	fp, r1, ip, ror fp

0001d718 <vc_tv_hdmi_set_display_options_id@@Base>:
   1d718:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d71c:	ldr	r9, [pc, #572]	; 1d960 <vc_tv_hdmi_set_display_options_id@@Base+0x248>
   1d720:	sub	sp, sp, #84	; 0x54
   1d724:	add	r9, pc, r9
   1d728:	ldr	ip, [r9]
   1d72c:	mov	r4, r0
   1d730:	cmp	ip, #4
   1d734:	mov	fp, r1
   1d738:	mov	r8, r2
   1d73c:	mov	r7, r3
   1d740:	ldr	r6, [sp, #120]	; 0x78
   1d744:	ldr	r5, [sp, #124]	; 0x7c
   1d748:	ldr	sl, [sp, #128]	; 0x80
   1d74c:	bls	1d774 <vc_tv_hdmi_set_display_options_id@@Base+0x5c>
   1d750:	ldr	r3, [pc, #524]	; 1d964 <vc_tv_hdmi_set_display_options_id@@Base+0x24c>
   1d754:	ldr	r2, [pc, #524]	; 1d968 <vc_tv_hdmi_set_display_options_id@@Base+0x250>
   1d758:	add	r3, pc, r3
   1d75c:	mov	r0, r9
   1d760:	add	r3, r3, #892	; 0x37c
   1d764:	mov	r1, #5
   1d768:	add	r2, pc, r2
   1d76c:	bl	6b60 <vcos_log_impl@plt>
   1d770:	ldr	ip, [r9]
   1d774:	orrs	r3, r8, r7
   1d778:	movne	r0, #1
   1d77c:	moveq	r0, #0
   1d780:	mov	r2, #16
   1d784:	orrs	r3, r6, r5
   1d788:	mov	r3, #4
   1d78c:	movne	r1, #1
   1d790:	moveq	r1, #0
   1d794:	str	r3, [sp, #28]
   1d798:	cmp	ip, r3
   1d79c:	add	r3, sp, r2
   1d7a0:	str	fp, [sp, #48]	; 0x30
   1d7a4:	str	r8, [sp, #56]	; 0x38
   1d7a8:	str	r7, [sp, #60]	; 0x3c
   1d7ac:	str	r6, [sp, #68]	; 0x44
   1d7b0:	str	r5, [sp, #72]	; 0x48
   1d7b4:	str	sl, [sp, #76]	; 0x4c
   1d7b8:	str	r4, [sp, #20]
   1d7bc:	str	r0, [sp, #52]	; 0x34
   1d7c0:	str	r1, [sp, #64]	; 0x40
   1d7c4:	str	r2, [sp, #16]
   1d7c8:	str	r3, [sp, #24]
   1d7cc:	bls	1d818 <vc_tv_hdmi_set_display_options_id@@Base+0x100>
   1d7d0:	mov	r0, #32
   1d7d4:	ldr	r2, [pc, #400]	; 1d96c <vc_tv_hdmi_set_display_options_id@@Base+0x254>
   1d7d8:	ldr	r3, [pc, #400]	; 1d970 <vc_tv_hdmi_set_display_options_id@@Base+0x258>
   1d7dc:	add	r2, pc, r2
   1d7e0:	ldr	r1, [pc, #396]	; 1d974 <vc_tv_hdmi_set_display_options_id@@Base+0x25c>
   1d7e4:	str	r0, [sp, #4]
   1d7e8:	str	r2, [sp, #8]
   1d7ec:	ldr	r0, [pc, #388]	; 1d978 <vc_tv_hdmi_set_display_options_id@@Base+0x260>
   1d7f0:	ldr	r2, [pc, #388]	; 1d97c <vc_tv_hdmi_set_display_options_id@@Base+0x264>
   1d7f4:	add	r1, pc, r1
   1d7f8:	add	r3, pc, r3
   1d7fc:	str	r1, [sp]
   1d800:	add	r3, r3, #304	; 0x130
   1d804:	add	r0, pc, r0
   1d808:	mov	r1, #5
   1d80c:	add	r2, pc, r2
   1d810:	bl	6b60 <vcos_log_impl@plt>
   1d814:	ldr	r4, [sp, #20]
   1d818:	cmp	r4, #65536	; 0x10000
   1d81c:	beq	1d938 <vc_tv_hdmi_set_display_options_id@@Base+0x220>
   1d820:	ldr	r3, [sp, #16]
   1d824:	mov	r2, #4
   1d828:	orr	r3, r3, #-2147483648	; 0x80000000
   1d82c:	str	r3, [sp, #16]
   1d830:	add	r3, sp, #20
   1d834:	str	r3, [sp, #32]
   1d838:	mov	r6, #3
   1d83c:	mov	r3, #2
   1d840:	str	r2, [sp, #36]	; 0x24
   1d844:	mov	r0, #32
   1d848:	ldr	r4, [pc, #304]	; 1d980 <vc_tv_hdmi_set_display_options_id@@Base+0x268>
   1d84c:	add	r2, sp, #80	; 0x50
   1d850:	add	r4, pc, r4
   1d854:	add	r3, r2, r3, lsl #3
   1d858:	ldr	r2, [r4, #3208]	; 0xc88
   1d85c:	add	r1, sp, #48	; 0x30
   1d860:	cmp	r2, #0
   1d864:	str	r1, [r3, #-56]	; 0xffffffc8
   1d868:	str	r0, [r3, #-52]	; 0xffffffcc
   1d86c:	beq	1d94c <vc_tv_hdmi_set_display_options_id@@Base+0x234>
   1d870:	add	r5, r4, #24
   1d874:	add	r5, r5, #3120	; 0xc30
   1d878:	mov	r0, r5
   1d87c:	bl	5ffc <pthread_mutex_lock@plt>
   1d880:	ldr	r3, [r4, #3208]	; 0xc88
   1d884:	cmp	r3, #0
   1d888:	beq	1d944 <vc_tv_hdmi_set_display_options_id@@Base+0x22c>
   1d88c:	ldr	r0, [r4, #24]
   1d890:	bl	6134 <vchi_service_use@plt>
   1d894:	mov	r3, #0
   1d898:	ldr	r0, [r4, #24]
   1d89c:	mov	r2, r6
   1d8a0:	str	r3, [sp]
   1d8a4:	add	r1, sp, #24
   1d8a8:	mov	r3, #4
   1d8ac:	bl	5cc0 <vchi_msg_queuev@plt>
   1d8b0:	subs	r5, r0, #0
   1d8b4:	beq	1d8fc <vc_tv_hdmi_set_display_options_id@@Base+0x1e4>
   1d8b8:	ldr	r3, [r4]
   1d8bc:	cmp	r3, #1
   1d8c0:	bls	1d8fc <vc_tv_hdmi_set_display_options_id@@Base+0x1e4>
   1d8c4:	ldr	r3, [sp, #16]
   1d8c8:	cmp	r3, #26
   1d8cc:	bhi	1d954 <vc_tv_hdmi_set_display_options_id@@Base+0x23c>
   1d8d0:	ldr	r2, [pc, #172]	; 1d984 <vc_tv_hdmi_set_display_options_id@@Base+0x26c>
   1d8d4:	add	r2, pc, r2
   1d8d8:	ldr	r3, [r2, r3, lsl #2]
   1d8dc:	mov	r2, #32
   1d8e0:	ldr	r0, [pc, #160]	; 1d988 <vc_tv_hdmi_set_display_options_id@@Base+0x270>
   1d8e4:	stm	sp, {r2, r5}
   1d8e8:	ldr	r2, [pc, #156]	; 1d98c <vc_tv_hdmi_set_display_options_id@@Base+0x274>
   1d8ec:	add	r0, pc, r0
   1d8f0:	mov	r1, #2
   1d8f4:	add	r2, pc, r2
   1d8f8:	bl	6b60 <vcos_log_impl@plt>
   1d8fc:	ldr	r3, [pc, #140]	; 1d990 <vc_tv_hdmi_set_display_options_id@@Base+0x278>
   1d900:	add	r3, pc, r3
   1d904:	ldr	r2, [r3, #3208]	; 0xc88
   1d908:	cmp	r2, #0
   1d90c:	beq	1d918 <vc_tv_hdmi_set_display_options_id@@Base+0x200>
   1d910:	ldr	r0, [r3, #24]
   1d914:	bl	6014 <vchi_service_release@plt>
   1d918:	ldr	r0, [pc, #116]	; 1d994 <vc_tv_hdmi_set_display_options_id@@Base+0x27c>
   1d91c:	add	r0, pc, r0
   1d920:	add	r0, r0, #24
   1d924:	add	r0, r0, #3120	; 0xc30
   1d928:	bl	6b84 <pthread_mutex_unlock@plt>
   1d92c:	mov	r0, r5
   1d930:	add	sp, sp, #84	; 0x54
   1d934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d938:	mov	r6, #2
   1d93c:	mov	r3, #1
   1d940:	b	1d844 <vc_tv_hdmi_set_display_options_id@@Base+0x12c>
   1d944:	mov	r0, r5
   1d948:	bl	6b84 <pthread_mutex_unlock@plt>
   1d94c:	mvn	r5, #0
   1d950:	b	1d92c <vc_tv_hdmi_set_display_options_id@@Base+0x214>
   1d954:	ldr	r3, [pc, #60]	; 1d998 <vc_tv_hdmi_set_display_options_id@@Base+0x280>
   1d958:	add	r3, pc, r3
   1d95c:	b	1d8dc <vc_tv_hdmi_set_display_options_id@@Base+0x1c4>
   1d960:	andeq	fp, r1, r4, asr fp
   1d964:	andeq	r9, r0, r8, lsr #1
   1d968:	andeq	r9, r0, r4, lsl r7
   1d96c:	andeq	r9, r0, r0, ror #12
   1d970:	andeq	r9, r0, r8
   1d974:	andeq	r9, r0, r4, lsl #18
   1d978:	andeq	fp, r1, r4, ror sl
   1d97c:	andeq	r9, r0, ip, asr r5
   1d980:	andeq	fp, r1, r8, lsr #20
   1d984:	strdeq	sl, [r1], -r0
   1d988:	andeq	fp, r1, ip, lsl #19
   1d98c:			; <UNDEFINED> instruction: 0x000094b8
   1d990:	andeq	fp, r1, r8, ror r9
   1d994:	andeq	fp, r1, ip, asr r9
   1d998:	andeq	r9, r0, r4, ror #6

0001d99c <vc_tv_hdmi_set_display_options@@Base>:
   1d99c:	push	{r4, r5, r6, lr}
   1d9a0:	mov	r6, r0
   1d9a4:	mov	r5, r1
   1d9a8:	mov	r4, r2
   1d9ac:	ldr	ip, [pc, #52]	; 1d9e8 <vc_tv_hdmi_set_display_options@@Base+0x4c>
   1d9b0:	sub	sp, sp, #16
   1d9b4:	add	ip, pc, ip
   1d9b8:	ldr	r0, [ip, #3592]	; 0xe08
   1d9bc:	ldr	lr, [sp, #32]
   1d9c0:	ldr	ip, [sp, #36]	; 0x24
   1d9c4:	str	r3, [sp]
   1d9c8:	mov	r1, r6
   1d9cc:	mov	r2, r5
   1d9d0:	mov	r3, r4
   1d9d4:	str	lr, [sp, #4]
   1d9d8:	str	ip, [sp, #8]
   1d9dc:	bl	1d718 <vc_tv_hdmi_set_display_options_id@@Base>
   1d9e0:	add	sp, sp, #16
   1d9e4:	pop	{r4, r5, r6, pc}
   1d9e8:	andeq	fp, r1, r4, asr #17

0001d9ec <vc_tv_test_mode_start_id@@Base>:
   1d9ec:	push	{r4, r5, r6, lr}
   1d9f0:	ldr	r5, [pc, #520]	; 1dc00 <vc_tv_test_mode_start_id@@Base+0x214>
   1d9f4:	sub	sp, sp, #56	; 0x38
   1d9f8:	add	r5, pc, r5
   1d9fc:	ldr	r3, [r5]
   1da00:	mov	r4, r0
   1da04:	cmp	r3, #4
   1da08:	str	r1, [sp, #24]
   1da0c:	str	r2, [sp, #28]
   1da10:	bhi	1db50 <vc_tv_test_mode_start_id@@Base+0x164>
   1da14:	mov	r3, #4
   1da18:	mov	r2, #17
   1da1c:	str	r3, [sp, #36]	; 0x24
   1da20:	add	r3, sp, #16
   1da24:	str	r0, [sp, #20]
   1da28:	str	r2, [sp, #16]
   1da2c:	str	r3, [sp, #32]
   1da30:	cmp	r4, #65536	; 0x10000
   1da34:	beq	1dbd8 <vc_tv_test_mode_start_id@@Base+0x1ec>
   1da38:	ldr	r3, [sp, #16]
   1da3c:	mov	r2, #4
   1da40:	orr	r3, r3, #-2147483648	; 0x80000000
   1da44:	str	r3, [sp, #16]
   1da48:	add	r3, sp, #20
   1da4c:	str	r3, [sp, #40]	; 0x28
   1da50:	mov	r6, #3
   1da54:	mov	r3, #2
   1da58:	str	r2, [sp, #44]	; 0x2c
   1da5c:	mov	r0, #8
   1da60:	ldr	r4, [pc, #412]	; 1dc04 <vc_tv_test_mode_start_id@@Base+0x218>
   1da64:	add	r2, sp, #56	; 0x38
   1da68:	add	r4, pc, r4
   1da6c:	add	r3, r2, r3, lsl #3
   1da70:	ldr	r2, [r4, #3208]	; 0xc88
   1da74:	add	r1, sp, #24
   1da78:	cmp	r2, #0
   1da7c:	str	r1, [r3, #-24]	; 0xffffffe8
   1da80:	str	r0, [r3, #-20]	; 0xffffffec
   1da84:	beq	1dbec <vc_tv_test_mode_start_id@@Base+0x200>
   1da88:	add	r5, r4, #24
   1da8c:	add	r5, r5, #3120	; 0xc30
   1da90:	mov	r0, r5
   1da94:	bl	5ffc <pthread_mutex_lock@plt>
   1da98:	ldr	r3, [r4, #3208]	; 0xc88
   1da9c:	cmp	r3, #0
   1daa0:	beq	1dbe4 <vc_tv_test_mode_start_id@@Base+0x1f8>
   1daa4:	ldr	r0, [r4, #24]
   1daa8:	bl	6134 <vchi_service_use@plt>
   1daac:	mov	r3, #0
   1dab0:	ldr	r0, [r4, #24]
   1dab4:	mov	r2, r6
   1dab8:	str	r3, [sp]
   1dabc:	add	r1, sp, #32
   1dac0:	mov	r3, #4
   1dac4:	bl	5cc0 <vchi_msg_queuev@plt>
   1dac8:	subs	r5, r0, #0
   1dacc:	beq	1db14 <vc_tv_test_mode_start_id@@Base+0x128>
   1dad0:	ldr	r3, [r4]
   1dad4:	cmp	r3, #1
   1dad8:	bls	1db14 <vc_tv_test_mode_start_id@@Base+0x128>
   1dadc:	ldr	r3, [sp, #16]
   1dae0:	cmp	r3, #26
   1dae4:	bhi	1dbf4 <vc_tv_test_mode_start_id@@Base+0x208>
   1dae8:	ldr	r2, [pc, #280]	; 1dc08 <vc_tv_test_mode_start_id@@Base+0x21c>
   1daec:	add	r2, pc, r2
   1daf0:	ldr	r3, [r2, r3, lsl #2]
   1daf4:	mov	r2, #8
   1daf8:	ldr	r0, [pc, #268]	; 1dc0c <vc_tv_test_mode_start_id@@Base+0x220>
   1dafc:	stm	sp, {r2, r5}
   1db00:	ldr	r2, [pc, #264]	; 1dc10 <vc_tv_test_mode_start_id@@Base+0x224>
   1db04:	add	r0, pc, r0
   1db08:	mov	r1, #2
   1db0c:	add	r2, pc, r2
   1db10:	bl	6b60 <vcos_log_impl@plt>
   1db14:	ldr	r3, [pc, #248]	; 1dc14 <vc_tv_test_mode_start_id@@Base+0x228>
   1db18:	add	r3, pc, r3
   1db1c:	ldr	r2, [r3, #3208]	; 0xc88
   1db20:	cmp	r2, #0
   1db24:	beq	1db30 <vc_tv_test_mode_start_id@@Base+0x144>
   1db28:	ldr	r0, [r3, #24]
   1db2c:	bl	6014 <vchi_service_release@plt>
   1db30:	ldr	r0, [pc, #224]	; 1dc18 <vc_tv_test_mode_start_id@@Base+0x22c>
   1db34:	add	r0, pc, r0
   1db38:	add	r0, r0, #24
   1db3c:	add	r0, r0, #3120	; 0xc30
   1db40:	bl	6b84 <pthread_mutex_unlock@plt>
   1db44:	mov	r0, r5
   1db48:	add	sp, sp, #56	; 0x38
   1db4c:	pop	{r4, r5, r6, pc}
   1db50:	ldr	r6, [pc, #196]	; 1dc1c <vc_tv_test_mode_start_id@@Base+0x230>
   1db54:	ldr	r2, [pc, #196]	; 1dc20 <vc_tv_test_mode_start_id@@Base+0x234>
   1db58:	add	r6, pc, r6
   1db5c:	add	r3, r6, #928	; 0x3a0
   1db60:	mov	r1, #5
   1db64:	add	r2, pc, r2
   1db68:	mov	r0, r5
   1db6c:	bl	6b60 <vcos_log_impl@plt>
   1db70:	mov	r2, #17
   1db74:	mov	r3, #4
   1db78:	ldr	r1, [r5]
   1db7c:	str	r2, [sp, #16]
   1db80:	cmp	r1, r3
   1db84:	add	r2, sp, #16
   1db88:	str	r4, [sp, #20]
   1db8c:	str	r3, [sp, #36]	; 0x24
   1db90:	str	r2, [sp, #32]
   1db94:	bls	1da30 <vc_tv_test_mode_start_id@@Base+0x44>
   1db98:	mov	ip, #8
   1db9c:	ldr	r2, [pc, #128]	; 1dc24 <vc_tv_test_mode_start_id@@Base+0x238>
   1dba0:	ldr	r1, [pc, #128]	; 1dc28 <vc_tv_test_mode_start_id@@Base+0x23c>
   1dba4:	add	r2, pc, r2
   1dba8:	str	r2, [sp, #8]
   1dbac:	ldr	r2, [pc, #120]	; 1dc2c <vc_tv_test_mode_start_id@@Base+0x240>
   1dbb0:	add	r1, pc, r1
   1dbb4:	stm	sp, {r1, ip}
   1dbb8:	mov	r0, r5
   1dbbc:	add	r3, r6, #304	; 0x130
   1dbc0:	mov	r1, #5
   1dbc4:	add	r2, pc, r2
   1dbc8:	bl	6b60 <vcos_log_impl@plt>
   1dbcc:	ldr	r4, [sp, #20]
   1dbd0:	cmp	r4, #65536	; 0x10000
   1dbd4:	bne	1da38 <vc_tv_test_mode_start_id@@Base+0x4c>
   1dbd8:	mov	r6, #2
   1dbdc:	mov	r3, #1
   1dbe0:	b	1da5c <vc_tv_test_mode_start_id@@Base+0x70>
   1dbe4:	mov	r0, r5
   1dbe8:	bl	6b84 <pthread_mutex_unlock@plt>
   1dbec:	mvn	r5, #0
   1dbf0:	b	1db44 <vc_tv_test_mode_start_id@@Base+0x158>
   1dbf4:	ldr	r3, [pc, #52]	; 1dc30 <vc_tv_test_mode_start_id@@Base+0x244>
   1dbf8:	add	r3, pc, r3
   1dbfc:	b	1daf4 <vc_tv_test_mode_start_id@@Base+0x108>
   1dc00:	andeq	fp, r1, r0, lsl #17
   1dc04:	andeq	fp, r1, r0, lsl r8
   1dc08:	ldrdeq	sl, [r1], -r8
   1dc0c:	andeq	fp, r1, r4, ror r7
   1dc10:	andeq	r9, r0, r0, lsr #5
   1dc14:	andeq	fp, r1, r0, ror #14
   1dc18:	andeq	fp, r1, r4, asr #14
   1dc1c:	andeq	r8, r0, r8, lsr #25
   1dc20:	andeq	r9, r0, r8, lsl r3
   1dc24:	muleq	r0, r8, r2
   1dc28:	andeq	r9, r0, ip, asr r5
   1dc2c:	andeq	r9, r0, r4, lsr #3
   1dc30:	andeq	r9, r0, r4, asr #1

0001dc34 <vc_tv_test_mode_start@@Base>:
   1dc34:	ldr	r3, [pc, #16]	; 1dc4c <vc_tv_test_mode_start@@Base+0x18>
   1dc38:	mov	r2, r1
   1dc3c:	add	r3, pc, r3
   1dc40:	mov	r1, r0
   1dc44:	ldr	r0, [r3, #3592]	; 0xe08
   1dc48:	b	1d9ec <vc_tv_test_mode_start_id@@Base>
   1dc4c:	andeq	fp, r1, ip, lsr r6

0001dc50 <vc_tv_test_mode_stop_id@@Base>:
   1dc50:	push	{r4, r5, r6, r7, lr}
   1dc54:	ldr	r5, [pc, #504]	; 1de54 <vc_tv_test_mode_stop_id@@Base+0x204>
   1dc58:	sub	sp, sp, #52	; 0x34
   1dc5c:	add	r5, pc, r5
   1dc60:	ldr	r3, [r5]
   1dc64:	mov	r4, r0
   1dc68:	cmp	r3, #4
   1dc6c:	bhi	1dda4 <vc_tv_test_mode_stop_id@@Base+0x154>
   1dc70:	mov	r3, #4
   1dc74:	mov	r2, #18
   1dc78:	str	r3, [sp, #28]
   1dc7c:	add	r3, sp, #16
   1dc80:	str	r0, [sp, #20]
   1dc84:	str	r2, [sp, #16]
   1dc88:	str	r3, [sp, #24]
   1dc8c:	cmp	r4, #65536	; 0x10000
   1dc90:	beq	1de2c <vc_tv_test_mode_stop_id@@Base+0x1dc>
   1dc94:	ldr	r3, [sp, #16]
   1dc98:	mov	r2, #4
   1dc9c:	orr	r3, r3, #-2147483648	; 0x80000000
   1dca0:	str	r3, [sp, #16]
   1dca4:	add	r3, sp, #20
   1dca8:	str	r3, [sp, #32]
   1dcac:	mov	r7, #3
   1dcb0:	mov	r3, #2
   1dcb4:	str	r2, [sp, #36]	; 0x24
   1dcb8:	mov	r5, #0
   1dcbc:	ldr	r4, [pc, #404]	; 1de58 <vc_tv_test_mode_stop_id@@Base+0x208>
   1dcc0:	add	r2, sp, #48	; 0x30
   1dcc4:	add	r4, pc, r4
   1dcc8:	ldr	r1, [r4, #3208]	; 0xc88
   1dccc:	add	r3, r2, r3, lsl #3
   1dcd0:	cmp	r1, r5
   1dcd4:	str	r5, [r3, #-24]	; 0xffffffe8
   1dcd8:	str	r5, [r3, #-20]	; 0xffffffec
   1dcdc:	beq	1de40 <vc_tv_test_mode_stop_id@@Base+0x1f0>
   1dce0:	add	r6, r4, #24
   1dce4:	add	r6, r6, #3120	; 0xc30
   1dce8:	mov	r0, r6
   1dcec:	bl	5ffc <pthread_mutex_lock@plt>
   1dcf0:	ldr	r3, [r4, #3208]	; 0xc88
   1dcf4:	cmp	r3, r5
   1dcf8:	beq	1de38 <vc_tv_test_mode_stop_id@@Base+0x1e8>
   1dcfc:	ldr	r0, [r4, #24]
   1dd00:	bl	6134 <vchi_service_use@plt>
   1dd04:	ldr	r0, [r4, #24]
   1dd08:	mov	r2, r7
   1dd0c:	str	r5, [sp]
   1dd10:	add	r1, sp, #24
   1dd14:	mov	r3, #4
   1dd18:	bl	5cc0 <vchi_msg_queuev@plt>
   1dd1c:	subs	r5, r0, #0
   1dd20:	beq	1dd68 <vc_tv_test_mode_stop_id@@Base+0x118>
   1dd24:	ldr	r3, [r4]
   1dd28:	cmp	r3, #1
   1dd2c:	bls	1dd68 <vc_tv_test_mode_stop_id@@Base+0x118>
   1dd30:	ldr	r3, [sp, #16]
   1dd34:	cmp	r3, #26
   1dd38:	bhi	1de48 <vc_tv_test_mode_stop_id@@Base+0x1f8>
   1dd3c:	ldr	r2, [pc, #280]	; 1de5c <vc_tv_test_mode_stop_id@@Base+0x20c>
   1dd40:	add	r2, pc, r2
   1dd44:	ldr	r3, [r2, r3, lsl #2]
   1dd48:	mov	r2, #0
   1dd4c:	ldr	r0, [pc, #268]	; 1de60 <vc_tv_test_mode_stop_id@@Base+0x210>
   1dd50:	stm	sp, {r2, r5}
   1dd54:	ldr	r2, [pc, #264]	; 1de64 <vc_tv_test_mode_stop_id@@Base+0x214>
   1dd58:	add	r0, pc, r0
   1dd5c:	mov	r1, #2
   1dd60:	add	r2, pc, r2
   1dd64:	bl	6b60 <vcos_log_impl@plt>
   1dd68:	ldr	r3, [pc, #248]	; 1de68 <vc_tv_test_mode_stop_id@@Base+0x218>
   1dd6c:	add	r3, pc, r3
   1dd70:	ldr	r2, [r3, #3208]	; 0xc88
   1dd74:	cmp	r2, #0
   1dd78:	beq	1dd84 <vc_tv_test_mode_stop_id@@Base+0x134>
   1dd7c:	ldr	r0, [r3, #24]
   1dd80:	bl	6014 <vchi_service_release@plt>
   1dd84:	ldr	r0, [pc, #224]	; 1de6c <vc_tv_test_mode_stop_id@@Base+0x21c>
   1dd88:	add	r0, pc, r0
   1dd8c:	add	r0, r0, #24
   1dd90:	add	r0, r0, #3120	; 0xc30
   1dd94:	bl	6b84 <pthread_mutex_unlock@plt>
   1dd98:	mov	r0, r5
   1dd9c:	add	sp, sp, #52	; 0x34
   1dda0:	pop	{r4, r5, r6, r7, pc}
   1dda4:	ldr	r6, [pc, #196]	; 1de70 <vc_tv_test_mode_stop_id@@Base+0x220>
   1dda8:	ldr	r2, [pc, #196]	; 1de74 <vc_tv_test_mode_stop_id@@Base+0x224>
   1ddac:	add	r6, pc, r6
   1ddb0:	add	r3, r6, #956	; 0x3bc
   1ddb4:	mov	r1, #5
   1ddb8:	add	r2, pc, r2
   1ddbc:	mov	r0, r5
   1ddc0:	bl	6b60 <vcos_log_impl@plt>
   1ddc4:	mov	r2, #18
   1ddc8:	mov	r3, #4
   1ddcc:	ldr	r1, [r5]
   1ddd0:	str	r2, [sp, #16]
   1ddd4:	cmp	r1, r3
   1ddd8:	add	r2, sp, #16
   1dddc:	str	r4, [sp, #20]
   1dde0:	str	r3, [sp, #28]
   1dde4:	str	r2, [sp, #24]
   1dde8:	bls	1dc8c <vc_tv_test_mode_stop_id@@Base+0x3c>
   1ddec:	mov	ip, #0
   1ddf0:	ldr	r2, [pc, #128]	; 1de78 <vc_tv_test_mode_stop_id@@Base+0x228>
   1ddf4:	ldr	r1, [pc, #128]	; 1de7c <vc_tv_test_mode_stop_id@@Base+0x22c>
   1ddf8:	add	r2, pc, r2
   1ddfc:	str	r2, [sp, #8]
   1de00:	ldr	r2, [pc, #120]	; 1de80 <vc_tv_test_mode_stop_id@@Base+0x230>
   1de04:	add	r1, pc, r1
   1de08:	stm	sp, {r1, ip}
   1de0c:	mov	r0, r5
   1de10:	add	r3, r6, #304	; 0x130
   1de14:	mov	r1, #5
   1de18:	add	r2, pc, r2
   1de1c:	bl	6b60 <vcos_log_impl@plt>
   1de20:	ldr	r4, [sp, #20]
   1de24:	cmp	r4, #65536	; 0x10000
   1de28:	bne	1dc94 <vc_tv_test_mode_stop_id@@Base+0x44>
   1de2c:	mov	r7, #2
   1de30:	mov	r3, #1
   1de34:	b	1dcb8 <vc_tv_test_mode_stop_id@@Base+0x68>
   1de38:	mov	r0, r6
   1de3c:	bl	6b84 <pthread_mutex_unlock@plt>
   1de40:	mvn	r5, #0
   1de44:	b	1dd98 <vc_tv_test_mode_stop_id@@Base+0x148>
   1de48:	ldr	r3, [pc, #52]	; 1de84 <vc_tv_test_mode_stop_id@@Base+0x234>
   1de4c:	add	r3, pc, r3
   1de50:	b	1dd48 <vc_tv_test_mode_stop_id@@Base+0xf8>
   1de54:	andeq	fp, r1, ip, lsl r6
   1de58:			; <UNDEFINED> instruction: 0x0001b5b4
   1de5c:	andeq	sl, r1, r4, lsl #11
   1de60:	andeq	fp, r1, r0, lsr #10
   1de64:	andeq	r9, r0, ip, asr #32
   1de68:	andeq	fp, r1, ip, lsl #10
   1de6c:	strdeq	fp, [r1], -r0
   1de70:	andeq	r8, r0, r4, asr sl
   1de74:	andeq	r9, r0, r4, asr #1
   1de78:	andeq	r9, r0, r4, asr #32
   1de7c:	andeq	r9, r0, r8, lsl r3
   1de80:	andeq	r8, r0, r0, asr pc
   1de84:	andeq	r8, r0, r0, ror lr

0001de88 <vc_tv_test_mode_stop@@Base>:
   1de88:	ldr	r3, [pc, #8]	; 1de98 <vc_tv_test_mode_stop@@Base+0x10>
   1de8c:	add	r3, pc, r3
   1de90:	ldr	r0, [r3, #3592]	; 0xe08
   1de94:	b	1dc50 <vc_tv_test_mode_stop_id@@Base>
   1de98:	andeq	fp, r1, ip, ror #7

0001de9c <vc_tv_hdmi_ddc_read_id@@Base>:
   1de9c:	push	{r4, r5, r6, r7, r8, lr}
   1dea0:	mov	r6, r2
   1dea4:	ldr	r2, [pc, #744]	; 1e194 <vc_tv_hdmi_ddc_read_id@@Base+0x2f8>
   1dea8:	sub	sp, sp, #64	; 0x40
   1deac:	add	r2, pc, r2
   1deb0:	ldr	ip, [r2]
   1deb4:	str	r6, [sp, #36]	; 0x24
   1deb8:	cmp	ip, #4
   1debc:	mov	r4, r0
   1dec0:	mov	r7, r3
   1dec4:	str	r1, [sp, #32]
   1dec8:	bhi	1e114 <vc_tv_hdmi_ddc_read_id@@Base+0x278>
   1decc:	ldr	r5, [pc, #708]	; 1e198 <vc_tv_hdmi_ddc_read_id@@Base+0x2fc>
   1ded0:	add	r5, pc, r5
   1ded4:	ldr	r0, [r5, #24]
   1ded8:	bl	6134 <vchi_service_use@plt>
   1dedc:	mov	r3, #4
   1dee0:	mov	r2, #19
   1dee4:	ldr	r1, [r5]
   1dee8:	add	ip, sp, #20
   1deec:	cmp	r1, r3
   1def0:	str	r4, [sp, #24]
   1def4:	str	r2, [sp, #20]
   1def8:	str	r3, [sp, #44]	; 0x2c
   1defc:	str	ip, [sp, #40]	; 0x28
   1df00:	bls	1df48 <vc_tv_hdmi_ddc_read_id@@Base+0xac>
   1df04:	mov	ip, #8
   1df08:	ldr	r2, [pc, #652]	; 1e19c <vc_tv_hdmi_ddc_read_id@@Base+0x300>
   1df0c:	ldr	r3, [pc, #652]	; 1e1a0 <vc_tv_hdmi_ddc_read_id@@Base+0x304>
   1df10:	add	r2, pc, r2
   1df14:	ldr	r1, [pc, #648]	; 1e1a4 <vc_tv_hdmi_ddc_read_id@@Base+0x308>
   1df18:	str	r2, [sp, #8]
   1df1c:	ldr	r2, [pc, #644]	; 1e1a8 <vc_tv_hdmi_ddc_read_id@@Base+0x30c>
   1df20:	add	r1, pc, r1
   1df24:	add	r3, pc, r3
   1df28:	str	r1, [sp]
   1df2c:	mov	r0, r5
   1df30:	str	ip, [sp, #4]
   1df34:	add	r3, r3, #304	; 0x130
   1df38:	mov	r1, #5
   1df3c:	add	r2, pc, r2
   1df40:	bl	6b60 <vcos_log_impl@plt>
   1df44:	ldr	r4, [sp, #24]
   1df48:	cmp	r4, #65536	; 0x10000
   1df4c:	beq	1e138 <vc_tv_hdmi_ddc_read_id@@Base+0x29c>
   1df50:	ldr	r3, [sp, #20]
   1df54:	mov	r2, #4
   1df58:	orr	r3, r3, #-2147483648	; 0x80000000
   1df5c:	str	r3, [sp, #20]
   1df60:	add	r3, sp, #24
   1df64:	str	r3, [sp, #48]	; 0x30
   1df68:	mov	r8, #3
   1df6c:	mov	r3, #2
   1df70:	str	r2, [sp, #52]	; 0x34
   1df74:	mov	r0, #8
   1df78:	mvn	r2, #0
   1df7c:	ldr	r4, [pc, #552]	; 1e1ac <vc_tv_hdmi_ddc_read_id@@Base+0x310>
   1df80:	add	r1, sp, #64	; 0x40
   1df84:	add	r4, pc, r4
   1df88:	add	r3, r1, r3, lsl #3
   1df8c:	ldr	r1, [r4, #3208]	; 0xc88
   1df90:	str	r0, [r3, #-20]	; 0xffffffec
   1df94:	cmp	r1, #0
   1df98:	add	r1, sp, #32
   1df9c:	str	r1, [r3, #-24]	; 0xffffffe8
   1dfa0:	str	r2, [sp, #28]
   1dfa4:	beq	1e0f8 <vc_tv_hdmi_ddc_read_id@@Base+0x25c>
   1dfa8:	add	r5, r4, #24
   1dfac:	add	r5, r5, #3120	; 0xc30
   1dfb0:	mov	r0, r5
   1dfb4:	bl	5ffc <pthread_mutex_lock@plt>
   1dfb8:	ldr	r3, [r4, #3208]	; 0xc88
   1dfbc:	cmp	r3, #0
   1dfc0:	beq	1e184 <vc_tv_hdmi_ddc_read_id@@Base+0x2e8>
   1dfc4:	ldr	r0, [r4, #24]
   1dfc8:	bl	6134 <vchi_service_use@plt>
   1dfcc:	mov	r3, #0
   1dfd0:	ldr	r0, [r4, #24]
   1dfd4:	mov	r2, r8
   1dfd8:	str	r3, [sp]
   1dfdc:	add	r1, sp, #40	; 0x28
   1dfe0:	mov	r3, #4
   1dfe4:	bl	5cc0 <vchi_msg_queuev@plt>
   1dfe8:	subs	r5, r0, #0
   1dfec:	beq	1e164 <vc_tv_hdmi_ddc_read_id@@Base+0x2c8>
   1dff0:	ldr	r3, [r4]
   1dff4:	cmp	r3, #1
   1dff8:	bls	1e034 <vc_tv_hdmi_ddc_read_id@@Base+0x198>
   1dffc:	ldr	r3, [sp, #20]
   1e000:	cmp	r3, #26
   1e004:	bhi	1e178 <vc_tv_hdmi_ddc_read_id@@Base+0x2dc>
   1e008:	ldr	r2, [pc, #416]	; 1e1b0 <vc_tv_hdmi_ddc_read_id@@Base+0x314>
   1e00c:	add	r2, pc, r2
   1e010:	ldr	r3, [r2, r3, lsl #2]
   1e014:	mov	r2, #8
   1e018:	ldr	r0, [pc, #404]	; 1e1b4 <vc_tv_hdmi_ddc_read_id@@Base+0x318>
   1e01c:	stm	sp, {r2, r5}
   1e020:	ldr	r2, [pc, #400]	; 1e1b8 <vc_tv_hdmi_ddc_read_id@@Base+0x31c>
   1e024:	add	r0, pc, r0
   1e028:	mov	r1, #2
   1e02c:	add	r2, pc, r2
   1e030:	bl	6b60 <vcos_log_impl@plt>
   1e034:	str	r5, [sp, #28]
   1e038:	ldr	r3, [pc, #380]	; 1e1bc <vc_tv_hdmi_ddc_read_id@@Base+0x320>
   1e03c:	add	r3, pc, r3
   1e040:	ldr	r2, [r3, #3208]	; 0xc88
   1e044:	cmp	r2, #0
   1e048:	beq	1e054 <vc_tv_hdmi_ddc_read_id@@Base+0x1b8>
   1e04c:	ldr	r0, [r3, #24]
   1e050:	bl	6014 <vchi_service_release@plt>
   1e054:	ldr	r0, [pc, #356]	; 1e1c0 <vc_tv_hdmi_ddc_read_id@@Base+0x324>
   1e058:	add	r0, pc, r0
   1e05c:	add	r0, r0, #24
   1e060:	add	r0, r0, #3120	; 0xc30
   1e064:	bl	6b84 <pthread_mutex_unlock@plt>
   1e068:	ldr	r0, [sp, #28]
   1e06c:	cmp	r0, #0
   1e070:	bne	1e0f8 <vc_tv_hdmi_ddc_read_id@@Base+0x25c>
   1e074:	ldr	r0, [pc, #328]	; 1e1c4 <vc_tv_hdmi_ddc_read_id@@Base+0x328>
   1e078:	add	r0, pc, r0
   1e07c:	ldr	r3, [r0]
   1e080:	cmp	r3, #4
   1e084:	bhi	1e144 <vc_tv_hdmi_ddc_read_id@@Base+0x2a8>
   1e088:	cmp	r7, #0
   1e08c:	beq	1e0d4 <vc_tv_hdmi_ddc_read_id@@Base+0x238>
   1e090:	mov	r3, #0
   1e094:	ldr	r5, [pc, #300]	; 1e1c8 <vc_tv_hdmi_ddc_read_id@@Base+0x32c>
   1e098:	mov	r1, r7
   1e09c:	add	r5, pc, r5
   1e0a0:	ldr	r0, [r5, #24]
   1e0a4:	mov	r2, r6
   1e0a8:	str	r3, [sp]
   1e0ac:	mov	r3, #1
   1e0b0:	bl	6248 <vchi_bulk_queue_receive@plt>
   1e0b4:	mov	r4, r0
   1e0b8:	ldr	r0, [r5, #24]
   1e0bc:	bl	6014 <vchi_service_release@plt>
   1e0c0:	cmp	r4, #0
   1e0c4:	moveq	r0, r6
   1e0c8:	movne	r0, #0
   1e0cc:	add	sp, sp, #64	; 0x40
   1e0d0:	pop	{r4, r5, r6, r7, r8, pc}
   1e0d4:	ldr	r0, [pc, #240]	; 1e1cc <vc_tv_hdmi_ddc_read_id@@Base+0x330>
   1e0d8:	add	r0, pc, r0
   1e0dc:	ldr	r3, [r0]
   1e0e0:	cmp	r3, #1
   1e0e4:	bls	1e0f8 <vc_tv_hdmi_ddc_read_id@@Base+0x25c>
   1e0e8:	ldr	r2, [pc, #224]	; 1e1d0 <vc_tv_hdmi_ddc_read_id@@Base+0x334>
   1e0ec:	mov	r1, #2
   1e0f0:	add	r2, pc, r2
   1e0f4:	bl	6b60 <vcos_log_impl@plt>
   1e0f8:	ldr	r3, [pc, #212]	; 1e1d4 <vc_tv_hdmi_ddc_read_id@@Base+0x338>
   1e0fc:	add	r3, pc, r3
   1e100:	ldr	r0, [r3, #24]
   1e104:	bl	6014 <vchi_service_release@plt>
   1e108:	mov	r0, #0
   1e10c:	add	sp, sp, #64	; 0x40
   1e110:	pop	{r4, r5, r6, r7, r8, pc}
   1e114:	ldr	r3, [pc, #188]	; 1e1d8 <vc_tv_hdmi_ddc_read_id@@Base+0x33c>
   1e118:	mov	r0, r2
   1e11c:	ldr	r2, [pc, #184]	; 1e1dc <vc_tv_hdmi_ddc_read_id@@Base+0x340>
   1e120:	add	r3, pc, r3
   1e124:	add	r3, r3, #980	; 0x3d4
   1e128:	mov	r1, #5
   1e12c:	add	r2, pc, r2
   1e130:	bl	6b60 <vcos_log_impl@plt>
   1e134:	b	1decc <vc_tv_hdmi_ddc_read_id@@Base+0x30>
   1e138:	mov	r8, #2
   1e13c:	mov	r3, #1
   1e140:	b	1df74 <vc_tv_hdmi_ddc_read_id@@Base+0xd8>
   1e144:	ldr	r3, [pc, #148]	; 1e1e0 <vc_tv_hdmi_ddc_read_id@@Base+0x344>
   1e148:	ldr	r2, [pc, #148]	; 1e1e4 <vc_tv_hdmi_ddc_read_id@@Base+0x348>
   1e14c:	add	r3, pc, r3
   1e150:	add	r3, r3, #596	; 0x254
   1e154:	mov	r1, #5
   1e158:	add	r2, pc, r2
   1e15c:	bl	6b60 <vcos_log_impl@plt>
   1e160:	b	1e088 <vc_tv_hdmi_ddc_read_id@@Base+0x1ec>
   1e164:	mov	r2, r5
   1e168:	add	r0, sp, #28
   1e16c:	mov	r1, #4
   1e170:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1e174:	b	1e038 <vc_tv_hdmi_ddc_read_id@@Base+0x19c>
   1e178:	ldr	r3, [pc, #104]	; 1e1e8 <vc_tv_hdmi_ddc_read_id@@Base+0x34c>
   1e17c:	add	r3, pc, r3
   1e180:	b	1e014 <vc_tv_hdmi_ddc_read_id@@Base+0x178>
   1e184:	mov	r0, r5
   1e188:	bl	6b84 <pthread_mutex_unlock@plt>
   1e18c:	ldr	r0, [sp, #28]
   1e190:	b	1e06c <vc_tv_hdmi_ddc_read_id@@Base+0x1d0>
   1e194:	andeq	fp, r1, ip, asr #7
   1e198:	andeq	fp, r1, r8, lsr #7
   1e19c:	muleq	r0, r0, lr
   1e1a0:	ldrdeq	r8, [r0], -ip
   1e1a4:	andeq	r9, r0, ip, lsl #4
   1e1a8:	andeq	r8, r0, ip, lsr #28
   1e1ac:	strdeq	fp, [r1], -r4
   1e1b0:			; <UNDEFINED> instruction: 0x0001a2b8
   1e1b4:	andeq	fp, r1, r4, asr r2
   1e1b8:	andeq	r8, r0, r0, lsl #27
   1e1bc:	andeq	fp, r1, ip, lsr r2
   1e1c0:	andeq	fp, r1, r0, lsr #4
   1e1c4:	andeq	fp, r1, r0, lsl #4
   1e1c8:	ldrdeq	fp, [r1], -ip
   1e1cc:	andeq	fp, r1, r0, lsr #3
   1e1d0:	andeq	r8, r0, r4, asr #27
   1e1d4:	andeq	fp, r1, ip, ror r1
   1e1d8:	andeq	r8, r0, r0, ror #13
   1e1dc:	andeq	r8, r0, r0, asr sp
   1e1e0:			; <UNDEFINED> instruction: 0x000086b4
   1e1e4:	andeq	r8, r0, r4, lsr #26
   1e1e8:	andeq	r8, r0, r0, asr #22

0001e1ec <vc_tv_hdmi_ddc_read@@Base>:
   1e1ec:	push	{lr}		; (str lr, [sp, #-4]!)
   1e1f0:	mov	lr, r1
   1e1f4:	ldr	ip, [pc, #24]	; 1e214 <vc_tv_hdmi_ddc_read@@Base+0x28>
   1e1f8:	mov	r3, r2
   1e1fc:	add	ip, pc, ip
   1e200:	mov	r1, r0
   1e204:	mov	r2, lr
   1e208:	ldr	r0, [ip, #3592]	; 0xe08
   1e20c:	pop	{lr}		; (ldr lr, [sp], #4)
   1e210:	b	1de9c <vc_tv_hdmi_ddc_read_id@@Base>
   1e214:	andeq	fp, r1, ip, ror r0

0001e218 <vc_tv_hdmi_set_attached_id@@Base>:
   1e218:	push	{r4, r5, r6, r7, lr}
   1e21c:	ldr	r5, [pc, #520]	; 1e42c <vc_tv_hdmi_set_attached_id@@Base+0x214>
   1e220:	sub	sp, sp, #60	; 0x3c
   1e224:	add	r5, pc, r5
   1e228:	ldr	r3, [r5]
   1e22c:	mov	r4, r0
   1e230:	cmp	r3, #4
   1e234:	str	r1, [sp, #20]
   1e238:	bhi	1e378 <vc_tv_hdmi_set_attached_id@@Base+0x160>
   1e23c:	mov	r3, #4
   1e240:	mov	r2, #20
   1e244:	str	r3, [sp, #36]	; 0x24
   1e248:	add	r3, sp, #24
   1e24c:	str	r0, [sp, #28]
   1e250:	str	r2, [sp, #24]
   1e254:	str	r3, [sp, #32]
   1e258:	cmp	r4, #65536	; 0x10000
   1e25c:	beq	1e404 <vc_tv_hdmi_set_attached_id@@Base+0x1ec>
   1e260:	mov	r2, #4
   1e264:	mov	r7, #3
   1e268:	mov	r1, #2
   1e26c:	ldr	r3, [sp, #24]
   1e270:	str	r2, [sp, #44]	; 0x2c
   1e274:	orr	r3, r3, #-2147483648	; 0x80000000
   1e278:	str	r3, [sp, #24]
   1e27c:	add	r3, sp, #28
   1e280:	str	r3, [sp, #40]	; 0x28
   1e284:	mov	r6, #4
   1e288:	ldr	r4, [pc, #416]	; 1e430 <vc_tv_hdmi_set_attached_id@@Base+0x218>
   1e28c:	add	r3, sp, #56	; 0x38
   1e290:	add	r4, pc, r4
   1e294:	add	r1, r3, r1, lsl #3
   1e298:	ldr	r3, [r4, #3208]	; 0xc88
   1e29c:	add	r0, sp, #20
   1e2a0:	cmp	r3, #0
   1e2a4:	str	r0, [r1, #-24]	; 0xffffffe8
   1e2a8:	str	r6, [r1, #-20]	; 0xffffffec
   1e2ac:	beq	1e418 <vc_tv_hdmi_set_attached_id@@Base+0x200>
   1e2b0:	add	r5, r4, #24
   1e2b4:	add	r5, r5, #3120	; 0xc30
   1e2b8:	mov	r0, r5
   1e2bc:	bl	5ffc <pthread_mutex_lock@plt>
   1e2c0:	ldr	r3, [r4, #3208]	; 0xc88
   1e2c4:	cmp	r3, #0
   1e2c8:	beq	1e410 <vc_tv_hdmi_set_attached_id@@Base+0x1f8>
   1e2cc:	ldr	r0, [r4, #24]
   1e2d0:	bl	6134 <vchi_service_use@plt>
   1e2d4:	mov	r1, #0
   1e2d8:	ldr	r0, [r4, #24]
   1e2dc:	mov	r2, r7
   1e2e0:	str	r1, [sp]
   1e2e4:	mov	r3, r6
   1e2e8:	add	r1, sp, #32
   1e2ec:	bl	5cc0 <vchi_msg_queuev@plt>
   1e2f0:	subs	r5, r0, #0
   1e2f4:	beq	1e33c <vc_tv_hdmi_set_attached_id@@Base+0x124>
   1e2f8:	ldr	r3, [r4]
   1e2fc:	cmp	r3, #1
   1e300:	bls	1e33c <vc_tv_hdmi_set_attached_id@@Base+0x124>
   1e304:	ldr	r3, [sp, #24]
   1e308:	cmp	r3, #26
   1e30c:	bhi	1e420 <vc_tv_hdmi_set_attached_id@@Base+0x208>
   1e310:	ldr	r2, [pc, #284]	; 1e434 <vc_tv_hdmi_set_attached_id@@Base+0x21c>
   1e314:	add	r2, pc, r2
   1e318:	ldr	r3, [r2, r3, lsl #2]
   1e31c:	mov	r2, #4
   1e320:	ldr	r0, [pc, #272]	; 1e438 <vc_tv_hdmi_set_attached_id@@Base+0x220>
   1e324:	stm	sp, {r2, r5}
   1e328:	ldr	r2, [pc, #268]	; 1e43c <vc_tv_hdmi_set_attached_id@@Base+0x224>
   1e32c:	add	r0, pc, r0
   1e330:	mov	r1, #2
   1e334:	add	r2, pc, r2
   1e338:	bl	6b60 <vcos_log_impl@plt>
   1e33c:	ldr	r3, [pc, #252]	; 1e440 <vc_tv_hdmi_set_attached_id@@Base+0x228>
   1e340:	add	r3, pc, r3
   1e344:	ldr	r2, [r3, #3208]	; 0xc88
   1e348:	cmp	r2, #0
   1e34c:	beq	1e358 <vc_tv_hdmi_set_attached_id@@Base+0x140>
   1e350:	ldr	r0, [r3, #24]
   1e354:	bl	6014 <vchi_service_release@plt>
   1e358:	ldr	r0, [pc, #228]	; 1e444 <vc_tv_hdmi_set_attached_id@@Base+0x22c>
   1e35c:	add	r0, pc, r0
   1e360:	add	r0, r0, #24
   1e364:	add	r0, r0, #3120	; 0xc30
   1e368:	bl	6b84 <pthread_mutex_unlock@plt>
   1e36c:	mov	r0, r5
   1e370:	add	sp, sp, #60	; 0x3c
   1e374:	pop	{r4, r5, r6, r7, pc}
   1e378:	ldr	r6, [pc, #200]	; 1e448 <vc_tv_hdmi_set_attached_id@@Base+0x230>
   1e37c:	ldr	r2, [pc, #200]	; 1e44c <vc_tv_hdmi_set_attached_id@@Base+0x234>
   1e380:	add	r6, pc, r6
   1e384:	str	r1, [sp]
   1e388:	add	r3, r6, #1004	; 0x3ec
   1e38c:	mov	r1, #5
   1e390:	add	r2, pc, r2
   1e394:	mov	r0, r5
   1e398:	bl	6b60 <vcos_log_impl@plt>
   1e39c:	mov	r2, #20
   1e3a0:	mov	r3, #4
   1e3a4:	ldr	r1, [r5]
   1e3a8:	str	r2, [sp, #24]
   1e3ac:	cmp	r1, r3
   1e3b0:	add	r2, sp, #24
   1e3b4:	str	r4, [sp, #28]
   1e3b8:	str	r3, [sp, #36]	; 0x24
   1e3bc:	str	r2, [sp, #32]
   1e3c0:	bls	1e258 <vc_tv_hdmi_set_attached_id@@Base+0x40>
   1e3c4:	ldr	r2, [pc, #132]	; 1e450 <vc_tv_hdmi_set_attached_id@@Base+0x238>
   1e3c8:	ldr	r1, [pc, #132]	; 1e454 <vc_tv_hdmi_set_attached_id@@Base+0x23c>
   1e3cc:	add	r2, pc, r2
   1e3d0:	str	r2, [sp, #8]
   1e3d4:	ldr	r2, [pc, #124]	; 1e458 <vc_tv_hdmi_set_attached_id@@Base+0x240>
   1e3d8:	add	r1, pc, r1
   1e3dc:	str	r3, [sp, #4]
   1e3e0:	str	r1, [sp]
   1e3e4:	mov	r0, r5
   1e3e8:	add	r3, r6, #304	; 0x130
   1e3ec:	mov	r1, #5
   1e3f0:	add	r2, pc, r2
   1e3f4:	bl	6b60 <vcos_log_impl@plt>
   1e3f8:	ldr	r4, [sp, #28]
   1e3fc:	cmp	r4, #65536	; 0x10000
   1e400:	bne	1e260 <vc_tv_hdmi_set_attached_id@@Base+0x48>
   1e404:	mov	r7, #2
   1e408:	mov	r1, #1
   1e40c:	b	1e284 <vc_tv_hdmi_set_attached_id@@Base+0x6c>
   1e410:	mov	r0, r5
   1e414:	bl	6b84 <pthread_mutex_unlock@plt>
   1e418:	mvn	r5, #0
   1e41c:	b	1e36c <vc_tv_hdmi_set_attached_id@@Base+0x154>
   1e420:	ldr	r3, [pc, #52]	; 1e45c <vc_tv_hdmi_set_attached_id@@Base+0x244>
   1e424:	add	r3, pc, r3
   1e428:	b	1e31c <vc_tv_hdmi_set_attached_id@@Base+0x104>
   1e42c:	andeq	fp, r1, r4, asr r0
   1e430:	andeq	sl, r1, r8, ror #31
   1e434:			; <UNDEFINED> instruction: 0x00019fb0
   1e438:	andeq	sl, r1, ip, asr #30
   1e43c:	andeq	r8, r0, r8, ror sl
   1e440:	andeq	sl, r1, r8, lsr pc
   1e444:	andeq	sl, r1, ip, lsl pc
   1e448:	andeq	r8, r0, r0, lsl #9
   1e44c:	andeq	r8, r0, r8, lsr #27
   1e450:	andeq	r8, r0, r0, ror sl
   1e454:	andeq	r8, r0, r4, ror sp
   1e458:	andeq	r8, r0, r8, ror r9
   1e45c:	muleq	r0, r8, r8

0001e460 <vc_tv_hdmi_set_attached@@Base>:
   1e460:	ldr	r3, [pc, #12]	; 1e474 <vc_tv_hdmi_set_attached@@Base+0x14>
   1e464:	mov	r1, r0
   1e468:	add	r3, pc, r3
   1e46c:	ldr	r0, [r3, #3592]	; 0xe08
   1e470:	b	1e218 <vc_tv_hdmi_set_attached_id@@Base>
   1e474:	andeq	sl, r1, r0, lsl lr

0001e478 <vc_tv_hdmi_set_property_id@@Base>:
   1e478:	cmp	r1, #0
   1e47c:	beq	1e6e0 <vc_tv_hdmi_set_property_id@@Base+0x268>
   1e480:	push	{r4, r5, r6, r7, lr}
   1e484:	mov	ip, r1
   1e488:	sub	sp, sp, #68	; 0x44
   1e48c:	add	r6, sp, #28
   1e490:	mov	r3, r6
   1e494:	ldr	r5, [pc, #588]	; 1e6e8 <vc_tv_hdmi_set_property_id@@Base+0x270>
   1e498:	mov	r4, r0
   1e49c:	add	r5, pc, r5
   1e4a0:	ldr	lr, [r5]
   1e4a4:	ldr	r0, [r1]
   1e4a8:	ldr	r2, [ip, #8]
   1e4ac:	ldr	r1, [r1, #4]
   1e4b0:	cmp	lr, #4
   1e4b4:	stmia	r3!, {r0, r1, r2}
   1e4b8:	bhi	1e600 <vc_tv_hdmi_set_property_id@@Base+0x188>
   1e4bc:	mov	r3, #4
   1e4c0:	mov	r2, #21
   1e4c4:	str	r3, [sp, #44]	; 0x2c
   1e4c8:	add	r3, sp, #16
   1e4cc:	str	r4, [sp, #20]
   1e4d0:	str	r2, [sp, #16]
   1e4d4:	str	r3, [sp, #40]	; 0x28
   1e4d8:	cmp	r4, #65536	; 0x10000
   1e4dc:	beq	1e6a4 <vc_tv_hdmi_set_property_id@@Base+0x22c>
   1e4e0:	ldr	r3, [sp, #16]
   1e4e4:	mov	r2, #4
   1e4e8:	orr	r3, r3, #-2147483648	; 0x80000000
   1e4ec:	str	r3, [sp, #16]
   1e4f0:	add	r3, sp, #20
   1e4f4:	str	r3, [sp, #48]	; 0x30
   1e4f8:	mov	r7, #3
   1e4fc:	mov	r3, #2
   1e500:	str	r2, [sp, #52]	; 0x34
   1e504:	mov	r2, #12
   1e508:	mvn	r0, #0
   1e50c:	ldr	r4, [pc, #472]	; 1e6ec <vc_tv_hdmi_set_property_id@@Base+0x274>
   1e510:	add	r1, sp, #64	; 0x40
   1e514:	add	r4, pc, r4
   1e518:	add	r3, r1, r3, lsl #3
   1e51c:	ldr	r1, [r4, #3208]	; 0xc88
   1e520:	str	r6, [r3, #-24]	; 0xffffffe8
   1e524:	cmp	r1, #0
   1e528:	str	r2, [r3, #-20]	; 0xffffffec
   1e52c:	str	r0, [sp, #24]
   1e530:	beq	1e5f8 <vc_tv_hdmi_set_property_id@@Base+0x180>
   1e534:	add	r5, r4, #24
   1e538:	add	r5, r5, #3120	; 0xc30
   1e53c:	mov	r0, r5
   1e540:	bl	5ffc <pthread_mutex_lock@plt>
   1e544:	ldr	r3, [r4, #3208]	; 0xc88
   1e548:	cmp	r3, #0
   1e54c:	beq	1e6d0 <vc_tv_hdmi_set_property_id@@Base+0x258>
   1e550:	ldr	r0, [r4, #24]
   1e554:	bl	6134 <vchi_service_use@plt>
   1e558:	mov	r3, #0
   1e55c:	ldr	r0, [r4, #24]
   1e560:	mov	r2, r7
   1e564:	str	r3, [sp]
   1e568:	add	r1, sp, #40	; 0x28
   1e56c:	mov	r3, #4
   1e570:	bl	5cc0 <vchi_msg_queuev@plt>
   1e574:	subs	r5, r0, #0
   1e578:	beq	1e6b0 <vc_tv_hdmi_set_property_id@@Base+0x238>
   1e57c:	ldr	r3, [r4]
   1e580:	cmp	r3, #1
   1e584:	bls	1e5c0 <vc_tv_hdmi_set_property_id@@Base+0x148>
   1e588:	ldr	r3, [sp, #16]
   1e58c:	cmp	r3, #26
   1e590:	bhi	1e6c4 <vc_tv_hdmi_set_property_id@@Base+0x24c>
   1e594:	ldr	r2, [pc, #340]	; 1e6f0 <vc_tv_hdmi_set_property_id@@Base+0x278>
   1e598:	add	r2, pc, r2
   1e59c:	ldr	r3, [r2, r3, lsl #2]
   1e5a0:	mov	r2, #12
   1e5a4:	ldr	r0, [pc, #328]	; 1e6f4 <vc_tv_hdmi_set_property_id@@Base+0x27c>
   1e5a8:	stm	sp, {r2, r5}
   1e5ac:	ldr	r2, [pc, #324]	; 1e6f8 <vc_tv_hdmi_set_property_id@@Base+0x280>
   1e5b0:	add	r0, pc, r0
   1e5b4:	mov	r1, #2
   1e5b8:	add	r2, pc, r2
   1e5bc:	bl	6b60 <vcos_log_impl@plt>
   1e5c0:	str	r5, [sp, #24]
   1e5c4:	ldr	r3, [pc, #304]	; 1e6fc <vc_tv_hdmi_set_property_id@@Base+0x284>
   1e5c8:	add	r3, pc, r3
   1e5cc:	ldr	r2, [r3, #3208]	; 0xc88
   1e5d0:	cmp	r2, #0
   1e5d4:	beq	1e5e0 <vc_tv_hdmi_set_property_id@@Base+0x168>
   1e5d8:	ldr	r0, [r3, #24]
   1e5dc:	bl	6014 <vchi_service_release@plt>
   1e5e0:	ldr	r0, [pc, #280]	; 1e700 <vc_tv_hdmi_set_property_id@@Base+0x288>
   1e5e4:	add	r0, pc, r0
   1e5e8:	add	r0, r0, #24
   1e5ec:	add	r0, r0, #3120	; 0xc30
   1e5f0:	bl	6b84 <pthread_mutex_unlock@plt>
   1e5f4:	ldr	r0, [sp, #24]
   1e5f8:	add	sp, sp, #68	; 0x44
   1e5fc:	pop	{r4, r5, r6, r7, pc}
   1e600:	ldr	r3, [ip]
   1e604:	ldr	r7, [pc, #248]	; 1e704 <vc_tv_hdmi_set_property_id@@Base+0x28c>
   1e608:	str	r3, [sp]
   1e60c:	ldr	r2, [ip, #4]
   1e610:	add	r7, pc, r7
   1e614:	str	r2, [sp, #4]
   1e618:	ldr	r2, [ip, #8]
   1e61c:	add	r3, r7, #1024	; 0x400
   1e620:	str	r2, [sp, #8]
   1e624:	ldr	r2, [pc, #220]	; 1e708 <vc_tv_hdmi_set_property_id@@Base+0x290>
   1e628:	add	r3, r3, #8
   1e62c:	mov	r1, #5
   1e630:	add	r2, pc, r2
   1e634:	mov	r0, r5
   1e638:	bl	6b60 <vcos_log_impl@plt>
   1e63c:	mov	r2, #21
   1e640:	mov	r3, #4
   1e644:	ldr	r1, [r5]
   1e648:	str	r2, [sp, #16]
   1e64c:	cmp	r1, r3
   1e650:	add	r2, sp, #16
   1e654:	str	r4, [sp, #20]
   1e658:	str	r3, [sp, #44]	; 0x2c
   1e65c:	str	r2, [sp, #40]	; 0x28
   1e660:	bls	1e4d8 <vc_tv_hdmi_set_property_id@@Base+0x60>
   1e664:	mov	ip, #12
   1e668:	ldr	r2, [pc, #156]	; 1e70c <vc_tv_hdmi_set_property_id@@Base+0x294>
   1e66c:	ldr	r1, [pc, #156]	; 1e710 <vc_tv_hdmi_set_property_id@@Base+0x298>
   1e670:	add	r2, pc, r2
   1e674:	str	r2, [sp, #8]
   1e678:	ldr	r2, [pc, #148]	; 1e714 <vc_tv_hdmi_set_property_id@@Base+0x29c>
   1e67c:	add	r1, pc, r1
   1e680:	stm	sp, {r1, ip}
   1e684:	mov	r0, r5
   1e688:	add	r3, r7, #304	; 0x130
   1e68c:	mov	r1, #5
   1e690:	add	r2, pc, r2
   1e694:	bl	6b60 <vcos_log_impl@plt>
   1e698:	ldr	r4, [sp, #20]
   1e69c:	cmp	r4, #65536	; 0x10000
   1e6a0:	bne	1e4e0 <vc_tv_hdmi_set_property_id@@Base+0x68>
   1e6a4:	mov	r7, #2
   1e6a8:	mov	r3, #1
   1e6ac:	b	1e504 <vc_tv_hdmi_set_property_id@@Base+0x8c>
   1e6b0:	mov	r2, r5
   1e6b4:	add	r0, sp, #24
   1e6b8:	mov	r1, #4
   1e6bc:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1e6c0:	b	1e5c4 <vc_tv_hdmi_set_property_id@@Base+0x14c>
   1e6c4:	ldr	r3, [pc, #76]	; 1e718 <vc_tv_hdmi_set_property_id@@Base+0x2a0>
   1e6c8:	add	r3, pc, r3
   1e6cc:	b	1e5a0 <vc_tv_hdmi_set_property_id@@Base+0x128>
   1e6d0:	mov	r0, r5
   1e6d4:	bl	6b84 <pthread_mutex_unlock@plt>
   1e6d8:	ldr	r0, [sp, #24]
   1e6dc:	b	1e5f8 <vc_tv_hdmi_set_property_id@@Base+0x180>
   1e6e0:	mvn	r0, #0
   1e6e4:	bx	lr
   1e6e8:	ldrdeq	sl, [r1], -ip
   1e6ec:	andeq	sl, r1, r4, ror #26
   1e6f0:	andeq	r9, r1, ip, lsr #26
   1e6f4:	andeq	sl, r1, r8, asr #25
   1e6f8:	strdeq	r8, [r0], -r4
   1e6fc:			; <UNDEFINED> instruction: 0x0001acb0
   1e700:	muleq	r1, r4, ip
   1e704:	strdeq	r8, [r0], -r0
   1e708:	andeq	r8, r0, ip, lsr #22
   1e70c:	andeq	r8, r0, r0, lsr r7
   1e710:	andeq	r8, r0, r0, lsl #22
   1e714:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   1e718:	strdeq	r8, [r0], -r4

0001e71c <vc_tv_hdmi_set_property@@Base>:
   1e71c:	ldr	r3, [pc, #12]	; 1e730 <vc_tv_hdmi_set_property@@Base+0x14>
   1e720:	mov	r1, r0
   1e724:	add	r3, pc, r3
   1e728:	ldr	r0, [r3, #3592]	; 0xe08
   1e72c:	b	1e478 <vc_tv_hdmi_set_property_id@@Base>
   1e730:	andeq	sl, r1, r4, asr fp

0001e734 <vc_tv_hdmi_get_property_id@@Base>:
   1e734:	push	{r4, r5, r6, r7, r8, lr}
   1e738:	cmp	r1, #0
   1e73c:	sub	sp, sp, #64	; 0x40
   1e740:	beq	1ea48 <vc_tv_hdmi_get_property_id@@Base+0x314>
   1e744:	mov	r4, r1
   1e748:	mov	r5, #0
   1e74c:	mov	r1, #5
   1e750:	ldr	r7, [pc, #760]	; 1ea50 <vc_tv_hdmi_get_property_id@@Base+0x31c>
   1e754:	ldr	r2, [r4]
   1e758:	add	r7, pc, r7
   1e75c:	ldr	ip, [r7]
   1e760:	mov	r6, r0
   1e764:	cmp	ip, #4
   1e768:	str	r5, [sp, #24]
   1e76c:	str	r5, [sp, #32]
   1e770:	str	r5, [sp, #36]	; 0x24
   1e774:	str	r5, [r4, #8]
   1e778:	str	r5, [r4, #4]
   1e77c:	str	r1, [sp, #28]
   1e780:	str	r2, [sp, #8]
   1e784:	bhi	1e8bc <vc_tv_hdmi_get_property_id@@Base+0x188>
   1e788:	mov	r3, #22
   1e78c:	mov	r2, #4
   1e790:	str	r3, [sp, #12]
   1e794:	cmp	r0, #65536	; 0x10000
   1e798:	add	r3, sp, #12
   1e79c:	str	r0, [sp, #16]
   1e7a0:	str	r2, [sp, #44]	; 0x2c
   1e7a4:	str	r3, [sp, #40]	; 0x28
   1e7a8:	beq	1e970 <vc_tv_hdmi_get_property_id@@Base+0x23c>
   1e7ac:	mov	r3, #-2147483626	; 0x80000016
   1e7b0:	mov	r7, #3
   1e7b4:	str	r3, [sp, #12]
   1e7b8:	add	r3, sp, #16
   1e7bc:	str	r3, [sp, #48]	; 0x30
   1e7c0:	add	r3, sp, #8
   1e7c4:	str	r2, [sp, #52]	; 0x34
   1e7c8:	str	r2, [sp, #60]	; 0x3c
   1e7cc:	str	r5, [sp, #20]
   1e7d0:	str	r3, [sp, #56]	; 0x38
   1e7d4:	ldr	r5, [pc, #632]	; 1ea54 <vc_tv_hdmi_get_property_id@@Base+0x320>
   1e7d8:	add	r5, pc, r5
   1e7dc:	ldr	r3, [r5, #3208]	; 0xc88
   1e7e0:	cmp	r3, #0
   1e7e4:	beq	1e8a0 <vc_tv_hdmi_get_property_id@@Base+0x16c>
   1e7e8:	add	r6, r5, #24
   1e7ec:	add	r6, r6, #3120	; 0xc30
   1e7f0:	mov	r0, r6
   1e7f4:	bl	5ffc <pthread_mutex_lock@plt>
   1e7f8:	ldr	r3, [r5, #3208]	; 0xc88
   1e7fc:	cmp	r3, #0
   1e800:	beq	1e898 <vc_tv_hdmi_get_property_id@@Base+0x164>
   1e804:	ldr	r0, [r5, #24]
   1e808:	bl	6134 <vchi_service_use@plt>
   1e80c:	mov	r3, #0
   1e810:	ldr	r0, [r5, #24]
   1e814:	mov	r2, r7
   1e818:	str	r3, [sp]
   1e81c:	add	r1, sp, #40	; 0x28
   1e820:	mov	r3, #4
   1e824:	bl	5cc0 <vchi_msg_queuev@plt>
   1e828:	subs	r7, r0, #0
   1e82c:	beq	1e9e8 <vc_tv_hdmi_get_property_id@@Base+0x2b4>
   1e830:	ldr	r3, [r5]
   1e834:	cmp	r3, #1
   1e838:	bls	1e874 <vc_tv_hdmi_get_property_id@@Base+0x140>
   1e83c:	ldr	r3, [sp, #12]
   1e840:	cmp	r3, #26
   1e844:	bhi	1e9dc <vc_tv_hdmi_get_property_id@@Base+0x2a8>
   1e848:	ldr	r2, [pc, #520]	; 1ea58 <vc_tv_hdmi_get_property_id@@Base+0x324>
   1e84c:	add	r2, pc, r2
   1e850:	ldr	r3, [r2, r3, lsl #2]
   1e854:	mov	r2, #4
   1e858:	ldr	r0, [pc, #508]	; 1ea5c <vc_tv_hdmi_get_property_id@@Base+0x328>
   1e85c:	stm	sp, {r2, r7}
   1e860:	ldr	r2, [pc, #504]	; 1ea60 <vc_tv_hdmi_get_property_id@@Base+0x32c>
   1e864:	add	r0, pc, r0
   1e868:	mov	r1, #2
   1e86c:	add	r2, pc, r2
   1e870:	bl	6b60 <vcos_log_impl@plt>
   1e874:	ldr	r3, [pc, #488]	; 1ea64 <vc_tv_hdmi_get_property_id@@Base+0x330>
   1e878:	add	r3, pc, r3
   1e87c:	ldr	r2, [r3, #3208]	; 0xc88
   1e880:	cmp	r2, #0
   1e884:	bne	1e9a4 <vc_tv_hdmi_get_property_id@@Base+0x270>
   1e888:	add	r0, r3, #24
   1e88c:	add	r0, r0, #3120	; 0xc30
   1e890:	bl	6b84 <pthread_mutex_unlock@plt>
   1e894:	b	1e8b0 <vc_tv_hdmi_get_property_id@@Base+0x17c>
   1e898:	mov	r0, r6
   1e89c:	bl	6b84 <pthread_mutex_unlock@plt>
   1e8a0:	mov	r7, #0
   1e8a4:	ldr	r2, [sp, #32]
   1e8a8:	ldr	r3, [sp, #36]	; 0x24
   1e8ac:	stmib	r4, {r2, r3}
   1e8b0:	mov	r0, r7
   1e8b4:	add	sp, sp, #64	; 0x40
   1e8b8:	pop	{r4, r5, r6, r7, r8, pc}
   1e8bc:	ldr	r3, [pc, #420]	; 1ea68 <vc_tv_hdmi_get_property_id@@Base+0x334>
   1e8c0:	str	r2, [sp]
   1e8c4:	add	r3, pc, r3
   1e8c8:	ldr	r2, [pc, #412]	; 1ea6c <vc_tv_hdmi_get_property_id@@Base+0x338>
   1e8cc:	add	r3, r3, #1056	; 0x420
   1e8d0:	add	r3, r3, #4
   1e8d4:	add	r2, pc, r2
   1e8d8:	mov	r0, r7
   1e8dc:	bl	6b60 <vcos_log_impl@plt>
   1e8e0:	mov	r2, #22
   1e8e4:	mov	r3, #4
   1e8e8:	str	r2, [sp, #12]
   1e8ec:	cmp	r6, #65536	; 0x10000
   1e8f0:	add	r2, sp, #12
   1e8f4:	ldr	ip, [r7]
   1e8f8:	str	r6, [sp, #16]
   1e8fc:	str	r3, [sp, #44]	; 0x2c
   1e900:	str	r2, [sp, #40]	; 0x28
   1e904:	beq	1e970 <vc_tv_hdmi_get_property_id@@Base+0x23c>
   1e908:	mov	r2, #-2147483626	; 0x80000016
   1e90c:	cmp	ip, r3
   1e910:	str	r3, [sp, #52]	; 0x34
   1e914:	str	r3, [sp, #60]	; 0x3c
   1e918:	add	r3, sp, #16
   1e91c:	str	r3, [sp, #48]	; 0x30
   1e920:	add	r3, sp, #8
   1e924:	mov	r7, #3
   1e928:	str	r5, [sp, #20]
   1e92c:	str	r2, [sp, #12]
   1e930:	str	r3, [sp, #56]	; 0x38
   1e934:	bls	1e7d4 <vc_tv_hdmi_get_property_id@@Base+0xa0>
   1e938:	ldr	r1, [pc, #304]	; 1ea70 <vc_tv_hdmi_get_property_id@@Base+0x33c>
   1e93c:	add	r1, pc, r1
   1e940:	mov	r2, #4
   1e944:	ldr	r3, [pc, #296]	; 1ea74 <vc_tv_hdmi_get_property_id@@Base+0x340>
   1e948:	stm	sp, {r1, r2}
   1e94c:	ldr	r0, [pc, #292]	; 1ea78 <vc_tv_hdmi_get_property_id@@Base+0x344>
   1e950:	ldr	r2, [pc, #292]	; 1ea7c <vc_tv_hdmi_get_property_id@@Base+0x348>
   1e954:	add	r3, pc, r3
   1e958:	add	r3, r3, #84	; 0x54
   1e95c:	add	r0, pc, r0
   1e960:	mov	r1, #5
   1e964:	add	r2, pc, r2
   1e968:	bl	6b60 <vcos_log_impl@plt>
   1e96c:	b	1e7d4 <vc_tv_hdmi_get_property_id@@Base+0xa0>
   1e970:	mov	r2, #4
   1e974:	mov	r3, #0
   1e978:	cmp	ip, r2
   1e97c:	str	r3, [sp, #20]
   1e980:	add	r3, sp, #8
   1e984:	mov	r7, #2
   1e988:	str	r2, [sp, #52]	; 0x34
   1e98c:	str	r3, [sp, #48]	; 0x30
   1e990:	bls	1e7d4 <vc_tv_hdmi_get_property_id@@Base+0xa0>
   1e994:	ldr	r1, [pc, #228]	; 1ea80 <vc_tv_hdmi_get_property_id@@Base+0x34c>
   1e998:	add	r1, pc, r1
   1e99c:	b	1e940 <vc_tv_hdmi_get_property_id@@Base+0x20c>
   1e9a0:	mov	r7, r8
   1e9a4:	ldr	r3, [pc, #216]	; 1ea84 <vc_tv_hdmi_get_property_id@@Base+0x350>
   1e9a8:	add	r3, pc, r3
   1e9ac:	ldr	r0, [r3, #24]
   1e9b0:	bl	6014 <vchi_service_release@plt>
   1e9b4:	ldr	r0, [pc, #204]	; 1ea88 <vc_tv_hdmi_get_property_id@@Base+0x354>
   1e9b8:	add	r0, pc, r0
   1e9bc:	add	r0, r0, #24
   1e9c0:	add	r0, r0, #3120	; 0xc30
   1e9c4:	bl	6b84 <pthread_mutex_unlock@plt>
   1e9c8:	cmp	r7, #0
   1e9cc:	beq	1e8a0 <vc_tv_hdmi_get_property_id@@Base+0x16c>
   1e9d0:	mov	r0, r7
   1e9d4:	add	sp, sp, #64	; 0x40
   1e9d8:	pop	{r4, r5, r6, r7, r8, pc}
   1e9dc:	ldr	r3, [pc, #168]	; 1ea8c <vc_tv_hdmi_get_property_id@@Base+0x358>
   1e9e0:	add	r3, pc, r3
   1e9e4:	b	1e854 <vc_tv_hdmi_get_property_id@@Base+0x120>
   1e9e8:	add	r0, sp, #24
   1e9ec:	mov	r1, #16
   1e9f0:	add	r2, sp, #20
   1e9f4:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1e9f8:	ldr	r3, [sp, #20]
   1e9fc:	mov	r7, r0
   1ea00:	cmp	r3, #4
   1ea04:	beq	1ea20 <vc_tv_hdmi_get_property_id@@Base+0x2ec>
   1ea08:	ldr	r3, [pc, #128]	; 1ea90 <vc_tv_hdmi_get_property_id@@Base+0x35c>
   1ea0c:	add	r3, pc, r3
   1ea10:	ldr	r3, [r3, #3208]	; 0xc88
   1ea14:	cmp	r3, #0
   1ea18:	beq	1e9b4 <vc_tv_hdmi_get_property_id@@Base+0x280>
   1ea1c:	b	1e9a4 <vc_tv_hdmi_get_property_id@@Base+0x270>
   1ea20:	ldr	r8, [sp, #24]
   1ea24:	cmp	r8, #0
   1ea28:	bge	1ea08 <vc_tv_hdmi_get_property_id@@Base+0x2d4>
   1ea2c:	ldr	r3, [r5, #3208]	; 0xc88
   1ea30:	cmp	r3, #0
   1ea34:	bne	1e9a0 <vc_tv_hdmi_get_property_id@@Base+0x26c>
   1ea38:	mov	r0, r6
   1ea3c:	bl	6b84 <pthread_mutex_unlock@plt>
   1ea40:	mov	r7, r8
   1ea44:	b	1e8b0 <vc_tv_hdmi_get_property_id@@Base+0x17c>
   1ea48:	mvn	r7, #0
   1ea4c:	b	1e8b0 <vc_tv_hdmi_get_property_id@@Base+0x17c>
   1ea50:	andeq	sl, r1, r0, lsr #22
   1ea54:	andeq	sl, r1, r0, lsr #21
   1ea58:	andeq	r9, r1, r8, ror sl
   1ea5c:	andeq	sl, r1, r4, lsl sl
   1ea60:	muleq	r0, r8, r4
   1ea64:	andeq	sl, r1, r0, lsl #20
   1ea68:	andeq	r7, r0, ip, lsr pc
   1ea6c:	andeq	r8, r0, r8, asr #17
   1ea70:	andeq	r8, r0, r0, lsl #7
   1ea74:	andeq	r7, r0, ip, lsr #29
   1ea78:	andeq	sl, r1, ip, lsl r9
   1ea7c:	andeq	r8, r0, r8, ror #6
   1ea80:	strdeq	r8, [r0], -r4
   1ea84:	ldrdeq	sl, [r1], -r0
   1ea88:	andeq	sl, r1, r0, asr #17
   1ea8c:	ldrdeq	r8, [r0], -ip
   1ea90:	andeq	sl, r1, ip, ror #16

0001ea94 <vc_tv_hdmi_get_property@@Base>:
   1ea94:	ldr	r3, [pc, #12]	; 1eaa8 <vc_tv_hdmi_get_property@@Base+0x14>
   1ea98:	mov	r1, r0
   1ea9c:	add	r3, pc, r3
   1eaa0:	ldr	r0, [r3, #3592]	; 0xe08
   1eaa4:	b	1e734 <vc_tv_hdmi_get_property_id@@Base>
   1eaa8:	ldrdeq	sl, [r1], -ip

0001eaac <vc_tv_notification_name@@Base>:
   1eaac:	cmp	r0, #16
   1eab0:	beq	1eb54 <vc_tv_notification_name@@Base+0xa8>
   1eab4:	bls	1eae0 <vc_tv_notification_name@@Base+0x34>
   1eab8:	cmp	r0, #64	; 0x40
   1eabc:	beq	1eb60 <vc_tv_notification_name@@Base+0xb4>
   1eac0:	bls	1eb34 <vc_tv_notification_name@@Base+0x88>
   1eac4:	cmp	r0, #128	; 0x80
   1eac8:	beq	1eb14 <vc_tv_notification_name@@Base+0x68>
   1eacc:	cmp	r0, #256	; 0x100
   1ead0:	bne	1eb6c <vc_tv_notification_name@@Base+0xc0>
   1ead4:	ldr	r0, [pc, #156]	; 1eb78 <vc_tv_notification_name@@Base+0xcc>
   1ead8:	add	r0, pc, r0
   1eadc:	bx	lr
   1eae0:	cmp	r0, #2
   1eae4:	beq	1eb48 <vc_tv_notification_name@@Base+0x9c>
   1eae8:	bls	1eb20 <vc_tv_notification_name@@Base+0x74>
   1eaec:	cmp	r0, #4
   1eaf0:	beq	1eb08 <vc_tv_notification_name@@Base+0x5c>
   1eaf4:	cmp	r0, #8
   1eaf8:	bne	1eb6c <vc_tv_notification_name@@Base+0xc0>
   1eafc:	ldr	r0, [pc, #120]	; 1eb7c <vc_tv_notification_name@@Base+0xd0>
   1eb00:	add	r0, pc, r0
   1eb04:	bx	lr
   1eb08:	ldr	r0, [pc, #112]	; 1eb80 <vc_tv_notification_name@@Base+0xd4>
   1eb0c:	add	r0, pc, r0
   1eb10:	bx	lr
   1eb14:	ldr	r0, [pc, #104]	; 1eb84 <vc_tv_notification_name@@Base+0xd8>
   1eb18:	add	r0, pc, r0
   1eb1c:	bx	lr
   1eb20:	cmp	r0, #1
   1eb24:	bne	1eb6c <vc_tv_notification_name@@Base+0xc0>
   1eb28:	ldr	r0, [pc, #88]	; 1eb88 <vc_tv_notification_name@@Base+0xdc>
   1eb2c:	add	r0, pc, r0
   1eb30:	bx	lr
   1eb34:	cmp	r0, #32
   1eb38:	bne	1eb6c <vc_tv_notification_name@@Base+0xc0>
   1eb3c:	ldr	r0, [pc, #72]	; 1eb8c <vc_tv_notification_name@@Base+0xe0>
   1eb40:	add	r0, pc, r0
   1eb44:	bx	lr
   1eb48:	ldr	r0, [pc, #64]	; 1eb90 <vc_tv_notification_name@@Base+0xe4>
   1eb4c:	add	r0, pc, r0
   1eb50:	bx	lr
   1eb54:	ldr	r0, [pc, #56]	; 1eb94 <vc_tv_notification_name@@Base+0xe8>
   1eb58:	add	r0, pc, r0
   1eb5c:	bx	lr
   1eb60:	ldr	r0, [pc, #48]	; 1eb98 <vc_tv_notification_name@@Base+0xec>
   1eb64:	add	r0, pc, r0
   1eb68:	bx	lr
   1eb6c:	ldr	r0, [pc, #40]	; 1eb9c <vc_tv_notification_name@@Base+0xf0>
   1eb70:	add	r0, pc, r0
   1eb74:	bx	lr
   1eb78:	andeq	r8, r0, ip, ror r7
   1eb7c:	andeq	r8, r0, r4, ror #13
   1eb80:	andeq	r8, r0, ip, asr #13
   1eb84:	andeq	r8, r0, r0, lsr #14
   1eb88:	andeq	r8, r0, r4, lsl #13
   1eb8c:	andeq	r8, r0, r8, asr #13
   1eb90:	andeq	r8, r0, r8, ror r6
   1eb94:	muleq	r0, ip, r6
   1eb98:			; <UNDEFINED> instruction: 0x000086b8
   1eb9c:	strdeq	r8, [r0], -ip
   1eba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eba4:	ldr	r3, [pc, #1424]	; 1f13c <vc_tv_notification_name@@Base+0x690>
   1eba8:	sub	sp, sp, #100	; 0x64
   1ebac:	add	r3, pc, r3
   1ebb0:	ldr	r2, [r3]
   1ebb4:	mov	r9, r0
   1ebb8:	cmp	r2, #4
   1ebbc:	bhi	1f124 <vc_tv_notification_name@@Base+0x678>
   1ebc0:	mov	r0, #52	; 0x34
   1ebc4:	mov	r2, #0
   1ebc8:	ldr	r3, [pc, #1392]	; 1f140 <vc_tv_notification_name@@Base+0x694>
   1ebcc:	add	r3, pc, r3
   1ebd0:	ldr	r1, [r3, #3592]	; 0xe08
   1ebd4:	str	r0, [sp, #4]
   1ebd8:	add	r0, sp, #44	; 0x2c
   1ebdc:	str	r0, [sp]
   1ebe0:	mov	r3, r2
   1ebe4:	mov	r0, #23
   1ebe8:	bl	18c08 <vc_gpuserv_execute_code@@Base+0x45c>
   1ebec:	cmp	r0, #0
   1ebf0:	bne	1f0f0 <vc_tv_notification_name@@Base+0x644>
   1ebf4:	ldr	r3, [sp, #44]	; 0x2c
   1ebf8:	tst	r3, #2
   1ebfc:	bne	1f10c <vc_tv_notification_name@@Base+0x660>
   1ec00:	tst	r3, #3
   1ec04:	bicne	r3, r3, #12
   1ec08:	strne	r3, [sp, #44]	; 0x2c
   1ec0c:	ldr	r3, [pc, #1328]	; 1f144 <vc_tv_notification_name@@Base+0x698>
   1ec10:	ldr	sl, [pc, #1328]	; 1f148 <vc_tv_notification_name@@Base+0x69c>
   1ec14:	add	r3, pc, r3
   1ec18:	add	sl, pc, sl
   1ec1c:	add	r3, r3, #3328	; 0xd00
   1ec20:	add	r3, r3, #36	; 0x24
   1ec24:	add	r2, sl, #24
   1ec28:	str	r3, [sp, #36]	; 0x24
   1ec2c:	add	r3, r2, #3120	; 0xc30
   1ec30:	str	r3, [sp, #32]
   1ec34:	ldr	r0, [sp, #36]	; 0x24
   1ec38:	bl	67e8 <sem_wait@plt>
   1ec3c:	cmn	r0, #1
   1ec40:	bne	1edd8 <vc_tv_notification_name@@Base+0x32c>
   1ec44:	bl	5fb4 <__errno_location@plt>
   1ec48:	ldr	r3, [r0]
   1ec4c:	cmp	r3, #4
   1ec50:	beq	1ec34 <vc_tv_notification_name@@Base+0x188>
   1ec54:	cmp	r3, #0
   1ec58:	bne	1f0c0 <vc_tv_notification_name@@Base+0x614>
   1ec5c:	ldr	r3, [r9, #3184]	; 0xc70
   1ec60:	cmp	r3, #0
   1ec64:	beq	1f0c0 <vc_tv_notification_name@@Base+0x614>
   1ec68:	ldr	r3, [r9, #3188]	; 0xc74
   1ec6c:	cmp	r3, #0
   1ec70:	bne	1f0cc <vc_tv_notification_name@@Base+0x620>
   1ec74:	ldr	r3, [pc, #1232]	; 1f14c <vc_tv_notification_name@@Base+0x6a0>
   1ec78:	add	r1, r9, #2080	; 0x820
   1ec7c:	add	r3, pc, r3
   1ec80:	add	r3, r3, #24
   1ec84:	add	r3, r3, #3120	; 0xc30
   1ec88:	add	r2, r9, #3104	; 0xc20
   1ec8c:	str	r3, [sp, #28]
   1ec90:	add	r3, r1, #8
   1ec94:	str	r3, [sp, #24]
   1ec98:	add	r3, r2, #8
   1ec9c:	str	r3, [sp, #20]
   1eca0:	mov	r3, #0
   1eca4:	ldr	r0, [r9, #12]
   1eca8:	ldr	r1, [sp, #24]
   1ecac:	str	r3, [sp]
   1ecb0:	mov	r2, #1024	; 0x400
   1ecb4:	ldr	r3, [sp, #20]
   1ecb8:	bl	61c4 <vchi_msg_dequeue@plt>
   1ecbc:	cmp	r0, #0
   1ecc0:	bne	1ec34 <vc_tv_notification_name@@Base+0x188>
   1ecc4:	ldr	r3, [r9, #3112]	; 0xc28
   1ecc8:	cmp	r3, #11
   1eccc:	bls	1ec34 <vc_tv_notification_name@@Base+0x188>
   1ecd0:	ldr	r3, [sl, #3208]	; 0xc88
   1ecd4:	cmp	r3, #0
   1ecd8:	beq	1ec34 <vc_tv_notification_name@@Base+0x188>
   1ecdc:	ldr	r0, [sp, #32]
   1ece0:	bl	5ffc <pthread_mutex_lock@plt>
   1ece4:	ldr	r3, [sl, #3208]	; 0xc88
   1ece8:	cmp	r3, #0
   1ecec:	beq	1f05c <vc_tv_notification_name@@Base+0x5b0>
   1ecf0:	ldr	r0, [sl, #24]
   1ecf4:	bl	6134 <vchi_service_use@plt>
   1ecf8:	ldr	r3, [sl]
   1ecfc:	ldr	r5, [r9, #2088]	; 0x828
   1ed00:	cmp	r3, #4
   1ed04:	ldr	r7, [r9, #2092]	; 0x82c
   1ed08:	ldr	r8, [r9, #2096]	; 0x830
   1ed0c:	bhi	1ee2c <vc_tv_notification_name@@Base+0x380>
   1ed10:	cmp	r5, #32
   1ed14:	beq	1ee60 <vc_tv_notification_name@@Base+0x3b4>
   1ed18:	bls	1edec <vc_tv_notification_name@@Base+0x340>
   1ed1c:	cmp	r5, #262144	; 0x40000
   1ed20:	beq	1ef44 <vc_tv_notification_name@@Base+0x498>
   1ed24:	bls	1ee7c <vc_tv_notification_name@@Base+0x3d0>
   1ed28:	cmp	r5, #1048576	; 0x100000
   1ed2c:	beq	1f03c <vc_tv_notification_name@@Base+0x590>
   1ed30:	cmp	r5, #2097152	; 0x200000
   1ed34:	beq	1ef24 <vc_tv_notification_name@@Base+0x478>
   1ed38:	cmp	r5, #524288	; 0x80000
   1ed3c:	beq	1eef8 <vc_tv_notification_name@@Base+0x44c>
   1ed40:	ldr	r3, [pc, #1032]	; 1f150 <vc_tv_notification_name@@Base+0x6a4>
   1ed44:	add	r3, pc, r3
   1ed48:	ldr	r2, [r3, #3208]	; 0xc88
   1ed4c:	cmp	r2, #0
   1ed50:	beq	1ed5c <vc_tv_notification_name@@Base+0x2b0>
   1ed54:	ldr	r0, [r3, #24]
   1ed58:	bl	6014 <vchi_service_release@plt>
   1ed5c:	ldr	r0, [sp, #28]
   1ed60:	bl	6b84 <pthread_mutex_unlock@plt>
   1ed64:	mov	r4, r9
   1ed68:	mov	fp, #0
   1ed6c:	add	r6, r9, #40	; 0x28
   1ed70:	ldr	ip, [r4, #3144]	; 0xc48
   1ed74:	cmp	ip, #0
   1ed78:	beq	1ed94 <vc_tv_notification_name@@Base+0x2e8>
   1ed7c:	ldr	r0, [r4, #3148]	; 0xc4c
   1ed80:	mov	r1, r5
   1ed84:	mov	r2, r7
   1ed88:	mov	r3, r8
   1ed8c:	add	fp, fp, #1
   1ed90:	blx	ip
   1ed94:	add	r4, r4, #8
   1ed98:	cmp	r4, r6
   1ed9c:	bne	1ed70 <vc_tv_notification_name@@Base+0x2c4>
   1eda0:	cmp	fp, #0
   1eda4:	bne	1edbc <vc_tv_notification_name@@Base+0x310>
   1eda8:	ldr	r4, [pc, #932]	; 1f154 <vc_tv_notification_name@@Base+0x6a8>
   1edac:	add	r4, pc, r4
   1edb0:	ldr	r3, [r4]
   1edb4:	cmp	r3, #3
   1edb8:	bhi	1eed4 <vc_tv_notification_name@@Base+0x428>
   1edbc:	ldr	r3, [r9, #3112]	; 0xc28
   1edc0:	cmp	r3, #11
   1edc4:	bhi	1eca0 <vc_tv_notification_name@@Base+0x1f4>
   1edc8:	ldr	r0, [sp, #36]	; 0x24
   1edcc:	bl	67e8 <sem_wait@plt>
   1edd0:	cmn	r0, #1
   1edd4:	beq	1ec44 <vc_tv_notification_name@@Base+0x198>
   1edd8:	cmp	r0, #0
   1eddc:	beq	1ec5c <vc_tv_notification_name@@Base+0x1b0>
   1ede0:	bl	5fb4 <__errno_location@plt>
   1ede4:	ldr	r3, [r0]
   1ede8:	b	1ec54 <vc_tv_notification_name@@Base+0x1a8>
   1edec:	cmp	r5, #4
   1edf0:	beq	1efcc <vc_tv_notification_name@@Base+0x520>
   1edf4:	bhi	1eea8 <vc_tv_notification_name@@Base+0x3fc>
   1edf8:	cmp	r5, #1
   1edfc:	beq	1ef78 <vc_tv_notification_name@@Base+0x4cc>
   1ee00:	cmp	r5, #2
   1ee04:	bne	1ed40 <vc_tv_notification_name@@Base+0x294>
   1ee08:	ldr	r3, [sp, #44]	; 0x2c
   1ee0c:	tst	r3, #12
   1ee10:	bne	1f0a8 <vc_tv_notification_name@@Base+0x5fc>
   1ee14:	bic	r3, r3, #45	; 0x2d
   1ee18:	orr	r3, r3, #2
   1ee1c:	str	r3, [sp, #44]	; 0x2c
   1ee20:	str	r7, [r9, #3220]	; 0xc94
   1ee24:	str	r8, [r9, #3224]	; 0xc98
   1ee28:	b	1ed40 <vc_tv_notification_name@@Base+0x294>
   1ee2c:	mov	r0, r5
   1ee30:	bl	1eaac <vc_tv_notification_name@@Base>
   1ee34:	ldr	r3, [pc, #796]	; 1f158 <vc_tv_notification_name@@Base+0x6ac>
   1ee38:	ldr	r2, [pc, #796]	; 1f15c <vc_tv_notification_name@@Base+0x6b0>
   1ee3c:	add	r3, pc, r3
   1ee40:	stm	sp, {r0, r7, r8}
   1ee44:	add	r3, r3, #1088	; 0x440
   1ee48:	mov	r0, sl
   1ee4c:	mov	r1, #5
   1ee50:	add	r2, pc, r2
   1ee54:	bl	6b60 <vcos_log_impl@plt>
   1ee58:	cmp	r5, #32
   1ee5c:	bne	1ed18 <vc_tv_notification_name@@Base+0x26c>
   1ee60:	mov	r2, #1
   1ee64:	ldr	r3, [sp, #44]	; 0x2c
   1ee68:	str	r2, [r9, #3192]	; 0xc78
   1ee6c:	bic	r3, r3, #16
   1ee70:	orr	r3, r3, #32
   1ee74:	str	r3, [sp, #44]	; 0x2c
   1ee78:	b	1ed40 <vc_tv_notification_name@@Base+0x294>
   1ee7c:	cmp	r5, #65536	; 0x10000
   1ee80:	beq	1eff0 <vc_tv_notification_name@@Base+0x544>
   1ee84:	cmp	r5, #131072	; 0x20000
   1ee88:	bne	1ed40 <vc_tv_notification_name@@Base+0x294>
   1ee8c:	mov	r2, #128	; 0x80
   1ee90:	ldr	r3, [sp, #44]	; 0x2c
   1ee94:	str	r2, [r9, #3264]	; 0xcc0
   1ee98:	bic	r3, r3, #851968	; 0xd0000
   1ee9c:	orr	r3, r3, #131072	; 0x20000
   1eea0:	str	r3, [sp, #44]	; 0x2c
   1eea4:	b	1ed40 <vc_tv_notification_name@@Base+0x294>
   1eea8:	cmp	r5, #8
   1eeac:	beq	1f018 <vc_tv_notification_name@@Base+0x56c>
   1eeb0:	cmp	r5, #16
   1eeb4:	bne	1ed40 <vc_tv_notification_name@@Base+0x294>
   1eeb8:	mov	r2, #0
   1eebc:	ldr	r3, [sp, #44]	; 0x2c
   1eec0:	str	r2, [r9, #3192]	; 0xc78
   1eec4:	bic	r3, r3, #32
   1eec8:	orr	r3, r3, #16
   1eecc:	str	r3, [sp, #44]	; 0x2c
   1eed0:	b	1ed40 <vc_tv_notification_name@@Base+0x294>
   1eed4:	mov	r0, r5
   1eed8:	bl	1eaac <vc_tv_notification_name@@Base>
   1eedc:	ldr	r2, [pc, #636]	; 1f160 <vc_tv_notification_name@@Base+0x6b4>
   1eee0:	mov	r3, r0
   1eee4:	mov	r1, #4
   1eee8:	mov	r0, r4
   1eeec:	add	r2, pc, r2
   1eef0:	bl	6b60 <vcos_log_impl@plt>
   1eef4:	b	1edbc <vc_tv_notification_name@@Base+0x310>
   1eef8:	ldr	r3, [sp, #44]	; 0x2c
   1eefc:	tst	r7, #4
   1ef00:	bic	r3, r3, #458752	; 0x70000
   1ef04:	orr	r3, r3, #524288	; 0x80000
   1ef08:	str	r7, [r9, #3264]	; 0xcc0
   1ef0c:	str	r8, [r9, #3268]	; 0xcc4
   1ef10:	str	r3, [sp, #44]	; 0x2c
   1ef14:	beq	1ef64 <vc_tv_notification_name@@Base+0x4b8>
   1ef18:	mov	r3, #4
   1ef1c:	str	r3, [r9, #3260]	; 0xcbc
   1ef20:	b	1ed40 <vc_tv_notification_name@@Base+0x294>
   1ef24:	mov	r2, #1
   1ef28:	ldr	r3, [sp, #44]	; 0x2c
   1ef2c:	str	r7, [r9, #3272]	; 0xcc8
   1ef30:	bic	r3, r3, #1048576	; 0x100000
   1ef34:	orr	r3, r3, #2097152	; 0x200000
   1ef38:	str	r3, [sp, #44]	; 0x2c
   1ef3c:	str	r2, [r9, #3192]	; 0xc78
   1ef40:	b	1ed40 <vc_tv_notification_name@@Base+0x294>
   1ef44:	ldr	r3, [sp, #44]	; 0x2c
   1ef48:	tst	r7, #4
   1ef4c:	bic	r3, r3, #720896	; 0xb0000
   1ef50:	orr	r3, r3, #262144	; 0x40000
   1ef54:	str	r7, [r9, #3264]	; 0xcc0
   1ef58:	str	r8, [r9, #3268]	; 0xcc4
   1ef5c:	str	r3, [sp, #44]	; 0x2c
   1ef60:	bne	1ef18 <vc_tv_notification_name@@Base+0x46c>
   1ef64:	tst	r7, #8
   1ef68:	movne	r3, #8
   1ef6c:	moveq	r3, #0
   1ef70:	str	r3, [r9, #3260]	; 0xcbc
   1ef74:	b	1ed40 <vc_tv_notification_name@@Base+0x294>
   1ef78:	ldr	r3, [sp, #44]	; 0x2c
   1ef7c:	tst	r3, #12
   1ef80:	beq	1ef94 <vc_tv_notification_name@@Base+0x4e8>
   1ef84:	mov	r2, #0
   1ef88:	tst	r3, #2
   1ef8c:	str	r2, [r9, #3192]	; 0xc78
   1ef90:	beq	1f0fc <vc_tv_notification_name@@Base+0x650>
   1ef94:	ldr	r0, [pc, #456]	; 1f164 <vc_tv_notification_name@@Base+0x6b8>
   1ef98:	bic	r3, r3, #46	; 0x2e
   1ef9c:	add	r0, pc, r0
   1efa0:	ldr	r2, [r0]
   1efa4:	orr	r3, r3, #17
   1efa8:	cmp	r2, #4
   1efac:	str	r3, [sp, #44]	; 0x2c
   1efb0:	bhi	1f088 <vc_tv_notification_name@@Base+0x5dc>
   1efb4:	mov	r3, #0
   1efb8:	str	r3, [r9, #3252]	; 0xcb4
   1efbc:	str	r3, [r9, #3244]	; 0xcac
   1efc0:	str	r3, [r9, #3236]	; 0xca4
   1efc4:	str	r3, [r9, #3228]	; 0xc9c
   1efc8:	b	1ed40 <vc_tv_notification_name@@Base+0x294>
   1efcc:	ldr	r3, [sp, #44]	; 0x2c
   1efd0:	tst	r3, #3
   1efd4:	bne	1f068 <vc_tv_notification_name@@Base+0x5bc>
   1efd8:	bic	r3, r3, #11
   1efdc:	orr	r3, r3, #4
   1efe0:	str	r3, [sp, #44]	; 0x2c
   1efe4:	str	r7, [r9, #3196]	; 0xc7c
   1efe8:	str	r8, [r9, #3200]	; 0xc80
   1efec:	b	1ed40 <vc_tv_notification_name@@Base+0x294>
   1eff0:	ldr	r3, [sp, #44]	; 0x2c
   1eff4:	tst	r3, #786432	; 0xc0000
   1eff8:	movne	r2, #0
   1effc:	strne	r2, [r9, #3192]	; 0xc78
   1f000:	mov	r2, #128	; 0x80
   1f004:	bic	r3, r3, #917504	; 0xe0000
   1f008:	orr	r3, r3, #1114112	; 0x110000
   1f00c:	str	r3, [sp, #44]	; 0x2c
   1f010:	str	r2, [r9, #3264]	; 0xcc0
   1f014:	b	1ed40 <vc_tv_notification_name@@Base+0x294>
   1f018:	ldr	r3, [sp, #44]	; 0x2c
   1f01c:	tst	r3, #3
   1f020:	bne	1f078 <vc_tv_notification_name@@Base+0x5cc>
   1f024:	bic	r3, r3, #7
   1f028:	orr	r3, r3, #8
   1f02c:	str	r3, [sp, #44]	; 0x2c
   1f030:	str	r7, [r9, #3196]	; 0xc7c
   1f034:	str	r8, [r9, #3200]	; 0xc80
   1f038:	b	1ed40 <vc_tv_notification_name@@Base+0x294>
   1f03c:	mov	r2, #0
   1f040:	ldr	r3, [sp, #44]	; 0x2c
   1f044:	str	r2, [r9, #3192]	; 0xc78
   1f048:	bic	r3, r3, #2097152	; 0x200000
   1f04c:	orr	r3, r3, #1048576	; 0x100000
   1f050:	str	r3, [sp, #44]	; 0x2c
   1f054:	str	r2, [r9, #3272]	; 0xcc8
   1f058:	b	1ed40 <vc_tv_notification_name@@Base+0x294>
   1f05c:	ldr	r0, [sp, #32]
   1f060:	bl	6b84 <pthread_mutex_unlock@plt>
   1f064:	b	1ec34 <vc_tv_notification_name@@Base+0x188>
   1f068:	ldr	r0, [r9, #12]
   1f06c:	bl	6134 <vchi_service_use@plt>
   1f070:	ldr	r3, [sp, #44]	; 0x2c
   1f074:	b	1efd8 <vc_tv_notification_name@@Base+0x52c>
   1f078:	ldr	r0, [r9, #12]
   1f07c:	bl	6134 <vchi_service_use@plt>
   1f080:	ldr	r3, [sp, #44]	; 0x2c
   1f084:	b	1f024 <vc_tv_notification_name@@Base+0x578>
   1f088:	ldr	r3, [pc, #216]	; 1f168 <vc_tv_notification_name@@Base+0x6bc>
   1f08c:	ldr	r2, [pc, #216]	; 1f16c <vc_tv_notification_name@@Base+0x6c0>
   1f090:	add	r3, pc, r3
   1f094:	add	r3, r3, #1088	; 0x440
   1f098:	mov	r1, #5
   1f09c:	add	r2, pc, r2
   1f0a0:	bl	6b60 <vcos_log_impl@plt>
   1f0a4:	b	1efb4 <vc_tv_notification_name@@Base+0x508>
   1f0a8:	mov	r3, #0
   1f0ac:	ldr	r0, [r9, #12]
   1f0b0:	str	r3, [r9, #3192]	; 0xc78
   1f0b4:	bl	6014 <vchi_service_release@plt>
   1f0b8:	ldr	r3, [sp, #44]	; 0x2c
   1f0bc:	b	1ee14 <vc_tv_notification_name@@Base+0x368>
   1f0c0:	ldr	r3, [r9, #3188]	; 0xc74
   1f0c4:	cmp	r3, #0
   1f0c8:	beq	1f0f0 <vc_tv_notification_name@@Base+0x644>
   1f0cc:	ldr	r0, [pc, #156]	; 1f170 <vc_tv_notification_name@@Base+0x6c4>
   1f0d0:	add	r0, pc, r0
   1f0d4:	ldr	r3, [r0]
   1f0d8:	cmp	r3, #4
   1f0dc:	bls	1f0f0 <vc_tv_notification_name@@Base+0x644>
   1f0e0:	ldr	r2, [pc, #140]	; 1f174 <vc_tv_notification_name@@Base+0x6c8>
   1f0e4:	mov	r1, #5
   1f0e8:	add	r2, pc, r2
   1f0ec:	bl	6b60 <vcos_log_impl@plt>
   1f0f0:	mov	r0, #0
   1f0f4:	add	sp, sp, #100	; 0x64
   1f0f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f0fc:	ldr	r0, [r9, #12]
   1f100:	bl	6014 <vchi_service_release@plt>
   1f104:	ldr	r3, [sp, #44]	; 0x2c
   1f108:	b	1ef94 <vc_tv_notification_name@@Base+0x4e8>
   1f10c:	tst	r3, #12
   1f110:	beq	1ec00 <vc_tv_notification_name@@Base+0x154>
   1f114:	ldr	r0, [r9, #12]
   1f118:	bl	6134 <vchi_service_use@plt>
   1f11c:	ldr	r3, [sp, #44]	; 0x2c
   1f120:	b	1ec00 <vc_tv_notification_name@@Base+0x154>
   1f124:	ldr	r2, [pc, #76]	; 1f178 <vc_tv_notification_name@@Base+0x6cc>
   1f128:	mov	r0, r3
   1f12c:	mov	r1, #5
   1f130:	add	r2, pc, r2
   1f134:	bl	6b60 <vcos_log_impl@plt>
   1f138:	b	1ebc0 <vc_tv_notification_name@@Base+0x114>
   1f13c:	andeq	sl, r1, ip, asr #13
   1f140:	andeq	sl, r1, ip, lsr #13
   1f144:	andeq	sl, r1, r4, ror #12
   1f148:	andeq	sl, r1, r0, ror #12
   1f14c:	strdeq	sl, [r1], -ip
   1f150:	andeq	sl, r1, r4, lsr r5
   1f154:	andeq	sl, r1, ip, asr #9
   1f158:	andeq	r7, r0, r4, asr #19
   1f15c:	andeq	r8, r0, ip, asr #8
   1f160:	ldrdeq	r8, [r0], -ip
   1f164:	ldrdeq	sl, [r1], -ip
   1f168:	andeq	r7, r0, r0, ror r7
   1f16c:	andeq	r8, r0, r0, lsl r2
   1f170:	andeq	sl, r1, r8, lsr #3
   1f174:	andeq	r8, r0, r4, lsr #4
   1f178:	andeq	r8, r0, ip, asr #2

0001f17c <vc_tv_hdmi_get_supported_modes_id@@Base>:
   1f17c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1f180:	mov	r5, r3
   1f184:	add	r3, r3, r3, lsl #2
   1f188:	mov	r7, r1
   1f18c:	sub	sp, sp, #12
   1f190:	mov	r8, r0
   1f194:	lsl	r0, r3, #2
   1f198:	mov	r6, r2
   1f19c:	bl	6164 <malloc@plt>
   1f1a0:	cmp	r7, #3
   1f1a4:	mov	r4, r0
   1f1a8:	beq	1f260 <vc_tv_hdmi_get_supported_modes_id@@Base+0xe4>
   1f1ac:	ldr	r3, [sp, #40]	; 0x28
   1f1b0:	mov	r1, r7
   1f1b4:	str	r3, [sp]
   1f1b8:	ldr	r3, [sp, #44]	; 0x2c
   1f1bc:	mov	r0, r8
   1f1c0:	str	r3, [sp, #4]
   1f1c4:	mov	r2, r4
   1f1c8:	mov	r3, r5
   1f1cc:	bl	1b6d8 <vc_tv_hdmi_get_supported_modes_new_id@@Base>
   1f1d0:	cmp	r0, #0
   1f1d4:	addgt	r0, r0, r0, lsl #2
   1f1d8:	movgt	r3, r6
   1f1dc:	movgt	r1, r4
   1f1e0:	addgt	r5, r4, r0, lsl #2
   1f1e4:	ble	1f24c <vc_tv_hdmi_get_supported_modes_id@@Base+0xd0>
   1f1e8:	ldrb	ip, [r1]
   1f1ec:	ldrb	r2, [r3]
   1f1f0:	and	r0, ip, #1
   1f1f4:	and	r2, r2, #252	; 0xfc
   1f1f8:	and	ip, ip, #2
   1f1fc:	orr	r2, r2, r0
   1f200:	orr	r2, ip, r2
   1f204:	strb	r2, [r3]
   1f208:	ldrh	ip, [r1]
   1f20c:	ldrh	lr, [r3]
   1f210:	lsr	ip, ip, #3
   1f214:	ldrh	r6, [r1, #4]
   1f218:	ldrh	r0, [r1, #6]
   1f21c:	ldrh	r2, [r1, #8]
   1f220:	bic	lr, lr, #508	; 0x1fc
   1f224:	and	ip, ip, #508	; 0x1fc
   1f228:	add	r1, r1, #20
   1f22c:	orr	ip, ip, lr
   1f230:	cmp	r1, r5
   1f234:	strh	ip, [r3]
   1f238:	strh	r6, [r3, #2]
   1f23c:	strh	r0, [r3, #4]
   1f240:	strh	r2, [r3, #6]
   1f244:	add	r3, r3, #8
   1f248:	bne	1f1e8 <vc_tv_hdmi_get_supported_modes_id@@Base+0x6c>
   1f24c:	mov	r0, r4
   1f250:	bl	668c <free@plt>
   1f254:	mov	r0, #0
   1f258:	add	sp, sp, #12
   1f25c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1f260:	ldr	r3, [sp, #40]	; 0x28
   1f264:	mov	r1, #1
   1f268:	str	r3, [sp]
   1f26c:	ldr	r3, [sp, #44]	; 0x2c
   1f270:	mov	r2, r4
   1f274:	str	r3, [sp, #4]
   1f278:	mov	r0, r8
   1f27c:	mov	r3, r5
   1f280:	bl	1b6d8 <vc_tv_hdmi_get_supported_modes_new_id@@Base>
   1f284:	cmp	r0, #0
   1f288:	addgt	r0, r0, r0, lsl #2
   1f28c:	movgt	r1, r4
   1f290:	movgt	r2, #0
   1f294:	addgt	r7, r4, r0, lsl #2
   1f298:	ble	1f24c <vc_tv_hdmi_get_supported_modes_id@@Base+0xd0>
   1f29c:	ldr	r3, [r1, #16]
   1f2a0:	lsl	lr, r2, #3
   1f2a4:	tst	r3, #128	; 0x80
   1f2a8:	add	r5, r6, lr
   1f2ac:	beq	1f308 <vc_tv_hdmi_get_supported_modes_id@@Base+0x18c>
   1f2b0:	ldrb	r3, [r6, r2, lsl #3]
   1f2b4:	ldrb	ip, [r1]
   1f2b8:	and	r3, r3, #252	; 0xfc
   1f2bc:	and	r0, ip, #1
   1f2c0:	orr	r3, r3, r0
   1f2c4:	and	ip, ip, #2
   1f2c8:	orr	r3, ip, r3
   1f2cc:	strb	r3, [r6, r2, lsl #3]
   1f2d0:	ldrh	r0, [r1]
   1f2d4:	ldrh	ip, [r6, lr]
   1f2d8:	lsr	r0, r0, #3
   1f2dc:	ldrh	r9, [r1, #4]
   1f2e0:	ldrh	r8, [r1, #6]
   1f2e4:	ldrh	r3, [r1, #8]
   1f2e8:	bic	ip, ip, #508	; 0x1fc
   1f2ec:	and	r0, r0, #508	; 0x1fc
   1f2f0:	orr	r0, r0, ip
   1f2f4:	strh	r0, [r6, lr]
   1f2f8:	add	r2, r2, #1
   1f2fc:	strh	r9, [r5, #2]
   1f300:	strh	r8, [r5, #4]
   1f304:	strh	r3, [r5, #6]
   1f308:	add	r1, r1, #20
   1f30c:	cmp	r1, r7
   1f310:	bne	1f29c <vc_tv_hdmi_get_supported_modes_id@@Base+0x120>
   1f314:	b	1f24c <vc_tv_hdmi_get_supported_modes_id@@Base+0xd0>

0001f318 <vc_tv_hdmi_get_supported_modes@@Base>:
   1f318:	push	{r4, r5, r6, lr}
   1f31c:	mov	r6, r0
   1f320:	mov	r5, r1
   1f324:	mov	r4, r2
   1f328:	sub	sp, sp, #8
   1f32c:	ldr	ip, [pc, #40]	; 1f35c <vc_tv_hdmi_get_supported_modes@@Base+0x44>
   1f330:	ldr	lr, [sp, #24]
   1f334:	add	ip, pc, ip
   1f338:	ldr	r0, [ip, #3592]	; 0xe08
   1f33c:	mov	r1, r6
   1f340:	str	r3, [sp]
   1f344:	mov	r2, r5
   1f348:	mov	r3, r4
   1f34c:	str	lr, [sp, #4]
   1f350:	bl	1f17c <vc_tv_hdmi_get_supported_modes_id@@Base>
   1f354:	add	sp, sp, #8
   1f358:	pop	{r4, r5, r6, pc}
   1f35c:	andeq	r9, r1, r4, asr #30

0001f360 <vc_tv_get_device_id_id@@Base>:
   1f360:	mov	r3, #0
   1f364:	push	{r4, r5, r6, r7, r8, lr}
   1f368:	cmp	r1, #0
   1f36c:	sub	sp, sp, #72	; 0x48
   1f370:	str	r3, [sp, #24]
   1f374:	str	r3, [sp, #28]
   1f378:	str	r3, [sp, #32]
   1f37c:	str	r3, [sp, #36]	; 0x24
   1f380:	str	r3, [sp, #40]	; 0x28
   1f384:	str	r3, [sp, #44]	; 0x2c
   1f388:	beq	1f60c <vc_tv_get_device_id_id@@Base+0x2ac>
   1f38c:	mov	r2, #25
   1f390:	mov	r4, r1
   1f394:	mov	r1, #4
   1f398:	str	r2, [sp, #12]
   1f39c:	cmp	r0, #65536	; 0x10000
   1f3a0:	add	r2, sp, #12
   1f3a4:	str	r0, [sp, #16]
   1f3a8:	str	r1, [sp, #52]	; 0x34
   1f3ac:	str	r2, [sp, #48]	; 0x30
   1f3b0:	beq	1f4e8 <vc_tv_get_device_id_id@@Base+0x188>
   1f3b4:	mov	r0, #-2147483623	; 0x80000019
   1f3b8:	ldr	r2, [pc, #596]	; 1f614 <vc_tv_get_device_id_id@@Base+0x2b4>
   1f3bc:	str	r3, [sp, #64]	; 0x40
   1f3c0:	add	r2, pc, r2
   1f3c4:	ldr	r2, [r2]
   1f3c8:	str	r3, [sp, #68]	; 0x44
   1f3cc:	str	r3, [sp, #20]
   1f3d0:	cmp	r2, r1
   1f3d4:	add	r3, sp, #16
   1f3d8:	str	r1, [sp, #60]	; 0x3c
   1f3dc:	mov	r7, #3
   1f3e0:	str	r0, [sp, #12]
   1f3e4:	str	r3, [sp, #56]	; 0x38
   1f3e8:	bhi	1f4b0 <vc_tv_get_device_id_id@@Base+0x150>
   1f3ec:	ldr	r5, [pc, #548]	; 1f618 <vc_tv_get_device_id_id@@Base+0x2b8>
   1f3f0:	add	r5, pc, r5
   1f3f4:	ldr	r3, [r5, #3208]	; 0xc88
   1f3f8:	cmp	r3, #0
   1f3fc:	beq	1f520 <vc_tv_get_device_id_id@@Base+0x1c0>
   1f400:	add	r6, r5, #24
   1f404:	add	r6, r6, #3120	; 0xc30
   1f408:	mov	r0, r6
   1f40c:	bl	5ffc <pthread_mutex_lock@plt>
   1f410:	ldr	r3, [r5, #3208]	; 0xc88
   1f414:	cmp	r3, #0
   1f418:	beq	1f518 <vc_tv_get_device_id_id@@Base+0x1b8>
   1f41c:	ldr	r0, [r5, #24]
   1f420:	bl	6134 <vchi_service_use@plt>
   1f424:	mov	r3, #0
   1f428:	ldr	r0, [r5, #24]
   1f42c:	mov	r2, r7
   1f430:	str	r3, [sp]
   1f434:	add	r1, sp, #48	; 0x30
   1f438:	mov	r3, #4
   1f43c:	bl	5cc0 <vchi_msg_queuev@plt>
   1f440:	subs	r7, r0, #0
   1f444:	beq	1f5a0 <vc_tv_get_device_id_id@@Base+0x240>
   1f448:	ldr	r3, [r5]
   1f44c:	cmp	r3, #1
   1f450:	bls	1f48c <vc_tv_get_device_id_id@@Base+0x12c>
   1f454:	ldr	r3, [sp, #12]
   1f458:	cmp	r3, #26
   1f45c:	bhi	1f5d8 <vc_tv_get_device_id_id@@Base+0x278>
   1f460:	ldr	r2, [pc, #436]	; 1f61c <vc_tv_get_device_id_id@@Base+0x2bc>
   1f464:	add	r2, pc, r2
   1f468:	ldr	r3, [r2, r3, lsl #2]
   1f46c:	mov	r2, #0
   1f470:	ldr	r0, [pc, #424]	; 1f620 <vc_tv_get_device_id_id@@Base+0x2c0>
   1f474:	stm	sp, {r2, r7}
   1f478:	ldr	r2, [pc, #420]	; 1f624 <vc_tv_get_device_id_id@@Base+0x2c4>
   1f47c:	add	r0, pc, r0
   1f480:	mov	r1, #2
   1f484:	add	r2, pc, r2
   1f488:	bl	6b60 <vcos_log_impl@plt>
   1f48c:	ldr	r3, [pc, #404]	; 1f628 <vc_tv_get_device_id_id@@Base+0x2c8>
   1f490:	add	r3, pc, r3
   1f494:	ldr	r2, [r3, #3208]	; 0xc88
   1f498:	cmp	r2, #0
   1f49c:	bne	1f558 <vc_tv_get_device_id_id@@Base+0x1f8>
   1f4a0:	add	r0, r3, #24
   1f4a4:	add	r0, r0, #3120	; 0xc30
   1f4a8:	bl	6b84 <pthread_mutex_unlock@plt>
   1f4ac:	b	1f584 <vc_tv_get_device_id_id@@Base+0x224>
   1f4b0:	ldr	r1, [pc, #372]	; 1f62c <vc_tv_get_device_id_id@@Base+0x2cc>
   1f4b4:	add	r1, pc, r1
   1f4b8:	mov	r2, #0
   1f4bc:	ldr	r3, [pc, #364]	; 1f630 <vc_tv_get_device_id_id@@Base+0x2d0>
   1f4c0:	stm	sp, {r1, r2}
   1f4c4:	ldr	r0, [pc, #360]	; 1f634 <vc_tv_get_device_id_id@@Base+0x2d4>
   1f4c8:	ldr	r2, [pc, #360]	; 1f638 <vc_tv_get_device_id_id@@Base+0x2d8>
   1f4cc:	add	r3, pc, r3
   1f4d0:	add	r3, r3, #84	; 0x54
   1f4d4:	add	r0, pc, r0
   1f4d8:	mov	r1, #5
   1f4dc:	add	r2, pc, r2
   1f4e0:	bl	6b60 <vcos_log_impl@plt>
   1f4e4:	b	1f3ec <vc_tv_get_device_id_id@@Base+0x8c>
   1f4e8:	ldr	r2, [pc, #332]	; 1f63c <vc_tv_get_device_id_id@@Base+0x2dc>
   1f4ec:	str	r3, [sp, #56]	; 0x38
   1f4f0:	add	r2, pc, r2
   1f4f4:	ldr	r2, [r2]
   1f4f8:	str	r3, [sp, #60]	; 0x3c
   1f4fc:	cmp	r2, #4
   1f500:	mov	r7, #2
   1f504:	str	r3, [sp, #20]
   1f508:	bls	1f3ec <vc_tv_get_device_id_id@@Base+0x8c>
   1f50c:	ldr	r1, [pc, #300]	; 1f640 <vc_tv_get_device_id_id@@Base+0x2e0>
   1f510:	add	r1, pc, r1
   1f514:	b	1f4b8 <vc_tv_get_device_id_id@@Base+0x158>
   1f518:	mov	r0, r6
   1f51c:	bl	6b84 <pthread_mutex_unlock@plt>
   1f520:	mov	r7, #0
   1f524:	add	ip, sp, #24
   1f528:	ldm	ip!, {r0, r1, r2, r3}
   1f52c:	str	r0, [r4]
   1f530:	str	r1, [r4, #4]
   1f534:	str	r2, [r4, #8]
   1f538:	ldm	ip!, {r0, r1}
   1f53c:	str	r3, [r4, #12]
   1f540:	str	r0, [r4, #16]
   1f544:	str	r1, [r4, #20]
   1f548:	mov	r0, r7
   1f54c:	add	sp, sp, #72	; 0x48
   1f550:	pop	{r4, r5, r6, r7, r8, pc}
   1f554:	mov	r7, r8
   1f558:	ldr	r3, [pc, #228]	; 1f644 <vc_tv_get_device_id_id@@Base+0x2e4>
   1f55c:	add	r3, pc, r3
   1f560:	ldr	r0, [r3, #24]
   1f564:	bl	6014 <vchi_service_release@plt>
   1f568:	ldr	r0, [pc, #216]	; 1f648 <vc_tv_get_device_id_id@@Base+0x2e8>
   1f56c:	add	r0, pc, r0
   1f570:	add	r0, r0, #24
   1f574:	add	r0, r0, #3120	; 0xc30
   1f578:	bl	6b84 <pthread_mutex_unlock@plt>
   1f57c:	cmp	r7, #0
   1f580:	beq	1f520 <vc_tv_get_device_id_id@@Base+0x1c0>
   1f584:	mov	r3, #0
   1f588:	mov	r0, r7
   1f58c:	strb	r3, [r4]
   1f590:	strb	r3, [r4, #4]
   1f594:	str	r3, [r4, #20]
   1f598:	add	sp, sp, #72	; 0x48
   1f59c:	pop	{r4, r5, r6, r7, r8, pc}
   1f5a0:	add	r0, sp, #24
   1f5a4:	mov	r1, #24
   1f5a8:	add	r2, sp, #20
   1f5ac:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1f5b0:	ldr	r3, [sp, #20]
   1f5b4:	mov	r7, r0
   1f5b8:	cmp	r3, #4
   1f5bc:	beq	1f5e4 <vc_tv_get_device_id_id@@Base+0x284>
   1f5c0:	ldr	r3, [pc, #132]	; 1f64c <vc_tv_get_device_id_id@@Base+0x2ec>
   1f5c4:	add	r3, pc, r3
   1f5c8:	ldr	r3, [r3, #3208]	; 0xc88
   1f5cc:	cmp	r3, #0
   1f5d0:	beq	1f568 <vc_tv_get_device_id_id@@Base+0x208>
   1f5d4:	b	1f558 <vc_tv_get_device_id_id@@Base+0x1f8>
   1f5d8:	ldr	r3, [pc, #112]	; 1f650 <vc_tv_get_device_id_id@@Base+0x2f0>
   1f5dc:	add	r3, pc, r3
   1f5e0:	b	1f46c <vc_tv_get_device_id_id@@Base+0x10c>
   1f5e4:	ldr	r8, [sp, #24]
   1f5e8:	cmp	r8, #0
   1f5ec:	bge	1f5c0 <vc_tv_get_device_id_id@@Base+0x260>
   1f5f0:	ldr	r3, [r5, #3208]	; 0xc88
   1f5f4:	cmp	r3, #0
   1f5f8:	bne	1f554 <vc_tv_get_device_id_id@@Base+0x1f4>
   1f5fc:	mov	r0, r6
   1f600:	bl	6b84 <pthread_mutex_unlock@plt>
   1f604:	mov	r7, r8
   1f608:	b	1f584 <vc_tv_get_device_id_id@@Base+0x224>
   1f60c:	mvn	r7, #0
   1f610:	b	1f548 <vc_tv_get_device_id_id@@Base+0x1e8>
   1f614:			; <UNDEFINED> instruction: 0x00019eb8
   1f618:	andeq	r9, r1, r8, lsl #29
   1f61c:	andeq	r8, r1, r0, ror #28
   1f620:	strdeq	r9, [r1], -ip
   1f624:	andeq	r7, r0, r0, lsl #17
   1f628:	andeq	r9, r1, r8, ror #27
   1f62c:	andeq	r7, r0, r8, lsl #16
   1f630:	andeq	r7, r0, r4, lsr r3
   1f634:	andeq	r9, r1, r4, lsr #27
   1f638:	strdeq	r7, [r0], -r0
   1f63c:	andeq	r9, r1, r8, lsl #27
   1f640:	andeq	r7, r0, ip, lsl lr
   1f644:	andeq	r9, r1, ip, lsl sp
   1f648:	andeq	r9, r1, ip, lsl #26
   1f64c:			; <UNDEFINED> instruction: 0x00019cb4
   1f650:	andeq	r7, r0, r0, ror #13

0001f654 <vc_tv_get_device_id@@Base>:
   1f654:	ldr	r3, [pc, #12]	; 1f668 <vc_tv_get_device_id@@Base+0x14>
   1f658:	mov	r1, r0
   1f65c:	add	r3, pc, r3
   1f660:	ldr	r0, [r3, #3592]	; 0xe08
   1f664:	b	1f360 <vc_tv_get_device_id_id@@Base>
   1f668:	andeq	r9, r1, ip, lsl ip

0001f66c <vc_tv_hdmi_power_on_explicit_id@@Base>:
   1f66c:	push	{r4, r5, r6, lr}
   1f670:	cmp	r2, #3
   1f674:	sub	sp, sp, #24
   1f678:	mov	r5, r1
   1f67c:	mov	r6, r0
   1f680:	beq	1f698 <vc_tv_hdmi_power_on_explicit_id@@Base+0x2c>
   1f684:	mov	r0, r6
   1f688:	mov	r1, r5
   1f68c:	bl	1af14 <vc_tv_hdmi_power_on_explicit_new_id@@Base>
   1f690:	add	sp, sp, #24
   1f694:	pop	{r4, r5, r6, pc}
   1f698:	mov	r2, #0
   1f69c:	mov	ip, #4
   1f6a0:	mov	r4, #1
   1f6a4:	add	r1, sp, #12
   1f6a8:	str	r3, [sp, #4]
   1f6ac:	str	r2, [sp, #20]
   1f6b0:	str	ip, [sp, #12]
   1f6b4:	str	r4, [sp, #16]
   1f6b8:	bl	1e478 <vc_tv_hdmi_set_property_id@@Base>
   1f6bc:	mov	r2, r4
   1f6c0:	ldr	r3, [sp, #4]
   1f6c4:	b	1f684 <vc_tv_hdmi_power_on_explicit_id@@Base+0x18>

0001f6c8 <vc_tv_hdmi_power_on_explicit@@Base>:
   1f6c8:	push	{lr}		; (str lr, [sp, #-4]!)
   1f6cc:	mov	lr, r1
   1f6d0:	ldr	ip, [pc, #24]	; 1f6f0 <vc_tv_hdmi_power_on_explicit@@Base+0x28>
   1f6d4:	mov	r3, r2
   1f6d8:	add	ip, pc, ip
   1f6dc:	mov	r1, r0
   1f6e0:	mov	r2, lr
   1f6e4:	ldr	r0, [ip, #3592]	; 0xe08
   1f6e8:	pop	{lr}		; (ldr lr, [sp], #4)
   1f6ec:	b	1f66c <vc_tv_hdmi_power_on_explicit_id@@Base>
   1f6f0:	andeq	r9, r1, r0, lsr #23

0001f6f4 <vc_tv_get_attached_devices@@Base>:
   1f6f4:	push	{r4, r5, r6, lr}
   1f6f8:	mov	r1, #0
   1f6fc:	sub	sp, sp, #40	; 0x28
   1f700:	mov	r2, #20
   1f704:	mov	r6, r0
   1f708:	bl	62e4 <memset@plt>
   1f70c:	mov	ip, #26
   1f710:	mov	r0, #4
   1f714:	mov	r2, #0
   1f718:	ldr	r1, [pc, #392]	; 1f8a8 <vc_tv_get_attached_devices@@Base+0x1b4>
   1f71c:	add	r3, sp, #40	; 0x28
   1f720:	add	r1, pc, r1
   1f724:	str	ip, [r3, #-28]!	; 0xffffffe4
   1f728:	ldr	ip, [r1]
   1f72c:	str	r3, [sp, #16]
   1f730:	cmp	ip, r0
   1f734:	str	r0, [sp, #20]
   1f738:	str	r2, [sp, #24]
   1f73c:	str	r2, [sp, #28]
   1f740:	str	r2, [sp, #8]
   1f744:	bls	1f778 <vc_tv_get_attached_devices@@Base+0x84>
   1f748:	ldr	r3, [pc, #348]	; 1f8ac <vc_tv_get_attached_devices@@Base+0x1b8>
   1f74c:	ldr	ip, [pc, #348]	; 1f8b0 <vc_tv_get_attached_devices@@Base+0x1bc>
   1f750:	str	r2, [sp, #4]
   1f754:	ldr	r2, [pc, #344]	; 1f8b4 <vc_tv_get_attached_devices@@Base+0x1c0>
   1f758:	add	r3, pc, r3
   1f75c:	add	ip, pc, ip
   1f760:	mov	r0, r1
   1f764:	add	r3, r3, #84	; 0x54
   1f768:	str	ip, [sp]
   1f76c:	mov	r1, #5
   1f770:	add	r2, pc, r2
   1f774:	bl	6b60 <vcos_log_impl@plt>
   1f778:	ldr	r4, [pc, #312]	; 1f8b8 <vc_tv_get_attached_devices@@Base+0x1c4>
   1f77c:	add	r4, pc, r4
   1f780:	ldr	r3, [r4, #3208]	; 0xc88
   1f784:	cmp	r3, #0
   1f788:	beq	1f868 <vc_tv_get_attached_devices@@Base+0x174>
   1f78c:	add	r5, r4, #24
   1f790:	add	r5, r5, #3120	; 0xc30
   1f794:	mov	r0, r5
   1f798:	bl	5ffc <pthread_mutex_lock@plt>
   1f79c:	ldr	r3, [r4, #3208]	; 0xc88
   1f7a0:	cmp	r3, #0
   1f7a4:	beq	1f860 <vc_tv_get_attached_devices@@Base+0x16c>
   1f7a8:	ldr	r0, [r4, #24]
   1f7ac:	bl	6134 <vchi_service_use@plt>
   1f7b0:	mov	r3, #0
   1f7b4:	ldr	r0, [r4, #24]
   1f7b8:	add	r1, sp, #16
   1f7bc:	str	r3, [sp]
   1f7c0:	mov	r2, #2
   1f7c4:	mov	r3, #4
   1f7c8:	bl	5cc0 <vchi_msg_queuev@plt>
   1f7cc:	subs	r5, r0, #0
   1f7d0:	beq	1f878 <vc_tv_get_attached_devices@@Base+0x184>
   1f7d4:	ldr	r3, [r4]
   1f7d8:	cmp	r3, #1
   1f7dc:	bls	1f818 <vc_tv_get_attached_devices@@Base+0x124>
   1f7e0:	ldr	r3, [sp, #12]
   1f7e4:	cmp	r3, #26
   1f7e8:	bhi	1f854 <vc_tv_get_attached_devices@@Base+0x160>
   1f7ec:	ldr	r2, [pc, #200]	; 1f8bc <vc_tv_get_attached_devices@@Base+0x1c8>
   1f7f0:	add	r2, pc, r2
   1f7f4:	ldr	r3, [r2, r3, lsl #2]
   1f7f8:	mov	r2, #0
   1f7fc:	ldr	r0, [pc, #188]	; 1f8c0 <vc_tv_get_attached_devices@@Base+0x1cc>
   1f800:	stm	sp, {r2, r5}
   1f804:	ldr	r2, [pc, #184]	; 1f8c4 <vc_tv_get_attached_devices@@Base+0x1d0>
   1f808:	add	r0, pc, r0
   1f80c:	mov	r1, #2
   1f810:	add	r2, pc, r2
   1f814:	bl	6b60 <vcos_log_impl@plt>
   1f818:	ldr	r3, [pc, #168]	; 1f8c8 <vc_tv_get_attached_devices@@Base+0x1d4>
   1f81c:	add	r3, pc, r3
   1f820:	ldr	r2, [r3, #3208]	; 0xc88
   1f824:	cmp	r2, #0
   1f828:	beq	1f834 <vc_tv_get_attached_devices@@Base+0x140>
   1f82c:	ldr	r0, [r3, #24]
   1f830:	bl	6014 <vchi_service_release@plt>
   1f834:	ldr	r0, [pc, #144]	; 1f8cc <vc_tv_get_attached_devices@@Base+0x1d8>
   1f838:	add	r0, pc, r0
   1f83c:	add	r0, r0, #24
   1f840:	add	r0, r0, #3120	; 0xc30
   1f844:	bl	6b84 <pthread_mutex_unlock@plt>
   1f848:	mov	r0, r5
   1f84c:	add	sp, sp, #40	; 0x28
   1f850:	pop	{r4, r5, r6, pc}
   1f854:	ldr	r3, [pc, #116]	; 1f8d0 <vc_tv_get_attached_devices@@Base+0x1dc>
   1f858:	add	r3, pc, r3
   1f85c:	b	1f7f8 <vc_tv_get_attached_devices@@Base+0x104>
   1f860:	mov	r0, r5
   1f864:	bl	6b84 <pthread_mutex_unlock@plt>
   1f868:	mov	r5, #0
   1f86c:	mov	r0, r5
   1f870:	add	sp, sp, #40	; 0x28
   1f874:	pop	{r4, r5, r6, pc}
   1f878:	mov	r0, r6
   1f87c:	mov	r1, #20
   1f880:	add	r2, sp, #8
   1f884:	bl	18924 <vc_gpuserv_execute_code@@Base+0x178>
   1f888:	ldr	r3, [sp, #8]
   1f88c:	mov	r5, r0
   1f890:	cmp	r3, #4
   1f894:	bne	1f818 <vc_tv_get_attached_devices@@Base+0x124>
   1f898:	ldr	r3, [r6]
   1f89c:	cmp	r3, #0
   1f8a0:	movlt	r5, r3
   1f8a4:	b	1f818 <vc_tv_get_attached_devices@@Base+0x124>
   1f8a8:	andeq	r9, r1, r8, asr fp
   1f8ac:	andeq	r7, r0, r8, lsr #1
   1f8b0:	andeq	r7, r0, r0, ror #23
   1f8b4:	andeq	r7, r0, ip, asr r5
   1f8b8:	strdeq	r9, [r1], -ip
   1f8bc:	ldrdeq	r8, [r1], -r4
   1f8c0:	andeq	r9, r1, r0, ror sl
   1f8c4:	strdeq	r7, [r0], -r4
   1f8c8:	andeq	r9, r1, ip, asr sl
   1f8cc:	andeq	r9, r1, r0, asr #20
   1f8d0:	andeq	r7, r0, r4, ror #8

0001f8d4 <vc_vchi_tv_init@@Base>:
   1f8d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8d8:	ldr	r4, [pc, #1216]	; 1fda0 <vc_vchi_tv_init@@Base+0x4cc>
   1f8dc:	sub	sp, sp, #124	; 0x7c
   1f8e0:	add	r4, pc, r4
   1f8e4:	ldr	r3, [r4, #3208]	; 0xc88
   1f8e8:	cmp	r3, #0
   1f8ec:	str	r3, [sp, #24]
   1f8f0:	bne	1fd78 <vc_vchi_tv_init@@Base+0x4a4>
   1f8f4:	mov	r3, #2
   1f8f8:	mov	r7, r0
   1f8fc:	ldr	r0, [pc, #1184]	; 1fda4 <vc_vchi_tv_init@@Base+0x4d0>
   1f900:	str	r3, [r4]
   1f904:	mov	r5, r1
   1f908:	add	r0, pc, r0
   1f90c:	mov	r1, r4
   1f910:	mov	r6, r2
   1f914:	bl	65fc <vcos_log_register@plt>
   1f918:	ldr	r3, [r4]
   1f91c:	cmp	r3, #4
   1f920:	bhi	1fd50 <vc_vchi_tv_init@@Base+0x47c>
   1f924:	ldr	r4, [pc, #1148]	; 1fda8 <vc_vchi_tv_init@@Base+0x4d4>
   1f928:	mov	r1, #0
   1f92c:	add	r4, pc, r4
   1f930:	add	r8, r4, #24
   1f934:	ldr	r2, [pc, #1136]	; 1fdac <vc_vchi_tv_init@@Base+0x4d8>
   1f938:	mov	r0, r8
   1f93c:	bl	62e4 <memset@plt>
   1f940:	add	r0, r8, #3120	; 0xc30
   1f944:	mov	r1, #0
   1f948:	str	r6, [r4, #3140]	; 0xc44
   1f94c:	bl	6b9c <pthread_mutex_init@plt>
   1f950:	cmp	r0, #0
   1f954:	beq	1f95c <vc_vchi_tv_init@@Base+0x88>
   1f958:	bl	6098 <vcos_pthreads_map_errno@plt>
   1f95c:	mov	r1, #0
   1f960:	ldr	r3, [pc, #1096]	; 1fdb0 <vc_vchi_tv_init@@Base+0x4dc>
   1f964:	mov	r2, r1
   1f968:	add	r3, pc, r3
   1f96c:	add	r3, r3, #3296	; 0xce0
   1f970:	add	r6, r3, #28
   1f974:	mov	r0, r6
   1f978:	add	r4, r3, #4
   1f97c:	bl	6a94 <sem_init@plt>
   1f980:	subs	r1, r0, #0
   1f984:	bne	1fd48 <vc_vchi_tv_init@@Base+0x474>
   1f988:	mov	r0, r4
   1f98c:	bl	6b9c <pthread_mutex_init@plt>
   1f990:	cmp	r0, #0
   1f994:	bne	1fd28 <vc_vchi_tv_init@@Base+0x454>
   1f998:	mov	r1, #0
   1f99c:	ldr	r3, [pc, #1040]	; 1fdb4 <vc_vchi_tv_init@@Base+0x4e0>
   1f9a0:	mov	r2, r1
   1f9a4:	add	r3, pc, r3
   1f9a8:	add	r3, r3, #3328	; 0xd00
   1f9ac:	add	r6, r3, #36	; 0x24
   1f9b0:	mov	r0, r6
   1f9b4:	add	r4, r3, #12
   1f9b8:	bl	6a94 <sem_init@plt>
   1f9bc:	subs	r1, r0, #0
   1f9c0:	bne	1fd40 <vc_vchi_tv_init@@Base+0x46c>
   1f9c4:	mov	r0, r4
   1f9c8:	bl	6b9c <pthread_mutex_init@plt>
   1f9cc:	cmp	r0, #0
   1f9d0:	bne	1fd10 <vc_vchi_tv_init@@Base+0x43c>
   1f9d4:	mov	r4, #128	; 0x80
   1f9d8:	mov	ip, #1
   1f9dc:	ldr	lr, [pc, #980]	; 1fdb8 <vc_vchi_tv_init@@Base+0x4e4>
   1f9e0:	ldr	r3, [pc, #980]	; 1fdbc <vc_vchi_tv_init@@Base+0x4e8>
   1f9e4:	add	lr, pc, lr
   1f9e8:	ldr	r2, [lr, #3140]	; 0xc44
   1f9ec:	add	r3, pc, r3
   1f9f0:	add	r3, r3, #1120	; 0x460
   1f9f4:	add	r6, lr, #3216	; 0xc90
   1f9f8:	cmp	r2, #0
   1f9fc:	add	r6, r6, #12
   1fa00:	add	r3, r3, #8
   1fa04:	ldm	r3, {r0, r1, r2, r3}
   1fa08:	stm	r6, {r0, r1, r2, r3}
   1fa0c:	addeq	r3, sp, #76	; 0x4c
   1fa10:	str	r4, [lr, #3288]	; 0xcd8
   1fa14:	str	ip, [lr, #3292]	; 0xcdc
   1fa18:	addeq	r8, sp, #32
   1fa1c:	streq	r3, [sp, #28]
   1fa20:	moveq	r6, r3
   1fa24:	beq	1fbdc <vc_vchi_tv_init@@Base+0x308>
   1fa28:	mov	fp, lr
   1fa2c:	mov	r4, #0
   1fa30:	add	r3, lr, #3296	; 0xce0
   1fa34:	ldr	r2, [pc, #900]	; 1fdc0 <vc_vchi_tv_init@@Base+0x4ec>
   1fa38:	add	r3, r3, #4
   1fa3c:	ldr	r9, [pc, #896]	; 1fdc4 <vc_vchi_tv_init@@Base+0x4f0>
   1fa40:	add	r2, pc, r2
   1fa44:	str	r3, [sp, #8]
   1fa48:	ldr	sl, [pc, #888]	; 1fdc8 <vc_vchi_tv_init@@Base+0x4f4>
   1fa4c:	add	r3, lr, #36	; 0x24
   1fa50:	add	r9, pc, r9
   1fa54:	str	r2, [sp, #12]
   1fa58:	sub	r5, r5, #4
   1fa5c:	add	r6, lr, #24
   1fa60:	str	r3, [sp, #16]
   1fa64:	add	r8, sp, #32
   1fa68:	mov	r2, #1
   1fa6c:	mov	r3, #0
   1fa70:	ldr	r0, [sp, #8]
   1fa74:	add	r1, fp, #3328	; 0xd00
   1fa78:	str	r0, [sp, #60]	; 0x3c
   1fa7c:	ldr	r0, [pc, #840]	; 1fdcc <vc_vchi_tv_init@@Base+0x4f8>
   1fa80:	ldr	ip, [r5, #4]!
   1fa84:	str	r0, [sp, #84]	; 0x54
   1fa88:	ldr	r0, [sp, #12]
   1fa8c:	add	r1, r1, #12
   1fa90:	str	r0, [sp, #100]	; 0x64
   1fa94:	str	r1, [sp, #104]	; 0x68
   1fa98:	str	r2, [sp, #32]
   1fa9c:	str	r2, [sp, #36]	; 0x24
   1faa0:	str	r2, [sp, #64]	; 0x40
   1faa4:	str	r2, [sp, #68]	; 0x44
   1faa8:	str	r2, [sp, #76]	; 0x4c
   1faac:	str	r2, [sp, #80]	; 0x50
   1fab0:	mov	r0, r7
   1fab4:	mov	r1, r8
   1fab8:	mov	r2, r6
   1fabc:	str	sl, [sp, #40]	; 0x28
   1fac0:	str	r9, [sp, #56]	; 0x38
   1fac4:	str	r3, [sp, #48]	; 0x30
   1fac8:	str	r3, [sp, #52]	; 0x34
   1facc:	str	r3, [sp, #72]	; 0x48
   1fad0:	str	r3, [sp, #92]	; 0x5c
   1fad4:	str	r3, [sp, #96]	; 0x60
   1fad8:	str	r3, [sp, #108]	; 0x6c
   1fadc:	str	r3, [sp, #112]	; 0x70
   1fae0:	str	r3, [sp, #116]	; 0x74
   1fae4:	str	ip, [sp, #44]	; 0x2c
   1fae8:	str	ip, [sp, #88]	; 0x58
   1faec:	bl	689c <vchi_service_open@plt>
   1faf0:	cmp	r0, #0
   1faf4:	beq	1fb74 <vc_vchi_tv_init@@Base+0x2a0>
   1faf8:	ldr	r2, [fp]
   1fafc:	mov	r1, r0
   1fb00:	cmp	r2, #1
   1fb04:	bls	1fb6c <vc_vchi_tv_init@@Base+0x298>
   1fb08:	ldr	r2, [pc, #704]	; 1fdd0 <vc_vchi_tv_init@@Base+0x4fc>
   1fb0c:	mov	r3, r1
   1fb10:	mov	r0, fp
   1fb14:	mov	r1, #2
   1fb18:	add	r2, pc, r2
   1fb1c:	bl	6b60 <vcos_log_impl@plt>
   1fb20:	mov	r5, r4
   1fb24:	cmp	r4, #0
   1fb28:	beq	1fb58 <vc_vchi_tv_init@@Base+0x284>
   1fb2c:	ldr	r3, [pc, #672]	; 1fdd4 <vc_vchi_tv_init@@Base+0x500>
   1fb30:	add	r3, pc, r3
   1fb34:	add	r3, r3, #24
   1fb38:	add	r4, r3, r4, lsl #2
   1fb3c:	ldr	r0, [r4, #-4]!
   1fb40:	bl	5d38 <vchi_service_close@plt>
   1fb44:	sub	r5, r5, #1
   1fb48:	ldr	r0, [r4, #12]
   1fb4c:	bl	5d38 <vchi_service_close@plt>
   1fb50:	cmp	r5, #0
   1fb54:	bne	1fb3c <vc_vchi_tv_init@@Base+0x268>
   1fb58:	mvn	r3, #0
   1fb5c:	str	r3, [sp, #24]
   1fb60:	ldr	r0, [sp, #24]
   1fb64:	add	sp, sp, #124	; 0x7c
   1fb68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb6c:	mov	r5, r4
   1fb70:	b	1fb24 <vc_vchi_tv_init@@Base+0x250>
   1fb74:	add	r3, sp, #76	; 0x4c
   1fb78:	mov	r1, r3
   1fb7c:	ldr	r2, [sp, #16]
   1fb80:	mov	r0, r7
   1fb84:	str	r3, [sp, #28]
   1fb88:	str	r6, [sp, #20]
   1fb8c:	bl	689c <vchi_service_open@plt>
   1fb90:	cmp	r0, #0
   1fb94:	ldr	r2, [sp, #16]
   1fb98:	ldr	r3, [sp, #20]
   1fb9c:	bne	1fcd0 <vc_vchi_tv_init@@Base+0x3fc>
   1fba0:	ldr	r0, [r3]
   1fba4:	str	r2, [sp, #20]
   1fba8:	bl	6014 <vchi_service_release@plt>
   1fbac:	ldr	r2, [sp, #20]
   1fbb0:	add	r4, r4, #1
   1fbb4:	ldr	r0, [r2]
   1fbb8:	bl	6014 <vchi_service_release@plt>
   1fbbc:	ldr	r3, [fp, #3140]	; 0xc44
   1fbc0:	add	r6, r6, #4
   1fbc4:	cmp	r3, r4
   1fbc8:	ldr	r3, [sp, #16]
   1fbcc:	add	r3, r3, #4
   1fbd0:	str	r3, [sp, #16]
   1fbd4:	bhi	1fa68 <vc_vchi_tv_init@@Base+0x194>
   1fbd8:	ldr	r6, [sp, #28]
   1fbdc:	mov	r0, r6
   1fbe0:	bl	6638 <vcos_thread_attr_init@plt>
   1fbe4:	mov	r5, #1
   1fbe8:	mov	ip, #4096	; 0x1000
   1fbec:	ldr	r4, [pc, #484]	; 1fdd8 <vc_vchi_tv_init@@Base+0x504>
   1fbf0:	ldr	r1, [pc, #484]	; 1fddc <vc_vchi_tv_init@@Base+0x508>
   1fbf4:	add	r4, pc, r4
   1fbf8:	add	r3, r4, #24
   1fbfc:	str	r3, [sp]
   1fc00:	ldr	r3, [pc, #472]	; 1fde0 <vc_vchi_tv_init@@Base+0x50c>
   1fc04:	add	r0, r4, #3376	; 0xd30
   1fc08:	mov	r2, r6
   1fc0c:	add	r1, pc, r1
   1fc10:	add	r3, pc, r3
   1fc14:	add	r0, r0, #8
   1fc18:	str	ip, [sp, #80]	; 0x50
   1fc1c:	str	r5, [sp, #92]	; 0x5c
   1fc20:	bl	62cc <vcos_thread_create@plt>
   1fc24:	mov	r3, #65536	; 0x10000
   1fc28:	mov	r0, r8
   1fc2c:	str	r5, [r4, #3208]	; 0xc88
   1fc30:	str	r3, [r4, #3592]	; 0xe08
   1fc34:	bl	1f6f4 <vc_tv_get_attached_devices@@Base>
   1fc38:	cmn	r0, #1
   1fc3c:	beq	1fca0 <vc_vchi_tv_init@@Base+0x3cc>
   1fc40:	ldr	r3, [sp, #32]
   1fc44:	cmp	r3, #0
   1fc48:	ble	1fca0 <vc_vchi_tv_init@@Base+0x3cc>
   1fc4c:	cmp	r3, r5
   1fc50:	addne	r3, r3, #3
   1fc54:	mov	r1, #7
   1fc58:	addne	r8, r8, r3
   1fc5c:	addne	r2, sp, #35	; 0x23
   1fc60:	beq	1fd94 <vc_vchi_tv_init@@Base+0x4c0>
   1fc64:	ldrb	r3, [r2, #1]!
   1fc68:	cmp	r3, #0
   1fc6c:	beq	1fd84 <vc_vchi_tv_init@@Base+0x4b0>
   1fc70:	cmp	r3, #1
   1fc74:	moveq	r1, r3
   1fc78:	beq	1fc8c <vc_vchi_tv_init@@Base+0x3b8>
   1fc7c:	cmp	r3, #2
   1fc80:	bne	1fc8c <vc_vchi_tv_init@@Base+0x3b8>
   1fc84:	cmp	r1, #1
   1fc88:	movne	r1, #2
   1fc8c:	cmp	r2, r8
   1fc90:	bne	1fc64 <vc_vchi_tv_init@@Base+0x390>
   1fc94:	ldr	r3, [pc, #328]	; 1fde4 <vc_vchi_tv_init@@Base+0x510>
   1fc98:	add	r3, pc, r3
   1fc9c:	str	r1, [r3, #3592]	; 0xe08
   1fca0:	ldr	r0, [pc, #320]	; 1fde8 <vc_vchi_tv_init@@Base+0x514>
   1fca4:	add	r0, pc, r0
   1fca8:	ldr	r3, [r0]
   1fcac:	cmp	r3, #4
   1fcb0:	bls	1fb60 <vc_vchi_tv_init@@Base+0x28c>
   1fcb4:	ldr	r2, [pc, #304]	; 1fdec <vc_vchi_tv_init@@Base+0x518>
   1fcb8:	mov	r1, #5
   1fcbc:	add	r2, pc, r2
   1fcc0:	bl	6b60 <vcos_log_impl@plt>
   1fcc4:	ldr	r0, [sp, #24]
   1fcc8:	add	sp, sp, #124	; 0x7c
   1fccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fcd0:	add	r3, fp, r4, lsl #2
   1fcd4:	str	r0, [sp, #8]
   1fcd8:	ldr	r0, [r3, #24]
   1fcdc:	bl	5d38 <vchi_service_close@plt>
   1fce0:	ldr	r3, [fp]
   1fce4:	cmp	r3, #1
   1fce8:	bls	1fb6c <vc_vchi_tv_init@@Base+0x298>
   1fcec:	ldr	r1, [sp, #8]
   1fcf0:	ldr	r2, [pc, #248]	; 1fdf0 <vc_vchi_tv_init@@Base+0x51c>
   1fcf4:	mov	r3, r1
   1fcf8:	mov	r0, fp
   1fcfc:	mov	r1, #2
   1fd00:	add	r2, pc, r2
   1fd04:	bl	6b60 <vcos_log_impl@plt>
   1fd08:	mov	r5, r4
   1fd0c:	b	1fb24 <vc_vchi_tv_init@@Base+0x250>
   1fd10:	bl	6098 <vcos_pthreads_map_errno@plt>
   1fd14:	cmp	r0, #0
   1fd18:	beq	1f9d4 <vc_vchi_tv_init@@Base+0x100>
   1fd1c:	mov	r0, r6
   1fd20:	bl	5fcc <sem_destroy@plt>
   1fd24:	b	1f9d4 <vc_vchi_tv_init@@Base+0x100>
   1fd28:	bl	6098 <vcos_pthreads_map_errno@plt>
   1fd2c:	cmp	r0, #0
   1fd30:	beq	1f998 <vc_vchi_tv_init@@Base+0xc4>
   1fd34:	mov	r0, r6
   1fd38:	bl	5fcc <sem_destroy@plt>
   1fd3c:	b	1f998 <vc_vchi_tv_init@@Base+0xc4>
   1fd40:	bl	6098 <vcos_pthreads_map_errno@plt>
   1fd44:	b	1f9d4 <vc_vchi_tv_init@@Base+0x100>
   1fd48:	bl	6098 <vcos_pthreads_map_errno@plt>
   1fd4c:	b	1f998 <vc_vchi_tv_init@@Base+0xc4>
   1fd50:	ldr	r3, [pc, #156]	; 1fdf4 <vc_vchi_tv_init@@Base+0x520>
   1fd54:	ldr	r2, [pc, #156]	; 1fdf8 <vc_vchi_tv_init@@Base+0x524>
   1fd58:	add	r3, pc, r3
   1fd5c:	add	r3, r3, #1104	; 0x450
   1fd60:	mov	r0, r4
   1fd64:	add	r3, r3, #8
   1fd68:	mov	r1, #5
   1fd6c:	add	r2, pc, r2
   1fd70:	bl	6b60 <vcos_log_impl@plt>
   1fd74:	b	1f924 <vc_vchi_tv_init@@Base+0x50>
   1fd78:	mvn	r3, #1
   1fd7c:	str	r3, [sp, #24]
   1fd80:	b	1fb60 <vc_vchi_tv_init@@Base+0x28c>
   1fd84:	ldr	r2, [pc, #112]	; 1fdfc <vc_vchi_tv_init@@Base+0x528>
   1fd88:	add	r2, pc, r2
   1fd8c:	str	r3, [r2, #3592]	; 0xe08
   1fd90:	b	1fca0 <vc_vchi_tv_init@@Base+0x3cc>
   1fd94:	ldrb	r3, [sp, #36]	; 0x24
   1fd98:	str	r3, [r4, #3592]	; 0xe08
   1fd9c:	b	1fca0 <vc_vchi_tv_init@@Base+0x3cc>
   1fda0:	muleq	r1, r8, r9
   1fda4:	andeq	r7, r0, ip, asr #20
   1fda8:	andeq	r9, r1, ip, asr #18
   1fdac:	andeq	r0, r0, ip, asr #25
   1fdb0:	andeq	r9, r1, r0, lsl r9
   1fdb4:	ldrdeq	r9, [r1], -r4
   1fdb8:	muleq	r1, r4, r8
   1fdbc:	andeq	r6, r0, r4, lsl lr
   1fdc0:			; <UNDEFINED> instruction: 0xffff9104
   1fdc4:			; <UNDEFINED> instruction: 0xffff9038
   1fdc8:	ldrbpl	r5, [r6], #-854	; 0xfffffcaa
   1fdcc:	ldrbpl	r4, [r6], #-3668	; 0xfffff1ac
   1fdd0:	andeq	r7, r0, ip, ror r8
   1fdd4:	andeq	r9, r1, r8, asr #14
   1fdd8:	andeq	r9, r1, r4, lsl #13
   1fddc:	andeq	r7, r0, ip, lsr #15
   1fde0:			; <UNDEFINED> instruction: 0xffffef88
   1fde4:	andeq	r9, r1, r0, ror #11
   1fde8:	ldrdeq	r9, [r1], -r4
   1fdec:	andeq	r7, r0, r8, lsl #14
   1fdf0:	andeq	r7, r0, r8, ror #12
   1fdf4:	andeq	r6, r0, r8, lsr #21
   1fdf8:	andeq	r7, r0, r0, lsl r1
   1fdfc:	strdeq	r9, [r1], -r0
   1fe00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fe04:	ldr	r9, [pc, #232]	; 1fef4 <vc_vchi_tv_init@@Base+0x620>
   1fe08:	ldr	r4, [pc, #232]	; 1fef8 <vc_vchi_tv_init@@Base+0x624>
   1fe0c:	add	r9, pc, r9
   1fe10:	add	r4, pc, r4
   1fe14:	sub	sp, sp, #8
   1fe18:	add	r9, r9, #24
   1fe1c:	add	sl, r4, #40	; 0x28
   1fe20:	add	r8, r4, #2128	; 0x850
   1fe24:	mov	r0, r9
   1fe28:	bl	67e8 <sem_wait@plt>
   1fe2c:	cmn	r0, #1
   1fe30:	bne	1fee0 <vc_vchi_tv_init@@Base+0x60c>
   1fe34:	bl	5fb4 <__errno_location@plt>
   1fe38:	ldr	r3, [r0]
   1fe3c:	cmp	r3, #4
   1fe40:	beq	1fe24 <vc_vchi_tv_init@@Base+0x550>
   1fe44:	cmp	r3, #0
   1fe48:	bne	1fed4 <vc_vchi_tv_init@@Base+0x600>
   1fe4c:	ldr	r3, [pc, #168]	; 1fefc <vc_vchi_tv_init@@Base+0x628>
   1fe50:	add	r3, pc, r3
   1fe54:	ldr	r3, [r3, #3372]	; 0xd2c
   1fe58:	cmp	r3, #0
   1fe5c:	beq	1fed4 <vc_vchi_tv_init@@Base+0x600>
   1fe60:	mov	r7, #0
   1fe64:	add	r6, sl, #3104	; 0xc20
   1fe68:	add	r6, r6, #8
   1fe6c:	ldr	r0, [r4, #52]	; 0x34
   1fe70:	mov	r1, r8
   1fe74:	str	r7, [sp]
   1fe78:	mov	r2, #1024	; 0x400
   1fe7c:	mov	r3, r6
   1fe80:	bl	61c4 <vchi_msg_dequeue@plt>
   1fe84:	cmp	r0, #0
   1fe88:	bne	1fe24 <vc_vchi_tv_init@@Base+0x550>
   1fe8c:	ldr	r5, [r4, #2128]	; 0x850
   1fe90:	cmp	r5, #0
   1fe94:	bne	1feb0 <vc_vchi_tv_init@@Base+0x5dc>
   1fe98:	ldr	r3, [r4, #3360]	; 0xd20
   1fe9c:	cmp	r3, #0
   1fea0:	beq	1fe6c <vc_vchi_tv_init@@Base+0x598>
   1fea4:	ldr	r1, [r4, #3364]	; 0xd24
   1fea8:	blx	r3
   1feac:	b	1fe6c <vc_vchi_tv_init@@Base+0x598>
   1feb0:	ldr	r0, [r4, #52]	; 0x34
   1feb4:	bl	6014 <vchi_service_release@plt>
   1feb8:	ldr	r3, [r4, #3348]	; 0xd14
   1febc:	cmp	r3, #0
   1fec0:	beq	1fe6c <vc_vchi_tv_init@@Base+0x598>
   1fec4:	mov	r0, r5
   1fec8:	ldr	r1, [r4, #3352]	; 0xd18
   1fecc:	blx	r3
   1fed0:	b	1fe6c <vc_vchi_tv_init@@Base+0x598>
   1fed4:	mov	r0, #0
   1fed8:	add	sp, sp, #8
   1fedc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fee0:	cmp	r0, #0
   1fee4:	beq	1fe4c <vc_vchi_tv_init@@Base+0x578>
   1fee8:	bl	5fb4 <__errno_location@plt>
   1feec:	ldr	r3, [r0]
   1fef0:	b	1fe44 <vc_vchi_tv_init@@Base+0x570>
   1fef4:	andeq	sl, r1, ip, ror r2
   1fef8:	andeq	sl, r1, r8, ror r2
   1fefc:	andeq	sl, r1, r8, lsr r2
   1ff00:	subs	r1, r1, #1
   1ff04:	movne	r1, #1
   1ff08:	cmp	r0, #0
   1ff0c:	orreq	r1, r1, #1
   1ff10:	cmp	r1, #0
   1ff14:	bxne	lr
   1ff18:	push	{r4, r5, lr}
   1ff1c:	add	r5, r0, #24
   1ff20:	sub	sp, sp, #12
   1ff24:	mov	r4, r0
   1ff28:	bl	5ffc <pthread_mutex_lock@plt>
   1ff2c:	mov	r0, r5
   1ff30:	add	r1, sp, #4
   1ff34:	bl	6524 <sem_getvalue@plt>
   1ff38:	cmp	r0, #0
   1ff3c:	bne	1ff54 <vc_vchi_tv_init@@Base+0x680>
   1ff40:	ldr	r3, [sp, #4]
   1ff44:	cmp	r3, #0
   1ff48:	bne	1ff54 <vc_vchi_tv_init@@Base+0x680>
   1ff4c:	mov	r0, r5
   1ff50:	bl	66c8 <sem_post@plt>
   1ff54:	mov	r0, r4
   1ff58:	bl	6b84 <pthread_mutex_unlock@plt>
   1ff5c:	add	sp, sp, #12
   1ff60:	pop	{r4, r5, pc}
   1ff64:	subs	r1, r1, #1
   1ff68:	movne	r1, #1
   1ff6c:	cmp	r0, #0
   1ff70:	orreq	r1, r1, #1
   1ff74:	cmp	r1, #0
   1ff78:	bxne	lr
   1ff7c:	push	{r4, r5, lr}
   1ff80:	add	r5, r0, #24
   1ff84:	sub	sp, sp, #12
   1ff88:	mov	r4, r0
   1ff8c:	bl	5ffc <pthread_mutex_lock@plt>
   1ff90:	mov	r0, r5
   1ff94:	add	r1, sp, #4
   1ff98:	bl	6524 <sem_getvalue@plt>
   1ff9c:	cmp	r0, #0
   1ffa0:	bne	1ffb8 <vc_vchi_tv_init@@Base+0x6e4>
   1ffa4:	ldr	r3, [sp, #4]
   1ffa8:	cmp	r3, #0
   1ffac:	bne	1ffb8 <vc_vchi_tv_init@@Base+0x6e4>
   1ffb0:	mov	r0, r5
   1ffb4:	bl	66c8 <sem_post@plt>
   1ffb8:	mov	r0, r4
   1ffbc:	bl	6b84 <pthread_mutex_unlock@plt>
   1ffc0:	add	sp, sp, #12
   1ffc4:	pop	{r4, r5, pc}
   1ffc8:	push	{r4, r5, r6, r7, r8, lr}
   1ffcc:	mvn	ip, #0
   1ffd0:	mov	lr, #4
   1ffd4:	ldr	r4, [pc, #388]	; 20160 <vc_vchi_tv_init@@Base+0x88c>
   1ffd8:	sub	sp, sp, #40	; 0x28
   1ffdc:	add	r3, sp, #40	; 0x28
   1ffe0:	add	r4, pc, r4
   1ffe4:	str	r0, [r3, #-28]!	; 0xffffffe4
   1ffe8:	add	r0, r4, #40	; 0x28
   1ffec:	add	r0, r0, #3120	; 0xc30
   1fff0:	str	r3, [sp, #24]
   1fff4:	str	r1, [sp, #32]
   1fff8:	str	r2, [sp, #36]	; 0x24
   1fffc:	str	lr, [sp, #28]
   20000:	str	ip, [sp, #16]
   20004:	bl	5ffc <pthread_mutex_lock@plt>
   20008:	ldr	r3, [r4, #3372]	; 0xd2c
   2000c:	cmp	r3, #0
   20010:	beq	20040 <vc_vchi_tv_init@@Base+0x76c>
   20014:	ldr	r3, [r4, #3156]	; 0xc54
   20018:	cmp	r3, #0
   2001c:	beq	20040 <vc_vchi_tv_init@@Base+0x76c>
   20020:	mov	r5, #0
   20024:	add	r3, r4, #40	; 0x28
   20028:	ldr	r0, [r3, r5, lsl #2]
   2002c:	bl	6134 <vchi_service_use@plt>
   20030:	ldr	r3, [r4, #3156]	; 0xc54
   20034:	add	r5, r5, #1
   20038:	cmp	r5, r3
   2003c:	bcc	20024 <vc_vchi_tv_init@@Base+0x750>
   20040:	mov	r3, #0
   20044:	ldr	r4, [pc, #280]	; 20164 <vc_vchi_tv_init@@Base+0x890>
   20048:	str	r3, [sp]
   2004c:	add	r4, pc, r4
   20050:	ldr	r0, [r4, #40]	; 0x28
   20054:	add	r1, sp, #24
   20058:	mov	r2, #2
   2005c:	mov	r3, #4
   20060:	bl	5cc0 <vchi_msg_queuev@plt>
   20064:	cmp	r0, #0
   20068:	bne	20078 <vc_vchi_tv_init@@Base+0x7a4>
   2006c:	ldr	r3, [sp, #12]
   20070:	cmp	r3, #0
   20074:	bge	200dc <vc_vchi_tv_init@@Base+0x808>
   20078:	str	r0, [sp, #16]
   2007c:	ldr	r5, [pc, #228]	; 20168 <vc_vchi_tv_init@@Base+0x894>
   20080:	add	r5, pc, r5
   20084:	ldr	r3, [r5, #3372]	; 0xd2c
   20088:	cmp	r3, #0
   2008c:	beq	200bc <vc_vchi_tv_init@@Base+0x7e8>
   20090:	ldr	r3, [r5, #3156]	; 0xc54
   20094:	cmp	r3, #0
   20098:	beq	200bc <vc_vchi_tv_init@@Base+0x7e8>
   2009c:	mov	r4, #0
   200a0:	add	r3, r5, #40	; 0x28
   200a4:	ldr	r0, [r3, r4, lsl #2]
   200a8:	bl	6014 <vchi_service_release@plt>
   200ac:	ldr	r3, [r5, #3156]	; 0xc54
   200b0:	add	r4, r4, #1
   200b4:	cmp	r4, r3
   200b8:	bcc	200a0 <vc_vchi_tv_init@@Base+0x7cc>
   200bc:	ldr	r0, [pc, #168]	; 2016c <vc_vchi_tv_init@@Base+0x898>
   200c0:	add	r0, pc, r0
   200c4:	add	r0, r0, #40	; 0x28
   200c8:	add	r0, r0, #3120	; 0xc30
   200cc:	bl	6b84 <pthread_mutex_unlock@plt>
   200d0:	ldr	r0, [sp, #16]
   200d4:	add	sp, sp, #40	; 0x28
   200d8:	pop	{r4, r5, r6, r7, r8, pc}
   200dc:	mov	r8, r0
   200e0:	ldr	r5, [pc, #136]	; 20170 <vc_vchi_tv_init@@Base+0x89c>
   200e4:	str	r0, [sp, #20]
   200e8:	add	r5, pc, r5
   200ec:	add	r5, r5, #3376	; 0xd30
   200f0:	add	r5, r5, #24
   200f4:	add	r7, sp, #16
   200f8:	add	r6, sp, #20
   200fc:	ldr	r0, [r4, #40]	; 0x28
   20100:	mov	r2, #4
   20104:	str	r8, [sp]
   20108:	mov	r1, r7
   2010c:	mov	r3, r6
   20110:	bl	61c4 <vchi_msg_dequeue@plt>
   20114:	ldr	r2, [sp, #20]
   20118:	cmp	r2, #0
   2011c:	bne	2007c <vc_vchi_tv_init@@Base+0x7a8>
   20120:	mov	r0, r5
   20124:	bl	67e8 <sem_wait@plt>
   20128:	cmn	r0, #1
   2012c:	bne	2014c <vc_vchi_tv_init@@Base+0x878>
   20130:	bl	5fb4 <__errno_location@plt>
   20134:	ldr	r2, [r0]
   20138:	cmp	r2, #4
   2013c:	beq	20120 <vc_vchi_tv_init@@Base+0x84c>
   20140:	cmp	r2, #0
   20144:	beq	200fc <vc_vchi_tv_init@@Base+0x828>
   20148:	b	2007c <vc_vchi_tv_init@@Base+0x7a8>
   2014c:	cmp	r0, #0
   20150:	beq	200fc <vc_vchi_tv_init@@Base+0x828>
   20154:	bl	5fb4 <__errno_location@plt>
   20158:	ldr	r2, [r0]
   2015c:	b	20140 <vc_vchi_tv_init@@Base+0x86c>
   20160:	andeq	sl, r1, r8, lsr #1
   20164:	andeq	sl, r1, ip, lsr r0
   20168:	andeq	sl, r1, r8
   2016c:	andeq	r9, r1, r8, asr #31
   20170:	andeq	r9, r1, r0, lsr #31
   20174:	push	{r4, r5, r6, r7, r8, lr}
   20178:	mov	ip, #4
   2017c:	mov	r4, #0
   20180:	ldr	r5, [pc, #368]	; 202f8 <vc_vchi_tv_init@@Base+0xa24>
   20184:	sub	sp, sp, #40	; 0x28
   20188:	add	r3, sp, #40	; 0x28
   2018c:	add	r5, pc, r5
   20190:	str	r0, [r3, #-28]!	; 0xffffffe4
   20194:	add	r0, r5, #40	; 0x28
   20198:	add	r0, r0, #3120	; 0xc30
   2019c:	str	r3, [sp, #24]
   201a0:	str	r1, [sp, #32]
   201a4:	str	r2, [sp, #36]	; 0x24
   201a8:	str	ip, [sp, #28]
   201ac:	str	r4, [sp, #16]
   201b0:	bl	5ffc <pthread_mutex_lock@plt>
   201b4:	ldr	r3, [r5, #3372]	; 0xd2c
   201b8:	cmp	r3, r4
   201bc:	beq	201e8 <vc_vchi_tv_init@@Base+0x914>
   201c0:	ldr	r3, [r5, #3156]	; 0xc54
   201c4:	cmp	r3, #0
   201c8:	beq	201e8 <vc_vchi_tv_init@@Base+0x914>
   201cc:	add	r3, r5, #40	; 0x28
   201d0:	ldr	r0, [r3, r4, lsl #2]
   201d4:	bl	6134 <vchi_service_use@plt>
   201d8:	ldr	r3, [r5, #3156]	; 0xc54
   201dc:	add	r4, r4, #1
   201e0:	cmp	r4, r3
   201e4:	bcc	201cc <vc_vchi_tv_init@@Base+0x8f8>
   201e8:	mov	r3, #0
   201ec:	ldr	r5, [pc, #264]	; 202fc <vc_vchi_tv_init@@Base+0xa28>
   201f0:	str	r3, [sp]
   201f4:	add	r5, pc, r5
   201f8:	ldr	r0, [r5, #40]	; 0x28
   201fc:	add	r1, sp, #24
   20200:	mov	r2, #2
   20204:	mov	r3, #4
   20208:	bl	5cc0 <vchi_msg_queuev@plt>
   2020c:	cmp	r0, #0
   20210:	beq	20274 <vc_vchi_tv_init@@Base+0x9a0>
   20214:	ldr	r5, [pc, #228]	; 20300 <vc_vchi_tv_init@@Base+0xa2c>
   20218:	add	r5, pc, r5
   2021c:	ldr	r3, [r5, #3372]	; 0xd2c
   20220:	cmp	r3, #0
   20224:	beq	20254 <vc_vchi_tv_init@@Base+0x980>
   20228:	ldr	r3, [r5, #3156]	; 0xc54
   2022c:	cmp	r3, #0
   20230:	beq	20254 <vc_vchi_tv_init@@Base+0x980>
   20234:	mov	r4, #0
   20238:	add	r3, r5, #40	; 0x28
   2023c:	ldr	r0, [r3, r4, lsl #2]
   20240:	bl	6014 <vchi_service_release@plt>
   20244:	ldr	r3, [r5, #3156]	; 0xc54
   20248:	add	r4, r4, #1
   2024c:	cmp	r4, r3
   20250:	bcc	20238 <vc_vchi_tv_init@@Base+0x964>
   20254:	ldr	r0, [pc, #168]	; 20304 <vc_vchi_tv_init@@Base+0xa30>
   20258:	add	r0, pc, r0
   2025c:	add	r0, r0, #40	; 0x28
   20260:	add	r0, r0, #3120	; 0xc30
   20264:	bl	6b84 <pthread_mutex_unlock@plt>
   20268:	ldr	r0, [sp, #16]
   2026c:	add	sp, sp, #40	; 0x28
   20270:	pop	{r4, r5, r6, r7, r8, pc}
   20274:	mov	r8, r0
   20278:	ldr	r4, [pc, #136]	; 20308 <vc_vchi_tv_init@@Base+0xa34>
   2027c:	str	r0, [sp, #20]
   20280:	add	r4, pc, r4
   20284:	add	r4, r4, #3376	; 0xd30
   20288:	add	r4, r4, #24
   2028c:	add	r7, sp, #16
   20290:	add	r6, sp, #20
   20294:	ldr	r0, [r5, #40]	; 0x28
   20298:	mov	r2, #4
   2029c:	str	r8, [sp]
   202a0:	mov	r1, r7
   202a4:	mov	r3, r6
   202a8:	bl	61c4 <vchi_msg_dequeue@plt>
   202ac:	ldr	r2, [sp, #20]
   202b0:	cmp	r2, #0
   202b4:	bne	20214 <vc_vchi_tv_init@@Base+0x940>
   202b8:	mov	r0, r4
   202bc:	bl	67e8 <sem_wait@plt>
   202c0:	cmn	r0, #1
   202c4:	bne	202e4 <vc_vchi_tv_init@@Base+0xa10>
   202c8:	bl	5fb4 <__errno_location@plt>
   202cc:	ldr	r2, [r0]
   202d0:	cmp	r2, #4
   202d4:	beq	202b8 <vc_vchi_tv_init@@Base+0x9e4>
   202d8:	cmp	r2, #0
   202dc:	beq	20294 <vc_vchi_tv_init@@Base+0x9c0>
   202e0:	b	20214 <vc_vchi_tv_init@@Base+0x940>
   202e4:	cmp	r0, #0
   202e8:	beq	20294 <vc_vchi_tv_init@@Base+0x9c0>
   202ec:	bl	5fb4 <__errno_location@plt>
   202f0:	ldr	r2, [r0]
   202f4:	b	202d8 <vc_vchi_tv_init@@Base+0xa04>
   202f8:	strdeq	r9, [r1], -ip
   202fc:	muleq	r1, r4, lr
   20300:	andeq	r9, r1, r0, ror lr
   20304:	andeq	r9, r1, r0, lsr lr
   20308:	andeq	r9, r1, r8, lsl #28

0002030c <vc_vchi_dispmanx_init@@Base>:
   2030c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20310:	ldr	r5, [pc, #636]	; 20594 <vc_vchi_dispmanx_init@@Base+0x288>
   20314:	sub	sp, sp, #156	; 0x9c
   20318:	add	r5, pc, r5
   2031c:	ldr	r6, [r5, #3372]	; 0xd2c
   20320:	cmp	r6, #0
   20324:	beq	20330 <vc_vchi_dispmanx_init@@Base+0x24>
   20328:	add	sp, sp, #156	; 0x9c
   2032c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20330:	mov	r8, r2
   20334:	add	r9, r5, #40	; 0x28
   20338:	ldr	r2, [pc, #600]	; 20598 <vc_vchi_dispmanx_init@@Base+0x28c>
   2033c:	mov	r4, r1
   20340:	mov	r7, r0
   20344:	mov	r1, r6
   20348:	mov	r0, r9
   2034c:	bl	62e4 <memset@plt>
   20350:	add	r0, r9, #3120	; 0xc30
   20354:	mov	r1, r6
   20358:	str	r8, [r5, #3156]	; 0xc54
   2035c:	bl	6b9c <pthread_mutex_init@plt>
   20360:	cmp	r0, #0
   20364:	beq	2036c <vc_vchi_dispmanx_init@@Base+0x60>
   20368:	bl	6098 <vcos_pthreads_map_errno@plt>
   2036c:	mov	r1, #0
   20370:	ldr	r5, [pc, #548]	; 2059c <vc_vchi_dispmanx_init@@Base+0x290>
   20374:	mov	r2, r1
   20378:	add	r5, pc, r5
   2037c:	add	r5, r5, #3376	; 0xd30
   20380:	add	r6, r5, #24
   20384:	mov	r0, r6
   20388:	bl	6a94 <sem_init@plt>
   2038c:	subs	r1, r0, #0
   20390:	bne	2058c <vc_vchi_dispmanx_init@@Base+0x280>
   20394:	mov	r0, r5
   20398:	bl	6b9c <pthread_mutex_init@plt>
   2039c:	cmp	r0, #0
   203a0:	bne	2056c <vc_vchi_dispmanx_init@@Base+0x260>
   203a4:	mov	r1, #0
   203a8:	ldr	r5, [pc, #496]	; 205a0 <vc_vchi_dispmanx_init@@Base+0x294>
   203ac:	mov	r2, r1
   203b0:	add	r5, pc, r5
   203b4:	add	r6, r5, #24
   203b8:	mov	r0, r6
   203bc:	bl	6a94 <sem_init@plt>
   203c0:	subs	r1, r0, #0
   203c4:	bne	20584 <vc_vchi_dispmanx_init@@Base+0x278>
   203c8:	mov	r0, r5
   203cc:	bl	6b9c <pthread_mutex_init@plt>
   203d0:	cmp	r0, #0
   203d4:	bne	20554 <vc_vchi_dispmanx_init@@Base+0x248>
   203d8:	mov	r2, #1
   203dc:	ldr	r5, [pc, #448]	; 205a4 <vc_vchi_dispmanx_init@@Base+0x298>
   203e0:	add	r5, pc, r5
   203e4:	ldr	r3, [r5, #3156]	; 0xc54
   203e8:	str	r2, [r5, #3372]	; 0xd2c
   203ec:	cmp	r3, #0
   203f0:	beq	20328 <vc_vchi_dispmanx_init@@Base+0x1c>
   203f4:	mov	r9, #0
   203f8:	ldr	r2, [pc, #424]	; 205a8 <vc_vchi_dispmanx_init@@Base+0x29c>
   203fc:	add	r3, r5, #3408	; 0xd50
   20400:	add	r2, pc, r2
   20404:	add	r3, r3, #8
   20408:	str	r2, [sp, #28]
   2040c:	ldr	r2, [pc, #408]	; 205ac <vc_vchi_dispmanx_init@@Base+0x2a0>
   20410:	str	r3, [sp, #36]	; 0x24
   20414:	add	r3, sp, #64	; 0x40
   20418:	add	r2, pc, r2
   2041c:	str	r3, [sp, #24]
   20420:	add	r3, sp, #108	; 0x6c
   20424:	mov	r8, r5
   20428:	add	r6, r5, #40	; 0x28
   2042c:	str	r2, [sp, #32]
   20430:	sub	fp, r4, #4
   20434:	add	r5, r5, #52	; 0x34
   20438:	str	r3, [sp, #20]
   2043c:	add	sl, sp, #40	; 0x28
   20440:	mov	r4, #0
   20444:	mov	r3, #1
   20448:	ldr	lr, [pc, #352]	; 205b0 <vc_vchi_dispmanx_init@@Base+0x2a4>
   2044c:	ldr	r2, [fp, #4]!
   20450:	str	lr, [sp, #72]	; 0x48
   20454:	ldr	lr, [sp, #28]
   20458:	add	ip, r8, #3376	; 0xd30
   2045c:	str	lr, [sp, #88]	; 0x58
   20460:	ldr	lr, [pc, #332]	; 205b4 <vc_vchi_dispmanx_init@@Base+0x2a8>
   20464:	ldr	r1, [sp, #24]
   20468:	str	lr, [sp, #116]	; 0x74
   2046c:	ldr	lr, [sp, #32]
   20470:	str	r2, [sp, #76]	; 0x4c
   20474:	str	r2, [sp, #120]	; 0x78
   20478:	mov	r0, r7
   2047c:	mov	r2, r6
   20480:	str	ip, [sp, #92]	; 0x5c
   20484:	str	lr, [sp, #132]	; 0x84
   20488:	str	r3, [sp, #64]	; 0x40
   2048c:	str	r3, [sp, #68]	; 0x44
   20490:	str	r3, [sp, #108]	; 0x6c
   20494:	str	r3, [sp, #112]	; 0x70
   20498:	str	r3, [sp, #16]
   2049c:	str	r8, [sp, #136]	; 0x88
   204a0:	str	r4, [sp, #80]	; 0x50
   204a4:	str	r4, [sp, #84]	; 0x54
   204a8:	str	r4, [sp, #96]	; 0x60
   204ac:	str	r4, [sp, #100]	; 0x64
   204b0:	str	r4, [sp, #104]	; 0x68
   204b4:	str	r4, [sp, #124]	; 0x7c
   204b8:	str	r4, [sp, #128]	; 0x80
   204bc:	str	r4, [sp, #140]	; 0x8c
   204c0:	str	r4, [sp, #144]	; 0x90
   204c4:	str	r4, [sp, #148]	; 0x94
   204c8:	bl	689c <vchi_service_open@plt>
   204cc:	mov	r2, r5
   204d0:	ldr	r1, [sp, #20]
   204d4:	mov	r0, r7
   204d8:	bl	689c <vchi_service_open@plt>
   204dc:	mov	r0, sl
   204e0:	bl	6638 <vcos_thread_attr_init@plt>
   204e4:	mov	lr, #2048	; 0x800
   204e8:	ldr	r3, [sp, #16]
   204ec:	ldr	r1, [pc, #196]	; 205b8 <vc_vchi_dispmanx_init@@Base+0x2ac>
   204f0:	str	r3, [sp, #56]	; 0x38
   204f4:	ldr	r3, [pc, #192]	; 205bc <vc_vchi_dispmanx_init@@Base+0x2b0>
   204f8:	add	r1, pc, r1
   204fc:	mov	r2, sl
   20500:	add	r3, pc, r3
   20504:	str	r4, [sp]
   20508:	ldr	r0, [sp, #36]	; 0x24
   2050c:	str	lr, [sp, #44]	; 0x2c
   20510:	str	r6, [sp, #12]
   20514:	str	r5, [sp, #8]
   20518:	bl	62cc <vcos_thread_create@plt>
   2051c:	ldr	ip, [sp, #12]
   20520:	add	r9, r9, #1
   20524:	ldr	r0, [ip]
   20528:	bl	6014 <vchi_service_release@plt>
   2052c:	ldr	r3, [sp, #8]
   20530:	add	r6, r6, #4
   20534:	ldr	r0, [r3]
   20538:	bl	6014 <vchi_service_release@plt>
   2053c:	ldr	r3, [r8, #3156]	; 0xc54
   20540:	add	r5, r5, #4
   20544:	cmp	r3, r9
   20548:	bhi	20440 <vc_vchi_dispmanx_init@@Base+0x134>
   2054c:	add	sp, sp, #156	; 0x9c
   20550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20554:	bl	6098 <vcos_pthreads_map_errno@plt>
   20558:	cmp	r0, #0
   2055c:	beq	203d8 <vc_vchi_dispmanx_init@@Base+0xcc>
   20560:	mov	r0, r6
   20564:	bl	5fcc <sem_destroy@plt>
   20568:	b	203d8 <vc_vchi_dispmanx_init@@Base+0xcc>
   2056c:	bl	6098 <vcos_pthreads_map_errno@plt>
   20570:	cmp	r0, #0
   20574:	beq	203a4 <vc_vchi_dispmanx_init@@Base+0x98>
   20578:	mov	r0, r6
   2057c:	bl	5fcc <sem_destroy@plt>
   20580:	b	203a4 <vc_vchi_dispmanx_init@@Base+0x98>
   20584:	bl	6098 <vcos_pthreads_map_errno@plt>
   20588:	b	203d8 <vc_vchi_dispmanx_init@@Base+0xcc>
   2058c:	bl	6098 <vcos_pthreads_map_errno@plt>
   20590:	b	203a4 <vc_vchi_dispmanx_init@@Base+0x98>
   20594:	andeq	r9, r1, r0, ror sp
   20598:	andeq	r0, r0, r8, lsl #26
   2059c:	andeq	r9, r1, r0, lsl sp
   205a0:	ldrdeq	r9, [r1], -r8
   205a4:	andeq	r9, r1, r8, lsr #25
   205a8:			; <UNDEFINED> instruction: 0xfffffaf8
   205ac:			; <UNDEFINED> instruction: 0xfffffb44
   205b0:	strbmi	r5, [r9], #-848	; 0xfffffcb0
   205b4:	ldrbpl	r4, [r0, #-1096]	; 0xfffffbb8
   205b8:	andeq	r6, r0, ip, lsl pc
   205bc:			; <UNDEFINED> instruction: 0xfffff8f8

000205c0 <vc_dispmanx_stop@@Base>:
   205c0:	push	{r4, r5, r6, lr}
   205c4:	ldr	r4, [pc, #376]	; 20744 <vc_dispmanx_stop@@Base+0x184>
   205c8:	sub	sp, sp, #8
   205cc:	add	r4, pc, r4
   205d0:	ldr	r3, [r4, #3372]	; 0xd2c
   205d4:	cmp	r3, #0
   205d8:	bne	205e4 <vc_dispmanx_stop@@Base+0x24>
   205dc:	add	sp, sp, #8
   205e0:	pop	{r4, r5, r6, pc}
   205e4:	add	r0, r4, #40	; 0x28
   205e8:	add	r0, r0, #3120	; 0xc30
   205ec:	bl	5ffc <pthread_mutex_lock@plt>
   205f0:	ldr	r3, [r4, #3372]	; 0xd2c
   205f4:	cmp	r3, #0
   205f8:	ldr	r3, [r4, #3156]	; 0xc54
   205fc:	beq	20628 <vc_dispmanx_stop@@Base+0x68>
   20600:	cmp	r3, #0
   20604:	beq	20698 <vc_dispmanx_stop@@Base+0xd8>
   20608:	mov	r5, #0
   2060c:	add	r3, r4, #40	; 0x28
   20610:	ldr	r0, [r3, r5, lsl #2]
   20614:	bl	6134 <vchi_service_use@plt>
   20618:	ldr	r3, [r4, #3156]	; 0xc54
   2061c:	add	r5, r5, #1
   20620:	cmp	r5, r3
   20624:	bcc	2060c <vc_dispmanx_stop@@Base+0x4c>
   20628:	cmp	r3, #0
   2062c:	beq	20698 <vc_dispmanx_stop@@Base+0xd8>
   20630:	mov	r5, #0
   20634:	ldr	r4, [pc, #268]	; 20748 <vc_dispmanx_stop@@Base+0x188>
   20638:	add	r4, pc, r4
   2063c:	mov	r6, r4
   20640:	add	r4, r4, #40	; 0x28
   20644:	ldr	r0, [r4], #4
   20648:	bl	5d38 <vchi_service_close@plt>
   2064c:	ldr	r0, [r4, #8]
   20650:	bl	5d38 <vchi_service_close@plt>
   20654:	ldr	r3, [r6, #3156]	; 0xc54
   20658:	add	r5, r5, #1
   2065c:	cmp	r3, r5
   20660:	bhi	20644 <vc_dispmanx_stop@@Base+0x84>
   20664:	ldr	r2, [r6, #3372]	; 0xd2c
   20668:	cmp	r2, #0
   2066c:	beq	20698 <vc_dispmanx_stop@@Base+0xd8>
   20670:	cmp	r3, #0
   20674:	beq	20698 <vc_dispmanx_stop@@Base+0xd8>
   20678:	mov	r4, #0
   2067c:	add	r3, r6, #40	; 0x28
   20680:	ldr	r0, [r3, r4, lsl #2]
   20684:	bl	6014 <vchi_service_release@plt>
   20688:	ldr	r3, [r6, #3156]	; 0xc54
   2068c:	add	r4, r4, #1
   20690:	cmp	r4, r3
   20694:	bcc	2067c <vc_dispmanx_stop@@Base+0xbc>
   20698:	ldr	r4, [pc, #172]	; 2074c <vc_dispmanx_stop@@Base+0x18c>
   2069c:	add	r5, sp, #4
   206a0:	add	r4, pc, r4
   206a4:	add	r0, r4, #40	; 0x28
   206a8:	add	r0, r0, #3120	; 0xc30
   206ac:	bl	6b84 <pthread_mutex_unlock@plt>
   206b0:	mov	r3, #0
   206b4:	mov	r0, r4
   206b8:	add	r6, r4, #24
   206bc:	str	r3, [r4, #3372]	; 0xd2c
   206c0:	bl	5ffc <pthread_mutex_lock@plt>
   206c4:	mov	r0, r6
   206c8:	mov	r1, r5
   206cc:	bl	6524 <sem_getvalue@plt>
   206d0:	cmp	r0, #0
   206d4:	bne	206ec <vc_dispmanx_stop@@Base+0x12c>
   206d8:	ldr	r3, [sp, #4]
   206dc:	cmp	r3, #0
   206e0:	bne	206ec <vc_dispmanx_stop@@Base+0x12c>
   206e4:	mov	r0, r6
   206e8:	bl	66c8 <sem_post@plt>
   206ec:	ldr	r4, [pc, #92]	; 20750 <vc_dispmanx_stop@@Base+0x190>
   206f0:	add	r4, pc, r4
   206f4:	mov	r0, r4
   206f8:	bl	6b84 <pthread_mutex_unlock@plt>
   206fc:	add	r0, r4, #3408	; 0xd50
   20700:	mov	r1, r5
   20704:	add	r0, r0, #8
   20708:	bl	698c <vcos_thread_join@plt>
   2070c:	add	r0, r4, #40	; 0x28
   20710:	add	r5, r4, #3376	; 0xd30
   20714:	add	r0, r0, #3120	; 0xc30
   20718:	bl	68d8 <pthread_mutex_destroy@plt>
   2071c:	add	r0, r5, #24
   20720:	bl	5fcc <sem_destroy@plt>
   20724:	mov	r0, r5
   20728:	bl	68d8 <pthread_mutex_destroy@plt>
   2072c:	add	r0, r4, #24
   20730:	bl	5fcc <sem_destroy@plt>
   20734:	mov	r0, r4
   20738:	bl	68d8 <pthread_mutex_destroy@plt>
   2073c:	add	sp, sp, #8
   20740:	pop	{r4, r5, r6, pc}
   20744:			; <UNDEFINED> instruction: 0x00019abc
   20748:	andeq	r9, r1, r0, asr sl
   2074c:	andeq	r9, r1, r8, ror #19
   20750:	muleq	r1, r8, r9

00020754 <vc_dispmanx_rect_set@@Base>:
   20754:	ldr	ip, [sp]
   20758:	stm	r0, {r1, r2, r3, ip}
   2075c:	mov	r0, #0
   20760:	bx	lr

00020764 <vc_dispmanx_query_image_formats@@Base>:
   20764:	mov	r1, #26
   20768:	push	{r4, r5, r6, r7, r8, r9, lr}
   2076c:	mov	r2, #4
   20770:	mov	r4, #0
   20774:	ldr	r5, [pc, #388]	; 20900 <vc_dispmanx_query_image_formats@@Base+0x19c>
   20778:	sub	sp, sp, #44	; 0x2c
   2077c:	add	r5, pc, r5
   20780:	add	r3, sp, #40	; 0x28
   20784:	mov	r7, r0
   20788:	add	r0, r5, #40	; 0x28
   2078c:	str	r1, [r3, #-28]!	; 0xffffffe4
   20790:	add	r0, r0, #3120	; 0xc30
   20794:	str	r3, [sp, #24]
   20798:	str	r2, [sp, #28]
   2079c:	str	r4, [sp, #32]
   207a0:	str	r4, [sp, #36]	; 0x24
   207a4:	str	r4, [sp, #16]
   207a8:	bl	5ffc <pthread_mutex_lock@plt>
   207ac:	ldr	r3, [r5, #3372]	; 0xd2c
   207b0:	cmp	r3, r4
   207b4:	beq	207e0 <vc_dispmanx_query_image_formats@@Base+0x7c>
   207b8:	ldr	r3, [r5, #3156]	; 0xc54
   207bc:	cmp	r3, #0
   207c0:	beq	207e0 <vc_dispmanx_query_image_formats@@Base+0x7c>
   207c4:	add	r3, r5, #40	; 0x28
   207c8:	ldr	r0, [r3, r4, lsl #2]
   207cc:	bl	6134 <vchi_service_use@plt>
   207d0:	ldr	r3, [r5, #3156]	; 0xc54
   207d4:	add	r4, r4, #1
   207d8:	cmp	r4, r3
   207dc:	bcc	207c4 <vc_dispmanx_query_image_formats@@Base+0x60>
   207e0:	mov	r3, #0
   207e4:	ldr	r5, [pc, #280]	; 20904 <vc_dispmanx_query_image_formats@@Base+0x1a0>
   207e8:	str	r3, [sp]
   207ec:	add	r5, pc, r5
   207f0:	ldr	r0, [r5, #40]	; 0x28
   207f4:	add	r1, sp, #24
   207f8:	mov	r2, #2
   207fc:	mov	r3, #4
   20800:	bl	5cc0 <vchi_msg_queuev@plt>
   20804:	cmp	r0, #0
   20808:	beq	2087c <vc_dispmanx_query_image_formats@@Base+0x118>
   2080c:	ldr	r5, [pc, #244]	; 20908 <vc_dispmanx_query_image_formats@@Base+0x1a4>
   20810:	add	r5, pc, r5
   20814:	ldr	r3, [r5, #3372]	; 0xd2c
   20818:	cmp	r3, #0
   2081c:	beq	2084c <vc_dispmanx_query_image_formats@@Base+0xe8>
   20820:	ldr	r3, [r5, #3156]	; 0xc54
   20824:	cmp	r3, #0
   20828:	beq	2084c <vc_dispmanx_query_image_formats@@Base+0xe8>
   2082c:	mov	r4, #0
   20830:	add	r3, r5, #40	; 0x28
   20834:	ldr	r0, [r3, r4, lsl #2]
   20838:	bl	6014 <vchi_service_release@plt>
   2083c:	ldr	r3, [r5, #3156]	; 0xc54
   20840:	add	r4, r4, #1
   20844:	cmp	r4, r3
   20848:	bcc	20830 <vc_dispmanx_query_image_formats@@Base+0xcc>
   2084c:	ldr	r0, [pc, #184]	; 2090c <vc_dispmanx_query_image_formats@@Base+0x1a8>
   20850:	add	r0, pc, r0
   20854:	add	r0, r0, #40	; 0x28
   20858:	add	r0, r0, #3120	; 0xc30
   2085c:	bl	6b84 <pthread_mutex_unlock@plt>
   20860:	ldr	r0, [sp, #16]
   20864:	cmp	r0, #0
   20868:	str	r0, [r7]
   2086c:	movne	r0, #0
   20870:	mvneq	r0, #0
   20874:	add	sp, sp, #44	; 0x2c
   20878:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2087c:	mov	r9, r0
   20880:	ldr	r4, [pc, #136]	; 20910 <vc_dispmanx_query_image_formats@@Base+0x1ac>
   20884:	str	r0, [sp, #20]
   20888:	add	r4, pc, r4
   2088c:	add	r4, r4, #3376	; 0xd30
   20890:	add	r4, r4, #24
   20894:	add	r8, sp, #16
   20898:	add	r6, sp, #20
   2089c:	ldr	r0, [r5, #40]	; 0x28
   208a0:	mov	r3, r6
   208a4:	str	r9, [sp]
   208a8:	mov	r1, r8
   208ac:	mov	r2, #4
   208b0:	bl	61c4 <vchi_msg_dequeue@plt>
   208b4:	ldr	r3, [sp, #20]
   208b8:	cmp	r3, #0
   208bc:	bne	2080c <vc_dispmanx_query_image_formats@@Base+0xa8>
   208c0:	mov	r0, r4
   208c4:	bl	67e8 <sem_wait@plt>
   208c8:	cmn	r0, #1
   208cc:	bne	208ec <vc_dispmanx_query_image_formats@@Base+0x188>
   208d0:	bl	5fb4 <__errno_location@plt>
   208d4:	ldr	r2, [r0]
   208d8:	cmp	r2, #4
   208dc:	beq	208c0 <vc_dispmanx_query_image_formats@@Base+0x15c>
   208e0:	cmp	r2, #0
   208e4:	beq	2089c <vc_dispmanx_query_image_formats@@Base+0x138>
   208e8:	b	2080c <vc_dispmanx_query_image_formats@@Base+0xa8>
   208ec:	cmp	r0, #0
   208f0:	beq	2089c <vc_dispmanx_query_image_formats@@Base+0x138>
   208f4:	bl	5fb4 <__errno_location@plt>
   208f8:	ldr	r2, [r0]
   208fc:	b	208e0 <vc_dispmanx_query_image_formats@@Base+0x17c>
   20900:	andeq	r9, r1, ip, lsl #18
   20904:	muleq	r1, ip, r8
   20908:	andeq	r9, r1, r8, ror r8
   2090c:	andeq	r9, r1, r8, lsr r8
   20910:	andeq	r9, r1, r0, lsl #16

00020914 <vc_dispmanx_resource_create@@Base>:
   20914:	push	{r4, r5, r6, r7, r8, r9, lr}
   20918:	mov	r7, #3
   2091c:	mov	lr, #12
   20920:	mov	r4, #0
   20924:	mov	r6, #4
   20928:	ldr	r5, [pc, #396]	; 20abc <vc_dispmanx_resource_create@@Base+0x1a8>
   2092c:	sub	sp, sp, #52	; 0x34
   20930:	add	r5, pc, r5
   20934:	add	ip, sp, #48	; 0x30
   20938:	str	r0, [sp, #20]
   2093c:	add	r0, r5, #40	; 0x28
   20940:	str	r7, [ip, #-40]!	; 0xffffffd8
   20944:	add	r0, r0, #3120	; 0xc30
   20948:	mov	r7, r3
   2094c:	add	r3, sp, #20
   20950:	str	r3, [sp, #40]	; 0x28
   20954:	str	r1, [sp, #24]
   20958:	str	r2, [sp, #28]
   2095c:	str	ip, [sp, #32]
   20960:	str	r6, [sp, #36]	; 0x24
   20964:	str	lr, [sp, #44]	; 0x2c
   20968:	str	r4, [sp, #12]
   2096c:	bl	5ffc <pthread_mutex_lock@plt>
   20970:	ldr	r3, [r5, #3372]	; 0xd2c
   20974:	cmp	r3, r4
   20978:	beq	209a4 <vc_dispmanx_resource_create@@Base+0x90>
   2097c:	ldr	r3, [r5, #3156]	; 0xc54
   20980:	cmp	r3, #0
   20984:	beq	209a4 <vc_dispmanx_resource_create@@Base+0x90>
   20988:	add	r3, r5, #40	; 0x28
   2098c:	ldr	r0, [r3, r4, lsl #2]
   20990:	bl	6134 <vchi_service_use@plt>
   20994:	ldr	r3, [r5, #3156]	; 0xc54
   20998:	add	r4, r4, #1
   2099c:	cmp	r4, r3
   209a0:	bcc	20988 <vc_dispmanx_resource_create@@Base+0x74>
   209a4:	mov	r3, #0
   209a8:	ldr	r5, [pc, #272]	; 20ac0 <vc_dispmanx_resource_create@@Base+0x1ac>
   209ac:	str	r3, [sp]
   209b0:	add	r5, pc, r5
   209b4:	ldr	r0, [r5, #40]	; 0x28
   209b8:	add	r1, sp, #32
   209bc:	mov	r2, #2
   209c0:	mov	r3, #4
   209c4:	bl	5cc0 <vchi_msg_queuev@plt>
   209c8:	cmp	r0, #0
   209cc:	beq	20a38 <vc_dispmanx_resource_create@@Base+0x124>
   209d0:	ldr	r5, [pc, #236]	; 20ac4 <vc_dispmanx_resource_create@@Base+0x1b0>
   209d4:	add	r5, pc, r5
   209d8:	ldr	r3, [r5, #3372]	; 0xd2c
   209dc:	cmp	r3, #0
   209e0:	beq	20a10 <vc_dispmanx_resource_create@@Base+0xfc>
   209e4:	ldr	r3, [r5, #3156]	; 0xc54
   209e8:	cmp	r3, #0
   209ec:	beq	20a10 <vc_dispmanx_resource_create@@Base+0xfc>
   209f0:	mov	r4, #0
   209f4:	add	r3, r5, #40	; 0x28
   209f8:	ldr	r0, [r3, r4, lsl #2]
   209fc:	bl	6014 <vchi_service_release@plt>
   20a00:	ldr	r3, [r5, #3156]	; 0xc54
   20a04:	add	r4, r4, #1
   20a08:	cmp	r4, r3
   20a0c:	bcc	209f4 <vc_dispmanx_resource_create@@Base+0xe0>
   20a10:	ldr	r0, [pc, #176]	; 20ac8 <vc_dispmanx_resource_create@@Base+0x1b4>
   20a14:	add	r0, pc, r0
   20a18:	add	r0, r0, #40	; 0x28
   20a1c:	add	r0, r0, #3120	; 0xc30
   20a20:	bl	6b84 <pthread_mutex_unlock@plt>
   20a24:	mov	r3, #0
   20a28:	ldr	r0, [sp, #12]
   20a2c:	str	r3, [r7]
   20a30:	add	sp, sp, #52	; 0x34
   20a34:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20a38:	mov	r9, r0
   20a3c:	ldr	r4, [pc, #136]	; 20acc <vc_dispmanx_resource_create@@Base+0x1b8>
   20a40:	str	r0, [sp, #16]
   20a44:	add	r4, pc, r4
   20a48:	add	r4, r4, #3376	; 0xd30
   20a4c:	add	r4, r4, #24
   20a50:	add	r8, sp, #12
   20a54:	add	r6, sp, #16
   20a58:	ldr	r0, [r5, #40]	; 0x28
   20a5c:	mov	r3, r6
   20a60:	str	r9, [sp]
   20a64:	mov	r1, r8
   20a68:	mov	r2, #4
   20a6c:	bl	61c4 <vchi_msg_dequeue@plt>
   20a70:	ldr	r3, [sp, #16]
   20a74:	cmp	r3, #0
   20a78:	bne	209d0 <vc_dispmanx_resource_create@@Base+0xbc>
   20a7c:	mov	r0, r4
   20a80:	bl	67e8 <sem_wait@plt>
   20a84:	cmn	r0, #1
   20a88:	bne	20aa8 <vc_dispmanx_resource_create@@Base+0x194>
   20a8c:	bl	5fb4 <__errno_location@plt>
   20a90:	ldr	r2, [r0]
   20a94:	cmp	r2, #4
   20a98:	beq	20a7c <vc_dispmanx_resource_create@@Base+0x168>
   20a9c:	cmp	r2, #0
   20aa0:	beq	20a58 <vc_dispmanx_resource_create@@Base+0x144>
   20aa4:	b	209d0 <vc_dispmanx_resource_create@@Base+0xbc>
   20aa8:	cmp	r0, #0
   20aac:	beq	20a58 <vc_dispmanx_resource_create@@Base+0x144>
   20ab0:	bl	5fb4 <__errno_location@plt>
   20ab4:	ldr	r2, [r0]
   20ab8:	b	20a9c <vc_dispmanx_resource_create@@Base+0x188>
   20abc:	andeq	r9, r1, r8, asr r7
   20ac0:	ldrdeq	r9, [r1], -r8
   20ac4:			; <UNDEFINED> instruction: 0x000196b4
   20ac8:	andeq	r9, r1, r4, ror r6
   20acc:	andeq	r9, r1, r4, asr #12

00020ad0 <vc_dispmanx_resource_get_image_handle@@Base>:
   20ad0:	mov	r1, #7
   20ad4:	push	{r4, r5, r6, r7, r8, lr}
   20ad8:	mov	r2, #4
   20adc:	mov	r4, #0
   20ae0:	ldr	r5, [pc, #376]	; 20c60 <vc_dispmanx_resource_get_image_handle@@Base+0x190>
   20ae4:	sub	sp, sp, #48	; 0x30
   20ae8:	add	r3, sp, #48	; 0x30
   20aec:	add	r5, pc, r5
   20af0:	str	r1, [r3, #-28]!	; 0xffffffe4
   20af4:	str	r0, [sp, #12]
   20af8:	add	r0, r5, #40	; 0x28
   20afc:	str	r3, [sp, #32]
   20b00:	add	r0, r0, #3120	; 0xc30
   20b04:	add	r3, sp, #12
   20b08:	str	r3, [sp, #40]	; 0x28
   20b0c:	str	r2, [sp, #36]	; 0x24
   20b10:	str	r2, [sp, #44]	; 0x2c
   20b14:	str	r4, [sp, #24]
   20b18:	bl	5ffc <pthread_mutex_lock@plt>
   20b1c:	ldr	r3, [r5, #3372]	; 0xd2c
   20b20:	cmp	r3, r4
   20b24:	beq	20b50 <vc_dispmanx_resource_get_image_handle@@Base+0x80>
   20b28:	ldr	r3, [r5, #3156]	; 0xc54
   20b2c:	cmp	r3, #0
   20b30:	beq	20b50 <vc_dispmanx_resource_get_image_handle@@Base+0x80>
   20b34:	add	r3, r5, #40	; 0x28
   20b38:	ldr	r0, [r3, r4, lsl #2]
   20b3c:	bl	6134 <vchi_service_use@plt>
   20b40:	ldr	r3, [r5, #3156]	; 0xc54
   20b44:	add	r4, r4, #1
   20b48:	cmp	r4, r3
   20b4c:	bcc	20b34 <vc_dispmanx_resource_get_image_handle@@Base+0x64>
   20b50:	mov	r3, #0
   20b54:	ldr	r5, [pc, #264]	; 20c64 <vc_dispmanx_resource_get_image_handle@@Base+0x194>
   20b58:	str	r3, [sp]
   20b5c:	add	r5, pc, r5
   20b60:	ldr	r0, [r5, #40]	; 0x28
   20b64:	add	r1, sp, #32
   20b68:	mov	r2, #2
   20b6c:	mov	r3, #4
   20b70:	bl	5cc0 <vchi_msg_queuev@plt>
   20b74:	cmp	r0, #0
   20b78:	beq	20bdc <vc_dispmanx_resource_get_image_handle@@Base+0x10c>
   20b7c:	ldr	r5, [pc, #228]	; 20c68 <vc_dispmanx_resource_get_image_handle@@Base+0x198>
   20b80:	add	r5, pc, r5
   20b84:	ldr	r3, [r5, #3372]	; 0xd2c
   20b88:	cmp	r3, #0
   20b8c:	beq	20bbc <vc_dispmanx_resource_get_image_handle@@Base+0xec>
   20b90:	ldr	r3, [r5, #3156]	; 0xc54
   20b94:	cmp	r3, #0
   20b98:	beq	20bbc <vc_dispmanx_resource_get_image_handle@@Base+0xec>
   20b9c:	mov	r4, #0
   20ba0:	add	r3, r5, #40	; 0x28
   20ba4:	ldr	r0, [r3, r4, lsl #2]
   20ba8:	bl	6014 <vchi_service_release@plt>
   20bac:	ldr	r3, [r5, #3156]	; 0xc54
   20bb0:	add	r4, r4, #1
   20bb4:	cmp	r4, r3
   20bb8:	bcc	20ba0 <vc_dispmanx_resource_get_image_handle@@Base+0xd0>
   20bbc:	ldr	r0, [pc, #168]	; 20c6c <vc_dispmanx_resource_get_image_handle@@Base+0x19c>
   20bc0:	add	r0, pc, r0
   20bc4:	add	r0, r0, #40	; 0x28
   20bc8:	add	r0, r0, #3120	; 0xc30
   20bcc:	bl	6b84 <pthread_mutex_unlock@plt>
   20bd0:	ldr	r0, [sp, #24]
   20bd4:	add	sp, sp, #48	; 0x30
   20bd8:	pop	{r4, r5, r6, r7, r8, pc}
   20bdc:	mov	r8, r0
   20be0:	ldr	r4, [pc, #136]	; 20c70 <vc_dispmanx_resource_get_image_handle@@Base+0x1a0>
   20be4:	str	r0, [sp, #28]
   20be8:	add	r4, pc, r4
   20bec:	add	r4, r4, #3376	; 0xd30
   20bf0:	add	r4, r4, #24
   20bf4:	add	r7, sp, #24
   20bf8:	add	r6, sp, #28
   20bfc:	ldr	r0, [r5, #40]	; 0x28
   20c00:	mov	r2, #4
   20c04:	str	r8, [sp]
   20c08:	mov	r1, r7
   20c0c:	mov	r3, r6
   20c10:	bl	61c4 <vchi_msg_dequeue@plt>
   20c14:	ldr	r2, [sp, #28]
   20c18:	cmp	r2, #0
   20c1c:	bne	20b7c <vc_dispmanx_resource_get_image_handle@@Base+0xac>
   20c20:	mov	r0, r4
   20c24:	bl	67e8 <sem_wait@plt>
   20c28:	cmn	r0, #1
   20c2c:	bne	20c4c <vc_dispmanx_resource_get_image_handle@@Base+0x17c>
   20c30:	bl	5fb4 <__errno_location@plt>
   20c34:	ldr	r2, [r0]
   20c38:	cmp	r2, #4
   20c3c:	beq	20c20 <vc_dispmanx_resource_get_image_handle@@Base+0x150>
   20c40:	cmp	r2, #0
   20c44:	beq	20bfc <vc_dispmanx_resource_get_image_handle@@Base+0x12c>
   20c48:	b	20b7c <vc_dispmanx_resource_get_image_handle@@Base+0xac>
   20c4c:	cmp	r0, #0
   20c50:	beq	20bfc <vc_dispmanx_resource_get_image_handle@@Base+0x12c>
   20c54:	bl	5fb4 <__errno_location@plt>
   20c58:	ldr	r2, [r0]
   20c5c:	b	20c40 <vc_dispmanx_resource_get_image_handle@@Base+0x170>
   20c60:	muleq	r1, ip, r5
   20c64:	andeq	r9, r1, ip, lsr #10
   20c68:	andeq	r9, r1, r8, lsl #10
   20c6c:	andeq	r9, r1, r8, asr #9
   20c70:	andeq	r9, r1, r0, lsr #9

00020c74 <vc_dispmanx_resource_delete@@Base>:
   20c74:	push	{lr}		; (str lr, [sp, #-4]!)
   20c78:	sub	sp, sp, #12
   20c7c:	add	r1, sp, #8
   20c80:	str	r0, [r1, #-4]!
   20c84:	mov	r2, #4
   20c88:	mov	r0, #5
   20c8c:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   20c90:	add	sp, sp, #12
   20c94:	pop	{pc}		; (ldr pc, [sp], #4)

00020c98 <vc_dispmanx_resource_write_data@@Base>:
   20c98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20c9c:	mov	r9, r2
   20ca0:	sub	sp, sp, #24
   20ca4:	ldr	r2, [sp, #56]	; 0x38
   20ca8:	str	r0, [sp, #8]
   20cac:	ldr	r5, [r2, #12]
   20cb0:	ldr	r8, [r2, #4]
   20cb4:	mul	r5, r5, r9
   20cb8:	str	r1, [sp, #20]
   20cbc:	mov	r0, #-2147483621	; 0x8000001b
   20cc0:	add	r1, sp, #8
   20cc4:	mov	r2, #16
   20cc8:	mov	sl, r3
   20ccc:	str	r5, [sp, #16]
   20cd0:	str	r8, [sp, #12]
   20cd4:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   20cd8:	subs	r4, r0, #0
   20cdc:	beq	20cec <vc_dispmanx_resource_write_data@@Base+0x54>
   20ce0:	mov	r0, r4
   20ce4:	add	sp, sp, #24
   20ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20cec:	ldr	r6, [pc, #196]	; 20db8 <vc_dispmanx_resource_write_data@@Base+0x120>
   20cf0:	add	r6, pc, r6
   20cf4:	add	r0, r6, #40	; 0x28
   20cf8:	add	r0, r0, #3120	; 0xc30
   20cfc:	bl	5ffc <pthread_mutex_lock@plt>
   20d00:	ldr	r3, [r6, #3372]	; 0xd2c
   20d04:	cmp	r3, #0
   20d08:	beq	20d34 <vc_dispmanx_resource_write_data@@Base+0x9c>
   20d0c:	ldr	r3, [r6, #3156]	; 0xc54
   20d10:	cmp	r3, #0
   20d14:	beq	20d34 <vc_dispmanx_resource_write_data@@Base+0x9c>
   20d18:	add	r3, r6, #40	; 0x28
   20d1c:	ldr	r0, [r3, r4, lsl #2]
   20d20:	bl	6134 <vchi_service_use@plt>
   20d24:	ldr	r3, [r6, #3156]	; 0xc54
   20d28:	add	r4, r4, #1
   20d2c:	cmp	r4, r3
   20d30:	bcc	20d18 <vc_dispmanx_resource_write_data@@Base+0x80>
   20d34:	mov	r6, #0
   20d38:	ldr	r7, [pc, #124]	; 20dbc <vc_dispmanx_resource_write_data@@Base+0x124>
   20d3c:	mov	r3, #16
   20d40:	add	r7, pc, r7
   20d44:	ldr	r0, [r7, #40]	; 0x28
   20d48:	mla	r1, r9, r8, sl
   20d4c:	mov	r2, r5
   20d50:	str	r6, [sp]
   20d54:	bl	674c <vchi_bulk_queue_transmit@plt>
   20d58:	ldr	r3, [r7, #3372]	; 0xd2c
   20d5c:	mov	r4, r0
   20d60:	cmp	r3, r6
   20d64:	beq	20d98 <vc_dispmanx_resource_write_data@@Base+0x100>
   20d68:	ldr	r3, [r7, #3156]	; 0xc54
   20d6c:	cmp	r3, #0
   20d70:	beq	20d98 <vc_dispmanx_resource_write_data@@Base+0x100>
   20d74:	mov	r5, r6
   20d78:	mov	r6, r7
   20d7c:	add	r3, r6, #40	; 0x28
   20d80:	ldr	r0, [r3, r5, lsl #2]
   20d84:	bl	6014 <vchi_service_release@plt>
   20d88:	ldr	r3, [r6, #3156]	; 0xc54
   20d8c:	add	r5, r5, #1
   20d90:	cmp	r5, r3
   20d94:	bcc	20d7c <vc_dispmanx_resource_write_data@@Base+0xe4>
   20d98:	ldr	r0, [pc, #32]	; 20dc0 <vc_dispmanx_resource_write_data@@Base+0x128>
   20d9c:	add	r0, pc, r0
   20da0:	add	r0, r0, #40	; 0x28
   20da4:	add	r0, r0, #3120	; 0xc30
   20da8:	bl	6b84 <pthread_mutex_unlock@plt>
   20dac:	mov	r0, r4
   20db0:	add	sp, sp, #24
   20db4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20db8:	muleq	r1, r8, r3
   20dbc:	andeq	r9, r1, r8, asr #6
   20dc0:	andeq	r9, r1, ip, ror #5

00020dc4 <vc_dispmanx_resource_read_data@@Base>:
   20dc4:	cmp	r3, #0
   20dc8:	cmpne	r2, #0
   20dcc:	moveq	ip, #1
   20dd0:	movne	ip, #0
   20dd4:	cmp	r1, #0
   20dd8:	orreq	ip, ip, #1
   20ddc:	cmp	ip, #0
   20de0:	bne	20f00 <vc_dispmanx_resource_read_data@@Base+0x13c>
   20de4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20de8:	mov	r5, r3
   20dec:	mov	r3, r0
   20df0:	ldr	r6, [r1, #12]
   20df4:	sub	sp, sp, #24
   20df8:	mul	r6, r6, r5
   20dfc:	ldr	r9, [r1, #4]
   20e00:	mov	r7, r2
   20e04:	mov	r0, #-2147483620	; 0x8000001c
   20e08:	add	r1, sp, #12
   20e0c:	mov	r2, #12
   20e10:	str	r3, [sp, #12]
   20e14:	str	r6, [sp, #20]
   20e18:	str	r9, [sp, #16]
   20e1c:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   20e20:	subs	r4, r0, #0
   20e24:	movne	r0, r4
   20e28:	beq	20e34 <vc_dispmanx_resource_read_data@@Base+0x70>
   20e2c:	add	sp, sp, #24
   20e30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20e34:	ldr	r8, [pc, #204]	; 20f08 <vc_dispmanx_resource_read_data@@Base+0x144>
   20e38:	add	r8, pc, r8
   20e3c:	add	r0, r8, #40	; 0x28
   20e40:	add	r0, r0, #3120	; 0xc30
   20e44:	bl	5ffc <pthread_mutex_lock@plt>
   20e48:	ldr	r3, [r8, #3372]	; 0xd2c
   20e4c:	cmp	r3, #0
   20e50:	beq	20e7c <vc_dispmanx_resource_read_data@@Base+0xb8>
   20e54:	ldr	r3, [r8, #3156]	; 0xc54
   20e58:	cmp	r3, #0
   20e5c:	beq	20e7c <vc_dispmanx_resource_read_data@@Base+0xb8>
   20e60:	add	r3, r8, #40	; 0x28
   20e64:	ldr	r0, [r3, r4, lsl #2]
   20e68:	bl	6134 <vchi_service_use@plt>
   20e6c:	ldr	r3, [r8, #3156]	; 0xc54
   20e70:	add	r4, r4, #1
   20e74:	cmp	r4, r3
   20e78:	bcc	20e60 <vc_dispmanx_resource_read_data@@Base+0x9c>
   20e7c:	mov	r8, #0
   20e80:	ldr	sl, [pc, #132]	; 20f0c <vc_dispmanx_resource_read_data@@Base+0x148>
   20e84:	mov	r3, #1
   20e88:	add	sl, pc, sl
   20e8c:	ldr	r0, [sl, #40]	; 0x28
   20e90:	mla	r1, r9, r5, r7
   20e94:	mov	r2, r6
   20e98:	str	r8, [sp]
   20e9c:	bl	6248 <vchi_bulk_queue_receive@plt>
   20ea0:	ldr	r3, [sl, #3372]	; 0xd2c
   20ea4:	mov	r4, r0
   20ea8:	cmp	r3, r8
   20eac:	beq	20ee0 <vc_dispmanx_resource_read_data@@Base+0x11c>
   20eb0:	ldr	r3, [sl, #3156]	; 0xc54
   20eb4:	cmp	r3, #0
   20eb8:	beq	20ee0 <vc_dispmanx_resource_read_data@@Base+0x11c>
   20ebc:	mov	r5, r8
   20ec0:	mov	r6, sl
   20ec4:	add	r3, r6, #40	; 0x28
   20ec8:	ldr	r0, [r3, r5, lsl #2]
   20ecc:	bl	6014 <vchi_service_release@plt>
   20ed0:	ldr	r3, [r6, #3156]	; 0xc54
   20ed4:	add	r5, r5, #1
   20ed8:	cmp	r5, r3
   20edc:	bcc	20ec4 <vc_dispmanx_resource_read_data@@Base+0x100>
   20ee0:	ldr	r0, [pc, #40]	; 20f10 <vc_dispmanx_resource_read_data@@Base+0x14c>
   20ee4:	add	r0, pc, r0
   20ee8:	add	r0, r0, #40	; 0x28
   20eec:	add	r0, r0, #3120	; 0xc30
   20ef0:	bl	6b84 <pthread_mutex_unlock@plt>
   20ef4:	mov	r0, r4
   20ef8:	add	sp, sp, #24
   20efc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20f00:	mvn	r0, #0
   20f04:	bx	lr
   20f08:	andeq	r9, r1, r0, asr r2
   20f0c:	andeq	r9, r1, r0, lsl #4
   20f10:	andeq	r9, r1, r4, lsr #3

00020f14 <vc_dispmanx_display_open@@Base>:
   20f14:	push	{lr}		; (str lr, [sp, #-4]!)
   20f18:	sub	sp, sp, #12
   20f1c:	str	r0, [sp, #4]
   20f20:	ldr	r0, [pc, #72]	; 20f70 <vc_dispmanx_display_open@@Base+0x5c>
   20f24:	add	r0, pc, r0
   20f28:	bl	69c8 <getenv@plt>
   20f2c:	ldr	r2, [sp, #4]
   20f30:	adds	r3, r0, #0
   20f34:	movne	r3, #1
   20f38:	cmp	r2, #0
   20f3c:	movne	r3, #0
   20f40:	cmp	r3, #0
   20f44:	beq	20f58 <vc_dispmanx_display_open@@Base+0x44>
   20f48:	mov	r1, #0
   20f4c:	mov	r2, #10
   20f50:	bl	6aac <strtol@plt>
   20f54:	str	r0, [sp, #4]
   20f58:	add	r1, sp, #4
   20f5c:	mov	r2, #4
   20f60:	mov	r0, #8
   20f64:	bl	20174 <vc_vchi_tv_init@@Base+0x8a0>
   20f68:	add	sp, sp, #12
   20f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   20f70:	andeq	r6, r0, r4, lsl #10

00020f74 <vc_dispmanx_display_open_mode@@Base>:
   20f74:	push	{r4, r5, r6, r7, r8, lr}
   20f78:	mov	lr, #9
   20f7c:	mov	ip, #4
   20f80:	mov	r2, #8
   20f84:	mov	r4, #0
   20f88:	ldr	r5, [pc, #380]	; 2110c <vc_dispmanx_display_open_mode@@Base+0x198>
   20f8c:	sub	sp, sp, #48	; 0x30
   20f90:	add	r3, sp, #48	; 0x30
   20f94:	add	r5, pc, r5
   20f98:	str	lr, [r3, #-36]!	; 0xffffffdc
   20f9c:	str	r0, [sp, #24]
   20fa0:	add	r0, r5, #40	; 0x28
   20fa4:	str	r3, [sp, #32]
   20fa8:	add	r0, r0, #3120	; 0xc30
   20fac:	add	r3, sp, #24
   20fb0:	str	r3, [sp, #40]	; 0x28
   20fb4:	str	r1, [sp, #28]
   20fb8:	str	ip, [sp, #36]	; 0x24
   20fbc:	str	r2, [sp, #44]	; 0x2c
   20fc0:	str	r4, [sp, #16]
   20fc4:	bl	5ffc <pthread_mutex_lock@plt>
   20fc8:	ldr	r3, [r5, #3372]	; 0xd2c
   20fcc:	cmp	r3, r4
   20fd0:	beq	20ffc <vc_dispmanx_display_open_mode@@Base+0x88>
   20fd4:	ldr	r3, [r5, #3156]	; 0xc54
   20fd8:	cmp	r3, #0
   20fdc:	beq	20ffc <vc_dispmanx_display_open_mode@@Base+0x88>
   20fe0:	add	r3, r5, #40	; 0x28
   20fe4:	ldr	r0, [r3, r4, lsl #2]
   20fe8:	bl	6134 <vchi_service_use@plt>
   20fec:	ldr	r3, [r5, #3156]	; 0xc54
   20ff0:	add	r4, r4, #1
   20ff4:	cmp	r4, r3
   20ff8:	bcc	20fe0 <vc_dispmanx_display_open_mode@@Base+0x6c>
   20ffc:	mov	r3, #0
   21000:	ldr	r5, [pc, #264]	; 21110 <vc_dispmanx_display_open_mode@@Base+0x19c>
   21004:	str	r3, [sp]
   21008:	add	r5, pc, r5
   2100c:	ldr	r0, [r5, #40]	; 0x28
   21010:	add	r1, sp, #32
   21014:	mov	r2, #2
   21018:	mov	r3, #4
   2101c:	bl	5cc0 <vchi_msg_queuev@plt>
   21020:	cmp	r0, #0
   21024:	beq	21088 <vc_dispmanx_display_open_mode@@Base+0x114>
   21028:	ldr	r5, [pc, #228]	; 21114 <vc_dispmanx_display_open_mode@@Base+0x1a0>
   2102c:	add	r5, pc, r5
   21030:	ldr	r3, [r5, #3372]	; 0xd2c
   21034:	cmp	r3, #0
   21038:	beq	21068 <vc_dispmanx_display_open_mode@@Base+0xf4>
   2103c:	ldr	r3, [r5, #3156]	; 0xc54
   21040:	cmp	r3, #0
   21044:	beq	21068 <vc_dispmanx_display_open_mode@@Base+0xf4>
   21048:	mov	r4, #0
   2104c:	add	r3, r5, #40	; 0x28
   21050:	ldr	r0, [r3, r4, lsl #2]
   21054:	bl	6014 <vchi_service_release@plt>
   21058:	ldr	r3, [r5, #3156]	; 0xc54
   2105c:	add	r4, r4, #1
   21060:	cmp	r4, r3
   21064:	bcc	2104c <vc_dispmanx_display_open_mode@@Base+0xd8>
   21068:	ldr	r0, [pc, #168]	; 21118 <vc_dispmanx_display_open_mode@@Base+0x1a4>
   2106c:	add	r0, pc, r0
   21070:	add	r0, r0, #40	; 0x28
   21074:	add	r0, r0, #3120	; 0xc30
   21078:	bl	6b84 <pthread_mutex_unlock@plt>
   2107c:	ldr	r0, [sp, #16]
   21080:	add	sp, sp, #48	; 0x30
   21084:	pop	{r4, r5, r6, r7, r8, pc}
   21088:	mov	r8, r0
   2108c:	ldr	r4, [pc, #136]	; 2111c <vc_dispmanx_display_open_mode@@Base+0x1a8>
   21090:	str	r0, [sp, #20]
   21094:	add	r4, pc, r4
   21098:	add	r4, r4, #3376	; 0xd30
   2109c:	add	r4, r4, #24
   210a0:	add	r7, sp, #16
   210a4:	add	r6, sp, #20
   210a8:	ldr	r0, [r5, #40]	; 0x28
   210ac:	mov	r2, #4
   210b0:	str	r8, [sp]
   210b4:	mov	r1, r7
   210b8:	mov	r3, r6
   210bc:	bl	61c4 <vchi_msg_dequeue@plt>
   210c0:	ldr	r2, [sp, #20]
   210c4:	cmp	r2, #0
   210c8:	bne	21028 <vc_dispmanx_display_open_mode@@Base+0xb4>
   210cc:	mov	r0, r4
   210d0:	bl	67e8 <sem_wait@plt>
   210d4:	cmn	r0, #1
   210d8:	bne	210f8 <vc_dispmanx_display_open_mode@@Base+0x184>
   210dc:	bl	5fb4 <__errno_location@plt>
   210e0:	ldr	r2, [r0]
   210e4:	cmp	r2, #4
   210e8:	beq	210cc <vc_dispmanx_display_open_mode@@Base+0x158>
   210ec:	cmp	r2, #0
   210f0:	beq	210a8 <vc_dispmanx_display_open_mode@@Base+0x134>
   210f4:	b	21028 <vc_dispmanx_display_open_mode@@Base+0xb4>
   210f8:	cmp	r0, #0
   210fc:	beq	210a8 <vc_dispmanx_display_open_mode@@Base+0x134>
   21100:	bl	5fb4 <__errno_location@plt>
   21104:	ldr	r2, [r0]
   21108:	b	210ec <vc_dispmanx_display_open_mode@@Base+0x178>
   2110c:	strdeq	r9, [r1], -r4
   21110:	andeq	r9, r1, r0, lsl #1
   21114:	andeq	r9, r1, ip, asr r0
   21118:	andeq	r9, r1, ip, lsl r0
   2111c:	strdeq	r8, [r1], -r4

00021120 <vc_dispmanx_display_open_offscreen@@Base>:
   21120:	push	{r4, r5, r6, r7, r8, lr}
   21124:	mov	lr, #10
   21128:	mov	ip, #4
   2112c:	mov	r2, #8
   21130:	mov	r4, #0
   21134:	ldr	r5, [pc, #380]	; 212b8 <vc_dispmanx_display_open_offscreen@@Base+0x198>
   21138:	sub	sp, sp, #48	; 0x30
   2113c:	add	r3, sp, #48	; 0x30
   21140:	add	r5, pc, r5
   21144:	str	lr, [r3, #-36]!	; 0xffffffdc
   21148:	str	r0, [sp, #24]
   2114c:	add	r0, r5, #40	; 0x28
   21150:	str	r3, [sp, #32]
   21154:	add	r0, r0, #3120	; 0xc30
   21158:	add	r3, sp, #24
   2115c:	str	r3, [sp, #40]	; 0x28
   21160:	str	r1, [sp, #28]
   21164:	str	ip, [sp, #36]	; 0x24
   21168:	str	r2, [sp, #44]	; 0x2c
   2116c:	str	r4, [sp, #16]
   21170:	bl	5ffc <pthread_mutex_lock@plt>
   21174:	ldr	r3, [r5, #3372]	; 0xd2c
   21178:	cmp	r3, r4
   2117c:	beq	211a8 <vc_dispmanx_display_open_offscreen@@Base+0x88>
   21180:	ldr	r3, [r5, #3156]	; 0xc54
   21184:	cmp	r3, #0
   21188:	beq	211a8 <vc_dispmanx_display_open_offscreen@@Base+0x88>
   2118c:	add	r3, r5, #40	; 0x28
   21190:	ldr	r0, [r3, r4, lsl #2]
   21194:	bl	6134 <vchi_service_use@plt>
   21198:	ldr	r3, [r5, #3156]	; 0xc54
   2119c:	add	r4, r4, #1
   211a0:	cmp	r4, r3
   211a4:	bcc	2118c <vc_dispmanx_display_open_offscreen@@Base+0x6c>
   211a8:	mov	r3, #0
   211ac:	ldr	r5, [pc, #264]	; 212bc <vc_dispmanx_display_open_offscreen@@Base+0x19c>
   211b0:	str	r3, [sp]
   211b4:	add	r5, pc, r5
   211b8:	ldr	r0, [r5, #40]	; 0x28
   211bc:	add	r1, sp, #32
   211c0:	mov	r2, #2
   211c4:	mov	r3, #4
   211c8:	bl	5cc0 <vchi_msg_queuev@plt>
   211cc:	cmp	r0, #0
   211d0:	beq	21234 <vc_dispmanx_display_open_offscreen@@Base+0x114>
   211d4:	ldr	r5, [pc, #228]	; 212c0 <vc_dispmanx_display_open_offscreen@@Base+0x1a0>
   211d8:	add	r5, pc, r5
   211dc:	ldr	r3, [r5, #3372]	; 0xd2c
   211e0:	cmp	r3, #0
   211e4:	beq	21214 <vc_dispmanx_display_open_offscreen@@Base+0xf4>
   211e8:	ldr	r3, [r5, #3156]	; 0xc54
   211ec:	cmp	r3, #0
   211f0:	beq	21214 <vc_dispmanx_display_open_offscreen@@Base+0xf4>
   211f4:	mov	r4, #0
   211f8:	add	r3, r5, #40	; 0x28
   211fc:	ldr	r0, [r3, r4, lsl #2]
   21200:	bl	6014 <vchi_service_release@plt>
   21204:	ldr	r3, [r5, #3156]	; 0xc54
   21208:	add	r4, r4, #1
   2120c:	cmp	r4, r3
   21210:	bcc	211f8 <vc_dispmanx_display_open_offscreen@@Base+0xd8>
   21214:	ldr	r0, [pc, #168]	; 212c4 <vc_dispmanx_display_open_offscreen@@Base+0x1a4>
   21218:	add	r0, pc, r0
   2121c:	add	r0, r0, #40	; 0x28
   21220:	add	r0, r0, #3120	; 0xc30
   21224:	bl	6b84 <pthread_mutex_unlock@plt>
   21228:	ldr	r0, [sp, #16]
   2122c:	add	sp, sp, #48	; 0x30
   21230:	pop	{r4, r5, r6, r7, r8, pc}
   21234:	mov	r8, r0
   21238:	ldr	r4, [pc, #136]	; 212c8 <vc_dispmanx_display_open_offscreen@@Base+0x1a8>
   2123c:	str	r0, [sp, #20]
   21240:	add	r4, pc, r4
   21244:	add	r4, r4, #3376	; 0xd30
   21248:	add	r4, r4, #24
   2124c:	add	r7, sp, #16
   21250:	add	r6, sp, #20
   21254:	ldr	r0, [r5, #40]	; 0x28
   21258:	mov	r2, #4
   2125c:	str	r8, [sp]
   21260:	mov	r1, r7
   21264:	mov	r3, r6
   21268:	bl	61c4 <vchi_msg_dequeue@plt>
   2126c:	ldr	r2, [sp, #20]
   21270:	cmp	r2, #0
   21274:	bne	211d4 <vc_dispmanx_display_open_offscreen@@Base+0xb4>
   21278:	mov	r0, r4
   2127c:	bl	67e8 <sem_wait@plt>
   21280:	cmn	r0, #1
   21284:	bne	212a4 <vc_dispmanx_display_open_offscreen@@Base+0x184>
   21288:	bl	5fb4 <__errno_location@plt>
   2128c:	ldr	r2, [r0]
   21290:	cmp	r2, #4
   21294:	beq	21278 <vc_dispmanx_display_open_offscreen@@Base+0x158>
   21298:	cmp	r2, #0
   2129c:	beq	21254 <vc_dispmanx_display_open_offscreen@@Base+0x134>
   212a0:	b	211d4 <vc_dispmanx_display_open_offscreen@@Base+0xb4>
   212a4:	cmp	r0, #0
   212a8:	beq	21254 <vc_dispmanx_display_open_offscreen@@Base+0x134>
   212ac:	bl	5fb4 <__errno_location@plt>
   212b0:	ldr	r2, [r0]
   212b4:	b	21298 <vc_dispmanx_display_open_offscreen@@Base+0x178>
   212b8:	andeq	r8, r1, r8, asr #30
   212bc:	ldrdeq	r8, [r1], -r4
   212c0:			; <UNDEFINED> instruction: 0x00018eb0
   212c4:	andeq	r8, r1, r0, ror lr
   212c8:	andeq	r8, r1, r8, asr #28

000212cc <vc_dispmanx_display_reconfigure@@Base>:
   212cc:	push	{lr}		; (str lr, [sp, #-4]!)
   212d0:	sub	sp, sp, #12
   212d4:	stm	sp, {r0, r1}
   212d8:	mov	r2, #8
   212dc:	mov	r1, sp
   212e0:	mov	r0, #-2147483637	; 0x8000000b
   212e4:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   212e8:	add	sp, sp, #12
   212ec:	pop	{pc}		; (ldr pc, [sp], #4)

000212f0 <vc_dispmanx_display_set_destination@@Base>:
   212f0:	push	{lr}		; (str lr, [sp, #-4]!)
   212f4:	sub	sp, sp, #12
   212f8:	stm	sp, {r0, r1}
   212fc:	mov	r2, #8
   21300:	mov	r1, sp
   21304:	mov	r0, #-2147483636	; 0x8000000c
   21308:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   2130c:	add	sp, sp, #12
   21310:	pop	{pc}		; (ldr pc, [sp], #4)

00021314 <vc_dispmanx_display_set_background@@Base>:
   21314:	push	{lr}		; (str lr, [sp, #-4]!)
   21318:	sub	sp, sp, #28
   2131c:	ldrb	ip, [sp, #32]
   21320:	stmib	sp, {r0, r1, r2}
   21324:	add	r1, sp, #4
   21328:	mov	r2, #20
   2132c:	mov	r0, #-2147483635	; 0x8000000d
   21330:	str	r3, [sp, #16]
   21334:	str	ip, [sp, #20]
   21338:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   2133c:	add	sp, sp, #28
   21340:	pop	{pc}		; (ldr pc, [sp], #4)

00021344 <vc_dispmanx_display_get_info@@Base>:
   21344:	mov	ip, #14
   21348:	mov	r2, #4
   2134c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21350:	ldr	r4, [pc, #448]	; 21518 <vc_dispmanx_display_get_info@@Base+0x1d4>
   21354:	sub	sp, sp, #64	; 0x40
   21358:	add	r3, sp, #64	; 0x40
   2135c:	add	r4, pc, r4
   21360:	str	ip, [r3, #-44]!	; 0xffffffd4
   21364:	str	r0, [sp, #12]
   21368:	add	r0, r4, #40	; 0x28
   2136c:	str	r3, [sp, #28]
   21370:	add	r0, r0, #3120	; 0xc30
   21374:	add	r3, sp, #12
   21378:	str	r3, [sp, #36]	; 0x24
   2137c:	mov	sl, r1
   21380:	str	r2, [sp, #32]
   21384:	str	r2, [sp, #40]	; 0x28
   21388:	bl	5ffc <pthread_mutex_lock@plt>
   2138c:	ldr	r3, [r4, #3372]	; 0xd2c
   21390:	cmp	r3, #0
   21394:	beq	213c4 <vc_dispmanx_display_get_info@@Base+0x80>
   21398:	ldr	r3, [r4, #3156]	; 0xc54
   2139c:	cmp	r3, #0
   213a0:	beq	213c4 <vc_dispmanx_display_get_info@@Base+0x80>
   213a4:	mov	r5, #0
   213a8:	add	r3, r4, #40	; 0x28
   213ac:	ldr	r0, [r3, r5, lsl #2]
   213b0:	bl	6134 <vchi_service_use@plt>
   213b4:	ldr	r3, [r4, #3156]	; 0xc54
   213b8:	add	r5, r5, #1
   213bc:	cmp	r5, r3
   213c0:	bcc	213a8 <vc_dispmanx_display_get_info@@Base+0x64>
   213c4:	mov	r3, #0
   213c8:	ldr	r5, [pc, #332]	; 2151c <vc_dispmanx_display_get_info@@Base+0x1d8>
   213cc:	str	r3, [sp]
   213d0:	add	r5, pc, r5
   213d4:	ldr	r0, [r5, #40]	; 0x28
   213d8:	add	r1, sp, #28
   213dc:	mov	r2, #2
   213e0:	mov	r3, #4
   213e4:	bl	5cc0 <vchi_msg_queuev@plt>
   213e8:	subs	r6, r0, #0
   213ec:	beq	21460 <vc_dispmanx_display_get_info@@Base+0x11c>
   213f0:	ldr	r3, [r5, #3372]	; 0xd2c
   213f4:	cmp	r3, #0
   213f8:	beq	21508 <vc_dispmanx_display_get_info@@Base+0x1c4>
   213fc:	ldr	r3, [r5, #3156]	; 0xc54
   21400:	cmp	r3, #0
   21404:	beq	21508 <vc_dispmanx_display_get_info@@Base+0x1c4>
   21408:	mov	r4, #0
   2140c:	ldr	r5, [pc, #268]	; 21520 <vc_dispmanx_display_get_info@@Base+0x1dc>
   21410:	add	r5, pc, r5
   21414:	add	r3, r5, #40	; 0x28
   21418:	ldr	r0, [r3, r4, lsl #2]
   2141c:	bl	6014 <vchi_service_release@plt>
   21420:	ldr	r3, [r5, #3156]	; 0xc54
   21424:	add	r4, r4, #1
   21428:	cmp	r4, r3
   2142c:	bcc	21414 <vc_dispmanx_display_get_info@@Base+0xd0>
   21430:	ldr	r0, [pc, #236]	; 21524 <vc_dispmanx_display_get_info@@Base+0x1e0>
   21434:	add	r0, pc, r0
   21438:	add	r0, r0, #40	; 0x28
   2143c:	add	r0, r0, #3120	; 0xc30
   21440:	bl	6b84 <pthread_mutex_unlock@plt>
   21444:	cmp	r6, #0
   21448:	addeq	r0, sp, #48	; 0x30
   2144c:	ldmeq	r0, {r0, r1, r2, r3}
   21450:	stmeq	sl, {r0, r1, r2, r3}
   21454:	mov	r0, r6
   21458:	add	sp, sp, #64	; 0x40
   2145c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21460:	mov	r9, r6
   21464:	ldr	r4, [pc, #188]	; 21528 <vc_dispmanx_display_get_info@@Base+0x1e4>
   21468:	str	r6, [sp, #24]
   2146c:	add	r4, pc, r4
   21470:	add	r4, r4, #3376	; 0xd30
   21474:	add	r4, r4, #24
   21478:	add	r8, sp, #44	; 0x2c
   2147c:	add	r7, sp, #24
   21480:	ldr	r0, [r5, #40]	; 0x28
   21484:	mov	r3, r7
   21488:	str	r9, [sp]
   2148c:	mov	r1, r8
   21490:	mov	r2, #20
   21494:	bl	61c4 <vchi_msg_dequeue@plt>
   21498:	ldr	r3, [sp, #24]
   2149c:	mov	r6, r0
   214a0:	cmp	r3, #0
   214a4:	bne	214d0 <vc_dispmanx_display_get_info@@Base+0x18c>
   214a8:	mov	r0, r4
   214ac:	bl	67e8 <sem_wait@plt>
   214b0:	cmn	r0, #1
   214b4:	bne	214f4 <vc_dispmanx_display_get_info@@Base+0x1b0>
   214b8:	bl	5fb4 <__errno_location@plt>
   214bc:	ldr	r2, [r0]
   214c0:	cmp	r2, #4
   214c4:	beq	214a8 <vc_dispmanx_display_get_info@@Base+0x164>
   214c8:	cmp	r2, #0
   214cc:	beq	21480 <vc_dispmanx_display_get_info@@Base+0x13c>
   214d0:	ldr	r3, [pc, #84]	; 2152c <vc_dispmanx_display_get_info@@Base+0x1e8>
   214d4:	add	r3, pc, r3
   214d8:	ldr	r2, [r3, #3372]	; 0xd2c
   214dc:	cmp	r2, #0
   214e0:	beq	21430 <vc_dispmanx_display_get_info@@Base+0xec>
   214e4:	ldr	r3, [r3, #3156]	; 0xc54
   214e8:	cmp	r3, #0
   214ec:	bne	21408 <vc_dispmanx_display_get_info@@Base+0xc4>
   214f0:	b	21430 <vc_dispmanx_display_get_info@@Base+0xec>
   214f4:	cmp	r0, #0
   214f8:	beq	21480 <vc_dispmanx_display_get_info@@Base+0x13c>
   214fc:	bl	5fb4 <__errno_location@plt>
   21500:	ldr	r2, [r0]
   21504:	b	214c8 <vc_dispmanx_display_get_info@@Base+0x184>
   21508:	add	r0, r5, #40	; 0x28
   2150c:	add	r0, r0, #3120	; 0xc30
   21510:	bl	6b84 <pthread_mutex_unlock@plt>
   21514:	b	21454 <vc_dispmanx_display_get_info@@Base+0x110>
   21518:	andeq	r8, r1, ip, lsr #26
   2151c:			; <UNDEFINED> instruction: 0x00018cb8
   21520:	andeq	r8, r1, r8, ror ip
   21524:	andeq	r8, r1, r4, asr ip
   21528:	andeq	r8, r1, ip, lsl ip
   2152c:			; <UNDEFINED> instruction: 0x00018bb4

00021530 <vc_dispmanx_display_close@@Base>:
   21530:	push	{lr}		; (str lr, [sp, #-4]!)
   21534:	sub	sp, sp, #12
   21538:	add	r1, sp, #8
   2153c:	str	r0, [r1, #-4]!
   21540:	mov	r2, #4
   21544:	mov	r0, #-2147483633	; 0x8000000f
   21548:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   2154c:	add	sp, sp, #12
   21550:	pop	{pc}		; (ldr pc, [sp], #4)

00021554 <vc_dispmanx_update_start@@Base>:
   21554:	mov	r1, #16
   21558:	push	{r4, r5, r6, r7, r8, lr}
   2155c:	mov	r2, #4
   21560:	mov	r4, #0
   21564:	ldr	r5, [pc, #376]	; 216e4 <vc_dispmanx_update_start@@Base+0x190>
   21568:	sub	sp, sp, #48	; 0x30
   2156c:	add	r3, sp, #48	; 0x30
   21570:	add	r5, pc, r5
   21574:	str	r1, [r3, #-28]!	; 0xffffffe4
   21578:	str	r0, [sp, #12]
   2157c:	add	r0, r5, #40	; 0x28
   21580:	str	r3, [sp, #32]
   21584:	add	r0, r0, #3120	; 0xc30
   21588:	add	r3, sp, #12
   2158c:	str	r3, [sp, #40]	; 0x28
   21590:	str	r2, [sp, #36]	; 0x24
   21594:	str	r2, [sp, #44]	; 0x2c
   21598:	str	r4, [sp, #24]
   2159c:	bl	5ffc <pthread_mutex_lock@plt>
   215a0:	ldr	r3, [r5, #3372]	; 0xd2c
   215a4:	cmp	r3, r4
   215a8:	beq	215d4 <vc_dispmanx_update_start@@Base+0x80>
   215ac:	ldr	r3, [r5, #3156]	; 0xc54
   215b0:	cmp	r3, #0
   215b4:	beq	215d4 <vc_dispmanx_update_start@@Base+0x80>
   215b8:	add	r3, r5, #40	; 0x28
   215bc:	ldr	r0, [r3, r4, lsl #2]
   215c0:	bl	6134 <vchi_service_use@plt>
   215c4:	ldr	r3, [r5, #3156]	; 0xc54
   215c8:	add	r4, r4, #1
   215cc:	cmp	r4, r3
   215d0:	bcc	215b8 <vc_dispmanx_update_start@@Base+0x64>
   215d4:	mov	r3, #0
   215d8:	ldr	r5, [pc, #264]	; 216e8 <vc_dispmanx_update_start@@Base+0x194>
   215dc:	str	r3, [sp]
   215e0:	add	r5, pc, r5
   215e4:	ldr	r0, [r5, #40]	; 0x28
   215e8:	add	r1, sp, #32
   215ec:	mov	r2, #2
   215f0:	mov	r3, #4
   215f4:	bl	5cc0 <vchi_msg_queuev@plt>
   215f8:	cmp	r0, #0
   215fc:	beq	21660 <vc_dispmanx_update_start@@Base+0x10c>
   21600:	ldr	r5, [pc, #228]	; 216ec <vc_dispmanx_update_start@@Base+0x198>
   21604:	add	r5, pc, r5
   21608:	ldr	r3, [r5, #3372]	; 0xd2c
   2160c:	cmp	r3, #0
   21610:	beq	21640 <vc_dispmanx_update_start@@Base+0xec>
   21614:	ldr	r3, [r5, #3156]	; 0xc54
   21618:	cmp	r3, #0
   2161c:	beq	21640 <vc_dispmanx_update_start@@Base+0xec>
   21620:	mov	r4, #0
   21624:	add	r3, r5, #40	; 0x28
   21628:	ldr	r0, [r3, r4, lsl #2]
   2162c:	bl	6014 <vchi_service_release@plt>
   21630:	ldr	r3, [r5, #3156]	; 0xc54
   21634:	add	r4, r4, #1
   21638:	cmp	r4, r3
   2163c:	bcc	21624 <vc_dispmanx_update_start@@Base+0xd0>
   21640:	ldr	r0, [pc, #168]	; 216f0 <vc_dispmanx_update_start@@Base+0x19c>
   21644:	add	r0, pc, r0
   21648:	add	r0, r0, #40	; 0x28
   2164c:	add	r0, r0, #3120	; 0xc30
   21650:	bl	6b84 <pthread_mutex_unlock@plt>
   21654:	ldr	r0, [sp, #24]
   21658:	add	sp, sp, #48	; 0x30
   2165c:	pop	{r4, r5, r6, r7, r8, pc}
   21660:	mov	r8, r0
   21664:	ldr	r4, [pc, #136]	; 216f4 <vc_dispmanx_update_start@@Base+0x1a0>
   21668:	str	r0, [sp, #28]
   2166c:	add	r4, pc, r4
   21670:	add	r4, r4, #3376	; 0xd30
   21674:	add	r4, r4, #24
   21678:	add	r7, sp, #24
   2167c:	add	r6, sp, #28
   21680:	ldr	r0, [r5, #40]	; 0x28
   21684:	mov	r2, #4
   21688:	str	r8, [sp]
   2168c:	mov	r1, r7
   21690:	mov	r3, r6
   21694:	bl	61c4 <vchi_msg_dequeue@plt>
   21698:	ldr	r2, [sp, #28]
   2169c:	cmp	r2, #0
   216a0:	bne	21600 <vc_dispmanx_update_start@@Base+0xac>
   216a4:	mov	r0, r4
   216a8:	bl	67e8 <sem_wait@plt>
   216ac:	cmn	r0, #1
   216b0:	bne	216d0 <vc_dispmanx_update_start@@Base+0x17c>
   216b4:	bl	5fb4 <__errno_location@plt>
   216b8:	ldr	r2, [r0]
   216bc:	cmp	r2, #4
   216c0:	beq	216a4 <vc_dispmanx_update_start@@Base+0x150>
   216c4:	cmp	r2, #0
   216c8:	beq	21680 <vc_dispmanx_update_start@@Base+0x12c>
   216cc:	b	21600 <vc_dispmanx_update_start@@Base+0xac>
   216d0:	cmp	r0, #0
   216d4:	beq	21680 <vc_dispmanx_update_start@@Base+0x12c>
   216d8:	bl	5fb4 <__errno_location@plt>
   216dc:	ldr	r2, [r0]
   216e0:	b	216c4 <vc_dispmanx_update_start@@Base+0x170>
   216e4:	andeq	r8, r1, r8, lsl fp
   216e8:	andeq	r8, r1, r8, lsr #21
   216ec:	andeq	r8, r1, r4, lsl #21
   216f0:	andeq	r8, r1, r4, asr #20
   216f4:	andeq	r8, r1, ip, lsl sl

000216f8 <vc_dispmanx_update_submit@@Base>:
   216f8:	adds	r3, r1, #0
   216fc:	movne	r3, #1
   21700:	push	{lr}		; (str lr, [sp, #-4]!)
   21704:	cmp	r0, #0
   21708:	sub	sp, sp, #12
   2170c:	stm	sp, {r0, r3}
   21710:	beq	2174c <vc_dispmanx_update_submit@@Base+0x54>
   21714:	mov	r3, r0
   21718:	ldr	ip, [pc, #52]	; 21754 <vc_dispmanx_update_submit@@Base+0x5c>
   2171c:	add	ip, pc, ip
   21720:	ldr	r0, [ip, #52]	; 0x34
   21724:	str	r1, [ip, #3348]	; 0xd14
   21728:	str	r2, [ip, #3352]	; 0xd18
   2172c:	str	r3, [ip, #3356]	; 0xd1c
   21730:	bl	6134 <vchi_service_use@plt>
   21734:	mov	r0, #-2147483631	; 0x80000011
   21738:	mov	r1, sp
   2173c:	mov	r2, #8
   21740:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   21744:	add	sp, sp, #12
   21748:	pop	{pc}		; (ldr pc, [sp], #4)
   2174c:	mvn	r0, #0
   21750:	b	21744 <vc_dispmanx_update_submit@@Base+0x4c>
   21754:	andeq	r8, r1, ip, ror #18

00021758 <vc_dispmanx_update_submit_sync@@Base>:
   21758:	push	{lr}		; (str lr, [sp, #-4]!)
   2175c:	sub	sp, sp, #12
   21760:	add	r1, sp, #8
   21764:	str	r0, [r1, #-4]!
   21768:	mov	r2, #4
   2176c:	mov	r0, #18
   21770:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   21774:	add	sp, sp, #12
   21778:	pop	{pc}		; (ldr pc, [sp], #4)

0002177c <vc_dispmanx_element_add@@Base>:
   2177c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21780:	sub	sp, sp, #108	; 0x6c
   21784:	ldr	lr, [sp, #148]	; 0x94
   21788:	ldr	ip, [sp, #156]	; 0x9c
   2178c:	ldr	r9, [r3]
   21790:	ldr	r8, [r3, #4]
   21794:	ldr	r7, [r3, #8]
   21798:	ldr	sl, [r3, #12]
   2179c:	ldr	r6, [lr]
   217a0:	ldr	r5, [lr, #4]
   217a4:	ldr	r4, [lr, #8]
   217a8:	ldr	fp, [lr, #12]
   217ac:	ldr	r3, [sp, #152]	; 0x98
   217b0:	ldr	lr, [sp, #144]	; 0x90
   217b4:	cmp	ip, #0
   217b8:	str	lr, [sp, #28]
   217bc:	str	r3, [sp, #48]	; 0x30
   217c0:	stm	sp, {r0, r1, r2, r9}
   217c4:	str	r8, [sp, #16]
   217c8:	str	r7, [sp, #20]
   217cc:	str	sl, [sp, #24]
   217d0:	str	r6, [sp, #32]
   217d4:	str	r5, [sp, #36]	; 0x24
   217d8:	str	r4, [sp, #40]	; 0x28
   217dc:	str	fp, [sp, #44]	; 0x2c
   217e0:	ldr	r3, [sp, #160]	; 0xa0
   217e4:	ldr	lr, [sp, #164]	; 0xa4
   217e8:	beq	21868 <vc_dispmanx_element_add@@Base+0xec>
   217ec:	ldm	ip, {r1, r2, ip}
   217f0:	cmp	r3, #0
   217f4:	str	r1, [sp, #52]	; 0x34
   217f8:	str	r2, [sp, #56]	; 0x38
   217fc:	str	ip, [sp, #60]	; 0x3c
   21800:	beq	2187c <vc_dispmanx_element_add@@Base+0x100>
   21804:	ldr	r7, [r3]
   21808:	ldr	r6, [r3, #4]
   2180c:	ldrb	r5, [r3, #8]
   21810:	ldrb	r4, [r3, #9]
   21814:	ldrb	ip, [r3, #10]
   21818:	ldrb	r0, [r3, #11]
   2181c:	ldrb	r1, [r3, #12]
   21820:	ldrb	r2, [r3, #13]
   21824:	ldr	r3, [r3, #16]
   21828:	str	r7, [sp, #64]	; 0x40
   2182c:	str	r6, [sp, #68]	; 0x44
   21830:	str	r5, [sp, #72]	; 0x48
   21834:	str	r4, [sp, #76]	; 0x4c
   21838:	str	ip, [sp, #80]	; 0x50
   2183c:	str	r0, [sp, #84]	; 0x54
   21840:	str	r1, [sp, #88]	; 0x58
   21844:	str	r2, [sp, #92]	; 0x5c
   21848:	mov	r1, sp
   2184c:	mov	r2, #104	; 0x68
   21850:	mov	r0, #19
   21854:	str	r3, [sp, #96]	; 0x60
   21858:	str	lr, [sp, #100]	; 0x64
   2185c:	bl	20174 <vc_vchi_tv_init@@Base+0x8a0>
   21860:	add	sp, sp, #108	; 0x6c
   21864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21868:	cmp	r3, #0
   2186c:	str	ip, [sp, #52]	; 0x34
   21870:	str	ip, [sp, #56]	; 0x38
   21874:	str	ip, [sp, #60]	; 0x3c
   21878:	bne	21804 <vc_dispmanx_element_add@@Base+0x88>
   2187c:	str	r3, [sp, #64]	; 0x40
   21880:	str	r3, [sp, #68]	; 0x44
   21884:	str	r3, [sp, #72]	; 0x48
   21888:	str	r3, [sp, #76]	; 0x4c
   2188c:	str	r3, [sp, #80]	; 0x50
   21890:	str	r3, [sp, #84]	; 0x54
   21894:	str	r3, [sp, #88]	; 0x58
   21898:	str	r3, [sp, #92]	; 0x5c
   2189c:	b	21848 <vc_dispmanx_element_add@@Base+0xcc>

000218a0 <vc_dispmanx_element_change_source@@Base>:
   218a0:	push	{lr}		; (str lr, [sp, #-4]!)
   218a4:	sub	sp, sp, #20
   218a8:	stmib	sp, {r0, r1, r2}
   218ac:	add	r1, sp, #4
   218b0:	mov	r2, #12
   218b4:	mov	r0, #-2147483626	; 0x80000016
   218b8:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   218bc:	add	sp, sp, #20
   218c0:	pop	{pc}		; (ldr pc, [sp], #4)

000218c4 <vc_dispmanx_element_change_layer@@Base>:
   218c4:	push	{lr}		; (str lr, [sp, #-4]!)
   218c8:	sub	sp, sp, #20
   218cc:	stmib	sp, {r0, r1, r2}
   218d0:	add	r1, sp, #4
   218d4:	mov	r2, #12
   218d8:	mov	r0, #-2147483625	; 0x80000017
   218dc:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   218e0:	add	sp, sp, #20
   218e4:	pop	{pc}		; (ldr pc, [sp], #4)

000218e8 <vc_dispmanx_element_modified@@Base>:
   218e8:	mov	r3, #0
   218ec:	push	{lr}		; (str lr, [sp, #-4]!)
   218f0:	cmp	r2, #0
   218f4:	sub	sp, sp, #28
   218f8:	ldrne	ip, [r2]
   218fc:	stm	sp, {r0, r1, r3}
   21900:	str	r3, [sp, #12]
   21904:	str	r3, [sp, #16]
   21908:	str	r3, [sp, #20]
   2190c:	moveq	r2, #8
   21910:	ldmibne	r2, {r0, r1, r3}
   21914:	movne	r2, #24
   21918:	strne	r0, [sp, #12]
   2191c:	strne	r1, [sp, #16]
   21920:	mov	r0, #-2147483628	; 0x80000014
   21924:	mov	r1, sp
   21928:	strne	ip, [sp, #8]
   2192c:	strne	r3, [sp, #20]
   21930:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   21934:	add	sp, sp, #28
   21938:	pop	{pc}		; (ldr pc, [sp], #4)

0002193c <vc_dispmanx_element_remove@@Base>:
   2193c:	push	{lr}		; (str lr, [sp, #-4]!)
   21940:	sub	sp, sp, #12
   21944:	stm	sp, {r0, r1}
   21948:	mov	r2, #8
   2194c:	mov	r1, sp
   21950:	mov	r0, #-2147483627	; 0x80000015
   21954:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   21958:	add	sp, sp, #12
   2195c:	pop	{pc}		; (ldr pc, [sp], #4)

00021960 <vc_dispmanx_element_change_attributes@@Base>:
   21960:	mov	ip, #0
   21964:	push	{r4, r5, r6, lr}
   21968:	sub	sp, sp, #64	; 0x40
   2196c:	ldr	lr, [sp, #84]	; 0x54
   21970:	ldrb	r6, [sp, #80]	; 0x50
   21974:	ldr	r5, [sp, #92]	; 0x5c
   21978:	ldr	r4, [sp, #96]	; 0x60
   2197c:	cmp	lr, ip
   21980:	stmib	sp, {r0, r1, r2, r3}
   21984:	str	ip, [sp, #32]
   21988:	str	ip, [sp, #36]	; 0x24
   2198c:	str	ip, [sp, #40]	; 0x28
   21990:	str	ip, [sp, #44]	; 0x2c
   21994:	str	ip, [sp, #48]	; 0x30
   21998:	str	ip, [sp, #52]	; 0x34
   2199c:	str	ip, [sp, #56]	; 0x38
   219a0:	str	ip, [sp, #60]	; 0x3c
   219a4:	str	r6, [sp, #20]
   219a8:	str	r5, [sp, #24]
   219ac:	str	r4, [sp, #28]
   219b0:	ldr	r1, [sp, #88]	; 0x58
   219b4:	beq	21a28 <vc_dispmanx_element_change_attributes@@Base+0xc8>
   219b8:	ldmib	lr, {r4, ip}
   219bc:	ldr	r0, [lr, #12]
   219c0:	ldr	r5, [lr]
   219c4:	orr	r3, r2, #4
   219c8:	cmp	r1, #0
   219cc:	str	r0, [sp, #44]	; 0x2c
   219d0:	str	r3, [sp, #12]
   219d4:	str	r5, [sp, #32]
   219d8:	str	r4, [sp, #36]	; 0x24
   219dc:	str	ip, [sp, #40]	; 0x28
   219e0:	mov	r2, #60	; 0x3c
   219e4:	mov	r0, #44	; 0x2c
   219e8:	beq	21a3c <vc_dispmanx_element_change_attributes@@Base+0xdc>
   219ec:	ldr	lr, [r1]
   219f0:	ldr	ip, [r1, #4]
   219f4:	ldr	r0, [r1, #8]
   219f8:	ldr	r1, [r1, #12]
   219fc:	orr	r3, r3, #8
   21a00:	str	r3, [sp, #12]
   21a04:	str	lr, [sp, #48]	; 0x30
   21a08:	str	ip, [sp, #52]	; 0x34
   21a0c:	str	r0, [sp, #56]	; 0x38
   21a10:	str	r1, [sp, #60]	; 0x3c
   21a14:	add	r1, sp, #4
   21a18:	mov	r0, #-2147483624	; 0x80000018
   21a1c:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   21a20:	add	sp, sp, #64	; 0x40
   21a24:	pop	{r4, r5, r6, pc}
   21a28:	cmp	r1, #0
   21a2c:	mov	r3, r2
   21a30:	mov	r0, #28
   21a34:	mov	r2, #44	; 0x2c
   21a38:	bne	219ec <vc_dispmanx_element_change_attributes@@Base+0x8c>
   21a3c:	mov	r2, r0
   21a40:	b	21a14 <vc_dispmanx_element_change_attributes@@Base+0xb4>

00021a44 <vc_dispmanx_snapshot@@Base>:
   21a44:	push	{lr}		; (str lr, [sp, #-4]!)
   21a48:	sub	sp, sp, #20
   21a4c:	stmib	sp, {r0, r1, r2}
   21a50:	add	r1, sp, #4
   21a54:	mov	r2, #12
   21a58:	mov	r0, #30
   21a5c:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   21a60:	add	sp, sp, #20
   21a64:	pop	{pc}		; (ldr pc, [sp], #4)

00021a68 <vc_dispmanx_resource_set_palette@@Base>:
   21a68:	push	{r4, r5, r6, r7, r8, lr}
   21a6c:	sub	sp, sp, #24
   21a70:	str	r0, [sp, #12]
   21a74:	str	r2, [sp, #16]
   21a78:	mov	r8, r1
   21a7c:	mov	r0, #-2147483617	; 0x8000001f
   21a80:	add	r1, sp, #12
   21a84:	mov	r2, #12
   21a88:	mov	r7, r3
   21a8c:	str	r3, [sp, #20]
   21a90:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   21a94:	subs	r6, r0, #0
   21a98:	beq	21aa8 <vc_dispmanx_resource_set_palette@@Base+0x40>
   21a9c:	mov	r0, r6
   21aa0:	add	sp, sp, #24
   21aa4:	pop	{r4, r5, r6, r7, r8, pc}
   21aa8:	ldr	r4, [pc, #192]	; 21b70 <vc_dispmanx_resource_set_palette@@Base+0x108>
   21aac:	add	r4, pc, r4
   21ab0:	add	r0, r4, #40	; 0x28
   21ab4:	add	r0, r0, #3120	; 0xc30
   21ab8:	bl	5ffc <pthread_mutex_lock@plt>
   21abc:	ldr	r3, [r4, #3372]	; 0xd2c
   21ac0:	cmp	r3, #0
   21ac4:	beq	21af4 <vc_dispmanx_resource_set_palette@@Base+0x8c>
   21ac8:	ldr	r3, [r4, #3156]	; 0xc54
   21acc:	cmp	r3, #0
   21ad0:	beq	21af4 <vc_dispmanx_resource_set_palette@@Base+0x8c>
   21ad4:	mov	r5, r6
   21ad8:	add	r3, r4, #40	; 0x28
   21adc:	ldr	r0, [r3, r5, lsl #2]
   21ae0:	bl	6134 <vchi_service_use@plt>
   21ae4:	ldr	r3, [r4, #3156]	; 0xc54
   21ae8:	add	r5, r5, #1
   21aec:	cmp	r5, r3
   21af0:	bcc	21ad8 <vc_dispmanx_resource_set_palette@@Base+0x70>
   21af4:	mov	r4, #0
   21af8:	ldr	r5, [pc, #116]	; 21b74 <vc_dispmanx_resource_set_palette@@Base+0x10c>
   21afc:	mov	r3, #16
   21b00:	add	r5, pc, r5
   21b04:	ldr	r0, [r5, #40]	; 0x28
   21b08:	mov	r1, r8
   21b0c:	mov	r2, r7
   21b10:	str	r4, [sp]
   21b14:	bl	674c <vchi_bulk_queue_transmit@plt>
   21b18:	ldr	r3, [r5, #3372]	; 0xd2c
   21b1c:	mov	r6, r0
   21b20:	cmp	r3, r4
   21b24:	beq	21b50 <vc_dispmanx_resource_set_palette@@Base+0xe8>
   21b28:	ldr	r3, [r5, #3156]	; 0xc54
   21b2c:	cmp	r3, #0
   21b30:	beq	21b50 <vc_dispmanx_resource_set_palette@@Base+0xe8>
   21b34:	add	r3, r5, #40	; 0x28
   21b38:	ldr	r0, [r3, r4, lsl #2]
   21b3c:	bl	6014 <vchi_service_release@plt>
   21b40:	ldr	r3, [r5, #3156]	; 0xc54
   21b44:	add	r4, r4, #1
   21b48:	cmp	r4, r3
   21b4c:	bcc	21b34 <vc_dispmanx_resource_set_palette@@Base+0xcc>
   21b50:	ldr	r0, [pc, #32]	; 21b78 <vc_dispmanx_resource_set_palette@@Base+0x110>
   21b54:	add	r0, pc, r0
   21b58:	add	r0, r0, #40	; 0x28
   21b5c:	add	r0, r0, #3120	; 0xc30
   21b60:	bl	6b84 <pthread_mutex_unlock@plt>
   21b64:	mov	r0, r6
   21b68:	add	sp, sp, #24
   21b6c:	pop	{r4, r5, r6, r7, r8, pc}
   21b70:	ldrdeq	r8, [r1], -ip
   21b74:	andeq	r8, r1, r8, lsl #11
   21b78:	andeq	r8, r1, r4, lsr r5

00021b7c <vc_dispmanx_vsync_callback@@Base>:
   21b7c:	push	{r4, r5, r6, lr}
   21b80:	adds	r5, r1, #0
   21b84:	movne	r5, #1
   21b88:	mov	ip, #0
   21b8c:	ldr	r4, [pc, #156]	; 21c30 <vc_dispmanx_vsync_callback@@Base+0xb4>
   21b90:	sub	sp, sp, #16
   21b94:	add	r4, pc, r4
   21b98:	ldr	r3, [r4, #3368]	; 0xd28
   21b9c:	str	r0, [sp, #4]
   21ba0:	cmp	r3, ip
   21ba4:	movne	r3, #0
   21ba8:	andeq	r3, r5, #1
   21bac:	cmp	r3, ip
   21bb0:	str	r1, [r4, #3360]	; 0xd20
   21bb4:	str	r5, [sp, #12]
   21bb8:	str	r2, [r4, #3364]	; 0xd24
   21bbc:	str	ip, [sp, #8]
   21bc0:	bne	21c10 <vc_dispmanx_vsync_callback@@Base+0x94>
   21bc4:	mov	r0, #-2147483616	; 0x80000020
   21bc8:	add	r1, sp, #4
   21bcc:	mov	r2, #12
   21bd0:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   21bd4:	ldr	r3, [r4, #3368]	; 0xd28
   21bd8:	mov	r6, r0
   21bdc:	adds	r3, r3, #0
   21be0:	movne	r3, #1
   21be4:	cmp	r3, r5
   21be8:	bhi	21c04 <vc_dispmanx_vsync_callback@@Base+0x88>
   21bec:	mov	r0, r6
   21bf0:	ldr	r3, [pc, #60]	; 21c34 <vc_dispmanx_vsync_callback@@Base+0xb8>
   21bf4:	add	r3, pc, r3
   21bf8:	str	r5, [r3, #3368]	; 0xd28
   21bfc:	add	sp, sp, #16
   21c00:	pop	{r4, r5, r6, pc}
   21c04:	ldr	r0, [r4, #52]	; 0x34
   21c08:	bl	6014 <vchi_service_release@plt>
   21c0c:	b	21bec <vc_dispmanx_vsync_callback@@Base+0x70>
   21c10:	ldr	r0, [r4, #52]	; 0x34
   21c14:	bl	6134 <vchi_service_use@plt>
   21c18:	mov	r0, #-2147483616	; 0x80000020
   21c1c:	add	r1, sp, #4
   21c20:	mov	r2, #12
   21c24:	bl	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>
   21c28:	mov	r6, r0
   21c2c:	b	21bec <vc_dispmanx_vsync_callback@@Base+0x70>
   21c30:	strdeq	r8, [r1], -r4
   21c34:	muleq	r1, r4, r4

00021c38 <vc_dispmanx_send_command@@Base>:
   21c38:	b	1ffc8 <vc_vchi_tv_init@@Base+0x6f4>

00021c3c <vc_dispmanx_send_command_reply@@Base>:
   21c3c:	push	{r4, r5, r6, r7, r8, r9, lr}
   21c40:	mov	lr, #4
   21c44:	ldr	r4, [pc, #372]	; 21dc0 <vc_dispmanx_send_command_reply@@Base+0x184>
   21c48:	sub	sp, sp, #36	; 0x24
   21c4c:	add	ip, sp, #32
   21c50:	add	r4, pc, r4
   21c54:	str	r0, [ip, #-24]!	; 0xffffffe8
   21c58:	add	r0, r4, #40	; 0x28
   21c5c:	add	r0, r0, #3120	; 0xc30
   21c60:	mov	r8, r3
   21c64:	str	r1, [sp, #24]
   21c68:	str	r2, [sp, #28]
   21c6c:	str	ip, [sp, #16]
   21c70:	str	lr, [sp, #20]
   21c74:	bl	5ffc <pthread_mutex_lock@plt>
   21c78:	ldr	r3, [r4, #3372]	; 0xd2c
   21c7c:	cmp	r3, #0
   21c80:	beq	21cb0 <vc_dispmanx_send_command_reply@@Base+0x74>
   21c84:	ldr	r3, [r4, #3156]	; 0xc54
   21c88:	cmp	r3, #0
   21c8c:	beq	21cb0 <vc_dispmanx_send_command_reply@@Base+0x74>
   21c90:	mov	r5, #0
   21c94:	add	r3, r4, #40	; 0x28
   21c98:	ldr	r0, [r3, r5, lsl #2]
   21c9c:	bl	6134 <vchi_service_use@plt>
   21ca0:	ldr	r3, [r4, #3156]	; 0xc54
   21ca4:	add	r5, r5, #1
   21ca8:	cmp	r5, r3
   21cac:	bcc	21c94 <vc_dispmanx_send_command_reply@@Base+0x58>
   21cb0:	mov	r3, #0
   21cb4:	ldr	r6, [pc, #264]	; 21dc4 <vc_dispmanx_send_command_reply@@Base+0x188>
   21cb8:	str	r3, [sp]
   21cbc:	add	r6, pc, r6
   21cc0:	ldr	r0, [r6, #40]	; 0x28
   21cc4:	add	r1, sp, #16
   21cc8:	mov	r2, #2
   21ccc:	mov	r3, #4
   21cd0:	bl	5cc0 <vchi_msg_queuev@plt>
   21cd4:	subs	r5, r0, #0
   21cd8:	beq	21d3c <vc_dispmanx_send_command_reply@@Base+0x100>
   21cdc:	ldr	r6, [pc, #228]	; 21dc8 <vc_dispmanx_send_command_reply@@Base+0x18c>
   21ce0:	add	r6, pc, r6
   21ce4:	ldr	r3, [r6, #3372]	; 0xd2c
   21ce8:	cmp	r3, #0
   21cec:	beq	21d1c <vc_dispmanx_send_command_reply@@Base+0xe0>
   21cf0:	ldr	r3, [r6, #3156]	; 0xc54
   21cf4:	cmp	r3, #0
   21cf8:	beq	21d1c <vc_dispmanx_send_command_reply@@Base+0xe0>
   21cfc:	mov	r4, #0
   21d00:	add	r3, r6, #40	; 0x28
   21d04:	ldr	r0, [r3, r4, lsl #2]
   21d08:	bl	6014 <vchi_service_release@plt>
   21d0c:	ldr	r3, [r6, #3156]	; 0xc54
   21d10:	add	r4, r4, #1
   21d14:	cmp	r4, r3
   21d18:	bcc	21d00 <vc_dispmanx_send_command_reply@@Base+0xc4>
   21d1c:	ldr	r0, [pc, #168]	; 21dcc <vc_dispmanx_send_command_reply@@Base+0x190>
   21d20:	add	r0, pc, r0
   21d24:	add	r0, r0, #40	; 0x28
   21d28:	add	r0, r0, #3120	; 0xc30
   21d2c:	bl	6b84 <pthread_mutex_unlock@plt>
   21d30:	mov	r0, r5
   21d34:	add	sp, sp, #36	; 0x24
   21d38:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21d3c:	mov	r9, r5
   21d40:	ldr	r4, [pc, #136]	; 21dd0 <vc_dispmanx_send_command_reply@@Base+0x194>
   21d44:	add	r7, sp, #32
   21d48:	add	r4, pc, r4
   21d4c:	add	r4, r4, #3376	; 0xd30
   21d50:	str	r5, [r7, #-20]!	; 0xffffffec
   21d54:	add	r4, r4, #24
   21d58:	ldr	r0, [r6, #40]	; 0x28
   21d5c:	mov	r3, r7
   21d60:	str	r9, [sp]
   21d64:	mov	r1, r8
   21d68:	ldr	r2, [sp, #64]	; 0x40
   21d6c:	bl	61c4 <vchi_msg_dequeue@plt>
   21d70:	ldr	r3, [sp, #12]
   21d74:	mov	r5, r0
   21d78:	cmp	r3, #0
   21d7c:	bne	21cdc <vc_dispmanx_send_command_reply@@Base+0xa0>
   21d80:	mov	r0, r4
   21d84:	bl	67e8 <sem_wait@plt>
   21d88:	cmn	r0, #1
   21d8c:	bne	21dac <vc_dispmanx_send_command_reply@@Base+0x170>
   21d90:	bl	5fb4 <__errno_location@plt>
   21d94:	ldr	r2, [r0]
   21d98:	cmp	r2, #4
   21d9c:	beq	21d80 <vc_dispmanx_send_command_reply@@Base+0x144>
   21da0:	cmp	r2, #0
   21da4:	beq	21d58 <vc_dispmanx_send_command_reply@@Base+0x11c>
   21da8:	b	21cdc <vc_dispmanx_send_command_reply@@Base+0xa0>
   21dac:	cmp	r0, #0
   21db0:	beq	21d58 <vc_dispmanx_send_command_reply@@Base+0x11c>
   21db4:	bl	5fb4 <__errno_location@plt>
   21db8:	ldr	r2, [r0]
   21dbc:	b	21da0 <vc_dispmanx_send_command_reply@@Base+0x164>
   21dc0:	andeq	r8, r1, r8, lsr r4
   21dc4:	andeq	r8, r1, ip, asr #7
   21dc8:	andeq	r8, r1, r8, lsr #7
   21dcc:	andeq	r8, r1, r8, ror #6
   21dd0:	andeq	r8, r1, r0, asr #6
   21dd4:	cmp	r1, #0
   21dd8:	beq	21fe4 <vc_dispmanx_send_command_reply@@Base+0x3a8>
   21ddc:	eor	ip, r0, r1
   21de0:	rsbmi	r1, r1, #0
   21de4:	subs	r2, r1, #1
   21de8:	beq	21fb0 <vc_dispmanx_send_command_reply@@Base+0x374>
   21dec:	movs	r3, r0
   21df0:	rsbmi	r3, r0, #0
   21df4:	cmp	r3, r1
   21df8:	bls	21fbc <vc_dispmanx_send_command_reply@@Base+0x380>
   21dfc:	tst	r1, r2
   21e00:	beq	21fcc <vc_dispmanx_send_command_reply@@Base+0x390>
   21e04:	clz	r2, r3
   21e08:	clz	r0, r1
   21e0c:	sub	r2, r0, r2
   21e10:	rsbs	r2, r2, #31
   21e14:	addne	r2, r2, r2, lsl #1
   21e18:	mov	r0, #0
   21e1c:	addne	pc, pc, r2, lsl #2
   21e20:	nop			; (mov r0, r0)
   21e24:	cmp	r3, r1, lsl #31
   21e28:	adc	r0, r0, r0
   21e2c:	subcs	r3, r3, r1, lsl #31
   21e30:	cmp	r3, r1, lsl #30
   21e34:	adc	r0, r0, r0
   21e38:	subcs	r3, r3, r1, lsl #30
   21e3c:	cmp	r3, r1, lsl #29
   21e40:	adc	r0, r0, r0
   21e44:	subcs	r3, r3, r1, lsl #29
   21e48:	cmp	r3, r1, lsl #28
   21e4c:	adc	r0, r0, r0
   21e50:	subcs	r3, r3, r1, lsl #28
   21e54:	cmp	r3, r1, lsl #27
   21e58:	adc	r0, r0, r0
   21e5c:	subcs	r3, r3, r1, lsl #27
   21e60:	cmp	r3, r1, lsl #26
   21e64:	adc	r0, r0, r0
   21e68:	subcs	r3, r3, r1, lsl #26
   21e6c:	cmp	r3, r1, lsl #25
   21e70:	adc	r0, r0, r0
   21e74:	subcs	r3, r3, r1, lsl #25
   21e78:	cmp	r3, r1, lsl #24
   21e7c:	adc	r0, r0, r0
   21e80:	subcs	r3, r3, r1, lsl #24
   21e84:	cmp	r3, r1, lsl #23
   21e88:	adc	r0, r0, r0
   21e8c:	subcs	r3, r3, r1, lsl #23
   21e90:	cmp	r3, r1, lsl #22
   21e94:	adc	r0, r0, r0
   21e98:	subcs	r3, r3, r1, lsl #22
   21e9c:	cmp	r3, r1, lsl #21
   21ea0:	adc	r0, r0, r0
   21ea4:	subcs	r3, r3, r1, lsl #21
   21ea8:	cmp	r3, r1, lsl #20
   21eac:	adc	r0, r0, r0
   21eb0:	subcs	r3, r3, r1, lsl #20
   21eb4:	cmp	r3, r1, lsl #19
   21eb8:	adc	r0, r0, r0
   21ebc:	subcs	r3, r3, r1, lsl #19
   21ec0:	cmp	r3, r1, lsl #18
   21ec4:	adc	r0, r0, r0
   21ec8:	subcs	r3, r3, r1, lsl #18
   21ecc:	cmp	r3, r1, lsl #17
   21ed0:	adc	r0, r0, r0
   21ed4:	subcs	r3, r3, r1, lsl #17
   21ed8:	cmp	r3, r1, lsl #16
   21edc:	adc	r0, r0, r0
   21ee0:	subcs	r3, r3, r1, lsl #16
   21ee4:	cmp	r3, r1, lsl #15
   21ee8:	adc	r0, r0, r0
   21eec:	subcs	r3, r3, r1, lsl #15
   21ef0:	cmp	r3, r1, lsl #14
   21ef4:	adc	r0, r0, r0
   21ef8:	subcs	r3, r3, r1, lsl #14
   21efc:	cmp	r3, r1, lsl #13
   21f00:	adc	r0, r0, r0
   21f04:	subcs	r3, r3, r1, lsl #13
   21f08:	cmp	r3, r1, lsl #12
   21f0c:	adc	r0, r0, r0
   21f10:	subcs	r3, r3, r1, lsl #12
   21f14:	cmp	r3, r1, lsl #11
   21f18:	adc	r0, r0, r0
   21f1c:	subcs	r3, r3, r1, lsl #11
   21f20:	cmp	r3, r1, lsl #10
   21f24:	adc	r0, r0, r0
   21f28:	subcs	r3, r3, r1, lsl #10
   21f2c:	cmp	r3, r1, lsl #9
   21f30:	adc	r0, r0, r0
   21f34:	subcs	r3, r3, r1, lsl #9
   21f38:	cmp	r3, r1, lsl #8
   21f3c:	adc	r0, r0, r0
   21f40:	subcs	r3, r3, r1, lsl #8
   21f44:	cmp	r3, r1, lsl #7
   21f48:	adc	r0, r0, r0
   21f4c:	subcs	r3, r3, r1, lsl #7
   21f50:	cmp	r3, r1, lsl #6
   21f54:	adc	r0, r0, r0
   21f58:	subcs	r3, r3, r1, lsl #6
   21f5c:	cmp	r3, r1, lsl #5
   21f60:	adc	r0, r0, r0
   21f64:	subcs	r3, r3, r1, lsl #5
   21f68:	cmp	r3, r1, lsl #4
   21f6c:	adc	r0, r0, r0
   21f70:	subcs	r3, r3, r1, lsl #4
   21f74:	cmp	r3, r1, lsl #3
   21f78:	adc	r0, r0, r0
   21f7c:	subcs	r3, r3, r1, lsl #3
   21f80:	cmp	r3, r1, lsl #2
   21f84:	adc	r0, r0, r0
   21f88:	subcs	r3, r3, r1, lsl #2
   21f8c:	cmp	r3, r1, lsl #1
   21f90:	adc	r0, r0, r0
   21f94:	subcs	r3, r3, r1, lsl #1
   21f98:	cmp	r3, r1
   21f9c:	adc	r0, r0, r0
   21fa0:	subcs	r3, r3, r1
   21fa4:	cmp	ip, #0
   21fa8:	rsbmi	r0, r0, #0
   21fac:	bx	lr
   21fb0:	teq	ip, r0
   21fb4:	rsbmi	r0, r0, #0
   21fb8:	bx	lr
   21fbc:	movcc	r0, #0
   21fc0:	asreq	r0, ip, #31
   21fc4:	orreq	r0, r0, #1
   21fc8:	bx	lr
   21fcc:	clz	r2, r1
   21fd0:	rsb	r2, r2, #31
   21fd4:	cmp	ip, #0
   21fd8:	lsr	r0, r3, r2
   21fdc:	rsbmi	r0, r0, #0
   21fe0:	bx	lr
   21fe4:	cmp	r0, #0
   21fe8:	mvngt	r0, #-2147483648	; 0x80000000
   21fec:	movlt	r0, #-2147483648	; 0x80000000
   21ff0:	b	224a8 <vc_dispmanx_send_command_reply@@Base+0x86c>
   21ff4:	cmp	r1, #0
   21ff8:	beq	21fe4 <vc_dispmanx_send_command_reply@@Base+0x3a8>
   21ffc:	push	{r0, r1, lr}
   22000:	bl	21ddc <vc_dispmanx_send_command_reply@@Base+0x1a0>
   22004:	pop	{r1, r2, lr}
   22008:	mul	r3, r2, r0
   2200c:	sub	r1, r1, r3
   22010:	bx	lr
   22014:	eor	r1, r1, #-2147483648	; 0x80000000
   22018:	b	22020 <vc_dispmanx_send_command_reply@@Base+0x3e4>
   2201c:	eor	r3, r3, #-2147483648	; 0x80000000
   22020:	push	{r4, r5, lr}
   22024:	lsl	r4, r1, #1
   22028:	lsl	r5, r3, #1
   2202c:	teq	r4, r5
   22030:	teqeq	r0, r2
   22034:	orrsne	ip, r4, r0
   22038:	orrsne	ip, r5, r2
   2203c:	mvnsne	ip, r4, asr #21
   22040:	mvnsne	ip, r5, asr #21
   22044:	beq	22230 <vc_dispmanx_send_command_reply@@Base+0x5f4>
   22048:	lsr	r4, r4, #21
   2204c:	rsbs	r5, r4, r5, lsr #21
   22050:	rsblt	r5, r5, #0
   22054:	ble	22074 <vc_dispmanx_send_command_reply@@Base+0x438>
   22058:	add	r4, r4, r5
   2205c:	eor	r2, r0, r2
   22060:	eor	r3, r1, r3
   22064:	eor	r0, r2, r0
   22068:	eor	r1, r3, r1
   2206c:	eor	r2, r0, r2
   22070:	eor	r3, r1, r3
   22074:	cmp	r5, #54	; 0x36
   22078:	pophi	{r4, r5, pc}
   2207c:	tst	r1, #-2147483648	; 0x80000000
   22080:	lsl	r1, r1, #12
   22084:	mov	ip, #1048576	; 0x100000
   22088:	orr	r1, ip, r1, lsr #12
   2208c:	beq	22098 <vc_dispmanx_send_command_reply@@Base+0x45c>
   22090:	rsbs	r0, r0, #0
   22094:	rsc	r1, r1, #0
   22098:	tst	r3, #-2147483648	; 0x80000000
   2209c:	lsl	r3, r3, #12
   220a0:	orr	r3, ip, r3, lsr #12
   220a4:	beq	220b0 <vc_dispmanx_send_command_reply@@Base+0x474>
   220a8:	rsbs	r2, r2, #0
   220ac:	rsc	r3, r3, #0
   220b0:	teq	r4, r5
   220b4:	beq	22218 <vc_dispmanx_send_command_reply@@Base+0x5dc>
   220b8:	sub	r4, r4, #1
   220bc:	rsbs	lr, r5, #32
   220c0:	blt	220dc <vc_dispmanx_send_command_reply@@Base+0x4a0>
   220c4:	lsl	ip, r2, lr
   220c8:	adds	r0, r0, r2, lsr r5
   220cc:	adc	r1, r1, #0
   220d0:	adds	r0, r0, r3, lsl lr
   220d4:	adcs	r1, r1, r3, asr r5
   220d8:	b	220f8 <vc_dispmanx_send_command_reply@@Base+0x4bc>
   220dc:	sub	r5, r5, #32
   220e0:	add	lr, lr, #32
   220e4:	cmp	r2, #1
   220e8:	lsl	ip, r3, lr
   220ec:	orrcs	ip, ip, #2
   220f0:	adds	r0, r0, r3, asr r5
   220f4:	adcs	r1, r1, r3, asr #31
   220f8:	and	r5, r1, #-2147483648	; 0x80000000
   220fc:	bpl	2210c <vc_dispmanx_send_command_reply@@Base+0x4d0>
   22100:	rsbs	ip, ip, #0
   22104:	rscs	r0, r0, #0
   22108:	rsc	r1, r1, #0
   2210c:	cmp	r1, #1048576	; 0x100000
   22110:	bcc	22150 <vc_dispmanx_send_command_reply@@Base+0x514>
   22114:	cmp	r1, #2097152	; 0x200000
   22118:	bcc	22138 <vc_dispmanx_send_command_reply@@Base+0x4fc>
   2211c:	lsrs	r1, r1, #1
   22120:	rrxs	r0, r0
   22124:	rrx	ip, ip
   22128:	add	r4, r4, #1
   2212c:	lsl	r2, r4, #21
   22130:	cmn	r2, #4194304	; 0x400000
   22134:	bcs	22290 <vc_dispmanx_send_command_reply@@Base+0x654>
   22138:	cmp	ip, #-2147483648	; 0x80000000
   2213c:	lsrseq	ip, r0, #1
   22140:	adcs	r0, r0, #0
   22144:	adc	r1, r1, r4, lsl #20
   22148:	orr	r1, r1, r5
   2214c:	pop	{r4, r5, pc}
   22150:	lsls	ip, ip, #1
   22154:	adcs	r0, r0, r0
   22158:	adc	r1, r1, r1
   2215c:	tst	r1, #1048576	; 0x100000
   22160:	sub	r4, r4, #1
   22164:	bne	22138 <vc_dispmanx_send_command_reply@@Base+0x4fc>
   22168:	teq	r1, #0
   2216c:	moveq	r1, r0
   22170:	moveq	r0, #0
   22174:	clz	r3, r1
   22178:	addeq	r3, r3, #32
   2217c:	sub	r3, r3, #11
   22180:	subs	r2, r3, #32
   22184:	bge	221a8 <vc_dispmanx_send_command_reply@@Base+0x56c>
   22188:	adds	r2, r2, #12
   2218c:	ble	221a4 <vc_dispmanx_send_command_reply@@Base+0x568>
   22190:	add	ip, r2, #20
   22194:	rsb	r2, r2, #12
   22198:	lsl	r0, r1, ip
   2219c:	lsr	r1, r1, r2
   221a0:	b	221b8 <vc_dispmanx_send_command_reply@@Base+0x57c>
   221a4:	add	r2, r2, #20
   221a8:	rsble	ip, r2, #32
   221ac:	lsl	r1, r1, r2
   221b0:	orrle	r1, r1, r0, lsr ip
   221b4:	lslle	r0, r0, r2
   221b8:	subs	r4, r4, r3
   221bc:	addge	r1, r1, r4, lsl #20
   221c0:	orrge	r1, r1, r5
   221c4:	popge	{r4, r5, pc}
   221c8:	mvn	r4, r4
   221cc:	subs	r4, r4, #31
   221d0:	bge	2220c <vc_dispmanx_send_command_reply@@Base+0x5d0>
   221d4:	adds	r4, r4, #12
   221d8:	bgt	221f4 <vc_dispmanx_send_command_reply@@Base+0x5b8>
   221dc:	add	r4, r4, #20
   221e0:	rsb	r2, r4, #32
   221e4:	lsr	r0, r0, r4
   221e8:	orr	r0, r0, r1, lsl r2
   221ec:	orr	r1, r5, r1, lsr r4
   221f0:	pop	{r4, r5, pc}
   221f4:	rsb	r4, r4, #12
   221f8:	rsb	r2, r4, #32
   221fc:	lsr	r0, r0, r2
   22200:	orr	r0, r0, r1, lsl r4
   22204:	mov	r1, r5
   22208:	pop	{r4, r5, pc}
   2220c:	lsr	r0, r1, r4
   22210:	mov	r1, r5
   22214:	pop	{r4, r5, pc}
   22218:	teq	r4, #0
   2221c:	eor	r3, r3, #1048576	; 0x100000
   22220:	eoreq	r1, r1, #1048576	; 0x100000
   22224:	addeq	r4, r4, #1
   22228:	subne	r5, r5, #1
   2222c:	b	220b8 <vc_dispmanx_send_command_reply@@Base+0x47c>
   22230:	mvns	ip, r4, asr #21
   22234:	mvnsne	ip, r5, asr #21
   22238:	beq	222a0 <vc_dispmanx_send_command_reply@@Base+0x664>
   2223c:	teq	r4, r5
   22240:	teqeq	r0, r2
   22244:	beq	22258 <vc_dispmanx_send_command_reply@@Base+0x61c>
   22248:	orrs	ip, r4, r0
   2224c:	moveq	r1, r3
   22250:	moveq	r0, r2
   22254:	pop	{r4, r5, pc}
   22258:	teq	r1, r3
   2225c:	movne	r1, #0
   22260:	movne	r0, #0
   22264:	popne	{r4, r5, pc}
   22268:	lsrs	ip, r4, #21
   2226c:	bne	22280 <vc_dispmanx_send_command_reply@@Base+0x644>
   22270:	lsls	r0, r0, #1
   22274:	adcs	r1, r1, r1
   22278:	orrcs	r1, r1, #-2147483648	; 0x80000000
   2227c:	pop	{r4, r5, pc}
   22280:	adds	r4, r4, #4194304	; 0x400000
   22284:	addcc	r1, r1, #1048576	; 0x100000
   22288:	popcc	{r4, r5, pc}
   2228c:	and	r5, r1, #-2147483648	; 0x80000000
   22290:	orr	r1, r5, #2130706432	; 0x7f000000
   22294:	orr	r1, r1, #15728640	; 0xf00000
   22298:	mov	r0, #0
   2229c:	pop	{r4, r5, pc}
   222a0:	mvns	ip, r4, asr #21
   222a4:	movne	r1, r3
   222a8:	movne	r0, r2
   222ac:	mvnseq	ip, r5, asr #21
   222b0:	movne	r3, r1
   222b4:	movne	r2, r0
   222b8:	orrs	r4, r0, r1, lsl #12
   222bc:	orrseq	r5, r2, r3, lsl #12
   222c0:	teqeq	r1, r3
   222c4:	orrne	r1, r1, #524288	; 0x80000
   222c8:	pop	{r4, r5, pc}
   222cc:	teq	r0, #0
   222d0:	moveq	r1, #0
   222d4:	bxeq	lr
   222d8:	push	{r4, r5, lr}
   222dc:	mov	r4, #1024	; 0x400
   222e0:	add	r4, r4, #50	; 0x32
   222e4:	mov	r5, #0
   222e8:	mov	r1, #0
   222ec:	b	22168 <vc_dispmanx_send_command_reply@@Base+0x52c>
   222f0:	teq	r0, #0
   222f4:	moveq	r1, #0
   222f8:	bxeq	lr
   222fc:	push	{r4, r5, lr}
   22300:	mov	r4, #1024	; 0x400
   22304:	add	r4, r4, #50	; 0x32
   22308:	ands	r5, r0, #-2147483648	; 0x80000000
   2230c:	rsbmi	r0, r0, #0
   22310:	mov	r1, #0
   22314:	b	22168 <vc_dispmanx_send_command_reply@@Base+0x52c>
   22318:	lsls	r2, r0, #1
   2231c:	asr	r1, r2, #3
   22320:	rrx	r1, r1
   22324:	lsl	r0, r2, #28
   22328:	andsne	r3, r2, #-16777216	; 0xff000000
   2232c:	teqne	r3, #-16777216	; 0xff000000
   22330:	eorne	r1, r1, #939524096	; 0x38000000
   22334:	bxne	lr
   22338:	bics	r2, r2, #-16777216	; 0xff000000
   2233c:	bxeq	lr
   22340:	teq	r3, #-16777216	; 0xff000000
   22344:	orreq	r1, r1, #524288	; 0x80000
   22348:	bxeq	lr
   2234c:	push	{r4, r5, lr}
   22350:	mov	r4, #896	; 0x380
   22354:	and	r5, r1, #-2147483648	; 0x80000000
   22358:	bic	r1, r1, #-2147483648	; 0x80000000
   2235c:	b	22168 <vc_dispmanx_send_command_reply@@Base+0x52c>
   22360:	orrs	r2, r0, r1
   22364:	bxeq	lr
   22368:	push	{r4, r5, lr}
   2236c:	mov	r5, #0
   22370:	b	22390 <vc_dispmanx_send_command_reply@@Base+0x754>
   22374:	orrs	r2, r0, r1
   22378:	bxeq	lr
   2237c:	push	{r4, r5, lr}
   22380:	ands	r5, r1, #-2147483648	; 0x80000000
   22384:	bpl	22390 <vc_dispmanx_send_command_reply@@Base+0x754>
   22388:	rsbs	r0, r0, #0
   2238c:	rsc	r1, r1, #0
   22390:	mov	r4, #1024	; 0x400
   22394:	add	r4, r4, #50	; 0x32
   22398:	lsrs	ip, r1, #22
   2239c:	beq	2210c <vc_dispmanx_send_command_reply@@Base+0x4d0>
   223a0:	mov	r2, #3
   223a4:	lsrs	ip, ip, #3
   223a8:	addne	r2, r2, #3
   223ac:	lsrs	ip, ip, #3
   223b0:	addne	r2, r2, #3
   223b4:	add	r2, r2, ip, lsr #3
   223b8:	rsb	r3, r2, #32
   223bc:	lsl	ip, r0, r3
   223c0:	lsr	r0, r0, r2
   223c4:	orr	r0, r0, r1, lsl r3
   223c8:	lsr	r1, r1, r2
   223cc:	add	r4, r4, r2
   223d0:	b	2210c <vc_dispmanx_send_command_reply@@Base+0x4d0>
   223d4:	cmp	r3, #0
   223d8:	cmpeq	r2, #0
   223dc:	bne	22400 <vc_dispmanx_send_command_reply@@Base+0x7c4>
   223e0:	cmp	r1, #0
   223e4:	movlt	r1, #-2147483648	; 0x80000000
   223e8:	movlt	r0, #0
   223ec:	blt	223fc <vc_dispmanx_send_command_reply@@Base+0x7c0>
   223f0:	cmpeq	r0, #0
   223f4:	mvnne	r1, #-2147483648	; 0x80000000
   223f8:	mvnne	r0, #0
   223fc:	b	224a8 <vc_dispmanx_send_command_reply@@Base+0x86c>
   22400:	sub	sp, sp, #8
   22404:	push	{sp, lr}
   22408:	cmp	r1, #0
   2240c:	blt	2242c <vc_dispmanx_send_command_reply@@Base+0x7f0>
   22410:	cmp	r3, #0
   22414:	blt	22460 <vc_dispmanx_send_command_reply@@Base+0x824>
   22418:	bl	22528 <vc_dispmanx_send_command_reply@@Base+0x8ec>
   2241c:	ldr	lr, [sp, #4]
   22420:	add	sp, sp, #8
   22424:	pop	{r2, r3}
   22428:	bx	lr
   2242c:	rsbs	r0, r0, #0
   22430:	sbc	r1, r1, r1, lsl #1
   22434:	cmp	r3, #0
   22438:	blt	22484 <vc_dispmanx_send_command_reply@@Base+0x848>
   2243c:	bl	22528 <vc_dispmanx_send_command_reply@@Base+0x8ec>
   22440:	ldr	lr, [sp, #4]
   22444:	add	sp, sp, #8
   22448:	pop	{r2, r3}
   2244c:	rsbs	r0, r0, #0
   22450:	sbc	r1, r1, r1, lsl #1
   22454:	rsbs	r2, r2, #0
   22458:	sbc	r3, r3, r3, lsl #1
   2245c:	bx	lr
   22460:	rsbs	r2, r2, #0
   22464:	sbc	r3, r3, r3, lsl #1
   22468:	bl	22528 <vc_dispmanx_send_command_reply@@Base+0x8ec>
   2246c:	ldr	lr, [sp, #4]
   22470:	add	sp, sp, #8
   22474:	pop	{r2, r3}
   22478:	rsbs	r0, r0, #0
   2247c:	sbc	r1, r1, r1, lsl #1
   22480:	bx	lr
   22484:	rsbs	r2, r2, #0
   22488:	sbc	r3, r3, r3, lsl #1
   2248c:	bl	22528 <vc_dispmanx_send_command_reply@@Base+0x8ec>
   22490:	ldr	lr, [sp, #4]
   22494:	add	sp, sp, #8
   22498:	pop	{r2, r3}
   2249c:	rsbs	r2, r2, #0
   224a0:	sbc	r3, r3, r3, lsl #1
   224a4:	bx	lr
   224a8:	push	{r1, lr}
   224ac:	mov	r0, #8
   224b0:	bl	60d4 <raise@plt>
   224b4:	pop	{r1, pc}
   224b8:	vmov	d7, r0, r1
   224bc:	vcmpe.f64	d7, #0.0
   224c0:	vmrs	APSR_nzcv, fpscr
   224c4:	bmi	224cc <vc_dispmanx_send_command_reply@@Base+0x890>
   224c8:	b	224e8 <vc_dispmanx_send_command_reply@@Base+0x8ac>
   224cc:	push	{r4, lr}
   224d0:	eor	r1, r1, #-2147483648	; 0x80000000
   224d4:	bl	224e8 <vc_dispmanx_send_command_reply@@Base+0x8ac>
   224d8:	rsbs	r0, r0, #0
   224dc:	rsc	r1, r1, #0
   224e0:	pop	{r4, pc}
   224e4:	andeq	r0, r0, r0
   224e8:	vmov	d6, r0, r1
   224ec:	vldr	d7, [pc, #36]	; 22518 <vc_dispmanx_send_command_reply@@Base+0x8dc>
   224f0:	vldr	d5, [pc, #40]	; 22520 <vc_dispmanx_send_command_reply@@Base+0x8e4>
   224f4:	vmul.f64	d7, d6, d7
   224f8:	vcvt.u32.f64	s14, d7
   224fc:	vcvt.f64.u32	d4, s14
   22500:	vmov	r1, s14
   22504:	vmls.f64	d6, d4, d5
   22508:	vcvt.u32.f64	s15, d6
   2250c:	vmov	r0, s15
   22510:	bx	lr
   22514:	nop			; (mov r0, r0)
   22518:	andeq	r0, r0, r0
   2251c:	ldclcc	0, cr0, [r0]
   22520:	andeq	r0, r0, r0
   22524:	mvnsmi	r0, r0
   22528:	cmp	r1, r3
   2252c:	cmpeq	r0, r2
   22530:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22534:	mov	r4, r0
   22538:	movcc	r0, #0
   2253c:	mov	r5, r1
   22540:	ldr	lr, [sp, #36]	; 0x24
   22544:	movcc	r1, r0
   22548:	bcc	22644 <vc_dispmanx_send_command_reply@@Base+0xa08>
   2254c:	cmp	r3, #0
   22550:	clzeq	ip, r2
   22554:	clzne	ip, r3
   22558:	addeq	ip, ip, #32
   2255c:	cmp	r5, #0
   22560:	clzeq	r1, r4
   22564:	addeq	r1, r1, #32
   22568:	clzne	r1, r5
   2256c:	sub	ip, ip, r1
   22570:	sub	sl, ip, #32
   22574:	lsl	r9, r3, ip
   22578:	rsb	fp, ip, #32
   2257c:	orr	r9, r9, r2, lsl sl
   22580:	orr	r9, r9, r2, lsr fp
   22584:	lsl	r8, r2, ip
   22588:	cmp	r5, r9
   2258c:	cmpeq	r4, r8
   22590:	movcc	r0, #0
   22594:	movcc	r1, r0
   22598:	bcc	225b4 <vc_dispmanx_send_command_reply@@Base+0x978>
   2259c:	mov	r0, #1
   225a0:	subs	r4, r4, r8
   225a4:	lsl	r1, r0, sl
   225a8:	orr	r1, r1, r0, lsr fp
   225ac:	lsl	r0, r0, ip
   225b0:	sbc	r5, r5, r9
   225b4:	cmp	ip, #0
   225b8:	beq	22644 <vc_dispmanx_send_command_reply@@Base+0xa08>
   225bc:	lsr	r6, r8, #1
   225c0:	orr	r6, r6, r9, lsl #31
   225c4:	lsr	r7, r9, #1
   225c8:	mov	r2, ip
   225cc:	b	225f0 <vc_dispmanx_send_command_reply@@Base+0x9b4>
   225d0:	subs	r3, r4, r6
   225d4:	sbc	r8, r5, r7
   225d8:	adds	r3, r3, r3
   225dc:	adc	r8, r8, r8
   225e0:	adds	r4, r3, #1
   225e4:	adc	r5, r8, #0
   225e8:	subs	r2, r2, #1
   225ec:	beq	2260c <vc_dispmanx_send_command_reply@@Base+0x9d0>
   225f0:	cmp	r5, r7
   225f4:	cmpeq	r4, r6
   225f8:	bcs	225d0 <vc_dispmanx_send_command_reply@@Base+0x994>
   225fc:	adds	r4, r4, r4
   22600:	adc	r5, r5, r5
   22604:	subs	r2, r2, #1
   22608:	bne	225f0 <vc_dispmanx_send_command_reply@@Base+0x9b4>
   2260c:	lsr	r3, r4, ip
   22610:	orr	r3, r3, r5, lsl fp
   22614:	lsr	r2, r5, ip
   22618:	orr	r3, r3, r5, lsr sl
   2261c:	adds	r0, r0, r4
   22620:	mov	r4, r3
   22624:	lsl	r3, r2, ip
   22628:	orr	r3, r3, r4, lsl sl
   2262c:	lsl	ip, r4, ip
   22630:	orr	r3, r3, r4, lsr fp
   22634:	adc	r1, r1, r5
   22638:	subs	r0, r0, ip
   2263c:	mov	r5, r2
   22640:	sbc	r1, r1, r3
   22644:	cmp	lr, #0
   22648:	strdne	r4, [lr]
   2264c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22650:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22654:	mov	r7, r0
   22658:	ldr	r6, [pc, #72]	; 226a8 <vc_dispmanx_send_command_reply@@Base+0xa6c>
   2265c:	ldr	r5, [pc, #72]	; 226ac <vc_dispmanx_send_command_reply@@Base+0xa70>
   22660:	add	r6, pc, r6
   22664:	add	r5, pc, r5
   22668:	sub	r6, r6, r5
   2266c:	mov	r8, r1
   22670:	mov	r9, r2
   22674:	bl	5c94 <fputs@plt-0x20>
   22678:	asrs	r6, r6, #2
   2267c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   22680:	mov	r4, #0
   22684:	add	r4, r4, #1
   22688:	ldr	r3, [r5], #4
   2268c:	mov	r2, r9
   22690:	mov	r1, r8
   22694:	mov	r0, r7
   22698:	blx	r3
   2269c:	cmp	r6, r4
   226a0:	bne	22684 <vc_dispmanx_send_command_reply@@Base+0xa48>
   226a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   226a8:	andeq	r5, r1, r4, asr ip
   226ac:	andeq	r5, r1, ip, asr #24
   226b0:	bx	lr

Disassembly of section .fini:

000226b4 <.fini>:
   226b4:	push	{r3, lr}
   226b8:	pop	{r3, pc}
