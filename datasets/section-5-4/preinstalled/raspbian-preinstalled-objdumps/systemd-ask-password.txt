
raspbian-preinstalled/systemd-ask-password:     file format elf32-littlearm


Disassembly of section .init:

00000914 <.init>:
 914:	push	{r3, lr}
 918:	bl	1100 <log_oom_internal@plt+0x694>
 91c:	pop	{r3, pc}

Disassembly of section .plt:

00000920 <version@plt-0x14>:
 920:	push	{lr}		; (str lr, [sp, #-4]!)
 924:	ldr	lr, [pc, #4]	; 930 <version@plt-0x4>
 928:	add	lr, pc, lr
 92c:	ldr	pc, [lr, #8]!
 930:	andeq	r1, r1, r4, lsr #12

00000934 <version@plt>:
 934:	add	ip, pc, #0, 12
 938:	add	ip, ip, #69632	; 0x11000
 93c:	ldr	pc, [ip, #1572]!	; 0x624

00000940 <free@plt>:
 940:	add	ip, pc, #0, 12
 944:	add	ip, ip, #69632	; 0x11000
 948:	ldr	pc, [ip, #1564]!	; 0x61c

0000094c <log_open@plt>:
 94c:	add	ip, pc, #0, 12
 950:	add	ip, ip, #69632	; 0x11000
 954:	ldr	pc, [ip, #1556]!	; 0x614

00000958 <log_assert_failed_unreachable_realm@plt>:
 958:	add	ip, pc, #0, 12
 95c:	add	ip, ip, #69632	; 0x11000
 960:	ldr	pc, [ip, #1548]!	; 0x60c

00000964 <ask_password_agent_close@plt>:
 964:	add	ip, pc, #0, 12
 968:	add	ip, ip, #69632	; 0x11000
 96c:	ldr	pc, [ip, #1540]!	; 0x604

00000970 <polkit_agent_close@plt>:
 970:	add	ip, pc, #0, 12
 974:	add	ip, ip, #69632	; 0x11000
 978:	ldr	pc, [ip, #1532]!	; 0x5fc

0000097c <mac_selinux_finish@plt>:
 97c:	add	ip, pc, #0, 12
 980:	add	ip, ip, #69632	; 0x11000
 984:	ldr	pc, [ip, #1524]!	; 0x5f4

00000988 <puts@plt>:
 988:	add	ip, pc, #0, 12
 98c:	add	ip, ip, #69632	; 0x11000
 990:	ldr	pc, [ip, #1516]!	; 0x5ec

00000994 <strv_free_erase@plt>:
 994:	add	ip, pc, #0, 12
 998:	add	ip, ip, #69632	; 0x11000
 99c:	ldr	pc, [ip, #1508]!	; 0x5e4

000009a0 <log_get_max_level_realm@plt>:
 9a0:	add	ip, pc, #0, 12
 9a4:	add	ip, ip, #69632	; 0x11000
 9a8:	ldr	pc, [ip, #1500]!	; 0x5dc

000009ac <abort@plt>:
 9ac:	add	ip, pc, #0, 12
 9b0:	add	ip, ip, #69632	; 0x11000
 9b4:	ldr	pc, [ip, #1492]!	; 0x5d4

000009b8 <__stack_chk_fail@plt>:
 9b8:	add	ip, pc, #0, 12
 9bc:	add	ip, ip, #69632	; 0x11000
 9c0:	ldr	pc, [ip, #1484]!	; 0x5cc

000009c4 <terminal_urlify_man@plt>:
 9c4:	add	ip, pc, #0, 12
 9c8:	add	ip, ip, #69632	; 0x11000
 9cc:	ldr	pc, [ip, #1476]!	; 0x5c4

000009d0 <parse_sec@plt>:
 9d0:	add	ip, pc, #0, 12
 9d4:	add	ip, ip, #69632	; 0x11000
 9d8:	ldr	pc, [ip, #1468]!	; 0x5bc

000009dc <getopt_long@plt>:
 9dc:	add	ip, pc, #0, 12
 9e0:	add	ip, ip, #69632	; 0x11000
 9e4:	ldr	pc, [ip, #1460]!	; 0x5b4

000009e8 <pager_close@plt>:
 9e8:	add	ip, pc, #0, 12
 9ec:	add	ip, ip, #69632	; 0x11000
 9f0:	ldr	pc, [ip, #1452]!	; 0x5ac

000009f4 <ask_password_auto@plt>:
 9f4:	add	ip, pc, #0, 12
 9f8:	add	ip, ip, #69632	; 0x11000
 9fc:	ldr	pc, [ip, #1444]!	; 0x5a4

00000a00 <now@plt>:
 a00:	add	ip, pc, #0, 12
 a04:	add	ip, ip, #69632	; 0x11000
 a08:	ldr	pc, [ip, #1436]!	; 0x59c

00000a0c <log_parse_environment_realm@plt>:
 a0c:	add	ip, pc, #0, 12
 a10:	add	ip, ip, #69632	; 0x11000
 a14:	ldr	pc, [ip, #1428]!	; 0x594

00000a18 <log_assert_failed_realm@plt>:
 a18:	add	ip, pc, #0, 12
 a1c:	add	ip, ip, #69632	; 0x11000
 a20:	ldr	pc, [ip, #1420]!	; 0x58c

00000a24 <log_internal_realm@plt>:
 a24:	add	ip, pc, #0, 12
 a28:	add	ip, ip, #69632	; 0x11000
 a2c:	ldr	pc, [ip, #1412]!	; 0x584

00000a30 <__libc_start_main@plt>:
 a30:	add	ip, pc, #0, 12
 a34:	add	ip, ip, #69632	; 0x11000
 a38:	ldr	pc, [ip, #1404]!	; 0x57c

00000a3c <__gmon_start__@plt>:
 a3c:	add	ip, pc, #0, 12
 a40:	add	ip, ip, #69632	; 0x11000
 a44:	ldr	pc, [ip, #1396]!	; 0x574

00000a48 <__cxa_finalize@plt>:
 a48:	add	ip, pc, #0, 12
 a4c:	add	ip, ip, #69632	; 0x11000
 a50:	ldr	pc, [ip, #1388]!	; 0x56c

00000a54 <strv_join_prefix@plt>:
 a54:	add	ip, pc, #0, 12
 a58:	add	ip, ip, #69632	; 0x11000
 a5c:	ldr	pc, [ip, #1380]!	; 0x564

00000a60 <__printf_chk@plt>:
 a60:	add	ip, pc, #0, 12
 a64:	add	ip, ip, #69632	; 0x11000
 a68:	ldr	pc, [ip, #1372]!	; 0x55c

00000a6c <log_oom_internal@plt>:
 a6c:	add	ip, pc, #0, 12
 a70:	add	ip, ip, #69632	; 0x11000
 a74:	ldr	pc, [ip, #1364]!	; 0x554

Disassembly of section .text:

00000a78 <.text>:
     a78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     a7c:	mov	r4, #0
     a80:	ldr	r5, [pc, #1372]	; fe4 <log_oom_internal@plt+0x578>
     a84:	ldr	r3, [pc, #1372]	; fe8 <log_oom_internal@plt+0x57c>
     a88:	add	r5, pc, r5
     a8c:	sub	sp, sp, #44	; 0x2c
     a90:	ldr	fp, [r5, r3]
     a94:	mov	r6, r0
     a98:	mov	r0, r4
     a9c:	ldr	r3, [fp]
     aa0:	mov	r7, r1
     aa4:	str	r3, [sp, #36]	; 0x24
     aa8:	str	r4, [sp, #28]
     aac:	bl	a0c <log_parse_environment_realm@plt>
     ab0:	bl	94c <log_open@plt>
     ab4:	cmp	r6, r4
     ab8:	blt	ef0 <log_oom_internal@plt+0x484>
     abc:	cmp	r7, #0
     ac0:	beq	f20 <log_oom_internal@plt+0x4b4>
     ac4:	ldr	r9, [pc, #1312]	; fec <log_oom_internal@plt+0x580>
     ac8:	ldr	r8, [pc, #1312]	; ff0 <log_oom_internal@plt+0x584>
     acc:	ldr	sl, [pc, #1312]	; ff4 <log_oom_internal@plt+0x588>
     ad0:	add	r9, pc, r9
     ad4:	add	r8, pc, r8
     ad8:	mov	r4, #0
     adc:	str	r4, [sp]
     ae0:	mov	r3, r9
     ae4:	mov	r2, r8
     ae8:	mov	r1, r7
     aec:	mov	r0, r6
     af0:	bl	9dc <getopt_long@plt>
     af4:	cmp	r0, #0
     af8:	blt	f48 <log_oom_internal@plt+0x4dc>
     afc:	cmp	r0, sl
     b00:	beq	d6c <log_oom_internal@plt+0x300>
     b04:	ble	c70 <log_oom_internal@plt+0x204>
     b08:	ldr	r3, [pc, #1256]	; ff8 <log_oom_internal@plt+0x58c>
     b0c:	cmp	r0, r3
     b10:	beq	d50 <log_oom_internal@plt+0x2e4>
     b14:	ble	d20 <log_oom_internal@plt+0x2b4>
     b18:	cmp	r0, #264	; 0x108
     b1c:	beq	d0c <log_oom_internal@plt+0x2a0>
     b20:	blt	e00 <log_oom_internal@plt+0x394>
     b24:	ldr	r3, [pc, #1232]	; ffc <log_oom_internal@plt+0x590>
     b28:	cmp	r0, r3
     b2c:	bne	fb8 <log_oom_internal@plt+0x54c>
     b30:	bl	934 <version@plt>
     b34:	mov	r4, r0
     b38:	cmp	r4, #0
     b3c:	ble	bf4 <log_oom_internal@plt+0x188>
     b40:	ldr	r4, [pc, #1208]	; 1000 <log_oom_internal@plt+0x594>
     b44:	add	r4, pc, r4
     b48:	ldrd	r8, [r4]
     b4c:	orrs	r3, r8, r9
     b50:	bne	ed8 <log_oom_internal@plt+0x46c>
     b54:	ldr	r3, [pc, #1192]	; 1004 <log_oom_internal@plt+0x598>
     b58:	ldr	r7, [pc, #1192]	; 1008 <log_oom_internal@plt+0x59c>
     b5c:	add	r3, pc, r3
     b60:	add	r7, pc, r7
     b64:	ldr	r3, [r3, #8]
     b68:	add	ip, sp, #28
     b6c:	strd	r8, [sp]
     b70:	str	r3, [sp, #8]
     b74:	ldrd	r2, [r7, #8]
     b78:	ldr	r1, [r7]
     b7c:	ldr	r0, [r7, #20]
     b80:	str	ip, [sp, #12]
     b84:	bl	9f4 <ask_password_auto@plt>
     b88:	subs	r4, r0, #0
     b8c:	blt	e80 <log_oom_internal@plt+0x414>
     b90:	ldr	r6, [sp, #28]
     b94:	cmp	r6, #0
     b98:	beq	fa8 <log_oom_internal@plt+0x53c>
     b9c:	ldr	r0, [r6]
     ba0:	cmp	r0, #0
     ba4:	beq	fb0 <log_oom_internal@plt+0x544>
     ba8:	add	r6, r6, #4
     bac:	mov	r4, r7
     bb0:	b	bd4 <log_oom_internal@plt+0x168>
     bb4:	ldrb	r0, [r4, #4]
     bb8:	cmp	r0, #0
     bbc:	beq	bf0 <log_oom_internal@plt+0x184>
     bc0:	cmp	r6, #0
     bc4:	beq	f18 <log_oom_internal@plt+0x4ac>
     bc8:	ldr	r0, [r6], #4
     bcc:	cmp	r0, #0
     bd0:	beq	bf0 <log_oom_internal@plt+0x184>
     bd4:	ldrb	r3, [r7, #16]
     bd8:	cmp	r3, #0
     bdc:	bne	bb4 <log_oom_internal@plt+0x148>
     be0:	bl	988 <puts@plt>
     be4:	ldrb	r0, [r4, #4]
     be8:	cmp	r0, #0
     bec:	bne	bc0 <log_oom_internal@plt+0x154>
     bf0:	mov	r4, r0
     bf4:	ldr	r6, [sp, #28]
     bf8:	cmp	r6, #0
     bfc:	beq	c08 <log_oom_internal@plt+0x19c>
     c00:	mov	r0, r6
     c04:	bl	994 <strv_free_erase@plt>
     c08:	ldr	r3, [pc, #1020]	; 100c <log_oom_internal@plt+0x5a0>
     c0c:	ldr	r6, [r5, r3]
     c10:	cmp	r6, #0
     c14:	beq	c44 <log_oom_internal@plt+0x1d8>
     c18:	ldr	r3, [pc, #1008]	; 1010 <log_oom_internal@plt+0x5a4>
     c1c:	add	r6, r6, #3
     c20:	bic	r6, r6, #3
     c24:	ldr	r5, [r5, r3]
     c28:	cmp	r6, r5
     c2c:	bcs	c44 <log_oom_internal@plt+0x1d8>
     c30:	ldm	r6, {r0, r3}
     c34:	add	r6, r6, #8
     c38:	blx	r3
     c3c:	cmp	r6, r5
     c40:	bcc	c30 <log_oom_internal@plt+0x1c4>
     c44:	bl	964 <ask_password_agent_close@plt>
     c48:	bl	970 <polkit_agent_close@plt>
     c4c:	bl	97c <mac_selinux_finish@plt>
     c50:	bl	9e8 <pager_close@plt>
     c54:	ldr	r2, [sp, #36]	; 0x24
     c58:	ldr	r3, [fp]
     c5c:	lsr	r0, r4, #31
     c60:	cmp	r2, r3
     c64:	bne	fe0 <log_oom_internal@plt+0x574>
     c68:	add	sp, sp, #44	; 0x2c
     c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     c70:	cmp	r0, #256	; 0x100
     c74:	beq	e1c <log_oom_internal@plt+0x3b0>
     c78:	ble	cac <log_oom_internal@plt+0x240>
     c7c:	ldr	r3, [pc, #912]	; 1014 <log_oom_internal@plt+0x5a8>
     c80:	cmp	r0, r3
     c84:	beq	d84 <log_oom_internal@plt+0x318>
     c88:	add	r3, r3, #1
     c8c:	cmp	r0, r3
     c90:	bne	fb8 <log_oom_internal@plt+0x54c>
     c94:	ldr	r2, [pc, #892]	; 1018 <log_oom_internal@plt+0x5ac>
     c98:	add	r2, pc, r2
     c9c:	ldr	r3, [r2, #8]
     ca0:	orr	r3, r3, #4
     ca4:	str	r3, [r2, #8]
     ca8:	b	ad8 <log_oom_internal@plt+0x6c>
     cac:	cmp	r0, #63	; 0x3f
     cb0:	beq	d48 <log_oom_internal@plt+0x2dc>
     cb4:	cmp	r0, #104	; 0x68
     cb8:	bne	fb8 <log_oom_internal@plt+0x54c>
     cbc:	add	r2, sp, #40	; 0x28
     cc0:	ldr	r1, [pc, #852]	; 101c <log_oom_internal@plt+0x5b0>
     cc4:	ldr	r0, [pc, #852]	; 1020 <log_oom_internal@plt+0x5b4>
     cc8:	add	r1, pc, r1
     ccc:	str	r4, [r2, #-8]!
     cd0:	add	r0, pc, r0
     cd4:	bl	9c4 <terminal_urlify_man@plt>
     cd8:	cmp	r0, #0
     cdc:	blt	e50 <log_oom_internal@plt+0x3e4>
     ce0:	ldr	r2, [pc, #828]	; 1024 <log_oom_internal@plt+0x5b8>
     ce4:	ldr	r1, [pc, #828]	; 1028 <log_oom_internal@plt+0x5bc>
     ce8:	ldr	r3, [sp, #32]
     cec:	ldr	r2, [r5, r2]
     cf0:	add	r1, pc, r1
     cf4:	mov	r0, #1
     cf8:	ldr	r2, [r2]
     cfc:	bl	a60 <__printf_chk@plt>
     d00:	ldr	r0, [sp, #32]
     d04:	bl	940 <free@plt>
     d08:	b	bf4 <log_oom_internal@plt+0x188>
     d0c:	ldr	r3, [pc, #792]	; 102c <log_oom_internal@plt+0x5c0>
     d10:	mov	r2, #1
     d14:	add	r3, pc, r3
     d18:	strb	r2, [r3, #16]
     d1c:	b	ad8 <log_oom_internal@plt+0x6c>
     d20:	cmp	r0, #260	; 0x104
     d24:	beq	e38 <log_oom_internal@plt+0x3cc>
     d28:	sub	r3, r3, #1
     d2c:	cmp	r0, r3
     d30:	bne	fb8 <log_oom_internal@plt+0x54c>
     d34:	ldr	r3, [pc, #756]	; 1030 <log_oom_internal@plt+0x5c4>
     d38:	mov	r2, #1
     d3c:	add	r3, pc, r3
     d40:	strb	r2, [r3, #4]
     d44:	b	ad8 <log_oom_internal@plt+0x6c>
     d48:	mvn	r4, #21
     d4c:	b	bf4 <log_oom_internal@plt+0x188>
     d50:	ldr	r3, [pc, #732]	; 1034 <log_oom_internal@plt+0x5c8>
     d54:	ldr	r2, [pc, #732]	; 1038 <log_oom_internal@plt+0x5cc>
     d58:	ldr	r3, [r5, r3]
     d5c:	add	r2, pc, r2
     d60:	ldr	r3, [r3]
     d64:	str	r3, [r2, #8]
     d68:	b	ad8 <log_oom_internal@plt+0x6c>
     d6c:	ldr	r2, [pc, #712]	; 103c <log_oom_internal@plt+0x5d0>
     d70:	add	r2, pc, r2
     d74:	ldr	r3, [r2, #8]
     d78:	orr	r3, r3, #16
     d7c:	str	r3, [r2, #8]
     d80:	b	ad8 <log_oom_internal@plt+0x6c>
     d84:	ldr	r3, [pc, #680]	; 1034 <log_oom_internal@plt+0x5c8>
     d88:	ldr	r1, [pc, #688]	; 1040 <log_oom_internal@plt+0x5d4>
     d8c:	ldr	r3, [r5, r3]
     d90:	add	r1, pc, r1
     d94:	str	r3, [sp, #20]
     d98:	ldr	r0, [r3]
     d9c:	bl	9d0 <parse_sec@plt>
     da0:	cmp	r0, #0
     da4:	bge	ad8 <log_oom_internal@plt+0x6c>
     da8:	mov	r0, r4
     dac:	bl	9a0 <log_get_max_level_realm@plt>
     db0:	cmp	r0, #2
     db4:	ble	d48 <log_oom_internal@plt+0x2dc>
     db8:	ldr	r2, [sp, #20]
     dbc:	ldr	r3, [pc, #640]	; 1044 <log_oom_internal@plt+0x5d8>
     dc0:	mov	r0, #3
     dc4:	ldr	r1, [r2]
     dc8:	ldr	r2, [pc, #632]	; 1048 <log_oom_internal@plt+0x5dc>
     dcc:	add	r3, pc, r3
     dd0:	add	r2, pc, r2
     dd4:	str	r2, [sp, #4]
     dd8:	ldr	r2, [pc, #620]	; 104c <log_oom_internal@plt+0x5e0>
     ddc:	add	r3, r3, #20
     de0:	str	r1, [sp, #8]
     de4:	str	r3, [sp]
     de8:	add	r2, pc, r2
     dec:	mov	r3, #108	; 0x6c
     df0:	mov	r1, #1073741846	; 0x40000016
     df4:	bl	a24 <log_internal_realm@plt>
     df8:	mov	r4, r0
     dfc:	b	b38 <log_oom_internal@plt+0xcc>
     e00:	ldr	r3, [pc, #556]	; 1034 <log_oom_internal@plt+0x5c8>
     e04:	ldr	r2, [pc, #580]	; 1050 <log_oom_internal@plt+0x5e4>
     e08:	ldr	r3, [r5, r3]
     e0c:	add	r2, pc, r2
     e10:	ldr	r3, [r3]
     e14:	str	r3, [r2, #12]
     e18:	b	ad8 <log_oom_internal@plt+0x6c>
     e1c:	ldr	r3, [pc, #528]	; 1034 <log_oom_internal@plt+0x5c8>
     e20:	ldr	r2, [pc, #556]	; 1054 <log_oom_internal@plt+0x5e8>
     e24:	ldr	r3, [r5, r3]
     e28:	add	r2, pc, r2
     e2c:	ldr	r3, [r3]
     e30:	str	r3, [r2]
     e34:	b	ad8 <log_oom_internal@plt+0x6c>
     e38:	ldr	r2, [pc, #536]	; 1058 <log_oom_internal@plt+0x5ec>
     e3c:	add	r2, pc, r2
     e40:	ldr	r3, [r2, #8]
     e44:	orr	r3, r3, #1
     e48:	str	r3, [r2, #8]
     e4c:	b	ad8 <log_oom_internal@plt+0x6c>
     e50:	ldr	r3, [pc, #516]	; 105c <log_oom_internal@plt+0x5f0>
     e54:	ldr	r1, [pc, #516]	; 1060 <log_oom_internal@plt+0x5f4>
     e58:	add	r3, pc, r3
     e5c:	mov	r0, r4
     e60:	add	r3, r3, #12
     e64:	mov	r2, #33	; 0x21
     e68:	add	r1, pc, r1
     e6c:	bl	a6c <log_oom_internal@plt>
     e70:	mov	r4, r0
     e74:	ldr	r0, [sp, #32]
     e78:	bl	940 <free@plt>
     e7c:	b	b38 <log_oom_internal@plt+0xcc>
     e80:	mov	r0, #0
     e84:	bl	9a0 <log_get_max_level_realm@plt>
     e88:	cmp	r0, #2
     e8c:	rsble	r4, r4, #0
     e90:	uxtble	r0, r4
     e94:	rsble	r4, r0, #0
     e98:	ble	bf4 <log_oom_internal@plt+0x188>
     e9c:	ldr	r2, [pc, #448]	; 1064 <log_oom_internal@plt+0x5f8>
     ea0:	ldr	r3, [pc, #448]	; 1068 <log_oom_internal@plt+0x5fc>
     ea4:	add	r2, pc, r2
     ea8:	str	r2, [sp, #4]
     eac:	add	r3, pc, r3
     eb0:	ldr	r2, [pc, #436]	; 106c <log_oom_internal@plt+0x600>
     eb4:	add	r3, r3, #32
     eb8:	mov	r1, r4
     ebc:	str	r3, [sp]
     ec0:	add	r2, pc, r2
     ec4:	mov	r3, #175	; 0xaf
     ec8:	mov	r0, #3
     ecc:	bl	a24 <log_internal_realm@plt>
     ed0:	mov	r4, r0
     ed4:	b	bf4 <log_oom_internal@plt+0x188>
     ed8:	mov	r0, #1
     edc:	bl	a00 <now@plt>
     ee0:	ldrd	r2, [r4]
     ee4:	adds	r8, r0, r2
     ee8:	adc	r9, r1, r3
     eec:	b	b54 <log_oom_internal@plt+0xe8>
     ef0:	ldr	r3, [pc, #376]	; 1070 <log_oom_internal@plt+0x604>
     ef4:	ldr	r2, [pc, #376]	; 1074 <log_oom_internal@plt+0x608>
     ef8:	ldr	r1, [pc, #376]	; 1078 <log_oom_internal@plt+0x60c>
     efc:	add	r3, pc, r3
     f00:	str	r3, [sp]
     f04:	mov	r0, r4
     f08:	mov	r3, #87	; 0x57
     f0c:	add	r2, pc, r2
     f10:	add	r1, pc, r1
     f14:	bl	a18 <log_assert_failed_realm@plt>
     f18:	mov	r4, r6
     f1c:	b	bf4 <log_oom_internal@plt+0x188>
     f20:	ldr	r3, [pc, #340]	; 107c <log_oom_internal@plt+0x610>
     f24:	ldr	r2, [pc, #340]	; 1080 <log_oom_internal@plt+0x614>
     f28:	ldr	r1, [pc, #340]	; 1084 <log_oom_internal@plt+0x618>
     f2c:	add	r3, pc, r3
     f30:	str	r3, [sp]
     f34:	mov	r0, r7
     f38:	mov	r3, #88	; 0x58
     f3c:	add	r2, pc, r2
     f40:	add	r1, pc, r1
     f44:	bl	a18 <log_assert_failed_realm@plt>
     f48:	ldr	r3, [pc, #312]	; 1088 <log_oom_internal@plt+0x61c>
     f4c:	ldr	r3, [r5, r3]
     f50:	ldr	r0, [r3]
     f54:	cmp	r6, r0
     f58:	ble	b40 <log_oom_internal@plt+0xd4>
     f5c:	ldr	r1, [pc, #296]	; 108c <log_oom_internal@plt+0x620>
     f60:	mov	r2, r4
     f64:	add	r0, r7, r0, lsl #2
     f68:	add	r1, pc, r1
     f6c:	bl	a54 <strv_join_prefix@plt>
     f70:	ldr	r3, [pc, #280]	; 1090 <log_oom_internal@plt+0x624>
     f74:	add	r3, pc, r3
     f78:	cmp	r0, #0
     f7c:	str	r0, [r3, #20]
     f80:	bne	b40 <log_oom_internal@plt+0xd4>
     f84:	ldr	r3, [pc, #264]	; 1094 <log_oom_internal@plt+0x628>
     f88:	ldr	r1, [pc, #264]	; 1098 <log_oom_internal@plt+0x62c>
     f8c:	add	r3, pc, r3
     f90:	mov	r2, #149	; 0x95
     f94:	add	r3, r3, #20
     f98:	add	r1, pc, r1
     f9c:	bl	a6c <log_oom_internal@plt>
     fa0:	mov	r4, r0
     fa4:	b	b38 <log_oom_internal@plt+0xcc>
     fa8:	mov	r4, r6
     fac:	b	c08 <log_oom_internal@plt+0x19c>
     fb0:	mov	r4, r0
     fb4:	b	c00 <log_oom_internal@plt+0x194>
     fb8:	ldr	r2, [pc, #220]	; 109c <log_oom_internal@plt+0x630>
     fbc:	ldr	r1, [pc, #220]	; 10a0 <log_oom_internal@plt+0x634>
     fc0:	add	r2, pc, r2
     fc4:	str	r2, [sp]
     fc8:	ldr	r2, [pc, #212]	; 10a4 <log_oom_internal@plt+0x638>
     fcc:	mov	r3, #143	; 0x8f
     fd0:	add	r2, pc, r2
     fd4:	add	r1, pc, r1
     fd8:	mov	r0, #0
     fdc:	bl	958 <log_assert_failed_unreachable_realm@plt>
     fe0:	bl	9b8 <__stack_chk_fail@plt>
     fe4:	andeq	r1, r1, r4, asr #9
     fe8:	andeq	r0, r0, r8, ror r0
     fec:	andeq	r1, r1, ip, lsr #5
     ff0:	andeq	r0, r0, ip, lsl #22
     ff4:	andeq	r0, r0, r3, lsl #2
     ff8:	andeq	r0, r0, r6, lsl #2
     ffc:	andeq	r0, r0, r9, lsl #2
    1000:			; <UNDEFINED> instruction: 0x000114bc
    1004:	andeq	r1, r1, r4, lsr #9
    1008:			; <UNDEFINED> instruction: 0x000114b8
    100c:	andeq	r0, r0, r8, lsl #1
    1010:	andeq	r0, r0, ip, lsl #1
    1014:	andeq	r0, r0, r1, lsl #2
    1018:	andeq	r1, r1, r8, ror #6
    101c:	andeq	r0, r0, r4, lsr #12
    1020:	andeq	r0, r0, r0, lsr #12
    1024:	muleq	r0, ip, r0
    1028:	andeq	r0, r0, r8, lsl r6
    102c:	andeq	r1, r1, r4, lsl #6
    1030:	ldrdeq	r1, [r1], -ip
    1034:	andeq	r0, r0, r4, lsl #1
    1038:			; <UNDEFINED> instruction: 0x000112bc
    103c:	muleq	r1, r0, r2
    1040:	andeq	r1, r1, r0, ror r2
    1044:	andeq	r0, r0, r4, asr #9
    1048:	ldrdeq	r0, [r0], -r4
    104c:	andeq	r0, r0, ip, asr #9
    1050:	andeq	r1, r1, ip, lsl #4
    1054:	strdeq	r1, [r1], -r0
    1058:	andeq	r1, r1, r4, asr #3
    105c:	andeq	r0, r0, r8, lsr r4
    1060:	andeq	r0, r0, ip, asr #8
    1064:	andeq	r0, r0, r4, asr #14
    1068:	andeq	r0, r0, r4, ror #7
    106c:	strdeq	r0, [r0], -r4
    1070:	muleq	r0, r4, r3
    1074:	andeq	r0, r0, r8, lsr #7
    1078:	andeq	r0, r0, r8, asr #7
    107c:	andeq	r0, r0, r4, ror #6
    1080:	andeq	r0, r0, r8, ror r3
    1084:	andeq	r0, r0, r4, lsr #7
    1088:	andeq	r0, r0, ip, ror r0
    108c:	andeq	r0, r0, ip, ror r6
    1090:	andeq	r1, r1, r4, lsr #1
    1094:	andeq	r0, r0, r4, lsl #6
    1098:	andeq	r0, r0, ip, lsl r3
    109c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    10a0:	strdeq	r0, [r0], -r8
    10a4:	andeq	r0, r0, r4, ror #5
    10a8:	mov	fp, #0
    10ac:	mov	lr, #0
    10b0:	pop	{r1}		; (ldr r1, [sp], #4)
    10b4:	mov	r2, sp
    10b8:	push	{r2}		; (str r2, [sp, #-4]!)
    10bc:	push	{r0}		; (str r0, [sp, #-4]!)
    10c0:	ldr	sl, [pc, #40]	; 10f0 <log_oom_internal@plt+0x684>
    10c4:	add	r3, pc, #36	; 0x24
    10c8:	add	sl, sl, r3
    10cc:	ldr	ip, [pc, #32]	; 10f4 <log_oom_internal@plt+0x688>
    10d0:	ldr	ip, [sl, ip]
    10d4:	push	{ip}		; (str ip, [sp, #-4]!)
    10d8:	ldr	r3, [pc, #24]	; 10f8 <log_oom_internal@plt+0x68c>
    10dc:	ldr	r3, [sl, r3]
    10e0:	ldr	r0, [pc, #20]	; 10fc <log_oom_internal@plt+0x690>
    10e4:	ldr	r0, [sl, r0]
    10e8:	bl	a30 <__libc_start_main@plt>
    10ec:	bl	9ac <abort@plt>
    10f0:	andeq	r0, r1, r4, ror #28
    10f4:	muleq	r0, r8, r0
    10f8:	muleq	r0, r0, r0
    10fc:	andeq	r0, r0, r0, lsl #1
    1100:	ldr	r3, [pc, #20]	; 111c <log_oom_internal@plt+0x6b0>
    1104:	ldr	r2, [pc, #20]	; 1120 <log_oom_internal@plt+0x6b4>
    1108:	add	r3, pc, r3
    110c:	ldr	r2, [r3, r2]
    1110:	cmp	r2, #0
    1114:	bxeq	lr
    1118:	b	a3c <__gmon_start__@plt>
    111c:	andeq	r0, r1, r4, asr #28
    1120:	andeq	r0, r0, r0, lsr #1
    1124:	ldr	r0, [pc, #44]	; 1158 <log_oom_internal@plt+0x6ec>
    1128:	ldr	r3, [pc, #44]	; 115c <log_oom_internal@plt+0x6f0>
    112c:	add	r0, pc, r0
    1130:	add	r3, pc, r3
    1134:	cmp	r3, r0
    1138:	ldr	r3, [pc, #32]	; 1160 <log_oom_internal@plt+0x6f4>
    113c:	add	r3, pc, r3
    1140:	bxeq	lr
    1144:	ldr	r2, [pc, #24]	; 1164 <log_oom_internal@plt+0x6f8>
    1148:	ldr	r3, [r3, r2]
    114c:	cmp	r3, #0
    1150:	bxeq	lr
    1154:	bx	r3
    1158:	andeq	r0, r1, r0, ror #29
    115c:	ldrdeq	r0, [r1], -ip
    1160:	andeq	r0, r1, r0, lsl lr
    1164:	muleq	r0, r4, r0
    1168:	ldr	r0, [pc, #56]	; 11a8 <log_oom_internal@plt+0x73c>
    116c:	ldr	r3, [pc, #56]	; 11ac <log_oom_internal@plt+0x740>
    1170:	add	r0, pc, r0
    1174:	add	r3, pc, r3
    1178:	sub	r1, r3, r0
    117c:	ldr	r3, [pc, #44]	; 11b0 <log_oom_internal@plt+0x744>
    1180:	asr	r1, r1, #2
    1184:	add	r3, pc, r3
    1188:	add	r1, r1, r1, lsr #31
    118c:	asrs	r1, r1, #1
    1190:	bxeq	lr
    1194:	ldr	r2, [pc, #24]	; 11b4 <log_oom_internal@plt+0x748>
    1198:	ldr	r3, [r3, r2]
    119c:	cmp	r3, #0
    11a0:	bxeq	lr
    11a4:	bx	r3
    11a8:	muleq	r1, ip, lr
    11ac:	muleq	r1, r8, lr
    11b0:	andeq	r0, r1, r8, asr #27
    11b4:	andeq	r0, r0, r4, lsr #1
    11b8:	ldr	r3, [pc, #76]	; 120c <log_oom_internal@plt+0x7a0>
    11bc:	ldr	r2, [pc, #76]	; 1210 <log_oom_internal@plt+0x7a4>
    11c0:	add	r3, pc, r3
    11c4:	add	r2, pc, r2
    11c8:	ldrb	r3, [r3]
    11cc:	cmp	r3, #0
    11d0:	bxne	lr
    11d4:	ldr	r3, [pc, #56]	; 1214 <log_oom_internal@plt+0x7a8>
    11d8:	push	{r4, lr}
    11dc:	ldr	r3, [r2, r3]
    11e0:	cmp	r3, #0
    11e4:	beq	11f4 <log_oom_internal@plt+0x788>
    11e8:	ldr	r3, [pc, #40]	; 1218 <log_oom_internal@plt+0x7ac>
    11ec:	ldr	r0, [pc, r3]
    11f0:	bl	a48 <__cxa_finalize@plt>
    11f4:	bl	1124 <log_oom_internal@plt+0x6b8>
    11f8:	ldr	r3, [pc, #28]	; 121c <log_oom_internal@plt+0x7b0>
    11fc:	mov	r2, #1
    1200:	add	r3, pc, r3
    1204:	strb	r2, [r3]
    1208:	pop	{r4, pc}
    120c:	andeq	r0, r1, r4, asr lr
    1210:	andeq	r0, r1, r8, lsl #27
    1214:	andeq	r0, r0, r8, lsr #1
    1218:	andeq	r0, r1, ip, lsl #28
    121c:	andeq	r0, r1, r4, lsl lr
    1220:	b	1168 <log_oom_internal@plt+0x6fc>
    1224:	ldr	r0, [r0]
    1228:	b	940 <free@plt>
    122c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1230:	mov	r7, r0
    1234:	ldr	r6, [pc, #72]	; 1284 <log_oom_internal@plt+0x818>
    1238:	ldr	r5, [pc, #72]	; 1288 <log_oom_internal@plt+0x81c>
    123c:	add	r6, pc, r6
    1240:	add	r5, pc, r5
    1244:	sub	r6, r6, r5
    1248:	mov	r8, r1
    124c:	mov	r9, r2
    1250:	bl	914 <version@plt-0x20>
    1254:	asrs	r6, r6, #2
    1258:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    125c:	mov	r4, #0
    1260:	add	r4, r4, #1
    1264:	ldr	r3, [r5], #4
    1268:	mov	r2, r9
    126c:	mov	r1, r8
    1270:	mov	r0, r7
    1274:	blx	r3
    1278:	cmp	r6, r4
    127c:	bne	1260 <log_oom_internal@plt+0x7f4>
    1280:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1284:	andeq	r0, r1, ip, lsr fp
    1288:	andeq	r0, r1, r4, lsr fp
    128c:	bx	lr

Disassembly of section .fini:

00001290 <.fini>:
    1290:	push	{r3, lr}
    1294:	pop	{r3, pc}
