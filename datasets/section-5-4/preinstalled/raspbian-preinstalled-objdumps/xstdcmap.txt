
raspbian-preinstalled/xstdcmap:     file format elf32-littlearm


Disassembly of section .init:

0001080c <.init>:
   1080c:	push	{r3, lr}
   10810:	bl	10ef4 <__snprintf_chk@plt+0x5cc>
   10814:	pop	{r3, pc}

Disassembly of section .plt:

00010818 <strcmp@plt-0x14>:
   10818:	push	{lr}		; (str lr, [sp, #-4]!)
   1081c:	ldr	lr, [pc, #4]	; 10828 <strcmp@plt-0x4>
   10820:	add	lr, pc, lr
   10824:	ldr	pc, [lr, #8]!
   10828:	ldrdeq	r1, [r1], -r8

0001082c <strcmp@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2008]!	; 0x7d8

00010838 <XmuLookupStandardColormap@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #69632	; 0x11000
   10840:	ldr	pc, [ip, #2000]!	; 0x7d0

00010844 <XrmGetResource@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #1992]!	; 0x7c8

00010850 <XrmInitialize@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #69632	; 0x11000
   10858:	ldr	pc, [ip, #1984]!	; 0x7c0

0001085c <__stack_chk_fail@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #69632	; 0x11000
   10864:	ldr	pc, [ip, #1976]!	; 0x7b8

00010868 <XFree@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #69632	; 0x11000
   10870:	ldr	pc, [ip, #1968]!	; 0x7b0

00010874 <XGetVisualInfo@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #69632	; 0x11000
   1087c:	ldr	pc, [ip, #1960]!	; 0x7a8

00010880 <fwrite@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #69632	; 0x11000
   10888:	ldr	pc, [ip, #1952]!	; 0x7a0

0001088c <puts@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #69632	; 0x11000
   10894:	ldr	pc, [ip, #1944]!	; 0x798

00010898 <__libc_start_main@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #69632	; 0x11000
   108a0:	ldr	pc, [ip, #1936]!	; 0x790

000108a4 <XOpenDisplay@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1928]!	; 0x788

000108b0 <__gmon_start__@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1920]!	; 0x780

000108bc <exit@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1912]!	; 0x778

000108c8 <XmuDeleteStandardColormap@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1904]!	; 0x770

000108d4 <XDisplayName@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1896]!	; 0x768

000108e0 <__fprintf_chk@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1888]!	; 0x760

000108ec <XmuAllStandardColormaps@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1880]!	; 0x758

000108f8 <strrchr@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1872]!	; 0x750

00010904 <XCloseDisplay@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1864]!	; 0x748

00010910 <abort@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1856]!	; 0x740

0001091c <XrmParseCommand@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1848]!	; 0x738

00010928 <__snprintf_chk@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1840]!	; 0x730

Disassembly of section .text:

00010934 <.text>:
   10934:	ldr	r3, [pc, #1328]	; 10e6c <__snprintf_chk@plt+0x544>
   10938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1093c:	sub	sp, sp, #68	; 0x44
   10940:	ldr	r5, [r1]
   10944:	ldr	r3, [r3]
   10948:	mov	r6, r1
   1094c:	mov	r7, r0
   10950:	mov	r1, #47	; 0x2f
   10954:	mov	r0, r5
   10958:	str	r3, [sp, #60]	; 0x3c
   1095c:	bl	108f8 <strrchr@plt>
   10960:	ldr	r4, [pc, #1288]	; 10e70 <__snprintf_chk@plt+0x548>
   10964:	mov	r1, r6
   10968:	cmp	r0, #0
   1096c:	addne	r5, r0, #1
   10970:	mov	r0, r7
   10974:	str	r5, [r4, #4]
   10978:	bl	11024 <__snprintf_chk@plt+0x6fc>
   1097c:	ldr	r5, [r4, #16]
   10980:	cmp	r5, #0
   10984:	bne	10a18 <__snprintf_chk@plt+0xf0>
   10988:	ldr	r3, [r4, #24]
   1098c:	cmp	r3, #0
   10990:	bne	10a08 <__snprintf_chk@plt+0xe0>
   10994:	ldr	r0, [r4, #12]
   10998:	bl	108a4 <XOpenDisplay@plt>
   1099c:	cmp	r0, #0
   109a0:	str	r0, [r4]
   109a4:	beq	10c4c <__snprintf_chk@plt+0x324>
   109a8:	ldr	r2, [r4, #8]
   109ac:	cmp	r2, #0
   109b0:	beq	10a20 <__snprintf_chk@plt+0xf8>
   109b4:	ldr	r3, [r4, #20]
   109b8:	cmp	r3, #0
   109bc:	bne	10c30 <__snprintf_chk@plt+0x308>
   109c0:	ldr	r0, [r4]
   109c4:	bl	108ec <XmuAllStandardColormaps@plt>
   109c8:	ldr	r3, [r4, #20]
   109cc:	cmp	r3, #0
   109d0:	mov	r5, r0
   109d4:	beq	109fc <__snprintf_chk@plt+0xd4>
   109d8:	ldr	r1, [pc, #1172]	; 10e74 <__snprintf_chk@plt+0x54c>
   109dc:	ldr	r2, [pc, #1172]	; 10e78 <__snprintf_chk@plt+0x550>
   109e0:	cmp	r5, #0
   109e4:	ldr	r3, [pc, #1168]	; 10e7c <__snprintf_chk@plt+0x554>
   109e8:	ldr	r0, [r1]
   109ec:	movne	r3, r2
   109f0:	mov	r1, #1
   109f4:	ldr	r2, [pc, #1156]	; 10e80 <__snprintf_chk@plt+0x558>
   109f8:	bl	108e0 <__fprintf_chk@plt>
   109fc:	clz	r0, r5
   10a00:	lsr	r0, r0, #5
   10a04:	bl	10fa8 <__snprintf_chk@plt+0x680>
   10a08:	ldr	r0, [pc, #1140]	; 10e84 <__snprintf_chk@plt+0x55c>
   10a0c:	bl	1088c <puts@plt>
   10a10:	mov	r0, r5
   10a14:	bl	108bc <exit@plt>
   10a18:	mov	r0, #0
   10a1c:	bl	10fd0 <__snprintf_chk@plt+0x6a8>
   10a20:	ldr	sl, [r0, #132]	; 0x84
   10a24:	add	r3, sp, #16
   10a28:	add	r2, sp, #20
   10a2c:	mov	r1, #2
   10a30:	str	sl, [sp, #28]
   10a34:	bl	10874 <XGetVisualInfo@plt>
   10a38:	ldr	r5, [pc, #1096]	; 10e88 <__snprintf_chk@plt+0x560>
   10a3c:	mvn	r8, #0
   10a40:	add	r9, r5, #120	; 0x78
   10a44:	mov	r7, r0
   10a48:	ldr	r3, [r5, #4]
   10a4c:	cmp	r3, #0
   10a50:	bne	10bf0 <__snprintf_chk@plt+0x2c8>
   10a54:	ldr	r3, [r5]
   10a58:	cmp	r3, #0
   10a5c:	beq	10bd4 <__snprintf_chk@plt+0x2ac>
   10a60:	cmp	r7, #0
   10a64:	ldr	r1, [sp, #16]
   10a68:	beq	10cd8 <__snprintf_chk@plt+0x3b0>
   10a6c:	cmp	r1, #0
   10a70:	ble	10d08 <__snprintf_chk@plt+0x3e0>
   10a74:	mov	r2, #0
   10a78:	mov	ip, r2
   10a7c:	mov	lr, r2
   10a80:	mov	r3, r7
   10a84:	ldr	r0, [r3, #16]
   10a88:	cmp	r0, #5
   10a8c:	bne	10aa0 <__snprintf_chk@plt+0x178>
   10a90:	ldr	r0, [r3, #12]
   10a94:	cmp	r0, lr
   10a98:	movhi	lr, r0
   10a9c:	movhi	ip, r3
   10aa0:	add	r2, r2, #1
   10aa4:	cmp	r1, r2
   10aa8:	add	r3, r3, #40	; 0x28
   10aac:	bne	10a84 <__snprintf_chk@plt+0x15c>
   10ab0:	mov	r2, #0
   10ab4:	mov	r6, r2
   10ab8:	mov	lr, r2
   10abc:	mov	r3, r7
   10ac0:	ldr	r0, [r3, #16]
   10ac4:	cmp	r0, #3
   10ac8:	bne	10adc <__snprintf_chk@plt+0x1b4>
   10acc:	ldr	r0, [r3, #12]
   10ad0:	cmp	r0, lr
   10ad4:	movhi	lr, r0
   10ad8:	movhi	r6, r3
   10adc:	add	r2, r2, #1
   10ae0:	cmp	r1, r2
   10ae4:	add	r3, r3, #40	; 0x28
   10ae8:	bne	10ac0 <__snprintf_chk@plt+0x198>
   10aec:	cmp	r6, #0
   10af0:	beq	10cb4 <__snprintf_chk@plt+0x38c>
   10af4:	cmp	ip, #0
   10af8:	beq	10b20 <__snprintf_chk@plt+0x1f8>
   10afc:	ldr	r3, [ip, #20]
   10b00:	ldr	r1, [ip, #24]
   10b04:	ldr	r2, [ip, #28]
   10b08:	orr	r3, r3, r1
   10b0c:	orr	r3, r3, r2
   10b10:	ldr	r2, [r6, #32]
   10b14:	add	r3, r3, #1
   10b18:	cmp	r2, r3
   10b1c:	movcc	r6, ip
   10b20:	ldr	r3, [r4, #20]
   10b24:	cmp	r3, #0
   10b28:	beq	10b68 <__snprintf_chk@plt+0x240>
   10b2c:	ldr	r2, [r6, #16]
   10b30:	ldr	r1, [r5, #12]
   10b34:	cmp	r2, #5
   10b38:	ldr	r3, [pc, #820]	; 10e74 <__snprintf_chk@plt+0x54c>
   10b3c:	ldrls	ip, [pc, #840]	; 10e8c <__snprintf_chk@plt+0x564>
   10b40:	ldrhi	ip, [pc, #840]	; 10e90 <__snprintf_chk@plt+0x568>
   10b44:	ldr	r0, [r3]
   10b48:	ldrls	ip, [ip, r2, lsl #2]
   10b4c:	ldr	r2, [r6, #12]
   10b50:	ldr	r3, [r4, #4]
   10b54:	str	r2, [sp, #8]
   10b58:	stm	sp, {r1, ip}
   10b5c:	ldr	r2, [pc, #816]	; 10e94 <__snprintf_chk@plt+0x56c>
   10b60:	mov	r1, #1
   10b64:	bl	108e0 <__fprintf_chk@plt>
   10b68:	ldr	r2, [r5, #8]
   10b6c:	mov	r3, #0
   10b70:	mov	fp, #1
   10b74:	mov	r1, sl
   10b78:	stm	sp, {r2, r3, fp}
   10b7c:	ldr	r3, [r6, #12]
   10b80:	ldr	r2, [r6, #4]
   10b84:	ldr	r0, [r4]
   10b88:	bl	10838 <XmuLookupStandardColormap@plt>
   10b8c:	ldr	r3, [r4, #20]
   10b90:	cmp	r3, #0
   10b94:	mov	r8, r0
   10b98:	beq	10bcc <__snprintf_chk@plt+0x2a4>
   10b9c:	ldr	r1, [pc, #756]	; 10e98 <__snprintf_chk@plt+0x570>
   10ba0:	ldr	r3, [pc, #756]	; 10e9c <__snprintf_chk@plt+0x574>
   10ba4:	ldr	r2, [r5, #12]
   10ba8:	cmp	r0, #0
   10bac:	ldr	r0, [pc, #704]	; 10e74 <__snprintf_chk@plt+0x54c>
   10bb0:	moveq	r3, r1
   10bb4:	mov	r1, fp
   10bb8:	strd	r2, [sp]
   10bbc:	ldr	r2, [pc, #732]	; 10ea0 <__snprintf_chk@plt+0x578>
   10bc0:	ldr	r3, [r4, #4]
   10bc4:	ldr	r0, [r0]
   10bc8:	bl	108e0 <__fprintf_chk@plt>
   10bcc:	cmp	r8, #0
   10bd0:	beq	10c80 <__snprintf_chk@plt+0x358>
   10bd4:	add	r5, r5, #20
   10bd8:	cmp	r5, r9
   10bdc:	bne	10a48 <__snprintf_chk@plt+0x120>
   10be0:	mov	r0, r7
   10be4:	bl	10868 <XFree@plt>
   10be8:	mov	r5, r8
   10bec:	b	109fc <__snprintf_chk@plt+0xd4>
   10bf0:	ldr	r2, [r5, #8]
   10bf4:	mov	r1, sl
   10bf8:	ldr	r0, [r4]
   10bfc:	bl	108c8 <XmuDeleteStandardColormap@plt>
   10c00:	ldr	r3, [r4, #20]
   10c04:	cmp	r3, #0
   10c08:	beq	10a54 <__snprintf_chk@plt+0x12c>
   10c0c:	ldr	r0, [pc, #608]	; 10e74 <__snprintf_chk@plt+0x54c>
   10c10:	ldr	r2, [r5, #12]
   10c14:	ldr	r3, [r4, #4]
   10c18:	mov	r1, #1
   10c1c:	str	r2, [sp]
   10c20:	ldr	r2, [pc, #636]	; 10ea4 <__snprintf_chk@plt+0x57c>
   10c24:	ldr	r0, [r0]
   10c28:	bl	108e0 <__fprintf_chk@plt>
   10c2c:	b	10a54 <__snprintf_chk@plt+0x12c>
   10c30:	ldr	r1, [pc, #572]	; 10e74 <__snprintf_chk@plt+0x54c>
   10c34:	ldr	r3, [r4, #4]
   10c38:	ldr	r2, [pc, #616]	; 10ea8 <__snprintf_chk@plt+0x580>
   10c3c:	ldr	r0, [r1]
   10c40:	mov	r1, #1
   10c44:	bl	108e0 <__fprintf_chk@plt>
   10c48:	b	109c0 <__snprintf_chk@plt+0x98>
   10c4c:	ldr	r3, [pc, #544]	; 10e74 <__snprintf_chk@plt+0x54c>
   10c50:	ldr	r0, [r4, #12]
   10c54:	ldr	r5, [r4, #4]
   10c58:	ldr	r4, [r3]
   10c5c:	bl	108d4 <XDisplayName@plt>
   10c60:	mov	r3, r5
   10c64:	ldr	r2, [pc, #576]	; 10eac <__snprintf_chk@plt+0x584>
   10c68:	mov	r1, #1
   10c6c:	str	r0, [sp]
   10c70:	mov	r0, r4
   10c74:	bl	108e0 <__fprintf_chk@plt>
   10c78:	mov	r0, #1
   10c7c:	bl	108bc <exit@plt>
   10c80:	mov	r0, r7
   10c84:	bl	10868 <XFree@plt>
   10c88:	ldr	r5, [r4, #20]
   10c8c:	cmp	r5, #0
   10c90:	beq	109fc <__snprintf_chk@plt+0xd4>
   10c94:	ldr	r3, [pc, #472]	; 10e74 <__snprintf_chk@plt+0x54c>
   10c98:	mov	r2, #51	; 0x33
   10c9c:	mov	r1, #1
   10ca0:	ldr	r3, [r3]
   10ca4:	ldr	r0, [pc, #516]	; 10eb0 <__snprintf_chk@plt+0x588>
   10ca8:	bl	10880 <fwrite@plt>
   10cac:	mov	r5, r8
   10cb0:	b	109fc <__snprintf_chk@plt+0xd4>
   10cb4:	cmp	ip, #0
   10cb8:	bne	10e64 <__snprintf_chk@plt+0x53c>
   10cbc:	ldr	r3, [r5, #8]
   10cc0:	cmp	r3, #25
   10cc4:	beq	10de8 <__snprintf_chk@plt+0x4c0>
   10cc8:	cmp	r3, #28
   10ccc:	beq	10d60 <__snprintf_chk@plt+0x438>
   10cd0:	cmp	r3, #27
   10cd4:	beq	10e30 <__snprintf_chk@plt+0x508>
   10cd8:	ldr	r3, [r4, #20]
   10cdc:	cmp	r3, #0
   10ce0:	beq	10bd4 <__snprintf_chk@plt+0x2ac>
   10ce4:	ldr	r3, [r5, #12]
   10ce8:	ldr	r0, [pc, #388]	; 10e74 <__snprintf_chk@plt+0x54c>
   10cec:	ldr	r2, [pc, #448]	; 10eb4 <__snprintf_chk@plt+0x58c>
   10cf0:	stm	sp, {r3, sl}
   10cf4:	mov	r1, #1
   10cf8:	ldr	r3, [r4, #4]
   10cfc:	ldr	r0, [r0]
   10d00:	bl	108e0 <__fprintf_chk@plt>
   10d04:	b	10bd4 <__snprintf_chk@plt+0x2ac>
   10d08:	ldr	r3, [r5, #8]
   10d0c:	cmp	r3, #25
   10d10:	bne	10cc8 <__snprintf_chk@plt+0x3a0>
   10d14:	mov	r6, #0
   10d18:	mov	r2, #0
   10d1c:	mov	ip, r2
   10d20:	mov	r3, r7
   10d24:	b	10d4c <__snprintf_chk@plt+0x424>
   10d28:	ldr	r0, [r3, #16]
   10d2c:	cmp	r0, #2
   10d30:	bne	10d44 <__snprintf_chk@plt+0x41c>
   10d34:	ldr	r0, [r3, #12]
   10d38:	cmp	r0, ip
   10d3c:	movhi	ip, r0
   10d40:	movhi	r6, r3
   10d44:	add	r2, r2, #1
   10d48:	add	r3, r3, #40	; 0x28
   10d4c:	cmp	r1, r2
   10d50:	bgt	10d28 <__snprintf_chk@plt+0x400>
   10d54:	cmp	r6, #0
   10d58:	bne	10b20 <__snprintf_chk@plt+0x1f8>
   10d5c:	b	10cd8 <__snprintf_chk@plt+0x3b0>
   10d60:	mov	r2, #0
   10d64:	mov	r6, r2
   10d68:	mov	ip, r2
   10d6c:	mov	r3, r7
   10d70:	b	10d98 <__snprintf_chk@plt+0x470>
   10d74:	ldr	r0, [r3, #16]
   10d78:	cmp	r0, #1
   10d7c:	bne	10d90 <__snprintf_chk@plt+0x468>
   10d80:	ldr	r0, [r3, #12]
   10d84:	cmp	r0, ip
   10d88:	movhi	ip, r0
   10d8c:	movhi	r6, r3
   10d90:	add	r2, r2, #1
   10d94:	add	r3, r3, #40	; 0x28
   10d98:	cmp	r1, r2
   10d9c:	bgt	10d74 <__snprintf_chk@plt+0x44c>
   10da0:	cmp	r6, #0
   10da4:	bne	10b20 <__snprintf_chk@plt+0x1f8>
   10da8:	mov	r2, r6
   10dac:	mov	r3, r7
   10db0:	mov	ip, r6
   10db4:	b	10ddc <__snprintf_chk@plt+0x4b4>
   10db8:	ldr	r0, [r3, #16]
   10dbc:	cmp	r0, #0
   10dc0:	bne	10dd4 <__snprintf_chk@plt+0x4ac>
   10dc4:	ldr	r0, [r3, #12]
   10dc8:	cmp	r0, ip
   10dcc:	movhi	ip, r0
   10dd0:	movhi	r6, r3
   10dd4:	add	r2, r2, #1
   10dd8:	add	r3, r3, #40	; 0x28
   10ddc:	cmp	r1, r2
   10de0:	bgt	10db8 <__snprintf_chk@plt+0x490>
   10de4:	b	10d54 <__snprintf_chk@plt+0x42c>
   10de8:	mov	r2, r6
   10dec:	mov	r3, r7
   10df0:	mov	ip, r6
   10df4:	b	10e1c <__snprintf_chk@plt+0x4f4>
   10df8:	ldr	r0, [r3, #16]
   10dfc:	cmp	r0, #4
   10e00:	bne	10e14 <__snprintf_chk@plt+0x4ec>
   10e04:	ldr	r0, [r3, #12]
   10e08:	cmp	r0, ip
   10e0c:	movhi	ip, r0
   10e10:	movhi	r6, r3
   10e14:	add	r2, r2, #1
   10e18:	add	r3, r3, #40	; 0x28
   10e1c:	cmp	r1, r2
   10e20:	bgt	10df8 <__snprintf_chk@plt+0x4d0>
   10e24:	cmp	r6, #0
   10e28:	bne	10b20 <__snprintf_chk@plt+0x1f8>
   10e2c:	b	10d18 <__snprintf_chk@plt+0x3f0>
   10e30:	ldr	r3, [r4]
   10e34:	mov	r6, r7
   10e38:	mov	r0, #80	; 0x50
   10e3c:	ldr	r1, [r3, #140]	; 0x8c
   10e40:	b	10e48 <__snprintf_chk@plt+0x520>
   10e44:	add	r6, r6, #40	; 0x28
   10e48:	ldr	r3, [r6, #8]
   10e4c:	ldr	r2, [r6]
   10e50:	mla	r3, r0, r3, r1
   10e54:	ldr	r3, [r3, #40]	; 0x28
   10e58:	cmp	r2, r3
   10e5c:	bne	10e44 <__snprintf_chk@plt+0x51c>
   10e60:	b	10b20 <__snprintf_chk@plt+0x1f8>
   10e64:	mov	r6, ip
   10e68:	b	10b20 <__snprintf_chk@plt+0x1f8>
   10e6c:	strdeq	r1, [r2], -r0
   10e70:			; <UNDEFINED> instruction: 0x000221b0
   10e74:	andeq	r2, r2, r8, lsr #3
   10e78:	andeq	r1, r1, r4, ror r8
   10e7c:	andeq	r1, r1, ip, ror r8
   10e80:	andeq	r1, r1, r4, lsr r9
   10e84:	ldrdeq	r1, [r1], -r0
   10e88:	andeq	r2, r2, r0, lsr r1
   10e8c:	andeq	r1, r1, ip, lsr #11
   10e90:	andeq	r1, r1, r4, lsl #17
   10e94:	muleq	r1, r4, r9
   10e98:			; <UNDEFINED> instruction: 0x000118bc
   10e9c:	muleq	r1, ip, r8
   10ea0:	andeq	r1, r1, r0, asr #19
   10ea4:	andeq	r1, r1, ip, lsr r9
   10ea8:	andeq	r1, r1, r0, lsl #18
   10eac:	andeq	r1, r1, r0, ror #17
   10eb0:	andeq	r1, r1, r0, ror #19
   10eb4:	andeq	r1, r1, r4, ror #18
   10eb8:	mov	fp, #0
   10ebc:	mov	lr, #0
   10ec0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ec4:	mov	r2, sp
   10ec8:	push	{r2}		; (str r2, [sp, #-4]!)
   10ecc:	push	{r0}		; (str r0, [sp, #-4]!)
   10ed0:	ldr	ip, [pc, #16]	; 10ee8 <__snprintf_chk@plt+0x5c0>
   10ed4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ed8:	ldr	r0, [pc, #12]	; 10eec <__snprintf_chk@plt+0x5c4>
   10edc:	ldr	r3, [pc, #12]	; 10ef0 <__snprintf_chk@plt+0x5c8>
   10ee0:	bl	10898 <__libc_start_main@plt>
   10ee4:	bl	10910 <abort@plt>
   10ee8:	muleq	r1, ip, r5
   10eec:	andeq	r0, r1, r4, lsr r9
   10ef0:	andeq	r1, r1, ip, lsr r5
   10ef4:	ldr	r3, [pc, #20]	; 10f10 <__snprintf_chk@plt+0x5e8>
   10ef8:	ldr	r2, [pc, #20]	; 10f14 <__snprintf_chk@plt+0x5ec>
   10efc:	add	r3, pc, r3
   10f00:	ldr	r2, [r3, r2]
   10f04:	cmp	r2, #0
   10f08:	bxeq	lr
   10f0c:	b	108b0 <__gmon_start__@plt>
   10f10:	strdeq	r1, [r1], -ip
   10f14:	andeq	r0, r0, r4, rrx
   10f18:	ldr	r0, [pc, #24]	; 10f38 <__snprintf_chk@plt+0x610>
   10f1c:	ldr	r3, [pc, #24]	; 10f3c <__snprintf_chk@plt+0x614>
   10f20:	cmp	r3, r0
   10f24:	bxeq	lr
   10f28:	ldr	r3, [pc, #16]	; 10f40 <__snprintf_chk@plt+0x618>
   10f2c:	cmp	r3, #0
   10f30:	bxeq	lr
   10f34:	bx	r3
   10f38:	andeq	r2, r2, r8, lsr #3
   10f3c:	andeq	r2, r2, r8, lsr #3
   10f40:	andeq	r0, r0, r0
   10f44:	ldr	r0, [pc, #36]	; 10f70 <__snprintf_chk@plt+0x648>
   10f48:	ldr	r1, [pc, #36]	; 10f74 <__snprintf_chk@plt+0x64c>
   10f4c:	sub	r1, r1, r0
   10f50:	asr	r1, r1, #2
   10f54:	add	r1, r1, r1, lsr #31
   10f58:	asrs	r1, r1, #1
   10f5c:	bxeq	lr
   10f60:	ldr	r3, [pc, #16]	; 10f78 <__snprintf_chk@plt+0x650>
   10f64:	cmp	r3, #0
   10f68:	bxeq	lr
   10f6c:	bx	r3
   10f70:	andeq	r2, r2, r8, lsr #3
   10f74:	andeq	r2, r2, r8, lsr #3
   10f78:	andeq	r0, r0, r0
   10f7c:	push	{r4, lr}
   10f80:	ldr	r4, [pc, #24]	; 10fa0 <__snprintf_chk@plt+0x678>
   10f84:	ldrb	r3, [r4]
   10f88:	cmp	r3, #0
   10f8c:	popne	{r4, pc}
   10f90:	bl	10f18 <__snprintf_chk@plt+0x5f0>
   10f94:	mov	r3, #1
   10f98:	strb	r3, [r4]
   10f9c:	pop	{r4, pc}
   10fa0:	andeq	r2, r2, ip, lsr #3
   10fa4:	b	10f44 <__snprintf_chk@plt+0x61c>
   10fa8:	ldr	r3, [pc, #28]	; 10fcc <__snprintf_chk@plt+0x6a4>
   10fac:	push	{r4, lr}
   10fb0:	mov	r4, r0
   10fb4:	ldr	r0, [r3]
   10fb8:	cmp	r0, #0
   10fbc:	beq	10fc4 <__snprintf_chk@plt+0x69c>
   10fc0:	bl	10904 <XCloseDisplay@plt>
   10fc4:	mov	r0, r4
   10fc8:	bl	108bc <exit@plt>
   10fcc:			; <UNDEFINED> instruction: 0x000221b0
   10fd0:	push	{r4, lr}
   10fd4:	mov	r5, r0
   10fd8:	ldr	r4, [pc, #48]	; 11010 <__snprintf_chk@plt+0x6e8>
   10fdc:	ldr	r3, [pc, #48]	; 11014 <__snprintf_chk@plt+0x6ec>
   10fe0:	ldr	r2, [pc, #48]	; 11018 <__snprintf_chk@plt+0x6f0>
   10fe4:	mov	r1, #1
   10fe8:	ldr	r3, [r3, #4]
   10fec:	ldr	r0, [r4]
   10ff0:	bl	108e0 <__fprintf_chk@plt>
   10ff4:	ldr	r0, [r4]
   10ff8:	ldr	r3, [pc, #28]	; 1101c <__snprintf_chk@plt+0x6f4>
   10ffc:	ldr	r2, [pc, #28]	; 11020 <__snprintf_chk@plt+0x6f8>
   11000:	mov	r1, #1
   11004:	bl	108e0 <__fprintf_chk@plt>
   11008:	mov	r0, r5
   1100c:	bl	10fa8 <__snprintf_chk@plt+0x680>
   11010:	andeq	r2, r2, r8, lsr #3
   11014:			; <UNDEFINED> instruction: 0x000221b0
   11018:	andeq	r1, r1, r4, asr #11
   1101c:	ldrdeq	r1, [r1], -ip
   11020:	ldrdeq	r1, [r1], -ip
   11024:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11028:	sub	sp, sp, #564	; 0x234
   1102c:	ldr	sl, [pc, #1216]	; 114f4 <__snprintf_chk@plt+0xbcc>
   11030:	mov	r3, #0
   11034:	cmp	r0, #1
   11038:	ldr	r2, [sl]
   1103c:	str	r0, [sp, #20]
   11040:	str	r2, [sp, #556]	; 0x22c
   11044:	str	r3, [sp, #28]
   11048:	beq	114ec <__snprintf_chk@plt+0xbc4>
   1104c:	ldr	r4, [pc, #1188]	; 114f8 <__snprintf_chk@plt+0xbd0>
   11050:	mov	r5, r1
   11054:	bl	10850 <XrmInitialize@plt>
   11058:	add	r2, sp, #20
   1105c:	str	r2, [sp]
   11060:	str	r5, [sp, #4]
   11064:	ldr	r3, [r4, #4]
   11068:	mov	r2, #12
   1106c:	ldr	r1, [pc, #1160]	; 114fc <__snprintf_chk@plt+0xbd4>
   11070:	add	r0, sp, #28
   11074:	bl	1091c <XrmParseCommand@plt>
   11078:	ldr	r7, [sp, #20]
   1107c:	sub	r7, r7, #1
   11080:	cmp	r7, #0
   11084:	str	r7, [sp, #20]
   11088:	bne	114e4 <__snprintf_chk@plt+0xbbc>
   1108c:	ldr	r6, [pc, #1132]	; 11500 <__snprintf_chk@plt+0xbd8>
   11090:	ldr	r2, [r4, #4]
   11094:	ldr	r1, [pc, #1128]	; 11504 <__snprintf_chk@plt+0xbdc>
   11098:	mov	r3, #512	; 0x200
   1109c:	add	r5, sp, #36	; 0x24
   110a0:	str	r1, [sp, #8]
   110a4:	str	r2, [sp, #4]
   110a8:	mov	r1, r3
   110ac:	mov	r2, #1
   110b0:	str	r6, [sp]
   110b4:	add	r0, sp, #44	; 0x2c
   110b8:	bl	10928 <__snprintf_chk@plt>
   110bc:	add	r3, sp, #32
   110c0:	add	r1, sp, #44	; 0x2c
   110c4:	mov	r2, r7
   110c8:	str	r5, [sp]
   110cc:	ldr	r0, [sp, #28]
   110d0:	bl	10844 <XrmGetResource@plt>
   110d4:	ldr	r2, [r4, #4]
   110d8:	ldr	r1, [pc, #1064]	; 11508 <__snprintf_chk@plt+0xbe0>
   110dc:	str	r2, [sp, #4]
   110e0:	str	r1, [sp, #8]
   110e4:	mov	r2, #1
   110e8:	str	r6, [sp]
   110ec:	cmp	r0, #0
   110f0:	add	r0, sp, #44	; 0x2c
   110f4:	ldrne	r3, [r4, #8]
   110f8:	addne	r3, r3, #1
   110fc:	strne	r3, [r4, #8]
   11100:	mov	r3, #512	; 0x200
   11104:	mov	r1, r3
   11108:	bl	10928 <__snprintf_chk@plt>
   1110c:	add	r3, sp, #32
   11110:	mov	r2, #0
   11114:	add	r1, sp, #44	; 0x2c
   11118:	str	r5, [sp]
   1111c:	ldr	r0, [sp, #28]
   11120:	bl	10844 <XrmGetResource@plt>
   11124:	ldr	r1, [pc, #992]	; 1150c <__snprintf_chk@plt+0xbe4>
   11128:	cmp	r0, #0
   1112c:	add	r0, sp, #44	; 0x2c
   11130:	ldrne	r2, [pc, #964]	; 114fc <__snprintf_chk@plt+0xbd4>
   11134:	ldrne	r3, [r2, #212]	; 0xd4
   11138:	addne	r3, r3, #1
   1113c:	strne	r3, [r2, #212]	; 0xd4
   11140:	ldr	r2, [r4, #4]
   11144:	mov	r3, #512	; 0x200
   11148:	str	r1, [sp, #8]
   1114c:	str	r2, [sp, #4]
   11150:	mov	r1, r3
   11154:	mov	r2, #1
   11158:	str	r6, [sp]
   1115c:	bl	10928 <__snprintf_chk@plt>
   11160:	add	r3, sp, #32
   11164:	mov	r2, #0
   11168:	add	r1, sp, #44	; 0x2c
   1116c:	str	r5, [sp]
   11170:	ldr	r0, [sp, #28]
   11174:	bl	10844 <XrmGetResource@plt>
   11178:	ldr	r1, [pc, #912]	; 11510 <__snprintf_chk@plt+0xbe8>
   1117c:	cmp	r0, #0
   11180:	add	r0, sp, #44	; 0x2c
   11184:	ldrne	r2, [pc, #880]	; 114fc <__snprintf_chk@plt+0xbd4>
   11188:	ldrne	r3, [r2, #292]	; 0x124
   1118c:	addne	r3, r3, #1
   11190:	strne	r3, [r2, #292]	; 0x124
   11194:	ldr	r2, [r4, #4]
   11198:	mov	r3, #512	; 0x200
   1119c:	str	r1, [sp, #8]
   111a0:	str	r2, [sp, #4]
   111a4:	mov	r1, r3
   111a8:	mov	r2, #1
   111ac:	str	r6, [sp]
   111b0:	bl	10928 <__snprintf_chk@plt>
   111b4:	add	r3, sp, #32
   111b8:	mov	r2, #0
   111bc:	add	r1, sp, #44	; 0x2c
   111c0:	str	r5, [sp]
   111c4:	ldr	r0, [sp, #28]
   111c8:	bl	10844 <XrmGetResource@plt>
   111cc:	ldr	r1, [pc, #832]	; 11514 <__snprintf_chk@plt+0xbec>
   111d0:	cmp	r0, #0
   111d4:	add	r0, sp, #44	; 0x2c
   111d8:	ldrne	r2, [pc, #796]	; 114fc <__snprintf_chk@plt+0xbd4>
   111dc:	ldrne	r3, [r2, #192]	; 0xc0
   111e0:	addne	r3, r3, #1
   111e4:	strne	r3, [r2, #192]	; 0xc0
   111e8:	ldr	r2, [r4, #4]
   111ec:	mov	r3, #512	; 0x200
   111f0:	str	r1, [sp, #8]
   111f4:	str	r2, [sp, #4]
   111f8:	mov	r1, r3
   111fc:	mov	r2, #1
   11200:	str	r6, [sp]
   11204:	bl	10928 <__snprintf_chk@plt>
   11208:	str	r5, [sp]
   1120c:	add	r3, sp, #32
   11210:	mov	r2, #0
   11214:	add	r1, sp, #44	; 0x2c
   11218:	ldr	r0, [sp, #28]
   1121c:	bl	10844 <XrmGetResource@plt>
   11220:	cmp	r0, #0
   11224:	beq	11274 <__snprintf_chk@plt+0x94c>
   11228:	ldr	r9, [sp, #40]	; 0x28
   1122c:	ldr	r8, [pc, #740]	; 11518 <__snprintf_chk@plt+0xbf0>
   11230:	ldr	fp, [pc, #740]	; 1151c <__snprintf_chk@plt+0xbf4>
   11234:	ldr	r1, [r8, #16]
   11238:	mov	r0, r9
   1123c:	bl	1082c <strcmp@plt>
   11240:	cmp	r0, #0
   11244:	beq	114c4 <__snprintf_chk@plt+0xb9c>
   11248:	mov	r1, fp
   1124c:	mov	r0, r9
   11250:	bl	1082c <strcmp@plt>
   11254:	add	r7, r7, #1
   11258:	add	r8, r8, #20
   1125c:	cmp	r0, #0
   11260:	ldreq	r3, [r8, #-16]
   11264:	addeq	r3, r3, #1
   11268:	streq	r3, [r8, #-16]
   1126c:	cmp	r7, #6
   11270:	bne	11234 <__snprintf_chk@plt+0x90c>
   11274:	ldr	r2, [r4, #4]
   11278:	ldr	r1, [pc, #672]	; 11520 <__snprintf_chk@plt+0xbf8>
   1127c:	mov	r3, #512	; 0x200
   11280:	str	r1, [sp, #8]
   11284:	str	r2, [sp, #4]
   11288:	mov	r1, r3
   1128c:	mov	r2, #1
   11290:	str	r6, [sp]
   11294:	add	r0, sp, #44	; 0x2c
   11298:	bl	10928 <__snprintf_chk@plt>
   1129c:	add	r3, sp, #32
   112a0:	mov	r2, #0
   112a4:	add	r1, sp, #44	; 0x2c
   112a8:	str	r5, [sp]
   112ac:	ldr	r0, [sp, #28]
   112b0:	bl	10844 <XrmGetResource@plt>
   112b4:	ldr	r2, [r4, #4]
   112b8:	ldr	r1, [pc, #612]	; 11524 <__snprintf_chk@plt+0xbfc>
   112bc:	str	r2, [sp, #4]
   112c0:	str	r1, [sp, #8]
   112c4:	mov	r2, #1
   112c8:	str	r6, [sp]
   112cc:	cmp	r0, #0
   112d0:	add	r0, sp, #44	; 0x2c
   112d4:	ldrne	r3, [sp, #40]	; 0x28
   112d8:	strne	r3, [r4, #12]
   112dc:	mov	r3, #512	; 0x200
   112e0:	mov	r1, r3
   112e4:	bl	10928 <__snprintf_chk@plt>
   112e8:	add	r3, sp, #32
   112ec:	mov	r2, #0
   112f0:	add	r1, sp, #44	; 0x2c
   112f4:	str	r5, [sp]
   112f8:	ldr	r0, [sp, #28]
   112fc:	bl	10844 <XrmGetResource@plt>
   11300:	ldr	r1, [pc, #544]	; 11528 <__snprintf_chk@plt+0xc00>
   11304:	cmp	r0, #0
   11308:	add	r0, sp, #44	; 0x2c
   1130c:	ldrne	r2, [pc, #488]	; 114fc <__snprintf_chk@plt+0xbd4>
   11310:	ldrne	r3, [r2, #232]	; 0xe8
   11314:	addne	r3, r3, #1
   11318:	strne	r3, [r2, #232]	; 0xe8
   1131c:	ldr	r2, [r4, #4]
   11320:	mov	r3, #512	; 0x200
   11324:	str	r1, [sp, #8]
   11328:	str	r2, [sp, #4]
   1132c:	mov	r1, r3
   11330:	mov	r2, #1
   11334:	str	r6, [sp]
   11338:	bl	10928 <__snprintf_chk@plt>
   1133c:	add	r3, sp, #32
   11340:	mov	r2, #0
   11344:	add	r1, sp, #44	; 0x2c
   11348:	str	r5, [sp]
   1134c:	ldr	r0, [sp, #28]
   11350:	bl	10844 <XrmGetResource@plt>
   11354:	ldr	r1, [pc, #464]	; 1152c <__snprintf_chk@plt+0xc04>
   11358:	cmp	r0, #0
   1135c:	add	r0, sp, #44	; 0x2c
   11360:	ldrne	r2, [pc, #404]	; 114fc <__snprintf_chk@plt+0xbd4>
   11364:	ldrne	r3, [r2, #272]	; 0x110
   11368:	addne	r3, r3, #1
   1136c:	strne	r3, [r2, #272]	; 0x110
   11370:	ldr	r2, [r4, #4]
   11374:	mov	r3, #512	; 0x200
   11378:	str	r1, [sp, #8]
   1137c:	str	r2, [sp, #4]
   11380:	mov	r1, r3
   11384:	mov	r2, #1
   11388:	str	r6, [sp]
   1138c:	bl	10928 <__snprintf_chk@plt>
   11390:	add	r3, sp, #32
   11394:	mov	r2, #0
   11398:	add	r1, sp, #44	; 0x2c
   1139c:	str	r5, [sp]
   113a0:	ldr	r0, [sp, #28]
   113a4:	bl	10844 <XrmGetResource@plt>
   113a8:	ldr	r2, [r4, #4]
   113ac:	ldr	r1, [pc, #380]	; 11530 <__snprintf_chk@plt+0xc08>
   113b0:	str	r2, [sp, #4]
   113b4:	str	r1, [sp, #8]
   113b8:	mov	r2, #1
   113bc:	str	r6, [sp]
   113c0:	cmp	r0, #0
   113c4:	add	r0, sp, #44	; 0x2c
   113c8:	ldrne	r3, [r4, #16]
   113cc:	addne	r3, r3, #1
   113d0:	strne	r3, [r4, #16]
   113d4:	mov	r3, #512	; 0x200
   113d8:	mov	r1, r3
   113dc:	bl	10928 <__snprintf_chk@plt>
   113e0:	add	r3, sp, #32
   113e4:	mov	r2, #0
   113e8:	add	r1, sp, #44	; 0x2c
   113ec:	str	r5, [sp]
   113f0:	ldr	r0, [sp, #28]
   113f4:	bl	10844 <XrmGetResource@plt>
   113f8:	ldr	r1, [pc, #308]	; 11534 <__snprintf_chk@plt+0xc0c>
   113fc:	cmp	r0, #0
   11400:	add	r0, sp, #44	; 0x2c
   11404:	ldrne	r2, [pc, #240]	; 114fc <__snprintf_chk@plt+0xbd4>
   11408:	ldrne	r3, [r2, #252]	; 0xfc
   1140c:	addne	r3, r3, #1
   11410:	strne	r3, [r2, #252]	; 0xfc
   11414:	ldr	r2, [r4, #4]
   11418:	mov	r3, #512	; 0x200
   1141c:	str	r1, [sp, #8]
   11420:	str	r2, [sp, #4]
   11424:	mov	r1, r3
   11428:	mov	r2, #1
   1142c:	str	r6, [sp]
   11430:	bl	10928 <__snprintf_chk@plt>
   11434:	add	r3, sp, #32
   11438:	mov	r2, #0
   1143c:	add	r1, sp, #44	; 0x2c
   11440:	str	r5, [sp]
   11444:	ldr	r0, [sp, #28]
   11448:	bl	10844 <XrmGetResource@plt>
   1144c:	ldr	r2, [r4, #4]
   11450:	ldr	r1, [pc, #224]	; 11538 <__snprintf_chk@plt+0xc10>
   11454:	str	r2, [sp, #4]
   11458:	str	r1, [sp, #8]
   1145c:	mov	r2, #1
   11460:	str	r6, [sp]
   11464:	cmp	r0, #0
   11468:	add	r0, sp, #44	; 0x2c
   1146c:	ldrne	r3, [r4, #20]
   11470:	addne	r3, r3, #1
   11474:	strne	r3, [r4, #20]
   11478:	mov	r3, #512	; 0x200
   1147c:	mov	r1, r3
   11480:	bl	10928 <__snprintf_chk@plt>
   11484:	add	r3, sp, #32
   11488:	mov	r2, #0
   1148c:	str	r5, [sp]
   11490:	add	r1, sp, #44	; 0x2c
   11494:	ldr	r0, [sp, #28]
   11498:	bl	10844 <XrmGetResource@plt>
   1149c:	ldr	r2, [sp, #556]	; 0x22c
   114a0:	cmp	r0, #0
   114a4:	ldrne	r3, [r4, #24]
   114a8:	addne	r3, r3, #1
   114ac:	strne	r3, [r4, #24]
   114b0:	ldr	r3, [sl]
   114b4:	cmp	r2, r3
   114b8:	bne	114e0 <__snprintf_chk@plt+0xbb8>
   114bc:	add	sp, sp, #564	; 0x234
   114c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114c4:	ldr	r3, [pc, #48]	; 114fc <__snprintf_chk@plt+0xbd4>
   114c8:	mov	r2, #20
   114cc:	mla	r7, r2, r7, r3
   114d0:	ldr	r3, [r7, #196]	; 0xc4
   114d4:	add	r3, r3, #1
   114d8:	str	r3, [r7, #196]	; 0xc4
   114dc:	b	11274 <__snprintf_chk@plt+0x94c>
   114e0:	bl	1085c <__stack_chk_fail@plt>
   114e4:	mov	r0, #1
   114e8:	bl	10fd0 <__snprintf_chk@plt+0x6a8>
   114ec:	mov	r0, r3
   114f0:	bl	10fd0 <__snprintf_chk@plt+0x6a8>
   114f4:	strdeq	r1, [r2], -r0
   114f8:			; <UNDEFINED> instruction: 0x000221b0
   114fc:	andeq	r2, r2, r0, ror r0
   11500:	andeq	r1, r1, r0, lsl #16
   11504:	strdeq	r1, [r1], -r8
   11508:	andeq	r1, r1, r8, lsl #16
   1150c:	andeq	r1, r1, r0, lsl r8
   11510:	andeq	r1, r1, r8, lsl r8
   11514:	andeq	r1, r1, r4, lsr #16
   11518:	andeq	r2, r2, r0, lsr r1
   1151c:	andeq	r1, r1, ip, lsr #16
   11520:	andeq	r1, r1, r0, lsr r8
   11524:	andeq	r1, r1, ip, lsr r8
   11528:	andeq	r1, r1, r4, asr #16
   1152c:	andeq	r1, r1, ip, asr #16
   11530:	andeq	r1, r1, r4, asr r8
   11534:	andeq	r1, r1, ip, asr r8
   11538:	andeq	r1, r1, r8, ror #16
   1153c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11540:	mov	r7, r0
   11544:	ldr	r6, [pc, #72]	; 11594 <__snprintf_chk@plt+0xc6c>
   11548:	ldr	r5, [pc, #72]	; 11598 <__snprintf_chk@plt+0xc70>
   1154c:	add	r6, pc, r6
   11550:	add	r5, pc, r5
   11554:	sub	r6, r6, r5
   11558:	mov	r8, r1
   1155c:	mov	r9, r2
   11560:	bl	1080c <strcmp@plt-0x20>
   11564:	asrs	r6, r6, #2
   11568:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1156c:	mov	r4, #0
   11570:	add	r4, r4, #1
   11574:	ldr	r3, [r5], #4
   11578:	mov	r2, r9
   1157c:	mov	r1, r8
   11580:	mov	r0, r7
   11584:	blx	r3
   11588:	cmp	r6, r4
   1158c:	bne	11570 <__snprintf_chk@plt+0xc48>
   11590:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11594:	muleq	r1, r8, r9
   11598:	muleq	r1, r0, r9
   1159c:	bx	lr

Disassembly of section .fini:

000115a0 <.fini>:
   115a0:	push	{r3, lr}
   115a4:	pop	{r3, pc}
