
raspbian-preinstalled/ss:     file format elf32-littlearm


Disassembly of section .init:

00011ab0 <.init>:
   11ab0:	push	{r3, lr}
   11ab4:	bl	138b8 <mount@plt+0x1800>
   11ab8:	pop	{r3, pc}

Disassembly of section .plt:

00011abc <calloc@plt-0x14>:
   11abc:	push	{lr}		; (str lr, [sp, #-4]!)
   11ac0:	ldr	lr, [pc, #4]	; 11acc <calloc@plt-0x4>
   11ac4:	add	lr, pc, lr
   11ac8:	ldr	pc, [lr, #8]!
   11acc:	andeq	sl, r2, r4, lsr r5

00011ad0 <calloc@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #172032	; 0x2a000
   11ad8:	ldr	pc, [ip, #1332]!	; 0x534

00011adc <strstr@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #172032	; 0x2a000
   11ae4:	ldr	pc, [ip, #1324]!	; 0x52c

00011ae8 <raise@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #172032	; 0x2a000
   11af0:	ldr	pc, [ip, #1316]!	; 0x524

00011af4 <__getdelim@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #172032	; 0x2a000
   11afc:	ldr	pc, [ip, #1308]!	; 0x51c

00011b00 <is_selinux_enabled@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #172032	; 0x2a000
   11b08:	ldr	pc, [ip, #1300]!	; 0x514

00011b0c <strcmp@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #172032	; 0x2a000
   11b14:	ldr	pc, [ip, #1292]!	; 0x50c

00011b18 <strtol@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #172032	; 0x2a000
   11b20:	ldr	pc, [ip, #1284]!	; 0x504

00011b24 <setsockopt@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #172032	; 0x2a000
   11b2c:	ldr	pc, [ip, #1276]!	; 0x4fc

00011b30 <strcspn@plt>:
   11b30:	add	ip, pc, #0, 12
   11b34:	add	ip, ip, #172032	; 0x2a000
   11b38:	ldr	pc, [ip, #1268]!	; 0x4f4

00011b3c <getprotobyname@plt>:
   11b3c:	add	ip, pc, #0, 12
   11b40:	add	ip, ip, #172032	; 0x2a000
   11b44:	ldr	pc, [ip, #1260]!	; 0x4ec

00011b48 <fflush@plt>:
   11b48:	add	ip, pc, #0, 12
   11b4c:	add	ip, ip, #172032	; 0x2a000
   11b50:	ldr	pc, [ip, #1252]!	; 0x4e4

00011b54 <if_indextoname@plt>:
   11b54:	add	ip, pc, #0, 12
   11b58:	add	ip, ip, #172032	; 0x2a000
   11b5c:	ldr	pc, [ip, #1244]!	; 0x4dc

00011b60 <getuid@plt>:
   11b60:	add	ip, pc, #0, 12
   11b64:	add	ip, ip, #172032	; 0x2a000
   11b68:	ldr	pc, [ip, #1236]!	; 0x4d4

00011b6c <strchrnul@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #172032	; 0x2a000
   11b74:	ldr	pc, [ip, #1228]!	; 0x4cc

00011b78 <free@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #172032	; 0x2a000
   11b80:	ldr	pc, [ip, #1220]!	; 0x4c4

00011b84 <unshare@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #172032	; 0x2a000
   11b8c:	ldr	pc, [ip, #1212]!	; 0x4bc

00011b90 <fgets@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #172032	; 0x2a000
   11b98:	ldr	pc, [ip, #1204]!	; 0x4b4

00011b9c <ferror@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #172032	; 0x2a000
   11ba4:	ldr	pc, [ip, #1196]!	; 0x4ac

00011ba8 <inet_pton@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #172032	; 0x2a000
   11bb0:	ldr	pc, [ip, #1188]!	; 0x4a4

00011bb4 <__vsnprintf_chk@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #172032	; 0x2a000
   11bbc:	ldr	pc, [ip, #1180]!	; 0x49c

00011bc0 <memcpy@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #172032	; 0x2a000
   11bc8:	ldr	pc, [ip, #1172]!	; 0x494

00011bcc <gethostbyname2@plt>:
   11bcc:	add	ip, pc, #0, 12
   11bd0:	add	ip, ip, #172032	; 0x2a000
   11bd4:	ldr	pc, [ip, #1164]!	; 0x48c

00011bd8 <time@plt>:
   11bd8:	add	ip, pc, #0, 12
   11bdc:	add	ip, ip, #172032	; 0x2a000
   11be0:	ldr	pc, [ip, #1156]!	; 0x484

00011be4 <sendmsg@plt>:
   11be4:	add	ip, pc, #0, 12
   11be8:	add	ip, ip, #172032	; 0x2a000
   11bec:	ldr	pc, [ip, #1148]!	; 0x47c

00011bf0 <ftell@plt>:
   11bf0:	add	ip, pc, #0, 12
   11bf4:	add	ip, ip, #172032	; 0x2a000
   11bf8:	ldr	pc, [ip, #1140]!	; 0x474

00011bfc <memcmp@plt>:
   11bfc:	add	ip, pc, #0, 12
   11c00:	add	ip, ip, #172032	; 0x2a000
   11c04:	ldr	pc, [ip, #1132]!	; 0x46c

00011c08 <mnl_attr_parse@plt>:
   11c08:	add	ip, pc, #0, 12
   11c0c:	add	ip, ip, #172032	; 0x2a000
   11c10:	ldr	pc, [ip, #1124]!	; 0x464

00011c14 <gethostbyaddr@plt>:
   11c14:	add	ip, pc, #0, 12
   11c18:	add	ip, ip, #172032	; 0x2a000
   11c1c:	ldr	pc, [ip, #1116]!	; 0x45c

00011c20 <strdup@plt>:
   11c20:	add	ip, pc, #0, 12
   11c24:	add	ip, ip, #172032	; 0x2a000
   11c28:	ldr	pc, [ip, #1108]!	; 0x454

00011c2c <__stack_chk_fail@plt>:
   11c2c:	add	ip, pc, #0, 12
   11c30:	add	ip, ip, #172032	; 0x2a000
   11c34:	ldr	pc, [ip, #1100]!	; 0x44c

00011c38 <getprotobynumber@plt>:
   11c38:	add	ip, pc, #0, 12
   11c3c:	add	ip, ip, #172032	; 0x2a000
   11c40:	ldr	pc, [ip, #1092]!	; 0x444

00011c44 <sysconf@plt>:
   11c44:	add	ip, pc, #0, 12
   11c48:	add	ip, ip, #172032	; 0x2a000
   11c4c:	ldr	pc, [ip, #1084]!	; 0x43c

00011c50 <realloc@plt>:
   11c50:	add	ip, pc, #0, 12
   11c54:	add	ip, ip, #172032	; 0x2a000
   11c58:	ldr	pc, [ip, #1076]!	; 0x434

00011c5c <setns@plt>:
   11c5c:	add	ip, pc, #0, 12
   11c60:	add	ip, ip, #172032	; 0x2a000
   11c64:	ldr	pc, [ip, #1068]!	; 0x42c

00011c68 <strcasecmp@plt>:
   11c68:	add	ip, pc, #0, 12
   11c6c:	add	ip, ip, #172032	; 0x2a000
   11c70:	ldr	pc, [ip, #1060]!	; 0x424

00011c74 <geteuid@plt>:
   11c74:	add	ip, pc, #0, 12
   11c78:	add	ip, ip, #172032	; 0x2a000
   11c7c:	ldr	pc, [ip, #1052]!	; 0x41c

00011c80 <perror@plt>:
   11c80:	add	ip, pc, #0, 12
   11c84:	add	ip, ip, #172032	; 0x2a000
   11c88:	ldr	pc, [ip, #1044]!	; 0x414

00011c8c <readlink@plt>:
   11c8c:	add	ip, pc, #0, 12
   11c90:	add	ip, ip, #172032	; 0x2a000
   11c94:	ldr	pc, [ip, #1036]!	; 0x40c

00011c98 <__memcpy_chk@plt>:
   11c98:	add	ip, pc, #0, 12
   11c9c:	add	ip, ip, #172032	; 0x2a000
   11ca0:	ldr	pc, [ip, #1028]!	; 0x404

00011ca4 <sethostent@plt>:
   11ca4:	add	ip, pc, #0, 12
   11ca8:	add	ip, ip, #172032	; 0x2a000
   11cac:	ldr	pc, [ip, #1020]!	; 0x3fc

00011cb0 <fwrite@plt>:
   11cb0:	add	ip, pc, #0, 12
   11cb4:	add	ip, ip, #172032	; 0x2a000
   11cb8:	ldr	pc, [ip, #1012]!	; 0x3f4

00011cbc <strcat@plt>:
   11cbc:	add	ip, pc, #0, 12
   11cc0:	add	ip, ip, #172032	; 0x2a000
   11cc4:	ldr	pc, [ip, #1004]!	; 0x3ec

00011cc8 <ioctl@plt>:
   11cc8:	add	ip, pc, #0, 12
   11ccc:	add	ip, ip, #172032	; 0x2a000
   11cd0:	ldr	pc, [ip, #996]!	; 0x3e4

00011cd4 <asctime@plt>:
   11cd4:	add	ip, pc, #0, 12
   11cd8:	add	ip, ip, #172032	; 0x2a000
   11cdc:	ldr	pc, [ip, #988]!	; 0x3dc

00011ce0 <strtoll@plt>:
   11ce0:	add	ip, pc, #0, 12
   11ce4:	add	ip, ip, #172032	; 0x2a000
   11ce8:	ldr	pc, [ip, #980]!	; 0x3d4

00011cec <strcpy@plt>:
   11cec:	add	ip, pc, #0, 12
   11cf0:	add	ip, ip, #172032	; 0x2a000
   11cf4:	ldr	pc, [ip, #972]!	; 0x3cc

00011cf8 <gettimeofday@plt>:
   11cf8:	add	ip, pc, #0, 12
   11cfc:	add	ip, ip, #172032	; 0x2a000
   11d00:	ldr	pc, [ip, #964]!	; 0x3c4

00011d04 <fread@plt>:
   11d04:	add	ip, pc, #0, 12
   11d08:	add	ip, ip, #172032	; 0x2a000
   11d0c:	ldr	pc, [ip, #956]!	; 0x3bc

00011d10 <cap_get_flag@plt>:
   11d10:	add	ip, pc, #0, 12
   11d14:	add	ip, ip, #172032	; 0x2a000
   11d18:	ldr	pc, [ip, #948]!	; 0x3b4

00011d1c <opendir@plt>:
   11d1c:	add	ip, pc, #0, 12
   11d20:	add	ip, ip, #172032	; 0x2a000
   11d24:	ldr	pc, [ip, #940]!	; 0x3ac

00011d28 <umount2@plt>:
   11d28:	add	ip, pc, #0, 12
   11d2c:	add	ip, ip, #172032	; 0x2a000
   11d30:	ldr	pc, [ip, #932]!	; 0x3a4

00011d34 <fnmatch@plt>:
   11d34:	add	ip, pc, #0, 12
   11d38:	add	ip, ip, #172032	; 0x2a000
   11d3c:	ldr	pc, [ip, #924]!	; 0x39c

00011d40 <open64@plt>:
   11d40:	add	ip, pc, #0, 12
   11d44:	add	ip, ip, #172032	; 0x2a000
   11d48:	ldr	pc, [ip, #916]!	; 0x394

00011d4c <getenv@plt>:
   11d4c:	add	ip, pc, #0, 12
   11d50:	add	ip, ip, #172032	; 0x2a000
   11d54:	ldr	pc, [ip, #908]!	; 0x38c

00011d58 <puts@plt>:
   11d58:	add	ip, pc, #0, 12
   11d5c:	add	ip, ip, #172032	; 0x2a000
   11d60:	ldr	pc, [ip, #900]!	; 0x384

00011d64 <cap_set_proc@plt>:
   11d64:	add	ip, pc, #0, 12
   11d68:	add	ip, ip, #172032	; 0x2a000
   11d6c:	ldr	pc, [ip, #892]!	; 0x37c

00011d70 <malloc@plt>:
   11d70:	add	ip, pc, #0, 12
   11d74:	add	ip, ip, #172032	; 0x2a000
   11d78:	ldr	pc, [ip, #884]!	; 0x374

00011d7c <__libc_start_main@plt>:
   11d7c:	add	ip, pc, #0, 12
   11d80:	add	ip, ip, #172032	; 0x2a000
   11d84:	ldr	pc, [ip, #876]!	; 0x36c

00011d88 <strerror@plt>:
   11d88:	add	ip, pc, #0, 12
   11d8c:	add	ip, ip, #172032	; 0x2a000
   11d90:	ldr	pc, [ip, #868]!	; 0x364

00011d94 <strftime@plt>:
   11d94:	add	ip, pc, #0, 12
   11d98:	add	ip, ip, #172032	; 0x2a000
   11d9c:	ldr	pc, [ip, #860]!	; 0x35c

00011da0 <__vfprintf_chk@plt>:
   11da0:	add	ip, pc, #0, 12
   11da4:	add	ip, ip, #172032	; 0x2a000
   11da8:	ldr	pc, [ip, #852]!	; 0x354

00011dac <localtime@plt>:
   11dac:	add	ip, pc, #0, 12
   11db0:	add	ip, ip, #172032	; 0x2a000
   11db4:	ldr	pc, [ip, #844]!	; 0x34c

00011db8 <__gmon_start__@plt>:
   11db8:	add	ip, pc, #0, 12
   11dbc:	add	ip, ip, #172032	; 0x2a000
   11dc0:	ldr	pc, [ip, #836]!	; 0x344

00011dc4 <getopt_long@plt>:
   11dc4:	add	ip, pc, #0, 12
   11dc8:	add	ip, ip, #172032	; 0x2a000
   11dcc:	ldr	pc, [ip, #828]!	; 0x33c

00011dd0 <__ctype_b_loc@plt>:
   11dd0:	add	ip, pc, #0, 12
   11dd4:	add	ip, ip, #172032	; 0x2a000
   11dd8:	ldr	pc, [ip, #820]!	; 0x334

00011ddc <exit@plt>:
   11ddc:	add	ip, pc, #0, 12
   11de0:	add	ip, ip, #172032	; 0x2a000
   11de4:	ldr	pc, [ip, #812]!	; 0x32c

00011de8 <getfilecon@plt>:
   11de8:	add	ip, pc, #0, 12
   11dec:	add	ip, ip, #172032	; 0x2a000
   11df0:	ldr	pc, [ip, #804]!	; 0x324

00011df4 <strtoul@plt>:
   11df4:	add	ip, pc, #0, 12
   11df8:	add	ip, ip, #172032	; 0x2a000
   11dfc:	ldr	pc, [ip, #796]!	; 0x31c

00011e00 <strlen@plt>:
   11e00:	add	ip, pc, #0, 12
   11e04:	add	ip, ip, #172032	; 0x2a000
   11e08:	ldr	pc, [ip, #788]!	; 0x314

00011e0c <strchr@plt>:
   11e0c:	add	ip, pc, #0, 12
   11e10:	add	ip, ip, #172032	; 0x2a000
   11e14:	ldr	pc, [ip, #780]!	; 0x30c

00011e18 <__errno_location@plt>:
   11e18:	add	ip, pc, #0, 12
   11e1c:	add	ip, ip, #172032	; 0x2a000
   11e20:	ldr	pc, [ip, #772]!	; 0x304

00011e24 <setservent@plt>:
   11e24:	add	ip, pc, #0, 12
   11e28:	add	ip, ip, #172032	; 0x2a000
   11e2c:	ldr	pc, [ip, #764]!	; 0x2fc

00011e30 <cap_get_proc@plt>:
   11e30:	add	ip, pc, #0, 12
   11e34:	add	ip, ip, #172032	; 0x2a000
   11e38:	ldr	pc, [ip, #756]!	; 0x2f4

00011e3c <getservbyname@plt>:
   11e3c:	add	ip, pc, #0, 12
   11e40:	add	ip, ip, #172032	; 0x2a000
   11e44:	ldr	pc, [ip, #748]!	; 0x2ec

00011e48 <__sprintf_chk@plt>:
   11e48:	add	ip, pc, #0, 12
   11e4c:	add	ip, ip, #172032	; 0x2a000
   11e50:	ldr	pc, [ip, #740]!	; 0x2e4

00011e54 <snprintf@plt>:
   11e54:	add	ip, pc, #0, 12
   11e58:	add	ip, ip, #172032	; 0x2a000
   11e5c:	ldr	pc, [ip, #732]!	; 0x2dc

00011e60 <bind@plt>:
   11e60:	add	ip, pc, #0, 12
   11e64:	add	ip, ip, #172032	; 0x2a000
   11e68:	ldr	pc, [ip, #724]!	; 0x2d4

00011e6c <getservbyport@plt>:
   11e6c:	add	ip, pc, #0, 12
   11e70:	add	ip, ip, #172032	; 0x2a000
   11e74:	ldr	pc, [ip, #716]!	; 0x2cc

00011e78 <memset@plt>:
   11e78:	add	ip, pc, #0, 12
   11e7c:	add	ip, ip, #172032	; 0x2a000
   11e80:	ldr	pc, [ip, #708]!	; 0x2c4

00011e84 <putchar@plt>:
   11e84:	add	ip, pc, #0, 12
   11e88:	add	ip, ip, #172032	; 0x2a000
   11e8c:	ldr	pc, [ip, #700]!	; 0x2bc

00011e90 <strncpy@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #172032	; 0x2a000
   11e98:	ldr	pc, [ip, #692]!	; 0x2b4

00011e9c <fscanf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #172032	; 0x2a000
   11ea4:	ldr	pc, [ip, #684]!	; 0x2ac

00011ea8 <strtoull@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #172032	; 0x2a000
   11eb0:	ldr	pc, [ip, #676]!	; 0x2a4

00011eb4 <mnl_attr_validate@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #172032	; 0x2a000
   11ebc:	ldr	pc, [ip, #668]!	; 0x29c

00011ec0 <__printf_chk@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #172032	; 0x2a000
   11ec8:	ldr	pc, [ip, #660]!	; 0x294

00011ecc <statvfs64@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #172032	; 0x2a000
   11ed4:	ldr	pc, [ip, #652]!	; 0x28c

00011ed8 <strtod@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #172032	; 0x2a000
   11ee0:	ldr	pc, [ip, #644]!	; 0x284

00011ee4 <fileno@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #172032	; 0x2a000
   11eec:	ldr	pc, [ip, #636]!	; 0x27c

00011ef0 <__fprintf_chk@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #172032	; 0x2a000
   11ef8:	ldr	pc, [ip, #628]!	; 0x274

00011efc <mnl_attr_get_str@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #172032	; 0x2a000
   11f04:	ldr	pc, [ip, #620]!	; 0x26c

00011f08 <mnl_attr_type_valid@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #172032	; 0x2a000
   11f10:	ldr	pc, [ip, #612]!	; 0x264

00011f14 <fclose@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #172032	; 0x2a000
   11f1c:	ldr	pc, [ip, #604]!	; 0x25c

00011f20 <mnl_attr_get_type@plt>:
   11f20:	add	ip, pc, #0, 12
   11f24:	add	ip, ip, #172032	; 0x2a000
   11f28:	ldr	pc, [ip, #596]!	; 0x254

00011f2c <mnl_nlmsg_get_payload_len@plt>:
   11f2c:	add	ip, pc, #0, 12
   11f30:	add	ip, ip, #172032	; 0x2a000
   11f34:	ldr	pc, [ip, #588]!	; 0x24c

00011f38 <strnlen@plt>:
   11f38:	add	ip, pc, #0, 12
   11f3c:	add	ip, ip, #172032	; 0x2a000
   11f40:	ldr	pc, [ip, #580]!	; 0x244

00011f44 <security_get_initial_context@plt>:
   11f44:	add	ip, pc, #0, 12
   11f48:	add	ip, ip, #172032	; 0x2a000
   11f4c:	ldr	pc, [ip, #572]!	; 0x23c

00011f50 <__fread_chk@plt>:
   11f50:	add	ip, pc, #0, 12
   11f54:	add	ip, ip, #172032	; 0x2a000
   11f58:	ldr	pc, [ip, #564]!	; 0x234

00011f5c <popen@plt>:
   11f5c:	add	ip, pc, #0, 12
   11f60:	add	ip, ip, #172032	; 0x2a000
   11f64:	ldr	pc, [ip, #556]!	; 0x22c

00011f68 <setbuffer@plt>:
   11f68:	add	ip, pc, #0, 12
   11f6c:	add	ip, ip, #172032	; 0x2a000
   11f70:	ldr	pc, [ip, #548]!	; 0x224

00011f74 <strrchr@plt>:
   11f74:	add	ip, pc, #0, 12
   11f78:	add	ip, ip, #172032	; 0x2a000
   11f7c:	ldr	pc, [ip, #540]!	; 0x21c

00011f80 <cap_clear@plt>:
   11f80:	add	ip, pc, #0, 12
   11f84:	add	ip, ip, #172032	; 0x2a000
   11f88:	ldr	pc, [ip, #532]!	; 0x214

00011f8c <fputc@plt>:
   11f8c:	add	ip, pc, #0, 12
   11f90:	add	ip, ip, #172032	; 0x2a000
   11f94:	ldr	pc, [ip, #524]!	; 0x20c

00011f98 <mnl_nlmsg_get_payload@plt>:
   11f98:	add	ip, pc, #0, 12
   11f9c:	add	ip, ip, #172032	; 0x2a000
   11fa0:	ldr	pc, [ip, #516]!	; 0x204

00011fa4 <sscanf@plt>:
   11fa4:	add	ip, pc, #0, 12
   11fa8:	add	ip, ip, #172032	; 0x2a000
   11fac:	ldr	pc, [ip, #508]!	; 0x1fc

00011fb0 <readdir64@plt>:
   11fb0:	add	ip, pc, #0, 12
   11fb4:	add	ip, ip, #172032	; 0x2a000
   11fb8:	ldr	pc, [ip, #500]!	; 0x1f4

00011fbc <cap_free@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #172032	; 0x2a000
   11fc4:	ldr	pc, [ip, #492]!	; 0x1ec

00011fc8 <mnl_attr_get_u32@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #172032	; 0x2a000
   11fd0:	ldr	pc, [ip, #484]!	; 0x1e4

00011fd4 <putc@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #172032	; 0x2a000
   11fdc:	ldr	pc, [ip, #476]!	; 0x1dc

00011fe0 <getsockname@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #172032	; 0x2a000
   11fe8:	ldr	pc, [ip, #468]!	; 0x1d4

00011fec <recvmsg@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #172032	; 0x2a000
   11ff4:	ldr	pc, [ip, #460]!	; 0x1cc

00011ff8 <fopen64@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #172032	; 0x2a000
   12000:	ldr	pc, [ip, #452]!	; 0x1c4

00012004 <inet_ntop@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #172032	; 0x2a000
   1200c:	ldr	pc, [ip, #444]!	; 0x1bc

00012010 <socket@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #172032	; 0x2a000
   12018:	ldr	pc, [ip, #436]!	; 0x1b4

0001201c <if_nametoindex@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #172032	; 0x2a000
   12024:	ldr	pc, [ip, #428]!	; 0x1ac

00012028 <isatty@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #172032	; 0x2a000
   12030:	ldr	pc, [ip, #420]!	; 0x1a4

00012034 <getpidcon@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #172032	; 0x2a000
   1203c:	ldr	pc, [ip, #412]!	; 0x19c

00012040 <strncmp@plt>:
   12040:	add	ip, pc, #0, 12
   12044:	add	ip, ip, #172032	; 0x2a000
   12048:	ldr	pc, [ip, #404]!	; 0x194

0001204c <abort@plt>:
   1204c:	add	ip, pc, #0, 12
   12050:	add	ip, ip, #172032	; 0x2a000
   12054:	ldr	pc, [ip, #396]!	; 0x18c

00012058 <recv@plt>:
   12058:	add	ip, pc, #0, 12
   1205c:	add	ip, ip, #172032	; 0x2a000
   12060:	ldr	pc, [ip, #388]!	; 0x184

00012064 <close@plt>:
   12064:	add	ip, pc, #0, 12
   12068:	add	ip, ip, #172032	; 0x2a000
   1206c:	ldr	pc, [ip, #380]!	; 0x17c

00012070 <send@plt>:
   12070:	add	ip, pc, #0, 12
   12074:	add	ip, ip, #172032	; 0x2a000
   12078:	ldr	pc, [ip, #372]!	; 0x174

0001207c <closedir@plt>:
   1207c:	add	ip, pc, #0, 12
   12080:	add	ip, ip, #172032	; 0x2a000
   12084:	ldr	pc, [ip, #364]!	; 0x16c

00012088 <__snprintf_chk@plt>:
   12088:	add	ip, pc, #0, 12
   1208c:	add	ip, ip, #172032	; 0x2a000
   12090:	ldr	pc, [ip, #356]!	; 0x164

00012094 <strspn@plt>:
   12094:	add	ip, pc, #0, 12
   12098:	add	ip, ip, #172032	; 0x2a000
   1209c:	ldr	pc, [ip, #348]!	; 0x15c

000120a0 <__assert_fail@plt>:
   120a0:	add	ip, pc, #0, 12
   120a4:	add	ip, ip, #172032	; 0x2a000
   120a8:	ldr	pc, [ip, #340]!	; 0x154

000120ac <pclose@plt>:
   120ac:	add	ip, pc, #0, 12
   120b0:	add	ip, ip, #172032	; 0x2a000
   120b4:	ldr	pc, [ip, #332]!	; 0x14c

000120b8 <mount@plt>:
   120b8:	add	ip, pc, #0, 12
   120bc:	add	ip, ip, #172032	; 0x2a000
   120c0:	ldr	pc, [ip, #324]!	; 0x144

Disassembly of section .text:

000120c8 <.text>:
   120c8:	ldr	r3, [pc, #4072]	; 130b8 <mount@plt+0x1000>
   120cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120d0:	mov	r5, r0
   120d4:	ldr	sl, [pc, #4064]	; 130bc <mount@plt+0x1004>
   120d8:	ldr	r9, [pc, #4064]	; 130c0 <mount@plt+0x1008>
   120dc:	ldr	r8, [pc, #4064]	; 130c4 <mount@plt+0x100c>
   120e0:	sub	sp, sp, #188	; 0xbc
   120e4:	ldr	r3, [r3]
   120e8:	mov	r6, r1
   120ec:	mov	fp, #0
   120f0:	str	r3, [sp, #180]	; 0xb4
   120f4:	str	fp, [sp, #8]
   120f8:	str	fp, [sp, #20]
   120fc:	str	fp, [sp, #16]
   12100:	str	fp, [sp, #12]
   12104:	mov	r7, #0
   12108:	str	r7, [sp]
   1210c:	add	r3, sl, #8
   12110:	mov	r2, r9
   12114:	mov	r1, r6
   12118:	mov	r0, r5
   1211c:	bl	11dc4 <getopt_long@plt>
   12120:	cmn	r0, #1
   12124:	beq	12950 <mount@plt+0x898>
   12128:	sub	r0, r0, #48	; 0x30
   1212c:	cmp	r0, #210	; 0xd2
   12130:	ldrls	pc, [pc, r0, lsl #2]
   12134:	b	12d54 <mount@plt+0xc9c>
   12138:			; <UNDEFINED> instruction: 0x000126b8
   1213c:	andeq	r2, r1, r4, asr sp
   12140:	andeq	r2, r1, r4, asr sp
   12144:	andeq	r2, r1, r4, asr sp
   12148:	strdeq	r2, [r1], -r8
   1214c:	andeq	r2, r1, r4, asr sp
   12150:	ldrdeq	r2, [r1], -r8
   12154:	andeq	r2, r1, r4, asr sp
   12158:	andeq	r2, r1, r4, asr sp
   1215c:	andeq	r2, r1, r4, asr sp
   12160:	andeq	r2, r1, r4, asr sp
   12164:	andeq	r2, r1, r4, asr sp
   12168:	andeq	r2, r1, r4, asr sp
   1216c:	andeq	r2, r1, r4, asr sp
   12170:	andeq	r2, r1, r4, asr sp
   12174:	andeq	r2, r1, r4, asr sp
   12178:	andeq	r2, r1, r4, asr sp
   1217c:	muleq	r1, r0, r5
   12180:	andeq	r2, r1, r4, asr sp
   12184:	andeq	r2, r1, r4, asr sp
   12188:	andeq	r2, r1, r0, lsl #11
   1218c:	andeq	r2, r1, r4, ror r5
   12190:	andeq	r2, r1, ip, lsr #10
   12194:	andeq	r2, r1, r4, asr sp
   12198:	andeq	r2, r1, ip, lsl r5
   1219c:	andeq	r2, r1, r4, asr sp
   121a0:	andeq	r2, r1, r4, asr sp
   121a4:	andeq	r2, r1, r0, lsl r5
   121a8:	andeq	r2, r1, r4, asr sp
   121ac:	andeq	r2, r1, r4, asr sp
   121b0:	strdeq	r2, [r1], -r4
   121b4:	andeq	r2, r1, r4, asr sp
   121b8:	andeq	r2, r1, r4, asr sp
   121bc:	andeq	r2, r1, r4, asr sp
   121c0:	andeq	r2, r1, r4, asr sp
   121c4:	andeq	r2, r1, r8, asr #9
   121c8:	andeq	r2, r1, r4, asr sp
   121cc:	andeq	r2, r1, r4, asr sp
   121d0:			; <UNDEFINED> instruction: 0x000124b0
   121d4:	andeq	r2, r1, r4, asr sp
   121d8:	andeq	r2, r1, r4, asr sp
   121dc:	andeq	r2, r1, r4, asr sp
   121e0:	muleq	r1, r0, r4
   121e4:	andeq	r2, r1, r4, asr sp
   121e8:	andeq	r2, r1, r4, asr sp
   121ec:	andeq	r2, r1, r4, asr sp
   121f0:	andeq	r2, r1, r4, asr sp
   121f4:	andeq	r2, r1, r4, asr sp
   121f8:	andeq	r2, r1, r4, asr sp
   121fc:	andeq	r2, r1, ip, lsl #17
   12200:	andeq	r2, r1, r4, ror r8
   12204:	andeq	r2, r1, r4, asr sp
   12208:	andeq	r2, r1, ip, asr r8
   1220c:	andeq	r2, r1, r0, asr #16
   12210:	strdeq	r2, [r1], -r0
   12214:	andeq	r2, r1, r4, asr sp
   12218:	andeq	r2, r1, r0, asr sp
   1221c:	andeq	r2, r1, r4, ror #15
   12220:	andeq	r2, r1, r4, asr sp
   12224:	andeq	r2, r1, r4, asr sp
   12228:	ldrdeq	r2, [r1], -ip
   1222c:	ldrdeq	r2, [r1], -r0
   12230:	andeq	r2, r1, r0, asr #15
   12234:			; <UNDEFINED> instruction: 0x000127b4
   12238:	andeq	r2, r1, r0, lsr #15
   1223c:	andeq	r2, r1, r4, asr sp
   12240:	muleq	r1, r0, r7
   12244:	andeq	r2, r1, r4, lsl #15
   12248:	andeq	r2, r1, ip, ror #14
   1224c:	andeq	r2, r1, r8, asr r7
   12250:			; <UNDEFINED> instruction: 0x000124b0
   12254:	andeq	r2, r1, r0, lsr r7
   12258:	andeq	r2, r1, r0, lsl #13
   1225c:	andeq	r2, r1, r4, asr sp
   12260:	andeq	r2, r1, r4, lsl #9
   12264:	andeq	r2, r1, r4, asr sp
   12268:	andeq	r2, r1, r4, asr sp
   1226c:	andeq	r2, r1, r4, asr sp
   12270:	andeq	r2, r1, r4, asr sp
   12274:	andeq	r2, r1, r4, asr sp
   12278:	andeq	r2, r1, r4, asr sp
   1227c:	andeq	r2, r1, r4, asr sp
   12280:	andeq	r2, r1, r4, asr sp
   12284:	andeq	r2, r1, r4, asr sp
   12288:	andeq	r2, r1, r4, asr sp
   1228c:	andeq	r2, r1, r4, asr sp
   12290:	andeq	r2, r1, r4, asr sp
   12294:	andeq	r2, r1, r4, asr sp
   12298:	andeq	r2, r1, r4, asr sp
   1229c:	andeq	r2, r1, r4, asr sp
   122a0:	andeq	r2, r1, r4, asr sp
   122a4:	andeq	r2, r1, r4, asr sp
   122a8:	andeq	r2, r1, r4, asr sp
   122ac:	andeq	r2, r1, r4, asr sp
   122b0:	andeq	r2, r1, r4, asr sp
   122b4:	andeq	r2, r1, r4, asr sp
   122b8:	andeq	r2, r1, r4, asr sp
   122bc:	andeq	r2, r1, r4, asr sp
   122c0:	andeq	r2, r1, r4, asr sp
   122c4:	andeq	r2, r1, r4, asr sp
   122c8:	andeq	r2, r1, r4, asr sp
   122cc:	andeq	r2, r1, r4, asr sp
   122d0:	andeq	r2, r1, r4, asr sp
   122d4:	andeq	r2, r1, r4, asr sp
   122d8:	andeq	r2, r1, r4, asr sp
   122dc:	andeq	r2, r1, r4, asr sp
   122e0:	andeq	r2, r1, r4, asr sp
   122e4:	andeq	r2, r1, r4, asr sp
   122e8:	andeq	r2, r1, r4, asr sp
   122ec:	andeq	r2, r1, r4, asr sp
   122f0:	andeq	r2, r1, r4, asr sp
   122f4:	andeq	r2, r1, r4, asr sp
   122f8:	andeq	r2, r1, r4, asr sp
   122fc:	andeq	r2, r1, r4, asr sp
   12300:	andeq	r2, r1, r4, asr sp
   12304:	andeq	r2, r1, r4, asr sp
   12308:	andeq	r2, r1, r4, asr sp
   1230c:	andeq	r2, r1, r4, asr sp
   12310:	andeq	r2, r1, r4, asr sp
   12314:	andeq	r2, r1, r4, asr sp
   12318:	andeq	r2, r1, r4, asr sp
   1231c:	andeq	r2, r1, r4, asr sp
   12320:	andeq	r2, r1, r4, asr sp
   12324:	andeq	r2, r1, r4, asr sp
   12328:	andeq	r2, r1, r4, asr sp
   1232c:	andeq	r2, r1, r4, asr sp
   12330:	andeq	r2, r1, r4, asr sp
   12334:	andeq	r2, r1, r4, asr sp
   12338:	andeq	r2, r1, r4, asr sp
   1233c:	andeq	r2, r1, r4, asr sp
   12340:	andeq	r2, r1, r4, asr sp
   12344:	andeq	r2, r1, r4, asr sp
   12348:	andeq	r2, r1, r4, asr sp
   1234c:	andeq	r2, r1, r4, asr sp
   12350:	andeq	r2, r1, r4, asr sp
   12354:	andeq	r2, r1, r4, asr sp
   12358:	andeq	r2, r1, r4, asr sp
   1235c:	andeq	r2, r1, r4, asr sp
   12360:	andeq	r2, r1, r4, asr sp
   12364:	andeq	r2, r1, r4, asr sp
   12368:	andeq	r2, r1, r4, asr sp
   1236c:	andeq	r2, r1, r4, asr sp
   12370:	andeq	r2, r1, r4, asr sp
   12374:	andeq	r2, r1, r4, asr sp
   12378:	andeq	r2, r1, r4, asr sp
   1237c:	andeq	r2, r1, r4, asr sp
   12380:	andeq	r2, r1, r4, asr sp
   12384:	andeq	r2, r1, r4, asr sp
   12388:	andeq	r2, r1, r4, asr sp
   1238c:	andeq	r2, r1, r4, asr sp
   12390:	andeq	r2, r1, r4, asr sp
   12394:	andeq	r2, r1, r4, asr sp
   12398:	andeq	r2, r1, r4, asr sp
   1239c:	andeq	r2, r1, r4, asr sp
   123a0:	andeq	r2, r1, r4, asr sp
   123a4:	andeq	r2, r1, r4, asr sp
   123a8:	andeq	r2, r1, r4, asr sp
   123ac:	andeq	r2, r1, r4, asr sp
   123b0:	andeq	r2, r1, r4, asr sp
   123b4:	andeq	r2, r1, r4, asr sp
   123b8:	andeq	r2, r1, r4, asr sp
   123bc:	andeq	r2, r1, r4, asr sp
   123c0:	andeq	r2, r1, r4, asr sp
   123c4:	andeq	r2, r1, r4, asr sp
   123c8:	andeq	r2, r1, r4, asr sp
   123cc:	andeq	r2, r1, r4, asr sp
   123d0:	andeq	r2, r1, r4, asr sp
   123d4:	andeq	r2, r1, r4, asr sp
   123d8:	andeq	r2, r1, r4, asr sp
   123dc:	andeq	r2, r1, r4, asr sp
   123e0:	andeq	r2, r1, r4, asr sp
   123e4:	andeq	r2, r1, r4, asr sp
   123e8:	andeq	r2, r1, r4, asr sp
   123ec:	andeq	r2, r1, r4, asr sp
   123f0:	andeq	r2, r1, r4, asr sp
   123f4:	andeq	r2, r1, r4, asr sp
   123f8:	andeq	r2, r1, r4, asr sp
   123fc:	andeq	r2, r1, r4, asr sp
   12400:	andeq	r2, r1, r4, asr sp
   12404:	andeq	r2, r1, r4, asr sp
   12408:	andeq	r2, r1, r4, asr sp
   1240c:	andeq	r2, r1, r4, asr sp
   12410:	andeq	r2, r1, r4, asr sp
   12414:	andeq	r2, r1, r4, asr sp
   12418:	andeq	r2, r1, r4, asr sp
   1241c:	andeq	r2, r1, r4, asr sp
   12420:	andeq	r2, r1, r4, asr sp
   12424:	andeq	r2, r1, r4, asr sp
   12428:	andeq	r2, r1, r4, asr sp
   1242c:	andeq	r2, r1, r4, asr sp
   12430:	andeq	r2, r1, r4, asr sp
   12434:	andeq	r2, r1, r4, asr sp
   12438:	andeq	r2, r1, r4, asr sp
   1243c:	andeq	r2, r1, r4, asr sp
   12440:	andeq	r2, r1, r4, asr sp
   12444:	andeq	r2, r1, r4, asr sp
   12448:	andeq	r2, r1, r4, asr sp
   1244c:	andeq	r2, r1, r4, asr sp
   12450:	andeq	r2, r1, r4, asr sp
   12454:	andeq	r2, r1, r4, asr sp
   12458:	andeq	r2, r1, r4, asr sp
   1245c:	andeq	r2, r1, r4, asr sp
   12460:	andeq	r2, r1, r4, asr sp
   12464:	andeq	r2, r1, r4, asr sp
   12468:	andeq	r2, r1, r4, asr sp
   1246c:	andeq	r2, r1, r4, asr sp
   12470:	andeq	r2, r1, r4, asr sp
   12474:	andeq	r2, r1, r4, asr sp
   12478:	andeq	r2, r1, r8, asr #12
   1247c:	andeq	r2, r1, r0, lsl r6
   12480:	andeq	r2, r1, ip, ror #13
   12484:	ldr	r3, [r8, #1264]	; 0x4f0
   12488:	add	r3, r3, #1
   1248c:	str	r3, [r8, #1264]	; 0x4f0
   12490:	bl	11b00 <is_selinux_enabled@plt>
   12494:	cmp	r0, #0
   12498:	ble	13558 <mount@plt+0x14a0>
   1249c:	ldr	r3, [r8, #1260]	; 0x4ec
   124a0:	add	r3, r3, #1
   124a4:	str	r3, [r8, #1260]	; 0x4ec
   124a8:	bl	13da8 <mount@plt+0x1cf0>
   124ac:	b	12104 <mount@plt+0x4c>
   124b0:	ldr	r2, [pc, #3076]	; 130bc <mount@plt+0x1004>
   124b4:	ldr	r1, [pc, #3084]	; 130c8 <mount@plt+0x1010>
   124b8:	mov	r0, #1
   124bc:	bl	11ec0 <__printf_chk@plt>
   124c0:	mov	r0, #0
   124c4:	bl	11ddc <exit@plt>
   124c8:	ldr	r3, [r8, #1300]	; 0x514
   124cc:	ldr	r2, [r8, #1296]	; 0x510
   124d0:	orr	r3, r3, #2864	; 0xb30
   124d4:	orr	r3, r3, #7
   124d8:	orr	r2, r2, #1024	; 0x400
   124dc:	str	r2, [r8, #1296]	; 0x510
   124e0:	ldr	r2, [pc, #3044]	; 130cc <mount@plt+0x1014>
   124e4:	str	r3, [r8, #1300]	; 0x514
   124e8:	mov	r3, #0
   124ec:	str	r3, [r2, #224]	; 0xe0
   124f0:	b	12104 <mount@plt+0x4c>
   124f4:	ldr	r3, [pc, #3028]	; 130d0 <mount@plt+0x1018>
   124f8:	ldr	r0, [r3]
   124fc:	bl	21e68 <mount@plt+0xfdb0>
   12500:	cmp	r0, #0
   12504:	beq	12104 <mount@plt+0x4c>
   12508:	mov	r0, #1
   1250c:	bl	11ddc <exit@plt>
   12510:	mov	r3, #1
   12514:	strb	r3, [r8, #1316]	; 0x524
   12518:	b	12104 <mount@plt+0x4c>
   1251c:	ldr	r2, [pc, #2984]	; 130cc <mount@plt+0x1014>
   12520:	mov	r3, #0
   12524:	str	r3, [r2, #228]	; 0xe4
   12528:	b	12104 <mount@plt+0x4c>
   1252c:	ldr	r3, [sp, #8]
   12530:	cmp	r3, #0
   12534:	bne	13648 <mount@plt+0x1590>
   12538:	ldr	r3, [pc, #2960]	; 130d0 <mount@plt+0x1018>
   1253c:	ldr	r0, [r3]
   12540:	ldrb	r3, [r0]
   12544:	cmp	r3, #45	; 0x2d
   12548:	bne	12940 <mount@plt+0x888>
   1254c:	ldr	r3, [pc, #2944]	; 130d4 <mount@plt+0x101c>
   12550:	ldr	r3, [r3]
   12554:	str	r3, [sp, #8]
   12558:	ldr	r3, [sp, #8]
   1255c:	cmp	r3, #0
   12560:	bne	12104 <mount@plt+0x4c>
   12564:	ldr	r0, [pc, #2924]	; 130d8 <mount@plt+0x1020>
   12568:	bl	11c80 <perror@plt>
   1256c:	mvn	r0, #0
   12570:	bl	11ddc <exit@plt>
   12574:	mov	r3, #1
   12578:	str	r3, [r8, #1336]	; 0x538
   1257c:	b	12104 <mount@plt+0x4c>
   12580:	ldr	r3, [pc, #2888]	; 130d0 <mount@plt+0x1018>
   12584:	ldr	r3, [r3]
   12588:	str	r3, [sp, #20]
   1258c:	b	12104 <mount@plt+0x4c>
   12590:	ldr	r2, [sp, #12]
   12594:	cmp	r2, #0
   12598:	beq	12924 <mount@plt+0x86c>
   1259c:	ldr	r3, [pc, #2860]	; 130d0 <mount@plt+0x1018>
   125a0:	ldr	r4, [r3]
   125a4:	mov	r1, #44	; 0x2c
   125a8:	mov	r0, r4
   125ac:	bl	11e0c <strchr@plt>
   125b0:	subs	r7, r0, #0
   125b4:	beq	12894 <mount@plt+0x7dc>
   125b8:	mov	r3, #0
   125bc:	strb	r3, [r7]
   125c0:	mov	r0, r4
   125c4:	bl	1a4e8 <mount@plt+0x8430>
   125c8:	cmp	r0, #0
   125cc:	bne	128a4 <mount@plt+0x7ec>
   125d0:	add	r4, r7, #1
   125d4:	b	125a4 <mount@plt+0x4ec>
   125d8:	ldr	r1, [pc, #3052]	; 131cc <mount@plt+0x1114>
   125dc:	ldr	r3, [r8, #1300]	; 0x514
   125e0:	orr	r3, r3, #2864	; 0xb30
   125e4:	ldr	r2, [r1, #8]
   125e8:	orr	r3, r3, #7
   125ec:	str	r3, [r8, #1300]	; 0x514
   125f0:	ldr	r3, [pc, #2772]	; 130cc <mount@plt+0x1014>
   125f4:	orr	r2, r2, #1024	; 0x400
   125f8:	str	r2, [r1, #8]
   125fc:	mov	r1, #0
   12600:	mov	r2, #10
   12604:	str	r1, [r3, #224]	; 0xe0
   12608:	str	r2, [r8, #1328]	; 0x530
   1260c:	b	12104 <mount@plt+0x4c>
   12610:	ldr	r1, [pc, #2996]	; 131cc <mount@plt+0x1114>
   12614:	ldr	r3, [r8, #1300]	; 0x514
   12618:	orr	r3, r3, #1152	; 0x480
   1261c:	ldr	r2, [r1, #8]
   12620:	orr	r3, r3, #2
   12624:	str	r3, [r8, #1300]	; 0x514
   12628:	ldr	r3, [pc, #2716]	; 130cc <mount@plt+0x1014>
   1262c:	orr	r2, r2, #1073741824	; 0x40000000
   12630:	str	r2, [r1, #8]
   12634:	mov	r1, #0
   12638:	mov	r2, #30
   1263c:	str	r1, [r3, #224]	; 0xe0
   12640:	str	r2, [r8, #1328]	; 0x530
   12644:	b	12104 <mount@plt+0x4c>
   12648:	ldr	r1, [pc, #2940]	; 131cc <mount@plt+0x1114>
   1264c:	ldr	r3, [r8, #1300]	; 0x514
   12650:	orr	r3, r3, #2864	; 0xb30
   12654:	ldr	r2, [r1, #12]
   12658:	orr	r3, r3, #7
   1265c:	str	r3, [r8, #1300]	; 0x514
   12660:	ldr	r3, [pc, #2660]	; 130cc <mount@plt+0x1014>
   12664:	orr	r2, r2, #256	; 0x100
   12668:	str	r2, [r1, #12]
   1266c:	mov	r1, #0
   12670:	mov	r2, #40	; 0x28
   12674:	str	r1, [r3, #224]	; 0xe0
   12678:	str	r2, [r8, #1328]	; 0x530
   1267c:	b	12104 <mount@plt+0x4c>
   12680:	ldr	r1, [pc, #2884]	; 131cc <mount@plt+0x1114>
   12684:	ldr	r3, [r8, #1300]	; 0x514
   12688:	orr	r3, r3, #2864	; 0xb30
   1268c:	ldr	r2, [r1, #8]
   12690:	orr	r3, r3, #7
   12694:	str	r3, [r8, #1300]	; 0x514
   12698:	ldr	r3, [pc, #2604]	; 130cc <mount@plt+0x1014>
   1269c:	orr	r2, r2, #2
   126a0:	str	r2, [r1, #8]
   126a4:	mov	r1, #0
   126a8:	mov	r2, #1
   126ac:	str	r1, [r3, #224]	; 0xe0
   126b0:	str	r2, [r8, #1328]	; 0x530
   126b4:	b	12104 <mount@plt+0x4c>
   126b8:	ldr	r1, [pc, #2828]	; 131cc <mount@plt+0x1114>
   126bc:	ldr	r3, [r8, #1300]	; 0x514
   126c0:	ldr	r2, [r1, #8]
   126c4:	orr	r3, r3, #128	; 0x80
   126c8:	str	r3, [r8, #1300]	; 0x514
   126cc:	ldr	r3, [pc, #2552]	; 130cc <mount@plt+0x1014>
   126d0:	orr	r2, r2, #131072	; 0x20000
   126d4:	str	r2, [r1, #8]
   126d8:	mov	r1, #0
   126dc:	mov	r2, #17
   126e0:	str	r1, [r3, #224]	; 0xe0
   126e4:	str	r2, [r8, #1328]	; 0x530
   126e8:	b	12104 <mount@plt+0x4c>
   126ec:	mov	r3, #1
   126f0:	str	r3, [r8, #1272]	; 0x4f8
   126f4:	b	12104 <mount@plt+0x4c>
   126f8:	ldr	r1, [pc, #2764]	; 131cc <mount@plt+0x1114>
   126fc:	ldr	r3, [r8, #1300]	; 0x514
   12700:	orr	r3, r3, #2864	; 0xb30
   12704:	ldr	r2, [r1, #8]
   12708:	orr	r3, r3, #7
   1270c:	str	r3, [r8, #1300]	; 0x514
   12710:	ldr	r3, [pc, #2484]	; 130cc <mount@plt+0x1014>
   12714:	orr	r2, r2, #4
   12718:	str	r2, [r1, #8]
   1271c:	mov	r1, #0
   12720:	mov	r2, #2
   12724:	str	r1, [r3, #224]	; 0xe0
   12728:	str	r2, [r8, #1328]	; 0x530
   1272c:	b	12104 <mount@plt+0x4c>
   12730:	ldr	r2, [r8, #1300]	; 0x514
   12734:	ldr	r3, [r8, #1296]	; 0x510
   12738:	orr	r2, r2, #2
   1273c:	orr	r3, r3, #8
   12740:	str	r3, [r8, #1296]	; 0x510
   12744:	ldr	r3, [pc, #2432]	; 130cc <mount@plt+0x1014>
   12748:	str	r2, [r8, #1300]	; 0x514
   1274c:	mov	r2, #0
   12750:	str	r2, [r3, #224]	; 0xe0
   12754:	b	12104 <mount@plt+0x4c>
   12758:	ldr	r2, [r8, #1300]	; 0x514
   1275c:	ldr	r3, [r8, #1296]	; 0x510
   12760:	orr	r2, r2, #2
   12764:	orr	r3, r3, #4
   12768:	b	12740 <mount@plt+0x688>
   1276c:	ldr	r3, [r8, #1300]	; 0x514
   12770:	ldr	r2, [r8, #1296]	; 0x510
   12774:	orr	r3, r3, #2864	; 0xb30
   12778:	orr	r3, r3, #7
   1277c:	orr	r2, r2, #1
   12780:	b	124dc <mount@plt+0x424>
   12784:	mov	r3, #1
   12788:	str	r3, [sp, #16]
   1278c:	b	12104 <mount@plt+0x4c>
   12790:	ldr	r3, [pc, #2372]	; 130dc <mount@plt+0x1024>
   12794:	mov	r2, #1
   12798:	str	r2, [r3]
   1279c:	b	12104 <mount@plt+0x4c>
   127a0:	ldr	r3, [r8, #1268]	; 0x4f4
   127a4:	add	r3, r3, #1
   127a8:	str	r3, [r8, #1268]	; 0x4f4
   127ac:	bl	13da8 <mount@plt+0x1cf0>
   127b0:	b	12104 <mount@plt+0x4c>
   127b4:	mov	r3, #1
   127b8:	str	r3, [r8, #1276]	; 0x4fc
   127bc:	b	12104 <mount@plt+0x4c>
   127c0:	ldr	r2, [pc, #2308]	; 130cc <mount@plt+0x1014>
   127c4:	mov	r3, #0
   127c8:	str	r3, [r2, #220]	; 0xdc
   127cc:	b	12104 <mount@plt+0x4c>
   127d0:	mov	r3, #1
   127d4:	str	r3, [r8, #1284]	; 0x504
   127d8:	b	12104 <mount@plt+0x4c>
   127dc:	mov	fp, #1152	; 0x480
   127e0:	b	12104 <mount@plt+0x4c>
   127e4:	mov	r3, #1
   127e8:	str	r3, [r8, #1280]	; 0x500
   127ec:	b	12104 <mount@plt+0x4c>
   127f0:	ldr	r3, [pc, #2264]	; 130d0 <mount@plt+0x1018>
   127f4:	ldr	r1, [pc, #2276]	; 130e0 <mount@plt+0x1028>
   127f8:	ldr	r4, [r3]
   127fc:	mov	r0, r4
   12800:	bl	11b0c <strcmp@plt>
   12804:	cmp	r0, #0
   12808:	bne	128cc <mount@plt+0x814>
   1280c:	ldr	r1, [pc, #2488]	; 131cc <mount@plt+0x1114>
   12810:	ldr	r2, [pc, #2228]	; 130cc <mount@plt+0x1014>
   12814:	ldr	r3, [r8, #1300]	; 0x514
   12818:	str	r0, [r2, #224]	; 0xe0
   1281c:	ldr	r2, [r1, #8]
   12820:	orr	r3, r3, #2864	; 0xb30
   12824:	orr	r2, r2, #4
   12828:	orr	r3, r3, #7
   1282c:	str	r2, [r1, #8]
   12830:	mov	r2, #2
   12834:	str	r3, [r8, #1300]	; 0x514
   12838:	str	r2, [r8, #1328]	; 0x530
   1283c:	b	12104 <mount@plt+0x4c>
   12840:	ldr	r2, [pc, #2204]	; 130e4 <mount@plt+0x102c>
   12844:	mov	r3, #1
   12848:	str	r3, [r8, #1276]	; 0x4fc
   1284c:	ldr	r3, [r2]
   12850:	add	r3, r3, #1
   12854:	str	r3, [r2]
   12858:	b	12104 <mount@plt+0x4c>
   1285c:	ldr	r3, [r8, #1300]	; 0x514
   12860:	ldr	r2, [r8, #1296]	; 0x510
   12864:	orr	r3, r3, #2864	; 0xb30
   12868:	orr	r3, r3, #7
   1286c:	orr	r2, r2, #2
   12870:	b	124dc <mount@plt+0x424>
   12874:	ldr	r3, [r8, #1288]	; 0x508
   12878:	mov	r2, #1
   1287c:	add	r3, r3, r2
   12880:	str	r3, [r8, #1288]	; 0x508
   12884:	str	r2, [r8, #1276]	; 0x4fc
   12888:	b	12104 <mount@plt+0x4c>
   1288c:	ldr	fp, [pc, #2132]	; 130e8 <mount@plt+0x1030>
   12890:	b	12104 <mount@plt+0x4c>
   12894:	mov	r0, r4
   12898:	bl	1a4e8 <mount@plt+0x8430>
   1289c:	cmp	r0, #0
   128a0:	beq	128c0 <mount@plt+0x808>
   128a4:	ldr	r1, [pc, #2328]	; 131c4 <mount@plt+0x110c>
   128a8:	mov	r3, r4
   128ac:	ldr	r2, [pc, #2104]	; 130ec <mount@plt+0x1034>
   128b0:	ldr	r0, [r1]
   128b4:	mov	r1, #1
   128b8:	bl	11ef0 <__fprintf_chk@plt>
   128bc:	bl	15e18 <mount@plt+0x3d60>
   128c0:	mov	r3, #1
   128c4:	str	r3, [sp, #12]
   128c8:	b	12104 <mount@plt+0x4c>
   128cc:	ldr	r1, [pc, #2076]	; 130f0 <mount@plt+0x1038>
   128d0:	mov	r0, r4
   128d4:	bl	11b0c <strcmp@plt>
   128d8:	cmp	r0, #0
   128dc:	beq	12bf4 <mount@plt+0xb3c>
   128e0:	ldr	r1, [pc, #2060]	; 130f4 <mount@plt+0x103c>
   128e4:	mov	r0, r4
   128e8:	bl	11b0c <strcmp@plt>
   128ec:	cmp	r0, #0
   128f0:	bne	12c90 <mount@plt+0xbd8>
   128f4:	ldr	r1, [pc, #2256]	; 131cc <mount@plt+0x1114>
   128f8:	ldr	r2, [pc, #1996]	; 130cc <mount@plt+0x1014>
   128fc:	ldr	r3, [r8, #1300]	; 0x514
   12900:	str	r0, [r2, #224]	; 0xe0
   12904:	ldr	r2, [r1, #8]
   12908:	orr	r3, r3, #128	; 0x80
   1290c:	orr	r2, r2, #131072	; 0x20000
   12910:	str	r2, [r1, #8]
   12914:	mov	r2, #17
   12918:	str	r3, [r8, #1300]	; 0x514
   1291c:	str	r2, [r8, #1328]	; 0x530
   12920:	b	12104 <mount@plt+0x4c>
   12924:	ldr	r3, [pc, #1996]	; 130f8 <mount@plt+0x1040>
   12928:	cmp	fp, #0
   1292c:	moveq	fp, r3
   12930:	ldr	r3, [pc, #1940]	; 130cc <mount@plt+0x1014>
   12934:	str	r2, [r8, #1296]	; 0x510
   12938:	str	r2, [r3, #224]	; 0xe0
   1293c:	b	1259c <mount@plt+0x4e4>
   12940:	ldr	r1, [pc, #1972]	; 130fc <mount@plt+0x1044>
   12944:	bl	11ff8 <fopen64@plt>
   12948:	str	r0, [sp, #8]
   1294c:	b	12558 <mount@plt+0x4a0>
   12950:	ldr	r3, [pc, #1960]	; 13100 <mount@plt+0x1048>
   12954:	ldr	r2, [sp, #16]
   12958:	mov	r4, r0
   1295c:	ldr	r3, [r3]
   12960:	cmp	r2, r7
   12964:	sub	r5, r5, r3
   12968:	add	r6, r6, r3, lsl #2
   1296c:	bne	12c28 <mount@plt+0xb70>
   12970:	cmp	r5, #0
   12974:	ble	12a28 <mount@plt+0x970>
   12978:	sub	r9, r5, #1
   1297c:	bic	r3, r9, #1
   12980:	sub	r9, r5, #2
   12984:	ldr	sl, [pc, #1912]	; 13104 <mount@plt+0x104c>
   12988:	sub	r9, r9, r3
   1298c:	mov	r8, #0
   12990:	b	129c4 <mount@plt+0x90c>
   12994:	cmp	r5, #1
   12998:	beq	133ec <mount@plt+0x1334>
   1299c:	cmp	r8, #0
   129a0:	ldr	r0, [r6, #4]
   129a4:	moveq	fp, #0
   129a8:	bl	167d4 <mount@plt+0x471c>
   129ac:	orr	fp, fp, r0
   129b0:	sub	r5, r5, #2
   129b4:	cmp	r9, r5
   129b8:	add	r6, r6, #8
   129bc:	mov	r8, #1
   129c0:	beq	12a28 <mount@plt+0x970>
   129c4:	ldr	r7, [r6]
   129c8:	mov	r1, sl
   129cc:	mov	r0, r7
   129d0:	bl	11b0c <strcmp@plt>
   129d4:	cmp	r0, #0
   129d8:	beq	12994 <mount@plt+0x8dc>
   129dc:	ldr	r1, [pc, #1828]	; 13108 <mount@plt+0x1050>
   129e0:	mov	r0, r7
   129e4:	bl	11b0c <strcmp@plt>
   129e8:	cmp	r0, #0
   129ec:	beq	12a04 <mount@plt+0x94c>
   129f0:	mov	r0, r7
   129f4:	ldr	r1, [pc, #1808]	; 1310c <mount@plt+0x1054>
   129f8:	bl	11b0c <strcmp@plt>
   129fc:	cmp	r0, #0
   12a00:	bne	12a28 <mount@plt+0x970>
   12a04:	cmp	r5, #1
   12a08:	beq	133ec <mount@plt+0x1334>
   12a0c:	ldr	r3, [pc, #1748]	; 130e8 <mount@plt+0x1030>
   12a10:	cmp	r8, #0
   12a14:	ldr	r0, [r6, #4]
   12a18:	moveq	fp, r3
   12a1c:	bl	167d4 <mount@plt+0x471c>
   12a20:	bic	fp, fp, r0
   12a24:	b	129b0 <mount@plt+0x8f8>
   12a28:	ldr	r8, [pc, #1692]	; 130cc <mount@plt+0x1014>
   12a2c:	ldr	r3, [r8, #224]	; 0xe0
   12a30:	cmp	r3, #0
   12a34:	bne	12bd4 <mount@plt+0xb1c>
   12a38:	cmp	fp, #0
   12a3c:	bne	12be8 <mount@plt+0xb30>
   12a40:	ldr	r7, [pc, #1660]	; 130c4 <mount@plt+0x100c>
   12a44:	mov	sl, #0
   12a48:	ldr	ip, [r7, #1296]	; 0x510
   12a4c:	ldr	lr, [r7, #1304]	; 0x518
   12a50:	ldr	r0, [r7, #1308]	; 0x51c
   12a54:	ldr	r9, [pc, #1716]	; 13110 <mount@plt+0x1058>
   12a58:	mov	r3, sl
   12a5c:	mov	fp, r7
   12a60:	str	r6, [sp, #12]
   12a64:	str	r4, [sp, #16]
   12a68:	asr	r2, ip, r3
   12a6c:	tst	r2, #1
   12a70:	beq	12a98 <mount@plt+0x9e0>
   12a74:	add	r2, r9, r3, lsl #5
   12a78:	ldr	r1, [r2, #8]
   12a7c:	ldr	r2, [r2, #12]
   12a80:	and	r6, r1, lr
   12a84:	and	r7, r2, r0
   12a88:	orrs	r4, r6, r7
   12a8c:	orreq	lr, r1, lr
   12a90:	orreq	r0, r2, r0
   12a94:	moveq	sl, #1
   12a98:	add	r3, r3, #1
   12a9c:	cmp	r3, #14
   12aa0:	bne	12a68 <mount@plt+0x9b0>
   12aa4:	mov	r7, fp
   12aa8:	cmp	sl, #0
   12aac:	ldr	r6, [sp, #12]
   12ab0:	strne	lr, [fp, #1304]	; 0x518
   12ab4:	strne	r0, [fp, #1308]	; 0x51c
   12ab8:	ldr	sl, [pc, #1620]	; 13114 <mount@plt+0x105c>
   12abc:	mov	fp, #0
   12ac0:	ldr	r9, [r7, #1304]	; 0x518
   12ac4:	ldr	r0, [r7, #1308]	; 0x51c
   12ac8:	ldr	r4, [sp, #16]
   12acc:	str	r6, [sp, #12]
   12ad0:	mov	r3, fp
   12ad4:	mov	lr, fp
   12ad8:	mov	r6, r5
   12adc:	str	r4, [sp, #16]
   12ae0:	rsb	r1, r3, #32
   12ae4:	lsr	r2, r9, r3
   12ae8:	orr	r2, r2, r0, lsl r1
   12aec:	sub	r1, r3, #32
   12af0:	mov	r5, lr
   12af4:	orr	r2, r2, r0, lsr r1
   12af8:	and	r4, r2, #1
   12afc:	orrs	r2, r4, r5
   12b00:	beq	12b14 <mount@plt+0xa5c>
   12b04:	ldr	r2, [sl, r3, lsl #5]
   12b08:	tst	ip, r2
   12b0c:	orreq	ip, ip, r2
   12b10:	moveq	fp, #1
   12b14:	add	r3, r3, #1
   12b18:	cmp	r3, #44	; 0x2c
   12b1c:	bne	12ae0 <mount@plt+0xa28>
   12b20:	ldr	r3, [r8, #220]	; 0xdc
   12b24:	cmp	fp, #0
   12b28:	strne	ip, [r7, #1296]	; 0x510
   12b2c:	cmp	r3, #0
   12b30:	mov	r5, r6
   12b34:	ldr	r4, [sp, #16]
   12b38:	ldr	r6, [sp, #12]
   12b3c:	beq	12b64 <mount@plt+0xaac>
   12b40:	ldr	r3, [pc, #1428]	; 130dc <mount@plt+0x1024>
   12b44:	ldr	r3, [r3]
   12b48:	cmp	r3, #0
   12b4c:	beq	12b64 <mount@plt+0xaac>
   12b50:	ldr	r2, [r7, #1296]	; 0x510
   12b54:	ldr	r3, [pc, #1468]	; 13118 <mount@plt+0x1060>
   12b58:	and	r3, r3, r2
   12b5c:	cmp	r3, #0
   12b60:	bne	12d78 <mount@plt+0xcc0>
   12b64:	ldr	r9, [r7, #1296]	; 0x510
   12b68:	cmp	r9, #0
   12b6c:	beq	12c50 <mount@plt+0xb98>
   12b70:	ldr	r0, [pc, #1620]	; 131cc <mount@plt+0x1114>
   12b74:	ldrd	r2, [r0, #8]
   12b78:	orrs	r3, r2, r3
   12b7c:	beq	12c70 <mount@plt+0xbb8>
   12b80:	ldr	sl, [r7, #1300]	; 0x514
   12b84:	cmp	sl, #0
   12b88:	beq	12ce8 <mount@plt+0xc30>
   12b8c:	ldr	r3, [sp, #20]
   12b90:	cmp	r3, #0
   12b94:	beq	12d80 <mount@plt+0xcc8>
   12b98:	ands	r9, r9, #1
   12b9c:	beq	12d58 <mount@plt+0xca0>
   12ba0:	ldr	r3, [sp, #20]
   12ba4:	ldrb	r3, [r3]
   12ba8:	cmp	r3, #45	; 0x2d
   12bac:	bne	12d3c <mount@plt+0xc84>
   12bb0:	ldr	r3, [pc, #1380]	; 1311c <mount@plt+0x1064>
   12bb4:	ldr	r4, [r3]
   12bb8:	mov	r1, #6
   12bbc:	mov	r0, r4
   12bc0:	bl	19f74 <mount@plt+0x7ebc>
   12bc4:	mov	r0, r4
   12bc8:	bl	11b48 <fflush@plt>
   12bcc:	mov	r0, #0
   12bd0:	bl	11ddc <exit@plt>
   12bd4:	ldr	r3, [pc, #1308]	; 130f8 <mount@plt+0x1040>
   12bd8:	cmp	fp, #0
   12bdc:	ldr	r0, [pc, #1340]	; 13120 <mount@plt+0x1068>
   12be0:	moveq	fp, r3
   12be4:	bl	1a4e8 <mount@plt+0x8430>
   12be8:	ldr	r7, [pc, #1236]	; 130c4 <mount@plt+0x100c>
   12bec:	str	fp, [r7, #1300]	; 0x514
   12bf0:	b	12a44 <mount@plt+0x98c>
   12bf4:	ldr	r1, [pc, #1488]	; 131cc <mount@plt+0x1114>
   12bf8:	ldr	r2, [pc, #1228]	; 130cc <mount@plt+0x1014>
   12bfc:	ldr	r3, [r8, #1300]	; 0x514
   12c00:	str	r0, [r2, #224]	; 0xe0
   12c04:	ldr	r2, [r1, #8]
   12c08:	orr	r3, r3, #2864	; 0xb30
   12c0c:	orr	r2, r2, #1024	; 0x400
   12c10:	orr	r3, r3, #7
   12c14:	str	r2, [r1, #8]
   12c18:	mov	r2, #10
   12c1c:	str	r3, [r8, #1300]	; 0x514
   12c20:	str	r2, [r8, #1328]	; 0x530
   12c24:	b	12104 <mount@plt+0x4c>
   12c28:	bl	19888 <mount@plt+0x77d0>
   12c2c:	ldr	r2, [pc, #1176]	; 130cc <mount@plt+0x1014>
   12c30:	clz	r3, r5
   12c34:	lsr	r3, r3, #5
   12c38:	ldr	r2, [r2, #224]	; 0xe0
   12c3c:	cmp	r2, r7
   12c40:	moveq	r3, r7
   12c44:	cmp	r3, r7
   12c48:	beq	12970 <mount@plt+0x8b8>
   12c4c:	b	124c0 <mount@plt+0x408>
   12c50:	ldr	r3, [pc, #1388]	; 131c4 <mount@plt+0x110c>
   12c54:	mov	r2, #47	; 0x2f
   12c58:	mov	r1, #1
   12c5c:	ldr	r3, [r3]
   12c60:	ldr	r0, [pc, #1212]	; 13124 <mount@plt+0x106c>
   12c64:	bl	11cb0 <fwrite@plt>
   12c68:	mov	r0, r9
   12c6c:	bl	11ddc <exit@plt>
   12c70:	ldr	r3, [pc, #1356]	; 131c4 <mount@plt+0x110c>
   12c74:	mov	r2, #42	; 0x2a
   12c78:	mov	r1, #1
   12c7c:	ldr	r3, [r3]
   12c80:	ldr	r0, [pc, #1184]	; 13128 <mount@plt+0x1070>
   12c84:	bl	11cb0 <fwrite@plt>
   12c88:	mov	r0, #0
   12c8c:	bl	11ddc <exit@plt>
   12c90:	ldr	r1, [pc, #1172]	; 1312c <mount@plt+0x1074>
   12c94:	mov	r0, r4
   12c98:	bl	11b0c <strcmp@plt>
   12c9c:	cmp	r0, #0
   12ca0:	beq	12d08 <mount@plt+0xc50>
   12ca4:	ldr	r1, [pc, #1156]	; 13130 <mount@plt+0x1078>
   12ca8:	mov	r0, r4
   12cac:	bl	11b0c <strcmp@plt>
   12cb0:	cmp	r0, #0
   12cb4:	bne	12ee4 <mount@plt+0xe2c>
   12cb8:	ldr	r1, [pc, #1292]	; 131cc <mount@plt+0x1114>
   12cbc:	ldr	r2, [pc, #1032]	; 130cc <mount@plt+0x1014>
   12cc0:	ldr	r3, [r8, #1300]	; 0x514
   12cc4:	str	r0, [r2, #224]	; 0xe0
   12cc8:	ldr	r2, [r1, #8]
   12ccc:	orr	r3, r3, #128	; 0x80
   12cd0:	orr	r2, r2, #65536	; 0x10000
   12cd4:	str	r2, [r1, #8]
   12cd8:	mov	r2, #16
   12cdc:	str	r3, [r8, #1300]	; 0x514
   12ce0:	str	r2, [r8, #1328]	; 0x530
   12ce4:	b	12104 <mount@plt+0x4c>
   12ce8:	ldr	r3, [pc, #1236]	; 131c4 <mount@plt+0x110c>
   12cec:	mov	r2, #47	; 0x2f
   12cf0:	mov	r1, #1
   12cf4:	ldr	r3, [r3]
   12cf8:	ldr	r0, [pc, #1076]	; 13134 <mount@plt+0x107c>
   12cfc:	bl	11cb0 <fwrite@plt>
   12d00:	mov	r0, sl
   12d04:	bl	11ddc <exit@plt>
   12d08:	ldr	r1, [pc, #1212]	; 131cc <mount@plt+0x1114>
   12d0c:	ldr	r2, [pc, #952]	; 130cc <mount@plt+0x1014>
   12d10:	ldr	r3, [r8, #1300]	; 0x514
   12d14:	str	r0, [r2, #224]	; 0xe0
   12d18:	ldr	r2, [r1, #8]
   12d1c:	orr	r3, r3, #2864	; 0xb30
   12d20:	orr	r2, r2, #2
   12d24:	orr	r3, r3, #7
   12d28:	str	r2, [r1, #8]
   12d2c:	mov	r2, #1
   12d30:	str	r3, [r8, #1300]	; 0x514
   12d34:	str	r2, [r8, #1328]	; 0x530
   12d38:	b	12104 <mount@plt+0x4c>
   12d3c:	ldr	r0, [sp, #20]
   12d40:	ldr	r1, [pc, #1008]	; 13138 <mount@plt+0x1080>
   12d44:	bl	11ff8 <fopen64@plt>
   12d48:	mov	r4, r0
   12d4c:	b	12bb8 <mount@plt+0xb00>
   12d50:	bl	15de8 <mount@plt+0x3d30>
   12d54:	bl	15e18 <mount@plt+0x3d60>
   12d58:	ldr	r3, [pc, #1124]	; 131c4 <mount@plt+0x110c>
   12d5c:	mov	r2, #49	; 0x31
   12d60:	mov	r1, #1
   12d64:	ldr	r3, [r3]
   12d68:	ldr	r0, [pc, #972]	; 1313c <mount@plt+0x1084>
   12d6c:	bl	11cb0 <fwrite@plt>
   12d70:	mov	r0, r9
   12d74:	bl	11ddc <exit@plt>
   12d78:	bl	146f8 <mount@plt+0x2640>
   12d7c:	b	12b64 <mount@plt+0xaac>
   12d80:	ldr	r3, [sp, #8]
   12d84:	mov	r2, r6
   12d88:	mov	r1, r5
   12d8c:	add	r0, r0, #16
   12d90:	bl	1c680 <mount@plt+0xa5c8>
   12d94:	cmp	r0, #0
   12d98:	bne	12d54 <mount@plt+0xc9c>
   12d9c:	ldr	r3, [r7, #1296]	; 0x510
   12da0:	sub	r2, r3, #1
   12da4:	tst	r2, r3
   12da8:	moveq	r3, #1
   12dac:	streq	r3, [r8, #16]
   12db0:	ldr	r3, [r7, #1300]	; 0x514
   12db4:	sub	r2, r3, #1
   12db8:	tst	r2, r3
   12dbc:	moveq	r3, #1
   12dc0:	streq	r3, [r8, #40]	; 0x28
   12dc4:	ldr	r3, [r8, #228]	; 0xe4
   12dc8:	cmp	r3, #0
   12dcc:	bne	133a0 <mount@plt+0x12e8>
   12dd0:	ldr	r3, [pc, #836]	; 1311c <mount@plt+0x1064>
   12dd4:	ldr	r0, [r3]
   12dd8:	bl	11b48 <fflush@plt>
   12ddc:	ldr	r3, [r7, #1336]	; 0x538
   12de0:	cmp	r3, #0
   12de4:	bne	136b0 <mount@plt+0x15f8>
   12de8:	ldr	r3, [r7, #1296]	; 0x510
   12dec:	tst	r3, #512	; 0x200
   12df0:	bne	133e4 <mount@plt+0x132c>
   12df4:	ldr	r3, [r7, #1296]	; 0x510
   12df8:	tst	r3, #384	; 0x180
   12dfc:	bne	13340 <mount@plt+0x1288>
   12e00:	ldr	r3, [r7, #1296]	; 0x510
   12e04:	tst	r3, #112	; 0x70
   12e08:	bne	133dc <mount@plt+0x1324>
   12e0c:	ldr	r3, [r7, #1296]	; 0x510
   12e10:	tst	r3, #8
   12e14:	bne	132b0 <mount@plt+0x11f8>
   12e18:	ldr	r3, [r7, #1296]	; 0x510
   12e1c:	tst	r3, #4
   12e20:	bne	13220 <mount@plt+0x1168>
   12e24:	ldr	r3, [r7, #1296]	; 0x510
   12e28:	tst	r3, #1
   12e2c:	bne	131e4 <mount@plt+0x112c>
   12e30:	ldr	r3, [r7, #1296]	; 0x510
   12e34:	tst	r3, #2
   12e38:	bne	13070 <mount@plt+0xfb8>
   12e3c:	ldr	r3, [r7, #1296]	; 0x510
   12e40:	tst	r3, #1024	; 0x400
   12e44:	bne	13028 <mount@plt+0xf70>
   12e48:	ldr	r3, [r7, #1296]	; 0x510
   12e4c:	tst	r3, #6144	; 0x1800
   12e50:	bne	12fb8 <mount@plt+0xf00>
   12e54:	ldr	r3, [r7, #1296]	; 0x510
   12e58:	tst	r3, #8192	; 0x2000
   12e5c:	bne	12f74 <mount@plt+0xebc>
   12e60:	ldr	r3, [r7, #1268]	; 0x4f4
   12e64:	ldr	r1, [r7, #1260]	; 0x4ec
   12e68:	ldr	r2, [r7, #1264]	; 0x4f0
   12e6c:	orr	r3, r3, r1
   12e70:	orrs	r3, r3, r2
   12e74:	beq	12ec0 <mount@plt+0xe08>
   12e78:	ldr	r6, [pc, #704]	; 13140 <mount@plt+0x1088>
   12e7c:	add	r7, r6, #1024	; 0x400
   12e80:	ldr	r4, [r6, #4]!
   12e84:	cmp	r4, #0
   12e88:	beq	12eb8 <mount@plt+0xe00>
   12e8c:	ldr	r0, [r4, #16]
   12e90:	bl	11b78 <free@plt>
   12e94:	ldr	r0, [r4, #20]
   12e98:	bl	11b78 <free@plt>
   12e9c:	ldr	r0, [r4, #24]
   12ea0:	bl	11b78 <free@plt>
   12ea4:	ldr	r5, [r4]
   12ea8:	mov	r0, r4
   12eac:	bl	11b78 <free@plt>
   12eb0:	subs	r4, r5, #0
   12eb4:	bne	12e8c <mount@plt+0xdd4>
   12eb8:	cmp	r7, r6
   12ebc:	bne	12e80 <mount@plt+0xdc8>
   12ec0:	bl	14f04 <mount@plt+0x2e4c>
   12ec4:	ldr	r3, [pc, #492]	; 130b8 <mount@plt+0x1000>
   12ec8:	ldr	r2, [sp, #180]	; 0xb4
   12ecc:	mov	r0, #0
   12ed0:	ldr	r3, [r3]
   12ed4:	cmp	r2, r3
   12ed8:	bne	137ec <mount@plt+0x1734>
   12edc:	add	sp, sp, #188	; 0xbc
   12ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ee4:	ldr	r1, [pc, #600]	; 13144 <mount@plt+0x108c>
   12ee8:	mov	r0, r4
   12eec:	bl	11b0c <strcmp@plt>
   12ef0:	cmp	r0, #0
   12ef4:	bne	12f2c <mount@plt+0xe74>
   12ef8:	ldr	r1, [pc, #716]	; 131cc <mount@plt+0x1114>
   12efc:	ldr	r2, [pc, #456]	; 130cc <mount@plt+0x1014>
   12f00:	ldr	r3, [r8, #1300]	; 0x514
   12f04:	str	r0, [r2, #224]	; 0xe0
   12f08:	ldr	r2, [r1, #8]
   12f0c:	orr	r3, r3, #1152	; 0x480
   12f10:	orr	r2, r2, #1073741824	; 0x40000000
   12f14:	orr	r3, r3, #2
   12f18:	str	r2, [r1, #8]
   12f1c:	mov	r2, #30
   12f20:	str	r3, [r8, #1300]	; 0x514
   12f24:	str	r2, [r8, #1328]	; 0x530
   12f28:	b	12104 <mount@plt+0x4c>
   12f2c:	ldr	r1, [pc, #532]	; 13148 <mount@plt+0x1090>
   12f30:	mov	r0, r4
   12f34:	bl	11b0c <strcmp@plt>
   12f38:	cmp	r0, #0
   12f3c:	bne	135d4 <mount@plt+0x151c>
   12f40:	ldr	r1, [pc, #644]	; 131cc <mount@plt+0x1114>
   12f44:	ldr	r2, [pc, #384]	; 130cc <mount@plt+0x1014>
   12f48:	ldr	r3, [r8, #1300]	; 0x514
   12f4c:	str	r0, [r2, #224]	; 0xe0
   12f50:	ldr	r2, [r1, #12]
   12f54:	orr	r3, r3, #2864	; 0xb30
   12f58:	orr	r2, r2, #256	; 0x100
   12f5c:	orr	r3, r3, #7
   12f60:	str	r2, [r1, #12]
   12f64:	mov	r2, #40	; 0x28
   12f68:	str	r3, [r8, #1300]	; 0x514
   12f6c:	str	r2, [r8, #1328]	; 0x530
   12f70:	b	12104 <mount@plt+0x4c>
   12f74:	ldr	r0, [r7, #1300]	; 0x514
   12f78:	ldr	r2, [pc, #600]	; 131d8 <mount@plt+0x1120>
   12f7c:	mov	r3, #0
   12f80:	ldr	ip, [pc, #596]	; 131dc <mount@plt+0x1124>
   12f84:	str	r3, [sp, #108]	; 0x6c
   12f88:	mov	r1, #24
   12f8c:	str	r3, [sp, #104]	; 0x68
   12f90:	str	r2, [sp, #100]	; 0x64
   12f94:	mov	r3, #30
   12f98:	str	r0, [sp, #112]	; 0x70
   12f9c:	ldr	r2, [pc, #424]	; 1314c <mount@plt+0x1094>
   12fa0:	add	r0, sp, #92	; 0x5c
   12fa4:	str	r1, [sp, #92]	; 0x5c
   12fa8:	str	ip, [sp, #96]	; 0x60
   12fac:	strb	r3, [sp, #108]	; 0x6c
   12fb0:	bl	19ad0 <mount@plt+0x7a18>
   12fb4:	b	12e60 <mount@plt+0xda8>
   12fb8:	ldr	r2, [r7, #1308]	; 0x51c
   12fbc:	mov	r3, #0
   12fc0:	mov	r1, r3
   12fc4:	lsr	r2, r2, #8
   12fc8:	and	r0, r2, #1
   12fcc:	orrs	r2, r0, r1
   12fd0:	ldr	r1, [pc, #516]	; 131dc <mount@plt+0x1124>
   12fd4:	ldr	r2, [pc, #508]	; 131d8 <mount@plt+0x1120>
   12fd8:	str	r3, [sp, #152]	; 0x98
   12fdc:	str	r3, [sp, #156]	; 0x9c
   12fe0:	str	r3, [sp, #160]	; 0xa0
   12fe4:	str	r3, [sp, #164]	; 0xa4
   12fe8:	str	r3, [sp, #168]	; 0xa8
   12fec:	str	r3, [sp, #172]	; 0xac
   12ff0:	str	r3, [sp, #176]	; 0xb0
   12ff4:	mov	r3, #40	; 0x28
   12ff8:	str	r1, [sp, #144]	; 0x90
   12ffc:	str	r2, [sp, #148]	; 0x94
   13000:	str	r3, [sp, #140]	; 0x8c
   13004:	beq	12e54 <mount@plt+0xd9c>
   13008:	ldr	ip, [r7, #1300]	; 0x514
   1300c:	mov	r1, r3
   13010:	ldr	r2, [pc, #312]	; 13150 <mount@plt+0x1098>
   13014:	add	r0, sp, #140	; 0x8c
   13018:	strb	r3, [sp, #156]	; 0x9c
   1301c:	str	ip, [sp, #160]	; 0xa0
   13020:	bl	19ad0 <mount@plt+0x7a18>
   13024:	b	12e54 <mount@plt+0xd9c>
   13028:	ldr	r0, [r7, #1304]	; 0x518
   1302c:	mov	r3, #0
   13030:	lsr	r1, r0, #10
   13034:	orr	r1, r1, r0, lsr #2
   13038:	and	r2, r1, #1
   1303c:	orrs	r3, r2, r3
   13040:	beq	12e48 <mount@plt+0xd90>
   13044:	ldr	r0, [pc, #264]	; 13154 <mount@plt+0x109c>
   13048:	bl	11d4c <getenv@plt>
   1304c:	cmp	r0, #0
   13050:	bne	12e48 <mount@plt+0xd90>
   13054:	ldr	r0, [pc, #376]	; 131d4 <mount@plt+0x111c>
   13058:	bl	11d4c <getenv@plt>
   1305c:	cmp	r0, #0
   13060:	bne	12e48 <mount@plt+0xd90>
   13064:	mov	r1, #132	; 0x84
   13068:	bl	19f74 <mount@plt+0x7ebc>
   1306c:	b	12e48 <mount@plt+0xd90>
   13070:	ldr	r0, [r7, #1304]	; 0x518
   13074:	mov	r3, #0
   13078:	lsr	r1, r0, #10
   1307c:	orr	r1, r1, r0, lsr #2
   13080:	and	r2, r1, #1
   13084:	orrs	r3, r2, r3
   13088:	beq	12e48 <mount@plt+0xd90>
   1308c:	ldr	r0, [pc, #196]	; 13158 <mount@plt+0x10a0>
   13090:	bl	11d4c <getenv@plt>
   13094:	cmp	r0, #0
   13098:	bne	12e3c <mount@plt+0xd84>
   1309c:	ldr	r0, [pc, #304]	; 131d4 <mount@plt+0x111c>
   130a0:	bl	11d4c <getenv@plt>
   130a4:	cmp	r0, #0
   130a8:	bne	12e3c <mount@plt+0xd84>
   130ac:	mov	r1, #33	; 0x21
   130b0:	bl	19f74 <mount@plt+0x7ebc>
   130b4:	b	12e3c <mount@plt+0xd84>
   130b8:	ldrdeq	fp, [r3], -r8
   130bc:	andeq	r7, r2, r0, lsr #22
   130c0:	andeq	r9, r2, r8, ror r8
   130c4:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   130c8:	andeq	r9, r2, ip, lsr r8
   130cc:	andeq	ip, r3, ip, lsr r2
   130d0:	andeq	sp, r3, r8, lsl #31
   130d4:	andeq	sp, r3, r0, lsl #31
   130d8:	andeq	r9, r2, r8, lsr #16
   130dc:	muleq	r4, r4, pc	; <UNPREDICTABLE>
   130e0:	andeq	r9, r2, r4, asr #12
   130e4:	andeq	r1, r4, r4, ror pc
   130e8:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   130ec:	andeq	r9, r2, r4, ror #15
   130f0:			; <UNDEFINED> instruction: 0x000297b0
   130f4:	andeq	sl, r2, r0, ror #28
   130f8:	andeq	r0, r0, r7, lsr fp
   130fc:	andeq	r9, r2, r8, lsr ip
   13100:	andeq	sp, r3, r0, ror pc
   13104:	andeq	r9, r2, r0, lsr #17
   13108:	andeq	r9, r2, r8, lsr #17
   1310c:			; <UNDEFINED> instruction: 0x000298b0
   13110:	ldrdeq	r7, [r2], -r0
   13114:	andeq	r7, r2, r0, lsr #11
   13118:	andeq	r0, r0, r7, ror r4
   1311c:	andeq	sp, r3, r4, lsl #31
   13120:	andeq	r8, r2, r8, lsl pc
   13124:			; <UNDEFINED> instruction: 0x000298b8
   13128:	andeq	r9, r2, r8, ror #17
   1312c:	andeq	r9, r2, r8, asr #13
   13130:	andeq	r9, r2, ip, ror r5
   13134:	andeq	r9, r2, r4, lsl r9
   13138:	andeq	r8, r2, r8, lsr #29
   1313c:	andeq	r9, r2, r4, asr #18
   13140:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   13144:			; <UNDEFINED> instruction: 0x000297b8
   13148:	muleq	r2, r0, r6
   1314c:			; <UNDEFINED> instruction: 0x000172b0
   13150:	andeq	r7, r1, r0, ror #10
   13154:	andeq	r9, r2, r0, asr #20
   13158:	andeq	r9, r2, r0, lsr sl
   1315c:	andeq	r9, r2, r0, lsl sl
   13160:	strdeq	r9, [r2], -r4
   13164:	ldrdeq	r9, [r2], -ip
   13168:	andeq	r9, r2, r0, ror #19
   1316c:	andeq	r9, r2, ip, ror #19
   13170:	andeq	r9, r2, r8, lsr #19
   13174:	andeq	r9, r2, ip, lsr #19
   13178:			; <UNDEFINED> instruction: 0x000299b8
   1317c:	andeq	r9, r2, r8, lsl #19
   13180:	andeq	r9, r2, r8, ror r9
   13184:	andeq	r9, r1, r0, lsl #1
   13188:	andeq	ip, r3, r0, asr #4
   1318c:	andeq	sl, r2, r8, asr #28
   13190:	andeq	r9, r2, r4, lsr #19
   13194:	muleq	r2, r4, r9
   13198:	andeq	r9, r2, r4, lsl sl
   1319c:	andeq	r9, r2, r0, lsr #20
   131a0:	ldrdeq	r9, [r2], -r8
   131a4:	andeq	r9, r2, r8, asr #19
   131a8:	andeq	r7, r1, ip, lsr #2
   131ac:	andeq	r9, r2, ip, lsl #20
   131b0:	strdeq	r9, [r2], -ip
   131b4:	ldrdeq	r7, [r1], -ip
   131b8:	andeq	r9, r2, r8, asr r8
   131bc:	andeq	r9, r2, r0, asr #15
   131c0:	andeq	r9, r2, r8, asr #15
   131c4:	andeq	sp, r3, r8, ror pc
   131c8:	andeq	r9, r2, ip, lsl #16
   131cc:	andeq	lr, r3, r0, lsr #9
   131d0:	ldrdeq	r9, [r1], -r4
   131d4:	andeq	r7, r2, r4, lsl #28
   131d8:	andeq	lr, r1, r0, asr #4
   131dc:	movweq	r0, #4116	; 0x1014
   131e0:	andeq	r8, r1, r4, lsl #25
   131e4:	ldr	r0, [r7, #1304]	; 0x518
   131e8:	mov	r3, #0
   131ec:	lsr	r1, r0, #10
   131f0:	orr	r1, r1, r0, lsr #2
   131f4:	and	r2, r1, #1
   131f8:	orrs	r3, r2, r3
   131fc:	beq	12e30 <mount@plt+0xd78>
   13200:	ldr	r3, [pc, #-172]	; 1315c <mount@plt+0x10a4>
   13204:	ldr	r0, [pc, #-172]	; 13160 <mount@plt+0x10a8>
   13208:	str	r3, [r7, #1252]	; 0x4e4
   1320c:	bl	11d4c <getenv@plt>
   13210:	cmp	r0, #0
   13214:	beq	13424 <mount@plt+0x136c>
   13218:	bl	19d74 <mount@plt+0x7cbc>
   1321c:	b	12e30 <mount@plt+0xd78>
   13220:	ldr	r0, [r7, #1304]	; 0x518
   13224:	mov	r3, #0
   13228:	lsr	r1, r0, #10
   1322c:	orr	r1, r1, r0, lsr #2
   13230:	and	r2, r1, #1
   13234:	orrs	r3, r2, r3
   13238:	beq	12e24 <mount@plt+0xd6c>
   1323c:	ldr	r3, [pc, #-224]	; 13164 <mount@plt+0x10ac>
   13240:	ldr	r0, [pc, #-164]	; 131a4 <mount@plt+0x10ec>
   13244:	str	r3, [r7, #1252]	; 0x4e4
   13248:	bl	11d4c <getenv@plt>
   1324c:	cmp	r0, #0
   13250:	beq	13614 <mount@plt+0x155c>
   13254:	ldr	r1, [r7, #1304]	; 0x518
   13258:	mov	r3, #0
   1325c:	and	r2, r1, #4
   13260:	orrs	r3, r2, r3
   13264:	bne	134e0 <mount@plt+0x1428>
   13268:	ldr	r1, [r7, #1304]	; 0x518
   1326c:	mov	r3, #0
   13270:	and	r2, r1, #1024	; 0x400
   13274:	orrs	r3, r2, r3
   13278:	beq	12e24 <mount@plt+0xd6c>
   1327c:	ldr	r1, [pc, #-284]	; 13168 <mount@plt+0x10b0>
   13280:	ldr	r0, [pc, #-284]	; 1316c <mount@plt+0x10b4>
   13284:	bl	13c64 <mount@plt+0x1bac>
   13288:	subs	r5, r0, #0
   1328c:	beq	12e24 <mount@plt+0xd6c>
   13290:	mov	r2, #10
   13294:	ldr	r1, [pc, #-244]	; 131a8 <mount@plt+0x10f0>
   13298:	bl	1a3f0 <mount@plt+0x8338>
   1329c:	cmp	r0, #0
   132a0:	bne	1359c <mount@plt+0x14e4>
   132a4:	mov	r0, r5
   132a8:	bl	11f14 <fclose@plt>
   132ac:	b	12e24 <mount@plt+0xd6c>
   132b0:	ldr	r0, [r7, #1304]	; 0x518
   132b4:	mov	r3, #0
   132b8:	lsr	r1, r0, #10
   132bc:	orr	r1, r1, r0, lsr #2
   132c0:	and	r2, r1, #1
   132c4:	orrs	r3, r2, r3
   132c8:	beq	12e18 <mount@plt+0xd60>
   132cc:	ldr	r3, [pc, #-356]	; 13170 <mount@plt+0x10b8>
   132d0:	ldr	r0, [pc, #-324]	; 13194 <mount@plt+0x10dc>
   132d4:	str	r3, [r7, #1252]	; 0x4e4
   132d8:	bl	11d4c <getenv@plt>
   132dc:	cmp	r0, #0
   132e0:	beq	13578 <mount@plt+0x14c0>
   132e4:	ldr	r1, [r7, #1304]	; 0x518
   132e8:	mov	r3, #0
   132ec:	and	r2, r1, #4
   132f0:	orrs	r3, r2, r3
   132f4:	bne	133f0 <mount@plt+0x1338>
   132f8:	ldr	r1, [r7, #1304]	; 0x518
   132fc:	mov	r3, #0
   13300:	and	r2, r1, #1024	; 0x400
   13304:	orrs	r3, r2, r3
   13308:	beq	12e18 <mount@plt+0xd60>
   1330c:	ldr	r1, [pc, #-416]	; 13174 <mount@plt+0x10bc>
   13310:	ldr	r0, [pc, #-416]	; 13178 <mount@plt+0x10c0>
   13314:	bl	13c64 <mount@plt+0x1bac>
   13318:	subs	r5, r0, #0
   1331c:	beq	12e18 <mount@plt+0xd60>
   13320:	mov	r2, #10
   13324:	ldr	r1, [pc, #-388]	; 131a8 <mount@plt+0x10f0>
   13328:	bl	1a3f0 <mount@plt+0x8338>
   1332c:	cmp	r0, #0
   13330:	bne	135b8 <mount@plt+0x1500>
   13334:	mov	r0, r5
   13338:	bl	11f14 <fclose@plt>
   1333c:	b	12e18 <mount@plt+0xd60>
   13340:	ldr	r1, [r7, #1304]	; 0x518
   13344:	mov	r3, #0
   13348:	lsr	r1, r1, #17
   1334c:	and	r2, r1, #1
   13350:	orrs	r3, r2, r3
   13354:	beq	12e00 <mount@plt+0xd48>
   13358:	ldr	r3, [r7, #1300]	; 0x514
   1335c:	tst	r3, #128	; 0x80
   13360:	beq	12e00 <mount@plt+0xd48>
   13364:	ldr	r0, [pc, #-492]	; 13180 <mount@plt+0x10c8>
   13368:	bl	11d4c <getenv@plt>
   1336c:	cmp	r0, #0
   13370:	beq	13808 <mount@plt+0x1750>
   13374:	ldr	r1, [pc, #-512]	; 1317c <mount@plt+0x10c4>
   13378:	ldr	r0, [pc, #-512]	; 13180 <mount@plt+0x10c8>
   1337c:	bl	13c64 <mount@plt+0x1bac>
   13380:	subs	r4, r0, #0
   13384:	beq	12e00 <mount@plt+0xd48>
   13388:	mov	r2, #17
   1338c:	ldr	r1, [pc, #-528]	; 13184 <mount@plt+0x10cc>
   13390:	bl	1a3f0 <mount@plt+0x8338>
   13394:	mov	r0, r4
   13398:	bl	11f14 <fclose@plt>
   1339c:	b	12e00 <mount@plt+0xd48>
   133a0:	ldr	r5, [pc, #-544]	; 13188 <mount@plt+0x10d0>
   133a4:	ldr	r6, [pc, #-544]	; 1318c <mount@plt+0x10d4>
   133a8:	b	133b0 <mount@plt+0x12f8>
   133ac:	bl	15f20 <mount@plt+0x3e68>
   133b0:	ldr	r3, [r8]
   133b4:	sub	r2, r3, r5
   133b8:	cmp	r2, #192	; 0xc0
   133bc:	beq	12dd0 <mount@plt+0xd18>
   133c0:	ldr	r2, [r3, #12]
   133c4:	cmp	r2, #0
   133c8:	bne	133ac <mount@plt+0x12f4>
   133cc:	ldr	r1, [r3, #4]
   133d0:	mov	r0, r6
   133d4:	bl	14b8c <mount@plt+0x2ad4>
   133d8:	b	133ac <mount@plt+0x12f4>
   133dc:	bl	1a870 <mount@plt+0x87b8>
   133e0:	b	12e0c <mount@plt+0xd54>
   133e4:	bl	19b88 <mount@plt+0x7ad0>
   133e8:	b	12df4 <mount@plt+0xd3c>
   133ec:	bl	1db1c <mount@plt+0xba64>
   133f0:	ldr	r1, [pc, #-616]	; 13190 <mount@plt+0x10d8>
   133f4:	ldr	r0, [pc, #-616]	; 13194 <mount@plt+0x10dc>
   133f8:	bl	13c64 <mount@plt+0x1bac>
   133fc:	subs	r5, r0, #0
   13400:	beq	13604 <mount@plt+0x154c>
   13404:	mov	r2, #2
   13408:	ldr	r1, [pc, #-616]	; 131a8 <mount@plt+0x10f0>
   1340c:	bl	1a3f0 <mount@plt+0x8338>
   13410:	cmp	r0, #0
   13414:	bne	135b8 <mount@plt+0x1500>
   13418:	mov	r0, r5
   1341c:	bl	11f14 <fclose@plt>
   13420:	b	132f8 <mount@plt+0x1240>
   13424:	ldr	r0, [pc, #-636]	; 131b0 <mount@plt+0x10f8>
   13428:	bl	11d4c <getenv@plt>
   1342c:	cmp	r0, #0
   13430:	beq	13668 <mount@plt+0x15b0>
   13434:	mov	r4, #5
   13438:	mov	r6, #1048576	; 0x100000
   1343c:	mov	r0, r6
   13440:	bl	11d70 <malloc@plt>
   13444:	cmp	r0, #0
   13448:	bne	13468 <mount@plt+0x13b0>
   1344c:	subs	r4, r4, #1
   13450:	asr	r6, r6, #1
   13454:	bne	1343c <mount@plt+0x1384>
   13458:	bl	11e18 <__errno_location@plt>
   1345c:	mov	r3, #12
   13460:	str	r3, [r0]
   13464:	b	12e30 <mount@plt+0xd78>
   13468:	ldr	r1, [r7, #1304]	; 0x518
   1346c:	mov	r3, #0
   13470:	and	r2, r1, #4
   13474:	orrs	r3, r2, r3
   13478:	mov	r5, r0
   1347c:	bne	13514 <mount@plt+0x145c>
   13480:	ldr	r1, [r7, #1304]	; 0x518
   13484:	mov	r3, #0
   13488:	and	r2, r1, #1024	; 0x400
   1348c:	orrs	r3, r2, r3
   13490:	beq	134d4 <mount@plt+0x141c>
   13494:	ldr	r1, [pc, #-772]	; 13198 <mount@plt+0x10e0>
   13498:	ldr	r0, [pc, #-772]	; 1319c <mount@plt+0x10e4>
   1349c:	bl	13c64 <mount@plt+0x1bac>
   134a0:	subs	r4, r0, #0
   134a4:	beq	134d4 <mount@plt+0x141c>
   134a8:	mov	r2, r6
   134ac:	mov	r1, r5
   134b0:	bl	11f68 <setbuffer@plt>
   134b4:	mov	r2, #10
   134b8:	ldr	r1, [pc, #-780]	; 131b4 <mount@plt+0x10fc>
   134bc:	mov	r0, r4
   134c0:	bl	1a3f0 <mount@plt+0x8338>
   134c4:	cmp	r0, #0
   134c8:	bne	1368c <mount@plt+0x15d4>
   134cc:	mov	r0, r4
   134d0:	bl	11f14 <fclose@plt>
   134d4:	mov	r0, r5
   134d8:	bl	11b78 <free@plt>
   134dc:	b	12e30 <mount@plt+0xd78>
   134e0:	ldr	r1, [pc, #-840]	; 131a0 <mount@plt+0x10e8>
   134e4:	ldr	r0, [pc, #-840]	; 131a4 <mount@plt+0x10ec>
   134e8:	bl	13c64 <mount@plt+0x1bac>
   134ec:	subs	r5, r0, #0
   134f0:	beq	13638 <mount@plt+0x1580>
   134f4:	mov	r2, #2
   134f8:	ldr	r1, [pc, #-856]	; 131a8 <mount@plt+0x10f0>
   134fc:	bl	1a3f0 <mount@plt+0x8338>
   13500:	cmp	r0, #0
   13504:	bne	1359c <mount@plt+0x14e4>
   13508:	mov	r0, r5
   1350c:	bl	11f14 <fclose@plt>
   13510:	b	13268 <mount@plt+0x11b0>
   13514:	ldr	r1, [pc, #-880]	; 131ac <mount@plt+0x10f4>
   13518:	ldr	r0, [pc, #-880]	; 131b0 <mount@plt+0x10f8>
   1351c:	bl	13c64 <mount@plt+0x1bac>
   13520:	subs	r4, r0, #0
   13524:	beq	137f0 <mount@plt+0x1738>
   13528:	mov	r2, r6
   1352c:	mov	r1, r5
   13530:	bl	11f68 <setbuffer@plt>
   13534:	mov	r2, #2
   13538:	ldr	r1, [pc, #-908]	; 131b4 <mount@plt+0x10fc>
   1353c:	mov	r0, r4
   13540:	bl	1a3f0 <mount@plt+0x8338>
   13544:	cmp	r0, #0
   13548:	bne	1368c <mount@plt+0x15d4>
   1354c:	mov	r0, r4
   13550:	bl	11f14 <fclose@plt>
   13554:	b	13480 <mount@plt+0x13c8>
   13558:	ldr	r3, [pc, #-924]	; 131c4 <mount@plt+0x110c>
   1355c:	mov	r2, #28
   13560:	mov	r1, #1
   13564:	ldr	r3, [r3]
   13568:	ldr	r0, [pc, #-952]	; 131b8 <mount@plt+0x1100>
   1356c:	bl	11cb0 <fwrite@plt>
   13570:	mov	r0, #1
   13574:	bl	11ddc <exit@plt>
   13578:	ldr	r0, [pc, #-940]	; 131d4 <mount@plt+0x111c>
   1357c:	bl	11d4c <getenv@plt>
   13580:	cmp	r0, #0
   13584:	bne	132e4 <mount@plt+0x122c>
   13588:	mov	r1, #255	; 0xff
   1358c:	bl	19f74 <mount@plt+0x7ebc>
   13590:	cmp	r0, #0
   13594:	bne	132e4 <mount@plt+0x122c>
   13598:	b	12e18 <mount@plt+0xd60>
   1359c:	bl	11e18 <__errno_location@plt>
   135a0:	mov	r4, r0
   135a4:	mov	r0, r5
   135a8:	ldr	r5, [r4]
   135ac:	bl	11f14 <fclose@plt>
   135b0:	str	r5, [r4]
   135b4:	b	12e24 <mount@plt+0xd6c>
   135b8:	bl	11e18 <__errno_location@plt>
   135bc:	mov	r4, r0
   135c0:	mov	r0, r5
   135c4:	ldr	r5, [r4]
   135c8:	bl	11f14 <fclose@plt>
   135cc:	str	r5, [r4]
   135d0:	b	12e18 <mount@plt+0xd60>
   135d4:	ldr	r1, [pc, #-1056]	; 131bc <mount@plt+0x1104>
   135d8:	mov	r0, r4
   135dc:	bl	11b0c <strcmp@plt>
   135e0:	cmp	r0, #0
   135e4:	beq	12d50 <mount@plt+0xc98>
   135e8:	ldr	r1, [pc, #-1068]	; 131c4 <mount@plt+0x110c>
   135ec:	mov	r3, r4
   135f0:	ldr	r2, [pc, #-1080]	; 131c0 <mount@plt+0x1108>
   135f4:	ldr	r0, [r1]
   135f8:	mov	r1, #1
   135fc:	bl	11ef0 <__fprintf_chk@plt>
   13600:	bl	15e18 <mount@plt+0x3d60>
   13604:	bl	11e18 <__errno_location@plt>
   13608:	mov	r4, r0
   1360c:	ldr	r5, [r0]
   13610:	b	135cc <mount@plt+0x1514>
   13614:	ldr	r0, [pc, #-1096]	; 131d4 <mount@plt+0x111c>
   13618:	bl	11d4c <getenv@plt>
   1361c:	cmp	r0, #0
   13620:	bne	13254 <mount@plt+0x119c>
   13624:	mov	r1, #17
   13628:	bl	19f74 <mount@plt+0x7ebc>
   1362c:	cmp	r0, #0
   13630:	bne	13254 <mount@plt+0x119c>
   13634:	b	12e24 <mount@plt+0xd6c>
   13638:	bl	11e18 <__errno_location@plt>
   1363c:	mov	r4, r0
   13640:	ldr	r5, [r0]
   13644:	b	135b0 <mount@plt+0x14f8>
   13648:	ldr	r3, [pc, #-1164]	; 131c4 <mount@plt+0x110c>
   1364c:	mov	r2, #26
   13650:	mov	r1, #1
   13654:	ldr	r3, [r3]
   13658:	ldr	r0, [pc, #-1176]	; 131c8 <mount@plt+0x1110>
   1365c:	bl	11cb0 <fwrite@plt>
   13660:	mvn	r0, #0
   13664:	bl	11ddc <exit@plt>
   13668:	ldr	r0, [pc, #-1180]	; 131d4 <mount@plt+0x111c>
   1366c:	bl	11d4c <getenv@plt>
   13670:	cmp	r0, #0
   13674:	bne	13434 <mount@plt+0x137c>
   13678:	mov	r1, #6
   1367c:	bl	19f74 <mount@plt+0x7ebc>
   13680:	cmp	r0, #0
   13684:	bne	13434 <mount@plt+0x137c>
   13688:	b	12e30 <mount@plt+0xd78>
   1368c:	bl	11e18 <__errno_location@plt>
   13690:	mov	r6, r0
   13694:	mov	r0, r5
   13698:	ldr	r5, [r6]
   1369c:	bl	11b78 <free@plt>
   136a0:	mov	r0, r4
   136a4:	bl	11f14 <fclose@plt>
   136a8:	str	r5, [r6]
   136ac:	b	12e30 <mount@plt+0xd78>
   136b0:	ldr	lr, [r7, #1304]	; 0x518
   136b4:	mov	ip, #0
   136b8:	and	r2, lr, #4
   136bc:	mov	r3, ip
   136c0:	orrs	r3, r2, r3
   136c4:	and	r0, lr, #1024	; 0x400
   136c8:	mov	r1, ip
   136cc:	beq	137a4 <mount@plt+0x16ec>
   136d0:	ldr	r3, [r7, #1296]	; 0x510
   136d4:	tst	r3, #4
   136d8:	and	r3, r3, #1
   136dc:	beq	1378c <mount@plt+0x16d4>
   136e0:	orrs	r2, r0, r1
   136e4:	orr	r5, r3, #2
   136e8:	bne	13778 <mount@plt+0x16c0>
   136ec:	add	r0, sp, #44	; 0x2c
   136f0:	mov	r2, #4
   136f4:	mov	r1, r5
   136f8:	bl	248c0 <mount@plt+0x12808>
   136fc:	cmp	r0, #0
   13700:	bne	13770 <mount@plt+0x16b8>
   13704:	ldrb	r3, [r7, #1316]	; 0x524
   13708:	str	r0, [sp, #76]	; 0x4c
   1370c:	str	r0, [sp, #52]	; 0x34
   13710:	cmp	r3, #0
   13714:	beq	13738 <mount@plt+0x1680>
   13718:	add	r6, sp, #92	; 0x5c
   1371c:	mov	r1, r5
   13720:	mov	r0, r6
   13724:	mov	r2, #4
   13728:	bl	248c0 <mount@plt+0x12808>
   1372c:	cmp	r0, #0
   13730:	streq	r6, [r7, #1320]	; 0x528
   13734:	bne	13870 <mount@plt+0x17b8>
   13738:	mov	r3, #0
   1373c:	ldr	r2, [pc, #-1400]	; 131cc <mount@plt+0x1114>
   13740:	ldr	r1, [pc, #-1400]	; 131d0 <mount@plt+0x1118>
   13744:	add	r0, sp, #44	; 0x2c
   13748:	bl	25520 <mount@plt+0x13468>
   1374c:	adds	r4, r0, #0
   13750:	add	r0, sp, #44	; 0x2c
   13754:	movne	r4, #1
   13758:	bl	24898 <mount@plt+0x127e0>
   1375c:	ldr	r0, [r7, #1320]	; 0x528
   13760:	rsb	r4, r4, #0
   13764:	cmp	r0, #0
   13768:	beq	13770 <mount@plt+0x16b8>
   1376c:	bl	24898 <mount@plt+0x127e0>
   13770:	mov	r0, r4
   13774:	bl	11ddc <exit@plt>
   13778:	cmp	r3, #0
   1377c:	orrne	r3, r3, #6
   13780:	moveq	r3, r5
   13784:	orr	r5, r3, #8
   13788:	b	136ec <mount@plt+0x1634>
   1378c:	orrs	r2, r0, r1
   13790:	bne	137d0 <mount@plt+0x1718>
   13794:	cmp	r3, #0
   13798:	beq	13770 <mount@plt+0x16b8>
   1379c:	mov	r5, r3
   137a0:	b	136ec <mount@plt+0x1634>
   137a4:	orrs	r3, r0, r1
   137a8:	beq	13770 <mount@plt+0x16b8>
   137ac:	ldr	r2, [r7, #1296]	; 0x510
   137b0:	ands	r3, r2, #1
   137b4:	and	r2, r2, #4
   137b8:	beq	137e0 <mount@plt+0x1728>
   137bc:	cmp	r2, #0
   137c0:	moveq	r5, #4
   137c4:	beq	136ec <mount@plt+0x1634>
   137c8:	mov	r3, #4
   137cc:	b	13784 <mount@plt+0x16cc>
   137d0:	cmp	r3, #0
   137d4:	beq	13770 <mount@plt+0x16b8>
   137d8:	orr	r5, r3, #4
   137dc:	b	136ec <mount@plt+0x1634>
   137e0:	cmp	r2, #0
   137e4:	bne	13784 <mount@plt+0x16cc>
   137e8:	b	13770 <mount@plt+0x16b8>
   137ec:	bl	11c2c <__stack_chk_fail@plt>
   137f0:	bl	11e18 <__errno_location@plt>
   137f4:	mov	r6, r0
   137f8:	mov	r0, r5
   137fc:	ldr	r5, [r6]
   13800:	bl	11b78 <free@plt>
   13804:	b	136a8 <mount@plt+0x15f0>
   13808:	ldr	r0, [pc, #-1596]	; 131d4 <mount@plt+0x111c>
   1380c:	bl	11d4c <getenv@plt>
   13810:	cmp	r0, #0
   13814:	bne	13374 <mount@plt+0x12bc>
   13818:	ldr	r2, [pc, #-1608]	; 131d8 <mount@plt+0x1120>
   1381c:	mov	r3, #36	; 0x24
   13820:	str	r0, [sp, #156]	; 0x9c
   13824:	ldr	ip, [pc, #-1616]	; 131dc <mount@plt+0x1124>
   13828:	str	r0, [sp, #152]	; 0x98
   1382c:	str	r0, [sp, #160]	; 0xa0
   13830:	str	r0, [sp, #168]	; 0xa8
   13834:	str	r0, [sp, #172]	; 0xac
   13838:	mov	r0, #17
   1383c:	mov	r1, r3
   13840:	str	r3, [sp, #140]	; 0x8c
   13844:	str	r2, [sp, #148]	; 0x94
   13848:	mov	r3, #61	; 0x3d
   1384c:	strb	r0, [sp, #156]	; 0x9c
   13850:	ldr	r2, [pc, #-1656]	; 131e0 <mount@plt+0x1128>
   13854:	add	r0, sp, #140	; 0x8c
   13858:	str	ip, [sp, #144]	; 0x90
   1385c:	str	r3, [sp, #164]	; 0xa4
   13860:	bl	19ad0 <mount@plt+0x7a18>
   13864:	cmp	r0, #0
   13868:	bne	13374 <mount@plt+0x12bc>
   1386c:	b	12e00 <mount@plt+0xd48>
   13870:	add	r0, sp, #44	; 0x2c
   13874:	bl	24898 <mount@plt+0x127e0>
   13878:	b	13770 <mount@plt+0x16b8>
   1387c:	mov	fp, #0
   13880:	mov	lr, #0
   13884:	pop	{r1}		; (ldr r1, [sp], #4)
   13888:	mov	r2, sp
   1388c:	push	{r2}		; (str r2, [sp, #-4]!)
   13890:	push	{r0}		; (str r0, [sp, #-4]!)
   13894:	ldr	ip, [pc, #16]	; 138ac <mount@plt+0x17f4>
   13898:	push	{ip}		; (str ip, [sp, #-4]!)
   1389c:	ldr	r0, [pc, #12]	; 138b0 <mount@plt+0x17f8>
   138a0:	ldr	r3, [pc, #12]	; 138b4 <mount@plt+0x17fc>
   138a4:	bl	11d7c <__libc_start_main@plt>
   138a8:	bl	1204c <abort@plt>
   138ac:	andeq	r7, r2, r8, asr r2
   138b0:	andeq	r2, r1, r8, asr #1
   138b4:	strdeq	r7, [r2], -r8
   138b8:	ldr	r3, [pc, #20]	; 138d4 <mount@plt+0x181c>
   138bc:	ldr	r2, [pc, #20]	; 138d8 <mount@plt+0x1820>
   138c0:	add	r3, pc, r3
   138c4:	ldr	r2, [r3, r2]
   138c8:	cmp	r2, #0
   138cc:	bxeq	lr
   138d0:	b	11db8 <__gmon_start__@plt>
   138d4:	andeq	r8, r2, r8, lsr r7
   138d8:	andeq	r0, r0, r0, lsr #4
   138dc:	ldr	r0, [pc, #24]	; 138fc <mount@plt+0x1844>
   138e0:	ldr	r3, [pc, #24]	; 13900 <mount@plt+0x1848>
   138e4:	cmp	r3, r0
   138e8:	bxeq	lr
   138ec:	ldr	r3, [pc, #16]	; 13904 <mount@plt+0x184c>
   138f0:	cmp	r3, #0
   138f4:	bxeq	lr
   138f8:	bx	r3
   138fc:	andeq	sp, r3, ip, ror #30
   13900:	andeq	sp, r3, ip, ror #30
   13904:	andeq	r0, r0, r0
   13908:	ldr	r0, [pc, #36]	; 13934 <mount@plt+0x187c>
   1390c:	ldr	r1, [pc, #36]	; 13938 <mount@plt+0x1880>
   13910:	sub	r1, r1, r0
   13914:	asr	r1, r1, #2
   13918:	add	r1, r1, r1, lsr #31
   1391c:	asrs	r1, r1, #1
   13920:	bxeq	lr
   13924:	ldr	r3, [pc, #16]	; 1393c <mount@plt+0x1884>
   13928:	cmp	r3, #0
   1392c:	bxeq	lr
   13930:	bx	r3
   13934:	andeq	sp, r3, ip, ror #30
   13938:	andeq	sp, r3, ip, ror #30
   1393c:	andeq	r0, r0, r0
   13940:	push	{r4, lr}
   13944:	ldr	r4, [pc, #24]	; 13964 <mount@plt+0x18ac>
   13948:	ldrb	r3, [r4]
   1394c:	cmp	r3, #0
   13950:	popne	{r4, pc}
   13954:	bl	138dc <mount@plt+0x1824>
   13958:	mov	r3, #1
   1395c:	strb	r3, [r4]
   13960:	pop	{r4, pc}
   13964:	andeq	sp, r3, ip, lsl #31
   13968:	b	13908 <mount@plt+0x1850>
   1396c:	andeq	r0, r0, r0
   13970:	push	{r4, lr}
   13974:	sub	sp, sp, #56	; 0x38
   13978:	ldr	r4, [pc, #88]	; 139d8 <mount@plt+0x1920>
   1397c:	add	r0, sp, #4
   13980:	mov	r1, #0
   13984:	ldr	r3, [r4]
   13988:	str	r3, [sp, #52]	; 0x34
   1398c:	bl	24afc <mount@plt+0x12a44>
   13990:	cmp	r0, #0
   13994:	blt	139cc <mount@plt+0x1914>
   13998:	add	r0, sp, #4
   1399c:	bl	21794 <mount@plt+0xf6dc>
   139a0:	add	r0, sp, #4
   139a4:	bl	24898 <mount@plt+0x127e0>
   139a8:	ldr	r0, [sp, #52]	; 0x34
   139ac:	ldr	r3, [pc, #40]	; 139dc <mount@plt+0x1924>
   139b0:	ldr	r1, [r4]
   139b4:	mov	r2, #1
   139b8:	cmp	r0, r1
   139bc:	str	r2, [r3]
   139c0:	bne	139d4 <mount@plt+0x191c>
   139c4:	add	sp, sp, #56	; 0x38
   139c8:	pop	{r4, pc}
   139cc:	mov	r0, #1
   139d0:	bl	11ddc <exit@plt>
   139d4:	bl	11c2c <__stack_chk_fail@plt>
   139d8:	ldrdeq	fp, [r3], -r8
   139dc:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   139e0:	push	{r4, r5, r6, lr}
   139e4:	mov	r4, r1
   139e8:	mov	r1, #58	; 0x3a
   139ec:	mov	r6, r2
   139f0:	mov	r5, r3
   139f4:	bl	11e0c <strchr@plt>
   139f8:	cmp	r0, #0
   139fc:	beq	13a50 <mount@plt+0x1998>
   13a00:	add	r0, r0, #2
   13a04:	str	r0, [r4]
   13a08:	mov	r1, #58	; 0x3a
   13a0c:	bl	11e0c <strchr@plt>
   13a10:	cmp	r0, #0
   13a14:	beq	13a50 <mount@plt+0x1998>
   13a18:	add	r3, r0, #6
   13a1c:	mov	r4, #0
   13a20:	strb	r4, [r0, #5]
   13a24:	mov	r1, #58	; 0x3a
   13a28:	mov	r0, r3
   13a2c:	str	r3, [r6]
   13a30:	bl	11e0c <strchr@plt>
   13a34:	subs	r3, r0, #0
   13a38:	beq	13a50 <mount@plt+0x1998>
   13a3c:	add	r2, r3, #6
   13a40:	strb	r4, [r3, #5]
   13a44:	mov	r0, r4
   13a48:	str	r2, [r5]
   13a4c:	pop	{r4, r5, r6, pc}
   13a50:	mvn	r0, #0
   13a54:	pop	{r4, r5, r6, pc}
   13a58:	push	{r4, r5, lr}
   13a5c:	sub	sp, sp, #540	; 0x21c
   13a60:	ldr	r4, [pc, #452]	; 13c2c <mount@plt+0x1b74>
   13a64:	mov	r5, r1
   13a68:	add	r3, sp, #276	; 0x114
   13a6c:	ldr	ip, [r4]
   13a70:	add	r2, sp, #20
   13a74:	ldr	r1, [pc, #436]	; 13c30 <mount@plt+0x1b78>
   13a78:	str	ip, [sp, #532]	; 0x214
   13a7c:	bl	11fa4 <sscanf@plt>
   13a80:	cmp	r0, #2
   13a84:	bne	13b68 <mount@plt+0x1ab0>
   13a88:	ldr	r1, [pc, #420]	; 13c34 <mount@plt+0x1b7c>
   13a8c:	add	r0, sp, #20
   13a90:	bl	11b0c <strcmp@plt>
   13a94:	cmp	r0, #0
   13a98:	beq	13b80 <mount@plt+0x1ac8>
   13a9c:	ldr	r1, [pc, #404]	; 13c38 <mount@plt+0x1b80>
   13aa0:	add	r0, sp, #20
   13aa4:	bl	11b0c <strcmp@plt>
   13aa8:	cmp	r0, #0
   13aac:	beq	13ba8 <mount@plt+0x1af0>
   13ab0:	ldr	r1, [pc, #388]	; 13c3c <mount@plt+0x1b84>
   13ab4:	add	r0, sp, #20
   13ab8:	bl	11b0c <strcmp@plt>
   13abc:	cmp	r0, #0
   13ac0:	beq	13b94 <mount@plt+0x1adc>
   13ac4:	ldr	r1, [pc, #372]	; 13c40 <mount@plt+0x1b88>
   13ac8:	add	r0, sp, #20
   13acc:	bl	11b0c <strcmp@plt>
   13ad0:	cmp	r0, #0
   13ad4:	beq	13bd0 <mount@plt+0x1b18>
   13ad8:	ldr	r1, [pc, #356]	; 13c44 <mount@plt+0x1b8c>
   13adc:	add	r0, sp, #20
   13ae0:	bl	11b0c <strcmp@plt>
   13ae4:	cmp	r0, #0
   13ae8:	beq	13be4 <mount@plt+0x1b2c>
   13aec:	ldr	r1, [pc, #340]	; 13c48 <mount@plt+0x1b90>
   13af0:	add	r0, sp, #20
   13af4:	bl	11b0c <strcmp@plt>
   13af8:	cmp	r0, #0
   13afc:	beq	13bbc <mount@plt+0x1b04>
   13b00:	ldr	r1, [pc, #324]	; 13c4c <mount@plt+0x1b94>
   13b04:	add	r0, sp, #20
   13b08:	bl	11b0c <strcmp@plt>
   13b0c:	cmp	r0, #0
   13b10:	beq	13bf8 <mount@plt+0x1b40>
   13b14:	ldr	r1, [pc, #308]	; 13c50 <mount@plt+0x1b98>
   13b18:	add	r0, sp, #20
   13b1c:	bl	11b0c <strcmp@plt>
   13b20:	cmp	r0, #0
   13b24:	beq	13c10 <mount@plt+0x1b58>
   13b28:	add	r0, sp, #20
   13b2c:	ldr	r1, [pc, #288]	; 13c54 <mount@plt+0x1b9c>
   13b30:	bl	11b0c <strcmp@plt>
   13b34:	cmp	r0, #0
   13b38:	bne	13b68 <mount@plt+0x1ab0>
   13b3c:	add	r1, r5, #4
   13b40:	add	r2, r5, #8
   13b44:	add	r3, r5, #16
   13b48:	str	r1, [sp, #8]
   13b4c:	str	r2, [sp, #4]
   13b50:	str	r3, [sp]
   13b54:	add	r0, sp, #276	; 0x114
   13b58:	add	r3, r5, #12
   13b5c:	add	r2, r5, #20
   13b60:	ldr	r1, [pc, #240]	; 13c58 <mount@plt+0x1ba0>
   13b64:	bl	11fa4 <sscanf@plt>
   13b68:	ldr	r2, [sp, #532]	; 0x214
   13b6c:	ldr	r3, [r4]
   13b70:	cmp	r2, r3
   13b74:	bne	13c28 <mount@plt+0x1b70>
   13b78:	add	sp, sp, #540	; 0x21c
   13b7c:	pop	{r4, r5, pc}
   13b80:	mov	r2, r5
   13b84:	add	r0, sp, #276	; 0x114
   13b88:	ldr	r1, [pc, #204]	; 13c5c <mount@plt+0x1ba4>
   13b8c:	bl	11fa4 <sscanf@plt>
   13b90:	b	13b68 <mount@plt+0x1ab0>
   13b94:	add	r2, r5, #44	; 0x2c
   13b98:	add	r0, sp, #276	; 0x114
   13b9c:	ldr	r1, [pc, #184]	; 13c5c <mount@plt+0x1ba4>
   13ba0:	bl	11fa4 <sscanf@plt>
   13ba4:	b	13b68 <mount@plt+0x1ab0>
   13ba8:	add	r2, r5, #24
   13bac:	add	r0, sp, #276	; 0x114
   13bb0:	ldr	r1, [pc, #164]	; 13c5c <mount@plt+0x1ba4>
   13bb4:	bl	11fa4 <sscanf@plt>
   13bb8:	b	13b68 <mount@plt+0x1ab0>
   13bbc:	add	r2, r5, #40	; 0x28
   13bc0:	add	r0, sp, #276	; 0x114
   13bc4:	ldr	r1, [pc, #144]	; 13c5c <mount@plt+0x1ba4>
   13bc8:	bl	11fa4 <sscanf@plt>
   13bcc:	b	13b68 <mount@plt+0x1ab0>
   13bd0:	add	r2, r5, #28
   13bd4:	add	r0, sp, #276	; 0x114
   13bd8:	ldr	r1, [pc, #124]	; 13c5c <mount@plt+0x1ba4>
   13bdc:	bl	11fa4 <sscanf@plt>
   13be0:	b	13b68 <mount@plt+0x1ab0>
   13be4:	add	r2, r5, #48	; 0x30
   13be8:	add	r0, sp, #276	; 0x114
   13bec:	ldr	r1, [pc, #104]	; 13c5c <mount@plt+0x1ba4>
   13bf0:	bl	11fa4 <sscanf@plt>
   13bf4:	b	13b68 <mount@plt+0x1ab0>
   13bf8:	add	r0, sp, #276	; 0x114
   13bfc:	add	r3, r5, #36	; 0x24
   13c00:	add	r2, r5, #32
   13c04:	ldr	r1, [pc, #84]	; 13c60 <mount@plt+0x1ba8>
   13c08:	bl	11fa4 <sscanf@plt>
   13c0c:	b	13b68 <mount@plt+0x1ab0>
   13c10:	add	r0, sp, #276	; 0x114
   13c14:	add	r3, r5, #56	; 0x38
   13c18:	add	r2, r5, #52	; 0x34
   13c1c:	ldr	r1, [pc, #60]	; 13c60 <mount@plt+0x1ba8>
   13c20:	bl	11fa4 <sscanf@plt>
   13c24:	b	13b68 <mount@plt+0x1ab0>
   13c28:	bl	11c2c <__stack_chk_fail@plt>
   13c2c:	ldrdeq	fp, [r3], -r8
   13c30:	andeq	r7, r2, r8, ror sp
   13c34:	andeq	r7, r2, r8, lsl #27
   13c38:	muleq	r2, r4, sp
   13c3c:	muleq	r2, ip, sp
   13c40:	andeq	r7, r2, r4, lsr #27
   13c44:	andeq	r7, r2, ip, lsr #27
   13c48:			; <UNDEFINED> instruction: 0x00027db4
   13c4c:			; <UNDEFINED> instruction: 0x00027dbc
   13c50:	ldrdeq	r7, [r2], -r0
   13c54:	ldrdeq	r7, [r2], -r8
   13c58:	andeq	r7, r2, r0, ror #27
   13c5c:	strdeq	r7, [r2], -r4
   13c60:	andeq	r7, r2, r4, asr #27
   13c64:	push	{r4, r5, lr}
   13c68:	sub	sp, sp, #156	; 0x9c
   13c6c:	ldr	r4, [pc, #120]	; 13cec <mount@plt+0x1c34>
   13c70:	mov	r5, r1
   13c74:	ldr	r3, [r4]
   13c78:	str	r3, [sp, #148]	; 0x94
   13c7c:	bl	11d4c <getenv@plt>
   13c80:	cmp	r0, #0
   13c84:	beq	13ca8 <mount@plt+0x1bf0>
   13c88:	ldr	r1, [pc, #96]	; 13cf0 <mount@plt+0x1c38>
   13c8c:	bl	11ff8 <fopen64@plt>
   13c90:	ldr	r2, [sp, #148]	; 0x94
   13c94:	ldr	r3, [r4]
   13c98:	cmp	r2, r3
   13c9c:	bne	13ce8 <mount@plt+0x1c30>
   13ca0:	add	sp, sp, #156	; 0x9c
   13ca4:	pop	{r4, r5, pc}
   13ca8:	ldr	r0, [pc, #68]	; 13cf4 <mount@plt+0x1c3c>
   13cac:	bl	11d4c <getenv@plt>
   13cb0:	ldr	ip, [pc, #64]	; 13cf8 <mount@plt+0x1c40>
   13cb4:	ldr	r3, [pc, #64]	; 13cfc <mount@plt+0x1c44>
   13cb8:	str	r5, [sp, #8]
   13cbc:	str	r3, [sp]
   13cc0:	mov	r2, #1
   13cc4:	mov	r3, #128	; 0x80
   13cc8:	mov	r1, #127	; 0x7f
   13ccc:	cmp	r0, #0
   13cd0:	moveq	r0, ip
   13cd4:	str	r0, [sp, #4]
   13cd8:	add	r0, sp, #20
   13cdc:	bl	12088 <__snprintf_chk@plt>
   13ce0:	add	r0, sp, #20
   13ce4:	b	13c88 <mount@plt+0x1bd0>
   13ce8:	bl	11c2c <__stack_chk_fail@plt>
   13cec:	ldrdeq	fp, [r3], -r8
   13cf0:	andeq	r9, r2, r8, lsr ip
   13cf4:	andeq	r7, r2, r4, lsl #28
   13cf8:	strdeq	r7, [r2], -ip
   13cfc:	andeq	r7, r2, r0, lsl lr
   13d00:	push	{r4, r5, r6, lr}
   13d04:	mov	r5, r0
   13d08:	ldr	r4, [pc, #132]	; 13d94 <mount@plt+0x1cdc>
   13d0c:	ldr	r3, [r4, #4]
   13d10:	cmp	r3, #0
   13d14:	beq	13d3c <mount@plt+0x1c84>
   13d18:	cmp	r5, r3
   13d1c:	blt	13d34 <mount@plt+0x1c7c>
   13d20:	ldr	r0, [r4, #8]
   13d24:	cmp	r0, r5
   13d28:	movlt	r0, #0
   13d2c:	movge	r0, #1
   13d30:	pop	{r4, r5, r6, pc}
   13d34:	mov	r0, #0
   13d38:	pop	{r4, r5, r6, pc}
   13d3c:	ldr	r1, [pc, #84]	; 13d98 <mount@plt+0x1ce0>
   13d40:	ldr	r0, [pc, #84]	; 13d9c <mount@plt+0x1ce4>
   13d44:	bl	13c64 <mount@plt+0x1bac>
   13d48:	subs	r6, r0, #0
   13d4c:	beq	13d80 <mount@plt+0x1cc8>
   13d50:	add	r3, r4, #8
   13d54:	add	r2, r4, #4
   13d58:	ldr	r1, [pc, #64]	; 13da0 <mount@plt+0x1ce8>
   13d5c:	bl	11e9c <fscanf@plt>
   13d60:	cmp	r0, #1
   13d64:	ldrle	r3, [pc, #56]	; 13da4 <mount@plt+0x1cec>
   13d68:	movle	r2, #1024	; 0x400
   13d6c:	strdle	r2, [r4, #4]
   13d70:	mov	r0, r6
   13d74:	bl	11f14 <fclose@plt>
   13d78:	ldr	r3, [r4, #4]
   13d7c:	b	13d18 <mount@plt+0x1c60>
   13d80:	ldr	r2, [pc, #28]	; 13da4 <mount@plt+0x1cec>
   13d84:	mov	r3, #1024	; 0x400
   13d88:	str	r2, [r4, #8]
   13d8c:	str	r3, [r4, #4]
   13d90:	b	13d18 <mount@plt+0x1c60>
   13d94:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   13d98:	andeq	r7, r2, r8, lsl lr
   13d9c:	andeq	r7, r2, ip, lsr lr
   13da0:	andeq	r7, r2, r8, asr lr
   13da4:	andeq	r1, r0, r7, lsl #7
   13da8:	ldr	r3, [pc, #988]	; 1418c <mount@plt+0x20d4>
   13dac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13db0:	sub	sp, sp, #2192	; 0x890
   13db4:	sub	sp, sp, #12
   13db8:	ldr	r3, [r3]
   13dbc:	ldr	r0, [pc, #972]	; 14190 <mount@plt+0x20d8>
   13dc0:	str	r3, [sp, #2196]	; 0x894
   13dc4:	bl	11d4c <getenv@plt>
   13dc8:	ldr	fp, [pc, #964]	; 14194 <mount@plt+0x20dc>
   13dcc:	ldr	r2, [pc, #964]	; 14198 <mount@plt+0x20e0>
   13dd0:	ldr	r3, [fp, #12]
   13dd4:	cmp	r0, #0
   13dd8:	movne	r2, r0
   13ddc:	cmp	r3, #0
   13de0:	str	r2, [sp, #24]
   13de4:	beq	13e08 <mount@plt+0x1d50>
   13de8:	ldr	r3, [pc, #924]	; 1418c <mount@plt+0x20d4>
   13dec:	ldr	r2, [sp, #2196]	; 0x894
   13df0:	ldr	r3, [r3]
   13df4:	cmp	r2, r3
   13df8:	bne	1416c <mount@plt+0x20b4>
   13dfc:	add	sp, sp, #2192	; 0x890
   13e00:	add	sp, sp, #12
   13e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e08:	mov	r3, #1
   13e0c:	mov	r1, r2
   13e10:	add	r0, sp, #148	; 0x94
   13e14:	mov	r2, #1024	; 0x400
   13e18:	str	r3, [fp, #12]
   13e1c:	bl	1f584 <mount@plt+0xd4cc>
   13e20:	ldrb	r3, [sp, #148]	; 0x94
   13e24:	cmp	r3, #0
   13e28:	beq	13e50 <mount@plt+0x1d98>
   13e2c:	add	r0, sp, #148	; 0x94
   13e30:	bl	11e00 <strlen@plt>
   13e34:	add	r3, sp, #2192	; 0x890
   13e38:	add	r3, r3, #8
   13e3c:	add	r3, r3, r0
   13e40:	mov	r9, r0
   13e44:	ldrb	r3, [r3, #-2053]	; 0xfffff7fb
   13e48:	cmp	r3, #47	; 0x2f
   13e4c:	beq	13e6c <mount@plt+0x1db4>
   13e50:	add	r0, sp, #148	; 0x94
   13e54:	bl	11e00 <strlen@plt>
   13e58:	ldr	r3, [pc, #828]	; 1419c <mount@plt+0x20e4>
   13e5c:	add	r2, sp, #148	; 0x94
   13e60:	ldrh	r3, [r3]
   13e64:	add	r9, r0, #1
   13e68:	strh	r3, [r2, r0]
   13e6c:	add	r0, sp, #148	; 0x94
   13e70:	bl	11d1c <opendir@plt>
   13e74:	subs	sl, r0, #0
   13e78:	beq	13de8 <mount@plt+0x1d30>
   13e7c:	ldr	r8, [pc, #796]	; 141a0 <mount@plt+0x20e8>
   13e80:	mov	r0, sl
   13e84:	bl	11fb0 <readdir64@plt>
   13e88:	cmp	r0, #0
   13e8c:	beq	140d4 <mount@plt+0x201c>
   13e90:	add	r0, r0, #19
   13e94:	add	r3, sp, #47	; 0x2f
   13e98:	add	r2, sp, #56	; 0x38
   13e9c:	mov	r1, r8
   13ea0:	bl	11fa4 <sscanf@plt>
   13ea4:	cmp	r0, #1
   13ea8:	bne	13e80 <mount@plt+0x1dc8>
   13eac:	add	r1, sp, #48	; 0x30
   13eb0:	ldr	r0, [sp, #56]	; 0x38
   13eb4:	bl	12034 <getpidcon@plt>
   13eb8:	cmp	r0, #0
   13ebc:	bne	140e0 <mount@plt+0x2028>
   13ec0:	ldr	r3, [sp, #56]	; 0x38
   13ec4:	ldr	r2, [pc, #728]	; 141a4 <mount@plt+0x20ec>
   13ec8:	add	r0, sp, #148	; 0x94
   13ecc:	rsb	r1, r9, #1024	; 0x400
   13ed0:	strd	r2, [sp]
   13ed4:	add	r0, r0, r9
   13ed8:	mvn	r3, #0
   13edc:	mov	r2, #1
   13ee0:	bl	12088 <__snprintf_chk@plt>
   13ee4:	add	r0, sp, #148	; 0x94
   13ee8:	bl	11e00 <strlen@plt>
   13eec:	mov	r7, r0
   13ef0:	add	r0, sp, #148	; 0x94
   13ef4:	bl	11d1c <opendir@plt>
   13ef8:	subs	r4, r0, #0
   13efc:	movne	r3, #0
   13f00:	strbne	r3, [sp, #68]	; 0x44
   13f04:	beq	14150 <mount@plt+0x2098>
   13f08:	mov	r0, r4
   13f0c:	bl	11fb0 <readdir64@plt>
   13f10:	cmp	r0, #0
   13f14:	beq	140b4 <mount@plt+0x1ffc>
   13f18:	add	r5, r0, #19
   13f1c:	mov	r0, r5
   13f20:	add	r2, sp, #64	; 0x40
   13f24:	add	r3, sp, #47	; 0x2f
   13f28:	mov	r1, r8
   13f2c:	bl	11fa4 <sscanf@plt>
   13f30:	cmp	r0, #1
   13f34:	mov	r6, r0
   13f38:	bne	13f08 <mount@plt+0x1e50>
   13f3c:	ldr	r3, [sp, #64]	; 0x40
   13f40:	ldr	r2, [pc, #608]	; 141a8 <mount@plt+0x20f0>
   13f44:	rsb	r1, r7, #1024	; 0x400
   13f48:	strd	r2, [sp]
   13f4c:	mov	r2, r0
   13f50:	add	r0, sp, #148	; 0x94
   13f54:	mvn	r3, #0
   13f58:	add	r0, r0, r7
   13f5c:	bl	12088 <__snprintf_chk@plt>
   13f60:	add	r1, sp, #84	; 0x54
   13f64:	mov	r2, #63	; 0x3f
   13f68:	add	r0, sp, #148	; 0x94
   13f6c:	bl	11c8c <readlink@plt>
   13f70:	cmn	r0, #1
   13f74:	beq	13f08 <mount@plt+0x1e50>
   13f78:	add	r3, sp, #2192	; 0x890
   13f7c:	add	r3, r3, #8
   13f80:	add	r0, r3, r0
   13f84:	mov	r3, #0
   13f88:	strb	r3, [r0, #-2116]	; 0xfffff7bc
   13f8c:	mov	r2, #8
   13f90:	ldr	r1, [pc, #532]	; 141ac <mount@plt+0x20f4>
   13f94:	add	r0, sp, #84	; 0x54
   13f98:	bl	12040 <strncmp@plt>
   13f9c:	cmp	r0, #0
   13fa0:	bne	13f08 <mount@plt+0x1e50>
   13fa4:	add	r2, sp, #60	; 0x3c
   13fa8:	ldr	r1, [pc, #512]	; 141b0 <mount@plt+0x20f8>
   13fac:	add	r0, sp, #84	; 0x54
   13fb0:	bl	11fa4 <sscanf@plt>
   13fb4:	ldr	r2, [sp, #24]
   13fb8:	ldr	r1, [sp, #56]	; 0x38
   13fbc:	str	r2, [sp, #4]
   13fc0:	ldr	r2, [pc, #492]	; 141b4 <mount@plt+0x20fc>
   13fc4:	mov	r3, #1024	; 0x400
   13fc8:	add	r0, sp, #1168	; 0x490
   13fcc:	str	r2, [sp]
   13fd0:	str	r1, [sp, #8]
   13fd4:	mov	r2, r6
   13fd8:	mov	r1, r3
   13fdc:	str	r5, [sp, #12]
   13fe0:	add	r0, r0, #4
   13fe4:	bl	12088 <__snprintf_chk@plt>
   13fe8:	add	r0, sp, #1168	; 0x490
   13fec:	add	r0, r0, #4
   13ff0:	add	r1, sp, #52	; 0x34
   13ff4:	bl	11de8 <getfilecon@plt>
   13ff8:	cmp	r0, #0
   13ffc:	ble	1415c <mount@plt+0x20a4>
   14000:	ldrb	r3, [sp, #68]	; 0x44
   14004:	ldr	r2, [sp, #56]	; 0x38
   14008:	cmp	r3, #0
   1400c:	beq	140f0 <mount@plt+0x2038>
   14010:	ldr	r3, [sp, #48]	; 0x30
   14014:	ldr	r1, [sp, #64]	; 0x40
   14018:	str	r3, [sp, #28]
   1401c:	ldr	r3, [sp, #52]	; 0x34
   14020:	mov	r0, #28
   14024:	str	r2, [sp, #36]	; 0x24
   14028:	str	r1, [sp, #32]
   1402c:	ldr	r6, [sp, #60]	; 0x3c
   14030:	str	r3, [sp, #20]
   14034:	bl	11d70 <malloc@plt>
   14038:	ldr	r1, [sp, #32]
   1403c:	ldr	r2, [sp, #36]	; 0x24
   14040:	subs	r5, r0, #0
   14044:	beq	14170 <mount@plt+0x20b8>
   14048:	str	r1, [r5, #12]
   1404c:	str	r2, [r5, #8]
   14050:	str	r6, [r5, #4]
   14054:	add	r0, sp, #68	; 0x44
   14058:	bl	11c20 <strdup@plt>
   1405c:	str	r0, [r5, #16]
   14060:	ldr	r0, [sp, #28]
   14064:	bl	11c20 <strdup@plt>
   14068:	str	r0, [r5, #20]
   1406c:	ldr	r0, [sp, #20]
   14070:	bl	11c20 <strdup@plt>
   14074:	lsr	r2, r6, #16
   14078:	eor	r2, r2, r6, lsr #24
   1407c:	eor	r2, r2, r6
   14080:	eor	r3, r2, r6, lsr #8
   14084:	uxtb	r3, r3
   14088:	add	r3, fp, r3, lsl #2
   1408c:	ldr	r2, [r3, #16]
   14090:	str	r5, [r3, #16]
   14094:	str	r2, [r5]
   14098:	str	r0, [r5, #24]
   1409c:	ldr	r0, [sp, #20]
   140a0:	bl	11b78 <free@plt>
   140a4:	mov	r0, r4
   140a8:	bl	11fb0 <readdir64@plt>
   140ac:	cmp	r0, #0
   140b0:	bne	13f18 <mount@plt+0x1e60>
   140b4:	ldr	r0, [sp, #48]	; 0x30
   140b8:	bl	11b78 <free@plt>
   140bc:	mov	r0, r4
   140c0:	bl	1207c <closedir@plt>
   140c4:	mov	r0, sl
   140c8:	bl	11fb0 <readdir64@plt>
   140cc:	cmp	r0, #0
   140d0:	bne	13e90 <mount@plt+0x1dd8>
   140d4:	mov	r0, sl
   140d8:	bl	1207c <closedir@plt>
   140dc:	b	13de8 <mount@plt+0x1d30>
   140e0:	ldr	r0, [pc, #208]	; 141b8 <mount@plt+0x2100>
   140e4:	bl	11c20 <strdup@plt>
   140e8:	str	r0, [sp, #48]	; 0x30
   140ec:	b	13ec0 <mount@plt+0x1e08>
   140f0:	str	r2, [sp, #8]
   140f4:	ldr	r2, [sp, #24]
   140f8:	mov	r3, #1024	; 0x400
   140fc:	str	r2, [sp, #4]
   14100:	ldr	r2, [pc, #180]	; 141bc <mount@plt+0x2104>
   14104:	add	r0, sp, #1168	; 0x490
   14108:	mov	r1, r3
   1410c:	str	r2, [sp]
   14110:	add	r0, r0, #4
   14114:	mov	r2, #1
   14118:	bl	12088 <__snprintf_chk@plt>
   1411c:	add	r0, sp, #1168	; 0x490
   14120:	add	r0, r0, #4
   14124:	ldr	r1, [pc, #148]	; 141c0 <mount@plt+0x2108>
   14128:	bl	11ff8 <fopen64@plt>
   1412c:	subs	r5, r0, #0
   14130:	beq	14148 <mount@plt+0x2090>
   14134:	add	r2, sp, #68	; 0x44
   14138:	ldr	r1, [pc, #132]	; 141c4 <mount@plt+0x210c>
   1413c:	bl	11e9c <fscanf@plt>
   14140:	mov	r0, r5
   14144:	bl	11f14 <fclose@plt>
   14148:	ldr	r2, [sp, #56]	; 0x38
   1414c:	b	14010 <mount@plt+0x1f58>
   14150:	ldr	r0, [sp, #48]	; 0x30
   14154:	bl	11b78 <free@plt>
   14158:	b	13e80 <mount@plt+0x1dc8>
   1415c:	ldr	r0, [pc, #84]	; 141b8 <mount@plt+0x2100>
   14160:	bl	11c20 <strdup@plt>
   14164:	str	r0, [sp, #52]	; 0x34
   14168:	b	14000 <mount@plt+0x1f48>
   1416c:	bl	11c2c <__stack_chk_fail@plt>
   14170:	ldr	r3, [pc, #80]	; 141c8 <mount@plt+0x2110>
   14174:	mov	r2, #28
   14178:	mov	r1, #1
   1417c:	ldr	r3, [r3]
   14180:	ldr	r0, [pc, #68]	; 141cc <mount@plt+0x2114>
   14184:	bl	11cb0 <fwrite@plt>
   14188:	bl	1204c <abort@plt>
   1418c:	ldrdeq	fp, [r3], -r8
   14190:	andeq	r7, r2, r4, lsl #28
   14194:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   14198:	andeq	r7, r2, r0, ror #28
   1419c:	andeq	r7, r2, r8, ror #28
   141a0:	andeq	r7, r2, ip, ror #28
   141a4:	andeq	r7, r2, r0, lsl #29
   141a8:	andeq	sl, r2, r0, asr #21
   141ac:	andeq	r7, r2, r8, lsl #29
   141b0:	muleq	r2, r4, lr
   141b4:	andeq	r7, r2, r0, lsr #29
   141b8:	andeq	r7, r2, r4, ror lr
   141bc:	andeq	r7, r2, ip, lsr #29
   141c0:	andeq	r9, r2, r8, lsr ip
   141c4:			; <UNDEFINED> instruction: 0x00027eb8
   141c8:	andeq	sp, r3, r8, ror pc
   141cc:	andeq	r7, r2, r4, asr #29
   141d0:	push	{r4, lr}
   141d4:	mov	r0, #1048576	; 0x100000
   141d8:	bl	11d70 <malloc@plt>
   141dc:	subs	r3, r0, #0
   141e0:	beq	1420c <mount@plt+0x2154>
   141e4:	ldr	r1, [pc, #36]	; 14210 <mount@plt+0x2158>
   141e8:	mov	r2, #0
   141ec:	add	lr, r3, #8
   141f0:	add	ip, r3, #10
   141f4:	str	r3, [r1, #1048]	; 0x418
   141f8:	str	lr, [r1, #1040]	; 0x410
   141fc:	str	r2, [r3]
   14200:	strh	r2, [r3, #8]
   14204:	str	ip, [r3, #4]
   14208:	pop	{r4, pc}
   1420c:	bl	1204c <abort@plt>
   14210:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   14214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14218:	sub	sp, sp, #36	; 0x24
   1421c:	ldr	r7, [pc, #1220]	; 146e8 <mount@plt+0x2630>
   14220:	ldr	r4, [r0]
   14224:	mov	r5, r0
   14228:	ldr	r3, [r7]
   1422c:	mov	r9, r1
   14230:	str	r3, [sp, #28]
   14234:	cmp	r4, #11
   14238:	ldrls	pc, [pc, r4, lsl #2]
   1423c:	b	146e0 <mount@plt+0x2628>
   14240:			; <UNDEFINED> instruction: 0x000142bc
   14244:			; <UNDEFINED> instruction: 0x000142bc
   14248:	andeq	r4, r1, r0, lsl #6
   1424c:	andeq	r4, r1, r0, lsr #7
   14250:	andeq	r4, r1, ip, asr r4
   14254:			; <UNDEFINED> instruction: 0x000144b8
   14258:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1425c:	andeq	r4, r1, r0, lsr r5
   14260:	andeq	r4, r1, ip, ror #10
   14264:	andeq	r4, r1, r4, lsr #11
   14268:	andeq	r4, r1, ip, asr #11
   1426c:	andeq	r4, r1, r0, ror r2
   14270:	mov	r0, #12
   14274:	ldr	r4, [r5, #8]
   14278:	bl	11d70 <malloc@plt>
   1427c:	cmp	r0, #0
   14280:	str	r0, [r9]
   14284:	beq	146e0 <mount@plt+0x2628>
   14288:	ldr	r1, [r4, #272]	; 0x110
   1428c:	ldr	r2, [r4, #276]	; 0x114
   14290:	ldr	r3, [pc, #1108]	; 146ec <mount@plt+0x2634>
   14294:	mov	r4, #12
   14298:	stmib	r0, {r1, r2}
   1429c:	str	r3, [r0]
   142a0:	ldr	r2, [sp, #28]
   142a4:	ldr	r3, [r7]
   142a8:	mov	r0, r4
   142ac:	cmp	r2, r3
   142b0:	bne	146e4 <mount@plt+0x262c>
   142b4:	add	sp, sp, #36	; 0x24
   142b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142bc:	ldr	r8, [r0, #8]
   142c0:	cmp	r4, #0
   142c4:	moveq	sl, #8
   142c8:	movne	sl, #7
   142cc:	cmp	r8, #0
   142d0:	beq	146c8 <mount@plt+0x2610>
   142d4:	ldrh	r4, [r8, #6]
   142d8:	mov	r3, r8
   142dc:	mov	r6, #0
   142e0:	ldr	r3, [r3, #280]	; 0x118
   142e4:	cmp	r4, #10
   142e8:	addeq	r6, r6, #28
   142ec:	addne	r6, r6, #16
   142f0:	cmp	r3, #0
   142f4:	beq	145d4 <mount@plt+0x251c>
   142f8:	add	r6, r6, #4
   142fc:	b	142e0 <mount@plt+0x2228>
   14300:	mov	r4, #0
   14304:	add	r1, sp, #16
   14308:	ldr	r0, [r0, #8]
   1430c:	str	r4, [sp, #16]
   14310:	str	r4, [sp, #20]
   14314:	bl	14214 <mount@plt+0x215c>
   14318:	add	r1, sp, #20
   1431c:	mov	r6, r0
   14320:	ldr	r0, [r5, #4]
   14324:	bl	14214 <mount@plt+0x215c>
   14328:	cmp	r0, r4
   1432c:	cmpne	r6, r4
   14330:	mov	r5, r0
   14334:	beq	14690 <mount@plt+0x25d8>
   14338:	add	r4, r6, r0
   1433c:	add	r4, r4, #4
   14340:	mov	r0, r4
   14344:	bl	11d70 <malloc@plt>
   14348:	subs	r8, r0, #0
   1434c:	beq	146e0 <mount@plt+0x2628>
   14350:	ldr	sl, [sp, #16]
   14354:	mov	r2, r6
   14358:	mov	r1, sl
   1435c:	bl	11bc0 <memcpy@plt>
   14360:	add	r0, r6, #4
   14364:	mov	r2, r5
   14368:	ldr	r1, [sp, #20]
   1436c:	add	r0, r8, r0
   14370:	bl	11bc0 <memcpy@plt>
   14374:	mov	r0, sl
   14378:	bl	11b78 <free@plt>
   1437c:	ldr	r0, [sp, #20]
   14380:	bl	11b78 <free@plt>
   14384:	ldr	r2, [pc, #868]	; 146f0 <mount@plt+0x2638>
   14388:	add	r3, r8, r6
   1438c:	add	r5, r5, #4
   14390:	strh	r2, [r8, r6]
   14394:	str	r8, [r9]
   14398:	strh	r5, [r3, #2]
   1439c:	b	142a0 <mount@plt+0x21e8>
   143a0:	mov	r4, #0
   143a4:	add	r1, sp, #8
   143a8:	ldr	r0, [r0, #8]
   143ac:	str	r4, [sp, #8]
   143b0:	str	r4, [sp, #12]
   143b4:	bl	14214 <mount@plt+0x215c>
   143b8:	add	r1, sp, #12
   143bc:	mov	r6, r0
   143c0:	ldr	r0, [r5, #4]
   143c4:	bl	14214 <mount@plt+0x215c>
   143c8:	cmp	r0, r4
   143cc:	cmpne	r6, r4
   143d0:	mov	r8, r0
   143d4:	beq	146b4 <mount@plt+0x25fc>
   143d8:	add	r4, r6, r0
   143dc:	mov	r0, r4
   143e0:	bl	11d70 <malloc@plt>
   143e4:	subs	r5, r0, #0
   143e8:	beq	146e0 <mount@plt+0x2628>
   143ec:	ldr	sl, [sp, #8]
   143f0:	mov	r2, r6
   143f4:	mov	r1, sl
   143f8:	bl	11bc0 <memcpy@plt>
   143fc:	mov	r2, r8
   14400:	ldr	r1, [sp, #12]
   14404:	add	r0, r5, r6
   14408:	bl	11bc0 <memcpy@plt>
   1440c:	mov	r0, sl
   14410:	bl	11b78 <free@plt>
   14414:	ldr	r0, [sp, #12]
   14418:	bl	11b78 <free@plt>
   1441c:	cmp	r6, #0
   14420:	ble	146e0 <mount@plt+0x2628>
   14424:	mov	r3, r5
   14428:	ldrh	r2, [r3, #2]
   1442c:	add	r1, r6, #4
   14430:	cmp	r2, r1
   14434:	addeq	r2, r2, r8
   14438:	strheq	r2, [r3, #2]
   1443c:	ldrb	r2, [r3, #1]
   14440:	sub	r6, r6, r2
   14444:	cmp	r6, #0
   14448:	add	r3, r3, r2
   1444c:	bgt	14428 <mount@plt+0x2370>
   14450:	bne	146e0 <mount@plt+0x2628>
   14454:	str	r5, [r9]
   14458:	b	142a0 <mount@plt+0x21e8>
   1445c:	mov	r3, #0
   14460:	ldr	r0, [r0, #8]
   14464:	add	r1, sp, #24
   14468:	str	r3, [sp, #24]
   1446c:	bl	14214 <mount@plt+0x215c>
   14470:	subs	r5, r0, #0
   14474:	beq	146a4 <mount@plt+0x25ec>
   14478:	add	r4, r5, #4
   1447c:	mov	r0, r4
   14480:	bl	11d70 <malloc@plt>
   14484:	subs	r6, r0, #0
   14488:	beq	146e0 <mount@plt+0x2628>
   1448c:	ldr	r8, [sp, #24]
   14490:	mov	r2, r5
   14494:	mov	r1, r8
   14498:	bl	11bc0 <memcpy@plt>
   1449c:	mov	r0, r8
   144a0:	bl	11b78 <free@plt>
   144a4:	ldr	r3, [pc, #584]	; 146f4 <mount@plt+0x263c>
   144a8:	str	r6, [r9]
   144ac:	ldr	r0, [r3, #20]
   144b0:	str	r0, [r6, r5]
   144b4:	b	142a0 <mount@plt+0x21e8>
   144b8:	mov	r0, #8
   144bc:	ldr	r4, [r5, #8]
   144c0:	bl	11d70 <malloc@plt>
   144c4:	cmp	r0, #0
   144c8:	str	r0, [r9]
   144cc:	beq	146e0 <mount@plt+0x2628>
   144d0:	ldr	r2, [pc, #540]	; 146f4 <mount@plt+0x263c>
   144d4:	ldr	r1, [r4, #264]	; 0x108
   144d8:	mov	r3, #0
   144dc:	ldr	r2, [r2, #4]
   144e0:	strh	r1, [r0, #6]
   144e4:	str	r2, [r0]
   144e8:	strh	r3, [r0, #4]
   144ec:	mov	r4, #8
   144f0:	b	142a0 <mount@plt+0x21e8>
   144f4:	mov	r0, #8
   144f8:	ldr	r4, [r5, #8]
   144fc:	bl	11d70 <malloc@plt>
   14500:	cmp	r0, #0
   14504:	str	r0, [r9]
   14508:	beq	146e0 <mount@plt+0x2628>
   1450c:	ldr	r2, [pc, #480]	; 146f4 <mount@plt+0x263c>
   14510:	ldr	r1, [r4, #264]	; 0x108
   14514:	mov	r3, #0
   14518:	ldr	r2, [r2, #8]
   1451c:	strh	r1, [r0, #6]
   14520:	str	r2, [r0]
   14524:	strh	r3, [r0, #4]
   14528:	mov	r4, #8
   1452c:	b	142a0 <mount@plt+0x21e8>
   14530:	mov	r0, #8
   14534:	ldr	r4, [r5, #8]
   14538:	bl	11d70 <malloc@plt>
   1453c:	cmp	r0, #0
   14540:	str	r0, [r9]
   14544:	beq	146e0 <mount@plt+0x2628>
   14548:	ldr	r2, [pc, #420]	; 146f4 <mount@plt+0x263c>
   1454c:	ldr	r1, [r4, #264]	; 0x108
   14550:	mov	r3, #0
   14554:	ldr	r2, [r2, #12]
   14558:	strh	r1, [r0, #6]
   1455c:	str	r2, [r0]
   14560:	strh	r3, [r0, #4]
   14564:	mov	r4, #8
   14568:	b	142a0 <mount@plt+0x21e8>
   1456c:	mov	r0, #8
   14570:	ldr	r5, [r5, #8]
   14574:	bl	11d70 <malloc@plt>
   14578:	cmp	r0, #0
   1457c:	str	r0, [r9]
   14580:	beq	146e0 <mount@plt+0x2628>
   14584:	ldr	r2, [pc, #360]	; 146f4 <mount@plt+0x263c>
   14588:	ldr	r1, [r5, #264]	; 0x108
   1458c:	mov	r3, #0
   14590:	ldr	r2, [r2, #16]
   14594:	strh	r1, [r0, #6]
   14598:	str	r2, [r0]
   1459c:	strh	r3, [r0, #4]
   145a0:	b	142a0 <mount@plt+0x21e8>
   145a4:	mov	r0, #4
   145a8:	bl	11d70 <malloc@plt>
   145ac:	cmp	r0, #0
   145b0:	str	r0, [r9]
   145b4:	beq	146e0 <mount@plt+0x2628>
   145b8:	ldr	r3, [pc, #308]	; 146f4 <mount@plt+0x263c>
   145bc:	mov	r4, #4
   145c0:	ldr	r3, [r3]
   145c4:	str	r3, [r0]
   145c8:	b	142a0 <mount@plt+0x21e8>
   145cc:	mov	r4, #0
   145d0:	b	142a0 <mount@plt+0x21e8>
   145d4:	mov	r0, r6
   145d8:	bl	11d70 <malloc@plt>
   145dc:	subs	fp, r0, #0
   145e0:	beq	146e0 <mount@plt+0x2628>
   145e4:	uxtb	r3, sl
   145e8:	str	fp, [r9]
   145ec:	str	r6, [sp, #4]
   145f0:	add	sl, r8, #8
   145f4:	mov	r5, fp
   145f8:	mov	r9, r8
   145fc:	mov	r0, r4
   14600:	mov	r6, r3
   14604:	cmp	r0, #10
   14608:	movne	r1, #16
   1460c:	moveq	r1, #28
   14610:	strb	r6, [r5]
   14614:	strb	r1, [r5, #1]
   14618:	strb	r0, [r5, #4]
   1461c:	ldrh	r0, [r8, #4]
   14620:	movne	r4, r1
   14624:	moveq	r4, r1
   14628:	ldr	r1, [r8, #264]	; 0x108
   1462c:	movne	ip, #20
   14630:	moveq	ip, #32
   14634:	movne	r2, #4
   14638:	moveq	r2, #16
   1463c:	strb	r0, [r5, #5]
   14640:	str	r1, [r5, #8]
   14644:	strh	ip, [r5, #2]
   14648:	mov	r1, sl
   1464c:	add	r0, r5, #12
   14650:	bl	11bc0 <memcpy@plt>
   14654:	ldr	r9, [r9, #280]	; 0x118
   14658:	add	r2, r5, r4
   1465c:	cmp	r9, #0
   14660:	sub	r1, r2, fp
   14664:	beq	14688 <mount@plt+0x25d0>
   14668:	ldr	r3, [sp, #4]
   1466c:	sub	r1, r3, r1
   14670:	ldr	r3, [pc, #120]	; 146f0 <mount@plt+0x2638>
   14674:	strh	r3, [r5, r4]
   14678:	strh	r1, [r2, #2]
   1467c:	add	r5, r2, #4
   14680:	ldrh	r0, [r8, #6]
   14684:	b	14604 <mount@plt+0x254c>
   14688:	mov	r4, r1
   1468c:	b	142a0 <mount@plt+0x21e8>
   14690:	ldr	r0, [sp, #16]
   14694:	bl	11b78 <free@plt>
   14698:	ldr	r0, [sp, #20]
   1469c:	bl	11b78 <free@plt>
   146a0:	b	142a0 <mount@plt+0x21e8>
   146a4:	ldr	r0, [sp, #24]
   146a8:	mov	r4, r5
   146ac:	bl	11b78 <free@plt>
   146b0:	b	142a0 <mount@plt+0x21e8>
   146b4:	ldr	r0, [sp, #8]
   146b8:	bl	11b78 <free@plt>
   146bc:	ldr	r0, [sp, #12]
   146c0:	bl	11b78 <free@plt>
   146c4:	b	142a0 <mount@plt+0x21e8>
   146c8:	mov	r0, r8
   146cc:	bl	11d70 <malloc@plt>
   146d0:	cmp	r0, #0
   146d4:	strne	r0, [r9]
   146d8:	movne	r4, r8
   146dc:	bne	142a0 <mount@plt+0x21e8>
   146e0:	bl	1204c <abort@plt>
   146e4:	bl	11c2c <__stack_chk_fail@plt>
   146e8:	ldrdeq	fp, [r3], -r8
   146ec:	andseq	r0, r0, sl, lsl #24
   146f0:	andeq	r0, r0, r1, lsl #8
   146f4:	andeq	r7, r2, r0, ror r2
   146f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146fc:	sub	sp, sp, #412	; 0x19c
   14700:	ldr	r8, [pc, #336]	; 14858 <mount@plt+0x27a0>
   14704:	ldr	r1, [pc, #336]	; 1485c <mount@plt+0x27a4>
   14708:	ldr	r0, [pc, #336]	; 14860 <mount@plt+0x27a8>
   1470c:	ldr	r3, [r8]
   14710:	str	r3, [sp, #404]	; 0x194
   14714:	bl	11f5c <popen@plt>
   14718:	subs	r5, r0, #0
   1471c:	beq	1483c <mount@plt+0x2784>
   14720:	add	r0, sp, #20
   14724:	mov	r2, r5
   14728:	mov	r1, #128	; 0x80
   1472c:	bl	11b90 <fgets@plt>
   14730:	cmp	r0, #0
   14734:	beq	14834 <mount@plt+0x277c>
   14738:	ldr	r4, [pc, #292]	; 14864 <mount@plt+0x27ac>
   1473c:	ldr	r6, [pc, #292]	; 14868 <mount@plt+0x27b0>
   14740:	ldr	r9, [pc, #292]	; 1486c <mount@plt+0x27b4>
   14744:	ldr	r7, [pc, #292]	; 14870 <mount@plt+0x27b8>
   14748:	ldr	sl, [pc, #292]	; 14874 <mount@plt+0x27bc>
   1474c:	mov	r2, r5
   14750:	mov	r1, #128	; 0x80
   14754:	add	r0, sp, #20
   14758:	bl	11b90 <fgets@plt>
   1475c:	cmp	r0, #0
   14760:	beq	14834 <mount@plt+0x277c>
   14764:	ldm	r4, {r0, r1}
   14768:	mov	r2, #123	; 0x7b
   1476c:	add	fp, sp, #280	; 0x118
   14770:	str	r0, [sp, #276]	; 0x114
   14774:	add	r0, sp, #280	; 0x118
   14778:	strb	r1, [sp, #280]	; 0x118
   1477c:	add	r0, r0, #1
   14780:	mov	r1, #0
   14784:	bl	11e78 <memset@plt>
   14788:	add	r2, sp, #16
   1478c:	str	r2, [sp]
   14790:	str	fp, [sp, #4]
   14794:	add	r3, sp, #148	; 0x94
   14798:	add	r2, sp, #12
   1479c:	mov	r1, r6
   147a0:	add	r0, sp, #20
   147a4:	bl	11fa4 <sscanf@plt>
   147a8:	cmp	r0, #4
   147ac:	bne	1474c <mount@plt+0x2694>
   147b0:	mov	r0, #16
   147b4:	bl	11d70 <malloc@plt>
   147b8:	subs	fp, r0, #0
   147bc:	beq	1474c <mount@plt+0x2694>
   147c0:	ldr	r2, [sp, #16]
   147c4:	add	r0, sp, #276	; 0x114
   147c8:	str	r2, [fp, #4]
   147cc:	bl	11c20 <strdup@plt>
   147d0:	ldr	r1, [pc, #148]	; 1486c <mount@plt+0x27b4>
   147d4:	str	r0, [fp, #8]
   147d8:	add	r0, sp, #148	; 0x94
   147dc:	bl	11b0c <strcmp@plt>
   147e0:	cmp	r0, #0
   147e4:	streq	r9, [fp, #12]
   147e8:	beq	14824 <mount@plt+0x276c>
   147ec:	ldr	r1, [pc, #128]	; 14874 <mount@plt+0x27bc>
   147f0:	add	r0, sp, #148	; 0x94
   147f4:	bl	11b0c <strcmp@plt>
   147f8:	cmp	r0, #0
   147fc:	streq	sl, [fp, #12]
   14800:	beq	14824 <mount@plt+0x276c>
   14804:	add	r0, sp, #148	; 0x94
   14808:	ldr	r1, [pc, #104]	; 14878 <mount@plt+0x27c0>
   1480c:	bl	11b0c <strcmp@plt>
   14810:	cmp	r0, #0
   14814:	movne	r2, #0
   14818:	ldreq	r3, [pc, #88]	; 14878 <mount@plt+0x27c0>
   1481c:	strne	r2, [fp, #12]
   14820:	streq	r3, [fp, #12]
   14824:	ldr	r2, [r7, #1052]	; 0x41c
   14828:	str	fp, [r7, #1052]	; 0x41c
   1482c:	str	r2, [fp]
   14830:	b	1474c <mount@plt+0x2694>
   14834:	mov	r0, r5
   14838:	bl	120ac <pclose@plt>
   1483c:	ldr	r2, [sp, #404]	; 0x194
   14840:	ldr	r3, [r8]
   14844:	cmp	r2, r3
   14848:	bne	14854 <mount@plt+0x279c>
   1484c:	add	sp, sp, #412	; 0x19c
   14850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14854:	bl	11c2c <__stack_chk_fail@plt>
   14858:	ldrdeq	fp, [r3], -r8
   1485c:	andeq	r9, r2, r8, lsr ip
   14860:	andeq	r7, r2, r4, ror #29
   14864:	andeq	r7, r2, r8, lsl #5
   14868:	andeq	r7, r2, r8, lsl #30
   1486c:	andeq	r9, r2, r0, lsl sl
   14870:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   14874:	ldrdeq	r9, [r2], -ip
   14878:	andeq	r7, r2, r8, lsl pc
   1487c:	push	{r4, r5, r6, r7, lr}
   14880:	mov	r2, r0
   14884:	ldr	r6, [pc, #288]	; 149ac <mount@plt+0x28f4>
   14888:	ldr	r3, [r2], #88	; 0x58
   1488c:	mov	r5, r0
   14890:	sub	sp, sp, #84	; 0x54
   14894:	ldr	ip, [r6]
   14898:	mov	r4, r1
   1489c:	sub	r3, r3, #88	; 0x58
   148a0:	mov	r1, #18
   148a4:	mov	r0, sp
   148a8:	str	ip, [sp, #76]	; 0x4c
   148ac:	bl	266b0 <mount@plt+0x145f8>
   148b0:	ldrb	r1, [r5, #17]
   148b4:	ldrh	r3, [r5, #22]
   148b8:	ldrh	r2, [r5, #20]
   148bc:	str	r1, [r4, #548]	; 0x224
   148c0:	rev16	r3, r3
   148c4:	ldrb	r1, [r5, #16]
   148c8:	add	r0, r4, #280	; 0x118
   148cc:	rev16	r2, r2
   148d0:	uxth	r3, r3
   148d4:	ldr	r7, [r5, #76]	; 0x4c
   148d8:	ldr	lr, [r5, #72]	; 0x48
   148dc:	strh	r1, [r0, #2]
   148e0:	ldr	ip, [r5, #84]	; 0x54
   148e4:	uxth	r2, r2
   148e8:	str	r3, [r4, #544]	; 0x220
   148ec:	ldr	r3, [sp, #60]	; 0x3c
   148f0:	str	r2, [r4, #540]	; 0x21c
   148f4:	ldr	r2, [r5, #56]	; 0x38
   148f8:	ldr	r0, [r5, #80]	; 0x50
   148fc:	cmp	r3, #0
   14900:	str	r2, [r4, #572]	; 0x23c
   14904:	mov	r2, #0
   14908:	str	r7, [r4, #556]	; 0x22c
   1490c:	str	lr, [r4, #552]	; 0x228
   14910:	str	ip, [r4, #560]	; 0x230
   14914:	str	r0, [r4, #564]	; 0x234
   14918:	ldr	ip, [r5, #60]	; 0x3c
   1491c:	ldr	r0, [r5, #64]	; 0x40
   14920:	str	r2, [r4, #592]	; 0x250
   14924:	ldrne	r3, [r3, #4]
   14928:	strh	r1, [r4, #18]
   1492c:	strne	r3, [r4, #592]	; 0x250
   14930:	ldr	r3, [sp, #40]	; 0x28
   14934:	str	ip, [r4, #576]	; 0x240
   14938:	cmp	r3, #0
   1493c:	str	r0, [r4, #580]	; 0x244
   14940:	ldrbne	r3, [r3, #4]
   14944:	cmp	r1, #2
   14948:	addeq	r2, r4, #276	; 0x114
   1494c:	strh	r3, [r4, #10]
   14950:	addne	r2, r4, #276	; 0x114
   14954:	moveq	r3, #4
   14958:	movne	r3, #16
   1495c:	moveq	r7, r3
   14960:	movne	r7, r3
   14964:	strheq	r3, [r2, #2]
   14968:	strhne	r3, [r2, #2]
   1496c:	add	r1, r5, #24
   14970:	mov	r2, r7
   14974:	add	r0, r4, #20
   14978:	strh	r3, [r4, #14]
   1497c:	bl	11bc0 <memcpy@plt>
   14980:	ldr	r2, [sp, #76]	; 0x4c
   14984:	ldr	r3, [r6]
   14988:	add	r0, r4, #284	; 0x11c
   1498c:	cmp	r2, r3
   14990:	add	r1, r5, #40	; 0x28
   14994:	bne	149a8 <mount@plt+0x28f0>
   14998:	mov	r2, r7
   1499c:	add	sp, sp, #84	; 0x54
   149a0:	pop	{r4, r5, r6, r7, lr}
   149a4:	b	11bc0 <memcpy@plt>
   149a8:	bl	11c2c <__stack_chk_fail@plt>
   149ac:	ldrdeq	fp, [r3], -r8
   149b0:	ldr	r3, [r1, #8]
   149b4:	cmp	r3, #0
   149b8:	beq	149e8 <mount@plt+0x2930>
   149bc:	push	{r4, lr}
   149c0:	ldr	r1, [r0, #8]
   149c4:	ldr	r2, [pc, #36]	; 149f0 <mount@plt+0x2938>
   149c8:	cmp	r1, #0
   149cc:	moveq	r1, r2
   149d0:	mov	r0, r3
   149d4:	mov	r2, #0
   149d8:	bl	11d34 <fnmatch@plt>
   149dc:	clz	r0, r0
   149e0:	lsr	r0, r0, #5
   149e4:	pop	{r4, pc}
   149e8:	mov	r0, #1
   149ec:	bx	lr
   149f0:	andeq	sl, r2, r8, ror #29
   149f4:	ldr	r3, [pc, #360]	; 14b64 <mount@plt+0x2aac>
   149f8:	push	{r4, r5, r6, lr}
   149fc:	mov	r4, r0
   14a00:	umull	r1, r3, r3, r0
   14a04:	ldr	r2, [pc, #348]	; 14b68 <mount@plt+0x2ab0>
   14a08:	ldr	r5, [pc, #348]	; 14b6c <mount@plt+0x2ab4>
   14a0c:	lsr	r3, r3, #6
   14a10:	mov	r1, #0
   14a14:	strb	r1, [r5, #1056]	; 0x420
   14a18:	umull	r1, r2, r2, r3
   14a1c:	sub	sp, sp, #8
   14a20:	lsr	r2, r2, #5
   14a24:	cmp	r2, #0
   14a28:	rsb	r6, r2, r2, lsl #4
   14a2c:	sub	r6, r3, r6, lsl #2
   14a30:	bne	14abc <mount@plt+0x2a04>
   14a34:	rsb	r2, r3, r3, lsl #5
   14a38:	cmp	r6, #0
   14a3c:	add	r3, r3, r2, lsl #2
   14a40:	sub	r4, r0, r3, lsl #3
   14a44:	bne	14a80 <mount@plt+0x29c8>
   14a48:	cmp	r4, #0
   14a4c:	beq	14a74 <mount@plt+0x29bc>
   14a50:	add	r5, r5, #1056	; 0x420
   14a54:	ldr	r0, [pc, #276]	; 14b70 <mount@plt+0x2ab8>
   14a58:	bl	11e00 <strlen@plt>
   14a5c:	str	r4, [sp]
   14a60:	ldr	r3, [pc, #268]	; 14b74 <mount@plt+0x2abc>
   14a64:	mvn	r2, #0
   14a68:	mov	r1, #1
   14a6c:	add	r0, r5, r0
   14a70:	bl	11e48 <__sprintf_chk@plt>
   14a74:	ldr	r0, [pc, #244]	; 14b70 <mount@plt+0x2ab8>
   14a78:	add	sp, sp, #8
   14a7c:	pop	{r4, r5, r6, pc}
   14a80:	cmp	r6, #9
   14a84:	addgt	r5, r5, #1056	; 0x420
   14a88:	bgt	14b0c <mount@plt+0x2a54>
   14a8c:	cmp	r4, #0
   14a90:	beq	14b40 <mount@plt+0x2a88>
   14a94:	ldr	r3, [pc, #220]	; 14b78 <mount@plt+0x2ac0>
   14a98:	add	r5, r5, #1056	; 0x420
   14a9c:	str	r3, [sp, #4]
   14aa0:	str	r6, [sp]
   14aa4:	mov	r0, r5
   14aa8:	ldr	r3, [pc, #204]	; 14b7c <mount@plt+0x2ac4>
   14aac:	mvn	r2, #0
   14ab0:	mov	r1, #1
   14ab4:	bl	11e48 <__sprintf_chk@plt>
   14ab8:	b	14a54 <mount@plt+0x299c>
   14abc:	ldr	r3, [pc, #188]	; 14b80 <mount@plt+0x2ac8>
   14ac0:	add	r5, r5, #1056	; 0x420
   14ac4:	str	r2, [sp, #4]
   14ac8:	str	r3, [sp]
   14acc:	mov	r0, r5
   14ad0:	mov	r3, #64	; 0x40
   14ad4:	mov	r2, #1
   14ad8:	mov	r1, #48	; 0x30
   14adc:	bl	12088 <__snprintf_chk@plt>
   14ae0:	ldr	r3, [pc, #156]	; 14b84 <mount@plt+0x2acc>
   14ae4:	cmp	r4, r3
   14ae8:	movhi	r4, #0
   14aec:	movls	r4, #1
   14af0:	cmp	r6, #0
   14af4:	moveq	r4, #0
   14af8:	cmp	r4, #0
   14afc:	beq	14a74 <mount@plt+0x29bc>
   14b00:	cmp	r6, #9
   14b04:	movle	r0, r5
   14b08:	ble	14b10 <mount@plt+0x2a58>
   14b0c:	ldr	r0, [pc, #92]	; 14b70 <mount@plt+0x2ab8>
   14b10:	bl	11e00 <strlen@plt>
   14b14:	ldr	r3, [pc, #108]	; 14b88 <mount@plt+0x2ad0>
   14b18:	str	r6, [sp]
   14b1c:	str	r3, [sp, #4]
   14b20:	mvn	r2, #0
   14b24:	ldr	r3, [pc, #80]	; 14b7c <mount@plt+0x2ac4>
   14b28:	mov	r1, #1
   14b2c:	add	r0, r5, r0
   14b30:	bl	11e48 <__sprintf_chk@plt>
   14b34:	ldr	r0, [pc, #52]	; 14b70 <mount@plt+0x2ab8>
   14b38:	add	sp, sp, #8
   14b3c:	pop	{r4, r5, r6, pc}
   14b40:	ldr	r3, [pc, #64]	; 14b88 <mount@plt+0x2ad0>
   14b44:	str	r6, [sp]
   14b48:	str	r3, [sp, #4]
   14b4c:	add	r0, r5, #1056	; 0x420
   14b50:	ldr	r3, [pc, #36]	; 14b7c <mount@plt+0x2ac4>
   14b54:	mvn	r2, #0
   14b58:	mov	r1, #1
   14b5c:	bl	11e48 <__sprintf_chk@plt>
   14b60:	b	14a74 <mount@plt+0x29bc>
   14b64:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   14b68:	stmhi	r8, {r0, r3, r7, fp, pc}
   14b6c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   14b70:			; <UNDEFINED> instruction: 0x0003e3b0
   14b74:	andeq	r7, r2, r8, lsr pc
   14b78:	andeq	r7, r2, r4, lsr pc
   14b7c:	andeq	r7, r2, r8, lsr #30
   14b80:	andeq	r7, r2, r0, lsr #30
   14b84:			; <UNDEFINED> instruction: 0x000927bf
   14b88:	andeq	r7, r2, r0, lsr pc
   14b8c:	push	{r0, r1, r2, r3}
   14b90:	ldr	r3, [pc, #332]	; 14ce4 <mount@plt+0x2c2c>
   14b94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b98:	sub	sp, sp, #16
   14b9c:	ldr	r3, [r3]
   14ba0:	ldr	r6, [pc, #320]	; 14ce8 <mount@plt+0x2c30>
   14ba4:	ldr	r9, [sp, #48]	; 0x30
   14ba8:	ldr	r3, [r3, #12]
   14bac:	ldr	r2, [r6]
   14bb0:	cmp	r3, #0
   14bb4:	str	r2, [sp, #12]
   14bb8:	bne	14c64 <mount@plt+0x2bac>
   14bbc:	ldr	r4, [pc, #296]	; 14cec <mount@plt+0x2c34>
   14bc0:	ldr	r3, [r4, #1044]	; 0x414
   14bc4:	cmp	r3, #0
   14bc8:	beq	14cd4 <mount@plt+0x2c1c>
   14bcc:	ldr	r8, [pc, #284]	; 14cf0 <mount@plt+0x2c38>
   14bd0:	add	r7, sp, #52	; 0x34
   14bd4:	ldr	r2, [r4, #1048]	; 0x418
   14bd8:	ldr	r3, [r4, #1040]	; 0x410
   14bdc:	add	ip, r2, #8
   14be0:	ldr	r1, [r2, #4]
   14be4:	ldrh	r0, [r3], #2
   14be8:	sub	r1, r1, ip
   14bec:	sub	r1, r8, r1
   14bf0:	add	r0, r3, r0
   14bf4:	mov	r2, #1
   14bf8:	str	r7, [sp, #4]
   14bfc:	str	r9, [sp]
   14c00:	mvn	r3, #0
   14c04:	str	r7, [sp, #8]
   14c08:	bl	11bb4 <__vsnprintf_chk@plt>
   14c0c:	ldr	r5, [r4, #1048]	; 0x418
   14c10:	ldr	sl, [r4, #1040]	; 0x410
   14c14:	add	r1, r5, #8
   14c18:	ldr	ip, [r5, #4]
   14c1c:	sub	r2, ip, r1
   14c20:	sub	r2, r8, r2
   14c24:	cmn	r0, #1
   14c28:	cmpne	r0, r2
   14c2c:	blt	14c84 <mount@plt+0x2bcc>
   14c30:	cmp	sl, r1
   14c34:	bne	14c8c <mount@plt+0x2bd4>
   14c38:	ldrh	lr, [r1]
   14c3c:	cmp	r0, r2
   14c40:	movge	r0, r2
   14c44:	rsb	r3, lr, #65280	; 0xff00
   14c48:	add	r3, r3, #255	; 0xff
   14c4c:	cmp	r3, r0
   14c50:	movlt	r0, r3
   14c54:	add	ip, ip, r0
   14c58:	add	r0, lr, r0
   14c5c:	str	ip, [r5, #4]
   14c60:	strh	r0, [r1]
   14c64:	ldr	r2, [sp, #12]
   14c68:	ldr	r3, [r6]
   14c6c:	cmp	r2, r3
   14c70:	bne	14ce0 <mount@plt+0x2c28>
   14c74:	add	sp, sp, #16
   14c78:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14c7c:	add	sp, sp, #16
   14c80:	bx	lr
   14c84:	mov	r1, sl
   14c88:	b	14c38 <mount@plt+0x2b80>
   14c8c:	bl	141d0 <mount@plt+0x2118>
   14c90:	ldrh	r2, [sl]
   14c94:	mov	r1, sl
   14c98:	add	r2, r2, #2
   14c9c:	str	r0, [r5]
   14ca0:	add	r0, r0, #8
   14ca4:	bl	11bc0 <memcpy@plt>
   14ca8:	ldr	r0, [r5]
   14cac:	ldrh	ip, [sl]
   14cb0:	mvn	r3, #1
   14cb4:	ldr	r1, [r0, #4]
   14cb8:	sub	r2, r3, ip
   14cbc:	add	r3, r1, ip
   14cc0:	str	r3, [r0, #4]
   14cc4:	ldr	r3, [r5, #4]
   14cc8:	add	r3, r3, r2
   14ccc:	str	r3, [r5, #4]
   14cd0:	b	14bd4 <mount@plt+0x2b1c>
   14cd4:	bl	141d0 <mount@plt+0x2118>
   14cd8:	str	r0, [r4, #1044]	; 0x414
   14cdc:	b	14bcc <mount@plt+0x2b14>
   14ce0:	bl	11c2c <__stack_chk_fail@plt>
   14ce4:	andeq	ip, r3, ip, lsr r2
   14ce8:	ldrdeq	fp, [r3], -r8
   14cec:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   14cf0:	strdeq	pc, [pc], -r8
   14cf4:	ldr	r1, [r0, #564]	; 0x234
   14cf8:	push	{r4, lr}
   14cfc:	cmp	r1, #0
   14d00:	mov	r4, r0
   14d04:	bne	14d3c <mount@plt+0x2c84>
   14d08:	ldr	r1, [r4, #560]	; 0x230
   14d0c:	ldr	r0, [pc, #52]	; 14d48 <mount@plt+0x2c90>
   14d10:	bl	14b8c <mount@plt+0x2ad4>
   14d14:	add	r3, r4, #576	; 0x240
   14d18:	ldr	r0, [pc, #44]	; 14d4c <mount@plt+0x2c94>
   14d1c:	ldrd	r2, [r3]
   14d20:	bl	14b8c <mount@plt+0x2ad4>
   14d24:	ldr	r1, [r4, #592]	; 0x250
   14d28:	cmp	r1, #0
   14d2c:	popeq	{r4, pc}
   14d30:	ldr	r0, [pc, #24]	; 14d50 <mount@plt+0x2c98>
   14d34:	pop	{r4, lr}
   14d38:	b	14b8c <mount@plt+0x2ad4>
   14d3c:	ldr	r0, [pc, #16]	; 14d54 <mount@plt+0x2c9c>
   14d40:	bl	14b8c <mount@plt+0x2ad4>
   14d44:	b	14d08 <mount@plt+0x2c50>
   14d48:	andeq	r7, r2, r8, asr #30
   14d4c:	andeq	r7, r2, r0, asr pc
   14d50:	andeq	r7, r2, ip, asr pc
   14d54:	andeq	r7, r2, r0, asr #30
   14d58:	push	{r4, r5, r6, lr}
   14d5c:	mov	r6, r0
   14d60:	ldr	r4, [r0, r1, lsl #2]
   14d64:	sub	sp, sp, #16
   14d68:	cmp	r4, #0
   14d6c:	mov	r5, r1
   14d70:	beq	14dc8 <mount@plt+0x2d10>
   14d74:	ldr	r0, [r4, #28]
   14d78:	ldrd	r2, [r4, #8]
   14d7c:	ldr	r1, [r4, #4]
   14d80:	str	r0, [sp, #12]
   14d84:	ldr	r0, [r4, #24]
   14d88:	str	r0, [sp, #8]
   14d8c:	ldr	r0, [r4, #20]
   14d90:	str	r0, [sp, #4]
   14d94:	ldr	r0, [r4, #16]
   14d98:	str	r0, [sp]
   14d9c:	ldr	r0, [pc, #148]	; 14e38 <mount@plt+0x2d80>
   14da0:	bl	14b8c <mount@plt+0x2ad4>
   14da4:	ldr	r3, [r6, r5, lsl #2]
   14da8:	ldrh	r3, [r3]
   14dac:	sub	r3, r3, #4
   14db0:	cmp	r3, #31
   14db4:	bhi	14dfc <mount@plt+0x2d44>
   14db8:	ldr	r0, [pc, #124]	; 14e3c <mount@plt+0x2d84>
   14dbc:	add	sp, sp, #16
   14dc0:	pop	{r4, r5, r6, lr}
   14dc4:	b	14b8c <mount@plt+0x2ad4>
   14dc8:	cmp	r1, #7
   14dcc:	bne	14df4 <mount@plt+0x2d3c>
   14dd0:	ldr	r0, [r0, #4]
   14dd4:	cmp	r0, #0
   14dd8:	beq	14df4 <mount@plt+0x2d3c>
   14ddc:	ldrd	r2, [r0, #8]
   14de0:	ldr	r1, [r0, #4]
   14de4:	ldr	r0, [r0, #16]
   14de8:	str	r0, [sp]
   14dec:	ldr	r0, [pc, #76]	; 14e40 <mount@plt+0x2d88>
   14df0:	bl	14b8c <mount@plt+0x2ad4>
   14df4:	add	sp, sp, #16
   14df8:	pop	{r4, r5, r6, pc}
   14dfc:	ldr	r1, [r4, #32]
   14e00:	ldr	r0, [pc, #60]	; 14e44 <mount@plt+0x2d8c>
   14e04:	bl	14b8c <mount@plt+0x2ad4>
   14e08:	ldr	r3, [r6, r5, lsl #2]
   14e0c:	ldrh	r3, [r3]
   14e10:	sub	r3, r3, #4
   14e14:	cmp	r3, #35	; 0x23
   14e18:	bls	14db8 <mount@plt+0x2d00>
   14e1c:	ldr	r1, [r4, #36]	; 0x24
   14e20:	ldr	r0, [pc, #32]	; 14e48 <mount@plt+0x2d90>
   14e24:	bl	14b8c <mount@plt+0x2ad4>
   14e28:	ldr	r0, [pc, #12]	; 14e3c <mount@plt+0x2d84>
   14e2c:	add	sp, sp, #16
   14e30:	pop	{r4, r5, r6, lr}
   14e34:	b	14b8c <mount@plt+0x2ad4>
   14e38:	andeq	r7, r2, r4, lsl #31
   14e3c:	andeq	r9, r2, ip, asr #4
   14e40:	andeq	r7, r2, ip, ror #30
   14e44:	andeq	r7, r2, ip, lsr #31
   14e48:			; <UNDEFINED> instruction: 0x00027fb4
   14e4c:	push	{r4, lr}
   14e50:	mov	r4, r0
   14e54:	ldr	r0, [pc, #68]	; 14ea0 <mount@plt+0x2de8>
   14e58:	ldr	r1, [r4]
   14e5c:	bl	14b8c <mount@plt+0x2ad4>
   14e60:	ldr	r1, [r4, #4]
   14e64:	ldr	r0, [pc, #56]	; 14ea4 <mount@plt+0x2dec>
   14e68:	bl	14b8c <mount@plt+0x2ad4>
   14e6c:	ldr	r1, [r4, #8]
   14e70:	ldr	r0, [pc, #48]	; 14ea8 <mount@plt+0x2df0>
   14e74:	bl	14b8c <mount@plt+0x2ad4>
   14e78:	ldr	r1, [r4, #12]
   14e7c:	ldr	r0, [pc, #40]	; 14eac <mount@plt+0x2df4>
   14e80:	bl	14b8c <mount@plt+0x2ad4>
   14e84:	ldr	r1, [r4, #16]
   14e88:	ldr	r0, [pc, #32]	; 14eb0 <mount@plt+0x2df8>
   14e8c:	bl	14b8c <mount@plt+0x2ad4>
   14e90:	ldr	r1, [r4, #24]
   14e94:	ldr	r0, [pc, #24]	; 14eb4 <mount@plt+0x2dfc>
   14e98:	pop	{r4, lr}
   14e9c:	b	14b8c <mount@plt+0x2ad4>
   14ea0:			; <UNDEFINED> instruction: 0x00027fbc
   14ea4:	andeq	r7, r2, r8, asr #31
   14ea8:	ldrdeq	r7, [r2], -r4
   14eac:	andeq	r7, r2, r4, ror #31
   14eb0:	strdeq	r7, [r2], -r0
   14eb4:	strdeq	r7, [r2], -r8
   14eb8:	mov	r2, r0
   14ebc:	push	{r4, lr}
   14ec0:	mov	r4, r0
   14ec4:	ldrb	r0, [r2], #4
   14ec8:	cmp	r0, #10
   14ecc:	moveq	r1, #16
   14ed0:	movne	r1, #4
   14ed4:	bl	1e804 <mount@plt+0xc74c>
   14ed8:	ldrb	r2, [r4, #1]
   14edc:	mov	r1, r0
   14ee0:	ldr	r0, [pc, #20]	; 14efc <mount@plt+0x2e44>
   14ee4:	bl	14b8c <mount@plt+0x2ad4>
   14ee8:	ldrh	r1, [r4, #2]
   14eec:	add	r0, r4, #20
   14ef0:	ldr	r2, [pc, #8]	; 14f00 <mount@plt+0x2e48>
   14ef4:	pop	{r4, lr}
   14ef8:	b	1eaf8 <mount@plt+0xca40>
   14efc:	andeq	r8, r2, r8
   14f00:	andeq	r8, r2, r0, lsl r0
   14f04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f08:	sub	sp, sp, #28
   14f0c:	ldr	r9, [pc, #1008]	; 15304 <mount@plt+0x324c>
   14f10:	ldr	r3, [pc, #1008]	; 15308 <mount@plt+0x3250>
   14f14:	ldr	r4, [r9, #1044]	; 0x414
   14f18:	ldr	r3, [r3]
   14f1c:	cmp	r4, #0
   14f20:	str	r4, [sp, #4]
   14f24:	str	r3, [sp, #20]
   14f28:	beq	1522c <mount@plt+0x3174>
   14f2c:	ldr	r3, [r9, #1040]	; 0x410
   14f30:	ldr	r1, [r9, #1048]	; 0x418
   14f34:	mov	r0, #1
   14f38:	ldrh	r2, [r3]
   14f3c:	ldr	r3, [r1, #4]
   14f40:	add	r6, r4, #8
   14f44:	and	r2, r2, r0
   14f48:	add	r3, r3, r2
   14f4c:	str	r3, [r1, #4]
   14f50:	bl	12028 <isatty@plt>
   14f54:	cmp	r0, #0
   14f58:	bne	15248 <mount@plt+0x3190>
   14f5c:	mov	sl, #80	; 0x50
   14f60:	ldr	r5, [pc, #932]	; 1530c <mount@plt+0x3254>
   14f64:	mov	r8, #1
   14f68:	mov	r4, r5
   14f6c:	ldr	r3, [r4, #12]
   14f70:	cmp	r3, #0
   14f74:	bne	14fb0 <mount@plt+0x2ef8>
   14f78:	cmp	r8, #0
   14f7c:	ldr	r7, [r4, #20]
   14f80:	bne	14f9c <mount@plt+0x2ee4>
   14f84:	cmp	r7, #0
   14f88:	streq	r8, [r4, #16]
   14f8c:	beq	14fb0 <mount@plt+0x2ef8>
   14f90:	ldr	r0, [r4, #8]
   14f94:	bl	11e00 <strlen@plt>
   14f98:	add	r7, r7, r0
   14f9c:	cmp	sl, r7
   14fa0:	movlt	r7, sl
   14fa4:	cmp	r7, #0
   14fa8:	movne	r8, #0
   14fac:	str	r7, [r4, #16]
   14fb0:	add	r4, r4, #24
   14fb4:	sub	r3, r4, r5
   14fb8:	cmp	r3, #192	; 0xc0
   14fbc:	ble	14f6c <mount@plt+0x2eb4>
   14fc0:	ldr	r3, [pc, #840]	; 15310 <mount@plt+0x3258>
   14fc4:	mov	r1, #0
   14fc8:	add	r4, r3, #4
   14fcc:	ldr	ip, [r3, #20]
   14fd0:	mov	lr, r1
   14fd4:	sub	fp, r3, #20
   14fd8:	add	r7, r4, #24
   14fdc:	cmp	ip, #0
   14fe0:	sub	r8, r7, r5
   14fe4:	bne	15008 <mount@plt+0x2f50>
   14fe8:	cmp	r8, #192	; 0xc0
   14fec:	bgt	150c4 <mount@plt+0x300c>
   14ff0:	ldr	ip, [r4, #40]	; 0x28
   14ff4:	mov	r4, r7
   14ff8:	add	r7, r4, #24
   14ffc:	cmp	ip, #0
   15000:	sub	r8, r7, r5
   15004:	beq	14fe8 <mount@plt+0x2f30>
   15008:	add	r3, lr, #1
   1500c:	cmp	r8, #192	; 0xc0
   15010:	add	r0, r1, ip
   15014:	str	r3, [sp]
   15018:	bgt	152f4 <mount@plt+0x323c>
   1501c:	ldr	ip, [r4, #40]	; 0x28
   15020:	cmp	ip, #0
   15024:	bne	15270 <mount@plt+0x31b8>
   15028:	mov	r3, r7
   1502c:	b	1503c <mount@plt+0x2f84>
   15030:	ldr	r2, [r3, #16]
   15034:	cmp	r2, #0
   15038:	bne	15270 <mount@plt+0x31b8>
   1503c:	add	r3, r3, #24
   15040:	sub	r2, r3, r5
   15044:	cmp	r2, #192	; 0xc0
   15048:	ble	15030 <mount@plt+0x2f78>
   1504c:	cmp	r0, sl
   15050:	beq	152e0 <mount@plt+0x3228>
   15054:	cmp	r0, sl
   15058:	movgt	r0, r1
   1505c:	strgt	lr, [sp]
   15060:	subgt	r8, r4, r5
   15064:	movgt	r7, r4
   15068:	ldr	r1, [sp]
   1506c:	subgt	r4, r4, #24
   15070:	sub	r0, sl, r0
   15074:	bl	26c38 <mount@plt+0x14b80>
   15078:	cmp	r4, fp
   1507c:	bls	150b0 <mount@plt+0x2ff8>
   15080:	mov	r3, r4
   15084:	ldr	r2, [r3, #16]
   15088:	cmp	r2, #0
   1508c:	beq	150a4 <mount@plt+0x2fec>
   15090:	cmp	r1, #0
   15094:	add	r2, r0, r2
   15098:	subne	r1, r1, #1
   1509c:	addne	r2, r2, #1
   150a0:	str	r2, [r3, #16]
   150a4:	sub	r3, r3, #24
   150a8:	cmp	r3, fp
   150ac:	bhi	15084 <mount@plt+0x2fcc>
   150b0:	mov	lr, #0
   150b4:	cmp	r8, #192	; 0xc0
   150b8:	mov	r1, lr
   150bc:	mov	fp, r4
   150c0:	ble	14ff0 <mount@plt+0x2f38>
   150c4:	ldr	r3, [pc, #580]	; 15310 <mount@plt+0x3258>
   150c8:	ldr	r2, [sp, #4]
   150cc:	ldr	r4, [pc, #568]	; 1530c <mount@plt+0x3254>
   150d0:	ldr	r3, [r3, #20]
   150d4:	str	r2, [r9, #1048]	; 0x418
   150d8:	cmp	r3, #0
   150dc:	bne	150f0 <mount@plt+0x3038>
   150e0:	add	r4, r4, #24
   150e4:	ldr	r3, [r4, #16]
   150e8:	cmp	r3, #0
   150ec:	beq	150e0 <mount@plt+0x3028>
   150f0:	ldr	fp, [pc, #540]	; 15314 <mount@plt+0x325c>
   150f4:	mov	r7, #1
   150f8:	mov	r8, #0
   150fc:	ldr	r1, [r4]
   15100:	ldrh	r2, [r6]
   15104:	cmp	r1, #0
   15108:	cmpne	r3, #0
   1510c:	bne	15288 <mount@plt+0x31d0>
   15110:	add	sl, r6, #2
   15114:	ldr	r3, [fp]
   15118:	mov	r0, sl
   1511c:	mov	r1, #1
   15120:	bl	11cb0 <fwrite@plt>
   15124:	ldr	r3, [r4]
   15128:	ldr	r2, [r4, #16]
   1512c:	cmp	r3, #2
   15130:	cmpne	r2, #0
   15134:	beq	15174 <mount@plt+0x30bc>
   15138:	add	r8, r8, r0
   1513c:	sub	r2, r2, r8
   15140:	cmp	r3, #1
   15144:	addeq	r2, r2, r2, lsr #31
   15148:	asreq	r2, r2, #1
   1514c:	cmp	r2, #0
   15150:	ble	15174 <mount@plt+0x30bc>
   15154:	mov	r3, #32
   15158:	ldr	r1, [pc, #440]	; 15318 <mount@plt+0x3260>
   1515c:	mov	r0, #1
   15160:	bl	11ec0 <__printf_chk@plt>
   15164:	b	15174 <mount@plt+0x30bc>
   15168:	ldr	r3, [r4, #12]
   1516c:	cmp	r3, #0
   15170:	beq	151a0 <mount@plt+0x30e8>
   15174:	sub	r3, r4, r5
   15178:	cmp	r3, #192	; 0xc0
   1517c:	addne	r4, r4, #24
   15180:	bne	15168 <mount@plt+0x30b0>
   15184:	ldr	r4, [pc, #384]	; 1530c <mount@plt+0x3254>
   15188:	mov	r0, #10
   1518c:	bl	11e84 <putchar@plt>
   15190:	ldr	r3, [r4, #12]
   15194:	mov	r7, #0
   15198:	cmp	r3, #0
   1519c:	bne	15174 <mount@plt+0x30bc>
   151a0:	ldrh	r6, [r6]
   151a4:	ldr	r3, [r9, #1048]	; 0x418
   151a8:	add	r6, r6, #1
   151ac:	bic	r6, r6, #1
   151b0:	ldr	r2, [r3, #4]
   151b4:	add	r6, sl, r6
   151b8:	cmp	r6, r2
   151bc:	beq	152c8 <mount@plt+0x3210>
   151c0:	cmp	r6, #0
   151c4:	beq	151f8 <mount@plt+0x3140>
   151c8:	cmp	r7, #0
   151cc:	add	sl, r7, #1
   151d0:	beq	151e8 <mount@plt+0x3130>
   151d4:	ldr	r2, [r4, #8]
   151d8:	ldr	r1, [pc, #316]	; 1531c <mount@plt+0x3264>
   151dc:	mov	r0, #1
   151e0:	bl	11ec0 <__printf_chk@plt>
   151e4:	mov	r7, r0
   151e8:	mov	r8, r7
   151ec:	ldr	r3, [r4, #16]
   151f0:	mov	r7, sl
   151f4:	b	150fc <mount@plt+0x3044>
   151f8:	ldr	r0, [r9, #1044]	; 0x414
   151fc:	cmp	r0, #0
   15200:	str	r0, [r9, #1048]	; 0x418
   15204:	beq	1521c <mount@plt+0x3164>
   15208:	ldr	r4, [r0]
   1520c:	str	r4, [r9, #1048]	; 0x418
   15210:	bl	11b78 <free@plt>
   15214:	subs	r0, r4, #0
   15218:	bne	15208 <mount@plt+0x3150>
   1521c:	ldr	r2, [pc, #236]	; 15310 <mount@plt+0x3258>
   15220:	mov	r3, #0
   15224:	str	r3, [r9, #1044]	; 0x414
   15228:	str	r5, [r2]
   1522c:	ldr	r3, [pc, #212]	; 15308 <mount@plt+0x3250>
   15230:	ldr	r2, [sp, #20]
   15234:	ldr	r3, [r3]
   15238:	cmp	r2, r3
   1523c:	bne	15300 <mount@plt+0x3248>
   15240:	add	sp, sp, #28
   15244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15248:	add	r2, sp, #12
   1524c:	ldr	r1, [pc, #204]	; 15320 <mount@plt+0x3268>
   15250:	mov	r0, #1
   15254:	bl	11cc8 <ioctl@plt>
   15258:	cmn	r0, #1
   1525c:	beq	14f5c <mount@plt+0x2ea4>
   15260:	ldrh	sl, [sp, #14]
   15264:	cmp	sl, #0
   15268:	moveq	sl, #80	; 0x50
   1526c:	b	14f60 <mount@plt+0x2ea8>
   15270:	cmp	r0, sl
   15274:	bge	1504c <mount@plt+0x2f94>
   15278:	ldr	lr, [sp]
   1527c:	mov	r1, r0
   15280:	mov	r4, r7
   15284:	b	14fd8 <mount@plt+0x2f20>
   15288:	sub	r3, r3, r2
   1528c:	cmp	r1, #1
   15290:	sub	r3, r3, r8
   15294:	addeq	r3, r3, #1
   15298:	addeq	r3, r3, r3, lsr #31
   1529c:	asreq	r3, r3, #1
   152a0:	cmp	r3, #0
   152a4:	ble	15110 <mount@plt+0x3058>
   152a8:	mov	r2, r3
   152ac:	ldr	r1, [pc, #100]	; 15318 <mount@plt+0x3260>
   152b0:	mov	r3, #32
   152b4:	mov	r0, #1
   152b8:	bl	11ec0 <__printf_chk@plt>
   152bc:	ldrh	r2, [r6]
   152c0:	add	r8, r8, r0
   152c4:	b	15110 <mount@plt+0x3058>
   152c8:	ldr	r6, [r3]
   152cc:	cmp	r6, #0
   152d0:	str	r6, [r9, #1048]	; 0x418
   152d4:	beq	151f8 <mount@plt+0x3140>
   152d8:	add	r6, r6, #8
   152dc:	b	151c8 <mount@plt+0x3110>
   152e0:	mov	lr, #0
   152e4:	mov	fp, r4
   152e8:	mov	r1, lr
   152ec:	mov	r4, r7
   152f0:	b	14fd8 <mount@plt+0x2f20>
   152f4:	cmp	r0, sl
   152f8:	bne	15054 <mount@plt+0x2f9c>
   152fc:	b	150c4 <mount@plt+0x300c>
   15300:	bl	11c2c <__stack_chk_fail@plt>
   15304:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   15308:	ldrdeq	fp, [r3], -r8
   1530c:	andeq	ip, r3, r0, asr #4
   15310:	andeq	ip, r3, ip, lsr r2
   15314:	andeq	sp, r3, r4, lsl #31
   15318:	andeq	r8, r2, r4, lsl r0
   1531c:	andeq	sl, r2, r8, asr #28
   15320:	andeq	r5, r0, r3, lsl r4
   15324:	vldr	d7, [pc, #124]	; 153a8 <mount@plt+0x32f0>
   15328:	push	{r4, lr}
   1532c:	mov	r4, r0
   15330:	sub	sp, sp, #8
   15334:	vcmpe.f64	d0, d7
   15338:	vmrs	APSR_nzcv, fpscr
   1533c:	bgt	15380 <mount@plt+0x32c8>
   15340:	vldr	d7, [pc, #104]	; 153b0 <mount@plt+0x32f8>
   15344:	vcmpe.f64	d0, d7
   15348:	vmrs	APSR_nzcv, fpscr
   1534c:	vdivgt.f64	d6, d0, d7
   15350:	ldrgt	r3, [pc, #96]	; 153b8 <mount@plt+0x3300>
   15354:	mvngt	r2, #0
   15358:	movgt	r1, #1
   1535c:	vstrle	d0, [sp]
   15360:	ldrle	r3, [pc, #84]	; 153bc <mount@plt+0x3304>
   15364:	mvnle	r2, #0
   15368:	movle	r1, #1
   1536c:	vstrgt	d6, [sp]
   15370:	bl	11e48 <__sprintf_chk@plt>
   15374:	mov	r0, r4
   15378:	add	sp, sp, #8
   1537c:	pop	{r4, pc}
   15380:	vdiv.f64	d6, d0, d7
   15384:	ldr	r3, [pc, #52]	; 153c0 <mount@plt+0x3308>
   15388:	mvn	r2, #0
   1538c:	mov	r1, #1
   15390:	vstr	d6, [sp]
   15394:	bl	11e48 <__sprintf_chk@plt>
   15398:	mov	r0, r4
   1539c:	add	sp, sp, #8
   153a0:	pop	{r4, pc}
   153a4:	nop			; (mov r0, r0)
   153a8:	andeq	r0, r0, r0
   153ac:	smlawbmi	lr, r0, r4, r8
   153b0:	andeq	r0, r0, r0
   153b4:	addmi	r4, pc, r0
   153b8:	andeq	r8, r2, r0, lsr #32
   153bc:	andeq	r8, r2, r0, lsl #1
   153c0:	andeq	r8, r2, r8, lsl r0
   153c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153c8:	vpush	{d8}
   153cc:	ldr	r5, [pc, #1436]	; 15970 <mount@plt+0x38b8>
   153d0:	ldrb	r2, [r0, #896]	; 0x380
   153d4:	mov	r4, r0
   153d8:	sub	sp, sp, #84	; 0x54
   153dc:	ldr	r3, [r5]
   153e0:	cmp	r2, #0
   153e4:	str	r3, [sp, #76]	; 0x4c
   153e8:	bne	15bf0 <mount@plt+0x3b38>
   153ec:	ldrb	r3, [r4, #897]	; 0x381
   153f0:	cmp	r3, #0
   153f4:	bne	15be4 <mount@plt+0x3b2c>
   153f8:	ldrb	r3, [r4, #898]	; 0x382
   153fc:	cmp	r3, #0
   15400:	bne	15bd8 <mount@plt+0x3b20>
   15404:	ldrb	r3, [r4, #899]	; 0x383
   15408:	cmp	r3, #0
   1540c:	bne	15bcc <mount@plt+0x3b14>
   15410:	ldrb	r3, [r4, #900]	; 0x384
   15414:	cmp	r3, #0
   15418:	bne	15bc0 <mount@plt+0x3b08>
   1541c:	ldrb	r3, [r4, #612]	; 0x264
   15420:	cmp	r3, #0
   15424:	bne	15bb0 <mount@plt+0x3af8>
   15428:	ldrb	r3, [r4, #901]	; 0x385
   1542c:	cmp	r3, #0
   15430:	bne	15b9c <mount@plt+0x3ae4>
   15434:	vldr	d7, [r4, #632]	; 0x278
   15438:	vcmp.f64	d7, #0.0
   1543c:	vmrs	APSR_nzcv, fpscr
   15440:	bne	15b8c <mount@plt+0x3ad4>
   15444:	ldr	r1, [r4, #672]	; 0x2a0
   15448:	cmp	r1, #0
   1544c:	bne	15b80 <mount@plt+0x3ac8>
   15450:	vldr	d7, [r4, #648]	; 0x288
   15454:	vcmp.f64	d7, #0.0
   15458:	vmrs	APSR_nzcv, fpscr
   1545c:	bne	15b64 <mount@plt+0x3aac>
   15460:	vldr	d7, [r4, #640]	; 0x280
   15464:	vcmp.f64	d7, #0.0
   15468:	vmrs	APSR_nzcv, fpscr
   1546c:	bne	15b54 <mount@plt+0x3a9c>
   15470:	ldr	r1, [r4, #664]	; 0x298
   15474:	cmp	r1, #0
   15478:	bne	15b34 <mount@plt+0x3a7c>
   1547c:	ldr	r1, [r4, #696]	; 0x2b8
   15480:	cmp	r1, #0
   15484:	bne	15b28 <mount@plt+0x3a70>
   15488:	ldr	r1, [r4, #708]	; 0x2c4
   1548c:	cmp	r1, #0
   15490:	bne	15b1c <mount@plt+0x3a64>
   15494:	ldr	r1, [r4, #700]	; 0x2bc
   15498:	cmp	r1, #0
   1549c:	bne	15b10 <mount@plt+0x3a58>
   154a0:	ldr	r1, [r4, #704]	; 0x2c0
   154a4:	cmp	r1, #0
   154a8:	bne	15b04 <mount@plt+0x3a4c>
   154ac:	ldr	r1, [r4, #712]	; 0x2c8
   154b0:	cmp	r1, #0
   154b4:	bne	15aa8 <mount@plt+0x39f0>
   154b8:	ldr	r1, [r4, #668]	; 0x29c
   154bc:	cmp	r1, #0
   154c0:	bne	15a9c <mount@plt+0x39e4>
   154c4:	add	fp, r4, #880	; 0x370
   154c8:	ldrd	r2, [fp]
   154cc:	orrs	r1, r2, r3
   154d0:	bne	15a90 <mount@plt+0x39d8>
   154d4:	add	r3, r4, #896	; 0x380
   154d8:	ldrd	r2, [r3, #-8]
   154dc:	orrs	r1, r2, r3
   154e0:	bne	15a84 <mount@plt+0x39cc>
   154e4:	add	r3, r4, #752	; 0x2f0
   154e8:	ldrd	r2, [r3]
   154ec:	orrs	r1, r2, r3
   154f0:	bne	15a78 <mount@plt+0x39c0>
   154f4:	add	r3, r4, #768	; 0x300
   154f8:	ldrd	r2, [r3, #-8]
   154fc:	orrs	r1, r2, r3
   15500:	bne	15a6c <mount@plt+0x39b4>
   15504:	ldr	r1, [r4, #768]	; 0x300
   15508:	cmp	r1, #0
   1550c:	bne	15a60 <mount@plt+0x39a8>
   15510:	ldr	r1, [r4, #772]	; 0x304
   15514:	cmp	r1, #0
   15518:	bne	15a54 <mount@plt+0x399c>
   1551c:	ldr	r1, [r4, #776]	; 0x308
   15520:	cmp	r1, #0
   15524:	bne	1594c <mount@plt+0x3894>
   15528:	ldr	r1, [r4, #780]	; 0x30c
   1552c:	cmp	r1, #0
   15530:	bne	15940 <mount@plt+0x3888>
   15534:	ldr	r0, [r4, #904]	; 0x388
   15538:	cmp	r0, #0
   1553c:	beq	15554 <mount@plt+0x349c>
   15540:	ldrb	r3, [r0, #16]
   15544:	cmp	r3, #0
   15548:	bne	15780 <mount@plt+0x36c8>
   1554c:	ldr	r0, [pc, #1056]	; 15974 <mount@plt+0x38bc>
   15550:	bl	14b8c <mount@plt+0x2ad4>
   15554:	ldr	r3, [r4, #908]	; 0x38c
   15558:	cmp	r3, #0
   1555c:	beq	155c4 <mount@plt+0x350c>
   15560:	ldrd	r0, [r3]
   15564:	bl	26fa4 <mount@plt+0x14eec>
   15568:	vldr	d0, [pc, #1000]	; 15958 <mount@plt+0x38a0>
   1556c:	vmov	d7, r0, r1
   15570:	add	r0, sp, #12
   15574:	vmul.f64	d0, d7, d0
   15578:	bl	15324 <mount@plt+0x326c>
   1557c:	ldr	r3, [r4, #908]	; 0x38c
   15580:	vldr	d6, [pc, #984]	; 15960 <mount@plt+0x38a8>
   15584:	vldr	s14, [r3, #8]
   15588:	vcvt.f64.u32	d7, s14
   1558c:	vdiv.f64	d7, d7, d6
   15590:	mov	r1, r0
   15594:	ldr	r0, [pc, #988]	; 15978 <mount@plt+0x38c0>
   15598:	vmov	r2, r3, d7
   1559c:	bl	14b8c <mount@plt+0x2ad4>
   155a0:	ldr	r3, [r4, #908]	; 0x38c
   155a4:	ldr	r2, [r3, #12]
   155a8:	cmp	r2, #0
   155ac:	bne	15c1c <mount@plt+0x3b64>
   155b0:	ldr	r3, [r3, #16]
   155b4:	cmp	r3, #0
   155b8:	bne	15bfc <mount@plt+0x3b44>
   155bc:	ldr	r0, [pc, #952]	; 1597c <mount@plt+0x38c4>
   155c0:	bl	14b8c <mount@plt+0x2ad4>
   155c4:	vldr	d0, [r4, #680]	; 0x2a8
   155c8:	vcmp.f64	d0, #0.0
   155cc:	vmrs	APSR_nzcv, fpscr
   155d0:	bne	15928 <mount@plt+0x3870>
   155d4:	ldr	r1, [r4, #716]	; 0x2cc
   155d8:	cmp	r1, #0
   155dc:	bne	1579c <mount@plt+0x36e4>
   155e0:	ldr	r1, [r4, #720]	; 0x2d0
   155e4:	cmp	r1, #0
   155e8:	bne	157b0 <mount@plt+0x36f8>
   155ec:	ldr	r1, [r4, #724]	; 0x2d4
   155f0:	cmp	r1, #0
   155f4:	bne	157c4 <mount@plt+0x370c>
   155f8:	vldr	d0, [r4, #728]	; 0x2d8
   155fc:	vcmp.f64	d0, #0.0
   15600:	vmrs	APSR_nzcv, fpscr
   15604:	bne	157dc <mount@plt+0x3724>
   15608:	vldr	d0, [r4, #744]	; 0x2e8
   1560c:	vcmp.f64	d0, #0.0
   15610:	vmrs	APSR_nzcv, fpscr
   15614:	bne	15824 <mount@plt+0x376c>
   15618:	ldr	r1, [r4, #816]	; 0x330
   1561c:	cmp	r1, #0
   15620:	bne	15844 <mount@plt+0x378c>
   15624:	ldr	r1, [r4, #820]	; 0x334
   15628:	cmp	r1, #0
   1562c:	bne	15858 <mount@plt+0x37a0>
   15630:	ldrb	r3, [r4, #902]	; 0x386
   15634:	cmp	r3, #0
   15638:	bne	1586c <mount@plt+0x37b4>
   1563c:	add	sl, r4, #864	; 0x360
   15640:	ldrd	r0, [sl, #-8]
   15644:	orrs	r3, r0, r1
   15648:	bne	15884 <mount@plt+0x37cc>
   1564c:	ldr	r1, [r4, #784]	; 0x310
   15650:	cmp	r1, #0
   15654:	bne	1591c <mount@plt+0x3864>
   15658:	ldr	r1, [r4, #788]	; 0x314
   1565c:	ldr	r2, [r4, #792]	; 0x318
   15660:	orrs	r3, r1, r2
   15664:	bne	15718 <mount@plt+0x3660>
   15668:	ldr	r1, [r4, #796]	; 0x31c
   1566c:	cmp	r1, #0
   15670:	bne	1572c <mount@plt+0x3674>
   15674:	ldr	r1, [r4, #800]	; 0x320
   15678:	cmp	r1, #0
   1567c:	bne	15740 <mount@plt+0x3688>
   15680:	ldr	r1, [r4, #824]	; 0x338
   15684:	cmp	r1, #0
   15688:	bne	15760 <mount@plt+0x36a8>
   1568c:	ldr	r1, [r4, #804]	; 0x324
   15690:	cmp	r1, #0
   15694:	bne	15774 <mount@plt+0x36bc>
   15698:	ldr	r1, [r4, #808]	; 0x328
   1569c:	cmp	r1, #3
   156a0:	beq	156ac <mount@plt+0x35f4>
   156a4:	ldr	r0, [pc, #724]	; 15980 <mount@plt+0x38c8>
   156a8:	bl	14b8c <mount@plt+0x2ad4>
   156ac:	ldr	r1, [r4, #828]	; 0x33c
   156b0:	cmp	r1, #0
   156b4:	bne	15af8 <mount@plt+0x3a40>
   156b8:	vldr	d7, [r4, #832]	; 0x340
   156bc:	vcmp.f64	d7, #0.0
   156c0:	vmrs	APSR_nzcv, fpscr
   156c4:	bne	15ae8 <mount@plt+0x3a30>
   156c8:	ldr	r1, [r4, #848]	; 0x350
   156cc:	cmp	r1, #0
   156d0:	bne	15adc <mount@plt+0x3a24>
   156d4:	ldr	r1, [r4, #852]	; 0x354
   156d8:	cmp	r1, #0
   156dc:	bne	15ad0 <mount@plt+0x3a18>
   156e0:	ldr	r1, [r4, #812]	; 0x32c
   156e4:	cmp	r1, #0
   156e8:	bne	15ac4 <mount@plt+0x3a0c>
   156ec:	vldr	d7, [r4, #840]	; 0x348
   156f0:	vcmp.f64	d7, #0.0
   156f4:	vmrs	APSR_nzcv, fpscr
   156f8:	bne	15ab4 <mount@plt+0x39fc>
   156fc:	ldr	r2, [sp, #76]	; 0x4c
   15700:	ldr	r3, [r5]
   15704:	cmp	r2, r3
   15708:	bne	15ca8 <mount@plt+0x3bf0>
   1570c:	add	sp, sp, #84	; 0x54
   15710:	vpop	{d8}
   15714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15718:	ldr	r0, [pc, #612]	; 15984 <mount@plt+0x38cc>
   1571c:	bl	14b8c <mount@plt+0x2ad4>
   15720:	ldr	r1, [r4, #796]	; 0x31c
   15724:	cmp	r1, #0
   15728:	beq	15674 <mount@plt+0x35bc>
   1572c:	ldr	r0, [pc, #596]	; 15988 <mount@plt+0x38d0>
   15730:	bl	14b8c <mount@plt+0x2ad4>
   15734:	ldr	r1, [r4, #800]	; 0x320
   15738:	cmp	r1, #0
   1573c:	beq	15680 <mount@plt+0x35c8>
   15740:	ldr	r3, [r4, #548]	; 0x224
   15744:	cmp	r3, #10
   15748:	beq	15680 <mount@plt+0x35c8>
   1574c:	ldr	r0, [pc, #568]	; 1598c <mount@plt+0x38d4>
   15750:	bl	14b8c <mount@plt+0x2ad4>
   15754:	ldr	r1, [r4, #824]	; 0x338
   15758:	cmp	r1, #0
   1575c:	beq	1568c <mount@plt+0x35d4>
   15760:	ldr	r0, [pc, #552]	; 15990 <mount@plt+0x38d8>
   15764:	bl	14b8c <mount@plt+0x2ad4>
   15768:	ldr	r1, [r4, #804]	; 0x324
   1576c:	cmp	r1, #0
   15770:	beq	15698 <mount@plt+0x35e0>
   15774:	ldr	r0, [pc, #536]	; 15994 <mount@plt+0x38dc>
   15778:	bl	14b8c <mount@plt+0x2ad4>
   1577c:	b	15698 <mount@plt+0x35e0>
   15780:	ldrd	r2, [r0, #4]
   15784:	ldr	r1, [r0]
   15788:	ldr	r0, [r0, #12]
   1578c:	str	r0, [sp]
   15790:	ldr	r0, [pc, #512]	; 15998 <mount@plt+0x38e0>
   15794:	bl	14b8c <mount@plt+0x2ad4>
   15798:	b	15554 <mount@plt+0x349c>
   1579c:	ldr	r0, [pc, #504]	; 1599c <mount@plt+0x38e4>
   157a0:	bl	14b8c <mount@plt+0x2ad4>
   157a4:	ldr	r1, [r4, #720]	; 0x2d0
   157a8:	cmp	r1, #0
   157ac:	beq	155ec <mount@plt+0x3534>
   157b0:	ldr	r0, [pc, #488]	; 159a0 <mount@plt+0x38e8>
   157b4:	bl	14b8c <mount@plt+0x2ad4>
   157b8:	ldr	r1, [r4, #724]	; 0x2d4
   157bc:	cmp	r1, #0
   157c0:	beq	155f8 <mount@plt+0x3540>
   157c4:	ldr	r0, [pc, #472]	; 159a4 <mount@plt+0x38ec>
   157c8:	bl	14b8c <mount@plt+0x2ad4>
   157cc:	vldr	d0, [r4, #728]	; 0x2d8
   157d0:	vcmp.f64	d0, #0.0
   157d4:	vmrs	APSR_nzcv, fpscr
   157d8:	beq	15608 <mount@plt+0x3550>
   157dc:	add	r0, sp, #12
   157e0:	bl	15324 <mount@plt+0x326c>
   157e4:	mov	r1, r0
   157e8:	ldr	r0, [pc, #440]	; 159a8 <mount@plt+0x38f0>
   157ec:	bl	14b8c <mount@plt+0x2ad4>
   157f0:	vldr	d0, [r4, #736]	; 0x2e0
   157f4:	vcmp.f64	d0, #0.0
   157f8:	vmrs	APSR_nzcv, fpscr
   157fc:	beq	15608 <mount@plt+0x3550>
   15800:	add	r0, sp, #12
   15804:	bl	15324 <mount@plt+0x326c>
   15808:	mov	r1, r0
   1580c:	ldr	r0, [pc, #408]	; 159ac <mount@plt+0x38f4>
   15810:	bl	14b8c <mount@plt+0x2ad4>
   15814:	vldr	d0, [r4, #744]	; 0x2e8
   15818:	vcmp.f64	d0, #0.0
   1581c:	vmrs	APSR_nzcv, fpscr
   15820:	beq	15618 <mount@plt+0x3560>
   15824:	add	r0, sp, #12
   15828:	bl	15324 <mount@plt+0x326c>
   1582c:	mov	r1, r0
   15830:	ldr	r0, [pc, #376]	; 159b0 <mount@plt+0x38f8>
   15834:	bl	14b8c <mount@plt+0x2ad4>
   15838:	ldr	r1, [r4, #816]	; 0x330
   1583c:	cmp	r1, #0
   15840:	beq	15624 <mount@plt+0x356c>
   15844:	ldr	r0, [pc, #360]	; 159b4 <mount@plt+0x38fc>
   15848:	bl	14b8c <mount@plt+0x2ad4>
   1584c:	ldr	r1, [r4, #820]	; 0x334
   15850:	cmp	r1, #0
   15854:	beq	15630 <mount@plt+0x3578>
   15858:	ldr	r0, [pc, #344]	; 159b8 <mount@plt+0x3900>
   1585c:	bl	14b8c <mount@plt+0x2ad4>
   15860:	ldrb	r3, [r4, #902]	; 0x386
   15864:	cmp	r3, #0
   15868:	beq	1563c <mount@plt+0x3584>
   1586c:	add	sl, r4, #864	; 0x360
   15870:	ldr	r0, [pc, #324]	; 159bc <mount@plt+0x3904>
   15874:	bl	14b8c <mount@plt+0x2ad4>
   15878:	ldrd	r0, [sl, #-8]
   1587c:	orrs	r3, r0, r1
   15880:	beq	1564c <mount@plt+0x3594>
   15884:	mov	r2, #1000	; 0x3e8
   15888:	mov	r3, #0
   1588c:	bl	27018 <mount@plt+0x14f60>
   15890:	mov	r2, r0
   15894:	mov	r3, r1
   15898:	ldr	r0, [pc, #288]	; 159c0 <mount@plt+0x3908>
   1589c:	bl	14b8c <mount@plt+0x2ad4>
   158a0:	ldrd	r6, [sl]
   158a4:	orrs	r3, r6, r7
   158a8:	bne	15c4c <mount@plt+0x3b94>
   158ac:	ldrd	r6, [fp, #-8]
   158b0:	orrs	r3, r6, r7
   158b4:	beq	1564c <mount@plt+0x3594>
   158b8:	mov	r2, #1000	; 0x3e8
   158bc:	mov	r3, #0
   158c0:	mov	r0, r6
   158c4:	mov	r1, r7
   158c8:	bl	27018 <mount@plt+0x14f60>
   158cc:	vldr	d8, [pc, #148]	; 15968 <mount@plt+0x38b0>
   158d0:	mov	r8, r0
   158d4:	mov	r9, r1
   158d8:	mov	r0, r6
   158dc:	mov	r1, r7
   158e0:	bl	26fa4 <mount@plt+0x14eec>
   158e4:	vmov	d7, r0, r1
   158e8:	ldrd	r0, [sl, #-8]
   158ec:	vmul.f64	d8, d7, d8
   158f0:	bl	26fa4 <mount@plt+0x14eec>
   158f4:	mov	r2, r8
   158f8:	mov	r3, r9
   158fc:	vmov	d7, r0, r1
   15900:	ldr	r0, [pc, #188]	; 159c4 <mount@plt+0x390c>
   15904:	vdiv.f64	d7, d8, d7
   15908:	vstr	d7, [sp]
   1590c:	bl	14b8c <mount@plt+0x2ad4>
   15910:	ldr	r1, [r4, #784]	; 0x310
   15914:	cmp	r1, #0
   15918:	beq	15658 <mount@plt+0x35a0>
   1591c:	ldr	r0, [pc, #164]	; 159c8 <mount@plt+0x3910>
   15920:	bl	14b8c <mount@plt+0x2ad4>
   15924:	b	15658 <mount@plt+0x35a0>
   15928:	add	r0, sp, #12
   1592c:	bl	15324 <mount@plt+0x326c>
   15930:	mov	r1, r0
   15934:	ldr	r0, [pc, #144]	; 159cc <mount@plt+0x3914>
   15938:	bl	14b8c <mount@plt+0x2ad4>
   1593c:	b	155d4 <mount@plt+0x351c>
   15940:	ldr	r0, [pc, #136]	; 159d0 <mount@plt+0x3918>
   15944:	bl	14b8c <mount@plt+0x2ad4>
   15948:	b	15534 <mount@plt+0x347c>
   1594c:	ldr	r0, [pc, #128]	; 159d4 <mount@plt+0x391c>
   15950:	bl	14b8c <mount@plt+0x2ad4>
   15954:	b	15528 <mount@plt+0x3470>
   15958:	andeq	r0, r0, r0
   1595c:	eormi	r0, r0, r0
   15960:	andeq	r0, r0, r0
   15964:	addmi	r4, pc, r0
   15968:	andeq	r0, r0, r0
   1596c:	subsmi	r0, r9, r0
   15970:	ldrdeq	fp, [r3], -r8
   15974:			; <UNDEFINED> instruction: 0x000281b4
   15978:	andeq	r8, r2, ip, asr #3
   1597c:	andeq	r9, r2, ip, asr #4
   15980:	andeq	r8, r2, ip, lsr r3
   15984:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   15988:	andeq	r8, r2, r8, lsl #6
   1598c:	andeq	r8, r2, r4, lsl r3
   15990:	andeq	r8, r2, r0, lsr #6
   15994:	andeq	r8, r2, r0, lsr r3
   15998:	andeq	r8, r2, r0, lsl #3
   1599c:	andeq	r8, r2, r0, lsl r2
   159a0:	andeq	r8, r2, ip, lsl r2
   159a4:	andeq	r8, r2, r8, lsr #4
   159a8:	andeq	r8, r2, r4, lsr r2
   159ac:	andeq	r8, r2, r8, asr #4
   159b0:	andeq	r8, r2, r0, asr r2
   159b4:	andeq	r8, r2, r8, ror #4
   159b8:	andeq	r8, r2, r8, ror r2
   159bc:	andeq	r8, r2, ip, lsl #5
   159c0:	muleq	r2, ip, r2
   159c4:	andeq	r8, r2, ip, asr #5
   159c8:	andeq	r8, r2, ip, ror #5
   159cc:	andeq	r8, r2, r4, lsl #4
   159d0:	andeq	r8, r2, ip, ror #2
   159d4:	andeq	r8, r2, r8, asr r1
   159d8:	andeq	r8, r2, ip, asr #2
   159dc:	andeq	r8, r2, ip, lsr r1
   159e0:	andeq	r8, r2, r4, lsr #2
   159e4:	andeq	r8, r2, r0, lsl r1
   159e8:	strdeq	r8, [r2], -ip
   159ec:	andeq	r8, r2, r8, ror #1
   159f0:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   159f4:	andeq	r8, r2, ip, asr #1
   159f8:	muleq	r2, r8, r3
   159fc:	andeq	r8, r2, ip, lsl #7
   15a00:	andeq	r8, r2, r8, ror r3
   15a04:	andeq	r8, r2, r8, ror #6
   15a08:	andeq	r8, r2, ip, asr r3
   15a0c:	andeq	r8, r2, ip, asr #6
   15a10:	andeq	r8, r2, r0, asr #1
   15a14:	strheq	r8, [r2], -r4
   15a18:	andeq	r8, r2, r8, lsr #1
   15a1c:	andeq	r8, r2, r0, lsr #1
   15a20:	andeq	r8, r2, ip, lsl #1
   15a24:	muleq	r2, r8, r0
   15a28:	andeq	r8, r2, r4, lsl #1
   15a2c:	andeq	r8, r2, r8, ror r0
   15a30:	andeq	r8, r2, ip, rrx
   15a34:	andeq	r8, r2, r4, rrx
   15a38:	andeq	r8, r2, r4, asr r0
   15a3c:	andeq	r7, r2, r4, lsl pc
   15a40:	andeq	r8, r2, r8, asr #32
   15a44:	andeq	r8, r2, ip, lsr r0
   15a48:	andeq	r8, r2, r4, lsr r0
   15a4c:	andeq	r8, r2, ip, lsr #32
   15a50:	andeq	r8, r2, r8, lsr #32
   15a54:	ldr	r0, [pc, #-132]	; 159d8 <mount@plt+0x3920>
   15a58:	bl	14b8c <mount@plt+0x2ad4>
   15a5c:	b	1551c <mount@plt+0x3464>
   15a60:	ldr	r0, [pc, #-140]	; 159dc <mount@plt+0x3924>
   15a64:	bl	14b8c <mount@plt+0x2ad4>
   15a68:	b	15510 <mount@plt+0x3458>
   15a6c:	ldr	r0, [pc, #-148]	; 159e0 <mount@plt+0x3928>
   15a70:	bl	14b8c <mount@plt+0x2ad4>
   15a74:	b	15504 <mount@plt+0x344c>
   15a78:	ldr	r0, [pc, #-156]	; 159e4 <mount@plt+0x392c>
   15a7c:	bl	14b8c <mount@plt+0x2ad4>
   15a80:	b	154f4 <mount@plt+0x343c>
   15a84:	ldr	r0, [pc, #-164]	; 159e8 <mount@plt+0x3930>
   15a88:	bl	14b8c <mount@plt+0x2ad4>
   15a8c:	b	154e4 <mount@plt+0x342c>
   15a90:	ldr	r0, [pc, #-172]	; 159ec <mount@plt+0x3934>
   15a94:	bl	14b8c <mount@plt+0x2ad4>
   15a98:	b	154d4 <mount@plt+0x341c>
   15a9c:	ldr	r0, [pc, #-180]	; 159f0 <mount@plt+0x3938>
   15aa0:	bl	14b8c <mount@plt+0x2ad4>
   15aa4:	b	154c4 <mount@plt+0x340c>
   15aa8:	ldr	r0, [pc, #-188]	; 159f4 <mount@plt+0x393c>
   15aac:	bl	14b8c <mount@plt+0x2ad4>
   15ab0:	b	154b8 <mount@plt+0x3400>
   15ab4:	vmov	r2, r3, d7
   15ab8:	ldr	r0, [pc, #-200]	; 159f8 <mount@plt+0x3940>
   15abc:	bl	14b8c <mount@plt+0x2ad4>
   15ac0:	b	156fc <mount@plt+0x3644>
   15ac4:	ldr	r0, [pc, #-208]	; 159fc <mount@plt+0x3944>
   15ac8:	bl	14b8c <mount@plt+0x2ad4>
   15acc:	b	156ec <mount@plt+0x3634>
   15ad0:	ldr	r0, [pc, #-216]	; 15a00 <mount@plt+0x3948>
   15ad4:	bl	14b8c <mount@plt+0x2ad4>
   15ad8:	b	156e0 <mount@plt+0x3628>
   15adc:	ldr	r0, [pc, #-224]	; 15a04 <mount@plt+0x394c>
   15ae0:	bl	14b8c <mount@plt+0x2ad4>
   15ae4:	b	156d4 <mount@plt+0x361c>
   15ae8:	vmov	r2, r3, d7
   15aec:	ldr	r0, [pc, #-236]	; 15a08 <mount@plt+0x3950>
   15af0:	bl	14b8c <mount@plt+0x2ad4>
   15af4:	b	156c8 <mount@plt+0x3610>
   15af8:	ldr	r0, [pc, #-244]	; 15a0c <mount@plt+0x3954>
   15afc:	bl	14b8c <mount@plt+0x2ad4>
   15b00:	b	156b8 <mount@plt+0x3600>
   15b04:	ldr	r0, [pc, #-252]	; 15a10 <mount@plt+0x3958>
   15b08:	bl	14b8c <mount@plt+0x2ad4>
   15b0c:	b	154ac <mount@plt+0x33f4>
   15b10:	ldr	r0, [pc, #-260]	; 15a14 <mount@plt+0x395c>
   15b14:	bl	14b8c <mount@plt+0x2ad4>
   15b18:	b	154a0 <mount@plt+0x33e8>
   15b1c:	ldr	r0, [pc, #-268]	; 15a18 <mount@plt+0x3960>
   15b20:	bl	14b8c <mount@plt+0x2ad4>
   15b24:	b	15494 <mount@plt+0x33dc>
   15b28:	ldr	r0, [pc, #-276]	; 15a1c <mount@plt+0x3964>
   15b2c:	bl	14b8c <mount@plt+0x2ad4>
   15b30:	b	15488 <mount@plt+0x33d0>
   15b34:	ldr	r0, [pc, #-284]	; 15a20 <mount@plt+0x3968>
   15b38:	bl	14b8c <mount@plt+0x2ad4>
   15b3c:	ldr	r3, [r4, #664]	; 0x298
   15b40:	tst	r3, #1
   15b44:	beq	1547c <mount@plt+0x33c4>
   15b48:	ldr	r0, [pc, #-300]	; 15a24 <mount@plt+0x396c>
   15b4c:	bl	14b8c <mount@plt+0x2ad4>
   15b50:	b	1547c <mount@plt+0x33c4>
   15b54:	vmov	r2, r3, d7
   15b58:	ldr	r0, [pc, #-312]	; 15a28 <mount@plt+0x3970>
   15b5c:	bl	14b8c <mount@plt+0x2ad4>
   15b60:	b	15470 <mount@plt+0x33b8>
   15b64:	add	r7, r4, #656	; 0x290
   15b68:	ldrd	r6, [r7]
   15b6c:	ldr	r0, [pc, #-328]	; 15a2c <mount@plt+0x3974>
   15b70:	vmov	r2, r3, d7
   15b74:	strd	r6, [sp]
   15b78:	bl	14b8c <mount@plt+0x2ad4>
   15b7c:	b	15460 <mount@plt+0x33a8>
   15b80:	ldr	r0, [pc, #-344]	; 15a30 <mount@plt+0x3978>
   15b84:	bl	14b8c <mount@plt+0x2ad4>
   15b88:	b	15450 <mount@plt+0x3398>
   15b8c:	vmov	r2, r3, d7
   15b90:	ldr	r0, [pc, #-356]	; 15a34 <mount@plt+0x397c>
   15b94:	bl	14b8c <mount@plt+0x2ad4>
   15b98:	b	15444 <mount@plt+0x338c>
   15b9c:	ldr	r2, [r4, #692]	; 0x2b4
   15ba0:	ldr	r1, [r4, #688]	; 0x2b0
   15ba4:	ldr	r0, [pc, #-372]	; 15a38 <mount@plt+0x3980>
   15ba8:	bl	14b8c <mount@plt+0x2ad4>
   15bac:	b	15434 <mount@plt+0x337c>
   15bb0:	add	r1, r4, #612	; 0x264
   15bb4:	ldr	r0, [pc, #-384]	; 15a3c <mount@plt+0x3984>
   15bb8:	bl	14b8c <mount@plt+0x2ad4>
   15bbc:	b	15428 <mount@plt+0x3370>
   15bc0:	ldr	r0, [pc, #-392]	; 15a40 <mount@plt+0x3988>
   15bc4:	bl	14b8c <mount@plt+0x2ad4>
   15bc8:	b	1541c <mount@plt+0x3364>
   15bcc:	ldr	r0, [pc, #-400]	; 15a44 <mount@plt+0x398c>
   15bd0:	bl	14b8c <mount@plt+0x2ad4>
   15bd4:	b	15410 <mount@plt+0x3358>
   15bd8:	ldr	r0, [pc, #-408]	; 15a48 <mount@plt+0x3990>
   15bdc:	bl	14b8c <mount@plt+0x2ad4>
   15be0:	b	15404 <mount@plt+0x334c>
   15be4:	ldr	r0, [pc, #-416]	; 15a4c <mount@plt+0x3994>
   15be8:	bl	14b8c <mount@plt+0x2ad4>
   15bec:	b	153f8 <mount@plt+0x3340>
   15bf0:	ldr	r0, [pc, #-424]	; 15a50 <mount@plt+0x3998>
   15bf4:	bl	14b8c <mount@plt+0x2ad4>
   15bf8:	b	153ec <mount@plt+0x3334>
   15bfc:	vmov	s15, r3
   15c00:	vldr	d6, [pc, #168]	; 15cb0 <mount@plt+0x3bf8>
   15c04:	ldr	r0, [pc, #180]	; 15cc0 <mount@plt+0x3c08>
   15c08:	vcvt.f64.u32	d7, s15
   15c0c:	vmul.f64	d7, d7, d6
   15c10:	vmov	r2, r3, d7
   15c14:	bl	14b8c <mount@plt+0x2ad4>
   15c18:	b	155bc <mount@plt+0x3504>
   15c1c:	vmov	s15, r2
   15c20:	vldr	d6, [pc, #136]	; 15cb0 <mount@plt+0x3bf8>
   15c24:	ldr	r0, [pc, #152]	; 15cc4 <mount@plt+0x3c0c>
   15c28:	vcvt.f64.u32	d7, s15
   15c2c:	vmul.f64	d7, d7, d6
   15c30:	vmov	r2, r3, d7
   15c34:	bl	14b8c <mount@plt+0x2ad4>
   15c38:	ldr	r3, [r4, #908]	; 0x38c
   15c3c:	ldr	r3, [r3, #16]
   15c40:	cmp	r3, #0
   15c44:	beq	155bc <mount@plt+0x3504>
   15c48:	b	15bfc <mount@plt+0x3b44>
   15c4c:	mov	r2, #1000	; 0x3e8
   15c50:	mov	r3, #0
   15c54:	mov	r0, r6
   15c58:	mov	r1, r7
   15c5c:	bl	27018 <mount@plt+0x14f60>
   15c60:	vldr	d8, [pc, #80]	; 15cb8 <mount@plt+0x3c00>
   15c64:	mov	r8, r0
   15c68:	mov	r9, r1
   15c6c:	mov	r0, r6
   15c70:	mov	r1, r7
   15c74:	bl	26fa4 <mount@plt+0x14eec>
   15c78:	vmov	d7, r0, r1
   15c7c:	ldrd	r0, [sl, #-8]
   15c80:	vmul.f64	d8, d7, d8
   15c84:	bl	26fa4 <mount@plt+0x14eec>
   15c88:	mov	r2, r8
   15c8c:	mov	r3, r9
   15c90:	vmov	d7, r0, r1
   15c94:	ldr	r0, [pc, #44]	; 15cc8 <mount@plt+0x3c10>
   15c98:	vdiv.f64	d7, d8, d7
   15c9c:	vstr	d7, [sp]
   15ca0:	bl	14b8c <mount@plt+0x2ad4>
   15ca4:	b	158ac <mount@plt+0x37f4>
   15ca8:	bl	11c2c <__stack_chk_fail@plt>
   15cac:	nop			; (mov r0, r0)
   15cb0:	andeq	r0, r0, r0
   15cb4:	svccc	0x00700000
   15cb8:	andeq	r0, r0, r0
   15cbc:	subsmi	r0, r9, r0
   15cc0:	strdeq	r8, [r2], -r4
   15cc4:	andeq	r8, r2, r4, ror #3
   15cc8:	andeq	r8, r2, ip, lsr #5
   15ccc:	cmp	r0, #1
   15cd0:	beq	15d0c <mount@plt+0x3c54>
   15cd4:	cmp	r0, #2
   15cd8:	beq	15cf8 <mount@plt+0x3c40>
   15cdc:	cmp	r0, #5
   15ce0:	ldreq	r0, [r1]
   15ce4:	lsreq	r0, r0, #6
   15ce8:	eoreq	r0, r0, #1
   15cec:	andeq	r0, r0, #1
   15cf0:	movne	r0, #0
   15cf4:	bx	lr
   15cf8:	ldr	r0, [r1]
   15cfc:	lsr	r0, r0, #4
   15d00:	eor	r0, r0, #1
   15d04:	and	r0, r0, #1
   15d08:	bx	lr
   15d0c:	ldr	r0, [r1]
   15d10:	lsr	r0, r0, #5
   15d14:	eor	r0, r0, #1
   15d18:	and	r0, r0, #1
   15d1c:	bx	lr
   15d20:	ldr	r3, [r1]
   15d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d28:	cmp	r3, #2
   15d2c:	sub	sp, sp, #12
   15d30:	beq	15dd8 <mount@plt+0x3d20>
   15d34:	cmp	r3, #10
   15d38:	movne	r7, #0
   15d3c:	bne	15dcc <mount@plt+0x3d14>
   15d40:	mov	r9, #16
   15d44:	ldr	r8, [r2]
   15d48:	cmp	r8, #0
   15d4c:	beq	15de0 <mount@plt+0x3d28>
   15d50:	uxth	sl, r9
   15d54:	mov	r5, r0
   15d58:	mov	r6, r2
   15d5c:	lsl	fp, sl, #3
   15d60:	mov	r7, #0
   15d64:	str	r1, [sp, #4]
   15d68:	ldrsh	r2, [r5, #4]
   15d6c:	mov	r0, #284	; 0x11c
   15d70:	mov	r4, r5
   15d74:	cmp	r2, #0
   15d78:	beq	15d98 <mount@plt+0x3ce0>
   15d7c:	bl	11d70 <malloc@plt>
   15d80:	mov	r2, #284	; 0x11c
   15d84:	mov	r1, r5
   15d88:	subs	r4, r0, #0
   15d8c:	beq	15dcc <mount@plt+0x3d14>
   15d90:	bl	11bc0 <memcpy@plt>
   15d94:	str	r4, [r5, #280]	; 0x118
   15d98:	mov	r1, r8
   15d9c:	mov	r2, r9
   15da0:	add	r0, r4, #8
   15da4:	bl	11bc0 <memcpy@plt>
   15da8:	ldr	r3, [sp, #4]
   15dac:	ldr	r8, [r6, #4]!
   15db0:	add	r7, r7, #1
   15db4:	ldr	r2, [r3]
   15db8:	cmp	r8, #0
   15dbc:	strh	sl, [r4, #2]
   15dc0:	strh	fp, [r4, #4]
   15dc4:	strh	r2, [r4, #6]
   15dc8:	bne	15d68 <mount@plt+0x3cb0>
   15dcc:	mov	r0, r7
   15dd0:	add	sp, sp, #12
   15dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15dd8:	mov	r9, #4
   15ddc:	b	15d44 <mount@plt+0x3c8c>
   15de0:	mov	r7, r8
   15de4:	b	15dcc <mount@plt+0x3d14>
   15de8:	ldr	r3, [pc, #28]	; 15e0c <mount@plt+0x3d54>
   15dec:	push	{r4, lr}
   15df0:	mov	r1, #1
   15df4:	ldr	r2, [pc, #20]	; 15e10 <mount@plt+0x3d58>
   15df8:	ldr	r3, [r3]
   15dfc:	ldr	r0, [pc, #16]	; 15e14 <mount@plt+0x3d5c>
   15e00:	bl	11cb0 <fwrite@plt>
   15e04:	mov	r0, #0
   15e08:	bl	11ddc <exit@plt>
   15e0c:	andeq	sp, r3, r4, lsl #31
   15e10:	andeq	r0, r0, lr, lsr #21
   15e14:	andeq	r8, r2, r4, lsr #7
   15e18:	ldr	r3, [pc, #28]	; 15e3c <mount@plt+0x3d84>
   15e1c:	push	{r4, lr}
   15e20:	mov	r1, #1
   15e24:	ldr	r2, [pc, #20]	; 15e40 <mount@plt+0x3d88>
   15e28:	ldr	r3, [r3]
   15e2c:	ldr	r0, [pc, #16]	; 15e44 <mount@plt+0x3d8c>
   15e30:	bl	11cb0 <fwrite@plt>
   15e34:	mvn	r0, #0
   15e38:	bl	11ddc <exit@plt>
   15e3c:	andeq	sp, r3, r8, ror pc
   15e40:	andeq	r0, r0, lr, lsr #21
   15e44:	andeq	r8, r2, r4, lsr #7
   15e48:	push	{r4, r5, r6, r7, lr}
   15e4c:	add	ip, r3, #280	; 0x118
   15e50:	mov	r4, r3
   15e54:	cmp	r2, #2
   15e58:	uxth	r3, r2
   15e5c:	strh	r3, [ip, #2]
   15e60:	sub	sp, sp, #20
   15e64:	strh	r3, [r4, #18]
   15e68:	mov	r5, r1
   15e6c:	add	r2, r4, #20
   15e70:	add	r3, r4, #540	; 0x21c
   15e74:	add	r6, r4, #284	; 0x11c
   15e78:	add	r7, r4, #544	; 0x220
   15e7c:	beq	15ee0 <mount@plt+0x3e28>
   15e80:	add	ip, r4, #32
   15e84:	add	r1, r4, #28
   15e88:	str	r3, [sp, #8]
   15e8c:	stm	sp, {r1, ip}
   15e90:	add	r3, r4, #24
   15e94:	ldr	r1, [pc, #124]	; 15f18 <mount@plt+0x3e60>
   15e98:	bl	11fa4 <sscanf@plt>
   15e9c:	add	r1, r4, #296	; 0x128
   15ea0:	add	r3, r4, #292	; 0x124
   15ea4:	mov	r2, r6
   15ea8:	str	r1, [sp, #4]
   15eac:	str	r3, [sp]
   15eb0:	str	r7, [sp, #8]
   15eb4:	add	r3, r4, #288	; 0x120
   15eb8:	mov	r0, r5
   15ebc:	ldr	r1, [pc, #84]	; 15f18 <mount@plt+0x3e60>
   15ec0:	bl	11fa4 <sscanf@plt>
   15ec4:	add	r2, r4, #276	; 0x114
   15ec8:	mov	r3, #16
   15ecc:	strh	r3, [r2, #2]
   15ed0:	mov	r0, #0
   15ed4:	strh	r3, [r4, #14]
   15ed8:	add	sp, sp, #20
   15edc:	pop	{r4, r5, r6, r7, pc}
   15ee0:	ldr	r1, [pc, #52]	; 15f1c <mount@plt+0x3e64>
   15ee4:	bl	11fa4 <sscanf@plt>
   15ee8:	mov	r3, r7
   15eec:	mov	r2, r6
   15ef0:	mov	r0, r5
   15ef4:	ldr	r1, [pc, #32]	; 15f1c <mount@plt+0x3e64>
   15ef8:	bl	11fa4 <sscanf@plt>
   15efc:	add	r2, r4, #276	; 0x114
   15f00:	mov	r3, #4
   15f04:	strh	r3, [r2, #2]
   15f08:	mov	r0, #0
   15f0c:	strh	r3, [r4, #14]
   15f10:	add	sp, sp, #20
   15f14:	pop	{r4, r5, r6, r7, pc}
   15f18:	andeq	r8, r2, ip, asr lr
   15f1c:	andeq	r8, r2, r4, asr lr
   15f20:	push	{r4, r5, r6, r7, r8, lr}
   15f24:	ldr	r5, [pc, #156]	; 15fc8 <mount@plt+0x3f10>
   15f28:	ldr	r4, [r5]
   15f2c:	ldr	r3, [r4, #12]
   15f30:	cmp	r3, #0
   15f34:	bne	15f9c <mount@plt+0x3ee4>
   15f38:	ldr	ip, [pc, #140]	; 15fcc <mount@plt+0x3f14>
   15f3c:	ldr	r2, [r4, #20]
   15f40:	ldr	r0, [pc, #136]	; 15fd0 <mount@plt+0x3f18>
   15f44:	ldr	r1, [ip, #1040]	; 0x410
   15f48:	ldr	r6, [ip, #1048]	; 0x418
   15f4c:	ldrh	r3, [r1]
   15f50:	ldr	lr, [r6, #4]
   15f54:	cmp	r3, r2
   15f58:	add	r2, r6, #8
   15f5c:	and	r7, r3, #1
   15f60:	sub	r2, lr, r2
   15f64:	add	r2, r2, r7
   15f68:	sub	r0, r0, r2
   15f6c:	strgt	r3, [r4, #20]
   15f70:	cmp	r0, #1
   15f74:	bls	15fb4 <mount@plt+0x3efc>
   15f78:	add	r3, r3, #1
   15f7c:	bic	r3, r3, #1
   15f80:	add	r1, r1, #2
   15f84:	add	r2, r1, r3
   15f88:	mov	r0, #0
   15f8c:	strh	r0, [r1, r3]
   15f90:	add	r3, r2, #2
   15f94:	str	r2, [ip, #1040]	; 0x410
   15f98:	str	r3, [r6, #4]
   15f9c:	ldr	r3, [pc, #48]	; 15fd4 <mount@plt+0x3f1c>
   15fa0:	sub	r2, r4, r3
   15fa4:	cmp	r2, #192	; 0xc0
   15fa8:	addne	r3, r4, #24
   15fac:	str	r3, [r5]
   15fb0:	pop	{r4, r5, r6, r7, r8, pc}
   15fb4:	add	lr, lr, r7
   15fb8:	str	lr, [r6, #4]
   15fbc:	bl	141d0 <mount@plt+0x2118>
   15fc0:	str	r0, [r6]
   15fc4:	b	15f9c <mount@plt+0x3ee4>
   15fc8:	andeq	ip, r3, ip, lsr r2
   15fcc:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   15fd0:	strdeq	pc, [pc], -r8
   15fd4:	andeq	ip, r3, r0, asr #4
   15fd8:	ldrh	r3, [r0, #18]
   15fdc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15fe0:	mov	r6, r0
   15fe4:	ldr	r4, [pc, #832]	; 1632c <mount@plt+0x4274>
   15fe8:	sub	r3, r3, #1
   15fec:	ldr	r9, [r4]
   15ff0:	cmp	r3, #39	; 0x27
   15ff4:	ldrls	pc, [pc, r3, lsl #2]
   15ff8:	b	1623c <mount@plt+0x4184>
   15ffc:	ldrdeq	r6, [r1], -ip
   16000:	andeq	r6, r1, r0, lsl #4
   16004:	andeq	r6, r1, ip, lsr r2
   16008:	andeq	r6, r1, ip, lsr r2
   1600c:	andeq	r6, r1, ip, lsr r2
   16010:	andeq	r6, r1, ip, lsr r2
   16014:	andeq	r6, r1, ip, lsr r2
   16018:	andeq	r6, r1, ip, lsr r2
   1601c:	andeq	r6, r1, ip, lsr r2
   16020:	andeq	r6, r1, r0, lsl #4
   16024:	andeq	r6, r1, ip, lsr r2
   16028:	andeq	r6, r1, ip, lsr r2
   1602c:	andeq	r6, r1, ip, lsr r2
   16030:	andeq	r6, r1, ip, lsr r2
   16034:	andeq	r6, r1, ip, lsr r2
   16038:	muleq	r1, ip, r0
   1603c:	andeq	r6, r1, r0, lsl #3
   16040:	andeq	r6, r1, ip, lsr r2
   16044:	andeq	r6, r1, ip, lsr r2
   16048:	andeq	r6, r1, ip, lsr r2
   1604c:	andeq	r6, r1, ip, lsr r2
   16050:	andeq	r6, r1, ip, lsr r2
   16054:	andeq	r6, r1, ip, lsr r2
   16058:	andeq	r6, r1, ip, lsr r2
   1605c:	andeq	r6, r1, ip, lsr r2
   16060:	andeq	r6, r1, ip, lsr r2
   16064:	andeq	r6, r1, ip, lsr r2
   16068:	andeq	r6, r1, ip, lsr r2
   1606c:	andeq	r6, r1, ip, lsr r2
   16070:	muleq	r1, ip, r1
   16074:	andeq	r6, r1, ip, lsr r2
   16078:	andeq	r6, r1, ip, lsr r2
   1607c:	andeq	r6, r1, ip, lsr r2
   16080:	andeq	r6, r1, ip, lsr r2
   16084:	andeq	r6, r1, ip, lsr r2
   16088:	andeq	r6, r1, ip, lsr r2
   1608c:	andeq	r6, r1, ip, lsr r2
   16090:	andeq	r6, r1, ip, lsr r2
   16094:	andeq	r6, r1, ip, lsr r2
   16098:			; <UNDEFINED> instruction: 0x000161b8
   1609c:	ldr	r8, [pc, #652]	; 16330 <mount@plt+0x4278>
   160a0:	ldr	r7, [pc, #652]	; 16334 <mount@plt+0x427c>
   160a4:	ldr	r5, [pc, #652]	; 16338 <mount@plt+0x4280>
   160a8:	cmp	r9, r5
   160ac:	beq	160c0 <mount@plt+0x4008>
   160b0:	bl	15f20 <mount@plt+0x3e68>
   160b4:	ldr	r3, [r4]
   160b8:	cmp	r3, r5
   160bc:	bne	160b0 <mount@plt+0x3ff8>
   160c0:	mov	r1, r8
   160c4:	ldr	r0, [pc, #624]	; 1633c <mount@plt+0x4284>
   160c8:	bl	14b8c <mount@plt+0x2ad4>
   160cc:	ldr	r3, [r4]
   160d0:	sub	r3, r3, r5
   160d4:	cmp	r3, #24
   160d8:	beq	160f0 <mount@plt+0x4038>
   160dc:	bl	15f20 <mount@plt+0x3e68>
   160e0:	ldr	r3, [r4]
   160e4:	sub	r3, r3, r5
   160e8:	cmp	r3, #24
   160ec:	bne	160dc <mount@plt+0x4024>
   160f0:	ldr	r3, [r6, #548]	; 0x224
   160f4:	ldr	r0, [pc, #576]	; 1633c <mount@plt+0x4284>
   160f8:	add	r7, r7, r3, lsl #2
   160fc:	ldr	r1, [r7, #204]	; 0xcc
   16100:	bl	14b8c <mount@plt+0x2ad4>
   16104:	b	1610c <mount@plt+0x4054>
   16108:	bl	15f20 <mount@plt+0x3e68>
   1610c:	ldr	r3, [r4]
   16110:	sub	r3, r3, r5
   16114:	cmp	r3, #48	; 0x30
   16118:	bne	16108 <mount@plt+0x4050>
   1611c:	ldr	r1, [r6, #552]	; 0x228
   16120:	ldr	r0, [pc, #536]	; 16340 <mount@plt+0x4288>
   16124:	bl	14b8c <mount@plt+0x2ad4>
   16128:	ldr	r3, [r4]
   1612c:	sub	r3, r3, r5
   16130:	cmp	r3, #72	; 0x48
   16134:	beq	1614c <mount@plt+0x4094>
   16138:	bl	15f20 <mount@plt+0x3e68>
   1613c:	ldr	r3, [r4]
   16140:	sub	r3, r3, r5
   16144:	cmp	r3, #72	; 0x48
   16148:	bne	16138 <mount@plt+0x4080>
   1614c:	ldr	r1, [r6, #556]	; 0x22c
   16150:	ldr	r0, [pc, #488]	; 16340 <mount@plt+0x4288>
   16154:	bl	14b8c <mount@plt+0x2ad4>
   16158:	ldr	r3, [r4]
   1615c:	sub	r3, r3, r5
   16160:	cmp	r3, #96	; 0x60
   16164:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16168:	bl	15f20 <mount@plt+0x3e68>
   1616c:	ldr	r3, [r4]
   16170:	sub	r3, r3, r5
   16174:	cmp	r3, #96	; 0x60
   16178:	bne	16168 <mount@plt+0x40b0>
   1617c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16180:	ldr	r2, [r0, #4]
   16184:	ldr	r3, [pc, #440]	; 16344 <mount@plt+0x428c>
   16188:	cmp	r2, #3
   1618c:	ldr	r8, [pc, #436]	; 16348 <mount@plt+0x4290>
   16190:	ldr	r7, [pc, #412]	; 16334 <mount@plt+0x427c>
   16194:	movne	r8, r3
   16198:	b	160a4 <mount@plt+0x3fec>
   1619c:	ldr	r3, [r0, #4]
   161a0:	sub	r3, r3, #1
   161a4:	cmp	r3, #4
   161a8:	bls	16248 <mount@plt+0x4190>
   161ac:	ldr	r8, [pc, #408]	; 1634c <mount@plt+0x4294>
   161b0:	ldr	r7, [pc, #380]	; 16334 <mount@plt+0x427c>
   161b4:	b	160a4 <mount@plt+0x3fec>
   161b8:	ldr	r3, [r0, #4]
   161bc:	cmp	r3, #1
   161c0:	beq	162fc <mount@plt+0x4244>
   161c4:	ldr	r2, [pc, #384]	; 1634c <mount@plt+0x4294>
   161c8:	cmp	r3, #2
   161cc:	ldr	r8, [pc, #380]	; 16350 <mount@plt+0x4298>
   161d0:	ldr	r7, [pc, #348]	; 16334 <mount@plt+0x427c>
   161d4:	movne	r8, r2
   161d8:	b	160a4 <mount@plt+0x3fec>
   161dc:	ldr	r3, [r0, #4]
   161e0:	cmp	r3, #1
   161e4:	beq	16308 <mount@plt+0x4250>
   161e8:	ldr	r2, [pc, #356]	; 16354 <mount@plt+0x429c>
   161ec:	cmp	r3, #5
   161f0:	ldr	r8, [pc, #352]	; 16358 <mount@plt+0x42a0>
   161f4:	ldr	r7, [pc, #312]	; 16334 <mount@plt+0x427c>
   161f8:	movne	r8, r2
   161fc:	b	160a4 <mount@plt+0x3fec>
   16200:	ldr	r8, [r0, #4]
   16204:	cmp	r8, #17
   16208:	beq	16320 <mount@plt+0x4268>
   1620c:	bls	162c0 <mount@plt+0x4208>
   16210:	cmp	r8, #58	; 0x3a
   16214:	beq	16314 <mount@plt+0x425c>
   16218:	cmp	r8, #132	; 0x84
   1621c:	beq	162e4 <mount@plt+0x422c>
   16220:	ldr	r2, [pc, #308]	; 1635c <mount@plt+0x42a4>
   16224:	ldr	r3, [pc, #288]	; 1634c <mount@plt+0x4294>
   16228:	cmp	r8, #33	; 0x21
   1622c:	ldr	r7, [pc, #256]	; 16334 <mount@plt+0x427c>
   16230:	moveq	r8, r2
   16234:	movne	r8, r3
   16238:	b	160a4 <mount@plt+0x3fec>
   1623c:	ldr	r8, [pc, #284]	; 16360 <mount@plt+0x42a8>
   16240:	ldr	r7, [pc, #236]	; 16334 <mount@plt+0x427c>
   16244:	b	160a4 <mount@plt+0x3fec>
   16248:	ldr	r7, [pc, #228]	; 16334 <mount@plt+0x427c>
   1624c:	ldr	r1, [pc, #272]	; 16364 <mount@plt+0x42ac>
   16250:	add	r3, r7, r3, lsl #2
   16254:	ldr	r8, [r3, #152]	; 0x98
   16258:	mov	r0, r8
   1625c:	bl	11b0c <strcmp@plt>
   16260:	cmp	r0, #0
   16264:	bne	160a4 <mount@plt+0x3fec>
   16268:	ldr	r3, [pc, #248]	; 16368 <mount@plt+0x42b0>
   1626c:	ldr	r3, [r3, #1120]	; 0x460
   16270:	cmp	r3, #0
   16274:	beq	160a4 <mount@plt+0x3fec>
   16278:	ldr	r2, [r6, #560]	; 0x230
   1627c:	cmp	r2, r3
   16280:	bne	160a4 <mount@plt+0x3fec>
   16284:	ldr	r5, [pc, #172]	; 16338 <mount@plt+0x4280>
   16288:	sub	r9, r9, r5
   1628c:	cmp	r9, #24
   16290:	beq	162a8 <mount@plt+0x41f0>
   16294:	bl	15f20 <mount@plt+0x3e68>
   16298:	ldr	r3, [r4]
   1629c:	sub	r3, r3, r5
   162a0:	cmp	r3, #24
   162a4:	bne	16294 <mount@plt+0x41dc>
   162a8:	ldr	r3, [r6, #548]	; 0x224
   162ac:	ldr	r0, [pc, #184]	; 1636c <mount@plt+0x42b4>
   162b0:	add	r7, r7, r3, lsl #2
   162b4:	ldr	r1, [r7, #172]	; 0xac
   162b8:	bl	14b8c <mount@plt+0x2ad4>
   162bc:	b	1610c <mount@plt+0x4054>
   162c0:	cmp	r8, #0
   162c4:	beq	162f0 <mount@plt+0x4238>
   162c8:	ldr	r2, [pc, #160]	; 16370 <mount@plt+0x42b8>
   162cc:	ldr	r3, [pc, #120]	; 1634c <mount@plt+0x4294>
   162d0:	cmp	r8, #6
   162d4:	ldr	r7, [pc, #88]	; 16334 <mount@plt+0x427c>
   162d8:	moveq	r8, r2
   162dc:	movne	r8, r3
   162e0:	b	160a4 <mount@plt+0x3fec>
   162e4:	ldr	r8, [pc, #120]	; 16364 <mount@plt+0x42ac>
   162e8:	ldr	r7, [pc, #68]	; 16334 <mount@plt+0x427c>
   162ec:	b	16268 <mount@plt+0x41b0>
   162f0:	ldr	r8, [pc, #124]	; 16374 <mount@plt+0x42bc>
   162f4:	ldr	r7, [pc, #56]	; 16334 <mount@plt+0x427c>
   162f8:	b	160a4 <mount@plt+0x3fec>
   162fc:	ldr	r8, [pc, #116]	; 16378 <mount@plt+0x42c0>
   16300:	ldr	r7, [pc, #44]	; 16334 <mount@plt+0x427c>
   16304:	b	160a4 <mount@plt+0x3fec>
   16308:	ldr	r8, [pc, #108]	; 1637c <mount@plt+0x42c4>
   1630c:	ldr	r7, [pc, #32]	; 16334 <mount@plt+0x427c>
   16310:	b	160a4 <mount@plt+0x3fec>
   16314:	ldr	r8, [pc, #100]	; 16380 <mount@plt+0x42c8>
   16318:	ldr	r7, [pc, #20]	; 16334 <mount@plt+0x427c>
   1631c:	b	160a4 <mount@plt+0x3fec>
   16320:	ldr	r8, [pc, #92]	; 16384 <mount@plt+0x42cc>
   16324:	ldr	r7, [pc, #8]	; 16334 <mount@plt+0x427c>
   16328:	b	160a4 <mount@plt+0x3fec>
   1632c:	andeq	ip, r3, ip, lsr r2
   16330:	andeq	r8, r2, r4, asr #29
   16334:	andeq	r7, r2, r0, ror r2
   16338:	andeq	ip, r3, r0, asr #4
   1633c:	andeq	sl, r2, r8, asr #28
   16340:	ldrdeq	r8, [r2], -r0
   16344:	andeq	r8, r2, r4, ror lr
   16348:	andeq	r8, r2, r4, lsr #29
   1634c:	andeq	r8, r2, r0, ror lr
   16350:	andeq	r8, r2, r4, lsl #29
   16354:	muleq	r2, r4, lr
   16358:	andeq	r8, r2, ip, lsr #29
   1635c:	muleq	r2, ip, lr
   16360:	andeq	r8, r2, ip, ror lr
   16364:	andeq	r7, r2, r8, lsl pc
   16368:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   1636c:	andeq	r8, r2, r8, asr #29
   16370:	andeq	r9, r2, r0, lsl sl
   16374:	andeq	r9, r2, r8, lsr #19
   16378:			; <UNDEFINED> instruction: 0x00028ebc
   1637c:			; <UNDEFINED> instruction: 0x00028eb4
   16380:	andeq	r8, r2, ip, lsl #29
   16384:	ldrdeq	r9, [r2], -ip
   16388:	subs	ip, r3, #0
   1638c:	push	{r4, lr}
   16390:	mov	r4, r2
   16394:	beq	163c4 <mount@plt+0x430c>
   16398:	mov	r3, r1
   1639c:	mov	r2, ip
   163a0:	mov	r1, r0
   163a4:	ldr	r0, [pc, #44]	; 163d8 <mount@plt+0x4320>
   163a8:	bl	14b8c <mount@plt+0x2ad4>
   163ac:	bl	15f20 <mount@plt+0x3e68>
   163b0:	mov	r1, r4
   163b4:	ldr	r0, [pc, #32]	; 163dc <mount@plt+0x4324>
   163b8:	bl	14b8c <mount@plt+0x2ad4>
   163bc:	pop	{r4, lr}
   163c0:	b	15f20 <mount@plt+0x3e68>
   163c4:	mov	r2, r1
   163c8:	mov	r1, r0
   163cc:	ldr	r0, [pc, #12]	; 163e0 <mount@plt+0x4328>
   163d0:	bl	14b8c <mount@plt+0x2ad4>
   163d4:	b	163ac <mount@plt+0x42f4>
   163d8:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   163dc:	andeq	sl, r2, r8, asr #28
   163e0:	ldrdeq	r8, [r2], -ip
   163e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163e8:	sub	sp, sp, #1040	; 0x410
   163ec:	ldr	r9, [pc, #780]	; 16700 <mount@plt+0x4648>
   163f0:	ldrh	r7, [r0, #6]
   163f4:	sub	sp, sp, #12
   163f8:	mov	r4, r1
   163fc:	ldr	r1, [r9]
   16400:	cmp	r7, #2
   16404:	mov	r5, r2
   16408:	add	r6, r0, #8
   1640c:	str	r1, [sp, #1044]	; 0x414
   16410:	beq	16664 <mount@plt+0x45ac>
   16414:	cmp	r3, #0
   16418:	bne	16510 <mount@plt+0x4458>
   1641c:	mov	r2, #16
   16420:	ldr	r1, [pc, #732]	; 16704 <mount@plt+0x464c>
   16424:	mov	r0, r6
   16428:	bl	11bfc <memcmp@plt>
   1642c:	cmp	r0, #0
   16430:	bne	16510 <mount@plt+0x4458>
   16434:	add	r8, sp, #20
   16438:	mov	r3, #42	; 0x2a
   1643c:	strh	r3, [sp, #20]
   16440:	cmp	r5, #0
   16444:	bne	1655c <mount@plt+0x44a4>
   16448:	cmp	r4, #0
   1644c:	beq	16570 <mount@plt+0x44b8>
   16450:	ldr	r3, [pc, #688]	; 16708 <mount@plt+0x4650>
   16454:	ldr	r3, [r3, #220]	; 0xdc
   16458:	cmp	r3, #0
   1645c:	beq	164c8 <mount@plt+0x4410>
   16460:	ldr	fp, [pc, #676]	; 1670c <mount@plt+0x4654>
   16464:	ldr	r3, [pc, #676]	; 16710 <mount@plt+0x4658>
   16468:	ldr	r7, [fp, #1252]	; 0x4e4
   1646c:	cmp	r7, r3
   16470:	beq	166a4 <mount@plt+0x45ec>
   16474:	eor	r6, r4, r7, lsr #2
   16478:	ldr	sl, [pc, #660]	; 16714 <mount@plt+0x465c>
   1647c:	lsl	r6, r6, #22
   16480:	lsr	r6, r6, #22
   16484:	ldr	r1, [sl, r6, lsl #2]
   16488:	cmp	r1, #0
   1648c:	beq	16580 <mount@plt+0x44c8>
   16490:	mov	r3, r1
   16494:	b	164a4 <mount@plt+0x43ec>
   16498:	ldr	r3, [r3]
   1649c:	cmp	r3, #0
   164a0:	beq	16580 <mount@plt+0x44c8>
   164a4:	ldr	r2, [r3, #4]
   164a8:	cmp	r4, r2
   164ac:	bne	16498 <mount@plt+0x43e0>
   164b0:	ldr	r2, [r3, #12]
   164b4:	cmp	r7, r2
   164b8:	bne	16498 <mount@plt+0x43e0>
   164bc:	ldr	r2, [r3, #8]
   164c0:	cmp	r2, #0
   164c4:	bne	164e4 <mount@plt+0x442c>
   164c8:	mov	r2, #128	; 0x80
   164cc:	str	r4, [sp]
   164d0:	ldr	r3, [pc, #576]	; 16718 <mount@plt+0x4660>
   164d4:	mov	r1, #1
   164d8:	ldr	r0, [pc, #572]	; 1671c <mount@plt+0x4664>
   164dc:	bl	11e48 <__sprintf_chk@plt>
   164e0:	ldr	r2, [pc, #564]	; 1671c <mount@plt+0x4664>
   164e4:	mov	r3, r5
   164e8:	mov	r0, r8
   164ec:	ldr	r1, [pc, #556]	; 16720 <mount@plt+0x4668>
   164f0:	bl	16388 <mount@plt+0x42d0>
   164f4:	ldr	r2, [sp, #1044]	; 0x414
   164f8:	ldr	r3, [r9]
   164fc:	cmp	r2, r3
   16500:	bne	166fc <mount@plt+0x4644>
   16504:	add	sp, sp, #1040	; 0x410
   16508:	add	sp, sp, #12
   1650c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16510:	mov	r2, r6
   16514:	mov	r1, #16
   16518:	mov	r0, r7
   1651c:	bl	1e804 <mount@plt+0xc74c>
   16520:	mov	r1, #58	; 0x3a
   16524:	mov	r8, r0
   16528:	bl	11e0c <strchr@plt>
   1652c:	cmp	r0, #0
   16530:	beq	16440 <mount@plt+0x4388>
   16534:	ldr	r2, [pc, #488]	; 16724 <mount@plt+0x466c>
   16538:	mov	r3, #1024	; 0x400
   1653c:	add	r0, sp, #20
   16540:	stm	sp, {r2, r8}
   16544:	mov	r1, r3
   16548:	mov	r2, #1
   1654c:	bl	12088 <__snprintf_chk@plt>
   16550:	cmp	r5, #0
   16554:	add	r8, sp, #20
   16558:	beq	16448 <mount@plt+0x4390>
   1655c:	mov	r0, r5
   16560:	bl	21540 <mount@plt+0xf488>
   16564:	cmp	r4, #0
   16568:	mov	r5, r0
   1656c:	bne	16450 <mount@plt+0x4398>
   16570:	ldr	r2, [pc, #432]	; 16728 <mount@plt+0x4670>
   16574:	mov	r3, #42	; 0x2a
   16578:	strh	r3, [r2, #4]!
   1657c:	b	164e4 <mount@plt+0x442c>
   16580:	mov	r0, #16
   16584:	str	r1, [sp, #8]
   16588:	bl	11d70 <malloc@plt>
   1658c:	subs	r3, r0, #0
   16590:	beq	164c8 <mount@plt+0x4410>
   16594:	ldr	r2, [fp, #1052]	; 0x41c
   16598:	ldr	r1, [sp, #8]
   1659c:	cmp	r2, #0
   165a0:	bne	16654 <mount@plt+0x459c>
   165a4:	mov	r0, r4
   165a8:	str	r3, [sp, #8]
   165ac:	bl	13d00 <mount@plt+0x1c48>
   165b0:	ldr	r3, [sp, #8]
   165b4:	cmp	r0, #0
   165b8:	bne	16684 <mount@plt+0x45cc>
   165bc:	ldr	r2, [fp, #1256]	; 0x4e8
   165c0:	cmp	r2, #0
   165c4:	beq	166c0 <mount@plt+0x4608>
   165c8:	rev16	r0, r4
   165cc:	ldr	r1, [fp, #1252]	; 0x4e4
   165d0:	uxth	r0, r0
   165d4:	str	r3, [sp, #8]
   165d8:	bl	11e6c <getservbyport@plt>
   165dc:	ldr	r3, [sp, #8]
   165e0:	cmp	r0, #0
   165e4:	beq	166dc <mount@plt+0x4624>
   165e8:	ldr	r0, [r0]
   165ec:	ldr	r7, [fp, #1252]	; 0x4e4
   165f0:	ldr	r1, [sl, r6, lsl #2]
   165f4:	cmp	r0, #0
   165f8:	str	r4, [r3, #4]
   165fc:	streq	r0, [r3, #8]
   16600:	streq	r7, [r3, #12]
   16604:	streq	r1, [r3]
   16608:	streq	r3, [sl, r6, lsl #2]
   1660c:	beq	164c8 <mount@plt+0x4410>
   16610:	str	r1, [sp, #12]
   16614:	str	r3, [sp, #8]
   16618:	bl	11c20 <strdup@plt>
   1661c:	ldr	r3, [sp, #8]
   16620:	ldr	r1, [sp, #12]
   16624:	str	r3, [sl, r6, lsl #2]
   16628:	str	r7, [r3, #12]
   1662c:	str	r1, [r3]
   16630:	mov	r2, r0
   16634:	str	r0, [r3, #8]
   16638:	b	164c0 <mount@plt+0x4408>
   1663c:	ldr	r0, [r2, #12]
   16640:	cmp	r7, r0
   16644:	beq	1667c <mount@plt+0x45c4>
   16648:	ldr	r2, [r2]
   1664c:	cmp	r2, #0
   16650:	beq	165a4 <mount@plt+0x44ec>
   16654:	ldr	r0, [r2, #4]
   16658:	cmp	r4, r0
   1665c:	bne	16648 <mount@plt+0x4590>
   16660:	b	1663c <mount@plt+0x4584>
   16664:	mov	r2, r6
   16668:	mov	r0, r7
   1666c:	mov	r1, #4
   16670:	bl	1e804 <mount@plt+0xc74c>
   16674:	mov	r8, r0
   16678:	b	16440 <mount@plt+0x4388>
   1667c:	ldr	r0, [r2, #8]
   16680:	b	165f4 <mount@plt+0x453c>
   16684:	ldr	r2, [fp, #1252]	; 0x4e4
   16688:	ldr	r1, [sl, r6, lsl #2]
   1668c:	str	r2, [r3, #12]
   16690:	mov	r2, #0
   16694:	stm	r3, {r1, r4}
   16698:	str	r3, [sl, r6, lsl #2]
   1669c:	str	r2, [r3, #8]
   166a0:	b	164c8 <mount@plt+0x4410>
   166a4:	add	r1, fp, #1120	; 0x460
   166a8:	mov	r2, #128	; 0x80
   166ac:	add	r1, r1, #4
   166b0:	mov	r0, r4
   166b4:	bl	21c6c <mount@plt+0xfbb4>
   166b8:	mov	r2, r0
   166bc:	b	164e4 <mount@plt+0x442c>
   166c0:	mov	r0, #1
   166c4:	str	r3, [sp, #8]
   166c8:	bl	11e24 <setservent@plt>
   166cc:	mov	r2, #1
   166d0:	str	r2, [fp, #1256]	; 0x4e8
   166d4:	ldr	r3, [sp, #8]
   166d8:	b	165c8 <mount@plt+0x4510>
   166dc:	ldr	r2, [sl, r6, lsl #2]
   166e0:	ldr	r1, [fp, #1252]	; 0x4e4
   166e4:	str	r4, [r3, #4]
   166e8:	str	r1, [r3, #12]
   166ec:	str	r0, [r3, #8]
   166f0:	str	r2, [r3]
   166f4:	str	r3, [sl, r6, lsl #2]
   166f8:	b	164c8 <mount@plt+0x4410>
   166fc:	bl	11c2c <__stack_chk_fail@plt>
   16700:	ldrdeq	fp, [r3], -r8
   16704:	ldrdeq	fp, [r3], -ip
   16708:	andeq	ip, r3, ip, lsr r2
   1670c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   16710:	andeq	r9, r2, r8, lsr #19
   16714:	andeq	lr, r3, ip, asr #9
   16718:	andeq	r8, r2, r4, lsl #6
   1671c:	strdeq	lr, [r3], -r4
   16720:			; <UNDEFINED> instruction: 0x00027db8
   16724:	andeq	r8, r2, r4, ror #29
   16728:	strdeq	lr, [r3], -r0
   1672c:	push	{r4, r5, r6, lr}
   16730:	sub	sp, sp, #144	; 0x90
   16734:	ldr	r4, [pc, #140]	; 167c8 <mount@plt+0x4710>
   16738:	ldr	r6, [r0, #4]
   1673c:	ldr	r5, [r1, #4]
   16740:	ldr	r3, [r4]
   16744:	mov	r2, #64	; 0x40
   16748:	mov	r1, #0
   1674c:	add	r0, sp, #12
   16750:	str	r3, [sp, #140]	; 0x8c
   16754:	bl	11e78 <memset@plt>
   16758:	mov	r2, #64	; 0x40
   1675c:	mov	r1, #0
   16760:	add	r0, sp, #76	; 0x4c
   16764:	bl	11e78 <memset@plt>
   16768:	ldr	r3, [pc, #92]	; 167cc <mount@plt+0x4714>
   1676c:	mov	r2, #64	; 0x40
   16770:	mov	r1, #1
   16774:	str	r6, [sp]
   16778:	add	r0, sp, #12
   1677c:	bl	11e48 <__sprintf_chk@plt>
   16780:	ldr	r3, [pc, #68]	; 167cc <mount@plt+0x4714>
   16784:	mov	r2, #64	; 0x40
   16788:	mov	r1, #1
   1678c:	str	r5, [sp]
   16790:	add	r0, sp, #76	; 0x4c
   16794:	bl	11e48 <__sprintf_chk@plt>
   16798:	add	r2, sp, #76	; 0x4c
   1679c:	mov	r3, #0
   167a0:	add	r0, sp, #12
   167a4:	ldr	r1, [pc, #36]	; 167d0 <mount@plt+0x4718>
   167a8:	bl	16388 <mount@plt+0x42d0>
   167ac:	ldr	r2, [sp, #140]	; 0x8c
   167b0:	ldr	r3, [r4]
   167b4:	cmp	r2, r3
   167b8:	bne	167c4 <mount@plt+0x470c>
   167bc:	add	sp, sp, #144	; 0x90
   167c0:	pop	{r4, r5, r6, pc}
   167c4:	bl	11c2c <__stack_chk_fail@plt>
   167c8:	ldrdeq	fp, [r3], -r8
   167cc:	andeq	r8, r2, r4, lsl #6
   167d0:			; <UNDEFINED> instruction: 0x00027db8
   167d4:	push	{r4, r5, r6, lr}
   167d8:	mov	r4, r0
   167dc:	ldr	r1, [pc, #324]	; 16928 <mount@plt+0x4870>
   167e0:	bl	11c68 <strcasecmp@plt>
   167e4:	cmp	r0, #0
   167e8:	beq	168dc <mount@plt+0x4824>
   167ec:	ldr	r1, [pc, #312]	; 1692c <mount@plt+0x4874>
   167f0:	mov	r0, r4
   167f4:	bl	11c68 <strcasecmp@plt>
   167f8:	cmp	r0, #0
   167fc:	beq	168dc <mount@plt+0x4824>
   16800:	ldr	r1, [pc, #296]	; 16930 <mount@plt+0x4878>
   16804:	mov	r0, r4
   16808:	bl	11c68 <strcasecmp@plt>
   1680c:	cmp	r0, #0
   16810:	beq	168e4 <mount@plt+0x482c>
   16814:	ldr	r1, [pc, #280]	; 16934 <mount@plt+0x487c>
   16818:	mov	r0, r4
   1681c:	bl	11c68 <strcasecmp@plt>
   16820:	cmp	r0, #0
   16824:	beq	168ec <mount@plt+0x4834>
   16828:	ldr	r1, [pc, #264]	; 16938 <mount@plt+0x4880>
   1682c:	mov	r0, r4
   16830:	bl	11c68 <strcasecmp@plt>
   16834:	cmp	r0, #0
   16838:	beq	168f4 <mount@plt+0x483c>
   1683c:	ldr	r1, [pc, #248]	; 1693c <mount@plt+0x4884>
   16840:	mov	r0, r4
   16844:	bl	11c68 <strcasecmp@plt>
   16848:	cmp	r0, #0
   1684c:	beq	168fc <mount@plt+0x4844>
   16850:	ldr	r1, [pc, #232]	; 16940 <mount@plt+0x4888>
   16854:	mov	r0, r4
   16858:	bl	11c68 <strcasecmp@plt>
   1685c:	cmp	r0, #0
   16860:	beq	16904 <mount@plt+0x484c>
   16864:	ldr	r1, [pc, #216]	; 16944 <mount@plt+0x488c>
   16868:	mov	r0, r4
   1686c:	bl	11c68 <strcasecmp@plt>
   16870:	cmp	r0, #0
   16874:	beq	16918 <mount@plt+0x4860>
   16878:	ldr	r1, [pc, #200]	; 16948 <mount@plt+0x4890>
   1687c:	mov	r0, r4
   16880:	bl	11c68 <strcasecmp@plt>
   16884:	cmp	r0, #0
   16888:	beq	16920 <mount@plt+0x4868>
   1688c:	ldr	r6, [pc, #184]	; 1694c <mount@plt+0x4894>
   16890:	ldr	r1, [pc, #184]	; 16950 <mount@plt+0x4898>
   16894:	mov	r5, #0
   16898:	b	168a0 <mount@plt+0x47e8>
   1689c:	ldr	r1, [r6], #4
   168a0:	mov	r0, r4
   168a4:	bl	11c68 <strcasecmp@plt>
   168a8:	cmp	r0, #0
   168ac:	beq	1690c <mount@plt+0x4854>
   168b0:	add	r5, r5, #1
   168b4:	cmp	r5, #12
   168b8:	bne	1689c <mount@plt+0x47e4>
   168bc:	ldr	r1, [pc, #144]	; 16954 <mount@plt+0x489c>
   168c0:	mov	r3, r4
   168c4:	ldr	r2, [pc, #140]	; 16958 <mount@plt+0x48a0>
   168c8:	ldr	r0, [r1]
   168cc:	mov	r1, #1
   168d0:	bl	11ef0 <__fprintf_chk@plt>
   168d4:	mvn	r0, #0
   168d8:	bl	11ddc <exit@plt>
   168dc:	mov	r0, #128	; 0x80
   168e0:	pop	{r4, r5, r6, pc}
   168e4:	mov	r0, #8
   168e8:	pop	{r4, r5, r6, pc}
   168ec:	mov	r0, #2
   168f0:	pop	{r4, r5, r6, pc}
   168f4:	ldr	r0, [pc, #96]	; 1695c <mount@plt+0x48a4>
   168f8:	pop	{r4, r5, r6, pc}
   168fc:	ldr	r0, [pc, #92]	; 16960 <mount@plt+0x48a8>
   16900:	pop	{r4, r5, r6, pc}
   16904:	ldr	r0, [pc, #88]	; 16964 <mount@plt+0x48ac>
   16908:	pop	{r4, r5, r6, pc}
   1690c:	mov	r0, #1
   16910:	lsl	r0, r0, r5
   16914:	pop	{r4, r5, r6, pc}
   16918:	mov	r0, #72	; 0x48
   1691c:	pop	{r4, r5, r6, pc}
   16920:	ldr	r0, [pc, #64]	; 16968 <mount@plt+0x48b0>
   16924:	pop	{r4, r5, r6, pc}
   16928:	strdeq	r8, [r2], -r4
   1692c:	strdeq	r8, [r2], -ip
   16930:	andeq	r8, r2, r4, lsl #30
   16934:	andeq	r8, r2, ip, lsl #30
   16938:	andeq	r8, r2, r8, lsl pc
   1693c:	andeq	r8, r2, ip, lsl pc
   16940:	andeq	r8, r2, r8, lsr #30
   16944:	andeq	r8, r2, r8, lsr pc
   16948:	andeq	r8, r2, r0, asr #30
   1694c:	andeq	r7, r2, r0, ror r3
   16950:	andeq	r8, r2, ip, ror #29
   16954:	andeq	sp, r3, r8, ror pc
   16958:	andeq	r8, r2, r4, asr #30
   1695c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   16960:	andeq	r0, r0, pc, ror fp
   16964:	andeq	r0, r0, fp, ror fp
   16968:			; <UNDEFINED> instruction: 0x00000fb7
   1696c:	push	{r4, r5, r6, r7, lr}
   16970:	mov	r5, r0
   16974:	ldr	r4, [pc, #84]	; 169d0 <mount@plt+0x4918>
   16978:	sub	sp, sp, #276	; 0x114
   1697c:	mov	r6, r1
   16980:	ldr	r3, [r4]
   16984:	mov	r1, r0
   16988:	mov	r7, r2
   1698c:	add	r0, sp, #4
   16990:	mov	r2, #264	; 0x108
   16994:	str	r3, [sp, #268]	; 0x10c
   16998:	bl	11bc0 <memcpy@plt>
   1699c:	ldr	r3, [r5, #20]
   169a0:	mov	r2, r7
   169a4:	mov	r1, r6
   169a8:	add	r0, sp, #4
   169ac:	str	r3, [sp, #12]
   169b0:	bl	1de10 <mount@plt+0xbd58>
   169b4:	ldr	r2, [sp, #268]	; 0x10c
   169b8:	ldr	r3, [r4]
   169bc:	cmp	r2, r3
   169c0:	bne	169cc <mount@plt+0x4914>
   169c4:	add	sp, sp, #276	; 0x114
   169c8:	pop	{r4, r5, r6, r7, pc}
   169cc:	bl	11c2c <__stack_chk_fail@plt>
   169d0:	ldrdeq	fp, [r3], -r8
   169d4:	push	{r4, r5, r6, lr}
   169d8:	mov	r5, r0
   169dc:	mov	r4, r1
   169e0:	mov	r6, r2
   169e4:	bl	1de10 <mount@plt+0xbd58>
   169e8:	cmp	r0, #0
   169ec:	popeq	{r4, r5, r6, pc}
   169f0:	ldrh	r3, [r4, #6]
   169f4:	cmp	r3, #2
   169f8:	beq	16a04 <mount@plt+0x494c>
   169fc:	mov	r0, #1
   16a00:	pop	{r4, r5, r6, pc}
   16a04:	ldrh	r3, [r5, #6]
   16a08:	cmp	r3, #10
   16a0c:	bne	169fc <mount@plt+0x4944>
   16a10:	ldr	r3, [r5, #8]
   16a14:	cmp	r3, #0
   16a18:	bne	169fc <mount@plt+0x4944>
   16a1c:	ldr	r3, [r5, #12]
   16a20:	cmp	r3, #0
   16a24:	bne	169fc <mount@plt+0x4944>
   16a28:	ldr	r3, [r5, #16]
   16a2c:	cmn	r3, #65536	; 0x10000
   16a30:	bne	169fc <mount@plt+0x4944>
   16a34:	mov	r2, r6
   16a38:	mov	r1, r4
   16a3c:	mov	r0, r5
   16a40:	pop	{r4, r5, r6, lr}
   16a44:	b	1696c <mount@plt+0x48b4>
   16a48:	ldr	r3, [r0]
   16a4c:	push	{r4, r5, r6, lr}
   16a50:	mov	r4, r0
   16a54:	mov	r5, r1
   16a58:	cmp	r3, #11
   16a5c:	ldrls	pc, [pc, r3, lsl #2]
   16a60:	b	16d28 <mount@plt+0x4c70>
   16a64:			; <UNDEFINED> instruction: 0x00016ab8
   16a68:	andeq	r6, r1, ip, lsl fp
   16a6c:	andeq	r6, r1, r0, lsl #23
   16a70:	muleq	r1, r8, fp
   16a74:	andeq	r6, r1, ip, ror #24
   16a78:	andeq	r6, r1, r4, lsr ip
   16a7c:	andeq	r6, r1, r0, asr ip
   16a80:			; <UNDEFINED> instruction: 0x00016bb0
   16a84:	andeq	r6, r1, ip, asr #23
   16a88:	andeq	r6, r1, r8, ror #23
   16a8c:	andeq	r6, r1, r8, lsl ip
   16a90:	muleq	r1, r4, sl
   16a94:	ldr	r3, [r0, #8]
   16a98:	ldr	r0, [r1, #592]	; 0x250
   16a9c:	ldr	r2, [r3, #276]	; 0x114
   16aa0:	ldr	r3, [r3, #272]	; 0x110
   16aa4:	and	r0, r0, r2
   16aa8:	sub	r0, r0, r3
   16aac:	clz	r0, r0
   16ab0:	lsr	r0, r0, #5
   16ab4:	pop	{r4, r5, r6, pc}
   16ab8:	ldr	r4, [r0, #8]
   16abc:	ldrh	r3, [r4, #6]
   16ac0:	cmp	r3, #1
   16ac4:	beq	16d08 <mount@plt+0x4c50>
   16ac8:	ldr	r3, [r4, #264]	; 0x108
   16acc:	cmn	r3, #1
   16ad0:	beq	16ae0 <mount@plt+0x4a28>
   16ad4:	ldr	r2, [r1, #544]	; 0x220
   16ad8:	cmp	r3, r2
   16adc:	bne	16ba8 <mount@plt+0x4af0>
   16ae0:	ldrsh	r2, [r4, #4]
   16ae4:	cmp	r2, #0
   16ae8:	beq	16b90 <mount@plt+0x4ad8>
   16aec:	add	r5, r5, #276	; 0x114
   16af0:	b	16b04 <mount@plt+0x4a4c>
   16af4:	ldr	r4, [r4, #280]	; 0x118
   16af8:	cmp	r4, #0
   16afc:	beq	16ba8 <mount@plt+0x4af0>
   16b00:	ldrsh	r2, [r4, #4]
   16b04:	mov	r1, r4
   16b08:	mov	r0, r5
   16b0c:	bl	169d4 <mount@plt+0x491c>
   16b10:	cmp	r0, #0
   16b14:	bne	16af4 <mount@plt+0x4a3c>
   16b18:	b	16b90 <mount@plt+0x4ad8>
   16b1c:	ldr	r4, [r0, #8]
   16b20:	ldrh	r3, [r4, #6]
   16b24:	cmp	r3, #1
   16b28:	beq	16d18 <mount@plt+0x4c60>
   16b2c:	ldr	r3, [r4, #264]	; 0x108
   16b30:	cmn	r3, #1
   16b34:	beq	16b44 <mount@plt+0x4a8c>
   16b38:	ldr	r2, [r1, #540]	; 0x21c
   16b3c:	cmp	r3, r2
   16b40:	bne	16ba8 <mount@plt+0x4af0>
   16b44:	ldrsh	r2, [r4, #4]
   16b48:	cmp	r2, #0
   16b4c:	beq	16b90 <mount@plt+0x4ad8>
   16b50:	add	r5, r5, #12
   16b54:	b	16b68 <mount@plt+0x4ab0>
   16b58:	ldr	r4, [r4, #280]	; 0x118
   16b5c:	cmp	r4, #0
   16b60:	beq	16ba8 <mount@plt+0x4af0>
   16b64:	ldrsh	r2, [r4, #4]
   16b68:	mov	r1, r4
   16b6c:	mov	r0, r5
   16b70:	bl	169d4 <mount@plt+0x491c>
   16b74:	cmp	r0, #0
   16b78:	bne	16b58 <mount@plt+0x4aa0>
   16b7c:	b	16b90 <mount@plt+0x4ad8>
   16b80:	ldr	r0, [r0, #8]
   16b84:	bl	16a48 <mount@plt+0x4990>
   16b88:	cmp	r0, #0
   16b8c:	beq	16c80 <mount@plt+0x4bc8>
   16b90:	mov	r0, #1
   16b94:	pop	{r4, r5, r6, pc}
   16b98:	ldr	r0, [r0, #8]
   16b9c:	bl	16a48 <mount@plt+0x4990>
   16ba0:	cmp	r0, #0
   16ba4:	bne	16c80 <mount@plt+0x4bc8>
   16ba8:	mov	r0, #0
   16bac:	pop	{r4, r5, r6, pc}
   16bb0:	ldr	r3, [r0, #8]
   16bb4:	ldr	r0, [r1, #540]	; 0x21c
   16bb8:	ldr	r3, [r3, #264]	; 0x108
   16bbc:	cmp	r0, r3
   16bc0:	movlt	r0, #0
   16bc4:	movge	r0, #1
   16bc8:	pop	{r4, r5, r6, pc}
   16bcc:	ldr	r3, [r0, #8]
   16bd0:	ldr	r0, [r1, #540]	; 0x21c
   16bd4:	ldr	r3, [r3, #264]	; 0x108
   16bd8:	cmp	r0, r3
   16bdc:	movgt	r0, #0
   16be0:	movle	r0, #1
   16be4:	pop	{r4, r5, r6, pc}
   16be8:	ldrh	r3, [r1, #18]
   16bec:	cmp	r3, #1
   16bf0:	beq	16ca0 <mount@plt+0x4be8>
   16bf4:	cmp	r3, #17
   16bf8:	ldr	r0, [r1, #540]	; 0x21c
   16bfc:	beq	16cf0 <mount@plt+0x4c38>
   16c00:	cmp	r3, #16
   16c04:	beq	16c98 <mount@plt+0x4be0>
   16c08:	cmp	r3, #40	; 0x28
   16c0c:	beq	16ce0 <mount@plt+0x4c28>
   16c10:	pop	{r4, r5, r6, lr}
   16c14:	b	13d00 <mount@plt+0x1c48>
   16c18:	ldr	r2, [r0, #8]
   16c1c:	ldr	r3, [r1, #572]	; 0x23c
   16c20:	ldr	r0, [r2, #268]	; 0x10c
   16c24:	sub	r0, r0, r3
   16c28:	clz	r0, r0
   16c2c:	lsr	r0, r0, #5
   16c30:	pop	{r4, r5, r6, pc}
   16c34:	ldr	r3, [r0, #8]
   16c38:	ldr	r0, [r1, #544]	; 0x220
   16c3c:	ldr	r3, [r3, #264]	; 0x108
   16c40:	cmp	r0, r3
   16c44:	movlt	r0, #0
   16c48:	movge	r0, #1
   16c4c:	pop	{r4, r5, r6, pc}
   16c50:	ldr	r3, [r0, #8]
   16c54:	ldr	r0, [r1, #544]	; 0x220
   16c58:	ldr	r3, [r3, #264]	; 0x108
   16c5c:	cmp	r0, r3
   16c60:	movgt	r0, #0
   16c64:	movle	r0, #1
   16c68:	pop	{r4, r5, r6, pc}
   16c6c:	ldr	r0, [r0, #8]
   16c70:	bl	16a48 <mount@plt+0x4990>
   16c74:	clz	r0, r0
   16c78:	lsr	r0, r0, #5
   16c7c:	pop	{r4, r5, r6, pc}
   16c80:	mov	r1, r5
   16c84:	ldr	r0, [r4, #4]
   16c88:	bl	16a48 <mount@plt+0x4990>
   16c8c:	adds	r0, r0, #0
   16c90:	movne	r0, #1
   16c94:	pop	{r4, r5, r6, pc}
   16c98:	lsr	r0, r0, #31
   16c9c:	pop	{r4, r5, r6, pc}
   16ca0:	ldr	r4, [r1, #20]
   16ca4:	cmp	r4, #0
   16ca8:	beq	16b90 <mount@plt+0x4ad8>
   16cac:	ldrb	r3, [r4]
   16cb0:	cmp	r3, #64	; 0x40
   16cb4:	bne	16ba8 <mount@plt+0x4af0>
   16cb8:	mov	r0, r4
   16cbc:	bl	11e00 <strlen@plt>
   16cc0:	cmp	r0, #6
   16cc4:	bne	16ba8 <mount@plt+0x4af0>
   16cc8:	add	r0, r4, #1
   16ccc:	ldr	r1, [pc, #88]	; 16d2c <mount@plt+0x4c74>
   16cd0:	bl	12094 <strspn@plt>
   16cd4:	cmp	r0, #5
   16cd8:	bne	16ba8 <mount@plt+0x4af0>
   16cdc:	b	16b90 <mount@plt+0x4ad8>
   16ce0:	cmp	r0, #1024	; 0x400
   16ce4:	movlt	r0, #0
   16ce8:	movge	r0, #1
   16cec:	pop	{r4, r5, r6, pc}
   16cf0:	cmp	r0, #0
   16cf4:	bne	16ba8 <mount@plt+0x4af0>
   16cf8:	ldr	r3, [r1, #20]
   16cfc:	cmp	r3, #0
   16d00:	beq	16b90 <mount@plt+0x4ad8>
   16d04:	b	16ba8 <mount@plt+0x4af0>
   16d08:	mov	r1, r4
   16d0c:	add	r0, r5, #276	; 0x114
   16d10:	pop	{r4, r5, r6, lr}
   16d14:	b	149b0 <mount@plt+0x28f8>
   16d18:	mov	r1, r4
   16d1c:	add	r0, r5, #12
   16d20:	pop	{r4, r5, r6, lr}
   16d24:	b	149b0 <mount@plt+0x28f8>
   16d28:	bl	1204c <abort@plt>
   16d2c:	andeq	r8, r2, r0, ror #30
   16d30:	ldrh	r3, [r0]
   16d34:	cmp	r3, #2
   16d38:	beq	16d4c <mount@plt+0x4c94>
   16d3c:	cmp	r3, #10
   16d40:	beq	16d5c <mount@plt+0x4ca4>
   16d44:	ldr	r0, [pc, #32]	; 16d6c <mount@plt+0x4cb4>
   16d48:	bx	lr
   16d4c:	add	r2, r0, #4
   16d50:	mov	r1, #4
   16d54:	mov	r0, r3
   16d58:	b	1e804 <mount@plt+0xc74c>
   16d5c:	add	r2, r0, #8
   16d60:	mov	r1, #16
   16d64:	mov	r0, r3
   16d68:	b	1e804 <mount@plt+0xc74c>
   16d6c:	andeq	sl, r2, r8, ror #29
   16d70:	lsr	r3, r0, #16
   16d74:	eor	r3, r3, r0, lsr #24
   16d78:	eor	r3, r3, r0
   16d7c:	eor	r3, r3, r0, lsr #8
   16d80:	ldr	ip, [pc, #464]	; 16f58 <mount@plt+0x4ea0>
   16d84:	uxtb	r3, r3
   16d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d8c:	add	r3, ip, r3, lsl #2
   16d90:	mov	r7, #0
   16d94:	ldr	r4, [r3, #16]
   16d98:	sub	sp, sp, #36	; 0x24
   16d9c:	cmp	r4, r7
   16da0:	str	r7, [r1]
   16da4:	beq	16f50 <mount@plt+0x4e98>
   16da8:	mov	r6, r2
   16dac:	mov	r8, r1
   16db0:	str	r0, [sp, #24]
   16db4:	ldr	fp, [pc, #416]	; 16f5c <mount@plt+0x4ea4>
   16db8:	ldr	sl, [pc, #416]	; 16f60 <mount@plt+0x4ea8>
   16dbc:	str	r7, [sp, #28]
   16dc0:	mov	r9, r7
   16dc4:	b	16dd4 <mount@plt+0x4d1c>
   16dc8:	ldr	r4, [r4]
   16dcc:	cmp	r4, #0
   16dd0:	beq	16f18 <mount@plt+0x4e60>
   16dd4:	ldr	r3, [r4, #4]
   16dd8:	ldr	r2, [sp, #24]
   16ddc:	cmp	r2, r3
   16de0:	bne	16dc8 <mount@plt+0x4d10>
   16de4:	ldr	r0, [r8]
   16de8:	sub	r5, r7, r9
   16dec:	b	16e58 <mount@plt+0x4da0>
   16df0:	ldr	r3, [r4, #24]
   16df4:	str	r3, [sp, #20]
   16df8:	ldr	r2, [r4, #12]
   16dfc:	mvn	r3, #0
   16e00:	str	r2, [sp, #16]
   16e04:	ldr	r1, [r4, #20]
   16e08:	mov	r2, #1
   16e0c:	str	r1, [sp, #12]
   16e10:	ldr	ip, [r4, #8]
   16e14:	mov	r1, r5
   16e18:	str	ip, [sp, #8]
   16e1c:	ldr	ip, [r4, #16]
   16e20:	stm	sp, {sl, ip}
   16e24:	bl	12088 <__snprintf_chk@plt>
   16e28:	cmp	r0, #0
   16e2c:	blt	16e38 <mount@plt+0x4d80>
   16e30:	cmp	r0, r5
   16e34:	blt	16efc <mount@plt+0x4e44>
   16e38:	add	r7, r7, #512	; 0x200
   16e3c:	mov	r1, r7
   16e40:	ldr	r0, [r8]
   16e44:	bl	11c50 <realloc@plt>
   16e48:	add	r5, r5, #512	; 0x200
   16e4c:	cmp	r0, #0
   16e50:	beq	16f34 <mount@plt+0x4e7c>
   16e54:	str	r0, [r8]
   16e58:	cmp	r6, #1
   16e5c:	add	r0, r0, r9
   16e60:	beq	16e90 <mount@plt+0x4dd8>
   16e64:	cmp	r6, #2
   16e68:	beq	16df0 <mount@plt+0x4d38>
   16e6c:	cmp	r6, #0
   16e70:	beq	16ec8 <mount@plt+0x4e10>
   16e74:	ldr	r1, [pc, #232]	; 16f64 <mount@plt+0x4eac>
   16e78:	mov	r3, r6
   16e7c:	ldr	r2, [pc, #228]	; 16f68 <mount@plt+0x4eb0>
   16e80:	ldr	r0, [r1]
   16e84:	mov	r1, #1
   16e88:	bl	11ef0 <__fprintf_chk@plt>
   16e8c:	bl	1204c <abort@plt>
   16e90:	ldr	r3, [r4, #12]
   16e94:	str	r3, [sp, #16]
   16e98:	ldr	r2, [r4, #20]
   16e9c:	mvn	r3, #0
   16ea0:	str	r2, [sp, #12]
   16ea4:	ldr	r1, [r4, #8]
   16ea8:	mov	r2, r6
   16eac:	str	r1, [sp, #8]
   16eb0:	ldr	r1, [r4, #16]
   16eb4:	str	fp, [sp]
   16eb8:	str	r1, [sp, #4]
   16ebc:	mov	r1, r5
   16ec0:	bl	12088 <__snprintf_chk@plt>
   16ec4:	b	16e28 <mount@plt+0x4d70>
   16ec8:	ldr	r3, [r4, #12]
   16ecc:	str	r3, [sp, #12]
   16ed0:	ldr	r2, [r4, #8]
   16ed4:	mvn	r3, #0
   16ed8:	str	r2, [sp, #8]
   16edc:	ldr	r1, [r4, #16]
   16ee0:	mov	r2, #1
   16ee4:	str	r1, [sp, #4]
   16ee8:	ldr	r1, [pc, #124]	; 16f6c <mount@plt+0x4eb4>
   16eec:	str	r1, [sp]
   16ef0:	mov	r1, r5
   16ef4:	bl	12088 <__snprintf_chk@plt>
   16ef8:	b	16e28 <mount@plt+0x4d70>
   16efc:	ldr	r3, [sp, #28]
   16f00:	ldr	r4, [r4]
   16f04:	add	r3, r3, #1
   16f08:	cmp	r4, #0
   16f0c:	add	r9, r9, r0
   16f10:	str	r3, [sp, #28]
   16f14:	bne	16dd4 <mount@plt+0x4d1c>
   16f18:	cmp	r9, #0
   16f1c:	ldrne	r3, [r8]
   16f20:	addne	r9, r3, r9
   16f24:	strbne	r4, [r9, #-1]
   16f28:	ldr	r0, [sp, #28]
   16f2c:	add	sp, sp, #36	; 0x24
   16f30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f34:	ldr	r3, [pc, #40]	; 16f64 <mount@plt+0x4eac>
   16f38:	mov	r2, #28
   16f3c:	mov	r1, #1
   16f40:	ldr	r3, [r3]
   16f44:	ldr	r0, [pc, #36]	; 16f70 <mount@plt+0x4eb8>
   16f48:	bl	11cb0 <fwrite@plt>
   16f4c:	bl	1204c <abort@plt>
   16f50:	str	r4, [sp, #28]
   16f54:	b	16f28 <mount@plt+0x4e70>
   16f58:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   16f5c:	andeq	r8, r2, ip, lsl #31
   16f60:			; <UNDEFINED> instruction: 0x00028fb0
   16f64:	andeq	sp, r3, r8, ror pc
   16f68:	andeq	r8, r2, r0, ror #31
   16f6c:	andeq	r8, r2, r4, ror pc
   16f70:	andeq	r7, r2, r4, asr #29
   16f74:	push	{r4, r5, r6, r7, lr}
   16f78:	sub	sp, sp, #44	; 0x2c
   16f7c:	ldr	r4, [pc, #164]	; 17028 <mount@plt+0x4f70>
   16f80:	ldr	r2, [r0, #8]
   16f84:	mov	r7, r1
   16f88:	ldr	r3, [r4]
   16f8c:	cmn	r2, #1
   16f90:	str	r3, [sp, #36]	; 0x24
   16f94:	moveq	r3, #42	; 0x2a
   16f98:	strheq	r3, [sp, #12]
   16f9c:	addeq	r5, sp, #12
   16fa0:	beq	16fc4 <mount@plt+0x4f0c>
   16fa4:	ldr	r1, [pc, #128]	; 1702c <mount@plt+0x4f74>
   16fa8:	add	r5, sp, #12
   16fac:	mov	r3, #11
   16fb0:	stm	sp, {r1, r2}
   16fb4:	mov	r0, r5
   16fb8:	mov	r1, r3
   16fbc:	mov	r2, #1
   16fc0:	bl	12088 <__snprintf_chk@plt>
   16fc4:	cmn	r7, #1
   16fc8:	moveq	r3, #42	; 0x2a
   16fcc:	strheq	r3, [sp, #24]
   16fd0:	addeq	r6, sp, #24
   16fd4:	beq	16ff8 <mount@plt+0x4f40>
   16fd8:	ldr	r2, [pc, #76]	; 1702c <mount@plt+0x4f74>
   16fdc:	add	r6, sp, #24
   16fe0:	mov	r3, #11
   16fe4:	stm	sp, {r2, r7}
   16fe8:	mov	r0, r6
   16fec:	mov	r1, r3
   16ff0:	mov	r2, #1
   16ff4:	bl	12088 <__snprintf_chk@plt>
   16ff8:	mov	r2, r6
   16ffc:	mov	r3, #0
   17000:	mov	r0, r5
   17004:	ldr	r1, [pc, #36]	; 17030 <mount@plt+0x4f78>
   17008:	bl	16388 <mount@plt+0x42d0>
   1700c:	ldr	r2, [sp, #36]	; 0x24
   17010:	ldr	r3, [r4]
   17014:	cmp	r2, r3
   17018:	bne	17024 <mount@plt+0x4f6c>
   1701c:	add	sp, sp, #44	; 0x2c
   17020:	pop	{r4, r5, r6, r7, pc}
   17024:	bl	11c2c <__stack_chk_fail@plt>
   17028:	ldrdeq	fp, [r3], -r8
   1702c:	andeq	r8, r2, r4, lsl #6
   17030:			; <UNDEFINED> instruction: 0x00027db8
   17034:	ldr	r3, [pc, #160]	; 170dc <mount@plt+0x5024>
   17038:	push	{r4, lr}
   1703c:	sub	sp, sp, #8
   17040:	ldr	r4, [pc, #152]	; 170e0 <mount@plt+0x5028>
   17044:	ldr	r1, [r3, #1260]	; 0x4ec
   17048:	ldr	r2, [r4]
   1704c:	cmp	r1, #0
   17050:	str	r2, [sp, #4]
   17054:	ldr	r2, [r3, #1264]	; 0x4f0
   17058:	bne	170c4 <mount@plt+0x500c>
   1705c:	cmp	r2, #0
   17060:	beq	170b0 <mount@plt+0x4ff8>
   17064:	ldr	r0, [r0]
   17068:	mov	r2, #1
   1706c:	cmp	r0, #0
   17070:	beq	17098 <mount@plt+0x4fe0>
   17074:	mov	r1, sp
   17078:	bl	16d70 <mount@plt+0x4cb8>
   1707c:	cmp	r0, #0
   17080:	ble	17098 <mount@plt+0x4fe0>
   17084:	ldr	r0, [pc, #88]	; 170e4 <mount@plt+0x502c>
   17088:	ldr	r1, [sp]
   1708c:	bl	14b8c <mount@plt+0x2ad4>
   17090:	ldr	r0, [sp]
   17094:	bl	11b78 <free@plt>
   17098:	ldr	r2, [sp, #4]
   1709c:	ldr	r3, [r4]
   170a0:	cmp	r2, r3
   170a4:	bne	170d8 <mount@plt+0x5020>
   170a8:	add	sp, sp, #8
   170ac:	pop	{r4, pc}
   170b0:	ldr	r3, [r3, #1268]	; 0x4f4
   170b4:	cmp	r3, #0
   170b8:	beq	17098 <mount@plt+0x4fe0>
   170bc:	ldr	r0, [r0]
   170c0:	b	1706c <mount@plt+0x4fb4>
   170c4:	tst	r1, r2
   170c8:	ldr	r0, [r0]
   170cc:	movne	r2, #2
   170d0:	moveq	r2, #1
   170d4:	b	1706c <mount@plt+0x4fb4>
   170d8:	bl	11c2c <__stack_chk_fail@plt>
   170dc:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   170e0:	ldrdeq	fp, [r3], -r8
   170e4:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   170e8:	push	{r4, r5, r6, lr}
   170ec:	mov	r4, r0
   170f0:	mov	r5, r1
   170f4:	bl	15fd8 <mount@plt+0x3f20>
   170f8:	mov	r3, r5
   170fc:	ldr	r2, [r4, #572]	; 0x23c
   17100:	ldr	r1, [r4, #540]	; 0x21c
   17104:	add	r0, r4, #12
   17108:	bl	163e4 <mount@plt+0x432c>
   1710c:	add	r0, r4, #276	; 0x114
   17110:	mov	r3, r5
   17114:	ldr	r1, [r4, #544]	; 0x220
   17118:	mov	r2, #0
   1711c:	bl	163e4 <mount@plt+0x432c>
   17120:	add	r0, r4, #560	; 0x230
   17124:	pop	{r4, r5, r6, lr}
   17128:	b	17034 <mount@plt+0x4f7c>
   1712c:	push	{r4, r5, r6, r7, lr}
   17130:	sub	sp, sp, #908	; 0x38c
   17134:	ldr	r4, [pc, #348]	; 17298 <mount@plt+0x51e0>
   17138:	mov	r6, r0
   1713c:	mov	r5, r1
   17140:	ldr	r3, [r4]
   17144:	mov	r1, #0
   17148:	mov	r7, r2
   1714c:	add	r0, sp, #40	; 0x28
   17150:	mov	r2, #600	; 0x258
   17154:	str	r3, [sp, #900]	; 0x384
   17158:	bl	11e78 <memset@plt>
   1715c:	mov	r0, r6
   17160:	add	r3, sp, #36	; 0x24
   17164:	add	r2, sp, #32
   17168:	add	r1, sp, #28
   1716c:	bl	139e0 <mount@plt+0x1928>
   17170:	subs	r6, r0, #0
   17174:	bne	1728c <mount@plt+0x51d4>
   17178:	ldr	r3, [sp, #36]	; 0x24
   1717c:	ldr	r2, [r5, #4]
   17180:	ldrb	r3, [r3, #1]
   17184:	cmp	r3, #64	; 0x40
   17188:	subhi	r3, r3, #55	; 0x37
   1718c:	subls	r3, r3, #48	; 0x30
   17190:	asr	r3, r2, r3
   17194:	tst	r3, #1
   17198:	bne	171b8 <mount@plt+0x5100>
   1719c:	ldr	r2, [sp, #900]	; 0x384
   171a0:	ldr	r3, [r4]
   171a4:	mov	r0, r6
   171a8:	cmp	r2, r3
   171ac:	bne	17294 <mount@plt+0x51dc>
   171b0:	add	sp, sp, #908	; 0x38c
   171b4:	pop	{r4, r5, r6, r7, pc}
   171b8:	mov	r2, r7
   171bc:	add	r3, sp, #40	; 0x28
   171c0:	ldrd	r0, [sp, #28]
   171c4:	bl	15e48 <mount@plt+0x3d90>
   171c8:	ldr	r0, [r5, #16]
   171cc:	cmp	r0, #0
   171d0:	beq	171e4 <mount@plt+0x512c>
   171d4:	add	r1, sp, #40	; 0x28
   171d8:	bl	16a48 <mount@plt+0x4990>
   171dc:	cmp	r0, #0
   171e0:	beq	1719c <mount@plt+0x50e4>
   171e4:	add	ip, sp, #616	; 0x268
   171e8:	add	r0, sp, #608	; 0x260
   171ec:	add	r1, sp, #600	; 0x258
   171f0:	add	r2, sp, #604	; 0x25c
   171f4:	add	r3, sp, #592	; 0x250
   171f8:	add	r7, sp, #644	; 0x284
   171fc:	str	ip, [sp, #16]
   17200:	str	r0, [sp, #12]
   17204:	str	r1, [sp, #8]
   17208:	str	r2, [sp, #4]
   1720c:	str	r3, [sp]
   17210:	mov	r5, #0
   17214:	add	r3, sp, #596	; 0x254
   17218:	add	r2, sp, #588	; 0x24c
   1721c:	ldr	r1, [pc, #120]	; 1729c <mount@plt+0x51e4>
   17220:	str	r7, [sp, #20]
   17224:	ldr	r0, [sp, #36]	; 0x24
   17228:	strb	r5, [sp, #644]	; 0x284
   1722c:	bl	11fa4 <sscanf@plt>
   17230:	ldr	r3, [pc, #104]	; 172a0 <mount@plt+0x51e8>
   17234:	ldr	r2, [pc, #104]	; 172a4 <mount@plt+0x51ec>
   17238:	mov	r1, #0
   1723c:	ldr	r3, [r3, #1252]	; 0x4e4
   17240:	cmp	r0, #8
   17244:	strble	r5, [sp, #644]	; 0x284
   17248:	cmp	r3, r2
   1724c:	moveq	r3, #17
   17250:	movne	r3, r1
   17254:	add	r0, sp, #40	; 0x28
   17258:	str	r3, [sp, #44]	; 0x2c
   1725c:	bl	170e8 <mount@plt+0x5030>
   17260:	ldr	r3, [pc, #64]	; 172a8 <mount@plt+0x51f0>
   17264:	ldr	r3, [r3]
   17268:	cmp	r3, #0
   1726c:	beq	1719c <mount@plt+0x50e4>
   17270:	ldrb	r3, [sp, #644]	; 0x284
   17274:	cmp	r3, #0
   17278:	beq	1719c <mount@plt+0x50e4>
   1727c:	mov	r1, r7
   17280:	ldr	r0, [pc, #36]	; 172ac <mount@plt+0x51f4>
   17284:	bl	14b8c <mount@plt+0x2ad4>
   17288:	b	1719c <mount@plt+0x50e4>
   1728c:	mvn	r6, #0
   17290:	b	1719c <mount@plt+0x50e4>
   17294:	bl	11c2c <__stack_chk_fail@plt>
   17298:	ldrdeq	fp, [r3], -r8
   1729c:	andeq	r9, r2, r4
   172a0:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   172a4:	ldrdeq	r9, [r2], -ip
   172a8:	andeq	r1, r4, r4, ror pc
   172ac:	andeq	r9, r2, r4, lsr r0
   172b0:	push	{r4, r5, r6, lr}
   172b4:	mov	r4, #0
   172b8:	ldr	r6, [pc, #616]	; 17528 <mount@plt+0x5470>
   172bc:	sub	sp, sp, #760	; 0x2f8
   172c0:	mov	r5, r0
   172c4:	ldr	r3, [r6]
   172c8:	mov	r1, r4
   172cc:	mov	r2, #52	; 0x34
   172d0:	add	r0, sp, #100	; 0x64
   172d4:	str	r3, [sp, #756]	; 0x2f4
   172d8:	str	r4, [sp, #16]
   172dc:	str	r4, [sp, #12]
   172e0:	str	r4, [sp, #20]
   172e4:	str	r4, [sp, #24]
   172e8:	str	r4, [sp, #28]
   172ec:	bl	11e78 <memset@plt>
   172f0:	mov	r1, r4
   172f4:	mov	r2, #44	; 0x2c
   172f8:	add	r0, sp, #56	; 0x38
   172fc:	str	r4, [sp, #32]
   17300:	str	r4, [sp, #36]	; 0x24
   17304:	str	r4, [sp, #40]	; 0x28
   17308:	str	r4, [sp, #44]	; 0x2c
   1730c:	str	r4, [sp, #48]	; 0x30
   17310:	str	r4, [sp, #52]	; 0x34
   17314:	bl	11e78 <memset@plt>
   17318:	mov	r1, r4
   1731c:	mov	r2, #600	; 0x258
   17320:	add	r0, sp, #152	; 0x98
   17324:	bl	11e78 <memset@plt>
   17328:	mov	r2, r5
   1732c:	add	r0, sp, #56	; 0x38
   17330:	ldr	r3, [r2], #16
   17334:	mov	r1, #10
   17338:	sub	r3, r3, #16
   1733c:	bl	266b0 <mount@plt+0x145f8>
   17340:	ldr	r2, [sp, #64]	; 0x40
   17344:	cmp	r2, r4
   17348:	beq	174c4 <mount@plt+0x540c>
   1734c:	ldrh	r3, [r2], #4
   17350:	mov	r1, #12
   17354:	add	r0, sp, #100	; 0x64
   17358:	sub	r3, r3, #4
   1735c:	bl	266b0 <mount@plt+0x145f8>
   17360:	ldr	r2, [sp, #120]	; 0x78
   17364:	mov	r1, #4
   17368:	add	r0, sp, #12
   1736c:	ldrh	r3, [r2], #4
   17370:	sub	r3, r3, #4
   17374:	bl	266b0 <mount@plt+0x145f8>
   17378:	ldr	r2, [sp, #124]	; 0x7c
   1737c:	ldr	r1, [sp, #136]	; 0x88
   17380:	ldr	r3, [sp, #132]	; 0x84
   17384:	ldr	r0, [r2, #4]
   17388:	ldr	r2, [sp, #128]	; 0x80
   1738c:	str	r0, [sp, #156]	; 0x9c
   17390:	ldr	r0, [r1, #4]
   17394:	ldr	r1, [sp, #12]
   17398:	str	r0, [sp, #700]	; 0x2bc
   1739c:	ldr	r0, [r3, #4]
   173a0:	ldr	r3, [sp, #16]
   173a4:	str	r0, [sp, #716]	; 0x2cc
   173a8:	ldr	r0, [r2, #4]
   173ac:	ldr	r2, [sp, #140]	; 0x8c
   173b0:	str	r0, [sp, #712]	; 0x2c8
   173b4:	ldr	r0, [r1, #4]
   173b8:	mov	r1, #30
   173bc:	str	r0, [sp, #704]	; 0x2c0
   173c0:	ldr	r3, [r3, #4]
   173c4:	strh	r1, [sp, #170]	; 0xaa
   173c8:	str	r3, [sp, #708]	; 0x2c4
   173cc:	ldr	r0, [r2, #4]!
   173d0:	mov	r3, sp
   173d4:	ldr	r1, [r2, #4]
   173d8:	stmia	r3!, {r0, r1}
   173dc:	ldrd	r2, [sp]
   173e0:	add	r1, sp, #728	; 0x2d8
   173e4:	add	r0, sp, #152	; 0x98
   173e8:	strd	r2, [r1]
   173ec:	bl	15fd8 <mount@plt+0x3f20>
   173f0:	ldrd	r0, [sp, #104]	; 0x68
   173f4:	bl	1672c <mount@plt+0x4674>
   173f8:	ldr	r3, [sp, #112]	; 0x70
   173fc:	cmp	r3, r4
   17400:	beq	174e0 <mount@plt+0x5428>
   17404:	mov	r2, r3
   17408:	mov	r1, #5
   1740c:	ldrh	r3, [r2], #4
   17410:	add	r0, sp, #32
   17414:	sub	r3, r3, #4
   17418:	bl	266b0 <mount@plt+0x145f8>
   1741c:	ldrd	r0, [sp, #40]	; 0x28
   17420:	bl	1672c <mount@plt+0x4674>
   17424:	ldr	r3, [pc, #256]	; 1752c <mount@plt+0x5474>
   17428:	ldr	r3, [r3]
   1742c:	cmp	r3, #0
   17430:	bne	17500 <mount@plt+0x5448>
   17434:	add	r0, sp, #712	; 0x2c8
   17438:	bl	17034 <mount@plt+0x4f7c>
   1743c:	ldr	r3, [pc, #236]	; 17530 <mount@plt+0x5478>
   17440:	ldr	r3, [r3, #1272]	; 0x4f8
   17444:	cmp	r3, #0
   17448:	beq	174c4 <mount@plt+0x540c>
   1744c:	ldr	r2, [sp, #156]	; 0x9c
   17450:	ldr	r3, [pc, #220]	; 17534 <mount@plt+0x547c>
   17454:	ldr	r0, [pc, #220]	; 17538 <mount@plt+0x5480>
   17458:	add	r3, r3, r2, lsl #2
   1745c:	ldr	r1, [r3, #300]	; 0x12c
   17460:	bl	14b8c <mount@plt+0x2ad4>
   17464:	ldr	r3, [sp, #20]
   17468:	cmp	r3, #0
   1746c:	ldrne	r1, [pc, #200]	; 1753c <mount@plt+0x5484>
   17470:	beq	1750c <mount@plt+0x5454>
   17474:	ldr	r0, [pc, #196]	; 17540 <mount@plt+0x5488>
   17478:	bl	14b8c <mount@plt+0x2ad4>
   1747c:	ldr	r3, [sp, #28]
   17480:	ldr	r0, [pc, #188]	; 17544 <mount@plt+0x548c>
   17484:	ldr	r1, [r3, #4]
   17488:	bl	14b8c <mount@plt+0x2ad4>
   1748c:	ldr	r3, [sp, #116]	; 0x74
   17490:	cmp	r3, #0
   17494:	beq	174a0 <mount@plt+0x53e8>
   17498:	ldr	r0, [pc, #168]	; 17548 <mount@plt+0x5490>
   1749c:	bl	14b8c <mount@plt+0x2ad4>
   174a0:	ldr	r3, [sp, #36]	; 0x24
   174a4:	cmp	r3, #0
   174a8:	beq	174c4 <mount@plt+0x540c>
   174ac:	ldr	r2, [sp, #52]	; 0x34
   174b0:	ldr	r3, [sp, #48]	; 0x30
   174b4:	ldr	r0, [pc, #144]	; 1754c <mount@plt+0x5494>
   174b8:	ldr	r2, [r2, #4]
   174bc:	ldr	r1, [r3, #4]
   174c0:	bl	14b8c <mount@plt+0x2ad4>
   174c4:	ldr	r2, [sp, #756]	; 0x2f4
   174c8:	ldr	r3, [r6]
   174cc:	mov	r0, #0
   174d0:	cmp	r2, r3
   174d4:	bne	17524 <mount@plt+0x546c>
   174d8:	add	sp, sp, #760	; 0x2f8
   174dc:	pop	{r4, r5, r6, pc}
   174e0:	ldr	r2, [pc, #104]	; 17550 <mount@plt+0x5498>
   174e4:	ldr	r1, [pc, #104]	; 17554 <mount@plt+0x549c>
   174e8:	mov	r0, r2
   174ec:	bl	16388 <mount@plt+0x42d0>
   174f0:	ldr	r3, [pc, #52]	; 1752c <mount@plt+0x5474>
   174f4:	ldr	r3, [r3]
   174f8:	cmp	r3, #0
   174fc:	beq	17434 <mount@plt+0x537c>
   17500:	add	r0, sp, #152	; 0x98
   17504:	bl	14cf4 <mount@plt+0x2c3c>
   17508:	b	17434 <mount@plt+0x537c>
   1750c:	ldr	r2, [sp, #24]
   17510:	ldr	r3, [pc, #64]	; 17558 <mount@plt+0x54a0>
   17514:	cmp	r2, #0
   17518:	ldr	r1, [pc, #60]	; 1755c <mount@plt+0x54a4>
   1751c:	moveq	r1, r3
   17520:	b	17474 <mount@plt+0x53bc>
   17524:	bl	11c2c <__stack_chk_fail@plt>
   17528:	ldrdeq	fp, [r3], -r8
   1752c:	andeq	r1, r4, r4, ror pc
   17530:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   17534:	andeq	r7, r2, r0, ror r2
   17538:	andeq	r9, r2, r4, asr r0
   1753c:	andeq	sl, r2, r0, ror #28
   17540:	andeq	r9, r2, r0, rrx
   17544:	andeq	r9, r2, ip, rrx
   17548:	andeq	r9, r2, r8, ror r0
   1754c:	andeq	r9, r2, r0, lsl #1
   17550:	andeq	sl, r2, r8, ror #29
   17554:	andeq	r9, r2, r0, asr r0
   17558:	andeq	r9, r2, r8, asr #32
   1755c:	andeq	r9, r2, r0, asr #32
   17560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17564:	mov	r4, r0
   17568:	ldr	r7, [pc, #296]	; 17698 <mount@plt+0x55e0>
   1756c:	sub	sp, sp, #612	; 0x264
   17570:	mov	r2, #600	; 0x258
   17574:	ldr	r3, [r7]
   17578:	mov	sl, r1
   1757c:	mov	r0, sp
   17580:	mov	r1, #0
   17584:	str	r3, [sp, #604]	; 0x25c
   17588:	bl	11e78 <memset@plt>
   1758c:	ldrb	r1, [r4, #18]
   17590:	ldrb	r5, [r4, #17]
   17594:	ldr	r3, [r4, #36]	; 0x24
   17598:	ldr	lr, [r4, #24]
   1759c:	ldr	ip, [r4, #32]
   175a0:	ldr	fp, [r4, #20]
   175a4:	mov	r2, #264	; 0x108
   175a8:	str	r1, [sp, #548]	; 0x224
   175ac:	add	r6, sp, #276	; 0x114
   175b0:	mov	r1, #0
   175b4:	add	r0, sp, #12
   175b8:	str	r3, [sp, #560]	; 0x230
   175bc:	str	lr, [sp, #540]	; 0x21c
   175c0:	str	ip, [sp, #544]	; 0x220
   175c4:	mov	r9, #4
   175c8:	mov	r8, #40	; 0x28
   175cc:	str	r5, [sp, #4]
   175d0:	bl	11e78 <memset@plt>
   175d4:	mov	r0, r6
   175d8:	mov	r2, #264	; 0x108
   175dc:	mov	r1, #0
   175e0:	ldr	r4, [r4, #28]
   175e4:	str	fp, [sp, #20]
   175e8:	strh	r9, [sp, #14]
   175ec:	strh	r8, [sp, #18]
   175f0:	bl	11e78 <memset@plt>
   175f4:	add	r3, sp, #280	; 0x118
   175f8:	cmp	r5, #1
   175fc:	str	r4, [sp, #284]	; 0x11c
   17600:	strh	r9, [r6, #2]
   17604:	strh	r8, [r3, #2]
   17608:	beq	17684 <mount@plt+0x55cc>
   1760c:	cmp	r5, #2
   17610:	beq	17674 <mount@plt+0x55bc>
   17614:	ldr	r0, [sl, #16]
   17618:	cmp	r0, #0
   1761c:	beq	17630 <mount@plt+0x5578>
   17620:	mov	r1, sp
   17624:	bl	16a48 <mount@plt+0x4990>
   17628:	cmp	r0, #0
   1762c:	beq	17658 <mount@plt+0x55a0>
   17630:	mov	r0, sp
   17634:	bl	15fd8 <mount@plt+0x3f20>
   17638:	add	r0, sp, #12
   1763c:	ldr	r1, [sp, #540]	; 0x21c
   17640:	bl	16f74 <mount@plt+0x4ebc>
   17644:	mov	r0, r6
   17648:	ldr	r1, [sp, #544]	; 0x220
   1764c:	bl	16f74 <mount@plt+0x4ebc>
   17650:	add	r0, sp, #560	; 0x230
   17654:	bl	17034 <mount@plt+0x4f7c>
   17658:	ldr	r2, [sp, #604]	; 0x25c
   1765c:	ldr	r3, [r7]
   17660:	mov	r0, #0
   17664:	cmp	r2, r3
   17668:	bne	17694 <mount@plt+0x55dc>
   1766c:	add	sp, sp, #612	; 0x264
   17670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17674:	ldr	r3, [sl]
   17678:	tst	r3, #4096	; 0x1000
   1767c:	bne	17614 <mount@plt+0x555c>
   17680:	b	17658 <mount@plt+0x55a0>
   17684:	ldr	r3, [sl]
   17688:	tst	r3, #2048	; 0x800
   1768c:	bne	17614 <mount@plt+0x555c>
   17690:	b	17658 <mount@plt+0x55a0>
   17694:	bl	11c2c <__stack_chk_fail@plt>
   17698:	ldrdeq	fp, [r3], -r8
   1769c:	ldr	r2, [r0, #600]	; 0x258
   176a0:	ldr	r3, [pc, #44]	; 176d4 <mount@plt+0x561c>
   176a4:	push	{r4, r5, r6, lr}
   176a8:	add	r3, r3, r2, lsl #2
   176ac:	mov	r4, r0
   176b0:	ldr	r0, [r0, #604]	; 0x25c
   176b4:	ldr	r5, [r3, #324]	; 0x144
   176b8:	bl	149f4 <mount@plt+0x293c>
   176bc:	mov	r1, r5
   176c0:	ldr	r3, [r4, #788]	; 0x314
   176c4:	pop	{r4, r5, r6, lr}
   176c8:	mov	r2, r0
   176cc:	ldr	r0, [pc, #4]	; 176d8 <mount@plt+0x5620>
   176d0:	b	14b8c <mount@plt+0x2ad4>
   176d4:	andeq	r7, r2, r0, ror r2
   176d8:	muleq	r2, r0, r0
   176dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   176e0:	vpush	{d8-d9}
   176e4:	ldr	r5, [pc, #748]	; 179d8 <mount@plt+0x5920>
   176e8:	ldr	r7, [pc, #748]	; 179dc <mount@plt+0x5924>
   176ec:	mov	r3, #0
   176f0:	sub	sp, sp, #1264	; 0x4f0
   176f4:	sub	sp, sp, #4
   176f8:	ldr	ip, [r5]
   176fc:	mov	r9, r0
   17700:	mov	r6, r1
   17704:	mov	r8, r2
   17708:	add	r0, sp, #88	; 0x58
   1770c:	mov	r1, r3
   17710:	mov	r2, #912	; 0x390
   17714:	str	ip, [sp, #1260]	; 0x4ec
   17718:	str	r3, [sp, #68]	; 0x44
   1771c:	str	r3, [sp, #72]	; 0x48
   17720:	bl	11e78 <memset@plt>
   17724:	ldr	r4, [r7]
   17728:	cmp	r4, #0
   1772c:	beq	17960 <mount@plt+0x58a8>
   17730:	add	r2, sp, #80	; 0x50
   17734:	mov	r0, r9
   17738:	sub	r1, r2, #4
   1773c:	add	r3, sp, #84	; 0x54
   17740:	bl	139e0 <mount@plt+0x1928>
   17744:	subs	r7, r0, #0
   17748:	bne	179c4 <mount@plt+0x590c>
   1774c:	ldr	r3, [sp, #84]	; 0x54
   17750:	ldr	r2, [r6, #4]
   17754:	ldrb	r3, [r3, #1]
   17758:	cmp	r3, #64	; 0x40
   1775c:	subhi	r3, r3, #55	; 0x37
   17760:	subls	r3, r3, #48	; 0x30
   17764:	asr	r3, r2, r3
   17768:	tst	r3, #1
   1776c:	bne	17794 <mount@plt+0x56dc>
   17770:	ldr	r2, [sp, #1260]	; 0x4ec
   17774:	ldr	r3, [r5]
   17778:	mov	r0, r7
   1777c:	cmp	r2, r3
   17780:	bne	179cc <mount@plt+0x5914>
   17784:	add	sp, sp, #1264	; 0x4f0
   17788:	add	sp, sp, #4
   1778c:	vpop	{d8-d9}
   17790:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17794:	mov	r2, r8
   17798:	add	r3, sp, #88	; 0x58
   1779c:	ldrd	r0, [sp, #76]	; 0x4c
   177a0:	bl	15e48 <mount@plt+0x3d90>
   177a4:	ldr	r0, [r6, #16]
   177a8:	cmp	r0, #0
   177ac:	beq	177c0 <mount@plt+0x5708>
   177b0:	add	r1, sp, #88	; 0x58
   177b4:	bl	16a48 <mount@plt+0x4990>
   177b8:	cmp	r0, #0
   177bc:	beq	17770 <mount@plt+0x56b8>
   177c0:	add	r2, sp, #756	; 0x2f4
   177c4:	add	r3, sp, #800	; 0x320
   177c8:	add	r1, sp, #80	; 0x50
   177cc:	sub	r0, r1, #12
   177d0:	add	lr, sp, #752	; 0x2f0
   177d4:	add	ip, sp, #72	; 0x48
   177d8:	add	r1, sp, #664	; 0x298
   177dc:	str	r2, [sp, #52]	; 0x34
   177e0:	str	r3, [sp, #48]	; 0x30
   177e4:	add	r2, sp, #656	; 0x290
   177e8:	add	r3, sp, #648	; 0x288
   177ec:	str	lr, [sp, #44]	; 0x2c
   177f0:	str	ip, [sp, #40]	; 0x28
   177f4:	add	lr, sp, #696	; 0x2b8
   177f8:	add	ip, sp, #652	; 0x28c
   177fc:	str	r0, [sp, #36]	; 0x24
   17800:	str	r1, [sp, #32]
   17804:	add	r0, sp, #876	; 0x36c
   17808:	add	r1, sp, #692	; 0x2b4
   1780c:	str	r2, [sp, #28]
   17810:	str	r3, [sp, #24]
   17814:	add	r2, sp, #688	; 0x2b0
   17818:	add	r3, sp, #640	; 0x280
   1781c:	add	r6, sp, #1004	; 0x3ec
   17820:	str	r0, [sp, #12]
   17824:	str	r1, [sp, #8]
   17828:	str	r2, [sp, #4]
   1782c:	str	r3, [sp]
   17830:	str	r6, [sp, #56]	; 0x38
   17834:	str	lr, [sp, #20]
   17838:	str	ip, [sp, #16]
   1783c:	mov	r8, #0
   17840:	add	r3, sp, #644	; 0x284
   17844:	add	r2, sp, #636	; 0x27c
   17848:	ldr	r1, [pc, #400]	; 179e0 <mount@plt+0x5928>
   1784c:	ldr	r0, [sp, #84]	; 0x54
   17850:	strb	r8, [sp, #1004]	; 0x3ec
   17854:	bl	11fa4 <sscanf@plt>
   17858:	cmp	r0, #16
   1785c:	ble	17970 <mount@plt+0x58b8>
   17860:	vldr	s15, [sp, #72]	; 0x48
   17864:	ldr	r9, [sp, #752]	; 0x2f0
   17868:	ldr	r8, [sp, #756]	; 0x2f4
   1786c:	vcvt.f64.s32	d9, s15
   17870:	vldr	s15, [sp, #68]	; 0x44
   17874:	add	r9, r9, r9, lsr #31
   17878:	asr	r9, r9, #1
   1787c:	vcvt.f64.s32	d8, s15
   17880:	ldr	r3, [sp, #688]	; 0x2b0
   17884:	ldr	r0, [sp, #692]	; 0x2b4
   17888:	cmp	r3, #1
   1788c:	mov	r1, r4
   17890:	ldrne	r3, [sp, #696]	; 0x2b8
   17894:	ldreq	r3, [sp, #876]	; 0x36c
   17898:	str	r3, [sp, #876]	; 0x36c
   1789c:	rsb	r3, r0, r0, lsl #5
   178a0:	add	r0, r0, r3, lsl #2
   178a4:	add	r0, r4, r0, lsl #3
   178a8:	sub	r0, r0, #1
   178ac:	bl	2680c <mount@plt+0x14754>
   178b0:	vmov	s15, r4
   178b4:	add	r4, r4, r4, lsl #1
   178b8:	cmn	r8, #1
   178bc:	moveq	r8, #0
   178c0:	vcvt.f64.s32	d6, s15
   178c4:	vmov	s15, r4
   178c8:	ldr	r4, [pc, #276]	; 179e4 <mount@plt+0x592c>
   178cc:	mov	r3, #6
   178d0:	mov	r1, #0
   178d4:	vcvt.f64.s32	d7, s15
   178d8:	str	r3, [sp, #92]	; 0x5c
   178dc:	str	r8, [sp, #756]	; 0x2f4
   178e0:	vdiv.f64	d5, d9, d6
   178e4:	str	r9, [sp, #752]	; 0x2f0
   178e8:	vcmp.f64	d7, d8
   178ec:	str	r0, [sp, #692]	; 0x2b4
   178f0:	add	r0, sp, #88	; 0x58
   178f4:	vmrs	APSR_nzcv, fpscr
   178f8:	vdivne.f64	d7, d8, d6
   178fc:	vldreq	d7, [pc, #204]	; 179d0 <mount@plt+0x5918>
   17900:	vstr	d5, [sp, #728]	; 0x2d8
   17904:	vstr	d7, [sp, #720]	; 0x2d0
   17908:	bl	170e8 <mount@plt+0x5030>
   1790c:	ldr	r3, [r4, #1276]	; 0x4fc
   17910:	cmp	r3, #0
   17914:	beq	17938 <mount@plt+0x5880>
   17918:	ldr	r3, [sp, #688]	; 0x2b0
   1791c:	cmp	r3, #0
   17920:	beq	17938 <mount@plt+0x5880>
   17924:	cmp	r3, #4
   17928:	movhi	r3, #5
   1792c:	add	r0, sp, #88	; 0x58
   17930:	strhi	r3, [sp, #688]	; 0x2b0
   17934:	bl	1769c <mount@plt+0x55e4>
   17938:	ldr	r3, [pc, #168]	; 179e8 <mount@plt+0x5930>
   1793c:	ldr	r3, [r3]
   17940:	cmp	r3, #0
   17944:	bne	179a0 <mount@plt+0x58e8>
   17948:	ldr	r3, [r4, #1280]	; 0x500
   1794c:	cmp	r3, #0
   17950:	beq	17770 <mount@plt+0x56b8>
   17954:	add	r0, sp, #88	; 0x58
   17958:	bl	153c4 <mount@plt+0x330c>
   1795c:	b	17770 <mount@plt+0x56b8>
   17960:	bl	1e0ec <mount@plt+0xc034>
   17964:	mov	r4, r0
   17968:	str	r0, [r7]
   1796c:	b	17730 <mount@plt+0x5678>
   17970:	cmp	r0, #11
   17974:	strb	r8, [sp, #1004]	; 0x3ec
   17978:	bgt	17860 <mount@plt+0x57a8>
   1797c:	vldr	d8, [pc, #76]	; 179d0 <mount@plt+0x5918>
   17980:	mov	r3, #2
   17984:	mov	r9, r8
   17988:	str	r8, [sp, #68]	; 0x44
   1798c:	str	r8, [sp, #72]	; 0x48
   17990:	vmov.f64	d9, d8
   17994:	mvn	r8, #0
   17998:	str	r3, [sp, #800]	; 0x320
   1799c:	b	17880 <mount@plt+0x57c8>
   179a0:	add	r0, sp, #88	; 0x58
   179a4:	bl	14cf4 <mount@plt+0x2c3c>
   179a8:	ldrb	r3, [sp, #1004]	; 0x3ec
   179ac:	cmp	r3, #0
   179b0:	beq	17948 <mount@plt+0x5890>
   179b4:	mov	r1, r6
   179b8:	ldr	r0, [pc, #44]	; 179ec <mount@plt+0x5934>
   179bc:	bl	14b8c <mount@plt+0x2ad4>
   179c0:	b	17948 <mount@plt+0x5890>
   179c4:	mvn	r7, #0
   179c8:	b	17770 <mount@plt+0x56b8>
   179cc:	bl	11c2c <__stack_chk_fail@plt>
	...
   179d8:	ldrdeq	fp, [r3], -r8
   179dc:	muleq	r4, r8, pc	; <UNPREDICTABLE>
   179e0:	andeq	r9, r2, r4, lsr #1
   179e4:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   179e8:	andeq	r1, r4, r4, ror pc
   179ec:	andeq	r9, r2, r4, lsr r0
   179f0:	push	{r4, r5, r6, r7, r8, fp, lr}
   179f4:	mov	r8, r0
   179f8:	ldr	r7, [pc, #1176]	; 17e98 <mount@plt+0x5de0>
   179fc:	add	fp, sp, #24
   17a00:	sub	sp, sp, #12
   17a04:	ldr	r3, [r7]
   17a08:	mov	r1, #7
   17a0c:	str	r3, [fp, #-32]	; 0xffffffe0
   17a10:	bl	14d58 <mount@plt+0x2ca0>
   17a14:	ldr	r5, [r8, #48]	; 0x30
   17a18:	cmp	r5, #0
   17a1c:	beq	17a7c <mount@plt+0x59c4>
   17a20:	mov	r0, r5
   17a24:	add	r4, r5, #132	; 0x84
   17a28:	ldrh	r6, [r0], #4
   17a2c:	bl	16d30 <mount@plt+0x4c78>
   17a30:	mov	r1, r0
   17a34:	ldr	r0, [pc, #1120]	; 17e9c <mount@plt+0x5de4>
   17a38:	bl	14b8c <mount@plt+0x2ad4>
   17a3c:	sub	r3, r6, #132	; 0x84
   17a40:	cmp	r3, #0
   17a44:	ble	17a7c <mount@plt+0x59c4>
   17a48:	sub	r3, r6, #133	; 0x85
   17a4c:	bic	r3, r3, #127	; 0x7f
   17a50:	add	r3, r3, #260	; 0x104
   17a54:	ldr	r6, [pc, #1092]	; 17ea0 <mount@plt+0x5de8>
   17a58:	add	r5, r5, r3
   17a5c:	mov	r0, r4
   17a60:	bl	16d30 <mount@plt+0x4c78>
   17a64:	add	r4, r4, #128	; 0x80
   17a68:	mov	r1, r0
   17a6c:	mov	r0, r6
   17a70:	bl	14b8c <mount@plt+0x2ad4>
   17a74:	cmp	r4, r5
   17a78:	bne	17a5c <mount@plt+0x59a4>
   17a7c:	ldr	r5, [r8, #52]	; 0x34
   17a80:	cmp	r5, #0
   17a84:	beq	17ae4 <mount@plt+0x5a2c>
   17a88:	mov	r0, r5
   17a8c:	add	r4, r5, #132	; 0x84
   17a90:	ldrh	r6, [r0], #4
   17a94:	bl	16d30 <mount@plt+0x4c78>
   17a98:	mov	r1, r0
   17a9c:	ldr	r0, [pc, #1024]	; 17ea4 <mount@plt+0x5dec>
   17aa0:	bl	14b8c <mount@plt+0x2ad4>
   17aa4:	sub	r3, r6, #132	; 0x84
   17aa8:	cmp	r3, #0
   17aac:	ble	17ae4 <mount@plt+0x5a2c>
   17ab0:	sub	r3, r6, #133	; 0x85
   17ab4:	bic	r3, r3, #127	; 0x7f
   17ab8:	add	r3, r3, #260	; 0x104
   17abc:	ldr	r6, [pc, #988]	; 17ea0 <mount@plt+0x5de8>
   17ac0:	add	r5, r5, r3
   17ac4:	mov	r0, r4
   17ac8:	bl	16d30 <mount@plt+0x4c78>
   17acc:	add	r4, r4, #128	; 0x80
   17ad0:	mov	r1, r0
   17ad4:	mov	r0, r6
   17ad8:	bl	14b8c <mount@plt+0x2ad4>
   17adc:	cmp	r4, r5
   17ae0:	bne	17ac4 <mount@plt+0x5a0c>
   17ae4:	ldr	r4, [r8, #8]
   17ae8:	cmp	r4, #0
   17aec:	beq	17c14 <mount@plt+0x5b5c>
   17af0:	ldrh	r5, [r4], #4
   17af4:	sub	r5, r5, #4
   17af8:	cmp	r5, #368	; 0x170
   17afc:	bcc	17e54 <mount@plt+0x5d9c>
   17b00:	ldr	r1, [r4]
   17b04:	cmp	r1, #0
   17b08:	bne	17e3c <mount@plt+0x5d84>
   17b0c:	ldr	r3, [r4, #4]
   17b10:	cmp	r3, #0
   17b14:	bne	17e18 <mount@plt+0x5d60>
   17b18:	ldr	r1, [r4, #8]
   17b1c:	cmp	r1, #0
   17b20:	bne	17e00 <mount@plt+0x5d48>
   17b24:	ldrh	r1, [r4, #12]
   17b28:	cmp	r1, #0
   17b2c:	bne	17de8 <mount@plt+0x5d30>
   17b30:	ldrh	r1, [r4, #14]
   17b34:	cmp	r1, #0
   17b38:	bne	17dd0 <mount@plt+0x5d18>
   17b3c:	ldrh	r1, [r4, #16]
   17b40:	cmp	r1, #0
   17b44:	bne	17db8 <mount@plt+0x5d00>
   17b48:	ldrh	r1, [r4, #18]
   17b4c:	cmp	r1, #0
   17b50:	bne	17da0 <mount@plt+0x5ce8>
   17b54:	ldr	r1, [r4, #24]
   17b58:	cmp	r1, #0
   17b5c:	bne	17d88 <mount@plt+0x5cd0>
   17b60:	ldr	r1, [r4, #28]
   17b64:	cmp	r1, #0
   17b68:	bne	17d70 <mount@plt+0x5cb8>
   17b6c:	ldr	r1, [r4, #32]
   17b70:	cmp	r1, #0
   17b74:	bne	17d58 <mount@plt+0x5ca0>
   17b78:	ldr	r1, [r4, #36]	; 0x24
   17b7c:	cmp	r1, #0
   17b80:	bne	17d40 <mount@plt+0x5c88>
   17b84:	ldr	r1, [r4, #40]	; 0x28
   17b88:	cmp	r1, #0
   17b8c:	bne	17d28 <mount@plt+0x5c70>
   17b90:	ldr	r1, [r4, #44]	; 0x2c
   17b94:	cmp	r1, #0
   17b98:	bne	17d10 <mount@plt+0x5c58>
   17b9c:	ldr	r1, [r4, #48]	; 0x30
   17ba0:	cmp	r1, #0
   17ba4:	bne	17cf8 <mount@plt+0x5c40>
   17ba8:	ldrb	r1, [r4, #52]	; 0x34
   17bac:	cmp	r1, #0
   17bb0:	bne	17ce0 <mount@plt+0x5c28>
   17bb4:	ldrb	r1, [r4, #53]	; 0x35
   17bb8:	cmp	r1, #0
   17bbc:	bne	17cc8 <mount@plt+0x5c10>
   17bc0:	ldr	r1, [r4, #344]	; 0x158
   17bc4:	cmp	r1, #0
   17bc8:	bne	17cb0 <mount@plt+0x5bf8>
   17bcc:	ldr	r1, [r4, #348]	; 0x15c
   17bd0:	cmp	r1, #0
   17bd4:	bne	17c98 <mount@plt+0x5be0>
   17bd8:	ldr	r1, [r4, #352]	; 0x160
   17bdc:	cmp	r1, #0
   17be0:	bne	17c80 <mount@plt+0x5bc8>
   17be4:	ldrb	r1, [r4, #356]	; 0x164
   17be8:	cmp	r1, #0
   17bec:	bne	17c68 <mount@plt+0x5bb0>
   17bf0:	ldrb	r1, [r4, #357]	; 0x165
   17bf4:	cmp	r1, #0
   17bf8:	bne	17c50 <mount@plt+0x5b98>
   17bfc:	ldrb	r1, [r4, #358]	; 0x166
   17c00:	cmp	r1, #0
   17c04:	bne	17c38 <mount@plt+0x5b80>
   17c08:	ldrb	r1, [r4, #359]	; 0x167
   17c0c:	cmp	r1, #0
   17c10:	bne	17c2c <mount@plt+0x5b74>
   17c14:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17c18:	ldr	r3, [r7]
   17c1c:	cmp	r2, r3
   17c20:	bne	17e94 <mount@plt+0x5ddc>
   17c24:	sub	sp, fp, #24
   17c28:	pop	{r4, r5, r6, r7, r8, fp, pc}
   17c2c:	ldr	r0, [pc, #628]	; 17ea8 <mount@plt+0x5df0>
   17c30:	bl	14b8c <mount@plt+0x2ad4>
   17c34:	b	17c14 <mount@plt+0x5b5c>
   17c38:	ldr	r0, [pc, #620]	; 17eac <mount@plt+0x5df4>
   17c3c:	bl	14b8c <mount@plt+0x2ad4>
   17c40:	ldrb	r1, [r4, #359]	; 0x167
   17c44:	cmp	r1, #0
   17c48:	beq	17c14 <mount@plt+0x5b5c>
   17c4c:	b	17c2c <mount@plt+0x5b74>
   17c50:	ldr	r0, [pc, #600]	; 17eb0 <mount@plt+0x5df8>
   17c54:	bl	14b8c <mount@plt+0x2ad4>
   17c58:	ldrb	r1, [r4, #358]	; 0x166
   17c5c:	cmp	r1, #0
   17c60:	beq	17c08 <mount@plt+0x5b50>
   17c64:	b	17c38 <mount@plt+0x5b80>
   17c68:	ldr	r0, [pc, #580]	; 17eb4 <mount@plt+0x5dfc>
   17c6c:	bl	14b8c <mount@plt+0x2ad4>
   17c70:	ldrb	r1, [r4, #357]	; 0x165
   17c74:	cmp	r1, #0
   17c78:	beq	17bfc <mount@plt+0x5b44>
   17c7c:	b	17c50 <mount@plt+0x5b98>
   17c80:	ldr	r0, [pc, #560]	; 17eb8 <mount@plt+0x5e00>
   17c84:	bl	14b8c <mount@plt+0x2ad4>
   17c88:	ldrb	r1, [r4, #356]	; 0x164
   17c8c:	cmp	r1, #0
   17c90:	beq	17bf0 <mount@plt+0x5b38>
   17c94:	b	17c68 <mount@plt+0x5bb0>
   17c98:	ldr	r0, [pc, #540]	; 17ebc <mount@plt+0x5e04>
   17c9c:	bl	14b8c <mount@plt+0x2ad4>
   17ca0:	ldr	r1, [r4, #352]	; 0x160
   17ca4:	cmp	r1, #0
   17ca8:	beq	17be4 <mount@plt+0x5b2c>
   17cac:	b	17c80 <mount@plt+0x5bc8>
   17cb0:	ldr	r0, [pc, #520]	; 17ec0 <mount@plt+0x5e08>
   17cb4:	bl	14b8c <mount@plt+0x2ad4>
   17cb8:	ldr	r1, [r4, #348]	; 0x15c
   17cbc:	cmp	r1, #0
   17cc0:	beq	17bd8 <mount@plt+0x5b20>
   17cc4:	b	17c98 <mount@plt+0x5be0>
   17cc8:	ldr	r0, [pc, #500]	; 17ec4 <mount@plt+0x5e0c>
   17ccc:	bl	14b8c <mount@plt+0x2ad4>
   17cd0:	ldr	r1, [r4, #344]	; 0x158
   17cd4:	cmp	r1, #0
   17cd8:	beq	17bcc <mount@plt+0x5b14>
   17cdc:	b	17cb0 <mount@plt+0x5bf8>
   17ce0:	ldr	r0, [pc, #480]	; 17ec8 <mount@plt+0x5e10>
   17ce4:	bl	14b8c <mount@plt+0x2ad4>
   17ce8:	ldrb	r1, [r4, #53]	; 0x35
   17cec:	cmp	r1, #0
   17cf0:	beq	17bc0 <mount@plt+0x5b08>
   17cf4:	b	17cc8 <mount@plt+0x5c10>
   17cf8:	ldr	r0, [pc, #460]	; 17ecc <mount@plt+0x5e14>
   17cfc:	bl	14b8c <mount@plt+0x2ad4>
   17d00:	ldrb	r1, [r4, #52]	; 0x34
   17d04:	cmp	r1, #0
   17d08:	beq	17bb4 <mount@plt+0x5afc>
   17d0c:	b	17ce0 <mount@plt+0x5c28>
   17d10:	ldr	r0, [pc, #440]	; 17ed0 <mount@plt+0x5e18>
   17d14:	bl	14b8c <mount@plt+0x2ad4>
   17d18:	ldr	r1, [r4, #48]	; 0x30
   17d1c:	cmp	r1, #0
   17d20:	beq	17ba8 <mount@plt+0x5af0>
   17d24:	b	17cf8 <mount@plt+0x5c40>
   17d28:	ldr	r0, [pc, #420]	; 17ed4 <mount@plt+0x5e1c>
   17d2c:	bl	14b8c <mount@plt+0x2ad4>
   17d30:	ldr	r1, [r4, #44]	; 0x2c
   17d34:	cmp	r1, #0
   17d38:	beq	17b9c <mount@plt+0x5ae4>
   17d3c:	b	17d10 <mount@plt+0x5c58>
   17d40:	ldr	r0, [pc, #400]	; 17ed8 <mount@plt+0x5e20>
   17d44:	bl	14b8c <mount@plt+0x2ad4>
   17d48:	ldr	r1, [r4, #40]	; 0x28
   17d4c:	cmp	r1, #0
   17d50:	beq	17b90 <mount@plt+0x5ad8>
   17d54:	b	17d28 <mount@plt+0x5c70>
   17d58:	ldr	r0, [pc, #380]	; 17edc <mount@plt+0x5e24>
   17d5c:	bl	14b8c <mount@plt+0x2ad4>
   17d60:	ldr	r1, [r4, #36]	; 0x24
   17d64:	cmp	r1, #0
   17d68:	beq	17b84 <mount@plt+0x5acc>
   17d6c:	b	17d40 <mount@plt+0x5c88>
   17d70:	ldr	r0, [pc, #360]	; 17ee0 <mount@plt+0x5e28>
   17d74:	bl	14b8c <mount@plt+0x2ad4>
   17d78:	ldr	r1, [r4, #32]
   17d7c:	cmp	r1, #0
   17d80:	beq	17b78 <mount@plt+0x5ac0>
   17d84:	b	17d58 <mount@plt+0x5ca0>
   17d88:	ldr	r0, [pc, #340]	; 17ee4 <mount@plt+0x5e2c>
   17d8c:	bl	14b8c <mount@plt+0x2ad4>
   17d90:	ldr	r1, [r4, #28]
   17d94:	cmp	r1, #0
   17d98:	beq	17b6c <mount@plt+0x5ab4>
   17d9c:	b	17d70 <mount@plt+0x5cb8>
   17da0:	ldr	r0, [pc, #320]	; 17ee8 <mount@plt+0x5e30>
   17da4:	bl	14b8c <mount@plt+0x2ad4>
   17da8:	ldr	r1, [r4, #24]
   17dac:	cmp	r1, #0
   17db0:	beq	17b60 <mount@plt+0x5aa8>
   17db4:	b	17d88 <mount@plt+0x5cd0>
   17db8:	ldr	r0, [pc, #300]	; 17eec <mount@plt+0x5e34>
   17dbc:	bl	14b8c <mount@plt+0x2ad4>
   17dc0:	ldrh	r1, [r4, #18]
   17dc4:	cmp	r1, #0
   17dc8:	beq	17b54 <mount@plt+0x5a9c>
   17dcc:	b	17da0 <mount@plt+0x5ce8>
   17dd0:	ldr	r0, [pc, #280]	; 17ef0 <mount@plt+0x5e38>
   17dd4:	bl	14b8c <mount@plt+0x2ad4>
   17dd8:	ldrh	r1, [r4, #16]
   17ddc:	cmp	r1, #0
   17de0:	beq	17b48 <mount@plt+0x5a90>
   17de4:	b	17db8 <mount@plt+0x5d00>
   17de8:	ldr	r0, [pc, #260]	; 17ef4 <mount@plt+0x5e3c>
   17dec:	bl	14b8c <mount@plt+0x2ad4>
   17df0:	ldrh	r1, [r4, #14]
   17df4:	cmp	r1, #0
   17df8:	beq	17b3c <mount@plt+0x5a84>
   17dfc:	b	17dd0 <mount@plt+0x5d18>
   17e00:	ldr	r0, [pc, #240]	; 17ef8 <mount@plt+0x5e40>
   17e04:	bl	14b8c <mount@plt+0x2ad4>
   17e08:	ldrh	r1, [r4, #12]
   17e0c:	cmp	r1, #0
   17e10:	beq	17b30 <mount@plt+0x5a78>
   17e14:	b	17de8 <mount@plt+0x5d30>
   17e18:	ldr	r2, [pc, #220]	; 17efc <mount@plt+0x5e44>
   17e1c:	ldr	r0, [pc, #220]	; 17f00 <mount@plt+0x5e48>
   17e20:	add	r3, r2, r3, lsl #2
   17e24:	ldr	r1, [r3, #172]	; 0xac
   17e28:	bl	14b8c <mount@plt+0x2ad4>
   17e2c:	ldr	r1, [r4, #8]
   17e30:	cmp	r1, #0
   17e34:	beq	17b24 <mount@plt+0x5a6c>
   17e38:	b	17e00 <mount@plt+0x5d48>
   17e3c:	ldr	r0, [pc, #192]	; 17f04 <mount@plt+0x5e4c>
   17e40:	bl	14b8c <mount@plt+0x2ad4>
   17e44:	ldr	r3, [r4, #4]
   17e48:	cmp	r3, #0
   17e4c:	beq	17b18 <mount@plt+0x5a60>
   17e50:	b	17e18 <mount@plt+0x5d60>
   17e54:	sub	sp, sp, #368	; 0x170
   17e58:	mov	r6, sp
   17e5c:	mov	r1, r4
   17e60:	mov	r3, #368	; 0x170
   17e64:	mov	r2, r5
   17e68:	mov	r0, r6
   17e6c:	mov	r4, r6
   17e70:	bl	11c98 <__memcpy_chk@plt>
   17e74:	mov	r1, #0
   17e78:	add	r0, r6, r5
   17e7c:	rsb	r2, r5, #368	; 0x170
   17e80:	bl	11e78 <memset@plt>
   17e84:	ldr	r1, [r4]
   17e88:	cmp	r1, #0
   17e8c:	beq	17b0c <mount@plt+0x5a54>
   17e90:	b	17e3c <mount@plt+0x5d84>
   17e94:	bl	11c2c <__stack_chk_fail@plt>
   17e98:	ldrdeq	fp, [r3], -r8
   17e9c:	andeq	r9, r2, r0, ror #1
   17ea0:	andeq	r9, r2, ip, ror #1
   17ea4:	strdeq	r9, [r2], -r0
   17ea8:	andeq	r9, r2, r0, lsr #4
   17eac:	andeq	r9, r2, r0, lsl r2
   17eb0:	andeq	r9, r2, r4, lsl #4
   17eb4:	strdeq	r9, [r2], -r8
   17eb8:	andeq	r9, r2, ip, ror #3
   17ebc:	andeq	r9, r2, r0, ror #3
   17ec0:	ldrdeq	r9, [r2], -r0
   17ec4:	andeq	r9, r2, r4, asr #3
   17ec8:			; <UNDEFINED> instruction: 0x000291b4
   17ecc:	andeq	r9, r2, r8, lsr #3
   17ed0:	muleq	r2, ip, r1
   17ed4:	muleq	r2, r0, r1
   17ed8:	andeq	r9, r2, r0, lsl #3
   17edc:	andeq	r9, r2, r4, ror r1
   17ee0:	andeq	r9, r2, r4, ror #2
   17ee4:	andeq	r9, r2, r8, asr r1
   17ee8:	andeq	r9, r2, r8, asr #2
   17eec:	andeq	r9, r2, ip, lsr r1
   17ef0:	andeq	r9, r2, ip, lsr #2
   17ef4:	andeq	r9, r2, ip, lsl r1
   17ef8:	andeq	r9, r2, r0, lsl r1
   17efc:	andeq	r7, r2, r0, ror r2
   17f00:	andeq	r9, r2, r4, lsl #2
   17f04:	strdeq	r9, [r2], -ip
   17f08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f0c:	vpush	{d8}
   17f10:	ldr	r9, [pc, #1288]	; 18420 <mount@plt+0x6368>
   17f14:	mov	r4, r0
   17f18:	mov	r5, r1
   17f1c:	add	fp, sp, #40	; 0x28
   17f20:	sub	sp, sp, #932	; 0x3a4
   17f24:	ldr	r3, [r9]
   17f28:	mov	r2, #912	; 0x390
   17f2c:	mov	r1, #0
   17f30:	sub	r0, fp, #964	; 0x3c4
   17f34:	str	r3, [fp, #-48]	; 0xffffffd0
   17f38:	bl	11e78 <memset@plt>
   17f3c:	mov	r0, r5
   17f40:	mov	r1, #7
   17f44:	str	r4, [fp, #-416]	; 0xfffffe60
   17f48:	bl	14d58 <mount@plt+0x2ca0>
   17f4c:	ldr	r4, [r5, #8]
   17f50:	cmp	r4, #0
   17f54:	beq	182e8 <mount@plt+0x6230>
   17f58:	ldrh	r8, [r4], #4
   17f5c:	sub	r8, r8, #4
   17f60:	cmp	r8, #223	; 0xdf
   17f64:	bls	183c4 <mount@plt+0x630c>
   17f68:	ldr	r3, [pc, #1204]	; 18424 <mount@plt+0x636c>
   17f6c:	ldr	r3, [r3, #1276]	; 0x4fc
   17f70:	cmp	r3, #0
   17f74:	beq	17fb4 <mount@plt+0x5efc>
   17f78:	ldrb	r3, [r4, #5]
   17f7c:	and	r1, r3, #1
   17f80:	lsr	r2, r3, #1
   17f84:	and	r2, r2, #1
   17f88:	strb	r2, [fp, #-67]	; 0xffffffbd
   17f8c:	lsr	r2, r3, #3
   17f90:	and	r2, r2, #1
   17f94:	strb	r2, [fp, #-66]	; 0xffffffbe
   17f98:	lsr	r2, r3, #4
   17f9c:	lsr	r3, r3, #5
   17fa0:	and	r2, r2, #1
   17fa4:	and	r3, r3, #1
   17fa8:	strb	r2, [fp, #-65]	; 0xffffffbf
   17fac:	strb	r3, [fp, #-64]	; 0xffffffc0
   17fb0:	strb	r1, [fp, #-68]	; 0xffffffbc
   17fb4:	ldr	r1, [r5, #16]
   17fb8:	cmp	r1, #0
   17fbc:	beq	17fd0 <mount@plt+0x5f18>
   17fc0:	add	r1, r1, #4
   17fc4:	mov	r2, #15
   17fc8:	sub	r0, fp, #352	; 0x160
   17fcc:	bl	11e90 <strncpy@plt>
   17fd0:	ldrb	r3, [r4, #5]
   17fd4:	tst	r3, #4
   17fd8:	beq	17ffc <mount@plt+0x5f44>
   17fdc:	ldrb	r2, [r4, #6]
   17fe0:	mov	r1, #1
   17fe4:	strb	r1, [fp, #-63]	; 0xffffffc1
   17fe8:	mov	r3, r2
   17fec:	and	r3, r3, #15
   17ff0:	lsr	r2, r2, #4
   17ff4:	str	r2, [fp, #-272]	; 0xfffffef0
   17ff8:	str	r3, [fp, #-276]	; 0xfffffeec
   17ffc:	ldr	r3, [r4, #8]
   18000:	ldr	r2, [pc, #1056]	; 18428 <mount@plt+0x6370>
   18004:	cmp	r3, #0
   18008:	cmpne	r3, r2
   1800c:	ldr	r2, [r4, #20]
   18010:	vmovne	s15, r3
   18014:	vldrne	d5, [pc, #1004]	; 18408 <mount@plt+0x6350>
   18018:	ldr	r3, [r4, #16]
   1801c:	vcvtne.f64.u32	d7, s15
   18020:	vdivne.f64	d6, d7, d5
   18024:	vldr	s15, [r4, #68]	; 0x44
   18028:	vcvt.f64.u32	d8, s15
   1802c:	vldr	s15, [r4, #72]	; 0x48
   18030:	vcvt.f64.u32	d4, s15
   18034:	vldr	s15, [r4, #12]
   18038:	vcvt.f64.u32	d5, s15
   1803c:	vldr	s15, [r4, #92]	; 0x5c
   18040:	vstrne	d6, [fp, #-332]	; 0xfffffeb4
   18044:	vcvt.f64.u32	d6, s15
   18048:	vldr	d7, [pc, #952]	; 18408 <mount@plt+0x6350>
   1804c:	ldrb	r1, [r4, #4]
   18050:	str	r3, [fp, #-268]	; 0xfffffef4
   18054:	vdiv.f64	d3, d4, d7
   18058:	ldr	r3, [r4, #84]	; 0x54
   1805c:	str	r2, [fp, #-264]	; 0xfffffef8
   18060:	ldr	r2, [r4, #96]	; 0x60
   18064:	str	r3, [fp, #-260]	; 0xfffffefc
   18068:	ldr	r3, [r4, #44]	; 0x2c
   1806c:	str	r2, [fp, #-116]	; 0xffffff8c
   18070:	ldr	r2, [r4, #52]	; 0x34
   18074:	str	r3, [fp, #-248]	; 0xffffff08
   18078:	ldr	r3, [r4, #56]	; 0x38
   1807c:	str	r2, [fp, #-244]	; 0xffffff0c
   18080:	ldr	r2, [r4, #24]
   18084:	str	r3, [fp, #-240]	; 0xffffff10
   18088:	ldr	r3, [r4, #36]	; 0x24
   1808c:	str	r2, [fp, #-180]	; 0xffffff4c
   18090:	ldr	r2, [r4, #100]	; 0x64
   18094:	str	r3, [fp, #-176]	; 0xffffff50
   18098:	ldr	r3, [r4, #32]
   1809c:	str	r1, [fp, #-292]	; 0xfffffedc
   180a0:	ldr	r1, [pc, #900]	; 1842c <mount@plt+0x6374>
   180a4:	strd	r2, [fp, #-172]	; 0xffffff54
   180a8:	vdiv.f64	d4, d5, d7
   180ac:	vstr	d3, [fp, #-308]	; 0xfffffecc
   180b0:	vdiv.f64	d2, d8, d7
   180b4:	vstr	d4, [fp, #-324]	; 0xfffffebc
   180b8:	vdiv.f64	d5, d6, d7
   180bc:	vstr	d2, [fp, #-316]	; 0xfffffec4
   180c0:	vstr	d5, [fp, #-132]	; 0xffffff7c
   180c4:	ldr	r2, [r4, #28]
   180c8:	ldr	r3, [r4, #76]	; 0x4c
   180cc:	str	r2, [fp, #-164]	; 0xffffff5c
   180d0:	ldr	r2, [r4, #40]	; 0x28
   180d4:	cmp	r3, r1
   180d8:	ldr	r1, [r4, #88]	; 0x58
   180dc:	str	r2, [fp, #-160]	; 0xffffff60
   180e0:	ldr	r2, [r4, #64]	; 0x40
   180e4:	str	r1, [fp, #-156]	; 0xffffff64
   180e8:	ldr	r1, [r4, #80]	; 0x50
   180ec:	str	r2, [fp, #-112]	; 0xffffff90
   180f0:	ldr	r2, [r4, #60]	; 0x3c
   180f4:	strls	r3, [fp, #-296]	; 0xfffffed8
   180f8:	ldr	r3, [r5, #12]
   180fc:	str	r1, [fp, #-252]	; 0xffffff04
   18100:	cmp	r3, #0
   18104:	str	r2, [fp, #-256]	; 0xffffff00
   18108:	beq	1812c <mount@plt+0x6074>
   1810c:	ldr	r2, [r3, #4]
   18110:	cmp	r2, #0
   18114:	beq	1812c <mount@plt+0x6074>
   18118:	ldr	r3, [r3, #12]
   1811c:	cmp	r3, #0
   18120:	cmnne	r3, #-2147483647	; 0x80000001
   18124:	vmovne	s15, r3
   18128:	vcvtne.f64.u32	d8, s15
   1812c:	ldr	r8, [r5, #36]	; 0x24
   18130:	cmp	r8, #0
   18134:	beq	18174 <mount@plt+0x60bc>
   18138:	mov	r0, #20
   1813c:	bl	11d70 <malloc@plt>
   18140:	ldrh	r3, [r8, #4]
   18144:	ldrh	r1, [r8, #6]
   18148:	ldr	r2, [r8, #8]
   1814c:	adds	r3, r3, #0
   18150:	movne	r3, #1
   18154:	strb	r3, [r0, #16]
   18158:	str	r1, [r0]
   1815c:	ldr	r3, [r8, #16]
   18160:	ldr	r1, [r8, #12]
   18164:	str	r2, [r0, #4]
   18168:	str	r1, [r0, #8]
   1816c:	str	r3, [r0, #12]
   18170:	str	r0, [fp, #-60]	; 0xffffffc4
   18174:	ldr	r1, [r5, #64]	; 0x40
   18178:	cmp	r1, #0
   1817c:	beq	181a4 <mount@plt+0x60ec>
   18180:	mov	sl, r1
   18184:	mov	r0, #1
   18188:	mov	r1, #20
   1818c:	ldrh	r8, [sl], #4
   18190:	bl	11ad0 <calloc@plt>
   18194:	cmp	sl, #0
   18198:	cmpne	r0, #0
   1819c:	str	r0, [fp, #-56]	; 0xffffffc8
   181a0:	bne	18438 <mount@plt+0x6380>
   181a4:	vcmpe.f64	d8, #0.0
   181a8:	vmrs	APSR_nzcv, fpscr
   181ac:	ble	181ec <mount@plt+0x6134>
   181b0:	ldr	r3, [r4, #16]
   181b4:	cmp	r3, #0
   181b8:	beq	181ec <mount@plt+0x6134>
   181bc:	ldr	r2, [r4, #80]	; 0x50
   181c0:	cmp	r2, #0
   181c4:	beq	181ec <mount@plt+0x6134>
   181c8:	vmov	s15, r2
   181cc:	vldr	d5, [pc, #572]	; 18410 <mount@plt+0x6358>
   181d0:	vcvt.f64.u32	d6, s15
   181d4:	vmov	s15, r3
   181d8:	vcvt.f64.u32	d7, s15
   181dc:	vmul.f64	d7, d6, d7
   181e0:	vmul.f64	d7, d7, d5
   181e4:	vdiv.f64	d6, d7, d8
   181e8:	vstr	d6, [fp, #-284]	; 0xfffffee4
   181ec:	ldrd	r0, [r4, #104]	; 0x68
   181f0:	mvn	r3, #0
   181f4:	mvn	r2, #2
   181f8:	subs	r6, r0, #1
   181fc:	sbc	r7, r1, #0
   18200:	cmp	r7, r3
   18204:	cmpeq	r6, r2
   18208:	bls	18360 <mount@plt+0x62a8>
   1820c:	ldr	ip, [r4, #148]	; 0x94
   18210:	ldrd	r2, [r4, #120]	; 0x78
   18214:	sub	r1, ip, #1
   18218:	cmn	r1, #3
   1821c:	ldrd	r0, [r4, #128]	; 0x80
   18220:	vmovls	s15, ip
   18224:	vldrls	d5, [pc, #476]	; 18408 <mount@plt+0x6350>
   18228:	strd	r2, [fp, #-212]	; 0xffffff2c
   1822c:	ldr	r2, [r4, #136]	; 0x88
   18230:	vcvtls.f64.u32	d7, s15
   18234:	ldr	r3, [r4, #140]	; 0x8c
   18238:	strd	r0, [fp, #-204]	; 0xffffff34
   1823c:	ldr	r1, [r4, #156]	; 0x9c
   18240:	str	r2, [fp, #-196]	; 0xffffff3c
   18244:	ldr	r2, [r4, #152]	; 0x98
   18248:	str	r3, [fp, #-192]	; 0xffffff40
   1824c:	ldr	r3, [r4, #144]	; 0x90
   18250:	vdivls.f64	d6, d7, d5
   18254:	str	r1, [fp, #-188]	; 0xffffff44
   18258:	ldrd	r0, [r4, #160]	; 0xa0
   1825c:	str	r2, [fp, #-184]	; 0xffffff48
   18260:	str	r3, [fp, #-152]	; 0xffffff68
   18264:	vstrls	d6, [fp, #-124]	; 0xffffff84
   18268:	bl	26fa4 <mount@plt+0x14eec>
   1826c:	vldr	d7, [pc, #420]	; 18418 <mount@plt+0x6360>
   18270:	ldrb	ip, [r4, #7]
   18274:	ldrd	r2, [r4, #168]	; 0xa8
   18278:	ldrd	r6, [r4, #176]	; 0xb0
   1827c:	and	ip, ip, #1
   18280:	strd	r2, [fp, #-108]	; 0xffffff94
   18284:	ldrd	r2, [r4, #184]	; 0xb8
   18288:	strb	ip, [fp, #-62]	; 0xffffffc2
   1828c:	ldr	ip, [r4, #192]	; 0xc0
   18290:	strd	r6, [fp, #-100]	; 0xffffff9c
   18294:	ldrd	r6, [r4, #200]	; 0xc8
   18298:	strd	r2, [fp, #-92]	; 0xffffffa4
   1829c:	ldrd	r2, [r4, #208]	; 0xd0
   182a0:	str	ip, [fp, #-148]	; 0xffffff6c
   182a4:	ldr	ip, [r4, #196]	; 0xc4
   182a8:	ldr	lr, [r4, #216]	; 0xd8
   182ac:	str	ip, [fp, #-144]	; 0xffffff70
   182b0:	ldr	ip, [r4, #220]	; 0xdc
   182b4:	str	lr, [fp, #-140]	; 0xffffff74
   182b8:	str	ip, [fp, #-136]	; 0xffffff78
   182bc:	strd	r2, [fp, #-76]	; 0xffffffb4
   182c0:	strd	r6, [fp, #-84]	; 0xffffffac
   182c4:	vmov	d6, r0, r1
   182c8:	sub	r0, fp, #964	; 0x3c4
   182cc:	vmul.f64	d7, d6, d7
   182d0:	vstr	d7, [fp, #-220]	; 0xffffff24
   182d4:	bl	153c4 <mount@plt+0x330c>
   182d8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   182dc:	bl	11b78 <free@plt>
   182e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   182e4:	bl	11b78 <free@plt>
   182e8:	ldr	r6, [r5, #72]	; 0x48
   182ec:	cmp	r6, #0
   182f0:	beq	18344 <mount@plt+0x628c>
   182f4:	mov	r4, r6
   182f8:	ldr	r0, [pc, #304]	; 18430 <mount@plt+0x6378>
   182fc:	ldrh	r5, [r4], #104	; 0x68
   18300:	bl	14b8c <mount@plt+0x2ad4>
   18304:	add	r0, r6, #4
   18308:	bl	14eb8 <mount@plt+0x2e00>
   1830c:	sub	r3, r5, #104	; 0x68
   18310:	cmp	r3, #0
   18314:	ble	18344 <mount@plt+0x628c>
   18318:	ldr	r7, [pc, #276]	; 18434 <mount@plt+0x637c>
   1831c:	add	r6, r6, r5
   18320:	mov	r0, r7
   18324:	bl	14b8c <mount@plt+0x2ad4>
   18328:	add	r5, r4, #100	; 0x64
   1832c:	mov	r0, r4
   18330:	bl	14eb8 <mount@plt+0x2e00>
   18334:	sub	r3, r6, r5
   18338:	cmp	r3, #0
   1833c:	mov	r4, r5
   18340:	bgt	18320 <mount@plt+0x6268>
   18344:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18348:	ldr	r3, [r9]
   1834c:	cmp	r2, r3
   18350:	bne	18460 <mount@plt+0x63a8>
   18354:	sub	sp, fp, #40	; 0x28
   18358:	vpop	{d8}
   1835c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18360:	bl	26fa4 <mount@plt+0x14eec>
   18364:	vldr	d8, [pc, #172]	; 18418 <mount@plt+0x6360>
   18368:	ldr	ip, [r4, #112]	; 0x70
   1836c:	ldr	lr, [r4, #116]	; 0x74
   18370:	subs	r3, ip, #1
   18374:	str	r3, [fp, #-972]	; 0xfffffc34
   18378:	sbc	r3, lr, #0
   1837c:	str	r3, [fp, #-968]	; 0xfffffc38
   18380:	sub	r3, fp, #972	; 0x3cc
   18384:	mvn	r2, #2
   18388:	ldrd	r6, [r3]
   1838c:	mvn	r3, #0
   18390:	cmp	r7, r3
   18394:	cmpeq	r6, r2
   18398:	vmov	d7, r0, r1
   1839c:	vmul.f64	d7, d7, d8
   183a0:	vstr	d7, [fp, #-236]	; 0xffffff14
   183a4:	bhi	1820c <mount@plt+0x6154>
   183a8:	mov	r0, ip
   183ac:	mov	r1, lr
   183b0:	bl	26fa4 <mount@plt+0x14eec>
   183b4:	vmov	d7, r0, r1
   183b8:	vmul.f64	d8, d7, d8
   183bc:	vstr	d8, [fp, #-228]	; 0xffffff1c
   183c0:	b	1820c <mount@plt+0x6154>
   183c4:	sub	sp, sp, #224	; 0xe0
   183c8:	mov	sl, sp
   183cc:	mov	r1, r4
   183d0:	mov	r3, #224	; 0xe0
   183d4:	mov	r2, r8
   183d8:	mov	r0, sl
   183dc:	bl	11c98 <__memcpy_chk@plt>
   183e0:	add	r0, sl, r8
   183e4:	rsb	r2, r8, #224	; 0xe0
   183e8:	mov	r1, #0
   183ec:	bl	11e78 <memset@plt>
   183f0:	ldr	r3, [pc, #44]	; 18424 <mount@plt+0x636c>
   183f4:	mov	r4, sl
   183f8:	ldr	r3, [r3, #1276]	; 0x4fc
   183fc:	cmp	r3, #0
   18400:	beq	17fb4 <mount@plt+0x5efc>
   18404:	b	17f78 <mount@plt+0x5ec0>
   18408:	andeq	r0, r0, r0
   1840c:	addmi	r4, pc, r0
   18410:	andeq	r0, r0, r0
   18414:	cmpmi	lr, r0, lsl #9
   18418:	andeq	r0, r0, r0
   1841c:	eormi	r0, r0, r0
   18420:	ldrdeq	fp, [r3], -r8
   18424:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   18428:	eoreq	ip, sp, r0, asr #13
   1842c:	strdeq	pc, [r0], -lr
   18430:	andeq	r9, r2, ip, lsr #4
   18434:	andeq	r9, r2, r4, lsl #7
   18438:	sub	r2, r8, #4
   1843c:	cmp	r2, #20
   18440:	movcs	r2, #20
   18444:	mov	r1, sl
   18448:	mov	r3, #20
   1844c:	bl	11c98 <__memcpy_chk@plt>
   18450:	vcmpe.f64	d8, #0.0
   18454:	vmrs	APSR_nzcv, fpscr
   18458:	bgt	181b0 <mount@plt+0x60f8>
   1845c:	b	181ec <mount@plt+0x6134>
   18460:	bl	11c2c <__stack_chk_fail@plt>
   18464:	push	{r4, r5, r6, r7, r8, lr}
   18468:	mov	r2, r0
   1846c:	ldr	r7, [pc, #484]	; 18658 <mount@plt+0x65a0>
   18470:	ldr	r3, [r2], #88	; 0x58
   18474:	sub	sp, sp, #1000	; 0x3e8
   18478:	ldr	ip, [r7]
   1847c:	mov	r4, r1
   18480:	sub	r3, r3, #88	; 0x58
   18484:	mov	r1, #18
   18488:	mov	r6, r0
   1848c:	add	r0, sp, #4
   18490:	str	ip, [sp, #996]	; 0x3e4
   18494:	bl	266b0 <mount@plt+0x145f8>
   18498:	ldr	r3, [sp, #44]	; 0x2c
   1849c:	cmp	r3, #0
   184a0:	ldrbne	r3, [r3, #4]
   184a4:	strne	r3, [r4, #4]
   184a8:	ldrh	r3, [r4, #18]
   184ac:	cmp	r3, #10
   184b0:	movne	r1, #0
   184b4:	movne	r8, r1
   184b8:	beq	1858c <mount@plt+0x64d4>
   184bc:	ldr	r5, [pc, #408]	; 1865c <mount@plt+0x65a4>
   184c0:	mov	r0, r4
   184c4:	bl	170e8 <mount@plt+0x5030>
   184c8:	ldr	r3, [r5, #1276]	; 0x4fc
   184cc:	cmp	r3, #0
   184d0:	beq	18510 <mount@plt+0x6458>
   184d4:	mov	r2, #912	; 0x390
   184d8:	mov	r1, #0
   184dc:	add	r0, sp, #80	; 0x50
   184e0:	bl	11e78 <memset@plt>
   184e4:	ldrb	r3, [r6, #18]
   184e8:	ldrb	r2, [r6, #19]
   184ec:	ldr	r1, [r4, #4]
   184f0:	ldr	r0, [r6, #68]	; 0x44
   184f4:	cmp	r1, #132	; 0x84
   184f8:	str	r3, [sp, #680]	; 0x2a8
   184fc:	str	r2, [sp, #868]	; 0x364
   18500:	str	r0, [sp, #684]	; 0x2ac
   18504:	beq	18618 <mount@plt+0x6560>
   18508:	cmp	r3, #0
   1850c:	bne	185f4 <mount@plt+0x653c>
   18510:	ldr	r3, [pc, #328]	; 18660 <mount@plt+0x65a8>
   18514:	ldr	r3, [r3]
   18518:	cmp	r3, #0
   1851c:	bne	185ac <mount@plt+0x64f4>
   18520:	ldr	r3, [r5, #1284]	; 0x504
   18524:	cmp	r3, #0
   18528:	bne	18568 <mount@plt+0x64b0>
   1852c:	ldr	r3, [r5, #1280]	; 0x500
   18530:	cmp	r3, #0
   18534:	bne	1855c <mount@plt+0x64a4>
   18538:	ldr	r1, [sp, #996]	; 0x3e4
   1853c:	ldr	r2, [r7]
   18540:	ldr	r3, [r4, #560]	; 0x230
   18544:	cmp	r1, r2
   18548:	str	r3, [r5, #1120]	; 0x460
   1854c:	mov	r0, #0
   18550:	bne	18654 <mount@plt+0x659c>
   18554:	add	sp, sp, #1000	; 0x3e8
   18558:	pop	{r4, r5, r6, r7, r8, pc}
   1855c:	ldr	r3, [r4, #4]
   18560:	cmp	r3, #17
   18564:	beq	18538 <mount@plt+0x6480>
   18568:	ldr	r0, [pc, #244]	; 18664 <mount@plt+0x65ac>
   1856c:	bl	14b8c <mount@plt+0x2ad4>
   18570:	ldr	r3, [r4, #4]
   18574:	cmp	r3, #132	; 0x84
   18578:	beq	1860c <mount@plt+0x6554>
   1857c:	add	r1, sp, #4
   18580:	ldrb	r0, [r6, #17]
   18584:	bl	17f08 <mount@plt+0x5e50>
   18588:	b	18538 <mount@plt+0x6480>
   1858c:	ldr	r1, [sp, #48]	; 0x30
   18590:	cmp	r1, #0
   18594:	moveq	r8, r1
   18598:	beq	184bc <mount@plt+0x6404>
   1859c:	ldrb	r8, [r1, #4]
   185a0:	adds	r1, r8, #0
   185a4:	movne	r1, #1
   185a8:	b	184bc <mount@plt+0x6404>
   185ac:	mov	r0, r4
   185b0:	bl	14cf4 <mount@plt+0x2c3c>
   185b4:	ldrh	r3, [r4, #18]
   185b8:	cmp	r3, #10
   185bc:	beq	18638 <mount@plt+0x6580>
   185c0:	ldr	r3, [sp, #36]	; 0x24
   185c4:	cmp	r3, #0
   185c8:	beq	18520 <mount@plt+0x6468>
   185cc:	ldrb	r3, [r3, #4]
   185d0:	ldr	r0, [pc, #144]	; 18668 <mount@plt+0x65b0>
   185d4:	tst	r3, #1
   185d8:	movne	r1, #45	; 0x2d
   185dc:	moveq	r1, #60	; 0x3c
   185e0:	tst	r3, #2
   185e4:	movne	r2, #45	; 0x2d
   185e8:	moveq	r2, #62	; 0x3e
   185ec:	bl	14b8c <mount@plt+0x2ad4>
   185f0:	b	18520 <mount@plt+0x6468>
   185f4:	cmp	r3, #4
   185f8:	movhi	r3, #5
   185fc:	add	r0, sp, #80	; 0x50
   18600:	strhi	r3, [sp, #680]	; 0x2a8
   18604:	bl	1769c <mount@plt+0x55e4>
   18608:	b	18510 <mount@plt+0x6458>
   1860c:	add	r0, sp, #4
   18610:	bl	179f0 <mount@plt+0x5938>
   18614:	b	18538 <mount@plt+0x6480>
   18618:	cmp	r3, #0
   1861c:	beq	18510 <mount@plt+0x6458>
   18620:	bl	149f4 <mount@plt+0x293c>
   18624:	ldr	r2, [sp, #868]	; 0x364
   18628:	mov	r1, r0
   1862c:	ldr	r0, [pc, #56]	; 1866c <mount@plt+0x65b4>
   18630:	bl	14b8c <mount@plt+0x2ad4>
   18634:	b	18510 <mount@plt+0x6458>
   18638:	ldr	r3, [sp, #48]	; 0x30
   1863c:	cmp	r3, #0
   18640:	beq	185c0 <mount@plt+0x6508>
   18644:	mov	r1, r8
   18648:	ldr	r0, [pc, #32]	; 18670 <mount@plt+0x65b8>
   1864c:	bl	14b8c <mount@plt+0x2ad4>
   18650:	b	185c0 <mount@plt+0x6508>
   18654:	bl	11c2c <__stack_chk_fail@plt>
   18658:	ldrdeq	fp, [r3], -r8
   1865c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   18660:	andeq	r1, r4, r4, ror pc
   18664:	andeq	r9, r2, r4, ror #4
   18668:	andeq	r9, r2, ip, asr r2
   1866c:	andeq	r9, r2, r8, lsr r2
   18670:	andeq	r9, r2, r0, asr r2
   18674:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18678:	mov	r4, r1
   1867c:	ldr	r6, [pc, #368]	; 187f4 <mount@plt+0x673c>
   18680:	sub	sp, sp, #680	; 0x2a8
   18684:	mov	r5, r0
   18688:	ldr	r3, [r6]
   1868c:	mov	r2, #600	; 0x258
   18690:	mov	r1, #0
   18694:	add	r0, sp, #72	; 0x48
   18698:	str	r3, [sp, #676]	; 0x2a4
   1869c:	bl	11e78 <memset@plt>
   186a0:	ldr	r1, [r4]
   186a4:	ldrb	r2, [r5, #16]
   186a8:	ldr	r3, [r1, #8]
   186ac:	ldr	r1, [r1, #12]
   186b0:	rsb	r0, r2, #32
   186b4:	lsr	r3, r3, r2
   186b8:	sub	r2, r2, #32
   186bc:	orr	r3, r3, r1, lsl r0
   186c0:	orr	r3, r3, r1, lsr r2
   186c4:	mov	r1, #0
   186c8:	and	r0, r3, #1
   186cc:	orrs	r3, r0, r1
   186d0:	bne	186f0 <mount@plt+0x6638>
   186d4:	mov	r0, #0
   186d8:	ldr	r2, [sp, #676]	; 0x2a4
   186dc:	ldr	r3, [r6]
   186e0:	cmp	r2, r3
   186e4:	bne	187f0 <mount@plt+0x6738>
   186e8:	add	sp, sp, #680	; 0x2a8
   186ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   186f0:	mov	r0, r5
   186f4:	add	r1, sp, #72	; 0x48
   186f8:	bl	1487c <mount@plt+0x27c4>
   186fc:	ldr	r3, [r4]
   18700:	ldr	r2, [r4, #4]
   18704:	ldr	r0, [r3, #16]
   18708:	str	r2, [sp, #76]	; 0x4c
   1870c:	cmp	r0, #0
   18710:	beq	18728 <mount@plt+0x6670>
   18714:	add	r1, sp, #72	; 0x48
   18718:	bl	16a48 <mount@plt+0x4990>
   1871c:	cmp	r0, #0
   18720:	beq	186d4 <mount@plt+0x661c>
   18724:	ldr	r3, [r4]
   18728:	ldrb	r3, [r3, #20]
   1872c:	cmp	r3, #0
   18730:	beq	187dc <mount@plt+0x6724>
   18734:	ldr	r8, [r4, #8]
   18738:	add	lr, r5, #20
   1873c:	add	ip, sp, #24
   18740:	ldm	lr!, {r0, r1, r2, r3}
   18744:	mov	r9, #0
   18748:	ldr	r7, [r8, #28]
   1874c:	str	r9, [sp, #16]
   18750:	add	r7, r7, #1
   18754:	str	r9, [sp, #20]
   18758:	str	r7, [r8, #28]
   1875c:	stmia	ip!, {r0, r1, r2, r3}
   18760:	ldm	lr!, {r0, r1, r2, r3}
   18764:	ldr	r4, [r4, #4]
   18768:	ldrb	sl, [r5, #16]
   1876c:	cmp	r4, #255	; 0xff
   18770:	strb	r4, [sp, #17]
   18774:	ldr	r4, [pc, #124]	; 187f8 <mount@plt+0x6740>
   18778:	stmia	ip!, {r0, r1, r2, r3}
   1877c:	mov	r3, #72	; 0x48
   18780:	str	r9, [sp, #12]
   18784:	str	r7, [sp, #8]
   18788:	strb	sl, [sp, #16]
   1878c:	stm	sp, {r3, r4}
   18790:	ldm	lr, {r0, r1, r2, r3}
   18794:	stm	ip, {r0, r1, r2, r3}
   18798:	mov	r0, r8
   1879c:	ldrheq	r3, [sp, #82]	; 0x52
   187a0:	mov	r2, #0
   187a4:	mov	r1, sp
   187a8:	strbeq	r3, [sp, #19]
   187ac:	bl	25990 <mount@plt+0x138d8>
   187b0:	cmp	r0, #0
   187b4:	beq	187dc <mount@plt+0x6724>
   187b8:	bl	11e18 <__errno_location@plt>
   187bc:	ldr	r3, [r0]
   187c0:	cmp	r3, #2
   187c4:	cmpne	r3, #95	; 0x5f
   187c8:	beq	186d4 <mount@plt+0x661c>
   187cc:	ldr	r0, [pc, #40]	; 187fc <mount@plt+0x6744>
   187d0:	bl	11c80 <perror@plt>
   187d4:	mvn	r0, #0
   187d8:	b	186d8 <mount@plt+0x6620>
   187dc:	add	r1, sp, #72	; 0x48
   187e0:	mov	r0, r5
   187e4:	bl	18464 <mount@plt+0x63ac>
   187e8:	and	r0, r0, r0, asr #31
   187ec:	b	186d8 <mount@plt+0x6620>
   187f0:	bl	11c2c <__stack_chk_fail@plt>
   187f4:	ldrdeq	fp, [r3], -r8
   187f8:	andeq	r0, r5, r5, lsl r0
   187fc:	andeq	r9, r2, r8, ror #4
   18800:	push	{r4, r5, r6, r7, lr}
   18804:	sub	sp, sp, #44	; 0x2c
   18808:	ldr	r6, [pc, #160]	; 188b0 <mount@plt+0x67f8>
   1880c:	mov	r4, r0
   18810:	mov	r2, #30
   18814:	ldr	r3, [r6]
   18818:	mov	r1, #0
   1881c:	add	r0, sp, #4
   18820:	str	r3, [sp, #36]	; 0x24
   18824:	bl	11e78 <memset@plt>
   18828:	mov	r0, r4
   1882c:	bl	15fd8 <mount@plt+0x3f20>
   18830:	add	r1, sp, #4
   18834:	ldr	r0, [r4, #540]	; 0x21c
   18838:	ldr	r5, [r4, #584]	; 0x248
   1883c:	bl	1f294 <mount@plt+0xd1dc>
   18840:	ldr	r7, [pc, #108]	; 188b4 <mount@plt+0x67fc>
   18844:	mov	r3, #0
   18848:	cmp	r5, r3
   1884c:	moveq	r5, r7
   18850:	ldr	r1, [pc, #96]	; 188b8 <mount@plt+0x6800>
   18854:	mov	r2, r0
   18858:	mov	r0, r5
   1885c:	bl	16388 <mount@plt+0x42d0>
   18860:	add	r1, sp, #4
   18864:	ldr	r0, [r4, #544]	; 0x220
   18868:	ldr	r5, [r4, #588]	; 0x24c
   1886c:	bl	1f294 <mount@plt+0xd1dc>
   18870:	cmp	r5, #0
   18874:	moveq	r5, r7
   18878:	mov	r3, #0
   1887c:	ldr	r1, [pc, #52]	; 188b8 <mount@plt+0x6800>
   18880:	mov	r2, r0
   18884:	mov	r0, r5
   18888:	bl	16388 <mount@plt+0x42d0>
   1888c:	add	r0, r4, #560	; 0x230
   18890:	bl	17034 <mount@plt+0x4f7c>
   18894:	ldr	r2, [sp, #36]	; 0x24
   18898:	ldr	r3, [r6]
   1889c:	cmp	r2, r3
   188a0:	bne	188ac <mount@plt+0x67f4>
   188a4:	add	sp, sp, #44	; 0x2c
   188a8:	pop	{r4, r5, r6, r7, pc}
   188ac:	bl	11c2c <__stack_chk_fail@plt>
   188b0:	ldrdeq	fp, [r3], -r8
   188b4:	andeq	r9, r2, r0, lsl #5
   188b8:	andeq	r9, r2, r4, ror r0
   188bc:	push	{r4, r5, r6, r7, r8, lr}
   188c0:	sub	sp, sp, #768	; 0x300
   188c4:	ldr	r5, [pc, #592]	; 18b1c <mount@plt+0x6a64>
   188c8:	mov	r4, r0
   188cc:	mov	r6, r1
   188d0:	ldr	r3, [r5]
   188d4:	mov	r2, #600	; 0x258
   188d8:	mov	r1, #0
   188dc:	add	r0, sp, #32
   188e0:	str	r3, [sp, #764]	; 0x2fc
   188e4:	bl	11e78 <memset@plt>
   188e8:	mov	r2, r4
   188ec:	ldr	ip, [pc, #556]	; 18b20 <mount@plt+0x6a68>
   188f0:	ldr	r3, [r2], #32
   188f4:	mov	r1, #6
   188f8:	sub	r3, r3, #32
   188fc:	add	r0, sp, #4
   18900:	str	ip, [sp, #616]	; 0x268
   18904:	str	ip, [sp, #620]	; 0x26c
   18908:	bl	266b0 <mount@plt+0x145f8>
   1890c:	ldrb	r3, [r4, #17]
   18910:	ldrb	lr, [r4, #18]
   18914:	ldr	r2, [r4, #20]
   18918:	add	ip, sp, #312	; 0x138
   1891c:	mov	r0, r3
   18920:	str	r3, [sp, #36]	; 0x24
   18924:	mov	r1, r6
   18928:	mov	r3, #1
   1892c:	str	lr, [sp, #580]	; 0x244
   18930:	str	r2, [sp, #572]	; 0x23c
   18934:	str	r2, [sp, #592]	; 0x250
   18938:	strh	r3, [sp, #50]	; 0x32
   1893c:	strh	r3, [ip, #2]
   18940:	bl	15ccc <mount@plt+0x3c14>
   18944:	cmp	r0, #0
   18948:	bne	18a34 <mount@plt+0x697c>
   1894c:	ldr	r3, [sp, #20]
   18950:	ldr	r1, [sp, #4]
   18954:	cmp	r3, #0
   18958:	ldrdne	r2, [r3, #4]
   1895c:	strne	r2, [sp, #584]	; 0x248
   18960:	strne	r3, [sp, #588]	; 0x24c
   18964:	cmp	r1, #0
   18968:	beq	189e0 <mount@plt+0x6928>
   1896c:	ldrh	r8, [r1], #4
   18970:	add	r4, sp, #636	; 0x27c
   18974:	mov	r3, #128	; 0x80
   18978:	sub	r7, r8, #4
   1897c:	mov	r2, r7
   18980:	mov	r0, r4
   18984:	bl	11c98 <__memcpy_chk@plt>
   18988:	add	r3, sp, #768	; 0x300
   1898c:	add	r3, r3, r7
   18990:	mov	r2, #0
   18994:	strb	r2, [r3, #-132]	; 0xffffff7c
   18998:	ldrb	r2, [sp, #636]	; 0x27c
   1899c:	cmp	r2, #0
   189a0:	bne	189d8 <mount@plt+0x6920>
   189a4:	cmp	r7, #0
   189a8:	ble	189d8 <mount@plt+0x6920>
   189ac:	add	r3, sp, #628	; 0x274
   189b0:	add	r3, r3, #3
   189b4:	add	r1, r3, r8
   189b8:	mov	r0, #64	; 0x40
   189bc:	mov	r3, r4
   189c0:	b	189c8 <mount@plt+0x6910>
   189c4:	ldrb	r2, [r3, #1]!
   189c8:	cmp	r2, #0
   189cc:	strbeq	r0, [r3]
   189d0:	cmp	r3, r1
   189d4:	bne	189c4 <mount@plt+0x690c>
   189d8:	str	r4, [sp, #616]	; 0x268
   189dc:	str	r4, [sp, #52]	; 0x34
   189e0:	ldr	r3, [sp, #12]
   189e4:	ldr	r0, [r6, #16]
   189e8:	cmp	r3, #0
   189ec:	ldrne	r3, [r3, #4]
   189f0:	strne	r3, [sp, #576]	; 0x240
   189f4:	cmp	r0, #0
   189f8:	beq	18a0c <mount@plt+0x6954>
   189fc:	add	r1, sp, #32
   18a00:	bl	16a48 <mount@plt+0x4990>
   18a04:	cmp	r0, #0
   18a08:	beq	18a34 <mount@plt+0x697c>
   18a0c:	add	r0, sp, #32
   18a10:	bl	18800 <mount@plt+0x6748>
   18a14:	ldr	r3, [pc, #264]	; 18b24 <mount@plt+0x6a6c>
   18a18:	ldr	r3, [r3, #1284]	; 0x504
   18a1c:	cmp	r3, #0
   18a20:	bne	18af8 <mount@plt+0x6a40>
   18a24:	ldr	r3, [pc, #252]	; 18b28 <mount@plt+0x6a70>
   18a28:	ldr	r3, [r3]
   18a2c:	cmp	r3, #0
   18a30:	bne	18a50 <mount@plt+0x6998>
   18a34:	ldr	r2, [sp, #764]	; 0x2fc
   18a38:	ldr	r3, [r5]
   18a3c:	mov	r0, #0
   18a40:	cmp	r2, r3
   18a44:	bne	18b18 <mount@plt+0x6a60>
   18a48:	add	sp, sp, #768	; 0x300
   18a4c:	pop	{r4, r5, r6, r7, r8, pc}
   18a50:	ldr	r3, [sp, #28]
   18a54:	cmp	r3, #0
   18a58:	beq	18a80 <mount@plt+0x69c8>
   18a5c:	ldrb	r3, [r3, #4]
   18a60:	ldr	r0, [pc, #196]	; 18b2c <mount@plt+0x6a74>
   18a64:	tst	r3, #1
   18a68:	movne	r1, #45	; 0x2d
   18a6c:	moveq	r1, #60	; 0x3c
   18a70:	tst	r3, #2
   18a74:	movne	r2, #45	; 0x2d
   18a78:	moveq	r2, #62	; 0x3e
   18a7c:	bl	14b8c <mount@plt+0x2ad4>
   18a80:	ldr	r3, [sp, #8]
   18a84:	cmp	r3, #0
   18a88:	beq	18ab4 <mount@plt+0x69fc>
   18a8c:	ldr	r2, [r3, #8]
   18a90:	ldr	r0, [pc, #152]	; 18b30 <mount@plt+0x6a78>
   18a94:	ldr	r1, [r3, #4]
   18a98:	lsr	r3, r2, #12
   18a9c:	uxtb	ip, r2
   18aa0:	bic	r3, r3, #255	; 0xff
   18aa4:	and	r2, r0, r2, lsr #8
   18aa8:	orr	r3, r3, ip
   18aac:	ldr	r0, [pc, #128]	; 18b34 <mount@plt+0x6a7c>
   18ab0:	bl	14b8c <mount@plt+0x2ad4>
   18ab4:	ldr	r4, [sp, #16]
   18ab8:	cmp	r4, #0
   18abc:	beq	18a34 <mount@plt+0x697c>
   18ac0:	ldrh	r6, [r4]
   18ac4:	ldr	r0, [pc, #108]	; 18b38 <mount@plt+0x6a80>
   18ac8:	bl	14b8c <mount@plt+0x2ad4>
   18acc:	sub	r6, r6, #4
   18ad0:	lsrs	r6, r6, #2
   18ad4:	beq	18a34 <mount@plt+0x697c>
   18ad8:	ldr	r7, [pc, #92]	; 18b3c <mount@plt+0x6a84>
   18adc:	add	r6, r4, r6, lsl #2
   18ae0:	ldr	r1, [r4, #4]!
   18ae4:	mov	r0, r7
   18ae8:	bl	14b8c <mount@plt+0x2ad4>
   18aec:	cmp	r4, r6
   18af0:	bne	18ae0 <mount@plt+0x6a28>
   18af4:	b	18a34 <mount@plt+0x697c>
   18af8:	add	r0, sp, #4
   18afc:	mov	r1, #5
   18b00:	bl	14d58 <mount@plt+0x2ca0>
   18b04:	ldr	r3, [pc, #28]	; 18b28 <mount@plt+0x6a70>
   18b08:	ldr	r3, [r3]
   18b0c:	cmp	r3, #0
   18b10:	beq	18a34 <mount@plt+0x697c>
   18b14:	b	18a50 <mount@plt+0x6998>
   18b18:	bl	11c2c <__stack_chk_fail@plt>
   18b1c:	ldrdeq	fp, [r3], -r8
   18b20:	andeq	r9, r2, r0, lsl #5
   18b24:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   18b28:	andeq	r1, r4, r4, ror pc
   18b2c:	andeq	r9, r2, ip, asr r2
   18b30:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   18b34:	andeq	r9, r2, r4, lsl #5
   18b38:	muleq	r2, r8, r2
   18b3c:	andeq	r9, r2, r0, lsr #5
   18b40:	push	{r4, r5, r6, r7, lr}
   18b44:	add	ip, r0, #280	; 0x118
   18b48:	ldr	r5, [pc, #284]	; 18c6c <mount@plt+0x6bb4>
   18b4c:	mov	r4, r0
   18b50:	sub	sp, sp, #28
   18b54:	ldr	r2, [r5]
   18b58:	mov	r3, #17
   18b5c:	subs	r0, r1, #0
   18b60:	strh	r3, [ip, #2]
   18b64:	str	r2, [sp, #20]
   18b68:	strh	r3, [r4, #18]
   18b6c:	beq	18b88 <mount@plt+0x6ad0>
   18b70:	ldrh	r3, [r4, #8]
   18b74:	mov	r1, r4
   18b78:	str	r3, [r4, #20]
   18b7c:	bl	16a48 <mount@plt+0x4990>
   18b80:	cmp	r0, #0
   18b84:	beq	18c48 <mount@plt+0x6b90>
   18b88:	mov	r0, r4
   18b8c:	bl	15fd8 <mount@plt+0x3f20>
   18b90:	ldrh	r0, [r4, #8]
   18b94:	cmp	r0, #3
   18b98:	bne	18c1c <mount@plt+0x6b64>
   18b9c:	ldr	r6, [r4, #572]	; 0x23c
   18ba0:	ldr	r7, [pc, #200]	; 18c70 <mount@plt+0x6bb8>
   18ba4:	cmp	r6, #0
   18ba8:	beq	18c40 <mount@plt+0x6b88>
   18bac:	ldr	r3, [pc, #192]	; 18c74 <mount@plt+0x6bbc>
   18bb0:	ldr	r3, [r3]
   18bb4:	cmp	r3, #0
   18bb8:	beq	18c60 <mount@plt+0x6ba8>
   18bbc:	mov	r0, r6
   18bc0:	bl	21540 <mount@plt+0xf488>
   18bc4:	mov	r2, r0
   18bc8:	mov	r0, r7
   18bcc:	mov	r3, #0
   18bd0:	ldr	r1, [pc, #160]	; 18c78 <mount@plt+0x6bc0>
   18bd4:	bl	16388 <mount@plt+0x42d0>
   18bd8:	ldr	r2, [pc, #156]	; 18c7c <mount@plt+0x6bc4>
   18bdc:	mov	r3, #0
   18be0:	mov	r0, r2
   18be4:	ldr	r1, [pc, #132]	; 18c70 <mount@plt+0x6bb8>
   18be8:	bl	16388 <mount@plt+0x42d0>
   18bec:	add	r0, r4, #560	; 0x230
   18bf0:	bl	17034 <mount@plt+0x4f7c>
   18bf4:	ldr	r3, [pc, #132]	; 18c80 <mount@plt+0x6bc8>
   18bf8:	ldr	r0, [r3]
   18bfc:	cmp	r0, #0
   18c00:	bne	18c50 <mount@plt+0x6b98>
   18c04:	ldr	r2, [sp, #20]
   18c08:	ldr	r3, [r5]
   18c0c:	cmp	r2, r3
   18c10:	bne	18c68 <mount@plt+0x6bb0>
   18c14:	add	sp, sp, #28
   18c18:	pop	{r4, r5, r6, r7, pc}
   18c1c:	rev16	r0, r0
   18c20:	mov	r2, #16
   18c24:	uxth	r0, r0
   18c28:	add	r1, sp, #4
   18c2c:	bl	21848 <mount@plt+0xf790>
   18c30:	ldr	r6, [r4, #572]	; 0x23c
   18c34:	cmp	r6, #0
   18c38:	mov	r7, r0
   18c3c:	bne	18bac <mount@plt+0x6af4>
   18c40:	ldr	r2, [pc, #40]	; 18c70 <mount@plt+0x6bb8>
   18c44:	b	18bc8 <mount@plt+0x6b10>
   18c48:	mov	r0, #1
   18c4c:	b	18c04 <mount@plt+0x6b4c>
   18c50:	mov	r0, r4
   18c54:	bl	14cf4 <mount@plt+0x2c3c>
   18c58:	mov	r0, #0
   18c5c:	b	18c04 <mount@plt+0x6b4c>
   18c60:	bl	13970 <mount@plt+0x18b8>
   18c64:	b	18bbc <mount@plt+0x6b04>
   18c68:	bl	11c2c <__stack_chk_fail@plt>
   18c6c:	ldrdeq	fp, [r3], -r8
   18c70:	andeq	r9, r2, r0, lsl #5
   18c74:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   18c78:			; <UNDEFINED> instruction: 0x00027db8
   18c7c:	andeq	sl, r2, r8, ror #29
   18c80:	andeq	r1, r4, r4, ror pc
   18c84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18c88:	sub	sp, sp, #648	; 0x288
   18c8c:	ldr	r6, [pc, #892]	; 19010 <mount@plt+0x6f58>
   18c90:	mov	r4, r0
   18c94:	mov	r2, #600	; 0x258
   18c98:	ldr	r3, [r6]
   18c9c:	mov	r7, r1
   18ca0:	add	r0, sp, #40	; 0x28
   18ca4:	mov	r1, #0
   18ca8:	str	r3, [sp, #644]	; 0x284
   18cac:	bl	11e78 <memset@plt>
   18cb0:	mov	r2, r4
   18cb4:	add	r0, sp, #8
   18cb8:	ldr	r3, [r2], #32
   18cbc:	mov	r1, #7
   18cc0:	sub	r3, r3, #32
   18cc4:	bl	266b0 <mount@plt+0x145f8>
   18cc8:	ldr	r2, [sp, #32]
   18ccc:	cmp	r2, #0
   18cd0:	beq	19004 <mount@plt+0x6f4c>
   18cd4:	ldrb	r0, [r4, #17]
   18cd8:	ldr	r1, [r4, #20]
   18cdc:	mov	r3, #7
   18ce0:	str	r0, [sp, #44]	; 0x2c
   18ce4:	str	r1, [sp, #600]	; 0x258
   18ce8:	str	r3, [sp, #588]	; 0x24c
   18cec:	ldr	r3, [sp, #8]
   18cf0:	ldr	r2, [r2, #4]
   18cf4:	cmp	r3, #0
   18cf8:	str	r2, [sp, #592]	; 0x250
   18cfc:	ldr	r2, [r4, #28]
   18d00:	addne	r5, r3, #4
   18d04:	str	r2, [sp, #620]	; 0x26c
   18d08:	moveq	r5, r3
   18d0c:	ldrne	r2, [r3, #4]
   18d10:	ldr	r3, [sp, #28]
   18d14:	strne	r2, [sp, #612]	; 0x264
   18d18:	strne	r2, [sp, #580]	; 0x244
   18d1c:	cmp	r3, #0
   18d20:	ldrh	r0, [r4, #18]
   18d24:	ldr	r1, [r4, #24]
   18d28:	ldrne	r3, [r3, #4]
   18d2c:	ldr	r4, [sp, #16]
   18d30:	ldr	r9, [sp, #20]
   18d34:	strne	r3, [sp, #604]	; 0x25c
   18d38:	ldr	r3, [sp, #24]
   18d3c:	cmp	r4, #0
   18d40:	addne	r4, r4, #4
   18d44:	cmp	r9, #0
   18d48:	addne	r9, r9, #4
   18d4c:	cmp	r3, #0
   18d50:	moveq	r8, r3
   18d54:	strh	r0, [sp, #48]	; 0x30
   18d58:	str	r1, [sp, #616]	; 0x268
   18d5c:	add	r0, sp, #40	; 0x28
   18d60:	ldr	r1, [r7, #16]
   18d64:	ldrne	sl, [r3, #4]
   18d68:	movne	r8, #1
   18d6c:	moveq	sl, r8
   18d70:	bl	18b40 <mount@plt+0x6a88>
   18d74:	subs	r7, r0, #0
   18d78:	bne	18eb4 <mount@plt+0x6dfc>
   18d7c:	ldr	r3, [pc, #656]	; 19014 <mount@plt+0x6f5c>
   18d80:	ldr	r3, [r3]
   18d84:	cmp	r3, #0
   18d88:	beq	18e38 <mount@plt+0x6d80>
   18d8c:	cmp	r5, #0
   18d90:	beq	18df0 <mount@plt+0x6d38>
   18d94:	ldr	r1, [r5, #4]
   18d98:	ldr	r0, [pc, #632]	; 19018 <mount@plt+0x6f60>
   18d9c:	bl	14b8c <mount@plt+0x2ad4>
   18da0:	ldr	r1, [r5, #12]
   18da4:	ldr	r0, [pc, #624]	; 1901c <mount@plt+0x6f64>
   18da8:	bl	14b8c <mount@plt+0x2ad4>
   18dac:	ldr	r0, [pc, #620]	; 19020 <mount@plt+0x6f68>
   18db0:	bl	14b8c <mount@plt+0x2ad4>
   18db4:	ldr	r3, [r5, #20]
   18db8:	tst	r3, #1
   18dbc:	bne	18fac <mount@plt+0x6ef4>
   18dc0:	tst	r3, #2
   18dc4:	bne	18f9c <mount@plt+0x6ee4>
   18dc8:	tst	r3, #4
   18dcc:	bne	18f8c <mount@plt+0x6ed4>
   18dd0:	tst	r3, #8
   18dd4:	bne	18f7c <mount@plt+0x6ec4>
   18dd8:	tst	r3, #16
   18ddc:	bne	18f6c <mount@plt+0x6eb4>
   18de0:	cmp	r3, #0
   18de4:	beq	18f60 <mount@plt+0x6ea8>
   18de8:	ldr	r0, [pc, #564]	; 19024 <mount@plt+0x6f6c>
   18dec:	bl	14b8c <mount@plt+0x2ad4>
   18df0:	cmp	r4, #0
   18df4:	beq	18e10 <mount@plt+0x6d58>
   18df8:	ldr	r0, [pc, #552]	; 19028 <mount@plt+0x6f70>
   18dfc:	bl	14b8c <mount@plt+0x2ad4>
   18e00:	mov	r0, r4
   18e04:	bl	14e4c <mount@plt+0x2d94>
   18e08:	ldr	r0, [pc, #540]	; 1902c <mount@plt+0x6f74>
   18e0c:	bl	14b8c <mount@plt+0x2ad4>
   18e10:	cmp	r9, #0
   18e14:	beq	18e30 <mount@plt+0x6d78>
   18e18:	ldr	r0, [pc, #528]	; 19030 <mount@plt+0x6f78>
   18e1c:	bl	14b8c <mount@plt+0x2ad4>
   18e20:	mov	r0, r9
   18e24:	bl	14e4c <mount@plt+0x2d94>
   18e28:	ldr	r0, [pc, #508]	; 1902c <mount@plt+0x6f74>
   18e2c:	bl	14b8c <mount@plt+0x2ad4>
   18e30:	cmp	r8, #0
   18e34:	bne	18ee4 <mount@plt+0x6e2c>
   18e38:	ldr	r8, [pc, #500]	; 19034 <mount@plt+0x6f7c>
   18e3c:	ldr	r3, [r8, #1288]	; 0x508
   18e40:	cmp	r3, #0
   18e44:	beq	18ea8 <mount@plt+0x6df0>
   18e48:	ldr	r4, [sp, #36]	; 0x24
   18e4c:	cmp	r4, #0
   18e50:	beq	18ea8 <mount@plt+0x6df0>
   18e54:	ldrh	r5, [r4]
   18e58:	ldr	r0, [pc, #472]	; 19038 <mount@plt+0x6f80>
   18e5c:	sub	r5, r5, #4
   18e60:	lsr	r5, r5, #3
   18e64:	mov	r1, r5
   18e68:	bl	14b8c <mount@plt+0x2ad4>
   18e6c:	cmp	r5, #0
   18e70:	beq	18ea8 <mount@plt+0x6df0>
   18e74:	add	r4, r4, #12
   18e78:	ldr	r9, [pc, #444]	; 1903c <mount@plt+0x6f84>
   18e7c:	add	r5, r4, r5, lsl #3
   18e80:	ldr	r0, [r4, #-4]
   18e84:	ldrb	r3, [r4, #-5]
   18e88:	ldrb	r2, [r4, #-6]
   18e8c:	ldrh	r1, [r4, #-8]
   18e90:	str	r0, [sp]
   18e94:	add	r4, r4, #8
   18e98:	mov	r0, r9
   18e9c:	bl	14b8c <mount@plt+0x2ad4>
   18ea0:	cmp	r4, r5
   18ea4:	bne	18e80 <mount@plt+0x6dc8>
   18ea8:	ldr	r3, [r8, #1284]	; 0x504
   18eac:	cmp	r3, #0
   18eb0:	bne	18ed4 <mount@plt+0x6e1c>
   18eb4:	mov	r7, #0
   18eb8:	ldr	r2, [sp, #644]	; 0x284
   18ebc:	ldr	r3, [r6]
   18ec0:	mov	r0, r7
   18ec4:	cmp	r2, r3
   18ec8:	bne	1900c <mount@plt+0x6f54>
   18ecc:	add	sp, sp, #648	; 0x288
   18ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18ed4:	add	r0, sp, #8
   18ed8:	mov	r1, #6
   18edc:	bl	14d58 <mount@plt+0x2ca0>
   18ee0:	b	18eb8 <mount@plt+0x6e00>
   18ee4:	ldr	r0, [pc, #340]	; 19040 <mount@plt+0x6f88>
   18ee8:	bl	14b8c <mount@plt+0x2ad4>
   18eec:	uxth	r1, sl
   18ef0:	ldr	r0, [pc, #332]	; 19044 <mount@plt+0x6f8c>
   18ef4:	bl	14b8c <mount@plt+0x2ad4>
   18ef8:	lsr	sl, sl, #16
   18efc:	ldr	r0, [pc, #324]	; 19048 <mount@plt+0x6f90>
   18f00:	bl	14b8c <mount@plt+0x2ad4>
   18f04:	cmp	sl, #0
   18f08:	beq	18fc8 <mount@plt+0x6f10>
   18f0c:	cmp	sl, #1
   18f10:	uxth	r3, sl
   18f14:	beq	18fd4 <mount@plt+0x6f1c>
   18f18:	cmp	r3, #2
   18f1c:	beq	18fbc <mount@plt+0x6f04>
   18f20:	cmp	r3, #3
   18f24:	beq	18fec <mount@plt+0x6f34>
   18f28:	cmp	r3, #4
   18f2c:	beq	18ff8 <mount@plt+0x6f40>
   18f30:	cmp	r3, #5
   18f34:	beq	18fe0 <mount@plt+0x6f28>
   18f38:	mov	r1, sl
   18f3c:	ldr	r0, [pc, #264]	; 1904c <mount@plt+0x6f94>
   18f40:	bl	14b8c <mount@plt+0x2ad4>
   18f44:	ldr	r8, [pc, #232]	; 19034 <mount@plt+0x6f7c>
   18f48:	ldr	r0, [pc, #220]	; 1902c <mount@plt+0x6f74>
   18f4c:	bl	14b8c <mount@plt+0x2ad4>
   18f50:	ldr	r3, [r8, #1288]	; 0x508
   18f54:	cmp	r3, #0
   18f58:	bne	18e48 <mount@plt+0x6d90>
   18f5c:	b	18ea8 <mount@plt+0x6df0>
   18f60:	ldr	r0, [pc, #232]	; 19050 <mount@plt+0x6f98>
   18f64:	bl	14b8c <mount@plt+0x2ad4>
   18f68:	b	18de8 <mount@plt+0x6d30>
   18f6c:	ldr	r0, [pc, #224]	; 19054 <mount@plt+0x6f9c>
   18f70:	bl	14b8c <mount@plt+0x2ad4>
   18f74:	ldr	r3, [r5, #20]
   18f78:	b	18de0 <mount@plt+0x6d28>
   18f7c:	ldr	r0, [pc, #212]	; 19058 <mount@plt+0x6fa0>
   18f80:	bl	14b8c <mount@plt+0x2ad4>
   18f84:	ldr	r3, [r5, #20]
   18f88:	b	18dd8 <mount@plt+0x6d20>
   18f8c:	ldr	r0, [pc, #200]	; 1905c <mount@plt+0x6fa4>
   18f90:	bl	14b8c <mount@plt+0x2ad4>
   18f94:	ldr	r3, [r5, #20]
   18f98:	b	18dd0 <mount@plt+0x6d18>
   18f9c:	ldr	r0, [pc, #188]	; 19060 <mount@plt+0x6fa8>
   18fa0:	bl	14b8c <mount@plt+0x2ad4>
   18fa4:	ldr	r3, [r5, #20]
   18fa8:	b	18dc8 <mount@plt+0x6d10>
   18fac:	ldr	r0, [pc, #176]	; 19064 <mount@plt+0x6fac>
   18fb0:	bl	14b8c <mount@plt+0x2ad4>
   18fb4:	ldr	r3, [r5, #20]
   18fb8:	b	18dc0 <mount@plt+0x6d08>
   18fbc:	ldr	r0, [pc, #164]	; 19068 <mount@plt+0x6fb0>
   18fc0:	bl	14b8c <mount@plt+0x2ad4>
   18fc4:	b	18f44 <mount@plt+0x6e8c>
   18fc8:	ldr	r0, [pc, #156]	; 1906c <mount@plt+0x6fb4>
   18fcc:	bl	14b8c <mount@plt+0x2ad4>
   18fd0:	b	18f44 <mount@plt+0x6e8c>
   18fd4:	ldr	r0, [pc, #148]	; 19070 <mount@plt+0x6fb8>
   18fd8:	bl	14b8c <mount@plt+0x2ad4>
   18fdc:	b	18f44 <mount@plt+0x6e8c>
   18fe0:	ldr	r0, [pc, #140]	; 19074 <mount@plt+0x6fbc>
   18fe4:	bl	14b8c <mount@plt+0x2ad4>
   18fe8:	b	18f44 <mount@plt+0x6e8c>
   18fec:	ldr	r0, [pc, #132]	; 19078 <mount@plt+0x6fc0>
   18ff0:	bl	14b8c <mount@plt+0x2ad4>
   18ff4:	b	18f44 <mount@plt+0x6e8c>
   18ff8:	ldr	r0, [pc, #124]	; 1907c <mount@plt+0x6fc4>
   18ffc:	bl	14b8c <mount@plt+0x2ad4>
   19000:	b	18f44 <mount@plt+0x6e8c>
   19004:	mvn	r7, #0
   19008:	b	18eb8 <mount@plt+0x6e00>
   1900c:	bl	11c2c <__stack_chk_fail@plt>
   19010:	ldrdeq	fp, [r3], -r8
   19014:	andeq	r1, r4, r4, ror pc
   19018:	andeq	r9, r2, r4, lsr #5
   1901c:			; <UNDEFINED> instruction: 0x000292b0
   19020:	andeq	r9, r2, r0, asr #5
   19024:	andeq	r9, r2, r4, lsl #6
   19028:	andeq	r9, r2, r8, lsl #6
   1902c:	andeq	r9, r2, ip, asr #4
   19030:	andeq	r9, r2, r4, lsl r3
   19034:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   19038:	andeq	r9, r2, r0, ror #6
   1903c:	andeq	r9, r2, r4, ror r3
   19040:	andeq	r9, r2, r0, lsr #6
   19044:	andeq	r9, r2, ip, lsr #6
   19048:	andeq	r9, r2, r4, lsr r3
   1904c:	andeq	r7, r2, r4, ror #30
   19050:	andeq	r9, r2, r0, lsl #6
   19054:	strdeq	r9, [r2], -r8
   19058:	andeq	r9, r2, ip, ror #5
   1905c:	andeq	r9, r2, r0, ror #5
   19060:	ldrdeq	r9, [r2], -r4
   19064:	andeq	r9, r2, ip, asr #5
   19068:	andeq	r9, r2, r8, asr #6
   1906c:	andeq	r9, r2, ip, lsr r3
   19070:	andeq	r9, r2, r4, asr #6
   19074:	andeq	r9, r2, ip, asr r3
   19078:	andeq	r9, r2, ip, asr #6
   1907c:	andeq	r9, r2, r4, asr r3
   19080:	push	{r4, r5, r6, lr}
   19084:	sub	sp, sp, #672	; 0x2a0
   19088:	ldr	r4, [pc, #244]	; 19184 <mount@plt+0x70cc>
   1908c:	mov	r6, r0
   19090:	mov	r2, #600	; 0x258
   19094:	ldr	r3, [r4]
   19098:	mov	r5, r1
   1909c:	add	r0, sp, #64	; 0x40
   190a0:	mov	r1, #0
   190a4:	str	r3, [sp, #668]	; 0x29c
   190a8:	bl	11e78 <memset@plt>
   190ac:	add	r2, sp, #52	; 0x34
   190b0:	add	r3, sp, #48	; 0x30
   190b4:	add	ip, sp, #44	; 0x2c
   190b8:	add	r1, sp, #40	; 0x28
   190bc:	str	r2, [sp, #20]
   190c0:	str	r3, [sp, #16]
   190c4:	add	r2, sp, #36	; 0x24
   190c8:	add	r3, sp, #32
   190cc:	str	r1, [sp, #8]
   190d0:	str	r2, [sp, #4]
   190d4:	str	r3, [sp]
   190d8:	mov	r0, r6
   190dc:	add	r3, sp, #28
   190e0:	str	ip, [sp, #12]
   190e4:	add	r2, sp, #56	; 0x38
   190e8:	ldr	r1, [pc, #152]	; 19188 <mount@plt+0x70d0>
   190ec:	bl	11fa4 <sscanf@plt>
   190f0:	ldr	r3, [sp, #68]	; 0x44
   190f4:	cmp	r3, #3
   190f8:	beq	19170 <mount@plt+0x70b8>
   190fc:	cmp	r3, #2
   19100:	bne	19110 <mount@plt+0x7058>
   19104:	ldr	r3, [r5]
   19108:	tst	r3, #128	; 0x80
   1910c:	beq	19154 <mount@plt+0x709c>
   19110:	add	r0, sp, #28
   19114:	ldr	lr, [sp, #44]	; 0x2c
   19118:	ldm	r0, {r0, r2, r3}
   1911c:	ldr	ip, [sp, #48]	; 0x30
   19120:	ldr	r1, [r5, #16]
   19124:	strh	r2, [sp, #72]	; 0x48
   19128:	ldr	r2, [sp, #52]	; 0x34
   1912c:	str	r0, [sp, #68]	; 0x44
   19130:	str	r3, [sp, #636]	; 0x27c
   19134:	str	r3, [sp, #604]	; 0x25c
   19138:	add	r0, sp, #64	; 0x40
   1913c:	mov	r3, #7
   19140:	str	lr, [sp, #616]	; 0x268
   19144:	str	ip, [sp, #628]	; 0x274
   19148:	str	r2, [sp, #624]	; 0x270
   1914c:	str	r3, [sp, #612]	; 0x264
   19150:	bl	18b40 <mount@plt+0x6a88>
   19154:	ldr	r2, [sp, #668]	; 0x29c
   19158:	ldr	r3, [r4]
   1915c:	mov	r0, #0
   19160:	cmp	r2, r3
   19164:	bne	19180 <mount@plt+0x70c8>
   19168:	add	sp, sp, #672	; 0x2a0
   1916c:	pop	{r4, r5, r6, pc}
   19170:	ldr	r3, [r5]
   19174:	tst	r3, #256	; 0x100
   19178:	bne	19110 <mount@plt+0x7058>
   1917c:	b	19154 <mount@plt+0x709c>
   19180:	bl	11c2c <__stack_chk_fail@plt>
   19184:	ldrdeq	fp, [r3], -r8
   19188:	andeq	r9, r2, r8, lsl #7
   1918c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19190:	sub	sp, sp, #824	; 0x338
   19194:	ldr	r5, [pc, #756]	; 19490 <mount@plt+0x73d8>
   19198:	mov	r6, r0
   1919c:	mov	r7, r1
   191a0:	ldr	ip, [r5]
   191a4:	mov	r1, #0
   191a8:	mov	r4, r2
   191ac:	add	r0, sp, #24
   191b0:	mov	r2, #600	; 0x258
   191b4:	mov	r8, r3
   191b8:	str	ip, [sp, #820]	; 0x334
   191bc:	ldr	sl, [sp, #868]	; 0x364
   191c0:	ldr	r9, [sp, #872]	; 0x368
   191c4:	bl	11e78 <memset@plt>
   191c8:	add	r1, sp, #304	; 0x130
   191cc:	mov	r3, #16
   191d0:	mov	ip, #7
   191d4:	strh	r3, [r1, #2]
   191d8:	mov	r2, #64	; 0x40
   191dc:	mov	r1, #0
   191e0:	add	r0, sp, #692	; 0x2b4
   191e4:	strh	r3, [sp, #42]	; 0x2a
   191e8:	str	ip, [sp, #572]	; 0x23c
   191ec:	str	sl, [sp, #576]	; 0x240
   191f0:	str	r9, [sp, #580]	; 0x244
   191f4:	bl	11e78 <memset@plt>
   191f8:	add	r0, sp, #756	; 0x2f4
   191fc:	mov	r2, #64	; 0x40
   19200:	mov	r1, #0
   19204:	bl	11e78 <memset@plt>
   19208:	cmp	r6, #0
   1920c:	beq	19234 <mount@plt+0x717c>
   19210:	mvn	r3, #0
   19214:	mov	r0, r6
   19218:	add	r1, sp, #24
   1921c:	str	r4, [sp, #564]	; 0x234
   19220:	str	r7, [sp, #44]	; 0x2c
   19224:	str	r3, [sp, #568]	; 0x238
   19228:	bl	16a48 <mount@plt+0x4990>
   1922c:	cmp	r0, #0
   19230:	beq	193b8 <mount@plt+0x7300>
   19234:	ldr	r6, [pc, #600]	; 19494 <mount@plt+0x73dc>
   19238:	add	r0, sp, #24
   1923c:	bl	15fd8 <mount@plt+0x3f20>
   19240:	ldr	r3, [r6, #220]	; 0xdc
   19244:	cmp	r3, #0
   19248:	bne	193a0 <mount@plt+0x72e8>
   1924c:	mov	r0, r7
   19250:	add	r1, sp, #692	; 0x2b4
   19254:	bl	1f294 <mount@plt+0xd1dc>
   19258:	mov	r7, r0
   1925c:	cmn	r4, #1
   19260:	moveq	r3, #42	; 0x2a
   19264:	strbeq	r3, [sp, #756]	; 0x2f4
   19268:	beq	192fc <mount@plt+0x7244>
   1926c:	ldr	r3, [r6, #220]	; 0xdc
   19270:	cmp	r3, #0
   19274:	beq	192f0 <mount@plt+0x7238>
   19278:	cmp	r4, #0
   1927c:	beq	19434 <mount@plt+0x737c>
   19280:	ble	192f0 <mount@plt+0x7238>
   19284:	ldr	r0, [pc, #524]	; 19498 <mount@plt+0x73e0>
   19288:	bl	11d4c <getenv@plt>
   1928c:	ldr	ip, [pc, #520]	; 1949c <mount@plt+0x73e4>
   19290:	ldr	r2, [pc, #520]	; 194a0 <mount@plt+0x73e8>
   19294:	mov	r3, #64	; 0x40
   19298:	mov	r1, r3
   1929c:	str	r2, [sp]
   192a0:	str	r4, [sp, #8]
   192a4:	mov	r2, #1
   192a8:	cmp	r0, #0
   192ac:	moveq	r0, ip
   192b0:	str	r0, [sp, #4]
   192b4:	add	r0, sp, #756	; 0x2f4
   192b8:	bl	12088 <__snprintf_chk@plt>
   192bc:	ldr	r1, [pc, #480]	; 194a4 <mount@plt+0x73ec>
   192c0:	add	r0, sp, #756	; 0x2f4
   192c4:	bl	11ff8 <fopen64@plt>
   192c8:	subs	r6, r0, #0
   192cc:	beq	192f0 <mount@plt+0x7238>
   192d0:	add	r2, sp, #756	; 0x2f4
   192d4:	ldr	r1, [pc, #460]	; 194a8 <mount@plt+0x73f0>
   192d8:	bl	11e9c <fscanf@plt>
   192dc:	cmp	r0, #1
   192e0:	mov	r9, r0
   192e4:	beq	19454 <mount@plt+0x739c>
   192e8:	mov	r0, r6
   192ec:	bl	11f14 <fclose@plt>
   192f0:	add	r1, sp, #756	; 0x2f4
   192f4:	mov	r0, r4
   192f8:	bl	1f294 <mount@plt+0xd1dc>
   192fc:	mov	r3, #0
   19300:	add	r2, sp, #756	; 0x2f4
   19304:	mov	r0, r7
   19308:	ldr	r1, [pc, #412]	; 194ac <mount@plt+0x73f4>
   1930c:	bl	16388 <mount@plt+0x42d0>
   19310:	ldr	r3, [sp, #856]	; 0x358
   19314:	cmp	r3, #1
   19318:	beq	193d4 <mount@plt+0x731c>
   1931c:	ldr	r2, [pc, #396]	; 194b0 <mount@plt+0x73f8>
   19320:	mov	r3, #0
   19324:	mov	r0, r2
   19328:	ldr	r1, [pc, #388]	; 194b4 <mount@plt+0x73fc>
   1932c:	bl	16388 <mount@plt+0x42d0>
   19330:	ldr	r3, [pc, #384]	; 194b8 <mount@plt+0x7400>
   19334:	mov	r2, #0
   19338:	str	r2, [sp, #20]
   1933c:	ldr	r3, [r3, #1260]	; 0x4ec
   19340:	cmp	r3, r2
   19344:	beq	19368 <mount@plt+0x72b0>
   19348:	cmp	r4, r2
   1934c:	beq	19424 <mount@plt+0x736c>
   19350:	bgt	19408 <mount@plt+0x7350>
   19354:	ldr	r1, [pc, #352]	; 194bc <mount@plt+0x7404>
   19358:	ldr	r0, [pc, #352]	; 194c0 <mount@plt+0x7408>
   1935c:	bl	14b8c <mount@plt+0x2ad4>
   19360:	ldr	r0, [sp, #20]
   19364:	bl	11b78 <free@plt>
   19368:	ldr	r3, [pc, #340]	; 194c4 <mount@plt+0x740c>
   1936c:	ldr	r0, [r3]
   19370:	cmp	r0, #0
   19374:	beq	193bc <mount@plt+0x7304>
   19378:	add	r3, sp, #888	; 0x378
   1937c:	str	r8, [sp, #8]
   19380:	ldrd	r2, [r3]
   19384:	ldr	r0, [pc, #316]	; 194c8 <mount@plt+0x7410>
   19388:	strd	r2, [sp]
   1938c:	add	r3, sp, #880	; 0x370
   19390:	ldrd	r2, [r3]
   19394:	bl	14b8c <mount@plt+0x2ad4>
   19398:	mov	r0, #0
   1939c:	b	193bc <mount@plt+0x7304>
   193a0:	mov	r0, r7
   193a4:	add	r1, sp, #692	; 0x2b4
   193a8:	mov	r2, #64	; 0x40
   193ac:	bl	21010 <mount@plt+0xef58>
   193b0:	mov	r7, r0
   193b4:	b	1925c <mount@plt+0x71a4>
   193b8:	mov	r0, #1
   193bc:	ldr	r2, [sp, #820]	; 0x334
   193c0:	ldr	r3, [r5]
   193c4:	cmp	r2, r3
   193c8:	bne	1948c <mount@plt+0x73d4>
   193cc:	add	sp, sp, #824	; 0x338
   193d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   193d4:	add	r1, sp, #628	; 0x274
   193d8:	ldr	r0, [sp, #864]	; 0x360
   193dc:	bl	1f294 <mount@plt+0xd1dc>
   193e0:	add	r1, sp, #660	; 0x294
   193e4:	mov	r6, r0
   193e8:	ldr	r0, [sp, #860]	; 0x35c
   193ec:	bl	1f294 <mount@plt+0xd1dc>
   193f0:	mov	r3, #0
   193f4:	ldr	r1, [pc, #176]	; 194ac <mount@plt+0x73f4>
   193f8:	mov	r2, r0
   193fc:	mov	r0, r6
   19400:	bl	16388 <mount@plt+0x42d0>
   19404:	b	19330 <mount@plt+0x7278>
   19408:	mov	r0, r4
   1940c:	add	r1, sp, #20
   19410:	bl	12034 <getpidcon@plt>
   19414:	ldr	r1, [sp, #20]
   19418:	cmp	r1, #0
   1941c:	bne	19358 <mount@plt+0x72a0>
   19420:	b	19354 <mount@plt+0x729c>
   19424:	add	r1, sp, #20
   19428:	ldr	r0, [pc, #156]	; 194cc <mount@plt+0x7414>
   1942c:	bl	11f44 <security_get_initial_context@plt>
   19430:	b	19414 <mount@plt+0x735c>
   19434:	ldr	r3, [pc, #144]	; 194cc <mount@plt+0x7414>
   19438:	add	r2, sp, #760	; 0x2f8
   1943c:	ldm	r3, {r0, r1}
   19440:	lsr	r3, r1, #16
   19444:	str	r0, [sp, #756]	; 0x2f4
   19448:	strh	r1, [r2]
   1944c:	strb	r3, [sp, #762]	; 0x2fa
   19450:	b	192fc <mount@plt+0x7244>
   19454:	add	r0, sp, #756	; 0x2f4
   19458:	bl	11e00 <strlen@plt>
   1945c:	ldr	r3, [pc, #108]	; 194d0 <mount@plt+0x7418>
   19460:	add	ip, sp, #756	; 0x2f4
   19464:	str	r3, [sp]
   19468:	str	r4, [sp, #4]
   1946c:	mov	r2, r9
   19470:	mvn	r3, #0
   19474:	rsb	r1, r0, #64	; 0x40
   19478:	add	r0, ip, r0
   1947c:	bl	12088 <__snprintf_chk@plt>
   19480:	mov	r0, r6
   19484:	bl	11f14 <fclose@plt>
   19488:	b	192fc <mount@plt+0x7244>
   1948c:	bl	11c2c <__stack_chk_fail@plt>
   19490:	ldrdeq	fp, [r3], -r8
   19494:	andeq	ip, r3, ip, lsr r2
   19498:	andeq	r7, r2, r4, lsl #28
   1949c:	strdeq	r7, [r2], -ip
   194a0:	andeq	r7, r2, ip, lsr #29
   194a4:	andeq	r9, r2, r8, lsr ip
   194a8:			; <UNDEFINED> instruction: 0x00027eb8
   194ac:			; <UNDEFINED> instruction: 0x00027db8
   194b0:	andeq	sl, r2, r8, ror #29
   194b4:	andeq	r9, r2, r0, lsl #5
   194b8:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   194bc:	andeq	r7, r2, r4, ror lr
   194c0:			; <UNDEFINED> instruction: 0x000293b4
   194c4:	andeq	r1, r4, r4, ror pc
   194c8:	andeq	r9, r2, r4, asr #7
   194cc:	andeq	r9, r2, r8, lsr #7
   194d0:			; <UNDEFINED> instruction: 0x000293b0
   194d4:	push	{r4, r5, r6, r8, r9, lr}
   194d8:	mov	r2, r0
   194dc:	ldr	r5, [pc, #228]	; 195c8 <mount@plt+0x7510>
   194e0:	ldr	r3, [r2], #44	; 0x2c
   194e4:	sub	sp, sp, #64	; 0x40
   194e8:	ldr	ip, [r5]
   194ec:	sub	r3, r3, #44	; 0x2c
   194f0:	mov	r4, r0
   194f4:	mov	r6, r1
   194f8:	add	r0, sp, #40	; 0x28
   194fc:	mov	r1, #4
   19500:	str	ip, [sp, #60]	; 0x3c
   19504:	bl	266b0 <mount@plt+0x145f8>
   19508:	ldr	r3, [sp, #44]	; 0x2c
   1950c:	cmp	r3, #0
   19510:	beq	19524 <mount@plt+0x746c>
   19514:	ldrh	r2, [r3]
   19518:	cmp	r2, #4
   1951c:	moveq	r3, #0
   19520:	ldrne	r3, [r3, #4]
   19524:	ldr	r2, [sp, #40]	; 0x28
   19528:	ldrb	r1, [r4, #19]
   1952c:	cmp	r2, #0
   19530:	moveq	r0, r2
   19534:	ldrne	r0, [r2, #4]
   19538:	ldrne	r2, [r2, #12]
   1953c:	mov	r8, #0
   19540:	str	r2, [sp, #16]
   19544:	str	r0, [sp, #12]
   19548:	mov	r9, #0
   1954c:	ldr	r0, [r6, #16]
   19550:	str	r1, [sp]
   19554:	ldr	r1, [r4, #28]
   19558:	ldr	r2, [r4, #24]
   1955c:	strd	r8, [sp, #32]
   19560:	strd	r8, [sp, #24]
   19564:	str	r1, [sp, #8]
   19568:	str	r2, [sp, #4]
   1956c:	ldr	r2, [r4, #20]
   19570:	ldrb	r1, [r4, #18]
   19574:	bl	1918c <mount@plt+0x70d4>
   19578:	subs	r4, r0, #0
   1957c:	bne	19590 <mount@plt+0x74d8>
   19580:	ldr	r3, [pc, #68]	; 195cc <mount@plt+0x7514>
   19584:	ldr	r3, [r3, #1284]	; 0x504
   19588:	cmp	r3, #0
   1958c:	bne	195ac <mount@plt+0x74f4>
   19590:	ldr	r2, [sp, #60]	; 0x3c
   19594:	ldr	r3, [r5]
   19598:	mov	r0, #0
   1959c:	cmp	r2, r3
   195a0:	bne	195c4 <mount@plt+0x750c>
   195a4:	add	sp, sp, #64	; 0x40
   195a8:	pop	{r4, r5, r6, r8, r9, pc}
   195ac:	ldr	r0, [pc, #28]	; 195d0 <mount@plt+0x7518>
   195b0:	bl	14b8c <mount@plt+0x2ad4>
   195b4:	mov	r1, r4
   195b8:	add	r0, sp, #40	; 0x28
   195bc:	bl	14d58 <mount@plt+0x2ca0>
   195c0:	b	19590 <mount@plt+0x74d8>
   195c4:	bl	11c2c <__stack_chk_fail@plt>
   195c8:	ldrdeq	fp, [r3], -r8
   195cc:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   195d0:	andeq	r9, r2, r4, ror #7
   195d4:	push	{r4, r5, lr}
   195d8:	sub	sp, sp, #20
   195dc:	ldr	r4, [pc, #312]	; 1971c <mount@plt+0x7664>
   195e0:	ldrb	r3, [r0, #16]
   195e4:	mov	ip, #0
   195e8:	ldr	r2, [r4]
   195ec:	sub	r3, r3, #1
   195f0:	str	r2, [sp, #12]
   195f4:	mov	r2, #256	; 0x100
   195f8:	str	r1, [sp]
   195fc:	stmib	sp, {r2, ip}
   19600:	cmp	r3, #39	; 0x27
   19604:	ldrls	pc, [pc, r3, lsl #2]
   19608:	b	19710 <mount@plt+0x7658>
   1960c:	ldrdeq	r9, [r1], -r4
   19610:	andeq	r9, r1, r0, ror #13
   19614:	andeq	r9, r1, r0, lsl r7
   19618:	andeq	r9, r1, r0, lsl r7
   1961c:	andeq	r9, r1, r0, lsl r7
   19620:	andeq	r9, r1, r0, lsl r7
   19624:	andeq	r9, r1, r0, lsl r7
   19628:	andeq	r9, r1, r0, lsl r7
   1962c:	andeq	r9, r1, r0, lsl r7
   19630:	andeq	r9, r1, r0, ror #13
   19634:	andeq	r9, r1, r0, lsl r7
   19638:	andeq	r9, r1, r0, lsl r7
   1963c:	andeq	r9, r1, r0, lsl r7
   19640:	andeq	r9, r1, r0, lsl r7
   19644:	andeq	r9, r1, r0, lsl r7
   19648:	strdeq	r9, [r1], -r8
   1964c:	andeq	r9, r1, r4, lsl #14
   19650:	andeq	r9, r1, r0, lsl r7
   19654:	andeq	r9, r1, r0, lsl r7
   19658:	andeq	r9, r1, r0, lsl r7
   1965c:	andeq	r9, r1, r0, lsl r7
   19660:	andeq	r9, r1, r0, lsl r7
   19664:	andeq	r9, r1, r0, lsl r7
   19668:	andeq	r9, r1, r0, lsl r7
   1966c:	andeq	r9, r1, r0, lsl r7
   19670:	andeq	r9, r1, r0, lsl r7
   19674:	andeq	r9, r1, r0, lsl r7
   19678:	andeq	r9, r1, r0, lsl r7
   1967c:	andeq	r9, r1, r0, lsl r7
   19680:	andeq	r9, r1, r0, lsl r7
   19684:	andeq	r9, r1, r0, lsl r7
   19688:	andeq	r9, r1, r0, lsl r7
   1968c:	andeq	r9, r1, r0, lsl r7
   19690:	andeq	r9, r1, r0, lsl r7
   19694:	andeq	r9, r1, r0, lsl r7
   19698:	andeq	r9, r1, r0, lsl r7
   1969c:	andeq	r9, r1, r0, lsl r7
   196a0:	andeq	r9, r1, r0, lsl r7
   196a4:	andeq	r9, r1, r0, lsl r7
   196a8:	andeq	r9, r1, ip, lsr #13
   196ac:	bl	17560 <mount@plt+0x54a8>
   196b0:	mov	r5, r0
   196b4:	bl	14f04 <mount@plt+0x2e4c>
   196b8:	ldr	r2, [sp, #12]
   196bc:	ldr	r3, [r4]
   196c0:	mov	r0, r5
   196c4:	cmp	r2, r3
   196c8:	bne	19718 <mount@plt+0x7660>
   196cc:	add	sp, sp, #20
   196d0:	pop	{r4, r5, pc}
   196d4:	bl	188bc <mount@plt+0x6804>
   196d8:	mov	r5, r0
   196dc:	b	196b4 <mount@plt+0x75fc>
   196e0:	ldr	r3, [r1, #24]
   196e4:	mov	r1, sp
   196e8:	str	r3, [sp, #8]
   196ec:	bl	18674 <mount@plt+0x65bc>
   196f0:	mov	r5, r0
   196f4:	b	196b4 <mount@plt+0x75fc>
   196f8:	bl	194d4 <mount@plt+0x741c>
   196fc:	mov	r5, r0
   19700:	b	196b4 <mount@plt+0x75fc>
   19704:	bl	18c84 <mount@plt+0x6bcc>
   19708:	mov	r5, r0
   1970c:	b	196b4 <mount@plt+0x75fc>
   19710:	mvn	r5, #0
   19714:	b	196b4 <mount@plt+0x75fc>
   19718:	bl	11c2c <__stack_chk_fail@plt>
   1971c:	ldrdeq	fp, [r3], -r8
   19720:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19724:	sub	sp, sp, #1024	; 0x400
   19728:	ldr	r9, [pc, #320]	; 19870 <mount@plt+0x77b8>
   1972c:	sub	sp, sp, #12
   19730:	mov	r2, #0
   19734:	ldr	r3, [r9]
   19738:	mov	sl, r0
   1973c:	str	r2, [r0]
   19740:	ldr	r1, [pc, #300]	; 19874 <mount@plt+0x77bc>
   19744:	ldr	r0, [pc, #300]	; 19878 <mount@plt+0x77c0>
   19748:	str	r3, [sp, #1028]	; 0x404
   1974c:	bl	13c64 <mount@plt+0x1bac>
   19750:	subs	r7, r0, #0
   19754:	beq	19864 <mount@plt+0x77ac>
   19758:	ldr	r8, [pc, #284]	; 1987c <mount@plt+0x77c4>
   1975c:	ldr	r6, [pc, #284]	; 19880 <mount@plt+0x77c8>
   19760:	mov	r2, r7
   19764:	mov	r1, #1024	; 0x400
   19768:	add	r0, sp, #4
   1976c:	bl	11b90 <fgets@plt>
   19770:	cmp	r0, #0
   19774:	beq	19848 <mount@plt+0x7790>
   19778:	ldr	r3, [sp, #4]
   1977c:	cmp	r3, r8
   19780:	moveq	r4, #0
   19784:	addeq	r5, sp, #4
   19788:	bne	19760 <mount@plt+0x76a8>
   1978c:	mov	r0, r5
   19790:	mov	r1, #32
   19794:	bl	11e0c <strchr@plt>
   19798:	subs	fp, r0, #0
   1979c:	beq	197d0 <mount@plt+0x7718>
   197a0:	add	r5, fp, #1
   197a4:	mov	r0, r5
   197a8:	mov	r2, #9
   197ac:	mov	r1, r6
   197b0:	bl	11bfc <memcmp@plt>
   197b4:	add	r4, r4, #1
   197b8:	cmp	r0, #0
   197bc:	bne	1978c <mount@plt+0x76d4>
   197c0:	ldrb	r3, [fp, #10]
   197c4:	cmp	r3, #10
   197c8:	cmpne	r3, #32
   197cc:	bne	1978c <mount@plt+0x76d4>
   197d0:	mov	r2, r7
   197d4:	mov	r1, #1024	; 0x400
   197d8:	add	r0, sp, #4
   197dc:	bl	11b90 <fgets@plt>
   197e0:	cmp	r0, #0
   197e4:	beq	19848 <mount@plt+0x7790>
   197e8:	ldr	r3, [sp, #4]
   197ec:	cmp	r3, r8
   197f0:	bne	19848 <mount@plt+0x7790>
   197f4:	add	r0, sp, #4
   197f8:	mov	r1, #32
   197fc:	bl	11e0c <strchr@plt>
   19800:	cmp	r0, #0
   19804:	beq	19760 <mount@plt+0x76a8>
   19808:	subs	r4, r4, #1
   1980c:	add	r0, r0, #1
   19810:	bne	197f8 <mount@plt+0x7740>
   19814:	mov	r2, sl
   19818:	ldr	r1, [pc, #100]	; 19884 <mount@plt+0x77cc>
   1981c:	bl	11fa4 <sscanf@plt>
   19820:	mov	r0, r7
   19824:	bl	11f14 <fclose@plt>
   19828:	ldr	r2, [sp, #1028]	; 0x404
   1982c:	ldr	r3, [r9]
   19830:	mov	r0, r4
   19834:	cmp	r2, r3
   19838:	bne	1986c <mount@plt+0x77b4>
   1983c:	add	sp, sp, #1024	; 0x400
   19840:	add	sp, sp, #12
   19844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19848:	mov	r0, r7
   1984c:	bl	11f14 <fclose@plt>
   19850:	bl	11e18 <__errno_location@plt>
   19854:	mov	r3, #3
   19858:	mvn	r4, #0
   1985c:	str	r3, [r0]
   19860:	b	19828 <mount@plt+0x7770>
   19864:	mvn	r4, #0
   19868:	b	19828 <mount@plt+0x7770>
   1986c:	bl	11c2c <__stack_chk_fail@plt>
   19870:	ldrdeq	fp, [r3], -r8
   19874:	andeq	r9, r2, r8, ror #7
   19878:	strdeq	r9, [r2], -r4
   1987c:	bcc	1c325d4 <optarg@@GLIBC_2.4+0x1bf464c>
   19880:	andeq	r9, r2, r4, lsl #8
   19884:	andeq	sl, r2, r0, asr #21
   19888:	push	{r4, r5, lr}
   1988c:	sub	sp, sp, #348	; 0x15c
   19890:	ldr	r4, [pc, #508]	; 19a94 <mount@plt+0x79dc>
   19894:	mov	r2, #60	; 0x3c
   19898:	mov	r1, #0
   1989c:	ldr	r3, [r4]
   198a0:	add	r0, sp, #24
   198a4:	str	r3, [sp, #340]	; 0x154
   198a8:	bl	11e78 <memset@plt>
   198ac:	ldr	r1, [pc, #484]	; 19a98 <mount@plt+0x79e0>
   198b0:	ldr	r0, [pc, #484]	; 19a9c <mount@plt+0x79e4>
   198b4:	bl	13c64 <mount@plt+0x1bac>
   198b8:	subs	r5, r0, #0
   198bc:	bne	198d0 <mount@plt+0x7818>
   198c0:	b	19a78 <mount@plt+0x79c0>
   198c4:	add	r1, sp, #24
   198c8:	add	r0, sp, #84	; 0x54
   198cc:	bl	13a58 <mount@plt+0x19a0>
   198d0:	mov	r2, r5
   198d4:	mov	r1, #256	; 0x100
   198d8:	add	r0, sp, #84	; 0x54
   198dc:	bl	11b90 <fgets@plt>
   198e0:	cmp	r0, #0
   198e4:	bne	198c4 <mount@plt+0x780c>
   198e8:	mov	r0, r5
   198ec:	bl	11f14 <fclose@plt>
   198f0:	ldr	r1, [pc, #424]	; 19aa0 <mount@plt+0x79e8>
   198f4:	ldr	r0, [pc, #424]	; 19aa4 <mount@plt+0x79ec>
   198f8:	bl	13c64 <mount@plt+0x1bac>
   198fc:	subs	r5, r0, #0
   19900:	bne	19914 <mount@plt+0x785c>
   19904:	b	19934 <mount@plt+0x787c>
   19908:	add	r1, sp, #24
   1990c:	add	r0, sp, #84	; 0x54
   19910:	bl	13a58 <mount@plt+0x19a0>
   19914:	mov	r2, r5
   19918:	mov	r1, #256	; 0x100
   1991c:	add	r0, sp, #84	; 0x54
   19920:	bl	11b90 <fgets@plt>
   19924:	cmp	r0, #0
   19928:	bne	19908 <mount@plt+0x7850>
   1992c:	mov	r0, r5
   19930:	bl	11f14 <fclose@plt>
   19934:	add	r0, sp, #20
   19938:	bl	19720 <mount@plt+0x7668>
   1993c:	cmp	r0, #0
   19940:	blt	19a84 <mount@plt+0x79cc>
   19944:	ldr	r2, [sp, #24]
   19948:	ldr	r1, [pc, #344]	; 19aa8 <mount@plt+0x79f0>
   1994c:	mov	r0, #1
   19950:	bl	11ec0 <__printf_chk@plt>
   19954:	ldr	r1, [sp, #64]	; 0x40
   19958:	ldr	r3, [sp, #44]	; 0x2c
   1995c:	ldr	r2, [sp, #40]	; 0x28
   19960:	add	r3, r3, r1
   19964:	ldr	r1, [sp, #32]
   19968:	ldr	r0, [sp, #36]	; 0x24
   1996c:	sub	r3, r3, r2
   19970:	sub	r3, r1, r3
   19974:	str	r2, [sp, #8]
   19978:	str	r3, [sp]
   1997c:	add	r2, r1, r2
   19980:	ldr	r3, [sp, #20]
   19984:	ldr	r1, [pc, #288]	; 19aac <mount@plt+0x79f4>
   19988:	str	r0, [sp, #4]
   1998c:	mov	r0, #1
   19990:	bl	11ec0 <__printf_chk@plt>
   19994:	mov	r0, #10
   19998:	bl	11e84 <putchar@plt>
   1999c:	ldr	r0, [pc, #268]	; 19ab0 <mount@plt+0x79f8>
   199a0:	bl	11d58 <puts@plt>
   199a4:	ldr	r1, [sp, #72]	; 0x48
   199a8:	ldr	r3, [sp, #52]	; 0x34
   199ac:	str	r1, [sp]
   199b0:	add	r2, r3, r1
   199b4:	mov	r0, #1
   199b8:	ldr	r1, [pc, #244]	; 19ab4 <mount@plt+0x79fc>
   199bc:	bl	11ec0 <__printf_chk@plt>
   199c0:	ldr	r1, [sp, #68]	; 0x44
   199c4:	ldr	r3, [sp, #48]	; 0x30
   199c8:	str	r1, [sp]
   199cc:	add	r2, r3, r1
   199d0:	mov	r0, #1
   199d4:	ldr	r1, [pc, #220]	; 19ab8 <mount@plt+0x7a00>
   199d8:	bl	11ec0 <__printf_chk@plt>
   199dc:	ldr	r1, [sp, #64]	; 0x40
   199e0:	ldr	r3, [sp, #44]	; 0x2c
   199e4:	str	r1, [sp]
   199e8:	add	r2, r3, r1
   199ec:	mov	r0, #1
   199f0:	ldr	r1, [pc, #196]	; 19abc <mount@plt+0x7a04>
   199f4:	bl	11ec0 <__printf_chk@plt>
   199f8:	ldrd	r2, [sp, #48]	; 0x30
   199fc:	ldr	r0, [sp, #44]	; 0x2c
   19a00:	ldr	r1, [sp, #72]	; 0x48
   19a04:	add	r3, r3, r2
   19a08:	ldr	r2, [sp, #68]	; 0x44
   19a0c:	ldr	ip, [sp, #64]	; 0x40
   19a10:	add	r3, r3, r0
   19a14:	add	r0, r3, r1
   19a18:	add	r1, r1, r2
   19a1c:	add	r1, r1, ip
   19a20:	add	r2, r0, r2
   19a24:	add	r2, r2, ip
   19a28:	str	r1, [sp]
   19a2c:	mov	r0, #1
   19a30:	ldr	r1, [pc, #136]	; 19ac0 <mount@plt+0x7a08>
   19a34:	bl	11ec0 <__printf_chk@plt>
   19a38:	ldr	r3, [sp, #56]	; 0x38
   19a3c:	ldr	r1, [sp, #76]	; 0x4c
   19a40:	mov	r0, #1
   19a44:	add	r2, r3, r1
   19a48:	str	r1, [sp]
   19a4c:	ldr	r1, [pc, #112]	; 19ac4 <mount@plt+0x7a0c>
   19a50:	bl	11ec0 <__printf_chk@plt>
   19a54:	mov	r0, #10
   19a58:	bl	11e84 <putchar@plt>
   19a5c:	ldr	r2, [sp, #340]	; 0x154
   19a60:	ldr	r3, [r4]
   19a64:	mov	r0, #0
   19a68:	cmp	r2, r3
   19a6c:	bne	19a90 <mount@plt+0x79d8>
   19a70:	add	sp, sp, #348	; 0x15c
   19a74:	pop	{r4, r5, pc}
   19a78:	ldr	r0, [pc, #72]	; 19ac8 <mount@plt+0x7a10>
   19a7c:	bl	11c80 <perror@plt>
   19a80:	b	19934 <mount@plt+0x787c>
   19a84:	ldr	r0, [pc, #64]	; 19acc <mount@plt+0x7a14>
   19a88:	bl	11c80 <perror@plt>
   19a8c:	b	19944 <mount@plt+0x788c>
   19a90:	bl	11c2c <__stack_chk_fail@plt>
   19a94:	ldrdeq	fp, [r3], -r8
   19a98:	andeq	r9, r2, r0, lsl r4
   19a9c:	andeq	r9, r2, r0, lsr #8
   19aa0:	andeq	r9, r2, r8, asr #8
   19aa4:	andeq	r9, r2, r8, asr r4
   19aa8:	andeq	r9, r2, r0, lsl #9
   19aac:	andeq	r9, r2, ip, lsl #9
   19ab0:	andeq	r9, r2, r8, asr #9
   19ab4:	andeq	r9, r2, ip, ror #9
   19ab8:	andeq	r9, r2, r4, lsl #10
   19abc:	andeq	r9, r2, ip, lsl r5
   19ac0:	andeq	r9, r2, r4, lsr r5
   19ac4:	andeq	r9, r2, ip, asr #10
   19ac8:	andeq	r9, r2, r4, lsr r4
   19acc:	andeq	r9, r2, ip, ror #8
   19ad0:	push	{r4, r5, r6, r7, r8, lr}
   19ad4:	sub	sp, sp, #56	; 0x38
   19ad8:	ldr	r5, [pc, #156]	; 19b7c <mount@plt+0x7ac4>
   19adc:	mov	r4, r0
   19ae0:	mov	r6, r1
   19ae4:	ldr	r3, [r5]
   19ae8:	mov	r7, r2
   19aec:	add	r0, sp, #4
   19af0:	mov	r2, #4
   19af4:	mov	r1, #0
   19af8:	str	r3, [sp, #52]	; 0x34
   19afc:	bl	248c0 <mount@plt+0x12808>
   19b00:	subs	r8, r0, #0
   19b04:	bne	19b70 <mount@plt+0x7ab8>
   19b08:	ldr	r3, [pc, #112]	; 19b80 <mount@plt+0x7ac8>
   19b0c:	mov	r1, r4
   19b10:	mov	r2, r6
   19b14:	add	r0, sp, #4
   19b18:	str	r3, [sp, #36]	; 0x24
   19b1c:	bl	25234 <mount@plt+0x1317c>
   19b20:	cmp	r0, #0
   19b24:	mvnlt	r4, #0
   19b28:	blt	19b4c <mount@plt+0x7a94>
   19b2c:	mov	r3, r8
   19b30:	mov	r1, r7
   19b34:	ldr	r2, [pc, #72]	; 19b84 <mount@plt+0x7acc>
   19b38:	add	r0, sp, #4
   19b3c:	bl	25520 <mount@plt+0x13468>
   19b40:	adds	r0, r0, #0
   19b44:	movne	r0, #1
   19b48:	rsb	r4, r0, #0
   19b4c:	add	r0, sp, #4
   19b50:	bl	24898 <mount@plt+0x127e0>
   19b54:	ldr	r2, [sp, #52]	; 0x34
   19b58:	ldr	r3, [r5]
   19b5c:	mov	r0, r4
   19b60:	cmp	r2, r3
   19b64:	bne	19b78 <mount@plt+0x7ac0>
   19b68:	add	sp, sp, #56	; 0x38
   19b6c:	pop	{r4, r5, r6, r7, r8, pc}
   19b70:	mvn	r4, #0
   19b74:	b	19b54 <mount@plt+0x7a9c>
   19b78:	bl	11c2c <__stack_chk_fail@plt>
   19b7c:	ldrdeq	fp, [r3], -r8
   19b80:	andeq	lr, r1, r0, asr #4
   19b84:	andeq	lr, r3, r0, lsr #9
   19b88:	push	{r4, r5, r6, r7, r8, lr}
   19b8c:	mov	r3, #0
   19b90:	ldr	r4, [pc, #440]	; 19d50 <mount@plt+0x7c98>
   19b94:	ldr	r6, [pc, #440]	; 19d54 <mount@plt+0x7c9c>
   19b98:	sub	sp, sp, #376	; 0x178
   19b9c:	ldr	r1, [r4, #1304]	; 0x518
   19ba0:	ldr	r0, [r6]
   19ba4:	lsr	r1, r1, #16
   19ba8:	and	r2, r1, #1
   19bac:	orrs	r3, r2, r3
   19bb0:	str	r0, [sp, #372]	; 0x174
   19bb4:	beq	19bc4 <mount@plt+0x7b0c>
   19bb8:	ldr	r3, [r4, #1300]	; 0x514
   19bbc:	tst	r3, #128	; 0x80
   19bc0:	bne	19be0 <mount@plt+0x7b28>
   19bc4:	mov	r0, #0
   19bc8:	ldr	r2, [sp, #372]	; 0x174
   19bcc:	ldr	r3, [r6]
   19bd0:	cmp	r2, r3
   19bd4:	bne	19d4c <mount@plt+0x7c94>
   19bd8:	add	sp, sp, #376	; 0x178
   19bdc:	pop	{r4, r5, r6, r7, r8, pc}
   19be0:	ldr	r0, [pc, #368]	; 19d58 <mount@plt+0x7ca0>
   19be4:	bl	11d4c <getenv@plt>
   19be8:	cmp	r0, #0
   19bec:	beq	19cd0 <mount@plt+0x7c18>
   19bf0:	ldr	r1, [pc, #356]	; 19d5c <mount@plt+0x7ca4>
   19bf4:	ldr	r0, [pc, #348]	; 19d58 <mount@plt+0x7ca0>
   19bf8:	bl	13c64 <mount@plt+0x1bac>
   19bfc:	subs	r5, r0, #0
   19c00:	beq	19d34 <mount@plt+0x7c7c>
   19c04:	add	r0, sp, #116	; 0x74
   19c08:	mov	r2, r5
   19c0c:	mov	r1, #256	; 0x100
   19c10:	bl	11b90 <fgets@plt>
   19c14:	cmp	r0, #0
   19c18:	beq	19d3c <mount@plt+0x7c84>
   19c1c:	ldr	r7, [pc, #316]	; 19d60 <mount@plt+0x7ca8>
   19c20:	b	19ca8 <mount@plt+0x7bf0>
   19c24:	add	ip, sp, #60	; 0x3c
   19c28:	add	r8, sp, #72	; 0x48
   19c2c:	add	r0, sp, #56	; 0x38
   19c30:	add	r1, sp, #52	; 0x34
   19c34:	add	r2, sp, #48	; 0x30
   19c38:	add	r3, sp, #44	; 0x2c
   19c3c:	str	ip, [sp, #20]
   19c40:	str	r0, [sp, #12]
   19c44:	str	r1, [sp, #8]
   19c48:	str	r2, [sp, #4]
   19c4c:	str	r3, [sp]
   19c50:	add	r2, sp, #64	; 0x40
   19c54:	add	r3, sp, #40	; 0x28
   19c58:	mov	r1, r7
   19c5c:	str	r8, [sp, #16]
   19c60:	add	r0, sp, #116	; 0x74
   19c64:	bl	11fa4 <sscanf@plt>
   19c68:	ldrd	r0, [r8]
   19c6c:	ldrd	r2, [r8, #-8]
   19c70:	ldr	lr, [sp, #56]	; 0x38
   19c74:	ldr	ip, [sp, #52]	; 0x34
   19c78:	strd	r0, [sp, #32]
   19c7c:	mov	r1, #0
   19c80:	strd	r2, [sp, #24]
   19c84:	str	r1, [sp, #8]
   19c88:	str	r1, [sp, #4]
   19c8c:	str	r1, [sp]
   19c90:	str	lr, [sp, #16]
   19c94:	str	ip, [sp, #12]
   19c98:	ldrd	r2, [sp, #44]	; 0x2c
   19c9c:	ldr	r1, [sp, #40]	; 0x28
   19ca0:	ldr	r0, [r4, #1312]	; 0x520
   19ca4:	bl	1918c <mount@plt+0x70d4>
   19ca8:	mov	r2, r5
   19cac:	mov	r1, #256	; 0x100
   19cb0:	add	r0, sp, #116	; 0x74
   19cb4:	bl	11b90 <fgets@plt>
   19cb8:	subs	r8, r0, #0
   19cbc:	bne	19c24 <mount@plt+0x7b6c>
   19cc0:	mov	r0, r5
   19cc4:	bl	11f14 <fclose@plt>
   19cc8:	mov	r0, r8
   19ccc:	b	19bc8 <mount@plt+0x7b10>
   19cd0:	ldr	r0, [pc, #140]	; 19d64 <mount@plt+0x7cac>
   19cd4:	bl	11d4c <getenv@plt>
   19cd8:	cmp	r0, #0
   19cdc:	bne	19bf0 <mount@plt+0x7b38>
   19ce0:	ldr	r3, [pc, #128]	; 19d68 <mount@plt+0x7cb0>
   19ce4:	ldr	r2, [pc, #128]	; 19d6c <mount@plt+0x7cb4>
   19ce8:	str	r3, [sp, #84]	; 0x54
   19cec:	mvn	r3, #239	; 0xef
   19cf0:	str	r0, [sp, #96]	; 0x60
   19cf4:	mov	r1, #36	; 0x24
   19cf8:	str	r0, [sp, #92]	; 0x5c
   19cfc:	str	r0, [sp, #100]	; 0x64
   19d00:	str	r0, [sp, #108]	; 0x6c
   19d04:	str	r0, [sp, #112]	; 0x70
   19d08:	str	r2, [sp, #88]	; 0x58
   19d0c:	strh	r3, [sp, #96]	; 0x60
   19d10:	add	r0, sp, #80	; 0x50
   19d14:	mov	r3, #3
   19d18:	ldr	r2, [pc, #80]	; 19d70 <mount@plt+0x7cb8>
   19d1c:	str	r1, [sp, #80]	; 0x50
   19d20:	str	r3, [sp, #104]	; 0x68
   19d24:	bl	19ad0 <mount@plt+0x7a18>
   19d28:	cmp	r0, #0
   19d2c:	bne	19bf0 <mount@plt+0x7b38>
   19d30:	b	19bc4 <mount@plt+0x7b0c>
   19d34:	mvn	r0, #0
   19d38:	b	19bc8 <mount@plt+0x7b10>
   19d3c:	mov	r0, r5
   19d40:	bl	11f14 <fclose@plt>
   19d44:	mvn	r0, #0
   19d48:	b	19bc8 <mount@plt+0x7b10>
   19d4c:	bl	11c2c <__stack_chk_fail@plt>
   19d50:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   19d54:	ldrdeq	fp, [r3], -r8
   19d58:	andeq	r9, r2, r4, ror #10
   19d5c:	andeq	r9, r2, r8, ror r5
   19d60:	andeq	r9, r2, r4, lsl #11
   19d64:	andeq	r7, r2, r4, lsl #28
   19d68:	movweq	r0, #4116	; 0x1014
   19d6c:	andeq	lr, r1, r0, asr #4
   19d70:	ldrdeq	r9, [r1], -r4
   19d74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19d78:	sub	sp, sp, #16896	; 0x4200
   19d7c:	ldr	sl, [pc, #448]	; 19f44 <mount@plt+0x7e8c>
   19d80:	sub	sp, sp, #104	; 0x68
   19d84:	add	r2, sp, #16896	; 0x4200
   19d88:	ldr	r3, [sl]
   19d8c:	add	r2, r2, #100	; 0x64
   19d90:	ldr	r0, [pc, #432]	; 19f48 <mount@plt+0x7e90>
   19d94:	str	r3, [r2]
   19d98:	bl	11d4c <getenv@plt>
   19d9c:	ldr	r1, [pc, #424]	; 19f4c <mount@plt+0x7e94>
   19da0:	bl	11ff8 <fopen64@plt>
   19da4:	subs	r5, r0, #0
   19da8:	beq	19f30 <mount@plt+0x7e78>
   19dac:	add	r4, sp, #616	; 0x268
   19db0:	ldr	r8, [pc, #408]	; 19f50 <mount@plt+0x7e98>
   19db4:	ldr	r9, [pc, #408]	; 19f54 <mount@plt+0x7e9c>
   19db8:	sub	r7, r4, #608	; 0x260
   19dbc:	mov	r2, #600	; 0x258
   19dc0:	mov	r1, #0
   19dc4:	mov	r0, r7
   19dc8:	bl	11e78 <memset@plt>
   19dcc:	mov	r3, r5
   19dd0:	mov	r2, #16
   19dd4:	mov	r1, #1
   19dd8:	add	r0, sp, #612	; 0x264
   19ddc:	bl	11d04 <fread@plt>
   19de0:	subs	r6, r0, #0
   19de4:	blt	19ec0 <mount@plt+0x7e08>
   19de8:	cmp	r6, #16
   19dec:	bne	19eb0 <mount@plt+0x7df8>
   19df0:	ldr	r3, [r4, #-4]
   19df4:	mov	r2, #1
   19df8:	sub	r3, r3, #13
   19dfc:	str	r5, [sp]
   19e00:	bic	r3, r3, #3
   19e04:	mov	r1, r8
   19e08:	add	r0, r4, #12
   19e0c:	bl	11f50 <__fread_chk@plt>
   19e10:	cmp	r0, #0
   19e14:	blt	19ed0 <mount@plt+0x7e18>
   19e18:	ldr	r2, [r4, #-4]
   19e1c:	add	r0, r0, #16
   19e20:	cmp	r0, r2
   19e24:	bcc	19eb0 <mount@plt+0x7df8>
   19e28:	ldrh	r3, [r4]
   19e2c:	cmp	r3, #3
   19e30:	beq	19ee0 <mount@plt+0x7e28>
   19e34:	cmp	r3, #2
   19e38:	beq	19ee8 <mount@plt+0x7e30>
   19e3c:	add	r0, sp, #612	; 0x264
   19e40:	add	r1, sp, #8
   19e44:	bl	1487c <mount@plt+0x27c4>
   19e48:	ldr	r0, [r9, #1312]	; 0x520
   19e4c:	mov	r3, #6
   19e50:	cmp	r0, #0
   19e54:	str	r3, [r4, #-604]	; 0xfffffda4
   19e58:	beq	19e6c <mount@plt+0x7db4>
   19e5c:	add	r1, sp, #8
   19e60:	bl	16a48 <mount@plt+0x4990>
   19e64:	cmp	r0, #0
   19e68:	beq	19dbc <mount@plt+0x7d04>
   19e6c:	add	r1, sp, #8
   19e70:	add	r0, sp, #612	; 0x264
   19e74:	bl	18464 <mount@plt+0x63ac>
   19e78:	subs	r6, r0, #0
   19e7c:	bge	19dbc <mount@plt+0x7d04>
   19e80:	mov	r0, r5
   19e84:	bl	11f14 <fclose@plt>
   19e88:	add	r3, sp, #16896	; 0x4200
   19e8c:	add	r3, r3, #100	; 0x64
   19e90:	ldr	r2, [r3]
   19e94:	ldr	r3, [sl]
   19e98:	mov	r0, r6
   19e9c:	cmp	r2, r3
   19ea0:	bne	19f40 <mount@plt+0x7e88>
   19ea4:	add	sp, sp, #16896	; 0x4200
   19ea8:	add	sp, sp, #104	; 0x68
   19eac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19eb0:	ldr	r0, [pc, #160]	; 19f58 <mount@plt+0x7ea0>
   19eb4:	bl	11c80 <perror@plt>
   19eb8:	mvn	r6, #0
   19ebc:	b	19e80 <mount@plt+0x7dc8>
   19ec0:	ldr	r0, [pc, #148]	; 19f5c <mount@plt+0x7ea4>
   19ec4:	bl	11c80 <perror@plt>
   19ec8:	mvn	r6, #0
   19ecc:	b	19e80 <mount@plt+0x7dc8>
   19ed0:	ldr	r0, [pc, #136]	; 19f60 <mount@plt+0x7ea8>
   19ed4:	bl	11c80 <perror@plt>
   19ed8:	mvn	r6, #0
   19edc:	b	19e80 <mount@plt+0x7dc8>
   19ee0:	mov	r6, #0
   19ee4:	b	19e80 <mount@plt+0x7dc8>
   19ee8:	cmp	r2, #35	; 0x23
   19eec:	bhi	19f10 <mount@plt+0x7e58>
   19ef0:	ldr	r3, [pc, #108]	; 19f64 <mount@plt+0x7eac>
   19ef4:	mov	r2, r6
   19ef8:	mov	r1, #1
   19efc:	ldr	r3, [r3]
   19f00:	ldr	r0, [pc, #96]	; 19f68 <mount@plt+0x7eb0>
   19f04:	bl	11cb0 <fwrite@plt>
   19f08:	mvn	r6, #0
   19f0c:	b	19e80 <mount@plt+0x7dc8>
   19f10:	bl	11e18 <__errno_location@plt>
   19f14:	ldr	r3, [r4, #12]
   19f18:	mvn	r6, #0
   19f1c:	rsb	r3, r3, #0
   19f20:	str	r3, [r0]
   19f24:	ldr	r0, [pc, #64]	; 19f6c <mount@plt+0x7eb4>
   19f28:	bl	11c80 <perror@plt>
   19f2c:	b	19e80 <mount@plt+0x7dc8>
   19f30:	ldr	r0, [pc, #56]	; 19f70 <mount@plt+0x7eb8>
   19f34:	bl	11c80 <perror@plt>
   19f38:	mvn	r6, #0
   19f3c:	b	19e88 <mount@plt+0x7dd0>
   19f40:	bl	11c2c <__stack_chk_fail@plt>
   19f44:	ldrdeq	fp, [r3], -r8
   19f48:	strdeq	r9, [r2], -r4
   19f4c:	andeq	r9, r2, r8, lsr ip
   19f50:	strdeq	r3, [r0], -r0
   19f54:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   19f58:	ldrdeq	r9, [r2], -ip
   19f5c:			; <UNDEFINED> instruction: 0x000295b8
   19f60:	andeq	r9, r2, r4, lsl #12
   19f64:	andeq	sp, r3, r8, ror pc
   19f68:	andeq	r9, r2, ip, lsl r6
   19f6c:	andeq	r9, r2, r0, lsr r6
   19f70:	andeq	r9, r2, r0, lsr #11
   19f74:	ldr	r2, [pc, #1116]	; 1a3d8 <mount@plt+0x8320>
   19f78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f7c:	sub	sp, sp, #364	; 0x16c
   19f80:	ldr	r5, [pc, #1108]	; 1a3dc <mount@plt+0x8324>
   19f84:	mov	r3, #0
   19f88:	ldr	ip, [r2]
   19f8c:	add	r2, r5, #1296	; 0x510
   19f90:	mov	sl, r1
   19f94:	str	r2, [sp, #24]
   19f98:	mov	r1, r3
   19f9c:	mov	r8, r0
   19fa0:	mov	r2, #4
   19fa4:	add	r0, sp, #88	; 0x58
   19fa8:	str	sl, [sp, #28]
   19fac:	str	ip, [sp, #356]	; 0x164
   19fb0:	str	r3, [sp, #32]
   19fb4:	bl	248c0 <mount@plt+0x12808>
   19fb8:	subs	r1, r0, #0
   19fbc:	bne	1a3cc <mount@plt+0x8314>
   19fc0:	ldrb	r3, [r5, #1316]	; 0x524
   19fc4:	cmp	r3, #0
   19fc8:	bne	1a378 <mount@plt+0x82c0>
   19fcc:	ldr	r6, [r5, #1328]	; 0x530
   19fd0:	str	r8, [sp, #128]	; 0x80
   19fd4:	cmp	r6, #10
   19fd8:	ldr	r8, [sp, #88]	; 0x58
   19fdc:	ldr	r2, [pc, #1020]	; 1a3e0 <mount@plt+0x8328>
   19fe0:	ldr	r3, [pc, #1020]	; 1a3e4 <mount@plt+0x832c>
   19fe4:	add	r7, sp, #36	; 0x24
   19fe8:	movne	r6, #2
   19fec:	uxtb	fp, sl
   19ff0:	add	r9, sp, #280	; 0x118
   19ff4:	mov	r4, #0
   19ff8:	mov	r0, #16
   19ffc:	mov	r1, #72	; 0x48
   1a000:	str	r2, [sp, #120]	; 0x78
   1a004:	str	r2, [sp, #216]	; 0xd8
   1a008:	str	r4, [sp, #42]	; 0x2a
   1a00c:	str	r4, [sp, #38]	; 0x26
   1a010:	strh	r4, [sp, #46]	; 0x2e
   1a014:	str	r4, [sp, #220]	; 0xdc
   1a018:	str	r4, [sp, #12]
   1a01c:	strh	r0, [r7]
   1a020:	str	r3, [sp, #212]	; 0xd4
   1a024:	str	r3, [sp]
   1a028:	str	r1, [sp, #208]	; 0xd0
   1a02c:	str	sl, [sp, #4]
   1a030:	mov	r2, #54	; 0x36
   1a034:	mov	r1, #0
   1a038:	add	r0, sp, #226	; 0xe2
   1a03c:	bl	11e78 <memset@plt>
   1a040:	ldr	r2, [r5, #1284]	; 0x504
   1a044:	ldr	r3, [r5, #1300]	; 0x514
   1a048:	cmp	r2, #0
   1a04c:	str	r3, [sp, #228]	; 0xe4
   1a050:	movne	r3, #65	; 0x41
   1a054:	strbne	r3, [sp, #226]	; 0xe2
   1a058:	ldr	r3, [r5, #1280]	; 0x500
   1a05c:	ldr	r0, [r5, #1312]	; 0x520
   1a060:	cmp	r3, #0
   1a064:	add	r2, sp, #208	; 0xd0
   1a068:	ldrbne	r3, [sp, #226]	; 0xe2
   1a06c:	strb	r6, [sp, #224]	; 0xe0
   1a070:	strb	fp, [sp, #225]	; 0xe1
   1a074:	orrne	r3, r3, #14
   1a078:	strbne	r3, [sp, #226]	; 0xe2
   1a07c:	mov	r3, #72	; 0x48
   1a080:	cmp	r0, #0
   1a084:	str	r2, [sp, #280]	; 0x118
   1a088:	str	r3, [sp, #284]	; 0x11c
   1a08c:	beq	1a308 <mount@plt+0x8250>
   1a090:	add	r1, sp, #12
   1a094:	bl	14214 <mount@plt+0x215c>
   1a098:	cmp	r0, #0
   1a09c:	beq	1a308 <mount@plt+0x8250>
   1a0a0:	ldr	r3, [sp, #208]	; 0xd0
   1a0a4:	str	r0, [sp, #300]	; 0x12c
   1a0a8:	add	r3, r3, #4
   1a0ac:	add	r3, r3, r0
   1a0b0:	add	r0, r0, #4
   1a0b4:	str	r3, [sp, #208]	; 0xd0
   1a0b8:	ldr	r1, [sp, #12]
   1a0bc:	mov	r3, #1
   1a0c0:	strh	r0, [sp, #48]	; 0x30
   1a0c4:	mov	r0, #3
   1a0c8:	add	r2, sp, #48	; 0x30
   1a0cc:	strh	r3, [sp, #50]	; 0x32
   1a0d0:	mov	r3, #4
   1a0d4:	str	r2, [sp, #288]	; 0x120
   1a0d8:	str	r1, [sp, #296]	; 0x128
   1a0dc:	str	r3, [sp, #292]	; 0x124
   1a0e0:	mov	r3, #12
   1a0e4:	str	r0, [sp, #72]	; 0x48
   1a0e8:	mov	r2, #0
   1a0ec:	add	r1, sp, #60	; 0x3c
   1a0f0:	mov	r0, r8
   1a0f4:	str	r4, [sp, #76]	; 0x4c
   1a0f8:	str	r4, [sp, #80]	; 0x50
   1a0fc:	str	r4, [sp, #84]	; 0x54
   1a100:	str	r7, [sp, #60]	; 0x3c
   1a104:	str	r9, [sp, #68]	; 0x44
   1a108:	str	r3, [sp, #64]	; 0x40
   1a10c:	bl	11be4 <sendmsg@plt>
   1a110:	cmp	r0, #0
   1a114:	blt	1a3bc <mount@plt+0x8304>
   1a118:	add	r2, sp, #24
   1a11c:	mov	r3, #0
   1a120:	ldr	r1, [pc, #704]	; 1a3e8 <mount@plt+0x8330>
   1a124:	add	r0, sp, #88	; 0x58
   1a128:	bl	25520 <mount@plt+0x13468>
   1a12c:	subs	sl, r0, #0
   1a130:	beq	1a310 <mount@plt+0x8258>
   1a134:	mov	r8, #16
   1a138:	mov	r2, #60	; 0x3c
   1a13c:	mov	r1, #0
   1a140:	add	r0, sp, #220	; 0xdc
   1a144:	strh	r8, [r7]
   1a148:	ldr	sl, [sp, #4]
   1a14c:	ldr	r6, [pc, #652]	; 1a3e0 <mount@plt+0x8328>
   1a150:	str	r4, [sp, #38]	; 0x26
   1a154:	str	r4, [sp, #42]	; 0x2a
   1a158:	strh	r4, [sp, #46]	; 0x2e
   1a15c:	ldr	r7, [sp, #88]	; 0x58
   1a160:	bl	11e78 <memset@plt>
   1a164:	mov	r3, #72	; 0x48
   1a168:	ldr	ip, [pc, #628]	; 1a3e4 <mount@plt+0x832c>
   1a16c:	mov	r2, r3
   1a170:	mov	r1, #0
   1a174:	add	r0, sp, #284	; 0x11c
   1a178:	strh	r8, [sp, #48]	; 0x30
   1a17c:	str	r3, [sp, #208]	; 0xd0
   1a180:	ldr	r8, [r5, #1300]	; 0x514
   1a184:	str	r4, [sp, #12]
   1a188:	str	r4, [sp, #50]	; 0x32
   1a18c:	str	ip, [sp, #212]	; 0xd4
   1a190:	str	r6, [sp, #216]	; 0xd8
   1a194:	str	r4, [sp, #54]	; 0x36
   1a198:	strh	r4, [sp, #58]	; 0x3a
   1a19c:	bl	11e78 <memset@plt>
   1a1a0:	add	r0, sp, #284	; 0x11c
   1a1a4:	ldr	r1, [pc, #576]	; 1a3ec <mount@plt+0x8334>
   1a1a8:	add	r0, r0, #2
   1a1ac:	mov	r2, #76	; 0x4c
   1a1b0:	mov	r3, #2
   1a1b4:	cmp	sl, #17
   1a1b8:	str	r6, [sp, #288]	; 0x120
   1a1bc:	str	r8, [sp, #348]	; 0x15c
   1a1c0:	str	r4, [sp, #16]
   1a1c4:	strh	r1, [r0]
   1a1c8:	str	r2, [sp, #280]	; 0x118
   1a1cc:	strb	r3, [sp, #296]	; 0x128
   1a1d0:	beq	1a3b4 <mount@plt+0x82fc>
   1a1d4:	ldr	r2, [r5, #1284]	; 0x504
   1a1d8:	cmp	sl, #6
   1a1dc:	movne	r3, #19
   1a1e0:	moveq	r3, #18
   1a1e4:	cmp	r2, #0
   1a1e8:	add	r2, sp, #284	; 0x11c
   1a1ec:	ldr	r0, [r5, #1312]	; 0x520
   1a1f0:	strh	r3, [r2]
   1a1f4:	movne	r3, #65	; 0x41
   1a1f8:	strbne	r3, [sp, #299]	; 0x12b
   1a1fc:	ldr	r3, [r5, #1280]	; 0x500
   1a200:	str	r9, [sp, #184]	; 0xb8
   1a204:	cmp	r3, #0
   1a208:	ldrbne	r3, [sp, #299]	; 0x12b
   1a20c:	orrne	r3, r3, #14
   1a210:	strbne	r3, [sp, #299]	; 0x12b
   1a214:	mov	r3, #76	; 0x4c
   1a218:	cmp	r0, #0
   1a21c:	str	r3, [sp, #188]	; 0xbc
   1a220:	beq	1a370 <mount@plt+0x82b8>
   1a224:	add	r1, sp, #16
   1a228:	bl	14214 <mount@plt+0x215c>
   1a22c:	cmp	r0, #0
   1a230:	beq	1a370 <mount@plt+0x82b8>
   1a234:	ldr	r3, [sp, #280]	; 0x118
   1a238:	ldr	r1, [sp, #16]
   1a23c:	add	r3, r3, #4
   1a240:	add	r3, r3, r0
   1a244:	str	r3, [sp, #280]	; 0x118
   1a248:	mov	lr, #3
   1a24c:	mov	r3, #1
   1a250:	add	r2, sp, #20
   1a254:	str	r0, [sp, #204]	; 0xcc
   1a258:	strh	r3, [sp, #22]
   1a25c:	add	r0, r0, #4
   1a260:	mov	r3, #4
   1a264:	strh	r0, [sp, #20]
   1a268:	str	r2, [sp, #192]	; 0xc0
   1a26c:	str	r1, [sp, #200]	; 0xc8
   1a270:	str	r3, [sp, #196]	; 0xc4
   1a274:	mov	r4, #0
   1a278:	mov	ip, #12
   1a27c:	add	r3, sp, #184	; 0xb8
   1a280:	add	r1, sp, #60	; 0x3c
   1a284:	mov	r2, r4
   1a288:	mov	r0, r7
   1a28c:	add	r5, sp, #48	; 0x30
   1a290:	str	r5, [sp, #60]	; 0x3c
   1a294:	str	lr, [sp, #72]	; 0x48
   1a298:	str	r4, [sp, #76]	; 0x4c
   1a29c:	str	r4, [sp, #80]	; 0x50
   1a2a0:	str	r4, [sp, #84]	; 0x54
   1a2a4:	str	ip, [sp, #64]	; 0x40
   1a2a8:	str	r3, [sp, #68]	; 0x44
   1a2ac:	bl	11be4 <sendmsg@plt>
   1a2b0:	cmp	r0, r4
   1a2b4:	blt	1a3ac <mount@plt+0x82f4>
   1a2b8:	mov	r3, r4
   1a2bc:	add	r2, sp, #24
   1a2c0:	ldr	r1, [pc, #288]	; 1a3e8 <mount@plt+0x8330>
   1a2c4:	add	r0, sp, #88	; 0x58
   1a2c8:	bl	25520 <mount@plt+0x13468>
   1a2cc:	mov	fp, r0
   1a2d0:	add	r0, sp, #88	; 0x58
   1a2d4:	bl	24898 <mount@plt+0x127e0>
   1a2d8:	ldr	r0, [sp, #32]
   1a2dc:	cmp	r0, #0
   1a2e0:	beq	1a2e8 <mount@plt+0x8230>
   1a2e4:	bl	24898 <mount@plt+0x127e0>
   1a2e8:	ldr	r3, [pc, #232]	; 1a3d8 <mount@plt+0x8320>
   1a2ec:	ldr	r1, [sp, #356]	; 0x164
   1a2f0:	mov	r0, fp
   1a2f4:	ldr	r2, [r3]
   1a2f8:	cmp	r1, r2
   1a2fc:	bne	1a3d4 <mount@plt+0x831c>
   1a300:	add	sp, sp, #364	; 0x16c
   1a304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a308:	mov	r0, #1
   1a30c:	b	1a0e0 <mount@plt+0x8028>
   1a310:	cmp	r6, #2
   1a314:	bne	1a3a4 <mount@plt+0x82ec>
   1a318:	ldr	r2, [r5, #1328]	; 0x530
   1a31c:	cmp	r2, #2
   1a320:	beq	1a3a4 <mount@plt+0x82ec>
   1a324:	mov	ip, #16
   1a328:	mov	r2, #60	; 0x3c
   1a32c:	mov	r1, sl
   1a330:	add	r0, sp, #220	; 0xdc
   1a334:	str	sl, [sp, #38]	; 0x26
   1a338:	str	sl, [sp, #42]	; 0x2a
   1a33c:	strh	sl, [sp, #46]	; 0x2e
   1a340:	strh	ip, [r7]
   1a344:	ldr	r8, [sp, #88]	; 0x58
   1a348:	bl	11e78 <memset@plt>
   1a34c:	ldr	r1, [pc, #140]	; 1a3e0 <mount@plt+0x8328>
   1a350:	ldr	r3, [sp]
   1a354:	mov	r2, #72	; 0x48
   1a358:	str	r3, [sp, #212]	; 0xd4
   1a35c:	str	sl, [sp, #12]
   1a360:	str	r1, [sp, #216]	; 0xd8
   1a364:	str	r2, [sp, #208]	; 0xd0
   1a368:	mov	r6, #10
   1a36c:	b	1a030 <mount@plt+0x7f78>
   1a370:	mov	lr, #1
   1a374:	b	1a274 <mount@plt+0x81bc>
   1a378:	add	r4, sp, #136	; 0x88
   1a37c:	mov	r0, r4
   1a380:	mov	r2, #4
   1a384:	bl	248c0 <mount@plt+0x12808>
   1a388:	cmp	r0, #0
   1a38c:	streq	r4, [sp, #32]
   1a390:	beq	19fcc <mount@plt+0x7f14>
   1a394:	add	r0, sp, #88	; 0x58
   1a398:	bl	24898 <mount@plt+0x127e0>
   1a39c:	mvn	fp, #0
   1a3a0:	b	1a2e8 <mount@plt+0x8230>
   1a3a4:	mov	fp, sl
   1a3a8:	b	1a2d0 <mount@plt+0x8218>
   1a3ac:	mov	r0, r7
   1a3b0:	bl	12064 <close@plt>
   1a3b4:	mvn	fp, #0
   1a3b8:	b	1a2d0 <mount@plt+0x8218>
   1a3bc:	mov	r0, r8
   1a3c0:	bl	12064 <close@plt>
   1a3c4:	mvn	fp, #0
   1a3c8:	b	1a2d0 <mount@plt+0x8218>
   1a3cc:	mvn	fp, #0
   1a3d0:	b	1a2e8 <mount@plt+0x8230>
   1a3d4:	bl	11c2c <__stack_chk_fail@plt>
   1a3d8:	ldrdeq	fp, [r3], -r8
   1a3dc:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   1a3e0:	andeq	lr, r1, r0, asr #4
   1a3e4:	movweq	r0, #4116	; 0x1014
   1a3e8:	andeq	r8, r1, r4, ror r6
   1a3ec:	andeq	r0, r0, r1, lsl #6
   1a3f0:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a3f4:	mov	r4, r0
   1a3f8:	ldr	r9, [pc, #224]	; 1a4e0 <mount@plt+0x8428>
   1a3fc:	sub	sp, sp, #268	; 0x10c
   1a400:	mov	r5, r1
   1a404:	ldr	r3, [r9]
   1a408:	mov	r6, r2
   1a40c:	add	r0, sp, #4
   1a410:	mov	r2, r4
   1a414:	mov	r1, #256	; 0x100
   1a418:	str	r3, [sp, #260]	; 0x104
   1a41c:	bl	11b90 <fgets@plt>
   1a420:	cmp	r0, #0
   1a424:	beq	1a490 <mount@plt+0x83d8>
   1a428:	mov	r8, #0
   1a42c:	ldr	r7, [pc, #176]	; 1a4e4 <mount@plt+0x842c>
   1a430:	b	1a478 <mount@plt+0x83c0>
   1a434:	add	r0, sp, #4
   1a438:	bl	11e00 <strlen@plt>
   1a43c:	cmp	r0, #0
   1a440:	beq	1a4c0 <mount@plt+0x8408>
   1a444:	sub	r0, r0, #1
   1a448:	add	r3, sp, #264	; 0x108
   1a44c:	add	r3, r3, r0
   1a450:	ldrb	r2, [r3, #-260]	; 0xfffffefc
   1a454:	cmp	r2, #10
   1a458:	bne	1a4c0 <mount@plt+0x8408>
   1a45c:	mov	r2, r6
   1a460:	mov	r1, r7
   1a464:	add	r0, sp, #4
   1a468:	strb	r8, [r3, #-260]	; 0xfffffefc
   1a46c:	blx	r5
   1a470:	cmp	r0, #0
   1a474:	blt	1a4d4 <mount@plt+0x841c>
   1a478:	mov	r2, r4
   1a47c:	mov	r1, #256	; 0x100
   1a480:	add	r0, sp, #4
   1a484:	bl	11b90 <fgets@plt>
   1a488:	cmp	r0, #0
   1a48c:	bne	1a434 <mount@plt+0x837c>
   1a490:	mov	r0, r4
   1a494:	bl	11b9c <ferror@plt>
   1a498:	adds	r0, r0, #0
   1a49c:	movne	r0, #1
   1a4a0:	rsb	r3, r0, #0
   1a4a4:	ldr	r1, [sp, #260]	; 0x104
   1a4a8:	ldr	r2, [r9]
   1a4ac:	mov	r0, r3
   1a4b0:	cmp	r1, r2
   1a4b4:	bne	1a4dc <mount@plt+0x8424>
   1a4b8:	add	sp, sp, #268	; 0x10c
   1a4bc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a4c0:	bl	11e18 <__errno_location@plt>
   1a4c4:	mvn	r2, #21
   1a4c8:	mvn	r3, #0
   1a4cc:	str	r2, [r0]
   1a4d0:	b	1a4a4 <mount@plt+0x83ec>
   1a4d4:	mov	r3, #0
   1a4d8:	b	1a4a4 <mount@plt+0x83ec>
   1a4dc:	bl	11c2c <__stack_chk_fail@plt>
   1a4e0:	ldrdeq	fp, [r3], -r8
   1a4e4:	andeq	lr, r3, r0, lsr #9
   1a4e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a4ec:	sub	sp, sp, #1600	; 0x640
   1a4f0:	ldr	r5, [pc, #772]	; 1a7fc <mount@plt+0x8744>
   1a4f4:	sub	sp, sp, #12
   1a4f8:	mov	r4, r0
   1a4fc:	ldr	r3, [r5]
   1a500:	mov	r2, #1600	; 0x640
   1a504:	mov	r1, #0
   1a508:	add	r0, sp, #4
   1a50c:	str	r3, [sp, #1604]	; 0x644
   1a510:	bl	11e78 <memset@plt>
   1a514:	ldr	r3, [pc, #740]	; 1a800 <mount@plt+0x8748>
   1a518:	ldr	r0, [pc, #740]	; 1a804 <mount@plt+0x874c>
   1a51c:	mov	r1, #2
   1a520:	ldr	r7, [pc, #736]	; 1a808 <mount@plt+0x8750>
   1a524:	ldr	r6, [pc, #736]	; 1a80c <mount@plt+0x8754>
   1a528:	ldr	lr, [pc, #736]	; 1a810 <mount@plt+0x8758>
   1a52c:	ldr	ip, [pc, #736]	; 1a814 <mount@plt+0x875c>
   1a530:	ldr	sl, [pc, #736]	; 1a818 <mount@plt+0x8760>
   1a534:	ldr	fp, [pc, #736]	; 1a81c <mount@plt+0x8764>
   1a538:	str	r3, [sp, #324]	; 0x144
   1a53c:	str	r0, [sp, #388]	; 0x184
   1a540:	mov	r3, #10
   1a544:	mov	r0, #11
   1a548:	str	r1, [sp, #8]
   1a54c:	str	r1, [sp, #72]	; 0x48
   1a550:	str	r1, [sp, #136]	; 0x88
   1a554:	mov	r1, #12
   1a558:	mov	r2, #1
   1a55c:	mov	r8, #5
   1a560:	mov	r9, #3
   1a564:	str	r7, [sp, #4]
   1a568:	str	r6, [sp, #68]	; 0x44
   1a56c:	mov	r7, #4
   1a570:	mov	r6, #6
   1a574:	str	lr, [sp, #132]	; 0x84
   1a578:	str	ip, [sp, #196]	; 0xc4
   1a57c:	mov	lr, #8
   1a580:	mov	ip, #7
   1a584:	str	sl, [sp, #260]	; 0x104
   1a588:	str	r3, [sp, #48]	; 0x30
   1a58c:	mov	sl, #9
   1a590:	str	r3, [sp, #84]	; 0x54
   1a594:	str	r3, [sp, #328]	; 0x148
   1a598:	mov	r3, #14
   1a59c:	str	r9, [sp, #20]
   1a5a0:	str	r9, [sp, #88]	; 0x58
   1a5a4:	str	r8, [sp, #24]
   1a5a8:	str	r7, [sp, #28]
   1a5ac:	str	r6, [sp, #32]
   1a5b0:	str	lr, [sp, #36]	; 0x24
   1a5b4:	str	ip, [sp, #40]	; 0x28
   1a5b8:	str	sl, [sp, #44]	; 0x2c
   1a5bc:	str	r9, [sp, #392]	; 0x188
   1a5c0:	str	r2, [sp, #12]
   1a5c4:	str	r2, [sp, #76]	; 0x4c
   1a5c8:	str	r2, [sp, #200]	; 0xc8
   1a5cc:	strd	r0, [sp, #52]	; 0x34
   1a5d0:	str	r3, [sp, #60]	; 0x3c
   1a5d4:	str	r3, [sp, #92]	; 0x5c
   1a5d8:	str	r3, [sp, #140]	; 0x8c
   1a5dc:	str	r3, [sp, #204]	; 0xcc
   1a5e0:	str	r3, [sp, #268]	; 0x10c
   1a5e4:	str	r3, [sp, #332]	; 0x14c
   1a5e8:	str	r3, [sp, #396]	; 0x18c
   1a5ec:	str	r8, [sp, #456]	; 0x1c8
   1a5f0:	str	r7, [sp, #460]	; 0x1cc
   1a5f4:	str	r6, [sp, #464]	; 0x1d0
   1a5f8:	str	r8, [sp, #520]	; 0x208
   1a5fc:	str	r8, [sp, #584]	; 0x248
   1a600:	str	r7, [sp, #648]	; 0x288
   1a604:	ldr	r8, [pc, #532]	; 1a820 <mount@plt+0x8768>
   1a608:	str	r7, [sp, #712]	; 0x2c8
   1a60c:	str	r6, [sp, #776]	; 0x308
   1a610:	ldr	r7, [pc, #524]	; 1a824 <mount@plt+0x876c>
   1a614:	str	r6, [sp, #840]	; 0x348
   1a618:	str	fp, [sp, #452]	; 0x1c4
   1a61c:	ldr	r6, [pc, #516]	; 1a828 <mount@plt+0x8770>
   1a620:	ldr	fp, [pc, #516]	; 1a82c <mount@plt+0x8774>
   1a624:	ldr	r9, [pc, #516]	; 1a830 <mount@plt+0x8778>
   1a628:	str	fp, [sp, #516]	; 0x204
   1a62c:	str	r8, [sp, #580]	; 0x244
   1a630:	ldr	fp, [pc, #508]	; 1a834 <mount@plt+0x877c>
   1a634:	ldr	r8, [pc, #508]	; 1a838 <mount@plt+0x8780>
   1a638:	str	r7, [sp, #644]	; 0x284
   1a63c:	str	r6, [sp, #708]	; 0x2c4
   1a640:	ldr	r7, [pc, #500]	; 1a83c <mount@plt+0x8784>
   1a644:	ldr	r6, [pc, #500]	; 1a840 <mount@plt+0x8788>
   1a648:	str	ip, [sp, #908]	; 0x38c
   1a64c:	str	r9, [sp, #772]	; 0x304
   1a650:	str	fp, [sp, #836]	; 0x344
   1a654:	str	r8, [sp, #900]	; 0x384
   1a658:	str	r7, [sp, #964]	; 0x3c4
   1a65c:	str	r6, [sp, #1028]	; 0x404
   1a660:	str	r3, [sp, #468]	; 0x1d4
   1a664:	str	r3, [sp, #524]	; 0x20c
   1a668:	str	r3, [sp, #588]	; 0x24c
   1a66c:	str	r3, [sp, #652]	; 0x28c
   1a670:	str	r3, [sp, #716]	; 0x2cc
   1a674:	str	r3, [sp, #780]	; 0x30c
   1a678:	str	r3, [sp, #844]	; 0x34c
   1a67c:	str	lr, [sp, #904]	; 0x388
   1a680:	str	r3, [sp, #912]	; 0x390
   1a684:	str	lr, [sp, #968]	; 0x3c8
   1a688:	str	r3, [sp, #972]	; 0x3cc
   1a68c:	str	lr, [sp, #1032]	; 0x408
   1a690:	ldrb	lr, [r4]
   1a694:	ldr	r6, [pc, #424]	; 1a844 <mount@plt+0x878c>
   1a698:	ldr	r7, [pc, #424]	; 1a848 <mount@plt+0x8790>
   1a69c:	cmp	lr, #33	; 0x21
   1a6a0:	str	r6, [sp, #1348]	; 0x544
   1a6a4:	ldr	fp, [pc, #416]	; 1a84c <mount@plt+0x8794>
   1a6a8:	ldr	r9, [pc, #416]	; 1a850 <mount@plt+0x8798>
   1a6ac:	ldr	r8, [pc, #416]	; 1a854 <mount@plt+0x879c>
   1a6b0:	ldr	lr, [pc, #416]	; 1a858 <mount@plt+0x87a0>
   1a6b4:	str	ip, [sp, #1096]	; 0x448
   1a6b8:	str	ip, [sp, #1160]	; 0x488
   1a6bc:	str	sl, [sp, #1224]	; 0x4c8
   1a6c0:	ldr	ip, [pc, #404]	; 1a85c <mount@plt+0x87a4>
   1a6c4:	ldr	sl, [pc, #404]	; 1a860 <mount@plt+0x87a8>
   1a6c8:	str	r7, [sp, #1284]	; 0x504
   1a6cc:	addeq	r4, r4, r2
   1a6d0:	moveq	r6, #0
   1a6d4:	movne	r6, r2
   1a6d8:	mov	r7, #1
   1a6dc:	str	r3, [sp, #1036]	; 0x40c
   1a6e0:	str	r3, [sp, #1100]	; 0x44c
   1a6e4:	str	r3, [sp, #1164]	; 0x48c
   1a6e8:	str	r3, [sp, #1228]	; 0x4cc
   1a6ec:	str	r0, [sp, #1288]	; 0x508
   1a6f0:	str	r1, [sp, #1292]	; 0x50c
   1a6f4:	str	r3, [sp, #1296]	; 0x510
   1a6f8:	str	r0, [sp, #1352]	; 0x548
   1a6fc:	str	r3, [sp, #1356]	; 0x54c
   1a700:	str	r0, [sp, #1416]	; 0x588
   1a704:	str	r3, [sp, #1420]	; 0x58c
   1a708:	str	r1, [sp, #1480]	; 0x5c8
   1a70c:	str	r3, [sp, #1484]	; 0x5cc
   1a710:	str	r1, [sp, #1544]	; 0x608
   1a714:	str	r3, [sp, #1548]	; 0x60c
   1a718:	str	fp, [sp, #1092]	; 0x444
   1a71c:	str	r9, [sp, #1156]	; 0x484
   1a720:	str	r8, [sp, #1220]	; 0x4c4
   1a724:	str	lr, [sp, #1412]	; 0x584
   1a728:	str	ip, [sp, #1476]	; 0x5c4
   1a72c:	str	sl, [sp, #1540]	; 0x604
   1a730:	add	r3, sp, #4
   1a734:	add	r3, r3, r7, lsl #6
   1a738:	mov	r0, r4
   1a73c:	ldr	r1, [r3, #-64]	; 0xffffffc0
   1a740:	bl	11b0c <strcmp@plt>
   1a744:	sub	r3, r7, #1
   1a748:	cmp	r0, #0
   1a74c:	bne	1a7e4 <mount@plt+0x872c>
   1a750:	lsl	r3, r3, #6
   1a754:	add	r3, r3, #4
   1a758:	add	r2, sp, #4
   1a75c:	add	ip, r2, r3
   1a760:	ldr	r3, [r2, r3]
   1a764:	cmp	r3, #14
   1a768:	beq	1a7c8 <mount@plt+0x8710>
   1a76c:	ldr	r9, [pc, #240]	; 1a864 <mount@plt+0x87ac>
   1a770:	ldr	r8, [pc, #240]	; 1a868 <mount@plt+0x87b0>
   1a774:	mov	r7, r0
   1a778:	ldr	r2, [r9, #1300]	; 0x514
   1a77c:	ldr	r1, [r9, #1296]	; 0x510
   1a780:	mov	r4, #1
   1a784:	cmp	r6, #0
   1a788:	lsl	lr, r4, r3
   1a78c:	addne	r3, r8, r3, lsl #5
   1a790:	orrne	r1, r1, lr
   1a794:	ldrne	r3, [r3, #356]	; 0x164
   1a798:	movne	r7, r6
   1a79c:	orrne	r2, r2, r3
   1a7a0:	ldr	r3, [ip, #4]!
   1a7a4:	biceq	r1, r1, lr
   1a7a8:	cmp	r3, #14
   1a7ac:	bne	1a784 <mount@plt+0x86cc>
   1a7b0:	ldr	r3, [pc, #180]	; 1a86c <mount@plt+0x87b4>
   1a7b4:	cmp	r7, #0
   1a7b8:	mov	ip, #0
   1a7bc:	str	ip, [r3, #224]	; 0xe0
   1a7c0:	strne	r2, [r9, #1300]	; 0x514
   1a7c4:	str	r1, [r9, #1296]	; 0x510
   1a7c8:	ldr	r2, [sp, #1604]	; 0x644
   1a7cc:	ldr	r3, [r5]
   1a7d0:	cmp	r2, r3
   1a7d4:	bne	1a7f8 <mount@plt+0x8740>
   1a7d8:	add	sp, sp, #1600	; 0x640
   1a7dc:	add	sp, sp, #12
   1a7e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a7e4:	add	r7, r7, #1
   1a7e8:	cmp	r7, #26
   1a7ec:	bne	1a730 <mount@plt+0x8678>
   1a7f0:	mvn	r0, #0
   1a7f4:	b	1a7c8 <mount@plt+0x8710>
   1a7f8:	bl	11c2c <__stack_chk_fail@plt>
   1a7fc:	ldrdeq	fp, [r3], -r8
   1a800:	andeq	r7, r2, r8, lsl pc
   1a804:	andeq	r9, r2, r8, lsr #19
   1a808:	andeq	r8, r2, r8, lsl pc
   1a80c:	andeq	r9, r2, r4, asr #12
   1a810:	ldrdeq	r9, [r2], -ip
   1a814:	muleq	r2, ip, lr
   1a818:	andeq	r9, r2, r0, lsl sl
   1a81c:	andeq	r9, r2, r8, asr #13
   1a820:			; <UNDEFINED> instruction: 0x00028eb4
   1a824:	andeq	r9, r2, r8, asr r6
   1a828:	muleq	r2, r4, lr
   1a82c:	andeq	r9, r2, ip, asr #12
   1a830:	andeq	r9, r2, r4, ror #12
   1a834:	andeq	r8, r2, ip, lsr #29
   1a838:	andeq	r9, r2, ip, lsl #19
   1a83c:	andeq	r9, r2, r4, ror r6
   1a840:	andeq	r8, r2, r4, lsr #29
   1a844:	muleq	r2, r8, r6
   1a848:	muleq	r2, r0, r6
   1a84c:	andeq	r9, r2, r0, lsl #13
   1a850:	andeq	r8, r2, r4, ror lr
   1a854:	andeq	r9, r2, ip, ror r5
   1a858:			; <UNDEFINED> instruction: 0x00028ebc
   1a85c:	andeq	r9, r2, r8, lsr #13
   1a860:	andeq	r8, r2, r4, lsl #29
   1a864:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   1a868:	andeq	r7, r2, r0, ror r2
   1a86c:	andeq	ip, r3, ip, lsr r2
   1a870:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a874:	sub	sp, sp, #1040	; 0x410
   1a878:	ldr	r6, [pc, #1188]	; 1ad24 <mount@plt+0x8c6c>
   1a87c:	sub	sp, sp, #12
   1a880:	ldr	r3, [pc, #1184]	; 1ad28 <mount@plt+0x8c70>
   1a884:	ldr	r2, [r6, #1304]	; 0x518
   1a888:	mov	lr, #0
   1a88c:	mov	r1, lr
   1a890:	lsr	r2, r2, #1
   1a894:	and	r0, r2, #1
   1a898:	str	lr, [sp, #32]
   1a89c:	ldr	lr, [pc, #1160]	; 1ad2c <mount@plt+0x8c74>
   1a8a0:	orrs	r2, r0, r1
   1a8a4:	ldm	r3, {r0, r1, r2, r3}
   1a8a8:	add	ip, sp, #40	; 0x28
   1a8ac:	ldr	lr, [lr]
   1a8b0:	stm	ip, {r0, r1, r2, r3}
   1a8b4:	str	lr, [sp, #1044]	; 0x414
   1a8b8:	bne	1a8e0 <mount@plt+0x8828>
   1a8bc:	mov	r0, #0
   1a8c0:	ldr	r3, [pc, #1124]	; 1ad2c <mount@plt+0x8c74>
   1a8c4:	ldr	r2, [sp, #1044]	; 0x414
   1a8c8:	ldr	r3, [r3]
   1a8cc:	cmp	r2, r3
   1a8d0:	bne	1ad20 <mount@plt+0x8c68>
   1a8d4:	add	sp, sp, #1040	; 0x410
   1a8d8:	add	sp, sp, #12
   1a8dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a8e0:	ldr	r0, [pc, #1096]	; 1ad30 <mount@plt+0x8c78>
   1a8e4:	bl	11d4c <getenv@plt>
   1a8e8:	cmp	r0, #0
   1a8ec:	beq	1ac68 <mount@plt+0x8bb0>
   1a8f0:	ldr	r1, [pc, #1084]	; 1ad34 <mount@plt+0x8c7c>
   1a8f4:	ldr	r0, [pc, #1076]	; 1ad30 <mount@plt+0x8c78>
   1a8f8:	bl	13c64 <mount@plt+0x1bac>
   1a8fc:	subs	r7, r0, #0
   1a900:	beq	1ad08 <mount@plt+0x8c50>
   1a904:	add	r0, sp, #788	; 0x314
   1a908:	mov	r2, r7
   1a90c:	mov	r1, #256	; 0x100
   1a910:	bl	11b90 <fgets@plt>
   1a914:	cmp	r0, #0
   1a918:	beq	1ad10 <mount@plt+0x8c58>
   1a91c:	ldr	sl, [pc, #1044]	; 1ad38 <mount@plt+0x8c80>
   1a920:	ldr	r9, [pc, #1044]	; 1ad3c <mount@plt+0x8c84>
   1a924:	ldr	r3, [sp, #788]	; 0x314
   1a928:	mov	r8, #0
   1a92c:	str	r3, [sp, #28]
   1a930:	mov	r2, r7
   1a934:	mov	r1, #256	; 0x100
   1a938:	add	r0, sp, #788	; 0x314
   1a93c:	bl	11b90 <fgets@plt>
   1a940:	cmp	r0, #0
   1a944:	beq	1abf4 <mount@plt+0x8b3c>
   1a948:	mov	r1, #600	; 0x258
   1a94c:	mov	r0, #1
   1a950:	bl	11ad0 <calloc@plt>
   1a954:	subs	r4, r0, #0
   1a958:	beq	1abf4 <mount@plt+0x8b3c>
   1a95c:	add	ip, r4, #560	; 0x230
   1a960:	add	r0, r4, #548	; 0x224
   1a964:	add	r1, r4, #4
   1a968:	add	r2, sp, #36	; 0x24
   1a96c:	add	r3, r4, #556	; 0x22c
   1a970:	add	r5, sp, #660	; 0x294
   1a974:	str	r0, [sp, #12]
   1a978:	str	r1, [sp, #8]
   1a97c:	str	r2, [sp, #4]
   1a980:	str	r3, [sp]
   1a984:	add	r2, r4, #544	; 0x220
   1a988:	add	r3, r4, #552	; 0x228
   1a98c:	mov	r1, sl
   1a990:	str	r5, [sp, #20]
   1a994:	str	ip, [sp, #16]
   1a998:	add	r0, sp, #788	; 0x314
   1a99c:	bl	11fa4 <sscanf@plt>
   1a9a0:	ldr	r2, [sp, #36]	; 0x24
   1a9a4:	ldr	r1, [r4, #560]	; 0x230
   1a9a8:	str	r1, [r4, #540]	; 0x21c
   1a9ac:	cmp	r0, #7
   1a9b0:	movle	r3, #0
   1a9b4:	strble	r3, [sp, #660]	; 0x294
   1a9b8:	add	r3, r4, #280	; 0x118
   1a9bc:	tst	r2, #65536	; 0x10000
   1a9c0:	mov	r2, #1
   1a9c4:	strh	r2, [r3, #2]
   1a9c8:	movne	r3, #10
   1a9cc:	ldr	r0, [r4, #4]
   1a9d0:	strh	r2, [r4, #18]
   1a9d4:	strne	r3, [r4, #548]	; 0x224
   1a9d8:	bne	1aa0c <mount@plt+0x8954>
   1a9dc:	ldr	r3, [r4, #548]	; 0x224
   1a9e0:	sub	r3, r3, #1
   1a9e4:	cmp	r3, #3
   1a9e8:	bhi	1aa0c <mount@plt+0x8954>
   1a9ec:	add	r1, sp, #1040	; 0x410
   1a9f0:	add	r1, r1, #8
   1a9f4:	add	r3, r1, r3, lsl #2
   1a9f8:	ldr	r3, [r3, #-1008]	; 0xfffffc10
   1a9fc:	cmp	r3, #7
   1aa00:	cmpeq	r0, #2
   1aa04:	str	r3, [r4, #548]	; 0x224
   1aa08:	beq	1ac58 <mount@plt+0x8ba0>
   1aa0c:	mov	r1, r9
   1aa10:	bl	15ccc <mount@plt+0x3c14>
   1aa14:	cmp	r0, #0
   1aa18:	bne	1ab74 <mount@plt+0x8abc>
   1aa1c:	ldr	r3, [r6, #1300]	; 0x514
   1aa20:	ldr	r2, [r4, #548]	; 0x224
   1aa24:	asr	r3, r3, r2
   1aa28:	tst	r3, #1
   1aa2c:	beq	1ab74 <mount@plt+0x8abc>
   1aa30:	ldr	r3, [sp, #28]
   1aa34:	ldr	r2, [pc, #772]	; 1ad40 <mount@plt+0x8c88>
   1aa38:	cmp	r3, r2
   1aa3c:	ldrb	r3, [sp, #660]	; 0x294
   1aa40:	beq	1ab80 <mount@plt+0x8ac8>
   1aa44:	cmp	r3, #0
   1aa48:	str	r0, [r4, #544]	; 0x220
   1aa4c:	str	r0, [r4, #552]	; 0x228
   1aa50:	str	r0, [r4, #556]	; 0x22c
   1aa54:	bne	1abd8 <mount@plt+0x8b20>
   1aa58:	ldr	r5, [r6, #1312]	; 0x520
   1aa5c:	cmp	r5, #0
   1aa60:	beq	1aac0 <mount@plt+0x8a08>
   1aa64:	mov	r2, #600	; 0x258
   1aa68:	mov	r1, #0
   1aa6c:	add	r0, sp, #56	; 0x38
   1aa70:	bl	11e78 <memset@plt>
   1aa74:	ldr	fp, [r4, #588]	; 0x24c
   1aa78:	add	r1, sp, #336	; 0x150
   1aa7c:	ldr	r2, [r4, #584]	; 0x248
   1aa80:	mov	r3, #1
   1aa84:	cmp	fp, #0
   1aa88:	strh	r3, [r1, #2]
   1aa8c:	strh	r3, [sp, #74]	; 0x4a
   1aa90:	str	r2, [sp, #76]	; 0x4c
   1aa94:	beq	1aaac <mount@plt+0x89f4>
   1aa98:	ldr	r1, [pc, #676]	; 1ad44 <mount@plt+0x8c8c>
   1aa9c:	mov	r0, fp
   1aaa0:	bl	11b0c <strcmp@plt>
   1aaa4:	cmp	r0, #0
   1aaa8:	strne	fp, [sp, #340]	; 0x154
   1aaac:	add	r1, sp, #56	; 0x38
   1aab0:	mov	r0, r5
   1aab4:	bl	16a48 <mount@plt+0x4990>
   1aab8:	cmp	r0, #0
   1aabc:	beq	1ab6c <mount@plt+0x8ab4>
   1aac0:	ldr	r3, [sp, #32]
   1aac4:	cmp	r3, #0
   1aac8:	beq	1ad00 <mount@plt+0x8c48>
   1aacc:	ldr	r1, [r4, #4]
   1aad0:	ldr	r2, [r3, #4]
   1aad4:	add	r0, sp, #32
   1aad8:	cmp	r1, r2
   1aadc:	bcs	1ab00 <mount@plt+0x8a48>
   1aae0:	b	1ab18 <mount@plt+0x8a60>
   1aae4:	mov	r0, r3
   1aae8:	ldr	r3, [r3]
   1aaec:	cmp	r3, #0
   1aaf0:	beq	1ab18 <mount@plt+0x8a60>
   1aaf4:	ldr	r2, [r3, #4]
   1aaf8:	cmp	r2, r1
   1aafc:	bhi	1ab18 <mount@plt+0x8a60>
   1ab00:	cmp	r1, r2
   1ab04:	bne	1aae4 <mount@plt+0x8a2c>
   1ab08:	ldr	ip, [r4, #560]	; 0x230
   1ab0c:	ldr	r2, [r3, #560]	; 0x230
   1ab10:	cmp	ip, r2
   1ab14:	bcs	1aae4 <mount@plt+0x8a2c>
   1ab18:	ldr	r2, [pc, #552]	; 1ad48 <mount@plt+0x8c90>
   1ab1c:	add	r8, r8, #1
   1ab20:	cmp	r8, r2
   1ab24:	str	r3, [r4]
   1ab28:	str	r4, [r0]
   1ab2c:	ble	1a930 <mount@plt+0x8878>
   1ab30:	ldr	r4, [sp, #32]
   1ab34:	cmp	r4, #0
   1ab38:	beq	1ab64 <mount@plt+0x8aac>
   1ab3c:	mov	r0, r4
   1ab40:	bl	18800 <mount@plt+0x6748>
   1ab44:	ldr	r5, [r4]
   1ab48:	ldr	r0, [r4, #584]	; 0x248
   1ab4c:	str	r5, [sp, #32]
   1ab50:	bl	11b78 <free@plt>
   1ab54:	mov	r0, r4
   1ab58:	bl	11b78 <free@plt>
   1ab5c:	subs	r4, r5, #0
   1ab60:	bne	1ab3c <mount@plt+0x8a84>
   1ab64:	mov	r8, #0
   1ab68:	b	1a930 <mount@plt+0x8878>
   1ab6c:	ldr	r0, [r4, #584]	; 0x248
   1ab70:	bl	11b78 <free@plt>
   1ab74:	mov	r0, r4
   1ab78:	bl	11b78 <free@plt>
   1ab7c:	b	1a930 <mount@plt+0x8878>
   1ab80:	cmp	r3, #0
   1ab84:	bne	1abd8 <mount@plt+0x8b20>
   1ab88:	ldr	r0, [r4, #544]	; 0x220
   1ab8c:	cmp	r0, #0
   1ab90:	beq	1aa58 <mount@plt+0x89a0>
   1ab94:	ldr	r3, [sp, #32]
   1ab98:	cmp	r3, #0
   1ab9c:	beq	1abcc <mount@plt+0x8b14>
   1aba0:	ldr	r2, [r3, #540]	; 0x21c
   1aba4:	cmp	r0, r2
   1aba8:	mov	r2, r3
   1abac:	bne	1abc0 <mount@plt+0x8b08>
   1abb0:	b	1ac34 <mount@plt+0x8b7c>
   1abb4:	ldr	r1, [r2, #540]	; 0x21c
   1abb8:	cmp	r0, r1
   1abbc:	beq	1ac34 <mount@plt+0x8b7c>
   1abc0:	ldr	r2, [r2]
   1abc4:	cmp	r2, #0
   1abc8:	bne	1abb4 <mount@plt+0x8afc>
   1abcc:	ldr	r3, [pc, #376]	; 1ad4c <mount@plt+0x8c94>
   1abd0:	str	r3, [r4, #588]	; 0x24c
   1abd4:	b	1aa58 <mount@plt+0x89a0>
   1abd8:	mov	r0, r5
   1abdc:	bl	11c20 <strdup@plt>
   1abe0:	cmp	r0, #0
   1abe4:	str	r0, [r4, #584]	; 0x248
   1abe8:	bne	1ab88 <mount@plt+0x8ad0>
   1abec:	mov	r0, r4
   1abf0:	bl	11b78 <free@plt>
   1abf4:	mov	r0, r7
   1abf8:	bl	11f14 <fclose@plt>
   1abfc:	ldr	r4, [sp, #32]
   1ac00:	cmp	r4, #0
   1ac04:	beq	1a8bc <mount@plt+0x8804>
   1ac08:	mov	r0, r4
   1ac0c:	bl	18800 <mount@plt+0x6748>
   1ac10:	ldr	r5, [r4]
   1ac14:	ldr	r0, [r4, #584]	; 0x248
   1ac18:	str	r5, [sp, #32]
   1ac1c:	bl	11b78 <free@plt>
   1ac20:	mov	r0, r4
   1ac24:	bl	11b78 <free@plt>
   1ac28:	subs	r4, r5, #0
   1ac2c:	bne	1ac08 <mount@plt+0x8b50>
   1ac30:	b	1a8bc <mount@plt+0x8804>
   1ac34:	ldr	r2, [r2, #584]	; 0x248
   1ac38:	ldr	r5, [r6, #1312]	; 0x520
   1ac3c:	ldr	r1, [pc, #256]	; 1ad44 <mount@plt+0x8c8c>
   1ac40:	cmp	r2, #0
   1ac44:	moveq	r2, r1
   1ac48:	cmp	r5, #0
   1ac4c:	str	r2, [r4, #588]	; 0x24c
   1ac50:	bne	1aa64 <mount@plt+0x89ac>
   1ac54:	b	1aacc <mount@plt+0x8a14>
   1ac58:	ldr	r3, [r4, #544]	; 0x220
   1ac5c:	cmp	r3, #0
   1ac60:	strne	r2, [r4, #548]	; 0x224
   1ac64:	b	1aa0c <mount@plt+0x8954>
   1ac68:	ldr	r0, [pc, #224]	; 1ad50 <mount@plt+0x8c98>
   1ac6c:	bl	11d4c <getenv@plt>
   1ac70:	cmp	r0, #0
   1ac74:	bne	1a8f0 <mount@plt+0x8838>
   1ac78:	ldr	r3, [r6, #1284]	; 0x504
   1ac7c:	ldr	r1, [r6, #1300]	; 0x514
   1ac80:	cmp	r3, #0
   1ac84:	ldr	r3, [pc, #200]	; 1ad54 <mount@plt+0x8c9c>
   1ac88:	ldr	ip, [pc, #200]	; 1ad58 <mount@plt+0x8ca0>
   1ac8c:	str	r3, [sp, #60]	; 0x3c
   1ac90:	mov	r3, #21
   1ac94:	str	r3, [sp, #84]	; 0x54
   1ac98:	movne	r3, #53	; 0x35
   1ac9c:	strne	r3, [sp, #84]	; 0x54
   1aca0:	ldr	r3, [pc, #180]	; 1ad5c <mount@plt+0x8ca4>
   1aca4:	mov	r2, #40	; 0x28
   1aca8:	str	r0, [sp, #72]	; 0x48
   1acac:	ldr	r3, [r3]
   1acb0:	str	r0, [sp, #68]	; 0x44
   1acb4:	cmp	r3, #0
   1acb8:	str	r0, [sp, #80]	; 0x50
   1acbc:	ldrne	r3, [sp, #84]	; 0x54
   1acc0:	str	r0, [sp, #88]	; 0x58
   1acc4:	orrne	r3, r3, #10
   1acc8:	str	r0, [sp, #92]	; 0x5c
   1accc:	str	r1, [sp, #76]	; 0x4c
   1acd0:	str	r2, [sp, #56]	; 0x38
   1acd4:	mov	r4, #1
   1acd8:	ldr	r2, [pc, #128]	; 1ad60 <mount@plt+0x8ca8>
   1acdc:	mov	r1, #40	; 0x28
   1ace0:	add	r0, sp, #56	; 0x38
   1ace4:	strne	r3, [sp, #84]	; 0x54
   1ace8:	strb	r4, [sp, #72]	; 0x48
   1acec:	str	ip, [sp, #64]	; 0x40
   1acf0:	bl	19ad0 <mount@plt+0x7a18>
   1acf4:	cmp	r0, #0
   1acf8:	bne	1a8f0 <mount@plt+0x8838>
   1acfc:	b	1a8bc <mount@plt+0x8804>
   1ad00:	add	r0, sp, #32
   1ad04:	b	1ab18 <mount@plt+0x8a60>
   1ad08:	mvn	r0, #0
   1ad0c:	b	1a8c0 <mount@plt+0x8808>
   1ad10:	mov	r0, r7
   1ad14:	bl	11f14 <fclose@plt>
   1ad18:	mvn	r0, #0
   1ad1c:	b	1a8c0 <mount@plt+0x8808>
   1ad20:	bl	11c2c <__stack_chk_fail@plt>
   1ad24:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   1ad28:	muleq	r2, r0, r5
   1ad2c:	ldrdeq	fp, [r3], -r8
   1ad30:			; <UNDEFINED> instruction: 0x000296b4
   1ad34:	andeq	r9, r2, r4, asr #13
   1ad38:	ldrdeq	r9, [r2], -r0
   1ad3c:	andeq	lr, r3, r0, lsr #9
   1ad40:	rsbvc	r6, r5, #80, 10	; 0x14000000
   1ad44:	andeq	r9, r2, r0, lsl #5
   1ad48:	ldrdeq	r0, [r0], -r3
   1ad4c:	andeq	r9, r2, ip, ror #13
   1ad50:	andeq	r7, r2, r4, lsl #28
   1ad54:	movweq	r0, #4116	; 0x1014
   1ad58:	andeq	lr, r1, r0, asr #4
   1ad5c:	andeq	r1, r4, r4, ror pc
   1ad60:			; <UNDEFINED> instruction: 0x000188bc
   1ad64:	push	{r4, r5, r6, lr}
   1ad68:	sub	sp, sp, #296	; 0x128
   1ad6c:	ldr	r4, [pc, #180]	; 1ae28 <mount@plt+0x8d70>
   1ad70:	mov	r5, r0
   1ad74:	mov	r2, #284	; 0x11c
   1ad78:	ldr	r3, [r4]
   1ad7c:	add	r0, sp, #8
   1ad80:	mov	r1, #0
   1ad84:	str	r3, [sp, #292]	; 0x124
   1ad88:	bl	11e78 <memset@plt>
   1ad8c:	ldr	r3, [pc, #152]	; 1ae2c <mount@plt+0x8d74>
   1ad90:	ldr	r3, [r3]
   1ad94:	cmp	r3, #0
   1ad98:	beq	1ae14 <mount@plt+0x8d5c>
   1ad9c:	mov	r0, r5
   1ada0:	bl	216b0 <mount@plt+0xf5f8>
   1ada4:	subs	r6, r0, #0
   1ada8:	bne	1addc <mount@plt+0x8d24>
   1adac:	mov	r2, r6
   1adb0:	add	r1, sp, #4
   1adb4:	mov	r0, r5
   1adb8:	bl	11df4 <strtoul@plt>
   1adbc:	ldr	r3, [sp, #4]
   1adc0:	cmp	r3, r5
   1adc4:	cmpne	r3, #0
   1adc8:	mov	r6, r0
   1adcc:	beq	1ae1c <mount@plt+0x8d64>
   1add0:	ldrb	r3, [r3]
   1add4:	cmp	r3, #0
   1add8:	bne	1ae1c <mount@plt+0x8d64>
   1addc:	mov	r0, #284	; 0x11c
   1ade0:	bl	11d70 <malloc@plt>
   1ade4:	add	r1, sp, #8
   1ade8:	mov	r2, #284	; 0x11c
   1adec:	str	r6, [sp, #276]	; 0x114
   1adf0:	mov	r5, r0
   1adf4:	bl	11bc0 <memcpy@plt>
   1adf8:	ldr	r2, [sp, #292]	; 0x124
   1adfc:	ldr	r3, [r4]
   1ae00:	mov	r0, r5
   1ae04:	cmp	r2, r3
   1ae08:	bne	1ae24 <mount@plt+0x8d6c>
   1ae0c:	add	sp, sp, #296	; 0x128
   1ae10:	pop	{r4, r5, r6, pc}
   1ae14:	bl	13970 <mount@plt+0x18b8>
   1ae18:	b	1ad9c <mount@plt+0x8ce4>
   1ae1c:	mov	r5, #0
   1ae20:	b	1adf8 <mount@plt+0x8d40>
   1ae24:	bl	11c2c <__stack_chk_fail@plt>
   1ae28:	ldrdeq	fp, [r3], -r8
   1ae2c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   1ae30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ae34:	sub	sp, sp, #308	; 0x134
   1ae38:	ldr	r7, [pc, #2252]	; 1b70c <mount@plt+0x9654>
   1ae3c:	ldr	r4, [pc, #2252]	; 1b710 <mount@plt+0x9658>
   1ae40:	mov	r5, r0
   1ae44:	ldr	r3, [r7]
   1ae48:	mov	r8, r1
   1ae4c:	add	r0, sp, #16
   1ae50:	mov	r2, #284	; 0x11c
   1ae54:	mov	r1, #0
   1ae58:	str	r3, [sp, #300]	; 0x12c
   1ae5c:	bl	11e78 <memset@plt>
   1ae60:	ldr	r6, [r4, #1328]	; 0x530
   1ae64:	mvn	r3, #0
   1ae68:	cmp	r6, #1
   1ae6c:	str	r3, [sp, #280]	; 0x118
   1ae70:	beq	1b05c <mount@plt+0x8fa4>
   1ae74:	mov	r2, #5
   1ae78:	ldr	r1, [pc, #2196]	; 1b714 <mount@plt+0x965c>
   1ae7c:	mov	r0, r5
   1ae80:	bl	12040 <strncmp@plt>
   1ae84:	cmp	r0, #0
   1ae88:	beq	1b05c <mount@plt+0x8fa4>
   1ae8c:	cmp	r6, #17
   1ae90:	beq	1af88 <mount@plt+0x8ed0>
   1ae94:	mov	r2, #5
   1ae98:	ldr	r1, [pc, #2168]	; 1b718 <mount@plt+0x9660>
   1ae9c:	mov	r0, r5
   1aea0:	bl	12040 <strncmp@plt>
   1aea4:	cmp	r0, #0
   1aea8:	beq	1af88 <mount@plt+0x8ed0>
   1aeac:	cmp	r6, #16
   1aeb0:	beq	1b140 <mount@plt+0x9088>
   1aeb4:	mov	r2, #8
   1aeb8:	ldr	r1, [pc, #2140]	; 1b71c <mount@plt+0x9664>
   1aebc:	mov	r0, r5
   1aec0:	bl	12040 <strncmp@plt>
   1aec4:	cmp	r0, #0
   1aec8:	beq	1b140 <mount@plt+0x9088>
   1aecc:	cmp	r6, #40	; 0x28
   1aed0:	beq	1b224 <mount@plt+0x916c>
   1aed4:	mov	r2, #6
   1aed8:	ldr	r1, [pc, #2112]	; 1b720 <mount@plt+0x9668>
   1aedc:	mov	r0, r5
   1aee0:	bl	12040 <strncmp@plt>
   1aee4:	cmp	r0, #0
   1aee8:	beq	1b224 <mount@plt+0x916c>
   1aeec:	mov	r2, #5
   1aef0:	ldr	r1, [pc, #2092]	; 1b724 <mount@plt+0x966c>
   1aef4:	mov	r0, r5
   1aef8:	bl	12040 <strncmp@plt>
   1aefc:	cmp	r6, #2
   1af00:	beq	1b400 <mount@plt+0x9348>
   1af04:	cmp	r0, #0
   1af08:	bne	1b40c <mount@plt+0x9354>
   1af0c:	add	r5, r5, #5
   1af10:	mov	r6, #2
   1af14:	ldrb	r3, [r5]
   1af18:	cmp	r3, #91	; 0x5b
   1af1c:	beq	1b3dc <mount@plt+0x9324>
   1af20:	cmp	r3, #42	; 0x2a
   1af24:	beq	1b434 <mount@plt+0x937c>
   1af28:	mov	r1, #47	; 0x2f
   1af2c:	mov	r0, r5
   1af30:	bl	11e0c <strchr@plt>
   1af34:	mov	r1, #58	; 0x3a
   1af38:	cmp	r0, #0
   1af3c:	moveq	r0, r5
   1af40:	bl	11f74 <strrchr@plt>
   1af44:	cmp	r8, #0
   1af48:	beq	1b324 <mount@plt+0x926c>
   1af4c:	ldrb	r3, [r5]
   1af50:	cmp	r3, #0
   1af54:	bne	1b488 <mount@plt+0x93d0>
   1af58:	cmp	r6, #0
   1af5c:	beq	1b024 <mount@plt+0x8f6c>
   1af60:	mov	r1, #1
   1af64:	ldr	r0, [pc, #1980]	; 1b728 <mount@plt+0x9670>
   1af68:	sub	r2, r6, #32
   1af6c:	add	r0, r0, r6, lsl #5
   1af70:	lsl	r2, r1, r2
   1af74:	rsb	r3, r6, #32
   1af78:	ldr	ip, [r0, #820]	; 0x334
   1af7c:	orr	r2, r2, r1, lsr r3
   1af80:	lsl	r1, r1, r6
   1af84:	b	1affc <mount@plt+0x8f44>
   1af88:	mov	r3, #17
   1af8c:	mov	r2, #5
   1af90:	ldr	r1, [pc, #1920]	; 1b718 <mount@plt+0x9660>
   1af94:	mov	r0, r5
   1af98:	strh	r3, [sp, #22]
   1af9c:	bl	12040 <strncmp@plt>
   1afa0:	mov	r1, #58	; 0x3a
   1afa4:	cmp	r0, #0
   1afa8:	addeq	r5, r5, #5
   1afac:	mov	r0, r5
   1afb0:	bl	11e0c <strchr@plt>
   1afb4:	cmp	r0, #0
   1afb8:	beq	1afd0 <mount@plt+0x8f18>
   1afbc:	ldrb	r3, [r0, #1]
   1afc0:	mov	r8, #0
   1afc4:	strb	r8, [r0]
   1afc8:	cmp	r3, r8
   1afcc:	bne	1b0ac <mount@plt+0x8ff4>
   1afd0:	ldrb	r2, [r5]
   1afd4:	cmp	r2, #0
   1afd8:	beq	1aff0 <mount@plt+0x8f38>
   1afdc:	ldr	r1, [pc, #1864]	; 1b72c <mount@plt+0x9674>
   1afe0:	mov	r0, r5
   1afe4:	bl	11b0c <strcmp@plt>
   1afe8:	subs	r2, r0, #0
   1afec:	bne	1b104 <mount@plt+0x904c>
   1aff0:	mov	r1, #131072	; 0x20000
   1aff4:	mov	ip, #128	; 0x80
   1aff8:	mov	r6, #17
   1affc:	ldr	r3, [r4, #1300]	; 0x514
   1b000:	ldr	r0, [pc, #1832]	; 1b730 <mount@plt+0x9678>
   1b004:	cmp	r3, #0
   1b008:	moveq	r3, ip
   1b00c:	str	r1, [r4, #1304]	; 0x518
   1b010:	mov	r1, #0
   1b014:	str	r2, [r4, #1308]	; 0x51c
   1b018:	str	r6, [r4, #1328]	; 0x530
   1b01c:	str	r3, [r4, #1300]	; 0x514
   1b020:	str	r1, [r0, #224]	; 0xe0
   1b024:	mov	r0, #284	; 0x11c
   1b028:	bl	11d70 <malloc@plt>
   1b02c:	subs	r4, r0, #0
   1b030:	beq	1b040 <mount@plt+0x8f88>
   1b034:	add	r1, sp, #16
   1b038:	mov	r2, #284	; 0x11c
   1b03c:	bl	11bc0 <memcpy@plt>
   1b040:	ldr	r2, [sp, #300]	; 0x12c
   1b044:	ldr	r3, [r7]
   1b048:	mov	r0, r4
   1b04c:	cmp	r2, r3
   1b050:	bne	1b5b0 <mount@plt+0x94f8>
   1b054:	add	sp, sp, #308	; 0x134
   1b058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b05c:	mov	r3, #1
   1b060:	mov	r2, #5
   1b064:	ldr	r1, [pc, #1704]	; 1b714 <mount@plt+0x965c>
   1b068:	mov	r0, r5
   1b06c:	strh	r3, [sp, #22]
   1b070:	bl	12040 <strncmp@plt>
   1b074:	mov	r6, #1
   1b078:	cmp	r0, #0
   1b07c:	addeq	r5, r5, #5
   1b080:	mov	r0, r5
   1b084:	bl	11c20 <strdup@plt>
   1b088:	mov	r5, r0
   1b08c:	bl	11e00 <strlen@plt>
   1b090:	str	r5, [sp, #24]
   1b094:	mov	r1, #2
   1b098:	mov	r2, #0
   1b09c:	ldr	ip, [pc, #1680]	; 1b734 <mount@plt+0x967c>
   1b0a0:	lsl	r0, r0, #3
   1b0a4:	strh	r0, [sp, #20]
   1b0a8:	b	1affc <mount@plt+0x8f44>
   1b0ac:	add	r6, r0, #1
   1b0b0:	mov	r0, r6
   1b0b4:	ldr	r1, [pc, #1648]	; 1b72c <mount@plt+0x9674>
   1b0b8:	bl	11b0c <strcmp@plt>
   1b0bc:	cmp	r0, r8
   1b0c0:	beq	1afd0 <mount@plt+0x8f18>
   1b0c4:	mov	r2, r8
   1b0c8:	mov	r1, r6
   1b0cc:	add	r0, sp, #280	; 0x118
   1b0d0:	bl	1cb18 <mount@plt+0xaa60>
   1b0d4:	cmp	r0, r8
   1b0d8:	beq	1afd0 <mount@plt+0x8f18>
   1b0dc:	ldr	r3, [r4]
   1b0e0:	cmp	r3, r8
   1b0e4:	beq	1b3d4 <mount@plt+0x931c>
   1b0e8:	mov	r0, r6
   1b0ec:	bl	216b0 <mount@plt+0xf5f8>
   1b0f0:	cmp	r0, #0
   1b0f4:	str	r0, [sp, #280]	; 0x118
   1b0f8:	bgt	1afd0 <mount@plt+0x8f18>
   1b0fc:	mov	r4, #0
   1b100:	b	1b040 <mount@plt+0x8f88>
   1b104:	mov	r3, #32
   1b108:	mov	r1, r5
   1b10c:	add	r0, sp, #12
   1b110:	strh	r3, [sp, #20]
   1b114:	bl	218f4 <mount@plt+0xf83c>
   1b118:	subs	r2, r0, #0
   1b11c:	bne	1b0fc <mount@plt+0x9044>
   1b120:	ldrh	r3, [sp, #12]
   1b124:	mov	r1, #131072	; 0x20000
   1b128:	mov	ip, #128	; 0x80
   1b12c:	rev16	r3, r3
   1b130:	mov	r6, #17
   1b134:	uxth	r3, r3
   1b138:	str	r3, [sp, #24]
   1b13c:	b	1affc <mount@plt+0x8f44>
   1b140:	mov	r3, #16
   1b144:	mov	r2, #8
   1b148:	ldr	r1, [pc, #1484]	; 1b71c <mount@plt+0x9664>
   1b14c:	mov	r0, r5
   1b150:	strh	r3, [sp, #22]
   1b154:	bl	12040 <strncmp@plt>
   1b158:	mov	r1, #58	; 0x3a
   1b15c:	cmp	r0, #0
   1b160:	addeq	r5, r5, #8
   1b164:	mov	r0, r5
   1b168:	bl	11e0c <strchr@plt>
   1b16c:	cmp	r0, #0
   1b170:	beq	1b1d0 <mount@plt+0x9118>
   1b174:	ldrb	r3, [r0, #1]
   1b178:	mov	r8, #0
   1b17c:	strb	r8, [r0]
   1b180:	cmp	r3, r8
   1b184:	beq	1b1d0 <mount@plt+0x9118>
   1b188:	add	r6, r0, #1
   1b18c:	mov	r0, r6
   1b190:	ldr	r1, [pc, #1428]	; 1b72c <mount@plt+0x9674>
   1b194:	bl	11b0c <strcmp@plt>
   1b198:	cmp	r0, r8
   1b19c:	beq	1b1d0 <mount@plt+0x9118>
   1b1a0:	mov	r2, r8
   1b1a4:	mov	r1, r6
   1b1a8:	add	r0, sp, #280	; 0x118
   1b1ac:	bl	1cb18 <mount@plt+0xaa60>
   1b1b0:	cmp	r0, r8
   1b1b4:	beq	1b1d0 <mount@plt+0x9118>
   1b1b8:	mov	r0, r6
   1b1bc:	ldr	r1, [pc, #1396]	; 1b738 <mount@plt+0x9680>
   1b1c0:	bl	11b0c <strcmp@plt>
   1b1c4:	cmp	r0, #0
   1b1c8:	bne	1b0fc <mount@plt+0x9044>
   1b1cc:	str	r0, [sp, #280]	; 0x118
   1b1d0:	ldrb	r3, [r5]
   1b1d4:	cmp	r3, #0
   1b1d8:	beq	1b1f0 <mount@plt+0x9138>
   1b1dc:	ldr	r1, [pc, #1352]	; 1b72c <mount@plt+0x9674>
   1b1e0:	mov	r0, r5
   1b1e4:	bl	11b0c <strcmp@plt>
   1b1e8:	cmp	r0, #0
   1b1ec:	bne	1b204 <mount@plt+0x914c>
   1b1f0:	mov	r1, #65536	; 0x10000
   1b1f4:	mov	r2, #0
   1b1f8:	mov	ip, #128	; 0x80
   1b1fc:	mov	r6, #16
   1b200:	b	1affc <mount@plt+0x8f44>
   1b204:	mov	r3, #32
   1b208:	mov	r1, r5
   1b20c:	add	r0, sp, #24
   1b210:	strh	r3, [sp, #20]
   1b214:	bl	210cc <mount@plt+0xf014>
   1b218:	cmn	r0, #1
   1b21c:	bne	1b1f0 <mount@plt+0x9138>
   1b220:	b	1b0fc <mount@plt+0x9044>
   1b224:	mvn	r0, #0
   1b228:	mov	r3, #40	; 0x28
   1b22c:	str	r0, [sp, #12]
   1b230:	mov	r2, #6
   1b234:	ldr	r1, [pc, #1252]	; 1b720 <mount@plt+0x9668>
   1b238:	mov	r0, r5
   1b23c:	strh	r3, [sp, #22]
   1b240:	bl	12040 <strncmp@plt>
   1b244:	cmp	r0, #0
   1b248:	bne	1b2f0 <mount@plt+0x9238>
   1b24c:	cmp	r8, #0
   1b250:	add	r5, r5, #6
   1b254:	beq	1b2fc <mount@plt+0x9244>
   1b258:	mov	r6, r5
   1b25c:	cmp	r5, #0
   1b260:	beq	1b278 <mount@plt+0x91c0>
   1b264:	ldr	r1, [pc, #1216]	; 1b72c <mount@plt+0x9674>
   1b268:	mov	r0, r5
   1b26c:	bl	11b0c <strcmp@plt>
   1b270:	cmp	r0, #0
   1b274:	bne	1b3b8 <mount@plt+0x9300>
   1b278:	ldrb	r3, [r6]
   1b27c:	cmp	r3, #0
   1b280:	beq	1b2b8 <mount@plt+0x9200>
   1b284:	ldr	r1, [pc, #1184]	; 1b72c <mount@plt+0x9674>
   1b288:	mov	r0, r6
   1b28c:	bl	11b0c <strcmp@plt>
   1b290:	cmp	r0, #0
   1b294:	beq	1b2b8 <mount@plt+0x9200>
   1b298:	mov	r3, #32
   1b29c:	mov	r1, r6
   1b2a0:	mov	r2, #0
   1b2a4:	add	r0, sp, #12
   1b2a8:	strh	r3, [sp, #20]
   1b2ac:	bl	1cf94 <mount@plt+0xaedc>
   1b2b0:	cmp	r0, #0
   1b2b4:	bne	1b0fc <mount@plt+0x9044>
   1b2b8:	ldr	r5, [sp, #12]
   1b2bc:	mov	r2, #264	; 0x108
   1b2c0:	mov	r1, #0
   1b2c4:	add	r0, sp, #16
   1b2c8:	bl	11e78 <memset@plt>
   1b2cc:	mov	r6, #40	; 0x28
   1b2d0:	mov	r3, #4
   1b2d4:	str	r5, [sp, #24]
   1b2d8:	strh	r3, [sp, #18]
   1b2dc:	strh	r6, [sp, #22]
   1b2e0:	mov	r1, #0
   1b2e4:	mov	r2, #256	; 0x100
   1b2e8:	ldr	ip, [pc, #1092]	; 1b734 <mount@plt+0x967c>
   1b2ec:	b	1affc <mount@plt+0x8f44>
   1b2f0:	cmp	r8, #0
   1b2f4:	movne	r6, r5
   1b2f8:	bne	1b264 <mount@plt+0x91ac>
   1b2fc:	mov	r1, #58	; 0x3a
   1b300:	mov	r0, r5
   1b304:	bl	11e0c <strchr@plt>
   1b308:	cmp	r0, #0
   1b30c:	beq	1b42c <mount@plt+0x9374>
   1b310:	mov	r3, #0
   1b314:	mov	r6, r5
   1b318:	strb	r3, [r0], #1
   1b31c:	mov	r5, r0
   1b320:	b	1b25c <mount@plt+0x91a4>
   1b324:	cmp	r0, #0
   1b328:	bne	1b464 <mount@plt+0x93ac>
   1b32c:	ldrb	r3, [r5]
   1b330:	cmp	r3, #0
   1b334:	cmpne	r3, #42	; 0x2a
   1b338:	beq	1af58 <mount@plt+0x8ea0>
   1b33c:	mov	r2, r6
   1b340:	mov	r1, r5
   1b344:	add	r0, sp, #16
   1b348:	bl	1d82c <mount@plt+0xb774>
   1b34c:	cmp	r0, #0
   1b350:	beq	1af58 <mount@plt+0x8ea0>
   1b354:	ldr	r2, [r4, #1332]	; 0x534
   1b358:	mov	r3, #0
   1b35c:	cmp	r2, r3
   1b360:	strh	r3, [sp, #20]
   1b364:	beq	1b674 <mount@plt+0x95bc>
   1b368:	cmp	r6, #0
   1b36c:	beq	1b568 <mount@plt+0x94b0>
   1b370:	mov	r1, r6
   1b374:	mov	r0, r5
   1b378:	bl	11bcc <gethostbyname2@plt>
   1b37c:	subs	r1, r0, #0
   1b380:	beq	1b39c <mount@plt+0x92e4>
   1b384:	ldr	r2, [r1, #16]
   1b388:	add	r0, sp, #16
   1b38c:	add	r1, r1, #8
   1b390:	bl	15d20 <mount@plt+0x3c68>
   1b394:	cmp	r0, #0
   1b398:	bne	1af60 <mount@plt+0x8ea8>
   1b39c:	ldr	r1, [pc, #920]	; 1b73c <mount@plt+0x9684>
   1b3a0:	mov	r3, r5
   1b3a4:	ldr	r2, [pc, #916]	; 1b740 <mount@plt+0x9688>
   1b3a8:	ldr	r0, [r1]
   1b3ac:	mov	r1, #1
   1b3b0:	bl	11ef0 <__fprintf_chk@plt>
   1b3b4:	b	1b0fc <mount@plt+0x9044>
   1b3b8:	mov	r1, r5
   1b3bc:	mov	r2, #0
   1b3c0:	add	r0, sp, #280	; 0x118
   1b3c4:	bl	1cf94 <mount@plt+0xaedc>
   1b3c8:	cmp	r0, #0
   1b3cc:	beq	1b278 <mount@plt+0x91c0>
   1b3d0:	b	1b0fc <mount@plt+0x9044>
   1b3d4:	bl	13970 <mount@plt+0x18b8>
   1b3d8:	b	1b0e8 <mount@plt+0x9030>
   1b3dc:	add	r5, r5, #1
   1b3e0:	mov	r0, r5
   1b3e4:	mov	r1, #93	; 0x5d
   1b3e8:	bl	11e0c <strchr@plt>
   1b3ec:	cmp	r0, #0
   1b3f0:	beq	1b0fc <mount@plt+0x9044>
   1b3f4:	mov	r3, #0
   1b3f8:	strb	r3, [r0], #1
   1b3fc:	b	1af44 <mount@plt+0x8e8c>
   1b400:	cmp	r0, #0
   1b404:	bne	1af14 <mount@plt+0x8e5c>
   1b408:	b	1af0c <mount@plt+0x8e54>
   1b40c:	mov	r0, r5
   1b410:	mov	r2, #6
   1b414:	ldr	r1, [pc, #808]	; 1b744 <mount@plt+0x968c>
   1b418:	bl	12040 <strncmp@plt>
   1b41c:	cmp	r0, #0
   1b420:	addeq	r5, r5, #6
   1b424:	moveq	r6, #10
   1b428:	b	1af14 <mount@plt+0x8e5c>
   1b42c:	mov	r6, r5
   1b430:	b	1b278 <mount@plt+0x91c0>
   1b434:	cmp	r8, #0
   1b438:	add	r0, r5, #1
   1b43c:	beq	1b324 <mount@plt+0x926c>
   1b440:	mov	sl, r5
   1b444:	ldrb	r3, [r5]
   1b448:	cmp	r3, #0
   1b44c:	cmpne	r3, #42	; 0x2a
   1b450:	bne	1b490 <mount@plt+0x93d8>
   1b454:	cmp	r8, #0
   1b458:	bne	1af58 <mount@plt+0x8ea0>
   1b45c:	mov	r5, sl
   1b460:	b	1b32c <mount@plt+0x9274>
   1b464:	ldrb	r3, [r0]
   1b468:	cmp	r3, #0
   1b46c:	beq	1b32c <mount@plt+0x9274>
   1b470:	mov	sl, r5
   1b474:	mov	r5, r0
   1b478:	cmp	r3, #58	; 0x3a
   1b47c:	moveq	r3, #0
   1b480:	strbeq	r3, [r5], #1
   1b484:	b	1b444 <mount@plt+0x938c>
   1b488:	mov	sl, r5
   1b48c:	b	1b478 <mount@plt+0x93c0>
   1b490:	mov	r2, #0
   1b494:	mov	r1, r5
   1b498:	add	r0, sp, #280	; 0x118
   1b49c:	bl	1cb18 <mount@plt+0xaa60>
   1b4a0:	cmp	r0, #0
   1b4a4:	beq	1b454 <mount@plt+0x939c>
   1b4a8:	ldr	r3, [r4, #1296]	; 0x510
   1b4ac:	tst	r3, #4
   1b4b0:	bne	1b5ec <mount@plt+0x9534>
   1b4b4:	tst	r3, #1
   1b4b8:	bne	1b6f0 <mount@plt+0x9638>
   1b4bc:	ldr	r9, [r4, #1052]	; 0x41c
   1b4c0:	cmp	r9, #0
   1b4c4:	beq	1b5c0 <mount@plt+0x9508>
   1b4c8:	ldr	r1, [r4, #1296]	; 0x510
   1b4cc:	ldr	r3, [pc, #628]	; 1b748 <mount@plt+0x9690>
   1b4d0:	and	r2, r1, #4
   1b4d4:	and	r1, r1, #1
   1b4d8:	ldr	fp, [pc, #620]	; 1b74c <mount@plt+0x9694>
   1b4dc:	stm	sp, {r1, r8}
   1b4e0:	mov	r8, r6
   1b4e4:	mov	r6, r5
   1b4e8:	mov	r5, r2
   1b4ec:	b	1b504 <mount@plt+0x944c>
   1b4f0:	cmp	r1, fp
   1b4f4:	beq	1b558 <mount@plt+0x94a0>
   1b4f8:	ldr	r9, [r9]
   1b4fc:	cmp	r9, #0
   1b500:	beq	1b5b4 <mount@plt+0x94fc>
   1b504:	ldr	r1, [r9, #12]
   1b508:	cmp	r1, r3
   1b50c:	bne	1b4f0 <mount@plt+0x9438>
   1b510:	cmp	r5, #0
   1b514:	beq	1b4f0 <mount@plt+0x9438>
   1b518:	ldr	r0, [r9, #8]
   1b51c:	cmp	r0, #0
   1b520:	beq	1b4f8 <mount@plt+0x9440>
   1b524:	mov	r1, r6
   1b528:	bl	11b0c <strcmp@plt>
   1b52c:	ldr	r3, [pc, #532]	; 1b748 <mount@plt+0x9690>
   1b530:	cmp	r0, #0
   1b534:	bne	1b4f8 <mount@plt+0x9440>
   1b538:	ldr	lr, [sp, #280]	; 0x118
   1b53c:	ldr	r1, [r9, #4]
   1b540:	cmp	lr, #0
   1b544:	ble	1b550 <mount@plt+0x9498>
   1b548:	cmp	lr, r1
   1b54c:	bne	1b6cc <mount@plt+0x9614>
   1b550:	str	r1, [sp, #280]	; 0x118
   1b554:	b	1b4f8 <mount@plt+0x9440>
   1b558:	ldr	r2, [sp]
   1b55c:	cmp	r2, #0
   1b560:	beq	1b4f8 <mount@plt+0x9440>
   1b564:	b	1b518 <mount@plt+0x9460>
   1b568:	mov	r1, #2
   1b56c:	mov	r0, r5
   1b570:	bl	11bcc <gethostbyname2@plt>
   1b574:	subs	r1, r0, #0
   1b578:	beq	1b688 <mount@plt+0x95d0>
   1b57c:	ldr	r2, [r1, #16]
   1b580:	add	r0, sp, #16
   1b584:	add	r1, r1, #8
   1b588:	bl	15d20 <mount@plt+0x3c68>
   1b58c:	mov	r1, #10
   1b590:	mov	r6, r0
   1b594:	mov	r0, r5
   1b598:	bl	11bcc <gethostbyname2@plt>
   1b59c:	cmp	r0, #0
   1b5a0:	bne	1b69c <mount@plt+0x95e4>
   1b5a4:	cmp	r6, #0
   1b5a8:	bne	1b024 <mount@plt+0x8f6c>
   1b5ac:	b	1b39c <mount@plt+0x92e4>
   1b5b0:	bl	11c2c <__stack_chk_fail@plt>
   1b5b4:	mov	r5, r6
   1b5b8:	mov	r6, r8
   1b5bc:	ldr	r8, [sp, #4]
   1b5c0:	ldr	r3, [sp, #280]	; 0x118
   1b5c4:	cmp	r3, #0
   1b5c8:	bgt	1b454 <mount@plt+0x939c>
   1b5cc:	ldr	r1, [pc, #360]	; 1b73c <mount@plt+0x9684>
   1b5d0:	mov	r3, r5
   1b5d4:	ldr	r2, [pc, #372]	; 1b750 <mount@plt+0x9698>
   1b5d8:	ldr	r0, [r1]
   1b5dc:	mov	r1, #1
   1b5e0:	bl	11ef0 <__fprintf_chk@plt>
   1b5e4:	mov	r4, #0
   1b5e8:	b	1b040 <mount@plt+0x8f88>
   1b5ec:	ldr	r1, [pc, #340]	; 1b748 <mount@plt+0x9690>
   1b5f0:	mov	r0, r5
   1b5f4:	bl	11e3c <getservbyname@plt>
   1b5f8:	ldr	r3, [r4, #1296]	; 0x510
   1b5fc:	tst	r3, #1
   1b600:	mov	r9, r0
   1b604:	bne	1b624 <mount@plt+0x956c>
   1b608:	cmp	r0, #0
   1b60c:	beq	1b4bc <mount@plt+0x9404>
   1b610:	ldr	r3, [r9, #8]
   1b614:	rev16	r3, r3
   1b618:	uxth	r3, r3
   1b61c:	str	r3, [sp, #280]	; 0x118
   1b620:	b	1b454 <mount@plt+0x939c>
   1b624:	ldr	r1, [pc, #288]	; 1b74c <mount@plt+0x9694>
   1b628:	mov	r0, r5
   1b62c:	bl	11e3c <getservbyname@plt>
   1b630:	adds	r3, r0, #0
   1b634:	movne	r3, #1
   1b638:	cmp	r9, #0
   1b63c:	cmpne	r0, #0
   1b640:	beq	1b6b4 <mount@plt+0x95fc>
   1b644:	ldr	r3, [r0, #8]
   1b648:	ldr	r2, [r9, #8]
   1b64c:	cmp	r2, r3
   1b650:	beq	1b610 <mount@plt+0x9558>
   1b654:	ldr	r1, [pc, #224]	; 1b73c <mount@plt+0x9684>
   1b658:	mov	r3, r5
   1b65c:	ldr	r2, [pc, #240]	; 1b754 <mount@plt+0x969c>
   1b660:	ldr	r0, [r1]
   1b664:	mov	r1, #1
   1b668:	bl	11ef0 <__fprintf_chk@plt>
   1b66c:	mov	r4, #0
   1b670:	b	1b040 <mount@plt+0x8f88>
   1b674:	mov	r0, #1
   1b678:	bl	11ca4 <sethostent@plt>
   1b67c:	mov	r3, #1
   1b680:	str	r3, [r4, #1332]	; 0x534
   1b684:	b	1b368 <mount@plt+0x92b0>
   1b688:	mov	r1, #10
   1b68c:	mov	r0, r5
   1b690:	bl	11bcc <gethostbyname2@plt>
   1b694:	cmp	r0, #0
   1b698:	beq	1b39c <mount@plt+0x92e4>
   1b69c:	ldr	r2, [r0, #16]
   1b6a0:	add	r1, r0, #8
   1b6a4:	add	r0, sp, #16
   1b6a8:	bl	15d20 <mount@plt+0x3c68>
   1b6ac:	add	r6, r6, r0
   1b6b0:	b	1b5a4 <mount@plt+0x94ec>
   1b6b4:	cmp	r9, #0
   1b6b8:	bne	1b610 <mount@plt+0x9558>
   1b6bc:	mov	r9, r0
   1b6c0:	cmp	r3, #0
   1b6c4:	beq	1b4bc <mount@plt+0x9404>
   1b6c8:	b	1b610 <mount@plt+0x9558>
   1b6cc:	ldr	r1, [pc, #104]	; 1b73c <mount@plt+0x9684>
   1b6d0:	mov	ip, r0
   1b6d4:	mov	r3, r6
   1b6d8:	ldr	r2, [pc, #116]	; 1b754 <mount@plt+0x969c>
   1b6dc:	ldr	r0, [r1]
   1b6e0:	mov	r1, #1
   1b6e4:	mov	r4, ip
   1b6e8:	bl	11ef0 <__fprintf_chk@plt>
   1b6ec:	b	1b040 <mount@plt+0x8f88>
   1b6f0:	ldr	r1, [pc, #84]	; 1b74c <mount@plt+0x9694>
   1b6f4:	mov	r0, r5
   1b6f8:	bl	11e3c <getservbyname@plt>
   1b6fc:	adds	r3, r0, #0
   1b700:	mov	r9, r0
   1b704:	movne	r3, #1
   1b708:	b	1b6c0 <mount@plt+0x9608>
   1b70c:	ldrdeq	fp, [r3], -r8
   1b710:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   1b714:	strdeq	r9, [r2], -r0
   1b718:	strdeq	r9, [r2], -r8
   1b71c:	andeq	r9, r2, r0, lsl #14
   1b720:	andeq	r9, r2, ip, lsl #14
   1b724:	andeq	r9, r2, r4, lsl r7
   1b728:	andeq	r7, r2, r0, ror r2
   1b72c:	andeq	r9, r2, r0, lsl #5
   1b730:	andeq	ip, r3, ip, lsr r2
   1b734:	andeq	r0, r0, r7, lsr fp
   1b738:	andeq	r9, r2, r8, lsr #7
   1b73c:	andeq	sp, r3, r8, ror pc
   1b740:	andeq	r9, r2, ip, ror #14
   1b744:	andeq	r9, r2, ip, lsl r7
   1b748:	ldrdeq	r9, [r2], -ip
   1b74c:	andeq	r9, r2, r0, lsl sl
   1b750:	andeq	r9, r2, r4, asr #14
   1b754:	andeq	r9, r2, r4, lsr #14
   1b758:	push	{r4, r5, lr}
   1b75c:	sub	sp, sp, #292	; 0x124
   1b760:	ldr	r4, [pc, #148]	; 1b7fc <mount@plt+0x9744>
   1b764:	mov	r1, #47	; 0x2f
   1b768:	mov	r5, r0
   1b76c:	ldr	r3, [r4]
   1b770:	str	r3, [sp, #284]	; 0x11c
   1b774:	bl	11e0c <strchr@plt>
   1b778:	cmp	r0, #0
   1b77c:	mov	r0, r5
   1b780:	beq	1b7d4 <mount@plt+0x971c>
   1b784:	add	r3, sp, #276	; 0x114
   1b788:	add	r2, sp, #272	; 0x110
   1b78c:	ldr	r1, [pc, #108]	; 1b800 <mount@plt+0x9748>
   1b790:	bl	11fa4 <sscanf@plt>
   1b794:	cmp	r0, #2
   1b798:	bne	1b7f0 <mount@plt+0x9738>
   1b79c:	mov	r0, #284	; 0x11c
   1b7a0:	bl	11d70 <malloc@plt>
   1b7a4:	subs	r5, r0, #0
   1b7a8:	beq	1b7b8 <mount@plt+0x9700>
   1b7ac:	mov	r2, #284	; 0x11c
   1b7b0:	mov	r1, sp
   1b7b4:	bl	11bc0 <memcpy@plt>
   1b7b8:	ldr	r2, [sp, #284]	; 0x11c
   1b7bc:	ldr	r3, [r4]
   1b7c0:	mov	r0, r5
   1b7c4:	cmp	r2, r3
   1b7c8:	bne	1b7f8 <mount@plt+0x9740>
   1b7cc:	add	sp, sp, #292	; 0x124
   1b7d0:	pop	{r4, r5, pc}
   1b7d4:	mvn	r3, #0
   1b7d8:	add	r2, sp, #272	; 0x110
   1b7dc:	ldr	r1, [pc, #32]	; 1b804 <mount@plt+0x974c>
   1b7e0:	str	r3, [sp, #276]	; 0x114
   1b7e4:	bl	11fa4 <sscanf@plt>
   1b7e8:	cmp	r0, #1
   1b7ec:	beq	1b79c <mount@plt+0x96e4>
   1b7f0:	mov	r5, #0
   1b7f4:	b	1b7b8 <mount@plt+0x9700>
   1b7f8:	bl	11c2c <__stack_chk_fail@plt>
   1b7fc:	ldrdeq	fp, [r3], -r8
   1b800:	andeq	r9, r2, r4, lsr #15
   1b804:	andeq	r9, r2, ip, lsr #15
   1b808:	push	{r4, r5, r6, lr}
   1b80c:	mov	r5, r0
   1b810:	mov	r0, #12
   1b814:	mov	r4, r1
   1b818:	bl	11d70 <malloc@plt>
   1b81c:	subs	r3, r0, #0
   1b820:	beq	1b834 <mount@plt+0x977c>
   1b824:	mov	r2, #0
   1b828:	str	r5, [r3]
   1b82c:	stmib	r3, {r2, r4}
   1b830:	pop	{r4, r5, r6, pc}
   1b834:	bl	1204c <abort@plt>
   1b838:	ldr	r3, [pc, #3400]	; 1c588 <mount@plt+0xa4d0>
   1b83c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b840:	sub	sp, sp, #1216	; 0x4c0
   1b844:	sub	sp, sp, #12
   1b848:	ldr	r1, [r3]
   1b84c:	mov	r3, #0
   1b850:	str	r1, [sp, #1220]	; 0x4c4
   1b854:	ldr	r1, [pc, #3376]	; 1c58c <mount@plt+0xa4d4>
   1b858:	ldr	r5, [pc, #3376]	; 1c590 <mount@plt+0xa4d8>
   1b85c:	mov	r7, r3
   1b860:	str	r3, [sp, #12]
   1b864:	strh	r3, [sp, #20]
   1b868:	str	r3, [r1]
   1b86c:	ldr	r3, [pc, #3360]	; 1c594 <mount@plt+0xa4dc>
   1b870:	add	r4, sp, #20
   1b874:	ldr	fp, [pc, #3356]	; 1c598 <mount@plt+0xa4e0>
   1b878:	mvn	r2, #1
   1b87c:	mov	r9, r4
   1b880:	add	sl, r5, #16
   1b884:	add	r6, sp, #420	; 0x1a4
   1b888:	str	r2, [r3]
   1b88c:	mov	r3, #200	; 0xc8
   1b890:	str	r6, [sp, #8]
   1b894:	str	r3, [sp, #4]
   1b898:	ldrsb	r3, [fp, r7]
   1b89c:	cmn	r3, #18
   1b8a0:	str	r3, [sp]
   1b8a4:	beq	1ba38 <mount@plt+0x9980>
   1b8a8:	ldr	r3, [pc, #3300]	; 1c594 <mount@plt+0xa4dc>
   1b8ac:	ldr	r3, [r3]
   1b8b0:	cmn	r3, #2
   1b8b4:	beq	1bc2c <mount@plt+0x9b74>
   1b8b8:	cmp	r3, #0
   1b8bc:	ble	1bc1c <mount@plt+0x9b64>
   1b8c0:	ldr	r2, [pc, #3284]	; 1c59c <mount@plt+0xa4e4>
   1b8c4:	cmp	r3, r2
   1b8c8:	ble	1c008 <mount@plt+0x9f50>
   1b8cc:	ldr	r3, [sp]
   1b8d0:	mov	r2, #2
   1b8d4:	add	r3, r3, #2
   1b8d8:	str	r3, [sp]
   1b8dc:	ldr	r3, [sp]
   1b8e0:	cmp	r3, #84	; 0x54
   1b8e4:	bhi	1ba38 <mount@plt+0x9980>
   1b8e8:	add	r3, fp, r3
   1b8ec:	add	r1, r3, #332	; 0x14c
   1b8f0:	ldrsb	r1, [r1]
   1b8f4:	cmp	r1, r2
   1b8f8:	bne	1ba38 <mount@plt+0x9980>
   1b8fc:	ldrb	r7, [r3, #420]	; 0x1a4
   1b900:	cmp	r7, #0
   1b904:	beq	1c030 <mount@plt+0x9f78>
   1b908:	ldr	r3, [sp, #12]
   1b90c:	ldr	r0, [pc, #3200]	; 1c594 <mount@plt+0xa4dc>
   1b910:	cmp	r3, #0
   1b914:	subne	r3, r3, #1
   1b918:	strne	r3, [sp, #12]
   1b91c:	ldr	r3, [pc, #3196]	; 1c5a0 <mount@plt+0xa4e8>
   1b920:	mvn	r1, #1
   1b924:	str	r1, [r0]
   1b928:	ldr	r3, [r3]
   1b92c:	mov	r2, r4
   1b930:	str	r3, [r6, #4]
   1b934:	add	r6, r6, #4
   1b938:	ldr	r0, [sp, #4]
   1b93c:	add	r4, r2, #2
   1b940:	sub	r3, r0, #-2147483647	; 0x80000001
   1b944:	strh	r7, [r2, #2]
   1b948:	lsl	r3, r3, #1
   1b94c:	add	r1, r9, r3
   1b950:	cmp	r4, r1
   1b954:	bcc	1ba24 <mount@plt+0x996c>
   1b958:	sub	r6, r4, r9
   1b95c:	ldr	r2, [pc, #3136]	; 1c5a4 <mount@plt+0xa4ec>
   1b960:	asr	r6, r6, #1
   1b964:	cmp	r0, r2
   1b968:	add	r6, r6, #1
   1b96c:	bhi	1c0f8 <mount@plt+0xa040>
   1b970:	add	r3, r3, #2
   1b974:	add	r2, r2, #1
   1b978:	cmp	r3, r2
   1b97c:	movcs	r3, r2
   1b980:	str	r3, [sp, #4]
   1b984:	lsl	r2, r3, #1
   1b988:	add	r0, r2, r3
   1b98c:	str	r2, [sp]
   1b990:	lsl	r0, r0, #1
   1b994:	add	r0, r0, #3
   1b998:	bl	11d70 <malloc@plt>
   1b99c:	subs	r8, r0, #0
   1b9a0:	beq	1c0f8 <mount@plt+0xa040>
   1b9a4:	lsl	r4, r6, #1
   1b9a8:	mov	r2, r4
   1b9ac:	mov	r1, r9
   1b9b0:	bl	11bc0 <memcpy@plt>
   1b9b4:	ldr	r2, [sp]
   1b9b8:	lsl	r6, r6, #2
   1b9bc:	add	r3, r2, #3
   1b9c0:	bic	r3, r3, #3
   1b9c4:	add	r3, r8, r3
   1b9c8:	mov	r0, r3
   1b9cc:	mov	r2, r6
   1b9d0:	ldr	r1, [sp, #8]
   1b9d4:	bl	11bc0 <memcpy@plt>
   1b9d8:	add	r2, sp, #20
   1b9dc:	cmp	r9, r2
   1b9e0:	mov	r3, r0
   1b9e4:	beq	1b9f8 <mount@plt+0x9940>
   1b9e8:	str	r0, [sp, #8]
   1b9ec:	mov	r0, r9
   1b9f0:	bl	11b78 <free@plt>
   1b9f4:	ldr	r3, [sp, #8]
   1b9f8:	ldr	r2, [sp]
   1b9fc:	sub	r4, r4, #2
   1ba00:	sub	r9, r2, #2
   1ba04:	add	r4, r8, r4
   1ba08:	add	r9, r8, r9
   1ba0c:	sub	r6, r6, #4
   1ba10:	cmp	r4, r9
   1ba14:	add	r6, r3, r6
   1ba18:	bcs	1c330 <mount@plt+0xa278>
   1ba1c:	mov	r9, r8
   1ba20:	str	r3, [sp, #8]
   1ba24:	cmp	r7, #35	; 0x23
   1ba28:	bne	1b898 <mount@plt+0x97e0>
   1ba2c:	mov	r4, r9
   1ba30:	mov	r5, #0
   1ba34:	b	1bad0 <mount@plt+0x9a18>
   1ba38:	add	r3, fp, r7
   1ba3c:	ldrb	r3, [r3, #508]	; 0x1fc
   1ba40:	cmp	r3, #0
   1ba44:	bne	1bb08 <mount@plt+0x9a50>
   1ba48:	ldr	r3, [sp, #12]
   1ba4c:	cmp	r3, #0
   1ba50:	beq	1c080 <mount@plt+0x9fc8>
   1ba54:	ldr	r3, [sp, #12]
   1ba58:	cmp	r3, #3
   1ba5c:	bne	1ba9c <mount@plt+0x99e4>
   1ba60:	ldr	r3, [pc, #2860]	; 1c594 <mount@plt+0xa4dc>
   1ba64:	ldr	r3, [r3]
   1ba68:	cmp	r3, #0
   1ba6c:	bgt	1c020 <mount@plt+0x9f68>
   1ba70:	bne	1ba9c <mount@plt+0x99e4>
   1ba74:	mov	r4, r9
   1ba78:	mov	r5, #1
   1ba7c:	b	1bad0 <mount@plt+0x9a18>
   1ba80:	ldrb	r7, [r3, #420]	; 0x1a4
   1ba84:	cmp	r7, #0
   1ba88:	bne	1c0ac <mount@plt+0x9ff4>
   1ba8c:	cmp	r4, r9
   1ba90:	beq	1bacc <mount@plt+0x9a14>
   1ba94:	ldrsh	r7, [r4, #-2]!
   1ba98:	sub	r6, r6, #4
   1ba9c:	ldrsb	r3, [fp, r7]
   1baa0:	cmn	r3, #18
   1baa4:	beq	1ba8c <mount@plt+0x99d4>
   1baa8:	add	r3, r3, #1
   1baac:	cmp	r3, #84	; 0x54
   1bab0:	bhi	1ba8c <mount@plt+0x99d4>
   1bab4:	add	r3, fp, r3
   1bab8:	ldrb	r2, [r3, #332]	; 0x14c
   1babc:	cmp	r2, #1
   1bac0:	beq	1ba80 <mount@plt+0x99c8>
   1bac4:	cmp	r4, r9
   1bac8:	bne	1ba94 <mount@plt+0x99dc>
   1bacc:	mov	r5, #1
   1bad0:	add	r3, sp, #20
   1bad4:	cmp	r4, r3
   1bad8:	beq	1bae4 <mount@plt+0x9a2c>
   1badc:	mov	r0, r4
   1bae0:	bl	11b78 <free@plt>
   1bae4:	ldr	r3, [pc, #2716]	; 1c588 <mount@plt+0xa4d0>
   1bae8:	ldr	r2, [sp, #1220]	; 0x4c4
   1baec:	mov	r0, r5
   1baf0:	ldr	r3, [r3]
   1baf4:	cmp	r2, r3
   1baf8:	bne	1c39c <mount@plt+0xa2e4>
   1bafc:	add	sp, sp, #1216	; 0x4c0
   1bb00:	add	sp, sp, #12
   1bb04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb08:	add	r1, fp, r3
   1bb0c:	sub	r2, r3, #2
   1bb10:	ldrb	r1, [r1, #568]	; 0x238
   1bb14:	cmp	r2, #29
   1bb18:	ldrls	pc, [pc, r2, lsl #2]
   1bb1c:	b	1c2e4 <mount@plt+0xa22c>
   1bb20:	andeq	ip, r1, r4, ror #4
   1bb24:	andeq	ip, r1, r4, ror #5
   1bb28:			; <UNDEFINED> instruction: 0x0001c2bc
   1bb2c:	andeq	ip, r1, r4, ror #5
   1bb30:	andeq	ip, r1, ip, lsl r1
   1bb34:	andeq	ip, r1, ip, lsr #5
   1bb38:	andeq	ip, r1, r4, lsl #5
   1bb3c:	andeq	ip, r1, r4, ror #5
   1bb40:	andeq	ip, r1, r4, ror #5
   1bb44:	ldrdeq	ip, [r1], -r8
   1bb48:			; <UNDEFINED> instruction: 0x0001c1b8
   1bb4c:	andeq	ip, r1, ip, asr #1
   1bb50:	andeq	ip, r1, ip, ror #1
   1bb54:	andeq	ip, r1, ip, lsr #3
   1bb58:	andeq	ip, r1, r0, lsr #3
   1bb5c:	muleq	r1, r4, r1
   1bb60:	andeq	ip, r1, r8, lsl #3
   1bb64:	andeq	ip, r1, ip, asr #1
   1bb68:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1bb6c:	andeq	ip, r1, r4, lsl r2
   1bb70:	andeq	ip, r1, r8, lsl #4
   1bb74:	andeq	ip, r1, r8, asr r2
   1bb78:	andeq	ip, r1, ip, asr #4
   1bb7c:	andeq	ip, r1, ip, ror #1
   1bb80:	andeq	ip, r1, r0, lsr #4
   1bb84:	andeq	ip, r1, ip, ror r1
   1bb88:	andeq	ip, r1, r0, asr r1
   1bb8c:	andeq	ip, r1, r4, asr #2
   1bb90:	strdeq	ip, [r1], -r0
   1bb94:	andeq	ip, r1, ip, lsr #4
   1bb98:	ldr	r2, [r5, #12]
   1bb9c:	cmp	r2, #0
   1bba0:	beq	1bc1c <mount@plt+0x9b64>
   1bba4:	mov	r8, r3
   1bba8:	b	1bbfc <mount@plt+0x9b44>
   1bbac:	mov	r1, #1024	; 0x400
   1bbb0:	mov	r0, sl
   1bbb4:	bl	11f38 <strnlen@plt>
   1bbb8:	cmp	r0, #0
   1bbbc:	beq	1c33c <mount@plt+0xa284>
   1bbc0:	ldr	r3, [pc, #2528]	; 1c5a8 <mount@plt+0xa4f0>
   1bbc4:	cmp	r0, r3
   1bbc8:	bhi	1c35c <mount@plt+0xa2a4>
   1bbcc:	sub	r0, r0, #1
   1bbd0:	add	r0, r5, r0
   1bbd4:	ldrb	r3, [r0, #16]
   1bbd8:	cmp	r3, #10
   1bbdc:	strbeq	r8, [r0, #16]
   1bbe0:	ldrb	r3, [r5, #16]
   1bbe4:	cmp	r3, #48	; 0x30
   1bbe8:	cmpne	r3, #35	; 0x23
   1bbec:	ldr	r3, [pc, #2488]	; 1c5ac <mount@plt+0xa4f4>
   1bbf0:	ldrne	r8, [pc, #2488]	; 1c5b0 <mount@plt+0xa4f8>
   1bbf4:	ldreq	r8, [r3]
   1bbf8:	strne	sl, [r3]
   1bbfc:	cmp	r8, #0
   1bc00:	bne	1bc34 <mount@plt+0x9b7c>
   1bc04:	ldr	r2, [r5, #12]
   1bc08:	mov	r1, #1024	; 0x400
   1bc0c:	mov	r0, sl
   1bc10:	bl	11b90 <fgets@plt>
   1bc14:	cmp	r0, #0
   1bc18:	bne	1bbac <mount@plt+0x9af4>
   1bc1c:	ldr	r3, [pc, #2416]	; 1c594 <mount@plt+0xa4dc>
   1bc20:	mov	r2, #0
   1bc24:	str	r2, [r3]
   1bc28:	b	1b8dc <mount@plt+0x9824>
   1bc2c:	ldr	r3, [pc, #2424]	; 1c5ac <mount@plt+0xa4f4>
   1bc30:	ldr	r8, [r3]
   1bc34:	ldrb	r3, [r8]
   1bc38:	cmp	r3, #0
   1bc3c:	bne	1bc78 <mount@plt+0x9bc0>
   1bc40:	ldr	r2, [r5]
   1bc44:	ldr	r1, [r5, #4]
   1bc48:	ldr	r0, [pc, #2396]	; 1c5ac <mount@plt+0xa4f4>
   1bc4c:	cmp	r2, r1
   1bc50:	str	r3, [r0]
   1bc54:	bge	1bb98 <mount@plt+0x9ae0>
   1bc58:	ldr	r3, [r5, #8]
   1bc5c:	add	r1, r2, #1
   1bc60:	str	r1, [r5]
   1bc64:	ldr	r8, [r3, r2, lsl #2]
   1bc68:	str	r8, [r0]
   1bc6c:	ldrb	r3, [r8]
   1bc70:	cmp	r3, #0
   1bc74:	beq	1bc40 <mount@plt+0x9b88>
   1bc78:	cmp	r3, #32
   1bc7c:	cmpne	r3, #9
   1bc80:	bne	1bc9c <mount@plt+0x9be4>
   1bc84:	ldrb	r3, [r8, #1]!
   1bc88:	cmp	r3, #9
   1bc8c:	cmpne	r3, #32
   1bc90:	beq	1bc84 <mount@plt+0x9bcc>
   1bc94:	cmp	r3, #0
   1bc98:	beq	1c2d8 <mount@plt+0xa220>
   1bc9c:	and	r2, r3, #223	; 0xdf
   1bca0:	cmp	r3, #9
   1bca4:	cmpne	r2, #0
   1bca8:	mov	r2, r8
   1bcac:	bne	1bccc <mount@plt+0x9c14>
   1bcb0:	b	1c31c <mount@plt+0xa264>
   1bcb4:	ldrb	r3, [r2, #1]
   1bcb8:	add	r2, r2, #1
   1bcbc:	and	r1, r3, #223	; 0xdf
   1bcc0:	cmp	r3, #9
   1bcc4:	cmpne	r1, #0
   1bcc8:	beq	1c314 <mount@plt+0xa25c>
   1bccc:	cmp	r3, #92	; 0x5c
   1bcd0:	bne	1bcb4 <mount@plt+0x9bfc>
   1bcd4:	cmp	r2, r8
   1bcd8:	movne	r3, r2
   1bcdc:	beq	1bcf0 <mount@plt+0x9c38>
   1bce0:	ldrb	r1, [r3, #-1]
   1bce4:	strb	r1, [r3], #-1
   1bce8:	cmp	r3, r8
   1bcec:	bne	1bce0 <mount@plt+0x9c28>
   1bcf0:	ldrb	r3, [r2, #1]
   1bcf4:	add	r8, r8, #1
   1bcf8:	add	r2, r2, #1
   1bcfc:	cmp	r3, #0
   1bd00:	bne	1bcb4 <mount@plt+0x9bfc>
   1bd04:	mov	r3, r8
   1bd08:	mov	r8, r2
   1bd0c:	ldr	r2, [pc, #2200]	; 1c5ac <mount@plt+0xa4f4>
   1bd10:	cmp	r3, #0
   1bd14:	str	r8, [r2]
   1bd18:	beq	1bc34 <mount@plt+0x9b7c>
   1bd1c:	ldr	r1, [pc, #2192]	; 1c5b4 <mount@plt+0xa4fc>
   1bd20:	mov	r0, r3
   1bd24:	mov	r8, r3
   1bd28:	bl	11b0c <strcmp@plt>
   1bd2c:	cmp	r0, #0
   1bd30:	beq	1c578 <mount@plt+0xa4c0>
   1bd34:	ldr	r1, [pc, #2172]	; 1c5b8 <mount@plt+0xa500>
   1bd38:	mov	r0, r8
   1bd3c:	bl	11b0c <strcmp@plt>
   1bd40:	cmp	r0, #0
   1bd44:	beq	1c578 <mount@plt+0xa4c0>
   1bd48:	ldr	r1, [pc, #2156]	; 1c5bc <mount@plt+0xa504>
   1bd4c:	mov	r0, r8
   1bd50:	bl	11b0c <strcmp@plt>
   1bd54:	cmp	r0, #0
   1bd58:	beq	1c568 <mount@plt+0xa4b0>
   1bd5c:	ldr	r1, [pc, #2140]	; 1c5c0 <mount@plt+0xa508>
   1bd60:	mov	r0, r8
   1bd64:	bl	11b0c <strcmp@plt>
   1bd68:	cmp	r0, #0
   1bd6c:	beq	1c568 <mount@plt+0xa4b0>
   1bd70:	ldr	r1, [pc, #2124]	; 1c5c4 <mount@plt+0xa50c>
   1bd74:	mov	r0, r8
   1bd78:	bl	11b0c <strcmp@plt>
   1bd7c:	cmp	r0, #0
   1bd80:	beq	1c568 <mount@plt+0xa4b0>
   1bd84:	ldr	r1, [pc, #2108]	; 1c5c8 <mount@plt+0xa510>
   1bd88:	mov	r0, r8
   1bd8c:	bl	11b0c <strcmp@plt>
   1bd90:	cmp	r0, #0
   1bd94:	beq	1c558 <mount@plt+0xa4a0>
   1bd98:	ldr	r1, [pc, #2092]	; 1c5cc <mount@plt+0xa514>
   1bd9c:	mov	r0, r8
   1bda0:	bl	11b0c <strcmp@plt>
   1bda4:	cmp	r0, #0
   1bda8:	beq	1c558 <mount@plt+0xa4a0>
   1bdac:	ldr	r1, [pc, #2076]	; 1c5d0 <mount@plt+0xa518>
   1bdb0:	mov	r0, r8
   1bdb4:	bl	11b0c <strcmp@plt>
   1bdb8:	cmp	r0, #0
   1bdbc:	beq	1c558 <mount@plt+0xa4a0>
   1bdc0:	ldr	r1, [pc, #2060]	; 1c5d4 <mount@plt+0xa51c>
   1bdc4:	mov	r0, r8
   1bdc8:	bl	11b0c <strcmp@plt>
   1bdcc:	cmp	r0, #0
   1bdd0:	beq	1c548 <mount@plt+0xa490>
   1bdd4:	ldr	r1, [pc, #2044]	; 1c5d8 <mount@plt+0xa520>
   1bdd8:	mov	r0, r8
   1bddc:	bl	11b0c <strcmp@plt>
   1bde0:	cmp	r0, #0
   1bde4:	beq	1c538 <mount@plt+0xa480>
   1bde8:	ldr	r1, [pc, #2028]	; 1c5dc <mount@plt+0xa524>
   1bdec:	mov	r0, r8
   1bdf0:	bl	11b0c <strcmp@plt>
   1bdf4:	cmp	r0, #0
   1bdf8:	beq	1c520 <mount@plt+0xa468>
   1bdfc:	ldr	r1, [pc, #2012]	; 1c5e0 <mount@plt+0xa528>
   1be00:	mov	r0, r8
   1be04:	bl	11b0c <strcmp@plt>
   1be08:	cmp	r0, #0
   1be0c:	beq	1c508 <mount@plt+0xa450>
   1be10:	ldr	r1, [pc, #1996]	; 1c5e4 <mount@plt+0xa52c>
   1be14:	mov	r0, r8
   1be18:	bl	11b0c <strcmp@plt>
   1be1c:	cmp	r0, #0
   1be20:	beq	1c4f0 <mount@plt+0xa438>
   1be24:	ldr	r1, [pc, #1980]	; 1c5e8 <mount@plt+0xa530>
   1be28:	mov	r0, r8
   1be2c:	bl	11b0c <strcmp@plt>
   1be30:	cmp	r0, #0
   1be34:	beq	1c4d8 <mount@plt+0xa420>
   1be38:	ldr	r1, [pc, #1964]	; 1c5ec <mount@plt+0xa534>
   1be3c:	mov	r0, r8
   1be40:	bl	11b0c <strcmp@plt>
   1be44:	cmp	r0, #0
   1be48:	beq	1c4c0 <mount@plt+0xa408>
   1be4c:	ldr	r1, [pc, #1948]	; 1c5f0 <mount@plt+0xa538>
   1be50:	mov	r0, r8
   1be54:	bl	11b0c <strcmp@plt>
   1be58:	cmp	r0, #0
   1be5c:	beq	1c4a8 <mount@plt+0xa3f0>
   1be60:	ldr	r1, [pc, #1932]	; 1c5f4 <mount@plt+0xa53c>
   1be64:	mov	r0, r8
   1be68:	bl	11b0c <strcmp@plt>
   1be6c:	cmp	r0, #0
   1be70:	beq	1c498 <mount@plt+0xa3e0>
   1be74:	ldr	r1, [pc, #1916]	; 1c5f8 <mount@plt+0xa540>
   1be78:	mov	r0, r8
   1be7c:	bl	11b0c <strcmp@plt>
   1be80:	cmp	r0, #0
   1be84:	beq	1c498 <mount@plt+0xa3e0>
   1be88:	ldr	r1, [pc, #1900]	; 1c5fc <mount@plt+0xa544>
   1be8c:	mov	r0, r8
   1be90:	bl	11b0c <strcmp@plt>
   1be94:	cmp	r0, #0
   1be98:	beq	1c498 <mount@plt+0xa3e0>
   1be9c:	ldr	r1, [pc, #1884]	; 1c600 <mount@plt+0xa548>
   1bea0:	mov	r0, r8
   1bea4:	bl	11b0c <strcmp@plt>
   1bea8:	cmp	r0, #0
   1beac:	beq	1c488 <mount@plt+0xa3d0>
   1beb0:	ldr	r1, [pc, #1868]	; 1c604 <mount@plt+0xa54c>
   1beb4:	mov	r0, r8
   1beb8:	bl	11b0c <strcmp@plt>
   1bebc:	cmp	r0, #0
   1bec0:	beq	1c488 <mount@plt+0xa3d0>
   1bec4:	ldr	r1, [pc, #1852]	; 1c608 <mount@plt+0xa550>
   1bec8:	mov	r0, r8
   1becc:	bl	11b0c <strcmp@plt>
   1bed0:	cmp	r0, #0
   1bed4:	beq	1c488 <mount@plt+0xa3d0>
   1bed8:	ldr	r1, [pc, #1836]	; 1c60c <mount@plt+0xa554>
   1bedc:	mov	r0, r8
   1bee0:	bl	11b0c <strcmp@plt>
   1bee4:	cmp	r0, #0
   1bee8:	beq	1c478 <mount@plt+0xa3c0>
   1beec:	ldr	r1, [pc, #1820]	; 1c610 <mount@plt+0xa558>
   1bef0:	mov	r0, r8
   1bef4:	bl	11b0c <strcmp@plt>
   1bef8:	cmp	r0, #0
   1befc:	beq	1c478 <mount@plt+0xa3c0>
   1bf00:	ldr	r1, [pc, #1804]	; 1c614 <mount@plt+0xa55c>
   1bf04:	mov	r0, r8
   1bf08:	bl	11b0c <strcmp@plt>
   1bf0c:	cmp	r0, #0
   1bf10:	beq	1c478 <mount@plt+0xa3c0>
   1bf14:	ldr	r1, [pc, #1788]	; 1c618 <mount@plt+0xa560>
   1bf18:	mov	r0, r8
   1bf1c:	bl	11b0c <strcmp@plt>
   1bf20:	cmp	r0, #0
   1bf24:	beq	1c468 <mount@plt+0xa3b0>
   1bf28:	ldr	r1, [pc, #1772]	; 1c61c <mount@plt+0xa564>
   1bf2c:	mov	r0, r8
   1bf30:	bl	11b0c <strcmp@plt>
   1bf34:	cmp	r0, #0
   1bf38:	beq	1c468 <mount@plt+0xa3b0>
   1bf3c:	ldr	r1, [pc, #1756]	; 1c620 <mount@plt+0xa568>
   1bf40:	mov	r0, r8
   1bf44:	bl	11b0c <strcmp@plt>
   1bf48:	cmp	r0, #0
   1bf4c:	beq	1c468 <mount@plt+0xa3b0>
   1bf50:	ldr	r1, [pc, #1740]	; 1c624 <mount@plt+0xa56c>
   1bf54:	mov	r0, r8
   1bf58:	bl	11b0c <strcmp@plt>
   1bf5c:	cmp	r0, #0
   1bf60:	beq	1c458 <mount@plt+0xa3a0>
   1bf64:	ldr	r1, [pc, #1724]	; 1c628 <mount@plt+0xa570>
   1bf68:	mov	r0, r8
   1bf6c:	bl	11b0c <strcmp@plt>
   1bf70:	cmp	r0, #0
   1bf74:	beq	1c458 <mount@plt+0xa3a0>
   1bf78:	ldr	r1, [pc, #1708]	; 1c62c <mount@plt+0xa574>
   1bf7c:	mov	r0, r8
   1bf80:	bl	11b0c <strcmp@plt>
   1bf84:	cmp	r0, #0
   1bf88:	beq	1c448 <mount@plt+0xa390>
   1bf8c:	ldr	r1, [pc, #1692]	; 1c630 <mount@plt+0xa578>
   1bf90:	mov	r0, r8
   1bf94:	bl	11b0c <strcmp@plt>
   1bf98:	cmp	r0, #0
   1bf9c:	beq	1c448 <mount@plt+0xa390>
   1bfa0:	ldr	r1, [pc, #1676]	; 1c634 <mount@plt+0xa57c>
   1bfa4:	mov	r0, r8
   1bfa8:	bl	11b0c <strcmp@plt>
   1bfac:	cmp	r0, #0
   1bfb0:	beq	1c430 <mount@plt+0xa378>
   1bfb4:	ldr	r3, [pc, #1520]	; 1c5ac <mount@plt+0xa4f4>
   1bfb8:	ldr	r1, [r3, #4]
   1bfbc:	cmp	r1, #268	; 0x10c
   1bfc0:	beq	1c3c8 <mount@plt+0xa310>
   1bfc4:	ldr	r3, [pc, #1488]	; 1c59c <mount@plt+0xa4e4>
   1bfc8:	cmp	r1, r3
   1bfcc:	beq	1c3a0 <mount@plt+0xa2e8>
   1bfd0:	sub	r1, r1, #260	; 0x104
   1bfd4:	sub	r1, r1, #1
   1bfd8:	cmp	r1, #1
   1bfdc:	movhi	r1, #0
   1bfe0:	movls	r1, #1
   1bfe4:	mov	r0, r8
   1bfe8:	bl	1ae30 <mount@plt+0x8d78>
   1bfec:	ldr	r3, [pc, #1452]	; 1c5a0 <mount@plt+0xa4e8>
   1bff0:	cmp	r0, #0
   1bff4:	str	r0, [r3]
   1bff8:	beq	1c37c <mount@plt+0xa2c4>
   1bffc:	ldr	r2, [pc, #1424]	; 1c594 <mount@plt+0xa4dc>
   1c000:	ldr	r3, [pc, #1584]	; 1c638 <mount@plt+0xa580>
   1c004:	str	r3, [r2]
   1c008:	add	r3, fp, r3
   1c00c:	ldrb	r2, [r3, #60]	; 0x3c
   1c010:	ldr	r3, [sp]
   1c014:	add	r3, r3, r2
   1c018:	str	r3, [sp]
   1c01c:	b	1b8dc <mount@plt+0x9824>
   1c020:	ldr	r2, [pc, #1388]	; 1c594 <mount@plt+0xa4dc>
   1c024:	mvn	r3, #1
   1c028:	str	r3, [r2]
   1c02c:	b	1ba9c <mount@plt+0x99e4>
   1c030:	ldr	r0, [r6, #4]
   1c034:	mov	r2, r4
   1c038:	mov	r8, r6
   1c03c:	mvn	r3, #23
   1c040:	ldrsh	r1, [r2]
   1c044:	add	r6, r8, #4
   1c048:	str	r0, [r8, #4]
   1c04c:	add	r7, r1, r7
   1c050:	cmp	r7, #84	; 0x54
   1c054:	bhi	1c070 <mount@plt+0x9fb8>
   1c058:	add	r7, fp, r7
   1c05c:	add	r0, r7, #332	; 0x14c
   1c060:	ldrsb	r0, [r0]
   1c064:	cmp	r0, r1
   1c068:	ldrbeq	r7, [r7, #420]	; 0x1a4
   1c06c:	beq	1b938 <mount@plt+0x9880>
   1c070:	add	r3, fp, r3
   1c074:	add	r3, r3, #640	; 0x280
   1c078:	ldrsb	r7, [r3]
   1c07c:	b	1b938 <mount@plt+0x9880>
   1c080:	ldr	lr, [pc, #1284]	; 1c58c <mount@plt+0xa4d4>
   1c084:	ldr	r2, [pc, #1456]	; 1c63c <mount@plt+0xa584>
   1c088:	ldr	r3, [pc, #1456]	; 1c640 <mount@plt+0xa588>
   1c08c:	ldr	ip, [lr]
   1c090:	ldr	r0, [r2]
   1c094:	add	ip, ip, #1
   1c098:	ldr	r2, [pc, #1444]	; 1c644 <mount@plt+0xa58c>
   1c09c:	mov	r1, #1
   1c0a0:	str	ip, [lr]
   1c0a4:	bl	11ef0 <__fprintf_chk@plt>
   1c0a8:	b	1ba9c <mount@plt+0x99e4>
   1c0ac:	ldr	r3, [pc, #1260]	; 1c5a0 <mount@plt+0xa4e8>
   1c0b0:	mov	r1, #3
   1c0b4:	str	r1, [sp, #12]
   1c0b8:	ldr	r3, [r3]
   1c0bc:	mov	r2, r4
   1c0c0:	str	r3, [r6, #4]
   1c0c4:	add	r6, r6, #4
   1c0c8:	b	1b938 <mount@plt+0x9880>
   1c0cc:	mov	r8, r6
   1c0d0:	mov	r0, #0
   1c0d4:	ldr	r1, [r8], #-12
   1c0d8:	bl	1b808 <mount@plt+0x9750>
   1c0dc:	mvn	r7, #7
   1c0e0:	sub	r2, r4, #6
   1c0e4:	mov	r3, #5
   1c0e8:	b	1c040 <mount@plt+0x9f88>
   1c0ec:	mov	r8, r6
   1c0f0:	mov	r0, #1
   1c0f4:	b	1c0d4 <mount@plt+0xa01c>
   1c0f8:	ldr	r1, [pc, #1340]	; 1c63c <mount@plt+0xa584>
   1c0fc:	ldr	r3, [pc, #1348]	; 1c648 <mount@plt+0xa590>
   1c100:	ldr	r2, [pc, #1340]	; 1c644 <mount@plt+0xa58c>
   1c104:	ldr	r0, [r1]
   1c108:	mov	r1, #1
   1c10c:	mov	r4, r9
   1c110:	bl	11ef0 <__fprintf_chk@plt>
   1c114:	mov	r5, #2
   1c118:	b	1bad0 <mount@plt+0x9a18>
   1c11c:	ldr	r1, [r6, #-8]
   1c120:	mov	r8, r6
   1c124:	mov	r0, #2
   1c128:	bl	1b808 <mount@plt+0x9750>
   1c12c:	ldr	r3, [r8], #-12
   1c130:	sub	r2, r4, #6
   1c134:	mov	r7, #53	; 0x35
   1c138:	str	r3, [r0, #4]
   1c13c:	mov	r3, #3
   1c140:	b	1c040 <mount@plt+0x9f88>
   1c144:	mov	r8, r6
   1c148:	mov	r0, #11
   1c14c:	b	1c0d4 <mount@plt+0xa01c>
   1c150:	mov	r8, r6
   1c154:	mov	r0, #10
   1c158:	ldr	r1, [r8], #-12
   1c15c:	bl	1b808 <mount@plt+0x9750>
   1c160:	mvn	r7, #7
   1c164:	mov	r1, r0
   1c168:	mov	r0, #4
   1c16c:	bl	1b808 <mount@plt+0x9750>
   1c170:	sub	r2, r4, #6
   1c174:	mov	r3, #5
   1c178:	b	1c040 <mount@plt+0x9f88>
   1c17c:	mov	r8, r6
   1c180:	mov	r0, #10
   1c184:	b	1c0d4 <mount@plt+0xa01c>
   1c188:	mov	r8, r6
   1c18c:	mov	r0, #5
   1c190:	b	1c158 <mount@plt+0xa0a0>
   1c194:	mov	r8, r6
   1c198:	mov	r0, #6
   1c19c:	b	1c158 <mount@plt+0xa0a0>
   1c1a0:	mov	r8, r6
   1c1a4:	mov	r0, #6
   1c1a8:	b	1c0d4 <mount@plt+0xa01c>
   1c1ac:	mov	r8, r6
   1c1b0:	mov	r0, #5
   1c1b4:	b	1c0d4 <mount@plt+0xa01c>
   1c1b8:	mov	r8, r6
   1c1bc:	mov	r0, #4
   1c1c0:	ldr	r1, [r8], #-8
   1c1c4:	bl	1b808 <mount@plt+0x9750>
   1c1c8:	mvn	r7, #7
   1c1cc:	sub	r2, r4, #4
   1c1d0:	mov	r3, #5
   1c1d4:	b	1c040 <mount@plt+0x9f88>
   1c1d8:	sub	r2, r4, #6
   1c1dc:	ldr	r0, [r6, #-4]
   1c1e0:	sub	r8, r6, #12
   1c1e4:	mov	r3, #5
   1c1e8:	mvn	r7, #7
   1c1ec:	b	1c040 <mount@plt+0x9f88>
   1c1f0:	mov	r8, r6
   1c1f4:	mov	r0, #11
   1c1f8:	b	1c158 <mount@plt+0xa0a0>
   1c1fc:	mov	r8, r6
   1c200:	mov	r0, #0
   1c204:	b	1c158 <mount@plt+0xa0a0>
   1c208:	mov	r8, r6
   1c20c:	mov	r0, #8
   1c210:	b	1c0d4 <mount@plt+0xa01c>
   1c214:	mov	r8, r6
   1c218:	mov	r0, #7
   1c21c:	b	1c0d4 <mount@plt+0xa01c>
   1c220:	mov	r8, r6
   1c224:	mov	r0, #1
   1c228:	b	1c158 <mount@plt+0xa0a0>
   1c22c:	mov	r1, #0
   1c230:	mov	r0, #9
   1c234:	bl	1b808 <mount@plt+0x9750>
   1c238:	sub	r8, r6, #4
   1c23c:	sub	r2, r4, #2
   1c240:	mov	r3, #5
   1c244:	mvn	r7, #7
   1c248:	b	1c040 <mount@plt+0x9f88>
   1c24c:	mov	r8, r6
   1c250:	mov	r0, #7
   1c254:	b	1c158 <mount@plt+0xa0a0>
   1c258:	mov	r8, r6
   1c25c:	mov	r0, #8
   1c260:	b	1c158 <mount@plt+0xa0a0>
   1c264:	mov	r8, r6
   1c268:	ldr	r3, [r5, #1040]	; 0x410
   1c26c:	ldr	r0, [r8], #-4
   1c270:	sub	r2, r4, #2
   1c274:	str	r0, [r3]
   1c278:	mvn	r7, #17
   1c27c:	mov	r3, #1
   1c280:	b	1c040 <mount@plt+0x9f88>
   1c284:	ldr	r1, [r6, #-4]
   1c288:	mov	r0, #3
   1c28c:	bl	1b808 <mount@plt+0x9750>
   1c290:	mov	r8, r6
   1c294:	sub	r2, r4, #4
   1c298:	ldr	r3, [r8], #-8
   1c29c:	mov	r7, #53	; 0x35
   1c2a0:	str	r3, [r0, #4]
   1c2a4:	mov	r3, #3
   1c2a8:	b	1c040 <mount@plt+0x9f88>
   1c2ac:	mov	r8, r6
   1c2b0:	ldr	r1, [r6, #-8]
   1c2b4:	mov	r0, #3
   1c2b8:	b	1c128 <mount@plt+0xa070>
   1c2bc:	sxth	r2, r1
   1c2c0:	mov	r3, #2
   1c2c4:	mvn	r7, #17
   1c2c8:	sub	r8, r6, r2, lsl r3
   1c2cc:	mov	r0, #0
   1c2d0:	sub	r2, r4, r2, lsl #1
   1c2d4:	b	1c040 <mount@plt+0x9f88>
   1c2d8:	ldr	r3, [pc, #716]	; 1c5ac <mount@plt+0xa4f4>
   1c2dc:	str	r8, [r3]
   1c2e0:	b	1bc34 <mount@plt+0x9b7c>
   1c2e4:	add	r3, fp, r3
   1c2e8:	sxth	r2, r1
   1c2ec:	ldrb	r3, [r3, #600]	; 0x258
   1c2f0:	rsb	r0, r1, #1
   1c2f4:	sub	r8, r6, r2, lsl #2
   1c2f8:	sub	r3, r3, #24
   1c2fc:	add	r1, fp, r3
   1c300:	add	r1, r1, #632	; 0x278
   1c304:	ldr	r0, [r6, r0, lsl #2]
   1c308:	ldrsb	r7, [r1]
   1c30c:	sub	r2, r4, r2, lsl #1
   1c310:	b	1c040 <mount@plt+0x9f88>
   1c314:	cmp	r3, #0
   1c318:	beq	1bd04 <mount@plt+0x9c4c>
   1c31c:	mov	r1, #0
   1c320:	mov	r3, r8
   1c324:	strb	r1, [r2], #1
   1c328:	mov	r8, r2
   1c32c:	b	1bd0c <mount@plt+0x9c54>
   1c330:	mov	r4, r8
   1c334:	mov	r5, #1
   1c338:	b	1badc <mount@plt+0x9a24>
   1c33c:	ldr	r3, [pc, #760]	; 1c63c <mount@plt+0xa584>
   1c340:	mov	r2, #13
   1c344:	mov	r1, #1
   1c348:	ldr	r3, [r3]
   1c34c:	ldr	r0, [pc, #760]	; 1c64c <mount@plt+0xa594>
   1c350:	bl	11cb0 <fwrite@plt>
   1c354:	mvn	r0, #0
   1c358:	bl	11ddc <exit@plt>
   1c35c:	ldr	r3, [pc, #728]	; 1c63c <mount@plt+0xa584>
   1c360:	mov	r2, #24
   1c364:	mov	r1, #1
   1c368:	ldr	r3, [r3]
   1c36c:	ldr	r0, [pc, #732]	; 1c650 <mount@plt+0xa598>
   1c370:	bl	11cb0 <fwrite@plt>
   1c374:	mvn	r0, #0
   1c378:	bl	11ddc <exit@plt>
   1c37c:	ldr	r3, [pc, #696]	; 1c63c <mount@plt+0xa584>
   1c380:	mov	r2, #30
   1c384:	mov	r1, #1
   1c388:	ldr	r3, [r3]
   1c38c:	ldr	r0, [pc, #704]	; 1c654 <mount@plt+0xa59c>
   1c390:	bl	11cb0 <fwrite@plt>
   1c394:	mov	r0, #1
   1c398:	bl	11ddc <exit@plt>
   1c39c:	bl	11c2c <__stack_chk_fail@plt>
   1c3a0:	mov	r0, r8
   1c3a4:	bl	1b758 <mount@plt+0x96a0>
   1c3a8:	ldr	r3, [pc, #496]	; 1c5a0 <mount@plt+0xa4e8>
   1c3ac:	cmp	r0, #0
   1c3b0:	str	r0, [r3]
   1c3b4:	beq	1c3f0 <mount@plt+0xa338>
   1c3b8:	ldr	r2, [pc, #468]	; 1c594 <mount@plt+0xa4dc>
   1c3bc:	ldr	r3, [pc, #660]	; 1c658 <mount@plt+0xa5a0>
   1c3c0:	str	r3, [r2]
   1c3c4:	b	1c008 <mount@plt+0x9f50>
   1c3c8:	mov	r0, r8
   1c3cc:	bl	1ad64 <mount@plt+0x8cac>
   1c3d0:	ldr	r3, [pc, #456]	; 1c5a0 <mount@plt+0xa4e8>
   1c3d4:	cmp	r0, #0
   1c3d8:	str	r0, [r3]
   1c3dc:	beq	1c410 <mount@plt+0xa358>
   1c3e0:	ldr	r2, [pc, #428]	; 1c594 <mount@plt+0xa4dc>
   1c3e4:	ldr	r3, [pc, #624]	; 1c65c <mount@plt+0xa5a4>
   1c3e8:	str	r3, [r2]
   1c3ec:	b	1c008 <mount@plt+0x9f50>
   1c3f0:	ldr	r1, [pc, #580]	; 1c63c <mount@plt+0xa584>
   1c3f4:	mov	r3, r8
   1c3f8:	ldr	r2, [pc, #608]	; 1c660 <mount@plt+0xa5a8>
   1c3fc:	ldr	r0, [r1]
   1c400:	mov	r1, #1
   1c404:	bl	11ef0 <__fprintf_chk@plt>
   1c408:	mov	r0, #1
   1c40c:	bl	11ddc <exit@plt>
   1c410:	ldr	r3, [pc, #548]	; 1c63c <mount@plt+0xa584>
   1c414:	mov	r2, #21
   1c418:	mov	r1, #1
   1c41c:	ldr	r3, [r3]
   1c420:	ldr	r0, [pc, #572]	; 1c664 <mount@plt+0xa5ac>
   1c424:	bl	11cb0 <fwrite@plt>
   1c428:	mov	r0, #1
   1c42c:	bl	11ddc <exit@plt>
   1c430:	ldr	r2, [pc, #372]	; 1c5ac <mount@plt+0xa4f4>
   1c434:	ldr	r3, [pc, #556]	; 1c668 <mount@plt+0xa5b0>
   1c438:	str	r3, [r2, #4]
   1c43c:	ldr	r2, [pc, #336]	; 1c594 <mount@plt+0xa4dc>
   1c440:	str	r3, [r2]
   1c444:	b	1c008 <mount@plt+0x9f50>
   1c448:	ldr	r2, [pc, #324]	; 1c594 <mount@plt+0xa4dc>
   1c44c:	mov	r3, #60	; 0x3c
   1c450:	str	r3, [r2]
   1c454:	b	1c008 <mount@plt+0x9f50>
   1c458:	ldr	r2, [pc, #308]	; 1c594 <mount@plt+0xa4dc>
   1c45c:	mov	r3, #62	; 0x3e
   1c460:	str	r3, [r2]
   1c464:	b	1c008 <mount@plt+0x9f50>
   1c468:	ldr	r2, [pc, #292]	; 1c594 <mount@plt+0xa4dc>
   1c46c:	mov	r3, #61	; 0x3d
   1c470:	str	r3, [r2]
   1c474:	b	1c008 <mount@plt+0x9f50>
   1c478:	ldr	r2, [pc, #276]	; 1c594 <mount@plt+0xa4dc>
   1c47c:	ldr	r3, [pc, #488]	; 1c66c <mount@plt+0xa5b4>
   1c480:	str	r3, [r2]
   1c484:	b	1c008 <mount@plt+0x9f50>
   1c488:	ldr	r2, [pc, #260]	; 1c594 <mount@plt+0xa4dc>
   1c48c:	ldr	r3, [pc, #476]	; 1c670 <mount@plt+0xa5b8>
   1c490:	str	r3, [r2]
   1c494:	b	1c008 <mount@plt+0x9f50>
   1c498:	ldr	r2, [pc, #244]	; 1c594 <mount@plt+0xa4dc>
   1c49c:	mov	r3, #264	; 0x108
   1c4a0:	str	r3, [r2]
   1c4a4:	b	1c008 <mount@plt+0x9f50>
   1c4a8:	ldr	r2, [pc, #252]	; 1c5ac <mount@plt+0xa4f4>
   1c4ac:	ldr	r3, [pc, #232]	; 1c59c <mount@plt+0xa4e4>
   1c4b0:	str	r3, [r2, #4]
   1c4b4:	ldr	r2, [pc, #216]	; 1c594 <mount@plt+0xa4dc>
   1c4b8:	str	r3, [r2]
   1c4bc:	b	1c008 <mount@plt+0x9f50>
   1c4c0:	ldr	r2, [pc, #228]	; 1c5ac <mount@plt+0xa4f4>
   1c4c4:	mov	r3, #268	; 0x10c
   1c4c8:	str	r3, [r2, #4]
   1c4cc:	ldr	r2, [pc, #192]	; 1c594 <mount@plt+0xa4dc>
   1c4d0:	str	r3, [r2]
   1c4d4:	b	1c008 <mount@plt+0x9f50>
   1c4d8:	ldr	r2, [pc, #204]	; 1c5ac <mount@plt+0xa4f4>
   1c4dc:	ldr	r3, [pc, #400]	; 1c674 <mount@plt+0xa5bc>
   1c4e0:	str	r3, [r2, #4]
   1c4e4:	ldr	r2, [pc, #168]	; 1c594 <mount@plt+0xa4dc>
   1c4e8:	str	r3, [r2]
   1c4ec:	b	1c008 <mount@plt+0x9f50>
   1c4f0:	ldr	r2, [pc, #180]	; 1c5ac <mount@plt+0xa4f4>
   1c4f4:	ldr	r3, [pc, #380]	; 1c678 <mount@plt+0xa5c0>
   1c4f8:	str	r3, [r2, #4]
   1c4fc:	ldr	r2, [pc, #144]	; 1c594 <mount@plt+0xa4dc>
   1c500:	str	r3, [r2]
   1c504:	b	1c008 <mount@plt+0x9f50>
   1c508:	ldr	r2, [pc, #156]	; 1c5ac <mount@plt+0xa4f4>
   1c50c:	mov	r3, #260	; 0x104
   1c510:	str	r3, [r2, #4]
   1c514:	ldr	r2, [pc, #120]	; 1c594 <mount@plt+0xa4dc>
   1c518:	str	r3, [r2]
   1c51c:	b	1c008 <mount@plt+0x9f50>
   1c520:	ldr	r2, [pc, #132]	; 1c5ac <mount@plt+0xa4f4>
   1c524:	ldr	r3, [pc, #336]	; 1c67c <mount@plt+0xa5c4>
   1c528:	str	r3, [r2, #4]
   1c52c:	ldr	r2, [pc, #96]	; 1c594 <mount@plt+0xa4dc>
   1c530:	str	r3, [r2]
   1c534:	b	1c008 <mount@plt+0x9f50>
   1c538:	ldr	r2, [pc, #84]	; 1c594 <mount@plt+0xa4dc>
   1c53c:	mov	r3, #41	; 0x29
   1c540:	str	r3, [r2]
   1c544:	b	1c008 <mount@plt+0x9f50>
   1c548:	ldr	r2, [pc, #68]	; 1c594 <mount@plt+0xa4dc>
   1c54c:	mov	r3, #40	; 0x28
   1c550:	str	r3, [r2]
   1c554:	b	1c008 <mount@plt+0x9f50>
   1c558:	ldr	r2, [pc, #52]	; 1c594 <mount@plt+0xa4dc>
   1c55c:	mov	r3, #124	; 0x7c
   1c560:	str	r3, [r2]
   1c564:	b	1c008 <mount@plt+0x9f50>
   1c568:	ldr	r2, [pc, #36]	; 1c594 <mount@plt+0xa4dc>
   1c56c:	mov	r3, #38	; 0x26
   1c570:	str	r3, [r2]
   1c574:	b	1c008 <mount@plt+0x9f50>
   1c578:	ldr	r2, [pc, #20]	; 1c594 <mount@plt+0xa4dc>
   1c57c:	mov	r3, #33	; 0x21
   1c580:	str	r3, [r2]
   1c584:	b	1c008 <mount@plt+0x9f50>
   1c588:	ldrdeq	fp, [r3], -r8
   1c58c:	andeq	r1, r4, r8, ror pc
   1c590:	andeq	pc, r3, ip, asr #9
   1c594:	andeq	r1, r4, ip, ror pc
   1c598:	andeq	r9, r2, ip, lsl #26
   1c59c:	andeq	r0, r0, lr, lsl #2
   1c5a0:	andeq	r1, r4, r0, lsl #31
   1c5a4:	andeq	r2, r0, pc, lsl #14
   1c5a8:	strdeq	r0, [r0], -lr
   1c5ac:	andeq	ip, r3, r4, lsr #6
   1c5b0:	ldrdeq	pc, [r3], -ip
   1c5b4:	andeq	r9, r2, r0, asr #31
   1c5b8:	andeq	r9, r2, r4, asr #31
   1c5bc:	andeq	r9, r2, r8, asr #31
   1c5c0:	andeq	r9, r2, ip, asr #31
   1c5c4:	ldrdeq	r9, [r2], -r0
   1c5c8:	ldrdeq	r9, [r2], -r4
   1c5cc:	ldrdeq	r9, [r2], -r8
   1c5d0:	andeq	sl, r2, r0, lsr ip
   1c5d4:	andeq	r9, r2, r8, lsr #6
   1c5d8:	andeq	r9, r2, ip, asr #4
   1c5dc:	ldrdeq	r9, [r2], -ip
   1c5e0:	andeq	r9, r2, r0, ror #31
   1c5e4:	andeq	r9, r2, r4, ror #31
   1c5e8:	andeq	r9, r2, ip, ror #31
   1c5ec:	strdeq	r9, [r2], -r4
   1c5f0:	strdeq	r9, [r2], -r8
   1c5f4:	andeq	sl, r2, r0
   1c5f8:	andeq	sl, r2, r4, lsr r4
   1c5fc:	andeq	sl, r2, r4
   1c600:	andeq	sl, r2, r8
   1c604:	andeq	sl, r2, ip
   1c608:	andeq	sl, r2, r0, lsl r0
   1c60c:	andeq	sl, r2, r4, lsl r0
   1c610:	andeq	sl, r2, r8, lsl r0
   1c614:	andeq	sl, r2, ip, lsl r0
   1c618:	andeq	sl, r2, r0, lsr #32
   1c61c:	andeq	sl, r2, r4, lsr #32
   1c620:	andeq	sl, r2, r8, lsr #32
   1c624:	andeq	sl, r2, ip, lsr #32
   1c628:	andeq	sl, r2, r0, lsr r0
   1c62c:	andeq	sl, r2, r4, lsr r0
   1c630:	andeq	sl, r2, r8, lsr r0
   1c634:	andeq	sl, r2, ip, lsr r0
   1c638:	andeq	r0, r0, r2, lsl #2
   1c63c:	andeq	sp, r3, r8, ror pc
   1c640:	muleq	r2, r8, r0
   1c644:	andeq	sl, r2, r8, lsr #1
   1c648:	ldrdeq	sl, [r2], -r8
   1c64c:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   1c650:	andeq	r9, r2, r4, lsr #31
   1c654:	andeq	sl, r2, r8, ror r0
   1c658:	andeq	r0, r0, sp, lsl #2
   1c65c:	andeq	r0, r0, fp, lsl #2
   1c660:	andeq	sl, r2, r0, rrx
   1c664:	andeq	sl, r2, r8, asr #32
   1c668:	andeq	r0, r0, sl, lsl #2
   1c66c:	andeq	r0, r0, r9, lsl #2
   1c670:	andeq	r0, r0, r7, lsl #2
   1c674:	andeq	r0, r0, r6, lsl #2
   1c678:	andeq	r0, r0, r5, lsl #2
   1c67c:	andeq	r0, r0, r3, lsl #2
   1c680:	ldr	ip, [pc, #52]	; 1c6bc <mount@plt+0xa604>
   1c684:	push	{r4, lr}
   1c688:	stmib	ip, {r1, r2, r3}
   1c68c:	str	r0, [ip, #1040]	; 0x410
   1c690:	bl	1b838 <mount@plt+0x9780>
   1c694:	cmp	r0, #0
   1c698:	popeq	{r4, pc}
   1c69c:	ldr	r3, [pc, #28]	; 1c6c0 <mount@plt+0xa608>
   1c6a0:	mov	r2, #8
   1c6a4:	mov	r1, #1
   1c6a8:	ldr	r3, [r3]
   1c6ac:	ldr	r0, [pc, #16]	; 1c6c4 <mount@plt+0xa60c>
   1c6b0:	bl	11cb0 <fwrite@plt>
   1c6b4:	mvn	r0, #0
   1c6b8:	pop	{r4, pc}
   1c6bc:	andeq	pc, r3, ip, asr #9
   1c6c0:	andeq	sp, r3, r8, ror pc
   1c6c4:	andeq	sl, r2, ip, ror #1
   1c6c8:	push	{r4, r5, r6, lr}
   1c6cc:	mov	r4, r1
   1c6d0:	mov	r5, r0
   1c6d4:	bl	21e68 <mount@plt+0xfdb0>
   1c6d8:	cmp	r0, #0
   1c6dc:	bne	1c6f4 <mount@plt+0xa63c>
   1c6e0:	mov	r0, r5
   1c6e4:	ldr	r3, [r4]
   1c6e8:	ldr	r1, [r4, #4]
   1c6ec:	pop	{r4, r5, r6, lr}
   1c6f0:	bx	r3
   1c6f4:	mvn	r0, #0
   1c6f8:	pop	{r4, r5, r6, pc}
   1c6fc:	push	{r4, r5, r6, lr}
   1c700:	mov	r5, r1
   1c704:	ldr	r1, [pc, #32]	; 1c72c <mount@plt+0xa674>
   1c708:	mov	r4, r0
   1c70c:	mov	r2, r0
   1c710:	add	r1, pc, r1
   1c714:	mov	r0, #1
   1c718:	bl	11ec0 <__printf_chk@plt>
   1c71c:	mov	r1, r5
   1c720:	mov	r0, r4
   1c724:	pop	{r4, r5, r6, lr}
   1c728:	b	1c6c8 <mount@plt+0xa610>
   1c72c:	andeq	sp, r0, r4, asr sl
   1c730:	ldrh	r3, [r0, #6]
   1c734:	cmp	r3, #2
   1c738:	beq	1c784 <mount@plt+0xa6cc>
   1c73c:	cmp	r3, #10
   1c740:	bxne	lr
   1c744:	ldr	r2, [r0, #8]
   1c748:	ldrh	r3, [r0]
   1c74c:	cmp	r2, #0
   1c750:	bne	1c76c <mount@plt+0xa6b4>
   1c754:	ldr	r2, [r0, #12]
   1c758:	cmp	r2, #0
   1c75c:	bne	1c76c <mount@plt+0xa6b4>
   1c760:	ldr	r2, [r0, #16]
   1c764:	cmp	r2, #0
   1c768:	beq	1c7ac <mount@plt+0xa6f4>
   1c76c:	ldrb	r2, [r0, #8]
   1c770:	cmp	r2, #255	; 0xff
   1c774:	beq	1c7a0 <mount@plt+0xa6e8>
   1c778:	orr	r3, r3, #2
   1c77c:	strh	r3, [r0]
   1c780:	bx	lr
   1c784:	ldr	r2, [r0, #8]
   1c788:	ldrh	r3, [r0]
   1c78c:	cmp	r2, #0
   1c790:	beq	1c7b8 <mount@plt+0xa700>
   1c794:	and	r2, r2, #240	; 0xf0
   1c798:	cmp	r2, #224	; 0xe0
   1c79c:	bne	1c778 <mount@plt+0xa6c0>
   1c7a0:	orr	r3, r3, #10
   1c7a4:	strh	r3, [r0]
   1c7a8:	bx	lr
   1c7ac:	ldr	r2, [r0, #20]
   1c7b0:	cmp	r2, #0
   1c7b4:	bne	1c76c <mount@plt+0xa6b4>
   1c7b8:	orr	r3, r3, #6
   1c7bc:	strh	r3, [r0]
   1c7c0:	bx	lr
   1c7c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c7c8:	sub	sp, sp, #232	; 0xe8
   1c7cc:	ldr	r5, [pc, #544]	; 1c9f4 <mount@plt+0xa93c>
   1c7d0:	ldr	r3, [pc, #544]	; 1c9f8 <mount@plt+0xa940>
   1c7d4:	add	r5, pc, r5
   1c7d8:	ldr	ip, [pc, #540]	; 1c9fc <mount@plt+0xa944>
   1c7dc:	ldr	r8, [r5, r3]
   1c7e0:	add	ip, pc, ip
   1c7e4:	mov	r3, #128	; 0x80
   1c7e8:	ldr	lr, [r8]
   1c7ec:	add	r6, sp, #100	; 0x64
   1c7f0:	strd	r0, [sp, #4]
   1c7f4:	mov	r7, r1
   1c7f8:	mov	r9, r2
   1c7fc:	str	ip, [sp]
   1c800:	mov	r0, r6
   1c804:	mov	r1, r3
   1c808:	mov	r2, #1
   1c80c:	str	lr, [sp, #228]	; 0xe4
   1c810:	bl	12088 <__snprintf_chk@plt>
   1c814:	sub	r0, r0, #1
   1c818:	cmp	r0, #126	; 0x7e
   1c81c:	bhi	1c934 <mount@plt+0xa87c>
   1c820:	ldr	r1, [pc, #472]	; 1ca00 <mount@plt+0xa948>
   1c824:	mov	r0, r6
   1c828:	add	r1, pc, r1
   1c82c:	bl	11ff8 <fopen64@plt>
   1c830:	subs	sl, r0, #0
   1c834:	beq	1c984 <mount@plt+0xa8cc>
   1c838:	add	r4, sp, #20
   1c83c:	mov	r0, r4
   1c840:	mov	r2, sl
   1c844:	mov	r1, #80	; 0x50
   1c848:	bl	11b90 <fgets@plt>
   1c84c:	cmp	r0, #0
   1c850:	beq	1c9c0 <mount@plt+0xa908>
   1c854:	mov	r1, #10
   1c858:	mov	r0, r4
   1c85c:	bl	11e0c <strchr@plt>
   1c860:	cmp	r0, #0
   1c864:	movne	r3, #0
   1c868:	strbne	r3, [r0]
   1c86c:	mov	r0, sl
   1c870:	bl	11f14 <fclose@plt>
   1c874:	mov	r2, #0
   1c878:	add	r1, sp, #16
   1c87c:	mov	r0, r4
   1c880:	bl	11b18 <strtol@plt>
   1c884:	ldr	r2, [sp, #16]
   1c888:	sub	r3, r2, r4
   1c88c:	ldrb	r2, [r2]
   1c890:	clz	r3, r3
   1c894:	lsr	r3, r3, #5
   1c898:	cmp	r2, #0
   1c89c:	movne	r3, #1
   1c8a0:	cmp	r3, #0
   1c8a4:	mov	r7, r0
   1c8a8:	bne	1c95c <mount@plt+0xa8a4>
   1c8ac:	sub	r3, r0, #-2147483647	; 0x80000001
   1c8b0:	cmn	r3, #3
   1c8b4:	bhi	1c8d8 <mount@plt+0xa820>
   1c8b8:	mov	r0, #0
   1c8bc:	str	r7, [r9]
   1c8c0:	ldr	r2, [sp, #228]	; 0xe4
   1c8c4:	ldr	r3, [r8]
   1c8c8:	cmp	r2, r3
   1c8cc:	bne	1c9f0 <mount@plt+0xa938>
   1c8d0:	add	sp, sp, #232	; 0xe8
   1c8d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c8d8:	bl	11e18 <__errno_location@plt>
   1c8dc:	ldr	r0, [r0]
   1c8e0:	cmp	r0, #34	; 0x22
   1c8e4:	bne	1c8b8 <mount@plt+0xa800>
   1c8e8:	ldr	r3, [pc, #276]	; 1ca04 <mount@plt+0xa94c>
   1c8ec:	ldr	r4, [r5, r3]
   1c8f0:	ldr	r5, [r4]
   1c8f4:	bl	11d88 <strerror@plt>
   1c8f8:	ldr	r2, [pc, #264]	; 1ca08 <mount@plt+0xa950>
   1c8fc:	mov	r3, r6
   1c900:	add	r2, pc, r2
   1c904:	mov	r1, #1
   1c908:	str	r0, [sp]
   1c90c:	mov	r0, r5
   1c910:	bl	11ef0 <__fprintf_chk@plt>
   1c914:	ldr	r2, [pc, #240]	; 1ca0c <mount@plt+0xa954>
   1c918:	mov	r3, r6
   1c91c:	ldr	r0, [r4]
   1c920:	add	r2, pc, r2
   1c924:	mov	r1, #1
   1c928:	bl	11ef0 <__fprintf_chk@plt>
   1c92c:	mvn	r0, #0
   1c930:	b	1c8c0 <mount@plt+0xa808>
   1c934:	ldr	r3, [pc, #200]	; 1ca04 <mount@plt+0xa94c>
   1c938:	ldr	r0, [pc, #208]	; 1ca10 <mount@plt+0xa958>
   1c93c:	mov	r2, #38	; 0x26
   1c940:	ldr	r3, [r5, r3]
   1c944:	mov	r1, #1
   1c948:	add	r0, pc, r0
   1c94c:	ldr	r3, [r3]
   1c950:	bl	11cb0 <fwrite@plt>
   1c954:	mvn	r0, #0
   1c958:	b	1c8c0 <mount@plt+0xa808>
   1c95c:	ldr	r1, [pc, #160]	; 1ca04 <mount@plt+0xa94c>
   1c960:	mov	r3, r4
   1c964:	ldr	r2, [pc, #168]	; 1ca14 <mount@plt+0xa95c>
   1c968:	ldr	r4, [r5, r1]
   1c96c:	add	r2, pc, r2
   1c970:	mov	r1, #1
   1c974:	ldr	r0, [r4]
   1c978:	str	r6, [sp]
   1c97c:	bl	11ef0 <__fprintf_chk@plt>
   1c980:	b	1c914 <mount@plt+0xa85c>
   1c984:	ldr	r3, [pc, #120]	; 1ca04 <mount@plt+0xa94c>
   1c988:	ldr	r3, [r5, r3]
   1c98c:	ldr	r4, [r3]
   1c990:	bl	11e18 <__errno_location@plt>
   1c994:	ldr	r0, [r0]
   1c998:	bl	11d88 <strerror@plt>
   1c99c:	ldr	r2, [pc, #116]	; 1ca18 <mount@plt+0xa960>
   1c9a0:	mov	r3, r6
   1c9a4:	add	r2, pc, r2
   1c9a8:	mov	r1, #1
   1c9ac:	str	r0, [sp]
   1c9b0:	mov	r0, r4
   1c9b4:	bl	11ef0 <__fprintf_chk@plt>
   1c9b8:	mvn	r0, #0
   1c9bc:	b	1c8c0 <mount@plt+0xa808>
   1c9c0:	ldr	r1, [pc, #60]	; 1ca04 <mount@plt+0xa94c>
   1c9c4:	ldr	r2, [pc, #80]	; 1ca1c <mount@plt+0xa964>
   1c9c8:	mov	r3, r7
   1c9cc:	ldr	r4, [r5, r1]
   1c9d0:	add	r2, pc, r2
   1c9d4:	mov	r1, #1
   1c9d8:	ldr	r0, [r4]
   1c9dc:	str	r6, [sp]
   1c9e0:	bl	11ef0 <__fprintf_chk@plt>
   1c9e4:	mov	r0, sl
   1c9e8:	bl	11f14 <fclose@plt>
   1c9ec:	b	1c914 <mount@plt+0xa85c>
   1c9f0:	bl	11c2c <__stack_chk_fail@plt>
   1c9f4:	andeq	pc, r1, r4, lsr #16
   1c9f8:	andeq	r0, r0, r8, lsl #4
   1c9fc:	muleq	r0, r0, r9
   1ca00:	andeq	sp, r0, r8, lsl #8
   1ca04:	andeq	r0, r0, r4, lsl r2
   1ca08:	andeq	sp, r0, r8, lsl r9
   1ca0c:	andeq	sp, r0, r8, lsl #18
   1ca10:	andeq	sp, r0, r0, asr #16
   1ca14:	andeq	sp, r0, r4, lsl #17
   1ca18:	andeq	sp, r0, ip, lsl #16
   1ca1c:	strdeq	sp, [r0], -r0
   1ca20:	ldr	r3, [pc, #168]	; 1cad0 <mount@plt+0xaa18>
   1ca24:	ldr	r2, [pc, #168]	; 1cad4 <mount@plt+0xaa1c>
   1ca28:	add	r3, pc, r3
   1ca2c:	push	{r4, r5, lr}
   1ca30:	sub	sp, sp, #12
   1ca34:	ldr	r4, [r3, r2]
   1ca38:	mov	r5, r0
   1ca3c:	mov	r0, r1
   1ca40:	ldr	r2, [r4]
   1ca44:	mov	r1, sp
   1ca48:	str	r2, [sp, #4]
   1ca4c:	bl	11ed8 <strtod@plt>
   1ca50:	vldr	d6, [pc, #104]	; 1cac0 <mount@plt+0xaa08>
   1ca54:	vldr	d7, [pc, #108]	; 1cac8 <mount@plt+0xaa10>
   1ca58:	vdiv.f64	d0, d0, d6
   1ca5c:	vcmp.f64	d0, d7
   1ca60:	vstr	d0, [r5]
   1ca64:	vmrs	APSR_nzcv, fpscr
   1ca68:	moveq	r0, #1
   1ca6c:	beq	1ca84 <mount@plt+0xa9cc>
   1ca70:	ldr	r0, [sp]
   1ca74:	ldrb	r3, [r0]
   1ca78:	cmp	r3, #0
   1ca7c:	moveq	r0, r3
   1ca80:	bne	1ca9c <mount@plt+0xa9e4>
   1ca84:	ldr	r2, [sp, #4]
   1ca88:	ldr	r3, [r4]
   1ca8c:	cmp	r2, r3
   1ca90:	bne	1cab8 <mount@plt+0xaa00>
   1ca94:	add	sp, sp, #12
   1ca98:	pop	{r4, r5, pc}
   1ca9c:	ldr	r1, [pc, #52]	; 1cad8 <mount@plt+0xaa20>
   1caa0:	add	r1, pc, r1
   1caa4:	bl	11b0c <strcmp@plt>
   1caa8:	adds	r0, r0, #0
   1caac:	movne	r0, #1
   1cab0:	rsb	r0, r0, #0
   1cab4:	b	1ca84 <mount@plt+0xa9cc>
   1cab8:	bl	11c2c <__stack_chk_fail@plt>
   1cabc:	nop			; (mov r0, r0)
   1cac0:	andeq	r0, r0, r0
   1cac4:	subsmi	r0, r9, r0
   1cac8:	andeq	r0, r0, r0
   1cacc:	svcvc	0x00f00000	; IMB
   1cad0:	ldrdeq	pc, [r1], -r0
   1cad4:	andeq	r0, r0, r8, lsl #4
   1cad8:	muleq	r0, ip, r7
   1cadc:	sub	r3, r0, #65	; 0x41
   1cae0:	cmp	r3, #5
   1cae4:	bls	1cb10 <mount@plt+0xaa58>
   1cae8:	sub	r3, r0, #97	; 0x61
   1caec:	cmp	r3, #5
   1caf0:	bls	1cb08 <mount@plt+0xaa50>
   1caf4:	sub	r0, r0, #48	; 0x30
   1caf8:	uxtb	r3, r0
   1cafc:	cmp	r3, #9
   1cb00:	mvnhi	r0, #0
   1cb04:	bx	lr
   1cb08:	sub	r0, r0, #87	; 0x57
   1cb0c:	bx	lr
   1cb10:	sub	r0, r0, #55	; 0x37
   1cb14:	bx	lr
   1cb18:	ldr	r3, [pc, #164]	; 1cbc4 <mount@plt+0xab0c>
   1cb1c:	ldr	ip, [pc, #164]	; 1cbc8 <mount@plt+0xab10>
   1cb20:	add	r3, pc, r3
   1cb24:	push	{r4, r5, r6, r7, lr}
   1cb28:	sub	sp, sp, #12
   1cb2c:	ldr	r5, [r3, ip]
   1cb30:	subs	r4, r1, #0
   1cb34:	ldr	r3, [r5]
   1cb38:	str	r3, [sp, #4]
   1cb3c:	beq	1cbb8 <mount@plt+0xab00>
   1cb40:	ldrb	r3, [r4]
   1cb44:	cmp	r3, #0
   1cb48:	beq	1cbb8 <mount@plt+0xab00>
   1cb4c:	mov	r6, r0
   1cb50:	mov	r1, sp
   1cb54:	mov	r0, r4
   1cb58:	bl	11b18 <strtol@plt>
   1cb5c:	ldr	r3, [sp]
   1cb60:	cmp	r3, #0
   1cb64:	cmpne	r3, r4
   1cb68:	mov	r7, r0
   1cb6c:	beq	1cbb8 <mount@plt+0xab00>
   1cb70:	ldrb	r3, [r3]
   1cb74:	cmp	r3, #0
   1cb78:	bne	1cbb8 <mount@plt+0xab00>
   1cb7c:	sub	r3, r0, #-2147483647	; 0x80000001
   1cb80:	cmn	r3, #3
   1cb84:	bhi	1cba8 <mount@plt+0xaaf0>
   1cb88:	mov	r0, #0
   1cb8c:	str	r7, [r6]
   1cb90:	ldr	r2, [sp, #4]
   1cb94:	ldr	r3, [r5]
   1cb98:	cmp	r2, r3
   1cb9c:	bne	1cbc0 <mount@plt+0xab08>
   1cba0:	add	sp, sp, #12
   1cba4:	pop	{r4, r5, r6, r7, pc}
   1cba8:	bl	11e18 <__errno_location@plt>
   1cbac:	ldr	r3, [r0]
   1cbb0:	cmp	r3, #34	; 0x22
   1cbb4:	bne	1cb88 <mount@plt+0xaad0>
   1cbb8:	mvn	r0, #0
   1cbbc:	b	1cb90 <mount@plt+0xaad8>
   1cbc0:	bl	11c2c <__stack_chk_fail@plt>
   1cbc4:	ldrdeq	pc, [r1], -r8
   1cbc8:	andeq	r0, r0, r8, lsl #4
   1cbcc:	rev	r3, r0
   1cbd0:	rsb	r0, r3, #0
   1cbd4:	bics	r0, r0, r3
   1cbd8:	bne	1cbfc <mount@plt+0xab44>
   1cbdc:	cmp	r3, #0
   1cbe0:	beq	1cbf4 <mount@plt+0xab3c>
   1cbe4:	lsls	r3, r3, #1
   1cbe8:	add	r0, r0, #1
   1cbec:	bne	1cbe4 <mount@plt+0xab2c>
   1cbf0:	bx	lr
   1cbf4:	mov	r0, r3
   1cbf8:	bx	lr
   1cbfc:	mvn	r0, #0
   1cc00:	bx	lr
   1cc04:	ldr	r3, [pc, #160]	; 1ccac <mount@plt+0xabf4>
   1cc08:	ldr	ip, [pc, #160]	; 1ccb0 <mount@plt+0xabf8>
   1cc0c:	add	r3, pc, r3
   1cc10:	push	{r4, r5, r6, r7, lr}
   1cc14:	sub	sp, sp, #12
   1cc18:	ldr	r5, [r3, ip]
   1cc1c:	subs	r4, r1, #0
   1cc20:	ldr	r3, [r5]
   1cc24:	str	r3, [sp, #4]
   1cc28:	beq	1cca0 <mount@plt+0xabe8>
   1cc2c:	ldrb	r3, [r4]
   1cc30:	cmp	r3, #0
   1cc34:	beq	1cca0 <mount@plt+0xabe8>
   1cc38:	mov	r6, r0
   1cc3c:	mov	r1, sp
   1cc40:	mov	r0, r4
   1cc44:	bl	11df4 <strtoul@plt>
   1cc48:	ldr	r3, [sp]
   1cc4c:	cmp	r3, #0
   1cc50:	cmpne	r3, r4
   1cc54:	mov	r7, r0
   1cc58:	beq	1cca0 <mount@plt+0xabe8>
   1cc5c:	ldrb	r3, [r3]
   1cc60:	cmp	r3, #0
   1cc64:	bne	1cca0 <mount@plt+0xabe8>
   1cc68:	cmn	r0, #1
   1cc6c:	beq	1cc90 <mount@plt+0xabd8>
   1cc70:	mov	r0, #0
   1cc74:	str	r7, [r6]
   1cc78:	ldr	r2, [sp, #4]
   1cc7c:	ldr	r3, [r5]
   1cc80:	cmp	r2, r3
   1cc84:	bne	1cca8 <mount@plt+0xabf0>
   1cc88:	add	sp, sp, #12
   1cc8c:	pop	{r4, r5, r6, r7, pc}
   1cc90:	bl	11e18 <__errno_location@plt>
   1cc94:	ldr	r3, [r0]
   1cc98:	cmp	r3, #34	; 0x22
   1cc9c:	bne	1cc70 <mount@plt+0xabb8>
   1cca0:	mvn	r0, #0
   1cca4:	b	1cc78 <mount@plt+0xabc0>
   1cca8:	bl	11c2c <__stack_chk_fail@plt>
   1ccac:	andeq	pc, r1, ip, ror #7
   1ccb0:	andeq	r0, r0, r8, lsl #4
   1ccb4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ccb8:	vpush	{d8}
   1ccbc:	ldr	r3, [pc, #496]	; 1ceb4 <mount@plt+0xadfc>
   1ccc0:	ldr	ip, [pc, #496]	; 1ceb8 <mount@plt+0xae00>
   1ccc4:	add	r3, pc, r3
   1ccc8:	sub	sp, sp, #12
   1cccc:	ldr	r8, [r3, ip]
   1ccd0:	mov	r6, r1
   1ccd4:	mov	r7, r0
   1ccd8:	ldr	r3, [r8]
   1ccdc:	mov	r0, r1
   1cce0:	mov	r1, #46	; 0x2e
   1cce4:	mov	r9, r2
   1cce8:	str	r3, [sp, #4]
   1ccec:	bl	11e0c <strchr@plt>
   1ccf0:	mov	r1, sp
   1ccf4:	subs	r2, r0, #0
   1ccf8:	mov	r0, r6
   1ccfc:	beq	1ce14 <mount@plt+0xad5c>
   1cd00:	bl	11ed8 <strtod@plt>
   1cd04:	vcmpe.f64	d0, #0.0
   1cd08:	vmov.f64	d8, d0
   1cd0c:	vmrs	APSR_nzcv, fpscr
   1cd10:	bmi	1cdf4 <mount@plt+0xad3c>
   1cd14:	ldr	r5, [sp]
   1cd18:	cmp	r5, r6
   1cd1c:	cmpne	r5, #0
   1cd20:	beq	1cdf4 <mount@plt+0xad3c>
   1cd24:	vldr	d7, [pc, #372]	; 1cea0 <mount@plt+0xade8>
   1cd28:	vcmp.f64	d0, d7
   1cd2c:	vmrs	APSR_nzcv, fpscr
   1cd30:	bne	1ce4c <mount@plt+0xad94>
   1cd34:	bl	11e18 <__errno_location@plt>
   1cd38:	ldr	r3, [r0]
   1cd3c:	cmp	r3, #34	; 0x22
   1cd40:	beq	1cdf4 <mount@plt+0xad3c>
   1cd44:	mov	r3, #1
   1cd48:	str	r3, [r9]
   1cd4c:	ldrb	r3, [r5]
   1cd50:	cmp	r3, #0
   1cd54:	vldreq	s15, [pc, #340]	; 1ceb0 <mount@plt+0xadf8>
   1cd58:	beq	1ce7c <mount@plt+0xadc4>
   1cd5c:	ldr	r1, [pc, #344]	; 1cebc <mount@plt+0xae04>
   1cd60:	mov	r3, #0
   1cd64:	str	r3, [r9]
   1cd68:	add	r1, pc, r1
   1cd6c:	mov	r0, r5
   1cd70:	bl	11c68 <strcasecmp@plt>
   1cd74:	cmp	r0, #0
   1cd78:	beq	1ce90 <mount@plt+0xadd8>
   1cd7c:	ldr	r1, [pc, #316]	; 1cec0 <mount@plt+0xae08>
   1cd80:	mov	r0, r5
   1cd84:	add	r1, pc, r1
   1cd88:	bl	11c68 <strcasecmp@plt>
   1cd8c:	cmp	r0, #0
   1cd90:	beq	1ce90 <mount@plt+0xadd8>
   1cd94:	ldr	r1, [pc, #296]	; 1cec4 <mount@plt+0xae0c>
   1cd98:	mov	r0, r5
   1cd9c:	add	r1, pc, r1
   1cda0:	bl	11c68 <strcasecmp@plt>
   1cda4:	cmp	r0, #0
   1cda8:	beq	1ce90 <mount@plt+0xadd8>
   1cdac:	ldr	r1, [pc, #276]	; 1cec8 <mount@plt+0xae10>
   1cdb0:	mov	r0, r5
   1cdb4:	add	r1, pc, r1
   1cdb8:	bl	11c68 <strcasecmp@plt>
   1cdbc:	cmp	r0, #0
   1cdc0:	beq	1ce60 <mount@plt+0xada8>
   1cdc4:	ldr	r1, [pc, #256]	; 1cecc <mount@plt+0xae14>
   1cdc8:	mov	r0, r5
   1cdcc:	add	r1, pc, r1
   1cdd0:	bl	11c68 <strcasecmp@plt>
   1cdd4:	cmp	r0, #0
   1cdd8:	beq	1ce60 <mount@plt+0xada8>
   1cddc:	ldr	r1, [pc, #236]	; 1ced0 <mount@plt+0xae18>
   1cde0:	mov	r0, r5
   1cde4:	add	r1, pc, r1
   1cde8:	bl	11c68 <strcasecmp@plt>
   1cdec:	cmp	r0, #0
   1cdf0:	beq	1ce60 <mount@plt+0xada8>
   1cdf4:	mvn	r0, #0
   1cdf8:	ldr	r2, [sp, #4]
   1cdfc:	ldr	r3, [r8]
   1ce00:	cmp	r2, r3
   1ce04:	bne	1ce9c <mount@plt+0xade4>
   1ce08:	add	sp, sp, #12
   1ce0c:	vpop	{d8}
   1ce10:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ce14:	bl	11df4 <strtoul@plt>
   1ce18:	ldr	r5, [sp]
   1ce1c:	cmp	r5, #0
   1ce20:	cmpne	r5, r6
   1ce24:	mov	r4, r0
   1ce28:	beq	1cdf4 <mount@plt+0xad3c>
   1ce2c:	cmn	r0, #1
   1ce30:	bne	1ce44 <mount@plt+0xad8c>
   1ce34:	bl	11e18 <__errno_location@plt>
   1ce38:	ldr	r3, [r0]
   1ce3c:	cmp	r3, #34	; 0x22
   1ce40:	beq	1cdf4 <mount@plt+0xad3c>
   1ce44:	vmov	s15, r4
   1ce48:	vcvt.f64.u32	d8, s15
   1ce4c:	mov	r3, #1
   1ce50:	str	r3, [r9]
   1ce54:	ldrb	r3, [r5]
   1ce58:	cmp	r3, #0
   1ce5c:	bne	1cd5c <mount@plt+0xaca4>
   1ce60:	vcvt.u32.f64	s15, d8
   1ce64:	vcvt.f64.u32	d6, s15
   1ce68:	vcmpe.f64	d6, d8
   1ce6c:	vmrs	APSR_nzcv, fpscr
   1ce70:	vstrpl	s15, [r7]
   1ce74:	movpl	r0, #0
   1ce78:	bpl	1cdf8 <mount@plt+0xad40>
   1ce7c:	vmov	r3, s15
   1ce80:	mov	r0, #0
   1ce84:	add	r3, r3, #1
   1ce88:	str	r3, [r7]
   1ce8c:	b	1cdf8 <mount@plt+0xad40>
   1ce90:	vldr	d7, [pc, #16]	; 1cea8 <mount@plt+0xadf0>
   1ce94:	vmul.f64	d8, d8, d7
   1ce98:	b	1ce60 <mount@plt+0xada8>
   1ce9c:	bl	11c2c <__stack_chk_fail@plt>
   1cea0:	andeq	r0, r0, r0
   1cea4:	svcvc	0x00f00000	; IMB
   1cea8:	andeq	r0, r0, r0
   1ceac:	addmi	r4, pc, r0
   1ceb0:			; <UNDEFINED> instruction: 0xffffffff
   1ceb4:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1ceb8:	andeq	r0, r0, r8, lsl #4
   1cebc:	andeq	ip, r0, ip, asr r1
   1cec0:	andeq	fp, r0, r4, lsr #3
   1cec4:	andeq	sp, r0, r4, lsr #9
   1cec8:	andeq	fp, r0, r0, lsl #3
   1cecc:	andeq	sp, r0, ip, ror r4
   1ced0:	andeq	sp, r0, ip, ror #8
   1ced4:	ldr	r3, [pc, #176]	; 1cf8c <mount@plt+0xaed4>
   1ced8:	ldr	ip, [pc, #176]	; 1cf90 <mount@plt+0xaed8>
   1cedc:	add	r3, pc, r3
   1cee0:	push	{r4, r5, r6, r8, r9, lr}
   1cee4:	sub	sp, sp, #8
   1cee8:	ldr	r5, [r3, ip]
   1ceec:	subs	r4, r1, #0
   1cef0:	ldr	r3, [r5]
   1cef4:	str	r3, [sp, #4]
   1cef8:	beq	1cf80 <mount@plt+0xaec8>
   1cefc:	ldrb	r3, [r4]
   1cf00:	cmp	r3, #0
   1cf04:	beq	1cf80 <mount@plt+0xaec8>
   1cf08:	mov	r6, r0
   1cf0c:	mov	r1, sp
   1cf10:	mov	r0, r4
   1cf14:	bl	11ea8 <strtoull@plt>
   1cf18:	ldr	r3, [sp]
   1cf1c:	cmp	r3, #0
   1cf20:	cmpne	r3, r4
   1cf24:	mov	r8, r0
   1cf28:	mov	r9, r1
   1cf2c:	beq	1cf80 <mount@plt+0xaec8>
   1cf30:	ldrb	r3, [r3]
   1cf34:	cmp	r3, #0
   1cf38:	bne	1cf80 <mount@plt+0xaec8>
   1cf3c:	mvn	r3, #0
   1cf40:	mvn	r2, #0
   1cf44:	cmp	r1, r3
   1cf48:	cmpeq	r0, r2
   1cf4c:	beq	1cf70 <mount@plt+0xaeb8>
   1cf50:	mov	r0, #0
   1cf54:	strd	r8, [r6]
   1cf58:	ldr	r2, [sp, #4]
   1cf5c:	ldr	r3, [r5]
   1cf60:	cmp	r2, r3
   1cf64:	bne	1cf88 <mount@plt+0xaed0>
   1cf68:	add	sp, sp, #8
   1cf6c:	pop	{r4, r5, r6, r8, r9, pc}
   1cf70:	bl	11e18 <__errno_location@plt>
   1cf74:	ldr	r3, [r0]
   1cf78:	cmp	r3, #34	; 0x22
   1cf7c:	bne	1cf50 <mount@plt+0xae98>
   1cf80:	mvn	r0, #0
   1cf84:	b	1cf58 <mount@plt+0xaea0>
   1cf88:	bl	11c2c <__stack_chk_fail@plt>
   1cf8c:	andeq	pc, r1, ip, lsl r1	; <UNPREDICTABLE>
   1cf90:	andeq	r0, r0, r8, lsl #4
   1cf94:	b	1cc04 <mount@plt+0xab4c>
   1cf98:	ldr	r3, [pc, #152]	; 1d038 <mount@plt+0xaf80>
   1cf9c:	ldr	ip, [pc, #152]	; 1d03c <mount@plt+0xaf84>
   1cfa0:	add	r3, pc, r3
   1cfa4:	push	{r4, r5, r6, lr}
   1cfa8:	sub	sp, sp, #8
   1cfac:	ldr	r6, [r3, ip]
   1cfb0:	subs	r5, r1, #0
   1cfb4:	ldr	r3, [r6]
   1cfb8:	str	r3, [sp, #4]
   1cfbc:	beq	1d02c <mount@plt+0xaf74>
   1cfc0:	ldrb	r3, [r5]
   1cfc4:	cmp	r3, #0
   1cfc8:	beq	1d02c <mount@plt+0xaf74>
   1cfcc:	mov	r4, r0
   1cfd0:	mov	r1, sp
   1cfd4:	mov	r0, r5
   1cfd8:	bl	11df4 <strtoul@plt>
   1cfdc:	ldr	r2, [sp]
   1cfe0:	cmp	r0, #65536	; 0x10000
   1cfe4:	movcc	r3, #0
   1cfe8:	movcs	r3, #1
   1cfec:	cmp	r2, #0
   1cff0:	cmpne	r2, r5
   1cff4:	beq	1d02c <mount@plt+0xaf74>
   1cff8:	ldrb	r2, [r2]
   1cffc:	cmp	r2, #0
   1d000:	movne	r3, #1
   1d004:	cmp	r3, #0
   1d008:	bne	1d02c <mount@plt+0xaf74>
   1d00c:	strh	r0, [r4]
   1d010:	ldr	r1, [sp, #4]
   1d014:	ldr	r2, [r6]
   1d018:	mov	r0, r3
   1d01c:	cmp	r1, r2
   1d020:	bne	1d034 <mount@plt+0xaf7c>
   1d024:	add	sp, sp, #8
   1d028:	pop	{r4, r5, r6, pc}
   1d02c:	mvn	r3, #0
   1d030:	b	1d010 <mount@plt+0xaf58>
   1d034:	bl	11c2c <__stack_chk_fail@plt>
   1d038:	andeq	pc, r1, r8, asr r0	; <UNPREDICTABLE>
   1d03c:	andeq	r0, r0, r8, lsl #4
   1d040:	ldr	r3, [pc, #152]	; 1d0e0 <mount@plt+0xb028>
   1d044:	ldr	ip, [pc, #152]	; 1d0e4 <mount@plt+0xb02c>
   1d048:	add	r3, pc, r3
   1d04c:	push	{r4, r5, r6, lr}
   1d050:	sub	sp, sp, #8
   1d054:	ldr	r6, [r3, ip]
   1d058:	subs	r5, r1, #0
   1d05c:	ldr	r3, [r6]
   1d060:	str	r3, [sp, #4]
   1d064:	beq	1d0d4 <mount@plt+0xb01c>
   1d068:	ldrb	r3, [r5]
   1d06c:	cmp	r3, #0
   1d070:	beq	1d0d4 <mount@plt+0xb01c>
   1d074:	mov	r4, r0
   1d078:	mov	r1, sp
   1d07c:	mov	r0, r5
   1d080:	bl	11df4 <strtoul@plt>
   1d084:	ldr	r2, [sp]
   1d088:	cmp	r0, #255	; 0xff
   1d08c:	movls	r3, #0
   1d090:	movhi	r3, #1
   1d094:	cmp	r2, #0
   1d098:	cmpne	r2, r5
   1d09c:	beq	1d0d4 <mount@plt+0xb01c>
   1d0a0:	ldrb	r2, [r2]
   1d0a4:	cmp	r2, #0
   1d0a8:	movne	r3, #1
   1d0ac:	cmp	r3, #0
   1d0b0:	bne	1d0d4 <mount@plt+0xb01c>
   1d0b4:	strb	r0, [r4]
   1d0b8:	ldr	r1, [sp, #4]
   1d0bc:	ldr	r2, [r6]
   1d0c0:	mov	r0, r3
   1d0c4:	cmp	r1, r2
   1d0c8:	bne	1d0dc <mount@plt+0xb024>
   1d0cc:	add	sp, sp, #8
   1d0d0:	pop	{r4, r5, r6, pc}
   1d0d4:	mvn	r3, #0
   1d0d8:	b	1d0b8 <mount@plt+0xb000>
   1d0dc:	bl	11c2c <__stack_chk_fail@plt>
   1d0e0:			; <UNDEFINED> instruction: 0x0001efb0
   1d0e4:	andeq	r0, r0, r8, lsl #4
   1d0e8:	ldr	r3, [pc, #160]	; 1d190 <mount@plt+0xb0d8>
   1d0ec:	ldr	ip, [pc, #160]	; 1d194 <mount@plt+0xb0dc>
   1d0f0:	add	r3, pc, r3
   1d0f4:	push	{r4, r5, r6, r7, lr}
   1d0f8:	sub	sp, sp, #12
   1d0fc:	ldr	r6, [r3, ip]
   1d100:	mov	r4, r1
   1d104:	mov	r5, r0
   1d108:	ldr	r3, [r6]
   1d10c:	mov	r7, r2
   1d110:	str	r3, [sp, #4]
   1d114:	bl	11e18 <__errno_location@plt>
   1d118:	mov	r3, #0
   1d11c:	cmp	r4, #0
   1d120:	str	r3, [r0]
   1d124:	beq	1d184 <mount@plt+0xb0cc>
   1d128:	ldrb	r3, [r4]
   1d12c:	cmp	r3, #0
   1d130:	beq	1d184 <mount@plt+0xb0cc>
   1d134:	mov	r2, r7
   1d138:	mov	r1, sp
   1d13c:	mov	r0, r4
   1d140:	bl	11ce0 <strtoll@plt>
   1d144:	ldr	r3, [sp]
   1d148:	cmp	r3, r4
   1d14c:	cmpne	r3, #0
   1d150:	beq	1d184 <mount@plt+0xb0cc>
   1d154:	ldrb	r3, [r3]
   1d158:	cmp	r3, #0
   1d15c:	bne	1d184 <mount@plt+0xb0cc>
   1d160:	asr	r1, r0, #31
   1d164:	strd	r0, [r5]
   1d168:	ldr	r1, [sp, #4]
   1d16c:	ldr	r2, [r6]
   1d170:	mov	r0, r3
   1d174:	cmp	r1, r2
   1d178:	bne	1d18c <mount@plt+0xb0d4>
   1d17c:	add	sp, sp, #12
   1d180:	pop	{r4, r5, r6, r7, pc}
   1d184:	mvn	r3, #0
   1d188:	b	1d168 <mount@plt+0xb0b0>
   1d18c:	bl	11c2c <__stack_chk_fail@plt>
   1d190:	andeq	lr, r1, r8, lsl #30
   1d194:	andeq	r0, r0, r8, lsl #4
   1d198:	ldr	r3, [pc, #188]	; 1d25c <mount@plt+0xb1a4>
   1d19c:	ldr	ip, [pc, #188]	; 1d260 <mount@plt+0xb1a8>
   1d1a0:	add	r3, pc, r3
   1d1a4:	push	{r4, r5, r6, r7, r8, lr}
   1d1a8:	sub	sp, sp, #8
   1d1ac:	ldr	r5, [r3, ip]
   1d1b0:	mov	r4, r1
   1d1b4:	mov	r6, r0
   1d1b8:	ldr	r3, [r5]
   1d1bc:	mov	r8, r2
   1d1c0:	str	r3, [sp, #4]
   1d1c4:	bl	11e18 <__errno_location@plt>
   1d1c8:	mov	r3, #0
   1d1cc:	cmp	r4, #0
   1d1d0:	str	r3, [r0]
   1d1d4:	beq	1d250 <mount@plt+0xb198>
   1d1d8:	ldrb	r3, [r4]
   1d1dc:	cmp	r3, #0
   1d1e0:	beq	1d250 <mount@plt+0xb198>
   1d1e4:	mov	r2, r8
   1d1e8:	mov	r7, r0
   1d1ec:	mov	r1, sp
   1d1f0:	mov	r0, r4
   1d1f4:	bl	11b18 <strtol@plt>
   1d1f8:	ldr	r3, [sp]
   1d1fc:	cmp	r3, #0
   1d200:	cmpne	r3, r4
   1d204:	mov	r2, r0
   1d208:	beq	1d250 <mount@plt+0xb198>
   1d20c:	ldrb	r3, [r3]
   1d210:	cmp	r3, #0
   1d214:	bne	1d250 <mount@plt+0xb198>
   1d218:	sub	r3, r0, #-2147483647	; 0x80000001
   1d21c:	cmn	r3, #3
   1d220:	bhi	1d244 <mount@plt+0xb18c>
   1d224:	mov	r0, #0
   1d228:	str	r2, [r6]
   1d22c:	ldr	r2, [sp, #4]
   1d230:	ldr	r3, [r5]
   1d234:	cmp	r2, r3
   1d238:	bne	1d258 <mount@plt+0xb1a0>
   1d23c:	add	sp, sp, #8
   1d240:	pop	{r4, r5, r6, r7, r8, pc}
   1d244:	ldr	r3, [r7]
   1d248:	cmp	r3, #34	; 0x22
   1d24c:	bne	1d224 <mount@plt+0xb16c>
   1d250:	mvn	r0, #0
   1d254:	b	1d22c <mount@plt+0xb174>
   1d258:	bl	11c2c <__stack_chk_fail@plt>
   1d25c:	andeq	lr, r1, r8, asr lr
   1d260:	andeq	r0, r0, r8, lsl #4
   1d264:	ldr	r3, [pc, #88]	; 1d2c4 <mount@plt+0xb20c>
   1d268:	ldr	ip, [pc, #88]	; 1d2c8 <mount@plt+0xb210>
   1d26c:	add	r3, pc, r3
   1d270:	push	{r4, r5, lr}
   1d274:	sub	sp, sp, #20
   1d278:	ldr	r4, [r3, ip]
   1d27c:	mov	r5, r0
   1d280:	mov	r0, sp
   1d284:	ldr	r3, [r4]
   1d288:	str	r3, [sp, #12]
   1d28c:	bl	1ced4 <mount@plt+0xae1c>
   1d290:	cmp	r0, #0
   1d294:	ldrdeq	r2, [sp]
   1d298:	reveq	r2, r2
   1d29c:	reveq	r3, r3
   1d2a0:	streq	r2, [r5, #4]
   1d2a4:	streq	r3, [r5]
   1d2a8:	ldr	r2, [sp, #12]
   1d2ac:	ldr	r3, [r4]
   1d2b0:	cmp	r2, r3
   1d2b4:	bne	1d2c0 <mount@plt+0xb208>
   1d2b8:	add	sp, sp, #20
   1d2bc:	pop	{r4, r5, pc}
   1d2c0:	bl	11c2c <__stack_chk_fail@plt>
   1d2c4:	andeq	lr, r1, ip, lsl #27
   1d2c8:	andeq	r0, r0, r8, lsl #4
   1d2cc:	ldr	r3, [pc, #80]	; 1d324 <mount@plt+0xb26c>
   1d2d0:	ldr	ip, [pc, #80]	; 1d328 <mount@plt+0xb270>
   1d2d4:	add	r3, pc, r3
   1d2d8:	push	{r4, r5, lr}
   1d2dc:	sub	sp, sp, #12
   1d2e0:	ldr	r4, [r3, ip]
   1d2e4:	mov	r5, r0
   1d2e8:	mov	r0, sp
   1d2ec:	ldr	r3, [r4]
   1d2f0:	str	r3, [sp, #4]
   1d2f4:	bl	1cf94 <mount@plt+0xaedc>
   1d2f8:	ldr	r2, [sp, #4]
   1d2fc:	cmp	r0, #0
   1d300:	ldreq	r3, [sp]
   1d304:	reveq	r3, r3
   1d308:	streq	r3, [r5]
   1d30c:	ldr	r3, [r4]
   1d310:	cmp	r2, r3
   1d314:	bne	1d320 <mount@plt+0xb268>
   1d318:	add	sp, sp, #12
   1d31c:	pop	{r4, r5, pc}
   1d320:	bl	11c2c <__stack_chk_fail@plt>
   1d324:	andeq	lr, r1, r4, lsr #26
   1d328:	andeq	r0, r0, r8, lsl #4
   1d32c:	ldr	r3, [pc, #80]	; 1d384 <mount@plt+0xb2cc>
   1d330:	ldr	ip, [pc, #80]	; 1d388 <mount@plt+0xb2d0>
   1d334:	add	r3, pc, r3
   1d338:	push	{r4, r5, lr}
   1d33c:	sub	sp, sp, #12
   1d340:	ldr	r4, [r3, ip]
   1d344:	mov	r5, r0
   1d348:	add	r0, sp, #2
   1d34c:	ldr	r3, [r4]
   1d350:	str	r3, [sp, #4]
   1d354:	bl	1cf98 <mount@plt+0xaee0>
   1d358:	cmp	r0, #0
   1d35c:	ldrheq	r3, [sp, #2]
   1d360:	rev16eq	r3, r3
   1d364:	strheq	r3, [r5]
   1d368:	ldr	r2, [sp, #4]
   1d36c:	ldr	r3, [r4]
   1d370:	cmp	r2, r3
   1d374:	bne	1d380 <mount@plt+0xb2c8>
   1d378:	add	sp, sp, #12
   1d37c:	pop	{r4, r5, pc}
   1d380:	bl	11c2c <__stack_chk_fail@plt>
   1d384:	andeq	lr, r1, r4, asr #25
   1d388:	andeq	r0, r0, r8, lsl #4
   1d38c:	ldr	r3, [pc, #188]	; 1d450 <mount@plt+0xb398>
   1d390:	ldr	r2, [pc, #188]	; 1d454 <mount@plt+0xb39c>
   1d394:	add	r3, pc, r3
   1d398:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d39c:	sub	sp, sp, #24
   1d3a0:	ldr	r7, [r3, r2]
   1d3a4:	ldr	r5, [pc, #172]	; 1d458 <mount@plt+0xb3a0>
   1d3a8:	mov	r8, r0
   1d3ac:	ldr	r3, [r7]
   1d3b0:	mov	sl, r1
   1d3b4:	add	r9, sp, #8
   1d3b8:	mov	r4, #0
   1d3bc:	add	r6, sp, #4
   1d3c0:	str	r3, [sp, #20]
   1d3c4:	mov	r2, #16
   1d3c8:	mov	r1, r6
   1d3cc:	mov	r0, sl
   1d3d0:	bl	11df4 <strtoul@plt>
   1d3d4:	cmp	r0, r5
   1d3d8:	bhi	1d420 <mount@plt+0xb368>
   1d3dc:	ldr	r2, [sp, #4]
   1d3e0:	cmp	r2, sl
   1d3e4:	beq	1d420 <mount@plt+0xb368>
   1d3e8:	ldrb	r1, [r2]
   1d3ec:	rev16	r0, r0
   1d3f0:	strh	r0, [r9], #2
   1d3f4:	cmp	r1, #0
   1d3f8:	beq	1d43c <mount@plt+0xb384>
   1d3fc:	sub	r3, r4, #3
   1d400:	clz	r3, r3
   1d404:	lsr	r3, r3, #5
   1d408:	cmp	r1, #58	; 0x3a
   1d40c:	orrne	r3, r3, #1
   1d410:	cmp	r3, #0
   1d414:	addeq	sl, r2, #1
   1d418:	addeq	r4, r4, #1
   1d41c:	beq	1d3c4 <mount@plt+0xb30c>
   1d420:	mvn	r0, #0
   1d424:	ldr	r2, [sp, #20]
   1d428:	ldr	r3, [r7]
   1d42c:	cmp	r2, r3
   1d430:	bne	1d44c <mount@plt+0xb394>
   1d434:	add	sp, sp, #24
   1d438:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d43c:	ldrd	r2, [sp, #8]
   1d440:	mov	r0, #1
   1d444:	strd	r2, [r8]
   1d448:	b	1d424 <mount@plt+0xb36c>
   1d44c:	bl	11c2c <__stack_chk_fail@plt>
   1d450:	andeq	lr, r1, r4, ror #24
   1d454:	andeq	r0, r0, r8, lsl #4
   1d458:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   1d45c:	sub	r0, r0, #2
   1d460:	cmp	r0, #26
   1d464:	bhi	1d478 <mount@plt+0xb3c0>
   1d468:	ldr	r3, [pc, #16]	; 1d480 <mount@plt+0xb3c8>
   1d46c:	add	r3, pc, r3
   1d470:	ldr	r0, [r3, r0, lsl #2]
   1d474:	bx	lr
   1d478:	mov	r0, #0
   1d47c:	bx	lr
   1d480:	andeq	ip, r0, r4, lsl #25
   1d484:	ldr	r3, [pc, #744]	; 1d774 <mount@plt+0xb6bc>
   1d488:	ldr	ip, [pc, #744]	; 1d778 <mount@plt+0xb6c0>
   1d48c:	add	r3, pc, r3
   1d490:	push	{r4, r5, r6, r7, r8, lr}
   1d494:	sub	sp, sp, #32
   1d498:	ldr	r7, [r3, ip]
   1d49c:	mov	r6, r1
   1d4a0:	mov	r5, r2
   1d4a4:	ldr	ip, [r7]
   1d4a8:	mov	r2, #264	; 0x108
   1d4ac:	mov	r1, #0
   1d4b0:	str	ip, [sp, #28]
   1d4b4:	mov	r4, r0
   1d4b8:	bl	11e78 <memset@plt>
   1d4bc:	ldr	r1, [pc, #696]	; 1d77c <mount@plt+0xb6c4>
   1d4c0:	mov	r0, r6
   1d4c4:	add	r1, pc, r1
   1d4c8:	bl	11b0c <strcmp@plt>
   1d4cc:	cmp	r0, #0
   1d4d0:	bne	1d538 <mount@plt+0xb480>
   1d4d4:	bic	r3, r5, #16
   1d4d8:	cmp	r3, #12
   1d4dc:	beq	1d5e4 <mount@plt+0xb52c>
   1d4e0:	strh	r5, [r4, #6]
   1d4e4:	uxth	r0, r5
   1d4e8:	bl	1d45c <mount@plt+0xb3a4>
   1d4ec:	ldrh	r3, [r4]
   1d4f0:	orr	r3, r3, #1
   1d4f4:	strh	r3, [r4]
   1d4f8:	add	r2, r0, #7
   1d4fc:	cmp	r0, #0
   1d500:	movlt	r0, r2
   1d504:	mvn	r2, #1
   1d508:	asr	r0, r0, #3
   1d50c:	strh	r0, [r4, #2]
   1d510:	strh	r2, [r4, #4]
   1d514:	mov	r0, r4
   1d518:	bl	1c730 <mount@plt+0xa678>
   1d51c:	mov	r0, #0
   1d520:	ldr	r2, [sp, #28]
   1d524:	ldr	r3, [r7]
   1d528:	cmp	r2, r3
   1d52c:	bne	1d768 <mount@plt+0xb6b0>
   1d530:	add	sp, sp, #32
   1d534:	pop	{r4, r5, r6, r7, r8, pc}
   1d538:	ldr	r1, [pc, #576]	; 1d780 <mount@plt+0xb6c8>
   1d53c:	mov	r0, r6
   1d540:	add	r1, pc, r1
   1d544:	bl	11b0c <strcmp@plt>
   1d548:	cmp	r0, #0
   1d54c:	beq	1d5c0 <mount@plt+0xb508>
   1d550:	ldr	r1, [pc, #556]	; 1d784 <mount@plt+0xb6cc>
   1d554:	mov	r0, r6
   1d558:	add	r1, pc, r1
   1d55c:	bl	11b0c <strcmp@plt>
   1d560:	cmp	r0, #0
   1d564:	beq	1d5c0 <mount@plt+0xb508>
   1d568:	cmp	r5, #17
   1d56c:	beq	1d674 <mount@plt+0xb5bc>
   1d570:	mov	r1, #58	; 0x3a
   1d574:	mov	r0, r6
   1d578:	bl	11e0c <strchr@plt>
   1d57c:	cmp	r0, #0
   1d580:	beq	1d5ec <mount@plt+0xb534>
   1d584:	mov	r0, #10
   1d588:	cmp	r5, #0
   1d58c:	cmpne	r5, #10
   1d590:	strh	r0, [r4, #6]
   1d594:	bne	1d5e4 <mount@plt+0xb52c>
   1d598:	mov	r1, r6
   1d59c:	add	r2, r4, #8
   1d5a0:	bl	11ba8 <inet_pton@plt>
   1d5a4:	cmp	r0, #0
   1d5a8:	ble	1d5e4 <mount@plt+0xb52c>
   1d5ac:	mov	r2, #16
   1d5b0:	mvn	r3, #0
   1d5b4:	strh	r2, [r4, #2]
   1d5b8:	strh	r3, [r4, #4]
   1d5bc:	b	1d514 <mount@plt+0xb45c>
   1d5c0:	bic	r3, r5, #16
   1d5c4:	cmp	r3, #12
   1d5c8:	beq	1d5e4 <mount@plt+0xb52c>
   1d5cc:	mov	r2, #0
   1d5d0:	mvn	r3, #1
   1d5d4:	strh	r5, [r4, #6]
   1d5d8:	strh	r2, [r4, #2]
   1d5dc:	strh	r3, [r4, #4]
   1d5e0:	b	1d514 <mount@plt+0xb45c>
   1d5e4:	mvn	r0, #0
   1d5e8:	b	1d520 <mount@plt+0xb468>
   1d5ec:	cmp	r5, #12
   1d5f0:	beq	1d6b8 <mount@plt+0xb600>
   1d5f4:	cmp	r5, #28
   1d5f8:	beq	1d6f0 <mount@plt+0xb638>
   1d5fc:	bics	r3, r5, #2
   1d600:	mov	r3, #2
   1d604:	strh	r3, [r4, #6]
   1d608:	bne	1d5e4 <mount@plt+0xb52c>
   1d60c:	add	r5, r4, #7
   1d610:	mov	r8, sp
   1d614:	mov	r2, #0
   1d618:	mov	r1, r8
   1d61c:	mov	r0, r6
   1d620:	bl	11df4 <strtoul@plt>
   1d624:	cmp	r0, #255	; 0xff
   1d628:	bhi	1d5e4 <mount@plt+0xb52c>
   1d62c:	ldr	r2, [sp]
   1d630:	cmp	r2, r6
   1d634:	beq	1d5e4 <mount@plt+0xb52c>
   1d638:	strb	r0, [r5, #1]
   1d63c:	ldrb	r3, [r2]
   1d640:	add	r1, r5, #1
   1d644:	cmp	r3, #0
   1d648:	beq	1d6a4 <mount@plt+0xb5ec>
   1d64c:	subs	r3, r3, #46	; 0x2e
   1d650:	movne	r3, #1
   1d654:	sub	r5, r5, #10
   1d658:	cmp	r4, r5
   1d65c:	orreq	r3, r3, #1
   1d660:	cmp	r3, #0
   1d664:	bne	1d5e4 <mount@plt+0xb52c>
   1d668:	add	r6, r2, #1
   1d66c:	mov	r5, r1
   1d670:	b	1d614 <mount@plt+0xb55c>
   1d674:	mov	r2, r6
   1d678:	mov	r1, #256	; 0x100
   1d67c:	add	r0, r4, #8
   1d680:	bl	21ab4 <mount@plt+0xf9fc>
   1d684:	cmp	r0, #0
   1d688:	blt	1d5e4 <mount@plt+0xb52c>
   1d68c:	uxth	r0, r0
   1d690:	strh	r0, [r4, #2]
   1d694:	lsl	r0, r0, #3
   1d698:	strh	r0, [r4, #4]
   1d69c:	strh	r5, [r4, #6]
   1d6a0:	b	1d514 <mount@plt+0xb45c>
   1d6a4:	mov	r2, #4
   1d6a8:	mvn	r3, #0
   1d6ac:	strh	r2, [r4, #2]
   1d6b0:	strh	r3, [r4, #4]
   1d6b4:	b	1d514 <mount@plt+0xb45c>
   1d6b8:	strh	r5, [r4, #6]
   1d6bc:	mov	r1, r6
   1d6c0:	mov	r0, r5
   1d6c4:	add	r2, sp, #4
   1d6c8:	bl	23468 <mount@plt+0x113b0>
   1d6cc:	cmp	r0, #0
   1d6d0:	ble	1d5e4 <mount@plt+0xb52c>
   1d6d4:	ldrh	r1, [sp, #6]
   1d6d8:	mov	r2, #2
   1d6dc:	mvn	r3, #0
   1d6e0:	strh	r1, [r4, #8]
   1d6e4:	strh	r2, [r4, #2]
   1d6e8:	strh	r3, [r4, #4]
   1d6ec:	b	1d514 <mount@plt+0xb45c>
   1d6f0:	add	r8, r4, #8
   1d6f4:	strh	r5, [r4, #6]
   1d6f8:	mov	r1, r6
   1d6fc:	mov	r0, r5
   1d700:	mov	r2, r8
   1d704:	mov	r3, #256	; 0x100
   1d708:	bl	23760 <mount@plt+0x116a8>
   1d70c:	cmp	r0, #0
   1d710:	ble	1d5e4 <mount@plt+0xb52c>
   1d714:	ldr	r3, [r4, #8]
   1d718:	mov	r2, #4
   1d71c:	rev	r3, r3
   1d720:	tst	r3, #256	; 0x100
   1d724:	mov	r3, #20
   1d728:	strh	r2, [r4, #2]
   1d72c:	strh	r3, [r4, #4]
   1d730:	bne	1d76c <mount@plt+0xb6b4>
   1d734:	mov	r1, r8
   1d738:	mov	r2, #1
   1d73c:	b	1d748 <mount@plt+0xb690>
   1d740:	cmp	r2, #64	; 0x40
   1d744:	beq	1d514 <mount@plt+0xb45c>
   1d748:	ldr	r3, [r1, #4]!
   1d74c:	add	r2, r2, #1
   1d750:	rev	r3, r3
   1d754:	tst	r3, #256	; 0x100
   1d758:	beq	1d740 <mount@plt+0xb688>
   1d75c:	lsl	r2, r2, #2
   1d760:	strh	r2, [r4, #2]
   1d764:	b	1d514 <mount@plt+0xb45c>
   1d768:	bl	11c2c <__stack_chk_fail@plt>
   1d76c:	mov	r2, #1
   1d770:	b	1d75c <mount@plt+0xb6a4>
   1d774:	andeq	lr, r1, ip, ror #22
   1d778:	andeq	r0, r0, r8, lsl #4
   1d77c:	muleq	r0, r4, sp
   1d780:	ldrdeq	fp, [r0], -r0
   1d784:	andeq	ip, r0, r8, lsl #26
   1d788:	ldr	r3, [pc, #148]	; 1d824 <mount@plt+0xb76c>
   1d78c:	ldr	ip, [pc, #148]	; 1d828 <mount@plt+0xb770>
   1d790:	add	r3, pc, r3
   1d794:	push	{r4, r5, r6, r7, r8, lr}
   1d798:	sub	sp, sp, #272	; 0x110
   1d79c:	ldr	r4, [r3, ip]
   1d7a0:	mov	r2, #0
   1d7a4:	mov	r7, r0
   1d7a8:	ldr	r3, [r4]
   1d7ac:	mov	r6, r1
   1d7b0:	str	r3, [sp, #268]	; 0x10c
   1d7b4:	bl	1cc04 <mount@plt+0xab4c>
   1d7b8:	subs	r5, r0, #0
   1d7bc:	bne	1d7dc <mount@plt+0xb724>
   1d7c0:	ldr	r2, [sp, #268]	; 0x10c
   1d7c4:	ldr	r3, [r4]
   1d7c8:	mov	r0, r5
   1d7cc:	cmp	r2, r3
   1d7d0:	bne	1d820 <mount@plt+0xb768>
   1d7d4:	add	sp, sp, #272	; 0x110
   1d7d8:	pop	{r4, r5, r6, r7, r8, pc}
   1d7dc:	add	r8, sp, #4
   1d7e0:	mov	r1, r6
   1d7e4:	mov	r0, r8
   1d7e8:	mov	r2, #2
   1d7ec:	bl	1d484 <mount@plt+0xb3cc>
   1d7f0:	subs	r5, r0, #0
   1d7f4:	bne	1d818 <mount@plt+0xb760>
   1d7f8:	ldrh	r3, [r8, #6]
   1d7fc:	cmp	r3, #2
   1d800:	bne	1d818 <mount@plt+0xb760>
   1d804:	ldr	r0, [sp, #12]
   1d808:	bl	1cbcc <mount@plt+0xab14>
   1d80c:	cmp	r0, #0
   1d810:	strge	r0, [r7]
   1d814:	bge	1d7c0 <mount@plt+0xb708>
   1d818:	mvn	r5, #0
   1d81c:	b	1d7c0 <mount@plt+0xb708>
   1d820:	bl	11c2c <__stack_chk_fail@plt>
   1d824:	andeq	lr, r1, r8, ror #16
   1d828:	andeq	r0, r0, r8, lsl #4
   1d82c:	ldr	r3, [pc, #288]	; 1d954 <mount@plt+0xb89c>
   1d830:	ldr	ip, [pc, #288]	; 1d958 <mount@plt+0xb8a0>
   1d834:	add	r3, pc, r3
   1d838:	push	{r4, r5, r6, r7, r8, lr}
   1d83c:	sub	sp, sp, #8
   1d840:	ldr	r5, [r3, ip]
   1d844:	mov	r6, r1
   1d848:	mov	r4, r0
   1d84c:	ldr	r3, [r5]
   1d850:	mov	r0, r1
   1d854:	mov	r1, #47	; 0x2f
   1d858:	mov	r8, r2
   1d85c:	str	r3, [sp, #4]
   1d860:	bl	11e0c <strchr@plt>
   1d864:	subs	r7, r0, #0
   1d868:	beq	1d908 <mount@plt+0xb850>
   1d86c:	mov	r3, #0
   1d870:	mov	r1, r6
   1d874:	strb	r3, [r7]
   1d878:	mov	r2, r8
   1d87c:	mov	r0, r4
   1d880:	bl	1d484 <mount@plt+0xb3cc>
   1d884:	mov	r3, #47	; 0x2f
   1d888:	strb	r3, [r7]
   1d88c:	subs	r6, r0, #0
   1d890:	beq	1d8b0 <mount@plt+0xb7f8>
   1d894:	ldr	r2, [sp, #4]
   1d898:	ldr	r3, [r5]
   1d89c:	mov	r0, r6
   1d8a0:	cmp	r2, r3
   1d8a4:	bne	1d950 <mount@plt+0xb898>
   1d8a8:	add	sp, sp, #8
   1d8ac:	pop	{r4, r5, r6, r7, r8, pc}
   1d8b0:	ldrh	r0, [r4, #6]
   1d8b4:	bl	1d45c <mount@plt+0xb3a4>
   1d8b8:	ldrsh	r3, [r4, #4]
   1d8bc:	cmn	r3, #2
   1d8c0:	mov	r6, r0
   1d8c4:	beq	1d948 <mount@plt+0xb890>
   1d8c8:	add	r1, r7, #1
   1d8cc:	mov	r0, sp
   1d8d0:	bl	1d788 <mount@plt+0xb6d0>
   1d8d4:	cmp	r0, #0
   1d8d8:	bne	1d948 <mount@plt+0xb890>
   1d8dc:	ldr	r0, [sp]
   1d8e0:	cmp	r0, r6
   1d8e4:	bhi	1d948 <mount@plt+0xb890>
   1d8e8:	sxth	r0, r0
   1d8ec:	mov	r3, #1
   1d8f0:	ldrh	r2, [r4]
   1d8f4:	strh	r0, [r4, #4]
   1d8f8:	mov	r6, #0
   1d8fc:	orr	r3, r3, r2
   1d900:	strh	r3, [r4]
   1d904:	b	1d894 <mount@plt+0xb7dc>
   1d908:	mov	r1, r6
   1d90c:	mov	r2, r8
   1d910:	mov	r0, r4
   1d914:	bl	1d484 <mount@plt+0xb3cc>
   1d918:	subs	r6, r0, #0
   1d91c:	bne	1d894 <mount@plt+0xb7dc>
   1d920:	ldrh	r0, [r4, #6]
   1d924:	bl	1d45c <mount@plt+0xb3a4>
   1d928:	ldrsh	r3, [r4, #4]
   1d92c:	cmn	r3, #2
   1d930:	sxthne	r0, r0
   1d934:	movne	r3, r6
   1d938:	bne	1d8f0 <mount@plt+0xb838>
   1d93c:	mov	r0, r6
   1d940:	mov	r3, r6
   1d944:	b	1d8f0 <mount@plt+0xb838>
   1d948:	mvn	r6, #0
   1d94c:	b	1d894 <mount@plt+0xb7dc>
   1d950:	bl	11c2c <__stack_chk_fail@plt>
   1d954:	andeq	lr, r1, r4, asr #15
   1d958:	andeq	r0, r0, r8, lsl #4
   1d95c:	mov	ip, r1
   1d960:	push	{r4, r5, r6, lr}
   1d964:	ldrh	r3, [ip], #4
   1d968:	sub	r3, r3, #6
   1d96c:	cmp	r3, #14
   1d970:	addls	pc, pc, r3, lsl #2
   1d974:	b	1da78 <mount@plt+0xb9c0>
   1d978:	b	1da5c <mount@plt+0xb9a4>
   1d97c:	b	1da78 <mount@plt+0xb9c0>
   1d980:	b	1da40 <mount@plt+0xb988>
   1d984:	b	1da78 <mount@plt+0xb9c0>
   1d988:	b	1da78 <mount@plt+0xb9c0>
   1d98c:	b	1da78 <mount@plt+0xb9c0>
   1d990:	b	1da78 <mount@plt+0xb9c0>
   1d994:	b	1da78 <mount@plt+0xb9c0>
   1d998:	b	1da14 <mount@plt+0xb95c>
   1d99c:	b	1da78 <mount@plt+0xb9c0>
   1d9a0:	b	1da78 <mount@plt+0xb9c0>
   1d9a4:	b	1da78 <mount@plt+0xb9c0>
   1d9a8:	b	1da78 <mount@plt+0xb9c0>
   1d9ac:	b	1da78 <mount@plt+0xb9c0>
   1d9b0:	b	1d9b4 <mount@plt+0xb8fc>
   1d9b4:	mov	r1, #10
   1d9b8:	mov	r3, #16
   1d9bc:	strh	r1, [r0, #6]
   1d9c0:	strh	r3, [r0, #2]
   1d9c4:	ldr	r5, [ip]
   1d9c8:	ldr	r4, [ip, #4]
   1d9cc:	ldr	lr, [ip, #8]
   1d9d0:	ldr	r1, [ip, #12]
   1d9d4:	str	r5, [r0, #8]
   1d9d8:	str	r4, [r0, #12]
   1d9dc:	str	lr, [r0, #16]
   1d9e0:	str	r1, [r0, #20]
   1d9e4:	cmp	r2, #0
   1d9e8:	beq	1d9f8 <mount@plt+0xb940>
   1d9ec:	ldrh	r3, [r0, #6]
   1d9f0:	cmp	r3, r2
   1d9f4:	bne	1da80 <mount@plt+0xb9c8>
   1d9f8:	mov	r1, #0
   1d9fc:	mvn	r3, #0
   1da00:	strh	r3, [r0, #4]
   1da04:	strh	r1, [r0]
   1da08:	bl	1c730 <mount@plt+0xa678>
   1da0c:	mov	r0, r1
   1da10:	pop	{r4, r5, r6, pc}
   1da14:	mov	r1, #4
   1da18:	mov	r3, #10
   1da1c:	strh	r1, [r0, #6]
   1da20:	strh	r3, [r0, #2]
   1da24:	ldr	r1, [ip, #4]
   1da28:	ldr	lr, [ip]
   1da2c:	str	r1, [r0, #12]
   1da30:	str	lr, [r0, #8]
   1da34:	ldrh	r1, [ip, #8]
   1da38:	strh	r1, [r0, #16]
   1da3c:	b	1d9e4 <mount@plt+0xb92c>
   1da40:	mov	r3, #4
   1da44:	mov	ip, #2
   1da48:	strh	ip, [r0, #6]
   1da4c:	strh	r3, [r0, #2]
   1da50:	ldr	r3, [r1, #4]
   1da54:	str	r3, [r0, #8]
   1da58:	b	1d9e4 <mount@plt+0xb92c>
   1da5c:	mov	r3, #2
   1da60:	mov	ip, #12
   1da64:	strh	ip, [r0, #6]
   1da68:	strh	r3, [r0, #2]
   1da6c:	ldrh	r3, [r1, #4]
   1da70:	strh	r3, [r0, #8]
   1da74:	b	1d9e4 <mount@plt+0xb92c>
   1da78:	mvn	r0, #0
   1da7c:	pop	{r4, r5, r6, pc}
   1da80:	mvn	r0, #1
   1da84:	pop	{r4, r5, r6, pc}
   1da88:	push	{r4, r5, r6, lr}
   1da8c:	sub	sp, sp, #272	; 0x110
   1da90:	ldr	r4, [pc, #116]	; 1db0c <mount@plt+0xba54>
   1da94:	ldr	r2, [pc, #116]	; 1db10 <mount@plt+0xba58>
   1da98:	add	r4, pc, r4
   1da9c:	mov	r1, r0
   1daa0:	ldr	r5, [r4, r2]
   1daa4:	mov	r6, r0
   1daa8:	mov	r2, #2
   1daac:	ldr	r3, [r5]
   1dab0:	add	r0, sp, #4
   1dab4:	str	r3, [sp, #268]	; 0x10c
   1dab8:	bl	1d484 <mount@plt+0xb3cc>
   1dabc:	cmp	r0, #0
   1dac0:	bne	1dae0 <mount@plt+0xba28>
   1dac4:	ldr	r2, [sp, #268]	; 0x10c
   1dac8:	ldr	r3, [r5]
   1dacc:	ldr	r0, [sp, #12]
   1dad0:	cmp	r2, r3
   1dad4:	bne	1db08 <mount@plt+0xba50>
   1dad8:	add	sp, sp, #272	; 0x110
   1dadc:	pop	{r4, r5, r6, pc}
   1dae0:	ldr	r1, [pc, #44]	; 1db14 <mount@plt+0xba5c>
   1dae4:	ldr	r2, [pc, #44]	; 1db18 <mount@plt+0xba60>
   1dae8:	mov	r3, r6
   1daec:	ldr	r0, [r4, r1]
   1daf0:	add	r2, pc, r2
   1daf4:	mov	r1, #1
   1daf8:	ldr	r0, [r0]
   1dafc:	bl	11ef0 <__fprintf_chk@plt>
   1db00:	mov	r0, #1
   1db04:	bl	11ddc <exit@plt>
   1db08:	bl	11c2c <__stack_chk_fail@plt>
   1db0c:	andeq	lr, r1, r0, ror #10
   1db10:	andeq	r0, r0, r8, lsl #4
   1db14:	andeq	r0, r0, r4, lsl r2
   1db18:	andeq	ip, r0, r4, ror r7
   1db1c:	ldr	r3, [pc, #44]	; 1db50 <mount@plt+0xba98>
   1db20:	ldr	r0, [pc, #44]	; 1db54 <mount@plt+0xba9c>
   1db24:	add	r3, pc, r3
   1db28:	push	{r4, lr}
   1db2c:	mov	r2, #48	; 0x30
   1db30:	ldr	ip, [r3, r0]
   1db34:	ldr	r0, [pc, #28]	; 1db58 <mount@plt+0xbaa0>
   1db38:	mov	r1, #1
   1db3c:	add	r0, pc, r0
   1db40:	ldr	r3, [ip]
   1db44:	bl	11cb0 <fwrite@plt>
   1db48:	mvn	r0, #0
   1db4c:	bl	11ddc <exit@plt>
   1db50:	ldrdeq	lr, [r1], -r4
   1db54:	andeq	r0, r0, r4, lsl r2
   1db58:	andeq	ip, r0, ip, asr r7
   1db5c:	ldr	r1, [pc, #48]	; 1db94 <mount@plt+0xbadc>
   1db60:	ldr	ip, [pc, #48]	; 1db98 <mount@plt+0xbae0>
   1db64:	add	r1, pc, r1
   1db68:	push	{r4, lr}
   1db6c:	mov	r3, r0
   1db70:	ldr	ip, [r1, ip]
   1db74:	ldr	r2, [pc, #32]	; 1db9c <mount@plt+0xbae4>
   1db78:	mov	r0, r1
   1db7c:	add	r2, pc, r2
   1db80:	mov	r1, #1
   1db84:	ldr	r0, [ip]
   1db88:	bl	11ef0 <__fprintf_chk@plt>
   1db8c:	mvn	r0, #0
   1db90:	bl	11ddc <exit@plt>
   1db94:	muleq	r1, r4, r4
   1db98:	andeq	r0, r0, r4, lsl r2
   1db9c:	andeq	ip, r0, r0, asr r7
   1dba0:	ldr	ip, [pc, #52]	; 1dbdc <mount@plt+0xbb24>
   1dba4:	push	{lr}		; (str lr, [sp, #-4]!)
   1dba8:	add	ip, pc, ip
   1dbac:	ldr	lr, [pc, #44]	; 1dbe0 <mount@plt+0xbb28>
   1dbb0:	sub	sp, sp, #12
   1dbb4:	ldr	r2, [pc, #40]	; 1dbe4 <mount@plt+0xbb2c>
   1dbb8:	ldr	lr, [ip, lr]
   1dbbc:	mov	r3, r1
   1dbc0:	str	r0, [sp]
   1dbc4:	add	r2, pc, r2
   1dbc8:	mov	r1, #1
   1dbcc:	ldr	r0, [lr]
   1dbd0:	bl	11ef0 <__fprintf_chk@plt>
   1dbd4:	mvn	r0, #0
   1dbd8:	bl	11ddc <exit@plt>
   1dbdc:	andeq	lr, r1, r0, asr r4
   1dbe0:	andeq	r0, r0, r4, lsl r2
   1dbe4:	andeq	ip, r0, ip, lsr #14
   1dbe8:	ldr	ip, [pc, #52]	; 1dc24 <mount@plt+0xbb6c>
   1dbec:	push	{lr}		; (str lr, [sp, #-4]!)
   1dbf0:	add	ip, pc, ip
   1dbf4:	ldr	lr, [pc, #44]	; 1dc28 <mount@plt+0xbb70>
   1dbf8:	mov	r3, r0
   1dbfc:	sub	sp, sp, #12
   1dc00:	ldr	r0, [ip, lr]
   1dc04:	ldr	r2, [pc, #32]	; 1dc2c <mount@plt+0xbb74>
   1dc08:	str	r1, [sp]
   1dc0c:	add	r2, pc, r2
   1dc10:	mov	r1, #1
   1dc14:	ldr	r0, [r0]
   1dc18:	bl	11ef0 <__fprintf_chk@plt>
   1dc1c:	mvn	r0, #0
   1dc20:	bl	11ddc <exit@plt>
   1dc24:	andeq	lr, r1, r8, lsl #8
   1dc28:	andeq	r0, r0, r4, lsl r2
   1dc2c:	andeq	ip, r0, r8, lsl #14
   1dc30:	ldr	ip, [pc, #52]	; 1dc6c <mount@plt+0xbbb4>
   1dc34:	push	{lr}		; (str lr, [sp, #-4]!)
   1dc38:	add	ip, pc, ip
   1dc3c:	ldr	lr, [pc, #44]	; 1dc70 <mount@plt+0xbbb8>
   1dc40:	mov	r3, r0
   1dc44:	sub	sp, sp, #12
   1dc48:	ldr	r0, [ip, lr]
   1dc4c:	ldr	r2, [pc, #32]	; 1dc74 <mount@plt+0xbbbc>
   1dc50:	str	r1, [sp]
   1dc54:	add	r2, pc, r2
   1dc58:	mov	r1, #1
   1dc5c:	ldr	r0, [r0]
   1dc60:	bl	11ef0 <__fprintf_chk@plt>
   1dc64:	mvn	r0, #0
   1dc68:	bl	11ddc <exit@plt>
   1dc6c:	andeq	lr, r1, r0, asr #7
   1dc70:	andeq	r0, r0, r4, lsl r2
   1dc74:	strdeq	ip, [r0], -r4
   1dc78:	ldr	r1, [pc, #48]	; 1dcb0 <mount@plt+0xbbf8>
   1dc7c:	ldr	ip, [pc, #48]	; 1dcb4 <mount@plt+0xbbfc>
   1dc80:	add	r1, pc, r1
   1dc84:	push	{r4, lr}
   1dc88:	mov	r3, r0
   1dc8c:	ldr	ip, [r1, ip]
   1dc90:	ldr	r2, [pc, #32]	; 1dcb8 <mount@plt+0xbc00>
   1dc94:	mov	r0, r1
   1dc98:	add	r2, pc, r2
   1dc9c:	mov	r1, #1
   1dca0:	ldr	r0, [ip]
   1dca4:	bl	11ef0 <__fprintf_chk@plt>
   1dca8:	mvn	r0, #0
   1dcac:	pop	{r4, pc}
   1dcb0:	andeq	lr, r1, r8, ror r3
   1dcb4:	andeq	r0, r0, r4, lsl r2
   1dcb8:	andeq	ip, r0, r8, ror #13
   1dcbc:	push	{r4, r5, r6, lr}
   1dcc0:	ldrb	r4, [r0]
   1dcc4:	cmp	r4, #0
   1dcc8:	beq	1dd14 <mount@plt+0xbc5c>
   1dccc:	mov	r5, r0
   1dcd0:	bl	11e00 <strlen@plt>
   1dcd4:	cmp	r0, #15
   1dcd8:	bhi	1dd14 <mount@plt+0xbc5c>
   1dcdc:	cmp	r4, #47	; 0x2f
   1dce0:	beq	1dd14 <mount@plt+0xbc5c>
   1dce4:	bl	11dd0 <__ctype_b_loc@plt>
   1dce8:	ldr	r2, [r0]
   1dcec:	b	1dd04 <mount@plt+0xbc4c>
   1dcf0:	ldrb	r4, [r5, #1]!
   1dcf4:	cmp	r4, #0
   1dcf8:	beq	1dd1c <mount@plt+0xbc64>
   1dcfc:	cmp	r4, #47	; 0x2f
   1dd00:	beq	1dd14 <mount@plt+0xbc5c>
   1dd04:	lsl	r4, r4, #1
   1dd08:	ldrh	r3, [r2, r4]
   1dd0c:	tst	r3, #8192	; 0x2000
   1dd10:	beq	1dcf0 <mount@plt+0xbc38>
   1dd14:	mvn	r0, #0
   1dd18:	pop	{r4, r5, r6, pc}
   1dd1c:	mov	r0, r4
   1dd20:	pop	{r4, r5, r6, pc}
   1dd24:	push	{r4, r5, r6, lr}
   1dd28:	mov	r6, r0
   1dd2c:	mov	r0, r1
   1dd30:	mov	r4, r1
   1dd34:	bl	1dcbc <mount@plt+0xbc04>
   1dd38:	subs	r5, r0, #0
   1dd3c:	beq	1dd48 <mount@plt+0xbc90>
   1dd40:	mov	r0, r5
   1dd44:	pop	{r4, r5, r6, pc}
   1dd48:	mov	r1, r4
   1dd4c:	mov	r0, r6
   1dd50:	mov	r2, #16
   1dd54:	bl	11e90 <strncpy@plt>
   1dd58:	mov	r0, r5
   1dd5c:	pop	{r4, r5, r6, pc}
   1dd60:	push	{r4, lr}
   1dd64:	mov	r4, r0
   1dd68:	ldr	r0, [pc, #84]	; 1ddc4 <mount@plt+0xbd0c>
   1dd6c:	cmp	r1, #0
   1dd70:	add	r0, pc, r0
   1dd74:	addne	r4, r1, #4
   1dd78:	beq	1dd94 <mount@plt+0xbcdc>
   1dd7c:	mov	r0, r4
   1dd80:	bl	1dcbc <mount@plt+0xbc04>
   1dd84:	cmp	r0, #0
   1dd88:	moveq	r0, r4
   1dd8c:	movne	r0, #0
   1dd90:	pop	{r4, pc}
   1dd94:	ldr	r1, [pc, #44]	; 1ddc8 <mount@plt+0xbd10>
   1dd98:	ldr	r2, [pc, #44]	; 1ddcc <mount@plt+0xbd14>
   1dd9c:	mov	r3, r4
   1dda0:	ldr	r0, [r0, r1]
   1dda4:	add	r2, pc, r2
   1dda8:	mov	r1, #1
   1ddac:	ldr	r0, [r0]
   1ddb0:	bl	11ef0 <__fprintf_chk@plt>
   1ddb4:	mov	r0, r4
   1ddb8:	bl	214f8 <mount@plt+0xf440>
   1ddbc:	mov	r4, r0
   1ddc0:	b	1dd7c <mount@plt+0xbcc4>
   1ddc4:	andeq	lr, r1, r8, lsl #5
   1ddc8:	andeq	r0, r0, r4, lsl r2
   1ddcc:	strdeq	ip, [r0], -r8
   1ddd0:	push	{r4, r5, r6, lr}
   1ddd4:	mov	r4, r1
   1ddd8:	mov	r6, r0
   1dddc:	bl	11e00 <strlen@plt>
   1dde0:	mov	r5, r0
   1dde4:	mov	r0, r4
   1dde8:	bl	11e00 <strlen@plt>
   1ddec:	cmp	r5, r0
   1ddf0:	bhi	1de08 <mount@plt+0xbd50>
   1ddf4:	mov	r2, r5
   1ddf8:	mov	r1, r6
   1ddfc:	mov	r0, r4
   1de00:	pop	{r4, r5, r6, lr}
   1de04:	b	11bfc <memcmp@plt>
   1de08:	mvn	r0, #0
   1de0c:	pop	{r4, r5, r6, pc}
   1de10:	push	{r4, r5, r6, r7, r8, lr}
   1de14:	asrs	r5, r2, #5
   1de18:	add	r7, r0, #8
   1de1c:	add	r6, r1, #8
   1de20:	and	r4, r2, #31
   1de24:	beq	1de44 <mount@plt+0xbd8c>
   1de28:	lsl	r2, r5, #2
   1de2c:	mov	r1, r6
   1de30:	mov	r0, r7
   1de34:	bl	11bfc <memcmp@plt>
   1de38:	cmp	r0, #0
   1de3c:	mvnne	r4, #0
   1de40:	bne	1de74 <mount@plt+0xbdbc>
   1de44:	cmp	r4, #0
   1de48:	beq	1de74 <mount@plt+0xbdbc>
   1de4c:	rsb	r2, r4, #32
   1de50:	mvn	r4, #0
   1de54:	ldr	r3, [r7, r5, lsl #2]
   1de58:	lsl	r2, r4, r2
   1de5c:	ldr	r1, [r6, r5, lsl #2]
   1de60:	rev	r2, r2
   1de64:	eor	r3, r3, r1
   1de68:	tst	r3, r2
   1de6c:	movne	r4, #1
   1de70:	moveq	r4, #0
   1de74:	mov	r0, r4
   1de78:	pop	{r4, r5, r6, r7, r8, pc}
   1de7c:	ldr	r3, [pc, #140]	; 1df10 <mount@plt+0xbe58>
   1de80:	ldr	ip, [pc, #140]	; 1df14 <mount@plt+0xbe5c>
   1de84:	add	r3, pc, r3
   1de88:	push	{r4, r5, r6, lr}
   1de8c:	sub	sp, sp, #272	; 0x110
   1de90:	ldr	r4, [r3, ip]
   1de94:	subs	r2, r1, #0
   1de98:	ldr	r3, [r4]
   1de9c:	str	r3, [sp, #268]	; 0x10c
   1dea0:	beq	1dee8 <mount@plt+0xbe30>
   1dea4:	ldrh	r2, [r0, #6]
   1dea8:	mov	r5, r0
   1deac:	cmp	r2, #0
   1deb0:	beq	1dee8 <mount@plt+0xbe30>
   1deb4:	ldrsh	r3, [r0, #4]
   1deb8:	cmp	r3, #0
   1debc:	ble	1dee8 <mount@plt+0xbe30>
   1dec0:	add	r6, sp, #4
   1dec4:	mov	r0, r6
   1dec8:	bl	1d95c <mount@plt+0xb8a4>
   1decc:	cmp	r0, #0
   1ded0:	bne	1df04 <mount@plt+0xbe4c>
   1ded4:	mov	r0, r6
   1ded8:	ldrsh	r2, [r5, #4]
   1dedc:	mov	r1, r5
   1dee0:	bl	1de10 <mount@plt+0xbd58>
   1dee4:	b	1deec <mount@plt+0xbe34>
   1dee8:	mov	r0, #0
   1deec:	ldr	r2, [sp, #268]	; 0x10c
   1def0:	ldr	r3, [r4]
   1def4:	cmp	r2, r3
   1def8:	bne	1df0c <mount@plt+0xbe54>
   1defc:	add	sp, sp, #272	; 0x110
   1df00:	pop	{r4, r5, r6, pc}
   1df04:	mvn	r0, #0
   1df08:	b	1deec <mount@plt+0xbe34>
   1df0c:	bl	11c2c <__stack_chk_fail@plt>
   1df10:	andeq	lr, r1, r4, ror r1
   1df14:	andeq	r0, r0, r8, lsl #4
   1df18:	ldr	r3, [pc, #412]	; 1e0bc <mount@plt+0xc004>
   1df1c:	ldr	r2, [pc, #412]	; 1e0c0 <mount@plt+0xc008>
   1df20:	add	r3, pc, r3
   1df24:	push	{r4, r5, r6, lr}
   1df28:	sub	sp, sp, #1040	; 0x410
   1df2c:	ldr	r4, [r3, r2]
   1df30:	ldr	r5, [pc, #396]	; 1e0c4 <mount@plt+0xc00c>
   1df34:	sub	sp, sp, #8
   1df38:	add	r5, pc, r5
   1df3c:	ldr	r3, [r4]
   1df40:	mov	r0, r5
   1df44:	str	r3, [sp, #1044]	; 0x414
   1df48:	bl	11d4c <getenv@plt>
   1df4c:	cmp	r0, #0
   1df50:	beq	1dfbc <mount@plt+0xbf04>
   1df54:	mov	r0, r5
   1df58:	bl	11d4c <getenv@plt>
   1df5c:	mov	r2, #10
   1df60:	mov	r1, #0
   1df64:	bl	11b18 <strtol@plt>
   1df68:	subs	r5, r0, #0
   1df6c:	beq	1dfb4 <mount@plt+0xbefc>
   1df70:	ldr	r2, [sp, #1044]	; 0x414
   1df74:	ldr	r3, [r4]
   1df78:	mov	r0, r5
   1df7c:	cmp	r2, r3
   1df80:	bne	1e0b8 <mount@plt+0xc000>
   1df84:	add	sp, sp, #1040	; 0x410
   1df88:	add	sp, sp, #8
   1df8c:	pop	{r4, r5, r6, pc}
   1df90:	ldr	r3, [pc, #304]	; 1e0c8 <mount@plt+0xc010>
   1df94:	ldr	r2, [sp, #12]
   1df98:	cmp	r2, r3
   1df9c:	bne	1e030 <mount@plt+0xbf78>
   1dfa0:	ldr	r5, [sp, #16]
   1dfa4:	mov	r0, r6
   1dfa8:	bl	11f14 <fclose@plt>
   1dfac:	cmp	r5, #0
   1dfb0:	bne	1df70 <mount@plt+0xbeb8>
   1dfb4:	mov	r5, #100	; 0x64
   1dfb8:	b	1df70 <mount@plt+0xbeb8>
   1dfbc:	ldr	r5, [pc, #264]	; 1e0cc <mount@plt+0xc014>
   1dfc0:	add	r5, pc, r5
   1dfc4:	mov	r0, r5
   1dfc8:	bl	11d4c <getenv@plt>
   1dfcc:	cmp	r0, #0
   1dfd0:	beq	1e040 <mount@plt+0xbf88>
   1dfd4:	mov	r0, r5
   1dfd8:	bl	11d4c <getenv@plt>
   1dfdc:	add	r5, sp, #24
   1dfe0:	ldr	r2, [pc, #232]	; 1e0d0 <mount@plt+0xc018>
   1dfe4:	sub	r6, r5, #4
   1dfe8:	add	r2, pc, r2
   1dfec:	ldr	r1, [pc, #224]	; 1e0d4 <mount@plt+0xc01c>
   1dff0:	mov	r3, r0
   1dff4:	mov	r0, r6
   1dff8:	bl	11e54 <snprintf@plt>
   1dffc:	ldr	r1, [pc, #212]	; 1e0d8 <mount@plt+0xc020>
   1e000:	mov	r0, r6
   1e004:	add	r1, pc, r1
   1e008:	bl	11ff8 <fopen64@plt>
   1e00c:	subs	r6, r0, #0
   1e010:	beq	1dfb4 <mount@plt+0xbefc>
   1e014:	ldr	r1, [pc, #192]	; 1e0dc <mount@plt+0xc024>
   1e018:	sub	r3, r5, #8
   1e01c:	sub	r2, r5, #12
   1e020:	add	r1, pc, r1
   1e024:	bl	11e9c <fscanf@plt>
   1e028:	cmp	r0, #2
   1e02c:	beq	1df90 <mount@plt+0xbed8>
   1e030:	mov	r0, r6
   1e034:	bl	11f14 <fclose@plt>
   1e038:	mov	r5, #100	; 0x64
   1e03c:	b	1df70 <mount@plt+0xbeb8>
   1e040:	ldr	r5, [pc, #152]	; 1e0e0 <mount@plt+0xc028>
   1e044:	add	r5, pc, r5
   1e048:	mov	r0, r5
   1e04c:	bl	11d4c <getenv@plt>
   1e050:	cmp	r0, #0
   1e054:	beq	1e090 <mount@plt+0xbfd8>
   1e058:	mov	r0, r5
   1e05c:	bl	11d4c <getenv@plt>
   1e060:	ldr	r3, [pc, #124]	; 1e0e4 <mount@plt+0xc02c>
   1e064:	add	r5, sp, #24
   1e068:	add	r3, pc, r3
   1e06c:	sub	r6, r5, #4
   1e070:	str	r3, [sp]
   1e074:	mov	r2, #1
   1e078:	mov	r3, #1024	; 0x400
   1e07c:	ldr	r1, [pc, #80]	; 1e0d4 <mount@plt+0xc01c>
   1e080:	str	r0, [sp, #4]
   1e084:	mov	r0, r6
   1e088:	bl	12088 <__snprintf_chk@plt>
   1e08c:	b	1dffc <mount@plt+0xbf44>
   1e090:	ldr	lr, [pc, #80]	; 1e0e8 <mount@plt+0xc030>
   1e094:	add	r6, sp, #20
   1e098:	add	lr, pc, lr
   1e09c:	mov	ip, r6
   1e0a0:	ldm	lr!, {r0, r1, r2, r3}
   1e0a4:	add	r5, sp, #24
   1e0a8:	ldr	lr, [lr]
   1e0ac:	stmia	ip!, {r0, r1, r2, r3}
   1e0b0:	strb	lr, [ip]
   1e0b4:	b	1dffc <mount@plt+0xbf44>
   1e0b8:	bl	11c2c <__stack_chk_fail@plt>
   1e0bc:	ldrdeq	lr, [r1], -r8
   1e0c0:	andeq	r0, r0, r8, lsl #4
   1e0c4:	muleq	r0, r0, r4
   1e0c8:	andeq	r4, pc, r0, asr #4
   1e0cc:	andeq	ip, r0, ip, lsl #8
   1e0d0:	andeq	ip, r0, r8, asr lr
   1e0d4:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1e0d8:	andeq	fp, r0, ip, lsr #24
   1e0dc:	andeq	ip, r0, r0, ror #7
   1e0e0:			; <UNDEFINED> instruction: 0x00009db8
   1e0e4:	andeq	ip, r0, r4, ror r3
   1e0e8:	andeq	ip, r0, r4, asr r3
   1e0ec:	mov	r0, #2
   1e0f0:	b	11c44 <sysconf@plt>
   1e0f4:	ldr	ip, [pc, #416]	; 1e29c <mount@plt+0xc1e4>
   1e0f8:	push	{r4, r5, lr}
   1e0fc:	add	ip, pc, ip
   1e100:	ldr	lr, [pc, #408]	; 1e2a0 <mount@plt+0xc1e8>
   1e104:	sub	sp, sp, #44	; 0x2c
   1e108:	mov	r5, r2
   1e10c:	ldr	r4, [ip, lr]
   1e110:	sub	lr, r0, #2
   1e114:	ldr	ip, [r4]
   1e118:	str	ip, [sp, #36]	; 0x24
   1e11c:	cmp	lr, #26
   1e120:	addls	pc, pc, lr, lsl #2
   1e124:	b	1e26c <mount@plt+0xc1b4>
   1e128:	b	1e1c0 <mount@plt+0xc108>
   1e12c:	b	1e26c <mount@plt+0xc1b4>
   1e130:	b	1e1d4 <mount@plt+0xc11c>
   1e134:	b	1e26c <mount@plt+0xc1b4>
   1e138:	b	1e26c <mount@plt+0xc1b4>
   1e13c:	b	1e1ec <mount@plt+0xc134>
   1e140:	b	1e26c <mount@plt+0xc1b4>
   1e144:	b	1e26c <mount@plt+0xc1b4>
   1e148:	b	1e1c0 <mount@plt+0xc108>
   1e14c:	b	1e26c <mount@plt+0xc1b4>
   1e150:	b	1e214 <mount@plt+0xc15c>
   1e154:	b	1e26c <mount@plt+0xc1b4>
   1e158:	b	1e26c <mount@plt+0xc1b4>
   1e15c:	b	1e26c <mount@plt+0xc1b4>
   1e160:	b	1e26c <mount@plt+0xc1b4>
   1e164:	b	1e254 <mount@plt+0xc19c>
   1e168:	b	1e26c <mount@plt+0xc1b4>
   1e16c:	b	1e26c <mount@plt+0xc1b4>
   1e170:	b	1e26c <mount@plt+0xc1b4>
   1e174:	b	1e26c <mount@plt+0xc1b4>
   1e178:	b	1e26c <mount@plt+0xc1b4>
   1e17c:	b	1e26c <mount@plt+0xc1b4>
   1e180:	b	1e26c <mount@plt+0xc1b4>
   1e184:	b	1e26c <mount@plt+0xc1b4>
   1e188:	b	1e26c <mount@plt+0xc1b4>
   1e18c:	b	1e26c <mount@plt+0xc1b4>
   1e190:	b	1e194 <mount@plt+0xc0dc>
   1e194:	mov	r2, r3
   1e198:	mov	r1, r5
   1e19c:	ldr	r3, [sp, #56]	; 0x38
   1e1a0:	mov	r0, #28
   1e1a4:	bl	23698 <mount@plt+0x115e0>
   1e1a8:	ldr	r2, [sp, #36]	; 0x24
   1e1ac:	ldr	r3, [r4]
   1e1b0:	cmp	r2, r3
   1e1b4:	bne	1e298 <mount@plt+0xc1e0>
   1e1b8:	add	sp, sp, #44	; 0x2c
   1e1bc:	pop	{r4, r5, pc}
   1e1c0:	mov	r2, r3
   1e1c4:	mov	r1, r5
   1e1c8:	ldr	r3, [sp, #56]	; 0x38
   1e1cc:	bl	12004 <inet_ntop@plt>
   1e1d0:	b	1e1a8 <mount@plt+0xc0f0>
   1e1d4:	mov	r2, r3
   1e1d8:	mov	r1, r5
   1e1dc:	ldr	r3, [sp, #56]	; 0x38
   1e1e0:	mov	r0, #4
   1e1e4:	bl	2357c <mount@plt+0x114c4>
   1e1e8:	b	1e1a8 <mount@plt+0xc0f0>
   1e1ec:	ldrh	r0, [r2]
   1e1f0:	cmp	r0, #2
   1e1f4:	beq	1e284 <mount@plt+0xc1cc>
   1e1f8:	cmp	r0, #10
   1e1fc:	bne	1e278 <mount@plt+0xc1c0>
   1e200:	mov	r2, r3
   1e204:	add	r1, r5, #8
   1e208:	ldr	r3, [sp, #56]	; 0x38
   1e20c:	bl	12004 <inet_ntop@plt>
   1e210:	b	1e1a8 <mount@plt+0xc0f0>
   1e214:	ldrh	r1, [r2]
   1e218:	mov	r0, #0
   1e21c:	mov	r2, r3
   1e220:	mov	ip, #2
   1e224:	strh	r1, [sp, #14]
   1e228:	str	r0, [sp, #20]
   1e22c:	str	r0, [sp, #16]
   1e230:	str	r0, [sp, #24]
   1e234:	str	r0, [sp, #28]
   1e238:	strh	r0, [sp, #32]
   1e23c:	ldr	r3, [sp, #56]	; 0x38
   1e240:	add	r1, sp, #12
   1e244:	mov	r0, #12
   1e248:	strh	ip, [sp, #12]
   1e24c:	bl	23274 <mount@plt+0x111bc>
   1e250:	b	1e1a8 <mount@plt+0xc0f0>
   1e254:	ldr	r2, [sp, #56]	; 0x38
   1e258:	mov	r0, r5
   1e25c:	str	r2, [sp]
   1e260:	ldr	r2, [pc, #60]	; 1e2a4 <mount@plt+0xc1ec>
   1e264:	bl	21984 <mount@plt+0xf8cc>
   1e268:	b	1e1a8 <mount@plt+0xc0f0>
   1e26c:	ldr	r0, [pc, #52]	; 1e2a8 <mount@plt+0xc1f0>
   1e270:	add	r0, pc, r0
   1e274:	b	1e1a8 <mount@plt+0xc0f0>
   1e278:	ldr	r0, [pc, #44]	; 1e2ac <mount@plt+0xc1f4>
   1e27c:	add	r0, pc, r0
   1e280:	b	1e1a8 <mount@plt+0xc0f0>
   1e284:	mov	r2, r3
   1e288:	add	r1, r5, #4
   1e28c:	ldr	r3, [sp, #56]	; 0x38
   1e290:	bl	12004 <inet_ntop@plt>
   1e294:	b	1e1a8 <mount@plt+0xc0f0>
   1e298:	bl	11c2c <__stack_chk_fail@plt>
   1e29c:	strdeq	sp, [r1], -ip
   1e2a0:	andeq	r0, r0, r8, lsl #4
   1e2a4:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   1e2a8:	strdeq	sl, [r0], -r8
   1e2ac:	andeq	sl, r0, ip, ror #23
   1e2b0:	push	{lr}		; (str lr, [sp, #-4]!)
   1e2b4:	sub	sp, sp, #12
   1e2b8:	mov	r3, #256	; 0x100
   1e2bc:	str	r3, [sp]
   1e2c0:	ldr	r3, [pc, #12]	; 1e2d4 <mount@plt+0xc21c>
   1e2c4:	add	r3, pc, r3
   1e2c8:	bl	1e0f4 <mount@plt+0xc03c>
   1e2cc:	add	sp, sp, #12
   1e2d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1e2d4:	andeq	r1, r2, r4, lsl r6
   1e2d8:	ldr	r1, [pc, #220]	; 1e3bc <mount@plt+0xc304>
   1e2dc:	push	{r4, lr}
   1e2e0:	add	r1, pc, r1
   1e2e4:	mov	r4, r0
   1e2e8:	bl	11b0c <strcmp@plt>
   1e2ec:	cmp	r0, #0
   1e2f0:	beq	1e394 <mount@plt+0xc2dc>
   1e2f4:	ldr	r1, [pc, #196]	; 1e3c0 <mount@plt+0xc308>
   1e2f8:	mov	r0, r4
   1e2fc:	add	r1, pc, r1
   1e300:	bl	11b0c <strcmp@plt>
   1e304:	cmp	r0, #0
   1e308:	beq	1e38c <mount@plt+0xc2d4>
   1e30c:	ldr	r1, [pc, #176]	; 1e3c4 <mount@plt+0xc30c>
   1e310:	mov	r0, r4
   1e314:	add	r1, pc, r1
   1e318:	bl	11b0c <strcmp@plt>
   1e31c:	cmp	r0, #0
   1e320:	beq	1e3a4 <mount@plt+0xc2ec>
   1e324:	ldr	r1, [pc, #156]	; 1e3c8 <mount@plt+0xc310>
   1e328:	mov	r0, r4
   1e32c:	add	r1, pc, r1
   1e330:	bl	11b0c <strcmp@plt>
   1e334:	cmp	r0, #0
   1e338:	beq	1e39c <mount@plt+0xc2e4>
   1e33c:	ldr	r1, [pc, #136]	; 1e3cc <mount@plt+0xc314>
   1e340:	mov	r0, r4
   1e344:	add	r1, pc, r1
   1e348:	bl	11b0c <strcmp@plt>
   1e34c:	cmp	r0, #0
   1e350:	beq	1e3ac <mount@plt+0xc2f4>
   1e354:	ldr	r1, [pc, #116]	; 1e3d0 <mount@plt+0xc318>
   1e358:	mov	r0, r4
   1e35c:	add	r1, pc, r1
   1e360:	bl	11b0c <strcmp@plt>
   1e364:	cmp	r0, #0
   1e368:	beq	1e3b4 <mount@plt+0xc2fc>
   1e36c:	ldr	r1, [pc, #96]	; 1e3d4 <mount@plt+0xc31c>
   1e370:	mov	r0, r4
   1e374:	add	r1, pc, r1
   1e378:	bl	11b0c <strcmp@plt>
   1e37c:	cmp	r0, #0
   1e380:	movne	r0, #0
   1e384:	moveq	r0, #7
   1e388:	pop	{r4, pc}
   1e38c:	mov	r0, #10
   1e390:	pop	{r4, pc}
   1e394:	mov	r0, #2
   1e398:	pop	{r4, pc}
   1e39c:	mov	r0, #17
   1e3a0:	pop	{r4, pc}
   1e3a4:	mov	r0, #12
   1e3a8:	pop	{r4, pc}
   1e3ac:	mov	r0, #4
   1e3b0:	pop	{r4, pc}
   1e3b4:	mov	r0, #28
   1e3b8:	pop	{r4, pc}
   1e3bc:	andeq	fp, r0, ip, asr r3
   1e3c0:	andeq	fp, r0, ip, lsr #9
   1e3c4:	andeq	ip, r0, r0, lsl #2
   1e3c8:	andeq	ip, r0, ip, lsr #22
   1e3cc:	ldrdeq	ip, [r0], -r8
   1e3d0:	andeq	ip, r0, r4, asr #1
   1e3d4:	strheq	ip, [r0], -r4
   1e3d8:	cmp	r0, #2
   1e3dc:	beq	1e41c <mount@plt+0xc364>
   1e3e0:	cmp	r0, #10
   1e3e4:	beq	1e440 <mount@plt+0xc388>
   1e3e8:	cmp	r0, #12
   1e3ec:	beq	1e428 <mount@plt+0xc370>
   1e3f0:	cmp	r0, #17
   1e3f4:	beq	1e44c <mount@plt+0xc394>
   1e3f8:	cmp	r0, #4
   1e3fc:	beq	1e458 <mount@plt+0xc3a0>
   1e400:	cmp	r0, #28
   1e404:	beq	1e464 <mount@plt+0xc3ac>
   1e408:	cmp	r0, #7
   1e40c:	beq	1e434 <mount@plt+0xc37c>
   1e410:	ldr	r0, [pc, #88]	; 1e470 <mount@plt+0xc3b8>
   1e414:	add	r0, pc, r0
   1e418:	bx	lr
   1e41c:	ldr	r0, [pc, #80]	; 1e474 <mount@plt+0xc3bc>
   1e420:	add	r0, pc, r0
   1e424:	bx	lr
   1e428:	ldr	r0, [pc, #72]	; 1e478 <mount@plt+0xc3c0>
   1e42c:	add	r0, pc, r0
   1e430:	bx	lr
   1e434:	ldr	r0, [pc, #64]	; 1e47c <mount@plt+0xc3c4>
   1e438:	add	r0, pc, r0
   1e43c:	bx	lr
   1e440:	ldr	r0, [pc, #56]	; 1e480 <mount@plt+0xc3c8>
   1e444:	add	r0, pc, r0
   1e448:	bx	lr
   1e44c:	ldr	r0, [pc, #48]	; 1e484 <mount@plt+0xc3cc>
   1e450:	add	r0, pc, r0
   1e454:	bx	lr
   1e458:	ldr	r0, [pc, #40]	; 1e488 <mount@plt+0xc3d0>
   1e45c:	add	r0, pc, r0
   1e460:	bx	lr
   1e464:	ldr	r0, [pc, #32]	; 1e48c <mount@plt+0xc3d4>
   1e468:	add	r0, pc, r0
   1e46c:	bx	lr
   1e470:	andeq	sl, r0, r4, asr sl
   1e474:	andeq	fp, r0, ip, lsl r2
   1e478:	andeq	fp, r0, r8, ror #31
   1e47c:	strdeq	fp, [r0], -r0
   1e480:	andeq	fp, r0, r4, ror #6
   1e484:	andeq	ip, r0, r8, lsl #20
   1e488:	andeq	fp, r0, r0, asr #31
   1e48c:			; <UNDEFINED> instruction: 0x0000bfb8
   1e490:	push	{r4, r5, r6, lr}
   1e494:	sub	sp, sp, #8
   1e498:	mov	r5, r1
   1e49c:	mov	r4, r2
   1e4a0:	bl	1d484 <mount@plt+0xb3cc>
   1e4a4:	ldr	r3, [pc, #92]	; 1e508 <mount@plt+0xc450>
   1e4a8:	add	r3, pc, r3
   1e4ac:	cmp	r0, #0
   1e4b0:	bne	1e4bc <mount@plt+0xc404>
   1e4b4:	add	sp, sp, #8
   1e4b8:	pop	{r4, r5, r6, pc}
   1e4bc:	ldr	r2, [pc, #72]	; 1e50c <mount@plt+0xc454>
   1e4c0:	cmp	r4, #0
   1e4c4:	ldr	r3, [r3, r2]
   1e4c8:	ldr	r6, [r3]
   1e4cc:	beq	1e4fc <mount@plt+0xc444>
   1e4d0:	mov	r0, r4
   1e4d4:	bl	1e3d8 <mount@plt+0xc320>
   1e4d8:	mov	r3, r0
   1e4dc:	ldr	r2, [pc, #44]	; 1e510 <mount@plt+0xc458>
   1e4e0:	str	r5, [sp]
   1e4e4:	mov	r0, r6
   1e4e8:	add	r2, pc, r2
   1e4ec:	mov	r1, #1
   1e4f0:	bl	11ef0 <__fprintf_chk@plt>
   1e4f4:	mov	r0, #1
   1e4f8:	bl	11ddc <exit@plt>
   1e4fc:	ldr	r3, [pc, #16]	; 1e514 <mount@plt+0xc45c>
   1e500:	add	r3, pc, r3
   1e504:	b	1e4dc <mount@plt+0xc424>
   1e508:	andeq	sp, r1, r0, asr fp
   1e50c:	andeq	r0, r0, r4, lsl r2
   1e510:	andeq	fp, r0, r4, asr pc
   1e514:	andeq	fp, r0, r0, lsr pc
   1e518:	push	{r4, r5, r6, lr}
   1e51c:	cmp	r2, #17
   1e520:	ldr	r5, [pc, #152]	; 1e5c0 <mount@plt+0xc508>
   1e524:	sub	sp, sp, #8
   1e528:	add	r5, pc, r5
   1e52c:	mov	r6, r1
   1e530:	beq	1e54c <mount@plt+0xc494>
   1e534:	mov	r4, r2
   1e538:	bl	1d82c <mount@plt+0xb774>
   1e53c:	cmp	r0, #0
   1e540:	bne	1e574 <mount@plt+0xc4bc>
   1e544:	add	sp, sp, #8
   1e548:	pop	{r4, r5, r6, pc}
   1e54c:	ldr	r1, [pc, #112]	; 1e5c4 <mount@plt+0xc50c>
   1e550:	ldr	r2, [pc, #112]	; 1e5c8 <mount@plt+0xc510>
   1e554:	mov	r3, r6
   1e558:	ldr	r0, [r5, r1]
   1e55c:	add	r2, pc, r2
   1e560:	mov	r1, #1
   1e564:	ldr	r0, [r0]
   1e568:	bl	11ef0 <__fprintf_chk@plt>
   1e56c:	mov	r0, #1
   1e570:	bl	11ddc <exit@plt>
   1e574:	ldr	r3, [pc, #72]	; 1e5c4 <mount@plt+0xc50c>
   1e578:	cmp	r4, #0
   1e57c:	ldr	r3, [r5, r3]
   1e580:	ldr	r5, [r3]
   1e584:	beq	1e5b4 <mount@plt+0xc4fc>
   1e588:	mov	r0, r4
   1e58c:	bl	1e3d8 <mount@plt+0xc320>
   1e590:	mov	r3, r0
   1e594:	ldr	r2, [pc, #48]	; 1e5cc <mount@plt+0xc514>
   1e598:	str	r6, [sp]
   1e59c:	mov	r0, r5
   1e5a0:	add	r2, pc, r2
   1e5a4:	mov	r1, #1
   1e5a8:	bl	11ef0 <__fprintf_chk@plt>
   1e5ac:	mov	r0, #1
   1e5b0:	bl	11ddc <exit@plt>
   1e5b4:	ldr	r3, [pc, #20]	; 1e5d0 <mount@plt+0xc518>
   1e5b8:	add	r3, pc, r3
   1e5bc:	b	1e594 <mount@plt+0xc4dc>
   1e5c0:	ldrdeq	sp, [r1], -r0
   1e5c4:	andeq	r0, r0, r4, lsl r2
   1e5c8:	andeq	fp, r0, r4, lsl pc
   1e5cc:	andeq	fp, r0, r8, lsl pc
   1e5d0:	andeq	fp, r0, r8, ror lr
   1e5d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e5d8:	mov	r6, r2
   1e5dc:	ldr	r5, [pc, #520]	; 1e7ec <mount@plt+0xc734>
   1e5e0:	ldr	ip, [pc, #520]	; 1e7f0 <mount@plt+0xc738>
   1e5e4:	add	r5, pc, r5
   1e5e8:	mov	r8, r3
   1e5ec:	ldr	r2, [r5, ip]
   1e5f0:	sub	sp, sp, #28
   1e5f4:	mov	r4, r1
   1e5f8:	ldr	r3, [r2]
   1e5fc:	mov	r7, r0
   1e600:	cmp	r3, #0
   1e604:	ldr	r9, [sp, #64]	; 0x40
   1e608:	beq	1e6dc <mount@plt+0xc624>
   1e60c:	cmp	r1, #0
   1e610:	ble	1e6c0 <mount@plt+0xc608>
   1e614:	cmp	r7, #10
   1e618:	beq	1e7a4 <mount@plt+0xc6ec>
   1e61c:	sub	r3, r4, #4
   1e620:	add	r3, r6, r3
   1e624:	mov	fp, r7
   1e628:	str	r4, [sp, #4]
   1e62c:	str	r4, [sp, #8]
   1e630:	str	r6, [sp]
   1e634:	ldr	r1, [r3]
   1e638:	ldr	r3, [pc, #436]	; 1e7f4 <mount@plt+0xc73c>
   1e63c:	ldr	r2, [pc, #436]	; 1e7f8 <mount@plt+0xc740>
   1e640:	umull	r0, r3, r3, r1
   1e644:	add	r2, pc, r2
   1e648:	lsr	r3, r3, #8
   1e64c:	add	r3, r3, r3, lsl #8
   1e650:	sub	r3, r1, r3
   1e654:	lsl	r1, r3, #2
   1e658:	add	r3, r2, r1
   1e65c:	str	r1, [sp, #20]
   1e660:	ldr	r3, [r3, #256]	; 0x100
   1e664:	cmp	r3, #0
   1e668:	str	r3, [sp, #16]
   1e66c:	beq	1e700 <mount@plt+0xc648>
   1e670:	str	r5, [sp, #12]
   1e674:	mov	sl, r3
   1e678:	ldr	r5, [sp, #8]
   1e67c:	b	1e68c <mount@plt+0xc5d4>
   1e680:	ldr	sl, [sl]
   1e684:	cmp	sl, #0
   1e688:	beq	1e6fc <mount@plt+0xc644>
   1e68c:	ldrh	r2, [sl, #14]
   1e690:	cmp	r2, fp
   1e694:	bne	1e680 <mount@plt+0xc5c8>
   1e698:	ldrh	r2, [sl, #10]
   1e69c:	cmp	r5, r2
   1e6a0:	bne	1e680 <mount@plt+0xc5c8>
   1e6a4:	ldm	sp, {r1, r2}
   1e6a8:	add	r0, sl, #16
   1e6ac:	bl	11bfc <memcmp@plt>
   1e6b0:	cmp	r0, #0
   1e6b4:	bne	1e680 <mount@plt+0xc5c8>
   1e6b8:	ldr	r0, [sl, #4]
   1e6bc:	b	1e794 <mount@plt+0xc6dc>
   1e6c0:	bl	1d45c <mount@plt+0xb3a4>
   1e6c4:	cmp	r0, #0
   1e6c8:	add	r4, r0, #7
   1e6cc:	movge	r4, r0
   1e6d0:	cmp	r0, #7
   1e6d4:	asr	r4, r4, #3
   1e6d8:	bgt	1e614 <mount@plt+0xc55c>
   1e6dc:	str	r9, [sp, #64]	; 0x40
   1e6e0:	mov	r3, r8
   1e6e4:	mov	r2, r6
   1e6e8:	mov	r1, r4
   1e6ec:	mov	r0, r7
   1e6f0:	add	sp, sp, #28
   1e6f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6f8:	b	1e0f4 <mount@plt+0xc03c>
   1e6fc:	ldr	r5, [sp, #12]
   1e700:	mov	r0, #272	; 0x110
   1e704:	bl	11d70 <malloc@plt>
   1e708:	subs	sl, r0, #0
   1e70c:	beq	1e6dc <mount@plt+0xc624>
   1e710:	ldr	r2, [sp, #8]
   1e714:	mov	r3, #0
   1e718:	strh	r2, [sl, #10]
   1e71c:	str	r3, [sl, #4]
   1e720:	ldm	sp, {r1, r2}
   1e724:	mov	r3, #256	; 0x100
   1e728:	strh	fp, [sl, #14]
   1e72c:	add	r0, sl, #16
   1e730:	bl	11c98 <__memcpy_chk@plt>
   1e734:	ldr	r2, [pc, #192]	; 1e7fc <mount@plt+0xc744>
   1e738:	ldr	r3, [sp, #16]
   1e73c:	add	r2, pc, r2
   1e740:	str	r3, [sl]
   1e744:	ldr	r0, [r2, #1284]	; 0x504
   1e748:	ldr	r3, [sp, #20]
   1e74c:	add	r0, r0, #1
   1e750:	add	r3, r2, r3
   1e754:	cmp	r0, #1
   1e758:	str	sl, [r3, #256]	; 0x100
   1e75c:	str	r0, [r2, #1284]	; 0x504
   1e760:	beq	1e7e4 <mount@plt+0xc72c>
   1e764:	ldr	r3, [pc, #148]	; 1e800 <mount@plt+0xc748>
   1e768:	ldr	r3, [r5, r3]
   1e76c:	ldr	r0, [r3]
   1e770:	bl	11b48 <fflush@plt>
   1e774:	mov	r2, fp
   1e778:	ldrd	r0, [sp]
   1e77c:	bl	11c14 <gethostbyaddr@plt>
   1e780:	cmp	r0, #0
   1e784:	beq	1e6b8 <mount@plt+0xc600>
   1e788:	ldr	r0, [r0]
   1e78c:	bl	11c20 <strdup@plt>
   1e790:	str	r0, [sl, #4]
   1e794:	cmp	r0, #0
   1e798:	beq	1e6dc <mount@plt+0xc624>
   1e79c:	add	sp, sp, #28
   1e7a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e7a4:	ldr	r3, [r6]
   1e7a8:	cmp	r3, #0
   1e7ac:	bne	1e61c <mount@plt+0xc564>
   1e7b0:	ldr	r3, [r6, #4]
   1e7b4:	cmp	r3, #0
   1e7b8:	bne	1e61c <mount@plt+0xc564>
   1e7bc:	ldr	r3, [r6, #8]
   1e7c0:	cmn	r3, #65536	; 0x10000
   1e7c4:	bne	1e61c <mount@plt+0xc564>
   1e7c8:	mov	r2, #4
   1e7cc:	add	r3, r6, #12
   1e7d0:	str	r3, [sp]
   1e7d4:	str	r2, [sp, #4]
   1e7d8:	str	r2, [sp, #8]
   1e7dc:	mov	fp, #2
   1e7e0:	b	1e634 <mount@plt+0xc57c>
   1e7e4:	bl	11ca4 <sethostent@plt>
   1e7e8:	b	1e764 <mount@plt+0xc6ac>
   1e7ec:	andeq	sp, r1, r4, lsl sl
   1e7f0:	andeq	r0, r0, r0, lsr r2
   1e7f4:			; <UNDEFINED> instruction: 0xff00ff01
   1e7f8:	muleq	r2, r4, r2
   1e7fc:	muleq	r2, ip, r1
   1e800:	andeq	r0, r0, r8, lsr #4
   1e804:	ldr	r3, [pc, #36]	; 1e830 <mount@plt+0xc778>
   1e808:	push	{lr}		; (str lr, [sp, #-4]!)
   1e80c:	add	r3, pc, r3
   1e810:	sub	sp, sp, #12
   1e814:	mov	ip, #256	; 0x100
   1e818:	add	r3, r3, #1280	; 0x500
   1e81c:	add	r3, r3, #8
   1e820:	str	ip, [sp]
   1e824:	bl	1e5d4 <mount@plt+0xc51c>
   1e828:	add	sp, sp, #12
   1e82c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e830:	andeq	r1, r2, ip, asr #1
   1e834:	cmp	r1, #0
   1e838:	cmpgt	r3, #2
   1e83c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e840:	mov	sl, r2
   1e844:	sub	sp, sp, #8
   1e848:	ble	1e8b4 <mount@plt+0xc7fc>
   1e84c:	ldr	r9, [pc, #108]	; 1e8c0 <mount@plt+0xc808>
   1e850:	mov	r7, r0
   1e854:	mov	r8, r1
   1e858:	add	r9, pc, r9
   1e85c:	add	r6, r2, r3
   1e860:	sub	r4, r0, #1
   1e864:	mov	r5, r2
   1e868:	ldrb	r1, [r4, #1]
   1e86c:	mov	r3, r9
   1e870:	mvn	r2, #0
   1e874:	str	r1, [sp]
   1e878:	mov	r0, r5
   1e87c:	mov	r1, #1
   1e880:	add	r5, r5, #2
   1e884:	bl	11e48 <__sprintf_chk@plt>
   1e888:	sub	r2, r6, r5
   1e88c:	cmp	r2, #2
   1e890:	add	r3, r4, #2
   1e894:	movgt	r2, #0
   1e898:	movle	r2, #1
   1e89c:	sub	r3, r3, r7
   1e8a0:	cmp	r3, r8
   1e8a4:	orrge	r2, r2, #1
   1e8a8:	cmp	r2, #0
   1e8ac:	add	r4, r4, #1
   1e8b0:	beq	1e868 <mount@plt+0xc7b0>
   1e8b4:	mov	r0, sl
   1e8b8:	add	sp, sp, #8
   1e8bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e8c0:	muleq	r0, r0, ip
   1e8c4:	ldr	ip, [pc, #268]	; 1e9d8 <mount@plt+0xc920>
   1e8c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e8cc:	add	ip, pc, ip
   1e8d0:	ldr	lr, [pc, #260]	; 1e9dc <mount@plt+0xc924>
   1e8d4:	mov	sl, r1
   1e8d8:	sub	sp, sp, #36	; 0x24
   1e8dc:	ldr	r1, [ip, lr]
   1e8e0:	mov	r9, r2
   1e8e4:	mov	r4, r0
   1e8e8:	stmib	sp, {r1, r3}
   1e8ec:	ldr	r3, [r1]
   1e8f0:	mov	r2, ip
   1e8f4:	str	r3, [sp, #28]
   1e8f8:	bl	11e00 <strlen@plt>
   1e8fc:	ands	r5, r0, #1
   1e900:	bne	1e994 <mount@plt+0xc8dc>
   1e904:	cmp	r9, #0
   1e908:	str	r9, [sp, #12]
   1e90c:	beq	1e9b8 <mount@plt+0xc900>
   1e910:	sub	r8, sl, #1
   1e914:	add	r7, sp, #24
   1e918:	mov	r6, r5
   1e91c:	b	1e94c <mount@plt+0xc894>
   1e920:	ldr	r3, [sp, #20]
   1e924:	ldrb	r3, [r3]
   1e928:	cmp	r3, #0
   1e92c:	bne	1e994 <mount@plt+0xc8dc>
   1e930:	add	r5, r5, #1
   1e934:	cmp	r5, r9
   1e938:	strb	r0, [r8, #1]!
   1e93c:	add	r4, r4, #2
   1e940:	beq	1e9b8 <mount@plt+0xc900>
   1e944:	mov	r0, r4
   1e948:	bl	11e00 <strlen@plt>
   1e94c:	cmp	r0, #1
   1e950:	bls	1e9b4 <mount@plt+0xc8fc>
   1e954:	mov	r2, #2
   1e958:	mov	r1, r4
   1e95c:	mov	r0, r7
   1e960:	bl	11e90 <strncpy@plt>
   1e964:	strb	r6, [sp, #26]
   1e968:	bl	11e18 <__errno_location@plt>
   1e96c:	mov	r2, #16
   1e970:	add	r1, sp, #20
   1e974:	mov	fp, r0
   1e978:	str	r6, [r0]
   1e97c:	mov	r0, r7
   1e980:	bl	11df4 <strtoul@plt>
   1e984:	ldr	r3, [fp]
   1e988:	cmp	r0, #255	; 0xff
   1e98c:	cmpls	r3, #0
   1e990:	beq	1e920 <mount@plt+0xc868>
   1e994:	mov	r0, #0
   1e998:	ldr	r3, [sp, #4]
   1e99c:	ldr	r2, [sp, #28]
   1e9a0:	ldr	r3, [r3]
   1e9a4:	cmp	r2, r3
   1e9a8:	bne	1e9d4 <mount@plt+0xc91c>
   1e9ac:	add	sp, sp, #36	; 0x24
   1e9b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e9b4:	str	r5, [sp, #12]
   1e9b8:	ldr	r3, [sp, #8]
   1e9bc:	cmp	r3, #0
   1e9c0:	moveq	r0, sl
   1e9c4:	ldrne	r2, [sp, #12]
   1e9c8:	movne	r0, sl
   1e9cc:	strne	r2, [r3]
   1e9d0:	b	1e998 <mount@plt+0xc8e0>
   1e9d4:	bl	11c2c <__stack_chk_fail@plt>
   1e9d8:	andeq	sp, r1, ip, lsr #14
   1e9dc:	andeq	r0, r0, r8, lsl #4
   1e9e0:	push	{r4, r5, r6, lr}
   1e9e4:	subs	r6, r2, #0
   1e9e8:	ble	1ea44 <mount@plt+0xc98c>
   1e9ec:	mov	r4, r0
   1e9f0:	add	r6, r0, r6, lsl #1
   1e9f4:	sub	r5, r1, #1
   1e9f8:	b	1ea2c <mount@plt+0xc974>
   1e9fc:	lsl	r0, r0, #4
   1ea00:	strb	r0, [r5, #1]
   1ea04:	ldrb	r0, [r4, #1]
   1ea08:	bl	1cadc <mount@plt+0xaa24>
   1ea0c:	add	r4, r4, #2
   1ea10:	cmp	r0, #0
   1ea14:	blt	1ea3c <mount@plt+0xc984>
   1ea18:	ldrb	r3, [r5, #1]!
   1ea1c:	cmp	r4, r6
   1ea20:	orr	r3, r3, r0
   1ea24:	strb	r3, [r5]
   1ea28:	beq	1ea44 <mount@plt+0xc98c>
   1ea2c:	ldrb	r0, [r4]
   1ea30:	bl	1cadc <mount@plt+0xaa24>
   1ea34:	cmp	r0, #0
   1ea38:	bge	1e9fc <mount@plt+0xc944>
   1ea3c:	mvn	r0, #0
   1ea40:	pop	{r4, r5, r6, pc}
   1ea44:	mov	r0, #0
   1ea48:	pop	{r4, r5, r6, pc}
   1ea4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ea50:	rev16	ip, r0
   1ea54:	ldr	sl, [pc, #144]	; 1eaec <mount@plt+0xca34>
   1ea58:	ldr	r8, [pc, #144]	; 1eaf0 <mount@plt+0xca38>
   1ea5c:	sub	sp, sp, #24
   1ea60:	mov	r7, r3
   1ea64:	add	sl, pc, sl
   1ea68:	add	r8, pc, r8
   1ea6c:	mov	r6, r2
   1ea70:	uxth	r3, ip
   1ea74:	add	r5, sp, #16
   1ea78:	add	r9, sp, #22
   1ea7c:	mov	r4, #0
   1ea80:	strd	r0, [sp, #16]
   1ea84:	stmib	sp, {r3, sl}
   1ea88:	sub	r1, r7, r4
   1ea8c:	mvn	r3, #0
   1ea90:	add	r0, r6, r4
   1ea94:	str	r8, [sp]
   1ea98:	mov	r2, #1
   1ea9c:	bl	12088 <__snprintf_chk@plt>
   1eaa0:	ldrh	r3, [r5, #2]!
   1eaa4:	rev16	r3, r3
   1eaa8:	cmp	r9, r5
   1eaac:	uxth	r3, r3
   1eab0:	add	r4, r4, r0
   1eab4:	bne	1ea84 <mount@plt+0xc9cc>
   1eab8:	ldr	r2, [pc, #52]	; 1eaf4 <mount@plt+0xca3c>
   1eabc:	str	r3, [sp, #4]
   1eac0:	add	r2, pc, r2
   1eac4:	str	r2, [sp, #8]
   1eac8:	str	r8, [sp]
   1eacc:	sub	r1, r7, r4
   1ead0:	add	r0, r6, r4
   1ead4:	mvn	r3, #0
   1ead8:	mov	r2, #1
   1eadc:	bl	12088 <__snprintf_chk@plt>
   1eae0:	add	r0, r0, r4
   1eae4:	add	sp, sp, #24
   1eae8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1eaec:	andeq	r9, r0, ip, asr #6
   1eaf0:	andeq	fp, r0, r8, lsl #21
   1eaf4:	andeq	ip, r0, r0, lsr #8
   1eaf8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1eafc:	subs	r6, r1, #0
   1eb00:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1eb04:	mov	r5, r0
   1eb08:	mov	r7, r2
   1eb0c:	bl	11dd0 <__ctype_b_loc@plt>
   1eb10:	ldr	r9, [pc, #116]	; 1eb8c <mount@plt+0xcad4>
   1eb14:	add	r6, r5, r6
   1eb18:	add	r9, pc, r9
   1eb1c:	sub	r6, r6, #1
   1eb20:	sub	r5, r5, #1
   1eb24:	mov	r8, r0
   1eb28:	b	1eb44 <mount@plt+0xca8c>
   1eb2c:	mov	r2, r4
   1eb30:	mov	r1, r9
   1eb34:	mov	r0, #1
   1eb38:	bl	11ec0 <__printf_chk@plt>
   1eb3c:	cmp	r6, r5
   1eb40:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1eb44:	ldrb	r4, [r5, #1]!
   1eb48:	ldr	ip, [r8]
   1eb4c:	mov	r0, r7
   1eb50:	subs	r3, r4, #92	; 0x5c
   1eb54:	lsl	r2, r4, #1
   1eb58:	movne	r3, #1
   1eb5c:	ldrh	ip, [ip, r2]
   1eb60:	mov	r1, r4
   1eb64:	ands	r3, r3, ip, lsr #14
   1eb68:	beq	1eb2c <mount@plt+0xca74>
   1eb6c:	bl	11e0c <strchr@plt>
   1eb70:	cmp	r0, #0
   1eb74:	bne	1eb2c <mount@plt+0xca74>
   1eb78:	mov	r0, r4
   1eb7c:	bl	11e84 <putchar@plt>
   1eb80:	cmp	r6, r5
   1eb84:	bne	1eb44 <mount@plt+0xca8c>
   1eb88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1eb8c:	andeq	fp, r0, r0, ror #19
   1eb90:	push	{r4, r5, r6, r7, lr}
   1eb94:	sub	sp, sp, #68	; 0x44
   1eb98:	ldr	r4, [pc, #212]	; 1ec74 <mount@plt+0xcbbc>
   1eb9c:	ldr	r3, [pc, #212]	; 1ec78 <mount@plt+0xcbc0>
   1eba0:	add	r4, pc, r4
   1eba4:	add	r5, sp, #12
   1eba8:	ldr	r6, [r4, r3]
   1ebac:	mov	r1, #0
   1ebb0:	mov	r7, r0
   1ebb4:	ldr	r3, [r6]
   1ebb8:	mov	r0, r5
   1ebbc:	str	r3, [sp, #60]	; 0x3c
   1ebc0:	bl	11cf8 <gettimeofday@plt>
   1ebc4:	mov	r0, r5
   1ebc8:	bl	11dac <localtime@plt>
   1ebcc:	ldr	r2, [pc, #168]	; 1ec7c <mount@plt+0xcbc4>
   1ebd0:	ldr	r2, [r4, r2]
   1ebd4:	ldr	r5, [r2]
   1ebd8:	cmp	r5, #0
   1ebdc:	beq	1ec38 <mount@plt+0xcb80>
   1ebe0:	ldr	r2, [pc, #152]	; 1ec80 <mount@plt+0xcbc8>
   1ebe4:	add	r4, sp, #20
   1ebe8:	mov	r3, r0
   1ebec:	add	r2, pc, r2
   1ebf0:	mov	r1, #40	; 0x28
   1ebf4:	mov	r0, r4
   1ebf8:	bl	11d94 <strftime@plt>
   1ebfc:	ldr	r2, [sp, #16]
   1ec00:	mov	r3, r4
   1ec04:	str	r2, [sp]
   1ec08:	ldr	r2, [pc, #116]	; 1ec84 <mount@plt+0xcbcc>
   1ec0c:	mov	r0, r7
   1ec10:	add	r2, pc, r2
   1ec14:	mov	r1, #1
   1ec18:	bl	11ef0 <__fprintf_chk@plt>
   1ec1c:	ldr	r2, [sp, #60]	; 0x3c
   1ec20:	ldr	r3, [r6]
   1ec24:	mov	r0, #0
   1ec28:	cmp	r2, r3
   1ec2c:	bne	1ec70 <mount@plt+0xcbb8>
   1ec30:	add	sp, sp, #68	; 0x44
   1ec34:	pop	{r4, r5, r6, r7, pc}
   1ec38:	bl	11cd4 <asctime@plt>
   1ec3c:	mov	r4, r0
   1ec40:	bl	11e00 <strlen@plt>
   1ec44:	mov	r3, r4
   1ec48:	ldr	r2, [pc, #56]	; 1ec88 <mount@plt+0xcbd0>
   1ec4c:	mov	r1, #1
   1ec50:	add	r2, pc, r2
   1ec54:	add	r4, r4, r0
   1ec58:	mov	r0, r7
   1ec5c:	strb	r5, [r4, #-1]
   1ec60:	ldr	ip, [sp, #16]
   1ec64:	str	ip, [sp]
   1ec68:	bl	11ef0 <__fprintf_chk@plt>
   1ec6c:	b	1ec1c <mount@plt+0xcb64>
   1ec70:	bl	11c2c <__stack_chk_fail@plt>
   1ec74:	andeq	sp, r1, r8, asr r4
   1ec78:	andeq	r0, r0, r8, lsl #4
   1ec7c:	andeq	r0, r0, ip, lsl r2
   1ec80:	andeq	fp, r0, r4, lsl r9
   1ec84:	andeq	fp, r0, r4, lsl #18
   1ec88:	ldrdeq	fp, [r0], -r0
   1ec8c:	ldr	r3, [pc, #388]	; 1ee18 <mount@plt+0xcd60>
   1ec90:	ldr	ip, [pc, #388]	; 1ee1c <mount@plt+0xcd64>
   1ec94:	add	r3, pc, r3
   1ec98:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ec9c:	mov	r7, r0
   1eca0:	ldr	r5, [r3, ip]
   1eca4:	ldr	r0, [r2, #20]
   1eca8:	sub	sp, sp, #92	; 0x5c
   1ecac:	ldr	r3, [r5]
   1ecb0:	cmp	r0, #0
   1ecb4:	mov	r6, r1
   1ecb8:	str	r3, [sp, #84]	; 0x54
   1ecbc:	moveq	r4, r0
   1ecc0:	beq	1ed20 <mount@plt+0xcc68>
   1ecc4:	ldr	r8, [r0, #4]
   1ecc8:	cmp	r8, #0
   1eccc:	beq	1ed58 <mount@plt+0xcca0>
   1ecd0:	ldr	r4, [r2, #148]	; 0x94
   1ecd4:	cmp	r4, #0
   1ecd8:	beq	1edb8 <mount@plt+0xcd00>
   1ecdc:	bl	22504 <mount@plt+0x1044c>
   1ece0:	subs	r4, r0, #0
   1ece4:	bne	1ed70 <mount@plt+0xccb8>
   1ece8:	mov	r0, r8
   1ecec:	bl	214f8 <mount@plt+0xf440>
   1ecf0:	mov	r9, r0
   1ecf4:	cmp	r9, #0
   1ecf8:	beq	1ed20 <mount@plt+0xcc68>
   1ecfc:	ldr	r2, [pc, #284]	; 1ee20 <mount@plt+0xcd68>
   1ed00:	mov	r3, #64	; 0x40
   1ed04:	add	r2, pc, r2
   1ed08:	add	r0, sp, #20
   1ed0c:	stm	sp, {r2, r6, r9}
   1ed10:	mov	r1, r3
   1ed14:	mov	r2, #1
   1ed18:	mov	r6, r0
   1ed1c:	bl	12088 <__snprintf_chk@plt>
   1ed20:	ldr	r2, [pc, #252]	; 1ee24 <mount@plt+0xcd6c>
   1ed24:	mov	r3, r7
   1ed28:	add	r2, pc, r2
   1ed2c:	mov	r0, #4
   1ed30:	str	r6, [sp]
   1ed34:	mov	r1, #0
   1ed38:	bl	22ae4 <mount@plt+0x10a2c>
   1ed3c:	ldr	r2, [sp, #84]	; 0x54
   1ed40:	ldr	r3, [r5]
   1ed44:	mov	r0, r4
   1ed48:	cmp	r2, r3
   1ed4c:	bne	1ee14 <mount@plt+0xcd5c>
   1ed50:	add	sp, sp, #92	; 0x5c
   1ed54:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ed58:	bl	22504 <mount@plt+0x1044c>
   1ed5c:	subs	r4, r0, #0
   1ed60:	bne	1ed94 <mount@plt+0xccdc>
   1ed64:	ldr	r9, [pc, #188]	; 1ee28 <mount@plt+0xcd70>
   1ed68:	add	r9, pc, r9
   1ed6c:	b	1ecfc <mount@plt+0xcc44>
   1ed70:	ldr	r2, [pc, #180]	; 1ee2c <mount@plt+0xcd74>
   1ed74:	str	r8, [sp]
   1ed78:	mov	r3, #0
   1ed7c:	add	r2, pc, r2
   1ed80:	mov	r1, #6
   1ed84:	mov	r0, #2
   1ed88:	bl	2263c <mount@plt+0x10584>
   1ed8c:	mov	r4, #0
   1ed90:	b	1ed20 <mount@plt+0xcc68>
   1ed94:	ldr	r2, [pc, #148]	; 1ee30 <mount@plt+0xcd78>
   1ed98:	str	r8, [sp]
   1ed9c:	mov	r3, r8
   1eda0:	add	r2, pc, r2
   1eda4:	mov	r1, #6
   1eda8:	mov	r0, #2
   1edac:	mov	r4, r8
   1edb0:	bl	22e3c <mount@plt+0x10d84>
   1edb4:	b	1ed20 <mount@plt+0xcc68>
   1edb8:	mov	r0, r8
   1edbc:	bl	21540 <mount@plt+0xf488>
   1edc0:	mov	r9, r0
   1edc4:	bl	22504 <mount@plt+0x1044c>
   1edc8:	cmp	r0, #0
   1edcc:	bne	1ede4 <mount@plt+0xcd2c>
   1edd0:	mov	r0, r8
   1edd4:	bl	2165c <mount@plt+0xf5a4>
   1edd8:	mvn	r0, r0
   1eddc:	and	r4, r0, #1
   1ede0:	b	1ecf4 <mount@plt+0xcc3c>
   1ede4:	ldr	r2, [pc, #72]	; 1ee34 <mount@plt+0xcd7c>
   1ede8:	mov	r3, r4
   1edec:	add	r2, pc, r2
   1edf0:	mov	r1, #6
   1edf4:	mov	r0, #2
   1edf8:	str	r9, [sp]
   1edfc:	bl	22ae4 <mount@plt+0x10a2c>
   1ee00:	mov	r0, r8
   1ee04:	bl	2165c <mount@plt+0xf5a4>
   1ee08:	mvn	r0, r0
   1ee0c:	and	r4, r0, #1
   1ee10:	b	1ed20 <mount@plt+0xcc68>
   1ee14:	bl	11c2c <__stack_chk_fail@plt>
   1ee18:	andeq	sp, r1, r4, ror #6
   1ee1c:	andeq	r0, r0, r8, lsl #4
   1ee20:	andeq	fp, r0, r8, asr #16
   1ee24:	andeq	fp, r0, ip, lsr #16
   1ee28:	ldrdeq	fp, [r0], -r0
   1ee2c:	andeq	fp, r0, r4, asr #15
   1ee30:	strheq	ip, [r0], -r8
   1ee34:	andeq	ip, r0, ip, rrx
   1ee38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ee3c:	sub	sp, sp, #44	; 0x2c
   1ee40:	ldr	r4, [pc, #468]	; 1f01c <mount@plt+0xcf64>
   1ee44:	ldr	ip, [pc, #468]	; 1f020 <mount@plt+0xcf68>
   1ee48:	add	r4, pc, r4
   1ee4c:	str	r4, [sp, #20]
   1ee50:	mov	r3, r2
   1ee54:	str	r2, [sp]
   1ee58:	ldr	r2, [r4, ip]
   1ee5c:	mov	r7, r0
   1ee60:	mov	ip, r2
   1ee64:	str	r2, [sp, #16]
   1ee68:	ldr	ip, [ip]
   1ee6c:	mov	r2, #10
   1ee70:	str	r1, [sp, #4]
   1ee74:	str	ip, [sp, #36]	; 0x24
   1ee78:	bl	11af4 <__getdelim@plt>
   1ee7c:	mov	r2, r4
   1ee80:	subs	r9, r0, #0
   1ee84:	blt	1ef98 <mount@plt+0xcee0>
   1ee88:	ldr	r3, [pc, #404]	; 1f024 <mount@plt+0xcf6c>
   1ee8c:	ldr	r4, [r7]
   1ee90:	mov	r1, #35	; 0x23
   1ee94:	ldr	r8, [r2, r3]
   1ee98:	mov	r0, r4
   1ee9c:	mov	r5, #0
   1eea0:	ldr	r3, [r8]
   1eea4:	add	r3, r3, #1
   1eea8:	str	r3, [r8]
   1eeac:	bl	11e0c <strchr@plt>
   1eeb0:	cmp	r0, #0
   1eeb4:	movne	r3, #0
   1eeb8:	strbne	r3, [r0]
   1eebc:	ldr	r3, [pc, #356]	; 1f028 <mount@plt+0xcf70>
   1eec0:	ldrne	r4, [r7]
   1eec4:	add	r3, pc, r3
   1eec8:	str	r3, [sp, #8]
   1eecc:	add	r3, sp, #32
   1eed0:	str	r3, [sp, #12]
   1eed4:	mov	r0, r4
   1eed8:	b	1ef88 <mount@plt+0xced0>
   1eedc:	ldr	r3, [sp]
   1eee0:	mov	r2, #10
   1eee4:	ldr	r1, [sp, #12]
   1eee8:	add	r0, sp, #28
   1eeec:	str	r5, [sp, #28]
   1eef0:	str	r5, [sp, #32]
   1eef4:	bl	11af4 <__getdelim@plt>
   1eef8:	subs	r4, r0, #0
   1eefc:	blt	1efb8 <mount@plt+0xcf00>
   1ef00:	ldr	r3, [r8]
   1ef04:	mov	r1, #35	; 0x23
   1ef08:	add	r3, r3, #1
   1ef0c:	str	r3, [r8]
   1ef10:	strb	r5, [r6]
   1ef14:	ldr	r6, [sp, #28]
   1ef18:	mov	r0, r6
   1ef1c:	bl	11e0c <strchr@plt>
   1ef20:	cmp	r0, #0
   1ef24:	strbne	r5, [r0]
   1ef28:	ldr	fp, [r7]
   1ef2c:	ldrne	r6, [sp, #28]
   1ef30:	mov	r0, fp
   1ef34:	bl	11e00 <strlen@plt>
   1ef38:	mov	sl, r0
   1ef3c:	mov	r0, r6
   1ef40:	bl	11e00 <strlen@plt>
   1ef44:	ldr	r3, [sp, #4]
   1ef48:	add	r1, sl, r0
   1ef4c:	add	r1, r1, #1
   1ef50:	str	r1, [r3]
   1ef54:	mov	r0, fp
   1ef58:	bl	11c50 <realloc@plt>
   1ef5c:	cmp	r0, #0
   1ef60:	mov	r6, r0
   1ef64:	str	r0, [r7]
   1ef68:	beq	1efe4 <mount@plt+0xcf2c>
   1ef6c:	ldr	r1, [sp, #28]
   1ef70:	bl	11cbc <strcat@plt>
   1ef74:	ldr	r0, [sp, #28]
   1ef78:	sub	r4, r4, #2
   1ef7c:	bl	11b78 <free@plt>
   1ef80:	ldr	r0, [r7]
   1ef84:	add	r9, r9, r4
   1ef88:	ldr	r1, [sp, #8]
   1ef8c:	bl	11adc <strstr@plt>
   1ef90:	subs	r6, r0, #0
   1ef94:	bne	1eedc <mount@plt+0xce24>
   1ef98:	ldr	r3, [sp, #16]
   1ef9c:	ldr	r2, [sp, #36]	; 0x24
   1efa0:	mov	r0, r9
   1efa4:	ldr	r3, [r3]
   1efa8:	cmp	r2, r3
   1efac:	bne	1f018 <mount@plt+0xcf60>
   1efb0:	add	sp, sp, #44	; 0x2c
   1efb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1efb8:	ldr	r0, [sp, #20]
   1efbc:	ldr	r3, [pc, #104]	; 1f02c <mount@plt+0xcf74>
   1efc0:	mov	r2, #26
   1efc4:	mov	r1, #1
   1efc8:	ldr	r3, [r0, r3]
   1efcc:	ldr	r0, [pc, #92]	; 1f030 <mount@plt+0xcf78>
   1efd0:	mov	r9, r4
   1efd4:	ldr	r3, [r3]
   1efd8:	add	r0, pc, r0
   1efdc:	bl	11cb0 <fwrite@plt>
   1efe0:	b	1ef98 <mount@plt+0xcee0>
   1efe4:	ldr	r0, [sp, #20]
   1efe8:	ldr	r3, [pc, #60]	; 1f02c <mount@plt+0xcf74>
   1efec:	mov	r2, #14
   1eff0:	mov	r1, #1
   1eff4:	ldr	r3, [r0, r3]
   1eff8:	ldr	r0, [pc, #52]	; 1f034 <mount@plt+0xcf7c>
   1effc:	mvn	r9, #0
   1f000:	ldr	r3, [r3]
   1f004:	add	r0, pc, r0
   1f008:	bl	11cb0 <fwrite@plt>
   1f00c:	ldr	r3, [sp, #4]
   1f010:	str	r6, [r3]
   1f014:	b	1ef98 <mount@plt+0xcee0>
   1f018:	bl	11c2c <__stack_chk_fail@plt>
   1f01c:			; <UNDEFINED> instruction: 0x0001d1b0
   1f020:	andeq	r0, r0, r8, lsl #4
   1f024:	andeq	r0, r0, ip, lsl #4
   1f028:	andeq	fp, r0, r4, asr #13
   1f02c:	andeq	r0, r0, r4, lsl r2
   1f030:	andeq	fp, r0, r4, lsl #11
   1f034:	andeq	fp, r0, r4, ror r5
   1f038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f03c:	mov	sl, r1
   1f040:	ldrb	r3, [r0]
   1f044:	ldr	r1, [pc, #296]	; 1f174 <mount@plt+0xd0bc>
   1f048:	sub	sp, sp, #12
   1f04c:	add	r1, pc, r1
   1f050:	cmp	r3, #0
   1f054:	str	r1, [sp, #4]
   1f058:	beq	1f114 <mount@plt+0xd05c>
   1f05c:	ldr	r6, [pc, #276]	; 1f178 <mount@plt+0xd0c0>
   1f060:	mov	fp, #0
   1f064:	add	r6, pc, r6
   1f068:	mov	r4, r0
   1f06c:	sub	r7, r2, #1
   1f070:	add	r6, r6, #108	; 0x6c
   1f074:	mov	r9, fp
   1f078:	sub	r8, sl, #4
   1f07c:	b	1f0a8 <mount@plt+0xcff0>
   1f080:	add	r0, r5, #1
   1f084:	str	r0, [r8, fp, lsl #2]
   1f088:	bl	11e0c <strchr@plt>
   1f08c:	subs	r2, r0, #0
   1f090:	beq	1f148 <mount@plt+0xd090>
   1f094:	mov	r4, r2
   1f098:	strb	r9, [r4], #1
   1f09c:	ldrb	r2, [r2, #1]
   1f0a0:	cmp	r2, #0
   1f0a4:	beq	1f0fc <mount@plt+0xd044>
   1f0a8:	mov	r1, r6
   1f0ac:	mov	r0, r4
   1f0b0:	bl	12094 <strspn@plt>
   1f0b4:	ldrb	r1, [r4, r0]
   1f0b8:	add	r5, r4, r0
   1f0bc:	cmp	r1, #0
   1f0c0:	beq	1f0fc <mount@plt+0xd044>
   1f0c4:	cmp	r7, fp
   1f0c8:	ble	1f11c <mount@plt+0xd064>
   1f0cc:	cmp	r1, #34	; 0x22
   1f0d0:	cmpne	r1, #39	; 0x27
   1f0d4:	add	fp, fp, #1
   1f0d8:	beq	1f080 <mount@plt+0xcfc8>
   1f0dc:	mov	r1, r6
   1f0e0:	str	r5, [r8, fp, lsl #2]
   1f0e4:	mov	r0, r5
   1f0e8:	bl	11b30 <strcspn@plt>
   1f0ec:	ldrb	r1, [r5, r0]
   1f0f0:	add	r2, r5, r0
   1f0f4:	cmp	r1, #0
   1f0f8:	bne	1f094 <mount@plt+0xcfdc>
   1f0fc:	add	sl, sl, fp, lsl #2
   1f100:	mov	r2, #0
   1f104:	mov	r0, fp
   1f108:	str	r2, [sl]
   1f10c:	add	sp, sp, #12
   1f110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f114:	mov	fp, r3
   1f118:	b	1f100 <mount@plt+0xd048>
   1f11c:	ldr	r0, [sp, #4]
   1f120:	ldr	r3, [pc, #84]	; 1f17c <mount@plt+0xd0c4>
   1f124:	mov	r2, #30
   1f128:	mov	r1, #1
   1f12c:	ldr	r3, [r0, r3]
   1f130:	ldr	r0, [pc, #72]	; 1f180 <mount@plt+0xd0c8>
   1f134:	ldr	r3, [r3]
   1f138:	add	r0, pc, r0
   1f13c:	bl	11cb0 <fwrite@plt>
   1f140:	mov	r0, #1
   1f144:	bl	11ddc <exit@plt>
   1f148:	ldr	r0, [sp, #4]
   1f14c:	ldr	r3, [pc, #40]	; 1f17c <mount@plt+0xd0c4>
   1f150:	mov	r2, #27
   1f154:	mov	r1, #1
   1f158:	ldr	r3, [r0, r3]
   1f15c:	ldr	r0, [pc, #32]	; 1f184 <mount@plt+0xd0cc>
   1f160:	ldr	r3, [r3]
   1f164:	add	r0, pc, r0
   1f168:	bl	11cb0 <fwrite@plt>
   1f16c:	mov	r0, #1
   1f170:	bl	11ddc <exit@plt>
   1f174:	andeq	ip, r1, ip, lsr #31
   1f178:	andeq	fp, r0, ip, lsl #1
   1f17c:	andeq	r0, r0, r4, lsl r2
   1f180:	andeq	fp, r0, r4, asr r4
   1f184:	andeq	fp, r0, r8, asr #8
   1f188:	ldr	r3, [pc, #128]	; 1f210 <mount@plt+0xd158>
   1f18c:	ldr	r2, [pc, #128]	; 1f214 <mount@plt+0xd15c>
   1f190:	add	r3, pc, r3
   1f194:	push	{r4, r5, r6, r7, lr}
   1f198:	sub	sp, sp, #20
   1f19c:	ldr	r5, [r3, r2]
   1f1a0:	ldr	ip, [r1, #16]
   1f1a4:	mov	r6, r0
   1f1a8:	ldr	r2, [r5]
   1f1ac:	add	r0, sp, #8
   1f1b0:	ldr	r7, [r1, #20]
   1f1b4:	str	ip, [sp, #8]
   1f1b8:	str	r2, [sp, #12]
   1f1bc:	bl	11dac <localtime@plt>
   1f1c0:	bl	11cd4 <asctime@plt>
   1f1c4:	mov	r4, r0
   1f1c8:	bl	11e00 <strlen@plt>
   1f1cc:	mov	r3, r4
   1f1d0:	ldr	r2, [pc, #64]	; 1f218 <mount@plt+0xd160>
   1f1d4:	mov	ip, #0
   1f1d8:	add	r2, pc, r2
   1f1dc:	mov	r1, #1
   1f1e0:	add	r4, r4, r0
   1f1e4:	mov	r0, r6
   1f1e8:	strb	ip, [r4, #-1]
   1f1ec:	str	r7, [sp]
   1f1f0:	bl	11ef0 <__fprintf_chk@plt>
   1f1f4:	ldr	r2, [sp, #12]
   1f1f8:	ldr	r3, [r5]
   1f1fc:	cmp	r2, r3
   1f200:	bne	1f20c <mount@plt+0xd154>
   1f204:	add	sp, sp, #20
   1f208:	pop	{r4, r5, r6, r7, pc}
   1f20c:	bl	11c2c <__stack_chk_fail@plt>
   1f210:	andeq	ip, r1, r8, ror #28
   1f214:	andeq	r0, r0, r8, lsl #4
   1f218:	strdeq	fp, [r0], -r0
   1f21c:	ldr	r3, [pc, #96]	; 1f284 <mount@plt+0xd1cc>
   1f220:	ldr	ip, [pc, #96]	; 1f288 <mount@plt+0xd1d0>
   1f224:	add	r3, pc, r3
   1f228:	push	{r4, lr}
   1f22c:	sub	sp, sp, #16
   1f230:	ldr	r4, [r3, ip]
   1f234:	cmp	r2, #0
   1f238:	strd	r0, [sp, #4]
   1f23c:	ldr	r3, [r4]
   1f240:	add	r1, sp, #4
   1f244:	str	r3, [sp, #12]
   1f248:	bne	1f270 <mount@plt+0xd1b8>
   1f24c:	ldr	r0, [pc, #56]	; 1f28c <mount@plt+0xd1d4>
   1f250:	add	r0, pc, r0
   1f254:	bl	22398 <mount@plt+0x102e0>
   1f258:	ldr	r2, [sp, #12]
   1f25c:	ldr	r3, [r4]
   1f260:	cmp	r2, r3
   1f264:	bne	1f280 <mount@plt+0xd1c8>
   1f268:	add	sp, sp, #16
   1f26c:	pop	{r4, pc}
   1f270:	ldr	r0, [pc, #24]	; 1f290 <mount@plt+0xd1d8>
   1f274:	add	r0, pc, r0
   1f278:	bl	22398 <mount@plt+0x102e0>
   1f27c:	b	1f258 <mount@plt+0xd1a0>
   1f280:	bl	11c2c <__stack_chk_fail@plt>
   1f284:	ldrdeq	ip, [r1], -r4
   1f288:	andeq	r0, r0, r8, lsl #4
   1f28c:			; <UNDEFINED> instruction: 0xffffd470
   1f290:			; <UNDEFINED> instruction: 0xffffd480
   1f294:	push	{r4, lr}
   1f298:	sub	sp, sp, #8
   1f29c:	ldr	r3, [pc, #36]	; 1f2c8 <mount@plt+0xd210>
   1f2a0:	mov	r4, r1
   1f2a4:	str	r0, [sp]
   1f2a8:	add	r3, pc, r3
   1f2ac:	mov	r0, r1
   1f2b0:	mvn	r2, #0
   1f2b4:	mov	r1, #1
   1f2b8:	bl	11e48 <__sprintf_chk@plt>
   1f2bc:	mov	r0, r4
   1f2c0:	add	sp, sp, #8
   1f2c4:	pop	{r4, pc}
   1f2c8:	andeq	fp, r0, r0, lsl r8
   1f2cc:	ldr	r3, [pc, #212]	; 1f3a8 <mount@plt+0xd2f0>
   1f2d0:	ldr	r2, [pc, #212]	; 1f3ac <mount@plt+0xd2f4>
   1f2d4:	add	r3, pc, r3
   1f2d8:	push	{r4, r5, r6, r7, r8, lr}
   1f2dc:	sub	sp, sp, #8
   1f2e0:	ldr	r6, [r3, r2]
   1f2e4:	mov	r7, r0
   1f2e8:	mov	r0, r1
   1f2ec:	ldr	r3, [r6]
   1f2f0:	mov	r4, r1
   1f2f4:	str	r3, [sp, #4]
   1f2f8:	bl	11e00 <strlen@plt>
   1f2fc:	cmp	r0, #23
   1f300:	bne	1f388 <mount@plt+0xd2d0>
   1f304:	mov	r3, r4
   1f308:	add	r0, r4, #21
   1f30c:	ldrb	r2, [r3, #2]
   1f310:	cmp	r2, #58	; 0x3a
   1f314:	bne	1f388 <mount@plt+0xd2d0>
   1f318:	add	r3, r3, #3
   1f31c:	cmp	r3, r0
   1f320:	bne	1f30c <mount@plt+0xd254>
   1f324:	mov	r2, #0
   1f328:	mov	r3, #0
   1f32c:	add	r4, r4, #2
   1f330:	mov	r5, #56	; 0x38
   1f334:	mov	r8, sp
   1f338:	strd	r2, [r7]
   1f33c:	mov	r2, #16
   1f340:	mov	r1, r8
   1f344:	sub	r0, r4, #2
   1f348:	bl	11df4 <strtoul@plt>
   1f34c:	ldr	r3, [sp]
   1f350:	cmp	r0, #255	; 0xff
   1f354:	cmpls	r3, r4
   1f358:	movne	r3, #1
   1f35c:	moveq	r3, #0
   1f360:	bne	1f388 <mount@plt+0xd2d0>
   1f364:	ldr	r2, [r7]
   1f368:	add	r4, r4, #3
   1f36c:	orr	r0, r2, r0, lsl r5
   1f370:	sub	r5, r5, #8
   1f374:	cmn	r5, #8
   1f378:	str	r0, [r7]
   1f37c:	bne	1f33c <mount@plt+0xd284>
   1f380:	mov	r0, r3
   1f384:	b	1f38c <mount@plt+0xd2d4>
   1f388:	mvn	r0, #0
   1f38c:	ldr	r2, [sp, #4]
   1f390:	ldr	r3, [r6]
   1f394:	cmp	r2, r3
   1f398:	bne	1f3a4 <mount@plt+0xd2ec>
   1f39c:	add	sp, sp, #8
   1f3a0:	pop	{r4, r5, r6, r7, r8, pc}
   1f3a4:	bl	11c2c <__stack_chk_fail@plt>
   1f3a8:	andeq	ip, r1, r4, lsr #26
   1f3ac:	andeq	r0, r0, r8, lsl #4
   1f3b0:	cmp	r0, #5
   1f3b4:	bne	1f3c8 <mount@plt+0xd310>
   1f3b8:	cmp	r1, #128	; 0x80
   1f3bc:	beq	1f3d0 <mount@plt+0xd318>
   1f3c0:	cmp	r1, #129	; 0x81
   1f3c4:	moveq	r1, #10
   1f3c8:	mov	r0, r1
   1f3cc:	bx	lr
   1f3d0:	mov	r1, #2
   1f3d4:	b	1f3c8 <mount@plt+0xd310>
   1f3d8:	ldr	r3, [pc, #412]	; 1f57c <mount@plt+0xd4c4>
   1f3dc:	ldr	r2, [pc, #412]	; 1f580 <mount@plt+0xd4c8>
   1f3e0:	add	r3, pc, r3
   1f3e4:	push	{r4, r5, r6, r7, r8, lr}
   1f3e8:	sub	sp, sp, #1296	; 0x510
   1f3ec:	ldr	r6, [r3, r2]
   1f3f0:	ldr	r3, [r1, #92]	; 0x5c
   1f3f4:	mov	r4, r0
   1f3f8:	ldr	r2, [r6]
   1f3fc:	cmp	r3, #0
   1f400:	str	r2, [sp, #1292]	; 0x50c
   1f404:	beq	1f470 <mount@plt+0xd3b8>
   1f408:	ldrh	r5, [r3], #4
   1f40c:	sub	r5, r5, #4
   1f410:	cmp	r5, #191	; 0xbf
   1f414:	bgt	1f448 <mount@plt+0xd390>
   1f418:	rsb	r2, r5, #192	; 0xc0
   1f41c:	mov	r1, #0
   1f420:	add	r0, r0, r5
   1f424:	str	r3, [sp, #4]
   1f428:	bl	11e78 <memset@plt>
   1f42c:	ldr	r3, [sp, #4]
   1f430:	mov	r2, r5
   1f434:	mov	r1, r3
   1f438:	mov	r0, r4
   1f43c:	bl	11bc0 <memcpy@plt>
   1f440:	mov	r0, #192	; 0xc0
   1f444:	b	1f458 <mount@plt+0xd3a0>
   1f448:	mov	r1, r3
   1f44c:	mov	r2, #192	; 0xc0
   1f450:	bl	11bc0 <memcpy@plt>
   1f454:	mov	r0, #192	; 0xc0
   1f458:	ldr	r2, [sp, #1292]	; 0x50c
   1f45c:	ldr	r3, [r6]
   1f460:	cmp	r2, r3
   1f464:	bne	1f550 <mount@plt+0xd498>
   1f468:	add	sp, sp, #1296	; 0x510
   1f46c:	pop	{r4, r5, r6, r7, r8, pc}
   1f470:	ldr	r7, [r1, #28]
   1f474:	cmp	r7, #0
   1f478:	beq	1f4c8 <mount@plt+0xd410>
   1f47c:	ldrh	r8, [r7], #4
   1f480:	sub	r8, r8, #4
   1f484:	cmp	r8, #95	; 0x5f
   1f488:	ble	1f554 <mount@plt+0xd49c>
   1f48c:	add	r5, sp, #8
   1f490:	mov	r1, r7
   1f494:	mov	r0, r5
   1f498:	mov	r2, #96	; 0x60
   1f49c:	bl	11bc0 <memcpy@plt>
   1f4a0:	mov	r0, r5
   1f4a4:	add	r1, r4, #192	; 0xc0
   1f4a8:	mov	r2, #0
   1f4ac:	ldr	r3, [r0], #4
   1f4b0:	str	r3, [r4], #8
   1f4b4:	cmp	r4, r1
   1f4b8:	str	r2, [r4, #-4]
   1f4bc:	bne	1f4ac <mount@plt+0xd3f4>
   1f4c0:	mov	r0, #96	; 0x60
   1f4c4:	b	1f458 <mount@plt+0xd3a0>
   1f4c8:	ldr	r2, [r1, #48]	; 0x30
   1f4cc:	cmp	r2, #0
   1f4d0:	beq	1f548 <mount@plt+0xd490>
   1f4d4:	ldrh	r3, [r2], #4
   1f4d8:	mov	r1, #296	; 0x128
   1f4dc:	add	r0, sp, #104	; 0x68
   1f4e0:	sub	r3, r3, #4
   1f4e4:	bl	266b0 <mount@plt+0x145f8>
   1f4e8:	ldr	r5, [sp, #116]	; 0x74
   1f4ec:	cmp	r5, #0
   1f4f0:	beq	1f440 <mount@plt+0xd388>
   1f4f4:	mov	r2, #192	; 0xc0
   1f4f8:	mov	r1, r7
   1f4fc:	mov	r0, r4
   1f500:	bl	11e78 <memset@plt>
   1f504:	ldrd	r2, [r5, #12]
   1f508:	strd	r2, [r4]
   1f50c:	ldrd	r2, [r5, #20]
   1f510:	strd	r2, [r4, #16]
   1f514:	ldrd	r2, [r5, #44]	; 0x2c
   1f518:	strd	r2, [r4, #8]
   1f51c:	ldrd	r2, [r5, #52]	; 0x34
   1f520:	strd	r2, [r4, #24]
   1f524:	ldrd	r2, [r5, #108]	; 0x6c
   1f528:	strd	r2, [r4, #32]
   1f52c:	ldrd	r2, [r5, #116]	; 0x74
   1f530:	strd	r2, [r4, #40]	; 0x28
   1f534:	ldrd	r2, [r5, #188]	; 0xbc
   1f538:	strd	r2, [r4, #64]	; 0x40
   1f53c:	ldrd	r2, [r5, #252]	; 0xfc
   1f540:	strd	r2, [r4, #104]	; 0x68
   1f544:	b	1f440 <mount@plt+0xd388>
   1f548:	mvn	r0, #0
   1f54c:	b	1f458 <mount@plt+0xd3a0>
   1f550:	bl	11c2c <__stack_chk_fail@plt>
   1f554:	add	r5, sp, #8
   1f558:	mov	r1, r3
   1f55c:	rsb	r2, r8, #96	; 0x60
   1f560:	add	r0, r5, r8
   1f564:	bl	11e78 <memset@plt>
   1f568:	mov	r2, r8
   1f56c:	mov	r1, r7
   1f570:	mov	r0, r5
   1f574:	bl	11bc0 <memcpy@plt>
   1f578:	b	1f4a0 <mount@plt+0xd3e8>
   1f57c:	andeq	ip, r1, r8, lsl ip
   1f580:	andeq	r0, r0, r8, lsl #4
   1f584:	push	{r4, r5, r6, r7, r8, lr}
   1f588:	mov	r7, r0
   1f58c:	mov	r0, r1
   1f590:	mov	r4, r2
   1f594:	mov	r6, r1
   1f598:	bl	11e00 <strlen@plt>
   1f59c:	cmp	r4, #0
   1f5a0:	mov	r5, r0
   1f5a4:	bne	1f5b0 <mount@plt+0xd4f8>
   1f5a8:	mov	r0, r5
   1f5ac:	pop	{r4, r5, r6, r7, r8, pc}
   1f5b0:	sub	r4, r4, #1
   1f5b4:	cmp	r4, r0
   1f5b8:	movcs	r4, r0
   1f5bc:	mov	r1, r6
   1f5c0:	mov	r2, r4
   1f5c4:	mov	r0, r7
   1f5c8:	bl	11bc0 <memcpy@plt>
   1f5cc:	mov	r3, #0
   1f5d0:	strb	r3, [r7, r4]
   1f5d4:	mov	r0, r5
   1f5d8:	pop	{r4, r5, r6, r7, r8, pc}
   1f5dc:	push	{r4, r5, r6, r7, r8, lr}
   1f5e0:	mov	r5, r2
   1f5e4:	mov	r6, r1
   1f5e8:	mov	r7, r0
   1f5ec:	bl	11e00 <strlen@plt>
   1f5f0:	cmp	r0, r5
   1f5f4:	mov	r4, r0
   1f5f8:	bcc	1f60c <mount@plt+0xd554>
   1f5fc:	mov	r0, r6
   1f600:	bl	11e00 <strlen@plt>
   1f604:	add	r0, r0, r4
   1f608:	pop	{r4, r5, r6, r7, r8, pc}
   1f60c:	sub	r2, r5, r0
   1f610:	mov	r1, r6
   1f614:	add	r0, r7, r0
   1f618:	bl	1f584 <mount@plt+0xd4cc>
   1f61c:	add	r0, r0, r4
   1f620:	pop	{r4, r5, r6, r7, r8, pc}
   1f624:	ldr	r3, [pc, #176]	; 1f6dc <mount@plt+0xd624>
   1f628:	ldr	r2, [pc, #176]	; 1f6e0 <mount@plt+0xd628>
   1f62c:	add	r3, pc, r3
   1f630:	push	{r4, r5, lr}
   1f634:	sub	sp, sp, #12
   1f638:	ldr	r4, [r3, r2]
   1f63c:	ldr	r3, [r4]
   1f640:	str	r3, [sp, #4]
   1f644:	bl	11b60 <getuid@plt>
   1f648:	cmp	r0, #0
   1f64c:	bne	1f668 <mount@plt+0xd5b0>
   1f650:	ldr	r2, [sp, #4]
   1f654:	ldr	r3, [r4]
   1f658:	cmp	r2, r3
   1f65c:	bne	1f6d0 <mount@plt+0xd618>
   1f660:	add	sp, sp, #12
   1f664:	pop	{r4, r5, pc}
   1f668:	bl	11c74 <geteuid@plt>
   1f66c:	cmp	r0, #0
   1f670:	beq	1f650 <mount@plt+0xd598>
   1f674:	bl	11e30 <cap_get_proc@plt>
   1f678:	subs	r5, r0, #0
   1f67c:	beq	1f6d4 <mount@plt+0xd61c>
   1f680:	mov	r3, sp
   1f684:	mov	r2, #2
   1f688:	mov	r1, #12
   1f68c:	bl	11d10 <cap_get_flag@plt>
   1f690:	cmp	r0, #0
   1f694:	bne	1f6d4 <mount@plt+0xd61c>
   1f698:	ldr	r3, [sp]
   1f69c:	cmp	r3, #0
   1f6a0:	bne	1f6c4 <mount@plt+0xd60c>
   1f6a4:	mov	r0, r5
   1f6a8:	bl	11f80 <cap_clear@plt>
   1f6ac:	cmp	r0, #0
   1f6b0:	bne	1f6d4 <mount@plt+0xd61c>
   1f6b4:	mov	r0, r5
   1f6b8:	bl	11d64 <cap_set_proc@plt>
   1f6bc:	cmp	r0, #0
   1f6c0:	bne	1f6d4 <mount@plt+0xd61c>
   1f6c4:	mov	r0, r5
   1f6c8:	bl	11fbc <cap_free@plt>
   1f6cc:	b	1f650 <mount@plt+0xd598>
   1f6d0:	bl	11c2c <__stack_chk_fail@plt>
   1f6d4:	mov	r0, #1
   1f6d8:	bl	11ddc <exit@plt>
   1f6dc:	andeq	ip, r1, ip, asr #19
   1f6e0:	andeq	r0, r0, r8, lsl #4
   1f6e4:	push	{r4, r5, r6, r7, lr}
   1f6e8:	vpush	{d8}
   1f6ec:	ldr	r3, [pc, #380]	; 1f870 <mount@plt+0xd7b8>
   1f6f0:	ldr	r2, [pc, #380]	; 1f874 <mount@plt+0xd7bc>
   1f6f4:	add	r3, pc, r3
   1f6f8:	sub	sp, sp, #12
   1f6fc:	ldr	r5, [r3, r2]
   1f700:	mov	r7, r1
   1f704:	mov	r6, r0
   1f708:	ldr	r3, [r5]
   1f70c:	mov	r0, r1
   1f710:	mov	r1, sp
   1f714:	str	r3, [sp, #4]
   1f718:	bl	11ed8 <strtod@plt>
   1f71c:	ldr	r4, [sp]
   1f720:	cmp	r4, r7
   1f724:	beq	1f838 <mount@plt+0xd780>
   1f728:	ldrb	r3, [r4]
   1f72c:	vmov.f64	d8, d0
   1f730:	cmp	r3, #0
   1f734:	bne	1f760 <mount@plt+0xd6a8>
   1f738:	vcvt.u32.f64	s16, d8
   1f73c:	mov	r0, #0
   1f740:	vstr	s16, [r6]
   1f744:	ldr	r2, [sp, #4]
   1f748:	ldr	r3, [r5]
   1f74c:	cmp	r2, r3
   1f750:	bne	1f858 <mount@plt+0xd7a0>
   1f754:	add	sp, sp, #12
   1f758:	vpop	{d8}
   1f75c:	pop	{r4, r5, r6, r7, pc}
   1f760:	ldr	r1, [pc, #272]	; 1f878 <mount@plt+0xd7c0>
   1f764:	mov	r0, r4
   1f768:	add	r1, pc, r1
   1f76c:	bl	11c68 <strcasecmp@plt>
   1f770:	cmp	r0, #0
   1f774:	beq	1f840 <mount@plt+0xd788>
   1f778:	ldr	r1, [pc, #252]	; 1f87c <mount@plt+0xd7c4>
   1f77c:	mov	r0, r4
   1f780:	add	r1, pc, r1
   1f784:	bl	11c68 <strcasecmp@plt>
   1f788:	cmp	r0, #0
   1f78c:	beq	1f840 <mount@plt+0xd788>
   1f790:	ldr	r1, [pc, #232]	; 1f880 <mount@plt+0xd7c8>
   1f794:	mov	r0, r4
   1f798:	add	r1, pc, r1
   1f79c:	bl	11c68 <strcasecmp@plt>
   1f7a0:	cmp	r0, #0
   1f7a4:	beq	1f840 <mount@plt+0xd788>
   1f7a8:	ldr	r1, [pc, #212]	; 1f884 <mount@plt+0xd7cc>
   1f7ac:	mov	r0, r4
   1f7b0:	add	r1, pc, r1
   1f7b4:	bl	11c68 <strcasecmp@plt>
   1f7b8:	cmp	r0, #0
   1f7bc:	beq	1f84c <mount@plt+0xd794>
   1f7c0:	ldr	r1, [pc, #192]	; 1f888 <mount@plt+0xd7d0>
   1f7c4:	mov	r0, r4
   1f7c8:	add	r1, pc, r1
   1f7cc:	bl	11c68 <strcasecmp@plt>
   1f7d0:	cmp	r0, #0
   1f7d4:	beq	1f84c <mount@plt+0xd794>
   1f7d8:	ldr	r1, [pc, #172]	; 1f88c <mount@plt+0xd7d4>
   1f7dc:	mov	r0, r4
   1f7e0:	add	r1, pc, r1
   1f7e4:	bl	11c68 <strcasecmp@plt>
   1f7e8:	cmp	r0, #0
   1f7ec:	beq	1f84c <mount@plt+0xd794>
   1f7f0:	ldr	r1, [pc, #152]	; 1f890 <mount@plt+0xd7d8>
   1f7f4:	mov	r0, r4
   1f7f8:	add	r1, pc, r1
   1f7fc:	bl	11c68 <strcasecmp@plt>
   1f800:	cmp	r0, #0
   1f804:	beq	1f738 <mount@plt+0xd680>
   1f808:	ldr	r1, [pc, #132]	; 1f894 <mount@plt+0xd7dc>
   1f80c:	mov	r0, r4
   1f810:	add	r1, pc, r1
   1f814:	bl	11c68 <strcasecmp@plt>
   1f818:	cmp	r0, #0
   1f81c:	beq	1f738 <mount@plt+0xd680>
   1f820:	ldr	r1, [pc, #112]	; 1f898 <mount@plt+0xd7e0>
   1f824:	mov	r0, r4
   1f828:	add	r1, pc, r1
   1f82c:	bl	11c68 <strcasecmp@plt>
   1f830:	cmp	r0, #0
   1f834:	beq	1f738 <mount@plt+0xd680>
   1f838:	mvn	r0, #0
   1f83c:	b	1f744 <mount@plt+0xd68c>
   1f840:	vldr	d7, [pc, #24]	; 1f860 <mount@plt+0xd7a8>
   1f844:	vmul.f64	d8, d8, d7
   1f848:	b	1f738 <mount@plt+0xd680>
   1f84c:	vldr	d7, [pc, #20]	; 1f868 <mount@plt+0xd7b0>
   1f850:	vmul.f64	d8, d8, d7
   1f854:	b	1f738 <mount@plt+0xd680>
   1f858:	bl	11c2c <__stack_chk_fail@plt>
   1f85c:	nop			; (mov r0, r0)
   1f860:	andeq	r0, r0, r0
   1f864:	smlawbmi	lr, r0, r4, r8
   1f868:	andeq	r0, r0, r0
   1f86c:	addmi	r4, pc, r0
   1f870:	andeq	ip, r1, r4, lsl #18
   1f874:	andeq	r0, r0, r8, lsl #4
   1f878:	andeq	r9, r0, ip, asr r7
   1f87c:	andeq	r8, r0, r8, lsr #15
   1f880:	andeq	sl, r0, r8, lsr #21
   1f884:	andeq	r8, r0, r4, lsl #15
   1f888:	andeq	sl, r0, r0, lsl #21
   1f88c:	andeq	sl, r0, r0, ror sl
   1f890:	andeq	sl, r0, r4, lsr lr
   1f894:	ldrdeq	sl, [r0], -r0
   1f898:	andeq	sl, r0, r0, asr #27
   1f89c:	vmov	s15, r0
   1f8a0:	ldr	r3, [pc, #168]	; 1f950 <mount@plt+0xd898>
   1f8a4:	push	{r4, lr}
   1f8a8:	cmp	r0, r3
   1f8ac:	sub	sp, sp, #16
   1f8b0:	mov	r4, r1
   1f8b4:	vcvt.f64.u32	d7, s15
   1f8b8:	bhi	1f92c <mount@plt+0xd874>
   1f8bc:	cmp	r0, #1000	; 0x3e8
   1f8c0:	bcc	1f8fc <mount@plt+0xd844>
   1f8c4:	ldr	r2, [pc, #136]	; 1f954 <mount@plt+0xd89c>
   1f8c8:	vldr	d5, [pc, #112]	; 1f940 <mount@plt+0xd888>
   1f8cc:	add	r2, pc, r2
   1f8d0:	vdiv.f64	d6, d7, d5
   1f8d4:	str	r2, [sp]
   1f8d8:	mvn	r3, #0
   1f8dc:	mov	r2, #1
   1f8e0:	mov	r1, #63	; 0x3f
   1f8e4:	mov	r0, r4
   1f8e8:	vstr	d6, [sp, #8]
   1f8ec:	bl	12088 <__snprintf_chk@plt>
   1f8f0:	mov	r0, r4
   1f8f4:	add	sp, sp, #16
   1f8f8:	pop	{r4, pc}
   1f8fc:	ldr	r3, [pc, #84]	; 1f958 <mount@plt+0xd8a0>
   1f900:	str	r0, [sp, #4]
   1f904:	add	r3, pc, r3
   1f908:	str	r3, [sp]
   1f90c:	mov	r2, #1
   1f910:	mvn	r3, #0
   1f914:	mov	r1, #63	; 0x3f
   1f918:	mov	r0, r4
   1f91c:	bl	12088 <__snprintf_chk@plt>
   1f920:	mov	r0, r4
   1f924:	add	sp, sp, #16
   1f928:	pop	{r4, pc}
   1f92c:	ldr	r2, [pc, #40]	; 1f95c <mount@plt+0xd8a4>
   1f930:	vldr	d5, [pc, #16]	; 1f948 <mount@plt+0xd890>
   1f934:	add	r2, pc, r2
   1f938:	b	1f8d0 <mount@plt+0xd818>
   1f93c:	nop			; (mov r0, r0)
   1f940:	andeq	r0, r0, r0
   1f944:	addmi	r4, pc, r0
   1f948:	andeq	r0, r0, r0
   1f94c:	smlawbmi	lr, r0, r4, r8
   1f950:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   1f954:	andeq	sl, r0, ip, lsr #26
   1f958:	strdeq	sl, [r0], -ip
   1f95c:			; <UNDEFINED> instruction: 0x0000acbc
   1f960:	push	{r4, r5, r6, r7, lr}
   1f964:	vpush	{d8}
   1f968:	ldr	r3, [pc, #480]	; 1fb50 <mount@plt+0xda98>
   1f96c:	ldr	r2, [pc, #480]	; 1fb54 <mount@plt+0xda9c>
   1f970:	add	r3, pc, r3
   1f974:	sub	sp, sp, #12
   1f978:	ldr	r5, [r3, r2]
   1f97c:	mov	r6, r1
   1f980:	mov	r7, r0
   1f984:	ldr	r3, [r5]
   1f988:	mov	r0, r1
   1f98c:	mov	r1, sp
   1f990:	str	r3, [sp, #4]
   1f994:	bl	11ed8 <strtod@plt>
   1f998:	ldr	r4, [sp]
   1f99c:	cmp	r4, r6
   1f9a0:	beq	1fb04 <mount@plt+0xda4c>
   1f9a4:	ldrb	r3, [r4]
   1f9a8:	vmov.f64	d8, d0
   1f9ac:	cmp	r3, #0
   1f9b0:	bne	1f9e4 <mount@plt+0xd92c>
   1f9b4:	vmov	r0, r1, d8
   1f9b8:	bl	27064 <mount@plt+0x14fac>
   1f9bc:	mov	ip, #0
   1f9c0:	strd	r0, [r7]
   1f9c4:	ldr	r2, [sp, #4]
   1f9c8:	ldr	r3, [r5]
   1f9cc:	mov	r0, ip
   1f9d0:	cmp	r2, r3
   1f9d4:	bne	1fb30 <mount@plt+0xda78>
   1f9d8:	add	sp, sp, #12
   1f9dc:	vpop	{d8}
   1f9e0:	pop	{r4, r5, r6, r7, pc}
   1f9e4:	ldr	r1, [pc, #364]	; 1fb58 <mount@plt+0xdaa0>
   1f9e8:	mov	r0, r4
   1f9ec:	add	r1, pc, r1
   1f9f0:	bl	11c68 <strcasecmp@plt>
   1f9f4:	cmp	r0, #0
   1f9f8:	beq	1fb0c <mount@plt+0xda54>
   1f9fc:	ldr	r1, [pc, #344]	; 1fb5c <mount@plt+0xdaa4>
   1fa00:	mov	r0, r4
   1fa04:	add	r1, pc, r1
   1fa08:	bl	11c68 <strcasecmp@plt>
   1fa0c:	cmp	r0, #0
   1fa10:	beq	1fb0c <mount@plt+0xda54>
   1fa14:	ldr	r1, [pc, #324]	; 1fb60 <mount@plt+0xdaa8>
   1fa18:	mov	r0, r4
   1fa1c:	add	r1, pc, r1
   1fa20:	bl	11c68 <strcasecmp@plt>
   1fa24:	cmp	r0, #0
   1fa28:	beq	1fb0c <mount@plt+0xda54>
   1fa2c:	ldr	r1, [pc, #304]	; 1fb64 <mount@plt+0xdaac>
   1fa30:	mov	r0, r4
   1fa34:	add	r1, pc, r1
   1fa38:	bl	11c68 <strcasecmp@plt>
   1fa3c:	cmp	r0, #0
   1fa40:	beq	1fb18 <mount@plt+0xda60>
   1fa44:	ldr	r1, [pc, #284]	; 1fb68 <mount@plt+0xdab0>
   1fa48:	mov	r0, r4
   1fa4c:	add	r1, pc, r1
   1fa50:	bl	11c68 <strcasecmp@plt>
   1fa54:	cmp	r0, #0
   1fa58:	beq	1fb18 <mount@plt+0xda60>
   1fa5c:	ldr	r1, [pc, #264]	; 1fb6c <mount@plt+0xdab4>
   1fa60:	mov	r0, r4
   1fa64:	add	r1, pc, r1
   1fa68:	bl	11c68 <strcasecmp@plt>
   1fa6c:	cmp	r0, #0
   1fa70:	beq	1fb18 <mount@plt+0xda60>
   1fa74:	ldr	r1, [pc, #244]	; 1fb70 <mount@plt+0xdab8>
   1fa78:	mov	r0, r4
   1fa7c:	add	r1, pc, r1
   1fa80:	bl	11c68 <strcasecmp@plt>
   1fa84:	cmp	r0, #0
   1fa88:	beq	1fb24 <mount@plt+0xda6c>
   1fa8c:	ldr	r1, [pc, #224]	; 1fb74 <mount@plt+0xdabc>
   1fa90:	mov	r0, r4
   1fa94:	add	r1, pc, r1
   1fa98:	bl	11c68 <strcasecmp@plt>
   1fa9c:	cmp	r0, #0
   1faa0:	beq	1fb24 <mount@plt+0xda6c>
   1faa4:	ldr	r1, [pc, #204]	; 1fb78 <mount@plt+0xdac0>
   1faa8:	mov	r0, r4
   1faac:	add	r1, pc, r1
   1fab0:	bl	11c68 <strcasecmp@plt>
   1fab4:	cmp	r0, #0
   1fab8:	beq	1fb24 <mount@plt+0xda6c>
   1fabc:	ldr	r1, [pc, #184]	; 1fb7c <mount@plt+0xdac4>
   1fac0:	mov	r0, r4
   1fac4:	add	r1, pc, r1
   1fac8:	bl	11c68 <strcasecmp@plt>
   1facc:	cmp	r0, #0
   1fad0:	beq	1f9b4 <mount@plt+0xd8fc>
   1fad4:	ldr	r1, [pc, #164]	; 1fb80 <mount@plt+0xdac8>
   1fad8:	mov	r0, r4
   1fadc:	add	r1, pc, r1
   1fae0:	bl	11c68 <strcasecmp@plt>
   1fae4:	cmp	r0, #0
   1fae8:	beq	1f9b4 <mount@plt+0xd8fc>
   1faec:	ldr	r1, [pc, #144]	; 1fb84 <mount@plt+0xdacc>
   1faf0:	mov	r0, r4
   1faf4:	add	r1, pc, r1
   1faf8:	bl	11c68 <strcasecmp@plt>
   1fafc:	cmp	r0, #0
   1fb00:	beq	1f9b4 <mount@plt+0xd8fc>
   1fb04:	mvn	ip, #0
   1fb08:	b	1f9c4 <mount@plt+0xd90c>
   1fb0c:	vldr	d7, [pc, #36]	; 1fb38 <mount@plt+0xda80>
   1fb10:	vmul.f64	d8, d8, d7
   1fb14:	b	1f9b4 <mount@plt+0xd8fc>
   1fb18:	vldr	d7, [pc, #32]	; 1fb40 <mount@plt+0xda88>
   1fb1c:	vmul.f64	d8, d8, d7
   1fb20:	b	1f9b4 <mount@plt+0xd8fc>
   1fb24:	vldr	d7, [pc, #28]	; 1fb48 <mount@plt+0xda90>
   1fb28:	vmul.f64	d8, d8, d7
   1fb2c:	b	1f9b4 <mount@plt+0xd8fc>
   1fb30:	bl	11c2c <__stack_chk_fail@plt>
   1fb34:	nop			; (mov r0, r0)
   1fb38:	andeq	r0, r0, r0
   1fb3c:	bicmi	ip, sp, r5, ror #26
   1fb40:	andeq	r0, r0, r0
   1fb44:	smlawbmi	lr, r0, r4, r8
   1fb48:	andeq	r0, r0, r0
   1fb4c:	addmi	r4, pc, r0
   1fb50:	andeq	ip, r1, r8, lsl #13
   1fb54:	andeq	r0, r0, r8, lsl #4
   1fb58:	ldrdeq	r9, [r0], -r8
   1fb5c:	andeq	r8, r0, r4, lsr #10
   1fb60:	andeq	sl, r0, r4, lsr #16
   1fb64:	andeq	r8, r0, r0, lsl #10
   1fb68:	strdeq	sl, [r0], -ip
   1fb6c:	andeq	sl, r0, ip, ror #15
   1fb70:			; <UNDEFINED> instruction: 0x0000abb0
   1fb74:	andeq	sl, r0, ip, asr #22
   1fb78:	andeq	sl, r0, ip, lsr fp
   1fb7c:	andeq	sl, r0, r0, lsl #27
   1fb80:	andeq	sl, r0, ip, lsr #22
   1fb84:	andeq	sl, r0, ip, lsl fp
   1fb88:	push	{r4, r5, r6, lr}
   1fb8c:	sub	sp, sp, #16
   1fb90:	mov	r6, r2
   1fb94:	mov	r4, r0
   1fb98:	mov	r5, r1
   1fb9c:	bl	26fb8 <mount@plt+0x14f00>
   1fba0:	add	r3, pc, #184	; 0xb8
   1fba4:	ldrd	r2, [r3]
   1fba8:	cmp	r2, r4
   1fbac:	sbcs	r3, r3, r5
   1fbb0:	vmov	d7, r0, r1
   1fbb4:	blt	1fc20 <mount@plt+0xdb68>
   1fbb8:	add	r3, pc, #168	; 0xa8
   1fbbc:	ldrd	r2, [r3]
   1fbc0:	cmp	r2, r4
   1fbc4:	sbcs	r3, r3, r5
   1fbc8:	blt	1fc10 <mount@plt+0xdb58>
   1fbcc:	cmp	r4, #1000	; 0x3e8
   1fbd0:	sbcs	r3, r5, #0
   1fbd4:	blt	1fc30 <mount@plt+0xdb78>
   1fbd8:	ldr	r2, [pc, #168]	; 1fc88 <mount@plt+0xdbd0>
   1fbdc:	vldr	d5, [pc, #140]	; 1fc70 <mount@plt+0xdbb8>
   1fbe0:	add	r2, pc, r2
   1fbe4:	vdiv.f64	d6, d7, d5
   1fbe8:	str	r2, [sp]
   1fbec:	mvn	r3, #0
   1fbf0:	mov	r2, #1
   1fbf4:	mov	r1, #63	; 0x3f
   1fbf8:	mov	r0, r6
   1fbfc:	vstr	d6, [sp, #8]
   1fc00:	bl	12088 <__snprintf_chk@plt>
   1fc04:	mov	r0, r6
   1fc08:	add	sp, sp, #16
   1fc0c:	pop	{r4, r5, r6, pc}
   1fc10:	ldr	r2, [pc, #116]	; 1fc8c <mount@plt+0xdbd4>
   1fc14:	vldr	d5, [pc, #92]	; 1fc78 <mount@plt+0xdbc0>
   1fc18:	add	r2, pc, r2
   1fc1c:	b	1fbe4 <mount@plt+0xdb2c>
   1fc20:	ldr	r2, [pc, #104]	; 1fc90 <mount@plt+0xdbd8>
   1fc24:	vldr	d5, [pc, #84]	; 1fc80 <mount@plt+0xdbc8>
   1fc28:	add	r2, pc, r2
   1fc2c:	b	1fbe4 <mount@plt+0xdb2c>
   1fc30:	ldr	r3, [pc, #92]	; 1fc94 <mount@plt+0xdbdc>
   1fc34:	strd	r4, [sp, #8]
   1fc38:	add	r3, pc, r3
   1fc3c:	str	r3, [sp]
   1fc40:	mov	r2, #1
   1fc44:	mvn	r3, #0
   1fc48:	mov	r1, #63	; 0x3f
   1fc4c:	mov	r0, r6
   1fc50:	bl	12088 <__snprintf_chk@plt>
   1fc54:	mov	r0, r6
   1fc58:	add	sp, sp, #16
   1fc5c:	pop	{r4, r5, r6, pc}
   1fc60:	blcc	fe6d2464 <optarg@@GLIBC_2.4+0xfe6944dc>
   1fc64:	andeq	r0, r0, r0
   1fc68:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
	...
   1fc74:	addmi	r4, pc, r0
   1fc78:	andeq	r0, r0, r0
   1fc7c:	smlawbmi	lr, r0, r4, r8
   1fc80:	andeq	r0, r0, r0
   1fc84:	bicmi	ip, sp, r5, ror #26
   1fc88:	andeq	sl, r0, r8, asr #20
   1fc8c:	andeq	sl, r0, r8, lsl #20
   1fc90:	strdeq	sl, [r0], -r0
   1fc94:	strdeq	sl, [r0], -r8
   1fc98:	ldr	r3, [pc, #316]	; 1fddc <mount@plt+0xdd24>
   1fc9c:	ldr	ip, [pc, #316]	; 1fde0 <mount@plt+0xdd28>
   1fca0:	add	r3, pc, r3
   1fca4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1fca8:	sub	sp, sp, #524	; 0x20c
   1fcac:	ldr	r6, [r3, ip]
   1fcb0:	mov	r5, r0
   1fcb4:	mov	r8, r1
   1fcb8:	ldr	r3, [r6]
   1fcbc:	mov	r7, r2
   1fcc0:	add	r9, sp, #4
   1fcc4:	str	r3, [sp, #516]	; 0x204
   1fcc8:	mov	r2, r5
   1fccc:	mov	r1, #512	; 0x200
   1fcd0:	mov	r0, r9
   1fcd4:	bl	11b90 <fgets@plt>
   1fcd8:	cmp	r0, #0
   1fcdc:	beq	1fd4c <mount@plt+0xdc94>
   1fce0:	ldrb	r3, [sp, #4]
   1fce4:	mov	r4, r9
   1fce8:	cmp	r3, #9
   1fcec:	cmpne	r3, #32
   1fcf0:	bne	1fd04 <mount@plt+0xdc4c>
   1fcf4:	ldrb	r3, [r4, #1]!
   1fcf8:	cmp	r3, #9
   1fcfc:	cmpne	r3, #32
   1fd00:	beq	1fcf4 <mount@plt+0xdc3c>
   1fd04:	cmp	r3, #10
   1fd08:	cmpne	r3, #35	; 0x23
   1fd0c:	moveq	r2, #1
   1fd10:	movne	r2, #0
   1fd14:	cmp	r3, #0
   1fd18:	movne	r3, r2
   1fd1c:	moveq	r3, #1
   1fd20:	cmp	r3, #0
   1fd24:	bne	1fcc8 <mount@plt+0xdc10>
   1fd28:	ldr	r1, [pc, #180]	; 1fde4 <mount@plt+0xdd2c>
   1fd2c:	mov	r3, r7
   1fd30:	mov	r2, r8
   1fd34:	add	r1, pc, r1
   1fd38:	mov	r0, r4
   1fd3c:	bl	11fa4 <sscanf@plt>
   1fd40:	cmp	r0, #2
   1fd44:	bne	1fd64 <mount@plt+0xdcac>
   1fd48:	mov	r0, #1
   1fd4c:	ldr	r2, [sp, #516]	; 0x204
   1fd50:	ldr	r3, [r6]
   1fd54:	cmp	r2, r3
   1fd58:	bne	1fdd8 <mount@plt+0xdd20>
   1fd5c:	add	sp, sp, #524	; 0x20c
   1fd60:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1fd64:	ldr	r1, [pc, #124]	; 1fde8 <mount@plt+0xdd30>
   1fd68:	mov	r3, r7
   1fd6c:	mov	r2, r8
   1fd70:	add	r1, pc, r1
   1fd74:	mov	r0, r4
   1fd78:	bl	11fa4 <sscanf@plt>
   1fd7c:	cmp	r0, #2
   1fd80:	beq	1fd48 <mount@plt+0xdc90>
   1fd84:	ldr	r1, [pc, #96]	; 1fdec <mount@plt+0xdd34>
   1fd88:	mov	r3, r7
   1fd8c:	mov	r2, r8
   1fd90:	add	r1, pc, r1
   1fd94:	mov	r0, r4
   1fd98:	bl	11fa4 <sscanf@plt>
   1fd9c:	cmp	r0, #2
   1fda0:	beq	1fd48 <mount@plt+0xdc90>
   1fda4:	ldr	r1, [pc, #68]	; 1fdf0 <mount@plt+0xdd38>
   1fda8:	mov	r2, r8
   1fdac:	mov	r3, r7
   1fdb0:	add	r1, pc, r1
   1fdb4:	mov	r0, r4
   1fdb8:	bl	11fa4 <sscanf@plt>
   1fdbc:	cmp	r0, #2
   1fdc0:	beq	1fd48 <mount@plt+0xdc90>
   1fdc4:	mov	r1, r4
   1fdc8:	mov	r0, r7
   1fdcc:	bl	11cec <strcpy@plt>
   1fdd0:	mvn	r0, #0
   1fdd4:	b	1fd4c <mount@plt+0xdc94>
   1fdd8:	bl	11c2c <__stack_chk_fail@plt>
   1fddc:	andeq	ip, r1, r8, asr r3
   1fde0:	andeq	r0, r0, r8, lsl #4
   1fde4:	andeq	sl, r0, r4, lsl #18
   1fde8:	ldrdeq	sl, [r0], -r4
   1fdec:	andeq	sl, r0, r0, asr #17
   1fdf0:	andeq	sl, r0, r8, lsr #17
   1fdf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fdf8:	sub	sp, sp, #532	; 0x214
   1fdfc:	ldr	r9, [pc, #216]	; 1fedc <mount@plt+0xde24>
   1fe00:	ldr	r3, [pc, #216]	; 1fee0 <mount@plt+0xde28>
   1fe04:	add	r9, pc, r9
   1fe08:	add	r5, sp, #12
   1fe0c:	ldr	sl, [r9, r3]
   1fe10:	mov	fp, r0
   1fe14:	mov	r2, #512	; 0x200
   1fe18:	ldr	r3, [sl]
   1fe1c:	mov	r8, r1
   1fe20:	mov	r0, r5
   1fe24:	mov	r1, #0
   1fe28:	str	r3, [sp, #524]	; 0x20c
   1fe2c:	bl	11e78 <memset@plt>
   1fe30:	ldr	r1, [pc, #172]	; 1fee4 <mount@plt+0xde2c>
   1fe34:	mov	r0, fp
   1fe38:	add	r1, pc, r1
   1fe3c:	bl	11ff8 <fopen64@plt>
   1fe40:	subs	r6, r0, #0
   1fe44:	addne	r7, sp, #8
   1fe48:	beq	1fe90 <mount@plt+0xddd8>
   1fe4c:	mov	r2, r5
   1fe50:	mov	r1, r7
   1fe54:	mov	r0, r6
   1fe58:	bl	1fc98 <mount@plt+0xdbe0>
   1fe5c:	cmp	r0, #0
   1fe60:	beq	1fe88 <mount@plt+0xddd0>
   1fe64:	cmn	r0, #1
   1fe68:	beq	1fea8 <mount@plt+0xddf0>
   1fe6c:	ldr	r4, [sp, #8]
   1fe70:	cmp	r4, #256	; 0x100
   1fe74:	bhi	1fe4c <mount@plt+0xdd94>
   1fe78:	mov	r0, r5
   1fe7c:	bl	11c20 <strdup@plt>
   1fe80:	str	r0, [r8, r4, lsl #2]
   1fe84:	b	1fe4c <mount@plt+0xdd94>
   1fe88:	mov	r0, r6
   1fe8c:	bl	11f14 <fclose@plt>
   1fe90:	ldr	r2, [sp, #524]	; 0x20c
   1fe94:	ldr	r3, [sl]
   1fe98:	cmp	r2, r3
   1fe9c:	bne	1fed8 <mount@plt+0xde20>
   1fea0:	add	sp, sp, #532	; 0x214
   1fea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fea8:	ldr	r1, [pc, #56]	; 1fee8 <mount@plt+0xde30>
   1feac:	ldr	r2, [pc, #56]	; 1feec <mount@plt+0xde34>
   1feb0:	mov	r3, fp
   1feb4:	ldr	r0, [r9, r1]
   1feb8:	add	r2, pc, r2
   1febc:	str	r5, [sp]
   1fec0:	mov	r1, #1
   1fec4:	ldr	r0, [r0]
   1fec8:	bl	11ef0 <__fprintf_chk@plt>
   1fecc:	mov	r0, r6
   1fed0:	bl	11f14 <fclose@plt>
   1fed4:	b	1fe90 <mount@plt+0xddd8>
   1fed8:	bl	11c2c <__stack_chk_fail@plt>
   1fedc:	strdeq	ip, [r1], -r4
   1fee0:	andeq	r0, r0, r8, lsl #4
   1fee4:	strdeq	r9, [r0], -r8
   1fee8:	andeq	r0, r0, r4, lsl r2
   1feec:	andeq	sl, r0, r8, lsr #15
   1fef0:	ldr	r3, [pc, #288]	; 20018 <mount@plt+0xdf60>
   1fef4:	ldr	r1, [pc, #288]	; 2001c <mount@plt+0xdf64>
   1fef8:	add	r3, pc, r3
   1fefc:	push	{r4, r5, r6, r7, r8, lr}
   1ff00:	sub	sp, sp, #4096	; 0x1000
   1ff04:	ldr	r8, [r3, r1]
   1ff08:	sub	sp, sp, #16
   1ff0c:	ldr	r2, [pc, #268]	; 20020 <mount@plt+0xdf68>
   1ff10:	ldr	r1, [pc, #268]	; 20024 <mount@plt+0xdf6c>
   1ff14:	ldr	r0, [pc, #268]	; 20028 <mount@plt+0xdf70>
   1ff18:	add	r3, sp, #4096	; 0x1000
   1ff1c:	add	r2, pc, r2
   1ff20:	ldr	ip, [r8]
   1ff24:	add	r3, r3, #12
   1ff28:	mov	lr, #1
   1ff2c:	add	r1, pc, r1
   1ff30:	add	r0, pc, r0
   1ff34:	str	lr, [r2]
   1ff38:	str	ip, [r3]
   1ff3c:	bl	1fdf4 <mount@plt+0xdd3c>
   1ff40:	ldr	r0, [pc, #228]	; 2002c <mount@plt+0xdf74>
   1ff44:	add	r0, pc, r0
   1ff48:	bl	11d1c <opendir@plt>
   1ff4c:	subs	r5, r0, #0
   1ff50:	beq	1fff0 <mount@plt+0xdf38>
   1ff54:	ldr	r6, [pc, #212]	; 20030 <mount@plt+0xdf78>
   1ff58:	add	r7, sp, #12
   1ff5c:	add	r6, pc, r6
   1ff60:	mov	r0, r5
   1ff64:	bl	11fb0 <readdir64@plt>
   1ff68:	cmp	r0, #0
   1ff6c:	beq	1ffe8 <mount@plt+0xdf30>
   1ff70:	ldrb	r3, [r0, #19]
   1ff74:	cmp	r3, #46	; 0x2e
   1ff78:	beq	1ff60 <mount@plt+0xdea8>
   1ff7c:	add	r4, r0, #19
   1ff80:	mov	r0, r4
   1ff84:	bl	11e00 <strlen@plt>
   1ff88:	cmp	r0, #5
   1ff8c:	bls	1ff60 <mount@plt+0xdea8>
   1ff90:	sub	r0, r0, #5
   1ff94:	add	r0, r4, r0
   1ff98:	mov	r1, r6
   1ff9c:	bl	11b0c <strcmp@plt>
   1ffa0:	cmp	r0, #0
   1ffa4:	bne	1ff60 <mount@plt+0xdea8>
   1ffa8:	ldr	r2, [pc, #132]	; 20034 <mount@plt+0xdf7c>
   1ffac:	mov	r3, #4096	; 0x1000
   1ffb0:	add	r2, pc, r2
   1ffb4:	mov	r1, r3
   1ffb8:	stm	sp, {r2, r4}
   1ffbc:	mov	r0, r7
   1ffc0:	mov	r2, #1
   1ffc4:	bl	12088 <__snprintf_chk@plt>
   1ffc8:	ldr	r1, [pc, #104]	; 20038 <mount@plt+0xdf80>
   1ffcc:	mov	r0, r7
   1ffd0:	add	r1, pc, r1
   1ffd4:	bl	1fdf4 <mount@plt+0xdd3c>
   1ffd8:	mov	r0, r5
   1ffdc:	bl	11fb0 <readdir64@plt>
   1ffe0:	cmp	r0, #0
   1ffe4:	bne	1ff70 <mount@plt+0xdeb8>
   1ffe8:	mov	r0, r5
   1ffec:	bl	1207c <closedir@plt>
   1fff0:	add	r3, sp, #4096	; 0x1000
   1fff4:	add	r3, r3, #12
   1fff8:	ldr	r2, [r3]
   1fffc:	ldr	r3, [r8]
   20000:	cmp	r2, r3
   20004:	bne	20014 <mount@plt+0xdf5c>
   20008:	add	sp, sp, #4096	; 0x1000
   2000c:	add	sp, sp, #16
   20010:	pop	{r4, r5, r6, r7, r8, pc}
   20014:	bl	11c2c <__stack_chk_fail@plt>
   20018:	andeq	ip, r1, r0, lsl #2
   2001c:	andeq	r0, r0, r8, lsl #4
   20020:	andeq	pc, r1, r4, asr #31
   20024:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   20028:	andeq	sl, r0, r0, asr r7
   2002c:	andeq	sl, r0, r4, asr r7
   20030:	andeq	sl, r0, r8, asr r7
   20034:	andeq	sl, r0, ip, lsl #14
   20038:	andeq	ip, r1, r8, asr r3
   2003c:	push	{r4, r5, r6, r7, r8, r9, lr}
   20040:	sub	sp, sp, #540	; 0x21c
   20044:	ldr	r7, [pc, #264]	; 20154 <mount@plt+0xe09c>
   20048:	ldr	r3, [pc, #264]	; 20158 <mount@plt+0xe0a0>
   2004c:	add	r7, pc, r7
   20050:	add	r2, sp, #20
   20054:	str	r2, [sp, #8]
   20058:	ldr	r8, [r7, r3]
   2005c:	mov	r9, r0
   20060:	mov	r6, r1
   20064:	ldr	r3, [r8]
   20068:	mov	r0, r2
   2006c:	mov	r1, #0
   20070:	mov	r2, #512	; 0x200
   20074:	str	r3, [sp, #532]	; 0x214
   20078:	bl	11e78 <memset@plt>
   2007c:	ldr	r1, [pc, #216]	; 2015c <mount@plt+0xe0a4>
   20080:	mov	r0, r9
   20084:	add	r1, pc, r1
   20088:	bl	11ff8 <fopen64@plt>
   2008c:	subs	r5, r0, #0
   20090:	beq	20104 <mount@plt+0xe04c>
   20094:	add	r3, sp, #16
   20098:	str	r3, [sp, #12]
   2009c:	ldr	r2, [sp, #8]
   200a0:	ldr	r1, [sp, #12]
   200a4:	mov	r0, r5
   200a8:	bl	1fc98 <mount@plt+0xdbe0>
   200ac:	cmp	r0, #0
   200b0:	beq	200fc <mount@plt+0xe044>
   200b4:	cmn	r0, #1
   200b8:	beq	2011c <mount@plt+0xe064>
   200bc:	ldr	r3, [sp, #16]
   200c0:	cmp	r3, #0
   200c4:	blt	2009c <mount@plt+0xdfe4>
   200c8:	mov	r0, #12
   200cc:	bl	11d70 <malloc@plt>
   200d0:	ldr	r3, [sp, #16]
   200d4:	mov	r4, r0
   200d8:	ldr	r0, [sp, #8]
   200dc:	str	r3, [r4, #8]
   200e0:	bl	11c20 <strdup@plt>
   200e4:	ldrb	r3, [sp, #16]
   200e8:	ldr	r2, [r6, r3, lsl #2]
   200ec:	str	r4, [r6, r3, lsl #2]
   200f0:	str	r2, [r4]
   200f4:	str	r0, [r4, #4]
   200f8:	b	2009c <mount@plt+0xdfe4>
   200fc:	mov	r0, r5
   20100:	bl	11f14 <fclose@plt>
   20104:	ldr	r2, [sp, #532]	; 0x214
   20108:	ldr	r3, [r8]
   2010c:	cmp	r2, r3
   20110:	bne	20150 <mount@plt+0xe098>
   20114:	add	sp, sp, #540	; 0x21c
   20118:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2011c:	ldr	r1, [pc, #60]	; 20160 <mount@plt+0xe0a8>
   20120:	ldr	ip, [sp, #8]
   20124:	ldr	r2, [pc, #56]	; 20164 <mount@plt+0xe0ac>
   20128:	ldr	r0, [r7, r1]
   2012c:	mov	r3, r9
   20130:	str	ip, [sp]
   20134:	add	r2, pc, r2
   20138:	mov	r1, #1
   2013c:	ldr	r0, [r0]
   20140:	bl	11ef0 <__fprintf_chk@plt>
   20144:	mov	r0, r5
   20148:	bl	11f14 <fclose@plt>
   2014c:	b	20104 <mount@plt+0xe04c>
   20150:	bl	11c2c <__stack_chk_fail@plt>
   20154:	andeq	fp, r1, ip, lsr #31
   20158:	andeq	r0, r0, r8, lsl #4
   2015c:	andeq	r9, r0, ip, lsr #23
   20160:	andeq	r0, r0, r4, lsl r2
   20164:	andeq	sl, r0, ip, lsr #10
   20168:	ldr	r2, [pc, #348]	; 202cc <mount@plt+0xe214>
   2016c:	ldr	r0, [pc, #348]	; 202d0 <mount@plt+0xe218>
   20170:	add	r2, pc, r2
   20174:	push	{r4, r5, r6, r7, r8, lr}
   20178:	sub	sp, sp, #4096	; 0x1000
   2017c:	ldr	r4, [r2, r0]
   20180:	ldr	r3, [pc, #332]	; 202d4 <mount@plt+0xe21c>
   20184:	sub	sp, sp, #16
   20188:	add	r3, pc, r3
   2018c:	add	lr, sp, #4096	; 0x1000
   20190:	ldr	r1, [pc, #320]	; 202d8 <mount@plt+0xe220>
   20194:	add	r0, r3, #2032	; 0x7f0
   20198:	ldr	ip, [r4]
   2019c:	add	lr, lr, #12
   201a0:	add	r1, pc, r1
   201a4:	add	r0, r0, #12
   201a8:	add	r3, r3, #1020	; 0x3fc
   201ac:	mov	r2, #0
   201b0:	str	ip, [lr]
   201b4:	mov	ip, #1
   201b8:	str	ip, [r1, #4]
   201bc:	ldr	r1, [r3, #4]!
   201c0:	cmp	r1, #0
   201c4:	strne	r2, [r1, #8]
   201c8:	cmp	r0, r3
   201cc:	add	r2, r2, #1
   201d0:	bne	201bc <mount@plt+0xe104>
   201d4:	ldr	r1, [pc, #256]	; 202dc <mount@plt+0xe224>
   201d8:	ldr	r0, [pc, #256]	; 202e0 <mount@plt+0xe228>
   201dc:	add	r1, pc, r1
   201e0:	add	r0, pc, r0
   201e4:	add	r1, r1, #1024	; 0x400
   201e8:	bl	2003c <mount@plt+0xdf84>
   201ec:	ldr	r0, [pc, #240]	; 202e4 <mount@plt+0xe22c>
   201f0:	add	r0, pc, r0
   201f4:	bl	11d1c <opendir@plt>
   201f8:	subs	r6, r0, #0
   201fc:	beq	202a4 <mount@plt+0xe1ec>
   20200:	ldr	r7, [pc, #224]	; 202e8 <mount@plt+0xe230>
   20204:	ldr	r8, [pc, #224]	; 202ec <mount@plt+0xe234>
   20208:	add	r7, pc, r7
   2020c:	add	r8, pc, r8
   20210:	add	r7, r7, #1024	; 0x400
   20214:	mov	r0, r6
   20218:	bl	11fb0 <readdir64@plt>
   2021c:	cmp	r0, #0
   20220:	beq	2029c <mount@plt+0xe1e4>
   20224:	ldrb	r3, [r0, #19]
   20228:	cmp	r3, #46	; 0x2e
   2022c:	beq	20214 <mount@plt+0xe15c>
   20230:	add	r5, r0, #19
   20234:	mov	r0, r5
   20238:	bl	11e00 <strlen@plt>
   2023c:	cmp	r0, #5
   20240:	bls	20214 <mount@plt+0xe15c>
   20244:	sub	r0, r0, #5
   20248:	add	r0, r5, r0
   2024c:	mov	r1, r8
   20250:	bl	11b0c <strcmp@plt>
   20254:	cmp	r0, #0
   20258:	bne	20214 <mount@plt+0xe15c>
   2025c:	ldr	r2, [pc, #140]	; 202f0 <mount@plt+0xe238>
   20260:	mov	r3, #4096	; 0x1000
   20264:	add	r2, pc, r2
   20268:	mov	r1, r3
   2026c:	stm	sp, {r2, r5}
   20270:	add	r5, sp, #12
   20274:	mov	r2, #1
   20278:	mov	r0, r5
   2027c:	bl	12088 <__snprintf_chk@plt>
   20280:	mov	r1, r7
   20284:	mov	r0, r5
   20288:	bl	2003c <mount@plt+0xdf84>
   2028c:	mov	r0, r6
   20290:	bl	11fb0 <readdir64@plt>
   20294:	cmp	r0, #0
   20298:	bne	20224 <mount@plt+0xe16c>
   2029c:	mov	r0, r6
   202a0:	bl	1207c <closedir@plt>
   202a4:	add	r3, sp, #4096	; 0x1000
   202a8:	add	r3, r3, #12
   202ac:	ldr	r2, [r3]
   202b0:	ldr	r3, [r4]
   202b4:	cmp	r2, r3
   202b8:	bne	202c8 <mount@plt+0xe210>
   202bc:	add	sp, sp, #4096	; 0x1000
   202c0:	add	sp, sp, #16
   202c4:	pop	{r4, r5, r6, r7, r8, pc}
   202c8:	bl	11c2c <__stack_chk_fail@plt>
   202cc:	andeq	fp, r1, r8, lsl #29
   202d0:	andeq	r0, r0, r8, lsl #4
   202d4:	andeq	ip, r1, r0, lsr #3
   202d8:	andeq	pc, r1, r0, asr #26
   202dc:	andeq	ip, r1, ip, asr #2
   202e0:	strdeq	sl, [r0], -ip
   202e4:	andeq	sl, r0, r4, lsl #10
   202e8:	andeq	ip, r1, r0, lsr #2
   202ec:	andeq	sl, r0, r8, lsr #9
   202f0:	andeq	sl, r0, ip, lsr #9
   202f4:	cmp	r0, #255	; 0xff
   202f8:	push	{r4, r5, r6, lr}
   202fc:	mov	r4, r0
   20300:	sub	sp, sp, #16
   20304:	mov	r5, r1
   20308:	bhi	20354 <mount@plt+0xe29c>
   2030c:	ldr	r6, [pc, #112]	; 20384 <mount@plt+0xe2cc>
   20310:	add	r6, pc, r6
   20314:	ldr	r0, [r6, r0, lsl #2]
   20318:	cmp	r0, #0
   2031c:	beq	20328 <mount@plt+0xe270>
   20320:	add	sp, sp, #16
   20324:	pop	{r4, r5, r6, pc}
   20328:	ldr	r3, [pc, #88]	; 20388 <mount@plt+0xe2d0>
   2032c:	add	r3, pc, r3
   20330:	ldr	r3, [r3]
   20334:	cmp	r3, #0
   20338:	bne	20354 <mount@plt+0xe29c>
   2033c:	str	r2, [sp, #12]
   20340:	bl	1fef0 <mount@plt+0xde38>
   20344:	ldr	r0, [r6, r4, lsl #2]
   20348:	ldr	r2, [sp, #12]
   2034c:	cmp	r0, #0
   20350:	bne	20320 <mount@plt+0xe268>
   20354:	ldr	r3, [pc, #48]	; 2038c <mount@plt+0xe2d4>
   20358:	mov	r1, r2
   2035c:	add	r3, pc, r3
   20360:	str	r3, [sp]
   20364:	str	r4, [sp, #4]
   20368:	mvn	r3, #0
   2036c:	mov	r2, #1
   20370:	mov	r0, r5
   20374:	bl	12088 <__snprintf_chk@plt>
   20378:	mov	r0, r5
   2037c:	add	sp, sp, #16
   20380:	pop	{r4, r5, r6, pc}
   20384:	andeq	ip, r1, r8, lsl r0
   20388:			; <UNDEFINED> instruction: 0x0001fbb4
   2038c:	andeq	r7, r0, r0, lsr #31
   20390:	ldr	r3, [pc, #304]	; 204c8 <mount@plt+0xe410>
   20394:	ldr	r2, [pc, #304]	; 204cc <mount@plt+0xe414>
   20398:	push	{r4, r5, r6, r7, r8, r9, lr}
   2039c:	add	r3, pc, r3
   203a0:	ldr	r4, [pc, #296]	; 204d0 <mount@plt+0xe418>
   203a4:	ldr	r7, [r3, r2]
   203a8:	add	r4, pc, r4
   203ac:	mov	r8, r0
   203b0:	ldr	r0, [r4, #8]
   203b4:	sub	sp, sp, #12
   203b8:	ldr	r3, [r7]
   203bc:	cmp	r0, #0
   203c0:	mov	r9, r1
   203c4:	str	r3, [sp, #4]
   203c8:	beq	203d8 <mount@plt+0xe320>
   203cc:	bl	11b0c <strcmp@plt>
   203d0:	cmp	r0, #0
   203d4:	beq	20454 <mount@plt+0xe39c>
   203d8:	ldr	r3, [pc, #244]	; 204d4 <mount@plt+0xe41c>
   203dc:	add	r3, pc, r3
   203e0:	ldr	r3, [r3]
   203e4:	cmp	r3, #0
   203e8:	beq	20460 <mount@plt+0xe3a8>
   203ec:	ldr	r6, [pc, #228]	; 204d8 <mount@plt+0xe420>
   203f0:	mov	r4, #0
   203f4:	add	r6, pc, r6
   203f8:	b	20408 <mount@plt+0xe350>
   203fc:	add	r4, r4, #1
   20400:	cmp	r4, #256	; 0x100
   20404:	beq	20468 <mount@plt+0xe3b0>
   20408:	ldr	r5, [r6], #4
   2040c:	cmp	r5, #0
   20410:	beq	203fc <mount@plt+0xe344>
   20414:	mov	r1, r9
   20418:	mov	r0, r5
   2041c:	bl	11b0c <strcmp@plt>
   20420:	cmp	r0, #0
   20424:	bne	203fc <mount@plt+0xe344>
   20428:	ldr	r3, [pc, #172]	; 204dc <mount@plt+0xe424>
   2042c:	str	r4, [r8]
   20430:	add	r3, pc, r3
   20434:	str	r5, [r3, #8]
   20438:	str	r4, [r3, #12]
   2043c:	ldr	r2, [sp, #4]
   20440:	ldr	r3, [r7]
   20444:	cmp	r2, r3
   20448:	bne	204c4 <mount@plt+0xe40c>
   2044c:	add	sp, sp, #12
   20450:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20454:	ldr	r3, [r4, #12]
   20458:	str	r3, [r8]
   2045c:	b	2043c <mount@plt+0xe384>
   20460:	bl	1fef0 <mount@plt+0xde38>
   20464:	b	203ec <mount@plt+0xe334>
   20468:	mov	r2, #0
   2046c:	mov	r1, sp
   20470:	mov	r0, r9
   20474:	bl	11df4 <strtoul@plt>
   20478:	ldr	r3, [pc, #96]	; 204e0 <mount@plt+0xe428>
   2047c:	ldr	r2, [sp]
   20480:	add	r3, pc, r3
   20484:	cmp	r2, r9
   20488:	cmpne	r2, #0
   2048c:	str	r0, [r3, #12]
   20490:	beq	204bc <mount@plt+0xe404>
   20494:	ldrb	r2, [r2]
   20498:	cmp	r0, #255	; 0xff
   2049c:	movls	r3, #0
   204a0:	movhi	r3, #1
   204a4:	cmp	r2, #0
   204a8:	movne	r3, #1
   204ac:	cmp	r3, #0
   204b0:	streq	r0, [r8]
   204b4:	moveq	r0, r3
   204b8:	beq	2043c <mount@plt+0xe384>
   204bc:	mvn	r0, #0
   204c0:	b	2043c <mount@plt+0xe384>
   204c4:	bl	11c2c <__stack_chk_fail@plt>
   204c8:	andeq	fp, r1, ip, asr ip
   204cc:	andeq	r0, r0, r8, lsl #4
   204d0:	andeq	pc, r1, r8, lsr fp	; <UNPREDICTABLE>
   204d4:	andeq	pc, r1, r4, lsl #22
   204d8:	andeq	fp, r1, r4, lsr pc
   204dc:			; <UNDEFINED> instruction: 0x0001fab0
   204e0:	andeq	pc, r1, r0, ror #20
   204e4:	cmp	r0, #255	; 0xff
   204e8:	push	{r4, r5, r6, lr}
   204ec:	mov	r4, r0
   204f0:	sub	sp, sp, #16
   204f4:	mov	r5, r1
   204f8:	bhi	2055c <mount@plt+0xe4a4>
   204fc:	ldr	r1, [pc, #136]	; 2058c <mount@plt+0xe4d4>
   20500:	add	r1, pc, r1
   20504:	add	r6, r1, r0, lsl #2
   20508:	ldr	r0, [r6, #2048]	; 0x800
   2050c:	cmp	r0, #0
   20510:	beq	2051c <mount@plt+0xe464>
   20514:	add	sp, sp, #16
   20518:	pop	{r4, r5, r6, pc}
   2051c:	ldr	r3, [pc, #108]	; 20590 <mount@plt+0xe4d8>
   20520:	add	r3, pc, r3
   20524:	ldr	r0, [r3, #16]
   20528:	cmp	r0, #0
   2052c:	bne	2055c <mount@plt+0xe4a4>
   20530:	ldr	r0, [pc, #92]	; 20594 <mount@plt+0xe4dc>
   20534:	mov	ip, #1
   20538:	add	r0, pc, r0
   2053c:	add	r1, r1, #2048	; 0x800
   20540:	str	r2, [sp, #12]
   20544:	str	ip, [r3, #16]
   20548:	bl	1fdf4 <mount@plt+0xdd3c>
   2054c:	ldr	r0, [r6, #2048]	; 0x800
   20550:	ldr	r2, [sp, #12]
   20554:	cmp	r0, #0
   20558:	bne	20514 <mount@plt+0xe45c>
   2055c:	ldr	r3, [pc, #52]	; 20598 <mount@plt+0xe4e0>
   20560:	mov	r1, r2
   20564:	add	r3, pc, r3
   20568:	str	r3, [sp]
   2056c:	str	r4, [sp, #4]
   20570:	mvn	r3, #0
   20574:	mov	r2, #1
   20578:	mov	r0, r5
   2057c:	bl	12088 <__snprintf_chk@plt>
   20580:	mov	r0, r5
   20584:	add	sp, sp, #16
   20588:	pop	{r4, r5, r6, pc}
   2058c:	andeq	fp, r1, r8, lsr #28
   20590:	andeq	pc, r1, r0, asr #19
   20594:	strdeq	sl, [r0], -r8
   20598:	andeq	sl, r0, r4, asr r5
   2059c:	ldr	r3, [pc, #336]	; 206f4 <mount@plt+0xe63c>
   205a0:	ldr	r2, [pc, #336]	; 206f8 <mount@plt+0xe640>
   205a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   205a8:	add	r3, pc, r3
   205ac:	ldr	r4, [pc, #328]	; 206fc <mount@plt+0xe644>
   205b0:	ldr	r8, [r3, r2]
   205b4:	add	r4, pc, r4
   205b8:	mov	r9, r0
   205bc:	ldr	r0, [r4, #20]
   205c0:	sub	sp, sp, #12
   205c4:	ldr	r3, [r8]
   205c8:	cmp	r0, #0
   205cc:	mov	r7, r1
   205d0:	str	r3, [sp, #4]
   205d4:	beq	205e4 <mount@plt+0xe52c>
   205d8:	bl	11b0c <strcmp@plt>
   205dc:	cmp	r0, #0
   205e0:	beq	20664 <mount@plt+0xe5ac>
   205e4:	ldr	r3, [pc, #276]	; 20700 <mount@plt+0xe648>
   205e8:	add	r3, pc, r3
   205ec:	ldr	r2, [r3, #16]
   205f0:	cmp	r2, #0
   205f4:	beq	20670 <mount@plt+0xe5b8>
   205f8:	ldr	r6, [pc, #260]	; 20704 <mount@plt+0xe64c>
   205fc:	mov	r4, #0
   20600:	add	r6, pc, r6
   20604:	add	r6, r6, #2048	; 0x800
   20608:	b	20618 <mount@plt+0xe560>
   2060c:	add	r4, r4, #1
   20610:	cmp	r4, #256	; 0x100
   20614:	beq	20694 <mount@plt+0xe5dc>
   20618:	ldr	r5, [r6], #4
   2061c:	cmp	r5, #0
   20620:	beq	2060c <mount@plt+0xe554>
   20624:	mov	r1, r7
   20628:	mov	r0, r5
   2062c:	bl	11b0c <strcmp@plt>
   20630:	cmp	r0, #0
   20634:	bne	2060c <mount@plt+0xe554>
   20638:	ldr	r3, [pc, #200]	; 20708 <mount@plt+0xe650>
   2063c:	str	r4, [r9]
   20640:	add	r3, pc, r3
   20644:	str	r5, [r3, #20]
   20648:	str	r4, [r3, #24]
   2064c:	ldr	r2, [sp, #4]
   20650:	ldr	r3, [r8]
   20654:	cmp	r2, r3
   20658:	bne	206f0 <mount@plt+0xe638>
   2065c:	add	sp, sp, #12
   20660:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20664:	ldr	r3, [r4, #24]
   20668:	str	r3, [r9]
   2066c:	b	2064c <mount@plt+0xe594>
   20670:	ldr	r1, [pc, #148]	; 2070c <mount@plt+0xe654>
   20674:	ldr	r0, [pc, #148]	; 20710 <mount@plt+0xe658>
   20678:	add	r1, pc, r1
   2067c:	mov	r2, #1
   20680:	add	r1, r1, #2048	; 0x800
   20684:	add	r0, pc, r0
   20688:	str	r2, [r3, #16]
   2068c:	bl	1fdf4 <mount@plt+0xdd3c>
   20690:	b	205f8 <mount@plt+0xe540>
   20694:	mov	r2, #0
   20698:	mov	r1, sp
   2069c:	mov	r0, r7
   206a0:	bl	11df4 <strtoul@plt>
   206a4:	ldr	r3, [pc, #104]	; 20714 <mount@plt+0xe65c>
   206a8:	ldr	r2, [sp]
   206ac:	add	r3, pc, r3
   206b0:	cmp	r2, r7
   206b4:	cmpne	r2, #0
   206b8:	str	r0, [r3, #24]
   206bc:	beq	206e8 <mount@plt+0xe630>
   206c0:	ldrb	r2, [r2]
   206c4:	cmp	r0, #255	; 0xff
   206c8:	movls	r3, #0
   206cc:	movhi	r3, #1
   206d0:	cmp	r2, #0
   206d4:	movne	r3, #1
   206d8:	cmp	r3, #0
   206dc:	streq	r0, [r9]
   206e0:	moveq	r0, r3
   206e4:	beq	2064c <mount@plt+0xe594>
   206e8:	mvn	r0, #0
   206ec:	b	2064c <mount@plt+0xe594>
   206f0:	bl	11c2c <__stack_chk_fail@plt>
   206f4:	andeq	fp, r1, r0, asr sl
   206f8:	andeq	r0, r0, r8, lsl #4
   206fc:	andeq	pc, r1, ip, lsr #18
   20700:	strdeq	pc, [r1], -r8
   20704:	andeq	fp, r1, r8, lsr #26
   20708:	andeq	pc, r1, r0, lsr #17
   2070c:			; <UNDEFINED> instruction: 0x0001bcb0
   20710:	andeq	sl, r0, ip, lsr #1
   20714:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   20718:	cmp	r0, #255	; 0xff
   2071c:	push	{r4, r5, r6, lr}
   20720:	mov	r4, r0
   20724:	sub	sp, sp, #16
   20728:	mov	r5, r1
   2072c:	bhi	20790 <mount@plt+0xe6d8>
   20730:	ldr	r1, [pc, #136]	; 207c0 <mount@plt+0xe708>
   20734:	add	r1, pc, r1
   20738:	add	r6, r1, r0, lsl #2
   2073c:	ldr	r0, [r6, #3072]	; 0xc00
   20740:	cmp	r0, #0
   20744:	beq	20750 <mount@plt+0xe698>
   20748:	add	sp, sp, #16
   2074c:	pop	{r4, r5, r6, pc}
   20750:	ldr	r3, [pc, #108]	; 207c4 <mount@plt+0xe70c>
   20754:	add	r3, pc, r3
   20758:	ldr	r0, [r3, #28]
   2075c:	cmp	r0, #0
   20760:	bne	20790 <mount@plt+0xe6d8>
   20764:	ldr	r0, [pc, #92]	; 207c8 <mount@plt+0xe710>
   20768:	mov	ip, #1
   2076c:	add	r0, pc, r0
   20770:	add	r1, r1, #3072	; 0xc00
   20774:	str	r2, [sp, #12]
   20778:	str	ip, [r3, #28]
   2077c:	bl	1fdf4 <mount@plt+0xdd3c>
   20780:	ldr	r0, [r6, #3072]	; 0xc00
   20784:	ldr	r2, [sp, #12]
   20788:	cmp	r0, #0
   2078c:	bne	20748 <mount@plt+0xe690>
   20790:	ldr	r3, [pc, #52]	; 207cc <mount@plt+0xe714>
   20794:	mov	r1, r2
   20798:	add	r3, pc, r3
   2079c:	str	r3, [sp]
   207a0:	str	r4, [sp, #4]
   207a4:	mvn	r3, #0
   207a8:	mov	r2, #1
   207ac:	mov	r0, r5
   207b0:	bl	12088 <__snprintf_chk@plt>
   207b4:	mov	r0, r5
   207b8:	add	sp, sp, #16
   207bc:	pop	{r4, r5, r6, pc}
   207c0:	strdeq	fp, [r1], -r4
   207c4:	andeq	pc, r1, ip, lsl #15
   207c8:	ldrdeq	r9, [r0], -ip
   207cc:	andeq	sl, r0, r0, lsr #6
   207d0:	ldr	r3, [pc, #336]	; 20928 <mount@plt+0xe870>
   207d4:	ldr	r2, [pc, #336]	; 2092c <mount@plt+0xe874>
   207d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   207dc:	add	r3, pc, r3
   207e0:	ldr	r4, [pc, #328]	; 20930 <mount@plt+0xe878>
   207e4:	ldr	r8, [r3, r2]
   207e8:	add	r4, pc, r4
   207ec:	mov	r9, r0
   207f0:	ldr	r0, [r4, #32]
   207f4:	sub	sp, sp, #12
   207f8:	ldr	r3, [r8]
   207fc:	cmp	r0, #0
   20800:	mov	r7, r1
   20804:	str	r3, [sp, #4]
   20808:	beq	20818 <mount@plt+0xe760>
   2080c:	bl	11b0c <strcmp@plt>
   20810:	cmp	r0, #0
   20814:	beq	20898 <mount@plt+0xe7e0>
   20818:	ldr	r3, [pc, #276]	; 20934 <mount@plt+0xe87c>
   2081c:	add	r3, pc, r3
   20820:	ldr	r2, [r3, #28]
   20824:	cmp	r2, #0
   20828:	beq	208a4 <mount@plt+0xe7ec>
   2082c:	ldr	r6, [pc, #260]	; 20938 <mount@plt+0xe880>
   20830:	mov	r4, #0
   20834:	add	r6, pc, r6
   20838:	add	r6, r6, #3072	; 0xc00
   2083c:	b	2084c <mount@plt+0xe794>
   20840:	add	r4, r4, #1
   20844:	cmp	r4, #256	; 0x100
   20848:	beq	208c8 <mount@plt+0xe810>
   2084c:	ldr	r5, [r6], #4
   20850:	cmp	r5, #0
   20854:	beq	20840 <mount@plt+0xe788>
   20858:	mov	r1, r7
   2085c:	mov	r0, r5
   20860:	bl	11b0c <strcmp@plt>
   20864:	cmp	r0, #0
   20868:	bne	20840 <mount@plt+0xe788>
   2086c:	ldr	r3, [pc, #200]	; 2093c <mount@plt+0xe884>
   20870:	str	r4, [r9]
   20874:	add	r3, pc, r3
   20878:	str	r5, [r3, #32]
   2087c:	str	r4, [r3, #36]	; 0x24
   20880:	ldr	r2, [sp, #4]
   20884:	ldr	r3, [r8]
   20888:	cmp	r2, r3
   2088c:	bne	20924 <mount@plt+0xe86c>
   20890:	add	sp, sp, #12
   20894:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20898:	ldr	r3, [r4, #36]	; 0x24
   2089c:	str	r3, [r9]
   208a0:	b	20880 <mount@plt+0xe7c8>
   208a4:	ldr	r1, [pc, #148]	; 20940 <mount@plt+0xe888>
   208a8:	ldr	r0, [pc, #148]	; 20944 <mount@plt+0xe88c>
   208ac:	add	r1, pc, r1
   208b0:	mov	r2, #1
   208b4:	add	r1, r1, #3072	; 0xc00
   208b8:	add	r0, pc, r0
   208bc:	str	r2, [r3, #28]
   208c0:	bl	1fdf4 <mount@plt+0xdd3c>
   208c4:	b	2082c <mount@plt+0xe774>
   208c8:	mov	r2, #0
   208cc:	mov	r1, sp
   208d0:	mov	r0, r7
   208d4:	bl	11df4 <strtoul@plt>
   208d8:	ldr	r3, [pc, #104]	; 20948 <mount@plt+0xe890>
   208dc:	ldr	r2, [sp]
   208e0:	add	r3, pc, r3
   208e4:	cmp	r2, r7
   208e8:	cmpne	r2, #0
   208ec:	str	r0, [r3, #36]	; 0x24
   208f0:	beq	2091c <mount@plt+0xe864>
   208f4:	ldrb	r2, [r2]
   208f8:	cmp	r0, #255	; 0xff
   208fc:	movls	r3, #0
   20900:	movhi	r3, #1
   20904:	cmp	r2, #0
   20908:	movne	r3, #1
   2090c:	cmp	r3, #0
   20910:	streq	r0, [r9]
   20914:	moveq	r0, r3
   20918:	beq	20880 <mount@plt+0xe7c8>
   2091c:	mvn	r0, #0
   20920:	b	20880 <mount@plt+0xe7c8>
   20924:	bl	11c2c <__stack_chk_fail@plt>
   20928:	andeq	fp, r1, ip, lsl r8
   2092c:	andeq	r0, r0, r8, lsl #4
   20930:	strdeq	pc, [r1], -r8
   20934:	andeq	pc, r1, r4, asr #13
   20938:	strdeq	fp, [r1], -r4
   2093c:	andeq	pc, r1, ip, ror #12
   20940:	andeq	fp, r1, ip, ror sl
   20944:	muleq	r0, r0, lr
   20948:	andeq	pc, r1, r0, lsl #12
   2094c:	ldr	r3, [pc, #168]	; 209fc <mount@plt+0xe944>
   20950:	push	{r4, r5, r6, lr}
   20954:	add	r3, pc, r3
   20958:	sub	sp, sp, #8
   2095c:	ldr	r3, [r3, #4]
   20960:	mov	r4, r0
   20964:	cmp	r3, #0
   20968:	mov	r5, r1
   2096c:	mov	r6, r2
   20970:	beq	209f4 <mount@plt+0xe93c>
   20974:	ldr	r3, [pc, #132]	; 20a00 <mount@plt+0xe948>
   20978:	uxtb	r0, r4
   2097c:	add	r3, pc, r3
   20980:	add	r3, r3, r0, lsl #2
   20984:	ldr	r3, [r3, #1024]	; 0x400
   20988:	cmp	r3, #0
   2098c:	beq	209b8 <mount@plt+0xe900>
   20990:	ldr	r0, [r3, #8]
   20994:	cmp	r4, r0
   20998:	bne	209ac <mount@plt+0xe8f4>
   2099c:	b	209e8 <mount@plt+0xe930>
   209a0:	ldr	ip, [r3, #8]
   209a4:	cmp	ip, r4
   209a8:	beq	209e8 <mount@plt+0xe930>
   209ac:	ldr	r3, [r3]
   209b0:	cmp	r3, #0
   209b4:	bne	209a0 <mount@plt+0xe8e8>
   209b8:	ldr	r3, [pc, #68]	; 20a04 <mount@plt+0xe94c>
   209bc:	str	r4, [sp, #4]
   209c0:	add	r3, pc, r3
   209c4:	str	r3, [sp]
   209c8:	mov	r1, r6
   209cc:	mvn	r3, #0
   209d0:	mov	r2, #1
   209d4:	mov	r0, r5
   209d8:	bl	12088 <__snprintf_chk@plt>
   209dc:	mov	r0, r5
   209e0:	add	sp, sp, #8
   209e4:	pop	{r4, r5, r6, pc}
   209e8:	ldr	r0, [r3, #4]
   209ec:	add	sp, sp, #8
   209f0:	pop	{r4, r5, r6, pc}
   209f4:	bl	20168 <mount@plt+0xe0b0>
   209f8:	b	20974 <mount@plt+0xe8bc>
   209fc:	andeq	pc, r1, ip, lsl #11
   20a00:	andeq	fp, r1, ip, lsr #19
   20a04:	andeq	r7, r0, ip, lsr r9
   20a08:	ldr	r3, [pc, #296]	; 20b38 <mount@plt+0xea80>
   20a0c:	ldr	r2, [pc, #296]	; 20b3c <mount@plt+0xea84>
   20a10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20a14:	add	r3, pc, r3
   20a18:	ldr	r4, [pc, #288]	; 20b40 <mount@plt+0xea88>
   20a1c:	ldr	r8, [r3, r2]
   20a20:	add	r4, pc, r4
   20a24:	mov	r9, r0
   20a28:	ldr	r0, [r4, #40]	; 0x28
   20a2c:	sub	sp, sp, #8
   20a30:	ldr	r3, [r8]
   20a34:	cmp	r0, #0
   20a38:	mov	r6, r1
   20a3c:	str	r3, [sp, #4]
   20a40:	beq	20a50 <mount@plt+0xe998>
   20a44:	bl	11b0c <strcmp@plt>
   20a48:	cmp	r0, #0
   20a4c:	beq	20b18 <mount@plt+0xea60>
   20a50:	ldr	r3, [pc, #236]	; 20b44 <mount@plt+0xea8c>
   20a54:	add	r3, pc, r3
   20a58:	ldr	r3, [r3, #4]
   20a5c:	cmp	r3, #0
   20a60:	beq	20b24 <mount@plt+0xea6c>
   20a64:	ldr	r7, [pc, #220]	; 20b48 <mount@plt+0xea90>
   20a68:	add	r7, pc, r7
   20a6c:	add	r7, r7, #1024	; 0x400
   20a70:	add	sl, r7, #1024	; 0x400
   20a74:	ldr	r4, [r7], #4
   20a78:	cmp	r4, #0
   20a7c:	bne	20a90 <mount@plt+0xe9d8>
   20a80:	b	20ad8 <mount@plt+0xea20>
   20a84:	ldr	r4, [r4]
   20a88:	cmp	r4, #0
   20a8c:	beq	20ad8 <mount@plt+0xea20>
   20a90:	ldr	r5, [r4, #4]
   20a94:	mov	r1, r6
   20a98:	mov	r0, r5
   20a9c:	bl	11b0c <strcmp@plt>
   20aa0:	cmp	r0, #0
   20aa4:	bne	20a84 <mount@plt+0xe9cc>
   20aa8:	ldr	r3, [pc, #156]	; 20b4c <mount@plt+0xea94>
   20aac:	ldr	r2, [r4, #8]
   20ab0:	add	r3, pc, r3
   20ab4:	str	r2, [r9]
   20ab8:	str	r5, [r3, #40]	; 0x28
   20abc:	str	r2, [r3, #44]	; 0x2c
   20ac0:	ldr	r2, [sp, #4]
   20ac4:	ldr	r3, [r8]
   20ac8:	cmp	r2, r3
   20acc:	bne	20b34 <mount@plt+0xea7c>
   20ad0:	add	sp, sp, #8
   20ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20ad8:	cmp	sl, r7
   20adc:	bne	20a74 <mount@plt+0xe9bc>
   20ae0:	mov	r2, #0
   20ae4:	mov	r1, sp
   20ae8:	mov	r0, r6
   20aec:	bl	11df4 <strtoul@plt>
   20af0:	ldr	r3, [sp]
   20af4:	cmp	r3, r6
   20af8:	cmpne	r3, #0
   20afc:	beq	20b2c <mount@plt+0xea74>
   20b00:	ldrb	r3, [r3]
   20b04:	cmp	r3, #0
   20b08:	bne	20b2c <mount@plt+0xea74>
   20b0c:	str	r0, [r9]
   20b10:	mov	r0, r3
   20b14:	b	20ac0 <mount@plt+0xea08>
   20b18:	ldr	r3, [r4, #44]	; 0x2c
   20b1c:	str	r3, [r9]
   20b20:	b	20ac0 <mount@plt+0xea08>
   20b24:	bl	20168 <mount@plt+0xe0b0>
   20b28:	b	20a64 <mount@plt+0xe9ac>
   20b2c:	mvn	r0, #0
   20b30:	b	20ac0 <mount@plt+0xea08>
   20b34:	bl	11c2c <__stack_chk_fail@plt>
   20b38:	andeq	fp, r1, r4, ror #11
   20b3c:	andeq	r0, r0, r8, lsl #4
   20b40:	andeq	pc, r1, r0, asr #9
   20b44:	andeq	pc, r1, ip, lsl #9
   20b48:	andeq	fp, r1, r0, asr #17
   20b4c:	andeq	pc, r1, r0, lsr r4	; <UNPREDICTABLE>
   20b50:	cmp	r0, #255	; 0xff
   20b54:	push	{r4, r5, r6, lr}
   20b58:	mov	r4, r0
   20b5c:	sub	sp, sp, #16
   20b60:	mov	r5, r1
   20b64:	bhi	20bcc <mount@plt+0xeb14>
   20b68:	ldr	r1, [pc, #156]	; 20c0c <mount@plt+0xeb54>
   20b6c:	add	r1, pc, r1
   20b70:	add	r6, r1, r0, lsl #2
   20b74:	ldr	r0, [r6, #-4088]	; 0xfffff008
   20b78:	cmp	r0, #0
   20b7c:	beq	20b88 <mount@plt+0xead0>
   20b80:	add	sp, sp, #16
   20b84:	pop	{r4, r5, r6, pc}
   20b88:	ldr	r3, [pc, #128]	; 20c10 <mount@plt+0xeb58>
   20b8c:	add	r3, pc, r3
   20b90:	ldr	r0, [r3, #48]	; 0x30
   20b94:	cmp	r0, #0
   20b98:	beq	20bd8 <mount@plt+0xeb20>
   20b9c:	ldr	r3, [pc, #112]	; 20c14 <mount@plt+0xeb5c>
   20ba0:	add	r3, pc, r3
   20ba4:	mov	r1, r2
   20ba8:	str	r3, [sp]
   20bac:	str	r4, [sp, #4]
   20bb0:	mvn	r3, #0
   20bb4:	mov	r2, #1
   20bb8:	mov	r0, r5
   20bbc:	bl	12088 <__snprintf_chk@plt>
   20bc0:	mov	r0, r5
   20bc4:	add	sp, sp, #16
   20bc8:	pop	{r4, r5, r6, pc}
   20bcc:	ldr	r3, [pc, #68]	; 20c18 <mount@plt+0xeb60>
   20bd0:	add	r3, pc, r3
   20bd4:	b	20ba4 <mount@plt+0xeaec>
   20bd8:	ldr	r0, [pc, #60]	; 20c1c <mount@plt+0xeb64>
   20bdc:	sub	r1, r1, #4080	; 0xff0
   20be0:	mov	ip, #1
   20be4:	add	r0, pc, r0
   20be8:	sub	r1, r1, #8
   20bec:	str	r2, [sp, #12]
   20bf0:	str	ip, [r3, #48]	; 0x30
   20bf4:	bl	1fdf4 <mount@plt+0xdd3c>
   20bf8:	ldr	r0, [r6, #-4088]	; 0xfffff008
   20bfc:	ldr	r2, [sp, #12]
   20c00:	cmp	r0, #0
   20c04:	beq	20b9c <mount@plt+0xeae4>
   20c08:	b	20b80 <mount@plt+0xeac8>
   20c0c:			; <UNDEFINED> instruction: 0x0001d7b4
   20c10:	andeq	pc, r1, r4, asr r3	; <UNPREDICTABLE>
   20c14:	andeq	r9, r0, r0, asr #23
   20c18:	andeq	r9, r0, r8, ror #29
   20c1c:	andeq	r9, r0, r4, lsl #23
   20c20:	ldr	r3, [pc, #344]	; 20d80 <mount@plt+0xecc8>
   20c24:	ldr	r2, [pc, #344]	; 20d84 <mount@plt+0xeccc>
   20c28:	push	{r4, r5, r6, r7, r8, r9, lr}
   20c2c:	add	r3, pc, r3
   20c30:	ldr	r4, [pc, #336]	; 20d88 <mount@plt+0xecd0>
   20c34:	ldr	r8, [r3, r2]
   20c38:	add	r4, pc, r4
   20c3c:	mov	r9, r0
   20c40:	ldr	r0, [r4, #52]	; 0x34
   20c44:	sub	sp, sp, #12
   20c48:	ldr	r3, [r8]
   20c4c:	cmp	r0, #0
   20c50:	mov	r7, r1
   20c54:	str	r3, [sp, #4]
   20c58:	beq	20c68 <mount@plt+0xebb0>
   20c5c:	bl	11b0c <strcmp@plt>
   20c60:	cmp	r0, #0
   20c64:	beq	20cec <mount@plt+0xec34>
   20c68:	ldr	r3, [pc, #284]	; 20d8c <mount@plt+0xecd4>
   20c6c:	add	r3, pc, r3
   20c70:	ldr	r2, [r3, #48]	; 0x30
   20c74:	cmp	r2, #0
   20c78:	beq	20cf8 <mount@plt+0xec40>
   20c7c:	ldr	r6, [pc, #268]	; 20d90 <mount@plt+0xecd8>
   20c80:	mov	r4, #0
   20c84:	add	r6, pc, r6
   20c88:	sub	r6, r6, #4080	; 0xff0
   20c8c:	sub	r6, r6, #8
   20c90:	b	20ca0 <mount@plt+0xebe8>
   20c94:	add	r4, r4, #1
   20c98:	cmp	r4, #256	; 0x100
   20c9c:	beq	20d20 <mount@plt+0xec68>
   20ca0:	ldr	r5, [r6], #4
   20ca4:	cmp	r5, #0
   20ca8:	beq	20c94 <mount@plt+0xebdc>
   20cac:	mov	r1, r7
   20cb0:	mov	r0, r5
   20cb4:	bl	11b0c <strcmp@plt>
   20cb8:	cmp	r0, #0
   20cbc:	bne	20c94 <mount@plt+0xebdc>
   20cc0:	ldr	r3, [pc, #204]	; 20d94 <mount@plt+0xecdc>
   20cc4:	str	r4, [r9]
   20cc8:	add	r3, pc, r3
   20ccc:	str	r5, [r3, #52]	; 0x34
   20cd0:	str	r4, [r3, #56]	; 0x38
   20cd4:	ldr	r2, [sp, #4]
   20cd8:	ldr	r3, [r8]
   20cdc:	cmp	r2, r3
   20ce0:	bne	20d7c <mount@plt+0xecc4>
   20ce4:	add	sp, sp, #12
   20ce8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20cec:	ldr	r3, [r4, #56]	; 0x38
   20cf0:	str	r3, [r9]
   20cf4:	b	20cd4 <mount@plt+0xec1c>
   20cf8:	ldr	r1, [pc, #152]	; 20d98 <mount@plt+0xece0>
   20cfc:	ldr	r0, [pc, #152]	; 20d9c <mount@plt+0xece4>
   20d00:	add	r1, pc, r1
   20d04:	sub	r1, r1, #4080	; 0xff0
   20d08:	mov	r2, #1
   20d0c:	sub	r1, r1, #8
   20d10:	add	r0, pc, r0
   20d14:	str	r2, [r3, #48]	; 0x30
   20d18:	bl	1fdf4 <mount@plt+0xdd3c>
   20d1c:	b	20c7c <mount@plt+0xebc4>
   20d20:	mov	r2, #16
   20d24:	mov	r1, sp
   20d28:	mov	r0, r7
   20d2c:	bl	11df4 <strtoul@plt>
   20d30:	ldr	r3, [pc, #104]	; 20da0 <mount@plt+0xece8>
   20d34:	ldr	r2, [sp]
   20d38:	add	r3, pc, r3
   20d3c:	cmp	r2, r7
   20d40:	cmpne	r2, #0
   20d44:	str	r0, [r3, #56]	; 0x38
   20d48:	beq	20d74 <mount@plt+0xecbc>
   20d4c:	ldrb	r2, [r2]
   20d50:	cmp	r0, #255	; 0xff
   20d54:	movls	r3, #0
   20d58:	movhi	r3, #1
   20d5c:	cmp	r2, #0
   20d60:	movne	r3, #1
   20d64:	cmp	r3, #0
   20d68:	streq	r0, [r9]
   20d6c:	moveq	r0, r3
   20d70:	beq	20cd4 <mount@plt+0xec1c>
   20d74:	mvn	r0, #0
   20d78:	b	20cd4 <mount@plt+0xec1c>
   20d7c:	bl	11c2c <__stack_chk_fail@plt>
   20d80:	andeq	fp, r1, ip, asr #7
   20d84:	andeq	r0, r0, r8, lsl #4
   20d88:	andeq	pc, r1, r8, lsr #5
   20d8c:	andeq	pc, r1, r4, ror r2	; <UNPREDICTABLE>
   20d90:	muleq	r1, ip, r6
   20d94:	andeq	pc, r1, r8, lsl r2	; <UNPREDICTABLE>
   20d98:	andeq	sp, r1, r0, lsr #12
   20d9c:	andeq	r9, r0, r8, asr sl
   20da0:	andeq	pc, r1, r8, lsr #3
   20da4:	ldr	r3, [pc, #344]	; 20f04 <mount@plt+0xee4c>
   20da8:	ldr	r2, [pc, #344]	; 20f08 <mount@plt+0xee50>
   20dac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20db0:	add	r3, pc, r3
   20db4:	ldr	r4, [pc, #336]	; 20f0c <mount@plt+0xee54>
   20db8:	ldr	r7, [r3, r2]
   20dbc:	add	r4, pc, r4
   20dc0:	mov	r8, r0
   20dc4:	ldr	r0, [r4, #60]	; 0x3c
   20dc8:	sub	sp, sp, #8
   20dcc:	ldr	r3, [r7]
   20dd0:	cmp	r0, #0
   20dd4:	mov	r6, r1
   20dd8:	str	r3, [sp, #4]
   20ddc:	beq	20dec <mount@plt+0xed34>
   20de0:	bl	11b0c <strcmp@plt>
   20de4:	cmp	r0, #0
   20de8:	beq	20ec4 <mount@plt+0xee0c>
   20dec:	ldr	r3, [pc, #284]	; 20f10 <mount@plt+0xee58>
   20df0:	add	r3, pc, r3
   20df4:	ldr	r2, [r3, #68]	; 0x44
   20df8:	cmp	r2, #0
   20dfc:	beq	20ed0 <mount@plt+0xee18>
   20e00:	ldr	sl, [pc, #268]	; 20f14 <mount@plt+0xee5c>
   20e04:	add	sl, pc, sl
   20e08:	sub	sl, sl, #3056	; 0xbf0
   20e0c:	sub	r9, sl, #8
   20e10:	add	sl, sl, #1016	; 0x3f8
   20e14:	ldr	r4, [r9], #4
   20e18:	cmp	r4, #0
   20e1c:	bne	20e30 <mount@plt+0xed78>
   20e20:	b	20e78 <mount@plt+0xedc0>
   20e24:	ldr	r4, [r4]
   20e28:	cmp	r4, #0
   20e2c:	beq	20e78 <mount@plt+0xedc0>
   20e30:	ldr	r5, [r4, #4]
   20e34:	mov	r1, r6
   20e38:	mov	r0, r5
   20e3c:	bl	11b0c <strcmp@plt>
   20e40:	cmp	r0, #0
   20e44:	bne	20e24 <mount@plt+0xed6c>
   20e48:	ldr	r3, [pc, #200]	; 20f18 <mount@plt+0xee60>
   20e4c:	ldr	r2, [r4, #8]
   20e50:	add	r3, pc, r3
   20e54:	str	r2, [r8]
   20e58:	str	r5, [r3, #60]	; 0x3c
   20e5c:	str	r2, [r3, #64]	; 0x40
   20e60:	ldr	r2, [sp, #4]
   20e64:	ldr	r3, [r7]
   20e68:	cmp	r2, r3
   20e6c:	bne	20f00 <mount@plt+0xee48>
   20e70:	add	sp, sp, #8
   20e74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20e78:	cmp	sl, r9
   20e7c:	bne	20e14 <mount@plt+0xed5c>
   20e80:	mov	r2, #0
   20e84:	mov	r1, sp
   20e88:	mov	r0, r6
   20e8c:	bl	11b18 <strtol@plt>
   20e90:	ldr	r3, [sp]
   20e94:	cmp	r3, r6
   20e98:	cmpne	r3, #0
   20e9c:	beq	20ef8 <mount@plt+0xee40>
   20ea0:	ldrb	r3, [r3]
   20ea4:	cmp	r3, #0
   20ea8:	lsreq	r3, r0, #31
   20eac:	movne	r3, #1
   20eb0:	cmp	r3, #0
   20eb4:	bne	20ef8 <mount@plt+0xee40>
   20eb8:	str	r0, [r8]
   20ebc:	mov	r0, r3
   20ec0:	b	20e60 <mount@plt+0xeda8>
   20ec4:	ldr	r3, [r4, #64]	; 0x40
   20ec8:	str	r3, [r8]
   20ecc:	b	20e60 <mount@plt+0xeda8>
   20ed0:	ldr	r1, [pc, #68]	; 20f1c <mount@plt+0xee64>
   20ed4:	ldr	r0, [pc, #68]	; 20f20 <mount@plt+0xee68>
   20ed8:	add	r1, pc, r1
   20edc:	sub	r1, r1, #3056	; 0xbf0
   20ee0:	mov	r2, #1
   20ee4:	sub	r1, r1, #8
   20ee8:	add	r0, pc, r0
   20eec:	str	r2, [r3, #68]	; 0x44
   20ef0:	bl	2003c <mount@plt+0xdf84>
   20ef4:	b	20e00 <mount@plt+0xed48>
   20ef8:	mvn	r0, #0
   20efc:	b	20e60 <mount@plt+0xeda8>
   20f00:	bl	11c2c <__stack_chk_fail@plt>
   20f04:	andeq	fp, r1, r8, asr #4
   20f08:	andeq	r0, r0, r8, lsl #4
   20f0c:	andeq	pc, r1, r4, lsr #2
   20f10:	strdeq	pc, [r1], -r0
   20f14:	andeq	sp, r1, ip, lsl r5
   20f18:	muleq	r1, r0, r0
   20f1c:	andeq	sp, r1, r8, asr #8
   20f20:	muleq	r0, ip, r8
   20f24:	ldr	r3, [pc, #208]	; 20ffc <mount@plt+0xef44>
   20f28:	push	{r4, r5, r6, lr}
   20f2c:	add	r3, pc, r3
   20f30:	mov	r5, r1
   20f34:	ldr	r1, [r3, #68]	; 0x44
   20f38:	sub	sp, sp, #8
   20f3c:	cmp	r1, #0
   20f40:	mov	r4, r0
   20f44:	mov	r6, r2
   20f48:	beq	20fd4 <mount@plt+0xef1c>
   20f4c:	ldr	r3, [pc, #172]	; 21000 <mount@plt+0xef48>
   20f50:	add	r3, pc, r3
   20f54:	sub	r3, r3, #3056	; 0xbf0
   20f58:	sub	ip, r3, #8
   20f5c:	add	r0, r3, #1016	; 0x3f8
   20f60:	ldr	r3, [ip], #4
   20f64:	cmp	r3, #0
   20f68:	beq	20f94 <mount@plt+0xeedc>
   20f6c:	ldr	r1, [r3, #8]
   20f70:	cmp	r4, r1
   20f74:	bne	20f88 <mount@plt+0xeed0>
   20f78:	b	20fc8 <mount@plt+0xef10>
   20f7c:	ldr	r1, [r3, #8]
   20f80:	cmp	r1, r4
   20f84:	beq	20fc8 <mount@plt+0xef10>
   20f88:	ldr	r3, [r3]
   20f8c:	cmp	r3, #0
   20f90:	bne	20f7c <mount@plt+0xeec4>
   20f94:	cmp	ip, r0
   20f98:	bne	20f60 <mount@plt+0xeea8>
   20f9c:	ldr	r3, [pc, #96]	; 21004 <mount@plt+0xef4c>
   20fa0:	str	r4, [sp, #4]
   20fa4:	add	r3, pc, r3
   20fa8:	str	r3, [sp]
   20fac:	mov	r1, r6
   20fb0:	mvn	r3, #0
   20fb4:	mov	r2, #1
   20fb8:	mov	r0, r5
   20fbc:	bl	12088 <__snprintf_chk@plt>
   20fc0:	mov	r0, r5
   20fc4:	b	20fcc <mount@plt+0xef14>
   20fc8:	ldr	r0, [r3, #4]
   20fcc:	add	sp, sp, #8
   20fd0:	pop	{r4, r5, r6, pc}
   20fd4:	ldr	r1, [pc, #44]	; 21008 <mount@plt+0xef50>
   20fd8:	ldr	r0, [pc, #44]	; 2100c <mount@plt+0xef54>
   20fdc:	add	r1, pc, r1
   20fe0:	sub	r1, r1, #3056	; 0xbf0
   20fe4:	mov	r2, #1
   20fe8:	sub	r1, r1, #8
   20fec:	add	r0, pc, r0
   20ff0:	str	r2, [r3, #68]	; 0x44
   20ff4:	bl	2003c <mount@plt+0xdf84>
   20ff8:	b	20f4c <mount@plt+0xee94>
   20ffc:			; <UNDEFINED> instruction: 0x0001efb4
   21000:	ldrdeq	sp, [r1], -r0
   21004:	andeq	r9, r0, r4, lsl fp
   21008:	andeq	sp, r1, r4, asr #6
   2100c:	muleq	r0, r8, r7
   21010:	cmp	r0, #255	; 0xff
   21014:	push	{r4, r5, r6, lr}
   21018:	mov	r4, r0
   2101c:	sub	sp, sp, #8
   21020:	mov	r5, r1
   21024:	mov	r6, r2
   21028:	bhi	21060 <mount@plt+0xefa8>
   2102c:	ldr	r3, [pc, #132]	; 210b8 <mount@plt+0xf000>
   21030:	add	r3, pc, r3
   21034:	ldr	r1, [r3, #72]	; 0x48
   21038:	cmp	r1, #0
   2103c:	beq	21090 <mount@plt+0xefd8>
   21040:	ldr	r3, [pc, #116]	; 210bc <mount@plt+0xf004>
   21044:	add	r3, pc, r3
   21048:	add	r3, r3, r4, lsl #2
   2104c:	ldr	r0, [r3, #-2040]	; 0xfffff808
   21050:	cmp	r0, #0
   21054:	beq	21060 <mount@plt+0xefa8>
   21058:	add	sp, sp, #8
   2105c:	pop	{r4, r5, r6, pc}
   21060:	ldr	r3, [pc, #88]	; 210c0 <mount@plt+0xf008>
   21064:	str	r4, [sp, #4]
   21068:	add	r3, pc, r3
   2106c:	str	r3, [sp]
   21070:	mov	r1, r6
   21074:	mvn	r3, #0
   21078:	mov	r2, #1
   2107c:	mov	r0, r5
   21080:	bl	12088 <__snprintf_chk@plt>
   21084:	mov	r0, r5
   21088:	add	sp, sp, #8
   2108c:	pop	{r4, r5, r6, pc}
   21090:	ldr	r1, [pc, #44]	; 210c4 <mount@plt+0xf00c>
   21094:	ldr	r0, [pc, #44]	; 210c8 <mount@plt+0xf010>
   21098:	add	r1, pc, r1
   2109c:	sub	r1, r1, #2032	; 0x7f0
   210a0:	mov	r2, #1
   210a4:	sub	r1, r1, #8
   210a8:	add	r0, pc, r0
   210ac:	str	r2, [r3, #72]	; 0x48
   210b0:	bl	1fdf4 <mount@plt+0xdd3c>
   210b4:	b	21040 <mount@plt+0xef88>
   210b8:			; <UNDEFINED> instruction: 0x0001eeb0
   210bc:	ldrdeq	sp, [r1], -ip
   210c0:	muleq	r0, r4, r2
   210c4:	andeq	sp, r1, r8, lsl #5
   210c8:	strdeq	r9, [r0], -r0
   210cc:	ldr	r3, [pc, #344]	; 2122c <mount@plt+0xf174>
   210d0:	ldr	r2, [pc, #344]	; 21230 <mount@plt+0xf178>
   210d4:	push	{r4, r5, r6, r7, r8, r9, lr}
   210d8:	add	r3, pc, r3
   210dc:	ldr	r4, [pc, #336]	; 21234 <mount@plt+0xf17c>
   210e0:	ldr	r8, [r3, r2]
   210e4:	add	r4, pc, r4
   210e8:	mov	r9, r0
   210ec:	ldr	r0, [r4, #76]	; 0x4c
   210f0:	sub	sp, sp, #12
   210f4:	ldr	r3, [r8]
   210f8:	cmp	r0, #0
   210fc:	mov	r7, r1
   21100:	str	r3, [sp, #4]
   21104:	beq	21114 <mount@plt+0xf05c>
   21108:	bl	11b0c <strcmp@plt>
   2110c:	cmp	r0, #0
   21110:	beq	21198 <mount@plt+0xf0e0>
   21114:	ldr	r3, [pc, #284]	; 21238 <mount@plt+0xf180>
   21118:	add	r3, pc, r3
   2111c:	ldr	r2, [r3, #72]	; 0x48
   21120:	cmp	r2, #0
   21124:	beq	211a4 <mount@plt+0xf0ec>
   21128:	ldr	r6, [pc, #268]	; 2123c <mount@plt+0xf184>
   2112c:	mov	r4, #0
   21130:	add	r6, pc, r6
   21134:	sub	r6, r6, #2032	; 0x7f0
   21138:	sub	r6, r6, #8
   2113c:	b	2114c <mount@plt+0xf094>
   21140:	add	r4, r4, #1
   21144:	cmp	r4, #256	; 0x100
   21148:	beq	211cc <mount@plt+0xf114>
   2114c:	ldr	r5, [r6], #4
   21150:	cmp	r5, #0
   21154:	beq	21140 <mount@plt+0xf088>
   21158:	mov	r1, r7
   2115c:	mov	r0, r5
   21160:	bl	11b0c <strcmp@plt>
   21164:	cmp	r0, #0
   21168:	bne	21140 <mount@plt+0xf088>
   2116c:	ldr	r3, [pc, #204]	; 21240 <mount@plt+0xf188>
   21170:	str	r4, [r9]
   21174:	add	r3, pc, r3
   21178:	str	r5, [r3, #76]	; 0x4c
   2117c:	str	r4, [r3, #80]	; 0x50
   21180:	ldr	r2, [sp, #4]
   21184:	ldr	r3, [r8]
   21188:	cmp	r2, r3
   2118c:	bne	21228 <mount@plt+0xf170>
   21190:	add	sp, sp, #12
   21194:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21198:	ldr	r3, [r4, #80]	; 0x50
   2119c:	str	r3, [r9]
   211a0:	b	21180 <mount@plt+0xf0c8>
   211a4:	ldr	r1, [pc, #152]	; 21244 <mount@plt+0xf18c>
   211a8:	ldr	r0, [pc, #152]	; 21248 <mount@plt+0xf190>
   211ac:	add	r1, pc, r1
   211b0:	sub	r1, r1, #2032	; 0x7f0
   211b4:	mov	r2, #1
   211b8:	sub	r1, r1, #8
   211bc:	add	r0, pc, r0
   211c0:	str	r2, [r3, #72]	; 0x48
   211c4:	bl	1fdf4 <mount@plt+0xdd3c>
   211c8:	b	21128 <mount@plt+0xf070>
   211cc:	mov	r2, #0
   211d0:	mov	r1, sp
   211d4:	mov	r0, r7
   211d8:	bl	11df4 <strtoul@plt>
   211dc:	ldr	r3, [pc, #104]	; 2124c <mount@plt+0xf194>
   211e0:	ldr	r2, [sp]
   211e4:	add	r3, pc, r3
   211e8:	cmp	r2, r7
   211ec:	cmpne	r2, #0
   211f0:	str	r0, [r3, #80]	; 0x50
   211f4:	beq	21220 <mount@plt+0xf168>
   211f8:	ldrb	r2, [r2]
   211fc:	cmp	r0, #255	; 0xff
   21200:	movls	r3, #0
   21204:	movhi	r3, #1
   21208:	cmp	r2, #0
   2120c:	movne	r3, #1
   21210:	cmp	r3, #0
   21214:	streq	r0, [r9]
   21218:	moveq	r0, r3
   2121c:	beq	21180 <mount@plt+0xf0c8>
   21220:	mvn	r0, #0
   21224:	b	21180 <mount@plt+0xf0c8>
   21228:	bl	11c2c <__stack_chk_fail@plt>
   2122c:	andeq	sl, r1, r0, lsr #30
   21230:	andeq	r0, r0, r8, lsl #4
   21234:	strdeq	lr, [r1], -ip
   21238:	andeq	lr, r1, r8, asr #27
   2123c:	strdeq	sp, [r1], -r0
   21240:	andeq	lr, r1, ip, ror #26
   21244:	andeq	sp, r1, r4, ror r1
   21248:	ldrdeq	r9, [r0], -ip
   2124c:	strdeq	lr, [r1], -ip
   21250:	ldrb	r3, [r0]
   21254:	ldr	r2, [pc, #32]	; 2127c <mount@plt+0xf1c4>
   21258:	cmp	r3, #0
   2125c:	beq	21274 <mount@plt+0xf1bc>
   21260:	add	r1, r3, r2, lsl #5
   21264:	ldrb	r3, [r0, #1]!
   21268:	add	r2, r2, r1
   2126c:	cmp	r3, #0
   21270:	bne	21260 <mount@plt+0xf1a8>
   21274:	mov	r0, r2
   21278:	bx	lr
   2127c:	andeq	r1, r0, r5, lsl #10
   21280:	ldr	r3, [pc, #588]	; 214d4 <mount@plt+0xf41c>
   21284:	ldr	r2, [pc, #588]	; 214d8 <mount@plt+0xf420>
   21288:	add	r3, pc, r3
   2128c:	push	{r4, r5, r6, r7, r8, lr}
   21290:	mov	r5, r0
   21294:	ldr	r6, [r3, r2]
   21298:	ldrh	r0, [r0, #4]
   2129c:	sub	sp, sp, #216	; 0xd8
   212a0:	ldr	r3, [r6]
   212a4:	sub	r2, r0, #16
   212a8:	cmp	r2, #1
   212ac:	str	r3, [sp, #212]	; 0xd4
   212b0:	bhi	21334 <mount@plt+0xf27c>
   212b4:	ldr	r3, [r5]
   212b8:	cmp	r3, #31
   212bc:	bls	214c8 <mount@plt+0xf410>
   212c0:	ldr	r1, [r5, #20]
   212c4:	ldr	r2, [pc, #528]	; 214dc <mount@plt+0xf424>
   212c8:	lsl	ip, r1, #22
   212cc:	add	r2, pc, r2
   212d0:	lsr	ip, ip, #22
   212d4:	ldr	r4, [r2, ip, lsl #2]
   212d8:	cmp	r4, #0
   212dc:	bne	212f0 <mount@plt+0xf238>
   212e0:	b	21350 <mount@plt+0xf298>
   212e4:	ldr	r4, [r4]
   212e8:	cmp	r4, #0
   212ec:	beq	21350 <mount@plt+0xf298>
   212f0:	ldr	r2, [r4, #20]
   212f4:	cmp	r1, r2
   212f8:	bne	212e4 <mount@plt+0xf22c>
   212fc:	cmp	r0, #17
   21300:	bne	21430 <mount@plt+0xf378>
   21304:	ldr	r3, [r4, #8]
   21308:	ldr	r2, [r4, #12]
   2130c:	cmp	r3, #0
   21310:	mov	r0, r4
   21314:	str	r3, [r2]
   21318:	strne	r2, [r3, #4]
   2131c:	ldr	r3, [r4]
   21320:	ldr	r2, [r4, #4]
   21324:	cmp	r3, #0
   21328:	str	r3, [r2]
   2132c:	strne	r2, [r3, #4]
   21330:	bl	11b78 <free@plt>
   21334:	mov	r0, #0
   21338:	ldr	r2, [sp, #212]	; 0xd4
   2133c:	ldr	r3, [r6]
   21340:	cmp	r2, r3
   21344:	bne	214d0 <mount@plt+0xf418>
   21348:	add	sp, sp, #216	; 0xd8
   2134c:	pop	{r4, r5, r6, r7, r8, pc}
   21350:	cmp	r0, #17
   21354:	beq	21334 <mount@plt+0xf27c>
   21358:	sub	r3, r3, #32
   2135c:	add	r2, r5, #32
   21360:	mov	r1, #51	; 0x33
   21364:	add	r0, sp, #4
   21368:	bl	266b0 <mount@plt+0x145f8>
   2136c:	ldr	r0, [sp, #16]
   21370:	adds	r4, r0, #4
   21374:	beq	21334 <mount@plt+0xf27c>
   21378:	mov	r0, r4
   2137c:	bl	11e00 <strlen@plt>
   21380:	add	r0, r0, #29
   21384:	bl	11d70 <malloc@plt>
   21388:	subs	r7, r0, #0
   2138c:	beq	21334 <mount@plt+0xf27c>
   21390:	ldr	r8, [r5, #20]
   21394:	mov	r1, r4
   21398:	str	r8, [r7, #20]
   2139c:	add	r0, r7, #26
   213a0:	bl	11cec <strcpy@plt>
   213a4:	lsl	r3, r8, #22
   213a8:	ldr	r2, [pc, #304]	; 214e0 <mount@plt+0xf428>
   213ac:	lsr	r3, r3, #22
   213b0:	add	r2, pc, r2
   213b4:	ldrh	r0, [r5, #18]
   213b8:	ldr	r2, [r2, r3, lsl #2]
   213bc:	ldr	r1, [r5, #24]
   213c0:	cmp	r2, #0
   213c4:	str	r2, [r7]
   213c8:	strh	r0, [r7, #24]
   213cc:	str	r1, [r7, #16]
   213d0:	strne	r7, [r2, #4]
   213d4:	ldr	r2, [pc, #264]	; 214e4 <mount@plt+0xf42c>
   213d8:	mov	r0, r4
   213dc:	add	r2, pc, r2
   213e0:	add	r1, r2, r3, lsl #2
   213e4:	str	r7, [r2, r3, lsl #2]
   213e8:	str	r1, [r7, #4]
   213ec:	bl	21250 <mount@plt+0xf198>
   213f0:	ldr	r2, [pc, #240]	; 214e8 <mount@plt+0xf430>
   213f4:	add	r1, r7, #8
   213f8:	add	r2, pc, r2
   213fc:	lsl	r3, r0, #22
   21400:	mov	r0, #0
   21404:	lsr	r3, r3, #22
   21408:	ldr	r2, [r2, r3, lsl #2]
   2140c:	cmp	r2, #0
   21410:	str	r2, [r7, #8]
   21414:	strne	r1, [r2, #4]
   21418:	ldr	r2, [pc, #204]	; 214ec <mount@plt+0xf434>
   2141c:	add	r2, pc, r2
   21420:	add	ip, r2, r3, lsl #2
   21424:	str	r1, [r2, r3, lsl #2]
   21428:	str	ip, [r7, #12]
   2142c:	b	21338 <mount@plt+0xf280>
   21430:	sub	r3, r3, #32
   21434:	add	r2, r5, #32
   21438:	mov	r1, #51	; 0x33
   2143c:	add	r0, sp, #4
   21440:	bl	266b0 <mount@plt+0x145f8>
   21444:	ldr	r7, [sp, #16]
   21448:	adds	r7, r7, #4
   2144c:	beq	21334 <mount@plt+0xf27c>
   21450:	mov	r1, r7
   21454:	add	r0, r4, #26
   21458:	bl	11b0c <strcmp@plt>
   2145c:	cmp	r0, #0
   21460:	beq	214b8 <mount@plt+0xf400>
   21464:	ldr	r3, [r4, #8]
   21468:	ldr	r2, [r4, #12]
   2146c:	cmp	r3, #0
   21470:	mov	r0, r7
   21474:	str	r3, [r2]
   21478:	strne	r2, [r3, #4]
   2147c:	bl	21250 <mount@plt+0xf198>
   21480:	ldr	r3, [pc, #104]	; 214f0 <mount@plt+0xf438>
   21484:	add	r2, r4, #8
   21488:	add	r3, pc, r3
   2148c:	lsl	r0, r0, #22
   21490:	lsr	r0, r0, #22
   21494:	ldr	r3, [r3, r0, lsl #2]
   21498:	cmp	r3, #0
   2149c:	str	r3, [r4, #8]
   214a0:	strne	r2, [r3, #4]
   214a4:	ldr	r3, [pc, #72]	; 214f4 <mount@plt+0xf43c>
   214a8:	add	r3, pc, r3
   214ac:	add	r1, r3, r0, lsl #2
   214b0:	str	r2, [r3, r0, lsl #2]
   214b4:	str	r1, [r4, #12]
   214b8:	ldr	r3, [r5, #24]
   214bc:	mov	r0, #0
   214c0:	str	r3, [r4, #16]
   214c4:	b	21338 <mount@plt+0xf280>
   214c8:	mvn	r0, #0
   214cc:	b	21338 <mount@plt+0xf280>
   214d0:	bl	11c2c <__stack_chk_fail@plt>
   214d4:	andeq	sl, r1, r0, ror sp
   214d8:	andeq	r0, r0, r8, lsl #4
   214dc:	andeq	pc, r1, ip, lsl #25
   214e0:	andeq	pc, r1, r8, lsr #23
   214e4:	andeq	pc, r1, ip, ror fp	; <UNPREDICTABLE>
   214e8:	andeq	lr, r1, r0, ror #22
   214ec:	andeq	lr, r1, ip, lsr fp
   214f0:	ldrdeq	lr, [r1], -r0
   214f4:			; <UNDEFINED> instruction: 0x0001eab0
   214f8:	push	{r4, lr}
   214fc:	sub	sp, sp, #8
   21500:	ldr	r4, [pc, #48]	; 21538 <mount@plt+0xf480>
   21504:	ldr	r2, [pc, #48]	; 2153c <mount@plt+0xf484>
   21508:	add	r4, pc, r4
   2150c:	mov	r3, #16
   21510:	add	r2, pc, r2
   21514:	str	r0, [sp, #4]
   21518:	str	r2, [sp]
   2151c:	mov	r0, r4
   21520:	mov	r1, r3
   21524:	mov	r2, #1
   21528:	bl	12088 <__snprintf_chk@plt>
   2152c:	mov	r0, r4
   21530:	add	sp, sp, #8
   21534:	pop	{r4, pc}
   21538:	andeq	lr, r1, ip, lsr #20
   2153c:	andeq	r9, r0, r0, lsl r4
   21540:	push	{r4, r5, lr}
   21544:	subs	r5, r0, #0
   21548:	sub	sp, sp, #12
   2154c:	beq	21594 <mount@plt+0xf4dc>
   21550:	lsl	r2, r5, #22
   21554:	ldr	r3, [pc, #156]	; 215f8 <mount@plt+0xf540>
   21558:	lsr	r2, r2, #22
   2155c:	add	r3, pc, r3
   21560:	ldr	r3, [r3, r2, lsl #2]
   21564:	cmp	r3, #0
   21568:	bne	2157c <mount@plt+0xf4c4>
   2156c:	b	215a4 <mount@plt+0xf4ec>
   21570:	ldr	r3, [r3]
   21574:	cmp	r3, #0
   21578:	beq	215a4 <mount@plt+0xf4ec>
   2157c:	ldr	r2, [r3, #20]
   21580:	cmp	r5, r2
   21584:	bne	21570 <mount@plt+0xf4b8>
   21588:	add	r0, r3, #26
   2158c:	add	sp, sp, #12
   21590:	pop	{r4, r5, pc}
   21594:	ldr	r0, [pc, #96]	; 215fc <mount@plt+0xf544>
   21598:	add	r0, pc, r0
   2159c:	add	sp, sp, #12
   215a0:	pop	{r4, r5, pc}
   215a4:	ldr	r4, [pc, #84]	; 21600 <mount@plt+0xf548>
   215a8:	mov	r0, r5
   215ac:	add	r4, pc, r4
   215b0:	add	r4, r4, #16
   215b4:	mov	r1, r4
   215b8:	bl	11b54 <if_indextoname@plt>
   215bc:	cmp	r0, #0
   215c0:	beq	215d0 <mount@plt+0xf518>
   215c4:	mov	r0, r4
   215c8:	add	sp, sp, #12
   215cc:	pop	{r4, r5, pc}
   215d0:	ldr	r2, [pc, #44]	; 21604 <mount@plt+0xf54c>
   215d4:	mov	r3, #16
   215d8:	add	r2, pc, r2
   215dc:	mov	r1, r3
   215e0:	stm	sp, {r2, r5}
   215e4:	mov	r0, r4
   215e8:	mov	r2, #1
   215ec:	bl	12088 <__snprintf_chk@plt>
   215f0:	mov	r0, r4
   215f4:	b	2158c <mount@plt+0xf4d4>
   215f8:	strdeq	pc, [r1], -ip
   215fc:	andeq	r7, r0, r0, ror #25
   21600:	andeq	lr, r1, r8, lsl #19
   21604:	andeq	r9, r0, r8, asr #6
   21608:	cmp	r0, #0
   2160c:	beq	21650 <mount@plt+0xf598>
   21610:	lsl	r2, r0, #22
   21614:	ldr	r3, [pc, #60]	; 21658 <mount@plt+0xf5a0>
   21618:	lsr	r2, r2, #22
   2161c:	add	r3, pc, r3
   21620:	ldr	r3, [r3, r2, lsl #2]
   21624:	cmp	r3, #0
   21628:	bne	2163c <mount@plt+0xf584>
   2162c:	b	21650 <mount@plt+0xf598>
   21630:	ldr	r3, [r3]
   21634:	cmp	r3, #0
   21638:	beq	21650 <mount@plt+0xf598>
   2163c:	ldr	r2, [r3, #20]
   21640:	cmp	r0, r2
   21644:	bne	21630 <mount@plt+0xf578>
   21648:	ldrh	r0, [r3, #24]
   2164c:	bx	lr
   21650:	mvn	r0, #0
   21654:	bx	lr
   21658:	andeq	pc, r1, ip, lsr r9	; <UNPREDICTABLE>
   2165c:	cmp	r0, #0
   21660:	bxeq	lr
   21664:	lsl	r2, r0, #22
   21668:	ldr	r3, [pc, #60]	; 216ac <mount@plt+0xf5f4>
   2166c:	lsr	r2, r2, #22
   21670:	add	r3, pc, r3
   21674:	ldr	r3, [r3, r2, lsl #2]
   21678:	cmp	r3, #0
   2167c:	bne	21690 <mount@plt+0xf5d8>
   21680:	b	216a4 <mount@plt+0xf5ec>
   21684:	ldr	r3, [r3]
   21688:	cmp	r3, #0
   2168c:	beq	216a4 <mount@plt+0xf5ec>
   21690:	ldr	r2, [r3, #20]
   21694:	cmp	r0, r2
   21698:	bne	21684 <mount@plt+0xf5cc>
   2169c:	ldr	r0, [r3, #16]
   216a0:	bx	lr
   216a4:	mvn	r0, #0
   216a8:	bx	lr
   216ac:	andeq	pc, r1, r8, ror #17
   216b0:	ldr	r3, [pc, #204]	; 21784 <mount@plt+0xf6cc>
   216b4:	ldr	r2, [pc, #204]	; 21788 <mount@plt+0xf6d0>
   216b8:	add	r3, pc, r3
   216bc:	push	{r4, r5, r6, lr}
   216c0:	sub	sp, sp, #8
   216c4:	ldr	r5, [r3, r2]
   216c8:	subs	r6, r0, #0
   216cc:	moveq	r4, r6
   216d0:	ldr	r3, [r5]
   216d4:	str	r3, [sp, #4]
   216d8:	beq	21734 <mount@plt+0xf67c>
   216dc:	bl	21250 <mount@plt+0xf198>
   216e0:	ldr	r3, [pc, #164]	; 2178c <mount@plt+0xf6d4>
   216e4:	add	r3, pc, r3
   216e8:	lsl	r0, r0, #22
   216ec:	lsr	r0, r0, #22
   216f0:	ldr	r4, [r3, r0, lsl #2]
   216f4:	cmp	r4, #0
   216f8:	bne	2170c <mount@plt+0xf654>
   216fc:	b	21750 <mount@plt+0xf698>
   21700:	ldr	r4, [r4]
   21704:	cmp	r4, #0
   21708:	beq	21750 <mount@plt+0xf698>
   2170c:	mov	r2, #16
   21710:	mov	r1, r6
   21714:	add	r0, r4, #18
   21718:	bl	12040 <strncmp@plt>
   2171c:	sub	r3, r4, #8
   21720:	cmp	r0, #0
   21724:	bne	21700 <mount@plt+0xf648>
   21728:	cmp	r3, #0
   2172c:	beq	21750 <mount@plt+0xf698>
   21730:	ldr	r4, [r4, #12]
   21734:	ldr	r2, [sp, #4]
   21738:	ldr	r3, [r5]
   2173c:	mov	r0, r4
   21740:	cmp	r2, r3
   21744:	bne	21780 <mount@plt+0xf6c8>
   21748:	add	sp, sp, #8
   2174c:	pop	{r4, r5, r6, pc}
   21750:	mov	r0, r6
   21754:	bl	1201c <if_nametoindex@plt>
   21758:	subs	r4, r0, #0
   2175c:	bne	21734 <mount@plt+0xf67c>
   21760:	ldr	r1, [pc, #40]	; 21790 <mount@plt+0xf6d8>
   21764:	mov	r0, r6
   21768:	mov	r2, sp
   2176c:	add	r1, pc, r1
   21770:	bl	11fa4 <sscanf@plt>
   21774:	cmp	r0, #1
   21778:	ldreq	r4, [sp]
   2177c:	b	21734 <mount@plt+0xf67c>
   21780:	bl	11c2c <__stack_chk_fail@plt>
   21784:	andeq	sl, r1, r0, asr #18
   21788:	andeq	r0, r0, r8, lsl #4
   2178c:	andeq	lr, r1, r4, ror r8
   21790:			; <UNDEFINED> instruction: 0x000091b4
   21794:	push	{r4, r5, r6, r7, r8, lr}
   21798:	ldr	r6, [pc, #144]	; 21830 <mount@plt+0xf778>
   2179c:	ldr	r5, [pc, #144]	; 21834 <mount@plt+0xf77c>
   217a0:	add	r6, pc, r6
   217a4:	add	r5, pc, r5
   217a8:	ldr	r4, [r6, #32]
   217ac:	cmp	r4, #0
   217b0:	popne	{r4, r5, r6, r7, r8, pc}
   217b4:	mov	r1, r4
   217b8:	mov	r7, r0
   217bc:	bl	250c8 <mount@plt+0x13010>
   217c0:	cmp	r0, #0
   217c4:	blt	217f4 <mount@plt+0xf73c>
   217c8:	ldr	r2, [pc, #104]	; 21838 <mount@plt+0xf780>
   217cc:	mov	r0, r7
   217d0:	mov	r3, r4
   217d4:	ldr	r1, [r5, r2]
   217d8:	mov	r2, r4
   217dc:	bl	25520 <mount@plt+0x13468>
   217e0:	cmp	r0, #0
   217e4:	blt	21808 <mount@plt+0xf750>
   217e8:	mov	r3, #1
   217ec:	str	r3, [r6, #32]
   217f0:	pop	{r4, r5, r6, r7, r8, pc}
   217f4:	ldr	r0, [pc, #64]	; 2183c <mount@plt+0xf784>
   217f8:	add	r0, pc, r0
   217fc:	bl	11c80 <perror@plt>
   21800:	mov	r0, #1
   21804:	bl	11ddc <exit@plt>
   21808:	ldr	r3, [pc, #48]	; 21840 <mount@plt+0xf788>
   2180c:	ldr	r0, [pc, #48]	; 21844 <mount@plt+0xf78c>
   21810:	mov	r2, #16
   21814:	ldr	r3, [r5, r3]
   21818:	mov	r1, #1
   2181c:	add	r0, pc, r0
   21820:	ldr	r3, [r3]
   21824:	bl	11cb0 <fwrite@plt>
   21828:	mov	r0, #1
   2182c:	bl	11ddc <exit@plt>
   21830:	muleq	r1, r4, r7
   21834:	andeq	sl, r1, r4, asr r8
   21838:	andeq	r0, r0, r0, lsl r2
   2183c:	andeq	r9, r0, r0, lsr r1
   21840:	andeq	r0, r0, r4, lsl r2
   21844:	andeq	r9, r0, r8, lsr #2
   21848:	push	{r4, lr}
   2184c:	rev16	lr, r0
   21850:	sub	sp, sp, #8
   21854:	uxth	lr, lr
   21858:	cmp	lr, #96	; 0x60
   2185c:	beq	218d8 <mount@plt+0xf820>
   21860:	ldr	r4, [pc, #124]	; 218e4 <mount@plt+0xf82c>
   21864:	mov	ip, #512	; 0x200
   21868:	add	r4, pc, r4
   2186c:	mov	r3, #1
   21870:	b	21884 <mount@plt+0xf7cc>
   21874:	add	r3, r3, #1
   21878:	cmp	r3, #49	; 0x31
   2187c:	beq	218a4 <mount@plt+0xf7ec>
   21880:	ldr	ip, [r4, r3, lsl #3]
   21884:	cmp	ip, lr
   21888:	bne	21874 <mount@plt+0xf7bc>
   2188c:	ldr	r2, [pc, #84]	; 218e8 <mount@plt+0xf830>
   21890:	add	r2, pc, r2
   21894:	add	r3, r2, r3, lsl #3
   21898:	ldr	r0, [r3, #4]
   2189c:	add	sp, sp, #8
   218a0:	pop	{r4, pc}
   218a4:	ldr	r3, [pc, #64]	; 218ec <mount@plt+0xf834>
   218a8:	mov	r4, r1
   218ac:	add	r3, pc, r3
   218b0:	mov	r1, r2
   218b4:	str	r3, [sp]
   218b8:	str	lr, [sp, #4]
   218bc:	mvn	r3, #0
   218c0:	mov	r2, #1
   218c4:	mov	r0, r4
   218c8:	bl	12088 <__snprintf_chk@plt>
   218cc:	mov	r0, r4
   218d0:	add	sp, sp, #8
   218d4:	pop	{r4, pc}
   218d8:	ldr	r0, [pc, #16]	; 218f0 <mount@plt+0xf838>
   218dc:	add	r0, pc, r0
   218e0:	b	2189c <mount@plt+0xf7e4>
   218e4:	andeq	sl, r1, r0, lsr #9
   218e8:	andeq	sl, r1, r8, ror r4
   218ec:	strheq	r9, [r0], -r4
   218f0:	andeq	r9, r0, ip, ror r0
   218f4:	push	{r4, r5, r6, r7, r8, lr}
   218f8:	mov	r7, r0
   218fc:	ldr	r3, [pc, #116]	; 21978 <mount@plt+0xf8c0>
   21900:	ldr	r6, [pc, #116]	; 2197c <mount@plt+0xf8c4>
   21904:	add	r3, pc, r3
   21908:	add	r6, pc, r6
   2190c:	mov	r5, r1
   21910:	mov	r4, #0
   21914:	b	2192c <mount@plt+0xf874>
   21918:	add	r4, r4, #1
   2191c:	cmp	r4, #49	; 0x31
   21920:	add	r3, r6, r4, lsl #3
   21924:	beq	21958 <mount@plt+0xf8a0>
   21928:	ldr	r3, [r3, #4]
   2192c:	mov	r0, r3
   21930:	mov	r1, r5
   21934:	bl	11c68 <strcasecmp@plt>
   21938:	cmp	r0, #0
   2193c:	bne	21918 <mount@plt+0xf860>
   21940:	ldr	r3, [pc, #56]	; 21980 <mount@plt+0xf8c8>
   21944:	add	r3, pc, r3
   21948:	ldr	r3, [r3, r4, lsl #3]
   2194c:	rev16	r3, r3
   21950:	strh	r3, [r7]
   21954:	pop	{r4, r5, r6, r7, r8, pc}
   21958:	mov	r1, r5
   2195c:	mov	r0, r7
   21960:	mov	r2, #0
   21964:	bl	1d32c <mount@plt+0xb274>
   21968:	adds	r0, r0, #0
   2196c:	movne	r0, #1
   21970:	rsb	r0, r0, #0
   21974:	pop	{r4, r5, r6, r7, r8, pc}
   21978:	andeq	r9, r0, r4, asr r0
   2197c:	andeq	sl, r1, r0, lsl #8
   21980:	andeq	sl, r1, r4, asr #7
   21984:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21988:	sub	sp, sp, #8
   2198c:	cmp	r1, #4
   21990:	mov	r8, r3
   21994:	ldr	r6, [sp, #40]	; 0x28
   21998:	beq	21a5c <mount@plt+0xf9a4>
   2199c:	cmp	r1, #16
   219a0:	bne	219b8 <mount@plt+0xf900>
   219a4:	ldr	ip, [pc, #244]	; 21aa0 <mount@plt+0xf9e8>
   219a8:	ldr	r3, [pc, #244]	; 21aa4 <mount@plt+0xf9ec>
   219ac:	cmp	r2, r3
   219b0:	cmpne	r2, ip
   219b4:	beq	21a8c <mount@plt+0xf9d4>
   219b8:	mov	r7, r1
   219bc:	ldr	r2, [pc, #228]	; 21aa8 <mount@plt+0xf9f0>
   219c0:	ldrb	r1, [r0]
   219c4:	add	r2, pc, r2
   219c8:	str	r2, [sp]
   219cc:	str	r1, [sp, #4]
   219d0:	mov	r9, r0
   219d4:	mvn	r3, #0
   219d8:	mov	r2, #1
   219dc:	mov	r1, r6
   219e0:	mov	r0, r8
   219e4:	bl	12088 <__snprintf_chk@plt>
   219e8:	cmp	r6, #2
   219ec:	cmpgt	r7, #1
   219f0:	ble	21a50 <mount@plt+0xf998>
   219f4:	ldr	sl, [pc, #176]	; 21aac <mount@plt+0xf9f4>
   219f8:	mov	r4, r9
   219fc:	add	sl, pc, sl
   21a00:	mov	r5, #2
   21a04:	ldrb	r2, [r4, #1]
   21a08:	mvn	r3, #0
   21a0c:	sub	r1, r6, r5
   21a10:	str	r2, [sp, #4]
   21a14:	add	r0, r8, r5
   21a18:	str	sl, [sp]
   21a1c:	mov	r2, #1
   21a20:	bl	12088 <__snprintf_chk@plt>
   21a24:	add	ip, r4, #2
   21a28:	sub	ip, ip, r9
   21a2c:	cmp	ip, r7
   21a30:	add	r5, r5, #3
   21a34:	movge	r3, #0
   21a38:	movlt	r3, #1
   21a3c:	cmp	r6, r5
   21a40:	movle	r3, #0
   21a44:	add	r4, r4, #1
   21a48:	cmp	r3, #0
   21a4c:	bne	21a04 <mount@plt+0xf94c>
   21a50:	mov	r0, r8
   21a54:	add	sp, sp, #8
   21a58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21a5c:	ldr	r3, [pc, #76]	; 21ab0 <mount@plt+0xf9f8>
   21a60:	bic	ip, r2, #8
   21a64:	cmp	r2, r3
   21a68:	cmpne	ip, #768	; 0x300
   21a6c:	bne	219b8 <mount@plt+0xf900>
   21a70:	mov	r1, r0
   21a74:	mov	r3, r6
   21a78:	mov	r2, r8
   21a7c:	mov	r0, #2
   21a80:	add	sp, sp, #8
   21a84:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   21a88:	b	12004 <inet_ntop@plt>
   21a8c:	mov	r1, r0
   21a90:	mov	r3, r6
   21a94:	mov	r2, r8
   21a98:	mov	r0, #10
   21a9c:	b	21a80 <mount@plt+0xf9c8>
   21aa0:	andeq	r0, r0, r1, lsl #6
   21aa4:	andeq	r0, r0, r7, lsr r3
   21aa8:	andeq	r8, r0, r4, lsr #22
   21aac:	muleq	r0, r0, r0
   21ab0:	andeq	r0, r0, sl, lsl #6
   21ab4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21ab8:	sub	sp, sp, #284	; 0x11c
   21abc:	ldr	fp, [pc, #396]	; 21c50 <mount@plt+0xfb98>
   21ac0:	ldr	r3, [pc, #396]	; 21c54 <mount@plt+0xfb9c>
   21ac4:	add	fp, pc, fp
   21ac8:	mov	r7, r0
   21acc:	ldr	r3, [fp, r3]
   21ad0:	mov	r6, r1
   21ad4:	str	r3, [sp, #4]
   21ad8:	ldr	r3, [r3]
   21adc:	mov	r0, r2
   21ae0:	mov	r1, #46	; 0x2e
   21ae4:	mov	r5, r2
   21ae8:	str	r3, [sp, #276]	; 0x114
   21aec:	bl	11e0c <strchr@plt>
   21af0:	subs	r8, r0, #0
   21af4:	beq	21b38 <mount@plt+0xfa80>
   21af8:	mov	r2, #2
   21afc:	mov	r1, r5
   21b00:	add	r0, sp, #12
   21b04:	bl	1d484 <mount@plt+0xb3cc>
   21b08:	cmp	r0, #0
   21b0c:	bne	21be0 <mount@plt+0xfb28>
   21b10:	cmp	r6, #3
   21b14:	bgt	21c08 <mount@plt+0xfb50>
   21b18:	mvn	r0, #0
   21b1c:	ldr	r3, [sp, #4]
   21b20:	ldr	r2, [sp, #276]	; 0x114
   21b24:	ldr	r3, [r3]
   21b28:	cmp	r2, r3
   21b2c:	bne	21c4c <mount@plt+0xfb94>
   21b30:	add	sp, sp, #284	; 0x11c
   21b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21b38:	cmp	r6, #0
   21b3c:	ble	21c44 <mount@plt+0xfb8c>
   21b40:	ldr	r9, [pc, #272]	; 21c58 <mount@plt+0xfba0>
   21b44:	sub	r4, r7, #1
   21b48:	str	r8, [sp]
   21b4c:	add	r6, r4, r6
   21b50:	add	sl, sp, #8
   21b54:	add	r9, pc, r9
   21b58:	b	21b8c <mount@plt+0xfad4>
   21b5c:	ldr	r3, [sp, #8]
   21b60:	cmp	r3, #255	; 0xff
   21b64:	bhi	21c18 <mount@plt+0xfb60>
   21b68:	add	r0, r4, #2
   21b6c:	cmp	r8, #0
   21b70:	strb	r3, [r4, #1]
   21b74:	sub	r0, r0, r7
   21b78:	add	r4, r4, #1
   21b7c:	beq	21b1c <mount@plt+0xfa64>
   21b80:	cmp	r4, r6
   21b84:	mov	r5, r8
   21b88:	beq	21c3c <mount@plt+0xfb84>
   21b8c:	mov	r1, #58	; 0x3a
   21b90:	mov	r0, r5
   21b94:	bl	11e0c <strchr@plt>
   21b98:	mov	r2, sl
   21b9c:	mov	r1, r9
   21ba0:	subs	r8, r0, #0
   21ba4:	mov	r0, r5
   21ba8:	ldrne	r3, [sp]
   21bac:	strbne	r3, [r8], #1
   21bb0:	bl	11fa4 <sscanf@plt>
   21bb4:	cmp	r0, #1
   21bb8:	beq	21b5c <mount@plt+0xfaa4>
   21bbc:	ldr	r1, [pc, #152]	; 21c5c <mount@plt+0xfba4>
   21bc0:	ldr	r2, [pc, #152]	; 21c60 <mount@plt+0xfba8>
   21bc4:	mov	r3, r5
   21bc8:	ldr	r0, [fp, r1]
   21bcc:	add	r2, pc, r2
   21bd0:	mov	r1, #1
   21bd4:	ldr	r0, [r0]
   21bd8:	bl	11ef0 <__fprintf_chk@plt>
   21bdc:	b	21b18 <mount@plt+0xfa60>
   21be0:	ldr	r1, [pc, #116]	; 21c5c <mount@plt+0xfba4>
   21be4:	ldr	r2, [pc, #120]	; 21c64 <mount@plt+0xfbac>
   21be8:	mov	r3, r5
   21bec:	ldr	r0, [fp, r1]
   21bf0:	add	r2, pc, r2
   21bf4:	mov	r1, #1
   21bf8:	ldr	r0, [r0]
   21bfc:	bl	11ef0 <__fprintf_chk@plt>
   21c00:	mvn	r0, #0
   21c04:	b	21b1c <mount@plt+0xfa64>
   21c08:	ldr	r3, [sp, #20]
   21c0c:	mov	r0, #4
   21c10:	str	r3, [r7]
   21c14:	b	21b1c <mount@plt+0xfa64>
   21c18:	ldr	r2, [pc, #60]	; 21c5c <mount@plt+0xfba4>
   21c1c:	mov	r1, r0
   21c20:	mov	r3, r5
   21c24:	ldr	r0, [fp, r2]
   21c28:	ldr	r2, [pc, #56]	; 21c68 <mount@plt+0xfbb0>
   21c2c:	ldr	r0, [r0]
   21c30:	add	r2, pc, r2
   21c34:	bl	11ef0 <__fprintf_chk@plt>
   21c38:	b	21b18 <mount@plt+0xfa60>
   21c3c:	add	r0, r0, #1
   21c40:	b	21b1c <mount@plt+0xfa64>
   21c44:	mov	r0, #1
   21c48:	b	21b1c <mount@plt+0xfa64>
   21c4c:	bl	11c2c <__stack_chk_fail@plt>
   21c50:	andeq	sl, r1, r4, lsr r5
   21c54:	andeq	r0, r0, r8, lsl #4
   21c58:	andeq	r6, r0, r8, lsr #9
   21c5c:	andeq	r0, r0, r4, lsl r2
   21c60:	andeq	r8, r0, r8, asr #29
   21c64:	andeq	r8, r0, r4, lsr #29
   21c68:	andeq	r8, r0, r4, ror #28
   21c6c:	push	{r4, r5, r6, r7, r8, lr}
   21c70:	sub	sp, sp, #8
   21c74:	ldr	r7, [pc, #188]	; 21d38 <mount@plt+0xfc80>
   21c78:	add	r7, pc, r7
   21c7c:	ldr	ip, [r7]
   21c80:	cmp	ip, r0
   21c84:	beq	21cf8 <mount@plt+0xfc40>
   21c88:	mov	r5, r0
   21c8c:	mov	r6, r2
   21c90:	mov	r4, r1
   21c94:	bl	11c38 <getprotobynumber@plt>
   21c98:	subs	r8, r0, #0
   21c9c:	beq	21d08 <mount@plt+0xfc50>
   21ca0:	ldr	r3, [r7]
   21ca4:	cmn	r3, #1
   21ca8:	beq	21cb8 <mount@plt+0xfc00>
   21cac:	ldr	r3, [pc, #136]	; 21d3c <mount@plt+0xfc84>
   21cb0:	ldr	r0, [pc, r3]
   21cb4:	bl	11b78 <free@plt>
   21cb8:	ldr	r3, [pc, #128]	; 21d40 <mount@plt+0xfc88>
   21cbc:	ldr	r7, [r8]
   21cc0:	add	r3, pc, r3
   21cc4:	mov	r0, r7
   21cc8:	str	r5, [r3]
   21ccc:	bl	11c20 <strdup@plt>
   21cd0:	ldr	r3, [pc, #108]	; 21d44 <mount@plt+0xfc8c>
   21cd4:	mov	r1, r7
   21cd8:	add	r3, pc, r3
   21cdc:	mov	r2, r6
   21ce0:	str	r0, [r3]
   21ce4:	mov	r0, r4
   21ce8:	bl	1f584 <mount@plt+0xd4cc>
   21cec:	mov	r0, r4
   21cf0:	add	sp, sp, #8
   21cf4:	pop	{r4, r5, r6, r7, r8, pc}
   21cf8:	ldr	r3, [pc, #72]	; 21d48 <mount@plt+0xfc90>
   21cfc:	ldr	r0, [pc, r3]
   21d00:	add	sp, sp, #8
   21d04:	pop	{r4, r5, r6, r7, r8, pc}
   21d08:	ldr	r3, [pc, #60]	; 21d4c <mount@plt+0xfc94>
   21d0c:	str	r5, [sp, #4]
   21d10:	add	r3, pc, r3
   21d14:	str	r3, [sp]
   21d18:	mov	r1, r6
   21d1c:	mvn	r3, #0
   21d20:	mov	r2, #1
   21d24:	mov	r0, r4
   21d28:	bl	12088 <__snprintf_chk@plt>
   21d2c:	mov	r0, r4
   21d30:	add	sp, sp, #8
   21d34:	pop	{r4, r5, r6, r7, r8, pc}
   21d38:	andeq	ip, r1, r0, ror #5
   21d3c:	andeq	r0, r2, r8, lsr #5
   21d40:	muleq	r1, r8, r2
   21d44:	andeq	r0, r2, r0, lsl #5
   21d48:	andeq	r0, r2, ip, asr r2
   21d4c:	andeq	r8, r0, r0, lsr #27
   21d50:	ldr	r3, [pc, #240]	; 21e48 <mount@plt+0xfd90>
   21d54:	ldr	r1, [pc, #240]	; 21e4c <mount@plt+0xfd94>
   21d58:	add	r3, pc, r3
   21d5c:	ldr	r2, [pc, #236]	; 21e50 <mount@plt+0xfd98>
   21d60:	push	{r4, r5, r6, lr}
   21d64:	add	r2, pc, r2
   21d68:	ldr	r6, [r3, r1]
   21d6c:	ldr	r4, [r2, #4]
   21d70:	sub	sp, sp, #8
   21d74:	ldr	r3, [r6]
   21d78:	cmn	r4, #1
   21d7c:	mov	r5, r0
   21d80:	str	r3, [sp, #4]
   21d84:	beq	21da4 <mount@plt+0xfcec>
   21d88:	ldr	r3, [pc, #196]	; 21e54 <mount@plt+0xfd9c>
   21d8c:	mov	r1, r0
   21d90:	add	r3, pc, r3
   21d94:	ldr	r0, [r3, #4]
   21d98:	bl	11b0c <strcmp@plt>
   21d9c:	cmp	r0, #0
   21da0:	beq	21dc0 <mount@plt+0xfd08>
   21da4:	mov	r2, #10
   21da8:	mov	r1, r5
   21dac:	add	r0, sp, #3
   21db0:	bl	1d040 <mount@plt+0xaf88>
   21db4:	cmp	r0, #0
   21db8:	bne	21ddc <mount@plt+0xfd24>
   21dbc:	ldrb	r4, [sp, #3]
   21dc0:	ldr	r2, [sp, #4]
   21dc4:	ldr	r3, [r6]
   21dc8:	mov	r0, r4
   21dcc:	cmp	r2, r3
   21dd0:	bne	21e44 <mount@plt+0xfd8c>
   21dd4:	add	sp, sp, #8
   21dd8:	pop	{r4, r5, r6, pc}
   21ddc:	mov	r0, r5
   21de0:	bl	11b3c <getprotobyname@plt>
   21de4:	subs	r5, r0, #0
   21de8:	beq	21e3c <mount@plt+0xfd84>
   21dec:	ldr	r3, [pc, #100]	; 21e58 <mount@plt+0xfda0>
   21df0:	add	r3, pc, r3
   21df4:	ldr	r3, [r3, #4]
   21df8:	cmn	r3, #1
   21dfc:	bne	21e28 <mount@plt+0xfd70>
   21e00:	ldr	r3, [pc, #84]	; 21e5c <mount@plt+0xfda4>
   21e04:	ldr	r4, [r5, #8]
   21e08:	add	r3, pc, r3
   21e0c:	ldr	r0, [r5]
   21e10:	str	r4, [r3, #4]
   21e14:	bl	11c20 <strdup@plt>
   21e18:	ldr	r3, [pc, #64]	; 21e60 <mount@plt+0xfda8>
   21e1c:	add	r3, pc, r3
   21e20:	str	r0, [r3, #4]
   21e24:	b	21dc0 <mount@plt+0xfd08>
   21e28:	ldr	r3, [pc, #52]	; 21e64 <mount@plt+0xfdac>
   21e2c:	add	r3, pc, r3
   21e30:	ldr	r0, [r3, #4]
   21e34:	bl	11b78 <free@plt>
   21e38:	b	21e00 <mount@plt+0xfd48>
   21e3c:	mvn	r4, #0
   21e40:	b	21dc0 <mount@plt+0xfd08>
   21e44:	bl	11c2c <__stack_chk_fail@plt>
   21e48:	andeq	sl, r1, r0, lsr #5
   21e4c:	andeq	r0, r0, r8, lsl #4
   21e50:	strdeq	ip, [r1], -r4
   21e54:	andeq	r0, r2, r8, asr #3
   21e58:	andeq	ip, r1, r8, ror #2
   21e5c:	andeq	ip, r1, r0, asr r1
   21e60:	andeq	r0, r2, ip, lsr r1
   21e64:	andeq	r0, r2, ip, lsr #2
   21e68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21e6c:	sub	sp, sp, #12672	; 0x3180
   21e70:	ldr	r5, [pc, #1028]	; 2227c <mount@plt+0x101c4>
   21e74:	ldr	r3, [pc, #1028]	; 22280 <mount@plt+0x101c8>
   21e78:	add	r5, pc, r5
   21e7c:	sub	sp, sp, #20
   21e80:	ldr	r3, [r5, r3]
   21e84:	add	lr, sp, #12672	; 0x3180
   21e88:	ldr	r1, [pc, #1012]	; 22284 <mount@plt+0x101cc>
   21e8c:	ldr	r2, [pc, #1012]	; 22288 <mount@plt+0x101d0>
   21e90:	ldr	ip, [r3]
   21e94:	add	lr, lr, #12
   21e98:	add	r6, sp, #400	; 0x190
   21e9c:	sub	r7, r6, #4
   21ea0:	add	r1, pc, r1
   21ea4:	str	r3, [sp, #20]
   21ea8:	add	r2, pc, r2
   21eac:	mov	r3, #4096	; 0x1000
   21eb0:	str	r0, [sp, #8]
   21eb4:	str	r1, [sp, #4]
   21eb8:	str	r2, [sp]
   21ebc:	mov	r1, r3
   21ec0:	mov	r2, #1
   21ec4:	str	ip, [lr]
   21ec8:	mov	r4, r0
   21ecc:	mov	r0, r7
   21ed0:	bl	12088 <__snprintf_chk@plt>
   21ed4:	mov	r0, r7
   21ed8:	mov	r1, #524288	; 0x80000
   21edc:	bl	11d40 <open64@plt>
   21ee0:	subs	r7, r0, #0
   21ee4:	blt	22188 <mount@plt+0x100d0>
   21ee8:	mov	r1, #1073741824	; 0x40000000
   21eec:	bl	11c5c <setns@plt>
   21ef0:	cmp	r0, #0
   21ef4:	blt	221c4 <mount@plt+0x1010c>
   21ef8:	mov	r0, r7
   21efc:	bl	12064 <close@plt>
   21f00:	mov	r0, #131072	; 0x20000
   21f04:	bl	11b84 <unshare@plt>
   21f08:	cmp	r0, #0
   21f0c:	blt	22208 <mount@plt+0x10150>
   21f10:	ldr	r2, [pc, #884]	; 2228c <mount@plt+0x101d4>
   21f14:	ldr	r1, [pc, #884]	; 22290 <mount@plt+0x101d8>
   21f18:	ldr	r0, [pc, #884]	; 22294 <mount@plt+0x101dc>
   21f1c:	mov	r3, #0
   21f20:	str	r3, [sp]
   21f24:	add	r2, pc, r2
   21f28:	mov	r3, #540672	; 0x84000
   21f2c:	add	r1, pc, r1
   21f30:	add	r0, pc, r0
   21f34:	bl	120b8 <mount@plt>
   21f38:	subs	r9, r0, #0
   21f3c:	bne	22150 <mount@plt+0x10098>
   21f40:	ldr	r7, [pc, #848]	; 22298 <mount@plt+0x101e0>
   21f44:	mov	r1, #2
   21f48:	add	r7, pc, r7
   21f4c:	mov	r0, r7
   21f50:	bl	11d28 <umount2@plt>
   21f54:	cmp	r0, #0
   21f58:	blt	22130 <mount@plt+0x10078>
   21f5c:	mov	r3, #0
   21f60:	mov	r2, #0
   21f64:	str	r2, [sp]
   21f68:	ldr	r1, [pc, #812]	; 2229c <mount@plt+0x101e4>
   21f6c:	ldr	r2, [pc, #812]	; 222a0 <mount@plt+0x101e8>
   21f70:	add	r1, pc, r1
   21f74:	add	r2, pc, r2
   21f78:	mov	r0, r4
   21f7c:	bl	120b8 <mount@plt>
   21f80:	cmp	r0, #0
   21f84:	blt	22240 <mount@plt+0x10188>
   21f88:	mov	r0, r4
   21f8c:	bl	11e00 <strlen@plt>
   21f90:	cmp	r0, #254	; 0xfe
   21f94:	bls	21fc4 <mount@plt+0xff0c>
   21f98:	add	r3, sp, #12672	; 0x3180
   21f9c:	add	r3, r3, #12
   21fa0:	ldr	r2, [r3]
   21fa4:	ldr	r3, [sp, #20]
   21fa8:	mov	r0, r9
   21fac:	ldr	r3, [r3]
   21fb0:	cmp	r2, r3
   21fb4:	bne	22278 <mount@plt+0x101c0>
   21fb8:	add	sp, sp, #12672	; 0x3180
   21fbc:	add	sp, sp, #20
   21fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21fc4:	ldr	r1, [pc, #728]	; 222a4 <mount@plt+0x101ec>
   21fc8:	ldr	r2, [pc, #728]	; 222a8 <mount@plt+0x101f0>
   21fcc:	ldr	r3, [pc, #728]	; 222ac <mount@plt+0x101f4>
   21fd0:	add	r1, pc, r1
   21fd4:	add	r2, pc, r2
   21fd8:	add	r8, sp, #128	; 0x80
   21fdc:	stmib	sp, {r1, r4}
   21fe0:	str	r2, [sp]
   21fe4:	mov	r1, r3
   21fe8:	mov	r2, #1
   21fec:	mov	r0, r8
   21ff0:	bl	12088 <__snprintf_chk@plt>
   21ff4:	mov	r0, r8
   21ff8:	bl	11d1c <opendir@plt>
   21ffc:	subs	sl, r0, #0
   22000:	beq	21f98 <mount@plt+0xfee0>
   22004:	ldr	r3, [pc, #676]	; 222b0 <mount@plt+0x101f8>
   22008:	ldr	fp, [pc, #676]	; 222b4 <mount@plt+0x101fc>
   2200c:	add	r3, pc, r3
   22010:	str	r3, [sp, #24]
   22014:	ldr	r3, [pc, #668]	; 222b8 <mount@plt+0x10200>
   22018:	add	fp, pc, fp
   2201c:	add	r3, pc, r3
   22020:	str	r3, [sp, #28]
   22024:	mov	r0, sl
   22028:	bl	11fb0 <readdir64@plt>
   2202c:	cmp	r0, #0
   22030:	beq	22124 <mount@plt+0x1006c>
   22034:	add	r4, r0, #19
   22038:	mov	r0, r4
   2203c:	mov	r1, fp
   22040:	bl	11b0c <strcmp@plt>
   22044:	cmp	r0, #0
   22048:	beq	22024 <mount@plt+0xff6c>
   2204c:	ldr	r1, [sp, #24]
   22050:	mov	r0, r4
   22054:	bl	11b0c <strcmp@plt>
   22058:	cmp	r0, #0
   2205c:	beq	22024 <mount@plt+0xff6c>
   22060:	ldr	r2, [sp, #28]
   22064:	add	r6, sp, #4480	; 0x1180
   22068:	mov	r3, #4096	; 0x1000
   2206c:	add	r6, r6, #12
   22070:	mov	r1, r3
   22074:	str	r2, [sp]
   22078:	str	r4, [sp, #8]
   2207c:	mov	r2, #1
   22080:	str	r8, [sp, #4]
   22084:	mov	r0, r6
   22088:	bl	12088 <__snprintf_chk@plt>
   2208c:	ldr	r2, [pc, #552]	; 222bc <mount@plt+0x10204>
   22090:	add	r7, sp, #8576	; 0x2180
   22094:	add	r2, pc, r2
   22098:	mov	r3, #4096	; 0x1000
   2209c:	add	r7, r7, #12
   220a0:	mov	r1, r3
   220a4:	stm	sp, {r2, r4}
   220a8:	mov	r0, r7
   220ac:	mov	r2, #1
   220b0:	bl	12088 <__snprintf_chk@plt>
   220b4:	ldr	r2, [pc, #516]	; 222c0 <mount@plt+0x10208>
   220b8:	mov	r3, #0
   220bc:	str	r3, [sp]
   220c0:	mov	r1, r7
   220c4:	mov	r0, r6
   220c8:	mov	r3, #4096	; 0x1000
   220cc:	add	r2, pc, r2
   220d0:	bl	120b8 <mount@plt>
   220d4:	cmp	r0, #0
   220d8:	bge	22024 <mount@plt+0xff6c>
   220dc:	ldr	r3, [pc, #480]	; 222c4 <mount@plt+0x1020c>
   220e0:	ldr	r3, [r5, r3]
   220e4:	ldr	r4, [r3]
   220e8:	bl	11e18 <__errno_location@plt>
   220ec:	ldr	r0, [r0]
   220f0:	bl	11d88 <strerror@plt>
   220f4:	ldr	r2, [pc, #460]	; 222c8 <mount@plt+0x10210>
   220f8:	mov	r3, r6
   220fc:	add	r2, pc, r2
   22100:	mov	r1, #1
   22104:	str	r7, [sp]
   22108:	str	r0, [sp, #4]
   2210c:	mov	r0, r4
   22110:	bl	11ef0 <__fprintf_chk@plt>
   22114:	mov	r0, sl
   22118:	bl	11fb0 <readdir64@plt>
   2211c:	cmp	r0, #0
   22120:	bne	22034 <mount@plt+0xff7c>
   22124:	mov	r0, sl
   22128:	bl	1207c <closedir@plt>
   2212c:	b	21f98 <mount@plt+0xfee0>
   22130:	mov	r0, r7
   22134:	add	r1, sp, #32
   22138:	bl	11ecc <statvfs64@plt>
   2213c:	cmp	r0, #0
   22140:	bne	21f5c <mount@plt+0xfea4>
   22144:	ldr	r3, [r6, #-304]	; 0xfffffed0
   22148:	and	r3, r3, #1
   2214c:	b	21f60 <mount@plt+0xfea8>
   22150:	ldr	r3, [pc, #364]	; 222c4 <mount@plt+0x1020c>
   22154:	mvn	r9, #0
   22158:	ldr	r3, [r5, r3]
   2215c:	ldr	r4, [r3]
   22160:	bl	11e18 <__errno_location@plt>
   22164:	ldr	r0, [r0]
   22168:	bl	11d88 <strerror@plt>
   2216c:	ldr	r2, [pc, #344]	; 222cc <mount@plt+0x10214>
   22170:	mov	r1, #1
   22174:	add	r2, pc, r2
   22178:	mov	r3, r0
   2217c:	mov	r0, r4
   22180:	bl	11ef0 <__fprintf_chk@plt>
   22184:	b	21f98 <mount@plt+0xfee0>
   22188:	ldr	r3, [pc, #308]	; 222c4 <mount@plt+0x1020c>
   2218c:	mvn	r9, #0
   22190:	ldr	r3, [r5, r3]
   22194:	ldr	r5, [r3]
   22198:	bl	11e18 <__errno_location@plt>
   2219c:	ldr	r0, [r0]
   221a0:	bl	11d88 <strerror@plt>
   221a4:	ldr	r2, [pc, #292]	; 222d0 <mount@plt+0x10218>
   221a8:	mov	r3, r4
   221ac:	add	r2, pc, r2
   221b0:	mov	r1, #1
   221b4:	str	r0, [sp]
   221b8:	mov	r0, r5
   221bc:	bl	11ef0 <__fprintf_chk@plt>
   221c0:	b	21f98 <mount@plt+0xfee0>
   221c4:	ldr	r3, [pc, #248]	; 222c4 <mount@plt+0x1020c>
   221c8:	mvn	r9, #0
   221cc:	ldr	r3, [r5, r3]
   221d0:	ldr	r5, [r3]
   221d4:	bl	11e18 <__errno_location@plt>
   221d8:	ldr	r0, [r0]
   221dc:	bl	11d88 <strerror@plt>
   221e0:	ldr	r2, [pc, #236]	; 222d4 <mount@plt+0x1021c>
   221e4:	mov	r3, r4
   221e8:	add	r2, pc, r2
   221ec:	mov	r1, #1
   221f0:	str	r0, [sp]
   221f4:	mov	r0, r5
   221f8:	bl	11ef0 <__fprintf_chk@plt>
   221fc:	mov	r0, r7
   22200:	bl	12064 <close@plt>
   22204:	b	21f98 <mount@plt+0xfee0>
   22208:	ldr	r3, [pc, #180]	; 222c4 <mount@plt+0x1020c>
   2220c:	mvn	r9, #0
   22210:	ldr	r3, [r5, r3]
   22214:	ldr	r4, [r3]
   22218:	bl	11e18 <__errno_location@plt>
   2221c:	ldr	r0, [r0]
   22220:	bl	11d88 <strerror@plt>
   22224:	ldr	r2, [pc, #172]	; 222d8 <mount@plt+0x10220>
   22228:	mov	r1, #1
   2222c:	add	r2, pc, r2
   22230:	mov	r3, r0
   22234:	mov	r0, r4
   22238:	bl	11ef0 <__fprintf_chk@plt>
   2223c:	b	21f98 <mount@plt+0xfee0>
   22240:	ldr	r3, [pc, #124]	; 222c4 <mount@plt+0x1020c>
   22244:	mvn	r9, #0
   22248:	ldr	r3, [r5, r3]
   2224c:	ldr	r4, [r3]
   22250:	bl	11e18 <__errno_location@plt>
   22254:	ldr	r0, [r0]
   22258:	bl	11d88 <strerror@plt>
   2225c:	ldr	r2, [pc, #120]	; 222dc <mount@plt+0x10224>
   22260:	mov	r1, #1
   22264:	add	r2, pc, r2
   22268:	mov	r3, r0
   2226c:	mov	r0, r4
   22270:	bl	11ef0 <__fprintf_chk@plt>
   22274:	b	21f98 <mount@plt+0xfee0>
   22278:	bl	11c2c <__stack_chk_fail@plt>
   2227c:	andeq	sl, r1, r0, lsl #3
   22280:	andeq	r0, r0, r8, lsl #4
   22284:	andeq	r8, r0, ip, lsl ip
   22288:	andeq	r5, r0, r0, ror #30
   2228c:	andeq	r7, r0, ip, lsl r1
   22290:	andeq	r5, r0, r4, lsr pc
   22294:			; <UNDEFINED> instruction: 0x00008fb0
   22298:	andeq	r8, r0, r4, lsl ip
   2229c:	andeq	r8, r0, ip, ror #23
   222a0:	strdeq	r8, [r0], -r0
   222a4:			; <UNDEFINED> instruction: 0x00008bb8
   222a8:	andeq	r5, r0, r4, lsr lr
   222ac:	andeq	r0, r0, sl, lsl #2
   222b0:	andeq	r8, r0, r8, lsl #23
   222b4:	andeq	r5, r0, r4, lsl pc
   222b8:	andeq	r5, r0, ip, ror #27
   222bc:	andeq	r8, r0, r4, lsl #22
   222c0:	andeq	r6, r0, r4, ror pc
   222c4:	andeq	r0, r0, r4, lsl r2
   222c8:	andeq	r8, r0, r4, lsr #21
   222cc:	andeq	r8, r0, r4, asr #19
   222d0:	andeq	r8, r0, r0, lsr #18
   222d4:	andeq	r8, r0, ip, lsl #18
   222d8:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   222dc:	andeq	r8, r0, r8, lsl #18
   222e0:	ldr	r3, [pc, #160]	; 22388 <mount@plt+0x102d0>
   222e4:	ldr	r2, [pc, #160]	; 2238c <mount@plt+0x102d4>
   222e8:	add	r3, pc, r3
   222ec:	push	{r4, r5, lr}
   222f0:	sub	sp, sp, #4096	; 0x1000
   222f4:	ldr	r4, [r3, r2]
   222f8:	sub	sp, sp, #28
   222fc:	add	r2, sp, #4096	; 0x1000
   22300:	add	r2, r2, #20
   22304:	ldr	r3, [r4]
   22308:	mov	r1, #47	; 0x2f
   2230c:	mov	r5, r0
   22310:	str	r3, [r2]
   22314:	bl	11e0c <strchr@plt>
   22318:	cmp	r0, #0
   2231c:	beq	22350 <mount@plt+0x10298>
   22320:	mov	r0, r5
   22324:	mov	r1, #0
   22328:	bl	11d40 <open64@plt>
   2232c:	add	r3, sp, #4096	; 0x1000
   22330:	add	r3, r3, #20
   22334:	ldr	r2, [r3]
   22338:	ldr	r3, [r4]
   2233c:	cmp	r2, r3
   22340:	bne	22384 <mount@plt+0x102cc>
   22344:	add	sp, sp, #4096	; 0x1000
   22348:	add	sp, sp, #28
   2234c:	pop	{r4, r5, pc}
   22350:	ldr	r1, [pc, #56]	; 22390 <mount@plt+0x102d8>
   22354:	ldr	r2, [pc, #56]	; 22394 <mount@plt+0x102dc>
   22358:	add	r1, pc, r1
   2235c:	add	r2, pc, r2
   22360:	stmib	sp, {r1, r5}
   22364:	mov	r3, #4096	; 0x1000
   22368:	add	r5, sp, #20
   2236c:	str	r2, [sp]
   22370:	mov	r0, r5
   22374:	mov	r1, r3
   22378:	mov	r2, #1
   2237c:	bl	12088 <__snprintf_chk@plt>
   22380:	b	22320 <mount@plt+0x10268>
   22384:	bl	11c2c <__stack_chk_fail@plt>
   22388:	andeq	r9, r1, r0, lsl sp
   2238c:	andeq	r0, r0, r8, lsl #4
   22390:	andeq	r8, r0, r4, ror #14
   22394:	andeq	r5, r0, ip, lsr #21
   22398:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2239c:	mov	r9, r0
   223a0:	ldr	r0, [pc, #136]	; 22430 <mount@plt+0x10378>
   223a4:	mov	r8, r1
   223a8:	add	r0, pc, r0
   223ac:	bl	11d1c <opendir@plt>
   223b0:	subs	r5, r0, #0
   223b4:	beq	22428 <mount@plt+0x10370>
   223b8:	ldr	r6, [pc, #116]	; 22434 <mount@plt+0x1037c>
   223bc:	ldr	r7, [pc, #116]	; 22438 <mount@plt+0x10380>
   223c0:	add	r6, pc, r6
   223c4:	add	r7, pc, r7
   223c8:	mov	r0, r5
   223cc:	bl	11fb0 <readdir64@plt>
   223d0:	mov	r1, r6
   223d4:	cmp	r0, #0
   223d8:	add	r4, r0, #19
   223dc:	mov	r0, r4
   223e0:	beq	22418 <mount@plt+0x10360>
   223e4:	bl	11b0c <strcmp@plt>
   223e8:	mov	r1, r7
   223ec:	cmp	r0, #0
   223f0:	mov	r0, r4
   223f4:	beq	223c8 <mount@plt+0x10310>
   223f8:	bl	11b0c <strcmp@plt>
   223fc:	mov	r1, r8
   22400:	cmp	r0, #0
   22404:	mov	r0, r4
   22408:	beq	223c8 <mount@plt+0x10310>
   2240c:	blx	r9
   22410:	cmp	r0, #0
   22414:	beq	223c8 <mount@plt+0x10310>
   22418:	mov	r0, r5
   2241c:	bl	1207c <closedir@plt>
   22420:	mov	r0, #0
   22424:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22428:	mvn	r0, #0
   2242c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22430:	andeq	r8, r0, r4, lsl r7
   22434:	andeq	r5, r0, ip, ror #22
   22438:	ldrdeq	r8, [r0], -r0
   2243c:	push	{r4, r5, r6, lr}
   22440:	cmp	r0, #0
   22444:	ldr	r4, [pc, #120]	; 224c4 <mount@plt+0x1040c>
   22448:	add	r4, pc, r4
   2244c:	popeq	{r4, r5, r6, pc}
   22450:	ldr	r3, [pc, #112]	; 224c8 <mount@plt+0x10410>
   22454:	ldr	r5, [pc, #112]	; 224cc <mount@plt+0x10414>
   22458:	ldr	r3, [r4, r3]
   2245c:	add	r5, pc, r5
   22460:	ldr	r0, [r3]
   22464:	bl	23ad8 <mount@plt+0x11a20>
   22468:	cmp	r0, #0
   2246c:	mov	r3, r0
   22470:	str	r0, [r5]
   22474:	beq	224b0 <mount@plt+0x103f8>
   22478:	ldr	r2, [pc, #80]	; 224d0 <mount@plt+0x10418>
   2247c:	ldr	r2, [r4, r2]
   22480:	ldr	r2, [r2]
   22484:	cmp	r2, #0
   22488:	bne	22498 <mount@plt+0x103e0>
   2248c:	mov	r0, r3
   22490:	pop	{r4, r5, r6, lr}
   22494:	b	23ce8 <mount@plt+0x11c30>
   22498:	mov	r1, #1
   2249c:	bl	23b6c <mount@plt+0x11ab4>
   224a0:	ldr	r3, [r5]
   224a4:	pop	{r4, r5, r6, lr}
   224a8:	mov	r0, r3
   224ac:	b	23ce8 <mount@plt+0x11c30>
   224b0:	ldr	r0, [pc, #28]	; 224d4 <mount@plt+0x1041c>
   224b4:	add	r0, pc, r0
   224b8:	bl	11c80 <perror@plt>
   224bc:	mov	r0, #1
   224c0:	bl	11ddc <exit@plt>
   224c4:			; <UNDEFINED> instruction: 0x00019bb0
   224c8:	andeq	r0, r0, r8, lsr #4
   224cc:	andeq	pc, r1, r4, lsl #22
   224d0:	andeq	r0, r0, ip, lsr #4
   224d4:	andeq	r8, r0, r8, lsl #14
   224d8:	push	{r4, lr}
   224dc:	ldr	r4, [pc, #28]	; 22500 <mount@plt+0x10448>
   224e0:	add	r4, pc, r4
   224e4:	ldr	r0, [r4]
   224e8:	cmp	r0, #0
   224ec:	popeq	{r4, pc}
   224f0:	bl	23d14 <mount@plt+0x11c5c>
   224f4:	mov	r0, r4
   224f8:	pop	{r4, lr}
   224fc:	b	23b00 <mount@plt+0x11a48>
   22500:	andeq	pc, r1, r0, lsl #21
   22504:	ldr	r3, [pc, #12]	; 22518 <mount@plt+0x10460>
   22508:	ldr	r0, [pc, r3]
   2250c:	adds	r0, r0, #0
   22510:	movne	r0, #1
   22514:	bx	lr
   22518:	andeq	pc, r1, r8, asr sl	; <UNPREDICTABLE>
   2251c:	ldr	r3, [pc, #4]	; 22528 <mount@plt+0x10470>
   22520:	ldr	r0, [pc, r3]
   22524:	bx	lr
   22528:	andeq	pc, r1, r0, asr #20
   2252c:	push	{r4, lr}
   22530:	mov	r1, r0
   22534:	ldr	r4, [pc, #36]	; 22560 <mount@plt+0x104a8>
   22538:	add	r4, pc, r4
   2253c:	ldr	r0, [r4]
   22540:	cmp	r0, #0
   22544:	popeq	{r4, pc}
   22548:	cmp	r1, #0
   2254c:	beq	22558 <mount@plt+0x104a0>
   22550:	bl	23b74 <mount@plt+0x11abc>
   22554:	ldr	r0, [r4]
   22558:	pop	{r4, lr}
   2255c:	b	23c8c <mount@plt+0x11bd4>
   22560:	andeq	pc, r1, r8, lsr #20
   22564:	ldr	r3, [pc, #12]	; 22578 <mount@plt+0x104c0>
   22568:	ldr	r0, [pc, r3]
   2256c:	cmp	r0, #0
   22570:	bxeq	lr
   22574:	b	23c94 <mount@plt+0x11bdc>
   22578:	strdeq	pc, [r1], -r8
   2257c:	push	{r4, lr}
   22580:	tst	r0, #6
   22584:	ldr	r4, [pc, #88]	; 225e4 <mount@plt+0x1052c>
   22588:	mov	r2, r1
   2258c:	add	r4, pc, r4
   22590:	ldr	r3, [r4]
   22594:	beq	225c0 <mount@plt+0x10508>
   22598:	cmp	r3, #0
   2259c:	beq	225c8 <mount@plt+0x10510>
   225a0:	cmp	r1, #0
   225a4:	beq	225b4 <mount@plt+0x104fc>
   225a8:	mov	r0, r3
   225ac:	bl	23b74 <mount@plt+0x11abc>
   225b0:	ldr	r3, [r4]
   225b4:	mov	r0, r3
   225b8:	pop	{r4, lr}
   225bc:	b	23ce8 <mount@plt+0x11c30>
   225c0:	cmp	r3, #0
   225c4:	popne	{r4, pc}
   225c8:	tst	r0, #5
   225cc:	popeq	{r4, pc}
   225d0:	ldr	r1, [pc, #16]	; 225e8 <mount@plt+0x10530>
   225d4:	mov	r0, #1
   225d8:	add	r1, pc, r1
   225dc:	pop	{r4, lr}
   225e0:	b	11ec0 <__printf_chk@plt>
   225e4:	ldrdeq	pc, [r1], -r4
   225e8:	andeq	r8, r0, r8, ror #16
   225ec:	ldr	r3, [pc, #64]	; 22634 <mount@plt+0x1057c>
   225f0:	tst	r0, #6
   225f4:	add	r3, pc, r3
   225f8:	ldr	r3, [r3]
   225fc:	beq	22610 <mount@plt+0x10558>
   22600:	cmp	r3, #0
   22604:	beq	22618 <mount@plt+0x10560>
   22608:	mov	r0, r3
   2260c:	b	23d14 <mount@plt+0x11c5c>
   22610:	cmp	r3, #0
   22614:	bxne	lr
   22618:	tst	r0, #5
   2261c:	bxeq	lr
   22620:	mov	r2, r1
   22624:	ldr	r1, [pc, #12]	; 22638 <mount@plt+0x10580>
   22628:	mov	r0, #1
   2262c:	add	r1, pc, r1
   22630:	b	11ec0 <__printf_chk@plt>
   22634:	andeq	pc, r1, ip, ror #18
   22638:	andeq	r8, r0, r4, lsl r8
   2263c:	ldr	ip, [pc, #128]	; 226c4 <mount@plt+0x1060c>
   22640:	push	{r4, r5, lr}
   22644:	add	ip, pc, ip
   22648:	ldr	lr, [pc, #120]	; 226c8 <mount@plt+0x10610>
   2264c:	tst	r0, #6
   22650:	mov	r4, r2
   22654:	mov	r5, r3
   22658:	ldr	ip, [ip]
   2265c:	add	lr, pc, lr
   22660:	ldr	r2, [sp, #12]
   22664:	beq	22688 <mount@plt+0x105d0>
   22668:	cmp	ip, #0
   2266c:	beq	22690 <mount@plt+0x105d8>
   22670:	cmp	r4, #0
   22674:	beq	226b4 <mount@plt+0x105fc>
   22678:	mov	r1, r4
   2267c:	mov	r0, ip
   22680:	pop	{r4, r5, lr}
   22684:	b	23fd4 <mount@plt+0x11f1c>
   22688:	cmp	ip, #0
   2268c:	popne	{r4, r5, pc}
   22690:	tst	r0, #5
   22694:	popeq	{r4, r5, pc}
   22698:	ldr	r0, [pc, #44]	; 226cc <mount@plt+0x10614>
   2269c:	mov	r3, r2
   226a0:	mov	r2, r5
   226a4:	ldr	r0, [lr, r0]
   226a8:	pop	{r4, r5, lr}
   226ac:	ldr	r0, [r0]
   226b0:	b	23114 <mount@plt+0x1105c>
   226b4:	mov	r1, r2
   226b8:	mov	r0, ip
   226bc:	pop	{r4, r5, lr}
   226c0:	b	23e70 <mount@plt+0x11db8>
   226c4:	andeq	pc, r1, ip, lsl r9	; <UNPREDICTABLE>
   226c8:	muleq	r1, ip, r9
   226cc:	andeq	r0, r0, r8, lsr #4
   226d0:	ldr	ip, [pc, #128]	; 22758 <mount@plt+0x106a0>
   226d4:	push	{r4, r6, r7, lr}
   226d8:	add	ip, pc, ip
   226dc:	ldr	lr, [pc, #120]	; 2275c <mount@plt+0x106a4>
   226e0:	tst	r0, #6
   226e4:	ldr	ip, [ip]
   226e8:	add	lr, pc, lr
   226ec:	ldrd	r6, [sp, #16]
   226f0:	beq	22720 <mount@plt+0x10668>
   226f4:	cmp	ip, #0
   226f8:	beq	22728 <mount@plt+0x10670>
   226fc:	mov	r4, r2
   22700:	cmp	r4, #0
   22704:	mov	r2, r6
   22708:	mov	r3, r7
   2270c:	beq	2274c <mount@plt+0x10694>
   22710:	mov	r1, r4
   22714:	mov	r0, ip
   22718:	pop	{r4, r6, r7, lr}
   2271c:	b	23ff4 <mount@plt+0x11f3c>
   22720:	cmp	ip, #0
   22724:	popne	{r4, r6, r7, pc}
   22728:	tst	r0, #5
   2272c:	popeq	{r4, r6, r7, pc}
   22730:	ldr	r0, [pc, #40]	; 22760 <mount@plt+0x106a8>
   22734:	mov	r2, r3
   22738:	ldr	r3, [lr, r0]
   2273c:	strd	r6, [sp, #16]
   22740:	pop	{r4, r6, r7, lr}
   22744:	ldr	r0, [r3]
   22748:	b	23114 <mount@plt+0x1105c>
   2274c:	mov	r0, ip
   22750:	pop	{r4, r6, r7, lr}
   22754:	b	23e84 <mount@plt+0x11dcc>
   22758:	andeq	pc, r1, r8, lsl #17
   2275c:	andeq	r9, r1, r0, lsl r9
   22760:	andeq	r0, r0, r8, lsr #4
   22764:	ldr	ip, [pc, #128]	; 227ec <mount@plt+0x10734>
   22768:	push	{r4, r5, lr}
   2276c:	add	ip, pc, ip
   22770:	ldr	lr, [pc, #120]	; 227f0 <mount@plt+0x10738>
   22774:	tst	r0, #6
   22778:	mov	r4, r2
   2277c:	mov	r5, r3
   22780:	ldr	ip, [ip]
   22784:	add	lr, pc, lr
   22788:	ldrh	r2, [sp, #12]
   2278c:	beq	227b0 <mount@plt+0x106f8>
   22790:	cmp	ip, #0
   22794:	beq	227b8 <mount@plt+0x10700>
   22798:	cmp	r4, #0
   2279c:	beq	227dc <mount@plt+0x10724>
   227a0:	mov	r1, r4
   227a4:	mov	r0, ip
   227a8:	pop	{r4, r5, lr}
   227ac:	b	23f6c <mount@plt+0x11eb4>
   227b0:	cmp	ip, #0
   227b4:	popne	{r4, r5, pc}
   227b8:	tst	r0, #5
   227bc:	popeq	{r4, r5, pc}
   227c0:	ldr	r0, [pc, #44]	; 227f4 <mount@plt+0x1073c>
   227c4:	mov	r3, r2
   227c8:	mov	r2, r5
   227cc:	ldr	r0, [lr, r0]
   227d0:	pop	{r4, r5, lr}
   227d4:	ldr	r0, [r0]
   227d8:	b	23114 <mount@plt+0x1105c>
   227dc:	mov	r1, r2
   227e0:	mov	r0, ip
   227e4:	pop	{r4, r5, lr}
   227e8:	b	23e10 <mount@plt+0x11d58>
   227ec:	strdeq	pc, [r1], -r4
   227f0:	andeq	r9, r1, r4, ror r8
   227f4:	andeq	r0, r0, r8, lsr #4
   227f8:	ldr	ip, [pc, #128]	; 22880 <mount@plt+0x107c8>
   227fc:	push	{r4, r5, lr}
   22800:	add	ip, pc, ip
   22804:	ldr	lr, [pc, #120]	; 22884 <mount@plt+0x107cc>
   22808:	tst	r0, #6
   2280c:	mov	r4, r2
   22810:	mov	r5, r3
   22814:	ldr	ip, [ip]
   22818:	add	lr, pc, lr
   2281c:	ldr	r2, [sp, #12]
   22820:	beq	22844 <mount@plt+0x1078c>
   22824:	cmp	ip, #0
   22828:	beq	2284c <mount@plt+0x10794>
   2282c:	cmp	r4, #0
   22830:	beq	22870 <mount@plt+0x107b8>
   22834:	mov	r1, r4
   22838:	mov	r0, ip
   2283c:	pop	{r4, r5, lr}
   22840:	b	23efc <mount@plt+0x11e44>
   22844:	cmp	ip, #0
   22848:	popne	{r4, r5, pc}
   2284c:	tst	r0, #5
   22850:	popeq	{r4, r5, pc}
   22854:	ldr	r0, [pc, #44]	; 22888 <mount@plt+0x107d0>
   22858:	mov	r3, r2
   2285c:	mov	r2, r5
   22860:	ldr	r0, [lr, r0]
   22864:	pop	{r4, r5, lr}
   22868:	ldr	r0, [r0]
   2286c:	b	23114 <mount@plt+0x1105c>
   22870:	mov	r1, r2
   22874:	mov	r0, ip
   22878:	pop	{r4, r5, lr}
   2287c:	b	23e24 <mount@plt+0x11d6c>
   22880:	andeq	pc, r1, r0, ror #14
   22884:	andeq	r9, r1, r0, ror #15
   22888:	andeq	r0, r0, r8, lsr #4
   2288c:	ldr	ip, [pc, #128]	; 22914 <mount@plt+0x1085c>
   22890:	push	{r4, r6, r7, lr}
   22894:	add	ip, pc, ip
   22898:	ldr	lr, [pc, #120]	; 22918 <mount@plt+0x10860>
   2289c:	tst	r0, #6
   228a0:	ldr	ip, [ip]
   228a4:	add	lr, pc, lr
   228a8:	ldrd	r6, [sp, #16]
   228ac:	beq	228dc <mount@plt+0x10824>
   228b0:	cmp	ip, #0
   228b4:	beq	228e4 <mount@plt+0x1082c>
   228b8:	mov	r4, r2
   228bc:	cmp	r4, #0
   228c0:	mov	r2, r6
   228c4:	mov	r3, r7
   228c8:	beq	22908 <mount@plt+0x10850>
   228cc:	mov	r1, r4
   228d0:	mov	r0, ip
   228d4:	pop	{r4, r6, r7, lr}
   228d8:	b	23f1c <mount@plt+0x11e64>
   228dc:	cmp	ip, #0
   228e0:	popne	{r4, r6, r7, pc}
   228e4:	tst	r0, #5
   228e8:	popeq	{r4, r6, r7, pc}
   228ec:	ldr	r0, [pc, #40]	; 2291c <mount@plt+0x10864>
   228f0:	mov	r2, r3
   228f4:	ldr	r3, [lr, r0]
   228f8:	strd	r6, [sp, #16]
   228fc:	pop	{r4, r6, r7, lr}
   22900:	ldr	r0, [r3]
   22904:	b	23114 <mount@plt+0x1105c>
   22908:	mov	r0, ip
   2290c:	pop	{r4, r6, r7, lr}
   22910:	b	23e38 <mount@plt+0x11d80>
   22914:	andeq	pc, r1, ip, asr #13
   22918:	andeq	r9, r1, r4, asr r7
   2291c:	andeq	r0, r0, r8, lsr #4
   22920:	ldr	ip, [pc, #128]	; 229a8 <mount@plt+0x108f0>
   22924:	push	{r4, r5, lr}
   22928:	add	ip, pc, ip
   2292c:	ldr	lr, [pc, #120]	; 229ac <mount@plt+0x108f4>
   22930:	tst	r0, #6
   22934:	mov	r4, r2
   22938:	mov	r5, r3
   2293c:	ldr	ip, [ip]
   22940:	add	lr, pc, lr
   22944:	ldr	r2, [sp, #12]
   22948:	beq	2296c <mount@plt+0x108b4>
   2294c:	cmp	ip, #0
   22950:	beq	22974 <mount@plt+0x108bc>
   22954:	cmp	r4, #0
   22958:	beq	22998 <mount@plt+0x108e0>
   2295c:	mov	r1, r4
   22960:	mov	r0, ip
   22964:	pop	{r4, r5, lr}
   22968:	b	23f8c <mount@plt+0x11ed4>
   2296c:	cmp	ip, #0
   22970:	popne	{r4, r5, pc}
   22974:	tst	r0, #5
   22978:	popeq	{r4, r5, pc}
   2297c:	ldr	r0, [pc, #44]	; 229b0 <mount@plt+0x108f8>
   22980:	mov	r3, r2
   22984:	mov	r2, r5
   22988:	ldr	r0, [lr, r0]
   2298c:	pop	{r4, r5, lr}
   22990:	ldr	r0, [r0]
   22994:	b	23114 <mount@plt+0x1105c>
   22998:	mov	r1, r2
   2299c:	mov	r0, ip
   229a0:	pop	{r4, r5, lr}
   229a4:	b	23e58 <mount@plt+0x11da0>
   229a8:	andeq	pc, r1, r8, lsr r6	; <UNPREDICTABLE>
   229ac:			; <UNDEFINED> instruction: 0x000196b8
   229b0:	andeq	r0, r0, r8, lsr #4
   229b4:	ldr	ip, [pc, #128]	; 22a3c <mount@plt+0x10984>
   229b8:	push	{r4, r6, r7, lr}
   229bc:	add	ip, pc, ip
   229c0:	ldr	lr, [pc, #120]	; 22a40 <mount@plt+0x10988>
   229c4:	tst	r0, #6
   229c8:	ldr	ip, [ip]
   229cc:	add	lr, pc, lr
   229d0:	ldrd	r6, [sp, #16]
   229d4:	beq	22a04 <mount@plt+0x1094c>
   229d8:	cmp	ip, #0
   229dc:	beq	22a0c <mount@plt+0x10954>
   229e0:	mov	r4, r2
   229e4:	cmp	r4, #0
   229e8:	mov	r2, r6
   229ec:	mov	r3, r7
   229f0:	beq	22a30 <mount@plt+0x10978>
   229f4:	mov	r1, r4
   229f8:	mov	r0, ip
   229fc:	pop	{r4, r6, r7, lr}
   22a00:	b	23fac <mount@plt+0x11ef4>
   22a04:	cmp	ip, #0
   22a08:	popne	{r4, r6, r7, pc}
   22a0c:	tst	r0, #5
   22a10:	popeq	{r4, r6, r7, pc}
   22a14:	ldr	r0, [pc, #40]	; 22a44 <mount@plt+0x1098c>
   22a18:	mov	r2, r3
   22a1c:	ldr	r3, [lr, r0]
   22a20:	strd	r6, [sp, #16]
   22a24:	pop	{r4, r6, r7, lr}
   22a28:	ldr	r0, [r3]
   22a2c:	b	23114 <mount@plt+0x1105c>
   22a30:	mov	r0, ip
   22a34:	pop	{r4, r6, r7, lr}
   22a38:	b	23e6c <mount@plt+0x11db4>
   22a3c:	andeq	pc, r1, r4, lsr #11
   22a40:	andeq	r9, r1, ip, lsr #12
   22a44:	andeq	r0, r0, r8, lsr #4
   22a48:	ldr	ip, [pc, #136]	; 22ad8 <mount@plt+0x10a20>
   22a4c:	push	{r4, r5, lr}
   22a50:	add	ip, pc, ip
   22a54:	ldr	lr, [pc, #128]	; 22adc <mount@plt+0x10a24>
   22a58:	tst	r0, #6
   22a5c:	sub	sp, sp, #12
   22a60:	ldr	ip, [ip]
   22a64:	add	lr, pc, lr
   22a68:	vmov.f64	d7, d0
   22a6c:	beq	22a94 <mount@plt+0x109dc>
   22a70:	cmp	ip, #0
   22a74:	beq	22aa4 <mount@plt+0x109ec>
   22a78:	cmp	r2, #0
   22a7c:	beq	22ac8 <mount@plt+0x10a10>
   22a80:	mov	r1, r2
   22a84:	mov	r0, ip
   22a88:	add	sp, sp, #12
   22a8c:	pop	{r4, r5, lr}
   22a90:	b	23ed4 <mount@plt+0x11e1c>
   22a94:	cmp	ip, #0
   22a98:	beq	22aa4 <mount@plt+0x109ec>
   22a9c:	add	sp, sp, #12
   22aa0:	pop	{r4, r5, pc}
   22aa4:	tst	r0, #5
   22aa8:	beq	22a9c <mount@plt+0x109e4>
   22aac:	mov	r2, r3
   22ab0:	ldr	r3, [pc, #40]	; 22ae0 <mount@plt+0x10a28>
   22ab4:	ldr	r3, [lr, r3]
   22ab8:	vstr	d7, [sp]
   22abc:	ldr	r0, [r3]
   22ac0:	bl	23114 <mount@plt+0x1105c>
   22ac4:	b	22a9c <mount@plt+0x109e4>
   22ac8:	mov	r0, ip
   22acc:	add	sp, sp, #12
   22ad0:	pop	{r4, r5, lr}
   22ad4:	b	23dfc <mount@plt+0x11d44>
   22ad8:	andeq	pc, r1, r0, lsl r5	; <UNPREDICTABLE>
   22adc:	muleq	r1, r4, r5
   22ae0:	andeq	r0, r0, r8, lsr #4
   22ae4:	ldr	ip, [pc, #180]	; 22ba0 <mount@plt+0x10ae8>
   22ae8:	push	{r4, lr}
   22aec:	add	ip, pc, ip
   22af0:	ldr	lr, [pc, #172]	; 22ba4 <mount@plt+0x10aec>
   22af4:	tst	r0, #6
   22af8:	mov	r4, r2
   22afc:	ldr	ip, [ip]
   22b00:	mov	r2, r3
   22b04:	add	lr, pc, lr
   22b08:	ldr	r3, [sp, #8]
   22b0c:	beq	22b58 <mount@plt+0x10aa0>
   22b10:	cmp	ip, #0
   22b14:	beq	22b60 <mount@plt+0x10aa8>
   22b18:	cmp	r4, #0
   22b1c:	clz	r0, r3
   22b20:	lsr	r0, r0, #5
   22b24:	moveq	r0, #0
   22b28:	cmp	r0, #0
   22b2c:	bne	22b90 <mount@plt+0x10ad8>
   22b30:	adds	r2, r3, #0
   22b34:	movne	r2, #1
   22b38:	cmp	r4, #0
   22b3c:	movne	r2, #0
   22b40:	cmp	r2, #0
   22b44:	beq	22b7c <mount@plt+0x10ac4>
   22b48:	mov	r1, r3
   22b4c:	mov	r0, ip
   22b50:	pop	{r4, lr}
   22b54:	b	23d7c <mount@plt+0x11cc4>
   22b58:	cmp	ip, #0
   22b5c:	popne	{r4, pc}
   22b60:	tst	r0, #5
   22b64:	popeq	{r4, pc}
   22b68:	ldr	r0, [pc, #56]	; 22ba8 <mount@plt+0x10af0>
   22b6c:	ldr	r0, [lr, r0]
   22b70:	pop	{r4, lr}
   22b74:	ldr	r0, [r0]
   22b78:	b	23114 <mount@plt+0x1105c>
   22b7c:	mov	r1, r4
   22b80:	mov	r2, r3
   22b84:	mov	r0, ip
   22b88:	pop	{r4, lr}
   22b8c:	b	23e94 <mount@plt+0x11ddc>
   22b90:	mov	r1, r4
   22b94:	mov	r0, ip
   22b98:	pop	{r4, lr}
   22b9c:	b	23b74 <mount@plt+0x11abc>
   22ba0:	andeq	pc, r1, r4, ror r4	; <UNPREDICTABLE>
   22ba4:	strdeq	r9, [r1], -r4
   22ba8:	andeq	r0, r0, r8, lsr #4
   22bac:	ldr	ip, [pc, #152]	; 22c4c <mount@plt+0x10b94>
   22bb0:	push	{r4, lr}
   22bb4:	add	ip, pc, ip
   22bb8:	mov	r4, r3
   22bbc:	ldr	r3, [ip]
   22bc0:	ldr	ip, [pc, #136]	; 22c50 <mount@plt+0x10b98>
   22bc4:	tst	r0, #6
   22bc8:	mov	lr, r2
   22bcc:	add	ip, pc, ip
   22bd0:	ldrb	r2, [sp, #8]
   22bd4:	beq	22bf8 <mount@plt+0x10b40>
   22bd8:	cmp	r3, #0
   22bdc:	beq	22c00 <mount@plt+0x10b48>
   22be0:	cmp	lr, #0
   22be4:	beq	22c30 <mount@plt+0x10b78>
   22be8:	mov	r1, lr
   22bec:	mov	r0, r3
   22bf0:	pop	{r4, lr}
   22bf4:	b	23eb4 <mount@plt+0x11dfc>
   22bf8:	cmp	r3, #0
   22bfc:	popne	{r4, pc}
   22c00:	tst	r0, #5
   22c04:	popeq	{r4, pc}
   22c08:	ldr	r3, [pc, #68]	; 22c54 <mount@plt+0x10b9c>
   22c0c:	cmp	r2, #0
   22c10:	ldr	r3, [ip, r3]
   22c14:	ldr	r0, [r3]
   22c18:	bne	22c40 <mount@plt+0x10b88>
   22c1c:	ldr	r3, [pc, #52]	; 22c58 <mount@plt+0x10ba0>
   22c20:	add	r3, pc, r3
   22c24:	mov	r2, r4
   22c28:	pop	{r4, lr}
   22c2c:	b	23114 <mount@plt+0x1105c>
   22c30:	mov	r1, r2
   22c34:	mov	r0, r3
   22c38:	pop	{r4, lr}
   22c3c:	b	23db8 <mount@plt+0x11d00>
   22c40:	ldr	r3, [pc, #20]	; 22c5c <mount@plt+0x10ba4>
   22c44:	add	r3, pc, r3
   22c48:	b	22c24 <mount@plt+0x10b6c>
   22c4c:	andeq	pc, r1, ip, lsr #7
   22c50:	andeq	r9, r1, ip, lsr #8
   22c54:	andeq	r0, r0, r8, lsr #4
   22c58:			; <UNDEFINED> instruction: 0x00007fb0
   22c5c:	andeq	r7, r0, r4, lsl #31
   22c60:	push	{r4, r5, r6, r7, lr}
   22c64:	sub	sp, sp, #92	; 0x5c
   22c68:	ldr	lr, [pc, #196]	; 22d34 <mount@plt+0x10c7c>
   22c6c:	ldr	ip, [pc, #196]	; 22d38 <mount@plt+0x10c80>
   22c70:	add	lr, pc, lr
   22c74:	tst	r0, #6
   22c78:	ldr	r4, [lr, ip]
   22c7c:	ldr	ip, [pc, #184]	; 22d3c <mount@plt+0x10c84>
   22c80:	add	ip, pc, ip
   22c84:	ldr	r5, [r4]
   22c88:	ldr	ip, [ip]
   22c8c:	str	r5, [sp, #84]	; 0x54
   22c90:	beq	22ce8 <mount@plt+0x10c30>
   22c94:	cmp	ip, #0
   22c98:	beq	22d08 <mount@plt+0x10c50>
   22c9c:	ldrd	r0, [sp, #112]	; 0x70
   22ca0:	mov	r6, r2
   22ca4:	ldr	r2, [pc, #148]	; 22d40 <mount@plt+0x10c88>
   22ca8:	mov	r3, #64	; 0x40
   22cac:	add	r5, sp, #20
   22cb0:	add	r2, pc, r2
   22cb4:	strd	r0, [sp, #8]
   22cb8:	str	r2, [sp]
   22cbc:	mov	r1, r3
   22cc0:	mov	r0, r5
   22cc4:	mov	r2, #1
   22cc8:	bl	12088 <__snprintf_chk@plt>
   22ccc:	str	r5, [sp]
   22cd0:	mov	r2, r6
   22cd4:	mov	r3, #0
   22cd8:	mov	r1, #6
   22cdc:	mov	r0, #2
   22ce0:	bl	22ae4 <mount@plt+0x10a2c>
   22ce4:	b	22cf0 <mount@plt+0x10c38>
   22ce8:	cmp	ip, #0
   22cec:	beq	22d08 <mount@plt+0x10c50>
   22cf0:	ldr	r2, [sp, #84]	; 0x54
   22cf4:	ldr	r3, [r4]
   22cf8:	cmp	r2, r3
   22cfc:	bne	22d30 <mount@plt+0x10c78>
   22d00:	add	sp, sp, #92	; 0x5c
   22d04:	pop	{r4, r5, r6, r7, pc}
   22d08:	tst	r0, #5
   22d0c:	beq	22cf0 <mount@plt+0x10c38>
   22d10:	ldr	r0, [pc, #44]	; 22d44 <mount@plt+0x10c8c>
   22d14:	mov	r2, r3
   22d18:	ldrd	r6, [sp, #112]	; 0x70
   22d1c:	ldr	r3, [lr, r0]
   22d20:	strd	r6, [sp]
   22d24:	ldr	r0, [r3]
   22d28:	bl	23114 <mount@plt+0x1105c>
   22d2c:	b	22cf0 <mount@plt+0x10c38>
   22d30:	bl	11c2c <__stack_chk_fail@plt>
   22d34:	andeq	r9, r1, r8, lsl #7
   22d38:	andeq	r0, r0, r8, lsl #4
   22d3c:	andeq	pc, r1, r0, ror #5
   22d40:	andeq	r7, r0, r8, lsr #30
   22d44:	andeq	r0, r0, r8, lsr #4
   22d48:	push	{r4, r5, r6, r7, lr}
   22d4c:	sub	sp, sp, #84	; 0x54
   22d50:	ldr	lr, [pc, #208]	; 22e28 <mount@plt+0x10d70>
   22d54:	ldr	ip, [pc, #208]	; 22e2c <mount@plt+0x10d74>
   22d58:	add	lr, pc, lr
   22d5c:	ldr	r5, [pc, #204]	; 22e30 <mount@plt+0x10d78>
   22d60:	ldr	r4, [lr, ip]
   22d64:	add	r5, pc, r5
   22d68:	tst	r0, #6
   22d6c:	ldr	ip, [r4]
   22d70:	str	ip, [sp, #76]	; 0x4c
   22d74:	ldr	ip, [r5]
   22d78:	beq	22dd0 <mount@plt+0x10d18>
   22d7c:	cmp	ip, #0
   22d80:	beq	22df0 <mount@plt+0x10d38>
   22d84:	mov	r6, r2
   22d88:	ldr	r2, [pc, #164]	; 22e34 <mount@plt+0x10d7c>
   22d8c:	ldr	r1, [sp, #104]	; 0x68
   22d90:	add	r2, pc, r2
   22d94:	mov	r3, #64	; 0x40
   22d98:	add	r7, sp, #12
   22d9c:	str	r1, [sp, #4]
   22da0:	str	r2, [sp]
   22da4:	mov	r0, r7
   22da8:	mov	r1, r3
   22dac:	mov	r2, #1
   22db0:	bl	12088 <__snprintf_chk@plt>
   22db4:	cmp	r6, #0
   22db8:	beq	22e14 <mount@plt+0x10d5c>
   22dbc:	mov	r2, r7
   22dc0:	mov	r1, r6
   22dc4:	ldr	r0, [r5]
   22dc8:	bl	23e94 <mount@plt+0x11ddc>
   22dcc:	b	22dd8 <mount@plt+0x10d20>
   22dd0:	cmp	ip, #0
   22dd4:	beq	22df0 <mount@plt+0x10d38>
   22dd8:	ldr	r2, [sp, #76]	; 0x4c
   22ddc:	ldr	r3, [r4]
   22de0:	cmp	r2, r3
   22de4:	bne	22e24 <mount@plt+0x10d6c>
   22de8:	add	sp, sp, #84	; 0x54
   22dec:	pop	{r4, r5, r6, r7, pc}
   22df0:	tst	r0, #5
   22df4:	beq	22dd8 <mount@plt+0x10d20>
   22df8:	ldr	r0, [pc, #56]	; 22e38 <mount@plt+0x10d80>
   22dfc:	mov	r2, r3
   22e00:	ldr	r3, [sp, #104]	; 0x68
   22e04:	ldr	r0, [lr, r0]
   22e08:	ldr	r0, [r0]
   22e0c:	bl	23114 <mount@plt+0x1105c>
   22e10:	b	22dd8 <mount@plt+0x10d20>
   22e14:	mov	r1, r7
   22e18:	ldr	r0, [r5]
   22e1c:	bl	23d7c <mount@plt+0x11cc4>
   22e20:	b	22dd8 <mount@plt+0x10d20>
   22e24:	bl	11c2c <__stack_chk_fail@plt>
   22e28:	andeq	r9, r1, r0, lsr #5
   22e2c:	andeq	r0, r0, r8, lsl #4
   22e30:	strdeq	pc, [r1], -ip
   22e34:	andeq	r5, r0, ip, ror #4
   22e38:	andeq	r0, r0, r8, lsr #4
   22e3c:	ldr	ip, [pc, #116]	; 22eb8 <mount@plt+0x10e00>
   22e40:	push	{r4, lr}
   22e44:	add	ip, pc, ip
   22e48:	ldr	lr, [pc, #108]	; 22ebc <mount@plt+0x10e04>
   22e4c:	tst	r0, #6
   22e50:	mov	r4, r3
   22e54:	ldr	ip, [ip]
   22e58:	add	lr, pc, lr
   22e5c:	ldr	r3, [sp, #8]
   22e60:	beq	22e84 <mount@plt+0x10dcc>
   22e64:	cmp	ip, #0
   22e68:	beq	22e8c <mount@plt+0x10dd4>
   22e6c:	cmp	r2, #0
   22e70:	beq	22eac <mount@plt+0x10df4>
   22e74:	mov	r1, r2
   22e78:	mov	r0, ip
   22e7c:	pop	{r4, lr}
   22e80:	b	2401c <mount@plt+0x11f64>
   22e84:	cmp	ip, #0
   22e88:	popne	{r4, pc}
   22e8c:	tst	r0, #5
   22e90:	popeq	{r4, pc}
   22e94:	ldr	r0, [pc, #36]	; 22ec0 <mount@plt+0x10e08>
   22e98:	mov	r2, r4
   22e9c:	ldr	r0, [lr, r0]
   22ea0:	pop	{r4, lr}
   22ea4:	ldr	r0, [r0]
   22ea8:	b	23114 <mount@plt+0x1105c>
   22eac:	mov	r0, ip
   22eb0:	pop	{r4, lr}
   22eb4:	b	23dec <mount@plt+0x11d34>
   22eb8:	andeq	pc, r1, ip, lsl r1	; <UNPREDICTABLE>
   22ebc:	andeq	r9, r1, r0, lsr #3
   22ec0:	andeq	r0, r0, r8, lsr #4
   22ec4:	ldr	r3, [pc, #48]	; 22efc <mount@plt+0x10e44>
   22ec8:	ldr	r2, [pc, #48]	; 22f00 <mount@plt+0x10e48>
   22ecc:	add	r3, pc, r3
   22ed0:	add	r2, pc, r2
   22ed4:	ldr	r3, [r3]
   22ed8:	cmp	r3, #0
   22edc:	bxne	lr
   22ee0:	ldr	r3, [pc, #28]	; 22f04 <mount@plt+0x10e4c>
   22ee4:	ldr	r1, [pc, #28]	; 22f08 <mount@plt+0x10e50>
   22ee8:	mov	r0, #1
   22eec:	ldr	r3, [r2, r3]
   22ef0:	add	r1, pc, r1
   22ef4:	ldr	r2, [r3]
   22ef8:	b	11ec0 <__printf_chk@plt>
   22efc:	muleq	r1, r4, r0
   22f00:	andeq	r9, r1, r8, lsr #2
   22f04:	andeq	r0, r0, r4, lsr #4
   22f08:	andeq	r7, r0, r0, asr pc
   22f0c:	cmp	r1, #0
   22f10:	clz	r3, r0
   22f14:	lsr	r3, r3, #5
   22f18:	moveq	r1, r3
   22f1c:	movne	r1, #1
   22f20:	ldr	r3, [pc, #168]	; 22fd0 <mount@plt+0x10f18>
   22f24:	cmp	r1, #0
   22f28:	add	r3, pc, r3
   22f2c:	bne	22fc8 <mount@plt+0x10f10>
   22f30:	cmp	r0, #2
   22f34:	push	{r4, r5, r6, lr}
   22f38:	beq	22f60 <mount@plt+0x10ea8>
   22f3c:	ldr	r2, [pc, #144]	; 22fd4 <mount@plt+0x10f1c>
   22f40:	ldr	r3, [r3, r2]
   22f44:	ldr	r0, [r3]
   22f48:	bl	11ee4 <fileno@plt>
   22f4c:	bl	12028 <isatty@plt>
   22f50:	cmp	r0, #0
   22f54:	bne	22f60 <mount@plt+0x10ea8>
   22f58:	mov	r0, #0
   22f5c:	pop	{r4, r5, r6, pc}
   22f60:	ldr	r5, [pc, #112]	; 22fd8 <mount@plt+0x10f20>
   22f64:	ldr	r0, [pc, #112]	; 22fdc <mount@plt+0x10f24>
   22f68:	add	r5, pc, r5
   22f6c:	mov	r4, #1
   22f70:	add	r0, pc, r0
   22f74:	str	r4, [r5]
   22f78:	bl	11d4c <getenv@plt>
   22f7c:	cmp	r0, #0
   22f80:	beq	22fc0 <mount@plt+0x10f08>
   22f84:	mov	r1, #59	; 0x3b
   22f88:	bl	11f74 <strrchr@plt>
   22f8c:	subs	r1, r0, #0
   22f90:	beq	22fc0 <mount@plt+0x10f08>
   22f94:	ldrb	r2, [r1, #1]
   22f98:	sub	r3, r2, #48	; 0x30
   22f9c:	cmp	r2, #56	; 0x38
   22fa0:	cmpne	r3, #6
   22fa4:	movls	r0, #1
   22fa8:	movhi	r0, #0
   22fac:	bhi	22fc0 <mount@plt+0x10f08>
   22fb0:	ldrb	r3, [r1, #2]
   22fb4:	cmp	r3, #0
   22fb8:	streq	r4, [r5, #4]
   22fbc:	pop	{r4, r5, r6, pc}
   22fc0:	mov	r0, r4
   22fc4:	pop	{r4, r5, r6, pc}
   22fc8:	mov	r0, #0
   22fcc:	bx	lr
   22fd0:	ldrdeq	r9, [r1], -r0
   22fd4:	andeq	r0, r0, r8, lsr #4
   22fd8:	strdeq	lr, [r1], -ip
   22fdc:	andeq	r7, r0, r8, lsr #25
   22fe0:	ldr	r3, [pc, #276]	; 230fc <mount@plt+0x11044>
   22fe4:	ldr	r2, [pc, #276]	; 23100 <mount@plt+0x11048>
   22fe8:	add	r3, pc, r3
   22fec:	push	{r4, r5, r6, r7, fp, lr}
   22ff0:	add	fp, sp, #20
   22ff4:	sub	sp, sp, #8
   22ff8:	ldr	r6, [r3, r2]
   22ffc:	subs	r5, r1, #0
   23000:	ldr	r3, [r6]
   23004:	str	r3, [fp, #-24]	; 0xffffffe8
   23008:	beq	230cc <mount@plt+0x11014>
   2300c:	mov	r4, r0
   23010:	bl	11e00 <strlen@plt>
   23014:	mov	r1, r4
   23018:	add	r3, r0, #8
   2301c:	bic	r3, r3, #7
   23020:	sub	sp, sp, r3
   23024:	add	r2, r0, #1
   23028:	mov	r0, sp
   2302c:	bl	11bc0 <memcpy@plt>
   23030:	mov	r1, #61	; 0x3d
   23034:	mov	r7, r0
   23038:	bl	11b6c <strchrnul@plt>
   2303c:	ldr	r1, [pc, #192]	; 23104 <mount@plt+0x1104c>
   23040:	add	r1, pc, r1
   23044:	ldrb	r3, [r0]
   23048:	mov	r4, r0
   2304c:	mov	r0, r7
   23050:	cmp	r3, #0
   23054:	movne	r3, #0
   23058:	strbne	r3, [r4], #1
   2305c:	bl	1ddd0 <mount@plt+0xbd18>
   23060:	cmp	r0, #0
   23064:	bne	230cc <mount@plt+0x11014>
   23068:	ldrb	r3, [r4]
   2306c:	cmp	r3, #0
   23070:	beq	230e8 <mount@plt+0x11030>
   23074:	ldr	r1, [pc, #140]	; 23108 <mount@plt+0x11050>
   23078:	mov	r0, r4
   2307c:	add	r1, pc, r1
   23080:	bl	11b0c <strcmp@plt>
   23084:	cmp	r0, #0
   23088:	beq	230e8 <mount@plt+0x11030>
   2308c:	ldr	r1, [pc, #120]	; 2310c <mount@plt+0x11054>
   23090:	mov	r0, r4
   23094:	add	r1, pc, r1
   23098:	bl	11b0c <strcmp@plt>
   2309c:	cmp	r0, #0
   230a0:	moveq	r0, #1
   230a4:	streq	r0, [r5]
   230a8:	beq	230d0 <mount@plt+0x11018>
   230ac:	ldr	r1, [pc, #92]	; 23110 <mount@plt+0x11058>
   230b0:	mov	r0, r4
   230b4:	add	r1, pc, r1
   230b8:	bl	11b0c <strcmp@plt>
   230bc:	subs	r3, r0, #0
   230c0:	moveq	r0, #1
   230c4:	streq	r3, [r5]
   230c8:	beq	230d0 <mount@plt+0x11018>
   230cc:	mov	r0, #0
   230d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   230d4:	ldr	r3, [r6]
   230d8:	cmp	r2, r3
   230dc:	bne	230f8 <mount@plt+0x11040>
   230e0:	sub	sp, fp, #20
   230e4:	pop	{r4, r5, r6, r7, fp, pc}
   230e8:	mov	r3, #2
   230ec:	str	r3, [r5]
   230f0:	mov	r0, #1
   230f4:	b	230d0 <mount@plt+0x11018>
   230f8:	bl	11c2c <__stack_chk_fail@plt>
   230fc:	andeq	r9, r1, r0, lsl r0
   23100:	andeq	r0, r0, r8, lsl #4
   23104:	andeq	r7, r0, r4, ror #23
   23108:			; <UNDEFINED> instruction: 0x00007bb0
   2310c:	andeq	r7, r0, r0, lsr #23
   23110:	andeq	r7, r0, r8, lsl #23
   23114:	push	{r2, r3}
   23118:	ldr	r2, [pc, #252]	; 2321c <mount@plt+0x11164>
   2311c:	ldr	r3, [pc, #252]	; 23220 <mount@plt+0x11168>
   23120:	add	r2, pc, r2
   23124:	ldr	ip, [pc, #248]	; 23224 <mount@plt+0x1116c>
   23128:	push	{r4, r5, r6, r7, r8, lr}
   2312c:	add	ip, pc, ip
   23130:	ldr	r6, [r2, r3]
   23134:	ldr	r4, [ip]
   23138:	sub	sp, sp, #8
   2313c:	ldr	lr, [r6]
   23140:	add	r3, sp, #36	; 0x24
   23144:	cmp	r1, #6
   23148:	cmpne	r4, #0
   2314c:	str	lr, [sp, #4]
   23150:	str	r3, [sp]
   23154:	ldr	r8, [sp, #32]
   23158:	beq	23208 <mount@plt+0x11150>
   2315c:	ldr	r3, [ip, #4]
   23160:	mov	r7, r0
   23164:	cmp	r3, #0
   23168:	bne	231f8 <mount@plt+0x11140>
   2316c:	ldr	r3, [pc, #180]	; 23228 <mount@plt+0x11170>
   23170:	add	r3, pc, r3
   23174:	add	r1, r3, r1, lsl #2
   23178:	ldr	r2, [r1, #28]
   2317c:	ldr	r3, [pc, #168]	; 2322c <mount@plt+0x11174>
   23180:	ldr	r5, [pc, #168]	; 23230 <mount@plt+0x11178>
   23184:	add	r3, pc, r3
   23188:	add	r5, pc, r5
   2318c:	ldr	r3, [r3, r2, lsl #2]
   23190:	mov	r1, #1
   23194:	mov	r2, r5
   23198:	mov	r0, r7
   2319c:	bl	11ef0 <__fprintf_chk@plt>
   231a0:	mov	r2, r8
   231a4:	ldr	r3, [sp]
   231a8:	mov	r1, #1
   231ac:	mov	r4, r0
   231b0:	mov	r0, r7
   231b4:	bl	11da0 <__vfprintf_chk@plt>
   231b8:	ldr	r3, [pc, #116]	; 23234 <mount@plt+0x1117c>
   231bc:	mov	r2, r5
   231c0:	add	r3, pc, r3
   231c4:	mov	r1, #1
   231c8:	add	r4, r0, r4
   231cc:	mov	r0, r7
   231d0:	bl	11ef0 <__fprintf_chk@plt>
   231d4:	add	r0, r4, r0
   231d8:	ldr	r2, [sp, #4]
   231dc:	ldr	r3, [r6]
   231e0:	cmp	r2, r3
   231e4:	bne	23218 <mount@plt+0x11160>
   231e8:	add	sp, sp, #8
   231ec:	pop	{r4, r5, r6, r7, r8, lr}
   231f0:	add	sp, sp, #8
   231f4:	bx	lr
   231f8:	ldr	r3, [pc, #56]	; 23238 <mount@plt+0x11180>
   231fc:	add	r3, pc, r3
   23200:	ldr	r2, [r3, r1, lsl #2]
   23204:	b	2317c <mount@plt+0x110c4>
   23208:	mov	r2, r8
   2320c:	mov	r1, #1
   23210:	bl	11da0 <__vfprintf_chk@plt>
   23214:	b	231d8 <mount@plt+0x11120>
   23218:	bl	11c2c <__stack_chk_fail@plt>
   2321c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   23220:	andeq	r0, r0, r8, lsl #4
   23224:	andeq	lr, r1, r8, lsr lr
   23228:	andeq	r7, r0, r0, ror sl
   2322c:	andeq	r8, r1, ip, lsl #26
   23230:			; <UNDEFINED> instruction: 0x00007cb8
   23234:	andeq	r7, r0, r4, lsl #21
   23238:	andeq	r7, r0, r4, ror #19
   2323c:	cmp	r0, #2
   23240:	bxeq	lr
   23244:	cmp	r0, #10
   23248:	moveq	r0, #3
   2324c:	movne	r0, #6
   23250:	bx	lr
   23254:	cmp	r0, #2
   23258:	beq	2326c <mount@plt+0x111b4>
   2325c:	cmp	r0, #6
   23260:	moveq	r0, #4
   23264:	movne	r0, #6
   23268:	bx	lr
   2326c:	mov	r0, #5
   23270:	bx	lr
   23274:	push	{r4, r5, r6, r7, r8, lr}
   23278:	mov	r5, r0
   2327c:	mov	r6, r3
   23280:	mov	r7, r1
   23284:	mov	r4, r2
   23288:	bl	11e18 <__errno_location@plt>
   2328c:	cmp	r5, #12
   23290:	movne	r3, #97	; 0x61
   23294:	strne	r3, [r0]
   23298:	beq	232a4 <mount@plt+0x111ec>
   2329c:	mov	r0, #0
   232a0:	pop	{r4, r5, r6, r7, r8, pc}
   232a4:	ldrh	r3, [r7]
   232a8:	mov	r2, #0
   232ac:	str	r2, [r0]
   232b0:	cmp	r3, #2
   232b4:	bne	2329c <mount@plt+0x111e4>
   232b8:	cmp	r6, r2
   232bc:	beq	233dc <mount@plt+0x11324>
   232c0:	ldrh	ip, [r7, #2]
   232c4:	lsr	r1, ip, #10
   232c8:	cmp	r1, #9
   232cc:	bls	233e4 <mount@plt+0x1132c>
   232d0:	ldr	r2, [pc, #388]	; 2345c <mount@plt+0x113a4>
   232d4:	cmp	r6, #1
   232d8:	umull	r0, r2, r2, r1
   232dc:	lsr	r2, r2, #3
   232e0:	add	r0, r2, #48	; 0x30
   232e4:	strb	r0, [r4]
   232e8:	beq	233dc <mount@plt+0x11324>
   232ec:	add	r2, r2, r2, lsl #2
   232f0:	mov	r0, #1
   232f4:	sub	r1, r1, r2, lsl #1
   232f8:	add	r2, r4, #1
   232fc:	uxth	r1, r1
   23300:	add	r1, r1, #48	; 0x30
   23304:	cmp	r6, r3
   23308:	strb	r1, [r2]
   2330c:	beq	233dc <mount@plt+0x11324>
   23310:	add	r2, r0, #2
   23314:	mov	r1, #46	; 0x2e
   23318:	cmp	r6, r2
   2331c:	add	lr, r4, r2
   23320:	strb	r1, [r4, r3]
   23324:	beq	233dc <mount@plt+0x11324>
   23328:	lsl	r3, ip, #22
   2332c:	lsr	r3, r3, #22
   23330:	cmp	r3, #1000	; 0x3e8
   23334:	bcs	233f4 <mount@plt+0x1133c>
   23338:	cmp	r3, #99	; 0x63
   2333c:	bls	23440 <mount@plt+0x11388>
   23340:	ldr	r1, [pc, #280]	; 23460 <mount@plt+0x113a8>
   23344:	umull	r0, r1, r1, r3
   23348:	lsr	r1, r1, #5
   2334c:	uxth	r1, r1
   23350:	add	r2, r2, #1
   23354:	add	r1, r1, #48	; 0x30
   23358:	cmp	r6, r2
   2335c:	strb	r1, [lr]
   23360:	beq	233dc <mount@plt+0x11324>
   23364:	ldr	r1, [pc, #244]	; 23460 <mount@plt+0x113a8>
   23368:	ldr	r0, [pc, #236]	; 2345c <mount@plt+0x113a4>
   2336c:	add	lr, r4, r2
   23370:	umull	ip, r1, r1, r3
   23374:	lsr	r1, r1, #5
   23378:	add	r1, r1, r1, lsl #2
   2337c:	add	r1, r1, r1, lsl #2
   23380:	sub	r3, r3, r1, lsl #2
   23384:	uxth	r3, r3
   23388:	umull	r0, r1, r0, r3
   2338c:	lsr	r1, r1, #3
   23390:	uxth	r1, r1
   23394:	add	r2, r2, #1
   23398:	add	r1, r1, #48	; 0x30
   2339c:	cmp	r6, r2
   233a0:	strb	r1, [lr]
   233a4:	beq	233dc <mount@plt+0x11324>
   233a8:	ldr	r1, [pc, #172]	; 2345c <mount@plt+0x113a4>
   233ac:	add	lr, r4, r2
   233b0:	umull	r0, r1, r1, r3
   233b4:	lsr	r1, r1, #3
   233b8:	add	r1, r1, r1, lsl #2
   233bc:	sub	r3, r3, r1, lsl #1
   233c0:	uxth	r3, r3
   233c4:	add	r2, r2, #1
   233c8:	add	r3, r3, #48	; 0x30
   233cc:	cmp	r6, r2
   233d0:	strb	r3, [lr]
   233d4:	movne	r3, #0
   233d8:	strbne	r3, [r4, r2]
   233dc:	mov	r0, r4
   233e0:	pop	{r4, r5, r6, r7, r8, pc}
   233e4:	mov	r0, r2
   233e8:	mov	r3, #1
   233ec:	mov	r2, r4
   233f0:	b	23300 <mount@plt+0x11248>
   233f4:	add	r2, r0, #3
   233f8:	mov	r1, #49	; 0x31
   233fc:	cmp	r6, r2
   23400:	strb	r1, [lr]
   23404:	beq	233dc <mount@plt+0x11324>
   23408:	ldr	r0, [pc, #84]	; 23464 <mount@plt+0x113ac>
   2340c:	ldr	r1, [pc, #76]	; 23460 <mount@plt+0x113a8>
   23410:	add	lr, r4, r2
   23414:	umull	ip, r0, r0, r3
   23418:	lsr	r0, r0, #6
   2341c:	lsl	ip, r0, #5
   23420:	sub	ip, ip, r0
   23424:	add	r0, r0, ip, lsl #2
   23428:	sub	r3, r3, r0, lsl #3
   2342c:	uxth	r3, r3
   23430:	umull	r0, r1, r1, r3
   23434:	lsr	r1, r1, #5
   23438:	uxth	r1, r1
   2343c:	b	23350 <mount@plt+0x11298>
   23440:	cmp	r3, #9
   23444:	bls	233c4 <mount@plt+0x1130c>
   23448:	ldr	r1, [pc, #12]	; 2345c <mount@plt+0x113a4>
   2344c:	umull	r0, r1, r1, r3
   23450:	lsr	r1, r1, #3
   23454:	uxth	r1, r1
   23458:	b	23394 <mount@plt+0x112dc>
   2345c:	stclgt	12, cr12, [ip], {205}	; 0xcd
   23460:	mvnpl	r8, pc, lsl r5
   23464:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   23468:	push	{r4, r5, r6, lr}
   2346c:	mov	r6, r0
   23470:	mov	r5, r1
   23474:	mov	r4, r2
   23478:	bl	11e18 <__errno_location@plt>
   2347c:	cmp	r6, #12
   23480:	bne	2356c <mount@plt+0x114b4>
   23484:	mov	ip, r5
   23488:	mov	r2, #0
   2348c:	str	r2, [r0]
   23490:	ldrb	r3, [ip], #1
   23494:	cmp	r3, r2
   23498:	beq	234e8 <mount@plt+0x11430>
   2349c:	sub	r3, r3, #48	; 0x30
   234a0:	cmp	r3, #9
   234a4:	bhi	234e4 <mount@plt+0x1142c>
   234a8:	mov	r0, r2
   234ac:	b	234bc <mount@plt+0x11404>
   234b0:	cmp	r3, #9
   234b4:	bhi	234dc <mount@plt+0x11424>
   234b8:	mov	r0, lr
   234bc:	ldrb	r1, [ip], #1
   234c0:	add	r2, r2, r2, lsl #2
   234c4:	add	lr, r0, #1
   234c8:	add	r2, r3, r2, lsl #1
   234cc:	cmp	r1, #0
   234d0:	sub	r3, r1, #48	; 0x30
   234d4:	uxth	r2, r2
   234d8:	bne	234b0 <mount@plt+0x113f8>
   234dc:	cmp	r2, #63	; 0x3f
   234e0:	bls	234f0 <mount@plt+0x11438>
   234e4:	mov	r3, #0
   234e8:	mov	r0, r3
   234ec:	pop	{r4, r5, r6, pc}
   234f0:	ldrb	r3, [r5, lr]
   234f4:	cmp	r3, #46	; 0x2e
   234f8:	bne	234e4 <mount@plt+0x1142c>
   234fc:	add	r0, r0, #2
   23500:	add	ip, r5, r0
   23504:	ldrb	r3, [r5, r0]
   23508:	add	ip, ip, #1
   2350c:	cmp	r3, #0
   23510:	beq	234e8 <mount@plt+0x11430>
   23514:	sub	r3, r3, #48	; 0x30
   23518:	cmp	r3, #9
   2351c:	bhi	234e4 <mount@plt+0x1142c>
   23520:	mov	r1, #0
   23524:	b	23530 <mount@plt+0x11478>
   23528:	cmp	r3, #9
   2352c:	bhi	2354c <mount@plt+0x11494>
   23530:	ldrb	r0, [ip], #1
   23534:	add	r1, r1, r1, lsl #2
   23538:	add	r1, r3, r1, lsl #1
   2353c:	cmp	r0, #0
   23540:	sub	r3, r0, #48	; 0x30
   23544:	uxth	r1, r1
   23548:	bne	23528 <mount@plt+0x11470>
   2354c:	cmp	r1, #1024	; 0x400
   23550:	bcs	234e4 <mount@plt+0x1142c>
   23554:	mov	r3, #2
   23558:	orr	r2, r1, r2, lsl #10
   2355c:	strh	r3, [r4]
   23560:	strh	r2, [r4, #2]
   23564:	mov	r3, #1
   23568:	b	234e8 <mount@plt+0x11430>
   2356c:	mov	r2, #97	; 0x61
   23570:	mvn	r3, #0
   23574:	str	r2, [r0]
   23578:	b	234e8 <mount@plt+0x11430>
   2357c:	push	{r4, r5, r6, r7, r8, lr}
   23580:	mov	r7, r0
   23584:	mov	r5, r1
   23588:	mov	r4, r2
   2358c:	mov	r6, r3
   23590:	bl	11e18 <__errno_location@plt>
   23594:	cmp	r7, #4
   23598:	beq	235ac <mount@plt+0x114f4>
   2359c:	mov	r3, #97	; 0x61
   235a0:	str	r3, [r0]
   235a4:	mov	r0, #0
   235a8:	pop	{r4, r5, r6, r7, r8, pc}
   235ac:	mov	r2, #0
   235b0:	cmp	r6, #0
   235b4:	str	r2, [r0]
   235b8:	beq	23610 <mount@plt+0x11558>
   235bc:	ldr	ip, [r5]
   235c0:	sub	r1, r4, #1
   235c4:	rev	ip, ip
   235c8:	lsr	ip, ip, #28
   235cc:	and	ip, ip, #15
   235d0:	add	r2, r2, #1
   235d4:	cmp	ip, #9
   235d8:	uxtb	ip, ip
   235dc:	add	r3, ip, #48	; 0x30
   235e0:	addhi	r3, ip, #55	; 0x37
   235e4:	rsb	ip, r2, r2, lsl #30
   235e8:	cmp	r2, #8
   235ec:	lsl	ip, ip, #2
   235f0:	strb	r3, [r1, #1]!
   235f4:	add	r3, ip, #28
   235f8:	beq	23618 <mount@plt+0x11560>
   235fc:	ldr	ip, [r5]
   23600:	cmp	r6, r2
   23604:	rev	ip, ip
   23608:	lsr	ip, ip, r3
   2360c:	bne	235cc <mount@plt+0x11514>
   23610:	mov	r0, r4
   23614:	pop	{r4, r5, r6, r7, r8, pc}
   23618:	cmp	r6, #8
   2361c:	beq	23610 <mount@plt+0x11558>
   23620:	add	r5, r5, #4
   23624:	mov	r2, #9
   23628:	add	r0, r4, #1
   2362c:	mov	r3, #46	; 0x2e
   23630:	strb	r3, [r4, #8]
   23634:	ldrb	r3, [r5], #1
   23638:	cmp	r6, r2
   2363c:	lsr	r3, r3, #4
   23640:	beq	23610 <mount@plt+0x11558>
   23644:	cmp	r3, #9
   23648:	uxtb	r3, r3
   2364c:	add	r1, r3, #48	; 0x30
   23650:	addhi	r1, r3, #55	; 0x37
   23654:	add	r3, r2, #1
   23658:	cmp	r6, r3
   2365c:	strb	r1, [r4, r2]
   23660:	beq	23610 <mount@plt+0x11558>
   23664:	ldrb	r3, [r5, #-1]
   23668:	and	r3, r3, #15
   2366c:	cmp	r3, #9
   23670:	add	r1, r3, #48	; 0x30
   23674:	addhi	r1, r3, #55	; 0x37
   23678:	strb	r1, [r0, r2]
   2367c:	add	r2, r2, #2
   23680:	cmp	r2, #21
   23684:	bne	23634 <mount@plt+0x1157c>
   23688:	cmp	r6, #21
   2368c:	movne	r3, #0
   23690:	strbne	r3, [r4, #21]
   23694:	b	23610 <mount@plt+0x11558>
   23698:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2369c:	sub	sp, sp, #8
   236a0:	mov	r5, r0
   236a4:	mov	r7, r1
   236a8:	mov	r8, r2
   236ac:	mov	r4, r3
   236b0:	bl	11e18 <__errno_location@plt>
   236b4:	cmp	r5, #28
   236b8:	mov	r9, r0
   236bc:	beq	236d4 <mount@plt+0x1161c>
   236c0:	mov	r3, #97	; 0x61
   236c4:	str	r3, [r0]
   236c8:	mov	r0, #0
   236cc:	add	sp, sp, #8
   236d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   236d4:	ldr	sl, [pc, #128]	; 2375c <mount@plt+0x116a4>
   236d8:	mov	r3, #0
   236dc:	add	sl, pc, sl
   236e0:	sub	r7, r7, #4
   236e4:	mov	r5, r8
   236e8:	str	r3, [r0]
   236ec:	b	23708 <mount@plt+0x11650>
   236f0:	tst	r6, #256	; 0x100
   236f4:	bne	23750 <mount@plt+0x11698>
   236f8:	subs	r4, r4, r0
   236fc:	add	r5, r5, r0
   23700:	subne	r4, r4, #1
   23704:	strbne	r3, [r5], #1
   23708:	ldr	r6, [r7, #4]!
   2370c:	mvn	r3, #0
   23710:	rev	r6, r6
   23714:	str	sl, [sp]
   23718:	lsr	r2, r6, #12
   2371c:	str	r2, [sp, #4]
   23720:	mov	r1, r4
   23724:	mov	r2, #1
   23728:	mov	r0, r5
   2372c:	bl	12088 <__snprintf_chk@plt>
   23730:	mov	r3, #47	; 0x2f
   23734:	cmp	r4, r0
   23738:	bhi	236f0 <mount@plt+0x11638>
   2373c:	mvn	r3, #6
   23740:	mov	r0, #0
   23744:	str	r3, [r9]
   23748:	add	sp, sp, #8
   2374c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23750:	mov	r0, r8
   23754:	add	sp, sp, #8
   23758:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2375c:	andeq	r4, r0, r0, lsr #24
   23760:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23764:	lsr	r5, r3, #2
   23768:	ldr	r6, [pc, #268]	; 2387c <mount@plt+0x117c4>
   2376c:	ldr	ip, [pc, #268]	; 23880 <mount@plt+0x117c8>
   23770:	add	r6, pc, r6
   23774:	sub	sp, sp, #8
   23778:	ldr	r7, [r6, ip]
   2377c:	mov	r8, r0
   23780:	mov	sl, r1
   23784:	ldr	r3, [r7]
   23788:	mov	r4, r2
   2378c:	str	r3, [sp, #4]
   23790:	bl	11e18 <__errno_location@plt>
   23794:	cmp	r8, #28
   23798:	bne	23868 <mount@plt+0x117b0>
   2379c:	cmp	r5, #0
   237a0:	mov	r3, #0
   237a4:	str	r3, [r0]
   237a8:	ldrne	r8, [pc, #212]	; 23884 <mount@plt+0x117cc>
   237ac:	addne	r5, r4, r5, lsl #2
   237b0:	movne	r9, sp
   237b4:	bne	237f4 <mount@plt+0x1173c>
   237b8:	b	23830 <mount@plt+0x11778>
   237bc:	ldr	r3, [sp]
   237c0:	cmp	r3, sl
   237c4:	beq	23810 <mount@plt+0x11758>
   237c8:	lsl	r0, r0, #12
   237cc:	rev	r0, r0
   237d0:	str	r0, [r4], #4
   237d4:	ldrb	r2, [r3]
   237d8:	cmp	r2, #0
   237dc:	beq	23858 <mount@plt+0x117a0>
   237e0:	cmp	r2, #47	; 0x2f
   237e4:	bne	23810 <mount@plt+0x11758>
   237e8:	cmp	r4, r5
   237ec:	add	sl, r3, #1
   237f0:	beq	23830 <mount@plt+0x11778>
   237f4:	mov	r1, r9
   237f8:	mov	r2, #0
   237fc:	mov	r0, sl
   23800:	bl	11df4 <strtoul@plt>
   23804:	mov	r1, r4
   23808:	cmp	r0, r8
   2380c:	bls	237bc <mount@plt+0x11704>
   23810:	mov	r1, #0
   23814:	ldr	r2, [sp, #4]
   23818:	ldr	r3, [r7]
   2381c:	mov	r0, r1
   23820:	cmp	r2, r3
   23824:	bne	23878 <mount@plt+0x117c0>
   23828:	add	sp, sp, #8
   2382c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23830:	ldr	r3, [pc, #80]	; 23888 <mount@plt+0x117d0>
   23834:	ldr	r0, [pc, #80]	; 2388c <mount@plt+0x117d4>
   23838:	mov	r1, #1
   2383c:	ldr	r3, [r6, r3]
   23840:	mov	r2, #24
   23844:	add	r0, pc, r0
   23848:	ldr	r3, [r3]
   2384c:	bl	11cb0 <fwrite@plt>
   23850:	mov	r1, #0
   23854:	b	23814 <mount@plt+0x1175c>
   23858:	orr	r0, r0, #65536	; 0x10000
   2385c:	str	r0, [r1]
   23860:	mov	r1, #1
   23864:	b	23814 <mount@plt+0x1175c>
   23868:	mov	r3, #97	; 0x61
   2386c:	mvn	r1, #0
   23870:	str	r3, [r0]
   23874:	b	23814 <mount@plt+0x1175c>
   23878:	bl	11c2c <__stack_chk_fail@plt>
   2387c:	andeq	r8, r1, r8, lsl #17
   23880:	andeq	r0, r0, r8, lsl #4
   23884:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   23888:	andeq	r0, r0, r4, lsl r2
   2388c:	andeq	r7, r0, r8, ror r4
   23890:	push	{r4, r5, r6, lr}
   23894:	mov	r4, r0
   23898:	ldrb	r0, [r0, #9]
   2389c:	mov	r5, r1
   238a0:	ldr	r1, [r4]
   238a4:	cmp	r0, #0
   238a8:	bne	238d4 <mount@plt+0x1181c>
   238ac:	mov	r3, #44	; 0x2c
   238b0:	strb	r3, [r4, #9]
   238b4:	mov	r0, r5
   238b8:	bl	11fd4 <putc@plt>
   238bc:	ldr	r3, [r4, #4]
   238c0:	mov	r2, #0
   238c4:	add	r3, r3, #1
   238c8:	str	r3, [r4, #4]
   238cc:	strb	r2, [r4, #9]
   238d0:	pop	{r4, r5, r6, pc}
   238d4:	bl	11fd4 <putc@plt>
   238d8:	ldr	r1, [r4]
   238dc:	b	238ac <mount@plt+0x117f4>
   238e0:	push	{r4, r5, r6, lr}
   238e4:	mov	r5, r0
   238e8:	mov	r0, #10
   238ec:	ldr	r1, [r5]
   238f0:	bl	11fd4 <putc@plt>
   238f4:	ldr	r3, [r5, #4]
   238f8:	cmp	r3, #0
   238fc:	popeq	{r4, r5, r6, pc}
   23900:	ldr	r6, [pc, #44]	; 23934 <mount@plt+0x1187c>
   23904:	mov	r4, #0
   23908:	add	r6, pc, r6
   2390c:	ldr	r3, [r5]
   23910:	mov	r2, #4
   23914:	mov	r1, #1
   23918:	mov	r0, r6
   2391c:	bl	11cb0 <fwrite@plt>
   23920:	ldr	r3, [r5, #4]
   23924:	add	r4, r4, #1
   23928:	cmp	r4, r3
   2392c:	bcc	2390c <mount@plt+0x11854>
   23930:	pop	{r4, r5, r6, pc}
   23934:	andeq	r7, r0, ip, ror #7
   23938:	ldr	r3, [pc, #28]	; 2395c <mount@plt+0x118a4>
   2393c:	ldr	r1, [pc, #28]	; 23960 <mount@plt+0x118a8>
   23940:	ldr	r0, [pc, #28]	; 23964 <mount@plt+0x118ac>
   23944:	push	{r4, lr}
   23948:	add	r3, pc, r3
   2394c:	mov	r2, #133	; 0x85
   23950:	add	r1, pc, r1
   23954:	add	r0, pc, r0
   23958:	bl	120a0 <__assert_fail@plt>
   2395c:	muleq	r0, r0, r3
   23960:	andeq	r7, r0, ip, lsr #7
   23964:			; <UNDEFINED> instruction: 0x000073b8
   23968:	push	{r4, r5, r6, r7, r8, lr}
   2396c:	mov	r5, r0
   23970:	mov	r4, r1
   23974:	mov	r0, #34	; 0x22
   23978:	ldr	r1, [r5]
   2397c:	bl	11fd4 <putc@plt>
   23980:	ldrb	r0, [r4]
   23984:	cmp	r0, #0
   23988:	beq	23a10 <mount@plt+0x11958>
   2398c:	ldr	r8, [pc, #296]	; 23abc <mount@plt+0x11a04>
   23990:	ldr	r6, [pc, #296]	; 23ac0 <mount@plt+0x11a08>
   23994:	ldr	r7, [pc, #296]	; 23ac4 <mount@plt+0x11a0c>
   23998:	add	r8, pc, r8
   2399c:	add	r6, pc, r6
   239a0:	add	r7, pc, r7
   239a4:	b	239cc <mount@plt+0x11914>
   239a8:	cmp	r0, #92	; 0x5c
   239ac:	bne	23a58 <mount@plt+0x119a0>
   239b0:	mov	r2, #2
   239b4:	mov	r1, #1
   239b8:	mov	r0, r6
   239bc:	bl	11cb0 <fwrite@plt>
   239c0:	ldrb	r0, [r4, #1]!
   239c4:	cmp	r0, #0
   239c8:	beq	23a10 <mount@plt+0x11958>
   239cc:	cmp	r0, #12
   239d0:	ldr	r3, [r5]
   239d4:	beq	23aa8 <mount@plt+0x119f0>
   239d8:	bls	23a40 <mount@plt+0x11988>
   239dc:	cmp	r0, #34	; 0x22
   239e0:	beq	23a94 <mount@plt+0x119dc>
   239e4:	bls	23a20 <mount@plt+0x11968>
   239e8:	cmp	r0, #39	; 0x27
   239ec:	bne	239a8 <mount@plt+0x118f0>
   239f0:	ldr	r0, [pc, #208]	; 23ac8 <mount@plt+0x11a10>
   239f4:	mov	r2, #2
   239f8:	mov	r1, #1
   239fc:	add	r0, pc, r0
   23a00:	bl	11cb0 <fwrite@plt>
   23a04:	ldrb	r0, [r4, #1]!
   23a08:	cmp	r0, #0
   23a0c:	bne	239cc <mount@plt+0x11914>
   23a10:	ldr	r1, [r5]
   23a14:	mov	r0, #34	; 0x22
   23a18:	pop	{r4, r5, r6, r7, r8, lr}
   23a1c:	b	11fd4 <putc@plt>
   23a20:	cmp	r0, #13
   23a24:	bne	23a58 <mount@plt+0x119a0>
   23a28:	ldr	r0, [pc, #156]	; 23acc <mount@plt+0x11a14>
   23a2c:	mov	r2, #2
   23a30:	mov	r1, #1
   23a34:	add	r0, pc, r0
   23a38:	bl	11cb0 <fwrite@plt>
   23a3c:	b	239c0 <mount@plt+0x11908>
   23a40:	cmp	r0, #9
   23a44:	beq	23a7c <mount@plt+0x119c4>
   23a48:	cmp	r0, #10
   23a4c:	beq	239b0 <mount@plt+0x118f8>
   23a50:	cmp	r0, #8
   23a54:	beq	23a64 <mount@plt+0x119ac>
   23a58:	mov	r1, r3
   23a5c:	bl	11fd4 <putc@plt>
   23a60:	b	239c0 <mount@plt+0x11908>
   23a64:	ldr	r0, [pc, #100]	; 23ad0 <mount@plt+0x11a18>
   23a68:	mov	r2, #2
   23a6c:	mov	r1, #1
   23a70:	add	r0, pc, r0
   23a74:	bl	11cb0 <fwrite@plt>
   23a78:	b	239c0 <mount@plt+0x11908>
   23a7c:	ldr	r0, [pc, #80]	; 23ad4 <mount@plt+0x11a1c>
   23a80:	mov	r2, #2
   23a84:	mov	r1, #1
   23a88:	add	r0, pc, r0
   23a8c:	bl	11cb0 <fwrite@plt>
   23a90:	b	239c0 <mount@plt+0x11908>
   23a94:	mov	r2, #2
   23a98:	mov	r1, #1
   23a9c:	mov	r0, r7
   23aa0:	bl	11cb0 <fwrite@plt>
   23aa4:	b	239c0 <mount@plt+0x11908>
   23aa8:	mov	r2, #2
   23aac:	mov	r1, #1
   23ab0:	mov	r0, r8
   23ab4:	bl	11cb0 <fwrite@plt>
   23ab8:	b	239c0 <mount@plt+0x11908>
   23abc:	andeq	r7, r0, ip, lsl #7
   23ac0:	muleq	r0, r0, r3
   23ac4:	muleq	r0, r0, r3
   23ac8:	andeq	r7, r0, r8, lsr r3
   23acc:	andeq	r7, r0, ip, ror #5
   23ad0:			; <UNDEFINED> instruction: 0x000072b8
   23ad4:	muleq	r0, r4, r2
   23ad8:	push	{r4, lr}
   23adc:	mov	r4, r0
   23ae0:	mov	r0, #12
   23ae4:	bl	11d70 <malloc@plt>
   23ae8:	cmp	r0, #0
   23aec:	movne	r3, #0
   23af0:	strne	r4, [r0]
   23af4:	strne	r3, [r0, #4]
   23af8:	strhne	r3, [r0, #8]
   23afc:	pop	{r4, pc}
   23b00:	push	{r4, r5, r6, lr}
   23b04:	ldr	r4, [r0]
   23b08:	ldr	r6, [r4, #4]
   23b0c:	cmp	r6, #0
   23b10:	bne	23b3c <mount@plt+0x11a84>
   23b14:	ldr	r1, [r4]
   23b18:	mov	r5, r0
   23b1c:	mov	r0, #10
   23b20:	bl	11f8c <fputc@plt>
   23b24:	ldr	r0, [r4]
   23b28:	bl	11b48 <fflush@plt>
   23b2c:	mov	r0, r4
   23b30:	bl	11b78 <free@plt>
   23b34:	str	r6, [r5]
   23b38:	pop	{r4, r5, r6, pc}
   23b3c:	ldr	r3, [pc, #28]	; 23b60 <mount@plt+0x11aa8>
   23b40:	ldr	r1, [pc, #28]	; 23b64 <mount@plt+0x11aac>
   23b44:	ldr	r0, [pc, #28]	; 23b68 <mount@plt+0x11ab0>
   23b48:	add	r3, pc, r3
   23b4c:	mov	r2, #110	; 0x6e
   23b50:	add	r3, r3, #12
   23b54:	add	r1, pc, r1
   23b58:	add	r0, pc, r0
   23b5c:	bl	120a0 <__assert_fail@plt>
   23b60:	muleq	r0, r0, r1
   23b64:	andeq	r7, r0, r8, lsr #3
   23b68:	andeq	r7, r0, r0, ror #3
   23b6c:	strb	r1, [r0, #8]
   23b70:	bx	lr
   23b74:	push	{r4, r5, r6, lr}
   23b78:	mov	r4, r0
   23b7c:	ldrb	r0, [r0, #9]
   23b80:	mov	r5, r1
   23b84:	cmp	r0, #0
   23b88:	bne	23be4 <mount@plt+0x11b2c>
   23b8c:	ldrb	r3, [r4, #8]
   23b90:	mov	r2, #44	; 0x2c
   23b94:	strb	r2, [r4, #9]
   23b98:	cmp	r3, #0
   23b9c:	beq	23ba8 <mount@plt+0x11af0>
   23ba0:	mov	r0, r4
   23ba4:	bl	238e0 <mount@plt+0x11828>
   23ba8:	mov	r3, #0
   23bac:	strb	r3, [r4, #9]
   23bb0:	mov	r1, r5
   23bb4:	mov	r0, r4
   23bb8:	bl	23968 <mount@plt+0x118b0>
   23bbc:	ldr	r1, [r4]
   23bc0:	mov	r0, #58	; 0x3a
   23bc4:	bl	11fd4 <putc@plt>
   23bc8:	ldrb	r3, [r4, #8]
   23bcc:	cmp	r3, #0
   23bd0:	popeq	{r4, r5, r6, pc}
   23bd4:	ldr	r1, [r4]
   23bd8:	mov	r0, #32
   23bdc:	pop	{r4, r5, r6, lr}
   23be0:	b	11fd4 <putc@plt>
   23be4:	ldr	r1, [r4]
   23be8:	bl	11fd4 <putc@plt>
   23bec:	b	23b8c <mount@plt+0x11ad4>
   23bf0:	push	{r1, r2, r3}
   23bf4:	ldr	r3, [pc, #136]	; 23c84 <mount@plt+0x11bcc>
   23bf8:	ldr	r2, [pc, #136]	; 23c88 <mount@plt+0x11bd0>
   23bfc:	add	r3, pc, r3
   23c00:	push	{r4, r5, r6, lr}
   23c04:	sub	sp, sp, #12
   23c08:	ldr	r5, [r3, r2]
   23c0c:	ldrb	ip, [r0, #9]
   23c10:	add	r1, sp, #32
   23c14:	ldr	r3, [r5]
   23c18:	cmp	ip, #0
   23c1c:	mov	r4, r0
   23c20:	str	r1, [sp]
   23c24:	str	r3, [sp, #4]
   23c28:	ldr	r0, [r0]
   23c2c:	ldr	r6, [sp, #28]
   23c30:	bne	23c6c <mount@plt+0x11bb4>
   23c34:	mov	r3, #44	; 0x2c
   23c38:	mov	r2, r6
   23c3c:	strb	r3, [r4, #9]
   23c40:	mov	r1, #1
   23c44:	ldr	r3, [sp]
   23c48:	bl	11da0 <__vfprintf_chk@plt>
   23c4c:	ldr	r2, [sp, #4]
   23c50:	ldr	r3, [r5]
   23c54:	cmp	r2, r3
   23c58:	bne	23c80 <mount@plt+0x11bc8>
   23c5c:	add	sp, sp, #12
   23c60:	pop	{r4, r5, r6, lr}
   23c64:	add	sp, sp, #12
   23c68:	bx	lr
   23c6c:	mov	r1, r0
   23c70:	mov	r0, ip
   23c74:	bl	11fd4 <putc@plt>
   23c78:	ldr	r0, [r4]
   23c7c:	b	23c34 <mount@plt+0x11b7c>
   23c80:	bl	11c2c <__stack_chk_fail@plt>
   23c84:	strdeq	r8, [r1], -ip
   23c88:	andeq	r0, r0, r8, lsl #4
   23c8c:	mov	r1, #123	; 0x7b
   23c90:	b	23890 <mount@plt+0x117d8>
   23c94:	ldr	r3, [r0, #4]
   23c98:	push	{r4, lr}
   23c9c:	cmp	r3, #0
   23ca0:	beq	23ce4 <mount@plt+0x11c2c>
   23ca4:	ldrb	r2, [r0, #9]
   23ca8:	sub	r3, r3, #1
   23cac:	mov	r4, r0
   23cb0:	cmp	r2, #0
   23cb4:	str	r3, [r0, #4]
   23cb8:	beq	23ccc <mount@plt+0x11c14>
   23cbc:	ldrb	r3, [r0, #8]
   23cc0:	cmp	r3, #0
   23cc4:	beq	23ccc <mount@plt+0x11c14>
   23cc8:	bl	238e0 <mount@plt+0x11828>
   23ccc:	ldr	r1, [r4]
   23cd0:	mov	r0, #125	; 0x7d
   23cd4:	bl	11fd4 <putc@plt>
   23cd8:	mov	r3, #44	; 0x2c
   23cdc:	strb	r3, [r4, #9]
   23ce0:	pop	{r4, pc}
   23ce4:	bl	23938 <mount@plt+0x11880>
   23ce8:	push	{r4, lr}
   23cec:	mov	r4, r0
   23cf0:	mov	r1, #91	; 0x5b
   23cf4:	bl	23890 <mount@plt+0x117d8>
   23cf8:	ldrb	r3, [r4, #8]
   23cfc:	cmp	r3, #0
   23d00:	popeq	{r4, pc}
   23d04:	ldr	r1, [r4]
   23d08:	mov	r0, #32
   23d0c:	pop	{r4, lr}
   23d10:	b	11fd4 <putc@plt>
   23d14:	ldrb	r3, [r0, #8]
   23d18:	push	{r4, lr}
   23d1c:	mov	r4, r0
   23d20:	cmp	r3, #0
   23d24:	beq	23d34 <mount@plt+0x11c7c>
   23d28:	ldrb	r3, [r0, #9]
   23d2c:	cmp	r3, #0
   23d30:	bne	23d68 <mount@plt+0x11cb0>
   23d34:	ldr	r3, [r4, #4]
   23d38:	mov	r2, #0
   23d3c:	cmp	r3, r2
   23d40:	strb	r2, [r4, #9]
   23d44:	beq	23d78 <mount@plt+0x11cc0>
   23d48:	sub	r3, r3, #1
   23d4c:	str	r3, [r4, #4]
   23d50:	ldr	r1, [r4]
   23d54:	mov	r0, #93	; 0x5d
   23d58:	bl	11fd4 <putc@plt>
   23d5c:	mov	r3, #44	; 0x2c
   23d60:	strb	r3, [r4, #9]
   23d64:	pop	{r4, pc}
   23d68:	ldr	r1, [r0]
   23d6c:	mov	r0, #32
   23d70:	bl	11fd4 <putc@plt>
   23d74:	b	23d34 <mount@plt+0x11c7c>
   23d78:	bl	23938 <mount@plt+0x11880>
   23d7c:	push	{r4, r5, r6, lr}
   23d80:	mov	r4, r0
   23d84:	ldrb	r0, [r0, #9]
   23d88:	mov	r5, r1
   23d8c:	cmp	r0, #0
   23d90:	bne	23dac <mount@plt+0x11cf4>
   23d94:	mov	r3, #44	; 0x2c
   23d98:	mov	r1, r5
   23d9c:	strb	r3, [r4, #9]
   23da0:	mov	r0, r4
   23da4:	pop	{r4, r5, r6, lr}
   23da8:	b	23968 <mount@plt+0x118b0>
   23dac:	ldr	r1, [r4]
   23db0:	bl	11fd4 <putc@plt>
   23db4:	b	23d94 <mount@plt+0x11cdc>
   23db8:	cmp	r1, #0
   23dbc:	bne	23dd4 <mount@plt+0x11d1c>
   23dc0:	ldr	r2, [pc, #24]	; 23de0 <mount@plt+0x11d28>
   23dc4:	add	r2, pc, r2
   23dc8:	ldr	r1, [pc, #20]	; 23de4 <mount@plt+0x11d2c>
   23dcc:	add	r1, pc, r1
   23dd0:	b	23bf0 <mount@plt+0x11b38>
   23dd4:	ldr	r2, [pc, #12]	; 23de8 <mount@plt+0x11d30>
   23dd8:	add	r2, pc, r2
   23ddc:	b	23dc8 <mount@plt+0x11d10>
   23de0:	andeq	r6, r0, ip, lsl #28
   23de4:	andeq	r7, r0, r4, ror r0
   23de8:	strdeq	r6, [r0], -r0
   23dec:	ldr	r1, [pc, #4]	; 23df8 <mount@plt+0x11d40>
   23df0:	add	r1, pc, r1
   23df4:	b	23bf0 <mount@plt+0x11b38>
   23df8:	andeq	r4, r0, r8, lsl #2
   23dfc:	ldr	r1, [pc, #8]	; 23e0c <mount@plt+0x11d54>
   23e00:	vmov	r2, r3, d0
   23e04:	add	r1, pc, r1
   23e08:	b	23bf0 <mount@plt+0x11b38>
   23e0c:	andeq	r4, r0, r4, ror r2
   23e10:	mov	r2, r1
   23e14:	ldr	r1, [pc, #4]	; 23e20 <mount@plt+0x11d68>
   23e18:	add	r1, pc, r1
   23e1c:	b	23bf0 <mount@plt+0x11b38>
   23e20:	andeq	r6, r0, r4, lsr pc
   23e24:	mov	r2, r1
   23e28:	ldr	r1, [pc, #4]	; 23e34 <mount@plt+0x11d7c>
   23e2c:	add	r1, pc, r1
   23e30:	b	23bf0 <mount@plt+0x11b38>
   23e34:	ldrdeq	r4, [r0], -r0
   23e38:	ldr	r1, [pc, #4]	; 23e44 <mount@plt+0x11d8c>
   23e3c:	add	r1, pc, r1
   23e40:	b	23bf0 <mount@plt+0x11b38>
   23e44:	strdeq	r4, [r0], -r0
   23e48:	ldr	r1, [pc, #4]	; 23e54 <mount@plt+0x11d9c>
   23e4c:	add	r1, pc, r1
   23e50:	b	23bf0 <mount@plt+0x11b38>
   23e54:	andeq	r4, r0, r0, lsl #2
   23e58:	mov	r2, r1
   23e5c:	ldr	r1, [pc, #4]	; 23e68 <mount@plt+0x11db0>
   23e60:	add	r1, pc, r1
   23e64:	b	23bf0 <mount@plt+0x11b38>
   23e68:	strdeq	r6, [r0], -r0
   23e6c:	b	23e38 <mount@plt+0x11d80>
   23e70:	mov	r2, r1
   23e74:	ldr	r1, [pc, #4]	; 23e80 <mount@plt+0x11dc8>
   23e78:	add	r1, pc, r1
   23e7c:	b	23bf0 <mount@plt+0x11b38>
   23e80:	andeq	r6, r0, r0, asr #24
   23e84:	ldr	r1, [pc, #4]	; 23e90 <mount@plt+0x11dd8>
   23e88:	add	r1, pc, r1
   23e8c:	b	23bf0 <mount@plt+0x11b38>
   23e90:	andeq	r6, r0, ip, asr #29
   23e94:	push	{r4, r5, r6, lr}
   23e98:	mov	r5, r2
   23e9c:	mov	r4, r0
   23ea0:	bl	23b74 <mount@plt+0x11abc>
   23ea4:	mov	r1, r5
   23ea8:	mov	r0, r4
   23eac:	pop	{r4, r5, r6, lr}
   23eb0:	b	23d7c <mount@plt+0x11cc4>
   23eb4:	push	{r4, r5, r6, lr}
   23eb8:	mov	r5, r2
   23ebc:	mov	r4, r0
   23ec0:	bl	23b74 <mount@plt+0x11abc>
   23ec4:	mov	r1, r5
   23ec8:	mov	r0, r4
   23ecc:	pop	{r4, r5, r6, lr}
   23ed0:	b	23db8 <mount@plt+0x11d00>
   23ed4:	push	{r4, lr}
   23ed8:	vpush	{d8}
   23edc:	vmov.f64	d8, d0
   23ee0:	mov	r4, r0
   23ee4:	bl	23b74 <mount@plt+0x11abc>
   23ee8:	mov	r0, r4
   23eec:	vmov.f64	d0, d8
   23ef0:	vpop	{d8}
   23ef4:	pop	{r4, lr}
   23ef8:	b	23dfc <mount@plt+0x11d44>
   23efc:	push	{r4, r5, r6, lr}
   23f00:	mov	r5, r2
   23f04:	mov	r4, r0
   23f08:	bl	23b74 <mount@plt+0x11abc>
   23f0c:	mov	r1, r5
   23f10:	mov	r0, r4
   23f14:	pop	{r4, r5, r6, lr}
   23f18:	b	23e24 <mount@plt+0x11d6c>
   23f1c:	push	{r4, r6, r7, lr}
   23f20:	mov	r6, r2
   23f24:	mov	r7, r3
   23f28:	mov	r4, r0
   23f2c:	bl	23b74 <mount@plt+0x11abc>
   23f30:	mov	r2, r6
   23f34:	mov	r3, r7
   23f38:	mov	r0, r4
   23f3c:	pop	{r4, r6, r7, lr}
   23f40:	b	23e38 <mount@plt+0x11d80>
   23f44:	push	{r4, r6, r7, lr}
   23f48:	mov	r6, r2
   23f4c:	mov	r7, r3
   23f50:	mov	r4, r0
   23f54:	bl	23b74 <mount@plt+0x11abc>
   23f58:	mov	r2, r6
   23f5c:	mov	r3, r7
   23f60:	mov	r0, r4
   23f64:	pop	{r4, r6, r7, lr}
   23f68:	b	23e48 <mount@plt+0x11d90>
   23f6c:	push	{r4, r5, r6, lr}
   23f70:	mov	r5, r2
   23f74:	mov	r4, r0
   23f78:	bl	23b74 <mount@plt+0x11abc>
   23f7c:	mov	r1, r5
   23f80:	mov	r0, r4
   23f84:	pop	{r4, r5, r6, lr}
   23f88:	b	23e10 <mount@plt+0x11d58>
   23f8c:	push	{r4, r5, r6, lr}
   23f90:	mov	r5, r2
   23f94:	mov	r4, r0
   23f98:	bl	23b74 <mount@plt+0x11abc>
   23f9c:	mov	r1, r5
   23fa0:	mov	r0, r4
   23fa4:	pop	{r4, r5, r6, lr}
   23fa8:	b	23e58 <mount@plt+0x11da0>
   23fac:	push	{r4, r6, r7, lr}
   23fb0:	mov	r6, r2
   23fb4:	mov	r7, r3
   23fb8:	mov	r4, r0
   23fbc:	bl	23b74 <mount@plt+0x11abc>
   23fc0:	mov	r2, r6
   23fc4:	mov	r3, r7
   23fc8:	mov	r0, r4
   23fcc:	pop	{r4, r6, r7, lr}
   23fd0:	b	23e6c <mount@plt+0x11db4>
   23fd4:	push	{r4, r5, r6, lr}
   23fd8:	mov	r5, r2
   23fdc:	mov	r4, r0
   23fe0:	bl	23b74 <mount@plt+0x11abc>
   23fe4:	mov	r1, r5
   23fe8:	mov	r0, r4
   23fec:	pop	{r4, r5, r6, lr}
   23ff0:	b	23e70 <mount@plt+0x11db8>
   23ff4:	push	{r4, r6, r7, lr}
   23ff8:	mov	r6, r2
   23ffc:	mov	r7, r3
   24000:	mov	r4, r0
   24004:	bl	23b74 <mount@plt+0x11abc>
   24008:	mov	r2, r6
   2400c:	mov	r3, r7
   24010:	mov	r0, r4
   24014:	pop	{r4, r6, r7, lr}
   24018:	b	23e84 <mount@plt+0x11dcc>
   2401c:	push	{r4, lr}
   24020:	mov	r4, r0
   24024:	bl	23b74 <mount@plt+0x11abc>
   24028:	mov	r0, r4
   2402c:	pop	{r4, lr}
   24030:	b	23dec <mount@plt+0x11d34>
   24034:	push	{r4, r5, r6, r7, r8, lr}
   24038:	mov	r7, r1
   2403c:	mov	r1, #3
   24040:	mov	r4, r0
   24044:	bl	11f08 <mnl_attr_type_valid@plt>
   24048:	ldr	r5, [pc, #140]	; 240dc <mount@plt+0x12024>
   2404c:	add	r5, pc, r5
   24050:	cmp	r0, #0
   24054:	blt	2408c <mount@plt+0x11fd4>
   24058:	mov	r0, r4
   2405c:	bl	11f20 <mnl_attr_get_type@plt>
   24060:	ldr	r2, [pc, #120]	; 240e0 <mount@plt+0x12028>
   24064:	add	r2, pc, r2
   24068:	mov	r6, r0
   2406c:	mov	r0, r4
   24070:	ldr	r1, [r2, r6, lsl #2]
   24074:	bl	11eb4 <mnl_attr_validate@plt>
   24078:	cmp	r0, #0
   2407c:	blt	240b4 <mount@plt+0x11ffc>
   24080:	mov	r0, #1
   24084:	str	r4, [r7, r6, lsl #2]
   24088:	pop	{r4, r5, r6, r7, r8, pc}
   2408c:	ldr	r3, [pc, #80]	; 240e4 <mount@plt+0x1202c>
   24090:	ldr	r0, [pc, #80]	; 240e8 <mount@plt+0x12030>
   24094:	mov	r2, #25
   24098:	ldr	r3, [r5, r3]
   2409c:	mov	r1, #1
   240a0:	add	r0, pc, r0
   240a4:	ldr	r3, [r3]
   240a8:	bl	11cb0 <fwrite@plt>
   240ac:	mvn	r0, #0
   240b0:	pop	{r4, r5, r6, r7, r8, pc}
   240b4:	ldr	r1, [pc, #40]	; 240e4 <mount@plt+0x1202c>
   240b8:	ldr	r2, [pc, #44]	; 240ec <mount@plt+0x12034>
   240bc:	mov	r3, r6
   240c0:	ldr	r0, [r5, r1]
   240c4:	add	r2, pc, r2
   240c8:	mov	r1, #1
   240cc:	ldr	r0, [r0]
   240d0:	bl	11ef0 <__fprintf_chk@plt>
   240d4:	mvn	r0, #0
   240d8:	pop	{r4, r5, r6, r7, r8, pc}
   240dc:	andeq	r7, r1, ip, lsr #31
   240e0:	strdeq	r6, [r0], -r8
   240e4:	andeq	r0, r0, r4, lsl r2
   240e8:	andeq	r6, r0, ip, asr #25
   240ec:	andeq	r6, r0, r4, asr #25
   240f0:	push	{r4, r5, r6, r7, r8, lr}
   240f4:	mov	r7, r0
   240f8:	ldr	r8, [pc, #180]	; 241b4 <mount@plt+0x120fc>
   240fc:	sub	sp, sp, #8
   24100:	mov	r6, r1
   24104:	mov	r5, r2
   24108:	add	r8, pc, r8
   2410c:	b	24128 <mount@plt+0x12070>
   24110:	bl	11e18 <__errno_location@plt>
   24114:	mov	r4, r0
   24118:	ldr	r0, [r0]
   2411c:	cmp	r0, #11
   24120:	cmpne	r0, #4
   24124:	bne	2414c <mount@plt+0x12094>
   24128:	mov	r2, r5
   2412c:	mov	r1, r6
   24130:	mov	r0, r7
   24134:	bl	11fec <recvmsg@plt>
   24138:	cmp	r0, #0
   2413c:	blt	24110 <mount@plt+0x12058>
   24140:	beq	2418c <mount@plt+0x120d4>
   24144:	add	sp, sp, #8
   24148:	pop	{r4, r5, r6, r7, r8, pc}
   2414c:	ldr	r3, [pc, #100]	; 241b8 <mount@plt+0x12100>
   24150:	ldr	r3, [r8, r3]
   24154:	ldr	r5, [r3]
   24158:	bl	11d88 <strerror@plt>
   2415c:	ldr	r3, [r4]
   24160:	ldr	r2, [pc, #84]	; 241bc <mount@plt+0x12104>
   24164:	str	r3, [sp]
   24168:	add	r2, pc, r2
   2416c:	mov	r1, #1
   24170:	mov	r3, r0
   24174:	mov	r0, r5
   24178:	bl	11ef0 <__fprintf_chk@plt>
   2417c:	ldr	r0, [r4]
   24180:	rsb	r0, r0, #0
   24184:	add	sp, sp, #8
   24188:	pop	{r4, r5, r6, r7, r8, pc}
   2418c:	ldr	r3, [pc, #36]	; 241b8 <mount@plt+0x12100>
   24190:	ldr	r0, [pc, #40]	; 241c0 <mount@plt+0x12108>
   24194:	mov	r2, #15
   24198:	ldr	r3, [r8, r3]
   2419c:	mov	r1, #1
   241a0:	add	r0, pc, r0
   241a4:	ldr	r3, [r3]
   241a8:	bl	11cb0 <fwrite@plt>
   241ac:	mvn	r0, #60	; 0x3c
   241b0:	b	24144 <mount@plt+0x1208c>
   241b4:	strdeq	r7, [r1], -r0
   241b8:	andeq	r0, r0, r4, lsl r2
   241bc:	andeq	r6, r0, r8, asr ip
   241c0:	andeq	r6, r0, r0, lsl ip
   241c4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   241c8:	mov	r5, #0
   241cc:	ldr	r4, [r1, #8]
   241d0:	mov	fp, r2
   241d4:	mov	r2, #34	; 0x22
   241d8:	str	r5, [r4]
   241dc:	str	r5, [r4, #4]
   241e0:	mov	r7, r1
   241e4:	mov	sl, r0
   241e8:	bl	240f0 <mount@plt+0x12038>
   241ec:	ldr	r8, [pc, #116]	; 24268 <mount@plt+0x121b0>
   241f0:	add	r8, pc, r8
   241f4:	subs	r6, r0, #0
   241f8:	blt	2422c <mount@plt+0x12174>
   241fc:	bl	11d70 <malloc@plt>
   24200:	subs	r9, r0, #0
   24204:	beq	24240 <mount@plt+0x12188>
   24208:	str	r6, [r4, #4]
   2420c:	str	r9, [r4]
   24210:	mov	r2, r5
   24214:	mov	r1, r7
   24218:	mov	r0, sl
   2421c:	bl	240f0 <mount@plt+0x12038>
   24220:	subs	r6, r0, #0
   24224:	strge	r9, [fp]
   24228:	blt	24234 <mount@plt+0x1217c>
   2422c:	mov	r0, r6
   24230:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24234:	mov	r0, r9
   24238:	bl	11b78 <free@plt>
   2423c:	b	2422c <mount@plt+0x12174>
   24240:	ldr	r3, [pc, #36]	; 2426c <mount@plt+0x121b4>
   24244:	ldr	r0, [pc, #36]	; 24270 <mount@plt+0x121b8>
   24248:	mov	r2, #32
   2424c:	ldr	r3, [r8, r3]
   24250:	mov	r1, #1
   24254:	add	r0, pc, r0
   24258:	ldr	r3, [r3]
   2425c:	mvn	r6, #11
   24260:	bl	11cb0 <fwrite@plt>
   24264:	b	2422c <mount@plt+0x12174>
   24268:	andeq	r7, r1, r8, lsl #28
   2426c:	andeq	r0, r0, r4, lsl r2
   24270:	andeq	r6, r0, ip, lsl #23
   24274:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24278:	sub	sp, sp, #32
   2427c:	ldr	r5, [pc, #448]	; 24444 <mount@plt+0x1238c>
   24280:	ldr	r3, [pc, #448]	; 24448 <mount@plt+0x12390>
   24284:	add	r5, pc, r5
   24288:	add	r4, sp, #12
   2428c:	ldr	r6, [r5, r3]
   24290:	mov	r7, r0
   24294:	mov	r2, #0
   24298:	ldr	r3, [r6]
   2429c:	mov	r8, r1
   242a0:	str	r3, [sp, #28]
   242a4:	str	r2, [r4, #4]
   242a8:	str	r2, [sp, #12]
   242ac:	str	r2, [r4, #8]
   242b0:	str	r2, [r4, #12]
   242b4:	bl	11f98 <mnl_nlmsg_get_payload@plt>
   242b8:	ldrh	r3, [r7, #6]
   242bc:	tst	r3, #512	; 0x200
   242c0:	beq	242f0 <mount@plt+0x12238>
   242c4:	tst	r3, #256	; 0x100
   242c8:	mov	sl, r0
   242cc:	movne	r1, #20
   242d0:	beq	24370 <mount@plt+0x122b8>
   242d4:	ldr	r2, [pc, #368]	; 2444c <mount@plt+0x12394>
   242d8:	mov	r3, r4
   242dc:	add	r2, pc, r2
   242e0:	mov	r0, r7
   242e4:	bl	11c08 <mnl_attr_parse@plt>
   242e8:	cmp	r0, #1
   242ec:	beq	2430c <mount@plt+0x12254>
   242f0:	mov	r0, #0
   242f4:	ldr	r2, [sp, #28]
   242f8:	ldr	r3, [r6]
   242fc:	cmp	r2, r3
   24300:	bne	24440 <mount@plt+0x12388>
   24304:	add	sp, sp, #32
   24308:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2430c:	ldr	r9, [sp, #16]
   24310:	cmp	r9, #0
   24314:	beq	24324 <mount@plt+0x1226c>
   24318:	mov	r0, r9
   2431c:	bl	11efc <mnl_attr_get_str@plt>
   24320:	mov	r9, r0
   24324:	ldr	r2, [sp, #20]
   24328:	cmp	r2, #0
   2432c:	moveq	r1, r2
   24330:	beq	2435c <mount@plt+0x122a4>
   24334:	mov	r0, r2
   24338:	bl	11fc8 <mnl_attr_get_u32@plt>
   2433c:	ldr	r3, [r7]
   24340:	cmp	r3, r0
   24344:	mov	r1, r0
   24348:	bcc	24408 <mount@plt+0x12350>
   2434c:	ldrh	r3, [r7, #6]
   24350:	tst	r3, #256	; 0x100
   24354:	addeq	r2, sl, #4
   24358:	movne	r2, #0
   2435c:	cmp	r8, #0
   24360:	beq	24380 <mount@plt+0x122c8>
   24364:	mov	r0, r9
   24368:	blx	r8
   2436c:	b	242f4 <mount@plt+0x1223c>
   24370:	add	r0, r0, #4
   24374:	bl	11f2c <mnl_nlmsg_get_payload_len@plt>
   24378:	add	r1, r0, #20
   2437c:	b	242d4 <mount@plt+0x1221c>
   24380:	cmp	r9, #0
   24384:	beq	242f0 <mount@plt+0x12238>
   24388:	ldrb	r3, [r9]
   2438c:	cmp	r3, #0
   24390:	beq	242f0 <mount@plt+0x12238>
   24394:	ldr	r3, [pc, #180]	; 24450 <mount@plt+0x12398>
   24398:	ldr	r2, [sl]
   2439c:	ldr	r5, [r5, r3]
   243a0:	cmp	r2, #0
   243a4:	movne	r4, #1
   243a8:	moveq	r4, #0
   243ac:	ldr	r0, [r5]
   243b0:	beq	24434 <mount@plt+0x1237c>
   243b4:	ldr	r3, [pc, #152]	; 24454 <mount@plt+0x1239c>
   243b8:	add	r3, pc, r3
   243bc:	ldr	r2, [pc, #148]	; 24458 <mount@plt+0x123a0>
   243c0:	mov	r1, #1
   243c4:	add	r2, pc, r2
   243c8:	str	r9, [sp]
   243cc:	bl	11ef0 <__fprintf_chk@plt>
   243d0:	mov	r0, r9
   243d4:	bl	11e00 <strlen@plt>
   243d8:	add	r0, r9, r0
   243dc:	ldrb	r3, [r0, #-1]
   243e0:	cmp	r3, #46	; 0x2e
   243e4:	beq	243f4 <mount@plt+0x1233c>
   243e8:	ldr	r1, [r5]
   243ec:	mov	r0, #46	; 0x2e
   243f0:	bl	11f8c <fputc@plt>
   243f4:	ldr	r1, [r5]
   243f8:	mov	r0, #10
   243fc:	bl	11f8c <fputc@plt>
   24400:	mov	r0, r4
   24404:	b	242f4 <mount@plt+0x1223c>
   24408:	ldr	r3, [pc, #64]	; 24450 <mount@plt+0x12398>
   2440c:	ldr	r0, [pc, #72]	; 2445c <mount@plt+0x123a4>
   24410:	mov	r2, #38	; 0x26
   24414:	ldr	r3, [r5, r3]
   24418:	mov	r1, #1
   2441c:	add	r0, pc, r0
   24420:	ldr	r3, [r3]
   24424:	bl	11cb0 <fwrite@plt>
   24428:	mov	r1, #0
   2442c:	mov	r2, r1
   24430:	b	2435c <mount@plt+0x122a4>
   24434:	ldr	r3, [pc, #36]	; 24460 <mount@plt+0x123a8>
   24438:	add	r3, pc, r3
   2443c:	b	243bc <mount@plt+0x12304>
   24440:	bl	11c2c <__stack_chk_fail@plt>
   24444:	andeq	r7, r1, r4, ror sp
   24448:	andeq	r0, r0, r8, lsl #4
   2444c:			; <UNDEFINED> instruction: 0xfffffd50
   24450:	andeq	r0, r0, r4, lsl r2
   24454:	andeq	r6, r0, r4, asr sl
   24458:	andeq	r6, r0, r8, ror sl
   2445c:	strdeq	r6, [r0], -r8
   24460:	andeq	r6, r0, ip, asr #19
   24464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24468:	sub	sp, sp, #100	; 0x64
   2446c:	ldr	fp, [pc, #1012]	; 24868 <mount@plt+0x127b0>
   24470:	ldr	ip, [pc, #1012]	; 2486c <mount@plt+0x127b4>
   24474:	add	fp, pc, fp
   24478:	str	r2, [sp, #12]
   2447c:	ldr	lr, [fp, ip]
   24480:	mov	r9, r3
   24484:	mov	r3, #0
   24488:	str	r3, [sp, #58]	; 0x3a
   2448c:	str	r3, [sp, #54]	; 0x36
   24490:	strh	r3, [sp, #62]	; 0x3e
   24494:	str	r3, [sp, #80]	; 0x50
   24498:	str	r3, [sp, #84]	; 0x54
   2449c:	str	r3, [sp, #88]	; 0x58
   244a0:	add	r3, sp, #52	; 0x34
   244a4:	subs	ip, r2, #0
   244a8:	str	r3, [sp, #64]	; 0x40
   244ac:	ldr	r2, [lr]
   244b0:	ldrb	r3, [sp, #136]	; 0x88
   244b4:	mov	r7, r0
   244b8:	str	r2, [sp, #92]	; 0x5c
   244bc:	mov	r0, #16
   244c0:	mov	r2, #12
   244c4:	str	lr, [sp, #28]
   244c8:	str	r1, [sp, #72]	; 0x48
   244cc:	str	ip, [sp, #76]	; 0x4c
   244d0:	strh	r0, [sp, #52]	; 0x34
   244d4:	str	r2, [sp, #68]	; 0x44
   244d8:	str	r3, [sp, #36]	; 0x24
   244dc:	beq	24764 <mount@plt+0x126ac>
   244e0:	ldr	r3, [r7, #28]
   244e4:	add	r8, ip, r3
   244e8:	rsb	r2, r3, r3, lsl #29
   244ec:	add	r1, r1, r2, lsl #3
   244f0:	ldr	r2, [r1, r3, lsl #3]
   244f4:	cmp	r9, #0
   244f8:	add	r3, r3, #1
   244fc:	ldrheq	r0, [r2, #6]
   24500:	str	r3, [r2, #8]
   24504:	orreq	r0, r0, #4
   24508:	strheq	r0, [r2, #6]
   2450c:	cmp	r3, r8
   24510:	bne	244f0 <mount@plt+0x12438>
   24514:	str	r8, [r7, #28]
   24518:	add	r3, sp, #64	; 0x40
   2451c:	mov	r1, r3
   24520:	mov	r2, #0
   24524:	ldr	r0, [r7]
   24528:	str	r3, [sp, #24]
   2452c:	bl	11be4 <sendmsg@plt>
   24530:	cmp	r0, #0
   24534:	blt	247fc <mount@plt+0x12744>
   24538:	add	r3, sp, #44	; 0x2c
   2453c:	str	r3, [sp, #72]	; 0x48
   24540:	mov	r3, #0
   24544:	str	r3, [sp, #8]
   24548:	add	r3, sp, #40	; 0x28
   2454c:	str	r3, [sp, #20]
   24550:	ldr	r3, [pc, #792]	; 24870 <mount@plt+0x127b8>
   24554:	mov	r2, #1
   24558:	add	r3, pc, r3
   2455c:	str	r3, [sp, #4]
   24560:	ldr	r3, [pc, #780]	; 24874 <mount@plt+0x127bc>
   24564:	str	r2, [sp, #76]	; 0x4c
   24568:	add	r3, pc, r3
   2456c:	str	r3, [sp, #32]
   24570:	ldr	r2, [sp, #20]
   24574:	ldr	r1, [sp, #24]
   24578:	ldr	r0, [r7]
   2457c:	bl	241c4 <mount@plt+0x1210c>
   24580:	ldr	r3, [sp, #8]
   24584:	add	r3, r3, #1
   24588:	str	r3, [sp, #16]
   2458c:	subs	r6, r0, #0
   24590:	blt	246d4 <mount@plt+0x1261c>
   24594:	ldr	r3, [sp, #68]	; 0x44
   24598:	cmp	r3, #12
   2459c:	bne	24854 <mount@plt+0x1279c>
   245a0:	ldr	r3, [sp, #12]
   245a4:	ldr	r5, [sp, #40]	; 0x28
   245a8:	sub	sl, r8, r3
   245ac:	b	2463c <mount@plt+0x12584>
   245b0:	ldr	r4, [r5]
   245b4:	cmp	r4, r6
   245b8:	sub	r3, r4, #16
   245bc:	movle	r2, #0
   245c0:	movgt	r2, #1
   245c4:	orrs	r2, r2, r3, lsr #31
   245c8:	bne	246f4 <mount@plt+0x1263c>
   245cc:	ldr	r2, [sp, #56]	; 0x38
   245d0:	cmp	r2, #0
   245d4:	bne	2462c <mount@plt+0x12574>
   245d8:	ldr	r0, [r5, #12]
   245dc:	ldr	r1, [r7, #8]
   245e0:	cmp	r0, r1
   245e4:	bne	2462c <mount@plt+0x12574>
   245e8:	ldr	r1, [r5, #8]
   245ec:	cmp	r1, r8
   245f0:	bhi	2462c <mount@plt+0x12574>
   245f4:	cmp	r1, sl
   245f8:	bcc	2462c <mount@plt+0x12574>
   245fc:	ldrh	r1, [r5, #4]
   24600:	cmp	r1, #2
   24604:	beq	2466c <mount@plt+0x125b4>
   24608:	cmp	r9, #0
   2460c:	bne	24754 <mount@plt+0x1269c>
   24610:	ldr	r3, [pc, #608]	; 24878 <mount@plt+0x127c0>
   24614:	mov	r2, #20
   24618:	mov	r1, #1
   2461c:	ldr	r3, [fp, r3]
   24620:	ldr	r0, [sp, #4]
   24624:	ldr	r3, [r3]
   24628:	bl	11cb0 <fwrite@plt>
   2462c:	add	r4, r4, #3
   24630:	bic	r4, r4, #3
   24634:	sub	r6, r6, r4
   24638:	add	r5, r5, r4
   2463c:	cmp	r6, #15
   24640:	bhi	245b0 <mount@plt+0x124f8>
   24644:	ldr	r0, [sp, #40]	; 0x28
   24648:	bl	11b78 <free@plt>
   2464c:	ldr	r3, [sp, #88]	; 0x58
   24650:	tst	r3, #32
   24654:	bne	24734 <mount@plt+0x1267c>
   24658:	cmp	r6, #0
   2465c:	bne	2482c <mount@plt+0x12774>
   24660:	ldr	r3, [sp, #16]
   24664:	str	r3, [sp, #8]
   24668:	b	24570 <mount@plt+0x124b8>
   2466c:	cmp	r3, #19
   24670:	ldr	r6, [r5, #16]
   24674:	bls	247cc <mount@plt+0x12714>
   24678:	cmp	r6, #0
   2467c:	beq	2476c <mount@plt+0x126b4>
   24680:	bl	11e18 <__errno_location@plt>
   24684:	rsb	r3, r6, #0
   24688:	ldr	r2, [sp, #36]	; 0x24
   2468c:	str	r3, [r0]
   24690:	ldr	r3, [r7, #36]	; 0x24
   24694:	cmp	r3, #4
   24698:	moveq	r2, #0
   2469c:	andne	r2, r2, #1
   246a0:	cmp	r2, #0
   246a4:	bne	24784 <mount@plt+0x126cc>
   246a8:	ldr	r0, [sp, #40]	; 0x28
   246ac:	cmp	r9, #0
   246b0:	strne	r0, [r9]
   246b4:	beq	2477c <mount@plt+0x126c4>
   246b8:	ldr	r3, [sp, #12]
   246bc:	ldr	r2, [sp, #16]
   246c0:	cmp	r3, r2
   246c4:	bhi	24660 <mount@plt+0x125a8>
   246c8:	cmp	r6, #0
   246cc:	ldrne	r3, [sp, #8]
   246d0:	mvnne	r6, r3
   246d4:	ldr	r3, [sp, #28]
   246d8:	ldr	r2, [sp, #92]	; 0x5c
   246dc:	mov	r0, r6
   246e0:	ldr	r3, [r3]
   246e4:	cmp	r2, r3
   246e8:	bne	24864 <mount@plt+0x127ac>
   246ec:	add	sp, sp, #100	; 0x64
   246f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   246f4:	ldr	r3, [pc, #380]	; 24878 <mount@plt+0x127c0>
   246f8:	ldr	r2, [sp, #88]	; 0x58
   246fc:	ldr	r3, [fp, r3]
   24700:	tst	r2, #32
   24704:	ldr	r0, [r3]
   24708:	beq	24810 <mount@plt+0x12758>
   2470c:	mov	r3, r0
   24710:	ldr	r0, [pc, #356]	; 2487c <mount@plt+0x127c4>
   24714:	mov	r2, #18
   24718:	mov	r1, #1
   2471c:	add	r0, pc, r0
   24720:	bl	11cb0 <fwrite@plt>
   24724:	ldr	r0, [sp, #40]	; 0x28
   24728:	bl	11b78 <free@plt>
   2472c:	mvn	r6, #0
   24730:	b	246d4 <mount@plt+0x1261c>
   24734:	ldr	r3, [pc, #316]	; 24878 <mount@plt+0x127c0>
   24738:	mov	r2, #18
   2473c:	mov	r1, #1
   24740:	ldr	r3, [fp, r3]
   24744:	ldr	r0, [sp, #32]
   24748:	ldr	r3, [r3]
   2474c:	bl	11cb0 <fwrite@plt>
   24750:	b	24660 <mount@plt+0x125a8>
   24754:	ldr	r3, [sp, #40]	; 0x28
   24758:	mov	r6, r2
   2475c:	str	r3, [r9]
   24760:	b	246d4 <mount@plt+0x1261c>
   24764:	ldr	r8, [sp, #12]
   24768:	b	24518 <mount@plt+0x12460>
   2476c:	mov	r0, r5
   24770:	mov	r1, r6
   24774:	bl	24274 <mount@plt+0x121bc>
   24778:	b	246a8 <mount@plt+0x125f0>
   2477c:	bl	11b78 <free@plt>
   24780:	b	246b8 <mount@plt+0x12600>
   24784:	mov	r1, #0
   24788:	mov	r0, r5
   2478c:	bl	24274 <mount@plt+0x121bc>
   24790:	cmp	r0, #0
   24794:	bne	246a8 <mount@plt+0x125f0>
   24798:	ldr	r3, [pc, #216]	; 24878 <mount@plt+0x127c0>
   2479c:	ldr	r0, [r5, #16]
   247a0:	ldr	r3, [fp, r3]
   247a4:	rsb	r0, r0, #0
   247a8:	ldr	r4, [r3]
   247ac:	bl	11d88 <strerror@plt>
   247b0:	ldr	r2, [pc, #200]	; 24880 <mount@plt+0x127c8>
   247b4:	mov	r1, #1
   247b8:	add	r2, pc, r2
   247bc:	mov	r3, r0
   247c0:	mov	r0, r4
   247c4:	bl	11ef0 <__fprintf_chk@plt>
   247c8:	b	246a8 <mount@plt+0x125f0>
   247cc:	ldr	r3, [pc, #164]	; 24878 <mount@plt+0x127c0>
   247d0:	ldr	r0, [pc, #172]	; 24884 <mount@plt+0x127cc>
   247d4:	mov	r2, #16
   247d8:	ldr	r3, [fp, r3]
   247dc:	mov	r1, #1
   247e0:	add	r0, pc, r0
   247e4:	ldr	r3, [r3]
   247e8:	bl	11cb0 <fwrite@plt>
   247ec:	ldr	r0, [sp, #40]	; 0x28
   247f0:	mvn	r6, #0
   247f4:	bl	11b78 <free@plt>
   247f8:	b	246d4 <mount@plt+0x1261c>
   247fc:	ldr	r0, [pc, #132]	; 24888 <mount@plt+0x127d0>
   24800:	mvn	r6, #0
   24804:	add	r0, pc, r0
   24808:	bl	11c80 <perror@plt>
   2480c:	b	246d4 <mount@plt+0x1261c>
   24810:	ldr	r2, [pc, #116]	; 2488c <mount@plt+0x127d4>
   24814:	mov	r3, r4
   24818:	add	r2, pc, r2
   2481c:	mov	r1, #1
   24820:	bl	11ef0 <__fprintf_chk@plt>
   24824:	mov	r0, #1
   24828:	bl	11ddc <exit@plt>
   2482c:	ldr	r2, [pc, #92]	; 24890 <mount@plt+0x127d8>
   24830:	ldr	r1, [pc, #64]	; 24878 <mount@plt+0x127c0>
   24834:	mov	r3, r6
   24838:	add	r2, pc, r2
   2483c:	ldr	r0, [fp, r1]
   24840:	mov	r1, #1
   24844:	ldr	r0, [r0]
   24848:	bl	11ef0 <__fprintf_chk@plt>
   2484c:	mov	r0, #1
   24850:	bl	11ddc <exit@plt>
   24854:	ldr	r2, [pc, #56]	; 24894 <mount@plt+0x127dc>
   24858:	ldr	r1, [pc, #24]	; 24878 <mount@plt+0x127c0>
   2485c:	add	r2, pc, r2
   24860:	b	2483c <mount@plt+0x12784>
   24864:	bl	11c2c <__stack_chk_fail@plt>
   24868:	andeq	r7, r1, r4, lsl #23
   2486c:	andeq	r0, r0, r8, lsl #4
   24870:	andeq	r6, r0, r4, ror r9
   24874:	andeq	r6, r0, ip, ror r9
   24878:	andeq	r0, r0, r4, lsl r2
   2487c:	andeq	r6, r0, r4, ror #14
   24880:	strdeq	r6, [r0], -ip
   24884:	andeq	r4, r0, r4, lsr lr
   24888:	andeq	r6, r0, r0, asr #12
   2488c:	andeq	r6, r0, ip, ror r6
   24890:	andeq	r6, r0, r0, asr #13
   24894:	andeq	r6, r0, r4, lsl #12
   24898:	ldr	r3, [r0]
   2489c:	cmp	r3, #0
   248a0:	bxlt	lr
   248a4:	push	{r4, lr}
   248a8:	mov	r4, r0
   248ac:	mov	r0, r3
   248b0:	bl	12064 <close@plt>
   248b4:	mvn	r3, #0
   248b8:	str	r3, [r4]
   248bc:	pop	{r4, pc}
   248c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   248c4:	mov	r9, r1
   248c8:	ldr	r7, [pc, #504]	; 24ac8 <mount@plt+0x12a10>
   248cc:	ldr	r3, [pc, #504]	; 24acc <mount@plt+0x12a14>
   248d0:	add	r7, pc, r7
   248d4:	sub	sp, sp, #24
   248d8:	ldr	sl, [r7, r3]
   248dc:	mov	r4, r0
   248e0:	mov	r5, r2
   248e4:	ldr	r1, [sl]
   248e8:	mov	r3, #32768	; 0x8000
   248ec:	mov	r2, #48	; 0x30
   248f0:	str	r1, [sp, #20]
   248f4:	mov	r8, #1
   248f8:	mov	r1, #0
   248fc:	str	r3, [sp, #12]
   24900:	str	r8, [sp, #16]
   24904:	bl	11e78 <memset@plt>
   24908:	str	r5, [r4, #36]	; 0x24
   2490c:	mov	r2, r5
   24910:	ldr	r1, [pc, #440]	; 24ad0 <mount@plt+0x12a18>
   24914:	mov	r0, #16
   24918:	bl	12010 <socket@plt>
   2491c:	cmp	r0, #0
   24920:	str	r0, [r4]
   24924:	blt	24a60 <mount@plt+0x129a8>
   24928:	mov	r5, #4
   2492c:	str	r5, [sp]
   24930:	add	r3, sp, #12
   24934:	mov	r2, #7
   24938:	mov	r1, r8
   2493c:	bl	11b24 <setsockopt@plt>
   24940:	cmp	r0, #0
   24944:	blt	24a88 <mount@plt+0x129d0>
   24948:	ldr	r3, [pc, #388]	; 24ad4 <mount@plt+0x12a1c>
   2494c:	ldr	r0, [r4]
   24950:	mov	r2, #8
   24954:	ldr	r3, [r7, r3]
   24958:	mov	r1, r8
   2495c:	str	r5, [sp]
   24960:	bl	11b24 <setsockopt@plt>
   24964:	cmp	r0, #0
   24968:	blt	24a74 <mount@plt+0x129bc>
   2496c:	mov	r6, r4
   24970:	str	r5, [sp]
   24974:	add	r3, sp, #16
   24978:	ldr	r0, [r6], #4
   2497c:	mov	r2, #11
   24980:	ldr	r1, [pc, #336]	; 24ad8 <mount@plt+0x12a20>
   24984:	bl	11b24 <setsockopt@plt>
   24988:	mov	r5, #0
   2498c:	mov	ip, #16
   24990:	str	r5, [r4, #6]
   24994:	mov	r1, r6
   24998:	strh	r5, [r4, #10]
   2499c:	mov	r2, #12
   249a0:	str	r9, [r4, #12]
   249a4:	ldr	r0, [r4]
   249a8:	strh	ip, [r4, #4]
   249ac:	bl	11e60 <bind@plt>
   249b0:	cmp	r0, r5
   249b4:	blt	24a9c <mount@plt+0x129e4>
   249b8:	mov	r3, #12
   249bc:	mov	r1, r6
   249c0:	add	r2, sp, #8
   249c4:	ldr	r0, [r4]
   249c8:	str	r3, [sp, #8]
   249cc:	bl	11fe0 <getsockname@plt>
   249d0:	cmp	r0, #0
   249d4:	blt	24ab0 <mount@plt+0x129f8>
   249d8:	ldr	r3, [sp, #8]
   249dc:	cmp	r3, #12
   249e0:	bne	24a3c <mount@plt+0x12984>
   249e4:	ldrh	r3, [r4, #4]
   249e8:	cmp	r3, #16
   249ec:	bne	24a18 <mount@plt+0x12960>
   249f0:	mov	r0, r5
   249f4:	bl	11bd8 <time@plt>
   249f8:	str	r0, [r4, #28]
   249fc:	ldr	r2, [sp, #20]
   24a00:	ldr	r3, [sl]
   24a04:	mov	r0, r5
   24a08:	cmp	r2, r3
   24a0c:	bne	24ac4 <mount@plt+0x12a0c>
   24a10:	add	sp, sp, #24
   24a14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24a18:	ldr	r2, [pc, #188]	; 24adc <mount@plt+0x12a24>
   24a1c:	mov	r1, r8
   24a20:	mvn	r5, #0
   24a24:	ldr	r0, [r7, r2]
   24a28:	ldr	r2, [pc, #176]	; 24ae0 <mount@plt+0x12a28>
   24a2c:	ldr	r0, [r0]
   24a30:	add	r2, pc, r2
   24a34:	bl	11ef0 <__fprintf_chk@plt>
   24a38:	b	249fc <mount@plt+0x12944>
   24a3c:	ldr	r2, [pc, #152]	; 24adc <mount@plt+0x12a24>
   24a40:	mov	r1, r8
   24a44:	mvn	r5, #0
   24a48:	ldr	r0, [r7, r2]
   24a4c:	ldr	r2, [pc, #144]	; 24ae4 <mount@plt+0x12a2c>
   24a50:	ldr	r0, [r0]
   24a54:	add	r2, pc, r2
   24a58:	bl	11ef0 <__fprintf_chk@plt>
   24a5c:	b	249fc <mount@plt+0x12944>
   24a60:	ldr	r0, [pc, #128]	; 24ae8 <mount@plt+0x12a30>
   24a64:	mvn	r5, #0
   24a68:	add	r0, pc, r0
   24a6c:	bl	11c80 <perror@plt>
   24a70:	b	249fc <mount@plt+0x12944>
   24a74:	ldr	r0, [pc, #112]	; 24aec <mount@plt+0x12a34>
   24a78:	mvn	r5, #0
   24a7c:	add	r0, pc, r0
   24a80:	bl	11c80 <perror@plt>
   24a84:	b	249fc <mount@plt+0x12944>
   24a88:	ldr	r0, [pc, #96]	; 24af0 <mount@plt+0x12a38>
   24a8c:	mvn	r5, #0
   24a90:	add	r0, pc, r0
   24a94:	bl	11c80 <perror@plt>
   24a98:	b	249fc <mount@plt+0x12944>
   24a9c:	ldr	r0, [pc, #80]	; 24af4 <mount@plt+0x12a3c>
   24aa0:	mvn	r5, #0
   24aa4:	add	r0, pc, r0
   24aa8:	bl	11c80 <perror@plt>
   24aac:	b	249fc <mount@plt+0x12944>
   24ab0:	ldr	r0, [pc, #64]	; 24af8 <mount@plt+0x12a40>
   24ab4:	mvn	r5, #0
   24ab8:	add	r0, pc, r0
   24abc:	bl	11c80 <perror@plt>
   24ac0:	b	249fc <mount@plt+0x12944>
   24ac4:	bl	11c2c <__stack_chk_fail@plt>
   24ac8:	andeq	r7, r1, r8, lsr #14
   24acc:	andeq	r0, r0, r8, lsl #4
   24ad0:	andeq	r0, r8, r3
   24ad4:	andeq	r0, r0, r8, lsl r2
   24ad8:	andeq	r0, r0, lr, lsl #2
   24adc:	andeq	r0, r0, r4, lsl r2
   24ae0:	andeq	r6, r0, r0, ror #10
   24ae4:	andeq	r6, r0, r0, lsr #10
   24ae8:	andeq	r6, r0, r8, lsr #9
   24aec:			; <UNDEFINED> instruction: 0x000064bc
   24af0:	muleq	r0, ip, r4
   24af4:	andeq	r6, r0, r0, lsr #9
   24af8:	andeq	r6, r0, r8, lsr #9
   24afc:	mov	r2, #0
   24b00:	b	248c0 <mount@plt+0x12808>
   24b04:	ldr	r3, [pc, #124]	; 24b88 <mount@plt+0x12ad0>
   24b08:	ldr	r2, [pc, #124]	; 24b8c <mount@plt+0x12ad4>
   24b0c:	add	r3, pc, r3
   24b10:	push	{r4, lr}
   24b14:	sub	sp, sp, #32
   24b18:	ldr	r4, [r3, r2]
   24b1c:	ldr	r2, [r0, #28]
   24b20:	mov	r3, #0
   24b24:	ldr	lr, [r4]
   24b28:	add	r2, r2, #1
   24b2c:	str	r3, [sp, #20]
   24b30:	str	lr, [sp, #28]
   24b34:	strb	r1, [sp, #20]
   24b38:	ldr	lr, [pc, #80]	; 24b90 <mount@plt+0x12ad8>
   24b3c:	mov	r1, #24
   24b40:	str	r2, [r0, #28]
   24b44:	str	r2, [r0, #32]
   24b48:	str	r2, [sp, #12]
   24b4c:	str	r1, [sp, #4]
   24b50:	mov	r2, r1
   24b54:	ldr	r0, [r0]
   24b58:	add	r1, sp, #4
   24b5c:	str	r3, [sp, #16]
   24b60:	str	r3, [sp, #24]
   24b64:	str	lr, [sp, #8]
   24b68:	bl	12070 <send@plt>
   24b6c:	ldr	r2, [sp, #28]
   24b70:	ldr	r3, [r4]
   24b74:	cmp	r2, r3
   24b78:	bne	24b84 <mount@plt+0x12acc>
   24b7c:	add	sp, sp, #32
   24b80:	pop	{r4, pc}
   24b84:	bl	11c2c <__stack_chk_fail@plt>
   24b88:	andeq	r7, r1, ip, ror #9
   24b8c:	andeq	r0, r0, r8, lsl #4
   24b90:	movweq	r0, #4118	; 0x1016
   24b94:	ldr	r3, [pc, #128]	; 24c1c <mount@plt+0x12b64>
   24b98:	ldr	r2, [pc, #128]	; 24c20 <mount@plt+0x12b68>
   24b9c:	add	r3, pc, r3
   24ba0:	push	{r4, lr}
   24ba4:	sub	sp, sp, #32
   24ba8:	ldr	r4, [r3, r2]
   24bac:	ldr	ip, [r0, #28]
   24bb0:	mov	r3, #0
   24bb4:	add	ip, ip, #1
   24bb8:	str	ip, [r0, #28]
   24bbc:	str	ip, [r0, #32]
   24bc0:	str	r3, [sp, #16]
   24bc4:	ldr	lr, [r4]
   24bc8:	strb	r1, [sp, #16]
   24bcc:	str	ip, [sp, #8]
   24bd0:	mov	r1, #28
   24bd4:	ldr	ip, [pc, #72]	; 24c24 <mount@plt+0x12b6c>
   24bd8:	mov	r2, r1
   24bdc:	str	r1, [sp]
   24be0:	ldr	r0, [r0]
   24be4:	mov	r1, sp
   24be8:	str	r3, [sp, #12]
   24bec:	str	r3, [sp, #20]
   24bf0:	str	r3, [sp, #24]
   24bf4:	str	lr, [sp, #28]
   24bf8:	str	ip, [sp, #4]
   24bfc:	bl	12070 <send@plt>
   24c00:	ldr	r2, [sp, #28]
   24c04:	ldr	r3, [r4]
   24c08:	cmp	r2, r3
   24c0c:	bne	24c18 <mount@plt+0x12b60>
   24c10:	add	sp, sp, #32
   24c14:	pop	{r4, pc}
   24c18:	bl	11c2c <__stack_chk_fail@plt>
   24c1c:	andeq	r7, r1, ip, asr r4
   24c20:	andeq	r0, r0, r8, lsl #4
   24c24:	movweq	r0, #4170	; 0x104a
   24c28:	ldr	r3, [pc, #128]	; 24cb0 <mount@plt+0x12bf8>
   24c2c:	ldr	r2, [pc, #128]	; 24cb4 <mount@plt+0x12bfc>
   24c30:	add	r3, pc, r3
   24c34:	push	{r4, lr}
   24c38:	sub	sp, sp, #32
   24c3c:	ldr	r4, [r3, r2]
   24c40:	ldr	ip, [r0, #28]
   24c44:	mov	r3, #0
   24c48:	add	ip, ip, #1
   24c4c:	str	ip, [r0, #28]
   24c50:	str	ip, [r0, #32]
   24c54:	str	r3, [sp, #16]
   24c58:	ldr	lr, [r4]
   24c5c:	strb	r1, [sp, #16]
   24c60:	str	ip, [sp, #8]
   24c64:	mov	r1, #28
   24c68:	ldr	ip, [pc, #72]	; 24cb8 <mount@plt+0x12c00>
   24c6c:	mov	r2, r1
   24c70:	str	r1, [sp]
   24c74:	ldr	r0, [r0]
   24c78:	mov	r1, sp
   24c7c:	str	r3, [sp, #12]
   24c80:	str	r3, [sp, #20]
   24c84:	str	r3, [sp, #24]
   24c88:	str	lr, [sp, #28]
   24c8c:	str	ip, [sp, #4]
   24c90:	bl	12070 <send@plt>
   24c94:	ldr	r2, [sp, #28]
   24c98:	ldr	r3, [r4]
   24c9c:	cmp	r2, r3
   24ca0:	bne	24cac <mount@plt+0x12bf4>
   24ca4:	add	sp, sp, #32
   24ca8:	pop	{r4, pc}
   24cac:	bl	11c2c <__stack_chk_fail@plt>
   24cb0:	andeq	r7, r1, r8, asr #7
   24cb4:	andeq	r0, r0, r8, lsl #4
   24cb8:	movweq	r0, #4122	; 0x101a
   24cbc:	ldr	r3, [pc, #128]	; 24d44 <mount@plt+0x12c8c>
   24cc0:	ldr	r2, [pc, #128]	; 24d48 <mount@plt+0x12c90>
   24cc4:	add	r3, pc, r3
   24cc8:	push	{r4, lr}
   24ccc:	sub	sp, sp, #32
   24cd0:	ldr	r4, [r3, r2]
   24cd4:	ldr	ip, [r0, #28]
   24cd8:	mov	r3, #0
   24cdc:	add	ip, ip, #1
   24ce0:	str	ip, [r0, #28]
   24ce4:	str	ip, [r0, #32]
   24ce8:	str	r3, [sp, #16]
   24cec:	ldr	lr, [r4]
   24cf0:	strb	r1, [sp, #16]
   24cf4:	str	ip, [sp, #8]
   24cf8:	mov	r1, #28
   24cfc:	ldr	ip, [pc, #72]	; 24d4c <mount@plt+0x12c94>
   24d00:	mov	r2, r1
   24d04:	str	r1, [sp]
   24d08:	ldr	r0, [r0]
   24d0c:	mov	r1, sp
   24d10:	str	r3, [sp, #12]
   24d14:	str	r3, [sp, #20]
   24d18:	str	r3, [sp, #24]
   24d1c:	str	lr, [sp, #28]
   24d20:	str	ip, [sp, #4]
   24d24:	bl	12070 <send@plt>
   24d28:	ldr	r2, [sp, #28]
   24d2c:	ldr	r3, [r4]
   24d30:	cmp	r2, r3
   24d34:	bne	24d40 <mount@plt+0x12c88>
   24d38:	add	sp, sp, #32
   24d3c:	pop	{r4, pc}
   24d40:	bl	11c2c <__stack_chk_fail@plt>
   24d44:	andeq	r7, r1, r4, lsr r3
   24d48:	andeq	r0, r0, r8, lsl #4
   24d4c:	movweq	r0, #4130	; 0x1022
   24d50:	ldr	r3, [pc, #128]	; 24dd8 <mount@plt+0x12d20>
   24d54:	ldr	r2, [pc, #128]	; 24ddc <mount@plt+0x12d24>
   24d58:	add	r3, pc, r3
   24d5c:	push	{r4, lr}
   24d60:	sub	sp, sp, #32
   24d64:	ldr	r4, [r3, r2]
   24d68:	ldr	ip, [r0, #28]
   24d6c:	mov	r3, #0
   24d70:	add	ip, ip, #1
   24d74:	str	ip, [r0, #28]
   24d78:	str	ip, [r0, #32]
   24d7c:	str	r3, [sp, #16]
   24d80:	ldr	lr, [r4]
   24d84:	strb	r1, [sp, #16]
   24d88:	str	ip, [sp, #8]
   24d8c:	mov	r1, #28
   24d90:	ldr	ip, [pc, #72]	; 24de0 <mount@plt+0x12d28>
   24d94:	mov	r2, r1
   24d98:	str	r1, [sp]
   24d9c:	ldr	r0, [r0]
   24da0:	mov	r1, sp
   24da4:	str	r3, [sp, #12]
   24da8:	str	r3, [sp, #20]
   24dac:	str	r3, [sp, #24]
   24db0:	str	lr, [sp, #28]
   24db4:	str	ip, [sp, #4]
   24db8:	bl	12070 <send@plt>
   24dbc:	ldr	r2, [sp, #28]
   24dc0:	ldr	r3, [r4]
   24dc4:	cmp	r2, r3
   24dc8:	bne	24dd4 <mount@plt+0x12d1c>
   24dcc:	add	sp, sp, #32
   24dd0:	pop	{r4, pc}
   24dd4:	bl	11c2c <__stack_chk_fail@plt>
   24dd8:	andeq	r7, r1, r0, lsr #5
   24ddc:	andeq	r0, r0, r8, lsl #4
   24de0:	movweq	r0, #4126	; 0x101e
   24de4:	ldr	r2, [pc, #124]	; 24e68 <mount@plt+0x12db0>
   24de8:	ldr	r3, [pc, #124]	; 24e6c <mount@plt+0x12db4>
   24dec:	add	r2, pc, r2
   24df0:	push	{r4, lr}
   24df4:	sub	sp, sp, #24
   24df8:	ldr	r4, [r2, r3]
   24dfc:	ldr	r3, [r0, #28]
   24e00:	mov	r2, #0
   24e04:	add	r3, r3, #1
   24e08:	str	r2, [sp, #16]
   24e0c:	ldr	lr, [r4]
   24e10:	strb	r1, [sp, #16]
   24e14:	ldr	ip, [pc, #84]	; 24e70 <mount@plt+0x12db8>
   24e18:	mov	r1, #20
   24e1c:	str	r3, [r0, #28]
   24e20:	str	r3, [r0, #32]
   24e24:	str	r3, [sp, #8]
   24e28:	str	r2, [sp, #12]
   24e2c:	mov	r3, r2
   24e30:	str	r1, [sp]
   24e34:	mov	r2, r1
   24e38:	ldr	r0, [r0]
   24e3c:	mov	r1, sp
   24e40:	str	lr, [sp, #20]
   24e44:	str	ip, [sp, #4]
   24e48:	bl	12070 <send@plt>
   24e4c:	ldr	r2, [sp, #20]
   24e50:	ldr	r3, [r4]
   24e54:	cmp	r2, r3
   24e58:	bne	24e64 <mount@plt+0x12dac>
   24e5c:	add	sp, sp, #24
   24e60:	pop	{r4, pc}
   24e64:	bl	11c2c <__stack_chk_fail@plt>
   24e68:	andeq	r7, r1, ip, lsl #4
   24e6c:	andeq	r0, r0, r8, lsl #4
   24e70:	movweq	r0, #4162	; 0x1042
   24e74:	ldr	r3, [pc, #124]	; 24ef8 <mount@plt+0x12e40>
   24e78:	ldr	r2, [pc, #124]	; 24efc <mount@plt+0x12e44>
   24e7c:	add	r3, pc, r3
   24e80:	push	{r4, lr}
   24e84:	sub	sp, sp, #32
   24e88:	ldr	r4, [r3, r2]
   24e8c:	ldr	r2, [r0, #28]
   24e90:	mov	r3, #0
   24e94:	ldr	lr, [r4]
   24e98:	add	r2, r2, #1
   24e9c:	str	r3, [sp, #20]
   24ea0:	str	lr, [sp, #28]
   24ea4:	strb	r1, [sp, #20]
   24ea8:	ldr	lr, [pc, #80]	; 24f00 <mount@plt+0x12e48>
   24eac:	mov	r1, #24
   24eb0:	str	r2, [r0, #28]
   24eb4:	str	r2, [r0, #32]
   24eb8:	str	r2, [sp, #12]
   24ebc:	str	r1, [sp, #4]
   24ec0:	mov	r2, r1
   24ec4:	ldr	r0, [r0]
   24ec8:	add	r1, sp, #4
   24ecc:	str	r3, [sp, #16]
   24ed0:	str	r3, [sp, #24]
   24ed4:	str	lr, [sp, #8]
   24ed8:	bl	12070 <send@plt>
   24edc:	ldr	r2, [sp, #28]
   24ee0:	ldr	r3, [r4]
   24ee4:	cmp	r2, r3
   24ee8:	bne	24ef4 <mount@plt+0x12e3c>
   24eec:	add	sp, sp, #32
   24ef0:	pop	{r4, pc}
   24ef4:	bl	11c2c <__stack_chk_fail@plt>
   24ef8:	andeq	r7, r1, ip, ror r1
   24efc:	andeq	r0, r0, r8, lsl #4
   24f00:	movweq	r0, #4182	; 0x1056
   24f04:	ldr	r2, [pc, #124]	; 24f88 <mount@plt+0x12ed0>
   24f08:	ldr	r3, [pc, #124]	; 24f8c <mount@plt+0x12ed4>
   24f0c:	add	r2, pc, r2
   24f10:	push	{r4, lr}
   24f14:	sub	sp, sp, #24
   24f18:	ldr	r4, [r2, r3]
   24f1c:	ldr	r3, [r0, #28]
   24f20:	mov	r2, #0
   24f24:	add	r3, r3, #1
   24f28:	str	r2, [sp, #16]
   24f2c:	ldr	lr, [r4]
   24f30:	strb	r1, [sp, #16]
   24f34:	ldr	ip, [pc, #84]	; 24f90 <mount@plt+0x12ed8>
   24f38:	mov	r1, #20
   24f3c:	str	r3, [r0, #28]
   24f40:	str	r3, [r0, #32]
   24f44:	str	r3, [sp, #8]
   24f48:	str	r2, [sp, #12]
   24f4c:	mov	r3, r2
   24f50:	str	r1, [sp]
   24f54:	mov	r2, r1
   24f58:	ldr	r0, [r0]
   24f5c:	mov	r1, sp
   24f60:	str	lr, [sp, #20]
   24f64:	str	ip, [sp, #4]
   24f68:	bl	12070 <send@plt>
   24f6c:	ldr	r2, [sp, #20]
   24f70:	ldr	r3, [r4]
   24f74:	cmp	r2, r3
   24f78:	bne	24f84 <mount@plt+0x12ecc>
   24f7c:	add	sp, sp, #24
   24f80:	pop	{r4, pc}
   24f84:	bl	11c2c <__stack_chk_fail@plt>
   24f88:	andeq	r7, r1, ip, ror #1
   24f8c:	andeq	r0, r0, r8, lsl #4
   24f90:	movweq	r0, #4178	; 0x1052
   24f94:	ldr	r2, [pc, #124]	; 25018 <mount@plt+0x12f60>
   24f98:	ldr	r3, [pc, #124]	; 2501c <mount@plt+0x12f64>
   24f9c:	add	r2, pc, r2
   24fa0:	push	{r4, lr}
   24fa4:	sub	sp, sp, #24
   24fa8:	ldr	r4, [r2, r3]
   24fac:	ldr	r3, [r0, #28]
   24fb0:	mov	r2, #0
   24fb4:	add	r3, r3, #1
   24fb8:	str	r2, [sp, #16]
   24fbc:	ldr	lr, [r4]
   24fc0:	strb	r1, [sp, #16]
   24fc4:	ldr	ip, [pc, #84]	; 25020 <mount@plt+0x12f68>
   24fc8:	mov	r1, #20
   24fcc:	str	r3, [r0, #28]
   24fd0:	str	r3, [r0, #32]
   24fd4:	str	r3, [sp, #8]
   24fd8:	str	r2, [sp, #12]
   24fdc:	mov	r3, r2
   24fe0:	str	r1, [sp]
   24fe4:	mov	r2, r1
   24fe8:	ldr	r0, [r0]
   24fec:	mov	r1, sp
   24ff0:	str	lr, [sp, #20]
   24ff4:	str	ip, [sp, #4]
   24ff8:	bl	12070 <send@plt>
   24ffc:	ldr	r2, [sp, #20]
   25000:	ldr	r3, [r4]
   25004:	cmp	r2, r3
   25008:	bne	25014 <mount@plt+0x12f5c>
   2500c:	add	sp, sp, #24
   25010:	pop	{r4, pc}
   25014:	bl	11c2c <__stack_chk_fail@plt>
   25018:	andeq	r7, r1, ip, asr r0
   2501c:	andeq	r0, r0, r8, lsl #4
   25020:	movweq	r0, #4186	; 0x105a
   25024:	ldr	r3, [pc, #140]	; 250b8 <mount@plt+0x13000>
   25028:	ldr	ip, [pc, #140]	; 250bc <mount@plt+0x13004>
   2502c:	add	r3, pc, r3
   25030:	push	{r4, lr}
   25034:	sub	sp, sp, #48	; 0x30
   25038:	ldr	r4, [r3, ip]
   2503c:	ldr	lr, [r0, #28]
   25040:	str	r2, [sp, #40]	; 0x28
   25044:	ldr	r3, [r4]
   25048:	add	lr, lr, #1
   2504c:	str	r3, [sp, #44]	; 0x2c
   25050:	mov	r3, #0
   25054:	str	r3, [sp, #20]
   25058:	strb	r1, [sp, #20]
   2505c:	ldr	r1, [pc, #92]	; 250c0 <mount@plt+0x13008>
   25060:	str	lr, [r0, #28]
   25064:	str	lr, [r0, #32]
   25068:	str	lr, [sp, #12]
   2506c:	ldr	lr, [pc, #80]	; 250c4 <mount@plt+0x1300c>
   25070:	mov	r2, #40	; 0x28
   25074:	str	r1, [sp, #8]
   25078:	ldr	r0, [r0]
   2507c:	add	r1, sp, #4
   25080:	str	r3, [sp, #16]
   25084:	str	r3, [sp, #24]
   25088:	str	r3, [sp, #28]
   2508c:	str	r3, [sp, #32]
   25090:	str	r2, [sp, #4]
   25094:	str	lr, [sp, #36]	; 0x24
   25098:	bl	12070 <send@plt>
   2509c:	ldr	r2, [sp, #44]	; 0x2c
   250a0:	ldr	r3, [r4]
   250a4:	cmp	r2, r3
   250a8:	bne	250b4 <mount@plt+0x12ffc>
   250ac:	add	sp, sp, #48	; 0x30
   250b0:	pop	{r4, pc}
   250b4:	bl	11c2c <__stack_chk_fail@plt>
   250b8:	andeq	r6, r1, ip, asr #31
   250bc:	andeq	r0, r0, r8, lsl #4
   250c0:	movweq	r0, #4114	; 0x1012
   250c4:	andseq	r0, sp, r8
   250c8:	mov	r2, #1
   250cc:	b	25024 <mount@plt+0x12f6c>
   250d0:	ldr	r3, [pc, #188]	; 25194 <mount@plt+0x130dc>
   250d4:	ldr	ip, [pc, #188]	; 25198 <mount@plt+0x130e0>
   250d8:	add	r3, pc, r3
   250dc:	push	{r4, r5, r6, r7, r8, lr}
   250e0:	sub	sp, sp, #1056	; 0x420
   250e4:	ldr	r6, [r3, ip]
   250e8:	sub	sp, sp, #8
   250ec:	mov	r4, r0
   250f0:	ldr	ip, [r6]
   250f4:	add	r5, sp, #4
   250f8:	mov	r8, r1
   250fc:	mov	r7, r2
   25100:	mov	r1, #0
   25104:	mov	r2, #1056	; 0x420
   25108:	mov	r0, r5
   2510c:	str	ip, [sp, #1060]	; 0x424
   25110:	bl	11e78 <memset@plt>
   25114:	ldr	r3, [r4, #28]
   25118:	ldr	r1, [pc, #124]	; 2519c <mount@plt+0x130e4>
   2511c:	add	r3, r3, #1
   25120:	mov	r2, #32
   25124:	cmp	r7, #0
   25128:	strb	r8, [sp, #20]
   2512c:	str	r3, [r4, #28]
   25130:	str	r3, [r4, #32]
   25134:	str	r3, [sp, #12]
   25138:	str	r1, [sp, #8]
   2513c:	str	r2, [sp, #4]
   25140:	beq	25188 <mount@plt+0x130d0>
   25144:	mov	r1, #1056	; 0x420
   25148:	mov	r0, r5
   2514c:	blx	r7
   25150:	cmp	r0, #0
   25154:	bne	2516c <mount@plt+0x130b4>
   25158:	mov	r3, r0
   2515c:	mov	r1, r5
   25160:	ldr	r0, [r4]
   25164:	ldr	r2, [sp, #4]
   25168:	bl	12070 <send@plt>
   2516c:	ldr	r2, [sp, #1060]	; 0x424
   25170:	ldr	r3, [r6]
   25174:	cmp	r2, r3
   25178:	bne	25190 <mount@plt+0x130d8>
   2517c:	add	sp, sp, #1056	; 0x420
   25180:	add	sp, sp, #8
   25184:	pop	{r4, r5, r6, r7, r8, pc}
   25188:	mvn	r0, #21
   2518c:	b	2516c <mount@plt+0x130b4>
   25190:	bl	11c2c <__stack_chk_fail@plt>
   25194:	andeq	r6, r1, r0, lsr #30
   25198:	andeq	r0, r0, r8, lsl #4
   2519c:	movweq	r0, #4114	; 0x1012
   251a0:	ldr	r3, [pc, #128]	; 25228 <mount@plt+0x13170>
   251a4:	ldr	ip, [pc, #128]	; 2522c <mount@plt+0x13174>
   251a8:	add	r3, pc, r3
   251ac:	push	{r4, lr}
   251b0:	sub	sp, sp, #32
   251b4:	ldr	r4, [r3, ip]
   251b8:	ldr	r3, [r0, #28]
   251bc:	str	r2, [sp, #24]
   251c0:	add	r2, r3, #1
   251c4:	mov	r3, #0
   251c8:	str	r3, [sp, #16]
   251cc:	ldr	ip, [r4]
   251d0:	strb	r1, [sp, #16]
   251d4:	ldr	lr, [pc, #84]	; 25230 <mount@plt+0x13178>
   251d8:	mov	r1, #28
   251dc:	str	r2, [r0, #28]
   251e0:	str	r2, [r0, #32]
   251e4:	str	r2, [sp, #8]
   251e8:	str	r1, [sp]
   251ec:	mov	r2, r1
   251f0:	ldr	r0, [r0]
   251f4:	mov	r1, sp
   251f8:	str	r3, [sp, #12]
   251fc:	str	r3, [sp, #20]
   25200:	str	ip, [sp, #28]
   25204:	str	lr, [sp, #4]
   25208:	bl	12070 <send@plt>
   2520c:	ldr	r2, [sp, #28]
   25210:	ldr	r3, [r4]
   25214:	cmp	r2, r3
   25218:	bne	25224 <mount@plt+0x1316c>
   2521c:	add	sp, sp, #32
   25220:	pop	{r4, pc}
   25224:	bl	11c2c <__stack_chk_fail@plt>
   25228:	andeq	r6, r1, r0, asr lr
   2522c:	andeq	r0, r0, r8, lsl #4
   25230:	movweq	r0, #4190	; 0x105e
   25234:	ldr	r0, [r0]
   25238:	mov	r3, #0
   2523c:	b	12070 <send@plt>
   25240:	push	{r4, r5, r6, r7, lr}
   25244:	sub	sp, sp, #1024	; 0x400
   25248:	ldr	r5, [pc, #288]	; 25370 <mount@plt+0x132b8>
   2524c:	ldr	ip, [pc, #288]	; 25374 <mount@plt+0x132bc>
   25250:	add	r5, pc, r5
   25254:	sub	sp, sp, #12
   25258:	ldr	r6, [r5, ip]
   2525c:	mov	r3, #0
   25260:	mov	r7, r0
   25264:	ldr	ip, [r6]
   25268:	ldr	r0, [r0]
   2526c:	str	ip, [sp, #1028]	; 0x404
   25270:	bl	12070 <send@plt>
   25274:	subs	r3, r0, #0
   25278:	blt	252f0 <mount@plt+0x13238>
   2527c:	add	r4, sp, #4
   25280:	ldr	r0, [r7]
   25284:	mov	r1, r4
   25288:	mov	r3, #66	; 0x42
   2528c:	mov	r2, #1024	; 0x400
   25290:	bl	12058 <recv@plt>
   25294:	cmp	r0, #0
   25298:	blt	25310 <mount@plt+0x13258>
   2529c:	cmp	r0, #15
   252a0:	ble	252ec <mount@plt+0x13234>
   252a4:	ldr	r3, [sp, #4]
   252a8:	cmp	r3, #15
   252ac:	bhi	252e4 <mount@plt+0x1322c>
   252b0:	b	252ec <mount@plt+0x13234>
   252b4:	ldrh	r2, [r4, #4]
   252b8:	cmp	r2, #2
   252bc:	beq	25324 <mount@plt+0x1326c>
   252c0:	add	r3, r3, #3
   252c4:	bic	r3, r3, #3
   252c8:	sub	r0, r0, r3
   252cc:	cmp	r0, #15
   252d0:	add	r4, r4, r3
   252d4:	ble	252ec <mount@plt+0x13234>
   252d8:	ldr	r3, [r4]
   252dc:	cmp	r3, #15
   252e0:	bls	252ec <mount@plt+0x13234>
   252e4:	cmp	r0, r3
   252e8:	bcs	252b4 <mount@plt+0x131fc>
   252ec:	mov	r3, #0
   252f0:	ldr	r1, [sp, #1028]	; 0x404
   252f4:	ldr	r2, [r6]
   252f8:	mov	r0, r3
   252fc:	cmp	r1, r2
   25300:	bne	2536c <mount@plt+0x132b4>
   25304:	add	sp, sp, #1024	; 0x400
   25308:	add	sp, sp, #12
   2530c:	pop	{r4, r5, r6, r7, pc}
   25310:	bl	11e18 <__errno_location@plt>
   25314:	ldr	r3, [r0]
   25318:	subs	r3, r3, #11
   2531c:	mvnne	r3, #0
   25320:	b	252f0 <mount@plt+0x13238>
   25324:	cmp	r3, #35	; 0x23
   25328:	bls	25344 <mount@plt+0x1328c>
   2532c:	bl	11e18 <__errno_location@plt>
   25330:	ldr	r2, [r4, #16]
   25334:	mvn	r3, #0
   25338:	rsb	r2, r2, #0
   2533c:	str	r2, [r0]
   25340:	b	252f0 <mount@plt+0x13238>
   25344:	ldr	r3, [pc, #44]	; 25378 <mount@plt+0x132c0>
   25348:	ldr	r0, [pc, #44]	; 2537c <mount@plt+0x132c4>
   2534c:	mov	r2, #16
   25350:	ldr	r3, [r5, r3]
   25354:	mov	r1, #1
   25358:	add	r0, pc, r0
   2535c:	ldr	r3, [r3]
   25360:	bl	11cb0 <fwrite@plt>
   25364:	mvn	r3, #0
   25368:	b	252f0 <mount@plt+0x13238>
   2536c:	bl	11c2c <__stack_chk_fail@plt>
   25370:	andeq	r6, r1, r8, lsr #27
   25374:	andeq	r0, r0, r8, lsl #4
   25378:	andeq	r0, r0, r4, lsl r2
   2537c:			; <UNDEFINED> instruction: 0x000042bc
   25380:	push	{r4, r5, lr}
   25384:	sub	sp, sp, #84	; 0x54
   25388:	ldr	r5, [pc, #192]	; 25450 <mount@plt+0x13398>
   2538c:	ldr	ip, [pc, #192]	; 25454 <mount@plt+0x1339c>
   25390:	add	r5, pc, r5
   25394:	ldr	lr, [r0, #28]
   25398:	ldr	r4, [r5, ip]
   2539c:	strh	r1, [sp, #20]
   253a0:	str	r3, [sp, #72]	; 0x48
   253a4:	ldr	r1, [r4]
   253a8:	add	r3, r3, #16
   253ac:	str	r1, [sp, #76]	; 0x4c
   253b0:	mov	r1, #16
   253b4:	str	r3, [sp, #16]
   253b8:	add	r3, sp, r1
   253bc:	mov	ip, #0
   253c0:	add	lr, lr, #1
   253c4:	str	r3, [sp, #60]	; 0x3c
   253c8:	add	r3, sp, #4
   253cc:	ldr	r5, [pc, #132]	; 25458 <mount@plt+0x133a0>
   253d0:	str	lr, [r0, #28]
   253d4:	str	lr, [r0, #32]
   253d8:	str	r2, [sp, #68]	; 0x44
   253dc:	str	lr, [sp, #24]
   253e0:	mov	r2, ip
   253e4:	str	ip, [sp, #28]
   253e8:	str	ip, [sp, #6]
   253ec:	str	ip, [sp, #48]	; 0x30
   253f0:	str	ip, [sp, #10]
   253f4:	strh	ip, [sp, #14]
   253f8:	str	ip, [sp, #52]	; 0x34
   253fc:	str	ip, [sp, #56]	; 0x38
   25400:	mov	lr, #12
   25404:	strh	r1, [sp, #4]
   25408:	str	r1, [sp, #64]	; 0x40
   2540c:	mov	ip, #2
   25410:	str	r3, [sp, #32]
   25414:	ldr	r0, [r0]
   25418:	add	r3, sp, #60	; 0x3c
   2541c:	add	r1, sp, #32
   25420:	str	r3, [sp, #40]	; 0x28
   25424:	strh	r5, [sp, #22]
   25428:	str	lr, [sp, #36]	; 0x24
   2542c:	str	ip, [sp, #44]	; 0x2c
   25430:	bl	11be4 <sendmsg@plt>
   25434:	ldr	r2, [sp, #76]	; 0x4c
   25438:	ldr	r3, [r4]
   2543c:	cmp	r2, r3
   25440:	bne	2544c <mount@plt+0x13394>
   25444:	add	sp, sp, #84	; 0x54
   25448:	pop	{r4, r5, pc}
   2544c:	bl	11c2c <__stack_chk_fail@plt>
   25450:	andeq	r6, r1, r8, ror #24
   25454:	andeq	r0, r0, r8, lsl #4
   25458:	andeq	r0, r0, r1, lsl #6
   2545c:	ldr	r3, [pc, #176]	; 25514 <mount@plt+0x1345c>
   25460:	ldr	r2, [pc, #176]	; 25518 <mount@plt+0x13460>
   25464:	add	r3, pc, r3
   25468:	ldr	ip, [pc, #172]	; 2551c <mount@plt+0x13464>
   2546c:	push	{r4, lr}
   25470:	sub	sp, sp, #56	; 0x38
   25474:	ldr	r4, [r3, r2]
   25478:	ldr	r2, [r0, #28]
   2547c:	strh	ip, [r1, #6]
   25480:	ldr	ip, [r1]
   25484:	mov	r3, #0
   25488:	add	r2, r2, #1
   2548c:	str	r3, [r1, #12]
   25490:	str	r2, [r0, #28]
   25494:	str	r2, [r0, #32]
   25498:	ldr	r0, [r0]
   2549c:	str	r2, [r1, #8]
   254a0:	ldr	r2, [r4]
   254a4:	stmib	sp, {r1, ip}
   254a8:	mov	r1, #12
   254ac:	str	r3, [sp, #14]
   254b0:	str	r3, [sp, #40]	; 0x28
   254b4:	str	r2, [sp, #52]	; 0x34
   254b8:	str	r3, [sp, #18]
   254bc:	mov	r2, r3
   254c0:	strh	r3, [sp, #22]
   254c4:	mov	ip, #16
   254c8:	str	r3, [sp, #44]	; 0x2c
   254cc:	str	r3, [sp, #48]	; 0x30
   254d0:	add	r3, sp, r1
   254d4:	strh	ip, [sp, #12]
   254d8:	str	r3, [sp, #24]
   254dc:	mov	ip, #1
   254e0:	add	r3, sp, #4
   254e4:	str	r1, [sp, #28]
   254e8:	add	r1, sp, #24
   254ec:	str	r3, [sp, #32]
   254f0:	str	ip, [sp, #36]	; 0x24
   254f4:	bl	11be4 <sendmsg@plt>
   254f8:	ldr	r2, [sp, #52]	; 0x34
   254fc:	ldr	r3, [r4]
   25500:	cmp	r2, r3
   25504:	bne	25510 <mount@plt+0x13458>
   25508:	add	sp, sp, #56	; 0x38
   2550c:	pop	{r4, pc}
   25510:	bl	11c2c <__stack_chk_fail@plt>
   25514:	muleq	r1, r4, fp
   25518:	andeq	r0, r0, r8, lsl #4
   2551c:	andeq	r0, r0, r1, lsl #6
   25520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25524:	sub	sp, sp, #116	; 0x74
   25528:	ldr	fp, [pc, #1076]	; 25964 <mount@plt+0x138ac>
   2552c:	ldr	r4, [pc, #1076]	; 25968 <mount@plt+0x138b0>
   25530:	ldr	lr, [pc, #1076]	; 2596c <mount@plt+0x138b4>
   25534:	add	fp, pc, fp
   25538:	add	r4, pc, r4
   2553c:	str	r4, [sp, #28]
   25540:	ldr	lr, [fp, lr]
   25544:	strh	r3, [sp, #92]	; 0x5c
   25548:	add	r3, sp, #32
   2554c:	str	r3, [sp, #12]
   25550:	add	r3, sp, #56	; 0x38
   25554:	str	r3, [sp, #8]
   25558:	add	r3, sp, #44	; 0x2c
   2555c:	str	r3, [sp, #56]	; 0x38
   25560:	mov	r3, #12
   25564:	str	r2, [sp, #88]	; 0x58
   25568:	str	r3, [sp, #60]	; 0x3c
   2556c:	ldr	r2, [lr]
   25570:	add	r3, sp, #36	; 0x24
   25574:	mov	r5, r0
   25578:	mov	r9, r1
   2557c:	mov	ip, #0
   25580:	str	r3, [sp, #64]	; 0x40
   25584:	mov	r3, #1
   25588:	str	lr, [sp, #16]
   2558c:	str	ip, [sp, #4]
   25590:	str	r1, [sp, #84]	; 0x54
   25594:	str	r2, [sp, #108]	; 0x6c
   25598:	str	ip, [sp, #96]	; 0x60
   2559c:	str	ip, [sp, #100]	; 0x64
   255a0:	strh	ip, [sp, #104]	; 0x68
   255a4:	str	ip, [sp, #72]	; 0x48
   255a8:	str	ip, [sp, #76]	; 0x4c
   255ac:	str	ip, [sp, #80]	; 0x50
   255b0:	str	r3, [sp, #68]	; 0x44
   255b4:	ldr	r2, [sp, #12]
   255b8:	ldr	r1, [sp, #8]
   255bc:	ldr	r0, [r5]
   255c0:	bl	241c4 <mount@plt+0x1210c>
   255c4:	subs	r7, r0, #0
   255c8:	blt	258ec <mount@plt+0x13834>
   255cc:	ldr	r3, [r5, #40]	; 0x28
   255d0:	ldr	r4, [sp, #32]
   255d4:	cmp	r3, #0
   255d8:	beq	255f4 <mount@plt+0x1353c>
   255dc:	add	r2, r7, #3
   255e0:	mov	r0, r4
   255e4:	bic	r2, r2, #3
   255e8:	mov	r1, #1
   255ec:	bl	11cb0 <fwrite@plt>
   255f0:	ldr	r4, [sp, #32]
   255f4:	cmp	r9, #0
   255f8:	beq	258b8 <mount@plt+0x13800>
   255fc:	mov	r3, #0
   25600:	cmp	r7, #15
   25604:	add	r6, sp, #84	; 0x54
   25608:	mov	r8, r9
   2560c:	str	r3, [sp, #20]
   25610:	str	r9, [sp, #24]
   25614:	ble	25718 <mount@plt+0x13660>
   25618:	ldr	r0, [r4]
   2561c:	cmp	r0, #15
   25620:	bls	25718 <mount@plt+0x13660>
   25624:	cmp	r0, r7
   25628:	mov	r9, r7
   2562c:	bhi	25718 <mount@plt+0x13660>
   25630:	ldrsh	sl, [r6, #8]
   25634:	mvn	sl, sl
   25638:	b	25670 <mount@plt+0x135b8>
   2563c:	ldr	r3, [r4]
   25640:	add	r3, r3, #3
   25644:	bic	r3, r3, #3
   25648:	sub	r2, r9, r3
   2564c:	cmp	r2, #15
   25650:	add	r4, r4, r3
   25654:	mov	r9, r2
   25658:	ble	256fc <mount@plt+0x13644>
   2565c:	ldr	r0, [r4]
   25660:	cmp	r0, #15
   25664:	bls	256fc <mount@plt+0x13644>
   25668:	cmp	r2, r0
   2566c:	bcc	256fc <mount@plt+0x13644>
   25670:	ldrh	r3, [r4, #6]
   25674:	ldr	r1, [sp, #48]	; 0x30
   25678:	and	r3, r3, sl
   2567c:	cmp	r1, #0
   25680:	strh	r3, [r4, #6]
   25684:	bne	2563c <mount@plt+0x13584>
   25688:	ldr	ip, [r4, #12]
   2568c:	ldr	r2, [r5, #8]
   25690:	cmp	ip, r2
   25694:	bne	2563c <mount@plt+0x13584>
   25698:	ldr	ip, [r4, #8]
   2569c:	ldr	r2, [r5, #32]
   256a0:	cmp	ip, r2
   256a4:	bne	2563c <mount@plt+0x13584>
   256a8:	ldrh	r2, [r4, #4]
   256ac:	tst	r3, #16
   256b0:	ldr	r3, [sp, #4]
   256b4:	movne	r3, #1
   256b8:	cmp	r2, #3
   256bc:	str	r3, [sp, #4]
   256c0:	beq	25780 <mount@plt+0x136c8>
   256c4:	cmp	r2, #2
   256c8:	beq	257c8 <mount@plt+0x13710>
   256cc:	ldr	r3, [r5, #40]	; 0x28
   256d0:	cmp	r3, #0
   256d4:	bne	2563c <mount@plt+0x13584>
   256d8:	ldr	r1, [r6, #4]
   256dc:	mov	r0, r4
   256e0:	blx	r8
   256e4:	cmp	r0, #0
   256e8:	bge	2563c <mount@plt+0x13584>
   256ec:	mov	sl, r0
   256f0:	ldr	r0, [sp, #32]
   256f4:	bl	11b78 <free@plt>
   256f8:	b	25804 <mount@plt+0x1374c>
   256fc:	ldr	r8, [r6, #12]
   25700:	ldr	r4, [sp, #32]
   25704:	cmp	r8, #0
   25708:	beq	25728 <mount@plt+0x13670>
   2570c:	cmp	r7, #15
   25710:	add	r6, r6, #12
   25714:	bgt	25618 <mount@plt+0x13560>
   25718:	ldr	r8, [r6, #12]
   2571c:	mov	r2, r7
   25720:	cmp	r8, #0
   25724:	bne	2570c <mount@plt+0x13654>
   25728:	mov	r0, r4
   2572c:	mov	r6, r2
   25730:	ldr	r9, [sp, #24]
   25734:	bl	11b78 <free@plt>
   25738:	ldr	r3, [sp, #20]
   2573c:	cmp	r3, #0
   25740:	bne	25958 <mount@plt+0x138a0>
   25744:	ldr	r3, [sp, #80]	; 0x50
   25748:	tst	r3, #32
   2574c:	bne	258cc <mount@plt+0x13814>
   25750:	cmp	r6, #0
   25754:	mov	r3, r6
   25758:	beq	255b4 <mount@plt+0x134fc>
   2575c:	ldr	r1, [pc, #524]	; 25970 <mount@plt+0x138b8>
   25760:	ldr	r2, [pc, #524]	; 25974 <mount@plt+0x138bc>
   25764:	ldr	r0, [fp, r1]
   25768:	add	r2, pc, r2
   2576c:	mov	r1, #1
   25770:	ldr	r0, [r0]
   25774:	bl	11ef0 <__fprintf_chk@plt>
   25778:	mov	r0, #1
   2577c:	bl	11ddc <exit@plt>
   25780:	cmp	r0, #19
   25784:	ldr	r8, [r4, #16]
   25788:	bls	25934 <mount@plt+0x1387c>
   2578c:	cmp	r8, #0
   25790:	bge	25824 <mount@plt+0x1376c>
   25794:	bl	11e18 <__errno_location@plt>
   25798:	rsb	r8, r8, #0
   2579c:	cmp	r8, #90	; 0x5a
   257a0:	str	r8, [r0]
   257a4:	beq	25894 <mount@plt+0x137dc>
   257a8:	cmp	r8, #95	; 0x5f
   257ac:	beq	257f8 <mount@plt+0x13740>
   257b0:	cmp	r8, #2
   257b4:	beq	257f8 <mount@plt+0x13740>
   257b8:	ldr	r0, [pc, #440]	; 25978 <mount@plt+0x138c0>
   257bc:	add	r0, pc, r0
   257c0:	bl	11c80 <perror@plt>
   257c4:	b	257f8 <mount@plt+0x13740>
   257c8:	cmp	r0, #35	; 0x23
   257cc:	bls	25848 <mount@plt+0x13790>
   257d0:	bl	11e18 <__errno_location@plt>
   257d4:	ldr	r3, [r4, #16]
   257d8:	rsb	r2, r3, #0
   257dc:	str	r2, [r0]
   257e0:	ldr	r2, [r5, #36]	; 0x24
   257e4:	cmp	r2, #4
   257e8:	beq	2586c <mount@plt+0x137b4>
   257ec:	ldr	r3, [r5, #44]	; 0x2c
   257f0:	tst	r3, #2
   257f4:	beq	25884 <mount@plt+0x137cc>
   257f8:	ldr	r0, [sp, #32]
   257fc:	bl	11b78 <free@plt>
   25800:	mvn	sl, #0
   25804:	ldr	r3, [sp, #16]
   25808:	ldr	r2, [sp, #108]	; 0x6c
   2580c:	mov	r0, sl
   25810:	ldr	r3, [r3]
   25814:	cmp	r2, r3
   25818:	bne	25960 <mount@plt+0x138a8>
   2581c:	add	sp, sp, #116	; 0x74
   25820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25824:	mov	r0, r4
   25828:	bl	24274 <mount@plt+0x121bc>
   2582c:	ldr	r8, [r6, #12]
   25830:	cmp	r8, #0
   25834:	beq	258f4 <mount@plt+0x1383c>
   25838:	mov	r3, #1
   2583c:	ldr	r4, [sp, #32]
   25840:	str	r3, [sp, #20]
   25844:	b	2570c <mount@plt+0x13654>
   25848:	ldr	r3, [pc, #288]	; 25970 <mount@plt+0x138b8>
   2584c:	ldr	r0, [pc, #296]	; 2597c <mount@plt+0x138c4>
   25850:	mov	r2, #16
   25854:	ldr	r3, [fp, r3]
   25858:	mov	r1, #1
   2585c:	add	r0, pc, r0
   25860:	ldr	r3, [r3]
   25864:	bl	11cb0 <fwrite@plt>
   25868:	b	257f8 <mount@plt+0x13740>
   2586c:	cmn	r3, #2
   25870:	cmnne	r3, #95	; 0x5f
   25874:	beq	257f8 <mount@plt+0x13740>
   25878:	ldr	r3, [r5, #44]	; 0x2c
   2587c:	tst	r3, #2
   25880:	bne	257f8 <mount@plt+0x13740>
   25884:	ldr	r0, [pc, #244]	; 25980 <mount@plt+0x138c8>
   25888:	add	r0, pc, r0
   2588c:	bl	11c80 <perror@plt>
   25890:	b	257f8 <mount@plt+0x13740>
   25894:	ldr	r3, [pc, #212]	; 25970 <mount@plt+0x138b8>
   25898:	ldr	r0, [pc, #228]	; 25984 <mount@plt+0x138cc>
   2589c:	mov	r2, #36	; 0x24
   258a0:	ldr	r3, [fp, r3]
   258a4:	mov	r1, #1
   258a8:	add	r0, pc, r0
   258ac:	ldr	r3, [r3]
   258b0:	bl	11cb0 <fwrite@plt>
   258b4:	b	257f8 <mount@plt+0x13740>
   258b8:	mov	r0, r4
   258bc:	bl	11b78 <free@plt>
   258c0:	ldr	r3, [sp, #80]	; 0x50
   258c4:	tst	r3, #32
   258c8:	beq	255b4 <mount@plt+0x134fc>
   258cc:	ldr	r3, [pc, #156]	; 25970 <mount@plt+0x138b8>
   258d0:	mov	r2, #18
   258d4:	mov	r1, #1
   258d8:	ldr	r3, [fp, r3]
   258dc:	ldr	r0, [sp, #28]
   258e0:	ldr	r3, [r3]
   258e4:	bl	11cb0 <fwrite@plt>
   258e8:	b	255b4 <mount@plt+0x134fc>
   258ec:	mov	sl, r7
   258f0:	b	25804 <mount@plt+0x1374c>
   258f4:	ldr	r0, [sp, #32]
   258f8:	bl	11b78 <free@plt>
   258fc:	ldr	sl, [sp, #4]
   25900:	ldr	r3, [sp, #4]
   25904:	cmp	r3, #0
   25908:	beq	25804 <mount@plt+0x1374c>
   2590c:	ldr	r3, [pc, #92]	; 25970 <mount@plt+0x138b8>
   25910:	ldr	r0, [pc, #112]	; 25988 <mount@plt+0x138d0>
   25914:	mov	r2, #46	; 0x2e
   25918:	ldr	r3, [fp, r3]
   2591c:	mov	r1, #1
   25920:	add	r0, pc, r0
   25924:	ldr	r3, [r3]
   25928:	mov	sl, #0
   2592c:	bl	11cb0 <fwrite@plt>
   25930:	b	25804 <mount@plt+0x1374c>
   25934:	ldr	r3, [pc, #52]	; 25970 <mount@plt+0x138b8>
   25938:	ldr	r0, [pc, #76]	; 2598c <mount@plt+0x138d4>
   2593c:	mov	r2, #15
   25940:	ldr	r3, [fp, r3]
   25944:	mov	r1, #1
   25948:	add	r0, pc, r0
   2594c:	ldr	r3, [r3]
   25950:	bl	11cb0 <fwrite@plt>
   25954:	b	257f8 <mount@plt+0x13740>
   25958:	ldr	sl, [sp, #4]
   2595c:	b	25900 <mount@plt+0x13848>
   25960:	bl	11c2c <__stack_chk_fail@plt>
   25964:	andeq	r6, r1, r4, asr #21
   25968:	andeq	r5, r0, ip, lsr #19
   2596c:	andeq	r0, r0, r8, lsl #4
   25970:	andeq	r0, r0, r4, lsl r2
   25974:	muleq	r0, r0, r7
   25978:	andeq	r5, r0, r8, lsr #16
   2597c:			; <UNDEFINED> instruction: 0x00003db8
   25980:	andeq	r5, r0, ip, asr r7
   25984:	andeq	r5, r0, r4, lsl r7
   25988:	ldrdeq	r5, [r0], -r8
   2598c:	andeq	r5, r0, r4, ror #12
   25990:	ldr	ip, [pc, #88]	; 259f0 <mount@plt+0x13938>
   25994:	push	{r4, lr}
   25998:	add	ip, pc, ip
   2599c:	ldr	lr, [pc, #80]	; 259f4 <mount@plt+0x1393c>
   259a0:	sub	sp, sp, #24
   259a4:	mov	r3, r2
   259a8:	ldr	r4, [ip, lr]
   259ac:	mov	r2, ip
   259b0:	mov	r2, #1
   259b4:	ldr	lr, [r1]
   259b8:	str	r2, [sp]
   259bc:	ldr	ip, [r4]
   259c0:	str	r1, [sp, #12]
   259c4:	add	r1, sp, #12
   259c8:	str	lr, [sp, #16]
   259cc:	str	ip, [sp, #20]
   259d0:	bl	24464 <mount@plt+0x123ac>
   259d4:	ldr	r2, [sp, #20]
   259d8:	ldr	r3, [r4]
   259dc:	cmp	r2, r3
   259e0:	bne	259ec <mount@plt+0x13934>
   259e4:	add	sp, sp, #24
   259e8:	pop	{r4, pc}
   259ec:	bl	11c2c <__stack_chk_fail@plt>
   259f0:	andeq	r6, r1, r0, ror #12
   259f4:	andeq	r0, r0, r8, lsl #4
   259f8:	push	{lr}		; (str lr, [sp, #-4]!)
   259fc:	sub	sp, sp, #12
   25a00:	mov	ip, #1
   25a04:	str	ip, [sp]
   25a08:	bl	24464 <mount@plt+0x123ac>
   25a0c:	add	sp, sp, #12
   25a10:	pop	{pc}		; (ldr pc, [sp], #4)
   25a14:	ldr	ip, [pc, #92]	; 25a78 <mount@plt+0x139c0>
   25a18:	push	{r4, lr}
   25a1c:	add	ip, pc, ip
   25a20:	ldr	lr, [pc, #84]	; 25a7c <mount@plt+0x139c4>
   25a24:	sub	sp, sp, #24
   25a28:	mov	r3, r2
   25a2c:	ldr	r4, [ip, lr]
   25a30:	mov	r2, ip
   25a34:	mov	r2, #0
   25a38:	ldr	lr, [r1]
   25a3c:	str	r2, [sp]
   25a40:	ldr	ip, [r4]
   25a44:	str	r1, [sp, #12]
   25a48:	mov	r2, #1
   25a4c:	add	r1, sp, #12
   25a50:	str	lr, [sp, #16]
   25a54:	str	ip, [sp, #20]
   25a58:	bl	24464 <mount@plt+0x123ac>
   25a5c:	ldr	r2, [sp, #20]
   25a60:	ldr	r3, [r4]
   25a64:	cmp	r2, r3
   25a68:	bne	25a74 <mount@plt+0x139bc>
   25a6c:	add	sp, sp, #24
   25a70:	pop	{r4, pc}
   25a74:	bl	11c2c <__stack_chk_fail@plt>
   25a78:	ldrdeq	r6, [r1], -ip
   25a7c:	andeq	r0, r0, r8, lsl #4
   25a80:	ldr	r2, [pc, #136]	; 25b10 <mount@plt+0x13a58>
   25a84:	ldr	r3, [pc, #136]	; 25b14 <mount@plt+0x13a5c>
   25a88:	add	r2, pc, r2
   25a8c:	push	{r4, r5, lr}
   25a90:	sub	sp, sp, #20
   25a94:	ldr	r5, [r2, r3]
   25a98:	mov	r1, #4
   25a9c:	mov	r4, r0
   25aa0:	ldr	r0, [r0]
   25aa4:	str	r1, [sp]
   25aa8:	ldr	r1, [r5]
   25aac:	mov	ip, #1
   25ab0:	str	r1, [sp, #12]
   25ab4:	add	r3, sp, #8
   25ab8:	ldr	r1, [pc, #88]	; 25b18 <mount@plt+0x13a60>
   25abc:	mov	r2, #8
   25ac0:	str	ip, [sp, #8]
   25ac4:	bl	11b24 <setsockopt@plt>
   25ac8:	cmp	r0, #0
   25acc:	blt	25af8 <mount@plt+0x13a40>
   25ad0:	ldr	r3, [r4, #44]	; 0x2c
   25ad4:	mov	r0, #0
   25ad8:	orr	r3, r3, #1
   25adc:	str	r3, [r4, #44]	; 0x2c
   25ae0:	ldr	r2, [sp, #12]
   25ae4:	ldr	r3, [r5]
   25ae8:	cmp	r2, r3
   25aec:	bne	25b0c <mount@plt+0x13a54>
   25af0:	add	sp, sp, #20
   25af4:	pop	{r4, r5, pc}
   25af8:	ldr	r0, [pc, #28]	; 25b1c <mount@plt+0x13a64>
   25afc:	add	r0, pc, r0
   25b00:	bl	11c80 <perror@plt>
   25b04:	mvn	r0, #0
   25b08:	b	25ae0 <mount@plt+0x13a28>
   25b0c:	bl	11c2c <__stack_chk_fail@plt>
   25b10:	andeq	r6, r1, r0, ror r5
   25b14:	andeq	r0, r0, r8, lsl #4
   25b18:	andeq	r0, r0, lr, lsl #2
   25b1c:	andeq	r5, r0, ip, lsr #10
   25b20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25b24:	sub	sp, sp, #24576	; 0x6000
   25b28:	ldr	lr, [pc, #928]	; 25ed0 <mount@plt+0x13e18>
   25b2c:	ldr	r3, [pc, #928]	; 25ed4 <mount@plt+0x13e1c>
   25b30:	sub	sp, sp, #92	; 0x5c
   25b34:	add	lr, pc, lr
   25b38:	str	lr, [sp, #16]
   25b3c:	ldr	r3, [lr, r3]
   25b40:	mov	r9, r2
   25b44:	add	r2, sp, #24576	; 0x6000
   25b48:	add	r2, r2, #84	; 0x54
   25b4c:	str	r3, [sp, #28]
   25b50:	ldr	r3, [r3]
   25b54:	add	r6, sp, #88	; 0x58
   25b58:	str	r3, [r2]
   25b5c:	mov	r3, #16
   25b60:	strh	r3, [r6, #-44]	; 0xffffffd4
   25b64:	sub	r3, r6, #44	; 0x2c
   25b68:	str	r3, [r6, #-32]	; 0xffffffe0
   25b6c:	mov	r3, #12
   25b70:	mov	sl, r0
   25b74:	str	r3, [r6, #-28]	; 0xffffffe4
   25b78:	ldr	r0, [r0, #44]	; 0x2c
   25b7c:	sub	r3, r6, #52	; 0x34
   25b80:	str	r3, [r6, #-24]	; 0xffffffe8
   25b84:	mov	r3, #1
   25b88:	tst	r0, #1
   25b8c:	str	r3, [r6, #-20]	; 0xffffffec
   25b90:	mov	r3, #0
   25b94:	str	r3, [r6, #-16]
   25b98:	str	r3, [r6, #-12]
   25b9c:	str	r3, [r6, #-38]	; 0xffffffda
   25ba0:	strh	r3, [r6, #-34]	; 0xffffffde
   25ba4:	str	r3, [r6, #-42]	; 0xffffffd6
   25ba8:	str	r3, [r6, #-8]
   25bac:	subne	r3, r6, #4
   25bb0:	strne	r3, [r6, #-16]
   25bb4:	add	r3, sp, #8256	; 0x2040
   25bb8:	movne	r2, #8192	; 0x2000
   25bbc:	add	r3, r3, #24
   25bc0:	mov	r8, r1
   25bc4:	strne	r2, [r6, #-12]
   25bc8:	str	r3, [sp, #20]
   25bcc:	add	r2, sp, #56	; 0x38
   25bd0:	sub	r3, r3, #4
   25bd4:	str	r2, [sp, #12]
   25bd8:	str	r3, [sp, #24]
   25bdc:	str	r3, [r6, #-52]	; 0xffffffcc
   25be0:	mov	r3, #16384	; 0x4000
   25be4:	mov	r2, #0
   25be8:	ldr	r1, [sp, #12]
   25bec:	ldr	r0, [sl]
   25bf0:	str	r3, [r6, #-48]	; 0xffffffd0
   25bf4:	bl	11fec <recvmsg@plt>
   25bf8:	subs	r5, r0, #0
   25bfc:	bge	25c84 <mount@plt+0x13bcc>
   25c00:	bl	11e18 <__errno_location@plt>
   25c04:	mov	r4, r0
   25c08:	ldr	r0, [r0]
   25c0c:	cmp	r0, #11
   25c10:	cmpne	r0, #4
   25c14:	beq	25be0 <mount@plt+0x13b28>
   25c18:	ldr	r2, [sp, #16]
   25c1c:	ldr	r3, [pc, #692]	; 25ed8 <mount@plt+0x13e20>
   25c20:	ldr	r3, [r2, r3]
   25c24:	ldr	r5, [r3]
   25c28:	bl	11d88 <strerror@plt>
   25c2c:	ldr	r3, [r4]
   25c30:	ldr	r2, [pc, #676]	; 25edc <mount@plt+0x13e24>
   25c34:	str	r3, [sp]
   25c38:	add	r2, pc, r2
   25c3c:	mov	r1, #1
   25c40:	mov	r3, r0
   25c44:	mov	r0, r5
   25c48:	bl	11ef0 <__fprintf_chk@plt>
   25c4c:	ldr	r3, [r4]
   25c50:	cmp	r3, #105	; 0x69
   25c54:	beq	25be0 <mount@plt+0x13b28>
   25c58:	mvn	r0, #0
   25c5c:	add	r3, sp, #24576	; 0x6000
   25c60:	add	r3, r3, #84	; 0x54
   25c64:	ldr	r2, [r3]
   25c68:	ldr	r3, [sp, #28]
   25c6c:	ldr	r3, [r3]
   25c70:	cmp	r2, r3
   25c74:	bne	25e88 <mount@plt+0x13dd0>
   25c78:	add	sp, sp, #24576	; 0x6000
   25c7c:	add	sp, sp, #92	; 0x5c
   25c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25c84:	beq	25e60 <mount@plt+0x13da8>
   25c88:	ldr	r3, [r6, #-28]	; 0xffffffe4
   25c8c:	cmp	r3, #12
   25c90:	bne	25ea8 <mount@plt+0x13df0>
   25c94:	ldr	r3, [sl, #44]	; 0x2c
   25c98:	tst	r3, #1
   25c9c:	bne	25d88 <mount@plt+0x13cd0>
   25ca0:	cmp	r5, #15
   25ca4:	ble	25e2c <mount@plt+0x13d74>
   25ca8:	ldr	r3, [sp, #20]
   25cac:	ldr	r4, [r3, #-4]
   25cb0:	cmp	r5, r4
   25cb4:	sub	r2, r4, #16
   25cb8:	movge	r3, #0
   25cbc:	movlt	r3, #1
   25cc0:	orrs	r3, r3, r2, lsr #31
   25cc4:	bne	25d24 <mount@plt+0x13c6c>
   25cc8:	ldr	fp, [sp, #24]
   25ccc:	add	r7, sp, #32
   25cd0:	b	25d08 <mount@plt+0x13c50>
   25cd4:	add	r4, r4, #3
   25cd8:	bic	r4, r4, #3
   25cdc:	sub	r5, r5, r4
   25ce0:	cmp	r5, #15
   25ce4:	add	fp, fp, r4
   25ce8:	bls	25d60 <mount@plt+0x13ca8>
   25cec:	ldr	r4, [fp]
   25cf0:	cmp	r4, r5
   25cf4:	sub	r2, r4, #16
   25cf8:	movle	r3, #0
   25cfc:	movgt	r3, #1
   25d00:	orrs	r3, r3, r2, lsr #31
   25d04:	bne	25d24 <mount@plt+0x13c6c>
   25d08:	mov	r2, r9
   25d0c:	mov	r1, fp
   25d10:	mov	r0, r7
   25d14:	blx	r8
   25d18:	cmp	r0, #0
   25d1c:	bge	25cd4 <mount@plt+0x13c1c>
   25d20:	b	25c5c <mount@plt+0x13ba4>
   25d24:	ldr	r3, [pc, #428]	; 25ed8 <mount@plt+0x13e20>
   25d28:	ldr	r1, [sp, #16]
   25d2c:	ldr	r2, [r6, #-8]
   25d30:	ldr	r3, [r1, r3]
   25d34:	tst	r2, #32
   25d38:	ldr	r0, [r3]
   25d3c:	beq	25e8c <mount@plt+0x13dd4>
   25d40:	mov	r3, r0
   25d44:	ldr	r0, [pc, #404]	; 25ee0 <mount@plt+0x13e28>
   25d48:	mov	r2, #18
   25d4c:	mov	r1, #1
   25d50:	add	r0, pc, r0
   25d54:	bl	11cb0 <fwrite@plt>
   25d58:	mvn	r0, #0
   25d5c:	b	25c5c <mount@plt+0x13ba4>
   25d60:	ldr	r3, [r6, #-8]
   25d64:	tst	r3, #32
   25d68:	bne	25e38 <mount@plt+0x13d80>
   25d6c:	cmp	r5, #0
   25d70:	beq	25be0 <mount@plt+0x13b28>
   25d74:	ldr	r2, [pc, #360]	; 25ee4 <mount@plt+0x13e2c>
   25d78:	ldr	r1, [pc, #344]	; 25ed8 <mount@plt+0x13e20>
   25d7c:	mov	r3, r5
   25d80:	add	r2, pc, r2
   25d84:	b	25eb4 <mount@plt+0x13dfc>
   25d88:	ldr	r0, [r6, #-12]
   25d8c:	mvn	ip, #0
   25d90:	cmp	r0, #11
   25d94:	str	ip, [r6, #-56]	; 0xffffffc8
   25d98:	bls	25ca0 <mount@plt+0x13be8>
   25d9c:	ldr	r3, [r6, #-16]
   25da0:	cmp	r3, #0
   25da4:	beq	25ca0 <mount@plt+0x13be8>
   25da8:	mov	r2, r3
   25dac:	ldr	r3, [r3]
   25db0:	add	r0, r2, r0
   25db4:	mov	lr, #0
   25db8:	ldr	r1, [r2, #4]
   25dbc:	ldr	r4, [pc, #292]	; 25ee8 <mount@plt+0x13e30>
   25dc0:	cmp	r1, r4
   25dc4:	beq	25e0c <mount@plt+0x13d54>
   25dc8:	cmp	r3, #11
   25dcc:	bls	25e00 <mount@plt+0x13d48>
   25dd0:	add	r3, r3, #3
   25dd4:	bic	r3, r3, #3
   25dd8:	add	r2, r2, r3
   25ddc:	add	r3, r2, #12
   25de0:	cmp	r0, r3
   25de4:	bcc	25e00 <mount@plt+0x13d48>
   25de8:	ldr	r3, [r2]
   25dec:	add	r1, r3, #3
   25df0:	bic	r1, r1, #3
   25df4:	add	r1, r2, r1
   25df8:	cmp	r0, r1
   25dfc:	bcs	25db8 <mount@plt+0x13d00>
   25e00:	cmp	lr, #0
   25e04:	strne	ip, [r6, #-56]	; 0xffffffc8
   25e08:	b	25ca0 <mount@plt+0x13be8>
   25e0c:	ldr	r1, [r2, #8]
   25e10:	cmp	r1, #8
   25e14:	bne	25dc8 <mount@plt+0x13d10>
   25e18:	cmp	r3, #16
   25e1c:	bne	25dc8 <mount@plt+0x13d10>
   25e20:	ldr	ip, [r2, #12]
   25e24:	mov	lr, #1
   25e28:	b	25dd0 <mount@plt+0x13d18>
   25e2c:	ldr	r3, [r6, #-8]
   25e30:	tst	r3, #32
   25e34:	beq	25d74 <mount@plt+0x13cbc>
   25e38:	ldr	r0, [sp, #16]
   25e3c:	ldr	r3, [pc, #148]	; 25ed8 <mount@plt+0x13e20>
   25e40:	mov	r2, #18
   25e44:	mov	r1, #1
   25e48:	ldr	r3, [r0, r3]
   25e4c:	ldr	r0, [pc, #152]	; 25eec <mount@plt+0x13e34>
   25e50:	ldr	r3, [r3]
   25e54:	add	r0, pc, r0
   25e58:	bl	11cb0 <fwrite@plt>
   25e5c:	b	25be0 <mount@plt+0x13b28>
   25e60:	ldr	r0, [sp, #16]
   25e64:	ldr	r3, [pc, #108]	; 25ed8 <mount@plt+0x13e20>
   25e68:	mov	r2, #15
   25e6c:	mov	r1, #1
   25e70:	ldr	r3, [r0, r3]
   25e74:	ldr	r0, [pc, #116]	; 25ef0 <mount@plt+0x13e38>
   25e78:	ldr	r3, [r3]
   25e7c:	add	r0, pc, r0
   25e80:	bl	11cb0 <fwrite@plt>
   25e84:	b	25c58 <mount@plt+0x13ba0>
   25e88:	bl	11c2c <__stack_chk_fail@plt>
   25e8c:	ldr	r2, [pc, #96]	; 25ef4 <mount@plt+0x13e3c>
   25e90:	mov	r3, r4
   25e94:	add	r2, pc, r2
   25e98:	mov	r1, #1
   25e9c:	bl	11ef0 <__fprintf_chk@plt>
   25ea0:	mov	r0, #1
   25ea4:	bl	11ddc <exit@plt>
   25ea8:	ldr	r2, [pc, #72]	; 25ef8 <mount@plt+0x13e40>
   25eac:	ldr	r1, [pc, #36]	; 25ed8 <mount@plt+0x13e20>
   25eb0:	add	r2, pc, r2
   25eb4:	ldr	r0, [sp, #16]
   25eb8:	ldr	r0, [r0, r1]
   25ebc:	mov	r1, #1
   25ec0:	ldr	r0, [r0]
   25ec4:	bl	11ef0 <__fprintf_chk@plt>
   25ec8:	mov	r0, #1
   25ecc:	bl	11ddc <exit@plt>
   25ed0:	andeq	r6, r1, r4, asr #9
   25ed4:	andeq	r0, r0, r8, lsl #4
   25ed8:	andeq	r0, r0, r4, lsl r2
   25edc:	andeq	r5, r0, r8, lsl #3
   25ee0:	andeq	r5, r0, r0, lsr r1
   25ee4:	andeq	r5, r0, r8, ror r1
   25ee8:	andeq	r0, r0, lr, lsl #2
   25eec:	muleq	r0, r0, r0
   25ef0:	andeq	r4, r0, r4, lsr pc
   25ef4:	andeq	r5, r0, r0
   25ef8:	muleq	r0, r0, r1
   25efc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25f00:	sub	sp, sp, #16384	; 0x4000
   25f04:	ldr	fp, [pc, #352]	; 2606c <mount@plt+0x13fb4>
   25f08:	ldr	r3, [pc, #352]	; 26070 <mount@plt+0x13fb8>
   25f0c:	add	fp, pc, fp
   25f10:	sub	sp, sp, #28
   25f14:	ldr	r3, [fp, r3]
   25f18:	mov	r9, r2
   25f1c:	ldr	r8, [pc, #336]	; 26074 <mount@plt+0x13fbc>
   25f20:	add	r2, sp, #16384	; 0x4000
   25f24:	str	r3, [sp, #8]
   25f28:	add	r2, r2, #20
   25f2c:	ldr	r3, [r3]
   25f30:	mov	r5, r0
   25f34:	mov	sl, r1
   25f38:	add	r7, sp, #24
   25f3c:	add	r6, sp, #20
   25f40:	str	r3, [r2]
   25f44:	mov	r3, r5
   25f48:	mov	r2, #16
   25f4c:	mov	r1, #1
   25f50:	mov	r0, r6
   25f54:	bl	11d04 <fread@plt>
   25f58:	cmp	r0, #0
   25f5c:	blt	25fe0 <mount@plt+0x13f28>
   25f60:	beq	25fb8 <mount@plt+0x13f00>
   25f64:	ldr	r3, [r7, #-4]
   25f68:	sub	r4, r3, #16
   25f6c:	cmp	r4, r8
   25f70:	bhi	26004 <mount@plt+0x13f4c>
   25f74:	sub	r3, r3, #13
   25f78:	bic	r3, r3, #3
   25f7c:	str	r5, [sp]
   25f80:	mov	r2, #1
   25f84:	mov	r1, r8
   25f88:	add	r0, r7, #12
   25f8c:	bl	11f50 <__fread_chk@plt>
   25f90:	cmp	r0, #0
   25f94:	blt	25ff0 <mount@plt+0x13f38>
   25f98:	cmp	r4, r0
   25f9c:	bgt	26040 <mount@plt+0x13f88>
   25fa0:	mov	r2, r9
   25fa4:	mov	r1, r6
   25fa8:	mov	r0, #0
   25fac:	blx	sl
   25fb0:	cmp	r0, #0
   25fb4:	bge	25f44 <mount@plt+0x13e8c>
   25fb8:	add	r3, sp, #16384	; 0x4000
   25fbc:	add	r3, r3, #20
   25fc0:	ldr	r2, [r3]
   25fc4:	ldr	r3, [sp, #8]
   25fc8:	ldr	r3, [r3]
   25fcc:	cmp	r2, r3
   25fd0:	bne	26068 <mount@plt+0x13fb0>
   25fd4:	add	sp, sp, #16384	; 0x4000
   25fd8:	add	sp, sp, #28
   25fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25fe0:	bl	11e18 <__errno_location@plt>
   25fe4:	ldr	r3, [r0]
   25fe8:	cmp	r3, #4
   25fec:	beq	25f44 <mount@plt+0x13e8c>
   25ff0:	ldr	r0, [pc, #128]	; 26078 <mount@plt+0x13fc0>
   25ff4:	add	r0, pc, r0
   25ff8:	bl	11c80 <perror@plt>
   25ffc:	mvn	r0, #0
   26000:	b	25fb8 <mount@plt+0x13f00>
   26004:	ldr	r2, [pc, #112]	; 2607c <mount@plt+0x13fc4>
   26008:	str	r3, [sp, #12]
   2600c:	mov	r0, r5
   26010:	ldr	r2, [fp, r2]
   26014:	ldr	r4, [r2]
   26018:	bl	11bf0 <ftell@plt>
   2601c:	ldr	r2, [pc, #92]	; 26080 <mount@plt+0x13fc8>
   26020:	ldr	r3, [sp, #12]
   26024:	add	r2, pc, r2
   26028:	mov	r1, #1
   2602c:	str	r0, [sp]
   26030:	mov	r0, r4
   26034:	bl	11ef0 <__fprintf_chk@plt>
   26038:	mvn	r0, #0
   2603c:	b	25fb8 <mount@plt+0x13f00>
   26040:	ldr	r3, [pc, #52]	; 2607c <mount@plt+0x13fc4>
   26044:	ldr	r0, [pc, #56]	; 26084 <mount@plt+0x13fcc>
   26048:	mov	r2, #34	; 0x22
   2604c:	ldr	r3, [fp, r3]
   26050:	mov	r1, #1
   26054:	add	r0, pc, r0
   26058:	ldr	r3, [r3]
   2605c:	bl	11cb0 <fwrite@plt>
   26060:	mvn	r0, #0
   26064:	b	25fb8 <mount@plt+0x13f00>
   26068:	bl	11c2c <__stack_chk_fail@plt>
   2606c:	andeq	r6, r1, ip, ror #1
   26070:	andeq	r0, r0, r8, lsl #4
   26074:	strdeq	r3, [r0], -r0
   26078:	andeq	r5, r0, ip, rrx
   2607c:	andeq	r0, r0, r4, lsl r2
   26080:	andeq	r5, r0, r4, asr r0
   26084:	andeq	r5, r0, r8, asr #32
   26088:	push	{r4, r5, r6, r7, r8, lr}
   2608c:	mov	r4, r0
   26090:	ldr	ip, [r0]
   26094:	ldr	r6, [sp, #24]
   26098:	add	ip, ip, #3
   2609c:	add	r5, r6, #7
   260a0:	bic	ip, ip, #3
   260a4:	bic	r5, r5, #3
   260a8:	add	lr, ip, r5
   260ac:	ldr	r0, [pc, #120]	; 2612c <mount@plt+0x14074>
   260b0:	cmp	lr, r1
   260b4:	add	r0, pc, r0
   260b8:	bhi	26104 <mount@plt+0x1404c>
   260bc:	add	r0, r4, ip
   260c0:	add	r7, r6, #4
   260c4:	cmp	r6, #0
   260c8:	strh	r2, [r0, #2]
   260cc:	strh	r7, [r4, ip]
   260d0:	bne	260e0 <mount@plt+0x14028>
   260d4:	mov	r0, #0
   260d8:	str	lr, [r4]
   260dc:	pop	{r4, r5, r6, r7, r8, pc}
   260e0:	mov	r2, r6
   260e4:	mov	r1, r3
   260e8:	add	r0, r0, #4
   260ec:	bl	11bc0 <memcpy@plt>
   260f0:	ldr	lr, [r4]
   260f4:	add	lr, lr, #3
   260f8:	bic	lr, lr, #3
   260fc:	add	lr, lr, r5
   26100:	b	260d4 <mount@plt+0x1401c>
   26104:	ldr	ip, [pc, #36]	; 26130 <mount@plt+0x14078>
   26108:	ldr	r2, [pc, #36]	; 26134 <mount@plt+0x1407c>
   2610c:	mov	r3, r1
   26110:	ldr	r0, [r0, ip]
   26114:	add	r2, pc, r2
   26118:	mov	r1, #1
   2611c:	ldr	r0, [r0]
   26120:	bl	11ef0 <__fprintf_chk@plt>
   26124:	mvn	r0, #0
   26128:	pop	{r4, r5, r6, r7, r8, pc}
   2612c:	andeq	r5, r1, r4, asr #30
   26130:	andeq	r0, r0, r4, lsl r2
   26134:	andeq	r4, r0, ip, lsr #31
   26138:	push	{lr}		; (str lr, [sp, #-4]!)
   2613c:	sub	sp, sp, #12
   26140:	mov	r3, #0
   26144:	str	r3, [sp]
   26148:	bl	26088 <mount@plt+0x13fd0>
   2614c:	add	sp, sp, #12
   26150:	pop	{pc}		; (ldr pc, [sp], #4)
   26154:	push	{lr}		; (str lr, [sp, #-4]!)
   26158:	sub	sp, sp, #20
   2615c:	mov	ip, #1
   26160:	strb	r3, [sp, #15]
   26164:	str	ip, [sp]
   26168:	add	r3, sp, #15
   2616c:	bl	26088 <mount@plt+0x13fd0>
   26170:	add	sp, sp, #20
   26174:	pop	{pc}		; (ldr pc, [sp], #4)
   26178:	push	{lr}		; (str lr, [sp, #-4]!)
   2617c:	sub	sp, sp, #20
   26180:	mov	ip, #2
   26184:	strh	r3, [sp, #14]
   26188:	str	ip, [sp]
   2618c:	add	r3, sp, #14
   26190:	bl	26088 <mount@plt+0x13fd0>
   26194:	add	sp, sp, #20
   26198:	pop	{pc}		; (ldr pc, [sp], #4)
   2619c:	push	{lr}		; (str lr, [sp, #-4]!)
   261a0:	sub	sp, sp, #20
   261a4:	mov	ip, #4
   261a8:	str	r3, [sp, #12]
   261ac:	str	ip, [sp]
   261b0:	add	r3, sp, #12
   261b4:	bl	26088 <mount@plt+0x13fd0>
   261b8:	add	sp, sp, #20
   261bc:	pop	{pc}		; (ldr pc, [sp], #4)
   261c0:	push	{lr}		; (str lr, [sp, #-4]!)
   261c4:	sub	sp, sp, #12
   261c8:	mov	r3, #8
   261cc:	str	r3, [sp]
   261d0:	add	r3, sp, #16
   261d4:	bl	26088 <mount@plt+0x13fd0>
   261d8:	add	sp, sp, #12
   261dc:	pop	{pc}		; (ldr pc, [sp], #4)
   261e0:	push	{r4, r5, r6, r7, lr}
   261e4:	mov	r5, r0
   261e8:	sub	sp, sp, #12
   261ec:	mov	r0, r3
   261f0:	mov	r4, r3
   261f4:	mov	r6, r1
   261f8:	mov	r7, r2
   261fc:	bl	11e00 <strlen@plt>
   26200:	mov	r3, r4
   26204:	mov	r2, r7
   26208:	mov	r1, r6
   2620c:	add	r0, r0, #1
   26210:	str	r0, [sp]
   26214:	mov	r0, r5
   26218:	bl	26088 <mount@plt+0x13fd0>
   2621c:	add	sp, sp, #12
   26220:	pop	{r4, r5, r6, r7, pc}
   26224:	push	{r4, r5, r6, lr}
   26228:	mov	r4, r0
   2622c:	ldr	r0, [r0]
   26230:	mov	r6, r3
   26234:	add	r0, r0, #3
   26238:	add	r3, r3, #3
   2623c:	bic	r0, r0, #3
   26240:	bic	r5, r3, #3
   26244:	add	r3, r0, r5
   26248:	ldr	ip, [pc, #124]	; 262cc <mount@plt+0x14214>
   2624c:	cmp	r3, r1
   26250:	add	ip, pc, ip
   26254:	bhi	262a4 <mount@plt+0x141ec>
   26258:	mov	r1, r2
   2625c:	add	r0, r4, r0
   26260:	mov	r2, r6
   26264:	bl	11bc0 <memcpy@plt>
   26268:	ldr	r0, [r4]
   2626c:	sub	r2, r5, r6
   26270:	add	r0, r0, #3
   26274:	bic	r0, r0, #3
   26278:	add	r0, r0, r6
   2627c:	add	r0, r4, r0
   26280:	mov	r1, #0
   26284:	bl	11e78 <memset@plt>
   26288:	ldr	r3, [r4]
   2628c:	mov	r0, #0
   26290:	add	r3, r3, #3
   26294:	bic	r3, r3, #3
   26298:	add	r3, r3, r5
   2629c:	str	r3, [r4]
   262a0:	pop	{r4, r5, r6, pc}
   262a4:	ldr	r0, [pc, #36]	; 262d0 <mount@plt+0x14218>
   262a8:	ldr	r2, [pc, #36]	; 262d4 <mount@plt+0x1421c>
   262ac:	mov	r3, r1
   262b0:	ldr	r0, [ip, r0]
   262b4:	add	r2, pc, r2
   262b8:	mov	r1, #1
   262bc:	ldr	r0, [r0]
   262c0:	bl	11ef0 <__fprintf_chk@plt>
   262c4:	mvn	r0, #0
   262c8:	pop	{r4, r5, r6, pc}
   262cc:	andeq	r5, r1, r8, lsr #27
   262d0:	andeq	r0, r0, r4, lsl r2
   262d4:	andeq	r4, r0, ip, lsr lr
   262d8:	ldr	ip, [r0]
   262dc:	push	{r4, lr}
   262e0:	sub	sp, sp, #8
   262e4:	mov	r3, #0
   262e8:	add	ip, ip, #3
   262ec:	bic	ip, ip, #3
   262f0:	str	r3, [sp]
   262f4:	add	r4, r0, ip
   262f8:	bl	26088 <mount@plt+0x13fd0>
   262fc:	mov	r0, r4
   26300:	add	sp, sp, #8
   26304:	pop	{r4, pc}
   26308:	mov	r3, r0
   2630c:	ldr	r0, [r0]
   26310:	add	r2, r0, #3
   26314:	bic	r2, r2, #3
   26318:	add	r3, r3, r2
   2631c:	sub	r3, r3, r1
   26320:	strh	r3, [r1]
   26324:	bx	lr
   26328:	push	{r4, r5, r6, r7, lr}
   2632c:	sub	sp, sp, #12
   26330:	ldr	r4, [r0]
   26334:	ldr	ip, [sp, #32]
   26338:	add	r4, r4, #3
   2633c:	mov	r5, r0
   26340:	str	ip, [sp]
   26344:	mov	r6, r1
   26348:	mov	r7, r2
   2634c:	bic	r4, r4, #3
   26350:	add	r4, r0, r4
   26354:	bl	26088 <mount@plt+0x13fd0>
   26358:	mov	r2, r7
   2635c:	mov	r1, r6
   26360:	mov	r0, r5
   26364:	bl	262d8 <mount@plt+0x14220>
   26368:	mov	r0, r4
   2636c:	add	sp, sp, #12
   26370:	pop	{r4, r5, r6, r7, pc}
   26374:	ldr	r3, [r0]
   26378:	ldrh	r2, [r1]
   2637c:	add	r3, r3, #3
   26380:	bic	r3, r3, #3
   26384:	add	r3, r0, r3
   26388:	add	r2, r2, #3
   2638c:	push	{r4, lr}
   26390:	sub	r3, r3, r1
   26394:	mov	r4, r0
   26398:	bic	r2, r2, #3
   2639c:	strh	r3, [r1]
   263a0:	add	r1, r1, r2
   263a4:	bl	26308 <mount@plt+0x14250>
   263a8:	ldr	r0, [r4]
   263ac:	pop	{r4, pc}
   263b0:	ldrh	ip, [r0]
   263b4:	push	{r4, lr}
   263b8:	add	ip, ip, #3
   263bc:	bic	ip, ip, #3
   263c0:	add	lr, ip, #8
   263c4:	cmp	lr, r1
   263c8:	ldr	lr, [pc, #96]	; 26430 <mount@plt+0x14378>
   263cc:	add	lr, pc, lr
   263d0:	bhi	26408 <mount@plt+0x14350>
   263d4:	add	r1, r0, ip
   263d8:	mov	lr, #8
   263dc:	strh	r2, [r1, #2]
   263e0:	strh	lr, [r0, ip]
   263e4:	str	r3, [r1, #4]
   263e8:	ldrh	r3, [r0]
   263ec:	mov	r2, #0
   263f0:	add	r3, r3, #3
   263f4:	bic	r3, r3, #3
   263f8:	add	r3, r3, lr
   263fc:	strh	r3, [r0]
   26400:	mov	r0, r2
   26404:	pop	{r4, pc}
   26408:	mov	r3, r1
   2640c:	ldr	r1, [pc, #32]	; 26434 <mount@plt+0x1437c>
   26410:	ldr	r2, [pc, #32]	; 26438 <mount@plt+0x14380>
   26414:	ldr	r0, [lr, r1]
   26418:	add	r2, pc, r2
   2641c:	mov	r1, #1
   26420:	ldr	r0, [r0]
   26424:	bl	11ef0 <__fprintf_chk@plt>
   26428:	mvn	r2, #0
   2642c:	b	26400 <mount@plt+0x14348>
   26430:	andeq	r5, r1, ip, lsr #24
   26434:	andeq	r0, r0, r4, lsl r2
   26438:	andeq	r4, r0, r8, lsl #26
   2643c:	push	{r4, r5, r6, lr}
   26440:	mov	r5, r0
   26444:	ldrh	ip, [r0]
   26448:	ldr	lr, [sp, #16]
   2644c:	add	ip, ip, #3
   26450:	add	r0, lr, #7
   26454:	bic	r0, r0, #3
   26458:	bic	ip, ip, #3
   2645c:	add	r0, r0, ip
   26460:	cmp	r0, r1
   26464:	ldr	r0, [pc, #128]	; 264ec <mount@plt+0x14434>
   26468:	add	r0, pc, r0
   2646c:	bhi	264c4 <mount@plt+0x1440c>
   26470:	add	r4, lr, #4
   26474:	add	r0, r5, ip
   26478:	uxth	r4, r4
   2647c:	cmp	lr, #0
   26480:	strh	r2, [r0, #2]
   26484:	strh	r4, [r5, ip]
   26488:	bne	264b0 <mount@plt+0x143f8>
   2648c:	ldrh	r3, [r5]
   26490:	add	r4, r4, #3
   26494:	bic	r4, r4, #3
   26498:	add	r3, r3, #3
   2649c:	bic	r3, r3, #3
   264a0:	add	r4, r3, r4
   264a4:	mov	r0, #0
   264a8:	strh	r4, [r5]
   264ac:	pop	{r4, r5, r6, pc}
   264b0:	mov	r2, lr
   264b4:	mov	r1, r3
   264b8:	add	r0, r0, #4
   264bc:	bl	11bc0 <memcpy@plt>
   264c0:	b	2648c <mount@plt+0x143d4>
   264c4:	ldr	ip, [pc, #36]	; 264f0 <mount@plt+0x14438>
   264c8:	ldr	r2, [pc, #36]	; 264f4 <mount@plt+0x1443c>
   264cc:	mov	r3, r1
   264d0:	ldr	r0, [r0, ip]
   264d4:	add	r2, pc, r2
   264d8:	mov	r1, #1
   264dc:	ldr	r0, [r0]
   264e0:	bl	11ef0 <__fprintf_chk@plt>
   264e4:	mvn	r0, #0
   264e8:	pop	{r4, r5, r6, pc}
   264ec:	muleq	r1, r0, fp
   264f0:	andeq	r0, r0, r4, lsl r2
   264f4:	andeq	r4, r0, r4, lsl #25
   264f8:	push	{lr}		; (str lr, [sp, #-4]!)
   264fc:	sub	sp, sp, #20
   26500:	mov	ip, #1
   26504:	strb	r3, [sp, #15]
   26508:	str	ip, [sp]
   2650c:	add	r3, sp, #15
   26510:	bl	2643c <mount@plt+0x14384>
   26514:	add	sp, sp, #20
   26518:	pop	{pc}		; (ldr pc, [sp], #4)
   2651c:	push	{lr}		; (str lr, [sp, #-4]!)
   26520:	sub	sp, sp, #20
   26524:	mov	ip, #2
   26528:	strh	r3, [sp, #14]
   2652c:	str	ip, [sp]
   26530:	add	r3, sp, #14
   26534:	bl	2643c <mount@plt+0x14384>
   26538:	add	sp, sp, #20
   2653c:	pop	{pc}		; (ldr pc, [sp], #4)
   26540:	push	{lr}		; (str lr, [sp, #-4]!)
   26544:	sub	sp, sp, #12
   26548:	mov	r3, #8
   2654c:	str	r3, [sp]
   26550:	add	r3, sp, #16
   26554:	bl	2643c <mount@plt+0x14384>
   26558:	add	sp, sp, #12
   2655c:	pop	{pc}		; (ldr pc, [sp], #4)
   26560:	ldrh	ip, [r0]
   26564:	push	{r4, lr}
   26568:	sub	sp, sp, #8
   2656c:	mov	r3, #0
   26570:	add	ip, ip, #3
   26574:	bic	ip, ip, #3
   26578:	str	r3, [sp]
   2657c:	add	r4, r0, ip
   26580:	bl	2643c <mount@plt+0x14384>
   26584:	mov	r0, r4
   26588:	add	sp, sp, #8
   2658c:	pop	{r4, pc}
   26590:	ldrh	r3, [r0]
   26594:	add	r3, r3, #3
   26598:	bic	r3, r3, #3
   2659c:	add	r3, r0, r3
   265a0:	sub	r3, r3, r1
   265a4:	strh	r3, [r1]
   265a8:	ldrh	r0, [r0]
   265ac:	bx	lr
   265b0:	push	{r4, r5, r6, r7, lr}
   265b4:	mov	r6, r1
   265b8:	add	r1, r1, #1
   265bc:	sub	sp, sp, #12
   265c0:	mov	r5, r2
   265c4:	lsl	r2, r1, #2
   265c8:	mov	r1, #0
   265cc:	mov	r4, r3
   265d0:	ldrh	r7, [sp, #32]
   265d4:	bl	11e78 <memset@plt>
   265d8:	ldr	ip, [pc, #196]	; 266a4 <mount@plt+0x145ec>
   265dc:	cmp	r4, #3
   265e0:	add	ip, pc, ip
   265e4:	ble	2665c <mount@plt+0x145a4>
   265e8:	ldrh	r2, [r5]
   265ec:	cmp	r2, #3
   265f0:	mov	lr, r2
   265f4:	bls	26674 <mount@plt+0x145bc>
   265f8:	cmp	r4, r2
   265fc:	blt	26674 <mount@plt+0x145bc>
   26600:	mov	r3, r0
   26604:	mvn	r0, r7
   26608:	sxth	r0, r0
   2660c:	b	26628 <mount@plt+0x14570>
   26610:	ldrh	r2, [r5]
   26614:	cmp	r2, #3
   26618:	mov	lr, r2
   2661c:	bls	26674 <mount@plt+0x145bc>
   26620:	cmp	r4, r2
   26624:	blt	26674 <mount@plt+0x145bc>
   26628:	ldrh	r1, [r5, #2]
   2662c:	add	r2, r2, #3
   26630:	bic	r2, r2, #3
   26634:	and	r1, r1, r0
   26638:	cmp	r1, r6
   2663c:	sub	r4, r4, r2
   26640:	bgt	26650 <mount@plt+0x14598>
   26644:	ldr	lr, [r3, r1, lsl #2]
   26648:	cmp	lr, #0
   2664c:	streq	r5, [r3, r1, lsl #2]
   26650:	cmp	r4, #3
   26654:	add	r5, r5, r2
   26658:	bgt	26610 <mount@plt+0x14558>
   2665c:	cmp	r4, #0
   26660:	bne	26670 <mount@plt+0x145b8>
   26664:	mov	r0, #0
   26668:	add	sp, sp, #12
   2666c:	pop	{r4, r5, r6, r7, pc}
   26670:	ldrh	lr, [r5]
   26674:	ldr	r1, [pc, #44]	; 266a8 <mount@plt+0x145f0>
   26678:	ldr	r2, [pc, #44]	; 266ac <mount@plt+0x145f4>
   2667c:	mov	r3, r4
   26680:	ldr	r0, [ip, r1]
   26684:	add	r2, pc, r2
   26688:	str	lr, [sp]
   2668c:	mov	r1, #1
   26690:	ldr	r0, [r0]
   26694:	bl	11ef0 <__fprintf_chk@plt>
   26698:	mov	r0, #0
   2669c:	add	sp, sp, #12
   266a0:	pop	{r4, r5, r6, r7, pc}
   266a4:	andeq	r5, r1, r8, lsl sl
   266a8:	andeq	r0, r0, r4, lsl r2
   266ac:	andeq	r4, r0, ip, lsl #22
   266b0:	push	{lr}		; (str lr, [sp, #-4]!)
   266b4:	sub	sp, sp, #12
   266b8:	mov	ip, #0
   266bc:	str	ip, [sp]
   266c0:	bl	265b0 <mount@plt+0x144f8>
   266c4:	add	sp, sp, #12
   266c8:	pop	{pc}		; (ldr pc, [sp], #4)
   266cc:	push	{r4, lr}
   266d0:	cmp	r2, #3
   266d4:	ldr	r4, [pc, #192]	; 2679c <mount@plt+0x146e4>
   266d8:	sub	sp, sp, #8
   266dc:	add	r4, pc, r4
   266e0:	ble	26748 <mount@plt+0x14690>
   266e4:	ldrh	ip, [r1]
   266e8:	cmp	ip, #3
   266ec:	mov	lr, ip
   266f0:	bls	26760 <mount@plt+0x146a8>
   266f4:	cmp	r2, ip
   266f8:	blt	26760 <mount@plt+0x146a8>
   266fc:	ldrh	r3, [r1, #2]
   26700:	cmp	r0, r3
   26704:	bne	26730 <mount@plt+0x14678>
   26708:	b	26790 <mount@plt+0x146d8>
   2670c:	ldrh	ip, [r1]
   26710:	cmp	ip, #3
   26714:	mov	lr, ip
   26718:	bls	26760 <mount@plt+0x146a8>
   2671c:	cmp	r2, ip
   26720:	blt	26760 <mount@plt+0x146a8>
   26724:	ldrh	r3, [r1, #2]
   26728:	cmp	r3, r0
   2672c:	beq	26790 <mount@plt+0x146d8>
   26730:	add	ip, ip, #3
   26734:	bic	ip, ip, #3
   26738:	sub	r2, r2, ip
   2673c:	cmp	r2, #3
   26740:	add	r1, r1, ip
   26744:	bgt	2670c <mount@plt+0x14654>
   26748:	cmp	r2, #0
   2674c:	moveq	r0, r2
   26750:	bne	2675c <mount@plt+0x146a4>
   26754:	add	sp, sp, #8
   26758:	pop	{r4, pc}
   2675c:	ldrh	lr, [r1]
   26760:	ldr	r1, [pc, #56]	; 267a0 <mount@plt+0x146e8>
   26764:	mov	r3, r2
   26768:	ldr	r2, [pc, #52]	; 267a4 <mount@plt+0x146ec>
   2676c:	ldr	r0, [r4, r1]
   26770:	add	r2, pc, r2
   26774:	str	lr, [sp]
   26778:	mov	r1, #1
   2677c:	ldr	r0, [r0]
   26780:	bl	11ef0 <__fprintf_chk@plt>
   26784:	mov	r0, #0
   26788:	add	sp, sp, #8
   2678c:	pop	{r4, pc}
   26790:	mov	r0, r1
   26794:	add	sp, sp, #8
   26798:	pop	{r4, pc}
   2679c:	andeq	r5, r1, ip, lsl r9
   267a0:	andeq	r0, r0, r4, lsl r2
   267a4:	andeq	r4, r0, r0, lsr #20
   267a8:	push	{r4, lr}
   267ac:	ldrh	lr, [r2]
   267b0:	sub	lr, lr, #4
   267b4:	cmp	lr, r3
   267b8:	bcc	26804 <mount@plt+0x1474c>
   267bc:	add	ip, r3, #3
   267c0:	bic	ip, ip, #3
   267c4:	add	ip, ip, #4
   267c8:	cmp	lr, ip
   267cc:	bcs	267ec <mount@plt+0x14734>
   267d0:	add	r2, r1, #1
   267d4:	mov	r4, r1
   267d8:	lsl	r2, r2, #2
   267dc:	mov	r1, #0
   267e0:	bl	11e78 <memset@plt>
   267e4:	mov	r0, #0
   267e8:	pop	{r4, pc}
   267ec:	ldrh	r3, [r2, ip]
   267f0:	add	r2, r2, ip
   267f4:	add	r2, r2, #4
   267f8:	sub	r3, r3, #4
   267fc:	pop	{r4, lr}
   26800:	b	266b0 <mount@plt+0x145f8>
   26804:	mvn	r0, #0
   26808:	pop	{r4, pc}
   2680c:	subs	r2, r1, #1
   26810:	bxeq	lr
   26814:	bcc	269ec <mount@plt+0x14934>
   26818:	cmp	r0, r1
   2681c:	bls	269d0 <mount@plt+0x14918>
   26820:	tst	r1, r2
   26824:	beq	269dc <mount@plt+0x14924>
   26828:	clz	r3, r0
   2682c:	clz	r2, r1
   26830:	sub	r3, r2, r3
   26834:	rsbs	r3, r3, #31
   26838:	addne	r3, r3, r3, lsl #1
   2683c:	mov	r2, #0
   26840:	addne	pc, pc, r3, lsl #2
   26844:	nop			; (mov r0, r0)
   26848:	cmp	r0, r1, lsl #31
   2684c:	adc	r2, r2, r2
   26850:	subcs	r0, r0, r1, lsl #31
   26854:	cmp	r0, r1, lsl #30
   26858:	adc	r2, r2, r2
   2685c:	subcs	r0, r0, r1, lsl #30
   26860:	cmp	r0, r1, lsl #29
   26864:	adc	r2, r2, r2
   26868:	subcs	r0, r0, r1, lsl #29
   2686c:	cmp	r0, r1, lsl #28
   26870:	adc	r2, r2, r2
   26874:	subcs	r0, r0, r1, lsl #28
   26878:	cmp	r0, r1, lsl #27
   2687c:	adc	r2, r2, r2
   26880:	subcs	r0, r0, r1, lsl #27
   26884:	cmp	r0, r1, lsl #26
   26888:	adc	r2, r2, r2
   2688c:	subcs	r0, r0, r1, lsl #26
   26890:	cmp	r0, r1, lsl #25
   26894:	adc	r2, r2, r2
   26898:	subcs	r0, r0, r1, lsl #25
   2689c:	cmp	r0, r1, lsl #24
   268a0:	adc	r2, r2, r2
   268a4:	subcs	r0, r0, r1, lsl #24
   268a8:	cmp	r0, r1, lsl #23
   268ac:	adc	r2, r2, r2
   268b0:	subcs	r0, r0, r1, lsl #23
   268b4:	cmp	r0, r1, lsl #22
   268b8:	adc	r2, r2, r2
   268bc:	subcs	r0, r0, r1, lsl #22
   268c0:	cmp	r0, r1, lsl #21
   268c4:	adc	r2, r2, r2
   268c8:	subcs	r0, r0, r1, lsl #21
   268cc:	cmp	r0, r1, lsl #20
   268d0:	adc	r2, r2, r2
   268d4:	subcs	r0, r0, r1, lsl #20
   268d8:	cmp	r0, r1, lsl #19
   268dc:	adc	r2, r2, r2
   268e0:	subcs	r0, r0, r1, lsl #19
   268e4:	cmp	r0, r1, lsl #18
   268e8:	adc	r2, r2, r2
   268ec:	subcs	r0, r0, r1, lsl #18
   268f0:	cmp	r0, r1, lsl #17
   268f4:	adc	r2, r2, r2
   268f8:	subcs	r0, r0, r1, lsl #17
   268fc:	cmp	r0, r1, lsl #16
   26900:	adc	r2, r2, r2
   26904:	subcs	r0, r0, r1, lsl #16
   26908:	cmp	r0, r1, lsl #15
   2690c:	adc	r2, r2, r2
   26910:	subcs	r0, r0, r1, lsl #15
   26914:	cmp	r0, r1, lsl #14
   26918:	adc	r2, r2, r2
   2691c:	subcs	r0, r0, r1, lsl #14
   26920:	cmp	r0, r1, lsl #13
   26924:	adc	r2, r2, r2
   26928:	subcs	r0, r0, r1, lsl #13
   2692c:	cmp	r0, r1, lsl #12
   26930:	adc	r2, r2, r2
   26934:	subcs	r0, r0, r1, lsl #12
   26938:	cmp	r0, r1, lsl #11
   2693c:	adc	r2, r2, r2
   26940:	subcs	r0, r0, r1, lsl #11
   26944:	cmp	r0, r1, lsl #10
   26948:	adc	r2, r2, r2
   2694c:	subcs	r0, r0, r1, lsl #10
   26950:	cmp	r0, r1, lsl #9
   26954:	adc	r2, r2, r2
   26958:	subcs	r0, r0, r1, lsl #9
   2695c:	cmp	r0, r1, lsl #8
   26960:	adc	r2, r2, r2
   26964:	subcs	r0, r0, r1, lsl #8
   26968:	cmp	r0, r1, lsl #7
   2696c:	adc	r2, r2, r2
   26970:	subcs	r0, r0, r1, lsl #7
   26974:	cmp	r0, r1, lsl #6
   26978:	adc	r2, r2, r2
   2697c:	subcs	r0, r0, r1, lsl #6
   26980:	cmp	r0, r1, lsl #5
   26984:	adc	r2, r2, r2
   26988:	subcs	r0, r0, r1, lsl #5
   2698c:	cmp	r0, r1, lsl #4
   26990:	adc	r2, r2, r2
   26994:	subcs	r0, r0, r1, lsl #4
   26998:	cmp	r0, r1, lsl #3
   2699c:	adc	r2, r2, r2
   269a0:	subcs	r0, r0, r1, lsl #3
   269a4:	cmp	r0, r1, lsl #2
   269a8:	adc	r2, r2, r2
   269ac:	subcs	r0, r0, r1, lsl #2
   269b0:	cmp	r0, r1, lsl #1
   269b4:	adc	r2, r2, r2
   269b8:	subcs	r0, r0, r1, lsl #1
   269bc:	cmp	r0, r1
   269c0:	adc	r2, r2, r2
   269c4:	subcs	r0, r0, r1
   269c8:	mov	r0, r2
   269cc:	bx	lr
   269d0:	moveq	r0, #1
   269d4:	movne	r0, #0
   269d8:	bx	lr
   269dc:	clz	r2, r1
   269e0:	rsb	r2, r2, #31
   269e4:	lsr	r0, r0, r2
   269e8:	bx	lr
   269ec:	cmp	r0, #0
   269f0:	mvnne	r0, #0
   269f4:	b	27054 <mount@plt+0x14f9c>
   269f8:	cmp	r1, #0
   269fc:	beq	269ec <mount@plt+0x14934>
   26a00:	push	{r0, r1, lr}
   26a04:	bl	2680c <mount@plt+0x14754>
   26a08:	pop	{r1, r2, lr}
   26a0c:	mul	r3, r2, r0
   26a10:	sub	r1, r1, r3
   26a14:	bx	lr
   26a18:	cmp	r1, #0
   26a1c:	beq	26c28 <mount@plt+0x14b70>
   26a20:	eor	ip, r0, r1
   26a24:	rsbmi	r1, r1, #0
   26a28:	subs	r2, r1, #1
   26a2c:	beq	26bf4 <mount@plt+0x14b3c>
   26a30:	movs	r3, r0
   26a34:	rsbmi	r3, r0, #0
   26a38:	cmp	r3, r1
   26a3c:	bls	26c00 <mount@plt+0x14b48>
   26a40:	tst	r1, r2
   26a44:	beq	26c10 <mount@plt+0x14b58>
   26a48:	clz	r2, r3
   26a4c:	clz	r0, r1
   26a50:	sub	r2, r0, r2
   26a54:	rsbs	r2, r2, #31
   26a58:	addne	r2, r2, r2, lsl #1
   26a5c:	mov	r0, #0
   26a60:	addne	pc, pc, r2, lsl #2
   26a64:	nop			; (mov r0, r0)
   26a68:	cmp	r3, r1, lsl #31
   26a6c:	adc	r0, r0, r0
   26a70:	subcs	r3, r3, r1, lsl #31
   26a74:	cmp	r3, r1, lsl #30
   26a78:	adc	r0, r0, r0
   26a7c:	subcs	r3, r3, r1, lsl #30
   26a80:	cmp	r3, r1, lsl #29
   26a84:	adc	r0, r0, r0
   26a88:	subcs	r3, r3, r1, lsl #29
   26a8c:	cmp	r3, r1, lsl #28
   26a90:	adc	r0, r0, r0
   26a94:	subcs	r3, r3, r1, lsl #28
   26a98:	cmp	r3, r1, lsl #27
   26a9c:	adc	r0, r0, r0
   26aa0:	subcs	r3, r3, r1, lsl #27
   26aa4:	cmp	r3, r1, lsl #26
   26aa8:	adc	r0, r0, r0
   26aac:	subcs	r3, r3, r1, lsl #26
   26ab0:	cmp	r3, r1, lsl #25
   26ab4:	adc	r0, r0, r0
   26ab8:	subcs	r3, r3, r1, lsl #25
   26abc:	cmp	r3, r1, lsl #24
   26ac0:	adc	r0, r0, r0
   26ac4:	subcs	r3, r3, r1, lsl #24
   26ac8:	cmp	r3, r1, lsl #23
   26acc:	adc	r0, r0, r0
   26ad0:	subcs	r3, r3, r1, lsl #23
   26ad4:	cmp	r3, r1, lsl #22
   26ad8:	adc	r0, r0, r0
   26adc:	subcs	r3, r3, r1, lsl #22
   26ae0:	cmp	r3, r1, lsl #21
   26ae4:	adc	r0, r0, r0
   26ae8:	subcs	r3, r3, r1, lsl #21
   26aec:	cmp	r3, r1, lsl #20
   26af0:	adc	r0, r0, r0
   26af4:	subcs	r3, r3, r1, lsl #20
   26af8:	cmp	r3, r1, lsl #19
   26afc:	adc	r0, r0, r0
   26b00:	subcs	r3, r3, r1, lsl #19
   26b04:	cmp	r3, r1, lsl #18
   26b08:	adc	r0, r0, r0
   26b0c:	subcs	r3, r3, r1, lsl #18
   26b10:	cmp	r3, r1, lsl #17
   26b14:	adc	r0, r0, r0
   26b18:	subcs	r3, r3, r1, lsl #17
   26b1c:	cmp	r3, r1, lsl #16
   26b20:	adc	r0, r0, r0
   26b24:	subcs	r3, r3, r1, lsl #16
   26b28:	cmp	r3, r1, lsl #15
   26b2c:	adc	r0, r0, r0
   26b30:	subcs	r3, r3, r1, lsl #15
   26b34:	cmp	r3, r1, lsl #14
   26b38:	adc	r0, r0, r0
   26b3c:	subcs	r3, r3, r1, lsl #14
   26b40:	cmp	r3, r1, lsl #13
   26b44:	adc	r0, r0, r0
   26b48:	subcs	r3, r3, r1, lsl #13
   26b4c:	cmp	r3, r1, lsl #12
   26b50:	adc	r0, r0, r0
   26b54:	subcs	r3, r3, r1, lsl #12
   26b58:	cmp	r3, r1, lsl #11
   26b5c:	adc	r0, r0, r0
   26b60:	subcs	r3, r3, r1, lsl #11
   26b64:	cmp	r3, r1, lsl #10
   26b68:	adc	r0, r0, r0
   26b6c:	subcs	r3, r3, r1, lsl #10
   26b70:	cmp	r3, r1, lsl #9
   26b74:	adc	r0, r0, r0
   26b78:	subcs	r3, r3, r1, lsl #9
   26b7c:	cmp	r3, r1, lsl #8
   26b80:	adc	r0, r0, r0
   26b84:	subcs	r3, r3, r1, lsl #8
   26b88:	cmp	r3, r1, lsl #7
   26b8c:	adc	r0, r0, r0
   26b90:	subcs	r3, r3, r1, lsl #7
   26b94:	cmp	r3, r1, lsl #6
   26b98:	adc	r0, r0, r0
   26b9c:	subcs	r3, r3, r1, lsl #6
   26ba0:	cmp	r3, r1, lsl #5
   26ba4:	adc	r0, r0, r0
   26ba8:	subcs	r3, r3, r1, lsl #5
   26bac:	cmp	r3, r1, lsl #4
   26bb0:	adc	r0, r0, r0
   26bb4:	subcs	r3, r3, r1, lsl #4
   26bb8:	cmp	r3, r1, lsl #3
   26bbc:	adc	r0, r0, r0
   26bc0:	subcs	r3, r3, r1, lsl #3
   26bc4:	cmp	r3, r1, lsl #2
   26bc8:	adc	r0, r0, r0
   26bcc:	subcs	r3, r3, r1, lsl #2
   26bd0:	cmp	r3, r1, lsl #1
   26bd4:	adc	r0, r0, r0
   26bd8:	subcs	r3, r3, r1, lsl #1
   26bdc:	cmp	r3, r1
   26be0:	adc	r0, r0, r0
   26be4:	subcs	r3, r3, r1
   26be8:	cmp	ip, #0
   26bec:	rsbmi	r0, r0, #0
   26bf0:	bx	lr
   26bf4:	teq	ip, r0
   26bf8:	rsbmi	r0, r0, #0
   26bfc:	bx	lr
   26c00:	movcc	r0, #0
   26c04:	asreq	r0, ip, #31
   26c08:	orreq	r0, r0, #1
   26c0c:	bx	lr
   26c10:	clz	r2, r1
   26c14:	rsb	r2, r2, #31
   26c18:	cmp	ip, #0
   26c1c:	lsr	r0, r3, r2
   26c20:	rsbmi	r0, r0, #0
   26c24:	bx	lr
   26c28:	cmp	r0, #0
   26c2c:	mvngt	r0, #-2147483648	; 0x80000000
   26c30:	movlt	r0, #-2147483648	; 0x80000000
   26c34:	b	27054 <mount@plt+0x14f9c>
   26c38:	cmp	r1, #0
   26c3c:	beq	26c28 <mount@plt+0x14b70>
   26c40:	push	{r0, r1, lr}
   26c44:	bl	26a20 <mount@plt+0x14968>
   26c48:	pop	{r1, r2, lr}
   26c4c:	mul	r3, r2, r0
   26c50:	sub	r1, r1, r3
   26c54:	bx	lr
   26c58:	eor	r1, r1, #-2147483648	; 0x80000000
   26c5c:	b	26c64 <mount@plt+0x14bac>
   26c60:	eor	r3, r3, #-2147483648	; 0x80000000
   26c64:	push	{r4, r5, lr}
   26c68:	lsl	r4, r1, #1
   26c6c:	lsl	r5, r3, #1
   26c70:	teq	r4, r5
   26c74:	teqeq	r0, r2
   26c78:	orrsne	ip, r4, r0
   26c7c:	orrsne	ip, r5, r2
   26c80:	mvnsne	ip, r4, asr #21
   26c84:	mvnsne	ip, r5, asr #21
   26c88:	beq	26e74 <mount@plt+0x14dbc>
   26c8c:	lsr	r4, r4, #21
   26c90:	rsbs	r5, r4, r5, lsr #21
   26c94:	rsblt	r5, r5, #0
   26c98:	ble	26cb8 <mount@plt+0x14c00>
   26c9c:	add	r4, r4, r5
   26ca0:	eor	r2, r0, r2
   26ca4:	eor	r3, r1, r3
   26ca8:	eor	r0, r2, r0
   26cac:	eor	r1, r3, r1
   26cb0:	eor	r2, r0, r2
   26cb4:	eor	r3, r1, r3
   26cb8:	cmp	r5, #54	; 0x36
   26cbc:	pophi	{r4, r5, pc}
   26cc0:	tst	r1, #-2147483648	; 0x80000000
   26cc4:	lsl	r1, r1, #12
   26cc8:	mov	ip, #1048576	; 0x100000
   26ccc:	orr	r1, ip, r1, lsr #12
   26cd0:	beq	26cdc <mount@plt+0x14c24>
   26cd4:	rsbs	r0, r0, #0
   26cd8:	rsc	r1, r1, #0
   26cdc:	tst	r3, #-2147483648	; 0x80000000
   26ce0:	lsl	r3, r3, #12
   26ce4:	orr	r3, ip, r3, lsr #12
   26ce8:	beq	26cf4 <mount@plt+0x14c3c>
   26cec:	rsbs	r2, r2, #0
   26cf0:	rsc	r3, r3, #0
   26cf4:	teq	r4, r5
   26cf8:	beq	26e5c <mount@plt+0x14da4>
   26cfc:	sub	r4, r4, #1
   26d00:	rsbs	lr, r5, #32
   26d04:	blt	26d20 <mount@plt+0x14c68>
   26d08:	lsl	ip, r2, lr
   26d0c:	adds	r0, r0, r2, lsr r5
   26d10:	adc	r1, r1, #0
   26d14:	adds	r0, r0, r3, lsl lr
   26d18:	adcs	r1, r1, r3, asr r5
   26d1c:	b	26d3c <mount@plt+0x14c84>
   26d20:	sub	r5, r5, #32
   26d24:	add	lr, lr, #32
   26d28:	cmp	r2, #1
   26d2c:	lsl	ip, r3, lr
   26d30:	orrcs	ip, ip, #2
   26d34:	adds	r0, r0, r3, asr r5
   26d38:	adcs	r1, r1, r3, asr #31
   26d3c:	and	r5, r1, #-2147483648	; 0x80000000
   26d40:	bpl	26d50 <mount@plt+0x14c98>
   26d44:	rsbs	ip, ip, #0
   26d48:	rscs	r0, r0, #0
   26d4c:	rsc	r1, r1, #0
   26d50:	cmp	r1, #1048576	; 0x100000
   26d54:	bcc	26d94 <mount@plt+0x14cdc>
   26d58:	cmp	r1, #2097152	; 0x200000
   26d5c:	bcc	26d7c <mount@plt+0x14cc4>
   26d60:	lsrs	r1, r1, #1
   26d64:	rrxs	r0, r0
   26d68:	rrx	ip, ip
   26d6c:	add	r4, r4, #1
   26d70:	lsl	r2, r4, #21
   26d74:	cmn	r2, #4194304	; 0x400000
   26d78:	bcs	26ed4 <mount@plt+0x14e1c>
   26d7c:	cmp	ip, #-2147483648	; 0x80000000
   26d80:	lsrseq	ip, r0, #1
   26d84:	adcs	r0, r0, #0
   26d88:	adc	r1, r1, r4, lsl #20
   26d8c:	orr	r1, r1, r5
   26d90:	pop	{r4, r5, pc}
   26d94:	lsls	ip, ip, #1
   26d98:	adcs	r0, r0, r0
   26d9c:	adc	r1, r1, r1
   26da0:	tst	r1, #1048576	; 0x100000
   26da4:	sub	r4, r4, #1
   26da8:	bne	26d7c <mount@plt+0x14cc4>
   26dac:	teq	r1, #0
   26db0:	moveq	r1, r0
   26db4:	moveq	r0, #0
   26db8:	clz	r3, r1
   26dbc:	addeq	r3, r3, #32
   26dc0:	sub	r3, r3, #11
   26dc4:	subs	r2, r3, #32
   26dc8:	bge	26dec <mount@plt+0x14d34>
   26dcc:	adds	r2, r2, #12
   26dd0:	ble	26de8 <mount@plt+0x14d30>
   26dd4:	add	ip, r2, #20
   26dd8:	rsb	r2, r2, #12
   26ddc:	lsl	r0, r1, ip
   26de0:	lsr	r1, r1, r2
   26de4:	b	26dfc <mount@plt+0x14d44>
   26de8:	add	r2, r2, #20
   26dec:	rsble	ip, r2, #32
   26df0:	lsl	r1, r1, r2
   26df4:	orrle	r1, r1, r0, lsr ip
   26df8:	lslle	r0, r0, r2
   26dfc:	subs	r4, r4, r3
   26e00:	addge	r1, r1, r4, lsl #20
   26e04:	orrge	r1, r1, r5
   26e08:	popge	{r4, r5, pc}
   26e0c:	mvn	r4, r4
   26e10:	subs	r4, r4, #31
   26e14:	bge	26e50 <mount@plt+0x14d98>
   26e18:	adds	r4, r4, #12
   26e1c:	bgt	26e38 <mount@plt+0x14d80>
   26e20:	add	r4, r4, #20
   26e24:	rsb	r2, r4, #32
   26e28:	lsr	r0, r0, r4
   26e2c:	orr	r0, r0, r1, lsl r2
   26e30:	orr	r1, r5, r1, lsr r4
   26e34:	pop	{r4, r5, pc}
   26e38:	rsb	r4, r4, #12
   26e3c:	rsb	r2, r4, #32
   26e40:	lsr	r0, r0, r2
   26e44:	orr	r0, r0, r1, lsl r4
   26e48:	mov	r1, r5
   26e4c:	pop	{r4, r5, pc}
   26e50:	lsr	r0, r1, r4
   26e54:	mov	r1, r5
   26e58:	pop	{r4, r5, pc}
   26e5c:	teq	r4, #0
   26e60:	eor	r3, r3, #1048576	; 0x100000
   26e64:	eoreq	r1, r1, #1048576	; 0x100000
   26e68:	addeq	r4, r4, #1
   26e6c:	subne	r5, r5, #1
   26e70:	b	26cfc <mount@plt+0x14c44>
   26e74:	mvns	ip, r4, asr #21
   26e78:	mvnsne	ip, r5, asr #21
   26e7c:	beq	26ee4 <mount@plt+0x14e2c>
   26e80:	teq	r4, r5
   26e84:	teqeq	r0, r2
   26e88:	beq	26e9c <mount@plt+0x14de4>
   26e8c:	orrs	ip, r4, r0
   26e90:	moveq	r1, r3
   26e94:	moveq	r0, r2
   26e98:	pop	{r4, r5, pc}
   26e9c:	teq	r1, r3
   26ea0:	movne	r1, #0
   26ea4:	movne	r0, #0
   26ea8:	popne	{r4, r5, pc}
   26eac:	lsrs	ip, r4, #21
   26eb0:	bne	26ec4 <mount@plt+0x14e0c>
   26eb4:	lsls	r0, r0, #1
   26eb8:	adcs	r1, r1, r1
   26ebc:	orrcs	r1, r1, #-2147483648	; 0x80000000
   26ec0:	pop	{r4, r5, pc}
   26ec4:	adds	r4, r4, #4194304	; 0x400000
   26ec8:	addcc	r1, r1, #1048576	; 0x100000
   26ecc:	popcc	{r4, r5, pc}
   26ed0:	and	r5, r1, #-2147483648	; 0x80000000
   26ed4:	orr	r1, r5, #2130706432	; 0x7f000000
   26ed8:	orr	r1, r1, #15728640	; 0xf00000
   26edc:	mov	r0, #0
   26ee0:	pop	{r4, r5, pc}
   26ee4:	mvns	ip, r4, asr #21
   26ee8:	movne	r1, r3
   26eec:	movne	r0, r2
   26ef0:	mvnseq	ip, r5, asr #21
   26ef4:	movne	r3, r1
   26ef8:	movne	r2, r0
   26efc:	orrs	r4, r0, r1, lsl #12
   26f00:	orrseq	r5, r2, r3, lsl #12
   26f04:	teqeq	r1, r3
   26f08:	orrne	r1, r1, #524288	; 0x80000
   26f0c:	pop	{r4, r5, pc}
   26f10:	teq	r0, #0
   26f14:	moveq	r1, #0
   26f18:	bxeq	lr
   26f1c:	push	{r4, r5, lr}
   26f20:	mov	r4, #1024	; 0x400
   26f24:	add	r4, r4, #50	; 0x32
   26f28:	mov	r5, #0
   26f2c:	mov	r1, #0
   26f30:	b	26dac <mount@plt+0x14cf4>
   26f34:	teq	r0, #0
   26f38:	moveq	r1, #0
   26f3c:	bxeq	lr
   26f40:	push	{r4, r5, lr}
   26f44:	mov	r4, #1024	; 0x400
   26f48:	add	r4, r4, #50	; 0x32
   26f4c:	ands	r5, r0, #-2147483648	; 0x80000000
   26f50:	rsbmi	r0, r0, #0
   26f54:	mov	r1, #0
   26f58:	b	26dac <mount@plt+0x14cf4>
   26f5c:	lsls	r2, r0, #1
   26f60:	asr	r1, r2, #3
   26f64:	rrx	r1, r1
   26f68:	lsl	r0, r2, #28
   26f6c:	andsne	r3, r2, #-16777216	; 0xff000000
   26f70:	teqne	r3, #-16777216	; 0xff000000
   26f74:	eorne	r1, r1, #939524096	; 0x38000000
   26f78:	bxne	lr
   26f7c:	bics	r2, r2, #-16777216	; 0xff000000
   26f80:	bxeq	lr
   26f84:	teq	r3, #-16777216	; 0xff000000
   26f88:	orreq	r1, r1, #524288	; 0x80000
   26f8c:	bxeq	lr
   26f90:	push	{r4, r5, lr}
   26f94:	mov	r4, #896	; 0x380
   26f98:	and	r5, r1, #-2147483648	; 0x80000000
   26f9c:	bic	r1, r1, #-2147483648	; 0x80000000
   26fa0:	b	26dac <mount@plt+0x14cf4>
   26fa4:	orrs	r2, r0, r1
   26fa8:	bxeq	lr
   26fac:	push	{r4, r5, lr}
   26fb0:	mov	r5, #0
   26fb4:	b	26fd4 <mount@plt+0x14f1c>
   26fb8:	orrs	r2, r0, r1
   26fbc:	bxeq	lr
   26fc0:	push	{r4, r5, lr}
   26fc4:	ands	r5, r1, #-2147483648	; 0x80000000
   26fc8:	bpl	26fd4 <mount@plt+0x14f1c>
   26fcc:	rsbs	r0, r0, #0
   26fd0:	rsc	r1, r1, #0
   26fd4:	mov	r4, #1024	; 0x400
   26fd8:	add	r4, r4, #50	; 0x32
   26fdc:	lsrs	ip, r1, #22
   26fe0:	beq	26d50 <mount@plt+0x14c98>
   26fe4:	mov	r2, #3
   26fe8:	lsrs	ip, ip, #3
   26fec:	addne	r2, r2, #3
   26ff0:	lsrs	ip, ip, #3
   26ff4:	addne	r2, r2, #3
   26ff8:	add	r2, r2, ip, lsr #3
   26ffc:	rsb	r3, r2, #32
   27000:	lsl	ip, r0, r3
   27004:	lsr	r0, r0, r2
   27008:	orr	r0, r0, r1, lsl r3
   2700c:	lsr	r1, r1, r2
   27010:	add	r4, r4, r2
   27014:	b	26d50 <mount@plt+0x14c98>
   27018:	cmp	r3, #0
   2701c:	cmpeq	r2, #0
   27020:	bne	27038 <mount@plt+0x14f80>
   27024:	cmp	r1, #0
   27028:	cmpeq	r0, #0
   2702c:	mvnne	r1, #0
   27030:	mvnne	r0, #0
   27034:	b	27054 <mount@plt+0x14f9c>
   27038:	sub	sp, sp, #8
   2703c:	push	{sp, lr}
   27040:	bl	270d0 <mount@plt+0x15018>
   27044:	ldr	lr, [sp, #4]
   27048:	add	sp, sp, #8
   2704c:	pop	{r2, r3}
   27050:	bx	lr
   27054:	push	{r1, lr}
   27058:	mov	r0, #8
   2705c:	bl	11ae8 <raise@plt>
   27060:	pop	{r1, pc}
   27064:	vmov	d7, r0, r1
   27068:	vcmpe.f64	d7, #0.0
   2706c:	vmrs	APSR_nzcv, fpscr
   27070:	bmi	27078 <mount@plt+0x14fc0>
   27074:	b	27090 <mount@plt+0x14fd8>
   27078:	push	{r4, lr}
   2707c:	eor	r1, r1, #-2147483648	; 0x80000000
   27080:	bl	27090 <mount@plt+0x14fd8>
   27084:	rsbs	r0, r0, #0
   27088:	rsc	r1, r1, #0
   2708c:	pop	{r4, pc}
   27090:	vmov	d6, r0, r1
   27094:	vldr	d7, [pc, #36]	; 270c0 <mount@plt+0x15008>
   27098:	vldr	d5, [pc, #40]	; 270c8 <mount@plt+0x15010>
   2709c:	vmul.f64	d7, d6, d7
   270a0:	vcvt.u32.f64	s14, d7
   270a4:	vcvt.f64.u32	d4, s14
   270a8:	vmov	r1, s14
   270ac:	vmls.f64	d6, d4, d5
   270b0:	vcvt.u32.f64	s15, d6
   270b4:	vmov	r0, s15
   270b8:	bx	lr
   270bc:	nop			; (mov r0, r0)
   270c0:	andeq	r0, r0, r0
   270c4:	ldclcc	0, cr0, [r0]
   270c8:	andeq	r0, r0, r0
   270cc:	mvnsmi	r0, r0
   270d0:	cmp	r1, r3
   270d4:	cmpeq	r0, r2
   270d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   270dc:	mov	r4, r0
   270e0:	movcc	r0, #0
   270e4:	mov	r5, r1
   270e8:	ldr	lr, [sp, #36]	; 0x24
   270ec:	movcc	r1, r0
   270f0:	bcc	271ec <mount@plt+0x15134>
   270f4:	cmp	r3, #0
   270f8:	clzeq	ip, r2
   270fc:	clzne	ip, r3
   27100:	addeq	ip, ip, #32
   27104:	cmp	r5, #0
   27108:	clzeq	r1, r4
   2710c:	addeq	r1, r1, #32
   27110:	clzne	r1, r5
   27114:	sub	ip, ip, r1
   27118:	sub	sl, ip, #32
   2711c:	lsl	r9, r3, ip
   27120:	rsb	fp, ip, #32
   27124:	orr	r9, r9, r2, lsl sl
   27128:	orr	r9, r9, r2, lsr fp
   2712c:	lsl	r8, r2, ip
   27130:	cmp	r5, r9
   27134:	cmpeq	r4, r8
   27138:	movcc	r0, #0
   2713c:	movcc	r1, r0
   27140:	bcc	2715c <mount@plt+0x150a4>
   27144:	mov	r0, #1
   27148:	subs	r4, r4, r8
   2714c:	lsl	r1, r0, sl
   27150:	orr	r1, r1, r0, lsr fp
   27154:	lsl	r0, r0, ip
   27158:	sbc	r5, r5, r9
   2715c:	cmp	ip, #0
   27160:	beq	271ec <mount@plt+0x15134>
   27164:	lsr	r6, r8, #1
   27168:	orr	r6, r6, r9, lsl #31
   2716c:	lsr	r7, r9, #1
   27170:	mov	r2, ip
   27174:	b	27198 <mount@plt+0x150e0>
   27178:	subs	r3, r4, r6
   2717c:	sbc	r8, r5, r7
   27180:	adds	r3, r3, r3
   27184:	adc	r8, r8, r8
   27188:	adds	r4, r3, #1
   2718c:	adc	r5, r8, #0
   27190:	subs	r2, r2, #1
   27194:	beq	271b4 <mount@plt+0x150fc>
   27198:	cmp	r5, r7
   2719c:	cmpeq	r4, r6
   271a0:	bcs	27178 <mount@plt+0x150c0>
   271a4:	adds	r4, r4, r4
   271a8:	adc	r5, r5, r5
   271ac:	subs	r2, r2, #1
   271b0:	bne	27198 <mount@plt+0x150e0>
   271b4:	lsr	r3, r4, ip
   271b8:	orr	r3, r3, r5, lsl fp
   271bc:	lsr	r2, r5, ip
   271c0:	orr	r3, r3, r5, lsr sl
   271c4:	adds	r0, r0, r4
   271c8:	mov	r4, r3
   271cc:	lsl	r3, r2, ip
   271d0:	orr	r3, r3, r4, lsl sl
   271d4:	lsl	ip, r4, ip
   271d8:	orr	r3, r3, r4, lsr fp
   271dc:	adc	r1, r1, r5
   271e0:	subs	r0, r0, ip
   271e4:	mov	r5, r2
   271e8:	sbc	r1, r1, r3
   271ec:	cmp	lr, #0
   271f0:	strdne	r4, [lr]
   271f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   271f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   271fc:	mov	r7, r0
   27200:	ldr	r6, [pc, #72]	; 27250 <mount@plt+0x15198>
   27204:	ldr	r5, [pc, #72]	; 27254 <mount@plt+0x1519c>
   27208:	add	r6, pc, r6
   2720c:	add	r5, pc, r5
   27210:	sub	r6, r6, r5
   27214:	mov	r8, r1
   27218:	mov	r9, r2
   2721c:	bl	11ab0 <calloc@plt-0x20>
   27220:	asrs	r6, r6, #2
   27224:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   27228:	mov	r4, #0
   2722c:	add	r4, r4, #1
   27230:	ldr	r3, [r5], #4
   27234:	mov	r2, r9
   27238:	mov	r1, r8
   2723c:	mov	r0, r7
   27240:	blx	r3
   27244:	cmp	r6, r4
   27248:	bne	2722c <mount@plt+0x15174>
   2724c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27250:	strdeq	r4, [r1], -ip
   27254:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   27258:	bx	lr

Disassembly of section .fini:

0002725c <.fini>:
   2725c:	push	{r3, lr}
   27260:	pop	{r3, pc}
