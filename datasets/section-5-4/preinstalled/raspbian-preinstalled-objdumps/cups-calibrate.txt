
raspbian-preinstalled/cups-calibrate:     file format elf32-littlearm


Disassembly of section .init:

000107ec <.init>:
   107ec:	push	{r3, lr}
   107f0:	bl	11570 <pclose@plt+0xc2c>
   107f4:	pop	{r3, pc}

Disassembly of section .plt:

000107f8 <raise@plt-0x14>:
   107f8:	push	{lr}		; (str lr, [sp, #-4]!)
   107fc:	ldr	lr, [pc, #4]	; 10808 <raise@plt-0x4>
   10800:	add	lr, pc, lr
   10804:	ldr	pc, [lr, #8]!
   10808:	andeq	r4, r1, ip, ror r7

0001080c <raise@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #20, 20	; 0x14000
   10814:	ldr	pc, [ip, #1916]!	; 0x77c

00010818 <strtol@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #20, 20	; 0x14000
   10820:	ldr	pc, [ip, #1908]!	; 0x774

00010824 <fopen@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #20, 20	; 0x14000
   1082c:	ldr	pc, [ip, #1900]!	; 0x76c

00010830 <fflush@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #20, 20	; 0x14000
   10838:	ldr	pc, [ip, #1892]!	; 0x764

0001083c <getuid@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #20, 20	; 0x14000
   10844:	ldr	pc, [ip, #1884]!	; 0x75c

00010848 <fgets@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #20, 20	; 0x14000
   10850:	ldr	pc, [ip, #1876]!	; 0x754

00010854 <pow@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #20, 20	; 0x14000
   1085c:	ldr	pc, [ip, #1868]!	; 0x74c

00010860 <__stack_chk_fail@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #20, 20	; 0x14000
   10868:	ldr	pc, [ip, #1860]!	; 0x744

0001086c <fwrite@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #20, 20	; 0x14000
   10874:	ldr	pc, [ip, #1852]!	; 0x73c

00010878 <__strcpy_chk@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #20, 20	; 0x14000
   10880:	ldr	pc, [ip, #1844]!	; 0x734

00010884 <puts@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #20, 20	; 0x14000
   1088c:	ldr	pc, [ip, #1836]!	; 0x72c

00010890 <__libc_start_main@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #20, 20	; 0x14000
   10898:	ldr	pc, [ip, #1828]!	; 0x724

0001089c <system@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #20, 20	; 0x14000
   108a4:	ldr	pc, [ip, #1820]!	; 0x71c

000108a8 <__ctype_tolower_loc@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #20, 20	; 0x14000
   108b0:	ldr	pc, [ip, #1812]!	; 0x714

000108b4 <__gmon_start__@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #20, 20	; 0x14000
   108bc:	ldr	pc, [ip, #1804]!	; 0x70c

000108c0 <__ctype_b_loc@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #20, 20	; 0x14000
   108c8:	ldr	pc, [ip, #1796]!	; 0x704

000108cc <strlen@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #20, 20	; 0x14000
   108d4:	ldr	pc, [ip, #1788]!	; 0x6fc

000108d8 <__sprintf_chk@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #20, 20	; 0x14000
   108e0:	ldr	pc, [ip, #1780]!	; 0x6f4

000108e4 <__isoc99_sscanf@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #20, 20	; 0x14000
   108ec:	ldr	pc, [ip, #1772]!	; 0x6ec

000108f0 <__printf_chk@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #20, 20	; 0x14000
   108f8:	ldr	pc, [ip, #1764]!	; 0x6e4

000108fc <__fprintf_chk@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #20, 20	; 0x14000
   10904:	ldr	pc, [ip, #1756]!	; 0x6dc

00010908 <fclose@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #20, 20	; 0x14000
   10910:	ldr	pc, [ip, #1748]!	; 0x6d4

00010914 <popen@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #20, 20	; 0x14000
   1091c:	ldr	pc, [ip, #1740]!	; 0x6cc

00010920 <putc@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #20, 20	; 0x14000
   10928:	ldr	pc, [ip, #1732]!	; 0x6c4

0001092c <abort@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #20, 20	; 0x14000
   10934:	ldr	pc, [ip, #1724]!	; 0x6bc

00010938 <getc@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #20, 20	; 0x14000
   10940:	ldr	pc, [ip, #1716]!	; 0x6b4

00010944 <pclose@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #20, 20	; 0x14000
   1094c:	ldr	pc, [ip, #1708]!	; 0x6ac

Disassembly of section .text:

00010950 <.text>:
   10950:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10954:	vpush	{d8-d14}
   10958:	ldr	r8, [pc, #1536]	; 10f60 <pclose@plt+0x61c>
   1095c:	ldr	r0, [pc, #1536]	; 10f64 <pclose@plt+0x620>
   10960:	sub	sp, sp, #4416	; 0x1140
   10964:	sub	sp, sp, #40	; 0x28
   10968:	add	r2, sp, #4416	; 0x1140
   1096c:	ldr	r3, [r8]
   10970:	add	r2, r2, #36	; 0x24
   10974:	str	r3, [r2]
   10978:	bl	10884 <puts@plt>
   1097c:	ldr	r0, [pc, #1508]	; 10f68 <pclose@plt+0x624>
   10980:	bl	10884 <puts@plt>
   10984:	ldr	r0, [pc, #1744]	; 1105c <pclose@plt+0x718>
   10988:	bl	10884 <puts@plt>
   1098c:	ldr	r0, [pc, #1496]	; 10f6c <pclose@plt+0x628>
   10990:	bl	10884 <puts@plt>
   10994:	ldr	r0, [pc, #1492]	; 10f70 <pclose@plt+0x62c>
   10998:	bl	10884 <puts@plt>
   1099c:	ldr	r0, [pc, #1720]	; 1105c <pclose@plt+0x718>
   109a0:	bl	10884 <puts@plt>
   109a4:	ldr	r0, [pc, #1480]	; 10f74 <pclose@plt+0x630>
   109a8:	bl	10884 <puts@plt>
   109ac:	ldr	r0, [pc, #1476]	; 10f78 <pclose@plt+0x634>
   109b0:	bl	10884 <puts@plt>
   109b4:	ldr	r0, [pc, #1696]	; 1105c <pclose@plt+0x718>
   109b8:	bl	10884 <puts@plt>
   109bc:	ldr	r0, [pc, #1464]	; 10f7c <pclose@plt+0x638>
   109c0:	bl	10884 <puts@plt>
   109c4:	ldr	r0, [pc, #1460]	; 10f80 <pclose@plt+0x63c>
   109c8:	bl	10884 <puts@plt>
   109cc:	ldr	r0, [pc, #1456]	; 10f84 <pclose@plt+0x640>
   109d0:	bl	10884 <puts@plt>
   109d4:	ldr	r0, [pc, #1664]	; 1105c <pclose@plt+0x718>
   109d8:	bl	10884 <puts@plt>
   109dc:	ldr	r0, [pc, #1444]	; 10f88 <pclose@plt+0x644>
   109e0:	bl	10884 <puts@plt>
   109e4:	ldr	r0, [pc, #1440]	; 10f8c <pclose@plt+0x648>
   109e8:	bl	10884 <puts@plt>
   109ec:	ldr	r0, [pc, #1640]	; 1105c <pclose@plt+0x718>
   109f0:	bl	10884 <puts@plt>
   109f4:	ldr	r0, [pc, #1428]	; 10f90 <pclose@plt+0x64c>
   109f8:	bl	10884 <puts@plt>
   109fc:	ldr	r0, [pc, #1424]	; 10f94 <pclose@plt+0x650>
   10a00:	bl	10884 <puts@plt>
   10a04:	ldr	r0, [pc, #1616]	; 1105c <pclose@plt+0x718>
   10a08:	bl	10884 <puts@plt>
   10a0c:	ldr	r0, [pc, #1608]	; 1105c <pclose@plt+0x718>
   10a10:	bl	10884 <puts@plt>
   10a14:	add	r9, sp, #356	; 0x164
   10a18:	add	r1, sp, #100	; 0x64
   10a1c:	ldr	r0, [pc, #1396]	; 10f98 <pclose@plt+0x654>
   10a20:	bl	11628 <pclose@plt+0xce4>
   10a24:	add	r6, sp, #612	; 0x264
   10a28:	mov	r1, r9
   10a2c:	ldr	r0, [pc, #1384]	; 10f9c <pclose@plt+0x658>
   10a30:	bl	11628 <pclose@plt+0xce4>
   10a34:	mov	r1, r6
   10a38:	ldr	r0, [pc, #1376]	; 10fa0 <pclose@plt+0x65c>
   10a3c:	bl	11628 <pclose@plt+0xce4>
   10a40:	ldr	r3, [pc, #1372]	; 10fa4 <pclose@plt+0x660>
   10a44:	ldrb	r2, [sp, #100]	; 0x64
   10a48:	add	r5, sp, #2400	; 0x960
   10a4c:	ldm	r3, {r0, r1}
   10a50:	add	r5, r5, #8
   10a54:	cmp	r2, #0
   10a58:	str	r0, [sp, #2404]	; 0x964
   10a5c:	strh	r1, [r5]
   10a60:	bne	114dc <pclose@plt+0xb98>
   10a64:	ldrb	r3, [sp, #356]	; 0x164
   10a68:	cmp	r3, #0
   10a6c:	bne	1149c <pclose@plt+0xb58>
   10a70:	add	r5, sp, #2400	; 0x960
   10a74:	add	r5, r5, #4
   10a78:	ldrb	r3, [sp, #612]	; 0x264
   10a7c:	cmp	r3, #0
   10a80:	bne	11454 <pclose@plt+0xb10>
   10a84:	mov	r0, r5
   10a88:	bl	108cc <strlen@plt>
   10a8c:	ldr	r3, [pc, #1488]	; 11064 <pclose@plt+0x720>
   10a90:	ldr	r4, [pc, #1296]	; 10fa8 <pclose@plt+0x664>
   10a94:	add	sl, r4, #32
   10a98:	add	ip, r5, r0
   10a9c:	mov	lr, r0
   10aa0:	ldm	r3!, {r0, r1, r2}
   10aa4:	mov	r7, ip
   10aa8:	ldrb	r3, [r3]
   10aac:	str	r0, [r5, lr]
   10ab0:	str	r1, [ip, #4]
   10ab4:	str	r2, [ip, #8]
   10ab8:	strb	r3, [r7, #12]!
   10abc:	mov	lr, r7
   10ac0:	mov	ip, r4
   10ac4:	add	lr, lr, #16
   10ac8:	ldm	ip!, {r0, r1, r2, r3}
   10acc:	add	r4, r4, #16
   10ad0:	cmp	ip, sl
   10ad4:	str	r0, [lr, #-16]
   10ad8:	str	r1, [lr, #-12]
   10adc:	str	r2, [lr, #-8]
   10ae0:	str	r3, [lr, #-4]
   10ae4:	bne	10ac0 <pclose@plt+0x17c>
   10ae8:	ldrb	r3, [r4, #4]
   10aec:	ldr	r0, [r4]
   10af0:	add	r1, sp, #1120	; 0x460
   10af4:	str	r0, [lr]
   10af8:	strb	r3, [lr, #4]
   10afc:	add	r1, r1, #4
   10b00:	ldr	r0, [pc, #1188]	; 10fac <pclose@plt+0x668>
   10b04:	bl	11628 <pclose@plt+0xce4>
   10b08:	ldrb	r3, [sp, #1124]	; 0x464
   10b0c:	cmp	r3, #0
   10b10:	beq	11408 <pclose@plt+0xac4>
   10b14:	ldr	r0, [pc, #1344]	; 1105c <pclose@plt+0x718>
   10b18:	bl	10884 <puts@plt>
   10b1c:	ldr	r0, [pc, #1164]	; 10fb0 <pclose@plt+0x66c>
   10b20:	bl	10884 <puts@plt>
   10b24:	ldr	r0, [pc, #1160]	; 10fb4 <pclose@plt+0x670>
   10b28:	bl	10884 <puts@plt>
   10b2c:	ldr	r0, [pc, #1156]	; 10fb8 <pclose@plt+0x674>
   10b30:	bl	10884 <puts@plt>
   10b34:	ldr	r0, [pc, #1152]	; 10fbc <pclose@plt+0x678>
   10b38:	bl	10884 <puts@plt>
   10b3c:	ldr	r0, [pc, #1304]	; 1105c <pclose@plt+0x718>
   10b40:	bl	10884 <puts@plt>
   10b44:	vldr	s1, [pc, #1012]	; 10f40 <pclose@plt+0x5fc>
   10b48:	ldr	r0, [pc, #1136]	; 10fc0 <pclose@plt+0x67c>
   10b4c:	vldr	s0, [pc, #1008]	; 10f44 <pclose@plt+0x600>
   10b50:	bl	11694 <pclose@plt+0xd50>
   10b54:	ldr	r0, [pc, #1280]	; 1105c <pclose@plt+0x718>
   10b58:	vmov.f32	s17, s0
   10b5c:	bl	10884 <puts@plt>
   10b60:	ldr	r0, [pc, #1116]	; 10fc4 <pclose@plt+0x680>
   10b64:	bl	10884 <puts@plt>
   10b68:	ldr	r0, [pc, #1112]	; 10fc8 <pclose@plt+0x684>
   10b6c:	bl	10884 <puts@plt>
   10b70:	ldr	r0, [pc, #1108]	; 10fcc <pclose@plt+0x688>
   10b74:	bl	10884 <puts@plt>
   10b78:	ldr	r0, [pc, #1104]	; 10fd0 <pclose@plt+0x68c>
   10b7c:	bl	10884 <puts@plt>
   10b80:	ldr	r0, [pc, #1236]	; 1105c <pclose@plt+0x718>
   10b84:	bl	10884 <puts@plt>
   10b88:	vldr	s1, [pc, #944]	; 10f40 <pclose@plt+0x5fc>
   10b8c:	ldr	r0, [pc, #1088]	; 10fd4 <pclose@plt+0x690>
   10b90:	vldr	s0, [pc, #940]	; 10f44 <pclose@plt+0x600>
   10b94:	bl	11694 <pclose@plt+0xd50>
   10b98:	ldr	r0, [pc, #1212]	; 1105c <pclose@plt+0x718>
   10b9c:	vmov.f32	s19, s0
   10ba0:	bl	10884 <puts@plt>
   10ba4:	ldr	r0, [pc, #1068]	; 10fd8 <pclose@plt+0x694>
   10ba8:	bl	10884 <puts@plt>
   10bac:	ldr	r0, [pc, #1044]	; 10fc8 <pclose@plt+0x684>
   10bb0:	bl	10884 <puts@plt>
   10bb4:	ldr	r0, [pc, #1040]	; 10fcc <pclose@plt+0x688>
   10bb8:	bl	10884 <puts@plt>
   10bbc:	ldr	r0, [pc, #1036]	; 10fd0 <pclose@plt+0x68c>
   10bc0:	bl	10884 <puts@plt>
   10bc4:	ldr	r0, [pc, #1168]	; 1105c <pclose@plt+0x718>
   10bc8:	bl	10884 <puts@plt>
   10bcc:	vldr	s1, [pc, #884]	; 10f48 <pclose@plt+0x604>
   10bd0:	ldr	r0, [pc, #1028]	; 10fdc <pclose@plt+0x698>
   10bd4:	vldr	s0, [pc, #880]	; 10f4c <pclose@plt+0x608>
   10bd8:	bl	11694 <pclose@plt+0xd50>
   10bdc:	ldr	r0, [pc, #1144]	; 1105c <pclose@plt+0x718>
   10be0:	vmov.f32	s16, s0
   10be4:	bl	10884 <puts@plt>
   10be8:	ldr	r0, [pc, #1008]	; 10fe0 <pclose@plt+0x69c>
   10bec:	bl	10884 <puts@plt>
   10bf0:	ldr	r0, [pc, #1004]	; 10fe4 <pclose@plt+0x6a0>
   10bf4:	bl	10884 <puts@plt>
   10bf8:	ldr	r0, [pc, #1116]	; 1105c <pclose@plt+0x718>
   10bfc:	bl	10884 <puts@plt>
   10c00:	add	r1, sp, #1120	; 0x460
   10c04:	add	r1, r1, #4
   10c08:	ldr	r0, [pc, #984]	; 10fe8 <pclose@plt+0x6a4>
   10c0c:	bl	11628 <pclose@plt+0xce4>
   10c10:	ldrb	r3, [sp, #1124]	; 0x464
   10c14:	cmp	r3, #0
   10c18:	beq	113b0 <pclose@plt+0xa6c>
   10c1c:	ldr	r0, [pc, #1080]	; 1105c <pclose@plt+0x718>
   10c20:	bl	10884 <puts@plt>
   10c24:	ldr	r0, [pc, #960]	; 10fec <pclose@plt+0x6a8>
   10c28:	bl	10884 <puts@plt>
   10c2c:	ldr	r0, [pc, #956]	; 10ff0 <pclose@plt+0x6ac>
   10c30:	bl	10884 <puts@plt>
   10c34:	ldr	r0, [pc, #952]	; 10ff4 <pclose@plt+0x6b0>
   10c38:	bl	10884 <puts@plt>
   10c3c:	ldr	r0, [pc, #948]	; 10ff8 <pclose@plt+0x6b4>
   10c40:	bl	10884 <puts@plt>
   10c44:	ldr	r0, [pc, #1040]	; 1105c <pclose@plt+0x718>
   10c48:	bl	10884 <puts@plt>
   10c4c:	vldr	s1, [pc, #764]	; 10f50 <pclose@plt+0x60c>
   10c50:	ldr	r0, [pc, #932]	; 10ffc <pclose@plt+0x6b8>
   10c54:	vldr	s0, [pc, #740]	; 10f40 <pclose@plt+0x5fc>
   10c58:	bl	11694 <pclose@plt+0xd50>
   10c5c:	ldr	r0, [pc, #1016]	; 1105c <pclose@plt+0x718>
   10c60:	vmov.f32	s24, s0
   10c64:	bl	10884 <puts@plt>
   10c68:	ldr	r0, [pc, #880]	; 10fe0 <pclose@plt+0x69c>
   10c6c:	bl	10884 <puts@plt>
   10c70:	ldr	r0, [pc, #904]	; 11000 <pclose@plt+0x6bc>
   10c74:	bl	10884 <puts@plt>
   10c78:	ldr	r0, [pc, #988]	; 1105c <pclose@plt+0x718>
   10c7c:	bl	10884 <puts@plt>
   10c80:	add	r1, sp, #1120	; 0x460
   10c84:	add	r1, r1, #4
   10c88:	ldr	r0, [pc, #884]	; 11004 <pclose@plt+0x6c0>
   10c8c:	bl	11628 <pclose@plt+0xce4>
   10c90:	ldrb	r3, [sp, #1124]	; 0x464
   10c94:	cmp	r3, #0
   10c98:	beq	11354 <pclose@plt+0xa10>
   10c9c:	ldr	r0, [pc, #952]	; 1105c <pclose@plt+0x718>
   10ca0:	bl	10884 <puts@plt>
   10ca4:	ldr	r0, [pc, #860]	; 11008 <pclose@plt+0x6c4>
   10ca8:	bl	10884 <puts@plt>
   10cac:	ldr	r0, [pc, #856]	; 1100c <pclose@plt+0x6c8>
   10cb0:	bl	10884 <puts@plt>
   10cb4:	ldr	r0, [pc, #852]	; 11010 <pclose@plt+0x6cc>
   10cb8:	bl	10884 <puts@plt>
   10cbc:	ldr	r0, [pc, #920]	; 1105c <pclose@plt+0x718>
   10cc0:	bl	10884 <puts@plt>
   10cc4:	vldr	s1, [pc, #648]	; 10f54 <pclose@plt+0x610>
   10cc8:	ldr	r0, [pc, #836]	; 11014 <pclose@plt+0x6d0>
   10ccc:	vldr	s0, [pc, #644]	; 10f58 <pclose@plt+0x614>
   10cd0:	bl	11694 <pclose@plt+0xd50>
   10cd4:	vldr	s1, [pc, #632]	; 10f54 <pclose@plt+0x610>
   10cd8:	ldr	r0, [pc, #824]	; 11018 <pclose@plt+0x6d4>
   10cdc:	vmov.f32	s25, s0
   10ce0:	vldr	s0, [pc, #624]	; 10f58 <pclose@plt+0x614>
   10ce4:	bl	11694 <pclose@plt+0xd50>
   10ce8:	vldr	s1, [pc, #612]	; 10f54 <pclose@plt+0x610>
   10cec:	ldr	r0, [pc, #808]	; 1101c <pclose@plt+0x6d8>
   10cf0:	vmov.f32	s26, s0
   10cf4:	vldr	s0, [pc, #604]	; 10f58 <pclose@plt+0x614>
   10cf8:	bl	11694 <pclose@plt+0xd50>
   10cfc:	vldr	s15, [pc, #584]	; 10f4c <pclose@plt+0x608>
   10d00:	vdiv.f32	s18, s17, s17
   10d04:	vmul.f32	s15, s16, s15
   10d08:	vdiv.f32	s16, s15, s17
   10d0c:	vdiv.f32	s27, s19, s17
   10d10:	vmov.f32	s28, s0
   10d14:	vsub.f32	s16, s16, s17
   10d18:	vadd.f32	s23, s0, s16
   10d1c:	vsub.f32	s19, s16, s26
   10d20:	vsub.f32	s21, s16, s0
   10d24:	vadd.f32	s20, s25, s16
   10d28:	vadd.f32	s22, s26, s16
   10d2c:	vsub.f32	s16, s16, s25
   10d30:	vmul.f32	s23, s23, s18
   10d34:	vmul.f32	s19, s19, s18
   10d38:	vmul.f32	s21, s21, s18
   10d3c:	vmul.f32	s20, s20, s18
   10d40:	vmul.f32	s22, s22, s27
   10d44:	vmul.f32	s16, s16, s27
   10d48:	vcmpe.f32	s23, #0.0
   10d4c:	vmrs	APSR_nzcv, fpscr
   10d50:	ble	11340 <pclose@plt+0x9fc>
   10d54:	vsub.f32	s21, s21, s23
   10d58:	vldr	s23, [pc, #848]	; 110b0 <pclose@plt+0x76c>
   10d5c:	vcmpe.f32	s19, #0.0
   10d60:	vmrs	APSR_nzcv, fpscr
   10d64:	ble	1132c <pclose@plt+0x9e8>
   10d68:	vsub.f32	s22, s22, s19
   10d6c:	vldr	s19, [pc, #828]	; 110b0 <pclose@plt+0x76c>
   10d70:	vcmpe.f32	s20, #0.0
   10d74:	vmrs	APSR_nzcv, fpscr
   10d78:	ble	11318 <pclose@plt+0x9d4>
   10d7c:	vsub.f32	s16, s16, s20
   10d80:	vldr	s20, [pc, #808]	; 110b0 <pclose@plt+0x76c>
   10d84:	vldr	s14, [pc, #464]	; 10f5c <pclose@plt+0x618>
   10d88:	ldr	r3, [pc, #656]	; 11020 <pclose@plt+0x6dc>
   10d8c:	mvn	r2, #0
   10d90:	mov	r1, #1
   10d94:	vmul.f32	s12, s18, s14
   10d98:	vmul.f32	s6, s16, s14
   10d9c:	vmul.f32	s8, s22, s14
   10da0:	vmul.f32	s10, s20, s14
   10da4:	vmul.f32	s2, s19, s14
   10da8:	vmul.f32	s1, s21, s14
   10dac:	vmul.f32	s3, s23, s14
   10db0:	vmul.f32	s15, s24, s14
   10db4:	vcvt.f64.f32	d6, s12
   10db8:	vmul.f32	s4, s27, s14
   10dbc:	vcvt.f64.f32	d3, s6
   10dc0:	vcvt.f64.f32	d4, s8
   10dc4:	vcvt.f64.f32	d5, s10
   10dc8:	vmul.f32	s14, s17, s14
   10dcc:	mov	r0, r7
   10dd0:	vstr	d6, [sp, #48]	; 0x30
   10dd4:	vcvt.f64.f32	d2, s4
   10dd8:	vstr	d6, [sp, #16]
   10ddc:	vstr	d3, [sp, #72]	; 0x48
   10de0:	vcvt.f64.f32	d6, s2
   10de4:	vcvt.f64.f32	d3, s15
   10de8:	vstr	d4, [sp, #64]	; 0x40
   10dec:	vcvt.f64.f32	d7, s14
   10df0:	vcvt.f64.f32	d4, s1
   10df4:	vstr	d5, [sp, #56]	; 0x38
   10df8:	vcvt.f64.f32	d5, s3
   10dfc:	vstr	d2, [sp, #80]	; 0x50
   10e00:	vstr	d6, [sp, #32]
   10e04:	vstr	d3, [sp, #8]
   10e08:	vstr	d7, [sp]
   10e0c:	vstr	d4, [sp, #40]	; 0x28
   10e10:	vstr	d5, [sp, #24]
   10e14:	bl	108d8 <__sprintf_chk@plt>
   10e18:	vcvt.f64.f32	d7, s18
   10e1c:	vcvt.f64.f32	d1, s19
   10e20:	vcvt.f64.f32	d5, s27
   10e24:	vcvt.f64.f32	d4, s16
   10e28:	vcvt.f64.f32	d3, s22
   10e2c:	vcvt.f64.f32	d6, s20
   10e30:	vcvt.f64.f32	d2, s21
   10e34:	vcvt.f64.f32	d0, s23
   10e38:	vstr	d7, [sp, #56]	; 0x38
   10e3c:	vstr	d7, [sp, #24]
   10e40:	vcvt.f64.f32	d9, s24
   10e44:	vcvt.f64.f32	d7, s17
   10e48:	ldrb	r1, [sp, #356]	; 0x164
   10e4c:	ldrb	r2, [sp, #612]	; 0x264
   10e50:	ldr	r3, [pc, #460]	; 11024 <pclose@plt+0x6e0>
   10e54:	cmp	r1, #0
   10e58:	moveq	r9, r3
   10e5c:	cmp	r2, #0
   10e60:	moveq	r6, r3
   10e64:	add	r0, sp, #1376	; 0x560
   10e68:	vstr	d1, [sp, #40]	; 0x28
   10e6c:	vstr	d5, [sp, #88]	; 0x58
   10e70:	vstr	d4, [sp, #80]	; 0x50
   10e74:	vstr	d3, [sp, #72]	; 0x48
   10e78:	vstr	d6, [sp, #64]	; 0x40
   10e7c:	vstr	d2, [sp, #48]	; 0x30
   10e80:	vstr	d7, [sp, #8]
   10e84:	vstr	d0, [sp, #32]
   10e88:	ldr	r3, [pc, #408]	; 11028 <pclose@plt+0x6e4>
   10e8c:	mov	r2, #1024	; 0x400
   10e90:	mov	r1, #1
   10e94:	str	r9, [sp]
   10e98:	str	r6, [sp, #4]
   10e9c:	vstr	d9, [sp, #16]
   10ea0:	add	r0, r0, #4
   10ea4:	bl	108d8 <__sprintf_chk@plt>
   10ea8:	ldr	r0, [pc, #428]	; 1105c <pclose@plt+0x718>
   10eac:	bl	10884 <puts@plt>
   10eb0:	ldr	r0, [pc, #296]	; 10fe0 <pclose@plt+0x69c>
   10eb4:	bl	10884 <puts@plt>
   10eb8:	ldr	r0, [pc, #364]	; 1102c <pclose@plt+0x6e8>
   10ebc:	bl	10884 <puts@plt>
   10ec0:	ldr	r0, [pc, #404]	; 1105c <pclose@plt+0x718>
   10ec4:	bl	10884 <puts@plt>
   10ec8:	add	r1, sp, #1120	; 0x460
   10ecc:	add	r1, r1, #4
   10ed0:	ldr	r0, [pc, #344]	; 11030 <pclose@plt+0x6ec>
   10ed4:	bl	11628 <pclose@plt+0xce4>
   10ed8:	ldr	r0, [pc, #340]	; 11034 <pclose@plt+0x6f0>
   10edc:	bl	10884 <puts@plt>
   10ee0:	ldr	r1, [pc, #424]	; 11090 <pclose@plt+0x74c>
   10ee4:	mov	r0, r5
   10ee8:	bl	10914 <popen@plt>
   10eec:	mov	r4, r0
   10ef0:	bl	119b4 <pclose@plt+0x1070>
   10ef4:	add	r1, sp, #1376	; 0x560
   10ef8:	vmov.f32	s2, s28
   10efc:	vmov.f32	s1, s26
   10f00:	vmov.f32	s0, s25
   10f04:	mov	r0, r4
   10f08:	add	r1, r1, #4
   10f0c:	bl	123b8 <pclose@plt+0x1a74>
   10f10:	mov	r3, r4
   10f14:	mov	r2, #9
   10f18:	mov	r1, #1
   10f1c:	ldr	r0, [pc, #368]	; 11094 <pclose@plt+0x750>
   10f20:	bl	1086c <fwrite@plt>
   10f24:	mov	r0, r4
   10f28:	bl	10944 <pclose@plt>
   10f2c:	ldr	r0, [pc, #260]	; 11038 <pclose@plt+0x6f4>
   10f30:	bl	10884 <puts@plt>
   10f34:	ldr	r0, [pc, #288]	; 1105c <pclose@plt+0x718>
   10f38:	bl	10884 <puts@plt>
   10f3c:	b	110b4 <pclose@plt+0x770>
   10f40:	svccc	0x00800000
   10f44:	cdpcc	0, 8, cr0, cr0, cr0, {0}
   10f48:	andmi	r0, r0, r0
   10f4c:	svccc	0x00000000
   10f50:	addmi	r0, r0, r0
   10f54:	cdplt	12, 12, cr12, cr12, cr13, {6}
   10f58:	mrccc	3, 5, r3, cr3, cr3, {1}
   10f5c:	ldrbtmi	r0, [sl], #-0
   10f60:	andeq	r4, r2, r8, ror lr
   10f64:	andeq	r3, r1, r4, lsl #5
   10f68:	andeq	r3, r1, r8, lsr #5
   10f6c:	andeq	r3, r1, ip, ror #5
   10f70:	andeq	r3, r1, r0, lsr r3
   10f74:	andeq	r3, r1, r4, ror #6
   10f78:	andeq	r3, r1, r8, lsr #7
   10f7c:			; <UNDEFINED> instruction: 0x000133b0
   10f80:	ldrdeq	r3, [r1], -ip
   10f84:	andeq	r3, r1, ip, lsl r4
   10f88:	andeq	r3, r1, ip, lsr #8
   10f8c:	andeq	r3, r1, ip, ror #8
   10f90:	andeq	r3, r1, ip, lsr #9
   10f94:	strdeq	r3, [r1], -r0
   10f98:	andeq	r3, r1, r4, lsl #10
   10f9c:	andeq	r3, r1, ip, lsl r5
   10fa0:	andeq	r3, r1, r4, lsr r5
   10fa4:	andeq	r3, r1, ip, asr #10
   10fa8:	andeq	r3, r1, r8, lsl #11
   10fac:			; <UNDEFINED> instruction: 0x000135b0
   10fb0:	andeq	r3, r1, ip, asr #12
   10fb4:	muleq	r1, r4, r6
   10fb8:	ldrdeq	r3, [r1], -r8
   10fbc:	andeq	r3, r1, ip, lsl r7
   10fc0:	andeq	r3, r1, r0, lsr r7
   10fc4:	andeq	r3, r1, r0, asr #14
   10fc8:	andeq	r3, r1, r8, lsl #15
   10fcc:	andeq	r3, r1, ip, asr #15
   10fd0:	andeq	r3, r1, r4, lsl r8
   10fd4:	andeq	r3, r1, r0, lsr #16
   10fd8:	andeq	r3, r1, r0, lsr r8
   10fdc:	andeq	r3, r1, r4, ror r8
   10fe0:	andeq	r3, r1, r4, lsl #17
   10fe4:	andeq	r3, r1, r8, asr #17
   10fe8:	strdeq	r3, [r1], -r0
   10fec:	andeq	r3, r1, ip, ror #18
   10ff0:			; <UNDEFINED> instruction: 0x000139b0
   10ff4:	strdeq	r3, [r1], -r4
   10ff8:	andeq	r3, r1, ip, lsl #23
   10ffc:	andeq	r3, r1, r8, lsr sl
   11000:	andeq	r3, r1, r0, asr #20
   11004:	andeq	r3, r1, r8, ror #20
   11008:	strdeq	r3, [r1], -r8
   1100c:	andeq	r3, r1, ip, lsr fp
   11010:	andeq	r3, r1, r0, lsl #23
   11014:			; <UNDEFINED> instruction: 0x00013bb0
   11018:			; <UNDEFINED> instruction: 0x00013bbc
   1101c:	andeq	r3, r1, ip, asr #23
   11020:	ldrdeq	r3, [r1], -r8
   11024:	andeq	r3, r1, r0, lsl #5
   11028:	andeq	r3, r1, r0, lsl ip
   1102c:	andeq	r3, r1, r8, ror #24
   11030:	muleq	r1, r8, ip
   11034:			; <UNDEFINED> instruction: 0x00013cb4
   11038:	andeq	r3, r1, ip, ror #25
   1103c:	andeq	r3, r1, r8, lsl #26
   11040:	andeq	r3, r1, r8, lsr sp
   11044:	andeq	r3, r1, r0, asr #26
   11048:	andeq	r3, r1, r8, lsl #27
   1104c:	andeq	r3, r1, r8, asr #27
   11050:	ldrdeq	r3, [r1], -ip
   11054:	andeq	r3, r1, r4, lsl #28
   11058:	andeq	r3, r1, r0, lsr #28
   1105c:	andeq	r3, r1, r4, asr #3
   11060:	andeq	r3, r1, r8, asr #29
   11064:	andeq	r3, r1, r8, ror r5
   11068:	ldrdeq	r3, [r1], -ip
   1106c:	andeq	r3, r1, r4, lsl #30
   11070:	andeq	r5, r2, r8
   11074:	andeq	r3, r1, r4, ror #28
   11078:	ldrdeq	r2, [r1], -r8
   1107c:	muleq	r1, r8, sl
   11080:	ldrdeq	r3, [r1], -ip
   11084:	andeq	r3, r1, r0, lsr #18
   11088:	andeq	r3, r1, r0, asr r9
   1108c:	andeq	r3, r1, r0, ror #11
   11090:	andeq	r3, r1, r0, lsr #12
   11094:	andeq	r3, r1, r4, lsr #12
   11098:	andeq	r3, r1, r0, lsr r6
   1109c:	andeq	r3, r1, ip, ror #10
   110a0:	andeq	r3, r1, ip, asr r5
   110a4:	andeq	r3, r1, r4, asr r5
   110a8:	ldrdeq	r3, [r1], -r4
   110ac:	andeq	r3, r1, r8, lsr #29
   110b0:	andeq	r0, r0, r0
   110b4:	ldr	r0, [pc, #-128]	; 1103c <pclose@plt+0x6f8>
   110b8:	bl	10884 <puts@plt>
   110bc:	ldr	r0, [pc, #-104]	; 1105c <pclose@plt+0x718>
   110c0:	bl	10884 <puts@plt>
   110c4:	add	r2, sp, #1376	; 0x560
   110c8:	add	r2, r2, #4
   110cc:	ldr	r1, [pc, #-148]	; 11040 <pclose@plt+0x6fc>
   110d0:	mov	r0, #1
   110d4:	bl	108f0 <__printf_chk@plt>
   110d8:	ldr	r0, [pc, #-132]	; 1105c <pclose@plt+0x718>
   110dc:	bl	10884 <puts@plt>
   110e0:	ldr	r0, [pc, #-164]	; 11044 <pclose@plt+0x700>
   110e4:	bl	10884 <puts@plt>
   110e8:	ldr	r0, [pc, #-168]	; 11048 <pclose@plt+0x704>
   110ec:	bl	10884 <puts@plt>
   110f0:	ldr	r0, [pc, #-156]	; 1105c <pclose@plt+0x718>
   110f4:	bl	10884 <puts@plt>
   110f8:	mov	r2, r7
   110fc:	ldr	r1, [pc, #-184]	; 1104c <pclose@plt+0x708>
   11100:	mov	r0, #1
   11104:	bl	108f0 <__printf_chk@plt>
   11108:	ldr	r0, [pc, #-180]	; 1105c <pclose@plt+0x718>
   1110c:	bl	10884 <puts@plt>
   11110:	ldr	r0, [pc, #-200]	; 11050 <pclose@plt+0x70c>
   11114:	bl	10884 <puts@plt>
   11118:	ldr	r0, [pc, #-196]	; 1105c <pclose@plt+0x718>
   1111c:	bl	10884 <puts@plt>
   11120:	ldr	r0, [pc, #-212]	; 11054 <pclose@plt+0x710>
   11124:	bl	10884 <puts@plt>
   11128:	ldr	r0, [pc, #-212]	; 1105c <pclose@plt+0x718>
   1112c:	bl	10884 <puts@plt>
   11130:	bl	1083c <getuid@plt>
   11134:	mov	r4, r0
   11138:	bl	108a8 <__ctype_tolower_loc@plt>
   1113c:	cmp	r4, #0
   11140:	mov	r5, r0
   11144:	bne	11294 <pclose@plt+0x950>
   11148:	ldr	r6, [pc, #-224]	; 11070 <pclose@plt+0x72c>
   1114c:	ldr	sl, [pc, #-252]	; 11058 <pclose@plt+0x714>
   11150:	ldr	r9, [pc, #-224]	; 11078 <pclose@plt+0x734>
   11154:	add	r4, sp, #868	; 0x364
   11158:	mov	r2, sl
   1115c:	mov	r1, r9
   11160:	mov	r0, #1
   11164:	bl	108f0 <__printf_chk@plt>
   11168:	ldr	r2, [r6]
   1116c:	mov	r1, #255	; 0xff
   11170:	mov	r0, r4
   11174:	bl	10848 <fgets@plt>
   11178:	ldrb	r3, [sp, #868]	; 0x364
   1117c:	cmp	r0, #0
   11180:	beq	111ac <pclose@plt+0x868>
   11184:	cmp	r3, #0
   11188:	beq	111ac <pclose@plt+0x868>
   1118c:	mov	r0, r4
   11190:	bl	108cc <strlen@plt>
   11194:	add	r2, sp, #4416	; 0x1140
   11198:	add	r2, r2, #40	; 0x28
   1119c:	mov	r3, #0
   111a0:	add	r0, r2, r0
   111a4:	strb	r3, [r0, #-3589]	; 0xfffff1fb
   111a8:	ldrb	r3, [sp, #868]	; 0x364
   111ac:	ldr	r2, [r5]
   111b0:	ldr	r2, [r2, r3, lsl #2]
   111b4:	cmp	r2, #110	; 0x6e
   111b8:	cmpne	r2, #121	; 0x79
   111bc:	bne	11158 <pclose@plt+0x814>
   111c0:	cmp	r3, #110	; 0x6e
   111c4:	beq	112a4 <pclose@plt+0x960>
   111c8:	ldr	r0, [pc, #-372]	; 1105c <pclose@plt+0x718>
   111cc:	bl	10884 <puts@plt>
   111d0:	ldrb	r2, [sp, #868]	; 0x364
   111d4:	ldr	r3, [r5]
   111d8:	ldr	r3, [r3, r2, lsl #2]
   111dc:	cmp	r3, #110	; 0x6e
   111e0:	beq	11524 <pclose@plt+0xbe0>
   111e4:	ldr	r3, [pc, #-396]	; 11060 <pclose@plt+0x71c>
   111e8:	ldrb	ip, [sp, #100]	; 0x64
   111ec:	ldm	r3, {r0, r1, r2}
   111f0:	add	r3, sp, #3424	; 0xd60
   111f4:	add	r3, r3, #8
   111f8:	sub	r4, r3, #4
   111fc:	mov	r3, r4
   11200:	cmp	ip, #0
   11204:	stmia	r3!, {r0, r1}
   11208:	strh	r2, [r3]
   1120c:	bne	114fc <pclose@plt+0xbb8>
   11210:	mov	r0, r4
   11214:	bl	108cc <strlen@plt>
   11218:	ldr	r3, [pc, #-444]	; 11064 <pclose@plt+0x720>
   1121c:	add	lr, r4, r0
   11220:	mov	r5, r0
   11224:	ldm	r3!, {r0, r1, r2}
   11228:	mov	ip, lr
   1122c:	ldrb	r3, [r3]
   11230:	str	r0, [r4, r5]
   11234:	str	r1, [lr, #4]
   11238:	str	r2, [lr, #8]
   1123c:	mov	r1, r7
   11240:	strb	r3, [ip, #12]!
   11244:	mov	r2, #1024	; 0x400
   11248:	mov	r0, ip
   1124c:	bl	10878 <__strcpy_chk@plt>
   11250:	mov	r0, r4
   11254:	bl	1089c <system@plt>
   11258:	cmp	r0, #0
   1125c:	ldreq	r0, [pc, #-508]	; 11068 <pclose@plt+0x724>
   11260:	ldrne	r0, [pc, #-508]	; 1106c <pclose@plt+0x728>
   11264:	bl	10884 <puts@plt>
   11268:	add	r3, sp, #4416	; 0x1140
   1126c:	add	r3, r3, #36	; 0x24
   11270:	ldr	r2, [r3]
   11274:	ldr	r3, [r8]
   11278:	mov	r0, #0
   1127c:	cmp	r2, r3
   11280:	bne	11530 <pclose@plt+0xbec>
   11284:	add	sp, sp, #4416	; 0x1140
   11288:	add	sp, sp, #40	; 0x28
   1128c:	vpop	{d8-d14}
   11290:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11294:	ldr	r6, [pc, #-556]	; 11070 <pclose@plt+0x72c>
   11298:	add	r4, sp, #868	; 0x364
   1129c:	mov	r3, #110	; 0x6e
   112a0:	strb	r3, [sp, #868]	; 0x364
   112a4:	ldr	sl, [pc, #-568]	; 11074 <pclose@plt+0x730>
   112a8:	ldr	r9, [pc, #-568]	; 11078 <pclose@plt+0x734>
   112ac:	mov	r2, sl
   112b0:	mov	r1, r9
   112b4:	mov	r0, #1
   112b8:	bl	108f0 <__printf_chk@plt>
   112bc:	ldr	r2, [r6]
   112c0:	mov	r1, #255	; 0xff
   112c4:	mov	r0, r4
   112c8:	bl	10848 <fgets@plt>
   112cc:	ldrb	r3, [sp, #868]	; 0x364
   112d0:	cmp	r0, #0
   112d4:	beq	11300 <pclose@plt+0x9bc>
   112d8:	cmp	r3, #0
   112dc:	beq	11300 <pclose@plt+0x9bc>
   112e0:	mov	r0, r4
   112e4:	bl	108cc <strlen@plt>
   112e8:	add	r2, sp, #4416	; 0x1140
   112ec:	add	r2, r2, #40	; 0x28
   112f0:	mov	r3, #0
   112f4:	add	r0, r2, r0
   112f8:	strb	r3, [r0, #-3589]	; 0xfffff1fb
   112fc:	ldrb	r3, [sp, #868]	; 0x364
   11300:	ldr	r2, [r5]
   11304:	ldr	r3, [r2, r3, lsl #2]
   11308:	cmp	r3, #121	; 0x79
   1130c:	cmpne	r3, #110	; 0x6e
   11310:	bne	112ac <pclose@plt+0x968>
   11314:	b	111c8 <pclose@plt+0x884>
   11318:	vcmpe.f32	s16, #0.0
   1131c:	vmrs	APSR_nzcv, fpscr
   11320:	vsubgt.f32	s20, s20, s16
   11324:	vldrgt	s16, [pc, #-636]	; 110b0 <pclose@plt+0x76c>
   11328:	b	10d84 <pclose@plt+0x440>
   1132c:	vcmpe.f32	s22, #0.0
   11330:	vmrs	APSR_nzcv, fpscr
   11334:	vsubgt.f32	s19, s19, s22
   11338:	vldrgt	s22, [pc, #-656]	; 110b0 <pclose@plt+0x76c>
   1133c:	b	10d70 <pclose@plt+0x42c>
   11340:	vcmpe.f32	s21, #0.0
   11344:	vmrs	APSR_nzcv, fpscr
   11348:	vsubgt.f32	s23, s23, s21
   1134c:	vldrgt	s21, [pc, #-676]	; 110b0 <pclose@plt+0x76c>
   11350:	b	10d5c <pclose@plt+0x418>
   11354:	ldr	r0, [pc, #-736]	; 1107c <pclose@plt+0x738>
   11358:	bl	10884 <puts@plt>
   1135c:	ldr	r1, [pc, #-724]	; 11090 <pclose@plt+0x74c>
   11360:	mov	r0, r5
   11364:	bl	10914 <popen@plt>
   11368:	mov	r4, r0
   1136c:	bl	119b4 <pclose@plt+0x1070>
   11370:	vmov.f32	s3, s19
   11374:	vmov.f32	s2, s24
   11378:	vmov.f32	s1, s16
   1137c:	vmov.f32	s0, s17
   11380:	mov	r0, r4
   11384:	bl	11f24 <pclose@plt+0x15e0>
   11388:	mov	r3, r4
   1138c:	mov	r2, #9
   11390:	mov	r1, #1
   11394:	ldr	r0, [pc, #-776]	; 11094 <pclose@plt+0x750>
   11398:	bl	1086c <fwrite@plt>
   1139c:	mov	r0, r4
   113a0:	bl	10944 <pclose@plt>
   113a4:	ldr	r0, [pc, #-812]	; 11080 <pclose@plt+0x73c>
   113a8:	bl	10884 <puts@plt>
   113ac:	b	10c9c <pclose@plt+0x358>
   113b0:	ldr	r0, [pc, #-820]	; 11084 <pclose@plt+0x740>
   113b4:	bl	10884 <puts@plt>
   113b8:	ldr	r1, [pc, #-816]	; 11090 <pclose@plt+0x74c>
   113bc:	mov	r0, r5
   113c0:	bl	10914 <popen@plt>
   113c4:	mov	r4, r0
   113c8:	bl	119b4 <pclose@plt+0x1070>
   113cc:	vmov.f32	s2, s19
   113d0:	vmov.f32	s1, s16
   113d4:	vmov.f32	s0, s17
   113d8:	mov	r0, r4
   113dc:	bl	11bf0 <pclose@plt+0x12ac>
   113e0:	mov	r3, r4
   113e4:	mov	r2, #9
   113e8:	mov	r1, #1
   113ec:	ldr	r0, [pc, #-864]	; 11094 <pclose@plt+0x750>
   113f0:	bl	1086c <fwrite@plt>
   113f4:	mov	r0, r4
   113f8:	bl	10944 <pclose@plt>
   113fc:	ldr	r0, [pc, #-892]	; 11088 <pclose@plt+0x744>
   11400:	bl	10884 <puts@plt>
   11404:	b	10c1c <pclose@plt+0x2d8>
   11408:	ldr	r0, [pc, #-900]	; 1108c <pclose@plt+0x748>
   1140c:	bl	10884 <puts@plt>
   11410:	ldr	r1, [pc, #-904]	; 11090 <pclose@plt+0x74c>
   11414:	mov	r0, r5
   11418:	bl	10914 <popen@plt>
   1141c:	mov	r4, r0
   11420:	bl	119b4 <pclose@plt+0x1070>
   11424:	mov	r0, r4
   11428:	bl	11a50 <pclose@plt+0x110c>
   1142c:	mov	r3, r4
   11430:	mov	r2, #9
   11434:	mov	r1, #1
   11438:	ldr	r0, [pc, #-940]	; 11094 <pclose@plt+0x750>
   1143c:	bl	1086c <fwrite@plt>
   11440:	mov	r0, r4
   11444:	bl	10944 <pclose@plt>
   11448:	ldr	r0, [pc, #-952]	; 11098 <pclose@plt+0x754>
   1144c:	bl	10884 <puts@plt>
   11450:	b	10b14 <pclose@plt+0x1d0>
   11454:	mov	r0, r5
   11458:	bl	108cc <strlen@plt>
   1145c:	ldr	r3, [pc, #-968]	; 1109c <pclose@plt+0x758>
   11460:	add	r2, r5, r0
   11464:	mov	lr, r0
   11468:	ldm	r3!, {r0, r1}
   1146c:	mov	ip, r2
   11470:	str	r0, [r5, lr]
   11474:	ldrh	r0, [r3]
   11478:	ldrb	r3, [r3, #2]
   1147c:	str	r1, [r2, #4]
   11480:	strh	r0, [r2, #8]
   11484:	mov	r1, r6
   11488:	strb	r3, [ip, #10]!
   1148c:	mov	r2, #1024	; 0x400
   11490:	mov	r0, ip
   11494:	bl	10878 <__strcpy_chk@plt>
   11498:	b	10a84 <pclose@plt+0x140>
   1149c:	sub	r5, r5, #4
   114a0:	mov	r0, r5
   114a4:	bl	108cc <strlen@plt>
   114a8:	ldr	ip, [pc, #-1040]	; 110a0 <pclose@plt+0x75c>
   114ac:	add	lr, r5, r0
   114b0:	mov	r4, r0
   114b4:	ldm	ip!, {r0, r1, r2, r3}
   114b8:	str	r0, [r5, r4]
   114bc:	str	r1, [lr, #4]
   114c0:	str	r2, [lr, #8]
   114c4:	add	r0, lr, #15
   114c8:	mov	r2, #1024	; 0x400
   114cc:	mov	r1, r9
   114d0:	str	r3, [lr, #12]
   114d4:	bl	10878 <__strcpy_chk@plt>
   114d8:	b	10a78 <pclose@plt+0x134>
   114dc:	ldr	r3, [pc, #-1088]	; 110a4 <pclose@plt+0x760>
   114e0:	mov	r2, #1024	; 0x400
   114e4:	add	r1, sp, #100	; 0x64
   114e8:	ldr	r0, [r3]
   114ec:	str	r0, [sp, #2409]	; 0x969
   114f0:	add	r0, r5, #5
   114f4:	bl	10878 <__strcpy_chk@plt>
   114f8:	b	10a64 <pclose@plt+0x120>
   114fc:	ldr	r3, [pc, #-1116]	; 110a8 <pclose@plt+0x764>
   11500:	add	r1, sp, #100	; 0x64
   11504:	mov	r2, #1024	; 0x400
   11508:	ldr	r0, [r3]
   1150c:	add	r3, sp, #3424	; 0xd60
   11510:	add	r3, r3, #8
   11514:	str	r0, [sp, #3437]	; 0xd6d
   11518:	add	r0, r3, #9
   1151c:	bl	10878 <__strcpy_chk@plt>
   11520:	b	11210 <pclose@plt+0x8cc>
   11524:	ldr	r0, [pc, #-1152]	; 110ac <pclose@plt+0x768>
   11528:	bl	10884 <puts@plt>
   1152c:	b	11268 <pclose@plt+0x924>
   11530:	bl	10860 <__stack_chk_fail@plt>
   11534:	mov	fp, #0
   11538:	mov	lr, #0
   1153c:	pop	{r1}		; (ldr r1, [sp], #4)
   11540:	mov	r2, sp
   11544:	push	{r2}		; (str r2, [sp, #-4]!)
   11548:	push	{r0}		; (str r0, [sp, #-4]!)
   1154c:	ldr	ip, [pc, #16]	; 11564 <pclose@plt+0xc20>
   11550:	push	{ip}		; (str ip, [sp, #-4]!)
   11554:	ldr	r0, [pc, #12]	; 11568 <pclose@plt+0xc24>
   11558:	ldr	r3, [pc, #12]	; 1156c <pclose@plt+0xc28>
   1155c:	bl	10890 <__libc_start_main@plt>
   11560:	bl	1092c <abort@plt>
   11564:	andeq	r2, r1, r8, asr #21
   11568:	andeq	r0, r1, r0, asr r9
   1156c:	andeq	r2, r1, r8, ror #20
   11570:	ldr	r3, [pc, #20]	; 1158c <pclose@plt+0xc48>
   11574:	ldr	r2, [pc, #20]	; 11590 <pclose@plt+0xc4c>
   11578:	add	r3, pc, r3
   1157c:	ldr	r2, [r3, r2]
   11580:	cmp	r2, #0
   11584:	bxeq	lr
   11588:	b	108b4 <__gmon_start__@plt>
   1158c:	andeq	r3, r1, r4, lsl #20
   11590:	andeq	r0, r0, r8, ror r0
   11594:	ldr	r0, [pc, #24]	; 115b4 <pclose@plt+0xc70>
   11598:	ldr	r3, [pc, #24]	; 115b8 <pclose@plt+0xc74>
   1159c:	cmp	r3, r0
   115a0:	bxeq	lr
   115a4:	ldr	r3, [pc, #16]	; 115bc <pclose@plt+0xc78>
   115a8:	cmp	r3, #0
   115ac:	bxeq	lr
   115b0:	bx	r3
   115b4:	andeq	r5, r2, r8
   115b8:	andeq	r5, r2, r8
   115bc:	andeq	r0, r0, r0
   115c0:	ldr	r0, [pc, #36]	; 115ec <pclose@plt+0xca8>
   115c4:	ldr	r1, [pc, #36]	; 115f0 <pclose@plt+0xcac>
   115c8:	sub	r1, r1, r0
   115cc:	asr	r1, r1, #2
   115d0:	add	r1, r1, r1, lsr #31
   115d4:	asrs	r1, r1, #1
   115d8:	bxeq	lr
   115dc:	ldr	r3, [pc, #16]	; 115f4 <pclose@plt+0xcb0>
   115e0:	cmp	r3, #0
   115e4:	bxeq	lr
   115e8:	bx	r3
   115ec:	andeq	r5, r2, r8
   115f0:	andeq	r5, r2, r8
   115f4:	andeq	r0, r0, r0
   115f8:	push	{r4, lr}
   115fc:	ldr	r4, [pc, #24]	; 1161c <pclose@plt+0xcd8>
   11600:	ldrb	r3, [r4]
   11604:	cmp	r3, #0
   11608:	popne	{r4, pc}
   1160c:	bl	11594 <pclose@plt+0xc50>
   11610:	mov	r3, #1
   11614:	strb	r3, [r4]
   11618:	pop	{r4, pc}
   1161c:	andeq	r5, r2, r0, lsl r0
   11620:	b	115c0 <pclose@plt+0xc7c>
   11624:	andeq	r0, r0, r0
   11628:	push	{r4, lr}
   1162c:	mov	r2, r0
   11630:	mov	r4, r1
   11634:	mov	r0, #1
   11638:	ldr	r1, [pc, #76]	; 1168c <pclose@plt+0xd48>
   1163c:	bl	108f0 <__printf_chk@plt>
   11640:	ldr	r3, [pc, #72]	; 11690 <pclose@plt+0xd4c>
   11644:	mov	r0, r4
   11648:	mov	r1, #255	; 0xff
   1164c:	ldr	r2, [r3]
   11650:	bl	10848 <fgets@plt>
   11654:	cmp	r0, #0
   11658:	beq	11684 <pclose@plt+0xd40>
   1165c:	ldrb	r3, [r4]
   11660:	cmp	r3, #0
   11664:	beq	1167c <pclose@plt+0xd38>
   11668:	mov	r0, r4
   1166c:	bl	108cc <strlen@plt>
   11670:	mov	r3, #0
   11674:	add	r0, r4, r0
   11678:	strb	r3, [r0, #-1]
   1167c:	mov	r0, r4
   11680:	pop	{r4, pc}
   11684:	mov	r4, r0
   11688:	b	1167c <pclose@plt+0xd38>
   1168c:	ldrdeq	r2, [r1], -r8
   11690:	andeq	r5, r2, r8
   11694:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11698:	vpush	{d8}
   1169c:	ldr	r7, [pc, #316]	; 117e0 <pclose@plt+0xe9c>
   116a0:	vmov.f32	s16, s0
   116a4:	vmov.f32	s17, s1
   116a8:	ldr	sl, [pc, #308]	; 117e4 <pclose@plt+0xea0>
   116ac:	ldr	r9, [pc, #308]	; 117e8 <pclose@plt+0xea4>
   116b0:	sub	sp, sp, #12
   116b4:	ldr	r3, [r7]
   116b8:	mov	r8, r0
   116bc:	str	r3, [sp, #4]
   116c0:	mov	r2, r8
   116c4:	mov	r1, r9
   116c8:	mov	r0, #1
   116cc:	bl	108f0 <__printf_chk@plt>
   116d0:	ldr	r2, [sl]
   116d4:	mov	r1, #4
   116d8:	mov	r0, sp
   116dc:	bl	10848 <fgets@plt>
   116e0:	cmp	r0, #0
   116e4:	beq	117b8 <pclose@plt+0xe74>
   116e8:	ldrb	r4, [sp]
   116ec:	cmp	r4, #0
   116f0:	beq	11710 <pclose@plt+0xdcc>
   116f4:	mov	r0, sp
   116f8:	bl	108cc <strlen@plt>
   116fc:	add	r2, sp, #8
   11700:	mov	r3, #0
   11704:	add	r0, r2, r0
   11708:	strb	r3, [r0, #-9]
   1170c:	ldrb	r4, [sp]
   11710:	bl	108c0 <__ctype_b_loc@plt>
   11714:	sxth	r6, r4
   11718:	lsl	r3, r6, #1
   1171c:	ldr	r5, [r0]
   11720:	ldrh	r3, [r5, r3]
   11724:	tst	r3, #4096	; 0x1000
   11728:	beq	116c0 <pclose@plt+0xd7c>
   1172c:	ldrb	fp, [sp, #1]
   11730:	cmp	fp, #0
   11734:	beq	11748 <pclose@plt+0xe04>
   11738:	lsl	r2, fp, #1
   1173c:	ldrh	r2, [r5, r2]
   11740:	tst	r2, #4096	; 0x1000
   11744:	beq	116c0 <pclose@plt+0xd7c>
   11748:	tst	r3, #2048	; 0x800
   1174c:	subne	r4, r4, #48	; 0x30
   11750:	bne	11764 <pclose@plt+0xe20>
   11754:	bl	108a8 <__ctype_tolower_loc@plt>
   11758:	ldr	r3, [r0]
   1175c:	ldr	r4, [r3, r6, lsl #2]
   11760:	sub	r4, r4, #87	; 0x57
   11764:	cmp	fp, #0
   11768:	moveq	fp, r4
   1176c:	beq	11798 <pclose@plt+0xe54>
   11770:	sxth	r6, fp
   11774:	lsl	r3, r6, #1
   11778:	ldrh	r3, [r5, r3]
   1177c:	tst	r3, #2048	; 0x800
   11780:	subne	fp, fp, #48	; 0x30
   11784:	bne	11798 <pclose@plt+0xe54>
   11788:	bl	108a8 <__ctype_tolower_loc@plt>
   1178c:	ldr	r3, [r0]
   11790:	ldr	fp, [r3, r6, lsl #2]
   11794:	sub	fp, fp, #87	; 0x57
   11798:	add	r4, r4, fp
   1179c:	vsub.f32	s17, s17, s16
   117a0:	vmov	s15, r4
   117a4:	vldr	s13, [pc, #48]	; 117dc <pclose@plt+0xe98>
   117a8:	vcvt.f32.s32	s15, s15
   117ac:	vmul.f32	s15, s15, s17
   117b0:	vdiv.f32	s14, s15, s13
   117b4:	vadd.f32	s16, s16, s14
   117b8:	ldr	r2, [sp, #4]
   117bc:	ldr	r3, [r7]
   117c0:	vmov.f32	s0, s16
   117c4:	cmp	r2, r3
   117c8:	bne	117d8 <pclose@plt+0xe94>
   117cc:	add	sp, sp, #12
   117d0:	vpop	{d8}
   117d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117d8:	bl	10860 <__stack_chk_fail@plt>
   117dc:	mvnsmi	r0, r0
   117e0:	andeq	r4, r2, r8, ror lr
   117e4:	andeq	r5, r2, r8
   117e8:	ldrdeq	r2, [r1], -r8
   117ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117f0:	subs	r4, r1, #0
   117f4:	ldr	r9, [pc, #316]	; 11938 <pclose@plt+0xff4>
   117f8:	sub	sp, sp, #264	; 0x108
   117fc:	ldr	r6, [pc, #312]	; 1193c <pclose@plt+0xff8>
   11800:	ldr	r3, [r9]
   11804:	mov	r7, r0
   11808:	str	r3, [sp, #260]	; 0x104
   1180c:	addne	r5, sp, #4
   11810:	ldrne	sl, [pc, #296]	; 11940 <pclose@plt+0xffc>
   11814:	bne	118a4 <pclose@plt+0xf60>
   11818:	ldr	r8, [pc, #288]	; 11940 <pclose@plt+0xffc>
   1181c:	add	r5, sp, #4
   11820:	mov	r2, r7
   11824:	mov	r1, r8
   11828:	mov	r0, #1
   1182c:	bl	108f0 <__printf_chk@plt>
   11830:	ldr	r2, [r6]
   11834:	mov	r1, #255	; 0xff
   11838:	mov	r0, r5
   1183c:	bl	10848 <fgets@plt>
   11840:	cmp	r0, #0
   11844:	beq	1186c <pclose@plt+0xf28>
   11848:	ldrb	r3, [sp, #4]
   1184c:	cmp	r3, #0
   11850:	beq	11820 <pclose@plt+0xedc>
   11854:	mov	r0, r5
   11858:	bl	108cc <strlen@plt>
   1185c:	add	r2, sp, #264	; 0x108
   11860:	mov	r3, #0
   11864:	add	r0, r2, r0
   11868:	strb	r3, [r0, #-261]	; 0xfffffefb
   1186c:	ldrb	r4, [sp, #4]
   11870:	cmp	r4, #0
   11874:	beq	11820 <pclose@plt+0xedc>
   11878:	bl	108c0 <__ctype_b_loc@plt>
   1187c:	lsl	r4, r4, #1
   11880:	ldr	r3, [r0]
   11884:	ldrh	r3, [r3, r4]
   11888:	tst	r3, #2048	; 0x800
   1188c:	beq	11820 <pclose@plt+0xedc>
   11890:	mov	r0, r5
   11894:	mov	r2, #10
   11898:	mov	r1, #0
   1189c:	bl	10818 <strtol@plt>
   118a0:	b	1191c <pclose@plt+0xfd8>
   118a4:	mov	r2, r7
   118a8:	mov	r1, sl
   118ac:	mov	r0, #1
   118b0:	bl	108f0 <__printf_chk@plt>
   118b4:	ldr	r2, [r6]
   118b8:	mov	r1, #255	; 0xff
   118bc:	mov	r0, r5
   118c0:	bl	10848 <fgets@plt>
   118c4:	cmp	r0, #0
   118c8:	beq	118f0 <pclose@plt+0xfac>
   118cc:	ldrb	r3, [sp, #4]
   118d0:	cmp	r3, #0
   118d4:	beq	11918 <pclose@plt+0xfd4>
   118d8:	mov	r0, r5
   118dc:	bl	108cc <strlen@plt>
   118e0:	add	r2, sp, #264	; 0x108
   118e4:	mov	r3, #0
   118e8:	add	r0, r2, r0
   118ec:	strb	r3, [r0, #-261]	; 0xfffffefb
   118f0:	ldrb	r8, [sp, #4]
   118f4:	cmp	r8, #0
   118f8:	beq	11918 <pclose@plt+0xfd4>
   118fc:	bl	108c0 <__ctype_b_loc@plt>
   11900:	lsl	r8, r8, #1
   11904:	ldr	r3, [r0]
   11908:	ldrh	r3, [r3, r8]
   1190c:	tst	r3, #2048	; 0x800
   11910:	beq	118a4 <pclose@plt+0xf60>
   11914:	b	11890 <pclose@plt+0xf4c>
   11918:	mov	r0, r4
   1191c:	ldr	r2, [sp, #260]	; 0x104
   11920:	ldr	r3, [r9]
   11924:	cmp	r2, r3
   11928:	bne	11934 <pclose@plt+0xff0>
   1192c:	add	sp, sp, #264	; 0x108
   11930:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11934:	bl	10860 <__stack_chk_fail@plt>
   11938:	andeq	r4, r2, r8, ror lr
   1193c:	andeq	r5, r2, r8
   11940:	ldrdeq	r2, [r1], -r8
   11944:	push	{r4, r5, r6, lr}
   11948:	mov	r5, r2
   1194c:	mov	r4, r1
   11950:	mov	r2, r0
   11954:	ldr	r1, [pc, #80]	; 119ac <pclose@plt+0x1068>
   11958:	mov	r0, #1
   1195c:	bl	108f0 <__printf_chk@plt>
   11960:	ldr	r3, [pc, #72]	; 119b0 <pclose@plt+0x106c>
   11964:	mov	r1, r5
   11968:	mov	r0, r4
   1196c:	ldr	r2, [r3]
   11970:	bl	10848 <fgets@plt>
   11974:	cmp	r0, #0
   11978:	beq	119a4 <pclose@plt+0x1060>
   1197c:	ldrb	r3, [r4]
   11980:	cmp	r3, #0
   11984:	beq	1199c <pclose@plt+0x1058>
   11988:	mov	r0, r4
   1198c:	bl	108cc <strlen@plt>
   11990:	mov	r3, #0
   11994:	add	r0, r4, r0
   11998:	strb	r3, [r0, #-1]
   1199c:	mov	r0, r4
   119a0:	pop	{r4, r5, r6, pc}
   119a4:	mov	r4, r0
   119a8:	b	1199c <pclose@plt+0x1058>
   119ac:	ldrdeq	r2, [r1], -r8
   119b0:	andeq	r5, r2, r8
   119b4:	push	{r4, lr}
   119b8:	mov	r3, r0
   119bc:	mov	r4, r0
   119c0:	mov	r2, #3
   119c4:	mov	r1, #1
   119c8:	ldr	r0, [pc, #104]	; 11a38 <pclose@plt+0x10f4>
   119cc:	bl	1086c <fwrite@plt>
   119d0:	mov	r3, r4
   119d4:	mov	r2, #41	; 0x29
   119d8:	mov	r1, #1
   119dc:	ldr	r0, [pc, #88]	; 11a3c <pclose@plt+0x10f8>
   119e0:	bl	1086c <fwrite@plt>
   119e4:	mov	r3, r4
   119e8:	mov	r2, #89	; 0x59
   119ec:	mov	r1, #1
   119f0:	ldr	r0, [pc, #72]	; 11a40 <pclose@plt+0x10fc>
   119f4:	bl	1086c <fwrite@plt>
   119f8:	mov	r3, r4
   119fc:	mov	r2, #194	; 0xc2
   11a00:	mov	r1, #1
   11a04:	ldr	r0, [pc, #56]	; 11a44 <pclose@plt+0x1100>
   11a08:	bl	1086c <fwrite@plt>
   11a0c:	mov	r3, r4
   11a10:	mov	r2, #161	; 0xa1
   11a14:	mov	r1, #1
   11a18:	ldr	r0, [pc, #40]	; 11a48 <pclose@plt+0x1104>
   11a1c:	bl	1086c <fwrite@plt>
   11a20:	mov	r3, r4
   11a24:	mov	r2, #139	; 0x8b
   11a28:	mov	r1, #1
   11a2c:	ldr	r0, [pc, #24]	; 11a4c <pclose@plt+0x1108>
   11a30:	pop	{r4, lr}
   11a34:	b	1086c <fwrite@plt>
   11a38:	ldrdeq	r2, [r1], -ip
   11a3c:	andeq	r2, r1, r0, ror #21
   11a40:	andeq	r2, r1, ip, lsl #22
   11a44:	andeq	r2, r1, r8, ror #22
   11a48:	andeq	r2, r1, ip, lsr #24
   11a4c:	ldrdeq	r2, [r1], -r0
   11a50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a54:	vpush	{d8-d10}
   11a58:	mov	r4, r0
   11a5c:	mov	r3, r0
   11a60:	mov	r2, #9
   11a64:	sub	sp, sp, #24
   11a68:	mov	r1, #1
   11a6c:	ldr	r0, [pc, #336]	; 11bc4 <pclose@plt+0x1280>
   11a70:	bl	1086c <fwrite@plt>
   11a74:	mov	r3, r4
   11a78:	mov	r2, #13
   11a7c:	mov	r1, #1
   11a80:	ldr	r0, [pc, #320]	; 11bc8 <pclose@plt+0x1284>
   11a84:	bl	1086c <fwrite@plt>
   11a88:	mov	r3, r4
   11a8c:	mov	r2, #13
   11a90:	mov	r1, #1
   11a94:	ldr	r0, [pc, #304]	; 11bcc <pclose@plt+0x1288>
   11a98:	bl	1086c <fwrite@plt>
   11a9c:	mov	r3, r4
   11aa0:	mov	r2, #13
   11aa4:	mov	r1, #1
   11aa8:	ldr	r0, [pc, #288]	; 11bd0 <pclose@plt+0x128c>
   11aac:	bl	1086c <fwrite@plt>
   11ab0:	ldr	r7, [pc, #284]	; 11bd4 <pclose@plt+0x1290>
   11ab4:	ldr	sl, [pc, #284]	; 11bd8 <pclose@plt+0x1294>
   11ab8:	ldr	r9, [pc, #284]	; 11bdc <pclose@plt+0x1298>
   11abc:	ldr	r8, [pc, #284]	; 11be0 <pclose@plt+0x129c>
   11ac0:	mov	r6, #2
   11ac4:	mov	r5, #100	; 0x64
   11ac8:	mov	r3, r5
   11acc:	str	r6, [sp]
   11ad0:	mov	r2, sl
   11ad4:	mov	r1, #1
   11ad8:	mov	r0, r4
   11adc:	bl	108fc <__fprintf_chk@plt>
   11ae0:	str	r6, [sp]
   11ae4:	mov	r2, r9
   11ae8:	ldrb	r3, [r7], #1
   11aec:	mov	r1, #1
   11af0:	mov	r0, r4
   11af4:	bl	108fc <__fprintf_chk@plt>
   11af8:	str	r6, [sp]
   11afc:	lsl	r3, r5, #1
   11b00:	mov	r2, r8
   11b04:	sub	r5, r5, #5
   11b08:	mov	r1, #1
   11b0c:	mov	r0, r4
   11b10:	bl	108fc <__fprintf_chk@plt>
   11b14:	cmp	r5, #20
   11b18:	add	r6, r6, #2
   11b1c:	bne	11ac8 <pclose@plt+0x1184>
   11b20:	vldr	s20, [pc, #152]	; 11bc0 <pclose@plt+0x127c>
   11b24:	vldr	d9, [pc, #140]	; 11bb8 <pclose@plt+0x1274>
   11b28:	ldr	r9, [pc, #180]	; 11be4 <pclose@plt+0x12a0>
   11b2c:	ldr	r8, [pc, #180]	; 11be8 <pclose@plt+0x12a4>
   11b30:	ldr	r7, [pc, #180]	; 11bec <pclose@plt+0x12a8>
   11b34:	mov	r5, #2
   11b38:	mov	r6, #100	; 0x64
   11b3c:	vmov	s15, r6
   11b40:	str	r5, [sp, #8]
   11b44:	mov	r2, r9
   11b48:	mov	r1, #1
   11b4c:	vcvt.f32.s32	s16, s15
   11b50:	mov	r0, r4
   11b54:	sub	r6, r6, #5
   11b58:	vmul.f32	s16, s16, s20
   11b5c:	vcvt.f64.f32	d8, s16
   11b60:	vsub.f64	d7, d9, d8
   11b64:	vstr	d7, [sp]
   11b68:	bl	108fc <__fprintf_chk@plt>
   11b6c:	str	r5, [sp, #8]
   11b70:	mov	r2, r8
   11b74:	mov	r1, #1
   11b78:	vstr	d8, [sp]
   11b7c:	mov	r0, r4
   11b80:	bl	108fc <__fprintf_chk@plt>
   11b84:	str	r5, [sp, #16]
   11b88:	vstr	d8, [sp, #8]
   11b8c:	vstr	d8, [sp]
   11b90:	mov	r2, r7
   11b94:	mov	r1, #1
   11b98:	mov	r0, r4
   11b9c:	bl	108fc <__fprintf_chk@plt>
   11ba0:	cmp	r6, #20
   11ba4:	add	r5, r5, #2
   11ba8:	bne	11b3c <pclose@plt+0x11f8>
   11bac:	add	sp, sp, #24
   11bb0:	vpop	{d8-d10}
   11bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bb8:	andeq	r0, r0, r0
   11bbc:	svccc	0x00f00000	; IMB
   11bc0:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   11bc4:	andeq	r2, r1, ip, asr sp
   11bc8:	andeq	r2, r1, r8, ror #26
   11bcc:	andeq	r2, r1, r8, ror sp
   11bd0:	andeq	r2, r1, r8, lsl #27
   11bd4:	muleq	r1, r8, sp
   11bd8:	andeq	r2, r1, ip, lsr #27
   11bdc:			; <UNDEFINED> instruction: 0x00012dbc
   11be0:	andeq	r2, r1, ip, asr #27
   11be4:	ldrdeq	r2, [r1], -ip
   11be8:	strdeq	r2, [r1], -r8
   11bec:	andeq	r2, r1, ip, lsl lr
   11bf0:	vcvt.f64.f32	d7, s2
   11bf4:	push	{r4, r5, r6, r7, r8, r9, lr}
   11bf8:	vpush	{d8-d13}
   11bfc:	vmov.f32	s22, s2
   11c00:	vldr	s16, [pc, #712]	; 11ed0 <pclose@plt+0x158c>
   11c04:	vldr	s17, [pc, #712]	; 11ed4 <pclose@plt+0x1590>
   11c08:	sub	sp, sp, #20
   11c0c:	ldr	r2, [pc, #724]	; 11ee8 <pclose@plt+0x15a4>
   11c10:	vstr	d7, [sp]
   11c14:	mov	r1, #1
   11c18:	vmul.f32	s17, s1, s17
   11c1c:	vmov.f32	s24, s0
   11c20:	mov	r4, r0
   11c24:	bl	108fc <__fprintf_chk@plt>
   11c28:	vsub.f32	s15, s16, s22
   11c2c:	vldr	s23, [pc, #676]	; 11ed8 <pclose@plt+0x1594>
   11c30:	vldr	s21, [pc, #676]	; 11edc <pclose@plt+0x1598>
   11c34:	vldr	s20, [pc, #676]	; 11ee0 <pclose@plt+0x159c>
   11c38:	ldr	r2, [pc, #684]	; 11eec <pclose@plt+0x15a8>
   11c3c:	mov	r1, #1
   11c40:	mov	r0, r4
   11c44:	vmul.f32	s15, s15, s23
   11c48:	vdiv.f32	s14, s15, s21
   11c4c:	vadd.f32	s14, s14, s20
   11c50:	vcvt.f64.f32	d7, s14
   11c54:	vstr	d7, [sp]
   11c58:	bl	108fc <__fprintf_chk@plt>
   11c5c:	vcvt.f64.f32	d7, s17
   11c60:	ldr	r2, [pc, #648]	; 11ef0 <pclose@plt+0x15ac>
   11c64:	mov	r1, #1
   11c68:	mov	r0, r4
   11c6c:	vstr	d7, [sp, #8]
   11c70:	vstr	d7, [sp]
   11c74:	bl	108fc <__fprintf_chk@plt>
   11c78:	vsub.f32	s15, s16, s17
   11c7c:	vcmp.f32	s17, s22
   11c80:	mov	r1, #1
   11c84:	ldr	r2, [pc, #616]	; 11ef4 <pclose@plt+0x15b0>
   11c88:	mov	r0, r4
   11c8c:	vmrs	APSR_nzcv, fpscr
   11c90:	vmul.f32	s15, s15, s23
   11c94:	movne	r3, r1
   11c98:	moveq	r3, #0
   11c9c:	vdiv.f32	s14, s15, s21
   11ca0:	vadd.f32	s14, s14, s20
   11ca4:	vcvt.f64.f32	d7, s14
   11ca8:	vstr	d7, [sp]
   11cac:	bl	108fc <__fprintf_chk@plt>
   11cb0:	vsub.f32	s16, s16, s24
   11cb4:	mov	r0, r4
   11cb8:	ldr	r2, [pc, #568]	; 11ef8 <pclose@plt+0x15b4>
   11cbc:	mov	r1, #1
   11cc0:	vcvt.f64.f32	d9, s16
   11cc4:	vstr	d9, [sp]
   11cc8:	bl	108fc <__fprintf_chk@plt>
   11ccc:	vcmp.f32	s17, s24
   11cd0:	vmul.f32	s16, s16, s23
   11cd4:	vmrs	APSR_nzcv, fpscr
   11cd8:	vcmp.f32	s22, s24
   11cdc:	movne	r3, #0
   11ce0:	moveq	r3, #1
   11ce4:	vmrs	APSR_nzcv, fpscr
   11ce8:	movne	r3, #0
   11cec:	cmp	r3, #0
   11cf0:	beq	11e80 <pclose@plt+0x153c>
   11cf4:	vdiv.f32	s15, s16, s21
   11cf8:	ldr	r2, [pc, #508]	; 11efc <pclose@plt+0x15b8>
   11cfc:	mov	r1, #1
   11d00:	mov	r0, r4
   11d04:	vadd.f32	s20, s15, s20
   11d08:	vcvt.f64.f32	d10, s20
   11d0c:	vstr	d10, [sp]
   11d10:	bl	108fc <__fprintf_chk@plt>
   11d14:	mov	r3, r4
   11d18:	mov	r2, #16
   11d1c:	mov	r1, #1
   11d20:	ldr	r0, [pc, #472]	; 11f00 <pclose@plt+0x15bc>
   11d24:	bl	1086c <fwrite@plt>
   11d28:	mov	r3, r4
   11d2c:	mov	r2, #16
   11d30:	mov	r1, #1
   11d34:	ldr	r0, [pc, #456]	; 11f04 <pclose@plt+0x15c0>
   11d38:	bl	1086c <fwrite@plt>
   11d3c:	mov	r3, r4
   11d40:	mov	r2, #16
   11d44:	mov	r1, #1
   11d48:	ldr	r0, [pc, #440]	; 11f08 <pclose@plt+0x15c4>
   11d4c:	bl	1086c <fwrite@plt>
   11d50:	vldr	s16, [pc, #396]	; 11ee4 <pclose@plt+0x15a0>
   11d54:	ldr	r7, [pc, #432]	; 11f0c <pclose@plt+0x15c8>
   11d58:	ldr	r9, [pc, #432]	; 11f10 <pclose@plt+0x15cc>
   11d5c:	ldr	r8, [pc, #432]	; 11f14 <pclose@plt+0x15d0>
   11d60:	mov	r5, #0
   11d64:	rsb	r3, r5, #20
   11d68:	add	r5, r5, #1
   11d6c:	vmov	s14, r3
   11d70:	lsl	r6, r5, #1
   11d74:	mov	r2, r9
   11d78:	mov	r1, #1
   11d7c:	vcvt.f32.s32	s14, s14
   11d80:	str	r6, [sp, #8]
   11d84:	mov	r0, r4
   11d88:	vmul.f32	s14, s14, s16
   11d8c:	vcvt.f64.f32	d7, s14
   11d90:	vstr	d7, [sp]
   11d94:	bl	108fc <__fprintf_chk@plt>
   11d98:	str	r6, [sp]
   11d9c:	mov	r2, r8
   11da0:	ldrb	r3, [r7], #1
   11da4:	mov	r1, #1
   11da8:	mov	r0, r4
   11dac:	bl	108fc <__fprintf_chk@plt>
   11db0:	cmp	r5, #16
   11db4:	bne	11d64 <pclose@plt+0x1420>
   11db8:	vldr	s26, [pc, #292]	; 11ee4 <pclose@plt+0x15a0>
   11dbc:	vldr	d11, [pc, #252]	; 11ec0 <pclose@plt+0x157c>
   11dc0:	vldr	s25, [pc, #264]	; 11ed0 <pclose@plt+0x158c>
   11dc4:	vldr	d10, [pc, #252]	; 11ec8 <pclose@plt+0x1584>
   11dc8:	ldr	r7, [pc, #328]	; 11f18 <pclose@plt+0x15d4>
   11dcc:	mov	r5, #0
   11dd0:	rsb	r3, r5, #20
   11dd4:	add	r5, r5, #1
   11dd8:	vmov	s16, r3
   11ddc:	lsl	r6, r5, #1
   11de0:	mov	r2, r7
   11de4:	mov	r1, #1
   11de8:	vcvt.f32.s32	s16, s16
   11dec:	vstr	d9, [sp]
   11df0:	str	r6, [sp, #8]
   11df4:	mov	r0, r4
   11df8:	bl	108fc <__fprintf_chk@plt>
   11dfc:	vmov.f64	d0, d11
   11e00:	vmul.f32	s16, s16, s26
   11e04:	vcvt.f64.f32	d8, s16
   11e08:	vmov.f64	d1, d8
   11e0c:	bl	10854 <pow@plt>
   11e10:	vmov.f32	s14, s25
   11e14:	ldr	r2, [pc, #256]	; 11f1c <pclose@plt+0x15d8>
   11e18:	mov	r1, #1
   11e1c:	str	r6, [sp, #8]
   11e20:	mov	r0, r4
   11e24:	vcvt.f32.f64	s0, d0
   11e28:	vmls.f32	s14, s0, s24
   11e2c:	vcvt.f64.f32	d7, s14
   11e30:	vstr	d7, [sp]
   11e34:	bl	108fc <__fprintf_chk@plt>
   11e38:	vmov.f64	d1, d8
   11e3c:	vmov.f64	d0, d10
   11e40:	bl	10854 <pow@plt>
   11e44:	vmov.f32	s14, s25
   11e48:	str	r6, [sp, #8]
   11e4c:	ldr	r2, [pc, #204]	; 11f20 <pclose@plt+0x15dc>
   11e50:	mov	r1, #1
   11e54:	mov	r0, r4
   11e58:	vcvt.f32.f64	s0, d0
   11e5c:	vmls.f32	s14, s0, s24
   11e60:	vcvt.f64.f32	d7, s14
   11e64:	vstr	d7, [sp]
   11e68:	bl	108fc <__fprintf_chk@plt>
   11e6c:	cmp	r5, #16
   11e70:	bne	11dd0 <pclose@plt+0x148c>
   11e74:	add	sp, sp, #20
   11e78:	vpop	{d8-d13}
   11e7c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11e80:	vdiv.f32	s15, s16, s21
   11e84:	vcmp.f32	s22, s24
   11e88:	mov	r1, #1
   11e8c:	ldr	r2, [pc, #96]	; 11ef4 <pclose@plt+0x15b0>
   11e90:	mov	r0, r4
   11e94:	vmrs	APSR_nzcv, fpscr
   11e98:	vcmp.f32	s17, s24
   11e9c:	vadd.f32	s20, s15, s20
   11ea0:	moveq	r3, #0
   11ea4:	movne	r3, r1
   11ea8:	vmrs	APSR_nzcv, fpscr
   11eac:	moveq	r3, #0
   11eb0:	vcvt.f64.f32	d10, s20
   11eb4:	vstr	d10, [sp]
   11eb8:	bl	108fc <__fprintf_chk@plt>
   11ebc:	b	11d14 <pclose@plt+0x13d0>
   11ec0:	andeq	r0, r0, r0
   11ec4:	svccc	0x00e00000
   11ec8:	andeq	r0, r0, r0
   11ecc:	svccc	0x00d00000
   11ed0:	svccc	0x00800000
   11ed4:	svccc	0x00000000
   11ed8:	mvnsmi	r0, r0
   11edc:	svccc	0x00400000
   11ee0:	andmi	r0, r0, r0
   11ee4:	cdpcc	12, 4, cr12, cr12, cr13, {6}
   11ee8:	andeq	r2, r1, r4, asr #28
   11eec:	andeq	r2, r1, r0, ror #28
   11ef0:	andeq	r2, r1, r4, ror lr
   11ef4:	muleq	r1, r0, lr
   11ef8:	andeq	r2, r1, r4, lsr #29
   11efc:			; <UNDEFINED> instruction: 0x00012eb4
   11f00:	andeq	r2, r1, r4, asr #29
   11f04:	ldrdeq	r2, [r1], -r8
   11f08:	andeq	r2, r1, ip, ror #29
   11f0c:	muleq	r1, r8, sp
   11f10:	andeq	r2, r1, r0, lsl #30
   11f14:	andeq	r2, r1, r4, lsl pc
   11f18:	andeq	r2, r1, r8, lsr #30
   11f1c:	andeq	r2, r1, r4, asr #30
   11f20:	andeq	r2, r1, r0, ror #30
   11f24:	vldr	s14, [pc, #984]	; 12304 <pclose@plt+0x19c0>
   11f28:	push	{r4, r5, r6, r7, r8, r9, lr}
   11f2c:	vpush	{d8-d14}
   11f30:	ldr	r2, [pc, #1008]	; 12328 <pclose@plt+0x19e4>
   11f34:	vsub.f32	s14, s14, s0
   11f38:	mov	r1, #1
   11f3c:	sub	sp, sp, #36	; 0x24
   11f40:	vmov.f32	s19, s0
   11f44:	vmov.f32	s27, s2
   11f48:	vmov.f32	s17, s3
   11f4c:	mov	r4, r0
   11f50:	vmov.f32	s16, s1
   11f54:	vcvt.f64.f32	d7, s14
   11f58:	ldr	r7, [pc, #972]	; 1232c <pclose@plt+0x19e8>
   11f5c:	ldr	r9, [pc, #972]	; 12330 <pclose@plt+0x19ec>
   11f60:	ldr	r8, [pc, #972]	; 12334 <pclose@plt+0x19f0>
   11f64:	mov	r6, #4
   11f68:	mvn	r5, #34	; 0x22
   11f6c:	vstr	d7, [sp]
   11f70:	bl	108fc <__fprintf_chk@plt>
   11f74:	vldr	s15, [pc, #908]	; 12308 <pclose@plt+0x19c4>
   11f78:	vldr	s14, [pc, #908]	; 1230c <pclose@plt+0x19c8>
   11f7c:	vldr	s12, [pc, #908]	; 12310 <pclose@plt+0x19cc>
   11f80:	vldr	s13, [pc, #908]	; 12314 <pclose@plt+0x19d0>
   11f84:	vsub.f32	s15, s15, s27
   11f88:	ldr	r2, [pc, #936]	; 12338 <pclose@plt+0x19f4>
   11f8c:	mov	r1, #1
   11f90:	mov	r0, r4
   11f94:	vmul.f32	s15, s15, s14
   11f98:	vdiv.f32	s14, s15, s12
   11f9c:	vadd.f32	s14, s14, s13
   11fa0:	vcvt.f64.f32	d7, s14
   11fa4:	vstr	d7, [sp]
   11fa8:	bl	108fc <__fprintf_chk@plt>
   11fac:	vldr	s1, [pc, #868]	; 12318 <pclose@plt+0x19d4>
   11fb0:	mov	r3, r4
   11fb4:	mov	r2, #14
   11fb8:	mov	r1, #1
   11fbc:	vmul.f32	s16, s16, s1
   11fc0:	ldr	r0, [pc, #884]	; 1233c <pclose@plt+0x19f8>
   11fc4:	bl	1086c <fwrite@plt>
   11fc8:	mov	r3, r4
   11fcc:	mov	r2, #14
   11fd0:	mov	r1, #1
   11fd4:	ldr	r0, [pc, #868]	; 12340 <pclose@plt+0x19fc>
   11fd8:	bl	1086c <fwrite@plt>
   11fdc:	vdiv.f32	s22, s16, s19
   11fe0:	mov	r3, r4
   11fe4:	mov	r2, #14
   11fe8:	mov	r1, #1
   11fec:	ldr	r0, [pc, #848]	; 12344 <pclose@plt+0x1a00>
   11ff0:	vdiv.f32	s24, s17, s19
   11ff4:	vsub.f32	s22, s22, s19
   11ff8:	bl	1086c <fwrite@plt>
   11ffc:	mov	r3, r5
   12000:	str	r6, [sp]
   12004:	mov	r2, r9
   12008:	mov	r1, #1
   1200c:	mov	r0, r4
   12010:	bl	108fc <__fprintf_chk@plt>
   12014:	add	r5, r5, #5
   12018:	str	r6, [sp]
   1201c:	mov	r2, r8
   12020:	ldrb	r3, [r7, #1]!
   12024:	mov	r1, #1
   12028:	mov	r0, r4
   1202c:	bl	108fc <__fprintf_chk@plt>
   12030:	cmp	r5, #40	; 0x28
   12034:	add	r6, r6, #2
   12038:	bne	11ffc <pclose@plt+0x16b8>
   1203c:	vldr	s26, [pc, #728]	; 1231c <pclose@plt+0x19d8>
   12040:	vldr	s25, [pc, #728]	; 12320 <pclose@plt+0x19dc>
   12044:	vldr	s18, [pc, #696]	; 12304 <pclose@plt+0x19c0>
   12048:	vldr	s23, [pc, #724]	; 12324 <pclose@plt+0x19e0>
   1204c:	ldr	r7, [pc, #756]	; 12348 <pclose@plt+0x1a04>
   12050:	mov	r5, #1
   12054:	b	1208c <pclose@plt+0x1748>
   12058:	vmul.f32	s14, s17, s19
   1205c:	vmov.f64	d0, d10
   12060:	vcvt.f64.f32	d7, s14
   12064:	str	r6, [sp, #24]
   12068:	vstr	d10, [sp, #16]
   1206c:	vstr	d0, [sp, #8]
   12070:	vstr	d7, [sp]
   12074:	ldr	r2, [pc, #720]	; 1234c <pclose@plt+0x1a08>
   12078:	mov	r1, #1
   1207c:	mov	r0, r4
   12080:	bl	108fc <__fprintf_chk@plt>
   12084:	cmp	r5, #16
   12088:	beq	12378 <pclose@plt+0x1a34>
   1208c:	vmov	s15, r5
   12090:	vmov.f32	s16, s25
   12094:	vcvt.f32.s32	s15, s15
   12098:	vnmls.f32	s16, s15, s26
   1209c:	vadd.f32	s17, s22, s16
   120a0:	vsub.f32	s16, s22, s16
   120a4:	vcmpe.f32	s17, #0.0
   120a8:	vmrs	APSR_nzcv, fpscr
   120ac:	ble	12244 <pclose@plt+0x1900>
   120b0:	vsub.f32	s20, s16, s17
   120b4:	vmov.f32	s21, s18
   120b8:	vadd.f32	s20, s20, s18
   120bc:	vmul.f32	s20, s24, s20
   120c0:	vcmpe.f32	s20, #0.0
   120c4:	vmrs	APSR_nzcv, fpscr
   120c8:	bls	12238 <pclose@plt+0x18f4>
   120cc:	vcmpe.f32	s20, s18
   120d0:	vmrs	APSR_nzcv, fpscr
   120d4:	blt	122cc <pclose@plt+0x1988>
   120d8:	vmul.f32	s20, s19, s23
   120dc:	vmov.f32	s0, s19
   120e0:	vmul.f32	s14, s21, s19
   120e4:	vcvt.f64.f32	d0, s0
   120e8:	vcvt.f64.f32	d10, s20
   120ec:	add	r5, r5, #1
   120f0:	mov	r2, r7
   120f4:	lsl	r6, r5, #1
   120f8:	str	r6, [sp, #24]
   120fc:	mov	r1, #1
   12100:	vcvt.f64.f32	d7, s14
   12104:	vstr	d0, [sp, #16]
   12108:	vstr	d10, [sp]
   1210c:	mov	r0, r4
   12110:	vstr	d7, [sp, #8]
   12114:	bl	108fc <__fprintf_chk@plt>
   12118:	vcmpe.f32	s16, #0.0
   1211c:	vmrs	APSR_nzcv, fpscr
   12120:	ble	121e8 <pclose@plt+0x18a4>
   12124:	vsub.f32	s29, s17, s16
   12128:	vmov.f32	s28, s18
   1212c:	vadd.f32	s29, s29, s18
   12130:	vmul.f32	s29, s24, s29
   12134:	vcmpe.f32	s29, #0.0
   12138:	vmrs	APSR_nzcv, fpscr
   1213c:	vmovls.f64	d0, d10
   12140:	bls	12154 <pclose@plt+0x1810>
   12144:	vcmpe.f32	s29, s18
   12148:	vmrs	APSR_nzcv, fpscr
   1214c:	vcvtge.f64.f32	d0, s19
   12150:	blt	122e8 <pclose@plt+0x19a4>
   12154:	vmul.f32	s14, s28, s19
   12158:	str	r6, [sp, #24]
   1215c:	vstr	d0, [sp, #16]
   12160:	vstr	d10, [sp, #8]
   12164:	ldr	r2, [pc, #484]	; 12350 <pclose@plt+0x1a0c>
   12168:	mov	r1, #1
   1216c:	mov	r0, r4
   12170:	vcvt.f64.f32	d7, s14
   12174:	vstr	d7, [sp]
   12178:	bl	108fc <__fprintf_chk@plt>
   1217c:	vcmpe.f32	s17, #0.0
   12180:	vmrs	APSR_nzcv, fpscr
   12184:	ble	121bc <pclose@plt+0x1878>
   12188:	vsub.f32	s16, s16, s17
   1218c:	vmov.f32	s17, s18
   12190:	vadd.f32	s16, s16, s18
   12194:	vcmpe.f32	s16, #0.0
   12198:	vmrs	APSR_nzcv, fpscr
   1219c:	bls	12058 <pclose@plt+0x1714>
   121a0:	vcmpe.f32	s16, s18
   121a4:	vmrs	APSR_nzcv, fpscr
   121a8:	blt	12354 <pclose@plt+0x1a10>
   121ac:	vmul.f32	s14, s17, s19
   121b0:	vcvt.f64.f32	d0, s19
   121b4:	vcvt.f64.f32	d7, s14
   121b8:	b	12064 <pclose@plt+0x1720>
   121bc:	vcmpe.f32	s16, #0.0
   121c0:	vmrs	APSR_nzcv, fpscr
   121c4:	ble	12294 <pclose@plt+0x1950>
   121c8:	vsub.f32	s16, s17, s16
   121cc:	vadd.f32	s17, s16, s18
   121d0:	vcmpe.f32	s17, #0.0
   121d4:	vmrs	APSR_nzcv, fpscr
   121d8:	bhi	12384 <pclose@plt+0x1a40>
   121dc:	vcvt.f64.f32	d0, s19
   121e0:	vmov.f64	d7, d10
   121e4:	b	12064 <pclose@plt+0x1720>
   121e8:	vcmpe.f32	s17, #0.0
   121ec:	vmrs	APSR_nzcv, fpscr
   121f0:	vsubgt.f32	s0, s16, s17
   121f4:	vmovle.f32	s0, s16
   121f8:	vaddle.f32	s29, s17, s18
   121fc:	vmovgt.f32	s29, s24
   12200:	vadd.f32	s0, s0, s18
   12204:	vmulle.f32	s29, s29, s24
   12208:	vcmpe.f32	s0, #0.0
   1220c:	vmrs	APSR_nzcv, fpscr
   12210:	vmovls.f32	s28, s23
   12214:	bls	12134 <pclose@plt+0x17f0>
   12218:	vcmpe.f32	s0, s18
   1221c:	vmrs	APSR_nzcv, fpscr
   12220:	bge	123a0 <pclose@plt+0x1a5c>
   12224:	vcvt.f64.f32	d1, s27
   12228:	vcvt.f64.f32	d0, s0
   1222c:	bl	10854 <pow@plt>
   12230:	vcvt.f32.f64	s28, d0
   12234:	b	12134 <pclose@plt+0x17f0>
   12238:	vmul.f32	s0, s19, s23
   1223c:	vmov.f32	s20, s0
   12240:	b	120e0 <pclose@plt+0x179c>
   12244:	vcmpe.f32	s16, #0.0
   12248:	vmrs	APSR_nzcv, fpscr
   1224c:	vsubgt.f32	s0, s17, s16
   12250:	vmovle.f32	s0, s17
   12254:	vaddle.f32	s20, s16, s18
   12258:	vmovgt.f32	s20, s24
   1225c:	vadd.f32	s0, s0, s18
   12260:	vmulle.f32	s20, s20, s24
   12264:	vcmpe.f32	s0, #0.0
   12268:	vmrs	APSR_nzcv, fpscr
   1226c:	vmovls.f32	s21, s23
   12270:	bls	120c0 <pclose@plt+0x177c>
   12274:	vcmpe.f32	s0, s18
   12278:	vmrs	APSR_nzcv, fpscr
   1227c:	bge	123b0 <pclose@plt+0x1a6c>
   12280:	vcvt.f64.f32	d1, s27
   12284:	vcvt.f64.f32	d0, s0
   12288:	bl	10854 <pow@plt>
   1228c:	vcvt.f32.f64	s21, d0
   12290:	b	120c0 <pclose@plt+0x177c>
   12294:	vadd.f32	s17, s17, s18
   12298:	vadd.f32	s16, s16, s18
   1229c:	vcmpe.f32	s17, #0.0
   122a0:	vmrs	APSR_nzcv, fpscr
   122a4:	vmovls.f32	s17, s23
   122a8:	bls	12194 <pclose@plt+0x1850>
   122ac:	vcmpe.f32	s17, s18
   122b0:	vmrs	APSR_nzcv, fpscr
   122b4:	bge	123a8 <pclose@plt+0x1a64>
   122b8:	vcvt.f64.f32	d0, s17
   122bc:	vcvt.f64.f32	d1, s27
   122c0:	bl	10854 <pow@plt>
   122c4:	vcvt.f32.f64	s17, d0
   122c8:	b	12194 <pclose@plt+0x1850>
   122cc:	vcvt.f64.f32	d0, s20
   122d0:	vcvt.f64.f32	d1, s27
   122d4:	bl	10854 <pow@plt>
   122d8:	vmul.f32	s20, s19, s23
   122dc:	vcvt.f32.f64	s0, d0
   122e0:	vmul.f32	s0, s0, s19
   122e4:	b	120e0 <pclose@plt+0x179c>
   122e8:	vcvt.f64.f32	d1, s27
   122ec:	vcvt.f64.f32	d0, s29
   122f0:	bl	10854 <pow@plt>
   122f4:	vcvt.f32.f64	s0, d0
   122f8:	vmul.f32	s0, s0, s19
   122fc:	vcvt.f64.f32	d0, s0
   12300:	b	12154 <pclose@plt+0x1810>
   12304:	svccc	0x00800000
   12308:	addmi	r0, r0, r0
   1230c:	mvnsmi	r0, r0
   12310:	submi	r0, r0, r0
   12314:	andmi	r0, r0, r0
   12318:	svccc	0x00000000
   1231c:	stclcc	12, cr12, [ip, #-820]	; 0xfffffccc
   12320:	cdpcc	12, 12, cr12, cr12, cr13, {6}
   12324:	andeq	r0, r0, r0
   12328:	andeq	r2, r1, r4, lsr #29
   1232c:	muleq	r1, r8, sp
   12330:	andeq	r2, r1, r0, asr #31
   12334:	ldrdeq	r2, [r1], -r4
   12338:	andeq	r2, r1, ip, ror pc
   1233c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12340:	andeq	r2, r1, r0, lsr #31
   12344:			; <UNDEFINED> instruction: 0x00012fb0
   12348:	andeq	r2, r1, r8, ror #31
   1234c:	andeq	r3, r1, r0, asr #32
   12350:	andeq	r3, r1, r4, lsl r0
   12354:	vcvt.f64.f32	d1, s27
   12358:	vcvt.f64.f32	d0, s16
   1235c:	bl	10854 <pow@plt>
   12360:	vmul.f32	s14, s17, s19
   12364:	vcvt.f64.f32	d7, s14
   12368:	vcvt.f32.f64	s0, d0
   1236c:	vmul.f32	s0, s0, s19
   12370:	vcvt.f64.f32	d0, s0
   12374:	b	12064 <pclose@plt+0x1720>
   12378:	add	sp, sp, #36	; 0x24
   1237c:	vpop	{d8-d14}
   12380:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12384:	vcmpe.f32	s17, s18
   12388:	vmrs	APSR_nzcv, fpscr
   1238c:	vcvtge.f64.f32	d7, s19
   12390:	vmovge.f64	d0, d7
   12394:	bge	12064 <pclose@plt+0x1720>
   12398:	vmov.f32	s16, s18
   1239c:	b	122b8 <pclose@plt+0x1974>
   123a0:	vmov.f32	s28, s18
   123a4:	b	12134 <pclose@plt+0x17f0>
   123a8:	vmov.f32	s17, s18
   123ac:	b	12194 <pclose@plt+0x1850>
   123b0:	vmov.f32	s21, s18
   123b4:	b	120c0 <pclose@plt+0x177c>
   123b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123bc:	vpush	{d8-d11}
   123c0:	vldr	s17, [pc, #992]	; 127a8 <pclose@plt+0x1e64>
   123c4:	vldr	s22, [pc, #992]	; 127ac <pclose@plt+0x1e68>
   123c8:	vldr	s21, [pc, #992]	; 127b0 <pclose@plt+0x1e6c>
   123cc:	vldr	s20, [pc, #992]	; 127b4 <pclose@plt+0x1e70>
   123d0:	vadd.f32	s15, s2, s17
   123d4:	ldr	r3, [pc, #988]	; 127b8 <pclose@plt+0x1e74>
   123d8:	vmov.f32	s19, s0
   123dc:	sub	sp, sp, #284	; 0x11c
   123e0:	ldr	r3, [r3]
   123e4:	ldr	r2, [pc, #976]	; 127bc <pclose@plt+0x1e78>
   123e8:	mov	r4, r1
   123ec:	mov	r1, #1
   123f0:	vmul.f32	s15, s15, s22
   123f4:	str	r3, [sp, #276]	; 0x114
   123f8:	vmov.f32	s16, s1
   123fc:	vmov.f32	s18, s2
   12400:	mov	r7, r0
   12404:	vdiv.f32	s14, s15, s21
   12408:	vadd.f32	s14, s14, s20
   1240c:	vcvt.f64.f32	d7, s14
   12410:	vstr	d7, [sp]
   12414:	bl	108fc <__fprintf_chk@plt>
   12418:	vadd.f32	s15, s19, s17
   1241c:	vcmp.f32	s18, s19
   12420:	mov	r1, #1
   12424:	mov	r0, r7
   12428:	ldr	r2, [pc, #912]	; 127c0 <pclose@plt+0x1e7c>
   1242c:	vmrs	APSR_nzcv, fpscr
   12430:	vmul.f32	s15, s15, s22
   12434:	movne	r3, r1
   12438:	moveq	r3, #0
   1243c:	vdiv.f32	s14, s15, s21
   12440:	vadd.f32	s14, s14, s20
   12444:	vcvt.f64.f32	d7, s14
   12448:	vstr	d7, [sp]
   1244c:	bl	108fc <__fprintf_chk@plt>
   12450:	vcmp.f32	s19, s16
   12454:	vadd.f32	s15, s16, s17
   12458:	vmrs	APSR_nzcv, fpscr
   1245c:	vcmp.f32	s18, s16
   12460:	movne	r3, #0
   12464:	moveq	r3, #1
   12468:	vmrs	APSR_nzcv, fpscr
   1246c:	movne	r3, #0
   12470:	cmp	r3, #0
   12474:	beq	12748 <pclose@plt+0x1e04>
   12478:	vmul.f32	s15, s15, s22
   1247c:	ldr	r2, [pc, #832]	; 127c4 <pclose@plt+0x1e80>
   12480:	mov	r1, #1
   12484:	mov	r0, r7
   12488:	vdiv.f32	s14, s15, s21
   1248c:	vadd.f32	s14, s14, s20
   12490:	vcvt.f64.f32	d7, s14
   12494:	vstr	d7, [sp]
   12498:	bl	108fc <__fprintf_chk@plt>
   1249c:	mov	r3, r7
   124a0:	mov	r2, #10
   124a4:	mov	r1, #1
   124a8:	ldr	r0, [pc, #792]	; 127c8 <pclose@plt+0x1e84>
   124ac:	bl	1086c <fwrite@plt>
   124b0:	mov	r3, r7
   124b4:	mov	r2, #34	; 0x22
   124b8:	mov	r1, #1
   124bc:	ldr	r0, [pc, #776]	; 127cc <pclose@plt+0x1e88>
   124c0:	bl	1086c <fwrite@plt>
   124c4:	mov	r3, r4
   124c8:	ldr	r2, [pc, #768]	; 127d0 <pclose@plt+0x1e8c>
   124cc:	mov	r1, #1
   124d0:	mov	r0, r7
   124d4:	bl	108fc <__fprintf_chk@plt>
   124d8:	ldr	r1, [pc, #756]	; 127d4 <pclose@plt+0x1e90>
   124dc:	ldr	r0, [pc, #756]	; 127d8 <pclose@plt+0x1e94>
   124e0:	bl	10824 <fopen@plt>
   124e4:	subs	r5, r0, #0
   124e8:	beq	1278c <pclose@plt+0x1e48>
   124ec:	add	r0, sp, #20
   124f0:	mov	r2, r5
   124f4:	mov	r1, #255	; 0xff
   124f8:	bl	10848 <fgets@plt>
   124fc:	b	1250c <pclose@plt+0x1bc8>
   12500:	ldrb	r3, [sp, #20]
   12504:	cmp	r3, #35	; 0x23
   12508:	bne	12524 <pclose@plt+0x1be0>
   1250c:	mov	r2, r5
   12510:	mov	r1, #255	; 0xff
   12514:	add	r0, sp, #20
   12518:	bl	10848 <fgets@plt>
   1251c:	cmp	r0, #0
   12520:	bne	12500 <pclose@plt+0x1bbc>
   12524:	add	r3, sp, #16
   12528:	add	r2, sp, #12
   1252c:	ldr	r1, [pc, #680]	; 127dc <pclose@plt+0x1e98>
   12530:	add	r0, sp, #20
   12534:	bl	108e4 <__isoc99_sscanf@plt>
   12538:	mov	r2, r5
   1253c:	mov	r1, #255	; 0xff
   12540:	add	r0, sp, #20
   12544:	bl	10848 <fgets@plt>
   12548:	mov	r3, r7
   1254c:	mov	r2, #6
   12550:	mov	r1, #1
   12554:	ldr	r0, [pc, #644]	; 127e0 <pclose@plt+0x1e9c>
   12558:	bl	1086c <fwrite@plt>
   1255c:	ldr	r0, [sp, #16]
   12560:	ldr	r1, [sp, #12]
   12564:	rsb	r0, r0, r0, lsl #6
   12568:	lsl	r0, r0, #3
   1256c:	bl	12818 <pclose@plt+0x1ed4>
   12570:	ldr	r2, [pc, #620]	; 127e4 <pclose@plt+0x1ea0>
   12574:	mov	r1, #1
   12578:	add	r3, r0, #72	; 0x48
   1257c:	mov	r0, r7
   12580:	bl	108fc <__fprintf_chk@plt>
   12584:	ldr	r0, [sp, #16]
   12588:	ldr	r1, [sp, #12]
   1258c:	rsb	r0, r0, r0, lsl #6
   12590:	lsl	r0, r0, #3
   12594:	bl	12818 <pclose@plt+0x1ed4>
   12598:	ldr	r2, [pc, #584]	; 127e8 <pclose@plt+0x1ea4>
   1259c:	mov	r1, #1
   125a0:	mov	r3, r0
   125a4:	mov	r0, r7
   125a8:	bl	108fc <__fprintf_chk@plt>
   125ac:	ldr	r3, [sp, #12]
   125b0:	mov	r1, #1
   125b4:	ldr	r2, [pc, #560]	; 127ec <pclose@plt+0x1ea8>
   125b8:	add	r3, r3, r3, lsl r1
   125bc:	mov	r0, r7
   125c0:	bl	108fc <__fprintf_chk@plt>
   125c4:	ldr	r2, [sp, #16]
   125c8:	ldr	r3, [sp, #12]
   125cc:	str	r2, [sp]
   125d0:	mov	r1, #1
   125d4:	ldr	r2, [pc, #532]	; 127f0 <pclose@plt+0x1eac>
   125d8:	mov	r0, r7
   125dc:	bl	108fc <__fprintf_chk@plt>
   125e0:	ldr	r2, [sp, #16]
   125e4:	ldr	r3, [sp, #12]
   125e8:	str	r2, [sp]
   125ec:	mov	r1, #1
   125f0:	ldr	r2, [pc, #508]	; 127f4 <pclose@plt+0x1eb0>
   125f4:	mov	r0, r7
   125f8:	bl	108fc <__fprintf_chk@plt>
   125fc:	mov	r3, r7
   12600:	mov	r2, #62	; 0x3e
   12604:	mov	r1, #1
   12608:	ldr	r0, [pc, #488]	; 127f8 <pclose@plt+0x1eb4>
   1260c:	bl	1086c <fwrite@plt>
   12610:	ldr	r3, [sp, #16]
   12614:	cmp	r3, #0
   12618:	ble	126d0 <pclose@plt+0x1d8c>
   1261c:	mov	r4, #0
   12620:	ldr	r8, [pc, #468]	; 127fc <pclose@plt+0x1eb8>
   12624:	mov	r9, r4
   12628:	add	r9, r9, #1
   1262c:	mov	r2, r9
   12630:	ldr	r1, [pc, #456]	; 12800 <pclose@plt+0x1ebc>
   12634:	mov	r0, #1
   12638:	bl	108f0 <__printf_chk@plt>
   1263c:	ldr	r3, [pc, #448]	; 12804 <pclose@plt+0x1ec0>
   12640:	ldr	r0, [r3]
   12644:	bl	10830 <fflush@plt>
   12648:	ldr	r3, [sp, #12]
   1264c:	cmp	r3, #0
   12650:	movgt	r6, #0
   12654:	ble	126b0 <pclose@plt+0x1d6c>
   12658:	mov	r0, r5
   1265c:	bl	10938 <getc@plt>
   12660:	add	r4, r4, #1
   12664:	mov	sl, r0
   12668:	mov	r0, r5
   1266c:	bl	10938 <getc@plt>
   12670:	mov	fp, r0
   12674:	mov	r0, r5
   12678:	bl	10938 <getc@plt>
   1267c:	str	fp, [sp]
   12680:	mov	r3, sl
   12684:	mov	r2, r8
   12688:	mov	r1, #1
   1268c:	str	r0, [sp, #4]
   12690:	mov	r0, r7
   12694:	bl	108fc <__fprintf_chk@plt>
   12698:	cmp	r4, #11
   1269c:	bgt	12718 <pclose@plt+0x1dd4>
   126a0:	ldr	r3, [sp, #12]
   126a4:	add	r6, r6, #1
   126a8:	cmp	r3, r6
   126ac:	bgt	12658 <pclose@plt+0x1d14>
   126b0:	ldr	r3, [sp, #16]
   126b4:	cmp	r9, r3
   126b8:	blt	12628 <pclose@plt+0x1ce4>
   126bc:	cmp	r4, #0
   126c0:	beq	126d0 <pclose@plt+0x1d8c>
   126c4:	mov	r1, r7
   126c8:	mov	r0, #10
   126cc:	bl	10920 <putc@plt>
   126d0:	ldr	r1, [pc, #304]	; 12808 <pclose@plt+0x1ec4>
   126d4:	mov	r0, #1
   126d8:	bl	108f0 <__printf_chk@plt>
   126dc:	mov	r0, r5
   126e0:	bl	10908 <fclose@plt>
   126e4:	mov	r3, r7
   126e8:	mov	r2, #9
   126ec:	mov	r1, #1
   126f0:	ldr	r0, [pc, #276]	; 1280c <pclose@plt+0x1ec8>
   126f4:	bl	1086c <fwrite@plt>
   126f8:	ldr	r3, [pc, #184]	; 127b8 <pclose@plt+0x1e74>
   126fc:	ldr	r2, [sp, #276]	; 0x114
   12700:	ldr	r3, [r3]
   12704:	cmp	r2, r3
   12708:	bne	127a4 <pclose@plt+0x1e60>
   1270c:	add	sp, sp, #284	; 0x11c
   12710:	vpop	{d8-d11}
   12714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12718:	mov	r1, r7
   1271c:	mov	r0, #10
   12720:	bl	10920 <putc@plt>
   12724:	ldr	r3, [sp, #12]
   12728:	add	r6, r6, #1
   1272c:	cmp	r6, r3
   12730:	mov	r4, #0
   12734:	blt	12658 <pclose@plt+0x1d14>
   12738:	ldr	r3, [sp, #16]
   1273c:	cmp	r9, r3
   12740:	blt	12628 <pclose@plt+0x1ce4>
   12744:	b	126bc <pclose@plt+0x1d78>
   12748:	vmul.f32	s15, s15, s22
   1274c:	vcmp.f32	s19, s16
   12750:	mov	r1, #1
   12754:	ldr	r2, [pc, #180]	; 12810 <pclose@plt+0x1ecc>
   12758:	mov	r0, r7
   1275c:	vmrs	APSR_nzcv, fpscr
   12760:	vcmp.f32	s18, s16
   12764:	vdiv.f32	s14, s15, s21
   12768:	moveq	r3, #0
   1276c:	movne	r3, r1
   12770:	vmrs	APSR_nzcv, fpscr
   12774:	vadd.f32	s14, s14, s20
   12778:	moveq	r3, #0
   1277c:	vcvt.f64.f32	d7, s14
   12780:	vstr	d7, [sp]
   12784:	bl	108fc <__fprintf_chk@plt>
   12788:	b	1249c <pclose@plt+0x1b58>
   1278c:	ldr	r1, [pc, #64]	; 127d4 <pclose@plt+0x1e90>
   12790:	ldr	r0, [pc, #124]	; 12814 <pclose@plt+0x1ed0>
   12794:	bl	10824 <fopen@plt>
   12798:	subs	r5, r0, #0
   1279c:	bne	124ec <pclose@plt+0x1ba8>
   127a0:	b	126f8 <pclose@plt+0x1db4>
   127a4:	bl	10860 <__stack_chk_fail@plt>
   127a8:	cdpcc	12, 12, cr12, cr12, cr13, {6}
   127ac:	mvnsmi	r0, r0
   127b0:	svccc	0x00400000
   127b4:	andmi	r0, r0, r0
   127b8:	andeq	r4, r2, r8, ror lr
   127bc:	andeq	r3, r1, ip, rrx
   127c0:	muleq	r1, r4, r0
   127c4:	strheq	r3, [r1], -ip
   127c8:	andeq	r3, r1, r4, lsl #2
   127cc:	andeq	r3, r1, r0, lsl r1
   127d0:	andeq	r3, r1, r4, lsr r1
   127d4:	andeq	r3, r1, r8, asr #2
   127d8:	andeq	r3, r1, ip, asr #2
   127dc:	andeq	r3, r1, ip, ror #2
   127e0:	andeq	r3, r1, r4, ror r1
   127e4:	andeq	r3, r1, ip, ror r1
   127e8:	muleq	r1, r0, r1
   127ec:	andeq	r3, r1, r0, lsr #3
   127f0:			; <UNDEFINED> instruction: 0x000131bc
   127f4:	andeq	r3, r1, r8, asr #3
   127f8:	ldrdeq	r3, [r1], -ip
   127fc:	andeq	r3, r1, ip, lsr r2
   12800:	andeq	r3, r1, ip, lsl r2
   12804:	andeq	r5, r2, ip
   12808:	andeq	r3, r1, ip, asr #4
   1280c:	andeq	r3, r1, r4, ror r2
   12810:	ldrdeq	r3, [r1], -ip
   12814:	andeq	r3, r1, ip, asr r1
   12818:	cmp	r1, #0
   1281c:	beq	12a28 <pclose@plt+0x20e4>
   12820:	eor	ip, r0, r1
   12824:	rsbmi	r1, r1, #0
   12828:	subs	r2, r1, #1
   1282c:	beq	129f4 <pclose@plt+0x20b0>
   12830:	movs	r3, r0
   12834:	rsbmi	r3, r0, #0
   12838:	cmp	r3, r1
   1283c:	bls	12a00 <pclose@plt+0x20bc>
   12840:	tst	r1, r2
   12844:	beq	12a10 <pclose@plt+0x20cc>
   12848:	clz	r2, r3
   1284c:	clz	r0, r1
   12850:	sub	r2, r0, r2
   12854:	rsbs	r2, r2, #31
   12858:	addne	r2, r2, r2, lsl #1
   1285c:	mov	r0, #0
   12860:	addne	pc, pc, r2, lsl #2
   12864:	nop			; (mov r0, r0)
   12868:	cmp	r3, r1, lsl #31
   1286c:	adc	r0, r0, r0
   12870:	subcs	r3, r3, r1, lsl #31
   12874:	cmp	r3, r1, lsl #30
   12878:	adc	r0, r0, r0
   1287c:	subcs	r3, r3, r1, lsl #30
   12880:	cmp	r3, r1, lsl #29
   12884:	adc	r0, r0, r0
   12888:	subcs	r3, r3, r1, lsl #29
   1288c:	cmp	r3, r1, lsl #28
   12890:	adc	r0, r0, r0
   12894:	subcs	r3, r3, r1, lsl #28
   12898:	cmp	r3, r1, lsl #27
   1289c:	adc	r0, r0, r0
   128a0:	subcs	r3, r3, r1, lsl #27
   128a4:	cmp	r3, r1, lsl #26
   128a8:	adc	r0, r0, r0
   128ac:	subcs	r3, r3, r1, lsl #26
   128b0:	cmp	r3, r1, lsl #25
   128b4:	adc	r0, r0, r0
   128b8:	subcs	r3, r3, r1, lsl #25
   128bc:	cmp	r3, r1, lsl #24
   128c0:	adc	r0, r0, r0
   128c4:	subcs	r3, r3, r1, lsl #24
   128c8:	cmp	r3, r1, lsl #23
   128cc:	adc	r0, r0, r0
   128d0:	subcs	r3, r3, r1, lsl #23
   128d4:	cmp	r3, r1, lsl #22
   128d8:	adc	r0, r0, r0
   128dc:	subcs	r3, r3, r1, lsl #22
   128e0:	cmp	r3, r1, lsl #21
   128e4:	adc	r0, r0, r0
   128e8:	subcs	r3, r3, r1, lsl #21
   128ec:	cmp	r3, r1, lsl #20
   128f0:	adc	r0, r0, r0
   128f4:	subcs	r3, r3, r1, lsl #20
   128f8:	cmp	r3, r1, lsl #19
   128fc:	adc	r0, r0, r0
   12900:	subcs	r3, r3, r1, lsl #19
   12904:	cmp	r3, r1, lsl #18
   12908:	adc	r0, r0, r0
   1290c:	subcs	r3, r3, r1, lsl #18
   12910:	cmp	r3, r1, lsl #17
   12914:	adc	r0, r0, r0
   12918:	subcs	r3, r3, r1, lsl #17
   1291c:	cmp	r3, r1, lsl #16
   12920:	adc	r0, r0, r0
   12924:	subcs	r3, r3, r1, lsl #16
   12928:	cmp	r3, r1, lsl #15
   1292c:	adc	r0, r0, r0
   12930:	subcs	r3, r3, r1, lsl #15
   12934:	cmp	r3, r1, lsl #14
   12938:	adc	r0, r0, r0
   1293c:	subcs	r3, r3, r1, lsl #14
   12940:	cmp	r3, r1, lsl #13
   12944:	adc	r0, r0, r0
   12948:	subcs	r3, r3, r1, lsl #13
   1294c:	cmp	r3, r1, lsl #12
   12950:	adc	r0, r0, r0
   12954:	subcs	r3, r3, r1, lsl #12
   12958:	cmp	r3, r1, lsl #11
   1295c:	adc	r0, r0, r0
   12960:	subcs	r3, r3, r1, lsl #11
   12964:	cmp	r3, r1, lsl #10
   12968:	adc	r0, r0, r0
   1296c:	subcs	r3, r3, r1, lsl #10
   12970:	cmp	r3, r1, lsl #9
   12974:	adc	r0, r0, r0
   12978:	subcs	r3, r3, r1, lsl #9
   1297c:	cmp	r3, r1, lsl #8
   12980:	adc	r0, r0, r0
   12984:	subcs	r3, r3, r1, lsl #8
   12988:	cmp	r3, r1, lsl #7
   1298c:	adc	r0, r0, r0
   12990:	subcs	r3, r3, r1, lsl #7
   12994:	cmp	r3, r1, lsl #6
   12998:	adc	r0, r0, r0
   1299c:	subcs	r3, r3, r1, lsl #6
   129a0:	cmp	r3, r1, lsl #5
   129a4:	adc	r0, r0, r0
   129a8:	subcs	r3, r3, r1, lsl #5
   129ac:	cmp	r3, r1, lsl #4
   129b0:	adc	r0, r0, r0
   129b4:	subcs	r3, r3, r1, lsl #4
   129b8:	cmp	r3, r1, lsl #3
   129bc:	adc	r0, r0, r0
   129c0:	subcs	r3, r3, r1, lsl #3
   129c4:	cmp	r3, r1, lsl #2
   129c8:	adc	r0, r0, r0
   129cc:	subcs	r3, r3, r1, lsl #2
   129d0:	cmp	r3, r1, lsl #1
   129d4:	adc	r0, r0, r0
   129d8:	subcs	r3, r3, r1, lsl #1
   129dc:	cmp	r3, r1
   129e0:	adc	r0, r0, r0
   129e4:	subcs	r3, r3, r1
   129e8:	cmp	ip, #0
   129ec:	rsbmi	r0, r0, #0
   129f0:	bx	lr
   129f4:	teq	ip, r0
   129f8:	rsbmi	r0, r0, #0
   129fc:	bx	lr
   12a00:	movcc	r0, #0
   12a04:	asreq	r0, ip, #31
   12a08:	orreq	r0, r0, #1
   12a0c:	bx	lr
   12a10:	clz	r2, r1
   12a14:	rsb	r2, r2, #31
   12a18:	cmp	ip, #0
   12a1c:	lsr	r0, r3, r2
   12a20:	rsbmi	r0, r0, #0
   12a24:	bx	lr
   12a28:	cmp	r0, #0
   12a2c:	mvngt	r0, #-2147483648	; 0x80000000
   12a30:	movlt	r0, #-2147483648	; 0x80000000
   12a34:	b	12a58 <pclose@plt+0x2114>
   12a38:	cmp	r1, #0
   12a3c:	beq	12a28 <pclose@plt+0x20e4>
   12a40:	push	{r0, r1, lr}
   12a44:	bl	12820 <pclose@plt+0x1edc>
   12a48:	pop	{r1, r2, lr}
   12a4c:	mul	r3, r2, r0
   12a50:	sub	r1, r1, r3
   12a54:	bx	lr
   12a58:	push	{r1, lr}
   12a5c:	mov	r0, #8
   12a60:	bl	1080c <raise@plt>
   12a64:	pop	{r1, pc}
   12a68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12a6c:	mov	r7, r0
   12a70:	ldr	r6, [pc, #72]	; 12ac0 <pclose@plt+0x217c>
   12a74:	ldr	r5, [pc, #72]	; 12ac4 <pclose@plt+0x2180>
   12a78:	add	r6, pc, r6
   12a7c:	add	r5, pc, r5
   12a80:	sub	r6, r6, r5
   12a84:	mov	r8, r1
   12a88:	mov	r9, r2
   12a8c:	bl	107ec <raise@plt-0x20>
   12a90:	asrs	r6, r6, #2
   12a94:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a98:	mov	r4, #0
   12a9c:	add	r4, r4, #1
   12aa0:	ldr	r3, [r5], #4
   12aa4:	mov	r2, r9
   12aa8:	mov	r1, r8
   12aac:	mov	r0, r7
   12ab0:	blx	r3
   12ab4:	cmp	r6, r4
   12ab8:	bne	12a9c <pclose@plt+0x2158>
   12abc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ac0:	strdeq	r2, [r1], -r4
   12ac4:	andeq	r2, r1, ip, ror #7
   12ac8:	bx	lr

Disassembly of section .fini:

00012acc <.fini>:
   12acc:	push	{r3, lr}
   12ad0:	pop	{r3, pc}
