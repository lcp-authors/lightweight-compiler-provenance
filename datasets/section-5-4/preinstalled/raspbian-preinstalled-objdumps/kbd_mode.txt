
raspbian-preinstalled/kbd_mode:     file format elf32-littlearm


Disassembly of section .init:

0001065c <.init>:
   1065c:	push	{r3, lr}
   10660:	bl	10b34 <close@plt+0x3c8>
   10664:	pop	{r3, pc}

Disassembly of section .plt:

00010668 <strcmp@plt-0x14>:
   10668:	push	{lr}		; (str lr, [sp, #-4]!)
   1066c:	ldr	lr, [pc, #4]	; 10678 <strcmp@plt-0x4>
   10670:	add	lr, pc, lr
   10674:	ldr	pc, [lr, #8]!
   10678:	andeq	r1, r1, r8, lsl #19

0001067c <strcmp@plt>:
   1067c:	add	ip, pc, #0, 12
   10680:	add	ip, ip, #69632	; 0x11000
   10684:	ldr	pc, [ip, #2440]!	; 0x988

00010688 <dcgettext@plt>:
   10688:	add	ip, pc, #0, 12
   1068c:	add	ip, ip, #69632	; 0x11000
   10690:	ldr	pc, [ip, #2432]!	; 0x980

00010694 <__stack_chk_fail@plt>:
   10694:	add	ip, pc, #0, 12
   10698:	add	ip, ip, #69632	; 0x11000
   1069c:	ldr	pc, [ip, #2424]!	; 0x978

000106a0 <textdomain@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #69632	; 0x11000
   106a8:	ldr	pc, [ip, #2416]!	; 0x970

000106ac <ioctl@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #69632	; 0x11000
   106b4:	ldr	pc, [ip, #2408]!	; 0x968

000106b8 <__libc_start_main@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #69632	; 0x11000
   106c0:	ldr	pc, [ip, #2400]!	; 0x960

000106c4 <strerror@plt>:
   106c4:	add	ip, pc, #0, 12
   106c8:	add	ip, ip, #69632	; 0x11000
   106cc:	ldr	pc, [ip, #2392]!	; 0x958

000106d0 <__vfprintf_chk@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #69632	; 0x11000
   106d8:	ldr	pc, [ip, #2384]!	; 0x950

000106dc <__gmon_start__@plt>:
   106dc:	add	ip, pc, #0, 12
   106e0:	add	ip, ip, #69632	; 0x11000
   106e4:	ldr	pc, [ip, #2376]!	; 0x948

000106e8 <open@plt>:
   106e8:	add	ip, pc, #0, 12
   106ec:	add	ip, ip, #69632	; 0x11000
   106f0:	ldr	pc, [ip, #2368]!	; 0x940

000106f4 <exit@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #69632	; 0x11000
   106fc:	ldr	pc, [ip, #2360]!	; 0x938

00010700 <getopt@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #69632	; 0x11000
   10708:	ldr	pc, [ip, #2352]!	; 0x930

0001070c <__errno_location@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #69632	; 0x11000
   10714:	ldr	pc, [ip, #2344]!	; 0x928

00010718 <__printf_chk@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #69632	; 0x11000
   10720:	ldr	pc, [ip, #2336]!	; 0x920

00010724 <__fprintf_chk@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #69632	; 0x11000
   1072c:	ldr	pc, [ip, #2328]!	; 0x918

00010730 <setlocale@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2320]!	; 0x910

0001073c <strrchr@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2312]!	; 0x908

00010748 <bindtextdomain@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2304]!	; 0x900

00010754 <isatty@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2296]!	; 0x8f8

00010760 <abort@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2288]!	; 0x8f0

0001076c <close@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2280]!	; 0x8e8

Disassembly of section .text:

00010778 <.text>:
   10778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1077c:	sub	sp, sp, #12
   10780:	ldr	fp, [pc, #800]	; 10aa8 <close@plt+0x33c>
   10784:	ldr	r4, [r1]
   10788:	mov	r6, r0
   1078c:	ldr	r3, [fp]
   10790:	mov	r0, r4
   10794:	mov	r5, r1
   10798:	mov	r1, #47	; 0x2f
   1079c:	str	r3, [sp, #4]
   107a0:	bl	1073c <strrchr@plt>
   107a4:	ldr	r7, [pc, #768]	; 10aac <close@plt+0x340>
   107a8:	ldr	r1, [pc, #768]	; 10ab0 <close@plt+0x344>
   107ac:	cmp	r0, #0
   107b0:	addne	r4, r0, #1
   107b4:	mov	r0, #6
   107b8:	str	r4, [r7]
   107bc:	bl	10730 <setlocale@plt>
   107c0:	ldr	r1, [pc, #748]	; 10ab4 <close@plt+0x348>
   107c4:	ldr	r0, [pc, #748]	; 10ab8 <close@plt+0x34c>
   107c8:	bl	10748 <bindtextdomain@plt>
   107cc:	ldr	r0, [pc, #740]	; 10ab8 <close@plt+0x34c>
   107d0:	bl	106a0 <textdomain@plt>
   107d4:	cmp	r6, #2
   107d8:	beq	109f0 <close@plt+0x284>
   107dc:	mov	r8, #0
   107e0:	ldr	r7, [pc, #724]	; 10abc <close@plt+0x350>
   107e4:	ldr	r9, [pc, #724]	; 10ac0 <close@plt+0x354>
   107e8:	mov	r4, r8
   107ec:	mov	sl, #2
   107f0:	mov	r2, r7
   107f4:	mov	r1, r5
   107f8:	mov	r0, r6
   107fc:	bl	10700 <getopt@plt>
   10800:	cmn	r0, #1
   10804:	beq	10958 <close@plt+0x1ec>
   10808:	sub	r0, r0, #67	; 0x43
   1080c:	cmp	r0, #50	; 0x32
   10810:	ldrls	pc, [pc, r0, lsl #2]
   10814:	b	10954 <close@plt+0x1e8>
   10818:	andeq	r0, r1, ip, lsr r9
   1081c:	andeq	r0, r1, r4, asr r9
   10820:	andeq	r0, r1, r4, asr r9
   10824:	andeq	r0, r1, r4, asr r9
   10828:	andeq	r0, r1, r4, asr r9
   1082c:	andeq	r0, r1, r4, asr r9
   10830:	andeq	r0, r1, r4, asr r9
   10834:	andeq	r0, r1, r4, asr r9
   10838:	andeq	r0, r1, r4, asr r9
   1083c:	andeq	r0, r1, r4, asr r9
   10840:	andeq	r0, r1, r4, asr r9
   10844:	andeq	r0, r1, r4, asr r9
   10848:	andeq	r0, r1, r4, asr r9
   1084c:	andeq	r0, r1, r4, asr r9
   10850:	andeq	r0, r1, r4, asr r9
   10854:	andeq	r0, r1, r4, asr r9
   10858:	andeq	r0, r1, r4, asr r9
   1085c:	andeq	r0, r1, r4, asr r9
   10860:	andeq	r0, r1, r4, asr r9
   10864:	andeq	r0, r1, r4, asr r9
   10868:	andeq	r0, r1, r4, asr r9
   1086c:	andeq	r0, r1, r4, asr r9
   10870:	andeq	r0, r1, r4, asr r9
   10874:	andeq	r0, r1, r4, asr r9
   10878:	andeq	r0, r1, r4, asr r9
   1087c:	andeq	r0, r1, r4, asr r9
   10880:	andeq	r0, r1, r4, asr r9
   10884:	andeq	r0, r1, r4, asr r9
   10888:	andeq	r0, r1, r4, asr r9
   1088c:	andeq	r0, r1, r4, asr r9
   10890:	andeq	r0, r1, r8, lsr #18
   10894:	andeq	r0, r1, r4, asr r9
   10898:	andeq	r0, r1, r4, asr r9
   1089c:	andeq	r0, r1, r4, asr r9
   108a0:	andeq	r0, r1, r4, asr r9
   108a4:	andeq	r0, r1, r4, asr r9
   108a8:	andeq	r0, r1, r4, asr r9
   108ac:	andeq	r0, r1, r4, asr r9
   108b0:	andeq	r0, r1, r4, asr r9
   108b4:	andeq	r0, r1, r4, asr r9
   108b8:	andeq	r0, r1, r4, lsl r9
   108bc:	andeq	r0, r1, r4, asr r9
   108c0:	andeq	r0, r1, r4, asr r9
   108c4:	andeq	r0, r1, r4, asr r9
   108c8:	andeq	r0, r1, r4, asr r9
   108cc:	andeq	r0, r1, r4, asr r9
   108d0:	andeq	r0, r1, r4, asr r9
   108d4:	andeq	r0, r1, r4, asr r9
   108d8:	strdeq	r0, [r1], -ip
   108dc:	andeq	r0, r1, r4, asr r9
   108e0:	andeq	r0, r1, r4, ror #17
   108e4:	cmp	r4, #1
   108e8:	beq	10954 <close@plt+0x1e8>
   108ec:	mov	r3, #3
   108f0:	str	r3, [sp]
   108f4:	mov	r4, #1
   108f8:	b	107f0 <close@plt+0x84>
   108fc:	cmp	r4, #1
   10900:	beq	10954 <close@plt+0x1e8>
   10904:	mov	r3, #0
   10908:	str	r3, [sp]
   1090c:	mov	r4, #1
   10910:	b	107f0 <close@plt+0x84>
   10914:	cmp	r4, #1
   10918:	beq	10954 <close@plt+0x1e8>
   1091c:	str	sl, [sp]
   10920:	mov	r4, #1
   10924:	b	107f0 <close@plt+0x84>
   10928:	cmp	r4, #1
   1092c:	beq	10954 <close@plt+0x1e8>
   10930:	mov	r4, #1
   10934:	str	r4, [sp]
   10938:	b	107f0 <close@plt+0x84>
   1093c:	ldr	r8, [r9]
   10940:	cmp	r8, #0
   10944:	beq	10954 <close@plt+0x1e8>
   10948:	ldrb	r3, [r8]
   1094c:	cmp	r3, #0
   10950:	bne	107f0 <close@plt+0x84>
   10954:	bl	10be8 <close@plt+0x47c>
   10958:	mov	r0, r8
   1095c:	bl	10ce8 <close@plt+0x57c>
   10960:	subs	r5, r0, #0
   10964:	blt	10a2c <close@plt+0x2c0>
   10968:	cmp	r4, #0
   1096c:	mov	r0, r5
   10970:	beq	109b8 <close@plt+0x24c>
   10974:	ldr	r2, [sp]
   10978:	ldr	r1, [pc, #324]	; 10ac4 <close@plt+0x358>
   1097c:	bl	106ac <ioctl@plt>
   10980:	cmp	r0, #0
   10984:	beq	1099c <close@plt+0x230>
   10988:	bl	1070c <__errno_location@plt>
   1098c:	ldr	r2, [pc, #308]	; 10ac8 <close@plt+0x35c>
   10990:	ldr	r1, [r0]
   10994:	mov	r0, #1
   10998:	bl	10eac <close@plt+0x740>
   1099c:	ldr	r2, [sp, #4]
   109a0:	ldr	r3, [fp]
   109a4:	mov	r0, #0
   109a8:	cmp	r2, r3
   109ac:	bne	10aa4 <close@plt+0x338>
   109b0:	add	sp, sp, #12
   109b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109b8:	mov	r2, sp
   109bc:	ldr	r1, [pc, #264]	; 10acc <close@plt+0x360>
   109c0:	bl	106ac <ioctl@plt>
   109c4:	cmp	r0, #0
   109c8:	bne	10a84 <close@plt+0x318>
   109cc:	ldr	r3, [sp]
   109d0:	mov	r2, #5
   109d4:	cmp	r3, #3
   109d8:	ldrls	pc, [pc, r3, lsl #2]
   109dc:	b	10a9c <close@plt+0x330>
   109e0:	andeq	r0, r1, ip, ror sl
   109e4:	andeq	r0, r1, r4, ror sl
   109e8:	andeq	r0, r1, ip, ror #20
   109ec:	andeq	r0, r1, r0, asr sl
   109f0:	ldr	r1, [pc, #216]	; 10ad0 <close@plt+0x364>
   109f4:	ldr	r0, [r5, #4]
   109f8:	bl	1067c <strcmp@plt>
   109fc:	subs	r4, r0, #0
   10a00:	bne	107dc <close@plt+0x70>
   10a04:	mov	r2, #5
   10a08:	ldr	r1, [pc, #196]	; 10ad4 <close@plt+0x368>
   10a0c:	bl	10688 <dcgettext@plt>
   10a10:	ldr	r2, [r7]
   10a14:	ldr	r3, [pc, #188]	; 10ad8 <close@plt+0x36c>
   10a18:	mov	r1, r0
   10a1c:	mov	r0, #1
   10a20:	bl	10718 <__printf_chk@plt>
   10a24:	mov	r0, r4
   10a28:	bl	106f4 <exit@plt>
   10a2c:	mov	r2, #5
   10a30:	ldr	r1, [pc, #164]	; 10adc <close@plt+0x370>
   10a34:	mov	r0, #0
   10a38:	bl	10688 <dcgettext@plt>
   10a3c:	mov	r1, #0
   10a40:	mov	r2, r0
   10a44:	mov	r0, #1
   10a48:	bl	10eac <close@plt+0x740>
   10a4c:	b	10968 <close@plt+0x1fc>
   10a50:	ldr	r1, [pc, #136]	; 10ae0 <close@plt+0x374>
   10a54:	mov	r0, #0
   10a58:	bl	10688 <dcgettext@plt>
   10a5c:	mov	r1, r0
   10a60:	mov	r0, #1
   10a64:	bl	10718 <__printf_chk@plt>
   10a68:	b	1099c <close@plt+0x230>
   10a6c:	ldr	r1, [pc, #112]	; 10ae4 <close@plt+0x378>
   10a70:	b	10a54 <close@plt+0x2e8>
   10a74:	ldr	r1, [pc, #108]	; 10ae8 <close@plt+0x37c>
   10a78:	b	10a54 <close@plt+0x2e8>
   10a7c:	ldr	r1, [pc, #104]	; 10aec <close@plt+0x380>
   10a80:	b	10a54 <close@plt+0x2e8>
   10a84:	bl	1070c <__errno_location@plt>
   10a88:	ldr	r2, [pc, #96]	; 10af0 <close@plt+0x384>
   10a8c:	ldr	r1, [r0]
   10a90:	mov	r0, #1
   10a94:	bl	10eac <close@plt+0x740>
   10a98:	b	109cc <close@plt+0x260>
   10a9c:	ldr	r1, [pc, #80]	; 10af4 <close@plt+0x388>
   10aa0:	b	10a54 <close@plt+0x2e8>
   10aa4:	bl	10694 <__stack_chk_fail@plt>
   10aa8:	andeq	r1, r2, r8, lsl #30
   10aac:	andeq	r2, r2, r0, lsl #1
   10ab0:	andeq	r1, r1, r4, lsl r1
   10ab4:	andeq	r0, r1, r8, ror #31
   10ab8:	strdeq	r0, [r1], -ip
   10abc:	andeq	r1, r1, ip, lsl r0
   10ac0:	andeq	r2, r2, r8, ror r0
   10ac4:	andeq	r4, r0, r5, asr #22
   10ac8:	andeq	r1, r1, r0, asr #2
   10acc:	andeq	r4, r0, r4, asr #22
   10ad0:	andeq	r1, r1, r0
   10ad4:	andeq	r1, r1, r4
   10ad8:	andeq	r1, r1, r0, lsl r0
   10adc:	andeq	r1, r1, r4, lsr #32
   10ae0:	andeq	r1, r1, ip, ror #1
   10ae4:	muleq	r1, r4, r0
   10ae8:	andeq	r1, r1, r4, asr #1
   10aec:	andeq	r1, r1, ip, rrx
   10af0:	andeq	r1, r1, ip, asr r0
   10af4:	andeq	r1, r1, r8, lsl r1
   10af8:	mov	fp, #0
   10afc:	mov	lr, #0
   10b00:	pop	{r1}		; (ldr r1, [sp], #4)
   10b04:	mov	r2, sp
   10b08:	push	{r2}		; (str r2, [sp, #-4]!)
   10b0c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b10:	ldr	ip, [pc, #16]	; 10b28 <close@plt+0x3bc>
   10b14:	push	{ip}		; (str ip, [sp, #-4]!)
   10b18:	ldr	r0, [pc, #12]	; 10b2c <close@plt+0x3c0>
   10b1c:	ldr	r3, [pc, #12]	; 10b30 <close@plt+0x3c4>
   10b20:	bl	106b8 <__libc_start_main@plt>
   10b24:	bl	10760 <abort@plt>
   10b28:	andeq	r0, r1, ip, lsr #31
   10b2c:	andeq	r0, r1, r8, ror r7
   10b30:	andeq	r0, r1, ip, asr #30
   10b34:	ldr	r3, [pc, #20]	; 10b50 <close@plt+0x3e4>
   10b38:	ldr	r2, [pc, #20]	; 10b54 <close@plt+0x3e8>
   10b3c:	add	r3, pc, r3
   10b40:	ldr	r2, [r3, r2]
   10b44:	cmp	r2, #0
   10b48:	bxeq	lr
   10b4c:	b	106dc <__gmon_start__@plt>
   10b50:			; <UNDEFINED> instruction: 0x000114bc
   10b54:	andeq	r0, r0, r0, rrx
   10b58:	ldr	r0, [pc, #24]	; 10b78 <close@plt+0x40c>
   10b5c:	ldr	r3, [pc, #24]	; 10b7c <close@plt+0x410>
   10b60:	cmp	r3, r0
   10b64:	bxeq	lr
   10b68:	ldr	r3, [pc, #16]	; 10b80 <close@plt+0x414>
   10b6c:	cmp	r3, #0
   10b70:	bxeq	lr
   10b74:	bx	r3
   10b78:	andeq	r2, r2, ip, rrx
   10b7c:	andeq	r2, r2, ip, rrx
   10b80:	andeq	r0, r0, r0
   10b84:	ldr	r0, [pc, #36]	; 10bb0 <close@plt+0x444>
   10b88:	ldr	r1, [pc, #36]	; 10bb4 <close@plt+0x448>
   10b8c:	sub	r1, r1, r0
   10b90:	asr	r1, r1, #2
   10b94:	add	r1, r1, r1, lsr #31
   10b98:	asrs	r1, r1, #1
   10b9c:	bxeq	lr
   10ba0:	ldr	r3, [pc, #16]	; 10bb8 <close@plt+0x44c>
   10ba4:	cmp	r3, #0
   10ba8:	bxeq	lr
   10bac:	bx	r3
   10bb0:	andeq	r2, r2, ip, rrx
   10bb4:	andeq	r2, r2, ip, rrx
   10bb8:	andeq	r0, r0, r0
   10bbc:	push	{r4, lr}
   10bc0:	ldr	r4, [pc, #24]	; 10be0 <close@plt+0x474>
   10bc4:	ldrb	r3, [r4]
   10bc8:	cmp	r3, #0
   10bcc:	popne	{r4, pc}
   10bd0:	bl	10b58 <close@plt+0x3ec>
   10bd4:	mov	r3, #1
   10bd8:	strb	r3, [r4]
   10bdc:	pop	{r4, pc}
   10be0:	andeq	r2, r2, ip, ror r0
   10be4:	b	10b84 <close@plt+0x418>
   10be8:	ldr	r3, [pc, #44]	; 10c1c <close@plt+0x4b0>
   10bec:	push	{r4, lr}
   10bf0:	mov	r2, #5
   10bf4:	ldr	r1, [pc, #36]	; 10c20 <close@plt+0x4b4>
   10bf8:	mov	r0, #0
   10bfc:	ldr	r4, [r3]
   10c00:	bl	10688 <dcgettext@plt>
   10c04:	mov	r1, #1
   10c08:	mov	r2, r0
   10c0c:	mov	r0, r4
   10c10:	bl	10724 <__fprintf_chk@plt>
   10c14:	mov	r0, #1
   10c18:	bl	106f4 <exit@plt>
   10c1c:	andeq	r2, r2, r0, ror r0
   10c20:			; <UNDEFINED> instruction: 0x00010fbc
   10c24:	push	{r4, lr}
   10c28:	mov	r1, #2
   10c2c:	mov	r4, r0
   10c30:	bl	106e8 <open@plt>
   10c34:	cmp	r0, #0
   10c38:	popge	{r4, pc}
   10c3c:	mov	r1, #1
   10c40:	mov	r0, r4
   10c44:	bl	106e8 <open@plt>
   10c48:	cmp	r0, #0
   10c4c:	popge	{r4, pc}
   10c50:	mov	r0, r4
   10c54:	mov	r1, #0
   10c58:	bl	106e8 <open@plt>
   10c5c:	orr	r0, r0, r0, asr #31
   10c60:	pop	{r4, pc}
   10c64:	push	{r4, r5, lr}
   10c68:	sub	sp, sp, #12
   10c6c:	ldr	r4, [pc, #108]	; 10ce0 <close@plt+0x574>
   10c70:	mov	r3, #0
   10c74:	strb	r3, [sp, #3]
   10c78:	ldr	r3, [r4]
   10c7c:	mov	r5, r0
   10c80:	str	r3, [sp, #4]
   10c84:	bl	10754 <isatty@plt>
   10c88:	cmp	r0, #0
   10c8c:	bne	10cac <close@plt+0x540>
   10c90:	mov	r0, #0
   10c94:	ldr	r2, [sp, #4]
   10c98:	ldr	r3, [r4]
   10c9c:	cmp	r2, r3
   10ca0:	bne	10cdc <close@plt+0x570>
   10ca4:	add	sp, sp, #12
   10ca8:	pop	{r4, r5, pc}
   10cac:	mov	r0, r5
   10cb0:	add	r2, sp, #3
   10cb4:	ldr	r1, [pc, #40]	; 10ce4 <close@plt+0x578>
   10cb8:	bl	106ac <ioctl@plt>
   10cbc:	cmp	r0, #0
   10cc0:	bne	10c90 <close@plt+0x524>
   10cc4:	ldrb	r0, [sp, #3]
   10cc8:	sub	r0, r0, #1
   10ccc:	cmp	r0, #1
   10cd0:	movhi	r0, #0
   10cd4:	movls	r0, #1
   10cd8:	b	10c94 <close@plt+0x528>
   10cdc:	bl	10694 <__stack_chk_fail@plt>
   10ce0:	andeq	r1, r2, r8, lsl #30
   10ce4:	andeq	r4, r0, r3, lsr fp
   10ce8:	push	{r4, r5, r6, lr}
   10cec:	subs	r5, r0, #0
   10cf0:	beq	10d14 <close@plt+0x5a8>
   10cf4:	bl	10c24 <close@plt+0x4b8>
   10cf8:	subs	r4, r0, #0
   10cfc:	blt	10dac <close@plt+0x640>
   10d00:	bl	10c64 <close@plt+0x4f8>
   10d04:	cmp	r0, #0
   10d08:	beq	10da4 <close@plt+0x638>
   10d0c:	mov	r0, r4
   10d10:	pop	{r4, r5, r6, pc}
   10d14:	ldr	r5, [pc, #196]	; 10de0 <close@plt+0x674>
   10d18:	ldr	r0, [pc, #196]	; 10de4 <close@plt+0x678>
   10d1c:	b	10d2c <close@plt+0x5c0>
   10d20:	ldr	r0, [r5], #4
   10d24:	cmp	r0, #0
   10d28:	beq	10d58 <close@plt+0x5ec>
   10d2c:	bl	10c24 <close@plt+0x4b8>
   10d30:	subs	r4, r0, #0
   10d34:	blt	10d20 <close@plt+0x5b4>
   10d38:	bl	10c64 <close@plt+0x4f8>
   10d3c:	cmp	r0, #0
   10d40:	bne	10d0c <close@plt+0x5a0>
   10d44:	mov	r0, r4
   10d48:	bl	1076c <close@plt>
   10d4c:	ldr	r0, [r5], #4
   10d50:	cmp	r0, #0
   10d54:	bne	10d2c <close@plt+0x5c0>
   10d58:	mov	r4, r0
   10d5c:	mov	r0, r4
   10d60:	bl	10c64 <close@plt+0x4f8>
   10d64:	cmp	r0, #0
   10d68:	bne	10d0c <close@plt+0x5a0>
   10d6c:	add	r4, r4, #1
   10d70:	cmp	r4, #3
   10d74:	bne	10d5c <close@plt+0x5f0>
   10d78:	ldr	r3, [pc, #104]	; 10de8 <close@plt+0x67c>
   10d7c:	mov	r2, #5
   10d80:	ldr	r1, [pc, #100]	; 10dec <close@plt+0x680>
   10d84:	ldr	r4, [r3]
   10d88:	bl	10688 <dcgettext@plt>
   10d8c:	mov	r1, #1
   10d90:	mov	r2, r0
   10d94:	mov	r0, r4
   10d98:	bl	10724 <__fprintf_chk@plt>
   10d9c:	mov	r0, #1
   10da0:	bl	106f4 <exit@plt>
   10da4:	mov	r0, r4
   10da8:	bl	1076c <close@plt>
   10dac:	ldr	r3, [pc, #52]	; 10de8 <close@plt+0x67c>
   10db0:	mov	r2, #5
   10db4:	ldr	r1, [pc, #52]	; 10df0 <close@plt+0x684>
   10db8:	mov	r0, #0
   10dbc:	ldr	r4, [r3]
   10dc0:	bl	10688 <dcgettext@plt>
   10dc4:	mov	r3, r5
   10dc8:	mov	r1, #1
   10dcc:	mov	r2, r0
   10dd0:	mov	r0, r4
   10dd4:	bl	10724 <__fprintf_chk@plt>
   10dd8:	mov	r0, #1
   10ddc:	bl	106f4 <exit@plt>
   10de0:	andeq	r1, r1, r4, asr r1
   10de4:	andeq	r1, r1, ip, ror #2
   10de8:	andeq	r2, r2, r0, ror r0
   10dec:	muleq	r1, r0, r1
   10df0:	andeq	r1, r1, ip, ror r1
   10df4:	push	{r1, r2, r3}
   10df8:	push	{r4, r5, r6, r7, lr}
   10dfc:	sub	sp, sp, #8
   10e00:	ldr	r5, [pc, #144]	; 10e98 <close@plt+0x72c>
   10e04:	ldr	r4, [pc, #144]	; 10e9c <close@plt+0x730>
   10e08:	ldr	r3, [pc, #144]	; 10ea0 <close@plt+0x734>
   10e0c:	ldr	r1, [r5]
   10e10:	ldr	r7, [sp, #28]
   10e14:	add	ip, sp, #32
   10e18:	mov	r6, r0
   10e1c:	ldr	r3, [r3]
   10e20:	ldr	r2, [pc, #124]	; 10ea4 <close@plt+0x738>
   10e24:	str	r1, [sp, #4]
   10e28:	ldr	r0, [r4]
   10e2c:	mov	r1, #1
   10e30:	str	ip, [sp]
   10e34:	bl	10724 <__fprintf_chk@plt>
   10e38:	mov	r2, r7
   10e3c:	ldr	r0, [r4]
   10e40:	ldr	r3, [sp]
   10e44:	mov	r1, #1
   10e48:	bl	106d0 <__vfprintf_chk@plt>
   10e4c:	cmp	r6, #0
   10e50:	ble	10e74 <close@plt+0x708>
   10e54:	mov	r0, r6
   10e58:	ldr	r4, [r4]
   10e5c:	bl	106c4 <strerror@plt>
   10e60:	ldr	r2, [pc, #64]	; 10ea8 <close@plt+0x73c>
   10e64:	mov	r1, #1
   10e68:	mov	r3, r0
   10e6c:	mov	r0, r4
   10e70:	bl	10724 <__fprintf_chk@plt>
   10e74:	ldr	r2, [sp, #4]
   10e78:	ldr	r3, [r5]
   10e7c:	cmp	r2, r3
   10e80:	bne	10e94 <close@plt+0x728>
   10e84:	add	sp, sp, #8
   10e88:	pop	{r4, r5, r6, r7, lr}
   10e8c:	add	sp, sp, #12
   10e90:	bx	lr
   10e94:	bl	10694 <__stack_chk_fail@plt>
   10e98:	andeq	r1, r2, r8, lsl #30
   10e9c:	andeq	r2, r2, r0, ror r0
   10ea0:	andeq	r2, r2, r0, lsl #1
   10ea4:	andeq	r1, r1, ip, lsl #4
   10ea8:	andeq	r1, r1, r4, lsl r2
   10eac:	push	{r2, r3}
   10eb0:	mov	r5, r1
   10eb4:	ldr	r2, [pc, #124]	; 10f38 <close@plt+0x7cc>
   10eb8:	push	{r7, lr}
   10ebc:	sub	sp, sp, #8
   10ec0:	ldr	r4, [pc, #116]	; 10f3c <close@plt+0x7d0>
   10ec4:	ldr	r3, [pc, #116]	; 10f40 <close@plt+0x7d4>
   10ec8:	ldr	lr, [r2]
   10ecc:	ldr	r7, [sp, #16]
   10ed0:	add	ip, sp, #20
   10ed4:	ldr	r3, [r3]
   10ed8:	ldr	r2, [pc, #100]	; 10f44 <close@plt+0x7d8>
   10edc:	mov	r1, #1
   10ee0:	mov	r6, r0
   10ee4:	ldr	r0, [r4]
   10ee8:	str	lr, [sp, #4]
   10eec:	str	ip, [sp]
   10ef0:	bl	10724 <__fprintf_chk@plt>
   10ef4:	mov	r2, r7
   10ef8:	ldr	r0, [r4]
   10efc:	ldr	r3, [sp]
   10f00:	mov	r1, #1
   10f04:	bl	106d0 <__vfprintf_chk@plt>
   10f08:	cmp	r5, #0
   10f0c:	ble	10f30 <close@plt+0x7c4>
   10f10:	mov	r0, r5
   10f14:	ldr	r4, [r4]
   10f18:	bl	106c4 <strerror@plt>
   10f1c:	ldr	r2, [pc, #36]	; 10f48 <close@plt+0x7dc>
   10f20:	mov	r1, #1
   10f24:	mov	r3, r0
   10f28:	mov	r0, r4
   10f2c:	bl	10724 <__fprintf_chk@plt>
   10f30:	mov	r0, r6
   10f34:	bl	106f4 <exit@plt>
   10f38:	andeq	r1, r2, r8, lsl #30
   10f3c:	andeq	r2, r2, r0, ror r0
   10f40:	andeq	r2, r2, r0, lsl #1
   10f44:	andeq	r1, r1, ip, lsl #4
   10f48:	andeq	r1, r1, r4, lsl r2
   10f4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f50:	mov	r7, r0
   10f54:	ldr	r6, [pc, #72]	; 10fa4 <close@plt+0x838>
   10f58:	ldr	r5, [pc, #72]	; 10fa8 <close@plt+0x83c>
   10f5c:	add	r6, pc, r6
   10f60:	add	r5, pc, r5
   10f64:	sub	r6, r6, r5
   10f68:	mov	r8, r1
   10f6c:	mov	r9, r2
   10f70:	bl	1065c <strcmp@plt-0x20>
   10f74:	asrs	r6, r6, #2
   10f78:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f7c:	mov	r4, #0
   10f80:	add	r4, r4, #1
   10f84:	ldr	r3, [r5], #4
   10f88:	mov	r2, r9
   10f8c:	mov	r1, r8
   10f90:	mov	r0, r7
   10f94:	blx	r3
   10f98:	cmp	r6, r4
   10f9c:	bne	10f80 <close@plt+0x814>
   10fa0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10fa4:	andeq	r0, r1, r0, lsr #31
   10fa8:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   10fac:	bx	lr

Disassembly of section .fini:

00010fb0 <.fini>:
   10fb0:	push	{r3, lr}
   10fb4:	pop	{r3, pc}
