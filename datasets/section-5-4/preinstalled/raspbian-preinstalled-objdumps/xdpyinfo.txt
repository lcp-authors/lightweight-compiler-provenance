
raspbian-preinstalled/xdpyinfo:     file format elf32-littlearm


Disassembly of section .init:

00011534 <_init@@Base>:
   11534:	push	{r3, lr}
   11538:	bl	12b40 <XMaxRequestSize@plt+0x1208>
   1153c:	pop	{r3, pc}

Disassembly of section .plt:

00011540 <calloc@plt-0x14>:
   11540:	push	{lr}		; (str lr, [sp, #-4]!)
   11544:	ldr	lr, [pc, #4]	; 11550 <_init@@Base+0x1c>
   11548:	add	lr, pc, lr
   1154c:	ldr	pc, [lr, #8]!
   11550:			; <UNDEFINED> instruction: 0x00014ab0

00011554 <calloc@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #20, 20	; 0x14000
   1155c:	ldr	pc, [ip, #2736]!	; 0xab0

00011560 <strstr@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #20, 20	; 0x14000
   11568:	ldr	pc, [ip, #2728]!	; 0xaa8

0001156c <raise@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #20, 20	; 0x14000
   11574:	ldr	pc, [ip, #2720]!	; 0xaa0

00011578 <XListInputDevices@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #20, 20	; 0x14000
   11580:	ldr	pc, [ip, #2712]!	; 0xa98

00011584 <XShmPixmapFormat@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #20, 20	; 0x14000
   1158c:	ldr	pc, [ip, #2704]!	; 0xa90

00011590 <strcmp@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #20, 20	; 0x14000
   11598:	ldr	pc, [ip, #2696]!	; 0xa88

0001159c <XF86DGAQueryDirectVideo@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #20, 20	; 0x14000
   115a4:	ldr	pc, [ip, #2688]!	; 0xa80

000115a8 <XListExtensions@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #20, 20	; 0x14000
   115b0:	ldr	pc, [ip, #2680]!	; 0xa78

000115b4 <free@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #20, 20	; 0x14000
   115bc:	ldr	pc, [ip, #2672]!	; 0xa70

000115c0 <xcb_query_extension@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #20, 20	; 0x14000
   115c8:	ldr	pc, [ip, #2664]!	; 0xa68

000115cc <XSyncInitialize@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #20, 20	; 0x14000
   115d4:	ldr	pc, [ip, #2656]!	; 0xa60

000115d8 <XdbeGetVisualInfo@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #20, 20	; 0x14000
   115e0:	ldr	pc, [ip, #2648]!	; 0xa58

000115e4 <XListPixmapFormats@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #20, 20	; 0x14000
   115ec:	ldr	pc, [ip, #2640]!	; 0xa50

000115f0 <XDisplayHeightMM@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #20, 20	; 0x14000
   115f8:	ldr	pc, [ip, #2632]!	; 0xa48

000115fc <__stack_chk_fail@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #20, 20	; 0x14000
   11604:	ldr	pc, [ip, #2624]!	; 0xa40

00011608 <XF86VidModeGetMonitor@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #20, 20	; 0x14000
   11610:	ldr	pc, [ip, #2616]!	; 0xa38

00011614 <XineramaQueryScreens@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #20, 20	; 0x14000
   1161c:	ldr	pc, [ip, #2608]!	; 0xa30

00011620 <XDisplayWidth@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #20, 20	; 0x14000
   11628:	ldr	pc, [ip, #2600]!	; 0xa28

0001162c <XFree@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #20, 20	; 0x14000
   11634:	ldr	pc, [ip, #2592]!	; 0xa20

00011638 <xcb_query_extension_reply@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #20, 20	; 0x14000
   11640:	ldr	pc, [ip, #2584]!	; 0xa18

00011644 <XF86VidModeQueryVersion@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #20, 20	; 0x14000
   1164c:	ldr	pc, [ip, #2576]!	; 0xa10

00011650 <XDisplayWidthMM@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #20, 20	; 0x14000
   11658:	ldr	pc, [ip, #2568]!	; 0xa08

0001165c <XdbeQueryExtension@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #20, 20	; 0x14000
   11664:	ldr	pc, [ip, #2560]!	; 0xa00

00011668 <XSyncFreeSystemCounterList@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #20, 20	; 0x14000
   11670:	ldr	pc, [ip, #2552]!	; 0x9f8

00011674 <perror@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #20, 20	; 0x14000
   1167c:	ldr	pc, [ip, #2544]!	; 0x9f0

00011680 <XGetVisualInfo@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #20, 20	; 0x14000
   11688:	ldr	pc, [ip, #2536]!	; 0x9e8

0001168c <XDisplayMotionBufferSize@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #20, 20	; 0x14000
   11694:	ldr	pc, [ip, #2528]!	; 0x9e0

00011698 <XExtendedMaxRequestSize@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #20, 20	; 0x14000
   116a0:	ldr	pc, [ip, #2520]!	; 0x9d8

000116a4 <_IO_putc@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #20, 20	; 0x14000
   116ac:	ldr	pc, [ip, #2512]!	; 0x9d0

000116b0 <fwrite@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #20, 20	; 0x14000
   116b8:	ldr	pc, [ip, #2504]!	; 0x9c8

000116bc <XmbufGetScreenInfo@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #20, 20	; 0x14000
   116c4:	ldr	pc, [ip, #2496]!	; 0x9c0

000116c8 <strcpy@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #20, 20	; 0x14000
   116d0:	ldr	pc, [ip, #2488]!	; 0x9b8

000116d4 <XTestQueryExtension@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #20, 20	; 0x14000
   116dc:	ldr	pc, [ip, #2480]!	; 0x9b0

000116e0 <XineramaQueryVersion@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #20, 20	; 0x14000
   116e8:	ldr	pc, [ip, #2472]!	; 0x9a8

000116ec <XF86VidModeGetModeLine@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #20, 20	; 0x14000
   116f4:	ldr	pc, [ip, #2464]!	; 0x9a0

000116f8 <puts@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #20, 20	; 0x14000
   11700:	ldr	pc, [ip, #2456]!	; 0x998

00011704 <XSyncListSystemCounters@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #20, 20	; 0x14000
   1170c:	ldr	pc, [ip, #2448]!	; 0x990

00011710 <__libc_start_main@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #20, 20	; 0x14000
   11718:	ldr	pc, [ip, #2440]!	; 0x988

0001171c <XVisualIDFromVisual@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #20, 20	; 0x14000
   11724:	ldr	pc, [ip, #2432]!	; 0x980

00011728 <XOpenDisplay@plt>:
   11728:	add	ip, pc, #0, 12
   1172c:	add	ip, ip, #20, 20	; 0x14000
   11730:	ldr	pc, [ip, #2424]!	; 0x978

00011734 <XmbufGetVersion@plt>:
   11734:	add	ip, pc, #0, 12
   11738:	add	ip, ip, #20, 20	; 0x14000
   1173c:	ldr	pc, [ip, #2416]!	; 0x970

00011740 <__gmon_start__@plt>:
   11740:	add	ip, pc, #0, 12
   11744:	add	ip, ip, #20, 20	; 0x14000
   11748:	ldr	pc, [ip, #2408]!	; 0x968

0001174c <exit@plt>:
   1174c:	add	ip, pc, #0, 12
   11750:	add	ip, ip, #20, 20	; 0x14000
   11754:	ldr	pc, [ip, #2400]!	; 0x960

00011758 <XFreeExtensionList@plt>:
   11758:	add	ip, pc, #0, 12
   1175c:	add	ip, ip, #20, 20	; 0x14000
   11760:	ldr	pc, [ip, #2392]!	; 0x958

00011764 <XF86VidModeGetAllModeLines@plt>:
   11764:	add	ip, pc, #0, 12
   11768:	add	ip, ip, #20, 20	; 0x14000
   1176c:	ldr	pc, [ip, #2384]!	; 0x950

00011770 <strlen@plt>:
   11770:	add	ip, pc, #0, 12
   11774:	add	ip, ip, #20, 20	; 0x14000
   11778:	ldr	pc, [ip, #2376]!	; 0x948

0001177c <XGetExtensionVersion@plt>:
   1177c:	add	ip, pc, #0, 12
   11780:	add	ip, ip, #20, 20	; 0x14000
   11784:	ldr	pc, [ip, #2368]!	; 0x940

00011788 <XRenderQueryVersion@plt>:
   11788:	add	ip, pc, #0, 12
   1178c:	add	ip, ip, #20, 20	; 0x14000
   11790:	ldr	pc, [ip, #2360]!	; 0x938

00011794 <XSetErrorHandler@plt>:
   11794:	add	ip, pc, #0, 12
   11798:	add	ip, ip, #20, 20	; 0x14000
   1179c:	ldr	pc, [ip, #2352]!	; 0x930

000117a0 <XQueryExtension@plt>:
   117a0:	add	ip, pc, #0, 12
   117a4:	add	ip, ip, #20, 20	; 0x14000
   117a8:	ldr	pc, [ip, #2344]!	; 0x928

000117ac <XSyncValueHigh32@plt>:
   117ac:	add	ip, pc, #0, 12
   117b0:	add	ip, ip, #20, 20	; 0x14000
   117b4:	ldr	pc, [ip, #2336]!	; 0x920

000117b8 <XDisplayName@plt>:
   117b8:	add	ip, pc, #0, 12
   117bc:	add	ip, ip, #20, 20	; 0x14000
   117c0:	ldr	pc, [ip, #2328]!	; 0x918

000117c4 <putchar@plt>:
   117c4:	add	ip, pc, #0, 12
   117c8:	add	ip, ip, #20, 20	; 0x14000
   117cc:	ldr	pc, [ip, #2320]!	; 0x910

000117d0 <__printf_chk@plt>:
   117d0:	add	ip, pc, #0, 12
   117d4:	add	ip, ip, #20, 20	; 0x14000
   117d8:	ldr	pc, [ip, #2312]!	; 0x908

000117dc <XRenderFindVisualFormat@plt>:
   117dc:	add	ip, pc, #0, 12
   117e0:	add	ip, ip, #20, 20	; 0x14000
   117e4:	ldr	pc, [ip, #2304]!	; 0x900

000117e8 <XShmQueryVersion@plt>:
   117e8:	add	ip, pc, #0, 12
   117ec:	add	ip, ip, #20, 20	; 0x14000
   117f0:	ldr	pc, [ip, #2296]!	; 0x8f8

000117f4 <__fprintf_chk@plt>:
   117f4:	add	ip, pc, #0, 12
   117f8:	add	ip, ip, #20, 20	; 0x14000
   117fc:	ldr	pc, [ip, #2288]!	; 0x8f0

00011800 <XQueryBestSize@plt>:
   11800:	add	ip, pc, #0, 12
   11804:	add	ip, ip, #20, 20	; 0x14000
   11808:	ldr	pc, [ip, #2280]!	; 0x8e8

0001180c <XListDepths@plt>:
   1180c:	add	ip, pc, #0, 12
   11810:	add	ip, ip, #20, 20	; 0x14000
   11814:	ldr	pc, [ip, #2272]!	; 0x8e0

00011818 <XGetXCBConnection@plt>:
   11818:	add	ip, pc, #0, 12
   1181c:	add	ip, ip, #20, 20	; 0x14000
   11820:	ldr	pc, [ip, #2264]!	; 0x8d8

00011824 <XineramaIsActive@plt>:
   11824:	add	ip, pc, #0, 12
   11828:	add	ip, ip, #20, 20	; 0x14000
   1182c:	ldr	pc, [ip, #2256]!	; 0x8d0

00011830 <XShapeQueryVersion@plt>:
   11830:	add	ip, pc, #0, 12
   11834:	add	ip, ip, #20, 20	; 0x14000
   11838:	ldr	pc, [ip, #2248]!	; 0x8c8

0001183c <XdbeFreeVisualInfo@plt>:
   1183c:	add	ip, pc, #0, 12
   11840:	add	ip, ip, #20, 20	; 0x14000
   11844:	ldr	pc, [ip, #2240]!	; 0x8c0

00011848 <XkbQueryExtension@plt>:
   11848:	add	ip, pc, #0, 12
   1184c:	add	ip, ip, #20, 20	; 0x14000
   11850:	ldr	pc, [ip, #2232]!	; 0x8b8

00011854 <XRecordQueryVersion@plt>:
   11854:	add	ip, pc, #0, 12
   11858:	add	ip, ip, #20, 20	; 0x14000
   1185c:	ldr	pc, [ip, #2224]!	; 0x8b0

00011860 <XDisplayKeycodes@plt>:
   11860:	add	ip, pc, #0, 12
   11864:	add	ip, ip, #20, 20	; 0x14000
   11868:	ldr	pc, [ip, #2216]!	; 0x8a8

0001186c <XDisplayHeight@plt>:
   1186c:	add	ip, pc, #0, 12
   11870:	add	ip, ip, #20, 20	; 0x14000
   11874:	ldr	pc, [ip, #2208]!	; 0x8a0

00011878 <fputc@plt>:
   11878:	add	ip, pc, #0, 12
   1187c:	add	ip, ip, #20, 20	; 0x14000
   11880:	ldr	pc, [ip, #2200]!	; 0x898

00011884 <XF86DGAQueryVersion@plt>:
   11884:	add	ip, pc, #0, 12
   11888:	add	ip, ip, #20, 20	; 0x14000
   1188c:	ldr	pc, [ip, #2192]!	; 0x890

00011890 <XCompositeQueryExtension@plt>:
   11890:	add	ip, pc, #0, 12
   11894:	add	ip, ip, #20, 20	; 0x14000
   11898:	ldr	pc, [ip, #2184]!	; 0x888

0001189c <qsort@plt>:
   1189c:	add	ip, pc, #0, 12
   118a0:	add	ip, ip, #20, 20	; 0x14000
   118a4:	ldr	pc, [ip, #2176]!	; 0x880

000118a8 <XRenderFindFormat@plt>:
   118a8:	add	ip, pc, #0, 12
   118ac:	add	ip, ip, #20, 20	; 0x14000
   118b0:	ldr	pc, [ip, #2168]!	; 0x878

000118b4 <XCompositeQueryVersion@plt>:
   118b4:	add	ip, pc, #0, 12
   118b8:	add	ip, ip, #20, 20	; 0x14000
   118bc:	ldr	pc, [ip, #2160]!	; 0x870

000118c0 <XFreeDeviceList@plt>:
   118c0:	add	ip, pc, #0, 12
   118c4:	add	ip, ip, #20, 20	; 0x14000
   118c8:	ldr	pc, [ip, #2152]!	; 0x868

000118cc <XSyncValueLow32@plt>:
   118cc:	add	ip, pc, #0, 12
   118d0:	add	ip, ip, #20, 20	; 0x14000
   118d4:	ldr	pc, [ip, #2144]!	; 0x860

000118d8 <XRenderQueryFilters@plt>:
   118d8:	add	ip, pc, #0, 12
   118dc:	add	ip, ip, #20, 20	; 0x14000
   118e0:	ldr	pc, [ip, #2136]!	; 0x858

000118e4 <XF86DGAGetVideoLL@plt>:
   118e4:	add	ip, pc, #0, 12
   118e8:	add	ip, ip, #20, 20	; 0x14000
   118ec:	ldr	pc, [ip, #2128]!	; 0x850

000118f0 <XCloseDisplay@plt>:
   118f0:	add	ip, pc, #0, 12
   118f4:	add	ip, ip, #20, 20	; 0x14000
   118f8:	ldr	pc, [ip, #2120]!	; 0x848

000118fc <XRenderQuerySubpixelOrder@plt>:
   118fc:	add	ip, pc, #0, 12
   11900:	add	ip, ip, #20, 20	; 0x14000
   11904:	ldr	pc, [ip, #2112]!	; 0x840

00011908 <strncmp@plt>:
   11908:	add	ip, pc, #0, 12
   1190c:	add	ip, ip, #20, 20	; 0x14000
   11910:	ldr	pc, [ip, #2104]!	; 0x838

00011914 <abort@plt>:
   11914:	add	ip, pc, #0, 12
   11918:	add	ip, ip, #20, 20	; 0x14000
   1191c:	ldr	pc, [ip, #2096]!	; 0x830

00011920 <XGetInputFocus@plt>:
   11920:	add	ip, pc, #0, 12
   11924:	add	ip, ip, #20, 20	; 0x14000
   11928:	ldr	pc, [ip, #2088]!	; 0x828

0001192c <__snprintf_chk@plt>:
   1192c:	add	ip, pc, #0, 12
   11930:	add	ip, ip, #20, 20	; 0x14000
   11934:	ldr	pc, [ip, #2080]!	; 0x820

00011938 <XMaxRequestSize@plt>:
   11938:	add	ip, pc, #0, 12
   1193c:	add	ip, ip, #20, 20	; 0x14000
   11940:	ldr	pc, [ip, #2072]!	; 0x818

Disassembly of section .text:

00011948 <.text>:
   11948:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1194c:	vpush	{d8-d11}
   11950:	ldr	r3, [pc, #1880]	; 120b0 <XMaxRequestSize@plt+0x778>
   11954:	mov	r8, r1
   11958:	cmp	r0, #1
   1195c:	ldr	r2, [r1]
   11960:	ldr	r1, [pc, #2264]	; 12240 <XMaxRequestSize@plt+0x908>
   11964:	sub	sp, sp, #212	; 0xd4
   11968:	ldr	r3, [r3]
   1196c:	str	r2, [r1]
   11970:	str	r3, [sp, #204]	; 0xcc
   11974:	ble	12ab0 <XMaxRequestSize@plt+0x1178>
   11978:	mov	r3, #0
   1197c:	mov	r9, r0
   11980:	ldr	sl, [pc, #1836]	; 120b4 <XMaxRequestSize@plt+0x77c>
   11984:	mov	r4, #1
   11988:	str	r3, [sp, #16]
   1198c:	b	119b4 <XMaxRequestSize@plt+0x7c>
   11990:	add	r4, r4, #1
   11994:	cmp	r9, r4
   11998:	ble	12530 <XMaxRequestSize@plt+0xbf8>
   1199c:	add	r6, r8, r6
   119a0:	ldr	r3, [r6, #4]
   119a4:	str	r3, [sp, #16]
   119a8:	add	r4, r4, #1
   119ac:	cmp	r9, r4
   119b0:	ble	11a10 <XMaxRequestSize@plt+0xd8>
   119b4:	ldr	r5, [r8, r4, lsl #2]
   119b8:	lsl	r6, r4, #2
   119bc:	mov	r0, r5
   119c0:	bl	11770 <strlen@plt>
   119c4:	mov	r1, r5
   119c8:	mov	r2, r0
   119cc:	mov	r7, r0
   119d0:	mov	r0, sl
   119d4:	bl	11908 <strncmp@plt>
   119d8:	cmp	r0, #0
   119dc:	beq	11990 <XMaxRequestSize@plt+0x58>
   119e0:	mov	r2, r7
   119e4:	mov	r1, r5
   119e8:	ldr	r0, [pc, #1736]	; 120b8 <XMaxRequestSize@plt+0x780>
   119ec:	bl	11908 <strncmp@plt>
   119f0:	cmp	r0, #0
   119f4:	bne	11b24 <XMaxRequestSize@plt+0x1ec>
   119f8:	ldr	r2, [pc, #2112]	; 12240 <XMaxRequestSize@plt+0x908>
   119fc:	add	r4, r4, #1
   11a00:	mov	r3, #1
   11a04:	cmp	r9, r4
   11a08:	str	r3, [r2, #8]
   11a0c:	bgt	119b4 <XMaxRequestSize@plt+0x7c>
   11a10:	ldr	r0, [sp, #16]
   11a14:	bl	11728 <XOpenDisplay@plt>
   11a18:	subs	sl, r0, #0
   11a1c:	beq	12550 <XMaxRequestSize@plt+0xc18>
   11a20:	ldr	r2, [sl, #128]	; 0x80
   11a24:	ldr	r1, [pc, #1680]	; 120bc <XMaxRequestSize@plt+0x784>
   11a28:	mov	r0, #1
   11a2c:	bl	117d0 <__printf_chk@plt>
   11a30:	ldrd	r2, [sl, #16]
   11a34:	ldr	r1, [pc, #1668]	; 120c0 <XMaxRequestSize@plt+0x788>
   11a38:	mov	r0, #1
   11a3c:	bl	117d0 <__printf_chk@plt>
   11a40:	ldr	r2, [sl, #24]
   11a44:	ldr	r1, [pc, #1656]	; 120c4 <XMaxRequestSize@plt+0x78c>
   11a48:	mov	r0, #1
   11a4c:	bl	117d0 <__printf_chk@plt>
   11a50:	ldr	r2, [sl, #76]	; 0x4c
   11a54:	ldr	r1, [pc, #1644]	; 120c8 <XMaxRequestSize@plt+0x790>
   11a58:	mov	r0, #1
   11a5c:	bl	117d0 <__printf_chk@plt>
   11a60:	ldr	r1, [pc, #1636]	; 120cc <XMaxRequestSize@plt+0x794>
   11a64:	ldr	r0, [sl, #24]
   11a68:	bl	11560 <strstr@plt>
   11a6c:	cmp	r0, #0
   11a70:	beq	11c38 <XMaxRequestSize@plt+0x300>
   11a74:	ldr	r4, [sl, #76]	; 0x4c
   11a78:	ldr	r1, [pc, #1616]	; 120d0 <XMaxRequestSize@plt+0x798>
   11a7c:	mov	r0, #1
   11a80:	bl	117d0 <__printf_chk@plt>
   11a84:	cmp	r4, #336	; 0x150
   11a88:	blt	11be4 <XMaxRequestSize@plt+0x2ac>
   11a8c:	mov	r1, #1000	; 0x3e8
   11a90:	mov	r0, r4
   11a94:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   11a98:	ldr	r3, [pc, #1588]	; 120d4 <XMaxRequestSize@plt+0x79c>
   11a9c:	cmp	r4, r3
   11aa0:	mov	r5, r0
   11aa4:	ble	12a2c <XMaxRequestSize@plt+0x10f4>
   11aa8:	ldr	r3, [pc, #1576]	; 120d8 <XMaxRequestSize@plt+0x7a0>
   11aac:	cmp	r4, r3
   11ab0:	ble	129ec <XMaxRequestSize@plt+0x10b4>
   11ab4:	ldr	r1, [pc, #1568]	; 120dc <XMaxRequestSize@plt+0x7a4>
   11ab8:	mov	r0, r4
   11abc:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   11ac0:	mov	r1, #100	; 0x64
   11ac4:	bl	14720 <XMaxRequestSize@plt+0x2de8>
   11ac8:	mov	r0, r4
   11acc:	mov	r7, r1
   11ad0:	ldr	r1, [pc, #1544]	; 120e0 <XMaxRequestSize@plt+0x7a8>
   11ad4:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   11ad8:	mov	r1, #100	; 0x64
   11adc:	mov	r6, r0
   11ae0:	mov	r0, r5
   11ae4:	bl	14720 <XMaxRequestSize@plt+0x2de8>
   11ae8:	mov	r2, r6
   11aec:	mov	r3, r7
   11af0:	mov	r0, #1
   11af4:	str	r1, [sp]
   11af8:	ldr	r1, [pc, #1508]	; 120e4 <XMaxRequestSize@plt+0x7ac>
   11afc:	bl	117d0 <__printf_chk@plt>
   11b00:	mov	r0, r4
   11b04:	mov	r1, #1000	; 0x3e8
   11b08:	bl	14720 <XMaxRequestSize@plt+0x2de8>
   11b0c:	subs	r2, r1, #0
   11b10:	beq	11c30 <XMaxRequestSize@plt+0x2f8>
   11b14:	ldr	r1, [pc, #1844]	; 12250 <XMaxRequestSize@plt+0x918>
   11b18:	mov	r0, #1
   11b1c:	bl	117d0 <__printf_chk@plt>
   11b20:	b	11c30 <XMaxRequestSize@plt+0x2f8>
   11b24:	mov	r2, r7
   11b28:	mov	r1, r5
   11b2c:	ldr	r0, [pc, #1460]	; 120e8 <XMaxRequestSize@plt+0x7b0>
   11b30:	bl	11908 <strncmp@plt>
   11b34:	subs	fp, r0, #0
   11b38:	bne	12874 <XMaxRequestSize@plt+0xf3c>
   11b3c:	add	r4, r4, #1
   11b40:	cmp	r9, r4
   11b44:	ble	128b8 <XMaxRequestSize@plt+0xf80>
   11b48:	add	r6, r8, r6
   11b4c:	ldr	r1, [pc, #1432]	; 120ec <XMaxRequestSize@plt+0x7b4>
   11b50:	ldr	r6, [r6, #4]
   11b54:	mov	r0, r6
   11b58:	bl	11590 <strcmp@plt>
   11b5c:	cmp	r0, #0
   11b60:	bne	11b84 <XMaxRequestSize@plt+0x24c>
   11b64:	ldr	r3, [pc, #1668]	; 121f0 <XMaxRequestSize@plt+0x8b8>
   11b68:	mov	r1, #1
   11b6c:	add	r2, r3, #168	; 0xa8
   11b70:	str	r1, [r3, #8]
   11b74:	add	r3, r3, #12
   11b78:	cmp	r2, r3
   11b7c:	bne	11b70 <XMaxRequestSize@plt+0x238>
   11b80:	b	119a8 <XMaxRequestSize@plt+0x70>
   11b84:	ldr	r5, [pc, #1636]	; 121f0 <XMaxRequestSize@plt+0x8b8>
   11b88:	b	11b9c <XMaxRequestSize@plt+0x264>
   11b8c:	add	fp, fp, #1
   11b90:	cmp	fp, #14
   11b94:	add	r5, r5, #12
   11b98:	beq	11bc8 <XMaxRequestSize@plt+0x290>
   11b9c:	ldr	r1, [r5]
   11ba0:	mov	r0, r6
   11ba4:	bl	11590 <strcmp@plt>
   11ba8:	cmp	r0, #0
   11bac:	bne	11b8c <XMaxRequestSize@plt+0x254>
   11bb0:	add	r3, fp, fp, lsl #1
   11bb4:	ldr	r1, [pc, #1588]	; 121f0 <XMaxRequestSize@plt+0x8b8>
   11bb8:	mov	r2, #1
   11bbc:	add	r3, r1, r3, lsl #2
   11bc0:	str	r2, [r3, #8]
   11bc4:	b	119a8 <XMaxRequestSize@plt+0x70>
   11bc8:	ldr	r3, [pc, #1648]	; 12240 <XMaxRequestSize@plt+0x908>
   11bcc:	mov	r2, r6
   11bd0:	ldr	r1, [pc, #1304]	; 120f0 <XMaxRequestSize@plt+0x7b8>
   11bd4:	ldr	r3, [r3]
   11bd8:	mov	r0, #1
   11bdc:	bl	117d0 <__printf_chk@plt>
   11be0:	b	119a8 <XMaxRequestSize@plt+0x70>
   11be4:	mov	r1, #10
   11be8:	mov	r0, r4
   11bec:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   11bf0:	mov	r1, #10
   11bf4:	bl	14720 <XMaxRequestSize@plt+0x2de8>
   11bf8:	mov	r0, r4
   11bfc:	mov	r6, r1
   11c00:	mov	r1, #100	; 0x64
   11c04:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   11c08:	mov	r1, #10
   11c0c:	mov	r5, r0
   11c10:	mov	r0, r4
   11c14:	bl	14720 <XMaxRequestSize@plt+0x2de8>
   11c18:	mov	r3, r6
   11c1c:	mov	r2, r5
   11c20:	mov	r0, #1
   11c24:	str	r1, [sp]
   11c28:	ldr	r1, [pc, #1204]	; 120e4 <XMaxRequestSize@plt+0x7ac>
   11c2c:	bl	117d0 <__printf_chk@plt>
   11c30:	mov	r0, #10
   11c34:	bl	117c4 <putchar@plt>
   11c38:	ldr	r1, [pc, #1204]	; 120f4 <XMaxRequestSize@plt+0x7bc>
   11c3c:	ldr	r0, [sl, #24]
   11c40:	bl	11560 <strstr@plt>
   11c44:	cmp	r0, #0
   11c48:	beq	11cd8 <XMaxRequestSize@plt+0x3a0>
   11c4c:	ldr	r4, [sl, #76]	; 0x4c
   11c50:	ldr	r1, [pc, #1184]	; 120f8 <XMaxRequestSize@plt+0x7c0>
   11c54:	mov	r0, #1
   11c58:	bl	117d0 <__printf_chk@plt>
   11c5c:	ldr	r1, [pc, #1144]	; 120dc <XMaxRequestSize@plt+0x7a4>
   11c60:	mov	r0, r4
   11c64:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   11c68:	mov	r1, #100	; 0x64
   11c6c:	bl	14720 <XMaxRequestSize@plt+0x2de8>
   11c70:	mov	r0, r4
   11c74:	mov	r6, r1
   11c78:	ldr	r1, [pc, #1120]	; 120e0 <XMaxRequestSize@plt+0x7a8>
   11c7c:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   11c80:	mov	r1, #1000	; 0x3e8
   11c84:	mov	r5, r0
   11c88:	mov	r0, r4
   11c8c:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   11c90:	mov	r1, #100	; 0x64
   11c94:	bl	14720 <XMaxRequestSize@plt+0x2de8>
   11c98:	mov	r2, r5
   11c9c:	mov	r3, r6
   11ca0:	mov	r0, #1
   11ca4:	str	r1, [sp]
   11ca8:	ldr	r1, [pc, #1076]	; 120e4 <XMaxRequestSize@plt+0x7ac>
   11cac:	bl	117d0 <__printf_chk@plt>
   11cb0:	mov	r0, r4
   11cb4:	mov	r1, #1000	; 0x3e8
   11cb8:	bl	14720 <XMaxRequestSize@plt+0x2de8>
   11cbc:	subs	r2, r1, #0
   11cc0:	beq	11cd0 <XMaxRequestSize@plt+0x398>
   11cc4:	ldr	r1, [pc, #1412]	; 12250 <XMaxRequestSize@plt+0x918>
   11cc8:	mov	r0, #1
   11ccc:	bl	117d0 <__printf_chk@plt>
   11cd0:	mov	r0, #10
   11cd4:	bl	117c4 <putchar@plt>
   11cd8:	ldr	r1, [pc, #1052]	; 120fc <XMaxRequestSize@plt+0x7c4>
   11cdc:	ldr	r0, [sl, #24]
   11ce0:	bl	11560 <strstr@plt>
   11ce4:	cmp	r0, #0
   11ce8:	beq	11d48 <XMaxRequestSize@plt+0x410>
   11cec:	ldr	r6, [sl, #76]	; 0x4c
   11cf0:	ldr	r1, [pc, #1032]	; 12100 <XMaxRequestSize@plt+0x7c8>
   11cf4:	mov	r0, r6
   11cf8:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   11cfc:	ldr	r4, [pc, #1024]	; 12104 <XMaxRequestSize@plt+0x7cc>
   11d00:	ldr	r1, [pc, #1024]	; 12108 <XMaxRequestSize@plt+0x7d0>
   11d04:	mla	r4, r4, r0, r6
   11d08:	mov	r5, r0
   11d0c:	mov	r0, r4
   11d10:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   11d14:	ldr	r1, [pc, #1008]	; 1210c <XMaxRequestSize@plt+0x7d4>
   11d18:	mov	r6, r0
   11d1c:	ldr	r0, [pc, #1004]	; 12110 <XMaxRequestSize@plt+0x7d8>
   11d20:	mla	r4, r0, r6, r4
   11d24:	mov	r0, r4
   11d28:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   11d2c:	cmp	r5, #0
   11d30:	cmpgt	r6, #0
   11d34:	sub	r3, r5, #1
   11d38:	addgt	r7, r0, #2000	; 0x7d0
   11d3c:	movle	r7, r0
   11d40:	cmp	r3, #19
   11d44:	bls	12588 <XMaxRequestSize@plt+0xc50>
   11d48:	mov	r0, sl
   11d4c:	bl	11698 <XExtendedMaxRequestSize@plt>
   11d50:	cmp	r0, #0
   11d54:	beq	128a4 <XMaxRequestSize@plt+0xf6c>
   11d58:	lsl	r2, r0, #2
   11d5c:	ldr	r1, [pc, #944]	; 12114 <XMaxRequestSize@plt+0x7dc>
   11d60:	mov	r0, #1
   11d64:	bl	117d0 <__printf_chk@plt>
   11d68:	mov	r0, sl
   11d6c:	bl	1168c <XDisplayMotionBufferSize@plt>
   11d70:	ldr	r1, [pc, #928]	; 12118 <XMaxRequestSize@plt+0x7e0>
   11d74:	mov	r2, r0
   11d78:	mov	r0, #1
   11d7c:	bl	117d0 <__printf_chk@plt>
   11d80:	ldr	r2, [sl, #60]	; 0x3c
   11d84:	cmp	r2, #0
   11d88:	beq	1289c <XMaxRequestSize@plt+0xf64>
   11d8c:	cmp	r2, #1
   11d90:	ldreq	r3, [pc, #900]	; 1211c <XMaxRequestSize@plt+0x7e4>
   11d94:	bne	12630 <XMaxRequestSize@plt+0xcf8>
   11d98:	ldr	r2, [sl, #56]	; 0x38
   11d9c:	ldr	r1, [pc, #892]	; 12120 <XMaxRequestSize@plt+0x7e8>
   11da0:	str	r2, [sp]
   11da4:	mov	r0, #1
   11da8:	ldr	r2, [sl, #52]	; 0x34
   11dac:	bl	117d0 <__printf_chk@plt>
   11db0:	ldr	r2, [sl, #48]	; 0x30
   11db4:	cmp	r2, #0
   11db8:	beq	128b0 <XMaxRequestSize@plt+0xf78>
   11dbc:	cmp	r2, #1
   11dc0:	ldreq	r2, [pc, #852]	; 1211c <XMaxRequestSize@plt+0x7e4>
   11dc4:	bne	12658 <XMaxRequestSize@plt+0xd20>
   11dc8:	ldr	r1, [pc, #852]	; 12124 <XMaxRequestSize@plt+0x7ec>
   11dcc:	mov	r0, #1
   11dd0:	bl	117d0 <__printf_chk@plt>
   11dd4:	add	r1, sp, #32
   11dd8:	mov	r0, sl
   11ddc:	bl	115e4 <XListPixmapFormats@plt>
   11de0:	ldr	r2, [sp, #32]
   11de4:	ldr	r1, [pc, #828]	; 12128 <XMaxRequestSize@plt+0x7f0>
   11de8:	mov	r7, r0
   11dec:	mov	r0, #1
   11df0:	bl	117d0 <__printf_chk@plt>
   11df4:	cmp	r7, #0
   11df8:	beq	11e50 <XMaxRequestSize@plt+0x518>
   11dfc:	ldr	r0, [pc, #808]	; 1212c <XMaxRequestSize@plt+0x7f4>
   11e00:	bl	116f8 <puts@plt>
   11e04:	ldr	r3, [sp, #32]
   11e08:	cmp	r3, #0
   11e0c:	ble	11e48 <XMaxRequestSize@plt+0x510>
   11e10:	ldr	r6, [pc, #792]	; 12130 <XMaxRequestSize@plt+0x7f8>
   11e14:	mov	r4, r7
   11e18:	mov	r5, #0
   11e1c:	ldr	r1, [r4, #8]
   11e20:	ldrd	r2, [r4]
   11e24:	mov	r0, #1
   11e28:	str	r1, [sp]
   11e2c:	mov	r1, r6
   11e30:	bl	117d0 <__printf_chk@plt>
   11e34:	ldr	r3, [sp, #32]
   11e38:	add	r5, r5, #1
   11e3c:	cmp	r5, r3
   11e40:	add	r4, r4, #12
   11e44:	blt	11e1c <XMaxRequestSize@plt+0x4e4>
   11e48:	mov	r0, r7
   11e4c:	bl	1162c <XFree@plt>
   11e50:	add	r2, sp, #28
   11e54:	add	r1, sp, #24
   11e58:	mov	r0, sl
   11e5c:	bl	11860 <XDisplayKeycodes@plt>
   11e60:	ldrd	r2, [sp, #24]
   11e64:	ldr	r1, [pc, #712]	; 12134 <XMaxRequestSize@plt+0x7fc>
   11e68:	mov	r0, #1
   11e6c:	bl	117d0 <__printf_chk@plt>
   11e70:	add	r2, sp, #40	; 0x28
   11e74:	add	r1, sp, #36	; 0x24
   11e78:	mov	r0, sl
   11e7c:	bl	11920 <XGetInputFocus@plt>
   11e80:	ldr	r1, [pc, #688]	; 12138 <XMaxRequestSize@plt+0x800>
   11e84:	mov	r0, #1
   11e88:	bl	117d0 <__printf_chk@plt>
   11e8c:	ldr	r2, [sp, #36]	; 0x24
   11e90:	cmp	r2, #0
   11e94:	beq	12680 <XMaxRequestSize@plt+0xd48>
   11e98:	cmp	r2, #1
   11e9c:	bne	125f8 <XMaxRequestSize@plt+0xcc0>
   11ea0:	ldr	r0, [pc, #660]	; 1213c <XMaxRequestSize@plt+0x804>
   11ea4:	bl	116f8 <puts@plt>
   11ea8:	add	r3, sp, #208	; 0xd0
   11eac:	mov	r5, #0
   11eb0:	str	r5, [r3, #-164]!	; 0xffffff5c
   11eb4:	mov	r0, sl
   11eb8:	mov	r1, r3
   11ebc:	str	r3, [sp, #16]
   11ec0:	bl	115a8 <XListExtensions@plt>
   11ec4:	ldr	r2, [sp, #44]	; 0x2c
   11ec8:	ldr	r1, [pc, #624]	; 12140 <XMaxRequestSize@plt+0x808>
   11ecc:	mov	r4, r0
   11ed0:	mov	r0, #1
   11ed4:	bl	117d0 <__printf_chk@plt>
   11ed8:	cmp	r4, r5
   11edc:	beq	11f38 <XMaxRequestSize@plt+0x600>
   11ee0:	ldr	r3, [pc, #604]	; 12144 <XMaxRequestSize@plt+0x80c>
   11ee4:	mov	r2, #4
   11ee8:	ldr	r1, [sp, #44]	; 0x2c
   11eec:	mov	r0, r4
   11ef0:	bl	1189c <qsort@plt>
   11ef4:	ldr	r3, [pc, #836]	; 12240 <XMaxRequestSize@plt+0x908>
   11ef8:	ldr	r6, [r3, #8]
   11efc:	cmp	r6, r5
   11f00:	bne	128d8 <XMaxRequestSize@plt+0xfa0>
   11f04:	ldr	r3, [sp, #44]	; 0x2c
   11f08:	cmp	r3, r5
   11f0c:	ble	11f38 <XMaxRequestSize@plt+0x600>
   11f10:	ldr	r5, [pc, #560]	; 12148 <XMaxRequestSize@plt+0x810>
   11f14:	sub	r4, r4, #4
   11f18:	ldr	r2, [r4, #4]!
   11f1c:	mov	r1, r5
   11f20:	mov	r0, #1
   11f24:	bl	117d0 <__printf_chk@plt>
   11f28:	ldr	r3, [sp, #44]	; 0x2c
   11f2c:	add	r6, r6, #1
   11f30:	cmp	r6, r3
   11f34:	blt	11f18 <XMaxRequestSize@plt+0x5e0>
   11f38:	ldr	r2, [sl, #132]	; 0x84
   11f3c:	ldr	r1, [pc, #520]	; 1214c <XMaxRequestSize@plt+0x814>
   11f40:	mov	r0, #1
   11f44:	bl	117d0 <__printf_chk@plt>
   11f48:	ldr	r2, [sl, #136]	; 0x88
   11f4c:	ldr	r1, [pc, #508]	; 12150 <XMaxRequestSize@plt+0x818>
   11f50:	mov	r0, #1
   11f54:	bl	117d0 <__printf_chk@plt>
   11f58:	ldr	r3, [sl, #136]	; 0x88
   11f5c:	cmp	r3, #0
   11f60:	ldrle	r3, [pc, #560]	; 12198 <XMaxRequestSize@plt+0x860>
   11f64:	strle	r3, [sp, #20]
   11f68:	ble	1275c <XMaxRequestSize@plt+0xe24>
   11f6c:	vldr	d9, [pc, #300]	; 120a0 <XMaxRequestSize@plt+0x768>
   11f70:	vldr	d8, [pc, #304]	; 120a8 <XMaxRequestSize@plt+0x770>
   11f74:	mov	r9, #0
   11f78:	ldr	r3, [pc, #624]	; 121f0 <XMaxRequestSize@plt+0x8b8>
   11f7c:	mov	fp, r9
   11f80:	add	r3, r3, #168	; 0xa8
   11f84:	str	r3, [sp, #20]
   11f88:	ldr	r4, [sl, #140]	; 0x8c
   11f8c:	mov	r3, #0
   11f90:	add	r4, r4, r9
   11f94:	str	r3, [sp, #32]
   11f98:	vldr	s15, [r4, #12]
   11f9c:	vldr	s11, [r4, #20]
   11fa0:	mov	r0, #10
   11fa4:	vcvt.f64.s32	d6, s15
   11fa8:	vldr	s15, [r4, #16]
   11fac:	vcvt.f64.s32	d4, s11
   11fb0:	vldr	s11, [r4, #24]
   11fb4:	vcvt.f64.s32	d7, s15
   11fb8:	vcvt.f64.s32	d5, s11
   11fbc:	vmul.f64	d6, d6, d9
   11fc0:	vmul.f64	d7, d7, d9
   11fc4:	vdiv.f64	d10, d6, d4
   11fc8:	vdiv.f64	d11, d7, d5
   11fcc:	bl	117c4 <putchar@plt>
   11fd0:	mov	r2, fp
   11fd4:	ldr	r1, [pc, #376]	; 12154 <XMaxRequestSize@plt+0x81c>
   11fd8:	mov	r0, #1
   11fdc:	bl	117d0 <__printf_chk@plt>
   11fe0:	mov	r1, fp
   11fe4:	mov	r0, sl
   11fe8:	bl	11620 <XDisplayWidth@plt>
   11fec:	mov	r1, fp
   11ff0:	mov	r5, r0
   11ff4:	mov	r0, sl
   11ff8:	bl	1186c <XDisplayHeight@plt>
   11ffc:	mov	r1, fp
   12000:	mov	r6, r0
   12004:	mov	r0, sl
   12008:	bl	11650 <XDisplayWidthMM@plt>
   1200c:	mov	r1, fp
   12010:	mov	r7, r0
   12014:	mov	r0, sl
   12018:	bl	115f0 <XDisplayHeightMM@plt>
   1201c:	str	r7, [sp]
   12020:	mov	r3, r6
   12024:	mov	r2, r5
   12028:	ldr	r1, [pc, #296]	; 12158 <XMaxRequestSize@plt+0x820>
   1202c:	str	r0, [sp, #4]
   12030:	mov	r0, #1
   12034:	bl	117d0 <__printf_chk@plt>
   12038:	vadd.f64	d11, d11, d8
   1203c:	vadd.f64	d10, d10, d8
   12040:	ldr	r1, [pc, #276]	; 1215c <XMaxRequestSize@plt+0x824>
   12044:	mov	r0, #1
   12048:	vcvt.s32.f64	s15, d11
   1204c:	vmov	r3, s15
   12050:	vcvt.s32.f64	s15, d10
   12054:	vmov	r2, s15
   12058:	bl	117d0 <__printf_chk@plt>
   1205c:	add	r2, sp, #32
   12060:	mov	r1, fp
   12064:	mov	r0, sl
   12068:	bl	1180c <XListDepths@plt>
   1206c:	subs	r7, r0, #0
   12070:	beq	12824 <XMaxRequestSize@plt+0xeec>
   12074:	ldr	r2, [sp, #32]
   12078:	ldr	r1, [pc, #404]	; 12214 <XMaxRequestSize@plt+0x8dc>
   1207c:	mov	r0, #1
   12080:	bl	117d0 <__printf_chk@plt>
   12084:	ldr	r3, [sp, #32]
   12088:	cmp	r3, #0
   1208c:	ble	12af0 <XMaxRequestSize@plt+0x11b8>
   12090:	ldr	r6, [pc, #200]	; 12160 <XMaxRequestSize@plt+0x828>
   12094:	sub	r5, r7, #4
   12098:	mov	r8, #0
   1209c:	b	12268 <XMaxRequestSize@plt+0x930>
   120a0:	strbtvs	r6, [r6], -r6, ror #12
   120a4:	eorsmi	r6, r9, r6, ror #12
   120a8:	andeq	r0, r0, r0
   120ac:	svccc	0x00e00000
   120b0:			; <UNDEFINED> instruction: 0x00025eb0
   120b4:	andeq	r5, r1, r4, lsl #3
   120b8:			; <UNDEFINED> instruction: 0x000151b4
   120bc:	andeq	r5, r1, r8, ror r2
   120c0:	muleq	r1, r0, r2
   120c4:	andeq	r5, r1, ip, lsr #5
   120c8:	andeq	r5, r1, r4, asr #5
   120cc:	andeq	r5, r1, r4, ror #5
   120d0:	andeq	r5, r1, ip, ror #5
   120d4:	andeq	r0, r0, fp, lsr pc
   120d8:	rsbeq	r5, r2, #4177920	; 0x3fc000
   120dc:	andeq	r8, r1, r0, lsr #13
   120e0:	addseq	r9, r8, r0, lsl #13
   120e4:	andeq	r5, r1, r0, lsl #6
   120e8:	andeq	r5, r1, r8, asr #3
   120ec:	strdeq	r5, [r1], -r0
   120f0:	strdeq	r5, [r1], -r4
   120f4:	andeq	r5, r1, r8, lsl r3
   120f8:	andeq	r5, r1, r0, lsr #6
   120fc:	andeq	r5, r1, r0, lsr r3
   12100:	ldrbeq	lr, [r5, #256]!	; 0x100
   12104:	blx	299d0c <__bss_end__@@Base+0x273a14>
   12108:	andeq	r4, pc, r0, asr #4
   1210c:	andeq	r2, r0, r0, lsl r7
   12110:			; <UNDEFINED> instruction: 0xfff0bdc0
   12114:	andeq	r5, r1, r8, asr r3
   12118:	andeq	r5, r1, ip, ror r3
   1211c:	andeq	r5, r1, ip, lsl r1
   12120:	andeq	r5, r1, ip, lsr #7
   12124:	ldrdeq	r5, [r1], -ip
   12128:	strdeq	r5, [r1], -r8
   1212c:	andeq	r5, r1, r4, lsr #8
   12130:	andeq	r5, r1, r0, asr #8
   12134:	andeq	r5, r1, r4, ror r4
   12138:	andeq	r5, r1, r0, lsr #9
   1213c:	andeq	r5, r1, ip, lsr #9
   12140:	ldrdeq	r5, [r1], -ip
   12144:	andeq	r2, r1, r0, lsl #24
   12148:	andeq	r5, r1, r8, lsl #5
   1214c:	andeq	r5, r1, r0, asr #10
   12150:	andeq	r5, r1, r0, ror #10
   12154:	andeq	r5, r1, ip, ror r5
   12158:	andeq	r5, r1, ip, lsl #11
   1215c:	andeq	r5, r1, r0, asr #11
   12160:	andeq	r4, r1, r0, ror #16
   12164:	strdeq	r5, [r1], -ip
   12168:	andeq	r5, r1, r8, lsl r6
   1216c:	andeq	r5, r1, r0, asr #12
   12170:	andeq	r5, r1, r4, ror r6
   12174:	muleq	r1, r4, r6
   12178:	andeq	r5, r1, r0, asr #13
   1217c:	andeq	r5, r1, ip, lsr #2
   12180:	andeq	r5, r1, r8, lsr #2
   12184:	strdeq	r5, [r1], -r0
   12188:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   1218c:	andeq	r5, r1, r0, asr #14
   12190:	andeq	r5, r1, ip, asr r7
   12194:	eorcs	r2, r0, r0, lsr #32
   12198:	andeq	r6, r2, r0, lsl r2
   1219c:	andeq	r5, r1, r4, lsl #15
   121a0:	andeq	r5, r1, r0, lsr #15
   121a4:	andeq	r5, r1, r8, asr #2
   121a8:	muleq	r1, r0, r1
   121ac:	andeq	r5, r1, r4, asr r2
   121b0:			; <UNDEFINED> instruction: 0xffffd8f0
   121b4:	andeq	r5, r1, r4, lsr r3
   121b8:			; <UNDEFINED> instruction: 0x000154b8
   121bc:	muleq	r1, ip, r7
   121c0:	muleq	r1, r8, r3
   121c4:	andeq	r4, r1, r8, lsl #22
   121c8:	ldrdeq	r5, [r1], -r4
   121cc:	andeq	r5, r1, r0, ror #15
   121d0:	strdeq	r5, [r1], -ip
   121d4:	andeq	r4, r1, ip, ror #26
   121d8:	andeq	r5, r1, r8, lsl #11
   121dc:	andeq	r5, r1, r0, lsl r8
   121e0:	andeq	r5, r1, ip, lsr #16
   121e4:	andeq	r5, r1, r0, ror #16
   121e8:	andeq	r5, r1, r8, lsl #17
   121ec:			; <UNDEFINED> instruction: 0x000158bc
   121f0:	andeq	r6, r2, r8, ror #2
   121f4:	strdeq	r5, [r1], -r8
   121f8:	andeq	r5, r1, ip, lsr r1
   121fc:	andeq	r5, r1, r8, ror r1
   12200:	andeq	r5, r1, ip, ror #2
   12204:	andeq	r5, r1, r0, ror #2
   12208:	andeq	r5, r1, r4, asr r1
   1220c:	andeq	r5, r1, r0, asr #15
   12210:	andeq	r5, r1, r8, lsr r1
   12214:	andeq	r5, r1, r8, ror #11
   12218:	andeq	r5, r1, r0, lsr #14
   1221c:	andeq	r5, r1, r8, lsl r2
   12220:	andeq	r5, r1, r4, lsr #4
   12224:	andeq	r5, r1, r0, lsl r1
   12228:	ldrdeq	r5, [r1], -r0
   1222c:	andeq	r5, r1, ip, lsr #10
   12230:	andeq	r4, r1, r8, ror r8
   12234:	strdeq	r4, [r1], -r8
   12238:	andeq	r4, r1, r4, ror #16
   1223c:	andeq	r6, r2, r0, ror #5
   12240:	andeq	r6, r2, ip, ror #5
   12244:	andeq	r5, r1, r4, lsr r2
   12248:	andeq	r5, r1, ip, lsl #6
   1224c:	ldrdeq	r5, [r1], -r4
   12250:	andeq	r5, r1, r4, lsl r3
   12254:	strdeq	r5, [r1], -ip
   12258:	andeq	r6, r2, r4, ror #5
   1225c:	add	r8, r8, #1
   12260:	cmp	r8, r3
   12264:	bge	122b8 <XMaxRequestSize@plt+0x980>
   12268:	ldr	r2, [r5, #4]!
   1226c:	mov	r1, r6
   12270:	mov	r0, #1
   12274:	bl	117d0 <__printf_chk@plt>
   12278:	ldr	r3, [sp, #32]
   1227c:	sub	r2, r3, #1
   12280:	cmp	r2, r8
   12284:	ble	1225c <XMaxRequestSize@plt+0x924>
   12288:	ldr	r3, [pc, #-56]	; 12258 <XMaxRequestSize@plt+0x920>
   1228c:	mov	r0, #44	; 0x2c
   12290:	add	r8, r8, #1
   12294:	ldr	r1, [r3]
   12298:	bl	116a4 <_IO_putc@plt>
   1229c:	ldr	r3, [pc, #-76]	; 12258 <XMaxRequestSize@plt+0x920>
   122a0:	mov	r0, #32
   122a4:	ldr	r1, [r3]
   122a8:	bl	116a4 <_IO_putc@plt>
   122ac:	ldr	r3, [sp, #32]
   122b0:	cmp	r8, r3
   122b4:	blt	12268 <XMaxRequestSize@plt+0x930>
   122b8:	ldr	r3, [pc, #-104]	; 12258 <XMaxRequestSize@plt+0x920>
   122bc:	mov	r0, #10
   122c0:	ldr	r1, [r3]
   122c4:	bl	116a4 <_IO_putc@plt>
   122c8:	cmp	r7, #0
   122cc:	beq	122d8 <XMaxRequestSize@plt+0x9a0>
   122d0:	mov	r0, r7
   122d4:	bl	1162c <XFree@plt>
   122d8:	ldr	r3, [sl, #140]	; 0x8c
   122dc:	ldr	r1, [pc, #-384]	; 12164 <XMaxRequestSize@plt+0x82c>
   122e0:	add	r3, r3, r9
   122e4:	mov	r0, #1
   122e8:	ldr	r2, [r3, #8]
   122ec:	bl	117d0 <__printf_chk@plt>
   122f0:	ldr	r2, [sl, #140]	; 0x8c
   122f4:	ldr	r0, [pc, #-296]	; 121d4 <XMaxRequestSize@plt+0x89c>
   122f8:	add	r2, r2, r9
   122fc:	ldr	r3, [pc, #-300]	; 121d8 <XMaxRequestSize@plt+0x8a0>
   12300:	ldr	r2, [r2, #36]	; 0x24
   12304:	ldr	r1, [pc, #-420]	; 12168 <XMaxRequestSize@plt+0x830>
   12308:	cmp	r2, #1
   1230c:	movne	r3, r0
   12310:	mov	r0, #1
   12314:	bl	117d0 <__printf_chk@plt>
   12318:	ldr	r3, [r4, #60]	; 0x3c
   1231c:	ldr	r2, [r4, #64]	; 0x40
   12320:	ldr	r1, [pc, #-444]	; 1216c <XMaxRequestSize@plt+0x834>
   12324:	mov	r0, #1
   12328:	bl	117d0 <__printf_chk@plt>
   1232c:	ldr	r3, [sl, #140]	; 0x8c
   12330:	ldr	r1, [pc, #-456]	; 12170 <XMaxRequestSize@plt+0x838>
   12334:	add	r3, r3, r9
   12338:	mov	r0, #1
   1233c:	ldr	r2, [r3, #48]	; 0x30
   12340:	bl	117d0 <__printf_chk@plt>
   12344:	ldr	r3, [sl, #140]	; 0x8c
   12348:	ldr	r1, [pc, #-476]	; 12174 <XMaxRequestSize@plt+0x83c>
   1234c:	add	r3, r3, r9
   12350:	mov	r0, #1
   12354:	ldr	r3, [r3, #40]	; 0x28
   12358:	ldr	r2, [r3, #28]
   1235c:	bl	117d0 <__printf_chk@plt>
   12360:	ldr	r2, [sl, #140]	; 0x8c
   12364:	ldr	r1, [pc, #-500]	; 12178 <XMaxRequestSize@plt+0x840>
   12368:	add	r2, r2, r9
   1236c:	mov	r0, #1
   12370:	ldr	r3, [r2, #52]	; 0x34
   12374:	ldr	r2, [r2, #56]	; 0x38
   12378:	bl	117d0 <__printf_chk@plt>
   1237c:	ldr	r3, [r4, #68]	; 0x44
   12380:	cmp	r3, #0
   12384:	beq	1281c <XMaxRequestSize@plt+0xee4>
   12388:	ldr	r1, [pc, #-528]	; 12180 <XMaxRequestSize@plt+0x848>
   1238c:	cmp	r3, #2
   12390:	ldr	r2, [pc, #-540]	; 1217c <XMaxRequestSize@plt+0x844>
   12394:	moveq	r2, r1
   12398:	ldr	r3, [r4, #72]	; 0x48
   1239c:	ldr	r0, [pc, #-548]	; 12180 <XMaxRequestSize@plt+0x848>
   123a0:	cmp	r3, #0
   123a4:	ldr	r1, [pc, #-412]	; 12210 <XMaxRequestSize@plt+0x8d8>
   123a8:	movne	r1, r0
   123ac:	mov	r3, r1
   123b0:	mov	r0, #1
   123b4:	ldr	r1, [pc, #-568]	; 12184 <XMaxRequestSize@plt+0x84c>
   123b8:	bl	117d0 <__printf_chk@plt>
   123bc:	ldr	r2, [sl, #140]	; 0x8c
   123c0:	ldr	r5, [pc, #-576]	; 12188 <XMaxRequestSize@plt+0x850>
   123c4:	add	r2, r2, r9
   123c8:	add	r0, sp, #40	; 0x28
   123cc:	ldr	r2, [r2, #8]
   123d0:	str	r0, [sp, #8]
   123d4:	add	r0, sp, #36	; 0x24
   123d8:	mov	r3, r5
   123dc:	str	r0, [sp, #4]
   123e0:	mov	r1, #0
   123e4:	str	r5, [sp]
   123e8:	mov	r0, sl
   123ec:	bl	11800 <XQueryBestSize@plt>
   123f0:	ldrd	r2, [sp, #36]	; 0x24
   123f4:	cmp	r2, r5
   123f8:	bne	12404 <XMaxRequestSize@plt+0xacc>
   123fc:	cmp	r3, r2
   12400:	beq	12868 <XMaxRequestSize@plt+0xf30>
   12404:	ldr	r1, [pc, #-640]	; 1218c <XMaxRequestSize@plt+0x854>
   12408:	mov	r0, #1
   1240c:	bl	117d0 <__printf_chk@plt>
   12410:	ldr	r2, [r4, #76]	; 0x4c
   12414:	ldr	r1, [pc, #-652]	; 12190 <XMaxRequestSize@plt+0x858>
   12418:	mov	r0, #1
   1241c:	bl	117d0 <__printf_chk@plt>
   12420:	ldr	r3, [pc, #-568]	; 121f0 <XMaxRequestSize@plt+0x8b8>
   12424:	ldr	r6, [pc, #-664]	; 12194 <XMaxRequestSize@plt+0x85c>
   12428:	ldr	r5, [r4, #76]	; 0x4c
   1242c:	ldr	r3, [r3, #168]	; 0xa8
   12430:	str	r6, [sp, #124]	; 0x7c
   12434:	cmp	r3, #0
   12438:	mov	r3, #0
   1243c:	strb	r3, [sp, #203]	; 0xcb
   12440:	beq	1249c <XMaxRequestSize@plt+0xb64>
   12444:	ldr	r4, [pc, #-692]	; 12198 <XMaxRequestSize@plt+0x860>
   12448:	mov	r8, #0
   1244c:	mov	r7, #4
   12450:	ldr	r3, [r4, #4]
   12454:	tst	r5, r3
   12458:	beq	12480 <XMaxRequestSize@plt+0xb48>
   1245c:	cmp	r7, #54	; 0x36
   12460:	bgt	12804 <XMaxRequestSize@plt+0xecc>
   12464:	mov	r0, r7
   12468:	add	r7, r7, #25
   1246c:	add	r3, sp, #124	; 0x7c
   12470:	add	r0, r3, r0
   12474:	ldr	r1, [r4]
   12478:	bl	116c8 <strcpy@plt>
   1247c:	add	r8, r8, #1
   12480:	ldr	r3, [r4, #8]!
   12484:	cmp	r3, #0
   12488:	bne	12450 <XMaxRequestSize@plt+0xb18>
   1248c:	cmp	r8, #0
   12490:	beq	1249c <XMaxRequestSize@plt+0xb64>
   12494:	add	r0, sp, #124	; 0x7c
   12498:	bl	116f8 <puts@plt>
   1249c:	mov	ip, #0
   124a0:	add	r3, sp, #28
   124a4:	ldr	r2, [sp, #16]
   124a8:	mov	r1, #2
   124ac:	mov	r0, sl
   124b0:	str	ip, [sp, #28]
   124b4:	str	fp, [sp, #52]	; 0x34
   124b8:	bl	11680 <XGetVisualInfo@plt>
   124bc:	ldr	r2, [sp, #28]
   124c0:	ldr	r1, [pc, #-812]	; 1219c <XMaxRequestSize@plt+0x864>
   124c4:	mov	r7, r0
   124c8:	mov	r0, #1
   124cc:	bl	117d0 <__printf_chk@plt>
   124d0:	ldr	r3, [sl, #140]	; 0x8c
   124d4:	add	r3, r3, r9
   124d8:	ldr	r0, [r3, #40]	; 0x28
   124dc:	bl	1171c <XVisualIDFromVisual@plt>
   124e0:	ldr	r1, [pc, #-840]	; 121a0 <XMaxRequestSize@plt+0x868>
   124e4:	mov	r2, r0
   124e8:	mov	r0, #1
   124ec:	bl	117d0 <__printf_chk@plt>
   124f0:	ldr	r3, [sp, #28]
   124f4:	cmp	r3, #0
   124f8:	ble	12738 <XMaxRequestSize@plt+0xe00>
   124fc:	ldr	r8, [pc, #-864]	; 121a4 <XMaxRequestSize@plt+0x86c>
   12500:	mov	r4, r7
   12504:	mov	r5, #0
   12508:	ldr	r2, [r4, #16]
   1250c:	cmp	r2, #5
   12510:	ldrls	pc, [pc, r2, lsl #2]
   12514:	b	127dc <XMaxRequestSize@plt+0xea4>
   12518:			; <UNDEFINED> instruction: 0x000127b4
   1251c:	andeq	r2, r1, ip, lsl #13
   12520:	ldrdeq	r2, [r1], -r4
   12524:	andeq	r2, r1, ip, asr #15
   12528:	andeq	r2, r1, r4, asr #15
   1252c:			; <UNDEFINED> instruction: 0x000127bc
   12530:	ldr	r1, [pc, #-764]	; 1223c <XMaxRequestSize@plt+0x904>
   12534:	ldr	r3, [pc, #-764]	; 12240 <XMaxRequestSize@plt+0x908>
   12538:	ldr	r2, [pc, #-920]	; 121a8 <XMaxRequestSize@plt+0x870>
   1253c:	ldr	r0, [r1]
   12540:	ldr	r3, [r3]
   12544:	mov	r1, #1
   12548:	bl	117f4 <__fprintf_chk@plt>
   1254c:	bl	13cd8 <XMaxRequestSize@plt+0x23a0>
   12550:	ldr	r3, [pc, #-796]	; 1223c <XMaxRequestSize@plt+0x904>
   12554:	ldr	r2, [pc, #-796]	; 12240 <XMaxRequestSize@plt+0x908>
   12558:	ldr	r0, [sp, #16]
   1255c:	ldr	r4, [r3]
   12560:	ldr	r5, [r2]
   12564:	bl	117b8 <XDisplayName@plt>
   12568:	mov	r3, r5
   1256c:	ldr	r2, [pc, #-968]	; 121ac <XMaxRequestSize@plt+0x874>
   12570:	mov	r1, #1
   12574:	str	r0, [sp]
   12578:	mov	r0, r4
   1257c:	bl	117f4 <__fprintf_chk@plt>
   12580:	mov	r0, #1
   12584:	bl	1174c <exit@plt>
   12588:	cmp	r6, #99	; 0x63
   1258c:	movhi	r3, #0
   12590:	movls	r3, #1
   12594:	cmp	r7, #2000	; 0x7d0
   12598:	movlt	r3, #0
   1259c:	cmp	r3, #0
   125a0:	beq	11d48 <XMaxRequestSize@plt+0x410>
   125a4:	ldr	r3, [pc, #-1020]	; 121b0 <XMaxRequestSize@plt+0x878>
   125a8:	mov	r1, #100	; 0x64
   125ac:	mla	r4, r3, r0, r4
   125b0:	mov	r0, r4
   125b4:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   125b8:	sub	r3, r0, #1
   125bc:	cmp	r3, #11
   125c0:	bhi	11d48 <XMaxRequestSize@plt+0x410>
   125c4:	mvn	r3, #99	; 0x63
   125c8:	mla	r4, r3, r0, r4
   125cc:	sub	r3, r4, #1
   125d0:	cmp	r3, #30
   125d4:	bhi	11d48 <XMaxRequestSize@plt+0x410>
   125d8:	stmib	sp, {r0, r4}
   125dc:	str	r7, [sp]
   125e0:	mov	r3, r6
   125e4:	mov	r2, r5
   125e8:	ldr	r1, [pc, #-1084]	; 121b4 <XMaxRequestSize@plt+0x87c>
   125ec:	mov	r0, #1
   125f0:	bl	117d0 <__printf_chk@plt>
   125f4:	b	11d48 <XMaxRequestSize@plt+0x410>
   125f8:	ldr	r1, [pc, #-1096]	; 121b8 <XMaxRequestSize@plt+0x880>
   125fc:	mov	r0, #1
   12600:	bl	117d0 <__printf_chk@plt>
   12604:	ldr	r2, [sp, #40]	; 0x28
   12608:	cmp	r2, #1
   1260c:	beq	11ea0 <XMaxRequestSize@plt+0x568>
   12610:	cmp	r2, #2
   12614:	beq	12abc <XMaxRequestSize@plt+0x1184>
   12618:	cmp	r2, #0
   1261c:	beq	12680 <XMaxRequestSize@plt+0xd48>
   12620:	ldr	r1, [pc, #-1132]	; 121bc <XMaxRequestSize@plt+0x884>
   12624:	mov	r0, #1
   12628:	bl	117d0 <__printf_chk@plt>
   1262c:	b	11ea8 <XMaxRequestSize@plt+0x570>
   12630:	ldr	r1, [pc, #-1144]	; 121c0 <XMaxRequestSize@plt+0x888>
   12634:	mov	r3, #40	; 0x28
   12638:	add	r4, sp, #124	; 0x7c
   1263c:	stm	sp, {r1, r2}
   12640:	mov	r0, r4
   12644:	mov	r1, r3
   12648:	mov	r2, #1
   1264c:	bl	1192c <__snprintf_chk@plt>
   12650:	mov	r3, r4
   12654:	b	11d98 <XMaxRequestSize@plt+0x460>
   12658:	ldr	r1, [pc, #-1184]	; 121c0 <XMaxRequestSize@plt+0x888>
   1265c:	add	r4, sp, #124	; 0x7c
   12660:	mov	r3, #40	; 0x28
   12664:	stm	sp, {r1, r2}
   12668:	mov	r0, r4
   1266c:	mov	r2, #1
   12670:	mov	r1, r3
   12674:	bl	1192c <__snprintf_chk@plt>
   12678:	mov	r2, r4
   1267c:	b	11dc8 <XMaxRequestSize@plt+0x490>
   12680:	ldr	r0, [pc, #-1220]	; 121c4 <XMaxRequestSize@plt+0x88c>
   12684:	bl	116f8 <puts@plt>
   12688:	b	11ea8 <XMaxRequestSize@plt+0x570>
   1268c:	mov	r6, r8
   12690:	ldr	r0, [pc, #-1232]	; 121c8 <XMaxRequestSize@plt+0x890>
   12694:	bl	116f8 <puts@plt>
   12698:	ldr	r2, [r4, #4]
   1269c:	ldr	r1, [pc, #-1240]	; 121cc <XMaxRequestSize@plt+0x894>
   126a0:	mov	r0, #1
   126a4:	bl	117d0 <__printf_chk@plt>
   126a8:	mov	r2, r6
   126ac:	ldr	r1, [pc, #-1252]	; 121d0 <XMaxRequestSize@plt+0x898>
   126b0:	mov	r0, #1
   126b4:	bl	117d0 <__printf_chk@plt>
   126b8:	ldr	r1, [r4, #12]
   126bc:	ldr	r0, [pc, #-1264]	; 121d4 <XMaxRequestSize@plt+0x89c>
   126c0:	cmp	r1, #1
   126c4:	ldr	r3, [pc, #-1268]	; 121d8 <XMaxRequestSize@plt+0x8a0>
   126c8:	mov	r2, r1
   126cc:	movne	r3, r0
   126d0:	ldr	r1, [pc, #-1276]	; 121dc <XMaxRequestSize@plt+0x8a4>
   126d4:	mov	r0, #1
   126d8:	bl	117d0 <__printf_chk@plt>
   126dc:	ldr	r3, [r4, #16]
   126e0:	ldr	r2, [r4, #32]
   126e4:	sub	r3, r3, #4
   126e8:	cmp	r3, #1
   126ec:	mov	r0, #1
   126f0:	ldrls	r1, [pc, #-1304]	; 121e0 <XMaxRequestSize@plt+0x8a8>
   126f4:	ldrhi	r1, [pc, #-1304]	; 121e4 <XMaxRequestSize@plt+0x8ac>
   126f8:	bl	117d0 <__printf_chk@plt>
   126fc:	ldr	r1, [r4, #28]
   12700:	ldrd	r2, [r4, #20]
   12704:	mov	r0, #1
   12708:	str	r1, [sp]
   1270c:	ldr	r1, [pc, #-1324]	; 121e8 <XMaxRequestSize@plt+0x8b0>
   12710:	bl	117d0 <__printf_chk@plt>
   12714:	ldr	r2, [r4, #36]	; 0x24
   12718:	ldr	r1, [pc, #-1332]	; 121ec <XMaxRequestSize@plt+0x8b4>
   1271c:	mov	r0, #1
   12720:	bl	117d0 <__printf_chk@plt>
   12724:	ldr	r3, [sp, #28]
   12728:	add	r5, r5, #1
   1272c:	cmp	r5, r3
   12730:	add	r4, r4, #40	; 0x28
   12734:	blt	12508 <XMaxRequestSize@plt+0xbd0>
   12738:	cmp	r7, #0
   1273c:	beq	12748 <XMaxRequestSize@plt+0xe10>
   12740:	mov	r0, r7
   12744:	bl	1162c <XFree@plt>
   12748:	ldr	r3, [sl, #136]	; 0x88
   1274c:	add	fp, fp, #1
   12750:	cmp	r3, fp
   12754:	add	r9, r9, #80	; 0x50
   12758:	bgt	11f88 <XMaxRequestSize@plt+0x650>
   1275c:	ldr	r4, [pc, #-1396]	; 121f0 <XMaxRequestSize@plt+0x8b8>
   12760:	ldr	r5, [pc, #-1396]	; 121f4 <XMaxRequestSize@plt+0x8bc>
   12764:	ldr	r6, [sp, #20]
   12768:	b	12778 <XMaxRequestSize@plt+0xe40>
   1276c:	add	r4, r4, #12
   12770:	cmp	r6, r4
   12774:	beq	12858 <XMaxRequestSize@plt+0xf20>
   12778:	ldr	r3, [r4, #8]
   1277c:	cmp	r3, #0
   12780:	beq	1276c <XMaxRequestSize@plt+0xe34>
   12784:	mov	r0, #10
   12788:	bl	117c4 <putchar@plt>
   1278c:	ldm	r4, {r1, r3}
   12790:	mov	r0, sl
   12794:	blx	r3
   12798:	cmp	r0, #0
   1279c:	bne	1276c <XMaxRequestSize@plt+0xe34>
   127a0:	ldr	r2, [r4]
   127a4:	mov	r1, r5
   127a8:	mov	r0, #1
   127ac:	bl	117d0 <__printf_chk@plt>
   127b0:	b	1276c <XMaxRequestSize@plt+0xe34>
   127b4:	ldr	r6, [pc, #-1476]	; 121f8 <XMaxRequestSize@plt+0x8c0>
   127b8:	b	12690 <XMaxRequestSize@plt+0xd58>
   127bc:	ldr	r6, [pc, #-1480]	; 121fc <XMaxRequestSize@plt+0x8c4>
   127c0:	b	12690 <XMaxRequestSize@plt+0xd58>
   127c4:	ldr	r6, [pc, #-1484]	; 12200 <XMaxRequestSize@plt+0x8c8>
   127c8:	b	12690 <XMaxRequestSize@plt+0xd58>
   127cc:	ldr	r6, [pc, #-1488]	; 12204 <XMaxRequestSize@plt+0x8cc>
   127d0:	b	12690 <XMaxRequestSize@plt+0xd58>
   127d4:	ldr	r6, [pc, #-1492]	; 12208 <XMaxRequestSize@plt+0x8d0>
   127d8:	b	12690 <XMaxRequestSize@plt+0xd58>
   127dc:	str	r2, [sp, #4]
   127e0:	ldr	r2, [pc, #-1500]	; 1220c <XMaxRequestSize@plt+0x8d4>
   127e4:	mov	r3, #40	; 0x28
   127e8:	str	r2, [sp]
   127ec:	add	r0, sp, #84	; 0x54
   127f0:	mov	r1, r3
   127f4:	mov	r2, #1
   127f8:	mov	r6, r0
   127fc:	bl	1192c <__snprintf_chk@plt>
   12800:	b	12690 <XMaxRequestSize@plt+0xd58>
   12804:	add	r0, sp, #124	; 0x7c
   12808:	bl	116f8 <puts@plt>
   1280c:	mov	r7, #29
   12810:	mov	r0, #4
   12814:	str	r6, [sp, #124]	; 0x7c
   12818:	b	1246c <XMaxRequestSize@plt+0xb34>
   1281c:	ldr	r2, [pc, #-1556]	; 12210 <XMaxRequestSize@plt+0x8d8>
   12820:	b	12398 <XMaxRequestSize@plt+0xa60>
   12824:	mov	r2, r7
   12828:	ldr	r1, [pc, #-1564]	; 12214 <XMaxRequestSize@plt+0x8dc>
   1282c:	mov	r0, #1
   12830:	str	r7, [sp, #32]
   12834:	bl	117d0 <__printf_chk@plt>
   12838:	ldr	r3, [sp, #32]
   1283c:	cmp	r3, #0
   12840:	bgt	12090 <XMaxRequestSize@plt+0x758>
   12844:	ldr	r3, [pc, #-1524]	; 12258 <XMaxRequestSize@plt+0x920>
   12848:	mov	r0, #10
   1284c:	ldr	r1, [r3]
   12850:	bl	116a4 <_IO_putc@plt>
   12854:	b	122d8 <XMaxRequestSize@plt+0x9a0>
   12858:	mov	r0, sl
   1285c:	bl	118f0 <XCloseDisplay@plt>
   12860:	mov	r0, #0
   12864:	bl	1174c <exit@plt>
   12868:	ldr	r0, [pc, #-1624]	; 12218 <XMaxRequestSize@plt+0x8e0>
   1286c:	bl	116f8 <puts@plt>
   12870:	b	12410 <XMaxRequestSize@plt+0xad8>
   12874:	mov	r2, r7
   12878:	mov	r1, r5
   1287c:	ldr	r0, [pc, #-1640]	; 1221c <XMaxRequestSize@plt+0x8e4>
   12880:	bl	11908 <strncmp@plt>
   12884:	subs	r4, r0, #0
   12888:	bne	129bc <XMaxRequestSize@plt+0x1084>
   1288c:	ldr	r0, [pc, #-1652]	; 12220 <XMaxRequestSize@plt+0x8e8>
   12890:	bl	116f8 <puts@plt>
   12894:	mov	r0, r4
   12898:	bl	1174c <exit@plt>
   1289c:	ldr	r3, [pc, #-1664]	; 12224 <XMaxRequestSize@plt+0x8ec>
   128a0:	b	11d98 <XMaxRequestSize@plt+0x460>
   128a4:	mov	r0, sl
   128a8:	bl	11938 <XMaxRequestSize@plt>
   128ac:	b	11d58 <XMaxRequestSize@plt+0x420>
   128b0:	ldr	r2, [pc, #-1684]	; 12224 <XMaxRequestSize@plt+0x8ec>
   128b4:	b	11dc8 <XMaxRequestSize@plt+0x490>
   128b8:	ldr	r1, [pc, #-1668]	; 1223c <XMaxRequestSize@plt+0x904>
   128bc:	ldr	r3, [pc, #-1668]	; 12240 <XMaxRequestSize@plt+0x908>
   128c0:	ldr	r2, [pc, #-1696]	; 12228 <XMaxRequestSize@plt+0x8f0>
   128c4:	ldr	r0, [r1]
   128c8:	ldr	r3, [r3]
   128cc:	mov	r1, #1
   128d0:	bl	117f4 <__fprintf_chk@plt>
   128d4:	bl	13cd8 <XMaxRequestSize@plt+0x23a0>
   128d8:	mov	r0, sl
   128dc:	bl	11818 <XGetXCBConnection@plt>
   128e0:	mov	r1, #4
   128e4:	mov	r8, r0
   128e8:	ldr	r0, [sp, #44]	; 0x2c
   128ec:	bl	11554 <calloc@plt>
   128f0:	subs	r7, r0, #0
   128f4:	bne	12920 <XMaxRequestSize@plt+0xfe8>
   128f8:	b	12ae4 <XMaxRequestSize@plt+0x11ac>
   128fc:	ldr	r6, [r4, r5, lsl #2]
   12900:	mov	r0, r6
   12904:	bl	11770 <strlen@plt>
   12908:	mov	r2, r6
   1290c:	uxth	r1, r0
   12910:	mov	r0, r8
   12914:	bl	115c0 <xcb_query_extension@plt>
   12918:	str	r0, [r7, r5, lsl #2]
   1291c:	add	r5, r5, #1
   12920:	ldr	r3, [sp, #44]	; 0x2c
   12924:	cmp	r5, r3
   12928:	blt	128fc <XMaxRequestSize@plt+0xfc4>
   1292c:	mov	r5, #0
   12930:	ldr	r9, [pc, #-1804]	; 1222c <XMaxRequestSize@plt+0x8f4>
   12934:	ldr	fp, [pc, #-1804]	; 12230 <XMaxRequestSize@plt+0x8f8>
   12938:	b	12960 <XMaxRequestSize@plt+0x1028>
   1293c:	ldrb	r2, [r6, #11]
   12940:	cmp	r2, #0
   12944:	bne	129ac <XMaxRequestSize@plt+0x1074>
   12948:	ldr	r0, [pc, #-1820]	; 12234 <XMaxRequestSize@plt+0x8fc>
   1294c:	bl	116f8 <puts@plt>
   12950:	mov	r0, r6
   12954:	bl	115b4 <free@plt>
   12958:	ldr	r3, [sp, #44]	; 0x2c
   1295c:	add	r5, r5, #1
   12960:	cmp	r5, r3
   12964:	bge	129e0 <XMaxRequestSize@plt+0x10a8>
   12968:	mov	r2, #0
   1296c:	ldr	r1, [r7, r5, lsl #2]
   12970:	mov	r0, r8
   12974:	bl	11638 <xcb_query_extension_reply@plt>
   12978:	ldr	r2, [r4, r5, lsl #2]
   1297c:	mov	r1, r9
   12980:	mov	r6, r0
   12984:	ldrb	r3, [r0, #9]
   12988:	mov	r0, #1
   1298c:	bl	117d0 <__printf_chk@plt>
   12990:	ldrb	r2, [r6, #10]
   12994:	cmp	r2, #0
   12998:	beq	1293c <XMaxRequestSize@plt+0x1004>
   1299c:	ldr	r1, [pc, #-1900]	; 12238 <XMaxRequestSize@plt+0x900>
   129a0:	mov	r0, #1
   129a4:	bl	117d0 <__printf_chk@plt>
   129a8:	b	1293c <XMaxRequestSize@plt+0x1004>
   129ac:	mov	r1, fp
   129b0:	mov	r0, #1
   129b4:	bl	117d0 <__printf_chk@plt>
   129b8:	b	12948 <XMaxRequestSize@plt+0x1010>
   129bc:	ldr	r2, [pc, #-1928]	; 1223c <XMaxRequestSize@plt+0x904>
   129c0:	ldr	r3, [pc, #-1928]	; 12240 <XMaxRequestSize@plt+0x908>
   129c4:	str	r5, [sp]
   129c8:	mov	r1, #1
   129cc:	ldr	r3, [r3]
   129d0:	ldr	r0, [r2]
   129d4:	ldr	r2, [pc, #-1944]	; 12244 <XMaxRequestSize@plt+0x90c>
   129d8:	bl	117f4 <__fprintf_chk@plt>
   129dc:	bl	13cd8 <XMaxRequestSize@plt+0x23a0>
   129e0:	mov	r0, r7
   129e4:	bl	115b4 <free@plt>
   129e8:	b	11f38 <XMaxRequestSize@plt+0x600>
   129ec:	mov	r1, #10
   129f0:	mov	r0, r4
   129f4:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   129f8:	mov	r1, #10
   129fc:	bl	14720 <XMaxRequestSize@plt+0x2de8>
   12a00:	mov	r2, r5
   12a04:	mov	r0, #1
   12a08:	mov	r3, r1
   12a0c:	ldr	r1, [pc, #-1996]	; 12248 <XMaxRequestSize@plt+0x910>
   12a10:	bl	117d0 <__printf_chk@plt>
   12a14:	mov	r0, r4
   12a18:	mov	r1, #10
   12a1c:	bl	14720 <XMaxRequestSize@plt+0x2de8>
   12a20:	subs	r2, r1, #0
   12a24:	beq	11c30 <XMaxRequestSize@plt+0x2f8>
   12a28:	b	11b14 <XMaxRequestSize@plt+0x1dc>
   12a2c:	mov	r1, #100	; 0x64
   12a30:	mov	r0, r4
   12a34:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   12a38:	mov	r1, #10
   12a3c:	bl	14720 <XMaxRequestSize@plt+0x2de8>
   12a40:	mov	r2, r5
   12a44:	mov	r0, #1
   12a48:	mov	r3, r1
   12a4c:	ldr	r1, [pc, #-2060]	; 12248 <XMaxRequestSize@plt+0x910>
   12a50:	bl	117d0 <__printf_chk@plt>
   12a54:	mov	r1, #10
   12a58:	mov	r0, r4
   12a5c:	bl	14500 <XMaxRequestSize@plt+0x2bc8>
   12a60:	mov	r1, #10
   12a64:	bl	14720 <XMaxRequestSize@plt+0x2de8>
   12a68:	mov	r0, r4
   12a6c:	mov	r5, r1
   12a70:	mov	r1, #10
   12a74:	bl	14720 <XMaxRequestSize@plt+0x2de8>
   12a78:	cmp	r5, #0
   12a7c:	mov	r4, r1
   12a80:	bne	12ac8 <XMaxRequestSize@plt+0x1190>
   12a84:	cmp	r1, #0
   12a88:	beq	11c30 <XMaxRequestSize@plt+0x2f8>
   12a8c:	mov	r2, r5
   12a90:	ldr	r1, [pc, #-2120]	; 12250 <XMaxRequestSize@plt+0x918>
   12a94:	mov	r0, #1
   12a98:	bl	117d0 <__printf_chk@plt>
   12a9c:	mov	r2, r4
   12aa0:	ldr	r1, [pc, #-2136]	; 12250 <XMaxRequestSize@plt+0x918>
   12aa4:	mov	r0, #1
   12aa8:	bl	117d0 <__printf_chk@plt>
   12aac:	b	11c30 <XMaxRequestSize@plt+0x2f8>
   12ab0:	mov	r3, #0
   12ab4:	str	r3, [sp, #16]
   12ab8:	b	11a10 <XMaxRequestSize@plt+0xd8>
   12abc:	ldr	r0, [pc, #-2168]	; 1224c <XMaxRequestSize@plt+0x914>
   12ac0:	bl	116f8 <puts@plt>
   12ac4:	b	11ea8 <XMaxRequestSize@plt+0x570>
   12ac8:	mov	r2, r5
   12acc:	ldr	r1, [pc, #-2180]	; 12250 <XMaxRequestSize@plt+0x918>
   12ad0:	mov	r0, #1
   12ad4:	bl	117d0 <__printf_chk@plt>
   12ad8:	cmp	r4, #0
   12adc:	beq	11c30 <XMaxRequestSize@plt+0x2f8>
   12ae0:	b	12a9c <XMaxRequestSize@plt+0x1164>
   12ae4:	ldr	r0, [pc, #-2200]	; 12254 <XMaxRequestSize@plt+0x91c>
   12ae8:	bl	11674 <perror@plt>
   12aec:	b	11f38 <XMaxRequestSize@plt+0x600>
   12af0:	ldr	r3, [pc, #-2208]	; 12258 <XMaxRequestSize@plt+0x920>
   12af4:	mov	r0, #10
   12af8:	ldr	r1, [r3]
   12afc:	bl	116a4 <_IO_putc@plt>
   12b00:	b	122d0 <XMaxRequestSize@plt+0x998>
   12b04:	mov	fp, #0
   12b08:	mov	lr, #0
   12b0c:	pop	{r1}		; (ldr r1, [sp], #4)
   12b10:	mov	r2, sp
   12b14:	push	{r2}		; (str r2, [sp, #-4]!)
   12b18:	push	{r0}		; (str r0, [sp, #-4]!)
   12b1c:	ldr	ip, [pc, #16]	; 12b34 <XMaxRequestSize@plt+0x11fc>
   12b20:	push	{ip}		; (str ip, [sp, #-4]!)
   12b24:	ldr	r0, [pc, #12]	; 12b38 <XMaxRequestSize@plt+0x1200>
   12b28:	ldr	r3, [pc, #12]	; 12b3c <XMaxRequestSize@plt+0x1204>
   12b2c:	bl	11710 <__libc_start_main@plt>
   12b30:	bl	11914 <abort@plt>
   12b34:			; <UNDEFINED> instruction: 0x000147b0
   12b38:	andeq	r1, r1, r8, asr #18
   12b3c:	andeq	r4, r1, r0, asr r7
   12b40:	ldr	r3, [pc, #20]	; 12b5c <XMaxRequestSize@plt+0x1224>
   12b44:	ldr	r2, [pc, #20]	; 12b60 <XMaxRequestSize@plt+0x1228>
   12b48:	add	r3, pc, r3
   12b4c:	ldr	r2, [r3, r2]
   12b50:	cmp	r2, #0
   12b54:	bxeq	lr
   12b58:	b	11740 <__gmon_start__@plt>
   12b5c:			; <UNDEFINED> instruction: 0x000134b0
   12b60:	andeq	r0, r0, ip, asr r1
   12b64:	ldr	r0, [pc, #24]	; 12b84 <XMaxRequestSize@plt+0x124c>
   12b68:	ldr	r3, [pc, #24]	; 12b88 <XMaxRequestSize@plt+0x1250>
   12b6c:	cmp	r3, r0
   12b70:	bxeq	lr
   12b74:	ldr	r3, [pc, #16]	; 12b8c <XMaxRequestSize@plt+0x1254>
   12b78:	cmp	r3, #0
   12b7c:	bxeq	lr
   12b80:	bx	r3
   12b84:	andeq	r6, r2, r0, ror #5
   12b88:	andeq	r6, r2, r0, ror #5
   12b8c:	andeq	r0, r0, r0
   12b90:	ldr	r0, [pc, #36]	; 12bbc <XMaxRequestSize@plt+0x1284>
   12b94:	ldr	r1, [pc, #36]	; 12bc0 <XMaxRequestSize@plt+0x1288>
   12b98:	sub	r1, r1, r0
   12b9c:	asr	r1, r1, #2
   12ba0:	add	r1, r1, r1, lsr #31
   12ba4:	asrs	r1, r1, #1
   12ba8:	bxeq	lr
   12bac:	ldr	r3, [pc, #16]	; 12bc4 <XMaxRequestSize@plt+0x128c>
   12bb0:	cmp	r3, #0
   12bb4:	bxeq	lr
   12bb8:	bx	r3
   12bbc:	andeq	r6, r2, r0, ror #5
   12bc0:	andeq	r6, r2, r0, ror #5
   12bc4:	andeq	r0, r0, r0
   12bc8:	push	{r4, lr}
   12bcc:	ldr	r4, [pc, #24]	; 12bec <XMaxRequestSize@plt+0x12b4>
   12bd0:	ldrb	r3, [r4]
   12bd4:	cmp	r3, #0
   12bd8:	popne	{r4, pc}
   12bdc:	bl	12b64 <XMaxRequestSize@plt+0x122c>
   12be0:	mov	r3, #1
   12be4:	strb	r3, [r4]
   12be8:	pop	{r4, pc}
   12bec:	andeq	r6, r2, r8, ror #5
   12bf0:	b	12b90 <XMaxRequestSize@plt+0x1258>
   12bf4:	andeq	r0, r0, r0
   12bf8:	mov	r0, #0
   12bfc:	bx	lr
   12c00:	ldr	r1, [r1]
   12c04:	ldr	r0, [r0]
   12c08:	b	11590 <strcmp@plt>
   12c0c:	vmov	s15, r0
   12c10:	vldr	d6, [pc, #312]	; 12d50 <XMaxRequestSize@plt+0x1418>
   12c14:	push	{r4, lr}
   12c18:	sub	sp, sp, #32
   12c1c:	vcvt.f32.u32	s14, s15
   12c20:	ldrh	r0, [sp, #48]	; 0x30
   12c24:	stm	sp, {r1, r2}
   12c28:	ldrh	lr, [sp, #40]	; 0x28
   12c2c:	ldrh	r1, [sp, #56]	; 0x38
   12c30:	ldrh	ip, [sp, #44]	; 0x2c
   12c34:	str	r3, [sp, #8]
   12c38:	ldrh	r3, [sp, #52]	; 0x34
   12c3c:	vcvt.f64.f32	d7, s14
   12c40:	ldr	r4, [sp, #60]	; 0x3c
   12c44:	str	r0, [sp, #20]
   12c48:	str	r3, [sp, #24]
   12c4c:	str	r1, [sp, #28]
   12c50:	str	lr, [sp, #12]
   12c54:	str	ip, [sp, #16]
   12c58:	ldr	r1, [pc, #248]	; 12d58 <XMaxRequestSize@plt+0x1420>
   12c5c:	vdiv.f64	d7, d7, d6
   12c60:	mov	r0, #1
   12c64:	vmov	r2, r3, d7
   12c68:	bl	117d0 <__printf_chk@plt>
   12c6c:	tst	r4, #1
   12c70:	bne	12d40 <XMaxRequestSize@plt+0x1408>
   12c74:	tst	r4, #2
   12c78:	bne	12d30 <XMaxRequestSize@plt+0x13f8>
   12c7c:	tst	r4, #4
   12c80:	bne	12d20 <XMaxRequestSize@plt+0x13e8>
   12c84:	tst	r4, #8
   12c88:	bne	12d10 <XMaxRequestSize@plt+0x13d8>
   12c8c:	tst	r4, #16
   12c90:	bne	12d00 <XMaxRequestSize@plt+0x13c8>
   12c94:	tst	r4, #64	; 0x40
   12c98:	bne	12cf0 <XMaxRequestSize@plt+0x13b8>
   12c9c:	tst	r4, #128	; 0x80
   12ca0:	bne	12ce0 <XMaxRequestSize@plt+0x13a8>
   12ca4:	tst	r4, #256	; 0x100
   12ca8:	bne	12cd0 <XMaxRequestSize@plt+0x1398>
   12cac:	tst	r4, #32
   12cb0:	beq	12cc0 <XMaxRequestSize@plt+0x1388>
   12cb4:	ldr	r1, [pc, #160]	; 12d5c <XMaxRequestSize@plt+0x1424>
   12cb8:	mov	r0, #1
   12cbc:	bl	117d0 <__printf_chk@plt>
   12cc0:	mov	r0, #10
   12cc4:	add	sp, sp, #32
   12cc8:	pop	{r4, lr}
   12ccc:	b	117c4 <putchar@plt>
   12cd0:	ldr	r1, [pc, #136]	; 12d60 <XMaxRequestSize@plt+0x1428>
   12cd4:	mov	r0, #1
   12cd8:	bl	117d0 <__printf_chk@plt>
   12cdc:	b	12cac <XMaxRequestSize@plt+0x1374>
   12ce0:	ldr	r1, [pc, #124]	; 12d64 <XMaxRequestSize@plt+0x142c>
   12ce4:	mov	r0, #1
   12ce8:	bl	117d0 <__printf_chk@plt>
   12cec:	b	12ca4 <XMaxRequestSize@plt+0x136c>
   12cf0:	ldr	r1, [pc, #112]	; 12d68 <XMaxRequestSize@plt+0x1430>
   12cf4:	mov	r0, #1
   12cf8:	bl	117d0 <__printf_chk@plt>
   12cfc:	b	12c9c <XMaxRequestSize@plt+0x1364>
   12d00:	ldr	r1, [pc, #100]	; 12d6c <XMaxRequestSize@plt+0x1434>
   12d04:	mov	r0, #1
   12d08:	bl	117d0 <__printf_chk@plt>
   12d0c:	b	12c94 <XMaxRequestSize@plt+0x135c>
   12d10:	ldr	r1, [pc, #88]	; 12d70 <XMaxRequestSize@plt+0x1438>
   12d14:	mov	r0, #1
   12d18:	bl	117d0 <__printf_chk@plt>
   12d1c:	b	12c8c <XMaxRequestSize@plt+0x1354>
   12d20:	ldr	r1, [pc, #76]	; 12d74 <XMaxRequestSize@plt+0x143c>
   12d24:	mov	r0, #1
   12d28:	bl	117d0 <__printf_chk@plt>
   12d2c:	b	12c84 <XMaxRequestSize@plt+0x134c>
   12d30:	ldr	r1, [pc, #64]	; 12d78 <XMaxRequestSize@plt+0x1440>
   12d34:	mov	r0, #1
   12d38:	bl	117d0 <__printf_chk@plt>
   12d3c:	b	12c7c <XMaxRequestSize@plt+0x1344>
   12d40:	ldr	r1, [pc, #52]	; 12d7c <XMaxRequestSize@plt+0x1444>
   12d44:	mov	r0, #1
   12d48:	bl	117d0 <__printf_chk@plt>
   12d4c:	b	12c74 <XMaxRequestSize@plt+0x133c>
   12d50:	andeq	r0, r0, r0
   12d54:	addmi	r4, pc, r0
   12d58:	andeq	r4, r1, r0, asr #15
   12d5c:	andeq	r4, r1, r8, lsr r8
   12d60:	andeq	r4, r1, r0, lsr r8
   12d64:	andeq	r4, r1, r8, lsr #16
   12d68:	andeq	r4, r1, ip, lsl r8
   12d6c:	andeq	r4, r1, r0, lsl r8
   12d70:	andeq	r4, r1, r8, lsl #16
   12d74:	andeq	r4, r1, r0, lsl #16
   12d78:	strdeq	r4, [r1], -r8
   12d7c:	strdeq	r4, [r1], -r0
   12d80:	push	{r4, r5, r6, lr}
   12d84:	sub	sp, sp, #24
   12d88:	ldr	r4, [pc, #168]	; 12e38 <XMaxRequestSize@plt+0x1500>
   12d8c:	mov	r5, r1
   12d90:	str	r3, [sp]
   12d94:	ldr	ip, [r4]
   12d98:	mov	r3, r2
   12d9c:	mov	r6, r0
   12da0:	ldr	r1, [pc, #148]	; 12e3c <XMaxRequestSize@plt+0x1504>
   12da4:	mov	r2, r5
   12da8:	mov	r0, #1
   12dac:	str	ip, [sp, #20]
   12db0:	bl	117d0 <__printf_chk@plt>
   12db4:	add	r3, sp, #16
   12db8:	mov	r1, r5
   12dbc:	str	r3, [sp]
   12dc0:	add	r2, sp, #8
   12dc4:	add	r3, sp, #12
   12dc8:	mov	r0, r6
   12dcc:	bl	117a0 <XQueryExtension@plt>
   12dd0:	ldr	r2, [sp, #8]
   12dd4:	ldr	r1, [pc, #100]	; 12e40 <XMaxRequestSize@plt+0x1508>
   12dd8:	mov	r0, #1
   12ddc:	bl	117d0 <__printf_chk@plt>
   12de0:	ldr	r2, [sp, #12]
   12de4:	cmp	r2, #0
   12de8:	bne	12e24 <XMaxRequestSize@plt+0x14ec>
   12dec:	ldr	r2, [sp, #16]
   12df0:	cmp	r2, #0
   12df4:	beq	12e04 <XMaxRequestSize@plt+0x14cc>
   12df8:	ldr	r1, [pc, #68]	; 12e44 <XMaxRequestSize@plt+0x150c>
   12dfc:	mov	r0, #1
   12e00:	bl	117d0 <__printf_chk@plt>
   12e04:	mov	r0, #10
   12e08:	bl	117c4 <putchar@plt>
   12e0c:	ldr	r2, [sp, #20]
   12e10:	ldr	r3, [r4]
   12e14:	cmp	r2, r3
   12e18:	bne	12e34 <XMaxRequestSize@plt+0x14fc>
   12e1c:	add	sp, sp, #24
   12e20:	pop	{r4, r5, r6, pc}
   12e24:	ldr	r1, [pc, #28]	; 12e48 <XMaxRequestSize@plt+0x1510>
   12e28:	mov	r0, #1
   12e2c:	bl	117d0 <__printf_chk@plt>
   12e30:	b	12dec <XMaxRequestSize@plt+0x14b4>
   12e34:	bl	115fc <__stack_chk_fail@plt>
   12e38:			; <UNDEFINED> instruction: 0x00025eb0
   12e3c:	andeq	r4, r1, r4, asr #16
   12e40:	andeq	r4, r1, r8, asr r8
   12e44:	andeq	r4, r1, r8, ror r8
   12e48:	andeq	r4, r1, r4, ror #16
   12e4c:	push	{r4, r5, r6, lr}
   12e50:	sub	sp, sp, #16
   12e54:	ldr	r4, [pc, #80]	; 12eac <XMaxRequestSize@plt+0x1574>
   12e58:	mov	r6, r1
   12e5c:	add	r2, sp, #8
   12e60:	ldr	r3, [r4]
   12e64:	add	r1, sp, #4
   12e68:	str	r3, [sp, #12]
   12e6c:	mov	r5, r0
   12e70:	bl	11854 <XRecordQueryVersion@plt>
   12e74:	cmp	r0, #0
   12e78:	beq	12e90 <XMaxRequestSize@plt+0x1558>
   12e7c:	mov	r0, r5
   12e80:	mov	r1, r6
   12e84:	ldrd	r2, [sp, #4]
   12e88:	bl	12d80 <XMaxRequestSize@plt+0x1448>
   12e8c:	mov	r0, #1
   12e90:	ldr	r2, [sp, #12]
   12e94:	ldr	r3, [r4]
   12e98:	cmp	r2, r3
   12e9c:	bne	12ea8 <XMaxRequestSize@plt+0x1570>
   12ea0:	add	sp, sp, #16
   12ea4:	pop	{r4, r5, r6, pc}
   12ea8:	bl	115fc <__stack_chk_fail@plt>
   12eac:			; <UNDEFINED> instruction: 0x00025eb0
   12eb0:	push	{r4, r5, r6, lr}
   12eb4:	sub	sp, sp, #24
   12eb8:	ldr	r4, [pc, #92]	; 12f1c <XMaxRequestSize@plt+0x15e4>
   12ebc:	add	r3, sp, #12
   12ec0:	add	r2, sp, #16
   12ec4:	ldr	ip, [r4]
   12ec8:	str	r3, [sp]
   12ecc:	mov	r6, r1
   12ed0:	add	r3, sp, #8
   12ed4:	mov	r1, r2
   12ed8:	str	ip, [sp, #20]
   12edc:	mov	r5, r0
   12ee0:	bl	116d4 <XTestQueryExtension@plt>
   12ee4:	cmp	r0, #0
   12ee8:	beq	12f00 <XMaxRequestSize@plt+0x15c8>
   12eec:	mov	r0, r5
   12ef0:	mov	r1, r6
   12ef4:	ldrd	r2, [sp, #8]
   12ef8:	bl	12d80 <XMaxRequestSize@plt+0x1448>
   12efc:	mov	r0, #1
   12f00:	ldr	r2, [sp, #20]
   12f04:	ldr	r3, [r4]
   12f08:	cmp	r2, r3
   12f0c:	bne	12f18 <XMaxRequestSize@plt+0x15e0>
   12f10:	add	sp, sp, #24
   12f14:	pop	{r4, r5, r6, pc}
   12f18:	bl	115fc <__stack_chk_fail@plt>
   12f1c:			; <UNDEFINED> instruction: 0x00025eb0
   12f20:	push	{r4, r5, r6, lr}
   12f24:	sub	sp, sp, #16
   12f28:	ldr	r4, [pc, #80]	; 12f80 <XMaxRequestSize@plt+0x1648>
   12f2c:	mov	r6, r1
   12f30:	add	r2, sp, #8
   12f34:	ldr	r3, [r4]
   12f38:	add	r1, sp, #4
   12f3c:	str	r3, [sp, #12]
   12f40:	mov	r5, r0
   12f44:	bl	11830 <XShapeQueryVersion@plt>
   12f48:	cmp	r0, #0
   12f4c:	beq	12f64 <XMaxRequestSize@plt+0x162c>
   12f50:	mov	r0, r5
   12f54:	mov	r1, r6
   12f58:	ldrd	r2, [sp, #4]
   12f5c:	bl	12d80 <XMaxRequestSize@plt+0x1448>
   12f60:	mov	r0, #1
   12f64:	ldr	r2, [sp, #12]
   12f68:	ldr	r3, [r4]
   12f6c:	cmp	r2, r3
   12f70:	bne	12f7c <XMaxRequestSize@plt+0x1644>
   12f74:	add	sp, sp, #16
   12f78:	pop	{r4, r5, r6, pc}
   12f7c:	bl	115fc <__stack_chk_fail@plt>
   12f80:			; <UNDEFINED> instruction: 0x00025eb0
   12f84:	ldr	r3, [pc, #1244]	; 13468 <XMaxRequestSize@plt+0x1b30>
   12f88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f8c:	sub	sp, sp, #108	; 0x6c
   12f90:	ldr	r3, [r3]
   12f94:	mov	r5, #0
   12f98:	mov	r7, r1
   12f9c:	add	r2, sp, #16
   12fa0:	add	r1, sp, #12
   12fa4:	str	r3, [sp, #100]	; 0x64
   12fa8:	str	r5, [sp, #24]
   12fac:	mov	r4, r0
   12fb0:	bl	11788 <XRenderQueryVersion@plt>
   12fb4:	cmp	r0, r5
   12fb8:	bne	12fdc <XMaxRequestSize@plt+0x16a4>
   12fbc:	mov	r0, #0
   12fc0:	ldr	r3, [pc, #1184]	; 13468 <XMaxRequestSize@plt+0x1b30>
   12fc4:	ldr	r2, [sp, #100]	; 0x64
   12fc8:	ldr	r3, [r3]
   12fcc:	cmp	r2, r3
   12fd0:	bne	13464 <XMaxRequestSize@plt+0x1b2c>
   12fd4:	add	sp, sp, #108	; 0x6c
   12fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fdc:	ldrd	r2, [sp, #12]
   12fe0:	mov	r1, r7
   12fe4:	mov	r0, r4
   12fe8:	bl	12d80 <XMaxRequestSize@plt+0x1448>
   12fec:	add	r1, sp, #8
   12ff0:	mov	r0, r4
   12ff4:	bl	115a8 <XListExtensions@plt>
   12ff8:	ldr	r8, [sp, #8]
   12ffc:	cmp	r8, r5
   13000:	mov	r9, r0
   13004:	ble	13030 <XMaxRequestSize@plt+0x16f8>
   13008:	sub	r6, r0, #4
   1300c:	b	1301c <XMaxRequestSize@plt+0x16e4>
   13010:	add	r5, r5, #1
   13014:	cmp	r5, r8
   13018:	beq	13030 <XMaxRequestSize@plt+0x16f8>
   1301c:	mov	r1, r7
   13020:	ldr	r0, [r6, #4]!
   13024:	bl	11590 <strcmp@plt>
   13028:	cmp	r0, #0
   1302c:	bne	13010 <XMaxRequestSize@plt+0x16d8>
   13030:	mov	r0, r9
   13034:	bl	11758 <XFreeExtensionList@plt>
   13038:	ldr	r3, [sp, #8]
   1303c:	cmp	r3, r5
   13040:	beq	12fbc <XMaxRequestSize@plt+0x1684>
   13044:	ldr	r0, [pc, #1056]	; 1346c <XMaxRequestSize@plt+0x1b34>
   13048:	bl	116f8 <puts@plt>
   1304c:	mov	r7, #0
   13050:	ldr	fp, [pc, #1048]	; 13470 <XMaxRequestSize@plt+0x1b38>
   13054:	ldr	sl, [pc, #1048]	; 13474 <XMaxRequestSize@plt+0x1b3c>
   13058:	ldr	r9, [pc, #1048]	; 13478 <XMaxRequestSize@plt+0x1b40>
   1305c:	ldr	r8, [pc, #1048]	; 1347c <XMaxRequestSize@plt+0x1b44>
   13060:	b	13078 <XMaxRequestSize@plt+0x1740>
   13064:	ldr	r2, [r5, #28]
   13068:	ldr	r1, [pc, #1040]	; 13480 <XMaxRequestSize@plt+0x1b48>
   1306c:	mov	r0, #1
   13070:	bl	117d0 <__printf_chk@plt>
   13074:	add	r7, r7, #1
   13078:	mov	r2, #0
   1307c:	mov	r1, r2
   13080:	mov	r3, r7
   13084:	mov	r0, r4
   13088:	bl	118a8 <XRenderFindFormat@plt>
   1308c:	subs	r5, r0, #0
   13090:	beq	13138 <XMaxRequestSize@plt+0x1800>
   13094:	mov	r0, fp
   13098:	bl	116f8 <puts@plt>
   1309c:	ldr	r2, [r5]
   130a0:	mov	r1, sl
   130a4:	mov	r0, #1
   130a8:	bl	117d0 <__printf_chk@plt>
   130ac:	ldr	r2, [r5, #4]
   130b0:	ldr	r1, [pc, #972]	; 13484 <XMaxRequestSize@plt+0x1b4c>
   130b4:	cmp	r2, #0
   130b8:	movne	r2, r9
   130bc:	moveq	r2, r8
   130c0:	mov	r0, #1
   130c4:	bl	117d0 <__printf_chk@plt>
   130c8:	ldr	r2, [r5, #8]
   130cc:	ldr	r1, [pc, #948]	; 13488 <XMaxRequestSize@plt+0x1b50>
   130d0:	mov	r0, #1
   130d4:	bl	117d0 <__printf_chk@plt>
   130d8:	ldr	r6, [r5, #4]
   130dc:	cmp	r6, #1
   130e0:	bne	13064 <XMaxRequestSize@plt+0x172c>
   130e4:	ldrsh	r3, [r5, #26]
   130e8:	ldrsh	r2, [r5, #24]
   130ec:	ldr	r1, [pc, #920]	; 1348c <XMaxRequestSize@plt+0x1b54>
   130f0:	mov	r0, r6
   130f4:	bl	117d0 <__printf_chk@plt>
   130f8:	ldrsh	r3, [r5, #14]
   130fc:	ldrsh	r2, [r5, #12]
   13100:	ldr	r1, [pc, #904]	; 13490 <XMaxRequestSize@plt+0x1b58>
   13104:	mov	r0, r6
   13108:	bl	117d0 <__printf_chk@plt>
   1310c:	ldrsh	r3, [r5, #18]
   13110:	ldrsh	r2, [r5, #16]
   13114:	ldr	r1, [pc, #888]	; 13494 <XMaxRequestSize@plt+0x1b5c>
   13118:	mov	r0, r6
   1311c:	bl	117d0 <__printf_chk@plt>
   13120:	mov	r0, r6
   13124:	ldrsh	r3, [r5, #22]
   13128:	ldrsh	r2, [r5, #20]
   1312c:	ldr	r1, [pc, #868]	; 13498 <XMaxRequestSize@plt+0x1b60>
   13130:	bl	117d0 <__printf_chk@plt>
   13134:	b	13074 <XMaxRequestSize@plt+0x173c>
   13138:	ldr	r0, [pc, #860]	; 1349c <XMaxRequestSize@plt+0x1b64>
   1313c:	bl	116f8 <puts@plt>
   13140:	ldr	r3, [r4, #136]	; 0x88
   13144:	cmp	r3, #0
   13148:	strgt	r5, [sp]
   1314c:	movgt	fp, r5
   13150:	ble	133a4 <XMaxRequestSize@plt+0x1a6c>
   13154:	mov	ip, #0
   13158:	add	r3, sp, #20
   1315c:	add	r2, sp, #60	; 0x3c
   13160:	mov	r1, #2
   13164:	mov	r0, r4
   13168:	str	ip, [sp, #20]
   1316c:	str	fp, [sp, #68]	; 0x44
   13170:	bl	11680 <XGetVisualInfo@plt>
   13174:	ldr	r1, [pc, #804]	; 134a0 <XMaxRequestSize@plt+0x1b68>
   13178:	mov	r2, fp
   1317c:	mov	sl, r0
   13180:	mov	r0, #1
   13184:	bl	117d0 <__printf_chk@plt>
   13188:	mov	r1, fp
   1318c:	mov	r0, r4
   13190:	bl	118fc <XRenderQuerySubpixelOrder@plt>
   13194:	cmp	r0, #5
   13198:	ldrls	pc, [pc, r0, lsl #2]
   1319c:	b	131c4 <XMaxRequestSize@plt+0x188c>
   131a0:	muleq	r1, r4, r2
   131a4:			; <UNDEFINED> instruction: 0x000132b4
   131a8:	andeq	r3, r1, r4, lsr #5
   131ac:	andeq	r3, r1, r4, lsl #5
   131b0:	andeq	r3, r1, r4, ror r2
   131b4:			; <UNDEFINED> instruction: 0x000131b8
   131b8:	ldr	r1, [pc, #740]	; 134a4 <XMaxRequestSize@plt+0x1b6c>
   131bc:	mov	r0, #1
   131c0:	bl	117d0 <__printf_chk@plt>
   131c4:	mov	r0, #10
   131c8:	bl	117c4 <putchar@plt>
   131cc:	ldr	r3, [r4, #140]	; 0x8c
   131d0:	ldr	r2, [sp]
   131d4:	mov	r0, r4
   131d8:	add	r3, r3, r2
   131dc:	ldr	r1, [r3, #8]
   131e0:	bl	118d8 <XRenderQueryFilters@plt>
   131e4:	subs	r9, r0, #0
   131e8:	bne	133ac <XMaxRequestSize@plt+0x1a74>
   131ec:	mov	r0, #10
   131f0:	bl	117c4 <putchar@plt>
   131f4:	ldr	r3, [sp, #20]
   131f8:	cmp	r3, #0
   131fc:	ble	132c4 <XMaxRequestSize@plt+0x198c>
   13200:	ldr	r8, [pc, #672]	; 134a8 <XMaxRequestSize@plt+0x1b70>
   13204:	ldr	r7, [pc, #672]	; 134ac <XMaxRequestSize@plt+0x1b74>
   13208:	ldr	r9, [pc, #672]	; 134b0 <XMaxRequestSize@plt+0x1b78>
   1320c:	mov	r5, sl
   13210:	mov	r6, #0
   13214:	b	1323c <XMaxRequestSize@plt+0x1904>
   13218:	ldr	r2, [r0]
   1321c:	mov	r1, r9
   13220:	mov	r0, #1
   13224:	bl	117d0 <__printf_chk@plt>
   13228:	ldr	r3, [sp, #20]
   1322c:	add	r6, r6, #1
   13230:	cmp	r3, r6
   13234:	add	r5, r5, #40	; 0x28
   13238:	ble	132c4 <XMaxRequestSize@plt+0x198c>
   1323c:	mov	r0, r8
   13240:	bl	116f8 <puts@plt>
   13244:	ldr	r2, [r5, #4]
   13248:	mov	r1, r7
   1324c:	mov	r0, #1
   13250:	bl	117d0 <__printf_chk@plt>
   13254:	ldr	r1, [r5]
   13258:	mov	r0, r4
   1325c:	bl	117dc <XRenderFindVisualFormat@plt>
   13260:	cmp	r0, #0
   13264:	bne	13218 <XMaxRequestSize@plt+0x18e0>
   13268:	ldr	r0, [pc, #580]	; 134b4 <XMaxRequestSize@plt+0x1b7c>
   1326c:	bl	116f8 <puts@plt>
   13270:	b	13228 <XMaxRequestSize@plt+0x18f0>
   13274:	ldr	r1, [pc, #572]	; 134b8 <XMaxRequestSize@plt+0x1b80>
   13278:	mov	r0, #1
   1327c:	bl	117d0 <__printf_chk@plt>
   13280:	b	131c4 <XMaxRequestSize@plt+0x188c>
   13284:	ldr	r1, [pc, #560]	; 134bc <XMaxRequestSize@plt+0x1b84>
   13288:	mov	r0, #1
   1328c:	bl	117d0 <__printf_chk@plt>
   13290:	b	131c4 <XMaxRequestSize@plt+0x188c>
   13294:	ldr	r1, [pc, #548]	; 134c0 <XMaxRequestSize@plt+0x1b88>
   13298:	mov	r0, #1
   1329c:	bl	117d0 <__printf_chk@plt>
   132a0:	b	131c4 <XMaxRequestSize@plt+0x188c>
   132a4:	ldr	r1, [pc, #536]	; 134c4 <XMaxRequestSize@plt+0x1b8c>
   132a8:	mov	r0, #1
   132ac:	bl	117d0 <__printf_chk@plt>
   132b0:	b	131c4 <XMaxRequestSize@plt+0x188c>
   132b4:	ldr	r1, [pc, #524]	; 134c8 <XMaxRequestSize@plt+0x1b90>
   132b8:	mov	r0, #1
   132bc:	bl	117d0 <__printf_chk@plt>
   132c0:	b	131c4 <XMaxRequestSize@plt+0x188c>
   132c4:	cmp	sl, #0
   132c8:	beq	132d4 <XMaxRequestSize@plt+0x199c>
   132cc:	mov	r0, sl
   132d0:	bl	1162c <XFree@plt>
   132d4:	add	r2, sp, #24
   132d8:	mov	r1, fp
   132dc:	mov	r0, r4
   132e0:	bl	1180c <XListDepths@plt>
   132e4:	subs	r3, r0, #0
   132e8:	str	r3, [sp, #4]
   132ec:	streq	r3, [sp, #24]
   132f0:	beq	13388 <XMaxRequestSize@plt+0x1a50>
   132f4:	ldr	r3, [sp, #24]
   132f8:	cmp	r3, #0
   132fc:	ble	13380 <XMaxRequestSize@plt+0x1a48>
   13300:	ldr	r3, [sp, #4]
   13304:	ldr	sl, [pc, #448]	; 134cc <XMaxRequestSize@plt+0x1b94>
   13308:	ldr	r9, [pc, #448]	; 134d0 <XMaxRequestSize@plt+0x1b98>
   1330c:	ldr	r6, [pc, #448]	; 134d4 <XMaxRequestSize@plt+0x1b9c>
   13310:	sub	r8, r3, #4
   13314:	mov	r7, #0
   13318:	ldr	r3, [r8, #4]!
   1331c:	mov	r0, sl
   13320:	str	r3, [sp, #36]	; 0x24
   13324:	bl	116f8 <puts@plt>
   13328:	ldr	r2, [r8]
   1332c:	mov	r1, r9
   13330:	mov	r0, #1
   13334:	bl	117d0 <__printf_chk@plt>
   13338:	mov	r5, #0
   1333c:	b	13354 <XMaxRequestSize@plt+0x1a1c>
   13340:	ldr	r2, [r0]
   13344:	mov	r1, r6
   13348:	mov	r0, #1
   1334c:	bl	117d0 <__printf_chk@plt>
   13350:	add	r5, r5, #1
   13354:	mov	r3, r5
   13358:	add	r2, sp, #28
   1335c:	mov	r1, #4
   13360:	mov	r0, r4
   13364:	bl	118a8 <XRenderFindFormat@plt>
   13368:	cmp	r0, #0
   1336c:	bne	13340 <XMaxRequestSize@plt+0x1a08>
   13370:	ldr	r3, [sp, #24]
   13374:	add	r7, r7, #1
   13378:	cmp	r3, r7
   1337c:	bgt	13318 <XMaxRequestSize@plt+0x19e0>
   13380:	ldr	r0, [sp, #4]
   13384:	bl	1162c <XFree@plt>
   13388:	ldr	r3, [r4, #136]	; 0x88
   1338c:	add	fp, fp, #1
   13390:	cmp	r3, fp
   13394:	ldr	r3, [sp]
   13398:	add	r3, r3, #80	; 0x50
   1339c:	str	r3, [sp]
   133a0:	bgt	13154 <XMaxRequestSize@plt+0x181c>
   133a4:	mov	r0, #1
   133a8:	b	12fc0 <XMaxRequestSize@plt+0x1688>
   133ac:	ldr	r1, [pc, #292]	; 134d8 <XMaxRequestSize@plt+0x1ba0>
   133b0:	mov	r0, #1
   133b4:	bl	117d0 <__printf_chk@plt>
   133b8:	ldr	r3, [r9]
   133bc:	cmp	r3, #0
   133c0:	ble	13458 <XMaxRequestSize@plt+0x1b20>
   133c4:	ldr	r6, [pc, #272]	; 134dc <XMaxRequestSize@plt+0x1ba4>
   133c8:	ldr	r8, [pc, #272]	; 134e0 <XMaxRequestSize@plt+0x1ba8>
   133cc:	ldr	r7, [pc, #272]	; 134e4 <XMaxRequestSize@plt+0x1bac>
   133d0:	mov	r5, #0
   133d4:	b	133e4 <XMaxRequestSize@plt+0x1aac>
   133d8:	add	r5, r5, #1
   133dc:	cmp	r5, r3
   133e0:	bge	13458 <XMaxRequestSize@plt+0x1b20>
   133e4:	ldr	r3, [r9, #4]
   133e8:	mov	r1, r6
   133ec:	mov	r0, #1
   133f0:	ldr	r2, [r3, r5, lsl #2]
   133f4:	bl	117d0 <__printf_chk@plt>
   133f8:	ldr	r3, [r9, #8]
   133fc:	cmp	r3, r5
   13400:	ble	1342c <XMaxRequestSize@plt+0x1af4>
   13404:	ldr	r2, [r9, #12]
   13408:	lsl	r3, r5, #1
   1340c:	ldrsh	r3, [r2, r3]
   13410:	cmn	r3, #1
   13414:	beq	1342c <XMaxRequestSize@plt+0x1af4>
   13418:	ldr	r2, [r9, #4]
   1341c:	mov	r1, r8
   13420:	mov	r0, #1
   13424:	ldr	r2, [r2, r3, lsl #2]
   13428:	bl	117d0 <__printf_chk@plt>
   1342c:	ldr	r3, [r9]
   13430:	sub	r2, r3, #1
   13434:	cmp	r2, r5
   13438:	ble	133d8 <XMaxRequestSize@plt+0x1aa0>
   1343c:	mov	r1, r7
   13440:	mov	r0, #1
   13444:	bl	117d0 <__printf_chk@plt>
   13448:	ldr	r3, [r9]
   1344c:	add	r5, r5, #1
   13450:	cmp	r5, r3
   13454:	blt	133e4 <XMaxRequestSize@plt+0x1aac>
   13458:	mov	r0, r9
   1345c:	bl	1162c <XFree@plt>
   13460:	b	131ec <XMaxRequestSize@plt+0x18b4>
   13464:	bl	115fc <__stack_chk_fail@plt>
   13468:			; <UNDEFINED> instruction: 0x00025eb0
   1346c:	muleq	r1, ip, r8
   13470:			; <UNDEFINED> instruction: 0x000148b0
   13474:	andeq	r4, r1, r0, asr #17
   13478:	muleq	r1, r4, r8
   1347c:	andeq	r4, r1, ip, lsl #17
   13480:	andeq	r4, r1, r0, lsl #19
   13484:	ldrdeq	r4, [r1], -r8
   13488:	andeq	r4, r1, ip, ror #17
   1348c:	andeq	r4, r1, r0, lsl #18
   13490:	andeq	r4, r1, r0, lsr #18
   13494:	andeq	r4, r1, r0, asr #18
   13498:	andeq	r4, r1, r0, ror #18
   1349c:	muleq	r1, r8, r9
   134a0:	andeq	r4, r1, ip, lsr #19
   134a4:	andeq	r4, r1, r0, ror #20
   134a8:	muleq	r1, r8, sl
   134ac:			; <UNDEFINED> instruction: 0x00014ab0
   134b0:	ldrdeq	r4, [r1], -r0
   134b4:	strdeq	r4, [r1], -r0
   134b8:	andeq	r4, r1, r0, asr #20
   134bc:	andeq	r4, r1, r0, lsr #20
   134c0:			; <UNDEFINED> instruction: 0x000149bc
   134c4:	strdeq	r4, [r1], -ip
   134c8:	ldrdeq	r4, [r1], -r8
   134cc:	andeq	r4, r1, r0, lsl fp
   134d0:	andeq	r4, r1, r4, lsr #22
   134d4:	andeq	r4, r1, r0, asr #22
   134d8:	andeq	r4, r1, r8, ror sl
   134dc:	andeq	r4, r1, r8, lsl #21
   134e0:	andeq	r4, r1, ip, lsl #21
   134e4:	muleq	r1, r4, sl
   134e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134ec:	sub	sp, sp, #20
   134f0:	ldr	r5, [pc, #412]	; 13694 <XMaxRequestSize@plt+0x1d5c>
   134f4:	mov	r9, r0
   134f8:	mov	r7, r1
   134fc:	ldr	r3, [r5]
   13500:	str	r3, [sp, #12]
   13504:	bl	1177c <XGetExtensionVersion@plt>
   13508:	cmp	r0, #1
   1350c:	bhi	1352c <XMaxRequestSize@plt+0x1bf4>
   13510:	mov	r0, #0
   13514:	ldr	r2, [sp, #12]
   13518:	ldr	r3, [r5]
   1351c:	cmp	r2, r3
   13520:	bne	13690 <XMaxRequestSize@plt+0x1d58>
   13524:	add	sp, sp, #20
   13528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1352c:	ldrsh	r3, [r0, #6]
   13530:	ldrsh	r2, [r0, #4]
   13534:	mov	r1, r7
   13538:	mov	r4, r0
   1353c:	mov	r0, r9
   13540:	bl	12d80 <XMaxRequestSize@plt+0x1448>
   13544:	mov	r0, r4
   13548:	bl	1162c <XFree@plt>
   1354c:	add	r1, sp, #4
   13550:	mov	r0, r9
   13554:	bl	115a8 <XListExtensions@plt>
   13558:	ldr	r8, [sp, #4]
   1355c:	cmp	r8, #0
   13560:	mov	sl, r0
   13564:	ble	13688 <XMaxRequestSize@plt+0x1d50>
   13568:	sub	r6, r0, #4
   1356c:	mov	r4, #0
   13570:	b	13580 <XMaxRequestSize@plt+0x1c48>
   13574:	add	r4, r4, #1
   13578:	cmp	r4, r8
   1357c:	beq	13594 <XMaxRequestSize@plt+0x1c5c>
   13580:	mov	r1, r7
   13584:	ldr	r0, [r6, #4]!
   13588:	bl	11590 <strcmp@plt>
   1358c:	cmp	r0, #0
   13590:	bne	13574 <XMaxRequestSize@plt+0x1c3c>
   13594:	mov	r0, sl
   13598:	bl	11758 <XFreeExtensionList@plt>
   1359c:	ldr	r3, [sp, #4]
   135a0:	cmp	r3, r4
   135a4:	beq	13510 <XMaxRequestSize@plt+0x1bd8>
   135a8:	ldr	r0, [pc, #232]	; 13698 <XMaxRequestSize@plt+0x1d60>
   135ac:	bl	116f8 <puts@plt>
   135b0:	mov	r0, r9
   135b4:	add	r1, sp, #8
   135b8:	bl	11578 <XListInputDevices@plt>
   135bc:	ldr	r3, [sp, #8]
   135c0:	cmp	r3, #0
   135c4:	mov	r8, r0
   135c8:	ble	1363c <XMaxRequestSize@plt+0x1d04>
   135cc:	ldr	r7, [pc, #200]	; 1369c <XMaxRequestSize@plt+0x1d64>
   135d0:	ldr	r6, [pc, #200]	; 136a0 <XMaxRequestSize@plt+0x1d68>
   135d4:	ldr	fp, [pc, #200]	; 136a4 <XMaxRequestSize@plt+0x1d6c>
   135d8:	ldr	sl, [pc, #200]	; 136a8 <XMaxRequestSize@plt+0x1d70>
   135dc:	mov	r9, r0
   135e0:	mov	r4, #0
   135e4:	ldr	r2, [r9, #8]
   135e8:	mov	r1, r6
   135ec:	cmp	r2, #0
   135f0:	moveq	r2, r7
   135f4:	mov	r0, #1
   135f8:	bl	117d0 <__printf_chk@plt>
   135fc:	ldr	r3, [r9, #16]
   13600:	cmp	r3, #4
   13604:	ldrls	pc, [pc, r3, lsl #2]
   13608:	b	1367c <XMaxRequestSize@plt+0x1d44>
   1360c:	andeq	r3, r1, r0, ror r6
   13610:	andeq	r3, r1, r4, ror #12
   13614:	andeq	r3, r1, r8, asr r6
   13618:	andeq	r3, r1, ip, asr #12
   1361c:	andeq	r3, r1, r0, lsr #12
   13620:	mov	r0, sl
   13624:	bl	116f8 <puts@plt>
   13628:	ldr	r3, [sp, #8]
   1362c:	add	r4, r4, #1
   13630:	cmp	r3, r4
   13634:	add	r9, r9, #24
   13638:	bgt	135e4 <XMaxRequestSize@plt+0x1cac>
   1363c:	mov	r0, r8
   13640:	bl	118c0 <XFreeDeviceList@plt>
   13644:	mov	r0, #1
   13648:	b	13514 <XMaxRequestSize@plt+0x1bdc>
   1364c:	ldr	r0, [pc, #88]	; 136ac <XMaxRequestSize@plt+0x1d74>
   13650:	bl	116f8 <puts@plt>
   13654:	b	13628 <XMaxRequestSize@plt+0x1cf0>
   13658:	ldr	r0, [pc, #80]	; 136b0 <XMaxRequestSize@plt+0x1d78>
   1365c:	bl	116f8 <puts@plt>
   13660:	b	13628 <XMaxRequestSize@plt+0x1cf0>
   13664:	ldr	r0, [pc, #72]	; 136b4 <XMaxRequestSize@plt+0x1d7c>
   13668:	bl	116f8 <puts@plt>
   1366c:	b	13628 <XMaxRequestSize@plt+0x1cf0>
   13670:	ldr	r0, [pc, #64]	; 136b8 <XMaxRequestSize@plt+0x1d80>
   13674:	bl	116f8 <puts@plt>
   13678:	b	13628 <XMaxRequestSize@plt+0x1cf0>
   1367c:	mov	r0, fp
   13680:	bl	116f8 <puts@plt>
   13684:	b	13628 <XMaxRequestSize@plt+0x1cf0>
   13688:	mov	r4, #0
   1368c:	b	13594 <XMaxRequestSize@plt+0x1c5c>
   13690:	bl	115fc <__stack_chk_fail@plt>
   13694:			; <UNDEFINED> instruction: 0x00025eb0
   13698:	andeq	r4, r1, ip, ror #22
   1369c:	andeq	r4, r1, r0, ror #22
   136a0:	andeq	r4, r1, r4, lsl #23
   136a4:	andeq	r4, r1, r0, ror #23
   136a8:	andeq	r4, r1, ip, asr #23
   136ac:			; <UNDEFINED> instruction: 0x00014bb8
   136b0:	andeq	r4, r1, r4, lsr #23
   136b4:	muleq	r1, r8, fp
   136b8:	andeq	r4, r1, ip, lsl #23
   136bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136c0:	sub	sp, sp, #36	; 0x24
   136c4:	ldr	sl, [pc, #264]	; 137d4 <XMaxRequestSize@plt+0x1e9c>
   136c8:	mov	r5, r1
   136cc:	mov	r9, #0
   136d0:	ldr	r3, [sl]
   136d4:	add	r2, sp, #20
   136d8:	add	r1, sp, #16
   136dc:	str	r3, [sp, #28]
   136e0:	str	r9, [sp, #24]
   136e4:	mov	r4, r0
   136e8:	bl	1165c <XdbeQueryExtension@plt>
   136ec:	cmp	r0, #0
   136f0:	bne	1370c <XMaxRequestSize@plt+0x1dd4>
   136f4:	ldr	r2, [sp, #28]
   136f8:	ldr	r3, [sl]
   136fc:	cmp	r2, r3
   13700:	bne	137d0 <XMaxRequestSize@plt+0x1e98>
   13704:	add	sp, sp, #36	; 0x24
   13708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1370c:	ldrd	r2, [sp, #16]
   13710:	mov	r1, r5
   13714:	mov	r0, r4
   13718:	bl	12d80 <XMaxRequestSize@plt+0x1448>
   1371c:	mov	r0, r4
   13720:	add	r2, sp, #24
   13724:	mov	r1, r9
   13728:	bl	115d8 <XdbeGetVisualInfo@plt>
   1372c:	ldr	r3, [sp, #24]
   13730:	cmp	r3, r9
   13734:	str	r0, [sp, #12]
   13738:	ble	137c0 <XMaxRequestSize@plt+0x1e88>
   1373c:	ldr	fp, [pc, #148]	; 137d8 <XMaxRequestSize@plt+0x1ea0>
   13740:	ldr	r8, [pc, #148]	; 137dc <XMaxRequestSize@plt+0x1ea4>
   13744:	mov	r7, r0
   13748:	add	r6, r0, #4
   1374c:	mov	r2, r9
   13750:	mov	r1, fp
   13754:	mov	r0, #1
   13758:	bl	117d0 <__printf_chk@plt>
   1375c:	ldr	r3, [r6, #-4]
   13760:	cmp	r3, #0
   13764:	ble	137a8 <XMaxRequestSize@plt+0x1e70>
   13768:	mov	r4, #0
   1376c:	mov	r5, r4
   13770:	ldr	r3, [r7, #4]
   13774:	mov	r1, r8
   13778:	add	r0, r3, r4
   1377c:	ldr	r2, [r3, r4]
   13780:	ldr	r3, [r0, #4]
   13784:	ldr	r0, [r0, #8]
   13788:	add	r5, r5, #1
   1378c:	str	r0, [sp]
   13790:	mov	r0, #1
   13794:	bl	117d0 <__printf_chk@plt>
   13798:	ldr	r3, [r6, #-4]
   1379c:	add	r4, r4, #12
   137a0:	cmp	r3, r5
   137a4:	bgt	13770 <XMaxRequestSize@plt+0x1e38>
   137a8:	ldr	r3, [sp, #24]
   137ac:	add	r9, r9, #1
   137b0:	cmp	r3, r9
   137b4:	add	r7, r7, #8
   137b8:	add	r6, r6, #8
   137bc:	bgt	1374c <XMaxRequestSize@plt+0x1e14>
   137c0:	ldr	r0, [sp, #12]
   137c4:	bl	1183c <XdbeFreeVisualInfo@plt>
   137c8:	mov	r0, #1
   137cc:	b	136f4 <XMaxRequestSize@plt+0x1dbc>
   137d0:	bl	115fc <__stack_chk_fail@plt>
   137d4:			; <UNDEFINED> instruction: 0x00025eb0
   137d8:	strdeq	r4, [r1], -r0
   137dc:	andeq	r4, r1, r8, lsl ip
   137e0:	push	{r4, r5, r6, r7, lr}
   137e4:	sub	sp, sp, #116	; 0x74
   137e8:	ldr	r6, [pc, #716]	; 13abc <XMaxRequestSize@plt+0x2184>
   137ec:	mov	r4, r1
   137f0:	add	r2, sp, #32
   137f4:	ldr	r3, [r6]
   137f8:	add	r1, sp, #28
   137fc:	str	r3, [sp, #108]	; 0x6c
   13800:	mov	r5, r0
   13804:	bl	11644 <XF86VidModeQueryVersion@plt>
   13808:	cmp	r0, #0
   1380c:	bne	13828 <XMaxRequestSize@plt+0x1ef0>
   13810:	ldr	r2, [sp, #108]	; 0x6c
   13814:	ldr	r3, [r6]
   13818:	cmp	r2, r3
   1381c:	bne	13ab8 <XMaxRequestSize@plt+0x2180>
   13820:	add	sp, sp, #116	; 0x74
   13824:	pop	{r4, r5, r6, r7, pc}
   13828:	ldrd	r2, [sp, #28]
   1382c:	mov	r1, r4
   13830:	mov	r0, r5
   13834:	bl	12d80 <XMaxRequestSize@plt+0x1448>
   13838:	add	r2, sp, #48	; 0x30
   1383c:	ldr	r1, [r5, #132]	; 0x84
   13840:	mov	r0, r5
   13844:	bl	11608 <XF86VidModeGetMonitor@plt>
   13848:	cmp	r0, #0
   1384c:	bne	13940 <XMaxRequestSize@plt+0x2008>
   13850:	ldr	r0, [pc, #616]	; 13ac0 <XMaxRequestSize@plt+0x2188>
   13854:	bl	116f8 <puts@plt>
   13858:	ldr	r3, [sp, #28]
   1385c:	cmp	r3, #0
   13860:	bgt	13874 <XMaxRequestSize@plt+0x1f3c>
   13864:	bne	13a50 <XMaxRequestSize@plt+0x2118>
   13868:	ldr	r3, [sp, #32]
   1386c:	cmp	r3, #5
   13870:	ble	13a50 <XMaxRequestSize@plt+0x2118>
   13874:	add	r3, sp, #44	; 0x2c
   13878:	add	r2, sp, #36	; 0x24
   1387c:	ldr	r1, [r5, #132]	; 0x84
   13880:	mov	r0, r5
   13884:	bl	11764 <XF86VidModeGetAllModeLines@plt>
   13888:	cmp	r0, #0
   1388c:	beq	13a58 <XMaxRequestSize@plt+0x2120>
   13890:	ldr	r0, [pc, #556]	; 13ac4 <XMaxRequestSize@plt+0x218c>
   13894:	bl	116f8 <puts@plt>
   13898:	ldr	r0, [pc, #552]	; 13ac8 <XMaxRequestSize@plt+0x2190>
   1389c:	bl	116f8 <puts@plt>
   138a0:	ldr	r3, [sp, #36]	; 0x24
   138a4:	cmp	r3, #0
   138a8:	ble	1390c <XMaxRequestSize@plt+0x1fd4>
   138ac:	mov	r4, #0
   138b0:	ldr	r3, [sp, #44]	; 0x2c
   138b4:	ldr	ip, [r3, r4, lsl #2]
   138b8:	add	r4, r4, #1
   138bc:	ldr	lr, [ip, #24]
   138c0:	ldrh	r3, [ip, #8]
   138c4:	ldrh	r2, [ip, #6]
   138c8:	ldrh	r1, [ip, #4]
   138cc:	ldr	r0, [ip]
   138d0:	str	lr, [sp, #20]
   138d4:	ldrh	lr, [ip, #20]
   138d8:	str	lr, [sp, #16]
   138dc:	ldrh	lr, [ip, #18]
   138e0:	str	lr, [sp, #12]
   138e4:	ldrh	lr, [ip, #16]
   138e8:	str	lr, [sp, #8]
   138ec:	ldrh	lr, [ip, #14]
   138f0:	str	lr, [sp, #4]
   138f4:	ldrh	ip, [ip, #10]
   138f8:	str	ip, [sp]
   138fc:	bl	12c0c <XMaxRequestSize@plt+0x12d4>
   13900:	ldr	r3, [sp, #36]	; 0x24
   13904:	cmp	r3, r4
   13908:	bgt	138b0 <XMaxRequestSize@plt+0x1f78>
   1390c:	ldr	r0, [sp, #44]	; 0x2c
   13910:	bl	1162c <XFree@plt>
   13914:	add	r3, sp, #76	; 0x4c
   13918:	add	r2, sp, #40	; 0x28
   1391c:	ldr	r1, [r5, #132]	; 0x84
   13920:	mov	r0, r5
   13924:	bl	116ec <XF86VidModeGetModeLine@plt>
   13928:	cmp	r0, #0
   1392c:	bne	13a64 <XMaxRequestSize@plt+0x212c>
   13930:	ldr	r0, [pc, #404]	; 13acc <XMaxRequestSize@plt+0x2194>
   13934:	bl	116f8 <puts@plt>
   13938:	mov	r0, #1
   1393c:	b	13810 <XMaxRequestSize@plt+0x1ed8>
   13940:	ldr	r0, [pc, #392]	; 13ad0 <XMaxRequestSize@plt+0x2198>
   13944:	bl	116f8 <puts@plt>
   13948:	ldr	r2, [sp, #48]	; 0x30
   1394c:	ldr	r3, [sp, #52]	; 0x34
   13950:	ldr	r1, [pc, #380]	; 13ad4 <XMaxRequestSize@plt+0x219c>
   13954:	cmp	r2, #0
   13958:	moveq	r2, r1
   1395c:	cmp	r3, #0
   13960:	moveq	r3, r1
   13964:	mov	r0, #1
   13968:	ldr	r1, [pc, #360]	; 13ad8 <XMaxRequestSize@plt+0x21a0>
   1396c:	bl	117d0 <__printf_chk@plt>
   13970:	ldrb	r3, [sp, #68]	; 0x44
   13974:	ldrb	r2, [sp, #60]	; 0x3c
   13978:	ldr	r1, [pc, #348]	; 13adc <XMaxRequestSize@plt+0x21a4>
   1397c:	mov	r0, #1
   13980:	bl	117d0 <__printf_chk@plt>
   13984:	ldrb	r3, [sp, #60]	; 0x3c
   13988:	cmp	r3, #0
   1398c:	beq	139d8 <XMaxRequestSize@plt+0x20a0>
   13990:	ldr	r7, [pc, #328]	; 13ae0 <XMaxRequestSize@plt+0x21a8>
   13994:	mov	r4, #0
   13998:	ldr	r3, [sp, #64]	; 0x40
   1399c:	mov	r2, r4
   139a0:	add	r3, r3, r4, lsl #3
   139a4:	mov	r1, r7
   139a8:	vldr	s14, [r3]
   139ac:	mov	r0, #1
   139b0:	add	r4, r4, #1
   139b4:	vcvt.f64.f32	d7, s14
   139b8:	vstr	d7, [sp, #8]
   139bc:	vldr	s14, [r3, #4]
   139c0:	vcvt.f64.f32	d7, s14
   139c4:	vstr	d7, [sp]
   139c8:	bl	117d0 <__printf_chk@plt>
   139cc:	ldrb	r3, [sp, #60]	; 0x3c
   139d0:	cmp	r3, r4
   139d4:	bgt	13998 <XMaxRequestSize@plt+0x2060>
   139d8:	ldrb	r3, [sp, #68]	; 0x44
   139dc:	cmp	r3, #0
   139e0:	beq	13a2c <XMaxRequestSize@plt+0x20f4>
   139e4:	ldr	r7, [pc, #248]	; 13ae4 <XMaxRequestSize@plt+0x21ac>
   139e8:	mov	r4, #0
   139ec:	ldr	r3, [sp, #72]	; 0x48
   139f0:	mov	r2, r4
   139f4:	add	r3, r3, r4, lsl #3
   139f8:	mov	r1, r7
   139fc:	vldr	s14, [r3]
   13a00:	mov	r0, #1
   13a04:	add	r4, r4, #1
   13a08:	vcvt.f64.f32	d7, s14
   13a0c:	vstr	d7, [sp, #8]
   13a10:	vldr	s14, [r3, #4]
   13a14:	vcvt.f64.f32	d7, s14
   13a18:	vstr	d7, [sp]
   13a1c:	bl	117d0 <__printf_chk@plt>
   13a20:	ldrb	r3, [sp, #68]	; 0x44
   13a24:	cmp	r3, r4
   13a28:	bgt	139ec <XMaxRequestSize@plt+0x20b4>
   13a2c:	ldr	r0, [sp, #48]	; 0x30
   13a30:	bl	1162c <XFree@plt>
   13a34:	ldr	r0, [sp, #52]	; 0x34
   13a38:	bl	1162c <XFree@plt>
   13a3c:	ldr	r0, [sp, #64]	; 0x40
   13a40:	bl	1162c <XFree@plt>
   13a44:	ldr	r0, [sp, #72]	; 0x48
   13a48:	bl	1162c <XFree@plt>
   13a4c:	b	13858 <XMaxRequestSize@plt+0x1f20>
   13a50:	mov	r0, #1
   13a54:	b	13810 <XMaxRequestSize@plt+0x1ed8>
   13a58:	ldr	r0, [pc, #136]	; 13ae8 <XMaxRequestSize@plt+0x21b0>
   13a5c:	bl	116f8 <puts@plt>
   13a60:	b	13914 <XMaxRequestSize@plt+0x1fdc>
   13a64:	ldr	r0, [pc, #128]	; 13aec <XMaxRequestSize@plt+0x21b4>
   13a68:	bl	116f8 <puts@plt>
   13a6c:	ldrh	lr, [sp, #92]	; 0x5c
   13a70:	ldrh	ip, [sp, #86]	; 0x56
   13a74:	ldrh	r0, [sp, #88]	; 0x58
   13a78:	ldrh	r4, [sp, #90]	; 0x5a
   13a7c:	str	lr, [sp, #16]
   13a80:	ldrh	lr, [sp, #82]	; 0x52
   13a84:	str	ip, [sp, #4]
   13a88:	ldr	ip, [sp, #96]	; 0x60
   13a8c:	str	r0, [sp, #8]
   13a90:	ldrh	r3, [sp, #80]	; 0x50
   13a94:	ldr	r0, [sp, #40]	; 0x28
   13a98:	ldrh	r2, [sp, #78]	; 0x4e
   13a9c:	ldrh	r1, [sp, #76]	; 0x4c
   13aa0:	str	r4, [sp, #12]
   13aa4:	str	lr, [sp]
   13aa8:	str	ip, [sp, #20]
   13aac:	bl	12c0c <XMaxRequestSize@plt+0x12d4>
   13ab0:	mov	r0, #1
   13ab4:	b	13810 <XMaxRequestSize@plt+0x1ed8>
   13ab8:	bl	115fc <__stack_chk_fail@plt>
   13abc:			; <UNDEFINED> instruction: 0x00025eb0
   13ac0:	andeq	r4, r1, r8, ror #25
   13ac4:	andeq	r4, r1, ip, lsl #26
   13ac8:	andeq	r4, r1, r0, lsr sp
   13acc:	andeq	r4, r1, r0, asr #27
   13ad0:	andeq	r4, r1, r8, asr #24
   13ad4:	andeq	r5, r1, r8, lsl #11
   13ad8:	andeq	r4, r1, r0, ror #24
   13adc:	andeq	r4, r1, ip, ror ip
   13ae0:	andeq	r4, r1, r0, lsr #25
   13ae4:	andeq	r4, r1, r4, asr #25
   13ae8:	andeq	r4, r1, r0, ror sp
   13aec:	andeq	r4, r1, r0, lsr #27
   13af0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13af4:	sub	sp, sp, #28
   13af8:	ldr	r9, [pc, #224]	; 13be0 <XMaxRequestSize@plt+0x22a8>
   13afc:	mov	r5, r1
   13b00:	add	r2, sp, #12
   13b04:	ldr	r3, [r9]
   13b08:	add	r1, sp, #8
   13b0c:	str	r3, [sp, #20]
   13b10:	mov	r4, r0
   13b14:	bl	115cc <XSyncInitialize@plt>
   13b18:	cmp	r0, #0
   13b1c:	bne	13b38 <XMaxRequestSize@plt+0x2200>
   13b20:	ldr	r2, [sp, #20]
   13b24:	ldr	r3, [r9]
   13b28:	cmp	r2, r3
   13b2c:	bne	13bdc <XMaxRequestSize@plt+0x22a4>
   13b30:	add	sp, sp, #28
   13b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b38:	ldrd	r2, [sp, #8]
   13b3c:	mov	r1, r5
   13b40:	mov	r0, r4
   13b44:	bl	12d80 <XMaxRequestSize@plt+0x1448>
   13b48:	add	r1, sp, #16
   13b4c:	mov	r0, r4
   13b50:	bl	11704 <XSyncListSystemCounters@plt>
   13b54:	ldr	r2, [sp, #16]
   13b58:	ldr	r1, [pc, #132]	; 13be4 <XMaxRequestSize@plt+0x22ac>
   13b5c:	mov	r8, r0
   13b60:	mov	r0, #1
   13b64:	bl	117d0 <__printf_chk@plt>
   13b68:	ldr	r3, [sp, #16]
   13b6c:	cmp	r3, #0
   13b70:	ble	13bcc <XMaxRequestSize@plt+0x2294>
   13b74:	mov	r6, r8
   13b78:	mov	r5, #0
   13b7c:	add	r4, r6, #8
   13b80:	ldr	r7, [r8, r5, lsl #4]
   13b84:	ldm	r4, {r0, r1}
   13b88:	ldr	fp, [r6, #4]
   13b8c:	bl	118cc <XSyncValueLow32@plt>
   13b90:	add	r5, r5, #1
   13b94:	add	r6, r6, #16
   13b98:	mov	sl, r0
   13b9c:	ldm	r4, {r0, r1}
   13ba0:	bl	117ac <XSyncValueHigh32@plt>
   13ba4:	mov	r3, fp
   13ba8:	str	sl, [sp]
   13bac:	mov	r2, r7
   13bb0:	ldr	r1, [pc, #48]	; 13be8 <XMaxRequestSize@plt+0x22b0>
   13bb4:	str	r0, [sp, #4]
   13bb8:	mov	r0, #1
   13bbc:	bl	117d0 <__printf_chk@plt>
   13bc0:	ldr	r3, [sp, #16]
   13bc4:	cmp	r3, r5
   13bc8:	bgt	13b7c <XMaxRequestSize@plt+0x2244>
   13bcc:	mov	r0, r8
   13bd0:	bl	11668 <XSyncFreeSystemCounterList@plt>
   13bd4:	mov	r0, #1
   13bd8:	b	13b20 <XMaxRequestSize@plt+0x21e8>
   13bdc:	bl	115fc <__stack_chk_fail@plt>
   13be0:			; <UNDEFINED> instruction: 0x00025eb0
   13be4:	andeq	r4, r1, ip, ror #27
   13be8:	andeq	r4, r1, r4, lsl #28
   13bec:	push	{r4, r5, lr}
   13bf0:	sub	sp, sp, #36	; 0x24
   13bf4:	ldr	r4, [pc, #200]	; 13cc4 <XMaxRequestSize@plt+0x238c>
   13bf8:	add	r2, sp, #24
   13bfc:	add	r3, sp, #20
   13c00:	ldr	ip, [r4]
   13c04:	str	r2, [sp, #4]
   13c08:	str	r3, [sp]
   13c0c:	mov	r5, r1
   13c10:	add	r3, sp, #16
   13c14:	add	r2, sp, #12
   13c18:	add	r1, sp, #8
   13c1c:	str	ip, [sp, #28]
   13c20:	bl	11848 <XkbQueryExtension@plt>
   13c24:	cmp	r0, #0
   13c28:	bne	13c44 <XMaxRequestSize@plt+0x230c>
   13c2c:	ldr	r2, [sp, #28]
   13c30:	ldr	r3, [r4]
   13c34:	cmp	r2, r3
   13c38:	bne	13cc0 <XMaxRequestSize@plt+0x2388>
   13c3c:	add	sp, sp, #36	; 0x24
   13c40:	pop	{r4, r5, pc}
   13c44:	ldr	r1, [sp, #24]
   13c48:	ldr	r3, [sp, #20]
   13c4c:	mov	r2, r5
   13c50:	str	r1, [sp]
   13c54:	mov	r0, #1
   13c58:	ldr	r1, [pc, #104]	; 13cc8 <XMaxRequestSize@plt+0x2390>
   13c5c:	bl	117d0 <__printf_chk@plt>
   13c60:	ldr	r2, [sp, #8]
   13c64:	ldr	r1, [pc, #96]	; 13ccc <XMaxRequestSize@plt+0x2394>
   13c68:	mov	r0, #1
   13c6c:	bl	117d0 <__printf_chk@plt>
   13c70:	ldr	r2, [sp, #12]
   13c74:	cmp	r2, #0
   13c78:	bne	13c98 <XMaxRequestSize@plt+0x2360>
   13c7c:	ldr	r2, [sp, #16]
   13c80:	cmp	r2, #0
   13c84:	bne	13cb0 <XMaxRequestSize@plt+0x2378>
   13c88:	mov	r0, #10
   13c8c:	bl	117c4 <putchar@plt>
   13c90:	mov	r0, #1
   13c94:	b	13c2c <XMaxRequestSize@plt+0x22f4>
   13c98:	ldr	r1, [pc, #48]	; 13cd0 <XMaxRequestSize@plt+0x2398>
   13c9c:	mov	r0, #1
   13ca0:	bl	117d0 <__printf_chk@plt>
   13ca4:	ldr	r2, [sp, #16]
   13ca8:	cmp	r2, #0
   13cac:	beq	13c88 <XMaxRequestSize@plt+0x2350>
   13cb0:	ldr	r1, [pc, #28]	; 13cd4 <XMaxRequestSize@plt+0x239c>
   13cb4:	mov	r0, #1
   13cb8:	bl	117d0 <__printf_chk@plt>
   13cbc:	b	13c88 <XMaxRequestSize@plt+0x2350>
   13cc0:	bl	115fc <__stack_chk_fail@plt>
   13cc4:			; <UNDEFINED> instruction: 0x00025eb0
   13cc8:	andeq	r4, r1, r4, asr #16
   13ccc:	andeq	r4, r1, r8, asr r8
   13cd0:	andeq	r4, r1, r4, ror #16
   13cd4:	andeq	r4, r1, r8, ror r8
   13cd8:	ldr	r5, [pc, #184]	; 13d98 <XMaxRequestSize@plt+0x2460>
   13cdc:	ldr	r3, [pc, #184]	; 13d9c <XMaxRequestSize@plt+0x2464>
   13ce0:	push	{r7, fp, lr}
   13ce4:	sub	sp, sp, #12
   13ce8:	ldr	r2, [pc, #176]	; 13da0 <XMaxRequestSize@plt+0x2468>
   13cec:	ldr	r4, [pc, #176]	; 13da4 <XMaxRequestSize@plt+0x246c>
   13cf0:	ldr	r0, [r5]
   13cf4:	ldr	r3, [r3]
   13cf8:	mov	r1, #1
   13cfc:	str	r2, [sp]
   13d00:	ldr	r2, [pc, #160]	; 13da8 <XMaxRequestSize@plt+0x2470>
   13d04:	bl	117f4 <__fprintf_chk@plt>
   13d08:	ldr	sl, [pc, #156]	; 13dac <XMaxRequestSize@plt+0x2474>
   13d0c:	ldr	r7, [r5]
   13d10:	ldr	r9, [pc, #152]	; 13db0 <XMaxRequestSize@plt+0x2478>
   13d14:	add	r8, r4, #168	; 0xa8
   13d18:	mov	r5, #6
   13d1c:	b	13d40 <XMaxRequestSize@plt+0x2408>
   13d20:	mov	r3, fp
   13d24:	add	r4, r4, #12
   13d28:	mov	r2, r9
   13d2c:	mov	r1, #1
   13d30:	mov	r0, r7
   13d34:	bl	117f4 <__fprintf_chk@plt>
   13d38:	cmp	r8, r4
   13d3c:	beq	13d80 <XMaxRequestSize@plt+0x2448>
   13d40:	ldr	fp, [r4]
   13d44:	mov	r0, fp
   13d48:	bl	11770 <strlen@plt>
   13d4c:	add	r2, r0, #1
   13d50:	add	r5, r5, r2
   13d54:	cmp	r5, #79	; 0x4f
   13d58:	mov	r6, r0
   13d5c:	ble	13d20 <XMaxRequestSize@plt+0x23e8>
   13d60:	mov	r3, r7
   13d64:	mov	r2, #6
   13d68:	mov	r1, #1
   13d6c:	mov	r0, sl
   13d70:	bl	116b0 <fwrite@plt>
   13d74:	add	r5, r6, #7
   13d78:	ldr	fp, [r4]
   13d7c:	b	13d20 <XMaxRequestSize@plt+0x23e8>
   13d80:	ldr	r3, [pc, #16]	; 13d98 <XMaxRequestSize@plt+0x2460>
   13d84:	mov	r0, #10
   13d88:	ldr	r1, [r3]
   13d8c:	bl	11878 <fputc@plt>
   13d90:	mov	r0, #1
   13d94:	bl	1174c <exit@plt>
   13d98:	andeq	r6, r2, r0, ror #5
   13d9c:	andeq	r6, r2, ip, ror #5
   13da0:	andeq	r4, r1, r8, asr lr
   13da4:	andeq	r6, r2, r8, ror #2
   13da8:	andeq	r4, r1, r0, asr #28
   13dac:	andeq	r4, r1, r8, ror #30
   13db0:	andeq	r4, r1, r0, ror pc
   13db4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13db8:	sub	sp, sp, #44	; 0x2c
   13dbc:	ldr	r8, [pc, #448]	; 13f84 <XMaxRequestSize@plt+0x264c>
   13dc0:	mov	r5, #0
   13dc4:	mov	r4, r1
   13dc8:	ldr	r3, [r8]
   13dcc:	add	r2, sp, #32
   13dd0:	add	r1, sp, #28
   13dd4:	str	r3, [sp, #36]	; 0x24
   13dd8:	str	r5, [sp, #20]
   13ddc:	str	r5, [sp, #24]
   13de0:	mov	r7, r0
   13de4:	bl	11734 <XmbufGetVersion@plt>
   13de8:	cmp	r0, #0
   13dec:	bne	13e08 <XMaxRequestSize@plt+0x24d0>
   13df0:	ldr	r2, [sp, #36]	; 0x24
   13df4:	ldr	r3, [r8]
   13df8:	cmp	r2, r3
   13dfc:	bne	13f80 <XMaxRequestSize@plt+0x2648>
   13e00:	add	sp, sp, #44	; 0x2c
   13e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e08:	ldrd	r2, [sp, #28]
   13e0c:	mov	r1, r4
   13e10:	mov	r0, r7
   13e14:	bl	12d80 <XMaxRequestSize@plt+0x1448>
   13e18:	ldr	r3, [r7, #136]	; 0x88
   13e1c:	cmp	r3, r5
   13e20:	ble	13f78 <XMaxRequestSize@plt+0x2640>
   13e24:	ldr	r6, [pc, #348]	; 13f88 <XMaxRequestSize@plt+0x2650>
   13e28:	ldr	sl, [pc, #348]	; 13f8c <XMaxRequestSize@plt+0x2654>
   13e2c:	ldr	r9, [pc, #348]	; 13f90 <XMaxRequestSize@plt+0x2658>
   13e30:	b	13e5c <XMaxRequestSize@plt+0x2524>
   13e34:	str	r2, [sp]
   13e38:	ldr	r3, [sl]
   13e3c:	ldr	r0, [r9]
   13e40:	ldr	r2, [pc, #332]	; 13f94 <XMaxRequestSize@plt+0x265c>
   13e44:	mov	r1, #1
   13e48:	bl	117f4 <__fprintf_chk@plt>
   13e4c:	ldr	r3, [r7, #136]	; 0x88
   13e50:	add	r5, r5, #1
   13e54:	cmp	r3, r5
   13e58:	ble	13f78 <XMaxRequestSize@plt+0x2640>
   13e5c:	ldr	r1, [r7, #140]	; 0x8c
   13e60:	add	ip, sp, #24
   13e64:	add	r2, sp, #12
   13e68:	ldr	r1, [r1, #8]
   13e6c:	str	ip, [sp, #4]
   13e70:	add	ip, sp, #16
   13e74:	add	r3, sp, #20
   13e78:	mov	r0, r7
   13e7c:	str	ip, [sp]
   13e80:	bl	116bc <XmbufGetScreenInfo@plt>
   13e84:	subs	r2, r0, #0
   13e88:	beq	13e34 <XMaxRequestSize@plt+0x24fc>
   13e8c:	ldr	r3, [sp, #12]
   13e90:	mov	r2, r5
   13e94:	ldr	r1, [pc, #252]	; 13f98 <XMaxRequestSize@plt+0x2660>
   13e98:	mov	r0, #1
   13e9c:	bl	117d0 <__printf_chk@plt>
   13ea0:	ldr	r3, [sp, #12]
   13ea4:	cmp	r3, #0
   13ea8:	ble	13eec <XMaxRequestSize@plt+0x25b4>
   13eac:	mov	r4, #0
   13eb0:	mov	fp, r4
   13eb4:	ldr	r3, [sp, #20]
   13eb8:	mov	r1, r6
   13ebc:	add	r0, r3, r4
   13ec0:	ldr	r2, [r3, r4]
   13ec4:	ldr	r3, [r0, #4]
   13ec8:	ldr	r0, [r0, #8]
   13ecc:	add	fp, fp, #1
   13ed0:	str	r0, [sp]
   13ed4:	mov	r0, #1
   13ed8:	bl	117d0 <__printf_chk@plt>
   13edc:	ldr	r3, [sp, #12]
   13ee0:	add	r4, r4, #12
   13ee4:	cmp	r3, fp
   13ee8:	bgt	13eb4 <XMaxRequestSize@plt+0x257c>
   13eec:	ldr	r2, [sp, #16]
   13ef0:	ldr	r1, [pc, #164]	; 13f9c <XMaxRequestSize@plt+0x2664>
   13ef4:	mov	r0, #1
   13ef8:	bl	117d0 <__printf_chk@plt>
   13efc:	ldr	r3, [sp, #16]
   13f00:	cmp	r3, #0
   13f04:	ble	13f48 <XMaxRequestSize@plt+0x2610>
   13f08:	mov	r4, #0
   13f0c:	mov	fp, r4
   13f10:	ldr	r3, [sp, #24]
   13f14:	mov	r1, r6
   13f18:	add	r0, r3, r4
   13f1c:	ldr	r2, [r3, r4]
   13f20:	ldr	r3, [r0, #4]
   13f24:	ldr	r0, [r0, #8]
   13f28:	add	fp, fp, #1
   13f2c:	str	r0, [sp]
   13f30:	mov	r0, #1
   13f34:	bl	117d0 <__printf_chk@plt>
   13f38:	ldr	r3, [sp, #16]
   13f3c:	add	r4, r4, #12
   13f40:	cmp	r3, fp
   13f44:	bgt	13f10 <XMaxRequestSize@plt+0x25d8>
   13f48:	ldr	r0, [sp, #20]
   13f4c:	cmp	r0, #0
   13f50:	beq	13f58 <XMaxRequestSize@plt+0x2620>
   13f54:	bl	1162c <XFree@plt>
   13f58:	ldr	r0, [sp, #24]
   13f5c:	cmp	r0, #0
   13f60:	beq	13e4c <XMaxRequestSize@plt+0x2514>
   13f64:	bl	1162c <XFree@plt>
   13f68:	ldr	r3, [r7, #136]	; 0x88
   13f6c:	add	r5, r5, #1
   13f70:	cmp	r3, r5
   13f74:	bgt	13e5c <XMaxRequestSize@plt+0x2524>
   13f78:	mov	r0, #1
   13f7c:	b	13df0 <XMaxRequestSize@plt+0x24b8>
   13f80:	bl	115fc <__stack_chk_fail@plt>
   13f84:			; <UNDEFINED> instruction: 0x00025eb0
   13f88:	andeq	r4, r1, r0, ror #31
   13f8c:	andeq	r6, r2, ip, ror #5
   13f90:	andeq	r6, r2, r0, ror #5
   13f94:	andeq	r4, r1, r4, ror pc
   13f98:	andeq	r4, r1, r8, lsr #31
   13f9c:	andeq	r5, r1, r8, lsl r0
   13fa0:	push	{r4, r5, r6, r7, r8, lr}
   13fa4:	sub	sp, sp, #32
   13fa8:	ldr	r6, [pc, #232]	; 14098 <XMaxRequestSize@plt+0x2760>
   13fac:	mov	r5, r1
   13fb0:	add	r2, sp, #20
   13fb4:	ldr	r3, [r6]
   13fb8:	add	r1, sp, #16
   13fbc:	str	r3, [sp, #28]
   13fc0:	mov	r4, r0
   13fc4:	bl	116e0 <XineramaQueryVersion@plt>
   13fc8:	cmp	r0, #0
   13fcc:	bne	13fe8 <XMaxRequestSize@plt+0x26b0>
   13fd0:	ldr	r2, [sp, #28]
   13fd4:	ldr	r3, [r6]
   13fd8:	cmp	r2, r3
   13fdc:	bne	14094 <XMaxRequestSize@plt+0x275c>
   13fe0:	add	sp, sp, #32
   13fe4:	pop	{r4, r5, r6, r7, r8, pc}
   13fe8:	mov	r1, r5
   13fec:	ldrd	r2, [sp, #16]
   13ff0:	mov	r0, r4
   13ff4:	bl	12d80 <XMaxRequestSize@plt+0x1448>
   13ff8:	mov	r0, r4
   13ffc:	bl	11824 <XineramaIsActive@plt>
   14000:	cmp	r0, #0
   14004:	beq	14084 <XMaxRequestSize@plt+0x274c>
   14008:	add	r1, sp, #32
   1400c:	mov	r5, #0
   14010:	mov	r0, r4
   14014:	str	r5, [r1, #-8]!
   14018:	bl	11614 <XineramaQueryScreens@plt>
   1401c:	ldr	r3, [sp, #24]
   14020:	cmp	r3, r5
   14024:	mov	r8, r0
   14028:	ble	14074 <XMaxRequestSize@plt+0x273c>
   1402c:	ldr	r7, [pc, #104]	; 1409c <XMaxRequestSize@plt+0x2764>
   14030:	mov	r4, r0
   14034:	ldrsh	r1, [r4, #6]
   14038:	ldrsh	r3, [r4, #8]
   1403c:	ldr	r2, [r4]
   14040:	str	r1, [sp, #8]
   14044:	ldrsh	r1, [r4, #4]
   14048:	mov	r0, #1
   1404c:	add	r5, r5, #1
   14050:	str	r1, [sp, #4]
   14054:	ldrsh	ip, [r4, #10]
   14058:	mov	r1, r7
   1405c:	add	r4, r4, #12
   14060:	str	ip, [sp]
   14064:	bl	117d0 <__printf_chk@plt>
   14068:	ldr	r3, [sp, #24]
   1406c:	cmp	r5, r3
   14070:	blt	14034 <XMaxRequestSize@plt+0x26fc>
   14074:	mov	r0, r8
   14078:	bl	1162c <XFree@plt>
   1407c:	mov	r0, #1
   14080:	b	13fd0 <XMaxRequestSize@plt+0x2698>
   14084:	ldr	r0, [pc, #20]	; 140a0 <XMaxRequestSize@plt+0x2768>
   14088:	bl	116f8 <puts@plt>
   1408c:	mov	r0, #1
   14090:	b	13fd0 <XMaxRequestSize@plt+0x2698>
   14094:	bl	115fc <__stack_chk_fail@plt>
   14098:			; <UNDEFINED> instruction: 0x00025eb0
   1409c:	andeq	r5, r1, r0, rrx
   140a0:	andeq	r5, r1, r8, asr #32
   140a4:	push	{r4, r5, r6, lr}
   140a8:	sub	sp, sp, #16
   140ac:	ldr	r4, [pc, #108]	; 14120 <XMaxRequestSize@plt+0x27e8>
   140b0:	mov	r2, sp
   140b4:	mov	r6, r1
   140b8:	ldr	r3, [r4]
   140bc:	mov	r1, r2
   140c0:	str	r3, [sp, #12]
   140c4:	mov	r5, r0
   140c8:	bl	11890 <XCompositeQueryExtension@plt>
   140cc:	cmp	r0, #0
   140d0:	bne	140ec <XMaxRequestSize@plt+0x27b4>
   140d4:	ldr	r2, [sp, #12]
   140d8:	ldr	r3, [r4]
   140dc:	cmp	r2, r3
   140e0:	bne	1411c <XMaxRequestSize@plt+0x27e4>
   140e4:	add	sp, sp, #16
   140e8:	pop	{r4, r5, r6, pc}
   140ec:	add	r2, sp, #8
   140f0:	add	r1, sp, #4
   140f4:	mov	r0, r5
   140f8:	bl	118b4 <XCompositeQueryVersion@plt>
   140fc:	cmp	r0, #0
   14100:	beq	140d4 <XMaxRequestSize@plt+0x279c>
   14104:	mov	r0, r5
   14108:	mov	r1, r6
   1410c:	ldrd	r2, [sp, #4]
   14110:	bl	12d80 <XMaxRequestSize@plt+0x1448>
   14114:	mov	r0, #1
   14118:	b	140d4 <XMaxRequestSize@plt+0x279c>
   1411c:	bl	115fc <__stack_chk_fail@plt>
   14120:			; <UNDEFINED> instruction: 0x00025eb0
   14124:	push	{r4, r5, r6, r7, lr}
   14128:	sub	sp, sp, #44	; 0x2c
   1412c:	ldr	r4, [pc, #244]	; 14228 <XMaxRequestSize@plt+0x28f0>
   14130:	mov	r6, r1
   14134:	add	r2, sp, #12
   14138:	ldr	r3, [r4]
   1413c:	add	r1, sp, #8
   14140:	str	r3, [sp, #36]	; 0x24
   14144:	mov	r5, r0
   14148:	bl	11884 <XF86DGAQueryVersion@plt>
   1414c:	cmp	r0, #0
   14150:	bne	1416c <XMaxRequestSize@plt+0x2834>
   14154:	ldr	r2, [sp, #36]	; 0x24
   14158:	ldr	r3, [r4]
   1415c:	cmp	r2, r3
   14160:	bne	14224 <XMaxRequestSize@plt+0x28ec>
   14164:	add	sp, sp, #44	; 0x2c
   14168:	pop	{r4, r5, r6, r7, pc}
   1416c:	ldrd	r2, [sp, #8]
   14170:	mov	r1, r6
   14174:	mov	r0, r5
   14178:	bl	12d80 <XMaxRequestSize@plt+0x1448>
   1417c:	add	r2, sp, #16
   14180:	ldr	r1, [r5, #132]	; 0x84
   14184:	mov	r0, r5
   14188:	bl	1159c <XF86DGAQueryDirectVideo@plt>
   1418c:	cmp	r0, #0
   14190:	beq	141a0 <XMaxRequestSize@plt+0x2868>
   14194:	ldr	r3, [sp, #16]
   14198:	ands	r6, r3, #1
   1419c:	bne	141b8 <XMaxRequestSize@plt+0x2880>
   141a0:	ldr	r2, [r5, #132]	; 0x84
   141a4:	ldr	r1, [pc, #128]	; 1422c <XMaxRequestSize@plt+0x28f4>
   141a8:	mov	r0, #1
   141ac:	bl	117d0 <__printf_chk@plt>
   141b0:	mov	r0, #1
   141b4:	b	14154 <XMaxRequestSize@plt+0x281c>
   141b8:	ldr	r0, [pc, #112]	; 14230 <XMaxRequestSize@plt+0x28f8>
   141bc:	bl	11794 <XSetErrorHandler@plt>
   141c0:	ldr	r7, [pc, #108]	; 14234 <XMaxRequestSize@plt+0x28fc>
   141c4:	add	r2, sp, #32
   141c8:	add	r3, sp, #28
   141cc:	ldr	r1, [r5, #132]	; 0x84
   141d0:	str	r2, [sp, #4]
   141d4:	str	r3, [sp]
   141d8:	add	r2, sp, #20
   141dc:	add	r3, sp, #24
   141e0:	str	r0, [r7, #4]
   141e4:	mov	r0, r5
   141e8:	bl	118e4 <XF86DGAGetVideoLL@plt>
   141ec:	cmp	r0, #0
   141f0:	beq	14154 <XMaxRequestSize@plt+0x281c>
   141f4:	ldr	r0, [sp, #32]
   141f8:	ldr	r1, [sp, #28]
   141fc:	ldrd	r2, [sp, #20]
   14200:	str	r0, [sp, #4]
   14204:	str	r1, [sp]
   14208:	mov	r0, #1
   1420c:	ldr	r1, [pc, #36]	; 14238 <XMaxRequestSize@plt+0x2900>
   14210:	bl	117d0 <__printf_chk@plt>
   14214:	ldr	r0, [r7, #4]
   14218:	bl	11794 <XSetErrorHandler@plt>
   1421c:	mov	r0, r6
   14220:	b	14154 <XMaxRequestSize@plt+0x281c>
   14224:	bl	115fc <__stack_chk_fail@plt>
   14228:			; <UNDEFINED> instruction: 0x00025eb0
   1422c:	andeq	r5, r1, ip, ror r0
   14230:	strdeq	r2, [r1], -r8
   14234:	andeq	r6, r2, ip, ror #5
   14238:	andeq	r5, r1, r0, lsr #1
   1423c:	push	{r4, r5, r6, lr}
   14240:	sub	sp, sp, #16
   14244:	ldr	r4, [pc, #152]	; 142e4 <XMaxRequestSize@plt+0x29ac>
   14248:	mov	r6, r1
   1424c:	add	r3, sp, #8
   14250:	ldr	ip, [r4]
   14254:	add	r2, sp, #4
   14258:	mov	r1, sp
   1425c:	str	ip, [sp, #12]
   14260:	mov	r5, r0
   14264:	bl	117e8 <XShmQueryVersion@plt>
   14268:	cmp	r0, #0
   1426c:	bne	14288 <XMaxRequestSize@plt+0x2950>
   14270:	ldr	r2, [sp, #12]
   14274:	ldr	r3, [r4]
   14278:	cmp	r2, r3
   1427c:	bne	142e0 <XMaxRequestSize@plt+0x29a8>
   14280:	add	sp, sp, #16
   14284:	pop	{r4, r5, r6, pc}
   14288:	ldrd	r2, [sp]
   1428c:	mov	r1, r6
   14290:	mov	r0, r5
   14294:	bl	12d80 <XMaxRequestSize@plt+0x1448>
   14298:	ldr	r1, [pc, #72]	; 142e8 <XMaxRequestSize@plt+0x29b0>
   1429c:	mov	r0, #1
   142a0:	bl	117d0 <__printf_chk@plt>
   142a4:	ldr	r3, [sp, #8]
   142a8:	cmp	r3, #0
   142ac:	bne	142c0 <XMaxRequestSize@plt+0x2988>
   142b0:	ldr	r0, [pc, #52]	; 142ec <XMaxRequestSize@plt+0x29b4>
   142b4:	bl	116f8 <puts@plt>
   142b8:	mov	r0, #1
   142bc:	b	14270 <XMaxRequestSize@plt+0x2938>
   142c0:	mov	r0, r5
   142c4:	bl	11584 <XShmPixmapFormat@plt>
   142c8:	ldr	r1, [pc, #32]	; 142f0 <XMaxRequestSize@plt+0x29b8>
   142cc:	mov	r2, r0
   142d0:	mov	r0, #1
   142d4:	bl	117d0 <__printf_chk@plt>
   142d8:	mov	r0, #1
   142dc:	b	14270 <XMaxRequestSize@plt+0x2938>
   142e0:	bl	115fc <__stack_chk_fail@plt>
   142e4:			; <UNDEFINED> instruction: 0x00025eb0
   142e8:	andeq	r5, r1, r4, ror #1
   142ec:	andeq	r5, r1, ip, lsl #2
   142f0:	strdeq	r5, [r1], -r8
   142f4:	subs	r2, r1, #1
   142f8:	bxeq	lr
   142fc:	bcc	144d4 <XMaxRequestSize@plt+0x2b9c>
   14300:	cmp	r0, r1
   14304:	bls	144b8 <XMaxRequestSize@plt+0x2b80>
   14308:	tst	r1, r2
   1430c:	beq	144c4 <XMaxRequestSize@plt+0x2b8c>
   14310:	clz	r3, r0
   14314:	clz	r2, r1
   14318:	sub	r3, r2, r3
   1431c:	rsbs	r3, r3, #31
   14320:	addne	r3, r3, r3, lsl #1
   14324:	mov	r2, #0
   14328:	addne	pc, pc, r3, lsl #2
   1432c:	nop			; (mov r0, r0)
   14330:	cmp	r0, r1, lsl #31
   14334:	adc	r2, r2, r2
   14338:	subcs	r0, r0, r1, lsl #31
   1433c:	cmp	r0, r1, lsl #30
   14340:	adc	r2, r2, r2
   14344:	subcs	r0, r0, r1, lsl #30
   14348:	cmp	r0, r1, lsl #29
   1434c:	adc	r2, r2, r2
   14350:	subcs	r0, r0, r1, lsl #29
   14354:	cmp	r0, r1, lsl #28
   14358:	adc	r2, r2, r2
   1435c:	subcs	r0, r0, r1, lsl #28
   14360:	cmp	r0, r1, lsl #27
   14364:	adc	r2, r2, r2
   14368:	subcs	r0, r0, r1, lsl #27
   1436c:	cmp	r0, r1, lsl #26
   14370:	adc	r2, r2, r2
   14374:	subcs	r0, r0, r1, lsl #26
   14378:	cmp	r0, r1, lsl #25
   1437c:	adc	r2, r2, r2
   14380:	subcs	r0, r0, r1, lsl #25
   14384:	cmp	r0, r1, lsl #24
   14388:	adc	r2, r2, r2
   1438c:	subcs	r0, r0, r1, lsl #24
   14390:	cmp	r0, r1, lsl #23
   14394:	adc	r2, r2, r2
   14398:	subcs	r0, r0, r1, lsl #23
   1439c:	cmp	r0, r1, lsl #22
   143a0:	adc	r2, r2, r2
   143a4:	subcs	r0, r0, r1, lsl #22
   143a8:	cmp	r0, r1, lsl #21
   143ac:	adc	r2, r2, r2
   143b0:	subcs	r0, r0, r1, lsl #21
   143b4:	cmp	r0, r1, lsl #20
   143b8:	adc	r2, r2, r2
   143bc:	subcs	r0, r0, r1, lsl #20
   143c0:	cmp	r0, r1, lsl #19
   143c4:	adc	r2, r2, r2
   143c8:	subcs	r0, r0, r1, lsl #19
   143cc:	cmp	r0, r1, lsl #18
   143d0:	adc	r2, r2, r2
   143d4:	subcs	r0, r0, r1, lsl #18
   143d8:	cmp	r0, r1, lsl #17
   143dc:	adc	r2, r2, r2
   143e0:	subcs	r0, r0, r1, lsl #17
   143e4:	cmp	r0, r1, lsl #16
   143e8:	adc	r2, r2, r2
   143ec:	subcs	r0, r0, r1, lsl #16
   143f0:	cmp	r0, r1, lsl #15
   143f4:	adc	r2, r2, r2
   143f8:	subcs	r0, r0, r1, lsl #15
   143fc:	cmp	r0, r1, lsl #14
   14400:	adc	r2, r2, r2
   14404:	subcs	r0, r0, r1, lsl #14
   14408:	cmp	r0, r1, lsl #13
   1440c:	adc	r2, r2, r2
   14410:	subcs	r0, r0, r1, lsl #13
   14414:	cmp	r0, r1, lsl #12
   14418:	adc	r2, r2, r2
   1441c:	subcs	r0, r0, r1, lsl #12
   14420:	cmp	r0, r1, lsl #11
   14424:	adc	r2, r2, r2
   14428:	subcs	r0, r0, r1, lsl #11
   1442c:	cmp	r0, r1, lsl #10
   14430:	adc	r2, r2, r2
   14434:	subcs	r0, r0, r1, lsl #10
   14438:	cmp	r0, r1, lsl #9
   1443c:	adc	r2, r2, r2
   14440:	subcs	r0, r0, r1, lsl #9
   14444:	cmp	r0, r1, lsl #8
   14448:	adc	r2, r2, r2
   1444c:	subcs	r0, r0, r1, lsl #8
   14450:	cmp	r0, r1, lsl #7
   14454:	adc	r2, r2, r2
   14458:	subcs	r0, r0, r1, lsl #7
   1445c:	cmp	r0, r1, lsl #6
   14460:	adc	r2, r2, r2
   14464:	subcs	r0, r0, r1, lsl #6
   14468:	cmp	r0, r1, lsl #5
   1446c:	adc	r2, r2, r2
   14470:	subcs	r0, r0, r1, lsl #5
   14474:	cmp	r0, r1, lsl #4
   14478:	adc	r2, r2, r2
   1447c:	subcs	r0, r0, r1, lsl #4
   14480:	cmp	r0, r1, lsl #3
   14484:	adc	r2, r2, r2
   14488:	subcs	r0, r0, r1, lsl #3
   1448c:	cmp	r0, r1, lsl #2
   14490:	adc	r2, r2, r2
   14494:	subcs	r0, r0, r1, lsl #2
   14498:	cmp	r0, r1, lsl #1
   1449c:	adc	r2, r2, r2
   144a0:	subcs	r0, r0, r1, lsl #1
   144a4:	cmp	r0, r1
   144a8:	adc	r2, r2, r2
   144ac:	subcs	r0, r0, r1
   144b0:	mov	r0, r2
   144b4:	bx	lr
   144b8:	moveq	r0, #1
   144bc:	movne	r0, #0
   144c0:	bx	lr
   144c4:	clz	r2, r1
   144c8:	rsb	r2, r2, #31
   144cc:	lsr	r0, r0, r2
   144d0:	bx	lr
   144d4:	cmp	r0, #0
   144d8:	mvnne	r0, #0
   144dc:	b	14740 <XMaxRequestSize@plt+0x2e08>
   144e0:	cmp	r1, #0
   144e4:	beq	144d4 <XMaxRequestSize@plt+0x2b9c>
   144e8:	push	{r0, r1, lr}
   144ec:	bl	142f4 <XMaxRequestSize@plt+0x29bc>
   144f0:	pop	{r1, r2, lr}
   144f4:	mul	r3, r2, r0
   144f8:	sub	r1, r1, r3
   144fc:	bx	lr
   14500:	cmp	r1, #0
   14504:	beq	14710 <XMaxRequestSize@plt+0x2dd8>
   14508:	eor	ip, r0, r1
   1450c:	rsbmi	r1, r1, #0
   14510:	subs	r2, r1, #1
   14514:	beq	146dc <XMaxRequestSize@plt+0x2da4>
   14518:	movs	r3, r0
   1451c:	rsbmi	r3, r0, #0
   14520:	cmp	r3, r1
   14524:	bls	146e8 <XMaxRequestSize@plt+0x2db0>
   14528:	tst	r1, r2
   1452c:	beq	146f8 <XMaxRequestSize@plt+0x2dc0>
   14530:	clz	r2, r3
   14534:	clz	r0, r1
   14538:	sub	r2, r0, r2
   1453c:	rsbs	r2, r2, #31
   14540:	addne	r2, r2, r2, lsl #1
   14544:	mov	r0, #0
   14548:	addne	pc, pc, r2, lsl #2
   1454c:	nop			; (mov r0, r0)
   14550:	cmp	r3, r1, lsl #31
   14554:	adc	r0, r0, r0
   14558:	subcs	r3, r3, r1, lsl #31
   1455c:	cmp	r3, r1, lsl #30
   14560:	adc	r0, r0, r0
   14564:	subcs	r3, r3, r1, lsl #30
   14568:	cmp	r3, r1, lsl #29
   1456c:	adc	r0, r0, r0
   14570:	subcs	r3, r3, r1, lsl #29
   14574:	cmp	r3, r1, lsl #28
   14578:	adc	r0, r0, r0
   1457c:	subcs	r3, r3, r1, lsl #28
   14580:	cmp	r3, r1, lsl #27
   14584:	adc	r0, r0, r0
   14588:	subcs	r3, r3, r1, lsl #27
   1458c:	cmp	r3, r1, lsl #26
   14590:	adc	r0, r0, r0
   14594:	subcs	r3, r3, r1, lsl #26
   14598:	cmp	r3, r1, lsl #25
   1459c:	adc	r0, r0, r0
   145a0:	subcs	r3, r3, r1, lsl #25
   145a4:	cmp	r3, r1, lsl #24
   145a8:	adc	r0, r0, r0
   145ac:	subcs	r3, r3, r1, lsl #24
   145b0:	cmp	r3, r1, lsl #23
   145b4:	adc	r0, r0, r0
   145b8:	subcs	r3, r3, r1, lsl #23
   145bc:	cmp	r3, r1, lsl #22
   145c0:	adc	r0, r0, r0
   145c4:	subcs	r3, r3, r1, lsl #22
   145c8:	cmp	r3, r1, lsl #21
   145cc:	adc	r0, r0, r0
   145d0:	subcs	r3, r3, r1, lsl #21
   145d4:	cmp	r3, r1, lsl #20
   145d8:	adc	r0, r0, r0
   145dc:	subcs	r3, r3, r1, lsl #20
   145e0:	cmp	r3, r1, lsl #19
   145e4:	adc	r0, r0, r0
   145e8:	subcs	r3, r3, r1, lsl #19
   145ec:	cmp	r3, r1, lsl #18
   145f0:	adc	r0, r0, r0
   145f4:	subcs	r3, r3, r1, lsl #18
   145f8:	cmp	r3, r1, lsl #17
   145fc:	adc	r0, r0, r0
   14600:	subcs	r3, r3, r1, lsl #17
   14604:	cmp	r3, r1, lsl #16
   14608:	adc	r0, r0, r0
   1460c:	subcs	r3, r3, r1, lsl #16
   14610:	cmp	r3, r1, lsl #15
   14614:	adc	r0, r0, r0
   14618:	subcs	r3, r3, r1, lsl #15
   1461c:	cmp	r3, r1, lsl #14
   14620:	adc	r0, r0, r0
   14624:	subcs	r3, r3, r1, lsl #14
   14628:	cmp	r3, r1, lsl #13
   1462c:	adc	r0, r0, r0
   14630:	subcs	r3, r3, r1, lsl #13
   14634:	cmp	r3, r1, lsl #12
   14638:	adc	r0, r0, r0
   1463c:	subcs	r3, r3, r1, lsl #12
   14640:	cmp	r3, r1, lsl #11
   14644:	adc	r0, r0, r0
   14648:	subcs	r3, r3, r1, lsl #11
   1464c:	cmp	r3, r1, lsl #10
   14650:	adc	r0, r0, r0
   14654:	subcs	r3, r3, r1, lsl #10
   14658:	cmp	r3, r1, lsl #9
   1465c:	adc	r0, r0, r0
   14660:	subcs	r3, r3, r1, lsl #9
   14664:	cmp	r3, r1, lsl #8
   14668:	adc	r0, r0, r0
   1466c:	subcs	r3, r3, r1, lsl #8
   14670:	cmp	r3, r1, lsl #7
   14674:	adc	r0, r0, r0
   14678:	subcs	r3, r3, r1, lsl #7
   1467c:	cmp	r3, r1, lsl #6
   14680:	adc	r0, r0, r0
   14684:	subcs	r3, r3, r1, lsl #6
   14688:	cmp	r3, r1, lsl #5
   1468c:	adc	r0, r0, r0
   14690:	subcs	r3, r3, r1, lsl #5
   14694:	cmp	r3, r1, lsl #4
   14698:	adc	r0, r0, r0
   1469c:	subcs	r3, r3, r1, lsl #4
   146a0:	cmp	r3, r1, lsl #3
   146a4:	adc	r0, r0, r0
   146a8:	subcs	r3, r3, r1, lsl #3
   146ac:	cmp	r3, r1, lsl #2
   146b0:	adc	r0, r0, r0
   146b4:	subcs	r3, r3, r1, lsl #2
   146b8:	cmp	r3, r1, lsl #1
   146bc:	adc	r0, r0, r0
   146c0:	subcs	r3, r3, r1, lsl #1
   146c4:	cmp	r3, r1
   146c8:	adc	r0, r0, r0
   146cc:	subcs	r3, r3, r1
   146d0:	cmp	ip, #0
   146d4:	rsbmi	r0, r0, #0
   146d8:	bx	lr
   146dc:	teq	ip, r0
   146e0:	rsbmi	r0, r0, #0
   146e4:	bx	lr
   146e8:	movcc	r0, #0
   146ec:	asreq	r0, ip, #31
   146f0:	orreq	r0, r0, #1
   146f4:	bx	lr
   146f8:	clz	r2, r1
   146fc:	rsb	r2, r2, #31
   14700:	cmp	ip, #0
   14704:	lsr	r0, r3, r2
   14708:	rsbmi	r0, r0, #0
   1470c:	bx	lr
   14710:	cmp	r0, #0
   14714:	mvngt	r0, #-2147483648	; 0x80000000
   14718:	movlt	r0, #-2147483648	; 0x80000000
   1471c:	b	14740 <XMaxRequestSize@plt+0x2e08>
   14720:	cmp	r1, #0
   14724:	beq	14710 <XMaxRequestSize@plt+0x2dd8>
   14728:	push	{r0, r1, lr}
   1472c:	bl	14508 <XMaxRequestSize@plt+0x2bd0>
   14730:	pop	{r1, r2, lr}
   14734:	mul	r3, r2, r0
   14738:	sub	r1, r1, r3
   1473c:	bx	lr
   14740:	push	{r1, lr}
   14744:	mov	r0, #8
   14748:	bl	1156c <raise@plt>
   1474c:	pop	{r1, pc}
   14750:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14754:	mov	r7, r0
   14758:	ldr	r6, [pc, #72]	; 147a8 <XMaxRequestSize@plt+0x2e70>
   1475c:	ldr	r5, [pc, #72]	; 147ac <XMaxRequestSize@plt+0x2e74>
   14760:	add	r6, pc, r6
   14764:	add	r5, pc, r5
   14768:	sub	r6, r6, r5
   1476c:	mov	r8, r1
   14770:	mov	r9, r2
   14774:	bl	11534 <_init@@Base>
   14778:	asrs	r6, r6, #2
   1477c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14780:	mov	r4, #0
   14784:	add	r4, r4, #1
   14788:	ldr	r3, [r5], #4
   1478c:	mov	r2, r9
   14790:	mov	r1, r8
   14794:	mov	r0, r7
   14798:	blx	r3
   1479c:	cmp	r6, r4
   147a0:	bne	14784 <XMaxRequestSize@plt+0x2e4c>
   147a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   147a8:	andeq	r1, r1, r4, asr #14
   147ac:	andeq	r1, r1, ip, lsr r7
   147b0:	bx	lr

Disassembly of section .fini:

000147b4 <_fini@@Base>:
   147b4:	push	{r3, lr}
   147b8:	pop	{r3, pc}
