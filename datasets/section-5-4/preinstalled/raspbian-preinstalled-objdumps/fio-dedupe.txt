
raspbian-preinstalled/fio-dedupe:     file format elf32-littlearm


Disassembly of section .init:

0001197c <.init>:
   1197c:	push	{r3, lr}
   11980:	bl	12520 <_start@@Base+0x3c>
   11984:	pop	{r3, pc}

Disassembly of section .plt:

00011988 <pthread_mutex_unlock@plt-0x14>:
   11988:	push	{lr}		; (str lr, [sp, #-4]!)
   1198c:	ldr	lr, [pc, #4]	; 11998 <pthread_mutex_unlock@plt-0x4>
   11990:	add	lr, pc, lr
   11994:	ldr	pc, [lr, #8]!
   11998:	andeq	r7, r1, ip, lsl #11

0001199c <pthread_mutex_unlock@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #94208	; 0x17000
   119a4:	ldr	pc, [ip, #1420]!	; 0x58c

000119a8 <calloc@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #94208	; 0x17000
   119b0:	ldr	pc, [ip, #1412]!	; 0x584

000119b4 <raise@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #94208	; 0x17000
   119bc:	ldr	pc, [ip, #1404]!	; 0x57c

000119c0 <pthread_condattr_setpshared@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #94208	; 0x17000
   119c8:	ldr	pc, [ip, #1396]!	; 0x574

000119cc <pthread_mutexattr_init@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #94208	; 0x17000
   119d4:	ldr	pc, [ip, #1388]!	; 0x56c

000119d8 <strtol@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #94208	; 0x17000
   119e0:	ldr	pc, [ip, #1380]!	; 0x564

000119e4 <pthread_mutex_destroy@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #94208	; 0x17000
   119ec:	ldr	pc, [ip, #1372]!	; 0x55c

000119f0 <fflush@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #94208	; 0x17000
   119f8:	ldr	pc, [ip, #1364]!	; 0x554

000119fc <free@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #94208	; 0x17000
   11a04:	ldr	pc, [ip, #1356]!	; 0x54c

00011a08 <pthread_mutex_lock@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #94208	; 0x17000
   11a10:	ldr	pc, [ip, #1348]!	; 0x544

00011a14 <__vsnprintf_chk@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #94208	; 0x17000
   11a1c:	ldr	pc, [ip, #1340]!	; 0x53c

00011a20 <memcpy@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #94208	; 0x17000
   11a28:	ldr	pc, [ip, #1332]!	; 0x534

00011a2c <mmap64@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #94208	; 0x17000
   11a34:	ldr	pc, [ip, #1324]!	; 0x52c

00011a38 <pthread_mutex_init@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #94208	; 0x17000
   11a40:	ldr	pc, [ip, #1316]!	; 0x524

00011a44 <memcmp@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #94208	; 0x17000
   11a4c:	ldr	pc, [ip, #1308]!	; 0x51c

00011a50 <strdup@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #94208	; 0x17000
   11a58:	ldr	pc, [ip, #1300]!	; 0x514

00011a5c <__stack_chk_fail@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #94208	; 0x17000
   11a64:	ldr	pc, [ip, #1292]!	; 0x50c

00011a68 <pthread_condattr_init@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #94208	; 0x17000
   11a70:	ldr	pc, [ip, #1284]!	; 0x504

00011a74 <pthread_cond_init@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #94208	; 0x17000
   11a7c:	ldr	pc, [ip, #1276]!	; 0x4fc

00011a80 <sysconf@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #94208	; 0x17000
   11a88:	ldr	pc, [ip, #1268]!	; 0x4f4

00011a8c <pthread_cond_destroy@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #94208	; 0x17000
   11a94:	ldr	pc, [ip, #1260]!	; 0x4ec

00011a98 <perror@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #94208	; 0x17000
   11aa0:	ldr	pc, [ip, #1252]!	; 0x4e4

00011aa4 <__fxstat64@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #94208	; 0x17000
   11aac:	ldr	pc, [ip, #1244]!	; 0x4dc

00011ab0 <fwrite@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #94208	; 0x17000
   11ab8:	ldr	pc, [ip, #1236]!	; 0x4d4

00011abc <ioctl@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #94208	; 0x17000
   11ac4:	ldr	pc, [ip, #1228]!	; 0x4cc

00011ac8 <usleep@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #94208	; 0x17000
   11ad0:	ldr	pc, [ip, #1220]!	; 0x4c4

00011ad4 <strcpy@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #94208	; 0x17000
   11adc:	ldr	pc, [ip, #1212]!	; 0x4bc

00011ae0 <gettimeofday@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #94208	; 0x17000
   11ae8:	ldr	pc, [ip, #1204]!	; 0x4b4

00011aec <pread64@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #94208	; 0x17000
   11af4:	ldr	pc, [ip, #1196]!	; 0x4ac

00011af8 <pthread_create@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #94208	; 0x17000
   11b00:	ldr	pc, [ip, #1188]!	; 0x4a4

00011b04 <puts@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #94208	; 0x17000
   11b0c:	ldr	pc, [ip, #1180]!	; 0x49c

00011b10 <malloc@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #94208	; 0x17000
   11b18:	ldr	pc, [ip, #1172]!	; 0x494

00011b1c <__libc_start_main@plt>:
   11b1c:	add	ip, pc, #0, 12
   11b20:	add	ip, ip, #94208	; 0x17000
   11b24:	ldr	pc, [ip, #1164]!	; 0x48c

00011b28 <strerror@plt>:
   11b28:	add	ip, pc, #0, 12
   11b2c:	add	ip, ip, #94208	; 0x17000
   11b30:	ldr	pc, [ip, #1156]!	; 0x484

00011b34 <__gmon_start__@plt>:
   11b34:	add	ip, pc, #0, 12
   11b38:	add	ip, ip, #94208	; 0x17000
   11b3c:	ldr	pc, [ip, #1148]!	; 0x47c

00011b40 <strlen@plt>:
   11b40:	add	ip, pc, #0, 12
   11b44:	add	ip, ip, #94208	; 0x17000
   11b48:	ldr	pc, [ip, #1140]!	; 0x474

00011b4c <getopt@plt>:
   11b4c:	add	ip, pc, #0, 12
   11b50:	add	ip, ip, #94208	; 0x17000
   11b54:	ldr	pc, [ip, #1132]!	; 0x46c

00011b58 <__open64_2@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #94208	; 0x17000
   11b60:	ldr	pc, [ip, #1124]!	; 0x464

00011b64 <__errno_location@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #94208	; 0x17000
   11b6c:	ldr	pc, [ip, #1116]!	; 0x45c

00011b70 <memset@plt>:
   11b70:	add	ip, pc, #0, 12
   11b74:	add	ip, ip, #94208	; 0x17000
   11b78:	ldr	pc, [ip, #1108]!	; 0x454

00011b7c <__printf_chk@plt>:
   11b7c:	add	ip, pc, #0, 12
   11b80:	add	ip, ip, #94208	; 0x17000
   11b84:	ldr	pc, [ip, #1100]!	; 0x44c

00011b88 <pthread_mutexattr_setpshared@plt>:
   11b88:	add	ip, pc, #0, 12
   11b8c:	add	ip, ip, #94208	; 0x17000
   11b90:	ldr	pc, [ip, #1092]!	; 0x444

00011b94 <munmap@plt>:
   11b94:	add	ip, pc, #0, 12
   11b98:	add	ip, ip, #94208	; 0x17000
   11b9c:	ldr	pc, [ip, #1084]!	; 0x43c

00011ba0 <pthread_cond_timedwait@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #94208	; 0x17000
   11ba8:	ldr	pc, [ip, #1076]!	; 0x434

00011bac <pthread_join@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #94208	; 0x17000
   11bb4:	ldr	pc, [ip, #1068]!	; 0x42c

00011bb8 <pthread_cond_wait@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #94208	; 0x17000
   11bc0:	ldr	pc, [ip, #1060]!	; 0x424

00011bc4 <clock_gettime@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #94208	; 0x17000
   11bcc:	ldr	pc, [ip, #1052]!	; 0x41c

00011bd0 <pthread_cond_signal@plt>:
   11bd0:	add	ip, pc, #0, 12
   11bd4:	add	ip, ip, #94208	; 0x17000
   11bd8:	ldr	pc, [ip, #1044]!	; 0x414

00011bdc <abort@plt>:
   11bdc:	add	ip, pc, #0, 12
   11be0:	add	ip, ip, #94208	; 0x17000
   11be4:	ldr	pc, [ip, #1036]!	; 0x40c

00011be8 <close@plt>:
   11be8:	add	ip, pc, #0, 12
   11bec:	add	ip, ip, #94208	; 0x17000
   11bf0:	ldr	pc, [ip, #1028]!	; 0x404

00011bf4 <__assert_fail@plt>:
   11bf4:	add	ip, pc, #0, 12
   11bf8:	add	ip, ip, #94208	; 0x17000
   11bfc:	ldr	pc, [ip, #1020]!	; 0x3fc

Disassembly of section .text:

00011c00 <main@@Base>:
   11c00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c04:	vpush	{d8-d9}
   11c08:	ldr	r7, [pc, #1972]	; 123c4 <main@@Base+0x7c4>
   11c0c:	mov	r6, r0
   11c10:	mov	r4, r1
   11c14:	sub	sp, sp, #164	; 0xa4
   11c18:	ldr	r3, [r7]
   11c1c:	ldr	r5, [pc, #1956]	; 123c8 <main@@Base+0x7c8>
   11c20:	str	r3, [sp, #156]	; 0x9c
   11c24:	bl	161e0 <debug_init@@Base>
   11c28:	ldr	r8, [pc, #1948]	; 123cc <main@@Base+0x7cc>
   11c2c:	ldr	sl, [pc, #1948]	; 123d0 <main@@Base+0x7d0>
   11c30:	ldr	r9, [pc, #1948]	; 123d4 <main@@Base+0x7d4>
   11c34:	mov	r2, r5
   11c38:	mov	r1, r4
   11c3c:	mov	r0, r6
   11c40:	bl	11b4c <getopt@plt>
   11c44:	cmn	r0, #1
   11c48:	beq	11dfc <main@@Base+0x1fc>
   11c4c:	sub	r0, r0, #66	; 0x42
   11c50:	cmp	r0, #50	; 0x32
   11c54:	ldrls	pc, [pc, r0, lsl #2]
   11c58:	b	11dd0 <main@@Base+0x1d0>
   11c5c:			; <UNDEFINED> instruction: 0x00011db8
   11c60:	ldrdeq	r1, [r1], -r0
   11c64:	ldrdeq	r1, [r1], -r0
   11c68:	ldrdeq	r1, [r1], -r0
   11c6c:	ldrdeq	r1, [r1], -r0
   11c70:	ldrdeq	r1, [r1], -r0
   11c74:	ldrdeq	r1, [r1], -r0
   11c78:	ldrdeq	r1, [r1], -r0
   11c7c:	ldrdeq	r1, [r1], -r0
   11c80:	ldrdeq	r1, [r1], -r0
   11c84:	ldrdeq	r1, [r1], -r0
   11c88:	ldrdeq	r1, [r1], -r0
   11c8c:	ldrdeq	r1, [r1], -r0
   11c90:	ldrdeq	r1, [r1], -r0
   11c94:	ldrdeq	r1, [r1], -r0
   11c98:	ldrdeq	r1, [r1], -r0
   11c9c:	ldrdeq	r1, [r1], -r0
   11ca0:	ldrdeq	r1, [r1], -r0
   11ca4:	ldrdeq	r1, [r1], -r0
   11ca8:	ldrdeq	r1, [r1], -r0
   11cac:	ldrdeq	r1, [r1], -r0
   11cb0:	ldrdeq	r1, [r1], -r0
   11cb4:	ldrdeq	r1, [r1], -r0
   11cb8:	ldrdeq	r1, [r1], -r0
   11cbc:	ldrdeq	r1, [r1], -r0
   11cc0:	ldrdeq	r1, [r1], -r0
   11cc4:	ldrdeq	r1, [r1], -r0
   11cc8:	ldrdeq	r1, [r1], -r0
   11ccc:	ldrdeq	r1, [r1], -r0
   11cd0:	ldrdeq	r1, [r1], -r0
   11cd4:	ldrdeq	r1, [r1], -r0
   11cd8:	ldrdeq	r1, [r1], -r0
   11cdc:	andeq	r1, r1, r0, lsr #27
   11ce0:	andeq	r1, r1, r8, lsl #27
   11ce4:	andeq	r1, r1, r0, ror sp
   11ce8:	ldrdeq	r1, [r1], -r0
   11cec:	ldrdeq	r1, [r1], -r0
   11cf0:	ldrdeq	r1, [r1], -r0
   11cf4:	ldrdeq	r1, [r1], -r0
   11cf8:	ldrdeq	r1, [r1], -r0
   11cfc:	ldrdeq	r1, [r1], -r0
   11d00:	ldrdeq	r1, [r1], -r0
   11d04:	ldrdeq	r1, [r1], -r0
   11d08:	ldrdeq	r1, [r1], -r0
   11d0c:	ldrdeq	r1, [r1], -r0
   11d10:	andeq	r1, r1, r8, asr sp
   11d14:	andeq	r1, r1, r0, asr #26
   11d18:	ldrdeq	r1, [r1], -r0
   11d1c:	ldrdeq	r1, [r1], -r0
   11d20:	ldrdeq	r1, [r1], -r0
   11d24:	andeq	r1, r1, r8, lsr #26
   11d28:	mov	r2, #10
   11d2c:	mov	r1, #0
   11d30:	ldr	r0, [r8]
   11d34:	bl	119d8 <strtol@plt>
   11d38:	str	r0, [r9, #388]	; 0x184
   11d3c:	b	11c34 <main@@Base+0x34>
   11d40:	mov	r2, #10
   11d44:	mov	r1, #0
   11d48:	ldr	r0, [r8]
   11d4c:	bl	119d8 <strtol@plt>
   11d50:	str	r0, [sl, #4]
   11d54:	b	11c34 <main@@Base+0x34>
   11d58:	mov	r2, #10
   11d5c:	mov	r1, #0
   11d60:	ldr	r0, [r8]
   11d64:	bl	119d8 <strtol@plt>
   11d68:	str	r0, [r9, #392]	; 0x188
   11d6c:	b	11c34 <main@@Base+0x34>
   11d70:	mov	r2, #10
   11d74:	mov	r1, #0
   11d78:	ldr	r0, [r8]
   11d7c:	bl	119d8 <strtol@plt>
   11d80:	str	r0, [r9, #384]	; 0x180
   11d84:	b	11c34 <main@@Base+0x34>
   11d88:	mov	r2, #10
   11d8c:	mov	r1, #0
   11d90:	ldr	r0, [r8]
   11d94:	bl	119d8 <strtol@plt>
   11d98:	str	r0, [r9, #28]
   11d9c:	b	11c34 <main@@Base+0x34>
   11da0:	mov	r2, #10
   11da4:	mov	r1, #0
   11da8:	ldr	r0, [r8]
   11dac:	bl	119d8 <strtol@plt>
   11db0:	str	r0, [sl]
   11db4:	b	11c34 <main@@Base+0x34>
   11db8:	mov	r2, #10
   11dbc:	mov	r1, #0
   11dc0:	ldr	r0, [r8]
   11dc4:	bl	119d8 <strtol@plt>
   11dc8:	str	r0, [sl, #8]
   11dcc:	b	11c34 <main@@Base+0x34>
   11dd0:	mov	r0, r4
   11dd4:	bl	125d4 <_start@@Base+0xf0>
   11dd8:	mov	sl, r0
   11ddc:	ldr	r2, [sp, #156]	; 0x9c
   11de0:	ldr	r3, [r7]
   11de4:	mov	r0, sl
   11de8:	cmp	r2, r3
   11dec:	bne	124d0 <main@@Base+0x8d0>
   11df0:	add	sp, sp, #164	; 0xa4
   11df4:	vpop	{d8-d9}
   11df8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11dfc:	ldr	r5, [pc, #1488]	; 123d4 <main@@Base+0x7d4>
   11e00:	ldr	r3, [r5, #384]	; 0x180
   11e04:	ldr	r2, [r5, #28]
   11e08:	orrs	r3, r2, r3
   11e0c:	movne	r2, #0
   11e10:	ldrne	r3, [pc, #1464]	; 123d0 <main@@Base+0x7d0>
   11e14:	strne	r2, [r3, #8]
   11e18:	ldr	r3, [r5, #388]	; 0x184
   11e1c:	cmp	r3, #0
   11e20:	beq	1211c <main@@Base+0x51c>
   11e24:	ldr	r8, [pc, #1452]	; 123d8 <main@@Base+0x7d8>
   11e28:	ldr	r3, [r8]
   11e2c:	cmp	r3, r6
   11e30:	beq	11dd0 <main@@Base+0x1d0>
   11e34:	bl	13cf4 <sinit@@Base>
   11e38:	mov	r6, #0
   11e3c:	mov	r0, #1
   11e40:	str	r6, [r5]
   11e44:	bl	136b8 <fio_sem_init@@Base>
   11e48:	ldr	r2, [r8]
   11e4c:	ldr	r3, [r5, #392]	; 0x188
   11e50:	mov	r1, r6
   11e54:	ldr	r4, [r4, r2, lsl #2]
   11e58:	cmp	r3, r6
   11e5c:	mov	r2, #344	; 0x158
   11e60:	movne	r6, #65536	; 0x10000
   11e64:	str	r0, [r5, #32]
   11e68:	ldr	r0, [pc, #1388]	; 123dc <main@@Base+0x7dc>
   11e6c:	bl	11b70 <memset@plt>
   11e70:	mov	r0, r4
   11e74:	bl	11a50 <strdup@plt>
   11e78:	mov	r1, r6
   11e7c:	str	r0, [r5, #72]	; 0x48
   11e80:	mov	r0, r4
   11e84:	bl	11b58 <__open64_2@plt>
   11e88:	cmn	r0, #1
   11e8c:	str	r0, [r5, #52]	; 0x34
   11e90:	beq	120d8 <main@@Base+0x4d8>
   11e94:	mov	r1, r0
   11e98:	add	r2, sp, #48	; 0x30
   11e9c:	mov	r0, #3
   11ea0:	bl	11aa4 <__fxstat64@plt>
   11ea4:	cmp	r0, #0
   11ea8:	blt	1212c <main@@Base+0x52c>
   11eac:	ldr	r3, [sp, #64]	; 0x40
   11eb0:	and	r3, r3, #61440	; 0xf000
   11eb4:	cmp	r3, #24576	; 0x6000
   11eb8:	ldrne	lr, [sp, #96]	; 0x60
   11ebc:	ldrne	ip, [sp, #100]	; 0x64
   11ec0:	beq	12338 <main@@Base+0x738>
   11ec4:	ldr	r9, [pc, #1284]	; 123d0 <main@@Base+0x7d0>
   11ec8:	mov	r3, #0
   11ecc:	ldr	r2, [r9]
   11ed0:	rsbs	r0, r2, #0
   11ed4:	rsc	r1, r3, #0
   11ed8:	and	sl, r0, lr
   11edc:	and	fp, r1, ip
   11ee0:	orrs	r1, sl, fp
   11ee4:	beq	120e0 <main@@Base+0x4e0>
   11ee8:	ldr	r1, [r9, #8]
   11eec:	cmp	r1, #0
   11ef0:	bne	12310 <main@@Base+0x710>
   11ef4:	ldr	r3, [r5, #388]	; 0x184
   11ef8:	mov	r2, r4
   11efc:	strd	sl, [sp]
   11f00:	str	r3, [sp, #8]
   11f04:	ldr	r1, [pc, #1236]	; 123e0 <main@@Base+0x7e0>
   11f08:	mov	r0, #1
   11f0c:	bl	11b7c <__printf_chk@plt>
   11f10:	ldr	r2, [r9]
   11f14:	mov	r1, fp
   11f18:	mov	r3, #0
   11f1c:	strd	sl, [r5, #16]
   11f20:	mov	r0, sl
   11f24:	bl	1716c <fnv@@Base+0x7cc>
   11f28:	mov	r2, #0
   11f2c:	mov	r3, #0
   11f30:	strd	r2, [r5, #8]
   11f34:	vmov	s16, r0
   11f38:	mov	r0, #1
   11f3c:	bl	136b8 <fio_sem_init@@Base>
   11f40:	ldr	r4, [r5, #388]	; 0x184
   11f44:	mov	r3, #48	; 0x30
   11f48:	str	r0, [r5, #4]
   11f4c:	mul	r0, r3, r4
   11f50:	bl	11b10 <malloc@plt>
   11f54:	cmp	r4, #0
   11f58:	movne	r8, #0
   11f5c:	ldrne	fp, [pc, #1152]	; 123e4 <main@@Base+0x7e4>
   11f60:	mov	r6, r0
   11f64:	movne	r4, r0
   11f68:	bne	11f84 <main@@Base+0x384>
   11f6c:	b	12300 <main@@Base+0x700>
   11f70:	ldr	r3, [r5, #388]	; 0x184
   11f74:	add	r8, r8, #1
   11f78:	cmp	r3, r8
   11f7c:	add	r4, r4, #48	; 0x30
   11f80:	bls	12300 <main@@Base+0x700>
   11f84:	mov	r2, #48	; 0x30
   11f88:	mov	r1, #0
   11f8c:	mov	r0, r4
   11f90:	bl	11b70 <memset@plt>
   11f94:	ldr	ip, [r5, #52]	; 0x34
   11f98:	mov	r3, r4
   11f9c:	mov	r2, fp
   11fa0:	mov	r1, #0
   11fa4:	mov	r0, r4
   11fa8:	str	ip, [r4, #8]
   11fac:	bl	11af8 <pthread_create@plt>
   11fb0:	cmp	r0, #0
   11fb4:	beq	11f70 <main@@Base+0x370>
   11fb8:	mov	sl, r0
   11fbc:	ldr	r0, [pc, #1060]	; 123e8 <main@@Base+0x7e8>
   11fc0:	bl	134c8 <log_err@@Base>
   11fc4:	add	r0, sp, #40	; 0x28
   11fc8:	mov	r1, #0
   11fcc:	bl	144f0 <fio_gettime@@Base>
   11fd0:	ldr	r3, [r9, #4]
   11fd4:	cmp	r3, #0
   11fd8:	beq	12168 <main@@Base+0x568>
   11fdc:	vcvt.f32.u32	s16, s16
   11fe0:	vldr	s15, [pc, #984]	; 123c0 <main@@Base+0x7c0>
   11fe4:	mov	r8, #0
   11fe8:	vdiv.f32	s18, s15, s16
   11fec:	ldr	ip, [r5, #388]	; 0x184
   11ff0:	cmp	ip, #0
   11ff4:	beq	12308 <main@@Base+0x708>
   11ff8:	ldr	r2, [r6, #4]
   11ffc:	ldr	r4, [r6, #32]
   12000:	cmp	r2, #0
   12004:	bne	12168 <main@@Base+0x568>
   12008:	add	r3, r6, #48	; 0x30
   1200c:	b	12028 <main@@Base+0x428>
   12010:	ldr	r0, [r3, #4]
   12014:	ldr	r1, [r3, #32]
   12018:	cmp	r0, #0
   1201c:	add	r4, r4, r1
   12020:	add	r3, r3, #48	; 0x30
   12024:	bne	12168 <main@@Base+0x568>
   12028:	add	r2, r2, #1
   1202c:	cmp	r2, ip
   12030:	bne	12010 <main@@Base+0x410>
   12034:	vmov	s15, r4
   12038:	add	r0, sp, #40	; 0x28
   1203c:	ldr	fp, [r9]
   12040:	vcvt.f32.u32	s16, s15
   12044:	bl	14bec <mtime_since_now@@Base>
   12048:	vmul.f32	s16, s18, s16
   1204c:	vcvt.f64.f32	d8, s16
   12050:	mov	r2, r0
   12054:	mov	r3, r1
   12058:	strd	r2, [sp, #16]
   1205c:	orrs	r3, r2, r3
   12060:	beq	12138 <main@@Base+0x538>
   12064:	sub	r8, r4, r8
   12068:	ldr	r3, [sp, #20]
   1206c:	mul	fp, fp, r8
   12070:	ldr	r2, [sp, #16]
   12074:	mov	r0, #1000	; 0x3e8
   12078:	lsl	r3, r3, #10
   1207c:	orr	r3, r3, r2, lsr #22
   12080:	mul	r0, r0, fp
   12084:	lsl	r2, r2, #10
   12088:	mov	r1, #0
   1208c:	bl	1716c <fnv@@Base+0x7cc>
   12090:	vmov	r2, r3, d8
   12094:	ldr	r1, [pc, #848]	; 123ec <main@@Base+0x7ec>
   12098:	str	r0, [sp]
   1209c:	mov	r0, #1
   120a0:	bl	11b7c <__printf_chk@plt>
   120a4:	mov	r1, #0
   120a8:	add	r0, sp, #40	; 0x28
   120ac:	bl	144f0 <fio_gettime@@Base>
   120b0:	ldr	r3, [pc, #824]	; 123f0 <main@@Base+0x7f0>
   120b4:	ldr	r0, [r3]
   120b8:	bl	119f0 <fflush@plt>
   120bc:	ldr	r0, [pc, #816]	; 123f4 <main@@Base+0x7f4>
   120c0:	bl	11ac8 <usleep@plt>
   120c4:	ldr	r3, [r9, #4]
   120c8:	cmp	r3, #0
   120cc:	beq	12168 <main@@Base+0x568>
   120d0:	mov	r8, r4
   120d4:	b	11fec <main@@Base+0x3ec>
   120d8:	ldr	r0, [pc, #792]	; 123f8 <main@@Base+0x7f8>
   120dc:	bl	11a98 <perror@plt>
   120e0:	ldr	r0, [r5, #52]	; 0x34
   120e4:	cmn	r0, #1
   120e8:	beq	120f0 <main@@Base+0x4f0>
   120ec:	bl	11be8 <close@plt>
   120f0:	ldr	r0, [r5, #72]	; 0x48
   120f4:	bl	119fc <free@plt>
   120f8:	mov	sl, #1
   120fc:	ldr	r0, [r5, #32]
   12100:	bl	1364c <fio_sem_remove@@Base>
   12104:	ldr	r0, [r5, #24]
   12108:	cmp	r0, #0
   1210c:	beq	12114 <main@@Base+0x514>
   12110:	bl	15e84 <bloom_free@@Base>
   12114:	bl	13e44 <scleanup@@Base>
   12118:	b	11ddc <main@@Base+0x1dc>
   1211c:	mov	r0, #84	; 0x54
   12120:	bl	11a80 <sysconf@plt>
   12124:	str	r0, [r5, #388]	; 0x184
   12128:	b	11e24 <main@@Base+0x224>
   1212c:	ldr	r0, [pc, #712]	; 123fc <main@@Base+0x7fc>
   12130:	bl	11a98 <perror@plt>
   12134:	b	120e0 <main@@Base+0x4e0>
   12138:	vmov	r2, r3, d8
   1213c:	ldr	r1, [pc, #700]	; 12400 <main@@Base+0x800>
   12140:	mov	r0, #1
   12144:	bl	11b7c <__printf_chk@plt>
   12148:	ldr	r3, [pc, #672]	; 123f0 <main@@Base+0x7f0>
   1214c:	ldr	r0, [r3]
   12150:	bl	119f0 <fflush@plt>
   12154:	ldr	r0, [pc, #664]	; 123f4 <main@@Base+0x7f4>
   12158:	bl	11ac8 <usleep@plt>
   1215c:	ldr	r3, [r9, #4]
   12160:	cmp	r3, #0
   12164:	bne	11fec <main@@Base+0x3ec>
   12168:	ldr	r2, [r5, #388]	; 0x184
   1216c:	cmp	r2, #0
   12170:	moveq	r8, #1
   12174:	moveq	r9, #0
   12178:	moveq	r3, r2
   1217c:	beq	121dc <main@@Base+0x5dc>
   12180:	mov	fp, #0
   12184:	mov	r4, r6
   12188:	str	sl, [sp, #16]
   1218c:	mov	r8, #1
   12190:	mov	sl, r6
   12194:	mov	r9, #0
   12198:	mov	r6, fp
   1219c:	add	r1, sp, #40	; 0x28
   121a0:	ldr	r0, [r4]
   121a4:	bl	11bac <pthread_join@plt>
   121a8:	ldr	r1, [r4, #36]	; 0x24
   121ac:	ldr	r2, [r5, #388]	; 0x184
   121b0:	ldr	r3, [r4, #32]
   121b4:	adds	r8, r8, r1
   121b8:	add	fp, fp, #1
   121bc:	adc	r9, r9, #0
   121c0:	cmp	r2, fp
   121c4:	add	r6, r6, r3
   121c8:	add	r4, r4, #48	; 0x30
   121cc:	bhi	1219c <main@@Base+0x59c>
   121d0:	mov	r3, r6
   121d4:	mov	r6, sl
   121d8:	ldr	sl, [sp, #16]
   121dc:	ldr	r1, [pc, #544]	; 12404 <main@@Base+0x804>
   121e0:	mov	r4, r3
   121e4:	mov	r0, #1
   121e8:	bl	11b7c <__printf_chk@plt>
   121ec:	mov	fp, #0
   121f0:	subs	r3, r4, r8
   121f4:	str	r3, [sp, #24]
   121f8:	ldr	r0, [r5, #4]
   121fc:	sbc	r3, fp, r9
   12200:	str	r3, [sp, #28]
   12204:	bl	1364c <fio_sem_remove@@Base>
   12208:	mov	r0, r6
   1220c:	bl	119fc <free@plt>
   12210:	cmp	sl, fp
   12214:	bne	120fc <main@@Base+0x4fc>
   12218:	ldr	r3, [r5, #24]
   1221c:	cmp	r3, #0
   12220:	beq	12378 <main@@Base+0x778>
   12224:	ldrd	r8, [sp, #24]
   12228:	mov	r2, r4
   1222c:	ldr	r1, [pc, #468]	; 12408 <main@@Base+0x808>
   12230:	mov	r3, r8
   12234:	mov	r0, #1
   12238:	bl	11b7c <__printf_chk@plt>
   1223c:	orrs	r3, r8, r9
   12240:	beq	122e8 <main@@Base+0x6e8>
   12244:	mov	r0, r4
   12248:	mov	r1, fp
   1224c:	bl	17024 <fnv@@Base+0x684>
   12250:	vmov	d8, r0, r1
   12254:	mov	r0, r8
   12258:	mov	r1, r9
   1225c:	bl	17024 <fnv@@Base+0x684>
   12260:	vldr	d7, [pc, #320]	; 123a8 <main@@Base+0x7a8>
   12264:	vmov	d6, r0, r1
   12268:	ldr	r1, [pc, #412]	; 1240c <main@@Base+0x80c>
   1226c:	mov	r0, #1
   12270:	vdiv.f64	d6, d8, d6
   12274:	vsub.f64	d7, d6, d7
   12278:	vmov	r2, r3, d7
   1227c:	bl	11b7c <__printf_chk@plt>
   12280:	ldrd	r0, [sp, #24]
   12284:	bl	17024 <fnv@@Base+0x684>
   12288:	vmov	d8, r0, r1
   1228c:	mov	r0, r4
   12290:	mov	r1, fp
   12294:	bl	17024 <fnv@@Base+0x684>
   12298:	vldr	d6, [pc, #264]	; 123a8 <main@@Base+0x7a8>
   1229c:	vldr	d5, [pc, #268]	; 123b0 <main@@Base+0x7b0>
   122a0:	vldr	d7, [pc, #272]	; 123b8 <main@@Base+0x7b8>
   122a4:	vmov	d4, r0, r1
   122a8:	ldr	r1, [pc, #352]	; 12410 <main@@Base+0x810>
   122ac:	mov	r0, #1
   122b0:	vdiv.f64	d4, d8, d4
   122b4:	vsub.f64	d6, d6, d4
   122b8:	vmla.f64	d7, d6, d5
   122bc:	vcvt.s32.f64	s15, d7
   122c0:	vmov	r2, s15
   122c4:	bl	11b7c <__printf_chk@plt>
   122c8:	b	120fc <main@@Base+0x4fc>
   122cc:	mov	r3, sl
   122d0:	mov	r2, sl
   122d4:	ldr	r1, [pc, #300]	; 12408 <main@@Base+0x808>
   122d8:	mov	r0, #1
   122dc:	bl	11b7c <__printf_chk@plt>
   122e0:	mov	r4, #0
   122e4:	mov	fp, r4
   122e8:	ldr	r0, [pc, #292]	; 12414 <main@@Base+0x814>
   122ec:	bl	11b04 <puts@plt>
   122f0:	mov	r2, #0
   122f4:	mov	r3, #0
   122f8:	strd	r2, [sp, #24]
   122fc:	b	12280 <main@@Base+0x680>
   12300:	mov	sl, #0
   12304:	b	11fc4 <main@@Base+0x3c4>
   12308:	mov	r4, ip
   1230c:	b	12034 <main@@Base+0x434>
   12310:	mov	r0, sl
   12314:	mov	r1, fp
   12318:	bl	1716c <fnv@@Base+0x7cc>
   1231c:	mov	r3, r0
   12320:	lsl	r1, r1, #3
   12324:	lsl	r0, r0, #3
   12328:	orr	r1, r1, r3, lsr #29
   1232c:	bl	15e28 <bloom_new@@Base>
   12330:	str	r0, [r5, #24]
   12334:	b	11ef4 <main@@Base+0x2f4>
   12338:	mov	r8, #0
   1233c:	mov	r9, #0
   12340:	add	r2, sp, #40	; 0x28
   12344:	ldr	r1, [pc, #204]	; 12418 <main@@Base+0x818>
   12348:	ldr	r0, [r5, #52]	; 0x34
   1234c:	strd	r8, [sp, #40]	; 0x28
   12350:	bl	11abc <ioctl@plt>
   12354:	cmp	r0, #0
   12358:	beq	1236c <main@@Base+0x76c>
   1235c:	bl	11b64 <__errno_location@plt>
   12360:	ldr	r3, [r0]
   12364:	cmp	r3, #0
   12368:	bne	124c4 <main@@Base+0x8c4>
   1236c:	ldr	lr, [sp, #40]	; 0x28
   12370:	ldr	ip, [sp, #44]	; 0x2c
   12374:	b	11ec4 <main@@Base+0x2c4>
   12378:	ldr	r0, [pc, #84]	; 123d4 <main@@Base+0x7d4>
   1237c:	bl	13424 <rb_first@@Base>
   12380:	subs	r8, r0, #0
   12384:	beq	122cc <main@@Base+0x6cc>
   12388:	mov	r2, #0
   1238c:	mov	r3, #0
   12390:	str	sl, [sp, #36]	; 0x24
   12394:	mov	r4, r2
   12398:	mov	fp, r3
   1239c:	str	r3, [sp, #16]
   123a0:	mov	sl, r2
   123a4:	b	12438 <main@@Base+0x838>
   123a8:	andeq	r0, r0, r0
   123ac:	svccc	0x00f00000	; IMB
   123b0:	andeq	r0, r0, r0
   123b4:	subsmi	r0, r9, r0
   123b8:	andeq	r0, r0, r0
   123bc:	svccc	0x00e00000
   123c0:	sbcmi	r0, r8, #0
   123c4:	andeq	r8, r2, r0, lsl lr
   123c8:	muleq	r1, r8, r4
   123cc:	andeq	r9, r2, r0, lsr r0
   123d0:	andeq	r9, r2, r8
   123d4:	andeq	r9, r2, r8, lsr r0
   123d8:	andeq	r9, r2, r0, lsr #32
   123dc:	andeq	r9, r2, r0, rrx
   123e0:	ldrdeq	r7, [r1], -ip
   123e4:	andeq	r2, r1, r0, asr #13
   123e8:	andeq	r7, r1, ip, lsl #10
   123ec:	andeq	r7, r1, r8, lsr #10
   123f0:	andeq	r9, r2, ip, lsr #32
   123f4:	muleq	r3, r0, r0
   123f8:	andeq	r7, r1, r8, lsr #9
   123fc:			; <UNDEFINED> instruction: 0x000174b0
   12400:	andeq	r7, r1, r4, asr #10
   12404:	andeq	r7, r1, r4, asr r5
   12408:	andeq	r7, r1, ip, lsr #11
   1240c:	ldrdeq	r7, [r1], -r0
   12410:	andeq	r7, r1, r4, lsl #12
   12414:	andeq	r7, r1, r8, ror #11
   12418:	andhi	r1, r4, r2, ror r2
   1241c:	andeq	r7, r1, r8, ror r5
   12420:	muleq	r1, ip, r5
   12424:			; <UNDEFINED> instruction: 0x000174b8
   12428:	mov	r0, r8
   1242c:	bl	13444 <rb_next@@Base>
   12430:	subs	r8, r0, #0
   12434:	beq	124b4 <main@@Base+0x8b4>
   12438:	ldr	r3, [r8, #16]
   1243c:	adds	sl, sl, #1
   12440:	ldr	r0, [sp, #16]
   12444:	ldr	r1, [r8, #20]
   12448:	ldr	r2, [r5, #384]	; 0x180
   1244c:	adc	fp, fp, #0
   12450:	adds	r4, r4, r3
   12454:	adc	r1, r0, r1
   12458:	cmp	r2, #0
   1245c:	str	r1, [sp, #16]
   12460:	beq	12428 <main@@Base+0x828>
   12464:	str	r3, [sp, #8]
   12468:	ldr	r3, [r8, #36]	; 0x24
   1246c:	mov	r9, r8
   12470:	str	r3, [sp, #4]
   12474:	ldr	r3, [r8, #32]
   12478:	ldr	r1, [pc, #-100]	; 1241c <main@@Base+0x81c>
   1247c:	str	r3, [sp]
   12480:	mov	r0, #1
   12484:	ldrd	r2, [r8, #24]
   12488:	bl	11b7c <__printf_chk@plt>
   1248c:	ldr	r6, [r9, #40]!	; 0x28
   12490:	b	124a8 <main@@Base+0x8a8>
   12494:	ldrd	r2, [r6, #8]
   12498:	ldr	r1, [pc, #-128]	; 12420 <main@@Base+0x820>
   1249c:	mov	r0, #1
   124a0:	bl	11b7c <__printf_chk@plt>
   124a4:	ldr	r6, [r6]
   124a8:	cmp	r6, r9
   124ac:	bne	12494 <main@@Base+0x894>
   124b0:	b	12428 <main@@Base+0x828>
   124b4:	strd	sl, [sp, #24]
   124b8:	ldr	sl, [sp, #36]	; 0x24
   124bc:	ldr	fp, [sp, #16]
   124c0:	b	12224 <main@@Base+0x624>
   124c4:	ldr	r0, [pc, #-168]	; 12424 <main@@Base+0x824>
   124c8:	bl	134c8 <log_err@@Base>
   124cc:	b	120e0 <main@@Base+0x4e0>
   124d0:	bl	11a5c <__stack_chk_fail@plt>
   124d4:	vmrs	r3, fpscr
   124d8:	orr	r3, r3, #16777216	; 0x1000000
   124dc:	vmsr	fpscr, r3
   124e0:	bx	lr

000124e4 <_start@@Base>:
   124e4:	mov	fp, #0
   124e8:	mov	lr, #0
   124ec:	pop	{r1}		; (ldr r1, [sp], #4)
   124f0:	mov	r2, sp
   124f4:	push	{r2}		; (str r2, [sp, #-4]!)
   124f8:	push	{r0}		; (str r0, [sp, #-4]!)
   124fc:	ldr	ip, [pc, #16]	; 12514 <_start@@Base+0x30>
   12500:	push	{ip}		; (str ip, [sp, #-4]!)
   12504:	ldr	r0, [pc, #12]	; 12518 <_start@@Base+0x34>
   12508:	ldr	r3, [pc, #12]	; 1251c <_start@@Base+0x38>
   1250c:	bl	11b1c <__libc_start_main@plt>
   12510:	bl	11bdc <abort@plt>
   12514:	andeq	r7, r1, r0, asr #6
   12518:	andeq	r1, r1, r0, lsl #24
   1251c:	andeq	r7, r1, r0, ror #5
   12520:	ldr	r3, [pc, #20]	; 1253c <_start@@Base+0x58>
   12524:	ldr	r2, [pc, #20]	; 12540 <_start@@Base+0x5c>
   12528:	add	r3, pc, r3
   1252c:	ldr	r2, [r3, r2]
   12530:	cmp	r2, #0
   12534:	bxeq	lr
   12538:	b	11b34 <__gmon_start__@plt>
   1253c:	strdeq	r6, [r1], -r4
   12540:	ldrdeq	r0, [r0], -r8
   12544:	ldr	r0, [pc, #24]	; 12564 <_start@@Base+0x80>
   12548:	ldr	r3, [pc, #24]	; 12568 <_start@@Base+0x84>
   1254c:	cmp	r3, r0
   12550:	bxeq	lr
   12554:	ldr	r3, [pc, #16]	; 1256c <_start@@Base+0x88>
   12558:	cmp	r3, #0
   1255c:	bxeq	lr
   12560:	bx	r3
   12564:	andeq	r9, r2, r0, lsr #32
   12568:	andeq	r9, r2, r0, lsr #32
   1256c:	andeq	r0, r0, r0
   12570:	ldr	r0, [pc, #36]	; 1259c <_start@@Base+0xb8>
   12574:	ldr	r1, [pc, #36]	; 125a0 <_start@@Base+0xbc>
   12578:	sub	r1, r1, r0
   1257c:	asr	r1, r1, #2
   12580:	add	r1, r1, r1, lsr #31
   12584:	asrs	r1, r1, #1
   12588:	bxeq	lr
   1258c:	ldr	r3, [pc, #16]	; 125a4 <_start@@Base+0xc0>
   12590:	cmp	r3, #0
   12594:	bxeq	lr
   12598:	bx	r3
   1259c:	andeq	r9, r2, r0, lsr #32
   125a0:	andeq	r9, r2, r0, lsr #32
   125a4:	andeq	r0, r0, r0
   125a8:	push	{r4, lr}
   125ac:	ldr	r4, [pc, #24]	; 125cc <_start@@Base+0xe8>
   125b0:	ldrb	r3, [r4]
   125b4:	cmp	r3, #0
   125b8:	popne	{r4, pc}
   125bc:	bl	12544 <_start@@Base+0x60>
   125c0:	mov	r3, #1
   125c4:	strb	r3, [r4]
   125c8:	pop	{r4, pc}
   125cc:	andeq	r9, r2, r4, lsr r0
   125d0:	b	12570 <_start@@Base+0x8c>
   125d4:	push	{r4, lr}
   125d8:	mov	r4, r0
   125dc:	ldr	r0, [pc, #76]	; 12630 <_start@@Base+0x14c>
   125e0:	bl	134c8 <log_err@@Base>
   125e4:	ldr	r1, [r4]
   125e8:	ldr	r0, [pc, #68]	; 12634 <_start@@Base+0x150>
   125ec:	bl	134c8 <log_err@@Base>
   125f0:	ldr	r0, [pc, #64]	; 12638 <_start@@Base+0x154>
   125f4:	bl	134c8 <log_err@@Base>
   125f8:	ldr	r0, [pc, #60]	; 1263c <_start@@Base+0x158>
   125fc:	bl	134c8 <log_err@@Base>
   12600:	ldr	r0, [pc, #56]	; 12640 <_start@@Base+0x15c>
   12604:	bl	134c8 <log_err@@Base>
   12608:	ldr	r0, [pc, #52]	; 12644 <_start@@Base+0x160>
   1260c:	bl	134c8 <log_err@@Base>
   12610:	ldr	r0, [pc, #48]	; 12648 <_start@@Base+0x164>
   12614:	bl	134c8 <log_err@@Base>
   12618:	ldr	r0, [pc, #44]	; 1264c <_start@@Base+0x168>
   1261c:	bl	134c8 <log_err@@Base>
   12620:	ldr	r0, [pc, #40]	; 12650 <_start@@Base+0x16c>
   12624:	bl	134c8 <log_err@@Base>
   12628:	mov	r0, #1
   1262c:	pop	{r4, pc}
   12630:	andeq	r7, r1, r0, asr r3
   12634:	andeq	r7, r1, r0, lsl #7
   12638:	andeq	r7, r1, r0, lsr #7
   1263c:			; <UNDEFINED> instruction: 0x000173b8
   12640:	ldrdeq	r7, [r1], -r8
   12644:	strdeq	r7, [r1], -ip
   12648:	andeq	r7, r1, r0, lsl r4
   1264c:	andeq	r7, r1, ip, lsr #8
   12650:	andeq	r7, r1, r0, asr r4
   12654:	push	{lr}		; (str lr, [sp, #-4]!)
   12658:	sub	sp, sp, #12
   1265c:	strd	r2, [sp]
   12660:	ldr	r2, [sp, #16]
   12664:	bl	11aec <pread64@plt>
   12668:	cmp	r0, #0
   1266c:	blt	126a4 <_start@@Base+0x1c0>
   12670:	moveq	r0, #1
   12674:	beq	12688 <_start@@Base+0x1a4>
   12678:	ldr	r3, [sp, #16]
   1267c:	cmp	r0, r3
   12680:	moveq	r0, #0
   12684:	bne	12690 <_start@@Base+0x1ac>
   12688:	add	sp, sp, #12
   1268c:	pop	{pc}		; (ldr pc, [sp], #4)
   12690:	ldr	r0, [pc, #32]	; 126b8 <_start@@Base+0x1d4>
   12694:	bl	134c8 <log_err@@Base>
   12698:	mov	r0, #1
   1269c:	add	sp, sp, #12
   126a0:	pop	{pc}		; (ldr pc, [sp], #4)
   126a4:	ldr	r0, [pc, #16]	; 126bc <_start@@Base+0x1d8>
   126a8:	bl	11a98 <perror@plt>
   126ac:	mov	r0, #1
   126b0:	add	sp, sp, #12
   126b4:	pop	{pc}		; (ldr pc, [sp], #4)
   126b8:	andeq	r7, r1, r8, ror r4
   126bc:	andeq	r7, r1, r0, ror r4
   126c0:	ldr	r3, [pc, #1188]	; 12b6c <_start@@Base+0x688>
   126c4:	ldr	r2, [pc, #1188]	; 12b70 <_start@@Base+0x68c>
   126c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126cc:	sub	sp, sp, #140	; 0x8c
   126d0:	ldr	r3, [r3]
   126d4:	str	r0, [sp, #24]
   126d8:	mov	r1, #1048576	; 0x100000
   126dc:	ldr	r0, [r2]
   126e0:	mov	r2, #0
   126e4:	str	r3, [sp, #132]	; 0x84
   126e8:	bl	15bfc <fio_memalign@@Base>
   126ec:	ldr	r7, [pc, #1152]	; 12b74 <_start@@Base+0x690>
   126f0:	str	r0, [sp, #28]
   126f4:	ldr	r0, [r7, #4]
   126f8:	bl	139a4 <fio_sem_down@@Base>
   126fc:	ldrd	r8, [r7, #8]
   12700:	ldrd	r0, [r7, #16]
   12704:	cmp	r9, r1
   12708:	cmpeq	r8, r0
   1270c:	bcc	1275c <_start@@Base+0x278>
   12710:	ldr	r0, [r7, #4]
   12714:	bl	13a34 <fio_sem_up@@Base>
   12718:	ldr	r2, [sp, #24]
   1271c:	mov	r3, #1
   12720:	str	r3, [r2, #40]	; 0x28
   12724:	mov	r3, #1
   12728:	str	r3, [r2, #4]
   1272c:	ldr	r0, [sp, #28]
   12730:	mov	r2, #0
   12734:	mov	r1, #1048576	; 0x100000
   12738:	bl	15c74 <fio_memfree@@Base>
   1273c:	ldr	r3, [pc, #1064]	; 12b6c <_start@@Base+0x688>
   12740:	ldr	r2, [sp, #132]	; 0x84
   12744:	mov	r0, #0
   12748:	ldr	r3, [r3]
   1274c:	cmp	r2, r3
   12750:	bne	12b68 <_start@@Base+0x684>
   12754:	add	sp, sp, #140	; 0x8c
   12758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1275c:	subs	r3, r0, r8
   12760:	str	r3, [sp, #8]
   12764:	sbc	r3, r1, r9
   12768:	str	r3, [sp, #12]
   1276c:	ldrd	r2, [sp, #8]
   12770:	ldr	r4, [sp, #24]
   12774:	cmp	r3, #0
   12778:	ldr	r3, [sp, #24]
   1277c:	cmpeq	r2, #1048576	; 0x100000
   12780:	movhi	r2, #1048576	; 0x100000
   12784:	strd	r8, [r3, #16]
   12788:	movhi	r3, #0
   1278c:	strdhi	r2, [sp, #8]
   12790:	ldrd	r0, [sp, #8]
   12794:	adds	r2, r8, r0
   12798:	adc	r3, r9, r1
   1279c:	strd	r0, [r4, #24]
   127a0:	ldr	r0, [r7, #4]
   127a4:	strd	r2, [r7, #8]
   127a8:	bl	13a34 <fio_sem_up@@Base>
   127ac:	ldrd	r8, [r4, #24]
   127b0:	ldrd	r2, [r4, #16]
   127b4:	ldrd	r0, [sp, #24]
   127b8:	cmp	r9, #0
   127bc:	cmpeq	r8, #1048576	; 0x100000
   127c0:	movhi	r8, #1048576	; 0x100000
   127c4:	strd	r2, [sp, #16]
   127c8:	str	r8, [sp]
   127cc:	ldrd	r2, [sp, #16]
   127d0:	ldr	r0, [r0, #8]
   127d4:	bl	12654 <_start@@Base+0x170>
   127d8:	subs	fp, r0, #0
   127dc:	bne	127f0 <_start@@Base+0x30c>
   127e0:	ldr	r3, [pc, #904]	; 12b70 <_start@@Base+0x68c>
   127e4:	ldr	r4, [r3]
   127e8:	cmp	r8, r4
   127ec:	bcs	12800 <_start@@Base+0x31c>
   127f0:	ldr	r2, [sp, #24]
   127f4:	mov	r3, #1
   127f8:	str	r3, [r2, #40]	; 0x28
   127fc:	b	12724 <_start@@Base+0x240>
   12800:	mov	r0, r8
   12804:	mov	r1, r4
   12808:	bl	16acc <fnv@@Base+0x12c>
   1280c:	mov	r6, r0
   12810:	add	r0, r0, r0, lsl #1
   12814:	lsl	r0, r0, #3
   12818:	bl	11b10 <malloc@plt>
   1281c:	add	r8, r0, #8
   12820:	mov	r5, r8
   12824:	mov	sl, r8
   12828:	str	r8, [sp, #32]
   1282c:	ldrd	r8, [sp, #16]
   12830:	str	r0, [sp, #40]	; 0x28
   12834:	ldr	r3, [sp, #28]
   12838:	strd	r8, [r5, #-8]
   1283c:	mla	r4, r4, fp, r3
   12840:	mov	r2, #76	; 0x4c
   12844:	mov	r1, #0
   12848:	add	r0, sp, #52	; 0x34
   1284c:	bl	11b70 <memset@plt>
   12850:	add	r0, sp, #48	; 0x30
   12854:	str	r5, [sp, #48]	; 0x30
   12858:	bl	15a74 <fio_md5_init@@Base>
   1285c:	mov	r1, r4
   12860:	ldr	r4, [pc, #776]	; 12b70 <_start@@Base+0x68c>
   12864:	add	r0, sp, #48	; 0x30
   12868:	add	fp, fp, #1
   1286c:	ldr	r2, [r4]
   12870:	bl	15aa0 <fio_md5_update@@Base>
   12874:	add	r0, sp, #48	; 0x30
   12878:	bl	15b78 <fio_md5_final@@Base>
   1287c:	ldr	r4, [r4]
   12880:	add	r5, r5, #24
   12884:	adds	r8, r8, r4
   12888:	adc	r9, r9, #0
   1288c:	cmp	r6, fp
   12890:	bhi	12834 <_start@@Base+0x350>
   12894:	ldr	r0, [r7, #32]
   12898:	ldr	r8, [sp, #32]
   1289c:	bl	139a4 <fio_sem_down@@Base>
   128a0:	add	r3, fp, fp, lsl #1
   128a4:	mov	r2, #0
   128a8:	add	r3, r8, r3, lsl #3
   128ac:	mov	r9, sl
   128b0:	str	r2, [sp, #16]
   128b4:	str	r3, [sp, #36]	; 0x24
   128b8:	str	fp, [sp, #44]	; 0x2c
   128bc:	b	128ec <_start@@Base+0x408>
   128c0:	mov	r1, r9
   128c4:	mov	r2, #4
   128c8:	bl	15ea0 <bloom_set@@Base>
   128cc:	ldr	r3, [sp, #16]
   128d0:	add	r9, r9, #24
   128d4:	uxtb	r0, r0
   128d8:	adds	r3, r3, r0
   128dc:	str	r3, [sp, #16]
   128e0:	ldr	r3, [sp, #36]	; 0x24
   128e4:	cmp	r3, r9
   128e8:	beq	12b18 <_start@@Base+0x634>
   128ec:	ldr	r0, [r7, #24]
   128f0:	cmp	r0, #0
   128f4:	bne	128c0 <_start@@Base+0x3dc>
   128f8:	mov	r5, r0
   128fc:	ldr	r6, [r7, #28]
   12900:	mov	r8, r7
   12904:	b	1290c <_start@@Base+0x428>
   12908:	mov	r5, r4
   1290c:	ldr	r4, [r8]
   12910:	cmp	r4, #0
   12914:	beq	12a50 <_start@@Base+0x56c>
   12918:	mov	r2, #16
   1291c:	add	r1, r4, #24
   12920:	mov	r0, r9
   12924:	bl	11a44 <memcmp@plt>
   12928:	subs	r5, r0, #0
   1292c:	addlt	r8, r4, #8
   12930:	blt	12908 <_start@@Base+0x424>
   12934:	addne	r8, r4, #4
   12938:	bne	12908 <_start@@Base+0x424>
   1293c:	cmp	r6, #0
   12940:	beq	12b48 <_start@@Base+0x664>
   12944:	ldr	fp, [pc, #548]	; 12b70 <_start@@Base+0x68c>
   12948:	ldr	r0, [r7, #32]
   1294c:	bl	13a34 <fio_sem_up@@Base>
   12950:	ldr	r1, [fp]
   12954:	mov	r2, r5
   12958:	mov	r0, r1
   1295c:	bl	15bfc <fio_memalign@@Base>
   12960:	ldr	r1, [fp]
   12964:	mov	r2, r5
   12968:	mov	r6, r0
   1296c:	mov	r0, r1
   12970:	bl	15bfc <fio_memalign@@Base>
   12974:	ldr	r3, [r4, #40]	; 0x28
   12978:	mov	r1, r6
   1297c:	ldrd	r2, [r3, #8]
   12980:	mov	r5, r0
   12984:	ldr	r0, [fp]
   12988:	str	r0, [sp]
   1298c:	ldr	r0, [r7, #52]	; 0x34
   12990:	bl	12654 <_start@@Base+0x170>
   12994:	cmp	r0, #0
   12998:	bne	12a1c <_start@@Base+0x538>
   1299c:	ldr	r1, [fp]
   129a0:	ldrd	r2, [r9, #-8]
   129a4:	ldr	r0, [r7, #52]	; 0x34
   129a8:	str	r1, [sp]
   129ac:	mov	r1, r5
   129b0:	bl	12654 <_start@@Base+0x170>
   129b4:	subs	sl, r0, #0
   129b8:	bne	12a1c <_start@@Base+0x538>
   129bc:	ldr	fp, [fp]
   129c0:	mov	r1, r6
   129c4:	mov	r2, fp
   129c8:	mov	r0, r5
   129cc:	bl	11a44 <memcmp@plt>
   129d0:	mov	r1, fp
   129d4:	ldr	fp, [pc, #404]	; 12b70 <_start@@Base+0x68c>
   129d8:	mov	r2, sl
   129dc:	str	r0, [sp, #32]
   129e0:	mov	r0, r6
   129e4:	bl	15c74 <fio_memfree@@Base>
   129e8:	mov	r2, sl
   129ec:	mov	r0, r5
   129f0:	ldr	r1, [fp]
   129f4:	bl	15c74 <fio_memfree@@Base>
   129f8:	ldr	r0, [r7, #32]
   129fc:	bl	139a4 <fio_sem_down@@Base>
   12a00:	ldr	r3, [sp, #32]
   12a04:	cmp	r3, #0
   12a08:	beq	12ab8 <_start@@Base+0x5d4>
   12a0c:	ldr	r8, [r8]
   12a10:	ldr	r6, [r7, #28]
   12a14:	add	r8, r8, #4
   12a18:	b	12908 <_start@@Base+0x424>
   12a1c:	ldr	r3, [pc, #332]	; 12b70 <_start@@Base+0x68c>
   12a20:	mov	r0, r6
   12a24:	mov	r6, r3
   12a28:	ldr	r1, [r3]
   12a2c:	mov	r2, #0
   12a30:	bl	15c74 <fio_memfree@@Base>
   12a34:	mov	r0, r5
   12a38:	mov	r2, #0
   12a3c:	ldr	r1, [r6]
   12a40:	bl	15c74 <fio_memfree@@Base>
   12a44:	ldr	r0, [r7, #32]
   12a48:	bl	139a4 <fio_sem_down@@Base>
   12a4c:	b	12a0c <_start@@Base+0x528>
   12a50:	ldr	r3, [r7, #384]	; 0x180
   12a54:	orrs	r3, r6, r3
   12a58:	beq	12b58 <_start@@Base+0x674>
   12a5c:	mov	r0, #48	; 0x30
   12a60:	bl	11b10 <malloc@plt>
   12a64:	mov	r4, r0
   12a68:	add	r3, r0, #40	; 0x28
   12a6c:	str	r3, [r0, #40]	; 0x28
   12a70:	str	r3, [r0, #44]	; 0x2c
   12a74:	ldr	r0, [r9]
   12a78:	ldr	r1, [r9, #4]
   12a7c:	ldr	r3, [r9, #12]
   12a80:	ldr	r2, [r9, #8]
   12a84:	add	ip, r4, #24
   12a88:	mov	sl, #0
   12a8c:	mov	fp, #0
   12a90:	strd	sl, [r4, #16]
   12a94:	stmia	ip!, {r0, r1, r2, r3}
   12a98:	mov	r3, #0
   12a9c:	str	r5, [r4]
   12aa0:	str	r3, [r4, #4]
   12aa4:	str	r3, [r4, #8]
   12aa8:	mov	r1, r7
   12aac:	mov	r0, r4
   12ab0:	str	r4, [r8]
   12ab4:	bl	12b78 <rb_insert_color@@Base>
   12ab8:	ldr	r2, [r7, #384]	; 0x180
   12abc:	ldr	r3, [r7, #28]
   12ac0:	orrs	r3, r2, r3
   12ac4:	beq	12af0 <_start@@Base+0x60c>
   12ac8:	mov	r0, #16
   12acc:	bl	11b10 <malloc@plt>
   12ad0:	ldr	ip, [r4, #44]	; 0x2c
   12ad4:	ldrd	r2, [r9, #-8]
   12ad8:	add	r1, r4, #40	; 0x28
   12adc:	strd	r2, [r0, #8]
   12ae0:	str	r0, [r4, #44]	; 0x2c
   12ae4:	str	ip, [r0, #4]
   12ae8:	str	r1, [r0]
   12aec:	str	r0, [ip]
   12af0:	ldr	r3, [r4, #16]
   12af4:	ldr	r2, [r4, #20]
   12af8:	adds	r3, r3, #1
   12afc:	str	r3, [r4, #16]
   12b00:	ldr	r3, [sp, #36]	; 0x24
   12b04:	add	r9, r9, #24
   12b08:	adc	r2, r2, #0
   12b0c:	cmp	r3, r9
   12b10:	str	r2, [r4, #20]
   12b14:	bne	128ec <_start@@Base+0x408>
   12b18:	ldr	r0, [r7, #32]
   12b1c:	ldr	fp, [sp, #44]	; 0x2c
   12b20:	bl	13a34 <fio_sem_up@@Base>
   12b24:	ldr	r0, [sp, #40]	; 0x28
   12b28:	bl	119fc <free@plt>
   12b2c:	ldr	r1, [sp, #24]
   12b30:	ldr	r0, [sp, #16]
   12b34:	ldrd	r2, [r1, #32]
   12b38:	add	r2, r2, fp
   12b3c:	add	r3, r3, r0
   12b40:	strd	r2, [r1, #32]
   12b44:	b	126f4 <_start@@Base+0x210>
   12b48:	ldr	r3, [r7, #384]	; 0x180
   12b4c:	cmp	r3, #0
   12b50:	beq	12af0 <_start@@Base+0x60c>
   12b54:	b	12ac8 <_start@@Base+0x5e4>
   12b58:	mov	r0, #40	; 0x28
   12b5c:	bl	11b10 <malloc@plt>
   12b60:	mov	r4, r0
   12b64:	b	12a74 <_start@@Base+0x590>
   12b68:	bl	11a5c <__stack_chk_fail@plt>
   12b6c:	andeq	r8, r2, r0, lsl lr
   12b70:	andeq	r9, r2, r8
   12b74:	andeq	r9, r2, r8, lsr r0

00012b78 <rb_insert_color@@Base>:
   12b78:	push	{r4, r5, r6, r7, lr}
   12b7c:	ldr	lr, [r0]
   12b80:	bic	r2, lr, #3
   12b84:	cmp	r2, #0
   12b88:	mov	r5, r2
   12b8c:	beq	12c58 <rb_insert_color@@Base+0xe0>
   12b90:	ldr	ip, [r2]
   12b94:	tst	ip, #1
   12b98:	bne	12c58 <rb_insert_color@@Base+0xe0>
   12b9c:	bic	r3, ip, #3
   12ba0:	ldr	r7, [r3, #8]
   12ba4:	cmp	r7, r2
   12ba8:	beq	12c6c <rb_insert_color@@Base+0xf4>
   12bac:	cmp	r7, #0
   12bb0:	beq	12bc0 <rb_insert_color@@Base+0x48>
   12bb4:	ldr	r4, [r7]
   12bb8:	tst	r4, #1
   12bbc:	beq	12d10 <rb_insert_color@@Base+0x198>
   12bc0:	ldr	r4, [r2, #8]
   12bc4:	cmp	r4, r0
   12bc8:	beq	12d38 <rb_insert_color@@Base+0x1c0>
   12bcc:	ldr	lr, [r3, #4]
   12bd0:	orr	ip, ip, #1
   12bd4:	str	ip, [r5]
   12bd8:	ldr	ip, [lr, #8]
   12bdc:	ldr	r2, [r3]
   12be0:	cmp	ip, #0
   12be4:	bic	r4, r2, #1
   12be8:	str	r4, [r3]
   12bec:	ldrne	r4, [ip]
   12bf0:	str	ip, [r3, #4]
   12bf4:	andne	r4, r4, #3
   12bf8:	orrne	r4, r4, r3
   12bfc:	strne	r4, [ip]
   12c00:	ldr	ip, [lr]
   12c04:	bic	r2, r2, #3
   12c08:	and	ip, ip, #3
   12c0c:	cmp	r2, #0
   12c10:	orr	ip, ip, r2
   12c14:	str	r3, [lr, #8]
   12c18:	str	ip, [lr]
   12c1c:	streq	lr, [r1]
   12c20:	beq	12c34 <rb_insert_color@@Base+0xbc>
   12c24:	ldr	ip, [r2, #8]
   12c28:	cmp	r3, ip
   12c2c:	streq	lr, [r2, #8]
   12c30:	strne	lr, [r2, #4]
   12c34:	ldr	r2, [r3]
   12c38:	and	r2, r2, #3
   12c3c:	orr	lr, lr, r2
   12c40:	str	lr, [r3]
   12c44:	ldr	lr, [r0]
   12c48:	bic	r2, lr, #3
   12c4c:	cmp	r2, #0
   12c50:	mov	r5, r2
   12c54:	bne	12b90 <rb_insert_color@@Base+0x18>
   12c58:	ldr	r2, [r1]
   12c5c:	ldr	r3, [r2]
   12c60:	orr	r3, r3, #1
   12c64:	str	r3, [r2]
   12c68:	pop	{r4, r5, r6, r7, pc}
   12c6c:	ldr	r4, [r3, #4]
   12c70:	cmp	r4, #0
   12c74:	beq	12c84 <rb_insert_color@@Base+0x10c>
   12c78:	ldr	r6, [r4]
   12c7c:	tst	r6, #1
   12c80:	beq	12d98 <rb_insert_color@@Base+0x220>
   12c84:	ldr	r4, [r2, #4]
   12c88:	cmp	r4, r0
   12c8c:	movne	r4, r2
   12c90:	beq	12dd4 <rb_insert_color@@Base+0x25c>
   12c94:	ldr	r2, [r4, #4]
   12c98:	orr	ip, ip, #1
   12c9c:	str	ip, [r5]
   12ca0:	ldr	ip, [r3]
   12ca4:	cmp	r2, #0
   12ca8:	bic	lr, ip, #1
   12cac:	str	lr, [r3]
   12cb0:	ldrne	lr, [r2]
   12cb4:	str	r2, [r3, #8]
   12cb8:	andne	lr, lr, #3
   12cbc:	orrne	lr, lr, r3
   12cc0:	strne	lr, [r2]
   12cc4:	ldr	lr, [r4]
   12cc8:	bic	ip, ip, #3
   12ccc:	and	lr, lr, #3
   12cd0:	cmp	ip, #0
   12cd4:	orr	lr, lr, ip
   12cd8:	str	r3, [r4, #4]
   12cdc:	str	lr, [r4]
   12ce0:	streq	r4, [r1]
   12ce4:	beq	12cf8 <rb_insert_color@@Base+0x180>
   12ce8:	ldr	r2, [ip, #4]
   12cec:	cmp	r3, r2
   12cf0:	streq	r4, [ip, #4]
   12cf4:	strne	r4, [ip, #8]
   12cf8:	ldr	r2, [r3]
   12cfc:	and	r2, r2, #3
   12d00:	orr	r2, r4, r2
   12d04:	str	r2, [r3]
   12d08:	ldr	lr, [r0]
   12d0c:	b	12b80 <rb_insert_color@@Base+0x8>
   12d10:	orr	r4, r4, #1
   12d14:	str	r4, [r7]
   12d18:	ldr	ip, [r2]
   12d1c:	mov	r0, r3
   12d20:	orr	ip, ip, #1
   12d24:	str	ip, [r2]
   12d28:	ldr	lr, [r3]
   12d2c:	bic	lr, lr, #1
   12d30:	str	lr, [r3]
   12d34:	b	12b80 <rb_insert_color@@Base+0x8>
   12d38:	ldr	ip, [r0, #4]
   12d3c:	cmp	ip, #0
   12d40:	str	ip, [r2, #8]
   12d44:	ldrne	lr, [ip]
   12d48:	andne	lr, lr, #3
   12d4c:	orrne	lr, lr, r2
   12d50:	strne	lr, [ip]
   12d54:	ldrne	lr, [r0]
   12d58:	cmp	r3, #0
   12d5c:	and	lr, lr, #3
   12d60:	orr	lr, lr, r3
   12d64:	str	lr, [r0]
   12d68:	str	r2, [r0, #4]
   12d6c:	bne	12dc0 <rb_insert_color@@Base+0x248>
   12d70:	str	r0, [r1]
   12d74:	ldr	lr, [r3, #4]
   12d78:	ldr	ip, [r2]
   12d7c:	mov	r5, r0
   12d80:	and	ip, ip, #3
   12d84:	orr	ip, r0, ip
   12d88:	str	ip, [r2]
   12d8c:	ldr	ip, [r0]
   12d90:	mov	r0, r2
   12d94:	b	12bd0 <rb_insert_color@@Base+0x58>
   12d98:	orr	r6, r6, #1
   12d9c:	str	r6, [r4]
   12da0:	ldr	r2, [r7]
   12da4:	mov	r0, r3
   12da8:	orr	r2, r2, #1
   12dac:	str	r2, [r7]
   12db0:	ldr	lr, [r3]
   12db4:	bic	lr, lr, #1
   12db8:	str	lr, [r3]
   12dbc:	b	12b80 <rb_insert_color@@Base+0x8>
   12dc0:	ldr	lr, [r3, #4]
   12dc4:	cmp	r2, lr
   12dc8:	strne	r0, [r3, #8]
   12dcc:	moveq	lr, r0
   12dd0:	b	12d78 <rb_insert_color@@Base+0x200>
   12dd4:	ldr	ip, [r0, #8]
   12dd8:	cmp	ip, #0
   12ddc:	str	ip, [r2, #4]
   12de0:	ldrne	lr, [ip]
   12de4:	andne	lr, lr, #3
   12de8:	orrne	lr, lr, r2
   12dec:	strne	lr, [ip]
   12df0:	ldrne	lr, [r0]
   12df4:	cmp	r3, #0
   12df8:	and	lr, lr, #3
   12dfc:	orr	lr, lr, r3
   12e00:	str	lr, [r0]
   12e04:	str	r2, [r0, #8]
   12e08:	beq	12e20 <rb_insert_color@@Base+0x2a8>
   12e0c:	ldr	r4, [r3, #8]
   12e10:	cmp	r2, r4
   12e14:	strne	r0, [r3, #4]
   12e18:	moveq	r4, r0
   12e1c:	b	12e28 <rb_insert_color@@Base+0x2b0>
   12e20:	str	r0, [r1]
   12e24:	ldr	r4, [r3, #8]
   12e28:	ldr	ip, [r2]
   12e2c:	mov	r5, r0
   12e30:	and	ip, ip, #3
   12e34:	orr	ip, r0, ip
   12e38:	str	ip, [r2]
   12e3c:	ldr	ip, [r0]
   12e40:	mov	r0, r2
   12e44:	b	12c94 <rb_insert_color@@Base+0x11c>

00012e48 <rb_erase@@Base>:
   12e48:	push	{r4, r5, r6, lr}
   12e4c:	ldrd	r4, [r0, #4]
   12e50:	cmp	r5, #0
   12e54:	beq	131b8 <rb_erase@@Base+0x370>
   12e58:	cmp	r4, #0
   12e5c:	movne	r2, r4
   12e60:	bne	13024 <rb_erase@@Base+0x1dc>
   12e64:	ldr	lr, [r0]
   12e68:	mov	ip, r5
   12e6c:	bic	r2, lr, #3
   12e70:	mov	r3, r2
   12e74:	and	lr, lr, #1
   12e78:	ldr	r4, [ip]
   12e7c:	and	r4, r4, #3
   12e80:	orr	r4, r4, r2
   12e84:	str	r4, [ip]
   12e88:	cmp	r2, #0
   12e8c:	moveq	r3, r2
   12e90:	streq	ip, [r1]
   12e94:	beq	12ea8 <rb_erase@@Base+0x60>
   12e98:	ldr	r4, [r2, #8]
   12e9c:	cmp	r4, r0
   12ea0:	streq	ip, [r2, #8]
   12ea4:	strne	ip, [r2, #4]
   12ea8:	cmp	lr, #1
   12eac:	popne	{r4, r5, r6, pc}
   12eb0:	b	12f0c <rb_erase@@Base+0xc4>
   12eb4:	ldr	r0, [r2]
   12eb8:	tst	r0, #1
   12ebc:	beq	130c0 <rb_erase@@Base+0x278>
   12ec0:	ldr	r0, [r2, #8]
   12ec4:	cmp	r0, #0
   12ec8:	beq	12ed8 <rb_erase@@Base+0x90>
   12ecc:	ldr	ip, [r0]
   12ed0:	tst	ip, #1
   12ed4:	beq	13224 <rb_erase@@Base+0x3dc>
   12ed8:	ldr	ip, [r2, #4]
   12edc:	cmp	ip, #0
   12ee0:	beq	12ef0 <rb_erase@@Base+0xa8>
   12ee4:	ldr	lr, [ip]
   12ee8:	tst	lr, #1
   12eec:	beq	132ac <rb_erase@@Base+0x464>
   12ef0:	ldr	r0, [r2]
   12ef4:	mov	ip, r3
   12ef8:	bic	r0, r0, #1
   12efc:	str	r0, [r2]
   12f00:	ldr	r2, [r3]
   12f04:	bic	r2, r2, #3
   12f08:	mov	r3, r2
   12f0c:	cmp	ip, #0
   12f10:	beq	12f20 <rb_erase@@Base+0xd8>
   12f14:	ldr	r2, [ip]
   12f18:	tst	r2, #1
   12f1c:	beq	13204 <rb_erase@@Base+0x3bc>
   12f20:	ldr	r0, [r1]
   12f24:	cmp	ip, r0
   12f28:	beq	13008 <rb_erase@@Base+0x1c0>
   12f2c:	ldr	r2, [r3, #8]
   12f30:	cmp	r2, ip
   12f34:	bne	12eb4 <rb_erase@@Base+0x6c>
   12f38:	ldr	r2, [r3, #4]
   12f3c:	ldr	ip, [r2]
   12f40:	ldr	r0, [r2, #8]
   12f44:	tst	ip, #1
   12f48:	beq	13148 <rb_erase@@Base+0x300>
   12f4c:	cmp	r0, #0
   12f50:	beq	12f60 <rb_erase@@Base+0x118>
   12f54:	ldr	lr, [r0]
   12f58:	tst	lr, #1
   12f5c:	beq	13360 <rb_erase@@Base+0x518>
   12f60:	ldr	ip, [r2, #4]
   12f64:	cmp	ip, #0
   12f68:	beq	12ef0 <rb_erase@@Base+0xa8>
   12f6c:	ldr	lr, [ip]
   12f70:	tst	lr, #1
   12f74:	bne	12ef0 <rb_erase@@Base+0xa8>
   12f78:	ldr	lr, [r2]
   12f7c:	ldr	r4, [r3]
   12f80:	bic	lr, lr, #1
   12f84:	and	r4, r4, #1
   12f88:	orr	lr, lr, r4
   12f8c:	str	lr, [r2]
   12f90:	ldr	lr, [r3]
   12f94:	orr	lr, lr, #1
   12f98:	str	lr, [r3]
   12f9c:	ldr	lr, [ip]
   12fa0:	orr	lr, lr, #1
   12fa4:	str	lr, [ip]
   12fa8:	ldr	lr, [r3]
   12fac:	cmp	r0, #0
   12fb0:	bic	ip, lr, #3
   12fb4:	ldrne	lr, [r0]
   12fb8:	str	r0, [r3, #4]
   12fbc:	andne	lr, lr, #3
   12fc0:	orrne	lr, r3, lr
   12fc4:	strne	lr, [r0]
   12fc8:	ldr	r0, [r2]
   12fcc:	cmp	ip, #0
   12fd0:	and	r0, r0, #3
   12fd4:	orr	r0, r0, ip
   12fd8:	str	r3, [r2, #8]
   12fdc:	str	r0, [r2]
   12fe0:	beq	1320c <rb_erase@@Base+0x3c4>
   12fe4:	ldr	r0, [ip, #8]
   12fe8:	cmp	r3, r0
   12fec:	ldr	r0, [r1]
   12ff0:	streq	r2, [ip, #8]
   12ff4:	strne	r2, [ip, #4]
   12ff8:	ldr	r1, [r3]
   12ffc:	and	r1, r1, #3
   13000:	orr	r2, r2, r1
   13004:	str	r2, [r3]
   13008:	cmp	r0, #0
   1300c:	popeq	{r4, r5, r6, pc}
   13010:	ldr	r2, [r0]
   13014:	orr	r2, r2, #1
   13018:	str	r2, [r0]
   1301c:	pop	{r4, r5, r6, pc}
   13020:	mov	r2, r3
   13024:	ldr	r3, [r2, #8]
   13028:	cmp	r3, #0
   1302c:	bne	13020 <rb_erase@@Base+0x1d8>
   13030:	ldr	ip, [r2, #4]
   13034:	ldr	lr, [r2]
   13038:	cmp	ip, #0
   1303c:	bic	r3, lr, #3
   13040:	ldrne	r6, [ip]
   13044:	and	lr, lr, #1
   13048:	andne	r6, r6, #3
   1304c:	orrne	r6, r6, r3
   13050:	strne	r6, [ip]
   13054:	cmp	r0, r3
   13058:	ldr	r6, [r0]
   1305c:	strne	ip, [r3, #8]
   13060:	moveq	r4, ip
   13064:	ldrne	r5, [r0, #8]
   13068:	streq	ip, [r0, #4]
   1306c:	moveq	r3, r2
   13070:	str	r4, [r2, #4]
   13074:	bics	r4, r6, #3
   13078:	str	r6, [r2]
   1307c:	str	r5, [r2, #8]
   13080:	streq	r2, [r1]
   13084:	bne	131d4 <rb_erase@@Base+0x38c>
   13088:	ldrd	r4, [r0, #4]
   1308c:	ldr	r0, [r5]
   13090:	cmp	r4, #0
   13094:	and	r0, r0, #3
   13098:	orr	r0, r0, r2
   1309c:	str	r0, [r5]
   130a0:	beq	12ea8 <rb_erase@@Base+0x60>
   130a4:	ldr	r0, [r4]
   130a8:	cmp	lr, #1
   130ac:	and	r0, r0, #3
   130b0:	orr	r2, r0, r2
   130b4:	str	r2, [r4]
   130b8:	popne	{r4, r5, r6, pc}
   130bc:	b	12f0c <rb_erase@@Base+0xc4>
   130c0:	ldr	ip, [r2, #4]
   130c4:	orr	r0, r0, #1
   130c8:	str	r0, [r2]
   130cc:	ldr	r0, [r3]
   130d0:	cmp	ip, #0
   130d4:	bic	lr, r0, #1
   130d8:	str	lr, [r3]
   130dc:	ldrne	lr, [ip]
   130e0:	str	ip, [r3, #8]
   130e4:	andne	lr, lr, #3
   130e8:	orrne	lr, r3, lr
   130ec:	strne	lr, [ip]
   130f0:	ldr	lr, [r2]
   130f4:	bic	r0, r0, #3
   130f8:	and	lr, lr, #3
   130fc:	orr	lr, lr, r0
   13100:	cmp	r0, #0
   13104:	str	r3, [r2, #4]
   13108:	str	lr, [r2]
   1310c:	beq	1313c <rb_erase@@Base+0x2f4>
   13110:	ldr	lr, [r0, #4]
   13114:	cmp	r3, lr
   13118:	strne	r2, [r0, #8]
   1311c:	ldrne	ip, [r3, #8]
   13120:	streq	r2, [r0, #4]
   13124:	ldr	r0, [r3]
   13128:	and	r0, r0, #3
   1312c:	orr	r0, r2, r0
   13130:	str	r0, [r3]
   13134:	mov	r2, ip
   13138:	b	12ec0 <rb_erase@@Base+0x78>
   1313c:	str	r2, [r1]
   13140:	ldr	ip, [r3, #8]
   13144:	b	13124 <rb_erase@@Base+0x2dc>
   13148:	orr	ip, ip, #1
   1314c:	str	ip, [r2]
   13150:	ldr	ip, [r3]
   13154:	cmp	r0, #0
   13158:	bic	lr, ip, #1
   1315c:	str	lr, [r3]
   13160:	ldrne	lr, [r0]
   13164:	str	r0, [r3, #4]
   13168:	andne	lr, lr, #3
   1316c:	orrne	lr, r3, lr
   13170:	strne	lr, [r0]
   13174:	ldr	lr, [r2]
   13178:	bic	ip, ip, #3
   1317c:	and	lr, lr, #3
   13180:	orr	lr, lr, ip
   13184:	cmp	ip, #0
   13188:	str	r3, [r2, #8]
   1318c:	str	lr, [r2]
   13190:	bne	131e8 <rb_erase@@Base+0x3a0>
   13194:	str	r2, [r1]
   13198:	ldr	lr, [r3, #4]
   1319c:	ldr	ip, [r3]
   131a0:	ldr	r0, [lr, #8]
   131a4:	and	ip, ip, #3
   131a8:	orr	ip, r2, ip
   131ac:	str	ip, [r3]
   131b0:	mov	r2, lr
   131b4:	b	12f4c <rb_erase@@Base+0x104>
   131b8:	ldr	lr, [r0]
   131bc:	subs	ip, r4, #0
   131c0:	bic	r2, lr, #3
   131c4:	mov	r3, r2
   131c8:	and	lr, lr, #1
   131cc:	beq	12e88 <rb_erase@@Base+0x40>
   131d0:	b	12e78 <rb_erase@@Base+0x30>
   131d4:	ldr	r5, [r4, #8]
   131d8:	cmp	r5, r0
   131dc:	streq	r2, [r4, #8]
   131e0:	strne	r2, [r4, #4]
   131e4:	b	13088 <rb_erase@@Base+0x240>
   131e8:	ldr	lr, [ip, #8]
   131ec:	cmp	r3, lr
   131f0:	strne	r2, [ip, #4]
   131f4:	streq	r2, [ip, #8]
   131f8:	moveq	lr, r0
   131fc:	ldrne	lr, [r3, #4]
   13200:	b	1319c <rb_erase@@Base+0x354>
   13204:	mov	r0, ip
   13208:	b	13014 <rb_erase@@Base+0x1cc>
   1320c:	mov	r0, r2
   13210:	str	r2, [r1]
   13214:	b	12ff8 <rb_erase@@Base+0x1b0>
   13218:	ldr	r4, [r0]
   1321c:	tst	r4, #1
   13220:	bne	132b4 <rb_erase@@Base+0x46c>
   13224:	ldr	ip, [r2]
   13228:	ldr	lr, [r3]
   1322c:	bic	ip, ip, #1
   13230:	and	lr, lr, #1
   13234:	orr	ip, ip, lr
   13238:	str	ip, [r2]
   1323c:	ldr	ip, [r3]
   13240:	orr	ip, ip, #1
   13244:	str	ip, [r3]
   13248:	ldr	ip, [r0]
   1324c:	orr	ip, ip, #1
   13250:	str	ip, [r0]
   13254:	ldr	ip, [r3]
   13258:	ldr	lr, [r2, #4]
   1325c:	bic	r0, ip, #3
   13260:	cmp	lr, #0
   13264:	str	lr, [r3, #8]
   13268:	ldrne	ip, [lr]
   1326c:	andne	ip, ip, #3
   13270:	orrne	ip, r3, ip
   13274:	strne	ip, [lr]
   13278:	ldr	ip, [r2]
   1327c:	cmp	r0, #0
   13280:	and	ip, ip, #3
   13284:	orr	ip, ip, r0
   13288:	str	r3, [r2, #4]
   1328c:	str	ip, [r2]
   13290:	beq	1320c <rb_erase@@Base+0x3c4>
   13294:	ldr	ip, [r0, #4]
   13298:	cmp	r3, ip
   1329c:	streq	r2, [r0, #4]
   132a0:	strne	r2, [r0, #8]
   132a4:	ldr	r0, [r1]
   132a8:	b	12ff8 <rb_erase@@Base+0x1b0>
   132ac:	cmp	r0, #0
   132b0:	bne	13218 <rb_erase@@Base+0x3d0>
   132b4:	orr	lr, lr, #1
   132b8:	str	lr, [ip]
   132bc:	ldr	lr, [ip, #8]
   132c0:	ldr	r0, [r2]
   132c4:	cmp	lr, #0
   132c8:	bic	r4, r0, #1
   132cc:	str	r4, [r2]
   132d0:	ldrne	r4, [lr]
   132d4:	str	lr, [r2, #4]
   132d8:	andne	r4, r4, #3
   132dc:	orrne	r4, r2, r4
   132e0:	strne	r4, [lr]
   132e4:	ldr	lr, [ip]
   132e8:	bic	r0, r0, #3
   132ec:	and	lr, lr, #3
   132f0:	cmp	r0, #0
   132f4:	orr	lr, lr, r0
   132f8:	str	r2, [ip, #8]
   132fc:	str	lr, [ip]
   13300:	streq	ip, [r1]
   13304:	beq	13318 <rb_erase@@Base+0x4d0>
   13308:	ldr	lr, [r0, #8]
   1330c:	cmp	r2, lr
   13310:	streq	ip, [r0, #8]
   13314:	strne	ip, [r0, #4]
   13318:	ldr	r0, [r2]
   1331c:	and	r0, r0, #3
   13320:	orr	ip, ip, r0
   13324:	str	ip, [r2]
   13328:	ldr	r2, [r3, #8]
   1332c:	ldr	r0, [r3]
   13330:	ldr	ip, [r2]
   13334:	and	r0, r0, #1
   13338:	bic	ip, ip, #1
   1333c:	orr	r0, r0, ip
   13340:	str	r0, [r2]
   13344:	ldr	r0, [r2, #8]
   13348:	ldr	ip, [r3]
   1334c:	cmp	r0, #0
   13350:	orr	ip, ip, #1
   13354:	str	ip, [r3]
   13358:	beq	13258 <rb_erase@@Base+0x410>
   1335c:	b	13248 <rb_erase@@Base+0x400>
   13360:	ldr	ip, [r2, #4]
   13364:	cmp	ip, #0
   13368:	beq	13378 <rb_erase@@Base+0x530>
   1336c:	ldr	r4, [ip]
   13370:	tst	r4, #1
   13374:	beq	12f78 <rb_erase@@Base+0x130>
   13378:	orr	lr, lr, #1
   1337c:	str	lr, [r0]
   13380:	ldr	lr, [r0, #4]
   13384:	ldr	ip, [r2]
   13388:	cmp	lr, #0
   1338c:	bic	r4, ip, #1
   13390:	str	r4, [r2]
   13394:	ldrne	r4, [lr]
   13398:	str	lr, [r2, #8]
   1339c:	andne	r4, r4, #3
   133a0:	orrne	r4, r2, r4
   133a4:	strne	r4, [lr]
   133a8:	ldr	lr, [r0]
   133ac:	bic	ip, ip, #3
   133b0:	and	lr, lr, #3
   133b4:	cmp	ip, #0
   133b8:	orr	lr, lr, ip
   133bc:	str	r2, [r0, #4]
   133c0:	str	lr, [r0]
   133c4:	streq	r0, [r1]
   133c8:	beq	133dc <rb_erase@@Base+0x594>
   133cc:	ldr	lr, [ip, #4]
   133d0:	cmp	r2, lr
   133d4:	streq	r0, [ip, #4]
   133d8:	strne	r0, [ip, #8]
   133dc:	ldr	ip, [r2]
   133e0:	and	ip, ip, #3
   133e4:	orr	r0, r0, ip
   133e8:	str	r0, [r2]
   133ec:	ldm	r3, {r0, r2}
   133f0:	ldr	ip, [r2]
   133f4:	and	r0, r0, #1
   133f8:	bic	ip, ip, #1
   133fc:	orr	r0, r0, ip
   13400:	str	r0, [r2]
   13404:	ldr	ip, [r2, #4]
   13408:	ldr	lr, [r3]
   1340c:	cmp	ip, #0
   13410:	orr	lr, lr, #1
   13414:	ldr	r0, [r2, #8]
   13418:	str	lr, [r3]
   1341c:	beq	12fac <rb_erase@@Base+0x164>
   13420:	b	12f9c <rb_erase@@Base+0x154>

00013424 <rb_first@@Base>:
   13424:	ldr	r0, [r0]
   13428:	cmp	r0, #0
   1342c:	bxeq	lr
   13430:	ldr	r3, [r0, #8]
   13434:	cmp	r3, #0
   13438:	bxeq	lr
   1343c:	mov	r0, r3
   13440:	b	13430 <rb_first@@Base+0xc>

00013444 <rb_next@@Base>:
   13444:	ldr	r1, [r0]
   13448:	bic	r1, r1, #3
   1344c:	cmp	r1, r0
   13450:	mov	r2, r1
   13454:	beq	134c0 <rb_next@@Base+0x7c>
   13458:	ldr	r3, [r0, #4]
   1345c:	cmp	r3, #0
   13460:	bne	1346c <rb_next@@Base+0x28>
   13464:	b	13480 <rb_next@@Base+0x3c>
   13468:	mov	r3, r2
   1346c:	ldr	r2, [r3, #8]
   13470:	cmp	r2, #0
   13474:	bne	13468 <rb_next@@Base+0x24>
   13478:	mov	r0, r3
   1347c:	bx	lr
   13480:	cmp	r1, #0
   13484:	beq	13478 <rb_next@@Base+0x34>
   13488:	ldr	r3, [r1, #4]
   1348c:	cmp	r0, r3
   13490:	movne	r3, r1
   13494:	beq	134ac <rb_next@@Base+0x68>
   13498:	b	13478 <rb_next@@Base+0x34>
   1349c:	ldr	r1, [r3, #4]
   134a0:	cmp	r2, r1
   134a4:	mov	r2, r3
   134a8:	bne	13478 <rb_next@@Base+0x34>
   134ac:	ldr	r3, [r2]
   134b0:	bics	r3, r3, #3
   134b4:	bne	1349c <rb_next@@Base+0x58>
   134b8:	mov	r0, r3
   134bc:	bx	lr
   134c0:	mov	r3, #0
   134c4:	b	13478 <rb_next@@Base+0x34>

000134c8 <log_err@@Base>:
   134c8:	push	{r0, r1, r2, r3}
   134cc:	mov	r3, #1024	; 0x400
   134d0:	push	{r4, lr}
   134d4:	sub	sp, sp, #1040	; 0x410
   134d8:	ldr	r4, [pc, #108]	; 1354c <log_err@@Base+0x84>
   134dc:	ldr	r1, [sp, #1048]	; 0x418
   134e0:	add	ip, sp, #1040	; 0x410
   134e4:	add	ip, ip, #12
   134e8:	ldr	r2, [r4]
   134ec:	stm	sp, {r1, ip}
   134f0:	str	r2, [sp, #1036]	; 0x40c
   134f4:	mov	r1, r3
   134f8:	mov	r2, #1
   134fc:	add	r0, sp, #12
   13500:	str	ip, [sp, #8]
   13504:	bl	11a14 <__vsnprintf_chk@plt>
   13508:	ldr	r1, [pc, #64]	; 13550 <log_err@@Base+0x88>
   1350c:	ldr	r3, [pc, #64]	; 13554 <log_err@@Base+0x8c>
   13510:	mov	r2, #1
   13514:	ldr	r3, [r3]
   13518:	cmp	r0, r1
   1351c:	movcc	r1, r0
   13520:	add	r0, sp, #12
   13524:	bl	11ab0 <fwrite@plt>
   13528:	ldr	r2, [sp, #1036]	; 0x40c
   1352c:	ldr	r3, [r4]
   13530:	cmp	r2, r3
   13534:	bne	13548 <log_err@@Base+0x80>
   13538:	add	sp, sp, #1040	; 0x410
   1353c:	pop	{r4, lr}
   13540:	add	sp, sp, #16
   13544:	bx	lr
   13548:	bl	11a5c <__stack_chk_fail@plt>
   1354c:	andeq	r8, r2, r0, lsl lr
   13550:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   13554:	andeq	r9, r2, r8, lsr #32

00013558 <log_info@@Base>:
   13558:	push	{r0, r1, r2, r3}
   1355c:	mov	r3, #1024	; 0x400
   13560:	push	{r4, lr}
   13564:	sub	sp, sp, #1040	; 0x410
   13568:	ldr	r4, [pc, #108]	; 135dc <log_info@@Base+0x84>
   1356c:	ldr	r1, [sp, #1048]	; 0x418
   13570:	add	ip, sp, #1040	; 0x410
   13574:	add	ip, ip, #12
   13578:	ldr	r2, [r4]
   1357c:	stm	sp, {r1, ip}
   13580:	str	r2, [sp, #1036]	; 0x40c
   13584:	mov	r1, r3
   13588:	mov	r2, #1
   1358c:	add	r0, sp, #12
   13590:	str	ip, [sp, #8]
   13594:	bl	11a14 <__vsnprintf_chk@plt>
   13598:	ldr	r1, [pc, #64]	; 135e0 <log_info@@Base+0x88>
   1359c:	ldr	r3, [pc, #64]	; 135e4 <log_info@@Base+0x8c>
   135a0:	mov	r2, #1
   135a4:	ldr	r3, [r3]
   135a8:	cmp	r0, r1
   135ac:	movcc	r1, r0
   135b0:	add	r0, sp, #12
   135b4:	bl	11ab0 <fwrite@plt>
   135b8:	ldr	r2, [sp, #1036]	; 0x40c
   135bc:	ldr	r3, [r4]
   135c0:	cmp	r2, r3
   135c4:	bne	135d8 <log_info@@Base+0x80>
   135c8:	add	sp, sp, #1040	; 0x410
   135cc:	pop	{r4, lr}
   135d0:	add	sp, sp, #16
   135d4:	bx	lr
   135d8:	bl	11a5c <__stack_chk_fail@plt>
   135dc:	andeq	r8, r2, r0, lsl lr
   135e0:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   135e4:	andeq	r9, r2, ip, lsr #32
   135e8:	push	{r4, lr}
   135ec:	mov	r2, #19
   135f0:	ldr	r3, [pc, #8]	; 13600 <log_info@@Base+0xa8>
   135f4:	ldr	r1, [pc, #8]	; 13604 <log_info@@Base+0xac>
   135f8:	ldr	r0, [pc, #8]	; 13608 <log_info@@Base+0xb0>
   135fc:	bl	11bf4 <__assert_fail@plt>
   13600:	andeq	r7, r1, r8, lsr #12
   13604:	andeq	r7, r1, r8, lsl #13
   13608:	muleq	r1, r4, r6

0001360c <__fio_sem_remove@@Base>:
   1360c:	ldr	r3, [pc, #52]	; 13648 <__fio_sem_remove@@Base+0x3c>
   13610:	ldr	r2, [r0, #80]	; 0x50
   13614:	push	{r4, lr}
   13618:	cmp	r2, r3
   1361c:	bne	13644 <__fio_sem_remove@@Base+0x38>
   13620:	mov	r4, r0
   13624:	bl	119e4 <pthread_mutex_destroy@plt>
   13628:	add	r0, r4, #24
   1362c:	bl	11a8c <pthread_cond_destroy@plt>
   13630:	mov	r0, r4
   13634:	mov	r2, #88	; 0x58
   13638:	mov	r1, #0
   1363c:	pop	{r4, lr}
   13640:	b	11b70 <memset@plt>
   13644:	bl	135e8 <log_info@@Base+0x90>
   13648:	cfldrdmi	mvd5, [r5, #-276]	; 0xfffffeec

0001364c <fio_sem_remove@@Base>:
   1364c:	ldr	r3, [pc, #64]	; 13694 <fio_sem_remove@@Base+0x48>
   13650:	ldr	r2, [r0, #80]	; 0x50
   13654:	push	{r4, lr}
   13658:	cmp	r2, r3
   1365c:	bne	13690 <fio_sem_remove@@Base+0x44>
   13660:	mov	r4, r0
   13664:	bl	119e4 <pthread_mutex_destroy@plt>
   13668:	add	r0, r4, #24
   1366c:	bl	11a8c <pthread_cond_destroy@plt>
   13670:	mov	r1, #0
   13674:	mov	r0, r4
   13678:	mov	r2, #88	; 0x58
   1367c:	bl	11b70 <memset@plt>
   13680:	mov	r0, r4
   13684:	mov	r1, #88	; 0x58
   13688:	pop	{r4, lr}
   1368c:	b	11b94 <munmap@plt>
   13690:	bl	135e8 <log_info@@Base+0x90>
   13694:	cfldrdmi	mvd5, [r5, #-276]	; 0xfffffeec

00013698 <__fio_sem_init@@Base>:
   13698:	ldr	r2, [pc, #20]	; 136b4 <__fio_sem_init@@Base+0x1c>
   1369c:	mov	ip, #0
   136a0:	str	r1, [r0, #72]	; 0x48
   136a4:	str	ip, [r0, #76]	; 0x4c
   136a8:	str	r2, [r0, #80]	; 0x50
   136ac:	add	r1, r0, #24
   136b0:	b	13c28 <mutex_cond_init_pshared@@Base>
   136b4:	cfldrdmi	mvd5, [r5, #-276]	; 0xfffffeec

000136b8 <fio_sem_init@@Base>:
   136b8:	push	{r4, r5, r6, r7, r8, lr}
   136bc:	mov	r4, #0
   136c0:	sub	sp, sp, #16
   136c4:	mov	r5, #0
   136c8:	mvn	r3, #0
   136cc:	str	r3, [sp]
   136d0:	mov	r8, r0
   136d4:	strd	r4, [sp, #8]
   136d8:	mov	r3, #33	; 0x21
   136dc:	mov	r2, #3
   136e0:	mov	r1, #88	; 0x58
   136e4:	mov	r0, #0
   136e8:	bl	11a2c <mmap64@plt>
   136ec:	cmn	r0, #1
   136f0:	beq	13774 <fio_sem_init@@Base+0xbc>
   136f4:	ldr	r7, [pc, #140]	; 13788 <fio_sem_init@@Base+0xd0>
   136f8:	mov	r5, #0
   136fc:	add	r6, r0, #24
   13700:	str	r8, [r0, #72]	; 0x48
   13704:	str	r7, [r0, #80]	; 0x50
   13708:	str	r5, [r0, #76]	; 0x4c
   1370c:	mov	r1, r6
   13710:	mov	r4, r0
   13714:	bl	13c28 <mutex_cond_init_pshared@@Base>
   13718:	cmp	r0, r5
   1371c:	bne	1372c <fio_sem_init@@Base+0x74>
   13720:	mov	r0, r4
   13724:	add	sp, sp, #16
   13728:	pop	{r4, r5, r6, r7, r8, pc}
   1372c:	ldr	r3, [r4, #80]	; 0x50
   13730:	cmp	r3, r7
   13734:	bne	13784 <fio_sem_init@@Base+0xcc>
   13738:	mov	r0, r4
   1373c:	bl	119e4 <pthread_mutex_destroy@plt>
   13740:	mov	r0, r6
   13744:	bl	11a8c <pthread_cond_destroy@plt>
   13748:	mov	r2, #88	; 0x58
   1374c:	mov	r1, r5
   13750:	mov	r0, r4
   13754:	bl	11b70 <memset@plt>
   13758:	mov	r0, r4
   1375c:	mov	r1, #88	; 0x58
   13760:	bl	11b94 <munmap@plt>
   13764:	mov	r4, r5
   13768:	mov	r0, r4
   1376c:	add	sp, sp, #16
   13770:	pop	{r4, r5, r6, r7, r8, pc}
   13774:	ldr	r0, [pc, #16]	; 1378c <fio_sem_init@@Base+0xd4>
   13778:	bl	11a98 <perror@plt>
   1377c:	mov	r4, #0
   13780:	b	13720 <fio_sem_init@@Base+0x68>
   13784:	bl	135e8 <log_info@@Base+0x90>
   13788:	cfldrdmi	mvd5, [r5, #-276]	; 0xfffffeec
   1378c:			; <UNDEFINED> instruction: 0x000176b0

00013790 <fio_sem_down_timeout@@Base>:
   13790:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13794:	mov	r5, r0
   13798:	ldr	r9, [pc, #376]	; 13918 <fio_sem_down_timeout@@Base+0x188>
   1379c:	ldr	r0, [r0, #80]	; 0x50
   137a0:	ldr	r2, [pc, #372]	; 1391c <fio_sem_down_timeout@@Base+0x18c>
   137a4:	sub	sp, sp, #48	; 0x30
   137a8:	ldr	r3, [r9]
   137ac:	cmp	r0, r2
   137b0:	str	r3, [sp, #44]	; 0x2c
   137b4:	bne	138f8 <fio_sem_down_timeout@@Base+0x168>
   137b8:	mov	r6, r1
   137bc:	add	r0, sp, #4
   137c0:	mov	r1, #0
   137c4:	ldr	r8, [pc, #340]	; 13920 <fio_sem_down_timeout@@Base+0x190>
   137c8:	bl	11ae0 <gettimeofday@plt>
   137cc:	ldr	r3, [sp, #8]
   137d0:	umull	r2, r8, r8, r6
   137d4:	ldr	r0, [pc, #328]	; 13924 <fio_sem_down_timeout@@Base+0x194>
   137d8:	rsb	r4, r3, r3, lsl #5
   137dc:	ldr	ip, [sp, #4]
   137e0:	add	r4, r3, r4, lsl #2
   137e4:	add	r8, ip, r8, lsr #6
   137e8:	lsl	r4, r4, #3
   137ec:	umull	r0, r1, r6, r0
   137f0:	add	r3, pc, #280	; 0x118
   137f4:	ldrd	r2, [r3]
   137f8:	str	r4, [sp, #16]
   137fc:	str	r8, [sp, #20]
   13800:	str	ip, [sp, #12]
   13804:	bl	1716c <fnv@@Base+0x7cc>
   13808:	ldr	r3, [pc, #280]	; 13928 <fio_sem_down_timeout@@Base+0x198>
   1380c:	mov	r0, r5
   13810:	mov	r7, #0
   13814:	add	sl, r5, #24
   13818:	add	r2, r4, r2
   1381c:	cmp	r2, r3
   13820:	addgt	r8, r8, #1
   13824:	ldrgt	r3, [pc, #256]	; 1392c <fio_sem_down_timeout@@Base+0x19c>
   13828:	strle	r2, [sp, #24]
   1382c:	addgt	r3, r2, r3
   13830:	strgt	r3, [sp, #24]
   13834:	strgt	r8, [sp, #20]
   13838:	bl	11a08 <pthread_mutex_lock@plt>
   1383c:	ldr	r3, [r5, #76]	; 0x4c
   13840:	mov	r4, #0
   13844:	add	r3, r3, #1
   13848:	str	r3, [r5, #76]	; 0x4c
   1384c:	b	1386c <fio_sem_down_timeout@@Base+0xdc>
   13850:	add	r2, sp, #20
   13854:	mov	r1, r5
   13858:	mov	r0, sl
   1385c:	bl	11ba0 <pthread_cond_timedwait@plt>
   13860:	cmp	r0, #110	; 0x6e
   13864:	mov	r4, r0
   13868:	beq	138b4 <fio_sem_down_timeout@@Base+0x124>
   1386c:	ldr	r3, [r5, #72]	; 0x48
   13870:	orrs	r8, r3, r4
   13874:	beq	13850 <fio_sem_down_timeout@@Base+0xc0>
   13878:	ldr	r2, [r5, #76]	; 0x4c
   1387c:	cmp	r4, #0
   13880:	subeq	r3, r3, #1
   13884:	sub	r2, r2, #1
   13888:	streq	r3, [r5, #72]	; 0x48
   1388c:	str	r2, [r5, #76]	; 0x4c
   13890:	mov	r0, r5
   13894:	bl	1199c <pthread_mutex_unlock@plt>
   13898:	ldr	r2, [sp, #44]	; 0x2c
   1389c:	ldr	r3, [r9]
   138a0:	mov	r0, r4
   138a4:	cmp	r2, r3
   138a8:	bne	1390c <fio_sem_down_timeout@@Base+0x17c>
   138ac:	add	sp, sp, #48	; 0x30
   138b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   138b4:	mov	r1, r8
   138b8:	add	r0, sp, #28
   138bc:	bl	11ae0 <gettimeofday@plt>
   138c0:	ldr	r3, [sp, #32]
   138c4:	ldr	r1, [sp, #28]
   138c8:	add	r0, sp, #12
   138cc:	rsb	r2, r3, r3, lsl #5
   138d0:	str	r1, [sp, #36]	; 0x24
   138d4:	add	r3, r3, r2, lsl #2
   138d8:	add	r1, sp, #36	; 0x24
   138dc:	lsl	r3, r3, #3
   138e0:	str	r3, [sp, #40]	; 0x28
   138e4:	bl	14da4 <mtime_since@@Base>
   138e8:	cmp	r7, r1
   138ec:	cmpeq	r6, r0
   138f0:	movhi	r4, #0
   138f4:	b	1386c <fio_sem_down_timeout@@Base+0xdc>
   138f8:	ldr	r3, [pc, #48]	; 13930 <fio_sem_down_timeout@@Base+0x1a0>
   138fc:	mov	r2, #93	; 0x5d
   13900:	ldr	r1, [pc, #44]	; 13934 <fio_sem_down_timeout@@Base+0x1a4>
   13904:	ldr	r0, [pc, #44]	; 13938 <fio_sem_down_timeout@@Base+0x1a8>
   13908:	bl	11bf4 <__assert_fail@plt>
   1390c:	bl	11a5c <__stack_chk_fail@plt>
   13910:	blcc	fe6c6118 <__bss_end__@@Base+0xfe69cd6c>
   13914:	andeq	r0, r0, r0
   13918:	andeq	r8, r2, r0, lsl lr
   1391c:	cfldrdmi	mvd5, [r5, #-276]	; 0xfffffeec
   13920:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   13924:	andeq	r4, pc, r0, asr #4
   13928:	blcc	fe6c612c <__bss_end__@@Base+0xfe69cd80>
   1392c:	strbtgt	r3, [r5], #-1536	; 0xfffffa00
   13930:	andeq	r7, r1, ip, lsr r6
   13934:	andeq	r7, r1, r8, lsl #13
   13938:	muleq	r1, r4, r6

0001393c <fio_sem_down_trylock@@Base>:
   1393c:	ldr	r3, [pc, #80]	; 13994 <fio_sem_down_trylock@@Base+0x58>
   13940:	ldr	r2, [r0, #80]	; 0x50
   13944:	push	{r4, r5, r6, lr}
   13948:	cmp	r2, r3
   1394c:	bne	13980 <fio_sem_down_trylock@@Base+0x44>
   13950:	mov	r4, r0
   13954:	bl	11a08 <pthread_mutex_lock@plt>
   13958:	ldr	r3, [r4, #72]	; 0x48
   1395c:	mov	r0, r4
   13960:	cmp	r3, #0
   13964:	subne	r3, r3, #1
   13968:	movne	r5, #0
   1396c:	moveq	r5, #1
   13970:	strne	r3, [r4, #72]	; 0x48
   13974:	bl	1199c <pthread_mutex_unlock@plt>
   13978:	mov	r0, r5
   1397c:	pop	{r4, r5, r6, pc}
   13980:	ldr	r3, [pc, #16]	; 13998 <fio_sem_down_trylock@@Base+0x5c>
   13984:	mov	r2, #134	; 0x86
   13988:	ldr	r1, [pc, #12]	; 1399c <fio_sem_down_trylock@@Base+0x60>
   1398c:	ldr	r0, [pc, #12]	; 139a0 <fio_sem_down_trylock@@Base+0x64>
   13990:	bl	11bf4 <__assert_fail@plt>
   13994:	cfldrdmi	mvd5, [r5, #-276]	; 0xfffffeec
   13998:	andeq	r7, r1, r4, asr r6
   1399c:	andeq	r7, r1, r8, lsl #13
   139a0:	muleq	r1, r4, r6

000139a4 <fio_sem_down@@Base>:
   139a4:	ldr	r3, [pc, #120]	; 13a24 <fio_sem_down@@Base+0x80>
   139a8:	ldr	r2, [r0, #80]	; 0x50
   139ac:	push	{r4, r5, r6, lr}
   139b0:	cmp	r2, r3
   139b4:	bne	13a10 <fio_sem_down@@Base+0x6c>
   139b8:	mov	r4, r0
   139bc:	bl	11a08 <pthread_mutex_lock@plt>
   139c0:	ldr	r2, [r4, #72]	; 0x48
   139c4:	cmp	r2, #0
   139c8:	bne	139fc <fio_sem_down@@Base+0x58>
   139cc:	ldr	r3, [r4, #76]	; 0x4c
   139d0:	add	r5, r4, #24
   139d4:	add	r3, r3, #1
   139d8:	str	r3, [r4, #76]	; 0x4c
   139dc:	mov	r1, r4
   139e0:	mov	r0, r5
   139e4:	bl	11bb8 <pthread_cond_wait@plt>
   139e8:	ldrd	r2, [r4, #72]	; 0x48
   139ec:	sub	r3, r3, #1
   139f0:	cmp	r2, #0
   139f4:	str	r3, [r4, #76]	; 0x4c
   139f8:	beq	139d4 <fio_sem_down@@Base+0x30>
   139fc:	sub	r2, r2, #1
   13a00:	str	r2, [r4, #72]	; 0x48
   13a04:	mov	r0, r4
   13a08:	pop	{r4, r5, r6, lr}
   13a0c:	b	1199c <pthread_mutex_unlock@plt>
   13a10:	ldr	r3, [pc, #16]	; 13a28 <fio_sem_down@@Base+0x84>
   13a14:	mov	r2, #148	; 0x94
   13a18:	ldr	r1, [pc, #12]	; 13a2c <fio_sem_down@@Base+0x88>
   13a1c:	ldr	r0, [pc, #12]	; 13a30 <fio_sem_down@@Base+0x8c>
   13a20:	bl	11bf4 <__assert_fail@plt>
   13a24:	cfldrdmi	mvd5, [r5, #-276]	; 0xfffffeec
   13a28:	andeq	r7, r1, ip, ror #12
   13a2c:	andeq	r7, r1, r8, lsl #13
   13a30:	muleq	r1, r4, r6

00013a34 <fio_sem_up@@Base>:
   13a34:	ldr	r3, [pc, #100]	; 13aa0 <fio_sem_up@@Base+0x6c>
   13a38:	ldr	r2, [r0, #80]	; 0x50
   13a3c:	push	{r4, lr}
   13a40:	cmp	r2, r3
   13a44:	bne	13a8c <fio_sem_up@@Base+0x58>
   13a48:	mov	r4, r0
   13a4c:	bl	11a08 <pthread_mutex_lock@plt>
   13a50:	ldr	r3, [r4, #72]	; 0x48
   13a54:	cmp	r3, #0
   13a58:	addne	r3, r3, #1
   13a5c:	strne	r3, [r4, #72]	; 0x48
   13a60:	bne	13a80 <fio_sem_up@@Base+0x4c>
   13a64:	ldr	r3, [r4, #76]	; 0x4c
   13a68:	cmp	r3, #0
   13a6c:	mov	r3, #1
   13a70:	str	r3, [r4, #72]	; 0x48
   13a74:	beq	13a80 <fio_sem_up@@Base+0x4c>
   13a78:	add	r0, r4, #24
   13a7c:	bl	11bd0 <pthread_cond_signal@plt>
   13a80:	mov	r0, r4
   13a84:	pop	{r4, lr}
   13a88:	b	1199c <pthread_mutex_unlock@plt>
   13a8c:	ldr	r3, [pc, #16]	; 13aa4 <fio_sem_up@@Base+0x70>
   13a90:	mov	r2, #166	; 0xa6
   13a94:	ldr	r1, [pc, #12]	; 13aa8 <fio_sem_up@@Base+0x74>
   13a98:	ldr	r0, [pc, #12]	; 13aac <fio_sem_up@@Base+0x78>
   13a9c:	bl	11bf4 <__assert_fail@plt>
   13aa0:	cfldrdmi	mvd5, [r5, #-276]	; 0xfffffeec
   13aa4:	andeq	r7, r1, ip, ror r6
   13aa8:	andeq	r7, r1, r8, lsl #13
   13aac:	muleq	r1, r4, r6

00013ab0 <cond_init_pshared@@Base>:
   13ab0:	push	{r4, r5, r6, lr}
   13ab4:	sub	sp, sp, #8
   13ab8:	ldr	r5, [pc, #156]	; 13b5c <cond_init_pshared@@Base+0xac>
   13abc:	mov	r6, r0
   13ac0:	mov	r0, sp
   13ac4:	ldr	r3, [r5]
   13ac8:	str	r3, [sp, #4]
   13acc:	bl	11a68 <pthread_condattr_init@plt>
   13ad0:	subs	r4, r0, #0
   13ad4:	bne	13b30 <cond_init_pshared@@Base+0x80>
   13ad8:	mov	r1, #1
   13adc:	mov	r0, sp
   13ae0:	bl	119c0 <pthread_condattr_setpshared@plt>
   13ae4:	subs	r4, r0, #0
   13ae8:	bne	13b1c <cond_init_pshared@@Base+0x6c>
   13aec:	mov	r1, sp
   13af0:	mov	r0, r6
   13af4:	bl	11a74 <pthread_cond_init@plt>
   13af8:	subs	r4, r0, #0
   13afc:	bne	13b44 <cond_init_pshared@@Base+0x94>
   13b00:	ldr	r2, [sp, #4]
   13b04:	ldr	r3, [r5]
   13b08:	mov	r0, r4
   13b0c:	cmp	r2, r3
   13b10:	bne	13b58 <cond_init_pshared@@Base+0xa8>
   13b14:	add	sp, sp, #8
   13b18:	pop	{r4, r5, r6, pc}
   13b1c:	bl	11b28 <strerror@plt>
   13b20:	mov	r1, r0
   13b24:	ldr	r0, [pc, #52]	; 13b60 <cond_init_pshared@@Base+0xb0>
   13b28:	bl	134c8 <log_err@@Base>
   13b2c:	b	13b00 <cond_init_pshared@@Base+0x50>
   13b30:	bl	11b28 <strerror@plt>
   13b34:	mov	r1, r0
   13b38:	ldr	r0, [pc, #36]	; 13b64 <cond_init_pshared@@Base+0xb4>
   13b3c:	bl	134c8 <log_err@@Base>
   13b40:	b	13b00 <cond_init_pshared@@Base+0x50>
   13b44:	bl	11b28 <strerror@plt>
   13b48:	mov	r1, r0
   13b4c:	ldr	r0, [pc, #20]	; 13b68 <cond_init_pshared@@Base+0xb8>
   13b50:	bl	134c8 <log_err@@Base>
   13b54:	b	13b00 <cond_init_pshared@@Base+0x50>
   13b58:	bl	11a5c <__stack_chk_fail@plt>
   13b5c:	andeq	r8, r2, r0, lsl lr
   13b60:	ldrdeq	r7, [r1], -ip
   13b64:	andeq	r7, r1, r0, asr #13
   13b68:	andeq	r7, r1, r0, lsl #14

00013b6c <mutex_init_pshared@@Base>:
   13b6c:	push	{r4, r5, r6, lr}
   13b70:	sub	sp, sp, #8
   13b74:	ldr	r5, [pc, #156]	; 13c18 <mutex_init_pshared@@Base+0xac>
   13b78:	mov	r6, r0
   13b7c:	mov	r0, sp
   13b80:	ldr	r3, [r5]
   13b84:	str	r3, [sp, #4]
   13b88:	bl	119cc <pthread_mutexattr_init@plt>
   13b8c:	subs	r4, r0, #0
   13b90:	bne	13bec <mutex_init_pshared@@Base+0x80>
   13b94:	mov	r1, #1
   13b98:	mov	r0, sp
   13b9c:	bl	11b88 <pthread_mutexattr_setpshared@plt>
   13ba0:	subs	r4, r0, #0
   13ba4:	bne	13bd8 <mutex_init_pshared@@Base+0x6c>
   13ba8:	mov	r1, sp
   13bac:	mov	r0, r6
   13bb0:	bl	11a38 <pthread_mutex_init@plt>
   13bb4:	subs	r4, r0, #0
   13bb8:	bne	13c00 <mutex_init_pshared@@Base+0x94>
   13bbc:	ldr	r2, [sp, #4]
   13bc0:	ldr	r3, [r5]
   13bc4:	mov	r0, r4
   13bc8:	cmp	r2, r3
   13bcc:	bne	13c14 <mutex_init_pshared@@Base+0xa8>
   13bd0:	add	sp, sp, #8
   13bd4:	pop	{r4, r5, r6, pc}
   13bd8:	bl	11b28 <strerror@plt>
   13bdc:	mov	r1, r0
   13be0:	ldr	r0, [pc, #52]	; 13c1c <mutex_init_pshared@@Base+0xb0>
   13be4:	bl	134c8 <log_err@@Base>
   13be8:	b	13bbc <mutex_init_pshared@@Base+0x50>
   13bec:	bl	11b28 <strerror@plt>
   13bf0:	mov	r1, r0
   13bf4:	ldr	r0, [pc, #36]	; 13c20 <mutex_init_pshared@@Base+0xb4>
   13bf8:	bl	134c8 <log_err@@Base>
   13bfc:	b	13bbc <mutex_init_pshared@@Base+0x50>
   13c00:	bl	11b28 <strerror@plt>
   13c04:	mov	r1, r0
   13c08:	ldr	r0, [pc, #20]	; 13c24 <mutex_init_pshared@@Base+0xb8>
   13c0c:	bl	134c8 <log_err@@Base>
   13c10:	b	13bbc <mutex_init_pshared@@Base+0x50>
   13c14:	bl	11a5c <__stack_chk_fail@plt>
   13c18:	andeq	r8, r2, r0, lsl lr
   13c1c:	andeq	r7, r1, r4, lsr r7
   13c20:	andeq	r7, r1, r8, lsl r7
   13c24:	andeq	r7, r1, r8, asr r7

00013c28 <mutex_cond_init_pshared@@Base>:
   13c28:	push	{r4, r5, r6, r7, lr}
   13c2c:	sub	sp, sp, #12
   13c30:	ldr	r5, [pc, #172]	; 13ce4 <mutex_cond_init_pshared@@Base+0xbc>
   13c34:	mov	r7, r0
   13c38:	mov	r0, sp
   13c3c:	ldr	r3, [r5]
   13c40:	mov	r6, r1
   13c44:	str	r3, [sp, #4]
   13c48:	bl	119cc <pthread_mutexattr_init@plt>
   13c4c:	subs	r4, r0, #0
   13c50:	bne	13cb8 <mutex_cond_init_pshared@@Base+0x90>
   13c54:	mov	r1, #1
   13c58:	mov	r0, sp
   13c5c:	bl	11b88 <pthread_mutexattr_setpshared@plt>
   13c60:	subs	r4, r0, #0
   13c64:	bne	13ca4 <mutex_cond_init_pshared@@Base+0x7c>
   13c68:	mov	r1, sp
   13c6c:	mov	r0, r7
   13c70:	bl	11a38 <pthread_mutex_init@plt>
   13c74:	subs	r4, r0, #0
   13c78:	bne	13ccc <mutex_cond_init_pshared@@Base+0xa4>
   13c7c:	mov	r0, r6
   13c80:	bl	13ab0 <cond_init_pshared@@Base>
   13c84:	mov	r4, r0
   13c88:	ldr	r2, [sp, #4]
   13c8c:	ldr	r3, [r5]
   13c90:	mov	r0, r4
   13c94:	cmp	r2, r3
   13c98:	bne	13ce0 <mutex_cond_init_pshared@@Base+0xb8>
   13c9c:	add	sp, sp, #12
   13ca0:	pop	{r4, r5, r6, r7, pc}
   13ca4:	bl	11b28 <strerror@plt>
   13ca8:	mov	r1, r0
   13cac:	ldr	r0, [pc, #52]	; 13ce8 <mutex_cond_init_pshared@@Base+0xc0>
   13cb0:	bl	134c8 <log_err@@Base>
   13cb4:	b	13c88 <mutex_cond_init_pshared@@Base+0x60>
   13cb8:	bl	11b28 <strerror@plt>
   13cbc:	mov	r1, r0
   13cc0:	ldr	r0, [pc, #36]	; 13cec <mutex_cond_init_pshared@@Base+0xc4>
   13cc4:	bl	134c8 <log_err@@Base>
   13cc8:	b	13c88 <mutex_cond_init_pshared@@Base+0x60>
   13ccc:	bl	11b28 <strerror@plt>
   13cd0:	mov	r1, r0
   13cd4:	ldr	r0, [pc, #20]	; 13cf0 <mutex_cond_init_pshared@@Base+0xc8>
   13cd8:	bl	134c8 <log_err@@Base>
   13cdc:	b	13c88 <mutex_cond_init_pshared@@Base+0x60>
   13ce0:	bl	11a5c <__stack_chk_fail@plt>
   13ce4:	andeq	r8, r2, r0, lsl lr
   13ce8:	andeq	r7, r1, r4, lsr r7
   13cec:	andeq	r7, r1, r8, lsl r7
   13cf0:	andeq	r7, r1, r8, asr r7

00013cf4 <sinit@@Base>:
   13cf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13cf8:	sub	sp, sp, #20
   13cfc:	ldr	r7, [pc, #296]	; 13e2c <sinit@@Base+0x138>
   13d00:	ldr	r5, [r7]
   13d04:	cmp	r5, #16
   13d08:	movne	r6, #0
   13d0c:	bne	13d68 <sinit@@Base+0x74>
   13d10:	b	13e10 <sinit@@Base+0x11c>
   13d14:	ldr	r3, [r4, #20]
   13d18:	mov	r2, r9
   13d1c:	str	r0, [r4, #8]
   13d20:	add	r3, r0, r3, lsl #10
   13d24:	mov	r0, r3
   13d28:	mov	r1, #0
   13d2c:	str	r3, [r4, #12]
   13d30:	bl	11b70 <memset@plt>
   13d34:	mov	r0, #1
   13d38:	bl	136b8 <fio_sem_init@@Base>
   13d3c:	cmp	r0, #0
   13d40:	str	r0, [r4, #4]
   13d44:	beq	13de4 <sinit@@Base+0xf0>
   13d48:	ldr	r5, [r7]
   13d4c:	cmp	r6, #7
   13d50:	add	r5, r5, #1
   13d54:	add	r6, r6, #1
   13d58:	str	r5, [r7]
   13d5c:	beq	13e24 <sinit@@Base+0x130>
   13d60:	cmp	r5, #16
   13d64:	beq	13e24 <sinit@@Base+0x130>
   13d68:	ldr	r3, [pc, #192]	; 13e30 <sinit@@Base+0x13c>
   13d6c:	lsl	r8, r5, #3
   13d70:	sub	r4, r8, r5
   13d74:	ldr	r1, [r3]
   13d78:	add	r4, r7, r4, lsl #2
   13d7c:	add	r1, r1, #12
   13d80:	cmp	r1, #16777216	; 0x1000000
   13d84:	movcc	r1, #16777216	; 0x1000000
   13d88:	add	r1, r1, #1020	; 0x3fc
   13d8c:	add	r1, r1, #3
   13d90:	mov	sl, #0
   13d94:	lsr	r0, r1, #10
   13d98:	bic	r1, r1, #1020	; 0x3fc
   13d9c:	bic	r1, r1, #3
   13da0:	lsl	r9, r0, #2
   13da4:	mov	fp, #0
   13da8:	add	r2, r1, r9
   13dac:	lsl	ip, r0, #5
   13db0:	mvn	r3, #0
   13db4:	str	r3, [sp]
   13db8:	strd	sl, [sp, #8]
   13dbc:	mov	r1, r2
   13dc0:	str	r2, [r4, #28]
   13dc4:	str	r0, [r4, #20]
   13dc8:	mov	r3, #33	; 0x21
   13dcc:	mov	r2, #3
   13dd0:	mov	r0, #0
   13dd4:	str	ip, [r4, #16]
   13dd8:	bl	11a2c <mmap64@plt>
   13ddc:	cmn	r0, #1
   13de0:	bne	13d14 <sinit@@Base+0x20>
   13de4:	sub	r5, r8, r5
   13de8:	ldr	r0, [pc, #68]	; 13e34 <sinit@@Base+0x140>
   13dec:	add	r7, r7, r5, lsl #2
   13df0:	bl	134c8 <log_err@@Base>
   13df4:	ldr	r0, [r7, #8]
   13df8:	cmp	r0, #0
   13dfc:	beq	13e08 <sinit@@Base+0x114>
   13e00:	ldr	r1, [r7, #28]
   13e04:	bl	11b94 <munmap@plt>
   13e08:	cmp	r6, #0
   13e0c:	bne	13e24 <sinit@@Base+0x130>
   13e10:	ldr	r3, [pc, #32]	; 13e38 <sinit@@Base+0x144>
   13e14:	mov	r2, #215	; 0xd7
   13e18:	ldr	r1, [pc, #28]	; 13e3c <sinit@@Base+0x148>
   13e1c:	ldr	r0, [pc, #28]	; 13e40 <sinit@@Base+0x14c>
   13e20:	bl	11bf4 <__assert_fail@plt>
   13e24:	add	sp, sp, #20
   13e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e2c:	andeq	r9, r2, r4, asr #3
   13e30:	andeq	r9, r2, r4, lsl r0
   13e34:			; <UNDEFINED> instruction: 0x000177b0
   13e38:	andeq	r7, r1, r0, ror r7
   13e3c:	ldrdeq	r7, [r1], -r0
   13e40:	ldrdeq	r7, [r1], -ip

00013e44 <scleanup@@Base>:
   13e44:	push	{r4, r5, r6, r7, r8, lr}
   13e48:	ldr	r7, [pc, #88]	; 13ea8 <scleanup@@Base+0x64>
   13e4c:	ldr	r6, [r7]
   13e50:	cmp	r6, #0
   13e54:	popeq	{r4, r5, r6, r7, r8, pc}
   13e58:	add	r4, r7, #4
   13e5c:	mov	r5, #0
   13e60:	ldr	r1, [r4, #24]
   13e64:	ldr	r0, [r4, #4]
   13e68:	bl	11b94 <munmap@plt>
   13e6c:	ldr	r3, [r4]
   13e70:	subs	r0, r3, #0
   13e74:	beq	13e94 <scleanup@@Base+0x50>
   13e78:	bl	1364c <fio_sem_remove@@Base>
   13e7c:	ldr	r6, [r7]
   13e80:	add	r5, r5, #1
   13e84:	cmp	r6, r5
   13e88:	add	r4, r4, #28
   13e8c:	bhi	13e60 <scleanup@@Base+0x1c>
   13e90:	pop	{r4, r5, r6, r7, r8, pc}
   13e94:	add	r5, r5, #1
   13e98:	cmp	r6, r5
   13e9c:	add	r4, r4, #28
   13ea0:	bhi	13e60 <scleanup@@Base+0x1c>
   13ea4:	pop	{r4, r5, r6, r7, r8, pc}
   13ea8:	andeq	r9, r2, r4, asr #3

00013eac <sfree@@Base>:
   13eac:	subs	r1, r0, #0
   13eb0:	bxeq	lr
   13eb4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13eb8:	ldr	r7, [pc, #472]	; 14098 <sfree@@Base+0x1ec>
   13ebc:	ldr	r2, [r7]
   13ec0:	cmp	r2, #0
   13ec4:	beq	1402c <sfree@@Base+0x180>
   13ec8:	add	r4, r7, #4
   13ecc:	mov	r5, #0
   13ed0:	ldr	ip, [r4, #4]
   13ed4:	cmp	r1, ip
   13ed8:	bcc	1401c <sfree@@Base+0x170>
   13edc:	ldr	r3, [r4, #16]
   13ee0:	add	r3, ip, r3, lsl #10
   13ee4:	cmp	r1, r3
   13ee8:	bcs	1401c <sfree@@Base+0x170>
   13eec:	mov	r6, r1
   13ef0:	sub	r1, r1, #8
   13ef4:	cmp	ip, r1
   13ef8:	bhi	14038 <sfree@@Base+0x18c>
   13efc:	cmp	r3, r1
   13f00:	bls	14038 <sfree@@Base+0x18c>
   13f04:	ldmdb	r6, {r0, r2}
   13f08:	ldr	r3, [pc, #396]	; 1409c <sfree@@Base+0x1f0>
   13f0c:	sub	r0, r0, #1
   13f10:	add	r0, r1, r0
   13f14:	cmp	r2, r3
   13f18:	bic	r0, r0, #3
   13f1c:	bne	1407c <sfree@@Base+0x1d0>
   13f20:	ldr	r2, [r0]
   13f24:	ldr	r3, [pc, #372]	; 140a0 <sfree@@Base+0x1f4>
   13f28:	cmp	r2, r3
   13f2c:	bne	14060 <sfree@@Base+0x1b4>
   13f30:	lsl	r9, r5, #3
   13f34:	sub	r3, r9, r5
   13f38:	sub	ip, r1, ip
   13f3c:	add	r3, r7, r3, lsl #2
   13f40:	lsr	r2, ip, #5
   13f44:	ldr	r0, [r3, #4]
   13f48:	and	r8, r2, #31
   13f4c:	lsr	sl, ip, #10
   13f50:	bl	139a4 <fio_sem_down@@Base>
   13f54:	ldr	r3, [r6, #-8]
   13f58:	add	r3, r3, #31
   13f5c:	lsrs	r3, r3, #5
   13f60:	beq	13fe8 <sfree@@Base+0x13c>
   13f64:	ldr	r2, [r4, #16]
   13f68:	cmp	sl, r2
   13f6c:	bcs	13fe8 <sfree@@Base+0x13c>
   13f70:	sub	r0, sl, #-1073741823	; 0xc0000001
   13f74:	ldr	r2, [r4, #8]
   13f78:	mov	ip, sl
   13f7c:	add	r0, r2, r0, lsl #2
   13f80:	mov	lr, #1
   13f84:	b	13f98 <sfree@@Base+0xec>
   13f88:	ldr	r2, [r4, #16]
   13f8c:	mov	r8, #0
   13f90:	cmp	r2, ip
   13f94:	bls	13fdc <sfree@@Base+0x130>
   13f98:	add	r2, r3, r8
   13f9c:	cmp	r2, #32
   13fa0:	rsbhi	r1, r8, #32
   13fa4:	movls	r1, r3
   13fa8:	cmp	r1, #32
   13fac:	lslne	r2, lr, r1
   13fb0:	subne	r2, r2, #1
   13fb4:	mvneq	r2, #0
   13fb8:	lslne	r2, r2, r8
   13fbc:	ldr	r8, [r0, #4]
   13fc0:	bics	fp, r2, r8
   13fc4:	bne	1404c <sfree@@Base+0x1a0>
   13fc8:	bic	r2, r8, r2
   13fcc:	subs	r3, r3, r1
   13fd0:	str	r2, [r0, #4]!
   13fd4:	add	ip, ip, #1
   13fd8:	bne	13f88 <sfree@@Base+0xdc>
   13fdc:	ldr	r3, [r6, #-8]
   13fe0:	add	r3, r3, #31
   13fe4:	lsr	r3, r3, #5
   13fe8:	sub	r2, r9, r5
   13fec:	sub	r5, r9, r5
   13ff0:	add	r2, r7, r2, lsl #2
   13ff4:	add	r7, r7, r5, lsl #2
   13ff8:	ldr	r1, [r2, #24]
   13ffc:	ldr	r0, [r7, #4]
   14000:	cmp	sl, r1
   14004:	strcc	sl, [r2, #24]
   14008:	ldr	r2, [r7, #16]
   1400c:	add	r3, r2, r3
   14010:	str	r3, [r7, #16]
   14014:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14018:	b	13a34 <fio_sem_up@@Base>
   1401c:	add	r5, r5, #1
   14020:	cmp	r5, r2
   14024:	add	r4, r4, #28
   14028:	bne	13ed0 <sfree@@Base+0x24>
   1402c:	ldr	r0, [pc, #112]	; 140a4 <sfree@@Base+0x1f8>
   14030:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14034:	b	134c8 <log_err@@Base>
   14038:	ldr	r3, [pc, #104]	; 140a8 <sfree@@Base+0x1fc>
   1403c:	mov	r2, #296	; 0x128
   14040:	ldr	r1, [pc, #100]	; 140ac <sfree@@Base+0x200>
   14044:	ldr	r0, [pc, #100]	; 140b0 <sfree@@Base+0x204>
   14048:	bl	11bf4 <__assert_fail@plt>
   1404c:	ldr	r3, [pc, #96]	; 140b4 <sfree@@Base+0x208>
   14050:	mov	r2, #110	; 0x6e
   14054:	ldr	r1, [pc, #80]	; 140ac <sfree@@Base+0x200>
   14058:	ldr	r0, [pc, #88]	; 140b8 <sfree@@Base+0x20c>
   1405c:	bl	11bf4 <__assert_fail@plt>
   14060:	ldr	r0, [pc, #84]	; 140bc <sfree@@Base+0x210>
   14064:	bl	134c8 <log_err@@Base>
   14068:	ldr	r3, [pc, #80]	; 140c0 <sfree@@Base+0x214>
   1406c:	ldr	r2, [pc, #80]	; 140c4 <sfree@@Base+0x218>
   14070:	ldr	r1, [pc, #52]	; 140ac <sfree@@Base+0x200>
   14074:	ldr	r0, [pc, #76]	; 140c8 <sfree@@Base+0x21c>
   14078:	bl	11bf4 <__assert_fail@plt>
   1407c:	ldr	r0, [pc, #72]	; 140cc <sfree@@Base+0x220>
   14080:	bl	134c8 <log_err@@Base>
   14084:	ldr	r3, [pc, #52]	; 140c0 <sfree@@Base+0x214>
   14088:	ldr	r2, [pc, #64]	; 140d0 <sfree@@Base+0x224>
   1408c:	ldr	r1, [pc, #24]	; 140ac <sfree@@Base+0x200>
   14090:	ldr	r0, [pc, #48]	; 140c8 <sfree@@Base+0x21c>
   14094:	bl	11bf4 <__assert_fail@plt>
   14098:	andeq	r9, r2, r4, asr #3
   1409c:	cdple	14, 10, cr11, cr13, cr15, {7}
   140a0:	bpl	fe96ab3c <__bss_end__@@Base+0xfe941790>
   140a4:	muleq	r1, r8, r8
   140a8:	muleq	r1, r8, r7
   140ac:	ldrdeq	r7, [r1], -r0
   140b0:	andeq	r7, r1, r0, lsl #17
   140b4:	andeq	r7, r1, ip, lsl #15
   140b8:	andeq	r7, r1, r8, ror #16
   140bc:	andeq	r7, r1, r4, lsr #16
   140c0:	andeq	r7, r1, r8, ror r7
   140c4:	andeq	r0, r0, pc, lsl #2
   140c8:	andeq	r7, r1, r0, lsr #16
   140cc:	andeq	r7, r1, r0, ror #15
   140d0:	andeq	r0, r0, r9, lsl #2

000140d4 <smalloc@@Base>:
   140d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140d8:	add	r3, r0, #15
   140dc:	sub	sp, sp, #76	; 0x4c
   140e0:	bic	r3, r3, #3
   140e4:	str	r3, [sp, #64]	; 0x40
   140e8:	add	r3, r3, #31
   140ec:	ldr	r2, [pc, #940]	; 144a0 <smalloc@@Base+0x3cc>
   140f0:	lsr	r3, r3, #5
   140f4:	str	r3, [sp, #24]
   140f8:	ldr	r3, [pc, #928]	; 144a0 <smalloc@@Base+0x3cc>
   140fc:	ldr	sl, [r2], #4
   14100:	str	r0, [sp, #68]	; 0x44
   14104:	ldr	r9, [r3, #452]	; 0x1c4
   14108:	str	r2, [sp, #44]	; 0x2c
   1410c:	cmp	r9, sl
   14110:	bcc	14134 <smalloc@@Base+0x60>
   14114:	ldr	r3, [pc, #900]	; 144a0 <smalloc@@Base+0x3cc>
   14118:	ldr	sl, [r3, #452]	; 0x1c4
   1411c:	cmp	sl, #0
   14120:	beq	14324 <smalloc@@Base+0x250>
   14124:	mov	r9, #0
   14128:	cmp	r9, sl
   1412c:	str	r9, [r3, #452]	; 0x1c4
   14130:	bcs	14114 <smalloc@@Base+0x40>
   14134:	lsl	r3, r9, #3
   14138:	sub	r5, r3, r9
   1413c:	str	r3, [sp, #36]	; 0x24
   14140:	ldr	r3, [pc, #856]	; 144a0 <smalloc@@Base+0x3cc>
   14144:	lsl	r5, r5, #2
   14148:	add	r4, r3, r5
   1414c:	ldr	r3, [sp, #44]	; 0x2c
   14150:	ldr	r0, [r4, #4]
   14154:	add	r5, r3, r5
   14158:	bl	139a4 <fio_sem_down@@Base>
   1415c:	ldr	r3, [r4, #16]
   14160:	ldr	r2, [sp, #24]
   14164:	cmp	r2, r3
   14168:	bhi	14458 <smalloc@@Base+0x384>
   1416c:	ldr	r3, [r4, #20]
   14170:	ldr	ip, [r4, #24]
   14174:	str	r3, [sp, #32]
   14178:	cmp	ip, r3
   1417c:	bcs	142dc <smalloc@@Base+0x208>
   14180:	mov	r2, #0
   14184:	str	r9, [sp, #60]	; 0x3c
   14188:	ldr	r9, [sp, #24]
   1418c:	ldr	r3, [r4, #12]
   14190:	mov	r8, r2
   14194:	str	r3, [sp, #28]
   14198:	str	r4, [sp, #56]	; 0x38
   1419c:	ldr	r3, [sp, #28]
   141a0:	lsl	lr, ip, #2
   141a4:	ldr	r3, [r3, ip, lsl #2]
   141a8:	cmn	r3, #1
   141ac:	beq	142fc <smalloc@@Base+0x228>
   141b0:	mvns	r3, r3, asr r2
   141b4:	beq	14310 <smalloc@@Base+0x23c>
   141b8:	mov	r0, #0
   141bc:	uxth	r1, r3
   141c0:	cmp	r1, r0
   141c4:	beq	14484 <smalloc@@Base+0x3b0>
   141c8:	uxtb	r1, r3
   141cc:	mov	r6, r1
   141d0:	mov	r7, #0
   141d4:	mov	r1, r0
   141d8:	strd	r6, [sp, #48]	; 0x30
   141dc:	orrs	r4, r6, r7
   141e0:	beq	14314 <smalloc@@Base+0x240>
   141e4:	and	r4, r3, #15
   141e8:	str	r8, [sp, #12]
   141ec:	stm	sp, {r4, r8}
   141f0:	ldrd	r6, [sp]
   141f4:	str	r8, [sp, #20]
   141f8:	orrs	r4, r6, r7
   141fc:	lsreq	r3, r3, #4
   14200:	orreq	r3, r3, r0, lsl #28
   14204:	and	r4, r3, #3
   14208:	str	r4, [sp, #8]
   1420c:	ldrd	r6, [sp, #8]
   14210:	addeq	r1, r1, #4
   14214:	lsreq	r0, r0, #4
   14218:	orrs	r4, r6, r7
   1421c:	lsreq	r3, r3, #2
   14220:	orreq	r3, r3, r0, lsl #30
   14224:	and	r3, r3, #1
   14228:	str	r3, [sp, #16]
   1422c:	ldrd	r6, [sp, #16]
   14230:	addeq	r1, r1, #2
   14234:	orrs	r3, r6, r7
   14238:	addeq	r1, r1, #1
   1423c:	cmp	r9, #0
   14240:	add	r2, r2, r1
   14244:	beq	14468 <smalloc@@Base+0x394>
   14248:	ldr	r7, [r5, #16]
   1424c:	cmp	r7, ip
   14250:	bls	142c0 <smalloc@@Base+0x1ec>
   14254:	ldr	r4, [r5, #8]
   14258:	sub	r3, ip, #-1073741823	; 0xc0000001
   1425c:	sub	lr, lr, #4
   14260:	str	r3, [sp, #40]	; 0x28
   14264:	add	lr, r4, lr
   14268:	mov	r0, r9
   1426c:	mov	r3, r2
   14270:	mov	r6, ip
   14274:	b	1428c <smalloc@@Base+0x1b8>
   14278:	subs	r0, r0, fp
   1427c:	add	r6, r6, #1
   14280:	beq	1433c <smalloc@@Base+0x268>
   14284:	cmp	r7, r6
   14288:	beq	142c0 <smalloc@@Base+0x1ec>
   1428c:	add	r1, r0, r3
   14290:	cmp	r1, #32
   14294:	rsbhi	fp, r3, #32
   14298:	movls	fp, r0
   1429c:	cmp	fp, #32
   142a0:	movne	r1, #1
   142a4:	mvneq	r3, #0
   142a8:	lslne	r1, r1, fp
   142ac:	subne	r1, r1, #1
   142b0:	lslne	r3, r1, r3
   142b4:	ldr	r1, [lr, #4]!
   142b8:	ands	r3, r3, r1
   142bc:	beq	14278 <smalloc@@Base+0x1a4>
   142c0:	add	r2, r9, r2
   142c4:	cmp	r2, #31
   142c8:	bhi	14444 <smalloc@@Base+0x370>
   142cc:	ldr	r3, [sp, #32]
   142d0:	cmp	r3, ip
   142d4:	bhi	1419c <smalloc@@Base+0xc8>
   142d8:	ldr	r9, [sp, #60]	; 0x3c
   142dc:	ldr	r3, [sp, #36]	; 0x24
   142e0:	ldr	r2, [pc, #440]	; 144a0 <smalloc@@Base+0x3cc>
   142e4:	sub	r3, r3, r9
   142e8:	add	r3, r2, r3, lsl #2
   142ec:	ldr	r0, [r3, #4]
   142f0:	bl	13a34 <fio_sem_up@@Base>
   142f4:	add	r9, r9, #1
   142f8:	b	1410c <smalloc@@Base+0x38>
   142fc:	ldr	r3, [sp, #56]	; 0x38
   14300:	add	ip, ip, #1
   14304:	mov	r2, #0
   14308:	str	ip, [r3, #24]
   1430c:	b	142cc <smalloc@@Base+0x1f8>
   14310:	mov	r1, #48	; 0x30
   14314:	lsr	r3, r3, #8
   14318:	add	r1, r1, #8
   1431c:	mov	r0, #0
   14320:	b	141e4 <smalloc@@Base+0x110>
   14324:	ldr	r0, [pc, #376]	; 144a4 <smalloc@@Base+0x3d0>
   14328:	bl	134c8 <log_err@@Base>
   1432c:	mov	r4, sl
   14330:	mov	r0, r4
   14334:	add	sp, sp, #76	; 0x4c
   14338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1433c:	ldr	r3, [sp, #40]	; 0x28
   14340:	ldr	r9, [sp, #60]	; 0x3c
   14344:	ldr	r0, [sp, #24]
   14348:	add	r4, r4, r3, lsl #2
   1434c:	mov	lr, r2
   14350:	mov	r6, ip
   14354:	mov	r7, #1
   14358:	b	14368 <smalloc@@Base+0x294>
   1435c:	ldr	r3, [r5, #16]
   14360:	cmp	r3, r6
   14364:	bls	143ac <smalloc@@Base+0x2d8>
   14368:	add	r3, r0, lr
   1436c:	cmp	r3, #32
   14370:	rsbhi	r1, lr, #32
   14374:	movls	r1, r0
   14378:	cmp	r1, #32
   1437c:	lslne	r3, r7, r1
   14380:	subne	r3, r3, #1
   14384:	ldr	r8, [r4, #4]
   14388:	lslne	r3, r3, lr
   1438c:	mvneq	r3, #0
   14390:	ands	lr, r3, r8
   14394:	bne	14470 <smalloc@@Base+0x39c>
   14398:	orr	r3, r3, r8
   1439c:	subs	r0, r0, r1
   143a0:	str	r3, [r4, #4]!
   143a4:	add	r6, r6, #1
   143a8:	bne	1435c <smalloc@@Base+0x288>
   143ac:	ldr	r3, [sp, #36]	; 0x24
   143b0:	ldr	r1, [pc, #232]	; 144a0 <smalloc@@Base+0x3cc>
   143b4:	sub	r3, r3, r9
   143b8:	add	r2, r2, ip, lsl #5
   143bc:	add	r3, r1, r3, lsl #2
   143c0:	lsl	r2, r2, #5
   143c4:	ldr	r1, [r3, #20]
   143c8:	cmp	ip, r1
   143cc:	bcs	142dc <smalloc@@Base+0x208>
   143d0:	ldr	r1, [r3, #16]
   143d4:	ldr	r0, [sp, #24]
   143d8:	ldr	r4, [r3, #8]
   143dc:	sub	r1, r1, r0
   143e0:	add	r4, r4, r2
   143e4:	ldr	r0, [r3, #4]
   143e8:	str	r1, [r3, #16]
   143ec:	bl	13a34 <fio_sem_up@@Base>
   143f0:	cmp	r4, #0
   143f4:	beq	142f4 <smalloc@@Base+0x220>
   143f8:	ldr	r2, [sp, #64]	; 0x40
   143fc:	ldr	r0, [pc, #164]	; 144a8 <smalloc@@Base+0x3d4>
   14400:	sub	r3, r2, #1
   14404:	add	r3, r4, r3
   14408:	bic	r3, r3, #3
   1440c:	ldr	r1, [pc, #152]	; 144ac <smalloc@@Base+0x3d8>
   14410:	str	r2, [r4]
   14414:	str	r0, [r4, #4]
   14418:	add	r4, r4, #8
   1441c:	str	r1, [r3]
   14420:	ldr	r2, [sp, #68]	; 0x44
   14424:	mov	r0, r4
   14428:	mov	r1, #0
   1442c:	bl	11b70 <memset@plt>
   14430:	ldr	r3, [pc, #104]	; 144a0 <smalloc@@Base+0x3cc>
   14434:	mov	r0, r4
   14438:	str	r9, [r3, #452]	; 0x1c4
   1443c:	add	sp, sp, #76	; 0x4c
   14440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14444:	sub	r2, r2, #32
   14448:	add	ip, ip, #1
   1444c:	add	ip, ip, r2, lsr #5
   14450:	mov	r2, #0
   14454:	b	142cc <smalloc@@Base+0x1f8>
   14458:	ldr	r0, [r4, #4]
   1445c:	bl	13a34 <fio_sem_up@@Base>
   14460:	add	r9, r9, #1
   14464:	b	1410c <smalloc@@Base+0x38>
   14468:	ldr	r9, [sp, #60]	; 0x3c
   1446c:	b	143ac <smalloc@@Base+0x2d8>
   14470:	ldr	r3, [pc, #56]	; 144b0 <smalloc@@Base+0x3dc>
   14474:	mov	r2, #117	; 0x75
   14478:	ldr	r1, [pc, #52]	; 144b4 <smalloc@@Base+0x3e0>
   1447c:	ldr	r0, [pc, #52]	; 144b8 <smalloc@@Base+0x3e4>
   14480:	bl	11bf4 <__assert_fail@plt>
   14484:	lsr	r3, r3, #16
   14488:	and	r1, r3, #255	; 0xff
   1448c:	str	r1, [sp, #48]	; 0x30
   14490:	str	r8, [sp, #52]	; 0x34
   14494:	mov	r1, #16
   14498:	ldrd	r6, [sp, #48]	; 0x30
   1449c:	b	141dc <smalloc@@Base+0x108>
   144a0:	andeq	r9, r2, r4, asr #3
   144a4:	ldrdeq	r7, [r1], -r0
   144a8:	cdple	14, 10, cr11, cr13, cr15, {7}
   144ac:	bpl	fe96af48 <__bss_end__@@Base+0xfe941b9c>
   144b0:	andeq	r7, r1, r4, lsr #15
   144b4:	ldrdeq	r7, [r1], -r0
   144b8:	andeq	r7, r1, r0, asr #17

000144bc <scalloc@@Base>:
   144bc:	mul	r0, r1, r0
   144c0:	b	140d4 <smalloc@@Base>

000144c4 <smalloc_strdup@@Base>:
   144c4:	push	{r4, r5, r6, lr}
   144c8:	mov	r5, r0
   144cc:	bl	11b40 <strlen@plt>
   144d0:	add	r0, r0, #1
   144d4:	bl	140d4 <smalloc@@Base>
   144d8:	subs	r4, r0, #0
   144dc:	beq	144e8 <smalloc_strdup@@Base+0x24>
   144e0:	mov	r1, r5
   144e4:	bl	11ad4 <strcpy@plt>
   144e8:	mov	r0, r4
   144ec:	pop	{r4, r5, r6, pc}

000144f0 <fio_gettime@@Base>:
   144f0:	ldr	r3, [pc, #204]	; 145c4 <fio_gettime@@Base+0xd4>
   144f4:	push	{r4, r5, lr}
   144f8:	sub	sp, sp, #20
   144fc:	ldr	r5, [pc, #196]	; 145c8 <fio_gettime@@Base+0xd8>
   14500:	ldr	r1, [r3]
   14504:	mov	r4, r0
   14508:	ldr	r2, [r5]
   1450c:	cmp	r1, #0
   14510:	str	r2, [sp, #12]
   14514:	beq	14544 <fio_gettime@@Base+0x54>
   14518:	ldr	r3, [r3]
   1451c:	ldr	r2, [r3]
   14520:	str	r2, [r0]
   14524:	ldr	r3, [r3, #4]
   14528:	str	r3, [r0, #4]
   1452c:	ldr	r2, [sp, #12]
   14530:	ldr	r3, [r5]
   14534:	cmp	r2, r3
   14538:	bne	145c0 <fio_gettime@@Base+0xd0>
   1453c:	add	sp, sp, #20
   14540:	pop	{r4, r5, pc}
   14544:	ldr	r3, [pc, #128]	; 145cc <fio_gettime@@Base+0xdc>
   14548:	ldr	r3, [r3]
   1454c:	cmp	r3, #1
   14550:	beq	1459c <fio_gettime@@Base+0xac>
   14554:	cmp	r3, #2
   14558:	beq	1456c <fio_gettime@@Base+0x7c>
   1455c:	mov	r1, r3
   14560:	ldr	r0, [pc, #104]	; 145d0 <fio_gettime@@Base+0xe0>
   14564:	bl	134c8 <log_err@@Base>
   14568:	b	1452c <fio_gettime@@Base+0x3c>
   1456c:	mov	r1, r0
   14570:	mov	r0, #4
   14574:	bl	11bc4 <clock_gettime@plt>
   14578:	cmp	r0, #0
   1457c:	bge	1452c <fio_gettime@@Base+0x3c>
   14580:	ldr	r0, [pc, #76]	; 145d4 <fio_gettime@@Base+0xe4>
   14584:	bl	134c8 <log_err@@Base>
   14588:	ldr	r3, [pc, #72]	; 145d8 <fio_gettime@@Base+0xe8>
   1458c:	mov	r2, #160	; 0xa0
   14590:	ldr	r1, [pc, #68]	; 145dc <fio_gettime@@Base+0xec>
   14594:	ldr	r0, [pc, #68]	; 145e0 <fio_gettime@@Base+0xf0>
   14598:	bl	11bf4 <__assert_fail@plt>
   1459c:	add	r0, sp, #4
   145a0:	bl	11ae0 <gettimeofday@plt>
   145a4:	ldmib	sp, {r1, r3}
   145a8:	rsb	r2, r3, r3, lsl #5
   145ac:	str	r1, [r4]
   145b0:	add	r3, r3, r2, lsl #2
   145b4:	lsl	r3, r3, #3
   145b8:	str	r3, [r4, #4]
   145bc:	b	1452c <fio_gettime@@Base+0x3c>
   145c0:	bl	11a5c <__stack_chk_fail@plt>
   145c4:	muleq	r2, r8, r3
   145c8:	andeq	r8, r2, r0, lsl lr
   145cc:	andeq	r9, r2, r8, lsl r0
   145d0:	andeq	r7, r1, ip, asr r9
   145d4:	andeq	r7, r1, r4, lsr r9
   145d8:	andeq	r7, r1, r4, lsr #18
   145dc:	andeq	r7, r1, r0, asr r9
   145e0:	andeq	r7, r1, r0, lsr #16

000145e4 <fio_local_clock_init@@Base>:
   145e4:	bx	lr

000145e8 <fio_clock_init@@Base>:
   145e8:	push	{r4, lr}
   145ec:	ldr	r4, [pc, #84]	; 14648 <fio_clock_init@@Base+0x60>
   145f0:	ldr	r3, [r4]
   145f4:	ldr	r2, [r4, #4]
   145f8:	cmp	r3, r2
   145fc:	popeq	{r4, pc}
   14600:	ldr	r2, [pc, #68]	; 1464c <fio_clock_init@@Base+0x64>
   14604:	mov	r1, #0
   14608:	cmp	r3, #3
   1460c:	str	r3, [r4, #4]
   14610:	strb	r1, [r2]
   14614:	beq	1463c <fio_clock_init@@Base+0x54>
   14618:	ldr	r3, [pc, #48]	; 14650 <fio_clock_init@@Base+0x68>
   1461c:	ldr	r3, [r3]
   14620:	tst	r3, #4096	; 0x1000
   14624:	popeq	{r4, pc}
   14628:	ldr	r2, [r4]
   1462c:	ldr	r1, [pc, #32]	; 14654 <fio_clock_init@@Base+0x6c>
   14630:	mov	r0, #12
   14634:	pop	{r4, lr}
   14638:	b	161d4 <__dprint@@Base>
   1463c:	ldr	r0, [pc, #20]	; 14658 <fio_clock_init@@Base+0x70>
   14640:	bl	13558 <log_info@@Base>
   14644:	b	14618 <fio_clock_init@@Base+0x30>
   14648:	andeq	r9, r2, r8, lsl r0
   1464c:	andeq	r9, r2, ip, lsl #7
   14650:	muleq	r2, r4, r3
   14654:	andeq	r7, r1, r8, lsr #19
   14658:	andeq	r7, r1, ip, ror r9

0001465c <ntime_since@@Base>:
   1465c:	push	{r4, r5, r6, r7}
   14660:	ldm	r1, {r2, r4}
   14664:	ldr	r3, [r0, #4]
   14668:	sub	r4, r4, r3
   1466c:	ldr	r3, [r0]
   14670:	asr	r5, r4, #31
   14674:	sub	r2, r2, r3
   14678:	lsr	r1, r5, #31
   1467c:	cmp	r2, #0
   14680:	movle	r3, #0
   14684:	andgt	r3, r1, #1
   14688:	cmp	r3, #0
   1468c:	asr	r3, r2, #31
   14690:	beq	146dc <ntime_since@@Base+0x80>
   14694:	ldr	r1, [pc, #92]	; 146f8 <ntime_since@@Base+0x9c>
   14698:	subs	r2, r2, #1
   1469c:	sbc	r3, r3, #0
   146a0:	adds	r4, r4, r1
   146a4:	mov	r1, #0
   146a8:	adc	r5, r5, r1
   146ac:	lsr	r1, r5, #31
   146b0:	orrs	r0, r2, r3
   146b4:	movne	r1, #0
   146b8:	cmp	r1, #0
   146bc:	bne	146e8 <ntime_since@@Base+0x8c>
   146c0:	ldr	r1, [pc, #48]	; 146f8 <ntime_since@@Base+0x9c>
   146c4:	umull	r6, r7, r2, r1
   146c8:	mla	r7, r1, r3, r7
   146cc:	adds	r0, r6, r4
   146d0:	adc	r1, r7, r5
   146d4:	pop	{r4, r5, r6, r7}
   146d8:	bx	lr
   146dc:	cmp	r2, #0
   146e0:	sbcs	r0, r3, #0
   146e4:	bge	146b0 <ntime_since@@Base+0x54>
   146e8:	mov	r0, #0
   146ec:	mov	r1, r0
   146f0:	pop	{r4, r5, r6, r7}
   146f4:	bx	lr
   146f8:	blcc	fe6c6f00 <__bss_end__@@Base+0xfe69db54>

000146fc <ntime_since_now@@Base>:
   146fc:	ldr	r3, [pc, #320]	; 14844 <ntime_since_now@@Base+0x148>
   14700:	push	{r4, r5, r6, r7, lr}
   14704:	sub	sp, sp, #20
   14708:	ldr	r4, [pc, #312]	; 14848 <ntime_since_now@@Base+0x14c>
   1470c:	ldr	r1, [r3]
   14710:	mov	r5, r0
   14714:	ldr	r2, [r4]
   14718:	cmp	r1, #0
   1471c:	str	r2, [sp, #12]
   14720:	beq	14784 <ntime_since_now@@Base+0x88>
   14724:	ldr	r3, [r3]
   14728:	ldm	r3, {r0, r2}
   1472c:	ldm	r5, {r1, r3}
   14730:	sub	r2, r2, r3
   14734:	sub	r0, r0, r1
   14738:	asr	r3, r2, #31
   1473c:	lsr	ip, r3, #31
   14740:	cmp	r0, #0
   14744:	movle	r1, #0
   14748:	andgt	r1, ip, #1
   1474c:	cmp	r1, #0
   14750:	asr	r1, r0, #31
   14754:	bne	147b0 <ntime_since_now@@Base+0xb4>
   14758:	cmp	r0, #0
   1475c:	sbcs	lr, r1, #0
   14760:	bge	147cc <ntime_since_now@@Base+0xd0>
   14764:	mov	r0, #0
   14768:	mov	r1, r0
   1476c:	ldr	r2, [sp, #12]
   14770:	ldr	r3, [r4]
   14774:	cmp	r2, r3
   14778:	bne	14840 <ntime_since_now@@Base+0x144>
   1477c:	add	sp, sp, #20
   14780:	pop	{r4, r5, r6, r7, pc}
   14784:	ldr	r3, [pc, #192]	; 1484c <ntime_since_now@@Base+0x150>
   14788:	ldr	r3, [r3]
   1478c:	cmp	r3, #1
   14790:	beq	14824 <ntime_since_now@@Base+0x128>
   14794:	cmp	r3, #2
   14798:	beq	147f4 <ntime_since_now@@Base+0xf8>
   1479c:	mov	r1, r3
   147a0:	ldr	r0, [pc, #168]	; 14850 <ntime_since_now@@Base+0x154>
   147a4:	bl	134c8 <log_err@@Base>
   147a8:	ldmib	sp, {r0, r2}
   147ac:	b	1472c <ntime_since_now@@Base+0x30>
   147b0:	ldr	ip, [pc, #156]	; 14854 <ntime_since_now@@Base+0x158>
   147b4:	subs	r0, r0, #1
   147b8:	sbc	r1, r1, #0
   147bc:	adds	r2, r2, ip
   147c0:	mov	ip, #0
   147c4:	adc	r3, r3, ip
   147c8:	lsr	ip, r3, #31
   147cc:	orrs	lr, r0, r1
   147d0:	movne	ip, #0
   147d4:	cmp	ip, #0
   147d8:	bne	14764 <ntime_since_now@@Base+0x68>
   147dc:	ldr	ip, [pc, #112]	; 14854 <ntime_since_now@@Base+0x158>
   147e0:	umull	r6, r7, r0, ip
   147e4:	mla	r7, ip, r1, r7
   147e8:	adds	r0, r6, r2
   147ec:	adc	r1, r7, r3
   147f0:	b	1476c <ntime_since_now@@Base+0x70>
   147f4:	add	r1, sp, #4
   147f8:	mov	r0, #4
   147fc:	bl	11bc4 <clock_gettime@plt>
   14800:	cmp	r0, #0
   14804:	bge	147a8 <ntime_since_now@@Base+0xac>
   14808:	ldr	r0, [pc, #72]	; 14858 <ntime_since_now@@Base+0x15c>
   1480c:	bl	134c8 <log_err@@Base>
   14810:	ldr	r3, [pc, #68]	; 1485c <ntime_since_now@@Base+0x160>
   14814:	mov	r2, #160	; 0xa0
   14818:	ldr	r1, [pc, #64]	; 14860 <ntime_since_now@@Base+0x164>
   1481c:	ldr	r0, [pc, #64]	; 14864 <ntime_since_now@@Base+0x168>
   14820:	bl	11bf4 <__assert_fail@plt>
   14824:	add	r0, sp, #4
   14828:	bl	11ae0 <gettimeofday@plt>
   1482c:	ldmib	sp, {r0, r2}
   14830:	rsb	r3, r2, r2, lsl #5
   14834:	add	r2, r2, r3, lsl #2
   14838:	lsl	r2, r2, #3
   1483c:	b	1472c <ntime_since_now@@Base+0x30>
   14840:	bl	11a5c <__stack_chk_fail@plt>
   14844:	muleq	r2, r8, r3
   14848:	andeq	r8, r2, r0, lsl lr
   1484c:	andeq	r9, r2, r8, lsl r0
   14850:	andeq	r7, r1, ip, asr r9
   14854:	blcc	fe6c705c <__bss_end__@@Base+0xfe69dcb0>
   14858:	andeq	r7, r1, r4, lsr r9
   1485c:	andeq	r7, r1, r4, lsr #18
   14860:	andeq	r7, r1, r0, asr r9
   14864:	andeq	r7, r1, r0, lsr #16

00014868 <utime_since@@Base>:
   14868:	ldr	r2, [r0, #4]
   1486c:	ldr	r3, [r1, #4]
   14870:	push	{r4, r5, lr}
   14874:	sub	r3, r3, r2
   14878:	ldr	r4, [pc, #200]	; 14948 <utime_since@@Base+0xe0>
   1487c:	ldr	r2, [r1]
   14880:	ldr	r0, [r0]
   14884:	smull	ip, r1, r4, r3
   14888:	asr	r4, r3, #31
   1488c:	rsb	r4, r4, r1, asr #6
   14890:	sub	r2, r2, r0
   14894:	asr	r5, r4, #31
   14898:	lsr	r1, r5, #31
   1489c:	cmp	r2, #0
   148a0:	movle	r3, #0
   148a4:	andgt	r3, r1, #1
   148a8:	cmp	r3, #0
   148ac:	asr	r3, r2, #31
   148b0:	beq	14930 <utime_since@@Base+0xc8>
   148b4:	ldr	r1, [pc, #144]	; 1494c <utime_since@@Base+0xe4>
   148b8:	subs	r2, r2, #1
   148bc:	sbc	r3, r3, #0
   148c0:	adds	r4, r4, r1
   148c4:	mov	r1, #0
   148c8:	adc	r5, r5, r1
   148cc:	lsr	r1, r5, #31
   148d0:	orrs	r0, r2, r3
   148d4:	movne	r1, #0
   148d8:	cmp	r1, #0
   148dc:	bne	1493c <utime_since@@Base+0xd4>
   148e0:	lsl	r1, r3, #5
   148e4:	lsl	r0, r2, #5
   148e8:	subs	r0, r0, r2
   148ec:	orr	r1, r1, r2, lsr #27
   148f0:	sbc	r1, r1, r3
   148f4:	lsl	ip, r0, #9
   148f8:	lsl	r1, r1, #9
   148fc:	adds	ip, ip, r2
   14900:	orr	r1, r1, r0, lsr #23
   14904:	adc	r1, r1, r3
   14908:	lsl	r0, ip, #6
   1490c:	lsl	lr, r1, #6
   14910:	subs	r0, r0, ip
   14914:	orr	lr, lr, ip, lsr #26
   14918:	sbc	r1, lr, r1
   1491c:	adds	r0, r0, r2
   14920:	adc	r1, r1, r3
   14924:	adds	r0, r0, r4
   14928:	adc	r1, r1, r5
   1492c:	pop	{r4, r5, pc}
   14930:	cmp	r2, #0
   14934:	sbcs	r0, r3, #0
   14938:	bge	148d0 <utime_since@@Base+0x68>
   1493c:	mov	r0, #0
   14940:	mov	r1, r0
   14944:	pop	{r4, r5, pc}
   14948:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   1494c:	andeq	r4, pc, r0, asr #4

00014950 <utime_since_now@@Base>:
   14950:	ldr	r3, [pc, #408]	; 14af0 <utime_since_now@@Base+0x1a0>
   14954:	push	{r4, r5, r6, lr}
   14958:	sub	sp, sp, #16
   1495c:	ldr	r6, [pc, #400]	; 14af4 <utime_since_now@@Base+0x1a4>
   14960:	ldr	r1, [r3]
   14964:	mov	r5, r0
   14968:	ldr	r2, [r6]
   1496c:	cmp	r1, #0
   14970:	str	r2, [sp, #12]
   14974:	beq	149f0 <utime_since_now@@Base+0xa0>
   14978:	ldr	r3, [r3]
   1497c:	ldr	r4, [r3]
   14980:	ldr	r3, [r3, #4]
   14984:	ldr	r1, [r5, #4]
   14988:	ldr	r2, [pc, #360]	; 14af8 <utime_since_now@@Base+0x1a8>
   1498c:	sub	r3, r3, r1
   14990:	ldr	r0, [r5]
   14994:	smull	r2, r1, r2, r3
   14998:	asr	r2, r3, #31
   1499c:	rsb	r2, r2, r1, asr #6
   149a0:	sub	r4, r4, r0
   149a4:	asr	r3, r2, #31
   149a8:	asr	r5, r4, #31
   149ac:	lsr	r1, r3, #31
   149b0:	cmp	r4, #0
   149b4:	movle	r0, #0
   149b8:	andgt	r0, r1, #1
   149bc:	cmp	r0, #0
   149c0:	bne	14a20 <utime_since_now@@Base+0xd0>
   149c4:	cmp	r4, #0
   149c8:	sbcs	r0, r5, #0
   149cc:	bge	14a3c <utime_since_now@@Base+0xec>
   149d0:	mov	r0, #0
   149d4:	mov	r1, r0
   149d8:	ldr	r2, [sp, #12]
   149dc:	ldr	r3, [r6]
   149e0:	cmp	r2, r3
   149e4:	bne	14aec <utime_since_now@@Base+0x19c>
   149e8:	add	sp, sp, #16
   149ec:	pop	{r4, r5, r6, pc}
   149f0:	ldr	r3, [pc, #260]	; 14afc <utime_since_now@@Base+0x1ac>
   149f4:	ldr	r3, [r3]
   149f8:	cmp	r3, #1
   149fc:	beq	14acc <utime_since_now@@Base+0x17c>
   14a00:	cmp	r3, #2
   14a04:	beq	14a9c <utime_since_now@@Base+0x14c>
   14a08:	mov	r1, r3
   14a0c:	ldr	r0, [pc, #236]	; 14b00 <utime_since_now@@Base+0x1b0>
   14a10:	bl	134c8 <log_err@@Base>
   14a14:	ldr	r4, [sp, #4]
   14a18:	ldr	r3, [sp, #8]
   14a1c:	b	14984 <utime_since_now@@Base+0x34>
   14a20:	ldr	r1, [pc, #220]	; 14b04 <utime_since_now@@Base+0x1b4>
   14a24:	subs	r4, r4, #1
   14a28:	sbc	r5, r5, #0
   14a2c:	adds	r2, r2, r1
   14a30:	mov	r1, #0
   14a34:	adc	r3, r3, r1
   14a38:	lsr	r1, r3, #31
   14a3c:	orrs	r0, r4, r5
   14a40:	movne	r1, #0
   14a44:	cmp	r1, #0
   14a48:	bne	149d0 <utime_since_now@@Base+0x80>
   14a4c:	lsl	r1, r5, #5
   14a50:	lsl	r0, r4, #5
   14a54:	subs	r0, r0, r4
   14a58:	orr	r1, r1, r4, lsr #27
   14a5c:	sbc	r1, r1, r5
   14a60:	lsl	ip, r0, #9
   14a64:	lsl	r1, r1, #9
   14a68:	adds	ip, ip, r4
   14a6c:	orr	r1, r1, r0, lsr #23
   14a70:	adc	r1, r1, r5
   14a74:	lsl	r0, ip, #6
   14a78:	lsl	lr, r1, #6
   14a7c:	subs	r0, r0, ip
   14a80:	orr	lr, lr, ip, lsr #26
   14a84:	sbc	r1, lr, r1
   14a88:	adds	r0, r0, r4
   14a8c:	adc	r1, r1, r5
   14a90:	adds	r0, r0, r2
   14a94:	adc	r1, r1, r3
   14a98:	b	149d8 <utime_since_now@@Base+0x88>
   14a9c:	add	r1, sp, #4
   14aa0:	mov	r0, #4
   14aa4:	bl	11bc4 <clock_gettime@plt>
   14aa8:	cmp	r0, #0
   14aac:	bge	14a14 <utime_since_now@@Base+0xc4>
   14ab0:	ldr	r0, [pc, #80]	; 14b08 <utime_since_now@@Base+0x1b8>
   14ab4:	bl	134c8 <log_err@@Base>
   14ab8:	ldr	r3, [pc, #76]	; 14b0c <utime_since_now@@Base+0x1bc>
   14abc:	mov	r2, #160	; 0xa0
   14ac0:	ldr	r1, [pc, #72]	; 14b10 <utime_since_now@@Base+0x1c0>
   14ac4:	ldr	r0, [pc, #72]	; 14b14 <utime_since_now@@Base+0x1c4>
   14ac8:	bl	11bf4 <__assert_fail@plt>
   14acc:	add	r0, sp, #4
   14ad0:	bl	11ae0 <gettimeofday@plt>
   14ad4:	ldr	r3, [sp, #8]
   14ad8:	ldr	r4, [sp, #4]
   14adc:	rsb	r2, r3, r3, lsl #5
   14ae0:	add	r3, r3, r2, lsl #2
   14ae4:	lsl	r3, r3, #3
   14ae8:	b	14984 <utime_since_now@@Base+0x34>
   14aec:	bl	11a5c <__stack_chk_fail@plt>
   14af0:	muleq	r2, r8, r3
   14af4:	andeq	r8, r2, r0, lsl lr
   14af8:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   14afc:	andeq	r9, r2, r8, lsl r0
   14b00:	andeq	r7, r1, ip, asr r9
   14b04:	andeq	r4, pc, r0, asr #4
   14b08:	andeq	r7, r1, r4, lsr r9
   14b0c:	andeq	r7, r1, r4, lsr #18
   14b10:	andeq	r7, r1, r0, asr r9
   14b14:	andeq	r7, r1, r0, lsr #16

00014b18 <mtime_since_tv@@Base>:
   14b18:	push	{r4, r5, r6, r7, r8, lr}
   14b1c:	ldm	r1, {r2, r6}
   14b20:	ldr	r3, [r0, #4]
   14b24:	sub	r6, r6, r3
   14b28:	ldr	r3, [r0]
   14b2c:	asr	r7, r6, #31
   14b30:	sub	r2, r2, r3
   14b34:	lsr	r1, r7, #31
   14b38:	cmp	r2, #0
   14b3c:	movle	r3, #0
   14b40:	andgt	r3, r1, #1
   14b44:	cmp	r3, #0
   14b48:	asr	r3, r2, #31
   14b4c:	beq	14bd0 <mtime_since_tv@@Base+0xb8>
   14b50:	ldr	r1, [pc, #144]	; 14be8 <mtime_since_tv@@Base+0xd0>
   14b54:	subs	r2, r2, #1
   14b58:	sbc	r3, r3, #0
   14b5c:	adds	r6, r6, r1
   14b60:	mov	r1, #0
   14b64:	adc	r7, r7, r1
   14b68:	lsr	r1, r7, #31
   14b6c:	orrs	r0, r2, r3
   14b70:	movne	r1, #0
   14b74:	cmp	r1, #0
   14b78:	bne	14bdc <mtime_since_tv@@Base+0xc4>
   14b7c:	lsl	r1, r3, #5
   14b80:	lsl	r5, r2, #5
   14b84:	subs	r5, r5, r2
   14b88:	orr	r1, r1, r2, lsr #27
   14b8c:	sbc	r1, r1, r3
   14b90:	lsl	r0, r5, #2
   14b94:	lsl	r1, r1, #2
   14b98:	orr	r1, r1, r5, lsr #30
   14b9c:	adds	r5, r0, r2
   14ba0:	adc	r4, r1, r3
   14ba4:	mov	r0, r6
   14ba8:	mov	r1, r7
   14bac:	mov	r2, #1000	; 0x3e8
   14bb0:	mov	r3, #0
   14bb4:	bl	17098 <fnv@@Base+0x6f8>
   14bb8:	lsl	r4, r4, #3
   14bbc:	orr	r4, r4, r5, lsr #29
   14bc0:	lsl	r5, r5, #3
   14bc4:	adds	r0, r5, r0
   14bc8:	adc	r1, r4, r1
   14bcc:	pop	{r4, r5, r6, r7, r8, pc}
   14bd0:	cmp	r2, #0
   14bd4:	sbcs	r0, r3, #0
   14bd8:	bge	14b6c <mtime_since_tv@@Base+0x54>
   14bdc:	mov	r0, #0
   14be0:	mov	r1, r0
   14be4:	pop	{r4, r5, r6, r7, r8, pc}
   14be8:	andeq	r4, pc, r0, asr #4

00014bec <mtime_since_now@@Base>:
   14bec:	ldr	r3, [pc, #392]	; 14d7c <mtime_since_now@@Base+0x190>
   14bf0:	push	{r4, r5, r6, lr}
   14bf4:	sub	sp, sp, #16
   14bf8:	ldr	r5, [pc, #384]	; 14d80 <mtime_since_now@@Base+0x194>
   14bfc:	ldr	r1, [r3]
   14c00:	mov	r4, r0
   14c04:	ldr	r2, [r5]
   14c08:	cmp	r1, #0
   14c0c:	str	r2, [sp, #12]
   14c10:	beq	14c88 <mtime_since_now@@Base+0x9c>
   14c14:	ldr	r3, [r3]
   14c18:	ldrd	r2, [r3]
   14c1c:	ldr	r1, [r4, #4]
   14c20:	ldr	r0, [pc, #348]	; 14d84 <mtime_since_now@@Base+0x198>
   14c24:	sub	r3, r3, r1
   14c28:	ldr	ip, [r4]
   14c2c:	smull	r0, r1, r0, r3
   14c30:	asr	r0, r3, #31
   14c34:	rsb	r0, r0, r1, asr #6
   14c38:	sub	r2, r2, ip
   14c3c:	asr	r1, r0, #31
   14c40:	lsr	ip, r1, #31
   14c44:	cmp	r2, #0
   14c48:	movle	r3, #0
   14c4c:	andgt	r3, ip, #1
   14c50:	cmp	r3, #0
   14c54:	asr	r3, r2, #31
   14c58:	bne	14cb4 <mtime_since_now@@Base+0xc8>
   14c5c:	cmp	r2, #0
   14c60:	sbcs	lr, r3, #0
   14c64:	bge	14cd0 <mtime_since_now@@Base+0xe4>
   14c68:	mov	r0, #0
   14c6c:	mov	r1, r0
   14c70:	ldr	r2, [sp, #12]
   14c74:	ldr	r3, [r5]
   14c78:	cmp	r2, r3
   14c7c:	bne	14d78 <mtime_since_now@@Base+0x18c>
   14c80:	add	sp, sp, #16
   14c84:	pop	{r4, r5, r6, pc}
   14c88:	ldr	r3, [pc, #248]	; 14d88 <mtime_since_now@@Base+0x19c>
   14c8c:	ldr	r3, [r3]
   14c90:	cmp	r3, #1
   14c94:	beq	14d5c <mtime_since_now@@Base+0x170>
   14c98:	cmp	r3, #2
   14c9c:	beq	14d2c <mtime_since_now@@Base+0x140>
   14ca0:	mov	r1, r3
   14ca4:	ldr	r0, [pc, #224]	; 14d8c <mtime_since_now@@Base+0x1a0>
   14ca8:	bl	134c8 <log_err@@Base>
   14cac:	ldrd	r2, [sp, #4]
   14cb0:	b	14c1c <mtime_since_now@@Base+0x30>
   14cb4:	ldr	ip, [pc, #212]	; 14d90 <mtime_since_now@@Base+0x1a4>
   14cb8:	subs	r2, r2, #1
   14cbc:	sbc	r3, r3, #0
   14cc0:	adds	r0, r0, ip
   14cc4:	mov	ip, #0
   14cc8:	adc	r1, r1, ip
   14ccc:	lsr	ip, r1, #31
   14cd0:	orrs	lr, r2, r3
   14cd4:	movne	ip, #0
   14cd8:	cmp	ip, #0
   14cdc:	bne	14c68 <mtime_since_now@@Base+0x7c>
   14ce0:	lsl	r4, r3, #5
   14ce4:	lsl	r6, r2, #5
   14ce8:	subs	r6, r6, r2
   14cec:	orr	r4, r4, r2, lsr #27
   14cf0:	sbc	r4, r4, r3
   14cf4:	lsl	ip, r6, #2
   14cf8:	lsl	r4, r4, #2
   14cfc:	orr	r4, r4, r6, lsr #30
   14d00:	adds	r6, ip, r2
   14d04:	adc	r4, r4, r3
   14d08:	mov	r2, #1000	; 0x3e8
   14d0c:	mov	r3, #0
   14d10:	bl	17098 <fnv@@Base+0x6f8>
   14d14:	lsl	r4, r4, #3
   14d18:	orr	r4, r4, r6, lsr #29
   14d1c:	lsl	r6, r6, #3
   14d20:	adds	r0, r6, r0
   14d24:	adc	r1, r4, r1
   14d28:	b	14c70 <mtime_since_now@@Base+0x84>
   14d2c:	add	r1, sp, #4
   14d30:	mov	r0, #4
   14d34:	bl	11bc4 <clock_gettime@plt>
   14d38:	cmp	r0, #0
   14d3c:	bge	14cac <mtime_since_now@@Base+0xc0>
   14d40:	ldr	r0, [pc, #76]	; 14d94 <mtime_since_now@@Base+0x1a8>
   14d44:	bl	134c8 <log_err@@Base>
   14d48:	ldr	r3, [pc, #72]	; 14d98 <mtime_since_now@@Base+0x1ac>
   14d4c:	mov	r2, #160	; 0xa0
   14d50:	ldr	r1, [pc, #68]	; 14d9c <mtime_since_now@@Base+0x1b0>
   14d54:	ldr	r0, [pc, #68]	; 14da0 <mtime_since_now@@Base+0x1b4>
   14d58:	bl	11bf4 <__assert_fail@plt>
   14d5c:	add	r0, sp, #4
   14d60:	bl	11ae0 <gettimeofday@plt>
   14d64:	ldrd	r2, [sp, #4]
   14d68:	rsb	r1, r3, r3, lsl #5
   14d6c:	add	r3, r3, r1, lsl #2
   14d70:	lsl	r3, r3, #3
   14d74:	b	14c1c <mtime_since_now@@Base+0x30>
   14d78:	bl	11a5c <__stack_chk_fail@plt>
   14d7c:	muleq	r2, r8, r3
   14d80:	andeq	r8, r2, r0, lsl lr
   14d84:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   14d88:	andeq	r9, r2, r8, lsl r0
   14d8c:	andeq	r7, r1, ip, asr r9
   14d90:	andeq	r4, pc, r0, asr #4
   14d94:	andeq	r7, r1, r4, lsr r9
   14d98:	andeq	r7, r1, r4, lsr #18
   14d9c:	andeq	r7, r1, r0, asr r9
   14da0:	andeq	r7, r1, r0, lsr #16

00014da4 <mtime_since@@Base>:
   14da4:	ldr	r2, [r0, #4]
   14da8:	ldr	r3, [r1, #4]
   14dac:	ldr	ip, [pc, #204]	; 14e80 <mtime_since@@Base+0xdc>
   14db0:	sub	r3, r3, r2
   14db4:	ldr	r2, [r1]
   14db8:	smull	r1, ip, ip, r3
   14dbc:	push	{r4, r5, r6, lr}
   14dc0:	ldr	lr, [r0]
   14dc4:	asr	r0, r3, #31
   14dc8:	rsb	r0, r0, ip, asr #6
   14dcc:	sub	r2, r2, lr
   14dd0:	asr	r1, r0, #31
   14dd4:	lsr	ip, r1, #31
   14dd8:	cmp	r2, #0
   14ddc:	movle	r3, #0
   14de0:	andgt	r3, ip, #1
   14de4:	cmp	r3, #0
   14de8:	asr	r3, r2, #31
   14dec:	beq	14e68 <mtime_since@@Base+0xc4>
   14df0:	ldr	ip, [pc, #140]	; 14e84 <mtime_since@@Base+0xe0>
   14df4:	subs	r2, r2, #1
   14df8:	sbc	r3, r3, #0
   14dfc:	adds	r0, r0, ip
   14e00:	mov	ip, #0
   14e04:	adc	r1, r1, ip
   14e08:	lsr	ip, r1, #31
   14e0c:	orrs	lr, r2, r3
   14e10:	movne	ip, #0
   14e14:	cmp	ip, #0
   14e18:	bne	14e74 <mtime_since@@Base+0xd0>
   14e1c:	lsl	r4, r3, #5
   14e20:	lsl	r5, r2, #5
   14e24:	subs	r5, r5, r2
   14e28:	orr	r4, r4, r2, lsr #27
   14e2c:	sbc	r4, r4, r3
   14e30:	lsl	ip, r5, #2
   14e34:	lsl	r4, r4, #2
   14e38:	orr	r4, r4, r5, lsr #30
   14e3c:	adds	r5, ip, r2
   14e40:	adc	r4, r4, r3
   14e44:	mov	r2, #1000	; 0x3e8
   14e48:	mov	r3, #0
   14e4c:	bl	17098 <fnv@@Base+0x6f8>
   14e50:	lsl	r4, r4, #3
   14e54:	orr	r4, r4, r5, lsr #29
   14e58:	lsl	r5, r5, #3
   14e5c:	adds	r0, r5, r0
   14e60:	adc	r1, r4, r1
   14e64:	pop	{r4, r5, r6, pc}
   14e68:	cmp	r2, #0
   14e6c:	sbcs	lr, r3, #0
   14e70:	bge	14e0c <mtime_since@@Base+0x68>
   14e74:	mov	r0, #0
   14e78:	mov	r1, r0
   14e7c:	pop	{r4, r5, r6, pc}
   14e80:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   14e84:	andeq	r4, pc, r0, asr #4

00014e88 <time_since_now@@Base>:
   14e88:	ldr	r3, [pc, #404]	; 15024 <time_since_now@@Base+0x19c>
   14e8c:	push	{r4, r5, r6, lr}
   14e90:	sub	sp, sp, #16
   14e94:	ldr	r4, [pc, #396]	; 15028 <time_since_now@@Base+0x1a0>
   14e98:	ldr	r1, [r3]
   14e9c:	mov	r5, r0
   14ea0:	ldr	r2, [r4]
   14ea4:	cmp	r1, #0
   14ea8:	str	r2, [sp, #12]
   14eac:	beq	14f24 <time_since_now@@Base+0x9c>
   14eb0:	ldr	r3, [r3]
   14eb4:	ldrd	r2, [r3]
   14eb8:	ldr	r1, [r5, #4]
   14ebc:	ldr	r0, [pc, #360]	; 1502c <time_since_now@@Base+0x1a4>
   14ec0:	sub	r3, r3, r1
   14ec4:	ldr	ip, [r5]
   14ec8:	smull	r0, r1, r0, r3
   14ecc:	asr	r0, r3, #31
   14ed0:	rsb	r0, r0, r1, asr #6
   14ed4:	sub	r2, r2, ip
   14ed8:	asr	r1, r0, #31
   14edc:	lsr	ip, r1, #31
   14ee0:	cmp	r2, #0
   14ee4:	movle	r3, #0
   14ee8:	andgt	r3, ip, #1
   14eec:	cmp	r3, #0
   14ef0:	asr	r3, r2, #31
   14ef4:	bne	14f50 <time_since_now@@Base+0xc8>
   14ef8:	cmp	r2, #0
   14efc:	sbcs	lr, r3, #0
   14f00:	bge	14f6c <time_since_now@@Base+0xe4>
   14f04:	mov	r0, #0
   14f08:	mov	r1, #0
   14f0c:	ldr	r2, [sp, #12]
   14f10:	ldr	r3, [r4]
   14f14:	cmp	r2, r3
   14f18:	bne	15020 <time_since_now@@Base+0x198>
   14f1c:	add	sp, sp, #16
   14f20:	pop	{r4, r5, r6, pc}
   14f24:	ldr	r3, [pc, #260]	; 15030 <time_since_now@@Base+0x1a8>
   14f28:	ldr	r3, [r3]
   14f2c:	cmp	r3, #1
   14f30:	beq	15004 <time_since_now@@Base+0x17c>
   14f34:	cmp	r3, #2
   14f38:	beq	14fd4 <time_since_now@@Base+0x14c>
   14f3c:	mov	r1, r3
   14f40:	ldr	r0, [pc, #236]	; 15034 <time_since_now@@Base+0x1ac>
   14f44:	bl	134c8 <log_err@@Base>
   14f48:	ldrd	r2, [sp, #4]
   14f4c:	b	14eb8 <time_since_now@@Base+0x30>
   14f50:	ldr	ip, [pc, #224]	; 15038 <time_since_now@@Base+0x1b0>
   14f54:	subs	r2, r2, #1
   14f58:	sbc	r3, r3, #0
   14f5c:	adds	r0, r0, ip
   14f60:	mov	ip, #0
   14f64:	adc	r1, r1, ip
   14f68:	lsr	ip, r1, #31
   14f6c:	orrs	lr, r2, r3
   14f70:	movne	ip, #0
   14f74:	cmp	ip, #0
   14f78:	bne	14f04 <time_since_now@@Base+0x7c>
   14f7c:	lsl	r5, r3, #5
   14f80:	lsl	r6, r2, #5
   14f84:	subs	r6, r6, r2
   14f88:	orr	r5, r5, r2, lsr #27
   14f8c:	sbc	r5, r5, r3
   14f90:	lsl	ip, r6, #2
   14f94:	lsl	r5, r5, #2
   14f98:	orr	r5, r5, r6, lsr #30
   14f9c:	adds	r6, ip, r2
   14fa0:	adc	r5, r5, r3
   14fa4:	mov	r2, #1000	; 0x3e8
   14fa8:	mov	r3, #0
   14fac:	bl	17098 <fnv@@Base+0x6f8>
   14fb0:	lsl	r5, r5, #3
   14fb4:	orr	r5, r5, r6, lsr #29
   14fb8:	lsl	r6, r6, #3
   14fbc:	mov	r2, #1000	; 0x3e8
   14fc0:	mov	r3, #0
   14fc4:	adds	r0, r6, r0
   14fc8:	adc	r1, r5, r1
   14fcc:	bl	1716c <fnv@@Base+0x7cc>
   14fd0:	b	14f0c <time_since_now@@Base+0x84>
   14fd4:	add	r1, sp, #4
   14fd8:	mov	r0, #4
   14fdc:	bl	11bc4 <clock_gettime@plt>
   14fe0:	cmp	r0, #0
   14fe4:	bge	14f48 <time_since_now@@Base+0xc0>
   14fe8:	ldr	r0, [pc, #76]	; 1503c <time_since_now@@Base+0x1b4>
   14fec:	bl	134c8 <log_err@@Base>
   14ff0:	ldr	r3, [pc, #72]	; 15040 <time_since_now@@Base+0x1b8>
   14ff4:	mov	r2, #160	; 0xa0
   14ff8:	ldr	r1, [pc, #68]	; 15044 <time_since_now@@Base+0x1bc>
   14ffc:	ldr	r0, [pc, #68]	; 15048 <time_since_now@@Base+0x1c0>
   15000:	bl	11bf4 <__assert_fail@plt>
   15004:	add	r0, sp, #4
   15008:	bl	11ae0 <gettimeofday@plt>
   1500c:	ldrd	r2, [sp, #4]
   15010:	rsb	r1, r3, r3, lsl #5
   15014:	add	r3, r3, r1, lsl #2
   15018:	lsl	r3, r3, #3
   1501c:	b	14eb8 <time_since_now@@Base+0x30>
   15020:	bl	11a5c <__stack_chk_fail@plt>
   15024:	muleq	r2, r8, r3
   15028:	andeq	r8, r2, r0, lsl lr
   1502c:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   15030:	andeq	r9, r2, r8, lsl r0
   15034:	andeq	r7, r1, ip, asr r9
   15038:	andeq	r4, pc, r0, asr #4
   1503c:	andeq	r7, r1, r4, lsr r9
   15040:	andeq	r7, r1, r4, lsr #18
   15044:	andeq	r7, r1, r0, asr r9
   15048:	andeq	r7, r1, r0, lsr #16

0001504c <fio_monotonic_clocktest@@Base>:
   1504c:	cmp	r0, #0
   15050:	bne	1505c <fio_monotonic_clocktest@@Base+0x10>
   15054:	mov	r0, #1
   15058:	bx	lr
   1505c:	push	{r4, lr}
   15060:	ldr	r0, [pc, #8]	; 15070 <fio_monotonic_clocktest@@Base+0x24>
   15064:	bl	13558 <log_info@@Base>
   15068:	mov	r0, #1
   1506c:	pop	{r4, pc}
   15070:	andeq	r7, r1, r4, asr #19
   15074:	ldr	ip, [r0, #12]
   15078:	ldr	r2, [r0, #8]
   1507c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15080:	eor	r6, r2, ip
   15084:	ldr	r2, [r0, #4]
   15088:	ldr	sl, [r1]
   1508c:	ldr	r3, [pc, #2276]	; 15978 <fio_monotonic_clocktest@@Base+0x92c>
   15090:	and	r6, r6, r2
   15094:	ldr	r2, [r0]
   15098:	add	r3, sl, r3
   1509c:	add	r3, r3, r2
   150a0:	eor	r6, r6, ip
   150a4:	ldr	lr, [r0, #8]
   150a8:	ldr	ip, [r0, #4]
   150ac:	add	r6, r6, r3
   150b0:	ldr	r2, [r1, #4]
   150b4:	ldr	r3, [pc, #2240]	; 1597c <fio_monotonic_clocktest@@Base+0x930>
   150b8:	add	r6, ip, r6, ror #25
   150bc:	eor	r5, ip, lr
   150c0:	ldr	ip, [r0, #12]
   150c4:	and	r5, r5, r6
   150c8:	add	r3, r2, r3
   150cc:	add	r3, r3, ip
   150d0:	eor	r5, r5, lr
   150d4:	add	r5, r5, r3
   150d8:	ldr	lr, [r0, #4]
   150dc:	add	r5, r6, r5, ror #20
   150e0:	ldr	r4, [r0, #4]
   150e4:	eor	lr, lr, r6
   150e8:	ldr	ip, [r1, #8]
   150ec:	and	lr, lr, r5
   150f0:	ldr	r3, [pc, #2184]	; 15980 <fio_monotonic_clocktest@@Base+0x934>
   150f4:	eor	lr, lr, r4
   150f8:	ldr	r4, [r0, #8]
   150fc:	add	r3, ip, r3
   15100:	add	r3, r3, r4
   15104:	sub	sp, sp, #44	; 0x2c
   15108:	add	lr, lr, r3
   1510c:	ldr	r4, [r1, #12]
   15110:	ldr	r3, [pc, #2156]	; 15984 <fio_monotonic_clocktest@@Base+0x938>
   15114:	add	lr, r5, lr, ror #15
   15118:	ldr	r7, [r0, #4]
   1511c:	str	r2, [sp]
   15120:	eor	r2, r6, r5
   15124:	and	r2, r2, lr
   15128:	add	r3, r4, r3
   1512c:	add	r3, r3, r7
   15130:	eor	r2, r2, r6
   15134:	add	r2, r2, r3
   15138:	str	r4, [sp, #8]
   1513c:	ldr	r3, [r1, #16]
   15140:	ldr	r4, [pc, #2112]	; 15988 <fio_monotonic_clocktest@@Base+0x93c>
   15144:	add	r2, lr, r2, ror #10
   15148:	str	ip, [sp, #4]
   1514c:	eor	ip, r5, lr
   15150:	add	r4, r3, r4
   15154:	and	ip, ip, r2
   15158:	str	r3, [sp, #12]
   1515c:	add	r6, r4, r6
   15160:	eor	r3, ip, r5
   15164:	add	r3, r3, r6
   15168:	ldr	r7, [r1, #20]
   1516c:	ldr	r6, [pc, #2072]	; 1598c <fio_monotonic_clocktest@@Base+0x940>
   15170:	add	r3, r2, r3, ror #25
   15174:	eor	ip, lr, r2
   15178:	add	r6, r7, r6
   1517c:	and	ip, ip, r3
   15180:	add	r5, r6, r5
   15184:	eor	r4, ip, lr
   15188:	add	r4, r4, r5
   1518c:	ldr	r8, [r1, #24]
   15190:	ldr	r6, [pc, #2040]	; 15990 <fio_monotonic_clocktest@@Base+0x944>
   15194:	add	r4, r3, r4, ror #20
   15198:	eor	r5, r2, r3
   1519c:	add	r6, r8, r6
   151a0:	and	r5, r5, r4
   151a4:	add	lr, r6, lr
   151a8:	eor	ip, r5, r2
   151ac:	add	ip, ip, lr
   151b0:	ldr	r9, [r1, #28]
   151b4:	ldr	r5, [pc, #2008]	; 15994 <fio_monotonic_clocktest@@Base+0x948>
   151b8:	add	ip, r4, ip, ror #15
   151bc:	eor	lr, r3, r4
   151c0:	add	r5, r9, r5
   151c4:	and	lr, lr, ip
   151c8:	str	r7, [sp, #16]
   151cc:	add	r2, r5, r2
   151d0:	eor	r7, lr, r3
   151d4:	add	r7, r7, r2
   151d8:	ldr	r5, [r1, #32]
   151dc:	ldr	lr, [pc, #1972]	; 15998 <fio_monotonic_clocktest@@Base+0x94c>
   151e0:	add	r7, ip, r7, ror #10
   151e4:	eor	r2, r4, ip
   151e8:	add	lr, r5, lr
   151ec:	and	r2, r2, r7
   151f0:	str	r8, [sp, #20]
   151f4:	add	r3, lr, r3
   151f8:	eor	r8, r2, r4
   151fc:	add	r8, r8, r3
   15200:	ldr	r6, [r1, #36]	; 0x24
   15204:	ldr	r2, [pc, #1936]	; 1599c <fio_monotonic_clocktest@@Base+0x950>
   15208:	add	r8, r7, r8, ror #25
   1520c:	eor	r3, ip, r7
   15210:	add	r2, r6, r2
   15214:	and	r3, r3, r8
   15218:	str	r5, [sp, #24]
   1521c:	add	r4, r2, r4
   15220:	eor	r5, r3, ip
   15224:	str	r6, [sp, #28]
   15228:	add	r5, r5, r4
   1522c:	ldr	r6, [r1, #40]	; 0x28
   15230:	add	r5, r8, r5, ror #20
   15234:	eor	r3, r7, r8
   15238:	sub	r2, r6, #41984	; 0xa400
   1523c:	and	r3, r3, r5
   15240:	sub	r2, r2, #79	; 0x4f
   15244:	add	ip, r2, ip
   15248:	eor	lr, r3, r7
   1524c:	add	lr, lr, ip
   15250:	ldr	r2, [r1, #44]	; 0x2c
   15254:	ldr	r4, [pc, #1860]	; 159a0 <fio_monotonic_clocktest@@Base+0x954>
   15258:	add	lr, r5, lr, ror #15
   1525c:	eor	r3, r8, r5
   15260:	add	r4, r2, r4
   15264:	and	r3, r3, lr
   15268:	str	r2, [sp, #32]
   1526c:	add	r7, r4, r7
   15270:	eor	r2, r3, r8
   15274:	add	r2, r2, r7
   15278:	ldr	r4, [pc, #1828]	; 159a4 <fio_monotonic_clocktest@@Base+0x958>
   1527c:	ldr	r7, [r1, #48]	; 0x30
   15280:	add	r2, lr, r2, ror #10
   15284:	eor	ip, r5, lr
   15288:	add	r4, r7, r4
   1528c:	and	ip, ip, r2
   15290:	add	r8, r4, r8
   15294:	eor	r3, ip, r5
   15298:	add	r3, r3, r8
   1529c:	ldr	r4, [r1, #52]	; 0x34
   152a0:	ldr	r8, [pc, #1792]	; 159a8 <fio_monotonic_clocktest@@Base+0x95c>
   152a4:	add	r3, r2, r3, ror #25
   152a8:	eor	ip, lr, r2
   152ac:	add	r8, r4, r8
   152b0:	and	ip, ip, r3
   152b4:	str	r4, [sp, #36]	; 0x24
   152b8:	add	r5, r8, r5
   152bc:	eor	r4, ip, lr
   152c0:	add	r4, r4, r5
   152c4:	ldr	r8, [r1, #56]	; 0x38
   152c8:	ldr	fp, [pc, #1756]	; 159ac <fio_monotonic_clocktest@@Base+0x960>
   152cc:	add	r4, r3, r4, ror #20
   152d0:	eor	r5, r2, r3
   152d4:	add	fp, r8, fp
   152d8:	and	r5, r5, r4
   152dc:	add	lr, fp, lr
   152e0:	eor	ip, r5, r2
   152e4:	add	ip, ip, lr
   152e8:	ldr	r5, [r1, #60]	; 0x3c
   152ec:	ldr	fp, [pc, #1724]	; 159b0 <fio_monotonic_clocktest@@Base+0x964>
   152f0:	add	ip, r4, ip, ror #15
   152f4:	eor	r1, r3, r4
   152f8:	add	fp, r5, fp
   152fc:	and	r1, r1, ip
   15300:	eor	r1, r1, r3
   15304:	add	r2, fp, r2
   15308:	add	r2, r1, r2
   1530c:	ldr	fp, [sp]
   15310:	add	r2, ip, r2, ror #10
   15314:	ldr	lr, [pc, #1688]	; 159b4 <fio_monotonic_clocktest@@Base+0x968>
   15318:	eor	r1, ip, r2
   1531c:	add	lr, fp, lr
   15320:	and	r1, r1, r4
   15324:	add	r3, lr, r3
   15328:	eor	fp, r1, ip
   1532c:	add	fp, fp, r3
   15330:	ldr	lr, [sp, #20]
   15334:	add	fp, r2, fp, ror #27
   15338:	ldr	r1, [pc, #1656]	; 159b8 <fio_monotonic_clocktest@@Base+0x96c>
   1533c:	eor	r3, r2, fp
   15340:	add	r1, lr, r1
   15344:	and	r3, r3, ip
   15348:	eor	r3, r3, r2
   1534c:	add	r4, r1, r4
   15350:	add	r4, r3, r4
   15354:	ldr	r1, [sp, #32]
   15358:	add	r4, fp, r4, ror #23
   1535c:	ldr	lr, [pc, #1624]	; 159bc <fio_monotonic_clocktest@@Base+0x970>
   15360:	eor	r3, fp, r4
   15364:	add	lr, r1, lr
   15368:	and	r3, r3, r2
   1536c:	add	ip, lr, ip
   15370:	eor	lr, r3, fp
   15374:	add	lr, lr, ip
   15378:	ldr	r1, [pc, #1600]	; 159c0 <fio_monotonic_clocktest@@Base+0x974>
   1537c:	add	lr, r4, lr, ror #18
   15380:	eor	r3, r4, lr
   15384:	add	r1, sl, r1
   15388:	and	r3, r3, fp
   1538c:	eor	r3, r3, r4
   15390:	add	r2, r1, r2
   15394:	add	r2, r3, r2
   15398:	ldr	ip, [sp, #16]
   1539c:	add	r2, lr, r2, ror #12
   153a0:	ldr	r3, [pc, #1564]	; 159c4 <fio_monotonic_clocktest@@Base+0x978>
   153a4:	eor	r1, lr, r2
   153a8:	add	r3, ip, r3
   153ac:	and	r1, r1, r4
   153b0:	add	fp, r3, fp
   153b4:	eor	r3, r1, lr
   153b8:	add	r3, r3, fp
   153bc:	ldr	r1, [pc, #1540]	; 159c8 <fio_monotonic_clocktest@@Base+0x97c>
   153c0:	add	r3, r2, r3, ror #27
   153c4:	eor	ip, r2, r3
   153c8:	add	r1, r6, r1
   153cc:	and	ip, ip, lr
   153d0:	add	r4, r1, r4
   153d4:	eor	r1, ip, r2
   153d8:	add	r1, r1, r4
   153dc:	ldr	ip, [pc, #1512]	; 159cc <fio_monotonic_clocktest@@Base+0x980>
   153e0:	add	r1, r3, r1, ror #23
   153e4:	eor	r4, r3, r1
   153e8:	add	ip, r5, ip
   153ec:	and	r4, r4, r2
   153f0:	add	lr, ip, lr
   153f4:	eor	ip, r4, r3
   153f8:	add	ip, ip, lr
   153fc:	ldr	fp, [sp, #12]
   15400:	add	ip, r1, ip, ror #18
   15404:	ldr	r4, [pc, #1476]	; 159d0 <fio_monotonic_clocktest@@Base+0x984>
   15408:	eor	lr, r1, ip
   1540c:	add	r4, fp, r4
   15410:	and	lr, lr, r3
   15414:	eor	lr, lr, r1
   15418:	add	r2, r4, r2
   1541c:	add	r2, lr, r2
   15420:	ldr	fp, [sp, #28]
   15424:	add	r2, ip, r2, ror #12
   15428:	ldr	r4, [pc, #1444]	; 159d4 <fio_monotonic_clocktest@@Base+0x988>
   1542c:	eor	lr, ip, r2
   15430:	add	r4, fp, r4
   15434:	and	lr, lr, r1
   15438:	add	r3, r4, r3
   1543c:	eor	fp, lr, ip
   15440:	add	fp, fp, r3
   15444:	ldr	lr, [pc, #1420]	; 159d8 <fio_monotonic_clocktest@@Base+0x98c>
   15448:	add	fp, r2, fp, ror #27
   1544c:	eor	r3, r2, fp
   15450:	add	lr, r8, lr
   15454:	and	r3, r3, ip
   15458:	add	r1, lr, r1
   1545c:	eor	r4, r3, r2
   15460:	add	r4, r4, r1
   15464:	ldr	lr, [pc, #1392]	; 159dc <fio_monotonic_clocktest@@Base+0x990>
   15468:	add	r4, fp, r4, ror #23
   1546c:	ldr	r1, [sp, #8]
   15470:	eor	r3, fp, r4
   15474:	add	lr, r1, lr
   15478:	and	r3, r3, r2
   1547c:	add	ip, lr, ip
   15480:	eor	lr, r3, fp
   15484:	add	lr, lr, ip
   15488:	ldr	r1, [pc, #1360]	; 159e0 <fio_monotonic_clocktest@@Base+0x994>
   1548c:	add	lr, r4, lr, ror #18
   15490:	ldr	ip, [sp, #24]
   15494:	eor	r3, r4, lr
   15498:	add	r1, ip, r1
   1549c:	and	r3, r3, fp
   154a0:	eor	r3, r3, r4
   154a4:	add	r2, r1, r2
   154a8:	add	r2, r3, r2
   154ac:	ldr	ip, [sp, #36]	; 0x24
   154b0:	add	r2, lr, r2, ror #12
   154b4:	ldr	r3, [pc, #1320]	; 159e4 <fio_monotonic_clocktest@@Base+0x998>
   154b8:	eor	r1, lr, r2
   154bc:	add	r3, ip, r3
   154c0:	and	r1, r1, r4
   154c4:	add	fp, r3, fp
   154c8:	eor	r3, r1, lr
   154cc:	add	r3, r3, fp
   154d0:	ldr	r1, [pc, #1296]	; 159e8 <fio_monotonic_clocktest@@Base+0x99c>
   154d4:	add	r3, r2, r3, ror #27
   154d8:	ldr	fp, [sp, #4]
   154dc:	eor	ip, r2, r3
   154e0:	add	r1, fp, r1
   154e4:	and	ip, ip, lr
   154e8:	add	r4, r1, r4
   154ec:	eor	r1, ip, r2
   154f0:	add	r1, r1, r4
   154f4:	ldr	ip, [pc, #1264]	; 159ec <fio_monotonic_clocktest@@Base+0x9a0>
   154f8:	add	r1, r3, r1, ror #23
   154fc:	eor	r4, r3, r1
   15500:	add	ip, r9, ip
   15504:	and	r4, r4, r2
   15508:	add	lr, ip, lr
   1550c:	eor	ip, r4, r3
   15510:	add	ip, ip, lr
   15514:	ldr	r4, [pc, #1236]	; 159f0 <fio_monotonic_clocktest@@Base+0x9a4>
   15518:	add	ip, r1, ip, ror #18
   1551c:	eor	fp, r1, ip
   15520:	add	r4, r7, r4
   15524:	and	lr, fp, r3
   15528:	eor	lr, lr, r1
   1552c:	add	r2, r4, r2
   15530:	add	r2, lr, r2
   15534:	ldr	r4, [pc, #1208]	; 159f4 <fio_monotonic_clocktest@@Base+0x9a8>
   15538:	ldr	lr, [sp, #16]
   1553c:	add	r2, ip, r2, ror #12
   15540:	add	r4, lr, r4
   15544:	eor	fp, fp, r2
   15548:	add	r3, r4, r3
   1554c:	add	r3, fp, r3
   15550:	ldr	r4, [sp, #24]
   15554:	ldr	fp, [pc, #1180]	; 159f8 <fio_monotonic_clocktest@@Base+0x9ac>
   15558:	add	r3, r2, r3, ror #28
   1555c:	add	fp, r4, fp
   15560:	eor	lr, ip, r2
   15564:	eor	lr, lr, r3
   15568:	add	r1, fp, r1
   1556c:	add	r1, lr, r1
   15570:	ldr	r4, [pc, #1156]	; 159fc <fio_monotonic_clocktest@@Base+0x9b0>
   15574:	ldr	lr, [sp, #32]
   15578:	add	r1, r3, r1, ror #21
   1557c:	add	r4, lr, r4
   15580:	eor	lr, r2, r3
   15584:	eor	lr, lr, r1
   15588:	add	ip, r4, ip
   1558c:	add	ip, lr, ip
   15590:	ldr	lr, [pc, #1128]	; 15a00 <fio_monotonic_clocktest@@Base+0x9b4>
   15594:	add	ip, r1, ip, ror #16
   15598:	eor	fp, r3, r1
   1559c:	add	lr, r8, lr
   155a0:	add	r2, lr, r2
   155a4:	eor	lr, fp, ip
   155a8:	add	lr, lr, r2
   155ac:	ldr	fp, [pc, #1104]	; 15a04 <fio_monotonic_clocktest@@Base+0x9b8>
   155b0:	ldr	r2, [sp]
   155b4:	add	lr, ip, lr, ror #9
   155b8:	add	fp, r2, fp
   155bc:	eor	r2, r1, ip
   155c0:	add	r3, fp, r3
   155c4:	eor	fp, r2, lr
   155c8:	add	fp, fp, r3
   155cc:	ldr	r2, [pc, #1076]	; 15a08 <fio_monotonic_clocktest@@Base+0x9bc>
   155d0:	ldr	r3, [sp, #12]
   155d4:	add	fp, lr, fp, ror #28
   155d8:	add	r2, r3, r2
   155dc:	eor	r3, ip, lr
   155e0:	eor	r3, r3, fp
   155e4:	add	r1, r2, r1
   155e8:	add	r1, r3, r1
   155ec:	ldr	r4, [pc, #1048]	; 15a0c <fio_monotonic_clocktest@@Base+0x9c0>
   155f0:	add	r1, fp, r1, ror #21
   155f4:	eor	r3, lr, fp
   155f8:	add	r4, r9, r4
   155fc:	add	ip, r4, ip
   15600:	eor	r4, r3, r1
   15604:	add	r4, r4, ip
   15608:	ldr	r2, [pc, #1024]	; 15a10 <fio_monotonic_clocktest@@Base+0x9c4>
   1560c:	add	r4, r1, r4, ror #16
   15610:	eor	r3, fp, r1
   15614:	add	r2, r6, r2
   15618:	add	lr, r2, lr
   1561c:	eor	r2, r3, r4
   15620:	ldr	ip, [sp, #36]	; 0x24
   15624:	add	r2, r2, lr
   15628:	ldr	r3, [pc, #996]	; 15a14 <fio_monotonic_clocktest@@Base+0x9c8>
   1562c:	add	r2, r4, r2, ror #9
   15630:	add	r3, ip, r3
   15634:	eor	ip, r1, r4
   15638:	eor	ip, ip, r2
   1563c:	add	fp, r3, fp
   15640:	add	fp, ip, fp
   15644:	ldr	lr, [pc, #972]	; 15a18 <fio_monotonic_clocktest@@Base+0x9cc>
   15648:	add	fp, r2, fp, ror #28
   1564c:	eor	r3, r4, r2
   15650:	add	lr, sl, lr
   15654:	add	r1, lr, r1
   15658:	eor	lr, r3, fp
   1565c:	add	lr, lr, r1
   15660:	ldr	r3, [pc, #948]	; 15a1c <fio_monotonic_clocktest@@Base+0x9d0>
   15664:	ldr	r1, [sp, #8]
   15668:	add	lr, fp, lr, ror #21
   1566c:	add	r3, r1, r3
   15670:	eor	r1, r2, fp
   15674:	add	r4, r3, r4
   15678:	eor	r3, r1, lr
   1567c:	add	r3, r3, r4
   15680:	ldr	r1, [sp, #20]
   15684:	ldr	ip, [pc, #916]	; 15a20 <fio_monotonic_clocktest@@Base+0x9d4>
   15688:	add	r3, lr, r3, ror #16
   1568c:	add	ip, r1, ip
   15690:	eor	r1, fp, lr
   15694:	eor	r1, r1, r3
   15698:	add	r2, ip, r2
   1569c:	add	r2, r1, r2
   156a0:	ldr	ip, [pc, #892]	; 15a24 <fio_monotonic_clocktest@@Base+0x9d8>
   156a4:	ldr	r1, [sp, #28]
   156a8:	add	r2, r3, r2, ror #9
   156ac:	add	ip, r1, ip
   156b0:	eor	r1, lr, r3
   156b4:	add	fp, ip, fp
   156b8:	eor	ip, r1, r2
   156bc:	add	ip, ip, fp
   156c0:	ldr	r1, [pc, #864]	; 15a28 <fio_monotonic_clocktest@@Base+0x9dc>
   156c4:	add	ip, r2, ip, ror #28
   156c8:	eor	r4, r3, r2
   156cc:	add	r1, r7, r1
   156d0:	add	lr, r1, lr
   156d4:	eor	r1, r4, ip
   156d8:	add	r1, r1, lr
   156dc:	ldr	lr, [pc, #840]	; 15a2c <fio_monotonic_clocktest@@Base+0x9e0>
   156e0:	add	r1, ip, r1, ror #21
   156e4:	eor	r4, r2, ip
   156e8:	add	lr, r5, lr
   156ec:	add	r3, lr, r3
   156f0:	eor	lr, r4, r1
   156f4:	add	lr, lr, r3
   156f8:	ldr	r4, [pc, #816]	; 15a30 <fio_monotonic_clocktest@@Base+0x9e4>
   156fc:	ldr	r3, [sp, #4]
   15700:	add	lr, r1, lr, ror #16
   15704:	add	r4, r3, r4
   15708:	eor	r3, ip, r1
   1570c:	eor	r3, r3, lr
   15710:	add	r2, r4, r2
   15714:	add	r2, r3, r2
   15718:	ldr	r4, [pc, #788]	; 15a34 <fio_monotonic_clocktest@@Base+0x9e8>
   1571c:	add	r2, lr, r2, ror #9
   15720:	mvn	r3, r1
   15724:	add	r4, sl, r4
   15728:	orr	r3, r3, r2
   1572c:	eor	r3, r3, lr
   15730:	add	ip, r4, ip
   15734:	add	ip, r3, ip
   15738:	ldr	fp, [pc, #760]	; 15a38 <fio_monotonic_clocktest@@Base+0x9ec>
   1573c:	add	ip, r2, ip, ror #26
   15740:	mvn	sl, lr
   15744:	add	fp, r9, fp
   15748:	orr	sl, sl, ip
   1574c:	eor	sl, sl, r2
   15750:	add	r1, fp, r1
   15754:	add	r1, sl, r1
   15758:	ldr	r3, [pc, #732]	; 15a3c <fio_monotonic_clocktest@@Base+0x9f0>
   1575c:	add	r1, ip, r1, ror #22
   15760:	mvn	r4, r2
   15764:	add	r3, r8, r3
   15768:	orr	r4, r4, r1
   1576c:	eor	r4, r4, ip
   15770:	add	lr, r3, lr
   15774:	add	lr, r4, lr
   15778:	ldr	sl, [sp, #16]
   1577c:	ldr	r9, [pc, #700]	; 15a40 <fio_monotonic_clocktest@@Base+0x9f4>
   15780:	add	lr, r1, lr, ror #17
   15784:	mvn	r8, ip
   15788:	add	r9, sl, r9
   1578c:	orr	r8, r8, lr
   15790:	eor	r8, r8, r1
   15794:	add	r2, r9, r2
   15798:	add	r2, r8, r2
   1579c:	ldr	r4, [pc, #672]	; 15a44 <fio_monotonic_clocktest@@Base+0x9f8>
   157a0:	add	r2, lr, r2, ror #11
   157a4:	mvn	r3, r1
   157a8:	add	r4, r7, r4
   157ac:	orr	r3, r3, r2
   157b0:	eor	r3, r3, lr
   157b4:	add	ip, r4, ip
   157b8:	add	ip, r3, ip
   157bc:	ldr	r4, [sp, #8]
   157c0:	ldr	fp, [pc, #640]	; 15a48 <fio_monotonic_clocktest@@Base+0x9fc>
   157c4:	add	ip, r2, ip, ror #26
   157c8:	mvn	r7, lr
   157cc:	add	fp, r4, fp
   157d0:	orr	r7, r7, ip
   157d4:	eor	r7, r7, r2
   157d8:	add	r1, fp, r1
   157dc:	add	r1, r7, r1
   157e0:	ldr	r3, [pc, #612]	; 15a4c <fio_monotonic_clocktest@@Base+0xa00>
   157e4:	add	r1, ip, r1, ror #22
   157e8:	mvn	r4, r2
   157ec:	add	r3, r6, r3
   157f0:	orr	r4, r4, r1
   157f4:	eor	r4, r4, ip
   157f8:	add	lr, r3, lr
   157fc:	add	lr, r4, lr
   15800:	ldr	fp, [sp]
   15804:	ldr	r9, [pc, #580]	; 15a50 <fio_monotonic_clocktest@@Base+0xa04>
   15808:	add	lr, r1, lr, ror #17
   1580c:	mvn	r6, ip
   15810:	add	r9, fp, r9
   15814:	orr	r6, r6, lr
   15818:	eor	r6, r6, r1
   1581c:	add	r2, r9, r2
   15820:	add	r2, r6, r2
   15824:	ldr	r4, [pc, #552]	; 15a54 <fio_monotonic_clocktest@@Base+0xa08>
   15828:	ldr	r6, [sp, #24]
   1582c:	add	r2, lr, r2, ror #11
   15830:	mvn	r3, r1
   15834:	add	r4, r6, r4
   15838:	orr	r3, r3, r2
   1583c:	eor	r3, r3, lr
   15840:	add	ip, r4, ip
   15844:	add	ip, r3, ip
   15848:	ldr	fp, [pc, #520]	; 15a58 <fio_monotonic_clocktest@@Base+0xa0c>
   1584c:	add	ip, r2, ip, ror #26
   15850:	mvn	r6, lr
   15854:	add	fp, r5, fp
   15858:	orr	r6, r6, ip
   1585c:	eor	r6, r6, r2
   15860:	add	r1, fp, r1
   15864:	add	r1, r6, r1
   15868:	ldr	r8, [sp, #20]
   1586c:	ldr	r3, [pc, #488]	; 15a5c <fio_monotonic_clocktest@@Base+0xa10>
   15870:	add	r1, ip, r1, ror #22
   15874:	mvn	r4, r2
   15878:	add	r3, r8, r3
   1587c:	orr	r4, r4, r1
   15880:	eor	r4, r4, ip
   15884:	add	lr, r3, lr
   15888:	add	lr, r4, lr
   1588c:	ldr	r7, [sp, #36]	; 0x24
   15890:	ldr	r9, [pc, #456]	; 15a60 <fio_monotonic_clocktest@@Base+0xa14>
   15894:	add	lr, r1, lr, ror #17
   15898:	mvn	r5, ip
   1589c:	add	r9, r7, r9
   158a0:	orr	r5, r5, lr
   158a4:	eor	r5, r5, r1
   158a8:	add	r2, r9, r2
   158ac:	add	r2, r5, r2
   158b0:	ldr	fp, [sp, #12]
   158b4:	ldr	r4, [pc, #424]	; 15a64 <fio_monotonic_clocktest@@Base+0xa18>
   158b8:	add	r2, lr, r2, ror #11
   158bc:	mvn	r3, r1
   158c0:	orr	r3, r3, r2
   158c4:	add	r4, fp, r4
   158c8:	add	r4, r4, ip
   158cc:	eor	ip, r3, lr
   158d0:	add	ip, ip, r4
   158d4:	ldr	fp, [pc, #396]	; 15a68 <fio_monotonic_clocktest@@Base+0xa1c>
   158d8:	ldr	r4, [sp, #32]
   158dc:	add	ip, r2, ip, ror #26
   158e0:	mvn	r3, lr
   158e4:	orr	r3, r3, ip
   158e8:	add	fp, r4, fp
   158ec:	add	fp, fp, r1
   158f0:	eor	r1, r3, r2
   158f4:	add	r1, r1, fp
   158f8:	ldr	r5, [sp, #4]
   158fc:	ldr	r3, [pc, #360]	; 15a6c <fio_monotonic_clocktest@@Base+0xa20>
   15900:	add	r1, ip, r1, ror #22
   15904:	mvn	r4, r2
   15908:	orr	r4, r4, r1
   1590c:	add	r3, r5, r3
   15910:	add	r3, r3, lr
   15914:	eor	lr, r4, ip
   15918:	add	lr, lr, r3
   1591c:	ldr	r6, [sp, #28]
   15920:	ldr	r3, [pc, #328]	; 15a70 <fio_monotonic_clocktest@@Base+0xa24>
   15924:	add	lr, r1, lr, ror #17
   15928:	add	r3, r6, r3
   1592c:	mvn	r9, ip
   15930:	add	r2, r3, r2
   15934:	orr	r9, r9, lr
   15938:	ldr	r3, [r0, #4]
   1593c:	eor	r9, r9, r1
   15940:	add	r9, r9, r2
   15944:	add	r2, r3, lr
   15948:	ldr	r3, [r0]
   1594c:	add	r2, r2, r9, ror #11
   15950:	add	ip, r3, ip
   15954:	ldr	r3, [r0, #12]
   15958:	str	ip, [r0]
   1595c:	add	r1, r3, r1
   15960:	ldr	r3, [r0, #8]
   15964:	str	r1, [r0, #12]
   15968:	add	lr, r3, lr
   1596c:	stmib	r0, {r2, lr}
   15970:	add	sp, sp, #44	; 0x2c
   15974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15978:			; <UNDEFINED> instruction: 0xd76aa478
   1597c:	stmia	r7, {r1, r2, r4, r6, r8, r9, sl, ip, sp, pc}^
   15980:	strtcs	r7, [r0], #-219	; 0xffffff25
   15984:			; <UNDEFINED> instruction: 0xc1bdceee
   15988:			; <UNDEFINED> instruction: 0xf57c0faf
   1598c:	strmi	ip, [r7, sl, lsr #12]
   15990:	ldmdage	r0!, {r0, r1, r4, r9, sl, lr}
   15994:	stc2l	5, cr9, [r6, #-4]
   15998:	stmibvs	r0, {r3, r4, r6, r7, fp, ip, pc}
   1599c:	blhi	1153860 <__bss_end__@@Base+0x112a4b4>
   159a0:	ldmdbhi	ip, {r1, r2, r3, r4, r5, r7, r8, r9, sl, ip, lr, pc}^
   159a4:	blvs	fe419e34 <__bss_end__@@Base+0xfe3f0a88>
   159a8:	ldc2	1, cr7, [r8, #588]	; 0x24c
   159ac:	ldrbtge	r4, [r9], -lr, lsl #7
   159b0:	ldmibmi	r4!, {r0, r5, fp}
   159b4:			; <UNDEFINED> instruction: 0xf61e2562
   159b8:	subgt	fp, r0, r0, asr #6
   159bc:			; <UNDEFINED> instruction: 0x265e5a51
   159c0:	ldmib	r6!, {r1, r3, r5, r7, r8, r9, sl, lr, pc}
   159c4:			; <UNDEFINED> instruction: 0xd62f105d
   159c8:	subeq	r1, r4, #1392508928	; 0x53000000
   159cc:	stmiale	r1!, {r0, r7, r9, sl, sp, lr, pc}
   159d0:	ldrb	pc, [r3, r8, asr #23]	; <UNPREDICTABLE>
   159d4:	mvncs	ip, r6, ror #27
   159d8:	teqgt	r7, #56098816	; 0x3580000
   159dc:			; <UNDEFINED> instruction: 0xf4d50d87
   159e0:	ldrbmi	r1, [sl, #-1261]	; 0xfffffb13
   159e4:	stmibge	r3!, {r0, r2, r8, fp, sp, lr, pc}^
   159e8:	stc2l	3, cr10, [pc], #992	; 15dd0 <fio_memfree@@Base+0x15c>
   159ec:			; <UNDEFINED> instruction: 0x676f02d9
   159f0:	stchi	12, cr4, [sl, #-552]!	; 0xfffffdd8
   159f4:			; <UNDEFINED> instruction: 0xfffa3942
   159f8:	ldrbhi	pc, [r1, -r1, lsl #13]!	; <UNPREDICTABLE>
   159fc:	ldfvss	f6, [sp, #136]	; 0x88
   15a00:	vcmla.f16	d19, d5, d12, #270
   15a04:	ldrtge	lr, [lr], #2628	; 0xa44
   15a08:	blmi	ff7c98b4 <__bss_end__@@Base+0xff7a0508>
   15a0c:			; <UNDEFINED> instruction: 0xf6bb4b60
   15a10:	mrclt	12, 5, fp, cr15, cr0, {3}
   15a14:	ldmcs	fp, {r1, r2, r6, r7, r9, sl, fp, ip, sp, lr}
   15a18:	b	fe85fa08 <__bss_end__@@Base+0xfe83665c>
   15a1c:	strbtle	r3, [pc], #133	; 15a24 <fio_monotonic_clocktest@@Base+0x9d8>
   15a20:	streq	r1, [r8], #3333	; 0xd05
   15a24:	ldmible	r4, {r0, r3, r4, r5, ip, lr, pc}^
   15a28:	ldrb	r9, [fp], r5, ror #19
   15a2c:	svcne	0x00a27cf8
   15a30:	strtgt	r5, [ip], #1637	; 0x665
   15a34:	vld1.16	{d2-d5}, [r9], r4
   15a38:	msrmi	CPSR_fx, #604	; 0x25c
   15a3c:	blge	fe51e8e0 <__bss_end__@@Base+0xfe4f5534>
   15a40:	ldc2	0, cr10, [r3], {57}	; 0x39
   15a44:	ldrbvs	r5, [fp, #-2499]	; 0xfffff63d
   15a48:	svchi	0x000ccc92
   15a4c:			; <UNDEFINED> instruction: 0xffeff47d
   15a50:	strhi	r5, [r4, #3537]	; 0xdd1
   15a54:	svcvs	0x00a87e4f
   15a58:	cdp2	6, 2, cr14, cr12, cr0, {7}
   15a5c:	movwge	r4, #4884	; 0x1314
   15a60:	adfmi<illegal precision>p	f1, f0, f1
   15a64:			; <UNDEFINED> instruction: 0xf7537e82
   15a68:	lfmlt	f7, 1, [sl, #-212]!	; 0xffffff2c
   15a6c:	bcs	ff60a560 <__bss_end__@@Base+0xff5e11b4>
   15a70:	bl	fe1ca8bc <__bss_end__@@Base+0xfe1a1510>

00015a74 <fio_md5_init@@Base>:
   15a74:	ldr	r3, [r0]
   15a78:	ldr	r1, [pc, #16]	; 15a90 <fio_md5_init@@Base+0x1c>
   15a7c:	ldr	r0, [pc, #16]	; 15a94 <fio_md5_init@@Base+0x20>
   15a80:	ldr	r2, [pc, #16]	; 15a98 <fio_md5_init@@Base+0x24>
   15a84:	ldr	ip, [pc, #16]	; 15a9c <fio_md5_init@@Base+0x28>
   15a88:	stm	r3, {r0, r1, r2, ip}
   15a8c:	bx	lr
   15a90:	svc	0x00cdab89
   15a94:	strbvs	r2, [r5, -r1, lsl #6]
   15a98:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   15a9c:	eorsne	r5, r2, r6, ror r4

00015aa0 <fio_md5_update@@Base>:
   15aa0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15aa4:	add	r5, r0, #4
   15aa8:	ldrd	r8, [r0, #72]	; 0x48
   15aac:	mov	r6, r0
   15ab0:	adds	sl, r8, r2
   15ab4:	and	r7, r8, #63	; 0x3f
   15ab8:	adc	fp, r9, #0
   15abc:	rsb	r8, r7, #64	; 0x40
   15ac0:	cmp	r8, r2
   15ac4:	strd	sl, [r0, #72]	; 0x48
   15ac8:	add	r0, r5, r7
   15acc:	bhi	15b68 <fio_md5_update@@Base+0xc8>
   15ad0:	sub	r3, r2, #64	; 0x40
   15ad4:	mov	r2, r8
   15ad8:	mov	r4, r1
   15adc:	add	r7, r7, r3
   15ae0:	bl	11a20 <memcpy@plt>
   15ae4:	mov	r1, r5
   15ae8:	ldr	r0, [r6]
   15aec:	bl	15074 <fio_monotonic_clocktest@@Base+0x28>
   15af0:	cmp	r7, #63	; 0x3f
   15af4:	add	r4, r4, r8
   15af8:	bls	15b70 <fio_md5_update@@Base+0xd0>
   15afc:	sub	r8, r7, #64	; 0x40
   15b00:	bic	r8, r8, #63	; 0x3f
   15b04:	add	r8, r8, #64	; 0x40
   15b08:	add	r8, r4, r8
   15b0c:	add	lr, r4, #64	; 0x40
   15b10:	mov	r3, r5
   15b14:	ldr	ip, [r4]
   15b18:	ldr	r0, [r4, #4]
   15b1c:	ldr	r1, [r4, #8]
   15b20:	ldr	r2, [r4, #12]
   15b24:	add	r4, r4, #16
   15b28:	cmp	r4, lr
   15b2c:	str	ip, [r3]
   15b30:	str	r0, [r3, #4]
   15b34:	str	r1, [r3, #8]
   15b38:	str	r2, [r3, #12]
   15b3c:	add	r3, r3, #16
   15b40:	bne	15b14 <fio_md5_update@@Base+0x74>
   15b44:	mov	r1, r5
   15b48:	ldr	r0, [r6]
   15b4c:	bl	15074 <fio_monotonic_clocktest@@Base+0x28>
   15b50:	cmp	r4, r8
   15b54:	bne	15b0c <fio_md5_update@@Base+0x6c>
   15b58:	and	r7, r7, #63	; 0x3f
   15b5c:	mov	r2, r7
   15b60:	mov	r1, r8
   15b64:	mov	r0, r5
   15b68:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b6c:	b	11a20 <memcpy@plt>
   15b70:	mov	r8, r4
   15b74:	b	15b5c <fio_md5_update@@Base+0xbc>

00015b78 <fio_md5_final@@Base>:
   15b78:	ldr	r3, [r0, #72]	; 0x48
   15b7c:	push	{r4, r5, r6, lr}
   15b80:	and	r3, r3, #63	; 0x3f
   15b84:	add	r5, r0, #4
   15b88:	mov	r4, r0
   15b8c:	mvn	r1, #127	; 0x7f
   15b90:	add	r0, r5, r3
   15b94:	rsbs	r2, r3, #55	; 0x37
   15b98:	strb	r1, [r5, r3]
   15b9c:	add	r0, r0, #1
   15ba0:	bmi	15bd8 <fio_md5_final@@Base+0x60>
   15ba4:	mov	r1, #0
   15ba8:	bl	11b70 <memset@plt>
   15bac:	ldr	r3, [r4, #72]	; 0x48
   15bb0:	ldr	r0, [r4, #76]	; 0x4c
   15bb4:	mov	r1, r5
   15bb8:	lsr	r2, r3, #29
   15bbc:	orr	r2, r2, r0, lsl #3
   15bc0:	lsl	r3, r3, #3
   15bc4:	str	r3, [r4, #60]	; 0x3c
   15bc8:	str	r2, [r4, #64]	; 0x40
   15bcc:	ldr	r0, [r4]
   15bd0:	pop	{r4, r5, r6, lr}
   15bd4:	b	15074 <fio_monotonic_clocktest@@Base+0x28>
   15bd8:	rsb	r2, r3, #63	; 0x3f
   15bdc:	mov	r1, #0
   15be0:	bl	11b70 <memset@plt>
   15be4:	ldr	r0, [r4]
   15be8:	mov	r1, r5
   15bec:	bl	15074 <fio_monotonic_clocktest@@Base+0x28>
   15bf0:	mov	r0, r5
   15bf4:	mov	r2, #56	; 0x38
   15bf8:	b	15ba4 <fio_md5_final@@Base+0x2c>

00015bfc <fio_memalign@@Base>:
   15bfc:	push	{r4, r5, r6, lr}
   15c00:	sub	r4, r0, #1
   15c04:	tst	r4, r0
   15c08:	bne	15c54 <fio_memalign@@Base+0x58>
   15c0c:	mov	r5, r0
   15c10:	cmp	r2, #0
   15c14:	add	r0, r1, #3
   15c18:	mov	r6, r1
   15c1c:	add	r0, r0, r5
   15c20:	bne	15c4c <fio_memalign@@Base+0x50>
   15c24:	bl	11b10 <malloc@plt>
   15c28:	cmp	r0, #0
   15c2c:	rsbne	r3, r5, #0
   15c30:	addne	r4, r0, r4
   15c34:	andne	r3, r3, r4
   15c38:	subne	r0, r3, r0
   15c3c:	moveq	r3, r0
   15c40:	strne	r0, [r3, r6]
   15c44:	mov	r0, r3
   15c48:	pop	{r4, r5, r6, pc}
   15c4c:	bl	140d4 <smalloc@@Base>
   15c50:	b	15c28 <fio_memalign@@Base+0x2c>
   15c54:	ldr	r3, [pc, #12]	; 15c68 <fio_memalign@@Base+0x6c>
   15c58:	mov	r2, #19
   15c5c:	ldr	r1, [pc, #8]	; 15c6c <fio_memalign@@Base+0x70>
   15c60:	ldr	r0, [pc, #8]	; 15c70 <fio_memalign@@Base+0x74>
   15c64:	bl	11bf4 <__assert_fail@plt>
   15c68:	strdeq	r7, [r1], -r8
   15c6c:	andeq	r7, r1, r8, lsl #20
   15c70:	andeq	r7, r1, r8, lsl sl

00015c74 <fio_memfree@@Base>:
   15c74:	ldr	r3, [r0, r1]
   15c78:	cmp	r2, #0
   15c7c:	sub	r0, r0, r3
   15c80:	beq	15c88 <fio_memfree@@Base+0x14>
   15c84:	b	13eac <sfree@@Base>
   15c88:	b	119fc <free@plt>
   15c8c:	ldr	ip, [pc, #380]	; 15e10 <fio_memfree@@Base+0x19c>
   15c90:	cmp	r1, #12
   15c94:	add	ip, r2, ip
   15c98:	push	{r4, r5, lr}
   15c9c:	mov	r2, r0
   15ca0:	add	ip, ip, r1
   15ca4:	bls	15e04 <fio_memfree@@Base+0x190>
   15ca8:	add	r4, r0, #12
   15cac:	mov	r5, ip
   15cb0:	mov	r0, ip
   15cb4:	ldrb	r3, [r4, #-4]
   15cb8:	ldrb	r2, [r4, #-12]
   15cbc:	ldrb	lr, [r4, #-8]
   15cc0:	add	r0, r3, r0
   15cc4:	sub	r3, r2, r0
   15cc8:	add	r3, r3, ip
   15ccc:	eor	r3, r3, r0, ror #28
   15cd0:	add	r2, lr, r5
   15cd4:	sub	lr, r2, r3
   15cd8:	eor	lr, lr, r3, ror #26
   15cdc:	add	r2, r2, r0
   15ce0:	sub	r0, r2, lr
   15ce4:	add	r3, r3, r2
   15ce8:	eor	r0, r0, lr, ror #24
   15cec:	sub	ip, r3, r0
   15cf0:	add	lr, lr, r3
   15cf4:	eor	r3, ip, r0, ror #16
   15cf8:	sub	r2, lr, r3
   15cfc:	eor	r2, r2, r3, ror #13
   15d00:	add	r0, r0, lr
   15d04:	sub	r1, r1, #12
   15d08:	add	ip, r3, r0
   15d0c:	cmp	r1, #12
   15d10:	sub	r0, r0, r2
   15d14:	eor	r0, r0, r2, ror #28
   15d18:	add	r5, r2, ip
   15d1c:	mov	r2, r4
   15d20:	add	r4, r4, #12
   15d24:	bhi	15cb4 <fio_memfree@@Base+0x40>
   15d28:	sub	r1, r1, #1
   15d2c:	cmp	r1, #11
   15d30:	ldrls	pc, [pc, r1, lsl #2]
   15d34:	b	15e00 <fio_memfree@@Base+0x18c>
   15d38:	andeq	r5, r1, r0, asr #27
   15d3c:			; <UNDEFINED> instruction: 0x00015db8
   15d40:			; <UNDEFINED> instruction: 0x00015db0
   15d44:	andeq	r5, r1, r8, lsr #27
   15d48:	andeq	r5, r1, r0, lsr #27
   15d4c:	muleq	r1, r8, sp
   15d50:	muleq	r1, r0, sp
   15d54:	andeq	r5, r1, r8, lsl #27
   15d58:	andeq	r5, r1, r0, lsl #27
   15d5c:	andeq	r5, r1, r8, ror sp
   15d60:	andeq	r5, r1, r0, ror sp
   15d64:	andeq	r5, r1, r8, ror #26
   15d68:	ldrb	r3, [r2, #11]
   15d6c:	add	r0, r0, r3, lsl #24
   15d70:	ldrb	r3, [r2, #10]
   15d74:	add	r0, r0, r3, lsl #16
   15d78:	ldrb	r3, [r2, #9]
   15d7c:	add	r0, r0, r3, lsl #8
   15d80:	ldrb	r3, [r2, #8]
   15d84:	add	r0, r0, r3
   15d88:	ldrb	r3, [r2, #7]
   15d8c:	add	r5, r5, r3, lsl #24
   15d90:	ldrb	r3, [r2, #6]
   15d94:	add	r5, r5, r3, lsl #16
   15d98:	ldrb	r3, [r2, #5]
   15d9c:	add	r5, r5, r3, lsl #8
   15da0:	ldrb	r3, [r2, #4]
   15da4:	add	r5, r5, r3
   15da8:	ldrb	r3, [r2, #3]
   15dac:	add	ip, ip, r3, lsl #24
   15db0:	ldrb	r3, [r2, #2]
   15db4:	add	ip, ip, r3, lsl #16
   15db8:	ldrb	r3, [r2, #1]
   15dbc:	add	ip, ip, r3, lsl #8
   15dc0:	ldrb	r3, [r2]
   15dc4:	eor	r0, r0, r5
   15dc8:	sub	r0, r0, r5, ror #18
   15dcc:	add	r3, r3, ip
   15dd0:	eor	r3, r3, r0
   15dd4:	sub	r3, r3, r0, ror #21
   15dd8:	eor	r2, r5, r3
   15ddc:	sub	r2, r2, r3, ror #7
   15de0:	eor	r0, r0, r2
   15de4:	sub	r1, r0, r2, ror #16
   15de8:	eor	r3, r3, r1
   15dec:	sub	r0, r3, r1, ror #28
   15df0:	eor	r2, r2, r0
   15df4:	sub	r2, r2, r0, ror #18
   15df8:	eor	r0, r1, r2
   15dfc:	sub	r0, r0, r2, ror #8
   15e00:	pop	{r4, r5, pc}
   15e04:	mov	r0, ip
   15e08:	mov	r5, ip
   15e0c:	b	15d28 <fio_memfree@@Base+0xb4>
   15e10:	bicvs	r8, r8, r7, asr #12
   15e14:	push	{r4, lr}
   15e18:	mov	r3, #0
   15e1c:	bl	169a0 <fnv@@Base>
   15e20:	pop	{r4, pc}
   15e24:	b	16958 <crc32c_sw@@Base>

00015e28 <bloom_new@@Base>:
   15e28:	push	{r4, r5, r6, lr}
   15e2c:	mov	r5, r0
   15e30:	mov	r0, #16
   15e34:	mov	r6, r1
   15e38:	bl	11b10 <malloc@plt>
   15e3c:	adds	r3, r5, #31
   15e40:	mov	r1, #4
   15e44:	lsr	r3, r3, #5
   15e48:	mov	r4, r0
   15e4c:	adc	r0, r6, #0
   15e50:	stm	r4, {r5, r6}
   15e54:	orr	r0, r3, r0, lsl #27
   15e58:	bl	119a8 <calloc@plt>
   15e5c:	cmp	r0, #0
   15e60:	str	r0, [r4, #8]
   15e64:	beq	15e70 <bloom_new@@Base+0x48>
   15e68:	mov	r0, r4
   15e6c:	pop	{r4, r5, r6, pc}
   15e70:	mov	r5, r0
   15e74:	mov	r0, r4
   15e78:	bl	119fc <free@plt>
   15e7c:	mov	r4, r5
   15e80:	b	15e68 <bloom_new@@Base+0x40>

00015e84 <bloom_free@@Base>:
   15e84:	push	{r4, lr}
   15e88:	mov	r4, r0
   15e8c:	ldr	r0, [r0, #8]
   15e90:	bl	119fc <free@plt>
   15e94:	mov	r0, r4
   15e98:	pop	{r4, lr}
   15e9c:	b	119fc <free@plt>

00015ea0 <bloom_set@@Base>:
   15ea0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ea4:	sub	sp, sp, #24
   15ea8:	ldr	r4, [pc, #316]	; 15fec <bloom_set@@Base+0x14c>
   15eac:	ldr	r5, [pc, #316]	; 15ff0 <bloom_set@@Base+0x150>
   15eb0:	mov	r7, r0
   15eb4:	ldr	r3, [r4]
   15eb8:	mov	sl, r1
   15ebc:	lsl	r9, r2, #2
   15ec0:	mov	r6, sp
   15ec4:	add	r8, sp, #20
   15ec8:	str	r3, [sp, #20]
   15ecc:	ldrd	r2, [r5]
   15ed0:	mov	r1, r9
   15ed4:	mov	r0, sl
   15ed8:	blx	r3
   15edc:	ldrd	r2, [r7]
   15ee0:	mov	r1, #0
   15ee4:	bl	1716c <fnv@@Base+0x7cc>
   15ee8:	add	r5, r5, #8
   15eec:	str	r2, [r6], #4
   15ef0:	cmp	r8, r6
   15ef4:	bne	15ecc <bloom_set@@Base+0x2c>
   15ef8:	ldr	r1, [sp]
   15efc:	ldr	r3, [r7, #8]
   15f00:	mov	r0, #1
   15f04:	and	r2, r1, #31
   15f08:	lsr	r1, r1, #5
   15f0c:	lsl	r2, r0, r2
   15f10:	ldr	ip, [r3, r1, lsl #2]
   15f14:	ands	lr, r2, ip
   15f18:	orreq	r2, r2, ip
   15f1c:	streq	r2, [r3, r1, lsl #2]
   15f20:	ldr	r2, [sp, #4]
   15f24:	mov	r1, #1
   15f28:	and	ip, r2, #31
   15f2c:	lsr	r2, r2, #5
   15f30:	lsl	r1, r1, ip
   15f34:	ldr	ip, [r3, r2, lsl #2]
   15f38:	moveq	r0, lr
   15f3c:	tst	ip, r1
   15f40:	orreq	r1, ip, r1
   15f44:	streq	r1, [r3, r2, lsl #2]
   15f48:	ldr	r2, [sp, #8]
   15f4c:	mov	r1, #1
   15f50:	and	ip, r2, #31
   15f54:	lsr	r2, r2, #5
   15f58:	lsl	r1, r1, ip
   15f5c:	ldr	ip, [r3, r2, lsl #2]
   15f60:	addne	r0, r0, #1
   15f64:	tst	ip, r1
   15f68:	orreq	r1, ip, r1
   15f6c:	streq	r1, [r3, r2, lsl #2]
   15f70:	ldr	r2, [sp, #12]
   15f74:	mov	r1, #1
   15f78:	and	ip, r2, #31
   15f7c:	lsr	r2, r2, #5
   15f80:	lsl	r1, r1, ip
   15f84:	ldr	ip, [r3, r2, lsl #2]
   15f88:	addne	r0, r0, #1
   15f8c:	tst	ip, r1
   15f90:	orreq	r1, ip, r1
   15f94:	streq	r1, [r3, r2, lsl #2]
   15f98:	ldr	r2, [sp, #16]
   15f9c:	mov	r1, #1
   15fa0:	and	ip, r2, #31
   15fa4:	lsr	r2, r2, #5
   15fa8:	lsl	r1, r1, ip
   15fac:	ldr	ip, [r3, r2, lsl #2]
   15fb0:	addne	r0, r0, #1
   15fb4:	tst	ip, r1
   15fb8:	orreq	r1, ip, r1
   15fbc:	streq	r1, [r3, r2, lsl #2]
   15fc0:	ldr	r2, [sp, #20]
   15fc4:	ldr	r3, [r4]
   15fc8:	addne	r0, r0, #1
   15fcc:	cmp	r2, r3
   15fd0:	sub	r0, r0, #5
   15fd4:	clz	r0, r0
   15fd8:	lsr	r0, r0, #5
   15fdc:	bne	15fe8 <bloom_set@@Base+0x148>
   15fe0:	add	sp, sp, #24
   15fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15fe8:	bl	11a5c <__stack_chk_fail@plt>
   15fec:	andeq	r8, r2, r0, lsl lr
   15ff0:	andeq	r7, r1, r8, lsr sl

00015ff4 <bloom_string@@Base>:
   15ff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ff8:	sub	sp, sp, #28
   15ffc:	ldr	r4, [pc, #456]	; 161cc <bloom_string@@Base+0x1d8>
   16000:	ldr	r5, [pc, #456]	; 161d0 <bloom_string@@Base+0x1dc>
   16004:	mov	r8, r3
   16008:	mov	r7, r0
   1600c:	ldr	r3, [r4]
   16010:	mov	fp, r1
   16014:	mov	sl, r2
   16018:	mov	r6, sp
   1601c:	add	r9, sp, #20
   16020:	str	r3, [sp, #20]
   16024:	ldrd	r2, [r5]
   16028:	mov	r1, sl
   1602c:	mov	r0, fp
   16030:	blx	r3
   16034:	ldrd	r2, [r7]
   16038:	mov	r1, #0
   1603c:	bl	1716c <fnv@@Base+0x7cc>
   16040:	add	r5, r5, #8
   16044:	str	r2, [r6], #4
   16048:	cmp	r9, r6
   1604c:	bne	16024 <bloom_string@@Base+0x30>
   16050:	ldr	r2, [sp]
   16054:	cmp	r8, #0
   16058:	and	r1, r2, #31
   1605c:	mov	r0, #1
   16060:	lsr	r2, r2, #5
   16064:	ldr	r3, [r7, #8]
   16068:	beq	16148 <bloom_string@@Base+0x154>
   1606c:	lsl	r1, r0, r1
   16070:	ldr	ip, [r3, r2, lsl #2]
   16074:	ands	lr, ip, r1
   16078:	orreq	r1, ip, r1
   1607c:	streq	r1, [r3, r2, lsl #2]
   16080:	ldr	r2, [sp, #4]
   16084:	mov	r1, #1
   16088:	and	ip, r2, #31
   1608c:	lsr	r2, r2, #5
   16090:	lsl	r1, r1, ip
   16094:	ldr	ip, [r3, r2, lsl #2]
   16098:	moveq	r0, lr
   1609c:	tst	ip, r1
   160a0:	orreq	r1, ip, r1
   160a4:	streq	r1, [r3, r2, lsl #2]
   160a8:	ldr	r2, [sp, #8]
   160ac:	mov	r1, #1
   160b0:	and	ip, r2, #31
   160b4:	lsr	r2, r2, #5
   160b8:	lsl	r1, r1, ip
   160bc:	ldr	ip, [r3, r2, lsl #2]
   160c0:	addne	r0, r0, #1
   160c4:	tst	ip, r1
   160c8:	orreq	r1, ip, r1
   160cc:	streq	r1, [r3, r2, lsl #2]
   160d0:	ldr	r2, [sp, #12]
   160d4:	mov	r1, #1
   160d8:	and	ip, r2, #31
   160dc:	lsr	r2, r2, #5
   160e0:	lsl	r1, r1, ip
   160e4:	ldr	ip, [r3, r2, lsl #2]
   160e8:	addne	r0, r0, #1
   160ec:	tst	ip, r1
   160f0:	orreq	r1, ip, r1
   160f4:	streq	r1, [r3, r2, lsl #2]
   160f8:	ldr	r2, [sp, #16]
   160fc:	mov	r1, #1
   16100:	and	ip, r2, #31
   16104:	lsr	r2, r2, #5
   16108:	lsl	r1, r1, ip
   1610c:	ldr	ip, [r3, r2, lsl #2]
   16110:	addne	r0, r0, #1
   16114:	tst	ip, r1
   16118:	addne	r0, r0, #1
   1611c:	orreq	r1, ip, r1
   16120:	streq	r1, [r3, r2, lsl #2]
   16124:	ldr	r2, [sp, #20]
   16128:	ldr	r3, [r4]
   1612c:	sub	r0, r0, #5
   16130:	cmp	r2, r3
   16134:	clz	r0, r0
   16138:	lsr	r0, r0, #5
   1613c:	bne	161c8 <bloom_string@@Base+0x1d4>
   16140:	add	sp, sp, #28
   16144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16148:	ldr	r2, [r3, r2, lsl #2]
   1614c:	ands	r2, r2, r0, lsl r1
   16150:	moveq	r0, r8
   16154:	beq	16124 <bloom_string@@Base+0x130>
   16158:	ldr	r2, [sp, #4]
   1615c:	and	r1, r2, #31
   16160:	lsr	r2, r2, #5
   16164:	ldr	r2, [r3, r2, lsl #2]
   16168:	ands	r2, r2, r0, lsl r1
   1616c:	beq	16124 <bloom_string@@Base+0x130>
   16170:	ldr	r2, [sp, #8]
   16174:	and	r1, r2, #31
   16178:	lsr	r2, r2, #5
   1617c:	ldr	r2, [r3, r2, lsl #2]
   16180:	ands	r2, r2, r0, lsl r1
   16184:	moveq	r0, #2
   16188:	beq	16124 <bloom_string@@Base+0x130>
   1618c:	ldr	r2, [sp, #12]
   16190:	and	r1, r2, #31
   16194:	lsr	r2, r2, #5
   16198:	ldr	r2, [r3, r2, lsl #2]
   1619c:	ands	r2, r2, r0, lsl r1
   161a0:	moveq	r0, #3
   161a4:	beq	16124 <bloom_string@@Base+0x130>
   161a8:	ldr	r2, [sp, #16]
   161ac:	and	r1, r2, #31
   161b0:	lsr	r2, r2, #5
   161b4:	ldr	r3, [r3, r2, lsl #2]
   161b8:	ands	r3, r3, r0, lsl r1
   161bc:	movne	r0, #5
   161c0:	moveq	r0, #4
   161c4:	b	16124 <bloom_string@@Base+0x130>
   161c8:	bl	11a5c <__stack_chk_fail@plt>
   161cc:	andeq	r8, r2, r0, lsl lr
   161d0:	andeq	r7, r1, r8, lsr sl

000161d4 <__dprint@@Base>:
   161d4:	push	{r1, r2, r3}
   161d8:	add	sp, sp, #12
   161dc:	bx	lr

000161e0 <debug_init@@Base>:
   161e0:	ldr	r2, [pc, #12]	; 161f4 <debug_init@@Base+0x14>
   161e4:	ldr	r3, [pc, #12]	; 161f8 <debug_init@@Base+0x18>
   161e8:	ldr	r2, [r2]
   161ec:	str	r2, [r3]
   161f0:	bx	lr
   161f4:	andeq	r9, r2, r8, lsr #32
   161f8:	andeq	r9, r2, r4, lsr #7

000161fc <XXH32@@Base>:
   161fc:	cmp	r1, #15
   16200:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16204:	add	r4, r0, r1
   16208:	ble	16288 <XXH32@@Base+0x8c>
   1620c:	ldr	lr, [pc, #336]	; 16364 <XXH32@@Base+0x168>
   16210:	ldr	r5, [pc, #336]	; 16368 <XXH32@@Base+0x16c>
   16214:	ldr	ip, [pc, #336]	; 1636c <XXH32@@Base+0x170>
   16218:	ldr	r7, [pc, #336]	; 16370 <XXH32@@Base+0x174>
   1621c:	add	lr, r2, lr
   16220:	add	r3, r2, r5
   16224:	add	ip, r2, ip
   16228:	sub	r8, r4, #16
   1622c:	ldm	r0, {r6, sl}
   16230:	ldr	r9, [r0, #8]
   16234:	add	r0, r0, #16
   16238:	mla	lr, r5, r6, lr
   1623c:	ldr	r6, [r0, #-4]
   16240:	mla	sl, r5, sl, r3
   16244:	mla	r2, r5, r9, r2
   16248:	mla	ip, r5, r6, ip
   1624c:	ror	lr, lr, #19
   16250:	ror	sl, sl, #19
   16254:	ror	r2, r2, #19
   16258:	ror	ip, ip, #19
   1625c:	cmp	r8, r0
   16260:	mul	lr, r7, lr
   16264:	mul	r3, r7, sl
   16268:	mul	r2, r7, r2
   1626c:	mul	ip, r7, ip
   16270:	bcs	1622c <XXH32@@Base+0x30>
   16274:	ror	r3, r3, #25
   16278:	add	r3, r3, lr, ror #31
   1627c:	add	r3, r3, r2, ror #20
   16280:	add	ip, r3, ip, ror #14
   16284:	b	16290 <XXH32@@Base+0x94>
   16288:	ldr	ip, [pc, #228]	; 16374 <XXH32@@Base+0x178>
   1628c:	add	ip, r2, ip
   16290:	sub	r3, r4, #4
   16294:	cmp	r3, r0
   16298:	add	r1, r1, ip
   1629c:	bcc	162d4 <XXH32@@Base+0xd8>
   162a0:	ldr	r5, [pc, #208]	; 16378 <XXH32@@Base+0x17c>
   162a4:	ldr	lr, [pc, #208]	; 1637c <XXH32@@Base+0x180>
   162a8:	mov	ip, r0
   162ac:	ldr	r2, [ip], #4
   162b0:	cmp	r3, ip
   162b4:	mla	r1, r5, r2, r1
   162b8:	ror	r1, r1, #15
   162bc:	mul	r1, lr, r1
   162c0:	bcs	162ac <XXH32@@Base+0xb0>
   162c4:	sub	r3, r3, r0
   162c8:	bic	r3, r3, #3
   162cc:	add	r3, r3, #4
   162d0:	add	r0, r0, r3
   162d4:	cmp	r4, r0
   162d8:	bls	16344 <XXH32@@Base+0x148>
   162dc:	mov	r2, r0
   162e0:	ldr	lr, [pc, #140]	; 16374 <XXH32@@Base+0x178>
   162e4:	ldrb	r3, [r2], #1
   162e8:	ldr	ip, [pc, #128]	; 16370 <XXH32@@Base+0x174>
   162ec:	cmp	r4, r2
   162f0:	mla	r1, lr, r3, r1
   162f4:	ror	r1, r1, #21
   162f8:	mul	r1, ip, r1
   162fc:	bls	16344 <XXH32@@Base+0x148>
   16300:	ldrb	r3, [r0, #1]
   16304:	add	r2, r0, #2
   16308:	cmp	r4, r2
   1630c:	mla	r1, lr, r3, r1
   16310:	ror	r1, r1, #21
   16314:	mul	r1, ip, r1
   16318:	bls	16344 <XXH32@@Base+0x148>
   1631c:	ldrb	r3, [r0, #2]
   16320:	add	r2, r0, #3
   16324:	cmp	r4, r2
   16328:	mla	r1, lr, r3, r1
   1632c:	ldrbhi	r3, [r0, #3]
   16330:	ror	r1, r1, #21
   16334:	mul	r1, ip, r1
   16338:	mlahi	r1, lr, r3, r1
   1633c:	rorhi	r1, r1, #21
   16340:	mulhi	r1, ip, r1
   16344:	ldr	r3, [pc, #28]	; 16368 <XXH32@@Base+0x16c>
   16348:	eor	r1, r1, r1, lsr #15
   1634c:	ldr	r0, [pc, #36]	; 16378 <XXH32@@Base+0x17c>
   16350:	mul	r1, r3, r1
   16354:	eor	r1, r1, r1, lsr #13
   16358:	mul	r0, r0, r1
   1635c:	eor	r0, r0, r0, lsr #16
   16360:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16364:	strtcs	r4, [r3], #-1064	; 0xfffffbd8
   16368:	strbhi	ip, [fp, #2679]!	; 0xa77
   1636c:	bicvs	r8, r8, pc, asr #12
   16370:			; <UNDEFINED> instruction: 0x9e3779b1
   16374:			; <UNDEFINED> instruction: 0x165667b1
   16378:	adcsgt	sl, r2, #976	; 0x3d0
   1637c:	ldrbcs	lr, [r4, pc, lsr #22]

00016380 <XXH32_sizeofState@@Base>:
   16380:	mov	r0, #48	; 0x30
   16384:	bx	lr

00016388 <XXH32_resetState@@Base>:
   16388:	push	{r4, r5, lr}
   1638c:	mov	r3, r0
   16390:	ldr	lr, [pc, #60]	; 163d4 <XXH32_resetState@@Base+0x4c>
   16394:	ldr	ip, [pc, #60]	; 163d8 <XXH32_resetState@@Base+0x50>
   16398:	ldr	r2, [pc, #60]	; 163dc <XXH32_resetState@@Base+0x54>
   1639c:	add	lr, r1, lr
   163a0:	mov	r4, #0
   163a4:	mov	r5, #0
   163a8:	str	r1, [r0, #8]
   163ac:	str	r1, [r0, #20]
   163b0:	str	lr, [r0, #12]
   163b4:	add	ip, r1, ip
   163b8:	add	r2, r1, r2
   163bc:	mov	r0, #0
   163c0:	str	ip, [r3, #16]
   163c4:	str	r2, [r3, #24]
   163c8:	strd	r4, [r3]
   163cc:	str	r0, [r3, #28]
   163d0:	pop	{r4, r5, pc}
   163d4:	strtcs	r4, [r3], #-1064	; 0xfffffbd8
   163d8:	strbhi	ip, [fp, #2679]!	; 0xa77
   163dc:	bicvs	r8, r8, pc, asr #12

000163e0 <XXH32_init@@Base>:
   163e0:	push	{r4, r6, r7, lr}
   163e4:	mov	r4, r0
   163e8:	mov	r0, #48	; 0x30
   163ec:	bl	11b10 <malloc@plt>
   163f0:	ldr	r1, [pc, #60]	; 16434 <XXH32_init@@Base+0x54>
   163f4:	ldr	ip, [pc, #60]	; 16438 <XXH32_init@@Base+0x58>
   163f8:	ldr	r2, [pc, #60]	; 1643c <XXH32_init@@Base+0x5c>
   163fc:	add	r1, r4, r1
   16400:	mov	r6, #0
   16404:	mov	r7, #0
   16408:	add	ip, r4, ip
   1640c:	add	r2, r4, r2
   16410:	str	r1, [r0, #16]
   16414:	mov	r1, #0
   16418:	str	ip, [r0, #12]
   1641c:	str	r4, [r0, #8]
   16420:	str	r4, [r0, #20]
   16424:	str	r2, [r0, #24]
   16428:	strd	r6, [r0]
   1642c:	str	r1, [r0, #28]
   16430:	pop	{r4, r6, r7, pc}
   16434:	strbhi	ip, [fp, #2679]!	; 0xa77
   16438:	strtcs	r4, [r3], #-1064	; 0xfffffbd8
   1643c:	bicvs	r8, r8, pc, asr #12

00016440 <XXH32_update@@Base>:
   16440:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16444:	mov	r4, r0
   16448:	ldrd	r8, [r0]
   1644c:	ldr	r3, [r0, #28]
   16450:	add	r6, r1, r2
   16454:	adds	sl, r8, r2
   16458:	adc	fp, r9, r2, asr #31
   1645c:	add	r0, r2, r3
   16460:	cmp	r0, #15
   16464:	strd	sl, [r4]
   16468:	ble	165d0 <XXH32_update@@Base+0x190>
   1646c:	cmp	r3, #0
   16470:	mov	r5, r1
   16474:	bne	16528 <XXH32_update@@Base+0xe8>
   16478:	sub	r9, r6, #16
   1647c:	cmp	r5, r9
   16480:	bhi	16518 <XXH32_update@@Base+0xd8>
   16484:	sub	r9, r9, r5
   16488:	bic	r0, r9, #15
   1648c:	add	r7, r5, #32
   16490:	ldr	r8, [r4, #12]
   16494:	ldr	r2, [r4, #16]
   16498:	ldr	r1, [r4, #20]
   1649c:	ldr	r3, [r4, #24]
   164a0:	ldr	lr, [pc, #332]	; 165f4 <XXH32_update@@Base+0x1b4>
   164a4:	ldr	ip, [pc, #332]	; 165f8 <XXH32_update@@Base+0x1b8>
   164a8:	add	r7, r7, r0
   164ac:	add	r0, r5, #16
   164b0:	ldr	fp, [r0, #-16]
   164b4:	ldr	sl, [r0, #-12]
   164b8:	add	r0, r0, #16
   164bc:	mla	r8, lr, fp, r8
   164c0:	mla	r2, lr, sl, r2
   164c4:	ldr	fp, [r0, #-20]	; 0xffffffec
   164c8:	ldr	sl, [r0, #-24]	; 0xffffffe8
   164cc:	ror	r8, r8, #19
   164d0:	mla	r3, lr, fp, r3
   164d4:	mla	r1, lr, sl, r1
   164d8:	ror	r2, r2, #19
   164dc:	ror	r3, r3, #19
   164e0:	ror	r1, r1, #19
   164e4:	cmp	r7, r0
   164e8:	mul	r8, ip, r8
   164ec:	mul	r2, ip, r2
   164f0:	mul	r1, ip, r1
   164f4:	mul	r3, ip, r3
   164f8:	bne	164b0 <XXH32_update@@Base+0x70>
   164fc:	bic	r9, r9, #15
   16500:	add	r9, r9, #16
   16504:	add	r5, r5, r9
   16508:	str	r8, [r4, #12]
   1650c:	str	r2, [r4, #16]
   16510:	str	r1, [r4, #20]
   16514:	str	r3, [r4, #24]
   16518:	cmp	r6, r5
   1651c:	bhi	165b0 <XXH32_update@@Base+0x170>
   16520:	mov	r0, #0
   16524:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16528:	add	r0, r4, #32
   1652c:	add	r0, r0, r3
   16530:	rsb	r2, r3, #16
   16534:	bl	11a20 <memcpy@plt>
   16538:	ldr	r1, [pc, #180]	; 165f4 <XXH32_update@@Base+0x1b4>
   1653c:	ldr	r7, [r4, #32]
   16540:	ldrd	r2, [r4, #36]	; 0x24
   16544:	ldr	r0, [r4, #12]
   16548:	ldr	lr, [r4, #16]
   1654c:	mla	r0, r1, r7, r0
   16550:	ldr	ip, [r4, #44]	; 0x2c
   16554:	ldr	r7, [r4, #20]
   16558:	mla	r2, r1, r2, lr
   1655c:	ldr	lr, [r4, #24]
   16560:	mla	r3, r1, r3, r7
   16564:	mla	ip, r1, ip, lr
   16568:	ldr	r1, [pc, #136]	; 165f8 <XXH32_update@@Base+0x1b8>
   1656c:	ror	r2, r2, #19
   16570:	ror	r3, r3, #19
   16574:	ror	ip, ip, #19
   16578:	ror	r0, r0, #19
   1657c:	ldr	lr, [r4, #28]
   16580:	mul	r2, r1, r2
   16584:	mul	r3, r1, r3
   16588:	mul	r0, r1, r0
   1658c:	mul	r1, r1, ip
   16590:	rsb	ip, lr, #16
   16594:	add	r5, r5, ip
   16598:	mov	ip, #0
   1659c:	str	r0, [r4, #12]
   165a0:	strd	r2, [r4, #16]
   165a4:	str	r1, [r4, #24]
   165a8:	str	ip, [r4, #28]
   165ac:	b	16478 <XXH32_update@@Base+0x38>
   165b0:	sub	r6, r6, r5
   165b4:	mov	r1, r5
   165b8:	mov	r2, r6
   165bc:	add	r0, r4, #32
   165c0:	bl	11a20 <memcpy@plt>
   165c4:	str	r6, [r4, #28]
   165c8:	mov	r0, #0
   165cc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165d0:	add	r0, r4, #32
   165d4:	add	r0, r0, r3
   165d8:	mov	r7, r2
   165dc:	bl	11a20 <memcpy@plt>
   165e0:	ldr	r3, [r4, #28]
   165e4:	mov	r0, #0
   165e8:	add	r7, r3, r7
   165ec:	str	r7, [r4, #28]
   165f0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165f4:	strbhi	ip, [fp, #2679]!	; 0xa77
   165f8:			; <UNDEFINED> instruction: 0x9e3779b1

000165fc <XXH32_intermediateDigest@@Base>:
   165fc:	push	{r4, r5, r6, r7, lr}
   16600:	add	r1, r0, #32
   16604:	ldrd	r6, [r0]
   16608:	ldr	ip, [r0, #28]
   1660c:	cmp	r7, #0
   16610:	cmpeq	r6, #15
   16614:	add	ip, r1, ip
   16618:	ldrdhi	r2, [r0, #12]
   1661c:	ldrhi	lr, [r0, #20]
   16620:	ldrls	r3, [pc, #240]	; 16718 <XXH32_intermediateDigest@@Base+0x11c>
   16624:	rorhi	r3, r3, #25
   16628:	addhi	r3, r3, r2, ror #31
   1662c:	ldrhi	r2, [r0, #24]
   16630:	ldrls	r2, [r0, #8]
   16634:	addhi	r3, r3, lr, ror #20
   16638:	sub	r5, ip, #4
   1663c:	addhi	r3, r3, r2, ror #14
   16640:	addls	r3, r2, r3
   16644:	cmp	r1, r5
   16648:	add	r3, r3, r6
   1664c:	bhi	16688 <XXH32_intermediateDigest@@Base+0x8c>
   16650:	ldr	r6, [pc, #196]	; 1671c <XXH32_intermediateDigest@@Base+0x120>
   16654:	ldr	r4, [pc, #196]	; 16720 <XXH32_intermediateDigest@@Base+0x124>
   16658:	mov	lr, r1
   1665c:	ldr	r2, [lr], #4
   16660:	cmp	lr, r5
   16664:	mla	r3, r6, r2, r3
   16668:	ror	r3, r3, #15
   1666c:	mul	r3, r4, r3
   16670:	bls	1665c <XXH32_intermediateDigest@@Base+0x60>
   16674:	sub	r2, ip, r0
   16678:	sub	r2, r2, #36	; 0x24
   1667c:	bic	r2, r2, #3
   16680:	add	r2, r2, #4
   16684:	add	r1, r1, r2
   16688:	cmp	ip, r1
   1668c:	bls	166f8 <XXH32_intermediateDigest@@Base+0xfc>
   16690:	mov	r0, r1
   16694:	ldr	r4, [pc, #124]	; 16718 <XXH32_intermediateDigest@@Base+0x11c>
   16698:	ldrb	r2, [r0], #1
   1669c:	ldr	lr, [pc, #128]	; 16724 <XXH32_intermediateDigest@@Base+0x128>
   166a0:	cmp	ip, r0
   166a4:	mla	r3, r4, r2, r3
   166a8:	ror	r3, r3, #21
   166ac:	mul	r3, lr, r3
   166b0:	bls	166f8 <XXH32_intermediateDigest@@Base+0xfc>
   166b4:	ldrb	r2, [r1, #1]
   166b8:	add	r0, r1, #2
   166bc:	cmp	ip, r0
   166c0:	mla	r3, r4, r2, r3
   166c4:	ror	r3, r3, #21
   166c8:	mul	r3, lr, r3
   166cc:	bls	166f8 <XXH32_intermediateDigest@@Base+0xfc>
   166d0:	ldrb	r2, [r1, #2]
   166d4:	add	r0, r1, #3
   166d8:	cmp	ip, r0
   166dc:	mla	r3, r4, r2, r3
   166e0:	ldrbhi	r2, [r1, #3]
   166e4:	ror	r3, r3, #21
   166e8:	mul	r3, lr, r3
   166ec:	mlahi	r3, r4, r2, r3
   166f0:	rorhi	r3, r3, #21
   166f4:	mulhi	r3, lr, r3
   166f8:	ldr	r2, [pc, #40]	; 16728 <XXH32_intermediateDigest@@Base+0x12c>
   166fc:	eor	r3, r3, r3, lsr #15
   16700:	ldr	r0, [pc, #20]	; 1671c <XXH32_intermediateDigest@@Base+0x120>
   16704:	mul	r3, r2, r3
   16708:	eor	r3, r3, r3, lsr #13
   1670c:	mul	r0, r0, r3
   16710:	eor	r0, r0, r0, lsr #16
   16714:	pop	{r4, r5, r6, r7, pc}
   16718:			; <UNDEFINED> instruction: 0x165667b1
   1671c:	adcsgt	sl, r2, #976	; 0x3d0
   16720:	ldrbcs	lr, [r4, pc, lsr #22]
   16724:			; <UNDEFINED> instruction: 0x9e3779b1
   16728:	strbhi	ip, [fp, #2679]!	; 0xa77

0001672c <XXH32_digest@@Base>:
   1672c:	push	{r4, r5, r6, r7, r8, lr}
   16730:	add	r1, r0, #32
   16734:	ldrd	r6, [r0]
   16738:	ldr	ip, [r0, #28]
   1673c:	cmp	r7, #0
   16740:	cmpeq	r6, #15
   16744:	add	ip, r1, ip
   16748:	ldrdhi	r2, [r0, #12]
   1674c:	ldrhi	lr, [r0, #20]
   16750:	ldrls	r3, [pc, #248]	; 16850 <XXH32_digest@@Base+0x124>
   16754:	rorhi	r3, r3, #25
   16758:	addhi	r3, r3, r2, ror #31
   1675c:	ldrhi	r2, [r0, #24]
   16760:	ldrls	r2, [r0, #8]
   16764:	addhi	r3, r3, lr, ror #20
   16768:	sub	r5, ip, #4
   1676c:	addhi	r3, r3, r2, ror #14
   16770:	addls	r3, r2, r3
   16774:	cmp	r1, r5
   16778:	add	r3, r3, r6
   1677c:	bhi	167b8 <XXH32_digest@@Base+0x8c>
   16780:	ldr	r6, [pc, #204]	; 16854 <XXH32_digest@@Base+0x128>
   16784:	ldr	r4, [pc, #204]	; 16858 <XXH32_digest@@Base+0x12c>
   16788:	mov	lr, r1
   1678c:	ldr	r2, [lr], #4
   16790:	cmp	lr, r5
   16794:	mla	r3, r6, r2, r3
   16798:	ror	r3, r3, #15
   1679c:	mul	r3, r4, r3
   167a0:	bls	1678c <XXH32_digest@@Base+0x60>
   167a4:	sub	r2, ip, r0
   167a8:	sub	r2, r2, #36	; 0x24
   167ac:	bic	r2, r2, #3
   167b0:	add	r2, r2, #4
   167b4:	add	r1, r1, r2
   167b8:	cmp	ip, r1
   167bc:	bls	16828 <XXH32_digest@@Base+0xfc>
   167c0:	mov	lr, r1
   167c4:	ldr	r5, [pc, #132]	; 16850 <XXH32_digest@@Base+0x124>
   167c8:	ldrb	r2, [lr], #1
   167cc:	ldr	r4, [pc, #136]	; 1685c <XXH32_digest@@Base+0x130>
   167d0:	cmp	ip, lr
   167d4:	mla	r3, r5, r2, r3
   167d8:	ror	r3, r3, #21
   167dc:	mul	r3, r4, r3
   167e0:	bls	16828 <XXH32_digest@@Base+0xfc>
   167e4:	ldrb	r2, [r1, #1]
   167e8:	add	lr, r1, #2
   167ec:	cmp	ip, lr
   167f0:	mla	r3, r5, r2, r3
   167f4:	ror	r3, r3, #21
   167f8:	mul	r3, r4, r3
   167fc:	bls	16828 <XXH32_digest@@Base+0xfc>
   16800:	ldrb	r2, [r1, #2]
   16804:	add	lr, r1, #3
   16808:	cmp	ip, lr
   1680c:	mla	r3, r5, r2, r3
   16810:	ldrbhi	r2, [r1, #3]
   16814:	ror	r3, r3, #21
   16818:	mul	r3, r4, r3
   1681c:	mlahi	r3, r5, r2, r3
   16820:	rorhi	r3, r3, #21
   16824:	mulhi	r3, r4, r3
   16828:	ldr	r2, [pc, #48]	; 16860 <XXH32_digest@@Base+0x134>
   1682c:	eor	r3, r3, r3, lsr #15
   16830:	ldr	r4, [pc, #28]	; 16854 <XXH32_digest@@Base+0x128>
   16834:	mul	r3, r2, r3
   16838:	eor	r3, r3, r3, lsr #13
   1683c:	mul	r4, r4, r3
   16840:	bl	119fc <free@plt>
   16844:	lsr	r0, r4, #16
   16848:	eor	r0, r0, r4
   1684c:	pop	{r4, r5, r6, r7, r8, pc}
   16850:			; <UNDEFINED> instruction: 0x165667b1
   16854:	adcsgt	sl, r2, #976	; 0x3d0
   16858:	ldrbcs	lr, [r4, pc, lsr #22]
   1685c:			; <UNDEFINED> instruction: 0x9e3779b1
   16860:	strbhi	ip, [fp, #2679]!	; 0xa77

00016864 <murmurhash3@@Base>:
   16864:	push	{r4, r5, r6, r7, lr}
   16868:	lsr	r6, r1, #2
   1686c:	cmp	r6, #0
   16870:	lsl	lr, r6, #2
   16874:	addeq	lr, r0, lr
   16878:	beq	168c0 <murmurhash3@@Base+0x5c>
   1687c:	rsb	ip, r6, r6, lsl #30
   16880:	ldr	r7, [pc, #188]	; 16944 <murmurhash3@@Base+0xe0>
   16884:	add	ip, lr, ip, lsl #2
   16888:	ldr	r5, [pc, #184]	; 16948 <murmurhash3@@Base+0xe4>
   1688c:	ldr	r4, [pc, #184]	; 1694c <murmurhash3@@Base+0xe8>
   16890:	add	ip, r0, ip
   16894:	add	lr, r0, lr
   16898:	ldr	r3, [ip], #4
   1689c:	cmp	lr, ip
   168a0:	mul	r3, r7, r3
   168a4:	ror	r3, r3, #17
   168a8:	mul	r3, r5, r3
   168ac:	eor	r2, r2, r3
   168b0:	ror	r2, r2, #19
   168b4:	add	r2, r2, r2, lsl #2
   168b8:	add	r2, r2, r4
   168bc:	bne	16898 <murmurhash3@@Base+0x34>
   168c0:	and	r3, r1, #3
   168c4:	cmp	r3, #2
   168c8:	beq	1693c <murmurhash3@@Base+0xd8>
   168cc:	cmp	r3, #3
   168d0:	beq	16928 <murmurhash3@@Base+0xc4>
   168d4:	cmp	r3, #1
   168d8:	beq	16900 <murmurhash3@@Base+0x9c>
   168dc:	eor	r2, r2, r1
   168e0:	ldr	r1, [pc, #104]	; 16950 <murmurhash3@@Base+0xec>
   168e4:	eor	r2, r2, r2, lsr #16
   168e8:	ldr	r0, [pc, #100]	; 16954 <murmurhash3@@Base+0xf0>
   168ec:	mul	r2, r1, r2
   168f0:	eor	r2, r2, r2, lsr #13
   168f4:	mul	r0, r0, r2
   168f8:	eor	r0, r0, r0, lsr #16
   168fc:	pop	{r4, r5, r6, r7, pc}
   16900:	mov	ip, #0
   16904:	ldrb	lr, [r0, r6, lsl #2]
   16908:	ldr	r3, [pc, #52]	; 16944 <murmurhash3@@Base+0xe0>
   1690c:	ldr	r0, [pc, #52]	; 16948 <murmurhash3@@Base+0xe4>
   16910:	eor	ip, ip, lr
   16914:	mul	r3, r3, ip
   16918:	ror	r3, r3, #17
   1691c:	mul	r3, r0, r3
   16920:	eor	r2, r2, r3
   16924:	b	168dc <murmurhash3@@Base+0x78>
   16928:	ldrb	ip, [lr, #2]
   1692c:	lsl	ip, ip, #16
   16930:	ldrb	r3, [lr, #1]
   16934:	orr	ip, ip, r3, lsl #8
   16938:	b	16904 <murmurhash3@@Base+0xa0>
   1693c:	mov	ip, #0
   16940:	b	16930 <murmurhash3@@Base+0xcc>
   16944:	ldcgt	13, cr2, [lr], {81}	; 0x51
   16948:	blne	fe1e3f9c <__bss_end__@@Base+0xfe1babf0>
   1694c:	ldrb	r6, [r4], -r4, ror #22
   16950:	strbhi	ip, [fp, #2667]!	; 0xa6b
   16954:	adcsgt	sl, r2, #848	; 0x350

00016958 <crc32c_sw@@Base>:
   16958:	cmp	r1, #0
   1695c:	beq	16990 <crc32c_sw@@Base+0x38>
   16960:	ldr	ip, [pc, #52]	; 1699c <crc32c_sw@@Base+0x44>
   16964:	add	r1, r0, r1
   16968:	mvn	r2, #0
   1696c:	ldrb	r3, [r0], #1
   16970:	eor	r3, r3, r2
   16974:	cmp	r0, r1
   16978:	uxtb	r3, r3
   1697c:	ldr	r3, [ip, r3, lsl #2]
   16980:	eor	r2, r3, r2, lsr #8
   16984:	bne	1696c <crc32c_sw@@Base+0x14>
   16988:	mov	r0, r2
   1698c:	bx	lr
   16990:	mvn	r2, #0
   16994:	mov	r0, r2
   16998:	bx	lr
   1699c:	andeq	r7, r1, r0, ror #20

000169a0 <fnv@@Base>:
   169a0:	subs	ip, r1, #0
   169a4:	beq	16abc <fnv@@Base+0x11c>
   169a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   169ac:	lsl	r1, r2, #8
   169b0:	ldr	lr, [pc, #272]	; 16ac8 <fnv@@Base+0x128>
   169b4:	cmp	ip, #7
   169b8:	umull	r6, r7, r2, lr
   169bc:	mla	r3, lr, r3, r1
   169c0:	add	r7, r3, r7
   169c4:	bhi	16a88 <fnv@@Base+0xe8>
   169c8:	cmp	ip, #1
   169cc:	ldrb	r4, [r0]
   169d0:	mov	r5, #0
   169d4:	beq	16a78 <fnv@@Base+0xd8>
   169d8:	ldrb	r8, [r0, #1]
   169dc:	lsr	r3, r4, #24
   169e0:	cmp	ip, #2
   169e4:	mov	r9, #0
   169e8:	orr	r4, r8, r4, lsl #8
   169ec:	mov	r5, r3
   169f0:	beq	16a78 <fnv@@Base+0xd8>
   169f4:	ldrb	r2, [r0, #2]
   169f8:	lsl	r1, r3, #8
   169fc:	orr	r1, r1, r4, lsr #24
   16a00:	cmp	ip, #3
   16a04:	orr	r4, r2, r4, lsl #8
   16a08:	mov	r5, r1
   16a0c:	beq	16a78 <fnv@@Base+0xd8>
   16a10:	ldrb	r2, [r0, #3]
   16a14:	lsl	r1, r1, #8
   16a18:	orr	r1, r1, r4, lsr #24
   16a1c:	cmp	ip, #4
   16a20:	orr	r4, r2, r4, lsl #8
   16a24:	mov	r5, r1
   16a28:	beq	16a78 <fnv@@Base+0xd8>
   16a2c:	ldrb	r2, [r0, #4]
   16a30:	lsl	r1, r1, #8
   16a34:	orr	r1, r1, r4, lsr #24
   16a38:	cmp	ip, #5
   16a3c:	orr	r4, r2, r4, lsl #8
   16a40:	mov	r5, r1
   16a44:	beq	16a78 <fnv@@Base+0xd8>
   16a48:	ldrb	r2, [r0, #5]
   16a4c:	lsl	r1, r1, #8
   16a50:	orr	r1, r1, r4, lsr #24
   16a54:	cmp	ip, #7
   16a58:	orr	r4, r2, r4, lsl #8
   16a5c:	mov	r5, r1
   16a60:	bne	16a78 <fnv@@Base+0xd8>
   16a64:	ldrb	r0, [r0, #6]
   16a68:	lsl	r3, r1, #8
   16a6c:	orr	r3, r3, r4, lsr #24
   16a70:	mov	r5, r3
   16a74:	orr	r4, r0, r4, lsl #8
   16a78:	eor	r2, r6, r4
   16a7c:	eor	r1, r7, r5
   16a80:	mov	r0, r2
   16a84:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16a88:	ldr	r2, [r0], #8
   16a8c:	subs	ip, ip, #8
   16a90:	eor	r2, r2, r6
   16a94:	ldr	r3, [r0, #-4]
   16a98:	lsl	r4, r2, #8
   16a9c:	eor	r1, r7, r3
   16aa0:	umull	r6, r7, r2, lr
   16aa4:	beq	16a80 <fnv@@Base+0xe0>
   16aa8:	mla	r3, lr, r1, r4
   16aac:	cmp	ip, #7
   16ab0:	add	r7, r3, r7
   16ab4:	bls	169c8 <fnv@@Base+0x28>
   16ab8:	b	16a88 <fnv@@Base+0xe8>
   16abc:	mov	r1, r3
   16ac0:	mov	r0, r2
   16ac4:	bx	lr
   16ac8:			; <UNDEFINED> instruction: 0x000001b3
   16acc:	subs	r2, r1, #1
   16ad0:	bxeq	lr
   16ad4:	bcc	16cac <fnv@@Base+0x30c>
   16ad8:	cmp	r0, r1
   16adc:	bls	16c90 <fnv@@Base+0x2f0>
   16ae0:	tst	r1, r2
   16ae4:	beq	16c9c <fnv@@Base+0x2fc>
   16ae8:	clz	r3, r0
   16aec:	clz	r2, r1
   16af0:	sub	r3, r2, r3
   16af4:	rsbs	r3, r3, #31
   16af8:	addne	r3, r3, r3, lsl #1
   16afc:	mov	r2, #0
   16b00:	addne	pc, pc, r3, lsl #2
   16b04:	nop			; (mov r0, r0)
   16b08:	cmp	r0, r1, lsl #31
   16b0c:	adc	r2, r2, r2
   16b10:	subcs	r0, r0, r1, lsl #31
   16b14:	cmp	r0, r1, lsl #30
   16b18:	adc	r2, r2, r2
   16b1c:	subcs	r0, r0, r1, lsl #30
   16b20:	cmp	r0, r1, lsl #29
   16b24:	adc	r2, r2, r2
   16b28:	subcs	r0, r0, r1, lsl #29
   16b2c:	cmp	r0, r1, lsl #28
   16b30:	adc	r2, r2, r2
   16b34:	subcs	r0, r0, r1, lsl #28
   16b38:	cmp	r0, r1, lsl #27
   16b3c:	adc	r2, r2, r2
   16b40:	subcs	r0, r0, r1, lsl #27
   16b44:	cmp	r0, r1, lsl #26
   16b48:	adc	r2, r2, r2
   16b4c:	subcs	r0, r0, r1, lsl #26
   16b50:	cmp	r0, r1, lsl #25
   16b54:	adc	r2, r2, r2
   16b58:	subcs	r0, r0, r1, lsl #25
   16b5c:	cmp	r0, r1, lsl #24
   16b60:	adc	r2, r2, r2
   16b64:	subcs	r0, r0, r1, lsl #24
   16b68:	cmp	r0, r1, lsl #23
   16b6c:	adc	r2, r2, r2
   16b70:	subcs	r0, r0, r1, lsl #23
   16b74:	cmp	r0, r1, lsl #22
   16b78:	adc	r2, r2, r2
   16b7c:	subcs	r0, r0, r1, lsl #22
   16b80:	cmp	r0, r1, lsl #21
   16b84:	adc	r2, r2, r2
   16b88:	subcs	r0, r0, r1, lsl #21
   16b8c:	cmp	r0, r1, lsl #20
   16b90:	adc	r2, r2, r2
   16b94:	subcs	r0, r0, r1, lsl #20
   16b98:	cmp	r0, r1, lsl #19
   16b9c:	adc	r2, r2, r2
   16ba0:	subcs	r0, r0, r1, lsl #19
   16ba4:	cmp	r0, r1, lsl #18
   16ba8:	adc	r2, r2, r2
   16bac:	subcs	r0, r0, r1, lsl #18
   16bb0:	cmp	r0, r1, lsl #17
   16bb4:	adc	r2, r2, r2
   16bb8:	subcs	r0, r0, r1, lsl #17
   16bbc:	cmp	r0, r1, lsl #16
   16bc0:	adc	r2, r2, r2
   16bc4:	subcs	r0, r0, r1, lsl #16
   16bc8:	cmp	r0, r1, lsl #15
   16bcc:	adc	r2, r2, r2
   16bd0:	subcs	r0, r0, r1, lsl #15
   16bd4:	cmp	r0, r1, lsl #14
   16bd8:	adc	r2, r2, r2
   16bdc:	subcs	r0, r0, r1, lsl #14
   16be0:	cmp	r0, r1, lsl #13
   16be4:	adc	r2, r2, r2
   16be8:	subcs	r0, r0, r1, lsl #13
   16bec:	cmp	r0, r1, lsl #12
   16bf0:	adc	r2, r2, r2
   16bf4:	subcs	r0, r0, r1, lsl #12
   16bf8:	cmp	r0, r1, lsl #11
   16bfc:	adc	r2, r2, r2
   16c00:	subcs	r0, r0, r1, lsl #11
   16c04:	cmp	r0, r1, lsl #10
   16c08:	adc	r2, r2, r2
   16c0c:	subcs	r0, r0, r1, lsl #10
   16c10:	cmp	r0, r1, lsl #9
   16c14:	adc	r2, r2, r2
   16c18:	subcs	r0, r0, r1, lsl #9
   16c1c:	cmp	r0, r1, lsl #8
   16c20:	adc	r2, r2, r2
   16c24:	subcs	r0, r0, r1, lsl #8
   16c28:	cmp	r0, r1, lsl #7
   16c2c:	adc	r2, r2, r2
   16c30:	subcs	r0, r0, r1, lsl #7
   16c34:	cmp	r0, r1, lsl #6
   16c38:	adc	r2, r2, r2
   16c3c:	subcs	r0, r0, r1, lsl #6
   16c40:	cmp	r0, r1, lsl #5
   16c44:	adc	r2, r2, r2
   16c48:	subcs	r0, r0, r1, lsl #5
   16c4c:	cmp	r0, r1, lsl #4
   16c50:	adc	r2, r2, r2
   16c54:	subcs	r0, r0, r1, lsl #4
   16c58:	cmp	r0, r1, lsl #3
   16c5c:	adc	r2, r2, r2
   16c60:	subcs	r0, r0, r1, lsl #3
   16c64:	cmp	r0, r1, lsl #2
   16c68:	adc	r2, r2, r2
   16c6c:	subcs	r0, r0, r1, lsl #2
   16c70:	cmp	r0, r1, lsl #1
   16c74:	adc	r2, r2, r2
   16c78:	subcs	r0, r0, r1, lsl #1
   16c7c:	cmp	r0, r1
   16c80:	adc	r2, r2, r2
   16c84:	subcs	r0, r0, r1
   16c88:	mov	r0, r2
   16c8c:	bx	lr
   16c90:	moveq	r0, #1
   16c94:	movne	r0, #0
   16c98:	bx	lr
   16c9c:	clz	r2, r1
   16ca0:	rsb	r2, r2, #31
   16ca4:	lsr	r0, r0, r2
   16ca8:	bx	lr
   16cac:	cmp	r0, #0
   16cb0:	mvnne	r0, #0
   16cb4:	b	171a8 <fnv@@Base+0x808>
   16cb8:	cmp	r1, #0
   16cbc:	beq	16cac <fnv@@Base+0x30c>
   16cc0:	push	{r0, r1, lr}
   16cc4:	bl	16acc <fnv@@Base+0x12c>
   16cc8:	pop	{r1, r2, lr}
   16ccc:	mul	r3, r2, r0
   16cd0:	sub	r1, r1, r3
   16cd4:	bx	lr
   16cd8:	eor	r1, r1, #-2147483648	; 0x80000000
   16cdc:	b	16ce4 <fnv@@Base+0x344>
   16ce0:	eor	r3, r3, #-2147483648	; 0x80000000
   16ce4:	push	{r4, r5, lr}
   16ce8:	lsl	r4, r1, #1
   16cec:	lsl	r5, r3, #1
   16cf0:	teq	r4, r5
   16cf4:	teqeq	r0, r2
   16cf8:	orrsne	ip, r4, r0
   16cfc:	orrsne	ip, r5, r2
   16d00:	mvnsne	ip, r4, asr #21
   16d04:	mvnsne	ip, r5, asr #21
   16d08:	beq	16ef4 <fnv@@Base+0x554>
   16d0c:	lsr	r4, r4, #21
   16d10:	rsbs	r5, r4, r5, lsr #21
   16d14:	rsblt	r5, r5, #0
   16d18:	ble	16d38 <fnv@@Base+0x398>
   16d1c:	add	r4, r4, r5
   16d20:	eor	r2, r0, r2
   16d24:	eor	r3, r1, r3
   16d28:	eor	r0, r2, r0
   16d2c:	eor	r1, r3, r1
   16d30:	eor	r2, r0, r2
   16d34:	eor	r3, r1, r3
   16d38:	cmp	r5, #54	; 0x36
   16d3c:	pophi	{r4, r5, pc}
   16d40:	tst	r1, #-2147483648	; 0x80000000
   16d44:	lsl	r1, r1, #12
   16d48:	mov	ip, #1048576	; 0x100000
   16d4c:	orr	r1, ip, r1, lsr #12
   16d50:	beq	16d5c <fnv@@Base+0x3bc>
   16d54:	rsbs	r0, r0, #0
   16d58:	rsc	r1, r1, #0
   16d5c:	tst	r3, #-2147483648	; 0x80000000
   16d60:	lsl	r3, r3, #12
   16d64:	orr	r3, ip, r3, lsr #12
   16d68:	beq	16d74 <fnv@@Base+0x3d4>
   16d6c:	rsbs	r2, r2, #0
   16d70:	rsc	r3, r3, #0
   16d74:	teq	r4, r5
   16d78:	beq	16edc <fnv@@Base+0x53c>
   16d7c:	sub	r4, r4, #1
   16d80:	rsbs	lr, r5, #32
   16d84:	blt	16da0 <fnv@@Base+0x400>
   16d88:	lsl	ip, r2, lr
   16d8c:	adds	r0, r0, r2, lsr r5
   16d90:	adc	r1, r1, #0
   16d94:	adds	r0, r0, r3, lsl lr
   16d98:	adcs	r1, r1, r3, asr r5
   16d9c:	b	16dbc <fnv@@Base+0x41c>
   16da0:	sub	r5, r5, #32
   16da4:	add	lr, lr, #32
   16da8:	cmp	r2, #1
   16dac:	lsl	ip, r3, lr
   16db0:	orrcs	ip, ip, #2
   16db4:	adds	r0, r0, r3, asr r5
   16db8:	adcs	r1, r1, r3, asr #31
   16dbc:	and	r5, r1, #-2147483648	; 0x80000000
   16dc0:	bpl	16dd0 <fnv@@Base+0x430>
   16dc4:	rsbs	ip, ip, #0
   16dc8:	rscs	r0, r0, #0
   16dcc:	rsc	r1, r1, #0
   16dd0:	cmp	r1, #1048576	; 0x100000
   16dd4:	bcc	16e14 <fnv@@Base+0x474>
   16dd8:	cmp	r1, #2097152	; 0x200000
   16ddc:	bcc	16dfc <fnv@@Base+0x45c>
   16de0:	lsrs	r1, r1, #1
   16de4:	rrxs	r0, r0
   16de8:	rrx	ip, ip
   16dec:	add	r4, r4, #1
   16df0:	lsl	r2, r4, #21
   16df4:	cmn	r2, #4194304	; 0x400000
   16df8:	bcs	16f54 <fnv@@Base+0x5b4>
   16dfc:	cmp	ip, #-2147483648	; 0x80000000
   16e00:	lsrseq	ip, r0, #1
   16e04:	adcs	r0, r0, #0
   16e08:	adc	r1, r1, r4, lsl #20
   16e0c:	orr	r1, r1, r5
   16e10:	pop	{r4, r5, pc}
   16e14:	lsls	ip, ip, #1
   16e18:	adcs	r0, r0, r0
   16e1c:	adc	r1, r1, r1
   16e20:	tst	r1, #1048576	; 0x100000
   16e24:	sub	r4, r4, #1
   16e28:	bne	16dfc <fnv@@Base+0x45c>
   16e2c:	teq	r1, #0
   16e30:	moveq	r1, r0
   16e34:	moveq	r0, #0
   16e38:	clz	r3, r1
   16e3c:	addeq	r3, r3, #32
   16e40:	sub	r3, r3, #11
   16e44:	subs	r2, r3, #32
   16e48:	bge	16e6c <fnv@@Base+0x4cc>
   16e4c:	adds	r2, r2, #12
   16e50:	ble	16e68 <fnv@@Base+0x4c8>
   16e54:	add	ip, r2, #20
   16e58:	rsb	r2, r2, #12
   16e5c:	lsl	r0, r1, ip
   16e60:	lsr	r1, r1, r2
   16e64:	b	16e7c <fnv@@Base+0x4dc>
   16e68:	add	r2, r2, #20
   16e6c:	rsble	ip, r2, #32
   16e70:	lsl	r1, r1, r2
   16e74:	orrle	r1, r1, r0, lsr ip
   16e78:	lslle	r0, r0, r2
   16e7c:	subs	r4, r4, r3
   16e80:	addge	r1, r1, r4, lsl #20
   16e84:	orrge	r1, r1, r5
   16e88:	popge	{r4, r5, pc}
   16e8c:	mvn	r4, r4
   16e90:	subs	r4, r4, #31
   16e94:	bge	16ed0 <fnv@@Base+0x530>
   16e98:	adds	r4, r4, #12
   16e9c:	bgt	16eb8 <fnv@@Base+0x518>
   16ea0:	add	r4, r4, #20
   16ea4:	rsb	r2, r4, #32
   16ea8:	lsr	r0, r0, r4
   16eac:	orr	r0, r0, r1, lsl r2
   16eb0:	orr	r1, r5, r1, lsr r4
   16eb4:	pop	{r4, r5, pc}
   16eb8:	rsb	r4, r4, #12
   16ebc:	rsb	r2, r4, #32
   16ec0:	lsr	r0, r0, r2
   16ec4:	orr	r0, r0, r1, lsl r4
   16ec8:	mov	r1, r5
   16ecc:	pop	{r4, r5, pc}
   16ed0:	lsr	r0, r1, r4
   16ed4:	mov	r1, r5
   16ed8:	pop	{r4, r5, pc}
   16edc:	teq	r4, #0
   16ee0:	eor	r3, r3, #1048576	; 0x100000
   16ee4:	eoreq	r1, r1, #1048576	; 0x100000
   16ee8:	addeq	r4, r4, #1
   16eec:	subne	r5, r5, #1
   16ef0:	b	16d7c <fnv@@Base+0x3dc>
   16ef4:	mvns	ip, r4, asr #21
   16ef8:	mvnsne	ip, r5, asr #21
   16efc:	beq	16f64 <fnv@@Base+0x5c4>
   16f00:	teq	r4, r5
   16f04:	teqeq	r0, r2
   16f08:	beq	16f1c <fnv@@Base+0x57c>
   16f0c:	orrs	ip, r4, r0
   16f10:	moveq	r1, r3
   16f14:	moveq	r0, r2
   16f18:	pop	{r4, r5, pc}
   16f1c:	teq	r1, r3
   16f20:	movne	r1, #0
   16f24:	movne	r0, #0
   16f28:	popne	{r4, r5, pc}
   16f2c:	lsrs	ip, r4, #21
   16f30:	bne	16f44 <fnv@@Base+0x5a4>
   16f34:	lsls	r0, r0, #1
   16f38:	adcs	r1, r1, r1
   16f3c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   16f40:	pop	{r4, r5, pc}
   16f44:	adds	r4, r4, #4194304	; 0x400000
   16f48:	addcc	r1, r1, #1048576	; 0x100000
   16f4c:	popcc	{r4, r5, pc}
   16f50:	and	r5, r1, #-2147483648	; 0x80000000
   16f54:	orr	r1, r5, #2130706432	; 0x7f000000
   16f58:	orr	r1, r1, #15728640	; 0xf00000
   16f5c:	mov	r0, #0
   16f60:	pop	{r4, r5, pc}
   16f64:	mvns	ip, r4, asr #21
   16f68:	movne	r1, r3
   16f6c:	movne	r0, r2
   16f70:	mvnseq	ip, r5, asr #21
   16f74:	movne	r3, r1
   16f78:	movne	r2, r0
   16f7c:	orrs	r4, r0, r1, lsl #12
   16f80:	orrseq	r5, r2, r3, lsl #12
   16f84:	teqeq	r1, r3
   16f88:	orrne	r1, r1, #524288	; 0x80000
   16f8c:	pop	{r4, r5, pc}
   16f90:	teq	r0, #0
   16f94:	moveq	r1, #0
   16f98:	bxeq	lr
   16f9c:	push	{r4, r5, lr}
   16fa0:	mov	r4, #1024	; 0x400
   16fa4:	add	r4, r4, #50	; 0x32
   16fa8:	mov	r5, #0
   16fac:	mov	r1, #0
   16fb0:	b	16e2c <fnv@@Base+0x48c>
   16fb4:	teq	r0, #0
   16fb8:	moveq	r1, #0
   16fbc:	bxeq	lr
   16fc0:	push	{r4, r5, lr}
   16fc4:	mov	r4, #1024	; 0x400
   16fc8:	add	r4, r4, #50	; 0x32
   16fcc:	ands	r5, r0, #-2147483648	; 0x80000000
   16fd0:	rsbmi	r0, r0, #0
   16fd4:	mov	r1, #0
   16fd8:	b	16e2c <fnv@@Base+0x48c>
   16fdc:	lsls	r2, r0, #1
   16fe0:	asr	r1, r2, #3
   16fe4:	rrx	r1, r1
   16fe8:	lsl	r0, r2, #28
   16fec:	andsne	r3, r2, #-16777216	; 0xff000000
   16ff0:	teqne	r3, #-16777216	; 0xff000000
   16ff4:	eorne	r1, r1, #939524096	; 0x38000000
   16ff8:	bxne	lr
   16ffc:	bics	r2, r2, #-16777216	; 0xff000000
   17000:	bxeq	lr
   17004:	teq	r3, #-16777216	; 0xff000000
   17008:	orreq	r1, r1, #524288	; 0x80000
   1700c:	bxeq	lr
   17010:	push	{r4, r5, lr}
   17014:	mov	r4, #896	; 0x380
   17018:	and	r5, r1, #-2147483648	; 0x80000000
   1701c:	bic	r1, r1, #-2147483648	; 0x80000000
   17020:	b	16e2c <fnv@@Base+0x48c>
   17024:	orrs	r2, r0, r1
   17028:	bxeq	lr
   1702c:	push	{r4, r5, lr}
   17030:	mov	r5, #0
   17034:	b	17054 <fnv@@Base+0x6b4>
   17038:	orrs	r2, r0, r1
   1703c:	bxeq	lr
   17040:	push	{r4, r5, lr}
   17044:	ands	r5, r1, #-2147483648	; 0x80000000
   17048:	bpl	17054 <fnv@@Base+0x6b4>
   1704c:	rsbs	r0, r0, #0
   17050:	rsc	r1, r1, #0
   17054:	mov	r4, #1024	; 0x400
   17058:	add	r4, r4, #50	; 0x32
   1705c:	lsrs	ip, r1, #22
   17060:	beq	16dd0 <fnv@@Base+0x430>
   17064:	mov	r2, #3
   17068:	lsrs	ip, ip, #3
   1706c:	addne	r2, r2, #3
   17070:	lsrs	ip, ip, #3
   17074:	addne	r2, r2, #3
   17078:	add	r2, r2, ip, lsr #3
   1707c:	rsb	r3, r2, #32
   17080:	lsl	ip, r0, r3
   17084:	lsr	r0, r0, r2
   17088:	orr	r0, r0, r1, lsl r3
   1708c:	lsr	r1, r1, r2
   17090:	add	r4, r4, r2
   17094:	b	16dd0 <fnv@@Base+0x430>
   17098:	cmp	r3, #0
   1709c:	cmpeq	r2, #0
   170a0:	bne	170c4 <fnv@@Base+0x724>
   170a4:	cmp	r1, #0
   170a8:	movlt	r1, #-2147483648	; 0x80000000
   170ac:	movlt	r0, #0
   170b0:	blt	170c0 <fnv@@Base+0x720>
   170b4:	cmpeq	r0, #0
   170b8:	mvnne	r1, #-2147483648	; 0x80000000
   170bc:	mvnne	r0, #0
   170c0:	b	171a8 <fnv@@Base+0x808>
   170c4:	sub	sp, sp, #8
   170c8:	push	{sp, lr}
   170cc:	cmp	r1, #0
   170d0:	blt	170f0 <fnv@@Base+0x750>
   170d4:	cmp	r3, #0
   170d8:	blt	17124 <fnv@@Base+0x784>
   170dc:	bl	171b8 <fnv@@Base+0x818>
   170e0:	ldr	lr, [sp, #4]
   170e4:	add	sp, sp, #8
   170e8:	pop	{r2, r3}
   170ec:	bx	lr
   170f0:	rsbs	r0, r0, #0
   170f4:	sbc	r1, r1, r1, lsl #1
   170f8:	cmp	r3, #0
   170fc:	blt	17148 <fnv@@Base+0x7a8>
   17100:	bl	171b8 <fnv@@Base+0x818>
   17104:	ldr	lr, [sp, #4]
   17108:	add	sp, sp, #8
   1710c:	pop	{r2, r3}
   17110:	rsbs	r0, r0, #0
   17114:	sbc	r1, r1, r1, lsl #1
   17118:	rsbs	r2, r2, #0
   1711c:	sbc	r3, r3, r3, lsl #1
   17120:	bx	lr
   17124:	rsbs	r2, r2, #0
   17128:	sbc	r3, r3, r3, lsl #1
   1712c:	bl	171b8 <fnv@@Base+0x818>
   17130:	ldr	lr, [sp, #4]
   17134:	add	sp, sp, #8
   17138:	pop	{r2, r3}
   1713c:	rsbs	r0, r0, #0
   17140:	sbc	r1, r1, r1, lsl #1
   17144:	bx	lr
   17148:	rsbs	r2, r2, #0
   1714c:	sbc	r3, r3, r3, lsl #1
   17150:	bl	171b8 <fnv@@Base+0x818>
   17154:	ldr	lr, [sp, #4]
   17158:	add	sp, sp, #8
   1715c:	pop	{r2, r3}
   17160:	rsbs	r2, r2, #0
   17164:	sbc	r3, r3, r3, lsl #1
   17168:	bx	lr
   1716c:	cmp	r3, #0
   17170:	cmpeq	r2, #0
   17174:	bne	1718c <fnv@@Base+0x7ec>
   17178:	cmp	r1, #0
   1717c:	cmpeq	r0, #0
   17180:	mvnne	r1, #0
   17184:	mvnne	r0, #0
   17188:	b	171a8 <fnv@@Base+0x808>
   1718c:	sub	sp, sp, #8
   17190:	push	{sp, lr}
   17194:	bl	171b8 <fnv@@Base+0x818>
   17198:	ldr	lr, [sp, #4]
   1719c:	add	sp, sp, #8
   171a0:	pop	{r2, r3}
   171a4:	bx	lr
   171a8:	push	{r1, lr}
   171ac:	mov	r0, #8
   171b0:	bl	119b4 <raise@plt>
   171b4:	pop	{r1, pc}
   171b8:	cmp	r1, r3
   171bc:	cmpeq	r0, r2
   171c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   171c4:	mov	r4, r0
   171c8:	movcc	r0, #0
   171cc:	mov	r5, r1
   171d0:	ldr	lr, [sp, #36]	; 0x24
   171d4:	movcc	r1, r0
   171d8:	bcc	172d4 <fnv@@Base+0x934>
   171dc:	cmp	r3, #0
   171e0:	clzeq	ip, r2
   171e4:	clzne	ip, r3
   171e8:	addeq	ip, ip, #32
   171ec:	cmp	r5, #0
   171f0:	clzeq	r1, r4
   171f4:	addeq	r1, r1, #32
   171f8:	clzne	r1, r5
   171fc:	sub	ip, ip, r1
   17200:	sub	sl, ip, #32
   17204:	lsl	r9, r3, ip
   17208:	rsb	fp, ip, #32
   1720c:	orr	r9, r9, r2, lsl sl
   17210:	orr	r9, r9, r2, lsr fp
   17214:	lsl	r8, r2, ip
   17218:	cmp	r5, r9
   1721c:	cmpeq	r4, r8
   17220:	movcc	r0, #0
   17224:	movcc	r1, r0
   17228:	bcc	17244 <fnv@@Base+0x8a4>
   1722c:	mov	r0, #1
   17230:	subs	r4, r4, r8
   17234:	lsl	r1, r0, sl
   17238:	orr	r1, r1, r0, lsr fp
   1723c:	lsl	r0, r0, ip
   17240:	sbc	r5, r5, r9
   17244:	cmp	ip, #0
   17248:	beq	172d4 <fnv@@Base+0x934>
   1724c:	lsr	r6, r8, #1
   17250:	orr	r6, r6, r9, lsl #31
   17254:	lsr	r7, r9, #1
   17258:	mov	r2, ip
   1725c:	b	17280 <fnv@@Base+0x8e0>
   17260:	subs	r3, r4, r6
   17264:	sbc	r8, r5, r7
   17268:	adds	r3, r3, r3
   1726c:	adc	r8, r8, r8
   17270:	adds	r4, r3, #1
   17274:	adc	r5, r8, #0
   17278:	subs	r2, r2, #1
   1727c:	beq	1729c <fnv@@Base+0x8fc>
   17280:	cmp	r5, r7
   17284:	cmpeq	r4, r6
   17288:	bcs	17260 <fnv@@Base+0x8c0>
   1728c:	adds	r4, r4, r4
   17290:	adc	r5, r5, r5
   17294:	subs	r2, r2, #1
   17298:	bne	17280 <fnv@@Base+0x8e0>
   1729c:	lsr	r3, r4, ip
   172a0:	orr	r3, r3, r5, lsl fp
   172a4:	lsr	r2, r5, ip
   172a8:	orr	r3, r3, r5, lsr sl
   172ac:	adds	r0, r0, r4
   172b0:	mov	r4, r3
   172b4:	lsl	r3, r2, ip
   172b8:	orr	r3, r3, r4, lsl sl
   172bc:	lsl	ip, r4, ip
   172c0:	orr	r3, r3, r4, lsr fp
   172c4:	adc	r1, r1, r5
   172c8:	subs	r0, r0, ip
   172cc:	mov	r5, r2
   172d0:	sbc	r1, r1, r3
   172d4:	cmp	lr, #0
   172d8:	strdne	r4, [lr]
   172dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000172e0 <__libc_csu_init@@Base>:
   172e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   172e4:	mov	r7, r0
   172e8:	ldr	r6, [pc, #72]	; 17338 <__libc_csu_init@@Base+0x58>
   172ec:	ldr	r5, [pc, #72]	; 1733c <__libc_csu_init@@Base+0x5c>
   172f0:	add	r6, pc, r6
   172f4:	add	r5, pc, r5
   172f8:	sub	r6, r6, r5
   172fc:	mov	r8, r1
   17300:	mov	r9, r2
   17304:	bl	1197c <pthread_mutex_unlock@plt-0x20>
   17308:	asrs	r6, r6, #2
   1730c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17310:	mov	r4, #0
   17314:	add	r4, r4, #1
   17318:	ldr	r3, [r5], #4
   1731c:	mov	r2, r9
   17320:	mov	r1, r8
   17324:	mov	r0, r7
   17328:	blx	r3
   1732c:	cmp	r6, r4
   17330:	bne	17314 <__libc_csu_init@@Base+0x34>
   17334:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17338:	andeq	r1, r1, r4, lsl fp
   1733c:	andeq	r1, r1, r8, lsl #22

00017340 <__libc_csu_fini@@Base>:
   17340:	bx	lr

Disassembly of section .fini:

00017344 <.fini>:
   17344:	push	{r3, lr}
   17348:	pop	{r3, pc}
