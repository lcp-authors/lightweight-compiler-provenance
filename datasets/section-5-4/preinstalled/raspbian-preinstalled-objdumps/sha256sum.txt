
raspbian-preinstalled/sha256sum:     file format elf32-littlearm


Disassembly of section .init:

00010d64 <.init>:
   10d64:	push	{r3, lr}
   10d68:	bl	121d0 <dcngettext@plt+0x11b8>
   10d6c:	pop	{r3, pc}

Disassembly of section .plt:

00010d70 <fdopen@plt-0x14>:
   10d70:	push	{lr}		; (str lr, [sp, #-4]!)
   10d74:	ldr	lr, [pc, #4]	; 10d80 <fdopen@plt-0x4>
   10d78:	add	lr, pc, lr
   10d7c:	ldr	pc, [lr, #8]!
   10d80:	andeq	r9, r1, r0, lsl #5

00010d84 <fdopen@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #102400	; 0x19000
   10d8c:	ldr	pc, [ip, #640]!	; 0x280

00010d90 <calloc@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #102400	; 0x19000
   10d98:	ldr	pc, [ip, #632]!	; 0x278

00010d9c <fputs_unlocked@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #102400	; 0x19000
   10da4:	ldr	pc, [ip, #624]!	; 0x270

00010da8 <raise@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #102400	; 0x19000
   10db0:	ldr	pc, [ip, #616]!	; 0x268

00010db4 <__getdelim@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #102400	; 0x19000
   10dbc:	ldr	pc, [ip, #608]!	; 0x260

00010dc0 <strcmp@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #102400	; 0x19000
   10dc8:	ldr	pc, [ip, #600]!	; 0x258

00010dcc <posix_fadvise64@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #102400	; 0x19000
   10dd4:	ldr	pc, [ip, #592]!	; 0x250

00010dd8 <fflush@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #102400	; 0x19000
   10de0:	ldr	pc, [ip, #584]!	; 0x248

00010de4 <free@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #102400	; 0x19000
   10dec:	ldr	pc, [ip, #576]!	; 0x240

00010df0 <_exit@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #102400	; 0x19000
   10df8:	ldr	pc, [ip, #568]!	; 0x238

00010dfc <memcpy@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #102400	; 0x19000
   10e04:	ldr	pc, [ip, #560]!	; 0x230

00010e08 <mbsinit@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #102400	; 0x19000
   10e10:	ldr	pc, [ip, #552]!	; 0x228

00010e14 <fwrite_unlocked@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #102400	; 0x19000
   10e1c:	ldr	pc, [ip, #544]!	; 0x220

00010e20 <memcmp@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #102400	; 0x19000
   10e28:	ldr	pc, [ip, #536]!	; 0x218

00010e2c <dcgettext@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #102400	; 0x19000
   10e34:	ldr	pc, [ip, #528]!	; 0x210

00010e38 <__stack_chk_fail@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #102400	; 0x19000
   10e40:	ldr	pc, [ip, #520]!	; 0x208

00010e44 <realloc@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #102400	; 0x19000
   10e4c:	ldr	pc, [ip, #512]!	; 0x200

00010e50 <textdomain@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #102400	; 0x19000
   10e58:	ldr	pc, [ip, #504]!	; 0x1f8

00010e5c <iswprint@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #102400	; 0x19000
   10e64:	ldr	pc, [ip, #496]!	; 0x1f0

00010e68 <fwrite@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #102400	; 0x19000
   10e70:	ldr	pc, [ip, #488]!	; 0x1e8

00010e74 <lseek64@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #102400	; 0x19000
   10e7c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e80 <__ctype_get_mb_cur_max@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #102400	; 0x19000
   10e88:	ldr	pc, [ip, #472]!	; 0x1d8

00010e8c <__fpending@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #102400	; 0x19000
   10e94:	ldr	pc, [ip, #464]!	; 0x1d0

00010e98 <mbrtowc@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #102400	; 0x19000
   10ea0:	ldr	pc, [ip, #456]!	; 0x1c8

00010ea4 <error@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #102400	; 0x19000
   10eac:	ldr	pc, [ip, #448]!	; 0x1c0

00010eb0 <malloc@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #102400	; 0x19000
   10eb8:	ldr	pc, [ip, #440]!	; 0x1b8

00010ebc <__libc_start_main@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #102400	; 0x19000
   10ec4:	ldr	pc, [ip, #432]!	; 0x1b0

00010ec8 <__freading@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #102400	; 0x19000
   10ed0:	ldr	pc, [ip, #424]!	; 0x1a8

00010ed4 <__ctype_tolower_loc@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #102400	; 0x19000
   10edc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ee0 <__gmon_start__@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #102400	; 0x19000
   10ee8:	ldr	pc, [ip, #408]!	; 0x198

00010eec <getopt_long@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #102400	; 0x19000
   10ef4:	ldr	pc, [ip, #400]!	; 0x190

00010ef8 <__ctype_b_loc@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #102400	; 0x19000
   10f00:	ldr	pc, [ip, #392]!	; 0x188

00010f04 <exit@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #102400	; 0x19000
   10f0c:	ldr	pc, [ip, #384]!	; 0x180

00010f10 <strlen@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #102400	; 0x19000
   10f18:	ldr	pc, [ip, #376]!	; 0x178

00010f1c <strchr@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #102400	; 0x19000
   10f24:	ldr	pc, [ip, #368]!	; 0x170

00010f28 <__errno_location@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #102400	; 0x19000
   10f30:	ldr	pc, [ip, #360]!	; 0x168

00010f34 <__cxa_atexit@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #102400	; 0x19000
   10f3c:	ldr	pc, [ip, #352]!	; 0x160

00010f40 <setvbuf@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #102400	; 0x19000
   10f48:	ldr	pc, [ip, #344]!	; 0x158

00010f4c <memset@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #102400	; 0x19000
   10f54:	ldr	pc, [ip, #336]!	; 0x150

00010f58 <__printf_chk@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #102400	; 0x19000
   10f60:	ldr	pc, [ip, #328]!	; 0x148

00010f64 <fileno@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #102400	; 0x19000
   10f6c:	ldr	pc, [ip, #320]!	; 0x140

00010f70 <__fprintf_chk@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #102400	; 0x19000
   10f78:	ldr	pc, [ip, #312]!	; 0x138

00010f7c <fclose@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #102400	; 0x19000
   10f84:	ldr	pc, [ip, #304]!	; 0x130

00010f88 <fseeko64@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #102400	; 0x19000
   10f90:	ldr	pc, [ip, #296]!	; 0x128

00010f94 <fcntl64@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #102400	; 0x19000
   10f9c:	ldr	pc, [ip, #288]!	; 0x120

00010fa0 <__overflow@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #102400	; 0x19000
   10fa8:	ldr	pc, [ip, #280]!	; 0x118

00010fac <setlocale@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #102400	; 0x19000
   10fb4:	ldr	pc, [ip, #272]!	; 0x110

00010fb8 <strrchr@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #102400	; 0x19000
   10fc0:	ldr	pc, [ip, #264]!	; 0x108

00010fc4 <nl_langinfo@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #102400	; 0x19000
   10fcc:	ldr	pc, [ip, #256]!	; 0x100

00010fd0 <fopen64@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #102400	; 0x19000
   10fd8:	ldr	pc, [ip, #248]!	; 0xf8

00010fdc <bindtextdomain@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #102400	; 0x19000
   10fe4:	ldr	pc, [ip, #240]!	; 0xf0

00010fe8 <fread_unlocked@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #102400	; 0x19000
   10ff0:	ldr	pc, [ip, #232]!	; 0xe8

00010ff4 <strncmp@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #102400	; 0x19000
   10ffc:	ldr	pc, [ip, #224]!	; 0xe0

00011000 <abort@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #102400	; 0x19000
   11008:	ldr	pc, [ip, #216]!	; 0xd8

0001100c <close@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #102400	; 0x19000
   11014:	ldr	pc, [ip, #208]!	; 0xd0

00011018 <dcngettext@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #102400	; 0x19000
   11020:	ldr	pc, [ip, #200]!	; 0xc8

Disassembly of section .text:

00011024 <.text>:
   11024:	ldr	r3, [pc, #4072]	; 12014 <dcngettext@plt+0xffc>
   11028:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1102c:	sub	sp, sp, #196	; 0xc4
   11030:	ldr	r3, [r3]
   11034:	mov	r7, r0
   11038:	ldr	r0, [r1]
   1103c:	str	r3, [sp, #188]	; 0xbc
   11040:	mov	r6, r1
   11044:	bl	154f8 <dcngettext@plt+0x44e0>
   11048:	ldr	r1, [pc, #4040]	; 12018 <dcngettext@plt+0x1000>
   1104c:	mov	r0, #6
   11050:	bl	10fac <setlocale@plt>
   11054:	ldr	r1, [pc, #4032]	; 1201c <dcngettext@plt+0x1004>
   11058:	ldr	r0, [pc, #4032]	; 12020 <dcngettext@plt+0x1008>
   1105c:	bl	10fdc <bindtextdomain@plt>
   11060:	ldr	r0, [pc, #4024]	; 12020 <dcngettext@plt+0x1008>
   11064:	bl	10e50 <textdomain@plt>
   11068:	ldr	r0, [pc, #4020]	; 12024 <dcngettext@plt+0x100c>
   1106c:	bl	187a4 <dcngettext@plt+0x778c>
   11070:	ldr	r2, [pc, #4016]	; 12028 <dcngettext@plt+0x1010>
   11074:	ldr	r9, [pc, #4016]	; 1202c <dcngettext@plt+0x1014>
   11078:	ldr	r8, [pc, #4016]	; 12030 <dcngettext@plt+0x1018>
   1107c:	ldr	fp, [pc, #4016]	; 12034 <dcngettext@plt+0x101c>
   11080:	ldr	sl, [pc, #4016]	; 12038 <dcngettext@plt+0x1020>
   11084:	mov	r3, #0
   11088:	mvn	r5, #0
   1108c:	ldr	r0, [r2]
   11090:	mov	r4, r3
   11094:	mov	r1, r3
   11098:	mov	r2, #1
   1109c:	str	r3, [sp, #36]	; 0x24
   110a0:	bl	10f40 <setvbuf@plt>
   110a4:	str	r4, [sp, #32]
   110a8:	mov	r4, #0
   110ac:	str	r4, [sp]
   110b0:	mov	r3, r9
   110b4:	mov	r2, r8
   110b8:	mov	r1, r6
   110bc:	mov	r0, r7
   110c0:	bl	10eec <getopt_long@plt>
   110c4:	cmn	r0, #1
   110c8:	beq	11218 <dcngettext@plt+0x200>
   110cc:	cmp	r0, #119	; 0x77
   110d0:	beq	111e8 <dcngettext@plt+0x1d0>
   110d4:	ble	11108 <dcngettext@plt+0xf0>
   110d8:	cmp	r0, fp
   110dc:	beq	11200 <dcngettext@plt+0x1e8>
   110e0:	ble	11140 <dcngettext@plt+0x128>
   110e4:	cmp	r0, sl
   110e8:	beq	111d8 <dcngettext@plt+0x1c0>
   110ec:	bge	11128 <dcngettext@plt+0x110>
   110f0:	ldr	r2, [pc, #3908]	; 1203c <dcngettext@plt+0x1024>
   110f4:	mov	r3, #1
   110f8:	strb	r4, [r2, #6]
   110fc:	strb	r4, [r2, #7]
   11100:	strb	r3, [r2, #8]
   11104:	b	110a8 <dcngettext@plt+0x90>
   11108:	cmp	r0, #98	; 0x62
   1110c:	beq	111d0 <dcngettext@plt+0x1b8>
   11110:	ble	11164 <dcngettext@plt+0x14c>
   11114:	cmp	r0, #99	; 0x63
   11118:	bne	11154 <dcngettext@plt+0x13c>
   1111c:	mov	r3, #1
   11120:	str	r3, [sp, #32]
   11124:	b	110a8 <dcngettext@plt+0x90>
   11128:	cmp	r0, #260	; 0x104
   1112c:	bne	112bc <dcngettext@plt+0x2a4>
   11130:	mov	r3, #1
   11134:	str	r3, [sp, #36]	; 0x24
   11138:	mov	r5, r3
   1113c:	b	110a8 <dcngettext@plt+0x90>
   11140:	cmp	r0, #122	; 0x7a
   11144:	bne	111a8 <dcngettext@plt+0x190>
   11148:	ldr	r3, [pc, #3824]	; 12040 <dcngettext@plt+0x1028>
   1114c:	strb	r4, [r3]
   11150:	b	110a8 <dcngettext@plt+0x90>
   11154:	cmp	r0, #116	; 0x74
   11158:	bne	112bc <dcngettext@plt+0x2a4>
   1115c:	mov	r5, r4
   11160:	b	110a8 <dcngettext@plt+0x90>
   11164:	cmn	r0, #3
   11168:	bne	111c0 <dcngettext@plt+0x1a8>
   1116c:	ldr	ip, [pc, #3792]	; 12044 <dcngettext@plt+0x102c>
   11170:	ldr	r1, [pc, #3792]	; 12048 <dcngettext@plt+0x1030>
   11174:	ldr	r3, [pc, #3792]	; 1204c <dcngettext@plt+0x1034>
   11178:	ldr	r0, [pc, #3752]	; 12028 <dcngettext@plt+0x1010>
   1117c:	ldr	r2, [pc, #3788]	; 12050 <dcngettext@plt+0x1038>
   11180:	str	r4, [sp, #12]
   11184:	ldr	r0, [r0]
   11188:	ldr	r3, [r3]
   1118c:	stmib	sp, {r1, ip}
   11190:	str	r2, [sp]
   11194:	ldr	r1, [pc, #3768]	; 12054 <dcngettext@plt+0x103c>
   11198:	ldr	r2, [pc, #3768]	; 12058 <dcngettext@plt+0x1040>
   1119c:	bl	17bd4 <dcngettext@plt+0x6bbc>
   111a0:	mov	r0, r4
   111a4:	bl	10f04 <exit@plt>
   111a8:	cmp	r0, #256	; 0x100
   111ac:	bne	112bc <dcngettext@plt+0x2a4>
   111b0:	ldr	r2, [pc, #3716]	; 1203c <dcngettext@plt+0x1024>
   111b4:	mov	r3, #1
   111b8:	strb	r3, [r2, #5]
   111bc:	b	110a8 <dcngettext@plt+0x90>
   111c0:	cmn	r0, #2
   111c4:	bne	112bc <dcngettext@plt+0x2a4>
   111c8:	mov	r0, r4
   111cc:	bl	125c8 <dcngettext@plt+0x15b0>
   111d0:	mov	r5, #1
   111d4:	b	110a8 <dcngettext@plt+0x90>
   111d8:	ldr	r2, [pc, #3676]	; 1203c <dcngettext@plt+0x1024>
   111dc:	mov	r3, #1
   111e0:	strb	r3, [r2, #9]
   111e4:	b	110a8 <dcngettext@plt+0x90>
   111e8:	ldr	r2, [pc, #3660]	; 1203c <dcngettext@plt+0x1024>
   111ec:	mov	r3, #1
   111f0:	strb	r4, [r2, #6]
   111f4:	strb	r4, [r2, #8]
   111f8:	strb	r3, [r2, #7]
   111fc:	b	110a8 <dcngettext@plt+0x90>
   11200:	ldr	r2, [pc, #3636]	; 1203c <dcngettext@plt+0x1024>
   11204:	mov	r3, #1
   11208:	strb	r4, [r2, #7]
   1120c:	strb	r4, [r2, #8]
   11210:	strb	r3, [r2, #6]
   11214:	b	110a8 <dcngettext@plt+0x90>
   11218:	ldr	sl, [pc, #3612]	; 1203c <dcngettext@plt+0x1024>
   1121c:	ldr	r8, [sp, #36]	; 0x24
   11220:	cmp	r5, r4
   11224:	mov	r3, #66	; 0x42
   11228:	movne	r8, r4
   1122c:	str	r3, [sl, #12]
   11230:	cmp	r8, r4
   11234:	mov	r3, #64	; 0x40
   11238:	str	r3, [sl]
   1123c:	bne	12188 <dcngettext@plt+0x1170>
   11240:	ldr	r3, [pc, #3576]	; 12040 <dcngettext@plt+0x1028>
   11244:	ldrb	r3, [r3]
   11248:	cmp	r3, #10
   1124c:	ldr	r3, [sp, #32]
   11250:	beq	112c4 <dcngettext@plt+0x2ac>
   11254:	cmp	r3, #0
   11258:	movne	r2, #5
   1125c:	ldrne	r1, [pc, #3576]	; 1205c <dcngettext@plt+0x1044>
   11260:	bne	12140 <dcngettext@plt+0x1128>
   11264:	ldrb	r3, [sl, #5]
   11268:	cmp	r3, #0
   1126c:	bne	12138 <dcngettext@plt+0x1120>
   11270:	ldrb	r3, [sl, #6]
   11274:	cmp	r3, #0
   11278:	bne	1217c <dcngettext@plt+0x1164>
   1127c:	ldrb	r3, [sl, #7]
   11280:	cmp	r3, #0
   11284:	bne	11fa4 <dcngettext@plt+0xf8c>
   11288:	ldrb	r3, [sl, #8]
   1128c:	ldr	r2, [sp, #32]
   11290:	eor	r3, r3, #1
   11294:	orrs	r4, r2, r3
   11298:	moveq	r2, #5
   1129c:	ldreq	r1, [pc, #3516]	; 12060 <dcngettext@plt+0x1048>
   112a0:	bne	1131c <dcngettext@plt+0x304>
   112a4:	mov	r0, r4
   112a8:	bl	10e2c <dcgettext@plt>
   112ac:	mov	r1, r4
   112b0:	mov	r2, r0
   112b4:	mov	r0, r4
   112b8:	bl	10ea4 <error@plt>
   112bc:	mov	r0, #1
   112c0:	bl	125c8 <dcngettext@plt+0x15b0>
   112c4:	ldr	r2, [sp, #36]	; 0x24
   112c8:	ands	r4, r3, r2
   112cc:	movne	r2, #5
   112d0:	ldrne	r1, [pc, #3468]	; 12064 <dcngettext@plt+0x104c>
   112d4:	bne	12140 <dcngettext@plt+0x1128>
   112d8:	ldr	r3, [sp, #32]
   112dc:	cmp	r5, #0
   112e0:	movlt	r3, #0
   112e4:	andge	r3, r3, #1
   112e8:	cmp	r3, #0
   112ec:	movne	r2, #5
   112f0:	ldrne	r1, [pc, #3440]	; 12068 <dcngettext@plt+0x1050>
   112f4:	bne	112a4 <dcngettext@plt+0x28c>
   112f8:	ldrb	r3, [sl, #5]
   112fc:	cmp	r3, #0
   11300:	beq	12164 <dcngettext@plt+0x114c>
   11304:	ldr	r3, [sp, #32]
   11308:	cmp	r3, #0
   1130c:	beq	12138 <dcngettext@plt+0x1120>
   11310:	ldrb	r3, [sl, #7]
   11314:	cmp	r3, #0
   11318:	bne	11338 <dcngettext@plt+0x320>
   1131c:	ldrb	r2, [sl, #9]
   11320:	ldr	r3, [sp, #32]
   11324:	eor	r3, r3, #1
   11328:	tst	r2, r3
   1132c:	movne	r2, #5
   11330:	ldrne	r1, [pc, #3380]	; 1206c <dcngettext@plt+0x1054>
   11334:	bne	12140 <dcngettext@plt+0x1128>
   11338:	ldr	r3, [pc, #3376]	; 12070 <dcngettext@plt+0x1058>
   1133c:	cmn	r5, #1
   11340:	add	r2, r6, r7, lsl #2
   11344:	ldr	r3, [r3]
   11348:	moveq	r5, #0
   1134c:	cmp	r3, r7
   11350:	str	r2, [sp, #80]	; 0x50
   11354:	addeq	r2, r2, #4
   11358:	streq	r2, [sp, #80]	; 0x50
   1135c:	ldreq	r2, [pc, #3344]	; 12074 <dcngettext@plt+0x105c>
   11360:	streq	r2, [r6, r7, lsl #2]
   11364:	add	r6, r6, r3, lsl #2
   11368:	ldr	r3, [sp, #80]	; 0x50
   1136c:	cmp	r3, r6
   11370:	bls	120ec <dcngettext@plt+0x10d4>
   11374:	cmp	r5, #0
   11378:	movne	r3, #42	; 0x2a
   1137c:	moveq	r3, #32
   11380:	str	r3, [sp, #100]	; 0x64
   11384:	uxtb	r3, r3
   11388:	str	r3, [sp, #96]	; 0x60
   1138c:	mov	r3, #1
   11390:	str	r6, [sp, #52]	; 0x34
   11394:	str	r3, [sp, #72]	; 0x48
   11398:	ldr	r3, [sp, #32]
   1139c:	cmp	r3, #0
   113a0:	ldr	r3, [sp, #52]	; 0x34
   113a4:	ldr	r0, [r3], #4
   113a8:	str	r0, [sp, #48]	; 0x30
   113ac:	str	r3, [sp, #52]	; 0x34
   113b0:	beq	11a04 <dcngettext@plt+0x9ec>
   113b4:	ldr	r1, [pc, #3256]	; 12074 <dcngettext@plt+0x105c>
   113b8:	bl	10dc0 <strcmp@plt>
   113bc:	subs	r3, r0, #0
   113c0:	str	r3, [sp, #56]	; 0x38
   113c4:	bne	11ad8 <dcngettext@plt+0xac0>
   113c8:	mov	r3, #1
   113cc:	mov	r2, #5
   113d0:	ldr	r1, [pc, #3232]	; 12078 <dcngettext@plt+0x1060>
   113d4:	strb	r3, [sl, #4]
   113d8:	bl	10e2c <dcgettext@plt>
   113dc:	ldr	r3, [pc, #3224]	; 1207c <dcngettext@plt+0x1064>
   113e0:	ldr	r9, [r3]
   113e4:	str	r0, [sp, #48]	; 0x30
   113e8:	mov	r3, #0
   113ec:	mov	r0, #0
   113f0:	mov	r1, #0
   113f4:	mov	r2, r0
   113f8:	mov	fp, r3
   113fc:	str	r3, [sp, #84]	; 0x54
   11400:	str	r3, [sp, #108]	; 0x6c
   11404:	str	r3, [sp, #112]	; 0x70
   11408:	mov	r3, r1
   1140c:	strd	r0, [sp, #64]	; 0x40
   11410:	strd	r2, [sp, #40]	; 0x28
   11414:	strd	r2, [sp, #24]
   11418:	mov	r2, #1
   1141c:	mov	r3, #0
   11420:	strd	r2, [sp, #16]
   11424:	mov	r3, r9
   11428:	mov	r2, #10
   1142c:	add	r1, sp, #112	; 0x70
   11430:	add	r0, sp, #108	; 0x6c
   11434:	bl	10db4 <__getdelim@plt>
   11438:	subs	r7, r0, #0
   1143c:	ble	1171c <dcngettext@plt+0x704>
   11440:	ldr	r4, [sp, #108]	; 0x6c
   11444:	ldrb	r3, [r4]
   11448:	cmp	r3, #35	; 0x23
   1144c:	beq	1150c <dcngettext@plt+0x4f4>
   11450:	add	r2, r4, r7
   11454:	ldrb	r2, [r2, #-1]
   11458:	cmp	r2, #10
   1145c:	subeq	r7, r7, #1
   11460:	moveq	r3, #0
   11464:	strbeq	r3, [r4, r7]
   11468:	ldreq	r4, [sp, #108]	; 0x6c
   1146c:	ldrbeq	r3, [r4]
   11470:	cmp	r3, #32
   11474:	cmpne	r3, #9
   11478:	moveq	r8, #1
   1147c:	movne	r8, #0
   11480:	bne	114a0 <dcngettext@plt+0x488>
   11484:	mov	r2, r4
   11488:	rsb	r1, r4, #1
   1148c:	add	r8, r1, r2
   11490:	ldrb	r3, [r2, #1]!
   11494:	cmp	r3, #9
   11498:	cmpne	r3, #32
   1149c:	beq	1148c <dcngettext@plt+0x474>
   114a0:	cmp	r3, #92	; 0x5c
   114a4:	addeq	r8, r8, #1
   114a8:	add	r6, r4, r8
   114ac:	mov	r0, r6
   114b0:	mov	r2, #6
   114b4:	ldr	r1, [pc, #3012]	; 12080 <dcngettext@plt+0x1068>
   114b8:	ldreq	r5, [sp, #32]
   114bc:	movne	r5, #0
   114c0:	bl	10ff4 <strncmp@plt>
   114c4:	cmp	r0, #0
   114c8:	bne	11578 <dcngettext@plt+0x560>
   114cc:	add	r3, r8, #6
   114d0:	ldrb	r2, [r4, r3]
   114d4:	cmp	r2, #32
   114d8:	addeq	r3, r8, #7
   114dc:	ldrbeq	r2, [r4, r3]
   114e0:	cmp	r2, #40	; 0x28
   114e4:	beq	11a68 <dcngettext@plt+0xa50>
   114e8:	ldr	r2, [sp, #24]
   114ec:	ldrb	r3, [sl, #7]
   114f0:	adds	r2, r2, #1
   114f4:	str	r2, [sp, #24]
   114f8:	ldr	r2, [sp, #28]
   114fc:	adc	r2, r2, #0
   11500:	cmp	r3, #0
   11504:	str	r2, [sp, #28]
   11508:	bne	118b8 <dcngettext@plt+0x8a0>
   1150c:	ldr	r3, [r9]
   11510:	ands	r3, r3, #48	; 0x30
   11514:	bne	1171c <dcngettext@plt+0x704>
   11518:	ldr	r2, [sp, #16]
   1151c:	adds	r2, r2, #1
   11520:	str	r2, [sp, #16]
   11524:	ldr	r2, [sp, #20]
   11528:	adc	r2, r2, #0
   1152c:	str	r2, [sp, #20]
   11530:	ldrd	r0, [sp, #16]
   11534:	orrs	r2, r0, r1
   11538:	bne	11424 <dcngettext@plt+0x40c>
   1153c:	mov	r0, r3
   11540:	mov	r2, #5
   11544:	ldr	r1, [pc, #2872]	; 12084 <dcngettext@plt+0x106c>
   11548:	mov	r4, r3
   1154c:	bl	10e2c <dcgettext@plt>
   11550:	ldr	r2, [sp, #48]	; 0x30
   11554:	mov	r1, #3
   11558:	mov	r5, r0
   1155c:	mov	r0, r4
   11560:	bl	17590 <dcngettext@plt+0x6578>
   11564:	mov	r2, r5
   11568:	mov	r1, r4
   1156c:	mov	r3, r0
   11570:	mov	r0, #1
   11574:	bl	10ea4 <error@plt>
   11578:	ldrb	r1, [r4, r8]
   1157c:	ldr	r3, [sl, #12]
   11580:	sub	r2, r7, r8
   11584:	cmp	r1, #92	; 0x5c
   11588:	addeq	r3, r3, #1
   1158c:	cmp	r2, r3
   11590:	bcc	114e8 <dcngettext@plt+0x4d0>
   11594:	ldr	r3, [sl]
   11598:	add	r8, r8, r3
   1159c:	ldrb	r3, [r4, r8]
   115a0:	cmp	r3, #32
   115a4:	cmpne	r3, #9
   115a8:	movne	r3, #1
   115ac:	moveq	r3, #0
   115b0:	bne	114e8 <dcngettext@plt+0x4d0>
   115b4:	strb	r3, [r4, r8]
   115b8:	mov	r0, r6
   115bc:	bl	12284 <dcngettext@plt+0x126c>
   115c0:	cmp	r0, #0
   115c4:	beq	114e8 <dcngettext@plt+0x4d0>
   115c8:	add	r1, r8, #1
   115cc:	sub	r3, r7, r1
   115d0:	cmp	r3, #1
   115d4:	ldr	r3, [pc, #2660]	; 12040 <dcngettext@plt+0x1028>
   115d8:	ldr	r2, [r3, #4]
   115dc:	beq	11ac0 <dcngettext@plt+0xaa8>
   115e0:	ldrb	r3, [r4, r1]
   115e4:	cmp	r3, #32
   115e8:	cmpne	r3, #42	; 0x2a
   115ec:	movne	r3, #1
   115f0:	moveq	r3, #0
   115f4:	bne	11ac0 <dcngettext@plt+0xaa8>
   115f8:	cmp	r2, #1
   115fc:	addne	r1, r8, #2
   11600:	ldrne	r2, [pc, #2616]	; 12040 <dcngettext@plt+0x1028>
   11604:	strne	r3, [r2, #4]
   11608:	cmp	r5, #0
   1160c:	add	r4, r4, r1
   11610:	bne	11d40 <dcngettext@plt+0xd28>
   11614:	ldr	r3, [sp, #56]	; 0x38
   11618:	cmp	r3, #0
   1161c:	bne	11634 <dcngettext@plt+0x61c>
   11620:	ldr	r1, [pc, #2636]	; 12074 <dcngettext@plt+0x105c>
   11624:	mov	r0, r4
   11628:	bl	10dc0 <strcmp@plt>
   1162c:	cmp	r0, #0
   11630:	beq	114e8 <dcngettext@plt+0x4d0>
   11634:	ldrb	r7, [sl, #6]
   11638:	cmp	r7, #0
   1163c:	movne	r7, #0
   11640:	strne	r7, [sp, #60]	; 0x3c
   11644:	bne	1166c <dcngettext@plt+0x654>
   11648:	mov	r1, #10
   1164c:	mov	r0, r4
   11650:	bl	10f1c <strchr@plt>
   11654:	ldr	r3, [sp, #32]
   11658:	cmp	r0, #0
   1165c:	movne	r7, r3
   11660:	moveq	r3, #0
   11664:	movne	r3, #1
   11668:	str	r3, [sp, #60]	; 0x3c
   1166c:	add	r2, sp, #107	; 0x6b
   11670:	add	r1, sp, #152	; 0x98
   11674:	mov	r0, r4
   11678:	bl	12434 <dcngettext@plt+0x141c>
   1167c:	subs	r3, r0, #0
   11680:	str	r3, [sp, #76]	; 0x4c
   11684:	bne	11904 <dcngettext@plt+0x8ec>
   11688:	ldr	r2, [sp, #40]	; 0x28
   1168c:	ldrb	r3, [sl, #6]
   11690:	adds	r2, r2, #1
   11694:	str	r2, [sp, #40]	; 0x28
   11698:	ldr	r2, [sp, #44]	; 0x2c
   1169c:	adc	r2, r2, #0
   116a0:	cmp	r3, #0
   116a4:	str	r2, [sp, #44]	; 0x2c
   116a8:	bne	1170c <dcngettext@plt+0x6f4>
   116ac:	ldr	r3, [sp, #60]	; 0x3c
   116b0:	cmp	r3, #0
   116b4:	beq	116e0 <dcngettext@plt+0x6c8>
   116b8:	ldr	r3, [pc, #2408]	; 12028 <dcngettext@plt+0x1010>
   116bc:	ldr	r0, [r3]
   116c0:	ldr	r3, [r0, #20]
   116c4:	ldr	r2, [r0, #24]
   116c8:	cmp	r3, r2
   116cc:	addcc	r1, r3, #1
   116d0:	movcc	r2, #92	; 0x5c
   116d4:	strcc	r1, [r0, #20]
   116d8:	strbcc	r2, [r3]
   116dc:	bcs	12008 <dcngettext@plt+0xff0>
   116e0:	mov	r1, r7
   116e4:	mov	r0, r4
   116e8:	bl	12374 <dcngettext@plt+0x135c>
   116ec:	ldr	r1, [pc, #2452]	; 12088 <dcngettext@plt+0x1070>
   116f0:	mov	r2, #5
   116f4:	mov	r0, #0
   116f8:	bl	10e2c <dcgettext@plt>
   116fc:	ldr	r1, [pc, #2440]	; 1208c <dcngettext@plt+0x1074>
   11700:	mov	r2, r0
   11704:	mov	r0, #1
   11708:	bl	10f58 <__printf_chk@plt>
   1170c:	ldr	r3, [r9]
   11710:	ldr	fp, [sp, #32]
   11714:	ands	r3, r3, #48	; 0x30
   11718:	beq	11518 <dcngettext@plt+0x500>
   1171c:	ldr	r0, [sp, #108]	; 0x6c
   11720:	bl	10de4 <free@plt>
   11724:	ldr	r4, [r9]
   11728:	ands	r4, r4, #32
   1172c:	bne	11d58 <dcngettext@plt+0xd40>
   11730:	ldr	r3, [sp, #56]	; 0x38
   11734:	cmp	r3, #0
   11738:	bne	11cbc <dcngettext@plt+0xca4>
   1173c:	cmp	fp, #0
   11740:	beq	11cfc <dcngettext@plt+0xce4>
   11744:	ldrb	r3, [sl, #6]
   11748:	cmp	r3, #0
   1174c:	bne	11b20 <dcngettext@plt+0xb08>
   11750:	ldrd	r0, [sp, #24]
   11754:	orrs	r3, r0, r1
   11758:	beq	117a4 <dcngettext@plt+0x78c>
   1175c:	mov	r3, #0
   11760:	cmp	r1, r3
   11764:	mvn	r2, #0
   11768:	cmpeq	r0, r2
   1176c:	ldrls	r3, [sp, #24]
   11770:	bhi	11f8c <dcngettext@plt+0xf74>
   11774:	mov	r2, #5
   11778:	str	r2, [sp]
   1177c:	ldr	r1, [pc, #2316]	; 12090 <dcngettext@plt+0x1078>
   11780:	ldr	r2, [pc, #2316]	; 12094 <dcngettext@plt+0x107c>
   11784:	mov	r0, #0
   11788:	bl	11018 <dcngettext@plt>
   1178c:	ldrd	r2, [sp, #24]
   11790:	mov	r1, #0
   11794:	strd	r2, [sp]
   11798:	mov	r2, r0
   1179c:	mov	r0, r1
   117a0:	bl	10ea4 <error@plt>
   117a4:	ldrd	r0, [sp, #40]	; 0x28
   117a8:	orrs	r3, r0, r1
   117ac:	beq	117f8 <dcngettext@plt+0x7e0>
   117b0:	mov	r3, #0
   117b4:	cmp	r1, r3
   117b8:	mvn	r2, #0
   117bc:	cmpeq	r0, r2
   117c0:	ldrls	r3, [sp, #40]	; 0x28
   117c4:	bhi	11f74 <dcngettext@plt+0xf5c>
   117c8:	mov	r2, #5
   117cc:	str	r2, [sp]
   117d0:	ldr	r1, [pc, #2240]	; 12098 <dcngettext@plt+0x1080>
   117d4:	ldr	r2, [pc, #2240]	; 1209c <dcngettext@plt+0x1084>
   117d8:	mov	r0, #0
   117dc:	bl	11018 <dcngettext@plt>
   117e0:	ldrd	r2, [sp, #40]	; 0x28
   117e4:	mov	r1, #0
   117e8:	strd	r2, [sp]
   117ec:	mov	r2, r0
   117f0:	mov	r0, r1
   117f4:	bl	10ea4 <error@plt>
   117f8:	ldrd	r0, [sp, #64]	; 0x40
   117fc:	orrs	r3, r0, r1
   11800:	beq	1184c <dcngettext@plt+0x834>
   11804:	mov	r3, #0
   11808:	cmp	r1, r3
   1180c:	mvn	r2, #0
   11810:	cmpeq	r0, r2
   11814:	ldrls	r3, [sp, #64]	; 0x40
   11818:	bhi	11f5c <dcngettext@plt+0xf44>
   1181c:	mov	r2, #5
   11820:	str	r2, [sp]
   11824:	ldr	r1, [pc, #2164]	; 120a0 <dcngettext@plt+0x1088>
   11828:	ldr	r2, [pc, #2164]	; 120a4 <dcngettext@plt+0x108c>
   1182c:	mov	r0, #0
   11830:	bl	11018 <dcngettext@plt>
   11834:	ldrd	r2, [sp, #64]	; 0x40
   11838:	mov	r1, #0
   1183c:	strd	r2, [sp]
   11840:	mov	r2, r0
   11844:	mov	r0, r1
   11848:	bl	10ea4 <error@plt>
   1184c:	ldrb	r3, [sl, #5]
   11850:	cmp	r3, #0
   11854:	beq	11b20 <dcngettext@plt+0xb08>
   11858:	ldr	r3, [sp, #84]	; 0x54
   1185c:	cmp	r3, #0
   11860:	beq	11fc0 <dcngettext@plt+0xfa8>
   11864:	ldrd	r2, [sp, #64]	; 0x40
   11868:	ldrd	r0, [sp, #40]	; 0x28
   1186c:	mov	lr, r2
   11870:	orr	ip, r0, r2
   11874:	orr	r3, r1, r3
   11878:	str	ip, [sp, #88]	; 0x58
   1187c:	str	r3, [sp, #92]	; 0x5c
   11880:	ldrd	r2, [sp, #88]	; 0x58
   11884:	orrs	r3, r2, r3
   11888:	bne	118a4 <dcngettext@plt+0x88c>
   1188c:	ldrd	r2, [sp, #24]
   11890:	ldrb	r4, [sl, #9]
   11894:	mov	r1, r2
   11898:	orrs	r3, r1, r3
   1189c:	eor	r4, r4, #1
   118a0:	orreq	r4, r4, #1
   118a4:	and	r4, r4, #1
   118a8:	ldr	r3, [sp, #72]	; 0x48
   118ac:	and	r3, r3, r4
   118b0:	str	r3, [sp, #72]	; 0x48
   118b4:	b	11a24 <dcngettext@plt+0xa0c>
   118b8:	mov	r2, #5
   118bc:	ldr	r1, [pc, #2020]	; 120a8 <dcngettext@plt+0x1090>
   118c0:	mov	r0, #0
   118c4:	bl	10e2c <dcgettext@plt>
   118c8:	ldr	r2, [sp, #48]	; 0x30
   118cc:	mov	r1, #3
   118d0:	mov	r4, r0
   118d4:	mov	r0, #0
   118d8:	bl	17590 <dcngettext@plt+0x6578>
   118dc:	mov	r2, r4
   118e0:	ldrd	r4, [sp, #16]
   118e4:	ldr	r3, [pc, #1940]	; 12080 <dcngettext@plt+0x1068>
   118e8:	mov	r1, #0
   118ec:	str	r3, [sp, #8]
   118f0:	strd	r4, [sp]
   118f4:	mov	r3, r0
   118f8:	mov	r0, r1
   118fc:	bl	10ea4 <error@plt>
   11900:	b	1150c <dcngettext@plt+0x4f4>
   11904:	ldrb	r3, [sl, #5]
   11908:	cmp	r3, #0
   1190c:	beq	1191c <dcngettext@plt+0x904>
   11910:	ldrb	r3, [sp, #107]	; 0x6b
   11914:	cmp	r3, #0
   11918:	bne	1170c <dcngettext@plt+0x6f4>
   1191c:	ldr	r8, [sl]
   11920:	lsrs	r8, r8, #1
   11924:	beq	11c80 <dcngettext@plt+0xc68>
   11928:	bl	10ed4 <__ctype_tolower_loc@plt>
   1192c:	mov	r5, #0
   11930:	ldr	ip, [pc, #1908]	; 120ac <dcngettext@plt+0x1094>
   11934:	add	r2, sp, #151	; 0x97
   11938:	add	lr, r6, #1
   1193c:	ldr	r1, [r0]
   11940:	b	1196c <dcngettext@plt+0x954>
   11944:	and	r3, r3, #15
   11948:	ldrb	r0, [lr, r5, lsl #1]
   1194c:	add	r3, ip, r3
   11950:	ldrb	r3, [r3, #264]	; 0x108
   11954:	ldr	r0, [r1, r0, lsl #2]
   11958:	cmp	r0, r3
   1195c:	bne	11988 <dcngettext@plt+0x970>
   11960:	add	r5, r5, #1
   11964:	cmp	r8, r5
   11968:	beq	11c80 <dcngettext@plt+0xc68>
   1196c:	ldrb	r3, [r2, #1]!
   11970:	ldrb	fp, [r6, r5, lsl #1]
   11974:	add	r0, ip, r3, lsr #4
   11978:	ldr	fp, [r1, fp, lsl #2]
   1197c:	ldrb	r0, [r0, #264]	; 0x108
   11980:	cmp	fp, r0
   11984:	beq	11944 <dcngettext@plt+0x92c>
   11988:	ldr	r2, [sp, #64]	; 0x40
   1198c:	ldrb	r3, [sl, #6]
   11990:	adds	r2, r2, #1
   11994:	str	r2, [sp, #64]	; 0x40
   11998:	ldr	r2, [sp, #68]	; 0x44
   1199c:	adc	r2, r2, #0
   119a0:	cmp	r3, #0
   119a4:	str	r2, [sp, #68]	; 0x44
   119a8:	bne	1170c <dcngettext@plt+0x6f4>
   119ac:	ldr	r3, [sp, #60]	; 0x3c
   119b0:	cmp	r3, #0
   119b4:	beq	119e0 <dcngettext@plt+0x9c8>
   119b8:	ldr	r3, [pc, #1640]	; 12028 <dcngettext@plt+0x1010>
   119bc:	ldr	r0, [r3]
   119c0:	ldr	r3, [r0, #20]
   119c4:	ldr	r2, [r0, #24]
   119c8:	cmp	r3, r2
   119cc:	addcc	r1, r3, #1
   119d0:	movcc	r2, #92	; 0x5c
   119d4:	strcc	r1, [r0, #20]
   119d8:	strbcc	r2, [r3]
   119dc:	bcs	120f8 <dcngettext@plt+0x10e0>
   119e0:	mov	r1, r7
   119e4:	mov	r0, r4
   119e8:	bl	12374 <dcngettext@plt+0x135c>
   119ec:	cmp	r8, r5
   119f0:	beq	11e4c <dcngettext@plt+0xe34>
   119f4:	mov	r2, #5
   119f8:	ldr	r1, [pc, #1712]	; 120b0 <dcngettext@plt+0x1098>
   119fc:	mov	r0, #0
   11a00:	b	116f8 <dcngettext@plt+0x6e0>
   11a04:	add	r4, sp, #116	; 0x74
   11a08:	mov	r1, r4
   11a0c:	add	r2, sp, #112	; 0x70
   11a10:	ldr	r0, [sp, #48]	; 0x30
   11a14:	bl	12434 <dcngettext@plt+0x141c>
   11a18:	subs	r5, r0, #0
   11a1c:	bne	11b30 <dcngettext@plt+0xb18>
   11a20:	str	r5, [sp, #72]	; 0x48
   11a24:	ldr	r3, [sp, #80]	; 0x50
   11a28:	ldr	r2, [sp, #52]	; 0x34
   11a2c:	cmp	r3, r2
   11a30:	bhi	11398 <dcngettext@plt+0x380>
   11a34:	ldrb	r3, [sl, #4]
   11a38:	cmp	r3, #0
   11a3c:	bne	11e94 <dcngettext@plt+0xe7c>
   11a40:	ldr	r3, [pc, #1484]	; 12014 <dcngettext@plt+0xffc>
   11a44:	ldr	r1, [sp, #72]	; 0x48
   11a48:	ldr	r2, [sp, #188]	; 0xbc
   11a4c:	ldr	r3, [r3]
   11a50:	eor	r0, r1, #1
   11a54:	cmp	r2, r3
   11a58:	uxtb	r0, r0
   11a5c:	bne	12160 <dcngettext@plt+0x1148>
   11a60:	add	sp, sp, #196	; 0xc4
   11a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a68:	add	r3, r3, #1
   11a6c:	subs	r7, r7, r3
   11a70:	beq	114e8 <dcngettext@plt+0x4d0>
   11a74:	subs	r7, r7, #1
   11a78:	add	r4, r4, r3
   11a7c:	beq	11aa8 <dcngettext@plt+0xa90>
   11a80:	ldrb	r2, [r4, r7]
   11a84:	add	r3, r4, r7
   11a88:	cmp	r2, #41	; 0x29
   11a8c:	bne	11aa0 <dcngettext@plt+0xa88>
   11a90:	b	11bec <dcngettext@plt+0xbd4>
   11a94:	ldrb	r2, [r3, #-1]!
   11a98:	cmp	r2, #41	; 0x29
   11a9c:	beq	11be8 <dcngettext@plt+0xbd0>
   11aa0:	subs	r7, r7, #1
   11aa4:	bne	11a94 <dcngettext@plt+0xa7c>
   11aa8:	ldrb	r3, [r4]
   11aac:	cmp	r3, #41	; 0x29
   11ab0:	bne	114e8 <dcngettext@plt+0x4d0>
   11ab4:	mov	r6, r4
   11ab8:	mov	r7, #0
   11abc:	b	11bf0 <dcngettext@plt+0xbd8>
   11ac0:	cmp	r2, #0
   11ac4:	beq	114e8 <dcngettext@plt+0x4d0>
   11ac8:	ldr	r2, [pc, #1392]	; 12040 <dcngettext@plt+0x1028>
   11acc:	mov	r3, #1
   11ad0:	str	r3, [r2, #4]
   11ad4:	b	11608 <dcngettext@plt+0x5f0>
   11ad8:	ldr	r1, [pc, #1492]	; 120b4 <dcngettext@plt+0x109c>
   11adc:	ldr	r0, [sp, #48]	; 0x30
   11ae0:	bl	15460 <dcngettext@plt+0x4448>
   11ae4:	subs	r9, r0, #0
   11ae8:	bne	113e8 <dcngettext@plt+0x3d0>
   11aec:	bl	10f28 <__errno_location@plt>
   11af0:	ldr	r2, [sp, #48]	; 0x30
   11af4:	mov	r1, #3
   11af8:	ldr	r4, [r0]
   11afc:	mov	r0, r9
   11b00:	bl	17590 <dcngettext@plt+0x6578>
   11b04:	mov	r1, r4
   11b08:	ldr	r2, [pc, #1448]	; 120b8 <dcngettext@plt+0x10a0>
   11b0c:	mov	r4, r9
   11b10:	mov	r3, r0
   11b14:	mov	r0, r9
   11b18:	bl	10ea4 <error@plt>
   11b1c:	b	118a8 <dcngettext@plt+0x890>
   11b20:	ldr	r3, [sp, #84]	; 0x54
   11b24:	cmp	r3, #0
   11b28:	bne	11864 <dcngettext@plt+0x84c>
   11b2c:	b	118a4 <dcngettext@plt+0x88c>
   11b30:	mov	r1, #92	; 0x5c
   11b34:	ldr	r0, [sp, #48]	; 0x30
   11b38:	bl	10f1c <strchr@plt>
   11b3c:	cmp	r0, #0
   11b40:	beq	11e7c <dcngettext@plt+0xe64>
   11b44:	ldr	r3, [pc, #1268]	; 12040 <dcngettext@plt+0x1028>
   11b48:	ldrb	r3, [r3]
   11b4c:	cmp	r3, #10
   11b50:	beq	11d98 <dcngettext@plt+0xd80>
   11b54:	ldr	r3, [sp, #36]	; 0x24
   11b58:	cmp	r3, #0
   11b5c:	bne	12000 <dcngettext@plt+0xfe8>
   11b60:	ldr	r3, [sl]
   11b64:	ldr	r5, [sp, #36]	; 0x24
   11b68:	lsrs	r3, r3, #1
   11b6c:	beq	11dd8 <dcngettext@plt+0xdc0>
   11b70:	ldr	r6, [pc, #1348]	; 120bc <dcngettext@plt+0x10a4>
   11b74:	add	r7, sp, #115	; 0x73
   11b78:	ldrb	r2, [r7, #1]
   11b7c:	mov	r1, r6
   11b80:	mov	r0, #1
   11b84:	bl	10f58 <__printf_chk@plt>
   11b88:	ldr	r2, [sl]
   11b8c:	add	r3, r7, #2
   11b90:	sub	r3, r3, r4
   11b94:	cmp	r3, r2, lsr #1
   11b98:	add	r7, r7, #1
   11b9c:	bcc	11b78 <dcngettext@plt+0xb60>
   11ba0:	ldr	r3, [sp, #36]	; 0x24
   11ba4:	cmp	r3, #0
   11ba8:	beq	11dd8 <dcngettext@plt+0xdc0>
   11bac:	ldr	r3, [pc, #1140]	; 12028 <dcngettext@plt+0x1010>
   11bb0:	ldr	r0, [r3]
   11bb4:	ldr	r3, [pc, #1156]	; 12040 <dcngettext@plt+0x1028>
   11bb8:	ldr	r2, [r0, #24]
   11bbc:	ldrb	r1, [r3]
   11bc0:	ldr	r3, [r0, #20]
   11bc4:	cmp	r3, r2
   11bc8:	addcc	r2, r3, #1
   11bcc:	strcc	r2, [r0, #20]
   11bd0:	ldrcc	r5, [sp, #72]	; 0x48
   11bd4:	strbcc	r1, [r3]
   11bd8:	bcc	11a20 <dcngettext@plt+0xa08>
   11bdc:	bl	10fa0 <__overflow@plt>
   11be0:	ldr	r5, [sp, #72]	; 0x48
   11be4:	b	11a20 <dcngettext@plt+0xa08>
   11be8:	add	r3, r4, r7
   11bec:	mov	r6, r3
   11bf0:	cmp	r5, #0
   11bf4:	bne	11e64 <dcngettext@plt+0xe4c>
   11bf8:	add	r7, r7, #1
   11bfc:	mov	r3, #0
   11c00:	strb	r3, [r6]
   11c04:	ldrb	r3, [r4, r7]
   11c08:	add	r2, r4, r7
   11c0c:	cmp	r3, #32
   11c10:	cmpne	r3, #9
   11c14:	rsbeq	r1, r4, #1
   11c18:	bne	11c30 <dcngettext@plt+0xc18>
   11c1c:	add	r7, r1, r2
   11c20:	ldrb	r3, [r2, #1]!
   11c24:	cmp	r3, #9
   11c28:	cmpne	r3, #32
   11c2c:	beq	11c1c <dcngettext@plt+0xc04>
   11c30:	cmp	r3, #61	; 0x3d
   11c34:	bne	114e8 <dcngettext@plt+0x4d0>
   11c38:	add	r3, r7, #1
   11c3c:	add	r6, r4, r3
   11c40:	ldrb	r3, [r4, r3]
   11c44:	cmp	r3, #9
   11c48:	cmpne	r3, #32
   11c4c:	bne	11c6c <dcngettext@plt+0xc54>
   11c50:	add	r7, r7, #2
   11c54:	add	r3, r4, r7
   11c58:	mov	r6, r3
   11c5c:	ldrb	r2, [r3], #1
   11c60:	cmp	r2, #9
   11c64:	cmpne	r2, #32
   11c68:	beq	11c58 <dcngettext@plt+0xc40>
   11c6c:	mov	r0, r6
   11c70:	bl	12284 <dcngettext@plt+0x126c>
   11c74:	cmp	r0, #0
   11c78:	bne	11614 <dcngettext@plt+0x5fc>
   11c7c:	b	114e8 <dcngettext@plt+0x4d0>
   11c80:	ldrb	r3, [sl, #6]
   11c84:	mov	r5, r8
   11c88:	cmp	r3, #0
   11c8c:	str	r3, [sp, #84]	; 0x54
   11c90:	bne	1170c <dcngettext@plt+0x6f4>
   11c94:	ldrb	r3, [sl, #8]
   11c98:	cmp	r3, #0
   11c9c:	str	r3, [sp, #84]	; 0x54
   11ca0:	bne	1170c <dcngettext@plt+0x6f4>
   11ca4:	ldr	r3, [sp, #60]	; 0x3c
   11ca8:	cmp	r3, #0
   11cac:	beq	11e38 <dcngettext@plt+0xe20>
   11cb0:	ldr	r3, [sp, #76]	; 0x4c
   11cb4:	str	r3, [sp, #84]	; 0x54
   11cb8:	b	119b8 <dcngettext@plt+0x9a0>
   11cbc:	mov	r0, r9
   11cc0:	bl	17f60 <dcngettext@plt+0x6f48>
   11cc4:	cmp	r0, #0
   11cc8:	beq	1173c <dcngettext@plt+0x724>
   11ccc:	bl	10f28 <__errno_location@plt>
   11cd0:	ldr	r2, [sp, #48]	; 0x30
   11cd4:	mov	r1, #3
   11cd8:	ldr	r5, [r0]
   11cdc:	mov	r0, r4
   11ce0:	bl	17590 <dcngettext@plt+0x6578>
   11ce4:	mov	r1, r5
   11ce8:	ldr	r2, [pc, #968]	; 120b8 <dcngettext@plt+0x10a0>
   11cec:	mov	r3, r0
   11cf0:	mov	r0, r4
   11cf4:	bl	10ea4 <error@plt>
   11cf8:	b	118a8 <dcngettext@plt+0x890>
   11cfc:	mov	r2, #5
   11d00:	ldr	r1, [pc, #952]	; 120c0 <dcngettext@plt+0x10a8>
   11d04:	mov	r0, fp
   11d08:	bl	10e2c <dcgettext@plt>
   11d0c:	ldr	r2, [sp, #48]	; 0x30
   11d10:	mov	r1, #3
   11d14:	mov	r5, r0
   11d18:	mov	r0, fp
   11d1c:	bl	17590 <dcngettext@plt+0x6578>
   11d20:	ldr	r3, [pc, #856]	; 12080 <dcngettext@plt+0x1068>
   11d24:	mov	r2, r5
   11d28:	str	r3, [sp]
   11d2c:	mov	r1, fp
   11d30:	mov	r3, r0
   11d34:	mov	r0, fp
   11d38:	bl	10ea4 <error@plt>
   11d3c:	b	118a4 <dcngettext@plt+0x88c>
   11d40:	sub	r1, r7, r1
   11d44:	mov	r0, r4
   11d48:	bl	122e0 <dcngettext@plt+0x12c8>
   11d4c:	adds	r0, r0, #0
   11d50:	movne	r0, #1
   11d54:	b	11c74 <dcngettext@plt+0xc5c>
   11d58:	mov	r2, #5
   11d5c:	ldr	r1, [pc, #864]	; 120c4 <dcngettext@plt+0x10ac>
   11d60:	mov	r0, #0
   11d64:	bl	10e2c <dcgettext@plt>
   11d68:	ldr	r2, [sp, #48]	; 0x30
   11d6c:	mov	r1, #3
   11d70:	mov	r4, r0
   11d74:	mov	r0, #0
   11d78:	bl	17590 <dcngettext@plt+0x6578>
   11d7c:	mov	r1, #0
   11d80:	mov	r2, r4
   11d84:	mov	r4, #0
   11d88:	mov	r3, r0
   11d8c:	mov	r0, r1
   11d90:	bl	10ea4 <error@plt>
   11d94:	b	118a8 <dcngettext@plt+0x890>
   11d98:	ldr	r3, [sp, #36]	; 0x24
   11d9c:	cmp	r3, #0
   11da0:	bne	11ed0 <dcngettext@plt+0xeb8>
   11da4:	ldr	r3, [pc, #636]	; 12028 <dcngettext@plt+0x1010>
   11da8:	ldr	r0, [r3]
   11dac:	ldr	r3, [r0, #20]
   11db0:	ldr	r2, [r0, #24]
   11db4:	cmp	r3, r2
   11db8:	addcc	r1, r3, #1
   11dbc:	movcc	r2, #92	; 0x5c
   11dc0:	strcc	r1, [r0, #20]
   11dc4:	strbcc	r2, [r3]
   11dc8:	bcs	1211c <dcngettext@plt+0x1104>
   11dcc:	ldr	r3, [sl]
   11dd0:	lsrs	r3, r3, #1
   11dd4:	bne	11b70 <dcngettext@plt+0xb58>
   11dd8:	ldr	r3, [pc, #584]	; 12028 <dcngettext@plt+0x1010>
   11ddc:	ldr	r0, [r3]
   11de0:	ldr	r3, [r0, #20]
   11de4:	ldr	r2, [r0, #24]
   11de8:	cmp	r3, r2
   11dec:	addcc	r1, r3, #1
   11df0:	movcc	r2, #32
   11df4:	strcc	r1, [r0, #20]
   11df8:	strbcc	r2, [r3]
   11dfc:	bcs	12104 <dcngettext@plt+0x10ec>
   11e00:	ldr	r3, [pc, #544]	; 12028 <dcngettext@plt+0x1010>
   11e04:	ldr	r0, [r3]
   11e08:	ldr	r2, [r0, #24]
   11e0c:	ldr	r3, [r0, #20]
   11e10:	cmp	r3, r2
   11e14:	addcc	r2, r3, #1
   11e18:	strcc	r2, [r0, #20]
   11e1c:	ldrcc	r2, [sp, #96]	; 0x60
   11e20:	strbcc	r2, [r3]
   11e24:	bcs	12110 <dcngettext@plt+0x10f8>
   11e28:	mov	r1, r5
   11e2c:	ldr	r0, [sp, #48]	; 0x30
   11e30:	bl	12374 <dcngettext@plt+0x135c>
   11e34:	b	11bac <dcngettext@plt+0xb94>
   11e38:	mov	r1, r7
   11e3c:	mov	r0, r4
   11e40:	bl	12374 <dcngettext@plt+0x135c>
   11e44:	ldr	r3, [sp, #76]	; 0x4c
   11e48:	str	r3, [sp, #84]	; 0x54
   11e4c:	ldrb	r0, [sl, #8]
   11e50:	cmp	r0, #0
   11e54:	bne	1170c <dcngettext@plt+0x6f4>
   11e58:	mov	r2, #5
   11e5c:	ldr	r1, [pc, #612]	; 120c8 <dcngettext@plt+0x10b0>
   11e60:	b	116f8 <dcngettext@plt+0x6e0>
   11e64:	mov	r1, r7
   11e68:	mov	r0, r4
   11e6c:	bl	122e0 <dcngettext@plt+0x12c8>
   11e70:	cmp	r0, #0
   11e74:	bne	11bf8 <dcngettext@plt+0xbe0>
   11e78:	b	114e8 <dcngettext@plt+0x4d0>
   11e7c:	mov	r1, #10
   11e80:	ldr	r0, [sp, #48]	; 0x30
   11e84:	bl	10f1c <strchr@plt>
   11e88:	cmp	r0, #0
   11e8c:	bne	11b44 <dcngettext@plt+0xb2c>
   11e90:	b	11b54 <dcngettext@plt+0xb3c>
   11e94:	ldr	r3, [pc, #480]	; 1207c <dcngettext@plt+0x1064>
   11e98:	ldr	r0, [r3]
   11e9c:	bl	17f60 <dcngettext@plt+0x6f48>
   11ea0:	cmn	r0, #1
   11ea4:	bne	11a40 <dcngettext@plt+0xa28>
   11ea8:	bl	10f28 <__errno_location@plt>
   11eac:	mov	r2, #5
   11eb0:	ldr	r1, [pc, #448]	; 12078 <dcngettext@plt+0x1060>
   11eb4:	ldr	r4, [r0]
   11eb8:	mov	r0, #0
   11ebc:	bl	10e2c <dcgettext@plt>
   11ec0:	mov	r1, r4
   11ec4:	mov	r2, r0
   11ec8:	mov	r0, #1
   11ecc:	bl	10ea4 <error@plt>
   11ed0:	ldr	r3, [pc, #336]	; 12028 <dcngettext@plt+0x1010>
   11ed4:	ldr	r0, [r3]
   11ed8:	ldr	r3, [r0, #20]
   11edc:	ldr	r2, [r0, #24]
   11ee0:	cmp	r3, r2
   11ee4:	bcs	12128 <dcngettext@plt+0x1110>
   11ee8:	ldr	r5, [sp, #36]	; 0x24
   11eec:	add	r1, r3, #1
   11ef0:	mov	r2, #92	; 0x5c
   11ef4:	str	r1, [r0, #20]
   11ef8:	strb	r2, [r3]
   11efc:	ldr	r3, [pc, #292]	; 12028 <dcngettext@plt+0x1010>
   11f00:	mov	r2, #6
   11f04:	mov	r6, r3
   11f08:	mov	r1, #1
   11f0c:	ldr	r3, [r3]
   11f10:	ldr	r0, [pc, #360]	; 12080 <dcngettext@plt+0x1068>
   11f14:	bl	10e14 <fwrite_unlocked@plt>
   11f18:	ldr	r3, [r6]
   11f1c:	mov	r2, #2
   11f20:	mov	r1, #1
   11f24:	ldr	r0, [pc, #416]	; 120cc <dcngettext@plt+0x10b4>
   11f28:	bl	10e14 <fwrite_unlocked@plt>
   11f2c:	mov	r1, r5
   11f30:	ldr	r0, [sp, #48]	; 0x30
   11f34:	bl	12374 <dcngettext@plt+0x135c>
   11f38:	ldr	r3, [r6]
   11f3c:	mov	r2, #4
   11f40:	mov	r1, #1
   11f44:	ldr	r0, [pc, #388]	; 120d0 <dcngettext@plt+0x10b8>
   11f48:	bl	10e14 <fwrite_unlocked@plt>
   11f4c:	ldr	r3, [sl]
   11f50:	lsrs	r3, r3, #1
   11f54:	bne	11b70 <dcngettext@plt+0xb58>
   11f58:	b	11ba0 <dcngettext@plt+0xb88>
   11f5c:	ldr	r2, [pc, #368]	; 120d4 <dcngettext@plt+0x10bc>
   11f60:	mov	r3, #0
   11f64:	bl	185cc <dcngettext@plt+0x75b4>
   11f68:	add	r3, r2, #999424	; 0xf4000
   11f6c:	add	r3, r3, #576	; 0x240
   11f70:	b	1181c <dcngettext@plt+0x804>
   11f74:	ldr	r2, [pc, #344]	; 120d4 <dcngettext@plt+0x10bc>
   11f78:	mov	r3, #0
   11f7c:	bl	185cc <dcngettext@plt+0x75b4>
   11f80:	add	r3, r2, #999424	; 0xf4000
   11f84:	add	r3, r3, #576	; 0x240
   11f88:	b	117c8 <dcngettext@plt+0x7b0>
   11f8c:	ldr	r2, [pc, #320]	; 120d4 <dcngettext@plt+0x10bc>
   11f90:	mov	r3, #0
   11f94:	bl	185cc <dcngettext@plt+0x75b4>
   11f98:	add	r3, r2, #999424	; 0xf4000
   11f9c:	add	r3, r3, #576	; 0x240
   11fa0:	b	11774 <dcngettext@plt+0x75c>
   11fa4:	ldr	r3, [sp, #32]
   11fa8:	cmp	r3, #0
   11fac:	moveq	r2, #5
   11fb0:	ldreq	r1, [pc, #288]	; 120d8 <dcngettext@plt+0x10c0>
   11fb4:	moveq	r4, r3
   11fb8:	bne	11338 <dcngettext@plt+0x320>
   11fbc:	b	112a4 <dcngettext@plt+0x28c>
   11fc0:	ldr	r6, [sp, #84]	; 0x54
   11fc4:	mov	r2, #5
   11fc8:	ldr	r1, [pc, #268]	; 120dc <dcngettext@plt+0x10c4>
   11fcc:	mov	r0, r6
   11fd0:	bl	10e2c <dcgettext@plt>
   11fd4:	ldr	r2, [sp, #48]	; 0x30
   11fd8:	mov	r1, #3
   11fdc:	mov	r5, r0
   11fe0:	mov	r0, r6
   11fe4:	bl	17590 <dcngettext@plt+0x6578>
   11fe8:	mov	r2, r5
   11fec:	mov	r1, r6
   11ff0:	mov	r3, r0
   11ff4:	mov	r0, r6
   11ff8:	bl	10ea4 <error@plt>
   11ffc:	b	118a4 <dcngettext@plt+0x88c>
   12000:	mov	r5, #0
   12004:	b	11efc <dcngettext@plt+0xee4>
   12008:	mov	r1, #92	; 0x5c
   1200c:	bl	10fa0 <__overflow@plt>
   12010:	b	116e0 <dcngettext@plt+0x6c8>
   12014:	andeq	r9, r2, r8, lsl #30
   12018:	andeq	r8, r1, r8, asr #28
   1201c:	andeq	r8, r1, r8, asr #30
   12020:	muleq	r1, ip, lr
   12024:			; <UNDEFINED> instruction: 0x000129b0
   12028:	andeq	sl, r2, r4, ror #2
   1202c:	andeq	r8, r1, r0, lsl #16
   12030:	andeq	r8, r1, ip, lsl #31
   12034:	andeq	r0, r0, r1, lsl #2
   12038:	andeq	r0, r0, r3, lsl #2
   1203c:	andeq	sl, r2, ip, ror #2
   12040:	strdeq	sl, [r2], -r8
   12044:	andeq	r8, r1, ip, asr pc
   12048:	andeq	r8, r1, ip, ror #30
   1204c:	andeq	sl, r2, r0, lsl #2
   12050:	andeq	r8, r1, ip, ror pc
   12054:	strdeq	r8, [r1], -r0
   12058:	muleq	r1, r8, lr
   1205c:			; <UNDEFINED> instruction: 0x00018fb8
   12060:	andeq	r9, r1, r4, asr #2
   12064:	strdeq	r8, [r1], -r4
   12068:	andeq	r9, r1, r0, lsr r0
   1206c:	andeq	r9, r1, r4, lsl #3
   12070:	andeq	sl, r2, r0, asr r1
   12074:	andeq	r8, r1, r8, ror #17
   12078:	andeq	r9, r1, r4, asr #3
   1207c:	andeq	sl, r2, r0, ror #2
   12080:	andeq	r8, r1, ip, ror #18
   12084:	ldrdeq	r9, [r1], -r4
   12088:	andeq	r9, r1, r0, lsr #4
   1208c:	andeq	r9, r1, r4, lsr r2
   12090:			; <UNDEFINED> instruction: 0x000192bc
   12094:	andeq	r9, r1, ip, lsl #5
   12098:	andeq	r9, r1, r8, lsl r3
   1209c:	andeq	r9, r1, r8, ror #5
   120a0:	andeq	r9, r1, r4, ror r3
   120a4:	andeq	r9, r1, r4, asr #6
   120a8:	strdeq	r9, [r1], -r0
   120ac:	andeq	r8, r1, r8, asr #15
   120b0:	andeq	r9, r1, ip, lsr r2
   120b4:	andeq	r8, r1, ip, ror #17
   120b8:			; <UNDEFINED> instruction: 0x000194b0
   120bc:	andeq	r9, r1, r0, asr #7
   120c0:	andeq	r9, r1, r8, asr r2
   120c4:	andeq	r9, r1, r8, asr #4
   120c8:	andeq	r9, r1, r4, asr #4
   120cc:	andeq	r9, r1, r8, asr #7
   120d0:	andeq	r9, r1, ip, asr #7
   120d4:	andeq	r4, pc, r0, asr #4
   120d8:	andeq	r9, r1, r4, lsl #2
   120dc:	andeq	r9, r1, r4, lsr #7
   120e0:	andeq	r9, r1, ip, ror r0
   120e4:	andeq	r9, r1, r4, asr #1
   120e8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   120ec:	mov	r3, #1
   120f0:	str	r3, [sp, #72]	; 0x48
   120f4:	b	11a34 <dcngettext@plt+0xa1c>
   120f8:	mov	r1, #92	; 0x5c
   120fc:	bl	10fa0 <__overflow@plt>
   12100:	b	119e0 <dcngettext@plt+0x9c8>
   12104:	mov	r1, #32
   12108:	bl	10fa0 <__overflow@plt>
   1210c:	b	11e00 <dcngettext@plt+0xde8>
   12110:	ldr	r1, [sp, #100]	; 0x64
   12114:	bl	10fa0 <__overflow@plt>
   12118:	b	11e28 <dcngettext@plt+0xe10>
   1211c:	mov	r1, #92	; 0x5c
   12120:	bl	10fa0 <__overflow@plt>
   12124:	b	11dcc <dcngettext@plt+0xdb4>
   12128:	mov	r1, #92	; 0x5c
   1212c:	bl	10fa0 <__overflow@plt>
   12130:	ldr	r5, [sp, #36]	; 0x24
   12134:	b	11efc <dcngettext@plt+0xee4>
   12138:	ldr	r1, [pc, #-96]	; 120e0 <dcngettext@plt+0x10c8>
   1213c:	mov	r2, #5
   12140:	mov	r0, #0
   12144:	bl	10e2c <dcgettext@plt>
   12148:	mov	r1, #0
   1214c:	mov	r2, r0
   12150:	mov	r0, r1
   12154:	bl	10ea4 <error@plt>
   12158:	mov	r0, #1
   1215c:	bl	125c8 <dcngettext@plt+0x15b0>
   12160:	bl	10e38 <__stack_chk_fail@plt>
   12164:	ldrb	r3, [sl, #6]
   12168:	cmp	r3, #0
   1216c:	beq	1127c <dcngettext@plt+0x264>
   12170:	ldr	r3, [sp, #32]
   12174:	cmp	r3, #0
   12178:	bne	11310 <dcngettext@plt+0x2f8>
   1217c:	mov	r2, #5
   12180:	ldr	r1, [pc, #-164]	; 120e4 <dcngettext@plt+0x10cc>
   12184:	b	12140 <dcngettext@plt+0x1128>
   12188:	mov	r2, #5
   1218c:	ldr	r1, [pc, #-172]	; 120e8 <dcngettext@plt+0x10d0>
   12190:	b	112a4 <dcngettext@plt+0x28c>
   12194:	mov	fp, #0
   12198:	mov	lr, #0
   1219c:	pop	{r1}		; (ldr r1, [sp], #4)
   121a0:	mov	r2, sp
   121a4:	push	{r2}		; (str r2, [sp, #-4]!)
   121a8:	push	{r0}		; (str r0, [sp, #-4]!)
   121ac:	ldr	ip, [pc, #16]	; 121c4 <dcngettext@plt+0x11ac>
   121b0:	push	{ip}		; (str ip, [sp, #-4]!)
   121b4:	ldr	r0, [pc, #12]	; 121c8 <dcngettext@plt+0x11b0>
   121b8:	ldr	r3, [pc, #12]	; 121cc <dcngettext@plt+0x11b4>
   121bc:	bl	10ebc <__libc_start_main@plt>
   121c0:	bl	11000 <abort@plt>
   121c4:	andeq	r8, r1, r0, lsr #15
   121c8:	andeq	r1, r1, r4, lsr #32
   121cc:	andeq	r8, r1, r0, asr #14
   121d0:	ldr	r3, [pc, #20]	; 121ec <dcngettext@plt+0x11d4>
   121d4:	ldr	r2, [pc, #20]	; 121f0 <dcngettext@plt+0x11d8>
   121d8:	add	r3, pc, r3
   121dc:	ldr	r2, [r3, r2]
   121e0:	cmp	r2, #0
   121e4:	bxeq	lr
   121e8:	b	10ee0 <__gmon_start__@plt>
   121ec:	andeq	r7, r1, r0, lsr #28
   121f0:	andeq	r0, r0, ip, ror #1
   121f4:	ldr	r0, [pc, #24]	; 12214 <dcngettext@plt+0x11fc>
   121f8:	ldr	r3, [pc, #24]	; 12218 <dcngettext@plt+0x1200>
   121fc:	cmp	r3, r0
   12200:	bxeq	lr
   12204:	ldr	r3, [pc, #16]	; 1221c <dcngettext@plt+0x1204>
   12208:	cmp	r3, #0
   1220c:	bxeq	lr
   12210:	bx	r3
   12214:	andeq	sl, r2, r8, asr #2
   12218:	andeq	sl, r2, r8, asr #2
   1221c:	andeq	r0, r0, r0
   12220:	ldr	r0, [pc, #36]	; 1224c <dcngettext@plt+0x1234>
   12224:	ldr	r1, [pc, #36]	; 12250 <dcngettext@plt+0x1238>
   12228:	sub	r1, r1, r0
   1222c:	asr	r1, r1, #2
   12230:	add	r1, r1, r1, lsr #31
   12234:	asrs	r1, r1, #1
   12238:	bxeq	lr
   1223c:	ldr	r3, [pc, #16]	; 12254 <dcngettext@plt+0x123c>
   12240:	cmp	r3, #0
   12244:	bxeq	lr
   12248:	bx	r3
   1224c:	andeq	sl, r2, r8, asr #2
   12250:	andeq	sl, r2, r8, asr #2
   12254:	andeq	r0, r0, r0
   12258:	push	{r4, lr}
   1225c:	ldr	r4, [pc, #24]	; 1227c <dcngettext@plt+0x1264>
   12260:	ldrb	r3, [r4]
   12264:	cmp	r3, #0
   12268:	popne	{r4, pc}
   1226c:	bl	121f4 <dcngettext@plt+0x11dc>
   12270:	mov	r3, #1
   12274:	strb	r3, [r4]
   12278:	pop	{r4, pc}
   1227c:	andeq	sl, r2, r8, ror #2
   12280:	b	12220 <dcngettext@plt+0x1208>
   12284:	ldr	r3, [pc, #80]	; 122dc <dcngettext@plt+0x12c4>
   12288:	push	{r4, r5, r6, lr}
   1228c:	mov	r5, r0
   12290:	ldr	r4, [r3]
   12294:	cmp	r4, #0
   12298:	beq	122cc <dcngettext@plt+0x12b4>
   1229c:	bl	10ef8 <__ctype_b_loc@plt>
   122a0:	mov	r3, r5
   122a4:	add	r1, r5, r4
   122a8:	ldr	ip, [r0]
   122ac:	ldrb	r2, [r3], #1
   122b0:	mov	r5, r3
   122b4:	lsl	r2, r2, #1
   122b8:	ldrh	r0, [ip, r2]
   122bc:	ands	r0, r0, #4096	; 0x1000
   122c0:	popeq	{r4, r5, r6, pc}
   122c4:	cmp	r1, r3
   122c8:	bne	122ac <dcngettext@plt+0x1294>
   122cc:	ldrb	r0, [r5]
   122d0:	clz	r0, r0
   122d4:	lsr	r0, r0, #5
   122d8:	pop	{r4, r5, r6, pc}
   122dc:	andeq	sl, r2, ip, ror #2
   122e0:	cmp	r1, #0
   122e4:	bxeq	lr
   122e8:	push	{r4, r5, lr}
   122ec:	add	ip, r0, #1
   122f0:	mov	r2, #0
   122f4:	sub	r4, r1, #1
   122f8:	mov	r5, #10
   122fc:	ldrb	r3, [r0, r2]
   12300:	cmp	r3, #0
   12304:	beq	12334 <dcngettext@plt+0x131c>
   12308:	cmp	r3, #92	; 0x5c
   1230c:	mov	lr, ip
   12310:	bne	1233c <dcngettext@plt+0x1324>
   12314:	cmp	r4, r2
   12318:	add	r2, r2, #1
   1231c:	beq	12334 <dcngettext@plt+0x131c>
   12320:	ldrb	r3, [r0, r2]
   12324:	cmp	r3, #92	; 0x5c
   12328:	beq	1236c <dcngettext@plt+0x1354>
   1232c:	cmp	r3, #110	; 0x6e
   12330:	beq	12364 <dcngettext@plt+0x134c>
   12334:	mov	r0, #0
   12338:	pop	{r4, r5, pc}
   1233c:	strb	r3, [ip, #-1]
   12340:	add	r2, r2, #1
   12344:	cmp	r1, r2
   12348:	add	ip, ip, #1
   1234c:	bhi	122fc <dcngettext@plt+0x12e4>
   12350:	add	r1, r0, r1
   12354:	cmp	lr, r1
   12358:	movcc	r3, #0
   1235c:	strbcc	r3, [lr]
   12360:	pop	{r4, r5, pc}
   12364:	strb	r5, [ip, #-1]
   12368:	b	12340 <dcngettext@plt+0x1328>
   1236c:	strb	r3, [ip, #-1]
   12370:	b	12340 <dcngettext@plt+0x1328>
   12374:	cmp	r1, #0
   12378:	beq	1241c <dcngettext@plt+0x1404>
   1237c:	push	{r4, r5, r6, r7, r8, lr}
   12380:	mov	r4, r0
   12384:	ldrb	ip, [r0]
   12388:	cmp	ip, #0
   1238c:	popeq	{r4, r5, r6, r7, r8, pc}
   12390:	ldr	r6, [pc, #144]	; 12428 <dcngettext@plt+0x1410>
   12394:	ldr	r7, [pc, #144]	; 1242c <dcngettext@plt+0x1414>
   12398:	ldr	r5, [pc, #144]	; 12430 <dcngettext@plt+0x1418>
   1239c:	b	123c8 <dcngettext@plt+0x13b0>
   123a0:	ldr	r3, [lr, #20]
   123a4:	ldr	r2, [lr, #24]
   123a8:	add	r1, r3, #1
   123ac:	cmp	r3, r2
   123b0:	strcc	r1, [lr, #20]
   123b4:	strbcc	ip, [r3]
   123b8:	bcs	1240c <dcngettext@plt+0x13f4>
   123bc:	ldrb	ip, [r4, #1]!
   123c0:	cmp	ip, #0
   123c4:	popeq	{r4, r5, r6, r7, r8, pc}
   123c8:	cmp	ip, #10
   123cc:	ldr	lr, [r6]
   123d0:	beq	123f4 <dcngettext@plt+0x13dc>
   123d4:	cmp	ip, #92	; 0x5c
   123d8:	mov	r3, lr
   123dc:	mov	r2, #2
   123e0:	mov	r1, #1
   123e4:	mov	r0, r5
   123e8:	bne	123a0 <dcngettext@plt+0x1388>
   123ec:	bl	10e14 <fwrite_unlocked@plt>
   123f0:	b	123bc <dcngettext@plt+0x13a4>
   123f4:	mov	r3, lr
   123f8:	mov	r2, #2
   123fc:	mov	r1, #1
   12400:	mov	r0, r7
   12404:	bl	10e14 <fwrite_unlocked@plt>
   12408:	b	123bc <dcngettext@plt+0x13a4>
   1240c:	mov	r1, ip
   12410:	mov	r0, lr
   12414:	bl	10fa0 <__overflow@plt>
   12418:	b	123bc <dcngettext@plt+0x13a4>
   1241c:	ldr	r3, [pc, #4]	; 12428 <dcngettext@plt+0x1410>
   12420:	ldr	r1, [r3]
   12424:	b	10d9c <fputs_unlocked@plt>
   12428:	andeq	sl, r2, r4, ror #2
   1242c:	andeq	r8, r1, r0, ror #17
   12430:	andeq	r8, r1, r4, ror #17
   12434:	push	{r4, r5, r6, r7, r8, lr}
   12438:	mov	r6, r1
   1243c:	ldr	r1, [pc, #368]	; 125b4 <dcngettext@plt+0x159c>
   12440:	mov	r5, r2
   12444:	mov	r7, r0
   12448:	bl	10dc0 <strcmp@plt>
   1244c:	mov	r3, #0
   12450:	strb	r3, [r5]
   12454:	cmp	r0, r3
   12458:	bne	1249c <dcngettext@plt+0x1484>
   1245c:	ldr	r5, [pc, #340]	; 125b8 <dcngettext@plt+0x15a0>
   12460:	ldr	r3, [pc, #340]	; 125bc <dcngettext@plt+0x15a4>
   12464:	mov	r2, #1
   12468:	ldr	r4, [r5]
   1246c:	mov	r1, #2
   12470:	mov	r0, r4
   12474:	strb	r2, [r3, #4]
   12478:	bl	1542c <dcngettext@plt+0x4414>
   1247c:	mov	r1, r6
   12480:	mov	r0, r4
   12484:	bl	15400 <dcngettext@plt+0x43e8>
   12488:	cmp	r0, #0
   1248c:	bne	12514 <dcngettext@plt+0x14fc>
   12490:	mov	r4, #1
   12494:	mov	r0, r4
   12498:	pop	{r4, r5, r6, r7, r8, pc}
   1249c:	ldr	r1, [pc, #284]	; 125c0 <dcngettext@plt+0x15a8>
   124a0:	mov	r0, r7
   124a4:	bl	15460 <dcngettext@plt+0x4448>
   124a8:	subs	r4, r0, #0
   124ac:	beq	12560 <dcngettext@plt+0x1548>
   124b0:	mov	r1, #2
   124b4:	bl	1542c <dcngettext@plt+0x4414>
   124b8:	mov	r1, r6
   124bc:	mov	r0, r4
   124c0:	bl	15400 <dcngettext@plt+0x43e8>
   124c4:	subs	r5, r0, #0
   124c8:	ldrne	r5, [pc, #232]	; 125b8 <dcngettext@plt+0x15a0>
   124cc:	bne	12514 <dcngettext@plt+0x14fc>
   124d0:	mov	r0, r4
   124d4:	bl	17f60 <dcngettext@plt+0x6f48>
   124d8:	cmp	r0, #0
   124dc:	beq	12490 <dcngettext@plt+0x1478>
   124e0:	bl	10f28 <__errno_location@plt>
   124e4:	mov	r2, r7
   124e8:	mov	r1, #3
   124ec:	mov	r4, r5
   124f0:	ldr	r6, [r0]
   124f4:	mov	r0, r5
   124f8:	bl	17590 <dcngettext@plt+0x6578>
   124fc:	mov	r1, r6
   12500:	ldr	r2, [pc, #188]	; 125c4 <dcngettext@plt+0x15ac>
   12504:	mov	r3, r0
   12508:	mov	r0, r5
   1250c:	bl	10ea4 <error@plt>
   12510:	b	12494 <dcngettext@plt+0x147c>
   12514:	bl	10f28 <__errno_location@plt>
   12518:	mov	r2, r7
   1251c:	mov	r1, #3
   12520:	ldr	r6, [r0]
   12524:	mov	r0, #0
   12528:	bl	17590 <dcngettext@plt+0x6578>
   1252c:	mov	r1, r6
   12530:	ldr	r2, [pc, #140]	; 125c4 <dcngettext@plt+0x15ac>
   12534:	mov	r3, r0
   12538:	mov	r0, #0
   1253c:	bl	10ea4 <error@plt>
   12540:	ldr	r3, [r5]
   12544:	cmp	r3, r4
   12548:	moveq	r4, #0
   1254c:	beq	12494 <dcngettext@plt+0x147c>
   12550:	mov	r0, r4
   12554:	bl	17f60 <dcngettext@plt+0x6f48>
   12558:	mov	r4, #0
   1255c:	b	12494 <dcngettext@plt+0x147c>
   12560:	ldr	r3, [pc, #84]	; 125bc <dcngettext@plt+0x15a4>
   12564:	ldrb	r4, [r3, #5]
   12568:	bl	10f28 <__errno_location@plt>
   1256c:	cmp	r4, #0
   12570:	ldr	r6, [r0]
   12574:	beq	12588 <dcngettext@plt+0x1570>
   12578:	cmp	r6, #2
   1257c:	moveq	r3, #1
   12580:	strbeq	r3, [r5]
   12584:	beq	12494 <dcngettext@plt+0x147c>
   12588:	mov	r2, r7
   1258c:	mov	r1, #3
   12590:	mov	r0, #0
   12594:	bl	17590 <dcngettext@plt+0x6578>
   12598:	mov	r1, r6
   1259c:	ldr	r2, [pc, #32]	; 125c4 <dcngettext@plt+0x15ac>
   125a0:	mov	r4, #0
   125a4:	mov	r3, r0
   125a8:	mov	r0, #0
   125ac:	bl	10ea4 <error@plt>
   125b0:	b	12494 <dcngettext@plt+0x147c>
   125b4:	andeq	r8, r1, r8, ror #17
   125b8:	andeq	sl, r2, r0, ror #2
   125bc:	andeq	sl, r2, ip, ror #2
   125c0:	andeq	r8, r1, ip, ror #17
   125c4:			; <UNDEFINED> instruction: 0x000194b0
   125c8:	ldr	r3, [pc, #844]	; 1291c <dcngettext@plt+0x1904>
   125cc:	push	{r7, lr}
   125d0:	sub	sp, sp, #72	; 0x48
   125d4:	ldr	r3, [r3]
   125d8:	subs	r4, r0, #0
   125dc:	str	r3, [sp, #68]	; 0x44
   125e0:	beq	1261c <dcngettext@plt+0x1604>
   125e4:	ldr	r3, [pc, #820]	; 12920 <dcngettext@plt+0x1908>
   125e8:	mov	r2, #5
   125ec:	ldr	r1, [pc, #816]	; 12924 <dcngettext@plt+0x190c>
   125f0:	mov	r0, #0
   125f4:	ldr	r5, [r3]
   125f8:	bl	10e2c <dcgettext@plt>
   125fc:	ldr	r3, [pc, #804]	; 12928 <dcngettext@plt+0x1910>
   12600:	mov	r1, #1
   12604:	ldr	r3, [r3]
   12608:	mov	r2, r0
   1260c:	mov	r0, r5
   12610:	bl	10f70 <__fprintf_chk@plt>
   12614:	mov	r0, r4
   12618:	bl	10f04 <exit@plt>
   1261c:	mov	r2, #5
   12620:	ldr	r1, [pc, #772]	; 1292c <dcngettext@plt+0x1914>
   12624:	bl	10e2c <dcgettext@plt>
   12628:	ldr	r2, [pc, #760]	; 12928 <dcngettext@plt+0x1910>
   1262c:	ldr	r5, [pc, #764]	; 12930 <dcngettext@plt+0x1918>
   12630:	mov	r3, #256	; 0x100
   12634:	ldr	r2, [r2]
   12638:	str	r3, [sp]
   1263c:	ldr	r3, [pc, #752]	; 12934 <dcngettext@plt+0x191c>
   12640:	mov	r1, r0
   12644:	mov	r0, #1
   12648:	bl	10f58 <__printf_chk@plt>
   1264c:	mov	r2, #5
   12650:	ldr	r1, [pc, #736]	; 12938 <dcngettext@plt+0x1920>
   12654:	mov	r0, r4
   12658:	bl	10e2c <dcgettext@plt>
   1265c:	ldr	r1, [r5]
   12660:	bl	10d9c <fputs_unlocked@plt>
   12664:	mov	r2, #5
   12668:	ldr	r1, [pc, #716]	; 1293c <dcngettext@plt+0x1924>
   1266c:	mov	r0, r4
   12670:	bl	10e2c <dcgettext@plt>
   12674:	ldr	r1, [r5]
   12678:	bl	10d9c <fputs_unlocked@plt>
   1267c:	mov	r2, #5
   12680:	ldr	r1, [pc, #696]	; 12940 <dcngettext@plt+0x1928>
   12684:	mov	r0, r4
   12688:	bl	10e2c <dcgettext@plt>
   1268c:	ldr	r2, [pc, #672]	; 12934 <dcngettext@plt+0x191c>
   12690:	mov	r1, r0
   12694:	mov	r0, #1
   12698:	bl	10f58 <__printf_chk@plt>
   1269c:	mov	r2, #5
   126a0:	ldr	r1, [pc, #668]	; 12944 <dcngettext@plt+0x192c>
   126a4:	mov	r0, r4
   126a8:	bl	10e2c <dcgettext@plt>
   126ac:	ldr	r1, [r5]
   126b0:	bl	10d9c <fputs_unlocked@plt>
   126b4:	mov	r2, #5
   126b8:	ldr	r1, [pc, #648]	; 12948 <dcngettext@plt+0x1930>
   126bc:	mov	r0, r4
   126c0:	bl	10e2c <dcgettext@plt>
   126c4:	ldr	r1, [r5]
   126c8:	bl	10d9c <fputs_unlocked@plt>
   126cc:	mov	r2, #5
   126d0:	ldr	r1, [pc, #628]	; 1294c <dcngettext@plt+0x1934>
   126d4:	mov	r0, r4
   126d8:	bl	10e2c <dcgettext@plt>
   126dc:	ldr	r1, [r5]
   126e0:	bl	10d9c <fputs_unlocked@plt>
   126e4:	mov	r2, #5
   126e8:	ldr	r1, [pc, #608]	; 12950 <dcngettext@plt+0x1938>
   126ec:	mov	r0, r4
   126f0:	bl	10e2c <dcgettext@plt>
   126f4:	ldr	r1, [r5]
   126f8:	bl	10d9c <fputs_unlocked@plt>
   126fc:	mov	r2, #5
   12700:	ldr	r1, [pc, #588]	; 12954 <dcngettext@plt+0x193c>
   12704:	mov	r0, r4
   12708:	bl	10e2c <dcgettext@plt>
   1270c:	ldr	r1, [r5]
   12710:	bl	10d9c <fputs_unlocked@plt>
   12714:	mov	r2, #5
   12718:	ldr	r1, [pc, #568]	; 12958 <dcngettext@plt+0x1940>
   1271c:	mov	r0, r4
   12720:	bl	10e2c <dcgettext@plt>
   12724:	ldr	r1, [r5]
   12728:	bl	10d9c <fputs_unlocked@plt>
   1272c:	mov	r2, #5
   12730:	ldr	r1, [pc, #548]	; 1295c <dcngettext@plt+0x1944>
   12734:	mov	r0, r4
   12738:	bl	10e2c <dcgettext@plt>
   1273c:	ldr	r2, [pc, #540]	; 12960 <dcngettext@plt+0x1948>
   12740:	mov	r1, r0
   12744:	mov	r0, #1
   12748:	bl	10f58 <__printf_chk@plt>
   1274c:	ldr	lr, [pc, #528]	; 12964 <dcngettext@plt+0x194c>
   12750:	add	ip, sp, #12
   12754:	ldm	lr!, {r0, r1, r2, r3}
   12758:	stmia	ip!, {r0, r1, r2, r3}
   1275c:	ldm	lr!, {r0, r1, r2, r3}
   12760:	ldr	r6, [sp, #12]
   12764:	stmia	ip!, {r0, r1, r2, r3}
   12768:	cmp	r6, #0
   1276c:	ldm	lr!, {r0, r1, r2, r3}
   12770:	addeq	r5, sp, #12
   12774:	stmia	ip!, {r0, r1, r2, r3}
   12778:	ldm	lr, {r0, r1}
   1277c:	stm	ip, {r0, r1}
   12780:	beq	127b0 <dcngettext@plt+0x1798>
   12784:	ldr	r7, [pc, #476]	; 12968 <dcngettext@plt+0x1950>
   12788:	add	r5, sp, #12
   1278c:	b	1279c <dcngettext@plt+0x1784>
   12790:	ldr	r6, [r5, #8]!
   12794:	cmp	r6, #0
   12798:	beq	127b0 <dcngettext@plt+0x1798>
   1279c:	mov	r1, r6
   127a0:	mov	r0, r7
   127a4:	bl	10dc0 <strcmp@plt>
   127a8:	cmp	r0, #0
   127ac:	bne	12790 <dcngettext@plt+0x1778>
   127b0:	ldr	r5, [r5, #4]
   127b4:	mov	r2, #5
   127b8:	cmp	r5, #0
   127bc:	ldr	r1, [pc, #424]	; 1296c <dcngettext@plt+0x1954>
   127c0:	beq	12868 <dcngettext@plt+0x1850>
   127c4:	mov	r0, #0
   127c8:	bl	10e2c <dcgettext@plt>
   127cc:	ldr	r3, [pc, #412]	; 12970 <dcngettext@plt+0x1958>
   127d0:	ldr	r2, [pc, #412]	; 12974 <dcngettext@plt+0x195c>
   127d4:	mov	r1, r0
   127d8:	mov	r0, #1
   127dc:	bl	10f58 <__printf_chk@plt>
   127e0:	mov	r1, #0
   127e4:	mov	r0, #5
   127e8:	bl	10fac <setlocale@plt>
   127ec:	cmp	r0, #0
   127f0:	ldreq	r6, [pc, #368]	; 12968 <dcngettext@plt+0x1950>
   127f4:	beq	12810 <dcngettext@plt+0x17f8>
   127f8:	mov	r2, #3
   127fc:	ldr	r1, [pc, #372]	; 12978 <dcngettext@plt+0x1960>
   12800:	bl	10ff4 <strncmp@plt>
   12804:	ldr	r6, [pc, #348]	; 12968 <dcngettext@plt+0x1950>
   12808:	cmp	r0, #0
   1280c:	bne	128f8 <dcngettext@plt+0x18e0>
   12810:	mov	r2, #5
   12814:	ldr	r1, [pc, #352]	; 1297c <dcngettext@plt+0x1964>
   12818:	mov	r0, #0
   1281c:	bl	10e2c <dcgettext@plt>
   12820:	ldr	r3, [pc, #320]	; 12968 <dcngettext@plt+0x1950>
   12824:	ldr	r2, [pc, #324]	; 12970 <dcngettext@plt+0x1958>
   12828:	mov	r1, r0
   1282c:	mov	r0, #1
   12830:	bl	10f58 <__printf_chk@plt>
   12834:	mov	r2, #5
   12838:	ldr	r1, [pc, #320]	; 12980 <dcngettext@plt+0x1968>
   1283c:	mov	r0, #0
   12840:	bl	10e2c <dcgettext@plt>
   12844:	ldr	r2, [pc, #312]	; 12984 <dcngettext@plt+0x196c>
   12848:	cmp	r5, r6
   1284c:	ldr	r3, [pc, #308]	; 12988 <dcngettext@plt+0x1970>
   12850:	movne	r3, r2
   12854:	mov	r1, r0
   12858:	mov	r2, r5
   1285c:	mov	r0, #1
   12860:	bl	10f58 <__printf_chk@plt>
   12864:	b	12614 <dcngettext@plt+0x15fc>
   12868:	mov	r0, r5
   1286c:	bl	10e2c <dcgettext@plt>
   12870:	ldr	r3, [pc, #248]	; 12970 <dcngettext@plt+0x1958>
   12874:	ldr	r2, [pc, #248]	; 12974 <dcngettext@plt+0x195c>
   12878:	mov	r1, r0
   1287c:	mov	r0, #1
   12880:	bl	10f58 <__printf_chk@plt>
   12884:	mov	r1, r5
   12888:	mov	r0, #5
   1288c:	bl	10fac <setlocale@plt>
   12890:	cmp	r0, #0
   12894:	beq	128ac <dcngettext@plt+0x1894>
   12898:	mov	r2, #3
   1289c:	ldr	r1, [pc, #212]	; 12978 <dcngettext@plt+0x1960>
   128a0:	bl	10ff4 <strncmp@plt>
   128a4:	cmp	r0, #0
   128a8:	bne	128f0 <dcngettext@plt+0x18d8>
   128ac:	mov	r2, #5
   128b0:	ldr	r1, [pc, #196]	; 1297c <dcngettext@plt+0x1964>
   128b4:	mov	r0, #0
   128b8:	bl	10e2c <dcgettext@plt>
   128bc:	ldr	r3, [pc, #164]	; 12968 <dcngettext@plt+0x1950>
   128c0:	ldr	r2, [pc, #168]	; 12970 <dcngettext@plt+0x1958>
   128c4:	mov	r5, r3
   128c8:	mov	r1, r0
   128cc:	mov	r0, #1
   128d0:	bl	10f58 <__printf_chk@plt>
   128d4:	ldr	r1, [pc, #164]	; 12980 <dcngettext@plt+0x1968>
   128d8:	mov	r2, #5
   128dc:	mov	r0, #0
   128e0:	bl	10e2c <dcgettext@plt>
   128e4:	ldr	r3, [pc, #156]	; 12988 <dcngettext@plt+0x1970>
   128e8:	mov	r1, r0
   128ec:	b	12858 <dcngettext@plt+0x1840>
   128f0:	ldr	r6, [pc, #112]	; 12968 <dcngettext@plt+0x1950>
   128f4:	mov	r5, r6
   128f8:	mov	r2, #5
   128fc:	ldr	r1, [pc, #136]	; 1298c <dcngettext@plt+0x1974>
   12900:	mov	r0, #0
   12904:	bl	10e2c <dcgettext@plt>
   12908:	ldr	r2, [pc, #88]	; 12968 <dcngettext@plt+0x1950>
   1290c:	mov	r1, r0
   12910:	mov	r0, #1
   12914:	bl	10f58 <__printf_chk@plt>
   12918:	b	12810 <dcngettext@plt+0x17f8>
   1291c:	andeq	r9, r2, r8, lsl #30
   12920:	andeq	sl, r2, r8, asr r1
   12924:	strdeq	r8, [r1], -ip
   12928:	andeq	sl, r2, r4, lsl #3
   1292c:	andeq	r8, r1, r4, lsr #18
   12930:	andeq	sl, r2, r4, ror #2
   12934:	andeq	r8, r1, ip, ror #18
   12938:	andeq	r8, r1, r4, ror r9
   1293c:	andeq	r8, r1, ip, lsr #19
   12940:	ldrdeq	r8, [r1], -ip
   12944:	andeq	r8, r1, r0, lsr #20
   12948:	andeq	r8, r1, r4, asr sl
   1294c:	andeq	r8, r1, r8, lsl #21
   12950:	andeq	r8, r1, r4, lsl #22
   12954:			; <UNDEFINED> instruction: 0x00018cb8
   12958:	andeq	r8, r1, r8, ror #25
   1295c:	andeq	r8, r1, r0, lsr #26
   12960:	andeq	r8, r1, ip, asr #28
   12964:	andeq	r8, r1, r8, asr #15
   12968:	strdeq	r8, [r1], -r0
   1296c:	andeq	r8, r1, r8, asr lr
   12970:	andeq	r8, r1, r0, ror lr
   12974:	muleq	r1, r8, lr
   12978:	andeq	r8, r1, r8, lsr #29
   1297c:	strdeq	r8, [r1], -r4
   12980:	andeq	r8, r1, r4, lsl pc
   12984:	andeq	r8, r1, r8, asr #28
   12988:	ldrdeq	r9, [r1], -ip
   1298c:	andeq	r8, r1, ip, lsr #29
   12990:	ldr	r3, [pc, #4]	; 1299c <dcngettext@plt+0x1984>
   12994:	str	r0, [r3]
   12998:	bx	lr
   1299c:	andeq	sl, r2, ip, ror r1
   129a0:	ldr	r3, [pc, #4]	; 129ac <dcngettext@plt+0x1994>
   129a4:	strb	r0, [r3, #4]
   129a8:	bx	lr
   129ac:	andeq	sl, r2, ip, ror r1
   129b0:	ldr	r3, [pc, #180]	; 12a6c <dcngettext@plt+0x1a54>
   129b4:	push	{r4, r5, r6, lr}
   129b8:	sub	sp, sp, #8
   129bc:	ldr	r0, [r3]
   129c0:	bl	182cc <dcngettext@plt+0x72b4>
   129c4:	cmp	r0, #0
   129c8:	beq	129f0 <dcngettext@plt+0x19d8>
   129cc:	bl	10f28 <__errno_location@plt>
   129d0:	ldr	r5, [pc, #152]	; 12a70 <dcngettext@plt+0x1a58>
   129d4:	ldrb	r3, [r5, #4]
   129d8:	cmp	r3, #0
   129dc:	mov	r4, r0
   129e0:	beq	12a0c <dcngettext@plt+0x19f4>
   129e4:	ldr	r3, [r0]
   129e8:	cmp	r3, #32
   129ec:	bne	12a0c <dcngettext@plt+0x19f4>
   129f0:	ldr	r3, [pc, #124]	; 12a74 <dcngettext@plt+0x1a5c>
   129f4:	ldr	r0, [r3]
   129f8:	bl	182cc <dcngettext@plt+0x72b4>
   129fc:	cmp	r0, #0
   12a00:	bne	12a4c <dcngettext@plt+0x1a34>
   12a04:	add	sp, sp, #8
   12a08:	pop	{r4, r5, r6, pc}
   12a0c:	mov	r2, #5
   12a10:	ldr	r1, [pc, #96]	; 12a78 <dcngettext@plt+0x1a60>
   12a14:	mov	r0, #0
   12a18:	bl	10e2c <dcgettext@plt>
   12a1c:	mov	r6, r0
   12a20:	ldr	r0, [r5]
   12a24:	cmp	r0, #0
   12a28:	beq	12a58 <dcngettext@plt+0x1a40>
   12a2c:	ldr	r4, [r4]
   12a30:	bl	1757c <dcngettext@plt+0x6564>
   12a34:	mov	r1, r4
   12a38:	str	r6, [sp]
   12a3c:	ldr	r2, [pc, #56]	; 12a7c <dcngettext@plt+0x1a64>
   12a40:	mov	r3, r0
   12a44:	mov	r0, #0
   12a48:	bl	10ea4 <error@plt>
   12a4c:	ldr	r3, [pc, #44]	; 12a80 <dcngettext@plt+0x1a68>
   12a50:	ldr	r0, [r3]
   12a54:	bl	10df0 <_exit@plt>
   12a58:	mov	r3, r6
   12a5c:	ldr	r1, [r4]
   12a60:	ldr	r2, [pc, #28]	; 12a84 <dcngettext@plt+0x1a6c>
   12a64:	bl	10ea4 <error@plt>
   12a68:	b	12a4c <dcngettext@plt+0x1a34>
   12a6c:	andeq	sl, r2, r4, ror #2
   12a70:	andeq	sl, r2, ip, ror r1
   12a74:	andeq	sl, r2, r8, asr r1
   12a78:	andeq	r9, r1, r0, lsr #9
   12a7c:	andeq	r9, r1, ip, lsr #9
   12a80:	andeq	sl, r2, r4, lsl #2
   12a84:			; <UNDEFINED> instruction: 0x000194b0
   12a88:	ldr	ip, [pc, #80]	; 12ae0 <dcngettext@plt+0x1ac8>
   12a8c:	ldr	r1, [pc, #80]	; 12ae4 <dcngettext@plt+0x1acc>
   12a90:	ldr	r2, [pc, #80]	; 12ae8 <dcngettext@plt+0x1ad0>
   12a94:	ldr	r3, [pc, #80]	; 12aec <dcngettext@plt+0x1ad4>
   12a98:	push	{lr}		; (str lr, [sp, #-4]!)
   12a9c:	str	ip, [r0]
   12aa0:	ldr	lr, [pc, #72]	; 12af0 <dcngettext@plt+0x1ad8>
   12aa4:	ldr	ip, [pc, #72]	; 12af4 <dcngettext@plt+0x1adc>
   12aa8:	str	r1, [r0, #4]
   12aac:	str	r2, [r0, #8]
   12ab0:	ldr	r1, [pc, #64]	; 12af8 <dcngettext@plt+0x1ae0>
   12ab4:	ldr	r2, [pc, #64]	; 12afc <dcngettext@plt+0x1ae4>
   12ab8:	str	r3, [r0, #12]
   12abc:	mov	r3, #0
   12ac0:	str	lr, [r0, #16]
   12ac4:	str	ip, [r0, #20]
   12ac8:	str	r1, [r0, #24]
   12acc:	str	r2, [r0, #28]
   12ad0:	str	r3, [r0, #36]	; 0x24
   12ad4:	str	r3, [r0, #32]
   12ad8:	str	r3, [r0, #40]	; 0x28
   12adc:	pop	{pc}		; (ldr pc, [sp], #4)
   12ae0:	bvs	28c484 <stdout@@GLIBC_2.4+0x262320>
   12ae4:	bllt	19fe500 <stdout@@GLIBC_2.4+0x19d439c>
   12ae8:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   12aec:	strbge	pc, [pc, #-1338]	; 125ba <dcngettext@plt+0x15a2>	; <UNPREDICTABLE>
   12af0:	tstpl	lr, pc, ror r2
   12af4:	blls	16cd2c <stdout@@GLIBC_2.4+0x142bc8>
   12af8:	svcne	0x0083d9ab
   12afc:	blpl	ff845f68 <stdout@@GLIBC_2.4+0xff81be04>
   12b00:	ldr	ip, [pc, #80]	; 12b58 <dcngettext@plt+0x1b40>
   12b04:	ldr	r1, [pc, #80]	; 12b5c <dcngettext@plt+0x1b44>
   12b08:	ldr	r2, [pc, #80]	; 12b60 <dcngettext@plt+0x1b48>
   12b0c:	ldr	r3, [pc, #80]	; 12b64 <dcngettext@plt+0x1b4c>
   12b10:	push	{lr}		; (str lr, [sp, #-4]!)
   12b14:	str	ip, [r0]
   12b18:	ldr	lr, [pc, #72]	; 12b68 <dcngettext@plt+0x1b50>
   12b1c:	ldr	ip, [pc, #72]	; 12b6c <dcngettext@plt+0x1b54>
   12b20:	str	r1, [r0, #4]
   12b24:	str	r2, [r0, #8]
   12b28:	ldr	r1, [pc, #64]	; 12b70 <dcngettext@plt+0x1b58>
   12b2c:	ldr	r2, [pc, #64]	; 12b74 <dcngettext@plt+0x1b5c>
   12b30:	str	r3, [r0, #12]
   12b34:	mov	r3, #0
   12b38:	str	lr, [r0, #16]
   12b3c:	str	ip, [r0, #20]
   12b40:	str	r1, [r0, #24]
   12b44:	str	r2, [r0, #28]
   12b48:	str	r3, [r0, #36]	; 0x24
   12b4c:	str	r3, [r0, #32]
   12b50:	str	r3, [r0, #40]	; 0x28
   12b54:	pop	{pc}		; (ldr pc, [sp], #4)
   12b58:	ldrdgt	r9, [r5, -r8]
   12b5c:	ldrbtcc	sp, [ip], -r7, lsl #10
   12b60:	rsbscc	sp, r0, r7, lsl sp
   12b64:			; <UNDEFINED> instruction: 0xf70e5939
   12b68:			; <UNDEFINED> instruction: 0xffc00b31
   12b6c:	ldmdavs	r8, {r0, r4, r8, sl, ip}^
   12b70:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   12b74:	cdplt	15, 15, cr4, cr10, cr4, {5}
   12b78:	push	{lr}		; (str lr, [sp, #-4]!)
   12b7c:	sub	r2, r0, #4
   12b80:	add	lr, r0, #28
   12b84:	mov	ip, r1
   12b88:	ldr	r3, [r2, #4]!
   12b8c:	rev	r3, r3
   12b90:	cmp	r2, lr
   12b94:	str	r3, [ip], #4
   12b98:	bne	12b88 <dcngettext@plt+0x1b70>
   12b9c:	mov	r0, r1
   12ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ba4:	push	{lr}		; (str lr, [sp, #-4]!)
   12ba8:	sub	r2, r0, #4
   12bac:	add	lr, r0, #24
   12bb0:	mov	ip, r1
   12bb4:	ldr	r3, [r2, #4]!
   12bb8:	rev	r3, r3
   12bbc:	cmp	r2, lr
   12bc0:	str	r3, [ip], #4
   12bc4:	bne	12bb4 <dcngettext@plt+0x1b9c>
   12bc8:	mov	r0, r1
   12bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   12bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bd4:	sub	sp, sp, #196	; 0xc4
   12bd8:	ldr	r3, [r2, #32]
   12bdc:	ldr	ip, [pc, #4088]	; 13bdc <dcngettext@plt+0x2bc4>
   12be0:	mov	r5, r2
   12be4:	adds	r3, r3, r1
   12be8:	str	r2, [sp, #112]	; 0x70
   12bec:	bic	r1, r1, #3
   12bf0:	ldr	r2, [r2, #36]	; 0x24
   12bf4:	movcs	lr, #1
   12bf8:	movcc	lr, #0
   12bfc:	add	r4, r0, r1
   12c00:	ldr	ip, [ip]
   12c04:	cmp	r0, r4
   12c08:	add	r2, r2, lr
   12c0c:	str	ip, [sp, #188]	; 0xbc
   12c10:	str	r3, [r5, #32]
   12c14:	str	r2, [r5, #36]	; 0x24
   12c18:	ldr	r9, [r5]
   12c1c:	ldmib	r5, {r8, sl}
   12c20:	ldr	r7, [r5, #12]
   12c24:	ldr	fp, [r5, #16]
   12c28:	ldr	r6, [r5, #20]
   12c2c:	ldr	r4, [r5, #24]
   12c30:	ldr	ip, [r5, #28]
   12c34:	bcs	14ecc <dcngettext@plt+0x3eb4>
   12c38:	sub	r1, r1, #1
   12c3c:	add	r2, r0, #124	; 0x7c
   12c40:	bic	r3, r1, #63	; 0x3f
   12c44:	add	r3, r3, r2
   12c48:	str	r3, [sp, #116]	; 0x74
   12c4c:	str	ip, [sp, #108]	; 0x6c
   12c50:	add	r3, r0, #60	; 0x3c
   12c54:	mov	r5, r8
   12c58:	mov	r0, ip
   12c5c:	mov	r2, r9
   12c60:	mov	ip, r7
   12c64:	str	r3, [sp, #76]	; 0x4c
   12c68:	str	r4, [sp, #104]	; 0x68
   12c6c:	str	r6, [sp, #100]	; 0x64
   12c70:	str	fp, [sp, #96]	; 0x60
   12c74:	str	r7, [sp, #92]	; 0x5c
   12c78:	str	sl, [sp, #88]	; 0x58
   12c7c:	str	r8, [sp, #84]	; 0x54
   12c80:	str	r9, [sp, #80]	; 0x50
   12c84:	ldr	r7, [sp, #76]	; 0x4c
   12c88:	add	lr, sp, #124	; 0x7c
   12c8c:	sub	r1, r7, #64	; 0x40
   12c90:	ldr	r3, [r1, #4]!
   12c94:	rev	r3, r3
   12c98:	cmp	r7, r1
   12c9c:	str	r3, [lr], #4
   12ca0:	bne	12c90 <dcngettext@plt+0x1c78>
   12ca4:	ldr	r1, [sp, #124]	; 0x7c
   12ca8:	ldr	r8, [pc, #3888]	; 13be0 <dcngettext@plt+0x2bc8>
   12cac:	ror	r3, fp, #11
   12cb0:	add	r8, r1, r8
   12cb4:	eor	r3, r3, fp, ror #6
   12cb8:	eor	lr, r6, r4
   12cbc:	orr	r7, r2, r5
   12cc0:	eor	r3, r3, fp, ror #25
   12cc4:	ror	r1, r2, #13
   12cc8:	add	r0, r8, r0
   12ccc:	and	r7, r7, sl
   12cd0:	and	r8, r2, r5
   12cd4:	and	lr, lr, fp
   12cd8:	eor	r1, r1, r2, ror #2
   12cdc:	add	r0, r3, r0
   12ce0:	ldr	r3, [sp, #128]	; 0x80
   12ce4:	eor	lr, lr, r4
   12ce8:	orr	r8, r7, r8
   12cec:	eor	r1, r1, r2, ror #22
   12cf0:	add	r0, r0, lr
   12cf4:	add	r1, r1, r8
   12cf8:	add	r3, r3, #1895825408	; 0x71000000
   12cfc:	add	ip, r0, ip
   12d00:	add	r3, r3, #3620864	; 0x374000
   12d04:	add	r0, r1, r0
   12d08:	add	r3, r3, #1168	; 0x490
   12d0c:	eor	r1, fp, r6
   12d10:	ror	r7, ip, #11
   12d14:	orr	r9, r0, r2
   12d18:	and	r1, r1, ip
   12d1c:	ror	lr, r0, #13
   12d20:	add	r3, r3, #1
   12d24:	eor	r1, r1, r6
   12d28:	and	r9, r9, r5
   12d2c:	and	r8, r0, r2
   12d30:	add	r3, r3, r4
   12d34:	eor	lr, lr, r0, ror #2
   12d38:	eor	r4, r7, ip, ror #6
   12d3c:	eor	r4, r4, ip, ror #25
   12d40:	eor	lr, lr, r0, ror #22
   12d44:	add	r3, r1, r3
   12d48:	orr	r8, r9, r8
   12d4c:	add	r3, r3, r4
   12d50:	add	r8, lr, r8
   12d54:	add	r7, r3, sl
   12d58:	ldr	r4, [sp, #132]	; 0x84
   12d5c:	add	r3, r8, r3
   12d60:	ldr	r1, [pc, #3708]	; 13be4 <dcngettext@plt+0x2bcc>
   12d64:	eor	lr, ip, fp
   12d68:	ror	r8, r7, #11
   12d6c:	orr	r9, r0, r3
   12d70:	and	lr, lr, r7
   12d74:	add	r1, r4, r1
   12d78:	ror	r4, r3, #13
   12d7c:	eor	lr, lr, fp
   12d80:	and	r9, r9, r2
   12d84:	add	r1, r1, r6
   12d88:	eor	r4, r4, r3, ror #2
   12d8c:	eor	r6, r8, r7, ror #6
   12d90:	and	r8, r0, r3
   12d94:	eor	r6, r6, r7, ror #25
   12d98:	orr	r8, r9, r8
   12d9c:	eor	r4, r4, r3, ror #22
   12da0:	add	r1, lr, r1
   12da4:	add	r1, r1, r6
   12da8:	add	lr, r4, r8
   12dac:	add	lr, lr, r1
   12db0:	add	r5, r1, r5
   12db4:	ldr	r9, [pc, #3628]	; 13be8 <dcngettext@plt+0x2bd0>
   12db8:	ldr	r1, [sp, #136]	; 0x88
   12dbc:	eor	r8, ip, r7
   12dc0:	add	r9, r1, r9
   12dc4:	orr	r4, r3, lr
   12dc8:	and	r8, r8, r5
   12dcc:	ror	r6, r5, #11
   12dd0:	ror	r1, lr, #13
   12dd4:	eor	r8, r8, ip
   12dd8:	add	fp, r9, fp
   12ddc:	eor	r6, r6, r5, ror #6
   12de0:	and	r9, r3, lr
   12de4:	and	r4, r4, r0
   12de8:	eor	r1, r1, lr, ror #2
   12dec:	eor	r6, r6, r5, ror #25
   12df0:	orr	r4, r4, r9
   12df4:	add	fp, r8, fp
   12df8:	eor	r1, r1, lr, ror #22
   12dfc:	add	fp, fp, r6
   12e00:	add	r1, r1, r4
   12e04:	add	r1, r1, fp
   12e08:	add	r2, fp, r2
   12e0c:	ldr	r6, [sp, #140]	; 0x8c
   12e10:	ldr	sl, [pc, #3540]	; 13bec <dcngettext@plt+0x2bd4>
   12e14:	eor	r4, r7, r5
   12e18:	add	sl, r6, sl
   12e1c:	orr	r8, lr, r1
   12e20:	and	r4, r4, r2
   12e24:	ror	r9, r2, #11
   12e28:	ror	r6, r1, #13
   12e2c:	eor	r4, r4, r7
   12e30:	add	ip, sl, ip
   12e34:	eor	r9, r9, r2, ror #6
   12e38:	and	sl, lr, r1
   12e3c:	and	r8, r8, r3
   12e40:	eor	r6, r6, r1, ror #2
   12e44:	eor	r9, r9, r2, ror #25
   12e48:	orr	r8, r8, sl
   12e4c:	add	ip, r4, ip
   12e50:	eor	r6, r6, r1, ror #22
   12e54:	add	ip, ip, r9
   12e58:	add	r6, r6, r8
   12e5c:	add	r4, r0, ip
   12e60:	ldr	sl, [pc, #3464]	; 13bf0 <dcngettext@plt+0x2bd8>
   12e64:	add	ip, r6, ip
   12e68:	ldr	r6, [sp, #144]	; 0x90
   12e6c:	eor	r0, r5, r2
   12e70:	add	sl, r6, sl
   12e74:	orr	r8, r1, ip
   12e78:	and	r0, r0, r4
   12e7c:	ror	r9, r4, #11
   12e80:	ror	r6, ip, #13
   12e84:	eor	r0, r0, r5
   12e88:	add	r7, sl, r7
   12e8c:	eor	r9, r9, r4, ror #6
   12e90:	and	sl, r1, ip
   12e94:	and	r8, r8, lr
   12e98:	eor	r6, r6, ip, ror #2
   12e9c:	eor	r9, r9, r4, ror #25
   12ea0:	orr	r8, r8, sl
   12ea4:	eor	r6, r6, ip, ror #22
   12ea8:	add	r7, r0, r7
   12eac:	add	r7, r7, r9
   12eb0:	add	r0, r6, r8
   12eb4:	add	r0, r0, r7
   12eb8:	add	r3, r3, r7
   12ebc:	ldr	sl, [pc, #3376]	; 13bf4 <dcngettext@plt+0x2bdc>
   12ec0:	ldr	r7, [sp, #148]	; 0x94
   12ec4:	eor	r6, r2, r4
   12ec8:	add	sl, r7, sl
   12ecc:	orr	r8, ip, r0
   12ed0:	and	r6, r6, r3
   12ed4:	ror	r9, r3, #11
   12ed8:	ror	r7, r0, #13
   12edc:	eor	r6, r6, r2
   12ee0:	add	r5, sl, r5
   12ee4:	eor	r9, r9, r3, ror #6
   12ee8:	and	sl, ip, r0
   12eec:	and	r8, r8, r1
   12ef0:	eor	r7, r7, r0, ror #2
   12ef4:	eor	r9, r9, r3, ror #25
   12ef8:	orr	r8, r8, sl
   12efc:	eor	r7, r7, r0, ror #22
   12f00:	add	r5, r6, r5
   12f04:	add	r5, r5, r9
   12f08:	add	r6, r7, r8
   12f0c:	add	r6, r6, r5
   12f10:	add	lr, lr, r5
   12f14:	ldr	r7, [sp, #152]	; 0x98
   12f18:	ldr	r9, [pc, #3288]	; 13bf8 <dcngettext@plt+0x2be0>
   12f1c:	eor	r5, r4, r3
   12f20:	add	r9, r7, r9
   12f24:	orr	r8, r0, r6
   12f28:	and	r5, r5, lr
   12f2c:	ror	sl, lr, #11
   12f30:	ror	r7, r6, #13
   12f34:	and	fp, r0, r6
   12f38:	eor	r5, r5, r4
   12f3c:	add	r2, r9, r2
   12f40:	eor	sl, sl, lr, ror #6
   12f44:	and	r8, r8, ip
   12f48:	eor	r7, r7, r6, ror #2
   12f4c:	eor	sl, sl, lr, ror #25
   12f50:	orr	r8, r8, fp
   12f54:	add	r2, r5, r2
   12f58:	eor	r7, r7, r6, ror #22
   12f5c:	add	r2, r2, sl
   12f60:	add	r7, r7, r8
   12f64:	add	r9, r7, r2
   12f68:	add	r1, r1, r2
   12f6c:	ldr	r5, [sp, #156]	; 0x9c
   12f70:	ldr	sl, [pc, #3204]	; 13bfc <dcngettext@plt+0x2be4>
   12f74:	eor	r2, r3, lr
   12f78:	add	sl, r5, sl
   12f7c:	orr	r7, r6, r9
   12f80:	and	r2, r2, r1
   12f84:	ror	r8, r1, #11
   12f88:	ror	r5, r9, #13
   12f8c:	and	fp, r6, r9
   12f90:	eor	r2, r2, r3
   12f94:	add	r4, sl, r4
   12f98:	eor	r8, r8, r1, ror #6
   12f9c:	and	r7, r7, r0
   12fa0:	eor	r5, r5, r9, ror #2
   12fa4:	eor	r8, r8, r1, ror #25
   12fa8:	orr	r7, r7, fp
   12fac:	add	r4, r2, r4
   12fb0:	eor	r5, r5, r9, ror #22
   12fb4:	add	r4, r4, r8
   12fb8:	add	r5, r5, r7
   12fbc:	add	sl, r5, r4
   12fc0:	add	ip, ip, r4
   12fc4:	ldr	r8, [pc, #3124]	; 13c00 <dcngettext@plt+0x2be8>
   12fc8:	ldr	r4, [sp, #160]	; 0xa0
   12fcc:	eor	r2, lr, r1
   12fd0:	add	r8, r4, r8
   12fd4:	orr	r5, r9, sl
   12fd8:	and	r2, r2, ip
   12fdc:	ror	r7, ip, #11
   12fe0:	ror	r4, sl, #13
   12fe4:	eor	r2, r2, lr
   12fe8:	add	r3, r8, r3
   12fec:	eor	r7, r7, ip, ror #6
   12ff0:	and	r8, r9, sl
   12ff4:	and	r5, r5, r6
   12ff8:	eor	r4, r4, sl, ror #2
   12ffc:	eor	r7, r7, ip, ror #25
   13000:	orr	r5, r5, r8
   13004:	add	r3, r2, r3
   13008:	eor	r4, r4, sl, ror #22
   1300c:	add	r3, r3, r7
   13010:	add	r4, r4, r5
   13014:	add	fp, r4, r3
   13018:	add	r0, r0, r3
   1301c:	ldr	r2, [sp, #164]	; 0xa4
   13020:	ldr	r7, [pc, #3036]	; 13c04 <dcngettext@plt+0x2bec>
   13024:	eor	r3, r1, ip
   13028:	add	r7, r2, r7
   1302c:	orr	r4, sl, fp
   13030:	and	r3, r3, r0
   13034:	ror	r5, r0, #11
   13038:	ror	r2, fp, #13
   1303c:	eor	r3, r3, r1
   13040:	add	lr, r7, lr
   13044:	eor	r5, r5, r0, ror #6
   13048:	and	r7, sl, fp
   1304c:	and	r4, r4, r9
   13050:	eor	r2, r2, fp, ror #2
   13054:	eor	r5, r5, r0, ror #25
   13058:	orr	r4, r4, r7
   1305c:	add	lr, r3, lr
   13060:	eor	r2, r2, fp, ror #22
   13064:	add	lr, lr, r5
   13068:	add	r2, r2, r4
   1306c:	add	r6, r6, lr
   13070:	ldr	r7, [pc, #2960]	; 13c08 <dcngettext@plt+0x2bf0>
   13074:	add	lr, r2, lr
   13078:	ldr	r2, [sp, #168]	; 0xa8
   1307c:	eor	r3, ip, r0
   13080:	add	r7, r2, r7
   13084:	orr	r4, fp, lr
   13088:	and	r3, r3, r6
   1308c:	ror	r5, r6, #11
   13090:	ror	r2, lr, #13
   13094:	eor	r3, r3, ip
   13098:	add	r1, r7, r1
   1309c:	eor	r5, r5, r6, ror #6
   130a0:	and	r7, fp, lr
   130a4:	and	r4, r4, sl
   130a8:	eor	r2, r2, lr, ror #2
   130ac:	eor	r5, r5, r6, ror #25
   130b0:	orr	r4, r4, r7
   130b4:	add	r1, r3, r1
   130b8:	eor	r2, r2, lr, ror #22
   130bc:	add	r2, r2, r4
   130c0:	add	r1, r1, r5
   130c4:	add	r5, r9, r1
   130c8:	ldr	r8, [pc, #2876]	; 13c0c <dcngettext@plt+0x2bf4>
   130cc:	add	r1, r2, r1
   130d0:	ldr	r2, [sp, #172]	; 0xac
   130d4:	eor	r3, r0, r6
   130d8:	add	r8, r2, r8
   130dc:	orr	r4, lr, r1
   130e0:	and	r3, r3, r5
   130e4:	ror	r7, r5, #11
   130e8:	ror	r2, r1, #13
   130ec:	eor	r3, r3, r0
   130f0:	add	ip, r8, ip
   130f4:	eor	r7, r7, r5, ror #6
   130f8:	and	r8, lr, r1
   130fc:	and	r4, r4, fp
   13100:	eor	r2, r2, r1, ror #2
   13104:	eor	r7, r7, r5, ror #25
   13108:	eor	r2, r2, r1, ror #22
   1310c:	add	ip, r3, ip
   13110:	orr	r4, r4, r8
   13114:	add	ip, ip, r7
   13118:	add	r4, r2, r4
   1311c:	ldr	r9, [pc, #2796]	; 13c10 <dcngettext@plt+0x2bf8>
   13120:	add	r2, sl, ip
   13124:	add	ip, r4, ip
   13128:	ldr	r4, [sp, #176]	; 0xb0
   1312c:	eor	r3, r6, r5
   13130:	add	r9, r4, r9
   13134:	orr	r8, r1, ip
   13138:	and	r3, r3, r2
   1313c:	ror	r7, r2, #11
   13140:	ror	r4, ip, #13
   13144:	eor	r3, r3, r6
   13148:	add	r0, r9, r0
   1314c:	eor	r7, r7, r2, ror #6
   13150:	and	r9, r1, ip
   13154:	and	r8, r8, lr
   13158:	eor	r4, r4, ip, ror #2
   1315c:	eor	r7, r7, r2, ror #25
   13160:	eor	r4, r4, ip, ror #22
   13164:	add	r0, r3, r0
   13168:	orr	r8, r8, r9
   1316c:	add	r0, r0, r7
   13170:	add	r8, r4, r8
   13174:	add	r3, fp, r0
   13178:	ldr	r7, [pc, #2708]	; 13c14 <dcngettext@plt+0x2bfc>
   1317c:	add	r0, r8, r0
   13180:	ldr	r8, [sp, #180]	; 0xb4
   13184:	eor	r4, r5, r2
   13188:	add	r7, r8, r7
   1318c:	and	r4, r4, r3
   13190:	orr	r9, ip, r0
   13194:	eor	r4, r4, r5
   13198:	ror	r8, r3, #11
   1319c:	add	r6, r7, r6
   131a0:	ror	r7, r0, #13
   131a4:	eor	r8, r8, r3, ror #6
   131a8:	and	r9, r9, r1
   131ac:	eor	r7, r7, r0, ror #2
   131b0:	add	r6, r4, r6
   131b4:	and	r4, ip, r0
   131b8:	eor	r8, r8, r3, ror #25
   131bc:	orr	r9, r9, r4
   131c0:	eor	r7, r7, r0, ror #22
   131c4:	add	r6, r6, r8
   131c8:	add	r7, r7, r9
   131cc:	add	r7, r7, r6
   131d0:	add	lr, lr, r6
   131d4:	ldr	r9, [pc, #2620]	; 13c18 <dcngettext@plt+0x2c00>
   131d8:	ldr	r6, [sp, #184]	; 0xb8
   131dc:	eor	r4, r2, r3
   131e0:	add	r9, r6, r9
   131e4:	and	r4, r4, lr
   131e8:	ror	r8, lr, #11
   131ec:	add	r9, r9, r5
   131f0:	eor	r4, r4, r2
   131f4:	eor	r8, r8, lr, ror #6
   131f8:	orr	r5, r0, r7
   131fc:	eor	r8, r8, lr, ror #25
   13200:	add	r4, r4, r9
   13204:	add	r4, r4, r8
   13208:	and	r5, r5, ip
   1320c:	ldr	sl, [sp, #160]	; 0xa0
   13210:	and	r8, r0, r7
   13214:	ldr	r9, [sp, #124]	; 0x7c
   13218:	orr	r8, r5, r8
   1321c:	ldr	r5, [sp, #180]	; 0xb4
   13220:	add	r9, r9, sl
   13224:	ror	r6, r7, #13
   13228:	ldr	sl, [sp, #180]	; 0xb4
   1322c:	eor	r6, r6, r7, ror #2
   13230:	eor	r6, r6, r7, ror #22
   13234:	ror	r5, r5, #19
   13238:	eor	r5, r5, sl, ror #17
   1323c:	add	r6, r6, r8
   13240:	ldr	r8, [sp, #128]	; 0x80
   13244:	eor	r5, r5, sl, lsr #10
   13248:	ldr	sl, [sp, #128]	; 0x80
   1324c:	ror	r8, r8, #18
   13250:	add	r1, r1, r4
   13254:	eor	r8, r8, sl, ror #7
   13258:	eor	r8, r8, sl, lsr #3
   1325c:	add	r5, r5, r9
   13260:	ldr	sl, [pc, #2484]	; 13c1c <dcngettext@plt+0x2c04>
   13264:	add	r5, r5, r8
   13268:	eor	r8, r3, lr
   1326c:	add	sl, r5, sl
   13270:	and	r8, r8, r1
   13274:	ror	r9, r1, #11
   13278:	add	r6, r6, r4
   1327c:	add	sl, sl, r2
   13280:	eor	r8, r8, r3
   13284:	eor	r9, r9, r1, ror #6
   13288:	orr	r4, r7, r6
   1328c:	eor	r9, r9, r1, ror #25
   13290:	add	r8, r8, sl
   13294:	add	r8, r8, r9
   13298:	and	r4, r4, r0
   1329c:	ldr	fp, [sp, #164]	; 0xa4
   132a0:	and	r9, r7, r6
   132a4:	ldr	sl, [sp, #128]	; 0x80
   132a8:	orr	r9, r4, r9
   132ac:	ldr	r4, [sp, #184]	; 0xb8
   132b0:	add	sl, sl, fp
   132b4:	ror	r2, r6, #13
   132b8:	ldr	fp, [sp, #184]	; 0xb8
   132bc:	eor	r2, r2, r6, ror #2
   132c0:	eor	r2, r2, r6, ror #22
   132c4:	ror	r4, r4, #19
   132c8:	eor	r4, r4, fp, ror #17
   132cc:	add	r2, r2, r9
   132d0:	ldr	r9, [sp, #132]	; 0x84
   132d4:	eor	r4, r4, fp, lsr #10
   132d8:	ldr	fp, [sp, #132]	; 0x84
   132dc:	ror	r9, r9, #18
   132e0:	add	r4, r4, sl
   132e4:	eor	r9, r9, fp, ror #7
   132e8:	eor	r9, r9, fp, lsr #3
   132ec:	ldr	fp, [pc, #2348]	; 13c20 <dcngettext@plt+0x2c08>
   132f0:	add	r2, r2, r8
   132f4:	add	r4, r4, r9
   132f8:	add	ip, ip, r8
   132fc:	eor	r8, lr, r1
   13300:	add	fp, r4, fp
   13304:	and	r8, r8, ip
   13308:	add	fp, fp, r3
   1330c:	eor	r8, r8, lr
   13310:	str	r5, [sp, #4]
   13314:	add	r8, r8, fp
   13318:	ldr	r5, [sp, #168]	; 0xa8
   1331c:	ldr	fp, [sp, #132]	; 0x84
   13320:	ror	sl, ip, #11
   13324:	eor	sl, sl, ip, ror #6
   13328:	add	fp, fp, r5
   1332c:	ldr	r5, [sp, #136]	; 0x88
   13330:	orr	r9, r6, r2
   13334:	eor	sl, sl, ip, ror #25
   13338:	add	r8, r8, sl
   1333c:	and	r9, r9, r7
   13340:	and	sl, r6, r2
   13344:	orr	sl, r9, sl
   13348:	ror	r9, r5, #18
   1334c:	ror	r3, r2, #13
   13350:	eor	r9, r9, r5, ror #7
   13354:	ldr	r5, [sp, #4]
   13358:	eor	r3, r3, r2, ror #2
   1335c:	eor	r3, r3, r2, ror #22
   13360:	add	r3, r3, sl
   13364:	ror	sl, r5, #19
   13368:	ldr	r5, [sp, #136]	; 0x88
   1336c:	add	r3, r3, r8
   13370:	add	r0, r0, r8
   13374:	eor	r9, r9, r5, lsr #3
   13378:	ldr	r5, [sp, #4]
   1337c:	add	fp, r9, fp
   13380:	ldr	r9, [pc, #2204]	; 13c24 <dcngettext@plt+0x2c0c>
   13384:	eor	sl, sl, r5, ror #17
   13388:	eor	sl, sl, r5, lsr #10
   1338c:	add	r8, fp, sl
   13390:	mov	fp, r8
   13394:	eor	r8, r1, ip
   13398:	add	r9, fp, r9
   1339c:	and	r8, r8, r0
   133a0:	add	lr, r9, lr
   133a4:	eor	r8, r8, r1
   133a8:	ldr	r5, [sp, #172]	; 0xac
   133ac:	add	r8, r8, lr
   133b0:	ldr	lr, [sp, #136]	; 0x88
   133b4:	str	fp, [sp, #36]	; 0x24
   133b8:	ror	fp, r0, #11
   133bc:	add	lr, lr, r5
   133c0:	eor	fp, fp, r0, ror #6
   133c4:	ldr	r5, [sp, #140]	; 0x8c
   133c8:	orr	sl, r2, r3
   133cc:	eor	fp, fp, r0, ror #25
   133d0:	ror	r9, r3, #13
   133d4:	add	r8, r8, fp
   133d8:	and	sl, sl, r6
   133dc:	and	fp, r2, r3
   133e0:	eor	r9, r9, r3, ror #2
   133e4:	orr	fp, sl, fp
   133e8:	eor	r9, r9, r3, ror #22
   133ec:	ror	sl, r5, #18
   133f0:	add	r9, r9, fp
   133f4:	eor	sl, sl, r5, ror #7
   133f8:	ror	fp, r4, #19
   133fc:	eor	sl, sl, r5, lsr #3
   13400:	eor	fp, fp, r4, ror #17
   13404:	add	sl, sl, lr
   13408:	eor	fp, fp, r4, lsr #10
   1340c:	ldr	lr, [pc, #2068]	; 13c28 <dcngettext@plt+0x2c10>
   13410:	add	r7, r7, r8
   13414:	add	r5, r9, r8
   13418:	add	r9, sl, fp
   1341c:	eor	r8, ip, r0
   13420:	add	lr, r9, lr
   13424:	and	r8, r8, r7
   13428:	add	r1, lr, r1
   1342c:	eor	r8, r8, ip
   13430:	add	r8, r8, r1
   13434:	ror	r1, r5, #13
   13438:	eor	r1, r1, r5, ror #2
   1343c:	str	r9, [sp, #40]	; 0x28
   13440:	orr	sl, r3, r5
   13444:	mov	r9, r5
   13448:	ror	fp, r7, #11
   1344c:	eor	r1, r1, r5, ror #22
   13450:	ldr	lr, [sp, #140]	; 0x8c
   13454:	ldr	r5, [sp, #176]	; 0xb0
   13458:	eor	fp, fp, r7, ror #6
   1345c:	eor	fp, fp, r7, ror #25
   13460:	add	lr, lr, r5
   13464:	ldr	r5, [sp, #144]	; 0x90
   13468:	str	r9, [sp, #12]
   1346c:	add	r8, r8, fp
   13470:	and	fp, r3, r9
   13474:	ldr	r9, [sp, #36]	; 0x24
   13478:	and	sl, sl, r2
   1347c:	orr	fp, sl, fp
   13480:	ror	sl, r5, #18
   13484:	eor	sl, sl, r5, ror #7
   13488:	add	r1, r1, fp
   1348c:	ror	fp, r9, #19
   13490:	eor	sl, sl, r5, lsr #3
   13494:	eor	fp, fp, r9, ror #17
   13498:	eor	fp, fp, r9, lsr #10
   1349c:	add	sl, sl, lr
   134a0:	add	r1, r1, r8
   134a4:	add	r6, r6, r8
   134a8:	add	lr, sl, fp
   134ac:	ldr	r8, [pc, #1912]	; 13c2c <dcngettext@plt+0x2c14>
   134b0:	mov	sl, lr
   134b4:	eor	lr, r0, r7
   134b8:	str	sl, [sp, #44]	; 0x2c
   134bc:	add	r8, sl, r8
   134c0:	and	lr, lr, r6
   134c4:	ror	sl, r6, #11
   134c8:	ldr	fp, [sp, #180]	; 0xb4
   134cc:	ldr	r9, [sp, #12]
   134d0:	add	ip, r8, ip
   134d4:	eor	lr, lr, r0
   134d8:	eor	sl, sl, r6, ror #6
   134dc:	eor	sl, sl, r6, ror #25
   134e0:	add	fp, r5, fp
   134e4:	add	lr, lr, ip
   134e8:	ldr	r5, [sp, #148]	; 0x94
   134ec:	add	lr, lr, sl
   134f0:	orr	r8, r9, r1
   134f4:	and	sl, r9, r1
   134f8:	ror	ip, r1, #13
   134fc:	ldr	r9, [sp, #40]	; 0x28
   13500:	and	r8, r8, r3
   13504:	eor	ip, ip, r1, ror #2
   13508:	orr	sl, r8, sl
   1350c:	eor	ip, ip, r1, ror #22
   13510:	ror	r8, r5, #18
   13514:	eor	r8, r8, r5, ror #7
   13518:	add	ip, ip, sl
   1351c:	ror	sl, r9, #19
   13520:	eor	r8, r8, r5, lsr #3
   13524:	eor	sl, sl, r9, ror #17
   13528:	eor	sl, sl, r9, lsr #10
   1352c:	add	r8, r8, fp
   13530:	ldr	fp, [pc, #1784]	; 13c30 <dcngettext@plt+0x2c18>
   13534:	add	r8, r8, sl
   13538:	add	r2, r2, lr
   1353c:	add	fp, r8, fp
   13540:	add	ip, ip, lr
   13544:	add	r0, fp, r0
   13548:	eor	lr, r7, r6
   1354c:	ldr	fp, [sp, #184]	; 0xb8
   13550:	ldr	r9, [sp, #12]
   13554:	and	lr, lr, r2
   13558:	ror	sl, r2, #11
   1355c:	str	r8, [sp, #48]	; 0x30
   13560:	eor	lr, lr, r7
   13564:	orr	r8, r1, ip
   13568:	eor	sl, sl, r2, ror #6
   1356c:	add	fp, r5, fp
   13570:	ldr	r5, [sp, #152]	; 0x98
   13574:	and	r8, r8, r9
   13578:	eor	sl, sl, r2, ror #25
   1357c:	ldr	r9, [sp, #44]	; 0x2c
   13580:	add	lr, lr, r0
   13584:	ror	r0, ip, #13
   13588:	add	lr, lr, sl
   1358c:	eor	r0, r0, ip, ror #2
   13590:	and	sl, r1, ip
   13594:	orr	sl, r8, sl
   13598:	eor	r0, r0, ip, ror #22
   1359c:	ror	r8, r5, #18
   135a0:	eor	r8, r8, r5, ror #7
   135a4:	add	r0, r0, sl
   135a8:	ror	sl, r9, #19
   135ac:	eor	r8, r8, r5, lsr #3
   135b0:	eor	sl, sl, r9, ror #17
   135b4:	add	r3, r3, lr
   135b8:	add	fp, r8, fp
   135bc:	eor	sl, sl, r9, lsr #10
   135c0:	ldr	r8, [pc, #1644]	; 13c34 <dcngettext@plt+0x2c1c>
   135c4:	add	r0, r0, lr
   135c8:	add	sl, fp, sl
   135cc:	eor	lr, r6, r2
   135d0:	ldr	r5, [sp, #156]	; 0x9c
   135d4:	add	r8, sl, r8
   135d8:	and	lr, lr, r3
   135dc:	ror	fp, r3, #11
   135e0:	add	r7, r8, r7
   135e4:	eor	lr, lr, r6
   135e8:	eor	fp, fp, r3, ror #6
   135ec:	str	sl, [sp, #8]
   135f0:	eor	fp, fp, r3, ror #25
   135f4:	orr	sl, ip, r0
   135f8:	add	lr, lr, r7
   135fc:	add	lr, lr, fp
   13600:	and	sl, sl, r1
   13604:	and	fp, ip, r0
   13608:	ror	r8, r5, #18
   1360c:	orr	sl, sl, fp
   13610:	ror	r7, r0, #13
   13614:	ldr	fp, [sp, #48]	; 0x30
   13618:	eor	r8, r8, r5, ror #7
   1361c:	eor	r7, r7, r0, ror #2
   13620:	eor	r8, r8, r5, lsr #3
   13624:	ldr	r5, [sp, #152]	; 0x98
   13628:	eor	r7, r7, r0, ror #22
   1362c:	add	r8, r8, r5
   13630:	ldr	r9, [sp, #12]
   13634:	ldr	r5, [sp, #4]
   13638:	add	r7, r7, sl
   1363c:	ror	sl, fp, #19
   13640:	eor	sl, sl, fp, ror #17
   13644:	add	r9, r9, lr
   13648:	add	r7, r7, lr
   1364c:	eor	sl, sl, fp, lsr #10
   13650:	add	lr, r8, r5
   13654:	add	lr, sl, lr
   13658:	ldr	r8, [pc, #1496]	; 13c38 <dcngettext@plt+0x2c20>
   1365c:	mov	sl, lr
   13660:	eor	lr, r2, r3
   13664:	add	r8, sl, r8
   13668:	and	lr, lr, r9
   1366c:	ror	fp, r9, #11
   13670:	add	r6, r8, r6
   13674:	eor	lr, lr, r2
   13678:	eor	fp, fp, r9, ror #6
   1367c:	orr	r8, r0, r7
   13680:	eor	fp, fp, r9, ror #25
   13684:	add	lr, lr, r6
   13688:	ror	r6, r7, #13
   1368c:	add	lr, lr, fp
   13690:	and	r8, r8, ip
   13694:	and	fp, r0, r7
   13698:	eor	r6, r6, r7, ror #2
   1369c:	ldr	r5, [sp, #160]	; 0xa0
   136a0:	orr	r8, r8, fp
   136a4:	eor	r6, r6, r7, ror #22
   136a8:	add	r6, r6, r8
   136ac:	ldr	r8, [sp, #8]
   136b0:	str	sl, [sp, #12]
   136b4:	ror	sl, r5, #18
   136b8:	eor	sl, sl, r5, ror #7
   136bc:	ror	fp, r8, #19
   136c0:	eor	sl, sl, r5, lsr #3
   136c4:	eor	fp, fp, r8, ror #17
   136c8:	ldr	r5, [sp, #156]	; 0x9c
   136cc:	add	r8, r1, lr
   136d0:	ldr	r1, [sp, #8]
   136d4:	add	sl, sl, r5
   136d8:	add	sl, sl, r4
   136dc:	eor	fp, fp, r1, lsr #10
   136e0:	add	r6, r6, lr
   136e4:	add	r1, fp, sl
   136e8:	ldr	lr, [pc, #1356]	; 13c3c <dcngettext@plt+0x2c24>
   136ec:	mov	sl, r1
   136f0:	eor	r1, r3, r9
   136f4:	add	lr, sl, lr
   136f8:	and	r1, r1, r8
   136fc:	ror	fp, r8, #11
   13700:	eor	r1, r1, r3
   13704:	add	r2, lr, r2
   13708:	eor	fp, fp, r8, ror #6
   1370c:	str	sl, [sp, #16]
   13710:	eor	fp, fp, r8, ror #25
   13714:	orr	sl, r7, r6
   13718:	add	r2, r1, r2
   1371c:	ror	r1, r6, #13
   13720:	add	r2, r2, fp
   13724:	and	sl, sl, r0
   13728:	and	fp, r7, r6
   1372c:	eor	r1, r1, r6, ror #2
   13730:	orr	sl, sl, fp
   13734:	eor	r1, r1, r6, ror #22
   13738:	add	r1, r1, sl
   1373c:	ldr	sl, [sp, #12]
   13740:	ldr	r5, [sp, #164]	; 0xa4
   13744:	add	r1, r1, r2
   13748:	ror	fp, sl, #19
   1374c:	ror	lr, r5, #18
   13750:	eor	fp, fp, sl, ror #17
   13754:	add	sl, ip, r2
   13758:	ldr	r2, [sp, #12]
   1375c:	eor	lr, lr, r5, ror #7
   13760:	eor	lr, lr, r5, lsr #3
   13764:	ldr	r5, [sp, #160]	; 0xa0
   13768:	eor	fp, fp, r2, lsr #10
   1376c:	ldr	r2, [sp, #36]	; 0x24
   13770:	add	lr, lr, r5
   13774:	add	lr, lr, r2
   13778:	add	r2, fp, lr
   1377c:	ldr	ip, [pc, #1212]	; 13c40 <dcngettext@plt+0x2c28>
   13780:	mov	lr, r2
   13784:	eor	r2, r9, r8
   13788:	add	ip, lr, ip
   1378c:	and	r2, r2, sl
   13790:	ror	fp, sl, #11
   13794:	eor	r2, r2, r9
   13798:	add	r3, ip, r3
   1379c:	eor	fp, fp, sl, ror #6
   137a0:	str	lr, [sp, #60]	; 0x3c
   137a4:	eor	fp, fp, sl, ror #25
   137a8:	orr	lr, r6, r1
   137ac:	add	r3, r2, r3
   137b0:	ror	r2, r1, #13
   137b4:	add	r3, r3, fp
   137b8:	and	lr, lr, r7
   137bc:	and	fp, r6, r1
   137c0:	eor	r2, r2, r1, ror #2
   137c4:	orr	lr, lr, fp
   137c8:	eor	r2, r2, r1, ror #22
   137cc:	add	r2, r2, lr
   137d0:	ldr	lr, [sp, #16]
   137d4:	ldr	ip, [sp, #168]	; 0xa8
   137d8:	ldr	r5, [sp, #168]	; 0xa8
   137dc:	ror	fp, lr, #19
   137e0:	add	r2, r2, r3
   137e4:	eor	fp, fp, lr, ror #17
   137e8:	ror	ip, ip, #18
   137ec:	add	lr, r0, r3
   137f0:	ldr	r3, [sp, #16]
   137f4:	eor	ip, ip, r5, ror #7
   137f8:	eor	ip, ip, r5, lsr #3
   137fc:	ldr	r5, [sp, #164]	; 0xa4
   13800:	eor	fp, fp, r3, lsr #10
   13804:	ldr	r3, [sp, #40]	; 0x28
   13808:	add	ip, ip, r5
   1380c:	add	r3, ip, r3
   13810:	add	r0, fp, r3
   13814:	ldr	ip, [pc, #1064]	; 13c44 <dcngettext@plt+0x2c2c>
   13818:	mov	r3, r0
   1381c:	eor	r0, r8, sl
   13820:	str	r3, [sp, #20]
   13824:	add	ip, r3, ip
   13828:	and	r0, r0, lr
   1382c:	ror	r3, lr, #11
   13830:	add	ip, ip, r9
   13834:	eor	r0, r0, r8
   13838:	eor	r9, r3, lr, ror #6
   1383c:	orr	fp, r1, r2
   13840:	eor	r9, r9, lr, ror #25
   13844:	add	r0, r0, ip
   13848:	ror	r3, r2, #13
   1384c:	add	r0, r0, r9
   13850:	and	fp, fp, r6
   13854:	and	r9, r1, r2
   13858:	eor	r3, r3, r2, ror #2
   1385c:	orr	fp, fp, r9
   13860:	ldr	ip, [sp, #172]	; 0xac
   13864:	eor	r3, r3, r2, ror #22
   13868:	ldr	r5, [sp, #172]	; 0xac
   1386c:	add	r3, r3, fp
   13870:	ldr	fp, [sp, #60]	; 0x3c
   13874:	ror	ip, ip, #18
   13878:	eor	ip, ip, r5, ror #7
   1387c:	ror	r9, fp, #19
   13880:	eor	r9, r9, fp, ror #17
   13884:	eor	ip, ip, r5, lsr #3
   13888:	ldr	r5, [sp, #168]	; 0xa8
   1388c:	add	r3, r3, r0
   13890:	add	r7, r7, r0
   13894:	eor	r0, r9, fp, lsr #10
   13898:	ldr	r9, [sp, #44]	; 0x2c
   1389c:	add	ip, ip, r5
   138a0:	add	ip, ip, r9
   138a4:	ldr	r9, [pc, #924]	; 13c48 <dcngettext@plt+0x2c30>
   138a8:	add	ip, r0, ip
   138ac:	eor	r0, sl, lr
   138b0:	str	ip, [sp, #24]
   138b4:	add	r9, ip, r9
   138b8:	and	r0, r0, r7
   138bc:	ror	ip, r7, #11
   138c0:	add	r9, r9, r8
   138c4:	eor	r0, r0, sl
   138c8:	eor	r8, ip, r7, ror #6
   138cc:	orr	fp, r2, r3
   138d0:	eor	r8, r8, r7, ror #25
   138d4:	add	r0, r0, r9
   138d8:	ldr	r5, [sp, #176]	; 0xb0
   138dc:	add	r0, r0, r8
   138e0:	and	fp, fp, r1
   138e4:	and	r8, r2, r3
   138e8:	orr	fp, fp, r8
   138ec:	ror	ip, r3, #13
   138f0:	ldr	r8, [sp, #20]
   138f4:	eor	ip, ip, r3, ror #2
   138f8:	ror	r9, r5, #18
   138fc:	eor	ip, ip, r3, ror #22
   13900:	eor	r9, r9, r5, ror #7
   13904:	add	ip, ip, fp
   13908:	ror	fp, r8, #19
   1390c:	eor	r9, r9, r5, lsr #3
   13910:	eor	fp, fp, r8, ror #17
   13914:	ldr	r5, [sp, #172]	; 0xac
   13918:	add	r8, r6, r0
   1391c:	ldr	r6, [sp, #20]
   13920:	add	ip, ip, r0
   13924:	ldr	r0, [sp, #48]	; 0x30
   13928:	add	r9, r9, r5
   1392c:	eor	fp, fp, r6, lsr #10
   13930:	add	r9, r9, r0
   13934:	add	r9, fp, r9
   13938:	ldr	r0, [pc, #780]	; 13c4c <dcngettext@plt+0x2c34>
   1393c:	mov	r6, r9
   13940:	eor	r9, lr, r7
   13944:	add	r0, r6, r0
   13948:	and	r9, r9, r8
   1394c:	ror	fp, r8, #11
   13950:	add	sl, r0, sl
   13954:	eor	r9, r9, lr
   13958:	eor	fp, fp, r8, ror #6
   1395c:	eor	fp, fp, r8, ror #25
   13960:	str	r6, [sp, #28]
   13964:	add	r9, r9, sl
   13968:	orr	r6, r3, ip
   1396c:	ror	r0, ip, #13
   13970:	add	r9, r9, fp
   13974:	and	r6, r6, r2
   13978:	and	fp, r3, ip
   1397c:	eor	r0, r0, ip, ror #2
   13980:	orr	r6, r6, fp
   13984:	eor	r0, r0, ip, ror #22
   13988:	add	r0, r0, r6
   1398c:	ldr	r6, [sp, #24]
   13990:	ldr	r5, [sp, #180]	; 0xb4
   13994:	add	r0, r0, r9
   13998:	ror	fp, r6, #19
   1399c:	ror	sl, r5, #18
   139a0:	eor	fp, fp, r6, ror #17
   139a4:	add	r6, r1, r9
   139a8:	ldr	r1, [sp, #24]
   139ac:	eor	sl, sl, r5, ror #7
   139b0:	eor	sl, sl, r5, lsr #3
   139b4:	ldr	r5, [sp, #176]	; 0xb0
   139b8:	eor	fp, fp, r1, lsr #10
   139bc:	ldr	r1, [sp, #8]
   139c0:	add	sl, sl, r5
   139c4:	add	sl, sl, r1
   139c8:	ldr	r9, [pc, #640]	; 13c50 <dcngettext@plt+0x2c38>
   139cc:	add	sl, fp, sl
   139d0:	eor	r1, r7, r8
   139d4:	add	r9, sl, r9
   139d8:	and	r1, r1, r6
   139dc:	ror	fp, r6, #11
   139e0:	eor	r1, r1, r7
   139e4:	add	lr, r9, lr
   139e8:	eor	fp, fp, r6, ror #6
   139ec:	orr	r9, ip, r0
   139f0:	eor	fp, fp, r6, ror #25
   139f4:	add	lr, r1, lr
   139f8:	ror	r1, r0, #13
   139fc:	add	lr, lr, fp
   13a00:	and	r9, r9, r3
   13a04:	and	fp, ip, r0
   13a08:	eor	r1, r1, r0, ror #2
   13a0c:	orr	r9, r9, fp
   13a10:	eor	r1, r1, r0, ror #22
   13a14:	add	r1, r1, r9
   13a18:	ldr	r9, [sp, #28]
   13a1c:	ldr	r5, [sp, #184]	; 0xb8
   13a20:	add	r1, r1, lr
   13a24:	ror	fp, r9, #19
   13a28:	str	sl, [sp, #32]
   13a2c:	eor	fp, fp, r9, ror #17
   13a30:	ror	sl, r5, #18
   13a34:	add	r9, r2, lr
   13a38:	ldr	lr, [sp, #28]
   13a3c:	eor	sl, sl, r5, ror #7
   13a40:	eor	sl, sl, r5, lsr #3
   13a44:	ldr	r5, [sp, #180]	; 0xb4
   13a48:	eor	fp, fp, lr, lsr #10
   13a4c:	ldr	lr, [sp, #12]
   13a50:	add	sl, sl, r5
   13a54:	add	sl, sl, lr
   13a58:	add	lr, fp, sl
   13a5c:	ldr	r2, [pc, #496]	; 13c54 <dcngettext@plt+0x2c3c>
   13a60:	mov	sl, lr
   13a64:	eor	lr, r8, r6
   13a68:	add	r2, sl, r2
   13a6c:	and	lr, lr, r9
   13a70:	ror	fp, r9, #11
   13a74:	add	r7, r2, r7
   13a78:	eor	lr, lr, r8
   13a7c:	eor	fp, fp, r9, ror #6
   13a80:	str	sl, [sp, #52]	; 0x34
   13a84:	eor	fp, fp, r9, ror #25
   13a88:	orr	sl, r0, r1
   13a8c:	add	lr, lr, r7
   13a90:	ror	r2, r1, #13
   13a94:	add	lr, lr, fp
   13a98:	and	sl, sl, ip
   13a9c:	and	fp, r0, r1
   13aa0:	eor	r2, r2, r1, ror #2
   13aa4:	ldr	r5, [sp, #4]
   13aa8:	orr	sl, sl, fp
   13aac:	eor	r2, r2, r1, ror #22
   13ab0:	add	r2, r2, sl
   13ab4:	ldr	sl, [sp, #32]
   13ab8:	ror	r7, r5, #18
   13abc:	eor	r7, r7, r5, ror #7
   13ac0:	ror	fp, sl, #19
   13ac4:	eor	r7, r7, r5, lsr #3
   13ac8:	eor	fp, fp, sl, ror #17
   13acc:	ldr	r5, [sp, #184]	; 0xb8
   13ad0:	add	sl, r3, lr
   13ad4:	ldr	r3, [sp, #32]
   13ad8:	add	r2, r2, lr
   13adc:	ldr	lr, [sp, #16]
   13ae0:	add	r7, r7, r5
   13ae4:	eor	fp, fp, r3, lsr #10
   13ae8:	add	r7, r7, lr
   13aec:	ldr	r3, [pc, #356]	; 13c58 <dcngettext@plt+0x2c40>
   13af0:	add	r7, fp, r7
   13af4:	eor	lr, r6, r9
   13af8:	add	r3, r7, r3
   13afc:	and	lr, lr, sl
   13b00:	ror	fp, sl, #11
   13b04:	add	r8, r3, r8
   13b08:	eor	lr, lr, r6
   13b0c:	eor	fp, fp, sl, ror #6
   13b10:	orr	r3, r1, r2
   13b14:	eor	fp, fp, sl, ror #25
   13b18:	add	lr, lr, r8
   13b1c:	add	lr, lr, fp
   13b20:	and	r3, r3, r0
   13b24:	and	fp, r1, r2
   13b28:	str	r7, [sp, #56]	; 0x38
   13b2c:	orr	r3, r3, fp
   13b30:	ror	r8, r2, #13
   13b34:	ldr	fp, [sp, #52]	; 0x34
   13b38:	ror	r7, r4, #18
   13b3c:	ldr	r5, [sp, #4]
   13b40:	eor	r8, r8, r2, ror #2
   13b44:	eor	r7, r7, r4, ror #7
   13b48:	eor	r7, r7, r4, lsr #3
   13b4c:	eor	r8, r8, r2, ror #22
   13b50:	add	r8, r8, r3
   13b54:	add	r5, r7, r5
   13b58:	ror	r3, fp, #19
   13b5c:	ldr	r7, [sp, #60]	; 0x3c
   13b60:	eor	r3, r3, fp, ror #17
   13b64:	eor	r3, r3, fp, lsr #10
   13b68:	add	r5, r5, r7
   13b6c:	add	ip, ip, lr
   13b70:	add	r5, r3, r5
   13b74:	ldr	fp, [pc, #224]	; 13c5c <dcngettext@plt+0x2c44>
   13b78:	mov	r3, r5
   13b7c:	eor	r5, r9, sl
   13b80:	add	lr, r8, lr
   13b84:	add	fp, r3, fp
   13b88:	and	r5, r5, ip
   13b8c:	ror	r8, ip, #11
   13b90:	eor	r5, r5, r9
   13b94:	add	r6, fp, r6
   13b98:	eor	r8, r8, ip, ror #6
   13b9c:	ldr	fp, [sp, #36]	; 0x24
   13ba0:	str	r3, [sp, #64]	; 0x40
   13ba4:	eor	r8, r8, ip, ror #25
   13ba8:	orr	r3, r2, lr
   13bac:	add	r6, r5, r6
   13bb0:	ror	r7, lr, #13
   13bb4:	add	r6, r6, r8
   13bb8:	and	r3, r3, r1
   13bbc:	and	r8, r2, lr
   13bc0:	eor	r7, r7, lr, ror #2
   13bc4:	orr	r3, r3, r8
   13bc8:	eor	r7, r7, lr, ror #22
   13bcc:	add	r7, r7, r3
   13bd0:	ror	r5, fp, #18
   13bd4:	ldr	r3, [sp, #56]	; 0x38
   13bd8:	b	13cd4 <dcngettext@plt+0x2cbc>
   13bdc:	andeq	r9, r2, r8, lsl #30
   13be0:	addmi	r2, sl, #152, 30	; 0x260
   13be4:	strblt	pc, [r0, #3023]	; 0xbcf	; <UNPREDICTABLE>
   13be8:	ldmib	r5!, {r0, r2, r5, r7, r8, r9, fp, ip, lr, pc}
   13bec:	ldmdbcc	r6, {r0, r1, r3, r4, r6, r9, lr, pc}^
   13bf0:	ldmibpl	r1!, {r0, r4, r5, r6, r7, r8, ip}^
   13bf4:	eorsls	r8, pc, #164, 4	; 0x4000000a
   13bf8:	blge	72b754 <stdout@@GLIBC_2.4+0x7015f0>
   13bfc:	stmdale	r7, {r3, r4, r7, r9, fp, sp, pc}
   13c00:	addne	r5, r3, #1024	; 0x400
   13c04:	ldrtcs	r8, [r1], #-1470	; 0xfffffa42
   13c08:	strpl	r7, [ip, #-3523]	; 0xfffff23d
   13c0c:	adcsvc	r5, lr, #116, 26	; 0x1d00
   13c10:	ldrshhi	fp, [lr], #30
   13c14:	blls	ff7156b8 <stdout@@GLIBC_2.4+0xff6eb554>
   13c18:	orrsgt	pc, fp, r4, ror r1	; <UNPREDICTABLE>
   13c1c:	ldr	r6, [fp], #2497	; 0x9c1
   13c20:	svc	0x00be4786
   13c24:	svceq	0x00c19dc6
   13c28:	strcs	sl, [ip], #-460	; 0xfffffe34
   13c2c:	stclcs	12, cr2, [r9, #444]!	; 0x1bc
   13c30:	bmi	1d34ee0 <stdout@@GLIBC_2.4+0x1d0ad7c>
   13c34:			; <UNDEFINED> instruction: 0x5cb0a9dc
   13c38:	usatvc	r8, #25, sl, asr #17
   13c3c:	ldmdals	lr!, {r1, r4, r6, r8, ip, lr}
   13c40:	ldmdage	r1!, {r0, r2, r3, r5, r6, r9, sl, lr, pc}
   13c44:	andlt	r2, r3, r8, asr #15
   13c48:	svclt	0x00597fc7
   13c4c:			; <UNDEFINED> instruction: 0xc6e00bf3
   13c50:	strle	r9, [r7, #327]!	; 0x147
   13c54:			; <UNDEFINED> instruction: 0x06ca6351
   13c58:	strtne	r2, [r9], #-2407	; 0xfffff699
   13c5c:	ldrcs	r0, [r7, r5, lsl #21]!
   13c60:	mrccs	1, 0, r2, cr11, cr8, {1}
   13c64:	stcmi	13, cr6, [ip, #-1008]!	; 0xfffffc10
   13c68:	teqpl	r8, #1216	; 0x4c0
   13c6c:	strvs	r7, [sl, #-852]	; 0xfffffcac
   13c70:			; <UNDEFINED> instruction: 0x766a0abb
   13c74:	bichi	ip, r2, lr, lsr #18
   13c78:	rsbsls	r2, r2, #34048	; 0x8500
   13c7c:	adcsge	lr, pc, #10551296	; 0xa10000
   13c80:	ldmdage	sl, {r0, r1, r3, r6, r9, sl, sp, lr}
   13c84:	subgt	r8, fp, #112, 22	; 0x1c000
   13c88:	strbgt	r5, [ip, -r3, lsr #3]!
   13c8c:	orrsle	lr, r2, r9, lsl r8
   13c90:	ldrle	r0, [r9], r4, lsr #12
   13c94:	vst3.32	{d3,d5,d7}, [lr], r5
   13c98:	rsbne	sl, sl, r0, ror r0
   13c9c:	stmibne	r4!, {r1, r2, r4, r8, lr, pc}
   13ca0:	cdpne	12, 3, cr6, cr7, cr8, {0}
   13ca4:	strbcs	r7, [r8, -ip, asr #14]
   13ca8:	ldrtcc	fp, [r0], #3253	; 0xcb5
   13cac:	ldmdbcc	ip, {r0, r1, r4, r5, r7, sl, fp}
   13cb0:	vfnmami.f32	s21, s16, s20
   13cb4:	blpl	fe7465f8 <stdout@@GLIBC_2.4+0xfe71c494>
   13cb8:	stmdavs	lr!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
   13cbc:	strvc	r8, [pc], #750	; 13cc4 <dcngettext@plt+0x2cac>
   13cc0:	stmiavc	r5!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}
   13cc4:	strbhi	r7, [r8], #2068	; 0x814
   13cc8:	sfmhi	f0, 2, [r7], {8}
   13ccc:	ldrshtls	pc, [lr], sl	; <UNPREDICTABLE>
   13cd0:	ldrbge	r6, [r0], #-3307	; 0xfffff315
   13cd4:	eor	r5, r5, fp, ror #7
   13cd8:	eor	r5, r5, fp, lsr #3
   13cdc:	add	r4, r5, r4
   13ce0:	ror	fp, r3, #19
   13ce4:	ldr	r5, [sp, #20]
   13ce8:	eor	fp, fp, r3, ror #17
   13cec:	eor	fp, fp, r3, lsr #10
   13cf0:	add	r4, r4, r5
   13cf4:	add	r0, r0, r6
   13cf8:	add	r4, fp, r4
   13cfc:	ldr	r3, [pc, #-164]	; 13c60 <dcngettext@plt+0x2c48>
   13d00:	mov	r5, r4
   13d04:	eor	r4, sl, ip
   13d08:	add	r6, r7, r6
   13d0c:	add	r3, r5, r3
   13d10:	and	r4, r4, r0
   13d14:	ror	r7, r0, #11
   13d18:	eor	r4, r4, sl
   13d1c:	add	r9, r3, r9
   13d20:	eor	r7, r7, r0, ror #6
   13d24:	str	r5, [sp, #4]
   13d28:	orr	r3, lr, r6
   13d2c:	eor	r7, r7, r0, ror #25
   13d30:	add	r9, r4, r9
   13d34:	ror	r5, r6, #13
   13d38:	ldr	r8, [sp, #40]	; 0x28
   13d3c:	add	r9, r9, r7
   13d40:	and	r3, r3, r2
   13d44:	and	r7, lr, r6
   13d48:	eor	r5, r5, r6, ror #2
   13d4c:	orr	r3, r3, r7
   13d50:	eor	r5, r5, r6, ror #22
   13d54:	add	r5, r5, r3
   13d58:	ldr	r3, [sp, #64]	; 0x40
   13d5c:	ror	r4, r8, #18
   13d60:	eor	r4, r4, r8, ror #7
   13d64:	eor	r4, r4, r8, lsr #3
   13d68:	ror	r8, r3, #19
   13d6c:	ldr	fp, [sp, #36]	; 0x24
   13d70:	eor	r8, r8, r3, ror #17
   13d74:	eor	r8, r8, r3, lsr #10
   13d78:	ldr	r3, [sp, #24]
   13d7c:	add	r4, r4, fp
   13d80:	add	r1, r1, r9
   13d84:	add	r4, r4, r3
   13d88:	ldr	r3, [pc, #-300]	; 13c64 <dcngettext@plt+0x2c4c>
   13d8c:	add	r9, r5, r9
   13d90:	add	r4, r8, r4
   13d94:	eor	r5, ip, r0
   13d98:	and	r5, r5, r1
   13d9c:	add	r3, r4, r3
   13da0:	ror	r8, r1, #11
   13da4:	add	r3, r3, sl
   13da8:	eor	r8, r8, r1, ror #6
   13dac:	eor	sl, r5, ip
   13db0:	eor	r8, r8, r1, ror #25
   13db4:	str	r4, [sp, #36]	; 0x24
   13db8:	add	r3, sl, r3
   13dbc:	orr	r4, r6, r9
   13dc0:	ror	r7, r9, #13
   13dc4:	ldr	sl, [sp, #44]	; 0x2c
   13dc8:	add	r3, r3, r8
   13dcc:	and	r4, r4, lr
   13dd0:	and	r8, r6, r9
   13dd4:	eor	r7, r7, r9, ror #2
   13dd8:	orr	r4, r4, r8
   13ddc:	eor	r7, r7, r9, ror #22
   13de0:	add	r7, r7, r4
   13de4:	ldr	r4, [sp, #4]
   13de8:	ror	r5, sl, #18
   13dec:	eor	r5, r5, sl, ror #7
   13df0:	eor	r5, r5, sl, lsr #3
   13df4:	ror	sl, r4, #19
   13df8:	ldr	r8, [sp, #40]	; 0x28
   13dfc:	eor	sl, sl, r4, ror #17
   13e00:	eor	sl, sl, r4, lsr #10
   13e04:	ldr	r4, [sp, #28]
   13e08:	add	r5, r5, r8
   13e0c:	add	r5, r5, r4
   13e10:	add	r2, r2, r3
   13e14:	add	r5, sl, r5
   13e18:	ldr	r4, [pc, #-440]	; 13c68 <dcngettext@plt+0x2c50>
   13e1c:	mov	r8, r5
   13e20:	eor	r5, r0, r1
   13e24:	add	r3, r7, r3
   13e28:	add	r4, r8, r4
   13e2c:	and	r5, r5, r2
   13e30:	ror	r7, r2, #11
   13e34:	eor	r5, r5, r0
   13e38:	add	ip, r4, ip
   13e3c:	eor	r7, r7, r2, ror #6
   13e40:	orr	r4, r9, r3
   13e44:	eor	r7, r7, r2, ror #25
   13e48:	add	ip, r5, ip
   13e4c:	str	r8, [sp, #40]	; 0x28
   13e50:	ldr	r8, [sp, #48]	; 0x30
   13e54:	add	ip, ip, r7
   13e58:	and	r4, r4, r6
   13e5c:	and	r7, r9, r3
   13e60:	ror	r5, r3, #13
   13e64:	orr	r4, r4, r7
   13e68:	eor	r5, r5, r3, ror #2
   13e6c:	ldr	r7, [sp, #36]	; 0x24
   13e70:	ror	fp, r8, #18
   13e74:	eor	r5, r5, r3, ror #22
   13e78:	ldr	sl, [sp, #44]	; 0x2c
   13e7c:	add	r5, r5, r4
   13e80:	eor	fp, fp, r8, ror #7
   13e84:	add	lr, lr, ip
   13e88:	eor	fp, fp, r8, lsr #3
   13e8c:	add	ip, r5, ip
   13e90:	ror	r4, r7, #19
   13e94:	ldr	r5, [sp, #32]
   13e98:	eor	r4, r4, r7, ror #17
   13e9c:	add	fp, fp, sl
   13ea0:	eor	r4, r4, r7, lsr #10
   13ea4:	add	fp, fp, r5
   13ea8:	ldr	r8, [pc, #-580]	; 13c6c <dcngettext@plt+0x2c54>
   13eac:	add	sl, r4, fp
   13eb0:	eor	r5, r1, r2
   13eb4:	add	r8, sl, r8
   13eb8:	and	r5, r5, lr
   13ebc:	ror	r7, lr, #11
   13ec0:	eor	r5, r5, r1
   13ec4:	add	r0, r8, r0
   13ec8:	eor	r7, r7, lr, ror #6
   13ecc:	orr	r4, r3, ip
   13ed0:	eor	r7, r7, lr, ror #25
   13ed4:	add	r0, r5, r0
   13ed8:	ror	r5, ip, #13
   13edc:	ldr	fp, [sp, #8]
   13ee0:	add	r0, r0, r7
   13ee4:	and	r4, r4, r9
   13ee8:	and	r7, r3, ip
   13eec:	eor	r5, r5, ip, ror #2
   13ef0:	orr	r4, r4, r7
   13ef4:	eor	r5, r5, ip, ror #22
   13ef8:	add	r5, r5, r4
   13efc:	ldr	r4, [sp, #40]	; 0x28
   13f00:	str	sl, [sp, #44]	; 0x2c
   13f04:	ror	sl, fp, #18
   13f08:	ldr	r8, [sp, #48]	; 0x30
   13f0c:	eor	sl, sl, fp, ror #7
   13f10:	ldr	r7, [sp, #52]	; 0x34
   13f14:	eor	sl, sl, fp, lsr #3
   13f18:	ror	fp, r4, #19
   13f1c:	eor	fp, fp, r4, ror #17
   13f20:	add	sl, sl, r8
   13f24:	add	r6, r6, r0
   13f28:	eor	fp, fp, r4, lsr #10
   13f2c:	add	sl, sl, r7
   13f30:	ldr	r4, [pc, #-712]	; 13c70 <dcngettext@plt+0x2c58>
   13f34:	add	r0, r5, r0
   13f38:	add	r8, fp, sl
   13f3c:	eor	r5, r2, lr
   13f40:	add	r4, r8, r4
   13f44:	and	r5, r5, r6
   13f48:	ror	r7, r6, #11
   13f4c:	eor	r5, r5, r2
   13f50:	add	r1, r4, r1
   13f54:	eor	r7, r7, r6, ror #6
   13f58:	orr	r4, ip, r0
   13f5c:	eor	r7, r7, r6, ror #25
   13f60:	add	r1, r5, r1
   13f64:	ror	r5, r0, #13
   13f68:	str	r8, [sp, #48]	; 0x30
   13f6c:	add	r1, r1, r7
   13f70:	ldr	r8, [sp, #12]
   13f74:	and	r7, ip, r0
   13f78:	and	r4, r4, r3
   13f7c:	eor	r5, r5, r0, ror #2
   13f80:	eor	r5, r5, r0, ror #22
   13f84:	orr	r4, r4, r7
   13f88:	add	r4, r5, r4
   13f8c:	ldr	r5, [sp, #44]	; 0x2c
   13f90:	ror	sl, r8, #18
   13f94:	ldr	fp, [sp, #8]
   13f98:	eor	sl, sl, r8, ror #7
   13f9c:	add	r9, r9, r1
   13fa0:	eor	sl, sl, r8, lsr #3
   13fa4:	add	r1, r4, r1
   13fa8:	ror	r8, r5, #19
   13fac:	ldr	r4, [sp, #56]	; 0x38
   13fb0:	eor	r8, r8, r5, ror #17
   13fb4:	add	sl, sl, fp
   13fb8:	eor	r8, r8, r5, lsr #10
   13fbc:	add	sl, sl, r4
   13fc0:	ldr	r4, [pc, #-852]	; 13c74 <dcngettext@plt+0x2c5c>
   13fc4:	add	sl, r8, sl
   13fc8:	eor	r5, lr, r6
   13fcc:	add	r4, sl, r4
   13fd0:	and	r5, r5, r9
   13fd4:	ror	r8, r9, #11
   13fd8:	eor	r5, r5, lr
   13fdc:	add	r2, r4, r2
   13fe0:	eor	r8, r8, r9, ror #6
   13fe4:	orr	r4, r0, r1
   13fe8:	eor	r8, r8, r9, ror #25
   13fec:	add	r2, r5, r2
   13ff0:	ror	r7, r1, #13
   13ff4:	str	sl, [sp, #8]
   13ff8:	add	r2, r2, r8
   13ffc:	ldr	sl, [sp, #16]
   14000:	and	r8, r0, r1
   14004:	and	r4, r4, ip
   14008:	eor	r7, r7, r1, ror #2
   1400c:	eor	r7, r7, r1, ror #22
   14010:	orr	r4, r4, r8
   14014:	add	r4, r7, r4
   14018:	ldr	r7, [sp, #48]	; 0x30
   1401c:	ror	r5, sl, #18
   14020:	ldr	r8, [sp, #12]
   14024:	eor	r5, r5, sl, ror #7
   14028:	add	r3, r3, r2
   1402c:	eor	r5, r5, sl, lsr #3
   14030:	add	r2, r4, r2
   14034:	ror	fp, r7, #19
   14038:	ldr	r4, [sp, #64]	; 0x40
   1403c:	add	sl, r5, r8
   14040:	eor	fp, fp, r7, ror #17
   14044:	add	r5, sl, r4
   14048:	eor	fp, fp, r7, lsr #10
   1404c:	ldr	r4, [pc, #-988]	; 13c78 <dcngettext@plt+0x2c60>
   14050:	add	r8, fp, r5
   14054:	eor	r5, r6, r9
   14058:	add	r4, r8, r4
   1405c:	and	r5, r5, r3
   14060:	ror	r7, r3, #11
   14064:	eor	r5, r5, r6
   14068:	add	lr, r4, lr
   1406c:	eor	r7, r7, r3, ror #6
   14070:	ldr	fp, [sp, #60]	; 0x3c
   14074:	orr	r4, r1, r2
   14078:	eor	r7, r7, r3, ror #25
   1407c:	add	lr, r5, lr
   14080:	add	lr, lr, r7
   14084:	and	r4, r4, r0
   14088:	and	r7, r1, r2
   1408c:	ror	r5, r2, #13
   14090:	eor	r5, r5, r2, ror #2
   14094:	orr	r4, r4, r7
   14098:	ldr	r7, [sp, #8]
   1409c:	eor	r5, r5, r2, ror #22
   140a0:	ror	sl, fp, #18
   140a4:	add	r4, r5, r4
   140a8:	eor	sl, sl, fp, ror #7
   140ac:	ldr	r5, [sp, #16]
   140b0:	add	ip, ip, lr
   140b4:	str	r8, [sp, #68]	; 0x44
   140b8:	add	lr, r4, lr
   140bc:	eor	sl, sl, fp, lsr #3
   140c0:	ldr	r4, [sp, #4]
   140c4:	ror	r8, r7, #19
   140c8:	eor	r8, r8, r7, ror #17
   140cc:	add	sl, sl, r5
   140d0:	eor	r8, r8, r7, lsr #10
   140d4:	add	sl, sl, r4
   140d8:	ldr	r4, [pc, #-1124]	; 13c7c <dcngettext@plt+0x2c64>
   140dc:	add	sl, r8, sl
   140e0:	eor	r5, r9, r3
   140e4:	add	r4, sl, r4
   140e8:	and	r5, r5, ip
   140ec:	ror	r8, ip, #11
   140f0:	str	sl, [sp, #12]
   140f4:	eor	r5, r5, r9
   140f8:	ldr	sl, [sp, #20]
   140fc:	add	r6, r4, r6
   14100:	eor	r8, r8, ip, ror #6
   14104:	orr	r4, r2, lr
   14108:	eor	r8, r8, ip, ror #25
   1410c:	add	r6, r5, r6
   14110:	add	r6, r6, r8
   14114:	and	r4, r4, r1
   14118:	and	r8, r2, lr
   1411c:	orr	r4, r4, r8
   14120:	ror	r5, sl, #18
   14124:	ldr	r8, [sp, #68]	; 0x44
   14128:	eor	r5, r5, sl, ror #7
   1412c:	eor	r5, r5, sl, lsr #3
   14130:	add	fp, r5, fp
   14134:	ror	r7, lr, #13
   14138:	ror	sl, r8, #19
   1413c:	ldr	r5, [sp, #36]	; 0x24
   14140:	eor	r7, r7, lr, ror #2
   14144:	eor	sl, sl, r8, ror #17
   14148:	eor	sl, sl, r8, lsr #10
   1414c:	eor	r7, r7, lr, ror #22
   14150:	add	r5, fp, r5
   14154:	add	r0, r0, r6
   14158:	add	r7, r7, r4
   1415c:	add	r5, sl, r5
   14160:	ldr	r4, [pc, #-1256]	; 13c80 <dcngettext@plt+0x2c68>
   14164:	mov	sl, r5
   14168:	eor	r5, r3, ip
   1416c:	add	r6, r7, r6
   14170:	add	r4, sl, r4
   14174:	and	r5, r5, r0
   14178:	ror	r8, r0, #11
   1417c:	ldr	fp, [sp, #24]
   14180:	eor	r5, r5, r3
   14184:	add	r9, r4, r9
   14188:	eor	r8, r8, r0, ror #6
   1418c:	orr	r4, lr, r6
   14190:	eor	r8, r8, r0, ror #25
   14194:	add	r9, r5, r9
   14198:	ror	r7, r6, #13
   1419c:	add	r9, r9, r8
   141a0:	and	r4, r4, r2
   141a4:	and	r8, lr, r6
   141a8:	eor	r7, r7, r6, ror #2
   141ac:	orr	r4, r4, r8
   141b0:	ror	r5, fp, #18
   141b4:	ldr	r8, [sp, #12]
   141b8:	eor	r7, r7, r6, ror #22
   141bc:	add	r7, r7, r4
   141c0:	eor	r5, r5, fp, ror #7
   141c4:	ldr	r4, [sp, #20]
   141c8:	eor	r5, r5, fp, lsr #3
   141cc:	add	fp, r5, r4
   141d0:	str	sl, [sp, #60]	; 0x3c
   141d4:	ldr	r5, [sp, #40]	; 0x28
   141d8:	ror	sl, r8, #19
   141dc:	eor	sl, sl, r8, ror #17
   141e0:	add	r1, r1, r9
   141e4:	add	r5, fp, r5
   141e8:	eor	sl, sl, r8, lsr #10
   141ec:	ldr	r8, [pc, #-1392]	; 13c84 <dcngettext@plt+0x2c6c>
   141f0:	add	sl, sl, r5
   141f4:	eor	r4, ip, r0
   141f8:	add	r9, r7, r9
   141fc:	add	r8, sl, r8
   14200:	and	r4, r4, r1
   14204:	ror	r7, r1, #11
   14208:	eor	r4, r4, ip
   1420c:	add	r3, r8, r3
   14210:	eor	r7, r7, r1, ror #6
   14214:	str	sl, [sp, #16]
   14218:	eor	r7, r7, r1, ror #25
   1421c:	orr	sl, r6, r9
   14220:	add	r3, r4, r3
   14224:	ror	r5, r9, #13
   14228:	add	r3, r3, r7
   1422c:	and	sl, sl, lr
   14230:	and	r7, r6, r9
   14234:	eor	r5, r5, r9, ror #2
   14238:	orr	sl, sl, r7
   1423c:	eor	r5, r5, r9, ror #22
   14240:	ldr	r8, [sp, #28]
   14244:	add	r5, r5, sl
   14248:	ldr	sl, [sp, #60]	; 0x3c
   1424c:	ror	r4, r8, #18
   14250:	ldr	r7, [sp, #24]
   14254:	ror	fp, sl, #19
   14258:	eor	r4, r4, r8, ror #7
   1425c:	eor	fp, fp, sl, ror #17
   14260:	eor	fp, fp, sl, lsr #10
   14264:	eor	r4, r4, r8, lsr #3
   14268:	ldr	sl, [sp, #44]	; 0x2c
   1426c:	add	r4, r4, r7
   14270:	add	r4, r4, sl
   14274:	add	r2, r2, r3
   14278:	add	r4, fp, r4
   1427c:	add	r3, r5, r3
   14280:	ldr	r5, [pc, #-1536]	; 13c88 <dcngettext@plt+0x2c70>
   14284:	mov	fp, r4
   14288:	eor	r4, r0, r1
   1428c:	add	r5, fp, r5
   14290:	and	r4, r4, r2
   14294:	ror	r7, r2, #11
   14298:	eor	r4, r4, r0
   1429c:	add	ip, r5, ip
   142a0:	eor	r7, r7, r2, ror #6
   142a4:	orr	sl, r9, r3
   142a8:	eor	r7, r7, r2, ror #25
   142ac:	add	ip, r4, ip
   142b0:	ror	r5, r3, #13
   142b4:	add	ip, ip, r7
   142b8:	and	sl, sl, r6
   142bc:	and	r7, r9, r3
   142c0:	eor	r5, r5, r3, ror #2
   142c4:	orr	sl, sl, r7
   142c8:	eor	r5, r5, r3, ror #22
   142cc:	str	fp, [sp, #72]	; 0x48
   142d0:	add	r5, r5, sl
   142d4:	ldr	fp, [sp, #32]
   142d8:	ldr	sl, [sp, #16]
   142dc:	ldr	r7, [sp, #28]
   142e0:	ror	r4, fp, #18
   142e4:	ror	r8, sl, #19
   142e8:	eor	r4, r4, fp, ror #7
   142ec:	eor	r8, r8, sl, ror #17
   142f0:	eor	r8, r8, sl, lsr #10
   142f4:	eor	r4, r4, fp, lsr #3
   142f8:	ldr	sl, [sp, #48]	; 0x30
   142fc:	add	fp, r4, r7
   14300:	add	r4, fp, sl
   14304:	add	r4, r8, r4
   14308:	ldr	r7, [pc, #-1668]	; 13c8c <dcngettext@plt+0x2c74>
   1430c:	add	lr, lr, ip
   14310:	add	ip, r5, ip
   14314:	mov	r5, r4
   14318:	add	r7, r5, r7
   1431c:	add	r0, r7, r0
   14320:	ldr	r7, [sp, #52]	; 0x34
   14324:	eor	r4, r1, r2
   14328:	str	r5, [sp, #20]
   1432c:	and	r4, r4, lr
   14330:	ror	r5, lr, #11
   14334:	eor	r4, r4, r1
   14338:	eor	r5, r5, lr, ror #6
   1433c:	ror	sl, r7, #18
   14340:	orr	r8, r3, ip
   14344:	eor	r5, r5, lr, ror #25
   14348:	add	r0, r4, r0
   1434c:	eor	sl, sl, r7, ror #7
   14350:	add	r0, r0, r5
   14354:	and	r8, r8, r9
   14358:	and	r5, r3, ip
   1435c:	eor	sl, sl, r7, lsr #3
   14360:	ldr	r7, [sp, #72]	; 0x48
   14364:	orr	r8, r8, r5
   14368:	ldr	r5, [sp, #32]
   1436c:	ror	r4, ip, #13
   14370:	eor	r4, r4, ip, ror #2
   14374:	ror	fp, r7, #19
   14378:	add	sl, sl, r5
   1437c:	ldr	r5, [sp, #8]
   14380:	eor	r4, r4, ip, ror #22
   14384:	eor	fp, fp, r7, ror #17
   14388:	add	r6, r6, r0
   1438c:	add	r4, r4, r8
   14390:	add	sl, sl, r5
   14394:	eor	fp, fp, r7, lsr #10
   14398:	ldr	r7, [pc, #-1808]	; 13c90 <dcngettext@plt+0x2c78>
   1439c:	add	r0, r4, r0
   143a0:	add	fp, fp, sl
   143a4:	eor	r4, r2, lr
   143a8:	add	r7, fp, r7
   143ac:	and	r4, r4, r6
   143b0:	ror	r5, r6, #11
   143b4:	eor	r4, r4, r2
   143b8:	add	r1, r7, r1
   143bc:	eor	r5, r5, r6, ror #6
   143c0:	ldr	r8, [sp, #56]	; 0x38
   143c4:	str	fp, [sp, #24]
   143c8:	eor	r5, r5, r6, ror #25
   143cc:	orr	fp, ip, r0
   143d0:	add	r1, r4, r1
   143d4:	ror	r4, r0, #13
   143d8:	add	r1, r1, r5
   143dc:	and	fp, fp, r3
   143e0:	and	r5, ip, r0
   143e4:	eor	r4, r4, r0, ror #2
   143e8:	orr	fp, fp, r5
   143ec:	eor	r4, r4, r0, ror #22
   143f0:	add	r4, r4, fp
   143f4:	ror	sl, r8, #18
   143f8:	ldr	fp, [sp, #20]
   143fc:	ldr	r7, [sp, #52]	; 0x34
   14400:	eor	sl, sl, r8, ror #7
   14404:	eor	sl, sl, r8, lsr #3
   14408:	ror	r5, fp, #19
   1440c:	add	sl, sl, r7
   14410:	ldr	r7, [sp, #68]	; 0x44
   14414:	eor	r5, r5, fp, ror #17
   14418:	eor	r5, r5, fp, lsr #10
   1441c:	add	sl, sl, r7
   14420:	add	r9, r9, r1
   14424:	ldr	r7, [pc, #-1944]	; 13c94 <dcngettext@plt+0x2c7c>
   14428:	add	r1, r4, r1
   1442c:	add	r4, r5, sl
   14430:	mov	r8, r4
   14434:	eor	r4, lr, r6
   14438:	add	r7, r8, r7
   1443c:	and	r4, r4, r9
   14440:	ror	r5, r9, #11
   14444:	eor	r4, r4, lr
   14448:	add	r2, r7, r2
   1444c:	eor	r5, r5, r9, ror #6
   14450:	ldr	fp, [sp, #64]	; 0x40
   14454:	orr	sl, r0, r1
   14458:	eor	r5, r5, r9, ror #25
   1445c:	add	r2, r4, r2
   14460:	ror	r4, r1, #13
   14464:	add	r2, r2, r5
   14468:	and	sl, sl, ip
   1446c:	and	r5, r0, r1
   14470:	eor	r4, r4, r1, ror #2
   14474:	orr	sl, sl, r5
   14478:	eor	r4, r4, r1, ror #22
   1447c:	add	r4, r4, sl
   14480:	ror	r7, fp, #18
   14484:	ldr	sl, [sp, #24]
   14488:	ldr	r5, [sp, #56]	; 0x38
   1448c:	eor	r7, r7, fp, ror #7
   14490:	eor	r7, r7, fp, lsr #3
   14494:	str	r8, [sp, #28]
   14498:	add	r7, r7, r5
   1449c:	ror	r8, sl, #19
   144a0:	ldr	r5, [sp, #12]
   144a4:	eor	r8, r8, sl, ror #17
   144a8:	add	r3, r3, r2
   144ac:	eor	r8, r8, sl, lsr #10
   144b0:	add	r7, r7, r5
   144b4:	ldr	r5, [pc, #-2084]	; 13c98 <dcngettext@plt+0x2c80>
   144b8:	add	r2, r4, r2
   144bc:	add	r7, r8, r7
   144c0:	eor	r4, r6, r9
   144c4:	add	r5, r7, r5
   144c8:	str	r7, [sp, #32]
   144cc:	and	r4, r4, r3
   144d0:	ror	r7, r3, #11
   144d4:	eor	r4, r4, r6
   144d8:	add	lr, r5, lr
   144dc:	eor	r7, r7, r3, ror #6
   144e0:	orr	r8, r1, r2
   144e4:	eor	r7, r7, r3, ror #25
   144e8:	add	lr, r4, lr
   144ec:	ror	r4, r2, #13
   144f0:	ldr	sl, [sp, #4]
   144f4:	add	lr, lr, r7
   144f8:	and	r8, r8, r0
   144fc:	and	r7, r1, r2
   14500:	eor	r4, r4, r2, ror #2
   14504:	orr	r8, r8, r7
   14508:	eor	r4, r4, r2, ror #22
   1450c:	add	r4, r4, r8
   14510:	ldr	r8, [sp, #28]
   14514:	ror	r5, sl, #18
   14518:	eor	r5, r5, sl, ror #7
   1451c:	add	r7, r4, lr
   14520:	add	ip, ip, lr
   14524:	eor	r5, r5, sl, lsr #3
   14528:	ldr	lr, [sp, #60]	; 0x3c
   1452c:	ror	sl, r8, #19
   14530:	eor	sl, sl, r8, ror #17
   14534:	add	r5, r5, fp
   14538:	eor	sl, sl, r8, lsr #10
   1453c:	add	r5, r5, lr
   14540:	add	lr, sl, r5
   14544:	str	lr, [sp, #124]	; 0x7c
   14548:	ldr	fp, [sp, #124]	; 0x7c
   1454c:	ldr	r4, [pc, #-2232]	; 13c9c <dcngettext@plt+0x2c84>
   14550:	eor	lr, r9, r3
   14554:	add	r4, fp, r4
   14558:	and	lr, lr, ip
   1455c:	ror	r5, ip, #11
   14560:	eor	lr, lr, r9
   14564:	add	r6, r4, r6
   14568:	eor	r5, r5, ip, ror #6
   1456c:	orr	r8, r2, r7
   14570:	eor	r5, r5, ip, ror #25
   14574:	add	r6, lr, r6
   14578:	ror	lr, r7, #13
   1457c:	ldr	fp, [sp, #36]	; 0x24
   14580:	add	r6, r6, r5
   14584:	and	r8, r8, r1
   14588:	and	r5, r2, r7
   1458c:	eor	lr, lr, r7, ror #2
   14590:	orr	r8, r8, r5
   14594:	eor	lr, lr, r7, ror #22
   14598:	add	lr, lr, r8
   1459c:	ldr	r8, [sp, #32]
   145a0:	ror	r4, fp, #18
   145a4:	ldr	r5, [sp, #4]
   145a8:	eor	r4, r4, fp, ror #7
   145ac:	add	r0, r0, r6
   145b0:	eor	r4, r4, fp, lsr #3
   145b4:	add	r6, lr, r6
   145b8:	ror	sl, r8, #19
   145bc:	ldr	lr, [sp, #16]
   145c0:	add	fp, r4, r5
   145c4:	eor	sl, sl, r8, ror #17
   145c8:	eor	sl, sl, r8, lsr #10
   145cc:	add	r4, fp, lr
   145d0:	ldr	r5, [pc, #-2360]	; 13ca0 <dcngettext@plt+0x2c88>
   145d4:	add	lr, sl, r4
   145d8:	eor	fp, r3, ip
   145dc:	str	lr, [sp, #128]	; 0x80
   145e0:	add	r5, lr, r5
   145e4:	and	fp, fp, r0
   145e8:	ror	lr, r0, #11
   145ec:	add	r9, r5, r9
   145f0:	eor	fp, fp, r3
   145f4:	eor	lr, lr, r0, ror #6
   145f8:	orr	r4, r7, r6
   145fc:	add	fp, fp, r9
   14600:	ror	r5, r6, #13
   14604:	eor	lr, lr, r0, ror #25
   14608:	ldr	r9, [sp, #40]	; 0x28
   1460c:	add	lr, fp, lr
   14610:	and	r4, r4, r2
   14614:	and	fp, r7, r6
   14618:	eor	r5, r5, r6, ror #2
   1461c:	eor	r5, r5, r6, ror #22
   14620:	orr	fp, r4, fp
   14624:	add	fp, r5, fp
   14628:	ldr	r5, [sp, #124]	; 0x7c
   1462c:	ldr	sl, [sp, #124]	; 0x7c
   14630:	ror	r8, r9, #18
   14634:	ldr	r4, [sp, #36]	; 0x24
   14638:	eor	r8, r8, r9, ror #7
   1463c:	add	fp, fp, lr
   14640:	add	r1, r1, lr
   14644:	eor	r8, r8, r9, lsr #3
   14648:	ldr	lr, [sp, #72]	; 0x48
   1464c:	ror	r5, r5, #19
   14650:	eor	r5, r5, sl, ror #17
   14654:	add	r8, r8, r4
   14658:	add	r8, r8, lr
   1465c:	eor	r5, r5, sl, lsr #10
   14660:	ldr	lr, [pc, #-2500]	; 13ca4 <dcngettext@plt+0x2c8c>
   14664:	add	r5, r5, r8
   14668:	eor	sl, ip, r0
   1466c:	add	lr, r5, lr
   14670:	and	sl, sl, r1
   14674:	ror	r4, r1, #11
   14678:	eor	sl, sl, ip
   1467c:	add	r3, lr, r3
   14680:	eor	r4, r4, r1, ror #6
   14684:	orr	lr, r6, fp
   14688:	eor	r4, r4, r1, ror #25
   1468c:	add	r3, sl, r3
   14690:	ror	sl, fp, #13
   14694:	ldr	r8, [sp, #44]	; 0x2c
   14698:	add	r3, r3, r4
   1469c:	and	lr, lr, r7
   146a0:	and	r4, r6, fp
   146a4:	eor	sl, sl, fp, ror #2
   146a8:	orr	lr, lr, r4
   146ac:	eor	sl, sl, fp, ror #22
   146b0:	add	sl, sl, lr
   146b4:	ldr	lr, [sp, #128]	; 0x80
   146b8:	str	r5, [sp, #132]	; 0x84
   146bc:	ror	r5, r8, #18
   146c0:	eor	r5, r5, r8, ror #7
   146c4:	add	sl, sl, r3
   146c8:	add	r2, r2, r3
   146cc:	eor	r5, r5, r8, lsr #3
   146d0:	ldr	r3, [sp, #20]
   146d4:	ror	r4, lr, #19
   146d8:	eor	r4, r4, lr, ror #17
   146dc:	add	r5, r5, r9
   146e0:	eor	r4, r4, lr, lsr #10
   146e4:	add	r5, r5, r3
   146e8:	add	r3, r4, r5
   146ec:	str	r3, [sp, #136]	; 0x88
   146f0:	ldr	r9, [sp, #136]	; 0x88
   146f4:	ldr	lr, [pc, #-2644]	; 13ca8 <dcngettext@plt+0x2c90>
   146f8:	eor	r3, r0, r1
   146fc:	add	lr, r9, lr
   14700:	ror	r4, r2, #11
   14704:	and	r3, r3, r2
   14708:	add	r5, lr, ip
   1470c:	eor	r3, r3, r0
   14710:	eor	ip, r4, r2, ror #6
   14714:	orr	lr, fp, sl
   14718:	eor	ip, ip, r2, ror #25
   1471c:	add	r3, r3, r5
   14720:	ror	r5, sl, #13
   14724:	add	r3, r3, ip
   14728:	and	lr, lr, r6
   1472c:	and	ip, fp, sl
   14730:	eor	r5, r5, sl, ror #2
   14734:	orr	lr, lr, ip
   14738:	eor	r5, r5, sl, ror #22
   1473c:	ldr	ip, [sp, #132]	; 0x84
   14740:	add	r5, r5, lr
   14744:	ldr	lr, [sp, #132]	; 0x84
   14748:	ldr	r9, [sp, #48]	; 0x30
   1474c:	ror	ip, ip, #19
   14750:	eor	ip, ip, lr, ror #17
   14754:	add	lr, r7, r3
   14758:	add	r7, r5, r3
   1475c:	ldr	r3, [sp, #132]	; 0x84
   14760:	ror	r4, r9, #18
   14764:	eor	r4, r4, r9, ror #7
   14768:	eor	r4, r4, r9, lsr #3
   1476c:	eor	ip, ip, r3, lsr #10
   14770:	ldr	r3, [sp, #24]
   14774:	add	r4, r4, r8
   14778:	add	r4, r4, r3
   1477c:	ldr	r5, [pc, #-2776]	; 13cac <dcngettext@plt+0x2c94>
   14780:	add	ip, ip, r4
   14784:	eor	r3, r1, r2
   14788:	add	r5, ip, r5
   1478c:	and	r3, r3, lr
   14790:	ror	r4, lr, #11
   14794:	add	r0, r5, r0
   14798:	eor	r3, r3, r1
   1479c:	eor	r4, r4, lr, ror #6
   147a0:	ldr	r8, [sp, #8]
   147a4:	str	ip, [sp, #140]	; 0x8c
   147a8:	eor	r4, r4, lr, ror #25
   147ac:	orr	ip, sl, r7
   147b0:	add	r3, r3, r0
   147b4:	ror	r5, r7, #13
   147b8:	add	r3, r3, r4
   147bc:	and	ip, ip, fp
   147c0:	and	r4, sl, r7
   147c4:	eor	r5, r5, r7, ror #2
   147c8:	orr	ip, ip, r4
   147cc:	eor	r5, r5, r7, ror #22
   147d0:	ror	r0, r8, #18
   147d4:	add	r5, r5, ip
   147d8:	ldr	ip, [sp, #136]	; 0x88
   147dc:	ldr	r4, [sp, #136]	; 0x88
   147e0:	eor	r0, r0, r8, ror #7
   147e4:	eor	r0, r0, r8, lsr #3
   147e8:	add	r0, r0, r9
   147ec:	ror	ip, ip, #19
   147f0:	ldr	r9, [sp, #28]
   147f4:	eor	ip, ip, r4, ror #17
   147f8:	add	r6, r6, r3
   147fc:	eor	ip, ip, r4, lsr #10
   14800:	add	r0, r0, r9
   14804:	ldr	r4, [pc, #-2908]	; 13cb0 <dcngettext@plt+0x2c98>
   14808:	add	r0, ip, r0
   1480c:	eor	r8, r2, lr
   14810:	add	r5, r5, r3
   14814:	add	r4, r0, r4
   14818:	and	r8, r8, r6
   1481c:	ror	r3, r6, #11
   14820:	add	r1, r4, r1
   14824:	eor	r8, r8, r2
   14828:	eor	r3, r3, r6, ror #6
   1482c:	add	r8, r8, r1
   14830:	str	r0, [sp, #144]	; 0x90
   14834:	eor	r3, r3, r6, ror #25
   14838:	orr	r0, r7, r5
   1483c:	add	r3, r8, r3
   14840:	and	r0, r0, sl
   14844:	and	r8, r7, r5
   14848:	ldr	r4, [sp, #68]	; 0x44
   1484c:	orr	r8, r0, r8
   14850:	ldr	r0, [sp, #140]	; 0x8c
   14854:	ldr	r9, [sp, #140]	; 0x8c
   14858:	ror	ip, r5, #13
   1485c:	eor	ip, ip, r5, ror #2
   14860:	eor	ip, ip, r5, ror #22
   14864:	ror	r1, r4, #18
   14868:	ror	r0, r0, #19
   1486c:	eor	r1, r1, r4, ror #7
   14870:	add	r8, ip, r8
   14874:	eor	r0, r0, r9, ror #17
   14878:	ldr	ip, [sp, #8]
   1487c:	eor	r0, r0, r9, lsr #10
   14880:	eor	r1, r1, r4, lsr #3
   14884:	ldr	r9, [sp, #32]
   14888:	add	r1, r1, ip
   1488c:	add	fp, fp, r3
   14890:	add	r1, r1, r9
   14894:	ldr	ip, [pc, #-3048]	; 13cb4 <dcngettext@plt+0x2c9c>
   14898:	add	r1, r0, r1
   1489c:	eor	r9, lr, r6
   148a0:	add	r8, r8, r3
   148a4:	add	ip, r1, ip
   148a8:	and	r9, r9, fp
   148ac:	ror	r3, fp, #11
   148b0:	add	r2, ip, r2
   148b4:	eor	r9, r9, lr
   148b8:	eor	r3, r3, fp, ror #6
   148bc:	str	r1, [sp, #148]	; 0x94
   148c0:	add	r9, r9, r2
   148c4:	orr	r1, r5, r8
   148c8:	ror	r0, r8, #13
   148cc:	eor	r3, r3, fp, ror #25
   148d0:	add	r3, r9, r3
   148d4:	and	r1, r1, r7
   148d8:	and	r9, r5, r8
   148dc:	eor	r0, r0, r8, ror #2
   148e0:	ldr	ip, [sp, #12]
   148e4:	eor	r0, r0, r8, ror #22
   148e8:	orr	r9, r1, r9
   148ec:	ldr	r1, [sp, #144]	; 0x90
   148f0:	add	r9, r0, r9
   148f4:	ldr	r0, [sp, #144]	; 0x90
   148f8:	ror	r2, ip, #18
   148fc:	ror	r1, r1, #19
   14900:	eor	r2, r2, ip, ror #7
   14904:	eor	r1, r1, r0, ror #17
   14908:	eor	r1, r1, r0, lsr #10
   1490c:	eor	r2, r2, ip, lsr #3
   14910:	ldr	r0, [sp, #124]	; 0x7c
   14914:	add	r2, r2, r4
   14918:	add	r2, r2, r0
   1491c:	add	r2, r1, r2
   14920:	str	r2, [sp, #152]	; 0x98
   14924:	add	sl, sl, r3
   14928:	add	r9, r9, r3
   1492c:	ldr	r1, [sp, #152]	; 0x98
   14930:	ldr	r3, [pc, #-3200]	; 13cb8 <dcngettext@plt+0x2ca0>
   14934:	eor	r2, r6, fp
   14938:	ldr	r4, [sp, #60]	; 0x3c
   1493c:	add	r3, r1, r3
   14940:	and	r2, r2, sl
   14944:	ror	ip, sl, #11
   14948:	add	lr, r3, lr
   1494c:	eor	r2, r2, r6
   14950:	eor	ip, ip, sl, ror #6
   14954:	orr	r0, r8, r9
   14958:	eor	ip, ip, sl, ror #25
   1495c:	add	r2, r2, lr
   14960:	ror	r3, r9, #13
   14964:	add	r2, r2, ip
   14968:	and	r0, r0, r5
   1496c:	and	ip, r8, r9
   14970:	eor	r3, r3, r9, ror #2
   14974:	ror	r1, r4, #18
   14978:	orr	r0, r0, ip
   1497c:	eor	r1, r1, r4, ror #7
   14980:	ldr	ip, [sp, #12]
   14984:	eor	r3, r3, r9, ror #22
   14988:	eor	r1, r1, r4, lsr #3
   1498c:	add	r3, r3, r0
   14990:	ldr	r0, [sp, #148]	; 0x94
   14994:	add	r1, r1, ip
   14998:	ldr	ip, [sp, #148]	; 0x94
   1499c:	add	r7, r7, r2
   149a0:	add	r3, r3, r2
   149a4:	ror	r0, r0, #19
   149a8:	ldr	r2, [sp, #128]	; 0x80
   149ac:	eor	r0, r0, ip, ror #17
   149b0:	eor	r0, r0, ip, lsr #10
   149b4:	add	r1, r1, r2
   149b8:	add	r2, r0, r1
   149bc:	str	r2, [sp, #156]	; 0x9c
   149c0:	ldr	r1, [sp, #156]	; 0x9c
   149c4:	ldr	ip, [pc, #-3344]	; 13cbc <dcngettext@plt+0x2ca4>
   149c8:	eor	r2, fp, sl
   149cc:	add	ip, r1, ip
   149d0:	and	r2, r2, r7
   149d4:	add	r6, ip, r6
   149d8:	eor	r2, r2, fp
   149dc:	add	r2, r2, r6
   149e0:	ldr	r6, [sp, #16]
   149e4:	ror	r1, r7, #11
   149e8:	eor	r1, r1, r7, ror #6
   149ec:	ror	r0, r6, #18
   149f0:	orr	lr, r9, r3
   149f4:	ror	ip, r3, #13
   149f8:	eor	r0, r0, r6, ror #7
   149fc:	eor	r1, r1, r7, ror #25
   14a00:	add	r1, r2, r1
   14a04:	and	lr, lr, r8
   14a08:	and	r2, r9, r3
   14a0c:	eor	ip, ip, r3, ror #2
   14a10:	eor	r0, r0, r6, lsr #3
   14a14:	eor	ip, ip, r3, ror #22
   14a18:	add	r0, r0, r4
   14a1c:	orr	r2, lr, r2
   14a20:	ldr	r4, [sp, #152]	; 0x98
   14a24:	add	r2, ip, r2
   14a28:	ldr	ip, [sp, #152]	; 0x98
   14a2c:	ror	r4, r4, #19
   14a30:	add	r6, r5, r1
   14a34:	eor	r4, r4, ip, ror #17
   14a38:	ldr	ip, [sp, #132]	; 0x84
   14a3c:	add	r2, r2, r1
   14a40:	add	r0, r0, ip
   14a44:	ldr	ip, [sp, #152]	; 0x98
   14a48:	eor	r1, sl, r7
   14a4c:	and	r1, r1, r6
   14a50:	eor	r4, r4, ip, lsr #10
   14a54:	ldr	ip, [pc, #-3484]	; 13cc0 <dcngettext@plt+0x2ca8>
   14a58:	add	r0, r4, r0
   14a5c:	add	ip, r0, ip
   14a60:	add	ip, ip, fp
   14a64:	ldr	fp, [sp, #72]	; 0x48
   14a68:	str	r0, [sp, #160]	; 0xa0
   14a6c:	ror	r0, r6, #11
   14a70:	eor	r1, r1, sl
   14a74:	eor	r0, r0, r6, ror #6
   14a78:	add	r1, r1, ip
   14a7c:	eor	r0, r0, r6, ror #25
   14a80:	ror	ip, fp, #18
   14a84:	add	r0, r1, r0
   14a88:	eor	ip, ip, fp, ror #7
   14a8c:	ldr	r1, [sp, #16]
   14a90:	orr	lr, r3, r2
   14a94:	ror	r4, r2, #13
   14a98:	eor	ip, ip, fp, lsr #3
   14a9c:	and	lr, lr, r9
   14aa0:	eor	r4, r4, r2, ror #2
   14aa4:	add	ip, ip, r1
   14aa8:	and	r1, r3, r2
   14aac:	eor	r4, r4, r2, ror #22
   14ab0:	orr	r1, lr, r1
   14ab4:	ldr	lr, [sp, #156]	; 0x9c
   14ab8:	add	r1, r4, r1
   14abc:	ldr	r4, [sp, #156]	; 0x9c
   14ac0:	add	r1, r1, r0
   14ac4:	add	r8, r8, r0
   14ac8:	ror	lr, lr, #19
   14acc:	ldr	r0, [sp, #136]	; 0x88
   14ad0:	eor	lr, lr, r4, ror #17
   14ad4:	add	ip, ip, r0
   14ad8:	eor	r0, lr, r4, lsr #10
   14adc:	add	r0, r0, ip
   14ae0:	str	r0, [sp, #164]	; 0xa4
   14ae4:	ldr	ip, [sp, #164]	; 0xa4
   14ae8:	ldr	lr, [pc, #-3628]	; 13cc4 <dcngettext@plt+0x2cac>
   14aec:	eor	r0, r7, r6
   14af0:	add	lr, ip, lr
   14af4:	and	r0, r0, r8
   14af8:	ror	ip, r8, #11
   14afc:	add	lr, lr, sl
   14b00:	eor	r0, r0, r7
   14b04:	eor	ip, ip, r8, ror #6
   14b08:	ldr	sl, [sp, #20]
   14b0c:	orr	r4, r2, r1
   14b10:	add	r0, r0, lr
   14b14:	ror	r5, r1, #13
   14b18:	eor	ip, ip, r8, ror #25
   14b1c:	add	ip, r0, ip
   14b20:	and	r4, r4, r3
   14b24:	and	r0, r2, r1
   14b28:	eor	r5, r5, r1, ror #2
   14b2c:	eor	r5, r5, r1, ror #22
   14b30:	orr	r0, r4, r0
   14b34:	ldr	r4, [sp, #160]	; 0xa0
   14b38:	ror	lr, sl, #18
   14b3c:	add	r0, r5, r0
   14b40:	ldr	r5, [sp, #160]	; 0xa0
   14b44:	eor	lr, lr, sl, ror #7
   14b48:	add	r0, r0, ip
   14b4c:	add	r9, r9, ip
   14b50:	eor	lr, lr, sl, lsr #3
   14b54:	ldr	ip, [sp, #140]	; 0x8c
   14b58:	ror	r4, r4, #19
   14b5c:	eor	r4, r4, r5, ror #17
   14b60:	add	lr, lr, fp
   14b64:	add	lr, lr, ip
   14b68:	eor	ip, r4, r5, lsr #10
   14b6c:	add	ip, ip, lr
   14b70:	str	ip, [sp, #168]	; 0xa8
   14b74:	ldr	lr, [sp, #168]	; 0xa8
   14b78:	ldr	r4, [pc, #-3768]	; 13cc8 <dcngettext@plt+0x2cb0>
   14b7c:	eor	ip, r6, r8
   14b80:	add	r4, lr, r4
   14b84:	and	ip, ip, r9
   14b88:	ror	lr, r9, #11
   14b8c:	add	r4, r4, r7
   14b90:	eor	ip, ip, r6
   14b94:	eor	lr, lr, r9, ror #6
   14b98:	orr	r5, r1, r0
   14b9c:	add	ip, ip, r4
   14ba0:	ror	sl, r0, #13
   14ba4:	eor	lr, lr, r9, ror #25
   14ba8:	ldr	r7, [sp, #24]
   14bac:	add	lr, ip, lr
   14bb0:	and	r5, r5, r2
   14bb4:	and	ip, r1, r0
   14bb8:	eor	sl, sl, r0, ror #2
   14bbc:	eor	sl, sl, r0, ror #22
   14bc0:	orr	ip, r5, ip
   14bc4:	ldr	r5, [sp, #164]	; 0xa4
   14bc8:	add	ip, sl, ip
   14bcc:	ldr	sl, [sp, #164]	; 0xa4
   14bd0:	ror	r4, r7, #18
   14bd4:	ldr	fp, [sp, #20]
   14bd8:	eor	r4, r4, r7, ror #7
   14bdc:	ror	r5, r5, #19
   14be0:	eor	r5, r5, sl, ror #17
   14be4:	eor	r4, r4, r7, lsr #3
   14be8:	ldr	sl, [sp, #144]	; 0x90
   14bec:	add	r4, r4, fp
   14bf0:	add	r4, r4, sl
   14bf4:	ldr	sl, [sp, #164]	; 0xa4
   14bf8:	add	ip, ip, lr
   14bfc:	add	r3, r3, lr
   14c00:	eor	r7, r5, sl, lsr #10
   14c04:	add	lr, r7, r4
   14c08:	str	lr, [sp, #172]	; 0xac
   14c0c:	ldr	r4, [sp, #172]	; 0xac
   14c10:	ldr	r5, [pc, #-3916]	; 13ccc <dcngettext@plt+0x2cb4>
   14c14:	eor	lr, r8, r9
   14c18:	add	r5, r4, r5
   14c1c:	add	r5, r5, r6
   14c20:	ldr	r6, [sp, #28]
   14c24:	and	lr, lr, r3
   14c28:	ror	r4, r3, #11
   14c2c:	eor	lr, lr, r8
   14c30:	eor	r4, r4, r3, ror #6
   14c34:	add	lr, lr, r5
   14c38:	eor	r4, r4, r3, ror #25
   14c3c:	ror	r5, r6, #18
   14c40:	add	r4, lr, r4
   14c44:	ldr	r7, [sp, #168]	; 0xa8
   14c48:	ldr	lr, [sp, #24]
   14c4c:	eor	r5, r5, r6, ror #7
   14c50:	orr	sl, r0, ip
   14c54:	eor	r5, r5, r6, lsr #3
   14c58:	and	sl, sl, r1
   14c5c:	add	r5, r5, lr
   14c60:	and	lr, r0, ip
   14c64:	orr	lr, sl, lr
   14c68:	ror	sl, r7, #19
   14c6c:	eor	sl, sl, r7, ror #17
   14c70:	ldr	r7, [sp, #148]	; 0x94
   14c74:	ror	fp, ip, #13
   14c78:	add	r5, r5, r7
   14c7c:	ldr	r7, [sp, #168]	; 0xa8
   14c80:	eor	fp, fp, ip, ror #2
   14c84:	eor	fp, fp, ip, ror #22
   14c88:	add	r2, r2, r4
   14c8c:	eor	r6, sl, r7, lsr #10
   14c90:	add	lr, fp, lr
   14c94:	ldr	fp, [pc, #-4044]	; 13cd0 <dcngettext@plt+0x2cb8>
   14c98:	add	lr, lr, r4
   14c9c:	add	r6, r6, r5
   14ca0:	ldr	r7, [sp, #32]
   14ca4:	eor	r4, r9, r3
   14ca8:	add	fp, r6, fp
   14cac:	and	r4, r4, r2
   14cb0:	ror	r5, r2, #11
   14cb4:	add	r8, fp, r8
   14cb8:	eor	r4, r4, r9
   14cbc:	eor	r5, r5, r2, ror #6
   14cc0:	add	r4, r4, r8
   14cc4:	eor	r5, r5, r2, ror #25
   14cc8:	ror	r8, r7, #18
   14ccc:	add	r5, r4, r5
   14cd0:	eor	r8, r8, r7, ror #7
   14cd4:	ldr	r4, [sp, #28]
   14cd8:	orr	sl, ip, lr
   14cdc:	ror	fp, lr, #13
   14ce0:	eor	r8, r8, r7, lsr #3
   14ce4:	and	sl, sl, r0
   14ce8:	ldr	r7, [sp, #172]	; 0xac
   14cec:	eor	fp, fp, lr, ror #2
   14cf0:	add	r8, r8, r4
   14cf4:	and	r4, ip, lr
   14cf8:	eor	fp, fp, lr, ror #22
   14cfc:	orr	r4, sl, r4
   14d00:	add	r4, fp, r4
   14d04:	add	r4, r4, r5
   14d08:	add	r1, r1, r5
   14d0c:	ror	sl, r7, #19
   14d10:	ldr	r5, [sp, #152]	; 0x98
   14d14:	eor	sl, sl, r7, ror #17
   14d18:	eor	sl, sl, r7, lsr #10
   14d1c:	add	r8, r8, r5
   14d20:	add	r5, sl, r8
   14d24:	str	r5, [sp, #180]	; 0xb4
   14d28:	ldr	sl, [sp, #180]	; 0xb4
   14d2c:	ldr	fp, [pc, #440]	; 14eec <dcngettext@plt+0x3ed4>
   14d30:	eor	r5, r3, r2
   14d34:	add	fp, sl, fp
   14d38:	and	r5, r5, r1
   14d3c:	add	r9, fp, r9
   14d40:	eor	r5, r5, r3
   14d44:	add	r5, r5, r9
   14d48:	ldr	r9, [sp, #124]	; 0x7c
   14d4c:	ldr	r7, [sp, #124]	; 0x7c
   14d50:	ror	r8, r1, #11
   14d54:	ror	r9, r9, #18
   14d58:	eor	r8, r8, r1, ror #6
   14d5c:	eor	r9, r9, r7, ror #7
   14d60:	orr	sl, lr, r4
   14d64:	ror	fp, r4, #13
   14d68:	eor	r8, r8, r1, ror #25
   14d6c:	eor	r9, r9, r7, lsr #3
   14d70:	ldr	r7, [sp, #32]
   14d74:	add	r8, r5, r8
   14d78:	and	sl, sl, ip
   14d7c:	and	r5, lr, r4
   14d80:	eor	fp, fp, r4, ror #2
   14d84:	eor	fp, fp, r4, ror #22
   14d88:	add	r9, r9, r7
   14d8c:	orr	r5, sl, r5
   14d90:	ldr	r7, [sp, #156]	; 0x9c
   14d94:	ror	sl, r6, #19
   14d98:	eor	sl, sl, r6, ror #17
   14d9c:	add	r5, fp, r5
   14da0:	add	r5, r5, r8
   14da4:	add	r0, r0, r8
   14da8:	add	r9, r9, r7
   14dac:	eor	r8, sl, r6, lsr #10
   14db0:	ldr	fp, [pc, #312]	; 14ef0 <dcngettext@plt+0x3ed8>
   14db4:	add	r8, r8, r9
   14db8:	eor	sl, r2, r1
   14dbc:	and	sl, sl, r0
   14dc0:	add	fp, r8, fp
   14dc4:	ror	r9, r0, #11
   14dc8:	eor	sl, sl, r2
   14dcc:	add	r3, fp, r3
   14dd0:	eor	r9, r9, r0, ror #6
   14dd4:	orr	fp, r4, r5
   14dd8:	eor	r9, r9, r0, ror #25
   14ddc:	add	r3, sl, r3
   14de0:	ror	sl, r5, #13
   14de4:	add	r3, r3, r9
   14de8:	and	fp, fp, lr
   14dec:	and	r9, r4, r5
   14df0:	eor	sl, sl, r5, ror #2
   14df4:	eor	sl, sl, r5, ror #22
   14df8:	orr	fp, fp, r9
   14dfc:	ldr	r9, [sp, #80]	; 0x50
   14e00:	ldr	r7, [sp, #76]	; 0x4c
   14e04:	add	fp, sl, fp
   14e08:	add	fp, fp, r9
   14e0c:	ldr	r9, [sp, #116]	; 0x74
   14e10:	add	r7, r7, #64	; 0x40
   14e14:	str	r7, [sp, #76]	; 0x4c
   14e18:	cmp	r9, r7
   14e1c:	ldr	r7, [sp, #108]	; 0x6c
   14e20:	add	ip, ip, r3
   14e24:	add	r7, r7, r2
   14e28:	ldr	r2, [sp, #92]	; 0x5c
   14e2c:	str	r7, [sp, #108]	; 0x6c
   14e30:	add	lr, r2, lr
   14e34:	ldr	r2, [sp, #104]	; 0x68
   14e38:	str	lr, [sp, #92]	; 0x5c
   14e3c:	add	r1, r2, r1
   14e40:	str	r1, [sp, #104]	; 0x68
   14e44:	ldr	r2, [sp, #88]	; 0x58
   14e48:	add	r3, fp, r3
   14e4c:	add	r4, r2, r4
   14e50:	ldr	r2, [sp, #100]	; 0x64
   14e54:	str	r3, [sp, #80]	; 0x50
   14e58:	add	r0, r2, r0
   14e5c:	ldr	r2, [sp, #84]	; 0x54
   14e60:	str	r6, [sp, #176]	; 0xb0
   14e64:	add	r5, r2, r5
   14e68:	ldr	r2, [sp, #96]	; 0x60
   14e6c:	mov	r6, r3
   14e70:	add	ip, r2, ip
   14e74:	mov	r2, r3
   14e78:	ldr	r3, [sp, #112]	; 0x70
   14e7c:	str	r4, [sp, #88]	; 0x58
   14e80:	str	r0, [sp, #100]	; 0x64
   14e84:	str	ip, [sp, #96]	; 0x60
   14e88:	str	r6, [r3]
   14e8c:	mov	fp, ip
   14e90:	str	ip, [r3, #16]
   14e94:	mov	r6, r0
   14e98:	str	r0, [r3, #20]
   14e9c:	str	r4, [r3, #8]
   14ea0:	mov	sl, r4
   14ea4:	str	r5, [sp, #84]	; 0x54
   14ea8:	str	r8, [sp, #184]	; 0xb8
   14eac:	str	r5, [r3, #4]
   14eb0:	str	r1, [r3, #24]
   14eb4:	mov	ip, lr
   14eb8:	str	lr, [r3, #12]
   14ebc:	mov	r0, r7
   14ec0:	str	r7, [r3, #28]
   14ec4:	mov	r4, r1
   14ec8:	bne	12c84 <dcngettext@plt+0x1c6c>
   14ecc:	ldr	r3, [pc, #32]	; 14ef4 <dcngettext@plt+0x3edc>
   14ed0:	ldr	r2, [sp, #188]	; 0xbc
   14ed4:	ldr	r3, [r3]
   14ed8:	cmp	r2, r3
   14edc:	bne	14ee8 <dcngettext@plt+0x3ed0>
   14ee0:	add	sp, sp, #196	; 0xc4
   14ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ee8:	bl	10e38 <__stack_chk_fail@plt>
   14eec:	mrclt	3, 7, sl, cr9, cr7, {7}
   14ef0:			; <UNDEFINED> instruction: 0xc67178f2
   14ef4:	andeq	r9, r2, r8, lsl #30
   14ef8:	push	{r4, r5, r6, lr}
   14efc:	mov	r4, r0
   14f00:	ldr	r0, [r0, #40]	; 0x28
   14f04:	ldr	r3, [r4, #32]
   14f08:	cmp	r0, #56	; 0x38
   14f0c:	ldr	r6, [r4, #36]	; 0x24
   14f10:	movcc	r5, #64	; 0x40
   14f14:	movcs	r5, #128	; 0x80
   14f18:	movcc	r2, #56	; 0x38
   14f1c:	movcs	r2, #120	; 0x78
   14f20:	movcc	ip, #15
   14f24:	movcs	ip, #31
   14f28:	movcc	lr, #14
   14f2c:	movcs	lr, #30
   14f30:	adds	r3, r3, r0
   14f34:	addcs	r6, r6, #1
   14f38:	lsr	r1, r3, #29
   14f3c:	str	r3, [r4, #32]
   14f40:	add	lr, r4, lr, lsl #2
   14f44:	add	ip, r4, ip, lsl #2
   14f48:	orr	r1, r1, r6, lsl #3
   14f4c:	lsl	r3, r3, #3
   14f50:	strcs	r6, [r4, #36]	; 0x24
   14f54:	rev	r1, r1
   14f58:	add	r6, r4, #44	; 0x2c
   14f5c:	rev	r3, r3
   14f60:	str	r1, [lr, #44]	; 0x2c
   14f64:	sub	r2, r2, r0
   14f68:	ldr	r1, [pc, #28]	; 14f8c <dcngettext@plt+0x3f74>
   14f6c:	add	r0, r6, r0
   14f70:	str	r3, [ip, #44]	; 0x2c
   14f74:	bl	10dfc <memcpy@plt>
   14f78:	mov	r2, r4
   14f7c:	mov	r1, r5
   14f80:	mov	r0, r6
   14f84:	pop	{r4, r5, r6, lr}
   14f88:	b	12bd0 <dcngettext@plt+0x1bb8>
   14f8c:			; <UNDEFINED> instruction: 0x000194b4
   14f90:	push	{r4, r5, r6, lr}
   14f94:	mov	r5, r1
   14f98:	mov	r4, r0
   14f9c:	bl	14ef8 <dcngettext@plt+0x3ee0>
   14fa0:	mov	r1, r5
   14fa4:	mov	r0, r4
   14fa8:	pop	{r4, r5, r6, lr}
   14fac:	b	12b78 <dcngettext@plt+0x1b60>
   14fb0:	push	{r4, r5, r6, lr}
   14fb4:	mov	r5, r1
   14fb8:	mov	r4, r0
   14fbc:	bl	14ef8 <dcngettext@plt+0x3ee0>
   14fc0:	mov	r1, r5
   14fc4:	mov	r0, r4
   14fc8:	pop	{r4, r5, r6, lr}
   14fcc:	b	12ba4 <dcngettext@plt+0x1b8c>
   14fd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14fd4:	mov	r5, r2
   14fd8:	ldr	r7, [r2, #40]	; 0x28
   14fdc:	mov	r4, r0
   14fe0:	cmp	r7, #0
   14fe4:	mov	r6, r1
   14fe8:	bne	150cc <dcngettext@plt+0x40b4>
   14fec:	cmp	r6, #63	; 0x3f
   14ff0:	bls	150b8 <dcngettext@plt+0x40a0>
   14ff4:	tst	r4, #3
   14ff8:	beq	1509c <dcngettext@plt+0x4084>
   14ffc:	cmp	r6, #64	; 0x40
   15000:	add	r7, r5, #44	; 0x2c
   15004:	beq	1516c <dcngettext@plt+0x4154>
   15008:	sub	r9, r6, #65	; 0x41
   1500c:	lsr	r9, r9, #6
   15010:	add	r8, r9, #1
   15014:	add	r8, r4, r8, lsl #6
   15018:	add	lr, r4, #64	; 0x40
   1501c:	mov	r3, r7
   15020:	ldr	ip, [r4]
   15024:	ldr	r0, [r4, #4]
   15028:	ldr	r1, [r4, #8]
   1502c:	ldr	r2, [r4, #12]
   15030:	add	r4, r4, #16
   15034:	cmp	r4, lr
   15038:	str	ip, [r3]
   1503c:	str	r0, [r3, #4]
   15040:	str	r1, [r3, #8]
   15044:	str	r2, [r3, #12]
   15048:	add	r3, r3, #16
   1504c:	bne	15020 <dcngettext@plt+0x4008>
   15050:	mov	r2, r5
   15054:	mov	r1, #64	; 0x40
   15058:	mov	r0, r7
   1505c:	bl	12bd0 <dcngettext@plt+0x1bb8>
   15060:	cmp	r4, r8
   15064:	bne	15018 <dcngettext@plt+0x4000>
   15068:	rsb	r9, r9, r9, lsl #26
   1506c:	sub	r6, r6, #64	; 0x40
   15070:	add	r6, r6, r9, lsl #6
   15074:	ldr	r4, [r5, #40]	; 0x28
   15078:	mov	r1, r8
   1507c:	add	r0, r7, r4
   15080:	mov	r2, r6
   15084:	add	r4, r4, r6
   15088:	bl	10dfc <memcpy@plt>
   1508c:	cmp	r4, #63	; 0x3f
   15090:	bhi	1510c <dcngettext@plt+0x40f4>
   15094:	str	r4, [r5, #40]	; 0x28
   15098:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1509c:	bic	r7, r6, #63	; 0x3f
   150a0:	mov	r0, r4
   150a4:	mov	r1, r7
   150a8:	mov	r2, r5
   150ac:	bl	12bd0 <dcngettext@plt+0x1bb8>
   150b0:	and	r6, r6, #63	; 0x3f
   150b4:	add	r4, r4, r7
   150b8:	cmp	r6, #0
   150bc:	movne	r8, r4
   150c0:	addne	r7, r5, #44	; 0x2c
   150c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   150c8:	b	15074 <dcngettext@plt+0x405c>
   150cc:	rsb	r8, r7, #128	; 0x80
   150d0:	cmp	r8, r1
   150d4:	movcs	r8, r1
   150d8:	add	r9, r2, #44	; 0x2c
   150dc:	mov	r1, r4
   150e0:	mov	r2, r8
   150e4:	add	r0, r9, r7
   150e8:	bl	10dfc <memcpy@plt>
   150ec:	ldr	r1, [r5, #40]	; 0x28
   150f0:	add	r1, r8, r1
   150f4:	cmp	r1, #64	; 0x40
   150f8:	str	r1, [r5, #40]	; 0x28
   150fc:	bhi	15138 <dcngettext@plt+0x4120>
   15100:	add	r4, r4, r8
   15104:	sub	r6, r6, r8
   15108:	b	14fec <dcngettext@plt+0x3fd4>
   1510c:	sub	r4, r4, #64	; 0x40
   15110:	mov	r2, r5
   15114:	mov	r1, #64	; 0x40
   15118:	mov	r0, r7
   1511c:	bl	12bd0 <dcngettext@plt+0x1bb8>
   15120:	mov	r0, r7
   15124:	mov	r2, r4
   15128:	add	r1, r5, #108	; 0x6c
   1512c:	bl	10dfc <memcpy@plt>
   15130:	str	r4, [r5, #40]	; 0x28
   15134:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15138:	mov	r2, r5
   1513c:	mov	r0, r9
   15140:	bic	r1, r1, #63	; 0x3f
   15144:	bl	12bd0 <dcngettext@plt+0x1bb8>
   15148:	ldr	r2, [r5, #40]	; 0x28
   1514c:	add	r1, r7, r8
   15150:	and	r2, r2, #63	; 0x3f
   15154:	bic	r1, r1, #63	; 0x3f
   15158:	add	r1, r9, r1
   1515c:	mov	r0, r9
   15160:	str	r2, [r5, #40]	; 0x28
   15164:	bl	10dfc <memcpy@plt>
   15168:	b	15100 <dcngettext@plt+0x40e8>
   1516c:	mov	r8, r4
   15170:	b	15074 <dcngettext@plt+0x405c>
   15174:	push	{r4, r5, r6, lr}
   15178:	sub	sp, sp, #176	; 0xb0
   1517c:	ldr	r4, [pc, #144]	; 15214 <dcngettext@plt+0x41fc>
   15180:	ldr	r3, [pc, #144]	; 15218 <dcngettext@plt+0x4200>
   15184:	ldr	lr, [pc, #144]	; 1521c <dcngettext@plt+0x4204>
   15188:	ldr	ip, [r4]
   1518c:	mov	r5, r2
   15190:	str	ip, [sp, #172]	; 0xac
   15194:	ldr	ip, [pc, #132]	; 15220 <dcngettext@plt+0x4208>
   15198:	ldr	r2, [pc, #132]	; 15224 <dcngettext@plt+0x420c>
   1519c:	str	r3, [sp, #8]
   151a0:	ldr	r3, [pc, #128]	; 15228 <dcngettext@plt+0x4210>
   151a4:	str	lr, [sp]
   151a8:	str	ip, [sp, #12]
   151ac:	ldr	lr, [pc, #120]	; 1522c <dcngettext@plt+0x4214>
   151b0:	ldr	ip, [pc, #120]	; 15230 <dcngettext@plt+0x4218>
   151b4:	ldr	r6, [pc, #120]	; 15234 <dcngettext@plt+0x421c>
   151b8:	str	r2, [sp, #20]
   151bc:	str	r3, [sp, #24]
   151c0:	mov	r2, sp
   151c4:	mov	r3, #0
   151c8:	str	r3, [sp, #36]	; 0x24
   151cc:	str	r3, [sp, #32]
   151d0:	str	r3, [sp, #40]	; 0x28
   151d4:	str	lr, [sp, #16]
   151d8:	str	ip, [sp, #28]
   151dc:	str	r6, [sp, #4]
   151e0:	bl	14fd0 <dcngettext@plt+0x3fb8>
   151e4:	mov	r0, sp
   151e8:	bl	14ef8 <dcngettext@plt+0x3ee0>
   151ec:	mov	r1, r5
   151f0:	mov	r0, sp
   151f4:	bl	12b78 <dcngettext@plt+0x1b60>
   151f8:	ldr	r2, [sp, #172]	; 0xac
   151fc:	ldr	r3, [r4]
   15200:	cmp	r2, r3
   15204:	bne	15210 <dcngettext@plt+0x41f8>
   15208:	add	sp, sp, #176	; 0xb0
   1520c:	pop	{r4, r5, r6, pc}
   15210:	bl	10e38 <__stack_chk_fail@plt>
   15214:	andeq	r9, r2, r8, lsl #30
   15218:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   1521c:	bvs	28ebc0 <stdout@@GLIBC_2.4+0x264a5c>
   15220:	strbge	pc, [pc, #-1338]	; 14cee <dcngettext@plt+0x3cd6>	; <UNPREDICTABLE>
   15224:	blls	16f45c <stdout@@GLIBC_2.4+0x1452f8>
   15228:	svcne	0x0083d9ab
   1522c:	tstpl	lr, pc, ror r2
   15230:	blpl	ff84869c <stdout@@GLIBC_2.4+0xff81e538>
   15234:	bllt	1a00c50 <stdout@@GLIBC_2.4+0x19d6aec>
   15238:	push	{r4, r5, r6, lr}
   1523c:	sub	sp, sp, #176	; 0xb0
   15240:	ldr	r4, [pc, #144]	; 152d8 <dcngettext@plt+0x42c0>
   15244:	ldr	r3, [pc, #144]	; 152dc <dcngettext@plt+0x42c4>
   15248:	ldr	lr, [pc, #144]	; 152e0 <dcngettext@plt+0x42c8>
   1524c:	ldr	ip, [r4]
   15250:	mov	r5, r2
   15254:	str	ip, [sp, #172]	; 0xac
   15258:	ldr	ip, [pc, #132]	; 152e4 <dcngettext@plt+0x42cc>
   1525c:	ldr	r2, [pc, #132]	; 152e8 <dcngettext@plt+0x42d0>
   15260:	str	r3, [sp, #8]
   15264:	ldr	r3, [pc, #128]	; 152ec <dcngettext@plt+0x42d4>
   15268:	str	lr, [sp]
   1526c:	str	ip, [sp, #12]
   15270:	ldr	lr, [pc, #120]	; 152f0 <dcngettext@plt+0x42d8>
   15274:	ldr	ip, [pc, #120]	; 152f4 <dcngettext@plt+0x42dc>
   15278:	ldr	r6, [pc, #120]	; 152f8 <dcngettext@plt+0x42e0>
   1527c:	str	r2, [sp, #20]
   15280:	str	r3, [sp, #24]
   15284:	mov	r2, sp
   15288:	mov	r3, #0
   1528c:	str	r3, [sp, #36]	; 0x24
   15290:	str	r3, [sp, #32]
   15294:	str	r3, [sp, #40]	; 0x28
   15298:	str	lr, [sp, #16]
   1529c:	str	ip, [sp, #28]
   152a0:	str	r6, [sp, #4]
   152a4:	bl	14fd0 <dcngettext@plt+0x3fb8>
   152a8:	mov	r0, sp
   152ac:	bl	14ef8 <dcngettext@plt+0x3ee0>
   152b0:	mov	r1, r5
   152b4:	mov	r0, sp
   152b8:	bl	12ba4 <dcngettext@plt+0x1b8c>
   152bc:	ldr	r2, [sp, #172]	; 0xac
   152c0:	ldr	r3, [r4]
   152c4:	cmp	r2, r3
   152c8:	bne	152d4 <dcngettext@plt+0x42bc>
   152cc:	add	sp, sp, #176	; 0xb0
   152d0:	pop	{r4, r5, r6, pc}
   152d4:	bl	10e38 <__stack_chk_fail@plt>
   152d8:	andeq	r9, r2, r8, lsl #30
   152dc:	rsbscc	sp, r0, r7, lsl sp
   152e0:	ldrdgt	r9, [r5, -r8]
   152e4:			; <UNDEFINED> instruction: 0xf70e5939
   152e8:	ldmdavs	r8, {r0, r4, r8, sl, ip}^
   152ec:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   152f0:			; <UNDEFINED> instruction: 0xffc00b31
   152f4:	cdplt	15, 15, cr4, cr10, cr4, {5}
   152f8:	ldrbtcc	sp, [ip], -r7, lsl #10
   152fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   15300:	mov	r9, r1
   15304:	ldr	r7, [pc, #236]	; 153f8 <dcngettext@plt+0x43e0>
   15308:	sub	sp, sp, #180	; 0xb4
   1530c:	mov	r5, r0
   15310:	ldr	r1, [r7]
   15314:	ldr	r0, [pc, #224]	; 153fc <dcngettext@plt+0x43e4>
   15318:	mov	r4, r2
   1531c:	mov	r8, r3
   15320:	str	r1, [sp, #172]	; 0xac
   15324:	bl	10eb0 <malloc@plt>
   15328:	subs	r6, r0, #0
   1532c:	moveq	r0, #1
   15330:	beq	15398 <dcngettext@plt+0x4380>
   15334:	mov	r0, sp
   15338:	blx	r4
   1533c:	mov	r4, #0
   15340:	b	1536c <dcngettext@plt+0x4354>
   15344:	rsb	r2, r4, #32768	; 0x8000
   15348:	add	r0, r6, r4
   1534c:	mov	r3, r5
   15350:	mov	r1, #1
   15354:	bl	10fe8 <fread_unlocked@plt>
   15358:	add	r4, r4, r0
   1535c:	cmp	r4, #32768	; 0x8000
   15360:	beq	153c4 <dcngettext@plt+0x43ac>
   15364:	cmp	r0, #0
   15368:	beq	153d8 <dcngettext@plt+0x43c0>
   1536c:	ldr	r3, [r5]
   15370:	tst	r3, #16
   15374:	beq	15344 <dcngettext@plt+0x432c>
   15378:	cmp	r4, #0
   1537c:	bne	153b0 <dcngettext@plt+0x4398>
   15380:	mov	r1, r9
   15384:	mov	r0, sp
   15388:	blx	r8
   1538c:	mov	r0, r6
   15390:	bl	10de4 <free@plt>
   15394:	mov	r0, #0
   15398:	ldr	r2, [sp, #172]	; 0xac
   1539c:	ldr	r3, [r7]
   153a0:	cmp	r2, r3
   153a4:	bne	153f4 <dcngettext@plt+0x43dc>
   153a8:	add	sp, sp, #180	; 0xb4
   153ac:	pop	{r4, r5, r6, r7, r8, r9, pc}
   153b0:	mov	r1, r4
   153b4:	mov	r2, sp
   153b8:	mov	r0, r6
   153bc:	bl	14fd0 <dcngettext@plt+0x3fb8>
   153c0:	b	15380 <dcngettext@plt+0x4368>
   153c4:	mov	r1, r4
   153c8:	mov	r2, sp
   153cc:	mov	r0, r6
   153d0:	bl	12bd0 <dcngettext@plt+0x1bb8>
   153d4:	b	1533c <dcngettext@plt+0x4324>
   153d8:	ldr	r3, [r5]
   153dc:	tst	r3, #32
   153e0:	beq	15378 <dcngettext@plt+0x4360>
   153e4:	mov	r0, r6
   153e8:	bl	10de4 <free@plt>
   153ec:	mov	r0, #1
   153f0:	b	15398 <dcngettext@plt+0x4380>
   153f4:	bl	10e38 <__stack_chk_fail@plt>
   153f8:	andeq	r9, r2, r8, lsl #30
   153fc:	andeq	r8, r0, r8, asr #32
   15400:	ldr	r3, [pc, #4]	; 1540c <dcngettext@plt+0x43f4>
   15404:	ldr	r2, [pc, #4]	; 15410 <dcngettext@plt+0x43f8>
   15408:	b	152fc <dcngettext@plt+0x42e4>
   1540c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   15410:	andeq	r2, r1, r8, lsl #21
   15414:	ldr	r3, [pc, #4]	; 15420 <dcngettext@plt+0x4408>
   15418:	ldr	r2, [pc, #4]	; 15424 <dcngettext@plt+0x440c>
   1541c:	b	152fc <dcngettext@plt+0x42e4>
   15420:			; <UNDEFINED> instruction: 0x00014fb0
   15424:	andeq	r2, r1, r0, lsl #22
   15428:	b	10dcc <posix_fadvise64@plt>
   1542c:	cmp	r0, #0
   15430:	bxeq	lr
   15434:	push	{r4, lr}
   15438:	sub	sp, sp, #16
   1543c:	mov	r4, r1
   15440:	bl	10f64 <fileno@plt>
   15444:	mov	r2, #0
   15448:	mov	r3, #0
   1544c:	str	r4, [sp, #8]
   15450:	strd	r2, [sp]
   15454:	bl	10dcc <posix_fadvise64@plt>
   15458:	add	sp, sp, #16
   1545c:	pop	{r4, pc}
   15460:	push	{r4, r5, r6, lr}
   15464:	mov	r5, r1
   15468:	bl	10fd0 <fopen64@plt>
   1546c:	subs	r4, r0, #0
   15470:	beq	15480 <dcngettext@plt+0x4468>
   15474:	bl	10f64 <fileno@plt>
   15478:	cmp	r0, #2
   1547c:	bls	15488 <dcngettext@plt+0x4470>
   15480:	mov	r0, r4
   15484:	pop	{r4, r5, r6, pc}
   15488:	bl	17774 <dcngettext@plt+0x675c>
   1548c:	subs	r6, r0, #0
   15490:	blt	154d8 <dcngettext@plt+0x44c0>
   15494:	mov	r0, r4
   15498:	bl	17f60 <dcngettext@plt+0x6f48>
   1549c:	cmp	r0, #0
   154a0:	bne	154b8 <dcngettext@plt+0x44a0>
   154a4:	mov	r1, r5
   154a8:	mov	r0, r6
   154ac:	bl	10d84 <fdopen@plt>
   154b0:	subs	r4, r0, #0
   154b4:	bne	15480 <dcngettext@plt+0x4468>
   154b8:	bl	10f28 <__errno_location@plt>
   154bc:	mov	r4, #0
   154c0:	mov	r5, r0
   154c4:	mov	r0, r6
   154c8:	ldr	r6, [r5]
   154cc:	bl	1100c <close@plt>
   154d0:	str	r6, [r5]
   154d4:	b	15480 <dcngettext@plt+0x4468>
   154d8:	bl	10f28 <__errno_location@plt>
   154dc:	mov	r5, r0
   154e0:	mov	r0, r4
   154e4:	ldr	r6, [r5]
   154e8:	mov	r4, #0
   154ec:	bl	17f60 <dcngettext@plt+0x6f48>
   154f0:	str	r6, [r5]
   154f4:	b	15480 <dcngettext@plt+0x4468>
   154f8:	push	{r4, r5, r6, lr}
   154fc:	subs	r4, r0, #0
   15500:	beq	15574 <dcngettext@plt+0x455c>
   15504:	mov	r1, #47	; 0x2f
   15508:	bl	10fb8 <strrchr@plt>
   1550c:	subs	r5, r0, #0
   15510:	beq	15560 <dcngettext@plt+0x4548>
   15514:	add	r6, r5, #1
   15518:	sub	r3, r6, r4
   1551c:	cmp	r3, #6
   15520:	ble	15560 <dcngettext@plt+0x4548>
   15524:	mov	r2, #7
   15528:	ldr	r1, [pc, #96]	; 15590 <dcngettext@plt+0x4578>
   1552c:	sub	r0, r5, #6
   15530:	bl	10ff4 <strncmp@plt>
   15534:	cmp	r0, #0
   15538:	bne	15560 <dcngettext@plt+0x4548>
   1553c:	mov	r2, #3
   15540:	ldr	r1, [pc, #76]	; 15594 <dcngettext@plt+0x457c>
   15544:	mov	r0, r6
   15548:	bl	10ff4 <strncmp@plt>
   1554c:	cmp	r0, #0
   15550:	movne	r4, r6
   15554:	ldreq	r3, [pc, #60]	; 15598 <dcngettext@plt+0x4580>
   15558:	addeq	r4, r5, #4
   1555c:	streq	r4, [r3]
   15560:	ldr	r2, [pc, #52]	; 1559c <dcngettext@plt+0x4584>
   15564:	ldr	r3, [pc, #52]	; 155a0 <dcngettext@plt+0x4588>
   15568:	str	r4, [r2]
   1556c:	str	r4, [r3]
   15570:	pop	{r4, r5, r6, pc}
   15574:	ldr	r3, [pc, #40]	; 155a4 <dcngettext@plt+0x458c>
   15578:	mov	r2, #55	; 0x37
   1557c:	mov	r1, #1
   15580:	ldr	r3, [r3]
   15584:	ldr	r0, [pc, #28]	; 155a8 <dcngettext@plt+0x4590>
   15588:	bl	10e68 <fwrite@plt>
   1558c:	bl	11000 <abort@plt>
   15590:	andeq	r9, r1, ip, lsr #10
   15594:	andeq	r9, r1, r4, lsr r5
   15598:	andeq	sl, r2, r8, asr #2
   1559c:	andeq	sl, r2, r4, lsl #3
   155a0:	andeq	sl, r2, ip, asr #2
   155a4:	andeq	sl, r2, r8, asr r1
   155a8:	strdeq	r9, [r1], -r4
   155ac:	push	{r4, lr}
   155b0:	mov	r2, #48	; 0x30
   155b4:	mov	r4, r1
   155b8:	mov	r1, #0
   155bc:	bl	10f4c <memset@plt>
   155c0:	cmp	r4, #10
   155c4:	beq	155d0 <dcngettext@plt+0x45b8>
   155c8:	str	r4, [r0]
   155cc:	pop	{r4, pc}
   155d0:	bl	11000 <abort@plt>
   155d4:	push	{r4, r5, r6, lr}
   155d8:	mov	r2, #5
   155dc:	mov	r5, r0
   155e0:	mov	r6, r1
   155e4:	mov	r1, r0
   155e8:	mov	r0, #0
   155ec:	bl	10e2c <dcgettext@plt>
   155f0:	cmp	r5, r0
   155f4:	mov	r4, r0
   155f8:	beq	15604 <dcngettext@plt+0x45ec>
   155fc:	mov	r0, r4
   15600:	pop	{r4, r5, r6, pc}
   15604:	bl	1838c <dcngettext@plt+0x7374>
   15608:	ldrb	r3, [r0]
   1560c:	bic	r3, r3, #32
   15610:	cmp	r3, #85	; 0x55
   15614:	bne	15674 <dcngettext@plt+0x465c>
   15618:	ldrb	r3, [r0, #1]
   1561c:	bic	r3, r3, #32
   15620:	cmp	r3, #84	; 0x54
   15624:	bne	156ec <dcngettext@plt+0x46d4>
   15628:	ldrb	r3, [r0, #2]
   1562c:	bic	r3, r3, #32
   15630:	cmp	r3, #70	; 0x46
   15634:	bne	156ec <dcngettext@plt+0x46d4>
   15638:	ldrb	r3, [r0, #3]
   1563c:	cmp	r3, #45	; 0x2d
   15640:	bne	156ec <dcngettext@plt+0x46d4>
   15644:	ldrb	r3, [r0, #4]
   15648:	cmp	r3, #56	; 0x38
   1564c:	bne	156ec <dcngettext@plt+0x46d4>
   15650:	ldrb	r3, [r0, #5]
   15654:	cmp	r3, #0
   15658:	bne	156ec <dcngettext@plt+0x46d4>
   1565c:	ldrb	r2, [r4]
   15660:	ldr	r3, [pc, #156]	; 15704 <dcngettext@plt+0x46ec>
   15664:	ldr	r4, [pc, #156]	; 15708 <dcngettext@plt+0x46f0>
   15668:	cmp	r2, #96	; 0x60
   1566c:	movne	r4, r3
   15670:	b	155fc <dcngettext@plt+0x45e4>
   15674:	cmp	r3, #71	; 0x47
   15678:	bne	156ec <dcngettext@plt+0x46d4>
   1567c:	ldrb	r3, [r0, #1]
   15680:	bic	r3, r3, #32
   15684:	cmp	r3, #66	; 0x42
   15688:	bne	156ec <dcngettext@plt+0x46d4>
   1568c:	ldrb	r3, [r0, #2]
   15690:	cmp	r3, #49	; 0x31
   15694:	bne	156ec <dcngettext@plt+0x46d4>
   15698:	ldrb	r3, [r0, #3]
   1569c:	cmp	r3, #56	; 0x38
   156a0:	bne	156ec <dcngettext@plt+0x46d4>
   156a4:	ldrb	r3, [r0, #4]
   156a8:	cmp	r3, #48	; 0x30
   156ac:	bne	156ec <dcngettext@plt+0x46d4>
   156b0:	ldrb	r3, [r0, #5]
   156b4:	cmp	r3, #51	; 0x33
   156b8:	bne	156ec <dcngettext@plt+0x46d4>
   156bc:	ldrb	r3, [r0, #6]
   156c0:	cmp	r3, #48	; 0x30
   156c4:	bne	156ec <dcngettext@plt+0x46d4>
   156c8:	ldrb	r3, [r0, #7]
   156cc:	cmp	r3, #0
   156d0:	bne	156ec <dcngettext@plt+0x46d4>
   156d4:	ldrb	r2, [r4]
   156d8:	ldr	r3, [pc, #44]	; 1570c <dcngettext@plt+0x46f4>
   156dc:	ldr	r4, [pc, #44]	; 15710 <dcngettext@plt+0x46f8>
   156e0:	cmp	r2, #96	; 0x60
   156e4:	movne	r4, r3
   156e8:	b	155fc <dcngettext@plt+0x45e4>
   156ec:	ldr	r3, [pc, #32]	; 15714 <dcngettext@plt+0x46fc>
   156f0:	ldr	r4, [pc, #32]	; 15718 <dcngettext@plt+0x4700>
   156f4:	cmp	r6, #9
   156f8:	movne	r4, r3
   156fc:	mov	r0, r4
   15700:	pop	{r4, r5, r6, pc}
   15704:	muleq	r1, r0, r5
   15708:	muleq	r1, ip, r5
   1570c:	muleq	r1, r4, r5
   15710:	muleq	r1, r8, r5
   15714:	andeq	r9, r1, r0, lsr #11
   15718:	andeq	r9, r1, ip, lsl #11
   1571c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15720:	sub	sp, sp, #124	; 0x7c
   15724:	ldr	ip, [pc, #3576]	; 16524 <dcngettext@plt+0x550c>
   15728:	str	r3, [sp, #24]
   1572c:	ldr	r3, [sp, #168]	; 0xa8
   15730:	ldr	ip, [ip]
   15734:	str	r3, [sp, #56]	; 0x38
   15738:	ldr	r3, [sp, #172]	; 0xac
   1573c:	ldr	r8, [sp, #160]	; 0xa0
   15740:	str	r3, [sp, #80]	; 0x50
   15744:	ldr	r3, [sp, #176]	; 0xb0
   15748:	mov	fp, r0
   1574c:	str	r3, [sp, #76]	; 0x4c
   15750:	mov	sl, r1
   15754:	str	r2, [sp, #36]	; 0x24
   15758:	str	ip, [sp, #116]	; 0x74
   1575c:	bl	10e80 <__ctype_get_mb_cur_max@plt>
   15760:	ldr	r3, [sp, #164]	; 0xa4
   15764:	ands	r4, r3, #2
   15768:	movne	r3, #1
   1576c:	moveq	r3, #0
   15770:	str	r3, [sp, #32]
   15774:	str	r0, [sp, #64]	; 0x40
   15778:	cmp	r8, #10
   1577c:	ldrls	pc, [pc, r8, lsl #2]
   15780:	b	16f30 <dcngettext@plt+0x5f18>
   15784:	andeq	r5, r1, r8, ror fp
   15788:	andeq	r5, r1, r0, lsl ip
   1578c:	andeq	r6, r1, r0, lsl r2
   15790:	andeq	r5, r1, r0, lsr ip
   15794:	andeq	r5, r1, r4, ror #21
   15798:	andeq	r5, r1, ip, lsr #22
   1579c:	andeq	r5, r1, r8, lsr #23
   157a0:	andeq	r5, r1, r0, ror #23
   157a4:			; <UNDEFINED> instruction: 0x000157b0
   157a8:			; <UNDEFINED> instruction: 0x000157b0
   157ac:			; <UNDEFINED> instruction: 0x000157b0
   157b0:	cmp	r8, #10
   157b4:	beq	157d8 <dcngettext@plt+0x47c0>
   157b8:	mov	r1, r8
   157bc:	ldr	r0, [pc, #3428]	; 16528 <dcngettext@plt+0x5510>
   157c0:	bl	155d4 <dcngettext@plt+0x45bc>
   157c4:	mov	r1, r8
   157c8:	str	r0, [sp, #80]	; 0x50
   157cc:	ldr	r0, [pc, #3420]	; 16530 <dcngettext@plt+0x5518>
   157d0:	bl	155d4 <dcngettext@plt+0x45bc>
   157d4:	str	r0, [sp, #76]	; 0x4c
   157d8:	cmp	r4, #0
   157dc:	movne	r4, #0
   157e0:	beq	16bf0 <dcngettext@plt+0x5bd8>
   157e4:	ldr	r7, [sp, #76]	; 0x4c
   157e8:	mov	r5, #0
   157ec:	mov	r6, #1
   157f0:	mov	r0, r7
   157f4:	str	r6, [sp, #40]	; 0x28
   157f8:	str	r5, [sp, #68]	; 0x44
   157fc:	bl	10f10 <strlen@plt>
   15800:	str	r6, [sp, #28]
   15804:	str	r5, [sp, #44]	; 0x2c
   15808:	str	r5, [sp, #72]	; 0x48
   1580c:	str	r7, [sp, #60]	; 0x3c
   15810:	str	r0, [sp, #52]	; 0x34
   15814:	str	r8, [sp, #160]	; 0xa0
   15818:	mov	r8, fp
   1581c:	ldr	fp, [sp, #160]	; 0xa0
   15820:	mov	r9, #0
   15824:	ldr	r3, [sp, #24]
   15828:	cmn	r3, #1
   1582c:	beq	15d94 <dcngettext@plt+0x4d7c>
   15830:	ldr	r3, [sp, #24]
   15834:	subs	r6, r3, r9
   15838:	movne	r6, #1
   1583c:	cmp	r6, #0
   15840:	beq	15dac <dcngettext@plt+0x4d94>
   15844:	ldr	r7, [sp, #28]
   15848:	ldr	r0, [sp, #36]	; 0x24
   1584c:	cmp	fp, #2
   15850:	moveq	r7, #0
   15854:	andne	r7, r7, #1
   15858:	add	r3, r0, r9
   1585c:	cmp	r7, #0
   15860:	str	r3, [sp, #48]	; 0x30
   15864:	beq	16250 <dcngettext@plt+0x5238>
   15868:	ldr	r2, [sp, #52]	; 0x34
   1586c:	cmp	r2, #0
   15870:	beq	16534 <dcngettext@plt+0x551c>
   15874:	ldr	r1, [sp, #24]
   15878:	cmp	r2, #1
   1587c:	mov	r3, r2
   15880:	movls	r3, #0
   15884:	movhi	r3, #1
   15888:	cmn	r1, #1
   1588c:	movne	r3, #0
   15890:	cmp	r3, #0
   15894:	add	r5, r9, r2
   15898:	beq	158a4 <dcngettext@plt+0x488c>
   1589c:	bl	10f10 <strlen@plt>
   158a0:	str	r0, [sp, #24]
   158a4:	ldr	r3, [sp, #24]
   158a8:	cmp	r5, r3
   158ac:	bhi	16534 <dcngettext@plt+0x551c>
   158b0:	ldr	r2, [sp, #52]	; 0x34
   158b4:	ldr	r1, [sp, #60]	; 0x3c
   158b8:	ldr	r0, [sp, #48]	; 0x30
   158bc:	bl	10e20 <memcmp@plt>
   158c0:	cmp	r0, #0
   158c4:	bne	16534 <dcngettext@plt+0x551c>
   158c8:	ldr	r3, [sp, #32]
   158cc:	cmp	r3, #0
   158d0:	bne	16df0 <dcngettext@plt+0x5dd8>
   158d4:	ldr	r3, [sp, #48]	; 0x30
   158d8:	ldrb	r5, [r3]
   158dc:	cmp	r5, #126	; 0x7e
   158e0:	ldrls	pc, [pc, r5, lsl #2]
   158e4:	b	161b4 <dcngettext@plt+0x519c>
   158e8:	andeq	r6, r1, r0, lsr #1
   158ec:			; <UNDEFINED> instruction: 0x000161b4
   158f0:			; <UNDEFINED> instruction: 0x000161b4
   158f4:			; <UNDEFINED> instruction: 0x000161b4
   158f8:			; <UNDEFINED> instruction: 0x000161b4
   158fc:			; <UNDEFINED> instruction: 0x000161b4
   15900:			; <UNDEFINED> instruction: 0x000161b4
   15904:	andeq	r6, r1, ip, ror #2
   15908:	andeq	r6, r1, ip, asr r1
   1590c:	andeq	r6, r1, ip, asr r0
   15910:	andeq	r6, r1, r4, lsr #32
   15914:	andeq	r6, r1, ip, ror r0
   15918:	andeq	r6, r1, r4, rrx
   1591c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   15920:			; <UNDEFINED> instruction: 0x000161b4
   15924:			; <UNDEFINED> instruction: 0x000161b4
   15928:			; <UNDEFINED> instruction: 0x000161b4
   1592c:			; <UNDEFINED> instruction: 0x000161b4
   15930:			; <UNDEFINED> instruction: 0x000161b4
   15934:			; <UNDEFINED> instruction: 0x000161b4
   15938:			; <UNDEFINED> instruction: 0x000161b4
   1593c:			; <UNDEFINED> instruction: 0x000161b4
   15940:			; <UNDEFINED> instruction: 0x000161b4
   15944:			; <UNDEFINED> instruction: 0x000161b4
   15948:			; <UNDEFINED> instruction: 0x000161b4
   1594c:			; <UNDEFINED> instruction: 0x000161b4
   15950:			; <UNDEFINED> instruction: 0x000161b4
   15954:			; <UNDEFINED> instruction: 0x000161b4
   15958:			; <UNDEFINED> instruction: 0x000161b4
   1595c:			; <UNDEFINED> instruction: 0x000161b4
   15960:			; <UNDEFINED> instruction: 0x000161b4
   15964:			; <UNDEFINED> instruction: 0x000161b4
   15968:	andeq	r6, r1, r4, ror r1
   1596c:	andeq	r6, r1, r8, lsl #1
   15970:	andeq	r6, r1, r8, lsl #1
   15974:	andeq	r6, r1, ip, lsl #3
   15978:	andeq	r6, r1, r8, lsl #1
   1597c:	andeq	r6, r1, r8, lsr #3
   15980:	andeq	r6, r1, r8, lsl #1
   15984:	andeq	r5, r1, r8, asr #29
   15988:	andeq	r6, r1, r8, lsl #1
   1598c:	andeq	r6, r1, r8, lsl #1
   15990:	andeq	r6, r1, r8, lsl #1
   15994:	andeq	r6, r1, r8, lsr #3
   15998:	andeq	r6, r1, r8, lsr #3
   1599c:	andeq	r6, r1, r8, lsr #3
   159a0:	andeq	r6, r1, r8, lsr #3
   159a4:	andeq	r6, r1, r8, lsr #3
   159a8:	andeq	r6, r1, r8, lsr #3
   159ac:	andeq	r6, r1, r8, lsr #3
   159b0:	andeq	r6, r1, r8, lsr #3
   159b4:	andeq	r6, r1, r8, lsr #3
   159b8:	andeq	r6, r1, r8, lsr #3
   159bc:	andeq	r6, r1, r8, lsr #3
   159c0:	andeq	r6, r1, r8, lsr #3
   159c4:	andeq	r6, r1, r8, lsr #3
   159c8:	andeq	r6, r1, r8, lsr #3
   159cc:	andeq	r6, r1, r8, lsr #3
   159d0:	andeq	r6, r1, r8, lsr #3
   159d4:	andeq	r6, r1, r8, lsl #1
   159d8:	andeq	r6, r1, r8, lsl #1
   159dc:	andeq	r6, r1, r8, lsl #1
   159e0:	andeq	r6, r1, r8, lsl #1
   159e4:	muleq	r1, ip, lr
   159e8:			; <UNDEFINED> instruction: 0x000161b4
   159ec:	andeq	r6, r1, r8, lsr #3
   159f0:	andeq	r6, r1, r8, lsr #3
   159f4:	andeq	r6, r1, r8, lsr #3
   159f8:	andeq	r6, r1, r8, lsr #3
   159fc:	andeq	r6, r1, r8, lsr #3
   15a00:	andeq	r6, r1, r8, lsr #3
   15a04:	andeq	r6, r1, r8, lsr #3
   15a08:	andeq	r6, r1, r8, lsr #3
   15a0c:	andeq	r6, r1, r8, lsr #3
   15a10:	andeq	r6, r1, r8, lsr #3
   15a14:	andeq	r6, r1, r8, lsr #3
   15a18:	andeq	r6, r1, r8, lsr #3
   15a1c:	andeq	r6, r1, r8, lsr #3
   15a20:	andeq	r6, r1, r8, lsr #3
   15a24:	andeq	r6, r1, r8, lsr #3
   15a28:	andeq	r6, r1, r8, lsr #3
   15a2c:	andeq	r6, r1, r8, lsr #3
   15a30:	andeq	r6, r1, r8, lsr #3
   15a34:	andeq	r6, r1, r8, lsr #3
   15a38:	andeq	r6, r1, r8, lsr #3
   15a3c:	andeq	r6, r1, r8, lsr #3
   15a40:	andeq	r6, r1, r8, lsr #3
   15a44:	andeq	r6, r1, r8, lsr #3
   15a48:	andeq	r6, r1, r8, lsr #3
   15a4c:	andeq	r6, r1, r8, lsr #3
   15a50:	andeq	r6, r1, r8, lsr #3
   15a54:	andeq	r6, r1, r8, lsl #1
   15a58:	andeq	r5, r1, r4, asr lr
   15a5c:	andeq	r6, r1, r8, lsr #3
   15a60:	andeq	r6, r1, r8, lsl #1
   15a64:	andeq	r6, r1, r8, lsr #3
   15a68:	andeq	r6, r1, r8, lsl #1
   15a6c:	andeq	r6, r1, r8, lsr #3
   15a70:	andeq	r6, r1, r8, lsr #3
   15a74:	andeq	r6, r1, r8, lsr #3
   15a78:	andeq	r6, r1, r8, lsr #3
   15a7c:	andeq	r6, r1, r8, lsr #3
   15a80:	andeq	r6, r1, r8, lsr #3
   15a84:	andeq	r6, r1, r8, lsr #3
   15a88:	andeq	r6, r1, r8, lsr #3
   15a8c:	andeq	r6, r1, r8, lsr #3
   15a90:	andeq	r6, r1, r8, lsr #3
   15a94:	andeq	r6, r1, r8, lsr #3
   15a98:	andeq	r6, r1, r8, lsr #3
   15a9c:	andeq	r6, r1, r8, lsr #3
   15aa0:	andeq	r6, r1, r8, lsr #3
   15aa4:	andeq	r6, r1, r8, lsr #3
   15aa8:	andeq	r6, r1, r8, lsr #3
   15aac:	andeq	r6, r1, r8, lsr #3
   15ab0:	andeq	r6, r1, r8, lsr #3
   15ab4:	andeq	r6, r1, r8, lsr #3
   15ab8:	andeq	r6, r1, r8, lsr #3
   15abc:	andeq	r6, r1, r8, lsr #3
   15ac0:	andeq	r6, r1, r8, lsr #3
   15ac4:	andeq	r6, r1, r8, lsr #3
   15ac8:	andeq	r6, r1, r8, lsr #3
   15acc:	andeq	r6, r1, r8, lsr #3
   15ad0:	andeq	r6, r1, r8, lsr #3
   15ad4:	andeq	r5, r1, ip, ror #24
   15ad8:	andeq	r6, r1, r8, lsl #1
   15adc:	andeq	r5, r1, ip, ror #24
   15ae0:	andeq	r6, r1, ip, lsl #3
   15ae4:	cmp	r4, #0
   15ae8:	moveq	r3, #1
   15aec:	streq	r3, [sp, #28]
   15af0:	beq	1621c <dcngettext@plt+0x5204>
   15af4:	mov	r3, #0
   15af8:	mov	r4, r3
   15afc:	mov	r2, #1
   15b00:	str	r2, [sp, #40]	; 0x28
   15b04:	str	r3, [sp, #68]	; 0x44
   15b08:	str	r2, [sp, #32]
   15b0c:	str	r2, [sp, #52]	; 0x34
   15b10:	ldr	r3, [pc, #2584]	; 16530 <dcngettext@plt+0x5518>
   15b14:	str	r4, [sp, #44]	; 0x2c
   15b18:	str	r4, [sp, #72]	; 0x48
   15b1c:	str	r4, [sp, #28]
   15b20:	str	r3, [sp, #60]	; 0x3c
   15b24:	mov	r8, #2
   15b28:	b	15814 <dcngettext@plt+0x47fc>
   15b2c:	cmp	r4, #0
   15b30:	bne	16dbc <dcngettext@plt+0x5da4>
   15b34:	cmp	sl, #0
   15b38:	beq	16b7c <dcngettext@plt+0x5b64>
   15b3c:	mov	r3, #34	; 0x22
   15b40:	strb	r3, [fp]
   15b44:	ldr	r3, [pc, #2528]	; 1652c <dcngettext@plt+0x5514>
   15b48:	mov	r1, r4
   15b4c:	mov	r2, #1
   15b50:	str	r4, [sp, #68]	; 0x44
   15b54:	str	r2, [sp, #40]	; 0x28
   15b58:	mov	r4, r2
   15b5c:	str	r1, [sp, #44]	; 0x2c
   15b60:	str	r1, [sp, #72]	; 0x48
   15b64:	str	r1, [sp, #32]
   15b68:	str	r2, [sp, #28]
   15b6c:	str	r2, [sp, #52]	; 0x34
   15b70:	str	r3, [sp, #60]	; 0x3c
   15b74:	b	15814 <dcngettext@plt+0x47fc>
   15b78:	mov	r3, #0
   15b7c:	str	r3, [sp, #68]	; 0x44
   15b80:	str	r3, [sp, #44]	; 0x2c
   15b84:	str	r3, [sp, #32]
   15b88:	str	r3, [sp, #28]
   15b8c:	str	r3, [sp, #60]	; 0x3c
   15b90:	mov	r3, #1
   15b94:	str	r8, [sp, #72]	; 0x48
   15b98:	str	r8, [sp, #52]	; 0x34
   15b9c:	mov	r4, r8
   15ba0:	str	r3, [sp, #40]	; 0x28
   15ba4:	b	15814 <dcngettext@plt+0x47fc>
   15ba8:	mov	r3, #1
   15bac:	str	r3, [sp, #40]	; 0x28
   15bb0:	str	r3, [sp, #32]
   15bb4:	str	r3, [sp, #28]
   15bb8:	str	r3, [sp, #52]	; 0x34
   15bbc:	ldr	r3, [pc, #2408]	; 1652c <dcngettext@plt+0x5514>
   15bc0:	mov	r2, #0
   15bc4:	mov	r4, r2
   15bc8:	str	r2, [sp, #68]	; 0x44
   15bcc:	str	r2, [sp, #44]	; 0x2c
   15bd0:	str	r2, [sp, #72]	; 0x48
   15bd4:	str	r3, [sp, #60]	; 0x3c
   15bd8:	mov	r8, #5
   15bdc:	b	15814 <dcngettext@plt+0x47fc>
   15be0:	mov	r3, #0
   15be4:	mov	r2, #1
   15be8:	str	r2, [sp, #40]	; 0x28
   15bec:	mov	r4, r3
   15bf0:	str	r3, [sp, #68]	; 0x44
   15bf4:	str	r2, [sp, #28]
   15bf8:	str	r3, [sp, #44]	; 0x2c
   15bfc:	str	r3, [sp, #72]	; 0x48
   15c00:	str	r3, [sp, #32]
   15c04:	str	r3, [sp, #52]	; 0x34
   15c08:	str	r3, [sp, #60]	; 0x3c
   15c0c:	b	15814 <dcngettext@plt+0x47fc>
   15c10:	mov	r2, #1
   15c14:	mov	r3, #0
   15c18:	str	r2, [sp, #40]	; 0x28
   15c1c:	mov	r4, r3
   15c20:	str	r3, [sp, #68]	; 0x44
   15c24:	str	r8, [sp, #52]	; 0x34
   15c28:	str	r2, [sp, #32]
   15c2c:	b	15b10 <dcngettext@plt+0x4af8>
   15c30:	mov	r3, #1
   15c34:	str	r3, [sp, #40]	; 0x28
   15c38:	str	r3, [sp, #32]
   15c3c:	str	r3, [sp, #28]
   15c40:	str	r3, [sp, #52]	; 0x34
   15c44:	ldr	r3, [pc, #2276]	; 16530 <dcngettext@plt+0x5518>
   15c48:	mov	r2, #0
   15c4c:	mov	r4, r2
   15c50:	str	r2, [sp, #68]	; 0x44
   15c54:	str	r2, [sp, #44]	; 0x2c
   15c58:	str	r2, [sp, #72]	; 0x48
   15c5c:	str	r3, [sp, #60]	; 0x3c
   15c60:	mov	r8, #2
   15c64:	b	15814 <dcngettext@plt+0x47fc>
   15c68:	mov	r7, #0
   15c6c:	ldr	r3, [sp, #24]
   15c70:	cmn	r3, #1
   15c74:	beq	167b0 <dcngettext@plt+0x5798>
   15c78:	ldr	r3, [sp, #24]
   15c7c:	subs	r3, r3, #1
   15c80:	movne	r3, #1
   15c84:	cmp	r3, #0
   15c88:	sub	r2, fp, #2
   15c8c:	clz	r2, r2
   15c90:	lsr	r2, r2, #5
   15c94:	bne	15e90 <dcngettext@plt+0x4e78>
   15c98:	cmp	r9, #0
   15c9c:	bne	15e90 <dcngettext@plt+0x4e78>
   15ca0:	ldr	r3, [sp, #32]
   15ca4:	tst	r3, r2
   15ca8:	bne	15fb0 <dcngettext@plt+0x4f98>
   15cac:	ldr	r3, [sp, #28]
   15cb0:	eor	r3, r3, #1
   15cb4:	orr	r3, r2, r3
   15cb8:	ldr	r2, [sp, #32]
   15cbc:	eor	r3, r3, #1
   15cc0:	orrs	r3, r2, r3
   15cc4:	beq	15cf4 <dcngettext@plt+0x4cdc>
   15cc8:	mov	r3, #0
   15ccc:	ldr	r1, [sp, #56]	; 0x38
   15cd0:	cmp	r1, #0
   15cd4:	beq	15cf4 <dcngettext@plt+0x4cdc>
   15cd8:	lsr	r2, r5, #5
   15cdc:	and	r0, r5, #31
   15ce0:	uxtb	r2, r2
   15ce4:	ldr	r1, [r1, r2, lsl #2]
   15ce8:	lsr	r2, r1, r0
   15cec:	tst	r2, #1
   15cf0:	bne	15cfc <dcngettext@plt+0x4ce4>
   15cf4:	cmp	r7, #0
   15cf8:	beq	15f4c <dcngettext@plt+0x4f34>
   15cfc:	sub	r2, fp, #2
   15d00:	clz	r2, r2
   15d04:	lsr	r2, r2, #5
   15d08:	ldr	r3, [sp, #32]
   15d0c:	cmp	r3, #0
   15d10:	bne	1603c <dcngettext@plt+0x5024>
   15d14:	ldr	r3, [sp, #44]	; 0x2c
   15d18:	eor	r3, r3, #1
   15d1c:	ands	r3, r2, r3
   15d20:	beq	15d58 <dcngettext@plt+0x4d40>
   15d24:	cmp	sl, r4
   15d28:	movhi	r2, #39	; 0x27
   15d2c:	strbhi	r2, [r8, r4]
   15d30:	add	r2, r4, #1
   15d34:	cmp	r2, sl
   15d38:	movcc	r1, #36	; 0x24
   15d3c:	strbcc	r1, [r8, r2]
   15d40:	add	r2, r4, #2
   15d44:	cmp	r2, sl
   15d48:	add	r4, r4, #3
   15d4c:	movcc	r1, #39	; 0x27
   15d50:	strbcc	r1, [r8, r2]
   15d54:	str	r3, [sp, #44]	; 0x2c
   15d58:	cmp	r4, sl
   15d5c:	movcc	r3, #92	; 0x5c
   15d60:	strbcc	r3, [r8, r4]
   15d64:	add	r9, r9, #1
   15d68:	add	r4, r4, #1
   15d6c:	cmp	r4, sl
   15d70:	ldr	r3, [sp, #40]	; 0x28
   15d74:	strbcc	r5, [r8, r4]
   15d78:	cmp	r6, #0
   15d7c:	moveq	r3, #0
   15d80:	str	r3, [sp, #40]	; 0x28
   15d84:	ldr	r3, [sp, #24]
   15d88:	add	r4, r4, #1
   15d8c:	cmn	r3, #1
   15d90:	bne	15830 <dcngettext@plt+0x4818>
   15d94:	ldr	r3, [sp, #36]	; 0x24
   15d98:	ldrb	r6, [r3, r9]
   15d9c:	adds	r6, r6, #0
   15da0:	movne	r6, #1
   15da4:	cmp	r6, #0
   15da8:	bne	15844 <dcngettext@plt+0x482c>
   15dac:	str	fp, [sp, #160]	; 0xa0
   15db0:	mov	fp, r8
   15db4:	ldr	r8, [sp, #160]	; 0xa0
   15db8:	ldr	r1, [sp, #32]
   15dbc:	cmp	r4, #0
   15dc0:	sub	r2, r8, #2
   15dc4:	clz	r2, r2
   15dc8:	lsr	r2, r2, #5
   15dcc:	andeq	r3, r2, r1
   15dd0:	movne	r3, #0
   15dd4:	cmp	r3, #0
   15dd8:	bne	16ec4 <dcngettext@plt+0x5eac>
   15ddc:	eor	r3, r1, #1
   15de0:	ands	r2, r2, r3
   15de4:	beq	16e00 <dcngettext@plt+0x5de8>
   15de8:	ldr	r3, [sp, #68]	; 0x44
   15dec:	cmp	r3, #0
   15df0:	beq	16e04 <dcngettext@plt+0x5dec>
   15df4:	ldr	r3, [sp, #40]	; 0x28
   15df8:	cmp	r3, #0
   15dfc:	bne	16e80 <dcngettext@plt+0x5e68>
   15e00:	ldr	r3, [sp, #72]	; 0x48
   15e04:	adds	r3, r3, #0
   15e08:	movne	r3, #1
   15e0c:	cmp	sl, #0
   15e10:	movne	r3, #0
   15e14:	cmp	r3, #0
   15e18:	ldreq	r2, [sp, #68]	; 0x44
   15e1c:	beq	16e04 <dcngettext@plt+0x5dec>
   15e20:	ldr	sl, [sp, #72]	; 0x48
   15e24:	str	r3, [sp, #68]	; 0x44
   15e28:	ldr	r3, [pc, #1792]	; 16530 <dcngettext@plt+0x5518>
   15e2c:	mov	r2, #39	; 0x27
   15e30:	mov	r4, #1
   15e34:	str	r3, [sp, #60]	; 0x3c
   15e38:	mov	r3, #0
   15e3c:	strb	r2, [fp]
   15e40:	str	r4, [sp, #52]	; 0x34
   15e44:	mov	r8, #2
   15e48:	str	r3, [sp, #32]
   15e4c:	b	15814 <dcngettext@plt+0x47fc>
   15e50:	mov	r7, #0
   15e54:	cmp	fp, #2
   15e58:	beq	16790 <dcngettext@plt+0x5778>
   15e5c:	ldr	r3, [sp, #52]	; 0x34
   15e60:	ldr	r2, [sp, #28]
   15e64:	ldr	r1, [sp, #32]
   15e68:	cmp	r3, #0
   15e6c:	andne	r2, r2, r1
   15e70:	moveq	r2, #0
   15e74:	cmp	r2, #0
   15e78:	moveq	r5, #92	; 0x5c
   15e7c:	moveq	r3, r5
   15e80:	bne	1679c <dcngettext@plt+0x5784>
   15e84:	ldr	r1, [sp, #28]
   15e88:	cmp	r1, #0
   15e8c:	bne	16f0c <dcngettext@plt+0x5ef4>
   15e90:	mov	r6, #0
   15e94:	b	15cac <dcngettext@plt+0x4c94>
   15e98:	mov	r7, #0
   15e9c:	cmp	fp, #2
   15ea0:	beq	16800 <dcngettext@plt+0x57e8>
   15ea4:	cmp	fp, #5
   15ea8:	beq	167c4 <dcngettext@plt+0x57ac>
   15eac:	sub	r2, fp, #2
   15eb0:	mov	r6, #0
   15eb4:	clz	r2, r2
   15eb8:	mov	r5, #63	; 0x3f
   15ebc:	lsr	r2, r2, #5
   15ec0:	b	15cac <dcngettext@plt+0x4c94>
   15ec4:	mov	r7, #0
   15ec8:	cmp	fp, #2
   15ecc:	strne	r6, [sp, #68]	; 0x44
   15ed0:	movne	r2, #0
   15ed4:	movne	r5, #39	; 0x27
   15ed8:	bne	15cac <dcngettext@plt+0x4c94>
   15edc:	ldr	r3, [sp, #32]
   15ee0:	cmp	r3, #0
   15ee4:	bne	16be0 <dcngettext@plt+0x5bc8>
   15ee8:	cmp	sl, #0
   15eec:	ldr	r3, [sp, #72]	; 0x48
   15ef0:	clz	r3, r3
   15ef4:	lsr	r3, r3, #5
   15ef8:	moveq	r3, #0
   15efc:	cmp	r3, #0
   15f00:	bne	16b14 <dcngettext@plt+0x5afc>
   15f04:	cmp	sl, r4
   15f08:	movhi	r3, #39	; 0x27
   15f0c:	strbhi	r3, [r8, r4]
   15f10:	add	r3, r4, #1
   15f14:	cmp	sl, r3
   15f18:	movhi	r2, #92	; 0x5c
   15f1c:	strbhi	r2, [r8, r3]
   15f20:	add	r3, r4, #2
   15f24:	cmp	sl, r3
   15f28:	movhi	r2, #39	; 0x27
   15f2c:	strbhi	r2, [r8, r3]
   15f30:	mov	r3, #0
   15f34:	cmp	r7, #0
   15f38:	add	r4, r4, #3
   15f3c:	str	r3, [sp, #44]	; 0x2c
   15f40:	str	r6, [sp, #68]	; 0x44
   15f44:	mov	r5, #39	; 0x27
   15f48:	bne	15cfc <dcngettext@plt+0x4ce4>
   15f4c:	ldr	r2, [sp, #44]	; 0x2c
   15f50:	eor	r3, r3, #1
   15f54:	and	r3, r3, r2
   15f58:	add	r9, r9, #1
   15f5c:	uxtb	r3, r3
   15f60:	cmp	r3, #0
   15f64:	beq	15d6c <dcngettext@plt+0x4d54>
   15f68:	cmp	sl, r4
   15f6c:	movhi	r3, #39	; 0x27
   15f70:	strbhi	r3, [r8, r4]
   15f74:	add	r3, r4, #1
   15f78:	cmp	sl, r3
   15f7c:	movhi	r2, #39	; 0x27
   15f80:	strbhi	r2, [r8, r3]
   15f84:	mov	r3, #0
   15f88:	add	r4, r4, #2
   15f8c:	str	r3, [sp, #44]	; 0x2c
   15f90:	b	15d6c <dcngettext@plt+0x4d54>
   15f94:	mov	r3, #114	; 0x72
   15f98:	ldr	r1, [sp, #32]
   15f9c:	sub	r2, fp, #2
   15fa0:	clz	r2, r2
   15fa4:	lsr	r2, r2, #5
   15fa8:	tst	r2, r1
   15fac:	beq	15e84 <dcngettext@plt+0x4e6c>
   15fb0:	mov	fp, r8
   15fb4:	mov	r8, #2
   15fb8:	ldr	r3, [sp, #28]
   15fbc:	cmp	r3, #0
   15fc0:	movne	r8, #4
   15fc4:	ldr	r3, [sp, #164]	; 0xa4
   15fc8:	mov	ip, #0
   15fcc:	bic	r3, r3, #2
   15fd0:	str	r3, [sp, #4]
   15fd4:	ldr	r3, [sp, #76]	; 0x4c
   15fd8:	str	r8, [sp]
   15fdc:	str	r3, [sp, #16]
   15fe0:	ldr	r3, [sp, #80]	; 0x50
   15fe4:	ldr	r2, [sp, #36]	; 0x24
   15fe8:	str	r3, [sp, #12]
   15fec:	mov	r1, sl
   15ff0:	ldr	r3, [sp, #24]
   15ff4:	mov	r0, fp
   15ff8:	str	ip, [sp, #8]
   15ffc:	bl	1571c <dcngettext@plt+0x4704>
   16000:	mov	r4, r0
   16004:	ldr	r3, [pc, #1304]	; 16524 <dcngettext@plt+0x550c>
   16008:	ldr	r2, [sp, #116]	; 0x74
   1600c:	mov	r0, r4
   16010:	ldr	r3, [r3]
   16014:	cmp	r2, r3
   16018:	bne	16f08 <dcngettext@plt+0x5ef0>
   1601c:	add	sp, sp, #124	; 0x7c
   16020:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16024:	mov	r5, #110	; 0x6e
   16028:	ldr	r3, [sp, #32]
   1602c:	mov	r2, #0
   16030:	cmp	r3, #0
   16034:	mov	r6, r2
   16038:	beq	15d14 <dcngettext@plt+0x4cfc>
   1603c:	str	fp, [sp, #160]	; 0xa0
   16040:	mov	fp, r8
   16044:	ldr	r8, [sp, #160]	; 0xa0
   16048:	mov	r3, r2
   1604c:	ldr	r2, [sp, #28]
   16050:	and	r2, r2, r3
   16054:	str	r2, [sp, #28]
   16058:	b	15fb8 <dcngettext@plt+0x4fa0>
   1605c:	mov	r5, #116	; 0x74
   16060:	b	16028 <dcngettext@plt+0x5010>
   16064:	mov	r5, #102	; 0x66
   16068:	ldr	r3, [sp, #32]
   1606c:	cmp	r3, #0
   16070:	bne	16c1c <dcngettext@plt+0x5c04>
   16074:	mov	r6, #0
   16078:	b	15d58 <dcngettext@plt+0x4d40>
   1607c:	mov	r5, #118	; 0x76
   16080:	b	16068 <dcngettext@plt+0x5050>
   16084:	mov	r7, #0
   16088:	mov	r6, #0
   1608c:	b	15cc8 <dcngettext@plt+0x4cb0>
   16090:	ldr	r3, [sp, #32]
   16094:	cmp	r3, #0
   16098:	bne	16e60 <dcngettext@plt+0x5e48>
   1609c:	mov	r7, r3
   160a0:	ldr	r3, [sp, #44]	; 0x2c
   160a4:	sub	r2, fp, #2
   160a8:	eor	r3, r3, #1
   160ac:	clz	r2, r2
   160b0:	lsr	r2, r2, #5
   160b4:	ands	r3, r2, r3
   160b8:	beq	16b00 <dcngettext@plt+0x5ae8>
   160bc:	cmp	sl, r4
   160c0:	movhi	r1, #39	; 0x27
   160c4:	strbhi	r1, [r8, r4]
   160c8:	add	r1, r4, #1
   160cc:	cmp	sl, r1
   160d0:	movhi	r0, #36	; 0x24
   160d4:	strbhi	r0, [r8, r1]
   160d8:	add	r1, r4, #2
   160dc:	cmp	sl, r1
   160e0:	movhi	r0, #39	; 0x27
   160e4:	strbhi	r0, [r8, r1]
   160e8:	add	r1, r4, #3
   160ec:	cmp	sl, r1
   160f0:	bls	16b60 <dcngettext@plt+0x5b48>
   160f4:	mov	r4, r1
   160f8:	mov	r1, #92	; 0x5c
   160fc:	strb	r1, [r8, r4]
   16100:	mov	r1, r4
   16104:	str	r3, [sp, #44]	; 0x2c
   16108:	cmp	fp, #2
   1610c:	add	r4, r4, #1
   16110:	beq	16ba8 <dcngettext@plt+0x5b90>
   16114:	ldr	r0, [sp, #24]
   16118:	add	r3, r9, #1
   1611c:	cmp	r3, r0
   16120:	bcs	16138 <dcngettext@plt+0x5120>
   16124:	ldr	r0, [sp, #36]	; 0x24
   16128:	ldrb	r3, [r0, r3]
   1612c:	sub	r3, r3, #48	; 0x30
   16130:	cmp	r3, #9
   16134:	bls	16bb8 <dcngettext@plt+0x5ba0>
   16138:	mov	r5, #48	; 0x30
   1613c:	ldr	r3, [sp, #28]
   16140:	eor	r3, r3, #1
   16144:	orrs	r2, r2, r3
   16148:	mov	r3, r6
   1614c:	moveq	r6, r2
   16150:	beq	15ccc <dcngettext@plt+0x4cb4>
   16154:	mov	r6, #0
   16158:	b	15cf4 <dcngettext@plt+0x4cdc>
   1615c:	mov	r2, #0
   16160:	mov	r6, r2
   16164:	mov	r5, #98	; 0x62
   16168:	b	15d14 <dcngettext@plt+0x4cfc>
   1616c:	mov	r5, #97	; 0x61
   16170:	b	16074 <dcngettext@plt+0x505c>
   16174:	mov	r3, r7
   16178:	mov	r6, r7
   1617c:	mov	r2, #0
   16180:	mov	r7, r3
   16184:	mov	r5, #32
   16188:	b	15cac <dcngettext@plt+0x4c94>
   1618c:	cmp	r9, #0
   16190:	mov	r3, r7
   16194:	bne	1675c <dcngettext@plt+0x5744>
   16198:	mov	r6, r7
   1619c:	mov	r2, r9
   161a0:	mov	r7, r3
   161a4:	b	15cac <dcngettext@plt+0x4c94>
   161a8:	mov	r6, r7
   161ac:	b	15cc8 <dcngettext@plt+0x4cb0>
   161b0:	mov	r7, #0
   161b4:	ldr	r3, [sp, #64]	; 0x40
   161b8:	cmp	r3, #1
   161bc:	bne	16818 <dcngettext@plt+0x5800>
   161c0:	bl	10ef8 <__ctype_b_loc@plt>
   161c4:	ldr	r2, [sp, #64]	; 0x40
   161c8:	sxth	r3, r5
   161cc:	mov	ip, r2
   161d0:	lsl	r3, r3, #1
   161d4:	ldr	r2, [r0]
   161d8:	ldrh	r3, [r2, r3]
   161dc:	and	r3, r3, #16384	; 0x4000
   161e0:	cmp	r3, #0
   161e4:	ldr	r3, [sp, #28]
   161e8:	movne	r6, #1
   161ec:	moveq	r6, #0
   161f0:	movne	r2, #0
   161f4:	andeq	r2, r3, #1
   161f8:	cmp	r2, #0
   161fc:	bne	16b28 <dcngettext@plt+0x5b10>
   16200:	sub	r2, fp, #2
   16204:	clz	r2, r2
   16208:	lsr	r2, r2, #5
   1620c:	b	15cac <dcngettext@plt+0x4c94>
   16210:	cmp	r4, #0
   16214:	bne	16ed4 <dcngettext@plt+0x5ebc>
   16218:	str	r4, [sp, #28]
   1621c:	cmp	sl, #0
   16220:	bne	16f18 <dcngettext@plt+0x5f00>
   16224:	ldr	r3, [pc, #772]	; 16530 <dcngettext@plt+0x5518>
   16228:	mov	r4, #1
   1622c:	str	r4, [sp, #40]	; 0x28
   16230:	str	r3, [sp, #60]	; 0x3c
   16234:	str	r4, [sp, #52]	; 0x34
   16238:	str	sl, [sp, #72]	; 0x48
   1623c:	str	sl, [sp, #68]	; 0x44
   16240:	str	sl, [sp, #44]	; 0x2c
   16244:	str	sl, [sp, #32]
   16248:	mov	r8, #2
   1624c:	b	15814 <dcngettext@plt+0x47fc>
   16250:	ldr	r3, [sp, #36]	; 0x24
   16254:	ldrb	r5, [r3, r9]
   16258:	cmp	r5, #126	; 0x7e
   1625c:	ldrls	pc, [pc, r5, lsl #2]
   16260:	b	161b4 <dcngettext@plt+0x519c>
   16264:	muleq	r1, r8, r4
   16268:			; <UNDEFINED> instruction: 0x000161b4
   1626c:			; <UNDEFINED> instruction: 0x000161b4
   16270:			; <UNDEFINED> instruction: 0x000161b4
   16274:			; <UNDEFINED> instruction: 0x000161b4
   16278:			; <UNDEFINED> instruction: 0x000161b4
   1627c:			; <UNDEFINED> instruction: 0x000161b4
   16280:	andeq	r6, r1, r4, lsl #9
   16284:	andeq	r6, r1, r0, ror r4
   16288:	andeq	r6, r1, r8, ror #8
   1628c:	andeq	r6, r1, r0, ror #8
   16290:	andeq	r6, r1, r0, lsl r5
   16294:	strdeq	r6, [r1], -ip
   16298:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1629c:			; <UNDEFINED> instruction: 0x000161b4
   162a0:			; <UNDEFINED> instruction: 0x000161b4
   162a4:			; <UNDEFINED> instruction: 0x000161b4
   162a8:			; <UNDEFINED> instruction: 0x000161b4
   162ac:			; <UNDEFINED> instruction: 0x000161b4
   162b0:			; <UNDEFINED> instruction: 0x000161b4
   162b4:			; <UNDEFINED> instruction: 0x000161b4
   162b8:			; <UNDEFINED> instruction: 0x000161b4
   162bc:			; <UNDEFINED> instruction: 0x000161b4
   162c0:			; <UNDEFINED> instruction: 0x000161b4
   162c4:			; <UNDEFINED> instruction: 0x000161b4
   162c8:			; <UNDEFINED> instruction: 0x000161b4
   162cc:			; <UNDEFINED> instruction: 0x000161b4
   162d0:			; <UNDEFINED> instruction: 0x000161b4
   162d4:			; <UNDEFINED> instruction: 0x000161b4
   162d8:			; <UNDEFINED> instruction: 0x000161b4
   162dc:			; <UNDEFINED> instruction: 0x000161b4
   162e0:			; <UNDEFINED> instruction: 0x000161b4
   162e4:	andeq	r6, r1, ip, ror #9
   162e8:	ldrdeq	r6, [r1], -r8
   162ec:	ldrdeq	r6, [r1], -r8
   162f0:	andeq	r6, r1, r8, asr #9
   162f4:	ldrdeq	r6, [r1], -r8
   162f8:	andeq	r6, r1, r0, lsl #4
   162fc:	ldrdeq	r6, [r1], -r8
   16300:	andeq	r5, r1, r8, asr #29
   16304:	ldrdeq	r6, [r1], -r8
   16308:	ldrdeq	r6, [r1], -r8
   1630c:	ldrdeq	r6, [r1], -r8
   16310:	andeq	r6, r1, r0, lsl #4
   16314:	andeq	r6, r1, r0, lsl #4
   16318:	andeq	r6, r1, r0, lsl #4
   1631c:	andeq	r6, r1, r0, lsl #4
   16320:	andeq	r6, r1, r0, lsl #4
   16324:	andeq	r6, r1, r0, lsl #4
   16328:	andeq	r6, r1, r0, lsl #4
   1632c:	andeq	r6, r1, r0, lsl #4
   16330:	andeq	r6, r1, r0, lsl #4
   16334:	andeq	r6, r1, r0, lsl #4
   16338:	andeq	r6, r1, r0, lsl #4
   1633c:	andeq	r6, r1, r0, lsl #4
   16340:	andeq	r6, r1, r0, lsl #4
   16344:	andeq	r6, r1, r0, lsl #4
   16348:	andeq	r6, r1, r0, lsl #4
   1634c:	andeq	r6, r1, r0, lsl #4
   16350:	ldrdeq	r6, [r1], -r8
   16354:	ldrdeq	r6, [r1], -r8
   16358:	ldrdeq	r6, [r1], -r8
   1635c:	ldrdeq	r6, [r1], -r8
   16360:	muleq	r1, ip, lr
   16364:			; <UNDEFINED> instruction: 0x000161b4
   16368:	andeq	r6, r1, r0, lsl #4
   1636c:	andeq	r6, r1, r0, lsl #4
   16370:	andeq	r6, r1, r0, lsl #4
   16374:	andeq	r6, r1, r0, lsl #4
   16378:	andeq	r6, r1, r0, lsl #4
   1637c:	andeq	r6, r1, r0, lsl #4
   16380:	andeq	r6, r1, r0, lsl #4
   16384:	andeq	r6, r1, r0, lsl #4
   16388:	andeq	r6, r1, r0, lsl #4
   1638c:	andeq	r6, r1, r0, lsl #4
   16390:	andeq	r6, r1, r0, lsl #4
   16394:	andeq	r6, r1, r0, lsl #4
   16398:	andeq	r6, r1, r0, lsl #4
   1639c:	andeq	r6, r1, r0, lsl #4
   163a0:	andeq	r6, r1, r0, lsl #4
   163a4:	andeq	r6, r1, r0, lsl #4
   163a8:	andeq	r6, r1, r0, lsl #4
   163ac:	andeq	r6, r1, r0, lsl #4
   163b0:	andeq	r6, r1, r0, lsl #4
   163b4:	andeq	r6, r1, r0, lsl #4
   163b8:	andeq	r6, r1, r0, lsl #4
   163bc:	andeq	r6, r1, r0, lsl #4
   163c0:	andeq	r6, r1, r0, lsl #4
   163c4:	andeq	r6, r1, r0, lsl #4
   163c8:	andeq	r6, r1, r0, lsl #4
   163cc:	andeq	r6, r1, r0, lsl #4
   163d0:	ldrdeq	r6, [r1], -r8
   163d4:	andeq	r5, r1, r4, asr lr
   163d8:	andeq	r6, r1, r0, lsl #4
   163dc:	ldrdeq	r6, [r1], -r8
   163e0:	andeq	r6, r1, r0, lsl #4
   163e4:	ldrdeq	r6, [r1], -r8
   163e8:	andeq	r6, r1, r0, lsl #4
   163ec:	andeq	r6, r1, r0, lsl #4
   163f0:	andeq	r6, r1, r0, lsl #4
   163f4:	andeq	r6, r1, r0, lsl #4
   163f8:	andeq	r6, r1, r0, lsl #4
   163fc:	andeq	r6, r1, r0, lsl #4
   16400:	andeq	r6, r1, r0, lsl #4
   16404:	andeq	r6, r1, r0, lsl #4
   16408:	andeq	r6, r1, r0, lsl #4
   1640c:	andeq	r6, r1, r0, lsl #4
   16410:	andeq	r6, r1, r0, lsl #4
   16414:	andeq	r6, r1, r0, lsl #4
   16418:	andeq	r6, r1, r0, lsl #4
   1641c:	andeq	r6, r1, r0, lsl #4
   16420:	andeq	r6, r1, r0, lsl #4
   16424:	andeq	r6, r1, r0, lsl #4
   16428:	andeq	r6, r1, r0, lsl #4
   1642c:	andeq	r6, r1, r0, lsl #4
   16430:	andeq	r6, r1, r0, lsl #4
   16434:	andeq	r6, r1, r0, lsl #4
   16438:	andeq	r6, r1, r0, lsl #4
   1643c:	andeq	r6, r1, r0, lsl #4
   16440:	andeq	r6, r1, r0, lsl #4
   16444:	andeq	r6, r1, r0, lsl #4
   16448:	andeq	r6, r1, r0, lsl #4
   1644c:	andeq	r6, r1, r0, lsl #4
   16450:	andeq	r5, r1, ip, ror #24
   16454:	ldrdeq	r6, [r1], -r8
   16458:	andeq	r5, r1, ip, ror #24
   1645c:	andeq	r6, r1, r8, asr #9
   16460:	mov	r3, #110	; 0x6e
   16464:	b	15f98 <dcngettext@plt+0x4f80>
   16468:	mov	r3, #116	; 0x74
   1646c:	b	15f98 <dcngettext@plt+0x4f80>
   16470:	sub	r2, fp, #2
   16474:	mov	r3, #98	; 0x62
   16478:	clz	r2, r2
   1647c:	lsr	r2, r2, #5
   16480:	b	15e84 <dcngettext@plt+0x4e6c>
   16484:	sub	r2, fp, #2
   16488:	mov	r3, #97	; 0x61
   1648c:	clz	r2, r2
   16490:	lsr	r2, r2, #5
   16494:	b	15e84 <dcngettext@plt+0x4e6c>
   16498:	ldr	r3, [sp, #28]
   1649c:	cmp	r3, #0
   164a0:	bne	16090 <dcngettext@plt+0x5078>
   164a4:	ldr	r3, [sp, #164]	; 0xa4
   164a8:	tst	r3, #1
   164ac:	bne	16b20 <dcngettext@plt+0x5b08>
   164b0:	ldr	r6, [sp, #28]
   164b4:	sub	r2, fp, #2
   164b8:	mov	r7, r6
   164bc:	clz	r2, r2
   164c0:	lsr	r2, r2, #5
   164c4:	b	15cac <dcngettext@plt+0x4c94>
   164c8:	sub	r2, fp, #2
   164cc:	clz	r2, r2
   164d0:	lsr	r2, r2, #5
   164d4:	b	15c98 <dcngettext@plt+0x4c80>
   164d8:	sub	r2, fp, #2
   164dc:	mov	r6, #0
   164e0:	clz	r2, r2
   164e4:	lsr	r2, r2, #5
   164e8:	b	15ca0 <dcngettext@plt+0x4c88>
   164ec:	sub	r2, fp, #2
   164f0:	clz	r2, r2
   164f4:	lsr	r2, r2, #5
   164f8:	b	15ca0 <dcngettext@plt+0x4c88>
   164fc:	sub	r2, fp, #2
   16500:	mov	r3, #102	; 0x66
   16504:	clz	r2, r2
   16508:	lsr	r2, r2, #5
   1650c:	b	15e84 <dcngettext@plt+0x4e6c>
   16510:	sub	r2, fp, #2
   16514:	mov	r3, #118	; 0x76
   16518:	clz	r2, r2
   1651c:	lsr	r2, r2, #5
   16520:	b	15e84 <dcngettext@plt+0x4e6c>
   16524:	andeq	r9, r2, r8, lsl #30
   16528:	andeq	r9, r1, r4, lsr #11
   1652c:	andeq	r9, r1, ip, lsl #11
   16530:	andeq	r9, r1, r0, lsr #11
   16534:	ldr	r3, [sp, #48]	; 0x30
   16538:	ldrb	r5, [r3]
   1653c:	cmp	r5, #126	; 0x7e
   16540:	ldrls	pc, [pc, r5, lsl #2]
   16544:	b	161b0 <dcngettext@plt+0x5198>
   16548:	muleq	r1, r0, r0
   1654c:			; <UNDEFINED> instruction: 0x000161b0
   16550:			; <UNDEFINED> instruction: 0x000161b0
   16554:			; <UNDEFINED> instruction: 0x000161b0
   16558:			; <UNDEFINED> instruction: 0x000161b0
   1655c:			; <UNDEFINED> instruction: 0x000161b0
   16560:			; <UNDEFINED> instruction: 0x000161b0
   16564:	andeq	r6, r1, r8, lsl #15
   16568:	andeq	r6, r1, r0, lsl #15
   1656c:	andeq	r6, r1, ip, asr r0
   16570:	andeq	r6, r1, r4, lsr #32
   16574:	andeq	r6, r1, ip, ror r0
   16578:	andeq	r6, r1, r4, rrx
   1657c:	andeq	r6, r1, r4, ror r7
   16580:			; <UNDEFINED> instruction: 0x000161b0
   16584:			; <UNDEFINED> instruction: 0x000161b0
   16588:			; <UNDEFINED> instruction: 0x000161b0
   1658c:			; <UNDEFINED> instruction: 0x000161b0
   16590:			; <UNDEFINED> instruction: 0x000161b0
   16594:			; <UNDEFINED> instruction: 0x000161b0
   16598:			; <UNDEFINED> instruction: 0x000161b0
   1659c:			; <UNDEFINED> instruction: 0x000161b0
   165a0:			; <UNDEFINED> instruction: 0x000161b0
   165a4:			; <UNDEFINED> instruction: 0x000161b0
   165a8:			; <UNDEFINED> instruction: 0x000161b0
   165ac:			; <UNDEFINED> instruction: 0x000161b0
   165b0:			; <UNDEFINED> instruction: 0x000161b0
   165b4:			; <UNDEFINED> instruction: 0x000161b0
   165b8:			; <UNDEFINED> instruction: 0x000161b0
   165bc:			; <UNDEFINED> instruction: 0x000161b0
   165c0:			; <UNDEFINED> instruction: 0x000161b0
   165c4:			; <UNDEFINED> instruction: 0x000161b0
   165c8:	andeq	r6, r1, ip, ror #14
   165cc:	andeq	r6, r1, r4, lsl #1
   165d0:	andeq	r6, r1, r4, lsl #1
   165d4:	andeq	r6, r1, r0, asr r7
   165d8:	andeq	r6, r1, r4, lsl #1
   165dc:	andeq	r6, r1, r4, asr #14
   165e0:	andeq	r6, r1, r4, lsl #1
   165e4:	andeq	r5, r1, r4, asr #29
   165e8:	andeq	r6, r1, r4, lsl #1
   165ec:	andeq	r6, r1, r4, lsl #1
   165f0:	andeq	r6, r1, r4, lsl #1
   165f4:	andeq	r6, r1, r4, asr #14
   165f8:	andeq	r6, r1, r4, asr #14
   165fc:	andeq	r6, r1, r4, asr #14
   16600:	andeq	r6, r1, r4, asr #14
   16604:	andeq	r6, r1, r4, asr #14
   16608:	andeq	r6, r1, r4, asr #14
   1660c:	andeq	r6, r1, r4, asr #14
   16610:	andeq	r6, r1, r4, asr #14
   16614:	andeq	r6, r1, r4, asr #14
   16618:	andeq	r6, r1, r4, asr #14
   1661c:	andeq	r6, r1, r4, asr #14
   16620:	andeq	r6, r1, r4, asr #14
   16624:	andeq	r6, r1, r4, asr #14
   16628:	andeq	r6, r1, r4, asr #14
   1662c:	andeq	r6, r1, r4, asr #14
   16630:	andeq	r6, r1, r4, asr #14
   16634:	andeq	r6, r1, r4, lsl #1
   16638:	andeq	r6, r1, r4, lsl #1
   1663c:	andeq	r6, r1, r4, lsl #1
   16640:	andeq	r6, r1, r4, lsl #1
   16644:	muleq	r1, r8, lr
   16648:			; <UNDEFINED> instruction: 0x000161b0
   1664c:	andeq	r6, r1, r4, asr #14
   16650:	andeq	r6, r1, r4, asr #14
   16654:	andeq	r6, r1, r4, asr #14
   16658:	andeq	r6, r1, r4, asr #14
   1665c:	andeq	r6, r1, r4, asr #14
   16660:	andeq	r6, r1, r4, asr #14
   16664:	andeq	r6, r1, r4, asr #14
   16668:	andeq	r6, r1, r4, asr #14
   1666c:	andeq	r6, r1, r4, asr #14
   16670:	andeq	r6, r1, r4, asr #14
   16674:	andeq	r6, r1, r4, asr #14
   16678:	andeq	r6, r1, r4, asr #14
   1667c:	andeq	r6, r1, r4, asr #14
   16680:	andeq	r6, r1, r4, asr #14
   16684:	andeq	r6, r1, r4, asr #14
   16688:	andeq	r6, r1, r4, asr #14
   1668c:	andeq	r6, r1, r4, asr #14
   16690:	andeq	r6, r1, r4, asr #14
   16694:	andeq	r6, r1, r4, asr #14
   16698:	andeq	r6, r1, r4, asr #14
   1669c:	andeq	r6, r1, r4, asr #14
   166a0:	andeq	r6, r1, r4, asr #14
   166a4:	andeq	r6, r1, r4, asr #14
   166a8:	andeq	r6, r1, r4, asr #14
   166ac:	andeq	r6, r1, r4, asr #14
   166b0:	andeq	r6, r1, r4, asr #14
   166b4:	andeq	r6, r1, r4, lsl #1
   166b8:	andeq	r5, r1, r0, asr lr
   166bc:	andeq	r6, r1, r4, asr #14
   166c0:	andeq	r6, r1, r4, lsl #1
   166c4:	andeq	r6, r1, r4, asr #14
   166c8:	andeq	r6, r1, r4, lsl #1
   166cc:	andeq	r6, r1, r4, asr #14
   166d0:	andeq	r6, r1, r4, asr #14
   166d4:	andeq	r6, r1, r4, asr #14
   166d8:	andeq	r6, r1, r4, asr #14
   166dc:	andeq	r6, r1, r4, asr #14
   166e0:	andeq	r6, r1, r4, asr #14
   166e4:	andeq	r6, r1, r4, asr #14
   166e8:	andeq	r6, r1, r4, asr #14
   166ec:	andeq	r6, r1, r4, asr #14
   166f0:	andeq	r6, r1, r4, asr #14
   166f4:	andeq	r6, r1, r4, asr #14
   166f8:	andeq	r6, r1, r4, asr #14
   166fc:	andeq	r6, r1, r4, asr #14
   16700:	andeq	r6, r1, r4, asr #14
   16704:	andeq	r6, r1, r4, asr #14
   16708:	andeq	r6, r1, r4, asr #14
   1670c:	andeq	r6, r1, r4, asr #14
   16710:	andeq	r6, r1, r4, asr #14
   16714:	andeq	r6, r1, r4, asr #14
   16718:	andeq	r6, r1, r4, asr #14
   1671c:	andeq	r6, r1, r4, asr #14
   16720:	andeq	r6, r1, r4, asr #14
   16724:	andeq	r6, r1, r4, asr #14
   16728:	andeq	r6, r1, r4, asr #14
   1672c:	andeq	r6, r1, r4, asr #14
   16730:	andeq	r6, r1, r4, asr #14
   16734:	andeq	r5, r1, r8, ror #24
   16738:	andeq	r6, r1, r4, lsl #1
   1673c:	andeq	r5, r1, r8, ror #24
   16740:	andeq	r6, r1, r0, asr r7
   16744:	mov	r6, r7
   16748:	mov	r7, #0
   1674c:	b	15cc8 <dcngettext@plt+0x4cb0>
   16750:	cmp	r9, #0
   16754:	mov	r3, #0
   16758:	beq	16198 <dcngettext@plt+0x5180>
   1675c:	mov	r6, #0
   16760:	mov	r7, r3
   16764:	mov	r3, r6
   16768:	b	15ccc <dcngettext@plt+0x4cb4>
   1676c:	mov	r3, #0
   16770:	b	16178 <dcngettext@plt+0x5160>
   16774:	mov	r7, #0
   16778:	mov	r3, #114	; 0x72
   1677c:	b	15f98 <dcngettext@plt+0x4f80>
   16780:	mov	r5, #98	; 0x62
   16784:	b	16028 <dcngettext@plt+0x5010>
   16788:	mov	r5, #97	; 0x61
   1678c:	b	16068 <dcngettext@plt+0x5050>
   16790:	ldr	r3, [sp, #32]
   16794:	cmp	r3, #0
   16798:	bne	16be0 <dcngettext@plt+0x5bc8>
   1679c:	add	r9, r9, #1
   167a0:	ldr	r3, [sp, #44]	; 0x2c
   167a4:	mov	r6, #0
   167a8:	mov	r5, #92	; 0x5c
   167ac:	b	15f60 <dcngettext@plt+0x4f48>
   167b0:	ldr	r3, [sp, #36]	; 0x24
   167b4:	ldrb	r3, [r3, #1]
   167b8:	adds	r3, r3, #0
   167bc:	movne	r3, #1
   167c0:	b	15c84 <dcngettext@plt+0x4c6c>
   167c4:	ldr	r3, [sp, #164]	; 0xa4
   167c8:	ands	r3, r3, #4
   167cc:	beq	167f0 <dcngettext@plt+0x57d8>
   167d0:	ldr	r2, [sp, #24]
   167d4:	add	r3, r9, #2
   167d8:	cmp	r3, r2
   167dc:	bcs	167f0 <dcngettext@plt+0x57d8>
   167e0:	ldr	r2, [sp, #48]	; 0x30
   167e4:	ldrb	r5, [r2, #1]
   167e8:	cmp	r5, #63	; 0x3f
   167ec:	beq	16c54 <dcngettext@plt+0x5c3c>
   167f0:	mov	r2, #0
   167f4:	mov	r6, r2
   167f8:	mov	r5, #63	; 0x3f
   167fc:	b	15cac <dcngettext@plt+0x4c94>
   16800:	ldr	r3, [sp, #32]
   16804:	cmp	r3, #0
   16808:	bne	16be0 <dcngettext@plt+0x5bc8>
   1680c:	mov	r6, r3
   16810:	mov	r5, #63	; 0x3f
   16814:	b	15cf4 <dcngettext@plt+0x4cdc>
   16818:	ldr	r3, [sp, #24]
   1681c:	cmn	r3, #1
   16820:	mov	r3, #0
   16824:	str	r3, [sp, #108]	; 0x6c
   16828:	str	r3, [sp, #112]	; 0x70
   1682c:	bne	1683c <dcngettext@plt+0x5824>
   16830:	ldr	r0, [sp, #36]	; 0x24
   16834:	bl	10f10 <strlen@plt>
   16838:	str	r0, [sp, #24]
   1683c:	mov	r3, #0
   16840:	str	sl, [sp, #88]	; 0x58
   16844:	ldr	sl, [sp, #36]	; 0x24
   16848:	str	r5, [sp, #92]	; 0x5c
   1684c:	mov	r5, r3
   16850:	str	r7, [sp, #96]	; 0x60
   16854:	str	r4, [sp, #100]	; 0x64
   16858:	str	r8, [sp, #84]	; 0x54
   1685c:	ldr	r3, [sp, #24]
   16860:	add	r4, r9, r5
   16864:	add	r7, sl, r4
   16868:	sub	r2, r3, r4
   1686c:	mov	r1, r7
   16870:	add	r3, sp, #108	; 0x6c
   16874:	add	r0, sp, #104	; 0x68
   16878:	bl	1824c <dcngettext@plt+0x7234>
   1687c:	subs	r8, r0, #0
   16880:	beq	168d0 <dcngettext@plt+0x58b8>
   16884:	cmn	r8, #1
   16888:	beq	16c30 <dcngettext@plt+0x5c18>
   1688c:	cmn	r8, #2
   16890:	beq	16d50 <dcngettext@plt+0x5d38>
   16894:	ldr	r3, [sp, #32]
   16898:	cmp	fp, #2
   1689c:	movne	r3, #0
   168a0:	andeq	r3, r3, #1
   168a4:	cmp	r3, #0
   168a8:	bne	16a30 <dcngettext@plt+0x5a18>
   168ac:	ldr	r0, [sp, #104]	; 0x68
   168b0:	bl	10e5c <iswprint@plt>
   168b4:	add	r5, r5, r8
   168b8:	cmp	r0, #0
   168bc:	add	r0, sp, #108	; 0x6c
   168c0:	moveq	r6, #0
   168c4:	bl	10e08 <mbsinit@plt>
   168c8:	cmp	r0, #0
   168cc:	beq	1685c <dcngettext@plt+0x5844>
   168d0:	ldr	r3, [sp, #28]
   168d4:	mov	ip, r5
   168d8:	eor	r2, r6, #1
   168dc:	ldr	r5, [sp, #92]	; 0x5c
   168e0:	ldr	r7, [sp, #96]	; 0x60
   168e4:	ldr	r4, [sp, #100]	; 0x64
   168e8:	ldr	r8, [sp, #84]	; 0x54
   168ec:	ldr	sl, [sp, #88]	; 0x58
   168f0:	and	r2, r2, r3
   168f4:	cmp	ip, #1
   168f8:	bls	161f8 <dcngettext@plt+0x51e0>
   168fc:	add	r1, ip, r9
   16900:	ldr	lr, [sp, #48]	; 0x30
   16904:	mov	r0, #0
   16908:	str	r6, [sp, #48]	; 0x30
   1690c:	mov	ip, #39	; 0x27
   16910:	ldr	r6, [sp, #44]	; 0x2c
   16914:	b	169cc <dcngettext@plt+0x59b4>
   16918:	ldr	r0, [sp, #32]
   1691c:	sub	r3, fp, #2
   16920:	cmp	r0, #0
   16924:	clz	r3, r3
   16928:	lsr	r3, r3, #5
   1692c:	bne	16b34 <dcngettext@plt+0x5b1c>
   16930:	eor	r0, r6, #1
   16934:	ands	r3, r3, r0
   16938:	beq	16968 <dcngettext@plt+0x5950>
   1693c:	add	r0, r4, #1
   16940:	cmp	sl, r4
   16944:	strbhi	ip, [r8, r4]
   16948:	cmp	sl, r0
   1694c:	movhi	r6, #36	; 0x24
   16950:	strbhi	r6, [r8, r0]
   16954:	add	r0, r4, #2
   16958:	mov	r6, r3
   1695c:	add	r4, r4, #3
   16960:	cmp	sl, r0
   16964:	strbhi	ip, [r8, r0]
   16968:	cmp	sl, r4
   1696c:	movhi	r3, #92	; 0x5c
   16970:	strbhi	r3, [r8, r4]
   16974:	add	r3, r4, #1
   16978:	cmp	sl, r3
   1697c:	lsrhi	r0, r5, #6
   16980:	addhi	r0, r0, #48	; 0x30
   16984:	strbhi	r0, [r8, r3]
   16988:	add	r0, r4, #2
   1698c:	cmp	sl, r0
   16990:	lsrhi	r3, r5, #3
   16994:	andhi	r3, r3, #7
   16998:	addhi	r3, r3, #48	; 0x30
   1699c:	add	r9, r9, #1
   169a0:	strbhi	r3, [r8, r0]
   169a4:	and	r5, r5, #7
   169a8:	cmp	r9, r1
   169ac:	add	r5, r5, #48	; 0x30
   169b0:	add	r4, r4, #3
   169b4:	bcs	16b54 <dcngettext@plt+0x5b3c>
   169b8:	mov	r0, r2
   169bc:	cmp	sl, r4
   169c0:	strbhi	r5, [r8, r4]
   169c4:	ldrb	r5, [lr, #1]!
   169c8:	add	r4, r4, #1
   169cc:	cmp	r2, #0
   169d0:	bne	16918 <dcngettext@plt+0x5900>
   169d4:	eor	r3, r0, #1
   169d8:	and	r3, r3, r6
   169dc:	cmp	r7, #0
   169e0:	uxtb	r3, r3
   169e4:	beq	169f8 <dcngettext@plt+0x59e0>
   169e8:	cmp	sl, r4
   169ec:	movhi	r7, #92	; 0x5c
   169f0:	strbhi	r7, [r8, r4]
   169f4:	add	r4, r4, #1
   169f8:	add	r9, r9, #1
   169fc:	cmp	r9, r1
   16a00:	bcs	16b48 <dcngettext@plt+0x5b30>
   16a04:	cmp	r3, #0
   16a08:	beq	16b74 <dcngettext@plt+0x5b5c>
   16a0c:	cmp	sl, r4
   16a10:	add	r3, r4, #1
   16a14:	strbhi	ip, [r8, r4]
   16a18:	mov	r7, #0
   16a1c:	cmp	sl, r3
   16a20:	strbhi	ip, [r8, r3]
   16a24:	add	r4, r4, #2
   16a28:	mov	r6, r7
   16a2c:	b	169bc <dcngettext@plt+0x59a4>
   16a30:	cmp	r8, #1
   16a34:	beq	168ac <dcngettext@plt+0x5894>
   16a38:	add	r1, r4, #1
   16a3c:	add	r3, sl, r8
   16a40:	add	r1, sl, r1
   16a44:	add	r4, r3, r4
   16a48:	ldrb	r3, [r1], #1
   16a4c:	sub	r3, r3, #91	; 0x5b
   16a50:	cmp	r3, #33	; 0x21
   16a54:	ldrls	pc, [pc, r3, lsl #2]
   16a58:	b	16ae4 <dcngettext@plt+0x5acc>
   16a5c:	strdeq	r6, [r1], -r0
   16a60:	strdeq	r6, [r1], -r0
   16a64:	andeq	r6, r1, r4, ror #21
   16a68:	strdeq	r6, [r1], -r0
   16a6c:	andeq	r6, r1, r4, ror #21
   16a70:	strdeq	r6, [r1], -r0
   16a74:	andeq	r6, r1, r4, ror #21
   16a78:	andeq	r6, r1, r4, ror #21
   16a7c:	andeq	r6, r1, r4, ror #21
   16a80:	andeq	r6, r1, r4, ror #21
   16a84:	andeq	r6, r1, r4, ror #21
   16a88:	andeq	r6, r1, r4, ror #21
   16a8c:	andeq	r6, r1, r4, ror #21
   16a90:	andeq	r6, r1, r4, ror #21
   16a94:	andeq	r6, r1, r4, ror #21
   16a98:	andeq	r6, r1, r4, ror #21
   16a9c:	andeq	r6, r1, r4, ror #21
   16aa0:	andeq	r6, r1, r4, ror #21
   16aa4:	andeq	r6, r1, r4, ror #21
   16aa8:	andeq	r6, r1, r4, ror #21
   16aac:	andeq	r6, r1, r4, ror #21
   16ab0:	andeq	r6, r1, r4, ror #21
   16ab4:	andeq	r6, r1, r4, ror #21
   16ab8:	andeq	r6, r1, r4, ror #21
   16abc:	andeq	r6, r1, r4, ror #21
   16ac0:	andeq	r6, r1, r4, ror #21
   16ac4:	andeq	r6, r1, r4, ror #21
   16ac8:	andeq	r6, r1, r4, ror #21
   16acc:	andeq	r6, r1, r4, ror #21
   16ad0:	andeq	r6, r1, r4, ror #21
   16ad4:	andeq	r6, r1, r4, ror #21
   16ad8:	andeq	r6, r1, r4, ror #21
   16adc:	andeq	r6, r1, r4, ror #21
   16ae0:	strdeq	r6, [r1], -r0
   16ae4:	cmp	r4, r1
   16ae8:	bne	16a48 <dcngettext@plt+0x5a30>
   16aec:	b	168ac <dcngettext@plt+0x5894>
   16af0:	ldr	fp, [sp, #84]	; 0x54
   16af4:	ldr	sl, [sp, #88]	; 0x58
   16af8:	mov	r8, #2
   16afc:	b	15fb8 <dcngettext@plt+0x4fa0>
   16b00:	cmp	sl, r4
   16b04:	movls	r1, r4
   16b08:	bls	16108 <dcngettext@plt+0x50f0>
   16b0c:	ldr	r3, [sp, #44]	; 0x2c
   16b10:	b	160f8 <dcngettext@plt+0x50e0>
   16b14:	str	sl, [sp, #72]	; 0x48
   16b18:	ldr	sl, [sp, #32]
   16b1c:	b	15f30 <dcngettext@plt+0x4f18>
   16b20:	add	r9, r9, #1
   16b24:	b	15824 <dcngettext@plt+0x480c>
   16b28:	ldr	r2, [sp, #28]
   16b2c:	mov	r6, #0
   16b30:	b	168fc <dcngettext@plt+0x58e4>
   16b34:	str	fp, [sp, #160]	; 0xa0
   16b38:	str	r3, [sp, #28]
   16b3c:	mov	fp, r8
   16b40:	ldr	r8, [sp, #160]	; 0xa0
   16b44:	b	15fb8 <dcngettext@plt+0x4fa0>
   16b48:	str	r6, [sp, #44]	; 0x2c
   16b4c:	ldr	r6, [sp, #48]	; 0x30
   16b50:	b	15f60 <dcngettext@plt+0x4f48>
   16b54:	str	r6, [sp, #44]	; 0x2c
   16b58:	ldr	r6, [sp, #48]	; 0x30
   16b5c:	b	15d6c <dcngettext@plt+0x4d54>
   16b60:	add	r4, r4, #4
   16b64:	str	r3, [sp, #44]	; 0x2c
   16b68:	mov	r6, #0
   16b6c:	mov	r5, #48	; 0x30
   16b70:	b	15cf4 <dcngettext@plt+0x4cdc>
   16b74:	mov	r7, r3
   16b78:	b	169bc <dcngettext@plt+0x59a4>
   16b7c:	ldr	r3, [pc, #-1624]	; 1652c <dcngettext@plt+0x5514>
   16b80:	mov	r4, #1
   16b84:	str	r4, [sp, #40]	; 0x28
   16b88:	str	r4, [sp, #28]
   16b8c:	str	r4, [sp, #52]	; 0x34
   16b90:	str	sl, [sp, #72]	; 0x48
   16b94:	str	sl, [sp, #68]	; 0x44
   16b98:	str	sl, [sp, #44]	; 0x2c
   16b9c:	str	sl, [sp, #32]
   16ba0:	str	r3, [sp, #60]	; 0x3c
   16ba4:	b	15814 <dcngettext@plt+0x47fc>
   16ba8:	mov	r3, r6
   16bac:	mov	r5, #48	; 0x30
   16bb0:	mov	r6, #0
   16bb4:	b	15cf4 <dcngettext@plt+0x4cdc>
   16bb8:	cmp	sl, r4
   16bbc:	movhi	r3, #48	; 0x30
   16bc0:	strbhi	r3, [r8, r4]
   16bc4:	add	r3, r1, #2
   16bc8:	cmp	sl, r3
   16bcc:	movhi	r0, #48	; 0x30
   16bd0:	strbhi	r0, [r8, r3]
   16bd4:	add	r4, r1, #3
   16bd8:	mov	r5, #48	; 0x30
   16bdc:	b	1613c <dcngettext@plt+0x5124>
   16be0:	str	fp, [sp, #160]	; 0xa0
   16be4:	mov	fp, r8
   16be8:	ldr	r8, [sp, #160]	; 0xa0
   16bec:	b	15fb8 <dcngettext@plt+0x4fa0>
   16bf0:	ldr	r2, [sp, #80]	; 0x50
   16bf4:	ldrb	r3, [r2]
   16bf8:	cmp	r3, #0
   16bfc:	beq	157e4 <dcngettext@plt+0x47cc>
   16c00:	cmp	sl, r4
   16c04:	strbhi	r3, [fp, r4]
   16c08:	ldrb	r3, [r2, #1]!
   16c0c:	add	r4, r4, #1
   16c10:	cmp	r3, #0
   16c14:	bne	16c00 <dcngettext@plt+0x5be8>
   16c18:	b	157e4 <dcngettext@plt+0x47cc>
   16c1c:	str	fp, [sp, #160]	; 0xa0
   16c20:	mov	r3, #0
   16c24:	mov	fp, r8
   16c28:	ldr	r8, [sp, #160]	; 0xa0
   16c2c:	b	1604c <dcngettext@plt+0x5034>
   16c30:	mov	ip, r5
   16c34:	ldr	r7, [sp, #96]	; 0x60
   16c38:	ldr	r5, [sp, #92]	; 0x5c
   16c3c:	ldr	r4, [sp, #100]	; 0x64
   16c40:	ldr	r8, [sp, #84]	; 0x54
   16c44:	ldr	sl, [sp, #88]	; 0x58
   16c48:	ldr	r2, [sp, #28]
   16c4c:	mov	r6, #0
   16c50:	b	168f4 <dcngettext@plt+0x58dc>
   16c54:	ldr	r2, [sp, #36]	; 0x24
   16c58:	ldrb	r1, [r2, r3]
   16c5c:	sub	r2, r1, #33	; 0x21
   16c60:	cmp	r2, #29
   16c64:	ldrls	pc, [pc, r2, lsl #2]
   16c68:	b	16d44 <dcngettext@plt+0x5d2c>
   16c6c:	andeq	r6, r1, r4, ror #25
   16c70:	andeq	r6, r1, r4, asr #26
   16c74:	andeq	r6, r1, r4, asr #26
   16c78:	andeq	r6, r1, r4, asr #26
   16c7c:	andeq	r6, r1, r4, asr #26
   16c80:	andeq	r6, r1, r4, asr #26
   16c84:	andeq	r6, r1, r4, ror #25
   16c88:	andeq	r6, r1, r4, ror #25
   16c8c:	andeq	r6, r1, r4, ror #25
   16c90:	andeq	r6, r1, r4, asr #26
   16c94:	andeq	r6, r1, r4, asr #26
   16c98:	andeq	r6, r1, r4, asr #26
   16c9c:	andeq	r6, r1, r4, ror #25
   16ca0:	andeq	r6, r1, r4, asr #26
   16ca4:	andeq	r6, r1, r4, ror #25
   16ca8:	andeq	r6, r1, r4, asr #26
   16cac:	andeq	r6, r1, r4, asr #26
   16cb0:	andeq	r6, r1, r4, asr #26
   16cb4:	andeq	r6, r1, r4, asr #26
   16cb8:	andeq	r6, r1, r4, asr #26
   16cbc:	andeq	r6, r1, r4, asr #26
   16cc0:	andeq	r6, r1, r4, asr #26
   16cc4:	andeq	r6, r1, r4, asr #26
   16cc8:	andeq	r6, r1, r4, asr #26
   16ccc:	andeq	r6, r1, r4, asr #26
   16cd0:	andeq	r6, r1, r4, asr #26
   16cd4:	andeq	r6, r1, r4, asr #26
   16cd8:	andeq	r6, r1, r4, ror #25
   16cdc:	andeq	r6, r1, r4, ror #25
   16ce0:	andeq	r6, r1, r4, ror #25
   16ce4:	ldr	r2, [sp, #32]
   16ce8:	cmp	r2, #0
   16cec:	bne	16df0 <dcngettext@plt+0x5dd8>
   16cf0:	cmp	sl, r4
   16cf4:	movhi	r2, #63	; 0x3f
   16cf8:	strbhi	r2, [r8, r4]
   16cfc:	add	r2, r4, #1
   16d00:	cmp	sl, r2
   16d04:	movhi	r0, #34	; 0x22
   16d08:	strbhi	r0, [r8, r2]
   16d0c:	add	r2, r4, #2
   16d10:	cmp	sl, r2
   16d14:	movhi	r0, #34	; 0x22
   16d18:	strbhi	r0, [r8, r2]
   16d1c:	add	r2, r4, #3
   16d20:	cmp	sl, r2
   16d24:	movhi	r0, #63	; 0x3f
   16d28:	strbhi	r0, [r8, r2]
   16d2c:	mov	r2, #0
   16d30:	add	r4, r4, #4
   16d34:	mov	r5, r1
   16d38:	mov	r9, r3
   16d3c:	mov	r6, r2
   16d40:	b	1613c <dcngettext@plt+0x5124>
   16d44:	mov	r2, #0
   16d48:	mov	r6, r2
   16d4c:	b	15cac <dcngettext@plt+0x4c94>
   16d50:	ldr	r0, [sp, #24]
   16d54:	mov	r1, r4
   16d58:	cmp	r1, r0
   16d5c:	mov	r2, r7
   16d60:	mov	r3, r5
   16d64:	mov	ip, r5
   16d68:	ldr	r7, [sp, #96]	; 0x60
   16d6c:	ldr	r5, [sp, #92]	; 0x5c
   16d70:	ldr	r4, [sp, #100]	; 0x64
   16d74:	ldr	r8, [sp, #84]	; 0x54
   16d78:	ldr	sl, [sp, #88]	; 0x58
   16d7c:	bcs	16db0 <dcngettext@plt+0x5d98>
   16d80:	ldrb	r6, [r2]
   16d84:	cmp	r6, #0
   16d88:	bne	16d9c <dcngettext@plt+0x5d84>
   16d8c:	b	16ecc <dcngettext@plt+0x5eb4>
   16d90:	ldrb	r6, [r2, #1]!
   16d94:	cmp	r6, #0
   16d98:	beq	16e54 <dcngettext@plt+0x5e3c>
   16d9c:	add	r3, r3, #1
   16da0:	add	r1, r9, r3
   16da4:	cmp	r1, r0
   16da8:	bcc	16d90 <dcngettext@plt+0x5d78>
   16dac:	mov	ip, r3
   16db0:	ldr	r2, [sp, #28]
   16db4:	mov	r6, #0
   16db8:	b	168f4 <dcngettext@plt+0x58dc>
   16dbc:	mov	r3, #1
   16dc0:	str	r3, [sp, #40]	; 0x28
   16dc4:	str	r3, [sp, #32]
   16dc8:	str	r3, [sp, #28]
   16dcc:	str	r3, [sp, #52]	; 0x34
   16dd0:	ldr	r3, [pc, #-2220]	; 1652c <dcngettext@plt+0x5514>
   16dd4:	mov	r2, #0
   16dd8:	str	r2, [sp, #68]	; 0x44
   16ddc:	str	r2, [sp, #44]	; 0x2c
   16de0:	str	r2, [sp, #72]	; 0x48
   16de4:	mov	r4, r2
   16de8:	str	r3, [sp, #60]	; 0x3c
   16dec:	b	15814 <dcngettext@plt+0x47fc>
   16df0:	str	fp, [sp, #160]	; 0xa0
   16df4:	mov	fp, r8
   16df8:	ldr	r8, [sp, #160]	; 0xa0
   16dfc:	b	15fc4 <dcngettext@plt+0x4fac>
   16e00:	mov	r2, r3
   16e04:	ldr	r3, [sp, #60]	; 0x3c
   16e08:	cmp	r3, #0
   16e0c:	moveq	r2, #0
   16e10:	andne	r2, r2, #1
   16e14:	cmp	r2, #0
   16e18:	beq	16e44 <dcngettext@plt+0x5e2c>
   16e1c:	mov	r2, r3
   16e20:	ldrb	r3, [r3]
   16e24:	cmp	r3, #0
   16e28:	beq	16e44 <dcngettext@plt+0x5e2c>
   16e2c:	cmp	sl, r4
   16e30:	strbhi	r3, [fp, r4]
   16e34:	ldrb	r3, [r2, #1]!
   16e38:	add	r4, r4, #1
   16e3c:	cmp	r3, #0
   16e40:	bne	16e2c <dcngettext@plt+0x5e14>
   16e44:	cmp	sl, r4
   16e48:	movhi	r3, #0
   16e4c:	strbhi	r3, [fp, r4]
   16e50:	b	16004 <dcngettext@plt+0x4fec>
   16e54:	mov	ip, r3
   16e58:	ldr	r2, [sp, #28]
   16e5c:	b	168f4 <dcngettext@plt+0x58dc>
   16e60:	str	fp, [sp, #160]	; 0xa0
   16e64:	mov	fp, r8
   16e68:	ldr	r8, [sp, #160]	; 0xa0
   16e6c:	sub	r3, r8, #2
   16e70:	clz	r3, r3
   16e74:	lsr	r3, r3, #5
   16e78:	str	r3, [sp, #28]
   16e7c:	b	15fb8 <dcngettext@plt+0x4fa0>
   16e80:	ldr	r3, [sp, #76]	; 0x4c
   16e84:	mov	ip, #5
   16e88:	str	r3, [sp, #16]
   16e8c:	ldr	r3, [sp, #80]	; 0x50
   16e90:	ldr	r2, [sp, #36]	; 0x24
   16e94:	str	r3, [sp, #12]
   16e98:	ldr	r3, [sp, #56]	; 0x38
   16e9c:	ldr	r1, [sp, #72]	; 0x48
   16ea0:	str	r3, [sp, #8]
   16ea4:	ldr	r3, [sp, #164]	; 0xa4
   16ea8:	mov	r0, fp
   16eac:	str	r3, [sp, #4]
   16eb0:	str	ip, [sp]
   16eb4:	ldr	r3, [sp, #24]
   16eb8:	bl	1571c <dcngettext@plt+0x4704>
   16ebc:	mov	r4, r0
   16ec0:	b	16004 <dcngettext@plt+0x4fec>
   16ec4:	mov	r8, #2
   16ec8:	b	15fb8 <dcngettext@plt+0x4fa0>
   16ecc:	ldr	r2, [sp, #28]
   16ed0:	b	168f4 <dcngettext@plt+0x58dc>
   16ed4:	mov	r3, #0
   16ed8:	str	r3, [sp, #68]	; 0x44
   16edc:	str	r3, [sp, #44]	; 0x2c
   16ee0:	str	r3, [sp, #72]	; 0x48
   16ee4:	str	r3, [sp, #28]
   16ee8:	mov	r4, r3
   16eec:	ldr	r3, [pc, #-2500]	; 16530 <dcngettext@plt+0x5518>
   16ef0:	mov	r2, #1
   16ef4:	str	r2, [sp, #40]	; 0x28
   16ef8:	str	r2, [sp, #32]
   16efc:	str	r2, [sp, #52]	; 0x34
   16f00:	str	r3, [sp, #60]	; 0x3c
   16f04:	b	15814 <dcngettext@plt+0x47fc>
   16f08:	bl	10e38 <__stack_chk_fail@plt>
   16f0c:	mov	r5, r3
   16f10:	mov	r6, #0
   16f14:	b	15d08 <dcngettext@plt+0x4cf0>
   16f18:	mov	r3, #0
   16f1c:	mov	r2, #1
   16f20:	str	r3, [sp, #44]	; 0x2c
   16f24:	str	r3, [sp, #72]	; 0x48
   16f28:	str	r2, [sp, #40]	; 0x28
   16f2c:	b	15e24 <dcngettext@plt+0x4e0c>
   16f30:	bl	11000 <abort@plt>
   16f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f38:	sub	sp, sp, #44	; 0x2c
   16f3c:	mov	r6, r0
   16f40:	mov	r4, r3
   16f44:	mov	sl, r1
   16f48:	mov	fp, r2
   16f4c:	bl	10f28 <__errno_location@plt>
   16f50:	ldr	r7, [pc, #364]	; 170c4 <dcngettext@plt+0x60ac>
   16f54:	cmp	r6, #0
   16f58:	ldr	r5, [r7]
   16f5c:	ldr	r3, [r0]
   16f60:	str	r3, [sp, #24]
   16f64:	blt	170c0 <dcngettext@plt+0x60a8>
   16f68:	ldr	r3, [r7, #4]
   16f6c:	mov	r8, r0
   16f70:	cmp	r3, r6
   16f74:	bgt	16fc0 <dcngettext@plt+0x5fa8>
   16f78:	cmn	r6, #-268435454	; 0xf0000002
   16f7c:	bgt	170bc <dcngettext@plt+0x60a4>
   16f80:	add	r9, r6, #1
   16f84:	add	r3, r7, #8
   16f88:	cmp	r5, r3
   16f8c:	lsl	r1, r9, #3
   16f90:	beq	1709c <dcngettext@plt+0x6084>
   16f94:	mov	r0, r5
   16f98:	bl	17d34 <dcngettext@plt+0x6d1c>
   16f9c:	mov	r5, r0
   16fa0:	str	r0, [r7]
   16fa4:	ldr	r0, [r7, #4]
   16fa8:	mov	r1, #0
   16fac:	sub	r2, r9, r0
   16fb0:	add	r0, r5, r0, lsl #3
   16fb4:	lsl	r2, r2, #3
   16fb8:	bl	10f4c <memset@plt>
   16fbc:	str	r9, [r7, #4]
   16fc0:	add	r3, r5, r6, lsl #3
   16fc4:	ldr	r1, [r4, #4]
   16fc8:	ldr	r7, [r3, #4]
   16fcc:	ldr	r9, [r5, r6, lsl #3]
   16fd0:	ldr	r2, [r4, #40]	; 0x28
   16fd4:	ldr	ip, [r4, #44]	; 0x2c
   16fd8:	str	r3, [sp, #28]
   16fdc:	ldr	r3, [r4]
   16fe0:	orr	r1, r1, #1
   16fe4:	add	lr, r4, #8
   16fe8:	str	r1, [sp, #36]	; 0x24
   16fec:	str	r1, [sp, #4]
   16ff0:	str	r2, [sp, #12]
   16ff4:	str	r3, [sp]
   16ff8:	mov	r0, r7
   16ffc:	mov	r1, r9
   17000:	str	ip, [sp, #16]
   17004:	str	lr, [sp, #8]
   17008:	mov	r3, fp
   1700c:	mov	r2, sl
   17010:	str	lr, [sp, #32]
   17014:	bl	1571c <dcngettext@plt+0x4704>
   17018:	cmp	r9, r0
   1701c:	bhi	17088 <dcngettext@plt+0x6070>
   17020:	ldr	r3, [pc, #160]	; 170c8 <dcngettext@plt+0x60b0>
   17024:	add	r9, r0, #1
   17028:	cmp	r7, r3
   1702c:	str	r9, [r5, r6, lsl #3]
   17030:	beq	1703c <dcngettext@plt+0x6024>
   17034:	mov	r0, r7
   17038:	bl	10de4 <free@plt>
   1703c:	mov	r0, r9
   17040:	bl	17cd8 <dcngettext@plt+0x6cc0>
   17044:	ldr	lr, [sp, #28]
   17048:	ldr	ip, [r4, #44]	; 0x2c
   1704c:	ldr	r5, [r4, #40]	; 0x28
   17050:	mov	r3, fp
   17054:	mov	r2, sl
   17058:	mov	r1, r9
   1705c:	str	r0, [lr, #4]
   17060:	ldr	lr, [r4]
   17064:	ldr	r4, [sp, #32]
   17068:	str	ip, [sp, #16]
   1706c:	str	r4, [sp, #8]
   17070:	ldr	r4, [sp, #36]	; 0x24
   17074:	str	r5, [sp, #12]
   17078:	str	r4, [sp, #4]
   1707c:	str	lr, [sp]
   17080:	mov	r7, r0
   17084:	bl	1571c <dcngettext@plt+0x4704>
   17088:	ldr	r3, [sp, #24]
   1708c:	mov	r0, r7
   17090:	str	r3, [r8]
   17094:	add	sp, sp, #44	; 0x2c
   17098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1709c:	mov	r0, #0
   170a0:	bl	17d34 <dcngettext@plt+0x6d1c>
   170a4:	ldr	r3, [pc, #32]	; 170cc <dcngettext@plt+0x60b4>
   170a8:	mov	r5, r0
   170ac:	ldm	r3, {r0, r1}
   170b0:	str	r5, [r7]
   170b4:	stm	r5, {r0, r1}
   170b8:	b	16fa4 <dcngettext@plt+0x5f8c>
   170bc:	bl	17f20 <dcngettext@plt+0x6f08>
   170c0:	bl	11000 <abort@plt>
   170c4:	andeq	sl, r2, r8, lsl #2
   170c8:	andeq	sl, r2, r8, lsl #3
   170cc:	andeq	sl, r2, r0, lsl r1
   170d0:	push	{r4, r5, r6, lr}
   170d4:	mov	r5, r0
   170d8:	bl	10f28 <__errno_location@plt>
   170dc:	cmp	r5, #0
   170e0:	mov	r1, #48	; 0x30
   170e4:	mov	r4, r0
   170e8:	ldr	r0, [pc, #16]	; 17100 <dcngettext@plt+0x60e8>
   170ec:	ldr	r6, [r4]
   170f0:	movne	r0, r5
   170f4:	bl	17ee0 <dcngettext@plt+0x6ec8>
   170f8:	str	r6, [r4]
   170fc:	pop	{r4, r5, r6, pc}
   17100:	andeq	sl, r2, r8, lsl #5
   17104:	ldr	r3, [pc, #12]	; 17118 <dcngettext@plt+0x6100>
   17108:	cmp	r0, #0
   1710c:	moveq	r0, r3
   17110:	ldr	r0, [r0]
   17114:	bx	lr
   17118:	andeq	sl, r2, r8, lsl #5
   1711c:	ldr	r3, [pc, #12]	; 17130 <dcngettext@plt+0x6118>
   17120:	cmp	r0, #0
   17124:	moveq	r0, r3
   17128:	str	r1, [r0]
   1712c:	bx	lr
   17130:	andeq	sl, r2, r8, lsl #5
   17134:	ldr	r3, [pc, #52]	; 17170 <dcngettext@plt+0x6158>
   17138:	cmp	r0, #0
   1713c:	moveq	r0, r3
   17140:	add	r3, r0, #8
   17144:	push	{lr}		; (str lr, [sp, #-4]!)
   17148:	lsr	lr, r1, #5
   1714c:	and	r1, r1, #31
   17150:	ldr	ip, [r3, lr, lsl #2]
   17154:	lsr	r0, ip, r1
   17158:	eor	r2, r2, r0
   1715c:	and	r2, r2, #1
   17160:	and	r0, r0, #1
   17164:	eor	r1, ip, r2, lsl r1
   17168:	str	r1, [r3, lr, lsl #2]
   1716c:	pop	{pc}		; (ldr pc, [sp], #4)
   17170:	andeq	sl, r2, r8, lsl #5
   17174:	ldr	r3, [pc, #16]	; 1718c <dcngettext@plt+0x6174>
   17178:	cmp	r0, #0
   1717c:	movne	r3, r0
   17180:	ldr	r0, [r3, #4]
   17184:	str	r1, [r3, #4]
   17188:	bx	lr
   1718c:	andeq	sl, r2, r8, lsl #5
   17190:	ldr	r3, [pc, #44]	; 171c4 <dcngettext@plt+0x61ac>
   17194:	cmp	r0, #0
   17198:	moveq	r0, r3
   1719c:	mov	ip, #10
   171a0:	cmp	r2, #0
   171a4:	cmpne	r1, #0
   171a8:	str	ip, [r0]
   171ac:	beq	171bc <dcngettext@plt+0x61a4>
   171b0:	str	r1, [r0, #40]	; 0x28
   171b4:	str	r2, [r0, #44]	; 0x2c
   171b8:	bx	lr
   171bc:	push	{r4, lr}
   171c0:	bl	11000 <abort@plt>
   171c4:	andeq	sl, r2, r8, lsl #5
   171c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   171cc:	sub	sp, sp, #24
   171d0:	ldr	ip, [pc, #108]	; 17244 <dcngettext@plt+0x622c>
   171d4:	ldr	r4, [sp, #56]	; 0x38
   171d8:	mov	r9, r2
   171dc:	cmp	r4, #0
   171e0:	moveq	r4, ip
   171e4:	mov	sl, r3
   171e8:	mov	r7, r0
   171ec:	mov	r8, r1
   171f0:	bl	10f28 <__errno_location@plt>
   171f4:	ldr	r3, [r4, #44]	; 0x2c
   171f8:	mov	r1, r8
   171fc:	ldr	r6, [r0]
   17200:	str	r3, [sp, #16]
   17204:	ldr	r2, [r4, #40]	; 0x28
   17208:	add	r3, r4, #8
   1720c:	str	r3, [sp, #8]
   17210:	str	r2, [sp, #12]
   17214:	ldr	r2, [r4, #4]
   17218:	mov	r5, r0
   1721c:	str	r2, [sp, #4]
   17220:	ldr	ip, [r4]
   17224:	mov	r3, sl
   17228:	mov	r2, r9
   1722c:	mov	r0, r7
   17230:	str	ip, [sp]
   17234:	bl	1571c <dcngettext@plt+0x4704>
   17238:	str	r6, [r5]
   1723c:	add	sp, sp, #24
   17240:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17244:	andeq	sl, r2, r8, lsl #5
   17248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1724c:	cmp	r3, #0
   17250:	sub	sp, sp, #44	; 0x2c
   17254:	ldr	r4, [pc, #192]	; 1731c <dcngettext@plt+0x6304>
   17258:	mov	r6, r2
   1725c:	movne	r4, r3
   17260:	mov	r9, r1
   17264:	mov	r8, r0
   17268:	bl	10f28 <__errno_location@plt>
   1726c:	ldr	r3, [r4, #44]	; 0x2c
   17270:	ldr	r5, [r4, #4]
   17274:	add	sl, r4, #8
   17278:	cmp	r6, #0
   1727c:	orreq	r5, r5, #1
   17280:	mov	r1, #0
   17284:	ldr	r2, [r0]
   17288:	str	r3, [sp, #16]
   1728c:	ldr	r3, [r4, #40]	; 0x28
   17290:	stmib	sp, {r5, sl}
   17294:	str	r3, [sp, #12]
   17298:	ldr	r3, [r4]
   1729c:	mov	r7, r0
   172a0:	str	r2, [sp, #28]
   172a4:	str	r3, [sp]
   172a8:	mov	r2, r8
   172ac:	mov	r3, r9
   172b0:	mov	r0, r1
   172b4:	bl	1571c <dcngettext@plt+0x4704>
   172b8:	add	r1, r0, #1
   172bc:	mov	fp, r0
   172c0:	mov	r0, r1
   172c4:	str	r1, [sp, #36]	; 0x24
   172c8:	bl	17cd8 <dcngettext@plt+0x6cc0>
   172cc:	ldr	r3, [r4, #44]	; 0x2c
   172d0:	mov	r2, r8
   172d4:	str	r3, [sp, #16]
   172d8:	ldr	r3, [r4, #40]	; 0x28
   172dc:	str	r5, [sp, #4]
   172e0:	str	r3, [sp, #12]
   172e4:	str	sl, [sp, #8]
   172e8:	ldr	ip, [r4]
   172ec:	ldr	r1, [sp, #36]	; 0x24
   172f0:	mov	r3, r9
   172f4:	str	ip, [sp]
   172f8:	str	r0, [sp, #32]
   172fc:	bl	1571c <dcngettext@plt+0x4704>
   17300:	ldr	r2, [sp, #28]
   17304:	cmp	r6, #0
   17308:	str	r2, [r7]
   1730c:	ldr	r0, [sp, #32]
   17310:	strne	fp, [r6]
   17314:	add	sp, sp, #44	; 0x2c
   17318:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1731c:	andeq	sl, r2, r8, lsl #5
   17320:	mov	r3, r2
   17324:	mov	r2, #0
   17328:	b	17248 <dcngettext@plt+0x6230>
   1732c:	push	{r4, r5, r6, r7, r8, lr}
   17330:	ldr	r6, [pc, #112]	; 173a8 <dcngettext@plt+0x6390>
   17334:	ldr	r3, [r6, #4]
   17338:	ldr	r7, [r6]
   1733c:	cmp	r3, #1
   17340:	ble	17364 <dcngettext@plt+0x634c>
   17344:	sub	r5, r7, #8
   17348:	add	r5, r5, r3, lsl #3
   1734c:	mov	r4, r7
   17350:	ldr	r0, [r4, #12]
   17354:	add	r4, r4, #8
   17358:	bl	10de4 <free@plt>
   1735c:	cmp	r4, r5
   17360:	bne	17350 <dcngettext@plt+0x6338>
   17364:	ldr	r0, [r7, #4]
   17368:	ldr	r4, [pc, #60]	; 173ac <dcngettext@plt+0x6394>
   1736c:	cmp	r0, r4
   17370:	beq	17384 <dcngettext@plt+0x636c>
   17374:	bl	10de4 <free@plt>
   17378:	mov	r3, #256	; 0x100
   1737c:	str	r4, [r6, #12]
   17380:	str	r3, [r6, #8]
   17384:	ldr	r4, [pc, #36]	; 173b0 <dcngettext@plt+0x6398>
   17388:	cmp	r7, r4
   1738c:	beq	1739c <dcngettext@plt+0x6384>
   17390:	mov	r0, r7
   17394:	bl	10de4 <free@plt>
   17398:	str	r4, [r6]
   1739c:	mov	r3, #1
   173a0:	str	r3, [r6, #4]
   173a4:	pop	{r4, r5, r6, r7, r8, pc}
   173a8:	andeq	sl, r2, r8, lsl #2
   173ac:	andeq	sl, r2, r8, lsl #3
   173b0:	andeq	sl, r2, r0, lsl r1
   173b4:	ldr	r3, [pc, #4]	; 173c0 <dcngettext@plt+0x63a8>
   173b8:	mvn	r2, #0
   173bc:	b	16f34 <dcngettext@plt+0x5f1c>
   173c0:	andeq	sl, r2, r8, lsl #5
   173c4:	ldr	r3, [pc]	; 173cc <dcngettext@plt+0x63b4>
   173c8:	b	16f34 <dcngettext@plt+0x5f1c>
   173cc:	andeq	sl, r2, r8, lsl #5
   173d0:	mov	r1, r0
   173d4:	ldr	r3, [pc, #8]	; 173e4 <dcngettext@plt+0x63cc>
   173d8:	mvn	r2, #0
   173dc:	mov	r0, #0
   173e0:	b	16f34 <dcngettext@plt+0x5f1c>
   173e4:	andeq	sl, r2, r8, lsl #5
   173e8:	mov	r2, r1
   173ec:	ldr	r3, [pc, #8]	; 173fc <dcngettext@plt+0x63e4>
   173f0:	mov	r1, r0
   173f4:	mov	r0, #0
   173f8:	b	16f34 <dcngettext@plt+0x5f1c>
   173fc:	andeq	sl, r2, r8, lsl #5
   17400:	push	{r4, r5, r6, lr}
   17404:	sub	sp, sp, #56	; 0x38
   17408:	ldr	r4, [pc, #68]	; 17454 <dcngettext@plt+0x643c>
   1740c:	mov	r6, r2
   17410:	mov	r5, r0
   17414:	ldr	r3, [r4]
   17418:	add	r0, sp, #4
   1741c:	str	r3, [sp, #52]	; 0x34
   17420:	bl	155ac <dcngettext@plt+0x4594>
   17424:	add	r3, sp, #4
   17428:	mvn	r2, #0
   1742c:	mov	r1, r6
   17430:	mov	r0, r5
   17434:	bl	16f34 <dcngettext@plt+0x5f1c>
   17438:	ldr	r2, [sp, #52]	; 0x34
   1743c:	ldr	r3, [r4]
   17440:	cmp	r2, r3
   17444:	bne	17450 <dcngettext@plt+0x6438>
   17448:	add	sp, sp, #56	; 0x38
   1744c:	pop	{r4, r5, r6, pc}
   17450:	bl	10e38 <__stack_chk_fail@plt>
   17454:	andeq	r9, r2, r8, lsl #30
   17458:	push	{r4, r5, r6, r7, lr}
   1745c:	sub	sp, sp, #60	; 0x3c
   17460:	ldr	r4, [pc, #72]	; 174b0 <dcngettext@plt+0x6498>
   17464:	mov	r6, r2
   17468:	mov	r7, r3
   1746c:	ldr	ip, [r4]
   17470:	mov	r5, r0
   17474:	add	r0, sp, #4
   17478:	str	ip, [sp, #52]	; 0x34
   1747c:	bl	155ac <dcngettext@plt+0x4594>
   17480:	add	r3, sp, #4
   17484:	mov	r2, r7
   17488:	mov	r1, r6
   1748c:	mov	r0, r5
   17490:	bl	16f34 <dcngettext@plt+0x5f1c>
   17494:	ldr	r2, [sp, #52]	; 0x34
   17498:	ldr	r3, [r4]
   1749c:	cmp	r2, r3
   174a0:	bne	174ac <dcngettext@plt+0x6494>
   174a4:	add	sp, sp, #60	; 0x3c
   174a8:	pop	{r4, r5, r6, r7, pc}
   174ac:	bl	10e38 <__stack_chk_fail@plt>
   174b0:	andeq	r9, r2, r8, lsl #30
   174b4:	mov	r2, r1
   174b8:	mov	r1, r0
   174bc:	mov	r0, #0
   174c0:	b	17400 <dcngettext@plt+0x63e8>
   174c4:	mov	r3, r2
   174c8:	mov	r2, r1
   174cc:	mov	r1, r0
   174d0:	mov	r0, #0
   174d4:	b	17458 <dcngettext@plt+0x6440>
   174d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   174dc:	mov	r4, r2
   174e0:	ldr	lr, [pc, #128]	; 17568 <dcngettext@plt+0x6550>
   174e4:	mov	r8, r0
   174e8:	mov	r9, r1
   174ec:	ldm	lr!, {r0, r1, r2, r3}
   174f0:	sub	sp, sp, #60	; 0x3c
   174f4:	add	ip, sp, #4
   174f8:	lsr	r6, r4, #5
   174fc:	stmia	ip!, {r0, r1, r2, r3}
   17500:	add	r7, sp, #12
   17504:	ldm	lr!, {r0, r1, r2, r3}
   17508:	and	r4, r4, #31
   1750c:	ldr	r5, [pc, #88]	; 1756c <dcngettext@plt+0x6554>
   17510:	stmia	ip!, {r0, r1, r2, r3}
   17514:	ldm	lr, {r0, r1, r2, r3}
   17518:	stm	ip, {r0, r1, r2, r3}
   1751c:	mov	r2, r9
   17520:	ldr	r3, [r7, r6, lsl #2]
   17524:	ldr	ip, [r5]
   17528:	mov	r1, r8
   1752c:	mvn	r0, r3, lsr r4
   17530:	and	r0, r0, #1
   17534:	str	ip, [sp, #52]	; 0x34
   17538:	eor	r4, r3, r0, lsl r4
   1753c:	add	r3, sp, #4
   17540:	mov	r0, #0
   17544:	str	r4, [r7, r6, lsl #2]
   17548:	bl	16f34 <dcngettext@plt+0x5f1c>
   1754c:	ldr	r2, [sp, #52]	; 0x34
   17550:	ldr	r3, [r5]
   17554:	cmp	r2, r3
   17558:	bne	17564 <dcngettext@plt+0x654c>
   1755c:	add	sp, sp, #60	; 0x3c
   17560:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17564:	bl	10e38 <__stack_chk_fail@plt>
   17568:	andeq	sl, r2, r8, lsl #5
   1756c:	andeq	r9, r2, r8, lsl #30
   17570:	mov	r2, r1
   17574:	mvn	r1, #0
   17578:	b	174d8 <dcngettext@plt+0x64c0>
   1757c:	mov	r2, #58	; 0x3a
   17580:	mvn	r1, #0
   17584:	b	174d8 <dcngettext@plt+0x64c0>
   17588:	mov	r2, #58	; 0x3a
   1758c:	b	174d8 <dcngettext@plt+0x64c0>
   17590:	push	{r4, r5, r6, r7, r8, lr}
   17594:	sub	sp, sp, #104	; 0x68
   17598:	ldr	r5, [pc, #120]	; 17618 <dcngettext@plt+0x6600>
   1759c:	mov	r6, r0
   175a0:	mov	r0, sp
   175a4:	ldr	r3, [r5]
   175a8:	mov	r7, r2
   175ac:	str	r3, [sp, #100]	; 0x64
   175b0:	bl	155ac <dcngettext@plt+0x4594>
   175b4:	mov	ip, sp
   175b8:	add	lr, sp, #52	; 0x34
   175bc:	ldm	ip!, {r0, r1, r2, r3}
   175c0:	stmia	lr!, {r0, r1, r2, r3}
   175c4:	ldm	ip!, {r0, r1, r2, r3}
   175c8:	ldr	r8, [sp, #64]	; 0x40
   175cc:	stmia	lr!, {r0, r1, r2, r3}
   175d0:	mvn	r4, r8
   175d4:	ldm	ip, {r0, r1, r2, r3}
   175d8:	and	ip, r4, #67108864	; 0x4000000
   175dc:	eor	ip, ip, r8
   175e0:	str	ip, [sp, #64]	; 0x40
   175e4:	stm	lr, {r0, r1, r2, r3}
   175e8:	add	r3, sp, #52	; 0x34
   175ec:	mvn	r2, #0
   175f0:	mov	r1, r7
   175f4:	mov	r0, r6
   175f8:	bl	16f34 <dcngettext@plt+0x5f1c>
   175fc:	ldr	r2, [sp, #100]	; 0x64
   17600:	ldr	r3, [r5]
   17604:	cmp	r2, r3
   17608:	bne	17614 <dcngettext@plt+0x65fc>
   1760c:	add	sp, sp, #104	; 0x68
   17610:	pop	{r4, r5, r6, r7, r8, pc}
   17614:	bl	10e38 <__stack_chk_fail@plt>
   17618:	andeq	r9, r2, r8, lsl #30
   1761c:	push	{r4, r5, r6, r7, r8, r9, lr}
   17620:	mov	r6, r1
   17624:	ldr	lr, [pc, #132]	; 176b0 <dcngettext@plt+0x6698>
   17628:	mov	r5, r2
   1762c:	mov	r8, r0
   17630:	mov	r9, r3
   17634:	ldm	lr!, {r0, r1, r2, r3}
   17638:	sub	sp, sp, #60	; 0x3c
   1763c:	add	ip, sp, #4
   17640:	ldr	r4, [pc, #108]	; 176b4 <dcngettext@plt+0x669c>
   17644:	stmia	ip!, {r0, r1, r2, r3}
   17648:	mov	r7, #10
   1764c:	ldm	lr!, {r0, r1, r2, r3}
   17650:	cmp	r5, #0
   17654:	cmpne	r6, #0
   17658:	str	r7, [sp, #4]
   1765c:	stmia	ip!, {r0, r1, r2, r3}
   17660:	ldm	lr, {r0, r1, r2, r3}
   17664:	ldr	lr, [r4]
   17668:	stm	ip, {r0, r1, r2, r3}
   1766c:	str	lr, [sp, #52]	; 0x34
   17670:	beq	176ac <dcngettext@plt+0x6694>
   17674:	add	r3, sp, #4
   17678:	ldr	r2, [sp, #88]	; 0x58
   1767c:	mov	r1, r9
   17680:	mov	r0, r8
   17684:	str	r6, [sp, #44]	; 0x2c
   17688:	str	r5, [sp, #48]	; 0x30
   1768c:	bl	16f34 <dcngettext@plt+0x5f1c>
   17690:	ldr	r2, [sp, #52]	; 0x34
   17694:	ldr	r3, [r4]
   17698:	cmp	r2, r3
   1769c:	bne	176a8 <dcngettext@plt+0x6690>
   176a0:	add	sp, sp, #60	; 0x3c
   176a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   176a8:	bl	10e38 <__stack_chk_fail@plt>
   176ac:	bl	11000 <abort@plt>
   176b0:	andeq	sl, r2, r8, lsl #5
   176b4:	andeq	r9, r2, r8, lsl #30
   176b8:	push	{lr}		; (str lr, [sp, #-4]!)
   176bc:	sub	sp, sp, #12
   176c0:	mvn	ip, #0
   176c4:	str	ip, [sp]
   176c8:	bl	1761c <dcngettext@plt+0x6604>
   176cc:	add	sp, sp, #12
   176d0:	pop	{pc}		; (ldr pc, [sp], #4)
   176d4:	push	{lr}		; (str lr, [sp, #-4]!)
   176d8:	sub	sp, sp, #12
   176dc:	mvn	ip, #0
   176e0:	mov	r3, r2
   176e4:	str	ip, [sp]
   176e8:	mov	r2, r1
   176ec:	mov	r1, r0
   176f0:	mov	r0, #0
   176f4:	bl	1761c <dcngettext@plt+0x6604>
   176f8:	add	sp, sp, #12
   176fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17700:	push	{lr}		; (str lr, [sp, #-4]!)
   17704:	sub	sp, sp, #12
   17708:	str	r3, [sp]
   1770c:	mov	r3, r2
   17710:	mov	r2, r1
   17714:	mov	r1, r0
   17718:	mov	r0, #0
   1771c:	bl	1761c <dcngettext@plt+0x6604>
   17720:	add	sp, sp, #12
   17724:	pop	{pc}		; (ldr pc, [sp], #4)
   17728:	ldr	r3, [pc]	; 17730 <dcngettext@plt+0x6718>
   1772c:	b	16f34 <dcngettext@plt+0x5f1c>
   17730:	andeq	sl, r2, r8, lsl r1
   17734:	mov	r2, r1
   17738:	ldr	r3, [pc, #8]	; 17748 <dcngettext@plt+0x6730>
   1773c:	mov	r1, r0
   17740:	mov	r0, #0
   17744:	b	16f34 <dcngettext@plt+0x5f1c>
   17748:	andeq	sl, r2, r8, lsl r1
   1774c:	ldr	r3, [pc, #4]	; 17758 <dcngettext@plt+0x6740>
   17750:	mvn	r2, #0
   17754:	b	16f34 <dcngettext@plt+0x5f1c>
   17758:	andeq	sl, r2, r8, lsl r1
   1775c:	mov	r1, r0
   17760:	ldr	r3, [pc, #8]	; 17770 <dcngettext@plt+0x6758>
   17764:	mvn	r2, #0
   17768:	mov	r0, #0
   1776c:	b	16f34 <dcngettext@plt+0x5f1c>
   17770:	andeq	sl, r2, r8, lsl r1
   17774:	mov	r2, #3
   17778:	mov	r1, #0
   1777c:	b	18000 <dcngettext@plt+0x6fe8>
   17780:	push	{r4, r5, r6, lr}
   17784:	sub	sp, sp, #32
   17788:	cmp	r1, #0
   1778c:	mov	r5, r0
   17790:	ldr	r4, [sp, #48]	; 0x30
   17794:	ldr	r6, [sp, #52]	; 0x34
   17798:	beq	17828 <dcngettext@plt+0x6810>
   1779c:	strd	r2, [sp]
   177a0:	mov	r3, r1
   177a4:	ldr	r2, [pc, #828]	; 17ae8 <dcngettext@plt+0x6ad0>
   177a8:	mov	r1, #1
   177ac:	bl	10f70 <__fprintf_chk@plt>
   177b0:	mov	r2, #5
   177b4:	ldr	r1, [pc, #816]	; 17aec <dcngettext@plt+0x6ad4>
   177b8:	mov	r0, #0
   177bc:	bl	10e2c <dcgettext@plt>
   177c0:	ldr	r3, [pc, #808]	; 17af0 <dcngettext@plt+0x6ad8>
   177c4:	ldr	r2, [pc, #808]	; 17af4 <dcngettext@plt+0x6adc>
   177c8:	str	r3, [sp]
   177cc:	mov	r1, #1
   177d0:	mov	r3, r0
   177d4:	mov	r0, r5
   177d8:	bl	10f70 <__fprintf_chk@plt>
   177dc:	ldr	r1, [pc, #788]	; 17af8 <dcngettext@plt+0x6ae0>
   177e0:	mov	r2, #5
   177e4:	mov	r0, #0
   177e8:	bl	10e2c <dcgettext@plt>
   177ec:	mov	r1, r5
   177f0:	bl	10d9c <fputs_unlocked@plt>
   177f4:	cmp	r6, #9
   177f8:	ldrls	pc, [pc, r6, lsl #2]
   177fc:	b	17ad8 <dcngettext@plt+0x6ac0>
   17800:	andeq	r7, r1, r4, ror #21
   17804:	andeq	r7, r1, ip, lsr #17
   17808:	ldrdeq	r7, [r1], -r8
   1780c:	andeq	r7, r1, ip, lsl #18
   17810:	andeq	r7, r1, r8, asr #18
   17814:	andeq	r7, r1, r8, lsl #19
   17818:	ldrdeq	r7, [r1], -r0
   1781c:	andeq	r7, r1, r0, lsr #20
   17820:	andeq	r7, r1, r8, ror sl
   17824:	andeq	r7, r1, r0, asr #16
   17828:	str	r3, [sp]
   1782c:	mov	r1, #1
   17830:	mov	r3, r2
   17834:	ldr	r2, [pc, #704]	; 17afc <dcngettext@plt+0x6ae4>
   17838:	bl	10f70 <__fprintf_chk@plt>
   1783c:	b	177b0 <dcngettext@plt+0x6798>
   17840:	ldr	r1, [pc, #696]	; 17b00 <dcngettext@plt+0x6ae8>
   17844:	mov	r2, #5
   17848:	mov	r0, #0
   1784c:	bl	10e2c <dcgettext@plt>
   17850:	ldr	r2, [r4, #32]
   17854:	ldr	r3, [r4, #28]
   17858:	ldr	r1, [r4, #24]
   1785c:	str	r2, [sp, #28]
   17860:	ldr	r2, [r4, #20]
   17864:	str	r3, [sp, #24]
   17868:	ldr	r3, [r4, #16]
   1786c:	str	r1, [sp, #20]
   17870:	ldr	r1, [r4, #12]
   17874:	str	r2, [sp, #16]
   17878:	ldr	r2, [r4, #8]
   1787c:	str	r3, [sp, #12]
   17880:	ldr	r3, [r4, #4]
   17884:	str	r1, [sp, #8]
   17888:	str	r2, [sp, #4]
   1788c:	str	r3, [sp]
   17890:	mov	r1, #1
   17894:	ldr	r3, [r4]
   17898:	mov	r2, r0
   1789c:	mov	r0, r5
   178a0:	bl	10f70 <__fprintf_chk@plt>
   178a4:	add	sp, sp, #32
   178a8:	pop	{r4, r5, r6, pc}
   178ac:	mov	r2, #5
   178b0:	ldr	r1, [pc, #588]	; 17b04 <dcngettext@plt+0x6aec>
   178b4:	mov	r0, #0
   178b8:	bl	10e2c <dcgettext@plt>
   178bc:	ldr	r3, [r4]
   178c0:	mov	r1, #1
   178c4:	mov	r2, r0
   178c8:	mov	r0, r5
   178cc:	add	sp, sp, #32
   178d0:	pop	{r4, r5, r6, lr}
   178d4:	b	10f70 <__fprintf_chk@plt>
   178d8:	mov	r2, #5
   178dc:	ldr	r1, [pc, #548]	; 17b08 <dcngettext@plt+0x6af0>
   178e0:	mov	r0, #0
   178e4:	bl	10e2c <dcgettext@plt>
   178e8:	ldr	r2, [r4, #4]
   178ec:	ldr	r3, [r4]
   178f0:	mov	r1, #1
   178f4:	str	r2, [sp, #48]	; 0x30
   178f8:	mov	r2, r0
   178fc:	mov	r0, r5
   17900:	add	sp, sp, #32
   17904:	pop	{r4, r5, r6, lr}
   17908:	b	10f70 <__fprintf_chk@plt>
   1790c:	mov	r2, #5
   17910:	ldr	r1, [pc, #500]	; 17b0c <dcngettext@plt+0x6af4>
   17914:	mov	r0, #0
   17918:	bl	10e2c <dcgettext@plt>
   1791c:	ldr	r2, [r4, #8]
   17920:	ldr	r3, [r4, #4]
   17924:	mov	r1, #1
   17928:	str	r2, [sp, #52]	; 0x34
   1792c:	str	r3, [sp, #48]	; 0x30
   17930:	ldr	r3, [r4]
   17934:	mov	r2, r0
   17938:	mov	r0, r5
   1793c:	add	sp, sp, #32
   17940:	pop	{r4, r5, r6, lr}
   17944:	b	10f70 <__fprintf_chk@plt>
   17948:	mov	r2, #5
   1794c:	ldr	r1, [pc, #444]	; 17b10 <dcngettext@plt+0x6af8>
   17950:	mov	r0, #0
   17954:	bl	10e2c <dcgettext@plt>
   17958:	ldr	r1, [r4, #12]
   1795c:	ldr	r2, [r4, #8]
   17960:	ldr	r3, [r4, #4]
   17964:	str	r1, [sp, #8]
   17968:	str	r2, [sp, #4]
   1796c:	str	r3, [sp]
   17970:	mov	r1, #1
   17974:	ldr	r3, [r4]
   17978:	mov	r2, r0
   1797c:	mov	r0, r5
   17980:	bl	10f70 <__fprintf_chk@plt>
   17984:	b	178a4 <dcngettext@plt+0x688c>
   17988:	mov	r2, #5
   1798c:	ldr	r1, [pc, #384]	; 17b14 <dcngettext@plt+0x6afc>
   17990:	mov	r0, #0
   17994:	bl	10e2c <dcgettext@plt>
   17998:	ldr	r3, [r4, #16]
   1799c:	ldr	r1, [r4, #12]
   179a0:	ldr	r2, [r4, #8]
   179a4:	str	r3, [sp, #12]
   179a8:	ldr	r3, [r4, #4]
   179ac:	str	r1, [sp, #8]
   179b0:	str	r2, [sp, #4]
   179b4:	str	r3, [sp]
   179b8:	mov	r1, #1
   179bc:	ldr	r3, [r4]
   179c0:	mov	r2, r0
   179c4:	mov	r0, r5
   179c8:	bl	10f70 <__fprintf_chk@plt>
   179cc:	b	178a4 <dcngettext@plt+0x688c>
   179d0:	mov	r2, #5
   179d4:	ldr	r1, [pc, #316]	; 17b18 <dcngettext@plt+0x6b00>
   179d8:	mov	r0, #0
   179dc:	bl	10e2c <dcgettext@plt>
   179e0:	ldr	r2, [r4, #20]
   179e4:	ldr	r3, [r4, #16]
   179e8:	ldr	r1, [r4, #12]
   179ec:	str	r2, [sp, #16]
   179f0:	ldr	r2, [r4, #8]
   179f4:	str	r3, [sp, #12]
   179f8:	ldr	r3, [r4, #4]
   179fc:	str	r1, [sp, #8]
   17a00:	str	r2, [sp, #4]
   17a04:	str	r3, [sp]
   17a08:	mov	r1, #1
   17a0c:	ldr	r3, [r4]
   17a10:	mov	r2, r0
   17a14:	mov	r0, r5
   17a18:	bl	10f70 <__fprintf_chk@plt>
   17a1c:	b	178a4 <dcngettext@plt+0x688c>
   17a20:	mov	r2, #5
   17a24:	ldr	r1, [pc, #240]	; 17b1c <dcngettext@plt+0x6b04>
   17a28:	mov	r0, #0
   17a2c:	bl	10e2c <dcgettext@plt>
   17a30:	ldr	r1, [r4, #24]
   17a34:	ldr	r2, [r4, #20]
   17a38:	ldr	r3, [r4, #16]
   17a3c:	str	r1, [sp, #20]
   17a40:	ldr	r1, [r4, #12]
   17a44:	str	r2, [sp, #16]
   17a48:	ldr	r2, [r4, #8]
   17a4c:	str	r3, [sp, #12]
   17a50:	ldr	r3, [r4, #4]
   17a54:	str	r1, [sp, #8]
   17a58:	str	r2, [sp, #4]
   17a5c:	str	r3, [sp]
   17a60:	mov	r1, #1
   17a64:	ldr	r3, [r4]
   17a68:	mov	r2, r0
   17a6c:	mov	r0, r5
   17a70:	bl	10f70 <__fprintf_chk@plt>
   17a74:	b	178a4 <dcngettext@plt+0x688c>
   17a78:	mov	r2, #5
   17a7c:	ldr	r1, [pc, #156]	; 17b20 <dcngettext@plt+0x6b08>
   17a80:	mov	r0, #0
   17a84:	bl	10e2c <dcgettext@plt>
   17a88:	ldr	r3, [r4, #28]
   17a8c:	ldr	r1, [r4, #24]
   17a90:	ldr	r2, [r4, #20]
   17a94:	str	r3, [sp, #24]
   17a98:	ldr	r3, [r4, #16]
   17a9c:	str	r1, [sp, #20]
   17aa0:	ldr	r1, [r4, #12]
   17aa4:	str	r2, [sp, #16]
   17aa8:	ldr	r2, [r4, #8]
   17aac:	str	r3, [sp, #12]
   17ab0:	ldr	r3, [r4, #4]
   17ab4:	str	r1, [sp, #8]
   17ab8:	str	r2, [sp, #4]
   17abc:	str	r3, [sp]
   17ac0:	mov	r1, #1
   17ac4:	ldr	r3, [r4]
   17ac8:	mov	r2, r0
   17acc:	mov	r0, r5
   17ad0:	bl	10f70 <__fprintf_chk@plt>
   17ad4:	b	178a4 <dcngettext@plt+0x688c>
   17ad8:	mov	r2, #5
   17adc:	ldr	r1, [pc, #64]	; 17b24 <dcngettext@plt+0x6b0c>
   17ae0:	b	17848 <dcngettext@plt+0x6830>
   17ae4:	bl	11000 <abort@plt>
   17ae8:	andeq	r9, r1, r0, lsl r6
   17aec:	andeq	r9, r1, r4, lsr #12
   17af0:	andeq	r0, r0, r2, ror #15
   17af4:	strdeq	r9, [r1], -r8
   17af8:	andeq	r9, r1, r8, lsr #12
   17afc:	andeq	r9, r1, ip, lsl r6
   17b00:	andeq	r9, r1, r0, lsl #16
   17b04:	strdeq	r9, [r1], -r4
   17b08:	andeq	r9, r1, r4, lsl #14
   17b0c:	andeq	r9, r1, ip, lsl r7
   17b10:	andeq	r9, r1, r8, lsr r7
   17b14:	andeq	r9, r1, r8, asr r7
   17b18:	andeq	r9, r1, ip, ror r7
   17b1c:	andeq	r9, r1, r4, lsr #15
   17b20:	ldrdeq	r9, [r1], -r0
   17b24:	andeq	r9, r1, r4, lsr r8
   17b28:	push	{r4, r5, lr}
   17b2c:	sub	sp, sp, #12
   17b30:	ldr	r5, [sp, #24]
   17b34:	ldr	ip, [r5]
   17b38:	cmp	ip, #0
   17b3c:	beq	17b58 <dcngettext@plt+0x6b40>
   17b40:	mov	lr, r5
   17b44:	mov	ip, #0
   17b48:	ldr	r4, [lr, #4]!
   17b4c:	add	ip, ip, #1
   17b50:	cmp	r4, #0
   17b54:	bne	17b48 <dcngettext@plt+0x6b30>
   17b58:	stm	sp, {r5, ip}
   17b5c:	bl	17780 <dcngettext@plt+0x6768>
   17b60:	add	sp, sp, #12
   17b64:	pop	{r4, r5, pc}
   17b68:	push	{r4, r5, r6, lr}
   17b6c:	sub	sp, sp, #56	; 0x38
   17b70:	ldr	r6, [pc, #88]	; 17bd0 <dcngettext@plt+0x6bb8>
   17b74:	ldr	r5, [sp, #72]	; 0x48
   17b78:	add	r4, sp, #8
   17b7c:	ldr	ip, [r6]
   17b80:	str	ip, [sp, #52]	; 0x34
   17b84:	mov	ip, #0
   17b88:	ldr	lr, [r5], #4
   17b8c:	cmp	lr, #0
   17b90:	str	lr, [r4, #4]!
   17b94:	beq	17ba4 <dcngettext@plt+0x6b8c>
   17b98:	add	ip, ip, #1
   17b9c:	cmp	ip, #10
   17ba0:	bne	17b88 <dcngettext@plt+0x6b70>
   17ba4:	add	lr, sp, #12
   17ba8:	str	ip, [sp, #4]
   17bac:	str	lr, [sp]
   17bb0:	bl	17780 <dcngettext@plt+0x6768>
   17bb4:	ldr	r2, [sp, #52]	; 0x34
   17bb8:	ldr	r3, [r6]
   17bbc:	cmp	r2, r3
   17bc0:	bne	17bcc <dcngettext@plt+0x6bb4>
   17bc4:	add	sp, sp, #56	; 0x38
   17bc8:	pop	{r4, r5, r6, pc}
   17bcc:	bl	10e38 <__stack_chk_fail@plt>
   17bd0:	andeq	r9, r2, r8, lsl #30
   17bd4:	push	{r3}		; (str r3, [sp, #-4]!)
   17bd8:	mov	ip, #0
   17bdc:	push	{r4, r5, r6, lr}
   17be0:	sub	sp, sp, #60	; 0x3c
   17be4:	ldr	r6, [pc, #100]	; 17c50 <dcngettext@plt+0x6c38>
   17be8:	add	r5, sp, #8
   17bec:	add	r4, sp, #80	; 0x50
   17bf0:	ldr	r3, [r6]
   17bf4:	str	r4, [sp, #8]
   17bf8:	str	r3, [sp, #52]	; 0x34
   17bfc:	ldr	r3, [sp, #76]	; 0x4c
   17c00:	ldr	lr, [r4], #4
   17c04:	cmp	lr, #0
   17c08:	str	lr, [r5, #4]!
   17c0c:	beq	17c1c <dcngettext@plt+0x6c04>
   17c10:	add	ip, ip, #1
   17c14:	cmp	ip, #10
   17c18:	bne	17c00 <dcngettext@plt+0x6be8>
   17c1c:	add	lr, sp, #12
   17c20:	str	ip, [sp, #4]
   17c24:	str	lr, [sp]
   17c28:	bl	17780 <dcngettext@plt+0x6768>
   17c2c:	ldr	r2, [sp, #52]	; 0x34
   17c30:	ldr	r3, [r6]
   17c34:	cmp	r2, r3
   17c38:	bne	17c4c <dcngettext@plt+0x6c34>
   17c3c:	add	sp, sp, #60	; 0x3c
   17c40:	pop	{r4, r5, r6, lr}
   17c44:	add	sp, sp, #4
   17c48:	bx	lr
   17c4c:	bl	10e38 <__stack_chk_fail@plt>
   17c50:	andeq	r9, r2, r8, lsl #30
   17c54:	push	{r4, lr}
   17c58:	mov	r2, #5
   17c5c:	ldr	r1, [pc, #88]	; 17cbc <dcngettext@plt+0x6ca4>
   17c60:	mov	r0, #0
   17c64:	bl	10e2c <dcgettext@plt>
   17c68:	ldr	r2, [pc, #80]	; 17cc0 <dcngettext@plt+0x6ca8>
   17c6c:	mov	r1, r0
   17c70:	mov	r0, #1
   17c74:	bl	10f58 <__printf_chk@plt>
   17c78:	mov	r2, #5
   17c7c:	ldr	r1, [pc, #64]	; 17cc4 <dcngettext@plt+0x6cac>
   17c80:	mov	r0, #0
   17c84:	bl	10e2c <dcgettext@plt>
   17c88:	ldr	r3, [pc, #56]	; 17cc8 <dcngettext@plt+0x6cb0>
   17c8c:	ldr	r2, [pc, #56]	; 17ccc <dcngettext@plt+0x6cb4>
   17c90:	mov	r1, r0
   17c94:	mov	r0, #1
   17c98:	bl	10f58 <__printf_chk@plt>
   17c9c:	ldr	r1, [pc, #44]	; 17cd0 <dcngettext@plt+0x6cb8>
   17ca0:	mov	r2, #5
   17ca4:	mov	r0, #0
   17ca8:	bl	10e2c <dcgettext@plt>
   17cac:	ldr	r3, [pc, #32]	; 17cd4 <dcngettext@plt+0x6cbc>
   17cb0:	pop	{r4, lr}
   17cb4:	ldr	r1, [r3]
   17cb8:	b	10d9c <fputs_unlocked@plt>
   17cbc:	andeq	r9, r1, r0, ror r8
   17cc0:	andeq	r9, r1, r8, lsl #17
   17cc4:	andeq	r9, r1, r0, lsr #17
   17cc8:	andeq	r8, r1, r0, ror lr
   17ccc:	muleq	r1, r8, lr
   17cd0:			; <UNDEFINED> instruction: 0x000198b4
   17cd4:	andeq	sl, r2, r4, ror #2
   17cd8:	push	{r4, lr}
   17cdc:	mov	r4, r0
   17ce0:	bl	10eb0 <malloc@plt>
   17ce4:	adds	r4, r4, #0
   17ce8:	movne	r4, #1
   17cec:	cmp	r0, #0
   17cf0:	movne	r4, #0
   17cf4:	cmp	r4, #0
   17cf8:	popeq	{r4, pc}
   17cfc:	bl	17f20 <dcngettext@plt+0x6f08>
   17d00:	push	{r4, r5, r6, lr}
   17d04:	umull	r4, r5, r0, r1
   17d08:	adds	r3, r5, #0
   17d0c:	movne	r3, #1
   17d10:	cmp	r4, #0
   17d14:	blt	17d2c <dcngettext@plt+0x6d14>
   17d18:	cmp	r3, #0
   17d1c:	bne	17d2c <dcngettext@plt+0x6d14>
   17d20:	mul	r0, r1, r0
   17d24:	pop	{r4, r5, r6, lr}
   17d28:	b	17cd8 <dcngettext@plt+0x6cc0>
   17d2c:	bl	17f20 <dcngettext@plt+0x6f08>
   17d30:	b	17cd8 <dcngettext@plt+0x6cc0>
   17d34:	adds	r3, r0, #0
   17d38:	movne	r3, #1
   17d3c:	cmp	r1, #0
   17d40:	movne	r3, #0
   17d44:	cmp	r3, #0
   17d48:	push	{r4, lr}
   17d4c:	bne	17d74 <dcngettext@plt+0x6d5c>
   17d50:	mov	r4, r1
   17d54:	bl	10e44 <realloc@plt>
   17d58:	adds	r4, r4, #0
   17d5c:	movne	r4, #1
   17d60:	cmp	r0, #0
   17d64:	movne	r4, #0
   17d68:	cmp	r4, #0
   17d6c:	popeq	{r4, pc}
   17d70:	bl	17f20 <dcngettext@plt+0x6f08>
   17d74:	bl	10de4 <free@plt>
   17d78:	mov	r0, #0
   17d7c:	pop	{r4, pc}
   17d80:	push	{r4, r5, r6, lr}
   17d84:	umull	r4, r5, r1, r2
   17d88:	adds	r3, r5, #0
   17d8c:	movne	r3, #1
   17d90:	cmp	r4, #0
   17d94:	blt	17dac <dcngettext@plt+0x6d94>
   17d98:	cmp	r3, #0
   17d9c:	bne	17dac <dcngettext@plt+0x6d94>
   17da0:	mul	r1, r2, r1
   17da4:	pop	{r4, r5, r6, lr}
   17da8:	b	17d34 <dcngettext@plt+0x6d1c>
   17dac:	bl	17f20 <dcngettext@plt+0x6f08>
   17db0:	push	{r4, r5, r6, r7, r8, lr}
   17db4:	subs	r7, r0, #0
   17db8:	mov	r6, r1
   17dbc:	mov	r5, r2
   17dc0:	ldr	r4, [r1]
   17dc4:	beq	17df8 <dcngettext@plt+0x6de0>
   17dc8:	mov	r1, r2
   17dcc:	ldr	r0, [pc, #104]	; 17e3c <dcngettext@plt+0x6e24>
   17dd0:	bl	183c0 <dcngettext@plt+0x73a8>
   17dd4:	cmp	r0, r4
   17dd8:	bls	17e1c <dcngettext@plt+0x6e04>
   17ddc:	add	r3, r4, #1
   17de0:	add	r4, r3, r4, lsr #1
   17de4:	str	r4, [r6]
   17de8:	mul	r1, r5, r4
   17dec:	mov	r0, r7
   17df0:	pop	{r4, r5, r6, r7, r8, lr}
   17df4:	b	17d34 <dcngettext@plt+0x6d1c>
   17df8:	cmp	r4, #0
   17dfc:	beq	17e20 <dcngettext@plt+0x6e08>
   17e00:	umull	r0, r1, r4, r5
   17e04:	adds	r3, r1, #0
   17e08:	movne	r3, #1
   17e0c:	cmp	r0, #0
   17e10:	blt	17e1c <dcngettext@plt+0x6e04>
   17e14:	cmp	r3, #0
   17e18:	beq	17de4 <dcngettext@plt+0x6dcc>
   17e1c:	bl	17f20 <dcngettext@plt+0x6f08>
   17e20:	mov	r1, r2
   17e24:	mov	r0, #64	; 0x40
   17e28:	bl	183c0 <dcngettext@plt+0x73a8>
   17e2c:	cmp	r5, #64	; 0x40
   17e30:	movls	r4, r0
   17e34:	addhi	r4, r0, #1
   17e38:	b	17e00 <dcngettext@plt+0x6de8>
   17e3c:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   17e40:	cmp	r0, #0
   17e44:	ldr	r3, [r1]
   17e48:	beq	17e6c <dcngettext@plt+0x6e54>
   17e4c:	ldr	r2, [pc, #60]	; 17e90 <dcngettext@plt+0x6e78>
   17e50:	cmp	r3, r2
   17e54:	bhi	17e88 <dcngettext@plt+0x6e70>
   17e58:	add	r2, r3, #1
   17e5c:	add	r3, r2, r3, lsr #1
   17e60:	str	r3, [r1]
   17e64:	mov	r1, r3
   17e68:	b	17d34 <dcngettext@plt+0x6d1c>
   17e6c:	cmp	r3, #0
   17e70:	bne	17e84 <dcngettext@plt+0x6e6c>
   17e74:	mov	r3, #64	; 0x40
   17e78:	str	r3, [r1]
   17e7c:	mov	r1, r3
   17e80:	b	17d34 <dcngettext@plt+0x6d1c>
   17e84:	bge	17e60 <dcngettext@plt+0x6e48>
   17e88:	push	{r4, lr}
   17e8c:	bl	17f20 <dcngettext@plt+0x6f08>
   17e90:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   17e94:	push	{r4, lr}
   17e98:	mov	r4, r0
   17e9c:	bl	17cd8 <dcngettext@plt+0x6cc0>
   17ea0:	mov	r2, r4
   17ea4:	mov	r1, #0
   17ea8:	pop	{r4, lr}
   17eac:	b	10f4c <memset@plt>
   17eb0:	push	{r4, r5, r6, lr}
   17eb4:	umull	r4, r5, r0, r1
   17eb8:	adds	r3, r5, #0
   17ebc:	movne	r3, #1
   17ec0:	cmp	r4, #0
   17ec4:	blt	17edc <dcngettext@plt+0x6ec4>
   17ec8:	cmp	r3, #0
   17ecc:	bne	17edc <dcngettext@plt+0x6ec4>
   17ed0:	bl	10d90 <calloc@plt>
   17ed4:	cmp	r0, #0
   17ed8:	popne	{r4, r5, r6, pc}
   17edc:	bl	17f20 <dcngettext@plt+0x6f08>
   17ee0:	push	{r4, r5, r6, lr}
   17ee4:	mov	r4, r1
   17ee8:	mov	r5, r0
   17eec:	mov	r0, r1
   17ef0:	bl	17cd8 <dcngettext@plt+0x6cc0>
   17ef4:	mov	r2, r4
   17ef8:	mov	r1, r5
   17efc:	pop	{r4, r5, r6, lr}
   17f00:	b	10dfc <memcpy@plt>
   17f04:	push	{r4, lr}
   17f08:	mov	r4, r0
   17f0c:	bl	10f10 <strlen@plt>
   17f10:	add	r1, r0, #1
   17f14:	mov	r0, r4
   17f18:	pop	{r4, lr}
   17f1c:	b	17ee0 <dcngettext@plt+0x6ec8>
   17f20:	ldr	r3, [pc, #44]	; 17f54 <dcngettext@plt+0x6f3c>
   17f24:	push	{r4, lr}
   17f28:	mov	r2, #5
   17f2c:	ldr	r1, [pc, #36]	; 17f58 <dcngettext@plt+0x6f40>
   17f30:	mov	r0, #0
   17f34:	ldr	r4, [r3]
   17f38:	bl	10e2c <dcgettext@plt>
   17f3c:	ldr	r2, [pc, #24]	; 17f5c <dcngettext@plt+0x6f44>
   17f40:	mov	r1, #0
   17f44:	mov	r3, r0
   17f48:	mov	r0, r4
   17f4c:	bl	10ea4 <error@plt>
   17f50:	bl	11000 <abort@plt>
   17f54:	andeq	sl, r2, r4, lsl #2
   17f58:	andeq	r9, r1, r8, lsr #18
   17f5c:			; <UNDEFINED> instruction: 0x000194b0
   17f60:	push	{r4, r5, lr}
   17f64:	sub	sp, sp, #12
   17f68:	mov	r4, r0
   17f6c:	bl	10f64 <fileno@plt>
   17f70:	cmp	r0, #0
   17f74:	mov	r0, r4
   17f78:	blt	17ff4 <dcngettext@plt+0x6fdc>
   17f7c:	bl	10ec8 <__freading@plt>
   17f80:	cmp	r0, #0
   17f84:	bne	17fc0 <dcngettext@plt+0x6fa8>
   17f88:	mov	r0, r4
   17f8c:	bl	1814c <dcngettext@plt+0x7134>
   17f90:	cmp	r0, #0
   17f94:	beq	17ff0 <dcngettext@plt+0x6fd8>
   17f98:	bl	10f28 <__errno_location@plt>
   17f9c:	mov	r5, r0
   17fa0:	mov	r0, r4
   17fa4:	ldr	r4, [r5]
   17fa8:	bl	10f7c <fclose@plt>
   17fac:	cmp	r4, #0
   17fb0:	mvnne	r0, #0
   17fb4:	strne	r4, [r5]
   17fb8:	add	sp, sp, #12
   17fbc:	pop	{r4, r5, pc}
   17fc0:	mov	r0, r4
   17fc4:	bl	10f64 <fileno@plt>
   17fc8:	mov	r3, #1
   17fcc:	str	r3, [sp]
   17fd0:	mov	r2, #0
   17fd4:	mov	r3, #0
   17fd8:	bl	10e74 <lseek64@plt>
   17fdc:	mvn	r3, #0
   17fe0:	mvn	r2, #0
   17fe4:	cmp	r1, r3
   17fe8:	cmpeq	r0, r2
   17fec:	bne	17f88 <dcngettext@plt+0x6f70>
   17ff0:	mov	r0, r4
   17ff4:	add	sp, sp, #12
   17ff8:	pop	{r4, r5, lr}
   17ffc:	b	10f7c <fclose@plt>
   18000:	push	{r1, r2, r3}
   18004:	push	{r4, r5, r6, r7, r8, lr}
   18008:	sub	sp, sp, #12
   1800c:	ldr	r4, [pc, #300]	; 18140 <dcngettext@plt+0x7128>
   18010:	ldr	r3, [pc, #300]	; 18144 <dcngettext@plt+0x712c>
   18014:	ldr	r1, [sp, #36]	; 0x24
   18018:	ldr	r2, [r4]
   1801c:	cmp	r1, r3
   18020:	add	r3, sp, #40	; 0x28
   18024:	str	r2, [sp, #4]
   18028:	str	r3, [sp]
   1802c:	bne	180f8 <dcngettext@plt+0x70e0>
   18030:	ldr	r6, [pc, #272]	; 18148 <dcngettext@plt+0x7130>
   18034:	add	r3, sp, #44	; 0x2c
   18038:	str	r3, [sp]
   1803c:	ldr	r3, [r6]
   18040:	ldr	r7, [sp, #40]	; 0x28
   18044:	cmp	r3, #0
   18048:	blt	1808c <dcngettext@plt+0x7074>
   1804c:	mov	r2, r7
   18050:	mov	r8, r0
   18054:	bl	10f94 <fcntl64@plt>
   18058:	subs	r5, r0, #0
   1805c:	blt	18108 <dcngettext@plt+0x70f0>
   18060:	mov	r3, #1
   18064:	str	r3, [r6]
   18068:	ldr	r2, [sp, #4]
   1806c:	ldr	r3, [r4]
   18070:	mov	r0, r5
   18074:	cmp	r2, r3
   18078:	bne	1813c <dcngettext@plt+0x7124>
   1807c:	add	sp, sp, #12
   18080:	pop	{r4, r5, r6, r7, r8, lr}
   18084:	add	sp, sp, #12
   18088:	bx	lr
   1808c:	mov	r2, r7
   18090:	mov	r1, #0
   18094:	bl	18000 <dcngettext@plt+0x6fe8>
   18098:	subs	r5, r0, #0
   1809c:	blt	18068 <dcngettext@plt+0x7050>
   180a0:	ldr	r3, [r6]
   180a4:	cmn	r3, #1
   180a8:	bne	18068 <dcngettext@plt+0x7050>
   180ac:	mov	r1, #1
   180b0:	mov	r0, r5
   180b4:	bl	10f94 <fcntl64@plt>
   180b8:	subs	r2, r0, #0
   180bc:	blt	180d8 <dcngettext@plt+0x70c0>
   180c0:	orr	r2, r2, #1
   180c4:	mov	r1, #2
   180c8:	mov	r0, r5
   180cc:	bl	10f94 <fcntl64@plt>
   180d0:	cmn	r0, #1
   180d4:	bne	18068 <dcngettext@plt+0x7050>
   180d8:	bl	10f28 <__errno_location@plt>
   180dc:	mov	r6, r0
   180e0:	mov	r0, r5
   180e4:	ldr	r7, [r6]
   180e8:	mvn	r5, #0
   180ec:	bl	1100c <close@plt>
   180f0:	str	r7, [r6]
   180f4:	b	18068 <dcngettext@plt+0x7050>
   180f8:	ldr	r2, [sp, #40]	; 0x28
   180fc:	bl	10f94 <fcntl64@plt>
   18100:	mov	r5, r0
   18104:	b	18068 <dcngettext@plt+0x7050>
   18108:	bl	10f28 <__errno_location@plt>
   1810c:	ldr	r3, [r0]
   18110:	cmp	r3, #22
   18114:	bne	18060 <dcngettext@plt+0x7048>
   18118:	mov	r2, r7
   1811c:	mov	r0, r8
   18120:	mov	r1, #0
   18124:	bl	18000 <dcngettext@plt+0x6fe8>
   18128:	subs	r5, r0, #0
   1812c:	mvnge	r3, #0
   18130:	strge	r3, [r6]
   18134:	bge	180ac <dcngettext@plt+0x7094>
   18138:	b	18068 <dcngettext@plt+0x7050>
   1813c:	bl	10e38 <__stack_chk_fail@plt>
   18140:	andeq	r9, r2, r8, lsl #30
   18144:	andeq	r0, r0, r6, lsl #8
   18148:			; <UNDEFINED> instruction: 0x0002a2b8
   1814c:	push	{r4, lr}
   18150:	subs	r4, r0, #0
   18154:	sub	sp, sp, #8
   18158:	beq	18174 <dcngettext@plt+0x715c>
   1815c:	bl	10ec8 <__freading@plt>
   18160:	cmp	r0, #0
   18164:	beq	18174 <dcngettext@plt+0x715c>
   18168:	ldr	r3, [r4]
   1816c:	tst	r3, #256	; 0x100
   18170:	bne	18184 <dcngettext@plt+0x716c>
   18174:	mov	r0, r4
   18178:	add	sp, sp, #8
   1817c:	pop	{r4, lr}
   18180:	b	10dd8 <fflush@plt>
   18184:	mov	r3, #1
   18188:	str	r3, [sp]
   1818c:	mov	r2, #0
   18190:	mov	r3, #0
   18194:	mov	r0, r4
   18198:	bl	181ac <dcngettext@plt+0x7194>
   1819c:	mov	r0, r4
   181a0:	add	sp, sp, #8
   181a4:	pop	{r4, lr}
   181a8:	b	10dd8 <fflush@plt>
   181ac:	push	{r4, r5, r6, r7, r8, lr}
   181b0:	sub	sp, sp, #8
   181b4:	ldmib	r0, {ip, lr}
   181b8:	mov	r4, r0
   181bc:	ldr	r5, [sp, #32]
   181c0:	cmp	lr, ip
   181c4:	beq	181dc <dcngettext@plt+0x71c4>
   181c8:	str	r5, [sp, #32]
   181cc:	mov	r0, r4
   181d0:	add	sp, sp, #8
   181d4:	pop	{r4, r5, r6, r7, r8, lr}
   181d8:	b	10f88 <fseeko64@plt>
   181dc:	ldr	lr, [r0, #20]
   181e0:	ldr	ip, [r0, #16]
   181e4:	cmp	lr, ip
   181e8:	bne	181c8 <dcngettext@plt+0x71b0>
   181ec:	ldr	r8, [r0, #36]	; 0x24
   181f0:	cmp	r8, #0
   181f4:	bne	181c8 <dcngettext@plt+0x71b0>
   181f8:	mov	r6, r2
   181fc:	mov	r7, r3
   18200:	bl	10f64 <fileno@plt>
   18204:	mov	r2, r6
   18208:	mov	r3, r7
   1820c:	str	r5, [sp]
   18210:	bl	10e74 <lseek64@plt>
   18214:	mvn	r3, #0
   18218:	mvn	r2, #0
   1821c:	cmp	r1, r3
   18220:	cmpeq	r0, r2
   18224:	beq	18244 <dcngettext@plt+0x722c>
   18228:	ldr	r3, [r4]
   1822c:	strd	r0, [r4, #80]	; 0x50
   18230:	mov	r0, r8
   18234:	bic	r3, r3, #16
   18238:	str	r3, [r4]
   1823c:	add	sp, sp, #8
   18240:	pop	{r4, r5, r6, r7, r8, pc}
   18244:	mvn	r0, #0
   18248:	b	1823c <dcngettext@plt+0x7224>
   1824c:	push	{r4, r5, r6, r7, r8, lr}
   18250:	subs	r7, r0, #0
   18254:	ldr	r5, [pc, #108]	; 182c8 <dcngettext@plt+0x72b0>
   18258:	sub	sp, sp, #8
   1825c:	mov	r8, r1
   18260:	ldr	r1, [r5]
   18264:	moveq	r7, sp
   18268:	str	r1, [sp, #4]
   1826c:	mov	r0, r7
   18270:	mov	r1, r8
   18274:	mov	r6, r2
   18278:	bl	10e98 <mbrtowc@plt>
   1827c:	cmp	r6, #0
   18280:	cmnne	r0, #3
   18284:	mov	r4, r0
   18288:	bhi	182a8 <dcngettext@plt+0x7290>
   1828c:	ldr	r2, [sp, #4]
   18290:	ldr	r3, [r5]
   18294:	mov	r0, r4
   18298:	cmp	r2, r3
   1829c:	bne	182c4 <dcngettext@plt+0x72ac>
   182a0:	add	sp, sp, #8
   182a4:	pop	{r4, r5, r6, r7, r8, pc}
   182a8:	mov	r0, #0
   182ac:	bl	18340 <dcngettext@plt+0x7328>
   182b0:	cmp	r0, #0
   182b4:	moveq	r4, #1
   182b8:	ldrbeq	r3, [r8]
   182bc:	streq	r3, [r7]
   182c0:	b	1828c <dcngettext@plt+0x7274>
   182c4:	bl	10e38 <__stack_chk_fail@plt>
   182c8:	andeq	r9, r2, r8, lsl #30
   182cc:	push	{r4, r5, r6, lr}
   182d0:	mov	r4, r0
   182d4:	bl	10e8c <__fpending@plt>
   182d8:	ldr	r5, [r4]
   182dc:	and	r5, r5, #32
   182e0:	mov	r6, r0
   182e4:	mov	r0, r4
   182e8:	bl	17f60 <dcngettext@plt+0x6f48>
   182ec:	cmp	r5, #0
   182f0:	mov	r4, r0
   182f4:	bne	18320 <dcngettext@plt+0x7308>
   182f8:	cmp	r0, #0
   182fc:	beq	18318 <dcngettext@plt+0x7300>
   18300:	cmp	r6, #0
   18304:	bne	18338 <dcngettext@plt+0x7320>
   18308:	bl	10f28 <__errno_location@plt>
   1830c:	ldr	r4, [r0]
   18310:	subs	r4, r4, #9
   18314:	mvnne	r4, #0
   18318:	mov	r0, r4
   1831c:	pop	{r4, r5, r6, pc}
   18320:	cmp	r0, #0
   18324:	bne	18338 <dcngettext@plt+0x7320>
   18328:	bl	10f28 <__errno_location@plt>
   1832c:	str	r4, [r0]
   18330:	mvn	r4, #0
   18334:	b	18318 <dcngettext@plt+0x7300>
   18338:	mvn	r4, #0
   1833c:	b	18318 <dcngettext@plt+0x7300>
   18340:	push	{r4, lr}
   18344:	mov	r1, #0
   18348:	bl	10fac <setlocale@plt>
   1834c:	subs	r4, r0, #0
   18350:	beq	1837c <dcngettext@plt+0x7364>
   18354:	ldr	r1, [pc, #40]	; 18384 <dcngettext@plt+0x736c>
   18358:	bl	10dc0 <strcmp@plt>
   1835c:	cmp	r0, #0
   18360:	popeq	{r4, pc}
   18364:	mov	r0, r4
   18368:	ldr	r1, [pc, #24]	; 18388 <dcngettext@plt+0x7370>
   1836c:	bl	10dc0 <strcmp@plt>
   18370:	adds	r0, r0, #0
   18374:	movne	r0, #1
   18378:	pop	{r4, pc}
   1837c:	mov	r0, #1
   18380:	pop	{r4, pc}
   18384:	andeq	r9, r1, ip, lsr r9
   18388:	andeq	r9, r1, r0, asr #18
   1838c:	push	{r4, lr}
   18390:	mov	r0, #14
   18394:	bl	10fc4 <nl_langinfo@plt>
   18398:	cmp	r0, #0
   1839c:	beq	183b4 <dcngettext@plt+0x739c>
   183a0:	ldrb	r2, [r0]
   183a4:	ldr	r3, [pc, #16]	; 183bc <dcngettext@plt+0x73a4>
   183a8:	cmp	r2, #0
   183ac:	moveq	r0, r3
   183b0:	pop	{r4, pc}
   183b4:	ldr	r0, [pc]	; 183bc <dcngettext@plt+0x73a4>
   183b8:	pop	{r4, pc}
   183bc:	andeq	r9, r1, r8, asr #18
   183c0:	subs	r2, r1, #1
   183c4:	bxeq	lr
   183c8:	bcc	185a0 <dcngettext@plt+0x7588>
   183cc:	cmp	r0, r1
   183d0:	bls	18584 <dcngettext@plt+0x756c>
   183d4:	tst	r1, r2
   183d8:	beq	18590 <dcngettext@plt+0x7578>
   183dc:	clz	r3, r0
   183e0:	clz	r2, r1
   183e4:	sub	r3, r2, r3
   183e8:	rsbs	r3, r3, #31
   183ec:	addne	r3, r3, r3, lsl #1
   183f0:	mov	r2, #0
   183f4:	addne	pc, pc, r3, lsl #2
   183f8:	nop			; (mov r0, r0)
   183fc:	cmp	r0, r1, lsl #31
   18400:	adc	r2, r2, r2
   18404:	subcs	r0, r0, r1, lsl #31
   18408:	cmp	r0, r1, lsl #30
   1840c:	adc	r2, r2, r2
   18410:	subcs	r0, r0, r1, lsl #30
   18414:	cmp	r0, r1, lsl #29
   18418:	adc	r2, r2, r2
   1841c:	subcs	r0, r0, r1, lsl #29
   18420:	cmp	r0, r1, lsl #28
   18424:	adc	r2, r2, r2
   18428:	subcs	r0, r0, r1, lsl #28
   1842c:	cmp	r0, r1, lsl #27
   18430:	adc	r2, r2, r2
   18434:	subcs	r0, r0, r1, lsl #27
   18438:	cmp	r0, r1, lsl #26
   1843c:	adc	r2, r2, r2
   18440:	subcs	r0, r0, r1, lsl #26
   18444:	cmp	r0, r1, lsl #25
   18448:	adc	r2, r2, r2
   1844c:	subcs	r0, r0, r1, lsl #25
   18450:	cmp	r0, r1, lsl #24
   18454:	adc	r2, r2, r2
   18458:	subcs	r0, r0, r1, lsl #24
   1845c:	cmp	r0, r1, lsl #23
   18460:	adc	r2, r2, r2
   18464:	subcs	r0, r0, r1, lsl #23
   18468:	cmp	r0, r1, lsl #22
   1846c:	adc	r2, r2, r2
   18470:	subcs	r0, r0, r1, lsl #22
   18474:	cmp	r0, r1, lsl #21
   18478:	adc	r2, r2, r2
   1847c:	subcs	r0, r0, r1, lsl #21
   18480:	cmp	r0, r1, lsl #20
   18484:	adc	r2, r2, r2
   18488:	subcs	r0, r0, r1, lsl #20
   1848c:	cmp	r0, r1, lsl #19
   18490:	adc	r2, r2, r2
   18494:	subcs	r0, r0, r1, lsl #19
   18498:	cmp	r0, r1, lsl #18
   1849c:	adc	r2, r2, r2
   184a0:	subcs	r0, r0, r1, lsl #18
   184a4:	cmp	r0, r1, lsl #17
   184a8:	adc	r2, r2, r2
   184ac:	subcs	r0, r0, r1, lsl #17
   184b0:	cmp	r0, r1, lsl #16
   184b4:	adc	r2, r2, r2
   184b8:	subcs	r0, r0, r1, lsl #16
   184bc:	cmp	r0, r1, lsl #15
   184c0:	adc	r2, r2, r2
   184c4:	subcs	r0, r0, r1, lsl #15
   184c8:	cmp	r0, r1, lsl #14
   184cc:	adc	r2, r2, r2
   184d0:	subcs	r0, r0, r1, lsl #14
   184d4:	cmp	r0, r1, lsl #13
   184d8:	adc	r2, r2, r2
   184dc:	subcs	r0, r0, r1, lsl #13
   184e0:	cmp	r0, r1, lsl #12
   184e4:	adc	r2, r2, r2
   184e8:	subcs	r0, r0, r1, lsl #12
   184ec:	cmp	r0, r1, lsl #11
   184f0:	adc	r2, r2, r2
   184f4:	subcs	r0, r0, r1, lsl #11
   184f8:	cmp	r0, r1, lsl #10
   184fc:	adc	r2, r2, r2
   18500:	subcs	r0, r0, r1, lsl #10
   18504:	cmp	r0, r1, lsl #9
   18508:	adc	r2, r2, r2
   1850c:	subcs	r0, r0, r1, lsl #9
   18510:	cmp	r0, r1, lsl #8
   18514:	adc	r2, r2, r2
   18518:	subcs	r0, r0, r1, lsl #8
   1851c:	cmp	r0, r1, lsl #7
   18520:	adc	r2, r2, r2
   18524:	subcs	r0, r0, r1, lsl #7
   18528:	cmp	r0, r1, lsl #6
   1852c:	adc	r2, r2, r2
   18530:	subcs	r0, r0, r1, lsl #6
   18534:	cmp	r0, r1, lsl #5
   18538:	adc	r2, r2, r2
   1853c:	subcs	r0, r0, r1, lsl #5
   18540:	cmp	r0, r1, lsl #4
   18544:	adc	r2, r2, r2
   18548:	subcs	r0, r0, r1, lsl #4
   1854c:	cmp	r0, r1, lsl #3
   18550:	adc	r2, r2, r2
   18554:	subcs	r0, r0, r1, lsl #3
   18558:	cmp	r0, r1, lsl #2
   1855c:	adc	r2, r2, r2
   18560:	subcs	r0, r0, r1, lsl #2
   18564:	cmp	r0, r1, lsl #1
   18568:	adc	r2, r2, r2
   1856c:	subcs	r0, r0, r1, lsl #1
   18570:	cmp	r0, r1
   18574:	adc	r2, r2, r2
   18578:	subcs	r0, r0, r1
   1857c:	mov	r0, r2
   18580:	bx	lr
   18584:	moveq	r0, #1
   18588:	movne	r0, #0
   1858c:	bx	lr
   18590:	clz	r2, r1
   18594:	rsb	r2, r2, #31
   18598:	lsr	r0, r0, r2
   1859c:	bx	lr
   185a0:	cmp	r0, #0
   185a4:	mvnne	r0, #0
   185a8:	b	18608 <dcngettext@plt+0x75f0>
   185ac:	cmp	r1, #0
   185b0:	beq	185a0 <dcngettext@plt+0x7588>
   185b4:	push	{r0, r1, lr}
   185b8:	bl	183c0 <dcngettext@plt+0x73a8>
   185bc:	pop	{r1, r2, lr}
   185c0:	mul	r3, r2, r0
   185c4:	sub	r1, r1, r3
   185c8:	bx	lr
   185cc:	cmp	r3, #0
   185d0:	cmpeq	r2, #0
   185d4:	bne	185ec <dcngettext@plt+0x75d4>
   185d8:	cmp	r1, #0
   185dc:	cmpeq	r0, #0
   185e0:	mvnne	r1, #0
   185e4:	mvnne	r0, #0
   185e8:	b	18608 <dcngettext@plt+0x75f0>
   185ec:	sub	sp, sp, #8
   185f0:	push	{sp, lr}
   185f4:	bl	18618 <dcngettext@plt+0x7600>
   185f8:	ldr	lr, [sp, #4]
   185fc:	add	sp, sp, #8
   18600:	pop	{r2, r3}
   18604:	bx	lr
   18608:	push	{r1, lr}
   1860c:	mov	r0, #8
   18610:	bl	10da8 <raise@plt>
   18614:	pop	{r1, pc}
   18618:	cmp	r1, r3
   1861c:	cmpeq	r0, r2
   18620:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18624:	mov	r4, r0
   18628:	movcc	r0, #0
   1862c:	mov	r5, r1
   18630:	ldr	lr, [sp, #36]	; 0x24
   18634:	movcc	r1, r0
   18638:	bcc	18734 <dcngettext@plt+0x771c>
   1863c:	cmp	r3, #0
   18640:	clzeq	ip, r2
   18644:	clzne	ip, r3
   18648:	addeq	ip, ip, #32
   1864c:	cmp	r5, #0
   18650:	clzeq	r1, r4
   18654:	addeq	r1, r1, #32
   18658:	clzne	r1, r5
   1865c:	sub	ip, ip, r1
   18660:	sub	sl, ip, #32
   18664:	lsl	r9, r3, ip
   18668:	rsb	fp, ip, #32
   1866c:	orr	r9, r9, r2, lsl sl
   18670:	orr	r9, r9, r2, lsr fp
   18674:	lsl	r8, r2, ip
   18678:	cmp	r5, r9
   1867c:	cmpeq	r4, r8
   18680:	movcc	r0, #0
   18684:	movcc	r1, r0
   18688:	bcc	186a4 <dcngettext@plt+0x768c>
   1868c:	mov	r0, #1
   18690:	subs	r4, r4, r8
   18694:	lsl	r1, r0, sl
   18698:	orr	r1, r1, r0, lsr fp
   1869c:	lsl	r0, r0, ip
   186a0:	sbc	r5, r5, r9
   186a4:	cmp	ip, #0
   186a8:	beq	18734 <dcngettext@plt+0x771c>
   186ac:	lsr	r6, r8, #1
   186b0:	orr	r6, r6, r9, lsl #31
   186b4:	lsr	r7, r9, #1
   186b8:	mov	r2, ip
   186bc:	b	186e0 <dcngettext@plt+0x76c8>
   186c0:	subs	r3, r4, r6
   186c4:	sbc	r8, r5, r7
   186c8:	adds	r3, r3, r3
   186cc:	adc	r8, r8, r8
   186d0:	adds	r4, r3, #1
   186d4:	adc	r5, r8, #0
   186d8:	subs	r2, r2, #1
   186dc:	beq	186fc <dcngettext@plt+0x76e4>
   186e0:	cmp	r5, r7
   186e4:	cmpeq	r4, r6
   186e8:	bcs	186c0 <dcngettext@plt+0x76a8>
   186ec:	adds	r4, r4, r4
   186f0:	adc	r5, r5, r5
   186f4:	subs	r2, r2, #1
   186f8:	bne	186e0 <dcngettext@plt+0x76c8>
   186fc:	lsr	r3, r4, ip
   18700:	orr	r3, r3, r5, lsl fp
   18704:	lsr	r2, r5, ip
   18708:	orr	r3, r3, r5, lsr sl
   1870c:	adds	r0, r0, r4
   18710:	mov	r4, r3
   18714:	lsl	r3, r2, ip
   18718:	orr	r3, r3, r4, lsl sl
   1871c:	lsl	ip, r4, ip
   18720:	orr	r3, r3, r4, lsr fp
   18724:	adc	r1, r1, r5
   18728:	subs	r0, r0, ip
   1872c:	mov	r5, r2
   18730:	sbc	r1, r1, r3
   18734:	cmp	lr, #0
   18738:	strdne	r4, [lr]
   1873c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18740:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18744:	mov	r7, r0
   18748:	ldr	r6, [pc, #72]	; 18798 <dcngettext@plt+0x7780>
   1874c:	ldr	r5, [pc, #72]	; 1879c <dcngettext@plt+0x7784>
   18750:	add	r6, pc, r6
   18754:	add	r5, pc, r5
   18758:	sub	r6, r6, r5
   1875c:	mov	r8, r1
   18760:	mov	r9, r2
   18764:	bl	10d64 <fdopen@plt-0x20>
   18768:	asrs	r6, r6, #2
   1876c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18770:	mov	r4, #0
   18774:	add	r4, r4, #1
   18778:	ldr	r3, [r5], #4
   1877c:	mov	r2, r9
   18780:	mov	r1, r8
   18784:	mov	r0, r7
   18788:	blx	r3
   1878c:	cmp	r6, r4
   18790:	bne	18774 <dcngettext@plt+0x775c>
   18794:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18798:	andeq	r1, r1, ip, lsr #15
   1879c:	andeq	r1, r1, r4, lsr #15
   187a0:	bx	lr
   187a4:	ldr	r3, [pc, #12]	; 187b8 <dcngettext@plt+0x77a0>
   187a8:	mov	r1, #0
   187ac:	add	r3, pc, r3
   187b0:	ldr	r2, [r3]
   187b4:	b	10f34 <__cxa_atexit@plt>
   187b8:	andeq	r1, r1, r0, asr #18

Disassembly of section .fini:

000187bc <.fini>:
   187bc:	push	{r3, lr}
   187c0:	pop	{r3, pc}
