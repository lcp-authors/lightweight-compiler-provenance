
raspbian-preinstalled/luajit:     file format elf32-littlearm


Disassembly of section .init:

00012c08 <_init@@Base>:
   12c08:	push	{r3, lr}
   12c0c:	bl	133ec <_start@@Base+0x3c>
   12c10:	pop	{r3, pc}

Disassembly of section .plt:

00012c14 <strstr@plt-0x14>:
   12c14:	push	{lr}		; (str lr, [sp, #-4]!)
   12c18:	ldr	lr, [pc, #4]	; 12c24 <_init@@Base+0x1c>
   12c1c:	add	lr, pc, lr
   12c20:	ldr	pc, [lr, #8]!
   12c24:	ldrdeq	r1, [r7], -ip

00012c28 <strstr@plt>:
   12c28:	add	ip, pc, #0, 12
   12c2c:	add	ip, ip, #462848	; 0x71000
   12c30:	ldr	pc, [ip, #988]!	; 0x3dc

00012c34 <raise@plt>:
   12c34:	add	ip, pc, #0, 12
   12c38:	add	ip, ip, #462848	; 0x71000
   12c3c:	ldr	pc, [ip, #980]!	; 0x3d4

00012c40 <gmtime_r@plt>:
   12c40:	add	ip, pc, #0, 12
   12c44:	add	ip, ip, #462848	; 0x71000
   12c48:	ldr	pc, [ip, #972]!	; 0x3cc

00012c4c <log@plt>:
   12c4c:	add	ip, pc, #0, 12
   12c50:	add	ip, ip, #462848	; 0x71000
   12c54:	ldr	pc, [ip, #964]!	; 0x3c4

00012c58 <setitimer@plt>:
   12c58:	add	ip, pc, #0, 12
   12c5c:	add	ip, ip, #462848	; 0x71000
   12c60:	ldr	pc, [ip, #956]!	; 0x3bc

00012c64 <strcmp@plt>:
   12c64:	add	ip, pc, #0, 12
   12c68:	add	ip, ip, #462848	; 0x71000
   12c6c:	ldr	pc, [ip, #948]!	; 0x3b4

00012c70 <mktime@plt>:
   12c70:	add	ip, pc, #0, 12
   12c74:	add	ip, ip, #462848	; 0x71000
   12c78:	ldr	pc, [ip, #940]!	; 0x3ac

00012c7c <fflush@plt>:
   12c7c:	add	ip, pc, #0, 12
   12c80:	add	ip, ip, #462848	; 0x71000
   12c84:	ldr	pc, [ip, #932]!	; 0x3a4

00012c88 <mprotect@plt>:
   12c88:	add	ip, pc, #0, 12
   12c8c:	add	ip, ip, #462848	; 0x71000
   12c90:	ldr	pc, [ip, #924]!	; 0x39c

00012c94 <memmove@plt>:
   12c94:	add	ip, pc, #0, 12
   12c98:	add	ip, ip, #462848	; 0x71000
   12c9c:	ldr	pc, [ip, #916]!	; 0x394

00012ca0 <fgets@plt>:
   12ca0:	add	ip, pc, #0, 12
   12ca4:	add	ip, ip, #462848	; 0x71000
   12ca8:	ldr	pc, [ip, #908]!	; 0x38c

00012cac <ferror@plt>:
   12cac:	add	ip, pc, #0, 12
   12cb0:	add	ip, ip, #462848	; 0x71000
   12cb4:	ldr	pc, [ip, #900]!	; 0x384

00012cb8 <memcpy@plt>:
   12cb8:	add	ip, pc, #0, 12
   12cbc:	add	ip, ip, #462848	; 0x71000
   12cc0:	ldr	pc, [ip, #892]!	; 0x37c

00012cc4 <mmap64@plt>:
   12cc4:	add	ip, pc, #0, 12
   12cc8:	add	ip, ip, #462848	; 0x71000
   12ccc:	ldr	pc, [ip, #884]!	; 0x374

00012cd0 <signal@plt>:
   12cd0:	add	ip, pc, #0, 12
   12cd4:	add	ip, ip, #462848	; 0x71000
   12cd8:	ldr	pc, [ip, #876]!	; 0x36c

00012cdc <time@plt>:
   12cdc:	add	ip, pc, #0, 12
   12ce0:	add	ip, ip, #462848	; 0x71000
   12ce4:	ldr	pc, [ip, #868]!	; 0x364

00012ce8 <pow@plt>:
   12ce8:	add	ip, pc, #0, 12
   12cec:	add	ip, ip, #462848	; 0x71000
   12cf0:	ldr	pc, [ip, #860]!	; 0x35c

00012cf4 <_IO_getc@plt>:
   12cf4:	add	ip, pc, #0, 12
   12cf8:	add	ip, ip, #462848	; 0x71000
   12cfc:	ldr	pc, [ip, #852]!	; 0x354

00012d00 <memcmp@plt>:
   12d00:	add	ip, pc, #0, 12
   12d04:	add	ip, ip, #462848	; 0x71000
   12d08:	ldr	pc, [ip, #844]!	; 0x34c

00012d0c <log2@plt>:
   12d0c:	add	ip, pc, #0, 12
   12d10:	add	ip, ip, #462848	; 0x71000
   12d14:	ldr	pc, [ip, #836]!	; 0x344

00012d18 <uname@plt>:
   12d18:	add	ip, pc, #0, 12
   12d1c:	add	ip, ip, #462848	; 0x71000
   12d20:	ldr	pc, [ip, #828]!	; 0x33c

00012d24 <dlclose@plt>:
   12d24:	add	ip, pc, #0, 12
   12d28:	add	ip, ip, #462848	; 0x71000
   12d2c:	ldr	pc, [ip, #820]!	; 0x334

00012d30 <dlerror@plt>:
   12d30:	add	ip, pc, #0, 12
   12d34:	add	ip, ip, #462848	; 0x71000
   12d38:	ldr	pc, [ip, #812]!	; 0x32c

00012d3c <localtime_r@plt>:
   12d3c:	add	ip, pc, #0, 12
   12d40:	add	ip, ip, #462848	; 0x71000
   12d44:	ldr	pc, [ip, #804]!	; 0x324

00012d48 <tmpfile64@plt>:
   12d48:	add	ip, pc, #0, 12
   12d4c:	add	ip, ip, #462848	; 0x71000
   12d50:	ldr	pc, [ip, #796]!	; 0x31c

00012d54 <sigaction@plt>:
   12d54:	add	ip, pc, #0, 12
   12d58:	add	ip, ip, #462848	; 0x71000
   12d5c:	ldr	pc, [ip, #788]!	; 0x314

00012d60 <_IO_putc@plt>:
   12d60:	add	ip, pc, #0, 12
   12d64:	add	ip, ip, #462848	; 0x71000
   12d68:	ldr	pc, [ip, #780]!	; 0x30c

00012d6c <fwrite@plt>:
   12d6c:	add	ip, pc, #0, 12
   12d70:	add	ip, ip, #462848	; 0x71000
   12d74:	ldr	pc, [ip, #772]!	; 0x304

00012d78 <strcpy@plt>:
   12d78:	add	ip, pc, #0, 12
   12d7c:	add	ip, ip, #462848	; 0x71000
   12d80:	ldr	pc, [ip, #764]!	; 0x2fc

00012d84 <dlopen@plt>:
   12d84:	add	ip, pc, #0, 12
   12d88:	add	ip, ip, #462848	; 0x71000
   12d8c:	ldr	pc, [ip, #756]!	; 0x2f4

00012d90 <fread@plt>:
   12d90:	add	ip, pc, #0, 12
   12d94:	add	ip, ip, #462848	; 0x71000
   12d98:	ldr	pc, [ip, #748]!	; 0x2ec

00012d9c <acos@plt>:
   12d9c:	add	ip, pc, #0, 12
   12da0:	add	ip, ip, #462848	; 0x71000
   12da4:	ldr	pc, [ip, #740]!	; 0x2e4

00012da8 <_Unwind_VRS_Get@plt>:
   12da8:	add	ip, pc, #0, 12
   12dac:	add	ip, ip, #462848	; 0x71000
   12db0:	ldr	pc, [ip, #732]!	; 0x2dc

00012db4 <getenv@plt>:
   12db4:	add	ip, pc, #0, 12
   12db8:	add	ip, ip, #462848	; 0x71000
   12dbc:	ldr	pc, [ip, #724]!	; 0x2d4

00012dc0 <mkstemp64@plt>:
   12dc0:	add	ip, pc, #0, 12
   12dc4:	add	ip, ip, #462848	; 0x71000
   12dc8:	ldr	pc, [ip, #716]!	; 0x2cc

00012dcc <log10@plt>:
   12dcc:	add	ip, pc, #0, 12
   12dd0:	add	ip, ip, #462848	; 0x71000
   12dd4:	ldr	pc, [ip, #708]!	; 0x2c4

00012dd8 <__libc_start_main@plt>:
   12dd8:	add	ip, pc, #0, 12
   12ddc:	add	ip, ip, #462848	; 0x71000
   12de0:	ldr	pc, [ip, #700]!	; 0x2bc

00012de4 <strerror@plt>:
   12de4:	add	ip, pc, #0, 12
   12de8:	add	ip, ip, #462848	; 0x71000
   12dec:	ldr	pc, [ip, #692]!	; 0x2b4

00012df0 <system@plt>:
   12df0:	add	ip, pc, #0, 12
   12df4:	add	ip, ip, #462848	; 0x71000
   12df8:	ldr	pc, [ip, #684]!	; 0x2ac

00012dfc <strftime@plt>:
   12dfc:	add	ip, pc, #0, 12
   12e00:	add	ip, ip, #462848	; 0x71000
   12e04:	ldr	pc, [ip, #676]!	; 0x2a4

00012e08 <modf@plt>:
   12e08:	add	ip, pc, #0, 12
   12e0c:	add	ip, ip, #462848	; 0x71000
   12e10:	ldr	pc, [ip, #668]!	; 0x29c

00012e14 <__gmon_start__@plt>:
   12e14:	add	ip, pc, #0, 12
   12e18:	add	ip, ip, #462848	; 0x71000
   12e1c:	ldr	pc, [ip, #660]!	; 0x294

00012e20 <__gnu_unwind_frame@plt>:
   12e20:	add	ip, pc, #0, 12
   12e24:	add	ip, ip, #462848	; 0x71000
   12e28:	ldr	pc, [ip, #652]!	; 0x28c

00012e2c <clock@plt>:
   12e2c:	add	ip, pc, #0, 12
   12e30:	add	ip, ip, #462848	; 0x71000
   12e34:	ldr	pc, [ip, #644]!	; 0x284

00012e38 <rename@plt>:
   12e38:	add	ip, pc, #0, 12
   12e3c:	add	ip, ip, #462848	; 0x71000
   12e40:	ldr	pc, [ip, #636]!	; 0x27c

00012e44 <exit@plt>:
   12e44:	add	ip, pc, #0, 12
   12e48:	add	ip, ip, #462848	; 0x71000
   12e4c:	ldr	pc, [ip, #628]!	; 0x274

00012e50 <sin@plt>:
   12e50:	add	ip, pc, #0, 12
   12e54:	add	ip, ip, #462848	; 0x71000
   12e58:	ldr	pc, [ip, #620]!	; 0x26c

00012e5c <feof@plt>:
   12e5c:	add	ip, pc, #0, 12
   12e60:	add	ip, ip, #462848	; 0x71000
   12e64:	ldr	pc, [ip, #612]!	; 0x264

00012e68 <exp2@plt>:
   12e68:	add	ip, pc, #0, 12
   12e6c:	add	ip, ip, #462848	; 0x71000
   12e70:	ldr	pc, [ip, #604]!	; 0x25c

00012e74 <strtoul@plt>:
   12e74:	add	ip, pc, #0, 12
   12e78:	add	ip, ip, #462848	; 0x71000
   12e7c:	ldr	pc, [ip, #596]!	; 0x254

00012e80 <strlen@plt>:
   12e80:	add	ip, pc, #0, 12
   12e84:	add	ip, ip, #462848	; 0x71000
   12e88:	ldr	pc, [ip, #588]!	; 0x24c

00012e8c <strchr@plt>:
   12e8c:	add	ip, pc, #0, 12
   12e90:	add	ip, ip, #462848	; 0x71000
   12e94:	ldr	pc, [ip, #580]!	; 0x244

00012e98 <ungetc@plt>:
   12e98:	add	ip, pc, #0, 12
   12e9c:	add	ip, ip, #462848	; 0x71000
   12ea0:	ldr	pc, [ip, #572]!	; 0x23c

00012ea4 <sqrt@plt>:
   12ea4:	add	ip, pc, #0, 12
   12ea8:	add	ip, ip, #462848	; 0x71000
   12eac:	ldr	pc, [ip, #564]!	; 0x234

00012eb0 <__errno_location@plt>:
   12eb0:	add	ip, pc, #0, 12
   12eb4:	add	ip, ip, #462848	; 0x71000
   12eb8:	ldr	pc, [ip, #556]!	; 0x22c

00012ebc <setvbuf@plt>:
   12ebc:	add	ip, pc, #0, 12
   12ec0:	add	ip, ip, #462848	; 0x71000
   12ec4:	ldr	pc, [ip, #548]!	; 0x224

00012ec8 <tan@plt>:
   12ec8:	add	ip, pc, #0, 12
   12ecc:	add	ip, ip, #462848	; 0x71000
   12ed0:	ldr	pc, [ip, #540]!	; 0x21c

00012ed4 <memset@plt>:
   12ed4:	add	ip, pc, #0, 12
   12ed8:	add	ip, ip, #462848	; 0x71000
   12edc:	ldr	pc, [ip, #532]!	; 0x214

00012ee0 <tanh@plt>:
   12ee0:	add	ip, pc, #0, 12
   12ee4:	add	ip, ip, #462848	; 0x71000
   12ee8:	ldr	pc, [ip, #524]!	; 0x20c

00012eec <strncpy@plt>:
   12eec:	add	ip, pc, #0, 12
   12ef0:	add	ip, ip, #462848	; 0x71000
   12ef4:	ldr	pc, [ip, #516]!	; 0x204

00012ef8 <fscanf@plt>:
   12ef8:	add	ip, pc, #0, 12
   12efc:	add	ip, ip, #462848	; 0x71000
   12f00:	ldr	pc, [ip, #508]!	; 0x1fc

00012f04 <_Unwind_Complete@plt>:
   12f04:	add	ip, pc, #0, 12
   12f08:	add	ip, ip, #462848	; 0x71000
   12f0c:	ldr	pc, [ip, #500]!	; 0x1f4

00012f10 <atan@plt>:
   12f10:	add	ip, pc, #0, 12
   12f14:	add	ip, ip, #462848	; 0x71000
   12f18:	ldr	pc, [ip, #492]!	; 0x1ec

00012f1c <asin@plt>:
   12f1c:	add	ip, pc, #0, 12
   12f20:	add	ip, ip, #462848	; 0x71000
   12f24:	ldr	pc, [ip, #484]!	; 0x1e4

00012f28 <difftime@plt>:
   12f28:	add	ip, pc, #0, 12
   12f2c:	add	ip, ip, #462848	; 0x71000
   12f30:	ldr	pc, [ip, #476]!	; 0x1dc

00012f34 <cosh@plt>:
   12f34:	add	ip, pc, #0, 12
   12f38:	add	ip, ip, #462848	; 0x71000
   12f3c:	ldr	pc, [ip, #468]!	; 0x1d4

00012f40 <memchr@plt>:
   12f40:	add	ip, pc, #0, 12
   12f44:	add	ip, ip, #462848	; 0x71000
   12f48:	ldr	pc, [ip, #460]!	; 0x1cc

00012f4c <fclose@plt>:
   12f4c:	add	ip, pc, #0, 12
   12f50:	add	ip, ip, #462848	; 0x71000
   12f54:	ldr	pc, [ip, #452]!	; 0x1c4

00012f58 <frexp@plt>:
   12f58:	add	ip, pc, #0, 12
   12f5c:	add	ip, ip, #462848	; 0x71000
   12f60:	ldr	pc, [ip, #444]!	; 0x1bc

00012f64 <fseeko64@plt>:
   12f64:	add	ip, pc, #0, 12
   12f68:	add	ip, ip, #462848	; 0x71000
   12f6c:	ldr	pc, [ip, #436]!	; 0x1b4

00012f70 <munmap@plt>:
   12f70:	add	ip, pc, #0, 12
   12f74:	add	ip, ip, #462848	; 0x71000
   12f78:	ldr	pc, [ip, #428]!	; 0x1ac

00012f7c <setlocale@plt>:
   12f7c:	add	ip, pc, #0, 12
   12f80:	add	ip, ip, #462848	; 0x71000
   12f84:	ldr	pc, [ip, #420]!	; 0x1a4

00012f88 <sigemptyset@plt>:
   12f88:	add	ip, pc, #0, 12
   12f8c:	add	ip, ip, #462848	; 0x71000
   12f90:	ldr	pc, [ip, #412]!	; 0x19c

00012f94 <popen@plt>:
   12f94:	add	ip, pc, #0, 12
   12f98:	add	ip, ip, #462848	; 0x71000
   12f9c:	ldr	pc, [ip, #404]!	; 0x194

00012fa0 <strrchr@plt>:
   12fa0:	add	ip, pc, #0, 12
   12fa4:	add	ip, ip, #462848	; 0x71000
   12fa8:	ldr	pc, [ip, #396]!	; 0x18c

00012fac <fputc@plt>:
   12fac:	add	ip, pc, #0, 12
   12fb0:	add	ip, ip, #462848	; 0x71000
   12fb4:	ldr	pc, [ip, #388]!	; 0x184

00012fb8 <clearerr@plt>:
   12fb8:	add	ip, pc, #0, 12
   12fbc:	add	ip, ip, #462848	; 0x71000
   12fc0:	ldr	pc, [ip, #380]!	; 0x17c

00012fc4 <exp@plt>:
   12fc4:	add	ip, pc, #0, 12
   12fc8:	add	ip, ip, #462848	; 0x71000
   12fcc:	ldr	pc, [ip, #372]!	; 0x174

00012fd0 <remove@plt>:
   12fd0:	add	ip, pc, #0, 12
   12fd4:	add	ip, ip, #462848	; 0x71000
   12fd8:	ldr	pc, [ip, #364]!	; 0x16c

00012fdc <fopen64@plt>:
   12fdc:	add	ip, pc, #0, 12
   12fe0:	add	ip, ip, #462848	; 0x71000
   12fe4:	ldr	pc, [ip, #356]!	; 0x164

00012fe8 <_Unwind_VRS_Set@plt>:
   12fe8:	add	ip, pc, #0, 12
   12fec:	add	ip, ip, #462848	; 0x71000
   12ff0:	ldr	pc, [ip, #348]!	; 0x15c

00012ff4 <ldexp@plt>:
   12ff4:	add	ip, pc, #0, 12
   12ff8:	add	ip, ip, #462848	; 0x71000
   12ffc:	ldr	pc, [ip, #340]!	; 0x154

00013000 <fmod@plt>:
   13000:	add	ip, pc, #0, 12
   13004:	add	ip, ip, #462848	; 0x71000
   13008:	ldr	pc, [ip, #332]!	; 0x14c

0001300c <mremap@plt>:
   1300c:	add	ip, pc, #0, 12
   13010:	add	ip, ip, #462848	; 0x71000
   13014:	ldr	pc, [ip, #324]!	; 0x144

00013018 <sinh@plt>:
   13018:	add	ip, pc, #0, 12
   1301c:	add	ip, ip, #462848	; 0x71000
   13020:	ldr	pc, [ip, #316]!	; 0x13c

00013024 <_Unwind_DeleteException@plt>:
   13024:	add	ip, pc, #0, 12
   13028:	add	ip, ip, #462848	; 0x71000
   1302c:	ldr	pc, [ip, #308]!	; 0x134

00013030 <isatty@plt>:
   13030:	add	ip, pc, #0, 12
   13034:	add	ip, ip, #462848	; 0x71000
   13038:	ldr	pc, [ip, #300]!	; 0x12c

0001303c <fputs@plt>:
   1303c:	add	ip, pc, #0, 12
   13040:	add	ip, ip, #462848	; 0x71000
   13044:	ldr	pc, [ip, #292]!	; 0x124

00013048 <strncmp@plt>:
   13048:	add	ip, pc, #0, 12
   1304c:	add	ip, ip, #462848	; 0x71000
   13050:	ldr	pc, [ip, #284]!	; 0x11c

00013054 <abort@plt>:
   13054:	add	ip, pc, #0, 12
   13058:	add	ip, ip, #462848	; 0x71000
   1305c:	ldr	pc, [ip, #276]!	; 0x114

00013060 <close@plt>:
   13060:	add	ip, pc, #0, 12
   13064:	add	ip, ip, #462848	; 0x71000
   13068:	ldr	pc, [ip, #268]!	; 0x10c

0001306c <dlsym@plt>:
   1306c:	add	ip, pc, #0, 12
   13070:	add	ip, ip, #462848	; 0x71000
   13074:	ldr	pc, [ip, #260]!	; 0x104

00013078 <atan2@plt>:
   13078:	add	ip, pc, #0, 12
   1307c:	add	ip, ip, #462848	; 0x71000
   13080:	ldr	pc, [ip, #252]!	; 0xfc

00013084 <cos@plt>:
   13084:	add	ip, pc, #0, 12
   13088:	add	ip, ip, #462848	; 0x71000
   1308c:	ldr	pc, [ip, #244]!	; 0xf4

00013090 <ftello64@plt>:
   13090:	add	ip, pc, #0, 12
   13094:	add	ip, ip, #462848	; 0x71000
   13098:	ldr	pc, [ip, #236]!	; 0xec

0001309c <pclose@plt>:
   1309c:	add	ip, pc, #0, 12
   130a0:	add	ip, ip, #462848	; 0x71000
   130a4:	ldr	pc, [ip, #228]!	; 0xe4

Disassembly of section .text:

000130b0 <main@@Base-0x278>:
   130b0:	add	r1, r0, #2336	; 0x920
   130b4:	push	{r4, lr}
   130b8:	add	r1, r1, #12
   130bc:	ldr	r0, [r0, #80]	; 0x50
   130c0:	mov	r2, #11
   130c4:	bl	210d0 <luaL_where@@Base+0xfcc>
   130c8:	ldr	r3, [r0, #20]
   130cc:	mvn	ip, #13
   130d0:	push	{r4, lr}
   130d4:	add	lr, r3, #8
   130d8:	str	lr, [r0, #20]
   130dc:	stm	r3, {r1, ip}
   130e0:	mov	r1, #2
   130e4:	bl	20ff0 <luaL_where@@Base+0xeec>
   130e8:	push	{r4, lr}
   130ec:	mov	r4, r0
   130f0:	bl	12d30 <dlerror@plt>
   130f4:	mov	r1, r0
   130f8:	mov	r0, r4
   130fc:	bl	359a8 <lua_error@@Base+0x8>
   13100:	push	{r4, lr}
   13104:	mov	r1, #1
   13108:	ldr	r2, [pc]	; 13110 <pclose@plt+0x74>
   1310c:	bl	361d0 <luaL_argerror@@Base+0x8>
   13110:	andeq	r0, r0, r7, lsr #4
   13114:	push	{r7, lr}
   13118:	mov	r4, r0
   1311c:	ldr	lr, [r0, #16]
   13120:	ldr	r3, [r1, #4]
   13124:	ldr	ip, [pc, #148]	; 131c0 <pclose@plt+0x124>
   13128:	ldr	r7, [lr, #-8]
   1312c:	cmn	r3, #14
   13130:	mvnhi	r3, r3
   13134:	movls	r3, #13
   13138:	ldr	r5, [ip]
   1313c:	ldr	r0, [pc, #128]	; 131c4 <pclose@plt+0x128>
   13140:	ldrb	ip, [r7, #6]
   13144:	add	r3, r0, r3, lsl #2
   13148:	sub	sp, sp, #16
   1314c:	cmp	ip, #0
   13150:	add	r5, r5, r2
   13154:	ldr	r6, [r3, #-216]	; 0xffffff28
   13158:	bne	131ac <pclose@plt+0x110>
   1315c:	ldr	r3, [r4, #40]	; 0x28
   13160:	sub	r2, r1, lr
   13164:	bic	r3, r3, #3
   13168:	ldr	r0, [r7, #16]
   1316c:	ldr	r1, [r3, #8]
   13170:	add	r3, sp, #16
   13174:	sub	r0, r0, #64	; 0x40
   13178:	str	ip, [r3, #-4]!
   1317c:	asr	r2, r2, #3
   13180:	sub	r1, r1, #4
   13184:	bl	1d5ac <_start@@Base+0xa1fc>
   13188:	subs	r3, r0, #0
   1318c:	beq	131ac <pclose@plt+0x110>
   13190:	ldr	r1, [sp, #12]
   13194:	str	r6, [sp, #4]
   13198:	str	r1, [sp]
   1319c:	mov	r2, r5
   131a0:	mov	r0, r4
   131a4:	mov	r1, #241	; 0xf1
   131a8:	bl	201e0 <luaL_where@@Base+0xdc>
   131ac:	mov	r3, r6
   131b0:	mov	r2, r5
   131b4:	mov	r0, r4
   131b8:	mov	r1, #276	; 0x114
   131bc:	bl	201e0 <luaL_where@@Base+0xdc>
   131c0:	muleq	r8, ip, r1
   131c4:			; <UNDEFINED> instruction: 0x00070cb0
   131c8:	ldr	r2, [r0, #40]	; 0x28
   131cc:	push	{r4, lr}
   131d0:	bic	r2, r2, #3
   131d4:	ldr	lr, [r2, #8]
   131d8:	tst	lr, #3
   131dc:	beq	1321c <pclose@plt+0x180>
   131e0:	ldr	r2, [r1, #4]
   131e4:	mov	r3, r1
   131e8:	cmn	r2, #14
   131ec:	ldr	r1, [pc, #48]	; 13224 <pclose@plt+0x188>
   131f0:	mvnhi	r2, r2
   131f4:	movls	r2, #13
   131f8:	str	lr, [r3, #4]
   131fc:	add	r2, r1, r2, lsl #2
   13200:	mov	r1, r3
   13204:	ldr	r2, [r2, #-216]	; 0xffffff28
   13208:	str	r0, [r1], #8
   1320c:	str	r1, [r0, #16]
   13210:	str	r1, [r0, #20]
   13214:	mov	r1, #214	; 0xd6
   13218:	bl	201e0 <luaL_where@@Base+0xdc>
   1321c:	ldr	r2, [pc, #4]	; 13228 <pclose@plt+0x18c>
   13220:	bl	13114 <pclose@plt+0x78>
   13224:			; <UNDEFINED> instruction: 0x00070cb0
   13228:	andeq	r0, r0, lr, lsl #3
   1322c:	ldr	r2, [r0, #48]	; 0x30
   13230:	push	{r4, lr}
   13234:	mov	r4, r0
   13238:	ldr	r3, [r2]
   1323c:	ldr	r0, [r2, #12]
   13240:	sub	r1, r1, r3
   13244:	asr	r1, r1, #4
   13248:	bl	3cfec <luaL_typerror@@Base+0x6c80>
   1324c:	ldr	r2, [pc, #12]	; 13260 <pclose@plt+0x1c4>
   13250:	mov	r1, #0
   13254:	add	r3, r0, #16
   13258:	mov	r0, r4
   1325c:	bl	4611c <luaL_error@@Base+0x30>
   13260:	andeq	r0, r0, lr, lsl #27
   13264:	sub	r2, r2, r0
   13268:	push	{r4, lr}
   1326c:	mov	r4, r1
   13270:	ldr	r0, [r1]
   13274:	asr	r1, r2, #4
   13278:	bl	3cfec <luaL_typerror@@Base+0x6c80>
   1327c:	mov	r1, #3168	; 0xc60
   13280:	add	r2, r0, #16
   13284:	ldr	r0, [r4]
   13288:	bl	4a618 <luaL_error@@Base+0x452c>
   1328c:	push	{r4, lr}
   13290:	ldr	r0, [r0, #4]
   13294:	ldr	r1, [pc]	; 1329c <pclose@plt+0x200>
   13298:	bl	4f034 <luaL_error@@Base+0x8f48>
   1329c:	andeq	r0, r0, r2, asr r9
   132a0:	subs	ip, r1, #0
   132a4:	push	{lr}		; (str lr, [sp, #-4]!)
   132a8:	sub	sp, sp, #12
   132ac:	bne	132c0 <pclose@plt+0x224>
   132b0:	str	r3, [sp]
   132b4:	mov	r3, r2
   132b8:	ldr	r2, [pc, #20]	; 132d4 <pclose@plt+0x238>
   132bc:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   132c0:	strd	r2, [sp]
   132c4:	mov	r1, #0
   132c8:	mov	r3, ip
   132cc:	ldr	r2, [pc, #4]	; 132d8 <pclose@plt+0x23c>
   132d0:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   132d4:	muleq	r0, ip, r9
   132d8:			; <UNDEFINED> instruction: 0x000009be
   132dc:	push	{lr}		; (str lr, [sp, #-4]!)
   132e0:	mov	r6, r1
   132e4:	sub	sp, sp, #12
   132e8:	mov	r2, #0
   132ec:	mov	r1, #1
   132f0:	mov	r4, r0
   132f4:	bl	5ab5c <lua_tolstring@@Base>
   132f8:	mov	r2, #0
   132fc:	mvn	r1, #0
   13300:	mov	r5, r0
   13304:	mov	r0, r4
   13308:	bl	5ab5c <lua_tolstring@@Base>
   1330c:	mov	r3, r6
   13310:	mov	r2, r5
   13314:	ldr	r1, [pc, #8]	; 13324 <pclose@plt+0x288>
   13318:	str	r0, [sp]
   1331c:	mov	r0, r4
   13320:	bl	460ec <luaL_error@@Base>
   13324:	andeq	r3, r7, r8, ror r0

00013328 <main@@Base>:
   13328:	push	{r4, r5, r6, r7, r8, lr}
   1332c:	mov	r7, r0
   13330:	mov	r6, r1
   13334:	bl	6967c <luaL_newstate@@Base>
   13338:	subs	r5, r0, #0
   1333c:	beq	13390 <main@@Base+0x68>
   13340:	ldr	r4, [pc, #92]	; 133a4 <main@@Base+0x7c>
   13344:	mov	r2, #0
   13348:	ldr	r1, [pc, #88]	; 133a8 <main@@Base+0x80>
   1334c:	strd	r6, [r4, #4]
   13350:	bl	6030c <lua_cpcall@@Base>
   13354:	mov	r1, r0
   13358:	mov	r6, r0
   1335c:	mov	r0, r5
   13360:	bl	13928 <_start@@Base+0x578>
   13364:	mov	r0, r5
   13368:	bl	60860 <lua_close@@Base>
   1336c:	cmp	r6, #0
   13370:	bne	13388 <main@@Base+0x60>
   13374:	ldr	r0, [r4, #12]
   13378:	cmp	r0, #0
   1337c:	movle	r0, #0
   13380:	movgt	r0, #1
   13384:	pop	{r4, r5, r6, r7, r8, pc}
   13388:	mov	r0, #1
   1338c:	pop	{r4, r5, r6, r7, r8, pc}
   13390:	ldr	r0, [r6]
   13394:	ldr	r1, [pc, #16]	; 133ac <main@@Base+0x84>
   13398:	bl	13750 <_start@@Base+0x3a0>
   1339c:	mov	r0, #1
   133a0:	pop	{r4, r5, r6, r7, r8, pc}
   133a4:			; <UNDEFINED> instruction: 0x000841b4
   133a8:	strdeq	r3, [r1], -r8
   133ac:	andeq	lr, r6, r4, lsl #25

000133b0 <_start@@Base>:
   133b0:	mov	fp, #0
   133b4:	mov	lr, #0
   133b8:	pop	{r1}		; (ldr r1, [sp], #4)
   133bc:	mov	r2, sp
   133c0:	push	{r2}		; (str r2, [sp, #-4]!)
   133c4:	push	{r0}		; (str r0, [sp, #-4]!)
   133c8:	ldr	ip, [pc, #16]	; 133e0 <_start@@Base+0x30>
   133cc:	push	{ip}		; (str ip, [sp, #-4]!)
   133d0:	ldr	r0, [pc, #12]	; 133e4 <_start@@Base+0x34>
   133d4:	ldr	r3, [pc, #12]	; 133e8 <_start@@Base+0x38>
   133d8:	bl	12dd8 <__libc_start_main@plt>
   133dc:	bl	13054 <abort@plt>
   133e0:	ldrdeq	lr, [r6], -r8
   133e4:	andeq	r3, r1, r8, lsr #6
   133e8:	andeq	lr, r6, r8, ror r8
   133ec:	ldr	r3, [pc, #20]	; 13408 <_start@@Base+0x58>
   133f0:	ldr	r2, [pc, #20]	; 1340c <_start@@Base+0x5c>
   133f4:	add	r3, pc, r3
   133f8:	ldr	r2, [r3, r2]
   133fc:	cmp	r2, #0
   13400:	bxeq	lr
   13404:	b	12e14 <__gmon_start__@plt>
   13408:	andeq	r0, r7, r4, lsl #24
   1340c:	andeq	r0, r0, ip, lsl #3
   13410:	ldr	r0, [pc, #24]	; 13430 <_start@@Base+0x80>
   13414:	ldr	r3, [pc, #24]	; 13434 <_start@@Base+0x84>
   13418:	cmp	r3, r0
   1341c:	bxeq	lr
   13420:	ldr	r3, [pc, #16]	; 13438 <_start@@Base+0x88>
   13424:	cmp	r3, #0
   13428:	bxeq	lr
   1342c:	bx	r3
   13430:	andeq	r4, r8, r0, lsr #3
   13434:	andeq	r4, r8, r0, lsr #3
   13438:	andeq	r0, r0, r0
   1343c:	ldr	r0, [pc, #36]	; 13468 <_start@@Base+0xb8>
   13440:	ldr	r1, [pc, #36]	; 1346c <_start@@Base+0xbc>
   13444:	sub	r1, r1, r0
   13448:	asr	r1, r1, #2
   1344c:	add	r1, r1, r1, lsr #31
   13450:	asrs	r1, r1, #1
   13454:	bxeq	lr
   13458:	ldr	r3, [pc, #16]	; 13470 <_start@@Base+0xc0>
   1345c:	cmp	r3, #0
   13460:	bxeq	lr
   13464:	bx	r3
   13468:	andeq	r4, r8, r0, lsr #3
   1346c:	andeq	r4, r8, r0, lsr #3
   13470:	andeq	r0, r0, r0
   13474:	push	{r4, lr}
   13478:	ldr	r4, [pc, #24]	; 13498 <_start@@Base+0xe8>
   1347c:	ldrb	r3, [r4]
   13480:	cmp	r3, #0
   13484:	popne	{r4, pc}
   13488:	bl	13410 <_start@@Base+0x60>
   1348c:	mov	r3, #1
   13490:	strb	r3, [r4]
   13494:	pop	{r4, pc}
   13498:			; <UNDEFINED> instruction: 0x000841b0
   1349c:	b	1343c <_start@@Base+0x8c>
   134a0:	push	{r4, lr}
   134a4:	mov	r1, #0
   134a8:	bl	12cd0 <signal@plt>
   134ac:	ldr	r1, [pc, #20]	; 134c8 <_start@@Base+0x118>
   134b0:	mov	r3, #1
   134b4:	mov	r2, #11
   134b8:	ldr	r0, [r1]
   134bc:	pop	{r4, lr}
   134c0:	ldr	r1, [pc, #4]	; 134cc <_start@@Base+0x11c>
   134c4:	b	53604 <lua_sethook@@Base>
   134c8:			; <UNDEFINED> instruction: 0x000841b4
   134cc:	ldrdeq	r3, [r1], -r0
   134d0:	mov	r3, #0
   134d4:	push	{r4, lr}
   134d8:	mov	r2, r3
   134dc:	mov	r4, r0
   134e0:	mov	r1, r3
   134e4:	bl	53604 <lua_sethook@@Base>
   134e8:	mov	r0, r4
   134ec:	mov	r1, #0
   134f0:	bl	20104 <luaL_where@@Base>
   134f4:	mov	r0, r4
   134f8:	mov	r2, #0
   134fc:	mvn	r1, #0
   13500:	bl	5ab5c <lua_tolstring@@Base>
   13504:	ldr	r1, [pc, #20]	; 13520 <_start@@Base+0x170>
   13508:	mov	r2, r0
   1350c:	mov	r0, r4
   13510:	bl	5bc58 <lua_pushfstring@@Base>
   13514:	mov	r0, r4
   13518:	pop	{r4, lr}
   1351c:	b	359a0 <lua_error@@Base>
   13520:	andeq	lr, r6, ip, ror #17
   13524:	push	{r4, r5, r6, r7, r8, lr}
   13528:	mov	r5, r0
   1352c:	ldr	r2, [pc, #204]	; 13600 <_start@@Base+0x250>
   13530:	ldr	r1, [pc, #204]	; 13604 <_start@@Base+0x254>
   13534:	bl	5db0c <lua_getfield@@Base>
   13538:	mov	r0, r5
   1353c:	ldr	r2, [pc, #196]	; 13608 <_start@@Base+0x258>
   13540:	mvn	r1, #0
   13544:	bl	5db0c <lua_getfield@@Base>
   13548:	mov	r0, r5
   1354c:	mvn	r1, #1
   13550:	bl	59fb4 <lua_remove@@Base>
   13554:	ldr	r2, [pc, #176]	; 1360c <_start@@Base+0x25c>
   13558:	mov	r0, r5
   1355c:	mvn	r1, #0
   13560:	bl	5db0c <lua_getfield@@Base>
   13564:	mov	r0, r5
   13568:	mvn	r1, #1
   1356c:	bl	59fb4 <lua_remove@@Base>
   13570:	mov	r0, r5
   13574:	bl	59f1c <lua_gettop@@Base>
   13578:	mvn	r2, #0
   1357c:	mov	r1, #0
   13580:	ldr	r6, [pc, #136]	; 13610 <_start@@Base+0x260>
   13584:	mov	r4, r0
   13588:	mov	r0, r5
   1358c:	bl	601a4 <lua_call@@Base>
   13590:	mov	r1, r4
   13594:	mov	r0, r5
   13598:	bl	5ab40 <lua_toboolean@@Base>
   1359c:	ldr	r2, [pc, #112]	; 13614 <_start@@Base+0x264>
   135a0:	ldr	r3, [pc, #112]	; 13618 <_start@@Base+0x268>
   135a4:	ldr	r1, [r6]
   135a8:	add	r4, r4, #1
   135ac:	cmp	r0, #0
   135b0:	movne	r0, r2
   135b4:	moveq	r0, r3
   135b8:	bl	1303c <fputs@plt>
   135bc:	b	135d0 <_start@@Base+0x220>
   135c0:	bl	12d60 <_IO_putc@plt>
   135c4:	mov	r0, r7
   135c8:	ldr	r1, [r6]
   135cc:	bl	1303c <fputs@plt>
   135d0:	mov	r1, r4
   135d4:	mov	r2, #0
   135d8:	mov	r0, r5
   135dc:	bl	5ab5c <lua_tolstring@@Base>
   135e0:	add	r4, r4, #1
   135e4:	ldr	r1, [r6]
   135e8:	subs	r7, r0, #0
   135ec:	mov	r0, #32
   135f0:	bne	135c0 <_start@@Base+0x210>
   135f4:	mov	r0, #10
   135f8:	pop	{r4, r5, r6, r7, r8, lr}
   135fc:	b	12d60 <_IO_putc@plt>
   13600:	andeq	lr, r6, r0, lsl r9
   13604:			; <UNDEFINED> instruction: 0xffffd8f0
   13608:	andeq	lr, r6, r8, lsl r9
   1360c:	andeq	lr, r6, ip, lsl r9
   13610:	andeq	r4, r8, ip, lsr #3
   13614:	strdeq	lr, [r6], -ip
   13618:	andeq	lr, r6, r4, lsl #18
   1361c:	push	{r4, r5, r6, lr}
   13620:	subs	r6, r1, #0
   13624:	sub	sp, sp, #512	; 0x200
   13628:	mov	r4, r0
   1362c:	beq	136ec <_start@@Base+0x33c>
   13630:	ldr	r2, [pc, #248]	; 13730 <_start@@Base+0x380>
   13634:	ldr	r1, [pc, #248]	; 13734 <_start@@Base+0x384>
   13638:	bl	5db0c <lua_getfield@@Base>
   1363c:	mov	r2, #0
   13640:	mvn	r1, #0
   13644:	mov	r0, r4
   13648:	bl	5ab5c <lua_tolstring@@Base>
   1364c:	ldr	r3, [pc, #228]	; 13738 <_start@@Base+0x388>
   13650:	cmp	r0, #0
   13654:	moveq	r0, r3
   13658:	ldr	r5, [pc, #220]	; 1373c <_start@@Base+0x38c>
   1365c:	ldr	r1, [r5]
   13660:	bl	1303c <fputs@plt>
   13664:	ldr	r0, [r5]
   13668:	bl	12c7c <fflush@plt>
   1366c:	mvn	r1, #1
   13670:	mov	r0, r4
   13674:	bl	59f30 <lua_settop@@Base>
   13678:	ldr	r3, [pc, #192]	; 13740 <_start@@Base+0x390>
   1367c:	mov	r0, sp
   13680:	mov	r1, #512	; 0x200
   13684:	ldr	r2, [r3]
   13688:	bl	12ca0 <fgets@plt>
   1368c:	cmp	r0, #0
   13690:	beq	136e4 <_start@@Base+0x334>
   13694:	mov	r0, sp
   13698:	bl	12e80 <strlen@plt>
   1369c:	cmp	r0, #0
   136a0:	beq	136c0 <_start@@Base+0x310>
   136a4:	add	r3, sp, #512	; 0x200
   136a8:	sub	r0, r0, #1
   136ac:	add	r0, r3, r0
   136b0:	ldrb	r3, [r0, #-512]	; 0xfffffe00
   136b4:	cmp	r3, #10
   136b8:	moveq	r3, #0
   136bc:	strbeq	r3, [r0, #-512]	; 0xfffffe00
   136c0:	cmp	r6, #0
   136c4:	beq	136d4 <_start@@Base+0x324>
   136c8:	ldrb	r3, [sp]
   136cc:	cmp	r3, #61	; 0x3d
   136d0:	beq	13718 <_start@@Base+0x368>
   136d4:	mov	r0, r4
   136d8:	mov	r1, sp
   136dc:	bl	5b7a0 <lua_pushstring@@Base>
   136e0:	mov	r0, #1
   136e4:	add	sp, sp, #512	; 0x200
   136e8:	pop	{r4, r5, r6, pc}
   136ec:	ldr	r2, [pc, #80]	; 13744 <_start@@Base+0x394>
   136f0:	ldr	r1, [pc, #60]	; 13734 <_start@@Base+0x384>
   136f4:	bl	5db0c <lua_getfield@@Base>
   136f8:	mov	r2, r6
   136fc:	mvn	r1, #0
   13700:	mov	r0, r4
   13704:	bl	5ab5c <lua_tolstring@@Base>
   13708:	ldr	r3, [pc, #56]	; 13748 <_start@@Base+0x398>
   1370c:	cmp	r0, #0
   13710:	moveq	r0, r3
   13714:	b	13658 <_start@@Base+0x2a8>
   13718:	add	r2, sp, #1
   1371c:	mov	r0, r4
   13720:	ldr	r1, [pc, #36]	; 1374c <_start@@Base+0x39c>
   13724:	bl	5bc58 <lua_pushfstring@@Base>
   13728:	mov	r0, r6
   1372c:	b	136e4 <_start@@Base+0x334>
   13730:	andeq	lr, r6, r8, lsr r9
   13734:			; <UNDEFINED> instruction: 0xffffd8ee
   13738:	andeq	lr, r6, r4, lsr #18
   1373c:	andeq	r4, r8, ip, lsr #3
   13740:	andeq	r4, r8, r8, lsr #3
   13744:	andeq	lr, r6, r0, asr #18
   13748:	andeq	lr, r6, r8, lsr #18
   1374c:	andeq	lr, r6, ip, lsr #18
   13750:	push	{r4, r5, r6, lr}
   13754:	cmp	r0, #0
   13758:	ldr	r4, [pc, #72]	; 137a8 <_start@@Base+0x3f8>
   1375c:	mov	r5, r1
   13760:	ldr	r1, [r4]
   13764:	beq	13788 <_start@@Base+0x3d8>
   13768:	bl	1303c <fputs@plt>
   1376c:	ldr	r1, [r4]
   13770:	mov	r0, #58	; 0x3a
   13774:	bl	12fac <fputc@plt>
   13778:	ldr	r1, [r4]
   1377c:	mov	r0, #32
   13780:	bl	12fac <fputc@plt>
   13784:	ldr	r1, [r4]
   13788:	mov	r0, r5
   1378c:	bl	1303c <fputs@plt>
   13790:	ldr	r1, [r4]
   13794:	mov	r0, #10
   13798:	bl	12fac <fputc@plt>
   1379c:	ldr	r0, [r4]
   137a0:	pop	{r4, r5, r6, lr}
   137a4:	b	12c7c <fflush@plt>
   137a8:	andeq	r4, r8, r0, lsr #3
   137ac:	push	{r4, r5, r6, r7, r8, lr}
   137b0:	mov	r4, r0
   137b4:	mov	r7, r1
   137b8:	mov	r6, r2
   137bc:	bl	59f1c <lua_gettop@@Base>
   137c0:	mov	r2, #0
   137c4:	ldr	r1, [pc, #116]	; 13840 <_start@@Base+0x490>
   137c8:	sub	r5, r0, r7
   137cc:	mov	r0, r4
   137d0:	bl	5c7f0 <lua_pushcclosure@@Base>
   137d4:	mov	r1, r5
   137d8:	mov	r0, r4
   137dc:	bl	5a01c <lua_insert@@Base>
   137e0:	ldr	r1, [pc, #92]	; 13844 <_start@@Base+0x494>
   137e4:	mov	r0, #2
   137e8:	bl	12cd0 <signal@plt>
   137ec:	eor	r2, r6, #1
   137f0:	rsb	r2, r2, #0
   137f4:	mov	r3, r5
   137f8:	mov	r1, r7
   137fc:	mov	r0, r4
   13800:	bl	601b4 <lua_pcall@@Base>
   13804:	mov	r1, #0
   13808:	mov	r6, r0
   1380c:	mov	r0, #2
   13810:	bl	12cd0 <signal@plt>
   13814:	mov	r1, r5
   13818:	mov	r0, r4
   1381c:	bl	59fb4 <lua_remove@@Base>
   13820:	cmp	r6, #0
   13824:	beq	13838 <_start@@Base+0x488>
   13828:	mov	r0, r4
   1382c:	mov	r2, #0
   13830:	mov	r1, #2
   13834:	bl	60500 <lua_gc@@Base>
   13838:	mov	r0, r6
   1383c:	pop	{r4, r5, r6, r7, r8, pc}
   13840:	andeq	r3, r1, r8, asr #16
   13844:	andeq	r3, r1, r0, lsr #9
   13848:	push	{r4, lr}
   1384c:	mov	r1, #1
   13850:	mov	r4, r0
   13854:	bl	5a374 <lua_isstring@@Base>
   13858:	cmp	r0, #0
   1385c:	bne	138b4 <_start@@Base+0x504>
   13860:	mov	r1, #1
   13864:	mov	r0, r4
   13868:	bl	5a214 <lua_type@@Base>
   1386c:	cmp	r0, #0
   13870:	ble	1388c <_start@@Base+0x4dc>
   13874:	ldr	r2, [pc, #100]	; 138e0 <_start@@Base+0x530>
   13878:	mov	r1, #1
   1387c:	mov	r0, r4
   13880:	bl	60340 <luaL_callmeta@@Base>
   13884:	cmp	r0, #0
   13888:	bne	13894 <_start@@Base+0x4e4>
   1388c:	mov	r0, #1
   13890:	pop	{r4, pc}
   13894:	mvn	r1, #0
   13898:	mov	r0, r4
   1389c:	bl	5a374 <lua_isstring@@Base>
   138a0:	cmp	r0, #0
   138a4:	beq	1388c <_start@@Base+0x4dc>
   138a8:	mov	r1, #1
   138ac:	mov	r0, r4
   138b0:	bl	59fb4 <lua_remove@@Base>
   138b4:	mov	r2, #0
   138b8:	mov	r1, #1
   138bc:	mov	r0, r4
   138c0:	bl	5ab5c <lua_tolstring@@Base>
   138c4:	mov	r3, #1
   138c8:	mov	r1, r4
   138cc:	mov	r2, r0
   138d0:	mov	r0, r4
   138d4:	bl	5d544 <luaL_traceback@@Base>
   138d8:	mov	r0, #1
   138dc:	pop	{r4, pc}
   138e0:	andeq	lr, r6, ip, asr #18
   138e4:	push	{r4, lr}
   138e8:	mov	r2, #0
   138ec:	mvn	r1, #0
   138f0:	mov	r4, r0
   138f4:	bl	5ab5c <lua_tolstring@@Base>
   138f8:	ldr	r3, [pc, #32]	; 13920 <_start@@Base+0x570>
   138fc:	ldr	r1, [pc, #32]	; 13924 <_start@@Base+0x574>
   13900:	cmp	r0, #0
   13904:	movne	r1, r0
   13908:	ldr	r0, [r3]
   1390c:	bl	13750 <_start@@Base+0x3a0>
   13910:	mov	r0, r4
   13914:	mvn	r1, #1
   13918:	pop	{r4, lr}
   1391c:	b	59f30 <lua_settop@@Base>
   13920:	muleq	r8, r8, r1
   13924:	andeq	lr, r6, r8, asr r9
   13928:	push	{r4, r5, r6, lr}
   1392c:	subs	r4, r1, #0
   13930:	bne	1393c <_start@@Base+0x58c>
   13934:	mov	r0, r4
   13938:	pop	{r4, r5, r6, pc}
   1393c:	mvn	r1, #0
   13940:	mov	r5, r0
   13944:	bl	5a214 <lua_type@@Base>
   13948:	cmp	r0, #0
   1394c:	beq	13934 <_start@@Base+0x584>
   13950:	mov	r0, r5
   13954:	bl	138e4 <_start@@Base+0x534>
   13958:	mov	r0, r4
   1395c:	pop	{r4, r5, r6, pc}
   13960:	push	{r4, r5, r6, lr}
   13964:	mov	r4, r0
   13968:	mov	r0, r1
   1396c:	mov	r6, r2
   13970:	mov	r5, r1
   13974:	bl	12e80 <strlen@plt>
   13978:	mov	r1, r5
   1397c:	mov	r3, r6
   13980:	mov	r2, r0
   13984:	mov	r0, r4
   13988:	bl	6148c <luaL_loadbuffer@@Base>
   1398c:	subs	r1, r0, #0
   13990:	movne	r1, #1
   13994:	bne	139ac <_start@@Base+0x5fc>
   13998:	mov	r2, #1
   1399c:	mov	r0, r4
   139a0:	bl	137ac <_start@@Base+0x3fc>
   139a4:	adds	r1, r0, #0
   139a8:	movne	r1, #1
   139ac:	mov	r0, r4
   139b0:	pop	{r4, r5, r6, lr}
   139b4:	b	13928 <_start@@Base+0x578>
   139b8:	push	{r4, r5, r6, r7, r8, lr}
   139bc:	subs	r4, r1, #0
   139c0:	mov	r7, r0
   139c4:	moveq	r6, r4
   139c8:	beq	13a2c <_start@@Base+0x67c>
   139cc:	ldrb	r6, [r4]
   139d0:	cmp	r6, #0
   139d4:	beq	13a2c <_start@@Base+0x67c>
   139d8:	mov	r6, #0
   139dc:	b	139e8 <_start@@Base+0x638>
   139e0:	bl	5b190 <lua_pushlstring@@Base>
   139e4:	add	r4, r5, #1
   139e8:	mov	r1, #44	; 0x2c
   139ec:	mov	r0, r4
   139f0:	bl	12e8c <strchr@plt>
   139f4:	add	r6, r6, #1
   139f8:	mov	r1, r4
   139fc:	subs	r5, r0, #0
   13a00:	sub	r2, r5, r4
   13a04:	mov	r0, r7
   13a08:	beq	13a1c <_start@@Base+0x66c>
   13a0c:	cmp	r4, r5
   13a10:	bne	139e0 <_start@@Base+0x630>
   13a14:	bl	5b084 <lua_pushnil@@Base>
   13a18:	b	139e4 <_start@@Base+0x634>
   13a1c:	ldrb	r3, [r4]
   13a20:	cmp	r3, #0
   13a24:	bne	13a50 <_start@@Base+0x6a0>
   13a28:	bl	5b084 <lua_pushnil@@Base>
   13a2c:	mov	r3, #0
   13a30:	mov	r1, r6
   13a34:	mov	r0, r7
   13a38:	mov	r2, r3
   13a3c:	bl	601b4 <lua_pcall@@Base>
   13a40:	mov	r1, r0
   13a44:	mov	r0, r7
   13a48:	pop	{r4, r5, r6, r7, r8, lr}
   13a4c:	b	13928 <_start@@Base+0x578>
   13a50:	bl	5b7a0 <lua_pushstring@@Base>
   13a54:	b	13a2c <_start@@Base+0x67c>
   13a58:	push	{r4, lr}
   13a5c:	mov	r4, r0
   13a60:	bl	61454 <luaL_loadfile@@Base>
   13a64:	subs	r1, r0, #0
   13a68:	movne	r1, #1
   13a6c:	bne	13a84 <_start@@Base+0x6d4>
   13a70:	mov	r2, #1
   13a74:	mov	r0, r4
   13a78:	bl	137ac <_start@@Base+0x3fc>
   13a7c:	adds	r1, r0, #0
   13a80:	movne	r1, #1
   13a84:	mov	r0, r4
   13a88:	pop	{r4, lr}
   13a8c:	b	13928 <_start@@Base+0x578>
   13a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a94:	mov	r4, r0
   13a98:	ldr	r9, [pc, #536]	; 13cb8 <_start@@Base+0x908>
   13a9c:	ldr	r6, [pc, #536]	; 13cbc <_start@@Base+0x90c>
   13aa0:	ldr	r8, [pc, #536]	; 13cc0 <_start@@Base+0x910>
   13aa4:	ldr	r7, [pc, #536]	; 13cc4 <_start@@Base+0x914>
   13aa8:	sub	sp, sp, #12
   13aac:	mov	r3, #0
   13ab0:	ldr	sl, [r9]
   13ab4:	str	r3, [r9]
   13ab8:	mov	r1, #0
   13abc:	mov	r0, r4
   13ac0:	bl	59f30 <lua_settop@@Base>
   13ac4:	mov	r1, #1
   13ac8:	mov	r0, r4
   13acc:	bl	1361c <_start@@Base+0x26c>
   13ad0:	cmp	r0, #0
   13ad4:	beq	13c78 <_start@@Base+0x8c8>
   13ad8:	mov	r2, #0
   13adc:	mov	r1, #1
   13ae0:	mov	r0, r4
   13ae4:	bl	5ab5c <lua_tolstring@@Base>
   13ae8:	mov	r1, #1
   13aec:	mov	r5, r0
   13af0:	mov	r0, r4
   13af4:	bl	5af30 <lua_objlen@@Base>
   13af8:	mov	r1, r5
   13afc:	mov	r3, r6
   13b00:	mov	r2, r0
   13b04:	mov	r0, r4
   13b08:	bl	6148c <luaL_loadbuffer@@Base>
   13b0c:	cmp	r0, #3
   13b10:	mov	r5, r0
   13b14:	beq	13be0 <_start@@Base+0x830>
   13b18:	mov	r1, #1
   13b1c:	mov	r0, r4
   13b20:	bl	59fb4 <lua_remove@@Base>
   13b24:	cmn	r5, #1
   13b28:	beq	13c78 <_start@@Base+0x8c8>
   13b2c:	cmp	r5, #0
   13b30:	bne	13ca8 <_start@@Base+0x8f8>
   13b34:	mov	r2, r5
   13b38:	mov	r1, r5
   13b3c:	mov	r0, r4
   13b40:	bl	137ac <_start@@Base+0x3fc>
   13b44:	mov	r5, r0
   13b48:	mov	r1, r0
   13b4c:	mov	r0, r4
   13b50:	bl	13928 <_start@@Base+0x578>
   13b54:	cmp	r5, #0
   13b58:	bne	13ab8 <_start@@Base+0x708>
   13b5c:	mov	r0, r4
   13b60:	bl	59f1c <lua_gettop@@Base>
   13b64:	cmp	r0, #0
   13b68:	ble	13ab8 <_start@@Base+0x708>
   13b6c:	ldr	r2, [pc, #340]	; 13cc8 <_start@@Base+0x918>
   13b70:	ldr	r1, [pc, #340]	; 13ccc <_start@@Base+0x91c>
   13b74:	mov	r0, r4
   13b78:	bl	5db0c <lua_getfield@@Base>
   13b7c:	mov	r1, #1
   13b80:	mov	r0, r4
   13b84:	bl	5a01c <lua_insert@@Base>
   13b88:	mov	r0, r4
   13b8c:	bl	59f1c <lua_gettop@@Base>
   13b90:	mov	r3, r5
   13b94:	mov	r2, r5
   13b98:	sub	r1, r0, #1
   13b9c:	mov	r0, r4
   13ba0:	bl	601b4 <lua_pcall@@Base>
   13ba4:	cmp	r0, #0
   13ba8:	beq	13ab8 <_start@@Base+0x708>
   13bac:	mov	r2, r5
   13bb0:	mvn	r1, #0
   13bb4:	mov	r0, r4
   13bb8:	ldr	r5, [r9]
   13bbc:	bl	5ab5c <lua_tolstring@@Base>
   13bc0:	ldr	r1, [pc, #264]	; 13cd0 <_start@@Base+0x920>
   13bc4:	mov	r2, r0
   13bc8:	mov	r0, r4
   13bcc:	bl	5bc58 <lua_pushfstring@@Base>
   13bd0:	mov	r1, r0
   13bd4:	mov	r0, r5
   13bd8:	bl	13750 <_start@@Base+0x3a0>
   13bdc:	b	13ab8 <_start@@Base+0x708>
   13be0:	add	r2, sp, #4
   13be4:	mvn	r1, #0
   13be8:	mov	r0, r4
   13bec:	bl	5ab5c <lua_tolstring@@Base>
   13bf0:	mov	r1, r8
   13bf4:	mov	fp, r0
   13bf8:	bl	12c28 <strstr@plt>
   13bfc:	ldr	r2, [sp, #4]
   13c00:	sub	r2, r2, #7
   13c04:	add	r3, fp, r2
   13c08:	cmp	r0, r3
   13c0c:	beq	13c2c <_start@@Base+0x87c>
   13c10:	mov	r0, r4
   13c14:	mov	r1, #1
   13c18:	bl	59fb4 <lua_remove@@Base>
   13c1c:	mov	r1, r5
   13c20:	mov	r0, r4
   13c24:	bl	13928 <_start@@Base+0x578>
   13c28:	b	13ab8 <_start@@Base+0x708>
   13c2c:	mvn	r1, #1
   13c30:	mov	r0, r4
   13c34:	bl	59f30 <lua_settop@@Base>
   13c38:	mov	r1, #0
   13c3c:	mov	r0, r4
   13c40:	bl	1361c <_start@@Base+0x26c>
   13c44:	mov	r2, #1
   13c48:	mov	r1, r7
   13c4c:	cmp	r0, #0
   13c50:	mov	r0, r4
   13c54:	beq	13c78 <_start@@Base+0x8c8>
   13c58:	bl	5b190 <lua_pushlstring@@Base>
   13c5c:	mov	r0, r4
   13c60:	mvn	r1, #1
   13c64:	bl	5a01c <lua_insert@@Base>
   13c68:	mov	r1, r5
   13c6c:	mov	r0, r4
   13c70:	bl	5d4f8 <lua_concat@@Base>
   13c74:	b	13ad8 <_start@@Base+0x728>
   13c78:	ldr	r5, [pc, #84]	; 13cd4 <_start@@Base+0x924>
   13c7c:	mov	r0, r4
   13c80:	mov	r1, #0
   13c84:	bl	59f30 <lua_settop@@Base>
   13c88:	ldr	r1, [r5]
   13c8c:	mov	r0, #10
   13c90:	bl	12fac <fputc@plt>
   13c94:	ldr	r0, [r5]
   13c98:	bl	12c7c <fflush@plt>
   13c9c:	str	sl, [r9]
   13ca0:	add	sp, sp, #12
   13ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ca8:	mov	r1, r5
   13cac:	mov	r0, r4
   13cb0:	bl	13928 <_start@@Base+0x578>
   13cb4:	b	13ab8 <_start@@Base+0x708>
   13cb8:	muleq	r8, r8, r1
   13cbc:	muleq	r6, ip, r9
   13cc0:	andeq	lr, r6, r4, lsr #19
   13cc4:			; <UNDEFINED> instruction: 0x000734b8
   13cc8:	andeq	lr, r6, r8, ror r9
   13ccc:			; <UNDEFINED> instruction: 0xffffd8ee
   13cd0:	andeq	lr, r6, r0, lsl #19
   13cd4:	andeq	r4, r8, ip, lsr #3
   13cd8:	push	{r4, r5, r6, lr}
   13cdc:	mov	r4, r0
   13ce0:	ldr	r2, [pc, #244]	; 13ddc <_start@@Base+0xa2c>
   13ce4:	ldr	r1, [pc, #244]	; 13de0 <_start@@Base+0xa30>
   13ce8:	bl	5db0c <lua_getfield@@Base>
   13cec:	mov	r2, #4
   13cf0:	mov	r0, r4
   13cf4:	ldr	r1, [pc, #232]	; 13de4 <_start@@Base+0xa34>
   13cf8:	bl	5b190 <lua_pushlstring@@Base>
   13cfc:	mov	r0, r4
   13d00:	mvn	r1, #2
   13d04:	bl	5a100 <lua_pushvalue@@Base>
   13d08:	mov	r0, r4
   13d0c:	mov	r1, #2
   13d10:	bl	5d4f8 <lua_concat@@Base>
   13d14:	mov	r2, #1
   13d18:	mov	r0, r4
   13d1c:	mov	r1, r2
   13d20:	mov	r3, #0
   13d24:	bl	601b4 <lua_pcall@@Base>
   13d28:	subs	r5, r0, #0
   13d2c:	beq	13d88 <_start@@Base+0x9d8>
   13d30:	mov	r2, #0
   13d34:	mvn	r1, #0
   13d38:	mov	r0, r4
   13d3c:	bl	5ab5c <lua_tolstring@@Base>
   13d40:	cmp	r0, #0
   13d44:	beq	13d5c <_start@@Base+0x9ac>
   13d48:	mov	r2, #7
   13d4c:	ldr	r1, [pc, #148]	; 13de8 <_start@@Base+0xa38>
   13d50:	bl	13048 <strncmp@plt>
   13d54:	cmp	r0, #0
   13d58:	beq	13dac <_start@@Base+0x9fc>
   13d5c:	mvn	r1, #0
   13d60:	mov	r0, r4
   13d64:	bl	5a214 <lua_type@@Base>
   13d68:	cmp	r0, #0
   13d6c:	moveq	r5, #1
   13d70:	beq	13dc0 <_start@@Base+0xa10>
   13d74:	mov	r0, r4
   13d78:	mov	r5, #1
   13d7c:	bl	138e4 <_start@@Base+0x534>
   13d80:	mov	r0, r5
   13d84:	pop	{r4, r5, r6, pc}
   13d88:	ldr	r2, [pc, #92]	; 13dec <_start@@Base+0xa3c>
   13d8c:	mvn	r1, #0
   13d90:	mov	r0, r4
   13d94:	bl	5db0c <lua_getfield@@Base>
   13d98:	mvn	r1, #0
   13d9c:	mov	r0, r4
   13da0:	bl	5a214 <lua_type@@Base>
   13da4:	cmp	r0, #0
   13da8:	bne	13dc8 <_start@@Base+0xa18>
   13dac:	ldr	r3, [pc, #60]	; 13df0 <_start@@Base+0xa40>
   13db0:	ldr	r1, [pc, #60]	; 13df4 <_start@@Base+0xa44>
   13db4:	mov	r5, #1
   13db8:	ldr	r0, [r3]
   13dbc:	bl	13750 <_start@@Base+0x3a0>
   13dc0:	mov	r0, r5
   13dc4:	pop	{r4, r5, r6, pc}
   13dc8:	mov	r0, r4
   13dcc:	mvn	r1, #1
   13dd0:	bl	59fb4 <lua_remove@@Base>
   13dd4:	mov	r0, r5
   13dd8:	pop	{r4, r5, r6, pc}
   13ddc:	andeq	lr, r6, ip, lsr #19
   13de0:			; <UNDEFINED> instruction: 0xffffd8ee
   13de4:			; <UNDEFINED> instruction: 0x0006e9b4
   13de8:			; <UNDEFINED> instruction: 0x0006e9bc
   13dec:	strdeq	lr, [r6], -ip
   13df0:	muleq	r8, r8, r1
   13df4:	andeq	lr, r6, r4, asr #19
   13df8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dfc:	mov	r4, r0
   13e00:	ldr	sl, [pc, #2040]	; 14600 <_start@@Base+0x1250>
   13e04:	sub	sp, sp, #12
   13e08:	ldr	r7, [sl, #4]
   13e0c:	str	r0, [sl]
   13e10:	ldr	r3, [r7]
   13e14:	cmp	r3, #0
   13e18:	beq	13e2c <_start@@Base+0xa7c>
   13e1c:	ldrb	r2, [r3]
   13e20:	cmp	r2, #0
   13e24:	ldrne	r2, [pc, #2008]	; 14604 <_start@@Base+0x1254>
   13e28:	strne	r3, [r2]
   13e2c:	ldr	r3, [r7, #4]
   13e30:	cmp	r3, #0
   13e34:	beq	1456c <_start@@Base+0x11bc>
   13e38:	ldrb	r2, [r3]
   13e3c:	mov	r9, #0
   13e40:	mov	r8, #1
   13e44:	cmp	r2, #45	; 0x2d
   13e48:	bne	143a8 <_start@@Base+0xff8>
   13e4c:	ldrb	r2, [r3, #1]
   13e50:	cmp	r2, #98	; 0x62
   13e54:	beq	14398 <_start@@Base+0xfe8>
   13e58:	bhi	13e84 <_start@@Base+0xad4>
   13e5c:	cmp	r2, #45	; 0x2d
   13e60:	beq	143d8 <_start@@Base+0x1028>
   13e64:	bls	1434c <_start@@Base+0xf9c>
   13e68:	cmp	r2, #69	; 0x45
   13e6c:	beq	1407c <_start@@Base+0xccc>
   13e70:	cmp	r2, #79	; 0x4f
   13e74:	bne	142f4 <_start@@Base+0xf44>
   13e78:	add	r8, r8, #1
   13e7c:	ldr	r3, [r7, r8, lsl #2]
   13e80:	b	13ebc <_start@@Base+0xb0c>
   13e84:	cmp	r2, #106	; 0x6a
   13e88:	beq	14048 <_start@@Base+0xc98>
   13e8c:	bhi	142d8 <_start@@Base+0xf28>
   13e90:	cmp	r2, #101	; 0x65
   13e94:	beq	14044 <_start@@Base+0xc94>
   13e98:	cmp	r2, #105	; 0x69
   13e9c:	bne	142f4 <_start@@Base+0xf44>
   13ea0:	ldrb	r3, [r3, #2]
   13ea4:	cmp	r3, #0
   13ea8:	bne	142f4 <_start@@Base+0xf44>
   13eac:	orr	r9, r9, #1
   13eb0:	add	r8, r8, #1
   13eb4:	orr	r9, r9, #2
   13eb8:	ldr	r3, [r7, r8, lsl #2]
   13ebc:	cmp	r3, #0
   13ec0:	beq	13ed0 <_start@@Base+0xb20>
   13ec4:	ldrb	r2, [r3]
   13ec8:	cmp	r2, #45	; 0x2d
   13ecc:	beq	13e4c <_start@@Base+0xa9c>
   13ed0:	ands	r3, r9, #16
   13ed4:	str	r3, [sp, #4]
   13ed8:	beq	13ef8 <_start@@Base+0xb48>
   13edc:	mov	r1, #1
   13ee0:	mov	r0, r4
   13ee4:	bl	5ca7c <lua_pushboolean@@Base>
   13ee8:	ldr	r2, [pc, #1816]	; 14608 <_start@@Base+0x1258>
   13eec:	ldr	r1, [pc, #1816]	; 1460c <_start@@Base+0x125c>
   13ef0:	mov	r0, r4
   13ef4:	bl	5e634 <lua_setfield@@Base>
   13ef8:	mov	r2, #0
   13efc:	mov	r1, r2
   13f00:	mov	r0, r4
   13f04:	bl	60500 <lua_gc@@Base>
   13f08:	mov	r0, r4
   13f0c:	bl	697c0 <luaL_openlibs@@Base>
   13f10:	mvn	r2, #0
   13f14:	mov	r1, #1
   13f18:	mov	r0, r4
   13f1c:	bl	60500 <lua_gc@@Base>
   13f20:	ldr	r6, [sl, #8]
   13f24:	mov	r2, r8
   13f28:	sub	r1, r6, r8
   13f2c:	mov	r0, r4
   13f30:	bl	5cae4 <lua_createtable@@Base>
   13f34:	cmp	r6, #0
   13f38:	ble	13f70 <_start@@Base+0xbc0>
   13f3c:	sub	fp, r7, #4
   13f40:	add	r6, fp, r6, lsl #2
   13f44:	rsb	r5, r8, #0
   13f48:	ldr	r1, [fp, #4]!
   13f4c:	mov	r0, r4
   13f50:	bl	5b7a0 <lua_pushstring@@Base>
   13f54:	mov	r2, r5
   13f58:	mvn	r1, #1
   13f5c:	mov	r0, r4
   13f60:	bl	5f808 <lua_rawseti@@Base>
   13f64:	cmp	r6, fp
   13f68:	add	r5, r5, #1
   13f6c:	bne	13f48 <_start@@Base+0xb98>
   13f70:	ldr	r2, [pc, #1688]	; 14610 <_start@@Base+0x1260>
   13f74:	ldr	r1, [pc, #1688]	; 14614 <_start@@Base+0x1264>
   13f78:	mov	r0, r4
   13f7c:	bl	5e634 <lua_setfield@@Base>
   13f80:	ldr	r3, [sp, #4]
   13f84:	cmp	r3, #0
   13f88:	beq	14358 <_start@@Base+0xfa8>
   13f8c:	tst	r9, #2
   13f90:	bne	143b4 <_start@@Base+0x1004>
   13f94:	cmp	r8, #1
   13f98:	beq	140f0 <_start@@Base+0xd40>
   13f9c:	ldr	fp, [pc, #1652]	; 14618 <_start@@Base+0x1268>
   13fa0:	mov	r5, #1
   13fa4:	str	r9, [sp, #4]
   13fa8:	ldr	r6, [r7, r5, lsl #2]
   13fac:	add	r3, r7, r5, lsl #2
   13fb0:	cmp	r6, #0
   13fb4:	beq	140e0 <_start@@Base+0xd30>
   13fb8:	ldrb	r2, [r6, #1]
   13fbc:	sub	r2, r2, #79	; 0x4f
   13fc0:	cmp	r2, #29
   13fc4:	ldrls	pc, [pc, r2, lsl #2]
   13fc8:	b	140e0 <_start@@Base+0xd30>
   13fcc:	andeq	r4, r1, r0, lsl r2
   13fd0:	andeq	r4, r1, r0, ror #1
   13fd4:	andeq	r4, r1, r0, ror #1
   13fd8:	andeq	r4, r1, r0, ror #1
   13fdc:	andeq	r4, r1, r0, ror #1
   13fe0:	andeq	r4, r1, r0, ror #1
   13fe4:	andeq	r4, r1, r0, ror #1
   13fe8:	andeq	r4, r1, r0, ror #1
   13fec:	andeq	r4, r1, r0, ror #1
   13ff0:	andeq	r4, r1, r0, ror #1
   13ff4:	andeq	r4, r1, r0, ror #1
   13ff8:	andeq	r4, r1, r0, ror #1
   13ffc:	andeq	r4, r1, r0, ror #1
   14000:	andeq	r4, r1, r0, ror #1
   14004:	andeq	r4, r1, r0, ror #1
   14008:	andeq	r4, r1, r0, ror #1
   1400c:	andeq	r4, r1, r0, ror #1
   14010:	andeq	r4, r1, r0, ror #1
   14014:	andeq	r4, r1, r0, ror #1
   14018:	muleq	r1, ip, r2
   1401c:	andeq	r4, r1, r0, ror #1
   14020:	andeq	r4, r1, r0, ror #1
   14024:	andeq	r4, r1, r0, ror r2
   14028:	andeq	r4, r1, r0, ror #1
   1402c:	andeq	r4, r1, r0, ror #1
   14030:	andeq	r4, r1, r0, ror #1
   14034:	andeq	r4, r1, r0, ror #1
   14038:	andeq	r4, r1, r8, lsr r1
   1403c:	andeq	r4, r1, r0, ror #1
   14040:	andeq	r4, r1, ip, lsl #1
   14044:	orr	r9, r9, #4
   14048:	ldrb	r3, [r3, #2]
   1404c:	add	r2, r8, #1
   14050:	orr	r9, r9, #8
   14054:	cmp	r3, #0
   14058:	lsl	r1, r2, #2
   1405c:	ldr	r3, [r7, r2, lsl #2]
   14060:	bne	143d0 <_start@@Base+0x1020>
   14064:	cmp	r3, #0
   14068:	beq	142f4 <_start@@Base+0xf44>
   1406c:	add	r1, r7, r1
   14070:	add	r8, r8, #2
   14074:	ldr	r3, [r1, #4]
   14078:	b	13ebc <_start@@Base+0xb0c>
   1407c:	add	r8, r8, #1
   14080:	orr	r9, r9, #16
   14084:	ldr	r3, [r7, r8, lsl #2]
   14088:	b	13ebc <_start@@Base+0xb0c>
   1408c:	ldrb	r2, [r6, #2]
   14090:	ldr	r1, [pc, #1404]	; 14614 <_start@@Base+0x1264>
   14094:	mov	r0, r4
   14098:	cmp	r2, #0
   1409c:	addne	r6, r6, #2
   140a0:	ldreq	r6, [r3, #4]
   140a4:	ldr	r2, [pc, #1392]	; 1461c <_start@@Base+0x126c>
   140a8:	addeq	r5, r5, #1
   140ac:	bl	5db0c <lua_getfield@@Base>
   140b0:	mov	r1, r6
   140b4:	mov	r0, r4
   140b8:	bl	5b7a0 <lua_pushstring@@Base>
   140bc:	mov	r2, #1
   140c0:	mov	r1, r2
   140c4:	mov	r0, r4
   140c8:	bl	137ac <_start@@Base+0x3fc>
   140cc:	mov	r1, r0
   140d0:	mov	r0, r4
   140d4:	bl	13928 <_start@@Base+0x578>
   140d8:	cmp	r0, #0
   140dc:	bne	142c4 <_start@@Base+0xf14>
   140e0:	add	r5, r5, #1
   140e4:	cmp	r5, r8
   140e8:	blt	13fa8 <_start@@Base+0xbf8>
   140ec:	ldr	r9, [sp, #4]
   140f0:	ldr	r2, [sl, #8]
   140f4:	mov	r3, #0
   140f8:	cmp	r2, r8
   140fc:	str	r3, [sl, #12]
   14100:	bgt	14418 <_start@@Base+0x1068>
   14104:	tst	r9, #1
   14108:	bne	144a4 <_start@@Base+0x10f4>
   1410c:	ldr	r3, [sl, #8]
   14110:	cmp	r3, r8
   14114:	bne	142cc <_start@@Base+0xf1c>
   14118:	ands	r0, r9, #6
   1411c:	bne	142cc <_start@@Base+0xf1c>
   14120:	bl	13030 <isatty@plt>
   14124:	subs	r1, r0, #0
   14128:	bne	1448c <_start@@Base+0x10dc>
   1412c:	mov	r0, r4
   14130:	bl	13a58 <_start@@Base+0x6a8>
   14134:	b	142cc <_start@@Base+0xf1c>
   14138:	ldrb	r2, [r6, #2]
   1413c:	mov	r1, #61	; 0x3d
   14140:	cmp	r2, #0
   14144:	addne	r9, r6, #2
   14148:	ldreq	r9, [r3, #4]
   1414c:	addeq	r5, r5, #1
   14150:	mov	r0, r9
   14154:	bl	12e8c <strchr@plt>
   14158:	subs	r6, r0, #0
   1415c:	subne	r2, r6, r9
   14160:	beq	14408 <_start@@Base+0x1058>
   14164:	mov	r1, r9
   14168:	mov	r0, r4
   1416c:	bl	5b190 <lua_pushlstring@@Base>
   14170:	mov	r2, fp
   14174:	ldr	r1, [pc, #1168]	; 1460c <_start@@Base+0x125c>
   14178:	mov	r0, r4
   1417c:	bl	5db0c <lua_getfield@@Base>
   14180:	ldr	r2, [pc, #1176]	; 14620 <_start@@Base+0x1270>
   14184:	mvn	r1, #0
   14188:	mov	r0, r4
   1418c:	bl	5db0c <lua_getfield@@Base>
   14190:	mvn	r1, #1
   14194:	mov	r0, r4
   14198:	bl	59fb4 <lua_remove@@Base>
   1419c:	mvn	r1, #1
   141a0:	mov	r0, r4
   141a4:	bl	5a100 <lua_pushvalue@@Base>
   141a8:	mvn	r1, #1
   141ac:	mov	r0, r4
   141b0:	bl	5d8cc <lua_gettable@@Base>
   141b4:	mvn	r1, #0
   141b8:	mov	r0, r4
   141bc:	bl	5a214 <lua_type@@Base>
   141c0:	cmp	r0, #6
   141c4:	beq	143f8 <_start@@Base+0x1048>
   141c8:	mvn	r1, #2
   141cc:	mov	r0, r4
   141d0:	bl	59f30 <lua_settop@@Base>
   141d4:	mov	r0, r4
   141d8:	bl	13cd8 <_start@@Base+0x928>
   141dc:	cmp	r0, #0
   141e0:	bne	142c4 <_start@@Base+0xf14>
   141e4:	mvn	r1, #1
   141e8:	mov	r0, r4
   141ec:	bl	59fb4 <lua_remove@@Base>
   141f0:	cmp	r6, #0
   141f4:	addne	r6, r6, #1
   141f8:	mov	r1, r6
   141fc:	mov	r0, r4
   14200:	bl	139b8 <_start@@Base+0x608>
   14204:	cmp	r0, #0
   14208:	beq	140e0 <_start@@Base+0xd30>
   1420c:	b	142c4 <_start@@Base+0xf14>
   14210:	mov	r2, fp
   14214:	ldr	r1, [pc, #1008]	; 1460c <_start@@Base+0x125c>
   14218:	mov	r0, r4
   1421c:	bl	5db0c <lua_getfield@@Base>
   14220:	ldr	r2, [pc, #1020]	; 14624 <_start@@Base+0x1274>
   14224:	mvn	r1, #0
   14228:	mov	r0, r4
   1422c:	bl	5db0c <lua_getfield@@Base>
   14230:	mvn	r1, #1
   14234:	mov	r0, r4
   14238:	bl	59fb4 <lua_remove@@Base>
   1423c:	ldr	r2, [pc, #996]	; 14628 <_start@@Base+0x1278>
   14240:	mvn	r1, #0
   14244:	mov	r0, r4
   14248:	bl	5db0c <lua_getfield@@Base>
   1424c:	mvn	r1, #1
   14250:	mov	r0, r4
   14254:	bl	59fb4 <lua_remove@@Base>
   14258:	add	r1, r6, #2
   1425c:	mov	r0, r4
   14260:	bl	139b8 <_start@@Base+0x608>
   14264:	cmp	r0, #0
   14268:	beq	140e0 <_start@@Base+0xd30>
   1426c:	b	142c4 <_start@@Base+0xf14>
   14270:	ldrb	r2, [r6, #2]
   14274:	mov	r0, r4
   14278:	cmp	r2, #0
   1427c:	addne	r1, r6, #2
   14280:	ldreq	r1, [r3, #4]
   14284:	ldr	r2, [pc, #928]	; 1462c <_start@@Base+0x127c>
   14288:	addeq	r5, r5, #1
   1428c:	bl	13960 <_start@@Base+0x5b0>
   14290:	cmp	r0, #0
   14294:	beq	140e0 <_start@@Base+0xd30>
   14298:	b	142c4 <_start@@Base+0xf14>
   1429c:	mov	r2, #6
   142a0:	ldr	r1, [pc, #904]	; 14630 <_start@@Base+0x1280>
   142a4:	mov	r0, r4
   142a8:	str	r3, [sp, #4]
   142ac:	bl	5b190 <lua_pushlstring@@Base>
   142b0:	mov	r0, r4
   142b4:	bl	13cd8 <_start@@Base+0x928>
   142b8:	ldr	r3, [sp, #4]
   142bc:	subs	r6, r0, #0
   142c0:	beq	14578 <_start@@Base+0x11c8>
   142c4:	mov	r3, #1
   142c8:	str	r3, [sl, #12]
   142cc:	mov	r0, #0
   142d0:	add	sp, sp, #12
   142d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142d8:	cmp	r2, #108	; 0x6c
   142dc:	beq	14048 <_start@@Base+0xc98>
   142e0:	cmp	r2, #118	; 0x76
   142e4:	bne	142f4 <_start@@Base+0xf44>
   142e8:	ldrb	r3, [r3, #2]
   142ec:	cmp	r3, #0
   142f0:	beq	13eb0 <_start@@Base+0xb00>
   142f4:	ldr	r4, [pc, #824]	; 14634 <_start@@Base+0x1284>
   142f8:	mov	r2, #7
   142fc:	mov	r1, #1
   14300:	ldr	r3, [r4]
   14304:	ldr	r0, [pc, #812]	; 14638 <_start@@Base+0x1288>
   14308:	bl	12d6c <fwrite@plt>
   1430c:	ldr	r3, [pc, #752]	; 14604 <_start@@Base+0x1254>
   14310:	ldr	r1, [r4]
   14314:	ldr	r0, [r3]
   14318:	bl	1303c <fputs@plt>
   1431c:	ldr	r3, [r4]
   14320:	ldr	r2, [pc, #788]	; 1463c <_start@@Base+0x128c>
   14324:	mov	r1, #1
   14328:	ldr	r0, [pc, #784]	; 14640 <_start@@Base+0x1290>
   1432c:	bl	12d6c <fwrite@plt>
   14330:	ldr	r0, [r4]
   14334:	bl	12c7c <fflush@plt>
   14338:	mov	r3, #1
   1433c:	mov	r0, #0
   14340:	str	r3, [sl, #12]
   14344:	add	sp, sp, #12
   14348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1434c:	cmp	r2, #0
   14350:	beq	13ed0 <_start@@Base+0xb20>
   14354:	b	142f4 <_start@@Base+0xf44>
   14358:	ldr	r0, [pc, #740]	; 14644 <_start@@Base+0x1294>
   1435c:	bl	12db4 <getenv@plt>
   14360:	subs	r1, r0, #0
   14364:	beq	143ec <_start@@Base+0x103c>
   14368:	ldrb	r3, [r1]
   1436c:	cmp	r3, #64	; 0x40
   14370:	beq	144c0 <_start@@Base+0x1110>
   14374:	ldr	r2, [pc, #716]	; 14648 <_start@@Base+0x1298>
   14378:	mov	r0, r4
   1437c:	bl	13960 <_start@@Base+0x5b0>
   14380:	cmp	r0, #0
   14384:	str	r0, [sl, #12]
   14388:	beq	13f8c <_start@@Base+0xbdc>
   1438c:	mov	r0, #0
   14390:	add	sp, sp, #12
   14394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14398:	cmp	r9, #0
   1439c:	bne	142f4 <_start@@Base+0xf44>
   143a0:	add	r8, r8, #1
   143a4:	mov	r9, #4
   143a8:	mov	r3, #0
   143ac:	str	r3, [sp, #4]
   143b0:	b	13ef8 <_start@@Base+0xb48>
   143b4:	ldr	r3, [pc, #656]	; 1464c <_start@@Base+0x129c>
   143b8:	mov	r2, #76	; 0x4c
   143bc:	mov	r1, #1
   143c0:	ldr	r3, [r3]
   143c4:	ldr	r0, [pc, #644]	; 14650 <_start@@Base+0x12a0>
   143c8:	bl	12d6c <fwrite@plt>
   143cc:	b	13f94 <_start@@Base+0xbe4>
   143d0:	mov	r8, r2
   143d4:	b	13ebc <_start@@Base+0xb0c>
   143d8:	ldrb	r3, [r3, #2]
   143dc:	cmp	r3, #0
   143e0:	bne	142f4 <_start@@Base+0xf44>
   143e4:	add	r8, r8, #1
   143e8:	b	13ed0 <_start@@Base+0xb20>
   143ec:	ldr	r3, [sp, #4]
   143f0:	str	r3, [sl, #12]
   143f4:	b	13f8c <_start@@Base+0xbdc>
   143f8:	mvn	r1, #1
   143fc:	mov	r0, r4
   14400:	bl	59fb4 <lua_remove@@Base>
   14404:	b	141e4 <_start@@Base+0xe34>
   14408:	mov	r0, r9
   1440c:	bl	12e80 <strlen@plt>
   14410:	mov	r2, r0
   14414:	b	14164 <_start@@Base+0xdb4>
   14418:	ldr	r1, [r7, r8, lsl #2]
   1441c:	add	r7, r7, r8, lsl #2
   14420:	ldrb	r3, [r1]
   14424:	cmp	r3, #45	; 0x2d
   14428:	bne	14460 <_start@@Base+0x10b0>
   1442c:	ldrb	r3, [r1, #1]
   14430:	cmp	r3, #0
   14434:	bne	14460 <_start@@Base+0x10b0>
   14438:	ldr	r2, [r7, #-4]
   1443c:	ldrb	r0, [r2]
   14440:	cmp	r0, #45	; 0x2d
   14444:	bne	144d0 <_start@@Base+0x1120>
   14448:	ldrb	r0, [r2, #1]
   1444c:	cmp	r0, #45	; 0x2d
   14450:	bne	144d0 <_start@@Base+0x1120>
   14454:	ldrb	r3, [r2, #2]
   14458:	cmp	r3, #0
   1445c:	movne	r1, #0
   14460:	mov	r0, r4
   14464:	bl	61454 <luaL_loadfile@@Base>
   14468:	subs	r5, r0, #0
   1446c:	beq	144d8 <_start@@Base+0x1128>
   14470:	mov	r1, r5
   14474:	mov	r0, r4
   14478:	bl	13928 <_start@@Base+0x578>
   1447c:	cmp	r0, #0
   14480:	str	r0, [sl, #12]
   14484:	beq	14104 <_start@@Base+0xd54>
   14488:	b	142cc <_start@@Base+0xf1c>
   1448c:	ldr	r3, [pc, #440]	; 1464c <_start@@Base+0x129c>
   14490:	mov	r2, #76	; 0x4c
   14494:	mov	r1, #1
   14498:	ldr	r3, [r3]
   1449c:	ldr	r0, [pc, #428]	; 14650 <_start@@Base+0x12a0>
   144a0:	bl	12d6c <fwrite@plt>
   144a4:	mov	r0, r4
   144a8:	bl	13524 <_start@@Base+0x174>
   144ac:	mov	r0, r4
   144b0:	bl	13a90 <_start@@Base+0x6e0>
   144b4:	mov	r0, #0
   144b8:	add	sp, sp, #12
   144bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144c0:	add	r1, r1, #1
   144c4:	mov	r0, r4
   144c8:	bl	13a58 <_start@@Base+0x6a8>
   144cc:	b	14380 <_start@@Base+0xfd0>
   144d0:	mov	r1, r3
   144d4:	b	14460 <_start@@Base+0x10b0>
   144d8:	ldr	r2, [pc, #304]	; 14610 <_start@@Base+0x1260>
   144dc:	ldr	r1, [pc, #304]	; 14614 <_start@@Base+0x1264>
   144e0:	mov	r0, r4
   144e4:	bl	5db0c <lua_getfield@@Base>
   144e8:	mvn	r1, #0
   144ec:	mov	r0, r4
   144f0:	bl	5a214 <lua_type@@Base>
   144f4:	cmp	r0, #5
   144f8:	beq	14524 <_start@@Base+0x1174>
   144fc:	mvn	r1, #1
   14500:	mov	r0, r4
   14504:	bl	59f30 <lua_settop@@Base>
   14508:	mov	r1, r5
   1450c:	mov	r2, #0
   14510:	mov	r0, r4
   14514:	bl	137ac <_start@@Base+0x3fc>
   14518:	mov	r5, r0
   1451c:	b	14470 <_start@@Base+0x10c0>
   14520:	mov	r5, r6
   14524:	add	r6, r5, #1
   14528:	rsb	r7, r6, #0
   1452c:	mov	r1, r7
   14530:	mov	r2, r6
   14534:	mov	r0, r4
   14538:	bl	5e014 <lua_rawgeti@@Base>
   1453c:	mvn	r1, #0
   14540:	mov	r0, r4
   14544:	bl	5a214 <lua_type@@Base>
   14548:	cmp	r0, #0
   1454c:	bne	14520 <_start@@Base+0x1170>
   14550:	mov	r0, r4
   14554:	mvn	r1, #1
   14558:	bl	59f30 <lua_settop@@Base>
   1455c:	mov	r1, r7
   14560:	mov	r0, r4
   14564:	bl	59fb4 <lua_remove@@Base>
   14568:	b	14508 <_start@@Base+0x1158>
   1456c:	mov	r9, r3
   14570:	mov	r8, #1
   14574:	b	143a8 <_start@@Base+0xff8>
   14578:	ldr	r2, [r3]
   1457c:	ldrb	r1, [r2, #2]
   14580:	cmp	r1, #0
   14584:	beq	145ac <_start@@Base+0x11fc>
   14588:	mov	r1, #45	; 0x2d
   1458c:	strb	r1, [r2, #1]
   14590:	ldr	r1, [r3]
   14594:	mov	r0, r4
   14598:	add	r1, r1, #1
   1459c:	str	r3, [sp, #4]
   145a0:	bl	5b7a0 <lua_pushstring@@Base>
   145a4:	ldr	r3, [sp, #4]
   145a8:	mov	r6, #1
   145ac:	ldr	r1, [r3, #4]
   145b0:	add	r5, r3, #4
   145b4:	cmp	r1, #0
   145b8:	beq	145d4 <_start@@Base+0x1224>
   145bc:	mov	r0, r4
   145c0:	bl	5b7a0 <lua_pushstring@@Base>
   145c4:	ldr	r1, [r5, #4]!
   145c8:	add	r6, r6, #1
   145cc:	cmp	r1, #0
   145d0:	bne	145bc <_start@@Base+0x120c>
   145d4:	mov	r3, #0
   145d8:	mov	r2, r3
   145dc:	mov	r1, r6
   145e0:	mov	r0, r4
   145e4:	bl	601b4 <lua_pcall@@Base>
   145e8:	mov	r1, r0
   145ec:	mov	r0, r4
   145f0:	bl	13928 <_start@@Base+0x578>
   145f4:	mvn	r3, #0
   145f8:	str	r3, [sl, #12]
   145fc:	b	142cc <_start@@Base+0xf1c>
   14600:			; <UNDEFINED> instruction: 0x000841b4
   14604:	muleq	r8, r8, r1
   14608:	andeq	lr, r6, ip, ror #23
   1460c:			; <UNDEFINED> instruction: 0xffffd8f0
   14610:	strdeq	lr, [r6], -r8
   14614:			; <UNDEFINED> instruction: 0xffffd8ee
   14618:	andeq	lr, r6, r0, lsl r9
   1461c:	andeq	lr, r6, ip, lsr #19
   14620:	andeq	lr, r6, r8, lsl r9
   14624:	andeq	lr, r6, r4, ror ip
   14628:	strdeq	lr, [r6], -ip
   1462c:	andeq	lr, r6, r4, ror #24
   14630:	andeq	lr, r6, ip, ror ip
   14634:	andeq	r4, r8, r0, lsr #3
   14638:	andeq	lr, r6, r4, lsl #20
   1463c:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   14640:	andeq	lr, r6, ip, lsl #20
   14644:	strdeq	lr, [r6], -ip
   14648:	andeq	lr, r6, r8, lsl #24
   1464c:	andeq	r4, r8, ip, lsr #3
   14650:	andeq	lr, r6, r4, lsl ip
   14654:	andeq	r0, r0, r0
   14658:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1465c:	mov	r7, r0
   14660:	ldrb	sl, [r0, #28]
   14664:	ldr	r4, [r1]
   14668:	mov	r8, r1
   1466c:	cmp	r4, #0
   14670:	mov	r6, r2
   14674:	eor	sl, sl, #3
   14678:	ldr	r9, [pc, #160]	; 14720 <_start@@Base+0x1370>
   1467c:	beq	146d8 <_start@@Base+0x1328>
   14680:	cmp	r6, #0
   14684:	beq	146d8 <_start@@Base+0x1328>
   14688:	ldrb	r3, [r4, #5]
   1468c:	mov	r5, r4
   14690:	cmp	r3, #6
   14694:	beq	1470c <_start@@Base+0x135c>
   14698:	ldrb	r3, [r4, #4]
   1469c:	mov	r1, r5
   146a0:	mov	r0, r7
   146a4:	eor	r2, r3, #3
   146a8:	tst	sl, r2
   146ac:	bic	r3, r3, #7
   146b0:	ldr	r4, [r4]
   146b4:	beq	146e0 <_start@@Base+0x1330>
   146b8:	ldrb	r2, [r7, #28]
   146bc:	mov	r8, r5
   146c0:	and	r2, r2, #3
   146c4:	orr	r3, r2, r3
   146c8:	strb	r3, [r5, #4]
   146cc:	cmp	r4, #0
   146d0:	sub	r6, r6, #1
   146d4:	bne	14680 <_start@@Base+0x12d0>
   146d8:	mov	r0, r8
   146dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   146e0:	str	r4, [r8]
   146e4:	ldr	r3, [r7, #36]	; 0x24
   146e8:	cmp	r5, r3
   146ec:	ldreq	r3, [r5]
   146f0:	streq	r3, [r7, #36]	; 0x24
   146f4:	ldrb	r3, [r5, #5]
   146f8:	sub	r3, r3, #4
   146fc:	ldr	r3, [r9, r3, lsl #2]
   14700:	blx	r3
   14704:	ldr	r4, [r8]
   14708:	b	146cc <_start@@Base+0x131c>
   1470c:	mvn	r2, #0
   14710:	add	r1, r4, #32
   14714:	mov	r0, r7
   14718:	bl	14658 <_start@@Base+0x12a8>
   1471c:	b	14698 <_start@@Base+0x12e8>
   14720:			; <UNDEFINED> instruction: 0x0006ecb8
   14724:	push	{r4, r5, r6, lr}
   14728:	ldr	r4, [r0, #12]
   1472c:	ldr	r5, [r1, #12]
   14730:	cmp	r4, r5
   14734:	movcc	r6, r4
   14738:	movcs	r6, r5
   1473c:	cmp	r6, #0
   14740:	beq	14780 <_start@@Base+0x13d0>
   14744:	ldr	ip, [r1, #16]
   14748:	ldr	lr, [r0, #16]
   1474c:	cmp	ip, lr
   14750:	addeq	r2, r0, #16
   14754:	addeq	r1, r1, #16
   14758:	moveq	r3, #0
   1475c:	beq	14774 <_start@@Base+0x13c4>
   14760:	b	14788 <_start@@Base+0x13d8>
   14764:	ldr	lr, [r2, #4]!
   14768:	ldr	ip, [r1, #4]!
   1476c:	cmp	lr, ip
   14770:	bne	1478c <_start@@Base+0x13dc>
   14774:	add	r3, r3, #4
   14778:	cmp	r6, r3
   1477c:	bhi	14764 <_start@@Base+0x13b4>
   14780:	sub	r0, r4, r5
   14784:	pop	{r4, r5, r6, pc}
   14788:	mov	r3, #0
   1478c:	sub	r3, r3, r6
   14790:	cmn	r3, #3
   14794:	rev	lr, lr
   14798:	rev	ip, ip
   1479c:	blt	147b8 <_start@@Base+0x1408>
   147a0:	lsl	r3, r3, #3
   147a4:	add	r3, r3, #32
   147a8:	lsr	lr, lr, r3
   147ac:	lsr	ip, ip, r3
   147b0:	cmp	lr, ip
   147b4:	beq	14780 <_start@@Base+0x13d0>
   147b8:	cmp	lr, ip
   147bc:	mvncc	r0, #0
   147c0:	movcs	r0, #1
   147c4:	pop	{r4, r5, r6, pc}
   147c8:	ldr	r2, [r1, #12]
   147cc:	ldr	ip, [r0, #8]
   147d0:	ldr	r3, [r0, #20]
   147d4:	push	{lr}		; (str lr, [sp, #-4]!)
   147d8:	add	r2, r2, #17
   147dc:	ldr	lr, [r0, #12]
   147e0:	sub	ip, ip, #1
   147e4:	sub	r3, r3, r2
   147e8:	str	ip, [r0, #8]
   147ec:	str	r3, [r0, #20]
   147f0:	mov	ip, lr
   147f4:	ldr	r0, [r0, #16]
   147f8:	mov	r3, #0
   147fc:	pop	{lr}		; (ldr lr, [sp], #4)
   14800:	bx	ip
   14804:	ldr	r2, [r0, #24]
   14808:	ldr	r3, [r0, #8]
   1480c:	cmp	r2, #0
   14810:	beq	1482c <_start@@Base+0x147c>
   14814:	add	r2, r3, r2, lsl #3
   14818:	mvn	r1, #0
   1481c:	str	r1, [r3, #4]
   14820:	add	r3, r3, #8
   14824:	cmp	r3, r2
   14828:	bne	1481c <_start@@Base+0x146c>
   1482c:	ldr	r3, [r0, #28]
   14830:	cmp	r3, #0
   14834:	bxeq	lr
   14838:	add	r1, r3, #1
   1483c:	ldr	r3, [r0, #20]
   14840:	add	r1, r1, r1, lsl #1
   14844:	add	r2, r3, #24
   14848:	lsl	r1, r1, #3
   1484c:	mov	ip, #0
   14850:	mvn	r0, #0
   14854:	push	{lr}		; (str lr, [sp, #-4]!)
   14858:	add	lr, r3, r1
   1485c:	str	lr, [r3, #20]
   14860:	cmp	lr, r2
   14864:	str	ip, [r3, #16]
   14868:	str	r0, [r3, #12]
   1486c:	str	r0, [r3, #4]
   14870:	mov	r3, r2
   14874:	popeq	{pc}		; (ldreq pc, [sp], #4)
   14878:	add	r2, r2, #24
   1487c:	b	14860 <_start@@Base+0x14b0>
   14880:	ldr	r2, [r1, #28]
   14884:	push	{r4, r5, r6, lr}
   14888:	cmp	r2, #0
   1488c:	mov	r4, r0
   14890:	ldr	ip, [r0, #20]
   14894:	ldr	r6, [r0, #12]
   14898:	mov	r5, r1
   1489c:	ldr	r0, [r0, #16]
   148a0:	beq	148d0 <_start@@Base+0x1520>
   148a4:	add	r2, r2, #1
   148a8:	ldr	r1, [r1, #20]
   148ac:	add	r2, r2, r2, lsl #1
   148b0:	mov	r3, #0
   148b4:	lsl	r2, r2, #3
   148b8:	sub	ip, ip, r2
   148bc:	str	ip, [r4, #20]
   148c0:	blx	r6
   148c4:	ldr	ip, [r4, #20]
   148c8:	ldr	r6, [r4, #12]
   148cc:	ldr	r0, [r4, #16]
   148d0:	ldr	r2, [r5, #24]
   148d4:	ldrsb	r3, [r5, #7]
   148d8:	cmp	r2, #0
   148dc:	beq	14910 <_start@@Base+0x1560>
   148e0:	cmp	r3, #0
   148e4:	bgt	14934 <_start@@Base+0x1584>
   148e8:	lsl	r2, r2, #3
   148ec:	sub	ip, ip, r2
   148f0:	ldr	r1, [r5, #8]
   148f4:	mov	r3, #0
   148f8:	str	ip, [r4, #20]
   148fc:	blx	r6
   14900:	ldrsb	r3, [r5, #7]
   14904:	ldr	ip, [r4, #20]
   14908:	ldr	r6, [r4, #12]
   1490c:	ldr	r0, [r4, #16]
   14910:	cmp	r3, #0
   14914:	bne	14934 <_start@@Base+0x1584>
   14918:	sub	ip, ip, #32
   1491c:	str	ip, [r4, #20]
   14920:	mov	r1, r5
   14924:	mov	ip, r6
   14928:	mov	r2, #32
   1492c:	pop	{r4, r5, r6, lr}
   14930:	bx	ip
   14934:	and	r2, r3, #127	; 0x7f
   14938:	add	r2, r2, #4
   1493c:	mov	r1, r5
   14940:	lsl	r2, r2, #3
   14944:	sub	ip, ip, r2
   14948:	str	ip, [r4, #20]
   1494c:	mov	r3, #0
   14950:	mov	ip, r6
   14954:	pop	{r4, r5, r6, lr}
   14958:	bx	ip
   1495c:	ldr	ip, [r1, #32]
   14960:	ldr	r3, [r0, #20]
   14964:	push	{lr}		; (str lr, [sp, #-4]!)
   14968:	sub	r3, r3, ip
   1496c:	ldr	lr, [r0, #12]
   14970:	str	r3, [r0, #20]
   14974:	mov	r2, ip
   14978:	ldr	r0, [r0, #16]
   1497c:	mov	ip, lr
   14980:	mov	r3, #0
   14984:	pop	{lr}		; (ldr lr, [sp], #4)
   14988:	bx	ip
   1498c:	ldrb	r3, [r1, #6]
   14990:	push	{lr}		; (str lr, [sp, #-4]!)
   14994:	cmp	r3, #0
   14998:	ldrdeq	r2, [r1, #8]
   1499c:	streq	r2, [r3, #8]
   149a0:	ldreq	r2, [r1, #8]
   149a4:	streq	r3, [r2, #12]
   149a8:	ldr	r3, [r0, #20]
   149ac:	ldr	lr, [r0, #12]
   149b0:	sub	r3, r3, #24
   149b4:	str	r3, [r0, #20]
   149b8:	mov	ip, lr
   149bc:	ldr	r0, [r0, #16]
   149c0:	mov	r3, #0
   149c4:	mov	r2, #24
   149c8:	pop	{lr}		; (ldr lr, [sp], #4)
   149cc:	bx	ip
   149d0:	ldrb	r3, [r1, #6]
   149d4:	ldrb	r2, [r1, #7]
   149d8:	push	{lr}		; (str lr, [sp, #-4]!)
   149dc:	cmp	r3, #0
   149e0:	addeq	r2, r2, #5
   149e4:	addne	r2, r2, #3
   149e8:	ldr	r3, [r0, #20]
   149ec:	ldr	lr, [r0, #12]
   149f0:	lsleq	r2, r2, #2
   149f4:	lslne	r2, r2, #3
   149f8:	sub	r3, r3, r2
   149fc:	str	r3, [r0, #20]
   14a00:	mov	ip, lr
   14a04:	ldr	r0, [r0, #16]
   14a08:	mov	r3, #0
   14a0c:	pop	{lr}		; (ldr lr, [sp], #4)
   14a10:	bx	ip
   14a14:	ldr	r2, [r1, #12]
   14a18:	ldr	r3, [r0, #20]
   14a1c:	push	{lr}		; (str lr, [sp, #-4]!)
   14a20:	add	r2, r2, #24
   14a24:	ldr	lr, [r0, #12]
   14a28:	sub	r3, r3, r2
   14a2c:	str	r3, [r0, #20]
   14a30:	mov	ip, lr
   14a34:	ldr	r0, [r0, #16]
   14a38:	mov	r3, #0
   14a3c:	pop	{lr}		; (ldr lr, [sp], #4)
   14a40:	bx	ip
   14a44:	ldr	r3, [r0, #28]
   14a48:	ldr	ip, [r2, #8]
   14a4c:	and	ip, ip, r3
   14a50:	ldr	r3, [r0, #20]
   14a54:	add	ip, ip, ip, lsl #1
   14a58:	add	r3, r3, ip, lsl #3
   14a5c:	b	14a6c <_start@@Base+0x16bc>
   14a60:	ldr	r3, [r3, #16]
   14a64:	cmp	r3, #0
   14a68:	beq	14a98 <_start@@Base+0x16e8>
   14a6c:	ldr	ip, [r3, #12]
   14a70:	cmn	ip, #5
   14a74:	bne	14a60 <_start@@Base+0x16b0>
   14a78:	ldr	ip, [r3, #8]
   14a7c:	cmp	r2, ip
   14a80:	bne	14a60 <_start@@Base+0x16b0>
   14a84:	ldr	r2, [r3, #4]
   14a88:	cmn	r2, #1
   14a8c:	beq	14a98 <_start@@Base+0x16e8>
   14a90:	mov	r0, r3
   14a94:	bx	lr
   14a98:	ldrb	r2, [r0, #6]
   14a9c:	mov	ip, #1
   14aa0:	mov	r3, #0
   14aa4:	orr	r1, r2, ip, lsl r1
   14aa8:	strb	r1, [r0, #6]
   14aac:	b	14a90 <_start@@Base+0x16e0>
   14ab0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14ab4:	mov	r9, r0
   14ab8:	mov	r7, r1
   14abc:	ldr	r5, [r0, #116]	; 0x74
   14ac0:	mov	r8, #0
   14ac4:	b	14b08 <_start@@Base+0x1758>
   14ac8:	ldrb	r3, [r4, #4]
   14acc:	mov	r6, r4
   14ad0:	and	r2, r3, #3
   14ad4:	orrs	r2, r2, r7
   14ad8:	beq	14b04 <_start@@Base+0x1754>
   14adc:	tst	r3, #8
   14ae0:	bne	14b04 <_start@@Base+0x1754>
   14ae4:	ldr	r0, [r4, #16]
   14ae8:	cmp	r0, #0
   14aec:	beq	14afc <_start@@Base+0x174c>
   14af0:	ldrb	r2, [r0, #6]
   14af4:	tst	r2, #4
   14af8:	beq	14b1c <_start@@Base+0x176c>
   14afc:	orr	r3, r3, #8
   14b00:	strb	r3, [r4, #4]
   14b04:	mov	r5, r6
   14b08:	ldr	r4, [r5]
   14b0c:	cmp	r4, #0
   14b10:	bne	14ac8 <_start@@Base+0x1718>
   14b14:	mov	r0, r8
   14b18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b1c:	ldr	r2, [r9, #240]	; 0xf0
   14b20:	mov	r1, #2
   14b24:	bl	14a44 <_start@@Base+0x1694>
   14b28:	ldrb	r3, [r4, #4]
   14b2c:	cmp	r0, #0
   14b30:	beq	14afc <_start@@Base+0x174c>
   14b34:	ldr	r1, [r4]
   14b38:	orr	r3, r3, #8
   14b3c:	ldr	r2, [r4, #12]
   14b40:	strb	r3, [r4, #4]
   14b44:	str	r1, [r5]
   14b48:	ldr	r3, [r9, #56]	; 0x38
   14b4c:	add	r8, r8, #24
   14b50:	cmp	r3, #0
   14b54:	add	r8, r8, r2
   14b58:	ldrne	r2, [r3]
   14b5c:	streq	r4, [r4]
   14b60:	strne	r2, [r4]
   14b64:	mov	r6, r5
   14b68:	strne	r4, [r3]
   14b6c:	str	r4, [r9, #56]	; 0x38
   14b70:	b	14b04 <_start@@Base+0x1754>
   14b74:	ldr	ip, [r0, #16]
   14b78:	push	{r4, r5, r6, lr}
   14b7c:	sub	ip, ip, #8
   14b80:	ldr	r4, [r0, #28]
   14b84:	cmp	r4, ip
   14b88:	bcs	14c00 <_start@@Base+0x1850>
   14b8c:	mov	lr, r0
   14b90:	mov	r0, ip
   14b94:	b	14bb8 <_start@@Base+0x1808>
   14b98:	ldrb	r3, [ip, #-3]
   14b9c:	mov	r1, r5
   14ba0:	mov	ip, r0
   14ba4:	add	r3, r3, #1
   14ba8:	sub	r3, r0, r3, lsl #3
   14bac:	cmp	r3, r4
   14bb0:	mov	r0, r3
   14bb4:	bls	14c00 <_start@@Base+0x1850>
   14bb8:	ldr	r3, [r0]
   14bbc:	cmp	lr, r3
   14bc0:	addeq	r1, r1, #1
   14bc4:	cmp	r1, #0
   14bc8:	sub	r5, r1, #1
   14bcc:	beq	14c0c <_start@@Base+0x185c>
   14bd0:	ldr	ip, [r0, #4]
   14bd4:	bic	r3, ip, #7
   14bd8:	tst	ip, #3
   14bdc:	and	r6, ip, #7
   14be0:	sub	r3, r0, r3
   14be4:	beq	14b98 <_start@@Base+0x17e8>
   14be8:	cmp	r6, #3
   14bec:	movne	r1, r5
   14bf0:	cmp	r3, r4
   14bf4:	mov	ip, r0
   14bf8:	mov	r0, r3
   14bfc:	bhi	14bb8 <_start@@Base+0x1808>
   14c00:	mov	r0, #0
   14c04:	str	r1, [r2]
   14c08:	pop	{r4, r5, r6, pc}
   14c0c:	sub	ip, ip, r0
   14c10:	asr	ip, ip, #3
   14c14:	str	ip, [r2]
   14c18:	pop	{r4, r5, r6, pc}
   14c1c:	ldr	r2, [r0, #8]
   14c20:	ldr	ip, [r0, #52]	; 0x34
   14c24:	cmp	r2, r1
   14c28:	movcc	r3, #0
   14c2c:	movcs	r3, #1
   14c30:	cmp	ip, #0
   14c34:	moveq	r3, #0
   14c38:	cmp	r3, #0
   14c3c:	bne	14c48 <_start@@Base+0x1898>
   14c40:	mov	r0, r3
   14c44:	bx	lr
   14c48:	cmp	r2, r1
   14c4c:	ldr	r3, [r0, #44]	; 0x2c
   14c50:	beq	14c84 <_start@@Base+0x18d4>
   14c54:	cmp	r1, #0
   14c58:	beq	14c40 <_start@@Base+0x1890>
   14c5c:	ldr	r2, [r0, #48]	; 0x30
   14c60:	sub	r1, r1, #1
   14c64:	cmp	r2, #255	; 0xff
   14c68:	ble	14c90 <_start@@Base+0x18e0>
   14c6c:	cmp	r2, #65536	; 0x10000
   14c70:	lsllt	r1, r1, #1
   14c74:	ldrge	r2, [ip, r1, lsl #2]
   14c78:	ldrhlt	r2, [ip, r1]
   14c7c:	add	r3, r3, r2
   14c80:	b	14c40 <_start@@Base+0x1890>
   14c84:	ldr	r2, [r0, #48]	; 0x30
   14c88:	add	r3, r3, r2
   14c8c:	b	14c40 <_start@@Base+0x1890>
   14c90:	ldrb	r2, [ip, r1]
   14c94:	add	r3, r3, r2
   14c98:	b	14c40 <_start@@Base+0x1890>
   14c9c:	ldr	r3, [r0, #4]
   14ca0:	cmn	r3, #9
   14ca4:	bne	14d38 <_start@@Base+0x1988>
   14ca8:	ldr	r3, [r0]
   14cac:	ldrb	r0, [r3, #6]
   14cb0:	cmp	r0, #0
   14cb4:	bne	14d18 <_start@@Base+0x1968>
   14cb8:	ldr	ip, [r3, #16]
   14cbc:	push	{lr}		; (str lr, [sp, #-4]!)
   14cc0:	sub	ip, ip, #64	; 0x40
   14cc4:	ldrb	lr, [ip, #36]	; 0x24
   14cc8:	cmp	lr, r1
   14ccc:	popls	{pc}		; (ldrls pc, [sp], #4)
   14cd0:	add	r3, r3, r1, lsl #2
   14cd4:	ldr	r0, [ip, #56]	; 0x38
   14cd8:	ldr	r3, [r3, #20]
   14cdc:	cmp	r0, #0
   14ce0:	ldr	r3, [r3, #16]
   14ce4:	str	r3, [r2]
   14ce8:	beq	14d40 <_start@@Base+0x1990>
   14cec:	cmp	r1, #0
   14cf0:	mov	r3, r0
   14cf4:	popeq	{pc}		; (ldreq pc, [sp], #4)
   14cf8:	ldrb	r2, [r3]
   14cfc:	add	r0, r3, #1
   14d00:	mov	r3, r0
   14d04:	cmp	r2, #0
   14d08:	bne	14cf8 <_start@@Base+0x1948>
   14d0c:	subs	r1, r1, #1
   14d10:	bne	14cf8 <_start@@Base+0x1948>
   14d14:	pop	{pc}		; (ldr pc, [sp], #4)
   14d18:	ldrb	r0, [r3, #7]
   14d1c:	cmp	r0, r1
   14d20:	bls	14d38 <_start@@Base+0x1988>
   14d24:	add	r1, r1, #3
   14d28:	ldr	r0, [pc, #24]	; 14d48 <_start@@Base+0x1998>
   14d2c:	add	r1, r3, r1, lsl #3
   14d30:	str	r1, [r2]
   14d34:	bx	lr
   14d38:	mov	r0, #0
   14d3c:	bx	lr
   14d40:	ldr	r0, [pc]	; 14d48 <_start@@Base+0x1998>
   14d44:	pop	{pc}		; (ldr pc, [sp], #4)
   14d48:	andeq	lr, r6, r0, ror #24
   14d4c:	cmp	r1, #0
   14d50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d54:	mov	r4, r0
   14d58:	sub	sp, sp, #20
   14d5c:	add	r0, r0, #1
   14d60:	bge	14d7c <_start@@Base+0x19cc>
   14d64:	mov	r3, r4
   14d68:	mov	r2, #45	; 0x2d
   14d6c:	mov	r4, r0
   14d70:	strb	r2, [r3], #2
   14d74:	rsb	r1, r1, #0
   14d78:	mov	r0, r3
   14d7c:	ldr	lr, [pc, #748]	; 15070 <_start@@Base+0x1cc0>
   14d80:	cmp	r1, lr
   14d84:	bhi	14e34 <_start@@Base+0x1a84>
   14d88:	cmp	r1, #9
   14d8c:	bls	14e24 <_start@@Base+0x1a74>
   14d90:	cmp	r1, #99	; 0x63
   14d94:	add	r5, r0, #1
   14d98:	bls	14f68 <_start@@Base+0x1bb8>
   14d9c:	cmp	r1, #1000	; 0x3e8
   14da0:	add	r3, r0, #2
   14da4:	bcc	15014 <_start@@Base+0x1c64>
   14da8:	mov	r7, r4
   14dac:	mov	r6, r0
   14db0:	mov	lr, r1
   14db4:	mov	r4, r3
   14db8:	add	r0, r0, #3
   14dbc:	add	r2, lr, lr, lsl #6
   14dc0:	add	r2, lr, r2, lsl #1
   14dc4:	add	r2, lr, r2, lsl #4
   14dc8:	add	r2, lr, r2, lsl #2
   14dcc:	lsr	r2, r2, #23
   14dd0:	add	r3, r2, #48	; 0x30
   14dd4:	rsb	r1, r2, r2, lsl #5
   14dd8:	strb	r3, [r7]
   14ddc:	add	r2, r2, r1, lsl #2
   14de0:	sub	r1, lr, r2, lsl #3
   14de4:	add	r3, r1, r1, lsl #2
   14de8:	add	r3, r1, r3, lsl #3
   14dec:	lsr	r3, r3, #12
   14df0:	add	r2, r3, #48	; 0x30
   14df4:	add	r3, r3, r3, lsl #2
   14df8:	strb	r2, [r6]
   14dfc:	add	r3, r3, r3, lsl #2
   14e00:	sub	r1, r1, r3, lsl #2
   14e04:	add	r3, r1, r1, lsl #1
   14e08:	add	r3, r3, r3, lsl #4
   14e0c:	add	r3, r1, r3, lsl #1
   14e10:	lsr	r3, r3, #10
   14e14:	add	r2, r3, #48	; 0x30
   14e18:	add	r3, r3, r3, lsl #2
   14e1c:	strb	r2, [r5]
   14e20:	sub	r1, r1, r3, lsl #1
   14e24:	add	r1, r1, #48	; 0x30
   14e28:	strb	r1, [r4]
   14e2c:	add	sp, sp, #20
   14e30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e34:	ldr	r2, [pc, #568]	; 15074 <_start@@Base+0x1cc4>
   14e38:	add	r6, r0, #1
   14e3c:	add	r5, r0, #2
   14e40:	umull	r2, r3, r1, r2
   14e44:	add	r8, r0, #3
   14e48:	lsr	ip, r3, #13
   14e4c:	cmp	ip, lr
   14e50:	rsb	lr, ip, ip, lsl #5
   14e54:	add	r7, r0, #4
   14e58:	add	lr, ip, lr, lsl #2
   14e5c:	add	lr, lr, lr, lsl #2
   14e60:	sub	lr, r1, lr, lsl #4
   14e64:	bhi	14e94 <_start@@Base+0x1ae4>
   14e68:	cmp	ip, #9
   14e6c:	bhi	14f7c <_start@@Base+0x1bcc>
   14e70:	mov	r2, r7
   14e74:	mov	r3, r8
   14e78:	mov	r7, r0
   14e7c:	mov	r8, r4
   14e80:	mov	r0, r2
   14e84:	mov	r4, r3
   14e88:	add	ip, ip, #48	; 0x30
   14e8c:	strb	ip, [r8]
   14e90:	b	14dbc <_start@@Base+0x1a0c>
   14e94:	ldr	r2, [pc, #476]	; 15078 <_start@@Base+0x1cc8>
   14e98:	add	r3, r0, #6
   14e9c:	str	r3, [sp, #8]
   14ea0:	umull	r2, r3, r1, r2
   14ea4:	add	r1, r0, #8
   14ea8:	lsr	r3, r3, #25
   14eac:	cmp	r3, #9
   14eb0:	rsb	r2, r3, r3, lsl #5
   14eb4:	add	r9, r0, #5
   14eb8:	add	r2, r3, r2, lsl #2
   14ebc:	add	sl, r0, #7
   14ec0:	add	r2, r2, r2, lsl #2
   14ec4:	str	r1, [sp, #12]
   14ec8:	sub	ip, ip, r2, lsl #4
   14ecc:	bhi	14fc0 <_start@@Base+0x1c10>
   14ed0:	mov	r2, r5
   14ed4:	mov	r1, r0
   14ed8:	ldr	r5, [sp, #8]
   14edc:	ldr	r0, [sp, #12]
   14ee0:	str	r6, [sp, #4]
   14ee4:	mov	fp, r4
   14ee8:	mov	r6, r9
   14eec:	mov	r4, sl
   14ef0:	add	r3, r3, #48	; 0x30
   14ef4:	strb	r3, [fp]
   14ef8:	add	r3, ip, ip, lsl #6
   14efc:	add	r3, ip, r3, lsl #1
   14f00:	add	r3, ip, r3, lsl #4
   14f04:	add	r3, ip, r3, lsl #2
   14f08:	lsr	r3, r3, #23
   14f0c:	add	sl, r3, #48	; 0x30
   14f10:	rsb	r9, r3, r3, lsl #5
   14f14:	strb	sl, [r1]
   14f18:	add	r3, r3, r9, lsl #2
   14f1c:	sub	ip, ip, r3, lsl #3
   14f20:	add	r3, ip, ip, lsl #2
   14f24:	ldr	r9, [sp, #4]
   14f28:	add	r3, ip, r3, lsl #3
   14f2c:	lsr	r3, r3, #12
   14f30:	add	r1, r3, #48	; 0x30
   14f34:	add	r3, r3, r3, lsl #2
   14f38:	strb	r1, [r9]
   14f3c:	add	r3, r3, r3, lsl #2
   14f40:	sub	ip, ip, r3, lsl #2
   14f44:	add	r3, ip, ip, lsl #1
   14f48:	add	r3, r3, r3, lsl #4
   14f4c:	add	r3, ip, r3, lsl #1
   14f50:	lsr	r3, r3, #10
   14f54:	add	r1, r3, #48	; 0x30
   14f58:	add	r3, r3, r3, lsl #2
   14f5c:	strb	r1, [r2]
   14f60:	sub	ip, ip, r3, lsl #1
   14f64:	b	14e88 <_start@@Base+0x1ad8>
   14f68:	mov	r3, r5
   14f6c:	mov	r5, r4
   14f70:	mov	r4, r0
   14f74:	mov	r0, r3
   14f78:	b	14e04 <_start@@Base+0x1a54>
   14f7c:	cmp	ip, #99	; 0x63
   14f80:	add	r3, r0, #5
   14f84:	bls	15028 <_start@@Base+0x1c78>
   14f88:	cmp	ip, #1000	; 0x3e8
   14f8c:	add	r9, r0, #6
   14f90:	bcs	15048 <_start@@Base+0x1c98>
   14f94:	mov	r2, r8
   14f98:	mov	r1, r7
   14f9c:	mov	r8, r6
   14fa0:	mov	r7, r5
   14fa4:	mov	r6, r2
   14fa8:	str	r4, [sp, #4]
   14fac:	mov	r2, r0
   14fb0:	mov	r5, r1
   14fb4:	mov	r0, r9
   14fb8:	mov	r4, r3
   14fbc:	b	14f20 <_start@@Base+0x1b70>
   14fc0:	add	r1, r3, r3, lsl #1
   14fc4:	str	r5, [sp, #4]
   14fc8:	add	r1, r1, r1, lsl #4
   14fcc:	mov	r2, r8
   14fd0:	add	r1, r3, r1, lsl #1
   14fd4:	mov	r8, r7
   14fd8:	lsr	fp, r1, #10
   14fdc:	add	r5, fp, #48	; 0x30
   14fe0:	str	r5, [sp, #8]
   14fe4:	mov	r7, r9
   14fe8:	ldrb	r9, [sp, #8]
   14fec:	add	fp, fp, fp, lsl #2
   14ff0:	mov	r1, r6
   14ff4:	strb	r9, [r4]
   14ff8:	add	r6, r0, #6
   14ffc:	sub	r3, r3, fp, lsl #1
   15000:	add	r4, r0, #8
   15004:	mov	fp, r0
   15008:	mov	r5, sl
   1500c:	add	r0, r0, #9
   15010:	b	14ef0 <_start@@Base+0x1b40>
   15014:	mov	r6, r4
   15018:	mov	r4, r5
   1501c:	mov	r5, r0
   15020:	mov	r0, r3
   15024:	b	14de4 <_start@@Base+0x1a34>
   15028:	mov	r2, r4
   1502c:	mov	r4, r7
   15030:	mov	r7, r6
   15034:	mov	r6, r5
   15038:	mov	r5, r8
   1503c:	mov	r8, r0
   15040:	mov	r0, r3
   15044:	b	14f44 <_start@@Base+0x1b94>
   15048:	mov	r2, r6
   1504c:	mov	r1, r4
   15050:	mov	r6, r7
   15054:	str	r0, [sp, #4]
   15058:	mov	r7, r8
   1505c:	mov	r4, r9
   15060:	mov	r8, r5
   15064:	add	r0, r0, #7
   15068:	mov	r5, r3
   1506c:	b	14ef8 <_start@@Base+0x1b48>
   15070:	andeq	r2, r0, pc, lsl #14
   15074:			; <UNDEFINED> instruction: 0xd1b71759
   15078:	strbpl	r3, [r6, #2953]!	; 0xb89
   1507c:	push	{r4, r5, r6, r7, lr}
   15080:	add	r0, r0, #9
   15084:	ldr	r4, [pc, #284]	; 151a8 <_start@@Base+0x1df8>
   15088:	ldr	r2, [pc, #284]	; 151ac <_start@@Base+0x1dfc>
   1508c:	umull	r4, r5, r1, r4
   15090:	umull	r2, r3, r1, r2
   15094:	lsr	r7, r5, #25
   15098:	lsr	r3, r3, #13
   1509c:	rsb	ip, r7, r7, lsl #5
   150a0:	rsb	r2, r3, r3, lsl #5
   150a4:	add	ip, r7, ip, lsl #2
   150a8:	add	r2, r3, r2, lsl #2
   150ac:	add	ip, ip, ip, lsl #2
   150b0:	add	r2, r2, r2, lsl #2
   150b4:	sub	ip, r3, ip, lsl #4
   150b8:	sub	r2, r1, r2, lsl #4
   150bc:	add	r4, ip, ip, lsl #6
   150c0:	add	lr, r2, r2, lsl #6
   150c4:	add	r4, ip, r4, lsl #1
   150c8:	add	lr, r2, lr, lsl #1
   150cc:	add	r4, ip, r4, lsl #4
   150d0:	add	lr, r2, lr, lsl #4
   150d4:	add	r4, ip, r4, lsl #2
   150d8:	add	lr, r2, lr, lsl #2
   150dc:	lsr	r4, r4, #23
   150e0:	lsr	lr, lr, #23
   150e4:	rsb	r3, r4, r4, lsl #5
   150e8:	rsb	r1, lr, lr, lsl #5
   150ec:	add	r3, r4, r3, lsl #2
   150f0:	add	r1, lr, r1, lsl #2
   150f4:	sub	ip, ip, r3, lsl #3
   150f8:	sub	r2, r2, r1, lsl #3
   150fc:	add	r5, ip, ip, lsl #2
   15100:	add	r6, r2, r2, lsl #2
   15104:	add	r5, ip, r5, lsl #3
   15108:	add	r6, r2, r6, lsl #3
   1510c:	lsr	r5, r5, #12
   15110:	lsr	r6, r6, #12
   15114:	add	r3, r5, r5, lsl #2
   15118:	add	r1, r6, r6, lsl #2
   1511c:	add	r3, r3, r3, lsl #2
   15120:	add	r1, r1, r1, lsl #2
   15124:	sub	r3, ip, r3, lsl #2
   15128:	sub	r1, r2, r1, lsl #2
   1512c:	add	ip, r3, r3, lsl #1
   15130:	add	r2, r1, r1, lsl #1
   15134:	add	ip, ip, ip, lsl #4
   15138:	add	r2, r2, r2, lsl #4
   1513c:	add	ip, r3, ip, lsl #1
   15140:	add	r2, r1, r2, lsl #1
   15144:	lsr	ip, ip, #10
   15148:	add	r4, r4, #48	; 0x30
   1514c:	strb	r4, [r0, #-8]
   15150:	lsr	r2, r2, #10
   15154:	add	r4, ip, ip, lsl #2
   15158:	add	r7, r7, #48	; 0x30
   1515c:	sub	r3, r3, r4, lsl #1
   15160:	add	r4, r2, r2, lsl #2
   15164:	add	r5, r5, #48	; 0x30
   15168:	sub	r1, r1, r4, lsl #1
   1516c:	add	lr, lr, #48	; 0x30
   15170:	add	r6, r6, #48	; 0x30
   15174:	add	ip, ip, #48	; 0x30
   15178:	add	r3, r3, #48	; 0x30
   1517c:	add	r2, r2, #48	; 0x30
   15180:	add	r1, r1, #48	; 0x30
   15184:	strb	r7, [r0, #-9]
   15188:	strb	r5, [r0, #-7]
   1518c:	strb	ip, [r0, #-6]
   15190:	strb	r3, [r0, #-5]
   15194:	strb	lr, [r0, #-4]
   15198:	strb	r6, [r0, #-3]
   1519c:	strb	r2, [r0, #-2]
   151a0:	strb	r1, [r0, #-1]
   151a4:	pop	{r4, r5, r6, r7, pc}
   151a8:	strbpl	r3, [r6, #2953]!	; 0xb89
   151ac:			; <UNDEFINED> instruction: 0xd1b71759
   151b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151b4:	sub	sp, sp, #28
   151b8:	cmp	r2, #22
   151bc:	str	r0, [sp, #12]
   151c0:	bls	151ec <_start@@Base+0x1e3c>
   151c4:	ldr	r0, [sp, #64]	; 0x40
   151c8:	lsr	r0, r0, #4
   151cc:	and	r0, r0, #3
   151d0:	cmp	r0, #2
   151d4:	beq	151f4 <_start@@Base+0x1e44>
   151d8:	ldr	r0, [sp, #64]	; 0x40
   151dc:	lsr	fp, r0, #24
   151e0:	add	fp, fp, #16
   151e4:	sub	fp, r1, fp, lsr #3
   151e8:	b	151f8 <_start@@Base+0x1e48>
   151ec:	cmp	r2, #10
   151f0:	bls	1533c <_start@@Base+0x1f8c>
   151f4:	mov	fp, #1
   151f8:	ldr	r9, [pc, #336]	; 15350 <_start@@Base+0x1fa0>
   151fc:	ldr	r8, [pc, #336]	; 15354 <_start@@Base+0x1fa4>
   15200:	mov	sl, #0
   15204:	mov	r0, r1
   15208:	cmp	r0, sl
   1520c:	bcc	15268 <_start@@Base+0x1eb8>
   15210:	sub	ip, sl, #-1073741823	; 0xc0000001
   15214:	ldr	r4, [sp, #12]
   15218:	mov	lr, sl
   1521c:	add	ip, r4, ip, lsl #2
   15220:	ldr	r6, [ip, #4]!
   15224:	add	lr, lr, #1
   15228:	cmp	lr, r0
   1522c:	lsr	r5, r6, #21
   15230:	lsl	r4, r6, #11
   15234:	orr	r4, r4, r3
   15238:	lsr	r3, r4, #9
   1523c:	orr	r3, r3, r5, lsl #23
   15240:	strd	r4, [sp]
   15244:	umull	r6, r7, r3, r9
   15248:	ldr	r4, [sp]
   1524c:	sub	r3, r3, r7
   15250:	add	r3, r7, r3, lsr #1
   15254:	lsr	r3, r3, #20
   15258:	mul	r5, r8, r3
   1525c:	sub	r4, r4, r5
   15260:	str	r4, [ip]
   15264:	bls	15220 <_start@@Base+0x1e70>
   15268:	cmp	r3, #0
   1526c:	beq	15288 <_start@@Base+0x1ed8>
   15270:	cmp	sl, fp
   15274:	ldr	ip, [sp, #12]
   15278:	add	fp, fp, #1
   1527c:	add	r0, r0, #1
   15280:	moveq	sl, fp
   15284:	str	r3, [ip, r0, lsl #2]
   15288:	sub	r2, r2, #11
   1528c:	cmp	r2, #10
   15290:	mov	r3, #0
   15294:	bhi	15208 <_start@@Base+0x1e58>
   15298:	cmp	r2, #0
   1529c:	beq	15334 <_start@@Base+0x1f84>
   152a0:	cmp	r0, sl
   152a4:	bcc	15334 <_start@@Base+0x1f84>
   152a8:	sub	r1, sl, #-1073741823	; 0xc0000001
   152ac:	ldr	ip, [sp, #12]
   152b0:	rsb	lr, r2, #32
   152b4:	add	r1, ip, r1, lsl #2
   152b8:	ldr	fp, [pc, #144]	; 15350 <_start@@Base+0x1fa0>
   152bc:	ldr	r9, [pc, #144]	; 15354 <_start@@Base+0x1fa4>
   152c0:	sub	r8, r2, #32
   152c4:	str	r2, [sp]
   152c8:	str	lr, [sp, #16]
   152cc:	mov	r2, r1
   152d0:	mov	lr, r0
   152d4:	ldr	r1, [r2, #4]!
   152d8:	ldr	r0, [sp, #16]
   152dc:	add	sl, sl, #1
   152e0:	lsl	r5, r1, r8
   152e4:	orr	r5, r5, r1, lsr r0
   152e8:	ldr	r0, [sp]
   152ec:	cmp	sl, lr
   152f0:	lsl	r4, r1, r0
   152f4:	orr	r6, r4, r3
   152f8:	lsr	r3, r6, #9
   152fc:	orr	r3, r3, r5, lsl #23
   15300:	umull	r0, r1, r3, fp
   15304:	sub	r3, r3, r1
   15308:	add	r3, r1, r3, lsr #1
   1530c:	lsr	r3, r3, #20
   15310:	mul	r1, r9, r3
   15314:	sub	r6, r6, r1
   15318:	str	r6, [r2]
   1531c:	bls	152d4 <_start@@Base+0x1f24>
   15320:	cmp	r3, #0
   15324:	mov	r0, lr
   15328:	ldrne	r2, [sp, #12]
   1532c:	addne	r0, lr, #1
   15330:	strne	r3, [r2, r0, lsl #2]
   15334:	add	sp, sp, #28
   15338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1533c:	cmp	r2, #0
   15340:	mov	r0, r1
   15344:	movne	sl, #0
   15348:	bne	152a8 <_start@@Base+0x1ef8>
   1534c:	b	15334 <_start@@Base+0x1f84>
   15350:	rscne	fp, r0, #2096	; 0x830
   15354:	blcc	fe6c7b5c <__bss_end__@@Base+0xfe6438e4>
   15358:	push	{r4, lr}
   1535c:	sub	sp, sp, #8
   15360:	ldr	r3, [r0, #60]	; 0x3c
   15364:	ldr	r1, [r0, #64]	; 0x40
   15368:	mov	r4, r0
   1536c:	add	r2, sp, #4
   15370:	ldr	r0, [r0, #4]
   15374:	blx	r3
   15378:	cmp	r0, #0
   1537c:	beq	153a4 <_start@@Base+0x1ff4>
   15380:	ldr	r3, [sp, #4]
   15384:	cmp	r3, #0
   15388:	beq	153a4 <_start@@Base+0x1ff4>
   1538c:	add	r3, r0, r3
   15390:	add	r2, r0, #1
   15394:	strd	r2, [r4, #24]
   15398:	ldrb	r0, [r0]
   1539c:	add	sp, sp, #8
   153a0:	pop	{r4, pc}
   153a4:	mvn	r0, #0
   153a8:	b	1539c <_start@@Base+0x1fec>
   153ac:	ldr	r0, [r1, #4]
   153b0:	cmp	r0, #0
   153b4:	movne	r3, #0
   153b8:	strne	r0, [r2]
   153bc:	ldrne	r0, [r1]
   153c0:	strne	r3, [r1, #4]
   153c4:	bx	lr
   153c8:	ldr	ip, [pc, #120]	; 15448 <_start@@Base+0x2098>
   153cc:	push	{r4, lr}
   153d0:	add	ip, r2, ip
   153d4:	eor	lr, r2, ip
   153d8:	sub	lr, lr, ip, ror #18
   153dc:	eor	ip, lr, ip, ror #13
   153e0:	sub	ip, ip, lr, ror #19
   153e4:	and	ip, ip, #127	; 0x7f
   153e8:	mov	lr, r0
   153ec:	add	ip, r0, ip, lsl #1
   153f0:	ldr	r4, [lr]
   153f4:	ldrh	r0, [ip, #200]	; 0xc8
   153f8:	cmp	r0, #0
   153fc:	bne	15410 <_start@@Base+0x2060>
   15400:	b	1543c <_start@@Base+0x208c>
   15404:	ldrh	r0, [ip, #10]
   15408:	cmp	r0, #0
   1540c:	beq	1543c <_start@@Base+0x208c>
   15410:	add	ip, r4, r0, lsl #4
   15414:	ldr	lr, [ip, #12]
   15418:	cmp	r2, lr
   1541c:	bne	15404 <_start@@Base+0x2054>
   15420:	ldr	lr, [r4, r0, lsl #4]
   15424:	lsr	lr, lr, #28
   15428:	lsr	lr, r3, lr
   1542c:	tst	lr, #1
   15430:	beq	15404 <_start@@Base+0x2054>
   15434:	str	ip, [r1]
   15438:	pop	{r4, pc}
   1543c:	mov	r0, #0
   15440:	str	r4, [r1]
   15444:	pop	{r4, pc}
   15448:	blx	fcdd76 <__bss_end__@@Base+0xf49afe>
   1544c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15450:	mov	r6, r0
   15454:	ldr	r8, [pc, #236]	; 15548 <_start@@Base+0x2198>
   15458:	ldr	r7, [pc, #236]	; 1554c <_start@@Base+0x219c>
   1545c:	sub	sp, sp, #8
   15460:	mov	r4, r1
   15464:	mov	r5, r2
   15468:	mov	r9, r3
   1546c:	ldrh	r0, [r4, #8]
   15470:	cmp	r0, #0
   15474:	beq	1552c <_start@@Base+0x217c>
   15478:	ldr	r3, [r6]
   1547c:	add	r4, r3, r0, lsl #4
   15480:	ldr	r2, [r4, #12]
   15484:	cmp	r5, r2
   15488:	beq	15534 <_start@@Base+0x2184>
   1548c:	ldr	r1, [r3, r0, lsl #4]
   15490:	and	r2, r1, r8
   15494:	cmp	r2, r7
   15498:	bne	1546c <_start@@Base+0x20bc>
   1549c:	uxth	r1, r1
   154a0:	mov	sl, #0
   154a4:	ldr	r2, [r3, r1, lsl #4]
   154a8:	add	r1, r3, r1, lsl #4
   154ac:	lsr	r0, r2, #28
   154b0:	cmp	r0, #8
   154b4:	bne	154e4 <_start@@Base+0x2134>
   154b8:	uxth	r0, r2
   154bc:	lsr	r2, r2, #16
   154c0:	uxtb	r2, r2
   154c4:	cmp	r2, #1
   154c8:	ldreq	r2, [r1, #4]
   154cc:	add	r1, r3, r0, lsl #4
   154d0:	orreq	sl, sl, r2
   154d4:	ldr	r2, [r3, r0, lsl #4]
   154d8:	lsr	r0, r2, #28
   154dc:	cmp	r0, #8
   154e0:	beq	154b8 <_start@@Base+0x2108>
   154e4:	ldr	r3, [sp, #40]	; 0x28
   154e8:	mov	r2, r5
   154ec:	str	r3, [sp]
   154f0:	mov	r0, r6
   154f4:	mov	r3, r9
   154f8:	bl	1544c <_start@@Base+0x209c>
   154fc:	cmp	r0, #0
   15500:	beq	1546c <_start@@Base+0x20bc>
   15504:	ldr	r3, [sp, #40]	; 0x28
   15508:	cmp	r3, #0
   1550c:	ldrne	r3, [r3]
   15510:	orrne	sl, r3, sl
   15514:	ldrne	r3, [sp, #40]	; 0x28
   15518:	strne	sl, [r3]
   1551c:	ldr	r2, [r4, #4]
   15520:	ldr	r3, [r9]
   15524:	add	r3, r3, r2
   15528:	str	r3, [r9]
   1552c:	add	sp, sp, #8
   15530:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15534:	ldr	r3, [r4, #4]
   15538:	mov	r0, r4
   1553c:	str	r3, [r9]
   15540:	add	sp, sp, #8
   15544:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15548:			; <UNDEFINED> instruction: 0xf0ff0000
   1554c:	andhi	r0, r3, r0
   15550:	mov	ip, r0
   15554:	push	{lr}		; (str lr, [sp, #-4]!)
   15558:	add	lr, r2, #1
   1555c:	ldr	r3, [ip], #24
   15560:	add	ip, ip, lr
   15564:	cmp	r3, ip
   15568:	bcc	155b0 <_start@@Base+0x2200>
   1556c:	ldr	ip, [r0, #16]
   15570:	cmp	ip, #0
   15574:	movne	ip, #32
   15578:	strbne	ip, [r3, #-1]
   1557c:	subne	r3, r3, #1
   15580:	mov	ip, #1
   15584:	cmp	r2, #0
   15588:	str	ip, [r0, #16]
   1558c:	sub	lr, r3, r2
   15590:	beq	155a8 <_start@@Base+0x21f8>
   15594:	add	r2, r1, r2
   15598:	ldrb	ip, [r2, #-1]!
   1559c:	cmp	r2, r1
   155a0:	strb	ip, [r3, #-1]!
   155a4:	bne	15598 <_start@@Base+0x21e8>
   155a8:	str	lr, [r0]
   155ac:	pop	{pc}		; (ldr pc, [sp], #4)
   155b0:	mov	r3, #0
   155b4:	str	r3, [r0, #20]
   155b8:	pop	{pc}		; (ldr pc, [sp], #4)
   155bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155c0:	sub	sp, sp, #12
   155c4:	ldr	r5, [r2]
   155c8:	ldr	r7, [r1, #4]
   155cc:	ands	r5, r5, #8388608	; 0x800000
   155d0:	bne	156c4 <_start@@Base+0x2314>
   155d4:	ldr	fp, [r1]
   155d8:	ldr	r9, [pc, #348]	; 1573c <_start@@Base+0x238c>
   155dc:	ldr	r8, [pc, #348]	; 15740 <_start@@Base+0x2390>
   155e0:	mov	sl, r2
   155e4:	mov	r4, r1
   155e8:	mov	r6, r0
   155ec:	mov	r3, r5
   155f0:	and	fp, fp, #8388608	; 0x800000
   155f4:	ldrh	r2, [r4, #8]
   155f8:	cmp	r2, #0
   155fc:	beq	15700 <_start@@Base+0x2350>
   15600:	ldr	r0, [r6]
   15604:	add	r4, r0, r2, lsl #4
   15608:	ldr	r2, [r0, r2, lsl #4]
   1560c:	lsr	r1, r2, #28
   15610:	cmp	r1, #9
   15614:	beq	15690 <_start@@Base+0x22e0>
   15618:	cmp	r1, #10
   1561c:	beq	156c4 <_start@@Base+0x2314>
   15620:	and	r1, r2, r9
   15624:	cmp	r1, r8
   15628:	bne	155f4 <_start@@Base+0x2244>
   1562c:	uxth	r1, r2
   15630:	ldr	r2, [r0, r1, lsl #4]
   15634:	add	r1, r0, r1, lsl #4
   15638:	lsr	ip, r2, #28
   1563c:	cmp	ip, #8
   15640:	beq	1562c <_start@@Base+0x227c>
   15644:	ldr	r2, [r1, #4]
   15648:	cmp	r2, #0
   1564c:	beq	155f4 <_start@@Base+0x2244>
   15650:	mov	r2, sl
   15654:	mov	r0, r6
   15658:	str	r3, [sp, #4]
   1565c:	bl	155bc <_start@@Base+0x220c>
   15660:	cmp	r0, #1
   15664:	bls	156c4 <_start@@Base+0x2314>
   15668:	ldr	r3, [sp, #4]
   1566c:	uxtb	r2, r0
   15670:	cmp	fp, #0
   15674:	lsr	r0, r0, #8
   15678:	orr	r3, r3, r2
   1567c:	addeq	r5, r5, r0
   15680:	beq	155f4 <_start@@Base+0x2244>
   15684:	cmp	r5, r0
   15688:	movcc	r5, r0
   1568c:	b	155f4 <_start@@Base+0x2244>
   15690:	uxth	r1, r2
   15694:	ldr	r2, [r0, r1, lsl #4]
   15698:	add	r1, r0, r1, lsl #4
   1569c:	lsr	ip, r2, #28
   156a0:	cmp	ip, #8
   156a4:	beq	15690 <_start@@Base+0x22e0>
   156a8:	and	r2, r2, #-201326592	; 0xf4000000
   156ac:	cmp	r2, #67108864	; 0x4000000
   156b0:	beq	156d8 <_start@@Base+0x2328>
   156b4:	cmp	r2, #872415232	; 0x34000000
   156b8:	beq	1571c <_start@@Base+0x236c>
   156bc:	cmp	ip, #1
   156c0:	beq	15644 <_start@@Base+0x2294>
   156c4:	cmp	r7, #4
   156c8:	movhi	r0, #0
   156cc:	movls	r0, #1
   156d0:	add	sp, sp, #12
   156d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156d8:	ldr	r2, [r1, #4]
   156dc:	cmp	fp, #0
   156e0:	orr	r3, r3, r2
   156e4:	addeq	r5, r5, #1
   156e8:	beq	155f4 <_start@@Base+0x2244>
   156ec:	ldrh	r2, [r4, #8]
   156f0:	cmp	r5, #0
   156f4:	moveq	r5, #1
   156f8:	cmp	r2, #0
   156fc:	bne	15600 <_start@@Base+0x2250>
   15700:	sub	r2, r3, #4
   15704:	bic	r2, r2, #4
   15708:	cmp	r5, #4
   1570c:	cmpls	r2, #0
   15710:	addeq	r0, r3, r5, lsl #8
   15714:	bne	156c4 <_start@@Base+0x2314>
   15718:	b	156d0 <_start@@Base+0x2320>
   1571c:	ldr	r2, [r1, #4]
   15720:	cmp	fp, #0
   15724:	addeq	r5, r5, #2
   15728:	orr	r3, r3, r2, lsr #1
   1572c:	beq	155f4 <_start@@Base+0x2244>
   15730:	cmp	r5, #2
   15734:	movcc	r5, #2
   15738:	b	155f4 <_start@@Base+0x2244>
   1573c:			; <UNDEFINED> instruction: 0xf0ff0000
   15740:	andhi	r0, r3, r0
   15744:	and	r2, r2, #63	; 0x3f
   15748:	mov	r3, r0
   1574c:	lsl	r1, r1, r2
   15750:	sub	r0, r2, #32
   15754:	rsb	ip, r2, #32
   15758:	orr	r1, r1, r3, lsl r0
   1575c:	lsl	r0, r3, r2
   15760:	orr	r1, r1, r3, lsr ip
   15764:	bx	lr
   15768:	and	r2, r2, #63	; 0x3f
   1576c:	mov	r3, r1
   15770:	lsr	r0, r0, r2
   15774:	rsb	r1, r2, #32
   15778:	sub	ip, r2, #32
   1577c:	orr	r0, r0, r3, lsl r1
   15780:	lsr	r1, r3, r2
   15784:	orr	r0, r0, r3, lsr ip
   15788:	bx	lr
   1578c:	and	r2, r2, #63	; 0x3f
   15790:	rsb	r3, r2, #32
   15794:	lsr	r0, r0, r2
   15798:	subs	ip, r2, #32
   1579c:	orr	r0, r0, r1, lsl r3
   157a0:	orrpl	r0, r0, r1, asr ip
   157a4:	asr	r1, r1, r2
   157a8:	bx	lr
   157ac:	rsb	r3, r2, #0
   157b0:	and	r3, r3, #63	; 0x3f
   157b4:	push	{r4, r5, r6, r7, lr}
   157b8:	and	r2, r2, #63	; 0x3f
   157bc:	rsb	ip, r3, #32
   157c0:	lsr	r6, r0, r3
   157c4:	lsl	r5, r1, r2
   157c8:	orr	r6, r6, r1, lsl ip
   157cc:	sub	ip, r2, #32
   157d0:	sub	lr, r3, #32
   157d4:	orr	r5, r5, r0, lsl ip
   157d8:	rsb	ip, r2, #32
   157dc:	orr	r6, r6, r1, lsr lr
   157e0:	orr	r5, r5, r0, lsr ip
   157e4:	lsr	r7, r1, r3
   157e8:	lsl	r4, r0, r2
   157ec:	orr	r1, r7, r5
   157f0:	orr	r0, r6, r4
   157f4:	pop	{r4, r5, r6, r7, pc}
   157f8:	rsb	r3, r2, #0
   157fc:	and	r3, r3, #63	; 0x3f
   15800:	push	{r4, r5, r6, r7, lr}
   15804:	and	r2, r2, #63	; 0x3f
   15808:	sub	ip, r3, #32
   1580c:	lsl	r7, r1, r3
   15810:	lsr	r4, r0, r2
   15814:	orr	r7, r7, r0, lsl ip
   15818:	rsb	ip, r2, #32
   1581c:	rsb	lr, r3, #32
   15820:	orr	r4, r4, r1, lsl ip
   15824:	sub	ip, r2, #32
   15828:	orr	r7, r7, r0, lsr lr
   1582c:	orr	r4, r4, r1, lsr ip
   15830:	lsl	r6, r0, r3
   15834:	lsr	r5, r1, r2
   15838:	orr	r0, r6, r4
   1583c:	orr	r1, r7, r5
   15840:	pop	{r4, r5, r6, r7, pc}
   15844:	cmp	r3, #4
   15848:	ldrls	pc, [pc, r3, lsl #2]
   1584c:	b	15878 <_start@@Base+0x24c8>
   15850:	andeq	r5, r1, r8, ror #16
   15854:	andeq	r5, r1, ip, ror #16
   15858:	andeq	r5, r1, r0, ror r8
   1585c:	andeq	r5, r1, r4, ror r8
   15860:	andeq	r5, r1, r4, ror #16
   15864:	b	157f8 <_start@@Base+0x2448>
   15868:	b	15744 <_start@@Base+0x2394>
   1586c:	b	15768 <_start@@Base+0x23b8>
   15870:	b	1578c <_start@@Base+0x23dc>
   15874:	b	157ac <_start@@Base+0x23fc>
   15878:	bx	lr
   1587c:	mul	r3, r0, r3
   15880:	push	{r4, r5}
   15884:	umull	r4, r5, r0, r2
   15888:	mla	r2, r2, r1, r3
   1588c:	mov	r0, r4
   15890:	add	r5, r2, r5
   15894:	mov	r1, r5
   15898:	pop	{r4, r5}
   1589c:	bx	lr
   158a0:	orrs	ip, r2, r3
   158a4:	beq	158b4 <_start@@Base+0x2504>
   158a8:	push	{r4, lr}
   158ac:	bl	6e5bc <luaL_openlibs@@Base+0x4dfc>
   158b0:	pop	{r4, pc}
   158b4:	mov	r0, #0
   158b8:	mov	r1, #-2147483648	; 0x80000000
   158bc:	bx	lr
   158c0:	push	{r4, r5, r6, r7, r8, lr}
   158c4:	mov	r4, r2
   158c8:	mov	r5, r3
   158cc:	orrs	ip, r4, r5
   158d0:	beq	1590c <_start@@Base+0x255c>
   158d4:	cmp	r1, #-2147483648	; 0x80000000
   158d8:	and	r4, r4, r3
   158dc:	cmpeq	r0, #0
   158e0:	moveq	ip, #1
   158e4:	movne	ip, #0
   158e8:	cmn	r4, #1
   158ec:	movne	r4, #0
   158f0:	moveq	r4, #1
   158f4:	tst	ip, r4
   158f8:	mov	r6, r0
   158fc:	mov	r7, r1
   15900:	bne	1590c <_start@@Base+0x255c>
   15904:	bl	6e4e8 <luaL_openlibs@@Base+0x4d28>
   15908:	pop	{r4, r5, r6, r7, r8, pc}
   1590c:	mov	r0, #0
   15910:	mov	r1, #-2147483648	; 0x80000000
   15914:	pop	{r4, r5, r6, r7, r8, pc}
   15918:	orrs	ip, r2, r3
   1591c:	beq	15934 <_start@@Base+0x2584>
   15920:	push	{r4, lr}
   15924:	bl	6e5bc <luaL_openlibs@@Base+0x4dfc>
   15928:	mov	r0, r2
   1592c:	mov	r1, r3
   15930:	pop	{r4, pc}
   15934:	mov	r0, #0
   15938:	mov	r1, #-2147483648	; 0x80000000
   1593c:	bx	lr
   15940:	push	{r4, r5, r6, r7, r8, lr}
   15944:	mov	r4, r2
   15948:	mov	r5, r3
   1594c:	orrs	ip, r4, r5
   15950:	beq	159a0 <_start@@Base+0x25f0>
   15954:	cmp	r1, #-2147483648	; 0x80000000
   15958:	and	r4, r4, r3
   1595c:	cmpeq	r0, #0
   15960:	moveq	ip, #1
   15964:	movne	ip, #0
   15968:	cmn	r4, #1
   1596c:	movne	r4, #0
   15970:	moveq	r4, #1
   15974:	tst	ip, r4
   15978:	mov	r6, r0
   1597c:	mov	r7, r1
   15980:	bne	15994 <_start@@Base+0x25e4>
   15984:	bl	6e4e8 <luaL_openlibs@@Base+0x4d28>
   15988:	mov	r0, r2
   1598c:	mov	r1, r3
   15990:	pop	{r4, r5, r6, r7, r8, pc}
   15994:	mov	r0, #0
   15998:	mov	r1, #0
   1599c:	pop	{r4, r5, r6, r7, r8, pc}
   159a0:	mov	r0, #0
   159a4:	mov	r1, #-2147483648	; 0x80000000
   159a8:	pop	{r4, r5, r6, r7, r8, pc}
   159ac:	cmp	r0, #9
   159b0:	ldrls	pc, [pc, r0, lsl #2]
   159b4:	b	15aa8 <_start@@Base+0x26f8>
   159b8:	strdeq	r5, [r1], -r4
   159bc:	andeq	r5, r1, r8, lsl #20
   159c0:	andeq	r5, r1, ip, lsl sl
   159c4:	andeq	r5, r1, r0, lsr sl
   159c8:	andeq	r5, r1, r4, asr #20
   159cc:	andeq	r5, r1, r8, asr sl
   159d0:	andeq	r5, r1, ip, ror #20
   159d4:	andeq	r5, r1, r0, lsl #21
   159d8:	muleq	r1, r4, sl
   159dc:	andeq	r5, r1, r0, ror #19
   159e0:	vcmp.f64	d0, d1
   159e4:	vmrs	APSR_nzcv, fpscr
   159e8:	movne	r0, #1
   159ec:	moveq	r0, #0
   159f0:	bx	lr
   159f4:	vcmpe.f64	d0, d1
   159f8:	vmrs	APSR_nzcv, fpscr
   159fc:	movmi	r0, #1
   15a00:	movpl	r0, #0
   15a04:	bx	lr
   15a08:	vcmpe.f64	d0, d1
   15a0c:	vmrs	APSR_nzcv, fpscr
   15a10:	movge	r0, #1
   15a14:	movlt	r0, #0
   15a18:	bx	lr
   15a1c:	vcmpe.f64	d0, d1
   15a20:	vmrs	APSR_nzcv, fpscr
   15a24:	movls	r0, #1
   15a28:	movhi	r0, #0
   15a2c:	bx	lr
   15a30:	vcmpe.f64	d0, d1
   15a34:	vmrs	APSR_nzcv, fpscr
   15a38:	movgt	r0, #1
   15a3c:	movle	r0, #0
   15a40:	bx	lr
   15a44:	vcmpe.f64	d0, d1
   15a48:	vmrs	APSR_nzcv, fpscr
   15a4c:	movlt	r0, #1
   15a50:	movge	r0, #0
   15a54:	bx	lr
   15a58:	vcmpe.f64	d0, d1
   15a5c:	vmrs	APSR_nzcv, fpscr
   15a60:	movpl	r0, #1
   15a64:	movmi	r0, #0
   15a68:	bx	lr
   15a6c:	vcmpe.f64	d0, d1
   15a70:	vmrs	APSR_nzcv, fpscr
   15a74:	movle	r0, #1
   15a78:	movgt	r0, #0
   15a7c:	bx	lr
   15a80:	vcmpe.f64	d0, d1
   15a84:	vmrs	APSR_nzcv, fpscr
   15a88:	movhi	r0, #1
   15a8c:	movls	r0, #0
   15a90:	bx	lr
   15a94:	vcmp.f64	d0, d1
   15a98:	vmrs	APSR_nzcv, fpscr
   15a9c:	moveq	r0, #1
   15aa0:	movne	r0, #0
   15aa4:	bx	lr
   15aa8:	mov	r0, #0
   15aac:	bx	lr
   15ab0:	ldrb	r3, [r1, #5]
   15ab4:	push	{r4, r5, r6, lr}
   15ab8:	mov	r4, r1
   15abc:	cmp	r3, #41	; 0x29
   15ac0:	bne	15b00 <_start@@Base+0x2750>
   15ac4:	mov	r5, r0
   15ac8:	b	15ae0 <_start@@Base+0x2730>
   15acc:	ldr	r4, [r5, #16]
   15ad0:	add	r4, r4, r3, lsl #3
   15ad4:	ldrb	r3, [r4, #5]
   15ad8:	cmp	r3, #41	; 0x29
   15adc:	bne	15b00 <_start@@Base+0x2750>
   15ae0:	ldrh	r3, [r4]
   15ae4:	tst	r3, #32768	; 0x8000
   15ae8:	bne	15b10 <_start@@Base+0x2760>
   15aec:	ldrh	r3, [r4, #2]
   15af0:	tst	r3, #32768	; 0x8000
   15af4:	bne	15acc <_start@@Base+0x271c>
   15af8:	mov	r0, #0
   15afc:	pop	{r4, r5, r6, pc}
   15b00:	cmp	r3, #82	; 0x52
   15b04:	moveq	r0, r4
   15b08:	movne	r0, #0
   15b0c:	pop	{r4, r5, r6, pc}
   15b10:	ldr	r1, [r5, #16]
   15b14:	mov	r0, r5
   15b18:	add	r1, r1, r3, lsl #3
   15b1c:	bl	15ab0 <_start@@Base+0x2700>
   15b20:	cmp	r0, #0
   15b24:	beq	15aec <_start@@Base+0x273c>
   15b28:	pop	{r4, r5, r6, pc}
   15b2c:	mov	r3, r0
   15b30:	push	{r4, lr}
   15b34:	vldr	d1, [r3, #152]	; 0x98
   15b38:	ldrb	r0, [r0, #125]	; 0x7d
   15b3c:	vldr	d0, [r3, #136]	; 0x88
   15b40:	bl	159ac <_start@@Base+0x25fc>
   15b44:	add	r0, r0, #3
   15b48:	pop	{r4, pc}
   15b4c:	mov	r2, r0
   15b50:	mov	r0, #2
   15b54:	ldr	r3, [r2, #128]	; 0x80
   15b58:	mvn	r3, r3
   15b5c:	str	r3, [r2, #120]	; 0x78
   15b60:	bx	lr
   15b64:	mov	r2, r0
   15b68:	mov	r0, #2
   15b6c:	ldr	r3, [r2, #128]	; 0x80
   15b70:	rev	r3, r3
   15b74:	str	r3, [r2, #120]	; 0x78
   15b78:	bx	lr
   15b7c:	ldrb	r2, [r0, #125]	; 0x7d
   15b80:	ldr	r3, [r0, #128]	; 0x80
   15b84:	ldr	r0, [r0, #144]	; 0x90
   15b88:	cmp	r2, #10
   15b8c:	ldrls	pc, [pc, r2, lsl #2]
   15b90:	b	15c40 <_start@@Base+0x2890>
   15b94:	ldrdeq	r5, [r1], -r0
   15b98:	andeq	r5, r1, r0, ror #23
   15b9c:	strdeq	r5, [r1], -r0
   15ba0:	andeq	r5, r1, r0, lsl #24
   15ba4:	andeq	r5, r1, r0, lsl ip
   15ba8:	andeq	r5, r1, r0, lsr #24
   15bac:	andeq	r5, r1, r0, lsr ip
   15bb0:	andeq	r5, r1, r0, asr #23
   15bb4:	andeq	r5, r1, r0, asr #24
   15bb8:	andeq	r5, r1, r0, asr #24
   15bbc:	andeq	r5, r1, r0, asr #23
   15bc0:	cmp	r3, r0
   15bc4:	movls	r0, #3
   15bc8:	movhi	r0, #4
   15bcc:	bx	lr
   15bd0:	cmp	r3, r0
   15bd4:	movge	r0, #3
   15bd8:	movlt	r0, #4
   15bdc:	bx	lr
   15be0:	cmp	r3, r0
   15be4:	movlt	r0, #3
   15be8:	movge	r0, #4
   15bec:	bx	lr
   15bf0:	cmp	r3, r0
   15bf4:	movgt	r0, #3
   15bf8:	movle	r0, #4
   15bfc:	bx	lr
   15c00:	cmp	r3, r0
   15c04:	movle	r0, #3
   15c08:	movgt	r0, #4
   15c0c:	bx	lr
   15c10:	cmp	r3, r0
   15c14:	movcs	r0, #3
   15c18:	movcc	r0, #4
   15c1c:	bx	lr
   15c20:	cmp	r3, r0
   15c24:	movcc	r0, #3
   15c28:	movcs	r0, #4
   15c2c:	bx	lr
   15c30:	cmp	r3, r0
   15c34:	movhi	r0, #3
   15c38:	movls	r0, #4
   15c3c:	bx	lr
   15c40:	mov	r0, #3
   15c44:	bx	lr
   15c48:	ldr	r3, [r0, #144]	; 0x90
   15c4c:	cmp	r3, #0
   15c50:	moveq	r0, #4
   15c54:	movne	r0, #0
   15c58:	bx	lr
   15c5c:	push	{r4, r5, r6, r7}
   15c60:	mov	r5, r1
   15c64:	ldr	ip, [sp, #16]
   15c68:	mov	r4, r0
   15c6c:	sub	r1, ip, #33	; 0x21
   15c70:	cmp	r1, #10
   15c74:	ldrls	pc, [pc, r1, lsl #2]
   15c78:	b	15d90 <_start@@Base+0x29e0>
   15c7c:	andeq	r5, r1, r0, asr #25
   15c80:	andeq	r5, r1, ip, asr #25
   15c84:	ldrdeq	r5, [r1], -r8
   15c88:	andeq	r5, r1, r4, ror #25
   15c8c:	andeq	r5, r1, r4, lsl #26
   15c90:	andeq	r5, r1, r8, lsl sp
   15c94:	andeq	r5, r1, r8, lsr sp
   15c98:	andeq	r5, r1, r8, asr sp
   15c9c:	andeq	r5, r1, r8, ror sp
   15ca0:	andeq	r5, r1, r4, lsl #27
   15ca4:	andeq	r5, r1, r8, lsr #25
   15ca8:	mul	r3, r0, r3
   15cac:	umull	r0, r1, r0, r2
   15cb0:	mla	r2, r2, r5, r3
   15cb4:	add	r1, r2, r1
   15cb8:	pop	{r4, r5, r6, r7}
   15cbc:	bx	lr
   15cc0:	and	r0, r0, r2
   15cc4:	and	r1, r5, r3
   15cc8:	b	15cb8 <_start@@Base+0x2908>
   15ccc:	orr	r0, r0, r2
   15cd0:	orr	r1, r5, r3
   15cd4:	b	15cb8 <_start@@Base+0x2908>
   15cd8:	eor	r0, r0, r2
   15cdc:	eor	r1, r5, r3
   15ce0:	b	15cb8 <_start@@Base+0x2908>
   15ce4:	and	r2, r2, #63	; 0x3f
   15ce8:	sub	r3, r2, #32
   15cec:	lsl	r1, r5, r2
   15cf0:	orr	r1, r1, r4, lsl r3
   15cf4:	rsb	r3, r2, #32
   15cf8:	lsl	r0, r4, r2
   15cfc:	orr	r1, r1, r4, lsr r3
   15d00:	b	15cb8 <_start@@Base+0x2908>
   15d04:	and	r2, r2, #63	; 0x3f
   15d08:	lsr	r4, r0, r2
   15d0c:	mov	r0, r4
   15d10:	asr	r1, r4, #31
   15d14:	b	15cb8 <_start@@Base+0x2908>
   15d18:	and	r2, r2, #63	; 0x3f
   15d1c:	rsb	r3, r2, #32
   15d20:	lsr	r0, r4, r2
   15d24:	orr	r0, r0, r5, lsl r3
   15d28:	sub	r3, r2, #32
   15d2c:	lsr	r1, r5, r2
   15d30:	orr	r0, r0, r5, lsr r3
   15d34:	b	15cb8 <_start@@Base+0x2908>
   15d38:	and	r0, r2, #63	; 0x3f
   15d3c:	rsb	r2, r2, #0
   15d40:	lsl	r0, r4, r0
   15d44:	and	r2, r2, #31
   15d48:	orr	r4, r0, r4, lsr r2
   15d4c:	mov	r0, r4
   15d50:	asr	r1, r4, #31
   15d54:	b	15cb8 <_start@@Base+0x2908>
   15d58:	and	r0, r2, #63	; 0x3f
   15d5c:	rsb	r2, r2, #0
   15d60:	lsr	r0, r4, r0
   15d64:	and	r2, r2, #31
   15d68:	orr	r4, r0, r4, lsl r2
   15d6c:	mov	r0, r4
   15d70:	asr	r1, r4, #31
   15d74:	b	15cb8 <_start@@Base+0x2908>
   15d78:	adds	r0, r0, r2
   15d7c:	adc	r1, r5, r3
   15d80:	b	15cb8 <_start@@Base+0x2908>
   15d84:	subs	r0, r0, r2
   15d88:	sbc	r1, r5, r3
   15d8c:	b	15cb8 <_start@@Base+0x2908>
   15d90:	mov	r1, r5
   15d94:	b	15cb8 <_start@@Base+0x2908>
   15d98:	ldrb	r3, [r0, #125]	; 0x7d
   15d9c:	push	{r4, r5}
   15da0:	ldrd	r4, [r0, #136]	; 0x88
   15da4:	ldrd	r0, [r0, #152]	; 0x98
   15da8:	cmp	r3, #7
   15dac:	ldrls	pc, [pc, r3, lsl #2]
   15db0:	b	15e94 <_start@@Base+0x2ae4>
   15db4:	andeq	r5, r1, ip, ror #27
   15db8:	andeq	r5, r1, r4, lsl #28
   15dbc:	andeq	r5, r1, ip, lsl lr
   15dc0:	andeq	r5, r1, r4, lsr lr
   15dc4:	andeq	r5, r1, ip, asr #28
   15dc8:	andeq	r5, r1, r4, ror #28
   15dcc:	andeq	r5, r1, ip, ror lr
   15dd0:	ldrdeq	r5, [r1], -r4
   15dd4:	cmp	r5, r1
   15dd8:	cmpeq	r4, r0
   15ddc:	movls	r0, #3
   15de0:	movhi	r0, #4
   15de4:	pop	{r4, r5}
   15de8:	bx	lr
   15dec:	cmp	r4, r0
   15df0:	sbcs	r3, r5, r1
   15df4:	movge	r0, #3
   15df8:	movlt	r0, #4
   15dfc:	pop	{r4, r5}
   15e00:	bx	lr
   15e04:	cmp	r4, r0
   15e08:	sbcs	r3, r5, r1
   15e0c:	movlt	r0, #3
   15e10:	movge	r0, #4
   15e14:	pop	{r4, r5}
   15e18:	bx	lr
   15e1c:	cmp	r0, r4
   15e20:	sbcs	r3, r1, r5
   15e24:	movlt	r0, #3
   15e28:	movge	r0, #4
   15e2c:	pop	{r4, r5}
   15e30:	bx	lr
   15e34:	cmp	r0, r4
   15e38:	sbcs	r3, r1, r5
   15e3c:	movge	r0, #3
   15e40:	movlt	r0, #4
   15e44:	pop	{r4, r5}
   15e48:	bx	lr
   15e4c:	cmp	r5, r1
   15e50:	cmpeq	r4, r0
   15e54:	movcs	r0, #3
   15e58:	movcc	r0, #4
   15e5c:	pop	{r4, r5}
   15e60:	bx	lr
   15e64:	cmp	r5, r1
   15e68:	cmpeq	r4, r0
   15e6c:	movcc	r0, #3
   15e70:	movcs	r0, #4
   15e74:	pop	{r4, r5}
   15e78:	bx	lr
   15e7c:	cmp	r5, r1
   15e80:	cmpeq	r4, r0
   15e84:	movhi	r0, #3
   15e88:	movls	r0, #4
   15e8c:	pop	{r4, r5}
   15e90:	bx	lr
   15e94:	mov	r0, #3
   15e98:	b	15de4 <_start@@Base+0x2a34>
   15e9c:	ldrd	r2, [r0, #152]	; 0x98
   15ea0:	orrs	r3, r2, r3
   15ea4:	moveq	r0, #4
   15ea8:	movne	r0, #0
   15eac:	bx	lr
   15eb0:	ldrh	r3, [r0, #128]	; 0x80
   15eb4:	tst	r3, #32768	; 0x8000
   15eb8:	bne	15ec8 <_start@@Base+0x2b18>
   15ebc:	ldrh	r2, [r0, #130]	; 0x82
   15ec0:	tst	r2, #32768	; 0x8000
   15ec4:	beq	15ed4 <_start@@Base+0x2b24>
   15ec8:	mov	r3, #0
   15ecc:	mov	r0, r3
   15ed0:	bx	lr
   15ed4:	push	{r4, lr}
   15ed8:	mov	r4, r0
   15edc:	ldr	r0, [r0, #16]
   15ee0:	ldr	r1, [r0, r2, lsl #3]
   15ee4:	ldr	r0, [r0, r3, lsl #3]
   15ee8:	bl	14724 <_start@@Base+0x1374>
   15eec:	mov	r3, #2
   15ef0:	str	r0, [r4, #120]	; 0x78
   15ef4:	mov	r0, r3
   15ef8:	pop	{r4, pc}
   15efc:	vldr	d7, [r0, #136]	; 0x88
   15f00:	vldr	d6, [pc, #16]	; 15f18 <_start@@Base+0x2b68>
   15f04:	mov	r2, r0
   15f08:	mov	r0, #2
   15f0c:	vadd.f64	d7, d7, d6
   15f10:	vstr	s14, [r2, #120]	; 0x78
   15f14:	bx	lr
   15f18:	andeq	r0, r0, r0
   15f1c:	teqmi	r8, #0
   15f20:	ldrh	r3, [r0, #122]	; 0x7a
   15f24:	ldr	r2, [r0, #128]	; 0x80
   15f28:	and	r3, r3, #31
   15f2c:	cmp	r3, #15
   15f30:	sxtbeq	r3, r2
   15f34:	beq	15f50 <_start@@Base+0x2ba0>
   15f38:	cmp	r3, #16
   15f3c:	uxtbeq	r3, r2
   15f40:	beq	15f50 <_start@@Base+0x2ba0>
   15f44:	cmp	r3, #17
   15f48:	sxtheq	r3, r2
   15f4c:	uxthne	r3, r2
   15f50:	str	r3, [r0, #120]	; 0x78
   15f54:	mov	r0, #2
   15f58:	bx	lr
   15f5c:	mov	r3, r0
   15f60:	mov	r0, #2
   15f64:	ldr	r2, [r3, #136]	; 0x88
   15f68:	str	r2, [r3, #120]	; 0x78
   15f6c:	bx	lr
   15f70:	vldr	d7, [r0, #136]	; 0x88
   15f74:	ldrsb	r3, [r0, #124]	; 0x7c
   15f78:	cmp	r3, #0
   15f7c:	vcvt.s32.f64	s13, d7
   15f80:	blt	15f90 <_start@@Base+0x2be0>
   15f84:	vstr	s13, [r0, #120]	; 0x78
   15f88:	mov	r0, #2
   15f8c:	bx	lr
   15f90:	vcvt.f64.s32	d5, s13
   15f94:	vcmp.f64	d5, d7
   15f98:	vmrs	APSR_nzcv, fpscr
   15f9c:	beq	15f84 <_start@@Base+0x2bd4>
   15fa0:	mov	r0, #3
   15fa4:	bx	lr
   15fa8:	mov	r3, r0
   15fac:	mov	r0, #2
   15fb0:	vldr	d7, [r3, #136]	; 0x88
   15fb4:	vcvt.u32.f64	s14, d7
   15fb8:	vstr	s14, [r3, #120]	; 0x78
   15fbc:	bx	lr
   15fc0:	ldrb	r3, [r0, #125]	; 0x7d
   15fc4:	ldrh	r1, [r0, #120]	; 0x78
   15fc8:	ldrh	r2, [r0, #122]	; 0x7a
   15fcc:	sub	r0, r3, #9
   15fd0:	clz	r0, r0
   15fd4:	lsr	r0, r0, #5
   15fd8:	cmp	r1, r2
   15fdc:	eoreq	r0, r0, #1
   15fe0:	add	r0, r0, #3
   15fe4:	bx	lr
   15fe8:	ldrh	r3, [r0, #130]	; 0x82
   15fec:	cmp	r3, #2
   15ff0:	ldrhls	r0, [r0, #120]	; 0x78
   15ff4:	movhi	r0, #0
   15ff8:	bx	lr
   15ffc:	ldrh	r0, [r0, #120]	; 0x78
   16000:	bx	lr
   16004:	ldrb	r2, [r0, #132]	; 0x84
   16008:	mov	r3, r0
   1600c:	tst	r2, #64	; 0x40
   16010:	ldrheq	r2, [r0, #128]	; 0x80
   16014:	moveq	r0, #1
   16018:	movne	r0, #0
   1601c:	strheq	r2, [r3, #120]	; 0x78
   16020:	bx	lr
   16024:	ldrb	r3, [r0, #132]	; 0x84
   16028:	tst	r3, #64	; 0x40
   1602c:	ldrheq	r0, [r0, #128]	; 0x80
   16030:	movne	r0, #0
   16034:	bx	lr
   16038:	ldrb	r3, [r0, #148]	; 0x94
   1603c:	tst	r3, #64	; 0x40
   16040:	moveq	r2, #42	; 0x2a
   16044:	ldrheq	r3, [r0, #144]	; 0x90
   16048:	strbeq	r2, [r0, #125]	; 0x7d
   1604c:	strheq	r3, [r0, #122]	; 0x7a
   16050:	moveq	r0, #1
   16054:	movne	r0, #0
   16058:	bx	lr
   1605c:	vldr	d7, [r0, #152]	; 0x98
   16060:	vcmp.f64	d7, #0.0
   16064:	vmrs	APSR_nzcv, fpscr
   16068:	ldrheq	r0, [r0, #120]	; 0x78
   1606c:	movne	r0, #0
   16070:	bx	lr
   16074:	ldrb	r3, [r0, #148]	; 0x94
   16078:	tst	r3, #64	; 0x40
   1607c:	moveq	r2, #41	; 0x29
   16080:	ldrheq	r3, [r0, #144]	; 0x90
   16084:	strbeq	r2, [r0, #125]	; 0x7d
   16088:	strheq	r3, [r0, #122]	; 0x7a
   1608c:	moveq	r0, #1
   16090:	movne	r0, #0
   16094:	bx	lr
   16098:	ldrb	r2, [r0, #132]	; 0x84
   1609c:	ands	r3, r2, #64	; 0x40
   160a0:	bne	160b4 <_start@@Base+0x2d04>
   160a4:	ldrh	r1, [r0, #130]	; 0x82
   160a8:	and	r1, r1, #31
   160ac:	cmp	r1, #14
   160b0:	beq	160bc <_start@@Base+0x2d0c>
   160b4:	mov	r0, #0
   160b8:	bx	lr
   160bc:	tst	r2, #128	; 0x80
   160c0:	beq	160b4 <_start@@Base+0x2d04>
   160c4:	ldrh	r0, [r0, #128]	; 0x80
   160c8:	bx	lr
   160cc:	ldrh	r2, [r0, #122]	; 0x7a
   160d0:	ldrh	r3, [r0, #130]	; 0x82
   160d4:	eor	r3, r3, r2, lsr #5
   160d8:	tst	r3, #31
   160dc:	ldrheq	r0, [r0, #128]	; 0x80
   160e0:	movne	r0, #0
   160e4:	bx	lr
   160e8:	ldrh	r3, [r0, #130]	; 0x82
   160ec:	and	r3, r3, #31
   160f0:	sub	r3, r3, #19
   160f4:	cmp	r3, #1
   160f8:	ldrhls	r0, [r0, #120]	; 0x78
   160fc:	movhi	r0, #0
   16100:	bx	lr
   16104:	ldrh	r2, [r0, #122]	; 0x7a
   16108:	ldrh	r1, [r0, #120]	; 0x78
   1610c:	ands	r3, r2, #2048	; 0x800
   16110:	beq	1615c <_start@@Base+0x2dac>
   16114:	ldrb	r3, [r0, #132]	; 0x84
   16118:	tst	r3, #64	; 0x40
   1611c:	bne	1615c <_start@@Base+0x2dac>
   16120:	ldrb	ip, [r0, #133]	; 0x85
   16124:	push	{r4, r5, r6, r7}
   16128:	cmp	ip, #70	; 0x46
   1612c:	beq	16164 <_start@@Base+0x2db4>
   16130:	cmp	ip, #41	; 0x29
   16134:	beq	161b8 <_start@@Base+0x2e08>
   16138:	mov	r6, #0
   1613c:	mov	r7, #0
   16140:	add	r3, r0, #2288	; 0x8f0
   16144:	ldrh	ip, [r3]
   16148:	cmp	ip, r1
   1614c:	beq	16180 <_start@@Base+0x2dd0>
   16150:	mov	r0, #0
   16154:	pop	{r4, r5, r6, r7}
   16158:	bx	lr
   1615c:	mov	r0, #0
   16160:	bx	lr
   16164:	and	r3, r3, #29
   16168:	cmp	r3, #16
   1616c:	bne	16138 <_start@@Base+0x2d88>
   16170:	bic	r2, r2, #2048	; 0x800
   16174:	strh	r2, [r0, #122]	; 0x7a
   16178:	mov	r0, #1
   1617c:	b	16154 <_start@@Base+0x2da4>
   16180:	ldrb	r1, [r0, #2297]	; 0x8f9
   16184:	cmp	r1, #0
   16188:	ldrhne	r3, [r3, #2]
   1618c:	ldrheq	r3, [r3, #4]
   16190:	cmp	r3, #0
   16194:	beq	16150 <_start@@Base+0x2da0>
   16198:	ldr	r1, [r0, #16]
   1619c:	ldr	r3, [r1, r3, lsl #3]
   161a0:	adds	r4, r6, r3
   161a4:	adc	r5, r7, r3, asr #31
   161a8:	cmp	r4, #0
   161ac:	sbcs	r3, r5, #0
   161b0:	bge	16170 <_start@@Base+0x2dc0>
   161b4:	b	16150 <_start@@Base+0x2da0>
   161b8:	ldrh	r3, [r0, #130]	; 0x82
   161bc:	tst	r3, #32768	; 0x8000
   161c0:	bne	16138 <_start@@Base+0x2d88>
   161c4:	ldr	ip, [r0, #16]
   161c8:	ldrh	r1, [r0, #128]	; 0x80
   161cc:	ldr	r4, [ip, r3, lsl #3]
   161d0:	mov	r6, r4
   161d4:	asr	r7, r4, #31
   161d8:	b	16140 <_start@@Base+0x2d90>
   161dc:	ldr	r3, [r0, #144]	; 0x90
   161e0:	cmp	r3, #0
   161e4:	ldrheq	r0, [r0, #120]	; 0x78
   161e8:	movne	r0, #0
   161ec:	bx	lr
   161f0:	ldr	r3, [r0, #144]	; 0x90
   161f4:	cmp	r3, #0
   161f8:	beq	16224 <_start@@Base+0x2e74>
   161fc:	cmp	r3, #1
   16200:	beq	1622c <_start@@Base+0x2e7c>
   16204:	cmp	r3, #2
   16208:	moveq	r2, #54	; 0x36
   1620c:	ldrheq	r3, [r0, #120]	; 0x78
   16210:	strbeq	r2, [r0, #125]	; 0x7d
   16214:	strheq	r3, [r0, #122]	; 0x7a
   16218:	moveq	r0, #1
   1621c:	movne	r0, #0
   16220:	bx	lr
   16224:	ldrh	r0, [r0, #122]	; 0x7a
   16228:	bx	lr
   1622c:	ldrh	r0, [r0, #120]	; 0x78
   16230:	bx	lr
   16234:	ldrb	r3, [r0, #133]	; 0x85
   16238:	cmp	r3, #23
   1623c:	beq	16270 <_start@@Base+0x2ec0>
   16240:	ldrd	r2, [r0, #136]	; 0x88
   16244:	orrs	r3, r2, r3
   16248:	moveq	r3, #1
   1624c:	movne	r3, #0
   16250:	cmp	r3, #0
   16254:	movne	r2, #47	; 0x2f
   16258:	ldrhne	r3, [r0, #122]	; 0x7a
   1625c:	strbne	r2, [r0, #125]	; 0x7d
   16260:	strhne	r3, [r0, #120]	; 0x78
   16264:	movne	r0, #1
   16268:	moveq	r0, r3
   1626c:	bx	lr
   16270:	ldr	r3, [r0, #128]	; 0x80
   16274:	clz	r3, r3
   16278:	lsr	r3, r3, #5
   1627c:	b	16250 <_start@@Base+0x2ea0>
   16280:	ldrd	r2, [r0, #152]	; 0x98
   16284:	orrs	r3, r2, r3
   16288:	ldrheq	r0, [r0, #120]	; 0x78
   1628c:	movne	r0, #0
   16290:	bx	lr
   16294:	ldr	r3, [r0, #128]	; 0x80
   16298:	cmp	r3, #0
   1629c:	streq	r3, [r0, #120]	; 0x78
   162a0:	moveq	r0, #2
   162a4:	movne	r0, #0
   162a8:	bx	lr
   162ac:	ldrb	r3, [r0, #149]	; 0x95
   162b0:	cmp	r3, #23
   162b4:	beq	162f0 <_start@@Base+0x2f40>
   162b8:	ldrd	r2, [r0, #152]	; 0x98
   162bc:	orrs	r1, r2, r3
   162c0:	beq	162e8 <_start@@Base+0x2f38>
   162c4:	push	{r4, r5}
   162c8:	mvn	r5, #0
   162cc:	cmp	r3, r5
   162d0:	mvn	r4, #0
   162d4:	cmpeq	r2, r4
   162d8:	movne	r0, #0
   162dc:	ldrheq	r0, [r0, #120]	; 0x78
   162e0:	pop	{r4, r5}
   162e4:	bx	lr
   162e8:	ldrh	r0, [r0, #122]	; 0x7a
   162ec:	bx	lr
   162f0:	ldr	r2, [r0, #144]	; 0x90
   162f4:	asr	r3, r2, #31
   162f8:	b	162bc <_start@@Base+0x2f0c>
   162fc:	ldrb	r3, [r0, #149]	; 0x95
   16300:	cmp	r3, #23
   16304:	beq	16340 <_start@@Base+0x2f90>
   16308:	ldrd	r2, [r0, #152]	; 0x98
   1630c:	orrs	r1, r2, r3
   16310:	beq	16338 <_start@@Base+0x2f88>
   16314:	push	{r4, r5}
   16318:	mvn	r5, #0
   1631c:	cmp	r3, r5
   16320:	mvn	r4, #0
   16324:	cmpeq	r2, r4
   16328:	movne	r0, #0
   1632c:	ldrheq	r0, [r0, #122]	; 0x7a
   16330:	pop	{r4, r5}
   16334:	bx	lr
   16338:	ldrh	r0, [r0, #120]	; 0x78
   1633c:	bx	lr
   16340:	ldr	r2, [r0, #144]	; 0x90
   16344:	asr	r3, r2, #31
   16348:	b	1630c <_start@@Base+0x2f5c>
   1634c:	ldrb	r3, [r0, #149]	; 0x95
   16350:	cmp	r3, #23
   16354:	beq	163a0 <_start@@Base+0x2ff0>
   16358:	ldrd	r2, [r0, #152]	; 0x98
   1635c:	orrs	r1, r2, r3
   16360:	beq	16398 <_start@@Base+0x2fe8>
   16364:	push	{r4, r5}
   16368:	mvn	r5, #0
   1636c:	cmp	r3, r5
   16370:	mvn	r4, #0
   16374:	cmpeq	r2, r4
   16378:	moveq	r2, #31
   1637c:	moveq	r3, #0
   16380:	strbeq	r2, [r0, #125]	; 0x7d
   16384:	strheq	r3, [r0, #122]	; 0x7a
   16388:	movne	r0, #0
   1638c:	moveq	r0, #1
   16390:	pop	{r4, r5}
   16394:	bx	lr
   16398:	ldrh	r0, [r0, #120]	; 0x78
   1639c:	bx	lr
   163a0:	ldr	r2, [r0, #144]	; 0x90
   163a4:	asr	r3, r2, #31
   163a8:	b	1635c <_start@@Base+0x2fac>
   163ac:	ldrb	r3, [r0, #148]	; 0x94
   163b0:	ands	r3, r3, #64	; 0x40
   163b4:	bne	163e4 <_start@@Base+0x3034>
   163b8:	ldrb	r2, [r0, #125]	; 0x7d
   163bc:	cmp	r2, #38	; 0x26
   163c0:	bls	163dc <_start@@Base+0x302c>
   163c4:	ldrh	r1, [r0, #146]	; 0x92
   163c8:	ldr	r2, [r0, #16]
   163cc:	add	ip, r2, r1, lsl #3
   163d0:	ldrb	ip, [ip, #5]
   163d4:	cmp	ip, #23
   163d8:	beq	163f0 <_start@@Base+0x3040>
   163dc:	mov	r0, r3
   163e0:	bx	lr
   163e4:	mov	r3, #0
   163e8:	mov	r0, r3
   163ec:	bx	lr
   163f0:	push	{lr}		; (str lr, [sp, #-4]!)
   163f4:	ldrb	lr, [r0, #124]	; 0x7c
   163f8:	ldr	ip, [pc, #44]	; 1642c <_start@@Base+0x307c>
   163fc:	ldr	r1, [r2, r1, lsl #3]
   16400:	and	r2, lr, #31
   16404:	lsr	r2, ip, r2
   16408:	tst	r2, #1
   1640c:	movne	r2, #63	; 0x3f
   16410:	moveq	r2, #31
   16414:	bics	r2, r2, r1
   16418:	ldrheq	r2, [r0, #144]	; 0x90
   1641c:	moveq	r3, #1
   16420:	strheq	r2, [r0, #122]	; 0x7a
   16424:	mov	r0, r3
   16428:	pop	{pc}		; (ldr pc, [sp], #4)
   1642c:	rsbeq	r4, r0, r0
   16430:	ldrb	r3, [r0, #133]	; 0x85
   16434:	cmp	r3, #23
   16438:	beq	16450 <_start@@Base+0x30a0>
   1643c:	ldrd	r2, [r0, #136]	; 0x88
   16440:	orrs	r3, r2, r3
   16444:	ldrheq	r0, [r0, #120]	; 0x78
   16448:	movne	r0, #0
   1644c:	bx	lr
   16450:	ldr	r2, [r0, #128]	; 0x80
   16454:	asr	r3, r2, #31
   16458:	b	16440 <_start@@Base+0x3090>
   1645c:	ldrb	r3, [r0, #133]	; 0x85
   16460:	push	{r4, r5}
   16464:	cmp	r3, #23
   16468:	beq	16490 <_start@@Base+0x30e0>
   1646c:	ldrd	r4, [r0, #136]	; 0x88
   16470:	adds	r2, r4, #1
   16474:	adc	r3, r5, #0
   16478:	cmp	r3, #0
   1647c:	cmpeq	r2, #1
   16480:	movhi	r0, #0
   16484:	ldrhls	r0, [r0, #120]	; 0x78
   16488:	pop	{r4, r5}
   1648c:	bx	lr
   16490:	ldr	r2, [r0, #128]	; 0x80
   16494:	mov	r4, r2
   16498:	asr	r5, r2, #31
   1649c:	b	16470 <_start@@Base+0x30c0>
   164a0:	ldrb	r3, [r0, #132]	; 0x84
   164a4:	push	{r4, r5, r6, lr}
   164a8:	sub	sp, sp, #8
   164ac:	ands	r5, r3, #64	; 0x40
   164b0:	bne	164cc <_start@@Base+0x311c>
   164b4:	ldrh	r2, [r0, #130]	; 0x82
   164b8:	ldr	r3, [r0, #16]
   164bc:	add	r3, r3, r2, lsl #3
   164c0:	ldrb	r2, [r3, #5]
   164c4:	cmp	r2, #29
   164c8:	beq	164d8 <_start@@Base+0x3128>
   164cc:	mov	r0, #0
   164d0:	add	sp, sp, #8
   164d4:	pop	{r4, r5, r6, pc}
   164d8:	ldrb	r6, [r0, #125]	; 0x7d
   164dc:	mov	r4, r0
   164e0:	ldrd	r0, [r3, #8]
   164e4:	ldrd	r2, [r4, #152]	; 0x98
   164e8:	str	r6, [sp]
   164ec:	bl	15c5c <_start@@Base+0x28ac>
   164f0:	subs	r2, r6, #33	; 0x21
   164f4:	movne	r2, #1
   164f8:	rsbs	r2, r2, #0
   164fc:	sbc	r3, r3, r3
   16500:	cmp	r1, r3
   16504:	cmpeq	r0, r2
   16508:	movne	r0, r5
   1650c:	ldrheq	r3, [r4, #128]	; 0x80
   16510:	moveq	r0, #1
   16514:	strheq	r3, [r4, #120]	; 0x78
   16518:	b	164d0 <_start@@Base+0x3120>
   1651c:	ldrh	r3, [r0, #122]	; 0x7a
   16520:	ldrh	r2, [r0, #128]	; 0x80
   16524:	cmp	r2, r3
   16528:	beq	16540 <_start@@Base+0x3190>
   1652c:	ldrh	r2, [r0, #130]	; 0x82
   16530:	cmp	r2, r3
   16534:	beq	16540 <_start@@Base+0x3190>
   16538:	mov	r0, #0
   1653c:	bx	lr
   16540:	ldrh	r0, [r0, #120]	; 0x78
   16544:	bx	lr
   16548:	ldrh	r3, [r0, #122]	; 0x7a
   1654c:	ldrh	r2, [r0, #128]	; 0x80
   16550:	cmp	r2, r3
   16554:	beq	1656c <_start@@Base+0x31bc>
   16558:	ldrh	r2, [r0, #130]	; 0x82
   1655c:	cmp	r2, r3
   16560:	beq	1656c <_start@@Base+0x31bc>
   16564:	mov	r0, #0
   16568:	bx	lr
   1656c:	mov	r0, r3
   16570:	bx	lr
   16574:	ldrh	r3, [r0, #120]	; 0x78
   16578:	ldrh	r2, [r0, #144]	; 0x90
   1657c:	cmp	r2, r3
   16580:	beq	16598 <_start@@Base+0x31e8>
   16584:	ldrh	r2, [r0, #146]	; 0x92
   16588:	cmp	r2, r3
   1658c:	beq	16598 <_start@@Base+0x31e8>
   16590:	mov	r0, #0
   16594:	bx	lr
   16598:	mov	r0, r3
   1659c:	bx	lr
   165a0:	ldrb	r3, [r0, #124]	; 0x7c
   165a4:	and	r3, r3, #31
   165a8:	cmp	r3, #19
   165ac:	beq	165e0 <_start@@Base+0x3230>
   165b0:	add	r3, r0, #320	; 0x140
   165b4:	ldrh	r2, [r0, #120]	; 0x78
   165b8:	ldrh	r3, [r3]
   165bc:	cmp	r3, r2
   165c0:	bls	165e0 <_start@@Base+0x3230>
   165c4:	ldr	r3, [r0, #16]
   165c8:	add	r2, r3, r2, lsl #3
   165cc:	ldrb	r3, [r2, #4]
   165d0:	tst	r3, #64	; 0x40
   165d4:	movne	r0, #0
   165d8:	moveq	r0, #4
   165dc:	bx	lr
   165e0:	mov	r0, #0
   165e4:	bx	lr
   165e8:	ldrh	r3, [r0, #120]	; 0x78
   165ec:	ldrh	r2, [r0, #122]	; 0x7a
   165f0:	cmp	r3, r2
   165f4:	strhcc	r2, [r0, #120]	; 0x78
   165f8:	strhcc	r3, [r0, #122]	; 0x7a
   165fc:	movcc	r0, #1
   16600:	movcs	r0, #0
   16604:	bx	lr
   16608:	ldrh	r3, [r0, #120]	; 0x78
   1660c:	ldrh	r2, [r0, #122]	; 0x7a
   16610:	cmp	r3, r2
   16614:	beq	16634 <_start@@Base+0x3284>
   16618:	bcs	1662c <_start@@Base+0x327c>
   1661c:	strh	r2, [r0, #120]	; 0x78
   16620:	strh	r3, [r0, #122]	; 0x7a
   16624:	mov	r0, #1
   16628:	bx	lr
   1662c:	mov	r0, #0
   16630:	bx	lr
   16634:	ldrb	r3, [r0, #124]	; 0x7c
   16638:	and	r3, r3, #31
   1663c:	cmp	r3, #14
   16640:	beq	1662c <_start@@Base+0x327c>
   16644:	ldrb	r3, [r0, #125]	; 0x7d
   16648:	cmp	r3, #8
   1664c:	moveq	r0, #4
   16650:	movne	r0, #3
   16654:	bx	lr
   16658:	ldrh	r3, [r0, #120]	; 0x78
   1665c:	ldrh	r2, [r0, #122]	; 0x7a
   16660:	cmp	r3, r2
   16664:	beq	1667c <_start@@Base+0x32cc>
   16668:	strhcc	r2, [r0, #120]	; 0x78
   1666c:	strhcc	r3, [r0, #122]	; 0x7a
   16670:	movcs	r0, #0
   16674:	movcc	r0, #1
   16678:	bx	lr
   1667c:	mov	r0, r3
   16680:	bx	lr
   16684:	ldr	r0, [pc]	; 1668c <_start@@Base+0x32dc>
   16688:	bx	lr
   1668c:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   16690:	add	r3, r0, #320	; 0x140
   16694:	ldrh	r0, [r0, #120]	; 0x78
   16698:	ldrh	r3, [r3]
   1669c:	cmp	r0, r3
   166a0:	movcs	r0, #4
   166a4:	movcc	r0, #0
   166a8:	bx	lr
   166ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   166b0:	lsl	r8, r1, #3
   166b4:	ldr	lr, [r0]
   166b8:	mov	r5, r1
   166bc:	mov	r4, r0
   166c0:	ldr	r9, [lr, #16]
   166c4:	ldr	r6, [r0, #4]
   166c8:	add	r7, r9, r8
   166cc:	ldrb	r3, [r7, #5]
   166d0:	sub	r1, r3, #54	; 0x36
   166d4:	cmp	r1, #1
   166d8:	bls	16704 <_start@@Base+0x3354>
   166dc:	cmp	r3, #56	; 0x38
   166e0:	beq	166f4 <_start@@Base+0x3344>
   166e4:	add	r3, r6, #4
   166e8:	str	r3, [r4, #4]
   166ec:	str	r5, [r6]
   166f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   166f4:	ldr	r3, [r0, #12]
   166f8:	and	r3, r3, #61440	; 0xf000
   166fc:	cmp	r3, #4096	; 0x1000
   16700:	bne	166e4 <_start@@Base+0x3334>
   16704:	add	r3, lr, #2144	; 0x860
   16708:	ldr	sl, [pc, #184]	; 167c8 <_start@@Base+0x3418>
   1670c:	add	r3, r3, #12
   16710:	uxth	ip, r5
   16714:	mov	r1, #0
   16718:	b	1672c <_start@@Base+0x337c>
   1671c:	add	r1, r1, #1
   16720:	cmp	r1, #16
   16724:	add	r3, r3, #8
   16728:	beq	16754 <_start@@Base+0x33a4>
   1672c:	ldrh	r0, [r3, #-4]
   16730:	cmp	r0, ip
   16734:	bne	1671c <_start@@Base+0x336c>
   16738:	ldr	r0, [r3]
   1673c:	tst	r0, sl
   16740:	bne	1671c <_start@@Base+0x336c>
   16744:	add	r1, r1, #268	; 0x10c
   16748:	add	r1, lr, r1, lsl #3
   1674c:	ldrh	r5, [r1, #10]
   16750:	b	166e4 <_start@@Base+0x3334>
   16754:	add	sl, r2, #1
   16758:	cmp	sl, #99	; 0x63
   1675c:	bgt	166e4 <_start@@Base+0x3334>
   16760:	ldr	r3, [r4, #8]
   16764:	cmp	r3, r6
   16768:	bls	166e4 <_start@@Base+0x3334>
   1676c:	mov	r2, sl
   16770:	ldrh	r1, [r9, r8]
   16774:	mov	r0, r4
   16778:	bl	166ac <_start@@Base+0x32fc>
   1677c:	ldrd	r2, [r4, #4]
   16780:	cmp	r2, r3
   16784:	bcs	166e4 <_start@@Base+0x3334>
   16788:	mov	r2, sl
   1678c:	ldrh	r1, [r7, #2]
   16790:	mov	r0, r4
   16794:	bl	166ac <_start@@Base+0x32fc>
   16798:	ldrd	r2, [r4, #4]
   1679c:	cmp	r2, r3
   167a0:	bcs	166e4 <_start@@Base+0x3334>
   167a4:	ldrb	r3, [r7, #5]
   167a8:	add	r1, r2, #4
   167ac:	str	r1, [r4, #4]
   167b0:	sub	r3, r3, #13
   167b4:	lsl	r3, r3, #24
   167b8:	orr	r3, r3, #1245184	; 0x130000
   167bc:	add	r5, r3, r5
   167c0:	str	r5, [r2]
   167c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   167c8:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   167cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167d0:	vpush	{d8}
   167d4:	ldr	r6, [r0, #4]
   167d8:	ldr	r3, [r0, #8]
   167dc:	cmp	r6, r3
   167e0:	sub	sp, sp, #12
   167e4:	bcs	16928 <_start@@Base+0x3578>
   167e8:	ldr	r8, [r0]
   167ec:	lsl	r9, r1, #3
   167f0:	mov	r4, r1
   167f4:	ldr	r1, [r8, #16]
   167f8:	mov	r5, r0
   167fc:	add	r7, r1, r9
   16800:	str	r2, [sp, #4]
   16804:	ldrb	sl, [r7, #5]
   16808:	cmp	sl, #90	; 0x5a
   1680c:	beq	168a8 <_start@@Base+0x34f8>
   16810:	cmp	sl, #28
   16814:	beq	168f0 <_start@@Base+0x3540>
   16818:	ldrb	r0, [r8, #125]	; 0x7d
   1681c:	add	r3, r0, #136	; 0x88
   16820:	add	r3, r8, r3, lsl #1
   16824:	ldrh	r3, [r3, #14]
   16828:	cmp	r4, r3
   1682c:	bcs	16938 <_start@@Base+0x3588>
   16830:	ldr	fp, [pc, #820]	; 16b6c <_start@@Base+0x37bc>
   16834:	b	16844 <_start@@Base+0x3494>
   16838:	ldrh	r3, [ip, #6]
   1683c:	cmp	r4, r3
   16840:	bcs	16938 <_start@@Base+0x3588>
   16844:	lsl	r2, r3, #3
   16848:	add	ip, r1, r2
   1684c:	ldrh	r2, [r1, r2]
   16850:	cmp	r2, r4
   16854:	bne	16838 <_start@@Base+0x3488>
   16858:	cmp	r0, #91	; 0x5b
   1685c:	beq	1688c <_start@@Base+0x34dc>
   16860:	ldrh	r2, [ip, #2]
   16864:	ldr	lr, [r5, #12]
   16868:	eor	r2, r2, lr
   1686c:	tst	r2, fp
   16870:	bne	16838 <_start@@Base+0x3488>
   16874:	ldrb	lr, [ip, #4]
   16878:	ldrb	r2, [r8, #124]	; 0x7c
   1687c:	and	lr, lr, #128	; 0x80
   16880:	and	r2, r2, #128	; 0x80
   16884:	cmp	lr, r2
   16888:	bcc	16838 <_start@@Base+0x3488>
   1688c:	add	r2, r6, #4
   16890:	str	r2, [r5, #4]
   16894:	mov	r0, #0
   16898:	str	r3, [r6]
   1689c:	add	sp, sp, #12
   168a0:	vpop	{d8}
   168a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168a8:	ldrh	r3, [r7, #2]
   168ac:	and	r3, r3, #31
   168b0:	cmp	r3, #19
   168b4:	beq	16a18 <_start@@Base+0x3668>
   168b8:	ldrb	r0, [r8, #125]	; 0x7d
   168bc:	add	r3, r0, #136	; 0x88
   168c0:	add	r3, r8, r3, lsl #1
   168c4:	ldrh	r3, [r3, #14]
   168c8:	cmp	r4, r3
   168cc:	bcc	16830 <_start@@Base+0x3480>
   168d0:	add	r4, r4, #65536	; 0x10000
   168d4:	add	r3, r6, #4
   168d8:	str	r3, [r5, #4]
   168dc:	mov	r0, #1
   168e0:	str	r4, [r6]
   168e4:	add	sp, sp, #12
   168e8:	vpop	{d8}
   168ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168f0:	ldr	r0, [r0, #12]
   168f4:	vldr	d8, [r7, #8]
   168f8:	ands	r4, r0, #61440	; 0xf000
   168fc:	beq	169dc <_start@@Base+0x362c>
   16900:	vcvt.s32.f64	s15, d8
   16904:	vmov	r3, s15
   16908:	sxth	r2, r3
   1690c:	cmp	r2, r3
   16910:	bne	16928 <_start@@Base+0x3578>
   16914:	vmov	s15, r2
   16918:	vcvt.f64.s32	d7, s15
   1691c:	vcmp.f64	d7, d8
   16920:	vmrs	APSR_nzcv, fpscr
   16924:	beq	16ad4 <_start@@Base+0x3724>
   16928:	mov	r0, #10
   1692c:	add	sp, sp, #12
   16930:	vpop	{d8}
   16934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16938:	sub	sl, sl, #41	; 0x29
   1693c:	cmp	sl, #1
   16940:	bhi	168d0 <_start@@Base+0x3520>
   16944:	ldr	sl, [r5, #12]
   16948:	ldr	r2, [sp, #4]
   1694c:	and	r0, sl, #61440	; 0xf000
   16950:	cmp	r2, #0
   16954:	sub	r3, r0, #8192	; 0x2000
   16958:	add	fp, r8, #2144	; 0x860
   1695c:	clz	r3, r3
   16960:	lsr	r3, r3, #5
   16964:	movle	r3, #0
   16968:	cmp	r3, #0
   1696c:	add	fp, fp, #12
   16970:	addne	sl, sl, #4096	; 0x1000
   16974:	mov	r3, fp
   16978:	uxth	ip, r4
   1697c:	mov	r2, #0
   16980:	b	16994 <_start@@Base+0x35e4>
   16984:	add	r2, r2, #1
   16988:	cmp	r2, #16
   1698c:	add	r3, r3, #8
   16990:	beq	16a64 <_start@@Base+0x36b4>
   16994:	ldrh	r0, [r3, #-4]
   16998:	cmp	r0, ip
   1699c:	bne	16984 <_start@@Base+0x35d4>
   169a0:	ldr	r0, [r3]
   169a4:	cmp	sl, r0
   169a8:	eor	lr, sl, r0
   169ac:	bhi	16984 <_start@@Base+0x35d4>
   169b0:	ldr	r0, [pc, #436]	; 16b6c <_start@@Base+0x37bc>
   169b4:	ands	lr, lr, r0
   169b8:	bne	16984 <_start@@Base+0x35d4>
   169bc:	add	r2, r2, #268	; 0x10c
   169c0:	mov	r0, lr
   169c4:	add	r8, r8, r2, lsl #3
   169c8:	add	r2, r6, #4
   169cc:	ldrh	r3, [r8, #10]
   169d0:	str	r2, [r5, #4]
   169d4:	str	r3, [r6]
   169d8:	b	1692c <_start@@Base+0x357c>
   169dc:	vmov	r0, r1, d8
   169e0:	bl	6e650 <luaL_openlibs@@Base+0x4e90>
   169e4:	mov	r7, r0
   169e8:	bl	6e238 <luaL_openlibs@@Base+0x4a78>
   169ec:	vmov	d7, r0, r1
   169f0:	vcmp.f64	d7, d8
   169f4:	vmrs	APSR_nzcv, fpscr
   169f8:	bne	16928 <_start@@Base+0x3578>
   169fc:	mov	r3, r6
   16a00:	mov	r2, #196608	; 0x30000
   16a04:	str	r2, [r3], #8
   16a08:	mov	r0, r4
   16a0c:	str	r3, [r5, #4]
   16a10:	str	r7, [r6, #4]
   16a14:	b	1692c <_start@@Base+0x357c>
   16a18:	ldr	r3, [r0, #12]
   16a1c:	ldrh	r1, [r1, r9]
   16a20:	and	r3, r3, #61440	; 0xf000
   16a24:	cmp	r3, #4096	; 0x1000
   16a28:	addhi	r3, r6, #4
   16a2c:	strhi	r3, [r0, #4]
   16a30:	strhi	r1, [r6]
   16a34:	bls	16b60 <_start@@Base+0x37b0>
   16a38:	ldr	r3, [r5, #16]
   16a3c:	cmp	r3, #21
   16a40:	movne	r0, #0
   16a44:	bne	1692c <_start@@Base+0x357c>
   16a48:	ldr	r3, [r5, #4]
   16a4c:	mov	r2, #131072	; 0x20000
   16a50:	add	r1, r3, #4
   16a54:	str	r1, [r5, #4]
   16a58:	mov	r0, #0
   16a5c:	str	r2, [r3]
   16a60:	b	1692c <_start@@Base+0x357c>
   16a64:	ldr	r3, [r5, #16]
   16a68:	cmp	r3, #21
   16a6c:	beq	16af0 <_start@@Base+0x3740>
   16a70:	ldr	r3, [sp, #4]
   16a74:	add	r8, r3, #1
   16a78:	cmp	r8, #99	; 0x63
   16a7c:	bgt	168d0 <_start@@Base+0x3520>
   16a80:	ldrh	r1, [r1, r9]
   16a84:	mov	r2, r8
   16a88:	mov	r0, r5
   16a8c:	bl	167cc <_start@@Base+0x341c>
   16a90:	mov	r2, r8
   16a94:	ldrh	r1, [r7, #2]
   16a98:	mov	r9, r0
   16a9c:	mov	r0, r5
   16aa0:	bl	167cc <_start@@Base+0x341c>
   16aa4:	add	r0, r9, r0
   16aa8:	cmp	r0, #1
   16aac:	bgt	168d0 <_start@@Base+0x3520>
   16ab0:	ldrb	r1, [r7, #5]
   16ab4:	ldr	r3, [r5, #16]
   16ab8:	ldr	r2, [r5, #4]
   16abc:	orr	r3, r3, r1, lsl #8
   16ac0:	add	r1, r2, #4
   16ac4:	add	r4, r4, r3, lsl #16
   16ac8:	str	r1, [r5, #4]
   16acc:	str	r4, [r2]
   16ad0:	b	1692c <_start@@Base+0x357c>
   16ad4:	mov	r3, r6
   16ad8:	mov	r1, #196608	; 0x30000
   16adc:	str	r1, [r3], #8
   16ae0:	mov	r0, #0
   16ae4:	str	r3, [r5, #4]
   16ae8:	str	r2, [r6, #4]
   16aec:	b	1692c <_start@@Base+0x357c>
   16af0:	ldr	lr, [pc, #120]	; 16b70 <_start@@Base+0x37c0>
   16af4:	ldr	sl, [pc, #120]	; 16b74 <_start@@Base+0x37c4>
   16af8:	mov	r2, #0
   16afc:	b	16b10 <_start@@Base+0x3760>
   16b00:	add	r2, r2, #1
   16b04:	cmp	r2, #16
   16b08:	add	fp, fp, #8
   16b0c:	beq	16a70 <_start@@Base+0x36c0>
   16b10:	ldrh	r3, [fp, #-4]
   16b14:	cmp	r3, ip
   16b18:	bne	16b00 <_start@@Base+0x3750>
   16b1c:	ldr	r3, [fp]
   16b20:	cmp	r3, lr
   16b24:	eor	r0, r3, sl
   16b28:	bls	16b00 <_start@@Base+0x3750>
   16b2c:	ldr	r3, [pc, #56]	; 16b6c <_start@@Base+0x37bc>
   16b30:	ands	r3, r0, r3
   16b34:	bne	16b00 <_start@@Base+0x3750>
   16b38:	add	r2, r2, #268	; 0x10c
   16b3c:	mov	r0, r3
   16b40:	add	r8, r8, r2, lsl #3
   16b44:	mov	r3, r6
   16b48:	ldrh	r1, [r8, #10]
   16b4c:	mov	r2, #131072	; 0x20000
   16b50:	str	r1, [r3], #8
   16b54:	str	r3, [r5, #4]
   16b58:	str	r2, [r6, #4]
   16b5c:	b	1692c <_start@@Base+0x357c>
   16b60:	add	r2, r2, #1
   16b64:	bl	166ac <_start@@Base+0x32fc>
   16b68:	b	16a38 <_start@@Base+0x3688>
   16b6c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   16b70:	andeq	r2, r0, sp, ror #4
   16b74:	andeq	r2, r0, lr, ror #4
   16b78:	push	{r4, r5, r6, r7, r8, r9, lr}
   16b7c:	add	r3, r0, #284	; 0x11c
   16b80:	sub	sp, sp, #404	; 0x194
   16b84:	add	r3, r3, #2
   16b88:	sub	r2, sp, #4
   16b8c:	add	r1, sp, #396	; 0x18c
   16b90:	str	r3, [r2, #4]!
   16b94:	cmp	r2, r1
   16b98:	add	r3, r3, #2
   16b9c:	bne	16b90 <_start@@Base+0x37e0>
   16ba0:	ldr	r3, [r0, #8]
   16ba4:	sub	r2, r3, #1
   16ba8:	cmp	r2, #32768	; 0x8000
   16bac:	bls	16c80 <_start@@Base+0x38d0>
   16bb0:	ldr	r0, [r0, #16]
   16bb4:	ldr	r4, [pc, #204]	; 16c88 <_start@@Base+0x38d8>
   16bb8:	add	r3, r0, r3, lsl #3
   16bbc:	add	ip, r0, #262144	; 0x40000
   16bc0:	sub	r3, r3, #2
   16bc4:	add	ip, ip, #6
   16bc8:	mvn	lr, #128	; 0x80
   16bcc:	mov	r5, #12
   16bd0:	b	16c10 <_start@@Base+0x3860>
   16bd4:	ldrh	r2, [r3, #-6]
   16bd8:	sub	r3, r3, #8
   16bdc:	cmp	r2, #32768	; 0x8000
   16be0:	add	r2, r0, r2, lsl #3
   16be4:	ldrbhi	r1, [r2, #4]
   16be8:	orrhi	r1, r1, #32
   16bec:	strbhi	r1, [r2, #4]
   16bf0:	ldrh	r2, [r3, #4]
   16bf4:	cmp	r2, #32768	; 0x8000
   16bf8:	add	r2, r0, r2, lsl #3
   16bfc:	ldrbhi	r1, [r2, #4]
   16c00:	orrhi	r1, r1, #32
   16c04:	strbhi	r1, [r2, #4]
   16c08:	cmp	ip, r3
   16c0c:	beq	16c80 <_start@@Base+0x38d0>
   16c10:	ldrb	r1, [r3, #-1]
   16c14:	ldrb	r2, [r3, #-2]
   16c18:	add	r7, sp, #400	; 0x190
   16c1c:	add	r8, r4, r1
   16c20:	add	r9, r7, r1, lsl #2
   16c24:	orr	r6, r2, lr
   16c28:	ands	r7, r2, #32
   16c2c:	bic	r2, r2, #32
   16c30:	strbne	r2, [r3, #-2]
   16c34:	strne	r3, [r9, #-400]	; 0xfffffe70
   16c38:	bne	16bd4 <_start@@Base+0x3824>
   16c3c:	ldrb	r2, [r8, #36]	; 0x24
   16c40:	and	r6, r6, r2
   16c44:	cmp	r6, #95	; 0x5f
   16c48:	bgt	16bd4 <_start@@Base+0x3824>
   16c4c:	add	r2, sp, #400	; 0x190
   16c50:	add	r1, r2, r1, lsl #2
   16c54:	ldrh	r6, [r3]
   16c58:	ldr	r2, [r1, #-400]	; 0xfffffe70
   16c5c:	sub	r3, r3, #8
   16c60:	strh	r6, [r2]
   16c64:	strb	r7, [r3, #6]
   16c68:	strb	r5, [r3, #7]
   16c6c:	strh	r7, [r3, #4]
   16c70:	strh	r7, [r3, #2]
   16c74:	strh	r7, [r3, #8]
   16c78:	cmp	ip, r3
   16c7c:	bne	16c10 <_start@@Base+0x3860>
   16c80:	add	sp, sp, #404	; 0x194
   16c84:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16c88:			; <UNDEFINED> instruction: 0x0006ecb8
   16c8c:	ldr	r2, [r0, #16]
   16c90:	lsl	r1, r1, #3
   16c94:	push	{r4, r5, r6, lr}
   16c98:	add	r5, r2, r1
   16c9c:	ldrb	ip, [r5, #4]
   16ca0:	tst	ip, #64	; 0x40
   16ca4:	bne	16cd8 <_start@@Base+0x3928>
   16ca8:	ldrh	r1, [r2, r1]
   16cac:	mov	r4, r0
   16cb0:	cmp	r1, #32768	; 0x8000
   16cb4:	bhi	16ccc <_start@@Base+0x391c>
   16cb8:	ldrh	r1, [r5, #2]
   16cbc:	cmp	r1, #32768	; 0x8000
   16cc0:	bhi	16ce0 <_start@@Base+0x3930>
   16cc4:	mov	r0, #0
   16cc8:	pop	{r4, r5, r6, pc}
   16ccc:	bl	16c8c <_start@@Base+0x38dc>
   16cd0:	cmp	r0, #0
   16cd4:	beq	16cb8 <_start@@Base+0x3908>
   16cd8:	mov	r0, #1
   16cdc:	pop	{r4, r5, r6, pc}
   16ce0:	mov	r0, r4
   16ce4:	bl	16c8c <_start@@Base+0x38dc>
   16ce8:	adds	r0, r0, #0
   16cec:	movne	r0, #1
   16cf0:	pop	{r4, r5, r6, pc}
   16cf4:	ldr	r3, [r0, #104]	; 0x68
   16cf8:	str	r3, [r1, #4]
   16cfc:	bx	lr
   16d00:	cmp	r1, #255	; 0xff
   16d04:	bls	16da4 <_start@@Base+0x39f4>
   16d08:	ror	r2, r1, #30
   16d0c:	mov	r3, #256	; 0x100
   16d10:	b	16d24 <_start@@Base+0x3974>
   16d14:	add	r3, r3, #256	; 0x100
   16d18:	cmp	r3, #4096	; 0x1000
   16d1c:	ror	r2, r2, #30
   16d20:	beq	16d38 <_start@@Base+0x3988>
   16d24:	cmp	r2, #255	; 0xff
   16d28:	bhi	16d14 <_start@@Base+0x3964>
   16d2c:	orr	r0, r3, r2
   16d30:	orr	r0, r0, #33554432	; 0x2000000
   16d34:	bx	lr
   16d38:	lsl	r0, r0, #7
   16d3c:	ldr	r3, [pc, #116]	; 16db8 <_start@@Base+0x3a08>
   16d40:	add	r0, r3, r0, lsr #28
   16d44:	ldrb	r0, [r0, #140]	; 0x8c
   16d48:	cmp	r0, #0
   16d4c:	bxeq	lr
   16d50:	cmp	r0, #1
   16d54:	cmpne	r0, #6
   16d58:	mvnne	r1, r1
   16d5c:	rsbeq	r1, r1, #0
   16d60:	cmp	r1, #255	; 0xff
   16d64:	bls	16db0 <_start@@Base+0x3a00>
   16d68:	ror	r1, r1, #30
   16d6c:	mov	r3, #256	; 0x100
   16d70:	b	16d84 <_start@@Base+0x39d4>
   16d74:	add	r3, r3, #256	; 0x100
   16d78:	cmp	r3, #4096	; 0x1000
   16d7c:	ror	r1, r1, #30
   16d80:	beq	16d9c <_start@@Base+0x39ec>
   16d84:	cmp	r1, #255	; 0xff
   16d88:	bhi	16d74 <_start@@Base+0x39c4>
   16d8c:	orr	r0, r3, r0, lsl #21
   16d90:	orr	r0, r0, #33554432	; 0x2000000
   16d94:	orr	r0, r0, r1
   16d98:	bx	lr
   16d9c:	mov	r0, #0
   16da0:	bx	lr
   16da4:	mov	r2, r1
   16da8:	mov	r3, #0
   16dac:	b	16d2c <_start@@Base+0x397c>
   16db0:	mov	r3, #0
   16db4:	b	16d8c <_start@@Base+0x39dc>
   16db8:			; <UNDEFINED> instruction: 0x0006ecb8
   16dbc:	push	{r4, r5, r6, r7, r8, r9, lr}
   16dc0:	lsl	ip, r3, #16
   16dc4:	ldr	r5, [sp, #28]
   16dc8:	ldr	r4, [r0, #128]	; 0x80
   16dcc:	eor	lr, r5, #4
   16dd0:	orr	lr, lr, ip
   16dd4:	orr	lr, lr, #25165824	; 0x1800000
   16dd8:	lsl	r6, r2, #12
   16ddc:	orr	lr, lr, r1
   16de0:	eor	r8, r6, #4096	; 0x1000
   16de4:	ldr	r7, [r4]
   16de8:	orr	lr, lr, r8
   16dec:	cmp	r7, lr
   16df0:	beq	16e28 <_start@@Base+0x3a78>
   16df4:	cmp	r5, #0
   16df8:	movge	r3, r5
   16dfc:	rsblt	r3, r5, #0
   16e00:	blt	16e08 <_start@@Base+0x3a58>
   16e04:	orr	r1, r1, #8388608	; 0x800000
   16e08:	orr	ip, ip, #16777216	; 0x1000000
   16e0c:	orr	ip, ip, r6
   16e10:	orr	r1, ip, r1
   16e14:	orr	r1, r1, r3
   16e18:	sub	r3, r4, #4
   16e1c:	str	r3, [r0, #128]	; 0x80
   16e20:	str	r1, [r4, #-4]
   16e24:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16e28:	bic	lr, r1, #1048576	; 0x100000
   16e2c:	cmp	lr, #-469762048	; 0xe4000000
   16e30:	bne	16df4 <_start@@Base+0x3a44>
   16e34:	mov	r9, r3
   16e38:	subs	r3, r2, r3
   16e3c:	movne	r3, #1
   16e40:	cmp	r5, #252	; 0xfc
   16e44:	movhi	r3, #0
   16e48:	cmp	r3, #0
   16e4c:	mov	r3, r5
   16e50:	beq	16df4 <_start@@Base+0x3a44>
   16e54:	tst	r5, #3
   16e58:	bne	16e04 <_start@@Base+0x3a54>
   16e5c:	eor	r2, r2, r5, asr #2
   16e60:	tst	r2, #1
   16e64:	bne	16e04 <_start@@Base+0x3a54>
   16e68:	ldr	r2, [r0, #240]	; 0xf0
   16e6c:	cmp	r4, r2
   16e70:	beq	16e04 <_start@@Base+0x3a54>
   16e74:	orr	r3, ip, #29360128	; 0x1c00000
   16e78:	and	r2, r5, #11
   16e7c:	lsl	r0, r5, #4
   16e80:	orr	r3, r3, r2
   16e84:	and	r0, r0, #3840	; 0xf00
   16e88:	orr	r3, r3, r0
   16e8c:	bic	ip, r6, #8128	; 0x1fc0
   16e90:	add	lr, lr, #1048576	; 0x100000
   16e94:	ldr	r2, [pc, #32]	; 16ebc <_start@@Base+0x3b0c>
   16e98:	ldr	r0, [pc, #32]	; 16ec0 <_start@@Base+0x3b10>
   16e9c:	cmp	r1, lr
   16ea0:	bic	ip, ip, #63	; 0x3f
   16ea4:	orr	r3, r3, ip
   16ea8:	moveq	r1, r2
   16eac:	movne	r1, r0
   16eb0:	orr	r3, r3, r1
   16eb4:	str	r3, [r4]
   16eb8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16ebc:	ldrd	r0, [r0], -r0	; <UNPREDICTABLE>
   16ec0:	strd	r0, [r0], -r0	; <UNPREDICTABLE>
   16ec4:	ldr	r3, [r0, #136]	; 0x88
   16ec8:	lsl	r2, r1, #3
   16ecc:	add	ip, r3, r2
   16ed0:	ldrb	ip, [ip, #5]
   16ed4:	cmp	ip, #80	; 0x50
   16ed8:	beq	16ee4 <_start@@Base+0x3b34>
   16edc:	mov	r0, #0
   16ee0:	bx	lr
   16ee4:	ldrh	r2, [r3, r2]
   16ee8:	cmp	r2, #16
   16eec:	bhi	16edc <_start@@Base+0x3b2c>
   16ef0:	ldr	r2, [r0, #204]	; 0xcc
   16ef4:	cmn	r2, #1
   16ef8:	beq	16edc <_start@@Base+0x3b2c>
   16efc:	ldr	r2, [r0, #176]	; 0xb0
   16f00:	add	r0, r1, #31
   16f04:	cmp	r2, r0
   16f08:	addls	r3, r3, r2, lsl #3
   16f0c:	bls	16f20 <_start@@Base+0x3b70>
   16f10:	b	16edc <_start@@Base+0x3b2c>
   16f14:	ldrb	r0, [r3, #5]
   16f18:	cmp	r0, #60	; 0x3c
   16f1c:	beq	16edc <_start@@Base+0x3b2c>
   16f20:	sub	r2, r2, #1
   16f24:	cmp	r1, r2
   16f28:	sub	r3, r3, #8
   16f2c:	bcc	16f14 <_start@@Base+0x3b64>
   16f30:	mov	r0, #32
   16f34:	bx	lr
   16f38:	ldrh	r3, [r1, #64]	; 0x40
   16f3c:	push	{lr}		; (str lr, [sp, #-4]!)
   16f40:	cmp	r3, #0
   16f44:	beq	16f60 <_start@@Base+0x3bb0>
   16f48:	ldr	r2, [r0, #660]	; 0x294
   16f4c:	mov	ip, #0
   16f50:	cmp	r3, r2
   16f54:	ldr	r2, [r0, #656]	; 0x290
   16f58:	strcc	r3, [r0, #660]	; 0x294
   16f5c:	str	ip, [r2, r3, lsl #2]
   16f60:	ldrh	r3, [r1, #24]
   16f64:	ldr	r2, [r1, #8]
   16f68:	ldr	ip, [r1, #20]
   16f6c:	add	r2, r2, #10
   16f70:	add	r2, r2, r3
   16f74:	ldrh	r3, [r1, #26]
   16f78:	sub	r2, r2, ip
   16f7c:	ldr	ip, [r0, #20]
   16f80:	add	r2, r3, r2, lsl #1
   16f84:	ldr	lr, [r0, #12]
   16f88:	lsl	r2, r2, #2
   16f8c:	sub	r3, ip, r2
   16f90:	str	r3, [r0, #20]
   16f94:	mov	ip, lr
   16f98:	ldr	r0, [r0, #16]
   16f9c:	mov	r3, #0
   16fa0:	pop	{lr}		; (ldr lr, [sp], #4)
   16fa4:	bx	ip
   16fa8:	ldr	r2, [r0, #8]
   16fac:	ldr	r3, [r0, #20]
   16fb0:	mov	r1, r0
   16fb4:	ldr	r2, [r2, #20]
   16fb8:	mvn	ip, #13
   16fbc:	push	{lr}		; (str lr, [sp, #-4]!)
   16fc0:	lsr	r2, r2, #10
   16fc4:	add	lr, r3, #8
   16fc8:	str	lr, [r1, #20]
   16fcc:	mov	r0, #1
   16fd0:	stm	r3, {r2, ip}
   16fd4:	pop	{pc}		; (ldr pc, [sp], #4)
   16fd8:	ldr	r2, [r0, #40]	; 0x28
   16fdc:	ldr	r1, [r0, #20]
   16fe0:	and	r2, r2, #1
   16fe4:	mvn	r3, #1
   16fe8:	add	ip, r1, #8
   16fec:	sub	r3, r3, r2
   16ff0:	str	ip, [r0, #20]
   16ff4:	mov	r0, #1
   16ff8:	str	r3, [r1, #4]
   16ffc:	bx	lr
   17000:	ldrd	r2, [r0]
   17004:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17008:	sub	sp, sp, #20
   1700c:	ldrd	r6, [r0, #8]
   17010:	lsl	lr, r3, #31
   17014:	orr	lr, lr, r2, lsr #1
   17018:	str	lr, [sp, #4]
   1701c:	lsl	r5, r7, #19
   17020:	lsl	lr, r2, #31
   17024:	str	lr, [sp]
   17028:	orr	r5, r5, r6, lsr #13
   1702c:	lsl	r4, r6, #19
   17030:	eor	fp, r5, r7
   17034:	eor	sl, r4, r6
   17038:	ldrd	r4, [sp]
   1703c:	mov	ip, r0
   17040:	ldrd	r0, [r0, #16]
   17044:	eor	r4, r4, r2
   17048:	eor	r5, r5, r3
   1704c:	lsr	r8, sl, #30
   17050:	orr	r8, r8, fp, lsl #2
   17054:	lsr	r9, fp, #30
   17058:	lsl	lr, r7, #28
   1705c:	lsl	fp, r1, #24
   17060:	strd	r4, [sp]
   17064:	orr	lr, lr, r6, lsr #4
   17068:	orr	fp, fp, r0, lsr #8
   1706c:	eor	r7, fp, r1
   17070:	bic	fp, lr, #3
   17074:	ldr	lr, [sp, #4]
   17078:	mov	sl, #0
   1707c:	eor	r4, sl, r8
   17080:	lsr	r8, lr, #13
   17084:	ldr	lr, [ip, #28]
   17088:	eor	r5, fp, r9
   1708c:	lsl	fp, r3, #18
   17090:	orr	fp, fp, r2, lsr #14
   17094:	lsl	sl, r2, #18
   17098:	mvn	r3, #0
   1709c:	ldr	r2, [pc, #240]	; 17194 <_start@@Base+0x3de4>
   170a0:	strd	r4, [sp, #8]
   170a4:	and	r5, fp, r3
   170a8:	lsl	r3, lr, #21
   170ac:	ldr	lr, [ip, #24]
   170b0:	and	r4, sl, r2
   170b4:	ldrd	sl, [ip, #24]
   170b8:	mov	r9, #0
   170bc:	orr	r3, r3, lr, lsr #11
   170c0:	eor	r2, r8, r4
   170c4:	eor	fp, fp, r3
   170c8:	eor	r3, r9, r5
   170cc:	lsl	r4, lr, #8
   170d0:	strd	r2, [ip]
   170d4:	lsl	r3, r1, #7
   170d8:	orr	r3, r3, r0, lsr #25
   170dc:	str	r3, [sp, #4]
   170e0:	lsl	r3, r0, #7
   170e4:	str	r3, [sp]
   170e8:	ldr	r3, [ip, #28]
   170ec:	ldr	r6, [pc, #164]	; 17198 <_start@@Base+0x3de8>
   170f0:	and	r0, r4, #-33554432	; 0xfe000000
   170f4:	lsl	r5, r3, #8
   170f8:	ldrd	r2, [sp]
   170fc:	lsr	r4, r7, #16
   17100:	mvn	r7, #0
   17104:	and	r2, r2, r6
   17108:	and	r3, r3, r7
   1710c:	eor	r6, r2, r4
   17110:	eor	r7, r3, r9
   17114:	orr	r5, r5, lr, lsr #24
   17118:	strd	r6, [sp]
   1711c:	mov	r1, r5
   17120:	lsr	r6, fp, #7
   17124:	ldrd	sl, [sp, #8]
   17128:	eor	r4, r6, r0
   1712c:	eor	r5, r9, r1
   17130:	ldrd	r6, [ip]
   17134:	ldrd	r0, [sp]
   17138:	mov	r3, fp
   1713c:	eor	r3, r3, r7
   17140:	mov	r2, sl
   17144:	mov	r7, r1
   17148:	eor	r2, r2, r6
   1714c:	eor	r7, r7, r3
   17150:	mov	r6, r0
   17154:	ldr	r9, [pc, #64]	; 1719c <_start@@Base+0x3dec>
   17158:	eor	r3, r7, r5
   1715c:	eor	r6, r6, r2
   17160:	eor	r2, r6, r4
   17164:	and	r7, r3, r9
   17168:	mvn	r8, #0
   1716c:	ldr	r3, [pc, #44]	; 171a0 <_start@@Base+0x3df0>
   17170:	and	r6, r2, r8
   17174:	mov	r2, #0
   17178:	strd	r0, [ip, #16]
   1717c:	strd	sl, [ip, #8]
   17180:	orr	r0, r2, r6
   17184:	orr	r1, r3, r7
   17188:	strd	r4, [ip, #24]
   1718c:	add	sp, sp, #20
   17190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17194:			; <UNDEFINED> instruction: 0xfff80000
   17198:			; <UNDEFINED> instruction: 0xffff0000
   1719c:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   171a0:	svccc	0x00f00000	; IMB
   171a4:	push	{r4, r5, r6, lr}
   171a8:	sub	sp, sp, #8
   171ac:	vldr	d6, [pc, #132]	; 17238 <_start@@Base+0x3e88>
   171b0:	vstr	d0, [sp]
   171b4:	vldr	d7, [pc, #132]	; 17240 <_start@@Base+0x3e90>
   171b8:	ldr	lr, [pc, #136]	; 17248 <_start@@Base+0x3e98>
   171bc:	mov	r5, r0
   171c0:	sub	ip, r0, #8
   171c4:	add	r6, r0, #24
   171c8:	mov	r4, #1
   171cc:	vldr	d4, [sp]
   171d0:	vmov.f64	d5, d7
   171d4:	uxtb	r2, lr
   171d8:	mov	r3, #0
   171dc:	lsl	r2, r4, r2
   171e0:	vmla.f64	d5, d4, d6
   171e4:	lsr	lr, lr, #8
   171e8:	vstr	d5, [sp]
   171ec:	ldrd	r0, [sp]
   171f0:	cmp	r1, r3
   171f4:	cmpeq	r0, r2
   171f8:	bcs	17204 <_start@@Base+0x3e54>
   171fc:	adds	r0, r0, r2
   17200:	adc	r1, r1, r3
   17204:	strd	r0, [ip, #8]!
   17208:	cmp	ip, r6
   1720c:	bne	171cc <_start@@Base+0x3e1c>
   17210:	mov	r4, #10
   17214:	mov	r3, #1
   17218:	str	r3, [r5, #32]
   1721c:	mov	r0, r5
   17220:	bl	17000 <_start@@Base+0x3c50>
   17224:	subs	r4, r4, #1
   17228:	bne	1721c <_start@@Base+0x3e6c>
   1722c:	add	sp, sp, #8
   17230:	pop	{r4, r5, r6, pc}
   17234:	nop			; (mov r0, r0)
   17238:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1723c:	strdmi	r2, [r9], -fp
   17240:	blhi	52cfec <__bss_end__@@Base+0x4a8d74>
   17244:	andmi	fp, r5, sl, lsl #30
   17248:	tstne	r9, r1, lsl #12
   1724c:	and	r3, r1, #192	; 0xc0
   17250:	cmp	r3, #64	; 0x40
   17254:	beq	17268 <_start@@Base+0x3eb8>
   17258:	sub	r0, r1, r0
   1725c:	clz	r0, r0
   17260:	lsr	r0, r0, #5
   17264:	bx	lr
   17268:	ldr	r2, [pc, #76]	; 172bc <_start@@Base+0x3f0c>
   1726c:	and	r3, r1, #31
   17270:	add	r3, r2, r3
   17274:	ldrb	r3, [r3, #156]	; 0x9c
   17278:	cmp	r3, #0
   1727c:	beq	172a0 <_start@@Base+0x3ef0>
   17280:	add	r0, r2, r0
   17284:	tst	r1, #32
   17288:	ldrb	r0, [r0, #189]	; 0xbd
   1728c:	and	r0, r0, r3
   17290:	bxne	lr
   17294:	clz	r0, r0
   17298:	lsr	r0, r0, #5
   1729c:	bx	lr
   172a0:	cmp	r1, #122	; 0x7a
   172a4:	beq	17294 <_start@@Base+0x3ee4>
   172a8:	cmp	r1, #90	; 0x5a
   172ac:	bne	17258 <_start@@Base+0x3ea8>
   172b0:	adds	r0, r0, #0
   172b4:	movne	r0, #1
   172b8:	bx	lr
   172bc:			; <UNDEFINED> instruction: 0x0006ecb8
   172c0:	push	{r4, r5, r6, r7, r8, lr}
   172c4:	mov	r3, r1
   172c8:	ldrb	r1, [r1, #1]
   172cc:	mov	r6, r0
   172d0:	mov	r5, r2
   172d4:	cmp	r1, #94	; 0x5e
   172d8:	addeq	r3, r3, #1
   172dc:	moveq	r7, #0
   172e0:	movne	r7, #1
   172e4:	b	172fc <_start@@Base+0x3f4c>
   172e8:	cmp	r1, #45	; 0x2d
   172ec:	beq	17334 <_start@@Base+0x3f84>
   172f0:	cmp	r6, r0
   172f4:	beq	1732c <_start@@Base+0x3f7c>
   172f8:	mov	r3, r4
   172fc:	add	r4, r3, #1
   17300:	cmp	r4, r5
   17304:	bcs	1735c <_start@@Base+0x3fac>
   17308:	ldrb	r0, [r3, #1]
   1730c:	ldrb	r1, [r3, #2]
   17310:	cmp	r0, #37	; 0x25
   17314:	bne	172e8 <_start@@Base+0x3f38>
   17318:	mov	r0, r6
   1731c:	add	r4, r3, #2
   17320:	bl	1724c <_start@@Base+0x3e9c>
   17324:	cmp	r0, #0
   17328:	beq	172f8 <_start@@Base+0x3f48>
   1732c:	mov	r0, r7
   17330:	pop	{r4, r5, r6, r7, r8, pc}
   17334:	add	r2, r3, #3
   17338:	cmp	r2, r5
   1733c:	bcs	172f0 <_start@@Base+0x3f40>
   17340:	cmp	r6, r0
   17344:	blt	17354 <_start@@Base+0x3fa4>
   17348:	ldrb	r3, [r3, #3]
   1734c:	cmp	r3, r6
   17350:	bge	1732c <_start@@Base+0x3f7c>
   17354:	mov	r4, r2
   17358:	b	172f8 <_start@@Base+0x3f48>
   1735c:	eor	r7, r7, #1
   17360:	mov	r0, r7
   17364:	pop	{r4, r5, r6, r7, r8, pc}
   17368:	mov	r3, r0
   1736c:	push	{r4, r5}
   17370:	mov	r0, #1
   17374:	ldr	r1, [r3, #8]
   17378:	ldr	r2, [r3, #20]
   1737c:	ldrd	r4, [r1, #120]	; 0x78
   17380:	add	r1, r2, #8
   17384:	str	r1, [r3, #20]
   17388:	strd	r4, [r2]
   1738c:	pop	{r4, r5}
   17390:	bx	lr
   17394:	ldr	r3, [r0, #4]
   17398:	ldr	r2, [r1, #4]
   1739c:	cmp	r3, r2
   173a0:	beq	173ec <_start@@Base+0x403c>
   173a4:	cmn	r2, #14
   173a8:	cmnls	r3, #14
   173ac:	bls	173b8 <_start@@Base+0x4008>
   173b0:	mov	r0, #0
   173b4:	bx	lr
   173b8:	cmn	r3, #14
   173bc:	vldreq	s14, [r0]
   173c0:	vldrne	d7, [r0]
   173c4:	vcvteq.f64.s32	d7, s14
   173c8:	cmn	r2, #14
   173cc:	vldreq	s12, [r1]
   173d0:	vldrne	d6, [r1]
   173d4:	vcvteq.f64.s32	d6, s12
   173d8:	vcmp.f64	d6, d7
   173dc:	vmrs	APSR_nzcv, fpscr
   173e0:	moveq	r0, #1
   173e4:	movne	r0, #0
   173e8:	bx	lr
   173ec:	cmn	r3, #4
   173f0:	bhi	17414 <_start@@Base+0x4064>
   173f4:	cmn	r3, #15
   173f8:	bls	173b8 <_start@@Base+0x4008>
   173fc:	ldr	r0, [r0]
   17400:	ldr	r3, [r1]
   17404:	sub	r0, r0, r3
   17408:	clz	r0, r0
   1740c:	lsr	r0, r0, #5
   17410:	bx	lr
   17414:	mov	r0, #1
   17418:	bx	lr
   1741c:	ldr	r2, [r0, #24]
   17420:	mov	r3, r0
   17424:	push	{lr}		; (str lr, [sp, #-4]!)
   17428:	add	r1, r2, #1
   1742c:	ldrb	r0, [r2]
   17430:	cmp	r0, #10
   17434:	cmpne	r0, #13
   17438:	bne	17490 <_start@@Base+0x40e0>
   1743c:	str	r1, [r3, #24]
   17440:	ldrb	lr, [r2, #1]
   17444:	cmp	lr, #13
   17448:	cmpne	lr, #10
   1744c:	moveq	ip, #1
   17450:	movne	ip, #0
   17454:	cmp	r0, lr
   17458:	moveq	r0, #0
   1745c:	andne	r0, ip, #1
   17460:	cmp	r0, #0
   17464:	ldr	r0, [r3, #60]	; 0x3c
   17468:	addne	r1, r2, #2
   1746c:	add	r0, r0, #1
   17470:	add	r2, r1, #1
   17474:	str	r0, [r3, #60]	; 0x3c
   17478:	str	r2, [r3, #24]
   1747c:	ldrb	r0, [r1]
   17480:	cmp	r0, #92	; 0x5c
   17484:	str	r0, [r3]
   17488:	popne	{pc}		; (ldrne pc, [sp], #4)
   1748c:	b	17428 <_start@@Base+0x4078>
   17490:	ldr	r0, [r3]
   17494:	pop	{pc}		; (ldr pc, [sp], #4)
   17498:	ldrb	r2, [r1, #4]
   1749c:	push	{r4, r5, r6, lr}
   174a0:	mov	r4, r1
   174a4:	mov	r5, r0
   174a8:	ldrb	r3, [r4, #5]
   174ac:	and	r2, r2, #252	; 0xfc
   174b0:	strb	r2, [r4, #4]
   174b4:	cmp	r3, #12
   174b8:	beq	174dc <_start@@Base+0x412c>
   174bc:	cmp	r3, #5
   174c0:	beq	17510 <_start@@Base+0x4160>
   174c4:	cmp	r3, #4
   174c8:	cmpne	r3, #10
   174cc:	ldrne	r3, [r5, #44]	; 0x2c
   174d0:	strne	r3, [r4, #12]
   174d4:	strne	r4, [r5, #44]	; 0x2c
   174d8:	pop	{r4, r5, r6, pc}
   174dc:	ldr	r1, [r4, #16]
   174e0:	orr	r2, r2, #4
   174e4:	cmp	r1, #0
   174e8:	strb	r2, [r4, #4]
   174ec:	beq	174fc <_start@@Base+0x414c>
   174f0:	ldrb	r3, [r1, #4]
   174f4:	tst	r3, #3
   174f8:	bne	17554 <_start@@Base+0x41a4>
   174fc:	ldr	r4, [r4, #8]
   17500:	ldrb	r2, [r4, #4]
   17504:	tst	r2, #3
   17508:	bne	174a8 <_start@@Base+0x40f8>
   1750c:	pop	{r4, r5, r6, pc}
   17510:	ldr	r2, [r4, #16]
   17514:	ldr	r3, [r2, #4]
   17518:	add	r3, r3, #4
   1751c:	cmn	r3, #10
   17520:	bls	1753c <_start@@Base+0x418c>
   17524:	ldr	r1, [r2]
   17528:	ldrb	r3, [r1, #4]
   1752c:	tst	r3, #3
   17530:	beq	1753c <_start@@Base+0x418c>
   17534:	mov	r0, r5
   17538:	bl	17498 <_start@@Base+0x40e8>
   1753c:	ldrb	r3, [r4, #6]
   17540:	cmp	r3, #0
   17544:	ldrbne	r3, [r4, #4]
   17548:	orrne	r3, r3, #4
   1754c:	strbne	r3, [r4, #4]
   17550:	pop	{r4, r5, r6, pc}
   17554:	mov	r0, r5
   17558:	bl	17498 <_start@@Base+0x40e8>
   1755c:	b	174fc <_start@@Base+0x414c>
   17560:	push	{r4, r5, r6, lr}
   17564:	mov	r6, r0
   17568:	add	r4, r0, #228	; 0xe4
   1756c:	add	r5, r0, #380	; 0x17c
   17570:	b	1757c <_start@@Base+0x41cc>
   17574:	cmp	r4, r5
   17578:	popeq	{r4, r5, r6, pc}
   1757c:	ldr	r1, [r4, #4]!
   17580:	cmp	r1, #0
   17584:	beq	17574 <_start@@Base+0x41c4>
   17588:	ldrb	r3, [r1, #4]
   1758c:	tst	r3, #3
   17590:	beq	17574 <_start@@Base+0x41c4>
   17594:	mov	r0, r6
   17598:	bl	17498 <_start@@Base+0x40e8>
   1759c:	cmp	r4, r5
   175a0:	bne	1757c <_start@@Base+0x41cc>
   175a4:	pop	{r4, r5, r6, pc}
   175a8:	ldrb	r3, [r0, #29]
   175ac:	sub	r3, r3, #1
   175b0:	cmp	r3, #1
   175b4:	bls	175d4 <_start@@Base+0x4224>
   175b8:	ldrb	r2, [r0, #28]
   175bc:	ldrb	r3, [r1, #-4]
   175c0:	and	r2, r2, #3
   175c4:	bic	r3, r3, #7
   175c8:	orr	r3, r3, r2
   175cc:	strb	r3, [r1, #-4]
   175d0:	bx	lr
   175d4:	ldr	r1, [r1]
   175d8:	b	17498 <_start@@Base+0x40e8>
   175dc:	push	{r4, r5, r6, lr}
   175e0:	mov	r4, r0
   175e4:	ldrb	r2, [r1, #4]
   175e8:	ands	r3, r2, #16
   175ec:	sxtb	r2, r2
   175f0:	bne	17668 <_start@@Base+0x42b8>
   175f4:	cmp	r2, #0
   175f8:	ldr	r5, [r0, #20]
   175fc:	ldr	r6, [r0, #12]
   17600:	ldr	r0, [r0, #16]
   17604:	blt	176a0 <_start@@Base+0x42f0>
   17608:	ldr	r3, [r4, #228]	; 0xe4
   1760c:	ldrh	r2, [r1, #6]
   17610:	ldr	lr, [r3]
   17614:	add	r3, lr, r2, lsl #4
   17618:	ldr	r2, [lr, r2, lsl #4]
   1761c:	lsr	ip, r2, #28
   17620:	cmp	ip, #8
   17624:	bne	17640 <_start@@Base+0x4290>
   17628:	uxth	r3, r2
   1762c:	ldr	r2, [lr, r3, lsl #4]
   17630:	add	r3, lr, r3, lsl #4
   17634:	lsr	ip, r2, #28
   17638:	cmp	ip, #8
   1763c:	beq	17628 <_start@@Base+0x4278>
   17640:	cmp	ip, #5
   17644:	movhi	r2, #12
   17648:	ldrls	r2, [r3, #4]
   1764c:	mov	ip, r6
   17650:	addls	r2, r2, #8
   17654:	sub	r5, r5, r2
   17658:	str	r5, [r4, #20]
   1765c:	mov	r3, #0
   17660:	pop	{r4, r5, r6, lr}
   17664:	bx	ip
   17668:	ldrb	r3, [r0, #28]
   1766c:	ldr	r0, [r0, #56]	; 0x38
   17670:	bic	r2, r2, #7
   17674:	cmp	r0, #0
   17678:	and	r3, r3, #3
   1767c:	orr	r2, r3, r2
   17680:	ldrne	r3, [r0]
   17684:	orr	r2, r2, #8
   17688:	strb	r2, [r1, #4]
   1768c:	strne	r3, [r1]
   17690:	streq	r1, [r1]
   17694:	strne	r1, [r0]
   17698:	str	r1, [r4, #56]	; 0x38
   1769c:	pop	{r4, r5, r6, pc}
   176a0:	ldrh	r2, [r1, #-6]
   176a4:	ldr	lr, [r1, #-4]
   176a8:	ldrh	ip, [r1, #-8]
   176ac:	add	r2, r2, lr
   176b0:	sub	r5, r5, r2
   176b4:	str	r5, [r4, #20]
   176b8:	sub	r1, r1, ip
   176bc:	mov	ip, r6
   176c0:	pop	{r4, r5, r6, lr}
   176c4:	bx	ip
   176c8:	push	{r4, r5, r6, lr}
   176cc:	ldm	r0, {ip, lr}
   176d0:	cmp	ip, lr
   176d4:	movcs	r3, #0
   176d8:	str	ip, [r0, #8]
   176dc:	strcs	r3, [r0, #12]
   176e0:	bcs	1772c <_start@@Base+0x437c>
   176e4:	ldrb	r3, [ip]
   176e8:	cmp	r3, #37	; 0x25
   176ec:	addne	r3, ip, #1
   176f0:	bne	1770c <_start@@Base+0x435c>
   176f4:	b	17800 <_start@@Base+0x4450>
   176f8:	ldrb	r2, [r3]
   176fc:	add	r1, r3, #1
   17700:	cmp	r2, #37	; 0x25
   17704:	beq	17734 <_start@@Base+0x4384>
   17708:	mov	r3, r1
   1770c:	cmp	lr, r3
   17710:	mov	r4, r3
   17714:	bne	176f8 <_start@@Base+0x4348>
   17718:	sub	ip, r3, ip
   1771c:	str	r3, [r0]
   17720:	cmp	ip, #0
   17724:	str	ip, [r0, #12]
   17728:	bne	177f8 <_start@@Base+0x4448>
   1772c:	mov	r0, #0
   17730:	pop	{r4, r5, r6, pc}
   17734:	ldrb	r2, [r3, #1]
   17738:	cmp	r2, #37	; 0x25
   1773c:	beq	17810 <_start@@Base+0x4460>
   17740:	cmp	ip, r3
   17744:	bne	17718 <_start@@Base+0x4368>
   17748:	sub	r3, r2, #32
   1774c:	cmp	r3, #16
   17750:	add	r1, r4, #1
   17754:	mov	r3, #0
   17758:	bhi	177a8 <_start@@Base+0x43f8>
   1775c:	cmp	r2, #45	; 0x2d
   17760:	orreq	r3, r3, #256	; 0x100
   17764:	beq	17798 <_start@@Base+0x43e8>
   17768:	cmp	r2, #43	; 0x2b
   1776c:	orreq	r3, r3, #512	; 0x200
   17770:	beq	17798 <_start@@Base+0x43e8>
   17774:	cmp	r2, #48	; 0x30
   17778:	orreq	r3, r3, #1024	; 0x400
   1777c:	beq	17798 <_start@@Base+0x43e8>
   17780:	cmp	r2, #32
   17784:	orreq	r3, r3, #2048	; 0x800
   17788:	beq	17798 <_start@@Base+0x43e8>
   1778c:	cmp	r2, #35	; 0x23
   17790:	bne	177a8 <_start@@Base+0x43f8>
   17794:	orr	r3, r3, #4096	; 0x1000
   17798:	ldrb	r2, [r1, #1]!
   1779c:	sub	ip, r2, #32
   177a0:	cmp	ip, #16
   177a4:	bls	1775c <_start@@Base+0x43ac>
   177a8:	sub	r2, r2, #48	; 0x30
   177ac:	cmp	r2, #9
   177b0:	bls	17824 <_start@@Base+0x4474>
   177b4:	ldrb	ip, [r1]
   177b8:	cmp	ip, #46	; 0x2e
   177bc:	beq	1786c <_start@@Base+0x44bc>
   177c0:	sub	r5, ip, #65	; 0x41
   177c4:	cmp	r5, #55	; 0x37
   177c8:	bhi	17850 <_start@@Base+0x44a0>
   177cc:	ldr	r2, [pc, #236]	; 178c0 <_start@@Base+0x4510>
   177d0:	add	r2, r2, r5
   177d4:	ldrb	r2, [r2, #448]	; 0x1c0
   177d8:	cmp	r2, #0
   177dc:	beq	17850 <_start@@Base+0x44a0>
   177e0:	add	r1, r1, #1
   177e4:	tst	r5, #32
   177e8:	str	r1, [r0]
   177ec:	orr	r0, r3, r2
   177f0:	orreq	r0, r0, #8192	; 0x2000
   177f4:	pop	{r4, r5, r6, pc}
   177f8:	mov	r0, #2
   177fc:	pop	{r4, r5, r6, pc}
   17800:	ldrb	r2, [ip, #1]
   17804:	mov	r4, ip
   17808:	cmp	r2, #37	; 0x25
   1780c:	bne	17748 <_start@@Base+0x4398>
   17810:	add	r3, r4, #2
   17814:	add	r4, r4, #1
   17818:	str	r3, [r0]
   1781c:	sub	ip, r4, ip
   17820:	b	17720 <_start@@Base+0x4370>
   17824:	ldrb	ip, [r1, #1]
   17828:	sub	r5, ip, #48	; 0x30
   1782c:	cmp	r5, #9
   17830:	addls	r2, r2, r2, lsl #2
   17834:	addhi	r1, r1, #1
   17838:	addls	r2, ip, r2, lsl #1
   1783c:	subls	r2, r2, #48	; 0x30
   17840:	ldrbls	ip, [r1, #2]
   17844:	orr	r3, r3, r2, lsl #16
   17848:	addls	r1, r1, #2
   1784c:	b	177b8 <_start@@Base+0x4408>
   17850:	cmp	ip, #31
   17854:	addhi	r1, r1, #1
   17858:	sub	r1, r1, r4
   1785c:	str	r1, [r0, #12]
   17860:	str	lr, [r0]
   17864:	mov	r0, #1
   17868:	pop	{r4, r5, r6, pc}
   1786c:	ldrb	ip, [r1, #1]
   17870:	sub	r5, ip, #48	; 0x30
   17874:	cmp	r5, #9
   17878:	mov	r2, ip
   1787c:	addhi	r1, r1, #1
   17880:	movhi	r2, #16777216	; 0x1000000
   17884:	bhi	178b8 <_start@@Base+0x4508>
   17888:	ldrb	ip, [r1, #2]
   1788c:	sub	r6, ip, #48	; 0x30
   17890:	cmp	r6, #9
   17894:	addls	r5, r5, r5, lsl #2
   17898:	subls	r2, ip, #47	; 0x2f
   1789c:	subhi	r2, r2, #47	; 0x2f
   178a0:	addls	r2, r2, r5, lsl #1
   178a4:	ldrbls	ip, [r1, #3]
   178a8:	addhi	r1, r1, #2
   178ac:	lslhi	r2, r2, #24
   178b0:	lslls	r2, r2, #24
   178b4:	addls	r1, r1, #3
   178b8:	orr	r3, r3, r2
   178bc:	b	177c0 <_start@@Base+0x4410>
   178c0:			; <UNDEFINED> instruction: 0x0006ecb8
   178c4:	ldr	r3, [r0, #100]	; 0x64
   178c8:	ands	r3, r3, #65536	; 0x10000
   178cc:	ldrhne	r0, [r0, #130]	; 0x82
   178d0:	moveq	r0, r3
   178d4:	bx	lr
   178d8:	ldr	r3, [r0, #100]	; 0x64
   178dc:	ands	r3, r3, #65536	; 0x10000
   178e0:	ldrhne	r0, [r0, #128]	; 0x80
   178e4:	moveq	r0, r3
   178e8:	bx	lr
   178ec:	ldr	r3, [r0, #100]	; 0x64
   178f0:	ands	r3, r3, #65536	; 0x10000
   178f4:	movne	r3, #2
   178f8:	ldrne	r2, [r0, #128]	; 0x80
   178fc:	ldrhne	r2, [r2, #6]
   17900:	strne	r2, [r0, #120]	; 0x78
   17904:	mov	r0, r3
   17908:	bx	lr
   1790c:	ldr	r3, [r0, #100]	; 0x64
   17910:	ands	r3, r3, #65536	; 0x10000
   17914:	beq	1792c <_start@@Base+0x457c>
   17918:	ldrh	r3, [r0, #130]	; 0x82
   1791c:	cmp	r3, #2
   17920:	movne	r3, #0
   17924:	moveq	r2, #1
   17928:	streq	r2, [r0, #120]	; 0x78
   1792c:	mov	r0, r3
   17930:	bx	lr
   17934:	ldr	r3, [r0, #100]	; 0x64
   17938:	ands	r3, r3, #65536	; 0x10000
   1793c:	beq	17954 <_start@@Base+0x45a4>
   17940:	ldrb	r3, [r0, #132]	; 0x84
   17944:	tst	r3, #64	; 0x40
   17948:	bne	17954 <_start@@Base+0x45a4>
   1794c:	ldrh	r0, [r0, #130]	; 0x82
   17950:	bx	lr
   17954:	mov	r0, #0
   17958:	bx	lr
   1795c:	ldr	r3, [r0, #100]	; 0x64
   17960:	ands	r3, r3, #65536	; 0x10000
   17964:	movne	r3, #2
   17968:	ldrne	r2, [r0, #128]	; 0x80
   1796c:	ldrne	r2, [r2, #12]
   17970:	strne	r2, [r0, #120]	; 0x78
   17974:	mov	r0, r3
   17978:	bx	lr
   1797c:	ldr	r3, [r0, #100]	; 0x64
   17980:	ands	r3, r3, #8388608	; 0x800000
   17984:	beq	17a34 <_start@@Base+0x4684>
   17988:	ldrh	r1, [r0, #146]	; 0x92
   1798c:	tst	r1, #32768	; 0x8000
   17990:	bne	17a34 <_start@@Base+0x4684>
   17994:	ldrh	r3, [r0, #144]	; 0x90
   17998:	ldr	r2, [r0, #16]
   1799c:	push	{lr}		; (str lr, [sp, #-4]!)
   179a0:	lsl	r3, r3, #3
   179a4:	add	ip, r2, r3
   179a8:	ldrb	lr, [ip, #5]
   179ac:	cmp	lr, #41	; 0x29
   179b0:	beq	179bc <_start@@Base+0x460c>
   179b4:	mov	r0, #0
   179b8:	pop	{pc}		; (ldr pc, [sp], #4)
   179bc:	ldrh	ip, [ip, #2]
   179c0:	tst	ip, #32768	; 0x8000
   179c4:	bne	179b4 <_start@@Base+0x4604>
   179c8:	ldr	ip, [r2, ip, lsl #3]
   179cc:	ldr	r1, [r2, r1, lsl #3]
   179d0:	cmn	r1, ip
   179d4:	bne	179b4 <_start@@Base+0x4604>
   179d8:	ldrh	ip, [r0, #120]	; 0x78
   179dc:	ldrh	lr, [r2, r3]
   179e0:	add	r0, r0, #304	; 0x130
   179e4:	ldrh	r3, [r0, #2]
   179e8:	cmp	lr, ip
   179ec:	movcs	r0, lr
   179f0:	movcc	r0, ip
   179f4:	cmp	r3, r0
   179f8:	bhi	17a0c <_start@@Base+0x465c>
   179fc:	b	179b4 <_start@@Base+0x4604>
   17a00:	ldrh	r3, [r1, #6]
   17a04:	cmp	r3, r0
   17a08:	bls	179b4 <_start@@Base+0x4604>
   17a0c:	lsl	r3, r3, #3
   17a10:	add	r1, r2, r3
   17a14:	ldrh	r3, [r2, r3]
   17a18:	cmp	r3, ip
   17a1c:	bne	17a00 <_start@@Base+0x4650>
   17a20:	ldrh	r3, [r1, #2]
   17a24:	cmp	r3, lr
   17a28:	bne	17a00 <_start@@Base+0x4650>
   17a2c:	mov	r0, #4
   17a30:	pop	{pc}		; (ldr pc, [sp], #4)
   17a34:	mov	r0, #0
   17a38:	bx	lr
   17a3c:	ldr	r2, [r0, #196]	; 0xc4
   17a40:	push	{r4, lr}
   17a44:	and	r4, r2, #31
   17a48:	ldr	lr, [r0, #140]	; 0x8c
   17a4c:	lsr	ip, r2, #5
   17a50:	ldr	r2, [r0, #128]	; 0x80
   17a54:	add	ip, lr, ip, lsl #2
   17a58:	ldr	lr, [r0, #244]	; 0xf4
   17a5c:	ldr	r3, [ip, #1568]	; 0x620
   17a60:	cmp	lr, r2
   17a64:	lsl	r1, r1, #28
   17a68:	add	r3, r3, r4, lsl #2
   17a6c:	beq	17a94 <_start@@Base+0x46e4>
   17a70:	sub	r3, r3, r2
   17a74:	orr	ip, r1, #184549376	; 0xb000000
   17a78:	asr	r1, r3, #2
   17a7c:	sub	r1, r1, #1
   17a80:	bic	r1, r1, #-16777216	; 0xff000000
   17a84:	orr	r1, r1, ip
   17a88:	str	r1, [r2, #-4]!
   17a8c:	str	r2, [r0, #128]	; 0x80
   17a90:	pop	{r4, pc}
   17a94:	sub	r3, r3, lr
   17a98:	mov	r2, lr
   17a9c:	asr	r3, r3, #2
   17aa0:	sub	r3, r3, #2
   17aa4:	bic	r3, r3, #-16777216	; 0xff000000
   17aa8:	eor	r1, r1, #436207616	; 0x1a000000
   17aac:	orr	r3, r3, #-352321536	; 0xeb000000
   17ab0:	mov	ip, #1
   17ab4:	str	ip, [r0, #164]	; 0xa4
   17ab8:	str	r3, [lr]
   17abc:	str	r1, [r2, #-4]!
   17ac0:	str	r2, [r0, #128]	; 0x80
   17ac4:	pop	{r4, pc}
   17ac8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17acc:	sub	sp, sp, #24
   17ad0:	ldr	r5, [r0, #16]
   17ad4:	ldr	ip, [sp, #56]	; 0x38
   17ad8:	ldr	r6, [sp, #60]	; 0x3c
   17adc:	cmp	ip, #32768	; 0x8000
   17ae0:	lsl	r8, ip, #3
   17ae4:	add	r7, r5, r8
   17ae8:	ldr	r4, [sp, #64]	; 0x40
   17aec:	bcs	17b2c <_start@@Base+0x477c>
   17af0:	ldrb	r3, [r7, #5]
   17af4:	sub	r3, r3, #28
   17af8:	cmp	r3, #1
   17afc:	addls	lr, r7, #8
   17b00:	bls	17b64 <_start@@Base+0x47b4>
   17b04:	cmp	r4, #8
   17b08:	ldr	r3, [r5, ip, lsl #3]
   17b0c:	beq	17c18 <_start@@Base+0x4868>
   17b10:	cmp	r4, #4
   17b14:	beq	17bc4 <_start@@Base+0x4814>
   17b18:	cmp	r4, #1
   17b1c:	strbeq	r3, [r6]
   17b20:	strhne	r3, [r6]
   17b24:	add	sp, sp, #24
   17b28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b2c:	and	r9, ip, #31
   17b30:	mov	sl, #1
   17b34:	ldrh	lr, [r7, #6]
   17b38:	ands	r9, r3, sl, lsl r9
   17b3c:	bne	17bd0 <_start@@Base+0x4820>
   17b40:	lsrs	ip, lr, #8
   17b44:	bne	17b88 <_start@@Base+0x47d8>
   17b48:	tst	lr, #128	; 0x80
   17b4c:	bne	17c34 <_start@@Base+0x4884>
   17b50:	cmp	lr, #15
   17b54:	addls	lr, lr, #32
   17b58:	subhi	lr, lr, #16
   17b5c:	addls	lr, r1, lr, lsl #2
   17b60:	addhi	lr, r1, lr, lsl #3
   17b64:	cmp	r4, #4
   17b68:	beq	17bc0 <_start@@Base+0x4810>
   17b6c:	cmp	r4, #8
   17b70:	ldrne	r3, [lr]
   17b74:	bne	17b18 <_start@@Base+0x4768>
   17b78:	ldrd	r2, [lr]
   17b7c:	strd	r2, [r6]
   17b80:	add	sp, sp, #24
   17b84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b88:	add	ip, ip, #48	; 0x30
   17b8c:	cmp	r4, #8
   17b90:	add	lr, r1, ip, lsl #2
   17b94:	ldrne	r3, [r1, ip, lsl #2]
   17b98:	bne	17b10 <_start@@Base+0x4760>
   17b9c:	ldrb	r2, [r7, #4]
   17ba0:	ldr	r3, [pc, #176]	; 17c58 <_start@@Base+0x48a8>
   17ba4:	and	r2, r2, #31
   17ba8:	lsr	r3, r3, r2
   17bac:	ands	r3, r3, #1
   17bb0:	ldreq	r2, [r1, ip, lsl #2]
   17bb4:	addeq	lr, sp, #16
   17bb8:	strdeq	r2, [sp, #16]
   17bbc:	b	17b78 <_start@@Base+0x47c8>
   17bc0:	ldr	r3, [lr]
   17bc4:	str	r3, [r6]
   17bc8:	add	sp, sp, #24
   17bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17bd0:	ldr	r9, [r0, #8]
   17bd4:	sub	r9, r9, #-536870911	; 0xe0000001
   17bd8:	add	r9, r5, r9, lsl #3
   17bdc:	ldrb	sl, [r9, #5]
   17be0:	cmp	sl, #20
   17be4:	bne	17b40 <_start@@Base+0x4790>
   17be8:	sub	r9, r9, #8
   17bec:	ldrh	sl, [r9, #8]
   17bf0:	cmp	ip, sl
   17bf4:	bne	17c04 <_start@@Base+0x4854>
   17bf8:	ldrh	sl, [r9, #10]
   17bfc:	cmp	r2, sl
   17c00:	ldrhcs	lr, [r9, #14]
   17c04:	sub	r9, r9, #8
   17c08:	ldrb	sl, [r9, #13]
   17c0c:	cmp	sl, #20
   17c10:	beq	17bec <_start@@Base+0x483c>
   17c14:	b	17b40 <_start@@Base+0x4790>
   17c18:	add	lr, sp, #16
   17c1c:	mov	r2, #0
   17c20:	str	r3, [sp, #16]
   17c24:	str	r2, [sp, #20]
   17c28:	ldrd	r2, [lr]
   17c2c:	strd	r2, [r6]
   17c30:	b	17b80 <_start@@Base+0x47d0>
   17c34:	mov	ip, #4
   17c38:	stmib	sp, {r6, ip}
   17c3c:	ldrh	ip, [r5, r8]
   17c40:	str	ip, [sp]
   17c44:	bl	17ac8 <_start@@Base+0x4718>
   17c48:	vldr	s15, [r6]
   17c4c:	vcvt.f64.s32	d7, s15
   17c50:	vstr	d7, [r6]
   17c54:	b	17b24 <_start@@Base+0x4774>
   17c58:	rsbeq	r4, r0, r0
   17c5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17c60:	ldrb	r1, [r0, #113]	; 0x71
   17c64:	ldr	r3, [r0, #484]	; 0x1e4
   17c68:	ldr	ip, [r0, #552]	; 0x228
   17c6c:	ldrb	r7, [r0, #114]	; 0x72
   17c70:	cmp	ip, #0
   17c74:	sxtb	r2, r1
   17c78:	lsl	r3, r3, #4
   17c7c:	moveq	r6, #0
   17c80:	movne	r6, #37	; 0x25
   17c84:	and	r3, r3, #16
   17c88:	cmp	r2, #0
   17c8c:	and	r2, r2, #3
   17c90:	orr	r3, r3, r2
   17c94:	orr	r3, r6, r3
   17c98:	movge	r6, #0
   17c9c:	movlt	r6, #68	; 0x44
   17ca0:	tst	r1, #12
   17ca4:	orr	r3, r6, r3
   17ca8:	moveq	r6, #0
   17cac:	movne	r6, #4
   17cb0:	orr	r6, r6, r3
   17cb4:	cmp	r7, r6
   17cb8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17cbc:	and	r3, r6, #48	; 0x30
   17cc0:	cmp	r3, #16
   17cc4:	strb	r6, [r0, #114]	; 0x72
   17cc8:	add	r9, r0, #2880	; 0xb40
   17ccc:	ldr	r5, [pc, #456]	; 17e9c <_start@@Base+0x4aec>
   17cd0:	beq	17dbc <_start@@Base+0x4a0c>
   17cd4:	add	r8, r5, #8192	; 0x2000
   17cd8:	ldr	r1, [r0, #3816]	; 0xee8
   17cdc:	ldr	r2, [r0, #3828]	; 0xef4
   17ce0:	ldr	r3, [r0, #3840]	; 0xf00
   17ce4:	add	r8, r8, #28
   17ce8:	eor	sl, r7, r6
   17cec:	tst	sl, #100	; 0x64
   17cf0:	mov	r4, r0
   17cf4:	str	r1, [r0, #3812]	; 0xee4
   17cf8:	str	r2, [r0, #3824]	; 0xef0
   17cfc:	str	r3, [r0, #3836]	; 0xefc
   17d00:	and	r0, r6, #4
   17d04:	beq	17ddc <_start@@Base+0x4a2c>
   17d08:	cmp	r0, #0
   17d0c:	beq	17e68 <_start@@Base+0x4ab8>
   17d10:	tst	r6, #64	; 0x40
   17d14:	beq	17e54 <_start@@Base+0x4aa4>
   17d18:	ldr	r2, [pc, #384]	; 17ea0 <_start@@Base+0x4af0>
   17d1c:	add	r3, r4, #2864	; 0xb30
   17d20:	add	r3, r3, #12
   17d24:	add	r1, r9, #352	; 0x160
   17d28:	str	r2, [r3, #4]!
   17d2c:	cmp	r3, r1
   17d30:	bne	17d28 <_start@@Base+0x4978>
   17d34:	tst	sl, #1
   17d38:	and	r3, r6, #1
   17d3c:	beq	17e1c <_start@@Base+0x4a6c>
   17d40:	cmp	r3, #0
   17d44:	bne	17e30 <_start@@Base+0x4a80>
   17d48:	ldr	r2, [pc, #340]	; 17ea4 <_start@@Base+0x4af4>
   17d4c:	add	r1, r4, #3232	; 0xca0
   17d50:	add	r0, r2, #128	; 0x80
   17d54:	mov	r3, #8192	; 0x2000
   17d58:	b	17d60 <_start@@Base+0x49b0>
   17d5c:	ldrh	r3, [r2, #2]!
   17d60:	add	r3, r5, r3
   17d64:	cmp	r0, r2
   17d68:	str	r3, [r1, #4]!
   17d6c:	bne	17d5c <_start@@Base+0x49ac>
   17d70:	ldr	r3, [pc, #304]	; 17ea8 <_start@@Base+0x4af8>
   17d74:	tst	r6, #16
   17d78:	str	r8, [r4, #3236]	; 0xca4
   17d7c:	str	r3, [r4, #3248]	; 0xcb0
   17d80:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d84:	tst	r7, #16
   17d88:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d8c:	ldr	r2, [r4, #1916]	; 0x77c
   17d90:	add	r3, r4, #2736	; 0xab0
   17d94:	add	r4, r4, #2864	; 0xb30
   17d98:	lsl	r2, r2, #1
   17d9c:	sub	r2, r2, #1
   17da0:	add	r3, r3, #14
   17da4:	uxth	r2, r2
   17da8:	add	r4, r4, #14
   17dac:	strh	r2, [r3, #2]!
   17db0:	cmp	r3, r4
   17db4:	bne	17dac <_start@@Base+0x49fc>
   17db8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17dbc:	add	r1, r5, #7616	; 0x1dc0
   17dc0:	add	r2, r5, #7936	; 0x1f00
   17dc4:	add	r3, r5, #8064	; 0x1f80
   17dc8:	add	r1, r1, #36	; 0x24
   17dcc:	add	r2, r2, #28
   17dd0:	add	r3, r3, #12
   17dd4:	add	r8, r5, #8192	; 0x2000
   17dd8:	b	17ce8 <_start@@Base+0x4938>
   17ddc:	cmp	r0, #0
   17de0:	bne	17d34 <_start@@Base+0x4984>
   17de4:	tst	r6, #2
   17de8:	str	r1, [r4, #3196]	; 0xc7c
   17dec:	str	r2, [r4, #3208]	; 0xc88
   17df0:	str	r3, [r4, #3220]	; 0xc94
   17df4:	bne	17e84 <_start@@Base+0x4ad4>
   17df8:	ldr	r2, [r4, #3788]	; 0xecc
   17dfc:	ldr	r3, [r4, #3792]	; 0xed0
   17e00:	str	r2, [r4, #3172]	; 0xc64
   17e04:	str	r3, [r4, #3176]	; 0xc68
   17e08:	ldr	r2, [r4, #3796]	; 0xed4
   17e0c:	ldr	r3, [r4, #3800]	; 0xed8
   17e10:	str	r2, [r4, #3180]	; 0xc6c
   17e14:	str	r3, [r4, #3184]	; 0xc70
   17e18:	b	17d34 <_start@@Base+0x4984>
   17e1c:	cmp	r3, #0
   17e20:	beq	17d70 <_start@@Base+0x49c0>
   17e24:	tst	r6, #16
   17e28:	bne	17d84 <_start@@Base+0x49d4>
   17e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17e30:	ldr	r2, [pc, #116]	; 17eac <_start@@Base+0x4afc>
   17e34:	add	r9, r9, #612	; 0x264
   17e38:	add	r3, r4, #3232	; 0xca0
   17e3c:	str	r2, [r3, #4]!
   17e40:	cmp	r9, r3
   17e44:	bne	17e3c <_start@@Base+0x4a8c>
   17e48:	tst	r6, #16
   17e4c:	bne	17d84 <_start@@Base+0x49d4>
   17e50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17e54:	ldr	r3, [pc, #84]	; 17eb0 <_start@@Base+0x4b00>
   17e58:	tst	r6, #32
   17e5c:	ldr	r2, [pc, #80]	; 17eb4 <_start@@Base+0x4b04>
   17e60:	movne	r2, r3
   17e64:	b	17d1c <_start@@Base+0x496c>
   17e68:	add	r1, r4, #3488	; 0xda0
   17e6c:	add	r1, r1, #8
   17e70:	mov	r2, #356	; 0x164
   17e74:	mov	r0, r9
   17e78:	bl	12cb8 <memcpy@plt>
   17e7c:	tst	r6, #2
   17e80:	beq	17d34 <_start@@Base+0x4984>
   17e84:	ldr	r3, [pc, #44]	; 17eb8 <_start@@Base+0x4b08>
   17e88:	str	r3, [r4, #3172]	; 0xc64
   17e8c:	str	r3, [r4, #3176]	; 0xc68
   17e90:	str	r3, [r4, #3180]	; 0xc6c
   17e94:	str	r3, [r4, #3184]	; 0xc70
   17e98:	b	17d34 <_start@@Base+0x4984>
   17e9c:	andeq	r9, r6, r0, lsl #17
   17ea0:	andeq	sp, r6, r0, lsr #8
   17ea4:	andeq	lr, r6, r2, ror #30
   17ea8:	andeq	fp, r6, r4, lsl r9
   17eac:	andeq	sp, r6, r8, asr #6
   17eb0:	andeq	sp, r6, ip, ror #4
   17eb4:	andeq	sp, r6, ip, lsr #5
   17eb8:	muleq	r6, r4, r2
   17ebc:	push	{r4, r5, r6, r7, r8, lr}
   17ec0:	mov	r5, r2
   17ec4:	ldrb	r2, [r1, #16]
   17ec8:	mov	r6, r0
   17ecc:	cmp	r2, #61	; 0x3d
   17ed0:	beq	17fe0 <_start@@Base+0x4c30>
   17ed4:	cmp	r2, #64	; 0x40
   17ed8:	beq	17f90 <_start@@Base+0x4be0>
   17edc:	add	lr, r1, #16
   17ee0:	mvn	r0, #15
   17ee4:	mov	r3, lr
   17ee8:	sub	r0, r0, r1
   17eec:	add	ip, r1, #63	; 0x3f
   17ef0:	b	17f00 <_start@@Base+0x4b50>
   17ef4:	cmp	r3, ip
   17ef8:	beq	17ff8 <_start@@Base+0x4c48>
   17efc:	ldrb	r2, [r3, #1]!
   17f00:	cmp	r2, #31
   17f04:	add	r4, r0, r3
   17f08:	bhi	17ef4 <_start@@Base+0x4b44>
   17f0c:	add	r3, lr, r4
   17f10:	ldr	r1, [pc, #236]	; 18004 <_start@@Base+0x4c54>
   17f14:	ldr	r2, [pc, #236]	; 18008 <_start@@Base+0x4c58>
   17f18:	cmn	r5, #1
   17f1c:	moveq	r2, r1
   17f20:	add	r7, r6, #9
   17f24:	ldm	r2!, {r0, r1}
   17f28:	ldrh	r2, [r2]
   17f2c:	str	r0, [r6]
   17f30:	str	r1, [r6, #4]
   17f34:	strh	r2, [r6, #8]
   17f38:	ldrb	r3, [r3]
   17f3c:	cmp	r3, #0
   17f40:	beq	17fcc <_start@@Base+0x4c1c>
   17f44:	cmp	r4, #45	; 0x2d
   17f48:	movcc	r6, r4
   17f4c:	movcs	r6, #45	; 0x2d
   17f50:	mov	r1, lr
   17f54:	mov	r2, r6
   17f58:	mov	r0, r7
   17f5c:	bl	12eec <strncpy@plt>
   17f60:	ldr	r3, [pc, #164]	; 1800c <_start@@Base+0x4c5c>
   17f64:	add	r4, r7, r6
   17f68:	add	r4, r4, #3
   17f6c:	ldr	r0, [r3]
   17f70:	str	r0, [r7, r6]
   17f74:	ldr	r3, [pc, #148]	; 18010 <_start@@Base+0x4c60>
   17f78:	cmn	r5, #1
   17f7c:	ldr	r1, [pc, #144]	; 18014 <_start@@Base+0x4c64>
   17f80:	mov	r0, r4
   17f84:	moveq	r1, r3
   17f88:	pop	{r4, r5, r6, r7, r8, lr}
   17f8c:	b	12d78 <strcpy@plt>
   17f90:	ldr	r3, [r1, #12]
   17f94:	add	r1, r1, #17
   17f98:	sub	r2, r3, #1
   17f9c:	cmp	r2, #59	; 0x3b
   17fa0:	bls	17fc0 <_start@@Base+0x4c10>
   17fa4:	sub	r3, r3, #57	; 0x39
   17fa8:	add	r1, r1, r3
   17fac:	add	r6, r0, #3
   17fb0:	mov	r2, #46	; 0x2e
   17fb4:	strb	r2, [r0]
   17fb8:	strb	r2, [r0, #1]
   17fbc:	strb	r2, [r0, #2]
   17fc0:	mov	r0, r6
   17fc4:	pop	{r4, r5, r6, r7, r8, lr}
   17fc8:	b	12d78 <strcpy@plt>
   17fcc:	mov	r1, lr
   17fd0:	mov	r0, r7
   17fd4:	bl	12d78 <strcpy@plt>
   17fd8:	add	r4, r7, r4
   17fdc:	b	17f74 <_start@@Base+0x4bc4>
   17fe0:	add	r1, r1, #17
   17fe4:	mov	r2, #60	; 0x3c
   17fe8:	bl	12eec <strncpy@plt>
   17fec:	mov	r3, #0
   17ff0:	strb	r3, [r6, #59]	; 0x3b
   17ff4:	pop	{r4, r5, r6, r7, r8, pc}
   17ff8:	add	r3, r1, #64	; 0x40
   17ffc:	mov	r4, #48	; 0x30
   18000:	b	17f10 <_start@@Base+0x4b60>
   18004:	andeq	r2, r7, ip, asr #23
   18008:	ldrdeq	r2, [r7], -r8
   1800c:	andeq	r2, r7, ip, ror #23
   18010:	andeq	r2, r7, r4, ror #23
   18014:	andeq	r2, r7, r8, ror #23
   18018:	ldr	ip, [pc, #260]	; 18124 <_start@@Base+0x4d74>
   1801c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18020:	mov	r4, r3
   18024:	orr	r3, r0, r1
   18028:	cmp	r3, #0
   1802c:	cmpne	r4, ip
   18030:	mov	r5, r2
   18034:	ldr	fp, [sp, #40]	; 0x28
   18038:	blt	18064 <_start@@Base+0x4cb4>
   1803c:	bl	6e238 <luaL_openlibs@@Base+0x4a78>
   18040:	cmp	fp, #0
   18044:	vmov	d0, r0, r1
   18048:	vnegne.f64	d0, d0
   1804c:	cmp	r4, #0
   18050:	beq	1805c <_start@@Base+0x4cac>
   18054:	mov	r0, r4
   18058:	bl	12ff4 <ldexp@plt>
   1805c:	vstr	d0, [r5]
   18060:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18064:	mov	r3, #0
   18068:	mov	r2, r1
   1806c:	orrs	ip, r2, r3
   18070:	clzne	r3, r1
   18074:	eorne	r3, r3, #31
   18078:	clzeq	r3, r0
   1807c:	addne	r3, r3, #32
   18080:	eoreq	r3, r3, #31
   18084:	add	r3, r3, r4
   18088:	add	r3, r3, #1072	; 0x430
   1808c:	add	r3, r3, #3
   18090:	cmp	r3, #52	; 0x34
   18094:	bhi	1803c <_start@@Base+0x4c8c>
   18098:	ldr	ip, [pc, #136]	; 18128 <_start@@Base+0x4d78>
   1809c:	mov	r3, #1
   180a0:	sub	ip, ip, r4
   180a4:	sub	r8, ip, #32
   180a8:	rsb	sl, ip, #32
   180ac:	lsl	r2, r3, r8
   180b0:	orr	r2, r2, r3, lsr sl
   180b4:	lsl	r3, r3, ip
   180b8:	mov	r9, #2
   180bc:	mov	r7, r2
   180c0:	mov	r6, r3
   180c4:	and	r6, r6, r0
   180c8:	lsl	r3, r9, r8
   180cc:	and	r7, r7, r1
   180d0:	orrs	r6, r6, r7
   180d4:	orr	r3, r3, r9, lsr sl
   180d8:	lsl	r2, r9, ip
   180dc:	beq	18110 <_start@@Base+0x4d60>
   180e0:	mov	r9, #3
   180e4:	lsl	r7, r9, r8
   180e8:	lsl	r6, r9, ip
   180ec:	orr	r7, r7, r9, lsr sl
   180f0:	subs	r8, r6, #1
   180f4:	sbc	r9, r7, #0
   180f8:	and	r6, r8, r0
   180fc:	and	r7, r9, r1
   18100:	orrs	ip, r6, r7
   18104:	beq	18110 <_start@@Base+0x4d60>
   18108:	adds	r0, r0, r2
   1810c:	adc	r1, r1, r3
   18110:	rsbs	r2, r2, #0
   18114:	rsc	r3, r3, #0
   18118:	and	r0, r0, r2
   1811c:	and	r1, r1, r3
   18120:	b	1803c <_start@@Base+0x4c8c>
   18124:			; <UNDEFINED> instruction: 0xfffffbce
   18128:			; <UNDEFINED> instruction: 0xfffffbcd
   1812c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18130:	sub	sp, sp, #532	; 0x214
   18134:	mov	sl, r1
   18138:	ldr	ip, [sp, #576]	; 0x240
   1813c:	mov	r4, r2
   18140:	cmp	ip, #0
   18144:	mov	r8, r3
   18148:	ldr	r1, [sp, #568]	; 0x238
   1814c:	beq	18500 <_start@@Base+0x5150>
   18150:	cmp	ip, #800	; 0x320
   18154:	bls	18524 <_start@@Base+0x5174>
   18158:	sub	r1, r1, #800	; 0x320
   1815c:	add	r1, r1, ip
   18160:	tst	r1, #1
   18164:	beq	186ac <_start@@Base+0x52fc>
   18168:	ldr	r6, [pc, #2160]	; 189e0 <_start@@Base+0x5630>
   1816c:	mov	r2, r0
   18170:	add	r9, sp, #16
   18174:	ldrb	r3, [r2], #1
   18178:	add	lr, r9, #1
   1817c:	cmp	r3, #46	; 0x2e
   18180:	andne	r3, r3, #15
   18184:	ldrbeq	r3, [r0, #1]
   18188:	movne	r0, r2
   1818c:	addeq	r0, r0, #2
   18190:	andeq	r3, r3, #15
   18194:	cmp	r6, #1
   18198:	strb	r3, [sp, #16]
   1819c:	bls	1820c <_start@@Base+0x4e5c>
   181a0:	sub	r5, r6, #2
   181a4:	add	r5, lr, r5, lsr #1
   181a8:	add	r5, r5, #1
   181ac:	ldrb	r7, [r0]
   181b0:	mov	r2, r0
   181b4:	and	r3, r7, #15
   181b8:	cmp	r7, #46	; 0x2e
   181bc:	add	r7, r3, r3, lsl #2
   181c0:	ldrb	r3, [r2, #1]!
   181c4:	moveq	fp, r0
   181c8:	lslne	r7, r7, #1
   181cc:	andeq	r7, r3, #15
   181d0:	ldrbeq	r3, [fp, #2]!
   181d4:	addeq	r7, r7, r7, lsl #2
   181d8:	moveq	r0, r2
   181dc:	lsleq	r7, r7, #1
   181e0:	moveq	r2, fp
   181e4:	cmp	r3, #46	; 0x2e
   181e8:	addeq	r2, r0, #2
   181ec:	ldrbeq	r3, [r0, #2]
   181f0:	add	r0, r2, #1
   181f4:	and	r3, r3, #15
   181f8:	add	r3, r3, r7
   181fc:	strb	r3, [lr], #1
   18200:	cmp	lr, r5
   18204:	bne	181ac <_start@@Base+0x4dfc>
   18208:	and	r6, r6, #1
   1820c:	cmp	r6, #0
   18210:	bne	18548 <_start@@Base+0x5198>
   18214:	cmp	ip, #800	; 0x320
   18218:	bhi	18590 <_start@@Base+0x51e0>
   1821c:	cmp	r1, #0
   18220:	movle	r3, #0
   18224:	movgt	r3, #1
   18228:	cmp	ip, #18
   1822c:	movhi	r3, #0
   18230:	cmp	r3, #0
   18234:	movne	r2, #0
   18238:	beq	18264 <_start@@Base+0x4eb4>
   1823c:	sub	r1, r1, #2
   18240:	cmp	r1, #0
   18244:	add	ip, ip, #2
   18248:	movle	r3, #0
   1824c:	movgt	r3, #1
   18250:	cmp	ip, #18
   18254:	movhi	r3, #0
   18258:	cmp	r3, #0
   1825c:	strb	r2, [lr], #1
   18260:	bne	1823c <_start@@Base+0x4e8c>
   18264:	cmp	ip, #20
   18268:	cmpls	r1, #0
   1826c:	beq	188dc <_start@@Base+0x552c>
   18270:	cmp	r4, #3
   18274:	beq	185c8 <_start@@Base+0x5218>
   18278:	bhi	1863c <_start@@Base+0x528c>
   1827c:	sub	r3, lr, r9
   18280:	add	r8, r3, r1, asr #1
   18284:	cmp	r8, #155	; 0x9b
   18288:	bgt	185e4 <_start@@Base+0x5234>
   1828c:	cmn	r8, #163	; 0xa3
   18290:	blt	186bc <_start@@Base+0x530c>
   18294:	cmp	r8, #8
   18298:	bgt	187c4 <_start@@Base+0x5414>
   1829c:	ldr	r2, [pc, #1856]	; 189e4 <_start@@Base+0x5634>
   182a0:	and	r1, r3, r2
   182a4:	cmp	r1, r8
   182a8:	movgt	lr, #0
   182ac:	movgt	r7, r2
   182b0:	movgt	r5, lr
   182b4:	ble	187b4 <_start@@Base+0x5404>
   182b8:	sub	ip, r3, #1
   182bc:	and	ip, ip, r7
   182c0:	add	r2, sp, #528	; 0x210
   182c4:	add	r6, r2, ip
   182c8:	cmp	ip, r5
   182cc:	ldrb	r2, [r6, #-512]	; 0xfffffe00
   182d0:	sub	lr, lr, #6
   182d4:	lsl	r2, r2, #6
   182d8:	lsr	r1, r2, #2
   182dc:	add	r0, r1, r1, lsl #2
   182e0:	add	r0, r1, r0, lsl #3
   182e4:	rsb	r0, r1, r0, lsl #5
   182e8:	rsb	r1, r1, r0, lsl #2
   182ec:	lsr	r1, r1, #17
   182f0:	add	r0, r1, r1, lsl #2
   182f4:	add	r0, r0, r0, lsl #2
   182f8:	sub	r2, r2, r0, lsl #2
   182fc:	strb	r2, [r6, #-512]	; 0xfffffe00
   18300:	beq	18364 <_start@@Base+0x4fb4>
   18304:	sub	r0, r3, #1
   18308:	cmp	r2, #0
   1830c:	sub	r6, ip, #1
   18310:	and	r0, r0, r7
   18314:	bne	18320 <_start@@Base+0x4f70>
   18318:	cmp	r0, ip
   1831c:	moveq	r3, ip
   18320:	and	ip, r6, r7
   18324:	add	r2, sp, #528	; 0x210
   18328:	add	r6, r2, ip
   1832c:	cmp	ip, r5
   18330:	ldrb	r2, [r6, #-512]	; 0xfffffe00
   18334:	add	r9, r1, r2, lsl #6
   18338:	lsr	r1, r9, #2
   1833c:	add	r0, r1, r1, lsl #2
   18340:	add	r0, r1, r0, lsl #3
   18344:	rsb	r0, r1, r0, lsl #5
   18348:	rsb	r1, r1, r0, lsl #2
   1834c:	lsr	r1, r1, #17
   18350:	add	r2, r1, r1, lsl #2
   18354:	add	r2, r2, r2, lsl #2
   18358:	sub	r2, r9, r2, lsl #2
   1835c:	strb	r2, [r6, #-512]	; 0xfffffe00
   18360:	bne	18304 <_start@@Base+0x4f54>
   18364:	cmp	r1, #0
   18368:	beq	183d4 <_start@@Base+0x5024>
   1836c:	sub	r2, r3, #1
   18370:	and	r2, r2, r7
   18374:	add	r0, sp, #528	; 0x210
   18378:	add	r0, r0, r2
   1837c:	sub	r5, r5, #1
   18380:	ldrb	r0, [r0, #-512]	; 0xfffffe00
   18384:	and	r5, r5, r7
   18388:	cmp	r0, #0
   1838c:	moveq	r3, r2
   18390:	beq	183bc <_start@@Base+0x500c>
   18394:	cmp	r5, r3
   18398:	bne	183bc <_start@@Base+0x500c>
   1839c:	sub	ip, r2, #1
   183a0:	add	r3, sp, #528	; 0x210
   183a4:	and	ip, ip, r7
   183a8:	add	ip, r3, ip
   183ac:	mov	r3, r2
   183b0:	ldrb	r2, [ip, #-512]	; 0xfffffe00
   183b4:	orr	r0, r0, r2
   183b8:	strb	r0, [ip, #-512]	; 0xfffffe00
   183bc:	add	r2, sp, #528	; 0x210
   183c0:	add	r8, r8, #1
   183c4:	add	r0, r2, r5
   183c8:	cmp	r8, #9
   183cc:	strb	r1, [r0, #-512]	; 0xfffffe00
   183d0:	beq	1879c <_start@@Base+0x53ec>
   183d4:	sub	r2, r3, r5
   183d8:	and	r2, r2, r7
   183dc:	cmp	r2, r8
   183e0:	bgt	182b8 <_start@@Base+0x4f08>
   183e4:	add	r2, r5, #1
   183e8:	add	r1, sp, #528	; 0x210
   183ec:	and	r2, r2, r7
   183f0:	add	r0, r1, r5
   183f4:	sub	ip, r8, #1
   183f8:	ldrb	r0, [r0, #-512]	; 0xfffffe00
   183fc:	mov	r1, #0
   18400:	cmp	ip, #0
   18404:	strd	r0, [sp, #8]
   18408:	ble	18748 <_start@@Base+0x5398>
   1840c:	cmp	r3, r2
   18410:	beq	18750 <_start@@Base+0x53a0>
   18414:	ldr	r5, [pc, #1480]	; 189e4 <_start@@Base+0x5634>
   18418:	b	18424 <_start@@Base+0x5074>
   1841c:	cmp	r2, r3
   18420:	beq	18750 <_start@@Base+0x53a0>
   18424:	ldrd	r0, [sp, #8]
   18428:	adds	r6, r0, r0
   1842c:	adc	r7, r1, r1
   18430:	adds	r0, r0, r6
   18434:	adc	r1, r1, r7
   18438:	lsl	r8, r0, #5
   1843c:	lsl	r9, r1, #5
   18440:	adds	r6, r0, r8
   18444:	orr	r9, r9, r0, lsr #27
   18448:	adc	r7, r1, r9
   1844c:	add	r1, sp, #528	; 0x210
   18450:	add	r8, r1, r2
   18454:	ldrd	r0, [sp, #8]
   18458:	add	r2, r2, #1
   1845c:	and	r2, r2, r5
   18460:	adds	r0, r0, r6
   18464:	mov	r6, r0
   18468:	ldrb	r0, [r8, #-512]	; 0xfffffe00
   1846c:	adc	r1, r1, r7
   18470:	mov	r7, r1
   18474:	adds	r6, r6, r0
   18478:	mov	r1, #0
   1847c:	adc	r7, r7, r1
   18480:	subs	ip, ip, #1
   18484:	strd	r6, [sp, #8]
   18488:	bne	1841c <_start@@Base+0x506c>
   1848c:	cmp	r2, r3
   18490:	beq	184e0 <_start@@Base+0x5130>
   18494:	ldrd	r0, [sp, #8]
   18498:	ldr	r5, [pc, #1348]	; 189e4 <_start@@Base+0x5634>
   1849c:	sub	lr, lr, #1
   184a0:	adds	r6, r0, r0
   184a4:	adc	r7, r1, r1
   184a8:	strd	r6, [sp, #8]
   184ac:	b	184b8 <_start@@Base+0x5108>
   184b0:	cmp	r2, r3
   184b4:	beq	184e0 <_start@@Base+0x5130>
   184b8:	add	r1, sp, #528	; 0x210
   184bc:	add	ip, r1, r2
   184c0:	add	r2, r2, #1
   184c4:	ldrb	ip, [ip, #-512]	; 0xfffffe00
   184c8:	and	r2, r2, r5
   184cc:	cmp	ip, #0
   184d0:	beq	184b0 <_start@@Base+0x5100>
   184d4:	orr	r2, r6, #1
   184d8:	mov	r3, r7
   184dc:	strd	r2, [sp, #8]
   184e0:	ldr	r3, [sp, #572]	; 0x23c
   184e4:	ldrd	r0, [sp, #8]
   184e8:	str	r3, [sp]
   184ec:	mov	r2, sl
   184f0:	mov	r3, lr
   184f4:	bl	18018 <_start@@Base+0x4c68>
   184f8:	mov	r0, r4
   184fc:	b	18640 <_start@@Base+0x5290>
   18500:	sub	r3, r2, #3
   18504:	strb	ip, [sp, #16]
   18508:	cmp	r3, #3
   1850c:	ldrls	pc, [pc, r3, lsl #2]
   18510:	b	188d4 <_start@@Base+0x5524>
   18514:	andeq	r8, r1, r8, lsl #12
   18518:	andeq	r8, r1, r8, asr #12
   1851c:	andeq	r8, r1, r4, ror r6
   18520:	andeq	r8, r1, r4, ror r6
   18524:	eor	r3, ip, r1
   18528:	tst	r3, #1
   1852c:	subne	r6, ip, #1
   18530:	bne	1816c <_start@@Base+0x4dbc>
   18534:	add	r9, sp, #16
   18538:	cmp	ip, #1
   1853c:	mov	lr, r9
   18540:	movne	r6, ip
   18544:	bne	181a0 <_start@@Base+0x4df0>
   18548:	mov	r2, r0
   1854c:	sub	r1, r1, #1
   18550:	ldrb	r3, [r2], #1
   18554:	add	ip, ip, #1
   18558:	add	lr, lr, #1
   1855c:	cmp	r3, #46	; 0x2e
   18560:	andne	r3, r3, #15
   18564:	ldrbeq	r3, [r0, #1]
   18568:	movne	r0, r2
   1856c:	addeq	r0, r0, #2
   18570:	andeq	r3, r3, #15
   18574:	add	r3, r3, r3, lsl #2
   18578:	lsl	r3, r3, #1
   1857c:	strb	r3, [lr, #-1]
   18580:	b	18214 <_start@@Base+0x4e64>
   18584:	cmp	ip, #800	; 0x320
   18588:	add	r0, r0, #1
   1858c:	beq	18270 <_start@@Base+0x4ec0>
   18590:	ldrb	r3, [r0]
   18594:	sub	ip, ip, #1
   18598:	cmp	r3, #46	; 0x2e
   1859c:	ldrbeq	r3, [r0, #1]
   185a0:	addeq	r0, r0, #1
   185a4:	subs	r3, r3, #48	; 0x30
   185a8:	movne	r3, #1
   185ac:	cmp	r3, #0
   185b0:	beq	18584 <_start@@Base+0x51d4>
   185b4:	ldrb	r3, [lr, #-1]
   185b8:	cmp	r4, #3
   185bc:	orr	r3, r3, #1
   185c0:	strb	r3, [lr, #-1]
   185c4:	bne	18278 <_start@@Base+0x4ec8>
   185c8:	tst	r8, #16
   185cc:	bne	1863c <_start@@Base+0x528c>
   185d0:	sub	r3, lr, r9
   185d4:	add	r8, r3, r1, asr #1
   185d8:	cmp	r8, #155	; 0x9b
   185dc:	mov	r4, #1
   185e0:	ble	1828c <_start@@Base+0x4edc>
   185e4:	ldr	r3, [sp, #572]	; 0x23c
   185e8:	mov	r2, #0
   185ec:	cmp	r3, #0
   185f0:	mov	r0, r4
   185f4:	ldrne	r3, [pc, #1004]	; 189e8 <_start@@Base+0x5638>
   185f8:	ldreq	r3, [pc, #1004]	; 189ec <_start@@Base+0x563c>
   185fc:	strd	r2, [sl]
   18600:	add	sp, sp, #532	; 0x214
   18604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18608:	add	r9, sp, #16
   1860c:	mov	r2, #0
   18610:	mov	r3, #0
   18614:	mov	lr, r9
   18618:	strd	r2, [sp, #8]
   1861c:	tst	r8, #2
   18620:	beq	186dc <_start@@Base+0x532c>
   18624:	ands	r8, r8, #16
   18628:	beq	18714 <_start@@Base+0x5364>
   1862c:	ldr	r2, [sp, #12]
   18630:	mov	r3, #0
   18634:	orrs	r3, r2, r3
   18638:	beq	18654 <_start@@Base+0x52a4>
   1863c:	mov	r0, #0
   18640:	add	sp, sp, #532	; 0x214
   18644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18648:	mov	r2, #0
   1864c:	mov	r3, #0
   18650:	strd	r2, [sp, #8]
   18654:	ldrd	r0, [sp, #8]
   18658:	ldr	r3, [sp, #572]	; 0x23c
   1865c:	cmp	r3, #0
   18660:	mov	r3, r0
   18664:	rsbne	r3, r0, #0
   18668:	str	r3, [sl]
   1866c:	mov	r0, #4
   18670:	b	18640 <_start@@Base+0x5290>
   18674:	mov	r2, #0
   18678:	mov	r3, #0
   1867c:	strd	r2, [sp, #8]
   18680:	ldr	r3, [sp, #572]	; 0x23c
   18684:	cmp	r3, #0
   18688:	beq	1869c <_start@@Base+0x52ec>
   1868c:	ldrd	r2, [sp, #8]
   18690:	rsbs	r2, r2, #0
   18694:	rsc	r3, r3, #0
   18698:	strd	r2, [sp, #8]
   1869c:	ldrd	r2, [sp, #8]
   186a0:	mov	r0, r4
   186a4:	strd	r2, [sl]
   186a8:	b	18640 <_start@@Base+0x5290>
   186ac:	add	r9, sp, #16
   186b0:	mov	lr, r9
   186b4:	mov	r6, #800	; 0x320
   186b8:	b	181a0 <_start@@Base+0x4df0>
   186bc:	vldr	d7, [pc, #780]	; 189d0 <_start@@Base+0x5620>
   186c0:	vldr	d6, [pc, #784]	; 189d8 <_start@@Base+0x5628>
   186c4:	ldr	r3, [sp, #572]	; 0x23c
   186c8:	mov	r0, r4
   186cc:	cmp	r3, #0
   186d0:	vmovne.f64	d7, d6
   186d4:	vstr	d7, [sl]
   186d8:	b	18640 <_start@@Base+0x5290>
   186dc:	ldr	r3, [sp, #572]	; 0x23c
   186e0:	ldrd	r0, [sp, #8]
   186e4:	add	r2, r3, #-2147483648	; 0x80000000
   186e8:	mov	r3, #0
   186ec:	cmp	r3, r1
   186f0:	cmpeq	r2, r0
   186f4:	bls	18624 <_start@@Base+0x5274>
   186f8:	ldr	r3, [sp, #572]	; 0x23c
   186fc:	cmp	r3, #0
   18700:	mov	r3, r0
   18704:	rsbne	r3, r0, #0
   18708:	str	r3, [sl]
   1870c:	mov	r0, #3
   18710:	b	18640 <_start@@Base+0x5290>
   18714:	ldrd	r0, [sp, #8]
   18718:	cmp	r0, #0
   1871c:	sbcs	r3, r1, #0
   18720:	blt	187ac <_start@@Base+0x53fc>
   18724:	bl	6e238 <luaL_openlibs@@Base+0x4a78>
   18728:	mov	r4, #1
   1872c:	vmov	d7, r0, r1
   18730:	ldr	r3, [sp, #572]	; 0x23c
   18734:	mov	r0, r4
   18738:	cmp	r3, #0
   1873c:	vnegne.f64	d7, d7
   18740:	vstr	d7, [sl]
   18744:	b	18640 <_start@@Base+0x5290>
   18748:	cmp	r3, r2
   1874c:	bne	18494 <_start@@Base+0x50e4>
   18750:	subs	ip, ip, #1
   18754:	bmi	184e0 <_start@@Base+0x5130>
   18758:	ldrd	r8, [sp, #8]
   1875c:	sub	ip, ip, #1
   18760:	adds	r2, r8, r8
   18764:	adc	r3, r9, r9
   18768:	adds	r0, r8, r2
   1876c:	adc	r1, r9, r3
   18770:	lsl	r6, r0, #5
   18774:	lsl	r7, r1, #5
   18778:	adds	r2, r0, r6
   1877c:	orr	r7, r7, r0, lsr #27
   18780:	adc	r3, r1, r7
   18784:	adds	r8, r8, r2
   18788:	adc	r9, r9, r3
   1878c:	cmn	ip, #1
   18790:	strd	r8, [sp, #8]
   18794:	bne	18758 <_start@@Base+0x53a8>
   18798:	b	184e0 <_start@@Base+0x5130>
   1879c:	add	r2, r5, #1
   187a0:	lsl	r2, r2, #23
   187a4:	lsr	r2, r2, #23
   187a8:	b	183f4 <_start@@Base+0x5044>
   187ac:	mov	r1, r8
   187b0:	b	185d0 <_start@@Base+0x5220>
   187b4:	mov	r2, #1
   187b8:	mov	lr, #0
   187bc:	add	r0, sp, #528	; 0x210
   187c0:	b	183f4 <_start@@Base+0x5044>
   187c4:	cmp	r8, #9
   187c8:	movgt	lr, #0
   187cc:	ldrgt	r6, [pc, #528]	; 189e4 <_start@@Base+0x5634>
   187d0:	movgt	r5, lr
   187d4:	ble	187b4 <_start@@Base+0x5404>
   187d8:	add	lr, lr, #6
   187dc:	mov	r0, r5
   187e0:	mov	r1, #0
   187e4:	b	187f0 <_start@@Base+0x5440>
   187e8:	cmp	r0, r3
   187ec:	beq	18858 <_start@@Base+0x54a8>
   187f0:	add	r2, sp, #528	; 0x210
   187f4:	add	ip, r2, r0
   187f8:	add	r7, r0, #1
   187fc:	ldrb	r9, [ip, #-512]	; 0xfffffe00
   18800:	add	r2, r5, #1
   18804:	and	r2, r2, r6
   18808:	add	r9, r9, r1
   1880c:	and	r1, r9, #63	; 0x3f
   18810:	lsr	r9, r9, #6
   18814:	add	r1, r1, r1, lsl #2
   18818:	cmp	r5, r0
   1881c:	cmpeq	r9, #0
   18820:	add	r1, r1, r1, lsl #2
   18824:	strb	r9, [ip, #-512]	; 0xfffffe00
   18828:	and	r0, r7, r6
   1882c:	lsl	r1, r1, #2
   18830:	sub	ip, r8, #1
   18834:	bne	187e8 <_start@@Base+0x5438>
   18838:	sub	r9, r8, #2
   1883c:	add	r7, r2, #1
   18840:	cmp	r0, r3
   18844:	mov	r8, ip
   18848:	mov	r5, r2
   1884c:	mov	ip, r9
   18850:	and	r2, r7, r6
   18854:	bne	187f0 <_start@@Base+0x5440>
   18858:	cmp	r1, #0
   1885c:	bne	18890 <_start@@Base+0x54e0>
   18860:	b	188b8 <_start@@Base+0x5508>
   18864:	and	r3, r1, #63	; 0x3f
   18868:	lsr	r9, r1, #6
   1886c:	add	r3, r3, r3, lsl #2
   18870:	add	r7, sp, #528	; 0x210
   18874:	add	r1, r3, r3, lsl #2
   18878:	add	r7, r7, r0
   1887c:	lsls	r1, r1, #2
   18880:	add	r0, r0, #1
   18884:	strb	r9, [r7, #-512]	; 0xfffffe00
   18888:	and	r0, r0, r6
   1888c:	beq	188cc <_start@@Base+0x551c>
   18890:	cmp	r5, r0
   18894:	bne	18864 <_start@@Base+0x54b4>
   18898:	sub	r1, r0, #1
   1889c:	add	r3, sp, #528	; 0x210
   188a0:	and	r1, r1, r6
   188a4:	add	r1, r3, r1
   188a8:	mov	r3, r0
   188ac:	ldrb	r0, [r1, #-512]	; 0xfffffe00
   188b0:	orr	r0, r0, #1
   188b4:	strb	r0, [r1, #-512]	; 0xfffffe00
   188b8:	cmp	r8, #9
   188bc:	bgt	187d8 <_start@@Base+0x5428>
   188c0:	add	r1, sp, #528	; 0x210
   188c4:	add	r0, r1, r5
   188c8:	b	183f8 <_start@@Base+0x5048>
   188cc:	mov	r3, r0
   188d0:	b	188b8 <_start@@Base+0x5508>
   188d4:	vldr	d7, [pc, #244]	; 189d0 <_start@@Base+0x5620>
   188d8:	b	18730 <_start@@Base+0x5380>
   188dc:	ldrb	fp, [sp, #16]
   188e0:	add	r5, r9, #1
   188e4:	mov	r3, #0
   188e8:	cmp	lr, r5
   188ec:	uxtb	r2, fp
   188f0:	strd	r2, [sp, #8]
   188f4:	bls	18948 <_start@@Base+0x5598>
   188f8:	ldrd	r0, [sp, #8]
   188fc:	adds	r2, r0, r0
   18900:	adc	r3, r1, r1
   18904:	adds	r0, r0, r2
   18908:	adc	r1, r1, r3
   1890c:	lsl	r6, r0, #5
   18910:	lsl	r7, r1, #5
   18914:	adds	r2, r0, r6
   18918:	orr	r7, r7, r0, lsr #27
   1891c:	adc	r3, r1, r7
   18920:	ldrd	r0, [sp, #8]
   18924:	adds	r0, r0, r2
   18928:	ldrb	r2, [r5], #1
   1892c:	adc	r1, r1, r3
   18930:	mov	r3, #0
   18934:	adds	r6, r0, r2
   18938:	adc	r7, r1, r3
   1893c:	cmp	r5, lr
   18940:	strd	r6, [sp, #8]
   18944:	bne	188f8 <_start@@Base+0x5548>
   18948:	cmp	ip, #20
   1894c:	beq	18970 <_start@@Base+0x55c0>
   18950:	sub	r3, r4, #3
   18954:	cmp	r3, #3
   18958:	ldrls	pc, [pc, r3, lsl #2]
   1895c:	b	18990 <_start@@Base+0x55e0>
   18960:	andeq	r8, r1, ip, lsl r6
   18964:	andeq	r8, r1, ip, lsr #12
   18968:	andeq	r8, r1, r0, lsl #13
   1896c:	andeq	r8, r1, r0, lsl #13
   18970:	cmp	fp, #18
   18974:	bhi	18988 <_start@@Base+0x55d8>
   18978:	ldrd	r2, [sp, #8]
   1897c:	cmp	r2, #0
   18980:	sbcs	r3, r3, #0
   18984:	blt	189ac <_start@@Base+0x55fc>
   18988:	mov	r1, #0
   1898c:	b	18270 <_start@@Base+0x4ec0>
   18990:	ldrd	r0, [sp, #8]
   18994:	cmp	r0, #0
   18998:	sbcs	r3, r1, #0
   1899c:	blt	18988 <_start@@Base+0x55d8>
   189a0:	bl	6e238 <luaL_openlibs@@Base+0x4a78>
   189a4:	vmov	d7, r0, r1
   189a8:	b	18730 <_start@@Base+0x5380>
   189ac:	sub	r3, r4, #3
   189b0:	cmp	r3, #3
   189b4:	ldrls	pc, [pc, r3, lsl #2]
   189b8:	b	18988 <_start@@Base+0x55d8>
   189bc:	andeq	r8, r1, ip, lsl r6
   189c0:	andeq	r8, r1, ip, lsr r6
   189c4:	andeq	r8, r1, r0, lsl #13
   189c8:	andeq	r8, r1, r0, lsl #13
   189cc:	nop			; (mov r0, r0)
	...
   189dc:	andhi	r0, r0, r0
   189e0:	andeq	r0, r0, pc, lsl r3
   189e4:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   189e8:			; <UNDEFINED> instruction: 0xfff00000	; IMB
   189ec:	svcvc	0x00f00000	; IMB
   189f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189f4:	sub	sp, sp, #44	; 0x2c
   189f8:	ldrb	r9, [r0]
   189fc:	ldr	r8, [pc, #2956]	; 19590 <_start@@Base+0x61e0>
   18a00:	str	r1, [sp, #28]
   18a04:	add	r3, r8, r9
   18a08:	str	r2, [sp, #20]
   18a0c:	ldrb	r3, [r3, #189]	; 0xbd
   18a10:	tst	r3, #8
   18a14:	movne	r3, #0
   18a18:	strne	r3, [sp, #24]
   18a1c:	beq	18a60 <_start@@Base+0x56b0>
   18a20:	ldr	r3, [sp, #20]
   18a24:	ands	r3, r3, #16
   18a28:	str	r3, [sp, #32]
   18a2c:	beq	18b00 <_start@@Base+0x5750>
   18a30:	cmp	r9, #48	; 0x30
   18a34:	beq	18cfc <_start@@Base+0x594c>
   18a38:	bls	19558 <_start@@Base+0x61a8>
   18a3c:	mov	r3, #0
   18a40:	str	r3, [sp, #36]	; 0x24
   18a44:	mov	sl, r3
   18a48:	mov	fp, #10
   18a4c:	mov	r4, #8
   18a50:	b	18b18 <_start@@Base+0x5768>
   18a54:	ldrb	r9, [r0, #1]!
   18a58:	add	r3, r8, r9
   18a5c:	ldrb	r3, [r3, #189]	; 0xbd
   18a60:	tst	r3, #2
   18a64:	bne	18a54 <_start@@Base+0x56a4>
   18a68:	sub	r3, r9, #43	; 0x2b
   18a6c:	tst	r3, #253	; 0xfd
   18a70:	addeq	r0, r0, #1
   18a74:	subeq	r3, r9, #45	; 0x2d
   18a78:	ldrb	r9, [r0]
   18a7c:	clzeq	r3, r3
   18a80:	movne	r3, #0
   18a84:	lsreq	r3, r3, #5
   18a88:	cmp	r9, #64	; 0x40
   18a8c:	str	r3, [sp, #24]
   18a90:	bls	18a20 <_start@@Base+0x5670>
   18a94:	orr	r3, r9, #32
   18a98:	cmp	r3, #105	; 0x69
   18a9c:	beq	19304 <_start@@Base+0x5f54>
   18aa0:	cmp	r3, #110	; 0x6e
   18aa4:	bne	18ab8 <_start@@Base+0x5708>
   18aa8:	ldrb	r3, [r0, #1]
   18aac:	orr	r3, r3, #32
   18ab0:	cmp	r3, #97	; 0x61
   18ab4:	beq	19504 <_start@@Base+0x6154>
   18ab8:	ldr	r5, [pc, #2772]	; 19594 <_start@@Base+0x61e4>
   18abc:	mov	r3, r0
   18ac0:	mov	r4, #0
   18ac4:	add	r2, r8, r9
   18ac8:	ldrb	r2, [r2, #189]	; 0xbd
   18acc:	tst	r2, #2
   18ad0:	beq	18ae8 <_start@@Base+0x5738>
   18ad4:	ldrb	r9, [r3, #1]!
   18ad8:	add	r2, r8, r9
   18adc:	ldrb	r2, [r2, #189]	; 0xbd
   18ae0:	tst	r2, #2
   18ae4:	bne	18ad4 <_start@@Base+0x5724>
   18ae8:	cmp	r9, #0
   18aec:	bne	18b64 <_start@@Base+0x57b4>
   18af0:	ldr	r3, [sp, #28]
   18af4:	strd	r4, [r3]
   18af8:	mov	r4, #1
   18afc:	b	18b68 <_start@@Base+0x57b8>
   18b00:	cmp	r9, #48	; 0x30
   18b04:	bls	18f34 <_start@@Base+0x5b84>
   18b08:	ldr	sl, [sp, #32]
   18b0c:	mov	fp, #10
   18b10:	mov	r4, #8
   18b14:	str	sl, [sp, #36]	; 0x24
   18b18:	mov	ip, #0
   18b1c:	mov	r7, ip
   18b20:	mov	r2, r9
   18b24:	mov	lr, r0
   18b28:	b	18b38 <_start@@Base+0x5788>
   18b2c:	add	ip, r6, r5, lsl #1
   18b30:	add	r7, r7, #1
   18b34:	ldrb	r2, [lr, #1]!
   18b38:	add	r3, r8, r2
   18b3c:	add	r5, ip, ip, lsl #2
   18b40:	ldrb	r1, [r3, #189]	; 0xbd
   18b44:	and	r6, r2, #15
   18b48:	ands	r3, r1, r4
   18b4c:	bne	18b2c <_start@@Base+0x577c>
   18b50:	cmp	r2, #46	; 0x2e
   18b54:	bne	18b74 <_start@@Base+0x57c4>
   18b58:	cmp	sl, #0
   18b5c:	mov	sl, lr
   18b60:	beq	18b34 <_start@@Base+0x5784>
   18b64:	mov	r4, #0
   18b68:	mov	r0, r4
   18b6c:	add	sp, sp, #44	; 0x2c
   18b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b74:	ldr	r4, [sp, #36]	; 0x24
   18b78:	orrs	r4, r7, r4
   18b7c:	beq	18b68 <_start@@Base+0x57b8>
   18b80:	cmp	sl, #0
   18b84:	beq	18d2c <_start@@Base+0x597c>
   18b88:	cmp	r7, #0
   18b8c:	beq	18d78 <_start@@Base+0x59c8>
   18b90:	sub	r4, lr, #1
   18b94:	subs	sl, sl, r4
   18b98:	bpl	18bc8 <_start@@Base+0x5818>
   18b9c:	ldrb	r5, [lr, #-1]
   18ba0:	sub	r4, lr, #2
   18ba4:	cmp	r5, #48	; 0x30
   18ba8:	beq	18bbc <_start@@Base+0x580c>
   18bac:	b	18bc8 <_start@@Base+0x5818>
   18bb0:	ldrb	r5, [r4], #-1
   18bb4:	cmp	r5, #48	; 0x30
   18bb8:	bne	18bc8 <_start@@Base+0x5818>
   18bbc:	adds	sl, sl, #1
   18bc0:	sub	r7, r7, #1
   18bc4:	bne	18bb0 <_start@@Base+0x5800>
   18bc8:	cmp	fp, #16
   18bcc:	beq	19108 <_start@@Base+0x5d58>
   18bd0:	cmp	fp, #9
   18bd4:	bgt	18f74 <_start@@Base+0x5bc4>
   18bd8:	cmp	r2, #0
   18bdc:	beq	19000 <_start@@Base+0x5c50>
   18be0:	orr	r3, r2, #32
   18be4:	uxtb	r3, r3
   18be8:	cmp	r3, #105	; 0x69
   18bec:	movne	r4, #1
   18bf0:	mov	r3, sl
   18bf4:	bne	18c18 <_start@@Base+0x5868>
   18bf8:	ldr	r2, [sp, #20]
   18bfc:	ands	r4, r2, #4
   18c00:	beq	18b68 <_start@@Base+0x57b8>
   18c04:	ldrb	r2, [lr, #1]
   18c08:	mov	r4, #2
   18c0c:	add	lr, lr, #1
   18c10:	add	r1, r8, r2
   18c14:	ldrb	r1, [r1, #189]	; 0xbd
   18c18:	tst	r1, #2
   18c1c:	beq	18c34 <_start@@Base+0x5884>
   18c20:	ldrb	r2, [lr, #1]!
   18c24:	add	r1, r8, r2
   18c28:	ldrb	r1, [r1, #189]	; 0xbd
   18c2c:	tst	r1, #2
   18c30:	bne	18c20 <_start@@Base+0x5870>
   18c34:	cmp	r2, #0
   18c38:	bne	18b64 <_start@@Base+0x57b4>
   18c3c:	cmp	r4, #3
   18c40:	cmpeq	fp, #10
   18c44:	bne	18e8c <_start@@Base+0x5adc>
   18c48:	cmp	r7, #9
   18c4c:	bls	18e54 <_start@@Base+0x5aa4>
   18c50:	cmp	r7, #10
   18c54:	movne	r4, #3
   18c58:	beq	18f88 <_start@@Base+0x5bd8>
   18c5c:	cmp	fp, #2
   18c60:	bne	18fa4 <_start@@Base+0x5bf4>
   18c64:	cmp	r7, #64	; 0x40
   18c68:	movls	r2, #0
   18c6c:	movhi	r2, #1
   18c70:	cmp	r3, #0
   18c74:	moveq	r3, r2
   18c78:	movne	r3, #1
   18c7c:	cmp	r3, #0
   18c80:	bne	18b64 <_start@@Base+0x57b4>
   18c84:	cmp	r7, #0
   18c88:	beq	19394 <_start@@Base+0x5fe4>
   18c8c:	bic	r2, r9, #1
   18c90:	cmp	r2, #48	; 0x30
   18c94:	bne	18b64 <_start@@Base+0x57b4>
   18c98:	sub	r2, r0, #1
   18c9c:	mov	r3, r0
   18ca0:	add	r2, r2, r7
   18ca4:	mov	sl, #0
   18ca8:	mov	fp, #0
   18cac:	b	18cc0 <_start@@Base+0x5910>
   18cb0:	ldrb	r9, [r3, #1]!
   18cb4:	bic	ip, r9, #1
   18cb8:	cmp	ip, #48	; 0x30
   18cbc:	bne	18b64 <_start@@Base+0x57b4>
   18cc0:	adds	r0, sl, sl
   18cc4:	adc	r1, fp, fp
   18cc8:	and	r9, r9, #1
   18ccc:	cmp	r2, r3
   18cd0:	orr	sl, r0, r9
   18cd4:	mov	fp, r1
   18cd8:	bne	18cb0 <_start@@Base+0x5900>
   18cdc:	sub	r3, r4, #3
   18ce0:	cmp	r3, #3
   18ce4:	ldrls	pc, [pc, r3, lsl #2]
   18ce8:	b	1946c <_start@@Base+0x60bc>
   18cec:	andeq	r9, r1, r8, lsr r4
   18cf0:	ldrdeq	r9, [r1], -ip
   18cf4:	andeq	r9, r1, r8, lsl r4
   18cf8:	andeq	r9, r1, r8, lsl r4
   18cfc:	mov	fp, #0
   18d00:	ldrb	r3, [r0, #1]
   18d04:	orr	r3, r3, #32
   18d08:	cmp	r3, #120	; 0x78
   18d0c:	beq	190ec <_start@@Base+0x5d3c>
   18d10:	cmp	r3, #98	; 0x62
   18d14:	moveq	fp, #2
   18d18:	ldrbeq	r9, [r0, #2]
   18d1c:	movne	r9, #48	; 0x30
   18d20:	addeq	r0, r0, fp
   18d24:	mov	r4, #8
   18d28:	b	18f40 <_start@@Base+0x5b90>
   18d2c:	mov	r4, #3
   18d30:	cmp	fp, #9
   18d34:	bgt	18d80 <_start@@Base+0x59d0>
   18d38:	cmp	r2, #0
   18d3c:	beq	18c3c <_start@@Base+0x588c>
   18d40:	orr	r5, r2, #32
   18d44:	uxtb	r5, r5
   18d48:	cmp	r5, #105	; 0x69
   18d4c:	beq	18bf8 <_start@@Base+0x5848>
   18d50:	cmp	r4, #3
   18d54:	bne	18c18 <_start@@Base+0x5868>
   18d58:	cmp	r5, #117	; 0x75
   18d5c:	beq	192b8 <_start@@Base+0x5f08>
   18d60:	cmp	r5, #108	; 0x6c
   18d64:	beq	19250 <_start@@Base+0x5ea0>
   18d68:	ldrb	r2, [lr]
   18d6c:	add	r1, r8, r2
   18d70:	ldrb	r1, [r1, #189]	; 0xbd
   18d74:	b	18c18 <_start@@Base+0x5868>
   18d78:	mov	r4, #1
   18d7c:	b	18d30 <_start@@Base+0x5980>
   18d80:	orr	r5, r2, #32
   18d84:	cmp	fp, #16
   18d88:	movne	r6, #101	; 0x65
   18d8c:	moveq	r6, #112	; 0x70
   18d90:	uxtb	r5, r5
   18d94:	mov	sl, #0
   18d98:	cmp	r6, r5
   18d9c:	movne	r3, sl
   18da0:	bne	18d38 <_start@@Base+0x5988>
   18da4:	ldrb	r1, [lr, #1]
   18da8:	sub	r2, r1, #43	; 0x2b
   18dac:	tst	r2, #253	; 0xfd
   18db0:	subeq	r3, r1, #45	; 0x2d
   18db4:	ldrbeq	r1, [lr, #2]
   18db8:	clzeq	r3, r3
   18dbc:	addne	lr, lr, #1
   18dc0:	add	r2, r8, r1
   18dc4:	lsreq	r3, r3, #5
   18dc8:	ldrb	r2, [r2, #189]	; 0xbd
   18dcc:	addeq	lr, lr, #2
   18dd0:	ands	r2, r2, #8
   18dd4:	beq	18b64 <_start@@Base+0x57b4>
   18dd8:	ldrb	r2, [lr, #1]
   18ddc:	and	r1, r1, #15
   18de0:	add	lr, lr, #1
   18de4:	add	r4, r8, r2
   18de8:	ldrb	r4, [r4, #189]	; 0xbd
   18dec:	tst	r4, #8
   18df0:	beq	18e1c <_start@@Base+0x5a6c>
   18df4:	ldr	r5, [pc, #1948]	; 19598 <_start@@Base+0x61e8>
   18df8:	add	r4, r1, r1, lsl #2
   18dfc:	and	r2, r2, #15
   18e00:	cmp	r1, r5
   18e04:	addls	r1, r2, r4, lsl #1
   18e08:	ldrb	r2, [lr, #1]!
   18e0c:	add	r4, r8, r2
   18e10:	ldrb	r4, [r4, #189]	; 0xbd
   18e14:	tst	r4, #8
   18e18:	bne	18df8 <_start@@Base+0x5a48>
   18e1c:	cmp	r3, #0
   18e20:	mov	r3, r1
   18e24:	rsbne	r3, r1, #0
   18e28:	cmp	r2, #0
   18e2c:	add	r3, r3, sl
   18e30:	beq	19004 <_start@@Base+0x5c54>
   18e34:	orr	r1, r2, #32
   18e38:	uxtb	r1, r1
   18e3c:	cmp	r1, #105	; 0x69
   18e40:	beq	18bf8 <_start@@Base+0x5848>
   18e44:	add	r1, r8, r2
   18e48:	mov	r4, #1
   18e4c:	ldrb	r1, [r1, #189]	; 0xbd
   18e50:	b	18c18 <_start@@Base+0x5868>
   18e54:	ldr	r3, [sp, #24]
   18e58:	cmp	r3, #0
   18e5c:	ldr	r3, [sp, #20]
   18e60:	rsbne	ip, ip, #0
   18e64:	tst	r3, #2
   18e68:	movne	r4, #1
   18e6c:	vmovne	s15, ip
   18e70:	ldrne	r3, [sp, #28]
   18e74:	ldreq	r3, [sp, #28]
   18e78:	moveq	r4, #3
   18e7c:	vcvtne.f64.s32	d7, s15
   18e80:	streq	ip, [r3]
   18e84:	vstrne	d7, [r3]
   18e88:	b	18b68 <_start@@Base+0x57b8>
   18e8c:	cmp	fp, #0
   18e90:	bne	19010 <_start@@Base+0x5c60>
   18e94:	sub	r2, r4, #1
   18e98:	cmp	r2, #1
   18e9c:	bls	18fa4 <_start@@Base+0x5bf4>
   18ea0:	cmp	r7, #22
   18ea4:	bhi	18b64 <_start@@Base+0x57b4>
   18ea8:	beq	192f4 <_start@@Base+0x5f44>
   18eac:	cmp	r7, #0
   18eb0:	sub	r7, r7, #1
   18eb4:	beq	193bc <_start@@Base+0x600c>
   18eb8:	sub	r3, r9, #48	; 0x30
   18ebc:	cmp	r3, #7
   18ec0:	bhi	18b64 <_start@@Base+0x57b4>
   18ec4:	add	r1, r0, r7
   18ec8:	mov	r2, #0
   18ecc:	mov	r3, #0
   18ed0:	b	18ee4 <_start@@Base+0x5b34>
   18ed4:	ldrb	r9, [r0, #1]!
   18ed8:	sub	ip, r9, #48	; 0x30
   18edc:	cmp	ip, #7
   18ee0:	bhi	18b64 <_start@@Base+0x57b4>
   18ee4:	lsl	r7, r3, #3
   18ee8:	and	r9, r9, #7
   18eec:	lsl	r6, r2, #3
   18ef0:	orr	r7, r7, r2, lsr #29
   18ef4:	adds	r2, r6, r9
   18ef8:	adc	r3, r7, #0
   18efc:	cmp	r1, r0
   18f00:	bne	18ed4 <_start@@Base+0x5b24>
   18f04:	cmp	r4, #3
   18f08:	beq	19208 <_start@@Base+0x5e58>
   18f0c:	cmp	r4, #4
   18f10:	beq	19224 <_start@@Base+0x5e74>
   18f14:	ldr	r1, [sp, #24]
   18f18:	cmp	r1, #0
   18f1c:	beq	18f28 <_start@@Base+0x5b78>
   18f20:	rsbs	r2, r2, #0
   18f24:	rsc	r3, r3, #0
   18f28:	ldr	r1, [sp, #28]
   18f2c:	strd	r2, [r1]
   18f30:	b	18b68 <_start@@Base+0x57b8>
   18f34:	mov	fp, #10
   18f38:	beq	18d00 <_start@@Base+0x5950>
   18f3c:	mov	r4, #8
   18f40:	mov	r3, #0
   18f44:	mov	sl, r3
   18f48:	b	18f64 <_start@@Base+0x5bb4>
   18f4c:	cmp	r9, #46	; 0x2e
   18f50:	bne	19100 <_start@@Base+0x5d50>
   18f54:	cmp	sl, #0
   18f58:	bne	18b64 <_start@@Base+0x57b4>
   18f5c:	mov	sl, r0
   18f60:	ldrb	r9, [r0, #1]!
   18f64:	cmp	r9, #48	; 0x30
   18f68:	bne	18f4c <_start@@Base+0x5b9c>
   18f6c:	mov	r3, #1
   18f70:	b	18f60 <_start@@Base+0x5bb0>
   18f74:	orr	r5, r2, #32
   18f78:	mov	r4, #1
   18f7c:	uxtb	r5, r5
   18f80:	mov	r6, #101	; 0x65
   18f84:	b	18d98 <_start@@Base+0x59e8>
   18f88:	cmp	r9, #50	; 0x32
   18f8c:	bhi	18fa0 <_start@@Base+0x5bf0>
   18f90:	ldr	r2, [sp, #24]
   18f94:	add	r2, r2, #-2147483648	; 0x80000000
   18f98:	cmp	r2, ip
   18f9c:	bhi	18e54 <_start@@Base+0x5aa4>
   18fa0:	mov	r4, #3
   18fa4:	ldr	r2, [sp, #24]
   18fa8:	str	r3, [sp]
   18fac:	str	r2, [sp, #4]
   18fb0:	str	r7, [sp, #8]
   18fb4:	mov	r2, r4
   18fb8:	ldr	r3, [sp, #20]
   18fbc:	ldr	r1, [sp, #28]
   18fc0:	bl	1812c <_start@@Base+0x4d7c>
   18fc4:	mov	r4, r0
   18fc8:	cmp	r4, #1
   18fcc:	bne	18b68 <_start@@Base+0x57b8>
   18fd0:	ldr	r3, [sp, #20]
   18fd4:	tst	r3, #1
   18fd8:	beq	18b68 <_start@@Base+0x57b8>
   18fdc:	ldr	r3, [sp, #28]
   18fe0:	vldr	d6, [r3]
   18fe4:	vcvt.s32.f64	s15, d6
   18fe8:	vcvt.f64.s32	d5, s15
   18fec:	vcmp.f64	d5, d6
   18ff0:	vmrs	APSR_nzcv, fpscr
   18ff4:	vstreq	s15, [r3]
   18ff8:	moveq	r4, #3
   18ffc:	b	18b68 <_start@@Base+0x57b8>
   19000:	mov	r3, sl
   19004:	cmp	fp, #0
   19008:	mov	r4, #1
   1900c:	beq	18fa4 <_start@@Base+0x5bf4>
   19010:	cmp	fp, #16
   19014:	bne	18c5c <_start@@Base+0x58ac>
   19018:	cmp	r7, #16
   1901c:	movcc	r2, r7
   19020:	movcs	r2, #16
   19024:	cmp	r7, #0
   19028:	beq	19528 <_start@@Base+0x6178>
   1902c:	mov	sl, #0
   19030:	mov	fp, #0
   19034:	mov	r5, r7
   19038:	b	19040 <_start@@Base+0x5c90>
   1903c:	ldrb	r9, [ip, #1]
   19040:	cmp	r9, #46	; 0x2e
   19044:	add	ip, r0, #1
   19048:	ldrbeq	r1, [r0, #1]
   1904c:	movne	r1, r9
   19050:	mov	lr, ip
   19054:	addeq	r0, r0, #2
   19058:	movne	ip, r0
   1905c:	movne	r0, lr
   19060:	cmp	r1, #57	; 0x39
   19064:	addhi	r1, r1, #9
   19068:	lsl	r7, fp, #4
   1906c:	lsl	r6, sl, #4
   19070:	and	r1, r1, #15
   19074:	orr	r7, r7, sl, lsr #28
   19078:	adds	sl, r6, r1
   1907c:	adc	fp, r7, #0
   19080:	subs	r2, r2, #1
   19084:	bne	1903c <_start@@Base+0x5c8c>
   19088:	cmp	r5, #16
   1908c:	mov	r7, r5
   19090:	mov	r8, sl
   19094:	mov	r9, fp
   19098:	bls	19538 <_start@@Base+0x6188>
   1909c:	mov	r1, #16
   190a0:	b	190c8 <_start@@Base+0x5d18>
   190a4:	subs	r2, r2, #48	; 0x30
   190a8:	movne	r2, #1
   190ac:	mov	r0, ip
   190b0:	add	ip, r1, #1
   190b4:	cmp	ip, r7
   190b8:	orr	sl, sl, r2
   190bc:	orr	fp, fp, r2, asr #31
   190c0:	beq	19120 <_start@@Base+0x5d70>
   190c4:	mov	r1, ip
   190c8:	mov	ip, r0
   190cc:	ldrb	r2, [ip], #1
   190d0:	cmp	r2, #46	; 0x2e
   190d4:	bne	190a4 <_start@@Base+0x5cf4>
   190d8:	ldrb	r2, [r0, #1]
   190dc:	add	r0, r0, #2
   190e0:	subs	r2, r2, #48	; 0x30
   190e4:	movne	r2, #1
   190e8:	b	190b0 <_start@@Base+0x5d00>
   190ec:	mov	fp, #16
   190f0:	ldrb	r9, [r0, #2]
   190f4:	mov	r4, fp
   190f8:	add	r0, r0, #2
   190fc:	b	18f40 <_start@@Base+0x5b90>
   19100:	str	r3, [sp, #36]	; 0x24
   19104:	b	18b18 <_start@@Base+0x5768>
   19108:	orr	r5, r2, #32
   1910c:	lsl	sl, sl, #2
   19110:	uxtb	r5, r5
   19114:	mov	r4, #1
   19118:	mov	r6, #112	; 0x70
   1911c:	b	18d98 <_start@@Base+0x59e8>
   19120:	add	r3, r3, r1, lsl #2
   19124:	sub	r2, r4, #3
   19128:	mov	r8, sl
   1912c:	mov	r9, fp
   19130:	sub	r3, r3, #60	; 0x3c
   19134:	cmp	r2, #3
   19138:	ldrls	pc, [pc, r2, lsl #2]
   1913c:	b	191ac <_start@@Base+0x5dfc>
   19140:	andeq	r9, r1, r8, ror r1
   19144:	andeq	r9, r1, r0, asr r1
   19148:	andeq	r8, r1, r4, ror #22
   1914c:	andeq	r8, r1, r4, ror #22
   19150:	cmp	r7, #8
   19154:	bhi	18b64 <_start@@Base+0x57b4>
   19158:	ldr	r3, [sp, #24]
   1915c:	cmp	r3, #0
   19160:	mov	r3, r8
   19164:	rsbne	r3, r8, #0
   19168:	ldr	r2, [sp, #28]
   1916c:	mov	r4, #4
   19170:	str	r3, [r2]
   19174:	b	18b68 <_start@@Base+0x57b8>
   19178:	ldr	r2, [sp, #20]
   1917c:	tst	r2, #2
   19180:	bne	1919c <_start@@Base+0x5dec>
   19184:	ldr	r2, [sp, #24]
   19188:	mov	r1, #0
   1918c:	add	r0, r2, #-2147483648	; 0x80000000
   19190:	cmp	r1, r9
   19194:	cmpeq	r0, r8
   19198:	bhi	194cc <_start@@Base+0x611c>
   1919c:	ldr	r2, [sp, #32]
   191a0:	cmp	r2, #0
   191a4:	bne	19150 <_start@@Base+0x5da0>
   191a8:	mov	r4, #1
   191ac:	mov	r0, #0
   191b0:	and	r1, r9, #-1073741824	; 0xc0000000
   191b4:	orrs	r2, r0, r1
   191b8:	beq	191e4 <_start@@Base+0x5e34>
   191bc:	lsr	r0, r8, #2
   191c0:	orr	r0, r0, r9, lsl #30
   191c4:	lsr	r1, r9, #2
   191c8:	and	r6, r8, #3
   191cc:	mov	r7, #0
   191d0:	orr	r6, r6, r0
   191d4:	orr	r7, r7, r1
   191d8:	add	r3, r3, #2
   191dc:	mov	r8, r6
   191e0:	mov	r9, r7
   191e4:	ldr	r2, [sp, #24]
   191e8:	mov	r0, r8
   191ec:	str	r2, [sp]
   191f0:	mov	r1, r9
   191f4:	ldr	r2, [sp, #28]
   191f8:	bl	18018 <_start@@Base+0x4c68>
   191fc:	b	18fc8 <_start@@Base+0x5c18>
   19200:	mov	r2, #0
   19204:	mov	r3, #0
   19208:	ldr	r1, [sp, #24]
   1920c:	add	r0, r1, #-2147483648	; 0x80000000
   19210:	mov	r1, #0
   19214:	cmp	r1, r3
   19218:	cmpeq	r0, r2
   1921c:	movls	r4, #4
   19220:	movhi	r4, #3
   19224:	mov	r0, r3
   19228:	mov	r1, #0
   1922c:	orrs	ip, r0, r1
   19230:	bne	18b64 <_start@@Base+0x57b4>
   19234:	ldr	r1, [sp, #24]
   19238:	ldr	r3, [sp, #28]
   1923c:	cmp	r1, #0
   19240:	mov	r1, r2
   19244:	rsbne	r1, r2, #0
   19248:	str	r1, [r3]
   1924c:	b	18b68 <_start@@Base+0x57b8>
   19250:	mov	r1, lr
   19254:	mov	r2, r4
   19258:	ldrb	r5, [r1, #1]
   1925c:	add	lr, r1, #1
   19260:	orr	r5, r5, #32
   19264:	cmp	r5, #108	; 0x6c
   19268:	beq	194dc <_start@@Base+0x612c>
   1926c:	ldr	r1, [sp, #32]
   19270:	cmp	r1, #0
   19274:	beq	18b64 <_start@@Base+0x57b4>
   19278:	cmp	r5, #117	; 0x75
   1927c:	bne	194c0 <_start@@Base+0x6110>
   19280:	sub	r1, r2, #3
   19284:	bics	r1, r1, #2
   19288:	mov	r4, r2
   1928c:	bne	19298 <_start@@Base+0x5ee8>
   19290:	add	lr, lr, #1
   19294:	add	r4, r4, #1
   19298:	cmp	r4, #4
   1929c:	beq	192d4 <_start@@Base+0x5f24>
   192a0:	cmp	r4, #4
   192a4:	bls	18d68 <_start@@Base+0x59b8>
   192a8:	ldr	r2, [sp, #20]
   192ac:	ands	r2, r2, #8
   192b0:	bne	18d68 <_start@@Base+0x59b8>
   192b4:	b	18b64 <_start@@Base+0x57b4>
   192b8:	ldrb	r2, [lr, #1]
   192bc:	add	r1, lr, #1
   192c0:	orr	r2, r2, #32
   192c4:	cmp	r2, #108	; 0x6c
   192c8:	moveq	r2, #4
   192cc:	beq	19258 <_start@@Base+0x5ea8>
   192d0:	mov	lr, r1
   192d4:	ldr	r2, [sp, #32]
   192d8:	cmp	r2, #0
   192dc:	beq	18b64 <_start@@Base+0x57b4>
   192e0:	ldrb	r2, [lr]
   192e4:	mov	r4, #4
   192e8:	add	r1, r8, r2
   192ec:	ldrb	r1, [r1, #189]	; 0xbd
   192f0:	b	18c18 <_start@@Base+0x5868>
   192f4:	cmp	r9, #49	; 0x31
   192f8:	movls	r7, #21
   192fc:	bls	18eb8 <_start@@Base+0x5b08>
   19300:	b	18b64 <_start@@Base+0x57b4>
   19304:	ldrb	r3, [r0, #1]
   19308:	orr	r3, r3, #32
   1930c:	cmp	r3, #110	; 0x6e
   19310:	bne	18ab8 <_start@@Base+0x5708>
   19314:	ldrb	r3, [r0, #2]
   19318:	orr	r3, r3, #32
   1931c:	cmp	r3, #102	; 0x66
   19320:	bne	18ab8 <_start@@Base+0x5708>
   19324:	ldr	r3, [sp, #24]
   19328:	ldrb	r9, [r0, #3]
   1932c:	cmp	r3, #0
   19330:	mov	r4, #0
   19334:	orr	r2, r9, #32
   19338:	ldrne	r5, [pc, #604]	; 1959c <_start@@Base+0x61ec>
   1933c:	ldreq	r5, [pc, #604]	; 195a0 <_start@@Base+0x61f0>
   19340:	cmp	r2, #105	; 0x69
   19344:	add	r3, r0, #3
   19348:	bne	18ac4 <_start@@Base+0x5714>
   1934c:	ldrb	r2, [r0, #4]
   19350:	orr	r2, r2, #32
   19354:	cmp	r2, #110	; 0x6e
   19358:	bne	18ac4 <_start@@Base+0x5714>
   1935c:	ldrb	r2, [r0, #5]
   19360:	orr	r2, r2, #32
   19364:	cmp	r2, #105	; 0x69
   19368:	bne	18ac4 <_start@@Base+0x5714>
   1936c:	ldrb	r2, [r0, #6]
   19370:	orr	r2, r2, #32
   19374:	cmp	r2, #116	; 0x74
   19378:	bne	18ac4 <_start@@Base+0x5714>
   1937c:	ldrb	r2, [r0, #7]
   19380:	orr	r2, r2, #32
   19384:	cmp	r2, #121	; 0x79
   19388:	addeq	r3, r0, #8
   1938c:	ldrbeq	r9, [r0, #8]
   19390:	b	18ac4 <_start@@Base+0x5714>
   19394:	sub	r3, r4, #3
   19398:	mov	sl, #0
   1939c:	mov	fp, #0
   193a0:	cmp	r3, #3
   193a4:	ldrls	pc, [pc, r3, lsl #2]
   193a8:	b	193f8 <_start@@Base+0x6048>
   193ac:	andeq	r9, r1, r8, lsr r4
   193b0:	andeq	r9, r1, r4, ror #7
   193b4:	andeq	r9, r1, r8, lsl r4
   193b8:	andeq	r9, r1, r8, lsl r4
   193bc:	cmp	r4, #3
   193c0:	beq	19200 <_start@@Base+0x5e50>
   193c4:	cmp	r4, #4
   193c8:	movne	r2, #0
   193cc:	movne	r3, #0
   193d0:	bne	18f14 <_start@@Base+0x5b64>
   193d4:	mov	r2, #0
   193d8:	b	19234 <_start@@Base+0x5e84>
   193dc:	cmp	r7, #32
   193e0:	bhi	18b64 <_start@@Base+0x57b4>
   193e4:	ldr	r3, [sp, #24]
   193e8:	cmp	r3, #0
   193ec:	mov	r3, sl
   193f0:	rsbne	r3, sl, #0
   193f4:	b	19168 <_start@@Base+0x5db8>
   193f8:	mov	r3, #0
   193fc:	ldr	r2, [sp, #24]
   19400:	mov	r0, sl
   19404:	str	r2, [sp]
   19408:	mov	r1, fp
   1940c:	ldr	r2, [sp, #28]
   19410:	bl	18018 <_start@@Base+0x4c68>
   19414:	b	18fc8 <_start@@Base+0x5c18>
   19418:	ldr	r3, [sp, #24]
   1941c:	cmp	r3, #0
   19420:	beq	1942c <_start@@Base+0x607c>
   19424:	rsbs	sl, sl, #0
   19428:	rsc	fp, fp, #0
   1942c:	ldr	r3, [sp, #28]
   19430:	strd	sl, [r3]
   19434:	b	18b68 <_start@@Base+0x57b8>
   19438:	ldr	r3, [sp, #20]
   1943c:	tst	r3, #2
   19440:	bne	1945c <_start@@Base+0x60ac>
   19444:	ldr	r3, [sp, #24]
   19448:	add	r2, r3, #-2147483648	; 0x80000000
   1944c:	mov	r3, #0
   19450:	cmp	r3, fp
   19454:	cmpeq	r2, sl
   19458:	bhi	194a0 <_start@@Base+0x60f0>
   1945c:	ldr	r3, [sp, #32]
   19460:	cmp	r3, #0
   19464:	bne	193dc <_start@@Base+0x602c>
   19468:	mov	r4, #1
   1946c:	mov	r2, #0
   19470:	and	r3, fp, #-1073741824	; 0xc0000000
   19474:	orrs	r3, r2, r3
   19478:	beq	193f8 <_start@@Base+0x6048>
   1947c:	lsr	r2, sl, #2
   19480:	orr	r2, r2, fp, lsl #30
   19484:	lsr	r3, fp, #2
   19488:	and	r0, sl, #3
   1948c:	mov	r1, #0
   19490:	orr	fp, r1, r3
   19494:	orr	sl, r0, r2
   19498:	mov	r3, #2
   1949c:	b	193fc <_start@@Base+0x604c>
   194a0:	ldr	r3, [sp, #24]
   194a4:	cmp	r3, #0
   194a8:	mov	r3, sl
   194ac:	rsbne	r3, sl, #0
   194b0:	ldr	r2, [sp, #28]
   194b4:	mov	r4, #3
   194b8:	str	r3, [r2]
   194bc:	b	18b68 <_start@@Base+0x57b8>
   194c0:	cmp	r2, #4
   194c4:	bne	18d68 <_start@@Base+0x59b8>
   194c8:	b	192e0 <_start@@Base+0x5f30>
   194cc:	cmp	r2, #0
   194d0:	mov	r3, r8
   194d4:	rsbne	r3, r8, #0
   194d8:	b	194b0 <_start@@Base+0x6100>
   194dc:	ldrb	r5, [r1, #2]
   194e0:	add	lr, r1, #2
   194e4:	add	r4, r2, #2
   194e8:	orr	r5, r5, #32
   194ec:	cmp	r5, #117	; 0x75
   194f0:	bne	192a8 <_start@@Base+0x5ef8>
   194f4:	sub	r2, r2, #1
   194f8:	bics	r2, r2, #2
   194fc:	beq	19290 <_start@@Base+0x5ee0>
   19500:	b	192a0 <_start@@Base+0x5ef0>
   19504:	ldrb	r3, [r0, #2]
   19508:	orr	r3, r3, #32
   1950c:	cmp	r3, #110	; 0x6e
   19510:	bne	18ab8 <_start@@Base+0x5708>
   19514:	add	r3, r0, #3
   19518:	ldrb	r9, [r0, #3]
   1951c:	mov	r4, #0
   19520:	ldr	r5, [pc, #108]	; 19594 <_start@@Base+0x61e4>
   19524:	b	18ac4 <_start@@Base+0x5714>
   19528:	mov	r0, #0
   1952c:	mov	r1, #0
   19530:	mov	r8, r0
   19534:	mov	r9, r1
   19538:	sub	r2, r4, #3
   1953c:	cmp	r2, #3
   19540:	ldrls	pc, [pc, r2, lsl #2]
   19544:	b	191ac <_start@@Base+0x5dfc>
   19548:	andeq	r9, r1, r8, ror r1
   1954c:	andeq	r9, r1, r0, asr r1
   19550:	andeq	r9, r1, r0, ror #10
   19554:	andeq	r9, r1, r0, ror #10
   19558:	mov	fp, #10
   1955c:	b	18f3c <_start@@Base+0x5b8c>
   19560:	ldr	r3, [sp, #24]
   19564:	cmp	r3, #0
   19568:	beq	1957c <_start@@Base+0x61cc>
   1956c:	rsbs	r2, r8, #0
   19570:	rsc	r3, r9, #0
   19574:	mov	r8, r2
   19578:	mov	r9, r3
   1957c:	ldr	r3, [sp, #28]
   19580:	mov	r0, r8
   19584:	mov	r1, r9
   19588:	strd	r0, [r3]
   1958c:	b	18b68 <_start@@Base+0x57b8>
   19590:			; <UNDEFINED> instruction: 0x0006ecb8
   19594:			; <UNDEFINED> instruction: 0xfff80000
   19598:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   1959c:			; <UNDEFINED> instruction: 0xfff00000	; IMB
   195a0:	svcvc	0x00f00000	; IMB
   195a4:	push	{r4, lr}
   195a8:	mov	r2, #2
   195ac:	add	r0, r0, #16
   195b0:	bl	189f0 <_start@@Base+0x5640>
   195b4:	adds	r0, r0, #0
   195b8:	movne	r0, #1
   195bc:	pop	{r4, pc}
   195c0:	push	{r4, r5, r6, lr}
   195c4:	mov	r4, r0
   195c8:	ldr	r0, [r0, #80]	; 0x50
   195cc:	ldr	r5, [pc, #76]	; 19620 <_start@@Base+0x6270>
   195d0:	mov	r6, #21
   195d4:	ldr	r3, [r0, #16]
   195d8:	str	r1, [r4, #84]	; 0x54
   195dc:	ldr	r3, [r3, #-8]
   195e0:	str	r3, [r4, #88]	; 0x58
   195e4:	ldrb	r2, [r3, #6]
   195e8:	cmp	r2, #0
   195ec:	movne	r3, #0
   195f0:	ldreq	r3, [r3, #16]
   195f4:	subeq	r3, r3, #64	; 0x40
   195f8:	str	r3, [r4, #92]	; 0x5c
   195fc:	mov	r3, r5
   19600:	mov	r2, r4
   19604:	mov	r1, #0
   19608:	bl	6bd28 <luaL_openlibs@@Base+0x2568>
   1960c:	cmp	r0, #0
   19610:	popeq	{r4, r5, r6, pc}
   19614:	ldr	r0, [r4, #80]	; 0x50
   19618:	str	r6, [r4, #168]	; 0xa8
   1961c:	b	195fc <_start@@Base+0x624c>
   19620:	andeq	r6, r5, r8, asr #11
   19624:	push	{r4, r5, lr}
   19628:	mov	r4, r0
   1962c:	sub	sp, sp, #460	; 0x1cc
   19630:	ldr	r1, [r0, #48]	; 0x30
   19634:	mov	r2, #456	; 0x1c8
   19638:	mov	r0, sp
   1963c:	bl	12cb8 <memcpy@plt>
   19640:	mov	r2, r4
   19644:	ldr	r0, [r4, #44]	; 0x2c
   19648:	ldr	r3, [pc, #100]	; 196b4 <_start@@Base+0x6304>
   1964c:	mov	r1, #0
   19650:	bl	6bd28 <luaL_openlibs@@Base+0x2568>
   19654:	subs	r5, r0, #0
   19658:	beq	19678 <_start@@Base+0x62c8>
   1965c:	ldr	r3, [r4, #48]	; 0x30
   19660:	ldr	r2, [sp, #4]
   19664:	add	r0, r3, #200	; 0xc8
   19668:	str	r2, [r3, #4]
   1966c:	add	r1, sp, #200	; 0xc8
   19670:	mov	r2, #256	; 0x100
   19674:	bl	12cb8 <memcpy@plt>
   19678:	ldr	r3, [r4, #44]	; 0x2c
   1967c:	ldrd	r0, [r4, #32]
   19680:	ldr	r3, [r3, #8]
   19684:	sub	r0, r0, r1
   19688:	mov	r2, r0
   1968c:	ldr	ip, [r3, #20]
   19690:	ldr	r4, [r3, #12]
   19694:	sub	r0, ip, r0
   19698:	str	r0, [r3, #20]
   1969c:	ldr	r0, [r3, #16]
   196a0:	mov	r3, #0
   196a4:	blx	r4
   196a8:	mov	r0, r5
   196ac:	add	sp, sp, #460	; 0x1cc
   196b0:	pop	{r4, r5, pc}
   196b4:			; <UNDEFINED> instruction: 0x0004a3bc
   196b8:	push	{r4, r5, lr}
   196bc:	sub	sp, sp, #44	; 0x2c
   196c0:	mov	ip, #0
   196c4:	ldr	lr, [sp, #56]	; 0x38
   196c8:	strd	r2, [sp, #24]
   196cc:	str	r1, [sp, #20]
   196d0:	add	r2, sp, #4
   196d4:	mov	r1, ip
   196d8:	ldr	r3, [pc, #92]	; 1973c <_start@@Base+0x638c>
   196dc:	str	lr, [sp, #32]
   196e0:	str	ip, [sp, #36]	; 0x24
   196e4:	str	ip, [sp, #4]
   196e8:	str	ip, [sp, #8]
   196ec:	str	ip, [sp, #12]
   196f0:	str	r0, [sp, #16]
   196f4:	bl	6bd28 <luaL_openlibs@@Base+0x2568>
   196f8:	subs	r4, r0, #0
   196fc:	add	r0, sp, #8
   19700:	ldreq	r4, [sp, #36]	; 0x24
   19704:	ldm	r0, {r0, r1, r3}
   19708:	ldr	r3, [r3, #8]
   1970c:	sub	r0, r0, r1
   19710:	mov	r2, r0
   19714:	ldr	ip, [r3, #20]
   19718:	ldr	r5, [r3, #12]
   1971c:	sub	r0, ip, r0
   19720:	str	r0, [r3, #20]
   19724:	ldr	r0, [r3, #16]
   19728:	mov	r3, #0
   1972c:	blx	r5
   19730:	mov	r0, r4
   19734:	add	sp, sp, #44	; 0x2c
   19738:	pop	{r4, r5, pc}
   1973c:	andeq	r3, r3, r8, lsl sp
   19740:	push	{r4, lr}
   19744:	bl	12eb0 <__errno_location@plt>
   19748:	ldr	r0, [r0]
   1974c:	pop	{r4, pc}
   19750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19754:	mov	sl, r0
   19758:	ldr	r6, [r0, #432]	; 0x1b0
   1975c:	sub	sp, sp, #20
   19760:	cmp	r6, #0
   19764:	beq	19a68 <_start@@Base+0x66b8>
   19768:	add	r2, r0, #424	; 0x1a8
   1976c:	mov	r8, r2
   19770:	mov	r9, #0
   19774:	str	r9, [sp, #4]
   19778:	ldr	r5, [r6]
   1977c:	add	r9, r9, #1
   19780:	add	r4, r5, #8
   19784:	tst	r4, #7
   19788:	rsbne	r4, r4, #0
   1978c:	andne	r4, r4, #7
   19790:	addne	r4, r5, r4
   19794:	moveq	r4, r5
   19798:	ldr	r7, [r6, #8]
   1979c:	ldr	r3, [r4, #4]
   197a0:	ands	r1, r3, #2
   197a4:	bne	198c0 <_start@@Base+0x6510>
   197a8:	ldr	r2, [r6, #4]
   197ac:	bic	fp, r3, #3
   197b0:	sub	r3, r2, #32
   197b4:	add	r3, r5, r3
   197b8:	add	r0, r4, fp
   197bc:	cmp	r0, r3
   197c0:	bcc	198c0 <_start@@Base+0x6510>
   197c4:	ldr	r3, [sl, #16]
   197c8:	cmp	r3, r4
   197cc:	streq	r1, [sl, #16]
   197d0:	streq	r1, [sl, #8]
   197d4:	beq	19850 <_start@@Base+0x64a0>
   197d8:	ldr	r1, [r4, #12]
   197dc:	ldr	lr, [r4, #24]
   197e0:	cmp	r1, r4
   197e4:	beq	19948 <_start@@Base+0x6598>
   197e8:	ldr	r3, [r4, #8]
   197ec:	str	r1, [r3, #12]
   197f0:	str	r3, [r1, #8]
   197f4:	cmp	lr, #0
   197f8:	beq	19850 <_start@@Base+0x64a0>
   197fc:	ldr	r3, [r4, #28]
   19800:	add	r3, sl, r3, lsl #2
   19804:	ldr	r0, [r3, #296]	; 0x128
   19808:	cmp	r0, r4
   1980c:	streq	r1, [r3, #296]	; 0x128
   19810:	beq	1982c <_start@@Base+0x647c>
   19814:	ldr	r3, [lr, #16]
   19818:	cmp	r3, r4
   1981c:	streq	r1, [lr, #16]
   19820:	strne	r1, [lr, #20]
   19824:	cmp	r1, #0
   19828:	beq	19850 <_start@@Base+0x64a0>
   1982c:	ldr	r3, [r4, #16]
   19830:	str	lr, [r1, #24]
   19834:	cmp	r3, #0
   19838:	strne	r3, [r1, #16]
   1983c:	strne	r1, [r3, #24]
   19840:	ldr	r3, [r4, #20]
   19844:	cmp	r3, #0
   19848:	strne	r3, [r1, #20]
   1984c:	strne	r1, [r3, #24]
   19850:	str	r2, [sp, #8]
   19854:	bl	12eb0 <__errno_location@plt>
   19858:	ldr	r2, [sp, #8]
   1985c:	mov	r1, r2
   19860:	str	r2, [sp, #12]
   19864:	mov	r3, r0
   19868:	mov	r0, r5
   1986c:	str	r3, [sp, #8]
   19870:	ldr	r5, [r3]
   19874:	bl	12f70 <munmap@plt>
   19878:	ldr	r3, [sp, #8]
   1987c:	str	r5, [r3]
   19880:	cmp	r0, #0
   19884:	bne	198d4 <_start@@Base+0x6524>
   19888:	ldr	r3, [sp, #4]
   1988c:	ldr	r2, [sp, #12]
   19890:	cmp	r7, #0
   19894:	add	r3, r3, r2
   19898:	str	r3, [sp, #4]
   1989c:	str	r7, [r8, #8]
   198a0:	mov	r6, r7
   198a4:	bne	19778 <_start@@Base+0x63c8>
   198a8:	cmp	r9, #255	; 0xff
   198ac:	movcc	r9, #255	; 0xff
   198b0:	ldr	r0, [sp, #4]
   198b4:	str	r9, [sl, #28]
   198b8:	add	sp, sp, #20
   198bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198c0:	mov	r8, r6
   198c4:	cmp	r7, #0
   198c8:	mov	r6, r7
   198cc:	bne	19778 <_start@@Base+0x63c8>
   198d0:	b	198a8 <_start@@Base+0x64f8>
   198d4:	lsrs	r3, fp, #8
   198d8:	bne	19928 <_start@@Base+0x6578>
   198dc:	mov	r0, #296	; 0x128
   198e0:	mov	r1, #1
   198e4:	mov	ip, #74	; 0x4a
   198e8:	ldr	r2, [sl, #4]
   198ec:	mov	lr, #0
   198f0:	tst	r2, r1
   198f4:	str	r3, [r4, #28]
   198f8:	str	lr, [r4, #20]
   198fc:	str	lr, [r4, #16]
   19900:	bne	19988 <_start@@Base+0x65d8>
   19904:	orr	r2, r2, r1
   19908:	add	r0, sl, r0
   1990c:	str	r2, [sl, #4]
   19910:	mov	r8, r6
   19914:	str	r4, [sl, ip, lsl #2]
   19918:	str	r0, [r4, #24]
   1991c:	str	r4, [r4, #12]
   19920:	str	r4, [r4, #8]
   19924:	b	198c4 <_start@@Base+0x6514>
   19928:	ldr	r2, [pc, #360]	; 19a98 <_start@@Base+0x66e8>
   1992c:	cmp	r3, r2
   19930:	bls	199f4 <_start@@Base+0x6644>
   19934:	mov	r0, #420	; 0x1a4
   19938:	mov	r1, #-2147483648	; 0x80000000
   1993c:	mov	r3, #31
   19940:	mov	ip, #105	; 0x69
   19944:	b	198e8 <_start@@Base+0x6538>
   19948:	ldr	r0, [r4, #20]
   1994c:	cmp	r0, #0
   19950:	addne	r3, r4, #20
   19954:	beq	19a20 <_start@@Base+0x6670>
   19958:	mov	ip, r3
   1995c:	mov	r3, r0
   19960:	mov	r1, r0
   19964:	ldr	r0, [r3, #20]!
   19968:	cmp	r0, #0
   1996c:	bne	19958 <_start@@Base+0x65a8>
   19970:	mov	r3, r1
   19974:	ldr	r0, [r3, #16]!
   19978:	cmp	r0, #0
   1997c:	bne	19958 <_start@@Base+0x65a8>
   19980:	str	r0, [ip]
   19984:	b	197f4 <_start@@Base+0x6444>
   19988:	cmp	r3, #31
   1998c:	lsrne	r3, r3, #1
   19990:	rsbne	r3, r3, #25
   19994:	ldr	r1, [sl, ip, lsl #2]
   19998:	lslne	r3, fp, r3
   1999c:	moveq	r3, fp
   199a0:	b	199b4 <_start@@Base+0x6604>
   199a4:	ldr	r2, [r1, r0, lsl #2]
   199a8:	cmp	r2, #0
   199ac:	beq	19a80 <_start@@Base+0x66d0>
   199b0:	mov	r1, r2
   199b4:	lsr	r2, r3, #31
   199b8:	add	r0, r2, #4
   199bc:	ldr	r2, [r1, #4]
   199c0:	lsl	r3, r3, #1
   199c4:	bic	r2, r2, #3
   199c8:	cmp	r2, fp
   199cc:	bne	199a4 <_start@@Base+0x65f4>
   199d0:	ldr	r3, [r1, #8]
   199d4:	mov	r8, r6
   199d8:	str	r4, [r3, #12]
   199dc:	str	r4, [r1, #8]
   199e0:	str	r3, [r4, #8]
   199e4:	mov	r3, #0
   199e8:	str	r1, [r4, #12]
   199ec:	str	r3, [r4, #24]
   199f0:	b	198c4 <_start@@Base+0x6514>
   199f4:	clz	r3, r3
   199f8:	eor	r3, r3, #31
   199fc:	add	r1, r3, #7
   19a00:	mov	r2, #1
   19a04:	lsr	r1, fp, r1
   19a08:	and	r1, r1, r2
   19a0c:	add	r3, r1, r3, lsl r2
   19a10:	add	ip, r3, #74	; 0x4a
   19a14:	lsl	r1, r2, r3
   19a18:	lsl	r0, ip, #2
   19a1c:	b	198e8 <_start@@Base+0x6538>
   19a20:	ldr	r0, [r4, #16]
   19a24:	cmp	r0, #0
   19a28:	addne	r3, r4, #16
   19a2c:	bne	19958 <_start@@Base+0x65a8>
   19a30:	cmp	lr, #0
   19a34:	beq	19850 <_start@@Base+0x64a0>
   19a38:	ldr	r1, [r4, #28]
   19a3c:	add	ip, sl, r1, lsl #2
   19a40:	ldr	r3, [ip, #296]	; 0x128
   19a44:	cmp	r3, r4
   19a48:	movne	r1, r0
   19a4c:	bne	19814 <_start@@Base+0x6464>
   19a50:	ldr	r3, [sl, #4]
   19a54:	mov	lr, #1
   19a58:	str	r0, [ip, #296]	; 0x128
   19a5c:	bic	r3, r3, lr, lsl r1
   19a60:	str	r3, [sl, #4]
   19a64:	b	19850 <_start@@Base+0x64a0>
   19a68:	str	r6, [sp, #4]
   19a6c:	mov	r9, #255	; 0xff
   19a70:	ldr	r0, [sp, #4]
   19a74:	str	r9, [sl, #28]
   19a78:	add	sp, sp, #20
   19a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a80:	str	r4, [r1, r0, lsl #2]
   19a84:	mov	r8, r6
   19a88:	str	r1, [r4, #24]
   19a8c:	str	r4, [r4, #12]
   19a90:	str	r4, [r4, #8]
   19a94:	b	198c4 <_start@@Base+0x6514>
   19a98:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   19a9c:	push	{r4, r5, r6, r7, r8, lr}
   19aa0:	sub	sp, sp, #16
   19aa4:	mov	r8, r0
   19aa8:	bl	12eb0 <__errno_location@plt>
   19aac:	mov	r6, #0
   19ab0:	mov	r7, #0
   19ab4:	mvn	r3, #0
   19ab8:	mov	r1, r8
   19abc:	mov	r2, #3
   19ac0:	ldr	r5, [r0]
   19ac4:	mov	r4, r0
   19ac8:	str	r3, [sp]
   19acc:	strd	r6, [sp, #8]
   19ad0:	mov	r3, #34	; 0x22
   19ad4:	mov	r0, #0
   19ad8:	bl	12cc4 <mmap64@plt>
   19adc:	str	r5, [r4]
   19ae0:	add	sp, sp, #16
   19ae4:	pop	{r4, r5, r6, r7, r8, pc}
   19ae8:	cmp	r1, #244	; 0xf4
   19aec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19af0:	sub	sp, sp, #12
   19af4:	bhi	19b80 <_start@@Base+0x67d0>
   19af8:	cmp	r1, #10
   19afc:	addhi	r4, r1, #11
   19b00:	bichi	r4, r4, #7
   19b04:	ldr	lr, [r0]
   19b08:	lsrhi	r2, r4, #3
   19b0c:	movls	r2, #2
   19b10:	movls	r4, #16
   19b14:	lsr	r3, lr, r2
   19b18:	tst	r3, #3
   19b1c:	beq	19c1c <_start@@Base+0x686c>
   19b20:	mvn	r3, r3
   19b24:	and	r3, r3, #1
   19b28:	add	r3, r3, r2
   19b2c:	add	r1, r0, r3, lsl #3
   19b30:	add	r1, r1, #32
   19b34:	ldr	r2, [r1, #8]
   19b38:	ldr	ip, [r2, #8]
   19b3c:	cmp	r1, ip
   19b40:	moveq	r1, #1
   19b44:	strne	ip, [r1, #8]
   19b48:	biceq	lr, lr, r1, lsl r3
   19b4c:	lsl	r3, r3, #3
   19b50:	strne	r1, [ip, #12]
   19b54:	add	r1, r2, r3
   19b58:	orr	r3, r3, #3
   19b5c:	streq	lr, [r0]
   19b60:	str	r3, [r2, #4]
   19b64:	ldr	r3, [r1, #4]
   19b68:	add	r2, r2, #8
   19b6c:	orr	r3, r3, #1
   19b70:	str	r3, [r1, #4]
   19b74:	mov	r0, r2
   19b78:	add	sp, sp, #12
   19b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b80:	ldr	ip, [r0, #8]
   19b84:	cmn	r1, #65	; 0x41
   19b88:	mov	lr, ip
   19b8c:	bls	19bc0 <_start@@Base+0x6810>
   19b90:	cmn	ip, #1
   19b94:	bne	19c6c <_start@@Base+0x68bc>
   19b98:	ldr	r2, [r0, #16]
   19b9c:	sub	r1, r2, #1
   19ba0:	mov	r3, #0
   19ba4:	str	r3, [r0, #8]
   19ba8:	str	r3, [r0, #16]
   19bac:	str	ip, [r2, #4]
   19bb0:	ldr	r3, [r1, #4]
   19bb4:	orr	r3, r3, #1
   19bb8:	str	r3, [r1, #4]
   19bbc:	b	19c5c <_start@@Base+0x68ac>
   19bc0:	ldr	r5, [r0, #4]
   19bc4:	add	r4, r1, #11
   19bc8:	cmp	r5, #0
   19bcc:	bic	r4, r4, #7
   19bd0:	bne	19d44 <_start@@Base+0x6994>
   19bd4:	cmp	r4, ip
   19bd8:	bls	19c28 <_start@@Base+0x6878>
   19bdc:	ldr	r3, [r0, #12]
   19be0:	cmp	r3, r4
   19be4:	bls	19ed0 <_start@@Base+0x6b20>
   19be8:	ldr	ip, [r0, #20]
   19bec:	sub	r3, r3, r4
   19bf0:	add	lr, ip, r4
   19bf4:	orr	r1, r3, #1
   19bf8:	orr	r4, r4, #3
   19bfc:	add	r2, ip, #8
   19c00:	str	r3, [r0, #12]
   19c04:	str	lr, [r0, #20]
   19c08:	str	r1, [lr, #4]
   19c0c:	mov	r0, r2
   19c10:	str	r4, [ip, #4]
   19c14:	add	sp, sp, #12
   19c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c1c:	ldr	ip, [r0, #8]
   19c20:	cmp	ip, r4
   19c24:	bcc	19c7c <_start@@Base+0x68cc>
   19c28:	sub	r3, ip, r4
   19c2c:	ldr	r2, [r0, #16]
   19c30:	cmp	r3, #15
   19c34:	add	r1, r2, ip
   19c38:	bls	1a398 <_start@@Base+0x6fe8>
   19c3c:	add	lr, r2, r4
   19c40:	orr	r1, r3, #1
   19c44:	orr	r4, r4, #3
   19c48:	str	r3, [r0, #8]
   19c4c:	str	lr, [r0, #16]
   19c50:	str	r1, [lr, #4]
   19c54:	str	r3, [r2, ip]
   19c58:	str	r4, [r2, #4]
   19c5c:	add	r2, r2, #8
   19c60:	mov	r0, r2
   19c64:	add	sp, sp, #12
   19c68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c6c:	mov	r2, #0
   19c70:	mov	r0, r2
   19c74:	add	sp, sp, #12
   19c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c7c:	cmp	r3, #0
   19c80:	beq	1a060 <_start@@Base+0x6cb0>
   19c84:	mov	r5, #1
   19c88:	lsl	r1, r5, r2
   19c8c:	lsl	r6, r1, r5
   19c90:	rsb	r1, r6, #0
   19c94:	orr	r1, r1, r6
   19c98:	and	r3, r1, r3, lsl r2
   19c9c:	rsb	r2, r3, #0
   19ca0:	and	r3, r3, r2
   19ca4:	clz	r3, r3
   19ca8:	rsb	r3, r3, #31
   19cac:	add	r1, r0, r3, lsl #3
   19cb0:	add	r1, r1, #32
   19cb4:	ldr	r2, [r1, #8]
   19cb8:	ldr	r6, [r2, #8]
   19cbc:	cmp	r1, r6
   19cc0:	biceq	lr, lr, r5, lsl r3
   19cc4:	strne	r6, [r1, #8]
   19cc8:	streq	lr, [r0]
   19ccc:	strne	r1, [r6, #12]
   19cd0:	add	lr, r2, r4
   19cd4:	rsb	r1, r4, r3, lsl #3
   19cd8:	orr	r5, r1, #1
   19cdc:	orr	r4, r4, #3
   19ce0:	cmp	ip, #0
   19ce4:	str	r4, [r2, #4]
   19ce8:	str	r5, [lr, #4]
   19cec:	str	r1, [r2, r3, lsl #3]
   19cf0:	beq	19d34 <_start@@Base+0x6984>
   19cf4:	lsr	ip, ip, #3
   19cf8:	mov	r4, #1
   19cfc:	ldr	r5, [r0]
   19d00:	lsl	r4, r4, ip
   19d04:	add	ip, r0, ip, lsl #3
   19d08:	add	r3, ip, #32
   19d0c:	tst	r5, r4
   19d10:	ldr	ip, [r0, #16]
   19d14:	orreq	r4, r5, r4
   19d18:	ldrne	r4, [r3, #8]
   19d1c:	streq	r4, [r0]
   19d20:	moveq	r4, r3
   19d24:	str	ip, [r3, #8]
   19d28:	str	ip, [r4, #12]
   19d2c:	str	r4, [ip, #8]
   19d30:	str	r3, [ip, #12]
   19d34:	str	r1, [r0, #8]
   19d38:	str	lr, [r0, #16]
   19d3c:	add	r2, r2, #8
   19d40:	b	19b74 <_start@@Base+0x67c4>
   19d44:	lsrs	r9, r4, #8
   19d48:	rsb	r8, r4, #0
   19d4c:	bne	1a2c4 <_start@@Base+0x6f14>
   19d50:	ldr	r6, [r0, #296]	; 0x128
   19d54:	cmp	r6, #0
   19d58:	moveq	r3, r8
   19d5c:	mvneq	r9, #1
   19d60:	beq	1a36c <_start@@Base+0x6fbc>
   19d64:	mov	r1, #25
   19d68:	lsl	r1, r4, r1
   19d6c:	mov	r7, #0
   19d70:	mov	r2, r7
   19d74:	b	19d7c <_start@@Base+0x69cc>
   19d78:	lsl	r1, r1, #1
   19d7c:	ldr	r3, [r6, #4]
   19d80:	bic	r3, r3, #3
   19d84:	sub	r3, r3, r4
   19d88:	cmp	r3, r8
   19d8c:	bcs	19da0 <_start@@Base+0x69f0>
   19d90:	cmp	r3, #0
   19d94:	beq	1a55c <_start@@Base+0x71ac>
   19d98:	mov	r8, r3
   19d9c:	mov	r2, r6
   19da0:	lsr	sl, r1, #31
   19da4:	add	sl, sl, #4
   19da8:	ldr	r3, [r6, #20]
   19dac:	ldr	r6, [r6, sl, lsl #2]
   19db0:	cmp	r3, #0
   19db4:	cmpne	r3, r6
   19db8:	movne	r7, r3
   19dbc:	cmp	r6, #0
   19dc0:	bne	19d78 <_start@@Base+0x69c8>
   19dc4:	cmp	r7, #0
   19dc8:	cmpeq	r2, #0
   19dcc:	beq	1a360 <_start@@Base+0x6fb0>
   19dd0:	cmp	r7, #0
   19dd4:	mov	r3, r8
   19dd8:	beq	19e10 <_start@@Base+0x6a60>
   19ddc:	mov	r6, r7
   19de0:	ldr	r1, [r6, #4]
   19de4:	ldr	r7, [r6, #16]
   19de8:	bic	r1, r1, #3
   19dec:	sub	r1, r1, r4
   19df0:	cmp	r1, r3
   19df4:	movcc	r3, r1
   19df8:	movcc	r2, r6
   19dfc:	cmp	r7, #0
   19e00:	bne	19ddc <_start@@Base+0x6a2c>
   19e04:	ldr	r7, [r6, #20]
   19e08:	cmp	r7, #0
   19e0c:	bne	19ddc <_start@@Base+0x6a2c>
   19e10:	cmp	r2, #0
   19e14:	beq	19bd4 <_start@@Base+0x6824>
   19e18:	sub	r1, lr, r4
   19e1c:	cmp	r1, r3
   19e20:	bls	19bd4 <_start@@Base+0x6824>
   19e24:	ldr	ip, [r2, #12]
   19e28:	ldr	r8, [r2, #24]
   19e2c:	cmp	r2, ip
   19e30:	beq	1a4c4 <_start@@Base+0x7114>
   19e34:	ldr	r1, [r2, #8]
   19e38:	str	ip, [r1, #12]
   19e3c:	str	r1, [ip, #8]
   19e40:	cmp	r8, #0
   19e44:	beq	19e9c <_start@@Base+0x6aec>
   19e48:	ldr	r1, [r2, #28]
   19e4c:	add	r1, r0, r1, lsl #2
   19e50:	ldr	r5, [r1, #296]	; 0x128
   19e54:	cmp	r2, r5
   19e58:	streq	ip, [r1, #296]	; 0x128
   19e5c:	beq	19e78 <_start@@Base+0x6ac8>
   19e60:	ldr	r1, [r8, #16]
   19e64:	cmp	r2, r1
   19e68:	streq	ip, [r8, #16]
   19e6c:	strne	ip, [r8, #20]
   19e70:	cmp	ip, #0
   19e74:	beq	19e9c <_start@@Base+0x6aec>
   19e78:	ldr	r1, [r2, #16]
   19e7c:	str	r8, [ip, #24]
   19e80:	cmp	r1, #0
   19e84:	strne	r1, [ip, #16]
   19e88:	strne	ip, [r1, #24]
   19e8c:	ldr	r1, [r2, #20]
   19e90:	cmp	r1, #0
   19e94:	strne	r1, [ip, #20]
   19e98:	strne	ip, [r1, #24]
   19e9c:	cmp	r3, #15
   19ea0:	bhi	1a300 <_start@@Base+0x6f50>
   19ea4:	add	r3, r4, r3
   19ea8:	add	ip, r2, r3
   19eac:	orr	r3, r3, #3
   19eb0:	ldr	r1, [ip, #4]
   19eb4:	str	r3, [r2, #4]
   19eb8:	orr	r3, r1, #1
   19ebc:	str	r3, [ip, #4]
   19ec0:	adds	r2, r2, #8
   19ec4:	bne	19b74 <_start@@Base+0x67c4>
   19ec8:	mov	ip, lr
   19ecc:	b	19bd4 <_start@@Base+0x6824>
   19ed0:	cmp	r4, #131072	; 0x20000
   19ed4:	mov	r5, r0
   19ed8:	bcs	1aa78 <_start@@Base+0x76c8>
   19edc:	add	r6, r4, #131072	; 0x20000
   19ee0:	add	r6, r6, #32
   19ee4:	lsr	r6, r6, #17
   19ee8:	lsl	r6, r6, #17
   19eec:	cmp	r6, r4
   19ef0:	bls	19c6c <_start@@Base+0x68bc>
   19ef4:	mov	r0, r6
   19ef8:	bl	19a9c <_start@@Base+0x66ec>
   19efc:	cmn	r0, #1
   19f00:	mov	r3, r0
   19f04:	beq	19c6c <_start@@Base+0x68bc>
   19f08:	ldr	ip, [r5, #424]	; 0x1a8
   19f0c:	ldr	r9, [r5, #428]	; 0x1ac
   19f10:	add	r0, r5, #424	; 0x1a8
   19f14:	add	r2, ip, r9
   19f18:	cmp	r3, r2
   19f1c:	mov	r8, r0
   19f20:	ldr	lr, [r5, #20]
   19f24:	beq	19fb8 <_start@@Base+0x6c08>
   19f28:	mov	r2, r0
   19f2c:	b	19f44 <_start@@Base+0x6b94>
   19f30:	ldr	r7, [r2]
   19f34:	ldr	r1, [r2, #4]
   19f38:	add	r1, r7, r1
   19f3c:	cmp	r3, r1
   19f40:	beq	19fc0 <_start@@Base+0x6c10>
   19f44:	ldr	r2, [r2, #8]
   19f48:	cmp	r2, #0
   19f4c:	bne	19f30 <_start@@Base+0x6b80>
   19f50:	add	r7, r3, r6
   19f54:	cmp	r7, ip
   19f58:	moveq	r7, ip
   19f5c:	moveq	r1, r0
   19f60:	beq	1a1c0 <_start@@Base+0x6e10>
   19f64:	mov	r1, r0
   19f68:	b	19f78 <_start@@Base+0x6bc8>
   19f6c:	ldr	r2, [r1]
   19f70:	cmp	r7, r2
   19f74:	beq	1a1bc <_start@@Base+0x6e0c>
   19f78:	ldr	r1, [r1, #8]
   19f7c:	cmp	r1, #0
   19f80:	bne	19f6c <_start@@Base+0x6bbc>
   19f84:	b	19f8c <_start@@Base+0x6bdc>
   19f88:	ldr	ip, [r8]
   19f8c:	cmp	lr, ip
   19f90:	bcc	19fa4 <_start@@Base+0x6bf4>
   19f94:	ldr	r2, [r8, #4]
   19f98:	add	ip, ip, r2
   19f9c:	cmp	ip, lr
   19fa0:	bhi	1a3a0 <_start@@Base+0x6ff0>
   19fa4:	ldr	r8, [r8, #8]
   19fa8:	cmp	r8, #0
   19fac:	bne	19f88 <_start@@Base+0x6bd8>
   19fb0:	ldr	r3, [r8]
   19fb4:	udf	#0
   19fb8:	mov	r7, ip
   19fbc:	mov	r2, r0
   19fc0:	cmp	lr, r7
   19fc4:	bcc	19f50 <_start@@Base+0x6ba0>
   19fc8:	ldr	r1, [r2, #4]
   19fcc:	add	r7, r7, r1
   19fd0:	cmp	lr, r7
   19fd4:	bcs	19f50 <_start@@Base+0x6ba0>
   19fd8:	add	r1, r6, r1
   19fdc:	ldr	r3, [r5, #12]
   19fe0:	str	r1, [r2, #4]
   19fe4:	add	r2, lr, #8
   19fe8:	tst	r2, #7
   19fec:	add	r6, r6, r3
   19ff0:	rsbne	r3, r2, #0
   19ff4:	andne	r3, r3, #7
   19ff8:	addne	r1, lr, r3
   19ffc:	moveq	r3, r6
   1a000:	subne	r3, r6, r3
   1a004:	moveq	r1, lr
   1a008:	orr	r2, r3, #1
   1a00c:	add	r6, lr, r6
   1a010:	str	r1, [r5, #20]
   1a014:	str	r3, [r5, #12]
   1a018:	mov	r0, #32
   1a01c:	str	r2, [r1, #4]
   1a020:	mov	r2, #2097152	; 0x200000
   1a024:	str	r0, [r6, #4]
   1a028:	str	r2, [r5, #24]
   1a02c:	cmp	r4, r3
   1a030:	bcs	19c6c <_start@@Base+0x68bc>
   1a034:	ldr	r1, [r5, #20]
   1a038:	sub	r3, r3, r4
   1a03c:	add	r0, r1, r4
   1a040:	orr	ip, r3, #1
   1a044:	orr	r4, r4, #3
   1a048:	str	r3, [r5, #12]
   1a04c:	str	r0, [r5, #20]
   1a050:	add	r2, r1, #8
   1a054:	str	ip, [r0, #4]
   1a058:	str	r4, [r1, #4]
   1a05c:	b	19b74 <_start@@Base+0x67c4>
   1a060:	ldr	r7, [r0, #4]
   1a064:	cmp	r7, #0
   1a068:	beq	19bdc <_start@@Base+0x682c>
   1a06c:	rsb	r3, r7, #0
   1a070:	and	r3, r3, r7
   1a074:	clz	r3, r3
   1a078:	rsb	r3, r3, #105	; 0x69
   1a07c:	ldr	r6, [r0, r3, lsl #2]
   1a080:	mov	r2, r6
   1a084:	ldr	r5, [r6, #4]
   1a088:	bic	r5, r5, #3
   1a08c:	sub	r5, r5, r4
   1a090:	b	1a0b0 <_start@@Base+0x6d00>
   1a094:	ldr	r3, [r1, #4]
   1a098:	mov	r6, r1
   1a09c:	bic	r3, r3, #3
   1a0a0:	sub	r3, r3, r4
   1a0a4:	cmp	r3, r5
   1a0a8:	movcc	r5, r3
   1a0ac:	movcc	r2, r1
   1a0b0:	ldr	r1, [r6, #16]
   1a0b4:	cmp	r1, #0
   1a0b8:	bne	1a094 <_start@@Base+0x6ce4>
   1a0bc:	ldr	r1, [r6, #20]
   1a0c0:	cmp	r1, #0
   1a0c4:	bne	1a094 <_start@@Base+0x6ce4>
   1a0c8:	ldr	r1, [r2, #12]
   1a0cc:	ldr	r8, [r2, #24]
   1a0d0:	cmp	r1, r2
   1a0d4:	beq	1a8f4 <_start@@Base+0x7544>
   1a0d8:	ldr	r3, [r2, #8]
   1a0dc:	str	r1, [r3, #12]
   1a0e0:	str	r3, [r1, #8]
   1a0e4:	cmp	r8, #0
   1a0e8:	beq	1a140 <_start@@Base+0x6d90>
   1a0ec:	ldr	r3, [r2, #28]
   1a0f0:	add	r3, r0, r3, lsl #2
   1a0f4:	ldr	r6, [r3, #296]	; 0x128
   1a0f8:	cmp	r6, r2
   1a0fc:	streq	r1, [r3, #296]	; 0x128
   1a100:	beq	1a11c <_start@@Base+0x6d6c>
   1a104:	ldr	r3, [r8, #16]
   1a108:	cmp	r3, r2
   1a10c:	streq	r1, [r8, #16]
   1a110:	strne	r1, [r8, #20]
   1a114:	cmp	r1, #0
   1a118:	beq	1a140 <_start@@Base+0x6d90>
   1a11c:	ldr	r3, [r2, #16]
   1a120:	str	r8, [r1, #24]
   1a124:	cmp	r3, #0
   1a128:	strne	r3, [r1, #16]
   1a12c:	strne	r1, [r3, #24]
   1a130:	ldr	r3, [r2, #20]
   1a134:	cmp	r3, #0
   1a138:	strne	r3, [r1, #20]
   1a13c:	strne	r1, [r3, #24]
   1a140:	cmp	r5, #15
   1a144:	bls	1a6ac <_start@@Base+0x72fc>
   1a148:	add	r3, r2, r4
   1a14c:	orr	r6, r4, #3
   1a150:	orr	r1, r5, #1
   1a154:	cmp	ip, #0
   1a158:	str	r6, [r2, #4]
   1a15c:	str	r1, [r3, #4]
   1a160:	str	r5, [r3, r5]
   1a164:	beq	1a1a4 <_start@@Base+0x6df4>
   1a168:	lsr	ip, ip, #3
   1a16c:	mov	r6, #1
   1a170:	add	r1, r0, ip, lsl #3
   1a174:	lsl	r6, r6, ip
   1a178:	add	r1, r1, #32
   1a17c:	tst	lr, r6
   1a180:	ldr	ip, [r0, #16]
   1a184:	orreq	lr, lr, r6
   1a188:	ldrne	lr, [r1, #8]
   1a18c:	streq	lr, [r0]
   1a190:	moveq	lr, r1
   1a194:	str	ip, [r1, #8]
   1a198:	str	ip, [lr, #12]
   1a19c:	str	lr, [ip, #8]
   1a1a0:	str	r1, [ip, #12]
   1a1a4:	str	r5, [r0, #8]
   1a1a8:	str	r3, [r0, #16]
   1a1ac:	adds	r2, r2, #8
   1a1b0:	ldreq	ip, [r0, #8]
   1a1b4:	bne	19b74 <_start@@Base+0x67c4>
   1a1b8:	b	19bd4 <_start@@Base+0x6824>
   1a1bc:	ldr	r9, [r1, #4]
   1a1c0:	add	r2, r3, #8
   1a1c4:	add	r6, r6, r9
   1a1c8:	tst	r2, #7
   1a1cc:	stm	r1, {r3, r6}
   1a1d0:	rsbne	r2, r2, #0
   1a1d4:	andne	r2, r2, #7
   1a1d8:	addne	r3, r3, r2
   1a1dc:	addne	r2, r3, #8
   1a1e0:	add	r1, r7, #8
   1a1e4:	tst	r1, #7
   1a1e8:	rsbne	r1, r1, #0
   1a1ec:	andne	r1, r1, #7
   1a1f0:	addne	r7, r7, r1
   1a1f4:	orr	r0, r4, #3
   1a1f8:	sub	r1, r7, r3
   1a1fc:	cmp	lr, r7
   1a200:	sub	r1, r1, r4
   1a204:	str	r0, [r3, #4]
   1a208:	add	r4, r3, r4
   1a20c:	beq	1a2e4 <_start@@Base+0x6f34>
   1a210:	ldr	r3, [r5, #16]
   1a214:	cmp	r3, r7
   1a218:	beq	1a68c <_start@@Base+0x72dc>
   1a21c:	ldr	r3, [r7, #4]
   1a220:	tst	r3, #2
   1a224:	bne	1a268 <_start@@Base+0x6eb8>
   1a228:	bic	r3, r3, #3
   1a22c:	ldr	lr, [r7, #12]
   1a230:	lsr	r0, r3, #3
   1a234:	cmp	r0, #31
   1a238:	bhi	1a818 <_start@@Base+0x7468>
   1a23c:	ldr	ip, [r7, #8]
   1a240:	cmp	ip, lr
   1a244:	moveq	lr, #1
   1a248:	ldreq	ip, [r5]
   1a24c:	strne	lr, [ip, #12]
   1a250:	biceq	r0, ip, lr, lsl r0
   1a254:	strne	ip, [lr, #8]
   1a258:	streq	r0, [r5]
   1a25c:	add	r7, r7, r3
   1a260:	add	r1, r1, r3
   1a264:	ldr	r3, [r7, #4]
   1a268:	bic	r3, r3, #1
   1a26c:	lsr	r0, r1, #3
   1a270:	str	r3, [r7, #4]
   1a274:	cmp	r0, #31
   1a278:	orr	r3, r1, #1
   1a27c:	str	r3, [r4, #4]
   1a280:	str	r1, [r4, r1]
   1a284:	bhi	1a5d4 <_start@@Base+0x7224>
   1a288:	mov	r1, #1
   1a28c:	ldr	ip, [r5]
   1a290:	lsl	r1, r1, r0
   1a294:	add	r3, r5, r0, lsl #3
   1a298:	tst	ip, r1
   1a29c:	add	r3, r3, #32
   1a2a0:	orreq	r1, ip, r1
   1a2a4:	ldrne	r1, [r3, #8]
   1a2a8:	streq	r1, [r5]
   1a2ac:	moveq	r1, r3
   1a2b0:	str	r4, [r3, #8]
   1a2b4:	str	r4, [r1, #12]
   1a2b8:	str	r1, [r4, #8]
   1a2bc:	str	r3, [r4, #12]
   1a2c0:	b	19b74 <_start@@Base+0x67c4>
   1a2c4:	cmp	r9, #65536	; 0x10000
   1a2c8:	bcc	1a51c <_start@@Base+0x716c>
   1a2cc:	ldr	r6, [r0, #420]	; 0x1a4
   1a2d0:	cmp	r6, #0
   1a2d4:	movne	r1, r4
   1a2d8:	movne	r9, #31
   1a2dc:	bne	19d6c <_start@@Base+0x69bc>
   1a2e0:	b	19bd4 <_start@@Base+0x6824>
   1a2e4:	ldr	r3, [r5, #12]
   1a2e8:	str	r4, [r5, #20]
   1a2ec:	add	r1, r1, r3
   1a2f0:	orr	r3, r1, #1
   1a2f4:	str	r1, [r5, #12]
   1a2f8:	str	r3, [r4, #4]
   1a2fc:	b	19b74 <_start@@Base+0x67c4>
   1a300:	add	ip, r2, r4
   1a304:	orr	r5, r4, #3
   1a308:	lsr	r1, r3, #3
   1a30c:	str	r5, [r2, #4]
   1a310:	cmp	r1, #31
   1a314:	orr	r5, r3, #1
   1a318:	str	r5, [ip, #4]
   1a31c:	str	r3, [ip, r3]
   1a320:	bhi	1a564 <_start@@Base+0x71b4>
   1a324:	mov	r3, #1
   1a328:	ldr	r5, [r0]
   1a32c:	lsl	r3, r3, r1
   1a330:	add	r1, r0, r1, lsl #3
   1a334:	tst	r5, r3
   1a338:	add	r1, r1, #32
   1a33c:	orreq	r3, r5, r3
   1a340:	ldrne	r3, [r1, #8]
   1a344:	streq	r3, [r0]
   1a348:	moveq	r3, r1
   1a34c:	str	ip, [r1, #8]
   1a350:	str	ip, [r3, #12]
   1a354:	str	r3, [ip, #8]
   1a358:	str	r1, [ip, #12]
   1a35c:	b	19ec0 <_start@@Base+0x6b10>
   1a360:	mvn	r2, #1
   1a364:	mov	r3, r8
   1a368:	lsl	r9, r2, r9
   1a36c:	ands	r9, r5, r9
   1a370:	beq	19bd4 <_start@@Base+0x6824>
   1a374:	rsb	r2, r9, #0
   1a378:	and	r9, r9, r2
   1a37c:	clz	r2, r9
   1a380:	rsb	r2, r2, #105	; 0x69
   1a384:	ldr	r6, [r0, r2, lsl #2]
   1a388:	cmp	r6, #0
   1a38c:	movne	r2, #0
   1a390:	bne	19de0 <_start@@Base+0x6a30>
   1a394:	b	19bd4 <_start@@Base+0x6824>
   1a398:	orr	ip, ip, #3
   1a39c:	b	19ba0 <_start@@Base+0x67f0>
   1a3a0:	sub	r2, ip, #31
   1a3a4:	tst	r2, #7
   1a3a8:	rsbne	r8, r2, #0
   1a3ac:	andne	r8, r8, #7
   1a3b0:	subne	r8, r8, #39	; 0x27
   1a3b4:	mvneq	r8, #38	; 0x26
   1a3b8:	add	r8, ip, r8
   1a3bc:	add	r7, lr, #16
   1a3c0:	add	r2, r3, #8
   1a3c4:	cmp	r8, r7
   1a3c8:	movcc	r8, lr
   1a3cc:	addcs	r7, r8, #16
   1a3d0:	tst	r2, #7
   1a3d4:	rsbne	r9, r2, #0
   1a3d8:	andne	r9, r9, #7
   1a3dc:	addne	r2, r3, r9
   1a3e0:	add	r7, r7, #4
   1a3e4:	sub	fp, r6, #32
   1a3e8:	strne	r2, [sp, #4]
   1a3ec:	str	r7, [sp]
   1a3f0:	streq	r3, [sp, #4]
   1a3f4:	ldr	r7, [sp, #4]
   1a3f8:	subne	r9, fp, r9
   1a3fc:	moveq	r9, fp
   1a400:	ldm	r0, {r0, r1, r2}
   1a404:	add	fp, r3, fp
   1a408:	str	r9, [r5, #12]
   1a40c:	orr	r9, r9, #1
   1a410:	str	r7, [r5, #20]
   1a414:	str	r9, [r7, #4]
   1a418:	mov	r9, #32
   1a41c:	ldr	r7, [sp]
   1a420:	str	r9, [fp, #4]
   1a424:	add	sl, r8, #8
   1a428:	mov	fp, #2097152	; 0x200000
   1a42c:	mov	r9, #7
   1a430:	str	fp, [r5, #24]
   1a434:	mov	fp, #19
   1a438:	str	fp, [r8, #4]
   1a43c:	stm	sl, {r0, r1, r2}
   1a440:	str	r3, [r5, #424]	; 0x1a8
   1a444:	str	r6, [r5, #428]	; 0x1ac
   1a448:	str	sl, [r5, #432]	; 0x1b0
   1a44c:	str	r9, [r7], #4
   1a450:	cmp	ip, r7
   1a454:	bhi	1a44c <_start@@Base+0x709c>
   1a458:	cmp	r8, lr
   1a45c:	beq	1a4bc <_start@@Base+0x710c>
   1a460:	sub	r1, r8, lr
   1a464:	ldr	r2, [r8, #4]
   1a468:	lsr	r3, r1, #3
   1a46c:	bic	r2, r2, #1
   1a470:	str	r2, [r8, #4]
   1a474:	cmp	r3, #31
   1a478:	orr	r2, r1, #1
   1a47c:	str	r2, [lr, #4]
   1a480:	str	r1, [r8]
   1a484:	bhi	1a6cc <_start@@Base+0x731c>
   1a488:	mov	r2, #1
   1a48c:	ldr	r1, [r5]
   1a490:	lsl	r2, r2, r3
   1a494:	add	r3, r5, r3, lsl #3
   1a498:	tst	r1, r2
   1a49c:	add	r3, r3, #32
   1a4a0:	orreq	r2, r1, r2
   1a4a4:	ldrne	r2, [r3, #8]
   1a4a8:	streq	r2, [r5]
   1a4ac:	moveq	r2, r3
   1a4b0:	str	lr, [r3, #8]
   1a4b4:	str	lr, [r2, #12]
   1a4b8:	strd	r2, [lr, #8]
   1a4bc:	ldr	r3, [r5, #12]
   1a4c0:	b	1a02c <_start@@Base+0x6c7c>
   1a4c4:	ldr	r6, [r2, #20]
   1a4c8:	cmp	r6, #0
   1a4cc:	addne	r1, r2, #20
   1a4d0:	beq	1a890 <_start@@Base+0x74e0>
   1a4d4:	mov	ip, r6
   1a4d8:	mov	r7, r1
   1a4dc:	mov	r1, ip
   1a4e0:	ldr	r5, [r1, #20]!
   1a4e4:	cmp	r5, #0
   1a4e8:	beq	1a504 <_start@@Base+0x7154>
   1a4ec:	mov	ip, r5
   1a4f0:	mov	r7, r1
   1a4f4:	mov	r1, ip
   1a4f8:	ldr	r5, [r1, #20]!
   1a4fc:	cmp	r5, #0
   1a500:	bne	1a4ec <_start@@Base+0x713c>
   1a504:	mov	r1, ip
   1a508:	ldr	r6, [r1, #16]!
   1a50c:	cmp	r6, #0
   1a510:	bne	1a4d4 <_start@@Base+0x7124>
   1a514:	str	r6, [r7]
   1a518:	b	19e40 <_start@@Base+0x6a90>
   1a51c:	clz	r9, r9
   1a520:	eor	r9, r9, #31
   1a524:	add	r3, r9, #7
   1a528:	lsr	r3, r4, r3
   1a52c:	and	r3, r3, #1
   1a530:	add	r9, r3, r9, lsl #1
   1a534:	add	r3, r9, #74	; 0x4a
   1a538:	ldr	r6, [r0, r3, lsl #2]
   1a53c:	cmp	r6, #0
   1a540:	beq	1a360 <_start@@Base+0x6fb0>
   1a544:	cmp	r9, #31
   1a548:	moveq	r1, r4
   1a54c:	beq	19d6c <_start@@Base+0x69bc>
   1a550:	lsr	r1, r9, #1
   1a554:	rsb	r1, r1, #25
   1a558:	b	19d68 <_start@@Base+0x69b8>
   1a55c:	mov	r2, r6
   1a560:	b	19de0 <_start@@Base+0x6a30>
   1a564:	lsr	r1, r3, #8
   1a568:	cmp	r1, #65536	; 0x10000
   1a56c:	bcs	1a7f0 <_start@@Base+0x7440>
   1a570:	clz	r1, r1
   1a574:	eor	r5, r1, #31
   1a578:	add	r1, r5, #7
   1a57c:	mov	r7, #1
   1a580:	lsr	r1, r3, r1
   1a584:	and	r1, r1, r7
   1a588:	add	r1, r1, r5, lsl r7
   1a58c:	add	r9, r1, #74	; 0x4a
   1a590:	lsl	r7, r7, r1
   1a594:	lsl	r8, r9, #2
   1a598:	ldr	r5, [r0, #4]
   1a59c:	mov	r6, #0
   1a5a0:	tst	r5, r7
   1a5a4:	str	r1, [ip, #28]
   1a5a8:	str	r6, [ip, #20]
   1a5ac:	str	r6, [ip, #16]
   1a5b0:	bne	1a788 <_start@@Base+0x73d8>
   1a5b4:	orr	r5, r5, r7
   1a5b8:	add	r8, r0, r8
   1a5bc:	str	r5, [r0, #4]
   1a5c0:	str	ip, [r0, r9, lsl #2]
   1a5c4:	str	r8, [ip, #24]
   1a5c8:	str	ip, [ip, #12]
   1a5cc:	str	ip, [ip, #8]
   1a5d0:	b	19ec0 <_start@@Base+0x6b10>
   1a5d4:	lsr	r3, r1, #8
   1a5d8:	cmp	r3, #65536	; 0x10000
   1a5dc:	bcs	1a804 <_start@@Base+0x7454>
   1a5e0:	clz	r3, r3
   1a5e4:	eor	r0, r3, #31
   1a5e8:	add	r3, r0, #7
   1a5ec:	mov	lr, #1
   1a5f0:	lsr	r3, r1, r3
   1a5f4:	and	r3, r3, lr
   1a5f8:	add	r3, r3, r0, lsl lr
   1a5fc:	add	r7, r3, #74	; 0x4a
   1a600:	lsl	lr, lr, r3
   1a604:	lsl	r6, r7, #2
   1a608:	ldr	r0, [r5, #4]
   1a60c:	mov	ip, #0
   1a610:	tst	r0, lr
   1a614:	str	r3, [r4, #28]
   1a618:	str	ip, [r4, #20]
   1a61c:	str	ip, [r4, #16]
   1a620:	beq	1a8d4 <_start@@Base+0x7524>
   1a624:	cmp	r3, #31
   1a628:	lsrne	r3, r3, #1
   1a62c:	rsbne	r3, r3, #25
   1a630:	ldr	ip, [r5, r7, lsl #2]
   1a634:	lslne	r3, r1, r3
   1a638:	moveq	r3, r1
   1a63c:	b	1a65c <_start@@Base+0x72ac>
   1a640:	lsr	r0, r3, #31
   1a644:	add	r0, r0, #4
   1a648:	lsl	r3, r3, #1
   1a64c:	ldr	lr, [ip, r0, lsl #2]
   1a650:	cmp	lr, #0
   1a654:	beq	1a980 <_start@@Base+0x75d0>
   1a658:	mov	ip, lr
   1a65c:	ldr	r0, [ip, #4]
   1a660:	bic	r0, r0, #3
   1a664:	cmp	r1, r0
   1a668:	bne	1a640 <_start@@Base+0x7290>
   1a66c:	ldr	r3, [ip, #8]
   1a670:	mov	r1, #0
   1a674:	str	r4, [r3, #12]
   1a678:	str	r4, [ip, #8]
   1a67c:	str	r3, [r4, #8]
   1a680:	str	ip, [r4, #12]
   1a684:	str	r1, [r4, #24]
   1a688:	b	19b74 <_start@@Base+0x67c4>
   1a68c:	ldr	r3, [r5, #8]
   1a690:	str	r4, [r5, #16]
   1a694:	add	r1, r1, r3
   1a698:	orr	r3, r1, #1
   1a69c:	str	r1, [r5, #8]
   1a6a0:	str	r3, [r4, #4]
   1a6a4:	str	r1, [r4, r1]
   1a6a8:	b	19b74 <_start@@Base+0x67c4>
   1a6ac:	add	r5, r4, r5
   1a6b0:	add	r1, r2, r5
   1a6b4:	orr	r5, r5, #3
   1a6b8:	ldr	r3, [r1, #4]
   1a6bc:	str	r5, [r2, #4]
   1a6c0:	orr	r3, r3, #1
   1a6c4:	str	r3, [r1, #4]
   1a6c8:	b	1a1ac <_start@@Base+0x6dfc>
   1a6cc:	lsr	r3, r1, #8
   1a6d0:	cmp	r3, #65536	; 0x10000
   1a6d4:	bcs	1a934 <_start@@Base+0x7584>
   1a6d8:	clz	r3, r3
   1a6dc:	eor	r2, r3, #31
   1a6e0:	add	r3, r2, #7
   1a6e4:	mov	ip, #1
   1a6e8:	lsr	r3, r1, r3
   1a6ec:	and	r3, r3, ip
   1a6f0:	add	r3, r3, r2, lsl ip
   1a6f4:	add	r7, r3, #74	; 0x4a
   1a6f8:	lsl	ip, ip, r3
   1a6fc:	lsl	r6, r7, #2
   1a700:	ldr	r2, [r5, #4]
   1a704:	mov	r0, #0
   1a708:	tst	r2, ip
   1a70c:	str	r3, [lr, #28]
   1a710:	str	r0, [lr, #20]
   1a714:	str	r0, [lr, #16]
   1a718:	beq	1a95c <_start@@Base+0x75ac>
   1a71c:	cmp	r3, #31
   1a720:	lsrne	r3, r3, #1
   1a724:	rsbne	r3, r3, #25
   1a728:	ldr	r0, [r5, r7, lsl #2]
   1a72c:	lslne	r3, r1, r3
   1a730:	moveq	r3, r1
   1a734:	b	1a754 <_start@@Base+0x73a4>
   1a738:	lsr	r2, r3, #31
   1a73c:	add	r2, r2, #4
   1a740:	lsl	r3, r3, #1
   1a744:	ldr	ip, [r0, r2, lsl #2]
   1a748:	cmp	ip, #0
   1a74c:	beq	1a994 <_start@@Base+0x75e4>
   1a750:	mov	r0, ip
   1a754:	ldr	r2, [r0, #4]
   1a758:	bic	r2, r2, #3
   1a75c:	cmp	r1, r2
   1a760:	bne	1a738 <_start@@Base+0x7388>
   1a764:	ldr	r2, [r0, #8]
   1a768:	mov	r1, #0
   1a76c:	ldr	r3, [r5, #12]
   1a770:	str	lr, [r2, #12]
   1a774:	str	lr, [r0, #8]
   1a778:	str	r2, [lr, #8]
   1a77c:	str	r0, [lr, #12]
   1a780:	str	r1, [lr, #24]
   1a784:	b	1a02c <_start@@Base+0x6c7c>
   1a788:	cmp	r1, #31
   1a78c:	lsrne	r1, r1, #1
   1a790:	rsbne	r1, r1, #25
   1a794:	ldr	r6, [r0, r9, lsl #2]
   1a798:	lslne	r1, r3, r1
   1a79c:	moveq	r1, r3
   1a7a0:	b	1a7c0 <_start@@Base+0x7410>
   1a7a4:	lsr	r5, r1, #31
   1a7a8:	add	r5, r5, #4
   1a7ac:	lsl	r1, r1, #1
   1a7b0:	ldr	r7, [r6, r5, lsl #2]
   1a7b4:	cmp	r7, #0
   1a7b8:	beq	1a948 <_start@@Base+0x7598>
   1a7bc:	mov	r6, r7
   1a7c0:	ldr	r5, [r6, #4]
   1a7c4:	bic	r5, r5, #3
   1a7c8:	cmp	r5, r3
   1a7cc:	bne	1a7a4 <_start@@Base+0x73f4>
   1a7d0:	ldr	r3, [r6, #8]
   1a7d4:	mov	r1, #0
   1a7d8:	str	ip, [r3, #12]
   1a7dc:	str	ip, [r6, #8]
   1a7e0:	str	r3, [ip, #8]
   1a7e4:	str	r6, [ip, #12]
   1a7e8:	str	r1, [ip, #24]
   1a7ec:	b	19ec0 <_start@@Base+0x6b10>
   1a7f0:	mov	r8, #420	; 0x1a4
   1a7f4:	mov	r7, #-2147483648	; 0x80000000
   1a7f8:	mov	r1, #31
   1a7fc:	mov	r9, #105	; 0x69
   1a800:	b	1a598 <_start@@Base+0x71e8>
   1a804:	mov	r6, #420	; 0x1a4
   1a808:	mov	lr, #-2147483648	; 0x80000000
   1a80c:	mov	r3, #31
   1a810:	mov	r7, #105	; 0x69
   1a814:	b	1a608 <_start@@Base+0x7258>
   1a818:	cmp	lr, r7
   1a81c:	ldr	r8, [r7, #24]
   1a820:	beq	1a9ac <_start@@Base+0x75fc>
   1a824:	ldr	r0, [r7, #8]
   1a828:	str	lr, [r0, #12]
   1a82c:	str	r0, [lr, #8]
   1a830:	cmp	r8, #0
   1a834:	beq	1a25c <_start@@Base+0x6eac>
   1a838:	ldr	r0, [r7, #28]
   1a83c:	add	r0, r5, r0, lsl #2
   1a840:	ldr	ip, [r0, #296]	; 0x128
   1a844:	cmp	ip, r7
   1a848:	streq	lr, [r0, #296]	; 0x128
   1a84c:	beq	1a868 <_start@@Base+0x74b8>
   1a850:	ldr	r0, [r8, #16]
   1a854:	cmp	r0, r7
   1a858:	streq	lr, [r8, #16]
   1a85c:	strne	lr, [r8, #20]
   1a860:	cmp	lr, #0
   1a864:	beq	1a25c <_start@@Base+0x6eac>
   1a868:	ldr	r0, [r7, #16]
   1a86c:	str	r8, [lr, #24]
   1a870:	cmp	r0, #0
   1a874:	strne	r0, [lr, #16]
   1a878:	strne	lr, [r0, #24]
   1a87c:	ldr	r0, [r7, #20]
   1a880:	cmp	r0, #0
   1a884:	strne	r0, [lr, #20]
   1a888:	strne	lr, [r0, #24]
   1a88c:	b	1a25c <_start@@Base+0x6eac>
   1a890:	ldr	r6, [r2, #16]
   1a894:	cmp	r6, #0
   1a898:	addne	r1, r2, #16
   1a89c:	bne	1a4d4 <_start@@Base+0x7124>
   1a8a0:	cmp	r8, #0
   1a8a4:	beq	19e9c <_start@@Base+0x6aec>
   1a8a8:	ldr	ip, [r2, #28]
   1a8ac:	add	r7, r0, ip, lsl #2
   1a8b0:	ldr	r1, [r7, #296]	; 0x128
   1a8b4:	cmp	r2, r1
   1a8b8:	movne	ip, r6
   1a8bc:	bne	19e60 <_start@@Base+0x6ab0>
   1a8c0:	mov	r1, #1
   1a8c4:	str	r6, [r7, #296]	; 0x128
   1a8c8:	bic	r5, r5, r1, lsl ip
   1a8cc:	str	r5, [r0, #4]
   1a8d0:	b	19e9c <_start@@Base+0x6aec>
   1a8d4:	orr	r0, r0, lr
   1a8d8:	add	r6, r5, r6
   1a8dc:	str	r0, [r5, #4]
   1a8e0:	str	r4, [r5, r7, lsl #2]
   1a8e4:	str	r6, [r4, #24]
   1a8e8:	str	r4, [r4, #12]
   1a8ec:	str	r4, [r4, #8]
   1a8f0:	b	19b74 <_start@@Base+0x67c4>
   1a8f4:	ldr	r6, [r2, #20]
   1a8f8:	cmp	r6, #0
   1a8fc:	addne	r3, r2, #20
   1a900:	beq	1a9ec <_start@@Base+0x763c>
   1a904:	mov	r7, r3
   1a908:	mov	r3, r6
   1a90c:	mov	r1, r6
   1a910:	ldr	r6, [r3, #20]!
   1a914:	cmp	r6, #0
   1a918:	bne	1a904 <_start@@Base+0x7554>
   1a91c:	mov	r3, r1
   1a920:	ldr	r6, [r3, #16]!
   1a924:	cmp	r6, #0
   1a928:	bne	1a904 <_start@@Base+0x7554>
   1a92c:	str	r6, [r7]
   1a930:	b	1a0e4 <_start@@Base+0x6d34>
   1a934:	mov	ip, #-2147483648	; 0x80000000
   1a938:	mov	r6, #420	; 0x1a4
   1a93c:	mov	r3, #31
   1a940:	mov	r7, #105	; 0x69
   1a944:	b	1a700 <_start@@Base+0x7350>
   1a948:	str	ip, [r6, r5, lsl #2]
   1a94c:	str	r6, [ip, #24]
   1a950:	str	ip, [ip, #12]
   1a954:	str	ip, [ip, #8]
   1a958:	b	19ec0 <_start@@Base+0x6b10>
   1a95c:	orr	r2, r2, ip
   1a960:	add	r6, r5, r6
   1a964:	str	r2, [r5, #4]
   1a968:	ldr	r3, [r5, #12]
   1a96c:	str	lr, [r5, r7, lsl #2]
   1a970:	str	r6, [lr, #24]
   1a974:	str	lr, [lr, #12]
   1a978:	str	lr, [lr, #8]
   1a97c:	b	1a02c <_start@@Base+0x6c7c>
   1a980:	str	r4, [ip, r0, lsl #2]
   1a984:	str	ip, [r4, #24]
   1a988:	str	r4, [r4, #12]
   1a98c:	str	r4, [r4, #8]
   1a990:	b	19b74 <_start@@Base+0x67c4>
   1a994:	str	lr, [r0, r2, lsl #2]
   1a998:	ldr	r3, [r5, #12]
   1a99c:	str	r0, [lr, #24]
   1a9a0:	str	lr, [lr, #12]
   1a9a4:	str	lr, [lr, #8]
   1a9a8:	b	1a02c <_start@@Base+0x6c7c>
   1a9ac:	ldr	ip, [r7, #20]
   1a9b0:	cmp	ip, #0
   1a9b4:	addne	r0, r7, #20
   1a9b8:	beq	1aa30 <_start@@Base+0x7680>
   1a9bc:	mov	r6, r0
   1a9c0:	mov	r0, ip
   1a9c4:	mov	lr, ip
   1a9c8:	ldr	ip, [r0, #20]!
   1a9cc:	cmp	ip, #0
   1a9d0:	bne	1a9bc <_start@@Base+0x760c>
   1a9d4:	mov	r0, lr
   1a9d8:	ldr	ip, [r0, #16]!
   1a9dc:	cmp	ip, #0
   1a9e0:	bne	1a9bc <_start@@Base+0x760c>
   1a9e4:	str	ip, [r6]
   1a9e8:	b	1a830 <_start@@Base+0x7480>
   1a9ec:	ldr	r6, [r2, #16]
   1a9f0:	cmp	r6, #0
   1a9f4:	addne	r3, r2, #16
   1a9f8:	bne	1a904 <_start@@Base+0x7554>
   1a9fc:	cmp	r8, #0
   1aa00:	beq	1a140 <_start@@Base+0x6d90>
   1aa04:	ldr	r3, [r2, #28]
   1aa08:	add	r1, r0, r3, lsl #2
   1aa0c:	ldr	r9, [r1, #296]	; 0x128
   1aa10:	cmp	r2, r9
   1aa14:	movne	r1, r6
   1aa18:	bne	1a104 <_start@@Base+0x6d54>
   1aa1c:	mov	r8, #1
   1aa20:	str	r6, [r1, #296]	; 0x128
   1aa24:	bic	r7, r7, r8, lsl r3
   1aa28:	str	r7, [r0, #4]
   1aa2c:	b	1a140 <_start@@Base+0x6d90>
   1aa30:	ldr	lr, [r7, #16]
   1aa34:	cmp	lr, #0
   1aa38:	movne	ip, lr
   1aa3c:	addne	r0, r7, #16
   1aa40:	bne	1a9bc <_start@@Base+0x760c>
   1aa44:	cmp	r8, #0
   1aa48:	beq	1a25c <_start@@Base+0x6eac>
   1aa4c:	ldr	ip, [r7, #28]
   1aa50:	add	r6, r5, ip, lsl #2
   1aa54:	ldr	r0, [r6, #296]	; 0x128
   1aa58:	cmp	r0, r7
   1aa5c:	bne	1a850 <_start@@Base+0x74a0>
   1aa60:	ldr	r0, [r5, #4]
   1aa64:	mov	r8, #1
   1aa68:	str	lr, [r6, #296]	; 0x128
   1aa6c:	bic	r0, r0, r8, lsl ip
   1aa70:	str	r0, [r5, #4]
   1aa74:	b	1a25c <_start@@Base+0x6eac>
   1aa78:	add	r6, r4, #4096	; 0x1000
   1aa7c:	add	r6, r6, #30
   1aa80:	bic	r6, r6, #4080	; 0xff0
   1aa84:	bic	r6, r6, #15
   1aa88:	cmp	r6, r4
   1aa8c:	bls	19edc <_start@@Base+0x6b2c>
   1aa90:	mov	r0, r6
   1aa94:	bl	19a9c <_start@@Base+0x66ec>
   1aa98:	cmn	r0, #1
   1aa9c:	beq	19edc <_start@@Base+0x6b2c>
   1aaa0:	add	r2, r0, #8
   1aaa4:	tst	r2, #7
   1aaa8:	rsbne	r1, r2, #0
   1aaac:	andne	r1, r1, #7
   1aab0:	subne	r6, r6, r1
   1aab4:	addne	r0, r0, r1
   1aab8:	sub	r3, r6, #16
   1aabc:	orrne	r1, r1, #1
   1aac0:	moveq	r1, #1
   1aac4:	add	ip, r0, r3
   1aac8:	addne	r2, r0, #8
   1aacc:	orr	r3, r3, #2
   1aad0:	add	r6, r0, r6
   1aad4:	str	r1, [r0]
   1aad8:	str	r3, [r0, #4]
   1aadc:	mov	r1, #7
   1aae0:	mov	r3, #0
   1aae4:	cmp	r2, #0
   1aae8:	str	r1, [ip, #4]
   1aaec:	str	r3, [r6, #-8]
   1aaf0:	bne	19b74 <_start@@Base+0x67c4>
   1aaf4:	b	19edc <_start@@Base+0x6b2c>
   1aaf8:	push	{r4, r5, r6, r7, r8, lr}
   1aafc:	mov	lr, #0
   1ab00:	ldr	r4, [r0, #8]
   1ab04:	mov	r3, lr
   1ab08:	mov	r2, #1
   1ab0c:	ldrb	ip, [r4, #113]	; 0x71
   1ab10:	ldrb	r7, [r4, #115]	; 0x73
   1ab14:	strb	lr, [r4, #115]	; 0x73
   1ab18:	orr	lr, ip, #48	; 0x30
   1ab1c:	strb	lr, [r4, #113]	; 0x71
   1ab20:	ldr	lr, [r0, #28]
   1ab24:	mov	r6, r0
   1ab28:	add	r1, r1, lr
   1ab2c:	and	r5, ip, #240	; 0xf0
   1ab30:	bl	6bc7c <luaL_openlibs@@Base+0x24bc>
   1ab34:	cmp	r0, #0
   1ab38:	bne	1ab5c <_start@@Base+0x77ac>
   1ab3c:	ldrb	r3, [r4, #113]	; 0x71
   1ab40:	ldrb	r2, [r4, #115]	; 0x73
   1ab44:	and	r3, r3, #15
   1ab48:	orr	r3, r3, r5
   1ab4c:	cmp	r2, #255	; 0xff
   1ab50:	strb	r3, [r4, #113]	; 0x71
   1ab54:	strbne	r7, [r4, #115]	; 0x73
   1ab58:	pop	{r4, r5, r6, r7, r8, pc}
   1ab5c:	ldr	r3, [r6, #20]
   1ab60:	ldr	r8, [pc, #72]	; 1abb0 <_start@@Base+0x7800>
   1ab64:	sub	r3, r3, #8
   1ab68:	str	r3, [r6, #20]
   1ab6c:	mov	r2, #19
   1ab70:	ldr	r3, [r8]
   1ab74:	mov	r1, #1
   1ab78:	ldr	r0, [pc, #52]	; 1abb4 <_start@@Base+0x7804>
   1ab7c:	bl	12d6c <fwrite@plt>
   1ab80:	ldr	r3, [r6, #20]
   1ab84:	ldr	r1, [r8]
   1ab88:	ldr	r2, [r3, #4]
   1ab8c:	cmn	r2, #5
   1ab90:	ldreq	r0, [r3]
   1ab94:	ldrne	r0, [pc, #28]	; 1abb8 <_start@@Base+0x7808>
   1ab98:	addeq	r0, r0, #16
   1ab9c:	bl	1303c <fputs@plt>
   1aba0:	ldr	r1, [r8]
   1aba4:	mov	r0, #10
   1aba8:	bl	12fac <fputc@plt>
   1abac:	b	1ab3c <_start@@Base+0x778c>
   1abb0:	andeq	r4, r8, r0, lsr #3
   1abb4:	strdeq	r2, [r7], -r4
   1abb8:	strdeq	r2, [r7], -r0
   1abbc:	sub	r2, r2, #33	; 0x21
   1abc0:	cmp	r2, #19
   1abc4:	ldrls	pc, [pc, r2, lsl #2]
   1abc8:	b	1ac24 <_start@@Base+0x7874>
   1abcc:	andeq	sl, r1, r8, lsr #24
   1abd0:	andeq	sl, r1, r0, lsr ip
   1abd4:	andeq	sl, r1, r8, lsr ip
   1abd8:	andeq	sl, r1, r0, asr #24
   1abdc:	andeq	sl, r1, ip, asr #24
   1abe0:	andeq	sl, r1, r8, asr ip
   1abe4:	andeq	sl, r1, r4, ror #24
   1abe8:	andeq	sl, r1, ip, ror ip
   1abec:	muleq	r1, r4, ip
   1abf0:	muleq	r1, ip, ip
   1abf4:	andeq	sl, r1, r4, lsr #25
   1abf8:	andeq	sl, r1, r4, lsr #24
   1abfc:	andeq	sl, r1, ip, lsr #25
   1ac00:	andeq	sl, r1, r4, lsr #24
   1ac04:			; <UNDEFINED> instruction: 0x0001acb0
   1ac08:	andeq	sl, r1, r4, lsr #24
   1ac0c:	andeq	sl, r1, r4, lsr #24
   1ac10:	andeq	sl, r1, r4, lsr #24
   1ac14:			; <UNDEFINED> instruction: 0x0001acb8
   1ac18:	andeq	sl, r1, ip, lsl ip
   1ac1c:	cmp	r0, r1
   1ac20:	movlt	r0, r1
   1ac24:	bx	lr
   1ac28:	and	r0, r0, r1
   1ac2c:	bx	lr
   1ac30:	orr	r0, r0, r1
   1ac34:	bx	lr
   1ac38:	eor	r0, r0, r1
   1ac3c:	bx	lr
   1ac40:	and	r1, r1, #31
   1ac44:	lsl	r0, r0, r1
   1ac48:	bx	lr
   1ac4c:	and	r1, r1, #31
   1ac50:	lsr	r0, r0, r1
   1ac54:	bx	lr
   1ac58:	and	r1, r1, #31
   1ac5c:	asr	r0, r0, r1
   1ac60:	bx	lr
   1ac64:	and	r3, r1, #31
   1ac68:	rsb	r1, r1, #0
   1ac6c:	lsl	r3, r0, r3
   1ac70:	and	r1, r1, #31
   1ac74:	orr	r0, r3, r0, lsr r1
   1ac78:	bx	lr
   1ac7c:	and	r3, r1, #31
   1ac80:	rsb	r1, r1, #0
   1ac84:	lsr	r3, r0, r3
   1ac88:	and	r1, r1, #31
   1ac8c:	orr	r0, r3, r0, lsl r1
   1ac90:	bx	lr
   1ac94:	add	r0, r0, r1
   1ac98:	bx	lr
   1ac9c:	sub	r0, r0, r1
   1aca0:	bx	lr
   1aca4:	mul	r0, r1, r0
   1aca8:	bx	lr
   1acac:	b	6d820 <luaL_openlibs@@Base+0x4060>
   1acb0:	rsb	r0, r0, #0
   1acb4:	bx	lr
   1acb8:	cmp	r0, r1
   1acbc:	movge	r0, r1
   1acc0:	bx	lr
   1acc4:	ldrb	r3, [r0, #132]	; 0x84
   1acc8:	tst	r3, #64	; 0x40
   1accc:	bne	1ace8 <_start@@Base+0x7938>
   1acd0:	ldrh	r2, [r0, #130]	; 0x82
   1acd4:	ldr	r3, [r0, #16]
   1acd8:	add	r1, r3, r2, lsl #3
   1acdc:	ldrb	r1, [r1, #5]
   1ace0:	cmp	r1, #23
   1ace4:	beq	1acf0 <_start@@Base+0x7940>
   1ace8:	mov	r0, #0
   1acec:	bx	lr
   1acf0:	push	{r4, lr}
   1acf4:	mov	r4, r0
   1acf8:	ldr	r0, [r3, r2, lsl #3]
   1acfc:	ldr	r1, [r4, #144]	; 0x90
   1ad00:	ldrb	r2, [r4, #125]	; 0x7d
   1ad04:	bl	1abbc <_start@@Base+0x780c>
   1ad08:	ldrb	r3, [r4, #125]	; 0x7d
   1ad0c:	subs	r3, r3, #33	; 0x21
   1ad10:	mvnne	r3, #0
   1ad14:	cmp	r0, r3
   1ad18:	beq	1ad24 <_start@@Base+0x7974>
   1ad1c:	mov	r0, #0
   1ad20:	pop	{r4, pc}
   1ad24:	ldrh	r3, [r4, #128]	; 0x80
   1ad28:	mov	r0, #1
   1ad2c:	strh	r3, [r4, #120]	; 0x78
   1ad30:	pop	{r4, pc}
   1ad34:	ldrh	r2, [r0, #130]	; 0x82
   1ad38:	ldr	r3, [r0, #16]
   1ad3c:	add	r1, r3, r2, lsl #3
   1ad40:	ldrb	r1, [r1, #5]
   1ad44:	cmp	r1, #23
   1ad48:	beq	1ad54 <_start@@Base+0x79a4>
   1ad4c:	mov	r0, #0
   1ad50:	bx	lr
   1ad54:	ldr	r1, [r3, r2, lsl #3]
   1ad58:	push	{r4, lr}
   1ad5c:	mov	r4, r0
   1ad60:	ldrb	r2, [r0, #133]	; 0x85
   1ad64:	mvn	r0, #0
   1ad68:	bl	1abbc <_start@@Base+0x780c>
   1ad6c:	ldr	r3, [r4, #144]	; 0x90
   1ad70:	cmp	r0, r3
   1ad74:	beq	1ad80 <_start@@Base+0x79d0>
   1ad78:	mov	r0, #0
   1ad7c:	pop	{r4, pc}
   1ad80:	ldrh	r0, [r4, #120]	; 0x78
   1ad84:	pop	{r4, pc}
   1ad88:	push	{r4, lr}
   1ad8c:	mov	r4, r0
   1ad90:	ldrb	r2, [r0, #125]	; 0x7d
   1ad94:	ldr	r1, [r0, #144]	; 0x90
   1ad98:	ldr	r0, [r0, #128]	; 0x80
   1ad9c:	bl	1abbc <_start@@Base+0x780c>
   1ada0:	str	r0, [r4, #120]	; 0x78
   1ada4:	mov	r0, #2
   1ada8:	pop	{r4, pc}
   1adac:	push	{r4, r5, r6, r7, r8, lr}
   1adb0:	add	r4, r0, #16
   1adb4:	ldr	r5, [r0, #12]
   1adb8:	add	r5, r4, r5
   1adbc:	cmp	r4, r5
   1adc0:	bcs	1adfc <_start@@Base+0x7a4c>
   1adc4:	ldr	r7, [pc, #64]	; 1ae0c <_start@@Base+0x7a5c>
   1adc8:	ldr	r6, [pc, #64]	; 1ae10 <_start@@Base+0x7a60>
   1adcc:	ldrb	r3, [r4], #1
   1add0:	mov	r0, r6
   1add4:	mov	r1, r3
   1add8:	add	r3, r7, r3
   1addc:	ldrb	r3, [r3, #189]	; 0xbd
   1ade0:	tst	r3, #4
   1ade4:	beq	1adf4 <_start@@Base+0x7a44>
   1ade8:	bl	12e8c <strchr@plt>
   1adec:	cmp	r0, #0
   1adf0:	bne	1ae04 <_start@@Base+0x7a54>
   1adf4:	cmp	r5, r4
   1adf8:	bne	1adcc <_start@@Base+0x7a1c>
   1adfc:	mov	r0, #0
   1ae00:	pop	{r4, r5, r6, r7, r8, pc}
   1ae04:	mov	r0, #1
   1ae08:	pop	{r4, r5, r6, r7, r8, pc}
   1ae0c:			; <UNDEFINED> instruction: 0x0006ecb8
   1ae10:	andeq	r2, r7, r8, lsl #24
   1ae14:	push	{r4, r5, r6, lr}
   1ae18:	mov	r4, r1
   1ae1c:	ldr	r0, [r1]
   1ae20:	mov	r6, r2
   1ae24:	bl	12e5c <feof@plt>
   1ae28:	cmp	r0, #0
   1ae2c:	bne	1ae5c <_start@@Base+0x7aac>
   1ae30:	add	r5, r4, #4
   1ae34:	ldr	r3, [r4]
   1ae38:	mov	r0, r5
   1ae3c:	mov	r2, #8192	; 0x2000
   1ae40:	mov	r1, #1
   1ae44:	bl	12d90 <fread@plt>
   1ae48:	cmp	r0, #0
   1ae4c:	str	r0, [r6]
   1ae50:	beq	1ae5c <_start@@Base+0x7aac>
   1ae54:	mov	r0, r5
   1ae58:	pop	{r4, r5, r6, pc}
   1ae5c:	mov	r5, #0
   1ae60:	mov	r0, r5
   1ae64:	pop	{r4, r5, r6, pc}
   1ae68:	push	{r4, lr}
   1ae6c:	mov	r4, r0
   1ae70:	bl	12e2c <clock@plt>
   1ae74:	vldr	d6, [pc, #36]	; 1aea0 <_start@@Base+0x7af0>
   1ae78:	ldr	r3, [r4, #20]
   1ae7c:	add	r2, r3, #8
   1ae80:	str	r2, [r4, #20]
   1ae84:	vmov	s15, r0
   1ae88:	mov	r0, #1
   1ae8c:	vcvt.f64.s32	d7, s15
   1ae90:	vmul.f64	d7, d7, d6
   1ae94:	vstr	d7, [r3]
   1ae98:	pop	{r4, pc}
   1ae9c:	nop			; (mov r0, r0)
   1aea0:	adcsge	lr, r5, sp, lsl #27
   1aea4:	mrccc	6, 5, ip, cr0, cr7, {7}
   1aea8:	ldr	r3, [r0, #16]
   1aeac:	ldr	r2, [r0, #20]
   1aeb0:	cmp	r2, r3
   1aeb4:	bls	1aec4 <_start@@Base+0x7b14>
   1aeb8:	ldr	r2, [r3, #4]
   1aebc:	cmn	r2, #13
   1aec0:	beq	1aecc <_start@@Base+0x7b1c>
   1aec4:	mov	r0, #0
   1aec8:	bx	lr
   1aecc:	push	{r4, lr}
   1aed0:	ldr	r4, [r3]
   1aed4:	ldrb	r3, [r4, #6]
   1aed8:	cmp	r3, #2
   1aedc:	beq	1aee8 <_start@@Base+0x7b38>
   1aee0:	mov	r0, #0
   1aee4:	pop	{r4, pc}
   1aee8:	ldr	r0, [r4, #24]
   1aeec:	cmp	r0, #0
   1aef0:	beq	1aef8 <_start@@Base+0x7b48>
   1aef4:	bl	12d24 <dlclose@plt>
   1aef8:	mov	r3, #0
   1aefc:	str	r3, [r4, #24]
   1af00:	b	1aee0 <_start@@Base+0x7b30>
   1af04:	ldr	r3, [r0, #4]
   1af08:	add	r2, r3, #4
   1af0c:	cmn	r2, #10
   1af10:	bls	1af48 <_start@@Base+0x7b98>
   1af14:	ldr	r0, [r0]
   1af18:	cmn	r3, #5
   1af1c:	ldrb	r2, [r0, #4]
   1af20:	beq	1af58 <_start@@Base+0x7ba8>
   1af24:	tst	r2, #3
   1af28:	bne	1af50 <_start@@Base+0x7ba0>
   1af2c:	cmn	r3, #13
   1af30:	movne	r0, #0
   1af34:	moveq	r0, #1
   1af38:	ands	r0, r1, r0
   1af3c:	lsrne	r0, r2, #3
   1af40:	andne	r0, r0, #1
   1af44:	bx	lr
   1af48:	mov	r0, #0
   1af4c:	bx	lr
   1af50:	mov	r0, #1
   1af54:	bx	lr
   1af58:	bic	r2, r2, #3
   1af5c:	strb	r2, [r0, #4]
   1af60:	mov	r0, #0
   1af64:	bx	lr
   1af68:	ldr	r3, [r2, #4]
   1af6c:	cmn	r3, #5
   1af70:	beq	1afdc <_start@@Base+0x7c2c>
   1af74:	cmn	r3, #15
   1af78:	bls	1afb4 <_start@@Base+0x7c04>
   1af7c:	add	ip, r3, #3
   1af80:	cmp	ip, #1
   1af84:	bls	1aff4 <_start@@Base+0x7c44>
   1af88:	ldr	r3, [r2]
   1af8c:	ldr	r2, [pc, #120]	; 1b00c <_start@@Base+0x7c5c>
   1af90:	add	r2, r3, r2
   1af94:	eor	r3, r3, r2
   1af98:	sub	r3, r3, r2, ror #18
   1af9c:	eor	r2, r3, r2, ror #13
   1afa0:	sub	r2, r2, r3, ror #19
   1afa4:	and	r1, r1, r2
   1afa8:	add	r1, r1, r1, lsl #1
   1afac:	add	r0, r0, r1, lsl #3
   1afb0:	bx	lr
   1afb4:	ldr	r2, [r2]
   1afb8:	lsl	r3, r3, #1
   1afbc:	eor	r2, r2, r3
   1afc0:	sub	r2, r2, r3, ror #18
   1afc4:	eor	r3, r2, r3, ror #13
   1afc8:	sub	r3, r3, r2, ror #19
   1afcc:	and	r1, r1, r3
   1afd0:	add	r1, r1, r1, lsl #1
   1afd4:	add	r0, r0, r1, lsl #3
   1afd8:	bx	lr
   1afdc:	ldr	r3, [r2]
   1afe0:	ldr	r3, [r3, #8]
   1afe4:	and	r1, r1, r3
   1afe8:	add	r1, r1, r1, lsl #1
   1afec:	add	r0, r0, r1, lsl #3
   1aff0:	bx	lr
   1aff4:	mvn	r2, #1
   1aff8:	sub	r3, r2, r3
   1affc:	and	r1, r1, r3
   1b000:	add	r1, r1, r1, lsl #1
   1b004:	add	r0, r0, r1, lsl #3
   1b008:	bx	lr
   1b00c:	blx	fd393a <__bss_end__@@Base+0xf4f6c2>
   1b010:	ldr	ip, [r1, #4]
   1b014:	cmn	ip, #12
   1b018:	beq	1b048 <_start@@Base+0x7c98>
   1b01c:	cmn	ip, #13
   1b020:	beq	1b048 <_start@@Base+0x7c98>
   1b024:	cmn	ip, #14
   1b028:	rsbhi	ip, ip, #21
   1b02c:	movls	ip, #35	; 0x23
   1b030:	add	ip, ip, #58	; 0x3a
   1b034:	ldr	ip, [r0, ip, lsl #2]
   1b038:	cmp	ip, #0
   1b03c:	bne	1b058 <_start@@Base+0x7ca8>
   1b040:	add	r0, r0, #144	; 0x90
   1b044:	bx	lr
   1b048:	ldr	r3, [r1]
   1b04c:	ldr	ip, [r3, #16]
   1b050:	cmp	ip, #0
   1b054:	beq	1b040 <_start@@Base+0x7c90>
   1b058:	add	r3, r2, #58	; 0x3a
   1b05c:	ldr	r2, [ip, #28]
   1b060:	ldr	r1, [r0, r3, lsl #2]
   1b064:	ldr	r3, [ip, #20]
   1b068:	ldr	ip, [r1, #8]
   1b06c:	and	r2, r2, ip
   1b070:	add	r2, r2, r2, lsl #1
   1b074:	add	r3, r3, r2, lsl #3
   1b078:	b	1b088 <_start@@Base+0x7cd8>
   1b07c:	ldr	r3, [r3, #16]
   1b080:	cmp	r3, #0
   1b084:	beq	1b040 <_start@@Base+0x7c90>
   1b088:	ldr	r2, [r3, #12]
   1b08c:	cmn	r2, #5
   1b090:	bne	1b07c <_start@@Base+0x7ccc>
   1b094:	ldr	r2, [r3, #8]
   1b098:	cmp	r1, r2
   1b09c:	bne	1b07c <_start@@Base+0x7ccc>
   1b0a0:	mov	r0, r3
   1b0a4:	bx	lr
   1b0a8:	ldr	ip, [r0, #-8]
   1b0ac:	push	{r4, r5, lr}
   1b0b0:	ldrb	r5, [ip, #6]
   1b0b4:	ldr	r4, [sp, #12]
   1b0b8:	ldr	lr, [sp, #16]
   1b0bc:	cmp	r5, #0
   1b0c0:	ldreq	r1, [ip, #16]
   1b0c4:	ldrbeq	r1, [r1, #-57]	; 0xffffffc7
   1b0c8:	addeq	r1, r0, r1, lsl #3
   1b0cc:	mvn	r0, #3
   1b0d0:	str	r0, [r1, #4]
   1b0d4:	str	r2, [r1]
   1b0d8:	ldrd	r2, [r3]
   1b0dc:	add	r0, r1, #16
   1b0e0:	strd	r2, [r1, #8]
   1b0e4:	ldrd	r2, [r4]
   1b0e8:	strd	r2, [r1, #16]
   1b0ec:	ldrd	r2, [lr]
   1b0f0:	strd	r2, [r1, #24]
   1b0f4:	pop	{r4, r5, pc}
   1b0f8:	cmp	r2, #0
   1b0fc:	push	{r4, r5, lr}
   1b100:	beq	1b1cc <_start@@Base+0x7e1c>
   1b104:	ldr	r3, [r2, #4]
   1b108:	tst	r3, #3
   1b10c:	beq	1b1a4 <_start@@Base+0x7df4>
   1b110:	and	r3, r3, #7
   1b114:	cmp	r3, #2
   1b118:	ldreq	r3, [r2, #-4]
   1b11c:	beq	1b1a4 <_start@@Base+0x7df4>
   1b120:	ldr	r3, [r0, #40]	; 0x28
   1b124:	ldr	r4, [r0, #16]
   1b128:	bics	r3, r3, #3
   1b12c:	sub	r4, r4, #8
   1b130:	bne	1b154 <_start@@Base+0x7da4>
   1b134:	b	1b198 <_start@@Base+0x7de8>
   1b138:	ldr	ip, [r0, #28]
   1b13c:	sub	ip, ip, lr
   1b140:	cmp	r4, ip
   1b144:	bcs	1b160 <_start@@Base+0x7db0>
   1b148:	ldr	r3, [r3, #16]
   1b14c:	bics	r3, r3, #3
   1b150:	beq	1b198 <_start@@Base+0x7de8>
   1b154:	ldr	lr, [r3, #20]
   1b158:	cmp	lr, #0
   1b15c:	blt	1b138 <_start@@Base+0x7d88>
   1b160:	cmp	r2, r4
   1b164:	bhi	1b1a0 <_start@@Base+0x7df0>
   1b168:	ldr	ip, [r4, #4]
   1b16c:	ands	r5, ip, #3
   1b170:	beq	1b1ec <_start@@Base+0x7e3c>
   1b174:	cmp	r5, #1
   1b178:	beq	1b208 <_start@@Base+0x7e58>
   1b17c:	and	lr, ip, #7
   1b180:	cmp	lr, #2
   1b184:	beq	1b1fc <_start@@Base+0x7e4c>
   1b188:	bic	ip, ip, #7
   1b18c:	cmp	r3, #0
   1b190:	sub	r4, r4, ip
   1b194:	bne	1b154 <_start@@Base+0x7da4>
   1b198:	mvn	r0, #0
   1b19c:	pop	{r4, r5, pc}
   1b1a0:	ldr	r3, [r3, #8]
   1b1a4:	ldr	r2, [r1]
   1b1a8:	sub	r0, r3, r2
   1b1ac:	ldr	r1, [r2, #-56]	; 0xffffffc8
   1b1b0:	asr	r0, r0, #2
   1b1b4:	sub	r0, r0, #1
   1b1b8:	cmp	r0, r1
   1b1bc:	ldrhi	r0, [r3, #-8]
   1b1c0:	subhi	r0, r0, r2
   1b1c4:	asrhi	r0, r0, #2
   1b1c8:	pop	{r4, r5, pc}
   1b1cc:	ldr	r3, [r0, #40]	; 0x28
   1b1d0:	bics	r2, r3, #3
   1b1d4:	beq	1b198 <_start@@Base+0x7de8>
   1b1d8:	ldr	r3, [r2, #8]
   1b1dc:	ldr	r2, [r2, #12]
   1b1e0:	cmp	r3, r2
   1b1e4:	bne	1b1a4 <_start@@Base+0x7df4>
   1b1e8:	b	1b198 <_start@@Base+0x7de8>
   1b1ec:	ldrb	ip, [ip, #-3]
   1b1f0:	add	ip, ip, #1
   1b1f4:	sub	r4, r4, ip, lsl #3
   1b1f8:	b	1b158 <_start@@Base+0x7da8>
   1b1fc:	ldr	lr, [r4, #-8]
   1b200:	cmp	lr, #1
   1b204:	bne	1b188 <_start@@Base+0x7dd8>
   1b208:	ldr	r3, [r3, #16]
   1b20c:	bic	r3, r3, #3
   1b210:	b	1b188 <_start@@Base+0x7dd8>
   1b214:	ldrb	r3, [r1, #6]
   1b218:	cmp	r3, #0
   1b21c:	bne	1b258 <_start@@Base+0x7ea8>
   1b220:	add	ip, r1, #16
   1b224:	push	{r4, lr}
   1b228:	mov	r4, r1
   1b22c:	mov	r1, ip
   1b230:	bl	1b0f8 <_start@@Base+0x7d48>
   1b234:	cmn	r0, #1
   1b238:	mov	r1, r0
   1b23c:	beq	1b250 <_start@@Base+0x7ea0>
   1b240:	ldr	r0, [r4, #16]
   1b244:	pop	{r4, lr}
   1b248:	sub	r0, r0, #64	; 0x40
   1b24c:	b	14c1c <_start@@Base+0x186c>
   1b250:	mvn	r0, #0
   1b254:	pop	{r4, pc}
   1b258:	mvn	r0, #0
   1b25c:	bx	lr
   1b260:	ldr	r3, [r1, #-4]
   1b264:	uxtb	ip, r3
   1b268:	cmp	ip, #50	; 0x32
   1b26c:	lsreq	r3, r3, #16
   1b270:	addeq	r3, r3, #1069547520	; 0x3fc00000
   1b274:	addeq	r3, r3, #4161536	; 0x3f8000
   1b278:	ldreq	r3, [r1, r3, lsl #2]
   1b27c:	uxtbeq	ip, r3
   1b280:	sub	ip, ip, #63	; 0x3f
   1b284:	cmp	ip, #10
   1b288:	ldrls	pc, [pc, ip, lsl #2]
   1b28c:	b	1b2f8 <_start@@Base+0x7f48>
   1b290:	andeq	fp, r1, r8, ror #5
   1b294:	strdeq	fp, [r1], -r8
   1b298:	ldrdeq	fp, [r1], -r0
   1b29c:	strdeq	fp, [r1], -r8
   1b2a0:	ldrdeq	fp, [r1], -r0
   1b2a4:	strdeq	fp, [r1], -r8
   1b2a8:	strdeq	fp, [r1], -r8
   1b2ac:	strdeq	fp, [r1], -r8
   1b2b0:	strdeq	fp, [r1], -r8
   1b2b4:	strdeq	fp, [r1], -r8
   1b2b8:			; <UNDEFINED> instruction: 0x0001b2bc
   1b2bc:	sub	r0, r2, #1
   1b2c0:	lsr	r2, r3, #8
   1b2c4:	add	r3, r0, r3, lsr #16
   1b2c8:	uxtab	r0, r3, r2
   1b2cc:	bx	lr
   1b2d0:	lsr	r0, r3, #16
   1b2d4:	lsr	r3, r3, #8
   1b2d8:	uxtb	r0, r0
   1b2dc:	uxtab	r0, r0, r3
   1b2e0:	add	r0, r0, r2
   1b2e4:	bx	lr
   1b2e8:	lsr	r3, r3, #8
   1b2ec:	sub	r0, r2, #1
   1b2f0:	uxtab	r0, r0, r3
   1b2f4:	bx	lr
   1b2f8:	ldrb	r0, [r0]
   1b2fc:	bx	lr
   1b300:	cmp	r0, #1
   1b304:	vmov.f64	d7, d0
   1b308:	ble	1b360 <_start@@Base+0x7fb0>
   1b30c:	tst	r0, #1
   1b310:	bne	1b324 <_start@@Base+0x7f74>
   1b314:	lsr	r0, r0, #1
   1b318:	tst	r0, #1
   1b31c:	vmul.f64	d7, d7, d7
   1b320:	beq	1b314 <_start@@Base+0x7f64>
   1b324:	lsrs	r0, r0, #1
   1b328:	beq	1b358 <_start@@Base+0x7fa8>
   1b32c:	cmp	r0, #1
   1b330:	vmul.f64	d0, d7, d7
   1b334:	beq	1b350 <_start@@Base+0x7fa0>
   1b338:	tst	r0, #1
   1b33c:	lsr	r0, r0, #1
   1b340:	vmulne.f64	d7, d7, d0
   1b344:	cmp	r0, #1
   1b348:	vmul.f64	d0, d0, d0
   1b34c:	bne	1b338 <_start@@Base+0x7f88>
   1b350:	vmul.f64	d0, d7, d0
   1b354:	bx	lr
   1b358:	vmov.f64	d0, d7
   1b35c:	bx	lr
   1b360:	beq	1b358 <_start@@Base+0x7fa8>
   1b364:	cmp	r0, #0
   1b368:	beq	1b3c4 <_start@@Base+0x8014>
   1b36c:	rsb	r0, r0, #0
   1b370:	tst	r0, #1
   1b374:	bne	1b388 <_start@@Base+0x7fd8>
   1b378:	lsr	r0, r0, #1
   1b37c:	tst	r0, #1
   1b380:	vmul.f64	d7, d7, d7
   1b384:	beq	1b378 <_start@@Base+0x7fc8>
   1b388:	lsrs	r0, r0, #1
   1b38c:	beq	1b3b8 <_start@@Base+0x8008>
   1b390:	cmp	r0, #1
   1b394:	vmul.f64	d6, d7, d7
   1b398:	beq	1b3b4 <_start@@Base+0x8004>
   1b39c:	tst	r0, #1
   1b3a0:	lsr	r0, r0, #1
   1b3a4:	vmulne.f64	d7, d7, d6
   1b3a8:	cmp	r0, #1
   1b3ac:	vmul.f64	d6, d6, d6
   1b3b0:	bne	1b39c <_start@@Base+0x7fec>
   1b3b4:	vmul.f64	d7, d7, d6
   1b3b8:	vldr	d6, [pc, #16]	; 1b3d0 <_start@@Base+0x8020>
   1b3bc:	vdiv.f64	d0, d6, d7
   1b3c0:	bx	lr
   1b3c4:	vldr	d0, [pc, #4]	; 1b3d0 <_start@@Base+0x8020>
   1b3c8:	bx	lr
   1b3cc:	nop			; (mov r0, r0)
   1b3d0:	andeq	r0, r0, r0
   1b3d4:	svccc	0x00f00000	; IMB
   1b3d8:	cmp	r1, #0
   1b3dc:	mov	r2, r0
   1b3e0:	beq	1b424 <_start@@Base+0x8074>
   1b3e4:	mov	ip, #48	; 0x30
   1b3e8:	push	{lr}		; (str lr, [sp, #-4]!)
   1b3ec:	add	r0, r0, #10
   1b3f0:	strb	ip, [r2]
   1b3f4:	ldr	lr, [pc, #76]	; 1b448 <_start@@Base+0x8098>
   1b3f8:	mov	ip, #120	; 0x78
   1b3fc:	strb	ip, [r2, #1]
   1b400:	mov	r3, r0
   1b404:	add	r2, r2, #2
   1b408:	and	ip, r1, #15
   1b40c:	asr	r1, r1, #4
   1b410:	ldrb	ip, [lr, ip]
   1b414:	strb	ip, [r3, #-1]!
   1b418:	cmp	r2, r3
   1b41c:	bne	1b408 <_start@@Base+0x8058>
   1b420:	pop	{pc}		; (ldr pc, [sp], #4)
   1b424:	mov	r3, #76	; 0x4c
   1b428:	mov	r0, #78	; 0x4e
   1b42c:	mov	r1, #85	; 0x55
   1b430:	strb	r0, [r2]
   1b434:	strb	r1, [r2, #1]
   1b438:	strb	r3, [r2, #2]
   1b43c:	strb	r3, [r2, #3]
   1b440:	add	r0, r2, #4
   1b444:	bx	lr
   1b448:	andeq	r2, r7, r4, lsl ip
   1b44c:	cmp	r1, #0
   1b450:	ble	1b47c <_start@@Base+0x80cc>
   1b454:	sub	r3, r1, #-536870911	; 0xe0000001
   1b458:	ldr	r1, [r0, #16]
   1b45c:	ldr	r2, [r0, #20]
   1b460:	add	r1, r1, r3, lsl #3
   1b464:	cmp	r2, r1
   1b468:	bhi	1b474 <_start@@Base+0x80c4>
   1b46c:	ldr	r1, [r0, #8]
   1b470:	add	r1, r1, #144	; 0x90
   1b474:	mov	r0, r1
   1b478:	bx	lr
   1b47c:	ldr	r3, [pc, #156]	; 1b520 <_start@@Base+0x8170>
   1b480:	cmp	r1, r3
   1b484:	bge	1b4d4 <_start@@Base+0x8124>
   1b488:	ldr	r2, [pc, #148]	; 1b524 <_start@@Base+0x8174>
   1b48c:	cmp	r1, r2
   1b490:	beq	1b4e4 <_start@@Base+0x8134>
   1b494:	ldr	r3, [pc, #140]	; 1b528 <_start@@Base+0x8178>
   1b498:	cmp	r1, r3
   1b49c:	beq	1b4fc <_start@@Base+0x814c>
   1b4a0:	ldr	r3, [r0, #16]
   1b4a4:	ldr	ip, [pc, #128]	; 1b52c <_start@@Base+0x817c>
   1b4a8:	cmp	r1, ip
   1b4ac:	ldr	r3, [r3, #-8]
   1b4b0:	beq	1b508 <_start@@Base+0x8158>
   1b4b4:	ldrb	ip, [r3, #7]
   1b4b8:	sub	r2, r2, r1
   1b4bc:	cmp	ip, r2
   1b4c0:	blt	1b46c <_start@@Base+0x80bc>
   1b4c4:	ldr	r0, [pc, #92]	; 1b528 <_start@@Base+0x8178>
   1b4c8:	sub	r0, r0, r1
   1b4cc:	add	r1, r3, r0, lsl #3
   1b4d0:	b	1b474 <_start@@Base+0x80c4>
   1b4d4:	ldr	r0, [r0, #20]
   1b4d8:	add	r1, r0, r1, lsl #3
   1b4dc:	mov	r0, r1
   1b4e0:	bx	lr
   1b4e4:	ldr	r1, [r0, #8]
   1b4e8:	ldr	r2, [r0, #36]	; 0x24
   1b4ec:	mvn	r3, #11
   1b4f0:	add	r1, r1, #128	; 0x80
   1b4f4:	strd	r2, [r1]
   1b4f8:	b	1b474 <_start@@Base+0x80c4>
   1b4fc:	ldr	r1, [r0, #8]
   1b500:	add	r1, r1, #120	; 0x78
   1b504:	b	1b474 <_start@@Base+0x80c4>
   1b508:	ldr	r1, [r0, #8]
   1b50c:	ldr	r2, [r3, #8]
   1b510:	mvn	r3, #11
   1b514:	add	r1, r1, #128	; 0x80
   1b518:	strd	r2, [r1]
   1b51c:	b	1b474 <_start@@Base+0x80c4>
   1b520:			; <UNDEFINED> instruction: 0xffffd8f1
   1b524:			; <UNDEFINED> instruction: 0xffffd8ee
   1b528:			; <UNDEFINED> instruction: 0xffffd8f0
   1b52c:			; <UNDEFINED> instruction: 0xffffd8ef
   1b530:	cmn	r1, #1
   1b534:	beq	1b598 <_start@@Base+0x81e8>
   1b538:	ldr	r0, [r0]
   1b53c:	b	1b548 <_start@@Base+0x8198>
   1b540:	cmn	r1, #1
   1b544:	beq	1b598 <_start@@Base+0x81e8>
   1b548:	sub	r2, r1, #-536870911	; 0xe0000001
   1b54c:	cmp	r1, #0
   1b550:	mov	r3, r0
   1b554:	addne	r3, r0, r2, lsl #3
   1b558:	add	ip, r1, #1
   1b55c:	ldr	r3, [r3]
   1b560:	lsr	r2, r3, #8
   1b564:	uxtb	r3, r3
   1b568:	sub	r3, r3, #12
   1b56c:	cmp	r3, #1
   1b570:	uxtb	r2, r2
   1b574:	bls	1b580 <_start@@Base+0x81d0>
   1b578:	cmp	r2, #255	; 0xff
   1b57c:	bne	1b5a0 <_start@@Base+0x81f0>
   1b580:	ldr	r3, [r0, r1, lsl #3]
   1b584:	lsr	r3, r3, #16
   1b588:	sub	r3, r3, #32768	; 0x8000
   1b58c:	cmn	r3, #1
   1b590:	add	r1, ip, r3
   1b594:	bne	1b540 <_start@@Base+0x8190>
   1b598:	mov	r0, #0
   1b59c:	bx	lr
   1b5a0:	mov	r0, #1
   1b5a4:	bx	lr
   1b5a8:	cmp	r1, #0
   1b5ac:	subne	ip, r1, #-536870911	; 0xe0000001
   1b5b0:	moveq	ip, r0
   1b5b4:	addne	ip, r0, ip, lsl #3
   1b5b8:	push	{lr}		; (str lr, [sp, #-4]!)
   1b5bc:	ldr	r3, [ip]
   1b5c0:	uxtb	lr, r3
   1b5c4:	sub	lr, lr, #12
   1b5c8:	cmp	lr, #1
   1b5cc:	bls	1b614 <_start@@Base+0x8264>
   1b5d0:	lsr	r3, r3, #8
   1b5d4:	uxtb	r3, r3
   1b5d8:	cmp	r3, #255	; 0xff
   1b5dc:	beq	1b5e8 <_start@@Base+0x8238>
   1b5e0:	mov	r0, #0
   1b5e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b5e8:	cmp	r2, #255	; 0xff
   1b5ec:	beq	1b640 <_start@@Base+0x8290>
   1b5f0:	ldrb	r1, [ip, #9]
   1b5f4:	uxtb	r3, r2
   1b5f8:	strb	r3, [ip, #1]
   1b5fc:	cmp	r2, r1
   1b600:	bcc	1b628 <_start@@Base+0x8278>
   1b604:	add	r3, r3, #1
   1b608:	strb	r3, [ip, #9]
   1b60c:	mov	r0, #1
   1b610:	pop	{pc}		; (ldr pc, [sp], #4)
   1b614:	cmp	r2, #255	; 0xff
   1b618:	beq	1b630 <_start@@Base+0x8280>
   1b61c:	cmp	r2, r3, lsr #16
   1b620:	beq	1b630 <_start@@Base+0x8280>
   1b624:	strb	r2, [ip, #1]
   1b628:	mov	r0, #1
   1b62c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b630:	add	r3, r3, #2
   1b634:	mov	r2, #0
   1b638:	strb	r3, [ip]
   1b63c:	b	1b624 <_start@@Base+0x8274>
   1b640:	ldr	r3, [r0, r1, lsl #3]
   1b644:	mov	r0, #1
   1b648:	and	r3, r3, #65280	; 0xff00
   1b64c:	orr	r3, r3, #-2147483648	; 0x80000000
   1b650:	orr	r3, r3, #88	; 0x58
   1b654:	str	r3, [ip]
   1b658:	pop	{pc}		; (ldr pc, [sp], #4)
   1b65c:	cmn	r1, #1
   1b660:	bxeq	lr
   1b664:	push	{r4, r5, r6, lr}
   1b668:	mov	r5, r0
   1b66c:	ldr	r0, [r0, #52]	; 0x34
   1b670:	mov	r4, r1
   1b674:	mov	r2, #255	; 0xff
   1b678:	mov	r1, r4
   1b67c:	bl	1b5a8 <_start@@Base+0x81f8>
   1b680:	ldr	r0, [r5, #52]	; 0x34
   1b684:	add	r2, r4, #1
   1b688:	ldr	r3, [r0, r4, lsl #3]
   1b68c:	lsr	r3, r3, #16
   1b690:	sub	r3, r3, #32768	; 0x8000
   1b694:	cmn	r3, #1
   1b698:	add	r4, r2, r3
   1b69c:	popeq	{r4, r5, r6, pc}
   1b6a0:	cmn	r4, #1
   1b6a4:	bne	1b674 <_start@@Base+0x82c4>
   1b6a8:	pop	{r4, r5, r6, pc}
   1b6ac:	ldr	r3, [r0, #36]	; 0x24
   1b6b0:	cmp	r1, r3
   1b6b4:	ldrcs	r3, [r0, #32]
   1b6b8:	subcs	r3, r3, #1
   1b6bc:	strcs	r3, [r0, #32]
   1b6c0:	bx	lr
   1b6c4:	ldr	r3, [r1]
   1b6c8:	push	{r4, r5, r6, r7, lr}
   1b6cc:	lsr	ip, r3, #28
   1b6d0:	cmp	ip, #1
   1b6d4:	movne	r4, #0
   1b6d8:	movne	r5, #0
   1b6dc:	beq	1b720 <_start@@Base+0x8370>
   1b6e0:	uxth	r1, r3
   1b6e4:	ldr	r3, [r0, r1, lsl #4]
   1b6e8:	add	r1, r0, r1, lsl #4
   1b6ec:	lsr	ip, r3, #28
   1b6f0:	cmp	ip, #8
   1b6f4:	beq	1b6e0 <_start@@Base+0x8330>
   1b6f8:	ldr	r3, [r1, #4]
   1b6fc:	mov	r0, r4
   1b700:	mov	r1, r5
   1b704:	umlal	r0, r1, r2, r3
   1b708:	mov	r7, #0
   1b70c:	cmp	r1, r7
   1b710:	mvn	r6, #-2147483648	; 0x80000000
   1b714:	cmpeq	r0, r6
   1b718:	mvnhi	r0, #0
   1b71c:	pop	{r4, r5, r6, r7, pc}
   1b720:	ldrh	r3, [r1, #8]
   1b724:	ldr	r4, [r1, #4]
   1b728:	mov	r5, #0
   1b72c:	cmp	r3, #0
   1b730:	beq	1b784 <_start@@Base+0x83d4>
   1b734:	mov	lr, #0
   1b738:	ldr	r1, [r0, r3, lsl #4]
   1b73c:	add	r3, r0, r3, lsl #4
   1b740:	ldrh	r3, [r3, #8]
   1b744:	lsr	ip, r1, #28
   1b748:	cmp	ip, #9
   1b74c:	uxtheq	lr, r1
   1b750:	cmp	r3, #0
   1b754:	bne	1b738 <_start@@Base+0x8388>
   1b758:	add	lr, r0, lr, lsl #4
   1b75c:	ldr	r3, [lr]
   1b760:	lsr	r1, r3, #28
   1b764:	cmp	r1, #8
   1b768:	bne	1b6e0 <_start@@Base+0x8330>
   1b76c:	uxth	r3, r3
   1b770:	ldr	r3, [r0, r3, lsl #4]
   1b774:	lsr	r1, r3, #28
   1b778:	cmp	r1, #8
   1b77c:	beq	1b76c <_start@@Base+0x83bc>
   1b780:	b	1b6e0 <_start@@Base+0x8330>
   1b784:	mov	lr, r0
   1b788:	b	1b75c <_start@@Base+0x83ac>
   1b78c:	push	{r4, r5, r6, r7, lr}
   1b790:	add	r1, r0, r1, lsl #4
   1b794:	ldr	r4, [pc, #144]	; 1b82c <_start@@Base+0x847c>
   1b798:	ldr	r6, [pc, #144]	; 1b830 <_start@@Base+0x8480>
   1b79c:	ldr	r7, [pc, #144]	; 1b834 <_start@@Base+0x8484>
   1b7a0:	mov	r5, #0
   1b7a4:	b	1b7b8 <_start@@Base+0x8408>
   1b7a8:	cmp	lr, r7
   1b7ac:	beq	1b7e8 <_start@@Base+0x8438>
   1b7b0:	uxth	r1, r3
   1b7b4:	add	r1, r0, r1, lsl #4
   1b7b8:	ldr	r3, [r1]
   1b7bc:	and	lr, r3, r4
   1b7c0:	lsr	ip, r3, #28
   1b7c4:	cmp	ip, #5
   1b7c8:	beq	1b7b0 <_start@@Base+0x8400>
   1b7cc:	cmp	ip, #8
   1b7d0:	bne	1b800 <_start@@Base+0x8450>
   1b7d4:	cmp	lr, r6
   1b7d8:	bne	1b7a8 <_start@@Base+0x83f8>
   1b7dc:	ldr	r1, [r1, #4]
   1b7e0:	orr	r5, r5, r1
   1b7e4:	b	1b7b0 <_start@@Base+0x8400>
   1b7e8:	tst	r5, #1
   1b7ec:	ldreq	r1, [r1, #4]
   1b7f0:	lsleq	r1, r1, #16
   1b7f4:	addeq	r1, r1, #1
   1b7f8:	orreq	r5, r5, r1
   1b7fc:	b	1b7b0 <_start@@Base+0x8400>
   1b800:	tst	r5, #1
   1b804:	andeq	r0, r3, #983040	; 0xf0000
   1b808:	orreq	r5, r5, r0
   1b80c:	cmp	ip, #6
   1b810:	lsr	r0, r3, #20
   1b814:	ldrne	r3, [r1, #4]
   1b818:	mvneq	r3, #0
   1b81c:	lsl	r0, r0, #20
   1b820:	orr	r0, r0, r5
   1b824:	str	r3, [r2]
   1b828:	pop	{r4, r5, r6, r7, pc}
   1b82c:			; <UNDEFINED> instruction: 0xf0ff0000
   1b830:	andhi	r0, r1, r0
   1b834:	andhi	r0, r2, r0
   1b838:	tst	r1, #16777216	; 0x1000000
   1b83c:	beq	1b8e8 <_start@@Base+0x8538>
   1b840:	mov	r2, r0
   1b844:	ldr	r3, [r2], #33	; 0x21
   1b848:	cmp	r3, r2
   1b84c:	movcc	r3, #0
   1b850:	strcc	r3, [r0, #20]
   1b854:	bcc	1b8e8 <_start@@Base+0x8538>
   1b858:	ldr	r2, [r0, #16]
   1b85c:	push	{lr}		; (str lr, [sp, #-4]!)
   1b860:	cmp	r2, #0
   1b864:	movne	r2, #32
   1b868:	strbne	r2, [r3, #-1]
   1b86c:	subne	r3, r3, #1
   1b870:	ldr	r2, [pc, #220]	; 1b954 <_start@@Base+0x85a4>
   1b874:	sub	lr, r3, #8
   1b878:	mov	ip, #1
   1b87c:	str	ip, [r0, #16]
   1b880:	ldrb	ip, [r2, #-1]!
   1b884:	strb	ip, [r3, #-1]!
   1b888:	cmp	r3, lr
   1b88c:	bne	1b880 <_start@@Base+0x84d0>
   1b890:	tst	r1, #33554432	; 0x2000000
   1b894:	str	r3, [r0]
   1b898:	popeq	{pc}		; (ldreq pc, [sp], #4)
   1b89c:	mov	r2, r0
   1b8a0:	ldr	r3, [r2], #30
   1b8a4:	cmp	r3, r2
   1b8a8:	bcc	1b93c <_start@@Base+0x858c>
   1b8ac:	ldr	r2, [r0, #16]
   1b8b0:	mov	r1, #1
   1b8b4:	cmp	r2, #0
   1b8b8:	movne	r2, #32
   1b8bc:	strbne	r2, [r3, #-1]
   1b8c0:	subne	r3, r3, #1
   1b8c4:	ldr	r2, [pc, #140]	; 1b958 <_start@@Base+0x85a8>
   1b8c8:	sub	ip, r3, #5
   1b8cc:	str	r1, [r0, #16]
   1b8d0:	ldrb	r1, [r2, #-1]!
   1b8d4:	strb	r1, [r3, #-1]!
   1b8d8:	cmp	r3, ip
   1b8dc:	bne	1b8d0 <_start@@Base+0x8520>
   1b8e0:	str	r3, [r0]
   1b8e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8e8:	tst	r1, #33554432	; 0x2000000
   1b8ec:	bxeq	lr
   1b8f0:	mov	r2, r0
   1b8f4:	ldr	r3, [r2], #30
   1b8f8:	cmp	r3, r2
   1b8fc:	bcc	1b948 <_start@@Base+0x8598>
   1b900:	ldr	r2, [r0, #16]
   1b904:	mov	r1, #1
   1b908:	cmp	r2, #0
   1b90c:	movne	r2, #32
   1b910:	strbne	r2, [r3, #-1]
   1b914:	subne	r3, r3, #1
   1b918:	ldr	r2, [pc, #56]	; 1b958 <_start@@Base+0x85a8>
   1b91c:	sub	ip, r3, #5
   1b920:	str	r1, [r0, #16]
   1b924:	ldrb	r1, [r2, #-1]!
   1b928:	strb	r1, [r3, #-1]!
   1b92c:	cmp	r3, ip
   1b930:	bne	1b924 <_start@@Base+0x8574>
   1b934:	str	r3, [r0]
   1b938:	bx	lr
   1b93c:	mov	r3, #0
   1b940:	str	r3, [r0, #20]
   1b944:	pop	{pc}		; (ldr pc, [sp], #4)
   1b948:	mov	r3, #0
   1b94c:	str	r3, [r0, #20]
   1b950:	bx	lr
   1b954:	andeq	r2, r7, r0, lsr ip
   1b958:	andeq	r2, r7, r9, lsr ip
   1b95c:	ldr	ip, [r1, #12]
   1b960:	push	{r4, r5, r6, lr}
   1b964:	cmp	ip, #0
   1b968:	mov	r5, r2
   1b96c:	mov	r6, r3
   1b970:	mov	r4, r0
   1b974:	bne	1ba20 <_start@@Base+0x8670>
   1b978:	ldr	r3, [r0, #16]
   1b97c:	ldr	r0, [r0]
   1b980:	cmp	r3, #0
   1b984:	beq	1b9a8 <_start@@Base+0x85f8>
   1b988:	add	r3, r4, #24
   1b98c:	cmp	r0, r3
   1b990:	subhi	r2, r0, #1
   1b994:	movhi	r3, #32
   1b998:	strhi	r2, [r4]
   1b99c:	strbhi	r3, [r0, #-1]
   1b9a0:	ldrhi	r0, [r4]
   1b9a4:	strls	ip, [r4, #20]
   1b9a8:	add	r3, r4, #35	; 0x23
   1b9ac:	cmp	r0, r3
   1b9b0:	movcc	r3, #0
   1b9b4:	strcc	r3, [r4, #20]
   1b9b8:	bcc	1b9f4 <_start@@Base+0x8644>
   1b9bc:	ldr	r3, [r4, #8]
   1b9c0:	ldr	ip, [pc, #104]	; 1ba30 <_start@@Base+0x8680>
   1b9c4:	ldr	r3, [r3]
   1b9c8:	sub	r1, r1, r3
   1b9cc:	asr	r1, r1, #4
   1b9d0:	umull	r2, r3, r1, ip
   1b9d4:	lsr	r2, r3, #3
   1b9d8:	add	r3, r2, r2, lsl #2
   1b9dc:	sub	r1, r1, r3, lsl #1
   1b9e0:	add	r3, r1, #48	; 0x30
   1b9e4:	subs	r1, r2, #0
   1b9e8:	strb	r3, [r0, #-1]!
   1b9ec:	bne	1b9d0 <_start@@Base+0x8620>
   1b9f0:	str	r0, [r4]
   1b9f4:	mov	r3, #1
   1b9f8:	str	r3, [r4, #16]
   1b9fc:	mov	r0, r6
   1ba00:	bl	12e80 <strlen@plt>
   1ba04:	mov	r1, r6
   1ba08:	mov	r2, r0
   1ba0c:	mov	r0, r4
   1ba10:	bl	15550 <_start@@Base+0x21a0>
   1ba14:	mov	r1, r5
   1ba18:	pop	{r4, r5, r6, lr}
   1ba1c:	b	1b838 <_start@@Base+0x8488>
   1ba20:	ldr	r2, [ip, #12]
   1ba24:	add	r1, ip, #16
   1ba28:	bl	15550 <_start@@Base+0x21a0>
   1ba2c:	b	1b9fc <_start@@Base+0x864c>
   1ba30:	stclgt	12, cr12, [ip], {205}	; 0xcd
   1ba34:	uxth	r1, r1
   1ba38:	push	{r4, lr}
   1ba3c:	mov	lr, r0
   1ba40:	ldr	r4, [r2]
   1ba44:	add	r0, r0, r1, lsl #4
   1ba48:	b	1ba5c <_start@@Base+0x86ac>
   1ba4c:	cmp	ip, #5
   1ba50:	bne	1ba8c <_start@@Base+0x86dc>
   1ba54:	uxth	r1, r1
   1ba58:	add	r0, lr, r1, lsl #4
   1ba5c:	ldr	r1, [r0]
   1ba60:	lsr	ip, r1, #28
   1ba64:	cmp	ip, #8
   1ba68:	bne	1ba4c <_start@@Base+0x869c>
   1ba6c:	lsr	ip, r1, #16
   1ba70:	uxtb	ip, ip
   1ba74:	cmp	ip, #1
   1ba78:	ldreq	r3, [r0, #4]
   1ba7c:	orreq	r4, r4, r3
   1ba80:	streq	r4, [r2]
   1ba84:	ldreq	r1, [r0]
   1ba88:	b	1ba54 <_start@@Base+0x86a4>
   1ba8c:	and	r3, r1, #50331648	; 0x3000000
   1ba90:	orr	r3, r3, r4
   1ba94:	str	r3, [r2]
   1ba98:	pop	{r4, pc}
   1ba9c:	push	{r4, r5, r6, r7, lr}
   1baa0:	sub	sp, sp, #12
   1baa4:	mov	ip, #0
   1baa8:	mov	r4, r2
   1baac:	ldr	r1, [r1]
   1bab0:	mov	r6, r0
   1bab4:	mov	r2, sp
   1bab8:	ldr	r0, [r0]
   1babc:	mov	r5, r3
   1bac0:	str	ip, [sp]
   1bac4:	str	ip, [sp, #4]
   1bac8:	bl	1ba34 <_start@@Base+0x8684>
   1bacc:	ldr	r1, [r4]
   1bad0:	lsr	r3, r1, #28
   1bad4:	cmp	r3, #1
   1bad8:	mov	r7, r0
   1badc:	beq	1baf0 <_start@@Base+0x8740>
   1bae0:	add	r2, sp, #4
   1bae4:	ldr	r0, [r6]
   1bae8:	bl	1ba34 <_start@@Base+0x8684>
   1baec:	mov	r4, r0
   1baf0:	tst	r5, #4
   1baf4:	beq	1bb10 <_start@@Base+0x8760>
   1baf8:	ldrd	r2, [sp]
   1bafc:	cmp	r2, r3
   1bb00:	beq	1bb18 <_start@@Base+0x8768>
   1bb04:	mov	r0, #0
   1bb08:	add	sp, sp, #12
   1bb0c:	pop	{r4, r5, r6, r7, pc}
   1bb10:	ands	r0, r5, #8
   1bb14:	beq	1bb78 <_start@@Base+0x87c8>
   1bb18:	ldr	r3, [r7]
   1bb1c:	ldr	r1, [r4]
   1bb20:	lsr	r2, r3, #28
   1bb24:	lsr	r0, r1, #28
   1bb28:	cmp	r0, r2
   1bb2c:	bne	1bb04 <_start@@Base+0x8754>
   1bb30:	ldr	ip, [r7, #4]
   1bb34:	ldr	r2, [r4, #4]
   1bb38:	cmp	ip, r2
   1bb3c:	bne	1bb04 <_start@@Base+0x8754>
   1bb40:	cmp	r0, #0
   1bb44:	beq	1bba8 <_start@@Base+0x87f8>
   1bb48:	subs	r2, r7, r4
   1bb4c:	lsr	r3, r3, #29
   1bb50:	movne	r2, #1
   1bb54:	cmp	r3, #1
   1bb58:	beq	1bbb8 <_start@@Base+0x8808>
   1bb5c:	cmp	r0, #1
   1bb60:	movne	r0, #0
   1bb64:	andeq	r0, r2, #1
   1bb68:	cmp	r0, #0
   1bb6c:	bne	1bb04 <_start@@Base+0x8754>
   1bb70:	mov	r0, #1
   1bb74:	b	1bb08 <_start@@Base+0x8758>
   1bb78:	ldrd	r2, [sp]
   1bb7c:	bics	r3, r3, r2
   1bb80:	bne	1bb08 <_start@@Base+0x8758>
   1bb84:	ldr	r3, [r7]
   1bb88:	lsr	r2, r3, #28
   1bb8c:	cmp	r2, #4
   1bb90:	beq	1bb70 <_start@@Base+0x87c0>
   1bb94:	ldr	r1, [r4]
   1bb98:	lsr	r0, r1, #28
   1bb9c:	cmp	r0, #4
   1bba0:	bne	1bb28 <_start@@Base+0x8778>
   1bba4:	b	1bb70 <_start@@Base+0x87c0>
   1bba8:	eor	r3, r3, r1
   1bbac:	tst	r3, #201326592	; 0xc000000
   1bbb0:	bne	1bb08 <_start@@Base+0x8758>
   1bbb4:	b	1bb70 <_start@@Base+0x87c0>
   1bbb8:	bics	r2, r2, r5
   1bbbc:	beq	1bb70 <_start@@Base+0x87c0>
   1bbc0:	orr	r3, r5, #4
   1bbc4:	mov	r2, r4
   1bbc8:	mov	r1, r7
   1bbcc:	mov	r0, r6
   1bbd0:	bl	1ba9c <_start@@Base+0x86ec>
   1bbd4:	b	1bb08 <_start@@Base+0x8758>
   1bbd8:	ldr	r3, [r1]
   1bbdc:	and	ip, r3, #-67108864	; 0xfc000000
   1bbe0:	cmp	ip, #805306368	; 0x30000000
   1bbe4:	beq	1bbfc <_start@@Base+0x884c>
   1bbe8:	lsr	ip, r3, #28
   1bbec:	cmp	ip, #1
   1bbf0:	beq	1bbfc <_start@@Base+0x884c>
   1bbf4:	mov	r0, #0
   1bbf8:	bx	lr
   1bbfc:	ldr	ip, [r2, #4]
   1bc00:	cmn	ip, #12
   1bc04:	beq	1bbf4 <_start@@Base+0x8844>
   1bc08:	cmn	ip, #5
   1bc0c:	beq	1bc6c <_start@@Base+0x88bc>
   1bc10:	cmn	ip, #11
   1bc14:	beq	1bc20 <_start@@Base+0x8870>
   1bc18:	mov	r0, #1
   1bc1c:	bx	lr
   1bc20:	ldr	r3, [r2]
   1bc24:	push	{r4, lr}
   1bc28:	ldr	lr, [r0]
   1bc2c:	ldrh	r0, [r3, #6]
   1bc30:	ldr	r4, [pc, #72]	; 1bc80 <_start@@Base+0x88d0>
   1bc34:	add	r0, lr, r0, lsl #4
   1bc38:	b	1bc40 <_start@@Base+0x8890>
   1bc3c:	add	r0, lr, ip, lsl #4
   1bc40:	ldr	r2, [r0]
   1bc44:	and	r3, r2, r4
   1bc48:	uxth	ip, r2
   1bc4c:	lsr	r2, r2, #28
   1bc50:	cmp	r2, #8
   1bc54:	beq	1bc3c <_start@@Base+0x888c>
   1bc58:	cmp	r3, #545259520	; 0x20800000
   1bc5c:	beq	1bc3c <_start@@Base+0x888c>
   1bc60:	subs	r0, r1, r0
   1bc64:	movne	r0, #1
   1bc68:	pop	{r4, pc}
   1bc6c:	lsr	r0, r3, #28
   1bc70:	sub	r0, r0, #1
   1bc74:	clz	r0, r0
   1bc78:	lsr	r0, r0, #5
   1bc7c:	bx	lr
   1bc80:			; <UNDEFINED> instruction: 0xf0800000
   1bc84:	push	{r4, r5, r6, r7, r8, r9, lr}
   1bc88:	and	r4, r2, #1
   1bc8c:	mov	r5, #0
   1bc90:	orrs	ip, r4, r5
   1bc94:	mov	r8, r0
   1bc98:	mov	r9, r1
   1bc9c:	bne	1bcc4 <_start@@Base+0x8914>
   1bca0:	mul	ip, r8, r9
   1bca4:	umull	r8, r9, r8, r8
   1bca8:	lsrs	r3, r3, #1
   1bcac:	rrx	r2, r2
   1bcb0:	and	r4, r2, #1
   1bcb4:	mov	r5, #0
   1bcb8:	orrs	r1, r4, r5
   1bcbc:	add	r9, r9, ip, lsl #1
   1bcc0:	beq	1bca0 <_start@@Base+0x88f0>
   1bcc4:	lsrs	r3, r3, #1
   1bcc8:	rrx	r2, r2
   1bccc:	orrs	r1, r2, r3
   1bcd0:	moveq	r2, r8
   1bcd4:	moveq	r3, r9
   1bcd8:	beq	1bd40 <_start@@Base+0x8990>
   1bcdc:	mul	ip, r8, r9
   1bce0:	umull	r4, r5, r8, r8
   1bce4:	cmp	r3, #0
   1bce8:	cmpeq	r2, #1
   1bcec:	add	r5, r5, ip, lsl #1
   1bcf0:	beq	1bd30 <_start@@Base+0x8980>
   1bcf4:	mul	ip, r8, r5
   1bcf8:	and	r6, r2, #1
   1bcfc:	mov	r7, #0
   1bd00:	orrs	r1, r6, r7
   1bd04:	mla	ip, r4, r9, ip
   1bd08:	umullne	r8, r9, r8, r4
   1bd0c:	mul	lr, r4, r5
   1bd10:	umull	r4, r5, r4, r4
   1bd14:	addne	r9, ip, r9
   1bd18:	lsrs	r3, r3, #1
   1bd1c:	rrx	r2, r2
   1bd20:	cmp	r3, #0
   1bd24:	cmpeq	r2, #1
   1bd28:	add	r5, r5, lr, lsl #1
   1bd2c:	bne	1bcf4 <_start@@Base+0x8944>
   1bd30:	mul	r1, r4, r9
   1bd34:	umull	r2, r3, r4, r8
   1bd38:	mla	r0, r8, r5, r1
   1bd3c:	add	r3, r0, r3
   1bd40:	mov	r0, r2
   1bd44:	mov	r1, r3
   1bd48:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1bd4c:	orrs	ip, r2, r3
   1bd50:	beq	1bd58 <_start@@Base+0x89a8>
   1bd54:	b	1bc84 <_start@@Base+0x88d4>
   1bd58:	mov	r0, #1
   1bd5c:	mov	r1, #0
   1bd60:	bx	lr
   1bd64:	push	{r4, r5, r6, r7, r8, r9}
   1bd68:	mov	r8, r2
   1bd6c:	mov	r9, r3
   1bd70:	orrs	ip, r8, r9
   1bd74:	beq	1bdcc <_start@@Base+0x8a1c>
   1bd78:	cmp	r2, #0
   1bd7c:	sbcs	ip, r3, #0
   1bd80:	bge	1bddc <_start@@Base+0x8a2c>
   1bd84:	mov	r6, r0
   1bd88:	mov	r7, r1
   1bd8c:	orrs	r3, r6, r7
   1bd90:	beq	1bde4 <_start@@Base+0x8a34>
   1bd94:	cmp	r1, #0
   1bd98:	cmpeq	r0, #1
   1bd9c:	beq	1bdf0 <_start@@Base+0x8a40>
   1bda0:	mvn	r3, #0
   1bda4:	cmp	r1, r3
   1bda8:	mvn	r2, #0
   1bdac:	cmpeq	r0, r2
   1bdb0:	movne	r0, #0
   1bdb4:	movne	r1, r0
   1bdb8:	bne	1bdd4 <_start@@Base+0x8a24>
   1bdbc:	and	r4, r8, #1
   1bdc0:	mov	r5, #0
   1bdc4:	orrs	r3, r4, r5
   1bdc8:	bne	1bdf0 <_start@@Base+0x8a40>
   1bdcc:	mov	r0, #1
   1bdd0:	mov	r1, #0
   1bdd4:	pop	{r4, r5, r6, r7, r8, r9}
   1bdd8:	bx	lr
   1bddc:	pop	{r4, r5, r6, r7, r8, r9}
   1bde0:	b	1bc84 <_start@@Base+0x88d4>
   1bde4:	mvn	r0, #0
   1bde8:	mvn	r1, #-2147483648	; 0x80000000
   1bdec:	b	1bdd4 <_start@@Base+0x8a24>
   1bdf0:	mov	r0, r6
   1bdf4:	mov	r1, r7
   1bdf8:	b	1bdd4 <_start@@Base+0x8a24>
   1bdfc:	add	r1, r0, r1, lsl #3
   1be00:	add	r2, r0, r2, lsl #3
   1be04:	ldrb	ip, [r1, #5]
   1be08:	ldrb	r3, [r2, #5]
   1be0c:	sub	ip, ip, #80	; 0x50
   1be10:	sub	r3, r3, #80	; 0x50
   1be14:	uxtb	ip, ip
   1be18:	uxtb	r3, r3
   1be1c:	cmp	ip, #1
   1be20:	cmpls	r3, #1
   1be24:	bls	1be40 <_start@@Base+0x8a90>
   1be28:	cmp	r3, #1
   1be2c:	bls	1be54 <_start@@Base+0x8aa4>
   1be30:	cmp	ip, #1
   1be34:	bls	1be48 <_start@@Base+0x8a98>
   1be38:	mov	r0, #1
   1be3c:	bx	lr
   1be40:	mov	r0, #0
   1be44:	bx	lr
   1be48:	mov	r3, r2
   1be4c:	mov	r2, r1
   1be50:	mov	r1, r3
   1be54:	sub	r0, r2, r0
   1be58:	add	r2, r2, #8
   1be5c:	cmp	r2, r1
   1be60:	asr	r0, r0, #3
   1be64:	bcc	1be78 <_start@@Base+0x8ac8>
   1be68:	b	1be40 <_start@@Base+0x8a90>
   1be6c:	add	r2, r2, #8
   1be70:	cmp	r2, r1
   1be74:	bcs	1be40 <_start@@Base+0x8a90>
   1be78:	ldrh	r3, [r2, #2]
   1be7c:	cmp	r0, r3
   1be80:	bne	1be6c <_start@@Base+0x8abc>
   1be84:	ldrb	r3, [r2, #5]
   1be88:	sub	r3, r3, #73	; 0x49
   1be8c:	cmp	r3, #3
   1be90:	bhi	1be6c <_start@@Base+0x8abc>
   1be94:	b	1be38 <_start@@Base+0x8a88>
   1be98:	cmp	r1, r2
   1be9c:	push	{r4, r5, r6, r7, r8, lr}
   1bea0:	ldrh	ip, [r1, #2]
   1bea4:	ldrh	r8, [r2, #2]
   1bea8:	beq	1bfdc <_start@@Base+0x8c2c>
   1beac:	ldr	r0, [r0]
   1beb0:	lsl	lr, ip, #3
   1beb4:	add	r4, r0, lr
   1beb8:	ldrb	r5, [r4, #5]
   1bebc:	cmp	r5, #30
   1bec0:	ldrheq	ip, [r0, lr]
   1bec4:	lsl	lr, r8, #3
   1bec8:	add	r5, r0, lr
   1becc:	ldrb	r6, [r5, #5]
   1bed0:	addeq	r4, r0, ip, lsl #3
   1bed4:	cmp	r6, #30
   1bed8:	ldrb	r6, [r1, #5]
   1bedc:	ldrheq	r8, [r0, lr]
   1bee0:	ldrh	r1, [r1]
   1bee4:	sub	lr, r6, #57	; 0x39
   1bee8:	addeq	r5, r0, r8, lsl #3
   1beec:	cmp	lr, #1
   1bef0:	ldrb	lr, [r2, #5]
   1bef4:	ldrh	r2, [r2]
   1bef8:	lslls	r1, r1, #3
   1befc:	sub	lr, lr, #57	; 0x39
   1bf00:	ldrhls	r1, [r0, r1]
   1bf04:	cmp	lr, #1
   1bf08:	lslls	r2, r2, #3
   1bf0c:	ldrhls	r2, [r0, r2]
   1bf10:	cmp	ip, r8
   1bf14:	beq	1bfcc <_start@@Base+0x8c1c>
   1bf18:	cmp	ip, #32768	; 0x8000
   1bf1c:	cmpcc	r8, #32768	; 0x8000
   1bf20:	movcc	lr, #1
   1bf24:	movcs	lr, #0
   1bf28:	bcc	1bfc4 <_start@@Base+0x8c14>
   1bf2c:	cmp	r6, #57	; 0x39
   1bf30:	beq	1bf58 <_start@@Base+0x8ba8>
   1bf34:	ldrb	r3, [r4, #4]
   1bf38:	ldrb	ip, [r5, #4]
   1bf3c:	eor	r3, r3, ip
   1bf40:	tst	r3, #31
   1bf44:	bne	1bfc4 <_start@@Base+0x8c14>
   1bf48:	cmp	r1, r2
   1bf4c:	bne	1bfd4 <_start@@Base+0x8c24>
   1bf50:	mov	r0, #1
   1bf54:	pop	{r4, r5, r6, r7, r8, pc}
   1bf58:	ldrb	r6, [r4, #5]
   1bf5c:	cmp	r6, #41	; 0x29
   1bf60:	beq	1bfe4 <_start@@Base+0x8c34>
   1bf64:	ldrb	lr, [r5, #5]
   1bf68:	cmp	lr, #41	; 0x29
   1bf6c:	bne	1bf48 <_start@@Base+0x8b98>
   1bf70:	mov	r4, ip
   1bf74:	mov	r6, #0
   1bf78:	ldrh	lr, [r5, #2]
   1bf7c:	tst	lr, #32768	; 0x8000
   1bf80:	bne	1c024 <_start@@Base+0x8c74>
   1bf84:	ldrh	r8, [r5]
   1bf88:	ldr	lr, [r0, lr, lsl #3]
   1bf8c:	cmp	lr, #0
   1bf90:	sub	r3, ip, r8
   1bf94:	clz	r3, r3
   1bf98:	lsr	r3, r3, #5
   1bf9c:	moveq	r3, #0
   1bfa0:	cmp	r3, #0
   1bfa4:	bne	1bfc4 <_start@@Base+0x8c14>
   1bfa8:	cmp	lr, r6
   1bfac:	sub	ip, r8, r4
   1bfb0:	clz	ip, ip
   1bfb4:	lsr	ip, ip, #5
   1bfb8:	moveq	ip, #0
   1bfbc:	cmp	ip, #0
   1bfc0:	beq	1bf48 <_start@@Base+0x8b98>
   1bfc4:	mov	r0, #0
   1bfc8:	pop	{r4, r5, r6, r7, r8, pc}
   1bfcc:	cmp	r1, r2
   1bfd0:	beq	1bfdc <_start@@Base+0x8c2c>
   1bfd4:	pop	{r4, r5, r6, r7, r8, lr}
   1bfd8:	b	1bdfc <_start@@Base+0x8a4c>
   1bfdc:	mov	r0, #2
   1bfe0:	pop	{r4, r5, r6, r7, r8, pc}
   1bfe4:	ldrh	r6, [r4, #2]
   1bfe8:	tst	r6, #32768	; 0x8000
   1bfec:	bne	1bf64 <_start@@Base+0x8bb4>
   1bff0:	ldrh	r4, [r4]
   1bff4:	ldr	r6, [r0, r6, lsl #3]
   1bff8:	cmp	r6, #0
   1bffc:	sub	r7, r8, r4
   1c000:	clz	r7, r7
   1c004:	lsr	r7, r7, #5
   1c008:	moveq	r7, #0
   1c00c:	cmp	r7, #0
   1c010:	bne	1bfc4 <_start@@Base+0x8c14>
   1c014:	ldrb	lr, [r5, #5]
   1c018:	cmp	lr, #41	; 0x29
   1c01c:	bne	1bf48 <_start@@Base+0x8b98>
   1c020:	b	1bf78 <_start@@Base+0x8bc8>
   1c024:	mov	lr, #0
   1c028:	b	1bfa8 <_start@@Base+0x8bf8>
   1c02c:	ldrb	r3, [r0, #148]	; 0x94
   1c030:	push	{r4, r5, r6, r7, r8, lr}
   1c034:	and	r3, r3, #31
   1c038:	cmp	r3, #14
   1c03c:	ldrh	r7, [r0, #120]	; 0x78
   1c040:	addne	r2, r0, #432	; 0x1b0
   1c044:	beq	1c0a4 <_start@@Base+0x8cf4>
   1c048:	ldrh	r3, [r2, #2]
   1c04c:	cmp	r7, r3
   1c050:	bcs	1c09c <_start@@Base+0x8cec>
   1c054:	ldr	r5, [r0, #16]
   1c058:	add	r8, r0, #120	; 0x78
   1c05c:	add	r6, r0, #16
   1c060:	b	1c070 <_start@@Base+0x8cc0>
   1c064:	ldrh	r3, [r4, #6]
   1c068:	cmp	r7, r3
   1c06c:	bcs	1c09c <_start@@Base+0x8cec>
   1c070:	lsl	r3, r3, #3
   1c074:	mov	r1, r8
   1c078:	ldrh	r2, [r5, r3]
   1c07c:	mov	r0, r6
   1c080:	add	r4, r5, r3
   1c084:	add	r2, r5, r2, lsl #3
   1c088:	bl	1be98 <_start@@Base+0x8ae8>
   1c08c:	cmp	r0, #0
   1c090:	beq	1c064 <_start@@Base+0x8cb4>
   1c094:	mov	r0, #0
   1c098:	pop	{r4, r5, r6, r7, r8, pc}
   1c09c:	mov	r0, #1
   1c0a0:	pop	{r4, r5, r6, r7, r8, pc}
   1c0a4:	add	r3, r0, #404	; 0x194
   1c0a8:	add	r2, r0, #432	; 0x1b0
   1c0ac:	ldrh	r1, [r3, #2]
   1c0b0:	cmp	r7, r1
   1c0b4:	bcs	1c048 <_start@@Base+0x8c98>
   1c0b8:	ldrh	r3, [r2]
   1c0bc:	cmp	r7, r3
   1c0c0:	bcs	1c048 <_start@@Base+0x8c98>
   1c0c4:	cmp	r1, r3
   1c0c8:	bhi	1c094 <_start@@Base+0x8ce4>
   1c0cc:	ldr	ip, [r0, #16]
   1c0d0:	add	r3, ip, r3, lsl #3
   1c0d4:	ldrh	r3, [r3, #6]
   1c0d8:	cmp	r7, r3
   1c0dc:	bcs	1c048 <_start@@Base+0x8c98>
   1c0e0:	cmp	r1, r3
   1c0e4:	bls	1c0d0 <_start@@Base+0x8d20>
   1c0e8:	b	1c094 <_start@@Base+0x8ce4>
   1c0ec:	cmp	r1, r2
   1c0f0:	bls	1c15c <_start@@Base+0x8dac>
   1c0f4:	push	{r4, r5, r6, r7, r8, lr}
   1c0f8:	mov	r6, r2
   1c0fc:	mov	r5, r0
   1c100:	mov	r7, r3
   1c104:	b	1c114 <_start@@Base+0x8d64>
   1c108:	ldrh	r1, [r4, #6]
   1c10c:	cmp	r1, r6
   1c110:	bls	1c154 <_start@@Base+0x8da4>
   1c114:	lsl	r2, r1, #3
   1c118:	add	r4, r5, r2
   1c11c:	ldrh	r1, [r4, #2]
   1c120:	cmp	r1, #28
   1c124:	bne	1c108 <_start@@Base+0x8d58>
   1c128:	ldrh	ip, [r5, r2]
   1c12c:	mov	r1, r7
   1c130:	mov	r0, r5
   1c134:	cmp	ip, r7
   1c138:	mov	r2, ip
   1c13c:	beq	1c14c <_start@@Base+0x8d9c>
   1c140:	bl	1bdfc <_start@@Base+0x8a4c>
   1c144:	cmp	r0, #0
   1c148:	beq	1c108 <_start@@Base+0x8d58>
   1c14c:	mov	r0, #0
   1c150:	pop	{r4, r5, r6, r7, r8, pc}
   1c154:	mov	r0, #1
   1c158:	pop	{r4, r5, r6, r7, r8, pc}
   1c15c:	mov	r0, #1
   1c160:	bx	lr
   1c164:	add	r3, r0, #404	; 0x194
   1c168:	push	{r4, r5, r6, r7, r8, lr}
   1c16c:	mov	r8, r0
   1c170:	ldrh	r3, [r3, #2]
   1c174:	mov	r7, r1
   1c178:	ldrh	r6, [r0, #120]	; 0x78
   1c17c:	cmp	r3, r1
   1c180:	ldr	r5, [r0, #16]
   1c184:	bls	1c1dc <_start@@Base+0x8e2c>
   1c188:	lsl	r3, r3, #3
   1c18c:	add	r4, r5, r3
   1c190:	ldrh	r2, [r5, r3]
   1c194:	cmp	r6, r2
   1c198:	bne	1c1c0 <_start@@Base+0x8e10>
   1c19c:	b	1c1d4 <_start@@Base+0x8e24>
   1c1a0:	ldrh	r2, [r4, #6]
   1c1a4:	cmp	r7, r2
   1c1a8:	lsl	r1, r2, #3
   1c1ac:	bcs	1c1dc <_start@@Base+0x8e2c>
   1c1b0:	ldrh	r2, [r5, r1]
   1c1b4:	add	r4, r5, r1
   1c1b8:	cmp	r6, r2
   1c1bc:	beq	1c1d4 <_start@@Base+0x8e24>
   1c1c0:	mov	r1, r6
   1c1c4:	mov	r0, r5
   1c1c8:	bl	1bdfc <_start@@Base+0x8a4c>
   1c1cc:	cmp	r0, #0
   1c1d0:	beq	1c1a0 <_start@@Base+0x8df0>
   1c1d4:	mov	r0, #0
   1c1d8:	pop	{r4, r5, r6, r7, r8, pc}
   1c1dc:	add	r8, r8, #480	; 0x1e0
   1c1e0:	mov	r3, r6
   1c1e4:	ldrh	r1, [r8]
   1c1e8:	mov	r2, r7
   1c1ec:	mov	r0, r5
   1c1f0:	pop	{r4, r5, r6, r7, r8, lr}
   1c1f4:	b	1c0ec <_start@@Base+0x8d3c>
   1c1f8:	ldr	r3, [r0, #100]	; 0x64
   1c1fc:	ands	r3, r3, #65536	; 0x10000
   1c200:	beq	1c228 <_start@@Base+0x8e78>
   1c204:	push	{r4, lr}
   1c208:	mov	r4, r0
   1c20c:	ldrh	r1, [r0, #120]	; 0x78
   1c210:	bl	1c164 <_start@@Base+0x8db4>
   1c214:	cmp	r0, #0
   1c218:	movne	r0, #2
   1c21c:	ldrhne	r3, [r4, #128]	; 0x80
   1c220:	strne	r3, [r4, #120]	; 0x78
   1c224:	pop	{r4, pc}
   1c228:	mov	r0, r3
   1c22c:	bx	lr
   1c230:	push	{r4, r5, r6, r7, r8, lr}
   1c234:	lsl	r3, r3, #3
   1c238:	ldr	r6, [r0, #16]
   1c23c:	mov	r4, r1
   1c240:	add	r5, r6, r3
   1c244:	cmp	r5, r1
   1c248:	mov	r7, r0
   1c24c:	ldrb	r1, [sp, #24]
   1c250:	beq	1c3e4 <_start@@Base+0x9034>
   1c254:	ldrb	ip, [r4, #5]
   1c258:	ldrb	lr, [r5, #5]
   1c25c:	cmp	ip, #41	; 0x29
   1c260:	movne	r8, #0
   1c264:	beq	1c3c4 <_start@@Base+0x9014>
   1c268:	cmp	lr, #41	; 0x29
   1c26c:	movne	r0, #0
   1c270:	beq	1c3a8 <_start@@Base+0x8ff8>
   1c274:	cmp	ip, #25
   1c278:	beq	1c2bc <_start@@Base+0x8f0c>
   1c27c:	cmp	r5, r4
   1c280:	beq	1c2d8 <_start@@Base+0x8f28>
   1c284:	eor	r3, r2, r1
   1c288:	tst	r3, #31
   1c28c:	beq	1c314 <_start@@Base+0x8f64>
   1c290:	and	r3, r2, #31
   1c294:	sub	r3, r3, #15
   1c298:	cmp	r3, #7
   1c29c:	bhi	1c2b4 <_start@@Base+0x8f04>
   1c2a0:	sub	r2, r2, #15
   1c2a4:	sub	r1, r1, #15
   1c2a8:	eor	r2, r2, r1
   1c2ac:	cmp	r2, #1
   1c2b0:	beq	1c314 <_start@@Base+0x8f64>
   1c2b4:	mov	r0, #0
   1c2b8:	pop	{r4, r5, r6, r7, r8, pc}
   1c2bc:	ldrb	r3, [r5, #5]
   1c2c0:	cmp	r3, #25
   1c2c4:	bne	1c27c <_start@@Base+0x8ecc>
   1c2c8:	ldr	r3, [r5]
   1c2cc:	ldr	ip, [r4]
   1c2d0:	sub	r3, r3, ip
   1c2d4:	add	r0, r0, r3
   1c2d8:	ldr	r3, [pc, #396]	; 1c46c <_start@@Base+0x90bc>
   1c2dc:	cmp	r8, r0
   1c2e0:	add	ip, r3, r2
   1c2e4:	add	r3, r3, r1
   1c2e8:	ldrb	ip, [ip, #812]	; 0x32c
   1c2ec:	ldrb	r3, [r3, #812]	; 0x32c
   1c2f0:	beq	1c41c <_start@@Base+0x906c>
   1c2f4:	add	ip, ip, r8
   1c2f8:	cmp	ip, r0
   1c2fc:	ble	1c2b4 <_start@@Base+0x8f04>
   1c300:	add	r0, r3, r0
   1c304:	cmp	r0, r8
   1c308:	movle	r0, #0
   1c30c:	movgt	r0, #1
   1c310:	pop	{r4, r5, r6, r7, r8, pc}
   1c314:	mov	r1, r4
   1c318:	mov	r0, r7
   1c31c:	bl	15ab0 <_start@@Base+0x2700>
   1c320:	mov	r1, r5
   1c324:	mov	r2, r0
   1c328:	mov	r0, r7
   1c32c:	bl	15ab0 <_start@@Base+0x2700>
   1c330:	cmp	r2, r0
   1c334:	beq	1c424 <_start@@Base+0x9074>
   1c338:	adds	r1, r0, #0
   1c33c:	movne	r1, #1
   1c340:	cmp	r2, #0
   1c344:	moveq	r1, #0
   1c348:	cmp	r1, #0
   1c34c:	bne	1c2b4 <_start@@Base+0x8f04>
   1c350:	cmp	r0, #0
   1c354:	moveq	r3, r2
   1c358:	movne	r3, r0
   1c35c:	sub	r6, r3, r6
   1c360:	moveq	r4, r5
   1c364:	add	r3, r3, #8
   1c368:	cmp	r3, r4
   1c36c:	asr	r6, r6, #3
   1c370:	bcc	1c384 <_start@@Base+0x8fd4>
   1c374:	b	1c2b4 <_start@@Base+0x8f04>
   1c378:	add	r3, r3, #8
   1c37c:	cmp	r3, r4
   1c380:	bcs	1c2b4 <_start@@Base+0x8f04>
   1c384:	ldrh	r2, [r3, #2]
   1c388:	cmp	r6, r2
   1c38c:	bne	1c378 <_start@@Base+0x8fc8>
   1c390:	ldrb	r2, [r3, #5]
   1c394:	sub	r2, r2, #73	; 0x49
   1c398:	cmp	r2, #3
   1c39c:	bhi	1c378 <_start@@Base+0x8fc8>
   1c3a0:	b	1c424 <_start@@Base+0x9074>
   1c3a4:	mov	r8, #0
   1c3a8:	ldrh	r0, [r5, #2]
   1c3ac:	tst	r0, #32768	; 0x8000
   1c3b0:	bne	1c42c <_start@@Base+0x907c>
   1c3b4:	ldrh	r5, [r6, r3]
   1c3b8:	ldr	r0, [r6, r0, lsl #3]
   1c3bc:	add	r5, r6, r5, lsl #3
   1c3c0:	b	1c274 <_start@@Base+0x8ec4>
   1c3c4:	ldrh	r0, [r4, #2]
   1c3c8:	tst	r0, #32768	; 0x8000
   1c3cc:	bne	1c3f8 <_start@@Base+0x9048>
   1c3d0:	ldrh	r4, [r4]
   1c3d4:	ldr	r8, [r6, r0, lsl #3]
   1c3d8:	add	r4, r6, r4, lsl #3
   1c3dc:	ldrb	ip, [r4, #5]
   1c3e0:	b	1c268 <_start@@Base+0x8eb8>
   1c3e4:	eor	r0, r2, r1
   1c3e8:	tst	r0, #31
   1c3ec:	bne	1c254 <_start@@Base+0x8ea4>
   1c3f0:	mov	r0, #2
   1c3f4:	pop	{r4, r5, r6, r7, r8, pc}
   1c3f8:	cmp	lr, #41	; 0x29
   1c3fc:	beq	1c3a4 <_start@@Base+0x8ff4>
   1c400:	cmp	r5, r4
   1c404:	bne	1c284 <_start@@Base+0x8ed4>
   1c408:	ldr	r3, [pc, #92]	; 1c46c <_start@@Base+0x90bc>
   1c40c:	add	r0, r3, r2
   1c410:	add	r3, r3, r1
   1c414:	ldrb	ip, [r0, #812]	; 0x32c
   1c418:	ldrb	r3, [r3, #812]	; 0x32c
   1c41c:	cmp	r3, ip
   1c420:	beq	1c434 <_start@@Base+0x9084>
   1c424:	mov	r0, #1
   1c428:	pop	{r4, r5, r6, r7, r8, pc}
   1c42c:	mov	r0, #0
   1c430:	b	1c27c <_start@@Base+0x8ecc>
   1c434:	and	r0, r2, #31
   1c438:	sub	r0, r0, #13
   1c43c:	and	r3, r1, #31
   1c440:	cmp	r0, #1
   1c444:	sub	r3, r3, #13
   1c448:	movls	r0, #0
   1c44c:	movhi	r0, #1
   1c450:	cmp	r3, #1
   1c454:	movhi	r3, #0
   1c458:	movls	r3, #1
   1c45c:	cmp	r0, r3
   1c460:	moveq	r0, #1
   1c464:	movne	r0, #2
   1c468:	pop	{r4, r5, r6, r7, r8, pc}
   1c46c:			; <UNDEFINED> instruction: 0x0006ecb8
   1c470:	ldrb	r3, [r0, #133]	; 0x85
   1c474:	cmp	r3, #29
   1c478:	cmpne	r3, #23
   1c47c:	moveq	r3, #1
   1c480:	ldrheq	r1, [r0, #120]	; 0x78
   1c484:	ldrheq	r2, [r0, #122]	; 0x7a
   1c488:	movne	r3, #0
   1c48c:	moveq	r3, #1
   1c490:	strheq	r1, [r0, #122]	; 0x7a
   1c494:	strheq	r2, [r0, #120]	; 0x78
   1c498:	mov	r0, r3
   1c49c:	bx	lr
   1c4a0:	ldrb	r3, [r0, #132]	; 0x84
   1c4a4:	tst	r3, #64	; 0x40
   1c4a8:	moveq	r3, #42	; 0x2a
   1c4ac:	ldrheq	r1, [r0, #122]	; 0x7a
   1c4b0:	ldrheq	r2, [r0, #128]	; 0x80
   1c4b4:	strbeq	r3, [r0, #125]	; 0x7d
   1c4b8:	strheq	r1, [r0, #120]	; 0x78
   1c4bc:	strheq	r2, [r0, #122]	; 0x7a
   1c4c0:	moveq	r0, #1
   1c4c4:	movne	r0, #0
   1c4c8:	bx	lr
   1c4cc:	ldrb	r3, [r0, #132]	; 0x84
   1c4d0:	ands	r3, r3, #64	; 0x40
   1c4d4:	movne	r3, #0
   1c4d8:	bne	1c4f8 <_start@@Base+0x9148>
   1c4dc:	ldrb	r2, [r0, #148]	; 0x94
   1c4e0:	tst	r2, #64	; 0x40
   1c4e4:	moveq	r3, #1
   1c4e8:	ldrheq	r1, [r0, #128]	; 0x80
   1c4ec:	ldrheq	r2, [r0, #144]	; 0x90
   1c4f0:	strheq	r1, [r0, #120]	; 0x78
   1c4f4:	strheq	r2, [r0, #122]	; 0x7a
   1c4f8:	mov	r0, r3
   1c4fc:	bx	lr
   1c500:	ldrb	r3, [r0, #132]	; 0x84
   1c504:	ands	r3, r3, #64	; 0x40
   1c508:	movne	r3, #0
   1c50c:	bne	1c538 <_start@@Base+0x9188>
   1c510:	ldrh	r2, [r0, #130]	; 0x82
   1c514:	and	r2, r2, #31
   1c518:	cmp	r2, #19
   1c51c:	beq	1c540 <_start@@Base+0x9190>
   1c520:	cmp	r2, #20
   1c524:	moveq	r2, #692	; 0x2b4
   1c528:	ldrheq	r3, [r0, #128]	; 0x80
   1c52c:	strheq	r2, [r0, #122]	; 0x7a
   1c530:	strheq	r3, [r0, #120]	; 0x78
   1c534:	moveq	r3, #1
   1c538:	mov	r0, r3
   1c53c:	bx	lr
   1c540:	ldrh	r1, [r0, #128]	; 0x80
   1c544:	add	r2, r2, #2720	; 0xaa0
   1c548:	mov	r3, #1
   1c54c:	strh	r1, [r0, #120]	; 0x78
   1c550:	strh	r2, [r0, #122]	; 0x7a
   1c554:	mov	r0, r3
   1c558:	bx	lr
   1c55c:	ldrb	r3, [r0, #132]	; 0x84
   1c560:	ands	r3, r3, #64	; 0x40
   1c564:	bne	1c5b4 <_start@@Base+0x9204>
   1c568:	ldrh	r2, [r0, #130]	; 0x82
   1c56c:	and	r2, r2, #31
   1c570:	sub	r1, r2, #19
   1c574:	cmp	r1, #1
   1c578:	bls	1c584 <_start@@Base+0x91d4>
   1c57c:	mov	r0, r3
   1c580:	bx	lr
   1c584:	ldrh	r1, [r0, #122]	; 0x7a
   1c588:	ldrh	r3, [r0, #128]	; 0x80
   1c58c:	asr	ip, r1, #5
   1c590:	and	ip, ip, #31
   1c594:	cmp	r2, ip
   1c598:	beq	1c57c <_start@@Base+0x91cc>
   1c59c:	and	r1, r1, #992	; 0x3e0
   1c5a0:	orr	r2, r1, r2
   1c5a4:	strh	r2, [r0, #122]	; 0x7a
   1c5a8:	strh	r3, [r0, #120]	; 0x78
   1c5ac:	mov	r0, #1
   1c5b0:	bx	lr
   1c5b4:	mov	r0, #0
   1c5b8:	bx	lr
   1c5bc:	ldrb	r3, [r0, #132]	; 0x84
   1c5c0:	ands	r3, r3, #64	; 0x40
   1c5c4:	bne	1c5d8 <_start@@Base+0x9228>
   1c5c8:	ldrh	r2, [r0, #130]	; 0x82
   1c5cc:	and	r2, r2, #31
   1c5d0:	cmp	r2, #13
   1c5d4:	beq	1c5e0 <_start@@Base+0x9230>
   1c5d8:	mov	r0, #0
   1c5dc:	bx	lr
   1c5e0:	ldrh	r0, [r0, #128]	; 0x80
   1c5e4:	bx	lr
   1c5e8:	ldrh	r3, [r0, #130]	; 0x82
   1c5ec:	and	r3, r3, #31
   1c5f0:	cmp	r3, #19
   1c5f4:	beq	1c620 <_start@@Base+0x9270>
   1c5f8:	cmp	r3, #20
   1c5fc:	moveq	r2, #90	; 0x5a
   1c600:	ldrheq	r1, [r0, #128]	; 0x80
   1c604:	moveq	r3, #628	; 0x274
   1c608:	strbeq	r2, [r0, #125]	; 0x7d
   1c60c:	strheq	r1, [r0, #120]	; 0x78
   1c610:	strheq	r3, [r0, #122]	; 0x7a
   1c614:	moveq	r0, #1
   1c618:	movne	r0, #0
   1c61c:	bx	lr
   1c620:	ldrh	r0, [r0, #128]	; 0x80
   1c624:	bx	lr
   1c628:	ldrb	r3, [r0, #124]	; 0x7c
   1c62c:	and	r3, r3, #31
   1c630:	cmp	r3, #14
   1c634:	beq	1c668 <_start@@Base+0x92b8>
   1c638:	ldrb	r3, [r0, #132]	; 0x84
   1c63c:	tst	r3, #64	; 0x40
   1c640:	bne	1c668 <_start@@Base+0x92b8>
   1c644:	ldrh	r2, [r0, #122]	; 0x7a
   1c648:	ldrh	r3, [r0, #128]	; 0x80
   1c64c:	ldrh	r0, [r0, #130]	; 0x82
   1c650:	cmp	r2, r3
   1c654:	bxeq	lr
   1c658:	cmp	r0, r2
   1c65c:	moveq	r0, r3
   1c660:	movne	r0, #0
   1c664:	bx	lr
   1c668:	mov	r0, #0
   1c66c:	bx	lr
   1c670:	ldrb	r3, [r0, #124]	; 0x7c
   1c674:	and	r3, r3, #31
   1c678:	cmp	r3, #14
   1c67c:	beq	1c69c <_start@@Base+0x92ec>
   1c680:	ldrb	r3, [r0, #148]	; 0x94
   1c684:	ands	r3, r3, #64	; 0x40
   1c688:	bne	1c69c <_start@@Base+0x92ec>
   1c68c:	ldrh	r1, [r0, #120]	; 0x78
   1c690:	ldrh	r2, [r0, #144]	; 0x90
   1c694:	cmp	r1, r2
   1c698:	beq	1c6a4 <_start@@Base+0x92f4>
   1c69c:	mov	r0, #0
   1c6a0:	bx	lr
   1c6a4:	ldrh	r0, [r0, #146]	; 0x92
   1c6a8:	bx	lr
   1c6ac:	ldrb	r3, [r0, #124]	; 0x7c
   1c6b0:	and	r3, r3, #31
   1c6b4:	cmp	r3, #14
   1c6b8:	beq	1c710 <_start@@Base+0x9360>
   1c6bc:	ldrb	r3, [r0, #132]	; 0x84
   1c6c0:	ands	r3, r3, #64	; 0x40
   1c6c4:	bne	1c710 <_start@@Base+0x9360>
   1c6c8:	ldrb	r2, [r0, #148]	; 0x94
   1c6cc:	ands	r2, r2, #64	; 0x40
   1c6d0:	bne	1c710 <_start@@Base+0x9360>
   1c6d4:	ldrh	r3, [r0, #128]	; 0x80
   1c6d8:	ldrh	r1, [r0, #144]	; 0x90
   1c6dc:	push	{lr}		; (str lr, [sp, #-4]!)
   1c6e0:	cmp	r3, r1
   1c6e4:	ldrh	ip, [r0, #146]	; 0x92
   1c6e8:	ldrh	lr, [r0, #130]	; 0x82
   1c6ec:	beq	1c718 <_start@@Base+0x9368>
   1c6f0:	cmp	r3, ip
   1c6f4:	beq	1c738 <_start@@Base+0x9388>
   1c6f8:	cmp	r1, lr
   1c6fc:	beq	1c748 <_start@@Base+0x9398>
   1c700:	cmp	lr, ip
   1c704:	beq	1c728 <_start@@Base+0x9378>
   1c708:	mov	r0, r2
   1c70c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c710:	mov	r0, #0
   1c714:	bx	lr
   1c718:	strh	lr, [r0, #120]	; 0x78
   1c71c:	strh	ip, [r0, #122]	; 0x7a
   1c720:	mov	r0, #1
   1c724:	pop	{pc}		; (ldr pc, [sp], #4)
   1c728:	strh	r3, [r0, #120]	; 0x78
   1c72c:	strh	r1, [r0, #122]	; 0x7a
   1c730:	mov	r0, #1
   1c734:	pop	{pc}		; (ldr pc, [sp], #4)
   1c738:	strh	lr, [r0, #120]	; 0x78
   1c73c:	strh	r1, [r0, #122]	; 0x7a
   1c740:	mov	r0, #1
   1c744:	pop	{pc}		; (ldr pc, [sp], #4)
   1c748:	strh	r3, [r0, #120]	; 0x78
   1c74c:	strh	ip, [r0, #122]	; 0x7a
   1c750:	mov	r0, #1
   1c754:	pop	{pc}		; (ldr pc, [sp], #4)
   1c758:	ldrh	r3, [r0, #120]	; 0x78
   1c75c:	ldrh	r2, [r0, #122]	; 0x7a
   1c760:	cmp	r3, r2
   1c764:	beq	1c790 <_start@@Base+0x93e0>
   1c768:	bcs	1c788 <_start@@Base+0x93d8>
   1c76c:	ldrb	r1, [r0, #125]	; 0x7d
   1c770:	strh	r3, [r0, #122]	; 0x7a
   1c774:	strh	r2, [r0, #120]	; 0x78
   1c778:	eor	r3, r1, #3
   1c77c:	strb	r3, [r0, #125]	; 0x7d
   1c780:	mov	r0, #1
   1c784:	bx	lr
   1c788:	mov	r0, #0
   1c78c:	bx	lr
   1c790:	ldrb	r3, [r0, #124]	; 0x7c
   1c794:	and	r3, r3, #31
   1c798:	cmp	r3, #14
   1c79c:	beq	1c788 <_start@@Base+0x93d8>
   1c7a0:	ldrb	r0, [r0, #125]	; 0x7d
   1c7a4:	eor	r0, r0, r0, lsr #1
   1c7a8:	and	r0, r0, #1
   1c7ac:	add	r0, r0, #3
   1c7b0:	bx	lr
   1c7b4:	lsl	r1, r1, #3
   1c7b8:	add	r2, r0, r1
   1c7bc:	ldrsh	r3, [r2, #2]
   1c7c0:	cmp	r3, #0
   1c7c4:	blt	1c828 <_start@@Base+0x9478>
   1c7c8:	ldrb	r3, [r2, #5]
   1c7cc:	sub	ip, r3, #57	; 0x39
   1c7d0:	cmp	ip, #1
   1c7d4:	bls	1c81c <_start@@Base+0x946c>
   1c7d8:	cmp	r3, #63	; 0x3f
   1c7dc:	cmpne	r3, #41	; 0x29
   1c7e0:	movne	r1, #1
   1c7e4:	moveq	r1, #0
   1c7e8:	sub	r3, r3, #59	; 0x3b
   1c7ec:	cmp	r3, #1
   1c7f0:	movls	r3, #0
   1c7f4:	andhi	r3, r1, #1
   1c7f8:	cmp	r3, #0
   1c7fc:	bne	1c828 <_start@@Base+0x9478>
   1c800:	ldrh	r3, [r2]
   1c804:	add	r0, r0, r3, lsl #3
   1c808:	ldrb	r3, [r0, #5]
   1c80c:	sub	r3, r3, #80	; 0x50
   1c810:	cmp	r3, #2
   1c814:	movhi	r0, #0
   1c818:	bx	lr
   1c81c:	ldrh	r2, [r0, r1]
   1c820:	add	r2, r0, r2, lsl #3
   1c824:	b	1c800 <_start@@Base+0x9450>
   1c828:	mov	r0, #0
   1c82c:	bx	lr
   1c830:	cmp	r2, #32768	; 0x8000
   1c834:	bls	1c8ac <_start@@Base+0x94fc>
   1c838:	ldr	ip, [r0, #16]
   1c83c:	push	{r4, lr}
   1c840:	lsl	lr, r2, #3
   1c844:	add	r3, ip, lr
   1c848:	ldrb	r4, [r3, #4]
   1c84c:	tst	r4, #64	; 0x40
   1c850:	bne	1c898 <_start@@Base+0x94e8>
   1c854:	ldrb	r4, [r3, #5]
   1c858:	cmp	r4, #90	; 0x5a
   1c85c:	beq	1c874 <_start@@Base+0x94c4>
   1c860:	ldr	r3, [r0, #244]	; 0xf4
   1c864:	cmp	r2, r3
   1c868:	bcc	1c8b4 <_start@@Base+0x9504>
   1c86c:	mov	r0, #0
   1c870:	pop	{r4, pc}
   1c874:	ldrh	r4, [r3, #2]
   1c878:	ldr	r3, [pc, #72]	; 1c8c8 <_start@@Base+0x9518>
   1c87c:	cmp	r4, r3
   1c880:	bne	1c860 <_start@@Base+0x94b0>
   1c884:	ldrh	r3, [ip, lr]
   1c888:	add	ip, ip, r3, lsl #3
   1c88c:	ldrb	r3, [ip, #4]
   1c890:	tst	r3, #64	; 0x40
   1c894:	beq	1c860 <_start@@Base+0x94b0>
   1c898:	ldrh	r3, [r1]
   1c89c:	mov	r0, #1
   1c8a0:	add	r3, r3, r0
   1c8a4:	strh	r3, [r1]
   1c8a8:	pop	{r4, pc}
   1c8ac:	mov	r0, #1
   1c8b0:	bx	lr
   1c8b4:	mov	r1, r2
   1c8b8:	bl	16c8c <_start@@Base+0x38dc>
   1c8bc:	clz	r0, r0
   1c8c0:	lsr	r0, r0, #5
   1c8c4:	pop	{r4, pc}
   1c8c8:	ldrdeq	r0, [r0], -r3
   1c8cc:	sub	ip, r3, #73	; 0x49
   1c8d0:	sub	r3, r3, #76	; 0x4c
   1c8d4:	cmp	r3, #1
   1c8d8:	cmphi	ip, #1
   1c8dc:	movls	ip, #1
   1c8e0:	movhi	ip, #0
   1c8e4:	bhi	1c928 <_start@@Base+0x9578>
   1c8e8:	ldr	r3, [r0]
   1c8ec:	lsl	r2, r2, #3
   1c8f0:	add	r0, r3, r2
   1c8f4:	push	{lr}		; (str lr, [sp, #-4]!)
   1c8f8:	ldrh	r2, [r3, r2]
   1c8fc:	ldrb	lr, [r0, #5]
   1c900:	sub	lr, lr, #57	; 0x39
   1c904:	cmp	lr, #1
   1c908:	lsl	r2, r2, #3
   1c90c:	add	r0, r3, r2
   1c910:	ldrhls	r0, [r3, r2]
   1c914:	addls	r0, r3, r0, lsl #3
   1c918:	sub	r0, r1, r0
   1c91c:	clz	r0, r0
   1c920:	lsr	r0, r0, #5
   1c924:	pop	{pc}		; (ldr pc, [sp], #4)
   1c928:	mov	r0, ip
   1c92c:	bx	lr
   1c930:	ldr	r3, [r1]
   1c934:	push	{r4, lr}
   1c938:	ldrh	r2, [r3, #6]
   1c93c:	ldr	lr, [r0]
   1c940:	ldr	r4, [pc, #100]	; 1c9ac <_start@@Base+0x95fc>
   1c944:	add	r2, lr, r2, lsl #4
   1c948:	b	1c950 <_start@@Base+0x95a0>
   1c94c:	add	r2, lr, r0, lsl #4
   1c950:	ldr	r3, [r2]
   1c954:	and	ip, r3, r4
   1c958:	lsr	r1, r3, #28
   1c95c:	cmp	r1, #8
   1c960:	uxth	r0, r3
   1c964:	beq	1c94c <_start@@Base+0x959c>
   1c968:	cmp	ip, #545259520	; 0x20800000
   1c96c:	beq	1c94c <_start@@Base+0x959c>
   1c970:	cmp	r1, #5
   1c974:	moveq	r2, r0
   1c978:	ldr	r1, [pc, #48]	; 1c9b0 <_start@@Base+0x9600>
   1c97c:	ldreq	r3, [lr, r2, lsl #4]
   1c980:	addeq	r2, lr, r2, lsl #4
   1c984:	and	r1, r1, r3
   1c988:	cmp	r1, #8388608	; 0x800000
   1c98c:	bne	1c9a4 <_start@@Base+0x95f4>
   1c990:	ldr	r3, [r2, #4]
   1c994:	cmp	r3, #8
   1c998:	movne	r0, #11
   1c99c:	moveq	r0, #12
   1c9a0:	pop	{r4, pc}
   1c9a4:	mov	r0, #11
   1c9a8:	pop	{r4, pc}
   1c9ac:			; <UNDEFINED> instruction: 0xf0800000
   1c9b0:	stc2	0, cr0, [r0], {0}
   1c9b4:	ldr	r3, [r0, #128]	; 0x80
   1c9b8:	ldr	ip, [r0, #240]	; 0xf0
   1c9bc:	push	{r4, lr}
   1c9c0:	cmp	r3, ip
   1c9c4:	lsl	lr, r1, #12
   1c9c8:	beq	1c9dc <_start@@Base+0x962c>
   1c9cc:	ldr	ip, [r3]
   1c9d0:	and	r4, ip, #201326592	; 0xc000000
   1c9d4:	cmp	r4, #67108864	; 0x4000000
   1c9d8:	beq	1c9f8 <_start@@Base+0x9648>
   1c9dc:	orr	r2, r2, #-520093696	; 0xe1000000
   1c9e0:	orr	r2, r2, #10485760	; 0xa00000
   1c9e4:	orr	r2, r2, lr
   1c9e8:	sub	r1, r3, #4
   1c9ec:	str	r1, [r0, #128]	; 0x80
   1c9f0:	str	r2, [r3, #-4]
   1c9f4:	pop	{r4, pc}
   1c9f8:	ldr	r4, [pc, #52]	; 1ca34 <_start@@Base+0x9684>
   1c9fc:	bics	r4, r4, ip
   1ca00:	beq	1c9dc <_start@@Base+0x962c>
   1ca04:	eor	r4, ip, r1, lsl #16
   1ca08:	eor	r1, r1, r2
   1ca0c:	tst	r4, #983040	; 0xf0000
   1ca10:	eoreq	r4, ip, r1, lsl #16
   1ca14:	streq	r4, [r3]
   1ca18:	tst	ip, #1048576	; 0x100000
   1ca1c:	bne	1c9dc <_start@@Base+0x962c>
   1ca20:	eor	r4, ip, lr
   1ca24:	tst	r4, #61440	; 0xf000
   1ca28:	eoreq	r1, ip, r1, lsl #12
   1ca2c:	streq	r1, [r3]
   1ca30:	b	1c9dc <_start@@Base+0x962c>
   1ca34:	andeq	r0, r0, #16
   1ca38:	cmp	r2, #15
   1ca3c:	mov	ip, r2
   1ca40:	bls	1ca90 <_start@@Base+0x96e0>
   1ca44:	push	{r4, lr}
   1ca48:	mov	r2, r0
   1ca4c:	ldrb	r0, [r1]
   1ca50:	lsl	ip, ip, #12
   1ca54:	ldr	r1, [pc, #64]	; 1ca9c <_start@@Base+0x96ec>
   1ca58:	ldr	r4, [pc, #64]	; 1caa0 <_start@@Base+0x96f0>
   1ca5c:	and	r0, r0, #31
   1ca60:	uxth	ip, ip
   1ca64:	ldr	lr, [r2, #128]	; 0x80
   1ca68:	cmp	r0, #14
   1ca6c:	and	r3, r3, #15
   1ca70:	orr	r3, ip, r3
   1ca74:	moveq	ip, r1
   1ca78:	movne	ip, r4
   1ca7c:	orr	r3, r3, ip
   1ca80:	sub	r1, lr, #4
   1ca84:	str	r1, [r2, #128]	; 0x80
   1ca88:	str	r3, [lr, #-4]
   1ca8c:	pop	{r4, pc}
   1ca90:	mov	r2, r3
   1ca94:	mov	r1, ip
   1ca98:	b	1c9b4 <_start@@Base+0x9604>
   1ca9c:	vmov.f64	d0, d0
   1caa0:	vmov.f32	s0, s0
   1caa4:	push	{r4, r5, lr}
   1caa8:	cmp	r2, #15
   1caac:	ldr	lr, [sp, #12]
   1cab0:	bls	1cb14 <_start@@Base+0x9764>
   1cab4:	mov	ip, r2
   1cab8:	ldrb	r2, [r1]
   1cabc:	mov	r5, r3
   1cac0:	ldr	r3, [pc, #88]	; 1cb20 <_start@@Base+0x9770>
   1cac4:	and	r2, r2, #31
   1cac8:	cmp	r2, #14
   1cacc:	moveq	r2, r3
   1cad0:	lsl	r3, ip, #12
   1cad4:	ldr	r1, [pc, #72]	; 1cb24 <_start@@Base+0x9774>
   1cad8:	uxth	r3, r3
   1cadc:	movne	r2, r1
   1cae0:	orr	r3, r3, r5, lsl #16
   1cae4:	cmp	lr, #0
   1cae8:	ldr	r1, [r0, #128]	; 0x80
   1caec:	orrge	r2, r2, #8388608	; 0x800000
   1caf0:	rsblt	lr, lr, #0
   1caf4:	orr	r3, r3, #16777216	; 0x1000000
   1caf8:	orr	r3, r3, r2
   1cafc:	orr	r3, r3, lr, asr #2
   1cb00:	sub	r2, r1, #4
   1cb04:	str	r2, [r0, #128]	; 0x80
   1cb08:	mov	r4, r0
   1cb0c:	str	r3, [r1, #-4]
   1cb10:	pop	{r4, r5, pc}
   1cb14:	ldr	r1, [pc, #12]	; 1cb28 <_start@@Base+0x9778>
   1cb18:	pop	{r4, r5, lr}
   1cb1c:	b	16dbc <_start@@Base+0x3a0c>
   1cb20:	vldr	d0, [r0, #-0]
   1cb24:	vldr	s0, [r0, #-0]
   1cb28:	ldr	r0, [r0], #-0
   1cb2c:	push	{r4, r5, lr}
   1cb30:	cmp	r2, #15
   1cb34:	ldr	lr, [sp, #12]
   1cb38:	bls	1cb9c <_start@@Base+0x97ec>
   1cb3c:	mov	ip, r2
   1cb40:	ldrb	r2, [r1]
   1cb44:	mov	r5, r3
   1cb48:	ldr	r3, [pc, #88]	; 1cba8 <_start@@Base+0x97f8>
   1cb4c:	and	r2, r2, #31
   1cb50:	cmp	r2, #14
   1cb54:	moveq	r2, r3
   1cb58:	lsl	r3, ip, #12
   1cb5c:	ldr	r1, [pc, #72]	; 1cbac <_start@@Base+0x97fc>
   1cb60:	uxth	r3, r3
   1cb64:	movne	r2, r1
   1cb68:	orr	r3, r3, r5, lsl #16
   1cb6c:	cmp	lr, #0
   1cb70:	ldr	r1, [r0, #128]	; 0x80
   1cb74:	orrge	r2, r2, #8388608	; 0x800000
   1cb78:	rsblt	lr, lr, #0
   1cb7c:	orr	r3, r3, #16777216	; 0x1000000
   1cb80:	orr	r3, r3, r2
   1cb84:	orr	r3, r3, lr, asr #2
   1cb88:	sub	r2, r1, #4
   1cb8c:	str	r2, [r0, #128]	; 0x80
   1cb90:	mov	r4, r0
   1cb94:	str	r3, [r1, #-4]
   1cb98:	pop	{r4, r5, pc}
   1cb9c:	mov	r1, #-469762048	; 0xe4000000
   1cba0:	pop	{r4, r5, lr}
   1cba4:	b	16dbc <_start@@Base+0x3a0c>
   1cba8:	vstr	d0, [r0, #-0]
   1cbac:	vstr	s0, [r0, #-0]
   1cbb0:	lsr	ip, r2, #14
   1cbb4:	and	ip, ip, #3
   1cbb8:	tst	r2, #256	; 0x100
   1cbbc:	uxtab	r2, ip, r2
   1cbc0:	push	{r4, r5, lr}
   1cbc4:	sub	lr, r2, #1
   1cbc8:	beq	1cbe4 <_start@@Base+0x9834>
   1cbcc:	ldr	r4, [pc, #104]	; 1cc3c <_start@@Base+0x988c>
   1cbd0:	sub	ip, r2, #2
   1cbd4:	str	r4, [r3]
   1cbd8:	mov	r2, lr
   1cbdc:	add	r3, r3, #4
   1cbe0:	mov	lr, ip
   1cbe4:	cmp	r2, #1
   1cbe8:	bls	1cc24 <_start@@Base+0x9874>
   1cbec:	add	r2, lr, #1
   1cbf0:	ldr	r4, [pc, #68]	; 1cc3c <_start@@Base+0x988c>
   1cbf4:	ldr	r5, [r0]
   1cbf8:	add	r0, r3, r2, lsl #2
   1cbfc:	ldrh	r1, [r1]
   1cc00:	sub	ip, lr, #1
   1cc04:	add	r1, r5, r1, lsl #3
   1cc08:	ldrh	r2, [r1, #2]
   1cc0c:	cmp	r2, r4
   1cc10:	moveq	r2, #0
   1cc14:	cmp	lr, #1
   1cc18:	str	r2, [r0, #-4]!
   1cc1c:	mov	lr, ip
   1cc20:	bhi	1cbfc <_start@@Base+0x984c>
   1cc24:	ldrh	r2, [r1]
   1cc28:	ldr	r1, [pc, #12]	; 1cc3c <_start@@Base+0x988c>
   1cc2c:	cmp	r2, r1
   1cc30:	moveq	r2, #0
   1cc34:	str	r2, [r3]
   1cc38:	pop	{r4, r5, pc}
   1cc3c:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   1cc40:	ldrh	r3, [r2]
   1cc44:	ldr	ip, [pc, #124]	; 1ccc8 <_start@@Base+0x9918>
   1cc48:	push	{lr}		; (str lr, [sp, #-4]!)
   1cc4c:	cmp	r3, ip
   1cc50:	moveq	ip, #0
   1cc54:	beq	1cc84 <_start@@Base+0x98d4>
   1cc58:	add	r3, r0, r3, lsl #3
   1cc5c:	ldrb	ip, [r3, #5]
   1cc60:	cmp	ip, #99	; 0x63
   1cc64:	mov	ip, #1
   1cc68:	bne	1cc84 <_start@@Base+0x98d4>
   1cc6c:	ldrh	r3, [r3]
   1cc70:	add	ip, ip, #1
   1cc74:	add	r3, r0, r3, lsl #3
   1cc78:	ldrb	lr, [r3, #5]
   1cc7c:	cmp	lr, #99	; 0x63
   1cc80:	beq	1cc6c <_start@@Base+0x98bc>
   1cc84:	ldrh	r3, [r2, #2]
   1cc88:	add	r3, r0, r3, lsl #3
   1cc8c:	ldrb	lr, [r3, #5]
   1cc90:	cmp	lr, #99	; 0x63
   1cc94:	bne	1ccbc <_start@@Base+0x990c>
   1cc98:	ldr	lr, [r1]
   1cc9c:	ldrh	r1, [r3, #2]
   1cca0:	ldr	r3, [lr, #-156]	; 0xffffff64
   1cca4:	ldr	r1, [r0, r1, lsl #3]
   1cca8:	ldr	r3, [r3]
   1ccac:	ldr	r3, [r3, r1, lsl #4]
   1ccb0:	lsr	r3, r3, #12
   1ccb4:	and	r3, r3, #2048	; 0x800
   1ccb8:	orr	ip, ip, r3
   1ccbc:	ldrb	r0, [r2, #4]
   1ccc0:	orr	r0, ip, r0, lsl #16
   1ccc4:	pop	{pc}		; (ldr pc, [sp], #4)
   1ccc8:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   1cccc:	lsl	ip, r2, #3
   1ccd0:	add	r3, r0, ip
   1ccd4:	push	{lr}		; (str lr, [sp, #-4]!)
   1ccd8:	ldrsb	lr, [r3, #6]
   1ccdc:	cmp	lr, #0
   1cce0:	blt	1ccec <_start@@Base+0x993c>
   1cce4:	mov	r0, #0
   1cce8:	pop	{pc}		; (ldr pc, [sp], #4)
   1ccec:	ldr	r1, [r1]
   1ccf0:	cmp	r2, r1
   1ccf4:	bls	1cce4 <_start@@Base+0x9934>
   1ccf8:	ldrb	r2, [r3, #5]
   1ccfc:	cmp	r2, #36	; 0x24
   1cd00:	bne	1cce4 <_start@@Base+0x9934>
   1cd04:	ldrh	r3, [r3, #2]
   1cd08:	tst	r3, #32768	; 0x8000
   1cd0c:	bne	1cce4 <_start@@Base+0x9934>
   1cd10:	ldr	r3, [r0, r3, lsl #3]
   1cd14:	cmp	r3, #2
   1cd18:	bne	1cce4 <_start@@Base+0x9934>
   1cd1c:	ldrh	r0, [r0, ip]
   1cd20:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd24:	ldr	r3, [r0]
   1cd28:	lsl	r2, r2, #3
   1cd2c:	add	ip, r3, r2
   1cd30:	push	{lr}		; (str lr, [sp, #-4]!)
   1cd34:	ldrb	r0, [ip, #5]
   1cd38:	sub	lr, r0, #36	; 0x24
   1cd3c:	cmp	lr, #4
   1cd40:	bls	1cd6c <_start@@Base+0x99bc>
   1cd44:	cmp	r0, #41	; 0x29
   1cd48:	beq	1cd7c <_start@@Base+0x99cc>
   1cd4c:	lsl	r1, r1, #3
   1cd50:	add	ip, r3, r1
   1cd54:	ldrb	r2, [ip, #5]
   1cd58:	sub	r0, r2, #36	; 0x24
   1cd5c:	cmp	r0, #4
   1cd60:	bls	1cd74 <_start@@Base+0x99c4>
   1cd64:	cmp	r2, #41	; 0x29
   1cd68:	beq	1cd90 <_start@@Base+0x99e0>
   1cd6c:	mov	r0, #0
   1cd70:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd74:	mov	r0, #1
   1cd78:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd7c:	ldrh	r0, [r3, r2]
   1cd80:	ldrh	r2, [ip, #2]
   1cd84:	cmp	r0, r2
   1cd88:	bne	1cd4c <_start@@Base+0x999c>
   1cd8c:	b	1cd6c <_start@@Base+0x99bc>
   1cd90:	ldrh	r0, [r3, r1]
   1cd94:	ldrh	r3, [ip, #2]
   1cd98:	sub	r0, r0, r3
   1cd9c:	clz	r0, r0
   1cda0:	lsr	r0, r0, #5
   1cda4:	pop	{pc}		; (ldr pc, [sp], #4)
   1cda8:	ldr	r3, [r2]
   1cdac:	push	{r4, r5, r6, r7, lr}
   1cdb0:	sub	sp, sp, #260	; 0x104
   1cdb4:	lsr	r4, r3, #14
   1cdb8:	and	r4, r4, #3
   1cdbc:	uxtab	r4, r4, r3
   1cdc0:	mov	r6, r2
   1cdc4:	mov	r5, r0
   1cdc8:	mov	r2, r3
   1cdcc:	add	r0, r0, #136	; 0x88
   1cdd0:	mov	r3, sp
   1cdd4:	bl	1cbb0 <_start@@Base+0x9800>
   1cdd8:	cmp	r4, #0
   1cddc:	beq	1ce44 <_start@@Base+0x9a94>
   1cde0:	mov	r3, sp
   1cde4:	mov	lr, #0
   1cde8:	add	r1, r3, r4, lsl #2
   1cdec:	mov	r0, #4
   1cdf0:	mov	r4, lr
   1cdf4:	mov	r7, #8
   1cdf8:	b	1ce04 <_start@@Base+0x9a54>
   1cdfc:	cmp	r3, r1
   1ce00:	beq	1ce44 <_start@@Base+0x9a94>
   1ce04:	ldr	r2, [r3], #4
   1ce08:	cmp	r2, #0
   1ce0c:	beq	1ce2c <_start@@Base+0x9a7c>
   1ce10:	ldr	ip, [r5, #136]	; 0x88
   1ce14:	add	r2, ip, r2, lsl #3
   1ce18:	ldrb	r2, [r2, #4]
   1ce1c:	and	r2, r2, #31
   1ce20:	sub	ip, r2, #13
   1ce24:	cmp	ip, #1
   1ce28:	bls	1ce5c <_start@@Base+0x9aac>
   1ce2c:	cmp	r0, #0
   1ce30:	subgt	r0, r0, #1
   1ce34:	bgt	1cdfc <_start@@Base+0x9a4c>
   1ce38:	cmp	r3, r1
   1ce3c:	add	r4, r4, #1
   1ce40:	bne	1ce04 <_start@@Base+0x9a54>
   1ce44:	ldr	r3, [r5, #168]	; 0xa8
   1ce48:	mov	r0, #128	; 0x80
   1ce4c:	cmp	r3, r4
   1ce50:	strlt	r4, [r5, #168]	; 0xa8
   1ce54:	add	sp, sp, #260	; 0x104
   1ce58:	pop	{r4, r5, r6, r7, pc}
   1ce5c:	ldr	ip, [r6]
   1ce60:	ands	ip, ip, #2048	; 0x800
   1ce64:	bne	1ce90 <_start@@Base+0x9ae0>
   1ce68:	cmp	r2, #14
   1ce6c:	beq	1ceac <_start@@Base+0x9afc>
   1ce70:	cmp	lr, #0
   1ce74:	movne	lr, ip
   1ce78:	bne	1cdfc <_start@@Base+0x9a4c>
   1ce7c:	cmp	r7, #0
   1ce80:	ble	1ce38 <_start@@Base+0x9a88>
   1ce84:	sub	r7, r7, #1
   1ce88:	mov	lr, #1
   1ce8c:	b	1cdfc <_start@@Base+0x9a4c>
   1ce90:	cmp	r2, #14
   1ce94:	bne	1ce2c <_start@@Base+0x9a7c>
   1ce98:	bic	r0, r0, #1
   1ce9c:	cmp	r0, #0
   1cea0:	subgt	r0, r0, #2
   1cea4:	addle	r4, r4, #2
   1cea8:	b	1cdfc <_start@@Base+0x9a4c>
   1ceac:	cmp	r7, #0
   1ceb0:	addle	r4, r4, #3
   1ceb4:	subgt	r7, r7, #1
   1ceb8:	bicle	r4, r4, #1
   1cebc:	movle	lr, ip
   1cec0:	b	1cdfc <_start@@Base+0x9a4c>
   1cec4:	ldr	r2, [r1, #44]	; 0x2c
   1cec8:	push	{r4, lr}
   1cecc:	uxtb	r3, r2
   1ced0:	cmp	r3, #88	; 0x58
   1ced4:	ldr	lr, [r1, #36]	; 0x24
   1ced8:	beq	1cf3c <_start@@Base+0x9b8c>
   1cedc:	ldr	ip, [r1, #40]	; 0x28
   1cee0:	ldr	r4, [ip]
   1cee4:	uxtb	r3, r4
   1cee8:	sub	r3, r3, #81	; 0x51
   1ceec:	cmp	r3, #10
   1cef0:	ldrls	pc, [pc, r3, lsl #2]
   1cef4:	b	1cf3c <_start@@Base+0x9b8c>
   1cef8:	andeq	ip, r1, r4, lsr #30
   1cefc:	andeq	ip, r1, ip, lsr pc
   1cf00:	andeq	ip, r1, ip, lsr pc
   1cf04:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1cf08:	andeq	ip, r1, ip, lsr pc
   1cf0c:	andeq	ip, r1, ip, lsr pc
   1cf10:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1cf14:			; <UNDEFINED> instruction: 0x0001cfbc
   1cf18:	andeq	ip, r1, ip, lsr pc
   1cf1c:	andeq	ip, r1, ip, lsr pc
   1cf20:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1cf24:	str	r2, [ip]
   1cf28:	ldrh	r3, [r1, #46]	; 0x2e
   1cf2c:	mov	r2, #77	; 0x4d
   1cf30:	add	r3, r3, #1069547520	; 0x3fc00000
   1cf34:	add	r3, r3, #4161536	; 0x3f8000
   1cf38:	strb	r2, [ip, r3, lsl #2]
   1cf3c:	ldrh	r3, [lr, #38]	; 0x26
   1cf40:	ldrh	ip, [r1, #64]	; 0x40
   1cf44:	cmp	r3, ip
   1cf48:	beq	1cfb0 <_start@@Base+0x9c00>
   1cf4c:	cmp	r3, #0
   1cf50:	popeq	{r4, pc}
   1cf54:	ldr	r0, [r0]
   1cf58:	ldr	r2, [r0, r3, lsl #2]
   1cf5c:	cmp	r2, #0
   1cf60:	popeq	{r4, pc}
   1cf64:	ldrh	r3, [r2, #70]	; 0x46
   1cf68:	cmp	r3, #0
   1cf6c:	popeq	{r4, pc}
   1cf70:	cmp	ip, r3
   1cf74:	beq	1cf90 <_start@@Base+0x9be0>
   1cf78:	ldr	r2, [r0, r3, lsl #2]
   1cf7c:	ldrh	r3, [r2, #70]	; 0x46
   1cf80:	cmp	r3, #0
   1cf84:	popeq	{r4, pc}
   1cf88:	cmp	ip, r3
   1cf8c:	bne	1cf78 <_start@@Base+0x9bc8>
   1cf90:	ldrh	r3, [r1, #70]	; 0x46
   1cf94:	strh	r3, [r2, #70]	; 0x46
   1cf98:	pop	{r4, pc}
   1cf9c:	str	r2, [ip]
   1cfa0:	ldrh	r3, [lr, #38]	; 0x26
   1cfa4:	ldrh	ip, [r1, #64]	; 0x40
   1cfa8:	cmp	r3, ip
   1cfac:	bne	1cf4c <_start@@Base+0x9b9c>
   1cfb0:	ldrh	r3, [r1, #70]	; 0x46
   1cfb4:	strh	r3, [lr, #38]	; 0x26
   1cfb8:	pop	{r4, pc}
   1cfbc:	ldr	r3, [pc, #16]	; 1cfd4 <_start@@Base+0x9c24>
   1cfc0:	add	r4, r3, r4, lsr #16
   1cfc4:	ldrb	r3, [ip, r4, lsl #2]
   1cfc8:	cmp	r3, #84	; 0x54
   1cfcc:	streq	r2, [ip, r4, lsl #2]
   1cfd0:	b	1cf3c <_start@@Base+0x9b8c>
   1cfd4:	svccc	0x00ff8002
   1cfd8:	ldr	r3, [r0, #272]	; 0x110
   1cfdc:	ldr	r1, [r3, r1, lsl #2]
   1cfe0:	cmp	r1, #0
   1cfe4:	bxeq	lr
   1cfe8:	ldrh	r3, [r1, #68]	; 0x44
   1cfec:	cmp	r3, #0
   1cff0:	bxne	lr
   1cff4:	add	r0, r0, #272	; 0x110
   1cff8:	b	1cec4 <_start@@Base+0x9b14>
   1cffc:	tst	r2, #256	; 0x100
   1d000:	bne	1d050 <_start@@Base+0x9ca0>
   1d004:	tst	r2, #512	; 0x200
   1d008:	ldrbeq	r3, [r1, #37]	; 0x25
   1d00c:	orreq	r3, r3, #8
   1d010:	strbeq	r3, [r1, #37]	; 0x25
   1d014:	ldrh	r3, [r1, #38]	; 0x26
   1d018:	cmp	r3, #0
   1d01c:	bxeq	lr
   1d020:	push	{r4, r5, r6, lr}
   1d024:	mov	r4, r1
   1d028:	mov	r5, r0
   1d02c:	add	r6, r0, #656	; 0x290
   1d030:	ldr	r2, [r5, #656]	; 0x290
   1d034:	mov	r0, r6
   1d038:	ldr	r1, [r2, r3, lsl #2]
   1d03c:	bl	1cec4 <_start@@Base+0x9b14>
   1d040:	ldrh	r3, [r4, #38]	; 0x26
   1d044:	cmp	r3, #0
   1d048:	bne	1d030 <_start@@Base+0x9c80>
   1d04c:	pop	{r4, r5, r6, pc}
   1d050:	ldrb	r3, [r1, #37]	; 0x25
   1d054:	tst	r3, #16
   1d058:	bic	r2, r3, #8
   1d05c:	strb	r2, [r1, #37]	; 0x25
   1d060:	bxeq	lr
   1d064:	ldrb	r2, [r1, #64]	; 0x40
   1d068:	bic	r3, r3, #24
   1d06c:	strb	r3, [r1, #37]	; 0x25
   1d070:	cmp	r2, #90	; 0x5a
   1d074:	ldr	r3, [r1, #8]
   1d078:	moveq	r2, #89	; 0x59
   1d07c:	strbeq	r2, [r1, #64]	; 0x40
   1d080:	cmp	r3, #1
   1d084:	bxls	lr
   1d088:	add	ip, r1, #64	; 0x40
   1d08c:	add	ip, ip, r3, lsl #2
   1d090:	add	r1, r1, #68	; 0x44
   1d094:	ldr	r3, [r1], #4
   1d098:	sub	r0, r3, #1
   1d09c:	uxtb	r3, r3
   1d0a0:	cmp	r3, #83	; 0x53
   1d0a4:	cmpne	r3, #80	; 0x50
   1d0a8:	moveq	r2, #1
   1d0ac:	movne	r2, #0
   1d0b0:	cmp	r3, #86	; 0x56
   1d0b4:	movne	r3, r2
   1d0b8:	orreq	r3, r2, #1
   1d0bc:	cmp	r3, #0
   1d0c0:	strbne	r0, [r1, #-4]
   1d0c4:	cmp	ip, r1
   1d0c8:	bne	1d094 <_start@@Base+0x9ce4>
   1d0cc:	bx	lr
   1d0d0:	ldrb	r3, [r1, #37]	; 0x25
   1d0d4:	tst	r3, #1
   1d0d8:	bxeq	lr
   1d0dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d0e0:	ldr	r4, [r1, #24]
   1d0e4:	cmp	r4, #0
   1d0e8:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d0ec:	rsb	r5, r4, r4, lsl #30
   1d0f0:	mov	r9, r2
   1d0f4:	mov	r8, r0
   1d0f8:	mov	r7, r1
   1d0fc:	rsb	r4, r4, #0
   1d100:	lsl	r5, r5, #2
   1d104:	ldr	r3, [r7, #16]
   1d108:	ldr	r6, [r3, r5]
   1d10c:	add	r5, r5, #4
   1d110:	ldrb	r3, [r6, #5]
   1d114:	cmp	r3, #7
   1d118:	beq	1d128 <_start@@Base+0x9d78>
   1d11c:	adds	r4, r4, #1
   1d120:	bne	1d104 <_start@@Base+0x9d54>
   1d124:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d128:	mov	r2, r9
   1d12c:	mov	r1, r6
   1d130:	mov	r0, r8
   1d134:	bl	1cffc <_start@@Base+0x9c4c>
   1d138:	mov	r2, r9
   1d13c:	mov	r1, r6
   1d140:	mov	r0, r8
   1d144:	bl	1d0d0 <_start@@Base+0x9d20>
   1d148:	adds	r4, r4, #1
   1d14c:	bne	1d104 <_start@@Base+0x9d54>
   1d150:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d154:	ldrb	r3, [r1]
   1d158:	cmp	r3, #46	; 0x2e
   1d15c:	beq	1d198 <_start@@Base+0x9de8>
   1d160:	cmp	r3, #91	; 0x5b
   1d164:	beq	1d190 <_start@@Base+0x9de0>
   1d168:	cmp	r3, #37	; 0x25
   1d16c:	beq	1d188 <_start@@Base+0x9dd8>
   1d170:	push	{lr}		; (str lr, [sp, #-4]!)
   1d174:	mov	lr, r0
   1d178:	sub	r0, r3, r0
   1d17c:	clz	r0, r0
   1d180:	lsr	r0, r0, #5
   1d184:	pop	{pc}		; (ldr pc, [sp], #4)
   1d188:	ldrb	r1, [r1, #1]
   1d18c:	b	1724c <_start@@Base+0x3e9c>
   1d190:	sub	r2, r2, #1
   1d194:	b	172c0 <_start@@Base+0x3f10>
   1d198:	mov	r0, #1
   1d19c:	bx	lr
   1d1a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d1a4:	mov	r6, r1
   1d1a8:	ldr	r7, [pc, #320]	; 1d2f0 <_start@@Base+0x9f40>
   1d1ac:	ldr	r4, [r1, #20]
   1d1b0:	mov	r9, r0
   1d1b4:	cmp	r4, r7
   1d1b8:	bhi	1d238 <_start@@Base+0x9e88>
   1d1bc:	ldr	r8, [pc, #304]	; 1d2f4 <_start@@Base+0x9f44>
   1d1c0:	b	1d1f4 <_start@@Base+0x9e44>
   1d1c4:	ldrb	r3, [r5, #4]
   1d1c8:	and	r3, r3, #31
   1d1cc:	lsr	r3, r8, r3
   1d1d0:	tst	r3, #1
   1d1d4:	beq	1d1e8 <_start@@Base+0x9e38>
   1d1d8:	ldrb	r3, [r5, #5]
   1d1dc:	cmp	r3, #27
   1d1e0:	beq	1d1e8 <_start@@Base+0x9e38>
   1d1e4:	add	r4, r4, #1
   1d1e8:	add	r4, r4, #1
   1d1ec:	cmp	r4, r7
   1d1f0:	bhi	1d238 <_start@@Base+0x9e88>
   1d1f4:	ldr	r3, [r6, #16]
   1d1f8:	add	r5, r3, r4, lsl #3
   1d1fc:	ldrb	r2, [r5, #5]
   1d200:	cmp	r2, #24
   1d204:	bne	1d1c4 <_start@@Base+0x9e14>
   1d208:	ldr	r1, [r3, r4, lsl #3]
   1d20c:	ldrb	r3, [r1, #4]
   1d210:	tst	r3, #3
   1d214:	bne	1d2e4 <_start@@Base+0x9f34>
   1d218:	ldrb	r3, [r5, #4]
   1d21c:	and	r3, r3, #31
   1d220:	lsr	r3, r8, r3
   1d224:	tst	r3, #1
   1d228:	bne	1d1e4 <_start@@Base+0x9e34>
   1d22c:	add	r4, r4, #1
   1d230:	cmp	r4, r7
   1d234:	bls	1d1f4 <_start@@Base+0x9e44>
   1d238:	ldrh	r3, [r6, #66]	; 0x42
   1d23c:	cmp	r3, #0
   1d240:	beq	1d268 <_start@@Base+0x9eb8>
   1d244:	ldr	r2, [r9, #656]	; 0x290
   1d248:	ldr	r3, [r2, r3, lsl #2]
   1d24c:	ldrb	r2, [r3, #4]
   1d250:	tst	r2, #3
   1d254:	bicne	r2, r2, #3
   1d258:	ldrne	r1, [r9, #44]	; 0x2c
   1d25c:	strbne	r2, [r3, #4]
   1d260:	strne	r1, [r3, #12]
   1d264:	strne	r3, [r9, #44]	; 0x2c
   1d268:	ldrh	r3, [r6, #70]	; 0x46
   1d26c:	cmp	r3, #0
   1d270:	beq	1d298 <_start@@Base+0x9ee8>
   1d274:	ldr	r2, [r9, #656]	; 0x290
   1d278:	ldr	r3, [r2, r3, lsl #2]
   1d27c:	ldrb	r2, [r3, #4]
   1d280:	tst	r2, #3
   1d284:	bicne	r2, r2, #3
   1d288:	ldrne	r1, [r9, #44]	; 0x2c
   1d28c:	strbne	r2, [r3, #4]
   1d290:	strne	r1, [r3, #12]
   1d294:	strne	r3, [r9, #44]	; 0x2c
   1d298:	ldrh	r3, [r6, #72]	; 0x48
   1d29c:	cmp	r3, #0
   1d2a0:	beq	1d2c8 <_start@@Base+0x9f18>
   1d2a4:	ldr	r2, [r9, #656]	; 0x290
   1d2a8:	ldr	r3, [r2, r3, lsl #2]
   1d2ac:	ldrb	r2, [r3, #4]
   1d2b0:	tst	r2, #3
   1d2b4:	bicne	r2, r2, #3
   1d2b8:	ldrne	r1, [r9, #44]	; 0x2c
   1d2bc:	strbne	r2, [r3, #4]
   1d2c0:	strne	r1, [r3, #12]
   1d2c4:	strne	r3, [r9, #44]	; 0x2c
   1d2c8:	ldr	r1, [r6, #36]	; 0x24
   1d2cc:	ldrb	r3, [r1, #4]
   1d2d0:	tst	r3, #3
   1d2d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d2d8:	mov	r0, r9
   1d2dc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d2e0:	b	17498 <_start@@Base+0x40e8>
   1d2e4:	mov	r0, r9
   1d2e8:	bl	17498 <_start@@Base+0x40e8>
   1d2ec:	b	1d1c4 <_start@@Base+0x9e14>
   1d2f0:	strdeq	r7, [r0], -ip
   1d2f4:	rsbeq	r4, r0, r0
   1d2f8:	sub	r1, r1, #-536870911	; 0xe0000001
   1d2fc:	ldr	r3, [r0, #16]
   1d300:	add	r2, r3, r1, lsl #3
   1d304:	ldr	r2, [r2, #4]
   1d308:	cmn	r2, #12
   1d30c:	beq	1d318 <_start@@Base+0x9f68>
   1d310:	mov	r0, #1
   1d314:	bx	lr
   1d318:	ldr	r2, [r0, #20]
   1d31c:	ldr	r1, [r3, r1, lsl #3]
   1d320:	ldr	r3, [r2, #-8]
   1d324:	str	r1, [r3, #8]
   1d328:	ldrb	r2, [r1, #4]
   1d32c:	tst	r2, #3
   1d330:	beq	1d310 <_start@@Base+0x9f60>
   1d334:	ldrb	r2, [r3, #4]
   1d338:	tst	r2, #4
   1d33c:	beq	1d310 <_start@@Base+0x9f60>
   1d340:	ldr	r0, [r0, #8]
   1d344:	ldrb	ip, [r0, #29]
   1d348:	sub	ip, ip, #1
   1d34c:	cmp	ip, #1
   1d350:	bls	1d36c <_start@@Base+0x9fbc>
   1d354:	ldrb	r1, [r0, #28]
   1d358:	bic	r2, r2, #7
   1d35c:	and	r1, r1, #3
   1d360:	orr	r2, r1, r2
   1d364:	strb	r2, [r3, #4]
   1d368:	b	1d310 <_start@@Base+0x9f60>
   1d36c:	push	{r4, lr}
   1d370:	bl	17498 <_start@@Base+0x40e8>
   1d374:	mov	r0, #1
   1d378:	pop	{r4, pc}
   1d37c:	cmp	r3, #0
   1d380:	push	{r4, r5, r6, lr}
   1d384:	ldr	r4, [pc, #216]	; 1d464 <_start@@Base+0xa0b4>
   1d388:	blt	1d3d8 <_start@@Base+0xa028>
   1d38c:	umull	r4, r5, r3, r4
   1d390:	ldr	lr, [pc, #208]	; 1d468 <_start@@Base+0xa0b8>
   1d394:	lsr	ip, r5, #1
   1d398:	rsb	r4, ip, ip, lsl #29
   1d39c:	rsb	r4, ip, r4, lsl #3
   1d3a0:	add	r3, r4, r3
   1d3a4:	add	r3, lr, r3, lsl #2
   1d3a8:	ldr	r3, [r3, #840]	; 0x348
   1d3ac:	add	r3, r3, #1
   1d3b0:	mul	r2, r2, r3
   1d3b4:	ldr	lr, [r0, ip, lsl #2]
   1d3b8:	ldr	r3, [pc, #172]	; 1d46c <_start@@Base+0xa0bc>
   1d3bc:	add	r2, r2, lr
   1d3c0:	cmp	r2, r3
   1d3c4:	add	lr, r0, ip, lsl #2
   1d3c8:	bhi	1d410 <_start@@Base+0xa060>
   1d3cc:	str	r2, [lr]
   1d3d0:	mov	r0, r1
   1d3d4:	pop	{r4, r5, r6, pc}
   1d3d8:	sub	lr, r3, #8
   1d3dc:	ldr	r6, [pc, #132]	; 1d468 <_start@@Base+0xa0b8>
   1d3e0:	smull	r4, r5, lr, r4
   1d3e4:	asr	lr, lr, #31
   1d3e8:	rsb	lr, lr, r5, asr #1
   1d3ec:	add	ip, lr, #64	; 0x40
   1d3f0:	rsb	r4, lr, lr, lsl #29
   1d3f4:	rsb	lr, lr, r4, lsl #3
   1d3f8:	add	r3, lr, r3
   1d3fc:	add	r3, r6, r3, lsl #2
   1d400:	ldr	r3, [r3, #840]	; 0x348
   1d404:	add	r3, r3, #1
   1d408:	mul	r2, r2, r3
   1d40c:	b	1d3b4 <_start@@Base+0xa004>
   1d410:	ldr	lr, [pc, #88]	; 1d470 <_start@@Base+0xa0c0>
   1d414:	cmp	r1, ip
   1d418:	add	lr, r2, lr
   1d41c:	str	lr, [r0, ip, lsl #2]
   1d420:	beq	1d450 <_start@@Base+0xa0a0>
   1d424:	add	ip, ip, #1
   1d428:	and	ip, ip, #63	; 0x3f
   1d42c:	ldr	r4, [r0, ip, lsl #2]
   1d430:	add	lr, r0, ip, lsl #2
   1d434:	add	r2, r4, #1
   1d438:	cmp	r2, r3
   1d43c:	bls	1d3cc <_start@@Base+0xa01c>
   1d440:	sub	r4, r4, r3
   1d444:	cmp	r1, ip
   1d448:	str	r4, [r0, ip, lsl #2]
   1d44c:	bne	1d424 <_start@@Base+0xa074>
   1d450:	add	r1, r1, #1
   1d454:	and	r1, r1, #63	; 0x3f
   1d458:	mov	r3, #1
   1d45c:	str	r3, [r0, r1, lsl #2]
   1d460:	b	1d3d0 <_start@@Base+0xa020>
   1d464:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   1d468:			; <UNDEFINED> instruction: 0x0006ecb8
   1d46c:	blcc	fe6cfc70 <__bss_end__@@Base+0xfe64b9f8>
   1d470:	strbtgt	r3, [r5], #-1536	; 0xfffffa00
   1d474:	cmp	r0, #0
   1d478:	bxeq	lr
   1d47c:	push	{r4, r5, r6, r7, lr}
   1d480:	mov	lr, #0
   1d484:	b	1d4dc <_start@@Base+0xa12c>
   1d488:	cmp	r4, #0
   1d48c:	beq	1d53c <_start@@Base+0xa18c>
   1d490:	mov	r3, r0
   1d494:	add	r3, r3, #2
   1d498:	ldrb	ip, [r3, #-1]
   1d49c:	cmp	ip, #127	; 0x7f
   1d4a0:	bhi	1d508 <_start@@Base+0xa158>
   1d4a4:	add	lr, lr, ip
   1d4a8:	cmp	lr, r1
   1d4ac:	bhi	1d53c <_start@@Base+0xa18c>
   1d4b0:	ldrb	ip, [r3]
   1d4b4:	add	r3, r3, #1
   1d4b8:	cmp	ip, #127	; 0x7f
   1d4bc:	bhi	1d544 <_start@@Base+0xa194>
   1d4c0:	add	ip, lr, ip
   1d4c4:	cmp	r1, ip
   1d4c8:	bcs	1d4d8 <_start@@Base+0xa128>
   1d4cc:	cmp	r2, #0
   1d4d0:	sub	r2, r2, #1
   1d4d4:	beq	1d570 <_start@@Base+0xa1c0>
   1d4d8:	mov	r0, r3
   1d4dc:	ldrb	r4, [r0]
   1d4e0:	cmp	r4, #6
   1d4e4:	bls	1d488 <_start@@Base+0xa0d8>
   1d4e8:	mov	r3, r0
   1d4ec:	ldrb	ip, [r3, #1]!
   1d4f0:	cmp	ip, #0
   1d4f4:	bne	1d4ec <_start@@Base+0xa13c>
   1d4f8:	ldrb	ip, [r3, #1]
   1d4fc:	add	r3, r3, #2
   1d500:	cmp	ip, #127	; 0x7f
   1d504:	bls	1d4a4 <_start@@Base+0xa0f4>
   1d508:	and	ip, ip, #127	; 0x7f
   1d50c:	mov	r6, r3
   1d510:	mov	r5, #0
   1d514:	ldrb	r3, [r6], #1
   1d518:	add	r5, r5, #7
   1d51c:	and	r7, r3, #127	; 0x7f
   1d520:	tst	r3, #128	; 0x80
   1d524:	orr	ip, ip, r7, lsl r5
   1d528:	mov	r3, r6
   1d52c:	bne	1d514 <_start@@Base+0xa164>
   1d530:	add	lr, lr, ip
   1d534:	cmp	lr, r1
   1d538:	bls	1d4b0 <_start@@Base+0xa100>
   1d53c:	mov	r0, #0
   1d540:	pop	{r4, r5, r6, r7, pc}
   1d544:	and	ip, ip, #127	; 0x7f
   1d548:	mov	r6, r3
   1d54c:	mov	r5, #0
   1d550:	ldrb	r3, [r6], #1
   1d554:	add	r5, r5, #7
   1d558:	and	r7, r3, #127	; 0x7f
   1d55c:	tst	r3, #128	; 0x80
   1d560:	orr	ip, ip, r7, lsl r5
   1d564:	mov	r3, r6
   1d568:	bne	1d550 <_start@@Base+0xa1a0>
   1d56c:	b	1d4c0 <_start@@Base+0xa110>
   1d570:	cmp	r4, #6
   1d574:	pophi	{r4, r5, r6, r7, pc}
   1d578:	subs	r4, r4, #1
   1d57c:	beq	1d59c <_start@@Base+0xa1ec>
   1d580:	ldr	r0, [pc, #28]	; 1d5a4 <_start@@Base+0xa1f4>
   1d584:	ldrb	r3, [r0], #1
   1d588:	cmp	r3, #0
   1d58c:	bne	1d584 <_start@@Base+0xa1d4>
   1d590:	subs	r4, r4, #1
   1d594:	bne	1d584 <_start@@Base+0xa1d4>
   1d598:	pop	{r4, r5, r6, r7, pc}
   1d59c:	ldr	r0, [pc, #4]	; 1d5a8 <_start@@Base+0xa1f8>
   1d5a0:	pop	{r4, r5, r6, r7, pc}
   1d5a4:	andeq	pc, r6, sp, lsr #32
   1d5a8:	andeq	pc, r6, ip, lsr #32
   1d5ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d5b0:	mov	r7, r0
   1d5b4:	ldr	r6, [pc, #536]	; 1d7d4 <_start@@Base+0xa424>
   1d5b8:	ldr	r8, [r0, #60]	; 0x3c
   1d5bc:	mov	r4, r1
   1d5c0:	mov	r5, r2
   1d5c4:	mov	r9, r3
   1d5c8:	add	sl, r0, #64	; 0x40
   1d5cc:	sub	r1, r4, sl
   1d5d0:	mov	r2, r5
   1d5d4:	asr	r1, r1, #2
   1d5d8:	mov	r0, r8
   1d5dc:	bl	1d474 <_start@@Base+0xa0c4>
   1d5e0:	cmp	r0, #0
   1d5e4:	beq	1d5fc <_start@@Base+0xa24c>
   1d5e8:	b	1d794 <_start@@Base+0xa3e4>
   1d5ec:	cmp	r3, #1
   1d5f0:	cmpeq	r5, r2
   1d5f4:	beq	1d648 <_start@@Base+0xa298>
   1d5f8:	mov	r4, ip
   1d5fc:	sub	ip, r4, #4
   1d600:	cmp	sl, ip
   1d604:	popcs	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d608:	ldr	r1, [r4, #-4]
   1d60c:	uxtb	lr, r1
   1d610:	lsr	r2, r1, #8
   1d614:	lsl	r3, lr, #1
   1d618:	uxtb	r2, r2
   1d61c:	ldrh	r3, [r6, r3]
   1d620:	and	r3, r3, #7
   1d624:	cmp	r3, #2
   1d628:	bne	1d5ec <_start@@Base+0xa23c>
   1d62c:	cmp	r5, r2
   1d630:	bcc	1d5f8 <_start@@Base+0xa248>
   1d634:	cmp	lr, #44	; 0x2c
   1d638:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d63c:	cmp	r5, r1, lsr #16
   1d640:	bhi	1d5f8 <_start@@Base+0xa248>
   1d644:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d648:	sub	lr, lr, #18
   1d64c:	cmp	lr, #39	; 0x27
   1d650:	ldrls	pc, [pc, lr, lsl #2]
   1d654:	b	1d728 <_start@@Base+0xa378>
   1d658:	andeq	sp, r1, r8, asr #14
   1d65c:	andeq	sp, r1, r8, lsr #14
   1d660:	andeq	sp, r1, r8, lsr #14
   1d664:	andeq	sp, r1, r8, lsr #14
   1d668:	andeq	sp, r1, r8, lsr #14
   1d66c:	andeq	sp, r1, r8, lsr #14
   1d670:	andeq	sp, r1, r8, lsr #14
   1d674:	andeq	sp, r1, r8, lsr #14
   1d678:	andeq	sp, r1, r8, lsr #14
   1d67c:	andeq	sp, r1, r8, lsr #14
   1d680:	andeq	sp, r1, r8, lsr #14
   1d684:	andeq	sp, r1, r8, lsr #14
   1d688:	andeq	sp, r1, r8, lsr #14
   1d68c:	andeq	sp, r1, r8, lsr #14
   1d690:	andeq	sp, r1, r8, lsr #14
   1d694:	andeq	sp, r1, r8, lsr #14
   1d698:	andeq	sp, r1, r8, lsr #14
   1d69c:	andeq	sp, r1, r8, lsr #14
   1d6a0:	andeq	sp, r1, r8, lsr #14
   1d6a4:	andeq	sp, r1, r8, lsr #14
   1d6a8:	andeq	sp, r1, r8, lsr #14
   1d6ac:	andeq	sp, r1, r8, lsr #14
   1d6b0:	andeq	sp, r1, r8, lsr #14
   1d6b4:	andeq	sp, r1, r8, lsr #14
   1d6b8:	andeq	sp, r1, r8, lsr #14
   1d6bc:	andeq	sp, r1, r8, lsr #14
   1d6c0:	andeq	sp, r1, r8, lsr #14
   1d6c4:	andeq	sp, r1, r4, asr r7
   1d6c8:	andeq	sp, r1, r8, lsr #14
   1d6cc:	andeq	sp, r1, r8, lsr #14
   1d6d0:	andeq	sp, r1, r8, lsr #14
   1d6d4:	andeq	sp, r1, r8, lsr #14
   1d6d8:	andeq	sp, r1, r8, lsr #14
   1d6dc:	andeq	sp, r1, r8, lsr #14
   1d6e0:	andeq	sp, r1, r8, lsr #14
   1d6e4:	andeq	sp, r1, r8, lsr #14
   1d6e8:	andeq	sp, r1, ip, lsr #14
   1d6ec:	andeq	sp, r1, r8, lsr #14
   1d6f0:	andeq	sp, r1, r8, lsr #14
   1d6f4:	strdeq	sp, [r1], -r8
   1d6f8:	lsr	r3, r1, #16
   1d6fc:	ldr	r0, [r7, #16]
   1d700:	uxtb	r3, r3
   1d704:	ldr	ip, [r4, #-8]
   1d708:	mvn	r3, r3
   1d70c:	ldr	r3, [r0, r3, lsl #2]
   1d710:	uxtb	r0, ip
   1d714:	add	r3, r3, #16
   1d718:	cmp	r0, #18
   1d71c:	str	r3, [r9]
   1d720:	beq	1d7a8 <_start@@Base+0xa3f8>
   1d724:	ldr	r0, [pc, #172]	; 1d7d8 <_start@@Base+0xa428>
   1d728:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d72c:	ldr	r3, [r7, #16]
   1d730:	mvn	r1, r1, lsr #16
   1d734:	ldr	r0, [pc, #160]	; 1d7dc <_start@@Base+0xa42c>
   1d738:	ldr	r3, [r3, r1, lsl #2]
   1d73c:	add	r3, r3, #16
   1d740:	str	r3, [r9]
   1d744:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d748:	lsr	r5, r1, #16
   1d74c:	mov	r4, ip
   1d750:	b	1d5cc <_start@@Base+0xa21c>
   1d754:	ldr	r3, [r7, #56]	; 0x38
   1d758:	cmp	r3, #0
   1d75c:	beq	1d7a0 <_start@@Base+0xa3f0>
   1d760:	lsrs	r1, r1, #16
   1d764:	mov	r2, r3
   1d768:	beq	1d788 <_start@@Base+0xa3d8>
   1d76c:	ldrb	r0, [r2]
   1d770:	add	r3, r2, #1
   1d774:	mov	r2, r3
   1d778:	cmp	r0, #0
   1d77c:	bne	1d76c <_start@@Base+0xa3bc>
   1d780:	subs	r1, r1, #1
   1d784:	bne	1d76c <_start@@Base+0xa3bc>
   1d788:	str	r3, [r9]
   1d78c:	ldr	r0, [pc, #76]	; 1d7e0 <_start@@Base+0xa430>
   1d790:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d794:	str	r0, [r9]
   1d798:	ldr	r0, [pc, #68]	; 1d7e4 <_start@@Base+0xa434>
   1d79c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d7a0:	ldr	r3, [pc, #64]	; 1d7e8 <_start@@Base+0xa438>
   1d7a4:	b	1d788 <_start@@Base+0xa3d8>
   1d7a8:	lsr	r3, ip, #8
   1d7ac:	add	r2, r2, #1
   1d7b0:	uxtb	r3, r3
   1d7b4:	cmp	r3, r2
   1d7b8:	bne	1d724 <_start@@Base+0xa374>
   1d7bc:	lsr	r1, r1, #24
   1d7c0:	ldr	r3, [pc, #36]	; 1d7ec <_start@@Base+0xa43c>
   1d7c4:	cmp	r1, ip, lsr #16
   1d7c8:	ldr	r0, [pc, #8]	; 1d7d8 <_start@@Base+0xa428>
   1d7cc:	moveq	r0, r3
   1d7d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d7d4:	andeq	pc, r6, ip, ror r0	; <UNPREDICTABLE>
   1d7d8:	andeq	r2, r7, ip, asr #24
   1d7dc:	andeq	r2, r7, r4, asr #24
   1d7e0:	andeq	r2, r7, r4, asr ip
   1d7e4:	andeq	r2, r7, ip, lsr ip
   1d7e8:	andeq	lr, r6, r0, ror #24
   1d7ec:	andeq	r2, r7, r0, ror #24
   1d7f0:	ldr	r3, [r0, #28]
   1d7f4:	cmp	r1, r3
   1d7f8:	bls	1d8dc <_start@@Base+0xa52c>
   1d7fc:	push	{r4, r5, r6, r7, r8, lr}
   1d800:	mov	r5, r2
   1d804:	ldr	r2, [r1, #4]
   1d808:	mov	r4, r0
   1d80c:	and	r3, r2, #7
   1d810:	cmp	r3, #3
   1d814:	biceq	r2, r2, #7
   1d818:	subeq	r1, r1, r2
   1d81c:	ldreq	r2, [r1, #4]
   1d820:	tst	r2, #3
   1d824:	bicne	r2, r2, #7
   1d828:	ldreq	r3, [r1, #4]
   1d82c:	subne	r2, r1, r2
   1d830:	ldrbeq	r2, [r3, #-3]
   1d834:	addeq	r2, r2, #1
   1d838:	subeq	r2, r1, r2, lsl #3
   1d83c:	ldr	r7, [r2]
   1d840:	add	r3, r7, #16
   1d844:	ldrb	r6, [r7, #6]
   1d848:	cmp	r6, #0
   1d84c:	bne	1d8d4 <_start@@Base+0xa524>
   1d850:	mov	r2, r1
   1d854:	mov	r1, r3
   1d858:	bl	1b0f8 <_start@@Base+0x7d48>
   1d85c:	cmn	r0, #1
   1d860:	beq	1d8d4 <_start@@Base+0xa524>
   1d864:	ldr	r3, [r7, #16]
   1d868:	add	r1, r0, #16
   1d86c:	sub	r0, r3, #64	; 0x40
   1d870:	ldr	lr, [pc, #108]	; 1d8e4 <_start@@Base+0xa534>
   1d874:	ldr	r2, [r0, r1, lsl #2]
   1d878:	add	r1, r0, r1, lsl #2
   1d87c:	uxtb	ip, r2
   1d880:	lsl	r3, ip, #1
   1d884:	ldrh	r3, [lr, r3]
   1d888:	lsr	r3, r3, #11
   1d88c:	cmp	r3, #9
   1d890:	beq	1d8b8 <_start@@Base+0xa508>
   1d894:	cmp	r3, #22
   1d898:	beq	1d8d4 <_start@@Base+0xa524>
   1d89c:	ldr	r2, [r4, #8]
   1d8a0:	add	r3, r3, #58	; 0x3a
   1d8a4:	ldr	r0, [pc, #60]	; 1d8e8 <_start@@Base+0xa538>
   1d8a8:	ldr	r3, [r2, r3, lsl #2]
   1d8ac:	add	r3, r3, #16
   1d8b0:	str	r3, [r5]
   1d8b4:	pop	{r4, r5, r6, r7, r8, pc}
   1d8b8:	lsr	r2, r2, #8
   1d8bc:	cmp	ip, #69	; 0x45
   1d8c0:	uxtb	r2, r2
   1d8c4:	mov	r3, r5
   1d8c8:	subeq	r2, r2, #3
   1d8cc:	pop	{r4, r5, r6, r7, r8, lr}
   1d8d0:	b	1d5ac <_start@@Base+0xa1fc>
   1d8d4:	mov	r0, #0
   1d8d8:	pop	{r4, r5, r6, r7, r8, pc}
   1d8dc:	mov	r0, #0
   1d8e0:	bx	lr
   1d8e4:	andeq	pc, r6, ip, ror r0	; <UNPREDICTABLE>
   1d8e8:	andeq	r2, r7, ip, asr ip
   1d8ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d8f0:	uxth	ip, r1
   1d8f4:	ldr	r5, [r0, #28]
   1d8f8:	lsrs	r4, r1, #16
   1d8fc:	mov	r8, r2
   1d900:	ldr	r6, [r5, ip, lsl #3]
   1d904:	mov	r7, r0
   1d908:	mov	r9, r3
   1d90c:	add	r5, r5, ip, lsl #3
   1d910:	ldrb	r2, [r6, #6]
   1d914:	add	r1, r6, #16
   1d918:	beq	1d958 <_start@@Base+0xa5a8>
   1d91c:	cmp	r2, #0
   1d920:	add	r4, r5, r4, lsl #3
   1d924:	beq	1d9e4 <_start@@Base+0xa634>
   1d928:	cmp	r4, #0
   1d92c:	beq	1d9c8 <_start@@Base+0xa618>
   1d930:	cmp	r3, #0
   1d934:	blt	1d9d8 <_start@@Base+0xa628>
   1d938:	add	r5, r5, r3, lsl #3
   1d93c:	cmp	r9, #0
   1d940:	beq	1d950 <_start@@Base+0xa5a0>
   1d944:	cmp	r5, r4
   1d948:	ldrcc	r3, [pc, #220]	; 1da2c <_start@@Base+0xa67c>
   1d94c:	strcc	r3, [r8]
   1d950:	mov	r0, r5
   1d954:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d958:	cmp	r2, #0
   1d95c:	bne	1d9c8 <_start@@Base+0xa618>
   1d960:	bl	1b0f8 <_start@@Base+0x7d48>
   1d964:	ldr	r4, [r7, #20]
   1d968:	cmp	r9, #0
   1d96c:	bge	1d9f8 <_start@@Base+0xa648>
   1d970:	cmn	r0, #1
   1d974:	beq	1d9d8 <_start@@Base+0xa628>
   1d978:	ldr	r2, [r6, #16]
   1d97c:	sub	r2, r2, #64	; 0x40
   1d980:	ldrb	r3, [r2, #37]	; 0x25
   1d984:	ands	r3, r3, #2
   1d988:	beq	1d9d8 <_start@@Base+0xa628>
   1d98c:	ldr	r1, [r5, #4]
   1d990:	ldrb	r3, [r2, #6]
   1d994:	and	r2, r1, #7
   1d998:	cmp	r2, #3
   1d99c:	biceq	r1, r1, #7
   1d9a0:	sub	r9, r3, r9
   1d9a4:	moveq	r4, r5
   1d9a8:	subeq	r5, r5, r1
   1d9ac:	add	r5, r5, r9, lsl #3
   1d9b0:	cmp	r5, r4
   1d9b4:	bcs	1d9d8 <_start@@Base+0xa628>
   1d9b8:	ldr	r3, [pc, #112]	; 1da30 <_start@@Base+0xa680>
   1d9bc:	mov	r0, r5
   1d9c0:	str	r3, [r8]
   1d9c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d9c8:	cmp	r9, #0
   1d9cc:	ldrge	r4, [r7, #20]
   1d9d0:	addge	r5, r5, r9, lsl #3
   1d9d4:	bge	1d93c <_start@@Base+0xa58c>
   1d9d8:	mov	r5, #0
   1d9dc:	mov	r0, r5
   1d9e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d9e4:	mov	r2, r4
   1d9e8:	bl	1b0f8 <_start@@Base+0x7d48>
   1d9ec:	cmp	r4, #0
   1d9f0:	bne	1d968 <_start@@Base+0xa5b8>
   1d9f4:	b	1d964 <_start@@Base+0xa5b4>
   1d9f8:	cmn	r0, #1
   1d9fc:	add	r5, r5, r9, lsl #3
   1da00:	beq	1d93c <_start@@Base+0xa58c>
   1da04:	ldr	r3, [r6, #16]
   1da08:	mov	r1, r0
   1da0c:	sub	r2, r9, #1
   1da10:	ldr	r0, [r3, #-4]
   1da14:	bl	1d474 <_start@@Base+0xa0c4>
   1da18:	cmp	r0, #0
   1da1c:	str	r0, [r8]
   1da20:	beq	1d93c <_start@@Base+0xa58c>
   1da24:	mov	r0, r5
   1da28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1da2c:	andeq	r2, r7, r4, ror ip
   1da30:	andeq	r2, r7, r8, ror #24
   1da34:	ldr	r3, [r0, #100]	; 0x64
   1da38:	ands	r3, r3, #65536	; 0x10000
   1da3c:	beq	1da74 <_start@@Base+0xa6c4>
   1da40:	push	{r4, lr}
   1da44:	mov	r4, r0
   1da48:	ldrh	r1, [r0, #120]	; 0x78
   1da4c:	bl	1c164 <_start@@Base+0x8db4>
   1da50:	cmp	r0, #0
   1da54:	popeq	{r4, pc}
   1da58:	ldrh	r2, [r4, #128]	; 0x80
   1da5c:	ldr	r3, [r4, #16]
   1da60:	mov	r0, #2
   1da64:	ldr	r3, [r3, r2, lsl #3]
   1da68:	ldr	r3, [r3, #28]
   1da6c:	str	r3, [r4, #120]	; 0x78
   1da70:	pop	{r4, pc}
   1da74:	mov	r0, r3
   1da78:	bx	lr
   1da7c:	ldr	r3, [r0, #100]	; 0x64
   1da80:	ands	r3, r3, #65536	; 0x10000
   1da84:	beq	1dabc <_start@@Base+0xa70c>
   1da88:	push	{r4, lr}
   1da8c:	mov	r4, r0
   1da90:	ldrh	r1, [r0, #120]	; 0x78
   1da94:	bl	1c164 <_start@@Base+0x8db4>
   1da98:	cmp	r0, #0
   1da9c:	popeq	{r4, pc}
   1daa0:	ldrh	r2, [r4, #128]	; 0x80
   1daa4:	ldr	r3, [r4, #16]
   1daa8:	mov	r0, #2
   1daac:	ldr	r3, [r3, r2, lsl #3]
   1dab0:	ldr	r3, [r3, #24]
   1dab4:	str	r3, [r4, #120]	; 0x78
   1dab8:	pop	{r4, pc}
   1dabc:	mov	r0, r3
   1dac0:	bx	lr
   1dac4:	ldr	r3, [r0, #100]	; 0x64
   1dac8:	ands	r3, r3, #65536	; 0x10000
   1dacc:	beq	1dafc <_start@@Base+0xa74c>
   1dad0:	push	{r4, lr}
   1dad4:	mov	r4, r0
   1dad8:	ldrh	r1, [r0, #120]	; 0x78
   1dadc:	bl	1c164 <_start@@Base+0x8db4>
   1dae0:	cmp	r0, #0
   1dae4:	mvnne	r3, #0
   1dae8:	ldrhne	r2, [r4, #130]	; 0x82
   1daec:	movne	r0, #2
   1daf0:	mvnne	r3, r3, lsl r2
   1daf4:	strne	r3, [r4, #120]	; 0x78
   1daf8:	pop	{r4, pc}
   1dafc:	mov	r0, r3
   1db00:	bx	lr
   1db04:	uxth	ip, r2
   1db08:	tst	r1, #65536	; 0x10000
   1db0c:	lsl	r1, ip, #3
   1db10:	add	ip, r0, r1
   1db14:	beq	1db68 <_start@@Base+0xa7b8>
   1db18:	push	{r4, lr}
   1db1c:	ldrh	lr, [ip, #2]
   1db20:	tst	lr, #32768	; 0x8000
   1db24:	bne	1db60 <_start@@Base+0xa7b0>
   1db28:	ldrb	ip, [ip, #5]
   1db2c:	sub	r4, ip, #54	; 0x36
   1db30:	cmp	ip, #41	; 0x29
   1db34:	cmpne	r4, #1
   1db38:	bhi	1db60 <_start@@Base+0xa7b0>
   1db3c:	cmp	ip, #55	; 0x37
   1db40:	ldr	lr, [r0, lr, lsl #3]
   1db44:	ldr	ip, [sp, #8]
   1db48:	ldr	r2, [r3]
   1db4c:	mul	ip, lr, ip
   1db50:	subeq	r2, r2, ip
   1db54:	addne	r2, r2, ip
   1db58:	str	r2, [r3]
   1db5c:	ldrh	r2, [r0, r1]
   1db60:	mov	r0, r2
   1db64:	pop	{r4, pc}
   1db68:	mov	r0, r2
   1db6c:	bx	lr
   1db70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1db74:	mov	r7, r0
   1db78:	mov	r4, r1
   1db7c:	mov	r0, r1
   1db80:	mov	r6, r2
   1db84:	mov	r1, #1
   1db88:	mov	r2, r3
   1db8c:	mov	r5, r3
   1db90:	bl	12ed4 <memset@plt>
   1db94:	ldr	r3, [r7]
   1db98:	ldr	r2, [r3, #32]
   1db9c:	cmp	r2, #0
   1dba0:	beq	1dbe4 <_start@@Base+0xa834>
   1dba4:	ldr	r1, [r3, #16]
   1dba8:	ldr	r3, [r2, #16]
   1dbac:	cmp	r1, r3
   1dbb0:	bhi	1dbe4 <_start@@Base+0xa834>
   1dbb4:	mov	r0, #0
   1dbb8:	b	1dbd0 <_start@@Base+0xa820>
   1dbbc:	ldr	r1, [r7]
   1dbc0:	ldr	r3, [r2, #16]
   1dbc4:	ldr	r1, [r1, #16]
   1dbc8:	cmp	r1, r3
   1dbcc:	bhi	1dbe4 <_start@@Base+0xa834>
   1dbd0:	sub	r3, r3, r1
   1dbd4:	strb	r0, [r4, r3, asr #3]
   1dbd8:	ldr	r2, [r2]
   1dbdc:	cmp	r2, #0
   1dbe0:	bne	1dbbc <_start@@Base+0xa80c>
   1dbe4:	sub	lr, r5, #1
   1dbe8:	ldr	r7, [pc, #1004]	; 1dfdc <_start@@Base+0xac2c>
   1dbec:	add	lr, r4, lr
   1dbf0:	sub	r8, r4, #1
   1dbf4:	ldr	r2, [r6]
   1dbf8:	add	r3, r6, #4
   1dbfc:	uxtb	ip, r2
   1dc00:	lsl	r1, ip, #1
   1dc04:	ldrh	r0, [r7, r1]
   1dc08:	lsr	r1, r0, #3
   1dc0c:	and	r1, r1, #15
   1dc10:	cmp	r1, #3
   1dc14:	ldrbeq	r1, [r4, r2, lsr #24]
   1dc18:	biceq	r1, r1, #1
   1dc1c:	strbeq	r1, [r4, r2, lsr #24]
   1dc20:	lsr	r1, r0, #7
   1dc24:	and	r1, r1, #15
   1dc28:	sub	r1, r1, #3
   1dc2c:	cmp	r1, #10
   1dc30:	ldrls	pc, [pc, r1, lsl #2]
   1dc34:	b	1ddcc <_start@@Base+0xaa1c>
   1dc38:			; <UNDEFINED> instruction: 0x0001ddb8
   1dc3c:	andeq	sp, r1, r4, lsl #26
   1dc40:	andeq	sp, r1, ip, asr #27
   1dc44:	andeq	sp, r1, r4, ror #24
   1dc48:	andeq	sp, r1, ip, asr #27
   1dc4c:	andeq	sp, r1, ip, asr #27
   1dc50:	andeq	sp, r1, ip, asr #27
   1dc54:	andeq	sp, r1, ip, asr #27
   1dc58:	andeq	sp, r1, ip, asr #27
   1dc5c:	strdeq	sp, [r1], -ip
   1dc60:	andeq	sp, r1, r4, lsl #25
   1dc64:	cmp	ip, #84	; 0x54
   1dc68:	cmpne	ip, #81	; 0x51
   1dc6c:	moveq	r1, #1
   1dc70:	movne	r1, #0
   1dc74:	cmp	ip, #87	; 0x57
   1dc78:	orreq	r1, r1, #1
   1dc7c:	cmp	r1, #0
   1dc80:	beq	1de24 <_start@@Base+0xaa74>
   1dc84:	lsr	r1, r2, #8
   1dc88:	sub	r0, ip, #77	; 0x4d
   1dc8c:	cmp	r0, #4
   1dc90:	uxtb	r1, r1
   1dc94:	bls	1dcc4 <_start@@Base+0xa914>
   1dc98:	sub	r0, ip, #82	; 0x52
   1dc9c:	cmp	r0, #2
   1dca0:	bls	1dfcc <_start@@Base+0xac1c>
   1dca4:	cmp	ip, #50	; 0x32
   1dca8:	bne	1dcc8 <_start@@Base+0xa918>
   1dcac:	lsr	r2, r2, #16
   1dcb0:	add	r2, r2, #1069547520	; 0x3fc00000
   1dcb4:	add	r2, r2, #4161536	; 0x3f8000
   1dcb8:	add	r3, r3, r2, lsl #2
   1dcbc:	mov	r6, r3
   1dcc0:	b	1dbf4 <_start@@Base+0xa844>
   1dcc4:	add	r1, r1, #3
   1dcc8:	cmp	r5, r1
   1dccc:	bls	1dcf4 <_start@@Base+0xa944>
   1dcd0:	sub	r2, r1, #1
   1dcd4:	sub	r3, r5, #1
   1dcd8:	add	r2, r4, r2
   1dcdc:	add	r4, r4, r3
   1dce0:	ldrb	r3, [r2, #1]!
   1dce4:	cmp	r4, r2
   1dce8:	add	r3, r3, r3, lsl #1
   1dcec:	strb	r3, [r2]
   1dcf0:	bne	1dce0 <_start@@Base+0xa930>
   1dcf4:	cmp	r5, r1
   1dcf8:	movcs	r5, r1
   1dcfc:	mov	r0, r5
   1dd00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dd04:	lsr	sl, r2, #16
   1dd08:	lsr	r1, r2, #24
   1dd0c:	uxtb	sl, sl
   1dd10:	cmp	r1, sl
   1dd14:	bhi	1dd38 <_start@@Base+0xa988>
   1dd18:	sub	r9, r1, #1
   1dd1c:	add	r9, r4, r9
   1dd20:	ldrb	r6, [r9, #1]!
   1dd24:	add	r1, r1, #1
   1dd28:	cmp	r1, sl
   1dd2c:	bic	r6, r6, #1
   1dd30:	strb	r6, [r9]
   1dd34:	bls	1dd20 <_start@@Base+0xa970>
   1dd38:	cmp	r5, r1
   1dd3c:	bls	1ddcc <_start@@Base+0xaa1c>
   1dd40:	sub	r1, r1, #1
   1dd44:	add	r1, r4, r1
   1dd48:	ldrb	r6, [r1, #1]!
   1dd4c:	cmp	lr, r1
   1dd50:	add	r6, r6, r6, lsl #1
   1dd54:	strb	r6, [r1]
   1dd58:	bne	1dd48 <_start@@Base+0xa998>
   1dd5c:	and	r0, r0, #7
   1dd60:	cmp	r0, #2
   1dd64:	bne	1ddd8 <_start@@Base+0xaa28>
   1dd68:	sub	r1, ip, #65	; 0x41
   1dd6c:	cmp	r1, #6
   1dd70:	bls	1ded4 <_start@@Base+0xab24>
   1dd74:	cmp	ip, #44	; 0x2c
   1dd78:	beq	1df94 <_start@@Base+0xabe4>
   1dd7c:	cmp	ip, #63	; 0x3f
   1dd80:	bne	1dcbc <_start@@Base+0xa90c>
   1dd84:	lsr	r2, r2, #8
   1dd88:	uxtb	r2, r2
   1dd8c:	sub	r1, r2, #1
   1dd90:	cmp	r5, r1
   1dd94:	bls	1dcbc <_start@@Base+0xa90c>
   1dd98:	sub	r2, r2, #2
   1dd9c:	add	r2, r4, r2
   1dda0:	ldrb	r1, [r2, #1]!
   1dda4:	bic	r1, r1, #1
   1dda8:	cmp	lr, r2
   1ddac:	strb	r1, [r2]
   1ddb0:	bne	1dda0 <_start@@Base+0xa9f0>
   1ddb4:	b	1dcbc <_start@@Base+0xa90c>
   1ddb8:	lsr	r1, r2, #16
   1ddbc:	uxtb	r1, r1
   1ddc0:	ldrb	r6, [r4, r1]
   1ddc4:	bic	r6, r6, #1
   1ddc8:	strb	r6, [r4, r1]
   1ddcc:	and	r0, r0, #7
   1ddd0:	cmp	r0, #2
   1ddd4:	beq	1dd68 <_start@@Base+0xa9b8>
   1ddd8:	cmp	r0, #3
   1dddc:	beq	1de0c <_start@@Base+0xaa5c>
   1dde0:	cmp	r0, #1
   1dde4:	bne	1dcbc <_start@@Base+0xa90c>
   1dde8:	sub	ip, ip, #12
   1ddec:	cmp	ip, #1
   1ddf0:	bls	1dcbc <_start@@Base+0xa90c>
   1ddf4:	lsr	r2, r2, #8
   1ddf8:	uxtb	r2, r2
   1ddfc:	ldrb	r1, [r4, r2]
   1de00:	add	r1, r1, r1, lsl #1
   1de04:	strb	r1, [r4, r2]
   1de08:	b	1dcbc <_start@@Base+0xa90c>
   1de0c:	lsr	r2, r2, #8
   1de10:	uxtb	r2, r2
   1de14:	ldrb	r1, [r4, r2]
   1de18:	bic	r1, r1, #1
   1de1c:	strb	r1, [r4, r2]
   1de20:	b	1dcbc <_start@@Base+0xa90c>
   1de24:	sub	r1, ip, #73	; 0x49
   1de28:	cmp	r1, #3
   1de2c:	bhi	1ddcc <_start@@Base+0xaa1c>
   1de30:	cmp	ip, #73	; 0x49
   1de34:	lsr	r1, r2, #8
   1de38:	lsrne	r3, r2, #16
   1de3c:	uxtb	r1, r1
   1de40:	subne	r3, r3, #1
   1de44:	addne	r3, r3, r1
   1de48:	moveq	r3, r5
   1de4c:	cmp	r1, #0
   1de50:	beq	1de70 <_start@@Base+0xaac0>
   1de54:	sub	r0, r4, #1
   1de58:	add	ip, r0, r1
   1de5c:	ldrb	r2, [r0, #1]!
   1de60:	cmp	ip, r0
   1de64:	add	r2, r2, r2, lsl #1
   1de68:	strb	r2, [r0]
   1de6c:	bne	1de5c <_start@@Base+0xaaac>
   1de70:	cmp	r3, r1
   1de74:	movls	r3, r1
   1de78:	bls	1dea0 <_start@@Base+0xaaf0>
   1de7c:	sub	r2, r1, #1
   1de80:	sub	r0, r4, #1
   1de84:	add	r2, r4, r2
   1de88:	add	r0, r0, r3
   1de8c:	ldrb	r1, [r2, #1]!
   1de90:	bic	r1, r1, #1
   1de94:	cmp	r0, r2
   1de98:	strb	r1, [r2]
   1de9c:	bne	1de8c <_start@@Base+0xaadc>
   1dea0:	cmp	r5, r3
   1dea4:	bls	1decc <_start@@Base+0xab1c>
   1dea8:	sub	r3, r3, #1
   1deac:	sub	r5, r5, #1
   1deb0:	add	r3, r4, r3
   1deb4:	add	r4, r4, r5
   1deb8:	ldrb	r2, [r3, #1]!
   1debc:	cmp	r4, r3
   1dec0:	add	r2, r2, r2, lsl #1
   1dec4:	strb	r2, [r3]
   1dec8:	bne	1deb8 <_start@@Base+0xab08>
   1decc:	mov	r5, #0
   1ded0:	b	1dcfc <_start@@Base+0xa94c>
   1ded4:	lsr	r0, r2, #8
   1ded8:	and	r1, r2, #253	; 0xfd
   1dedc:	cmp	r1, #65	; 0x41
   1dee0:	uxtb	r0, r0
   1dee4:	bne	1df80 <_start@@Base+0xabd0>
   1dee8:	mov	r2, r5
   1deec:	sub	r1, ip, #69	; 0x45
   1def0:	cmp	r1, #1
   1def4:	subls	r1, r0, #3
   1def8:	movhi	r1, r0
   1defc:	cmp	r2, r1
   1df00:	movls	r2, r1
   1df04:	bls	1df28 <_start@@Base+0xab78>
   1df08:	sub	r1, r1, #1
   1df0c:	add	r1, r4, r1
   1df10:	add	r9, r8, r2
   1df14:	ldrb	r6, [r1, #1]!
   1df18:	bic	r6, r6, #1
   1df1c:	cmp	r9, r1
   1df20:	strb	r6, [r1]
   1df24:	bne	1df14 <_start@@Base+0xab64>
   1df28:	cmp	r5, r2
   1df2c:	bls	1df4c <_start@@Base+0xab9c>
   1df30:	sub	r2, r2, #1
   1df34:	add	r2, r4, r2
   1df38:	ldrb	r1, [r2, #1]!
   1df3c:	cmp	lr, r2
   1df40:	add	r1, r1, r1, lsl #1
   1df44:	strb	r1, [r2]
   1df48:	bne	1df38 <_start@@Base+0xab88>
   1df4c:	sub	ip, ip, #67	; 0x43
   1df50:	cmp	ip, #1
   1df54:	bhi	1dcbc <_start@@Base+0xa90c>
   1df58:	cmp	r0, #0
   1df5c:	beq	1decc <_start@@Base+0xab1c>
   1df60:	sub	r4, r4, #1
   1df64:	add	r0, r4, r0
   1df68:	ldrb	r3, [r4, #1]!
   1df6c:	cmp	r4, r0
   1df70:	add	r3, r3, r3, lsl #1
   1df74:	strb	r3, [r4]
   1df78:	bne	1df68 <_start@@Base+0xabb8>
   1df7c:	b	1decc <_start@@Base+0xab1c>
   1df80:	lsr	r2, r2, #16
   1df84:	ands	r2, r2, #255	; 0xff
   1df88:	addne	r2, r2, r0
   1df8c:	bne	1deec <_start@@Base+0xab3c>
   1df90:	b	1dee8 <_start@@Base+0xab38>
   1df94:	lsr	r0, r2, #8
   1df98:	lsr	r2, r2, #16
   1df9c:	uxtb	r0, r0
   1dfa0:	cmp	r0, r2
   1dfa4:	bhi	1dcbc <_start@@Base+0xa90c>
   1dfa8:	sub	ip, r0, #1
   1dfac:	add	ip, r4, ip
   1dfb0:	ldrb	r1, [ip, #1]!
   1dfb4:	add	r0, r0, #1
   1dfb8:	cmp	r0, r2
   1dfbc:	add	r1, r1, r1, lsl #1
   1dfc0:	strb	r1, [ip]
   1dfc4:	bls	1dfb0 <_start@@Base+0xac00>
   1dfc8:	b	1dcbc <_start@@Base+0xa90c>
   1dfcc:	ldrb	r3, [r6, #-1]
   1dfd0:	sub	r1, r1, #1
   1dfd4:	add	r1, r3, r1
   1dfd8:	b	1dcc8 <_start@@Base+0xa918>
   1dfdc:	andeq	pc, r6, ip, ror r0	; <UNPREDICTABLE>
   1dfe0:	push	{r4, r5, lr}
   1dfe4:	sub	sp, sp, #260	; 0x104
   1dfe8:	ldr	r4, [r0, #104]	; 0x68
   1dfec:	cmp	r4, #0
   1dff0:	bne	1dffc <_start@@Base+0xac4c>
   1dff4:	add	sp, sp, #260	; 0x104
   1dff8:	pop	{r4, r5, pc}
   1dffc:	ldr	r2, [r0, #84]	; 0x54
   1e000:	mov	r5, r0
   1e004:	mov	r1, sp
   1e008:	mov	r3, r4
   1e00c:	add	r0, r0, #80	; 0x50
   1e010:	bl	1db70 <_start@@Base+0xa7c0>
   1e014:	cmp	r4, r0
   1e018:	bls	1dff4 <_start@@Base+0xac44>
   1e01c:	add	r2, sp, r0
   1e020:	lsl	r3, r0, #2
   1e024:	lsl	ip, r4, #2
   1e028:	mov	r0, #0
   1e02c:	ldrb	r1, [r2], #1
   1e030:	cmp	r1, #0
   1e034:	ldrne	r1, [r5, #96]	; 0x60
   1e038:	strne	r0, [r1, r3]
   1e03c:	add	r3, r3, #4
   1e040:	cmp	r3, ip
   1e044:	bne	1e02c <_start@@Base+0xac7c>
   1e048:	add	sp, sp, #260	; 0x104
   1e04c:	pop	{r4, r5, pc}
   1e050:	cmp	r2, #0
   1e054:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e058:	moveq	r2, #8
   1e05c:	ldr	r3, [r1, #4]
   1e060:	ldrh	r8, [r0, #24]
   1e064:	ldrne	r2, [pc, #356]	; 1e1d0 <_start@@Base+0xae20>
   1e068:	ldr	fp, [r0, #28]
   1e06c:	addne	r2, r2, r3, lsr #16
   1e070:	sub	r8, r8, #-536870911	; 0xe0000001
   1e074:	lslne	r2, r2, #2
   1e078:	lsl	r8, r8, #3
   1e07c:	add	r1, r1, r2
   1e080:	add	r2, fp, r8
   1e084:	ldrh	sl, [fp, r8]
   1e088:	ldrb	r4, [r2, #6]
   1e08c:	ldr	r5, [r0, #32]
   1e090:	mov	r6, r0
   1e094:	add	r0, r4, sl
   1e098:	lsr	r3, r3, #8
   1e09c:	str	r1, [r5, r0, lsl #2]
   1e0a0:	ldr	r9, [r6, #104]	; 0x68
   1e0a4:	uxtb	r3, r3
   1e0a8:	cmp	r3, r9
   1e0ac:	sub	sp, sp, #268	; 0x10c
   1e0b0:	movcc	r9, r3
   1e0b4:	ldr	r7, [r6, #108]	; 0x6c
   1e0b8:	str	r2, [sp]
   1e0bc:	strcc	r3, [r6, #104]	; 0x68
   1e0c0:	mov	r2, #1
   1e0c4:	cmp	r9, #0
   1e0c8:	strb	r2, [r6, #113]	; 0x71
   1e0cc:	add	r5, r5, sl, lsl #2
   1e0d0:	moveq	r0, r7
   1e0d4:	bne	1e1a0 <_start@@Base+0xadf0>
   1e0d8:	ldr	r3, [sp]
   1e0dc:	add	r9, r7, r9
   1e0e0:	cmp	r4, #0
   1e0e4:	strb	r9, [r3, #4]
   1e0e8:	ldrh	lr, [r6, #26]
   1e0ec:	sub	lr, lr, sl
   1e0f0:	sub	lr, lr, #1
   1e0f4:	beq	1e1c0 <_start@@Base+0xae10>
   1e0f8:	mov	r2, r5
   1e0fc:	add	fp, r5, r4, lsl #2
   1e100:	mov	r3, #0
   1e104:	str	lr, [sp, #4]
   1e108:	ldr	ip, [r2], #4
   1e10c:	lsr	r1, ip, #24
   1e110:	cmp	r1, r0
   1e114:	bcc	1e138 <_start@@Base+0xad88>
   1e118:	sub	r8, r1, r7
   1e11c:	add	lr, sp, #264	; 0x108
   1e120:	cmp	r9, r1
   1e124:	add	r8, lr, r8
   1e128:	bls	1e140 <_start@@Base+0xad90>
   1e12c:	ldrb	r1, [r8, #-256]	; 0xffffff00
   1e130:	cmp	r1, #0
   1e134:	bne	1e140 <_start@@Base+0xad90>
   1e138:	str	ip, [r5, r3, lsl #2]
   1e13c:	add	r3, r3, #1
   1e140:	cmp	fp, r2
   1e144:	bne	1e108 <_start@@Base+0xad58>
   1e148:	ldr	lr, [sp, #4]
   1e14c:	ldr	r2, [sp]
   1e150:	cmp	r4, lr
   1e154:	movhi	r1, r3
   1e158:	strb	r3, [r2, #6]
   1e15c:	bhi	1e190 <_start@@Base+0xade0>
   1e160:	sub	r0, r4, #-1073741823	; 0xc0000001
   1e164:	sub	r2, r3, #-1073741823	; 0xc0000001
   1e168:	add	r0, r5, r0, lsl #2
   1e16c:	mov	r1, r3
   1e170:	add	r5, r5, r2, lsl #2
   1e174:	add	r1, r1, #1
   1e178:	add	r2, r1, r4
   1e17c:	sub	r2, r2, r3
   1e180:	ldr	ip, [r0, #4]!
   1e184:	cmp	r2, lr
   1e188:	str	ip, [r5, #4]!
   1e18c:	bls	1e174 <_start@@Base+0xadc4>
   1e190:	add	sl, sl, r1
   1e194:	strh	sl, [r6, #26]
   1e198:	add	sp, sp, #268	; 0x10c
   1e19c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e1a0:	mov	r3, r9
   1e1a4:	ldr	r2, [r5, r4, lsl #2]
   1e1a8:	add	r1, sp, #8
   1e1ac:	add	r0, r6, #80	; 0x50
   1e1b0:	bl	1db70 <_start@@Base+0xa7c0>
   1e1b4:	ldrh	sl, [fp, r8]
   1e1b8:	add	r0, r7, r0
   1e1bc:	b	1e0d8 <_start@@Base+0xad28>
   1e1c0:	ldr	r3, [sp]
   1e1c4:	strb	r4, [r3, #6]
   1e1c8:	mov	r3, r4
   1e1cc:	b	1e160 <_start@@Base+0xadb0>
   1e1d0:	svccc	0x00ff8002
   1e1d4:	vldr	d6, [r0]
   1e1d8:	vcvt.s32.f64	s15, d6
   1e1dc:	vmov	r3, s15
   1e1e0:	cmp	r3, #134217728	; 0x8000000
   1e1e4:	bhi	1e220 <_start@@Base+0xae70>
   1e1e8:	vcvt.f64.s32	d5, s15
   1e1ec:	vcmp.f64	d6, d5
   1e1f0:	vmrs	APSR_nzcv, fpscr
   1e1f4:	bne	1e220 <_start@@Base+0xae70>
   1e1f8:	cmp	r3, #2
   1e1fc:	subgt	r3, r3, #1
   1e200:	clzgt	r3, r3
   1e204:	eorgt	r3, r3, #31
   1e208:	mov	r0, #1
   1e20c:	addgt	r1, r1, r3, lsl #2
   1e210:	ldr	r3, [r1]
   1e214:	add	r3, r3, r0
   1e218:	str	r3, [r1]
   1e21c:	bx	lr
   1e220:	mov	r0, #0
   1e224:	bx	lr
   1e228:	ldr	r3, [r1]
   1e22c:	lsr	r2, r3, #28
   1e230:	cmp	r2, #5
   1e234:	uxtheq	r2, r3
   1e238:	ldreq	r1, [r0]
   1e23c:	ldreq	r3, [r1, r2, lsl #4]
   1e240:	addeq	r1, r1, r2, lsl #4
   1e244:	lsreq	r2, r3, #28
   1e248:	cmp	r2, #0
   1e24c:	bne	1e298 <_start@@Base+0xaee8>
   1e250:	tst	r3, #67108864	; 0x4000000
   1e254:	ldr	r0, [r1, #4]
   1e258:	beq	1e274 <_start@@Base+0xaec4>
   1e25c:	cmp	r0, #8
   1e260:	beq	1e2b4 <_start@@Base+0xaf04>
   1e264:	cmp	r0, #4
   1e268:	movne	r0, #10
   1e26c:	moveq	r0, #13
   1e270:	bx	lr
   1e274:	clz	r0, r0
   1e278:	eor	r2, r0, #31
   1e27c:	cmp	r2, #3
   1e280:	bgt	1e2ac <_start@@Base+0xaefc>
   1e284:	lsr	r0, r3, #23
   1e288:	and	r0, r0, #1
   1e28c:	add	r0, r0, #15
   1e290:	add	r0, r0, r2, lsl #1
   1e294:	bx	lr
   1e298:	cmp	r2, #2
   1e29c:	beq	1e2d8 <_start@@Base+0xaf28>
   1e2a0:	and	r3, r3, #-201326592	; 0xf4000000
   1e2a4:	cmp	r3, #872415232	; 0x34000000
   1e2a8:	beq	1e2bc <_start@@Base+0xaf0c>
   1e2ac:	mov	r0, #10
   1e2b0:	bx	lr
   1e2b4:	mov	r0, #14
   1e2b8:	bx	lr
   1e2bc:	ldr	r3, [r1, #4]
   1e2c0:	cmp	r3, #16
   1e2c4:	beq	1e2b4 <_start@@Base+0xaf04>
   1e2c8:	cmp	r3, #8
   1e2cc:	movne	r0, #10
   1e2d0:	moveq	r0, #13
   1e2d4:	bx	lr
   1e2d8:	mov	r0, #5
   1e2dc:	bx	lr
   1e2e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2e4:	sub	sp, sp, #20
   1e2e8:	ldr	r4, [pc, #816]	; 1e620 <_start@@Base+0xb270>
   1e2ec:	mov	r6, r0
   1e2f0:	mov	r5, r1
   1e2f4:	str	r1, [sp, #4]
   1e2f8:	mov	r0, r4
   1e2fc:	mov	r1, r2
   1e300:	mov	r7, r2
   1e304:	bl	16d00 <_start@@Base+0x3950>
   1e308:	lsl	r3, r5, #12
   1e30c:	str	r3, [sp]
   1e310:	ldr	r9, [r6, #128]	; 0x80
   1e314:	cmp	r0, #0
   1e318:	bne	1e404 <_start@@Base+0xb054>
   1e31c:	ldr	r3, [r6, #160]	; 0xa0
   1e320:	ands	r3, r3, #96	; 0x60
   1e324:	str	r3, [sp, #8]
   1e328:	beq	1e554 <_start@@Base+0xb1a4>
   1e32c:	cmp	r7, #65536	; 0x10000
   1e330:	bcc	1e568 <_start@@Base+0xb1b8>
   1e334:	ldr	r3, [r6, #144]	; 0x90
   1e338:	ldr	r8, [pc, #740]	; 1e624 <_start@@Base+0xb274>
   1e33c:	bics	r8, r8, r3
   1e340:	beq	1e3ac <_start@@Base+0xaffc>
   1e344:	ldr	sl, [pc, #732]	; 1e628 <_start@@Base+0xb278>
   1e348:	mov	r5, r8
   1e34c:	mov	fp, #1
   1e350:	clz	r4, r5
   1e354:	eor	r4, r4, #31
   1e358:	ldr	r3, [r6, r4, lsl #2]
   1e35c:	uxth	r3, r3
   1e360:	cmp	r3, sl
   1e364:	bhi	1e390 <_start@@Base+0xafe0>
   1e368:	cmp	r3, #15
   1e36c:	add	r2, r3, #64	; 0x40
   1e370:	ldrhi	r2, [r6, #136]	; 0x88
   1e374:	ldrls	r1, [r6, r2, lsl #2]
   1e378:	ldr	r0, [pc, #684]	; 1e62c <_start@@Base+0xb27c>
   1e37c:	ldrhi	r1, [r2, r3, lsl #3]
   1e380:	sub	r1, r7, r1
   1e384:	bl	16d00 <_start@@Base+0x3950>
   1e388:	cmp	r0, #0
   1e38c:	bne	1e59c <_start@@Base+0xb1ec>
   1e390:	bics	r5, r5, fp, lsl r4
   1e394:	bne	1e350 <_start@@Base+0xafa0>
   1e398:	ldr	r3, [sp, #8]
   1e39c:	cmp	r3, #0
   1e3a0:	streq	r9, [sp, #12]
   1e3a4:	ldreq	r2, [pc, #636]	; 1e628 <_start@@Base+0xb278>
   1e3a8:	beq	1e420 <_start@@Base+0xb070>
   1e3ac:	ldr	ip, [sp]
   1e3b0:	asr	r2, r7, #16
   1e3b4:	ldr	r3, [pc, #628]	; 1e630 <_start@@Base+0xb280>
   1e3b8:	orr	r0, ip, #-486539264	; 0xe3000000
   1e3bc:	and	r1, r2, r3
   1e3c0:	orr	r0, r0, #4194304	; 0x400000
   1e3c4:	and	r3, r3, r7
   1e3c8:	orr	sl, ip, #-486539264	; 0xe3000000
   1e3cc:	lsl	r2, r2, #4
   1e3d0:	lsl	r7, r7, #4
   1e3d4:	orr	r1, r1, r0
   1e3d8:	and	r7, r7, #983040	; 0xf0000
   1e3dc:	orr	r3, r3, sl
   1e3e0:	and	r2, r2, #983040	; 0xf0000
   1e3e4:	orr	r2, r1, r2
   1e3e8:	orr	r3, r3, r7
   1e3ec:	sub	r1, r9, #8
   1e3f0:	str	r2, [r9, #-4]
   1e3f4:	str	r1, [r6, #128]	; 0x80
   1e3f8:	str	r3, [r9, #-8]
   1e3fc:	add	sp, sp, #20
   1e400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e404:	eor	r0, r0, r4
   1e408:	orr	sl, r0, r3
   1e40c:	sub	r3, r9, #4
   1e410:	str	r3, [r6, #128]	; 0x80
   1e414:	str	sl, [r9, #-4]
   1e418:	add	sp, sp, #20
   1e41c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e420:	clz	r4, r8
   1e424:	eor	r4, r4, #31
   1e428:	ldr	r3, [r6, r4, lsl #2]
   1e42c:	uxth	r3, r3
   1e430:	cmp	r3, r2
   1e434:	bhi	1e4ac <_start@@Base+0xb0fc>
   1e438:	cmp	r3, #15
   1e43c:	add	r1, r3, #64	; 0x40
   1e440:	ldrhi	r1, [r6, #136]	; 0x88
   1e444:	ldrls	r3, [r6, r1, lsl #2]
   1e448:	ldrhi	r3, [r1, r3, lsl #3]
   1e44c:	cmp	r3, #0
   1e450:	beq	1e4ac <_start@@Base+0xb0fc>
   1e454:	subs	r9, r7, r3
   1e458:	rsbmi	r9, r9, #0
   1e45c:	rsb	r5, r9, #0
   1e460:	and	r5, r5, r9
   1e464:	clz	r5, r5
   1e468:	rsb	r5, r5, #31
   1e46c:	mov	r3, #255	; 0xff
   1e470:	bic	r5, r5, #1
   1e474:	mov	r0, #0
   1e478:	lsl	r5, r3, r5
   1e47c:	and	r1, r9, r5
   1e480:	str	r2, [sp, #8]
   1e484:	mov	sl, #0
   1e488:	movmi	sl, #12582912	; 0xc00000
   1e48c:	bl	16d00 <_start@@Base+0x3950>
   1e490:	bic	r1, r9, r5
   1e494:	mov	fp, r0
   1e498:	mov	r0, #0
   1e49c:	bl	16d00 <_start@@Base+0x3950>
   1e4a0:	ldr	r2, [sp, #8]
   1e4a4:	cmp	r0, #0
   1e4a8:	bne	1e5d8 <_start@@Base+0xb228>
   1e4ac:	mov	r3, #1
   1e4b0:	bics	r8, r8, r3, lsl r4
   1e4b4:	bne	1e420 <_start@@Base+0xb070>
   1e4b8:	ldr	r9, [sp, #12]
   1e4bc:	rsb	r3, r7, #0
   1e4c0:	and	r3, r3, r7
   1e4c4:	clz	r3, r3
   1e4c8:	rsb	r3, r3, #31
   1e4cc:	bic	r3, r3, #1
   1e4d0:	mov	r4, #255	; 0xff
   1e4d4:	lsl	r3, r4, r3
   1e4d8:	and	r1, r7, r3
   1e4dc:	bics	r7, r7, r3
   1e4e0:	beq	1e52c <_start@@Base+0xb17c>
   1e4e4:	ldr	r2, [sp, #4]
   1e4e8:	ldr	r3, [sp]
   1e4ec:	ldr	r5, [pc, #320]	; 1e634 <_start@@Base+0xb284>
   1e4f0:	orr	fp, r3, r2, lsl #16
   1e4f4:	mov	r0, #0
   1e4f8:	bl	16d00 <_start@@Base+0x3950>
   1e4fc:	rsb	r3, r7, #0
   1e500:	and	r3, r3, r7
   1e504:	clz	r3, r3
   1e508:	rsb	r3, r3, #31
   1e50c:	bic	r3, r3, #1
   1e510:	lsl	r3, r4, r3
   1e514:	and	r1, r3, r7
   1e518:	bics	r7, r7, r3
   1e51c:	eor	r0, r0, r5
   1e520:	orr	r0, r0, fp
   1e524:	str	r0, [r9, #-4]!
   1e528:	bne	1e4f4 <_start@@Base+0xb144>
   1e52c:	mov	r0, #0
   1e530:	bl	16d00 <_start@@Base+0x3950>
   1e534:	sub	r3, r9, #4
   1e538:	str	r3, [r6, #128]	; 0x80
   1e53c:	ldr	r3, [sp]
   1e540:	eor	r0, r0, #-520093696	; 0xe1000000
   1e544:	eor	r0, r0, #10485760	; 0xa00000
   1e548:	orr	r0, r0, r3
   1e54c:	str	r0, [r9, #-4]
   1e550:	b	1e418 <_start@@Base+0xb068>
   1e554:	ldr	r3, [r6, #144]	; 0x90
   1e558:	ldr	r8, [pc, #196]	; 1e624 <_start@@Base+0xb274>
   1e55c:	bics	r8, r8, r3
   1e560:	bne	1e344 <_start@@Base+0xaf94>
   1e564:	b	1e4bc <_start@@Base+0xb10c>
   1e568:	ldr	r2, [sp]
   1e56c:	lsl	r3, r7, #20
   1e570:	orr	sl, r2, #-486539264	; 0xe3000000
   1e574:	lsr	r3, r3, #20
   1e578:	lsl	r7, r7, #4
   1e57c:	orr	r3, r3, sl
   1e580:	and	r7, r7, #983040	; 0xf0000
   1e584:	orr	r3, r3, r7
   1e588:	sub	r2, r9, #4
   1e58c:	str	r2, [r6, #128]	; 0x80
   1e590:	str	r3, [r9, #-4]
   1e594:	add	sp, sp, #20
   1e598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e59c:	cmp	r0, #33554432	; 0x2000000
   1e5a0:	eorne	r0, r0, #-536870912	; 0xe0000000
   1e5a4:	ldreq	r2, [sp]
   1e5a8:	eorne	r0, r0, #8388608	; 0x800000
   1e5ac:	orreq	sl, r2, #-520093696	; 0xe1000000
   1e5b0:	ldrne	r2, [sp]
   1e5b4:	orreq	sl, sl, #10485760	; 0xa00000
   1e5b8:	orrne	r4, r0, r4, lsl #16
   1e5bc:	sub	r3, r9, #4
   1e5c0:	orreq	sl, sl, r4
   1e5c4:	orrne	sl, r4, r2
   1e5c8:	str	r3, [r6, #128]	; 0x80
   1e5cc:	str	sl, [r9, #-4]
   1e5d0:	add	sp, sp, #20
   1e5d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e5d8:	eor	r1, r0, sl
   1e5dc:	ldr	r0, [sp, #4]
   1e5e0:	ldr	ip, [pc, #68]	; 1e62c <_start@@Base+0xb27c>
   1e5e4:	mov	r2, fp
   1e5e8:	ldr	r3, [sp]
   1e5ec:	ldr	r9, [sp, #12]
   1e5f0:	eor	r2, r2, sl
   1e5f4:	orr	fp, r3, r0, lsl #16
   1e5f8:	eor	r1, r1, ip
   1e5fc:	orr	r3, r3, r4, lsl #16
   1e600:	eor	r2, r2, ip
   1e604:	orr	r3, r3, r1
   1e608:	orr	r2, r2, fp
   1e60c:	sub	r1, r9, #8
   1e610:	str	r2, [r9, #-4]
   1e614:	str	r1, [r6, #128]	; 0x80
   1e618:	str	r3, [r9, #-8]
   1e61c:	b	1e418 <_start@@Base+0xb068>
   1e620:	nop			; (mov r0, r0)
   1e624:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   1e628:	strdeq	r7, [r0], -lr
   1e62c:	add	r0, r0, r0
   1e630:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1e634:	orr	r0, r0, r0
   1e638:	ldr	r3, [r0, #4]
   1e63c:	cmn	r3, #15
   1e640:	bxls	lr
   1e644:	cmn	r3, #14
   1e648:	push	{r4, lr}
   1e64c:	mov	r4, r1
   1e650:	beq	1e67c <_start@@Base+0xb2cc>
   1e654:	cmn	r3, #5
   1e658:	bne	1e690 <_start@@Base+0xb2e0>
   1e65c:	ldr	r0, [r0]
   1e660:	mov	r2, #2
   1e664:	add	r0, r0, #16
   1e668:	bl	189f0 <_start@@Base+0x5640>
   1e66c:	cmp	r0, #0
   1e670:	beq	1e690 <_start@@Base+0xb2e0>
   1e674:	mov	r0, r4
   1e678:	pop	{r4, pc}
   1e67c:	vldr	s14, [r0]
   1e680:	mov	r0, r1
   1e684:	vcvt.f64.s32	d7, s14
   1e688:	vstr	d7, [r1]
   1e68c:	pop	{r4, pc}
   1e690:	mov	r0, #0
   1e694:	pop	{r4, pc}
   1e698:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e69c:	sub	r8, r3, #1
   1e6a0:	subs	r4, r2, r8
   1e6a4:	ldrb	r9, [r1]
   1e6a8:	beq	1e704 <_start@@Base+0xb354>
   1e6ac:	mov	r6, r0
   1e6b0:	add	sl, r1, #1
   1e6b4:	b	1e6d4 <_start@@Base+0xb324>
   1e6b8:	bl	12d00 <memcmp@plt>
   1e6bc:	sub	r3, r5, r6
   1e6c0:	mov	r6, r5
   1e6c4:	cmp	r0, #0
   1e6c8:	beq	1e6fc <_start@@Base+0xb34c>
   1e6cc:	subs	r4, r4, r3
   1e6d0:	beq	1e704 <_start@@Base+0xb354>
   1e6d4:	mov	r2, r4
   1e6d8:	mov	r1, r9
   1e6dc:	mov	r0, r6
   1e6e0:	bl	12f40 <memchr@plt>
   1e6e4:	mov	r2, r8
   1e6e8:	mov	r1, sl
   1e6ec:	subs	r7, r0, #0
   1e6f0:	add	r5, r7, #1
   1e6f4:	mov	r0, r5
   1e6f8:	bne	1e6b8 <_start@@Base+0xb308>
   1e6fc:	mov	r0, r7
   1e700:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e704:	mov	r7, r4
   1e708:	mov	r0, r7
   1e70c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e710:	cmp	r3, r2
   1e714:	bhi	1e730 <_start@@Base+0xb380>
   1e718:	cmp	r3, #0
   1e71c:	beq	1e724 <_start@@Base+0xb374>
   1e720:	b	1e698 <_start@@Base+0xb2e8>
   1e724:	push	{lr}		; (str lr, [sp, #-4]!)
   1e728:	mov	lr, r0
   1e72c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e730:	mov	r0, #0
   1e734:	bx	lr
   1e738:	push	{lr}		; (str lr, [sp, #-4]!)
   1e73c:	sub	sp, sp, #396	; 0x18c
   1e740:	mov	r0, sp
   1e744:	bl	12d18 <uname@plt>
   1e748:	mov	r2, #4
   1e74c:	ldr	r1, [pc, #48]	; 1e784 <_start@@Base+0xb3d4>
   1e750:	add	r0, sp, #260	; 0x104
   1e754:	bl	13048 <strncmp@plt>
   1e758:	cmp	r0, #0
   1e75c:	bne	1e76c <_start@@Base+0xb3bc>
   1e760:	ldrb	r3, [sp, #264]	; 0x108
   1e764:	cmp	r3, #54	; 0x36
   1e768:	bhi	1e778 <_start@@Base+0xb3c8>
   1e76c:	mov	r0, #144	; 0x90
   1e770:	add	sp, sp, #396	; 0x18c
   1e774:	pop	{pc}		; (ldr pc, [sp], #4)
   1e778:	mov	r0, #320	; 0x140
   1e77c:	add	sp, sp, #396	; 0x18c
   1e780:	pop	{pc}		; (ldr pc, [sp], #4)
   1e784:	andeq	r2, r7, r4, lsl #25
   1e788:	cmp	r1, #0
   1e78c:	beq	1e964 <_start@@Base+0xb5b4>
   1e790:	ldr	r3, [r1, #-4]
   1e794:	sub	r2, r1, #8
   1e798:	tst	r3, #1
   1e79c:	bic	r3, r3, #3
   1e7a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e7a4:	mov	r4, r0
   1e7a8:	sub	sp, sp, #12
   1e7ac:	add	r0, r2, r3
   1e7b0:	beq	1e8a8 <_start@@Base+0xb4f8>
   1e7b4:	ldr	r1, [r0, #4]
   1e7b8:	ands	r6, r1, #2
   1e7bc:	bne	1e900 <_start@@Base+0xb550>
   1e7c0:	ldr	ip, [r4, #20]
   1e7c4:	ldr	r5, [r4, #16]
   1e7c8:	cmp	ip, r0
   1e7cc:	beq	1ead0 <_start@@Base+0xb720>
   1e7d0:	cmp	r0, r5
   1e7d4:	beq	1e998 <_start@@Base+0xb5e8>
   1e7d8:	bic	r1, r1, #3
   1e7dc:	add	r3, r3, r1
   1e7e0:	lsr	r1, r1, #3
   1e7e4:	cmp	r1, #31
   1e7e8:	ldr	lr, [r0, #12]
   1e7ec:	bhi	1eb54 <_start@@Base+0xb7a4>
   1e7f0:	ldr	r0, [r0, #8]
   1e7f4:	cmp	r0, lr
   1e7f8:	moveq	ip, #1
   1e7fc:	ldreq	r0, [r4]
   1e800:	strne	lr, [r0, #12]
   1e804:	biceq	r1, r0, ip, lsl r1
   1e808:	strne	r0, [lr, #8]
   1e80c:	streq	r1, [r4]
   1e810:	cmp	r2, r5
   1e814:	orr	r1, r3, #1
   1e818:	str	r1, [r2, #4]
   1e81c:	str	r3, [r2, r3]
   1e820:	streq	r3, [r4, #8]
   1e824:	beq	1e958 <_start@@Base+0xb5a8>
   1e828:	lsr	r1, r3, #3
   1e82c:	cmp	r1, #31
   1e830:	bls	1e920 <_start@@Base+0xb570>
   1e834:	lsr	r1, r3, #8
   1e838:	cmp	r1, #65536	; 0x10000
   1e83c:	bcc	1ebcc <_start@@Base+0xb81c>
   1e840:	mov	r5, #420	; 0x1a4
   1e844:	mov	lr, #-2147483648	; 0x80000000
   1e848:	mov	r1, #31
   1e84c:	mov	r6, #105	; 0x69
   1e850:	ldr	r0, [r4, #4]
   1e854:	mov	ip, #0
   1e858:	tst	r0, lr
   1e85c:	str	r1, [r2, #28]
   1e860:	str	ip, [r2, #20]
   1e864:	str	ip, [r2, #16]
   1e868:	bne	1e9ec <_start@@Base+0xb63c>
   1e86c:	orr	r0, r0, lr
   1e870:	add	r3, r4, r5
   1e874:	str	r0, [r4, #4]
   1e878:	str	r2, [r4, r6, lsl #2]
   1e87c:	str	r3, [r2, #24]
   1e880:	str	r2, [r2, #12]
   1e884:	str	r2, [r2, #8]
   1e888:	ldr	r3, [r4, #28]
   1e88c:	sub	r3, r3, #1
   1e890:	cmp	r3, #0
   1e894:	str	r3, [r4, #28]
   1e898:	bne	1e958 <_start@@Base+0xb5a8>
   1e89c:	mov	r0, r4
   1e8a0:	bl	19750 <_start@@Base+0x63a0>
   1e8a4:	b	1e958 <_start@@Base+0xb5a8>
   1e8a8:	ldr	r1, [r1, #-8]
   1e8ac:	tst	r1, #1
   1e8b0:	bne	1e9b8 <_start@@Base+0xb608>
   1e8b4:	ldr	ip, [r4, #16]
   1e8b8:	sub	r2, r2, r1
   1e8bc:	cmp	ip, r2
   1e8c0:	add	r3, r3, r1
   1e8c4:	beq	1e96c <_start@@Base+0xb5bc>
   1e8c8:	lsr	ip, r1, #3
   1e8cc:	cmp	ip, #31
   1e8d0:	ldr	lr, [r2, #12]
   1e8d4:	bhi	1ea54 <_start@@Base+0xb6a4>
   1e8d8:	ldr	r5, [r2, #8]
   1e8dc:	ldr	r1, [r0, #4]
   1e8e0:	cmp	r5, lr
   1e8e4:	moveq	r5, #1
   1e8e8:	ldreq	lr, [r4]
   1e8ec:	strne	lr, [r5, #12]
   1e8f0:	biceq	ip, lr, r5, lsl ip
   1e8f4:	strne	r5, [lr, #8]
   1e8f8:	streq	ip, [r4]
   1e8fc:	b	1e7b8 <_start@@Base+0xb408>
   1e900:	bic	r1, r1, #1
   1e904:	str	r1, [r0, #4]
   1e908:	lsr	r1, r3, #3
   1e90c:	orr	ip, r3, #1
   1e910:	cmp	r1, #31
   1e914:	str	ip, [r2, #4]
   1e918:	str	r3, [r2, r3]
   1e91c:	bhi	1e834 <_start@@Base+0xb484>
   1e920:	mov	r3, #1
   1e924:	ldr	r0, [r4]
   1e928:	lsl	r3, r3, r1
   1e92c:	add	r1, r4, r1, lsl #3
   1e930:	tst	r0, r3
   1e934:	add	r1, r1, #32
   1e938:	orreq	r3, r0, r3
   1e93c:	ldrne	r3, [r1, #8]
   1e940:	streq	r3, [r4]
   1e944:	moveq	r3, r1
   1e948:	str	r2, [r1, #8]
   1e94c:	str	r2, [r3, #12]
   1e950:	str	r3, [r2, #8]
   1e954:	str	r1, [r2, #12]
   1e958:	mov	r0, #0
   1e95c:	add	sp, sp, #12
   1e960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e964:	mov	r0, #0
   1e968:	bx	lr
   1e96c:	ldr	r1, [r0, #4]
   1e970:	and	lr, r1, #3
   1e974:	cmp	lr, #3
   1e978:	bne	1e7b8 <_start@@Base+0xb408>
   1e97c:	bic	r1, r1, #1
   1e980:	orr	r2, r3, #1
   1e984:	str	r3, [r4, #8]
   1e988:	str	r1, [r0, #4]
   1e98c:	str	r2, [ip, #4]
   1e990:	str	r3, [r0]
   1e994:	b	1e958 <_start@@Base+0xb5a8>
   1e998:	ldr	r1, [r4, #8]
   1e99c:	str	r2, [r4, #16]
   1e9a0:	add	r3, r3, r1
   1e9a4:	orr	r1, r3, #1
   1e9a8:	str	r3, [r4, #8]
   1e9ac:	str	r1, [r2, #4]
   1e9b0:	str	r3, [r2, r3]
   1e9b4:	b	1e958 <_start@@Base+0xb5a8>
   1e9b8:	bic	r0, r1, #1
   1e9bc:	add	r6, r3, r0
   1e9c0:	sub	r4, r2, r0
   1e9c4:	bl	12eb0 <__errno_location@plt>
   1e9c8:	add	r1, r6, #16
   1e9cc:	mov	r5, r0
   1e9d0:	ldr	r6, [r0]
   1e9d4:	mov	r0, r4
   1e9d8:	bl	12f70 <munmap@plt>
   1e9dc:	mov	r0, #0
   1e9e0:	str	r6, [r5]
   1e9e4:	add	sp, sp, #12
   1e9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e9ec:	cmp	r1, #31
   1e9f0:	lsrne	r1, r1, #1
   1e9f4:	rsbne	r1, r1, #25
   1e9f8:	ldr	ip, [r4, r6, lsl #2]
   1e9fc:	lslne	r1, r3, r1
   1ea00:	moveq	r1, r3
   1ea04:	b	1ea24 <_start@@Base+0xb674>
   1ea08:	lsr	r0, r1, #31
   1ea0c:	add	r0, r0, #4
   1ea10:	lsl	r1, r1, #1
   1ea14:	ldr	lr, [ip, r0, lsl #2]
   1ea18:	cmp	lr, #0
   1ea1c:	beq	1ebf8 <_start@@Base+0xb848>
   1ea20:	mov	ip, lr
   1ea24:	ldr	r0, [ip, #4]
   1ea28:	bic	r0, r0, #3
   1ea2c:	cmp	r0, r3
   1ea30:	bne	1ea08 <_start@@Base+0xb658>
   1ea34:	ldr	r3, [ip, #8]
   1ea38:	mov	r1, #0
   1ea3c:	str	r2, [r3, #12]
   1ea40:	str	r2, [ip, #8]
   1ea44:	str	r3, [r2, #8]
   1ea48:	str	ip, [r2, #12]
   1ea4c:	str	r1, [r2, #24]
   1ea50:	b	1e888 <_start@@Base+0xb4d8>
   1ea54:	cmp	r2, lr
   1ea58:	ldr	r6, [r2, #24]
   1ea5c:	beq	1ec0c <_start@@Base+0xb85c>
   1ea60:	ldr	r1, [r2, #8]
   1ea64:	str	lr, [r1, #12]
   1ea68:	str	r1, [lr, #8]
   1ea6c:	cmp	r6, #0
   1ea70:	beq	1e7b4 <_start@@Base+0xb404>
   1ea74:	ldr	r1, [r2, #28]
   1ea78:	add	r1, r4, r1, lsl #2
   1ea7c:	ldr	ip, [r1, #296]	; 0x128
   1ea80:	cmp	ip, r2
   1ea84:	streq	lr, [r1, #296]	; 0x128
   1ea88:	beq	1eaa4 <_start@@Base+0xb6f4>
   1ea8c:	ldr	r1, [r6, #16]
   1ea90:	cmp	r1, r2
   1ea94:	streq	lr, [r6, #16]
   1ea98:	strne	lr, [r6, #20]
   1ea9c:	cmp	lr, #0
   1eaa0:	beq	1e7b4 <_start@@Base+0xb404>
   1eaa4:	ldr	r1, [r2, #16]
   1eaa8:	str	r6, [lr, #24]
   1eaac:	cmp	r1, #0
   1eab0:	strne	r1, [lr, #16]
   1eab4:	strne	lr, [r1, #24]
   1eab8:	ldr	ip, [r2, #20]
   1eabc:	ldr	r1, [r0, #4]
   1eac0:	cmp	ip, #0
   1eac4:	strne	ip, [lr, #20]
   1eac8:	strne	lr, [ip, #24]
   1eacc:	b	1e7b8 <_start@@Base+0xb408>
   1ead0:	ldr	r1, [r4, #12]
   1ead4:	str	r2, [r4, #20]
   1ead8:	add	r3, r3, r1
   1eadc:	orr	r1, r3, #1
   1eae0:	str	r3, [r4, #12]
   1eae4:	str	r1, [r2, #4]
   1eae8:	ldr	r1, [r4, #24]
   1eaec:	cmp	r2, r5
   1eaf0:	streq	r6, [r4, #16]
   1eaf4:	streq	r6, [r4, #8]
   1eaf8:	cmp	r3, r1
   1eafc:	bls	1e958 <_start@@Base+0xb5a8>
   1eb00:	cmp	r3, #32
   1eb04:	bls	1ed44 <_start@@Base+0xb994>
   1eb08:	ldr	r9, [pc, #788]	; 1ee24 <_start@@Base+0xba74>
   1eb0c:	add	r8, r4, #424	; 0x1a8
   1eb10:	add	r9, r3, r9
   1eb14:	mov	r5, r8
   1eb18:	lsr	r9, r9, #17
   1eb1c:	lsl	r9, r9, #17
   1eb20:	sub	r9, r9, #131072	; 0x20000
   1eb24:	ldr	r7, [r5]
   1eb28:	cmp	r2, r7
   1eb2c:	bcc	1eb40 <_start@@Base+0xb790>
   1eb30:	ldr	r1, [r5, #4]
   1eb34:	add	r3, r7, r1
   1eb38:	cmp	r2, r3
   1eb3c:	bcc	1ec8c <_start@@Base+0xb8dc>
   1eb40:	ldr	r5, [r5, #8]
   1eb44:	cmp	r5, #0
   1eb48:	bne	1eb24 <_start@@Base+0xb774>
   1eb4c:	ldr	r3, [r5, #4]
   1eb50:	udf	#0
   1eb54:	cmp	r0, lr
   1eb58:	ldr	r7, [r0, #24]
   1eb5c:	beq	1ec4c <_start@@Base+0xb89c>
   1eb60:	ldr	r1, [r0, #8]
   1eb64:	str	lr, [r1, #12]
   1eb68:	str	r1, [lr, #8]
   1eb6c:	cmp	r7, #0
   1eb70:	beq	1e810 <_start@@Base+0xb460>
   1eb74:	ldr	r1, [r0, #28]
   1eb78:	add	r1, r4, r1, lsl #2
   1eb7c:	ldr	ip, [r1, #296]	; 0x128
   1eb80:	cmp	ip, r0
   1eb84:	streq	lr, [r1, #296]	; 0x128
   1eb88:	beq	1eba4 <_start@@Base+0xb7f4>
   1eb8c:	ldr	r1, [r7, #16]
   1eb90:	cmp	r1, r0
   1eb94:	streq	lr, [r7, #16]
   1eb98:	strne	lr, [r7, #20]
   1eb9c:	cmp	lr, #0
   1eba0:	beq	1e810 <_start@@Base+0xb460>
   1eba4:	ldr	r1, [r0, #16]
   1eba8:	str	r7, [lr, #24]
   1ebac:	cmp	r1, #0
   1ebb0:	strne	r1, [lr, #16]
   1ebb4:	strne	lr, [r1, #24]
   1ebb8:	ldr	r1, [r0, #20]
   1ebbc:	cmp	r1, #0
   1ebc0:	strne	r1, [lr, #20]
   1ebc4:	strne	lr, [r1, #24]
   1ebc8:	b	1e810 <_start@@Base+0xb460>
   1ebcc:	clz	r1, r1
   1ebd0:	eor	ip, r1, #31
   1ebd4:	add	r1, ip, #7
   1ebd8:	mov	r0, #1
   1ebdc:	lsr	r1, r3, r1
   1ebe0:	and	r1, r1, r0
   1ebe4:	add	r1, r1, ip, lsl r0
   1ebe8:	add	r6, r1, #74	; 0x4a
   1ebec:	lsl	lr, r0, r1
   1ebf0:	lsl	r5, r6, #2
   1ebf4:	b	1e850 <_start@@Base+0xb4a0>
   1ebf8:	str	r2, [ip, r0, lsl #2]
   1ebfc:	str	ip, [r2, #24]
   1ec00:	str	r2, [r2, #12]
   1ec04:	str	r2, [r2, #8]
   1ec08:	b	1e888 <_start@@Base+0xb4d8>
   1ec0c:	ldr	ip, [r2, #20]
   1ec10:	cmp	ip, #0
   1ec14:	addne	r1, r2, #20
   1ec18:	beq	1ed6c <_start@@Base+0xb9bc>
   1ec1c:	mov	r5, r1
   1ec20:	mov	r1, ip
   1ec24:	mov	lr, ip
   1ec28:	ldr	ip, [r1, #20]!
   1ec2c:	cmp	ip, #0
   1ec30:	bne	1ec1c <_start@@Base+0xb86c>
   1ec34:	mov	r1, lr
   1ec38:	ldr	ip, [r1, #16]!
   1ec3c:	cmp	ip, #0
   1ec40:	bne	1ec1c <_start@@Base+0xb86c>
   1ec44:	str	ip, [r5]
   1ec48:	b	1ea6c <_start@@Base+0xb6bc>
   1ec4c:	ldr	ip, [r0, #20]
   1ec50:	cmp	ip, #0
   1ec54:	addne	r1, r0, #20
   1ec58:	beq	1edbc <_start@@Base+0xba0c>
   1ec5c:	mov	r6, r1
   1ec60:	mov	r1, ip
   1ec64:	mov	lr, ip
   1ec68:	ldr	ip, [r1, #20]!
   1ec6c:	cmp	ip, #0
   1ec70:	bne	1ec5c <_start@@Base+0xb8ac>
   1ec74:	mov	r1, lr
   1ec78:	ldr	ip, [r1, #16]!
   1ec7c:	cmp	ip, #0
   1ec80:	bne	1ec5c <_start@@Base+0xb8ac>
   1ec84:	str	ip, [r6]
   1ec88:	b	1eb6c <_start@@Base+0xb7bc>
   1ec8c:	cmp	r9, r1
   1ec90:	bhi	1ed44 <_start@@Base+0xb994>
   1ec94:	cmp	r7, r8
   1ec98:	bhi	1eca4 <_start@@Base+0xb8f4>
   1ec9c:	cmp	r3, r8
   1eca0:	bhi	1ed44 <_start@@Base+0xb994>
   1eca4:	ldr	r8, [r8, #8]
   1eca8:	cmp	r8, #0
   1ecac:	bne	1ec94 <_start@@Base+0xb8e4>
   1ecb0:	str	r1, [sp, #4]
   1ecb4:	bl	12eb0 <__errno_location@plt>
   1ecb8:	ldr	r1, [sp, #4]
   1ecbc:	mov	r3, r8
   1ecc0:	sub	fp, r1, r9
   1ecc4:	mov	r2, fp
   1ecc8:	mov	sl, r0
   1eccc:	mov	r0, r7
   1ecd0:	ldr	r7, [sl]
   1ecd4:	bl	1300c <mremap@plt>
   1ecd8:	str	r7, [sl]
   1ecdc:	cmn	r0, #1
   1ece0:	beq	1ee04 <_start@@Base+0xba54>
   1ece4:	cmp	r9, #0
   1ece8:	beq	1ed44 <_start@@Base+0xb994>
   1ecec:	ldr	r2, [r4, #20]
   1ecf0:	ldr	r0, [r4, #12]
   1ecf4:	add	r1, r2, #8
   1ecf8:	ands	r3, r1, #7
   1ecfc:	ldr	ip, [r5, #4]
   1ed00:	rsbne	r3, r1, #0
   1ed04:	sub	r0, r0, r9
   1ed08:	andne	r3, r3, #7
   1ed0c:	add	r1, r2, r3
   1ed10:	sub	ip, ip, r9
   1ed14:	sub	r3, r0, r3
   1ed18:	add	r2, r2, r0
   1ed1c:	mov	r6, r9
   1ed20:	str	ip, [r5, #4]
   1ed24:	mov	r0, #32
   1ed28:	str	r3, [r4, #12]
   1ed2c:	orr	ip, r3, #1
   1ed30:	mov	r3, #2097152	; 0x200000
   1ed34:	str	r1, [r4, #20]
   1ed38:	str	ip, [r1, #4]
   1ed3c:	str	r0, [r2, #4]
   1ed40:	str	r3, [r4, #24]
   1ed44:	mov	r0, r4
   1ed48:	bl	19750 <_start@@Base+0x63a0>
   1ed4c:	cmn	r0, r6
   1ed50:	bne	1e958 <_start@@Base+0xb5a8>
   1ed54:	ldr	r3, [r4, #24]
   1ed58:	ldr	r2, [r4, #12]
   1ed5c:	cmp	r2, r3
   1ed60:	mvnhi	r3, #0
   1ed64:	strhi	r3, [r4, #24]
   1ed68:	b	1e958 <_start@@Base+0xb5a8>
   1ed6c:	ldr	ip, [r2, #16]
   1ed70:	cmp	ip, #0
   1ed74:	addne	r1, r2, #16
   1ed78:	bne	1ec1c <_start@@Base+0xb86c>
   1ed7c:	cmp	r6, #0
   1ed80:	beq	1e7b4 <_start@@Base+0xb404>
   1ed84:	ldr	r7, [r2, #28]
   1ed88:	add	r5, r4, r7, lsl #2
   1ed8c:	ldr	r1, [r5, #296]	; 0x128
   1ed90:	cmp	r2, r1
   1ed94:	movne	lr, #0
   1ed98:	bne	1ea8c <_start@@Base+0xb6dc>
   1ed9c:	ldr	ip, [r4, #4]
   1eda0:	mov	lr, #1
   1eda4:	mov	r1, #0
   1eda8:	bic	ip, ip, lr, lsl r7
   1edac:	str	r1, [r5, #296]	; 0x128
   1edb0:	ldr	r1, [r0, #4]
   1edb4:	str	ip, [r4, #4]
   1edb8:	b	1e7b8 <_start@@Base+0xb408>
   1edbc:	ldr	ip, [r0, #16]
   1edc0:	cmp	ip, #0
   1edc4:	addne	r1, r0, #16
   1edc8:	bne	1ec5c <_start@@Base+0xb8ac>
   1edcc:	cmp	r7, #0
   1edd0:	beq	1e810 <_start@@Base+0xb460>
   1edd4:	ldr	lr, [r0, #28]
   1edd8:	add	r6, r4, lr, lsl #2
   1eddc:	ldr	r1, [r6, #296]	; 0x128
   1ede0:	cmp	r0, r1
   1ede4:	movne	lr, ip
   1ede8:	bne	1eb8c <_start@@Base+0xb7dc>
   1edec:	ldr	r1, [r4, #4]
   1edf0:	mov	r0, #1
   1edf4:	str	ip, [r6, #296]	; 0x128
   1edf8:	bic	r1, r1, r0, lsl lr
   1edfc:	str	r1, [r4, #4]
   1ee00:	b	1e810 <_start@@Base+0xb460>
   1ee04:	ldr	r0, [r5]
   1ee08:	mov	r1, r9
   1ee0c:	add	r0, r0, fp
   1ee10:	bl	12f70 <munmap@plt>
   1ee14:	str	r7, [sl]
   1ee18:	cmp	r0, #0
   1ee1c:	bne	1ed44 <_start@@Base+0xb994>
   1ee20:	b	1ece4 <_start@@Base+0xb934>
   1ee24:	ldrdeq	pc, [r1], -pc	; <UNPREDICTABLE>
   1ee28:	cmn	r2, #65	; 0x41
   1ee2c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ee30:	bhi	1ef08 <_start@@Base+0xbb58>
   1ee34:	cmp	r2, #10
   1ee38:	ldr	r3, [r1, #-4]
   1ee3c:	addhi	ip, r2, #11
   1ee40:	bic	r7, r3, #3
   1ee44:	sub	r6, r1, #8
   1ee48:	bichi	ip, ip, #7
   1ee4c:	movls	ip, #16
   1ee50:	ands	r3, r3, #1
   1ee54:	add	lr, r6, r7
   1ee58:	mov	r4, r1
   1ee5c:	mov	r8, r0
   1ee60:	mov	r5, r2
   1ee64:	bne	1ee74 <_start@@Base+0xbac4>
   1ee68:	ldr	r1, [r1, #-8]
   1ee6c:	tst	r1, #1
   1ee70:	bne	1ef14 <_start@@Base+0xbb64>
   1ee74:	cmp	ip, r7
   1ee78:	bhi	1ee9c <_start@@Base+0xbaec>
   1ee7c:	sub	r2, r7, ip
   1ee80:	cmp	r2, #15
   1ee84:	bhi	1efac <_start@@Base+0xbbfc>
   1ee88:	cmp	r6, #0
   1ee8c:	beq	1eea8 <_start@@Base+0xbaf8>
   1ee90:	add	r6, r6, #8
   1ee94:	mov	r0, r6
   1ee98:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ee9c:	ldr	r2, [r8, #20]
   1eea0:	cmp	r2, lr
   1eea4:	beq	1efe0 <_start@@Base+0xbc30>
   1eea8:	mov	r1, r5
   1eeac:	mov	r0, r8
   1eeb0:	bl	19ae8 <_start@@Base+0x6738>
   1eeb4:	subs	r6, r0, #0
   1eeb8:	beq	1ef08 <_start@@Base+0xbb58>
   1eebc:	ldr	r3, [r4, #-4]
   1eec0:	tst	r3, #1
   1eec4:	movne	r2, #4
   1eec8:	bne	1eedc <_start@@Base+0xbb2c>
   1eecc:	ldr	r3, [r4, #-8]
   1eed0:	tst	r3, #1
   1eed4:	moveq	r2, #4
   1eed8:	movne	r2, #8
   1eedc:	sub	r2, r7, r2
   1eee0:	cmp	r2, r5
   1eee4:	movcs	r2, r5
   1eee8:	mov	r1, r4
   1eeec:	mov	r0, r6
   1eef0:	bl	12cb8 <memcpy@plt>
   1eef4:	mov	r1, r4
   1eef8:	mov	r0, r8
   1eefc:	bl	1e788 <_start@@Base+0xb3d8>
   1ef00:	mov	r0, r6
   1ef04:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ef08:	mov	r6, #0
   1ef0c:	mov	r0, r6
   1ef10:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ef14:	cmp	ip, #248	; 0xf8
   1ef18:	bls	1eea8 <_start@@Base+0xbaf8>
   1ef1c:	add	r3, ip, #4
   1ef20:	cmp	r7, r3
   1ef24:	bcc	1ef34 <_start@@Base+0xbb84>
   1ef28:	sub	r3, r7, ip
   1ef2c:	cmp	r3, #65536	; 0x10000
   1ef30:	bls	1ee88 <_start@@Base+0xbad8>
   1ef34:	add	r3, ip, #4096	; 0x1000
   1ef38:	add	r3, r3, #30
   1ef3c:	bic	sl, r3, #4080	; 0xff0
   1ef40:	bic	r9, r1, #1
   1ef44:	bl	12eb0 <__errno_location@plt>
   1ef48:	sub	r6, r6, r9
   1ef4c:	bic	sl, sl, #15
   1ef50:	add	r1, r7, r9
   1ef54:	mov	r2, sl
   1ef58:	add	r1, r1, #16
   1ef5c:	mov	r3, #1
   1ef60:	mov	fp, r0
   1ef64:	mov	r0, r6
   1ef68:	ldr	r6, [fp]
   1ef6c:	bl	1300c <mremap@plt>
   1ef70:	str	r6, [fp]
   1ef74:	cmn	r0, #1
   1ef78:	beq	1eea8 <_start@@Base+0xbaf8>
   1ef7c:	sub	sl, sl, r9
   1ef80:	add	r6, r0, r9
   1ef84:	sub	r3, sl, #16
   1ef88:	add	r1, r6, r3
   1ef8c:	add	sl, r6, sl
   1ef90:	orr	r3, r3, #2
   1ef94:	mov	r0, #7
   1ef98:	mov	r2, #0
   1ef9c:	str	r3, [r6, #4]
   1efa0:	str	r0, [r1, #4]
   1efa4:	str	r2, [sl, #-8]
   1efa8:	b	1ee90 <_start@@Base+0xbae0>
   1efac:	add	r1, r6, ip
   1efb0:	orr	r3, r3, #2
   1efb4:	orr	r3, r3, ip
   1efb8:	orr	r2, r2, #3
   1efbc:	str	r3, [r4, #-4]
   1efc0:	str	r2, [r1, #4]
   1efc4:	ldr	r3, [lr, #4]
   1efc8:	add	r1, r1, #8
   1efcc:	orr	r3, r3, #1
   1efd0:	str	r3, [lr, #4]
   1efd4:	mov	r0, r8
   1efd8:	bl	1e788 <_start@@Base+0xb3d8>
   1efdc:	b	1ee88 <_start@@Base+0xbad8>
   1efe0:	ldr	r2, [r8, #12]
   1efe4:	add	r2, r7, r2
   1efe8:	cmp	r2, ip
   1efec:	bls	1eea8 <_start@@Base+0xbaf8>
   1eff0:	sub	r2, r2, ip
   1eff4:	add	r1, r6, ip
   1eff8:	orr	r3, r3, #2
   1effc:	orr	r3, r3, ip
   1f000:	orr	r0, r2, #1
   1f004:	str	r3, [r4, #-4]
   1f008:	str	r0, [r1, #4]
   1f00c:	str	r1, [r8, #20]
   1f010:	str	r2, [r8, #12]
   1f014:	b	1ee88 <_start@@Base+0xbad8>
   1f018:	subs	r2, r3, #0
   1f01c:	beq	1f02c <_start@@Base+0xbc7c>
   1f020:	cmp	r1, #0
   1f024:	beq	1f030 <_start@@Base+0xbc80>
   1f028:	b	1ee28 <_start@@Base+0xba78>
   1f02c:	b	1e788 <_start@@Base+0xb3d8>
   1f030:	mov	r1, r2
   1f034:	b	19ae8 <_start@@Base+0x6738>
   1f038:	ldr	r2, [pc, #104]	; 1f0a8 <_start@@Base+0xbcf8>
   1f03c:	ldr	ip, [r2]
   1f040:	ldr	r1, [r2, #32]
   1f044:	ldrb	r3, [ip, #113]	; 0x71
   1f048:	add	r1, r1, #1
   1f04c:	str	r1, [r2, #32]
   1f050:	tst	r3, #160	; 0xa0
   1f054:	bxne	lr
   1f058:	ldr	r1, [ip, #76]	; 0x4c
   1f05c:	cmp	r1, #0
   1f060:	movge	r1, #78	; 0x4e
   1f064:	blt	1f080 <_start@@Base+0xbcd0>
   1f068:	mvn	r3, r3, lsl #25
   1f06c:	mov	r0, ip
   1f070:	mvn	r3, r3, lsr #25
   1f074:	strb	r3, [ip, #113]	; 0x71
   1f078:	str	r1, [r2, #36]	; 0x24
   1f07c:	b	17c5c <_start@@Base+0x48ac>
   1f080:	cmn	r1, #1
   1f084:	moveq	r1, #73	; 0x49
   1f088:	beq	1f068 <_start@@Base+0xbcb8>
   1f08c:	cmn	r1, #2
   1f090:	moveq	r1, #67	; 0x43
   1f094:	beq	1f068 <_start@@Base+0xbcb8>
   1f098:	cmn	r1, #3
   1f09c:	moveq	r1, #71	; 0x47
   1f0a0:	movne	r1, #74	; 0x4a
   1f0a4:	b	1f068 <_start@@Base+0xbcb8>
   1f0a8:	andeq	r4, r8, r4, asr #3
   1f0ac:	ldr	r3, [r0, #4]
   1f0b0:	cmn	r3, #14
   1f0b4:	beq	1f0d0 <_start@@Base+0xbd20>
   1f0b8:	vldr	d6, [r0]
   1f0bc:	vcvt.s32.f64	s14, d6
   1f0c0:	vcvt.f64.s32	d7, s14
   1f0c4:	vcmp.f64	d6, d7
   1f0c8:	vmrs	APSR_nzcv, fpscr
   1f0cc:	bne	1f15c <_start@@Base+0xbdac>
   1f0d0:	ldr	r3, [r0, #12]
   1f0d4:	cmn	r3, #14
   1f0d8:	beq	1f0f4 <_start@@Base+0xbd44>
   1f0dc:	vldr	d6, [r0, #8]
   1f0e0:	vcvt.s32.f64	s14, d6
   1f0e4:	vcvt.f64.s32	d7, s14
   1f0e8:	vcmp.f64	d6, d7
   1f0ec:	vmrs	APSR_nzcv, fpscr
   1f0f0:	bne	1f15c <_start@@Base+0xbdac>
   1f0f4:	ldr	r2, [r0, #20]
   1f0f8:	cmn	r2, #14
   1f0fc:	beq	1f164 <_start@@Base+0xbdb4>
   1f100:	vldr	d7, [r0, #16]
   1f104:	vcvt.s32.f64	s12, d7
   1f108:	vcvt.f64.s32	d6, s12
   1f10c:	vcmp.f64	d7, d6
   1f110:	vmrs	APSR_nzcv, fpscr
   1f114:	bne	1f15c <_start@@Base+0xbdac>
   1f118:	cmn	r3, #14
   1f11c:	vcmpe.f64	d7, #0.0
   1f120:	vldreq	s12, [r0, #8]
   1f124:	vldrne	d6, [r0, #8]
   1f128:	vcvteq.f64.s32	d6, s12
   1f12c:	vmrs	APSR_nzcv, fpscr
   1f130:	vadd.f64	d7, d6, d7
   1f134:	blt	1f170 <_start@@Base+0xbdc0>
   1f138:	vldr	d6, [pc, #72]	; 1f188 <_start@@Base+0xbdd8>
   1f13c:	vcmpe.f64	d7, d6
   1f140:	vmrs	APSR_nzcv, fpscr
   1f144:	movls	r3, #1
   1f148:	movhi	r3, #0
   1f14c:	cmp	r3, #0
   1f150:	moveq	r0, #14
   1f154:	movne	r0, #19
   1f158:	bx	lr
   1f15c:	mov	r0, #14
   1f160:	bx	lr
   1f164:	vldr	s15, [r0, #16]
   1f168:	vcvt.f64.s32	d7, s15
   1f16c:	b	1f118 <_start@@Base+0xbd68>
   1f170:	vldr	d6, [pc, #24]	; 1f190 <_start@@Base+0xbde0>
   1f174:	vcmpe.f64	d7, d6
   1f178:	vmrs	APSR_nzcv, fpscr
   1f17c:	movge	r3, #1
   1f180:	movlt	r3, #0
   1f184:	b	1f14c <_start@@Base+0xbd9c>
   1f188:			; <UNDEFINED> instruction: 0xffc00000
   1f18c:	ldrshmi	pc, [pc, #255]	; 1f293 <lua_atpanic@@Base+0xc3>	; <UNPREDICTABLE>
   1f190:	andeq	r0, r0, r0
   1f194:	mvngt	r0, r0
   1f198:	ldrb	r3, [r0, #132]	; 0x84
   1f19c:	tst	r3, #64	; 0x40
   1f1a0:	bne	1f1c8 <_start@@Base+0xbe18>
   1f1a4:	ldrh	r2, [r0, #122]	; 0x7a
   1f1a8:	ldrh	r3, [r0, #128]	; 0x80
   1f1ac:	ldrh	r0, [r0, #130]	; 0x82
   1f1b0:	cmp	r2, r3
   1f1b4:	bxeq	lr
   1f1b8:	cmp	r0, r2
   1f1bc:	moveq	r0, r3
   1f1c0:	movne	r0, #0
   1f1c4:	bx	lr
   1f1c8:	mov	r0, #0
   1f1cc:	bx	lr

0001f1d0 <lua_atpanic@@Base>:
   1f1d0:	ldr	r3, [r0, #8]
   1f1d4:	ldr	r0, [r3, #208]	; 0xd0
   1f1d8:	str	r1, [r3, #208]	; 0xd0
   1f1dc:	bx	lr
   1f1e0:	vmov	s15, r1
   1f1e4:	ldr	r1, [r0, #28]
   1f1e8:	ldr	r0, [r0, #20]
   1f1ec:	vcvt.f64.s32	d6, s15
   1f1f0:	vmov	r3, s13
   1f1f4:	vmov	r2, s12
   1f1f8:	lsl	r3, r3, #1
   1f1fc:	eor	r2, r2, r3
   1f200:	sub	r2, r2, r3, ror #18
   1f204:	eor	r3, r2, r3, ror #13
   1f208:	sub	r3, r3, r2, ror #19
   1f20c:	and	r3, r3, r1
   1f210:	add	r3, r3, r3, lsl #1
   1f214:	add	r0, r0, r3, lsl #3
   1f218:	ldr	r3, [r0, #12]
   1f21c:	cmn	r3, #15
   1f220:	bhi	1f234 <lua_atpanic@@Base+0x64>
   1f224:	vldr	d7, [r0, #8]
   1f228:	vcmp.f64	d6, d7
   1f22c:	vmrs	APSR_nzcv, fpscr
   1f230:	bxeq	lr
   1f234:	ldr	r0, [r0, #16]
   1f238:	cmp	r0, #0
   1f23c:	bne	1f218 <lua_atpanic@@Base+0x48>
   1f240:	bx	lr
   1f244:	push	{r4, r5, r6, r7, r8, lr}
   1f248:	ldr	r6, [r0, #24]
   1f24c:	cmp	r6, #1
   1f250:	bls	1f36c <lua_atpanic@@Base+0x19c>
   1f254:	ldr	r1, [r0, #8]
   1f258:	sub	r1, r1, #8
   1f25c:	add	r3, r1, r6, lsl #3
   1f260:	ldr	r3, [r3, #4]
   1f264:	cmn	r3, #1
   1f268:	beq	1f320 <lua_atpanic@@Base+0x150>
   1f26c:	sub	r5, r6, #1
   1f270:	ldr	r3, [r0, #28]
   1f274:	cmp	r3, #0
   1f278:	movne	r8, r0
   1f27c:	addne	r4, r5, #1
   1f280:	bne	1f2bc <lua_atpanic@@Base+0xec>
   1f284:	mov	r0, r5
   1f288:	pop	{r4, r5, r6, r7, r8, pc}
   1f28c:	ldr	r0, [r8, #8]
   1f290:	lsl	r3, r4, #1
   1f294:	add	r0, r0, r4, lsl #3
   1f298:	cmp	r0, #0
   1f29c:	beq	1f2dc <lua_atpanic@@Base+0x10c>
   1f2a0:	ldr	r2, [r0, #4]
   1f2a4:	cmn	r2, #1
   1f2a8:	beq	1f2dc <lua_atpanic@@Base+0x10c>
   1f2ac:	cmn	r3, #-2147483645	; 0x80000003
   1f2b0:	mov	r5, r4
   1f2b4:	bhi	1f37c <lua_atpanic@@Base+0x1ac>
   1f2b8:	mov	r4, r3
   1f2bc:	cmp	r6, r4
   1f2c0:	bhi	1f28c <lua_atpanic@@Base+0xbc>
   1f2c4:	mov	r1, r4
   1f2c8:	mov	r0, r8
   1f2cc:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   1f2d0:	lsl	r3, r4, #1
   1f2d4:	cmp	r0, #0
   1f2d8:	bne	1f2a0 <lua_atpanic@@Base+0xd0>
   1f2dc:	add	r7, r4, r5
   1f2e0:	sub	r3, r4, r5
   1f2e4:	cmp	r3, #1
   1f2e8:	lsr	r7, r7, #1
   1f2ec:	bls	1f284 <lua_atpanic@@Base+0xb4>
   1f2f0:	cmp	r6, r7
   1f2f4:	bls	1f35c <lua_atpanic@@Base+0x18c>
   1f2f8:	ldr	r0, [r8, #8]
   1f2fc:	add	r0, r0, r7, lsl #3
   1f300:	cmp	r0, #0
   1f304:	moveq	r4, r7
   1f308:	beq	1f2dc <lua_atpanic@@Base+0x10c>
   1f30c:	ldr	r3, [r0, #4]
   1f310:	cmn	r3, #1
   1f314:	movne	r5, r7
   1f318:	moveq	r4, r7
   1f31c:	b	1f2dc <lua_atpanic@@Base+0x10c>
   1f320:	mov	r0, #1
   1f324:	b	1f338 <lua_atpanic@@Base+0x168>
   1f328:	ldr	r2, [r2, #4]
   1f32c:	cmn	r2, #1
   1f330:	movne	r0, r3
   1f334:	moveq	r6, r3
   1f338:	add	r3, r6, r0
   1f33c:	sub	r2, r6, r0
   1f340:	lsr	r3, r3, #1
   1f344:	cmp	r2, #1
   1f348:	add	r2, r1, r3, lsl #3
   1f34c:	bhi	1f328 <lua_atpanic@@Base+0x158>
   1f350:	sub	r5, r0, #1
   1f354:	mov	r0, r5
   1f358:	pop	{r4, r5, r6, r7, r8, pc}
   1f35c:	mov	r1, r7
   1f360:	mov	r0, r8
   1f364:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   1f368:	b	1f300 <lua_atpanic@@Base+0x130>
   1f36c:	cmp	r6, #0
   1f370:	moveq	r5, r6
   1f374:	beq	1f270 <lua_atpanic@@Base+0xa0>
   1f378:	b	1f26c <lua_atpanic@@Base+0x9c>
   1f37c:	mov	r5, #1
   1f380:	b	1f394 <lua_atpanic@@Base+0x1c4>
   1f384:	ldr	r3, [r0, #4]
   1f388:	cmn	r3, #1
   1f38c:	beq	1f3ac <lua_atpanic@@Base+0x1dc>
   1f390:	add	r5, r5, #1
   1f394:	cmp	r6, r5
   1f398:	bls	1f3b4 <lua_atpanic@@Base+0x1e4>
   1f39c:	ldr	r0, [r8, #8]
   1f3a0:	add	r0, r0, r5, lsl #3
   1f3a4:	cmp	r0, #0
   1f3a8:	bne	1f384 <lua_atpanic@@Base+0x1b4>
   1f3ac:	sub	r5, r5, #1
   1f3b0:	b	1f284 <lua_atpanic@@Base+0xb4>
   1f3b4:	mov	r1, r5
   1f3b8:	mov	r0, r8
   1f3bc:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   1f3c0:	b	1f3a4 <lua_atpanic@@Base+0x1d4>
   1f3c4:	ldr	ip, [r0]
   1f3c8:	push	{r4, r5, r6, lr}
   1f3cc:	add	r3, ip, r1, lsl #4
   1f3d0:	mov	r4, r0
   1f3d4:	mov	r5, r2
   1f3d8:	ldr	lr, [pc, #276]	; 1f4f4 <lua_atpanic@@Base+0x324>
   1f3dc:	b	1f3e8 <lua_atpanic@@Base+0x218>
   1f3e0:	uxth	r1, r3
   1f3e4:	add	r3, ip, r1, lsl #4
   1f3e8:	ldr	r3, [r3]
   1f3ec:	and	r2, r3, lr
   1f3f0:	lsr	r0, r3, #28
   1f3f4:	cmp	r0, #8
   1f3f8:	beq	1f3e0 <lua_atpanic@@Base+0x210>
   1f3fc:	cmp	r2, #545259520	; 0x20800000
   1f400:	beq	1f3e0 <lua_atpanic@@Base+0x210>
   1f404:	cmp	r0, #2
   1f408:	ldr	r0, [r4, #24]
   1f40c:	bne	1f424 <lua_atpanic@@Base+0x254>
   1f410:	uxth	r3, r3
   1f414:	ldr	r3, [ip, r3, lsl #4]
   1f418:	lsr	r3, r3, #28
   1f41c:	cmp	r3, #6
   1f420:	beq	1f4a0 <lua_atpanic@@Base+0x2d0>
   1f424:	rsb	r1, r1, #0
   1f428:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   1f42c:	cmp	r0, #0
   1f430:	popeq	{r4, r5, r6, pc}
   1f434:	ldr	r3, [r0, #4]
   1f438:	cmn	r3, #12
   1f43c:	bne	1f4ec <lua_atpanic@@Base+0x31c>
   1f440:	ldr	r3, [r4, #16]
   1f444:	add	r5, r5, #58	; 0x3a
   1f448:	ldr	r1, [r0]
   1f44c:	ldr	r2, [r3, r5, lsl #2]
   1f450:	ldr	r3, [r1, #28]
   1f454:	ldr	ip, [r2, #8]
   1f458:	ldr	r0, [r1, #20]
   1f45c:	and	r3, r3, ip
   1f460:	add	r3, r3, r3, lsl #1
   1f464:	add	r0, r0, r3, lsl #3
   1f468:	b	1f478 <lua_atpanic@@Base+0x2a8>
   1f46c:	ldr	r0, [r0, #16]
   1f470:	cmp	r0, #0
   1f474:	popeq	{r4, r5, r6, pc}
   1f478:	ldr	r3, [r0, #12]
   1f47c:	cmn	r3, #5
   1f480:	bne	1f46c <lua_atpanic@@Base+0x29c>
   1f484:	ldr	r3, [r0, #8]
   1f488:	cmp	r2, r3
   1f48c:	bne	1f46c <lua_atpanic@@Base+0x29c>
   1f490:	ldr	r3, [r0, #4]
   1f494:	cmn	r3, #1
   1f498:	moveq	r0, #0
   1f49c:	pop	{r4, r5, r6, pc}
   1f4a0:	ldr	r2, [r4, #16]
   1f4a4:	ldr	r3, [r0, #28]
   1f4a8:	ldr	r0, [r0, #20]
   1f4ac:	ldr	r1, [r2, #104]	; 0x68
   1f4b0:	add	r2, r2, #96	; 0x60
   1f4b4:	and	r3, r3, r1
   1f4b8:	add	r3, r3, r3, lsl #1
   1f4bc:	add	r0, r0, r3, lsl #3
   1f4c0:	b	1f4d0 <lua_atpanic@@Base+0x300>
   1f4c4:	ldr	r0, [r0, #16]
   1f4c8:	cmp	r0, #0
   1f4cc:	popeq	{r4, r5, r6, pc}
   1f4d0:	ldr	r3, [r0, #12]
   1f4d4:	cmn	r3, #5
   1f4d8:	bne	1f4c4 <lua_atpanic@@Base+0x2f4>
   1f4dc:	ldr	r3, [r0, #8]
   1f4e0:	cmp	r2, r3
   1f4e4:	bne	1f4c4 <lua_atpanic@@Base+0x2f4>
   1f4e8:	b	1f434 <lua_atpanic@@Base+0x264>
   1f4ec:	mov	r0, #0
   1f4f0:	pop	{r4, r5, r6, pc}
   1f4f4:			; <UNDEFINED> instruction: 0xf0800000
   1f4f8:	ldr	r3, [r2, #4]
   1f4fc:	push	{r4, r5, r6, lr}
   1f500:	cmn	r3, #5
   1f504:	mov	r5, r0
   1f508:	mov	r6, r2
   1f50c:	mov	r0, r1
   1f510:	beq	1f5a8 <lua_atpanic@@Base+0x3d8>
   1f514:	cmn	r3, #14
   1f518:	beq	1f57c <lua_atpanic@@Base+0x3ac>
   1f51c:	cmn	r3, #15
   1f520:	bhi	1f5f0 <lua_atpanic@@Base+0x420>
   1f524:	vldr	d7, [r2]
   1f528:	vcvt.s32.f64	s13, d7
   1f52c:	vcvt.f64.s32	d5, s13
   1f530:	vcmp.f64	d5, d7
   1f534:	vmrs	APSR_nzcv, fpscr
   1f538:	beq	1f5fc <lua_atpanic@@Base+0x42c>
   1f53c:	ldr	r1, [r0, #28]
   1f540:	mov	r2, r6
   1f544:	ldr	r0, [r0, #20]
   1f548:	bl	1af68 <_start@@Base+0x7bb8>
   1f54c:	mov	r4, r0
   1f550:	b	1f560 <lua_atpanic@@Base+0x390>
   1f554:	ldr	r4, [r4, #16]
   1f558:	cmp	r4, #0
   1f55c:	beq	1f59c <lua_atpanic@@Base+0x3cc>
   1f560:	mov	r1, r6
   1f564:	add	r0, r4, #8
   1f568:	bl	17394 <_start@@Base+0x3fe4>
   1f56c:	cmp	r0, #0
   1f570:	beq	1f554 <lua_atpanic@@Base+0x384>
   1f574:	mov	r0, r4
   1f578:	pop	{r4, r5, r6, pc}
   1f57c:	ldr	r1, [r2]
   1f580:	ldr	r3, [r0, #24]
   1f584:	cmp	r1, r3
   1f588:	bcs	1f618 <lua_atpanic@@Base+0x448>
   1f58c:	ldr	r0, [r0, #8]
   1f590:	add	r0, r0, r1, lsl #3
   1f594:	cmp	r0, #0
   1f598:	popne	{r4, r5, r6, pc}
   1f59c:	ldr	r0, [r5, #8]
   1f5a0:	add	r0, r0, #144	; 0x90
   1f5a4:	pop	{r4, r5, r6, pc}
   1f5a8:	ldr	r2, [r2]
   1f5ac:	ldr	r1, [r1, #28]
   1f5b0:	ldr	r0, [r0, #20]
   1f5b4:	ldr	r3, [r2, #8]
   1f5b8:	and	r3, r3, r1
   1f5bc:	add	r3, r3, r3, lsl #1
   1f5c0:	add	r0, r0, r3, lsl #3
   1f5c4:	b	1f5d4 <lua_atpanic@@Base+0x404>
   1f5c8:	ldr	r0, [r0, #16]
   1f5cc:	cmp	r0, #0
   1f5d0:	beq	1f59c <lua_atpanic@@Base+0x3cc>
   1f5d4:	ldr	r3, [r0, #12]
   1f5d8:	cmn	r3, #5
   1f5dc:	bne	1f5c8 <lua_atpanic@@Base+0x3f8>
   1f5e0:	ldr	r3, [r0, #8]
   1f5e4:	cmp	r2, r3
   1f5e8:	bne	1f5c8 <lua_atpanic@@Base+0x3f8>
   1f5ec:	pop	{r4, r5, r6, pc}
   1f5f0:	cmn	r3, #1
   1f5f4:	bne	1f53c <lua_atpanic@@Base+0x36c>
   1f5f8:	b	1f59c <lua_atpanic@@Base+0x3cc>
   1f5fc:	vmov	r2, s13
   1f600:	ldr	r3, [r1, #24]
   1f604:	cmp	r3, r2
   1f608:	ldrhi	r0, [r1, #8]
   1f60c:	addhi	r0, r0, r2, lsl #3
   1f610:	bhi	1f594 <lua_atpanic@@Base+0x3c4>
   1f614:	vmov	r1, s13
   1f618:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   1f61c:	cmp	r0, #0
   1f620:	popne	{r4, r5, r6, pc}
   1f624:	b	1f59c <lua_atpanic@@Base+0x3cc>
   1f628:	push	{r4, r5, r6, r7, r8, lr}
   1f62c:	mov	r5, r0
   1f630:	ldr	r4, [r0, #8]
   1f634:	mov	r6, r1
   1f638:	mov	r7, #1
   1f63c:	ldr	r1, [r5, #32]
   1f640:	cmp	r1, #0
   1f644:	popeq	{r4, r5, r6, r7, r8, pc}
   1f648:	ldr	r2, [r1, #16]
   1f64c:	cmp	r2, r6
   1f650:	popcc	{r4, r5, r6, r7, r8, pc}
   1f654:	ldr	r3, [r1]
   1f658:	str	r3, [r5, #32]
   1f65c:	ldrb	r0, [r1, #4]
   1f660:	ldrb	r3, [r4, #28]
   1f664:	bic	r3, r0, r3
   1f668:	tst	r3, #3
   1f66c:	beq	1f6ac <lua_atpanic@@Base+0x4dc>
   1f670:	ldrb	r3, [r1, #6]
   1f674:	cmp	r3, #0
   1f678:	ldrdeq	r2, [r1, #8]
   1f67c:	streq	r2, [r3, #8]
   1f680:	ldreq	r2, [r1, #8]
   1f684:	streq	r3, [r2, #12]
   1f688:	ldr	r3, [r4, #20]
   1f68c:	ldr	r8, [r4, #12]
   1f690:	sub	r3, r3, #24
   1f694:	str	r3, [r4, #20]
   1f698:	mov	r2, #24
   1f69c:	mov	r3, #0
   1f6a0:	ldr	r0, [r4, #16]
   1f6a4:	blx	r8
   1f6a8:	b	1f63c <lua_atpanic@@Base+0x46c>
   1f6ac:	ldr	r3, [r1, #12]
   1f6b0:	ldr	ip, [r1, #8]
   1f6b4:	tst	r0, #7
   1f6b8:	str	ip, [r3, #8]
   1f6bc:	ldr	lr, [r1, #8]
   1f6c0:	mov	ip, r1
   1f6c4:	str	r3, [lr, #12]
   1f6c8:	ldrd	r2, [r2]
   1f6cc:	strd	r2, [ip, #8]!
   1f6d0:	strb	r7, [r1, #6]
   1f6d4:	ldr	r3, [r4, #36]	; 0x24
   1f6d8:	str	ip, [r1, #16]
   1f6dc:	str	r3, [r1]
   1f6e0:	str	r1, [r4, #36]	; 0x24
   1f6e4:	bne	1f63c <lua_atpanic@@Base+0x46c>
   1f6e8:	ldrb	r3, [r4, #29]
   1f6ec:	sub	r3, r3, #1
   1f6f0:	cmp	r3, #1
   1f6f4:	bls	1f710 <lua_atpanic@@Base+0x540>
   1f6f8:	ldrb	r3, [r4, #28]
   1f6fc:	bic	r0, r0, #7
   1f700:	and	r3, r3, #3
   1f704:	orr	r0, r3, r0
   1f708:	strb	r0, [r1, #4]
   1f70c:	b	1f63c <lua_atpanic@@Base+0x46c>
   1f710:	ldr	r3, [r1, #12]
   1f714:	orr	r0, r0, #4
   1f718:	add	r3, r3, #4
   1f71c:	cmn	r3, #10
   1f720:	strb	r0, [r1, #4]
   1f724:	bls	1f63c <lua_atpanic@@Base+0x46c>
   1f728:	ldr	r1, [r1, #8]
   1f72c:	ldrb	r3, [r1, #4]
   1f730:	tst	r3, #3
   1f734:	beq	1f63c <lua_atpanic@@Base+0x46c>
   1f738:	mov	r0, r4
   1f73c:	bl	17498 <_start@@Base+0x40e8>
   1f740:	b	1f63c <lua_atpanic@@Base+0x46c>
   1f744:	ldr	r3, [r0, #220]	; 0xdc
   1f748:	push	{r4, r5, r6, lr}
   1f74c:	cmp	r1, r3
   1f750:	mov	r5, r1
   1f754:	moveq	r3, #0
   1f758:	mov	r4, r0
   1f75c:	streq	r3, [r0, #220]	; 0xdc
   1f760:	ldr	r1, [r1, #28]
   1f764:	mov	r0, r5
   1f768:	bl	1f628 <lua_atpanic@@Base+0x458>
   1f76c:	ldr	r2, [r5, #44]	; 0x2c
   1f770:	ldr	r3, [r4, #20]
   1f774:	ldr	r1, [r5, #28]
   1f778:	lsl	r2, r2, #3
   1f77c:	sub	r3, r3, r2
   1f780:	str	r3, [r4, #20]
   1f784:	ldr	r6, [r4, #12]
   1f788:	mov	r3, #0
   1f78c:	ldr	r0, [r4, #16]
   1f790:	blx	r6
   1f794:	ldr	r3, [r4, #20]
   1f798:	ldr	lr, [r4, #12]
   1f79c:	sub	r3, r3, #48	; 0x30
   1f7a0:	str	r3, [r4, #20]
   1f7a4:	mov	r1, r5
   1f7a8:	ldr	r0, [r4, #16]
   1f7ac:	mov	ip, lr
   1f7b0:	mov	r3, #0
   1f7b4:	mov	r2, #48	; 0x30
   1f7b8:	pop	{r4, r5, r6, lr}
   1f7bc:	bx	ip
   1f7c0:	push	{r4, r5, r6, r7, r8, lr}
   1f7c4:	mov	r6, r0
   1f7c8:	ldr	r4, [r0, #8]
   1f7cc:	ldr	r1, [r0, #28]
   1f7d0:	bl	1f628 <lua_atpanic@@Base+0x458>
   1f7d4:	mov	r3, #67	; 0x43
   1f7d8:	strb	r3, [r4, #28]
   1f7dc:	add	r1, r4, #36	; 0x24
   1f7e0:	mov	r0, r4
   1f7e4:	mvn	r2, #0
   1f7e8:	bl	14658 <_start@@Base+0x12a8>
   1f7ec:	ldr	r7, [r4, #4]
   1f7f0:	mov	r5, #0
   1f7f4:	ldr	r1, [r4]
   1f7f8:	mvn	r2, #0
   1f7fc:	add	r1, r1, r5, lsl #2
   1f800:	mov	r0, r4
   1f804:	add	r5, r5, #1
   1f808:	bl	14658 <_start@@Base+0x12a8>
   1f80c:	cmp	r7, r5
   1f810:	bcs	1f7f4 <lua_atpanic@@Base+0x624>
   1f814:	ldr	r0, [r4, #2708]	; 0xa94
   1f818:	mov	r3, #0
   1f81c:	cmp	r0, r3
   1f820:	str	r3, [r4, #2708]	; 0xa94
   1f824:	str	r3, [r4, #2724]	; 0xaa4
   1f828:	beq	1f840 <lua_atpanic@@Base+0x670>
   1f82c:	ldr	r5, [r0]
   1f830:	ldr	r1, [r0, #4]
   1f834:	bl	12f70 <munmap@plt>
   1f838:	subs	r0, r5, #0
   1f83c:	bne	1f82c <lua_atpanic@@Base+0x65c>
   1f840:	ldr	r2, [r4, #644]	; 0x284
   1f844:	ldr	r3, [r4, #20]
   1f848:	ldr	r1, [r4, #640]	; 0x280
   1f84c:	lsl	r2, r2, #2
   1f850:	sub	r3, r3, r2
   1f854:	str	r3, [r4, #20]
   1f858:	ldr	r5, [r4, #12]
   1f85c:	mov	r3, #0
   1f860:	ldr	r0, [r4, #16]
   1f864:	blx	r5
   1f868:	ldr	r2, [r4, #632]	; 0x278
   1f86c:	ldr	r3, [r4, #20]
   1f870:	ldr	r1, [r4, #636]	; 0x27c
   1f874:	lsl	r2, r2, #3
   1f878:	sub	r3, r3, r2
   1f87c:	str	r3, [r4, #20]
   1f880:	ldr	r5, [r4, #12]
   1f884:	mov	r3, #0
   1f888:	ldr	r0, [r4, #16]
   1f88c:	blx	r5
   1f890:	ldr	r1, [r4, #624]	; 0x270
   1f894:	ldr	r2, [r4, #620]	; 0x26c
   1f898:	ldr	r3, [r4, #20]
   1f89c:	sub	r2, r2, r1
   1f8a0:	ldr	r0, [r4, #616]	; 0x268
   1f8a4:	lsl	r2, r2, #3
   1f8a8:	sub	r3, r3, r2
   1f8ac:	add	r1, r0, r1, lsl #3
   1f8b0:	str	r3, [r4, #20]
   1f8b4:	ldr	r5, [r4, #12]
   1f8b8:	mov	r3, #0
   1f8bc:	ldr	r0, [r4, #16]
   1f8c0:	blx	r5
   1f8c4:	ldr	r2, [r4, #664]	; 0x298
   1f8c8:	ldr	r3, [r4, #20]
   1f8cc:	ldr	r5, [r4, #12]
   1f8d0:	lsl	r2, r2, #2
   1f8d4:	sub	r3, r3, r2
   1f8d8:	str	r3, [r4, #20]
   1f8dc:	ldr	r1, [r4, #656]	; 0x290
   1f8e0:	mov	r3, #0
   1f8e4:	ldr	r0, [r4, #16]
   1f8e8:	blx	r5
   1f8ec:	ldr	r5, [r4, #228]	; 0xe4
   1f8f0:	cmp	r5, #0
   1f8f4:	beq	1f980 <lua_atpanic@@Base+0x7b0>
   1f8f8:	ldr	r0, [r5, #180]	; 0xb4
   1f8fc:	cmp	r0, #0
   1f900:	beq	1f90c <lua_atpanic@@Base+0x73c>
   1f904:	mov	r1, #4096	; 0x1000
   1f908:	bl	12f70 <munmap@plt>
   1f90c:	ldr	r2, [r5, #8]
   1f910:	ldr	r3, [r4, #20]
   1f914:	ldr	r1, [r5]
   1f918:	lsl	r2, r2, #4
   1f91c:	sub	r3, r3, r2
   1f920:	str	r3, [r4, #20]
   1f924:	ldr	r7, [r4, #12]
   1f928:	mov	r3, #0
   1f92c:	ldr	r0, [r4, #16]
   1f930:	blx	r7
   1f934:	ldr	r2, [r5, #188]	; 0xbc
   1f938:	ldr	r3, [r4, #20]
   1f93c:	ldr	r1, [r5, #184]	; 0xb8
   1f940:	lsl	r2, r2, #1
   1f944:	sub	r3, r3, r2
   1f948:	str	r3, [r4, #20]
   1f94c:	ldr	r7, [r4, #12]
   1f950:	mov	r3, #0
   1f954:	ldr	r0, [r4, #16]
   1f958:	blx	r7
   1f95c:	ldr	r3, [r4, #20]
   1f960:	mov	r1, r5
   1f964:	sub	r3, r3, #456	; 0x1c8
   1f968:	str	r3, [r4, #20]
   1f96c:	ldr	r5, [r4, #12]
   1f970:	mov	r3, #0
   1f974:	mov	r2, #456	; 0x1c8
   1f978:	ldr	r0, [r4, #16]
   1f97c:	blx	r5
   1f980:	ldr	r2, [r4, #4]
   1f984:	ldr	r3, [r4, #20]
   1f988:	add	r2, r2, #1
   1f98c:	ldr	r1, [r4]
   1f990:	lsl	r2, r2, #2
   1f994:	sub	r3, r3, r2
   1f998:	str	r3, [r4, #20]
   1f99c:	ldr	r5, [r4, #12]
   1f9a0:	mov	r3, #0
   1f9a4:	ldr	r0, [r4, #16]
   1f9a8:	blx	r5
   1f9ac:	ldr	r1, [r4, #88]	; 0x58
   1f9b0:	ldr	r2, [r4, #84]	; 0x54
   1f9b4:	ldr	r3, [r4, #20]
   1f9b8:	sub	r2, r2, r1
   1f9bc:	sub	r3, r3, r2
   1f9c0:	str	r3, [r4, #20]
   1f9c4:	ldr	r5, [r4, #12]
   1f9c8:	mov	r3, #0
   1f9cc:	ldr	r0, [r4, #16]
   1f9d0:	blx	r5
   1f9d4:	ldr	r2, [r6, #44]	; 0x2c
   1f9d8:	ldr	r3, [r4, #20]
   1f9dc:	ldr	r1, [r6, #28]
   1f9e0:	lsl	r2, r2, #3
   1f9e4:	sub	r3, r3, r2
   1f9e8:	str	r3, [r4, #20]
   1f9ec:	ldr	r5, [r4, #12]
   1f9f0:	mov	r3, #0
   1f9f4:	ldr	r0, [r4, #16]
   1f9f8:	blx	r5
   1f9fc:	ldr	lr, [r4, #12]
   1fa00:	ldr	r3, [pc, #84]	; 1fa5c <lua_atpanic@@Base+0x88c>
   1fa04:	cmp	lr, r3
   1fa08:	beq	1fa28 <lua_atpanic@@Base+0x858>
   1fa0c:	sub	r1, r4, #48	; 0x30
   1fa10:	ldr	r0, [r4, #16]
   1fa14:	mov	ip, lr
   1fa18:	mov	r3, #0
   1fa1c:	ldr	r2, [pc, #60]	; 1fa60 <lua_atpanic@@Base+0x890>
   1fa20:	pop	{r4, r5, r6, r7, r8, lr}
   1fa24:	bx	ip
   1fa28:	ldr	r4, [r4, #16]
   1fa2c:	adds	r4, r4, #424	; 0x1a8
   1fa30:	popeq	{r4, r5, r6, r7, r8, pc}
   1fa34:	bl	12eb0 <__errno_location@plt>
   1fa38:	ldr	r6, [r0]
   1fa3c:	mov	r5, r0
   1fa40:	ldrd	r0, [r4]
   1fa44:	ldr	r4, [r4, #8]
   1fa48:	bl	12f70 <munmap@plt>
   1fa4c:	cmp	r4, #0
   1fa50:	str	r6, [r5]
   1fa54:	bne	1fa40 <lua_atpanic@@Base+0x870>
   1fa58:	pop	{r4, r5, r6, r7, r8, pc}
   1fa5c:	andeq	pc, r1, r8, lsl r0	; <UNPREDICTABLE>
   1fa60:	andeq	r1, r0, r0, lsr #32
   1fa64:	push	{r4, r5, r6, r7, r8, lr}
   1fa68:	mov	r7, r0
   1fa6c:	ldr	r0, [r1, #16]
   1fa70:	mov	r4, r3
   1fa74:	cmp	r0, #0
   1fa78:	beq	1fa88 <lua_atpanic@@Base+0x8b8>
   1fa7c:	ldrb	r3, [r0, #6]
   1fa80:	tst	r3, #16
   1fa84:	beq	1fa90 <lua_atpanic@@Base+0x8c0>
   1fa88:	mov	r0, r4
   1fa8c:	pop	{r4, r5, r6, r7, r8, pc}
   1fa90:	ldr	r3, [r7, #8]
   1fa94:	mov	r5, r1
   1fa98:	mov	r6, r2
   1fa9c:	mov	r1, #4
   1faa0:	ldr	r2, [r3, #248]	; 0xf8
   1faa4:	bl	14a44 <_start@@Base+0x1694>
   1faa8:	subs	r8, r0, #0
   1faac:	beq	1fa88 <lua_atpanic@@Base+0x8b8>
   1fab0:	ldr	r0, [r6, #16]
   1fab4:	ldr	r3, [r5, #16]
   1fab8:	cmp	r0, r3
   1fabc:	beq	1fafc <lua_atpanic@@Base+0x92c>
   1fac0:	cmp	r0, #0
   1fac4:	beq	1fa88 <lua_atpanic@@Base+0x8b8>
   1fac8:	ldrb	r3, [r0, #6]
   1facc:	tst	r3, #16
   1fad0:	bne	1fa88 <lua_atpanic@@Base+0x8b8>
   1fad4:	ldr	r3, [r7, #8]
   1fad8:	mov	r1, #4
   1fadc:	ldr	r2, [r3, #248]	; 0xf8
   1fae0:	bl	14a44 <_start@@Base+0x1694>
   1fae4:	subs	r1, r0, #0
   1fae8:	beq	1fa88 <lua_atpanic@@Base+0x8b8>
   1faec:	mov	r0, r8
   1faf0:	bl	17394 <_start@@Base+0x3fe4>
   1faf4:	cmp	r0, #0
   1faf8:	beq	1fa88 <lua_atpanic@@Base+0x8b8>
   1fafc:	ldr	r1, [r7, #16]
   1fb00:	ldr	r0, [pc, #92]	; 1fb64 <lua_atpanic@@Base+0x994>
   1fb04:	ldr	r3, [r1, #-8]
   1fb08:	ldrb	r2, [r3, #6]
   1fb0c:	cmp	r2, #0
   1fb10:	mvn	r2, #3
   1fb14:	ldreq	r3, [r3, #16]
   1fb18:	ldrne	r1, [r7, #20]
   1fb1c:	ldrbeq	r3, [r3, #-57]	; 0xffffffc7
   1fb20:	addeq	r1, r1, r3, lsl #3
   1fb24:	ldr	r3, [pc, #60]	; 1fb68 <lua_atpanic@@Base+0x998>
   1fb28:	cmp	r4, #0
   1fb2c:	movne	r4, r3
   1fb30:	moveq	r4, r0
   1fb34:	str	r4, [r1]
   1fb38:	str	r2, [r1, #4]
   1fb3c:	ldrd	r2, [r8]
   1fb40:	add	r0, r1, #16
   1fb44:	strd	r2, [r1, #8]
   1fb48:	ldrb	r3, [r5, #5]
   1fb4c:	str	r5, [r1, #16]
   1fb50:	str	r6, [r1, #24]
   1fb54:	mvn	r3, r3
   1fb58:	str	r3, [r1, #20]
   1fb5c:	str	r3, [r1, #28]
   1fb60:	pop	{r4, r5, r6, r7, r8, pc}
   1fb64:	ldrdeq	fp, [r6], -r4
   1fb68:	andeq	fp, r6, r4, ror #31
   1fb6c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1fb70:	lsr	r4, r1, #8
   1fb74:	ldr	r3, [pc, #228]	; 1fc60 <lua_atpanic@@Base+0xa90>
   1fb78:	ands	r7, r1, #1
   1fb7c:	uxtb	r4, r4
   1fb80:	ldr	r6, [r0, #16]
   1fb84:	and	r2, r1, #254	; 0xfe
   1fb88:	ldr	r5, [pc, #212]	; 1fc64 <lua_atpanic@@Base+0xa94>
   1fb8c:	movne	r5, r3
   1fb90:	cmp	r2, #4
   1fb94:	sub	sp, sp, #20
   1fb98:	mov	r8, r0
   1fb9c:	add	r4, r6, r4, lsl #3
   1fba0:	lsr	r3, r1, #16
   1fba4:	beq	1fc3c <lua_atpanic@@Base+0xa6c>
   1fba8:	cmp	r2, #6
   1fbac:	beq	1fc10 <lua_atpanic@@Base+0xa40>
   1fbb0:	cmp	r2, #8
   1fbb4:	moveq	r1, r4
   1fbb8:	ldreq	r2, [r6, #-8]
   1fbbc:	movne	r1, r4
   1fbc0:	addne	r9, sp, #8
   1fbc4:	ldreq	r2, [r2, #16]
   1fbc8:	mvnne	r3, r3
   1fbcc:	strne	r3, [sp, #12]
   1fbd0:	ldreq	r9, [r2, #-48]	; 0xffffffd0
   1fbd4:	addeq	r9, r9, r3, lsl #3
   1fbd8:	mov	r2, #4
   1fbdc:	ldr	r0, [r8, #8]
   1fbe0:	bl	1b010 <_start@@Base+0x7c60>
   1fbe4:	ldr	r3, [r0, #4]
   1fbe8:	cmn	r3, #1
   1fbec:	beq	1fc54 <lua_atpanic@@Base+0xa84>
   1fbf0:	ldr	r1, [r8, #20]
   1fbf4:	mov	r3, r0
   1fbf8:	stm	sp, {r4, r9}
   1fbfc:	mov	r2, r5
   1fc00:	mov	r0, r6
   1fc04:	bl	1b0a8 <_start@@Base+0x7cf8>
   1fc08:	add	sp, sp, #20
   1fc0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1fc10:	ldr	r1, [r6, #-8]
   1fc14:	mvn	r3, r3
   1fc18:	mvn	r2, #4
   1fc1c:	ldr	r0, [r1, #16]
   1fc20:	add	r9, sp, #8
   1fc24:	mov	r1, r4
   1fc28:	ldr	r0, [r0, #-48]	; 0xffffffd0
   1fc2c:	ldr	r3, [r0, r3, lsl #2]
   1fc30:	str	r2, [sp, #12]
   1fc34:	str	r3, [sp, #8]
   1fc38:	b	1fbd8 <lua_atpanic@@Base+0xa08>
   1fc3c:	ldr	r1, [r4, #4]
   1fc40:	add	r9, r6, r3, lsl #3
   1fc44:	cmn	r1, #11
   1fc48:	movne	r1, r9
   1fc4c:	moveq	r1, r4
   1fc50:	b	1fbd8 <lua_atpanic@@Base+0xa08>
   1fc54:	mov	r0, r7
   1fc58:	add	sp, sp, #20
   1fc5c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1fc60:	andeq	fp, r6, r4, ror #31
   1fc64:	ldrdeq	fp, [r6], -r4

0001fc68 <lua_setlocal@@Base>:
   1fc68:	push	{r4, r5, r6, lr}
   1fc6c:	sub	sp, sp, #8
   1fc70:	add	ip, sp, #8
   1fc74:	mov	lr, #0
   1fc78:	mov	r3, r2
   1fc7c:	str	lr, [ip, #-4]!
   1fc80:	ldr	r1, [r1, #96]	; 0x60
   1fc84:	mov	r2, ip
   1fc88:	mov	r6, r0
   1fc8c:	bl	1d8ec <_start@@Base+0xa53c>
   1fc90:	ldr	r2, [sp, #4]
   1fc94:	ldr	r3, [r6, #20]
   1fc98:	cmp	r2, #0
   1fc9c:	ldrdne	r4, [r3, #-8]
   1fca0:	strdne	r4, [r0]
   1fca4:	sub	r3, r3, #8
   1fca8:	mov	r0, r2
   1fcac:	str	r3, [r6, #20]
   1fcb0:	add	sp, sp, #8
   1fcb4:	pop	{r4, r5, r6, pc}

0001fcb8 <lua_getstack@@Base>:
   1fcb8:	push	{r4, r5, r6, lr}
   1fcbc:	sub	sp, sp, #8
   1fcc0:	mov	r4, r2
   1fcc4:	add	r2, sp, #4
   1fcc8:	mov	r5, r1
   1fccc:	mov	r6, r0
   1fcd0:	bl	14b74 <_start@@Base+0x17c4>
   1fcd4:	cmp	r0, #0
   1fcd8:	ldrne	r2, [r6, #28]
   1fcdc:	ldrne	r3, [sp, #4]
   1fce0:	subne	r2, r0, r2
   1fce4:	ldreq	r3, [sp, #4]
   1fce8:	lslne	r3, r3, #16
   1fcec:	addne	r3, r3, r2, asr #3
   1fcf0:	subeq	r5, r5, r3
   1fcf4:	movne	r0, #1
   1fcf8:	strne	r3, [r4, #96]	; 0x60
   1fcfc:	streq	r5, [r4, #96]	; 0x60
   1fd00:	add	sp, sp, #8
   1fd04:	pop	{r4, r5, r6, pc}
   1fd08:	ldr	r2, [pc, #104]	; 1fd78 <lua_getstack@@Base+0xc0>
   1fd0c:	ldr	r3, [r0, #44]	; 0x2c
   1fd10:	push	{r4, lr}
   1fd14:	cmp	r3, r2
   1fd18:	bhi	1fd70 <lua_getstack@@Base+0xb8>
   1fd1c:	ldr	r2, [pc, #88]	; 1fd7c <lua_getstack@@Base+0xc4>
   1fd20:	add	r1, r3, r1
   1fd24:	cmp	r1, r2
   1fd28:	mov	r4, r0
   1fd2c:	addhi	r1, r1, #40	; 0x28
   1fd30:	bhi	1fd4c <lua_getstack@@Base+0x94>
   1fd34:	lsl	r3, r3, #1
   1fd38:	cmp	r3, r1
   1fd3c:	bls	1fd4c <lua_getstack@@Base+0x94>
   1fd40:	cmp	r3, r2
   1fd44:	movcc	r1, r3
   1fd48:	movcs	r1, r2
   1fd4c:	mov	r0, r4
   1fd50:	bl	20604 <luaL_where@@Base+0x500>
   1fd54:	ldr	r3, [pc, #28]	; 1fd78 <lua_getstack@@Base+0xc0>
   1fd58:	ldr	r2, [r4, #44]	; 0x2c
   1fd5c:	cmp	r2, r3
   1fd60:	popls	{r4, pc}
   1fd64:	mov	r0, r4
   1fd68:	mov	r1, #104	; 0x68
   1fd6c:	bl	20258 <luaL_where@@Base+0x154>
   1fd70:	mov	r1, #5
   1fd74:	bl	20ff0 <luaL_where@@Base+0xeec>
   1fd78:	andeq	pc, r0, r2, ror #31
   1fd7c:	ldrdeq	pc, [r0], -ip
   1fd80:	push	{r4, r5, r6, r7, lr}
   1fd84:	sub	sp, sp, #108	; 0x6c
   1fd88:	ldr	r4, [r0, #8]
   1fd8c:	ldr	r6, [r4, #200]	; 0xc8
   1fd90:	cmp	r6, #0
   1fd94:	beq	1fe0c <lua_getstack@@Base+0x154>
   1fd98:	ldrb	ip, [r4, #113]	; 0x71
   1fd9c:	tst	ip, #16
   1fda0:	bne	1fe0c <lua_getstack@@Base+0x154>
   1fda4:	ldr	r3, [r0, #16]
   1fda8:	ldr	lr, [r0, #28]
   1fdac:	sub	r3, r3, #8
   1fdb0:	sub	r3, r3, lr
   1fdb4:	ldr	r7, [r0, #20]
   1fdb8:	ldr	lr, [r0, #24]
   1fdbc:	asr	r3, r3, #3
   1fdc0:	sub	lr, lr, r7
   1fdc4:	cmp	lr, #168	; 0xa8
   1fdc8:	ldr	lr, [r4, #552]	; 0x228
   1fdcc:	str	r1, [sp, #4]
   1fdd0:	bic	r1, lr, #16
   1fdd4:	mov	r5, r0
   1fdd8:	str	r2, [sp, #24]
   1fddc:	str	r3, [sp, #100]	; 0x64
   1fde0:	str	r1, [r4, #552]	; 0x228
   1fde4:	ble	1fe14 <lua_getstack@@Base+0x15c>
   1fde8:	orr	ip, ip, #16
   1fdec:	strb	ip, [r4, #113]	; 0x71
   1fdf0:	add	r1, sp, #4
   1fdf4:	mov	r0, r5
   1fdf8:	blx	r6
   1fdfc:	ldrb	r3, [r4, #113]	; 0x71
   1fe00:	str	r5, [r4, #220]	; 0xdc
   1fe04:	bic	r3, r3, #16
   1fe08:	strb	r3, [r4, #113]	; 0x71
   1fe0c:	add	sp, sp, #108	; 0x6c
   1fe10:	pop	{r4, r5, r6, r7, pc}
   1fe14:	mov	r1, #21
   1fe18:	bl	1fd08 <lua_getstack@@Base+0x50>
   1fe1c:	ldrb	ip, [r4, #113]	; 0x71
   1fe20:	b	1fde8 <lua_getstack@@Base+0x130>
   1fe24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe28:	mov	r6, r0
   1fe2c:	ldr	r5, [r0, #8]
   1fe30:	sub	sp, sp, #28
   1fe34:	mov	r0, r1
   1fe38:	ldr	r3, [r5, #88]	; 0x58
   1fe3c:	str	r6, [r5, #92]	; 0x5c
   1fe40:	str	r3, [r5, #80]	; 0x50
   1fe44:	mov	fp, r1
   1fe48:	mov	r4, r2
   1fe4c:	bl	12e80 <strlen@plt>
   1fe50:	ldr	sl, [pc, #480]	; 20038 <lua_getstack@@Base+0x380>
   1fe54:	ldr	r8, [pc, #480]	; 2003c <lua_getstack@@Base+0x384>
   1fe58:	add	r7, r5, #80	; 0x50
   1fe5c:	mov	r9, #63	; 0x3f
   1fe60:	str	fp, [sp, #8]
   1fe64:	add	r0, fp, r0
   1fe68:	str	r0, [sp, #12]
   1fe6c:	add	r0, sp, #8
   1fe70:	bl	176c8 <_start@@Base+0x4318>
   1fe74:	subs	r1, r0, #0
   1fe78:	beq	1fed0 <lua_getstack@@Base+0x218>
   1fe7c:	and	r3, r1, #15
   1fe80:	sub	r3, r3, #2
   1fe84:	cmp	r3, #6
   1fe88:	ldrls	pc, [pc, r3, lsl #2]
   1fe8c:	b	1ffe8 <lua_getstack@@Base+0x330>
   1fe90:	ldrdeq	pc, [r1], -r4
   1fe94:			; <UNDEFINED> instruction: 0x0001ffbc
   1fe98:	andeq	pc, r1, r4, lsr #31
   1fe9c:	andeq	pc, r1, ip, ror pc	; <UNPREDICTABLE>
   1fea0:	andeq	pc, r1, r0, asr pc	; <UNPREDICTABLE>
   1fea4:	andeq	pc, r1, r8, lsr #30
   1fea8:	andeq	pc, r1, ip, lsr #29
   1feac:	ldr	r1, [r4]
   1feb0:	add	r3, r4, #4
   1feb4:	mov	r0, r7
   1feb8:	mov	r4, r3
   1febc:	bl	30238 <luaL_where@@Base+0x10134>
   1fec0:	add	r0, sp, #8
   1fec4:	bl	176c8 <_start@@Base+0x4318>
   1fec8:	subs	r1, r0, #0
   1fecc:	bne	1fe7c <lua_getstack@@Base+0x1c4>
   1fed0:	ldr	r3, [r5, #88]	; 0x58
   1fed4:	ldr	r2, [r5, #80]	; 0x50
   1fed8:	mov	r1, r3
   1fedc:	sub	r2, r2, r3
   1fee0:	mov	r0, r6
   1fee4:	bl	20260 <luaL_where@@Base+0x15c>
   1fee8:	ldr	r3, [r6, #20]
   1feec:	mvn	r1, #4
   1fef0:	add	r2, r3, #8
   1fef4:	mov	r4, r0
   1fef8:	ldr	r0, [r6, #24]
   1fefc:	str	r4, [r3]
   1ff00:	cmp	r2, r0
   1ff04:	str	r1, [r3, #4]
   1ff08:	str	r2, [r6, #20]
   1ff0c:	bcc	1ff1c <lua_getstack@@Base+0x264>
   1ff10:	mov	r0, r6
   1ff14:	mov	r1, #1
   1ff18:	bl	1fd08 <lua_getstack@@Base+0x50>
   1ff1c:	add	r0, r4, #16
   1ff20:	add	sp, sp, #28
   1ff24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ff28:	ldr	r0, [r5, #80]	; 0x50
   1ff2c:	ldr	r2, [r5, #84]	; 0x54
   1ff30:	add	r3, r4, #4
   1ff34:	cmp	r2, r0
   1ff38:	ldr	fp, [r4]
   1ff3c:	beq	20020 <lua_getstack@@Base+0x368>
   1ff40:	strb	fp, [r0], #1
   1ff44:	mov	r4, r3
   1ff48:	str	r0, [r5, #80]	; 0x50
   1ff4c:	b	1fe6c <lua_getstack@@Base+0x1b4>
   1ff50:	ldr	fp, [r4]
   1ff54:	add	r4, r4, #4
   1ff58:	cmp	fp, #0
   1ff5c:	beq	20004 <lua_getstack@@Base+0x34c>
   1ff60:	mov	r0, fp
   1ff64:	bl	12e80 <strlen@plt>
   1ff68:	mov	r2, r0
   1ff6c:	mov	r1, fp
   1ff70:	mov	r0, r7
   1ff74:	bl	2ffac <luaL_where@@Base+0xfea8>
   1ff78:	b	1fe6c <lua_getstack@@Base+0x1b4>
   1ff7c:	add	r4, r4, #7
   1ff80:	bic	r4, r4, #7
   1ff84:	mov	r2, #0
   1ff88:	vldr	d0, [r4]
   1ff8c:	mov	r1, r8
   1ff90:	mov	r0, r7
   1ff94:	bl	30bd4 <luaL_where@@Base+0x10ad0>
   1ff98:	add	r4, r4, #8
   1ff9c:	str	r0, [r5, #80]	; 0x50
   1ffa0:	b	1fe6c <lua_getstack@@Base+0x1b4>
   1ffa4:	ldr	r2, [r4]
   1ffa8:	mov	r3, #0
   1ffac:	mov	r0, r7
   1ffb0:	add	r4, r4, #4
   1ffb4:	bl	30574 <luaL_where@@Base+0x10470>
   1ffb8:	b	1fe6c <lua_getstack@@Base+0x1b4>
   1ffbc:	ldr	r2, [r4]
   1ffc0:	mov	r0, r7
   1ffc4:	add	r4, r4, #4
   1ffc8:	asr	r3, r2, #31
   1ffcc:	bl	30574 <luaL_where@@Base+0x10470>
   1ffd0:	b	1fe6c <lua_getstack@@Base+0x1b4>
   1ffd4:	ldr	r2, [sp, #20]
   1ffd8:	ldr	r1, [sp, #16]
   1ffdc:	mov	r0, r7
   1ffe0:	bl	2ffac <luaL_where@@Base+0xfea8>
   1ffe4:	b	1fe6c <lua_getstack@@Base+0x1b4>
   1ffe8:	ldr	r0, [r5, #80]	; 0x50
   1ffec:	ldr	r3, [r5, #84]	; 0x54
   1fff0:	cmp	r3, r0
   1fff4:	beq	20010 <lua_getstack@@Base+0x358>
   1fff8:	strb	r9, [r0], #1
   1fffc:	str	r0, [r5, #80]	; 0x50
   20000:	b	1fe6c <lua_getstack@@Base+0x1b4>
   20004:	mov	r2, #6
   20008:	mov	fp, sl
   2000c:	b	1ff6c <lua_getstack@@Base+0x2b4>
   20010:	mov	r1, #1
   20014:	mov	r0, r7
   20018:	bl	2ff68 <luaL_where@@Base+0xfe64>
   2001c:	b	1fff8 <lua_getstack@@Base+0x340>
   20020:	mov	r1, #1
   20024:	mov	r0, r7
   20028:	str	r3, [sp, #4]
   2002c:	bl	2ff68 <luaL_where@@Base+0xfe64>
   20030:	ldr	r3, [sp, #4]
   20034:	b	1ff40 <lua_getstack@@Base+0x288>
   20038:	andeq	r2, r7, ip, lsl #25
   2003c:	svceq	0x00000035
   20040:	push	{r1, r2, r3}
   20044:	push	{lr}		; (str lr, [sp, #-4]!)
   20048:	sub	sp, sp, #8
   2004c:	add	r3, sp, #16
   20050:	mov	r2, r3
   20054:	ldr	r1, [sp, #12]
   20058:	str	r3, [sp, #4]
   2005c:	bl	1fe24 <lua_getstack@@Base+0x16c>
   20060:	add	sp, sp, #8
   20064:	pop	{lr}		; (ldr lr, [sp], #4)
   20068:	add	sp, sp, #12
   2006c:	bx	lr
   20070:	cmp	r2, #0
   20074:	push	{r4, r5, r6, r7, lr}
   20078:	mov	r6, r1
   2007c:	sub	sp, sp, #76	; 0x4c
   20080:	mov	r5, r0
   20084:	beq	20098 <lua_getstack@@Base+0x3e0>
   20088:	ldr	r4, [r2]
   2008c:	ldrb	r1, [r4, #6]
   20090:	cmp	r1, #0
   20094:	beq	200b0 <lua_getstack@@Base+0x3f8>
   20098:	mov	r2, r6
   2009c:	mov	r0, r5
   200a0:	ldr	r1, [pc, #84]	; 200fc <lua_getstack@@Base+0x444>
   200a4:	bl	20040 <lua_getstack@@Base+0x388>
   200a8:	add	sp, sp, #76	; 0x4c
   200ac:	pop	{r4, r5, r6, r7, pc}
   200b0:	mov	r2, r3
   200b4:	mov	r1, r4
   200b8:	bl	1b214 <_start@@Base+0x7e64>
   200bc:	subs	r7, r0, #0
   200c0:	blt	20098 <lua_getstack@@Base+0x3e0>
   200c4:	ldr	r1, [r4, #16]
   200c8:	add	r0, sp, #12
   200cc:	sub	r1, r1, #64	; 0x40
   200d0:	ldr	r2, [r1, #44]	; 0x2c
   200d4:	ldr	r1, [r1, #40]	; 0x28
   200d8:	bl	17ebc <_start@@Base+0x4b0c>
   200dc:	add	r2, sp, #12
   200e0:	str	r6, [sp]
   200e4:	mov	r3, r7
   200e8:	mov	r0, r5
   200ec:	ldr	r1, [pc, #12]	; 20100 <lua_getstack@@Base+0x448>
   200f0:	bl	20040 <lua_getstack@@Base+0x388>
   200f4:	add	sp, sp, #76	; 0x4c
   200f8:	pop	{r4, r5, r6, r7, pc}
   200fc:	strdeq	r3, [r7], -ip
   20100:	muleq	r7, r4, ip

00020104 <luaL_where@@Base>:
   20104:	push	{r4, lr}
   20108:	sub	sp, sp, #8
   2010c:	add	r2, sp, #4
   20110:	mov	r4, r0
   20114:	bl	14b74 <_start@@Base+0x17c4>
   20118:	ldr	r3, [sp, #4]
   2011c:	ldr	r1, [pc, #24]	; 2013c <luaL_where@@Base+0x38>
   20120:	cmp	r3, #0
   20124:	mov	r2, r0
   20128:	addne	r3, r0, r3, lsl #3
   2012c:	mov	r0, r4
   20130:	bl	20070 <lua_getstack@@Base+0x3b8>
   20134:	add	sp, sp, #8
   20138:	pop	{r4, pc}
   2013c:	andeq	lr, r6, r0, ror #24
   20140:	cmp	r1, #256	; 0x100
   20144:	bgt	20174 <luaL_where@@Base+0x70>
   20148:	ldr	r3, [pc, #52]	; 20184 <luaL_where@@Base+0x80>
   2014c:	ldr	r0, [r0]
   20150:	add	r3, r3, r1
   20154:	mov	r2, r1
   20158:	ldrb	r3, [r3, #189]	; 0xbd
   2015c:	tst	r3, #1
   20160:	beq	2016c <luaL_where@@Base+0x68>
   20164:	ldr	r1, [pc, #28]	; 20188 <luaL_where@@Base+0x84>
   20168:	b	20040 <lua_getstack@@Base+0x388>
   2016c:	ldr	r1, [pc, #24]	; 2018c <luaL_where@@Base+0x88>
   20170:	b	20040 <lua_getstack@@Base+0x388>
   20174:	ldr	r2, [pc, #8]	; 20184 <luaL_where@@Base+0x80>
   20178:	add	r1, r2, r1, lsl #2
   2017c:	ldr	r0, [r1, #244]	; 0xf4
   20180:	bx	lr
   20184:			; <UNDEFINED> instruction: 0x0006ecb8
   20188:	andeq	r2, r7, r4, lsr #25
   2018c:	andeq	r2, r7, r0, lsr #25
   20190:	cmp	r1, #255	; 0xff
   20194:	bgt	201c4 <luaL_where@@Base+0xc0>
   20198:	ldr	r3, [pc, #52]	; 201d4 <luaL_where@@Base+0xd0>
   2019c:	ldr	r0, [r0]
   201a0:	add	r3, r3, r1
   201a4:	mov	r2, r1
   201a8:	ldrb	r3, [r3, #189]	; 0xbd
   201ac:	tst	r3, #1
   201b0:	beq	201bc <luaL_where@@Base+0xb8>
   201b4:	ldr	r1, [pc, #28]	; 201d8 <luaL_where@@Base+0xd4>
   201b8:	b	20040 <lua_getstack@@Base+0x388>
   201bc:	ldr	r1, [pc, #24]	; 201dc <luaL_where@@Base+0xd8>
   201c0:	b	20040 <lua_getstack@@Base+0x388>
   201c4:	ldr	r2, [pc, #8]	; 201d4 <luaL_where@@Base+0xd0>
   201c8:	add	r1, r2, r1, lsl #2
   201cc:	ldr	r0, [r1, #384]	; 0x180
   201d0:	bx	lr
   201d4:			; <UNDEFINED> instruction: 0x0006ecb8
   201d8:	andeq	r2, r7, r4, lsr #25
   201dc:	andeq	r2, r7, r0, lsr #25
   201e0:	push	{r1, r2, r3}
   201e4:	mov	r4, r0
   201e8:	ldr	r3, [r0, #16]
   201ec:	push	{lr}		; (str lr, [sp, #-4]!)
   201f0:	sub	sp, sp, #8
   201f4:	add	r2, sp, #16
   201f8:	str	r2, [sp, #4]
   201fc:	ldr	r2, [r3, #-8]
   20200:	ldr	r1, [sp, #12]
   20204:	ldrb	r0, [r2, #6]
   20208:	cmp	r0, #0
   2020c:	mov	r0, r4
   20210:	ldreq	r2, [r2, #16]
   20214:	ldrbeq	r2, [r2, #-57]	; 0xffffffc7
   20218:	addeq	r3, r3, r2, lsl #3
   2021c:	streq	r3, [r4, #20]
   20220:	ldr	r3, [pc, #44]	; 20254 <luaL_where@@Base+0x150>
   20224:	ldr	r2, [sp, #4]
   20228:	ldr	r3, [r3]
   2022c:	add	r1, r3, r1
   20230:	bl	1fe24 <lua_getstack@@Base+0x16c>
   20234:	ldr	r2, [r4, #16]
   20238:	mov	r3, #0
   2023c:	sub	r2, r2, #8
   20240:	mov	r1, r0
   20244:	mov	r0, r4
   20248:	bl	20070 <lua_getstack@@Base+0x3b8>
   2024c:	mov	r0, r4
   20250:	bl	35808 <luaL_where@@Base+0x15704>
   20254:	muleq	r8, ip, r1
   20258:	push	{r4, lr}
   2025c:	bl	201e0 <luaL_where@@Base+0xdc>
   20260:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20264:	ldr	r3, [pc, #700]	; 20528 <luaL_where@@Base+0x424>
   20268:	cmp	r2, r3
   2026c:	bhi	20520 <luaL_where@@Base+0x41c>
   20270:	cmp	r2, #3
   20274:	mov	r5, r2
   20278:	mov	r6, r1
   2027c:	mov	r9, r0
   20280:	ldr	r8, [r0, #8]
   20284:	bls	204d8 <luaL_where@@Base+0x3d4>
   20288:	add	r3, r1, r2
   2028c:	add	r0, r1, r2, lsr #1
   20290:	ldrb	r7, [r3, #-3]
   20294:	ldrb	r1, [r3, #-4]
   20298:	ldrb	r4, [r0, #-1]
   2029c:	ldrb	ip, [r3, #-2]
   202a0:	ldrb	lr, [r3, #-1]
   202a4:	orr	r3, r1, r7, lsl #8
   202a8:	ldrb	r1, [r0, #-2]
   202ac:	add	r2, r6, r2, lsr #2
   202b0:	ldrb	r7, [r0, #1]
   202b4:	orr	r1, r1, r4, lsl #8
   202b8:	ldrb	r4, [r6, r5, lsr #2]
   202bc:	orr	r3, r3, ip, lsl #16
   202c0:	ldrb	r0, [r2, #-1]
   202c4:	ldrb	ip, [r6, r5, lsr #1]
   202c8:	orr	r3, r3, lr, lsl #24
   202cc:	ldrb	lr, [r2, #1]
   202d0:	orr	r0, r0, r4, lsl #8
   202d4:	ldrb	r4, [r6, #1]
   202d8:	orr	r1, r1, ip, lsl #16
   202dc:	ldrb	sl, [r6, #2]
   202e0:	ldrb	ip, [r2, #2]
   202e4:	ldrb	r2, [r6]
   202e8:	orr	r0, r0, lr, lsl #16
   202ec:	ldrb	lr, [r6, #3]
   202f0:	orr	r1, r1, r7, lsl #24
   202f4:	eor	r3, r3, r5
   202f8:	orr	r2, r2, r4, lsl #8
   202fc:	eor	r3, r3, r1
   20300:	orr	r0, r0, ip, lsl #24
   20304:	orr	r2, r2, sl, lsl #16
   20308:	sub	r3, r3, r1, ror #18
   2030c:	add	r0, r0, r1
   20310:	orr	r2, r2, lr, lsl #24
   20314:	eor	r2, r2, r3
   20318:	sub	r2, r2, r3, ror #21
   2031c:	sub	r1, r6, #1
   20320:	eor	r7, r0, r2
   20324:	add	r1, r1, r5
   20328:	sub	r2, r7, r2, ror #7
   2032c:	eor	r7, r3, r2
   20330:	lsl	r1, r1, #20
   20334:	ldr	r3, [r8, #4]
   20338:	sub	r7, r7, r2, ror #16
   2033c:	ldr	r0, [pc, #488]	; 2052c <luaL_where@@Base+0x428>
   20340:	ldr	r2, [r8]
   20344:	and	r3, r3, r7
   20348:	lsr	r1, r1, #20
   2034c:	cmp	r1, r0
   20350:	ldr	r4, [r2, r3, lsl #2]
   20354:	bhi	20420 <luaL_where@@Base+0x31c>
   20358:	cmp	r4, #0
   2035c:	bne	20370 <luaL_where@@Base+0x26c>
   20360:	b	20440 <luaL_where@@Base+0x33c>
   20364:	ldr	r4, [r4]
   20368:	cmp	r4, #0
   2036c:	beq	20440 <luaL_where@@Base+0x33c>
   20370:	ldr	r3, [r4, #12]
   20374:	mov	sl, r4
   20378:	cmp	r3, r5
   2037c:	bne	20364 <luaL_where@@Base+0x260>
   20380:	add	r1, r4, #12
   20384:	mov	r2, #0
   20388:	b	20398 <luaL_where@@Base+0x294>
   2038c:	add	r2, r2, #4
   20390:	cmp	r5, r2
   20394:	bls	203e4 <luaL_where@@Base+0x2e0>
   20398:	mov	ip, r6
   2039c:	ldr	r0, [r1, #4]!
   203a0:	ldrb	r3, [ip, r2]!
   203a4:	ldrb	fp, [ip, #1]
   203a8:	ldrb	lr, [ip, #2]
   203ac:	ldrb	ip, [ip, #3]
   203b0:	orr	r3, r3, fp, lsl #8
   203b4:	orr	r3, r3, lr, lsl #16
   203b8:	orr	r3, r3, ip, lsl #24
   203bc:	cmp	r3, r0
   203c0:	beq	2038c <luaL_where@@Base+0x288>
   203c4:	sub	r2, r2, r5
   203c8:	cmn	r2, #3
   203cc:	blt	20364 <luaL_where@@Base+0x260>
   203d0:	lsl	r2, r2, #3
   203d4:	add	r2, r2, #32
   203d8:	eor	r3, r3, r0
   203dc:	lsls	r3, r3, r2
   203e0:	bne	20364 <luaL_where@@Base+0x260>
   203e4:	ldrb	r2, [r4, #4]
   203e8:	ldrb	r3, [r8, #28]
   203ec:	bic	r3, r2, r3
   203f0:	tst	r3, #3
   203f4:	eorne	r2, r2, #3
   203f8:	strbne	r2, [r4, #4]
   203fc:	mov	r0, sl
   20400:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20404:	mov	r2, r5
   20408:	add	r1, r4, #16
   2040c:	mov	r0, r6
   20410:	bl	12d00 <memcmp@plt>
   20414:	cmp	r0, #0
   20418:	beq	20504 <luaL_where@@Base+0x400>
   2041c:	ldr	r4, [r4]
   20420:	cmp	r4, #0
   20424:	beq	20440 <luaL_where@@Base+0x33c>
   20428:	ldr	r3, [r4, #12]
   2042c:	mov	sl, r4
   20430:	cmp	r3, r5
   20434:	beq	20404 <luaL_where@@Base+0x300>
   20438:	ldr	r4, [r4]
   2043c:	b	20420 <luaL_where@@Base+0x31c>
   20440:	mov	r2, #0
   20444:	mov	r1, r2
   20448:	add	r3, r5, #17
   2044c:	mov	r0, r9
   20450:	bl	205b0 <luaL_where@@Base+0x4ac>
   20454:	ldrb	r3, [r8, #28]
   20458:	mov	r2, #4
   2045c:	mov	r4, #0
   20460:	and	r3, r3, #3
   20464:	mov	r1, r6
   20468:	mov	sl, r0
   2046c:	str	r5, [r0, #12]
   20470:	strb	r2, [r0, #5]
   20474:	mov	r2, r5
   20478:	add	r5, sl, r5
   2047c:	strb	r3, [r0, #4]
   20480:	str	r7, [r0, #8]
   20484:	strb	r4, [r0, #6]
   20488:	add	r0, r0, #16
   2048c:	bl	12cb8 <memcpy@plt>
   20490:	strb	r4, [r5, #16]
   20494:	ldr	r1, [r8, #4]
   20498:	ldr	r2, [r8]
   2049c:	and	r7, r7, r1
   204a0:	ldr	r3, [r8, #8]
   204a4:	ldr	r0, [r2, r7, lsl #2]
   204a8:	cmp	r1, r3
   204ac:	add	r3, r3, #1
   204b0:	str	r0, [sl]
   204b4:	str	sl, [r2, r7, lsl #2]
   204b8:	str	r3, [r8, #8]
   204bc:	bcs	203fc <luaL_where@@Base+0x2f8>
   204c0:	lsl	r1, r1, #1
   204c4:	mov	r0, r9
   204c8:	add	r1, r1, #1
   204cc:	bl	24fe4 <luaL_where@@Base+0x4ee0>
   204d0:	mov	r0, sl
   204d4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   204d8:	cmp	r2, #0
   204dc:	addeq	sl, r8, #96	; 0x60
   204e0:	beq	203fc <luaL_where@@Base+0x2f8>
   204e4:	add	r3, r1, r2
   204e8:	ldrb	r0, [r1, r2, lsr #1]
   204ec:	ldrb	r3, [r3, #-1]
   204f0:	ldrb	r2, [r1]
   204f4:	eor	r3, r3, r0
   204f8:	eor	r3, r3, r5
   204fc:	sub	r3, r3, r0, ror #18
   20500:	b	20314 <luaL_where@@Base+0x210>
   20504:	ldrb	r3, [r4, #4]
   20508:	ldrb	r2, [r8, #28]
   2050c:	bic	r2, r3, r2
   20510:	tst	r2, #3
   20514:	eorne	r3, r3, #3
   20518:	strbne	r3, [r4, #4]
   2051c:	b	203fc <luaL_where@@Base+0x2f8>
   20520:	mov	r1, #56	; 0x38
   20524:	bl	20258 <luaL_where@@Base+0x154>
   20528:	svcvc	0x00fffeff
   2052c:	strdeq	r0, [r0], -ip
   20530:	ldr	r3, [pc, #40]	; 20560 <luaL_where@@Base+0x45c>
   20534:	push	{r4, r5, r6, lr}
   20538:	mov	r5, r0
   2053c:	ldr	r4, [r3]
   20540:	add	r4, r4, r1
   20544:	mov	r0, r4
   20548:	bl	12e80 <strlen@plt>
   2054c:	mov	r1, r4
   20550:	mov	r2, r0
   20554:	mov	r0, r5
   20558:	pop	{r4, r5, r6, lr}
   2055c:	b	20260 <luaL_where@@Base+0x15c>
   20560:	muleq	r8, ip, r1
   20564:	push	{r4, lr}
   20568:	mov	r4, r0
   2056c:	ldrb	r3, [r0, #7]
   20570:	cmp	r3, #6
   20574:	beq	205a4 <luaL_where@@Base+0x4a0>
   20578:	ldr	r5, [r0, #20]
   2057c:	mov	r1, #0
   20580:	add	r3, r5, #8
   20584:	str	r3, [r0, #20]
   20588:	bl	20530 <luaL_where@@Base+0x42c>
   2058c:	mvn	r3, #4
   20590:	str	r3, [r5, #4]
   20594:	mov	r1, #4
   20598:	str	r0, [r5]
   2059c:	mov	r0, r4
   205a0:	bl	20ff0 <luaL_where@@Base+0xeec>
   205a4:	ldr	r0, [r0, #40]	; 0x28
   205a8:	mov	r1, #4
   205ac:	bl	6bb20 <luaL_openlibs@@Base+0x2360>
   205b0:	push	{r4, r5, r6, r7, r8, lr}
   205b4:	mov	r6, r0
   205b8:	ldr	r4, [r0, #8]
   205bc:	mov	r5, r3
   205c0:	mov	r8, r2
   205c4:	ldr	r7, [r4, #12]
   205c8:	ldr	r0, [r4, #16]
   205cc:	blx	r7
   205d0:	adds	r3, r5, #0
   205d4:	movne	r3, #1
   205d8:	cmp	r0, #0
   205dc:	movne	r3, #0
   205e0:	cmp	r3, #0
   205e4:	bne	205fc <luaL_where@@Base+0x4f8>
   205e8:	ldr	r3, [r4, #20]
   205ec:	sub	r5, r5, r8
   205f0:	add	r5, r3, r5
   205f4:	str	r5, [r4, #20]
   205f8:	pop	{r4, r5, r6, r7, r8, pc}
   205fc:	mov	r0, r6
   20600:	bl	20564 <luaL_where@@Base+0x460>
   20604:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20608:	add	r8, r1, #6
   2060c:	ldr	r9, [r0, #44]	; 0x2c
   20610:	ldr	r7, [r0, #28]
   20614:	lsl	r6, r8, #3
   20618:	lsl	r4, r9, #3
   2061c:	mov	r3, r6
   20620:	mov	r2, r4
   20624:	mov	r1, r7
   20628:	mov	r5, r0
   2062c:	bl	205b0 <luaL_where@@Base+0x4ac>
   20630:	sub	r3, r6, #48	; 0x30
   20634:	cmp	r9, r8
   20638:	add	r3, r0, r3
   2063c:	str	r0, [r5, #28]
   20640:	str	r3, [r5, #24]
   20644:	sub	ip, r0, r7
   20648:	bcs	2066c <luaL_where@@Base+0x568>
   2064c:	add	r2, r0, r4
   20650:	mvn	r3, #0
   20654:	add	r0, r6, r0
   20658:	str	r3, [r2, #4]
   2065c:	add	r2, r2, #8
   20660:	cmp	r2, r0
   20664:	bne	20658 <luaL_where@@Base+0x554>
   20668:	mov	r9, r8
   2066c:	ldr	r2, [r5, #8]
   20670:	str	r8, [r5, #44]	; 0x2c
   20674:	ldr	r1, [r5, #16]
   20678:	ldr	r3, [r2, #224]	; 0xe0
   2067c:	add	r1, r1, ip
   20680:	sub	r7, r3, r7
   20684:	cmp	r7, r9
   20688:	addcc	r3, r3, ip
   2068c:	strcc	r3, [r2, #224]	; 0xe0
   20690:	ldr	r3, [r5, #32]
   20694:	ldr	r2, [r5, #20]
   20698:	cmp	r3, #0
   2069c:	add	r2, r2, ip
   206a0:	str	r1, [r5, #16]
   206a4:	str	r2, [r5, #20]
   206a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   206ac:	ldr	r2, [r3, #16]
   206b0:	add	r2, r2, ip
   206b4:	str	r2, [r3, #16]
   206b8:	ldr	r3, [r3]
   206bc:	cmp	r3, #0
   206c0:	bne	206ac <luaL_where@@Base+0x5a8>
   206c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   206c8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   206cc:	mov	r7, r0
   206d0:	ldr	r5, [r0, #44]	; 0x2c
   206d4:	ldrb	r2, [r5, #4]
   206d8:	ldrb	r3, [r5, #5]
   206dc:	ldr	r1, [r5, #12]
   206e0:	orr	ip, r2, #4
   206e4:	cmp	r3, #11
   206e8:	strb	ip, [r5, #4]
   206ec:	str	r1, [r0, #44]	; 0x2c
   206f0:	bne	208f4 <luaL_where@@Base+0x7f0>
   206f4:	ldr	r8, [r5, #16]
   206f8:	cmp	r8, #0
   206fc:	beq	20784 <luaL_where@@Base+0x680>
   20700:	ldrb	r3, [r8, #4]
   20704:	tst	r3, #3
   20708:	bne	2076c <luaL_where@@Base+0x668>
   2070c:	ldrb	r0, [r8, #6]
   20710:	ands	r4, r0, #8
   20714:	bne	2073c <luaL_where@@Base+0x638>
   20718:	mov	r0, r8
   2071c:	ldr	r2, [r7, #244]	; 0xf4
   20720:	mov	r1, #3
   20724:	bl	14a44 <_start@@Base+0x1694>
   20728:	subs	r8, r0, #0
   2072c:	beq	20784 <luaL_where@@Base+0x680>
   20730:	ldr	r3, [r8, #4]
   20734:	cmn	r3, #5
   20738:	beq	20a08 <luaL_where@@Base+0x904>
   2073c:	ldr	r6, [r5, #24]
   20740:	cmp	r6, #0
   20744:	movne	r8, #0
   20748:	bne	20790 <luaL_where@@Base+0x68c>
   2074c:	ldr	r4, [r5, #28]
   20750:	cmp	r4, #0
   20754:	movne	sl, r6
   20758:	movne	r8, sl
   2075c:	bne	207f0 <luaL_where@@Base+0x6ec>
   20760:	mov	r0, #32
   20764:	mov	r4, #0
   20768:	b	208a8 <luaL_where@@Base+0x7a4>
   2076c:	mov	r1, r8
   20770:	bl	17498 <_start@@Base+0x40e8>
   20774:	ldrb	r0, [r8, #6]
   20778:	ands	r4, r0, #8
   2077c:	bne	2073c <luaL_where@@Base+0x638>
   20780:	b	20718 <luaL_where@@Base+0x614>
   20784:	ldr	r6, [r5, #24]
   20788:	cmp	r6, #0
   2078c:	beq	2074c <luaL_where@@Base+0x648>
   20790:	mov	r4, #0
   20794:	b	207a4 <luaL_where@@Base+0x6a0>
   20798:	add	r4, r4, #1
   2079c:	cmp	r4, r6
   207a0:	bcs	207e0 <luaL_where@@Base+0x6dc>
   207a4:	ldr	r2, [r5, #8]
   207a8:	add	r3, r2, r4, lsl #3
   207ac:	ldr	r3, [r3, #4]
   207b0:	add	r3, r3, #4
   207b4:	cmn	r3, #10
   207b8:	bls	20798 <luaL_where@@Base+0x694>
   207bc:	ldr	r1, [r2, r4, lsl #3]
   207c0:	ldrb	r3, [r1, #4]
   207c4:	tst	r3, #3
   207c8:	beq	20798 <luaL_where@@Base+0x694>
   207cc:	mov	r0, r7
   207d0:	add	r4, r4, #1
   207d4:	bl	17498 <_start@@Base+0x40e8>
   207d8:	cmp	r4, r6
   207dc:	bcc	207a4 <luaL_where@@Base+0x6a0>
   207e0:	ldr	r4, [r5, #28]
   207e4:	cmp	r4, #0
   207e8:	movne	sl, #0
   207ec:	beq	208b0 <luaL_where@@Base+0x7ac>
   207f0:	ldr	r9, [r5, #20]
   207f4:	add	r4, r4, r4, lsl #1
   207f8:	add	r6, r9, #24
   207fc:	add	r4, r6, r4, lsl #3
   20800:	and	fp, r8, #8
   20804:	b	2080c <luaL_where@@Base+0x708>
   20808:	add	r6, r6, #24
   2080c:	ldr	r3, [r9, #4]
   20810:	cmn	r3, #1
   20814:	beq	20868 <luaL_where@@Base+0x764>
   20818:	cmp	fp, #0
   2081c:	bne	20840 <luaL_where@@Base+0x73c>
   20820:	ldr	r3, [r9, #12]
   20824:	add	r3, r3, #4
   20828:	cmn	r3, #10
   2082c:	bls	20840 <luaL_where@@Base+0x73c>
   20830:	ldr	r1, [r9, #8]
   20834:	ldrb	r3, [r1, #4]
   20838:	tst	r3, #3
   2083c:	bne	208e8 <luaL_where@@Base+0x7e4>
   20840:	cmp	sl, #0
   20844:	bne	20868 <luaL_where@@Base+0x764>
   20848:	ldr	r3, [r9, #4]
   2084c:	add	r3, r3, #4
   20850:	cmn	r3, #10
   20854:	bls	20868 <luaL_where@@Base+0x764>
   20858:	ldr	r1, [r9]
   2085c:	ldrb	r3, [r1, #4]
   20860:	tst	r3, #3
   20864:	bne	208dc <luaL_where@@Base+0x7d8>
   20868:	cmp	r6, r4
   2086c:	mov	r9, r6
   20870:	bne	20808 <luaL_where@@Base+0x704>
   20874:	ldr	r0, [r5, #24]
   20878:	cmp	r8, #0
   2087c:	add	r0, r0, #4
   20880:	ldr	r4, [r5, #28]
   20884:	lsl	r0, r0, #3
   20888:	ble	20898 <luaL_where@@Base+0x794>
   2088c:	ldrb	r3, [r5, #4]
   20890:	bic	r3, r3, #4
   20894:	strb	r3, [r5, #4]
   20898:	cmp	r4, #0
   2089c:	addne	r4, r4, #1
   208a0:	addne	r4, r4, r4, lsl #1
   208a4:	lslne	r4, r4, #3
   208a8:	add	r0, r4, r0
   208ac:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   208b0:	ldr	r0, [r5, #24]
   208b4:	cmp	r8, #0
   208b8:	add	r0, r0, #4
   208bc:	lsl	r0, r0, #3
   208c0:	ble	208a8 <luaL_where@@Base+0x7a4>
   208c4:	ldrb	r3, [r5, #4]
   208c8:	mov	r4, #0
   208cc:	add	r0, r4, r0
   208d0:	bic	r3, r3, #4
   208d4:	strb	r3, [r5, #4]
   208d8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   208dc:	mov	r0, r7
   208e0:	bl	17498 <_start@@Base+0x40e8>
   208e4:	b	20868 <luaL_where@@Base+0x764>
   208e8:	mov	r0, r7
   208ec:	bl	17498 <_start@@Base+0x40e8>
   208f0:	b	20840 <luaL_where@@Base+0x73c>
   208f4:	cmp	r3, #8
   208f8:	bne	20ac0 <luaL_where@@Base+0x9bc>
   208fc:	ldr	r1, [r5, #8]
   20900:	mov	r4, r5
   20904:	ldrb	r3, [r1, #4]
   20908:	tst	r3, #3
   2090c:	bne	20a64 <luaL_where@@Base+0x960>
   20910:	ldrb	r3, [r5, #6]
   20914:	cmp	r3, #0
   20918:	bne	2097c <luaL_where@@Base+0x878>
   2091c:	ldr	r1, [r5, #16]
   20920:	sub	r1, r1, #64	; 0x40
   20924:	ldrb	r3, [r1, #4]
   20928:	tst	r3, #3
   2092c:	bne	209d8 <luaL_where@@Base+0x8d4>
   20930:	ldrb	r3, [r5, #7]
   20934:	cmp	r3, #0
   20938:	moveq	r0, r3
   2093c:	beq	209fc <luaL_where@@Base+0x8f8>
   20940:	add	r6, r5, #16
   20944:	mov	r4, #0
   20948:	b	20958 <luaL_where@@Base+0x854>
   2094c:	cmp	r4, r3
   20950:	mov	r0, r3
   20954:	bcs	209f0 <luaL_where@@Base+0x8ec>
   20958:	ldr	r1, [r6, #4]!
   2095c:	add	r4, r4, #1
   20960:	ldrb	r2, [r1, #4]
   20964:	tst	r2, #3
   20968:	beq	2094c <luaL_where@@Base+0x848>
   2096c:	mov	r0, r7
   20970:	bl	17498 <_start@@Base+0x40e8>
   20974:	ldrb	r3, [r5, #7]
   20978:	b	2094c <luaL_where@@Base+0x848>
   2097c:	ldrb	r2, [r5, #7]
   20980:	cmp	r2, #0
   20984:	moveq	r0, r2
   20988:	beq	20a58 <luaL_where@@Base+0x954>
   2098c:	mov	r6, #0
   20990:	b	209a4 <luaL_where@@Base+0x8a0>
   20994:	cmp	r6, r2
   20998:	add	r4, r4, #8
   2099c:	mov	r0, r2
   209a0:	bcs	209f0 <luaL_where@@Base+0x8ec>
   209a4:	ldr	r3, [r4, #28]
   209a8:	add	r6, r6, #1
   209ac:	add	r3, r3, #4
   209b0:	cmn	r3, #10
   209b4:	bls	20994 <luaL_where@@Base+0x890>
   209b8:	ldr	r1, [r4, #24]
   209bc:	ldrb	r3, [r1, #4]
   209c0:	tst	r3, #3
   209c4:	beq	20994 <luaL_where@@Base+0x890>
   209c8:	mov	r0, r7
   209cc:	bl	17498 <_start@@Base+0x40e8>
   209d0:	ldrb	r2, [r5, #7]
   209d4:	b	20994 <luaL_where@@Base+0x890>
   209d8:	mov	r0, r7
   209dc:	bl	17498 <_start@@Base+0x40e8>
   209e0:	ldrb	r3, [r5, #7]
   209e4:	cmp	r3, #0
   209e8:	moveq	r0, r3
   209ec:	bne	20940 <luaL_where@@Base+0x83c>
   209f0:	ldrb	r3, [r5, #6]
   209f4:	cmp	r3, #0
   209f8:	bne	20a58 <luaL_where@@Base+0x954>
   209fc:	add	r0, r0, #5
   20a00:	lsl	r0, r0, #2
   20a04:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20a08:	ldr	r3, [r8]
   20a0c:	mov	r8, r4
   20a10:	add	r3, r3, #16
   20a14:	ldrb	sl, [r3], #1
   20a18:	cmp	sl, #0
   20a1c:	beq	20a40 <luaL_where@@Base+0x93c>
   20a20:	cmp	sl, #107	; 0x6b
   20a24:	orreq	r8, r8, #8
   20a28:	beq	20a14 <luaL_where@@Base+0x910>
   20a2c:	cmp	sl, #118	; 0x76
   20a30:	ldrb	sl, [r3], #1
   20a34:	orreq	r8, r8, #16
   20a38:	cmp	sl, #0
   20a3c:	bne	20a20 <luaL_where@@Base+0x91c>
   20a40:	cmp	r8, #0
   20a44:	bne	20a6c <luaL_where@@Base+0x968>
   20a48:	ldr	r6, [r5, #24]
   20a4c:	cmp	r6, #0
   20a50:	bne	20790 <luaL_where@@Base+0x68c>
   20a54:	b	207e0 <luaL_where@@Base+0x6dc>
   20a58:	add	r0, r0, #3
   20a5c:	lsl	r0, r0, #3
   20a60:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20a64:	bl	17498 <_start@@Base+0x40e8>
   20a68:	b	20910 <luaL_where@@Base+0x80c>
   20a6c:	ldr	r3, [r7, #228]	; 0xe4
   20a70:	cmp	r3, #0
   20a74:	beq	20a84 <luaL_where@@Base+0x980>
   20a78:	ldr	r3, [r3, #20]
   20a7c:	cmp	r5, r3
   20a80:	beq	20d48 <luaL_where@@Base+0xc44>
   20a84:	ldrb	r3, [r5, #4]
   20a88:	cmp	r8, #24
   20a8c:	bic	r3, r3, #24
   20a90:	orr	r3, r3, r8
   20a94:	uxtb	r3, r3
   20a98:	strb	r3, [r5, #4]
   20a9c:	ldr	r2, [r7, #52]	; 0x34
   20aa0:	str	r2, [r5, #12]
   20aa4:	str	r5, [r7, #52]	; 0x34
   20aa8:	bne	20d6c <luaL_where@@Base+0xc68>
   20aac:	ldr	r0, [r5, #24]
   20ab0:	ldr	r4, [r5, #28]
   20ab4:	add	r0, r0, #4
   20ab8:	lsl	r0, r0, #3
   20abc:	b	20890 <luaL_where@@Base+0x78c>
   20ac0:	cmp	r3, #7
   20ac4:	bne	20b58 <luaL_where@@Base+0xa54>
   20ac8:	ldr	r2, [r5, #40]	; 0x28
   20acc:	ldrb	r3, [r2, #4]
   20ad0:	bic	r3, r3, #3
   20ad4:	strb	r3, [r2, #4]
   20ad8:	ldr	r4, [r5, #24]
   20adc:	cmp	r4, #0
   20ae0:	rsb	r6, r4, #0
   20ae4:	ble	20b20 <luaL_where@@Base+0xa1c>
   20ae8:	rsb	r4, r4, r4, lsl #30
   20aec:	lsl	r4, r4, #2
   20af0:	b	20afc <luaL_where@@Base+0x9f8>
   20af4:	adds	r6, r6, #1
   20af8:	beq	20b20 <luaL_where@@Base+0xa1c>
   20afc:	ldr	r3, [r5, #16]
   20b00:	ldr	r1, [r3, r4]
   20b04:	add	r4, r4, #4
   20b08:	ldrb	r3, [r1, #4]
   20b0c:	tst	r3, #3
   20b10:	beq	20af4 <luaL_where@@Base+0x9f0>
   20b14:	mov	r0, r7
   20b18:	bl	17498 <_start@@Base+0x40e8>
   20b1c:	b	20af4 <luaL_where@@Base+0x9f0>
   20b20:	ldrh	r3, [r5, #38]	; 0x26
   20b24:	cmp	r3, #0
   20b28:	beq	20b50 <luaL_where@@Base+0xa4c>
   20b2c:	ldr	r2, [r7, #656]	; 0x290
   20b30:	ldr	r3, [r2, r3, lsl #2]
   20b34:	ldrb	r2, [r3, #4]
   20b38:	tst	r2, #3
   20b3c:	bicne	r2, r2, #3
   20b40:	ldrne	r1, [r7, #44]	; 0x2c
   20b44:	strbne	r2, [r3, #4]
   20b48:	strne	r1, [r3, #12]
   20b4c:	strne	r3, [r7, #44]	; 0x2c
   20b50:	ldr	r0, [r5, #32]
   20b54:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20b58:	cmp	r3, #6
   20b5c:	bne	20d0c <luaL_where@@Base+0xc08>
   20b60:	ldr	r4, [r5, #28]
   20b64:	ldr	r6, [r5, #20]
   20b68:	ldr	r3, [r0, #48]	; 0x30
   20b6c:	add	r4, r4, #8
   20b70:	bic	r2, r2, #4
   20b74:	cmp	r6, r4
   20b78:	str	r3, [r5, #12]
   20b7c:	str	r5, [r0, #48]	; 0x30
   20b80:	strb	r2, [r5, #4]
   20b84:	bls	20bbc <luaL_where@@Base+0xab8>
   20b88:	ldr	r3, [r4, #4]
   20b8c:	add	r3, r3, #4
   20b90:	cmn	r3, #10
   20b94:	bls	20bb0 <luaL_where@@Base+0xaac>
   20b98:	ldr	r1, [r4]
   20b9c:	ldrb	r3, [r1, #4]
   20ba0:	tst	r3, #3
   20ba4:	beq	20bb0 <luaL_where@@Base+0xaac>
   20ba8:	mov	r0, r7
   20bac:	bl	17498 <_start@@Base+0x40e8>
   20bb0:	add	r4, r4, #8
   20bb4:	cmp	r6, r4
   20bb8:	bhi	20b88 <luaL_where@@Base+0xa84>
   20bbc:	ldrb	r3, [r7, #29]
   20bc0:	cmp	r3, #2
   20bc4:	beq	20cb0 <luaL_where@@Base+0xbac>
   20bc8:	ldr	r1, [r5, #36]	; 0x24
   20bcc:	ldrb	r3, [r1, #4]
   20bd0:	tst	r3, #3
   20bd4:	beq	20be0 <luaL_where@@Base+0xadc>
   20bd8:	mov	r0, r7
   20bdc:	bl	17498 <_start@@Base+0x40e8>
   20be0:	ldr	r4, [r5, #16]
   20be4:	ldr	r8, [r5, #28]
   20be8:	sub	r4, r4, #8
   20bec:	ldr	r6, [r5, #20]
   20bf0:	cmp	r8, r4
   20bf4:	sub	r6, r6, #8
   20bf8:	bcc	20c24 <luaL_where@@Base+0xb20>
   20bfc:	b	20c60 <luaL_where@@Base+0xb5c>
   20c00:	ldr	r3, [r4, #4]
   20c04:	tst	r3, #3
   20c08:	bic	r2, r3, #7
   20c0c:	ldrbeq	r3, [r3, #-3]
   20c10:	subne	r4, r4, r2
   20c14:	addeq	r3, r3, #1
   20c18:	subeq	r4, r4, r3, lsl #3
   20c1c:	cmp	r8, r4
   20c20:	bcs	20c60 <luaL_where@@Base+0xb5c>
   20c24:	ldr	r1, [r4]
   20c28:	mov	r3, r4
   20c2c:	ldrb	r2, [r1, #6]
   20c30:	cmp	r2, #0
   20c34:	ldrb	r2, [r1, #4]
   20c38:	ldreq	r3, [r1, #16]
   20c3c:	ldrbeq	r3, [r3, #-57]	; 0xffffffc7
   20c40:	addeq	r3, r4, r3, lsl #3
   20c44:	cmp	r6, r3
   20c48:	movcc	r6, r3
   20c4c:	tst	r2, #3
   20c50:	beq	20c00 <luaL_where@@Base+0xafc>
   20c54:	mov	r0, r7
   20c58:	bl	17498 <_start@@Base+0x40e8>
   20c5c:	b	20c00 <luaL_where@@Base+0xafc>
   20c60:	ldr	r3, [r5, #24]
   20c64:	add	r6, r6, #8
   20c68:	cmp	r6, r3
   20c6c:	rsbls	r3, r8, r6
   20c70:	rsbhi	r3, r8, r3
   20c74:	ldr	r1, [r5, #44]	; 0x2c
   20c78:	asr	r3, r3, #3
   20c7c:	ldr	r2, [pc, #268]	; 20d90 <luaL_where@@Base+0xc8c>
   20c80:	cmp	r1, r3, lsl #2
   20c84:	movhi	r3, #1
   20c88:	movls	r3, #0
   20c8c:	sub	r0, r1, #91	; 0x5b
   20c90:	cmp	r0, r2
   20c94:	movhi	r3, #0
   20c98:	andls	r3, r3, #1
   20c9c:	cmp	r3, #0
   20ca0:	bne	20cdc <luaL_where@@Base+0xbd8>
   20ca4:	add	r1, r1, #6
   20ca8:	lsl	r0, r1, #3
   20cac:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20cb0:	ldr	r2, [r5, #44]	; 0x2c
   20cb4:	ldr	r3, [r5, #28]
   20cb8:	add	r3, r3, r2, lsl #3
   20cbc:	cmp	r4, r3
   20cc0:	bcs	20bc8 <luaL_where@@Base+0xac4>
   20cc4:	mvn	r2, #0
   20cc8:	str	r2, [r4, #4]
   20ccc:	add	r4, r4, #8
   20cd0:	cmp	r3, r4
   20cd4:	bhi	20cc8 <luaL_where@@Base+0xbc4>
   20cd8:	b	20bc8 <luaL_where@@Base+0xac4>
   20cdc:	ldr	r3, [r5, #8]
   20ce0:	ldr	r2, [r3, #224]	; 0xe0
   20ce4:	cmp	r2, #0
   20ce8:	beq	20cf8 <luaL_where@@Base+0xbf4>
   20cec:	ldr	r3, [r3, #220]	; 0xdc
   20cf0:	cmp	r5, r3
   20cf4:	beq	20ca4 <luaL_where@@Base+0xba0>
   20cf8:	lsr	r1, r1, #1
   20cfc:	mov	r0, r5
   20d00:	bl	20604 <luaL_where@@Base+0x500>
   20d04:	ldr	r1, [r5, #44]	; 0x2c
   20d08:	b	20ca4 <luaL_where@@Base+0xba0>
   20d0c:	ldrh	r3, [r5, #64]	; 0x40
   20d10:	cmp	r3, #0
   20d14:	beq	20d20 <luaL_where@@Base+0xc1c>
   20d18:	mov	r1, r5
   20d1c:	bl	1d1a0 <_start@@Base+0x9df0>
   20d20:	ldr	r3, [r5, #8]
   20d24:	ldrh	r1, [r5, #24]
   20d28:	ldr	r2, [r5, #20]
   20d2c:	add	r3, r3, #10
   20d30:	add	r3, r3, r1
   20d34:	ldrh	r0, [r5, #26]
   20d38:	sub	r3, r3, r2
   20d3c:	add	r0, r0, r3, lsl #1
   20d40:	lsl	r0, r0, #2
   20d44:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20d48:	ldr	r6, [r5, #24]
   20d4c:	cmp	r6, #0
   20d50:	mvnne	r8, #16
   20d54:	bne	20790 <luaL_where@@Base+0x68c>
   20d58:	ldr	r4, [r5, #28]
   20d5c:	cmp	r4, #0
   20d60:	mvnne	r8, #16
   20d64:	bne	207f0 <luaL_where@@Base+0x6ec>
   20d68:	b	20760 <luaL_where@@Base+0x65c>
   20d6c:	ands	sl, r8, #16
   20d70:	beq	20a48 <luaL_where@@Base+0x944>
   20d74:	ldr	r4, [r5, #28]
   20d78:	cmp	r4, #0
   20d7c:	bne	207f0 <luaL_where@@Base+0x6ec>
   20d80:	ldr	r0, [r5, #24]
   20d84:	add	r0, r0, #4
   20d88:	lsl	r0, r0, #3
   20d8c:	b	208c4 <luaL_where@@Base+0x7c0>
   20d90:	andeq	pc, r0, r7, lsl #31
   20d94:	push	{r4, r5, r6, lr}
   20d98:	mov	r4, r0
   20d9c:	mov	r5, r1
   20da0:	bl	1f628 <lua_atpanic@@Base+0x458>
   20da4:	ldr	r3, [r4, #20]
   20da8:	sub	r2, r3, #8
   20dac:	cmp	r5, r2
   20db0:	ldrdcc	r2, [r3, #-8]
   20db4:	addcc	r1, r5, #8
   20db8:	strdcc	r2, [r5]
   20dbc:	strcc	r1, [r4, #20]
   20dc0:	ldr	r3, [pc, #48]	; 20df8 <luaL_where@@Base+0xcf4>
   20dc4:	ldr	r2, [r4, #44]	; 0x2c
   20dc8:	cmp	r2, r3
   20dcc:	popls	{r4, r5, r6, pc}
   20dd0:	ldr	r3, [r4, #20]
   20dd4:	ldr	r1, [r4, #28]
   20dd8:	ldr	r2, [pc, #28]	; 20dfc <luaL_where@@Base+0xcf8>
   20ddc:	sub	r3, r3, r1
   20de0:	cmp	r3, r2
   20de4:	popgt	{r4, r5, r6, pc}
   20de8:	mov	r0, r4
   20dec:	ldr	r1, [pc, #12]	; 20e00 <luaL_where@@Base+0xcfc>
   20df0:	pop	{r4, r5, r6, lr}
   20df4:	b	20604 <luaL_where@@Base+0x500>
   20df8:	andeq	pc, r0, r2, ror #31
   20dfc:	ldrdeq	pc, [r7], -r0
   20e00:	ldrdeq	pc, [r0], -ip
   20e04:	push	{r4, r5, r6, lr}
   20e08:	mov	r5, r0
   20e0c:	ldr	r4, [r0, #40]	; 0x28
   20e10:	ldr	r3, [r0, #16]
   20e14:	cmp	r4, #0
   20e18:	beq	20ee8 <luaL_where@@Base+0xde4>
   20e1c:	ldr	lr, [r0, #28]
   20e20:	sub	r3, r3, #8
   20e24:	bic	r6, r4, #3
   20e28:	ldr	r2, [r6, #20]
   20e2c:	cmp	r2, #0
   20e30:	blt	20e94 <luaL_where@@Base+0xd90>
   20e34:	cmp	r3, lr
   20e38:	bls	20ee8 <luaL_where@@Base+0xde4>
   20e3c:	ldr	r2, [r3, #4]
   20e40:	and	ip, r2, #7
   20e44:	sub	r0, ip, #1
   20e48:	cmp	r0, #6
   20e4c:	ldrls	pc, [pc, r0, lsl #2]
   20e50:	b	20f30 <luaL_where@@Base+0xe2c>
   20e54:	ldrdeq	r0, [r2], -r4
   20e58:	andeq	r0, r2, r8, asr #29
   20e5c:	andeq	r0, r2, r0, lsl #29
   20e60:	andeq	r0, r2, r0, lsr pc
   20e64:	andeq	r0, r2, r4, asr #30
   20e68:	andeq	r0, r2, r0, ror lr
   20e6c:	andeq	r0, r2, r0, ror lr
   20e70:	cmp	r1, #0
   20e74:	beq	20fe8 <luaL_where@@Base+0xee4>
   20e78:	cmp	r1, #1
   20e7c:	bne	20fb4 <luaL_where@@Base+0xeb0>
   20e80:	bic	r2, r2, #7
   20e84:	sub	r3, r3, r2
   20e88:	ldr	r2, [r6, #20]
   20e8c:	cmp	r2, #0
   20e90:	bge	20e34 <luaL_where@@Base+0xd30>
   20e94:	sub	r2, lr, r2
   20e98:	cmp	r2, r3
   20e9c:	bls	20e34 <luaL_where@@Base+0xd30>
   20ea0:	cmp	r1, #0
   20ea4:	beq	20f54 <luaL_where@@Base+0xe50>
   20ea8:	add	r3, r3, #8
   20eac:	str	r3, [r5, #16]
   20eb0:	ldr	r3, [r4, #16]
   20eb4:	mov	r1, r2
   20eb8:	str	r3, [r5, #40]	; 0x28
   20ebc:	mov	r0, r5
   20ec0:	bl	20d94 <luaL_where@@Base+0xc90>
   20ec4:	b	20f54 <luaL_where@@Base+0xe50>
   20ec8:	ldr	r0, [r3, #-8]
   20ecc:	cmp	r0, #1
   20ed0:	bne	20e80 <luaL_where@@Base+0xd7c>
   20ed4:	ldr	r4, [r4, #16]
   20ed8:	bic	r2, r2, #7
   20edc:	cmp	r4, #0
   20ee0:	sub	r3, r3, r2
   20ee4:	bne	20e24 <luaL_where@@Base+0xd20>
   20ee8:	cmp	r1, #0
   20eec:	moveq	r4, r5
   20ef0:	beq	20f54 <luaL_where@@Base+0xe50>
   20ef4:	ldr	r1, [r5, #28]
   20ef8:	mov	r3, #0
   20efc:	add	r1, r1, #8
   20f00:	str	r3, [r5, #40]	; 0x28
   20f04:	str	r1, [r5, #16]
   20f08:	mov	r0, r5
   20f0c:	bl	20d94 <luaL_where@@Base+0xc90>
   20f10:	ldr	r3, [r5, #8]
   20f14:	ldr	r3, [r3, #208]	; 0xd0
   20f18:	cmp	r3, #0
   20f1c:	beq	20f28 <luaL_where@@Base+0xe24>
   20f20:	mov	r0, r5
   20f24:	blx	r3
   20f28:	mov	r0, #1
   20f2c:	bl	12e44 <exit@plt>
   20f30:	ldr	r2, [r3, #4]
   20f34:	ldrb	r2, [r2, #-3]
   20f38:	add	r2, r2, #1
   20f3c:	sub	r3, r3, r2, lsl #3
   20f40:	b	20e28 <luaL_where@@Base+0xd24>
   20f44:	tst	r4, #1
   20f48:	bne	20f5c <luaL_where@@Base+0xe58>
   20f4c:	cmp	r1, #0
   20f50:	bne	20f88 <luaL_where@@Base+0xe84>
   20f54:	mov	r0, r4
   20f58:	pop	{r4, r5, r6, pc}
   20f5c:	cmp	r1, #0
   20f60:	beq	20f54 <luaL_where@@Base+0xe50>
   20f64:	ldr	r2, [r5, #8]
   20f68:	mov	r0, #0
   20f6c:	ldrb	r3, [r2, #113]	; 0x71
   20f70:	bic	r3, r3, #16
   20f74:	strb	r3, [r2, #113]	; 0x71
   20f78:	str	r0, [r5, #40]	; 0x28
   20f7c:	strb	r1, [r5, #7]
   20f80:	mov	r0, r4
   20f84:	pop	{r4, r5, r6, pc}
   20f88:	bic	r2, r2, #7
   20f8c:	rsb	r2, r2, #8
   20f90:	add	r2, r3, r2
   20f94:	str	r2, [r5, #16]
   20f98:	ldr	r2, [r4, #16]
   20f9c:	mov	r0, r5
   20fa0:	mov	r1, r3
   20fa4:	str	r2, [r5, #40]	; 0x28
   20fa8:	bl	20d94 <luaL_where@@Base+0xc90>
   20fac:	mov	r0, r4
   20fb0:	pop	{r4, r5, r6, pc}
   20fb4:	cmp	ip, #6
   20fb8:	mov	r0, r5
   20fbc:	ldreq	r1, [r5, #8]
   20fc0:	ldrbeq	r2, [r1, #113]	; 0x71
   20fc4:	biceq	r2, r2, #16
   20fc8:	strbeq	r2, [r1, #113]	; 0x71
   20fcc:	ldreq	r2, [r3, #4]
   20fd0:	str	r4, [r5, #40]	; 0x28
   20fd4:	bic	r1, r2, #7
   20fd8:	rsb	r1, r1, #8
   20fdc:	add	r1, r3, r1
   20fe0:	str	r1, [r5, #16]
   20fe4:	bl	20d94 <luaL_where@@Base+0xc90>
   20fe8:	orr	r4, r4, #2
   20fec:	b	20f54 <luaL_where@@Base+0xe50>
   20ff0:	ldr	r3, [r0, #8]
   20ff4:	push	{r4, lr}
   20ff8:	mov	lr, #0
   20ffc:	ldr	r2, [r3, #552]	; 0x228
   21000:	str	lr, [r3, #224]	; 0xe0
   21004:	bic	r2, r2, #16
   21008:	str	r2, [r3, #552]	; 0x228
   2100c:	strb	lr, [r0, #7]
   21010:	mov	r4, r1
   21014:	bl	20e04 <luaL_where@@Base+0xd00>
   21018:	tst	r0, #2
   2101c:	beq	21028 <luaL_where@@Base+0xf24>
   21020:	bic	r0, r0, #3
   21024:	bl	6bb3c <luaL_openlibs@@Base+0x237c>
   21028:	mov	r1, r4
   2102c:	bic	r0, r0, #3
   21030:	bl	6bb20 <luaL_openlibs@@Base+0x2360>
   21034:	push	{r4, r5, r6, r7, r8, lr}
   21038:	mov	r4, r0
   2103c:	ldrb	r5, [r0, #113]	; 0x71
   21040:	mov	ip, r3
   21044:	ldr	r0, [r0, #552]	; 0x228
   21048:	orr	r3, r5, #80	; 0x50
   2104c:	strb	r3, [r4, #113]	; 0x71
   21050:	mov	r6, r1
   21054:	ldrd	r2, [r2]
   21058:	ldr	r1, [r1, #20]
   2105c:	ldr	lr, [pc, #104]	; 210cc <luaL_where@@Base+0xfc8>
   21060:	bic	r0, r0, #16
   21064:	ldr	r7, [r4, #24]
   21068:	str	r0, [r4, #552]	; 0x228
   2106c:	str	lr, [r4, #24]
   21070:	strd	r2, [r1]
   21074:	ldrb	r2, [ip, #5]
   21078:	add	r0, r1, #16
   2107c:	str	ip, [r1, #8]
   21080:	mvn	r3, r2
   21084:	str	r3, [r1, #12]
   21088:	mov	r2, #1
   2108c:	str	r0, [r6, #20]
   21090:	mvn	r3, #0
   21094:	add	r1, r1, #8
   21098:	mov	r0, r6
   2109c:	bl	6bc7c <luaL_openlibs@@Base+0x24bc>
   210a0:	ldrb	r3, [r4, #113]	; 0x71
   210a4:	bic	r5, r5, #15
   210a8:	str	r7, [r4, #24]
   210ac:	and	r3, r3, #15
   210b0:	orr	r3, r3, r5
   210b4:	strb	r3, [r4, #113]	; 0x71
   210b8:	cmp	r0, #0
   210bc:	popeq	{r4, r5, r6, r7, r8, pc}
   210c0:	mov	r1, r0
   210c4:	mov	r0, r6
   210c8:	bl	20ff0 <luaL_where@@Base+0xeec>
   210cc:	svcvc	0x00ffff00
   210d0:	ldr	r3, [r0, #20]
   210d4:	push	{r4, lr}
   210d8:	mvn	lr, #13
   210dc:	mvn	r5, #0
   210e0:	add	r4, r3, #8
   210e4:	str	r5, [r1]
   210e8:	str	r4, [r0, #20]
   210ec:	mov	r1, #2
   210f0:	stm	r3, {r2, lr}
   210f4:	bl	20ff0 <luaL_where@@Base+0xeec>
   210f8:	ldr	r3, [r1, #4]
   210fc:	push	{r4, r5, r6, lr}
   21100:	cmn	r3, #14
   21104:	mov	r4, r1
   21108:	bls	21144 <luaL_where@@Base+0x1040>
   2110c:	cmn	r3, #5
   21110:	mov	r5, r0
   21114:	bne	21164 <luaL_where@@Base+0x1060>
   21118:	ldr	r0, [r1]
   2111c:	mov	r2, #1
   21120:	add	r0, r0, #16
   21124:	bl	189f0 <_start@@Base+0x5640>
   21128:	cmp	r0, #3
   2112c:	mvneq	r3, #13
   21130:	streq	r3, [r4, #4]
   21134:	beq	2115c <luaL_where@@Base+0x1058>
   21138:	cmp	r0, #0
   2113c:	beq	21164 <luaL_where@@Base+0x1060>
   21140:	ldr	r3, [r4, #4]
   21144:	cmn	r3, #14
   21148:	beq	2115c <luaL_where@@Base+0x1058>
   2114c:	vldr	d7, [r4]
   21150:	vcvt.s32.f64	s15, d7
   21154:	vmov	r0, s15
   21158:	pop	{r4, r5, r6, pc}
   2115c:	ldr	r0, [r4]
   21160:	pop	{r4, r5, r6, pc}
   21164:	mov	r0, r5
   21168:	bl	130b0 <pclose@plt+0x14>
   2116c:	ldr	r3, [r0, #92]	; 0x5c
   21170:	push	{r4, lr}
   21174:	ldrb	r2, [r3, #37]	; 0x25
   21178:	ldrb	ip, [r3, #6]
   2117c:	tst	r2, #8
   21180:	bne	211c8 <luaL_where@@Base+0x10c4>
   21184:	ldrb	r3, [r3, #7]
   21188:	ldr	r2, [r0, #108]	; 0x6c
   2118c:	add	r3, r3, r2
   21190:	cmp	r3, #249	; 0xf9
   21194:	bhi	211dc <luaL_where@@Base+0x10d8>
   21198:	ldr	r3, [r0, #104]	; 0x68
   2119c:	cmp	ip, r3
   211a0:	bls	211c0 <luaL_where@@Base+0x10bc>
   211a4:	ldr	r2, [r0, #96]	; 0x60
   211a8:	ldr	r1, [pc, #64]	; 211f0 <luaL_where@@Base+0x10ec>
   211ac:	add	r3, r2, r3, lsl #2
   211b0:	add	r2, r2, ip, lsl #2
   211b4:	str	r1, [r3], #4
   211b8:	cmp	r3, r2
   211bc:	bne	211b4 <luaL_where@@Base+0x10b0>
   211c0:	str	ip, [r0, #104]	; 0x68
   211c4:	pop	{r4, pc}
   211c8:	add	r1, r0, #2336	; 0x920
   211cc:	add	r1, r1, #12
   211d0:	ldr	r0, [r0, #80]	; 0x50
   211d4:	mov	r2, #12
   211d8:	bl	210d0 <luaL_where@@Base+0xfcc>
   211dc:	add	r1, r0, #2336	; 0x920
   211e0:	add	r1, r1, #12
   211e4:	ldr	r0, [r0, #80]	; 0x50
   211e8:	mov	r2, #3
   211ec:	bl	210d0 <luaL_where@@Base+0xfcc>
   211f0:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   211f4:	ldrb	r3, [r2]
   211f8:	cmp	r3, #0
   211fc:	bne	21260 <luaL_where@@Base+0x115c>
   21200:	ldr	ip, [pc, #120]	; 21280 <luaL_where@@Base+0x117c>
   21204:	and	r1, r1, #31
   21208:	ldr	r3, [r0, #168]	; 0xa8
   2120c:	lsr	r1, ip, r1
   21210:	ands	r1, r1, #1
   21214:	addne	ip, r3, #2
   21218:	push	{r4, lr}
   2121c:	strne	ip, [r0, #168]	; 0xa8
   21220:	beq	21238 <luaL_where@@Base+0x1134>
   21224:	cmp	ip, #256	; 0x100
   21228:	bgt	21268 <luaL_where@@Base+0x1164>
   2122c:	strb	r3, [r2]
   21230:	lsl	r0, r3, #2
   21234:	pop	{r4, pc}
   21238:	ldr	lr, [r0, #172]	; 0xac
   2123c:	cmp	lr, #0
   21240:	addeq	r1, r3, #1
   21244:	addeq	ip, r3, #2
   21248:	movne	ip, r3
   2124c:	strne	r1, [r0, #172]	; 0xac
   21250:	movne	r3, lr
   21254:	streq	r1, [r0, #172]	; 0xac
   21258:	streq	ip, [r0, #168]	; 0xa8
   2125c:	b	21224 <luaL_where@@Base+0x1120>
   21260:	lsl	r0, r3, #2
   21264:	bx	lr
   21268:	ldr	r3, [r0, #140]	; 0x8c
   2126c:	mov	r2, #30
   21270:	add	r1, r3, #2336	; 0x920
   21274:	add	r1, r1, #12
   21278:	ldr	r0, [r3, #80]	; 0x50
   2127c:	bl	210d0 <luaL_where@@Base+0xfcc>
   21280:	rsbeq	r4, r0, r0
   21284:	ldr	r3, [pc, #152]	; 21324 <luaL_where@@Base+0x1220>
   21288:	cmp	r1, r3
   2128c:	bls	212f0 <luaL_where@@Base+0x11ec>
   21290:	ldr	r3, [r0, #136]	; 0x88
   21294:	push	{r4, r5, r6, lr}
   21298:	add	r5, r3, r1, lsl #3
   2129c:	mov	r4, r0
   212a0:	add	r2, r5, #7
   212a4:	ldrb	r1, [r5, #4]
   212a8:	sub	sp, sp, #8
   212ac:	bl	211f4 <luaL_where@@Base+0x10f0>
   212b0:	ldrb	r6, [r5, #6]
   212b4:	ldr	ip, [r4, #152]	; 0x98
   212b8:	mov	r3, #1
   212bc:	ldr	r2, [r4, #144]	; 0x90
   212c0:	mvn	r1, r6, lsl #25
   212c4:	lsl	r3, r3, r6
   212c8:	lsr	ip, ip, r6
   212cc:	mvn	r1, r1, lsr #25
   212d0:	orr	r2, r2, r3
   212d4:	tst	ip, #1
   212d8:	strb	r1, [r5, #6]
   212dc:	str	r2, [r4, #144]	; 0x90
   212e0:	beq	212f4 <luaL_where@@Base+0x11f0>
   212e4:	mov	r0, r6
   212e8:	add	sp, sp, #8
   212ec:	pop	{r4, r5, r6, pc}
   212f0:	b	21694 <luaL_where@@Base+0x1590>
   212f4:	ldr	r2, [r4, #148]	; 0x94
   212f8:	add	r1, r5, #4
   212fc:	orr	r3, r2, r3
   21300:	str	r0, [sp]
   21304:	mov	r2, r6
   21308:	str	r3, [r4, #148]	; 0x94
   2130c:	mov	r0, r4
   21310:	mov	r3, #13
   21314:	bl	1caa4 <_start@@Base+0x96f4>
   21318:	mov	r0, r6
   2131c:	add	sp, sp, #8
   21320:	pop	{r4, r5, r6, pc}
   21324:	strdeq	r7, [r0], -lr
   21328:	cmp	r1, #65536	; 0x10000
   2132c:	bcs	2147c <luaL_where@@Base+0x1378>
   21330:	tst	r1, #1
   21334:	mvneq	r3, #0
   21338:	ldrne	r3, [r0]
   2133c:	tst	r1, #2
   21340:	beq	21350 <luaL_where@@Base+0x124c>
   21344:	ldr	r2, [r0, #4]
   21348:	cmp	r3, r2
   2134c:	movcs	r3, r2
   21350:	tst	r1, #4
   21354:	beq	21364 <luaL_where@@Base+0x1260>
   21358:	ldr	r2, [r0, #8]
   2135c:	cmp	r3, r2
   21360:	movcs	r3, r2
   21364:	tst	r1, #8
   21368:	beq	21378 <luaL_where@@Base+0x1274>
   2136c:	ldr	r2, [r0, #12]
   21370:	cmp	r3, r2
   21374:	movcs	r3, r2
   21378:	tst	r1, #16
   2137c:	beq	2138c <luaL_where@@Base+0x1288>
   21380:	ldr	r2, [r0, #16]
   21384:	cmp	r3, r2
   21388:	movcs	r3, r2
   2138c:	tst	r1, #32
   21390:	beq	213a0 <luaL_where@@Base+0x129c>
   21394:	ldr	r2, [r0, #20]
   21398:	cmp	r3, r2
   2139c:	movcs	r3, r2
   213a0:	tst	r1, #64	; 0x40
   213a4:	beq	213b4 <luaL_where@@Base+0x12b0>
   213a8:	ldr	r2, [r0, #24]
   213ac:	cmp	r3, r2
   213b0:	movcs	r3, r2
   213b4:	tst	r1, #128	; 0x80
   213b8:	beq	213c8 <luaL_where@@Base+0x12c4>
   213bc:	ldr	r2, [r0, #28]
   213c0:	cmp	r3, r2
   213c4:	movcs	r3, r2
   213c8:	tst	r1, #256	; 0x100
   213cc:	beq	213dc <luaL_where@@Base+0x12d8>
   213d0:	ldr	r2, [r0, #32]
   213d4:	cmp	r3, r2
   213d8:	movcs	r3, r2
   213dc:	tst	r1, #512	; 0x200
   213e0:	beq	213f0 <luaL_where@@Base+0x12ec>
   213e4:	ldr	r2, [r0, #36]	; 0x24
   213e8:	cmp	r3, r2
   213ec:	movcs	r3, r2
   213f0:	tst	r1, #1024	; 0x400
   213f4:	beq	21404 <luaL_where@@Base+0x1300>
   213f8:	ldr	r2, [r0, #40]	; 0x28
   213fc:	cmp	r3, r2
   21400:	movcs	r3, r2
   21404:	tst	r1, #2048	; 0x800
   21408:	beq	21418 <luaL_where@@Base+0x1314>
   2140c:	ldr	r2, [r0, #44]	; 0x2c
   21410:	cmp	r3, r2
   21414:	movcs	r3, r2
   21418:	tst	r1, #4096	; 0x1000
   2141c:	beq	2142c <luaL_where@@Base+0x1328>
   21420:	ldr	r2, [r0, #48]	; 0x30
   21424:	cmp	r3, r2
   21428:	movcs	r3, r2
   2142c:	uxth	r3, r3
   21430:	cmp	r3, #32768	; 0x8000
   21434:	bcc	21474 <luaL_where@@Base+0x1370>
   21438:	ldr	r2, [r0, #152]	; 0x98
   2143c:	ands	r1, r2, r1
   21440:	beq	21474 <luaL_where@@Base+0x1370>
   21444:	ldr	ip, [r0, #136]	; 0x88
   21448:	add	ip, ip, r3, lsl #3
   2144c:	ldrb	ip, [ip, #6]
   21450:	lsr	r2, r2, ip
   21454:	tst	r2, #1
   21458:	bne	21474 <luaL_where@@Base+0x1370>
   2145c:	rsb	r3, r1, #0
   21460:	and	r1, r1, r3
   21464:	clz	r1, r1
   21468:	rsb	r1, r1, #31
   2146c:	ldr	r3, [r0, r1, lsl #2]
   21470:	uxth	r3, r3
   21474:	mov	r1, r3
   21478:	b	21284 <luaL_where@@Base+0x1180>
   2147c:	tst	r1, #65536	; 0x10000
   21480:	mvneq	r3, #0
   21484:	ldrne	r3, [r0, #64]	; 0x40
   21488:	tst	r1, #131072	; 0x20000
   2148c:	beq	2149c <luaL_where@@Base+0x1398>
   21490:	ldr	r2, [r0, #68]	; 0x44
   21494:	cmp	r3, r2
   21498:	movcs	r3, r2
   2149c:	tst	r1, #262144	; 0x40000
   214a0:	beq	214b0 <luaL_where@@Base+0x13ac>
   214a4:	ldr	r2, [r0, #72]	; 0x48
   214a8:	cmp	r3, r2
   214ac:	movcs	r3, r2
   214b0:	tst	r1, #524288	; 0x80000
   214b4:	beq	214c4 <luaL_where@@Base+0x13c0>
   214b8:	ldr	r2, [r0, #76]	; 0x4c
   214bc:	cmp	r3, r2
   214c0:	movcs	r3, r2
   214c4:	tst	r1, #1048576	; 0x100000
   214c8:	beq	214d8 <luaL_where@@Base+0x13d4>
   214cc:	ldr	r2, [r0, #80]	; 0x50
   214d0:	cmp	r3, r2
   214d4:	movcs	r3, r2
   214d8:	tst	r1, #2097152	; 0x200000
   214dc:	beq	214ec <luaL_where@@Base+0x13e8>
   214e0:	ldr	r2, [r0, #84]	; 0x54
   214e4:	cmp	r3, r2
   214e8:	movcs	r3, r2
   214ec:	tst	r1, #4194304	; 0x400000
   214f0:	beq	21500 <luaL_where@@Base+0x13fc>
   214f4:	ldr	r2, [r0, #88]	; 0x58
   214f8:	cmp	r3, r2
   214fc:	movcs	r3, r2
   21500:	tst	r1, #8388608	; 0x800000
   21504:	beq	21514 <luaL_where@@Base+0x1410>
   21508:	ldr	r2, [r0, #92]	; 0x5c
   2150c:	cmp	r3, r2
   21510:	movcs	r3, r2
   21514:	tst	r1, #16777216	; 0x1000000
   21518:	beq	21528 <luaL_where@@Base+0x1424>
   2151c:	ldr	r2, [r0, #96]	; 0x60
   21520:	cmp	r3, r2
   21524:	movcs	r3, r2
   21528:	tst	r1, #33554432	; 0x2000000
   2152c:	beq	2153c <luaL_where@@Base+0x1438>
   21530:	ldr	r2, [r0, #100]	; 0x64
   21534:	cmp	r3, r2
   21538:	movcs	r3, r2
   2153c:	tst	r1, #67108864	; 0x4000000
   21540:	beq	21550 <luaL_where@@Base+0x144c>
   21544:	ldr	r2, [r0, #104]	; 0x68
   21548:	cmp	r3, r2
   2154c:	movcs	r3, r2
   21550:	tst	r1, #134217728	; 0x8000000
   21554:	beq	21564 <luaL_where@@Base+0x1460>
   21558:	ldr	r2, [r0, #108]	; 0x6c
   2155c:	cmp	r3, r2
   21560:	movcs	r3, r2
   21564:	tst	r1, #268435456	; 0x10000000
   21568:	beq	21578 <luaL_where@@Base+0x1474>
   2156c:	ldr	r2, [r0, #112]	; 0x70
   21570:	cmp	r3, r2
   21574:	movcs	r3, r2
   21578:	tst	r1, #536870912	; 0x20000000
   2157c:	beq	2158c <luaL_where@@Base+0x1488>
   21580:	ldr	r2, [r0, #116]	; 0x74
   21584:	cmp	r3, r2
   21588:	movcs	r3, r2
   2158c:	tst	r1, #1073741824	; 0x40000000
   21590:	beq	215a0 <luaL_where@@Base+0x149c>
   21594:	ldr	r2, [r0, #120]	; 0x78
   21598:	cmp	r3, r2
   2159c:	movcs	r3, r2
   215a0:	cmp	r1, #0
   215a4:	bge	2142c <luaL_where@@Base+0x1328>
   215a8:	ldr	r2, [r0, #124]	; 0x7c
   215ac:	cmp	r3, r2
   215b0:	movcs	r3, r2
   215b4:	b	2142c <luaL_where@@Base+0x1328>
   215b8:	push	{r4, r5, r6, r7, r8, lr}
   215bc:	mov	lr, r0
   215c0:	ldr	ip, [pc, #196]	; 2168c <luaL_where@@Base+0x1588>
   215c4:	ldr	r6, [r0, #144]	; 0x90
   215c8:	bics	ip, ip, r6
   215cc:	beq	2161c <luaL_where@@Base+0x1518>
   215d0:	ldr	r5, [pc, #184]	; 21690 <luaL_where@@Base+0x158c>
   215d4:	mov	r4, #1
   215d8:	rsb	r3, ip, #0
   215dc:	and	r3, r3, ip
   215e0:	clz	r3, r3
   215e4:	rsb	r0, r3, #31
   215e8:	ldr	r3, [lr, r0, lsl #2]
   215ec:	uxth	r3, r3
   215f0:	cmp	r3, r5
   215f4:	bhi	21614 <luaL_where@@Base+0x1510>
   215f8:	cmp	r3, #15
   215fc:	add	r7, r3, #64	; 0x40
   21600:	ldrhi	r7, [lr, #136]	; 0x88
   21604:	ldrls	r3, [lr, r7, lsl #2]
   21608:	ldrhi	r3, [r7, r3, lsl #3]
   2160c:	cmp	r3, r1
   21610:	popeq	{r4, r5, r6, r7, r8, pc}
   21614:	bics	ip, ip, r4, lsl r0
   21618:	bne	215d8 <luaL_where@@Base+0x14d4>
   2161c:	mov	r5, r1
   21620:	ands	r1, r6, r2
   21624:	mov	r4, lr
   21628:	beq	21678 <luaL_where@@Base+0x1574>
   2162c:	ldr	r3, [lr, #148]	; 0x94
   21630:	bics	r3, r1, r3
   21634:	moveq	r3, r1
   21638:	rsb	r0, r3, #0
   2163c:	and	r0, r0, r3
   21640:	clz	r0, r0
   21644:	rsb	r0, r0, #31
   21648:	add	r2, r4, r0, lsl #2
   2164c:	mov	r3, #1
   21650:	str	r5, [r2, #256]	; 0x100
   21654:	add	r2, r0, r0, lsl #16
   21658:	str	r2, [r4, r0, lsl #2]
   2165c:	mvn	r3, r3, lsl r0
   21660:	ldr	r2, [r4, #152]	; 0x98
   21664:	and	r6, r6, r3
   21668:	and	r3, r3, r2
   2166c:	str	r3, [r4, #152]	; 0x98
   21670:	str	r6, [r4, #144]	; 0x90
   21674:	pop	{r4, r5, r6, r7, r8, pc}
   21678:	mov	r1, r2
   2167c:	mov	r0, lr
   21680:	bl	21328 <luaL_where@@Base+0x1224>
   21684:	ldr	r6, [r4, #144]	; 0x90
   21688:	b	21648 <luaL_where@@Base+0x1544>
   2168c:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   21690:	strdeq	r7, [r0], -lr
   21694:	cmp	r1, #15
   21698:	push	{r4, r5, r6, r7, r8, lr}
   2169c:	mov	r4, r0
   216a0:	mov	r5, r1
   216a4:	ldr	r2, [r0, #144]	; 0x90
   216a8:	ldr	lr, [r0, #148]	; 0x94
   216ac:	bls	217b8 <luaL_where@@Base+0x16b4>
   216b0:	ldr	ip, [r0, #136]	; 0x88
   216b4:	mov	r3, #1
   216b8:	add	r1, ip, r1, lsl #3
   216bc:	mvn	r7, #0
   216c0:	ldrb	r6, [r1, #6]
   216c4:	ldrb	r8, [r1, #5]
   216c8:	lsl	r3, r3, r6
   216cc:	orr	r2, r3, r2
   216d0:	orr	r3, r3, lr
   216d4:	cmp	r8, #28
   216d8:	strd	r2, [r0, #144]	; 0x90
   216dc:	strb	r7, [r1, #6]
   216e0:	beq	216f8 <luaL_where@@Base+0x15f4>
   216e4:	ldr	r2, [ip, r5, lsl #3]
   216e8:	mov	r1, r6
   216ec:	bl	1e2e0 <_start@@Base+0xaf30>
   216f0:	mov	r0, r6
   216f4:	pop	{r4, r5, r6, r7, r8, pc}
   216f8:	ldr	r3, [r0, #160]	; 0xa0
   216fc:	lsl	r5, r6, #12
   21700:	tst	r3, #256	; 0x100
   21704:	uxth	r5, r5
   21708:	add	r7, r1, #8
   2170c:	beq	2177c <luaL_where@@Base+0x1678>
   21710:	ldr	r3, [r1, #8]
   21714:	cmp	r3, #0
   21718:	bne	2177c <luaL_where@@Base+0x1678>
   2171c:	ldr	r3, [r1, #12]
   21720:	uxth	r2, r3
   21724:	cmp	r2, #0
   21728:	bne	2177c <luaL_where@@Base+0x1678>
   2172c:	ldr	r2, [pc, #180]	; 217e8 <luaL_where@@Base+0x16e4>
   21730:	and	r2, r2, r3, lsr #22
   21734:	sub	r2, r2, #255	; 0xff
   21738:	cmp	r2, #1
   2173c:	bhi	2177c <luaL_where@@Base+0x1678>
   21740:	lsr	r1, r3, #12
   21744:	lsr	r0, r3, #4
   21748:	and	r1, r1, #524288	; 0x80000
   2174c:	and	r0, r0, #458752	; 0x70000
   21750:	ldr	r2, [pc, #148]	; 217ec <luaL_where@@Base+0x16e8>
   21754:	orr	r1, r1, r0
   21758:	lsl	r3, r3, #12
   2175c:	orr	r2, r1, r2
   21760:	ldr	r1, [r4, #128]	; 0x80
   21764:	orr	r3, r2, r3, lsr #28
   21768:	orr	r5, r3, r5
   2176c:	sub	r3, r1, #4
   21770:	str	r3, [r4, #128]	; 0x80
   21774:	str	r5, [r1, #-4]
   21778:	b	216f0 <luaL_where@@Base+0x15ec>
   2177c:	bic	r1, r7, #1020	; 0x3fc
   21780:	ldr	r2, [pc, #104]	; 217f0 <luaL_where@@Base+0x16ec>
   21784:	mov	r0, r4
   21788:	bl	215b8 <luaL_where@@Base+0x14b4>
   2178c:	ldr	r3, [pc, #96]	; 217f4 <luaL_where@@Base+0x16f0>
   21790:	lsl	r7, r7, #22
   21794:	ldr	r2, [r4, #128]	; 0x80
   21798:	orr	r3, r5, r3
   2179c:	orr	r3, r3, r7, lsr #24
   217a0:	sub	r1, r2, #4
   217a4:	str	r1, [r4, #128]	; 0x80
   217a8:	orr	r3, r3, r0, lsl #16
   217ac:	str	r3, [r2, #-4]
   217b0:	mov	r0, r6
   217b4:	pop	{r4, r5, r6, r7, r8, pc}
   217b8:	mov	ip, #1
   217bc:	add	r3, r1, #64	; 0x40
   217c0:	lsl	ip, ip, r1
   217c4:	orr	r2, ip, r2
   217c8:	orr	ip, ip, lr
   217cc:	str	r2, [r0, #144]	; 0x90
   217d0:	str	ip, [r0, #148]	; 0x94
   217d4:	ldr	r2, [r0, r3, lsl #2]
   217d8:	mov	r6, r5
   217dc:	bl	1e2e0 <_start@@Base+0xaf30>
   217e0:	mov	r0, r6
   217e4:	pop	{r4, r5, r6, r7, r8, pc}
   217e8:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   217ec:	vmov.f64	d0, #0	; 0x40000000  2.0
   217f0:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   217f4:	vldr	d0, [r0]
   217f8:	push	{r4, r5, r6, r7, lr}
   217fc:	mov	r4, r3
   21800:	mov	r5, r2
   21804:	ldr	r3, [pc, #68]	; 21850 <luaL_where@@Base+0x174c>
   21808:	mov	r2, #1
   2180c:	mov	r7, r1
   21810:	bic	r1, r4, #4080	; 0xff0
   21814:	sub	sp, sp, #12
   21818:	bic	r2, r3, r2, lsl r5
   2181c:	bic	r1, r1, #15
   21820:	mov	r6, r0
   21824:	bl	215b8 <luaL_where@@Base+0x14b4>
   21828:	lsl	r3, r4, #20
   2182c:	mov	r2, r5
   21830:	lsr	r3, r3, #20
   21834:	str	r3, [sp]
   21838:	mov	r1, r7
   2183c:	mov	r3, r0
   21840:	mov	r0, r6
   21844:	bl	16dbc <_start@@Base+0x3a0c>
   21848:	add	sp, sp, #12
   2184c:	pop	{r4, r5, r6, r7, pc}
   21850:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   21854:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21858:	sub	sp, sp, #8
   2185c:	subs	r7, r2, #0
   21860:	mov	r4, r3
   21864:	mov	r5, r0
   21868:	ldr	r9, [r0, #128]	; 0x80
   2186c:	ldr	r3, [sp, #40]	; 0x28
   21870:	beq	2198c <luaL_where@@Base+0x1888>
   21874:	ldrb	r2, [r7, #7]
   21878:	cmp	r2, #0
   2187c:	bne	2195c <luaL_where@@Base+0x1858>
   21880:	ldrb	r8, [r7, #6]
   21884:	ldr	sl, [pc, #452]	; 21a50 <luaL_where@@Base+0x194c>
   21888:	orr	sl, r8, sl
   2188c:	ldr	r6, [r5, #140]	; 0x8c
   21890:	lsr	r0, r3, #5
   21894:	and	r2, r3, #31
   21898:	add	r3, r6, r0, lsl #2
   2189c:	lsl	r1, r1, #3
   218a0:	ldr	r3, [r3, #1568]	; 0x620
   218a4:	mov	r0, #0
   218a8:	add	r3, r3, r2, lsl #2
   218ac:	sub	r3, r3, r9
   218b0:	sub	r6, r6, #164	; 0xa4
   218b4:	asr	r3, r3, #2
   218b8:	sub	r3, r3, #1
   218bc:	bic	r3, r3, #-16777216	; 0xff000000
   218c0:	orr	r3, r3, #-1694498816	; 0x9b000000
   218c4:	str	r3, [r9, #-4]
   218c8:	bl	16d00 <_start@@Base+0x3950>
   218cc:	ldr	r3, [pc, #384]	; 21a54 <luaL_where@@Base+0x1950>
   218d0:	sub	r2, r9, #16
   218d4:	cmp	r7, #0
   218d8:	str	sl, [r9, #-12]
   218dc:	eor	r0, r0, #-520093696	; 0xe1000000
   218e0:	eor	r0, r0, #5242880	; 0x500000
   218e4:	orr	r0, r0, #917504	; 0xe0000
   218e8:	str	r0, [r9, #-8]
   218ec:	str	r2, [r5, #128]	; 0x80
   218f0:	str	r3, [r9, #-16]
   218f4:	beq	21a14 <luaL_where@@Base+0x1910>
   218f8:	ldrb	r3, [r7, #7]
   218fc:	cmp	r3, #0
   21900:	bne	21998 <luaL_where@@Base+0x1894>
   21904:	lsl	r2, r6, #20
   21908:	mov	r3, #14
   2190c:	lsr	r2, r2, #20
   21910:	str	r2, [sp]
   21914:	ldr	r1, [pc, #316]	; 21a58 <luaL_where@@Base+0x1954>
   21918:	mov	r2, r3
   2191c:	mov	r0, r5
   21920:	bl	16dbc <_start@@Base+0x3a0c>
   21924:	ldrb	r3, [r7, #7]
   21928:	clz	r4, r4
   2192c:	lsr	r4, r4, #5
   21930:	cmp	r3, #0
   21934:	moveq	r4, #0
   21938:	cmp	r4, #0
   2193c:	bne	219b8 <luaL_where@@Base+0x18b4>
   21940:	bic	r2, r6, #4080	; 0xff0
   21944:	bic	r2, r2, #15
   21948:	mov	r0, r5
   2194c:	mov	r1, #14
   21950:	add	sp, sp, #8
   21954:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   21958:	b	1e2e0 <_start@@Base+0xaf30>
   2195c:	cmp	r4, #0
   21960:	bne	219e0 <luaL_where@@Base+0x18dc>
   21964:	ldr	r2, [pc, #240]	; 21a5c <luaL_where@@Base+0x1958>
   21968:	ldr	r0, [r9]
   2196c:	cmp	r0, r2
   21970:	beq	21a30 <luaL_where@@Base+0x192c>
   21974:	ldr	r2, [pc, #228]	; 21a60 <luaL_where@@Base+0x195c>
   21978:	ldr	sl, [pc, #208]	; 21a50 <luaL_where@@Base+0x194c>
   2197c:	str	r2, [r9, #-4]
   21980:	mov	r8, #0
   21984:	sub	r9, r9, #4
   21988:	b	2188c <luaL_where@@Base+0x1788>
   2198c:	ldr	sl, [pc, #208]	; 21a64 <luaL_where@@Base+0x1960>
   21990:	mov	r8, #9
   21994:	b	2188c <luaL_where@@Base+0x1788>
   21998:	lsl	r3, r3, #2
   2199c:	str	r3, [sp]
   219a0:	mov	r2, r8
   219a4:	mov	r3, #13
   219a8:	ldr	r1, [pc, #168]	; 21a58 <luaL_where@@Base+0x1954>
   219ac:	mov	r0, r5
   219b0:	bl	16dbc <_start@@Base+0x3a0c>
   219b4:	b	21904 <luaL_where@@Base+0x1800>
   219b8:	ldr	r3, [r5, #128]	; 0x80
   219bc:	ldr	r2, [pc, #164]	; 21a68 <luaL_where@@Base+0x1964>
   219c0:	ldr	r1, [r3]
   219c4:	cmp	r1, r2
   219c8:	beq	219fc <luaL_where@@Base+0x18f8>
   219cc:	ldr	r2, [pc, #152]	; 21a6c <luaL_where@@Base+0x1968>
   219d0:	sub	r1, r3, #4
   219d4:	str	r1, [r5, #128]	; 0x80
   219d8:	str	r2, [r3, #-4]
   219dc:	b	21940 <luaL_where@@Base+0x183c>
   219e0:	rsb	r8, r4, #0
   219e4:	ldr	sl, [pc, #100]	; 21a50 <luaL_where@@Base+0x194c>
   219e8:	and	r8, r8, r4
   219ec:	clz	r8, r8
   219f0:	rsb	r8, r8, #31
   219f4:	orr	sl, r8, sl
   219f8:	b	2188c <luaL_where@@Base+0x1788>
   219fc:	ldr	r2, [r5, #240]	; 0xf0
   21a00:	cmp	r3, r2
   21a04:	beq	219cc <luaL_where@@Base+0x18c8>
   21a08:	ldr	r2, [pc, #96]	; 21a70 <luaL_where@@Base+0x196c>
   21a0c:	str	r2, [r3]
   21a10:	b	21940 <luaL_where@@Base+0x183c>
   21a14:	mov	r3, r6
   21a18:	mov	r0, r5
   21a1c:	mov	r2, #14
   21a20:	ldr	r1, [pc, #48]	; 21a58 <luaL_where@@Base+0x1954>
   21a24:	add	sp, sp, #8
   21a28:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   21a2c:	b	217f8 <luaL_where@@Base+0x16f4>
   21a30:	ldr	r2, [r5, #240]	; 0xf0
   21a34:	cmp	r2, r9
   21a38:	beq	21974 <luaL_where@@Base+0x1870>
   21a3c:	ldr	r2, [pc, #48]	; 21a74 <luaL_where@@Base+0x1970>
   21a40:	ldr	sl, [pc, #8]	; 21a50 <luaL_where@@Base+0x194c>
   21a44:	str	r2, [r9]
   21a48:	mov	r8, r4
   21a4c:	b	2188c <luaL_where@@Base+0x1788>
   21a50:	sub	lr, lr, r0
   21a54:	ldr	lr, [lr, #24]
   21a58:	ldr	r0, [r0], #-0
   21a5c:	ldr	r1, [sp, #4]
   21a60:	ldr	r0, [sp]
   21a64:	sub	lr, lr, r9
   21a68:	str	r1, [sp, #4]
   21a6c:	str	r0, [sp]
   21a70:	strd	r0, [sp]
   21a74:	ldrd	r0, [sp]
   21a78:	push	{r4, r5, r6, r7, r8, lr}
   21a7c:	mov	r5, r1
   21a80:	mov	r6, r0
   21a84:	ldr	r1, [sp, #24]
   21a88:	mov	r0, r5
   21a8c:	mov	r7, r2
   21a90:	mov	r4, r3
   21a94:	bl	16d00 <_start@@Base+0x3950>
   21a98:	lsl	r4, r4, #16
   21a9c:	orr	r4, r4, r7, lsl #12
   21aa0:	cmp	r0, #0
   21aa4:	beq	21ac4 <luaL_where@@Base+0x19c0>
   21aa8:	ldr	r3, [r6, #128]	; 0x80
   21aac:	eor	r0, r0, r5
   21ab0:	orr	r4, r0, r4
   21ab4:	sub	r2, r3, #4
   21ab8:	str	r2, [r6, #128]	; 0x80
   21abc:	str	r4, [r3, #-4]
   21ac0:	pop	{r4, r5, r6, r7, r8, pc}
   21ac4:	ldr	r2, [sp, #28]
   21ac8:	ldr	r1, [sp, #24]
   21acc:	mov	r0, r6
   21ad0:	bl	215b8 <luaL_where@@Base+0x14b4>
   21ad4:	ldr	r3, [r6, #128]	; 0x80
   21ad8:	orr	r4, r5, r4
   21adc:	sub	r2, r3, #4
   21ae0:	str	r2, [r6, #128]	; 0x80
   21ae4:	orr	r4, r4, r0
   21ae8:	str	r4, [r3, #-4]
   21aec:	pop	{r4, r5, r6, r7, r8, pc}
   21af0:	push	{lr}		; (str lr, [sp, #-4]!)
   21af4:	mov	r3, r1
   21af8:	sub	sp, sp, #12
   21afc:	ldr	ip, [pc, #32]	; 21b24 <luaL_where@@Base+0x1a20>
   21b00:	mov	r1, #1
   21b04:	str	r2, [sp]
   21b08:	bic	r2, ip, r1, lsl r3
   21b0c:	ldr	r1, [pc, #20]	; 21b28 <luaL_where@@Base+0x1a24>
   21b10:	str	r2, [sp, #4]
   21b14:	mov	r2, r3
   21b18:	bl	21a78 <luaL_where@@Base+0x1974>
   21b1c:	add	sp, sp, #12
   21b20:	pop	{pc}		; (ldr pc, [sp], #4)
   21b24:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   21b28:	add	r0, r0, r0
   21b2c:	push	{r4, lr}
   21b30:	ldr	r4, [r0, #128]	; 0x80
   21b34:	sub	ip, r4, #4
   21b38:	sub	r3, r1, ip
   21b3c:	sub	r3, r3, #8
   21b40:	str	ip, [r0, #128]	; 0x80
   21b44:	asr	r2, r3, #2
   21b48:	add	ip, r2, #8388608	; 0x800000
   21b4c:	lsrs	ip, ip, #24
   21b50:	bne	21b7c <luaL_where@@Base+0x1a78>
   21b54:	tst	r3, #1
   21b58:	lslne	r3, r3, #23
   21b5c:	bic	r2, r2, #-16777216	; 0xff000000
   21b60:	andne	r3, r3, #16777216	; 0x1000000
   21b64:	orrne	r3, r3, r2
   21b68:	orrne	r3, r3, #-100663296	; 0xfa000000
   21b6c:	orreq	r2, r2, #-352321536	; 0xeb000000
   21b70:	strne	r3, [r4, #-4]
   21b74:	streq	r2, [r4, #-4]
   21b78:	pop	{r4, pc}
   21b7c:	ldr	r2, [pc, #16]	; 21b94 <luaL_where@@Base+0x1a90>
   21b80:	bl	215b8 <luaL_where@@Base+0x14b4>
   21b84:	ldr	r3, [pc, #12]	; 21b98 <luaL_where@@Base+0x1a94>
   21b88:	orr	r3, r0, r3
   21b8c:	str	r3, [r4, #-4]
   21b90:	pop	{r4, pc}
   21b94:	strdeq	r1, [r0], -r0
   21b98:	blx	r0
   21b9c:	ldr	r3, [r0, #144]	; 0x90
   21ba0:	push	{r4, r5, r6, r7, r8, lr}
   21ba4:	ands	ip, r3, r2
   21ba8:	ldr	r7, [r0, #136]	; 0x88
   21bac:	mov	r6, r0
   21bb0:	mov	r5, r1
   21bb4:	add	r7, r7, r1, lsl #3
   21bb8:	beq	21c78 <luaL_where@@Base+0x1b74>
   21bbc:	ldrb	r4, [r7, #6]
   21bc0:	cmp	r4, #252	; 0xfc
   21bc4:	bls	21c30 <luaL_where@@Base+0x1b2c>
   21bc8:	ldrb	r1, [r7, #4]
   21bcc:	ldr	r2, [r6, #212]	; 0xd4
   21bd0:	cmp	r2, r5
   21bd4:	and	r1, r1, #64	; 0x40
   21bd8:	bls	21be4 <luaL_where@@Base+0x1ae0>
   21bdc:	cmp	r1, #0
   21be0:	beq	21ca0 <luaL_where@@Base+0x1b9c>
   21be4:	ldr	r4, [pc, #212]	; 21cc0 <luaL_where@@Base+0x1bbc>
   21be8:	and	r4, r4, ip
   21bec:	cmp	r4, #0
   21bf0:	moveq	r4, ip
   21bf4:	clz	r4, r4
   21bf8:	eor	r4, r4, #31
   21bfc:	mov	r2, #1
   21c00:	add	r5, r5, r5, lsl #16
   21c04:	mvn	r2, r2, lsl r4
   21c08:	add	r5, r5, r1, lsl #16
   21c0c:	ldr	r1, [r6, #152]	; 0x98
   21c10:	and	r3, r3, r2
   21c14:	and	r2, r2, r1
   21c18:	strb	r4, [r7, #6]
   21c1c:	mov	r0, r4
   21c20:	str	r3, [r6, #144]	; 0x90
   21c24:	str	r2, [r6, #152]	; 0x98
   21c28:	str	r5, [r6, r4, lsl #2]
   21c2c:	pop	{r4, r5, r6, r7, r8, pc}
   21c30:	and	r4, r4, #127	; 0x7f
   21c34:	lsr	r1, ip, r4
   21c38:	tst	r1, #1
   21c3c:	bne	21c94 <luaL_where@@Base+0x1b90>
   21c40:	lsr	r2, r2, r4
   21c44:	tst	r2, #1
   21c48:	beq	21bc8 <luaL_where@@Base+0x1ac4>
   21c4c:	ldr	r1, [r0, r4, lsl #2]
   21c50:	ldr	r2, [pc, #108]	; 21cc4 <luaL_where@@Base+0x1bc0>
   21c54:	uxth	lr, r1
   21c58:	cmp	lr, r2
   21c5c:	bhi	21bc8 <luaL_where@@Base+0x1ac4>
   21c60:	mov	r1, lr
   21c64:	bl	21694 <luaL_where@@Base+0x1590>
   21c68:	ldrb	r1, [r7, #4]
   21c6c:	ldr	r3, [r6, #144]	; 0x90
   21c70:	and	r1, r1, #64	; 0x40
   21c74:	b	21bfc <luaL_where@@Base+0x1af8>
   21c78:	mov	r1, r2
   21c7c:	bl	21328 <luaL_where@@Base+0x1224>
   21c80:	ldrb	r1, [r7, #4]
   21c84:	ldr	r3, [r6, #144]	; 0x90
   21c88:	and	r1, r1, #64	; 0x40
   21c8c:	mov	r4, r0
   21c90:	b	21bfc <luaL_where@@Base+0x1af8>
   21c94:	ldrb	r1, [r7, #4]
   21c98:	and	r1, r1, #64	; 0x40
   21c9c:	b	21bfc <luaL_where@@Base+0x1af8>
   21ca0:	ldr	r4, [r6, #148]	; 0x94
   21ca4:	bics	r4, ip, r4
   21ca8:	moveq	r4, ip
   21cac:	rsb	r2, r4, #0
   21cb0:	and	r4, r4, r2
   21cb4:	clz	r4, r4
   21cb8:	rsb	r4, r4, #31
   21cbc:	b	21bfc <luaL_where@@Base+0x1af8>
   21cc0:			; <UNDEFINED> instruction: 0xff00eff0
   21cc4:	strdeq	r7, [r0], -lr
   21cc8:	ldr	r3, [r0, #136]	; 0x88
   21ccc:	push	{r4, lr}
   21cd0:	add	r3, r3, r1, lsl #3
   21cd4:	mov	r4, r0
   21cd8:	ldrb	r3, [r3, #6]
   21cdc:	tst	r3, #128	; 0x80
   21ce0:	bne	21cfc <luaL_where@@Base+0x1bf8>
   21ce4:	ldr	r2, [r4, #152]	; 0x98
   21ce8:	mov	r1, #1
   21cec:	mov	r0, r3
   21cf0:	bic	r3, r2, r1, lsl r3
   21cf4:	str	r3, [r4, #152]	; 0x98
   21cf8:	pop	{r4, pc}
   21cfc:	bl	21b9c <luaL_where@@Base+0x1a98>
   21d00:	mov	r3, r0
   21d04:	b	21ce4 <luaL_where@@Base+0x1be0>
   21d08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d0c:	lsl	ip, r1, #3
   21d10:	ldr	r6, [r0, #136]	; 0x88
   21d14:	mov	r5, r1
   21d18:	add	r1, r6, ip
   21d1c:	sub	sp, sp, #12
   21d20:	ldrsb	lr, [r1, #6]
   21d24:	mov	r4, r0
   21d28:	mov	r7, r2
   21d2c:	cmp	lr, #0
   21d30:	ldr	r8, [sp, #48]	; 0x30
   21d34:	bge	21d54 <luaL_where@@Base+0x1c50>
   21d38:	ldrb	r2, [r1, #5]
   21d3c:	cmp	r2, #57	; 0x39
   21d40:	beq	21d74 <luaL_where@@Base+0x1c70>
   21d44:	cmp	r2, #58	; 0x3a
   21d48:	beq	21e2c <luaL_where@@Base+0x1d28>
   21d4c:	cmp	r2, #62	; 0x3e
   21d50:	beq	21dec <luaL_where@@Base+0x1ce8>
   21d54:	mov	r2, r3
   21d58:	mov	r1, r5
   21d5c:	mov	r0, r4
   21d60:	mov	ip, #0
   21d64:	str	ip, [r7]
   21d68:	add	sp, sp, #12
   21d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d70:	b	21cc8 <luaL_where@@Base+0x1bc4>
   21d74:	ldr	r2, [r0, #204]	; 0xcc
   21d78:	cmp	r2, r5
   21d7c:	bcs	21d54 <luaL_where@@Base+0x1c50>
   21d80:	ldrh	fp, [r1, #2]
   21d84:	tst	fp, #32768	; 0x8000
   21d88:	bne	21d54 <luaL_where@@Base+0x1c50>
   21d8c:	ldrh	r9, [r6, ip]
   21d90:	str	r3, [sp, #4]
   21d94:	lsl	r2, r9, #3
   21d98:	ldrh	sl, [r6, r2]
   21d9c:	mov	r1, sl
   21da0:	bl	16ec4 <_start@@Base+0x3b14>
   21da4:	ldr	r2, [r6, fp, lsl #3]
   21da8:	rsb	r3, r8, #0
   21dac:	add	r2, r0, r2, lsl #3
   21db0:	cmp	r3, r2
   21db4:	movge	r1, #0
   21db8:	movlt	r1, #1
   21dbc:	cmp	r8, r2
   21dc0:	movle	r1, #0
   21dc4:	cmp	r0, #0
   21dc8:	movne	r9, sl
   21dcc:	cmp	r1, #0
   21dd0:	ldr	r3, [sp, #4]
   21dd4:	beq	21d54 <luaL_where@@Base+0x1c50>
   21dd8:	str	r2, [r7]
   21ddc:	mov	r1, r9
   21de0:	mov	r2, r3
   21de4:	mov	r0, r4
   21de8:	b	21d68 <luaL_where@@Base+0x1c64>
   21dec:	ldrh	r2, [r6, ip]
   21df0:	tst	r2, #32768	; 0x8000
   21df4:	bne	21d54 <luaL_where@@Base+0x1c50>
   21df8:	ldrh	ip, [r1, #2]
   21dfc:	ldr	r1, [r6, r2, lsl #3]
   21e00:	mov	r2, r3
   21e04:	lsr	r3, ip, #8
   21e08:	add	r3, r1, r3, lsl #2
   21e0c:	ldr	r3, [r3, #20]
   21e10:	add	r3, r3, #8
   21e14:	bic	r1, r3, #255	; 0xff
   21e18:	uxtb	r3, r3
   21e1c:	str	r3, [r7]
   21e20:	add	sp, sp, #12
   21e24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21e28:	b	215b8 <luaL_where@@Base+0x14b4>
   21e2c:	ldr	r2, [r0, #204]	; 0xcc
   21e30:	cmp	r2, r5
   21e34:	bcs	21d54 <luaL_where@@Base+0x1c50>
   21e38:	ldrh	r2, [r1, #2]
   21e3c:	add	r2, r6, r2, lsl #3
   21e40:	ldrh	r2, [r2, #2]
   21e44:	add	r2, r2, r2, lsl #1
   21e48:	lsl	r2, r2, #3
   21e4c:	cmp	r2, r8
   21e50:	bge	21d54 <luaL_where@@Base+0x1c50>
   21e54:	str	r2, [r7]
   21e58:	mov	r2, r3
   21e5c:	ldrh	r1, [r6, ip]
   21e60:	b	21d68 <luaL_where@@Base+0x1c64>
   21e64:	ldrb	r3, [r1, #6]
   21e68:	cmp	r3, #254	; 0xfe
   21e6c:	bxeq	lr
   21e70:	ldrb	ip, [r1, #4]
   21e74:	push	{r4, r5, r6, r7, r8, r9, lr}
   21e78:	sub	sp, sp, #20
   21e7c:	and	ip, ip, #31
   21e80:	mov	r3, #0
   21e84:	cmp	ip, #14
   21e88:	mov	r5, r0
   21e8c:	mov	r4, r1
   21e90:	str	r3, [sp, #12]
   21e94:	beq	21f6c <luaL_where@@Base+0x1e68>
   21e98:	cmp	ip, #2
   21e9c:	bhi	21f34 <luaL_where@@Base+0x1e30>
   21ea0:	mov	r7, #128	; 0x80
   21ea4:	ldr	r6, [pc, #304]	; 21fdc <luaL_where@@Base+0x1ed8>
   21ea8:	mov	r8, r7
   21eac:	mvn	r1, ip
   21eb0:	mov	r2, r6
   21eb4:	mov	r0, r5
   21eb8:	bl	215b8 <luaL_where@@Base+0x14b4>
   21ebc:	mov	r3, #1
   21ec0:	mov	r2, #4096	; 0x1000
   21ec4:	ldrh	r1, [r4]
   21ec8:	str	r2, [sp]
   21ecc:	add	r2, sp, #12
   21ed0:	bic	r3, r6, r3, lsl r0
   21ed4:	mov	r9, r0
   21ed8:	mov	r0, r5
   21edc:	bl	21d08 <luaL_where@@Base+0x1c04>
   21ee0:	cmp	r7, #0
   21ee4:	mov	r4, r0
   21ee8:	beq	21f14 <luaL_where@@Base+0x1e10>
   21eec:	ldr	r1, [sp, #12]
   21ef0:	mov	r3, r4
   21ef4:	add	r1, r1, #4
   21ef8:	str	r1, [sp]
   21efc:	mov	r2, r9
   21f00:	mov	r0, r5
   21f04:	mov	r1, #-469762048	; 0xe4000000
   21f08:	bl	16dbc <_start@@Base+0x3a0c>
   21f0c:	add	sp, sp, #20
   21f10:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21f14:	ldr	r3, [sp, #12]
   21f18:	mov	r2, r8
   21f1c:	str	r3, [sp]
   21f20:	mov	r1, #-469762048	; 0xe4000000
   21f24:	mov	r3, r0
   21f28:	mov	r0, r5
   21f2c:	bl	16dbc <_start@@Base+0x3a0c>
   21f30:	b	21eec <luaL_where@@Base+0x1de8>
   21f34:	ldr	r6, [pc, #160]	; 21fdc <luaL_where@@Base+0x1ed8>
   21f38:	ldrh	r1, [r1, #2]
   21f3c:	mov	r2, r6
   21f40:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   21f44:	ldrb	ip, [r4, #4]
   21f48:	mov	r3, #1
   21f4c:	and	ip, ip, #31
   21f50:	cmp	ip, #14
   21f54:	mvnhi	r1, #13
   21f58:	mov	r8, r0
   21f5c:	and	r7, r0, #128	; 0x80
   21f60:	bic	r6, r6, r3, lsl r0
   21f64:	bhi	21eb0 <luaL_where@@Base+0x1dac>
   21f68:	b	21eac <luaL_where@@Base+0x1da8>
   21f6c:	ldr	r2, [pc, #108]	; 21fe0 <luaL_where@@Base+0x1edc>
   21f70:	ldrh	r1, [r1, #2]
   21f74:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   21f78:	mov	r3, #1024	; 0x400
   21f7c:	ldrh	r1, [r4]
   21f80:	add	r2, sp, #12
   21f84:	str	r3, [sp]
   21f88:	ldr	r3, [pc, #76]	; 21fdc <luaL_where@@Base+0x1ed8>
   21f8c:	mov	r6, r0
   21f90:	mov	r0, r5
   21f94:	bl	21d08 <luaL_where@@Base+0x1c04>
   21f98:	ldr	r2, [sp, #12]
   21f9c:	lsl	r3, r6, #12
   21fa0:	cmp	r2, #0
   21fa4:	uxth	r3, r3
   21fa8:	ldrlt	ip, [pc, #52]	; 21fe4 <luaL_where@@Base+0x1ee0>
   21fac:	ldrge	ip, [pc, #52]	; 21fe8 <luaL_where@@Base+0x1ee4>
   21fb0:	ldr	r1, [r5, #128]	; 0x80
   21fb4:	rsblt	r2, r2, #0
   21fb8:	orr	r3, r3, r0, lsl #16
   21fbc:	orr	r3, r3, #16777216	; 0x1000000
   21fc0:	orr	r3, r3, ip
   21fc4:	orr	r3, r3, r2, asr #2
   21fc8:	sub	r2, r1, #4
   21fcc:	str	r2, [r5, #128]	; 0x80
   21fd0:	str	r3, [r1, #-4]
   21fd4:	add	sp, sp, #20
   21fd8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21fdc:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   21fe0:			; <UNDEFINED> instruction: 0xffff0000
   21fe4:	vstr	d0, [r0, #-0]
   21fe8:	vstr	d0, [r0]
   21fec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21ff0:	lsl	r8, r2, #3
   21ff4:	ldr	r5, [r0, #136]	; 0x88
   21ff8:	mov	r9, r0
   21ffc:	add	r6, r5, r8
   22000:	ldrb	lr, [r6, #6]
   22004:	tst	lr, #128	; 0x80
   22008:	bne	22024 <luaL_where@@Base+0x1f20>
   2200c:	ldr	r3, [r0, #152]	; 0x98
   22010:	mov	r2, #1
   22014:	mov	r0, lr
   22018:	bic	lr, r3, r2, lsl lr
   2201c:	str	lr, [r9, #152]	; 0x98
   22020:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22024:	cmp	r2, #32768	; 0x8000
   22028:	mov	r7, r3
   2202c:	mov	r4, r2
   22030:	mov	r3, r1
   22034:	bcc	2207c <luaL_where@@Base+0x1f78>
   22038:	ldr	r3, [r0, #204]	; 0xcc
   2203c:	cmp	r3, r2
   22040:	bcs	22090 <luaL_where@@Base+0x1f8c>
   22044:	ldrb	r3, [r6, #5]
   22048:	sub	r2, r3, #36	; 0x24
   2204c:	cmp	r2, #4
   22050:	bls	220a4 <luaL_where@@Base+0x1fa0>
   22054:	cmp	r3, #41	; 0x29
   22058:	bne	22090 <luaL_where@@Base+0x1f8c>
   2205c:	ldrh	r3, [r5, r8]
   22060:	ldrh	r1, [r6, #2]
   22064:	cmp	r1, r3
   22068:	bne	22090 <luaL_where@@Base+0x1f8c>
   2206c:	mov	r2, r7
   22070:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22074:	orr	r0, r0, #128	; 0x80
   22078:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2207c:	ldr	r1, [r5, r2, lsl #3]
   22080:	mov	r0, r3
   22084:	bl	16d00 <_start@@Base+0x3950>
   22088:	cmp	r0, #0
   2208c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   22090:	mov	r2, r7
   22094:	mov	r1, r4
   22098:	mov	r0, r9
   2209c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   220a0:	b	21b9c <luaL_where@@Base+0x1a98>
   220a4:	ldrh	r1, [r5, r8]
   220a8:	mov	r2, r7
   220ac:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   220b0:	ldrb	r3, [r6, #5]
   220b4:	cmp	r3, #36	; 0x24
   220b8:	moveq	r5, #0
   220bc:	mov	r4, r0
   220c0:	beq	220dc <luaL_where@@Base+0x1fd8>
   220c4:	cmp	r3, #37	; 0x25
   220c8:	moveq	r5, #32
   220cc:	beq	220dc <luaL_where@@Base+0x1fd8>
   220d0:	cmp	r3, #38	; 0x26
   220d4:	movne	r5, #96	; 0x60
   220d8:	moveq	r5, #64	; 0x40
   220dc:	ldrh	r1, [r6, #2]
   220e0:	tst	r1, #32768	; 0x8000
   220e4:	bne	22104 <luaL_where@@Base+0x2000>
   220e8:	ldr	r3, [r9, #136]	; 0x88
   220ec:	ldr	r0, [r3, r1, lsl #3]
   220f0:	lsl	r0, r0, #7
   220f4:	and	r0, r0, #3968	; 0xf80
   220f8:	orr	r0, r0, r4
   220fc:	orr	r0, r0, r5
   22100:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22104:	mov	r2, #1
   22108:	mov	r0, r9
   2210c:	bic	r2, r7, r2, lsl r4
   22110:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22114:	orr	r3, r4, #16
   22118:	orr	r3, r3, r5
   2211c:	orr	r0, r3, r0, lsl #8
   22120:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22124:	mov	ip, r3
   22128:	ldr	r3, [r0, #136]	; 0x88
   2212c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22130:	lsl	lr, ip, #3
   22134:	add	r8, r3, lr
   22138:	mov	r6, r1
   2213c:	ldrsb	r1, [r8, #6]
   22140:	sub	sp, sp, #20
   22144:	mov	r5, r0
   22148:	cmp	r1, #0
   2214c:	mov	r4, r2
   22150:	and	r9, r6, #134217728	; 0x8000000
   22154:	ldr	fp, [sp, #56]	; 0x38
   22158:	ldr	r7, [sp, #60]	; 0x3c
   2215c:	bge	221c8 <luaL_where@@Base+0x20c4>
   22160:	ldr	r2, [r0, #204]	; 0xcc
   22164:	cmn	r2, #1
   22168:	beq	221c8 <luaL_where@@Base+0x20c4>
   2216c:	ldrb	r2, [r8, #4]
   22170:	tst	r2, #64	; 0x40
   22174:	bne	221c8 <luaL_where@@Base+0x20c4>
   22178:	cmp	r9, #0
   2217c:	ldrb	r2, [r8, #5]
   22180:	bne	2224c <luaL_where@@Base+0x2148>
   22184:	ands	sl, r6, #67108864	; 0x4000000
   22188:	moveq	r1, #256	; 0x100
   2218c:	movne	r1, #4096	; 0x1000
   22190:	cmp	r2, #41	; 0x29
   22194:	beq	221b4 <luaL_where@@Base+0x20b0>
   22198:	cmp	r2, #64	; 0x40
   2219c:	beq	22384 <luaL_where@@Base+0x2280>
   221a0:	mov	r2, fp
   221a4:	mov	r1, ip
   221a8:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   221ac:	b	221e4 <luaL_where@@Base+0x20e0>
   221b0:	mov	r1, #1024	; 0x400
   221b4:	ldrh	sl, [r8, #2]
   221b8:	tst	sl, #32768	; 0x8000
   221bc:	beq	22298 <luaL_where@@Base+0x2194>
   221c0:	cmp	r7, #0
   221c4:	beq	222d8 <luaL_where@@Base+0x21d4>
   221c8:	mov	r2, fp
   221cc:	mov	r1, ip
   221d0:	mov	r0, r5
   221d4:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   221d8:	cmp	r9, #0
   221dc:	andeq	sl, r6, #67108864	; 0x4000000
   221e0:	bne	22260 <luaL_where@@Base+0x215c>
   221e4:	cmp	sl, #0
   221e8:	beq	2220c <luaL_where@@Base+0x2108>
   221ec:	mov	r3, r0
   221f0:	str	r7, [sp, #56]	; 0x38
   221f4:	mov	r2, r4
   221f8:	mov	r1, r6
   221fc:	mov	r0, r5
   22200:	add	sp, sp, #20
   22204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22208:	b	16dbc <_start@@Base+0x3a0c>
   2220c:	orr	r6, r6, #8388608	; 0x800000
   22210:	lsl	r2, r4, #12
   22214:	orr	r2, r2, #20971520	; 0x1400000
   22218:	orr	r2, r2, r0, lsl #16
   2221c:	ldr	r3, [r5, #128]	; 0x80
   22220:	and	r0, r7, #15
   22224:	orr	r2, r2, r6
   22228:	lsl	r7, r7, #4
   2222c:	orr	r2, r2, r0
   22230:	and	r7, r7, #3840	; 0xf00
   22234:	orr	r2, r2, r7
   22238:	sub	r1, r3, #4
   2223c:	str	r1, [r5, #128]	; 0x80
   22240:	str	r2, [r3, #-4]
   22244:	add	sp, sp, #20
   22248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2224c:	cmp	r2, #41	; 0x29
   22250:	beq	221b0 <luaL_where@@Base+0x20ac>
   22254:	mov	r2, fp
   22258:	mov	r1, ip
   2225c:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22260:	asr	r7, r7, #2
   22264:	orr	r6, r6, #8388608	; 0x800000
   22268:	lsl	r2, r4, #12
   2226c:	ldr	r3, [r5, #128]	; 0x80
   22270:	uxth	r2, r2
   22274:	orr	r2, r2, #16777216	; 0x1000000
   22278:	orr	r2, r2, r6
   2227c:	orr	r2, r2, r7
   22280:	orr	r0, r2, r0, lsl #16
   22284:	sub	r2, r3, #4
   22288:	str	r2, [r5, #128]	; 0x80
   2228c:	str	r0, [r3, #-4]
   22290:	add	sp, sp, #20
   22294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22298:	ldr	r8, [r3, sl, lsl #3]
   2229c:	rsb	r2, r1, #0
   222a0:	add	r8, r7, r8
   222a4:	cmp	r2, r8
   222a8:	cmplt	r8, r1
   222ac:	bge	221c0 <luaL_where@@Base+0x20bc>
   222b0:	cmp	r9, #0
   222b4:	beq	22400 <luaL_where@@Base+0x22fc>
   222b8:	tst	r8, #3
   222bc:	beq	22400 <luaL_where@@Base+0x22fc>
   222c0:	asr	r7, r7, #2
   222c4:	mov	r2, fp
   222c8:	mov	r1, ip
   222cc:	mov	r0, r5
   222d0:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   222d4:	b	22264 <luaL_where@@Base+0x2160>
   222d8:	cmp	r9, #0
   222dc:	bne	222c4 <luaL_where@@Base+0x21c0>
   222e0:	tst	r6, #67108864	; 0x4000000
   222e4:	ldrh	r7, [r3, lr]
   222e8:	beq	2244c <luaL_where@@Base+0x2348>
   222ec:	add	r9, r5, #204	; 0xcc
   222f0:	mov	r0, r3
   222f4:	mov	r1, r9
   222f8:	mov	r2, sl
   222fc:	str	r3, [sp, #12]
   22300:	bl	1cccc <_start@@Base+0x991c>
   22304:	ldr	r3, [sp, #12]
   22308:	subs	r8, r0, #0
   2230c:	orrne	r6, r6, #256	; 0x100
   22310:	bne	22334 <luaL_where@@Base+0x2230>
   22314:	mov	r1, r9
   22318:	mov	r0, r3
   2231c:	mov	r2, r7
   22320:	bl	1cccc <_start@@Base+0x991c>
   22324:	subs	r8, r0, #0
   22328:	beq	224a0 <luaL_where@@Base+0x239c>
   2232c:	orr	r6, r6, #256	; 0x100
   22330:	mov	r7, sl
   22334:	mov	r1, r7
   22338:	mov	r2, fp
   2233c:	mov	r0, r5
   22340:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22344:	mov	r2, #1
   22348:	mov	r1, r8
   2234c:	mov	r7, r0
   22350:	bic	r2, fp, r2, lsl r0
   22354:	mov	r0, r5
   22358:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   2235c:	orr	r6, r6, #33554432	; 0x2000000
   22360:	orr	r3, r6, r4, lsl #12
   22364:	ldr	r2, [r5, #128]	; 0x80
   22368:	orr	r3, r3, #25165824	; 0x1800000
   2236c:	orr	r3, r3, r0
   22370:	orr	r3, r3, r7, lsl #16
   22374:	sub	r1, r2, #4
   22378:	str	r1, [r5, #128]	; 0x80
   2237c:	str	r3, [r2, #-4]
   22380:	b	22244 <luaL_where@@Base+0x2140>
   22384:	ldrh	r2, [r8, #2]
   22388:	ldrh	ip, [r3, lr]
   2238c:	tst	r2, #32768	; 0x8000
   22390:	bne	22434 <luaL_where@@Base+0x2330>
   22394:	ldr	r7, [r3, r2, lsl #3]
   22398:	add	r7, r7, #16
   2239c:	rsb	r3, r1, #0
   223a0:	cmp	r7, r1
   223a4:	cmplt	r3, r7
   223a8:	blt	22478 <luaL_where@@Base+0x2374>
   223ac:	mov	r1, ip
   223b0:	mov	r2, fp
   223b4:	mov	r0, r5
   223b8:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   223bc:	mov	r2, #1
   223c0:	mov	r1, r7
   223c4:	bic	r2, fp, r2, lsl r0
   223c8:	mov	r8, r0
   223cc:	mov	r0, r5
   223d0:	bl	215b8 <luaL_where@@Base+0x14b4>
   223d4:	ldr	r3, [r5, #128]	; 0x80
   223d8:	cmp	sl, #0
   223dc:	orrne	r6, r6, #33554432	; 0x2000000
   223e0:	sub	r1, r3, #4
   223e4:	str	r1, [r5, #128]	; 0x80
   223e8:	orr	r2, r0, r4, lsl #12
   223ec:	orr	r2, r2, #25165824	; 0x1800000
   223f0:	orr	r2, r2, r8, lsl #16
   223f4:	orr	r2, r2, r6
   223f8:	str	r2, [r3, #-4]
   223fc:	b	22244 <luaL_where@@Base+0x2140>
   22400:	mov	r2, fp
   22404:	ldrh	r1, [r3, lr]
   22408:	mov	r0, r5
   2240c:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22410:	cmp	r9, #0
   22414:	moveq	r7, r8
   22418:	andeq	sl, r6, #67108864	; 0x4000000
   2241c:	beq	22488 <luaL_where@@Base+0x2384>
   22420:	cmp	r8, #0
   22424:	bge	22564 <luaL_where@@Base+0x2460>
   22428:	rsb	r7, r8, #0
   2242c:	asr	r7, r7, #2
   22430:	b	22268 <luaL_where@@Base+0x2164>
   22434:	tst	ip, #32768	; 0x8000
   22438:	bne	224cc <luaL_where@@Base+0x23c8>
   2243c:	ldr	r7, [r3, ip, lsl #3]
   22440:	mov	ip, r2
   22444:	add	r7, r7, #16
   22448:	b	2239c <luaL_where@@Base+0x2298>
   2244c:	mov	r1, r7
   22450:	mov	r2, fp
   22454:	mov	r0, r5
   22458:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   2245c:	mov	r2, #1
   22460:	mov	r1, sl
   22464:	mov	r7, r0
   22468:	bic	r2, fp, r2, lsl r0
   2246c:	mov	r0, r5
   22470:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22474:	b	22360 <luaL_where@@Base+0x225c>
   22478:	mov	r2, fp
   2247c:	mov	r1, ip
   22480:	mov	r0, r5
   22484:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22488:	cmp	sl, #0
   2248c:	bne	221ec <luaL_where@@Base+0x20e8>
   22490:	cmp	r7, #0
   22494:	bge	2220c <luaL_where@@Base+0x2108>
   22498:	rsb	r7, r7, #0
   2249c:	b	22210 <luaL_where@@Base+0x210c>
   224a0:	mov	r1, r7
   224a4:	mov	r2, fp
   224a8:	mov	r0, r5
   224ac:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   224b0:	mov	r2, #1
   224b4:	mov	r1, sl
   224b8:	mov	r7, r0
   224bc:	bic	r2, fp, r2, lsl r0
   224c0:	mov	r0, r5
   224c4:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   224c8:	b	2235c <luaL_where@@Base+0x2258>
   224cc:	mov	r1, ip
   224d0:	mov	r2, fp
   224d4:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   224d8:	mov	r3, #1
   224dc:	ldrh	r2, [r8, #2]
   224e0:	mov	r1, r9
   224e4:	lsl	r9, r4, #12
   224e8:	bic	r3, fp, r3, lsl r0
   224ec:	mov	r7, r0
   224f0:	mov	r0, r5
   224f4:	bl	21fec <luaL_where@@Base+0x1ee8>
   224f8:	cmp	sl, #0
   224fc:	mov	r8, r0
   22500:	bne	22540 <luaL_where@@Base+0x243c>
   22504:	ldr	r0, [r5, #128]	; 0x80
   22508:	orr	r3, r9, r4, lsl #16
   2250c:	orr	r3, r3, #29360128	; 0x1c00000
   22510:	orr	r3, r3, #256	; 0x100
   22514:	sub	r1, r0, #4
   22518:	orr	r2, r3, r6
   2251c:	str	r2, [r0, #-4]
   22520:	eor	r3, r8, #-536870912	; 0xe0000000
   22524:	eor	r3, r3, #8388608	; 0x800000
   22528:	orr	r3, r3, r7, lsl #16
   2252c:	orr	r3, r3, r9
   22530:	sub	r2, r1, #4
   22534:	str	r2, [r5, #128]	; 0x80
   22538:	str	r3, [r1, #-4]
   2253c:	b	22244 <luaL_where@@Base+0x2140>
   22540:	mov	r3, #16
   22544:	mov	r1, r6
   22548:	str	r3, [sp]
   2254c:	mov	r2, r4
   22550:	mov	r3, r4
   22554:	mov	r0, r5
   22558:	bl	16dbc <_start@@Base+0x3a0c>
   2255c:	ldr	r1, [r5, #128]	; 0x80
   22560:	b	22520 <luaL_where@@Base+0x241c>
   22564:	asr	r7, r8, #2
   22568:	b	22264 <luaL_where@@Base+0x2160>
   2256c:	ldrb	r3, [r1, #4]
   22570:	push	{r4, r5, r6, lr}
   22574:	mov	r4, r2
   22578:	and	r2, r3, #31
   2257c:	mov	r5, r1
   22580:	sub	r2, r2, #13
   22584:	ldr	ip, [pc, #108]	; 225f8 <luaL_where@@Base+0x24f4>
   22588:	ldr	r1, [pc, #108]	; 225fc <luaL_where@@Base+0x24f8>
   2258c:	cmp	r2, #1
   22590:	sub	sp, sp, #8
   22594:	movls	r2, ip
   22598:	movhi	r2, r1
   2259c:	ldrh	r1, [r5, #2]
   225a0:	mov	r6, r0
   225a4:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   225a8:	ldrb	r3, [r5, #4]
   225ac:	ldr	ip, [pc, #72]	; 225fc <luaL_where@@Base+0x24f8>
   225b0:	and	r3, r3, #31
   225b4:	sub	r3, r3, #13
   225b8:	uxtb	r3, r3
   225bc:	cmp	r3, #5
   225c0:	movhi	r1, #-469762048	; 0xe4000000
   225c4:	ldrls	r1, [pc, #52]	; 22600 <luaL_where@@Base+0x24fc>
   225c8:	mov	r2, r0
   225cc:	mov	r0, #1
   225d0:	addls	r3, r1, r3, lsl #2
   225d4:	bic	ip, ip, r0, lsl r2
   225d8:	ldrls	r1, [r3, #1464]	; 0x5b8
   225dc:	mov	r0, r6
   225e0:	ldrh	r3, [r5]
   225e4:	str	r4, [sp, #4]
   225e8:	str	ip, [sp]
   225ec:	bl	22124 <luaL_where@@Base+0x2020>
   225f0:	add	sp, sp, #8
   225f4:	pop	{r4, r5, r6, pc}
   225f8:			; <UNDEFINED> instruction: 0xffff0000
   225fc:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   22600:			; <UNDEFINED> instruction: 0x0006ecb8
   22604:	push	{r4, lr}
   22608:	mov	r4, r0
   2260c:	ldr	r0, [r0, #136]	; 0x88
   22610:	add	r0, r0, r1, lsl #3
   22614:	ldrb	lr, [r0, #6]
   22618:	tst	lr, #128	; 0x80
   2261c:	moveq	ip, lr
   22620:	bne	2263c <luaL_where@@Base+0x2538>
   22624:	ldr	r3, [r4, #152]	; 0x98
   22628:	mov	r2, #1
   2262c:	mov	r0, ip
   22630:	bic	r3, r3, r2, lsl ip
   22634:	str	r3, [r4, #152]	; 0x98
   22638:	pop	{r4, pc}
   2263c:	cmp	lr, #252	; 0xfc
   22640:	bls	22658 <luaL_where@@Base+0x2554>
   22644:	ldr	ip, [r4, #208]	; 0xd0
   22648:	cmp	ip, r1
   2264c:	mvnls	ip, r2, lsl #25
   22650:	mvnls	ip, ip, lsr #25
   22654:	strbls	ip, [r0, #6]
   22658:	mov	r2, r3
   2265c:	mov	r0, r4
   22660:	bl	21b9c <luaL_where@@Base+0x1a98>
   22664:	mov	ip, r0
   22668:	b	22624 <luaL_where@@Base+0x2520>
   2266c:	push	{r4, r5, r6, r7, r8, lr}
   22670:	mov	r8, r1
   22674:	ldrh	r1, [r1]
   22678:	ldrh	ip, [r8, #2]
   2267c:	ldr	r3, [r0, #136]	; 0x88
   22680:	mov	r6, r0
   22684:	add	lr, r3, r1, lsl #3
   22688:	add	r3, r3, ip, lsl #3
   2268c:	ldrb	r4, [lr, #6]
   22690:	ldrb	r5, [r3, #6]
   22694:	mov	r7, r2
   22698:	tst	r4, #128	; 0x80
   2269c:	sxtb	lr, r5
   226a0:	bne	226d0 <luaL_where@@Base+0x25cc>
   226a4:	mov	r1, #1
   226a8:	ldr	r3, [r0, #152]	; 0x98
   226ac:	mvn	r2, r1, lsl r4
   226b0:	cmp	lr, #0
   226b4:	and	r3, r3, r2
   226b8:	str	r3, [r0, #152]	; 0x98
   226bc:	bicge	r3, r3, r1, lsl r5
   226c0:	strge	r3, [r0, #152]	; 0x98
   226c4:	blt	22758 <luaL_where@@Base+0x2654>
   226c8:	orr	r0, r4, r5, lsl #8
   226cc:	pop	{r4, r5, r6, r7, r8, pc}
   226d0:	cmp	lr, #0
   226d4:	bge	22730 <luaL_where@@Base+0x262c>
   226d8:	cmp	r5, #252	; 0xfc
   226dc:	bls	22708 <luaL_where@@Base+0x2604>
   226e0:	bl	21b9c <luaL_where@@Base+0x1a98>
   226e4:	mov	r2, #1
   226e8:	ldrh	r1, [r8, #2]
   226ec:	mov	r4, r0
   226f0:	mov	r0, r6
   226f4:	bic	r2, r7, r2, lsl r4
   226f8:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   226fc:	mov	r5, r0
   22700:	orr	r0, r4, r5, lsl #8
   22704:	pop	{r4, r5, r6, r7, r8, pc}
   22708:	mov	r1, ip
   2270c:	bl	21b9c <luaL_where@@Base+0x1a98>
   22710:	mov	r2, #1
   22714:	ldrh	r1, [r8]
   22718:	mov	r5, r0
   2271c:	mov	r0, r6
   22720:	bic	r2, r7, r2, lsl r5
   22724:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22728:	mov	r4, r0
   2272c:	b	226c8 <luaL_where@@Base+0x25c4>
   22730:	mov	r2, #1
   22734:	ldr	r3, [r0, #152]	; 0x98
   22738:	mvn	r2, r2, lsl r5
   2273c:	and	r3, r3, r2
   22740:	str	r3, [r0, #152]	; 0x98
   22744:	and	r2, r2, r7
   22748:	bl	21b9c <luaL_where@@Base+0x1a98>
   2274c:	mov	r4, r0
   22750:	orr	r0, r4, r5, lsl #8
   22754:	pop	{r4, r5, r6, r7, r8, pc}
   22758:	and	r2, r2, r7
   2275c:	mov	r1, ip
   22760:	bl	21b9c <luaL_where@@Base+0x1a98>
   22764:	mov	r5, r0
   22768:	orr	r0, r4, r5, lsl #8
   2276c:	pop	{r4, r5, r6, r7, r8, pc}
   22770:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22774:	mov	r5, r1
   22778:	ldrb	r3, [r1, #4]
   2277c:	mov	r4, r0
   22780:	ldrb	r2, [r1, #5]
   22784:	and	r3, r3, #31
   22788:	cmp	r3, #14
   2278c:	beq	2288c <luaL_where@@Base+0x2788>
   22790:	ldr	r3, [pc, #896]	; 22b18 <luaL_where@@Base+0x2a14>
   22794:	ldrh	r9, [r1, #2]
   22798:	add	r3, r3, r2
   2279c:	ldr	r2, [pc, #888]	; 22b1c <luaL_where@@Base+0x2a18>
   227a0:	ldrb	r6, [r3, #1488]	; 0x5d0
   227a4:	cmp	r9, r2
   227a8:	ldrh	sl, [r1]
   227ac:	and	r6, r6, #15
   227b0:	mov	r7, r6
   227b4:	add	fp, r0, #136	; 0x88
   227b8:	bhi	22854 <luaL_where@@Base+0x2750>
   227bc:	ldr	r3, [r4, #136]	; 0x88
   227c0:	ldr	r8, [r3, r9, lsl #3]
   227c4:	cmp	r8, #0
   227c8:	bne	2291c <luaL_where@@Base+0x2818>
   227cc:	lsl	r1, sl, #3
   227d0:	add	r2, r3, r1
   227d4:	add	r0, r2, #8
   227d8:	cmp	r5, r0
   227dc:	beq	2294c <luaL_where@@Base+0x2848>
   227e0:	ldr	r5, [pc, #824]	; 22b20 <luaL_where@@Base+0x2a1c>
   227e4:	mov	r1, sl
   227e8:	mov	r2, r5
   227ec:	mov	r0, r4
   227f0:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   227f4:	ldr	sl, [pc, #808]	; 22b24 <luaL_where@@Base+0x2a20>
   227f8:	mov	r3, #1
   227fc:	mov	r2, r9
   22800:	mov	r1, sl
   22804:	bic	r3, r5, r3, lsl r0
   22808:	mov	r6, r0
   2280c:	mov	r0, r4
   22810:	bl	21fec <luaL_where@@Base+0x1ee8>
   22814:	mov	r1, r7
   22818:	mov	r5, r0
   2281c:	mov	r0, r4
   22820:	bl	17a3c <_start@@Base+0x468c>
   22824:	ldr	r3, [r4, #128]	; 0x80
   22828:	eor	r5, r5, sl
   2282c:	cmp	r8, #0
   22830:	orr	r5, r5, r6, lsl #16
   22834:	sub	r2, r3, #4
   22838:	str	r2, [r4, #128]	; 0x80
   2283c:	str	r5, [r3, #-4]
   22840:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22844:	sub	r7, r7, #2
   22848:	cmp	r7, #7
   2284c:	strhi	r2, [r4, #248]	; 0xf8
   22850:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22854:	cmp	sl, r2
   22858:	bhi	22924 <luaL_where@@Base+0x2820>
   2285c:	cmp	r6, #9
   22860:	eorhi	r7, r6, #7
   22864:	bhi	22870 <luaL_where@@Base+0x276c>
   22868:	cmp	r6, #1
   2286c:	eorhi	r7, r6, #11
   22870:	cmp	sl, #32768	; 0x8000
   22874:	mov	r3, r9
   22878:	bcc	22940 <luaL_where@@Base+0x283c>
   2287c:	mov	r9, sl
   22880:	mov	r8, #0
   22884:	mov	sl, r3
   22888:	b	227e0 <luaL_where@@Base+0x26dc>
   2288c:	eor	r3, r2, r2, lsr #2
   22890:	bic	r3, r3, r2, lsr #3
   22894:	tst	r3, #1
   22898:	bne	22960 <luaL_where@@Base+0x285c>
   2289c:	ldrh	r3, [r1, #2]
   228a0:	tst	r3, #32768	; 0x8000
   228a4:	bne	228bc <luaL_where@@Base+0x27b8>
   228a8:	ldr	r2, [r0, #136]	; 0x88
   228ac:	add	r3, r2, r3, lsl #3
   228b0:	ldrd	r2, [r3, #8]
   228b4:	orrs	r3, r2, r3
   228b8:	beq	22a38 <luaL_where@@Base+0x2934>
   228bc:	ldr	r2, [pc, #612]	; 22b28 <luaL_where@@Base+0x2a24>
   228c0:	mov	r1, r5
   228c4:	mov	r0, r4
   228c8:	bl	2266c <luaL_where@@Base+0x2568>
   228cc:	ldr	r7, [pc, #600]	; 22b2c <luaL_where@@Base+0x2a28>
   228d0:	lsr	r3, r0, #8
   228d4:	and	r3, r3, #15
   228d8:	and	r6, r0, #15
   228dc:	orr	r7, r3, r7
   228e0:	ldrb	r2, [r5, #5]
   228e4:	ldr	r3, [pc, #556]	; 22b18 <luaL_where@@Base+0x2a14>
   228e8:	mov	r0, r4
   228ec:	add	r3, r3, r2
   228f0:	orr	r6, r7, r6, lsl #12
   228f4:	ldrb	r1, [r3, #1488]	; 0x5d0
   228f8:	lsr	r1, r1, #4
   228fc:	bl	17a3c <_start@@Base+0x468c>
   22900:	ldr	r3, [r4, #128]	; 0x80
   22904:	ldr	r1, [pc, #548]	; 22b30 <luaL_where@@Base+0x2a2c>
   22908:	sub	r2, r3, #8
   2290c:	str	r1, [r3, #-4]
   22910:	str	r2, [r4, #128]	; 0x80
   22914:	str	r6, [r3, #-8]
   22918:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2291c:	mov	r8, #0
   22920:	b	227e0 <luaL_where@@Base+0x26dc>
   22924:	mov	r2, r9
   22928:	mov	r1, sl
   2292c:	mov	r0, fp
   22930:	bl	1cd24 <_start@@Base+0x9974>
   22934:	subs	r8, r0, #0
   22938:	beq	227e0 <luaL_where@@Base+0x26dc>
   2293c:	b	2285c <luaL_where@@Base+0x2758>
   22940:	mov	r9, sl
   22944:	mov	sl, r3
   22948:	b	227bc <luaL_where@@Base+0x26b8>
   2294c:	ldrb	r0, [r2, #5]
   22950:	cmp	r0, #33	; 0x21
   22954:	beq	22980 <luaL_where@@Base+0x287c>
   22958:	mov	r8, #1
   2295c:	b	227e0 <luaL_where@@Base+0x26dc>
   22960:	ldr	r2, [pc, #448]	; 22b28 <luaL_where@@Base+0x2a24>
   22964:	bl	2266c <luaL_where@@Base+0x2568>
   22968:	ldr	r7, [pc, #444]	; 22b2c <luaL_where@@Base+0x2a28>
   2296c:	lsr	r6, r0, #8
   22970:	and	r0, r0, #15
   22974:	and	r6, r6, #15
   22978:	orr	r7, r0, r7
   2297c:	b	228e0 <luaL_where@@Base+0x27dc>
   22980:	ldrsb	r0, [r2, #6]
   22984:	cmp	r0, #0
   22988:	bge	22958 <luaL_where@@Base+0x2854>
   2298c:	ldrb	r5, [r2, #7]
   22990:	cmp	r5, #0
   22994:	bne	22958 <luaL_where@@Base+0x2854>
   22998:	ldrh	r6, [r2, #2]
   2299c:	ldr	r2, [pc, #376]	; 22b1c <luaL_where@@Base+0x2a18>
   229a0:	ldrh	r8, [r3, r1]
   229a4:	cmp	r6, r2
   229a8:	bls	22a5c <luaL_where@@Base+0x2958>
   229ac:	cmp	r8, r2
   229b0:	bls	22a50 <luaL_where@@Base+0x294c>
   229b4:	mov	r0, fp
   229b8:	mov	r2, r6
   229bc:	mov	r1, r8
   229c0:	bl	1cd24 <_start@@Base+0x9974>
   229c4:	cmp	r0, #0
   229c8:	beq	22a84 <luaL_where@@Base+0x2980>
   229cc:	cmp	r7, #10
   229d0:	beq	22adc <luaL_where@@Base+0x29d8>
   229d4:	mov	r3, r6
   229d8:	mov	r6, r8
   229dc:	mov	r8, r3
   229e0:	cmp	r7, #11
   229e4:	beq	22ad4 <luaL_where@@Base+0x29d0>
   229e8:	cmp	r7, #1
   229ec:	bhi	22958 <luaL_where@@Base+0x2854>
   229f0:	mov	r1, r8
   229f4:	ldr	r2, [pc, #292]	; 22b20 <luaL_where@@Base+0x2a1c>
   229f8:	mov	r0, r4
   229fc:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22a00:	cmp	r5, #0
   22a04:	mov	r8, r0
   22a08:	beq	22ab0 <luaL_where@@Base+0x29ac>
   22a0c:	mov	r1, r7
   22a10:	mov	r0, r4
   22a14:	bl	17a3c <_start@@Base+0x468c>
   22a18:	eor	r5, r5, #-520093696	; 0xe1000000
   22a1c:	ldr	r3, [r4, #128]	; 0x80
   22a20:	eor	r5, r5, #1048576	; 0x100000
   22a24:	orr	r5, r5, r8, lsl #16
   22a28:	sub	r2, r3, #4
   22a2c:	str	r2, [r4, #128]	; 0x80
   22a30:	str	r5, [r3, #-4]
   22a34:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22a38:	ldr	r2, [pc, #232]	; 22b28 <luaL_where@@Base+0x2a24>
   22a3c:	ldrh	r1, [r1]
   22a40:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22a44:	ldr	r7, [pc, #232]	; 22b34 <luaL_where@@Base+0x2a30>
   22a48:	and	r6, r0, #15
   22a4c:	b	228e0 <luaL_where@@Base+0x27dc>
   22a50:	mov	r2, r6
   22a54:	mov	r6, r8
   22a58:	mov	r8, r2
   22a5c:	ldr	r1, [r3, r6, lsl #3]
   22a60:	mov	r0, #-536870912	; 0xe0000000
   22a64:	bl	16d00 <_start@@Base+0x3950>
   22a68:	tst	r0, #29360128	; 0x1c00000
   22a6c:	mov	r5, r0
   22a70:	bne	22958 <luaL_where@@Base+0x2854>
   22a74:	cmp	r7, #10
   22a78:	bne	229e0 <luaL_where@@Base+0x28dc>
   22a7c:	mov	r7, #5
   22a80:	b	229f0 <luaL_where@@Base+0x28ec>
   22a84:	cmp	r7, #10
   22a88:	beq	22afc <luaL_where@@Base+0x29f8>
   22a8c:	cmp	r7, #11
   22a90:	movne	r5, #0
   22a94:	bne	229e8 <luaL_where@@Base+0x28e4>
   22a98:	mov	r1, r8
   22a9c:	ldr	r2, [pc, #124]	; 22b20 <luaL_where@@Base+0x2a1c>
   22aa0:	mov	r0, r4
   22aa4:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22aa8:	mov	r7, #4
   22aac:	mov	r8, r0
   22ab0:	mov	r1, #1
   22ab4:	ldr	r3, [pc, #100]	; 22b20 <luaL_where@@Base+0x2a1c>
   22ab8:	mov	r2, r6
   22abc:	bic	r3, r3, r1, lsl r8
   22ac0:	mov	r0, r4
   22ac4:	mov	r1, #0
   22ac8:	bl	21fec <luaL_where@@Base+0x1ee8>
   22acc:	mov	r5, r0
   22ad0:	b	22a0c <luaL_where@@Base+0x2908>
   22ad4:	mov	r7, #4
   22ad8:	b	229f0 <luaL_where@@Base+0x28ec>
   22adc:	mov	r1, r6
   22ae0:	ldr	r2, [pc, #56]	; 22b20 <luaL_where@@Base+0x2a1c>
   22ae4:	mov	r0, r4
   22ae8:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22aec:	mov	r6, r8
   22af0:	mov	r7, #5
   22af4:	mov	r8, r0
   22af8:	b	22ab0 <luaL_where@@Base+0x29ac>
   22afc:	mov	r1, r8
   22b00:	ldr	r2, [pc, #24]	; 22b20 <luaL_where@@Base+0x2a1c>
   22b04:	mov	r0, r4
   22b08:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22b0c:	mov	r7, #5
   22b10:	mov	r8, r0
   22b14:	b	22ab0 <luaL_where@@Base+0x29ac>
   22b18:			; <UNDEFINED> instruction: 0x0006ecb8
   22b1c:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   22b20:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   22b24:	cmp	r0, r0
   22b28:			; <UNDEFINED> instruction: 0xffff0000
   22b2c:	vcmp.f64	d0, d0
   22b30:	vmrs	APSR_nzcv, fpscr
   22b34:	vcmp.f64	d0, #0.0
   22b38:	ldr	r3, [r0, #144]	; 0x90
   22b3c:	push	{r4, lr}
   22b40:	ands	r3, r1, r3
   22b44:	mov	r4, r0
   22b48:	clzne	r3, r3
   22b4c:	eorne	r3, r3, #31
   22b50:	beq	22b6c <luaL_where@@Base+0x2a68>
   22b54:	ldr	r2, [r4, #148]	; 0x94
   22b58:	mov	r1, #1
   22b5c:	mov	r0, r3
   22b60:	orr	r3, r2, r1, lsl r3
   22b64:	str	r3, [r4, #148]	; 0x94
   22b68:	pop	{r4, pc}
   22b6c:	bl	21328 <luaL_where@@Base+0x1224>
   22b70:	mov	r3, r0
   22b74:	b	22b54 <luaL_where@@Base+0x2a50>
   22b78:	push	{r4, r5, r6, r7, r8, lr}
   22b7c:	mov	r4, #1
   22b80:	mov	r5, r2
   22b84:	lsl	r4, r4, r2
   22b88:	sub	sp, sp, #8
   22b8c:	mov	r2, r4
   22b90:	mov	r8, r0
   22b94:	bl	215b8 <luaL_where@@Base+0x14b4>
   22b98:	cmp	r5, r0
   22b9c:	beq	22bd0 <luaL_where@@Base+0x2acc>
   22ba0:	add	r7, sp, #8
   22ba4:	mov	r3, #19
   22ba8:	mov	r6, r0
   22bac:	mov	r1, r4
   22bb0:	mov	r0, r8
   22bb4:	strb	r3, [r7, #-4]!
   22bb8:	bl	22b38 <luaL_where@@Base+0x2a34>
   22bbc:	mov	r3, r6
   22bc0:	mov	r2, r5
   22bc4:	mov	r1, r7
   22bc8:	mov	r0, r8
   22bcc:	bl	1ca38 <_start@@Base+0x9688>
   22bd0:	add	sp, sp, #8
   22bd4:	pop	{r4, r5, r6, r7, r8, pc}
   22bd8:	push	{r4, r5, r6, lr}
   22bdc:	mov	r6, r1
   22be0:	ldrb	r4, [r1, #6]
   22be4:	sub	sp, sp, #8
   22be8:	mov	r5, r0
   22bec:	tst	r4, #128	; 0x80
   22bf0:	bne	22c2c <luaL_where@@Base+0x2b28>
   22bf4:	mov	r3, #1
   22bf8:	ldr	r1, [r0, #144]	; 0x90
   22bfc:	lsl	r3, r3, r4
   22c00:	ldr	r2, [r0, #148]	; 0x94
   22c04:	orr	r1, r1, r3
   22c08:	orr	r3, r2, r3
   22c0c:	str	r3, [r0, #148]	; 0x94
   22c10:	ldrb	r3, [r6, #7]
   22c14:	str	r1, [r0, #144]	; 0x90
   22c18:	cmp	r3, #0
   22c1c:	bne	22c6c <luaL_where@@Base+0x2b68>
   22c20:	mov	r0, r4
   22c24:	add	sp, sp, #8
   22c28:	pop	{r4, r5, r6, pc}
   22c2c:	cmp	r4, #252	; 0xfc
   22c30:	bhi	22c4c <luaL_where@@Base+0x2b48>
   22c34:	ldr	r3, [r0, #144]	; 0x90
   22c38:	and	r4, r4, #127	; 0x7f
   22c3c:	and	r3, r3, r2
   22c40:	lsr	r3, r3, r4
   22c44:	tst	r3, #1
   22c48:	bne	22c94 <luaL_where@@Base+0x2b90>
   22c4c:	mov	r1, r2
   22c50:	mov	r0, r5
   22c54:	bl	22b38 <luaL_where@@Base+0x2a34>
   22c58:	mov	r4, r0
   22c5c:	ldrb	r3, [r6, #7]
   22c60:	strb	r4, [r6, #6]
   22c64:	cmp	r3, #0
   22c68:	beq	22c20 <luaL_where@@Base+0x2b1c>
   22c6c:	lsl	r3, r3, #2
   22c70:	str	r3, [sp]
   22c74:	mov	r0, r5
   22c78:	add	r1, r6, #4
   22c7c:	mov	r3, #13
   22c80:	mov	r2, r4
   22c84:	bl	1cb2c <_start@@Base+0x977c>
   22c88:	mov	r0, r4
   22c8c:	add	sp, sp, #8
   22c90:	pop	{r4, r5, r6, pc}
   22c94:	ldr	r3, [r0, #148]	; 0x94
   22c98:	mov	r2, #1
   22c9c:	orr	r3, r3, r2, lsl r4
   22ca0:	str	r3, [r0, #148]	; 0x94
   22ca4:	b	22c5c <luaL_where@@Base+0x2b58>
   22ca8:	push	{r4, r5, r6, r7, r8, lr}
   22cac:	mov	r4, #1
   22cb0:	mov	r5, r2
   22cb4:	lsl	r4, r4, r2
   22cb8:	mov	r2, r4
   22cbc:	mov	r6, r0
   22cc0:	mov	r7, r1
   22cc4:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   22cc8:	cmp	r5, r0
   22ccc:	popeq	{r4, r5, r6, r7, r8, pc}
   22cd0:	ldr	r2, [r6, #148]	; 0x94
   22cd4:	mov	r3, r5
   22cd8:	orr	r4, r2, r4
   22cdc:	add	r1, r7, #4
   22ce0:	mov	r2, r0
   22ce4:	str	r4, [r6, #148]	; 0x94
   22ce8:	mov	r0, r6
   22cec:	pop	{r4, r5, r6, r7, r8, lr}
   22cf0:	b	1ca38 <_start@@Base+0x9688>
   22cf4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22cf8:	mov	r5, r2
   22cfc:	ldr	r2, [pc, #216]	; 22ddc <luaL_where@@Base+0x2cd8>
   22d00:	ldrh	r8, [r1, #2]
   22d04:	mov	r7, r1
   22d08:	ldrh	r9, [r1]
   22d0c:	mov	r6, r0
   22d10:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   22d14:	ldr	r3, [pc, #196]	; 22de0 <luaL_where@@Base+0x2cdc>
   22d18:	cmp	r8, r3
   22d1c:	mov	sl, r0
   22d20:	bls	22d44 <luaL_where@@Base+0x2c40>
   22d24:	cmp	r9, r3
   22d28:	bhi	22dac <luaL_where@@Base+0x2ca8>
   22d2c:	bic	r3, r5, #9437184	; 0x900000
   22d30:	cmn	r3, #532676608	; 0x1fc00000
   22d34:	mov	r3, r9
   22d38:	eoreq	r5, r5, #2097152	; 0x200000
   22d3c:	mov	r9, r8
   22d40:	mov	r8, r3
   22d44:	ldr	fp, [pc, #144]	; 22ddc <luaL_where@@Base+0x2cd8>
   22d48:	mov	r1, r9
   22d4c:	mov	r3, fp
   22d50:	mov	r2, sl
   22d54:	mov	r0, r6
   22d58:	bl	22604 <luaL_where@@Base+0x2500>
   22d5c:	mov	r3, #1
   22d60:	mov	r2, r8
   22d64:	mov	r1, r5
   22d68:	bic	r3, fp, r3, lsl r0
   22d6c:	mov	r4, r0
   22d70:	mov	r0, r6
   22d74:	bl	21fec <luaL_where@@Base+0x1ee8>
   22d78:	ldrsb	r3, [r7, #4]
   22d7c:	cmp	r3, #0
   22d80:	mov	r8, r0
   22d84:	blt	22dc8 <luaL_where@@Base+0x2cc4>
   22d88:	ldr	r3, [r6, #128]	; 0x80
   22d8c:	lsl	r4, r4, #16
   22d90:	orr	r4, r4, sl, lsl #12
   22d94:	eor	r5, r5, r8
   22d98:	orr	r4, r4, r5
   22d9c:	sub	r2, r3, #4
   22da0:	str	r2, [r6, #128]	; 0x80
   22da4:	str	r4, [r3, #-4]
   22da8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22dac:	mov	r2, r8
   22db0:	mov	r1, r9
   22db4:	add	r0, r6, #136	; 0x88
   22db8:	bl	1cd24 <_start@@Base+0x9974>
   22dbc:	cmp	r0, #0
   22dc0:	beq	22d44 <luaL_where@@Base+0x2c40>
   22dc4:	b	22d2c <luaL_where@@Base+0x2c28>
   22dc8:	mov	r1, #6
   22dcc:	mov	r0, r6
   22dd0:	bl	17a3c <_start@@Base+0x468c>
   22dd4:	orr	r5, r5, #1048576	; 0x100000
   22dd8:	b	22d88 <luaL_where@@Base+0x2c84>
   22ddc:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   22de0:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   22de4:	push	{r4, r5, r6, r7, r8, lr}
   22de8:	mov	r4, r2
   22dec:	ldr	r7, [pc, #68]	; 22e38 <luaL_where@@Base+0x2d34>
   22df0:	mov	r5, r0
   22df4:	mov	r2, r7
   22df8:	mov	r8, r1
   22dfc:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   22e00:	mov	r3, r7
   22e04:	ldrh	r1, [r8]
   22e08:	orr	r4, r4, #33554432	; 0x2000000
   22e0c:	mov	r2, r0
   22e10:	mov	r6, r0
   22e14:	mov	r0, r5
   22e18:	bl	22604 <luaL_where@@Base+0x2500>
   22e1c:	ldr	r3, [r5, #128]	; 0x80
   22e20:	orr	r4, r4, r6, lsl #12
   22e24:	sub	r2, r3, #4
   22e28:	str	r2, [r5, #128]	; 0x80
   22e2c:	orr	r4, r4, r0, lsl #16
   22e30:	str	r4, [r3, #-4]
   22e34:	pop	{r4, r5, r6, r7, r8, pc}
   22e38:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   22e3c:	push	{r4, r5, r6, r7, r8, lr}
   22e40:	mov	r6, r1
   22e44:	ldr	r3, [r0, #248]	; 0xf8
   22e48:	ldr	r1, [r0, #128]	; 0x80
   22e4c:	mov	r4, r0
   22e50:	cmp	r3, r1
   22e54:	mov	r5, r2
   22e58:	beq	22ec0 <luaL_where@@Base+0x2dbc>
   22e5c:	ldrh	r3, [r6, #2]
   22e60:	cmp	r3, #0
   22e64:	beq	22e7c <luaL_where@@Base+0x2d78>
   22e68:	mov	r2, r5
   22e6c:	mov	r1, r6
   22e70:	mov	r0, r4
   22e74:	pop	{r4, r5, r6, r7, r8, lr}
   22e78:	b	22cf4 <luaL_where@@Base+0x2bf0>
   22e7c:	ldr	r2, [pc, #156]	; 22f20 <luaL_where@@Base+0x2e1c>
   22e80:	mov	r1, r6
   22e84:	mov	r0, r4
   22e88:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   22e8c:	ldrh	r2, [r6]
   22e90:	ldr	r3, [pc, #136]	; 22f20 <luaL_where@@Base+0x2e1c>
   22e94:	mov	r1, r5
   22e98:	mov	r7, r0
   22e9c:	mov	r0, r4
   22ea0:	bl	21fec <luaL_where@@Base+0x1ee8>
   22ea4:	ldr	r3, [r4, #128]	; 0x80
   22ea8:	sub	r2, r3, #4
   22eac:	str	r2, [r4, #128]	; 0x80
   22eb0:	eor	r0, r0, r5
   22eb4:	orr	r0, r0, r7, lsl #12
   22eb8:	str	r0, [r3, #-4]
   22ebc:	pop	{r4, r5, r6, r7, r8, pc}
   22ec0:	ldr	r2, [r3, #4]
   22ec4:	mov	r1, #0
   22ec8:	str	r1, [r0, #248]	; 0xf8
   22ecc:	lsr	r1, r2, #28
   22ed0:	cmp	r1, #1
   22ed4:	addls	r3, r3, #4
   22ed8:	strls	r3, [r0, #128]	; 0x80
   22edc:	orrls	r5, r5, #1048576	; 0x100000
   22ee0:	bls	22e5c <luaL_where@@Base+0x2d58>
   22ee4:	cmp	r1, #10
   22ee8:	beq	22f08 <luaL_where@@Base+0x2e04>
   22eec:	cmp	r1, #11
   22ef0:	eoreq	r2, r2, #-268435456	; 0xf0000000
   22ef4:	addeq	r1, r3, #4
   22ef8:	streq	r1, [r0, #128]	; 0x80
   22efc:	orreq	r5, r5, #1048576	; 0x100000
   22f00:	streq	r2, [r3, #4]
   22f04:	b	22e5c <luaL_where@@Base+0x2d58>
   22f08:	eor	r2, r2, #-268435456	; 0xf0000000
   22f0c:	add	r1, r3, #4
   22f10:	str	r1, [r0, #128]	; 0x80
   22f14:	orr	r5, r5, #1048576	; 0x100000
   22f18:	str	r2, [r3, #4]
   22f1c:	b	22e5c <luaL_where@@Base+0x2d58>
   22f20:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   22f24:	ldrsh	r3, [r1, #2]
   22f28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22f2c:	mov	r5, r1
   22f30:	cmp	r3, #0
   22f34:	lsl	r7, r2, #5
   22f38:	mov	r4, r0
   22f3c:	blt	22f98 <luaL_where@@Base+0x2e94>
   22f40:	ldr	r2, [pc, #176]	; 22ff8 <luaL_where@@Base+0x2ef4>
   22f44:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   22f48:	ldr	r2, [pc, #168]	; 22ff8 <luaL_where@@Base+0x2ef4>
   22f4c:	ldrh	r1, [r5]
   22f50:	mov	r6, r0
   22f54:	mov	r0, r4
   22f58:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22f5c:	ldrh	r1, [r5, #2]
   22f60:	ldr	r3, [r4, #136]	; 0x88
   22f64:	orr	r2, r7, #-520093696	; 0xe1000000
   22f68:	orr	r2, r2, #10485760	; 0xa00000
   22f6c:	ldr	r3, [r3, r1, lsl #3]
   22f70:	ldr	r1, [r4, #128]	; 0x80
   22f74:	lsl	r3, r3, #7
   22f78:	and	r3, r3, #3968	; 0xf80
   22f7c:	orr	r3, r3, r2
   22f80:	sub	r2, r1, #4
   22f84:	str	r2, [r4, #128]	; 0x80
   22f88:	orr	r0, r3, r0
   22f8c:	orr	r0, r0, r6, lsl #12
   22f90:	str	r0, [r1, #-4]
   22f94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22f98:	ldr	r6, [pc, #88]	; 22ff8 <luaL_where@@Base+0x2ef4>
   22f9c:	mov	r2, r6
   22fa0:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   22fa4:	mov	r2, r6
   22fa8:	ldrh	r1, [r5]
   22fac:	mov	r8, r0
   22fb0:	mov	r0, r4
   22fb4:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22fb8:	mov	r2, #1
   22fbc:	ldrh	r1, [r5, #2]
   22fc0:	bic	r2, r6, r2, lsl r0
   22fc4:	mov	r9, r0
   22fc8:	mov	r0, r4
   22fcc:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   22fd0:	ldr	r2, [pc, #36]	; 22ffc <luaL_where@@Base+0x2ef8>
   22fd4:	ldr	r3, [r4, #128]	; 0x80
   22fd8:	orr	r2, r7, r2
   22fdc:	orr	r2, r2, r9
   22fe0:	sub	r1, r3, #4
   22fe4:	str	r1, [r4, #128]	; 0x80
   22fe8:	orr	r2, r2, r0, lsl #8
   22fec:	orr	r2, r2, r8, lsl #12
   22ff0:	str	r2, [r3, #-4]
   22ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22ff8:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   22ffc:	lsl	r0, r0, r0
   23000:	push	{r4, r5, r6, r7, r8, lr}
   23004:	mov	r6, r2
   23008:	ldr	r7, [pc, #84]	; 23064 <luaL_where@@Base+0x2f60>
   2300c:	mov	r5, r0
   23010:	mov	r2, r7
   23014:	mov	r8, r1
   23018:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   2301c:	mov	r2, r7
   23020:	mov	r1, r8
   23024:	mov	r4, r0
   23028:	mov	r0, r5
   2302c:	bl	2266c <luaL_where@@Base+0x2568>
   23030:	lsl	r4, r4, #12
   23034:	ldr	r2, [r5, #128]	; 0x80
   23038:	uxth	r4, r4
   2303c:	lsl	r3, r0, #20
   23040:	orr	r4, r4, r3, lsr #28
   23044:	lsl	r3, r0, #16
   23048:	and	r3, r3, #983040	; 0xf0000
   2304c:	orr	r0, r4, r6
   23050:	orr	r0, r0, r3
   23054:	sub	r3, r2, #4
   23058:	str	r3, [r5, #128]	; 0x80
   2305c:	str	r0, [r2, #-4]
   23060:	pop	{r4, r5, r6, r7, r8, pc}
   23064:			; <UNDEFINED> instruction: 0xffff0000
   23068:	push	{r4, r5, r6, r7, r8, lr}
   2306c:	mov	r7, r2
   23070:	ldr	r6, [pc, #76]	; 230c4 <luaL_where@@Base+0x2fc0>
   23074:	mov	r5, r0
   23078:	mov	r2, r6
   2307c:	mov	r8, r1
   23080:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   23084:	mov	r3, r6
   23088:	ldrh	r1, [r8]
   2308c:	mov	r2, r0
   23090:	mov	r4, r0
   23094:	mov	r0, r5
   23098:	bl	22604 <luaL_where@@Base+0x2500>
   2309c:	lsl	r4, r4, #12
   230a0:	ldr	r3, [r5, #128]	; 0x80
   230a4:	uxth	r4, r4
   230a8:	sub	r2, r3, #4
   230ac:	str	r2, [r5, #128]	; 0x80
   230b0:	and	r0, r0, #15
   230b4:	orr	r0, r0, r7
   230b8:	orr	r4, r4, r0
   230bc:	str	r4, [r3, #-4]
   230c0:	pop	{r4, r5, r6, r7, r8, pc}
   230c4:			; <UNDEFINED> instruction: 0xffff0000
   230c8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   230cc:	mov	r7, r2
   230d0:	ldrb	r2, [r1, #4]
   230d4:	mov	r6, r1
   230d8:	mov	r4, r0
   230dc:	and	r2, r2, #31
   230e0:	cmp	r2, #14
   230e4:	beq	231f0 <luaL_where@@Base+0x30ec>
   230e8:	ldr	r2, [pc, #420]	; 23294 <luaL_where@@Base+0x3190>
   230ec:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   230f0:	ldrh	r1, [r6]
   230f4:	ldr	r3, [pc, #408]	; 23294 <luaL_where@@Base+0x3190>
   230f8:	mov	r2, r0
   230fc:	mov	r5, r0
   23100:	mov	r0, r4
   23104:	bl	22604 <luaL_where@@Base+0x2500>
   23108:	ldrh	r6, [r6, #2]
   2310c:	tst	r6, #32768	; 0x8000
   23110:	mov	r8, r0
   23114:	bne	23154 <luaL_where@@Base+0x3050>
   23118:	ldr	r3, [r4, #136]	; 0x88
   2311c:	ldr	sl, [pc, #372]	; 23298 <luaL_where@@Base+0x3194>
   23120:	ldr	r9, [r3, r6, lsl #3]
   23124:	mov	r0, sl
   23128:	mov	r1, r9
   2312c:	bl	16d00 <_start@@Base+0x3950>
   23130:	subs	fp, r0, #0
   23134:	beq	23154 <luaL_where@@Base+0x3050>
   23138:	mov	r1, r9
   2313c:	ldr	r0, [pc, #344]	; 2329c <luaL_where@@Base+0x3198>
   23140:	bl	16d00 <_start@@Base+0x3950>
   23144:	subs	r2, r0, #0
   23148:	eorne	r3, fp, sl
   2314c:	movne	r0, #0
   23150:	bne	231c4 <luaL_where@@Base+0x30c0>
   23154:	ldr	r3, [pc, #312]	; 23294 <luaL_where@@Base+0x3190>
   23158:	mov	r2, #1
   2315c:	mov	r1, r6
   23160:	bic	r2, r3, r2, lsl r8
   23164:	mov	r0, r4
   23168:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   2316c:	cmp	r5, r0
   23170:	bne	231bc <luaL_where@@Base+0x30b8>
   23174:	ldr	r2, [r4, #128]	; 0x80
   23178:	ldr	r3, [pc, #280]	; 23298 <luaL_where@@Base+0x3194>
   2317c:	eor	r7, r7, #7
   23180:	mov	r0, r5
   23184:	cmp	r5, r8
   23188:	sub	ip, r2, #4
   2318c:	orrne	r1, r8, #27262976	; 0x1a00000
   23190:	orrne	r5, r1, r5, lsl #12
   23194:	moveq	r1, ip
   23198:	orr	r0, r3, r0
   2319c:	moveq	ip, r2
   231a0:	orrne	r7, r5, r7, lsl #28
   231a4:	subne	r1, r2, #8
   231a8:	orr	r0, r0, r8, lsl #16
   231ac:	strne	r7, [r2, #-4]
   231b0:	str	r1, [r4, #128]	; 0x80
   231b4:	str	r0, [ip, #-4]
   231b8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   231bc:	ldr	r3, [pc, #212]	; 23298 <luaL_where@@Base+0x3194>
   231c0:	mov	r2, #0
   231c4:	lsl	r1, r7, #28
   231c8:	ldr	ip, [r4, #128]	; 0x80
   231cc:	orr	r1, r1, #27262976	; 0x1a00000
   231d0:	eor	r1, r1, r2
   231d4:	orr	r2, r0, r5, lsl #12
   231d8:	orr	r1, r1, r2
   231dc:	sub	r2, ip, #4
   231e0:	str	r2, [r4, #128]	; 0x80
   231e4:	eor	r7, r7, #1
   231e8:	str	r1, [ip, #-4]
   231ec:	b	23184 <luaL_where@@Base+0x3080>
   231f0:	ldr	r2, [pc, #168]	; 232a0 <luaL_where@@Base+0x319c>
   231f4:	mov	r5, r3
   231f8:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   231fc:	mov	r1, r6
   23200:	ldr	r2, [pc, #152]	; 232a0 <luaL_where@@Base+0x319c>
   23204:	and	r6, r0, #15
   23208:	mov	r0, r4
   2320c:	bl	2266c <luaL_where@@Base+0x2568>
   23210:	and	r1, r0, #15
   23214:	cmp	r6, r1
   23218:	lsr	r0, r0, #8
   2321c:	and	r0, r0, #15
   23220:	ldreq	ip, [r4, #128]	; 0x80
   23224:	beq	23250 <luaL_where@@Base+0x314c>
   23228:	lsl	r2, r5, #28
   2322c:	eor	r2, r2, #268435456	; 0x10000000
   23230:	orr	r2, r2, #246415360	; 0xeb00000
   23234:	ldr	r3, [r4, #128]	; 0x80
   23238:	orr	r2, r2, #2880	; 0xb40
   2323c:	orr	r2, r2, r1
   23240:	orr	r2, r2, r6, lsl #12
   23244:	sub	ip, r3, #4
   23248:	str	ip, [r4, #128]	; 0x80
   2324c:	str	r2, [r3, #-4]
   23250:	cmp	r6, r0
   23254:	subne	r2, ip, #4
   23258:	ldrne	r3, [pc, #68]	; 232a4 <luaL_where@@Base+0x31a0>
   2325c:	moveq	r2, ip
   23260:	orrne	r5, r3, r5, lsl #28
   23264:	orrne	r5, r5, r0
   23268:	orrne	r5, r5, r6, lsl #12
   2326c:	ldr	r3, [pc, #52]	; 232a8 <luaL_where@@Base+0x31a4>
   23270:	strne	r5, [ip, #-4]
   23274:	orr	r0, r0, r1, lsl #12
   23278:	ldr	ip, [pc, #44]	; 232ac <luaL_where@@Base+0x31a8>
   2327c:	orr	r3, r0, r3
   23280:	sub	r1, r2, #8
   23284:	str	ip, [r2, #-4]
   23288:	str	r1, [r4, #128]	; 0x80
   2328c:	str	r3, [r2, #-8]
   23290:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23294:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   23298:	cmp	r0, r0
   2329c:	nop			; (mov r0, r0)
   232a0:			; <UNDEFINED> instruction: 0xffff0000
   232a4:	vmoveq.f64	d0, d0
   232a8:	vcmp.f64	d0, d0
   232ac:	vmrs	APSR_nzcv, fpscr
   232b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   232b4:	mov	r6, r0
   232b8:	ldrh	r4, [r1]
   232bc:	ldrh	r0, [r1, #2]
   232c0:	cmp	r4, r0
   232c4:	beq	23308 <luaL_where@@Base+0x3204>
   232c8:	mov	r7, r3
   232cc:	ldr	r3, [r6, #204]	; 0xcc
   232d0:	cmp	r3, r4
   232d4:	bcs	232ec <luaL_where@@Base+0x31e8>
   232d8:	ldr	r5, [r6, #136]	; 0x88
   232dc:	add	r5, r5, r4, lsl #3
   232e0:	ldrb	ip, [r5, #5]
   232e4:	cmp	ip, #43	; 0x2b
   232e8:	beq	233c0 <luaL_where@@Base+0x32bc>
   232ec:	cmp	r3, r0
   232f0:	bcs	23308 <luaL_where@@Base+0x3204>
   232f4:	ldr	r5, [r6, #136]	; 0x88
   232f8:	add	r5, r5, r0, lsl #3
   232fc:	ldrb	r3, [r5, #5]
   23300:	cmp	r3, #43	; 0x2b
   23304:	beq	23310 <luaL_where@@Base+0x320c>
   23308:	mov	r0, #0
   2330c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23310:	ldrsb	r3, [r5, #6]
   23314:	cmp	r3, #0
   23318:	bge	23308 <luaL_where@@Base+0x3204>
   2331c:	ldr	r9, [pc, #188]	; 233e0 <luaL_where@@Base+0x32dc>
   23320:	mov	r0, r6
   23324:	mov	r2, r9
   23328:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   2332c:	mov	r3, r9
   23330:	mov	r1, r4
   23334:	mov	r4, #1
   23338:	mov	r8, r0
   2333c:	mov	r2, r0
   23340:	mov	r0, r6
   23344:	bl	22604 <luaL_where@@Base+0x2500>
   23348:	mov	r1, r5
   2334c:	lsl	r2, r4, r0
   23350:	orr	r2, r2, r4, lsl r8
   23354:	mov	sl, r0
   23358:	bic	r2, r9, r2
   2335c:	mov	r0, r6
   23360:	bl	2266c <luaL_where@@Base+0x2568>
   23364:	lsl	r2, r8, #12
   23368:	ldr	r1, [r6, #128]	; 0x80
   2336c:	uxth	r2, r2
   23370:	cmp	r8, sl
   23374:	lsl	r3, r0, #20
   23378:	lsl	r0, r0, #16
   2337c:	orr	r3, r2, r3, lsr #28
   23380:	orr	r7, r3, r7
   23384:	and	r0, r0, #983040	; 0xf0000
   23388:	orr	r7, r7, r0
   2338c:	sub	r3, r1, #4
   23390:	str	r3, [r6, #128]	; 0x80
   23394:	str	r7, [r1, #-4]
   23398:	beq	233d8 <luaL_where@@Base+0x32d4>
   2339c:	ldr	r3, [pc, #64]	; 233e4 <luaL_where@@Base+0x32e0>
   233a0:	and	sl, sl, #15
   233a4:	orr	r3, sl, r3
   233a8:	orr	r2, r3, r2
   233ac:	sub	r3, r1, #8
   233b0:	str	r3, [r6, #128]	; 0x80
   233b4:	mov	r0, r4
   233b8:	str	r2, [r1, #-8]
   233bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   233c0:	ldrsb	ip, [r5, #6]
   233c4:	cmp	ip, #0
   233c8:	bge	232ec <luaL_where@@Base+0x31e8>
   233cc:	mov	r4, r0
   233d0:	mov	r7, r2
   233d4:	b	2331c <luaL_where@@Base+0x3218>
   233d8:	mov	r0, r4
   233dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   233e0:			; <UNDEFINED> instruction: 0xffff0000
   233e4:	vmov.f64	d0, d0
   233e8:	ldrb	r2, [r1, #4]
   233ec:	push	{r4, r5, r6, lr}
   233f0:	mov	r5, r1
   233f4:	and	r2, r2, #31
   233f8:	cmp	r2, #14
   233fc:	mov	r4, r0
   23400:	beq	23434 <luaL_where@@Base+0x3330>
   23404:	ldr	r2, [r0, #248]	; 0xf8
   23408:	ldr	r1, [r0, #128]	; 0x80
   2340c:	cmp	r2, r1
   23410:	addeq	r2, r2, #4
   23414:	moveq	r1, #0
   23418:	streq	r2, [r0, #128]	; 0x80
   2341c:	streq	r1, [r0, #248]	; 0xf8
   23420:	ldreq	r2, [pc, #52]	; 2345c <luaL_where@@Base+0x3358>
   23424:	mov	r1, r5
   23428:	ldrne	r2, [pc, #48]	; 23460 <luaL_where@@Base+0x335c>
   2342c:	pop	{r4, r5, r6, lr}
   23430:	b	22cf4 <luaL_where@@Base+0x2bf0>
   23434:	ldr	r3, [pc, #40]	; 23464 <luaL_where@@Base+0x3360>
   23438:	mov	r2, r3
   2343c:	bl	232b0 <luaL_where@@Base+0x31ac>
   23440:	cmp	r0, #0
   23444:	popne	{r4, r5, r6, pc}
   23448:	mov	r1, r5
   2344c:	mov	r0, r4
   23450:	ldr	r2, [pc, #16]	; 23468 <luaL_where@@Base+0x3364>
   23454:	pop	{r4, r5, r6, lr}
   23458:	b	23000 <luaL_where@@Base+0x2efc>
   2345c:	adds	r0, r0, r0
   23460:	add	r0, r0, r0
   23464:	vmla.f64	d0, d0, d0
   23468:	vadd.f64	d0, d0, d0
   2346c:	ldrb	r2, [r1, #4]
   23470:	push	{r4, r5, r6, lr}
   23474:	mov	r5, r1
   23478:	and	r2, r2, #31
   2347c:	cmp	r2, #14
   23480:	mov	r4, r0
   23484:	beq	234b8 <luaL_where@@Base+0x33b4>
   23488:	ldr	r2, [r0, #248]	; 0xf8
   2348c:	ldr	r1, [r0, #128]	; 0x80
   23490:	cmp	r2, r1
   23494:	addeq	r2, r2, #4
   23498:	moveq	r1, #0
   2349c:	streq	r2, [r0, #128]	; 0x80
   234a0:	streq	r1, [r0, #248]	; 0xf8
   234a4:	ldreq	r2, [pc, #52]	; 234e0 <luaL_where@@Base+0x33dc>
   234a8:	mov	r1, r5
   234ac:	ldrne	r2, [pc, #48]	; 234e4 <luaL_where@@Base+0x33e0>
   234b0:	pop	{r4, r5, r6, lr}
   234b4:	b	22cf4 <luaL_where@@Base+0x2bf0>
   234b8:	ldr	r3, [pc, #40]	; 234e8 <luaL_where@@Base+0x33e4>
   234bc:	ldr	r2, [pc, #40]	; 234ec <luaL_where@@Base+0x33e8>
   234c0:	bl	232b0 <luaL_where@@Base+0x31ac>
   234c4:	cmp	r0, #0
   234c8:	popne	{r4, r5, r6, pc}
   234cc:	mov	r1, r5
   234d0:	mov	r0, r4
   234d4:	ldr	r2, [pc, #20]	; 234f0 <luaL_where@@Base+0x33ec>
   234d8:	pop	{r4, r5, r6, lr}
   234dc:	b	23000 <luaL_where@@Base+0x2efc>
   234e0:	subs	r0, r0, r0
   234e4:	sub	r0, r0, r0
   234e8:	vmls.f64	d0, d0, d0
   234ec:	vnmls.f64	d0, d0, d0
   234f0:	vsub.f64	d0, d0, d0
   234f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   234f8:	sub	sp, sp, #20
   234fc:	ldr	r8, [pc, #380]	; 23680 <luaL_where@@Base+0x357c>
   23500:	mov	r5, r1
   23504:	mov	r2, r8
   23508:	mov	r4, r0
   2350c:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   23510:	ldrh	r1, [r5, #2]
   23514:	ldr	r3, [pc, #360]	; 23684 <luaL_where@@Base+0x3580>
   23518:	ldrh	r6, [r5]
   2351c:	cmp	r1, r3
   23520:	mov	r7, r0
   23524:	bls	235f8 <luaL_where@@Base+0x34f4>
   23528:	cmp	r6, r3
   2352c:	bhi	23578 <luaL_where@@Base+0x3474>
   23530:	ldr	r5, [pc, #328]	; 23680 <luaL_where@@Base+0x357c>
   23534:	mov	r0, r4
   23538:	mov	r2, r5
   2353c:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   23540:	mov	r1, #1
   23544:	ldr	r2, [r4, #136]	; 0x88
   23548:	bic	r5, r5, r1, lsl r0
   2354c:	str	r5, [sp, #4]
   23550:	ldr	r1, [r2, r6, lsl #3]
   23554:	mov	r3, r0
   23558:	add	r1, r1, #16
   2355c:	str	r1, [sp]
   23560:	mov	r2, r7
   23564:	mov	r0, r4
   23568:	ldr	r1, [pc, #280]	; 23688 <luaL_where@@Base+0x3584>
   2356c:	bl	21a78 <luaL_where@@Base+0x1974>
   23570:	add	sp, sp, #20
   23574:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23578:	mov	r1, r6
   2357c:	mov	r2, r8
   23580:	mov	r0, r4
   23584:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   23588:	ldrh	r5, [r5, #2]
   2358c:	ldr	r9, [r4, #136]	; 0x88
   23590:	lsl	sl, r5, #3
   23594:	add	r3, r9, sl
   23598:	ldrb	r2, [r3, #6]
   2359c:	tst	r2, #128	; 0x80
   235a0:	mov	r6, r0
   235a4:	bne	23608 <luaL_where@@Base+0x3504>
   235a8:	ldr	r1, [r4, #152]	; 0x98
   235ac:	mov	r3, #1
   235b0:	ldr	ip, [pc, #212]	; 2368c <luaL_where@@Base+0x3588>
   235b4:	mov	r0, r2
   235b8:	bic	r2, r1, r3, lsl r2
   235bc:	str	r2, [r4, #152]	; 0x98
   235c0:	lsl	r2, r7, #12
   235c4:	orr	r3, r2, #-536870912	; 0xe0000000
   235c8:	ldr	r1, [r4, #128]	; 0x80
   235cc:	orr	r3, r3, #8388608	; 0x800000
   235d0:	orr	r3, r3, r6, lsl #16
   235d4:	orr	r7, r2, r7, lsl #16
   235d8:	orr	r0, r3, r0
   235dc:	orr	r7, r7, ip
   235e0:	sub	r3, r1, #8
   235e4:	str	r7, [r1, #-4]
   235e8:	str	r3, [r4, #128]	; 0x80
   235ec:	str	r0, [r1, #-8]
   235f0:	add	sp, sp, #20
   235f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   235f8:	mov	r3, r1
   235fc:	mov	r1, r6
   23600:	mov	r6, r3
   23604:	b	23530 <luaL_where@@Base+0x342c>
   23608:	ldrh	r1, [r3, #2]
   2360c:	ldr	r0, [r4, #204]	; 0xcc
   23610:	mov	r2, #1
   23614:	cmp	r1, r0
   23618:	bic	r2, r8, r2, lsl r6
   2361c:	bls	2362c <luaL_where@@Base+0x3528>
   23620:	ldrb	r3, [r3, #5]
   23624:	cmp	r3, #41	; 0x29
   23628:	beq	23640 <luaL_where@@Base+0x353c>
   2362c:	mov	r1, r5
   23630:	mov	r0, r4
   23634:	bl	21b9c <luaL_where@@Base+0x1a98>
   23638:	ldr	ip, [pc, #76]	; 2368c <luaL_where@@Base+0x3588>
   2363c:	b	235c0 <luaL_where@@Base+0x34bc>
   23640:	tst	r1, #32768	; 0x8000
   23644:	bne	2362c <luaL_where@@Base+0x3528>
   23648:	ldr	r1, [r9, r1, lsl #3]
   2364c:	ldr	fp, [pc, #52]	; 23688 <luaL_where@@Base+0x3584>
   23650:	add	r1, r1, #16
   23654:	mov	r0, fp
   23658:	str	r2, [sp, #12]
   2365c:	bl	16d00 <_start@@Base+0x3950>
   23660:	ldr	r2, [sp, #12]
   23664:	subs	r8, r0, #0
   23668:	beq	2362c <luaL_where@@Base+0x3528>
   2366c:	ldrh	r1, [r9, sl]
   23670:	mov	r0, r4
   23674:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   23678:	eor	ip, r8, fp
   2367c:	b	235c0 <luaL_where@@Base+0x34bc>
   23680:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   23684:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   23688:	add	r0, r0, r0
   2368c:	add	r0, r0, #16
   23690:	ldrsb	r2, [r1, #6]
   23694:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23698:	mov	r3, #0
   2369c:	ldrb	r6, [r1, #4]
   236a0:	sub	sp, sp, #16
   236a4:	cmp	r2, r3
   236a8:	mov	r8, r1
   236ac:	mov	r4, r0
   236b0:	and	r6, r6, #31
   236b4:	str	r3, [sp, #12]
   236b8:	blt	2389c <luaL_where@@Base+0x3798>
   236bc:	ldr	r7, [pc, #500]	; 238b8 <luaL_where@@Base+0x37b4>
   236c0:	cmp	r6, #14
   236c4:	ldr	r2, [pc, #496]	; 238bc <luaL_where@@Base+0x37b8>
   236c8:	mov	r1, r8
   236cc:	movne	r2, r7
   236d0:	mov	r0, r4
   236d4:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   236d8:	mov	r3, #1
   236dc:	bic	r7, r7, r3, lsl r0
   236e0:	mov	r5, r0
   236e4:	and	r9, r0, #128	; 0x80
   236e8:	cmp	r6, #14
   236ec:	ldrh	r1, [r8]
   236f0:	beq	237f0 <luaL_where@@Base+0x36ec>
   236f4:	mov	r3, #4096	; 0x1000
   236f8:	str	r3, [sp]
   236fc:	add	r2, sp, #12
   23700:	mov	r3, r7
   23704:	mov	r0, r4
   23708:	bl	21d08 <luaL_where@@Base+0x1c04>
   2370c:	ldr	r3, [sp, #12]
   23710:	cmp	r3, #255	; 0xff
   23714:	mov	r8, r0
   23718:	bgt	23724 <luaL_where@@Base+0x3620>
   2371c:	tst	r5, #129	; 0x81
   23720:	beq	237ac <luaL_where@@Base+0x36a8>
   23724:	mov	sl, #917504	; 0xe0000
   23728:	mov	r7, #14
   2372c:	mov	r1, #1
   23730:	mov	r0, r4
   23734:	bl	17a3c <_start@@Base+0x468c>
   23738:	cmp	r6, #14
   2373c:	bls	2382c <luaL_where@@Base+0x3728>
   23740:	ldr	r2, [r4, #128]	; 0x80
   23744:	orr	r3, sl, #-536870898	; 0xe000000e
   23748:	orr	r3, r3, #57671680	; 0x3700000
   2374c:	sub	r1, r2, #4
   23750:	cmp	r9, #0
   23754:	str	r1, [r4, #128]	; 0x80
   23758:	str	r3, [r2, #-4]
   2375c:	bne	2377c <luaL_where@@Base+0x3678>
   23760:	ldr	r3, [sp, #12]
   23764:	str	r3, [sp]
   23768:	mov	r2, r5
   2376c:	mov	r3, r8
   23770:	ldr	r1, [pc, #328]	; 238c0 <luaL_where@@Base+0x37bc>
   23774:	mov	r0, r4
   23778:	bl	16dbc <_start@@Base+0x3a0c>
   2377c:	ldr	r1, [sp, #12]
   23780:	mov	r3, r8
   23784:	add	r1, r1, #4
   23788:	str	r1, [sp]
   2378c:	mov	r2, r7
   23790:	mov	r0, r4
   23794:	ldr	r1, [pc, #292]	; 238c0 <luaL_where@@Base+0x37bc>
   23798:	bl	16dbc <_start@@Base+0x3a0c>
   2379c:	add	sp, sp, #16
   237a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   237a4:	tst	r5, #129	; 0x81
   237a8:	bne	23818 <luaL_where@@Base+0x3714>
   237ac:	mov	r3, #1
   237b0:	ldr	r2, [r4, #144]	; 0x90
   237b4:	bic	r3, r7, r3, lsl r8
   237b8:	add	r7, r5, #1
   237bc:	and	r3, r3, r2
   237c0:	lsr	r3, r3, r7
   237c4:	tst	r3, #1
   237c8:	movne	r2, #1
   237cc:	ldrne	r3, [r4, #148]	; 0x94
   237d0:	lslne	sl, r7, #16
   237d4:	orrne	r3, r3, r2, lsl r7
   237d8:	moveq	sl, #917504	; 0xe0000
   237dc:	strne	r3, [r4, #148]	; 0x94
   237e0:	moveq	r7, #14
   237e4:	cmp	r6, #14
   237e8:	bne	2372c <luaL_where@@Base+0x3628>
   237ec:	b	23820 <luaL_where@@Base+0x371c>
   237f0:	mov	r3, #1024	; 0x400
   237f4:	str	r3, [sp]
   237f8:	add	r2, sp, #12
   237fc:	mov	r3, r7
   23800:	mov	r0, r4
   23804:	bl	21d08 <luaL_where@@Base+0x1c04>
   23808:	ldr	r3, [sp, #12]
   2380c:	cmp	r3, #255	; 0xff
   23810:	mov	r8, r0
   23814:	ble	237a4 <luaL_where@@Base+0x36a0>
   23818:	mov	sl, #917504	; 0xe0000
   2381c:	mov	r7, r6
   23820:	mov	r1, #2
   23824:	mov	r0, r4
   23828:	bl	17a3c <_start@@Base+0x468c>
   2382c:	add	r2, r6, #1
   23830:	ldr	r1, [r4, #128]	; 0x80
   23834:	orr	r2, r2, #-486539264	; 0xe3000000
   23838:	orr	r2, r2, #7340032	; 0x700000
   2383c:	orr	r2, r2, sl
   23840:	sub	r3, r1, #4
   23844:	cmp	r9, #0
   23848:	str	r3, [r4, #128]	; 0x80
   2384c:	str	r2, [r1, #-4]
   23850:	bne	2377c <luaL_where@@Base+0x3678>
   23854:	ldr	r2, [sp, #12]
   23858:	cmp	r6, #14
   2385c:	mov	r3, r2
   23860:	bne	23764 <luaL_where@@Base+0x3660>
   23864:	lsl	r3, r5, #12
   23868:	cmp	r2, #0
   2386c:	uxth	r3, r3
   23870:	ldrlt	ip, [pc, #76]	; 238c4 <luaL_where@@Base+0x37c0>
   23874:	ldrge	ip, [pc, #76]	; 238c8 <luaL_where@@Base+0x37c4>
   23878:	orr	r3, r3, #16777216	; 0x1000000
   2387c:	rsblt	r2, r2, #0
   23880:	orr	r3, r3, r8, lsl #16
   23884:	orr	r3, r3, ip
   23888:	sub	r0, r1, #8
   2388c:	orr	r3, r3, r2, asr #2
   23890:	str	r0, [r4, #128]	; 0x80
   23894:	str	r3, [r1, #-8]
   23898:	b	2377c <luaL_where@@Base+0x3678>
   2389c:	ldrb	r3, [r1, #7]
   238a0:	cmp	r3, #0
   238a4:	bne	236bc <luaL_where@@Base+0x35b8>
   238a8:	mov	r9, #128	; 0x80
   238ac:	ldr	r7, [pc, #4]	; 238b8 <luaL_where@@Base+0x37b4>
   238b0:	mov	r5, r9
   238b4:	b	236e8 <luaL_where@@Base+0x35e4>
   238b8:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   238bc:			; <UNDEFINED> instruction: 0xffff0000
   238c0:	ldr	r0, [r0], #-0
   238c4:	vldr	d0, [r0, #-0]
   238c8:	vldr	d0, [r0]
   238cc:	ldrb	r3, [r1, #4]
   238d0:	and	r3, r3, #31
   238d4:	cmp	r3, #14
   238d8:	beq	23a24 <luaL_where@@Base+0x3920>
   238dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   238e0:	mov	r6, r1
   238e4:	ldr	r5, [pc, #356]	; 23a50 <luaL_where@@Base+0x394c>
   238e8:	mov	r4, r0
   238ec:	mov	r2, r5
   238f0:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   238f4:	mov	r9, #1
   238f8:	ldrh	r1, [r6]
   238fc:	mov	r8, r0
   23900:	bic	r2, r5, r9, lsl r0
   23904:	mov	r0, r4
   23908:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   2390c:	ldrh	r1, [r6, #2]
   23910:	mov	r7, r0
   23914:	bic	r2, r5, r9, lsl r0
   23918:	mov	r0, r4
   2391c:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   23920:	sub	r3, r8, r7
   23924:	clz	r3, r3
   23928:	lsr	r3, r3, #5
   2392c:	ldr	r1, [r4, #160]	; 0xa0
   23930:	cmp	r7, r0
   23934:	moveq	r2, #0
   23938:	andne	r2, r3, #1
   2393c:	cmp	r2, #0
   23940:	subne	r3, r8, r0
   23944:	ldrsb	r2, [r6, #4]
   23948:	clzne	r3, r3
   2394c:	mov	r5, r0
   23950:	lsrne	r3, r3, #5
   23954:	movne	r7, r0
   23958:	movne	r5, r8
   2395c:	tst	r1, #112	; 0x70
   23960:	movne	r3, #0
   23964:	cmp	r2, #0
   23968:	blt	239cc <luaL_where@@Base+0x38c8>
   2396c:	cmp	r3, #0
   23970:	ldr	r3, [pc, #220]	; 23a54 <luaL_where@@Base+0x3950>
   23974:	ldr	r2, [r4, #128]	; 0x80
   23978:	movne	r7, #14
   2397c:	moveq	r9, #128	; 0x80
   23980:	movne	r9, #0
   23984:	orr	r3, r3, r8, lsl #16
   23988:	movne	r6, r7
   2398c:	mov	r1, r2
   23990:	moveq	r6, r9
   23994:	orr	r3, r3, r5, lsl #8
   23998:	cmp	r9, #0
   2399c:	orr	r7, r3, r7
   239a0:	sub	r2, r2, #4
   239a4:	str	r2, [r4, #128]	; 0x80
   239a8:	str	r7, [r1, #-4]
   239ac:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   239b0:	orr	r5, r5, #-520093696	; 0xe1000000
   239b4:	orr	r5, r5, #10485760	; 0xa00000
   239b8:	orr	r5, r5, r6, lsl #12
   239bc:	sub	r3, r2, #4
   239c0:	str	r3, [r4, #128]	; 0x80
   239c4:	str	r5, [r2, #-4]
   239c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   239cc:	cmp	r3, #0
   239d0:	moveq	r9, #128	; 0x80
   239d4:	moveq	r6, r9
   239d8:	bne	23a2c <luaL_where@@Base+0x3928>
   239dc:	mov	r1, #1
   239e0:	mov	r0, r4
   239e4:	bl	17a3c <_start@@Base+0x468c>
   239e8:	ldr	r3, [pc, #104]	; 23a58 <luaL_where@@Base+0x3954>
   239ec:	ldr	r2, [r4, #128]	; 0x80
   239f0:	ldr	r1, [pc, #100]	; 23a5c <luaL_where@@Base+0x3958>
   239f4:	orr	r3, r3, r8, lsl #12
   239f8:	mov	r0, r2
   239fc:	orr	r1, r8, r1
   23a00:	orr	r3, r3, r5, lsl #8
   23a04:	str	r1, [r2, #-4]
   23a08:	orr	r7, r3, r7
   23a0c:	sub	r2, r2, #8
   23a10:	cmp	r9, #0
   23a14:	str	r2, [r4, #128]	; 0x80
   23a18:	str	r7, [r0, #-8]
   23a1c:	beq	239b0 <luaL_where@@Base+0x38ac>
   23a20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23a24:	ldr	r2, [pc, #52]	; 23a60 <luaL_where@@Base+0x395c>
   23a28:	b	23000 <luaL_where@@Base+0x2efc>
   23a2c:	ldr	r3, [pc, #28]	; 23a50 <luaL_where@@Base+0x394c>
   23a30:	mov	r1, #1
   23a34:	mov	r0, r4
   23a38:	bic	r1, r3, r1, lsl r7
   23a3c:	bl	22b38 <luaL_where@@Base+0x2a34>
   23a40:	mov	r7, r0
   23a44:	and	r9, r0, #128	; 0x80
   23a48:	mov	r6, r0
   23a4c:	b	239dc <luaL_where@@Base+0x38d8>
   23a50:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   23a54:	mul	r0, r0, r0
   23a58:	smull	r0, lr, r0, r0
   23a5c:	teq	lr, r0, asr #31
   23a60:	vmul.f64	d0, d0, d0
   23a64:	ldrh	r3, [r1, #2]
   23a68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a6c:	mov	r8, r1
   23a70:	ldr	r7, [r0, #136]	; 0x88
   23a74:	lsl	r3, r3, #3
   23a78:	ldrsb	r2, [r1, #6]
   23a7c:	add	r1, r7, r3
   23a80:	ldrh	r3, [r7, r3]
   23a84:	ldrh	r4, [r1, #2]
   23a88:	sub	sp, sp, #36	; 0x24
   23a8c:	cmp	r2, #0
   23a90:	str	r3, [sp, #28]
   23a94:	add	r4, r4, r4, lsl #1
   23a98:	add	sl, r7, r3, lsl #3
   23a9c:	lsl	r4, r4, #3
   23aa0:	add	r3, r4, #8
   23aa4:	mov	r5, r0
   23aa8:	ldr	r6, [pc, #700]	; 23d6c <luaL_where@@Base+0x3c68>
   23aac:	str	r3, [sp, #20]
   23ab0:	bge	23ad4 <luaL_where@@Base+0x39d0>
   23ab4:	ldrb	r2, [r8, #7]
   23ab8:	cmp	r4, #4096	; 0x1000
   23abc:	movcc	r3, #0
   23ac0:	movcs	r3, #1
   23ac4:	cmp	r2, #0
   23ac8:	movne	r3, #1
   23acc:	cmp	r3, #0
   23ad0:	beq	23d1c <luaL_where@@Base+0x3c18>
   23ad4:	mov	r2, r6
   23ad8:	mov	r1, r8
   23adc:	mov	r0, r5
   23ae0:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   23ae4:	mov	r2, r6
   23ae8:	ldrh	r1, [r8]
   23aec:	mov	fp, r0
   23af0:	mov	r0, r5
   23af4:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   23af8:	mov	r3, #1
   23afc:	cmp	r4, #4096	; 0x1000
   23b00:	str	r0, [sp, #24]
   23b04:	bic	r6, r6, r3, lsl r0
   23b08:	bcc	23c5c <luaL_where@@Base+0x3b58>
   23b0c:	bic	r6, r6, r3, lsl fp
   23b10:	mov	r3, #12
   23b14:	str	r3, [sp, #12]
   23b18:	mov	r3, #8
   23b1c:	str	fp, [sp, #8]
   23b20:	str	r3, [sp, #20]
   23b24:	mov	r1, #1
   23b28:	mov	r0, r5
   23b2c:	bl	17a3c <_start@@Base+0x468c>
   23b30:	ldrb	r3, [sl, #4]
   23b34:	and	r3, r3, #31
   23b38:	cmp	r3, #2
   23b3c:	bls	23c48 <luaL_where@@Base+0x3b44>
   23b40:	ldr	r3, [r5, #144]	; 0x90
   23b44:	ldr	r1, [pc, #548]	; 23d70 <luaL_where@@Base+0x3c6c>
   23b48:	and	r3, r3, r6
   23b4c:	and	r1, r1, r3
   23b50:	ands	r1, r1, r3, lsr #1
   23b54:	bne	23c78 <luaL_where@@Base+0x3b74>
   23b58:	mov	r1, r6
   23b5c:	bl	22b38 <luaL_where@@Base+0x2a34>
   23b60:	mov	r9, #14
   23b64:	mvn	r1, #16384	; 0x4000
   23b68:	mov	r8, r0
   23b6c:	ldrb	r3, [sl, #4]
   23b70:	mov	r2, #1
   23b74:	and	r0, r8, #128	; 0x80
   23b78:	and	r3, r3, #31
   23b7c:	bic	r6, r6, r2, lsl r8
   23b80:	cmp	r3, #14
   23b84:	str	r0, [sp, #16]
   23b88:	and	r6, r6, r1
   23b8c:	beq	23cd8 <luaL_where@@Base+0x3bd4>
   23b90:	and	r1, r8, #128	; 0x80
   23b94:	cmp	r1, #0
   23b98:	bne	23bc8 <luaL_where@@Base+0x3ac4>
   23b9c:	ldr	r3, [sp, #28]
   23ba0:	str	r6, [sp, #4]
   23ba4:	mov	r0, r5
   23ba8:	ldr	r2, [r7, r3, lsl #3]
   23bac:	mov	r3, r8
   23bb0:	str	r2, [sp]
   23bb4:	mov	r2, r1
   23bb8:	mov	r1, #22020096	; 0x1500000
   23bbc:	bl	21a78 <luaL_where@@Base+0x1974>
   23bc0:	ldrb	r3, [sl, #4]
   23bc4:	and	r3, r3, #31
   23bc8:	cmp	r3, #14
   23bcc:	movhi	r3, #14
   23bd0:	bls	23c54 <luaL_where@@Base+0x3b50>
   23bd4:	ldr	r2, [pc, #408]	; 23d74 <luaL_where@@Base+0x3c70>
   23bd8:	ldr	r1, [r5, #128]	; 0x80
   23bdc:	orr	r2, r2, r9, lsl #16
   23be0:	orr	r3, r2, r3
   23be4:	sub	r2, r1, #4
   23be8:	str	r2, [r5, #128]	; 0x80
   23bec:	str	r3, [r1, #-4]
   23bf0:	ldr	r3, [sp, #12]
   23bf4:	mov	r2, r9
   23bf8:	str	r3, [sp]
   23bfc:	ldr	r1, [pc, #372]	; 23d78 <luaL_where@@Base+0x3c74>
   23c00:	ldr	r3, [sp, #8]
   23c04:	mov	r0, r5
   23c08:	bl	16dbc <_start@@Base+0x3a0c>
   23c0c:	ldr	r3, [sp, #16]
   23c10:	cmp	r3, #0
   23c14:	beq	23cb8 <luaL_where@@Base+0x3bb4>
   23c18:	cmp	r4, #4096	; 0x1000
   23c1c:	bcc	23c40 <luaL_where@@Base+0x3b3c>
   23c20:	ldr	r1, [pc, #324]	; 23d6c <luaL_where@@Base+0x3c68>
   23c24:	str	r4, [sp]
   23c28:	str	r1, [sp, #4]
   23c2c:	ldr	r3, [sp, #24]
   23c30:	mov	r2, fp
   23c34:	mov	r0, r5
   23c38:	ldr	r1, [pc, #316]	; 23d7c <luaL_where@@Base+0x3c78>
   23c3c:	bl	21a78 <luaL_where@@Base+0x1974>
   23c40:	add	sp, sp, #36	; 0x24
   23c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c48:	mov	r9, #14
   23c4c:	mov	r8, #128	; 0x80
   23c50:	str	r8, [sp, #16]
   23c54:	add	r3, r3, #1
   23c58:	b	23bd4 <luaL_where@@Base+0x3ad0>
   23c5c:	add	r3, r4, #12
   23c60:	tst	fp, #128	; 0x80
   23c64:	str	r3, [sp, #12]
   23c68:	beq	23d48 <luaL_where@@Base+0x3c44>
   23c6c:	ldr	r3, [sp, #24]
   23c70:	str	r3, [sp, #8]
   23c74:	b	23b24 <luaL_where@@Base+0x3a20>
   23c78:	bl	22b38 <luaL_where@@Base+0x2a34>
   23c7c:	ldr	r3, [r5, #144]	; 0x90
   23c80:	add	r9, r0, #1
   23c84:	mov	r8, r0
   23c88:	lsr	r3, r3, r9
   23c8c:	tst	r3, #1
   23c90:	mvneq	r1, #16384	; 0x4000
   23c94:	moveq	r9, #14
   23c98:	beq	23b6c <luaL_where@@Base+0x3a68>
   23c9c:	mov	r1, #1
   23ca0:	ldr	r3, [r5, #148]	; 0x94
   23ca4:	lsl	r1, r1, r9
   23ca8:	orr	r3, r3, r1
   23cac:	str	r3, [r5, #148]	; 0x94
   23cb0:	mvn	r1, r1
   23cb4:	b	23b6c <luaL_where@@Base+0x3a68>
   23cb8:	ldr	r3, [sp, #20]
   23cbc:	mov	r2, r8
   23cc0:	str	r3, [sp]
   23cc4:	ldr	r1, [pc, #172]	; 23d78 <luaL_where@@Base+0x3c74>
   23cc8:	ldr	r3, [sp, #8]
   23ccc:	mov	r0, r5
   23cd0:	bl	16dbc <_start@@Base+0x3a0c>
   23cd4:	b	23c18 <luaL_where@@Base+0x3b14>
   23cd8:	str	r6, [sp, #4]
   23cdc:	ldr	r2, [sl, #12]
   23ce0:	mov	r3, r9
   23ce4:	str	r2, [sp]
   23ce8:	mov	r0, r5
   23cec:	mov	r2, #0
   23cf0:	mov	r1, #22020096	; 0x1500000
   23cf4:	bl	21a78 <luaL_where@@Base+0x1974>
   23cf8:	str	r6, [sp, #4]
   23cfc:	ldr	r2, [sl, #8]
   23d00:	mov	r3, r8
   23d04:	str	r2, [sp]
   23d08:	ldr	r1, [pc, #112]	; 23d80 <luaL_where@@Base+0x3c7c>
   23d0c:	mov	r2, #0
   23d10:	mov	r0, r5
   23d14:	bl	21a78 <luaL_where@@Base+0x1974>
   23d18:	b	23bf0 <luaL_where@@Base+0x3aec>
   23d1c:	mov	r2, r6
   23d20:	ldrh	r1, [r8]
   23d24:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   23d28:	mov	r3, #1
   23d2c:	mov	fp, #128	; 0x80
   23d30:	bic	r6, r6, r3, lsl r0
   23d34:	add	r3, r4, #12
   23d38:	str	r0, [sp, #8]
   23d3c:	str	r0, [sp, #24]
   23d40:	str	r3, [sp, #12]
   23d44:	b	23b24 <luaL_where@@Base+0x3a20>
   23d48:	ldr	r8, [sp, #24]
   23d4c:	stm	sp, {r4, r6}
   23d50:	mov	r3, r8
   23d54:	mov	r2, fp
   23d58:	ldr	r1, [pc, #28]	; 23d7c <luaL_where@@Base+0x3c78>
   23d5c:	mov	r0, r5
   23d60:	bl	21a78 <luaL_where@@Base+0x1974>
   23d64:	str	r8, [sp, #8]
   23d68:	b	23b24 <luaL_where@@Base+0x3a20>
   23d6c:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   23d70:	andeq	r0, r0, r5, asr r5
   23d74:	cmn	r0, #0
   23d78:	ldr	r0, [r0], #-0
   23d7c:	add	r0, r0, r0
   23d80:	cmp	r0, r0
   23d84:	push	{r4, r5, r6, r7, r8, lr}
   23d88:	mov	r7, #1
   23d8c:	ldr	r3, [pc, #164]	; 23e38 <luaL_where@@Base+0x3d34>
   23d90:	mov	r8, r1
   23d94:	bic	r1, r3, r7, lsl r2
   23d98:	mov	r4, r0
   23d9c:	mov	r6, r2
   23da0:	bl	22b38 <luaL_where@@Base+0x2a34>
   23da4:	mov	r1, r8
   23da8:	ldr	r2, [pc, #140]	; 23e3c <luaL_where@@Base+0x3d38>
   23dac:	mov	r5, r0
   23db0:	mov	r0, r4
   23db4:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   23db8:	mov	r1, r7
   23dbc:	mov	r8, r0
   23dc0:	mov	r0, r4
   23dc4:	bl	17a3c <_start@@Base+0x468c>
   23dc8:	lsl	r1, r5, #12
   23dcc:	ldr	r0, [pc, #108]	; 23e40 <luaL_where@@Base+0x3d3c>
   23dd0:	ldr	ip, [pc, #108]	; 23e44 <luaL_where@@Base+0x3d40>
   23dd4:	and	r2, r6, #15
   23dd8:	and	r3, r5, #15
   23ddc:	lsl	r6, r5, #16
   23de0:	ldr	lr, [pc, #96]	; 23e48 <luaL_where@@Base+0x3d44>
   23de4:	uxth	r5, r1
   23de8:	ldr	r1, [pc, #92]	; 23e4c <luaL_where@@Base+0x3d48>
   23dec:	and	r6, r6, #983040	; 0xf0000
   23df0:	orr	ip, r3, ip
   23df4:	orr	r0, r0, r8, lsl #12
   23df8:	ldr	r3, [r4, #128]	; 0x80
   23dfc:	orr	lr, r2, lr
   23e00:	orr	r0, r0, r6
   23e04:	orr	r1, r2, r1
   23e08:	ldr	r6, [pc, #64]	; 23e50 <luaL_where@@Base+0x3d4c>
   23e0c:	orr	lr, lr, r5
   23e10:	orr	ip, ip, r5
   23e14:	orr	r1, r1, r5
   23e18:	sub	r2, r3, #20
   23e1c:	str	r0, [r3, #-16]
   23e20:	str	r6, [r3, #-4]
   23e24:	str	lr, [r3, #-8]
   23e28:	str	ip, [r3, #-12]
   23e2c:	str	r2, [r4, #128]	; 0x80
   23e30:	str	r1, [r3, #-20]	; 0xffffffec
   23e34:	pop	{r4, r5, r6, r7, r8, pc}
   23e38:			; <UNDEFINED> instruction: 0xffff0000
   23e3c:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   23e40:	vmov	r0, s0
   23e44:	vcvt.f64.s32	d0, s0
   23e48:	vcmp.f64	d0, d0
   23e4c:	vcvt.s32.f64	s0, d0
   23e50:	vmrs	APSR_nzcv, fpscr
   23e54:	ldrh	r3, [r1, #2]
   23e58:	ldrh	r2, [r1]
   23e5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e60:	mov	sl, r1
   23e64:	ldrb	r1, [r1, #4]
   23e68:	lsl	r4, r3, #1
   23e6c:	tst	r3, #8
   23e70:	sub	r3, r2, #1
   23e74:	and	r4, r4, #4
   23e78:	sub	sp, sp, #20
   23e7c:	mov	r5, r0
   23e80:	add	r4, r4, r3, lsl #3
   23e84:	and	r8, r1, #31
   23e88:	beq	23ff8 <luaL_where@@Base+0x3ef4>
   23e8c:	tst	r1, #128	; 0x80
   23e90:	bne	24148 <luaL_where@@Base+0x4044>
   23e94:	ldrsb	r3, [sl, #6]
   23e98:	cmp	r3, #0
   23e9c:	blt	24278 <luaL_where@@Base+0x4174>
   23ea0:	ldr	r3, [pc, #1112]	; 24300 <luaL_where@@Base+0x41fc>
   23ea4:	cmp	r8, #19
   23ea8:	ldr	r1, [pc, #1108]	; 24304 <luaL_where@@Base+0x4200>
   23eac:	movne	r1, r3
   23eb0:	mov	r0, r5
   23eb4:	bl	22b38 <luaL_where@@Base+0x2a34>
   23eb8:	cmp	r8, #14
   23ebc:	mov	r7, r0
   23ec0:	bne	24010 <luaL_where@@Base+0x3f0c>
   23ec4:	ldr	r2, [pc, #1080]	; 24304 <luaL_where@@Base+0x4200>
   23ec8:	mov	r1, sl
   23ecc:	mov	r0, r5
   23ed0:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   23ed4:	ldr	r6, [pc, #1060]	; 24300 <luaL_where@@Base+0x41fc>
   23ed8:	mov	r3, #1
   23edc:	mov	r1, #32768	; 0x8000
   23ee0:	bic	r6, r6, r3, lsl r0
   23ee4:	mov	fp, r0
   23ee8:	mov	r2, r6
   23eec:	mov	r0, r5
   23ef0:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   23ef4:	ldrh	r2, [sl, #2]
   23ef8:	tst	r2, #8
   23efc:	mov	r9, r0
   23f00:	beq	2413c <luaL_where@@Base+0x4038>
   23f04:	ldr	r1, [r5, #128]	; 0x80
   23f08:	lsl	r0, fp, #12
   23f0c:	sub	ip, r1, #8
   23f10:	lsl	r2, r7, #12
   23f14:	and	r3, r7, #128	; 0x80
   23f18:	and	r8, fp, #15
   23f1c:	uxth	r0, r0
   23f20:	orr	r2, r2, #-301989888	; 0xee000000
   23f24:	lsl	fp, fp, #16
   23f28:	ldr	lr, [pc, #984]	; 24308 <luaL_where@@Base+0x4204>
   23f2c:	orr	r0, r8, r0
   23f30:	orr	r2, r2, #2576	; 0xa10
   23f34:	and	fp, fp, #983040	; 0xf0000
   23f38:	orr	r2, fp, r2
   23f3c:	orr	lr, r0, lr
   23f40:	str	lr, [r1, #-4]
   23f44:	str	ip, [r5, #128]	; 0x80
   23f48:	str	r2, [r1, #-8]
   23f4c:	ldrh	r2, [sl, #2]
   23f50:	mov	r8, #19
   23f54:	mov	r1, #1
   23f58:	tst	r2, #4
   23f5c:	bic	r6, r6, r1, lsl r9
   23f60:	beq	240b8 <luaL_where@@Base+0x3fb4>
   23f64:	cmp	r4, #255	; 0xff
   23f68:	bgt	23f74 <luaL_where@@Base+0x3e70>
   23f6c:	tst	r7, #129	; 0x81
   23f70:	beq	241a0 <luaL_where@@Base+0x409c>
   23f74:	mov	sl, #0
   23f78:	mov	fp, #14
   23f7c:	mov	r2, #917504	; 0xe0000
   23f80:	str	r2, [sp, #8]
   23f84:	cmp	r8, #14
   23f88:	str	r3, [sp, #12]
   23f8c:	beq	241d4 <luaL_where@@Base+0x40d0>
   23f90:	mov	r1, #1
   23f94:	mov	r0, r5
   23f98:	bl	17a3c <_start@@Base+0x468c>
   23f9c:	cmp	r8, #14
   23fa0:	ldr	r3, [sp, #12]
   23fa4:	bls	24288 <luaL_where@@Base+0x4184>
   23fa8:	ldr	r2, [sp, #8]
   23fac:	ldr	r1, [r5, #128]	; 0x80
   23fb0:	orr	r2, r2, #-536870898	; 0xe000000e
   23fb4:	orr	r2, r2, #57671680	; 0x3700000
   23fb8:	cmp	r3, #0
   23fbc:	sub	r3, r1, #4
   23fc0:	str	r3, [r5, #128]	; 0x80
   23fc4:	str	r2, [r1, #-4]
   23fc8:	beq	24120 <luaL_where@@Base+0x401c>
   23fcc:	cmp	sl, #0
   23fd0:	bne	23ff0 <luaL_where@@Base+0x3eec>
   23fd4:	add	r4, r4, #4
   23fd8:	str	r4, [sp]
   23fdc:	mov	r3, r9
   23fe0:	mov	r2, fp
   23fe4:	mov	r0, r5
   23fe8:	ldr	r1, [pc, #796]	; 2430c <luaL_where@@Base+0x4208>
   23fec:	bl	16dbc <_start@@Base+0x3a0c>
   23ff0:	add	sp, sp, #20
   23ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ff8:	ldrsb	r3, [sl, #6]
   23ffc:	cmp	r3, #0
   24000:	blt	24164 <luaL_where@@Base+0x4060>
   24004:	cmp	r8, #14
   24008:	mov	r7, #128	; 0x80
   2400c:	beq	23ec4 <luaL_where@@Base+0x3dc0>
   24010:	ldr	r6, [pc, #744]	; 24300 <luaL_where@@Base+0x41fc>
   24014:	mov	r1, sl
   24018:	mov	r2, r6
   2401c:	mov	r0, r5
   24020:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   24024:	mov	r3, #1
   24028:	mov	r1, #32768	; 0x8000
   2402c:	bic	r6, r6, r3, lsl r0
   24030:	mov	fp, r0
   24034:	mov	r2, r6
   24038:	mov	r0, r5
   2403c:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   24040:	ldrh	r2, [sl, #2]
   24044:	tst	r2, #8
   24048:	mov	r9, r0
   2404c:	beq	2413c <luaL_where@@Base+0x4038>
   24050:	ldr	r1, [r5, #128]	; 0x80
   24054:	cmp	r8, #19
   24058:	sub	ip, r1, #8
   2405c:	lsl	r2, r7, #12
   24060:	lsl	r0, fp, #12
   24064:	and	r3, r7, #128	; 0x80
   24068:	bne	23f18 <luaL_where@@Base+0x3e14>
   2406c:	ldr	r8, [pc, #668]	; 24310 <luaL_where@@Base+0x420c>
   24070:	and	fp, r7, #15
   24074:	orr	r8, fp, r8
   24078:	lsl	lr, r7, #16
   2407c:	ldr	fp, [pc, #656]	; 24314 <luaL_where@@Base+0x4210>
   24080:	and	lr, lr, #983040	; 0xf0000
   24084:	uxth	r2, r2
   24088:	orr	fp, lr, fp
   2408c:	orr	r2, r8, r2
   24090:	orr	r0, fp, r0
   24094:	str	r0, [r1, #-4]
   24098:	str	ip, [r5, #128]	; 0x80
   2409c:	str	r2, [r1, #-8]
   240a0:	ldrh	r2, [sl, #2]
   240a4:	mov	r1, #1
   240a8:	mov	r8, #14
   240ac:	tst	r2, #4
   240b0:	bic	r6, r6, r1, lsl r9
   240b4:	bne	23f64 <luaL_where@@Base+0x3e60>
   240b8:	cmp	r3, #0
   240bc:	bne	23ff0 <luaL_where@@Base+0x3eec>
   240c0:	cmp	r8, #14
   240c4:	bne	24118 <luaL_where@@Base+0x4014>
   240c8:	cmp	r4, #1024	; 0x400
   240cc:	bge	24238 <luaL_where@@Base+0x4134>
   240d0:	mov	sl, #128	; 0x80
   240d4:	ldr	r2, [r5, #128]	; 0x80
   240d8:	mov	fp, sl
   240dc:	lsl	r3, r7, #12
   240e0:	cmp	r4, #0
   240e4:	uxth	r3, r3
   240e8:	ldrlt	ip, [pc, #552]	; 24318 <luaL_where@@Base+0x4214>
   240ec:	ldrge	ip, [pc, #552]	; 2431c <luaL_where@@Base+0x4218>
   240f0:	orr	r3, r3, r9, lsl #16
   240f4:	rsblt	r0, r4, #0
   240f8:	movge	r0, r4
   240fc:	orr	r3, r3, #16777216	; 0x1000000
   24100:	orr	r3, r3, ip
   24104:	sub	r1, r2, #4
   24108:	orr	r3, r3, r0, asr #2
   2410c:	str	r1, [r5, #128]	; 0x80
   24110:	str	r3, [r2, #-4]
   24114:	b	23fcc <luaL_where@@Base+0x3ec8>
   24118:	mov	sl, #128	; 0x80
   2411c:	mov	fp, sl
   24120:	str	r4, [sp]
   24124:	mov	r2, r7
   24128:	mov	r3, r9
   2412c:	ldr	r1, [pc, #472]	; 2430c <luaL_where@@Base+0x4208>
   24130:	mov	r0, r5
   24134:	bl	16dbc <_start@@Base+0x3a0c>
   24138:	b	23fcc <luaL_where@@Base+0x3ec8>
   2413c:	and	r3, fp, #128	; 0x80
   24140:	mov	r7, fp
   24144:	b	23f54 <luaL_where@@Base+0x3e50>
   24148:	cmp	r8, #19
   2414c:	beq	242d8 <luaL_where@@Base+0x41d4>
   24150:	ldrsb	r3, [sl, #6]
   24154:	cmp	r3, #0
   24158:	blt	242c8 <luaL_where@@Base+0x41c4>
   2415c:	ldr	r1, [pc, #412]	; 24300 <luaL_where@@Base+0x41fc>
   24160:	b	23eb0 <luaL_where@@Base+0x3dac>
   24164:	ldrb	r3, [sl, #7]
   24168:	cmp	r3, #0
   2416c:	bne	24004 <luaL_where@@Base+0x3f00>
   24170:	mov	r3, #128	; 0x80
   24174:	mov	r7, r3
   24178:	ldr	r2, [pc, #384]	; 24300 <luaL_where@@Base+0x41fc>
   2417c:	mov	r1, #32768	; 0x8000
   24180:	mov	r0, r5
   24184:	str	r3, [sp, #8]
   24188:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   2418c:	ldr	r6, [pc, #364]	; 24300 <luaL_where@@Base+0x41fc>
   24190:	ldrh	r2, [sl, #2]
   24194:	ldr	r3, [sp, #8]
   24198:	mov	r9, r0
   2419c:	b	23f54 <luaL_where@@Base+0x3e50>
   241a0:	ldr	sl, [r5, #144]	; 0x90
   241a4:	add	fp, r7, r1
   241a8:	and	sl, sl, r6
   241ac:	lsr	sl, sl, fp
   241b0:	ands	sl, sl, r1
   241b4:	beq	242b8 <luaL_where@@Base+0x41b4>
   241b8:	ldr	r2, [r5, #148]	; 0x94
   241bc:	lsl	r0, fp, #16
   241c0:	orr	r1, r2, r1, lsl fp
   241c4:	str	r0, [sp, #8]
   241c8:	str	r1, [r5, #148]	; 0x94
   241cc:	and	sl, fp, #128	; 0x80
   241d0:	b	23f84 <luaL_where@@Base+0x3e80>
   241d4:	mov	r1, #2
   241d8:	mov	r0, r5
   241dc:	bl	17a3c <_start@@Base+0x468c>
   241e0:	ldr	r3, [sp, #8]
   241e4:	ldr	r2, [r5, #128]	; 0x80
   241e8:	orr	r1, r3, #-536870897	; 0xe000000f
   241ec:	ldr	r3, [sp, #12]
   241f0:	mov	r0, r2
   241f4:	orr	r1, r1, #57671680	; 0x3700000
   241f8:	sub	r2, r2, #4
   241fc:	cmp	r3, #0
   24200:	str	r2, [r5, #128]	; 0x80
   24204:	str	r1, [r0, #-4]
   24208:	bne	23fcc <luaL_where@@Base+0x3ec8>
   2420c:	cmp	r4, #1024	; 0x400
   24210:	blt	240dc <luaL_where@@Base+0x3fd8>
   24214:	cmp	sl, #0
   24218:	bne	2423c <luaL_where@@Base+0x4138>
   2421c:	add	r3, r4, #4
   24220:	str	r3, [sp]
   24224:	mov	r2, fp
   24228:	mov	r3, r9
   2422c:	ldr	r1, [pc, #216]	; 2430c <luaL_where@@Base+0x4208>
   24230:	mov	r0, r5
   24234:	bl	16dbc <_start@@Base+0x3a0c>
   24238:	ldr	r2, [r5, #128]	; 0x80
   2423c:	lsl	r7, r7, #12
   24240:	ldr	r1, [pc, #216]	; 24320 <luaL_where@@Base+0x421c>
   24244:	uxth	r7, r7
   24248:	orr	r1, r7, r1
   2424c:	sub	r0, r2, #4
   24250:	str	r0, [r5, #128]	; 0x80
   24254:	mov	r3, r9
   24258:	str	r1, [r2, #-4]
   2425c:	mov	r0, r5
   24260:	mov	r2, #14
   24264:	stm	sp, {r4, r6}
   24268:	ldr	r1, [pc, #180]	; 24324 <luaL_where@@Base+0x4220>
   2426c:	bl	21a78 <luaL_where@@Base+0x1974>
   24270:	add	sp, sp, #20
   24274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24278:	ldrb	r3, [sl, #7]
   2427c:	cmp	r3, #0
   24280:	beq	24170 <luaL_where@@Base+0x406c>
   24284:	b	23ea0 <luaL_where@@Base+0x3d9c>
   24288:	add	r8, r8, #1
   2428c:	ldr	r2, [r5, #128]	; 0x80
   24290:	orr	r8, r8, #-486539264	; 0xe3000000
   24294:	ldr	r1, [sp, #8]
   24298:	orr	r8, r8, #7340032	; 0x700000
   2429c:	orr	r8, r8, r1
   242a0:	cmp	r3, #0
   242a4:	sub	r3, r2, #4
   242a8:	str	r3, [r5, #128]	; 0x80
   242ac:	str	r8, [r2, #-4]
   242b0:	bne	23fcc <luaL_where@@Base+0x3ec8>
   242b4:	b	24120 <luaL_where@@Base+0x401c>
   242b8:	mov	r2, #917504	; 0xe0000
   242bc:	str	r2, [sp, #8]
   242c0:	mov	fp, #14
   242c4:	b	23f84 <luaL_where@@Base+0x3e80>
   242c8:	ldrb	r3, [sl, #7]
   242cc:	cmp	r3, #0
   242d0:	bne	2415c <luaL_where@@Base+0x4058>
   242d4:	b	24170 <luaL_where@@Base+0x406c>
   242d8:	ldr	r1, [pc, #36]	; 24304 <luaL_where@@Base+0x4200>
   242dc:	bl	22b38 <luaL_where@@Base+0x2a34>
   242e0:	mov	r1, sl
   242e4:	mov	r8, #14
   242e8:	mov	r7, r0
   242ec:	mov	r2, r0
   242f0:	mov	r0, r5
   242f4:	bl	23d84 <luaL_where@@Base+0x3c80>
   242f8:	and	r3, r7, #128	; 0x80
   242fc:	b	24178 <luaL_where@@Base+0x4074>
   24300:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   24304:			; <UNDEFINED> instruction: 0xffff0000
   24308:	vcvt.f64.s32	d0, s0
   2430c:	ldr	r0, [r0], #-0
   24310:	vcvt.s32.f64	s0, d0
   24314:	vmov	r0, s0
   24318:	vldr	d0, [r0, #-0]
   2431c:	vldr	d0, [r0]
   24320:	vldr	d0, [lr]
   24324:	add	r0, r0, r0
   24328:	ldrsb	r3, [r1, #6]
   2432c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24330:	sub	sp, sp, #68	; 0x44
   24334:	cmp	r3, #0
   24338:	mov	r7, r1
   2433c:	mov	r4, r0
   24340:	str	r2, [sp, #28]
   24344:	movge	fp, #1
   24348:	bge	24358 <luaL_where@@Base+0x4254>
   2434c:	ldrb	fp, [r1, #7]
   24350:	adds	fp, fp, #0
   24354:	movne	fp, #1
   24358:	ldr	r5, [pc, #2248]	; 24c28 <luaL_where@@Base+0x4b24>
   2435c:	mov	r1, r7
   24360:	mov	r2, r5
   24364:	mov	r0, r4
   24368:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   2436c:	mov	r6, #1
   24370:	ldrh	r1, [r7]
   24374:	lsl	r3, r6, r0
   24378:	bic	r5, r5, r3
   2437c:	mov	r8, r0
   24380:	mov	r2, r5
   24384:	mov	r0, r4
   24388:	str	r3, [sp, #60]	; 0x3c
   2438c:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   24390:	ldrh	sl, [r7, #2]
   24394:	ldr	r3, [r4, #136]	; 0x88
   24398:	ldr	r7, [pc, #2188]	; 24c2c <luaL_where@@Base+0x4b28>
   2439c:	str	r3, [sp, #48]	; 0x30
   243a0:	add	r3, r3, sl, lsl #3
   243a4:	str	r3, [sp, #40]	; 0x28
   243a8:	ldrb	r3, [r3, #4]
   243ac:	and	r3, r3, #31
   243b0:	cmp	r3, #14
   243b4:	str	r3, [sp, #12]
   243b8:	mov	ip, r0
   243bc:	str	r0, [sp, #16]
   243c0:	bhi	246cc <luaL_where@@Base+0x45c8>
   243c4:	lsl	ip, r6, ip
   243c8:	mvn	r1, r3
   243cc:	mov	r0, r7
   243d0:	str	ip, [sp, #36]	; 0x24
   243d4:	bl	16d00 <_start@@Base+0x3950>
   243d8:	ldr	ip, [sp, #36]	; 0x24
   243dc:	cmp	sl, #32768	; 0x8000
   243e0:	bic	r5, r5, ip
   243e4:	mov	r9, r0
   243e8:	mov	r3, r0
   243ec:	bcc	2473c <luaL_where@@Base+0x4638>
   243f0:	ldr	r3, [sp, #12]
   243f4:	cmp	r3, #14
   243f8:	bne	24bf0 <luaL_where@@Base+0x4aec>
   243fc:	mov	r1, r5
   24400:	mov	r0, r4
   24404:	bl	22b38 <luaL_where@@Base+0x2a34>
   24408:	mov	r3, r0
   2440c:	str	r0, [sp, #20]
   24410:	bic	r5, r5, r6, lsl r3
   24414:	mov	r0, r4
   24418:	mov	r1, r5
   2441c:	bl	22b38 <luaL_where@@Base+0x2a34>
   24420:	mov	r3, #0
   24424:	str	r7, [sp, #32]
   24428:	str	r3, [sp, #56]	; 0x38
   2442c:	bic	r5, r5, r6, lsl r0
   24430:	str	r0, [sp, #44]	; 0x2c
   24434:	str	r0, [sp, #52]	; 0x34
   24438:	ldr	r3, [r4, #144]	; 0x90
   2443c:	ldr	r2, [pc, #2028]	; 24c30 <luaL_where@@Base+0x4b2c>
   24440:	and	r3, r3, r5
   24444:	and	r6, r3, r2
   24448:	ands	r6, r6, r3, lsr #1
   2444c:	bne	24794 <luaL_where@@Base+0x4690>
   24450:	lsr	r0, r5, #1
   24454:	and	r6, r3, r0
   24458:	ands	r6, r6, r2
   2445c:	clzne	r6, r6
   24460:	eorne	r6, r6, #31
   24464:	bne	2448c <luaL_where@@Base+0x4388>
   24468:	ldr	r1, [pc, #1988]	; 24c34 <luaL_where@@Base+0x4b30>
   2446c:	and	r3, r3, r5, lsl #1
   24470:	ands	r3, r3, r1
   24474:	bne	24bac <luaL_where@@Base+0x4aa8>
   24478:	and	r5, r5, r2
   2447c:	and	r1, r5, r0
   24480:	mov	r0, r4
   24484:	bl	21328 <luaL_where@@Base+0x1224>
   24488:	mov	r6, r0
   2448c:	add	r5, r6, #1
   24490:	mov	r0, r4
   24494:	ldr	r1, [r4, r5, lsl #2]
   24498:	uxth	r1, r1
   2449c:	bl	21284 <luaL_where@@Base+0x1180>
   244a0:	mov	r2, #1
   244a4:	ldr	r3, [r4, #148]	; 0x94
   244a8:	lsl	r5, r2, r5
   244ac:	orr	r5, r5, r2, lsl r6
   244b0:	orr	r5, r3, r5
   244b4:	lsl	r3, r6, #16
   244b8:	str	r5, [r4, #148]	; 0x94
   244bc:	str	r3, [sp, #24]
   244c0:	ldr	r3, [sp, #28]
   244c4:	lsl	r9, r8, #16
   244c8:	cmp	r3, #9
   244cc:	orr	r5, r9, #-486539264	; 0xe3000000
   244d0:	mov	r3, #0
   244d4:	orr	r5, r5, #5242880	; 0x500000
   244d8:	str	r3, [r4, #244]	; 0xf4
   244dc:	ldr	r7, [r4, #128]	; 0x80
   244e0:	beq	24a60 <luaL_where@@Base+0x495c>
   244e4:	cmp	fp, #0
   244e8:	moveq	fp, r7
   244ec:	bne	249bc <luaL_where@@Base+0x48b8>
   244f0:	sub	r3, fp, #8
   244f4:	mov	r1, #16
   244f8:	str	r3, [r4, #128]	; 0x80
   244fc:	mov	r2, r8
   24500:	str	r5, [fp, #-8]
   24504:	mov	r3, r8
   24508:	str	r1, [sp]
   2450c:	mov	r0, r4
   24510:	ldr	r1, [pc, #1824]	; 24c38 <luaL_where@@Base+0x4b34>
   24514:	bl	16dbc <_start@@Base+0x3a0c>
   24518:	ldr	r3, [sp, #28]
   2451c:	sub	r5, fp, #4
   24520:	cmp	r3, #8
   24524:	beq	24a4c <luaL_where@@Base+0x4948>
   24528:	ldr	r1, [r4, #128]	; 0x80
   2452c:	sub	r3, r7, r1
   24530:	sub	r2, r1, #4
   24534:	asr	r3, r3, #2
   24538:	sub	r3, r3, #1
   2453c:	bic	r3, r3, #-16777216	; 0xff000000
   24540:	orr	r3, r3, #167772160	; 0xa000000
   24544:	str	r3, [r1, #-4]
   24548:	str	r2, [r4, #128]	; 0x80
   2454c:	ldr	r3, [sp, #12]
   24550:	cmp	r3, #2
   24554:	bls	24980 <luaL_where@@Base+0x487c>
   24558:	ldr	r0, [sp, #44]	; 0x2c
   2455c:	ldr	ip, [sp, #32]
   24560:	ldr	r1, [sp, #56]	; 0x38
   24564:	orr	r7, r0, ip
   24568:	ldr	r0, [sp, #20]
   2456c:	ldr	ip, [sp, #24]
   24570:	eor	r1, r1, #22020096	; 0x1500000
   24574:	ldr	r3, [pc, #1728]	; 24c3c <luaL_where@@Base+0x4b38>
   24578:	orr	r0, r0, ip
   2457c:	orr	r0, r1, r0
   24580:	add	r1, r6, #1
   24584:	orr	r3, r9, r3
   24588:	orr	r7, r7, r1, lsl #16
   2458c:	orr	r3, r3, r6, lsl #12
   24590:	sub	r1, r2, #12
   24594:	str	r0, [r2, #-4]
   24598:	str	r7, [r2, #-8]
   2459c:	str	r1, [r4, #128]	; 0x80
   245a0:	str	r3, [r2, #-12]
   245a4:	sub	r3, r1, r5
   245a8:	cmp	sl, #32768	; 0x8000
   245ac:	asr	r3, r3, #2
   245b0:	sub	r3, r3, #2
   245b4:	bic	r3, r3, #-16777216	; 0xff000000
   245b8:	orr	r3, r3, #436207616	; 0x1a000000
   245bc:	str	r3, [fp, #-4]
   245c0:	bcs	247f0 <luaL_where@@Base+0x46ec>
   245c4:	ldr	r3, [sp, #40]	; 0x28
   245c8:	ldrb	r3, [r3, #4]
   245cc:	and	r3, r3, #31
   245d0:	cmp	r3, #4
   245d4:	beq	24a9c <luaL_where@@Base+0x4998>
   245d8:	cmp	r3, #14
   245dc:	beq	24b20 <luaL_where@@Base+0x4a1c>
   245e0:	cmp	r3, #2
   245e4:	subls	r3, r3, #1
   245e8:	bls	2460c <luaL_where@@Base+0x4508>
   245ec:	ldr	r3, [sp, #48]	; 0x30
   245f0:	ldr	r2, [pc, #1608]	; 24c40 <luaL_where@@Base+0x4b3c>
   245f4:	ldr	r3, [r3, sl, lsl #3]
   245f8:	add	r2, r3, r2
   245fc:	eor	r3, r3, r2
   24600:	sub	r0, r3, r2, ror #18
   24604:	eor	r3, r0, r2, ror #13
   24608:	sub	r3, r3, r0, ror #19
   2460c:	cmp	r3, #0
   24610:	beq	24ab0 <luaL_where@@Base+0x49ac>
   24614:	ldr	r2, [sp, #24]
   24618:	ldr	r0, [pc, #1572]	; 24c44 <luaL_where@@Base+0x4b40>
   2461c:	orr	sl, r6, r2
   24620:	ldr	r2, [pc, #1568]	; 24c48 <luaL_where@@Base+0x4b44>
   24624:	ldr	ip, [sp, #12]
   24628:	orr	r9, r9, r8, lsl #12
   2462c:	orr	r0, r9, r0
   24630:	orr	r2, sl, r2
   24634:	lsl	r7, r6, #12
   24638:	cmp	ip, #4
   2463c:	orr	r0, r0, r6
   24640:	orr	r2, r2, r7
   24644:	sub	ip, r1, #8
   24648:	str	r0, [r1, #-4]
   2464c:	str	ip, [r4, #128]	; 0x80
   24650:	str	r2, [r1, #-8]
   24654:	beq	24ad4 <luaL_where@@Base+0x49d0>
   24658:	ldr	r0, [sp, #36]	; 0x24
   2465c:	ldr	r2, [sp, #60]	; 0x3c
   24660:	ldr	r1, [pc, #1472]	; 24c28 <luaL_where@@Base+0x4b24>
   24664:	orr	r2, r2, r0
   24668:	bic	r1, r1, r2
   2466c:	str	r3, [sp]
   24670:	mov	r2, r6
   24674:	str	r1, [sp, #4]
   24678:	mov	r3, #14
   2467c:	mov	r1, #-536870912	; 0xe0000000
   24680:	mov	r0, r4
   24684:	bl	21a78 <luaL_where@@Base+0x1974>
   24688:	ldr	r5, [sp, #16]
   2468c:	mov	r3, #20
   24690:	str	r3, [sp]
   24694:	mov	r2, r8
   24698:	mov	r3, r5
   2469c:	mov	r0, r4
   246a0:	ldr	r1, [pc, #1424]	; 24c38 <luaL_where@@Base+0x4b34>
   246a4:	bl	16dbc <_start@@Base+0x3a0c>
   246a8:	mov	r2, #28
   246ac:	str	r2, [sp]
   246b0:	mov	r3, r5
   246b4:	mov	r0, r4
   246b8:	mov	r2, #14
   246bc:	ldr	r1, [pc, #1396]	; 24c38 <luaL_where@@Base+0x4b34>
   246c0:	bl	16dbc <_start@@Base+0x3a0c>
   246c4:	add	sp, sp, #68	; 0x44
   246c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   246cc:	ldr	r3, [sp, #16]
   246d0:	mov	r0, r7
   246d4:	mvn	r1, #13
   246d8:	lsl	r3, r6, r3
   246dc:	mov	r6, r3
   246e0:	str	r3, [sp, #36]	; 0x24
   246e4:	bl	16d00 <_start@@Base+0x3950>
   246e8:	cmp	sl, #32768	; 0x8000
   246ec:	bic	r5, r5, r6
   246f0:	mov	r9, r0
   246f4:	mov	r3, r0
   246f8:	bcc	24748 <luaL_where@@Base+0x4644>
   246fc:	eor	r3, r9, r7
   24700:	mov	r2, r5
   24704:	mov	r1, sl
   24708:	mov	r0, r4
   2470c:	str	r3, [sp, #32]
   24710:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   24714:	str	r0, [sp, #20]
   24718:	ldr	r1, [sp, #20]
   2471c:	mov	r3, #1
   24720:	mov	r2, #0
   24724:	bic	r5, r5, r3, lsl r1
   24728:	str	r2, [sp, #56]	; 0x38
   2472c:	str	r2, [sp, #44]	; 0x2c
   24730:	mov	r3, #128	; 0x80
   24734:	str	r3, [sp, #52]	; 0x34
   24738:	b	24438 <luaL_where@@Base+0x4334>
   2473c:	ldr	r2, [sp, #12]
   24740:	cmp	r2, #4
   24744:	beq	246fc <luaL_where@@Base+0x45f8>
   24748:	ldr	r2, [sp, #12]
   2474c:	cmp	r2, #14
   24750:	beq	24b34 <luaL_where@@Base+0x4a30>
   24754:	ldr	r0, [pc, #1232]	; 24c2c <luaL_where@@Base+0x4b28>
   24758:	ldr	r2, [sp, #12]
   2475c:	eor	r3, r3, r0
   24760:	cmp	r2, #2
   24764:	str	r3, [sp, #32]
   24768:	bhi	247a4 <luaL_where@@Base+0x46a0>
   2476c:	mov	r3, #0
   24770:	str	r3, [sp, #56]	; 0x38
   24774:	str	r3, [sp, #44]	; 0x2c
   24778:	str	r3, [sp, #20]
   2477c:	mov	r3, #917504	; 0xe0000
   24780:	str	r3, [sp, #24]
   24784:	mov	r3, #128	; 0x80
   24788:	str	r3, [sp, #52]	; 0x34
   2478c:	mov	r6, #14
   24790:	b	244c0 <luaL_where@@Base+0x43bc>
   24794:	clz	r6, r6
   24798:	eor	r6, r6, #31
   2479c:	add	r5, r6, #1
   247a0:	b	244a0 <luaL_where@@Base+0x439c>
   247a4:	ldr	r3, [sp, #48]	; 0x30
   247a8:	ldr	r1, [r3, sl, lsl #3]
   247ac:	bl	16d00 <_start@@Base+0x3950>
   247b0:	subs	r3, r0, #0
   247b4:	str	r3, [sp, #56]	; 0x38
   247b8:	movne	r3, #0
   247bc:	strne	r3, [sp, #44]	; 0x2c
   247c0:	strne	r3, [sp, #20]
   247c4:	bne	24730 <luaL_where@@Base+0x462c>
   247c8:	mov	r2, r5
   247cc:	mov	r1, sl
   247d0:	mov	r0, r4
   247d4:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   247d8:	mov	r3, #1
   247dc:	ldr	r2, [sp, #56]	; 0x38
   247e0:	str	r2, [sp, #44]	; 0x2c
   247e4:	str	r0, [sp, #20]
   247e8:	bic	r5, r5, r3, lsl r0
   247ec:	b	24730 <luaL_where@@Base+0x462c>
   247f0:	ldr	r0, [sp, #24]
   247f4:	ldr	r3, [pc, #1100]	; 24c48 <luaL_where@@Base+0x4b44>
   247f8:	orr	r0, r6, r0
   247fc:	ldr	r2, [pc, #1088]	; 24c44 <luaL_where@@Base+0x4b40>
   24800:	orr	r3, r0, r3
   24804:	orr	r9, r9, r8, lsl #12
   24808:	ldr	r0, [sp, #12]
   2480c:	orr	r2, r9, r2
   24810:	lsl	r7, r6, #12
   24814:	cmp	r0, #4
   24818:	orr	r0, r2, r6
   2481c:	orr	r2, r3, r7
   24820:	sub	r3, r1, #8
   24824:	str	r0, [r1, #-4]
   24828:	str	r3, [r4, #128]	; 0x80
   2482c:	str	r2, [r1, #-8]
   24830:	beq	24ad4 <luaL_where@@Base+0x49d0>
   24834:	ldr	r2, [sp, #52]	; 0x34
   24838:	ands	r9, r2, #128	; 0x80
   2483c:	bne	24870 <luaL_where@@Base+0x476c>
   24840:	ldr	r2, [sp, #44]	; 0x2c
   24844:	cmp	r2, #14
   24848:	subeq	r3, r1, #12
   2484c:	ldreq	r2, [pc, #1016]	; 24c4c <luaL_where@@Base+0x4b48>
   24850:	ldreq	r0, [sp, #52]	; 0x34
   24854:	sub	r3, r3, #4
   24858:	orreq	r2, r0, r2
   2485c:	streq	r2, [r1, #-12]
   24860:	ldr	r2, [sp, #44]	; 0x2c
   24864:	lsl	r2, r2, #12
   24868:	orr	r2, r2, #60817408	; 0x3a00000
   2486c:	str	r2, [r3]
   24870:	ldr	fp, [sp, #24]
   24874:	ldr	r2, [pc, #980]	; 24c50 <luaL_where@@Base+0x4b4c>
   24878:	add	r5, r6, #1
   2487c:	orr	r1, r7, fp
   24880:	orr	r2, r5, r2
   24884:	orr	r0, r1, #-536870898	; 0xe000000e
   24888:	str	r0, [r3, #-4]
   2488c:	sub	ip, r3, #8
   24890:	orr	r1, r2, r1
   24894:	mov	r0, #20
   24898:	str	ip, [r4, #128]	; 0x80
   2489c:	mov	r2, r8
   248a0:	str	r1, [r3, #-8]
   248a4:	ldr	r3, [sp, #16]
   248a8:	str	r0, [sp]
   248ac:	ldr	r1, [pc, #900]	; 24c38 <luaL_where@@Base+0x4b34>
   248b0:	mov	r0, r4
   248b4:	bl	16dbc <_start@@Base+0x3a0c>
   248b8:	ldr	r3, [pc, #916]	; 24c54 <luaL_where@@Base+0x4b50>
   248bc:	ldr	r1, [r4, #128]	; 0x80
   248c0:	orr	r3, r6, r3
   248c4:	lsl	r8, r5, #16
   248c8:	orr	r3, r3, r7
   248cc:	orr	r2, r3, r8
   248d0:	sub	ip, r1, #4
   248d4:	mov	r0, #28
   248d8:	str	ip, [r4, #128]	; 0x80
   248dc:	ldr	r3, [sp, #16]
   248e0:	str	r2, [r1, #-4]
   248e4:	mov	r2, #14
   248e8:	str	r0, [sp]
   248ec:	ldr	r1, [pc, #836]	; 24c38 <luaL_where@@Base+0x4b34>
   248f0:	mov	r0, r4
   248f4:	bl	16dbc <_start@@Base+0x3a0c>
   248f8:	ldr	r2, [sp, #20]
   248fc:	ldr	r3, [pc, #852]	; 24c58 <luaL_where@@Base+0x4b54>
   24900:	ldr	ip, [r4, #128]	; 0x80
   24904:	orr	r1, r2, fp
   24908:	orr	r3, r6, r3
   2490c:	lsl	r5, r5, #12
   24910:	orr	r8, r3, r8
   24914:	orr	r3, r1, #-536870912	; 0xe0000000
   24918:	orr	r8, r8, r5
   2491c:	sub	r2, ip, #4
   24920:	orr	r3, r3, #2097152	; 0x200000
   24924:	cmp	r9, #0
   24928:	str	r2, [r4, #128]	; 0x80
   2492c:	orr	r5, r3, r5
   24930:	str	r8, [ip, #-4]
   24934:	beq	249d8 <luaL_where@@Base+0x48d4>
   24938:	ldr	r0, [sp, #20]
   2493c:	ldr	r2, [sp, #36]	; 0x24
   24940:	mov	r3, #1
   24944:	ldr	lr, [pc, #732]	; 24c28 <luaL_where@@Base+0x4b24>
   24948:	orr	r3, r2, r3, lsl r0
   2494c:	ldr	r7, [pc, #748]	; 24c40 <luaL_where@@Base+0x4b3c>
   24950:	bic	lr, lr, r3
   24954:	sub	r1, ip, #8
   24958:	str	r1, [r4, #128]	; 0x80
   2495c:	mov	r3, r0
   24960:	str	r5, [ip, #-8]
   24964:	mov	r2, r6
   24968:	mov	r0, r4
   2496c:	ldr	r1, [pc, #744]	; 24c5c <luaL_where@@Base+0x4b58>
   24970:	stm	sp, {r7, lr}
   24974:	bl	21a78 <luaL_where@@Base+0x1974>
   24978:	add	sp, sp, #68	; 0x44
   2497c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24980:	ldr	r3, [sp, #24]
   24984:	ldr	r1, [sp, #32]
   24988:	mov	r0, r4
   2498c:	orr	r7, r3, r1
   24990:	sub	r3, r2, #4
   24994:	mov	r1, #12
   24998:	str	r3, [r4, #128]	; 0x80
   2499c:	str	r7, [r2, #-4]
   249a0:	mov	r3, r8
   249a4:	str	r1, [sp]
   249a8:	mov	r2, r6
   249ac:	ldr	r1, [pc, #644]	; 24c38 <luaL_where@@Base+0x4b34>
   249b0:	bl	16dbc <_start@@Base+0x3a0c>
   249b4:	ldr	r1, [r4, #128]	; 0x80
   249b8:	b	245a4 <luaL_where@@Base+0x44a0>
   249bc:	ldr	r2, [r4, #140]	; 0x8c
   249c0:	mov	r1, r8
   249c4:	sub	r2, r2, #240	; 0xf0
   249c8:	mov	r0, r4
   249cc:	bl	1e2e0 <_start@@Base+0xaf30>
   249d0:	ldr	fp, [r4, #128]	; 0x80
   249d4:	b	244f0 <luaL_where@@Base+0x43ec>
   249d8:	ldr	r0, [sp, #52]	; 0x34
   249dc:	str	r5, [ip, #-8]
   249e0:	orr	r3, r0, #-536870912	; 0xe0000000
   249e4:	orr	r3, r3, #8388608	; 0x800000
   249e8:	orr	r7, r3, r7
   249ec:	ldr	r3, [pc, #620]	; 24c60 <luaL_where@@Base+0x4b5c>
   249f0:	lsl	r6, r0, #16
   249f4:	orr	r3, r1, r3
   249f8:	sub	r0, ip, #16
   249fc:	orr	r7, r7, r6
   24a00:	str	r3, [ip, #-12]
   24a04:	mov	r1, sl
   24a08:	str	r0, [r4, #128]	; 0x80
   24a0c:	ldr	r2, [pc, #592]	; 24c64 <luaL_where@@Base+0x4b60>
   24a10:	mov	r0, r4
   24a14:	str	r7, [ip, #-16]
   24a18:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   24a1c:	ldr	r2, [sp, #20]
   24a20:	ldr	r3, [pc, #576]	; 24c68 <luaL_where@@Base+0x4b64>
   24a24:	orr	r6, r6, r2, lsl #12
   24a28:	ldr	r2, [r4, #128]	; 0x80
   24a2c:	orr	r3, r6, r3
   24a30:	sub	r1, r2, #4
   24a34:	str	r1, [r4, #128]	; 0x80
   24a38:	and	r0, r0, #15
   24a3c:	orr	r3, r3, r0
   24a40:	str	r3, [r2, #-4]
   24a44:	add	sp, sp, #68	; 0x44
   24a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a4c:	mov	r1, #0
   24a50:	mov	r0, r4
   24a54:	bl	17a3c <_start@@Base+0x468c>
   24a58:	ldr	r2, [r4, #128]	; 0x80
   24a5c:	b	2454c <luaL_where@@Base+0x4448>
   24a60:	mov	r1, #14
   24a64:	mov	r0, r4
   24a68:	bl	17a3c <_start@@Base+0x468c>
   24a6c:	ldr	fp, [r4, #128]	; 0x80
   24a70:	mov	r1, #16
   24a74:	sub	r3, fp, #8
   24a78:	str	r3, [r4, #128]	; 0x80
   24a7c:	mov	r2, r8
   24a80:	str	r5, [fp, #-8]
   24a84:	mov	r3, r8
   24a88:	str	r1, [sp]
   24a8c:	ldr	r1, [pc, #420]	; 24c38 <luaL_where@@Base+0x4b34>
   24a90:	sub	r5, fp, #4
   24a94:	bl	16dbc <_start@@Base+0x3a0c>
   24a98:	b	24528 <luaL_where@@Base+0x4424>
   24a9c:	ldr	r3, [sp, #48]	; 0x30
   24aa0:	ldr	r3, [r3, sl, lsl #3]
   24aa4:	ldr	r3, [r3, #8]
   24aa8:	cmp	r3, #0
   24aac:	bne	24614 <luaL_where@@Base+0x4510>
   24ab0:	mov	r1, #20
   24ab4:	str	r1, [sp]
   24ab8:	ldr	r3, [sp, #16]
   24abc:	mov	r2, r8
   24ac0:	mov	r0, r4
   24ac4:	ldr	r1, [pc, #364]	; 24c38 <luaL_where@@Base+0x4b34>
   24ac8:	bl	16dbc <_start@@Base+0x3a0c>
   24acc:	add	sp, sp, #68	; 0x44
   24ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24ad4:	add	r6, r6, #1
   24ad8:	ldr	r5, [sp, #16]
   24adc:	orr	r7, r7, r6, lsl #16
   24ae0:	sub	r3, r1, #12
   24ae4:	mov	r0, #20
   24ae8:	orr	r7, r7, #-536870898	; 0xe000000e
   24aec:	str	r3, [r4, #128]	; 0x80
   24af0:	mov	r2, r8
   24af4:	str	r7, [r1, #-12]
   24af8:	mov	r3, r5
   24afc:	str	r0, [sp]
   24b00:	ldr	r1, [pc, #304]	; 24c38 <luaL_where@@Base+0x4b34>
   24b04:	mov	r0, r4
   24b08:	bl	16dbc <_start@@Base+0x3a0c>
   24b0c:	mov	r1, #8
   24b10:	mov	r2, r6
   24b14:	ldr	r3, [sp, #20]
   24b18:	str	r1, [sp]
   24b1c:	b	2469c <luaL_where@@Base+0x4598>
   24b20:	ldr	r3, [sp, #40]	; 0x28
   24b24:	ldr	r2, [r3, #12]
   24b28:	ldr	r3, [r3, #8]
   24b2c:	lsl	r2, r2, #1
   24b30:	b	245fc <luaL_where@@Base+0x44f8>
   24b34:	ldr	r3, [sp, #40]	; 0x28
   24b38:	ldr	r0, [pc, #236]	; 24c2c <luaL_where@@Base+0x4b28>
   24b3c:	ldr	r6, [r3, #8]
   24b40:	mov	r1, r6
   24b44:	bl	16d00 <_start@@Base+0x3950>
   24b48:	subs	r3, r0, #0
   24b4c:	str	r3, [sp, #56]	; 0x38
   24b50:	movne	r3, #0
   24b54:	strne	r3, [sp, #20]
   24b58:	beq	24bd0 <luaL_where@@Base+0x4acc>
   24b5c:	ldr	r3, [sp, #40]	; 0x28
   24b60:	ldr	r7, [pc, #196]	; 24c2c <luaL_where@@Base+0x4b28>
   24b64:	ldr	r6, [r3, #12]
   24b68:	mov	r0, r7
   24b6c:	mov	r1, r6
   24b70:	bl	16d00 <_start@@Base+0x3950>
   24b74:	eor	r3, r0, r7
   24b78:	cmp	r0, #0
   24b7c:	str	r3, [sp, #32]
   24b80:	movne	r3, #0
   24b84:	strne	r3, [sp, #44]	; 0x2c
   24b88:	bne	24730 <luaL_where@@Base+0x462c>
   24b8c:	mov	r2, r5
   24b90:	mov	r1, r6
   24b94:	mov	r0, r4
   24b98:	bl	215b8 <luaL_where@@Base+0x14b4>
   24b9c:	mov	r3, #1
   24ba0:	str	r0, [sp, #44]	; 0x2c
   24ba4:	bic	r5, r5, r3, lsl r0
   24ba8:	b	24730 <luaL_where@@Base+0x462c>
   24bac:	clz	r3, r3
   24bb0:	eor	r3, r3, #31
   24bb4:	mov	r0, r4
   24bb8:	add	r3, r4, r3, lsl #2
   24bbc:	ldrh	r1, [r3, #-4]
   24bc0:	bl	21284 <luaL_where@@Base+0x1180>
   24bc4:	mov	r6, r0
   24bc8:	add	r5, r0, #1
   24bcc:	b	244a0 <luaL_where@@Base+0x439c>
   24bd0:	mov	r2, r5
   24bd4:	mov	r1, r6
   24bd8:	mov	r0, r4
   24bdc:	bl	215b8 <luaL_where@@Base+0x14b4>
   24be0:	mov	r3, #1
   24be4:	str	r0, [sp, #20]
   24be8:	bic	r5, r5, r3, lsl r0
   24bec:	b	24b5c <luaL_where@@Base+0x4a58>
   24bf0:	mov	r2, r5
   24bf4:	mov	r1, sl
   24bf8:	mov	r0, r4
   24bfc:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   24c00:	ldr	r3, [sp, #12]
   24c04:	cmp	r3, #2
   24c08:	eor	r3, r9, r7
   24c0c:	str	r3, [sp, #32]
   24c10:	str	r0, [sp, #20]
   24c14:	bhi	24718 <luaL_where@@Base+0x4614>
   24c18:	mov	r3, #0
   24c1c:	str	r3, [sp, #56]	; 0x38
   24c20:	str	r3, [sp, #44]	; 0x2c
   24c24:	b	2477c <luaL_where@@Base+0x4678>
   24c28:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   24c2c:	cmp	r0, r0
   24c30:	andeq	r0, r0, r5, asr r5
   24c34:	andeq	r0, r0, sl, lsr #21
   24c38:	ldr	r0, [r0], #-0
   24c3c:	ldrd	r0, [r0, #8]
   24c40:	blx	fdd56e <__bss_end__@@Base+0xf592f6>
   24c44:	add	r0, r0, r0, lsl #3
   24c48:	add	r0, r0, r0, lsl #1
   24c4c:	movne	lr, r0
   24c50:	sub	r0, r0, r0, ror #19
   24c54:	eor	r0, r0, r0, ror #13
   24c58:	sub	r0, r0, r0, ror #18
   24c5c:	add	r0, r0, r0
   24c60:	orrs	lr, r0, r0
   24c64:			; <UNDEFINED> instruction: 0xffff0000
   24c68:	vmov	r0, r0, d0
   24c6c:	push	{r4, r5, r6, r7, lr}
   24c70:	mov	r7, r1
   24c74:	ldr	r4, [r0, #136]	; 0x88
   24c78:	sub	sp, sp, #12
   24c7c:	add	r4, r4, r2, lsl #3
   24c80:	mov	r5, r0
   24c84:	ldrb	r1, [r4, #4]
   24c88:	and	r3, r1, #31
   24c8c:	cmp	r3, #14
   24c90:	beq	24d3c <luaL_where@@Base+0x4c38>
   24c94:	ldr	r1, [r0, #128]	; 0x80
   24c98:	ldr	r3, [pc, #232]	; 24d88 <luaL_where@@Base+0x4c84>
   24c9c:	sub	ip, r1, #4
   24ca0:	orr	r3, r3, r7, lsl #12
   24ca4:	str	ip, [r0, #128]	; 0x80
   24ca8:	str	r3, [r1, #-4]
   24cac:	ldrb	r1, [r4, #4]
   24cb0:	mov	r3, #1
   24cb4:	ldr	r6, [pc, #208]	; 24d8c <luaL_where@@Base+0x4c88>
   24cb8:	and	r1, r1, #31
   24cbc:	cmp	r1, #2
   24cc0:	bic	r6, r6, r3, lsl r7
   24cc4:	bhi	24cfc <luaL_where@@Base+0x4bf8>
   24cc8:	mvn	r1, r1
   24ccc:	mov	r2, r6
   24cd0:	mov	r0, r5
   24cd4:	bl	215b8 <luaL_where@@Base+0x14b4>
   24cd8:	mov	r3, #4
   24cdc:	str	r3, [sp]
   24ce0:	mov	r1, #-469762048	; 0xe4000000
   24ce4:	mov	r3, #13
   24ce8:	mov	r2, r0
   24cec:	mov	r0, r5
   24cf0:	bl	16dbc <_start@@Base+0x3a0c>
   24cf4:	add	sp, sp, #12
   24cf8:	pop	{r4, r5, r6, r7, pc}
   24cfc:	mov	r1, r2
   24d00:	mov	r2, r6
   24d04:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   24d08:	mov	r3, #0
   24d0c:	str	r3, [sp]
   24d10:	mov	r1, #-469762048	; 0xe4000000
   24d14:	mov	r3, #13
   24d18:	mov	r2, r0
   24d1c:	mov	r0, r5
   24d20:	bl	16dbc <_start@@Base+0x3a0c>
   24d24:	ldrb	r1, [r4, #4]
   24d28:	and	r1, r1, #31
   24d2c:	cmp	r1, #14
   24d30:	mvnhi	r1, #13
   24d34:	bhi	24ccc <luaL_where@@Base+0x4bc8>
   24d38:	b	24cc8 <luaL_where@@Base+0x4bc4>
   24d3c:	cmp	r2, #32768	; 0x8000
   24d40:	bcs	24d58 <luaL_where@@Base+0x4c54>
   24d44:	mov	r2, r7
   24d48:	add	r1, r4, #8
   24d4c:	add	sp, sp, #12
   24d50:	pop	{r4, r5, r6, r7, lr}
   24d54:	b	22b78 <luaL_where@@Base+0x2a74>
   24d58:	add	r2, r4, #7
   24d5c:	bl	211f4 <luaL_where@@Base+0x10f0>
   24d60:	ldr	r3, [pc, #36]	; 24d8c <luaL_where@@Base+0x4c88>
   24d64:	mov	r2, r7
   24d68:	str	r3, [sp, #4]
   24d6c:	ldr	r1, [pc, #28]	; 24d90 <luaL_where@@Base+0x4c8c>
   24d70:	mov	r3, #13
   24d74:	str	r0, [sp]
   24d78:	mov	r0, r5
   24d7c:	bl	21a78 <luaL_where@@Base+0x1974>
   24d80:	add	sp, sp, #12
   24d84:	pop	{r4, r5, r6, r7, pc}
   24d88:	mov	r0, sp
   24d8c:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   24d90:	add	r0, r0, r0
   24d94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24d98:	sub	sp, sp, #28
   24d9c:	ldr	r4, [r0, #1560]	; 0x618
   24da0:	ldr	r3, [r0, #2324]	; 0x914
   24da4:	ldr	r8, [pc, #320]	; 24eec <luaL_where@@Base+0x4de8>
   24da8:	lsl	r4, r4, #10
   24dac:	add	r4, r4, #4080	; 0xff0
   24db0:	cmp	r3, #0
   24db4:	add	r4, r4, #15
   24db8:	lsr	r8, r8, #16
   24dbc:	bic	r4, r4, #4080	; 0xff0
   24dc0:	mov	r7, r0
   24dc4:	str	r3, [sp, #20]
   24dc8:	bic	r4, r4, #15
   24dcc:	ldreq	r0, [sp, #20]
   24dd0:	ldr	r9, [pc, #280]	; 24ef0 <luaL_where@@Base+0x4dec>
   24dd4:	ldr	r5, [pc, #280]	; 24ef4 <luaL_where@@Base+0x4df0>
   24dd8:	lsl	r8, r8, #16
   24ddc:	subne	r0, r3, r4
   24de0:	mov	r6, #25
   24de4:	mov	sl, #0
   24de8:	mov	fp, #0
   24dec:	sub	r3, r0, #1
   24df0:	cmp	r3, r9
   24df4:	bls	24e48 <luaL_where@@Base+0x4d44>
   24df8:	ldr	r3, [r7, #2148]	; 0x864
   24dfc:	ldr	r1, [pc, #244]	; 24ef8 <luaL_where@@Base+0x4df4>
   24e00:	mul	r3, r5, r3
   24e04:	add	r3, r3, #12288	; 0x3000
   24e08:	add	r3, r3, #57	; 0x39
   24e0c:	lsr	r0, r3, #23
   24e10:	lsl	r0, r0, #16
   24e14:	add	r2, r4, r0
   24e18:	cmp	r2, r1
   24e1c:	bhi	24e00 <luaL_where@@Base+0x4cfc>
   24e20:	sub	r2, r8, #14680064	; 0xe00000
   24e24:	subs	r6, r6, #1
   24e28:	str	r3, [r7, #2148]	; 0x864
   24e2c:	add	r0, r2, r0
   24e30:	bne	24dec <luaL_where@@Base+0x4ce8>
   24e34:	add	r1, r7, #2336	; 0x920
   24e38:	add	r1, r1, #12
   24e3c:	ldr	r0, [r7, #80]	; 0x50
   24e40:	mov	r2, #27
   24e44:	bl	210d0 <luaL_where@@Base+0xfcc>
   24e48:	mvn	r3, #0
   24e4c:	str	r3, [sp]
   24e50:	strd	sl, [sp, #8]
   24e54:	mov	r3, #34	; 0x22
   24e58:	mov	r2, #3
   24e5c:	mov	r1, r4
   24e60:	bl	12cc4 <mmap64@plt>
   24e64:	cmn	r0, #1
   24e68:	beq	24df8 <luaL_where@@Base+0x4cf4>
   24e6c:	cmp	r0, #0
   24e70:	cmnne	r0, #65536	; 0x10000
   24e74:	bcs	24ea4 <luaL_where@@Base+0x4da0>
   24e78:	sub	r3, r4, r8
   24e7c:	ldr	r2, [pc, #120]	; 24efc <luaL_where@@Base+0x4df8>
   24e80:	add	r3, r3, r0
   24e84:	cmp	r3, r2
   24e88:	bls	24eb0 <luaL_where@@Base+0x4dac>
   24e8c:	sub	r3, r8, r0
   24e90:	cmp	r3, r2
   24e94:	bls	24eb0 <luaL_where@@Base+0x4dac>
   24e98:	mov	r1, r4
   24e9c:	bl	12f70 <munmap@plt>
   24ea0:	b	24df8 <luaL_where@@Base+0x4cf4>
   24ea4:	cmp	r0, #0
   24ea8:	beq	24df8 <luaL_where@@Base+0x4cf4>
   24eac:	b	24e98 <luaL_where@@Base+0x4d94>
   24eb0:	mov	r2, #3
   24eb4:	str	r2, [r7, #2320]	; 0x910
   24eb8:	add	r2, r0, r4
   24ebc:	str	r2, [r7, #2328]	; 0x918
   24ec0:	add	r2, r0, #8
   24ec4:	ldr	r3, [r7, #2340]	; 0x924
   24ec8:	str	r2, [r7, #2332]	; 0x91c
   24ecc:	ldr	r2, [sp, #20]
   24ed0:	add	r3, r3, r4
   24ed4:	str	r0, [r7, #2324]	; 0x914
   24ed8:	str	r4, [r7, #2336]	; 0x920
   24edc:	stm	r0, {r2, r4}
   24ee0:	str	r3, [r7, #2340]	; 0x924
   24ee4:	add	sp, sp, #28
   24ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24eec:	andeq	sp, r6, ip, lsr r4
   24ef0:			; <UNDEFINED> instruction: 0xfffefffe
   24ef4:	bicmi	r4, r6, sp, ror #28
   24ef8:			; <UNDEFINED> instruction: 0x01bfffff
   24efc:	ldrsheq	pc, [pc], #255	; <UNPREDICTABLE>
   24f00:	ldr	r3, [r0, #104]	; 0x68
   24f04:	cmp	r3, #1
   24f08:	bxls	lr
   24f0c:	ldr	r2, [r0, #96]	; 0x60
   24f10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24f14:	mov	r5, r1
   24f18:	ldr	r3, [r1]
   24f1c:	ldr	ip, [r2]
   24f20:	ldr	r1, [r2, #4]
   24f24:	mov	r4, r0
   24f28:	ldr	r0, [r0, #80]	; 0x50
   24f2c:	stm	r2, {r1, ip}
   24f30:	ldrd	r8, [r3]
   24f34:	ldrd	r6, [r3, #8]
   24f38:	mov	r2, r4
   24f3c:	strd	r8, [r3, #8]
   24f40:	strd	r6, [r3]
   24f44:	mov	r1, #0
   24f48:	ldr	r3, [pc, #48]	; 24f80 <luaL_where@@Base+0x4e7c>
   24f4c:	bl	6bd28 <luaL_openlibs@@Base+0x2568>
   24f50:	ldr	r3, [r5]
   24f54:	ldr	r2, [r4, #80]	; 0x50
   24f58:	strd	r8, [r3]
   24f5c:	strd	r6, [r3, #8]
   24f60:	cmp	r0, #0
   24f64:	bne	24f74 <luaL_where@@Base+0x4e70>
   24f68:	mvn	r3, #0
   24f6c:	str	r3, [r5, #4]
   24f70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24f74:	mov	r1, r0
   24f78:	mov	r0, r2
   24f7c:	bl	20ff0 <luaL_where@@Base+0xeec>
   24f80:	andeq	sp, r2, r8, asr #13
   24f84:	push	{r4, lr}
   24f88:	mov	r4, r0
   24f8c:	ldrb	r0, [r1]
   24f90:	mov	r3, r2
   24f94:	cmp	r0, #27
   24f98:	beq	24fd0 <luaL_where@@Base+0x4ecc>
   24f9c:	cmp	r0, #61	; 0x3d
   24fa0:	cmpne	r0, #64	; 0x40
   24fa4:	addeq	r1, r1, #1
   24fa8:	ldr	r0, [pc, #40]	; 24fd8 <luaL_where@@Base+0x4ed4>
   24fac:	mov	r2, r1
   24fb0:	ldr	r1, [pc, #36]	; 24fdc <luaL_where@@Base+0x4ed8>
   24fb4:	ldr	ip, [r0]
   24fb8:	mov	r0, r4
   24fbc:	add	r3, ip, r3
   24fc0:	bl	20040 <lua_getstack@@Base+0x388>
   24fc4:	mov	r0, r4
   24fc8:	mov	r1, #3
   24fcc:	bl	20ff0 <luaL_where@@Base+0xeec>
   24fd0:	ldr	r1, [pc, #8]	; 24fe0 <luaL_where@@Base+0x4edc>
   24fd4:	b	24fa8 <luaL_where@@Base+0x4ea4>
   24fd8:	muleq	r8, ip, r1
   24fdc:	strdeq	r3, [r7], -r8
   24fe0:			; <UNDEFINED> instruction: 0x00072cb0
   24fe4:	push	{r4, r5, r6, r7, r8, lr}
   24fe8:	cmn	r1, #-67108862	; 0xfc000002
   24fec:	ldr	r6, [r0, #8]
   24ff0:	movls	r7, #0
   24ff4:	movhi	r7, #1
   24ff8:	ldrb	r3, [r6, #29]
   24ffc:	cmp	r3, #3
   25000:	orreq	r7, r7, #1
   25004:	cmp	r7, #0
   25008:	popne	{r4, r5, r6, r7, r8, pc}
   2500c:	add	r8, r1, #1
   25010:	mov	r2, r7
   25014:	lsl	r8, r8, #2
   25018:	mov	r3, r8
   2501c:	mov	r5, r1
   25020:	mov	r1, r7
   25024:	bl	205b0 <luaL_where@@Base+0x4ac>
   25028:	mov	r1, r7
   2502c:	mov	r2, r8
   25030:	mov	r4, r0
   25034:	bl	12ed4 <memset@plt>
   25038:	ldm	r6, {r1, r7}
   2503c:	cmn	r7, #1
   25040:	beq	25080 <luaL_where@@Base+0x4f7c>
   25044:	add	lr, r1, r7, lsl #2
   25048:	add	lr, lr, #4
   2504c:	ldr	r3, [lr, #-4]!
   25050:	cmp	r3, #0
   25054:	beq	25078 <luaL_where@@Base+0x4f74>
   25058:	ldr	r2, [r3, #8]
   2505c:	ldr	r0, [r3]
   25060:	and	r2, r2, r5
   25064:	ldr	ip, [r4, r2, lsl #2]
   25068:	str	ip, [r3]
   2506c:	str	r3, [r4, r2, lsl #2]
   25070:	subs	r3, r0, #0
   25074:	bne	25058 <luaL_where@@Base+0x4f54>
   25078:	cmp	r1, lr
   2507c:	bne	2504c <luaL_where@@Base+0x4f48>
   25080:	add	r2, r7, #1
   25084:	ldr	r3, [r6, #20]
   25088:	lsl	r2, r2, #2
   2508c:	sub	r3, r3, r2
   25090:	str	r3, [r6, #20]
   25094:	ldr	r7, [r6, #12]
   25098:	mov	r3, #0
   2509c:	ldr	r0, [r6, #16]
   250a0:	blx	r7
   250a4:	strd	r4, [r6]
   250a8:	pop	{r4, r5, r6, r7, r8, pc}
   250ac:	mov	r3, r1
   250b0:	ldr	r2, [r0, #4]
   250b4:	ldr	r1, [r0, #8]
   250b8:	push	{r4, r5, r6, lr}
   250bc:	sub	r2, r2, r1
   250c0:	cmp	r2, #32
   250c4:	ldr	r6, [r0]
   250c8:	movcs	r4, r2
   250cc:	movcc	r4, #32
   250d0:	cmp	r3, r4
   250d4:	mov	r5, r0
   250d8:	sub	r6, r6, r1
   250dc:	bls	250ec <luaL_where@@Base+0x4fe8>
   250e0:	lsl	r4, r4, #1
   250e4:	cmp	r3, r4
   250e8:	bhi	250e0 <luaL_where@@Base+0x4fdc>
   250ec:	mov	r3, r4
   250f0:	ldr	r0, [r5, #12]
   250f4:	bl	205b0 <luaL_where@@Base+0x4ac>
   250f8:	add	r6, r0, r6
   250fc:	add	r4, r0, r4
   25100:	str	r6, [r5]
   25104:	str	r4, [r5, #4]
   25108:	str	r0, [r5, #8]
   2510c:	pop	{r4, r5, r6, pc}
   25110:	mov	r3, r1
   25114:	mov	r2, #0
   25118:	mov	r1, r2
   2511c:	push	{r4, lr}
   25120:	mov	r4, r0
   25124:	mov	r0, r3
   25128:	mov	r3, #360	; 0x168
   2512c:	bl	205b0 <luaL_where@@Base+0x4ac>
   25130:	mov	ip, #45	; 0x2d
   25134:	str	ip, [r4, #44]	; 0x2c
   25138:	mvn	r2, #0
   2513c:	mvn	ip, #6
   25140:	add	r3, r0, #312	; 0x138
   25144:	add	r1, r0, #360	; 0x168
   25148:	str	r3, [r4, #24]
   2514c:	add	r3, r0, #8
   25150:	str	r0, [r4, #28]
   25154:	stm	r0, {r4, ip}
   25158:	str	r3, [r4, #20]
   2515c:	str	r3, [r4, #16]
   25160:	add	r3, r3, #8
   25164:	cmp	r1, r3
   25168:	str	r2, [r3, #-4]
   2516c:	bne	25160 <luaL_where@@Base+0x505c>
   25170:	pop	{r4, pc}
   25174:	ldr	r3, [r0, #1524]	; 0x5f4
   25178:	push	{r4, r5, r6, lr}
   2517c:	cmp	r3, r1
   25180:	mov	r4, r0
   25184:	ldr	r0, [r0, #80]	; 0x50
   25188:	bcc	251c4 <luaL_where@@Base+0x50c0>
   2518c:	ldr	r2, [r4, #248]	; 0xf8
   25190:	ldr	r1, [r4, #252]	; 0xfc
   25194:	lsl	r5, r2, #1
   25198:	cmp	r5, #8
   2519c:	movcc	r5, #8
   251a0:	cmp	r3, r5
   251a4:	movcc	r5, r3
   251a8:	lsl	r2, r2, #3
   251ac:	lsl	r3, r5, #3
   251b0:	bl	205b0 <luaL_where@@Base+0x4ac>
   251b4:	str	r5, [r4, #248]	; 0xf8
   251b8:	str	r0, [r4, #252]	; 0xfc
   251bc:	str	r0, [r4, #28]
   251c0:	pop	{r4, r5, r6, pc}
   251c4:	add	r1, r4, #2336	; 0x920
   251c8:	add	r1, r1, #12
   251cc:	mov	r2, #4
   251d0:	bl	210d0 <luaL_where@@Base+0xfcc>
   251d4:	ldrd	r2, [r0, #236]	; 0xec
   251d8:	push	{r4, r5, r6, lr}
   251dc:	mov	r4, r0
   251e0:	subs	r5, r2, r3
   251e4:	ldr	r0, [r0, #80]	; 0x50
   251e8:	bne	25220 <luaL_where@@Base+0x511c>
   251ec:	mov	r3, #256	; 0x100
   251f0:	mov	r2, r5
   251f4:	mov	r1, r5
   251f8:	bl	205b0 <luaL_where@@Base+0x4ac>
   251fc:	ldr	r3, [pc, #72]	; 2524c <luaL_where@@Base+0x5148>
   25200:	ldr	r1, [pc, #72]	; 25250 <luaL_where@@Base+0x514c>
   25204:	ldr	r2, [pc, #72]	; 25254 <luaL_where@@Base+0x5150>
   25208:	str	r1, [r4, #240]	; 0xf0
   2520c:	str	r2, [r4, #236]	; 0xec
   25210:	add	r0, r0, r3
   25214:	str	r0, [r4, #232]	; 0xe8
   25218:	str	r0, [r4, #16]
   2521c:	pop	{r4, r5, r6, pc}
   25220:	ldr	r1, [r4, #232]	; 0xe8
   25224:	lsl	r2, r5, #3
   25228:	add	r1, r1, r3, lsl #3
   2522c:	lsl	r3, r5, #4
   25230:	bl	205b0 <luaL_where@@Base+0x4ac>
   25234:	ldr	r3, [r4, #240]	; 0xf0
   25238:	add	r2, r3, r5, lsl #1
   2523c:	lsl	r3, r3, #3
   25240:	str	r2, [r4, #236]	; 0xec
   25244:	rsb	r3, r3, #0
   25248:	b	25210 <luaL_where@@Base+0x510c>
   2524c:			; <UNDEFINED> instruction: 0xfffc0040
   25250:	strdeq	r7, [r0], -r8
   25254:	andeq	r8, r0, r8, lsl r0
   25258:	push	{r4, r5, r6, lr}
   2525c:	mov	r4, r0
   25260:	ldr	r5, [r0, #8]
   25264:	ldr	r3, [r0, #236]	; 0xec
   25268:	cmp	r5, r3
   2526c:	bcs	252cc <luaL_where@@Base+0x51c8>
   25270:	ldrb	ip, [r4, #125]	; 0x7d
   25274:	ldr	r0, [r4, #16]
   25278:	add	r3, r5, #1
   2527c:	str	r3, [r4, #8]
   25280:	add	r2, r4, ip, lsl #1
   25284:	add	r2, r2, #284	; 0x11c
   25288:	lsl	r1, r5, #3
   2528c:	ldrh	lr, [r2, #2]
   25290:	add	r3, r0, r1
   25294:	strh	lr, [r3, #6]
   25298:	strh	r5, [r2, #2]
   2529c:	ldrh	r6, [r4, #120]	; 0x78
   252a0:	ldrh	lr, [r4, #122]	; 0x7a
   252a4:	ldrb	r2, [r4, #124]	; 0x7c
   252a8:	strb	ip, [r3, #5]
   252ac:	strh	r6, [r0, r1]
   252b0:	strh	lr, [r3, #2]
   252b4:	ldrb	r1, [r4, #114]	; 0x72
   252b8:	add	r0, r5, r2, lsl #24
   252bc:	orr	r1, r1, r2
   252c0:	strb	r1, [r4, #114]	; 0x72
   252c4:	strb	r2, [r3, #4]
   252c8:	pop	{r4, r5, r6, pc}
   252cc:	bl	251d4 <luaL_where@@Base+0x50d0>
   252d0:	b	25270 <luaL_where@@Base+0x516c>
   252d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   252d8:	sub	sp, sp, #12
   252dc:	ldrb	r7, [r0, #125]	; 0x7d
   252e0:	ldrh	r8, [r0, #120]	; 0x78
   252e4:	ldr	r5, [r0, #16]
   252e8:	add	r3, r7, #136	; 0x88
   252ec:	add	r7, r7, #143	; 0x8f
   252f0:	add	r3, r0, r3, lsl #1
   252f4:	mov	r6, r0
   252f8:	ldrh	fp, [r3, #14]
   252fc:	ldrh	r3, [r0, #122]	; 0x7a
   25300:	add	r7, r0, r7, lsl #1
   25304:	cmp	r8, fp
   25308:	add	r9, r5, r8, lsl #3
   2530c:	str	r3, [sp, #4]
   25310:	bcs	253a0 <luaL_where@@Base+0x529c>
   25314:	add	sl, r0, #16
   25318:	lsl	r4, fp, #3
   2531c:	mov	r1, r9
   25320:	ldrh	r2, [r5, r4]
   25324:	mov	r0, sl
   25328:	add	r4, r5, r4
   2532c:	add	r2, r5, r2, lsl #3
   25330:	bl	1be98 <_start@@Base+0x8ae8>
   25334:	cmp	r0, #1
   25338:	beq	253b0 <luaL_where@@Base+0x52ac>
   2533c:	cmp	r0, #2
   25340:	bne	253c0 <luaL_where@@Base+0x52bc>
   25344:	ldrh	r2, [r4, #2]
   25348:	ldr	r3, [sp, #4]
   2534c:	cmp	r2, r3
   25350:	beq	253d4 <luaL_where@@Base+0x52d0>
   25354:	add	r2, r6, #320	; 0x140
   25358:	ldrh	r2, [r2]
   2535c:	cmp	r2, fp
   25360:	bcs	253a0 <luaL_where@@Base+0x529c>
   25364:	ldr	r3, [r6, #8]
   25368:	sub	r3, r3, #-536870911	; 0xe0000001
   2536c:	add	r3, r5, r3, lsl #3
   25370:	cmp	r4, r3
   25374:	bcc	25394 <luaL_where@@Base+0x5290>
   25378:	b	253e0 <luaL_where@@Base+0x52dc>
   2537c:	ldrb	r2, [r3, #5]
   25380:	cmp	r2, #96	; 0x60
   25384:	beq	253a0 <luaL_where@@Base+0x529c>
   25388:	sub	r3, r3, #8
   2538c:	cmp	r4, r3
   25390:	bcs	253e0 <luaL_where@@Base+0x52dc>
   25394:	ldrsb	r2, [r3, #4]
   25398:	cmp	r2, #0
   2539c:	bge	2537c <luaL_where@@Base+0x5278>
   253a0:	mov	r0, r6
   253a4:	add	sp, sp, #12
   253a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   253ac:	b	25258 <luaL_where@@Base+0x5154>
   253b0:	ldrh	r3, [r4, #2]
   253b4:	ldr	r2, [sp, #4]
   253b8:	cmp	r3, r2
   253bc:	bne	253a0 <luaL_where@@Base+0x529c>
   253c0:	ldrh	fp, [r4, #6]
   253c4:	add	r7, r4, #6
   253c8:	cmp	r8, fp
   253cc:	bcc	25318 <luaL_where@@Base+0x5214>
   253d0:	b	253a0 <luaL_where@@Base+0x529c>
   253d4:	mov	r0, #4
   253d8:	add	sp, sp, #12
   253dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   253e0:	ldrh	r1, [r4, #6]
   253e4:	mov	r2, #0
   253e8:	mov	r3, #3072	; 0xc00
   253ec:	strh	r1, [r7]
   253f0:	mov	r0, r6
   253f4:	strd	r2, [r4]
   253f8:	add	sp, sp, #12
   253fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25400:	b	25258 <luaL_where@@Base+0x5154>
   25404:	add	r3, r0, #436	; 0x1b4
   25408:	push	{r4, r5, r6, r7, r8, r9, lr}
   2540c:	ldrh	r5, [r0, #120]	; 0x78
   25410:	ldrh	lr, [r3]
   25414:	ldr	r3, [r0, #16]
   25418:	lsl	r2, r5, #3
   2541c:	cmp	lr, #32768	; 0x8000
   25420:	add	r6, r3, r2
   25424:	bls	25460 <luaL_where@@Base+0x535c>
   25428:	ldrh	r9, [r3, r2]
   2542c:	ldrh	r8, [r6, #2]
   25430:	ldrb	r7, [r6, #5]
   25434:	lsl	r2, lr, #3
   25438:	add	r4, r3, r2
   2543c:	ldrh	r2, [r3, r2]
   25440:	lsl	r2, r2, #3
   25444:	add	r1, r3, r2
   25448:	ldrb	ip, [r1, #5]
   2544c:	cmp	ip, r7
   25450:	beq	254d8 <luaL_where@@Base+0x53d4>
   25454:	ldrh	lr, [r4, #6]
   25458:	cmp	lr, #32768	; 0x8000
   2545c:	bhi	25434 <luaL_where@@Base+0x5330>
   25460:	mov	lr, #32768	; 0x8000
   25464:	add	r2, r0, #420	; 0x1a4
   25468:	ldrh	ip, [r2, #2]
   2546c:	cmp	lr, ip
   25470:	bcs	25508 <luaL_where@@Base+0x5404>
   25474:	lsl	r2, ip, #3
   25478:	add	r1, r3, r2
   2547c:	ldrh	r2, [r3, r2]
   25480:	cmp	r5, r2
   25484:	beq	254d0 <luaL_where@@Base+0x53cc>
   25488:	ldr	r7, [r3, r5, lsl #3]
   2548c:	b	254b0 <luaL_where@@Base+0x53ac>
   25490:	ldrh	ip, [r1, #6]
   25494:	cmp	lr, ip
   25498:	lsl	r1, ip, #3
   2549c:	bcs	25508 <luaL_where@@Base+0x5404>
   254a0:	ldrh	r2, [r3, r1]
   254a4:	add	r1, r3, r1
   254a8:	cmp	r5, r2
   254ac:	beq	254d0 <luaL_where@@Base+0x53cc>
   254b0:	ldr	r4, [r3, r2, lsl #3]
   254b4:	add	r2, r3, r2, lsl #3
   254b8:	cmp	r4, r7
   254bc:	bne	25490 <luaL_where@@Base+0x538c>
   254c0:	ldrb	r4, [r2, #5]
   254c4:	ldrb	r2, [r6, #5]
   254c8:	cmp	r4, r2
   254cc:	bne	25490 <luaL_where@@Base+0x538c>
   254d0:	mov	r0, ip
   254d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   254d8:	ldrh	ip, [r3, r2]
   254dc:	ldrh	r2, [r1, #2]
   254e0:	cmp	ip, r9
   254e4:	eor	r1, r8, r2
   254e8:	beq	254f8 <luaL_where@@Base+0x53f4>
   254ec:	tst	r1, #255	; 0xff
   254f0:	beq	25464 <luaL_where@@Base+0x5360>
   254f4:	b	25454 <luaL_where@@Base+0x5350>
   254f8:	cmp	r8, r2
   254fc:	bne	25454 <luaL_where@@Base+0x5350>
   25500:	ldrh	ip, [r4, #2]
   25504:	b	254d0 <luaL_where@@Base+0x53cc>
   25508:	pop	{r4, r5, r6, r7, r8, r9, lr}
   2550c:	b	25258 <luaL_where@@Base+0x5154>
   25510:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25514:	add	r5, r0, #436	; 0x1b4
   25518:	ldrh	r4, [r0, #120]	; 0x78
   2551c:	ldrh	ip, [r5]
   25520:	ldr	r2, [r0, #16]
   25524:	ldrh	r9, [r0, #122]	; 0x7a
   25528:	lsl	r3, r4, #3
   2552c:	cmp	r4, ip
   25530:	add	r1, r2, r3
   25534:	bcs	255a0 <luaL_where@@Base+0x549c>
   25538:	ldrh	r8, [r2, r3]
   2553c:	ldrh	r7, [r1, #2]
   25540:	ldrb	r6, [r1, #5]
   25544:	b	25558 <luaL_where@@Base+0x5454>
   25548:	ldrh	ip, [r1, #6]
   2554c:	add	r5, r1, #6
   25550:	cmp	r4, ip
   25554:	bcs	255a0 <luaL_where@@Base+0x549c>
   25558:	lsl	r3, ip, #3
   2555c:	add	r1, r2, r3
   25560:	ldrh	r3, [r2, r3]
   25564:	lsl	r3, r3, #3
   25568:	add	lr, r2, r3
   2556c:	ldrb	sl, [lr, #5]
   25570:	cmp	sl, r6
   25574:	bne	25548 <luaL_where@@Base+0x5444>
   25578:	ldrh	sl, [r2, r3]
   2557c:	ldrh	r3, [lr, #2]
   25580:	cmp	sl, r8
   25584:	eor	lr, r7, r3
   25588:	beq	255a8 <luaL_where@@Base+0x54a4>
   2558c:	tst	lr, #255	; 0xff
   25590:	bne	25548 <luaL_where@@Base+0x5444>
   25594:	ldrh	r3, [r1, #2]
   25598:	cmp	r3, r9
   2559c:	beq	25548 <luaL_where@@Base+0x5444>
   255a0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   255a4:	b	25258 <luaL_where@@Base+0x5154>
   255a8:	cmp	r7, r3
   255ac:	bne	25548 <luaL_where@@Base+0x5444>
   255b0:	ldrh	r3, [r1, #2]
   255b4:	cmp	r3, r9
   255b8:	beq	25690 <luaL_where@@Base+0x558c>
   255bc:	add	r3, r0, #320	; 0x140
   255c0:	ldrh	r3, [r3]
   255c4:	cmp	r3, ip
   255c8:	bcs	255a0 <luaL_where@@Base+0x549c>
   255cc:	ldr	r3, [r0, #8]
   255d0:	sub	r3, r3, #-536870911	; 0xe0000001
   255d4:	add	r3, r2, r3, lsl #3
   255d8:	cmp	r1, r3
   255dc:	bcc	255f0 <luaL_where@@Base+0x54ec>
   255e0:	b	25600 <luaL_where@@Base+0x54fc>
   255e4:	sub	r3, r3, #8
   255e8:	cmp	r1, r3
   255ec:	bcs	25600 <luaL_where@@Base+0x54fc>
   255f0:	ldrsb	lr, [r3, #4]
   255f4:	cmp	lr, #0
   255f8:	bge	255e4 <luaL_where@@Base+0x54e0>
   255fc:	b	255a0 <luaL_where@@Base+0x549c>
   25600:	ldrh	r3, [r1, #6]
   25604:	mov	lr, #0
   25608:	add	ip, ip, #1
   2560c:	strh	r3, [r5]
   25610:	mov	r3, #3072	; 0xc00
   25614:	str	lr, [r1]
   25618:	str	r3, [r1, #4]
   2561c:	ldr	r3, [r0, #8]
   25620:	cmp	ip, r3
   25624:	bcs	255a0 <luaL_where@@Base+0x549c>
   25628:	ldrb	r3, [r1, #13]
   2562c:	cmp	r3, #88	; 0x58
   25630:	bne	255a0 <luaL_where@@Base+0x549c>
   25634:	ldrh	r3, [r1, #8]
   25638:	cmp	r3, r4
   2563c:	bne	255a0 <luaL_where@@Base+0x549c>
   25640:	add	r1, r0, #460	; 0x1cc
   25644:	add	r3, r1, #2
   25648:	ldrh	r1, [r1, #2]
   2564c:	cmp	ip, r1
   25650:	add	r1, r2, r1, lsl #3
   25654:	bcc	25660 <luaL_where@@Base+0x555c>
   25658:	b	25698 <luaL_where@@Base+0x5594>
   2565c:	mov	r1, r3
   25660:	ldrh	r3, [r1, #6]
   25664:	cmp	ip, r3
   25668:	add	r3, r2, r3, lsl #3
   2566c:	bcc	2565c <luaL_where@@Base+0x5558>
   25670:	add	r2, r1, #6
   25674:	ldrh	lr, [r3, #6]
   25678:	mov	ip, #0
   2567c:	mov	r1, #3072	; 0xc00
   25680:	strh	lr, [r2]
   25684:	str	ip, [r3]
   25688:	str	r1, [r3, #4]
   2568c:	b	255a0 <luaL_where@@Base+0x549c>
   25690:	mov	r0, #4
   25694:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25698:	mov	r2, r3
   2569c:	mov	r3, r1
   256a0:	b	25674 <luaL_where@@Base+0x5570>
   256a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   256a8:	add	r7, r0, #436	; 0x1b4
   256ac:	ldrh	r9, [r0, #120]	; 0x78
   256b0:	ldrh	r6, [r7, #2]
   256b4:	ldrh	r1, [r0, #122]	; 0x7a
   256b8:	sub	sp, sp, #12
   256bc:	ldr	r4, [r0, #16]
   256c0:	lsl	r3, r9, #3
   256c4:	cmp	r9, r6
   256c8:	mov	fp, r0
   256cc:	add	r2, r4, r3
   256d0:	str	r1, [sp]
   256d4:	bcs	257c8 <luaL_where@@Base+0x56c4>
   256d8:	ldrh	r8, [r2, #2]
   256dc:	ldrh	sl, [r4, r3]
   256e0:	add	r7, r7, #2
   256e4:	sub	r3, r8, #5
   256e8:	str	r0, [sp, #4]
   256ec:	uxth	r3, r3
   256f0:	mov	fp, r3
   256f4:	b	25708 <luaL_where@@Base+0x5604>
   256f8:	ldrh	r6, [r5, #6]
   256fc:	add	r7, r5, #6
   25700:	cmp	r9, r6
   25704:	bcs	257e8 <luaL_where@@Base+0x56e4>
   25708:	lsl	r2, r6, #3
   2570c:	add	r5, r4, r2
   25710:	ldrh	r2, [r4, r2]
   25714:	lsl	r2, r2, #3
   25718:	add	r1, r4, r2
   2571c:	ldrh	r1, [r1, #2]
   25720:	cmp	r1, r8
   25724:	bne	256f8 <luaL_where@@Base+0x55f4>
   25728:	ldrh	ip, [r4, r2]
   2572c:	mov	r1, sl
   25730:	mov	r0, r4
   25734:	cmp	sl, ip
   25738:	mov	r2, ip
   2573c:	beq	2575c <luaL_where@@Base+0x5658>
   25740:	cmp	fp, #5
   25744:	bhi	257d8 <luaL_where@@Base+0x56d4>
   25748:	bl	1bdfc <_start@@Base+0x8a4c>
   2574c:	cmp	r0, #1
   25750:	beq	257d8 <luaL_where@@Base+0x56d4>
   25754:	cmp	r0, #2
   25758:	bne	256f8 <luaL_where@@Base+0x55f4>
   2575c:	ldrh	r3, [r5, #2]
   25760:	ldr	r2, [sp]
   25764:	ldr	fp, [sp, #4]
   25768:	cmp	r3, r2
   2576c:	beq	257fc <luaL_where@@Base+0x56f8>
   25770:	add	r3, fp, #320	; 0x140
   25774:	ldrh	r3, [r3]
   25778:	cmp	r3, r6
   2577c:	bcs	257c8 <luaL_where@@Base+0x56c4>
   25780:	ldr	r3, [fp, #8]
   25784:	sub	r3, r3, #-536870911	; 0xe0000001
   25788:	add	r4, r4, r3, lsl #3
   2578c:	cmp	r5, r4
   25790:	bcc	257a4 <luaL_where@@Base+0x56a0>
   25794:	b	25808 <luaL_where@@Base+0x5704>
   25798:	sub	r4, r4, #8
   2579c:	cmp	r5, r4
   257a0:	bcs	25808 <luaL_where@@Base+0x5704>
   257a4:	ldrsb	r3, [r4, #4]
   257a8:	cmp	r3, #0
   257ac:	blt	257c8 <luaL_where@@Base+0x56c4>
   257b0:	ldrb	r3, [r4, #5]
   257b4:	cmp	r3, #69	; 0x45
   257b8:	bne	25798 <luaL_where@@Base+0x5694>
   257bc:	ldrh	r3, [r4, #2]
   257c0:	cmp	r3, r8
   257c4:	bne	25798 <luaL_where@@Base+0x5694>
   257c8:	mov	r0, fp
   257cc:	add	sp, sp, #12
   257d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   257d4:	b	25258 <luaL_where@@Base+0x5154>
   257d8:	ldrh	r2, [r5, #2]
   257dc:	ldr	r3, [sp]
   257e0:	cmp	r2, r3
   257e4:	beq	256f8 <luaL_where@@Base+0x55f4>
   257e8:	ldr	fp, [sp, #4]
   257ec:	mov	r0, fp
   257f0:	add	sp, sp, #12
   257f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   257f8:	b	25258 <luaL_where@@Base+0x5154>
   257fc:	mov	r0, #4
   25800:	add	sp, sp, #12
   25804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25808:	ldrh	r1, [r5, #6]
   2580c:	mov	r2, #0
   25810:	mov	r3, #3072	; 0xc00
   25814:	strh	r1, [r7]
   25818:	mov	r0, fp
   2581c:	strd	r2, [r5]
   25820:	add	sp, sp, #12
   25824:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25828:	b	25258 <luaL_where@@Base+0x5154>
   2582c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25830:	add	r3, r0, #480	; 0x1e0
   25834:	mov	r5, r0
   25838:	add	r2, r5, #444	; 0x1bc
   2583c:	add	r0, r0, #464	; 0x1d0
   25840:	ldrh	r1, [r3, #2]
   25844:	ldrh	r3, [r5, #120]	; 0x78
   25848:	ldrh	r7, [r0]
   2584c:	ldrh	r2, [r2]
   25850:	ldr	r4, [r5, #16]
   25854:	cmp	r3, r1
   25858:	add	sl, r4, r3, lsl #3
   2585c:	add	r9, r5, #440	; 0x1b8
   25860:	movcc	r3, r1
   25864:	cmp	r7, r2
   25868:	movcc	r7, r2
   2586c:	cmp	r7, r3
   25870:	ldrh	r8, [r9]
   25874:	movcc	r7, r3
   25878:	ldrh	r3, [r5, #122]	; 0x7a
   2587c:	sub	sp, sp, #20
   25880:	cmp	r7, r8
   25884:	str	r3, [sp, #12]
   25888:	bcs	25920 <luaL_where@@Base+0x581c>
   2588c:	ldrb	fp, [r5, #124]	; 0x7c
   25890:	lsl	r3, r8, #3
   25894:	add	r6, r4, r3
   25898:	mov	r2, fp
   2589c:	ldrb	r1, [r6, #4]
   258a0:	ldrh	r3, [r4, r3]
   258a4:	mov	r0, r5
   258a8:	str	r1, [sp]
   258ac:	mov	r1, sl
   258b0:	bl	1c230 <_start@@Base+0x8e80>
   258b4:	cmp	r0, #1
   258b8:	beq	25930 <luaL_where@@Base+0x582c>
   258bc:	cmp	r0, #2
   258c0:	bne	25940 <luaL_where@@Base+0x583c>
   258c4:	ldrh	r3, [r6, #2]
   258c8:	ldr	r2, [sp, #12]
   258cc:	cmp	r3, r2
   258d0:	beq	25954 <luaL_where@@Base+0x5850>
   258d4:	add	r3, r5, #320	; 0x140
   258d8:	ldrh	r3, [r3]
   258dc:	cmp	r3, r8
   258e0:	bcs	25920 <luaL_where@@Base+0x581c>
   258e4:	ldr	r3, [r5, #8]
   258e8:	sub	r3, r3, #-536870911	; 0xe0000001
   258ec:	add	r4, r4, r3, lsl #3
   258f0:	cmp	r6, r4
   258f4:	bcc	25914 <luaL_where@@Base+0x5810>
   258f8:	b	25960 <luaL_where@@Base+0x585c>
   258fc:	ldrb	r3, [r4, #5]
   25900:	cmp	r3, #70	; 0x46
   25904:	beq	25920 <luaL_where@@Base+0x581c>
   25908:	sub	r4, r4, #8
   2590c:	cmp	r6, r4
   25910:	bcs	25960 <luaL_where@@Base+0x585c>
   25914:	ldrsb	r3, [r4, #4]
   25918:	cmp	r3, #0
   2591c:	bge	258fc <luaL_where@@Base+0x57f8>
   25920:	mov	r0, r5
   25924:	add	sp, sp, #20
   25928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2592c:	b	25258 <luaL_where@@Base+0x5154>
   25930:	ldrh	r3, [r6, #2]
   25934:	ldr	r2, [sp, #12]
   25938:	cmp	r3, r2
   2593c:	bne	25920 <luaL_where@@Base+0x581c>
   25940:	ldrh	r8, [r6, #6]
   25944:	add	r9, r6, #6
   25948:	cmp	r7, r8
   2594c:	bcc	25890 <luaL_where@@Base+0x578c>
   25950:	b	25920 <luaL_where@@Base+0x581c>
   25954:	mov	r0, #4
   25958:	add	sp, sp, #20
   2595c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25960:	ldrh	r1, [r6, #6]
   25964:	mov	r2, #0
   25968:	mov	r3, #3072	; 0xc00
   2596c:	strh	r1, [r9]
   25970:	mov	r0, r5
   25974:	strd	r2, [r6]
   25978:	add	sp, sp, #20
   2597c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25980:	b	25258 <luaL_where@@Base+0x5154>
   25984:	ldr	r3, [r0, #100]	; 0x64
   25988:	tst	r3, #524288	; 0x80000
   2598c:	beq	259ac <luaL_where@@Base+0x58a8>
   25990:	ldrh	r3, [r0, #130]	; 0x82
   25994:	tst	r3, #1
   25998:	bne	259ac <luaL_where@@Base+0x58a8>
   2599c:	ldrh	r1, [r0, #134]	; 0x86
   259a0:	ldrh	r2, [r0, #146]	; 0x92
   259a4:	cmp	r2, r1
   259a8:	beq	259b0 <luaL_where@@Base+0x58ac>
   259ac:	b	25258 <luaL_where@@Base+0x5154>
   259b0:	ldr	r1, [r0, #16]
   259b4:	lsl	r2, r2, #3
   259b8:	ldrh	ip, [r0, #128]	; 0x80
   259bc:	ldrh	r2, [r1, r2]
   259c0:	cmp	ip, r2
   259c4:	bne	259ac <luaL_where@@Base+0x58a8>
   259c8:	ldrh	r2, [r0, #120]	; 0x78
   259cc:	ldrh	ip, [r0, #144]	; 0x90
   259d0:	push	{lr}		; (str lr, [sp, #-4]!)
   259d4:	orr	r3, r3, #1
   259d8:	lsl	r0, r2, #3
   259dc:	add	lr, r1, r0
   259e0:	strh	r3, [lr, #2]
   259e4:	strh	ip, [r1, r0]
   259e8:	mov	r0, r2
   259ec:	pop	{pc}		; (ldr pc, [sp], #4)
   259f0:	add	r1, r0, #328	; 0x148
   259f4:	ldr	r2, [r0, #8]
   259f8:	ldrh	r3, [r1]
   259fc:	add	r1, r3, #1
   25a00:	cmp	r1, r2
   25a04:	beq	25a0c <luaL_where@@Base+0x5908>
   25a08:	b	25258 <luaL_where@@Base+0x5154>
   25a0c:	mov	r0, r3
   25a10:	bx	lr
   25a14:	ldrb	r3, [r0, #125]	; 0x7d
   25a18:	ldrh	r2, [r0, #122]	; 0x7a
   25a1c:	push	{r4, lr}
   25a20:	add	r3, r3, #136	; 0x88
   25a24:	ldrh	r4, [r0, #120]	; 0x78
   25a28:	add	r3, r0, r3, lsl #1
   25a2c:	ldrh	r3, [r3, #14]
   25a30:	add	r4, r4, r2, lsl #16
   25a34:	cmp	r3, r1
   25a38:	bls	25a70 <luaL_where@@Base+0x596c>
   25a3c:	ldr	r2, [r0, #16]
   25a40:	add	ip, r2, r3, lsl #3
   25a44:	ldr	lr, [r2, r3, lsl #3]
   25a48:	cmp	r4, lr
   25a4c:	bne	25a64 <luaL_where@@Base+0x5960>
   25a50:	b	25a78 <luaL_where@@Base+0x5974>
   25a54:	ldr	lr, [r2, r3, lsl #3]
   25a58:	add	ip, r2, r3, lsl #3
   25a5c:	cmp	lr, r4
   25a60:	beq	25a78 <luaL_where@@Base+0x5974>
   25a64:	ldrh	r3, [ip, #6]
   25a68:	cmp	r1, r3
   25a6c:	bcc	25a54 <luaL_where@@Base+0x5950>
   25a70:	pop	{r4, lr}
   25a74:	b	25258 <luaL_where@@Base+0x5154>
   25a78:	mov	r0, r3
   25a7c:	pop	{r4, pc}
   25a80:	add	r2, r0, #432	; 0x1b0
   25a84:	ldrh	r3, [r0, #120]	; 0x78
   25a88:	push	{r4, r5, r6, lr}
   25a8c:	mov	r5, r0
   25a90:	ldrh	r4, [r2]
   25a94:	ldrh	r1, [r2, #2]
   25a98:	ldr	r0, [r0, #16]
   25a9c:	cmp	r4, r3
   25aa0:	movcc	r4, r3
   25aa4:	cmp	r4, r1
   25aa8:	bcc	25abc <luaL_where@@Base+0x59b8>
   25aac:	b	25b00 <luaL_where@@Base+0x59fc>
   25ab0:	ldrh	r1, [lr, #6]
   25ab4:	cmp	r4, r1
   25ab8:	bcs	25b00 <luaL_where@@Base+0x59fc>
   25abc:	lsl	r2, r1, #3
   25ac0:	add	lr, r0, r2
   25ac4:	ldrh	r2, [r0, r2]
   25ac8:	add	r2, r0, r2, lsl #3
   25acc:	ldrh	r2, [r2, #2]
   25ad0:	lsl	r2, r2, #3
   25ad4:	add	ip, r0, r2
   25ad8:	ldrb	r6, [ip, #5]
   25adc:	cmp	r6, #30
   25ae0:	ldrheq	r2, [r0, r2]
   25ae4:	ldrbne	r2, [ip, #4]
   25ae8:	addeq	r2, r0, r2, lsl #3
   25aec:	ldrbeq	r2, [r2, #4]
   25af0:	and	r2, r2, #31
   25af4:	cmp	r2, #14
   25af8:	bne	25ab0 <luaL_where@@Base+0x59ac>
   25afc:	mov	r4, r1
   25b00:	add	r2, r5, #480	; 0x1e0
   25b04:	ldrh	r1, [r2]
   25b08:	mov	r2, r4
   25b0c:	bl	1c0ec <_start@@Base+0x8d3c>
   25b10:	cmp	r0, #0
   25b14:	beq	25b28 <luaL_where@@Base+0x5a24>
   25b18:	mov	r1, r4
   25b1c:	mov	r0, r5
   25b20:	pop	{r4, r5, r6, lr}
   25b24:	b	25a14 <luaL_where@@Base+0x5910>
   25b28:	mov	r0, r5
   25b2c:	pop	{r4, r5, r6, lr}
   25b30:	b	25258 <luaL_where@@Base+0x5154>
   25b34:	ldr	r3, [r0, #80]	; 0x50
   25b38:	ldr	r2, [r0, #108]	; 0x6c
   25b3c:	push	{r4, r5, r6, lr}
   25b40:	add	r2, r2, r1
   25b44:	ldr	r3, [r3, #16]
   25b48:	mov	r4, r0
   25b4c:	add	r3, r3, r1, lsl #3
   25b50:	mov	r6, r1
   25b54:	ldr	r3, [r3, #4]
   25b58:	uxth	r2, r2
   25b5c:	cmn	r3, #14
   25b60:	beq	25bc8 <luaL_where@@Base+0x5ac4>
   25b64:	cmn	r3, #15
   25b68:	bls	25ba8 <luaL_where@@Base+0x5aa4>
   25b6c:	mvn	r5, r3
   25b70:	orr	r3, r5, #18176	; 0x4700
   25b74:	orr	r3, r3, #128	; 0x80
   25b78:	strh	r2, [r0, #120]	; 0x78
   25b7c:	mov	r2, #4
   25b80:	strh	r3, [r0, #124]	; 0x7c
   25b84:	strh	r2, [r0, #122]	; 0x7a
   25b88:	bl	25258 <luaL_where@@Base+0x5154>
   25b8c:	cmp	r5, #2
   25b90:	rsbls	r3, r5, r5, lsl #24
   25b94:	addls	r0, r3, #32512	; 0x7f00
   25b98:	addls	r0, r0, #255	; 0xff
   25b9c:	ldr	r3, [r4, #96]	; 0x60
   25ba0:	str	r0, [r3, r6, lsl #2]
   25ba4:	pop	{r4, r5, r6, pc}
   25ba8:	ldr	r1, [pc, #32]	; 25bd0 <luaL_where@@Base+0x5acc>
   25bac:	mov	r3, #4
   25bb0:	strh	r1, [r4, #124]	; 0x7c
   25bb4:	strh	r2, [r4, #120]	; 0x78
   25bb8:	strh	r3, [r4, #122]	; 0x7a
   25bbc:	mov	r0, r4
   25bc0:	bl	25258 <luaL_where@@Base+0x5154>
   25bc4:	b	25b9c <luaL_where@@Base+0x5a98>
   25bc8:	ldr	r1, [pc, #4]	; 25bd4 <luaL_where@@Base+0x5ad0>
   25bcc:	b	25bac <luaL_where@@Base+0x5aa8>
   25bd0:	andeq	r4, r0, lr, lsl #15
   25bd4:	muleq	r0, r3, r7
   25bd8:	push	{r4, r5, r6, r7, r8, lr}
   25bdc:	lsr	r4, r1, #8
   25be0:	ldr	r3, [r0, #96]	; 0x60
   25be4:	uxtb	r4, r4
   25be8:	mov	r6, r1
   25bec:	ldr	r2, [r3, r4, lsl #2]
   25bf0:	mov	r5, r0
   25bf4:	cmp	r2, #0
   25bf8:	lsl	r7, r4, #2
   25bfc:	beq	25c2c <luaL_where@@Base+0x5b28>
   25c00:	tst	r2, #520093696	; 0x1f000000
   25c04:	movne	r0, #1
   25c08:	moveq	r0, #0
   25c0c:	cmp	r0, #0
   25c10:	ldr	r3, [r5, #84]	; 0x54
   25c14:	bne	25c4c <luaL_where@@Base+0x5b48>
   25c18:	sub	r4, r4, #3
   25c1c:	add	r3, r3, #4
   25c20:	str	r4, [r5, #104]	; 0x68
   25c24:	str	r3, [r5, #84]	; 0x54
   25c28:	pop	{r4, r5, r6, r7, r8, pc}
   25c2c:	mov	r1, r4
   25c30:	bl	25b34 <luaL_where@@Base+0x5a30>
   25c34:	ldr	r3, [r5, #84]	; 0x54
   25c38:	tst	r0, #520093696	; 0x1f000000
   25c3c:	movne	r0, #1
   25c40:	moveq	r0, #0
   25c44:	cmp	r0, #0
   25c48:	beq	25c18 <luaL_where@@Base+0x5b14>
   25c4c:	ldr	r1, [r5, #96]	; 0x60
   25c50:	ldr	r2, [pc, #44]	; 25c84 <luaL_where@@Base+0x5b80>
   25c54:	add	r7, r1, r7
   25c58:	ldr	r1, [r1, r4, lsl #2]
   25c5c:	add	r6, r2, r6, lsr #16
   25c60:	str	r1, [r7, #-4]
   25c64:	ldrb	r2, [r3, #-1]
   25c68:	add	r3, r3, r6, lsl #2
   25c6c:	str	r3, [r5, #84]	; 0x54
   25c70:	sub	r3, r2, #1
   25c74:	add	r4, r3, r4
   25c78:	str	r4, [r5, #104]	; 0x68
   25c7c:	mov	r0, #2
   25c80:	pop	{r4, r5, r6, r7, r8, pc}
   25c84:	svccc	0x00ff8001
   25c88:	push	{r4, r5, r6, lr}
   25c8c:	mov	r5, r1
   25c90:	ldr	r1, [r0, #80]	; 0x50
   25c94:	sub	ip, r2, #19
   25c98:	clz	ip, ip
   25c9c:	ldr	r1, [r1, #16]
   25ca0:	lsr	ip, ip, #5
   25ca4:	add	r1, r1, r5, lsl #3
   25ca8:	mov	r4, r0
   25cac:	ldr	r1, [r1, #4]
   25cb0:	and	r0, r3, #4
   25cb4:	cmn	r1, #14
   25cb8:	movne	r1, #0
   25cbc:	moveq	r1, #1
   25cc0:	cmp	r1, ip
   25cc4:	beq	25d14 <luaL_where@@Base+0x5c10>
   25cc8:	cmp	r0, #0
   25ccc:	add	r1, r3, #8
   25cd0:	addne	r2, r2, #128	; 0x80
   25cd4:	bne	25ce8 <luaL_where@@Base+0x5be4>
   25cd8:	cmp	r2, #19
   25cdc:	bne	25ce8 <luaL_where@@Base+0x5be4>
   25ce0:	lsrs	r3, r3, #16
   25ce4:	moveq	r2, #147	; 0x93
   25ce8:	ldr	r3, [r4, #108]	; 0x6c
   25cec:	orr	r2, r2, #18176	; 0x4700
   25cf0:	add	r3, r3, r5
   25cf4:	strh	r3, [r4, #120]	; 0x78
   25cf8:	strh	r2, [r4, #124]	; 0x7c
   25cfc:	strh	r1, [r4, #122]	; 0x7a
   25d00:	mov	r0, r4
   25d04:	bl	25258 <luaL_where@@Base+0x5154>
   25d08:	ldr	r3, [r4, #96]	; 0x60
   25d0c:	str	r0, [r3, r5, lsl #2]
   25d10:	pop	{r4, r5, r6, pc}
   25d14:	cmp	r0, #0
   25d18:	addne	r2, r2, #128	; 0x80
   25d1c:	movne	r1, r3
   25d20:	moveq	r1, r3
   25d24:	b	25ce8 <luaL_where@@Base+0x5be4>
   25d28:	push	{r4, r5, r6, r7, r8, lr}
   25d2c:	mov	r5, r1
   25d30:	ldr	r7, [r0, r1, lsl #2]
   25d34:	ldr	r1, [r0, #136]	; 0x88
   25d38:	mov	lr, #1
   25d3c:	uxth	r6, r7
   25d40:	mov	r3, r2
   25d44:	lsl	r6, r6, #3
   25d48:	add	r1, r1, r6
   25d4c:	mov	ip, #0
   25d50:	str	r7, [r0, r2, lsl #2]
   25d54:	strb	r3, [r1, #6]
   25d58:	lsl	r2, lr, r5
   25d5c:	str	ip, [r0, r5, lsl #2]
   25d60:	ldr	ip, [r0, #144]	; 0x90
   25d64:	ldr	r8, [r0, #148]	; 0x94
   25d68:	mvn	lr, lr, lsl r3
   25d6c:	orr	ip, r2, ip
   25d70:	orr	r8, r8, r2
   25d74:	ldr	r2, [r0, #152]	; 0x98
   25d78:	and	ip, ip, lr
   25d7c:	mov	r4, r0
   25d80:	and	lr, lr, r2
   25d84:	add	r1, r1, #4
   25d88:	str	r8, [r0, #148]	; 0x94
   25d8c:	str	ip, [r0, #144]	; 0x90
   25d90:	str	lr, [r0, #152]	; 0x98
   25d94:	mov	r2, r5
   25d98:	bl	1ca38 <_start@@Base+0x9688>
   25d9c:	ldr	r3, [r4, #136]	; 0x88
   25da0:	add	r6, r3, r6
   25da4:	ldrb	r6, [r6, #7]
   25da8:	cmp	r6, #0
   25dac:	popne	{r4, r5, r6, r7, r8, pc}
   25db0:	ldr	r0, [r4, #140]	; 0x8c
   25db4:	ldrh	r2, [r4, #196]	; 0xc4
   25db8:	mov	r3, #5120	; 0x1400
   25dbc:	strh	r3, [r0, #124]	; 0x7c
   25dc0:	strh	r7, [r0, #120]	; 0x78
   25dc4:	strh	r2, [r0, #122]	; 0x7a
   25dc8:	bl	25258 <luaL_where@@Base+0x5154>
   25dcc:	ldr	r3, [r4, #140]	; 0x8c
   25dd0:	ldr	r3, [r3, #16]
   25dd4:	uxth	r0, r0
   25dd8:	add	r0, r3, r0, lsl #3
   25ddc:	strb	r5, [r0, #6]
   25de0:	strb	r6, [r0, #7]
   25de4:	pop	{r4, r5, r6, r7, r8, pc}
   25de8:	push	{r4, r5, r6, r7, r8, lr}
   25dec:	mov	r5, r0
   25df0:	ldr	r4, [r0, #136]	; 0x88
   25df4:	mov	r7, r2
   25df8:	add	r4, r4, r2, lsl #3
   25dfc:	mov	r6, r1
   25e00:	ldrb	r3, [r4, #6]
   25e04:	tst	r3, #128	; 0x80
   25e08:	beq	25e34 <luaL_where@@Base+0x5d30>
   25e0c:	mvn	r3, r1, lsl #25
   25e10:	ldr	r1, [pc, #140]	; 25ea4 <luaL_where@@Base+0x5da0>
   25e14:	mvn	r3, r3, lsr #25
   25e18:	cmp	r6, #15
   25e1c:	ldr	r2, [pc, #132]	; 25ea8 <luaL_where@@Base+0x5da4>
   25e20:	strb	r3, [r4, #6]
   25e24:	movls	r2, r1
   25e28:	mov	r1, r7
   25e2c:	bl	21b9c <luaL_where@@Base+0x1a98>
   25e30:	mov	r3, r0
   25e34:	mov	r1, #1
   25e38:	ldr	r2, [r5, #152]	; 0x98
   25e3c:	lsl	r1, r1, r3
   25e40:	cmp	r3, r6
   25e44:	bic	r2, r2, r1
   25e48:	str	r2, [r5, #152]	; 0x98
   25e4c:	popeq	{r4, r5, r6, r7, r8, pc}
   25e50:	ldrb	r2, [r4, #4]
   25e54:	tst	r2, #64	; 0x40
   25e58:	beq	25e70 <luaL_where@@Base+0x5d6c>
   25e5c:	add	r2, r6, #160	; 0xa0
   25e60:	lsl	r2, r2, #1
   25e64:	ldrh	r2, [r5, r2]
   25e68:	cmp	r2, r7
   25e6c:	beq	25e84 <luaL_where@@Base+0x5d80>
   25e70:	mov	r2, r6
   25e74:	add	r1, r4, #4
   25e78:	mov	r0, r5
   25e7c:	pop	{r4, r5, r6, r7, r8, lr}
   25e80:	b	1ca38 <_start@@Base+0x9688>
   25e84:	ldr	r0, [r5, #148]	; 0x94
   25e88:	mov	r2, r6
   25e8c:	orr	r0, r0, r1
   25e90:	str	r0, [r5, #148]	; 0x94
   25e94:	mov	r1, r3
   25e98:	mov	r0, r5
   25e9c:	pop	{r4, r5, r6, r7, r8, lr}
   25ea0:	b	25d28 <luaL_where@@Base+0x5c24>
   25ea4:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   25ea8:			; <UNDEFINED> instruction: 0xffff0000
   25eac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25eb0:	mov	fp, r1
   25eb4:	ldm	r1, {r1, r7}
   25eb8:	sub	sp, sp, #28
   25ebc:	mov	r4, r2
   25ec0:	lsr	r3, r7, #14
   25ec4:	and	r3, r3, #3
   25ec8:	cmp	r1, #0
   25ecc:	mov	r5, r0
   25ed0:	uxtab	r7, r3, r7
   25ed4:	beq	25edc <luaL_where@@Base+0x5dd8>
   25ed8:	bl	21b2c <luaL_where@@Base+0x1a28>
   25edc:	mvn	r3, #32768	; 0x8000
   25ee0:	cmp	r7, #0
   25ee4:	str	r3, [r5]
   25ee8:	str	r3, [r5, #4]
   25eec:	str	r3, [r5, #8]
   25ef0:	str	r3, [r5, #12]
   25ef4:	beq	25f7c <luaL_where@@Base+0x5e78>
   25ef8:	mov	r3, #0
   25efc:	sub	r4, r4, #4
   25f00:	str	r3, [sp, #12]
   25f04:	mov	r8, r3
   25f08:	mov	r9, r3
   25f0c:	mov	r3, #16
   25f10:	add	r7, r4, r7, lsl #2
   25f14:	str	r3, [sp, #16]
   25f18:	b	25f5c <luaL_where@@Base+0x5e58>
   25f1c:	ldr	r6, [r5, #136]	; 0x88
   25f20:	add	r6, r6, r1, lsl #3
   25f24:	ldrb	r2, [r6, #4]
   25f28:	and	r2, r2, #31
   25f2c:	sub	r3, r2, #13
   25f30:	cmp	r3, #1
   25f34:	bls	25f84 <luaL_where@@Base+0x5e80>
   25f38:	cmp	r8, #3
   25f3c:	bhi	26024 <luaL_where@@Base+0x5f20>
   25f40:	mov	r2, r1
   25f44:	mov	r0, r5
   25f48:	mov	r1, r8
   25f4c:	bl	25de8 <luaL_where@@Base+0x5ce4>
   25f50:	add	r8, r8, #1
   25f54:	cmp	r7, r4
   25f58:	beq	25f7c <luaL_where@@Base+0x5e78>
   25f5c:	ldr	r1, [r4, #4]!
   25f60:	cmp	r1, #0
   25f64:	bne	25f1c <luaL_where@@Base+0x5e18>
   25f68:	cmp	r8, #3
   25f6c:	bls	25f50 <luaL_where@@Base+0x5e4c>
   25f70:	cmp	r7, r4
   25f74:	add	r9, r9, #4
   25f78:	bne	25f5c <luaL_where@@Base+0x5e58>
   25f7c:	add	sp, sp, #28
   25f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25f84:	ldr	r3, [fp, #4]
   25f88:	ldr	sl, [r5, #144]	; 0x90
   25f8c:	ands	r3, r3, #2048	; 0x800
   25f90:	bne	26074 <luaL_where@@Base+0x5f70>
   25f94:	cmp	r2, #14
   25f98:	beq	2604c <luaL_where@@Base+0x5f48>
   25f9c:	ldr	r2, [sp, #12]
   25fa0:	cmp	r2, #0
   25fa4:	bne	26128 <luaL_where@@Base+0x6024>
   25fa8:	ldr	r3, [sp, #16]
   25fac:	cmp	r3, #23
   25fb0:	bls	26174 <luaL_where@@Base+0x6070>
   25fb4:	bic	r3, sl, #15
   25fb8:	str	r3, [r5, #144]	; 0x90
   25fbc:	ldr	r2, [pc, #468]	; 26198 <luaL_where@@Base+0x6094>
   25fc0:	mov	r0, r5
   25fc4:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   25fc8:	ldrb	r2, [r6, #4]
   25fcc:	ldr	r3, [r5, #144]	; 0x90
   25fd0:	and	sl, sl, #15
   25fd4:	and	r2, r2, #31
   25fd8:	orr	sl, r3, sl
   25fdc:	cmp	r2, #14
   25fe0:	mov	r3, #0
   25fe4:	str	sl, [r5, #144]	; 0x90
   25fe8:	str	r3, [sp, #12]
   25fec:	beq	260dc <luaL_where@@Base+0x5fd8>
   25ff0:	str	r9, [sp]
   25ff4:	mov	r2, r0
   25ff8:	mov	r3, #13
   25ffc:	add	r1, r6, #4
   26000:	mov	r0, r5
   26004:	bl	1cb2c <_start@@Base+0x977c>
   26008:	ldrb	r3, [r6, #4]
   2600c:	and	r3, r3, #31
   26010:	cmp	r3, #14
   26014:	moveq	r3, #8
   26018:	movne	r3, #4
   2601c:	add	r9, r9, r3
   26020:	b	25f54 <luaL_where@@Base+0x5e50>
   26024:	ldr	r2, [pc, #368]	; 2619c <luaL_where@@Base+0x6098>
   26028:	mov	r0, r5
   2602c:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   26030:	str	r9, [sp]
   26034:	add	r1, r6, #4
   26038:	mov	r3, #13
   2603c:	mov	r2, r0
   26040:	mov	r0, r5
   26044:	bl	1cb2c <_start@@Base+0x977c>
   26048:	b	25f70 <luaL_where@@Base+0x5e6c>
   2604c:	ldr	r3, [sp, #16]
   26050:	cmp	r3, #23
   26054:	bhi	25fb4 <luaL_where@@Base+0x5eb0>
   26058:	mov	r2, r1
   2605c:	mov	r0, r5
   26060:	mov	r1, r3
   26064:	add	r3, r3, #1
   26068:	str	r3, [sp, #16]
   2606c:	bl	25de8 <luaL_where@@Base+0x5ce4>
   26070:	b	25f54 <luaL_where@@Base+0x5e50>
   26074:	bic	r3, sl, #15
   26078:	str	r3, [r5, #144]	; 0x90
   2607c:	ldr	r2, [pc, #276]	; 26198 <luaL_where@@Base+0x6094>
   26080:	mov	r0, r5
   26084:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   26088:	ldrb	r2, [r6, #4]
   2608c:	ldr	r3, [r5, #144]	; 0x90
   26090:	and	sl, sl, #15
   26094:	and	r2, r2, #31
   26098:	orr	sl, r3, sl
   2609c:	cmp	r2, #14
   260a0:	str	sl, [r5, #144]	; 0x90
   260a4:	beq	260e8 <luaL_where@@Base+0x5fe4>
   260a8:	cmp	r8, #3
   260ac:	bhi	25ff0 <luaL_where@@Base+0x5eec>
   260b0:	ldr	r3, [pc, #232]	; 261a0 <luaL_where@@Base+0x609c>
   260b4:	ldr	r2, [r5, #128]	; 0x80
   260b8:	lsl	r0, r0, #16
   260bc:	orr	r3, r3, r8, lsl #12
   260c0:	and	r0, r0, #983040	; 0xf0000
   260c4:	orr	r3, r3, r0
   260c8:	sub	r1, r2, #4
   260cc:	str	r1, [r5, #128]	; 0x80
   260d0:	add	r8, r8, #1
   260d4:	str	r3, [r2, #-4]
   260d8:	b	25f54 <luaL_where@@Base+0x5e50>
   260dc:	add	r9, r9, #4
   260e0:	bic	r9, r9, #4
   260e4:	b	25ff0 <luaL_where@@Base+0x5eec>
   260e8:	add	r8, r8, #1
   260ec:	bic	r8, r8, #1
   260f0:	cmp	r8, #3
   260f4:	bhi	260dc <luaL_where@@Base+0x5fd8>
   260f8:	ldr	r3, [pc, #164]	; 261a4 <luaL_where@@Base+0x60a0>
   260fc:	add	r1, r8, #1
   26100:	ldr	r2, [r5, #128]	; 0x80
   26104:	orr	r3, r3, r8, lsl #12
   26108:	orr	r3, r3, r1, lsl #16
   2610c:	and	r0, r0, #15
   26110:	orr	r3, r3, r0
   26114:	sub	r1, r2, #4
   26118:	str	r1, [r5, #128]	; 0x80
   2611c:	add	r8, r8, #2
   26120:	str	r3, [r2, #-4]
   26124:	b	25f54 <luaL_where@@Base+0x5e50>
   26128:	ldr	r2, [pc, #104]	; 26198 <luaL_where@@Base+0x6094>
   2612c:	mov	r0, r5
   26130:	str	r3, [sp, #20]
   26134:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   26138:	ldr	r3, [sp, #12]
   2613c:	ldr	r1, [r5, #128]	; 0x80
   26140:	lsl	r2, r3, #12
   26144:	ldr	r3, [sp, #20]
   26148:	uxth	r2, r2
   2614c:	orr	r2, r2, #-301989888	; 0xee000000
   26150:	orr	r2, r2, #15728640	; 0xf00000
   26154:	orr	r2, r2, #2624	; 0xa40
   26158:	sub	ip, r1, #4
   2615c:	str	ip, [r5, #128]	; 0x80
   26160:	str	r3, [sp, #12]
   26164:	and	r0, r0, #15
   26168:	orr	r2, r2, r0
   2616c:	str	r2, [r1, #-4]
   26170:	b	25f54 <luaL_where@@Base+0x5e50>
   26174:	mov	r6, r3
   26178:	mov	r2, r1
   2617c:	mov	r0, r5
   26180:	mov	r1, r3
   26184:	bl	25de8 <luaL_where@@Base+0x5ce4>
   26188:	add	r3, r6, #1
   2618c:	str	r6, [sp, #12]
   26190:	str	r3, [sp, #16]
   26194:	b	25f54 <luaL_where@@Base+0x5e50>
   26198:			; <UNDEFINED> instruction: 0xffff0000
   2619c:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   261a0:	vmov	r0, s0
   261a4:	vmov	r0, r0, d0
   261a8:	ldrb	r2, [r1, #4]
   261ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   261b0:	mov	r7, r1
   261b4:	ldrh	r4, [r1, #2]
   261b8:	and	r3, r2, #31
   261bc:	sub	r3, r3, #13
   261c0:	and	r4, r4, #31
   261c4:	cmp	r3, #1
   261c8:	mov	r5, r0
   261cc:	ldrh	r8, [r1]
   261d0:	sub	r6, r4, #13
   261d4:	bls	262fc <luaL_where@@Base+0x61f8>
   261d8:	cmp	r6, #1
   261dc:	bhi	26284 <luaL_where@@Base+0x6180>
   261e0:	tst	r2, #128	; 0x80
   261e4:	bne	263e4 <luaL_where@@Base+0x62e0>
   261e8:	ldr	r6, [pc, #672]	; 26490 <luaL_where@@Base+0x638c>
   261ec:	mov	r1, r8
   261f0:	mov	r2, r6
   261f4:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   261f8:	mov	r1, #1
   261fc:	mov	r8, r0
   26200:	mov	r0, r5
   26204:	bic	r1, r6, r1, lsl r8
   26208:	bl	22b38 <luaL_where@@Base+0x2a34>
   2620c:	ldr	r2, [pc, #640]	; 26494 <luaL_where@@Base+0x6390>
   26210:	mov	r1, r7
   26214:	and	r8, r8, #15
   26218:	mov	r6, r0
   2621c:	mov	r0, r5
   26220:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   26224:	ldr	r3, [pc, #620]	; 26498 <luaL_where@@Base+0x6394>
   26228:	ldr	r2, [r5, #128]	; 0x80
   2622c:	lsl	r1, r6, #16
   26230:	and	r1, r1, #983040	; 0xf0000
   26234:	lsl	r6, r6, #12
   26238:	orr	r0, r3, r0, lsl #12
   2623c:	orr	r0, r0, r1
   26240:	str	r0, [r2, #-4]
   26244:	ldrb	r3, [r7, #4]
   26248:	and	r3, r3, #31
   2624c:	cmp	r3, #19
   26250:	ldreq	r1, [pc, #580]	; 2649c <luaL_where@@Base+0x6398>
   26254:	ldreq	r3, [pc, #580]	; 264a0 <luaL_where@@Base+0x639c>
   26258:	ldrne	r3, [pc, #580]	; 264a4 <luaL_where@@Base+0x63a0>
   2625c:	ldrne	r1, [pc, #580]	; 264a8 <luaL_where@@Base+0x63a4>
   26260:	cmp	r4, #14
   26264:	uxth	r4, r6
   26268:	moveq	r3, r1
   2626c:	orr	r4, r4, r8
   26270:	orr	r4, r4, r3
   26274:	sub	r3, r2, #8
   26278:	str	r3, [r5, #128]	; 0x80
   2627c:	str	r4, [r2, #-8]
   26280:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26284:	ldr	r2, [pc, #520]	; 26494 <luaL_where@@Base+0x6390>
   26288:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   2628c:	sub	r3, r4, #15
   26290:	cmp	r3, #3
   26294:	mov	r6, r0
   26298:	bhi	26358 <luaL_where@@Base+0x6254>
   2629c:	ldr	r2, [pc, #496]	; 26494 <luaL_where@@Base+0x6390>
   262a0:	mov	r1, r8
   262a4:	mov	r0, r5
   262a8:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   262ac:	ldr	r2, [r5, #160]	; 0xa0
   262b0:	lsl	r6, r6, #12
   262b4:	tst	r2, #112	; 0x70
   262b8:	beq	26404 <luaL_where@@Base+0x6300>
   262bc:	cmp	r4, #15
   262c0:	beq	2646c <luaL_where@@Base+0x6368>
   262c4:	cmp	r4, #16
   262c8:	beq	26464 <luaL_where@@Base+0x6360>
   262cc:	ldr	r3, [pc, #472]	; 264ac <luaL_where@@Base+0x63a8>
   262d0:	ldr	r2, [pc, #472]	; 264b0 <luaL_where@@Base+0x63ac>
   262d4:	cmp	r4, #17
   262d8:	movne	r4, r3
   262dc:	moveq	r4, r2
   262e0:	ldr	r3, [r5, #128]	; 0x80
   262e4:	orr	r6, r0, r6
   262e8:	orr	r6, r6, r4
   262ec:	sub	r2, r3, #4
   262f0:	str	r2, [r5, #128]	; 0x80
   262f4:	str	r6, [r3, #-4]
   262f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   262fc:	ldr	r2, [pc, #396]	; 26490 <luaL_where@@Base+0x638c>
   26300:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   26304:	cmp	r6, #1
   26308:	mov	r9, r0
   2630c:	bhi	2636c <luaL_where@@Base+0x6268>
   26310:	ldr	r3, [pc, #412]	; 264b4 <luaL_where@@Base+0x63b0>
   26314:	cmp	r4, #14
   26318:	ldr	r2, [pc, #368]	; 26490 <luaL_where@@Base+0x638c>
   2631c:	mov	r1, r8
   26320:	mov	r0, r5
   26324:	ldr	r6, [pc, #396]	; 264b8 <luaL_where@@Base+0x63b4>
   26328:	moveq	r6, r3
   2632c:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   26330:	lsl	r4, r9, #12
   26334:	ldr	r3, [r5, #128]	; 0x80
   26338:	uxth	r4, r4
   2633c:	orr	r4, r4, r6
   26340:	sub	r2, r3, #4
   26344:	str	r2, [r5, #128]	; 0x80
   26348:	and	r0, r0, #15
   2634c:	orr	r4, r4, r0
   26350:	str	r4, [r3, #-4]
   26354:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26358:	mov	r2, r8
   2635c:	mov	r1, r0
   26360:	mov	r0, r5
   26364:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   26368:	b	25de8 <luaL_where@@Base+0x5ce4>
   2636c:	ldr	r2, [pc, #288]	; 26494 <luaL_where@@Base+0x6390>
   26370:	mov	r1, r8
   26374:	mov	r0, r5
   26378:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   2637c:	ldrb	r3, [r7, #4]
   26380:	ldr	r1, [r5, #128]	; 0x80
   26384:	and	r3, r3, #31
   26388:	cmp	r3, #13
   2638c:	ldreq	r2, [pc, #296]	; 264bc <luaL_where@@Base+0x63b8>
   26390:	ldrne	r3, [pc, #296]	; 264c0 <luaL_where@@Base+0x63bc>
   26394:	ldreq	r3, [pc, #296]	; 264c4 <luaL_where@@Base+0x63c0>
   26398:	ldrne	r2, [pc, #296]	; 264c8 <luaL_where@@Base+0x63c4>
   2639c:	cmp	r4, #19
   263a0:	movne	r4, r3
   263a4:	lsl	r3, r9, #16
   263a8:	and	r3, r3, #983040	; 0xf0000
   263ac:	orr	r3, r3, #-301989888	; 0xee000000
   263b0:	orr	r3, r3, #2576	; 0xa10
   263b4:	moveq	r4, r2
   263b8:	lsl	r2, r9, #12
   263bc:	and	r9, r9, #15
   263c0:	uxth	r2, r2
   263c4:	orr	r9, r2, r9
   263c8:	orr	r9, r9, r4
   263cc:	orr	r3, r3, r0, lsl #12
   263d0:	sub	r2, r1, #8
   263d4:	str	r9, [r1, #-4]
   263d8:	str	r2, [r5, #128]	; 0x80
   263dc:	str	r3, [r1, #-8]
   263e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   263e4:	mov	r1, r8
   263e8:	ldr	r2, [pc, #160]	; 26490 <luaL_where@@Base+0x638c>
   263ec:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   263f0:	mov	r1, r7
   263f4:	mov	r2, r0
   263f8:	mov	r0, r5
   263fc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   26400:	b	23d84 <luaL_where@@Base+0x3c80>
   26404:	cmp	r4, #16
   26408:	ldr	r1, [r5, #128]	; 0x80
   2640c:	beq	26474 <luaL_where@@Base+0x6370>
   26410:	cmp	r4, #15
   26414:	beq	26458 <luaL_where@@Base+0x6354>
   26418:	cmp	r4, #18
   2641c:	movne	ip, #64	; 0x40
   26420:	moveq	ip, #32
   26424:	mov	r3, #2048	; 0x800
   26428:	orr	r6, r6, #-536870898	; 0xe000000e
   2642c:	ldr	r2, [pc, #152]	; 264cc <luaL_where@@Base+0x63c8>
   26430:	orr	r6, r6, #27262976	; 0x1a00000
   26434:	orr	r6, r6, ip
   26438:	orr	r2, r0, r2
   2643c:	orr	r6, r6, r3
   26440:	orr	r2, r2, r3
   26444:	sub	r3, r1, #8
   26448:	str	r6, [r1, #-4]
   2644c:	str	r3, [r5, #128]	; 0x80
   26450:	str	r2, [r1, #-8]
   26454:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26458:	mov	r3, #3072	; 0xc00
   2645c:	mov	ip, #64	; 0x40
   26460:	b	26428 <luaL_where@@Base+0x6324>
   26464:	ldr	r4, [pc, #100]	; 264d0 <luaL_where@@Base+0x63cc>
   26468:	b	262e0 <luaL_where@@Base+0x61dc>
   2646c:	ldr	r4, [pc, #96]	; 264d4 <luaL_where@@Base+0x63d0>
   26470:	b	262e0 <luaL_where@@Base+0x61dc>
   26474:	orr	r3, r6, #-503316480	; 0xe2000000
   26478:	orr	r3, r3, #255	; 0xff
   2647c:	orr	r6, r3, r0, lsl #16
   26480:	sub	r3, r1, #4
   26484:	str	r3, [r5, #128]	; 0x80
   26488:	str	r6, [r1, #-4]
   2648c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26490:			; <UNDEFINED> instruction: 0xffff0000
   26494:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   26498:	vmov	r0, s0
   2649c:	vcvt.s32.f64	s0, d0
   264a0:	vcvt.s32.f32	s0, s0
   264a4:	vcvt.u32.f32	s0, s0
   264a8:	vcvt.u32.f64	s0, d0
   264ac:	uxth	r0, r0
   264b0:	sxth	r0, r0
   264b4:	vcvt.f32.f64	s0, d0
   264b8:	vcvt.f64.f32	d0, s0
   264bc:	vcvt.f32.s32	s0, s0
   264c0:	vcvt.f64.u32	d0, s0
   264c4:	vcvt.f32.u32	s0, s0
   264c8:	vcvt.f64.s32	d0, s0
   264cc:	mov	lr, r0
   264d0:	uxtb	r0, r0
   264d4:	sxtb	r0, r0
   264d8:	push	{r4, r5, r6, lr}
   264dc:	ands	r4, r1, r3
   264e0:	popeq	{r4, r5, r6, pc}
   264e4:	ldr	ip, [r0, #144]	; 0x90
   264e8:	bic	r1, r3, r1
   264ec:	ands	ip, r1, ip
   264f0:	mov	r6, r2
   264f4:	clzne	ip, ip
   264f8:	mov	r5, r0
   264fc:	eorne	r2, ip, #31
   26500:	beq	26520 <luaL_where@@Base+0x641c>
   26504:	bics	r6, r4, r6
   26508:	mov	r0, r5
   2650c:	movne	r4, r6
   26510:	clz	r1, r4
   26514:	pop	{r4, r5, r6, lr}
   26518:	eor	r1, r1, #31
   2651c:	b	25d28 <luaL_where@@Base+0x5c24>
   26520:	bl	21328 <luaL_where@@Base+0x1224>
   26524:	mov	r2, r0
   26528:	b	26504 <luaL_where@@Base+0x6400>
   2652c:	ldr	r3, [r0, #100]	; 0x64
   26530:	tst	r3, #131072	; 0x20000
   26534:	beq	2663c <luaL_where@@Base+0x6538>
   26538:	push	{r4, r5, lr}
   2653c:	ldrb	r5, [r0, #125]	; 0x7d
   26540:	ldrh	r1, [r0, #122]	; 0x7a
   26544:	ldr	r2, [r0, #128]	; 0x80
   26548:	add	r3, r5, #136	; 0x88
   2654c:	add	r3, r0, r3, lsl #1
   26550:	lsr	r1, r1, #8
   26554:	ldrh	r3, [r3, #14]
   26558:	add	r2, r2, r1, lsl #2
   2655c:	cmp	r3, #0
   26560:	ldr	r4, [r2, #20]
   26564:	beq	265a8 <luaL_where@@Base+0x64a4>
   26568:	ldr	r1, [r0, #16]
   2656c:	lsl	r2, r3, #3
   26570:	add	ip, r1, r2
   26574:	ldrh	r2, [r1, r2]
   26578:	tst	r2, #32768	; 0x8000
   2657c:	bne	2659c <luaL_where@@Base+0x6498>
   26580:	ldrh	lr, [ip, #2]
   26584:	ldr	r2, [r1, r2, lsl #3]
   26588:	lsr	lr, lr, #8
   2658c:	add	r2, r2, lr, lsl #2
   26590:	ldr	r2, [r2, #20]
   26594:	cmp	r4, r2
   26598:	beq	265b0 <luaL_where@@Base+0x64ac>
   2659c:	ldrh	r3, [ip, #6]
   265a0:	cmp	r3, #0
   265a4:	bne	2656c <luaL_where@@Base+0x6468>
   265a8:	pop	{r4, r5, lr}
   265ac:	b	25258 <luaL_where@@Base+0x5154>
   265b0:	cmp	r5, #61	; 0x3d
   265b4:	beq	265c0 <luaL_where@@Base+0x64bc>
   265b8:	mov	r0, r3
   265bc:	pop	{r4, r5, pc}
   265c0:	add	r2, r0, #320	; 0x140
   265c4:	ldrh	r2, [r2]
   265c8:	cmp	r3, r2
   265cc:	bcs	265b8 <luaL_where@@Base+0x64b4>
   265d0:	add	r2, r0, #440	; 0x1b8
   265d4:	ldrh	r2, [r2, #2]
   265d8:	cmp	r2, #0
   265dc:	bne	265a8 <luaL_where@@Base+0x64a4>
   265e0:	ldr	r2, [r0, #444]	; 0x1bc
   265e4:	cmp	r2, #0
   265e8:	bne	265a8 <luaL_where@@Base+0x64a4>
   265ec:	ldr	r2, [r0, #448]	; 0x1c0
   265f0:	cmp	r2, #0
   265f4:	bne	265a8 <luaL_where@@Base+0x64a4>
   265f8:	add	r2, r0, #452	; 0x1c4
   265fc:	ldrh	r2, [r2]
   26600:	cmp	r2, #0
   26604:	bne	265a8 <luaL_where@@Base+0x64a4>
   26608:	add	r2, r0, #456	; 0x1c8
   2660c:	ldrh	r2, [r2, #2]
   26610:	cmp	r2, #0
   26614:	bne	265a8 <luaL_where@@Base+0x64a4>
   26618:	add	r2, r0, #468	; 0x1d4
   2661c:	ldrh	r2, [r2, #2]
   26620:	cmp	r2, #0
   26624:	bne	265a8 <luaL_where@@Base+0x64a4>
   26628:	add	r2, r0, #476	; 0x1dc
   2662c:	ldrh	r2, [r2]
   26630:	cmp	r2, #0
   26634:	bne	265a8 <luaL_where@@Base+0x64a4>
   26638:	b	265b8 <luaL_where@@Base+0x64b4>
   2663c:	b	25258 <luaL_where@@Base+0x5154>
   26640:	ldr	r3, [r0, #100]	; 0x64
   26644:	ands	r3, r3, #8388608	; 0x800000
   26648:	beq	266c0 <luaL_where@@Base+0x65bc>
   2664c:	add	r3, r0, #304	; 0x130
   26650:	ldrh	r1, [r0, #120]	; 0x78
   26654:	ldrh	r3, [r3, #2]
   26658:	cmp	r3, r1
   2665c:	bls	266b4 <luaL_where@@Base+0x65b0>
   26660:	ldr	ip, [r0, #16]
   26664:	b	26674 <luaL_where@@Base+0x6570>
   26668:	ldrh	r3, [r2, #6]
   2666c:	cmp	r1, r3
   26670:	bcs	266b4 <luaL_where@@Base+0x65b0>
   26674:	lsl	r3, r3, #3
   26678:	add	r2, ip, r3
   2667c:	ldrh	r3, [ip, r3]
   26680:	cmp	r3, r1
   26684:	bne	26668 <luaL_where@@Base+0x6564>
   26688:	ldrh	r3, [r2, #2]
   2668c:	tst	r3, #32768	; 0x8000
   26690:	bne	26668 <luaL_where@@Base+0x6564>
   26694:	ldr	r3, [ip, r3, lsl #3]
   26698:	ldr	r1, [r0, #144]	; 0x90
   2669c:	cmp	r1, r3
   266a0:	ble	266b8 <luaL_where@@Base+0x65b4>
   266a4:	ldrh	r3, [r0, #122]	; 0x7a
   266a8:	mov	r0, #4
   266ac:	strh	r3, [r2, #2]
   266b0:	bx	lr
   266b4:	b	25258 <luaL_where@@Base+0x5154>
   266b8:	mov	r0, #4
   266bc:	bx	lr
   266c0:	mov	r0, r3
   266c4:	bx	lr
   266c8:	ldr	r3, [r0, #100]	; 0x64
   266cc:	tst	r3, #131072	; 0x20000
   266d0:	beq	26758 <luaL_where@@Base+0x6654>
   266d4:	add	r3, r0, #464	; 0x1d0
   266d8:	ldrh	ip, [r0, #120]	; 0x78
   266dc:	ldrh	r3, [r3, #2]
   266e0:	push	{r4, r5, r6, lr}
   266e4:	ldrh	r5, [r0, #122]	; 0x7a
   266e8:	ldrb	r6, [r0, #124]	; 0x7c
   266ec:	ldr	r4, [pc, #104]	; 2675c <luaL_where@@Base+0x6658>
   266f0:	cmp	ip, r3
   266f4:	and	r5, r5, r4
   266f8:	and	r6, r6, #128	; 0x80
   266fc:	bcs	26750 <luaL_where@@Base+0x664c>
   26700:	ldr	lr, [r0, #16]
   26704:	b	26714 <luaL_where@@Base+0x6610>
   26708:	ldrh	r3, [r1, #6]
   2670c:	cmp	ip, r3
   26710:	bcs	26750 <luaL_where@@Base+0x664c>
   26714:	lsl	r2, r3, #3
   26718:	add	r1, lr, r2
   2671c:	ldrh	r2, [lr, r2]
   26720:	cmp	r2, ip
   26724:	bne	26708 <luaL_where@@Base+0x6604>
   26728:	ldrh	r2, [r1, #2]
   2672c:	and	r2, r2, r4
   26730:	cmp	r5, r2
   26734:	bne	26708 <luaL_where@@Base+0x6604>
   26738:	ldrb	r2, [r1, #4]
   2673c:	and	r2, r2, #128	; 0x80
   26740:	cmp	r6, r2
   26744:	bhi	26708 <luaL_where@@Base+0x6604>
   26748:	mov	r0, r3
   2674c:	pop	{r4, r5, r6, pc}
   26750:	pop	{r4, r5, r6, lr}
   26754:	b	25258 <luaL_where@@Base+0x5154>
   26758:	b	25258 <luaL_where@@Base+0x5154>
   2675c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   26760:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   26764:	mov	r8, r3
   26768:	ldrh	r3, [r3]
   2676c:	ldr	r6, [r0, #8]
   26770:	ldr	lr, [r0, #236]	; 0xec
   26774:	sub	r5, r6, #1
   26778:	add	ip, r2, r3, lsl #3
   2677c:	lsl	r3, r3, #1
   26780:	cmp	r5, lr
   26784:	ldrh	r7, [r8, #2]
   26788:	ldrh	r9, [r1, r3]
   2678c:	sub	sp, sp, #8
   26790:	str	r5, [r0, #8]
   26794:	mov	r4, r0
   26798:	ldrh	sl, [ip, #6]
   2679c:	bcs	268b8 <luaL_where@@Base+0x67b4>
   267a0:	ldr	ip, [r4, #16]
   267a4:	lsl	r0, r5, #3
   267a8:	add	r3, ip, r0
   267ac:	mov	lr, #25344	; 0x6300
   267b0:	str	r6, [r4, #8]
   267b4:	strh	lr, [r3, #4]
   267b8:	strh	sl, [ip, r0]
   267bc:	strh	r9, [r3, #2]
   267c0:	ldr	r6, [r4, #8]
   267c4:	ldr	r3, [r4, #236]	; 0xec
   267c8:	add	r2, r2, r7, lsl #3
   267cc:	cmp	r6, r3
   267d0:	ldrh	r9, [r2, #6]
   267d4:	uxth	r5, r5
   267d8:	bcs	268c8 <luaL_where@@Base+0x67c4>
   267dc:	lsl	r2, r6, #3
   267e0:	add	r3, ip, r2
   267e4:	add	lr, r6, #1
   267e8:	mov	r0, #25344	; 0x6300
   267ec:	str	lr, [r4, #8]
   267f0:	strh	r0, [r3, #4]
   267f4:	strh	r5, [ip, r2]
   267f8:	strh	r9, [r3, #2]
   267fc:	ldr	r5, [r4, #8]
   26800:	ldr	r3, [r4, #236]	; 0xec
   26804:	lsl	r7, r7, #1
   26808:	cmp	r5, r3
   2680c:	uxth	r6, r6
   26810:	ldrh	r7, [r1, r7]
   26814:	bcs	268e0 <luaL_where@@Base+0x67dc>
   26818:	lsl	r2, r5, #3
   2681c:	add	r3, ip, r2
   26820:	add	r0, r5, #1
   26824:	mov	r1, #25344	; 0x6300
   26828:	str	r0, [r4, #8]
   2682c:	strh	r1, [r3, #4]
   26830:	strh	r6, [ip, r2]
   26834:	strh	r7, [r3, #2]
   26838:	ldr	r3, [r4, #236]	; 0xec
   2683c:	ldr	r6, [r4, #8]
   26840:	uxth	r5, r5
   26844:	cmp	r6, r3
   26848:	ldr	r3, [sp, #40]	; 0x28
   2684c:	uxth	r7, r3
   26850:	bcs	268f0 <luaL_where@@Base+0x67ec>
   26854:	lsl	r2, r6, #3
   26858:	add	r3, ip, r2
   2685c:	ldr	r1, [pc, #172]	; 26910 <luaL_where@@Base+0x680c>
   26860:	add	r0, r6, #1
   26864:	uxth	r6, r6
   26868:	str	r0, [r4, #8]
   2686c:	strh	r1, [r3, #4]
   26870:	strh	r5, [ip, r2]
   26874:	strh	r7, [r3, #2]
   26878:	strh	r6, [r8, #6]
   2687c:	ldr	r5, [r4, #8]
   26880:	ldr	r3, [r4, #236]	; 0xec
   26884:	cmp	r5, r3
   26888:	bcs	26900 <luaL_where@@Base+0x67fc>
   2688c:	lsl	r2, r5, #3
   26890:	add	r3, ip, r2
   26894:	ldr	r1, [pc, #120]	; 26914 <luaL_where@@Base+0x6810>
   26898:	add	r0, r5, #1
   2689c:	str	r0, [r4, #8]
   268a0:	mov	r0, r5
   268a4:	strh	r1, [r3, #4]
   268a8:	strh	r6, [ip, r2]
   268ac:	strh	r6, [r3, #2]
   268b0:	add	sp, sp, #8
   268b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   268b8:	stm	sp, {r1, r2}
   268bc:	bl	251d4 <luaL_where@@Base+0x50d0>
   268c0:	ldm	sp, {r1, r2}
   268c4:	b	267a0 <luaL_where@@Base+0x669c>
   268c8:	mov	r0, r4
   268cc:	str	r1, [sp]
   268d0:	bl	251d4 <luaL_where@@Base+0x50d0>
   268d4:	ldr	ip, [r4, #16]
   268d8:	ldr	r1, [sp]
   268dc:	b	267dc <luaL_where@@Base+0x66d8>
   268e0:	mov	r0, r4
   268e4:	bl	251d4 <luaL_where@@Base+0x50d0>
   268e8:	ldr	ip, [r4, #16]
   268ec:	b	26818 <luaL_where@@Base+0x6714>
   268f0:	mov	r0, r4
   268f4:	bl	251d4 <luaL_where@@Base+0x50d0>
   268f8:	ldr	ip, [r4, #16]
   268fc:	b	26854 <luaL_where@@Base+0x6750>
   26900:	mov	r0, r4
   26904:	bl	251d4 <luaL_where@@Base+0x50d0>
   26908:	ldr	ip, [r4, #16]
   2690c:	b	2688c <luaL_where@@Base+0x6788>
   26910:	andeq	r5, r0, r3, lsl lr
   26914:	andeq	r1, r0, r3, lsl r0
   26918:	ldrh	r2, [r0, #122]	; 0x7a
   2691c:	ldrh	ip, [r0, #120]	; 0x78
   26920:	ldr	r3, [r0, #100]	; 0x64
   26924:	push	{r4, r5, r6, r7, r8, lr}
   26928:	tst	r3, #131072	; 0x20000
   2692c:	ldrb	r7, [r0, #125]	; 0x7d
   26930:	add	r6, ip, r2, lsl #16
   26934:	beq	26988 <luaL_where@@Base+0x6884>
   26938:	add	r3, r7, #136	; 0x88
   2693c:	cmp	ip, r2
   26940:	add	r3, r0, r3, lsl #1
   26944:	movcc	ip, r2
   26948:	ldrh	r3, [r3, #14]
   2694c:	cmp	r3, ip
   26950:	bls	26988 <luaL_where@@Base+0x6884>
   26954:	ldr	r2, [r0, #16]
   26958:	add	r1, r2, r3, lsl #3
   2695c:	ldr	lr, [r2, r3, lsl #3]
   26960:	cmp	r6, lr
   26964:	bne	2697c <luaL_where@@Base+0x6878>
   26968:	b	269e8 <luaL_where@@Base+0x68e4>
   2696c:	ldr	lr, [r2, r3, lsl #3]
   26970:	add	r1, r2, r3, lsl #3
   26974:	cmp	lr, r6
   26978:	beq	269e8 <luaL_where@@Base+0x68e4>
   2697c:	ldrh	r3, [r1, #6]
   26980:	cmp	r3, ip
   26984:	bhi	2696c <luaL_where@@Base+0x6868>
   26988:	ldr	r4, [r0, #8]
   2698c:	ldr	r3, [r0, #236]	; 0xec
   26990:	mov	r5, r0
   26994:	cmp	r4, r3
   26998:	bcs	269f4 <luaL_where@@Base+0x68f0>
   2699c:	add	r7, r5, r7, lsl #1
   269a0:	add	r7, r7, #284	; 0x11c
   269a4:	ldr	r2, [r5, #16]
   269a8:	add	r3, r4, #1
   269ac:	str	r3, [r5, #8]
   269b0:	ldrh	r1, [r7, #2]
   269b4:	add	r3, r2, r4, lsl #3
   269b8:	strh	r1, [r3, #6]
   269bc:	str	r6, [r2, r4, lsl #3]
   269c0:	strh	r4, [r7, #2]
   269c4:	ldrb	r1, [r5, #125]	; 0x7d
   269c8:	ldrb	r2, [r5, #124]	; 0x7c
   269cc:	strb	r1, [r3, #5]
   269d0:	ldrb	r1, [r5, #114]	; 0x72
   269d4:	add	r0, r4, r2, lsl #24
   269d8:	orr	r1, r1, r2
   269dc:	strb	r1, [r5, #114]	; 0x72
   269e0:	strb	r2, [r3, #4]
   269e4:	pop	{r4, r5, r6, r7, r8, pc}
   269e8:	ldrb	r0, [r1, #4]
   269ec:	add	r0, r3, r0, lsl #24
   269f0:	pop	{r4, r5, r6, r7, r8, pc}
   269f4:	bl	251d4 <luaL_where@@Base+0x50d0>
   269f8:	b	2699c <luaL_where@@Base+0x6898>
   269fc:	push	{r4, lr}
   26a00:	mov	r4, r0
   26a04:	bl	26918 <luaL_where@@Base+0x6814>
   26a08:	add	r2, r4, #320	; 0x140
   26a0c:	ldrh	r2, [r2]
   26a10:	uxth	r3, r0
   26a14:	cmp	r2, r3
   26a18:	popls	{r4, pc}
   26a1c:	add	r3, r4, #440	; 0x1b8
   26a20:	ldrh	r3, [r3, #2]
   26a24:	cmp	r3, #0
   26a28:	bne	26a84 <luaL_where@@Base+0x6980>
   26a2c:	ldr	r3, [r4, #444]	; 0x1bc
   26a30:	cmp	r3, #0
   26a34:	bne	26a84 <luaL_where@@Base+0x6980>
   26a38:	ldr	r3, [r4, #448]	; 0x1c0
   26a3c:	cmp	r3, #0
   26a40:	bne	26a84 <luaL_where@@Base+0x6980>
   26a44:	add	r3, r4, #452	; 0x1c4
   26a48:	ldrh	r3, [r3]
   26a4c:	cmp	r3, #0
   26a50:	bne	26a84 <luaL_where@@Base+0x6980>
   26a54:	add	r3, r4, #456	; 0x1c8
   26a58:	ldrh	r3, [r3, #2]
   26a5c:	cmp	r3, #0
   26a60:	bne	26a84 <luaL_where@@Base+0x6980>
   26a64:	add	r3, r4, #468	; 0x1d4
   26a68:	ldrh	r3, [r3, #2]
   26a6c:	cmp	r3, #0
   26a70:	bne	26a84 <luaL_where@@Base+0x6980>
   26a74:	add	r3, r4, #476	; 0x1dc
   26a78:	ldrh	r3, [r3]
   26a7c:	cmp	r3, #0
   26a80:	popeq	{r4, pc}
   26a84:	mov	r0, r4
   26a88:	pop	{r4, lr}
   26a8c:	b	25258 <luaL_where@@Base+0x5154>
   26a90:	ldrh	r2, [r0, #122]	; 0x7a
   26a94:	push	{r4, lr}
   26a98:	mov	r4, r0
   26a9c:	tst	r2, #2
   26aa0:	bne	26ab4 <luaL_where@@Base+0x69b0>
   26aa4:	ldrh	r2, [r0, #120]	; 0x78
   26aa8:	add	r3, r0, r2, lsl #2
   26aac:	ldr	r0, [r3, #488]	; 0x1e8
   26ab0:	pop	{r4, pc}
   26ab4:	bl	26918 <luaL_where@@Base+0x6814>
   26ab8:	add	r2, r4, #308	; 0x134
   26abc:	ldrh	r2, [r2]
   26ac0:	uxth	r3, r0
   26ac4:	cmp	r2, r3
   26ac8:	popls	{r4, pc}
   26acc:	mov	r0, r4
   26ad0:	pop	{r4, lr}
   26ad4:	b	25258 <luaL_where@@Base+0x5154>
   26ad8:	push	{r4, r5, r6, lr}
   26adc:	mov	r5, r0
   26ae0:	bl	26918 <luaL_where@@Base+0x6814>
   26ae4:	mov	r4, r0
   26ae8:	mov	r0, r5
   26aec:	uxth	r1, r4
   26af0:	bl	1c164 <_start@@Base+0x8db4>
   26af4:	cmp	r0, #0
   26af8:	beq	26b04 <luaL_where@@Base+0x6a00>
   26afc:	mov	r0, r4
   26b00:	pop	{r4, r5, r6, pc}
   26b04:	mov	r0, r5
   26b08:	pop	{r4, r5, r6, lr}
   26b0c:	b	25258 <luaL_where@@Base+0x5154>
   26b10:	add	r3, r0, #404	; 0x194
   26b14:	push	{r4, r5, r6, r7, r8, lr}
   26b18:	mov	r7, r0
   26b1c:	ldrh	r6, [r0, #128]	; 0x80
   26b20:	ldrh	r0, [r3, #2]
   26b24:	ldr	r5, [r7, #16]
   26b28:	cmp	r6, r0
   26b2c:	bcs	26b88 <luaL_where@@Base+0x6a84>
   26b30:	lsl	r3, r0, #3
   26b34:	add	r4, r5, r3
   26b38:	ldrh	r2, [r5, r3]
   26b3c:	cmp	r6, r2
   26b40:	bne	26b68 <luaL_where@@Base+0x6a64>
   26b44:	b	26bac <luaL_where@@Base+0x6aa8>
   26b48:	ldrh	r0, [r4, #6]
   26b4c:	cmp	r6, r0
   26b50:	lsl	r3, r0, #3
   26b54:	bcs	26b88 <luaL_where@@Base+0x6a84>
   26b58:	ldrh	r2, [r5, r3]
   26b5c:	add	r4, r5, r3
   26b60:	cmp	r6, r2
   26b64:	beq	26bac <luaL_where@@Base+0x6aa8>
   26b68:	mov	r1, r6
   26b6c:	mov	r0, r5
   26b70:	bl	1bdfc <_start@@Base+0x8a4c>
   26b74:	cmp	r0, #0
   26b78:	beq	26b48 <luaL_where@@Base+0x6a44>
   26b7c:	mov	r0, r7
   26b80:	pop	{r4, r5, r6, r7, r8, lr}
   26b84:	b	26918 <luaL_where@@Base+0x6814>
   26b88:	add	r5, r5, r6, lsl #3
   26b8c:	mov	r0, r7
   26b90:	ldrb	r3, [r5, #5]
   26b94:	cmp	r3, #81	; 0x51
   26b98:	ldrbeq	r3, [r7, #124]	; 0x7c
   26b9c:	andeq	r3, r3, #127	; 0x7f
   26ba0:	strbeq	r3, [r7, #124]	; 0x7c
   26ba4:	pop	{r4, r5, r6, r7, r8, lr}
   26ba8:	b	26918 <luaL_where@@Base+0x6814>
   26bac:	ldrh	r3, [r4, #2]
   26bb0:	ldrh	r2, [r7, #144]	; 0x90
   26bb4:	cmp	r2, r3
   26bb8:	popeq	{r4, r5, r6, r7, r8, pc}
   26bbc:	mov	r0, r7
   26bc0:	pop	{r4, r5, r6, r7, r8, lr}
   26bc4:	b	26918 <luaL_where@@Base+0x6814>
   26bc8:	ldr	r2, [r0, #240]	; 0xf0
   26bcc:	ldr	r1, [r0, #236]	; 0xec
   26bd0:	push	{r4, r5, r6, r7, r8, lr}
   26bd4:	sub	r5, r1, r2
   26bd8:	ldr	r3, [r0, #8]
   26bdc:	lsr	r8, r5, #1
   26be0:	ldr	r6, [r0, #232]	; 0xe8
   26be4:	mov	r4, r0
   26be8:	add	r0, r3, r8
   26bec:	cmp	r1, r0
   26bf0:	add	r6, r6, r2, lsl #3
   26bf4:	bhi	26c90 <luaL_where@@Base+0x6b8c>
   26bf8:	mov	r2, #0
   26bfc:	mov	r1, r2
   26c00:	lsl	r3, r5, #4
   26c04:	ldr	r0, [r4, #80]	; 0x50
   26c08:	bl	205b0 <luaL_where@@Base+0x4ac>
   26c0c:	ldr	r3, [r4, #240]	; 0xf0
   26c10:	ldr	r2, [r4, #8]
   26c14:	cmp	r5, #255	; 0xff
   26c18:	sub	r2, r2, r3
   26c1c:	mov	r1, r6
   26c20:	lsl	r2, r2, #3
   26c24:	movhi	r8, #128	; 0x80
   26c28:	mov	r7, r0
   26c2c:	lslls	r0, r8, #3
   26c30:	movhi	r0, #1024	; 0x400
   26c34:	add	r0, r7, r0
   26c38:	bl	12cb8 <memcpy@plt>
   26c3c:	ldr	r3, [r4, #80]	; 0x50
   26c40:	lsl	lr, r5, #3
   26c44:	mov	r1, r6
   26c48:	ldr	r0, [r3, #8]
   26c4c:	mov	r2, lr
   26c50:	mov	r3, #0
   26c54:	ldr	ip, [r0, #20]
   26c58:	ldr	r6, [r0, #12]
   26c5c:	sub	ip, ip, lr
   26c60:	str	ip, [r0, #20]
   26c64:	ldr	r0, [r0, #16]
   26c68:	blx	r6
   26c6c:	ldr	r3, [r4, #240]	; 0xf0
   26c70:	sub	r3, r3, r8
   26c74:	add	r5, r3, r5, lsl #1
   26c78:	sub	r7, r7, r3, lsl #3
   26c7c:	str	r5, [r4, #236]	; 0xec
   26c80:	str	r7, [r4, #232]	; 0xe8
   26c84:	str	r7, [r4, #16]
   26c88:	str	r3, [r4, #240]	; 0xf0
   26c8c:	pop	{r4, r5, r6, r7, r8, pc}
   26c90:	lsr	r5, r5, #2
   26c94:	sub	r2, r3, r2
   26c98:	add	r0, r6, r5, lsl #3
   26c9c:	lsl	r2, r2, #3
   26ca0:	mov	r1, r6
   26ca4:	bl	12c94 <memmove@plt>
   26ca8:	ldrd	r2, [r4, #236]	; 0xec
   26cac:	sub	r3, r3, r5
   26cb0:	sub	r5, r2, r5
   26cb4:	sub	r6, r6, r3, lsl #3
   26cb8:	str	r6, [r4, #232]	; 0xe8
   26cbc:	str	r6, [r4, #16]
   26cc0:	str	r3, [r4, #240]	; 0xf0
   26cc4:	str	r5, [r4, #236]	; 0xec
   26cc8:	pop	{r4, r5, r6, r7, r8, pc}
   26ccc:	push	{r4, r5, r6, lr}
   26cd0:	add	r6, r0, #332	; 0x14c
   26cd4:	sub	sp, sp, #8
   26cd8:	ldrh	r4, [r6]
   26cdc:	ldr	r2, [r0, #16]
   26ce0:	cmp	r4, #0
   26ce4:	beq	26d18 <luaL_where@@Base+0x6c14>
   26ce8:	ldr	lr, [r2, r4, lsl #3]
   26cec:	add	ip, r2, r4, lsl #3
   26cf0:	cmp	r1, lr
   26cf4:	bne	26d0c <luaL_where@@Base+0x6c08>
   26cf8:	b	26d50 <luaL_where@@Base+0x6c4c>
   26cfc:	ldr	lr, [r2, r4, lsl #3]
   26d00:	add	ip, r2, r4, lsl #3
   26d04:	cmp	lr, r1
   26d08:	beq	26d50 <luaL_where@@Base+0x6c4c>
   26d0c:	ldrh	r4, [ip, #6]
   26d10:	cmp	r4, #0
   26d14:	bne	26cfc <luaL_where@@Base+0x6bf8>
   26d18:	ldr	r4, [r0, #20]
   26d1c:	ldr	r3, [r0, #240]	; 0xf0
   26d20:	mov	r5, r0
   26d24:	cmp	r4, r3
   26d28:	bls	26d5c <luaL_where@@Base+0x6c58>
   26d2c:	sub	r4, r4, #1
   26d30:	ldr	ip, [pc, #56]	; 26d70 <luaL_where@@Base+0x6c6c>
   26d34:	add	r0, r2, r4, lsl #3
   26d38:	str	r4, [r5, #20]
   26d3c:	str	r1, [r2, r4, lsl #3]
   26d40:	strh	ip, [r0, #4]
   26d44:	ldrh	r2, [r6]
   26d48:	strh	r2, [r0, #6]
   26d4c:	strh	r4, [r6]
   26d50:	add	r0, r4, #318767104	; 0x13000000
   26d54:	add	sp, sp, #8
   26d58:	pop	{r4, r5, r6, pc}
   26d5c:	str	r1, [sp, #4]
   26d60:	bl	26bc8 <luaL_where@@Base+0x6ac4>
   26d64:	ldr	r2, [r5, #16]
   26d68:	ldr	r1, [sp, #4]
   26d6c:	b	26d2c <luaL_where@@Base+0x6c28>
   26d70:	andeq	r1, r0, r3, lsl r7
   26d74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26d78:	mov	r5, r0
   26d7c:	ldrh	r6, [r0, #120]	; 0x78
   26d80:	ldrh	r3, [r0, #122]	; 0x7a
   26d84:	ldr	r4, [r0, #16]
   26d88:	sub	sp, sp, #12
   26d8c:	tst	r3, #1
   26d90:	add	r7, r4, r6, lsl #3
   26d94:	bne	26ed0 <luaL_where@@Base+0x6dcc>
   26d98:	tst	r3, #2
   26d9c:	bne	26ec0 <luaL_where@@Base+0x6dbc>
   26da0:	add	r3, r0, #440	; 0x1b8
   26da4:	ldrh	r9, [r3]
   26da8:	add	r3, r5, #480	; 0x1e0
   26dac:	add	r2, r5, #464	; 0x1d0
   26db0:	ldrh	r3, [r3, #2]
   26db4:	ldrh	r2, [r2]
   26db8:	cmp	r3, r2
   26dbc:	movcc	r3, r2
   26dc0:	cmp	r3, r6
   26dc4:	movcs	r8, r3
   26dc8:	movcc	r8, r6
   26dcc:	cmp	r9, r8
   26dd0:	bls	26e80 <luaL_where@@Base+0x6d7c>
   26dd4:	ldrb	sl, [r5, #124]	; 0x7c
   26dd8:	lsl	r3, r9, #3
   26ddc:	add	fp, r4, r3
   26de0:	mov	r2, sl
   26de4:	ldrb	r1, [fp, #4]
   26de8:	ldrh	r3, [r4, r3]
   26dec:	mov	r0, r5
   26df0:	str	r1, [sp]
   26df4:	mov	r1, r7
   26df8:	bl	1c230 <_start@@Base+0x8e80>
   26dfc:	cmp	r0, #1
   26e00:	beq	26e84 <luaL_where@@Base+0x6d80>
   26e04:	cmp	r0, #2
   26e08:	bne	26e74 <luaL_where@@Base+0x6d70>
   26e0c:	ldrh	r3, [fp, #2]
   26e10:	mov	r0, r3
   26e14:	add	r4, r4, r3, lsl #3
   26e18:	ldrb	r1, [r4, #4]
   26e1c:	eor	r2, r1, sl
   26e20:	tst	r2, #31
   26e24:	beq	26e6c <luaL_where@@Base+0x6d68>
   26e28:	and	r2, sl, #31
   26e2c:	sub	r0, r2, #15
   26e30:	tst	r0, #253	; 0xfd
   26e34:	beq	26f20 <luaL_where@@Base+0x6e1c>
   26e38:	and	sl, sl, #29
   26e3c:	cmp	sl, #16
   26e40:	uxth	r2, r2
   26e44:	ldreq	ip, [pc, #804]	; 27170 <luaL_where@@Base+0x706c>
   26e48:	orrne	ip, r2, #23040	; 0x5a00
   26e4c:	lslne	r0, r2, #5
   26e50:	moveq	r0, #608	; 0x260
   26e54:	andne	r2, r1, #31
   26e58:	orr	r2, r0, r2
   26e5c:	mov	r0, #1
   26e60:	strh	r2, [r5, #122]	; 0x7a
   26e64:	strh	ip, [r5, #124]	; 0x7c
   26e68:	strh	r3, [r5, #120]	; 0x78
   26e6c:	add	sp, sp, #12
   26e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26e74:	ldrh	r9, [fp, #6]
   26e78:	cmp	r9, r8
   26e7c:	bhi	26dd8 <luaL_where@@Base+0x6cd4>
   26e80:	mov	r9, r8
   26e84:	add	r3, r5, #424	; 0x1a8
   26e88:	mov	r8, r9
   26e8c:	ldrh	r0, [r3, #2]
   26e90:	cmp	r9, r0
   26e94:	bcc	26f08 <luaL_where@@Base+0x6e04>
   26e98:	ldrh	r3, [r5, #122]	; 0x7a
   26e9c:	ands	r3, r3, #1
   26ea0:	bne	26ec0 <luaL_where@@Base+0x6dbc>
   26ea4:	add	r2, r5, #320	; 0x140
   26ea8:	ldrh	r2, [r2]
   26eac:	cmp	r2, #0
   26eb0:	beq	26ec0 <luaL_where@@Base+0x6dbc>
   26eb4:	ldrh	r2, [r5, #120]	; 0x78
   26eb8:	cmp	r2, r6
   26ebc:	beq	26f30 <luaL_where@@Base+0x6e2c>
   26ec0:	mov	r0, r5
   26ec4:	add	sp, sp, #12
   26ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26ecc:	b	25258 <luaL_where@@Base+0x5154>
   26ed0:	add	r3, r0, #424	; 0x1a8
   26ed4:	ldrh	r0, [r3, #2]
   26ed8:	cmp	r6, r0
   26edc:	movcc	r8, r6
   26ee0:	bcc	26f08 <luaL_where@@Base+0x6e04>
   26ee4:	b	26ec0 <luaL_where@@Base+0x6dbc>
   26ee8:	ldrb	r3, [r2, #4]
   26eec:	ldrb	r1, [r5, #124]	; 0x7c
   26ef0:	eor	r3, r3, r1
   26ef4:	tst	r3, #31
   26ef8:	beq	26e6c <luaL_where@@Base+0x6d68>
   26efc:	ldrh	r0, [r2, #6]
   26f00:	cmp	r0, r8
   26f04:	bls	26e98 <luaL_where@@Base+0x6d94>
   26f08:	lsl	r3, r0, #3
   26f0c:	add	r2, r4, r3
   26f10:	ldrh	r3, [r4, r3]
   26f14:	cmp	r3, r6
   26f18:	bne	26efc <luaL_where@@Base+0x6df8>
   26f1c:	b	26ee8 <luaL_where@@Base+0x6de4>
   26f20:	orr	r2, r2, #2048	; 0x800
   26f24:	mov	r0, #608	; 0x260
   26f28:	ldr	ip, [pc, #576]	; 27170 <luaL_where@@Base+0x706c>
   26f2c:	b	26e58 <luaL_where@@Base+0x6d54>
   26f30:	ldrb	r2, [r7, #5]
   26f34:	cmp	r2, #41	; 0x29
   26f38:	bne	26ec0 <luaL_where@@Base+0x6dbc>
   26f3c:	ldrh	r0, [r7]
   26f40:	ldrh	ip, [r7, #2]
   26f44:	lsl	r0, r0, #3
   26f48:	add	r2, r4, r0
   26f4c:	tst	ip, #32768	; 0x8000
   26f50:	ldrb	r1, [r2, #5]
   26f54:	bne	26f78 <luaL_where@@Base+0x6e74>
   26f58:	cmp	r1, #41	; 0x29
   26f5c:	ldr	r3, [r4, ip, lsl #3]
   26f60:	bne	26ec0 <luaL_where@@Base+0x6dbc>
   26f64:	ldrh	r1, [r4, r0]
   26f68:	mov	r7, r2
   26f6c:	add	r1, r4, r1, lsl #3
   26f70:	mov	r2, r1
   26f74:	ldrb	r1, [r1, #5]
   26f78:	cmp	r1, #36	; 0x24
   26f7c:	beq	270ac <luaL_where@@Base+0x6fa8>
   26f80:	cmp	r1, #41	; 0x29
   26f84:	bne	26ec0 <luaL_where@@Base+0x6dbc>
   26f88:	ldrh	r1, [r2, #2]
   26f8c:	ldrh	r0, [r2]
   26f90:	cmp	r1, r0
   26f94:	movne	r1, r2
   26f98:	movne	ip, #0
   26f9c:	movne	r2, r7
   26fa0:	beq	270d4 <luaL_where@@Base+0x6fd0>
   26fa4:	ldrb	r0, [r1, #4]
   26fa8:	and	r0, r0, #31
   26fac:	cmp	r0, #19
   26fb0:	bne	26ec0 <luaL_where@@Base+0x6dbc>
   26fb4:	ldrh	r0, [r1, #2]
   26fb8:	tst	r0, #32768	; 0x8000
   26fbc:	bne	26ec0 <luaL_where@@Base+0x6dbc>
   26fc0:	ldr	lr, [r4, r0, lsl #3]
   26fc4:	cmp	r7, r2
   26fc8:	ldrh	r0, [r1]
   26fcc:	add	r1, r3, lr, lsl ip
   26fd0:	beq	27168 <luaL_where@@Base+0x7064>
   26fd4:	ldrb	r3, [r2, #5]
   26fd8:	cmp	r3, #36	; 0x24
   26fdc:	beq	27148 <luaL_where@@Base+0x7044>
   26fe0:	add	r3, r3, #136	; 0x88
   26fe4:	mov	r2, r0
   26fe8:	add	r3, r5, r3, lsl #1
   26fec:	ldrh	r3, [r3, #14]
   26ff0:	cmp	r2, r3
   26ff4:	bcc	27008 <luaL_where@@Base+0x6f04>
   26ff8:	b	26ec0 <luaL_where@@Base+0x6dbc>
   26ffc:	ldrh	r3, [ip, #6]
   27000:	cmp	r2, r3
   27004:	bcs	26ec0 <luaL_where@@Base+0x6dbc>
   27008:	lsl	lr, r3, #3
   2700c:	add	ip, r4, lr
   27010:	ldrh	lr, [r4, lr]
   27014:	cmp	lr, r2
   27018:	bne	26ffc <luaL_where@@Base+0x6ef8>
   2701c:	ldrh	lr, [ip, #2]
   27020:	cmp	lr, r0
   27024:	bne	26ffc <luaL_where@@Base+0x6ef8>
   27028:	ldrh	r2, [r7, #2]
   2702c:	add	r9, r5, #368	; 0x170
   27030:	cmp	r2, r3
   27034:	ldrh	r6, [r9]
   27038:	movls	r0, r2
   2703c:	movls	r2, r3
   27040:	movls	r3, r0
   27044:	cmp	r6, r2
   27048:	bhi	2705c <luaL_where@@Base+0x6f58>
   2704c:	b	26ec0 <luaL_where@@Base+0x6dbc>
   27050:	ldrh	r6, [r0, #6]
   27054:	cmp	r2, r6
   27058:	bcs	26ec0 <luaL_where@@Base+0x6dbc>
   2705c:	lsl	r7, r6, #3
   27060:	add	r0, r4, r7
   27064:	ldrh	ip, [r4, r7]
   27068:	cmp	ip, r2
   2706c:	bne	27050 <luaL_where@@Base+0x6f4c>
   27070:	ldrh	ip, [r0, #2]
   27074:	cmp	ip, r3
   27078:	bne	27050 <luaL_where@@Base+0x6f4c>
   2707c:	cmp	r1, #0
   27080:	bne	270e4 <luaL_where@@Base+0x6fe0>
   27084:	add	r3, r5, #440	; 0x1b8
   27088:	ldrh	r9, [r3]
   2708c:	cmp	r9, r8
   27090:	bls	270a4 <luaL_where@@Base+0x6fa0>
   27094:	add	r9, r4, r9, lsl #3
   27098:	ldrh	r9, [r9, #6]
   2709c:	cmp	r9, r8
   270a0:	bhi	27094 <luaL_where@@Base+0x6f90>
   270a4:	add	r7, r4, r7
   270a8:	b	26da8 <luaL_where@@Base+0x6ca4>
   270ac:	ldrh	r0, [r2, #2]
   270b0:	tst	r0, #32768	; 0x8000
   270b4:	bne	26ec0 <luaL_where@@Base+0x6dbc>
   270b8:	ldrh	r1, [r2]
   270bc:	ldr	ip, [r4, r0, lsl #3]
   270c0:	add	r1, r4, r1, lsl #3
   270c4:	ldrb	r0, [r1, #5]
   270c8:	cmp	r0, #41	; 0x29
   270cc:	beq	26fa4 <luaL_where@@Base+0x6ea0>
   270d0:	b	26ec0 <luaL_where@@Base+0x6dbc>
   270d4:	add	r1, r4, r1, lsl #3
   270d8:	mov	ip, #1
   270dc:	ldrb	r0, [r1, #5]
   270e0:	b	270c8 <luaL_where@@Base+0x6fc4>
   270e4:	mov	r0, r5
   270e8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   270ec:	ldrh	r3, [r9]
   270f0:	uxth	r0, r0
   270f4:	cmp	r0, r6
   270f8:	movls	r2, r0
   270fc:	movls	r0, r6
   27100:	movls	r6, r2
   27104:	cmp	r3, r0
   27108:	ldrhi	r4, [r5, #16]
   2710c:	bhi	27120 <luaL_where@@Base+0x701c>
   27110:	b	26ec0 <luaL_where@@Base+0x6dbc>
   27114:	ldrh	r3, [r2, #6]
   27118:	cmp	r0, r3
   2711c:	bcs	26ec0 <luaL_where@@Base+0x6dbc>
   27120:	lsl	r7, r3, #3
   27124:	add	r2, r4, r7
   27128:	ldrh	r1, [r4, r7]
   2712c:	cmp	r1, r0
   27130:	bne	27114 <luaL_where@@Base+0x7010>
   27134:	ldrh	r1, [r2, #2]
   27138:	cmp	r1, r6
   2713c:	bne	27114 <luaL_where@@Base+0x7010>
   27140:	mov	r6, r3
   27144:	b	27084 <luaL_where@@Base+0x6f80>
   27148:	ldrh	r2, [r2, #2]
   2714c:	add	r3, r5, #356	; 0x164
   27150:	cmp	r0, r2
   27154:	ldrh	r3, [r3, #2]
   27158:	movcs	ip, r2
   2715c:	movcs	r2, r0
   27160:	movcs	r0, ip
   27164:	b	26ff0 <luaL_where@@Base+0x6eec>
   27168:	mov	r3, r0
   2716c:	b	27028 <luaL_where@@Base+0x6f24>
   27170:	andeq	r5, r0, r3, lsl sl
   27174:	ldr	r1, [r0, #144]	; 0x90
   27178:	push	{r4, lr}
   2717c:	cmp	r1, #0
   27180:	mov	r4, r0
   27184:	bne	27194 <luaL_where@@Base+0x7090>
   27188:	ldrh	r3, [r0, #120]	; 0x78
   2718c:	mov	r0, r3
   27190:	pop	{r4, pc}
   27194:	mov	r3, #41	; 0x29
   27198:	rsb	r1, r1, #0
   2719c:	strb	r3, [r0, #125]	; 0x7d
   271a0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   271a4:	mov	r3, #1
   271a8:	strh	r0, [r4, #122]	; 0x7a
   271ac:	mov	r0, r3
   271b0:	pop	{r4, pc}
   271b4:	ldr	r3, [r0, #144]	; 0x90
   271b8:	cmp	r3, #0
   271bc:	ble	271cc <luaL_where@@Base+0x70c8>
   271c0:	sub	r1, r3, #1
   271c4:	tst	r1, r3
   271c8:	beq	271d8 <luaL_where@@Base+0x70d4>
   271cc:	mov	r3, #0
   271d0:	mov	r0, r3
   271d4:	bx	lr
   271d8:	mov	r3, #33	; 0x21
   271dc:	push	{r4, lr}
   271e0:	mov	r4, r0
   271e4:	strb	r3, [r0, #125]	; 0x7d
   271e8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   271ec:	mov	r3, #1
   271f0:	strh	r0, [r4, #122]	; 0x7a
   271f4:	mov	r0, r3
   271f8:	pop	{r4, pc}
   271fc:	ldrb	r3, [r0, #124]	; 0x7c
   27200:	and	r3, r3, #31
   27204:	cmp	r3, #14
   27208:	beq	2723c <luaL_where@@Base+0x7138>
   2720c:	ldrb	r1, [r0, #132]	; 0x84
   27210:	push	{r4, lr}
   27214:	mov	r4, r0
   27218:	ands	r1, r1, #64	; 0x40
   2721c:	movne	r1, #0
   27220:	bne	27234 <luaL_where@@Base+0x7130>
   27224:	ldrh	ip, [r0, #122]	; 0x7a
   27228:	ldrh	r3, [r0, #128]	; 0x80
   2722c:	cmp	ip, r3
   27230:	beq	27248 <luaL_where@@Base+0x7144>
   27234:	mov	r0, r1
   27238:	pop	{r4, pc}
   2723c:	mov	r1, #0
   27240:	mov	r0, r1
   27244:	bx	lr
   27248:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2724c:	ldrh	r3, [r4, #130]	; 0x82
   27250:	mov	r1, #1
   27254:	strh	r3, [r4, #122]	; 0x7a
   27258:	strh	r0, [r4, #120]	; 0x78
   2725c:	b	27234 <luaL_where@@Base+0x7130>
   27260:	ldrb	r2, [r0, #124]	; 0x7c
   27264:	and	r2, r2, #31
   27268:	cmp	r2, #14
   2726c:	beq	272ac <luaL_where@@Base+0x71a8>
   27270:	ldrb	r1, [r0, #148]	; 0x94
   27274:	push	{r4, lr}
   27278:	mov	r4, r0
   2727c:	ands	r1, r1, #64	; 0x40
   27280:	movne	r1, #0
   27284:	bne	272a4 <luaL_where@@Base+0x71a0>
   27288:	ldrh	r3, [r0, #120]	; 0x78
   2728c:	ldrh	r2, [r0, #144]	; 0x90
   27290:	ldrh	ip, [r0, #146]	; 0x92
   27294:	cmp	r3, r2
   27298:	beq	272cc <luaL_where@@Base+0x71c8>
   2729c:	cmp	ip, r3
   272a0:	beq	272b8 <luaL_where@@Base+0x71b4>
   272a4:	mov	r0, r1
   272a8:	pop	{r4, pc}
   272ac:	mov	r1, #0
   272b0:	mov	r0, r1
   272b4:	bx	lr
   272b8:	strh	r2, [r0, #122]	; 0x7a
   272bc:	bl	26ccc <luaL_where@@Base+0x6bc8>
   272c0:	mov	r1, #1
   272c4:	strh	r0, [r4, #120]	; 0x78
   272c8:	b	272a4 <luaL_where@@Base+0x71a0>
   272cc:	strh	ip, [r0, #122]	; 0x7a
   272d0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   272d4:	mov	r1, #1
   272d8:	strh	r0, [r4, #120]	; 0x78
   272dc:	b	272a4 <luaL_where@@Base+0x71a0>
   272e0:	ldrb	r2, [r0, #124]	; 0x7c
   272e4:	ldr	r3, [pc, #128]	; 2736c <luaL_where@@Base+0x7268>
   272e8:	ldr	ip, [r0, #144]	; 0x90
   272ec:	and	r2, r2, #31
   272f0:	lsr	r3, r3, r2
   272f4:	tst	r3, #1
   272f8:	movne	r1, #63	; 0x3f
   272fc:	moveq	r1, #31
   27300:	ands	r1, ip, r1
   27304:	beq	27334 <luaL_where@@Base+0x7230>
   27308:	cmp	r1, #1
   2730c:	beq	2734c <luaL_where@@Base+0x7248>
   27310:	cmp	ip, r1
   27314:	beq	27340 <luaL_where@@Base+0x723c>
   27318:	push	{r4, lr}
   2731c:	mov	r4, r0
   27320:	bl	26ccc <luaL_where@@Base+0x6bc8>
   27324:	mov	r1, #1
   27328:	strh	r0, [r4, #122]	; 0x7a
   2732c:	mov	r0, r1
   27330:	pop	{r4, pc}
   27334:	ldrh	r1, [r0, #120]	; 0x78
   27338:	mov	r0, r1
   2733c:	bx	lr
   27340:	mov	r1, #0
   27344:	mov	r0, r1
   27348:	bx	lr
   2734c:	ldrb	r3, [r0, #125]	; 0x7d
   27350:	cmp	r3, #36	; 0x24
   27354:	bne	27310 <luaL_where@@Base+0x720c>
   27358:	ldrh	r2, [r0, #120]	; 0x78
   2735c:	mov	r3, #41	; 0x29
   27360:	strb	r3, [r0, #125]	; 0x7d
   27364:	strh	r2, [r0, #122]	; 0x7a
   27368:	b	27338 <luaL_where@@Base+0x7234>
   2736c:	rsbeq	r4, r0, r0
   27370:	cmp	r1, #0
   27374:	push	{r4, lr}
   27378:	mov	r4, r0
   2737c:	beq	273a4 <luaL_where@@Base+0x72a0>
   27380:	cmp	r1, #1
   27384:	ldrheq	r3, [r0, #120]	; 0x78
   27388:	beq	2739c <luaL_where@@Base+0x7298>
   2738c:	sub	r2, r1, #1
   27390:	tst	r2, r1
   27394:	movne	r3, #0
   27398:	beq	273b0 <luaL_where@@Base+0x72ac>
   2739c:	mov	r0, r3
   273a0:	pop	{r4, pc}
   273a4:	ldrh	r3, [r0, #122]	; 0x7a
   273a8:	mov	r0, r3
   273ac:	pop	{r4, pc}
   273b0:	mov	r3, #36	; 0x24
   273b4:	strb	r3, [r0, #125]	; 0x7d
   273b8:	clz	r1, r1
   273bc:	eor	r1, r1, #31
   273c0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   273c4:	mov	r3, #1
   273c8:	strh	r0, [r4, #122]	; 0x7a
   273cc:	mov	r0, r3
   273d0:	pop	{r4, pc}
   273d4:	ldrd	r2, [r0, #152]	; 0x98
   273d8:	push	{r4, r5}
   273dc:	mov	r5, #0
   273e0:	mvn	r4, #-2147483648	; 0x80000000
   273e4:	cmp	r3, r5
   273e8:	cmpeq	r2, r4
   273ec:	bls	273fc <luaL_where@@Base+0x72f8>
   273f0:	mov	r0, #0
   273f4:	pop	{r4, r5}
   273f8:	bx	lr
   273fc:	mov	r1, r2
   27400:	pop	{r4, r5}
   27404:	b	27370 <luaL_where@@Base+0x726c>
   27408:	ldr	r1, [r0, #144]	; 0x90
   2740c:	cmp	r1, #0
   27410:	blt	27418 <luaL_where@@Base+0x7314>
   27414:	b	27370 <luaL_where@@Base+0x726c>
   27418:	mov	r0, #0
   2741c:	bx	lr
   27420:	push	{r4, r5, r6, lr}
   27424:	ldrh	r6, [r0, #130]	; 0x82
   27428:	ldr	r5, [r0, #16]
   2742c:	add	r3, r5, r6, lsl #3
   27430:	ldrb	r3, [r3, #5]
   27434:	cmp	r3, #23
   27438:	beq	27448 <luaL_where@@Base+0x7344>
   2743c:	mov	r3, #0
   27440:	mov	r0, r3
   27444:	pop	{r4, r5, r6, pc}
   27448:	mov	r4, r0
   2744c:	ldrb	r2, [r0, #125]	; 0x7d
   27450:	ldr	r1, [r0, #144]	; 0x90
   27454:	ldr	r0, [r5, r6, lsl #3]
   27458:	bl	1abbc <_start@@Base+0x780c>
   2745c:	ldr	r3, [r5, r6, lsl #3]
   27460:	cmp	r3, r0
   27464:	ldrheq	r3, [r4, #120]	; 0x78
   27468:	beq	27440 <luaL_where@@Base+0x733c>
   2746c:	ldrb	r3, [r4, #132]	; 0x84
   27470:	tst	r3, #64	; 0x40
   27474:	bne	2743c <luaL_where@@Base+0x7338>
   27478:	ldrh	r3, [r4, #128]	; 0x80
   2747c:	mov	r1, r0
   27480:	mov	r0, r4
   27484:	strh	r3, [r4, #120]	; 0x78
   27488:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2748c:	mov	r3, #1
   27490:	strh	r0, [r4, #122]	; 0x7a
   27494:	b	27440 <luaL_where@@Base+0x733c>
   27498:	ldr	r3, [pc, #624]	; 27710 <luaL_where@@Base+0x760c>
   2749c:	ldr	r2, [r0, #100]	; 0x64
   274a0:	ldr	r1, [pc, #620]	; 27714 <luaL_where@@Base+0x7610>
   274a4:	and	r3, r3, r2
   274a8:	cmp	r3, r1
   274ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   274b0:	mov	sl, r0
   274b4:	sub	sp, sp, #8
   274b8:	ldr	r5, [pc, #600]	; 27718 <luaL_where@@Base+0x7614>
   274bc:	ldrb	r4, [r0, #125]	; 0x7d
   274c0:	bne	2764c <luaL_where@@Base+0x7548>
   274c4:	ldr	r7, [pc, #592]	; 2771c <luaL_where@@Base+0x7618>
   274c8:	ldr	r8, [pc, #592]	; 27720 <luaL_where@@Base+0x761c>
   274cc:	ldrh	r0, [sl, #120]	; 0x78
   274d0:	ldr	r1, [sl, #20]
   274d4:	lsl	r4, r4, #17
   274d8:	cmp	r0, r1
   274dc:	bcc	2750c <luaL_where@@Base+0x7408>
   274e0:	ldr	r2, [sl, #16]
   274e4:	lsl	r3, r0, #3
   274e8:	add	ip, r2, r3
   274ec:	add	r2, r2, r3
   274f0:	ldrb	lr, [ip, #5]
   274f4:	ldrd	r2, [r2]
   274f8:	ldr	r6, [pc, #548]	; 27724 <luaL_where@@Base+0x7620>
   274fc:	cmp	r0, r6
   27500:	strd	r2, [sl, #128]	; 0x80
   27504:	add	r4, r4, lr, lsl #10
   27508:	bls	27620 <luaL_where@@Base+0x751c>
   2750c:	ldrh	r3, [sl, #122]	; 0x7a
   27510:	cmp	r1, r3
   27514:	bhi	27604 <luaL_where@@Base+0x7500>
   27518:	ldr	r1, [sl, #16]
   2751c:	lsl	r2, r3, #3
   27520:	add	ip, r1, r2
   27524:	ldr	lr, [pc, #504]	; 27724 <luaL_where@@Base+0x7620>
   27528:	ldrd	r0, [r1, r2]
   2752c:	ldrb	r2, [ip, #5]
   27530:	cmp	r3, lr
   27534:	strd	r0, [sl, #144]	; 0x90
   27538:	add	r4, r2, r4
   2753c:	bls	27614 <luaL_where@@Base+0x7510>
   27540:	ldr	r6, [pc, #480]	; 27728 <luaL_where@@Base+0x7624>
   27544:	mov	r9, #0
   27548:	b	27584 <luaL_where@@Base+0x7480>
   2754c:	lsr	r2, r2, #24
   27550:	mov	r0, sl
   27554:	add	r2, r8, r2, lsl #2
   27558:	ldr	r3, [r2, #-2884]	; 0xfffff4bc
   2755c:	blx	r3
   27560:	uxth	r0, r0
   27564:	cmp	r0, #0
   27568:	bne	2762c <luaL_where@@Base+0x7528>
   2756c:	ldr	r3, [pc, #440]	; 2772c <luaL_where@@Base+0x7628>
   27570:	cmp	r9, r3
   27574:	beq	275f4 <luaL_where@@Base+0x74f0>
   27578:	orr	r9, r9, r9, lsr #10
   2757c:	eor	r9, r9, #1044480	; 0xff000
   27580:	eor	r9, r9, #3072	; 0xc00
   27584:	and	r1, r9, r6
   27588:	orr	r1, r1, r4
   2758c:	rsb	r0, r1, r1, ror #2
   27590:	ror	r0, r0, #7
   27594:	umull	r2, r3, r0, r7
   27598:	strd	r2, [sp]
   2759c:	sub	r2, r0, r3
   275a0:	ldr	r3, [sp, #4]
   275a4:	add	r3, r3, r2, lsr #1
   275a8:	lsr	r3, r3, #9
   275ac:	add	r2, r3, r3, lsl #2
   275b0:	rsb	r2, r3, r2, lsl #4
   275b4:	rsb	r2, r2, r2, lsl #2
   275b8:	add	r3, r3, r2, lsl #2
   275bc:	sub	r3, r0, r3
   275c0:	add	r2, r5, r3, lsl #2
   275c4:	ldr	r2, [r2, #1500]	; 0x5dc
   275c8:	bic	r0, r2, #-16777216	; 0xff000000
   275cc:	cmp	r0, r1
   275d0:	beq	2754c <luaL_where@@Base+0x7448>
   275d4:	add	r3, r5, r3, lsl #2
   275d8:	ldr	r2, [r3, #1504]	; 0x5e0
   275dc:	bic	r3, r2, #-16777216	; 0xff000000
   275e0:	cmp	r3, r1
   275e4:	beq	2754c <luaL_where@@Base+0x7448>
   275e8:	ldr	r3, [pc, #316]	; 2772c <luaL_where@@Base+0x7628>
   275ec:	cmp	r9, r3
   275f0:	bne	27578 <luaL_where@@Base+0x7474>
   275f4:	mov	r0, sl
   275f8:	add	sp, sp, #8
   275fc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   27600:	b	26918 <luaL_where@@Base+0x6814>
   27604:	lsl	r3, r3, #22
   27608:	lsr	r3, r3, #22
   2760c:	add	r4, r3, r4
   27610:	b	27540 <luaL_where@@Base+0x743c>
   27614:	ldrd	r2, [ip, #8]
   27618:	strd	r2, [sl, #152]	; 0x98
   2761c:	b	27540 <luaL_where@@Base+0x743c>
   27620:	ldrd	r2, [ip, #8]
   27624:	strd	r2, [sl, #136]	; 0x88
   27628:	b	2750c <luaL_where@@Base+0x7408>
   2762c:	cmp	r0, #4
   27630:	bls	276c8 <luaL_where@@Base+0x75c4>
   27634:	ldr	r3, [sl, #16]
   27638:	add	r3, r3, r0, lsl #3
   2763c:	ldrb	r3, [r3, #4]
   27640:	add	r0, r0, r3, lsl #24
   27644:	add	sp, sp, #8
   27648:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2764c:	tst	r2, #65536	; 0x10000
   27650:	bne	27664 <luaL_where@@Base+0x7560>
   27654:	add	r3, r5, r4
   27658:	ldrb	r3, [r3, #36]	; 0x24
   2765c:	tst	r3, #96	; 0x60
   27660:	beq	275f8 <luaL_where@@Base+0x74f4>
   27664:	and	r3, r2, #720896	; 0xb0000
   27668:	cmp	r3, #720896	; 0xb0000
   2766c:	beq	27698 <luaL_where@@Base+0x7594>
   27670:	add	r3, r5, r4
   27674:	cmp	r4, #71	; 0x47
   27678:	ldrb	r3, [r3, #36]	; 0x24
   2767c:	and	r1, r3, #96	; 0x60
   27680:	sub	r3, r1, #64	; 0x40
   27684:	clz	r3, r3
   27688:	lsr	r3, r3, #5
   2768c:	moveq	r3, #0
   27690:	cmp	r3, #0
   27694:	bne	276b8 <luaL_where@@Base+0x75b4>
   27698:	and	r2, r2, #1114112	; 0x110000
   2769c:	cmp	r2, #1114112	; 0x110000
   276a0:	beq	274c4 <luaL_where@@Base+0x73c0>
   276a4:	add	r3, r5, r4
   276a8:	ldrb	r3, [r3, #36]	; 0x24
   276ac:	and	r3, r3, #96	; 0x60
   276b0:	cmp	r3, #96	; 0x60
   276b4:	bne	274c4 <luaL_where@@Base+0x73c0>
   276b8:	mov	r0, sl
   276bc:	add	sp, sp, #8
   276c0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   276c4:	b	25258 <luaL_where@@Base+0x5154>
   276c8:	cmp	r0, #1
   276cc:	ldrbeq	r4, [sl, #125]	; 0x7d
   276d0:	beq	274cc <luaL_where@@Base+0x73c8>
   276d4:	cmp	r0, #2
   276d8:	beq	276fc <luaL_where@@Base+0x75f8>
   276dc:	cmp	r0, #3
   276e0:	ldrne	r0, [pc, #72]	; 27730 <luaL_where@@Base+0x762c>
   276e4:	bne	27644 <luaL_where@@Base+0x7540>
   276e8:	add	r1, sl, #2336	; 0x920
   276ec:	add	r1, r1, #12
   276f0:	ldr	r0, [sl, #80]	; 0x50
   276f4:	mov	r2, #24
   276f8:	bl	210d0 <luaL_where@@Base+0xfcc>
   276fc:	ldr	r1, [sl, #120]	; 0x78
   27700:	mov	r0, sl
   27704:	add	sp, sp, #8
   27708:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2770c:	b	26ccc <luaL_where@@Base+0x6bc8>
   27710:	svceq	0x00ff0000
   27714:	mvnseq	r0, #0
   27718:			; <UNDEFINED> instruction: 0x0006ecb8
   2771c:	ldrtne	r5, [fp], #-2241	; 0xfffff73f
   27720:			; <UNDEFINED> instruction: 0x00070cb0
   27724:	strdeq	r7, [r0], -ip
   27728:	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
   2772c:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   27730:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   27734:	ldrb	r3, [r0, #132]	; 0x84
   27738:	tst	r3, #64	; 0x40
   2773c:	beq	2774c <luaL_where@@Base+0x7648>
   27740:	mov	r3, #0
   27744:	mov	r0, r3
   27748:	bx	lr
   2774c:	ldrh	r3, [r0, #128]	; 0x80
   27750:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27754:	mov	r4, r0
   27758:	ldr	r6, [pc, #80]	; 277b0 <luaL_where@@Base+0x76ac>
   2775c:	strh	r3, [r0, #120]	; 0x78
   27760:	ldrb	r5, [r0, #124]	; 0x7c
   27764:	strh	r6, [r0, #124]	; 0x7c
   27768:	ldrh	sl, [r0, #130]	; 0x82
   2776c:	ldrh	r9, [r0, #122]	; 0x7a
   27770:	ldrb	r8, [r0, #133]	; 0x85
   27774:	bl	27498 <luaL_where@@Base+0x7394>
   27778:	strh	r6, [r4, #124]	; 0x7c
   2777c:	strh	sl, [r4, #120]	; 0x78
   27780:	strh	r9, [r4, #122]	; 0x7a
   27784:	and	r5, r5, #31
   27788:	orr	r5, r5, r8, lsl #8
   2778c:	mov	r7, r0
   27790:	mov	r0, r4
   27794:	bl	27498 <luaL_where@@Base+0x7394>
   27798:	mov	r3, #1
   2779c:	strh	r5, [r4, #124]	; 0x7c
   277a0:	strh	r7, [r4, #120]	; 0x78
   277a4:	strh	r0, [r4, #122]	; 0x7a
   277a8:	mov	r0, r3
   277ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   277b0:	andeq	r5, r0, r3, lsl sl
   277b4:	ldrb	r3, [r0, #132]	; 0x84
   277b8:	tst	r3, #64	; 0x40
   277bc:	bne	277f4 <luaL_where@@Base+0x76f0>
   277c0:	ldrsh	r2, [r0, #122]	; 0x7a
   277c4:	ldrh	r3, [r0, #128]	; 0x80
   277c8:	cmp	r2, #0
   277cc:	blt	277dc <luaL_where@@Base+0x76d8>
   277d0:	ldr	r2, [r0, #144]	; 0x90
   277d4:	cmp	r2, #0
   277d8:	beq	277f8 <luaL_where@@Base+0x76f4>
   277dc:	ldr	r1, [r0, #16]
   277e0:	lsl	r3, r3, #3
   277e4:	add	r2, r1, r3
   277e8:	ldrb	ip, [r2, #5]
   277ec:	cmp	ip, #64	; 0x40
   277f0:	beq	27800 <luaL_where@@Base+0x76fc>
   277f4:	mov	r3, #0
   277f8:	mov	r0, r3
   277fc:	bx	lr
   27800:	ldrb	ip, [r2, #4]
   27804:	tst	ip, #64	; 0x40
   27808:	bne	277f4 <luaL_where@@Base+0x76f0>
   2780c:	ldrh	ip, [r2, #2]
   27810:	ldr	r2, [pc, #48]	; 27848 <luaL_where@@Base+0x7744>
   27814:	push	{r4, r5, r6, lr}
   27818:	mov	r4, r0
   2781c:	ldrh	r5, [r1, r3]
   27820:	strh	ip, [r0, #120]	; 0x78
   27824:	strh	r2, [r0, #124]	; 0x7c
   27828:	bl	27498 <luaL_where@@Base+0x7394>
   2782c:	ldr	r3, [pc, #24]	; 2784c <luaL_where@@Base+0x7748>
   27830:	strh	r5, [r4, #120]	; 0x78
   27834:	strh	r3, [r4, #124]	; 0x7c
   27838:	mov	r3, #1
   2783c:	strh	r0, [r4, #122]	; 0x7a
   27840:	mov	r0, r3
   27844:	pop	{r4, r5, r6, pc}
   27848:	andeq	r2, r0, r3, lsl r9
   2784c:	andeq	r4, r0, r5
   27850:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27854:	mov	sl, r1
   27858:	mov	r6, r0
   2785c:	ldr	r1, [sp, #32]
   27860:	mov	r0, r3
   27864:	mov	r4, r2
   27868:	bl	17394 <_start@@Base+0x3fe4>
   2786c:	uxth	r8, sl
   27870:	uxth	r7, r4
   27874:	orr	r3, r8, r7
   27878:	tst	r3, #32768	; 0x8000
   2787c:	clz	r5, r0
   27880:	lsr	r5, r5, #5
   27884:	bne	27890 <luaL_where@@Base+0x778c>
   27888:	mov	r0, r5
   2788c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27890:	lsr	sl, sl, #24
   27894:	and	sl, sl, #31
   27898:	sub	r3, sl, #15
   2789c:	lsr	r4, r4, #24
   278a0:	and	r4, r4, #31
   278a4:	cmp	r3, #4
   278a8:	mov	r9, r0
   278ac:	sub	r3, r4, #15
   278b0:	bhi	27928 <luaL_where@@Base+0x7824>
   278b4:	cmp	r3, #4
   278b8:	bls	2797c <luaL_where@@Base+0x7878>
   278bc:	mov	sl, #19
   278c0:	cmp	r4, sl
   278c4:	orreq	r4, r4, #128	; 0x80
   278c8:	beq	278fc <luaL_where@@Base+0x77f8>
   278cc:	cmp	sl, #19
   278d0:	cmpeq	r4, #14
   278d4:	bne	27984 <luaL_where@@Base+0x7880>
   278d8:	ldr	r2, [pc, #180]	; 27994 <luaL_where@@Base+0x7890>
   278dc:	ldr	r3, [pc, #180]	; 27998 <luaL_where@@Base+0x7894>
   278e0:	strh	r8, [r6, #120]	; 0x78
   278e4:	strh	r2, [r6, #124]	; 0x7c
   278e8:	strh	r3, [r6, #122]	; 0x7a
   278ec:	mov	r0, r6
   278f0:	bl	27498 <luaL_where@@Base+0x7394>
   278f4:	mov	r4, #142	; 0x8e
   278f8:	uxth	r8, r0
   278fc:	cmp	r9, #0
   27900:	moveq	r3, #2304	; 0x900
   27904:	movne	r3, #2048	; 0x800
   27908:	orr	r4, r3, r4
   2790c:	strh	r8, [r6, #120]	; 0x78
   27910:	strh	r7, [r6, #122]	; 0x7a
   27914:	strh	r4, [r6, #124]	; 0x7c
   27918:	mov	r0, r6
   2791c:	bl	27498 <luaL_where@@Base+0x7394>
   27920:	mov	r0, r5
   27924:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27928:	cmp	r3, #4
   2792c:	bhi	278c0 <luaL_where@@Base+0x77bc>
   27930:	cmp	sl, #19
   27934:	movne	r4, #1
   27938:	beq	2797c <luaL_where@@Base+0x7878>
   2793c:	cmp	sl, #14
   27940:	movne	r4, #0
   27944:	andeq	r4, r4, #1
   27948:	cmp	r4, #0
   2794c:	moveq	r5, #2
   27950:	beq	27888 <luaL_where@@Base+0x7784>
   27954:	ldr	r2, [pc, #56]	; 27994 <luaL_where@@Base+0x7890>
   27958:	ldr	r3, [pc, #56]	; 27998 <luaL_where@@Base+0x7894>
   2795c:	strh	r7, [r6, #120]	; 0x78
   27960:	strh	r2, [r6, #124]	; 0x7c
   27964:	strh	r3, [r6, #122]	; 0x7a
   27968:	mov	r0, r6
   2796c:	bl	27498 <luaL_where@@Base+0x7394>
   27970:	mov	r4, #142	; 0x8e
   27974:	uxth	r7, r0
   27978:	b	278fc <luaL_where@@Base+0x77f8>
   2797c:	mov	r4, #147	; 0x93
   27980:	b	278fc <luaL_where@@Base+0x77f8>
   27984:	sub	r4, r4, #19
   27988:	clz	r4, r4
   2798c:	lsr	r4, r4, #5
   27990:	b	2793c <luaL_where@@Base+0x7838>
   27994:	andeq	r5, r0, lr, lsl #20
   27998:	ldrdeq	r0, [r0], -r3
   2799c:	ldr	r2, [r0, #96]	; 0x60
   279a0:	ldr	ip, [r2]
   279a4:	ldr	r2, [r2, #4]
   279a8:	cmp	ip, #0
   279ac:	cmpne	r2, #0
   279b0:	bxeq	lr
   279b4:	ldr	r3, [r1]
   279b8:	push	{r4, lr}
   279bc:	sub	sp, sp, #8
   279c0:	add	lr, r3, #8
   279c4:	mov	r1, ip
   279c8:	str	lr, [sp]
   279cc:	mov	r4, r0
   279d0:	bl	27850 <luaL_where@@Base+0x774c>
   279d4:	ldr	r2, [r4, #96]	; 0x60
   279d8:	ldr	r3, [pc, #24]	; 279f8 <luaL_where@@Base+0x78f4>
   279dc:	ldr	r1, [pc, #24]	; 279fc <luaL_where@@Base+0x78f8>
   279e0:	cmp	r0, #0
   279e4:	movne	r0, r3
   279e8:	moveq	r0, r1
   279ec:	str	r0, [r2]
   279f0:	add	sp, sp, #8
   279f4:	pop	{r4, pc}
   279f8:	strdeq	r7, [r0, -lr]
   279fc:	andeq	r7, r0, #1012	; 0x3f4
   27a00:	push	{r1, r2, r3}
   27a04:	push	{r4, r5, r6, r7, r8, r9, lr}
   27a08:	sub	sp, sp, #8
   27a0c:	ldr	r3, [pc, #180]	; 27ac8 <luaL_where@@Base+0x79c4>
   27a10:	ldr	r8, [sp, #36]	; 0x24
   27a14:	add	r2, sp, #40	; 0x28
   27a18:	mov	r4, r0
   27a1c:	add	r3, r3, r8, lsl #3
   27a20:	str	r2, [sp, #4]
   27a24:	ldr	r7, [r3, #-2268]	; 0xfffff724
   27a28:	tst	r7, #256	; 0x100
   27a2c:	uxtb	r6, r7
   27a30:	subne	r6, r6, #1
   27a34:	cmp	r6, #0
   27a38:	ldreq	r3, [pc, #140]	; 27acc <luaL_where@@Base+0x79c8>
   27a3c:	beq	27a90 <luaL_where@@Base+0x798c>
   27a40:	ldr	r3, [sp, #4]
   27a44:	cmp	r6, #1
   27a48:	add	r5, r3, #4
   27a4c:	sub	r6, r6, #1
   27a50:	str	r5, [sp, #4]
   27a54:	ldr	r3, [r3]
   27a58:	bls	27a8c <luaL_where@@Base+0x7988>
   27a5c:	mov	r9, #25344	; 0x6300
   27a60:	add	r5, r5, #4
   27a64:	ldrh	r2, [r5, #-4]
   27a68:	mov	r0, r4
   27a6c:	strh	r3, [r4, #120]	; 0x78
   27a70:	strh	r9, [r4, #124]	; 0x7c
   27a74:	strh	r2, [r4, #122]	; 0x7a
   27a78:	str	r5, [sp, #4]
   27a7c:	bl	27498 <luaL_where@@Base+0x7394>
   27a80:	subs	r6, r6, #1
   27a84:	mov	r3, r0
   27a88:	bne	27a60 <luaL_where@@Base+0x795c>
   27a8c:	uxth	r3, r3
   27a90:	lsr	r2, r7, #24
   27a94:	cmp	r2, #97	; 0x61
   27a98:	moveq	r2, #1
   27a9c:	lsr	r7, r7, #16
   27aa0:	strbeq	r2, [r4, #113]	; 0x71
   27aa4:	strh	r7, [r4, #124]	; 0x7c
   27aa8:	strh	r3, [r4, #120]	; 0x78
   27aac:	strh	r8, [r4, #122]	; 0x7a
   27ab0:	mov	r0, r4
   27ab4:	bl	27498 <luaL_where@@Base+0x7394>
   27ab8:	add	sp, sp, #8
   27abc:	pop	{r4, r5, r6, r7, r8, r9, lr}
   27ac0:	add	sp, sp, #12
   27ac4:	bx	lr
   27ac8:			; <UNDEFINED> instruction: 0x00070cb0
   27acc:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   27ad0:	ldr	r2, [r0, #96]	; 0x60
   27ad4:	ldr	r2, [r2]
   27ad8:	and	ip, r2, #520093696	; 0x1f000000
   27adc:	cmp	ip, #184549376	; 0xb000000
   27ae0:	bxne	lr
   27ae4:	mov	r3, #0
   27ae8:	push	{r4, lr}
   27aec:	mov	r4, r0
   27af0:	str	r3, [r1, #4]
   27af4:	mov	r1, #28
   27af8:	bl	27a00 <luaL_where@@Base+0x78fc>
   27afc:	mov	r3, #1
   27b00:	strb	r3, [r4, #113]	; 0x71
   27b04:	pop	{r4, pc}
   27b08:	push	{r4, lr}
   27b0c:	ldr	r4, [r0, #96]	; 0x60
   27b10:	ldr	r2, [r4]
   27b14:	cmp	r2, #0
   27b18:	bne	27b2c <luaL_where@@Base+0x7a28>
   27b1c:	mov	r1, #96	; 0x60
   27b20:	bl	27a00 <luaL_where@@Base+0x78fc>
   27b24:	str	r0, [r4]
   27b28:	pop	{r4, pc}
   27b2c:	add	r1, r0, #2336	; 0x920
   27b30:	add	r1, r1, #12
   27b34:	ldr	r0, [r0, #80]	; 0x50
   27b38:	mov	r2, #23
   27b3c:	bl	210d0 <luaL_where@@Base+0xfcc>
   27b40:	ldr	ip, [r0, #100]	; 0x64
   27b44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27b48:	and	ip, ip, #12582912	; 0xc00000
   27b4c:	cmp	ip, #12582912	; 0xc00000
   27b50:	uxth	r4, r1
   27b54:	uxth	r5, r2
   27b58:	bne	27b90 <luaL_where@@Base+0x7a8c>
   27b5c:	ldr	r6, [r0, #16]
   27b60:	lsl	ip, r5, #3
   27b64:	add	lr, r6, ip
   27b68:	mov	r2, r5
   27b6c:	ldrb	r1, [lr, #5]
   27b70:	cmp	r1, #41	; 0x29
   27b74:	beq	27c80 <luaL_where@@Base+0x7b7c>
   27b78:	mov	r1, #0
   27b7c:	mov	ip, r1
   27b80:	add	sl, r0, #2288	; 0x8f0
   27b84:	ldrh	r6, [sl]
   27b88:	cmp	r6, r2
   27b8c:	beq	27ba8 <luaL_where@@Base+0x7aa4>
   27b90:	ldr	r3, [pc, #292]	; 27cbc <luaL_where@@Base+0x7bb8>
   27b94:	strh	r4, [r0, #120]	; 0x78
   27b98:	strh	r5, [r0, #122]	; 0x7a
   27b9c:	strh	r3, [r0, #124]	; 0x7c
   27ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   27ba4:	b	27498 <luaL_where@@Base+0x7394>
   27ba8:	ldr	r2, [r0, #108]	; 0x6c
   27bac:	ldrh	r6, [lr]
   27bb0:	ldr	lr, [r0, #80]	; 0x50
   27bb4:	rsb	r2, r2, r2, lsl #29
   27bb8:	add	r2, r2, #1
   27bbc:	add	r2, r2, r6
   27bc0:	ldr	lr, [lr, #16]
   27bc4:	asr	r9, ip, #31
   27bc8:	add	r6, lr, r2, lsl #3
   27bcc:	ldr	r7, [r6, #4]
   27bd0:	cmn	r7, #14
   27bd4:	mov	r7, r9
   27bd8:	vldrne	d7, [r6]
   27bdc:	ldreq	r2, [lr, r2, lsl #3]
   27be0:	mov	r6, ip
   27be4:	vcvtne.s32.f64	s15, d7
   27be8:	vmovne	r2, s15
   27bec:	adds	r8, ip, r2
   27bf0:	adc	r9, r9, r2, asr #31
   27bf4:	mov	r2, r3
   27bf8:	mov	r3, #0
   27bfc:	cmp	r9, r3
   27c00:	cmpeq	r8, r2
   27c04:	bcs	27b90 <luaL_where@@Base+0x7a8c>
   27c08:	cmp	ip, #0
   27c0c:	mov	r8, r0
   27c10:	ldrh	r0, [sl, #4]
   27c14:	bne	27c9c <luaL_where@@Base+0x7b98>
   27c18:	ldr	r3, [pc, #160]	; 27cc0 <luaL_where@@Base+0x7bbc>
   27c1c:	strh	r0, [r8, #122]	; 0x7a
   27c20:	strh	r3, [r8, #124]	; 0x7c
   27c24:	strh	r4, [r8, #120]	; 0x78
   27c28:	mov	r0, r8
   27c2c:	bl	27498 <luaL_where@@Base+0x7394>
   27c30:	ldrb	r3, [r8, #2297]	; 0x8f9
   27c34:	cmp	r3, #0
   27c38:	beq	27c64 <luaL_where@@Base+0x7b60>
   27c3c:	ldrh	r3, [sl, #2]
   27c40:	cmp	r3, #0
   27c44:	beq	27c64 <luaL_where@@Base+0x7b60>
   27c48:	ldr	r2, [r8, #16]
   27c4c:	ldr	r3, [r2, r3, lsl #3]
   27c50:	adds	r6, r6, r3
   27c54:	adc	r7, r7, r3, asr #31
   27c58:	cmp	r6, #0
   27c5c:	sbcs	r3, r7, #0
   27c60:	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
   27c64:	ldr	r3, [pc, #84]	; 27cc0 <luaL_where@@Base+0x7bbc>
   27c68:	strh	r4, [r8, #120]	; 0x78
   27c6c:	strh	r5, [r8, #122]	; 0x7a
   27c70:	strh	r3, [r8, #124]	; 0x7c
   27c74:	mov	r0, r8
   27c78:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   27c7c:	b	27498 <luaL_where@@Base+0x7394>
   27c80:	ldrh	r1, [lr, #2]
   27c84:	tst	r1, #32768	; 0x8000
   27c88:	bne	27b78 <luaL_where@@Base+0x7a74>
   27c8c:	ldrh	r2, [r6, ip]
   27c90:	ldr	ip, [r6, r1, lsl #3]
   27c94:	add	lr, r6, r2, lsl #3
   27c98:	b	27b80 <luaL_where@@Base+0x7a7c>
   27c9c:	ldr	r3, [pc, #32]	; 27cc4 <luaL_where@@Base+0x7bc0>
   27ca0:	strh	r0, [r8, #120]	; 0x78
   27ca4:	strh	r1, [r8, #122]	; 0x7a
   27ca8:	strh	r3, [r8, #124]	; 0x7c
   27cac:	mov	r0, r8
   27cb0:	bl	27498 <luaL_where@@Base+0x7394>
   27cb4:	uxth	r0, r0
   27cb8:	b	27c18 <luaL_where@@Base+0x7b14>
   27cbc:	muleq	r0, r3, sl
   27cc0:	andeq	r0, r0, r5, lsl #21
   27cc4:	andeq	r2, r0, r3, lsl r9
   27cc8:	and	ip, r1, #520093696	; 0x1f000000
   27ccc:	cmp	ip, #234881024	; 0xe000000
   27cd0:	beq	27d20 <luaL_where@@Base+0x7c1c>
   27cd4:	lsr	r3, r1, #24
   27cd8:	and	r3, r3, #31
   27cdc:	sub	r3, r3, #15
   27ce0:	cmp	r3, #4
   27ce4:	bls	27d08 <luaL_where@@Base+0x7c04>
   27ce8:	cmp	ip, #67108864	; 0x4000000
   27cec:	bne	27d28 <luaL_where@@Base+0x7c24>
   27cf0:	ldr	ip, [pc, #56]	; 27d30 <luaL_where@@Base+0x7c2c>
   27cf4:	mov	r3, #0
   27cf8:	strh	r1, [r0, #120]	; 0x78
   27cfc:	strh	ip, [r0, #124]	; 0x7c
   27d00:	strh	r3, [r0, #122]	; 0x7a
   27d04:	b	27498 <luaL_where@@Base+0x7394>
   27d08:	ldr	ip, [pc, #36]	; 27d34 <luaL_where@@Base+0x7c30>
   27d0c:	ldr	r3, [pc, #36]	; 27d38 <luaL_where@@Base+0x7c34>
   27d10:	strh	r1, [r0, #120]	; 0x78
   27d14:	strh	ip, [r0, #124]	; 0x7c
   27d18:	strh	r3, [r0, #122]	; 0x7a
   27d1c:	b	27498 <luaL_where@@Base+0x7394>
   27d20:	mov	r0, r1
   27d24:	bx	lr
   27d28:	push	{r4, lr}
   27d2c:	bl	130b0 <pclose@plt+0x14>
   27d30:	andeq	r5, r0, lr, lsl #27
   27d34:	andeq	r5, r0, lr, lsl #20
   27d38:	ldrdeq	r0, [r0], -r3
   27d3c:	ldr	r3, [r0, #96]	; 0x60
   27d40:	push	{r4, r5, r6, lr}
   27d44:	mov	r4, r0
   27d48:	ldr	r1, [r3]
   27d4c:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   27d50:	ldr	r3, [r4, #96]	; 0x60
   27d54:	ldr	r1, [r3, #4]
   27d58:	mov	r5, r0
   27d5c:	mov	r0, r4
   27d60:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   27d64:	ldr	r3, [pc, #28]	; 27d88 <luaL_where@@Base+0x7c84>
   27d68:	strh	r5, [r4, #120]	; 0x78
   27d6c:	strh	r3, [r4, #124]	; 0x7c
   27d70:	ldr	r5, [r4, #96]	; 0x60
   27d74:	strh	r0, [r4, #122]	; 0x7a
   27d78:	mov	r0, r4
   27d7c:	bl	27498 <luaL_where@@Base+0x7394>
   27d80:	str	r0, [r5]
   27d84:	pop	{r4, r5, r6, pc}
   27d88:	andeq	r3, r0, lr, lsl #2
   27d8c:	ldr	r3, [r0, #96]	; 0x60
   27d90:	push	{r4, r5, r6, lr}
   27d94:	mov	r5, r1
   27d98:	ldr	r1, [r3]
   27d9c:	mov	r4, r0
   27da0:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   27da4:	ldrh	r2, [r5, #8]
   27da8:	ldr	r3, [pc, #28]	; 27dcc <luaL_where@@Base+0x7cc8>
   27dac:	ldr	r5, [r4, #96]	; 0x60
   27db0:	strh	r2, [r4, #122]	; 0x7a
   27db4:	strh	r3, [r4, #124]	; 0x7c
   27db8:	strh	r0, [r4, #120]	; 0x78
   27dbc:	mov	r0, r4
   27dc0:	bl	27498 <luaL_where@@Base+0x7394>
   27dc4:	str	r0, [r5]
   27dc8:	pop	{r4, r5, r6, pc}
   27dcc:	andeq	r5, r0, lr, lsl #28
   27dd0:	ldr	r3, [r0, #96]	; 0x60
   27dd4:	push	{r4, r5, r6, lr}
   27dd8:	mov	r5, r1
   27ddc:	ldr	r1, [r3]
   27de0:	mov	r4, r0
   27de4:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   27de8:	ldrh	r2, [r5, #8]
   27dec:	ldr	r3, [pc, #28]	; 27e10 <luaL_where@@Base+0x7d0c>
   27df0:	ldr	r5, [r4, #96]	; 0x60
   27df4:	strh	r2, [r4, #122]	; 0x7a
   27df8:	strh	r3, [r4, #124]	; 0x7c
   27dfc:	strh	r0, [r4, #120]	; 0x78
   27e00:	mov	r0, r4
   27e04:	bl	27498 <luaL_where@@Base+0x7394>
   27e08:	str	r0, [r5]
   27e0c:	pop	{r4, r5, r6, pc}
   27e10:	andeq	r3, r0, lr, lsl #10
   27e14:	ldr	r3, [r0, #96]	; 0x60
   27e18:	push	{r4, r5, r6, lr}
   27e1c:	mov	r4, r0
   27e20:	ldr	r1, [r3]
   27e24:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   27e28:	add	r3, r4, #207	; 0xcf
   27e2c:	sub	r2, r4, #432	; 0x1b0
   27e30:	bic	r3, r3, #15
   27e34:	sub	r3, r3, r2
   27e38:	ldr	r1, [pc, #64]	; 27e80 <luaL_where@@Base+0x7d7c>
   27e3c:	mvn	r2, #32768	; 0x8000
   27e40:	lsr	r3, r3, #2
   27e44:	strh	r1, [r4, #124]	; 0x7c
   27e48:	strh	r2, [r4, #120]	; 0x78
   27e4c:	strh	r3, [r4, #122]	; 0x7a
   27e50:	mov	r5, r0
   27e54:	mov	r0, r4
   27e58:	bl	27498 <luaL_where@@Base+0x7394>
   27e5c:	ldr	r3, [pc, #32]	; 27e84 <luaL_where@@Base+0x7d80>
   27e60:	strh	r5, [r4, #120]	; 0x78
   27e64:	strh	r3, [r4, #124]	; 0x7c
   27e68:	ldr	r5, [r4, #96]	; 0x60
   27e6c:	strh	r0, [r4, #122]	; 0x7a
   27e70:	mov	r0, r4
   27e74:	bl	27498 <luaL_where@@Base+0x7394>
   27e78:	str	r0, [r5]
   27e7c:	pop	{r4, r5, r6, pc}
   27e80:	andeq	r4, r0, lr, lsl #10
   27e84:	andeq	r3, r0, lr
   27e88:	and	r2, r1, #520093696	; 0x1f000000
   27e8c:	cmp	r2, #67108864	; 0x4000000
   27e90:	beq	27ec8 <luaL_where@@Base+0x7dc4>
   27e94:	lsr	r3, r1, #24
   27e98:	and	r3, r3, #31
   27e9c:	sub	r3, r3, #14
   27ea0:	cmp	r3, #5
   27ea4:	bhi	27ed0 <luaL_where@@Base+0x7dcc>
   27ea8:	ldr	r3, [pc, #40]	; 27ed8 <luaL_where@@Base+0x7dd4>
   27eac:	sub	r2, r2, #234881024	; 0xe000000
   27eb0:	clz	r2, r2
   27eb4:	lsr	r2, r2, #5
   27eb8:	strh	r2, [r0, #122]	; 0x7a
   27ebc:	strh	r1, [r0, #120]	; 0x78
   27ec0:	strh	r3, [r0, #124]	; 0x7c
   27ec4:	b	27498 <luaL_where@@Base+0x7394>
   27ec8:	mov	r0, r1
   27ecc:	bx	lr
   27ed0:	push	{r4, lr}
   27ed4:	bl	130b0 <pclose@plt+0x14>
   27ed8:	andeq	r5, r0, r4, lsl #24
   27edc:	and	r3, r1, #520093696	; 0x1f000000
   27ee0:	cmp	r3, #67108864	; 0x4000000
   27ee4:	push	{r4, r5, r6, lr}
   27ee8:	mov	r4, r1
   27eec:	beq	27ef8 <luaL_where@@Base+0x7df4>
   27ef0:	mov	r0, r4
   27ef4:	pop	{r4, r5, r6, pc}
   27ef8:	mov	r6, r2
   27efc:	mov	r5, r0
   27f00:	ldr	r2, [pc, #56]	; 27f40 <luaL_where@@Base+0x7e3c>
   27f04:	mov	r3, #0
   27f08:	strh	r1, [r5, #120]	; 0x78
   27f0c:	strh	r2, [r0, #124]	; 0x7c
   27f10:	strh	r3, [r0, #122]	; 0x7a
   27f14:	bl	27498 <luaL_where@@Base+0x7394>
   27f18:	mov	r1, r6
   27f1c:	mov	r2, #2
   27f20:	mov	r4, r0
   27f24:	ldr	r0, [r6]
   27f28:	add	r0, r0, #16
   27f2c:	bl	189f0 <_start@@Base+0x5640>
   27f30:	cmp	r0, #0
   27f34:	bne	27ef0 <luaL_where@@Base+0x7dec>
   27f38:	mov	r0, r5
   27f3c:	bl	130b0 <pclose@plt+0x14>
   27f40:	andeq	r5, r0, lr, lsl #27
   27f44:	lsr	r3, r1, #24
   27f48:	and	r3, r3, #31
   27f4c:	sub	r3, r3, #14
   27f50:	cmp	r3, #5
   27f54:	bls	27f7c <luaL_where@@Base+0x7e78>
   27f58:	and	r3, r1, #520093696	; 0x1f000000
   27f5c:	cmp	r3, #67108864	; 0x4000000
   27f60:	bne	27f84 <luaL_where@@Base+0x7e80>
   27f64:	ldr	ip, [pc, #32]	; 27f8c <luaL_where@@Base+0x7e88>
   27f68:	mov	r3, #0
   27f6c:	strh	r1, [r0, #120]	; 0x78
   27f70:	strh	ip, [r0, #124]	; 0x7c
   27f74:	strh	r3, [r0, #122]	; 0x7a
   27f78:	b	27498 <luaL_where@@Base+0x7394>
   27f7c:	mov	r0, r1
   27f80:	bx	lr
   27f84:	push	{r4, lr}
   27f88:	bl	130b0 <pclose@plt+0x14>
   27f8c:	andeq	r5, r0, lr, lsl #27
   27f90:	ldr	r3, [r0, #96]	; 0x60
   27f94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27f98:	mov	r6, r1
   27f9c:	ldr	r1, [r3]
   27fa0:	mov	r4, r0
   27fa4:	bl	27f44 <luaL_where@@Base+0x7e40>
   27fa8:	ldr	r3, [r4, #96]	; 0x60
   27fac:	ldr	r7, [r6, #8]
   27fb0:	ldr	r1, [r3, #4]
   27fb4:	cmp	r1, #0
   27fb8:	mov	sl, r0
   27fbc:	beq	28090 <luaL_where@@Base+0x7f8c>
   27fc0:	lsl	r7, r7, #8
   27fc4:	ldr	r9, [pc, #204]	; 28098 <luaL_where@@Base+0x7f94>
   27fc8:	ldr	r8, [pc, #204]	; 2809c <luaL_where@@Base+0x7f98>
   27fcc:	uxth	r7, r7
   27fd0:	mov	r6, #8
   27fd4:	b	28030 <luaL_where@@Base+0x7f2c>
   27fd8:	cmp	ip, #4
   27fdc:	uxth	r5, r5
   27fe0:	movls	r2, #19
   27fe4:	bls	28000 <luaL_where@@Base+0x7efc>
   27fe8:	strh	sl, [r4, #120]	; 0x78
   27fec:	strh	r9, [r4, #124]	; 0x7c
   27ff0:	strh	r8, [r4, #122]	; 0x7a
   27ff4:	bl	27498 <luaL_where@@Base+0x7394>
   27ff8:	mov	r2, #14
   27ffc:	uxth	sl, r0
   28000:	orr	r2, r7, r2
   28004:	strh	sl, [r4, #120]	; 0x78
   28008:	strh	r2, [r4, #124]	; 0x7c
   2800c:	strh	r5, [r4, #122]	; 0x7a
   28010:	mov	r0, r4
   28014:	bl	27498 <luaL_where@@Base+0x7394>
   28018:	ldr	r3, [r4, #96]	; 0x60
   2801c:	ldr	r1, [r3, r6]
   28020:	add	r6, r6, #4
   28024:	cmp	r1, #0
   28028:	mov	sl, r0
   2802c:	beq	28090 <luaL_where@@Base+0x7f8c>
   28030:	mov	r0, r4
   28034:	bl	27f44 <luaL_where@@Base+0x7e40>
   28038:	lsr	r2, sl, #24
   2803c:	and	r2, r2, #31
   28040:	sub	r2, r2, #15
   28044:	cmp	r2, #4
   28048:	uxth	sl, sl
   2804c:	mov	r5, r0
   28050:	lsr	r0, r0, #24
   28054:	and	r0, r0, #31
   28058:	sub	ip, r0, #15
   2805c:	mov	r0, r4
   28060:	bls	27fd8 <luaL_where@@Base+0x7ed4>
   28064:	cmp	ip, #4
   28068:	mov	r2, #14
   2806c:	uxth	r5, r5
   28070:	bhi	28000 <luaL_where@@Base+0x7efc>
   28074:	strh	r5, [r4, #120]	; 0x78
   28078:	strh	r9, [r4, #124]	; 0x7c
   2807c:	strh	r8, [r4, #122]	; 0x7a
   28080:	bl	27498 <luaL_where@@Base+0x7394>
   28084:	mov	r2, #14
   28088:	uxth	r5, r0
   2808c:	b	28000 <luaL_where@@Base+0x7efc>
   28090:	str	sl, [r3]
   28094:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28098:	andeq	r5, r0, lr, lsl #20
   2809c:	ldrdeq	r0, [r0], -r3
   280a0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   280a4:	uxth	r6, r1
   280a8:	ldr	r7, [r0, #16]
   280ac:	lsl	r6, r6, #3
   280b0:	add	sl, r7, r6
   280b4:	ldrb	r5, [sl, #5]
   280b8:	cmp	r5, #53	; 0x35
   280bc:	movgt	r3, #1
   280c0:	movle	r3, #0
   280c4:	cmp	r5, r2
   280c8:	movgt	r3, #0
   280cc:	cmp	r3, #0
   280d0:	beq	28144 <luaL_where@@Base+0x8040>
   280d4:	add	r3, r0, #2144	; 0x860
   280d8:	ldr	r9, [pc, #224]	; 281c0 <luaL_where@@Base+0x80bc>
   280dc:	ldr	r8, [pc, #224]	; 281c4 <luaL_where@@Base+0x80c0>
   280e0:	ldr	fp, [pc, #224]	; 281c8 <luaL_where@@Base+0x80c4>
   280e4:	uxth	r4, r1
   280e8:	add	r3, r3, #12
   280ec:	mov	ip, #0
   280f0:	b	28104 <luaL_where@@Base+0x8000>
   280f4:	add	ip, ip, #1
   280f8:	cmp	ip, #16
   280fc:	add	r3, r3, #8
   28100:	beq	2814c <luaL_where@@Base+0x8048>
   28104:	ldrh	lr, [r3, #-4]
   28108:	cmp	lr, r4
   2810c:	bne	280f4 <luaL_where@@Base+0x7ff0>
   28110:	ldr	r1, [r3]
   28114:	cmp	r1, r9
   28118:	eor	lr, r1, r8
   2811c:	bls	280f4 <luaL_where@@Base+0x7ff0>
   28120:	tst	lr, fp
   28124:	bne	280f4 <luaL_where@@Base+0x7ff0>
   28128:	add	ip, ip, #268	; 0x10c
   2812c:	add	r0, r0, ip, lsl #3
   28130:	ldrh	r1, [r0, #10]
   28134:	add	r7, r7, r1, lsl #3
   28138:	ldrb	r0, [r7, #4]
   2813c:	add	r0, r1, r0, lsl #24
   28140:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28144:	mov	r0, r1
   28148:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2814c:	ldrh	r1, [r7, r6]
   28150:	mov	r8, r0
   28154:	mov	r9, r2
   28158:	ldrh	sl, [sl, #2]
   2815c:	bl	280a0 <luaL_where@@Base+0x7f9c>
   28160:	mov	r2, r9
   28164:	mov	r1, sl
   28168:	mov	r6, r0
   2816c:	mov	r0, r8
   28170:	bl	280a0 <luaL_where@@Base+0x7f9c>
   28174:	sub	r3, r5, #13
   28178:	strh	r6, [r8, #120]	; 0x78
   2817c:	lsl	r3, r3, #8
   28180:	orr	r3, r3, #19
   28184:	strh	r3, [r8, #124]	; 0x7c
   28188:	strh	r0, [r8, #122]	; 0x7a
   2818c:	mov	r0, r8
   28190:	bl	27498 <luaL_where@@Base+0x7394>
   28194:	ldr	r3, [r8, #2280]	; 0x8e8
   28198:	ldr	ip, [pc, #36]	; 281c4 <luaL_where@@Base+0x80c0>
   2819c:	add	r2, r3, #1
   281a0:	add	r3, r8, r3, lsl #3
   281a4:	add	r1, r3, #2144	; 0x860
   281a8:	and	r2, r2, #15
   281ac:	str	r2, [r8, #2280]	; 0x8e8
   281b0:	strh	r4, [r1, #8]
   281b4:	strh	r0, [r1, #10]
   281b8:	str	ip, [r3, #2156]	; 0x86c
   281bc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   281c0:	andeq	r0, r0, r2, ror r2
   281c4:	andeq	r0, r0, r3, ror r2
   281c8:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   281cc:	and	r3, r1, #520093696	; 0x1f000000
   281d0:	cmp	r3, #67108864	; 0x4000000
   281d4:	push	{r4, lr}
   281d8:	mov	r4, r0
   281dc:	beq	2820c <luaL_where@@Base+0x8108>
   281e0:	cmp	r3, #234881024	; 0xe000000
   281e4:	beq	28234 <luaL_where@@Base+0x8130>
   281e8:	lsr	r3, r1, #24
   281ec:	and	r3, r3, #31
   281f0:	sub	r3, r3, #15
   281f4:	cmp	r3, #4
   281f8:	mov	r0, r4
   281fc:	bhi	28254 <luaL_where@@Base+0x8150>
   28200:	mov	r2, #56	; 0x38
   28204:	pop	{r4, lr}
   28208:	b	280a0 <luaL_where@@Base+0x7f9c>
   2820c:	ldr	r2, [pc, #68]	; 28258 <luaL_where@@Base+0x8154>
   28210:	mov	r3, #0
   28214:	strh	r1, [r0, #120]	; 0x78
   28218:	strh	r3, [r0, #122]	; 0x7a
   2821c:	strh	r2, [r0, #124]	; 0x7c
   28220:	bl	27498 <luaL_where@@Base+0x7394>
   28224:	and	r3, r0, #520093696	; 0x1f000000
   28228:	cmp	r3, #234881024	; 0xe000000
   2822c:	mov	r1, r0
   28230:	bne	281e8 <luaL_where@@Base+0x80e4>
   28234:	ldr	r2, [pc, #32]	; 2825c <luaL_where@@Base+0x8158>
   28238:	ldr	r3, [pc, #32]	; 28260 <luaL_where@@Base+0x815c>
   2823c:	strh	r1, [r4, #120]	; 0x78
   28240:	strh	r2, [r4, #124]	; 0x7c
   28244:	strh	r3, [r4, #122]	; 0x7a
   28248:	mov	r0, r4
   2824c:	pop	{r4, lr}
   28250:	b	27498 <luaL_where@@Base+0x7394>
   28254:	bl	130b0 <pclose@plt+0x14>
   28258:	andeq	r5, r0, lr, lsl #27
   2825c:	andeq	r5, r0, r3, lsl sl
   28260:	andeq	r1, r0, lr, ror #4
   28264:	ldr	r3, [r0, #96]	; 0x60
   28268:	push	{r4, r5, r6, lr}
   2826c:	mov	r4, r0
   28270:	ldr	r1, [r3]
   28274:	bl	281cc <luaL_where@@Base+0x80c8>
   28278:	ldr	r3, [r4, #96]	; 0x60
   2827c:	ldr	r1, [r3, #4]
   28280:	mov	r5, r0
   28284:	mov	r0, r4
   28288:	bl	281cc <luaL_where@@Base+0x80c8>
   2828c:	mov	r2, r5
   28290:	mov	r1, #25
   28294:	ldr	r5, [r4, #96]	; 0x60
   28298:	mov	r3, r0
   2829c:	mov	r0, r4
   282a0:	bl	27a00 <luaL_where@@Base+0x78fc>
   282a4:	str	r0, [r5]
   282a8:	pop	{r4, r5, r6, pc}
   282ac:	ldr	r3, [r0, #96]	; 0x60
   282b0:	push	{r4, r5, r6, lr}
   282b4:	mov	r4, r0
   282b8:	ldr	r1, [r3]
   282bc:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   282c0:	ldr	r3, [r4, #96]	; 0x60
   282c4:	ldr	r1, [r3, #4]
   282c8:	mov	r5, r0
   282cc:	mov	r0, r4
   282d0:	bl	281cc <luaL_where@@Base+0x80c8>
   282d4:	ldr	r3, [pc, #28]	; 282f8 <luaL_where@@Base+0x81f4>
   282d8:	strh	r5, [r4, #120]	; 0x78
   282dc:	strh	r3, [r4, #124]	; 0x7c
   282e0:	ldr	r5, [r4, #96]	; 0x60
   282e4:	strh	r0, [r4, #122]	; 0x7a
   282e8:	mov	r0, r4
   282ec:	bl	27498 <luaL_where@@Base+0x7394>
   282f0:	str	r0, [r5]
   282f4:	pop	{r4, r5, r6, pc}
   282f8:	andeq	r3, r0, lr, lsl #4
   282fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28300:	sub	sp, sp, #284	; 0x11c
   28304:	tst	r3, #32768	; 0x8000
   28308:	mov	r7, r1
   2830c:	mov	r5, r3
   28310:	mov	r4, r0
   28314:	str	r2, [sp, #8]
   28318:	ldr	r1, [sp, #320]	; 0x140
   2831c:	bne	284dc <luaL_where@@Base+0x83d8>
   28320:	ldr	r3, [r0, #16]
   28324:	uxth	r2, r5
   28328:	ldr	r6, [r3, r2, lsl #3]
   2832c:	cmp	r6, #0
   28330:	beq	28520 <luaL_where@@Base+0x841c>
   28334:	cmp	r6, #128	; 0x80
   28338:	bhi	284dc <luaL_where@@Base+0x83d8>
   2833c:	cmp	r1, #0
   28340:	beq	28558 <luaL_where@@Base+0x8454>
   28344:	ldr	r3, [r1]
   28348:	ldr	r2, [r0, #-156]	; 0xffffff64
   2834c:	str	r2, [sp, #12]
   28350:	lsr	r2, r3, #28
   28354:	cmp	r2, #3
   28358:	beq	28528 <luaL_where@@Base+0x8424>
   2835c:	ands	r2, r3, #8388608	; 0x800000
   28360:	beq	28598 <luaL_where@@Base+0x8494>
   28364:	lsr	r3, r3, #16
   28368:	and	r3, r3, #15
   2836c:	mov	ip, #1
   28370:	lsl	ip, ip, r3
   28374:	cmp	ip, #4
   28378:	movcs	ip, #4
   2837c:	clz	r0, ip
   28380:	eor	r0, r0, #31
   28384:	add	r0, r0, #8
   28388:	lsl	r0, r0, #1
   2838c:	mov	r3, #1
   28390:	str	r3, [sp, #16]
   28394:	mov	r8, #0
   28398:	mov	r3, r8
   2839c:	add	lr, sp, #24
   283a0:	add	r2, r3, ip
   283a4:	cmp	r6, r2
   283a8:	add	r1, lr, r8, lsl #4
   283ac:	bcs	28564 <luaL_where@@Base+0x8460>
   283b0:	cmp	r6, r3
   283b4:	lsr	ip, ip, #1
   283b8:	sub	r0, r0, #2
   283bc:	bhi	283a0 <luaL_where@@Base+0x829c>
   283c0:	cmp	r8, #0
   283c4:	beq	284dc <luaL_where@@Base+0x83d8>
   283c8:	ldrh	r2, [sp, #8]
   283cc:	mov	r3, #0
   283d0:	str	r3, [sp, #12]
   283d4:	ldr	sl, [pc, #708]	; 286a0 <luaL_where@@Base+0x859c>
   283d8:	str	r2, [sp, #8]
   283dc:	uxth	r7, r7
   283e0:	mov	r9, r3
   283e4:	mov	r6, r3
   283e8:	add	fp, sp, #40	; 0x28
   283ec:	b	283fc <luaL_where@@Base+0x82f8>
   283f0:	cmp	r8, r6
   283f4:	add	fp, fp, #16
   283f8:	beq	28514 <luaL_where@@Base+0x8410>
   283fc:	ldr	r1, [fp, #-16]
   28400:	mov	r0, r4
   28404:	bl	26ccc <luaL_where@@Base+0x6bc8>
   28408:	ldrh	r3, [sp, #8]
   2840c:	strh	sl, [r4, #124]	; 0x7c
   28410:	add	r6, r6, #1
   28414:	strh	r3, [r4, #120]	; 0x78
   28418:	add	r9, r9, #1
   2841c:	mov	r5, r0
   28420:	strh	r0, [r4, #122]	; 0x7a
   28424:	mov	r0, r4
   28428:	bl	27498 <luaL_where@@Base+0x7394>
   2842c:	ldr	r2, [fp, #-12]
   28430:	mov	r3, #0
   28434:	orr	r2, r2, #17920	; 0x4600
   28438:	strh	r2, [r4, #124]	; 0x7c
   2843c:	strh	r3, [r4, #122]	; 0x7a
   28440:	strh	r0, [r4, #120]	; 0x78
   28444:	mov	r0, r4
   28448:	bl	27498 <luaL_where@@Base+0x7394>
   2844c:	cmp	r8, r6
   28450:	movhi	r2, #0
   28454:	movls	r2, #1
   28458:	str	r5, [fp, #-8]
   2845c:	cmp	r9, #3
   28460:	orrhi	r2, r2, #1
   28464:	cmp	r2, #0
   28468:	str	r0, [fp, #-4]
   2846c:	beq	283f0 <luaL_where@@Base+0x82ec>
   28470:	ldr	r3, [sp, #12]
   28474:	cmp	r6, r3
   28478:	movls	r9, #0
   2847c:	bls	283f0 <luaL_where@@Base+0x82ec>
   28480:	add	r2, sp, #24
   28484:	add	r5, r2, r3, lsl #4
   28488:	ldrh	r3, [r5, #8]
   2848c:	strh	sl, [r4, #124]	; 0x7c
   28490:	strh	r7, [r4, #120]	; 0x78
   28494:	strh	r3, [r4, #122]	; 0x7a
   28498:	mov	r0, r4
   2849c:	bl	27498 <luaL_where@@Base+0x7394>
   284a0:	ldr	r3, [r5, #4]
   284a4:	ldrh	r2, [r5, #12]
   284a8:	orr	r3, r3, #19712	; 0x4d00
   284ac:	strh	r3, [r4, #124]	; 0x7c
   284b0:	strh	r2, [r4, #122]	; 0x7a
   284b4:	add	r5, r5, #16
   284b8:	strh	r0, [r4, #120]	; 0x78
   284bc:	mov	r0, r4
   284c0:	bl	27498 <luaL_where@@Base+0x7394>
   284c4:	cmp	fp, r5
   284c8:	bne	28488 <luaL_where@@Base+0x8384>
   284cc:	str	r6, [sp, #12]
   284d0:	mov	r9, #0
   284d4:	b	283f0 <luaL_where@@Base+0x82ec>
   284d8:	ldr	r4, [sp, #20]
   284dc:	str	r5, [sp]
   284e0:	ldr	r3, [sp, #8]
   284e4:	mov	r2, r7
   284e8:	mov	r1, #94	; 0x5e
   284ec:	mov	r0, r4
   284f0:	bl	27a00 <luaL_where@@Base+0x78fc>
   284f4:	mov	r2, #0
   284f8:	mov	r3, #22784	; 0x5900
   284fc:	str	r2, [r4, #120]	; 0x78
   28500:	strh	r3, [r4, #124]	; 0x7c
   28504:	mov	r0, r4
   28508:	add	sp, sp, #284	; 0x11c
   2850c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28510:	b	27498 <luaL_where@@Base+0x7394>
   28514:	ldr	r3, [sp, #16]
   28518:	cmp	r3, #0
   2851c:	bne	284f4 <luaL_where@@Base+0x83f0>
   28520:	add	sp, sp, #284	; 0x11c
   28524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28528:	ldr	r2, [sp, #12]
   2852c:	ldr	r2, [r2]
   28530:	uxth	r1, r3
   28534:	ldr	r3, [r2, r1, lsl #4]
   28538:	add	r1, r2, r1, lsl #4
   2853c:	lsr	r0, r3, #28
   28540:	cmp	r0, #8
   28544:	beq	28530 <luaL_where@@Base+0x842c>
   28548:	ldr	r0, [sp, #12]
   2854c:	bl	1e228 <_start@@Base+0xae78>
   28550:	cmp	r0, #10
   28554:	bne	28580 <luaL_where@@Base+0x847c>
   28558:	mov	r0, #16
   2855c:	mov	ip, #1
   28560:	b	2838c <luaL_where@@Base+0x8288>
   28564:	cmp	r8, #15
   28568:	bhi	284dc <luaL_where@@Base+0x83d8>
   2856c:	str	r3, [lr, r8, lsl #4]
   28570:	add	r8, r8, #1
   28574:	mov	r3, r2
   28578:	str	r0, [r1, #4]
   2857c:	b	283a0 <luaL_where@@Base+0x829c>
   28580:	ldr	r3, [pc, #284]	; 286a4 <luaL_where@@Base+0x85a0>
   28584:	mov	r2, #0
   28588:	add	r3, r3, r0
   2858c:	str	r2, [sp, #16]
   28590:	ldrb	ip, [r3, #812]	; 0x32c
   28594:	b	28394 <luaL_where@@Base+0x8290>
   28598:	ldrh	r6, [r1, #8]
   2859c:	cmp	r6, #0
   285a0:	beq	284dc <luaL_where@@Base+0x83d8>
   285a4:	ldr	r3, [sp, #12]
   285a8:	mov	r8, r2
   285ac:	str	r0, [sp, #20]
   285b0:	ldr	fp, [r3]
   285b4:	add	r2, sp, #24
   285b8:	mov	r4, r8
   285bc:	b	285d0 <luaL_where@@Base+0x84cc>
   285c0:	cmp	r1, #11
   285c4:	bne	284d8 <luaL_where@@Base+0x83d4>
   285c8:	cmp	r6, #0
   285cc:	beq	28690 <luaL_where@@Base+0x858c>
   285d0:	lsl	r6, r6, #4
   285d4:	add	r8, fp, r6
   285d8:	ldr	r9, [fp, r6]
   285dc:	ldrh	r6, [r8, #8]
   285e0:	lsr	r1, r9, #28
   285e4:	cmp	r1, #9
   285e8:	bne	285c0 <luaL_where@@Base+0x84bc>
   285ec:	ldr	r1, [r8, #12]
   285f0:	cmp	r1, #0
   285f4:	beq	285c8 <luaL_where@@Base+0x84c4>
   285f8:	uxth	sl, r9
   285fc:	ldr	r9, [fp, sl, lsl #4]
   28600:	add	sl, fp, sl, lsl #4
   28604:	lsr	r3, r9, #28
   28608:	cmp	r3, #8
   2860c:	beq	285f8 <luaL_where@@Base+0x84f4>
   28610:	mov	r1, sl
   28614:	ldr	r0, [sp, #12]
   28618:	str	r2, [sp, #16]
   2861c:	bl	1e228 <_start@@Base+0xae78>
   28620:	sub	r1, r0, #10
   28624:	clz	r1, r1
   28628:	lsr	r1, r1, #5
   2862c:	cmp	r4, #15
   28630:	orrhi	r1, r1, #1
   28634:	cmp	r1, #0
   28638:	bne	284d8 <luaL_where@@Base+0x83d4>
   2863c:	ldr	r2, [sp, #16]
   28640:	lsl	r1, r4, #4
   28644:	add	lr, r2, r1
   28648:	ldr	ip, [r8, #4]
   2864c:	and	r9, r9, #-201326592	; 0xf4000000
   28650:	str	ip, [r2, r4, lsl #4]
   28654:	cmp	r9, #872415232	; 0x34000000
   28658:	str	r0, [lr, #4]
   2865c:	add	lr, r4, #1
   28660:	movne	r4, lr
   28664:	bne	285c8 <luaL_where@@Base+0x84c4>
   28668:	cmp	lr, #16
   2866c:	beq	284d8 <luaL_where@@Base+0x83d4>
   28670:	ldr	r8, [sl, #4]
   28674:	add	r1, r1, #16
   28678:	add	lr, r2, r1
   2867c:	add	ip, ip, r8, lsr #1
   28680:	str	ip, [r2, r1]
   28684:	add	r4, r4, #2
   28688:	str	r0, [lr, #4]
   2868c:	b	285c8 <luaL_where@@Base+0x84c4>
   28690:	mov	r8, r4
   28694:	str	r6, [sp, #16]
   28698:	ldr	r4, [sp, #20]
   2869c:	b	283c0 <luaL_where@@Base+0x82bc>
   286a0:	andeq	r2, r0, r5, lsl #18
   286a4:			; <UNDEFINED> instruction: 0x0006ecb8
   286a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   286ac:	sub	sp, sp, #264	; 0x108
   286b0:	tst	r2, #32768	; 0x8000
   286b4:	mov	r7, r1
   286b8:	mov	r4, r0
   286bc:	ldr	r1, [sp, #296]	; 0x128
   286c0:	bne	287fc <luaL_where@@Base+0x86f8>
   286c4:	ldr	r0, [r0, #16]
   286c8:	uxth	ip, r2
   286cc:	ldr	lr, [r0, ip, lsl #3]
   286d0:	cmp	lr, #0
   286d4:	beq	28830 <luaL_where@@Base+0x872c>
   286d8:	cmp	r1, #4
   286dc:	movcs	r1, #4
   286e0:	cmp	lr, r1, lsl #4
   286e4:	bhi	287fc <luaL_where@@Base+0x86f8>
   286e8:	clz	r6, r1
   286ec:	eor	r6, r6, #31
   286f0:	add	r6, r6, #8
   286f4:	mov	r5, #0
   286f8:	lsl	r6, r6, #1
   286fc:	mov	r0, r5
   28700:	add	r8, sp, #8
   28704:	add	ip, r0, r1
   28708:	cmp	lr, ip
   2870c:	add	r9, r8, r5, lsl #4
   28710:	bcs	28838 <luaL_where@@Base+0x8734>
   28714:	cmp	lr, r0
   28718:	lsr	r1, r1, #1
   2871c:	sub	r6, r6, #2
   28720:	bhi	28704 <luaL_where@@Base+0x8600>
   28724:	cmp	r5, #0
   28728:	beq	287fc <luaL_where@@Base+0x86f8>
   2872c:	tst	r3, #32768	; 0x8000
   28730:	ldr	r8, [sp, #12]
   28734:	beq	28854 <luaL_where@@Base+0x8750>
   28738:	cmp	r8, #16
   2873c:	beq	28798 <luaL_where@@Base+0x8694>
   28740:	ldr	r2, [pc, #312]	; 28880 <luaL_where@@Base+0x877c>
   28744:	strh	r3, [r4, #120]	; 0x78
   28748:	mov	r3, #624	; 0x270
   2874c:	strh	r3, [r4, #122]	; 0x7a
   28750:	strh	r2, [r4, #124]	; 0x7c
   28754:	mov	r0, r4
   28758:	bl	27498 <luaL_where@@Base+0x7394>
   2875c:	mov	r3, r0
   28760:	ldr	r2, [pc, #284]	; 28884 <luaL_where@@Base+0x8780>
   28764:	cmp	r8, #18
   28768:	ldr	r1, [pc, #280]	; 28888 <luaL_where@@Base+0x8784>
   2876c:	mov	r0, r4
   28770:	movne	r1, r2
   28774:	uxth	r6, r3
   28778:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2877c:	ldr	r2, [pc, #264]	; 2888c <luaL_where@@Base+0x8788>
   28780:	strh	r6, [r4, #120]	; 0x78
   28784:	strh	r2, [r4, #124]	; 0x7c
   28788:	strh	r0, [r4, #122]	; 0x7a
   2878c:	mov	r0, r4
   28790:	bl	27498 <luaL_where@@Base+0x7394>
   28794:	mov	r3, r0
   28798:	add	r6, sp, #28
   2879c:	ldr	r9, [pc, #236]	; 28890 <luaL_where@@Base+0x878c>
   287a0:	uxth	r7, r7
   287a4:	uxth	sl, r3
   287a8:	add	r5, r6, r5, lsl #4
   287ac:	b	287b4 <luaL_where@@Base+0x86b0>
   287b0:	ldr	r8, [r6, #-16]
   287b4:	ldr	r1, [r6, #-20]	; 0xffffffec
   287b8:	mov	r0, r4
   287bc:	bl	26ccc <luaL_where@@Base+0x6bc8>
   287c0:	strh	r9, [r4, #124]	; 0x7c
   287c4:	strh	r7, [r4, #120]	; 0x78
   287c8:	orr	r8, r8, #19712	; 0x4d00
   287cc:	add	r6, r6, #16
   287d0:	strh	r0, [r4, #122]	; 0x7a
   287d4:	mov	r0, r4
   287d8:	bl	27498 <luaL_where@@Base+0x7394>
   287dc:	strh	r8, [r4, #124]	; 0x7c
   287e0:	strh	sl, [r4, #122]	; 0x7a
   287e4:	strh	r0, [r4, #120]	; 0x78
   287e8:	mov	r0, r4
   287ec:	bl	27498 <luaL_where@@Base+0x7394>
   287f0:	cmp	r5, r6
   287f4:	bne	287b0 <luaL_where@@Base+0x86ac>
   287f8:	b	28810 <luaL_where@@Base+0x870c>
   287fc:	str	r2, [sp]
   28800:	mov	r1, #95	; 0x5f
   28804:	mov	r2, r7
   28808:	mov	r0, r4
   2880c:	bl	27a00 <luaL_where@@Base+0x78fc>
   28810:	mov	r2, #0
   28814:	mov	r3, #22784	; 0x5900
   28818:	str	r2, [r4, #120]	; 0x78
   2881c:	strh	r3, [r4, #124]	; 0x7c
   28820:	mov	r0, r4
   28824:	add	sp, sp, #264	; 0x108
   28828:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2882c:	b	27498 <luaL_where@@Base+0x7394>
   28830:	add	sp, sp, #264	; 0x108
   28834:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28838:	cmp	r5, #15
   2883c:	bhi	287fc <luaL_where@@Base+0x86f8>
   28840:	str	r0, [r8, r5, lsl #4]
   28844:	add	r5, r5, #1
   28848:	mov	r0, ip
   2884c:	str	r6, [r9, #4]
   28850:	b	28704 <luaL_where@@Base+0x8600>
   28854:	ldr	r2, [pc, #36]	; 28880 <luaL_where@@Base+0x877c>
   28858:	strh	r3, [r4, #120]	; 0x78
   2885c:	mov	r3, #624	; 0x270
   28860:	strh	r3, [r4, #122]	; 0x7a
   28864:	strh	r2, [r4, #124]	; 0x7c
   28868:	mov	r0, r4
   2886c:	bl	27498 <luaL_where@@Base+0x7394>
   28870:	cmp	r8, #16
   28874:	mov	r3, r0
   28878:	bne	28760 <luaL_where@@Base+0x865c>
   2887c:	b	28798 <luaL_where@@Base+0x8694>
   28880:	andeq	r5, r0, r3, lsl sl
   28884:	tsteq	r1, r1, lsl #2
   28888:	andeq	r0, r0, r1, lsl #2
   2888c:	andeq	r2, r0, r3, lsl fp
   28890:	andeq	r2, r0, r5, lsl #18
   28894:	ldr	ip, [pc, #76]	; 288e8 <luaL_where@@Base+0x87e4>
   28898:	mov	r3, #16
   2889c:	push	{r4, r5, r6, lr}
   288a0:	mov	r4, r0
   288a4:	ldr	r5, [r1, #8]
   288a8:	strh	r2, [r0, #120]	; 0x78
   288ac:	strh	ip, [r0, #124]	; 0x7c
   288b0:	strh	r3, [r0, #122]	; 0x7a
   288b4:	bl	27498 <luaL_where@@Base+0x7394>
   288b8:	mov	r1, r5
   288bc:	mov	r6, r0
   288c0:	mov	r0, r4
   288c4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   288c8:	ldr	r3, [pc, #28]	; 288ec <luaL_where@@Base+0x87e8>
   288cc:	strh	r6, [r4, #120]	; 0x78
   288d0:	strh	r3, [r4, #124]	; 0x7c
   288d4:	strh	r0, [r4, #122]	; 0x7a
   288d8:	mov	r0, r4
   288dc:	bl	27498 <luaL_where@@Base+0x7394>
   288e0:	mov	r0, r5
   288e4:	pop	{r4, r5, r6, pc}
   288e8:	andeq	r4, r0, r3, lsl r5
   288ec:	muleq	r0, r3, r8
   288f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   288f4:	uxth	r7, r3
   288f8:	ldr	r5, [r2]
   288fc:	ldr	r3, [sp, #36]	; 0x24
   28900:	cmp	r5, #0
   28904:	mov	r6, r2
   28908:	uxth	r8, r3
   2890c:	mov	r4, r0
   28910:	blt	28980 <luaL_where@@Base+0x887c>
   28914:	beq	28964 <luaL_where@@Base+0x8860>
   28918:	mvn	r1, #0
   2891c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   28920:	ldr	r3, [pc, #188]	; 289e4 <luaL_where@@Base+0x88e0>
   28924:	strh	r7, [r4, #120]	; 0x78
   28928:	strh	r3, [r4, #124]	; 0x7c
   2892c:	sub	r5, r5, #1
   28930:	strh	r0, [r4, #122]	; 0x7a
   28934:	mov	r0, r4
   28938:	bl	27498 <luaL_where@@Base+0x7394>
   2893c:	mov	r7, r0
   28940:	ldr	r3, [pc, #160]	; 289e8 <luaL_where@@Base+0x88e4>
   28944:	strh	r7, [r4, #120]	; 0x78
   28948:	strh	r8, [r4, #122]	; 0x7a
   2894c:	strh	r3, [r4, #124]	; 0x7c
   28950:	mov	r0, r4
   28954:	bl	27498 <luaL_where@@Base+0x7394>
   28958:	str	r5, [r6]
   2895c:	mov	r0, r7
   28960:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28964:	ldr	r3, [pc, #128]	; 289ec <luaL_where@@Base+0x88e8>
   28968:	strh	r7, [r0, #120]	; 0x78
   2896c:	strh	r8, [r0, #122]	; 0x7a
   28970:	strh	r3, [r0, #124]	; 0x7c
   28974:	bl	27498 <luaL_where@@Base+0x7394>
   28978:	ldr	r7, [sp, #36]	; 0x24
   2897c:	b	28958 <luaL_where@@Base+0x8854>
   28980:	mov	sl, #147	; 0x93
   28984:	strh	r7, [r0, #120]	; 0x78
   28988:	strh	r8, [r0, #122]	; 0x7a
   2898c:	strh	sl, [r0, #124]	; 0x7c
   28990:	mov	r9, r1
   28994:	bl	27498 <luaL_where@@Base+0x7394>
   28998:	ldr	r3, [pc, #68]	; 289e4 <luaL_where@@Base+0x88e0>
   2899c:	ldr	r2, [sp, #32]
   289a0:	strh	r7, [r4, #122]	; 0x7a
   289a4:	strh	r3, [r4, #124]	; 0x7c
   289a8:	strh	r2, [r4, #120]	; 0x78
   289ac:	mov	r0, r4
   289b0:	bl	27498 <luaL_where@@Base+0x7394>
   289b4:	ldr	r3, [r9]
   289b8:	adds	r5, r5, r3
   289bc:	mov	r7, r0
   289c0:	bpl	28940 <luaL_where@@Base+0x883c>
   289c4:	strh	r0, [r4, #120]	; 0x78
   289c8:	strh	sl, [r4, #124]	; 0x7c
   289cc:	strh	r8, [r4, #122]	; 0x7a
   289d0:	mov	r0, r4
   289d4:	bl	27498 <luaL_where@@Base+0x7394>
   289d8:	mov	r5, #0
   289dc:	ldr	r7, [sp, #36]	; 0x24
   289e0:	b	28958 <luaL_where@@Base+0x8854>
   289e4:	andeq	r2, r0, r3, lsl r9
   289e8:	muleq	r0, r3, r1
   289ec:	muleq	r0, r3, r8
   289f0:	push	{r4, r5, r6, r7, r8, lr}
   289f4:	mov	r6, r1
   289f8:	ldr	r5, [r0, #96]	; 0x60
   289fc:	ldr	r1, [r5]
   28a00:	lsr	r3, r1, #24
   28a04:	and	r3, r3, #31
   28a08:	sub	r3, r3, #15
   28a0c:	cmp	r3, #4
   28a10:	bls	28a70 <luaL_where@@Base+0x896c>
   28a14:	mov	r4, r0
   28a18:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   28a1c:	ldr	r2, [pc, #92]	; 28a80 <luaL_where@@Base+0x897c>
   28a20:	mov	r3, #2
   28a24:	strh	r2, [r4, #124]	; 0x7c
   28a28:	strh	r3, [r4, #122]	; 0x7a
   28a2c:	uxth	r7, r0
   28a30:	strh	r7, [r4, #120]	; 0x78
   28a34:	mov	r0, r4
   28a38:	bl	27498 <luaL_where@@Base+0x7394>
   28a3c:	ldr	r5, [r4, #96]	; 0x60
   28a40:	ldr	r2, [pc, #60]	; 28a84 <luaL_where@@Base+0x8980>
   28a44:	mov	r3, r0
   28a48:	str	r3, [r5]
   28a4c:	mov	r0, r4
   28a50:	strh	r7, [r4, #120]	; 0x78
   28a54:	strh	r3, [r4, #122]	; 0x7a
   28a58:	strh	r2, [r4, #124]	; 0x7c
   28a5c:	bl	27498 <luaL_where@@Base+0x7394>
   28a60:	str	r0, [r5, #4]
   28a64:	mov	r3, #2
   28a68:	str	r3, [r6, #4]
   28a6c:	pop	{r4, r5, r6, r7, r8, pc}
   28a70:	mov	r1, #0
   28a74:	bl	26ccc <luaL_where@@Base+0x6bc8>
   28a78:	str	r0, [r5, #4]
   28a7c:	b	28a64 <luaL_where@@Base+0x8960>
   28a80:	andeq	r3, r0, lr, lsl #10
   28a84:	andeq	r2, r0, lr, lsl #20
   28a88:	push	{r4, r5, r6, r7, r8, lr}
   28a8c:	mov	r7, r2
   28a90:	mov	r2, r3
   28a94:	mov	r4, r0
   28a98:	ldr	r6, [sp, #24]
   28a9c:	bl	27edc <luaL_where@@Base+0x7dd8>
   28aa0:	mov	r1, r0
   28aa4:	mov	r0, r4
   28aa8:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   28aac:	mov	r2, r6
   28ab0:	mov	r1, r7
   28ab4:	mov	r5, r0
   28ab8:	mov	r0, r4
   28abc:	bl	27edc <luaL_where@@Base+0x7dd8>
   28ac0:	ldr	r2, [r6, #4]
   28ac4:	cmn	r2, #14
   28ac8:	sxtheq	r3, r5
   28acc:	beq	28ba8 <luaL_where@@Base+0x8aa4>
   28ad0:	vldr	d6, [r6]
   28ad4:	sxth	r3, r5
   28ad8:	vcvt.s32.f64	s14, d6
   28adc:	vcvt.f64.s32	d7, s14
   28ae0:	vcmp.f64	d6, d7
   28ae4:	vmrs	APSR_nzcv, fpscr
   28ae8:	beq	28ba8 <luaL_where@@Base+0x8aa4>
   28aec:	cmp	r3, #0
   28af0:	blt	28b1c <luaL_where@@Base+0x8a18>
   28af4:	uxth	r3, r5
   28af8:	add	r2, r3, #1
   28afc:	ldr	r3, [r4, #16]
   28b00:	add	r3, r3, r2, lsl #3
   28b04:	ldrd	r6, [r3]
   28b08:	ldr	r3, [pc, #504]	; 28d08 <luaL_where@@Base+0x8c04>
   28b0c:	mov	r2, #0
   28b10:	cmp	r7, r3
   28b14:	cmpeq	r6, r2
   28b18:	beq	28cd0 <luaL_where@@Base+0x8bcc>
   28b1c:	mov	r1, r0
   28b20:	mov	r0, r4
   28b24:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   28b28:	uxth	r5, r5
   28b2c:	tst	r0, #32768	; 0x8000
   28b30:	mov	r6, r0
   28b34:	bne	28b58 <luaL_where@@Base+0x8a54>
   28b38:	uxth	r3, r0
   28b3c:	ldr	r2, [r4, #16]
   28b40:	vldr	d7, [pc, #440]	; 28d00 <luaL_where@@Base+0x8bfc>
   28b44:	add	r3, r2, r3, lsl #3
   28b48:	vldr	d6, [r3, #8]
   28b4c:	vcmp.f64	d6, d7
   28b50:	vmrs	APSR_nzcv, fpscr
   28b54:	beq	28cb0 <luaL_where@@Base+0x8bac>
   28b58:	ldr	r7, [pc, #428]	; 28d0c <luaL_where@@Base+0x8c08>
   28b5c:	mov	r3, #7
   28b60:	strh	r3, [r4, #122]	; 0x7a
   28b64:	strh	r5, [r4, #120]	; 0x78
   28b68:	strh	r7, [r4, #124]	; 0x7c
   28b6c:	mov	r0, r4
   28b70:	bl	27498 <luaL_where@@Base+0x7394>
   28b74:	ldr	r3, [pc, #404]	; 28d10 <luaL_where@@Base+0x8c0c>
   28b78:	strh	r6, [r4, #122]	; 0x7a
   28b7c:	strh	r3, [r4, #124]	; 0x7c
   28b80:	strh	r0, [r4, #120]	; 0x78
   28b84:	mov	r0, r4
   28b88:	bl	27498 <luaL_where@@Base+0x7394>
   28b8c:	mov	r3, #5
   28b90:	strh	r7, [r4, #124]	; 0x7c
   28b94:	strh	r3, [r4, #122]	; 0x7a
   28b98:	strh	r0, [r4, #120]	; 0x78
   28b9c:	mov	r0, r4
   28ba0:	pop	{r4, r5, r6, r7, r8, lr}
   28ba4:	b	27498 <luaL_where@@Base+0x7394>
   28ba8:	cmp	r3, #0
   28bac:	blt	28c74 <luaL_where@@Base+0x8b70>
   28bb0:	uxth	r3, r5
   28bb4:	add	r1, r3, #1
   28bb8:	ldr	r3, [r4, #16]
   28bbc:	add	r3, r3, r1, lsl #3
   28bc0:	ldr	r1, [r3, #4]
   28bc4:	cmp	r1, #0
   28bc8:	blt	28c74 <luaL_where@@Base+0x8b70>
   28bcc:	cmn	r2, #14
   28bd0:	vldrne	d7, [r6]
   28bd4:	ldreq	r2, [r6]
   28bd8:	vcvtne.s32.f64	s15, d7
   28bdc:	vmovne	r2, s15
   28be0:	add	r2, r2, #65536	; 0x10000
   28be4:	cmp	r2, #131072	; 0x20000
   28be8:	bhi	28b04 <luaL_where@@Base+0x8a00>
   28bec:	lsr	r3, r0, #24
   28bf0:	and	r3, r3, #31
   28bf4:	sub	r3, r3, #15
   28bf8:	cmp	r3, #4
   28bfc:	uxth	r6, r0
   28c00:	bhi	28cd8 <luaL_where@@Base+0x8bd4>
   28c04:	tst	r0, #32768	; 0x8000
   28c08:	beq	28c58 <luaL_where@@Base+0x8b54>
   28c0c:	mov	r1, #65536	; 0x10000
   28c10:	mov	r0, r4
   28c14:	bl	26ccc <luaL_where@@Base+0x6bc8>
   28c18:	ldr	r3, [pc, #244]	; 28d14 <luaL_where@@Base+0x8c10>
   28c1c:	strh	r6, [r4, #120]	; 0x78
   28c20:	strh	r3, [r4, #124]	; 0x7c
   28c24:	strh	r0, [r4, #122]	; 0x7a
   28c28:	mov	r0, r4
   28c2c:	bl	27498 <luaL_where@@Base+0x7394>
   28c30:	mov	r1, #131072	; 0x20000
   28c34:	mov	r7, r0
   28c38:	mov	r0, r4
   28c3c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   28c40:	ldr	r3, [pc, #208]	; 28d18 <luaL_where@@Base+0x8c14>
   28c44:	strh	r7, [r4, #120]	; 0x78
   28c48:	strh	r3, [r4, #124]	; 0x7c
   28c4c:	strh	r0, [r4, #122]	; 0x7a
   28c50:	mov	r0, r4
   28c54:	bl	27498 <luaL_where@@Base+0x7394>
   28c58:	ldr	r3, [pc, #188]	; 28d1c <luaL_where@@Base+0x8c18>
   28c5c:	strh	r5, [r4, #120]	; 0x78
   28c60:	strh	r6, [r4, #122]	; 0x7a
   28c64:	strh	r3, [r4, #124]	; 0x7c
   28c68:	mov	r0, r4
   28c6c:	pop	{r4, r5, r6, r7, r8, lr}
   28c70:	b	27498 <luaL_where@@Base+0x7394>
   28c74:	lsr	r3, r0, #24
   28c78:	and	r3, r3, #31
   28c7c:	sub	r3, r3, #15
   28c80:	cmp	r3, #4
   28c84:	uxth	r6, r0
   28c88:	bls	28c58 <luaL_where@@Base+0x8b54>
   28c8c:	ldr	r2, [pc, #140]	; 28d20 <luaL_where@@Base+0x8c1c>
   28c90:	ldr	r3, [pc, #140]	; 28d24 <luaL_where@@Base+0x8c20>
   28c94:	strh	r6, [r4, #120]	; 0x78
   28c98:	strh	r2, [r4, #124]	; 0x7c
   28c9c:	strh	r3, [r4, #122]	; 0x7a
   28ca0:	mov	r0, r4
   28ca4:	bl	27498 <luaL_where@@Base+0x7394>
   28ca8:	uxth	r6, r0
   28cac:	b	28c58 <luaL_where@@Base+0x8b54>
   28cb0:	ldr	r2, [pc, #84]	; 28d0c <luaL_where@@Base+0x8c08>
   28cb4:	mov	r3, #3
   28cb8:	strh	r5, [r4, #120]	; 0x78
   28cbc:	strh	r2, [r4, #124]	; 0x7c
   28cc0:	strh	r3, [r4, #122]	; 0x7a
   28cc4:	mov	r0, r4
   28cc8:	pop	{r4, r5, r6, r7, r8, lr}
   28ccc:	b	27498 <luaL_where@@Base+0x7394>
   28cd0:	mov	r0, r5
   28cd4:	pop	{r4, r5, r6, r7, r8, pc}
   28cd8:	ldr	r2, [pc, #64]	; 28d20 <luaL_where@@Base+0x8c1c>
   28cdc:	ldr	r3, [pc, #64]	; 28d24 <luaL_where@@Base+0x8c20>
   28ce0:	strh	r6, [r4, #120]	; 0x78
   28ce4:	strh	r2, [r4, #124]	; 0x7c
   28ce8:	strh	r3, [r4, #122]	; 0x7a
   28cec:	mov	r0, r4
   28cf0:	bl	27498 <luaL_where@@Base+0x7394>
   28cf4:	uxth	r6, r0
   28cf8:	b	28c04 <luaL_where@@Base+0x8b00>
   28cfc:	nop			; (mov r0, r0)
   28d00:	andeq	r0, r0, r0
   28d04:	svccc	0x00e00000
   28d08:	svccc	0x00f00000	; IMB
   28d0c:	andeq	r3, r0, lr, lsl #10
   28d10:	andeq	r2, r0, lr, lsl #22
   28d14:	andeq	r2, r0, r3, lsl r9
   28d18:	muleq	r0, r3, r6
   28d1c:	andeq	r2, r0, lr, lsl #28
   28d20:	muleq	r0, r3, sl
   28d24:	andeq	r3, r0, lr, ror #4
   28d28:	push	{r4, lr}
   28d2c:	sub	sp, sp, #8
   28d30:	ldr	r4, [r0, #96]	; 0x60
   28d34:	ldr	r3, [r1]
   28d38:	add	ip, r3, #8
   28d3c:	ldm	r4, {r1, r2}
   28d40:	str	ip, [sp]
   28d44:	bl	28a88 <luaL_where@@Base+0x8984>
   28d48:	str	r0, [r4]
   28d4c:	add	sp, sp, #8
   28d50:	pop	{r4, pc}
   28d54:	and	r3, r1, #520093696	; 0x1f000000
   28d58:	cmp	r3, #167772160	; 0xa000000
   28d5c:	push	{r4, r5, r6, lr}
   28d60:	bne	28db4 <luaL_where@@Base+0x8cb0>
   28d64:	ldr	r5, [r2]
   28d68:	ldr	r2, [pc, #72]	; 28db8 <luaL_where@@Base+0x8cb4>
   28d6c:	mov	r3, #14
   28d70:	strh	r2, [r0, #124]	; 0x7c
   28d74:	strh	r3, [r0, #122]	; 0x7a
   28d78:	strh	r1, [r0, #120]	; 0x78
   28d7c:	mov	r4, r0
   28d80:	bl	27498 <luaL_where@@Base+0x7394>
   28d84:	ldrh	r1, [r5, #6]
   28d88:	mov	r6, r0
   28d8c:	mov	r0, r4
   28d90:	bl	26ccc <luaL_where@@Base+0x6bc8>
   28d94:	ldr	r3, [pc, #32]	; 28dbc <luaL_where@@Base+0x8cb8>
   28d98:	strh	r6, [r4, #120]	; 0x78
   28d9c:	strh	r3, [r4, #124]	; 0x7c
   28da0:	strh	r0, [r4, #122]	; 0x7a
   28da4:	mov	r0, r4
   28da8:	bl	27498 <luaL_where@@Base+0x7394>
   28dac:	mov	r0, r5
   28db0:	pop	{r4, r5, r6, pc}
   28db4:	bl	130b0 <pclose@plt+0x14>
   28db8:	andeq	r4, r0, r2, lsl r5
   28dbc:	muleq	r0, r3, r8
   28dc0:	push	{r4, r5, r6, r7, r8, r9, lr}
   28dc4:	add	r5, r0, r1, lsl #1
   28dc8:	add	r5, r5, #284	; 0x11c
   28dcc:	cmp	r1, #28
   28dd0:	ldrh	r4, [r5, #2]
   28dd4:	movne	r8, #352321536	; 0x15000000
   28dd8:	moveq	r8, #234881024	; 0xe000000
   28ddc:	movne	r9, #21
   28de0:	moveq	r9, #14
   28de4:	cmp	r4, #0
   28de8:	sub	sp, sp, #20
   28dec:	ldr	ip, [r0, #16]
   28df0:	beq	28e30 <luaL_where@@Base+0x8d2c>
   28df4:	add	lr, ip, r4, lsl #3
   28df8:	ldrd	r6, [lr, #8]
   28dfc:	cmp	r3, r7
   28e00:	cmpeq	r2, r6
   28e04:	bne	28e1c <luaL_where@@Base+0x8d18>
   28e08:	b	28e70 <luaL_where@@Base+0x8d6c>
   28e0c:	ldrd	r6, [lr, #8]
   28e10:	cmp	r7, r3
   28e14:	cmpeq	r6, r2
   28e18:	beq	28e70 <luaL_where@@Base+0x8d6c>
   28e1c:	add	r4, ip, r4, lsl #3
   28e20:	ldrh	r4, [r4, #6]
   28e24:	cmp	r4, #0
   28e28:	add	lr, ip, r4, lsl #3
   28e2c:	bne	28e0c <luaL_where@@Base+0x8d08>
   28e30:	ldr	r4, [r0, #20]
   28e34:	mov	r6, r0
   28e38:	ldr	r0, [r0, #240]	; 0xf0
   28e3c:	sub	r4, r4, #2
   28e40:	cmp	r4, r0
   28e44:	bcc	28e7c <luaL_where@@Base+0x8d78>
   28e48:	add	r0, ip, r4, lsl #3
   28e4c:	mov	lr, #0
   28e50:	str	r4, [r6, #20]
   28e54:	strd	r2, [r0, #8]
   28e58:	strb	r9, [r0, #4]
   28e5c:	strb	r1, [r0, #5]
   28e60:	str	lr, [ip, r4, lsl #3]
   28e64:	ldrh	r3, [r5, #2]
   28e68:	strh	r3, [r0, #6]
   28e6c:	strh	r4, [r5, #2]
   28e70:	add	r0, r4, r8
   28e74:	add	sp, sp, #20
   28e78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   28e7c:	mov	r0, r6
   28e80:	strd	r2, [sp, #8]
   28e84:	str	r1, [sp, #4]
   28e88:	bl	26bc8 <luaL_where@@Base+0x6ac4>
   28e8c:	ldr	ip, [r6, #16]
   28e90:	ldrd	r2, [sp, #8]
   28e94:	ldr	r1, [sp, #4]
   28e98:	b	28e48 <luaL_where@@Base+0x8d44>
   28e9c:	vcvt.s32.f64	s15, d0
   28ea0:	sub	sp, sp, #8
   28ea4:	vstr	d0, [sp]
   28ea8:	vcvt.f64.s32	d6, s15
   28eac:	vcmp.f64	d0, d6
   28eb0:	vmrs	APSR_nzcv, fpscr
   28eb4:	bne	28edc <luaL_where@@Base+0x8dd8>
   28eb8:	vmov	r3, s15
   28ebc:	cmp	r3, #0
   28ec0:	bne	28ed0 <luaL_where@@Base+0x8dcc>
   28ec4:	ldr	r3, [sp, #4]
   28ec8:	cmp	r3, #0
   28ecc:	bne	28edc <luaL_where@@Base+0x8dd8>
   28ed0:	vmov	r1, s15
   28ed4:	add	sp, sp, #8
   28ed8:	b	26ccc <luaL_where@@Base+0x6bc8>
   28edc:	ldrd	r2, [sp]
   28ee0:	mov	r1, #28
   28ee4:	add	sp, sp, #8
   28ee8:	b	28dc0 <luaL_where@@Base+0x8cbc>
   28eec:	push	{r4, lr}
   28ef0:	mov	r4, r0
   28ef4:	sub	sp, sp, #8
   28ef8:	ldrb	ip, [r4, #125]	; 0x7d
   28efc:	ldrd	r2, [r0, #152]	; 0x98
   28f00:	ldrd	r0, [r0, #136]	; 0x88
   28f04:	str	ip, [sp]
   28f08:	bl	15c5c <_start@@Base+0x28ac>
   28f0c:	mov	r2, r0
   28f10:	mov	r3, r1
   28f14:	mov	r0, r4
   28f18:	mov	r1, #29
   28f1c:	add	sp, sp, #8
   28f20:	pop	{r4, lr}
   28f24:	b	28dc0 <luaL_where@@Base+0x8cbc>
   28f28:	ldrb	r3, [r0, #124]	; 0x7c
   28f2c:	push	{r4, r6, r7, lr}
   28f30:	mov	r4, r0
   28f34:	and	r3, r3, #31
   28f38:	cmp	r3, #21
   28f3c:	ldrd	r0, [r0, #136]	; 0x88
   28f40:	ldrd	r6, [r4, #152]	; 0x98
   28f44:	ldrb	r3, [r4, #125]	; 0x7d
   28f48:	beq	28f9c <luaL_where@@Base+0x8e98>
   28f4c:	cmp	r3, #44	; 0x2c
   28f50:	beq	28f7c <luaL_where@@Base+0x8e78>
   28f54:	cmp	r3, #45	; 0x2d
   28f58:	beq	29060 <luaL_where@@Base+0x8f5c>
   28f5c:	orrs	r3, r6, r7
   28f60:	moveq	r2, #1
   28f64:	moveq	r3, #0
   28f68:	bne	2903c <luaL_where@@Base+0x8f38>
   28f6c:	mov	r0, r4
   28f70:	mov	r1, #29
   28f74:	pop	{r4, r6, r7, lr}
   28f78:	b	28dc0 <luaL_where@@Base+0x8cbc>
   28f7c:	orrs	r3, r6, r7
   28f80:	bne	28ff4 <luaL_where@@Base+0x8ef0>
   28f84:	mov	r0, r4
   28f88:	mov	r2, #0
   28f8c:	mov	r3, #-2147483648	; 0x80000000
   28f90:	mov	r1, #29
   28f94:	pop	{r4, r6, r7, lr}
   28f98:	b	28dc0 <luaL_where@@Base+0x8cbc>
   28f9c:	cmp	r3, #44	; 0x2c
   28fa0:	beq	29078 <luaL_where@@Base+0x8f74>
   28fa4:	cmp	r3, #45	; 0x2d
   28fa8:	bne	29018 <luaL_where@@Base+0x8f14>
   28fac:	orrs	r3, r6, r7
   28fb0:	beq	28f84 <luaL_where@@Base+0x8e80>
   28fb4:	cmp	r1, #-2147483648	; 0x80000000
   28fb8:	and	r3, r6, r7
   28fbc:	cmpeq	r0, #0
   28fc0:	moveq	r2, #1
   28fc4:	movne	r2, #0
   28fc8:	cmn	r3, #1
   28fcc:	movne	r3, #0
   28fd0:	moveq	r3, #1
   28fd4:	tst	r2, r3
   28fd8:	movne	r2, #0
   28fdc:	movne	r3, #0
   28fe0:	bne	28f6c <luaL_where@@Base+0x8e68>
   28fe4:	mov	r2, r6
   28fe8:	mov	r3, r7
   28fec:	bl	6e4e8 <luaL_openlibs@@Base+0x4d28>
   28ff0:	b	28f6c <luaL_where@@Base+0x8e68>
   28ff4:	mov	r2, r6
   28ff8:	mov	r3, r7
   28ffc:	bl	6e5bc <luaL_openlibs@@Base+0x4dfc>
   29000:	mov	r2, r0
   29004:	mov	r3, r1
   29008:	mov	r0, r4
   2900c:	mov	r1, #29
   29010:	pop	{r4, r6, r7, lr}
   29014:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29018:	mov	r2, r6
   2901c:	mov	r3, r7
   29020:	bl	1bd64 <_start@@Base+0x89b4>
   29024:	mov	r2, r0
   29028:	mov	r3, r1
   2902c:	mov	r0, r4
   29030:	mov	r1, #29
   29034:	pop	{r4, r6, r7, lr}
   29038:	b	28dc0 <luaL_where@@Base+0x8cbc>
   2903c:	mov	r2, r6
   29040:	mov	r3, r7
   29044:	bl	1bc84 <_start@@Base+0x88d4>
   29048:	mov	r2, r0
   2904c:	mov	r3, r1
   29050:	mov	r0, r4
   29054:	mov	r1, #29
   29058:	pop	{r4, r6, r7, lr}
   2905c:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29060:	orrs	r3, r6, r7
   29064:	beq	28f84 <luaL_where@@Base+0x8e80>
   29068:	mov	r2, r6
   2906c:	mov	r3, r7
   29070:	bl	6e5bc <luaL_openlibs@@Base+0x4dfc>
   29074:	b	28f6c <luaL_where@@Base+0x8e68>
   29078:	orrs	r3, r6, r7
   2907c:	beq	28f84 <luaL_where@@Base+0x8e80>
   29080:	cmp	r1, #-2147483648	; 0x80000000
   29084:	and	r3, r6, r7
   29088:	cmpeq	r0, #0
   2908c:	moveq	r2, #1
   29090:	movne	r2, #0
   29094:	cmn	r3, #1
   29098:	movne	r3, #0
   2909c:	moveq	r3, #1
   290a0:	tst	r2, r3
   290a4:	bne	28f84 <luaL_where@@Base+0x8e80>
   290a8:	mov	r2, r6
   290ac:	mov	r3, r7
   290b0:	bl	6e4e8 <luaL_openlibs@@Base+0x4d28>
   290b4:	mov	r2, r0
   290b8:	mov	r3, r1
   290bc:	b	28f6c <luaL_where@@Base+0x8e68>
   290c0:	ldrb	r3, [r0, #125]	; 0x7d
   290c4:	ldr	r2, [r0, #144]	; 0x90
   290c8:	push	{r4, lr}
   290cc:	sub	r3, r3, #36	; 0x24
   290d0:	mov	r4, r0
   290d4:	and	r2, r2, #63	; 0x3f
   290d8:	ldrd	r0, [r0, #136]	; 0x88
   290dc:	bl	15844 <_start@@Base+0x2494>
   290e0:	mov	r2, r0
   290e4:	mov	r3, r1
   290e8:	mov	r0, r4
   290ec:	mov	r1, #29
   290f0:	pop	{r4, lr}
   290f4:	b	28dc0 <luaL_where@@Base+0x8cbc>
   290f8:	push	{r4, r5}
   290fc:	mov	r1, #29
   29100:	ldrd	r4, [r0, #136]	; 0x88
   29104:	mvn	r2, r4
   29108:	mvn	r3, r5
   2910c:	pop	{r4, r5}
   29110:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29114:	push	{r4, r5, r6, r7}
   29118:	mov	r4, #0
   2911c:	ldr	r2, [r0, #140]	; 0x8c
   29120:	rev	r2, r2
   29124:	orr	r6, r4, r2
   29128:	ldr	r3, [r0, #136]	; 0x88
   2912c:	mov	r2, r6
   29130:	rev	r3, r3
   29134:	mov	r1, #29
   29138:	pop	{r4, r5, r6, r7}
   2913c:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29140:	vldr	s15, [r0, #128]	; 0x80
   29144:	mov	r1, #28
   29148:	vcvt.f64.s32	d7, s15
   2914c:	vmov	r2, r3, d7
   29150:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29154:	vldr	s15, [r0, #128]	; 0x80
   29158:	mov	r1, #28
   2915c:	vcvt.f64.u32	d7, s15
   29160:	vmov	r2, r3, d7
   29164:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29168:	ldrh	r3, [r0, #122]	; 0x7a
   2916c:	ldr	r2, [r0, #128]	; 0x80
   29170:	ands	r3, r3, #2048	; 0x800
   29174:	bne	29180 <luaL_where@@Base+0x907c>
   29178:	mov	r1, #29
   2917c:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29180:	asr	r3, r2, #31
   29184:	mov	r1, #29
   29188:	b	28dc0 <luaL_where@@Base+0x8cbc>
   2918c:	push	{r4, lr}
   29190:	mov	r4, r0
   29194:	ldrd	r0, [r0, #136]	; 0x88
   29198:	bl	6e238 <luaL_openlibs@@Base+0x4a78>
   2919c:	mov	r2, r0
   291a0:	mov	r3, r1
   291a4:	mov	r0, r4
   291a8:	mov	r1, #28
   291ac:	pop	{r4, lr}
   291b0:	b	28dc0 <luaL_where@@Base+0x8cbc>
   291b4:	push	{r4, lr}
   291b8:	mov	r4, r0
   291bc:	ldrd	r0, [r0, #136]	; 0x88
   291c0:	bl	6e224 <luaL_openlibs@@Base+0x4a64>
   291c4:	mov	r2, r0
   291c8:	mov	r3, r1
   291cc:	mov	r0, r4
   291d0:	mov	r1, #28
   291d4:	pop	{r4, lr}
   291d8:	b	28dc0 <luaL_where@@Base+0x8cbc>
   291dc:	push	{r4, lr}
   291e0:	mov	r4, r0
   291e4:	ldrd	r0, [r0, #136]	; 0x88
   291e8:	bl	6e650 <luaL_openlibs@@Base+0x4e90>
   291ec:	mov	r2, r0
   291f0:	mov	r3, r1
   291f4:	mov	r0, r4
   291f8:	mov	r1, #29
   291fc:	pop	{r4, lr}
   29200:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29204:	push	{r4, lr}
   29208:	mov	r4, r0
   2920c:	ldrd	r0, [r0, #136]	; 0x88
   29210:	bl	6e6d0 <luaL_openlibs@@Base+0x4f10>
   29214:	mov	r2, r0
   29218:	mov	r3, r1
   2921c:	mov	r0, r4
   29220:	mov	r1, #29
   29224:	pop	{r4, lr}
   29228:	b	28dc0 <luaL_where@@Base+0x8cbc>
   2922c:	ldrb	r2, [r0, #132]	; 0x84
   29230:	tst	r2, #64	; 0x40
   29234:	beq	29244 <luaL_where@@Base+0x9140>
   29238:	mov	r3, #0
   2923c:	mov	r0, r3
   29240:	bx	lr
   29244:	ldrd	r2, [r0, #152]	; 0x98
   29248:	ldrh	ip, [r0, #128]	; 0x80
   2924c:	push	{r4, lr}
   29250:	mov	r1, #28
   29254:	eor	r3, r3, #-2147483648	; 0x80000000
   29258:	strh	ip, [r0, #122]	; 0x7a
   2925c:	mov	r4, r0
   29260:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   29264:	mov	r3, #1
   29268:	strh	r0, [r4, #120]	; 0x78
   2926c:	mov	r0, r3
   29270:	pop	{r4, pc}
   29274:	ldrb	r2, [r0, #132]	; 0x84
   29278:	tst	r2, #64	; 0x40
   2927c:	beq	2928c <luaL_where@@Base+0x9188>
   29280:	mov	r3, #0
   29284:	mov	r0, r3
   29288:	bx	lr
   2928c:	ldrd	r2, [r0, #152]	; 0x98
   29290:	ldrh	ip, [r0, #128]	; 0x80
   29294:	push	{r4, lr}
   29298:	mov	r1, #28
   2929c:	eor	r3, r3, #-2147483648	; 0x80000000
   292a0:	strh	ip, [r0, #120]	; 0x78
   292a4:	mov	r4, r0
   292a8:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   292ac:	mov	r3, #1
   292b0:	strh	r0, [r4, #122]	; 0x7a
   292b4:	mov	r0, r3
   292b8:	pop	{r4, pc}
   292bc:	vldr	d7, [pc, #84]	; 29318 <luaL_where@@Base+0x9214>
   292c0:	vldr	d6, [r0, #136]	; 0x88
   292c4:	vcmp.f64	d6, d7
   292c8:	vmrs	APSR_nzcv, fpscr
   292cc:	beq	292dc <luaL_where@@Base+0x91d8>
   292d0:	mov	r3, #0
   292d4:	mov	r0, r3
   292d8:	bx	lr
   292dc:	mov	r3, #90	; 0x5a
   292e0:	push	{r4, lr}
   292e4:	mov	r2, #0
   292e8:	strb	r3, [r0, #125]	; 0x7d
   292ec:	mov	r1, #28
   292f0:	ldr	r3, [pc, #40]	; 29320 <luaL_where@@Base+0x921c>
   292f4:	mov	r4, r0
   292f8:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   292fc:	mov	r3, #50	; 0x32
   29300:	strb	r3, [r4, #125]	; 0x7d
   29304:	mov	r3, #1
   29308:	strh	r0, [r4, #120]	; 0x78
   2930c:	mov	r0, r3
   29310:	pop	{r4, pc}
   29314:	nop			; (mov r0, r0)
   29318:	andeq	r0, r0, r0
   2931c:	andmi	r0, r0, r0
   29320:	svccc	0x00f00000	; IMB
   29324:	push	{r4, r6, r7, lr}
   29328:	mov	r4, r0
   2932c:	ldrd	r6, [r0, #152]	; 0x98
   29330:	orrs	r3, r6, r7
   29334:	bne	29344 <luaL_where@@Base+0x9240>
   29338:	ldrh	r3, [r0, #120]	; 0x78
   2933c:	mov	r0, r3
   29340:	pop	{r4, r6, r7, pc}
   29344:	rsbs	r2, r6, #0
   29348:	mov	r1, #41	; 0x29
   2934c:	rsc	r3, r7, #0
   29350:	strb	r1, [r0, #125]	; 0x7d
   29354:	mov	r1, #29
   29358:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   2935c:	mov	r3, #1
   29360:	strh	r0, [r4, #122]	; 0x7a
   29364:	mov	r0, r3
   29368:	pop	{r4, r6, r7, pc}
   2936c:	ldrh	r1, [r0, #120]	; 0x78
   29370:	ldrh	r2, [r0, #122]	; 0x7a
   29374:	cmp	r1, r2
   29378:	beq	29384 <luaL_where@@Base+0x9280>
   2937c:	mov	r0, #0
   29380:	bx	lr
   29384:	ldrb	r2, [r0, #124]	; 0x7c
   29388:	and	r2, r2, #31
   2938c:	cmp	r2, #14
   29390:	beq	2937c <luaL_where@@Base+0x9278>
   29394:	ldr	r1, [pc, #36]	; 293c0 <luaL_where@@Base+0x92bc>
   29398:	lsr	r2, r1, r2
   2939c:	ands	r2, r2, #1
   293a0:	beq	293b4 <luaL_where@@Base+0x92b0>
   293a4:	mov	r2, #0
   293a8:	mov	r3, #0
   293ac:	mov	r1, #29
   293b0:	b	28dc0 <luaL_where@@Base+0x8cbc>
   293b4:	str	r2, [r0, #120]	; 0x78
   293b8:	mov	r0, #2
   293bc:	bx	lr
   293c0:	rsbeq	r4, r0, r0
   293c4:	ldrh	r2, [r0, #130]	; 0x82
   293c8:	ldr	r3, [r0, #16]
   293cc:	push	{r4, r5, r6, r7, lr}
   293d0:	sub	sp, sp, #12
   293d4:	add	r3, r3, r2, lsl #3
   293d8:	ldrb	r5, [r3, #5]
   293dc:	cmp	r5, #29
   293e0:	beq	293f4 <luaL_where@@Base+0x92f0>
   293e4:	mov	r3, #0
   293e8:	mov	r0, r3
   293ec:	add	sp, sp, #12
   293f0:	pop	{r4, r5, r6, r7, pc}
   293f4:	mov	r4, r0
   293f8:	ldrd	r6, [r0, #152]	; 0x98
   293fc:	ldrb	ip, [r4, #125]	; 0x7d
   29400:	ldrd	r0, [r3, #8]
   29404:	mov	r2, r6
   29408:	mov	r3, r7
   2940c:	str	ip, [sp]
   29410:	bl	15c5c <_start@@Base+0x28ac>
   29414:	ldrb	r3, [r4, #132]	; 0x84
   29418:	tst	r3, #64	; 0x40
   2941c:	bne	293e4 <luaL_where@@Base+0x92e0>
   29420:	ldrh	ip, [r4, #128]	; 0x80
   29424:	mov	r2, r0
   29428:	mov	r3, r1
   2942c:	strh	ip, [r4, #120]	; 0x78
   29430:	mov	r1, r5
   29434:	mov	r0, r4
   29438:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   2943c:	mov	r3, #1
   29440:	strh	r0, [r4, #122]	; 0x7a
   29444:	mov	r0, r3
   29448:	add	sp, sp, #12
   2944c:	pop	{r4, r5, r6, r7, pc}
   29450:	ldrb	r3, [r0, #132]	; 0x84
   29454:	ands	r3, r3, #64	; 0x40
   29458:	bne	294f8 <luaL_where@@Base+0x93f4>
   2945c:	ldrh	r1, [r0, #130]	; 0x82
   29460:	ldr	r2, [r0, #16]
   29464:	push	{r4, lr}
   29468:	mov	r4, r0
   2946c:	add	ip, r2, r1, lsl #3
   29470:	ldrb	ip, [ip, #5]
   29474:	cmp	ip, #23
   29478:	beq	29484 <luaL_where@@Base+0x9380>
   2947c:	mov	r0, r3
   29480:	pop	{r4, pc}
   29484:	ldrb	ip, [r0, #124]	; 0x7c
   29488:	ldr	lr, [pc, #152]	; 29528 <luaL_where@@Base+0x9424>
   2948c:	ldr	r1, [r2, r1, lsl #3]
   29490:	and	r2, ip, #31
   29494:	ldr	ip, [r0, #144]	; 0x90
   29498:	lsr	r2, lr, r2
   2949c:	tst	r2, #1
   294a0:	movne	r2, #63	; 0x3f
   294a4:	moveq	r2, #31
   294a8:	and	r1, r1, r2
   294ac:	and	ip, ip, r2
   294b0:	add	r1, r1, ip
   294b4:	cmp	r2, r1
   294b8:	bge	294d8 <luaL_where@@Base+0x93d4>
   294bc:	ldrb	ip, [r0, #125]	; 0x7d
   294c0:	sub	lr, ip, #36	; 0x24
   294c4:	cmp	lr, #1
   294c8:	bls	29504 <luaL_where@@Base+0x9400>
   294cc:	cmp	ip, #38	; 0x26
   294d0:	andne	r1, r1, r2
   294d4:	moveq	r1, r2
   294d8:	ldrh	r3, [r4, #128]	; 0x80
   294dc:	mov	r0, r4
   294e0:	strh	r3, [r4, #120]	; 0x78
   294e4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   294e8:	mov	r3, #1
   294ec:	strh	r0, [r4, #122]	; 0x7a
   294f0:	mov	r0, r3
   294f4:	pop	{r4, pc}
   294f8:	mov	r3, #0
   294fc:	mov	r0, r3
   29500:	bx	lr
   29504:	cmp	r2, #31
   29508:	streq	r3, [r0, #120]	; 0x78
   2950c:	moveq	r3, #2
   29510:	beq	2947c <luaL_where@@Base+0x9378>
   29514:	mov	r2, #0
   29518:	mov	r3, #0
   2951c:	mov	r1, #29
   29520:	pop	{r4, lr}
   29524:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29528:	rsbeq	r4, r0, r0
   2952c:	and	r1, r1, #31
   29530:	sub	r1, r1, #14
   29534:	cmp	r1, #8
   29538:	ldrls	pc, [pc, r1, lsl #2]
   2953c:	b	295d8 <luaL_where@@Base+0x94d4>
   29540:	andeq	r9, r2, r0, ror r5
   29544:	andeq	r9, r2, ip, ror r5
   29548:	andeq	r9, r2, r4, lsl #11
   2954c:	andeq	r9, r2, ip, lsl #11
   29550:	andeq	r9, r2, r0, lsr #11
   29554:			; <UNDEFINED> instruction: 0x000295b0
   29558:			; <UNDEFINED> instruction: 0x000295b0
   2955c:	andeq	r9, r2, r4, ror #10
   29560:	andeq	r9, r2, r4, ror #10
   29564:	ldrd	r2, [r2]
   29568:	mov	r1, #29
   2956c:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29570:	ldrd	r2, [r2]
   29574:	mov	r1, #28
   29578:	b	28dc0 <luaL_where@@Base+0x8cbc>
   2957c:	ldrsb	r1, [r2]
   29580:	b	26ccc <luaL_where@@Base+0x6bc8>
   29584:	ldrb	r1, [r2]
   29588:	b	26ccc <luaL_where@@Base+0x6bc8>
   2958c:	ldrb	r3, [r2, #1]
   29590:	ldrb	r1, [r2]
   29594:	orr	r1, r1, r3, lsl #8
   29598:	sxth	r1, r1
   2959c:	b	26ccc <luaL_where@@Base+0x6bc8>
   295a0:	ldrb	r3, [r2, #1]
   295a4:	ldrb	r1, [r2]
   295a8:	orr	r1, r1, r3, lsl #8
   295ac:	b	26ccc <luaL_where@@Base+0x6bc8>
   295b0:	push	{lr}		; (str lr, [sp, #-4]!)
   295b4:	ldrb	lr, [r2, #1]
   295b8:	ldrb	r1, [r2]
   295bc:	ldrb	ip, [r2, #2]
   295c0:	ldrb	r3, [r2, #3]
   295c4:	orr	r1, r1, lr, lsl #8
   295c8:	pop	{lr}		; (ldr lr, [sp], #4)
   295cc:	orr	r1, r1, ip, lsl #16
   295d0:	orr	r1, r1, r3, lsl #24
   295d4:	b	26ccc <luaL_where@@Base+0x6bc8>
   295d8:	mov	r0, #0
   295dc:	bx	lr
   295e0:	ldr	r2, [r0, #128]	; 0x80
   295e4:	ldrb	r1, [r0, #124]	; 0x7c
   295e8:	b	2952c <luaL_where@@Base+0x9428>
   295ec:	ldrb	r3, [r0, #132]	; 0x84
   295f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   295f4:	ldr	r6, [r0, #144]	; 0x90
   295f8:	lsr	r3, r3, #6
   295fc:	eor	r3, r3, #1
   29600:	ldr	r5, [r6, #12]
   29604:	cmp	r5, #1
   29608:	movgt	r3, #0
   2960c:	andle	r3, r3, #1
   29610:	cmp	r3, #0
   29614:	bne	29620 <luaL_where@@Base+0x951c>
   29618:	mov	r0, r3
   2961c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29620:	ldrh	r7, [r0, #128]	; 0x80
   29624:	ldr	r3, [r0, #16]
   29628:	mov	r4, r0
   2962c:	add	r2, r3, r7, lsl #3
   29630:	ldrb	r2, [r2, #5]
   29634:	cmp	r2, #64	; 0x40
   29638:	beq	29648 <luaL_where@@Base+0x9544>
   2963c:	mov	r3, #0
   29640:	mov	r0, r3
   29644:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29648:	ldrb	r8, [r0, #125]	; 0x7d
   2964c:	ldrh	r9, [r0, #130]	; 0x82
   29650:	cmp	r8, #8
   29654:	beq	296d0 <luaL_where@@Base+0x95cc>
   29658:	tst	r9, #32768	; 0x8000
   2965c:	bne	2963c <luaL_where@@Base+0x9538>
   29660:	ldr	r3, [r3, r9, lsl #3]
   29664:	cmp	r3, r5
   29668:	bne	296c8 <luaL_where@@Base+0x95c4>
   2966c:	cmp	r5, #1
   29670:	bne	296c8 <luaL_where@@Base+0x95c4>
   29674:	ldr	r3, [pc, #120]	; 296f4 <luaL_where@@Base+0x95f0>
   29678:	strh	r7, [r4, #120]	; 0x78
   2967c:	strh	r3, [r4, #124]	; 0x7c
   29680:	strh	r5, [r4, #122]	; 0x7a
   29684:	mov	r0, r4
   29688:	bl	27498 <luaL_where@@Base+0x7394>
   2968c:	ldr	r3, [r4, #16]
   29690:	add	r2, r6, #16
   29694:	lsl	r8, r8, #8
   29698:	orr	r8, r8, #147	; 0x93
   2969c:	uxth	r1, r0
   296a0:	mov	r7, r0
   296a4:	add	r3, r3, r1, lsl #3
   296a8:	mov	r0, r4
   296ac:	ldrb	r1, [r3, #4]
   296b0:	bl	2952c <luaL_where@@Base+0x9428>
   296b4:	strh	r8, [r4, #124]	; 0x7c
   296b8:	strh	r7, [r4, #120]	; 0x78
   296bc:	mov	r3, r5
   296c0:	strh	r0, [r4, #122]	; 0x7a
   296c4:	b	29618 <luaL_where@@Base+0x9514>
   296c8:	mov	r3, #4
   296cc:	b	29618 <luaL_where@@Base+0x9514>
   296d0:	mov	r1, r5
   296d4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   296d8:	ldr	r3, [pc, #24]	; 296f8 <luaL_where@@Base+0x95f4>
   296dc:	strh	r9, [r4, #120]	; 0x78
   296e0:	strh	r3, [r4, #124]	; 0x7c
   296e4:	strh	r0, [r4, #122]	; 0x7a
   296e8:	mov	r0, r4
   296ec:	bl	27498 <luaL_where@@Base+0x7394>
   296f0:	b	2966c <luaL_where@@Base+0x9568>
   296f4:	andeq	r4, r0, r0, lsl r6
   296f8:	muleq	r0, r3, r8
   296fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29700:	sub	lr, r1, #4
   29704:	ldr	sl, [r0, #92]	; 0x5c
   29708:	add	r7, sl, #64	; 0x40
   2970c:	cmp	r7, lr
   29710:	bcs	29774 <luaL_where@@Base+0x9670>
   29714:	ldr	r8, [pc, #352]	; 2987c <luaL_where@@Base+0x9778>
   29718:	b	29740 <luaL_where@@Base+0x963c>
   2971c:	lsr	fp, r4, #8
   29720:	cmp	ip, #1
   29724:	uxtb	ip, fp
   29728:	bne	29734 <luaL_where@@Base+0x9630>
   2972c:	cmp	ip, r2
   29730:	beq	2977c <luaL_where@@Base+0x9678>
   29734:	cmp	r7, r5
   29738:	mov	lr, r5
   2973c:	bcs	29774 <luaL_where@@Base+0x9670>
   29740:	mov	r5, lr
   29744:	mov	r9, lr
   29748:	ldr	r4, [r5], #-4
   2974c:	uxtb	r6, r4
   29750:	lsl	ip, r6, #1
   29754:	ldrh	ip, [r8, ip]
   29758:	and	ip, ip, #7
   2975c:	cmp	ip, #2
   29760:	bne	2971c <luaL_where@@Base+0x9618>
   29764:	lsr	r4, r4, #8
   29768:	uxtb	r4, r4
   2976c:	cmp	r4, r2
   29770:	bhi	29734 <luaL_where@@Base+0x9630>
   29774:	mov	r0, #0
   29778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2977c:	sub	r2, r6, #41	; 0x29
   29780:	cmp	r2, #1
   29784:	bhi	29774 <luaL_where@@Base+0x9670>
   29788:	cmp	r7, lr
   2978c:	bcs	297dc <luaL_where@@Base+0x96d8>
   29790:	rsb	r2, r7, #3
   29794:	add	r2, r2, r5
   29798:	bic	r2, r2, #3
   2979c:	ldr	r5, [pc, #220]	; 29880 <luaL_where@@Base+0x977c>
   297a0:	sub	r2, lr, r2
   297a4:	mov	ip, r4
   297a8:	b	297b8 <luaL_where@@Base+0x96b4>
   297ac:	cmp	r2, lr
   297b0:	beq	297dc <luaL_where@@Base+0x96d8>
   297b4:	ldr	ip, [lr, #-4]!
   297b8:	uxtb	r7, ip
   297bc:	cmp	r7, #88	; 0x58
   297c0:	bne	297ac <luaL_where@@Base+0x96a8>
   297c4:	add	ip, r5, ip, lsr #16
   297c8:	add	ip, lr, ip, lsl #2
   297cc:	cmp	r1, ip
   297d0:	cmpcs	ip, r9
   297d4:	bls	297ac <luaL_where@@Base+0x96a8>
   297d8:	b	29774 <luaL_where@@Base+0x9670>
   297dc:	cmp	r6, #41	; 0x29
   297e0:	lsr	r1, r4, #16
   297e4:	beq	29820 <luaL_where@@Base+0x971c>
   297e8:	ldr	r2, [sl, #16]
   297ec:	cmp	r3, #19
   297f0:	add	r3, r2, r1, lsl #3
   297f4:	ldr	ip, [r3, #4]
   297f8:	beq	29844 <luaL_where@@Base+0x9740>
   297fc:	cmn	ip, #14
   29800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29804:	ldreq	r2, [r2, r1, lsl #3]
   29808:	ldrdne	r2, [r3]
   2980c:	mov	r1, #28
   29810:	vmoveq	s15, r2
   29814:	vcvteq.f64.s32	d7, s15
   29818:	vmoveq	r2, r3, d7
   2981c:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29820:	cmp	r3, #19
   29824:	sxth	r1, r1
   29828:	beq	29858 <luaL_where@@Base+0x9754>
   2982c:	vmov	s15, r1
   29830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29834:	mov	r1, #28
   29838:	vcvt.f64.s32	d7, s15
   2983c:	vmov	r2, r3, d7
   29840:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29844:	cmn	ip, #14
   29848:	bne	29860 <luaL_where@@Base+0x975c>
   2984c:	ldr	r3, [r2, r1, lsl #3]
   29850:	vmov	s15, r3
   29854:	vmov	r1, s15
   29858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2985c:	b	26ccc <luaL_where@@Base+0x6bc8>
   29860:	vldr	d6, [r3]
   29864:	vcvt.s32.f64	s15, d6
   29868:	vcvt.f64.s32	d5, s15
   2986c:	vcmp.f64	d5, d6
   29870:	vmrs	APSR_nzcv, fpscr
   29874:	bne	29774 <luaL_where@@Base+0x9670>
   29878:	b	29854 <luaL_where@@Base+0x9750>
   2987c:	andeq	pc, r6, ip, ror r0	; <UNPREDICTABLE>
   29880:	svccc	0x00ff8001
   29884:	ldr	r3, [r0, #100]	; 0x64
   29888:	mov	r2, r0
   2988c:	ands	r3, r3, #65536	; 0x10000
   29890:	beq	298cc <luaL_where@@Base+0x97c8>
   29894:	ldrb	r1, [r0, #124]	; 0x7c
   29898:	ldr	r3, [pc, #52]	; 298d4 <luaL_where@@Base+0x97d0>
   2989c:	ldr	ip, [r0, #128]	; 0x80
   298a0:	and	r1, r1, #31
   298a4:	lsr	r3, r3, r1
   298a8:	tst	r3, #1
   298ac:	beq	298bc <luaL_where@@Base+0x97b8>
   298b0:	ldrd	r2, [ip, #8]
   298b4:	mov	r1, #29
   298b8:	b	28dc0 <luaL_where@@Base+0x8cbc>
   298bc:	ldr	r3, [ip, #8]
   298c0:	mov	r0, #2
   298c4:	str	r3, [r2, #120]	; 0x78
   298c8:	bx	lr
   298cc:	mov	r0, r3
   298d0:	bx	lr
   298d4:	rsbeq	r4, r0, r0
   298d8:	push	{r4, lr}
   298dc:	mov	r4, r0
   298e0:	ldr	r0, [r0, #128]	; 0x80
   298e4:	sub	sp, sp, #8
   298e8:	mov	r2, #2
   298ec:	mov	r1, sp
   298f0:	add	r0, r0, #16
   298f4:	bl	189f0 <_start@@Base+0x5640>
   298f8:	cmp	r0, #0
   298fc:	moveq	r0, #3
   29900:	beq	29914 <luaL_where@@Base+0x9810>
   29904:	mov	r0, r4
   29908:	ldrd	r2, [sp]
   2990c:	mov	r1, #28
   29910:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   29914:	add	sp, sp, #8
   29918:	pop	{r4, pc}
   2991c:	push	{r4, lr}
   29920:	mov	r4, r0
   29924:	ldr	r0, [r0, #144]	; 0x90
   29928:	vldr	d0, [r4, #136]	; 0x88
   2992c:	bl	12ff4 <ldexp@plt>
   29930:	mov	r0, r4
   29934:	mov	r1, #28
   29938:	pop	{r4, lr}
   2993c:	vmov	r2, r3, d0
   29940:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29944:	ldrb	r3, [r0, #132]	; 0x84
   29948:	ands	r3, r3, #64	; 0x40
   2994c:	bne	29988 <luaL_where@@Base+0x9884>
   29950:	push	{r4, r5, r6, r8, r9, lr}
   29954:	mov	r4, r0
   29958:	ldrh	r0, [r0, #130]	; 0x82
   2995c:	ldr	r1, [r4, #16]
   29960:	sub	sp, sp, #8
   29964:	add	r2, r1, r0, lsl #3
   29968:	ldrb	r5, [r2, #5]
   2996c:	cmp	r5, #23
   29970:	beq	29994 <luaL_where@@Base+0x9890>
   29974:	cmp	r5, #29
   29978:	beq	299dc <luaL_where@@Base+0x98d8>
   2997c:	mov	r0, r3
   29980:	add	sp, sp, #8
   29984:	pop	{r4, r5, r6, r8, r9, pc}
   29988:	mov	r3, #0
   2998c:	mov	r0, r3
   29990:	bx	lr
   29994:	ldrb	r2, [r4, #125]	; 0x7d
   29998:	ldr	r0, [r1, r0, lsl #3]
   2999c:	ldr	r1, [r4, #144]	; 0x90
   299a0:	bl	1abbc <_start@@Base+0x780c>
   299a4:	ldrh	r3, [r4, #128]	; 0x80
   299a8:	strh	r3, [r4, #120]	; 0x78
   299ac:	mov	r5, r0
   299b0:	mov	r0, r4
   299b4:	bl	27498 <luaL_where@@Base+0x7394>
   299b8:	mov	r1, r5
   299bc:	strh	r0, [r4, #120]	; 0x78
   299c0:	mov	r0, r4
   299c4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   299c8:	ldr	r2, [pc, #112]	; 29a40 <luaL_where@@Base+0x993c>
   299cc:	mov	r3, #1
   299d0:	strh	r2, [r4, #124]	; 0x7c
   299d4:	strh	r0, [r4, #122]	; 0x7a
   299d8:	b	2997c <luaL_where@@Base+0x9878>
   299dc:	ldrd	r0, [r2, #8]
   299e0:	ldrb	r3, [r4, #125]	; 0x7d
   299e4:	ldr	r2, [r4, #144]	; 0x90
   299e8:	str	r3, [sp]
   299ec:	asr	r3, r2, #31
   299f0:	bl	15c5c <_start@@Base+0x28ac>
   299f4:	ldrh	r3, [r4, #128]	; 0x80
   299f8:	ldrh	r6, [r4, #132]	; 0x84
   299fc:	strh	r3, [r4, #120]	; 0x78
   29a00:	mov	r8, r0
   29a04:	mov	r0, r4
   29a08:	mov	r9, r1
   29a0c:	bl	27498 <luaL_where@@Base+0x7394>
   29a10:	mov	r3, r9
   29a14:	mov	r2, r8
   29a18:	mov	r1, r5
   29a1c:	strh	r0, [r4, #120]	; 0x78
   29a20:	mov	r0, r4
   29a24:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   29a28:	mov	r3, #1
   29a2c:	strh	r6, [r4, #124]	; 0x7c
   29a30:	strh	r0, [r4, #122]	; 0x7a
   29a34:	mov	r0, r3
   29a38:	add	sp, sp, #8
   29a3c:	pop	{r4, r5, r6, r8, r9, pc}
   29a40:	andeq	r2, r0, r3, lsl r1
   29a44:	ldr	r3, [r0, #100]	; 0x64
   29a48:	ands	r3, r3, #2097152	; 0x200000
   29a4c:	beq	29abc <luaL_where@@Base+0x99b8>
   29a50:	ldrb	r2, [r0, #125]	; 0x7d
   29a54:	ldrb	r3, [r0, #124]	; 0x7c
   29a58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29a5c:	sub	sp, sp, #1056	; 0x420
   29a60:	sub	sp, sp, #4
   29a64:	cmp	r2, #91	; 0x5b
   29a68:	and	r3, r3, #31
   29a6c:	str	r3, [sp, #28]
   29a70:	ldrhne	r3, [r0, #122]	; 0x7a
   29a74:	add	r1, sp, #32
   29a78:	add	r2, sp, #1040	; 0x410
   29a7c:	moveq	r3, #0
   29a80:	str	r0, [sp, #12]
   29a84:	str	r1, [sp, #16]
   29a88:	str	r2, [sp, #20]
   29a8c:	ldrh	r1, [r0, #120]	; 0x78
   29a90:	mov	r4, r0
   29a94:	mov	r2, #0
   29a98:	add	r0, sp, #12
   29a9c:	str	r3, [sp, #24]
   29aa0:	bl	167cc <_start@@Base+0x341c>
   29aa4:	cmp	r0, #1
   29aa8:	movgt	r0, #0
   29aac:	ble	29ac4 <luaL_where@@Base+0x99c0>
   29ab0:	add	sp, sp, #1056	; 0x420
   29ab4:	add	sp, sp, #4
   29ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29abc:	mov	r0, r3
   29ac0:	bx	lr
   29ac4:	ldrsb	r3, [r4, #124]	; 0x7c
   29ac8:	ldr	r7, [sp, #16]
   29acc:	add	r6, sp, #32
   29ad0:	cmp	r3, #0
   29ad4:	ldrh	r3, [r4, #124]	; 0x7c
   29ad8:	movge	r8, #0
   29adc:	movlt	r8, #3456	; 0xd80
   29ae0:	str	r3, [sp]
   29ae4:	ldrh	r3, [r4, #122]	; 0x7a
   29ae8:	cmp	r7, r6
   29aec:	str	r3, [sp, #4]
   29af0:	bls	29bbc <luaL_where@@Base+0x9ab8>
   29af4:	mov	r3, r6
   29af8:	b	29b10 <luaL_where@@Base+0x9a0c>
   29afc:	str	r5, [r6]
   29b00:	mov	r3, r9
   29b04:	add	r6, r6, #4
   29b08:	cmp	r7, r3
   29b0c:	bls	29bbc <luaL_where@@Base+0x9ab8>
   29b10:	ldr	r5, [r3]
   29b14:	add	r9, r3, #4
   29b18:	lsrs	r2, r5, #16
   29b1c:	beq	29afc <luaL_where@@Base+0x99f8>
   29b20:	cmp	r2, #1
   29b24:	uxth	r2, r2
   29b28:	beq	29bf8 <luaL_where@@Base+0x9af4>
   29b2c:	cmp	r2, #2
   29b30:	beq	29c40 <luaL_where@@Base+0x9b3c>
   29b34:	cmp	r2, #3
   29b38:	beq	29bcc <luaL_where@@Base+0x9ac8>
   29b3c:	ldr	sl, [sp, #24]
   29b40:	sub	fp, r6, #4
   29b44:	and	r3, sl, #61440	; 0xf000
   29b48:	cmp	r3, #8192	; 0x2000
   29b4c:	ldr	r3, [r6, #-4]
   29b50:	beq	29c6c <luaL_where@@Base+0x9b68>
   29b54:	add	r2, r2, r8
   29b58:	uxth	r2, r2
   29b5c:	ldrh	r1, [r6, #-8]
   29b60:	strh	r3, [r4, #122]	; 0x7a
   29b64:	strh	r2, [r4, #124]	; 0x7c
   29b68:	strh	r1, [r4, #120]	; 0x78
   29b6c:	mov	r0, r4
   29b70:	bl	27498 <luaL_where@@Base+0x7394>
   29b74:	uxth	r5, r5
   29b78:	cmp	r5, #0
   29b7c:	moveq	r3, r9
   29b80:	str	r0, [r6, #-8]
   29b84:	moveq	r6, fp
   29b88:	beq	29b08 <luaL_where@@Base+0x9a04>
   29b8c:	ldr	r2, [r4, #2280]	; 0x8e8
   29b90:	mov	r6, fp
   29b94:	add	r1, r2, #1
   29b98:	add	r2, r4, r2, lsl #3
   29b9c:	add	ip, r2, #2144	; 0x860
   29ba0:	and	r1, r1, #15
   29ba4:	str	r1, [r4, #2280]	; 0x8e8
   29ba8:	mov	r3, r9
   29bac:	strh	r5, [ip, #8]
   29bb0:	strh	r0, [ip, #10]
   29bb4:	str	sl, [r2, #2156]	; 0x86c
   29bb8:	b	29b08 <luaL_where@@Base+0x9a04>
   29bbc:	ldr	r0, [sp, #32]
   29bc0:	add	sp, sp, #1056	; 0x420
   29bc4:	add	sp, sp, #4
   29bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29bcc:	ldr	r2, [sp, #28]
   29bd0:	add	r5, r3, #8
   29bd4:	cmp	r2, #21
   29bd8:	ldr	r1, [r3, #4]
   29bdc:	beq	29c28 <luaL_where@@Base+0x9b24>
   29be0:	mov	r0, r4
   29be4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   29be8:	str	r0, [r6]
   29bec:	mov	r3, r5
   29bf0:	add	r6, r6, #4
   29bf4:	b	29b08 <luaL_where@@Base+0x9a04>
   29bf8:	ldrh	r3, [sp]
   29bfc:	strh	r5, [r4, #120]	; 0x78
   29c00:	mov	r0, r4
   29c04:	strh	r3, [r4, #124]	; 0x7c
   29c08:	ldrh	r3, [sp, #4]
   29c0c:	strh	r3, [r4, #122]	; 0x7a
   29c10:	bl	25258 <luaL_where@@Base+0x5154>
   29c14:	add	r2, r6, #4
   29c18:	mov	r3, r9
   29c1c:	str	r0, [r6]
   29c20:	mov	r6, r2
   29c24:	b	29b08 <luaL_where@@Base+0x9a04>
   29c28:	mov	r2, r1
   29c2c:	asr	r3, r1, #31
   29c30:	mov	r0, r4
   29c34:	mov	r1, #29
   29c38:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   29c3c:	b	29be8 <luaL_where@@Base+0x9ae4>
   29c40:	ldr	r2, [pc, #96]	; 29ca8 <luaL_where@@Base+0x9ba4>
   29c44:	ldrh	r3, [r6, #-4]
   29c48:	strh	r2, [r4, #124]	; 0x7c
   29c4c:	ldr	r2, [pc, #88]	; 29cac <luaL_where@@Base+0x9ba8>
   29c50:	strh	r3, [r4, #120]	; 0x78
   29c54:	strh	r2, [r4, #122]	; 0x7a
   29c58:	mov	r0, r4
   29c5c:	bl	27498 <luaL_where@@Base+0x7394>
   29c60:	mov	r3, r9
   29c64:	str	r0, [r6, #-4]
   29c68:	b	29b08 <luaL_where@@Base+0x9a04>
   29c6c:	cmp	r7, r9
   29c70:	beq	29c84 <luaL_where@@Base+0x9b80>
   29c74:	add	r2, r2, r8
   29c78:	add	sl, sl, #4096	; 0x1000
   29c7c:	uxth	r2, r2
   29c80:	b	29b5c <luaL_where@@Base+0x9a58>
   29c84:	tst	r3, #32768	; 0x8000
   29c88:	bne	29c74 <luaL_where@@Base+0x9b70>
   29c8c:	ldr	r1, [r4, #16]
   29c90:	uxth	r0, r3
   29c94:	ldr	r1, [r1, r0, lsl #3]
   29c98:	cmn	r1, #1073741824	; 0x40000000
   29c9c:	movpl	r8, #0
   29ca0:	bpl	29b5c <luaL_where@@Base+0x9a58>
   29ca4:	b	29c74 <luaL_where@@Base+0x9b70>
   29ca8:	andeq	r5, r0, r5, lsl sl
   29cac:			; <UNDEFINED> instruction: 0x00000ab3
   29cb0:	ldrb	r2, [r0, #132]	; 0x84
   29cb4:	tst	r2, #64	; 0x40
   29cb8:	bne	29ccc <luaL_where@@Base+0x9bc8>
   29cbc:	add	r3, r0, #320	; 0x140
   29cc0:	ldrh	r3, [r3]
   29cc4:	cmp	r3, #0
   29cc8:	beq	29cd4 <luaL_where@@Base+0x9bd0>
   29ccc:	mov	r0, #0
   29cd0:	bx	lr
   29cd4:	b	29a44 <luaL_where@@Base+0x9940>
   29cd8:	push	{r4, r5, r6, r7, r8, lr}
   29cdc:	ldr	r5, [r0, #144]	; 0x90
   29ce0:	cmp	r5, #0
   29ce4:	beq	29d50 <luaL_where@@Base+0x9c4c>
   29ce8:	cmp	r5, #1
   29cec:	mov	r4, r0
   29cf0:	ldrh	r6, [r0, #120]	; 0x78
   29cf4:	beq	29d48 <luaL_where@@Base+0x9c44>
   29cf8:	add	r3, r5, #65536	; 0x10000
   29cfc:	cmp	r3, #131072	; 0x20000
   29d00:	bhi	29d64 <luaL_where@@Base+0x9c60>
   29d04:	cmp	r5, #0
   29d08:	blt	29dfc <luaL_where@@Base+0x9cf8>
   29d0c:	tst	r5, #1
   29d10:	bne	29d40 <luaL_where@@Base+0x9c3c>
   29d14:	ldr	r7, [pc, #276]	; 29e30 <luaL_where@@Base+0x9d2c>
   29d18:	uxth	r6, r6
   29d1c:	strh	r6, [r4, #120]	; 0x78
   29d20:	strh	r6, [r4, #122]	; 0x7a
   29d24:	strh	r7, [r4, #124]	; 0x7c
   29d28:	mov	r0, r4
   29d2c:	bl	27498 <luaL_where@@Base+0x7394>
   29d30:	asr	r5, r5, #1
   29d34:	tst	r5, #1
   29d38:	mov	r6, r0
   29d3c:	beq	29d18 <luaL_where@@Base+0x9c14>
   29d40:	asrs	r5, r5, #1
   29d44:	bne	29d70 <luaL_where@@Base+0x9c6c>
   29d48:	mov	r0, r6
   29d4c:	pop	{r4, r5, r6, r7, r8, pc}
   29d50:	mov	r2, #0
   29d54:	ldr	r3, [pc, #216]	; 29e34 <luaL_where@@Base+0x9d30>
   29d58:	mov	r1, #28
   29d5c:	pop	{r4, r5, r6, r7, r8, lr}
   29d60:	b	28dc0 <luaL_where@@Base+0x8cbc>
   29d64:	mov	r6, #0
   29d68:	mov	r0, r6
   29d6c:	pop	{r4, r5, r6, r7, r8, pc}
   29d70:	ldr	r8, [pc, #184]	; 29e30 <luaL_where@@Base+0x9d2c>
   29d74:	uxth	r6, r6
   29d78:	strh	r6, [r4, #120]	; 0x78
   29d7c:	strh	r6, [r4, #122]	; 0x7a
   29d80:	strh	r8, [r4, #124]	; 0x7c
   29d84:	mov	r0, r4
   29d88:	bl	27498 <luaL_where@@Base+0x7394>
   29d8c:	cmp	r5, #1
   29d90:	bne	29db4 <luaL_where@@Base+0x9cb0>
   29d94:	b	29de0 <luaL_where@@Base+0x9cdc>
   29d98:	strh	r8, [r4, #124]	; 0x7c
   29d9c:	strh	r7, [r4, #120]	; 0x78
   29da0:	strh	r7, [r4, #122]	; 0x7a
   29da4:	mov	r0, r4
   29da8:	bl	27498 <luaL_where@@Base+0x7394>
   29dac:	cmp	r5, #1
   29db0:	beq	29de0 <luaL_where@@Base+0x9cdc>
   29db4:	tst	r5, #1
   29db8:	uxth	r7, r0
   29dbc:	asr	r5, r5, #1
   29dc0:	beq	29d98 <luaL_where@@Base+0x9c94>
   29dc4:	strh	r6, [r4, #120]	; 0x78
   29dc8:	strh	r8, [r4, #124]	; 0x7c
   29dcc:	strh	r7, [r4, #122]	; 0x7a
   29dd0:	mov	r0, r4
   29dd4:	bl	27498 <luaL_where@@Base+0x7394>
   29dd8:	uxth	r6, r0
   29ddc:	b	29d98 <luaL_where@@Base+0x9c94>
   29de0:	ldr	r3, [pc, #72]	; 29e30 <luaL_where@@Base+0x9d2c>
   29de4:	strh	r0, [r4, #122]	; 0x7a
   29de8:	strh	r6, [r4, #120]	; 0x78
   29dec:	strh	r3, [r4, #124]	; 0x7c
   29df0:	mov	r0, r4
   29df4:	pop	{r4, r5, r6, r7, r8, lr}
   29df8:	b	27498 <luaL_where@@Base+0x7394>
   29dfc:	mov	r2, #0
   29e00:	ldr	r3, [pc, #44]	; 29e34 <luaL_where@@Base+0x9d30>
   29e04:	mov	r1, #28
   29e08:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   29e0c:	ldr	r3, [pc, #36]	; 29e38 <luaL_where@@Base+0x9d34>
   29e10:	strh	r6, [r4, #122]	; 0x7a
   29e14:	strh	r3, [r4, #124]	; 0x7c
   29e18:	rsb	r5, r5, #0
   29e1c:	strh	r0, [r4, #120]	; 0x78
   29e20:	mov	r0, r4
   29e24:	bl	27498 <luaL_where@@Base+0x7394>
   29e28:	mov	r6, r0
   29e2c:	b	29d0c <luaL_where@@Base+0x9c08>
   29e30:	andeq	r2, r0, lr, lsl #22
   29e34:	svccc	0x00f00000	; IMB
   29e38:	andeq	r2, r0, lr, lsl #24
   29e3c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29e40:	vldr	d7, [pc, #304]	; 29f78 <luaL_where@@Base+0x9e74>
   29e44:	ldrd	r8, [r0, #152]	; 0x98
   29e48:	mov	r4, r0
   29e4c:	vmov	d6, r8, r9
   29e50:	vcmp.f64	d6, d7
   29e54:	vmrs	APSR_nzcv, fpscr
   29e58:	beq	29e8c <luaL_where@@Base+0x9d88>
   29e5c:	vldr	d7, [pc, #284]	; 29f80 <luaL_where@@Base+0x9e7c>
   29e60:	vcmp.f64	d6, d7
   29e64:	vmrs	APSR_nzcv, fpscr
   29e68:	beq	29e98 <luaL_where@@Base+0x9d94>
   29e6c:	ldrb	r3, [r0, #125]	; 0x7d
   29e70:	cmp	r3, #43	; 0x2b
   29e74:	beq	29f50 <luaL_where@@Base+0x9e4c>
   29e78:	cmp	r3, #44	; 0x2c
   29e7c:	beq	29ee4 <luaL_where@@Base+0x9de0>
   29e80:	mov	r3, #0
   29e84:	mov	r0, r3
   29e88:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29e8c:	ldrh	r3, [r0, #120]	; 0x78
   29e90:	mov	r0, r3
   29e94:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29e98:	add	r3, r0, #223	; 0xdf
   29e9c:	sub	r2, r0, #432	; 0x1b0
   29ea0:	bic	r3, r3, #15
   29ea4:	sub	r3, r3, r2
   29ea8:	ldr	r1, [pc, #224]	; 29f90 <luaL_where@@Base+0x9e8c>
   29eac:	lsr	r3, r3, #2
   29eb0:	mvn	r2, #32768	; 0x8000
   29eb4:	ldrh	r5, [r0, #120]	; 0x78
   29eb8:	strh	r3, [r0, #122]	; 0x7a
   29ebc:	strh	r1, [r0, #124]	; 0x7c
   29ec0:	strh	r2, [r0, #120]	; 0x78
   29ec4:	bl	27498 <luaL_where@@Base+0x7394>
   29ec8:	mov	r3, #47	; 0x2f
   29ecc:	strb	r3, [r4, #125]	; 0x7d
   29ed0:	mov	r3, #1
   29ed4:	strh	r5, [r4, #120]	; 0x78
   29ed8:	strh	r0, [r4, #122]	; 0x7a
   29edc:	mov	r0, r3
   29ee0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29ee4:	ldr	r3, [pc, #168]	; 29f94 <luaL_where@@Base+0x9e90>
   29ee8:	mvn	r2, #0
   29eec:	and	r6, r2, r8
   29ef0:	and	r7, r3, r9
   29ef4:	orrs	r3, r6, r7
   29ef8:	bne	29e80 <luaL_where@@Base+0x9d7c>
   29efc:	ldr	r1, [pc, #148]	; 29f98 <luaL_where@@Base+0x9e94>
   29f00:	ldr	lr, [pc, #148]	; 29f9c <luaL_where@@Base+0x9e98>
   29f04:	and	r1, r1, r9, lsr #20
   29f08:	sub	ip, r1, #1
   29f0c:	cmp	ip, lr
   29f10:	bhi	29e80 <luaL_where@@Base+0x9d7c>
   29f14:	rsb	r1, r1, #2032	; 0x7f0
   29f18:	add	r1, r1, #14
   29f1c:	mov	sl, #0
   29f20:	lsl	fp, r1, #20
   29f24:	mov	r6, #0
   29f28:	mov	r1, #43	; 0x2b
   29f2c:	and	r7, r9, #-2147483648	; 0x80000000
   29f30:	orr	r3, fp, r7
   29f34:	strb	r1, [r0, #125]	; 0x7d
   29f38:	orr	r2, sl, r6
   29f3c:	mov	r1, #28
   29f40:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   29f44:	mov	r3, #1
   29f48:	strh	r0, [r4, #122]	; 0x7a
   29f4c:	b	29e84 <luaL_where@@Base+0x9d80>
   29f50:	vldr	d7, [pc, #48]	; 29f88 <luaL_where@@Base+0x9e84>
   29f54:	vcmp.f64	d6, d7
   29f58:	vmrs	APSR_nzcv, fpscr
   29f5c:	bne	29e80 <luaL_where@@Base+0x9d7c>
   29f60:	ldrh	r3, [r0, #120]	; 0x78
   29f64:	mov	r2, #41	; 0x29
   29f68:	strb	r2, [r0, #125]	; 0x7d
   29f6c:	strh	r3, [r0, #122]	; 0x7a
   29f70:	mov	r3, #1
   29f74:	b	29e84 <luaL_where@@Base+0x9d80>
   29f78:	andeq	r0, r0, r0
   29f7c:	svccc	0x00f00000	; IMB
   29f80:	andeq	r0, r0, r0
   29f84:	svclt	0x00f00000	; IMB
   29f88:	andeq	r0, r0, r0
   29f8c:	andmi	r0, r0, r0
   29f90:	andeq	r4, r0, lr, lsl #10
   29f94:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   29f98:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   29f9c:	strdeq	r0, [r0], -ip
   29fa0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   29fa4:	mov	r9, r2
   29fa8:	ldr	ip, [sp, #36]	; 0x24
   29fac:	ldr	r8, [sp, #32]
   29fb0:	cmp	r1, #19
   29fb4:	movne	r7, #0
   29fb8:	andeq	r7, ip, #1
   29fbc:	tst	r8, #32768	; 0x8000
   29fc0:	mov	r6, r3
   29fc4:	mov	r4, r0
   29fc8:	bne	2a01c <luaL_where@@Base+0x9f18>
   29fcc:	cmp	r7, #0
   29fd0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   29fd4:	tst	r3, #32768	; 0x8000
   29fd8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   29fdc:	ldr	r3, [r0, #16]
   29fe0:	uxth	r8, r8
   29fe4:	cmp	r2, #0
   29fe8:	ldr	r1, [r3, r8, lsl #3]
   29fec:	beq	2a10c <luaL_where@@Base+0xa008>
   29ff0:	mvn	r3, #-2147483648	; 0x80000000
   29ff4:	ldr	r5, [pc, #340]	; 2a150 <luaL_where@@Base+0xa04c>
   29ff8:	sub	r1, r3, r1
   29ffc:	mov	r0, r4
   2a000:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2a004:	strh	r5, [r4, #124]	; 0x7c
   2a008:	strh	r6, [r4, #120]	; 0x78
   2a00c:	strh	r0, [r4, #122]	; 0x7a
   2a010:	mov	r0, r4
   2a014:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a018:	b	27498 <luaL_where@@Base+0x7394>
   2a01c:	cmp	r1, #19
   2a020:	mov	r5, r1
   2a024:	beq	2a0d8 <luaL_where@@Base+0x9fd4>
   2a028:	mov	r2, #0
   2a02c:	mov	r3, #0
   2a030:	mov	r1, #28
   2a034:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   2a038:	cmp	r9, #0
   2a03c:	bne	2a0bc <luaL_where@@Base+0x9fb8>
   2a040:	mov	r3, r9
   2a044:	orr	r5, r5, #128	; 0x80
   2a048:	orr	r5, r3, r5
   2a04c:	uxth	r8, r8
   2a050:	strh	r0, [r4, #122]	; 0x7a
   2a054:	strh	r5, [r4, #124]	; 0x7c
   2a058:	strh	r8, [r4, #120]	; 0x78
   2a05c:	mov	r0, r4
   2a060:	bl	27498 <luaL_where@@Base+0x7394>
   2a064:	cmp	r7, #0
   2a068:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a06c:	tst	r6, #32768	; 0x8000
   2a070:	bne	2a118 <luaL_where@@Base+0xa014>
   2a074:	ldr	r3, [r4, #16]
   2a078:	uxth	r6, r6
   2a07c:	cmp	r9, #0
   2a080:	ldr	r1, [r3, r6, lsl #3]
   2a084:	beq	2a0f0 <luaL_where@@Base+0x9fec>
   2a088:	cmp	r1, #0
   2a08c:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a090:	mvn	r3, #-2147483648	; 0x80000000
   2a094:	sub	r1, r3, r1
   2a098:	mov	r0, r4
   2a09c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2a0a0:	ldr	r3, [pc, #168]	; 2a150 <luaL_where@@Base+0xa04c>
   2a0a4:	strh	r0, [r4, #122]	; 0x7a
   2a0a8:	strh	r8, [r4, #120]	; 0x78
   2a0ac:	strh	r3, [r4, #124]	; 0x7c
   2a0b0:	mov	r0, r4
   2a0b4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a0b8:	b	27498 <luaL_where@@Base+0x7394>
   2a0bc:	orr	r5, r5, #384	; 0x180
   2a0c0:	strh	r0, [r4, #122]	; 0x7a
   2a0c4:	strh	r5, [r4, #124]	; 0x7c
   2a0c8:	strh	r8, [r4, #120]	; 0x78
   2a0cc:	mov	r0, r4
   2a0d0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a0d4:	b	27498 <luaL_where@@Base+0x7394>
   2a0d8:	mov	r1, #0
   2a0dc:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2a0e0:	cmp	r9, #0
   2a0e4:	moveq	r3, #0
   2a0e8:	movne	r3, #256	; 0x100
   2a0ec:	b	2a044 <luaL_where@@Base+0x9f40>
   2a0f0:	cmp	r1, #0
   2a0f4:	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a0f8:	rsb	r1, r1, #-2147483648	; 0x80000000
   2a0fc:	mov	r0, r4
   2a100:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2a104:	ldr	r3, [pc, #72]	; 2a154 <luaL_where@@Base+0xa050>
   2a108:	b	2a0a4 <luaL_where@@Base+0x9fa0>
   2a10c:	rsb	r1, r1, #-2147483648	; 0x80000000
   2a110:	ldr	r5, [pc, #60]	; 2a154 <luaL_where@@Base+0xa050>
   2a114:	b	29ffc <luaL_where@@Base+0x9ef8>
   2a118:	ldr	r3, [pc, #56]	; 2a158 <luaL_where@@Base+0xa054>
   2a11c:	strh	r8, [r4, #120]	; 0x78
   2a120:	strh	r3, [r4, #124]	; 0x7c
   2a124:	strh	r6, [r4, #122]	; 0x7a
   2a128:	mov	r0, r4
   2a12c:	bl	27498 <luaL_where@@Base+0x7394>
   2a130:	ldr	r2, [pc, #36]	; 2a15c <luaL_where@@Base+0xa058>
   2a134:	mov	r3, #0
   2a138:	strh	r2, [r4, #124]	; 0x7c
   2a13c:	strh	r3, [r4, #122]	; 0x7a
   2a140:	strh	r0, [r4, #120]	; 0x78
   2a144:	mov	r0, r4
   2a148:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a14c:	b	27498 <luaL_where@@Base+0x7394>
   2a150:	muleq	r0, r3, r2
   2a154:	muleq	r0, r3, r1
   2a158:	muleq	r0, r3, r6
   2a15c:	andeq	r1, r0, r3, lsl r2
   2a160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a164:	sub	sp, sp, #44	; 0x2c
   2a168:	ldrb	r5, [r1, #1]
   2a16c:	str	r1, [sp, #12]
   2a170:	ldr	r1, [r0, #96]	; 0x60
   2a174:	mov	r4, r0
   2a178:	ldr	r0, [r0, #80]	; 0x50
   2a17c:	ldr	r8, [r1, r5, lsl #2]
   2a180:	mov	r6, r2
   2a184:	cmp	r8, #0
   2a188:	ldr	r2, [r0, #16]
   2a18c:	str	r3, [sp, #16]
   2a190:	lsrne	r7, r8, #24
   2a194:	lsl	r3, r5, #2
   2a198:	add	fp, r2, r5, lsl #3
   2a19c:	str	r3, [sp, #20]
   2a1a0:	andne	r7, r7, #31
   2a1a4:	bne	2a1b4 <luaL_where@@Base+0xa0b0>
   2a1a8:	mov	r0, fp
   2a1ac:	bl	1f0ac <_start@@Base+0xbcfc>
   2a1b0:	mov	r7, r0
   2a1b4:	lsl	r3, r5, #2
   2a1b8:	add	r3, r3, #4
   2a1bc:	mov	r2, r3
   2a1c0:	str	r3, [sp, #24]
   2a1c4:	ldr	r3, [fp, #4]
   2a1c8:	ldr	sl, [r1, r2]
   2a1cc:	adds	r3, r3, #14
   2a1d0:	movne	r3, #1
   2a1d4:	sub	r2, r7, #19
   2a1d8:	clz	r2, r2
   2a1dc:	lsr	r2, r2, #5
   2a1e0:	cmp	r3, r2
   2a1e4:	moveq	r3, #32
   2a1e8:	movne	r3, #48	; 0x30
   2a1ec:	cmp	sl, #0
   2a1f0:	str	r2, [sp, #32]
   2a1f4:	str	r3, [sp, #28]
   2a1f8:	add	r9, r5, #1
   2a1fc:	beq	2a3ac <luaL_where@@Base+0xa2a8>
   2a200:	lsl	r3, r5, #2
   2a204:	add	r3, r3, #8
   2a208:	add	r2, r5, #2
   2a20c:	ldr	r9, [r1, r3]
   2a210:	str	r3, [sp, #20]
   2a214:	cmp	r9, #0
   2a218:	str	r2, [sp, #36]	; 0x24
   2a21c:	beq	2a378 <luaL_where@@Base+0xa274>
   2a220:	ldr	r2, [fp, #20]
   2a224:	ldr	r1, [sp, #16]
   2a228:	cmn	r2, #14
   2a22c:	uxth	r3, r9
   2a230:	ldreq	r2, [fp, #16]
   2a234:	str	r3, [sp, #28]
   2a238:	mvn	r2, r2
   2a23c:	strb	r7, [r6, #12]
   2a240:	lsr	r2, r2, #31
   2a244:	strb	r2, [r6, #13]
   2a248:	strh	sl, [r6, #8]
   2a24c:	mov	r0, r4
   2a250:	str	r1, [sp, #4]
   2a254:	str	r9, [sp]
   2a258:	mov	r1, r7
   2a25c:	strh	r3, [r6, #10]
   2a260:	mov	r3, sl
   2a264:	bl	29fa0 <luaL_where@@Base+0x9e9c>
   2a268:	mov	r3, #19
   2a26c:	mov	r2, r5
   2a270:	ldr	r1, [sp, #12]
   2a274:	mov	r0, r4
   2a278:	bl	296fc <luaL_where@@Base+0x95f8>
   2a27c:	uxth	r0, r0
   2a280:	cmp	r0, #0
   2a284:	strh	r0, [r6, #6]
   2a288:	beq	2a2c4 <luaL_where@@Base+0xa1c0>
   2a28c:	ldrsh	r3, [r6, #8]
   2a290:	cmp	r3, #0
   2a294:	blt	2a2c4 <luaL_where@@Base+0xa1c0>
   2a298:	ldrsh	r3, [r6, #10]
   2a29c:	cmp	r3, #0
   2a2a0:	blt	2a2c4 <luaL_where@@Base+0xa1c0>
   2a2a4:	ldr	r3, [fp, #4]
   2a2a8:	ldr	r2, [sp, #32]
   2a2ac:	cmn	r3, #14
   2a2b0:	moveq	r3, #1
   2a2b4:	movne	r3, #0
   2a2b8:	cmp	r3, r2
   2a2bc:	moveq	r3, #0
   2a2c0:	beq	2a2dc <luaL_where@@Base+0xa1d8>
   2a2c4:	ldr	r2, [r4, #96]	; 0x60
   2a2c8:	ldr	r1, [sp, #24]
   2a2cc:	mov	r3, #4
   2a2d0:	str	sl, [r2, r1]
   2a2d4:	ldr	r1, [sp, #20]
   2a2d8:	str	r9, [r2, r1]
   2a2dc:	cmp	r8, #0
   2a2e0:	beq	2a350 <luaL_where@@Base+0xa24c>
   2a2e4:	ldr	r3, [sp, #16]
   2a2e8:	uxth	r2, r8
   2a2ec:	cmp	r3, #0
   2a2f0:	beq	2a320 <luaL_where@@Base+0xa21c>
   2a2f4:	ldr	r3, [r4, #96]	; 0x60
   2a2f8:	lsl	r1, r5, #2
   2a2fc:	add	r3, r3, r1
   2a300:	add	r5, r5, #4
   2a304:	str	r8, [r3, #12]
   2a308:	ldr	r3, [sp, #12]
   2a30c:	strh	r2, [r6, #4]
   2a310:	str	r3, [r6]
   2a314:	str	r5, [r4, #104]	; 0x68
   2a318:	add	sp, sp, #44	; 0x2c
   2a31c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a320:	ldrh	r3, [sp, #28]
   2a324:	orr	r7, r7, #10496	; 0x2900
   2a328:	strh	r2, [r4, #120]	; 0x78
   2a32c:	strh	r3, [r4, #122]	; 0x7a
   2a330:	strh	r7, [r4, #124]	; 0x7c
   2a334:	mov	r0, r4
   2a338:	bl	27498 <luaL_where@@Base+0x7394>
   2a33c:	ldr	r3, [r4, #96]	; 0x60
   2a340:	mov	r8, r0
   2a344:	uxth	r2, r0
   2a348:	str	r0, [r3, r5, lsl #2]
   2a34c:	b	2a2f8 <luaL_where@@Base+0xa1f4>
   2a350:	add	r2, r4, #2288	; 0x8f0
   2a354:	add	r3, r3, #32
   2a358:	ldrh	ip, [r2, #2]
   2a35c:	mov	r1, r5
   2a360:	mov	r2, r7
   2a364:	mov	r0, r4
   2a368:	add	r3, r3, ip, lsl #16
   2a36c:	bl	25c88 <luaL_where@@Base+0x5b84>
   2a370:	mov	r8, r0
   2a374:	b	2a2e4 <luaL_where@@Base+0xa1e0>
   2a378:	mov	r3, r7
   2a37c:	ldr	r1, [sp, #12]
   2a380:	mov	r0, r4
   2a384:	bl	296fc <luaL_where@@Base+0x95f8>
   2a388:	subs	r9, r0, #0
   2a38c:	bne	2a220 <luaL_where@@Base+0xa11c>
   2a390:	ldr	r3, [sp, #28]
   2a394:	add	r1, r5, #2
   2a398:	mov	r2, r7
   2a39c:	mov	r0, r4
   2a3a0:	bl	25c88 <luaL_where@@Base+0x5b84>
   2a3a4:	mov	r9, r0
   2a3a8:	b	2a220 <luaL_where@@Base+0xa11c>
   2a3ac:	mov	r3, r7
   2a3b0:	mov	r2, r9
   2a3b4:	ldr	r1, [sp, #12]
   2a3b8:	mov	r0, r4
   2a3bc:	bl	296fc <luaL_where@@Base+0x95f8>
   2a3c0:	subs	sl, r0, #0
   2a3c4:	bne	2a3e0 <luaL_where@@Base+0xa2dc>
   2a3c8:	mov	r1, r9
   2a3cc:	ldr	r3, [sp, #28]
   2a3d0:	mov	r2, r7
   2a3d4:	mov	r0, r4
   2a3d8:	bl	25c88 <luaL_where@@Base+0x5b84>
   2a3dc:	mov	sl, r0
   2a3e0:	ldr	r1, [r4, #96]	; 0x60
   2a3e4:	b	2a200 <luaL_where@@Base+0xa0fc>
   2a3e8:	ldr	r3, [r0, #96]	; 0x60
   2a3ec:	push	{r4, r5, r6, r7, r8, lr}
   2a3f0:	mov	r4, r0
   2a3f4:	ldr	r1, [r3]
   2a3f8:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   2a3fc:	ldr	r3, [r4, #96]	; 0x60
   2a400:	ldr	r1, [r3, #4]
   2a404:	cmp	r1, #0
   2a408:	mov	r5, r0
   2a40c:	bne	2a438 <luaL_where@@Base+0xa334>
   2a410:	ldr	r2, [pc, #172]	; 2a4c4 <luaL_where@@Base+0xa3c0>
   2a414:	mov	r3, #6
   2a418:	strh	r0, [r4, #120]	; 0x78
   2a41c:	strh	r2, [r4, #124]	; 0x7c
   2a420:	strh	r3, [r4, #122]	; 0x7a
   2a424:	mov	r0, r4
   2a428:	bl	27498 <luaL_where@@Base+0x7394>
   2a42c:	ldr	r3, [r4, #96]	; 0x60
   2a430:	str	r0, [r3]
   2a434:	pop	{r4, r5, r6, r7, r8, pc}
   2a438:	mov	r0, r4
   2a43c:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   2a440:	ldr	r7, [pc, #124]	; 2a4c4 <luaL_where@@Base+0xa3c0>
   2a444:	mov	r6, #7
   2a448:	strh	r5, [r4, #120]	; 0x78
   2a44c:	strh	r6, [r4, #122]	; 0x7a
   2a450:	strh	r7, [r4, #124]	; 0x7c
   2a454:	mov	r8, r0
   2a458:	mov	r0, r4
   2a45c:	bl	27498 <luaL_where@@Base+0x7394>
   2a460:	strh	r6, [r4, #122]	; 0x7a
   2a464:	strh	r8, [r4, #120]	; 0x78
   2a468:	strh	r7, [r4, #124]	; 0x7c
   2a46c:	mov	r5, r0
   2a470:	mov	r0, r4
   2a474:	bl	27498 <luaL_where@@Base+0x7394>
   2a478:	mov	r2, #0
   2a47c:	mov	r1, #28
   2a480:	ldr	r3, [pc, #64]	; 2a4c8 <luaL_where@@Base+0xa3c4>
   2a484:	mov	r6, r0
   2a488:	mov	r0, r4
   2a48c:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   2a490:	ldr	r3, [pc, #52]	; 2a4cc <luaL_where@@Base+0xa3c8>
   2a494:	strh	r6, [r4, #122]	; 0x7a
   2a498:	strh	r3, [r4, #124]	; 0x7c
   2a49c:	strh	r0, [r4, #120]	; 0x78
   2a4a0:	mov	r0, r4
   2a4a4:	bl	27498 <luaL_where@@Base+0x7394>
   2a4a8:	ldr	r3, [pc, #32]	; 2a4d0 <luaL_where@@Base+0xa3cc>
   2a4ac:	strh	r5, [r4, #120]	; 0x78
   2a4b0:	strh	r3, [r4, #124]	; 0x7c
   2a4b4:	strh	r0, [r4, #122]	; 0x7a
   2a4b8:	mov	r0, r4
   2a4bc:	bl	27498 <luaL_where@@Base+0x7394>
   2a4c0:	b	2a42c <luaL_where@@Base+0xa328>
   2a4c4:	andeq	r3, r0, lr, lsl #10
   2a4c8:	svccc	0x00f00000	; IMB
   2a4cc:	andeq	r2, r0, lr, lsl #24
   2a4d0:	andeq	r2, r0, lr, lsl #22
   2a4d4:	ldr	r3, [r0, #96]	; 0x60
   2a4d8:	push	{r4, r5, r6, r7, r8, lr}
   2a4dc:	mov	r6, r1
   2a4e0:	ldr	r1, [r3]
   2a4e4:	mov	r4, r0
   2a4e8:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   2a4ec:	mov	r2, #0
   2a4f0:	ldr	r3, [pc, #168]	; 2a5a0 <luaL_where@@Base+0xa49c>
   2a4f4:	mov	r1, #28
   2a4f8:	mov	r5, r0
   2a4fc:	mov	r0, r4
   2a500:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   2a504:	ldr	r6, [r6, #8]
   2a508:	cmp	r6, #49	; 0x31
   2a50c:	uxtheq	r2, r5
   2a510:	mov	r7, r0
   2a514:	uxtheq	r5, r0
   2a518:	beq	2a57c <luaL_where@@Base+0xa478>
   2a51c:	ldr	r3, [pc, #128]	; 2a5a4 <luaL_where@@Base+0xa4a0>
   2a520:	uxth	r5, r5
   2a524:	strh	r5, [r4, #120]	; 0x78
   2a528:	strh	r5, [r4, #122]	; 0x7a
   2a52c:	strh	r3, [r4, #124]	; 0x7c
   2a530:	mov	r0, r4
   2a534:	bl	27498 <luaL_where@@Base+0x7394>
   2a538:	ldr	r3, [pc, #104]	; 2a5a8 <luaL_where@@Base+0xa4a4>
   2a53c:	strh	r7, [r4, #120]	; 0x78
   2a540:	strh	r3, [r4, #124]	; 0x7c
   2a544:	strh	r0, [r4, #122]	; 0x7a
   2a548:	mov	r0, r4
   2a54c:	bl	27498 <luaL_where@@Base+0x7394>
   2a550:	ldr	r2, [pc, #84]	; 2a5ac <luaL_where@@Base+0xa4a8>
   2a554:	mov	r3, #3
   2a558:	strh	r2, [r4, #124]	; 0x7c
   2a55c:	strh	r3, [r4, #122]	; 0x7a
   2a560:	strh	r0, [r4, #120]	; 0x78
   2a564:	mov	r0, r4
   2a568:	bl	27498 <luaL_where@@Base+0x7394>
   2a56c:	cmp	r6, #47	; 0x2f
   2a570:	moveq	r2, r5
   2a574:	uxthne	r2, r0
   2a578:	uxtheq	r5, r0
   2a57c:	ldr	r3, [pc, #44]	; 2a5b0 <luaL_where@@Base+0xa4ac>
   2a580:	strh	r2, [r4, #120]	; 0x78
   2a584:	strh	r5, [r4, #122]	; 0x7a
   2a588:	strh	r3, [r4, #124]	; 0x7c
   2a58c:	mov	r0, r4
   2a590:	ldr	r4, [r4, #96]	; 0x60
   2a594:	bl	27498 <luaL_where@@Base+0x7394>
   2a598:	str	r0, [r4]
   2a59c:	pop	{r4, r5, r6, r7, r8, pc}
   2a5a0:	svccc	0x00f00000	; IMB
   2a5a4:	andeq	r2, r0, lr, lsl #22
   2a5a8:	andeq	r2, r0, lr, lsl #20
   2a5ac:	andeq	r3, r0, lr, lsl #10
   2a5b0:	andeq	r3, r0, lr, lsl #2
   2a5b4:	and	r3, r1, #520093696	; 0x1f000000
   2a5b8:	cmp	r3, #67108864	; 0x4000000
   2a5bc:	push	{r4, r5, r6, lr}
   2a5c0:	mov	r4, r1
   2a5c4:	mov	r5, r0
   2a5c8:	beq	2a5fc <luaL_where@@Base+0xa4f8>
   2a5cc:	cmp	r3, #234881024	; 0xe000000
   2a5d0:	beq	2a624 <luaL_where@@Base+0xa520>
   2a5d4:	lsr	r3, r4, #24
   2a5d8:	and	r3, r3, #31
   2a5dc:	sub	r3, r3, #15
   2a5e0:	cmp	r3, #4
   2a5e4:	bhi	2a654 <luaL_where@@Base+0xa550>
   2a5e8:	mov	r1, r4
   2a5ec:	mov	r0, r5
   2a5f0:	mov	r2, #55	; 0x37
   2a5f4:	pop	{r4, r5, r6, lr}
   2a5f8:	b	280a0 <luaL_where@@Base+0x7f9c>
   2a5fc:	ldr	r2, [pc, #88]	; 2a65c <luaL_where@@Base+0xa558>
   2a600:	mov	r3, #0
   2a604:	strh	r1, [r5, #120]	; 0x78
   2a608:	strh	r3, [r0, #122]	; 0x7a
   2a60c:	strh	r2, [r0, #124]	; 0x7c
   2a610:	bl	27498 <luaL_where@@Base+0x7394>
   2a614:	and	r3, r0, #520093696	; 0x1f000000
   2a618:	cmp	r3, #234881024	; 0xe000000
   2a61c:	mov	r4, r0
   2a620:	bne	2a5d4 <luaL_where@@Base+0xa4d0>
   2a624:	ldr	r3, [pc, #52]	; 2a660 <luaL_where@@Base+0xa55c>
   2a628:	mov	r0, r5
   2a62c:	mov	r2, #0
   2a630:	mov	r1, #28
   2a634:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   2a638:	ldr	r3, [pc, #36]	; 2a664 <luaL_where@@Base+0xa560>
   2a63c:	strh	r4, [r5, #120]	; 0x78
   2a640:	strh	r3, [r5, #124]	; 0x7c
   2a644:	strh	r0, [r5, #122]	; 0x7a
   2a648:	mov	r0, r5
   2a64c:	pop	{r4, r5, r6, lr}
   2a650:	b	27498 <luaL_where@@Base+0x7394>
   2a654:	mov	r0, r5
   2a658:	bl	130b0 <pclose@plt+0x14>
   2a65c:	andeq	r5, r0, lr, lsl #27
   2a660:	teqmi	r8, #0
   2a664:	andeq	r5, r0, r3, lsl fp
   2a668:	vldr	s15, [r0, #144]	; 0x90
   2a66c:	push	{r4, lr}
   2a670:	vldr	d0, [r0, #136]	; 0x88
   2a674:	mov	r4, r0
   2a678:	vcvt.f64.s32	d1, s15
   2a67c:	bl	12ce8 <pow@plt>
   2a680:	mov	r0, r4
   2a684:	mov	r1, #28
   2a688:	pop	{r4, lr}
   2a68c:	vmov	r2, r3, d0
   2a690:	b	28dc0 <luaL_where@@Base+0x8cbc>
   2a694:	ldrh	r2, [r0, #120]	; 0x78
   2a698:	ldrh	r1, [r0, #122]	; 0x7a
   2a69c:	cmp	r2, r1
   2a6a0:	beq	2a6b8 <luaL_where@@Base+0xa5b4>
   2a6a4:	strhcc	r1, [r0, #120]	; 0x78
   2a6a8:	strhcc	r2, [r0, #122]	; 0x7a
   2a6ac:	movcc	r0, #1
   2a6b0:	movcs	r0, #0
   2a6b4:	bx	lr
   2a6b8:	ldrb	r1, [r0, #124]	; 0x7c
   2a6bc:	ldr	r2, [pc, #40]	; 2a6ec <luaL_where@@Base+0xa5e8>
   2a6c0:	and	r1, r1, #31
   2a6c4:	lsr	r2, r2, r1
   2a6c8:	ands	r2, r2, #1
   2a6cc:	beq	2a6e0 <luaL_where@@Base+0xa5dc>
   2a6d0:	mov	r2, #0
   2a6d4:	mov	r3, #0
   2a6d8:	mov	r1, #29
   2a6dc:	b	28dc0 <luaL_where@@Base+0x8cbc>
   2a6e0:	str	r2, [r0, #120]	; 0x78
   2a6e4:	mov	r0, #2
   2a6e8:	bx	lr
   2a6ec:	rsbeq	r4, r0, r0
   2a6f0:	push	{r4, r5, r6, lr}
   2a6f4:	add	r6, r0, #332	; 0x14c
   2a6f8:	mov	r5, r0
   2a6fc:	ldrh	r0, [r6, #2]
   2a700:	sub	sp, sp, #8
   2a704:	ldr	r3, [r5, #16]
   2a708:	cmp	r0, #0
   2a70c:	bne	2a720 <luaL_where@@Base+0xa61c>
   2a710:	b	2a73c <luaL_where@@Base+0xa638>
   2a714:	ldrh	r0, [ip, #6]
   2a718:	cmp	r0, #0
   2a71c:	beq	2a73c <luaL_where@@Base+0xa638>
   2a720:	ldr	lr, [r3, r0, lsl #3]
   2a724:	add	ip, r3, r0, lsl #3
   2a728:	cmp	r1, lr
   2a72c:	bne	2a714 <luaL_where@@Base+0xa610>
   2a730:	add	r0, r0, r2, lsl #24
   2a734:	add	sp, sp, #8
   2a738:	pop	{r4, r5, r6, pc}
   2a73c:	ldr	r4, [r5, #20]
   2a740:	ldr	r0, [r5, #240]	; 0xf0
   2a744:	cmp	r4, r0
   2a748:	bls	2a780 <luaL_where@@Base+0xa67c>
   2a74c:	sub	r0, r4, #1
   2a750:	mov	lr, #24
   2a754:	add	ip, r3, r0, lsl #3
   2a758:	str	r0, [r5, #20]
   2a75c:	str	r1, [r3, r0, lsl #3]
   2a760:	strb	r2, [ip, #4]
   2a764:	strb	lr, [ip, #5]
   2a768:	ldrh	r3, [r6, #2]
   2a76c:	strh	r3, [ip, #6]
   2a770:	strh	r0, [r6, #2]
   2a774:	add	r0, r0, r2, lsl #24
   2a778:	add	sp, sp, #8
   2a77c:	pop	{r4, r5, r6, pc}
   2a780:	mov	r0, r5
   2a784:	stm	sp, {r1, r2}
   2a788:	bl	26bc8 <luaL_where@@Base+0x6ac4>
   2a78c:	ldr	r3, [r5, #16]
   2a790:	ldm	sp, {r1, r2}
   2a794:	b	2a74c <luaL_where@@Base+0xa648>
   2a798:	ldr	r3, [r0, #144]	; 0x90
   2a79c:	cmp	r3, #0
   2a7a0:	beq	2a7ac <luaL_where@@Base+0xa6a8>
   2a7a4:	mov	r0, #0
   2a7a8:	bx	lr
   2a7ac:	sub	r1, r0, #288	; 0x120
   2a7b0:	mov	r2, #4
   2a7b4:	b	2a6f0 <luaL_where@@Base+0xa5ec>
   2a7b8:	ldr	r2, [r1, #4]
   2a7bc:	add	r3, r2, #4
   2a7c0:	cmn	r3, #10
   2a7c4:	bls	2a7d4 <luaL_where@@Base+0xa6d0>
   2a7c8:	mvn	r2, r2
   2a7cc:	ldr	r1, [r1]
   2a7d0:	b	2a6f0 <luaL_where@@Base+0xa5ec>
   2a7d4:	cmn	r2, #14
   2a7d8:	beq	2a804 <luaL_where@@Base+0xa700>
   2a7dc:	cmn	r2, #15
   2a7e0:	bls	2a80c <luaL_where@@Base+0xa708>
   2a7e4:	add	r3, r2, #3
   2a7e8:	cmp	r3, #1
   2a7ec:	mvnls	r2, r2
   2a7f0:	rsbls	r2, r2, r2, lsl #24
   2a7f4:	addls	r0, r2, #32512	; 0x7f00
   2a7f8:	addls	r0, r0, #255	; 0xff
   2a7fc:	movhi	r0, #0
   2a800:	bx	lr
   2a804:	ldr	r1, [r1]
   2a808:	b	26ccc <luaL_where@@Base+0x6bc8>
   2a80c:	vldr	d0, [r1]
   2a810:	b	28e9c <luaL_where@@Base+0x8d98>
   2a814:	ldr	r3, [r1]
   2a818:	ldr	r1, [r0, #88]	; 0x58
   2a81c:	push	{r4, lr}
   2a820:	mov	r2, #4
   2a824:	ldr	r3, [r3, #4]
   2a828:	ldr	r4, [r0, #96]	; 0x60
   2a82c:	cmn	r3, #14
   2a830:	mvnhi	r3, r3
   2a834:	movls	r3, #13
   2a838:	add	r3, r3, #3
   2a83c:	ldr	r1, [r1, r3, lsl #3]
   2a840:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2a844:	str	r0, [r4]
   2a848:	pop	{r4, pc}
   2a84c:	ldr	r3, [r0, #100]	; 0x64
   2a850:	mov	r1, r0
   2a854:	tst	r3, #65536	; 0x10000
   2a858:	beq	2a870 <luaL_where@@Base+0xa76c>
   2a85c:	ldrb	r2, [r0, #133]	; 0x85
   2a860:	cmp	r2, #84	; 0x54
   2a864:	beq	2a960 <luaL_where@@Base+0xa85c>
   2a868:	cmp	r2, #85	; 0x55
   2a86c:	beq	2a934 <luaL_where@@Base+0xa830>
   2a870:	tst	r3, #131072	; 0x20000
   2a874:	beq	2a98c <luaL_where@@Base+0xa888>
   2a878:	add	r3, r1, #456	; 0x1c8
   2a87c:	ldrh	r0, [r3, #2]
   2a880:	cmp	r0, #0
   2a884:	beq	2a98c <luaL_where@@Base+0xa888>
   2a888:	push	{r4, r5, r6, r7, r8, lr}
   2a88c:	add	r7, r1, #128	; 0x80
   2a890:	ldrb	r6, [r1, #133]	; 0x85
   2a894:	ldr	r4, [r1, #16]
   2a898:	lsl	r3, r0, #3
   2a89c:	add	r5, r4, r3
   2a8a0:	ldrh	r3, [r4, r3]
   2a8a4:	add	r3, r4, r3, lsl #3
   2a8a8:	ldrb	ip, [r3, #5]
   2a8ac:	cmp	ip, r6
   2a8b0:	bne	2a91c <luaL_where@@Base+0xa818>
   2a8b4:	ldrh	lr, [r3, #2]
   2a8b8:	ldrh	r2, [r1, #130]	; 0x82
   2a8bc:	cmp	r2, lr
   2a8c0:	bne	2a91c <luaL_where@@Base+0xa818>
   2a8c4:	mov	r2, r7
   2a8c8:	b	2a908 <luaL_where@@Base+0xa804>
   2a8cc:	cmp	lr, #23
   2a8d0:	cmpeq	ip, #96	; 0x60
   2a8d4:	beq	2a91c <luaL_where@@Base+0xa818>
   2a8d8:	ldrh	r2, [r2]
   2a8dc:	ldrh	r3, [r3]
   2a8e0:	add	r2, r4, r2, lsl #3
   2a8e4:	add	r3, r4, r3, lsl #3
   2a8e8:	ldrb	ip, [r2, #5]
   2a8ec:	ldrb	lr, [r3, #5]
   2a8f0:	cmp	lr, ip
   2a8f4:	bne	2a91c <luaL_where@@Base+0xa818>
   2a8f8:	ldrh	lr, [r2, #2]
   2a8fc:	ldrh	r8, [r3, #2]
   2a900:	cmp	r8, lr
   2a904:	bne	2a91c <luaL_where@@Base+0xa818>
   2a908:	cmp	ip, #84	; 0x54
   2a90c:	bne	2a8cc <luaL_where@@Base+0xa7c8>
   2a910:	tst	lr, #1
   2a914:	bne	2a8d8 <luaL_where@@Base+0xa7d4>
   2a918:	pop	{r4, r5, r6, r7, r8, pc}
   2a91c:	ldrh	r0, [r5, #6]
   2a920:	cmp	r0, #0
   2a924:	bne	2a898 <luaL_where@@Base+0xa794>
   2a928:	mov	r0, r1
   2a92c:	pop	{r4, r5, r6, r7, r8, lr}
   2a930:	b	25258 <luaL_where@@Base+0x5154>
   2a934:	ldrh	r0, [r0, #128]	; 0x80
   2a938:	ldr	r2, [r1, #16]
   2a93c:	add	r2, r2, r0, lsl #3
   2a940:	ldrb	r0, [r2, #5]
   2a944:	cmp	r0, #84	; 0x54
   2a948:	bne	2a870 <luaL_where@@Base+0xa76c>
   2a94c:	ldrh	r2, [r2, #2]
   2a950:	tst	r2, #1
   2a954:	bne	2a870 <luaL_where@@Base+0xa76c>
   2a958:	ldrh	r0, [r1, #130]	; 0x82
   2a95c:	bx	lr
   2a960:	ldrh	r3, [r0, #130]	; 0x82
   2a964:	tst	r3, #1
   2a968:	bne	2a978 <luaL_where@@Base+0xa874>
   2a96c:	sub	r1, r0, #288	; 0x120
   2a970:	mov	r2, #4
   2a974:	b	2a6f0 <luaL_where@@Base+0xa5ec>
   2a978:	ldrh	r2, [r0, #128]	; 0x80
   2a97c:	ldrh	r3, [r0, #134]	; 0x86
   2a980:	strh	r2, [r0, #120]	; 0x78
   2a984:	strh	r3, [r0, #122]	; 0x7a
   2a988:	b	26918 <luaL_where@@Base+0x6814>
   2a98c:	mov	r0, r1
   2a990:	b	25258 <luaL_where@@Base+0x5154>
   2a994:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a998:	mov	r9, r1
   2a99c:	ldr	r1, [r0, #96]	; 0x60
   2a9a0:	ldr	r3, [r0, #88]	; 0x58
   2a9a4:	mov	r4, r0
   2a9a8:	ldr	sl, [r1, #-4]
   2a9ac:	add	r3, r3, r9, lsl #2
   2a9b0:	cmp	sl, #0
   2a9b4:	mov	r6, r2
   2a9b8:	ldr	r5, [r3, #20]
   2a9bc:	beq	2acf4 <luaL_where@@Base+0xabf0>
   2a9c0:	ldrb	r3, [r5, #7]
   2a9c4:	cmp	r3, #0
   2a9c8:	beq	2a9ec <luaL_where@@Base+0xa8e8>
   2a9cc:	ldr	r1, [r5, #16]
   2a9d0:	ldr	r3, [r1, #4]
   2a9d4:	cmn	r3, #11
   2a9d8:	beq	2ab6c <luaL_where@@Base+0xaa68>
   2a9dc:	add	r2, r3, #13
   2a9e0:	cmn	r3, #7
   2a9e4:	cmpne	r2, #1
   2a9e8:	bhi	2abd0 <luaL_where@@Base+0xaacc>
   2a9ec:	uxth	r7, sl
   2a9f0:	ldr	r2, [r5, #20]
   2a9f4:	ldr	r3, [pc, #880]	; 2ad6c <luaL_where@@Base+0xac68>
   2a9f8:	ldrb	r8, [r5, #6]
   2a9fc:	add	r3, r2, r3
   2aa00:	eor	r2, r2, r3
   2aa04:	sub	r2, r2, r3, ror #18
   2aa08:	eor	r3, r2, r3, ror #13
   2aa0c:	sub	r3, r3, r2, ror #19
   2aa10:	cmp	r8, #0
   2aa14:	uxtb	r3, r3
   2aa18:	orr	r3, r3, r9, lsl #8
   2aa1c:	uxth	r3, r3
   2aa20:	beq	2aaa4 <luaL_where@@Base+0xa9a0>
   2aa24:	ldr	r2, [pc, #836]	; 2ad70 <luaL_where@@Base+0xac6c>
   2aa28:	strh	r7, [r4, #120]	; 0x78
   2aa2c:	strh	r3, [r4, #122]	; 0x7a
   2aa30:	strh	r2, [r4, #124]	; 0x7c
   2aa34:	mov	r0, r4
   2aa38:	bl	27498 <luaL_where@@Base+0x7394>
   2aa3c:	cmp	r6, #0
   2aa40:	mov	r8, #1
   2aa44:	uxth	r7, r0
   2aa48:	uxth	r7, r7
   2aa4c:	bne	2ac9c <luaL_where@@Base+0xab98>
   2aa50:	ldr	r3, [r5, #16]
   2aa54:	ldr	r0, [r3, #4]
   2aa58:	cmn	r0, #14
   2aa5c:	ldreq	r3, [pc, #784]	; 2ad74 <luaL_where@@Base+0xac70>
   2aa60:	beq	2acdc <luaL_where@@Base+0xabd8>
   2aa64:	cmn	r0, #15
   2aa68:	bls	2acd8 <luaL_where@@Base+0xabd4>
   2aa6c:	mvn	r8, r0
   2aa70:	orr	r3, r8, #17408	; 0x4400
   2aa74:	orr	r3, r3, #128	; 0x80
   2aa78:	strh	r7, [r4, #120]	; 0x78
   2aa7c:	strh	r6, [r4, #122]	; 0x7a
   2aa80:	strh	r3, [r4, #124]	; 0x7c
   2aa84:	mov	r0, r4
   2aa88:	bl	27498 <luaL_where@@Base+0x7394>
   2aa8c:	cmp	r8, #2
   2aa90:	pophi	{r4, r5, r6, r7, r8, r9, sl, pc}
   2aa94:	rsb	r0, r8, r8, lsl #24
   2aa98:	add	r0, r0, #32512	; 0x7f00
   2aa9c:	add	r0, r0, #255	; 0xff
   2aaa0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2aaa4:	ldr	r2, [pc, #716]	; 2ad78 <luaL_where@@Base+0xac74>
   2aaa8:	strh	r7, [r4, #120]	; 0x78
   2aaac:	strh	r3, [r4, #122]	; 0x7a
   2aab0:	strh	r2, [r4, #124]	; 0x7c
   2aab4:	mov	r0, r4
   2aab8:	bl	27498 <luaL_where@@Base+0x7394>
   2aabc:	ldr	r2, [r4, #80]	; 0x50
   2aac0:	ldr	r3, [r5, #16]
   2aac4:	ldr	r1, [r2, #28]
   2aac8:	cmp	r3, r1
   2aacc:	uxth	r9, r0
   2aad0:	mov	r7, r9
   2aad4:	bcc	2ac3c <luaL_where@@Base+0xab38>
   2aad8:	ldr	r1, [r2, #24]
   2aadc:	cmp	r3, r1
   2aae0:	bcs	2ac3c <luaL_where@@Base+0xab38>
   2aae4:	ldr	r0, [r4, #108]	; 0x6c
   2aae8:	ldr	r1, [r2, #16]
   2aaec:	sub	r1, r1, r0, lsl #3
   2aaf0:	subs	r3, r3, r1
   2aaf4:	bmi	2ac3c <luaL_where@@Base+0xab38>
   2aaf8:	asr	r5, r3, #3
   2aafc:	rsb	r1, r5, #1
   2ab00:	mov	r0, r4
   2ab04:	lsl	r1, r1, #3
   2ab08:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2ab0c:	ldr	r3, [pc, #616]	; 2ad7c <luaL_where@@Base+0xac78>
   2ab10:	strh	r9, [r4, #120]	; 0x78
   2ab14:	strh	r3, [r4, #124]	; 0x7c
   2ab18:	strh	r0, [r4, #122]	; 0x7a
   2ab1c:	mov	r0, r4
   2ab20:	bl	27498 <luaL_where@@Base+0x7394>
   2ab24:	ldr	r2, [pc, #596]	; 2ad80 <luaL_where@@Base+0xac7c>
   2ab28:	mov	r3, #32768	; 0x8000
   2ab2c:	strh	r3, [r4, #120]	; 0x78
   2ab30:	strh	r2, [r4, #124]	; 0x7c
   2ab34:	strh	r0, [r4, #122]	; 0x7a
   2ab38:	mov	r0, r4
   2ab3c:	bl	27498 <luaL_where@@Base+0x7394>
   2ab40:	ldr	r1, [r4, #108]	; 0x6c
   2ab44:	cmp	r6, #0
   2ab48:	ldr	r3, [r4, #96]	; 0x60
   2ab4c:	sub	r1, r5, r1
   2ab50:	bne	2ad4c <luaL_where@@Base+0xac48>
   2ab54:	ldr	r0, [r3, r1, lsl #2]
   2ab58:	cmp	r0, #0
   2ab5c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ab60:	mov	r0, r4
   2ab64:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ab68:	b	25b34 <luaL_where@@Base+0x5a30>
   2ab6c:	ldr	r2, [r1]
   2ab70:	ldrb	r3, [r2, #4]
   2ab74:	tst	r3, #128	; 0x80
   2ab78:	bne	2a9ec <luaL_where@@Base+0xa8e8>
   2ab7c:	tst	r3, #16
   2ab80:	bne	2a9ec <luaL_where@@Base+0xa8e8>
   2ab84:	ldr	r3, [r4, #-156]	; 0xffffff64
   2ab88:	ldrh	r2, [r2, #6]
   2ab8c:	ldr	ip, [r3]
   2ab90:	add	r3, ip, r2, lsl #4
   2ab94:	ldr	r2, [ip, r2, lsl #4]
   2ab98:	lsr	r0, r2, #28
   2ab9c:	cmp	r0, #8
   2aba0:	bne	2abbc <luaL_where@@Base+0xaab8>
   2aba4:	uxth	r3, r2
   2aba8:	ldr	r2, [ip, r3, lsl #4]
   2abac:	add	r3, ip, r3, lsl #4
   2abb0:	lsr	r0, r2, #28
   2abb4:	cmp	r0, #8
   2abb8:	beq	2aba4 <luaL_where@@Base+0xaaa0>
   2abbc:	cmp	r0, #5
   2abc0:	bhi	2abd0 <luaL_where@@Base+0xaacc>
   2abc4:	ldr	r3, [r3, #4]
   2abc8:	cmp	r3, #16
   2abcc:	bhi	2a9ec <luaL_where@@Base+0xa8e8>
   2abd0:	tst	sl, #32768	; 0x8000
   2abd4:	beq	2ac28 <luaL_where@@Base+0xab24>
   2abd8:	ldr	r3, [r4, #92]	; 0x5c
   2abdc:	uxth	r7, sl
   2abe0:	ldrb	r3, [r3, #37]	; 0x25
   2abe4:	cmp	r3, #95	; 0x5f
   2abe8:	bhi	2a9f0 <luaL_where@@Base+0xa8ec>
   2abec:	mov	r2, #8
   2abf0:	ldr	r1, [r4, #88]	; 0x58
   2abf4:	mov	r0, r4
   2abf8:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2abfc:	ldr	r3, [pc, #384]	; 2ad84 <luaL_where@@Base+0xac80>
   2ac00:	strh	r7, [r4, #120]	; 0x78
   2ac04:	strh	r3, [r4, #124]	; 0x7c
   2ac08:	mov	sl, r0
   2ac0c:	strh	r0, [r4, #122]	; 0x7a
   2ac10:	mov	r0, r4
   2ac14:	bl	27498 <luaL_where@@Base+0x7394>
   2ac18:	ldr	r3, [r4, #96]	; 0x60
   2ac1c:	orr	r2, sl, #65536	; 0x10000
   2ac20:	str	r2, [r3, #-4]
   2ac24:	ldr	r1, [r5, #16]
   2ac28:	mov	r0, r4
   2ac2c:	bl	2a7b8 <luaL_where@@Base+0xa6b4>
   2ac30:	cmp	r0, #0
   2ac34:	beq	2a9ec <luaL_where@@Base+0xa8e8>
   2ac38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ac3c:	ldr	r2, [pc, #324]	; 2ad88 <luaL_where@@Base+0xac84>
   2ac40:	mov	r3, #32768	; 0x8000
   2ac44:	strh	r2, [r4, #124]	; 0x7c
   2ac48:	strh	r9, [r4, #120]	; 0x78
   2ac4c:	strh	r3, [r4, #122]	; 0x7a
   2ac50:	mov	r0, r4
   2ac54:	bl	27498 <luaL_where@@Base+0x7394>
   2ac58:	ldr	r3, [r4, #104]	; 0x68
   2ac5c:	ldr	r1, [r4, #108]	; 0x6c
   2ac60:	mov	r8, #0
   2ac64:	add	r1, r1, r3
   2ac68:	uxth	r7, r7
   2ac6c:	lsl	r1, r1, #3
   2ac70:	mov	r9, r0
   2ac74:	mov	r0, r4
   2ac78:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2ac7c:	ldr	r3, [pc, #264]	; 2ad8c <luaL_where@@Base+0xac88>
   2ac80:	strh	r9, [r4, #120]	; 0x78
   2ac84:	strh	r3, [r4, #124]	; 0x7c
   2ac88:	strh	r0, [r4, #122]	; 0x7a
   2ac8c:	mov	r0, r4
   2ac90:	bl	27498 <luaL_where@@Base+0x7394>
   2ac94:	cmp	r6, #0
   2ac98:	beq	2aa50 <luaL_where@@Base+0xa94c>
   2ac9c:	lsr	r5, r6, #24
   2aca0:	and	r5, r5, #31
   2aca4:	orr	r3, r5, #19200	; 0x4b00
   2aca8:	uxth	r6, r6
   2acac:	strh	r7, [r4, #120]	; 0x78
   2acb0:	strh	r6, [r4, #122]	; 0x7a
   2acb4:	strh	r3, [r4, #124]	; 0x7c
   2acb8:	mov	r0, r4
   2acbc:	bl	27498 <luaL_where@@Base+0x7394>
   2acc0:	cmp	r8, #0
   2acc4:	bne	2ad24 <luaL_where@@Base+0xac20>
   2acc8:	mov	r3, #1
   2accc:	strb	r3, [r4, #113]	; 0x71
   2acd0:	mov	r0, #0
   2acd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2acd8:	ldr	r3, [pc, #176]	; 2ad90 <luaL_where@@Base+0xac8c>
   2acdc:	strh	r7, [r4, #120]	; 0x78
   2ace0:	strh	r6, [r4, #122]	; 0x7a
   2ace4:	strh	r3, [r4, #124]	; 0x7c
   2ace8:	mov	r0, r4
   2acec:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2acf0:	b	27498 <luaL_where@@Base+0x7394>
   2acf4:	ldr	r3, [r0, #108]	; 0x6c
   2acf8:	ldr	r2, [pc, #148]	; 2ad94 <luaL_where@@Base+0xac90>
   2acfc:	sub	r3, r3, #1
   2ad00:	strh	r3, [r0, #120]	; 0x78
   2ad04:	mov	r3, #16
   2ad08:	strh	r3, [r0, #122]	; 0x7a
   2ad0c:	strh	r2, [r0, #124]	; 0x7c
   2ad10:	bl	25258 <luaL_where@@Base+0x5154>
   2ad14:	ldr	r3, [r4, #96]	; 0x60
   2ad18:	mov	sl, r0
   2ad1c:	str	r0, [r3, #-4]
   2ad20:	b	2a9c0 <luaL_where@@Base+0xa8bc>
   2ad24:	sub	r5, r5, #4
   2ad28:	cmp	r5, #8
   2ad2c:	bhi	2acc8 <luaL_where@@Base+0xabc4>
   2ad30:	mov	r3, #22528	; 0x5800
   2ad34:	strh	r7, [r4, #120]	; 0x78
   2ad38:	strh	r6, [r4, #122]	; 0x7a
   2ad3c:	strh	r3, [r4, #124]	; 0x7c
   2ad40:	mov	r0, r4
   2ad44:	bl	27498 <luaL_where@@Base+0x7394>
   2ad48:	b	2acc8 <luaL_where@@Base+0xabc4>
   2ad4c:	str	r6, [r3, r1, lsl #2]
   2ad50:	ldr	r3, [r4, #104]	; 0x68
   2ad54:	cmp	r3, r1
   2ad58:	bgt	2acd0 <luaL_where@@Base+0xabcc>
   2ad5c:	add	r1, r1, #1
   2ad60:	str	r1, [r4, #104]	; 0x68
   2ad64:	mov	r0, r8
   2ad68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ad6c:	blx	fe369a <__bss_end__@@Base+0xf5f422>
   2ad70:	andeq	r3, r0, r5, lsl #29
   2ad74:	muleq	r0, r3, r4
   2ad78:	andeq	r3, r0, r5, lsl #27
   2ad7c:	andeq	r2, r0, r5, lsl #18
   2ad80:	andeq	r0, r0, r5, lsl #17
   2ad84:	andeq	r0, r0, r8, lsl #17
   2ad88:	andeq	r2, r0, r5, lsl #20
   2ad8c:	andeq	r0, r0, r5, lsl #15
   2ad90:	andeq	r4, r0, lr, lsl #9
   2ad94:	andeq	r4, r0, r8, lsl #14
   2ad98:	and	r3, r1, #520093696	; 0x1f000000
   2ad9c:	cmp	r3, #67108864	; 0x4000000
   2ada0:	push	{r4, r5, r6, lr}
   2ada4:	mov	r4, r0
   2ada8:	bne	2adbc <luaL_where@@Base+0xacb8>
   2adac:	ldr	r3, [r2]
   2adb0:	ldrb	r6, [r3, #16]
   2adb4:	cmp	r6, #35	; 0x23
   2adb8:	beq	2ade4 <luaL_where@@Base+0xace0>
   2adbc:	mov	r1, r2
   2adc0:	mov	r0, r4
   2adc4:	bl	210f8 <luaL_where@@Base+0xff4>
   2adc8:	cmp	r0, #0
   2adcc:	popne	{r4, r5, r6, pc}
   2add0:	add	r1, r4, #2336	; 0x920
   2add4:	add	r1, r1, #12
   2add8:	ldr	r0, [r4, #80]	; 0x50
   2addc:	mov	r2, #11
   2ade0:	bl	210d0 <luaL_where@@Base+0xfcc>
   2ade4:	ldr	r2, [r3, #12]
   2ade8:	uxth	r5, r1
   2adec:	cmp	r2, #1
   2adf0:	beq	2ae60 <luaL_where@@Base+0xad5c>
   2adf4:	mov	r1, #0
   2adf8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2adfc:	ldr	r3, [pc, #112]	; 2ae74 <luaL_where@@Base+0xad70>
   2ae00:	strh	r5, [r4, #120]	; 0x78
   2ae04:	strh	r3, [r4, #124]	; 0x7c
   2ae08:	strh	r0, [r4, #122]	; 0x7a
   2ae0c:	mov	r0, r4
   2ae10:	bl	27498 <luaL_where@@Base+0x7394>
   2ae14:	ldr	r2, [pc, #92]	; 2ae78 <luaL_where@@Base+0xad74>
   2ae18:	mov	r3, #1
   2ae1c:	strh	r3, [r4, #122]	; 0x7a
   2ae20:	strh	r2, [r4, #124]	; 0x7c
   2ae24:	strh	r0, [r4, #120]	; 0x78
   2ae28:	mov	r0, r4
   2ae2c:	bl	27498 <luaL_where@@Base+0x7394>
   2ae30:	mov	r1, r6
   2ae34:	mov	r5, r0
   2ae38:	mov	r0, r4
   2ae3c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2ae40:	ldr	r3, [pc, #52]	; 2ae7c <luaL_where@@Base+0xad78>
   2ae44:	strh	r0, [r4, #122]	; 0x7a
   2ae48:	strh	r5, [r4, #120]	; 0x78
   2ae4c:	strh	r3, [r4, #124]	; 0x7c
   2ae50:	mov	r0, r4
   2ae54:	bl	27498 <luaL_where@@Base+0x7394>
   2ae58:	mov	r0, #0
   2ae5c:	pop	{r4, r5, r6, pc}
   2ae60:	mov	r1, r3
   2ae64:	mov	r2, #4
   2ae68:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2ae6c:	ldr	r3, [pc, #12]	; 2ae80 <luaL_where@@Base+0xad7c>
   2ae70:	b	2ae44 <luaL_where@@Base+0xad40>
   2ae74:	andeq	r4, r0, r5
   2ae78:	andeq	r4, r0, r0, lsl r6
   2ae7c:	muleq	r0, r3, r8
   2ae80:	andeq	r0, r0, r4, lsl #17
   2ae84:	ldr	r3, [r0, #96]	; 0x60
   2ae88:	push	{r4, r5, r6, lr}
   2ae8c:	ldr	r5, [r3]
   2ae90:	and	r3, r5, #520093696	; 0x1f000000
   2ae94:	cmp	r3, #67108864	; 0x4000000
   2ae98:	bne	2aee0 <luaL_where@@Base+0xaddc>
   2ae9c:	ldr	r3, [r1]
   2aea0:	mov	r2, #4
   2aea4:	mov	r4, r0
   2aea8:	ldr	r1, [r3]
   2aeac:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2aeb0:	ldr	r3, [pc, #44]	; 2aee4 <luaL_where@@Base+0xade0>
   2aeb4:	strh	r5, [r4, #120]	; 0x78
   2aeb8:	strh	r3, [r4, #124]	; 0x7c
   2aebc:	strh	r0, [r4, #122]	; 0x7a
   2aec0:	mov	r0, r4
   2aec4:	bl	27498 <luaL_where@@Base+0x7394>
   2aec8:	ldr	r3, [r4, #96]	; 0x60
   2aecc:	ldr	r2, [pc, #20]	; 2aee8 <luaL_where@@Base+0xade4>
   2aed0:	mov	r1, #4
   2aed4:	str	r1, [r4, #264]	; 0x108
   2aed8:	str	r2, [r3]
   2aedc:	pop	{r4, r5, r6, pc}
   2aee0:	bl	130b0 <pclose@plt+0x14>
   2aee4:	andeq	r0, r0, r4, lsl #17
   2aee8:	andeq	r7, r0, #1012	; 0x3f4
   2aeec:	and	r3, r1, #520093696	; 0x1f000000
   2aef0:	cmp	r3, #67108864	; 0x4000000
   2aef4:	push	{r4, r5, r6, lr}
   2aef8:	mov	r5, r1
   2aefc:	sub	sp, sp, #88	; 0x58
   2af00:	mov	r4, r0
   2af04:	beq	2af24 <luaL_where@@Base+0xae20>
   2af08:	bl	28d54 <luaL_where@@Base+0x8c50>
   2af0c:	ldrh	r3, [r0, #6]
   2af10:	cmp	r3, #21
   2af14:	movne	r0, r3
   2af18:	beq	2afb4 <luaL_where@@Base+0xaeb0>
   2af1c:	add	sp, sp, #88	; 0x58
   2af20:	pop	{r4, r5, r6, pc}
   2af24:	ldr	r6, [r2]
   2af28:	mov	r2, #4
   2af2c:	mov	r1, r6
   2af30:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2af34:	ldr	r3, [pc, #144]	; 2afcc <luaL_where@@Base+0xaec8>
   2af38:	strh	r5, [r4, #120]	; 0x78
   2af3c:	strh	r3, [r4, #124]	; 0x7c
   2af40:	add	r6, r6, #16
   2af44:	strh	r0, [r4, #122]	; 0x7a
   2af48:	mov	r0, r4
   2af4c:	bl	27498 <luaL_where@@Base+0x7394>
   2af50:	ldr	r3, [r4, #-156]	; 0xffffff64
   2af54:	ldr	ip, [r4, #80]	; 0x50
   2af58:	mov	r1, #0
   2af5c:	mov	r2, #18
   2af60:	add	r0, sp, #4
   2af64:	ldr	r5, [r3, #4]
   2af68:	str	r3, [sp, #52]	; 0x34
   2af6c:	str	ip, [sp, #48]	; 0x30
   2af70:	str	r6, [sp, #60]	; 0x3c
   2af74:	str	r6, [sp, #28]
   2af78:	str	r1, [sp, #56]	; 0x38
   2af7c:	str	r2, [sp, #76]	; 0x4c
   2af80:	bl	19624 <_start@@Base+0x6274>
   2af84:	cmp	r0, #0
   2af88:	bne	2afa0 <luaL_where@@Base+0xae9c>
   2af8c:	ldr	r3, [sp, #52]	; 0x34
   2af90:	ldr	r3, [r3, #4]
   2af94:	cmp	r5, r3
   2af98:	ldrcs	r0, [sp, #16]
   2af9c:	bcs	2af1c <luaL_where@@Base+0xae18>
   2afa0:	add	r1, r4, #2336	; 0x920
   2afa4:	add	r1, r1, #12
   2afa8:	ldr	r0, [r4, #80]	; 0x50
   2afac:	mov	r2, #11
   2afb0:	bl	210d0 <luaL_where@@Base+0xfcc>
   2afb4:	mov	r1, r0
   2afb8:	mov	r2, r5
   2afbc:	mov	r0, r4
   2afc0:	bl	28894 <luaL_where@@Base+0x8790>
   2afc4:	add	sp, sp, #88	; 0x58
   2afc8:	pop	{r4, r5, r6, pc}
   2afcc:	andeq	r0, r0, r4, lsl #17
   2afd0:	ldr	r3, [r0, #96]	; 0x60
   2afd4:	push	{r4, r5, r6, lr}
   2afd8:	mov	r4, r0
   2afdc:	ldr	r2, [r1]
   2afe0:	mov	r5, r1
   2afe4:	ldr	r1, [r3]
   2afe8:	bl	2aeec <luaL_where@@Base+0xade8>
   2afec:	ldr	r3, [r4, #96]	; 0x60
   2aff0:	ldr	r1, [r3, #4]
   2aff4:	and	r2, r1, #520093696	; 0x1f000000
   2aff8:	cmp	r2, #167772160	; 0xa000000
   2affc:	beq	2b00c <luaL_where@@Base+0xaf08>
   2b000:	ldr	r2, [pc, #44]	; 2b034 <luaL_where@@Base+0xaf30>
   2b004:	str	r2, [r3]
   2b008:	pop	{r4, r5, r6, pc}
   2b00c:	ldr	r2, [r5]
   2b010:	mov	r0, r4
   2b014:	add	r2, r2, #8
   2b018:	bl	2aeec <luaL_where@@Base+0xade8>
   2b01c:	ldr	r3, [r4, #96]	; 0x60
   2b020:	ldr	r2, [pc, #16]	; 2b038 <luaL_where@@Base+0xaf34>
   2b024:	mov	r1, #4
   2b028:	str	r1, [r4, #264]	; 0x108
   2b02c:	str	r2, [r3]
   2b030:	pop	{r4, r5, r6, pc}
   2b034:	strdeq	r7, [r0, -lr]
   2b038:	andeq	r7, r0, #1012	; 0x3f4
   2b03c:	ldr	r3, [r0, #96]	; 0x60
   2b040:	push	{r4, r5, r6, lr}
   2b044:	mov	r4, r0
   2b048:	ldr	r3, [r3]
   2b04c:	and	r2, r3, #520093696	; 0x1f000000
   2b050:	cmp	r2, #167772160	; 0xa000000
   2b054:	bne	2b0a4 <luaL_where@@Base+0xafa0>
   2b058:	ldr	r2, [r1]
   2b05c:	mov	r1, r3
   2b060:	bl	2aeec <luaL_where@@Base+0xade8>
   2b064:	mov	r1, r0
   2b068:	mov	r0, r4
   2b06c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2b070:	mov	r1, #21
   2b074:	mov	r5, r0
   2b078:	mov	r0, r4
   2b07c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2b080:	ldr	r3, [pc, #56]	; 2b0c0 <luaL_where@@Base+0xafbc>
   2b084:	strh	r5, [r4, #122]	; 0x7a
   2b088:	strh	r3, [r4, #124]	; 0x7c
   2b08c:	ldr	r5, [r4, #96]	; 0x60
   2b090:	strh	r0, [r4, #120]	; 0x78
   2b094:	mov	r0, r4
   2b098:	bl	27498 <luaL_where@@Base+0x7394>
   2b09c:	str	r0, [r5]
   2b0a0:	pop	{r4, r5, r6, pc}
   2b0a4:	ldr	r2, [r4, #88]	; 0x58
   2b0a8:	mvn	r3, #8
   2b0ac:	ldr	r0, [r0, #80]	; 0x50
   2b0b0:	mov	r1, #15
   2b0b4:	str	r2, [r4, #2344]	; 0x928
   2b0b8:	str	r3, [r4, #2348]	; 0x92c
   2b0bc:	bl	130c8 <pclose@plt+0x2c>
   2b0c0:	andeq	r5, r0, sl, lsl #7
   2b0c4:	ldr	r3, [r0, #96]	; 0x60
   2b0c8:	push	{r4, r5, r6, lr}
   2b0cc:	mov	r5, r1
   2b0d0:	ldr	r2, [r1]
   2b0d4:	ldr	r1, [r3]
   2b0d8:	mov	r4, r0
   2b0dc:	bl	2aeec <luaL_where@@Base+0xade8>
   2b0e0:	ldr	r3, [r5, #8]
   2b0e4:	cmp	r3, #192	; 0xc0
   2b0e8:	beq	2b160 <luaL_where@@Base+0xb05c>
   2b0ec:	cmp	r3, #194	; 0xc2
   2b0f0:	ldr	r3, [r4, #96]	; 0x60
   2b0f4:	beq	2b114 <luaL_where@@Base+0xb010>
   2b0f8:	ldr	r2, [pc, #196]	; 2b1c4 <luaL_where@@Base+0xb0c0>
   2b0fc:	mov	r1, #5
   2b100:	str	r1, [r4, #264]	; 0x108
   2b104:	str	r2, [r3, #8]
   2b108:	str	r2, [r3, #4]
   2b10c:	str	r2, [r3]
   2b110:	pop	{r4, r5, r6, pc}
   2b114:	ldr	r6, [r3, #4]
   2b118:	and	r3, r6, #520093696	; 0x1f000000
   2b11c:	cmp	r3, #67108864	; 0x4000000
   2b120:	bne	2b1b0 <luaL_where@@Base+0xb0ac>
   2b124:	ldr	r3, [r5]
   2b128:	mov	r2, #4
   2b12c:	mov	r0, r4
   2b130:	ldr	r1, [r3, #8]
   2b134:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2b138:	ldr	r3, [pc, #136]	; 2b1c8 <luaL_where@@Base+0xb0c4>
   2b13c:	strh	r6, [r4, #120]	; 0x78
   2b140:	strh	r3, [r4, #124]	; 0x7c
   2b144:	strh	r0, [r4, #122]	; 0x7a
   2b148:	mov	r0, r4
   2b14c:	bl	27498 <luaL_where@@Base+0x7394>
   2b150:	mov	r2, #3
   2b154:	ldr	r3, [r4, #96]	; 0x60
   2b158:	str	r2, [r5, #4]
   2b15c:	b	2b0f8 <luaL_where@@Base+0xaff4>
   2b160:	ldr	r3, [r4, #-156]	; 0xffffff64
   2b164:	ldr	r1, [pc, #96]	; 2b1cc <luaL_where@@Base+0xb0c8>
   2b168:	ldr	r2, [r3]
   2b16c:	add	r0, r2, r0, lsl #4
   2b170:	b	2b17c <luaL_where@@Base+0xb078>
   2b174:	uxth	r0, r0
   2b178:	add	r0, r2, r0, lsl #4
   2b17c:	ldr	r0, [r0]
   2b180:	lsr	r3, r0, #28
   2b184:	cmp	r3, #8
   2b188:	beq	2b174 <luaL_where@@Base+0xb070>
   2b18c:	and	r3, r0, r1
   2b190:	cmp	r3, #545259520	; 0x20800000
   2b194:	beq	2b174 <luaL_where@@Base+0xb070>
   2b198:	ldr	r2, [pc, #48]	; 2b1d0 <luaL_where@@Base+0xb0cc>
   2b19c:	ldr	r3, [pc, #48]	; 2b1d4 <luaL_where@@Base+0xb0d0>
   2b1a0:	and	r0, r0, r2
   2b1a4:	cmp	r0, r3
   2b1a8:	ldrne	r3, [r4, #96]	; 0x60
   2b1ac:	bne	2b0f8 <luaL_where@@Base+0xaff4>
   2b1b0:	add	r1, r4, #2336	; 0x920
   2b1b4:	add	r1, r1, #12
   2b1b8:	ldr	r0, [r4, #80]	; 0x50
   2b1bc:	mov	r2, #11
   2b1c0:	bl	210d0 <luaL_where@@Base+0xfcc>
   2b1c4:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   2b1c8:	andeq	r0, r0, r4, lsl #17
   2b1cc:			; <UNDEFINED> instruction: 0xf0800000
   2b1d0:	andsle	r0, r0, r0
   2b1d4:	andsne	r0, r0, r0
   2b1d8:	push	{r4, r5, r6, r7, lr}
   2b1dc:	add	r5, r0, r1, lsl #1
   2b1e0:	add	r5, r5, #284	; 0x11c
   2b1e4:	sub	sp, sp, #12
   2b1e8:	ldrh	r6, [r5, #2]
   2b1ec:	ldr	r7, [r0, #16]
   2b1f0:	cmp	r6, #0
   2b1f4:	bne	2b208 <luaL_where@@Base+0xb104>
   2b1f8:	b	2b224 <luaL_where@@Base+0xb120>
   2b1fc:	ldrh	r6, [ip, #6]
   2b200:	cmp	r6, #0
   2b204:	beq	2b224 <luaL_where@@Base+0xb120>
   2b208:	ldr	lr, [r7, r6, lsl #3]
   2b20c:	add	ip, r7, r6, lsl #3
   2b210:	cmp	r2, lr
   2b214:	bne	2b1fc <luaL_where@@Base+0xb0f8>
   2b218:	add	r0, r6, #83886080	; 0x5000000
   2b21c:	add	sp, sp, #12
   2b220:	pop	{r4, r5, r6, r7, pc}
   2b224:	ldr	r6, [r0, #20]
   2b228:	ldr	r3, [r0, #240]	; 0xf0
   2b22c:	mov	r4, r0
   2b230:	cmp	r6, r3
   2b234:	bls	2b26c <luaL_where@@Base+0xb168>
   2b238:	sub	r6, r6, #1
   2b23c:	mov	ip, #5
   2b240:	add	r0, r7, r6, lsl #3
   2b244:	str	r6, [r4, #20]
   2b248:	str	r2, [r7, r6, lsl #3]
   2b24c:	strb	r1, [r0, #5]
   2b250:	strb	ip, [r0, #4]
   2b254:	ldrh	r2, [r5, #2]
   2b258:	strh	r2, [r0, #6]
   2b25c:	add	r0, r6, #83886080	; 0x5000000
   2b260:	strh	r6, [r5, #2]
   2b264:	add	sp, sp, #12
   2b268:	pop	{r4, r5, r6, r7, pc}
   2b26c:	stm	sp, {r1, r2}
   2b270:	bl	26bc8 <luaL_where@@Base+0x6ac4>
   2b274:	ldr	r7, [r4, #16]
   2b278:	ldm	sp, {r1, r2}
   2b27c:	b	2b238 <luaL_where@@Base+0xb134>
   2b280:	ldr	r3, [r0, #128]	; 0x80
   2b284:	ldr	r2, [r0, #144]	; 0x90
   2b288:	add	r3, r3, #16
   2b28c:	mov	r1, #26
   2b290:	add	r2, r3, r2
   2b294:	b	2b1d8 <luaL_where@@Base+0xb0d4>
   2b298:	ldrb	r3, [r0, #132]	; 0x84
   2b29c:	push	{lr}		; (str lr, [sp, #-4]!)
   2b2a0:	and	r3, r3, #31
   2b2a4:	cmp	r3, #10
   2b2a8:	ldr	r2, [r0, #128]	; 0x80
   2b2ac:	ldr	lr, [r0, #144]	; 0x90
   2b2b0:	bne	2b320 <luaL_where@@Base+0xb21c>
   2b2b4:	ldr	r1, [r0, #-156]	; 0xffffff64
   2b2b8:	ldrh	r3, [r2, #6]
   2b2bc:	ldr	ip, [r1]
   2b2c0:	ldr	r3, [ip, r3, lsl #4]
   2b2c4:	lsr	r1, r3, #28
   2b2c8:	cmp	r1, #8
   2b2cc:	bne	2b2e4 <luaL_where@@Base+0xb1e0>
   2b2d0:	uxth	r3, r3
   2b2d4:	ldr	r3, [ip, r3, lsl #4]
   2b2d8:	lsr	r1, r3, #28
   2b2dc:	cmp	r1, #8
   2b2e0:	beq	2b2d0 <luaL_where@@Base+0xb1cc>
   2b2e4:	sub	ip, r1, #5
   2b2e8:	and	r1, r1, #13
   2b2ec:	cmp	r1, #0
   2b2f0:	cmpne	ip, #1
   2b2f4:	bhi	2b308 <luaL_where@@Base+0xb204>
   2b2f8:	add	r2, r2, lr
   2b2fc:	mov	r1, #26
   2b300:	pop	{lr}		; (ldr lr, [sp], #4)
   2b304:	b	2b1d8 <luaL_where@@Base+0xb0d4>
   2b308:	and	r1, r3, #-201326592	; 0xf4000000
   2b30c:	cmp	r1, #872415232	; 0x34000000
   2b310:	beq	2b2f8 <luaL_where@@Base+0xb1f4>
   2b314:	and	r3, r3, #-134217728	; 0xf8000000
   2b318:	cmp	r3, #939524096	; 0x38000000
   2b31c:	beq	2b2f8 <luaL_where@@Base+0xb1f4>
   2b320:	add	r2, r2, lr
   2b324:	mov	r1, #25
   2b328:	pop	{lr}		; (ldr lr, [sp], #4)
   2b32c:	b	2b1d8 <luaL_where@@Base+0xb0d4>
   2b330:	ldr	ip, [r0, #128]	; 0x80
   2b334:	ldr	r2, [r0, #144]	; 0x90
   2b338:	ldrb	r1, [r0, #133]	; 0x85
   2b33c:	add	r2, ip, r2
   2b340:	b	2b1d8 <luaL_where@@Base+0xb0d4>
   2b344:	push	{r4, lr}
   2b348:	mov	r4, r0
   2b34c:	bl	1c02c <_start@@Base+0x8c7c>
   2b350:	cmp	r0, #0
   2b354:	popeq	{r4, pc}
   2b358:	sub	r2, r4, #240	; 0xf0
   2b35c:	mov	r0, r4
   2b360:	mov	r1, #26
   2b364:	pop	{r4, lr}
   2b368:	b	2b1d8 <luaL_where@@Base+0xb0d4>
   2b36c:	mov	ip, r1
   2b370:	ldrb	r1, [r1, #5]
   2b374:	sub	r3, r1, #22
   2b378:	cmp	r3, #7
   2b37c:	ldrls	pc, [pc, r3, lsl #2]
   2b380:	b	2b3ec <luaL_where@@Base+0xb2e8>
   2b384:	andeq	fp, r2, ip, lsr #7
   2b388:	andeq	fp, r2, ip, asr #7
   2b38c:	ldrdeq	fp, [r2], -r4
   2b390:	andeq	fp, r2, r0, ror #7
   2b394:	andeq	fp, r2, ip, ror #7
   2b398:	andeq	fp, r2, ip, ror #7
   2b39c:	andeq	fp, r2, r4, lsr #7
   2b3a0:	andeq	fp, r2, r4, lsr #7
   2b3a4:	ldrd	r2, [ip, #8]
   2b3a8:	b	28dc0 <luaL_where@@Base+0x8cbc>
   2b3ac:	ldrb	r3, [ip, #4]
   2b3b0:	and	r2, r3, #31
   2b3b4:	lsl	r0, r3, #24
   2b3b8:	and	r0, r0, #520093696	; 0x1f000000
   2b3bc:	sub	r0, r0, r2
   2b3c0:	add	r0, r0, #32512	; 0x7f00
   2b3c4:	add	r0, r0, #255	; 0xff
   2b3c8:	bx	lr
   2b3cc:	ldr	r1, [ip]
   2b3d0:	b	26ccc <luaL_where@@Base+0x6bc8>
   2b3d4:	ldrb	r2, [ip, #4]
   2b3d8:	ldr	r1, [ip]
   2b3dc:	b	2a6f0 <luaL_where@@Base+0xa5ec>
   2b3e0:	ldr	r2, [ip]
   2b3e4:	mov	r1, #25
   2b3e8:	b	2b1d8 <luaL_where@@Base+0xb0d4>
   2b3ec:	ldr	r0, [pc]	; 2b3f4 <luaL_where@@Base+0xb2f0>
   2b3f0:	bx	lr
   2b3f4:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   2b3f8:	push	{r4, r5, lr}
   2b3fc:	ldr	ip, [sp, #16]
   2b400:	ldr	lr, [sp, #12]
   2b404:	cmp	ip, #32768	; 0x8000
   2b408:	add	r1, r1, ip, lsl #3
   2b40c:	bcc	2b4a4 <luaL_where@@Base+0xb3a0>
   2b410:	mov	r4, r0
   2b414:	ldrh	r0, [r1, #6]
   2b418:	bic	r0, r0, #127	; 0x7f
   2b41c:	cmp	r0, #128	; 0x80
   2b420:	beq	2b49c <luaL_where@@Base+0xb398>
   2b424:	and	r0, ip, #31
   2b428:	mov	r5, #1
   2b42c:	ands	r0, lr, r5, lsl r0
   2b430:	beq	2b470 <luaL_where@@Base+0xb36c>
   2b434:	cmp	r3, #0
   2b438:	beq	2b470 <luaL_where@@Base+0xb36c>
   2b43c:	ldr	r0, [r2]
   2b440:	uxth	lr, r0
   2b444:	cmp	ip, lr
   2b448:	addne	r3, r2, r3, lsl #2
   2b44c:	subne	r3, r3, #4
   2b450:	bne	2b468 <luaL_where@@Base+0xb364>
   2b454:	b	2b4ac <luaL_where@@Base+0xb3a8>
   2b458:	ldr	r0, [r2, #4]!
   2b45c:	uxth	lr, r0
   2b460:	cmp	ip, lr
   2b464:	beq	2b4ac <luaL_where@@Base+0xb3a8>
   2b468:	cmp	r3, r2
   2b46c:	bne	2b458 <luaL_where@@Base+0xb354>
   2b470:	ldrb	r3, [r1, #4]
   2b474:	sub	ip, ip, #32768	; 0x8000
   2b478:	mov	r2, #0
   2b47c:	and	r3, r3, #31
   2b480:	orr	r3, r3, #3584	; 0xe00
   2b484:	strh	r3, [r4, #124]	; 0x7c
   2b488:	strh	ip, [r4, #120]	; 0x78
   2b48c:	strh	r2, [r4, #122]	; 0x7a
   2b490:	mov	r0, r4
   2b494:	pop	{r4, r5, lr}
   2b498:	b	27498 <luaL_where@@Base+0x7394>
   2b49c:	mov	r0, #0
   2b4a0:	pop	{r4, r5, pc}
   2b4a4:	pop	{r4, r5, lr}
   2b4a8:	b	2b36c <luaL_where@@Base+0xb268>
   2b4ac:	lsr	r0, r0, #24
   2b4b0:	add	r0, r4, r0, lsl #2
   2b4b4:	ldr	r0, [r0, #488]	; 0x1e8
   2b4b8:	bics	r0, r0, #196608	; 0x30000
   2b4bc:	popne	{r4, r5, pc}
   2b4c0:	b	2b470 <luaL_where@@Base+0xb36c>
   2b4c4:	ldr	r3, [pc, #124]	; 2b548 <luaL_where@@Base+0xb444>
   2b4c8:	push	{r4, r5, r6, lr}
   2b4cc:	cmp	r1, r3
   2b4d0:	mov	r2, r1
   2b4d4:	ldrne	r3, [r0, #80]	; 0x50
   2b4d8:	mov	r1, #25
   2b4dc:	mov	r4, r0
   2b4e0:	ldrne	r3, [r3, #16]
   2b4e4:	ldreq	r5, [r0, #104]	; 0x68
   2b4e8:	ldrne	r3, [r3, #-8]
   2b4ec:	ldrne	r3, [r3, #16]
   2b4f0:	ldrbne	r5, [r3, #-57]	; 0xffffffc7
   2b4f4:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2b4f8:	ldr	r3, [r4, #96]	; 0x60
   2b4fc:	lsl	ip, r5, #2
   2b500:	orr	r0, r0, #131072	; 0x20000
   2b504:	str	r0, [r3, r5, lsl #2]
   2b508:	ldr	r0, [r4, #184]	; 0xb8
   2b50c:	ldr	r1, [r4, #104]	; 0x68
   2b510:	add	r0, r0, #1
   2b514:	cmp	r5, r1
   2b518:	str	r0, [r4, #184]	; 0xb8
   2b51c:	bls	2b540 <luaL_where@@Base+0xb43c>
   2b520:	sub	r1, r1, #-1073741823	; 0xc0000001
   2b524:	sub	r2, r3, #4
   2b528:	add	r2, r2, ip
   2b52c:	add	r3, r3, r1, lsl #2
   2b530:	mov	r1, #0
   2b534:	str	r1, [r3, #4]!
   2b538:	cmp	r3, r2
   2b53c:	bne	2b534 <luaL_where@@Base+0xb430>
   2b540:	add	r0, r5, #1
   2b544:	pop	{r4, r5, r6, pc}
   2b548:	andeq	fp, r6, ip, asr #27
   2b54c:	push	{r4, lr}
   2b550:	sub	r2, r0, #304	; 0x130
   2b554:	mov	r1, #25
   2b558:	mov	r4, r0
   2b55c:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2b560:	ldr	r2, [pc, #24]	; 2b580 <luaL_where@@Base+0xb47c>
   2b564:	mov	r3, #0
   2b568:	strh	r2, [r4, #124]	; 0x7c
   2b56c:	strh	r3, [r4, #122]	; 0x7a
   2b570:	strh	r0, [r4, #120]	; 0x78
   2b574:	mov	r0, r4
   2b578:	pop	{r4, lr}
   2b57c:	b	27498 <luaL_where@@Base+0x7394>
   2b580:	andeq	r5, r0, r5, lsl #8
   2b584:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b588:	mov	r4, r0
   2b58c:	mov	r1, #255	; 0xff
   2b590:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2b594:	ldr	r3, [r4, #96]	; 0x60
   2b598:	ldr	r1, [r3]
   2b59c:	cmp	r1, #0
   2b5a0:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b5a4:	ldr	r9, [pc, #220]	; 2b688 <luaL_where@@Base+0xb584>
   2b5a8:	ldr	r8, [pc, #220]	; 2b68c <luaL_where@@Base+0xb588>
   2b5ac:	uxth	r6, r0
   2b5b0:	mov	r5, #0
   2b5b4:	mov	r7, #2
   2b5b8:	mov	r0, r4
   2b5bc:	bl	281cc <luaL_where@@Base+0x80c8>
   2b5c0:	strh	r9, [r4, #124]	; 0x7c
   2b5c4:	strh	r6, [r4, #122]	; 0x7a
   2b5c8:	lsl	fp, r5, #2
   2b5cc:	uxth	sl, r0
   2b5d0:	strh	sl, [r4, #120]	; 0x78
   2b5d4:	mov	r0, r4
   2b5d8:	bl	27498 <luaL_where@@Base+0x7394>
   2b5dc:	strh	sl, [r4, #120]	; 0x78
   2b5e0:	strh	r8, [r4, #124]	; 0x7c
   2b5e4:	strh	r7, [r4, #122]	; 0x7a
   2b5e8:	mov	r0, r4
   2b5ec:	ldr	sl, [r4, #96]	; 0x60
   2b5f0:	bl	27498 <luaL_where@@Base+0x7394>
   2b5f4:	ldr	r3, [r4, #96]	; 0x60
   2b5f8:	add	r3, r3, fp
   2b5fc:	str	r0, [sl, r5, lsl #2]
   2b600:	ldr	r1, [r3, #4]
   2b604:	add	r5, r5, #1
   2b608:	cmp	r1, #0
   2b60c:	bne	2b5b8 <luaL_where@@Base+0xb4b4>
   2b610:	cmp	r5, #1
   2b614:	popls	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b618:	mov	r0, r4
   2b61c:	bl	2b54c <luaL_where@@Base+0xb448>
   2b620:	ldr	r6, [r4, #96]	; 0x60
   2b624:	ldr	r3, [r6]
   2b628:	cmp	r3, #0
   2b62c:	mov	r8, r0
   2b630:	beq	2b668 <luaL_where@@Base+0xb564>
   2b634:	ldr	r7, [pc, #84]	; 2b690 <luaL_where@@Base+0xb58c>
   2b638:	mov	r0, r8
   2b63c:	mov	r5, #4
   2b640:	strh	r0, [r4, #120]	; 0x78
   2b644:	strh	r3, [r4, #122]	; 0x7a
   2b648:	strh	r7, [r4, #124]	; 0x7c
   2b64c:	mov	r0, r4
   2b650:	bl	27498 <luaL_where@@Base+0x7394>
   2b654:	ldr	r6, [r4, #96]	; 0x60
   2b658:	ldr	r3, [r6, r5]
   2b65c:	add	r5, r5, #4
   2b660:	cmp	r3, #0
   2b664:	bne	2b640 <luaL_where@@Base+0xb53c>
   2b668:	ldr	r3, [pc, #36]	; 2b694 <luaL_where@@Base+0xb590>
   2b66c:	strh	r0, [r4, #120]	; 0x78
   2b670:	strh	r8, [r4, #122]	; 0x7a
   2b674:	strh	r3, [r4, #124]	; 0x7c
   2b678:	mov	r0, r4
   2b67c:	bl	27498 <luaL_where@@Base+0x7394>
   2b680:	str	r0, [r6]
   2b684:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b688:	muleq	r0, r3, r6
   2b68c:	andeq	r5, r0, r4, lsl #24
   2b690:	andeq	r5, r0, r5, lsl #10
   2b694:	andeq	r5, r0, r4, lsl #12
   2b698:	ldr	r3, [r0, #96]	; 0x60
   2b69c:	push	{r4, r5, r6, r7, r8, lr}
   2b6a0:	mov	r6, r1
   2b6a4:	ldr	r1, [r3]
   2b6a8:	mov	r4, r0
   2b6ac:	bl	27e88 <luaL_where@@Base+0x7d84>
   2b6b0:	mov	r7, r0
   2b6b4:	mov	r0, r4
   2b6b8:	bl	2b54c <luaL_where@@Base+0xb448>
   2b6bc:	mov	r3, r7
   2b6c0:	ldr	r1, [r6, #8]
   2b6c4:	mov	r5, r0
   2b6c8:	mov	r2, r0
   2b6cc:	mov	r0, r4
   2b6d0:	bl	27a00 <luaL_where@@Base+0x78fc>
   2b6d4:	ldr	r3, [pc, #28]	; 2b6f8 <luaL_where@@Base+0xb5f4>
   2b6d8:	strh	r5, [r4, #122]	; 0x7a
   2b6dc:	strh	r3, [r4, #124]	; 0x7c
   2b6e0:	ldr	r5, [r4, #96]	; 0x60
   2b6e4:	strh	r0, [r4, #120]	; 0x78
   2b6e8:	mov	r0, r4
   2b6ec:	bl	27498 <luaL_where@@Base+0x7394>
   2b6f0:	str	r0, [r5]
   2b6f4:	pop	{r4, r5, r6, r7, r8, pc}
   2b6f8:	andeq	r5, r0, r4, lsl #12
   2b6fc:	ldr	r3, [r0, #96]	; 0x60
   2b700:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b704:	mov	r6, r1
   2b708:	sub	sp, sp, #20
   2b70c:	ldr	r1, [r3]
   2b710:	mov	r4, r0
   2b714:	bl	27e88 <luaL_where@@Base+0x7d84>
   2b718:	ldr	r3, [r4, #96]	; 0x60
   2b71c:	ldr	r1, [r3, #4]
   2b720:	mov	r7, r0
   2b724:	mov	r0, r4
   2b728:	bl	281cc <luaL_where@@Base+0x80c8>
   2b72c:	ldr	r3, [r4, #96]	; 0x60
   2b730:	ldr	r1, [r3, #8]
   2b734:	tst	r1, #520093696	; 0x1f000000
   2b738:	mov	r5, r0
   2b73c:	mov	r0, r4
   2b740:	bne	2b78c <luaL_where@@Base+0xb688>
   2b744:	bl	2b54c <luaL_where@@Base+0xb448>
   2b748:	mov	r2, r0
   2b74c:	uxth	r6, r2
   2b750:	str	r5, [sp]
   2b754:	mov	r3, r7
   2b758:	mov	r1, #22
   2b75c:	mov	r0, r4
   2b760:	bl	27a00 <luaL_where@@Base+0x78fc>
   2b764:	ldr	r3, [pc, #336]	; 2b8bc <luaL_where@@Base+0xb7b8>
   2b768:	strh	r6, [r4, #122]	; 0x7a
   2b76c:	strh	r3, [r4, #124]	; 0x7c
   2b770:	ldr	r5, [r4, #96]	; 0x60
   2b774:	strh	r0, [r4, #120]	; 0x78
   2b778:	mov	r0, r4
   2b77c:	bl	27498 <luaL_where@@Base+0x7394>
   2b780:	str	r0, [r5]
   2b784:	add	sp, sp, #20
   2b788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b78c:	bl	27e88 <luaL_where@@Base+0x7d84>
   2b790:	ldr	r1, [r6]
   2b794:	uxth	r8, r5
   2b798:	add	r1, r1, #8
   2b79c:	mov	sl, r0
   2b7a0:	mov	r0, r4
   2b7a4:	bl	210f8 <luaL_where@@Base+0xff4>
   2b7a8:	cmp	r0, #1
   2b7ac:	ble	2b890 <luaL_where@@Base+0xb78c>
   2b7b0:	mov	r1, #1
   2b7b4:	mov	r0, r4
   2b7b8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2b7bc:	ldr	r3, [pc, #252]	; 2b8c0 <luaL_where@@Base+0xb7bc>
   2b7c0:	strh	r8, [r4, #120]	; 0x78
   2b7c4:	strh	r3, [r4, #124]	; 0x7c
   2b7c8:	ldr	r9, [pc, #244]	; 2b8c4 <luaL_where@@Base+0xb7c0>
   2b7cc:	uxth	fp, r7
   2b7d0:	strh	r0, [r4, #122]	; 0x7a
   2b7d4:	mov	r0, r4
   2b7d8:	bl	27498 <luaL_where@@Base+0x7394>
   2b7dc:	mov	r0, r4
   2b7e0:	bl	2b54c <luaL_where@@Base+0xb448>
   2b7e4:	strh	sl, [r4, #122]	; 0x7a
   2b7e8:	strh	r9, [r4, #124]	; 0x7c
   2b7ec:	uxth	r6, r0
   2b7f0:	strh	r6, [r4, #120]	; 0x78
   2b7f4:	mov	r0, r4
   2b7f8:	bl	27498 <luaL_where@@Base+0x7394>
   2b7fc:	strh	r9, [r4, #124]	; 0x7c
   2b800:	strh	fp, [r4, #122]	; 0x7a
   2b804:	strh	r0, [r4, #120]	; 0x78
   2b808:	mov	r0, r4
   2b80c:	bl	27498 <luaL_where@@Base+0x7394>
   2b810:	ldr	r3, [pc, #164]	; 2b8bc <luaL_where@@Base+0xb7b8>
   2b814:	strh	r6, [r4, #122]	; 0x7a
   2b818:	strh	r3, [r4, #124]	; 0x7c
   2b81c:	strh	r0, [r4, #120]	; 0x78
   2b820:	mov	r0, r4
   2b824:	bl	27498 <luaL_where@@Base+0x7394>
   2b828:	mov	sl, r0
   2b82c:	mov	r0, r4
   2b830:	bl	2b54c <luaL_where@@Base+0xb448>
   2b834:	cmp	sl, #0
   2b838:	mov	r2, r0
   2b83c:	beq	2b74c <luaL_where@@Base+0xb648>
   2b840:	uxth	r6, r2
   2b844:	strh	r6, [r4, #120]	; 0x78
   2b848:	strh	r9, [r4, #124]	; 0x7c
   2b84c:	strh	fp, [r4, #122]	; 0x7a
   2b850:	mov	r0, r4
   2b854:	bl	27498 <luaL_where@@Base+0x7394>
   2b858:	mvn	r1, #0
   2b85c:	mov	r7, sl
   2b860:	str	r0, [sp, #12]
   2b864:	mov	r0, r4
   2b868:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2b86c:	ldr	r3, [pc, #84]	; 2b8c8 <luaL_where@@Base+0xb7c4>
   2b870:	strh	r8, [r4, #120]	; 0x78
   2b874:	strh	r3, [r4, #124]	; 0x7c
   2b878:	strh	r0, [r4, #122]	; 0x7a
   2b87c:	mov	r0, r4
   2b880:	bl	27498 <luaL_where@@Base+0x7394>
   2b884:	ldr	r2, [sp, #12]
   2b888:	mov	r5, r0
   2b88c:	b	2b750 <luaL_where@@Base+0xb64c>
   2b890:	mov	r1, #1
   2b894:	mov	r0, r4
   2b898:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2b89c:	ldr	r3, [pc, #40]	; 2b8cc <luaL_where@@Base+0xb7c8>
   2b8a0:	strh	r8, [r4, #120]	; 0x78
   2b8a4:	strh	r3, [r4, #124]	; 0x7c
   2b8a8:	strh	r0, [r4, #122]	; 0x7a
   2b8ac:	mov	r0, r4
   2b8b0:	bl	27498 <luaL_where@@Base+0x7394>
   2b8b4:	mov	r0, r4
   2b8b8:	b	2b744 <luaL_where@@Base+0xb640>
   2b8bc:	andeq	r5, r0, r4, lsl #12
   2b8c0:	muleq	r0, r3, r3
   2b8c4:	andeq	r5, r0, r5, lsl #10
   2b8c8:	andeq	r2, r0, r3, lsl r9
   2b8cc:	muleq	r0, r3, r2
   2b8d0:	ldr	r3, [r0, #88]	; 0x58
   2b8d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2b8d8:	mov	r2, #12
   2b8dc:	ldr	r5, [r3, #24]
   2b8e0:	mov	r4, r0
   2b8e4:	mov	r1, r5
   2b8e8:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2b8ec:	add	r2, r5, #24
   2b8f0:	mov	r1, #25
   2b8f4:	mov	r0, r4
   2b8f8:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2b8fc:	mov	r1, #34	; 0x22
   2b900:	ldr	r7, [pc, #328]	; 2ba50 <luaL_where@@Base+0xb94c>
   2b904:	mov	r2, r0
   2b908:	mov	r0, r4
   2b90c:	bl	27a00 <luaL_where@@Base+0x78fc>
   2b910:	ldr	r3, [pc, #316]	; 2ba54 <luaL_where@@Base+0xb950>
   2b914:	mov	r1, #28
   2b918:	mov	r2, #0
   2b91c:	mov	r5, r0
   2b920:	mov	r0, r4
   2b924:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   2b928:	strh	r5, [r4, #120]	; 0x78
   2b92c:	strh	r7, [r4, #124]	; 0x7c
   2b930:	uxth	r6, r0
   2b934:	strh	r6, [r4, #122]	; 0x7a
   2b938:	mov	r0, r4
   2b93c:	bl	27498 <luaL_where@@Base+0x7394>
   2b940:	ldr	r3, [r4, #96]	; 0x60
   2b944:	ldr	r1, [r3]
   2b948:	cmp	r1, #0
   2b94c:	mov	r5, r0
   2b950:	bne	2b95c <luaL_where@@Base+0xb858>
   2b954:	str	r5, [r3]
   2b958:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b95c:	mov	r0, r4
   2b960:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   2b964:	ldr	r3, [r4, #96]	; 0x60
   2b968:	uxth	r5, r5
   2b96c:	ldr	r9, [r3, #4]
   2b970:	cmp	r9, #0
   2b974:	mov	r8, r0
   2b978:	bne	2b9d4 <luaL_where@@Base+0xb8d0>
   2b97c:	ldr	r3, [pc, #212]	; 2ba58 <luaL_where@@Base+0xb954>
   2b980:	strh	r0, [r4, #122]	; 0x7a
   2b984:	strh	r3, [r4, #124]	; 0x7c
   2b988:	strh	r5, [r4, #120]	; 0x78
   2b98c:	mov	r0, r4
   2b990:	bl	27498 <luaL_where@@Base+0x7394>
   2b994:	ldr	r3, [pc, #192]	; 2ba5c <luaL_where@@Base+0xb958>
   2b998:	strh	r9, [r4, #122]	; 0x7a
   2b99c:	strh	r3, [r4, #124]	; 0x7c
   2b9a0:	strh	r0, [r4, #120]	; 0x78
   2b9a4:	mov	r0, r4
   2b9a8:	bl	27498 <luaL_where@@Base+0x7394>
   2b9ac:	ldr	r3, [pc, #172]	; 2ba60 <luaL_where@@Base+0xb95c>
   2b9b0:	strh	r6, [r4, #122]	; 0x7a
   2b9b4:	strh	r3, [r4, #124]	; 0x7c
   2b9b8:	strh	r0, [r4, #120]	; 0x78
   2b9bc:	mov	r0, r4
   2b9c0:	bl	27498 <luaL_where@@Base+0x7394>
   2b9c4:	ldr	r3, [r4, #96]	; 0x60
   2b9c8:	mov	r5, r0
   2b9cc:	str	r5, [r3]
   2b9d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b9d4:	mov	r1, r9
   2b9d8:	mov	r0, r4
   2b9dc:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   2b9e0:	uxth	r8, r8
   2b9e4:	strh	r7, [r4, #124]	; 0x7c
   2b9e8:	strh	r8, [r4, #122]	; 0x7a
   2b9ec:	sub	r7, r7, #256	; 0x100
   2b9f0:	strh	r0, [r4, #120]	; 0x78
   2b9f4:	mov	r0, r4
   2b9f8:	bl	27498 <luaL_where@@Base+0x7394>
   2b9fc:	strh	r6, [r4, #122]	; 0x7a
   2ba00:	strh	r7, [r4, #124]	; 0x7c
   2ba04:	strh	r0, [r4, #120]	; 0x78
   2ba08:	mov	r0, r4
   2ba0c:	bl	27498 <luaL_where@@Base+0x7394>
   2ba10:	ldr	r3, [pc, #64]	; 2ba58 <luaL_where@@Base+0xb954>
   2ba14:	strh	r5, [r4, #120]	; 0x78
   2ba18:	strh	r3, [r4, #124]	; 0x7c
   2ba1c:	strh	r0, [r4, #122]	; 0x7a
   2ba20:	mov	r0, r4
   2ba24:	bl	27498 <luaL_where@@Base+0x7394>
   2ba28:	ldr	r2, [pc, #44]	; 2ba5c <luaL_where@@Base+0xb958>
   2ba2c:	mov	r3, #0
   2ba30:	strh	r2, [r4, #124]	; 0x7c
   2ba34:	strh	r3, [r4, #122]	; 0x7a
   2ba38:	strh	r0, [r4, #120]	; 0x78
   2ba3c:	mov	r0, r4
   2ba40:	bl	27498 <luaL_where@@Base+0x7394>
   2ba44:	strh	r8, [r4, #122]	; 0x7a
   2ba48:	strh	r7, [r4, #124]	; 0x7c
   2ba4c:	b	2b9b8 <luaL_where@@Base+0xb8b4>
   2ba50:	andeq	r2, r0, lr, lsl #20
   2ba54:	svccc	0x00f00000	; IMB
   2ba58:	andeq	r2, r0, lr, lsl #22
   2ba5c:	andeq	r3, r0, lr, lsl #10
   2ba60:	andeq	r2, r0, lr, lsl #18
   2ba64:	push	{r4, r5, r6, r7, lr}
   2ba68:	mov	r7, r1
   2ba6c:	ldr	r1, [r3, #4]
   2ba70:	mov	r6, r3
   2ba74:	add	r3, r1, #4
   2ba78:	cmn	r3, #10
   2ba7c:	sub	sp, sp, #12
   2ba80:	mov	r4, r0
   2ba84:	bls	2bac4 <luaL_where@@Base+0xb9c0>
   2ba88:	cmp	r2, #0
   2ba8c:	mov	r5, r2
   2ba90:	beq	2bae4 <luaL_where@@Base+0xb9e0>
   2ba94:	mov	r0, r4
   2ba98:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2ba9c:	mov	r3, r5
   2baa0:	mov	r2, r7
   2baa4:	mov	r1, #92	; 0x5c
   2baa8:	str	r0, [sp]
   2baac:	mov	r0, r4
   2bab0:	bl	27a00 <luaL_where@@Base+0x78fc>
   2bab4:	mov	r3, #1
   2bab8:	strb	r3, [r4, #113]	; 0x71
   2babc:	add	sp, sp, #12
   2bac0:	pop	{r4, r5, r6, r7, pc}
   2bac4:	cmn	r1, #1
   2bac8:	bne	2bafc <luaL_where@@Base+0xb9f8>
   2bacc:	mov	r1, #25
   2bad0:	mov	r2, #0
   2bad4:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2bad8:	ldr	r1, [r6, #4]
   2badc:	mov	r5, r0
   2bae0:	b	2ba94 <luaL_where@@Base+0xb990>
   2bae4:	mov	r1, #25
   2bae8:	ldr	r2, [r6]
   2baec:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2baf0:	ldr	r1, [r6, #4]
   2baf4:	mov	r5, r0
   2baf8:	b	2ba94 <luaL_where@@Base+0xb990>
   2bafc:	bl	130b0 <pclose@plt+0x14>
   2bb00:	ldr	r3, [r0, #96]	; 0x60
   2bb04:	push	{r4, r5, r6, lr}
   2bb08:	mov	r4, r0
   2bb0c:	ldr	r2, [r1]
   2bb10:	mov	r5, r1
   2bb14:	ldr	r1, [r3]
   2bb18:	bl	28d54 <luaL_where@@Base+0x8c50>
   2bb1c:	ldr	r1, [r4, #96]	; 0x60
   2bb20:	ldr	r2, [r1, #4]
   2bb24:	cmp	r2, #0
   2bb28:	beq	2bb44 <luaL_where@@Base+0xba40>
   2bb2c:	ldr	r3, [r5]
   2bb30:	mov	r0, r4
   2bb34:	add	r3, r3, #8
   2bb38:	ldr	r1, [r1]
   2bb3c:	pop	{r4, r5, r6, lr}
   2bb40:	b	2ba64 <luaL_where@@Base+0xb960>
   2bb44:	mov	r0, r4
   2bb48:	bl	130b0 <pclose@plt+0x14>
   2bb4c:	push	{r4, r5, r6, lr}
   2bb50:	add	r6, r0, #340	; 0x154
   2bb54:	mov	r5, r0
   2bb58:	ldrh	r0, [r6]
   2bb5c:	sub	sp, sp, #8
   2bb60:	ldr	ip, [r5, #16]
   2bb64:	cmp	r0, #0
   2bb68:	beq	2bb9c <luaL_where@@Base+0xba98>
   2bb6c:	add	r3, ip, r0, lsl #3
   2bb70:	ldrb	r2, [r3, #4]
   2bb74:	cmp	r1, r2
   2bb78:	bne	2bb8c <luaL_where@@Base+0xba88>
   2bb7c:	b	2bbd8 <luaL_where@@Base+0xbad4>
   2bb80:	ldrb	r2, [r3, #4]
   2bb84:	cmp	r2, r1
   2bb88:	beq	2bbd8 <luaL_where@@Base+0xbad4>
   2bb8c:	ldrh	r0, [r3, #6]
   2bb90:	cmp	r0, #0
   2bb94:	add	r3, ip, r0, lsl #3
   2bb98:	bne	2bb80 <luaL_where@@Base+0xba7c>
   2bb9c:	ldr	r4, [r5, #20]
   2bba0:	ldr	r3, [r5, #240]	; 0xf0
   2bba4:	cmp	r4, r3
   2bba8:	bls	2bbe4 <luaL_where@@Base+0xbae0>
   2bbac:	sub	r0, r4, #1
   2bbb0:	mov	r2, #0
   2bbb4:	add	r3, ip, r0, lsl #3
   2bbb8:	str	r0, [r5, #20]
   2bbbc:	str	r2, [ip, r0, lsl #3]
   2bbc0:	mov	r2, #27
   2bbc4:	strb	r1, [r3, #4]
   2bbc8:	strb	r2, [r3, #5]
   2bbcc:	ldrh	r2, [r6]
   2bbd0:	strh	r2, [r3, #6]
   2bbd4:	strh	r0, [r6]
   2bbd8:	add	r0, r0, r1, lsl #24
   2bbdc:	add	sp, sp, #8
   2bbe0:	pop	{r4, r5, r6, pc}
   2bbe4:	mov	r0, r5
   2bbe8:	str	r1, [sp, #4]
   2bbec:	bl	26bc8 <luaL_where@@Base+0x6ac4>
   2bbf0:	ldr	ip, [r5, #16]
   2bbf4:	ldr	r1, [sp, #4]
   2bbf8:	b	2bbac <luaL_where@@Base+0xbaa8>
   2bbfc:	add	r3, r0, #436	; 0x1b4
   2bc00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2bc04:	mov	sl, r0
   2bc08:	ldrh	r6, [r0, #120]	; 0x78
   2bc0c:	ldrh	r5, [r3, #2]
   2bc10:	ldrh	r9, [r0, #122]	; 0x7a
   2bc14:	cmp	r6, r5
   2bc18:	bcs	2bc54 <luaL_where@@Base+0xbb50>
   2bc1c:	sub	r8, r9, #5
   2bc20:	ldr	r4, [r0, #16]
   2bc24:	uxth	r8, r8
   2bc28:	lsl	r3, r5, #3
   2bc2c:	add	r7, r4, r3
   2bc30:	ldrh	r3, [r4, r3]
   2bc34:	lsl	r3, r3, #3
   2bc38:	add	r2, r4, r3
   2bc3c:	ldrh	r2, [r2, #2]
   2bc40:	cmp	r2, r9
   2bc44:	beq	2bc70 <luaL_where@@Base+0xbb6c>
   2bc48:	ldrh	r5, [r7, #6]
   2bc4c:	cmp	r6, r5
   2bc50:	bcc	2bc28 <luaL_where@@Base+0xbb24>
   2bc54:	cmp	r9, #5
   2bc58:	beq	2bcac <luaL_where@@Base+0xbba8>
   2bc5c:	mov	r5, r6
   2bc60:	mov	r1, r5
   2bc64:	mov	r0, sl
   2bc68:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2bc6c:	b	25a14 <luaL_where@@Base+0x5910>
   2bc70:	ldrh	r3, [r4, r3]
   2bc74:	mov	r1, r6
   2bc78:	mov	r0, r4
   2bc7c:	cmp	r6, r3
   2bc80:	mov	r2, r3
   2bc84:	beq	2bca4 <luaL_where@@Base+0xbba0>
   2bc88:	cmp	r8, #5
   2bc8c:	bhi	2bc60 <luaL_where@@Base+0xbb5c>
   2bc90:	bl	1bdfc <_start@@Base+0x8a4c>
   2bc94:	cmp	r0, #1
   2bc98:	beq	2bc60 <luaL_where@@Base+0xbb5c>
   2bc9c:	cmp	r0, #2
   2bca0:	bne	2bc48 <luaL_where@@Base+0xbb44>
   2bca4:	ldrh	r0, [r7, #2]
   2bca8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bcac:	ldr	r3, [sl, #16]
   2bcb0:	add	r3, r3, r6, lsl #3
   2bcb4:	ldrb	r3, [r3, #5]
   2bcb8:	sub	r3, r3, #80	; 0x50
   2bcbc:	cmp	r3, #1
   2bcc0:	bhi	2bc5c <luaL_where@@Base+0xbb58>
   2bcc4:	mov	r0, sl
   2bcc8:	mov	r1, #11
   2bccc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2bcd0:	b	2bb4c <luaL_where@@Base+0xba48>
   2bcd4:	ldr	r2, [r0, #96]	; 0x60
   2bcd8:	ldr	ip, [r1]
   2bcdc:	push	{r4, r5, r6, lr}
   2bce0:	mov	r4, r0
   2bce4:	ldr	r1, [r2]
   2bce8:	and	r3, r1, #520093696	; 0x1f000000
   2bcec:	cmp	r3, #184549376	; 0xb000000
   2bcf0:	beq	2bd38 <luaL_where@@Base+0xbc34>
   2bcf4:	cmp	r3, #201326592	; 0xc000000
   2bcf8:	beq	2bd98 <luaL_where@@Base+0xbc94>
   2bcfc:	ldr	r3, [ip, #4]
   2bd00:	cmn	r3, #14
   2bd04:	rsbhi	r3, r3, #21
   2bd08:	movls	r3, #35	; 0x23
   2bd0c:	add	r3, r0, r3, lsl #2
   2bd10:	ldr	r1, [r3, #-152]	; 0xffffff68
   2bd14:	cmp	r1, #0
   2bd18:	ldreq	r0, [pc, #180]	; 2bdd4 <luaL_where@@Base+0xbcd0>
   2bd1c:	beq	2bd30 <luaL_where@@Base+0xbc2c>
   2bd20:	mov	r2, #11
   2bd24:	mov	r0, r4
   2bd28:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2bd2c:	ldr	r2, [r4, #96]	; 0x60
   2bd30:	str	r0, [r2]
   2bd34:	pop	{r4, r5, r6, pc}
   2bd38:	ldr	ip, [ip]
   2bd3c:	ldr	r2, [pc, #148]	; 2bdd8 <luaL_where@@Base+0xbcd4>
   2bd40:	mov	r3, #5
   2bd44:	ldr	r6, [ip, #16]
   2bd48:	strh	r1, [r4, #120]	; 0x78
   2bd4c:	strh	r2, [r4, #124]	; 0x7c
   2bd50:	strh	r3, [r4, #122]	; 0x7a
   2bd54:	bl	27498 <luaL_where@@Base+0x7394>
   2bd58:	cmp	r6, #0
   2bd5c:	mov	r5, r0
   2bd60:	uxth	r6, r0
   2bd64:	beq	2bda8 <luaL_where@@Base+0xbca4>
   2bd68:	mov	r1, #11
   2bd6c:	mov	r0, r4
   2bd70:	bl	2bb4c <luaL_where@@Base+0xba48>
   2bd74:	ldr	r3, [pc, #96]	; 2bddc <luaL_where@@Base+0xbcd8>
   2bd78:	strh	r6, [r4, #120]	; 0x78
   2bd7c:	strh	r3, [r4, #124]	; 0x7c
   2bd80:	strh	r0, [r4, #122]	; 0x7a
   2bd84:	mov	r0, r4
   2bd88:	bl	27498 <luaL_where@@Base+0x7394>
   2bd8c:	ldr	r3, [r4, #96]	; 0x60
   2bd90:	str	r5, [r3]
   2bd94:	pop	{r4, r5, r6, pc}
   2bd98:	ldr	ip, [ip]
   2bd9c:	ldr	r2, [pc, #52]	; 2bdd8 <luaL_where@@Base+0xbcd4>
   2bda0:	mov	r3, #11
   2bda4:	b	2bd44 <luaL_where@@Base+0xbc40>
   2bda8:	mov	r1, #11
   2bdac:	mov	r0, r4
   2bdb0:	bl	2bb4c <luaL_where@@Base+0xba48>
   2bdb4:	ldr	r3, [pc, #36]	; 2bde0 <luaL_where@@Base+0xbcdc>
   2bdb8:	strh	r6, [r4, #120]	; 0x78
   2bdbc:	strh	r3, [r4, #124]	; 0x7c
   2bdc0:	ldr	r5, [pc, #12]	; 2bdd4 <luaL_where@@Base+0xbcd0>
   2bdc4:	strh	r0, [r4, #122]	; 0x7a
   2bdc8:	mov	r0, r4
   2bdcc:	bl	27498 <luaL_where@@Base+0x7394>
   2bdd0:	b	2bd8c <luaL_where@@Base+0xbc88>
   2bdd4:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   2bdd8:	andeq	r4, r0, fp, lsl #10
   2bddc:	andeq	r0, r0, fp, lsl #19
   2bde0:	andeq	r0, r0, fp, lsl #17
   2bde4:	ldr	r3, [r0, #96]	; 0x60
   2bde8:	push	{r4, r5, r6, r7, r8, r9, lr}
   2bdec:	sub	sp, sp, #20
   2bdf0:	ldr	r5, [r3]
   2bdf4:	and	r2, r5, #520093696	; 0x1f000000
   2bdf8:	cmp	r2, #184549376	; 0xb000000
   2bdfc:	beq	2be08 <luaL_where@@Base+0xbd04>
   2be00:	add	sp, sp, #20
   2be04:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2be08:	ldr	r1, [r3, #4]
   2be0c:	mov	r4, r0
   2be10:	tst	r1, #520093696	; 0x1f000000
   2be14:	bne	2bf08 <luaL_where@@Base+0xbe04>
   2be18:	mov	r1, #4
   2be1c:	bl	2bb4c <luaL_where@@Base+0xba48>
   2be20:	mov	r7, r0
   2be24:	ldr	r3, [r4, #96]	; 0x60
   2be28:	ldr	r2, [r3, #4]
   2be2c:	cmp	r2, #0
   2be30:	beq	2be40 <luaL_where@@Base+0xbd3c>
   2be34:	ldr	r1, [r3, #8]
   2be38:	tst	r1, #520093696	; 0x1f000000
   2be3c:	bne	2bf14 <luaL_where@@Base+0xbe10>
   2be40:	mov	r1, #1
   2be44:	mov	r0, r4
   2be48:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2be4c:	mov	r8, r0
   2be50:	ldr	r3, [r4, #96]	; 0x60
   2be54:	ldr	r2, [r3, #4]
   2be58:	cmp	r2, #0
   2be5c:	beq	2be78 <luaL_where@@Base+0xbd74>
   2be60:	ldr	r2, [r3, #8]
   2be64:	cmp	r2, #0
   2be68:	beq	2be78 <luaL_where@@Base+0xbd74>
   2be6c:	ldr	r1, [r3, #12]
   2be70:	tst	r1, #520093696	; 0x1f000000
   2be74:	bne	2bf24 <luaL_where@@Base+0xbe20>
   2be78:	mov	r2, r5
   2be7c:	mov	r1, #30
   2be80:	mov	r0, r4
   2be84:	bl	27a00 <luaL_where@@Base+0x78fc>
   2be88:	mov	r9, r0
   2be8c:	mov	r0, r4
   2be90:	bl	2b54c <luaL_where@@Base+0xb448>
   2be94:	mov	r3, r5
   2be98:	strd	r8, [sp, #4]
   2be9c:	str	r7, [sp]
   2bea0:	mov	r1, #23
   2bea4:	mov	r6, r0
   2bea8:	mov	r2, r0
   2beac:	mov	r0, r4
   2beb0:	bl	27a00 <luaL_where@@Base+0x78fc>
   2beb4:	mov	r2, #0
   2beb8:	mov	r1, #25
   2bebc:	uxth	r5, r0
   2bec0:	mov	r0, r4
   2bec4:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2bec8:	ldr	r3, [pc, #100]	; 2bf34 <luaL_where@@Base+0xbe30>
   2becc:	strh	r5, [r4, #120]	; 0x78
   2bed0:	strh	r3, [r4, #124]	; 0x7c
   2bed4:	strh	r0, [r4, #122]	; 0x7a
   2bed8:	mov	r0, r4
   2bedc:	bl	27498 <luaL_where@@Base+0x7394>
   2bee0:	ldr	r3, [pc, #80]	; 2bf38 <luaL_where@@Base+0xbe34>
   2bee4:	strh	r6, [r4, #122]	; 0x7a
   2bee8:	strh	r5, [r4, #120]	; 0x78
   2beec:	strh	r3, [r4, #124]	; 0x7c
   2bef0:	mov	r0, r4
   2bef4:	ldr	r4, [r4, #96]	; 0x60
   2bef8:	bl	27498 <luaL_where@@Base+0x7394>
   2befc:	str	r0, [r4]
   2bf00:	add	sp, sp, #20
   2bf04:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2bf08:	bl	27e88 <luaL_where@@Base+0x7d84>
   2bf0c:	mov	r7, r0
   2bf10:	b	2be24 <luaL_where@@Base+0xbd20>
   2bf14:	mov	r0, r4
   2bf18:	bl	281cc <luaL_where@@Base+0x80c8>
   2bf1c:	mov	r8, r0
   2bf20:	b	2be50 <luaL_where@@Base+0xbd4c>
   2bf24:	mov	r0, r4
   2bf28:	bl	281cc <luaL_where@@Base+0x80c8>
   2bf2c:	mov	r9, r0
   2bf30:	b	2be8c <luaL_where@@Base+0xbd88>
   2bf34:	andeq	r0, r0, r5, lsl #19
   2bf38:	andeq	r5, r0, r4, lsl #12
   2bf3c:	cmp	r2, #0
   2bf40:	push	{r4, r5, r6, r7, r8, lr}
   2bf44:	mov	r7, r1
   2bf48:	mov	r4, r0
   2bf4c:	bne	2bff8 <luaL_where@@Base+0xbef4>
   2bf50:	ldr	r3, [r0, #96]	; 0x60
   2bf54:	ldr	r5, [r3]
   2bf58:	and	r3, r5, #520093696	; 0x1f000000
   2bf5c:	cmp	r3, #201326592	; 0xc000000
   2bf60:	bne	2c030 <luaL_where@@Base+0xbf2c>
   2bf64:	ldr	r2, [pc, #216]	; 2c044 <luaL_where@@Base+0xbf40>
   2bf68:	mov	r3, #12
   2bf6c:	uxth	r6, r5
   2bf70:	strh	r3, [r0, #122]	; 0x7a
   2bf74:	strh	r2, [r0, #124]	; 0x7c
   2bf78:	strh	r6, [r0, #120]	; 0x78
   2bf7c:	bl	27498 <luaL_where@@Base+0x7394>
   2bf80:	mov	r1, #1
   2bf84:	mov	r8, r0
   2bf88:	mov	r0, r4
   2bf8c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2bf90:	ldr	r3, [pc, #176]	; 2c048 <luaL_where@@Base+0xbf44>
   2bf94:	strh	r8, [r4, #120]	; 0x78
   2bf98:	strh	r3, [r4, #124]	; 0x7c
   2bf9c:	strh	r0, [r4, #122]	; 0x7a
   2bfa0:	mov	r0, r4
   2bfa4:	bl	27498 <luaL_where@@Base+0x7394>
   2bfa8:	ldr	r2, [pc, #156]	; 2c04c <luaL_where@@Base+0xbf48>
   2bfac:	mov	r3, #13
   2bfb0:	str	r5, [r7]
   2bfb4:	mov	r0, r4
   2bfb8:	strh	r2, [r4, #124]	; 0x7c
   2bfbc:	strh	r3, [r4, #122]	; 0x7a
   2bfc0:	strh	r6, [r4, #120]	; 0x78
   2bfc4:	bl	27498 <luaL_where@@Base+0x7394>
   2bfc8:	mov	r1, #5
   2bfcc:	mov	r5, r0
   2bfd0:	mov	r0, r4
   2bfd4:	bl	2bb4c <luaL_where@@Base+0xba48>
   2bfd8:	ldr	r3, [pc, #112]	; 2c050 <luaL_where@@Base+0xbf4c>
   2bfdc:	strh	r5, [r4, #120]	; 0x78
   2bfe0:	strh	r3, [r4, #124]	; 0x7c
   2bfe4:	strh	r0, [r4, #122]	; 0x7a
   2bfe8:	mov	r0, r4
   2bfec:	bl	27498 <luaL_where@@Base+0x7394>
   2bff0:	mov	r0, r5
   2bff4:	pop	{r4, r5, r6, r7, r8, pc}
   2bff8:	add	r2, r0, r2, lsl #2
   2bffc:	sub	r2, r2, #152	; 0x98
   2c000:	mov	r1, #25
   2c004:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2c008:	ldr	r2, [pc, #68]	; 2c054 <luaL_where@@Base+0xbf50>
   2c00c:	mov	r3, #0
   2c010:	strh	r2, [r4, #124]	; 0x7c
   2c014:	strh	r3, [r4, #122]	; 0x7a
   2c018:	strh	r0, [r4, #120]	; 0x78
   2c01c:	mov	r0, r4
   2c020:	bl	27498 <luaL_where@@Base+0x7394>
   2c024:	mov	r5, r0
   2c028:	uxth	r6, r0
   2c02c:	b	2bfa8 <luaL_where@@Base+0xbea4>
   2c030:	add	r1, r0, #2336	; 0x920
   2c034:	add	r1, r1, #12
   2c038:	ldr	r0, [r0, #80]	; 0x50
   2c03c:	mov	r2, #11
   2c040:	bl	210d0 <luaL_where@@Base+0xfcc>
   2c044:	andeq	r4, r0, r0, lsl r5
   2c048:	muleq	r0, r3, r8
   2c04c:	andeq	r4, r0, r5, lsl #10
   2c050:	andeq	r0, r0, r5, lsl #19
   2c054:	andeq	r4, r0, ip, lsl #12
   2c058:	push	{r4, r5, lr}
   2c05c:	sub	sp, sp, #12
   2c060:	ldr	r2, [r1, #8]
   2c064:	add	r1, sp, #4
   2c068:	mov	r4, r0
   2c06c:	bl	2bf3c <luaL_where@@Base+0xbe38>
   2c070:	mov	r1, #41	; 0x29
   2c074:	mov	r2, r0
   2c078:	mov	r0, r4
   2c07c:	bl	27a00 <luaL_where@@Base+0x78fc>
   2c080:	ldr	r3, [r4, #80]	; 0x50
   2c084:	ldr	r3, [r3, #16]
   2c088:	ldr	r3, [r3, #-4]
   2c08c:	tst	r3, #3
   2c090:	mov	r5, r0
   2c094:	bne	2c0a4 <luaL_where@@Base+0xbfa0>
   2c098:	ldrb	r3, [r3, #-1]
   2c09c:	cmp	r3, #1
   2c0a0:	beq	2c0c8 <luaL_where@@Base+0xbfc4>
   2c0a4:	mov	r1, #0
   2c0a8:	mov	r0, r4
   2c0ac:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2c0b0:	ldr	r3, [pc, #36]	; 2c0dc <luaL_where@@Base+0xbfd8>
   2c0b4:	strh	r5, [r4, #120]	; 0x78
   2c0b8:	strh	r3, [r4, #124]	; 0x7c
   2c0bc:	strh	r0, [r4, #122]	; 0x7a
   2c0c0:	mov	r0, r4
   2c0c4:	bl	27498 <luaL_where@@Base+0x7394>
   2c0c8:	ldr	r3, [r4, #96]	; 0x60
   2c0cc:	ldr	r2, [pc, #12]	; 2c0e0 <luaL_where@@Base+0xbfdc>
   2c0d0:	str	r2, [r3]
   2c0d4:	add	sp, sp, #12
   2c0d8:	pop	{r4, r5, pc}
   2c0dc:	muleq	r0, r3, r8
   2c0e0:	andeq	r7, r0, #1012	; 0x3f4
   2c0e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c0e8:	sub	sp, sp, #28
   2c0ec:	ldr	r2, [r1, #8]
   2c0f0:	mov	r5, r1
   2c0f4:	add	r1, sp, #20
   2c0f8:	mov	r4, r0
   2c0fc:	bl	2bf3c <luaL_where@@Base+0xbe38>
   2c100:	mov	r1, #0
   2c104:	mov	r8, r0
   2c108:	mov	r0, r4
   2c10c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2c110:	mov	r1, #1
   2c114:	mov	r7, r0
   2c118:	mov	r0, r4
   2c11c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2c120:	ldr	r3, [r4, #96]	; 0x60
   2c124:	ldr	r5, [r5, #8]
   2c128:	clz	r5, r5
   2c12c:	lsr	r5, r5, #5
   2c130:	ldr	r1, [r3, r5, lsl #2]
   2c134:	cmp	r1, #0
   2c138:	str	r0, [sp, #12]
   2c13c:	beq	2c2c0 <luaL_where@@Base+0xc1bc>
   2c140:	add	r5, r5, #1
   2c144:	ldr	sl, [pc, #388]	; 2c2d0 <luaL_where@@Base+0xc1cc>
   2c148:	lsl	r5, r5, #2
   2c14c:	uxth	r7, r7
   2c150:	b	2c1b8 <luaL_where@@Base+0xc0b4>
   2c154:	ldr	r3, [sp, #12]
   2c158:	stm	sp, {r6, r8}
   2c15c:	mov	r2, fp
   2c160:	mov	r1, #40	; 0x28
   2c164:	mov	r0, r4
   2c168:	bl	27a00 <luaL_where@@Base+0x78fc>
   2c16c:	ldr	r3, [r4, #80]	; 0x50
   2c170:	ldr	r3, [r3, #16]
   2c174:	ldr	r3, [r3, #-4]
   2c178:	tst	r3, #3
   2c17c:	bne	2c18c <luaL_where@@Base+0xc088>
   2c180:	ldrb	r3, [r3, #-1]
   2c184:	cmp	r3, #1
   2c188:	beq	2c1a4 <luaL_where@@Base+0xc0a0>
   2c18c:	ldr	r3, [pc, #320]	; 2c2d4 <luaL_where@@Base+0xc1d0>
   2c190:	strh	r0, [r4, #120]	; 0x78
   2c194:	strh	r3, [r4, #124]	; 0x7c
   2c198:	strh	r6, [r4, #122]	; 0x7a
   2c19c:	mov	r0, r4
   2c1a0:	bl	27498 <luaL_where@@Base+0x7394>
   2c1a4:	ldr	r3, [r4, #96]	; 0x60
   2c1a8:	ldr	r1, [r3, r5]
   2c1ac:	add	r5, r5, #4
   2c1b0:	cmp	r1, #0
   2c1b4:	beq	2c2c0 <luaL_where@@Base+0xc1bc>
   2c1b8:	mov	r0, r4
   2c1bc:	bl	27e88 <luaL_where@@Base+0x7d84>
   2c1c0:	strh	sl, [r4, #124]	; 0x7c
   2c1c4:	strh	r7, [r4, #122]	; 0x7a
   2c1c8:	uxth	r6, r0
   2c1cc:	strh	r6, [r4, #120]	; 0x78
   2c1d0:	mov	r9, r0
   2c1d4:	mov	r0, r4
   2c1d8:	bl	27498 <luaL_where@@Base+0x7394>
   2c1dc:	ldr	r2, [pc, #244]	; 2c2d8 <luaL_where@@Base+0xc1d4>
   2c1e0:	mov	r3, #0
   2c1e4:	strh	r6, [r4, #120]	; 0x78
   2c1e8:	strh	r2, [r4, #124]	; 0x7c
   2c1ec:	strh	r3, [r4, #122]	; 0x7a
   2c1f0:	mov	fp, r0
   2c1f4:	mov	r0, r4
   2c1f8:	bl	27498 <luaL_where@@Base+0x7394>
   2c1fc:	tst	r0, #32768	; 0x8000
   2c200:	mov	r6, r0
   2c204:	bne	2c154 <luaL_where@@Base+0xc050>
   2c208:	ldr	r3, [r4, #16]
   2c20c:	uxth	r1, r0
   2c210:	ldr	r1, [r3, r1, lsl #3]
   2c214:	cmp	r1, #1
   2c218:	bne	2c154 <luaL_where@@Base+0xc050>
   2c21c:	uxth	r9, r9
   2c220:	lsl	r9, r9, #3
   2c224:	add	r1, r3, r9
   2c228:	ldrb	r0, [r1, #5]
   2c22c:	cmp	r0, #92	; 0x5c
   2c230:	bne	2c244 <luaL_where@@Base+0xc140>
   2c234:	ldrh	r1, [r1, #2]
   2c238:	cmp	r1, #2
   2c23c:	ldrheq	r2, [r3, r9]
   2c240:	beq	2c264 <luaL_where@@Base+0xc160>
   2c244:	ldr	r1, [pc, #144]	; 2c2dc <luaL_where@@Base+0xc1d8>
   2c248:	mov	r3, #1
   2c24c:	strh	fp, [r4, #120]	; 0x78
   2c250:	strh	r1, [r4, #124]	; 0x7c
   2c254:	strh	r3, [r4, #122]	; 0x7a
   2c258:	mov	r0, r4
   2c25c:	bl	27498 <luaL_where@@Base+0x7394>
   2c260:	mov	r2, r0
   2c264:	mov	r3, r8
   2c268:	mov	r1, #39	; 0x27
   2c26c:	mov	r0, r4
   2c270:	bl	27a00 <luaL_where@@Base+0x78fc>
   2c274:	ldr	r3, [r4, #80]	; 0x50
   2c278:	ldr	r3, [r3, #16]
   2c27c:	ldr	r3, [r3, #-4]
   2c280:	tst	r3, #3
   2c284:	mov	r6, r0
   2c288:	bne	2c298 <luaL_where@@Base+0xc194>
   2c28c:	ldrb	r3, [r3, #-1]
   2c290:	cmp	r3, #1
   2c294:	beq	2c1a4 <luaL_where@@Base+0xc0a0>
   2c298:	mvn	r1, #0
   2c29c:	mov	r0, r4
   2c2a0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2c2a4:	ldr	r3, [pc, #52]	; 2c2e0 <luaL_where@@Base+0xc1dc>
   2c2a8:	strh	r6, [r4, #120]	; 0x78
   2c2ac:	strh	r3, [r4, #124]	; 0x7c
   2c2b0:	strh	r0, [r4, #122]	; 0x7a
   2c2b4:	mov	r0, r4
   2c2b8:	bl	27498 <luaL_where@@Base+0x7394>
   2c2bc:	b	2c1a4 <luaL_where@@Base+0xc0a0>
   2c2c0:	ldr	r2, [pc, #28]	; 2c2e4 <luaL_where@@Base+0xc1e0>
   2c2c4:	str	r2, [r3]
   2c2c8:	add	sp, sp, #28
   2c2cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c2d0:	andeq	r4, r0, r5
   2c2d4:	muleq	r0, r3, r8
   2c2d8:	andeq	r4, r0, r3, lsl r5
   2c2dc:	andeq	r4, r0, r0, lsl r6
   2c2e0:	muleq	r0, r3, r9
   2c2e4:	andeq	r7, r0, #1012	; 0x3f4
   2c2e8:	push	{r4, r5, r6, r7, r8, lr}
   2c2ec:	add	r7, r0, #344	; 0x158
   2c2f0:	uxth	r1, r1
   2c2f4:	ldrh	r4, [r7, #2]
   2c2f8:	orr	r5, r1, r2, lsl #16
   2c2fc:	ldr	ip, [r0, #16]
   2c300:	cmp	r4, #0
   2c304:	beq	2c338 <luaL_where@@Base+0xc234>
   2c308:	ldr	r2, [ip, r4, lsl #3]
   2c30c:	add	lr, ip, r4, lsl #3
   2c310:	cmp	r5, r2
   2c314:	bne	2c32c <luaL_where@@Base+0xc228>
   2c318:	b	2c370 <luaL_where@@Base+0xc26c>
   2c31c:	ldr	r3, [ip, r4, lsl #3]
   2c320:	add	lr, ip, r4, lsl #3
   2c324:	cmp	r3, r5
   2c328:	beq	2c370 <luaL_where@@Base+0xc26c>
   2c32c:	ldrh	r4, [lr, #6]
   2c330:	cmp	r4, #0
   2c334:	bne	2c31c <luaL_where@@Base+0xc218>
   2c338:	ldr	r4, [r0, #20]
   2c33c:	ldr	r3, [r0, #240]	; 0xf0
   2c340:	mov	r6, r0
   2c344:	cmp	r4, r3
   2c348:	bls	2c378 <luaL_where@@Base+0xc274>
   2c34c:	sub	r4, r4, #1
   2c350:	ldr	r1, [pc, #44]	; 2c384 <luaL_where@@Base+0xc280>
   2c354:	add	r2, ip, r4, lsl #3
   2c358:	str	r4, [r6, #20]
   2c35c:	str	r5, [ip, r4, lsl #3]
   2c360:	strh	r1, [r2, #4]
   2c364:	ldrh	r1, [r7, #2]
   2c368:	strh	r1, [r2, #6]
   2c36c:	strh	r4, [r7, #2]
   2c370:	add	r0, r4, #83886080	; 0x5000000
   2c374:	pop	{r4, r5, r6, r7, r8, pc}
   2c378:	bl	26bc8 <luaL_where@@Base+0x6ac4>
   2c37c:	ldr	ip, [r6, #16]
   2c380:	b	2c34c <luaL_where@@Base+0xc248>
   2c384:	andeq	r1, r0, r5, lsl #28
   2c388:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c38c:	mov	r4, r1
   2c390:	ldr	r6, [r1, #40]	; 0x28
   2c394:	sub	sp, sp, #28
   2c398:	mov	r5, r0
   2c39c:	and	ip, r6, #520093696	; 0x1f000000
   2c3a0:	b	2c434 <luaL_where@@Base+0xc330>
   2c3a4:	ldr	r7, [r4, #12]
   2c3a8:	cmn	r7, #1
   2c3ac:	beq	2c3c8 <luaL_where@@Base+0xc2c4>
   2c3b0:	cmn	r7, #15
   2c3b4:	bhi	2c470 <luaL_where@@Base+0xc36c>
   2c3b8:	vldr	d7, [r4, #8]
   2c3bc:	vcmp.f64	d7, d7
   2c3c0:	vmrs	APSR_nzcv, fpscr
   2c3c4:	beq	2c470 <luaL_where@@Base+0xc36c>
   2c3c8:	ldr	r2, [r4, #48]	; 0x30
   2c3cc:	cmp	r2, #0
   2c3d0:	bne	2cfcc <luaL_where@@Base+0xcec8>
   2c3d4:	ldr	r8, [r4, #44]	; 0x2c
   2c3d8:	tst	r8, #32768	; 0x8000
   2c3dc:	bne	2c474 <luaL_where@@Base+0xc370>
   2c3e0:	ldr	r3, [r4, #60]	; 0x3c
   2c3e4:	cmp	r3, #0
   2c3e8:	beq	2cba8 <luaL_where@@Base+0xcaa4>
   2c3ec:	mov	r1, r4
   2c3f0:	mov	r0, r5
   2c3f4:	bl	2d058 <luaL_where@@Base+0xcf54>
   2c3f8:	cmp	r0, #0
   2c3fc:	beq	2cba8 <luaL_where@@Base+0xcaa4>
   2c400:	ldr	r6, [r4, #56]	; 0x38
   2c404:	and	ip, r6, #520093696	; 0x1f000000
   2c408:	cmp	ip, #134217728	; 0x8000000
   2c40c:	beq	2cabc <luaL_where@@Base+0xc9b8>
   2c410:	ldr	r1, [r4, #60]	; 0x3c
   2c414:	ldrd	r2, [r4, #24]
   2c418:	sub	r1, r1, #1
   2c41c:	cmp	r1, #0
   2c420:	ldr	r0, [r5, #80]	; 0x50
   2c424:	str	r6, [r4, #40]	; 0x28
   2c428:	str	r1, [r4, #60]	; 0x3c
   2c42c:	strd	r2, [r4]
   2c430:	beq	2cf44 <luaL_where@@Base+0xce40>
   2c434:	cmp	ip, #184549376	; 0xb000000
   2c438:	beq	2c3a4 <luaL_where@@Base+0xc2a0>
   2c43c:	ldr	r2, [r4, #48]	; 0x30
   2c440:	mov	r1, r4
   2c444:	adds	r2, r2, #0
   2c448:	movne	r2, #1
   2c44c:	mov	r0, r5
   2c450:	bl	2d058 <luaL_where@@Base+0xcf54>
   2c454:	cmp	r0, #0
   2c458:	bne	2c400 <luaL_where@@Base+0xc2fc>
   2c45c:	add	r1, r5, #2336	; 0x920
   2c460:	add	r1, r1, #12
   2c464:	ldr	r0, [r5, #80]	; 0x50
   2c468:	mov	r2, #18
   2c46c:	bl	210d0 <luaL_where@@Base+0xfcc>
   2c470:	ldr	r8, [r4, #44]	; 0x2c
   2c474:	mov	r2, r4
   2c478:	ldr	sl, [r5, #80]	; 0x50
   2c47c:	ldr	r9, [r2], #8
   2c480:	mov	r0, sl
   2c484:	mov	r1, r9
   2c488:	bl	1f4f8 <lua_atpanic@@Base+0x328>
   2c48c:	lsr	r3, r8, #24
   2c490:	and	r3, r3, #31
   2c494:	sub	r3, r3, #14
   2c498:	cmp	r3, #5
   2c49c:	str	r0, [r4, #36]	; 0x24
   2c4a0:	bhi	2c534 <luaL_where@@Base+0xc430>
   2c4a4:	cmn	r7, #14
   2c4a8:	bne	2c7d8 <luaL_where@@Base+0xc6d4>
   2c4ac:	ldr	r7, [r4, #8]
   2c4b0:	cmp	r7, #134217728	; 0x8000000
   2c4b4:	bhi	2c7f4 <luaL_where@@Base+0xc6f0>
   2c4b8:	and	r3, r8, #520093696	; 0x1f000000
   2c4bc:	cmp	r3, #234881024	; 0xe000000
   2c4c0:	beq	2cc5c <luaL_where@@Base+0xcb58>
   2c4c4:	uxth	r3, r8
   2c4c8:	ldr	r1, [r5, #16]
   2c4cc:	lsl	r3, r3, #3
   2c4d0:	add	r0, r1, r3
   2c4d4:	ldrb	r2, [r0, #5]
   2c4d8:	sub	ip, r2, #54	; 0x36
   2c4dc:	cmp	ip, #1
   2c4e0:	bls	2cb60 <luaL_where@@Base+0xca5c>
   2c4e4:	mov	sl, r8
   2c4e8:	ldr	r2, [pc, #2828]	; 2cffc <luaL_where@@Base+0xcef8>
   2c4ec:	mov	r3, #8
   2c4f0:	strh	r6, [r5, #120]	; 0x78
   2c4f4:	strh	r3, [r5, #122]	; 0x7a
   2c4f8:	strh	r2, [r5, #124]	; 0x7c
   2c4fc:	mov	r0, r5
   2c500:	bl	27498 <luaL_where@@Base+0x7394>
   2c504:	ldr	r3, [r9, #24]
   2c508:	uxth	r6, sl
   2c50c:	cmp	r7, r3
   2c510:	bcc	2ca44 <luaL_where@@Base+0xc940>
   2c514:	ldr	r3, [pc, #2788]	; 2d000 <luaL_where@@Base+0xcefc>
   2c518:	strh	r0, [r5, #120]	; 0x78
   2c51c:	strh	r6, [r5, #122]	; 0x7a
   2c520:	strh	r3, [r5, #124]	; 0x7c
   2c524:	mov	r0, r5
   2c528:	bl	27498 <luaL_where@@Base+0x7394>
   2c52c:	cmp	r7, #0
   2c530:	beq	2ca98 <luaL_where@@Base+0xc994>
   2c534:	ldr	r6, [r9, #28]
   2c538:	cmp	r6, #0
   2c53c:	beq	2c858 <luaL_where@@Base+0xc754>
   2c540:	lsr	r3, r8, #24
   2c544:	and	r3, r3, #31
   2c548:	sub	r3, r3, #15
   2c54c:	cmp	r3, #4
   2c550:	bls	2c8c4 <luaL_where@@Base+0xc7c0>
   2c554:	tst	r8, #32768	; 0x8000
   2c558:	ldrh	r3, [r4, #40]	; 0x28
   2c55c:	bne	2c588 <luaL_where@@Base+0xc484>
   2c560:	ldr	r2, [r9, #20]
   2c564:	ldr	sl, [r4, #36]	; 0x24
   2c568:	add	r6, r6, r6, lsl #1
   2c56c:	sub	sl, sl, r2
   2c570:	ldr	r2, [pc, #2700]	; 2d004 <luaL_where@@Base+0xcf00>
   2c574:	lsl	r6, r6, #3
   2c578:	cmp	r6, r2
   2c57c:	movcs	r6, r2
   2c580:	cmp	sl, r6
   2c584:	bls	2cbb8 <luaL_where@@Base+0xcab4>
   2c588:	ldr	r2, [pc, #2680]	; 2d008 <luaL_where@@Base+0xcf04>
   2c58c:	strh	r3, [r5, #120]	; 0x78
   2c590:	strh	r8, [r5, #122]	; 0x7a
   2c594:	strh	r2, [r5, #124]	; 0x7c
   2c598:	mov	r0, r5
   2c59c:	bl	27498 <luaL_where@@Base+0x7394>
   2c5a0:	mov	r6, #0
   2c5a4:	mov	r7, r6
   2c5a8:	uxth	ip, r0
   2c5ac:	ldr	lr, [r5, #16]
   2c5b0:	mov	fp, ip
   2c5b4:	add	r0, lr, ip, lsl #3
   2c5b8:	ldrb	r1, [r0, #5]
   2c5bc:	cmp	r1, #57	; 0x39
   2c5c0:	beq	2c7c8 <luaL_where@@Base+0xc6c4>
   2c5c4:	cmp	r1, #26
   2c5c8:	bne	2c8b8 <luaL_where@@Base+0xc7b4>
   2c5cc:	ldr	r8, [lr, ip, lsl #3]
   2c5d0:	mov	r3, #67	; 0x43
   2c5d4:	str	r3, [sp, #4]
   2c5d8:	ldr	r9, [r4, #48]	; 0x30
   2c5dc:	cmp	r9, #0
   2c5e0:	bne	2c65c <luaL_where@@Base+0xc558>
   2c5e4:	ldr	r9, [r8, #4]
   2c5e8:	cmn	r9, #14
   2c5ec:	moveq	r9, #19
   2c5f0:	beq	2c600 <luaL_where@@Base+0xc4fc>
   2c5f4:	cmn	r9, #15
   2c5f8:	mvnhi	r9, r9
   2c5fc:	movls	r9, #14
   2c600:	sub	r3, r5, #240	; 0xf0
   2c604:	cmp	r3, r8
   2c608:	beq	2c994 <luaL_where@@Base+0xc890>
   2c60c:	ldr	r3, [sp, #4]
   2c610:	mov	r2, #0
   2c614:	strh	fp, [r5, #120]	; 0x78
   2c618:	orr	r3, r9, r3, lsl #8
   2c61c:	orr	r3, r3, #128	; 0x80
   2c620:	strh	r3, [r5, #124]	; 0x7c
   2c624:	strh	r2, [r5, #122]	; 0x7a
   2c628:	mov	r0, r5
   2c62c:	bl	27498 <luaL_where@@Base+0x7394>
   2c630:	mov	r8, r0
   2c634:	uxth	r3, r0
   2c638:	cmp	r7, r3
   2c63c:	bhi	2c94c <luaL_where@@Base+0xc848>
   2c640:	cmp	r9, #0
   2c644:	bne	2ce64 <luaL_where@@Base+0xcd60>
   2c648:	ldr	r3, [r4, #60]	; 0x3c
   2c64c:	cmp	r3, #0
   2c650:	beq	2cba8 <luaL_where@@Base+0xcaa4>
   2c654:	mov	r2, r9
   2c658:	b	2c3ec <luaL_where@@Base+0xc2e8>
   2c65c:	ldrb	r3, [r4, #47]	; 0x2f
   2c660:	ldr	r2, [r4]
   2c664:	and	r3, r3, #31
   2c668:	sub	r3, r3, #4
   2c66c:	cmp	r3, #8
   2c670:	ldr	r3, [r2, #16]
   2c674:	str	r3, [sp, #8]
   2c678:	movhi	r3, #0
   2c67c:	strhi	r3, [sp, #12]
   2c680:	bhi	2c694 <luaL_where@@Base+0xc590>
   2c684:	tst	r9, #520093696	; 0x1f000000
   2c688:	movne	r3, #1
   2c68c:	moveq	r3, #0
   2c690:	str	r3, [sp, #12]
   2c694:	cmp	ip, r7
   2c698:	bcc	2c900 <luaL_where@@Base+0xc7fc>
   2c69c:	ldr	r3, [r8, #4]
   2c6a0:	cmn	r3, #1
   2c6a4:	bne	2ccd4 <luaL_where@@Base+0xcbd0>
   2c6a8:	ldr	r0, [r4, #60]	; 0x3c
   2c6ac:	ldr	r3, [sp, #8]
   2c6b0:	cmp	r3, #0
   2c6b4:	cmpne	r0, #0
   2c6b8:	bne	2c9c8 <luaL_where@@Base+0xc8c4>
   2c6bc:	cmp	r1, #59	; 0x3b
   2c6c0:	bne	2c700 <luaL_where@@Base+0xc5fc>
   2c6c4:	sub	r3, r5, #240	; 0xf0
   2c6c8:	ldr	r0, [pc, #2364]	; 2d00c <luaL_where@@Base+0xcf08>
   2c6cc:	cmp	r3, r8
   2c6d0:	ldr	r6, [pc, #2360]	; 2d010 <luaL_where@@Base+0xcf0c>
   2c6d4:	mov	r2, r3
   2c6d8:	moveq	r6, r0
   2c6dc:	mov	r1, #26
   2c6e0:	mov	r0, r5
   2c6e4:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2c6e8:	strh	r6, [r5, #124]	; 0x7c
   2c6ec:	strh	fp, [r5, #120]	; 0x78
   2c6f0:	strh	r0, [r5, #122]	; 0x7a
   2c6f4:	mov	r0, r5
   2c6f8:	bl	27498 <luaL_where@@Base+0x7394>
   2c6fc:	ldr	r0, [r4, #60]	; 0x3c
   2c700:	cmp	r0, #0
   2c704:	beq	2c720 <luaL_where@@Base+0xc61c>
   2c708:	mov	r2, #1
   2c70c:	mov	r1, r4
   2c710:	mov	r0, r5
   2c714:	bl	2d058 <luaL_where@@Base+0xcf54>
   2c718:	cmp	r0, #0
   2c71c:	bne	2c400 <luaL_where@@Base+0xc2fc>
   2c720:	sub	r3, r5, #240	; 0xf0
   2c724:	cmp	r8, r3
   2c728:	ldrh	r3, [sp, #4]
   2c72c:	str	r3, [sp, #4]
   2c730:	beq	2cec4 <luaL_where@@Base+0xcdc0>
   2c734:	ldr	r9, [r4, #48]	; 0x30
   2c738:	ldr	r3, [sp, #4]
   2c73c:	strh	fp, [r5, #120]	; 0x78
   2c740:	add	r2, r3, #7
   2c744:	lsr	r3, r9, #24
   2c748:	and	r3, r3, #31
   2c74c:	orr	r3, r3, r2, lsl #8
   2c750:	strh	r3, [r5, #124]	; 0x7c
   2c754:	strh	r9, [r5, #122]	; 0x7a
   2c758:	mov	r0, r5
   2c75c:	bl	27498 <luaL_where@@Base+0x7394>
   2c760:	ldr	r3, [sp, #12]
   2c764:	cmp	r3, #0
   2c768:	bne	2c780 <luaL_where@@Base+0xc67c>
   2c76c:	ldrb	r3, [r4, #51]	; 0x33
   2c770:	and	r3, r3, #31
   2c774:	sub	r3, r3, #4
   2c778:	cmp	r3, #8
   2c77c:	bhi	2c7a0 <luaL_where@@Base+0xc69c>
   2c780:	ldrh	r1, [r4, #40]	; 0x28
   2c784:	mov	r2, #22272	; 0x5700
   2c788:	mov	r3, #0
   2c78c:	strh	r1, [r5, #120]	; 0x78
   2c790:	strh	r2, [r5, #124]	; 0x7c
   2c794:	strh	r3, [r5, #122]	; 0x7a
   2c798:	mov	r0, r5
   2c79c:	bl	27498 <luaL_where@@Base+0x7394>
   2c7a0:	ldr	r3, [r4, #44]	; 0x2c
   2c7a4:	and	r2, r3, #520093696	; 0x1f000000
   2c7a8:	cmp	r2, #67108864	; 0x4000000
   2c7ac:	beq	2cca0 <luaL_where@@Base+0xcb9c>
   2c7b0:	mov	r3, #1
   2c7b4:	mov	r8, #0
   2c7b8:	mov	r0, r8
   2c7bc:	strb	r3, [r5, #113]	; 0x71
   2c7c0:	add	sp, sp, #28
   2c7c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c7c8:	mov	r3, #66	; 0x42
   2c7cc:	str	r3, [sp, #4]
   2c7d0:	ldr	r8, [r4, #36]	; 0x24
   2c7d4:	b	2c5d8 <luaL_where@@Base+0xc4d4>
   2c7d8:	vldr	d7, [r4, #8]
   2c7dc:	vcvt.s32.f64	s13, d7
   2c7e0:	vmov	r7, s13
   2c7e4:	vcvt.f64.s32	d6, s13
   2c7e8:	vcmp.f64	d7, d6
   2c7ec:	vmrs	APSR_nzcv, fpscr
   2c7f0:	beq	2c4b0 <luaL_where@@Base+0xc3ac>
   2c7f4:	tst	r8, #32768	; 0x8000
   2c7f8:	beq	2c534 <luaL_where@@Base+0xc430>
   2c7fc:	ldr	r7, [r9, #24]
   2c800:	cmp	r7, #0
   2c804:	bne	2cfe8 <luaL_where@@Base+0xcee4>
   2c808:	ldr	r2, [pc, #2028]	; 2cffc <luaL_where@@Base+0xcef8>
   2c80c:	mov	r3, #8
   2c810:	strh	r2, [r5, #124]	; 0x7c
   2c814:	strh	r3, [r5, #122]	; 0x7a
   2c818:	strh	r6, [r5, #120]	; 0x78
   2c81c:	mov	r0, r5
   2c820:	bl	27498 <luaL_where@@Base+0x7394>
   2c824:	mov	r1, r7
   2c828:	mov	r6, r0
   2c82c:	mov	r0, r5
   2c830:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2c834:	ldr	r3, [pc, #2008]	; 2d014 <luaL_where@@Base+0xcf10>
   2c838:	strh	r6, [r5, #120]	; 0x78
   2c83c:	strh	r3, [r5, #124]	; 0x7c
   2c840:	strh	r0, [r5, #122]	; 0x7a
   2c844:	mov	r0, r5
   2c848:	bl	27498 <luaL_where@@Base+0x7394>
   2c84c:	ldr	r6, [r9, #28]
   2c850:	cmp	r6, #0
   2c854:	bne	2c540 <luaL_where@@Base+0xc43c>
   2c858:	ldrh	r1, [r4, #40]	; 0x28
   2c85c:	ldr	r2, [pc, #1944]	; 2cffc <luaL_where@@Base+0xcef8>
   2c860:	mov	r3, #9
   2c864:	strh	r2, [r5, #124]	; 0x7c
   2c868:	strh	r3, [r5, #122]	; 0x7a
   2c86c:	strh	r1, [r5, #120]	; 0x78
   2c870:	mov	r0, r5
   2c874:	bl	27498 <luaL_where@@Base+0x7394>
   2c878:	mov	r1, r6
   2c87c:	mov	r7, r0
   2c880:	mov	r0, r5
   2c884:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2c888:	ldr	r3, [pc, #1924]	; 2d014 <luaL_where@@Base+0xcf10>
   2c88c:	strh	r7, [r5, #120]	; 0x78
   2c890:	strh	r3, [r5, #124]	; 0x7c
   2c894:	mov	r7, r6
   2c898:	strh	r0, [r5, #122]	; 0x7a
   2c89c:	mov	r0, r5
   2c8a0:	bl	27498 <luaL_where@@Base+0x7394>
   2c8a4:	sub	r2, r5, #240	; 0xf0
   2c8a8:	mov	r1, #26
   2c8ac:	mov	r0, r5
   2c8b0:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2c8b4:	b	2c5a8 <luaL_where@@Base+0xc4a4>
   2c8b8:	mov	r3, #67	; 0x43
   2c8bc:	str	r3, [sp, #4]
   2c8c0:	b	2c7d0 <luaL_where@@Base+0xc6cc>
   2c8c4:	ldr	r2, [pc, #1868]	; 2d018 <luaL_where@@Base+0xcf14>
   2c8c8:	ldr	r3, [pc, #1868]	; 2d01c <luaL_where@@Base+0xcf18>
   2c8cc:	strh	r8, [r5, #120]	; 0x78
   2c8d0:	strh	r2, [r5, #124]	; 0x7c
   2c8d4:	strh	r3, [r5, #122]	; 0x7a
   2c8d8:	mov	r0, r5
   2c8dc:	bl	27498 <luaL_where@@Base+0x7394>
   2c8e0:	tst	r0, #32768	; 0x8000
   2c8e4:	mov	r8, r0
   2c8e8:	bne	2cfe0 <luaL_where@@Base+0xcedc>
   2c8ec:	ldr	r6, [r9, #28]
   2c8f0:	ldrh	r3, [r4, #40]	; 0x28
   2c8f4:	cmp	r6, #0
   2c8f8:	beq	2c588 <luaL_where@@Base+0xc484>
   2c8fc:	b	2c560 <luaL_where@@Base+0xc45c>
   2c900:	ldr	r2, [r5, #8]
   2c904:	cmp	r2, r7
   2c908:	movls	r7, r2
   2c90c:	bls	2c940 <luaL_where@@Base+0xc83c>
   2c910:	add	r2, lr, r2, lsl #3
   2c914:	add	sl, lr, r7, lsl #3
   2c918:	str	lr, [sp, #16]
   2c91c:	ldrb	r3, [r2, #-3]
   2c920:	ldrh	lr, [r2, #-2]
   2c924:	sub	r2, r2, #8
   2c928:	add	r3, r3, #136	; 0x88
   2c92c:	cmp	sl, r2
   2c930:	add	r3, r5, r3, lsl #1
   2c934:	strh	lr, [r3, #14]
   2c938:	bne	2c91c <luaL_where@@Base+0xc818>
   2c93c:	ldr	lr, [sp, #16]
   2c940:	str	r7, [r5, #8]
   2c944:	strb	r6, [r5, #114]	; 0x72
   2c948:	b	2c69c <luaL_where@@Base+0xc598>
   2c94c:	ldr	r2, [r5, #8]
   2c950:	cmp	r2, r7
   2c954:	movls	r7, r2
   2c958:	bls	2c988 <luaL_where@@Base+0xc884>
   2c95c:	ldr	r0, [r5, #16]
   2c960:	add	r2, r0, r2, lsl #3
   2c964:	add	r0, r0, r7, lsl #3
   2c968:	ldrb	r3, [r2, #-3]
   2c96c:	ldrh	r1, [r2, #-2]
   2c970:	sub	r2, r2, #8
   2c974:	add	r3, r3, #136	; 0x88
   2c978:	cmp	r0, r2
   2c97c:	add	r3, r5, r3, lsl #1
   2c980:	strh	r1, [r3, #14]
   2c984:	bne	2c968 <luaL_where@@Base+0xc864>
   2c988:	str	r7, [r5, #8]
   2c98c:	strb	r6, [r5, #114]	; 0x72
   2c990:	b	2c640 <luaL_where@@Base+0xc53c>
   2c994:	mov	r2, r8
   2c998:	mov	r1, #26
   2c99c:	mov	r0, r5
   2c9a0:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2c9a4:	ldr	r3, [pc, #1632]	; 2d00c <luaL_where@@Base+0xcf08>
   2c9a8:	ldr	r8, [pc, #1648]	; 2d020 <luaL_where@@Base+0xcf1c>
   2c9ac:	strh	r3, [r5, #124]	; 0x7c
   2c9b0:	strh	fp, [r5, #120]	; 0x78
   2c9b4:	strh	r0, [r5, #122]	; 0x7a
   2c9b8:	mov	r0, r5
   2c9bc:	bl	27498 <luaL_where@@Base+0x7394>
   2c9c0:	mov	r3, r8
   2c9c4:	b	2c638 <luaL_where@@Base+0xc534>
   2c9c8:	ldr	ip, [r5, #-148]	; 0xffffff6c
   2c9cc:	ldr	r2, [r3, #28]
   2c9d0:	ldr	r3, [r3, #20]
   2c9d4:	ldr	lr, [ip, #8]
   2c9d8:	and	r2, r2, lr
   2c9dc:	add	r2, r2, r2, lsl #1
   2c9e0:	add	r3, r3, r2, lsl #3
   2c9e4:	b	2c9f4 <luaL_where@@Base+0xc8f0>
   2c9e8:	ldr	r3, [r3, #16]
   2c9ec:	cmp	r3, #0
   2c9f0:	beq	2c6bc <luaL_where@@Base+0xc5b8>
   2c9f4:	ldr	r2, [r3, #12]
   2c9f8:	cmn	r2, #5
   2c9fc:	bne	2c9e8 <luaL_where@@Base+0xc8e4>
   2ca00:	ldr	r2, [r3, #8]
   2ca04:	cmp	ip, r2
   2ca08:	bne	2c9e8 <luaL_where@@Base+0xc8e4>
   2ca0c:	ldr	r3, [r3, #4]
   2ca10:	cmn	r3, #1
   2ca14:	beq	2c6bc <luaL_where@@Base+0xc5b8>
   2ca18:	ldr	r3, [sp, #4]
   2ca1c:	mov	r2, #0
   2ca20:	strh	fp, [r5, #120]	; 0x78
   2ca24:	lsl	r3, r3, #8
   2ca28:	orr	r3, r3, #128	; 0x80
   2ca2c:	strh	r3, [r5, #124]	; 0x7c
   2ca30:	strh	r2, [r5, #122]	; 0x7a
   2ca34:	mov	r0, r5
   2ca38:	bl	27498 <luaL_where@@Base+0x7394>
   2ca3c:	ldr	r0, [r4, #60]	; 0x3c
   2ca40:	b	2c700 <luaL_where@@Base+0xc5fc>
   2ca44:	mov	r2, sl
   2ca48:	mov	r1, r0
   2ca4c:	mov	r0, r5
   2ca50:	bl	27b40 <luaL_where@@Base+0x7a3c>
   2ca54:	ldrh	r1, [r4, #40]	; 0x28
   2ca58:	ldr	r2, [pc, #1476]	; 2d024 <luaL_where@@Base+0xcf20>
   2ca5c:	mov	r3, #6
   2ca60:	strh	r3, [r5, #122]	; 0x7a
   2ca64:	strh	r1, [r5, #120]	; 0x78
   2ca68:	strh	r2, [r5, #124]	; 0x7c
   2ca6c:	mov	r0, r5
   2ca70:	bl	27498 <luaL_where@@Base+0x7394>
   2ca74:	ldr	r3, [pc, #1452]	; 2d028 <luaL_where@@Base+0xcf24>
   2ca78:	strh	r6, [r5, #122]	; 0x7a
   2ca7c:	strh	r3, [r5, #124]	; 0x7c
   2ca80:	mov	r6, #0
   2ca84:	mov	r7, r6
   2ca88:	strh	r0, [r5, #120]	; 0x78
   2ca8c:	mov	r0, r5
   2ca90:	bl	27498 <luaL_where@@Base+0x7394>
   2ca94:	b	2c5a8 <luaL_where@@Base+0xc4a4>
   2ca98:	tst	r8, #32768	; 0x8000
   2ca9c:	bne	2c534 <luaL_where@@Base+0xc430>
   2caa0:	mov	r2, #0
   2caa4:	mov	r3, #0
   2caa8:	mov	r1, #28
   2caac:	mov	r0, r5
   2cab0:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   2cab4:	mov	r8, r0
   2cab8:	b	2c534 <luaL_where@@Base+0xc430>
   2cabc:	ldr	r1, [r4, #48]	; 0x30
   2cac0:	ldr	r2, [pc, #1380]	; 2d02c <luaL_where@@Base+0xcf28>
   2cac4:	ldr	r3, [pc, #1380]	; 2d030 <luaL_where@@Base+0xcf2c>
   2cac8:	cmp	r1, #0
   2cacc:	moveq	r1, r2
   2cad0:	movne	r1, r3
   2cad4:	mov	r0, r5
   2cad8:	bl	2b4c4 <luaL_where@@Base+0xb3c0>
   2cadc:	ldr	r2, [r5, #96]	; 0x60
   2cae0:	ldr	r3, [r5, #80]	; 0x50
   2cae4:	ldr	ip, [r4, #56]	; 0x38
   2cae8:	ldr	r3, [r3, #16]
   2caec:	add	r1, r2, r0, lsl #2
   2caf0:	str	ip, [r2, r0, lsl #2]
   2caf4:	ldr	r2, [r4, #40]	; 0x28
   2caf8:	add	ip, r3, r0, lsl #3
   2cafc:	str	r2, [r1, #4]
   2cb00:	ldr	lr, [r4, #44]	; 0x2c
   2cb04:	mvn	r2, #8
   2cb08:	str	lr, [r1, #8]
   2cb0c:	ldr	lr, [r4, #24]
   2cb10:	ldr	r8, [r4, #48]	; 0x30
   2cb14:	str	lr, [r3, r0, lsl #3]
   2cb18:	str	r2, [ip, #4]
   2cb1c:	ldrd	r2, [r4]
   2cb20:	cmp	r8, #0
   2cb24:	strd	r2, [ip, #8]
   2cb28:	ldrd	r2, [r4, #8]
   2cb2c:	strd	r2, [ip, #16]
   2cb30:	beq	2cc84 <luaL_where@@Base+0xcb80>
   2cb34:	str	r8, [r1, #12]
   2cb38:	ldrd	r2, [r4, #16]
   2cb3c:	mov	r1, r0
   2cb40:	mov	r0, r5
   2cb44:	strd	r2, [ip, #24]
   2cb48:	mov	r2, #3
   2cb4c:	bl	2d604 <luaL_where@@Base+0xd500>
   2cb50:	mov	r8, #0
   2cb54:	mov	r0, r8
   2cb58:	add	sp, sp, #28
   2cb5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cb60:	ldrh	r0, [r0, #2]
   2cb64:	tst	r0, #32768	; 0x8000
   2cb68:	bne	2c4e4 <luaL_where@@Base+0xc3e0>
   2cb6c:	ldr	ip, [r1, r0, lsl #3]
   2cb70:	cmn	ip, #1073741824	; 0x40000000
   2cb74:	bmi	2c4e4 <luaL_where@@Base+0xc3e0>
   2cb78:	sub	r2, r2, #13
   2cb7c:	ldrh	r1, [r1, r3]
   2cb80:	lsl	r3, r2, #8
   2cb84:	orr	r3, r3, #19
   2cb88:	strh	r0, [r5, #122]	; 0x7a
   2cb8c:	strh	r3, [r5, #124]	; 0x7c
   2cb90:	strh	r1, [r5, #120]	; 0x78
   2cb94:	mov	r0, r5
   2cb98:	bl	27498 <luaL_where@@Base+0x7394>
   2cb9c:	ldr	r6, [r4, #40]	; 0x28
   2cba0:	mov	sl, r0
   2cba4:	b	2c4e8 <luaL_where@@Base+0xc3e4>
   2cba8:	ldr	r8, [pc, #1136]	; 2d020 <luaL_where@@Base+0xcf1c>
   2cbac:	mov	r0, r8
   2cbb0:	add	sp, sp, #28
   2cbb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cbb8:	ldr	r1, [pc, #1084]	; 2cffc <luaL_where@@Base+0xcef8>
   2cbbc:	mov	r2, #9
   2cbc0:	strh	r2, [r5, #122]	; 0x7a
   2cbc4:	strh	r3, [r5, #120]	; 0x78
   2cbc8:	strh	r1, [r5, #124]	; 0x7c
   2cbcc:	mov	r0, r5
   2cbd0:	ldr	r7, [r5, #8]
   2cbd4:	ldrb	r6, [r5, #114]	; 0x72
   2cbd8:	bl	27498 <luaL_where@@Base+0x7394>
   2cbdc:	ldr	r1, [r9, #28]
   2cbe0:	mov	fp, r0
   2cbe4:	mov	r0, r5
   2cbe8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2cbec:	ldr	r3, [pc, #1056]	; 2d014 <luaL_where@@Base+0xcf10>
   2cbf0:	strh	fp, [r5, #120]	; 0x78
   2cbf4:	strh	r3, [r5, #124]	; 0x7c
   2cbf8:	strh	r0, [r5, #122]	; 0x7a
   2cbfc:	mov	r0, r5
   2cc00:	bl	27498 <luaL_where@@Base+0x7394>
   2cc04:	ldrh	r1, [r4, #40]	; 0x28
   2cc08:	ldr	r2, [pc, #1044]	; 2d024 <luaL_where@@Base+0xcf20>
   2cc0c:	mov	r3, #7
   2cc10:	strh	r1, [r5, #120]	; 0x78
   2cc14:	strh	r2, [r5, #124]	; 0x7c
   2cc18:	strh	r3, [r5, #122]	; 0x7a
   2cc1c:	mov	r0, r5
   2cc20:	bl	27498 <luaL_where@@Base+0x7394>
   2cc24:	ldr	r3, [pc, #1032]	; 2d034 <luaL_where@@Base+0xcf30>
   2cc28:	mov	r1, r8
   2cc2c:	umull	sl, fp, sl, r3
   2cc30:	lsr	r2, fp, #4
   2cc34:	mov	r9, r0
   2cc38:	mov	r0, r5
   2cc3c:	bl	2c2e8 <luaL_where@@Base+0xc1e4>
   2cc40:	ldr	r3, [pc, #1008]	; 2d038 <luaL_where@@Base+0xcf34>
   2cc44:	strh	r9, [r5, #120]	; 0x78
   2cc48:	strh	r3, [r5, #124]	; 0x7c
   2cc4c:	strh	r0, [r5, #122]	; 0x7a
   2cc50:	mov	r0, r5
   2cc54:	bl	27498 <luaL_where@@Base+0x7394>
   2cc58:	b	2c5a8 <luaL_where@@Base+0xc4a4>
   2cc5c:	ldr	r2, [pc, #984]	; 2d03c <luaL_where@@Base+0xcf38>
   2cc60:	ldr	r3, [pc, #984]	; 2d040 <luaL_where@@Base+0xcf3c>
   2cc64:	strh	r8, [r5, #120]	; 0x78
   2cc68:	strh	r2, [r5, #124]	; 0x7c
   2cc6c:	strh	r3, [r5, #122]	; 0x7a
   2cc70:	mov	r0, r5
   2cc74:	bl	27498 <luaL_where@@Base+0x7394>
   2cc78:	ldr	r6, [r4, #40]	; 0x28
   2cc7c:	mov	sl, r0
   2cc80:	b	2c4e8 <luaL_where@@Base+0xc3e4>
   2cc84:	mov	r1, r0
   2cc88:	mov	r2, #2
   2cc8c:	mov	r0, r5
   2cc90:	bl	2d604 <luaL_where@@Base+0xd500>
   2cc94:	mov	r0, r8
   2cc98:	add	sp, sp, #28
   2cc9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cca0:	tst	r3, #32768	; 0x8000
   2cca4:	bne	2ce78 <luaL_where@@Base+0xcd74>
   2cca8:	ldr	r1, [r5, #16]
   2ccac:	uxth	r2, r3
   2ccb0:	sub	r0, r5, #128	; 0x80
   2ccb4:	ldr	r1, [r1, r2, lsl #3]
   2ccb8:	sub	r3, r5, #152	; 0x98
   2ccbc:	ldr	r2, [r3], #4
   2ccc0:	cmp	r1, r2
   2ccc4:	beq	2ce78 <luaL_where@@Base+0xcd74>
   2ccc8:	cmp	r0, r3
   2cccc:	bne	2ccbc <luaL_where@@Base+0xcbb8>
   2ccd0:	b	2c7b0 <luaL_where@@Base+0xc6ac>
   2ccd4:	ldr	r2, [sp, #4]
   2ccd8:	add	r3, r5, r2, lsl #1
   2ccdc:	str	r3, [sp, #20]
   2cce0:	add	r3, r3, #300	; 0x12c
   2cce4:	uxth	r6, r2
   2cce8:	ldrh	r3, [r3]
   2ccec:	str	r6, [sp, #4]
   2ccf0:	cmp	ip, r3
   2ccf4:	bcs	2cda8 <luaL_where@@Base+0xcca4>
   2ccf8:	lsl	r3, r3, #3
   2ccfc:	add	sl, lr, r3
   2cd00:	ldrh	r3, [lr, r3]
   2cd04:	cmp	r3, ip
   2cd08:	beq	2cf34 <luaL_where@@Base+0xce30>
   2cd0c:	str	r9, [sp, #16]
   2cd10:	mov	r9, r2
   2cd14:	b	2cd2c <luaL_where@@Base+0xcc28>
   2cd18:	lsl	r3, r3, #3
   2cd1c:	add	sl, lr, r3
   2cd20:	ldrh	r3, [lr, r3]
   2cd24:	cmp	ip, r3
   2cd28:	beq	2cf30 <luaL_where@@Base+0xce2c>
   2cd2c:	ldrb	r2, [sl, #4]
   2cd30:	tst	r2, #31
   2cd34:	bne	2cd98 <luaL_where@@Base+0xcc94>
   2cd38:	add	r3, lr, r3, lsl #3
   2cd3c:	cmp	r9, #66	; 0x42
   2cd40:	ldrh	r2, [r3, #2]
   2cd44:	ldrh	r3, [r0, #2]
   2cd48:	beq	2cd68 <luaL_where@@Base+0xcc64>
   2cd4c:	add	r6, lr, r2, lsl #3
   2cd50:	add	r7, lr, r3, lsl #3
   2cd54:	ldrb	r6, [r6, #4]
   2cd58:	ldrb	r7, [r7, #4]
   2cd5c:	eor	r6, r6, r7
   2cd60:	tst	r6, #31
   2cd64:	bne	2cd98 <luaL_where@@Base+0xcc94>
   2cd68:	ldr	r7, [pc, #688]	; 2d020 <luaL_where@@Base+0xcf1c>
   2cd6c:	cmp	r2, r7
   2cd70:	movls	r6, #0
   2cd74:	movhi	r6, #1
   2cd78:	cmp	r2, r3
   2cd7c:	movne	r2, r6
   2cd80:	orreq	r2, r6, #1
   2cd84:	cmp	r3, r7
   2cd88:	movls	r3, r2
   2cd8c:	orrhi	r3, r2, #1
   2cd90:	cmp	r3, #0
   2cd94:	bne	2cdfc <luaL_where@@Base+0xccf8>
   2cd98:	ldrh	r3, [sl, #6]
   2cd9c:	cmp	ip, r3
   2cda0:	bcc	2cd18 <luaL_where@@Base+0xcc14>
   2cda4:	ldr	r9, [sp, #16]
   2cda8:	ldr	r3, [sp, #20]
   2cdac:	add	r3, r3, #284	; 0x11c
   2cdb0:	ldrh	r3, [r3, #2]
   2cdb4:	cmp	ip, r3
   2cdb8:	bcc	2cdcc <luaL_where@@Base+0xccc8>
   2cdbc:	b	2cdfc <luaL_where@@Base+0xccf8>
   2cdc0:	ldrh	r3, [r2, #6]
   2cdc4:	cmp	ip, r3
   2cdc8:	bcs	2cdfc <luaL_where@@Base+0xccf8>
   2cdcc:	lsl	r3, r3, #3
   2cdd0:	add	r2, lr, r3
   2cdd4:	ldrh	r3, [lr, r3]
   2cdd8:	cmp	ip, r3
   2cddc:	bne	2cdc0 <luaL_where@@Base+0xccbc>
   2cde0:	ldrb	r3, [r2, #4]
   2cde4:	ands	r3, r3, #31
   2cde8:	movne	r3, #1
   2cdec:	cmp	r3, #0
   2cdf0:	movne	r3, #0
   2cdf4:	strne	r3, [sp, #12]
   2cdf8:	bne	2c738 <luaL_where@@Base+0xc634>
   2cdfc:	cmp	r1, #59	; 0x3b
   2ce00:	beq	2cf54 <luaL_where@@Base+0xce50>
   2ce04:	ldr	r3, [r4, #60]	; 0x3c
   2ce08:	cmp	r3, #0
   2ce0c:	beq	2c734 <luaL_where@@Base+0xc630>
   2ce10:	ldr	r3, [sp, #8]
   2ce14:	cmp	r3, #0
   2ce18:	beq	2cf80 <luaL_where@@Base+0xce7c>
   2ce1c:	ldr	r3, [r8, #4]
   2ce20:	cmn	r3, #14
   2ce24:	moveq	r3, #19
   2ce28:	beq	2ce3c <luaL_where@@Base+0xcd38>
   2ce2c:	cmn	r3, #15
   2ce30:	mvnhi	r3, r3
   2ce34:	movls	r3, #14
   2ce38:	uxthhi	r3, r3
   2ce3c:	ldr	r2, [sp, #4]
   2ce40:	strh	fp, [r5, #120]	; 0x78
   2ce44:	mov	r0, r5
   2ce48:	orr	r3, r3, r2, lsl #8
   2ce4c:	orr	r3, r3, #128	; 0x80
   2ce50:	mov	r2, #0
   2ce54:	strh	r3, [r5, #124]	; 0x7c
   2ce58:	strh	r2, [r5, #122]	; 0x7a
   2ce5c:	bl	27498 <luaL_where@@Base+0x7394>
   2ce60:	b	2c734 <luaL_where@@Base+0xc630>
   2ce64:	cmp	r9, #2
   2ce68:	rsbls	r9, r9, r9, lsl #24
   2ce6c:	addls	r8, r9, #32512	; 0x7f00
   2ce70:	addls	r8, r8, #255	; 0xff
   2ce74:	b	2cb54 <luaL_where@@Base+0xca50>
   2ce78:	ldrh	r1, [r4, #40]	; 0x28
   2ce7c:	ldr	r2, [pc, #448]	; 2d044 <luaL_where@@Base+0xcf40>
   2ce80:	mov	r3, #10
   2ce84:	strh	r3, [r5, #122]	; 0x7a
   2ce88:	strh	r1, [r5, #120]	; 0x78
   2ce8c:	strh	r2, [r5, #124]	; 0x7c
   2ce90:	mov	r0, r5
   2ce94:	bl	27498 <luaL_where@@Base+0x7394>
   2ce98:	mov	r1, #0
   2ce9c:	mov	r4, r0
   2cea0:	mov	r0, r5
   2cea4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2cea8:	ldr	r3, [pc, #408]	; 2d048 <luaL_where@@Base+0xcf44>
   2ceac:	strh	r4, [r5, #120]	; 0x78
   2ceb0:	strh	r3, [r5, #124]	; 0x7c
   2ceb4:	strh	r0, [r5, #122]	; 0x7a
   2ceb8:	mov	r0, r5
   2cebc:	bl	27498 <luaL_where@@Base+0x7394>
   2cec0:	b	2c7b0 <luaL_where@@Base+0xc6ac>
   2cec4:	ldr	r0, [r4, #44]	; 0x2c
   2cec8:	lsr	r3, r0, #24
   2cecc:	and	r3, r3, #31
   2ced0:	sub	r3, r3, #15
   2ced4:	cmp	r3, #4
   2ced8:	uxth	r0, r0
   2cedc:	bhi	2cf00 <luaL_where@@Base+0xcdfc>
   2cee0:	ldr	r2, [pc, #304]	; 2d018 <luaL_where@@Base+0xcf14>
   2cee4:	ldr	r3, [pc, #304]	; 2d01c <luaL_where@@Base+0xcf18>
   2cee8:	strh	r0, [r5, #120]	; 0x78
   2ceec:	strh	r2, [r5, #124]	; 0x7c
   2cef0:	strh	r3, [r5, #122]	; 0x7a
   2cef4:	mov	r0, r5
   2cef8:	bl	27498 <luaL_where@@Base+0x7394>
   2cefc:	uxth	r0, r0
   2cf00:	ldrh	r2, [r4, #40]	; 0x28
   2cf04:	ldr	r3, [pc, #320]	; 2d04c <luaL_where@@Base+0xcf48>
   2cf08:	strh	r0, [r5, #122]	; 0x7a
   2cf0c:	strh	r3, [r5, #124]	; 0x7c
   2cf10:	strh	r2, [r5, #120]	; 0x78
   2cf14:	mov	r0, r5
   2cf18:	bl	27498 <luaL_where@@Base+0x7394>
   2cf1c:	mov	r3, #0
   2cf20:	str	r3, [sp, #12]
   2cf24:	ldr	r9, [r4, #48]	; 0x30
   2cf28:	uxth	fp, r0
   2cf2c:	b	2c738 <luaL_where@@Base+0xc634>
   2cf30:	ldr	r9, [sp, #16]
   2cf34:	ldrb	r3, [sl, #4]
   2cf38:	ands	r3, r3, #31
   2cf3c:	movne	r3, #1
   2cf40:	b	2cdec <luaL_where@@Base+0xcce8>
   2cf44:	add	r1, r5, #2336	; 0x920
   2cf48:	add	r1, r1, #12
   2cf4c:	mov	r2, #19
   2cf50:	bl	210d0 <luaL_where@@Base+0xfcc>
   2cf54:	sub	r2, r5, #240	; 0xf0
   2cf58:	mov	r1, #26
   2cf5c:	mov	r0, r5
   2cf60:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2cf64:	ldr	r3, [pc, #164]	; 2d010 <luaL_where@@Base+0xcf0c>
   2cf68:	strh	fp, [r5, #120]	; 0x78
   2cf6c:	strh	r3, [r5, #124]	; 0x7c
   2cf70:	strh	r0, [r5, #122]	; 0x7a
   2cf74:	mov	r0, r5
   2cf78:	bl	27498 <luaL_where@@Base+0x7394>
   2cf7c:	b	2ce04 <luaL_where@@Base+0xcd00>
   2cf80:	ldrh	r1, [r4, #40]	; 0x28
   2cf84:	ldr	r2, [pc, #196]	; 2d050 <luaL_where@@Base+0xcf4c>
   2cf88:	mov	r3, #5
   2cf8c:	strh	r3, [r5, #122]	; 0x7a
   2cf90:	strh	r1, [r5, #120]	; 0x78
   2cf94:	strh	r2, [r5, #124]	; 0x7c
   2cf98:	mov	r0, r5
   2cf9c:	bl	27498 <luaL_where@@Base+0x7394>
   2cfa0:	mov	r1, #11
   2cfa4:	mov	r6, r0
   2cfa8:	mov	r0, r5
   2cfac:	bl	2bb4c <luaL_where@@Base+0xba48>
   2cfb0:	ldr	r3, [pc, #156]	; 2d054 <luaL_where@@Base+0xcf50>
   2cfb4:	strh	r6, [r5, #120]	; 0x78
   2cfb8:	strh	r3, [r5, #124]	; 0x7c
   2cfbc:	strh	r0, [r5, #122]	; 0x7a
   2cfc0:	mov	r0, r5
   2cfc4:	bl	27498 <luaL_where@@Base+0x7394>
   2cfc8:	b	2c734 <luaL_where@@Base+0xc630>
   2cfcc:	add	r1, r5, #2336	; 0x920
   2cfd0:	add	r1, r1, #12
   2cfd4:	ldr	r0, [r5, #80]	; 0x50
   2cfd8:	mov	r2, #17
   2cfdc:	bl	210d0 <luaL_where@@Base+0xfcc>
   2cfe0:	ldrh	r3, [r4, #40]	; 0x28
   2cfe4:	b	2c588 <luaL_where@@Base+0xc484>
   2cfe8:	add	r1, r5, #2336	; 0x920
   2cfec:	add	r1, r1, #12
   2cff0:	mov	r0, sl
   2cff4:	mov	r2, #20
   2cff8:	bl	210d0 <luaL_where@@Base+0xfcc>
   2cffc:	andeq	r4, r0, r3, lsl r5
   2d000:	muleq	r0, r3, r6
   2d004:	andseq	pc, r7, r8, ror #31
   2d008:	andeq	r3, r0, r5, lsl #22
   2d00c:	andeq	r0, r0, r5, lsl #17
   2d010:	andeq	r0, r0, r5, lsl #19
   2d014:	muleq	r0, r3, r8
   2d018:	andeq	r5, r0, lr, lsl #20
   2d01c:	ldrdeq	r0, [r0], -r3
   2d020:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   2d024:	andeq	r4, r0, r5, lsl #10
   2d028:	andeq	r3, r0, r5, lsl #18
   2d02c:	andeq	fp, r6, r0, asr #31
   2d030:	andeq	fp, r6, r8, lsr #31
   2d034:	bge	fead7ae8 <__bss_end__@@Base+0xfea53870>
   2d038:	andeq	r3, r0, r5, lsl #21
   2d03c:	muleq	r0, r3, sl
   2d040:	andeq	r2, r0, lr, ror #4
   2d044:	andeq	r3, r0, r5, lsl #30
   2d048:	andeq	r4, r0, r0, lsl ip
   2d04c:	andeq	r3, r0, r5, lsl #24
   2d050:	andeq	r4, r0, fp, lsl #10
   2d054:	andeq	r0, r0, fp, lsl #17
   2d058:	ldr	r3, [r1, #40]	; 0x28
   2d05c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2d060:	mov	r6, r2
   2d064:	and	r2, r3, #520093696	; 0x1f000000
   2d068:	cmp	r2, #184549376	; 0xb000000
   2d06c:	sub	sp, sp, #68	; 0x44
   2d070:	mov	r5, r1
   2d074:	mov	r4, r0
   2d078:	beq	2d1b0 <luaL_where@@Base+0xd0ac>
   2d07c:	cmp	r2, #201326592	; 0xc000000
   2d080:	beq	2d14c <luaL_where@@Base+0xd048>
   2d084:	ldr	r3, [r1, #4]
   2d088:	cmn	r3, #14
   2d08c:	rsbhi	r3, r3, #21
   2d090:	movls	r3, #35	; 0x23
   2d094:	add	r3, r0, r3, lsl #2
   2d098:	ldr	r8, [r3, #-152]	; 0xffffff68
   2d09c:	cmp	r8, #0
   2d0a0:	beq	2d2dc <luaL_where@@Base+0xd1d8>
   2d0a4:	cmp	r2, #167772160	; 0xa000000
   2d0a8:	bne	2d2c4 <luaL_where@@Base+0xd1c0>
   2d0ac:	add	r6, r4, r6, lsl #2
   2d0b0:	ldr	r3, [r8, #28]
   2d0b4:	ldr	r1, [r6, #-152]	; 0xffffff68
   2d0b8:	ldr	r2, [r8, #20]
   2d0bc:	ldr	r0, [r1, #8]
   2d0c0:	and	r3, r3, r0
   2d0c4:	add	r3, r3, r3, lsl #1
   2d0c8:	add	r3, r2, r3, lsl #3
   2d0cc:	b	2d0dc <luaL_where@@Base+0xcfd8>
   2d0d0:	ldr	r3, [r3, #16]
   2d0d4:	cmp	r3, #0
   2d0d8:	beq	2d140 <luaL_where@@Base+0xd03c>
   2d0dc:	ldr	r2, [r3, #12]
   2d0e0:	cmn	r2, #5
   2d0e4:	bne	2d0d0 <luaL_where@@Base+0xcfcc>
   2d0e8:	ldr	r2, [r3, #8]
   2d0ec:	cmp	r1, r2
   2d0f0:	bne	2d0d0 <luaL_where@@Base+0xcfcc>
   2d0f4:	ldr	r2, [r3, #4]
   2d0f8:	cmn	r2, #1
   2d0fc:	beq	2d314 <luaL_where@@Base+0xd210>
   2d100:	cmn	r2, #12
   2d104:	cmnne	r2, #9
   2d108:	bne	2d360 <luaL_where@@Base+0xd25c>
   2d10c:	ldrd	r6, [r3]
   2d110:	mov	r0, r4
   2d114:	strd	r6, [r5, #24]
   2d118:	ldm	r3, {r1, r2}
   2d11c:	cmn	r2, #9
   2d120:	movne	r2, #11
   2d124:	moveq	r2, #8
   2d128:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2d12c:	ldr	r3, [pc, #576]	; 2d374 <luaL_where@@Base+0xd270>
   2d130:	str	r8, [r5, #32]
   2d134:	str	r3, [r5, #52]	; 0x34
   2d138:	mov	r3, #1
   2d13c:	str	r0, [r5, #56]	; 0x38
   2d140:	mov	r0, r3
   2d144:	add	sp, sp, #68	; 0x44
   2d148:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2d14c:	ldr	r2, [r1]
   2d150:	uxth	r7, r3
   2d154:	ldrb	r9, [r2, #6]
   2d158:	ldr	r8, [r2, #16]
   2d15c:	cmp	r9, #0
   2d160:	beq	2d2f4 <luaL_where@@Base+0xd1f0>
   2d164:	cmp	r9, #2
   2d168:	beq	2d350 <luaL_where@@Base+0xd24c>
   2d16c:	ldr	r2, [pc, #516]	; 2d378 <luaL_where@@Base+0xd274>
   2d170:	mov	r3, #12
   2d174:	strh	r3, [r0, #122]	; 0x7a
   2d178:	strh	r7, [r0, #120]	; 0x78
   2d17c:	strh	r2, [r0, #124]	; 0x7c
   2d180:	bl	27498 <luaL_where@@Base+0x7394>
   2d184:	mov	r1, r9
   2d188:	mov	r7, r0
   2d18c:	mov	r0, r4
   2d190:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2d194:	ldr	r3, [pc, #480]	; 2d37c <luaL_where@@Base+0xd278>
   2d198:	strh	r0, [r4, #122]	; 0x7a
   2d19c:	strh	r7, [r4, #120]	; 0x78
   2d1a0:	strh	r3, [r4, #124]	; 0x7c
   2d1a4:	mov	r0, r4
   2d1a8:	bl	27498 <luaL_where@@Base+0x7394>
   2d1ac:	b	2d0ac <luaL_where@@Base+0xcfa8>
   2d1b0:	ldr	ip, [r1]
   2d1b4:	ldr	r1, [pc, #452]	; 2d380 <luaL_where@@Base+0xd27c>
   2d1b8:	mov	r2, #5
   2d1bc:	ldr	r8, [ip, #16]
   2d1c0:	strh	r3, [r0, #120]	; 0x78
   2d1c4:	strh	r1, [r0, #124]	; 0x7c
   2d1c8:	strh	r2, [r0, #122]	; 0x7a
   2d1cc:	bl	27498 <luaL_where@@Base+0x7394>
   2d1d0:	str	r0, [sp, #40]	; 0x28
   2d1d4:	cmp	r8, #0
   2d1d8:	uxth	r7, r0
   2d1dc:	beq	2d31c <luaL_where@@Base+0xd218>
   2d1e0:	str	r0, [r5, #52]	; 0x34
   2d1e4:	mov	r1, #11
   2d1e8:	mov	r0, r4
   2d1ec:	bl	2bb4c <luaL_where@@Base+0xba48>
   2d1f0:	ldr	r3, [pc, #396]	; 2d384 <luaL_where@@Base+0xd280>
   2d1f4:	strh	r7, [r4, #120]	; 0x78
   2d1f8:	strh	r3, [r4, #124]	; 0x7c
   2d1fc:	strh	r0, [r4, #122]	; 0x7a
   2d200:	mov	r0, r4
   2d204:	bl	27498 <luaL_where@@Base+0x7394>
   2d208:	add	r6, r4, r6, lsl #2
   2d20c:	ldr	r3, [r8, #28]
   2d210:	ldr	r0, [r6, #-152]	; 0xffffff68
   2d214:	ldr	r2, [r8, #20]
   2d218:	ldr	r1, [r0, #8]
   2d21c:	and	r3, r3, r1
   2d220:	add	r3, r3, r3, lsl #1
   2d224:	add	r2, r2, r3, lsl #3
   2d228:	b	2d238 <luaL_where@@Base+0xd134>
   2d22c:	ldr	r2, [r2, #16]
   2d230:	cmp	r2, #0
   2d234:	beq	2d260 <luaL_where@@Base+0xd15c>
   2d238:	ldr	r3, [r2, #12]
   2d23c:	cmn	r3, #5
   2d240:	bne	2d22c <luaL_where@@Base+0xd128>
   2d244:	ldr	r3, [r2, #8]
   2d248:	cmp	r0, r3
   2d24c:	bne	2d22c <luaL_where@@Base+0xd128>
   2d250:	ldr	r3, [r2, #4]
   2d254:	cmn	r3, #1
   2d258:	ldrdne	r2, [r2]
   2d25c:	strdne	r2, [r5, #24]
   2d260:	mvn	ip, #11
   2d264:	mov	r1, r0
   2d268:	mvn	r3, #4
   2d26c:	str	r0, [sp, #8]
   2d270:	mov	r2, #4
   2d274:	str	r8, [r5, #32]
   2d278:	mov	r0, r4
   2d27c:	str	ip, [sp, #4]
   2d280:	str	r3, [sp, #12]
   2d284:	str	r8, [sp]
   2d288:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2d28c:	mov	r3, #0
   2d290:	mov	r1, sp
   2d294:	str	r3, [sp, #48]	; 0x30
   2d298:	str	r3, [sp, #60]	; 0x3c
   2d29c:	str	r0, [sp, #44]	; 0x2c
   2d2a0:	mov	r0, r4
   2d2a4:	bl	2c388 <luaL_where@@Base+0xc284>
   2d2a8:	tst	r0, #520093696	; 0x1f000000
   2d2ac:	movne	r3, #1
   2d2b0:	moveq	r3, #0
   2d2b4:	str	r0, [r5, #56]	; 0x38
   2d2b8:	mov	r0, r3
   2d2bc:	add	sp, sp, #68	; 0x44
   2d2c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2d2c4:	mov	r2, #11
   2d2c8:	mov	r1, r8
   2d2cc:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2d2d0:	str	r0, [sp, #40]	; 0x28
   2d2d4:	str	r0, [r5, #52]	; 0x34
   2d2d8:	b	2d208 <luaL_where@@Base+0xd104>
   2d2dc:	ldr	r2, [pc, #144]	; 2d374 <luaL_where@@Base+0xd270>
   2d2e0:	mov	r3, r8
   2d2e4:	mov	r0, r3
   2d2e8:	str	r2, [r1, #52]	; 0x34
   2d2ec:	add	sp, sp, #68	; 0x44
   2d2f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2d2f4:	ldr	r2, [pc, #132]	; 2d380 <luaL_where@@Base+0xd27c>
   2d2f8:	mov	r3, #11
   2d2fc:	strh	r7, [r0, #120]	; 0x78
   2d300:	strh	r2, [r0, #124]	; 0x7c
   2d304:	strh	r3, [r0, #122]	; 0x7a
   2d308:	bl	27498 <luaL_where@@Base+0x7394>
   2d30c:	str	r0, [sp, #40]	; 0x28
   2d310:	b	2d1d4 <luaL_where@@Base+0xd0d0>
   2d314:	mov	r3, #0
   2d318:	b	2d140 <luaL_where@@Base+0xd03c>
   2d31c:	ldr	r3, [pc, #80]	; 2d374 <luaL_where@@Base+0xd270>
   2d320:	mov	r1, #11
   2d324:	str	r3, [r5, #52]	; 0x34
   2d328:	mov	r0, r4
   2d32c:	bl	2bb4c <luaL_where@@Base+0xba48>
   2d330:	ldr	r3, [pc, #80]	; 2d388 <luaL_where@@Base+0xd284>
   2d334:	strh	r7, [r4, #120]	; 0x78
   2d338:	strh	r3, [r4, #124]	; 0x7c
   2d33c:	strh	r0, [r4, #122]	; 0x7a
   2d340:	mov	r0, r4
   2d344:	bl	27498 <luaL_where@@Base+0x7394>
   2d348:	mov	r3, r8
   2d34c:	b	2d140 <luaL_where@@Base+0xd03c>
   2d350:	mov	r1, #25
   2d354:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2d358:	ldr	r3, [pc, #44]	; 2d38c <luaL_where@@Base+0xd288>
   2d35c:	b	2d198 <luaL_where@@Base+0xd094>
   2d360:	add	r1, r4, #2336	; 0x920
   2d364:	add	r1, r1, #12
   2d368:	ldr	r0, [r4, #80]	; 0x50
   2d36c:	mov	r2, #11
   2d370:	bl	210d0 <luaL_where@@Base+0xfcc>
   2d374:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   2d378:	andeq	r4, r0, r0, lsl r5
   2d37c:	muleq	r0, r3, r8
   2d380:	andeq	r4, r0, fp, lsl #10
   2d384:	andeq	r0, r0, fp, lsl #19
   2d388:	andeq	r0, r0, fp, lsl #17
   2d38c:	andeq	r0, r0, r5, lsl #17
   2d390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d394:	sub	sp, sp, #84	; 0x54
   2d398:	ldr	r8, [r0, #96]	; 0x60
   2d39c:	ldr	lr, [r0, #80]	; 0x50
   2d3a0:	lsl	r3, r1, #3
   2d3a4:	ldr	ip, [r8, r1, lsl #2]
   2d3a8:	ldr	lr, [lr, #16]
   2d3ac:	str	r3, [sp, #8]
   2d3b0:	lsl	r4, r1, #2
   2d3b4:	add	r3, lr, r3
   2d3b8:	cmp	ip, #0
   2d3bc:	mov	r6, r0
   2d3c0:	mov	sl, r1
   2d3c4:	str	lr, [sp, #12]
   2d3c8:	mov	r7, r2
   2d3cc:	str	r3, [sp, #4]
   2d3d0:	add	r9, r8, r4
   2d3d4:	beq	2d570 <luaL_where@@Base+0xd46c>
   2d3d8:	cmp	r7, #0
   2d3dc:	ble	2d430 <luaL_where@@Base+0xd32c>
   2d3e0:	add	r2, r7, sl
   2d3e4:	add	r4, r4, #4
   2d3e8:	add	fp, r2, #1
   2d3ec:	add	r5, sl, #1
   2d3f0:	b	2d404 <luaL_where@@Base+0xd300>
   2d3f4:	add	r5, r5, #1
   2d3f8:	cmp	fp, r5
   2d3fc:	add	r4, r4, #4
   2d400:	beq	2d430 <luaL_where@@Base+0xd32c>
   2d404:	ldr	r3, [r6, #96]	; 0x60
   2d408:	ldr	r3, [r3, r4]
   2d40c:	cmp	r3, #0
   2d410:	bne	2d3f4 <luaL_where@@Base+0xd2f0>
   2d414:	mov	r1, r5
   2d418:	mov	r0, r6
   2d41c:	add	r5, r5, #1
   2d420:	bl	25b34 <luaL_where@@Base+0x5a30>
   2d424:	cmp	fp, r5
   2d428:	add	r4, r4, #4
   2d42c:	bne	2d404 <luaL_where@@Base+0xd300>
   2d430:	ldr	r4, [r8, sl, lsl #2]
   2d434:	and	r2, r4, #520093696	; 0x1f000000
   2d438:	cmp	r2, #134217728	; 0x8000000
   2d43c:	beq	2d4ac <luaL_where@@Base+0xd3a8>
   2d440:	ldrd	r2, [sp, #8]
   2d444:	add	r1, sp, #80	; 0x50
   2d448:	mov	r0, r6
   2d44c:	add	r2, r3, r2
   2d450:	ldrd	r2, [r2]
   2d454:	str	r4, [sp, #56]	; 0x38
   2d458:	strd	r2, [r1, #-64]!	; 0xffffffc0
   2d45c:	mov	r2, #9
   2d460:	bl	2d058 <luaL_where@@Base+0xcf54>
   2d464:	cmp	r0, #0
   2d468:	beq	2d5dc <luaL_where@@Base+0xd4d8>
   2d46c:	ldr	r4, [sp, #72]	; 0x48
   2d470:	and	r2, r4, #520093696	; 0x1f000000
   2d474:	cmp	r2, #134217728	; 0x8000000
   2d478:	bne	2d5dc <luaL_where@@Base+0xd4d8>
   2d47c:	add	r7, r7, #1
   2d480:	cmp	r7, #0
   2d484:	ble	2d4a0 <luaL_where@@Base+0xd39c>
   2d488:	add	r2, r9, r7, lsl #2
   2d48c:	ldr	r3, [r2, #-4]!
   2d490:	cmp	r9, r2
   2d494:	str	r3, [r2, #4]
   2d498:	bne	2d48c <luaL_where@@Base+0xd388>
   2d49c:	ldr	r4, [sp, #72]	; 0x48
   2d4a0:	add	r3, sp, #40	; 0x28
   2d4a4:	str	r4, [r8, sl, lsl #2]
   2d4a8:	str	r3, [sp, #4]
   2d4ac:	ldr	r3, [sp, #4]
   2d4b0:	uxth	r9, r4
   2d4b4:	ldr	r5, [r3]
   2d4b8:	ldrb	r2, [r5, #6]
   2d4bc:	cmp	r2, #0
   2d4c0:	bne	2d518 <luaL_where@@Base+0xd414>
   2d4c4:	ldr	fp, [r5, #16]
   2d4c8:	sub	r3, fp, #64	; 0x40
   2d4cc:	ldrb	r2, [fp, #-27]	; 0xffffffe5
   2d4d0:	cmp	r2, #95	; 0x5f
   2d4d4:	bhi	2d578 <luaL_where@@Base+0xd474>
   2d4d8:	mov	r2, #8
   2d4dc:	mov	r1, r5
   2d4e0:	mov	r0, r6
   2d4e4:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2d4e8:	ldr	r2, [pc, #256]	; 2d5f0 <luaL_where@@Base+0xd4ec>
   2d4ec:	strh	r9, [r6, #120]	; 0x78
   2d4f0:	strh	r2, [r6, #124]	; 0x7c
   2d4f4:	mov	r4, r0
   2d4f8:	strh	r0, [r6, #122]	; 0x7a
   2d4fc:	mov	r0, r6
   2d500:	bl	27498 <luaL_where@@Base+0x7394>
   2d504:	orr	r4, r4, #65536	; 0x10000
   2d508:	str	r4, [r8, sl, lsl #2]
   2d50c:	str	r7, [r6, #104]	; 0x68
   2d510:	add	sp, sp, #84	; 0x54
   2d514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d518:	cmp	r2, #36	; 0x24
   2d51c:	beq	2d528 <luaL_where@@Base+0xd424>
   2d520:	cmp	r2, #86	; 0x56
   2d524:	bne	2d4d8 <luaL_where@@Base+0xd3d4>
   2d528:	ldr	r1, [pc, #196]	; 2d5f4 <luaL_where@@Base+0xd4f0>
   2d52c:	mov	r2, #3
   2d530:	strh	r2, [r6, #122]	; 0x7a
   2d534:	strh	r9, [r6, #120]	; 0x78
   2d538:	strh	r1, [r6, #124]	; 0x7c
   2d53c:	mov	r0, r6
   2d540:	bl	27498 <luaL_where@@Base+0x7394>
   2d544:	ldrb	r1, [r5, #6]
   2d548:	mov	r9, r0
   2d54c:	mov	r0, r6
   2d550:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2d554:	ldr	r2, [pc, #156]	; 2d5f8 <luaL_where@@Base+0xd4f4>
   2d558:	strh	r9, [r6, #120]	; 0x78
   2d55c:	strh	r2, [r6, #124]	; 0x7c
   2d560:	strh	r0, [r6, #122]	; 0x7a
   2d564:	mov	r0, r6
   2d568:	bl	27498 <luaL_where@@Base+0x7394>
   2d56c:	b	2d504 <luaL_where@@Base+0xd400>
   2d570:	bl	25b34 <luaL_where@@Base+0x5a30>
   2d574:	b	2d3d8 <luaL_where@@Base+0xd2d4>
   2d578:	ldr	r1, [pc, #124]	; 2d5fc <luaL_where@@Base+0xd4f8>
   2d57c:	mov	r2, #2
   2d580:	strh	r1, [r6, #124]	; 0x7c
   2d584:	strh	r2, [r6, #122]	; 0x7a
   2d588:	strh	r9, [r6, #120]	; 0x78
   2d58c:	mov	r0, r6
   2d590:	str	r3, [sp, #4]
   2d594:	bl	27498 <luaL_where@@Base+0x7394>
   2d598:	mov	r2, fp
   2d59c:	mov	r1, #25
   2d5a0:	mov	r5, r0
   2d5a4:	mov	r0, r6
   2d5a8:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2d5ac:	ldr	r2, [pc, #76]	; 2d600 <luaL_where@@Base+0xd4fc>
   2d5b0:	strh	r5, [r6, #120]	; 0x78
   2d5b4:	strh	r2, [r6, #124]	; 0x7c
   2d5b8:	strh	r0, [r6, #122]	; 0x7a
   2d5bc:	mov	r0, r6
   2d5c0:	bl	27498 <luaL_where@@Base+0x7394>
   2d5c4:	ldr	r3, [sp, #4]
   2d5c8:	mov	r2, #7
   2d5cc:	mov	r1, r3
   2d5d0:	mov	r0, r6
   2d5d4:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2d5d8:	b	2d504 <luaL_where@@Base+0xd400>
   2d5dc:	add	r1, r6, #2336	; 0x920
   2d5e0:	add	r1, r1, #12
   2d5e4:	ldr	r0, [r6, #80]	; 0x50
   2d5e8:	mov	r2, #18
   2d5ec:	bl	210d0 <luaL_where@@Base+0xfcc>
   2d5f0:	andeq	r0, r0, r8, lsl #17
   2d5f4:	andeq	r4, r0, r0, lsl r5
   2d5f8:	muleq	r0, r3, r8
   2d5fc:	andeq	r4, r0, r5, lsl #10
   2d600:	andeq	r0, r0, r5, lsl #17
   2d604:	push	{r4, r5, r6, lr}
   2d608:	mov	r4, r0
   2d60c:	mov	r5, r1
   2d610:	bl	2d390 <luaL_where@@Base+0xd28c>
   2d614:	add	r1, r5, #1
   2d618:	ldr	r0, [r4, #184]	; 0xb8
   2d61c:	ldr	r2, [r4, #96]	; 0x60
   2d620:	ldr	r3, [r4, #108]	; 0x6c
   2d624:	add	r2, r2, r1, lsl #2
   2d628:	add	r0, r0, #1
   2d62c:	add	r1, r3, r1
   2d630:	str	r0, [r4, #184]	; 0xb8
   2d634:	str	r2, [r4, #96]	; 0x60
   2d638:	str	r1, [r4, #108]	; 0x6c
   2d63c:	pop	{r4, r5, r6, pc}
   2d640:	ldr	ip, [pc, #120]	; 2d6c0 <luaL_where@@Base+0xd5bc>
   2d644:	ldr	r3, [pc, #120]	; 2d6c4 <luaL_where@@Base+0xd5c0>
   2d648:	tst	r2, #1
   2d64c:	push	{r4, r5, r6, r7, r8, lr}
   2d650:	mov	r4, r1
   2d654:	movne	r1, ip
   2d658:	moveq	r1, r3
   2d65c:	mov	r5, r0
   2d660:	bl	2b4c4 <luaL_where@@Base+0xb3c0>
   2d664:	ldr	r3, [r5, #80]	; 0x50
   2d668:	ldr	r2, [r5, #96]	; 0x60
   2d66c:	ldr	r6, [r3, #16]
   2d670:	mov	r1, r0
   2d674:	ldr	r0, [r4, #56]	; 0x38
   2d678:	add	r3, r2, r1, lsl #2
   2d67c:	str	r0, [r2, r1, lsl #2]
   2d680:	ldr	r2, [r4, #48]	; 0x30
   2d684:	lsl	lr, r1, #3
   2d688:	str	r2, [r3, #4]
   2d68c:	ldr	r2, [r4, #44]	; 0x2c
   2d690:	add	ip, r6, lr
   2d694:	str	r2, [r3, #8]
   2d698:	ldrd	r2, [r4, #24]
   2d69c:	mov	r0, r5
   2d6a0:	strd	r2, [r6, lr]
   2d6a4:	ldrd	r6, [r4, #16]
   2d6a8:	mov	r2, #2
   2d6ac:	strd	r6, [ip, #8]
   2d6b0:	ldrd	r4, [r4, #8]
   2d6b4:	strd	r4, [ip, #16]
   2d6b8:	pop	{r4, r5, r6, r7, r8, lr}
   2d6bc:	b	2d604 <luaL_where@@Base+0xd500>
   2d6c0:	andeq	fp, r6, r4, ror #31
   2d6c4:	ldrdeq	fp, [r6], -r4
   2d6c8:	push	{r4, lr}
   2d6cc:	mov	r0, r2
   2d6d0:	mov	r4, r2
   2d6d4:	ldr	r2, [r2, #104]	; 0x68
   2d6d8:	mov	r1, #1
   2d6dc:	sub	r2, r2, #2
   2d6e0:	bl	2d390 <luaL_where@@Base+0xd28c>
   2d6e4:	ldr	r1, [r4, #184]	; 0xb8
   2d6e8:	ldr	r2, [r4, #96]	; 0x60
   2d6ec:	ldr	r3, [r4, #108]	; 0x6c
   2d6f0:	add	r1, r1, #1
   2d6f4:	add	r2, r2, #8
   2d6f8:	add	r3, r3, #2
   2d6fc:	str	r1, [r4, #184]	; 0xb8
   2d700:	str	r2, [r4, #96]	; 0x60
   2d704:	str	r3, [r4, #108]	; 0x6c
   2d708:	mov	r0, #0
   2d70c:	pop	{r4, pc}
   2d710:	ldr	r2, [r0, #104]	; 0x68
   2d714:	cmp	r2, #0
   2d718:	bxeq	lr
   2d71c:	push	{r4, r5, r6, lr}
   2d720:	mov	r4, r0
   2d724:	mov	r5, r1
   2d728:	sub	r2, r2, #1
   2d72c:	mov	r1, #0
   2d730:	bl	2d390 <luaL_where@@Base+0xd28c>
   2d734:	ldr	r1, [r4, #184]	; 0xb8
   2d738:	ldr	r2, [r4, #96]	; 0x60
   2d73c:	ldr	r3, [r4, #108]	; 0x6c
   2d740:	add	r1, r1, #1
   2d744:	add	r2, r2, #4
   2d748:	add	r3, r3, #1
   2d74c:	mvn	r0, #0
   2d750:	str	r1, [r4, #184]	; 0xb8
   2d754:	str	r2, [r4, #96]	; 0x60
   2d758:	str	r3, [r4, #108]	; 0x6c
   2d75c:	str	r0, [r5, #4]
   2d760:	pop	{r4, r5, r6, pc}
   2d764:	push	{r4, r5, r6, lr}
   2d768:	mov	r4, r0
   2d76c:	mov	r5, r1
   2d770:	bl	2d390 <luaL_where@@Base+0xd28c>
   2d774:	ldr	r2, [r4, #80]	; 0x50
   2d778:	ldr	r3, [r2, #16]
   2d77c:	ldr	r0, [r3, #-4]
   2d780:	and	r3, r0, #7
   2d784:	cmp	r3, #3
   2d788:	bne	2d800 <luaL_where@@Base+0xd6fc>
   2d78c:	ldr	r3, [r4, #184]	; 0xb8
   2d790:	asr	r0, r0, #3
   2d794:	sub	r3, r3, #1
   2d798:	cmp	r3, #0
   2d79c:	str	r3, [r4, #184]	; 0xb8
   2d7a0:	blt	2d808 <luaL_where@@Base+0xd704>
   2d7a4:	ldr	r2, [r4, #108]	; 0x6c
   2d7a8:	ldr	r3, [r4, #96]	; 0x60
   2d7ac:	sub	r2, r2, r0
   2d7b0:	add	r5, r5, r0
   2d7b4:	sub	r0, r3, r0, lsl #2
   2d7b8:	str	r2, [r4, #108]	; 0x6c
   2d7bc:	str	r0, [r4, #96]	; 0x60
   2d7c0:	ldr	r2, [r4, #104]	; 0x68
   2d7c4:	add	r1, r0, r5, lsl #2
   2d7c8:	add	r2, r2, #1
   2d7cc:	sub	r0, r0, #4
   2d7d0:	lsl	r2, r2, #2
   2d7d4:	bl	12c94 <memmove@plt>
   2d7d8:	ldrd	r2, [r4, #176]	; 0xb0
   2d7dc:	add	r3, r3, #1
   2d7e0:	cmp	r3, r2
   2d7e4:	str	r3, [r4, #180]	; 0xb4
   2d7e8:	pople	{r4, r5, r6, pc}
   2d7ec:	add	r1, r4, #2336	; 0x920
   2d7f0:	add	r1, r1, #12
   2d7f4:	ldr	r0, [r4, #80]	; 0x50
   2d7f8:	mov	r2, #10
   2d7fc:	bl	210d0 <luaL_where@@Base+0xfcc>
   2d800:	ldr	r0, [r4, #96]	; 0x60
   2d804:	b	2d7c0 <luaL_where@@Base+0xd6bc>
   2d808:	add	r1, r4, #2336	; 0x920
   2d80c:	mov	r0, r2
   2d810:	add	r1, r1, #12
   2d814:	mov	r2, #16
   2d818:	bl	210d0 <luaL_where@@Base+0xfcc>
   2d81c:	mov	r0, r2
   2d820:	push	{r4, lr}
   2d824:	mov	r2, #1
   2d828:	mov	r1, #0
   2d82c:	bl	2d764 <luaL_where@@Base+0xd660>
   2d830:	mov	r0, #0
   2d834:	pop	{r4, pc}
   2d838:	ldr	r3, [r0, #96]	; 0x60
   2d83c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2d840:	sub	sp, sp, #68	; 0x44
   2d844:	ldr	r5, [r3]
   2d848:	and	r2, r5, #520093696	; 0x1f000000
   2d84c:	cmp	r2, #184549376	; 0xb000000
   2d850:	beq	2d85c <luaL_where@@Base+0xd758>
   2d854:	add	sp, sp, #68	; 0x44
   2d858:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2d85c:	ldr	r6, [r3, #4]
   2d860:	mov	r4, r0
   2d864:	and	r3, r6, #520093696	; 0x1f000000
   2d868:	cmp	r3, #184549376	; 0xb000000
   2d86c:	beq	2d900 <luaL_where@@Base+0xd7fc>
   2d870:	adds	r6, r6, #0
   2d874:	movne	r6, #1
   2d878:	cmp	r3, #0
   2d87c:	movne	r6, #0
   2d880:	cmp	r6, #0
   2d884:	beq	2d854 <luaL_where@@Base+0xd750>
   2d888:	ldr	r3, [r1]
   2d88c:	add	r1, sp, #64	; 0x40
   2d890:	mov	r2, #17
   2d894:	ldrd	r6, [r3]
   2d898:	str	r5, [sp, #40]	; 0x28
   2d89c:	strd	r6, [r1, #-64]!	; 0xffffffc0
   2d8a0:	bl	2d058 <luaL_where@@Base+0xcf54>
   2d8a4:	ldr	r2, [pc, #200]	; 2d974 <luaL_where@@Base+0xd870>
   2d8a8:	mov	r3, #5
   2d8ac:	strh	r3, [r4, #122]	; 0x7a
   2d8b0:	strh	r2, [r4, #124]	; 0x7c
   2d8b4:	strh	r5, [r4, #120]	; 0x78
   2d8b8:	mov	r0, r4
   2d8bc:	bl	27498 <luaL_where@@Base+0x7394>
   2d8c0:	mov	r1, #11
   2d8c4:	mov	r6, r0
   2d8c8:	mov	r0, r4
   2d8cc:	bl	2bb4c <luaL_where@@Base+0xba48>
   2d8d0:	ldr	r3, [pc, #160]	; 2d978 <luaL_where@@Base+0xd874>
   2d8d4:	strh	r6, [r4, #120]	; 0x78
   2d8d8:	strh	r3, [r4, #124]	; 0x7c
   2d8dc:	strh	r0, [r4, #122]	; 0x7a
   2d8e0:	mov	r0, r4
   2d8e4:	bl	27498 <luaL_where@@Base+0x7394>
   2d8e8:	ldr	r2, [r4, #96]	; 0x60
   2d8ec:	mov	r3, #1
   2d8f0:	str	r5, [r2]
   2d8f4:	strb	r3, [r4, #113]	; 0x71
   2d8f8:	add	sp, sp, #68	; 0x44
   2d8fc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2d900:	ldr	r3, [r1]
   2d904:	add	r1, sp, #64	; 0x40
   2d908:	mov	r2, #17
   2d90c:	ldrd	r8, [r3]
   2d910:	str	r5, [sp, #40]	; 0x28
   2d914:	uxth	r7, r5
   2d918:	strd	r8, [r1, #-64]!	; 0xffffffc0
   2d91c:	bl	2d058 <luaL_where@@Base+0xcf54>
   2d920:	ldr	r2, [pc, #76]	; 2d974 <luaL_where@@Base+0xd870>
   2d924:	mov	r3, #5
   2d928:	strh	r2, [r4, #124]	; 0x7c
   2d92c:	strh	r3, [r4, #122]	; 0x7a
   2d930:	strh	r7, [r4, #120]	; 0x78
   2d934:	mov	r0, r4
   2d938:	bl	27498 <luaL_where@@Base+0x7394>
   2d93c:	ldr	r3, [pc, #52]	; 2d978 <luaL_where@@Base+0xd874>
   2d940:	strh	r6, [r4, #122]	; 0x7a
   2d944:	strh	r3, [r4, #124]	; 0x7c
   2d948:	strh	r0, [r4, #120]	; 0x78
   2d94c:	mov	r0, r4
   2d950:	bl	27498 <luaL_where@@Base+0x7394>
   2d954:	ldr	r2, [pc, #32]	; 2d97c <luaL_where@@Base+0xd878>
   2d958:	mov	r3, #0
   2d95c:	strh	r7, [r4, #120]	; 0x78
   2d960:	strh	r2, [r4, #124]	; 0x7c
   2d964:	strh	r3, [r4, #122]	; 0x7a
   2d968:	mov	r0, r4
   2d96c:	bl	27498 <luaL_where@@Base+0x7394>
   2d970:	b	2d8e8 <luaL_where@@Base+0xd7e4>
   2d974:	andeq	r3, r0, r5, lsl #30
   2d978:	andeq	r4, r0, fp, lsl #24
   2d97c:	andeq	r5, r0, fp, lsl #14
   2d980:	ldr	r2, [r0, #96]	; 0x60
   2d984:	ldr	ip, [r2]
   2d988:	cmp	ip, #0
   2d98c:	bxeq	lr
   2d990:	ldr	r3, [r1]
   2d994:	push	{r4, r6, r7, lr}
   2d998:	sub	sp, sp, #64	; 0x40
   2d99c:	ldrd	r6, [r3]
   2d9a0:	add	r1, sp, #64	; 0x40
   2d9a4:	mov	r2, #17
   2d9a8:	strd	r6, [r1, #-64]!	; 0xffffffc0
   2d9ac:	mov	r4, r0
   2d9b0:	str	ip, [sp, #40]	; 0x28
   2d9b4:	bl	2d058 <luaL_where@@Base+0xcf54>
   2d9b8:	ldr	r3, [r4, #96]	; 0x60
   2d9bc:	cmp	r0, #0
   2d9c0:	ldrne	r2, [sp, #56]	; 0x38
   2d9c4:	ldreq	r2, [sp, #52]	; 0x34
   2d9c8:	str	r2, [r3]
   2d9cc:	add	sp, sp, #64	; 0x40
   2d9d0:	pop	{r4, r6, r7, pc}
   2d9d4:	ldr	ip, [pc, #240]	; 2dacc <luaL_where@@Base+0xd9c8>
   2d9d8:	ldr	r3, [pc, #240]	; 2dad0 <luaL_where@@Base+0xd9cc>
   2d9dc:	cmp	r2, #8
   2d9e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d9e4:	mov	r4, r1
   2d9e8:	sub	sp, sp, #12
   2d9ec:	movne	r1, r3
   2d9f0:	moveq	r1, ip
   2d9f4:	mov	r5, r0
   2d9f8:	mov	r7, r2
   2d9fc:	bl	2b4c4 <luaL_where@@Base+0xb3c0>
   2da00:	ldr	r3, [r5, #96]	; 0x60
   2da04:	ldr	r1, [r5, #80]	; 0x50
   2da08:	ldr	r2, [r4, #40]	; 0x28
   2da0c:	str	r3, [sp, #4]
   2da10:	ldr	r9, [r1, #16]
   2da14:	add	r3, r3, r0, lsl #2
   2da18:	lsl	r8, r0, #3
   2da1c:	str	r2, [r3, #4]
   2da20:	ldr	r2, [r4, #44]	; 0x2c
   2da24:	mov	r6, r0
   2da28:	str	r2, [r3, #8]
   2da2c:	ldrd	r0, [r4]
   2da30:	add	r3, r9, r8
   2da34:	mov	r2, r7
   2da38:	strd	r0, [r3, #8]
   2da3c:	ldrd	sl, [r4, #8]
   2da40:	mov	r1, r4
   2da44:	mov	r0, r5
   2da48:	strd	sl, [r3, #16]
   2da4c:	bl	2d058 <luaL_where@@Base+0xcf54>
   2da50:	cmp	r0, #0
   2da54:	bne	2da88 <luaL_where@@Base+0xd984>
   2da58:	cmp	r7, #16
   2da5c:	beq	2dab8 <luaL_where@@Base+0xd9b4>
   2da60:	ldrd	r0, [r4, #8]
   2da64:	ldr	r3, [r4, #44]	; 0x2c
   2da68:	mov	r2, r7
   2da6c:	strd	r0, [r4]
   2da70:	str	r3, [r4, #40]	; 0x28
   2da74:	mov	r1, r4
   2da78:	mov	r0, r5
   2da7c:	bl	2d058 <luaL_where@@Base+0xcf54>
   2da80:	cmp	r0, #0
   2da84:	beq	2dab8 <luaL_where@@Base+0xd9b4>
   2da88:	ldr	r2, [sp, #4]
   2da8c:	ldr	r3, [r4, #56]	; 0x38
   2da90:	mov	r0, r5
   2da94:	str	r3, [r2, r6, lsl #2]
   2da98:	ldrd	r4, [r4, #24]
   2da9c:	mov	r1, r6
   2daa0:	mov	r2, #2
   2daa4:	strd	r4, [r9, r8]
   2daa8:	bl	2d604 <luaL_where@@Base+0xd500>
   2daac:	mov	r0, #0
   2dab0:	add	sp, sp, #12
   2dab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dab8:	add	r1, r5, #2336	; 0x920
   2dabc:	add	r1, r1, #12
   2dac0:	ldr	r0, [r5, #80]	; 0x50
   2dac4:	mov	r2, #18
   2dac8:	bl	210d0 <luaL_where@@Base+0xfcc>
   2dacc:	andeq	fp, r6, ip, asr #27
   2dad0:	andeq	fp, r6, r0, asr #31
   2dad4:	ldr	r3, [r0, #96]	; 0x60
   2dad8:	cmp	r2, r1
   2dadc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dae0:	mov	r4, r0
   2dae4:	sub	sp, sp, #108	; 0x6c
   2dae8:	mov	r9, r1
   2daec:	mov	r7, r2
   2daf0:	add	r8, r3, r2, lsl #2
   2daf4:	bcc	2db3c <luaL_where@@Base+0xda38>
   2daf8:	lsl	r6, r1, #2
   2dafc:	mov	r5, r1
   2db00:	b	2db14 <luaL_where@@Base+0xda10>
   2db04:	add	r5, r5, #1
   2db08:	cmp	r7, r5
   2db0c:	bcc	2db3c <luaL_where@@Base+0xda38>
   2db10:	ldr	r3, [r4, #96]	; 0x60
   2db14:	ldr	r3, [r3, r6]
   2db18:	add	r6, r6, #4
   2db1c:	cmp	r3, #0
   2db20:	bne	2db04 <luaL_where@@Base+0xda00>
   2db24:	mov	r1, r5
   2db28:	mov	r0, r4
   2db2c:	add	r5, r5, #1
   2db30:	bl	25b34 <luaL_where@@Base+0x5a30>
   2db34:	cmp	r7, r5
   2db38:	bcs	2db10 <luaL_where@@Base+0xda0c>
   2db3c:	ldr	r2, [r8]
   2db40:	lsr	r3, r2, #24
   2db44:	and	r1, r3, #31
   2db48:	sub	r1, r1, #14
   2db4c:	cmp	r1, #5
   2db50:	bls	2dc44 <luaL_where@@Base+0xdb40>
   2db54:	and	r1, r2, #520093696	; 0x1f000000
   2db58:	cmp	r1, #67108864	; 0x4000000
   2db5c:	beq	2dc44 <luaL_where@@Base+0xdb40>
   2db60:	ldr	r1, [r4, #80]	; 0x50
   2db64:	lsl	r3, r7, #3
   2db68:	sub	r2, r7, #1
   2db6c:	ldr	ip, [r1, #16]
   2db70:	str	r2, [r4, #104]	; 0x68
   2db74:	ldrd	r2, [r3, ip]
   2db78:	strd	r2, [sp, #48]	; 0x30
   2db7c:	sub	r7, r7, #-536870911	; 0xe0000001
   2db80:	mov	r5, sp
   2db84:	lsl	r7, r7, #3
   2db88:	ldrd	r2, [ip, r7]
   2db8c:	add	ip, ip, r7
   2db90:	add	r6, ip, #32
   2db94:	strd	r2, [sp, #40]	; 0x28
   2db98:	ldr	r3, [r8, #-4]
   2db9c:	str	r3, [sp, #80]	; 0x50
   2dba0:	ldr	r3, [r8]
   2dba4:	str	r3, [sp, #84]	; 0x54
   2dba8:	ldr	r0, [ip]
   2dbac:	ldr	r1, [ip, #4]
   2dbb0:	ldr	r2, [ip, #8]
   2dbb4:	ldr	r3, [ip, #12]
   2dbb8:	mov	lr, r5
   2dbbc:	add	ip, ip, #16
   2dbc0:	cmp	ip, r6
   2dbc4:	stmia	lr!, {r0, r1, r2, r3}
   2dbc8:	mov	r5, lr
   2dbcc:	bne	2dba8 <luaL_where@@Base+0xdaa4>
   2dbd0:	ldr	r0, [ip]
   2dbd4:	ldr	r1, [ip, #4]
   2dbd8:	mov	r2, #8
   2dbdc:	stmia	r5!, {r0, r1}
   2dbe0:	mov	r0, r4
   2dbe4:	add	r1, sp, #40	; 0x28
   2dbe8:	bl	2d9d4 <luaL_where@@Base+0xd8d0>
   2dbec:	ldr	r3, [r4, #80]	; 0x50
   2dbf0:	mov	ip, sp
   2dbf4:	add	r4, sp, #32
   2dbf8:	ldr	r3, [r3, #16]
   2dbfc:	add	r7, r3, r7
   2dc00:	mov	lr, ip
   2dc04:	add	r7, r7, #16
   2dc08:	ldm	lr!, {r0, r1, r2, r3}
   2dc0c:	add	ip, ip, #16
   2dc10:	cmp	lr, r4
   2dc14:	str	r0, [r7, #-16]
   2dc18:	str	r1, [r7, #-12]
   2dc1c:	str	r2, [r7, #-8]
   2dc20:	str	r3, [r7, #-4]
   2dc24:	bne	2dc00 <luaL_where@@Base+0xdafc>
   2dc28:	ldm	ip!, {r0, r1}
   2dc2c:	mov	r3, #0
   2dc30:	str	r0, [r7]
   2dc34:	str	r1, [r7, #4]
   2dc38:	mov	r0, r3
   2dc3c:	add	sp, sp, #108	; 0x6c
   2dc40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dc44:	ldr	r0, [r8, #-4]
   2dc48:	lsr	r1, r0, #24
   2dc4c:	and	r1, r1, #31
   2dc50:	sub	r1, r1, #14
   2dc54:	cmp	r1, #5
   2dc58:	bhi	2dd90 <luaL_where@@Base+0xdc8c>
   2dc5c:	ldr	r6, [r4, #96]	; 0x60
   2dc60:	add	r6, r6, r9, lsl #2
   2dc64:	cmp	r8, r6
   2dc68:	bcc	2dda0 <luaL_where@@Base+0xdc9c>
   2dc6c:	ldr	r7, [pc, #308]	; 2dda8 <luaL_where@@Base+0xdca4>
   2dc70:	mov	r5, r8
   2dc74:	b	2dcac <luaL_where@@Base+0xdba8>
   2dc78:	sub	r3, r3, #234881024	; 0xe000000
   2dc7c:	clz	r3, r3
   2dc80:	lsr	r3, r3, #5
   2dc84:	strh	r3, [r4, #122]	; 0x7a
   2dc88:	strh	r7, [r4, #124]	; 0x7c
   2dc8c:	strh	r2, [r4, #120]	; 0x78
   2dc90:	bl	27498 <luaL_where@@Base+0x7394>
   2dc94:	str	r0, [r5]
   2dc98:	sub	r5, r5, #4
   2dc9c:	cmp	r6, r5
   2dca0:	bhi	2dccc <luaL_where@@Base+0xdbc8>
   2dca4:	ldr	r2, [r5]
   2dca8:	lsr	r3, r2, #24
   2dcac:	and	r3, r3, #31
   2dcb0:	sub	r3, r3, #14
   2dcb4:	cmp	r3, #5
   2dcb8:	mov	r0, r4
   2dcbc:	and	r3, r2, #520093696	; 0x1f000000
   2dcc0:	bls	2dc78 <luaL_where@@Base+0xdb74>
   2dcc4:	cmp	r3, #67108864	; 0x4000000
   2dcc8:	beq	2dc98 <luaL_where@@Base+0xdb94>
   2dccc:	sub	r2, r4, #304	; 0x130
   2dcd0:	mov	r1, #25
   2dcd4:	mov	r0, r4
   2dcd8:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2dcdc:	ldr	r2, [pc, #200]	; 2ddac <luaL_where@@Base+0xdca8>
   2dce0:	mov	r3, #0
   2dce4:	strh	r3, [r4, #122]	; 0x7a
   2dce8:	strh	r2, [r4, #124]	; 0x7c
   2dcec:	add	sl, r5, #4
   2dcf0:	ldr	r9, [pc, #184]	; 2ddb0 <luaL_where@@Base+0xdcac>
   2dcf4:	mov	r7, sl
   2dcf8:	strh	r0, [r4, #120]	; 0x78
   2dcfc:	mov	r0, r4
   2dd00:	bl	27498 <luaL_where@@Base+0x7394>
   2dd04:	mov	fp, r0
   2dd08:	mov	r3, r0
   2dd0c:	ldr	r2, [r7], #4
   2dd10:	mov	r0, r4
   2dd14:	strh	r3, [r4, #120]	; 0x78
   2dd18:	strh	r2, [r4, #122]	; 0x7a
   2dd1c:	strh	r9, [r4, #124]	; 0x7c
   2dd20:	bl	27498 <luaL_where@@Base+0x7394>
   2dd24:	cmp	r8, r7
   2dd28:	mov	r3, r0
   2dd2c:	bcs	2dd0c <luaL_where@@Base+0xdc08>
   2dd30:	ldr	r2, [pc, #124]	; 2ddb4 <luaL_where@@Base+0xdcb0>
   2dd34:	strh	r0, [r4, #120]	; 0x78
   2dd38:	strh	fp, [r4, #122]	; 0x7a
   2dd3c:	strh	r2, [r4, #124]	; 0x7c
   2dd40:	mov	r0, r4
   2dd44:	bl	27498 <luaL_where@@Base+0x7394>
   2dd48:	ldr	r7, [r4, #96]	; 0x60
   2dd4c:	cmp	r6, sl
   2dd50:	sub	r7, sl, r7
   2dd54:	asr	r7, r7, #2
   2dd58:	streq	r7, [r4, #104]	; 0x68
   2dd5c:	mov	r3, r0
   2dd60:	beq	2dc38 <luaL_where@@Base+0xdb34>
   2dd64:	ldr	r0, [r4, #80]	; 0x50
   2dd68:	sub	r2, r7, #1
   2dd6c:	str	r2, [r4, #104]	; 0x68
   2dd70:	mvn	r1, #4
   2dd74:	sub	r2, r4, #288	; 0x120
   2dd78:	str	r3, [r5, #4]
   2dd7c:	mov	r8, sl
   2dd80:	ldr	ip, [r0, #16]
   2dd84:	str	r2, [sp, #48]	; 0x30
   2dd88:	str	r1, [sp, #52]	; 0x34
   2dd8c:	b	2db7c <luaL_where@@Base+0xda78>
   2dd90:	and	r0, r0, #520093696	; 0x1f000000
   2dd94:	cmp	r0, #67108864	; 0x4000000
   2dd98:	bne	2db60 <luaL_where@@Base+0xda5c>
   2dd9c:	b	2dc5c <luaL_where@@Base+0xdb58>
   2dda0:	mov	r5, r8
   2dda4:	b	2dccc <luaL_where@@Base+0xdbc8>
   2dda8:	andeq	r5, r0, r4, lsl #24
   2ddac:	andeq	r5, r0, r5, lsl #8
   2ddb0:	andeq	r5, r0, r5, lsl #10
   2ddb4:	andeq	r5, r0, r4, lsl #12
   2ddb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ddbc:	mov	r5, r1
   2ddc0:	ldr	r1, [r1]
   2ddc4:	ldr	ip, [r0, #96]	; 0x60
   2ddc8:	sub	sp, sp, #64	; 0x40
   2ddcc:	ldrd	r6, [r1]
   2ddd0:	add	r1, sp, #64	; 0x40
   2ddd4:	ldr	ip, [ip]
   2ddd8:	mov	sl, r2
   2dddc:	strd	r6, [r1, #-64]!	; 0xffffffc0
   2dde0:	mov	r2, r3
   2dde4:	mov	r4, r0
   2dde8:	str	ip, [sp, #40]	; 0x28
   2ddec:	bl	2d058 <luaL_where@@Base+0xcf54>
   2ddf0:	cmp	r0, #0
   2ddf4:	bne	2de00 <luaL_where@@Base+0xdcfc>
   2ddf8:	add	sp, sp, #64	; 0x40
   2ddfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2de00:	ldr	r2, [r4, #96]	; 0x60
   2de04:	ldr	r1, [r5]
   2de08:	ldr	r0, [r4, #80]	; 0x50
   2de0c:	ldr	r3, [r2]
   2de10:	str	r3, [r2, #4]
   2de14:	ldr	ip, [sp, #56]	; 0x38
   2de18:	ldr	r3, [pc, #72]	; 2de68 <luaL_where@@Base+0xdd64>
   2de1c:	str	ip, [r2]
   2de20:	ldrd	r8, [r1]
   2de24:	mov	r2, r4
   2de28:	strd	r8, [r1, #8]
   2de2c:	ldrd	r6, [sp, #24]
   2de30:	strd	r6, [r1]
   2de34:	mov	r1, #0
   2de38:	bl	6bd28 <luaL_openlibs@@Base+0x2568>
   2de3c:	ldr	r3, [r5]
   2de40:	ldr	r2, [r4, #80]	; 0x50
   2de44:	strd	r8, [r3]
   2de48:	cmp	r0, #0
   2de4c:	mvneq	r3, #0
   2de50:	moveq	r0, #1
   2de54:	streq	r3, [sl]
   2de58:	beq	2ddf8 <luaL_where@@Base+0xdcf4>
   2de5c:	mov	r1, r0
   2de60:	mov	r0, r2
   2de64:	bl	20ff0 <luaL_where@@Base+0xeec>
   2de68:	andeq	sp, r2, ip, lsl r8
   2de6c:	push	{r4, r5, r6, r7, r8, lr}
   2de70:	mov	r7, r1
   2de74:	ldr	r6, [r0, #96]	; 0x60
   2de78:	ldr	r5, [r6]
   2de7c:	and	ip, r5, #520093696	; 0x1f000000
   2de80:	cmp	ip, #167772160	; 0xa000000
   2de84:	beq	2ded0 <luaL_where@@Base+0xddcc>
   2de88:	cmp	ip, #184549376	; 0xb000000
   2de8c:	popne	{r4, r5, r6, r7, r8, pc}
   2de90:	ldr	r3, [r0, #88]	; 0x58
   2de94:	mov	r2, #8
   2de98:	mov	r4, r0
   2de9c:	ldr	r1, [r3, #24]
   2dea0:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2dea4:	ldr	r3, [r4, #96]	; 0x60
   2dea8:	str	r0, [r6]
   2deac:	str	r5, [r3, #4]
   2deb0:	ldr	r2, [r7, #8]
   2deb4:	cmp	r2, #0
   2deb8:	ldreq	r0, [pc, #56]	; 2def8 <luaL_where@@Base+0xddf4>
   2debc:	bne	2dee4 <luaL_where@@Base+0xdde0>
   2dec0:	mov	r2, #3
   2dec4:	str	r0, [r3, #8]
   2dec8:	str	r2, [r7, #4]
   2decc:	pop	{r4, r5, r6, r7, r8, pc}
   2ded0:	ldr	r3, [r1, #8]
   2ded4:	add	r2, r1, #4
   2ded8:	add	r3, r3, #20
   2dedc:	pop	{r4, r5, r6, r7, r8, lr}
   2dee0:	b	2ddb8 <luaL_where@@Base+0xdcb4>
   2dee4:	mov	r1, #0
   2dee8:	mov	r0, r4
   2deec:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2def0:	ldr	r3, [r4, #96]	; 0x60
   2def4:	b	2dec0 <luaL_where@@Base+0xddbc>
   2def8:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   2defc:	ldr	ip, [r0, #96]	; 0x60
   2df00:	push	{r4, r5, r6, r7, lr}
   2df04:	sub	sp, sp, #68	; 0x44
   2df08:	ldr	r2, [ip]
   2df0c:	str	r2, [sp, #40]	; 0x28
   2df10:	ldr	lr, [ip, #4]
   2df14:	and	r2, r2, #520093696	; 0x1f000000
   2df18:	str	lr, [sp, #44]	; 0x2c
   2df1c:	ldr	ip, [ip, #8]
   2df20:	adds	r3, ip, #0
   2df24:	movne	r3, #1
   2df28:	cmp	lr, #0
   2df2c:	moveq	r3, #0
   2df30:	cmp	r2, #184549376	; 0xb000000
   2df34:	movne	r3, #0
   2df38:	andeq	r3, r3, #1
   2df3c:	cmp	r3, #0
   2df40:	str	ip, [sp, #48]	; 0x30
   2df44:	bne	2df50 <luaL_where@@Base+0xde4c>
   2df48:	add	sp, sp, #68	; 0x44
   2df4c:	pop	{r4, r5, r6, r7, pc}
   2df50:	ldr	r3, [r1]
   2df54:	mov	r2, #0
   2df58:	str	r2, [sp, #60]	; 0x3c
   2df5c:	ldrd	r6, [r3, #8]
   2df60:	ldrd	r4, [r3, #16]
   2df64:	ldr	r2, [r3]
   2df68:	mov	r1, sp
   2df6c:	mvn	r3, #11
   2df70:	strd	r6, [sp, #8]
   2df74:	str	r2, [sp]
   2df78:	strd	r4, [sp, #16]
   2df7c:	str	r3, [sp, #4]
   2df80:	bl	2c388 <luaL_where@@Base+0xc284>
   2df84:	b	2df48 <luaL_where@@Base+0xde44>
   2df88:	push	{r4, r6, r7, lr}
   2df8c:	sub	sp, sp, #64	; 0x40
   2df90:	ldr	r4, [r0, #96]	; 0x60
   2df94:	ldr	r3, [r4]
   2df98:	str	r3, [sp, #40]	; 0x28
   2df9c:	ldr	r2, [r4, #4]
   2dfa0:	and	ip, r3, #520093696	; 0x1f000000
   2dfa4:	cmp	r2, #0
   2dfa8:	sub	r3, ip, #184549376	; 0xb000000
   2dfac:	clz	r3, r3
   2dfb0:	lsr	r3, r3, #5
   2dfb4:	moveq	r3, #0
   2dfb8:	cmp	r3, #0
   2dfbc:	str	r2, [sp, #44]	; 0x2c
   2dfc0:	bne	2dfcc <luaL_where@@Base+0xdec8>
   2dfc4:	add	sp, sp, #64	; 0x40
   2dfc8:	pop	{r4, r6, r7, pc}
   2dfcc:	ldr	r2, [r1]
   2dfd0:	mov	r3, #0
   2dfd4:	str	r3, [sp, #48]	; 0x30
   2dfd8:	ldrd	r6, [r2, #8]
   2dfdc:	ldr	r2, [r2]
   2dfe0:	mov	r1, sp
   2dfe4:	str	r3, [sp, #60]	; 0x3c
   2dfe8:	mvn	r3, #11
   2dfec:	str	r2, [sp]
   2dff0:	strd	r6, [sp, #8]
   2dff4:	str	r3, [sp, #4]
   2dff8:	bl	2c388 <luaL_where@@Base+0xc284>
   2dffc:	str	r0, [r4]
   2e000:	add	sp, sp, #64	; 0x40
   2e004:	pop	{r4, r6, r7, pc}
   2e008:	ldr	r2, [r0, #96]	; 0x60
   2e00c:	push	{r4, r5, r6, lr}
   2e010:	sub	sp, sp, #64	; 0x40
   2e014:	ldr	r3, [r2]
   2e018:	and	ip, r3, #520093696	; 0x1f000000
   2e01c:	cmp	ip, #184549376	; 0xb000000
   2e020:	str	r3, [sp, #40]	; 0x28
   2e024:	beq	2e030 <luaL_where@@Base+0xdf2c>
   2e028:	add	sp, sp, #64	; 0x40
   2e02c:	pop	{r4, r5, r6, pc}
   2e030:	mov	r4, r0
   2e034:	ldr	r0, [r1]
   2e038:	mov	r5, r1
   2e03c:	ldr	r3, [r0, #12]
   2e040:	cmn	r3, #14
   2e044:	bhi	2e0f8 <luaL_where@@Base+0xdff4>
   2e048:	vldrne	d7, [r0, #8]
   2e04c:	ldreq	r3, [r0, #8]
   2e050:	mvn	r1, #13
   2e054:	str	r1, [sp, #12]
   2e058:	vcvtne.s32.f64	s15, d7
   2e05c:	mvn	r1, #11
   2e060:	vmovne	r3, s15
   2e064:	add	r3, r3, #1
   2e068:	str	r3, [sp, #8]
   2e06c:	mov	r3, #0
   2e070:	ldr	ip, [r0]
   2e074:	str	r3, [sp, #48]	; 0x30
   2e078:	str	r3, [sp, #60]	; 0x3c
   2e07c:	str	r1, [sp, #4]
   2e080:	mov	r0, r4
   2e084:	ldr	r1, [r2, #4]
   2e088:	str	ip, [sp]
   2e08c:	bl	281cc <luaL_where@@Base+0x80c8>
   2e090:	mov	r1, #1
   2e094:	mov	r6, r0
   2e098:	mov	r0, r4
   2e09c:	str	r6, [sp, #44]	; 0x2c
   2e0a0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2e0a4:	ldr	r3, [pc, #96]	; 2e10c <luaL_where@@Base+0xe008>
   2e0a8:	strh	r6, [r4, #120]	; 0x78
   2e0ac:	strh	r3, [r4, #124]	; 0x7c
   2e0b0:	strh	r0, [r4, #122]	; 0x7a
   2e0b4:	mov	r0, r4
   2e0b8:	bl	27498 <luaL_where@@Base+0x7394>
   2e0bc:	ldr	r6, [r4, #96]	; 0x60
   2e0c0:	mov	r1, sp
   2e0c4:	str	r0, [sp, #44]	; 0x2c
   2e0c8:	str	r0, [r6]
   2e0cc:	mov	r0, r4
   2e0d0:	bl	2c388 <luaL_where@@Base+0xc284>
   2e0d4:	ldr	r3, [r4, #96]	; 0x60
   2e0d8:	str	r0, [r6, #4]
   2e0dc:	ldr	r3, [r3, #4]
   2e0e0:	tst	r3, #520093696	; 0x1f000000
   2e0e4:	moveq	r3, #0
   2e0e8:	movne	r3, #2
   2e0ec:	str	r3, [r5, #4]
   2e0f0:	add	sp, sp, #64	; 0x40
   2e0f4:	pop	{r4, r5, r6, pc}
   2e0f8:	add	r1, r4, #2336	; 0x920
   2e0fc:	add	r1, r1, #12
   2e100:	ldr	r0, [r4, #80]	; 0x50
   2e104:	mov	r2, #11
   2e108:	bl	210d0 <luaL_where@@Base+0xfcc>
   2e10c:	andeq	r2, r0, r3, lsl r9
   2e110:	ldr	r2, [r0, #260]	; 0x104
   2e114:	push	{r4, r5, r6, lr}
   2e118:	mov	r4, r0
   2e11c:	lsl	r5, r2, #1
   2e120:	cmp	r5, r1
   2e124:	bhi	2e134 <luaL_where@@Base+0xe030>
   2e128:	cmp	r1, #64	; 0x40
   2e12c:	movcs	r5, r1
   2e130:	movcc	r5, #64	; 0x40
   2e134:	lsl	r2, r2, #2
   2e138:	lsl	r3, r5, #2
   2e13c:	ldr	r1, [r4, #256]	; 0x100
   2e140:	ldr	r0, [r4, #80]	; 0x50
   2e144:	bl	205b0 <luaL_where@@Base+0x4ac>
   2e148:	str	r5, [r4, #260]	; 0x104
   2e14c:	str	r0, [r4, #256]	; 0x100
   2e150:	str	r0, [r4, #32]
   2e154:	pop	{r4, r5, r6, pc}
   2e158:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e15c:	mov	r4, r0
   2e160:	ldrh	r5, [r0, #24]
   2e164:	sub	sp, sp, #12
   2e168:	ldrh	fp, [r0, #26]
   2e16c:	cmp	r5, #0
   2e170:	beq	2e18c <luaL_where@@Base+0xe088>
   2e174:	ldr	r3, [r0, #28]
   2e178:	ldr	r2, [r0, #8]
   2e17c:	add	r3, r3, r5, lsl #3
   2e180:	ldrh	r3, [r3, #-6]
   2e184:	cmp	r3, r2
   2e188:	beq	2e394 <luaL_where@@Base+0xe290>
   2e18c:	ldrb	r3, [r4, #112]	; 0x70
   2e190:	cmp	r3, #0
   2e194:	bne	2e388 <luaL_where@@Base+0xe284>
   2e198:	ldr	r3, [r4, #248]	; 0xf8
   2e19c:	add	r7, r5, #1
   2e1a0:	cmp	r7, r3
   2e1a4:	bhi	2e430 <luaL_where@@Base+0xe32c>
   2e1a8:	ldr	r6, [r4, #28]
   2e1ac:	strh	r7, [r4, #24]
   2e1b0:	add	r6, r6, r5, lsl #3
   2e1b4:	ldr	r3, [r4, #104]	; 0x68
   2e1b8:	ldr	r5, [r4, #108]	; 0x6c
   2e1bc:	ldr	r1, [r4, #184]	; 0xb8
   2e1c0:	add	r5, r5, r3
   2e1c4:	add	r1, r5, r1
   2e1c8:	ldr	r3, [r4, #260]	; 0x104
   2e1cc:	add	r1, r1, #1
   2e1d0:	add	r1, r1, fp
   2e1d4:	cmp	r1, r3
   2e1d8:	mov	r3, #0
   2e1dc:	strb	r3, [r4, #112]	; 0x70
   2e1e0:	strb	r3, [r4, #114]	; 0x72
   2e1e4:	bhi	2e408 <luaL_where@@Base+0xe304>
   2e1e8:	add	r3, r4, #308	; 0x134
   2e1ec:	ldr	r0, [r4, #32]
   2e1f0:	ldrh	r3, [r3]
   2e1f4:	cmp	r5, #0
   2e1f8:	add	r0, r0, fp, lsl #2
   2e1fc:	str	r3, [sp, #4]
   2e200:	beq	2e3fc <luaL_where@@Base+0xe2f8>
   2e204:	mov	ip, #0
   2e208:	ldr	r7, [pc, #560]	; 2e440 <luaL_where@@Base+0xe33c>
   2e20c:	mov	r2, ip
   2e210:	add	lr, r4, #484	; 0x1e4
   2e214:	str	r6, [sp]
   2e218:	ldr	r3, [lr, #4]!
   2e21c:	and	r1, r3, r7
   2e220:	uxth	r3, r3
   2e224:	cmp	r3, #0
   2e228:	add	r1, r1, r2, lsl #24
   2e22c:	beq	2e258 <luaL_where@@Base+0xe154>
   2e230:	tst	r1, #196608	; 0x30000
   2e234:	lsl	r8, r3, #3
   2e238:	bne	2e250 <luaL_where@@Base+0xe14c>
   2e23c:	ldr	r9, [r4, #16]
   2e240:	add	r6, r9, r8
   2e244:	ldrb	sl, [r6, #5]
   2e248:	cmp	sl, #71	; 0x47
   2e24c:	beq	2e3b4 <luaL_where@@Base+0xe2b0>
   2e250:	str	r1, [r0, ip, lsl #2]
   2e254:	add	ip, ip, #1
   2e258:	add	r2, r2, #1
   2e25c:	cmp	r5, r2
   2e260:	bne	2e218 <luaL_where@@Base+0xe114>
   2e264:	ldr	r6, [sp]
   2e268:	add	r0, r0, ip, lsl #2
   2e26c:	uxtb	r3, ip
   2e270:	strb	r3, [r6, #6]
   2e274:	ldr	r2, [r4, #80]	; 0x50
   2e278:	ldr	lr, [r4, #108]	; 0x6c
   2e27c:	ldr	r3, [r2, #16]
   2e280:	sub	r7, r3, lr, lsl #3
   2e284:	ldr	r1, [r3, #-8]
   2e288:	sub	r3, r3, #8
   2e28c:	ldrb	lr, [r1, #6]
   2e290:	cmp	lr, #0
   2e294:	ldreq	r2, [r1, #16]
   2e298:	ldrne	lr, [r2, #20]
   2e29c:	ldrbeq	lr, [r2, #-57]	; 0xffffffc7
   2e2a0:	ldr	r2, [r4, #84]	; 0x54
   2e2a4:	str	r2, [r0]
   2e2a8:	addeq	lr, r3, lr, lsl #3
   2e2ac:	cmp	r3, r7
   2e2b0:	mov	r2, #1
   2e2b4:	bhi	2e2f4 <luaL_where@@Base+0xe1f0>
   2e2b8:	b	2e34c <luaL_where@@Base+0xe248>
   2e2bc:	str	r1, [r0, r2, lsl #2]
   2e2c0:	ldr	r1, [r3, #4]
   2e2c4:	mov	r2, r9
   2e2c8:	ldrb	r1, [r1, #-3]
   2e2cc:	add	r1, r1, #1
   2e2d0:	sub	r3, r3, r1, lsl #3
   2e2d4:	ldr	r1, [r3]
   2e2d8:	ldr	r1, [r1, #16]
   2e2dc:	ldrb	r1, [r1, #-57]	; 0xffffffc7
   2e2e0:	add	r1, r3, r1, lsl #3
   2e2e4:	cmp	lr, r1
   2e2e8:	movcc	lr, r1
   2e2ec:	cmp	r7, r3
   2e2f0:	bcs	2e34c <luaL_where@@Base+0xe248>
   2e2f4:	ldr	r1, [r3, #4]
   2e2f8:	add	r8, r0, r2, lsl #2
   2e2fc:	tst	r1, #3
   2e300:	and	sl, r1, #7
   2e304:	add	r9, r2, #1
   2e308:	beq	2e2bc <luaL_where@@Base+0xe1b8>
   2e30c:	cmp	sl, #2
   2e310:	str	r1, [r8]
   2e314:	bne	2e334 <luaL_where@@Base+0xe230>
   2e318:	ldr	r1, [r3, #-4]
   2e31c:	add	r2, r2, #2
   2e320:	str	r1, [r8, #4]
   2e324:	ldr	r1, [r3, #4]
   2e328:	bic	r1, r1, #7
   2e32c:	sub	r3, r3, r1
   2e330:	b	2e2d4 <luaL_where@@Base+0xe1d0>
   2e334:	ldr	r1, [r3, #4]
   2e338:	mov	r2, r9
   2e33c:	bic	r1, r1, #7
   2e340:	sub	r3, r3, r1
   2e344:	cmp	r7, r3
   2e348:	bcc	2e2f4 <luaL_where@@Base+0xe1f0>
   2e34c:	sub	lr, lr, r7
   2e350:	uxth	r3, fp
   2e354:	asr	lr, lr, #3
   2e358:	strb	lr, [r6, #5]
   2e35c:	add	ip, ip, r2
   2e360:	ldr	r1, [r4, #8]
   2e364:	add	ip, r3, ip
   2e368:	mov	r2, #0
   2e36c:	strh	r3, [r6]
   2e370:	strh	r1, [r6, #2]
   2e374:	strb	r5, [r6, #4]
   2e378:	strb	r2, [r6, #7]
   2e37c:	strh	ip, [r4, #26]
   2e380:	add	sp, sp, #12
   2e384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e388:	ldrsb	r3, [r4, #114]	; 0x72
   2e38c:	cmp	r3, #0
   2e390:	blt	2e198 <luaL_where@@Base+0xe094>
   2e394:	cmp	r5, #1
   2e398:	beq	2e414 <luaL_where@@Base+0xe310>
   2e39c:	sub	r5, r5, #1
   2e3a0:	ldr	r3, [r4, #28]
   2e3a4:	lsl	r5, r5, #3
   2e3a8:	add	r6, r3, r5
   2e3ac:	ldrh	fp, [r3, r5]
   2e3b0:	b	2e1b4 <luaL_where@@Base+0xe0b0>
   2e3b4:	ldrh	sl, [r9, r8]
   2e3b8:	ldr	r9, [sp, #4]
   2e3bc:	cmp	r9, r3
   2e3c0:	sub	r8, sl, r2
   2e3c4:	clz	r8, r8
   2e3c8:	lsr	r8, r8, #5
   2e3cc:	movcs	r8, #0
   2e3d0:	cmp	r8, #0
   2e3d4:	beq	2e250 <luaL_where@@Base+0xe14c>
   2e3d8:	ldrh	r3, [r6, #2]
   2e3dc:	tst	r3, #32
   2e3e0:	beq	2e258 <luaL_where@@Base+0xe154>
   2e3e4:	tst	r3, #8
   2e3e8:	and	r8, r3, #17
   2e3ec:	bne	2e250 <luaL_where@@Base+0xe14c>
   2e3f0:	cmp	r8, #1
   2e3f4:	orrne	r1, r1, #262144	; 0x40000
   2e3f8:	b	2e250 <luaL_where@@Base+0xe14c>
   2e3fc:	mov	r3, r5
   2e400:	mov	ip, r5
   2e404:	b	2e270 <luaL_where@@Base+0xe16c>
   2e408:	mov	r0, r4
   2e40c:	bl	2e110 <luaL_where@@Base+0xe00c>
   2e410:	b	2e1e8 <luaL_where@@Base+0xe0e4>
   2e414:	mov	r2, #0
   2e418:	mov	r3, #3072	; 0xc00
   2e41c:	str	r2, [r4, #120]	; 0x78
   2e420:	strh	r3, [r4, #124]	; 0x7c
   2e424:	mov	r0, r4
   2e428:	bl	25258 <luaL_where@@Base+0x5154>
   2e42c:	b	2e198 <luaL_where@@Base+0xe094>
   2e430:	mov	r1, r7
   2e434:	mov	r0, r4
   2e438:	bl	25174 <luaL_where@@Base+0x5070>
   2e43c:	b	2e1a8 <luaL_where@@Base+0xe0a4>
   2e440:	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
   2e444:	push	{r4, lr}
   2e448:	mov	r4, r0
   2e44c:	ldrh	r0, [r0, #64]	; 0x40
   2e450:	mov	r3, #19
   2e454:	strb	r1, [r4, #7]
   2e458:	cmp	r0, r2
   2e45c:	strh	r2, [r4, #66]	; 0x42
   2e460:	str	r3, [r4, #168]	; 0xa8
   2e464:	beq	2e47c <luaL_where@@Base+0xe378>
   2e468:	mov	r0, r4
   2e46c:	bl	2e158 <luaL_where@@Base+0xe054>
   2e470:	mov	r3, #1
   2e474:	strh	r3, [r4, #112]	; 0x70
   2e478:	pop	{r4, pc}
   2e47c:	ldr	r3, [r4, #184]	; 0xb8
   2e480:	ldr	r2, [r4, #188]	; 0xbc
   2e484:	cmn	r3, r2
   2e488:	bne	2e468 <luaL_where@@Base+0xe364>
   2e48c:	ldr	r3, [r4, #100]	; 0x64
   2e490:	tst	r3, #4194304	; 0x400000
   2e494:	bne	2e468 <luaL_where@@Base+0xe364>
   2e498:	ldrh	r3, [r4, #68]	; 0x44
   2e49c:	cmp	r3, #0
   2e4a0:	strhne	r3, [r4, #66]	; 0x42
   2e4a4:	b	2e468 <luaL_where@@Base+0xe364>
   2e4a8:	ldr	ip, [r0, #2304]	; 0x900
   2e4ac:	push	{r4, lr}
   2e4b0:	cmp	ip, #0
   2e4b4:	mov	r3, r0
   2e4b8:	bne	2e570 <luaL_where@@Base+0xe46c>
   2e4bc:	ldr	ip, [r0, #2308]	; 0x904
   2e4c0:	cmp	ip, #0
   2e4c4:	bne	2e570 <luaL_where@@Base+0xe46c>
   2e4c8:	ldr	ip, [r0, #2300]	; 0x8fc
   2e4cc:	cmp	r1, ip
   2e4d0:	beq	2e598 <luaL_where@@Base+0xe494>
   2e4d4:	cmp	r2, #0
   2e4d8:	popeq	{r4, pc}
   2e4dc:	ldrh	ip, [r1, #2]
   2e4e0:	ldr	r0, [pc, #288]	; 2e608 <luaL_where@@Base+0xe504>
   2e4e4:	cmp	ip, r0
   2e4e8:	beq	2e538 <luaL_where@@Base+0xe434>
   2e4ec:	mov	ip, r3
   2e4f0:	mov	r0, #0
   2e4f4:	b	2e508 <luaL_where@@Base+0xe404>
   2e4f8:	add	r0, r0, #1
   2e4fc:	cmp	r0, #64	; 0x40
   2e500:	add	ip, ip, #8
   2e504:	beq	2e5e0 <luaL_where@@Base+0xe4dc>
   2e508:	ldr	lr, [ip, #1632]	; 0x660
   2e50c:	cmp	r1, lr
   2e510:	bne	2e4f8 <luaL_where@@Base+0xe3f4>
   2e514:	add	r0, r3, r0, lsl #3
   2e518:	add	r0, r0, #1632	; 0x660
   2e51c:	ldrh	r1, [r0, #6]
   2e520:	sub	r1, r1, #8
   2e524:	cmp	r1, #1
   2e528:	bhi	2e5e0 <luaL_where@@Base+0xe4dc>
   2e52c:	ldrh	r1, [r0, #4]
   2e530:	cmp	r1, #143	; 0x8f
   2e534:	bls	2e5e0 <luaL_where@@Base+0xe4dc>
   2e538:	cmp	r2, #1
   2e53c:	beq	2e5c0 <luaL_where@@Base+0xe4bc>
   2e540:	ldr	r2, [r3, #244]	; 0xf4
   2e544:	cmp	r2, #0
   2e548:	beq	2e5c0 <luaL_where@@Base+0xe4bc>
   2e54c:	ldr	r1, [r3, #8]
   2e550:	sub	r2, r1, r2
   2e554:	cmp	r2, #24
   2e558:	bls	2e5c0 <luaL_where@@Base+0xe4bc>
   2e55c:	add	r1, r3, #2336	; 0x920
   2e560:	add	r1, r1, #12
   2e564:	ldr	r0, [r3, #80]	; 0x50
   2e568:	mov	r2, #10
   2e56c:	bl	210d0 <luaL_where@@Base+0xfcc>
   2e570:	cmp	r2, #0
   2e574:	popeq	{r4, pc}
   2e578:	ldr	r2, [r3, #176]	; 0xb0
   2e57c:	ldr	r1, [r3, #8]
   2e580:	sub	r2, r2, #1
   2e584:	cmp	r2, #0
   2e588:	str	r2, [r3, #176]	; 0xb0
   2e58c:	str	r1, [r3, #244]	; 0xf4
   2e590:	popge	{r4, pc}
   2e594:	b	2e55c <luaL_where@@Base+0xe458>
   2e598:	ldr	ip, [r0, #184]	; 0xb8
   2e59c:	ldr	lr, [r0, #188]	; 0xbc
   2e5a0:	cmn	ip, lr
   2e5a4:	bne	2e4d4 <luaL_where@@Base+0xe3d0>
   2e5a8:	cmp	r2, #0
   2e5ac:	beq	2e5f4 <luaL_where@@Base+0xe4f0>
   2e5b0:	ldrh	r2, [r0, #64]	; 0x40
   2e5b4:	mov	r1, #2
   2e5b8:	pop	{r4, lr}
   2e5bc:	b	2e444 <luaL_where@@Base+0xe340>
   2e5c0:	ldr	r2, [r3, #176]	; 0xb0
   2e5c4:	sub	r2, r2, #1
   2e5c8:	cmp	r2, #0
   2e5cc:	str	r2, [r3, #176]	; 0xb0
   2e5d0:	blt	2e55c <luaL_where@@Base+0xe458>
   2e5d4:	ldr	r2, [r3, #8]
   2e5d8:	str	r2, [r3, #244]	; 0xf4
   2e5dc:	pop	{r4, pc}
   2e5e0:	add	r1, r3, #2336	; 0x920
   2e5e4:	add	r1, r1, #12
   2e5e8:	ldr	r0, [r3, #80]	; 0x50
   2e5ec:	mov	r2, #9
   2e5f0:	bl	210d0 <luaL_where@@Base+0xfcc>
   2e5f4:	add	r1, r0, #2336	; 0x920
   2e5f8:	add	r1, r1, #12
   2e5fc:	ldr	r0, [r0, #80]	; 0x50
   2e600:	mov	r2, #8
   2e604:	bl	210d0 <luaL_where@@Base+0xfcc>
   2e608:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   2e60c:	ldr	r3, [r0, #2304]	; 0x900
   2e610:	cmp	r3, #0
   2e614:	bne	2e624 <luaL_where@@Base+0xe520>
   2e618:	ldr	r3, [r0, #2308]	; 0x904
   2e61c:	cmp	r3, #0
   2e620:	beq	2e66c <luaL_where@@Base+0xe568>
   2e624:	cmp	r2, #0
   2e628:	bxeq	lr
   2e62c:	ldr	ip, [r0, #84]	; 0x54
   2e630:	ldr	r2, [r0, #2300]	; 0x8fc
   2e634:	mov	r3, #0
   2e638:	cmp	ip, r2
   2e63c:	str	r3, [r0, #172]	; 0xac
   2e640:	beq	2e650 <luaL_where@@Base+0xe54c>
   2e644:	mov	r2, r1
   2e648:	mov	r1, #1
   2e64c:	b	2e444 <luaL_where@@Base+0xe340>
   2e650:	ldr	r3, [r0, #184]	; 0xb8
   2e654:	ldr	r2, [r0, #188]	; 0xbc
   2e658:	cmn	r3, r2
   2e65c:	bne	2e644 <luaL_where@@Base+0xe540>
   2e660:	ldrh	r2, [r0, #64]	; 0x40
   2e664:	mov	r1, #2
   2e668:	b	2e444 <luaL_where@@Base+0xe340>
   2e66c:	add	r1, r0, #2336	; 0x920
   2e670:	push	{r4, lr}
   2e674:	add	r1, r1, #12
   2e678:	ldr	r0, [r0, #80]	; 0x50
   2e67c:	mov	r2, #9
   2e680:	bl	210d0 <luaL_where@@Base+0xfcc>
   2e684:	ldr	r2, [r0, #92]	; 0x5c
   2e688:	ldr	r3, [r0, #80]	; 0x50
   2e68c:	push	{r4, r5, r6, r7, r8, lr}
   2e690:	mov	r5, #0
   2e694:	ldr	r3, [r3, #16]
   2e698:	ldrb	ip, [r2, #37]	; 0x25
   2e69c:	ldr	r6, [r0, #184]	; 0xb8
   2e6a0:	ldr	r2, [r3, #-8]
   2e6a4:	tst	ip, #2
   2e6a8:	subne	lr, r6, #1
   2e6ac:	moveq	lr, r6
   2e6b0:	cmp	lr, #0
   2e6b4:	sub	r3, r3, #8
   2e6b8:	ldr	r4, [r2, #16]
   2e6bc:	ble	2e708 <luaL_where@@Base+0xe604>
   2e6c0:	ldr	r2, [r3, #4]
   2e6c4:	sub	ip, lr, #1
   2e6c8:	and	r7, r2, #7
   2e6cc:	cmp	r7, #2
   2e6d0:	subeq	ip, lr, #2
   2e6d4:	tst	r2, #3
   2e6d8:	bicne	r2, r2, #7
   2e6dc:	ldreq	r2, [r3, #4]
   2e6e0:	subne	r3, r3, r2
   2e6e4:	ldrbeq	r2, [r2, #-3]
   2e6e8:	addeq	r2, r2, #1
   2e6ec:	subeq	r3, r3, r2, lsl #3
   2e6f0:	ldr	r2, [r3]
   2e6f4:	ldr	r2, [r2, #16]
   2e6f8:	cmp	r4, r2
   2e6fc:	addeq	r5, r5, #1
   2e700:	subs	lr, ip, #0
   2e704:	bgt	2e6c0 <luaL_where@@Base+0xe5bc>
   2e708:	ldr	r3, [r0, #84]	; 0x54
   2e70c:	ldr	r2, [r0, #2300]	; 0x8fc
   2e710:	cmp	r3, r2
   2e714:	beq	2e794 <luaL_where@@Base+0xe690>
   2e718:	ldr	r2, [r0, #1552]	; 0x610
   2e71c:	cmp	r2, r5
   2e720:	popge	{r4, r5, r6, r7, r8, pc}
   2e724:	cmp	r1, #0
   2e728:	mov	r4, r0
   2e72c:	beq	2e780 <luaL_where@@Base+0xe67c>
   2e730:	ldr	r2, [r0, #280]	; 0x118
   2e734:	cmp	r1, r2
   2e738:	bcs	2e744 <luaL_where@@Base+0xe640>
   2e73c:	bl	1cfd8 <_start@@Base+0x9c28>
   2e740:	ldr	r3, [r4, #84]	; 0x54
   2e744:	ldr	r0, [r4, #2148]	; 0x864
   2e748:	ldr	r2, [pc, #136]	; 2e7d8 <luaL_where@@Base+0xe6d4>
   2e74c:	add	r3, r3, #4
   2e750:	sub	r1, r4, #432	; 0x1b0
   2e754:	mul	r2, r2, r0
   2e758:	lsr	r3, r3, #2
   2e75c:	and	r3, r3, #63	; 0x3f
   2e760:	add	r3, r3, #1392	; 0x570
   2e764:	add	r3, r3, #8
   2e768:	add	r2, r2, #12288	; 0x3000
   2e76c:	add	r2, r2, #57	; 0x39
   2e770:	lsl	r3, r3, #1
   2e774:	lsr	r0, r2, #28
   2e778:	str	r2, [r4, #2148]	; 0x864
   2e77c:	strh	r0, [r1, r3]
   2e780:	add	r1, r4, #2336	; 0x920
   2e784:	add	r1, r1, #12
   2e788:	ldr	r0, [r4, #80]	; 0x50
   2e78c:	mov	r2, #13
   2e790:	bl	210d0 <luaL_where@@Base+0xfcc>
   2e794:	ldr	r2, [r0, #180]	; 0xb4
   2e798:	ldr	r1, [r0, #1556]	; 0x614
   2e79c:	add	r5, r5, r2
   2e7a0:	cmp	r5, r1
   2e7a4:	pople	{r4, r5, r6, r7, r8, pc}
   2e7a8:	ldr	r2, [r0, #188]	; 0xbc
   2e7ac:	add	r3, r3, #4
   2e7b0:	cmn	r6, r2
   2e7b4:	str	r3, [r0, #84]	; 0x54
   2e7b8:	ldrh	r2, [r0, #64]	; 0x40
   2e7bc:	bne	2e7cc <luaL_where@@Base+0xe6c8>
   2e7c0:	mov	r1, #3
   2e7c4:	pop	{r4, r5, r6, r7, r8, lr}
   2e7c8:	b	2e444 <luaL_where@@Base+0xe340>
   2e7cc:	mov	r1, #4
   2e7d0:	pop	{r4, r5, r6, r7, r8, lr}
   2e7d4:	b	2e444 <luaL_where@@Base+0xe340>
   2e7d8:	bicmi	r4, r6, sp, ror #28
   2e7dc:	ldr	r3, [r0, #1528]	; 0x5f8
   2e7e0:	ldr	r2, [r0, #8]
   2e7e4:	add	r3, r3, #32768	; 0x8000
   2e7e8:	cmp	r2, r3
   2e7ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e7f0:	mov	r4, r0
   2e7f4:	sub	sp, sp, #20
   2e7f8:	bcc	2e9d4 <luaL_where@@Base+0xe8d0>
   2e7fc:	ldr	r3, [r0, #184]	; 0xb8
   2e800:	mov	r5, r1
   2e804:	cmp	r3, #0
   2e808:	beq	2e820 <luaL_where@@Base+0xe71c>
   2e80c:	ldr	r7, [r0, #80]	; 0x50
   2e810:	ldr	r8, [r7, #16]
   2e814:	ldr	r6, [r8, #-4]
   2e818:	tst	r6, #3
   2e81c:	beq	2e840 <luaL_where@@Base+0xe73c>
   2e820:	mov	r0, r4
   2e824:	mov	r2, #0
   2e828:	mov	r1, #7
   2e82c:	bl	2e444 <luaL_where@@Base+0xe340>
   2e830:	mvn	r3, #0
   2e834:	str	r3, [r5, #4]
   2e838:	add	sp, sp, #20
   2e83c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e840:	ldr	r3, [r6]
   2e844:	and	r2, r3, #253	; 0xfd
   2e848:	cmp	r2, #65	; 0x41
   2e84c:	beq	2e820 <luaL_where@@Base+0xe71c>
   2e850:	uxtb	r3, r3
   2e854:	cmp	r3, #73	; 0x49
   2e858:	cmpne	r3, #63	; 0x3f
   2e85c:	beq	2e820 <luaL_where@@Base+0xe71c>
   2e860:	ldr	r3, [r0, #88]	; 0x58
   2e864:	ldrb	r3, [r3, #6]
   2e868:	cmp	r3, #139	; 0x8b
   2e86c:	beq	2e820 <luaL_where@@Base+0xe71c>
   2e870:	cmp	r3, #145	; 0x91
   2e874:	beq	2e820 <luaL_where@@Base+0xe71c>
   2e878:	cmp	r3, #19
   2e87c:	beq	2e820 <luaL_where@@Base+0xe71c>
   2e880:	ldr	sl, [r0, #104]	; 0x68
   2e884:	ldrb	r3, [r6, #-3]
   2e888:	add	sl, sl, #1
   2e88c:	sub	r1, r8, #8
   2e890:	lsl	fp, sl, #3
   2e894:	rsb	r3, r3, r3, lsl #29
   2e898:	add	r0, r8, #8
   2e89c:	mov	r2, fp
   2e8a0:	lsl	r9, r3, #3
   2e8a4:	str	r1, [sp, #12]
   2e8a8:	str	r0, [sp, #8]
   2e8ac:	bl	12c94 <memmove@plt>
   2e8b0:	ldr	ip, [r7, #16]
   2e8b4:	ldr	r1, [r7, #20]
   2e8b8:	ldr	r3, [pc, #288]	; 2e9e0 <luaL_where@@Base+0xe8dc>
   2e8bc:	ldr	r0, [r4, #96]	; 0x60
   2e8c0:	sub	r9, r9, #16
   2e8c4:	mvn	lr, #0
   2e8c8:	add	ip, ip, #16
   2e8cc:	rsb	r9, r9, #10
   2e8d0:	add	r1, r1, #16
   2e8d4:	str	lr, [r8, #-4]
   2e8d8:	str	r9, [r8, #12]
   2e8dc:	stm	r8, {r3, r6}
   2e8e0:	lsl	r2, sl, #2
   2e8e4:	str	ip, [r7, #16]
   2e8e8:	str	r1, [r7, #20]
   2e8ec:	sub	r1, r0, #4
   2e8f0:	add	r0, r0, #4
   2e8f4:	str	r3, [sp, #4]
   2e8f8:	bl	12c94 <memmove@plt>
   2e8fc:	ldr	r3, [sp, #4]
   2e900:	mov	r1, #25
   2e904:	mov	r2, r3
   2e908:	mov	r0, r4
   2e90c:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2e910:	ldr	r9, [r4, #96]	; 0x60
   2e914:	orr	r0, r0, #131072	; 0x20000
   2e918:	str	r0, [r9]
   2e91c:	ldr	sl, [r4, #20]
   2e920:	ldr	r3, [r4, #240]	; 0xf0
   2e924:	cmp	sl, r3
   2e928:	movhi	lr, r9
   2e92c:	bls	2e9c4 <luaL_where@@Base+0xe8c0>
   2e930:	ldr	r2, [r4, #16]
   2e934:	sub	r1, sl, #1
   2e938:	add	r3, sl, #150994944	; 0x9000000
   2e93c:	ldr	sl, [r4, #16]
   2e940:	add	r0, r2, r1, lsl #3
   2e944:	ldr	ip, [pc, #152]	; 2e9e4 <luaL_where@@Base+0xe8e0>
   2e948:	sub	r3, r3, #1
   2e94c:	mov	r2, #0
   2e950:	str	r1, [r4, #20]
   2e954:	str	r2, [sl, r1, lsl #3]
   2e958:	str	ip, [r0, #4]
   2e95c:	str	r3, [r9, #-4]
   2e960:	ldr	r1, [r4, #108]	; 0x6c
   2e964:	ldr	ip, [r4, #184]	; 0xb8
   2e968:	add	r0, r4, #284	; 0x11c
   2e96c:	add	lr, lr, #8
   2e970:	add	ip, ip, #1
   2e974:	add	r1, r1, #2
   2e978:	strh	r3, [r0]
   2e97c:	mov	r0, r4
   2e980:	str	lr, [r4, #96]	; 0x60
   2e984:	str	r1, [r4, #108]	; 0x6c
   2e988:	str	ip, [r4, #184]	; 0xb8
   2e98c:	mov	r1, #8
   2e990:	bl	2e444 <luaL_where@@Base+0xe340>
   2e994:	mov	r2, fp
   2e998:	ldr	r1, [sp, #8]
   2e99c:	ldr	r0, [sp, #12]
   2e9a0:	bl	12c94 <memmove@plt>
   2e9a4:	ldrd	r2, [r7, #16]
   2e9a8:	mvn	r1, #0
   2e9ac:	str	r6, [r8, #-4]
   2e9b0:	sub	r2, r2, #16
   2e9b4:	sub	r3, r3, #16
   2e9b8:	strd	r2, [r7, #16]
   2e9bc:	str	r1, [r5, #4]
   2e9c0:	b	2e838 <luaL_where@@Base+0xe734>
   2e9c4:	mov	r0, r4
   2e9c8:	bl	26bc8 <luaL_where@@Base+0x6ac4>
   2e9cc:	ldr	lr, [r4, #96]	; 0x60
   2e9d0:	b	2e930 <luaL_where@@Base+0xe82c>
   2e9d4:	ldr	r0, [r0, #80]	; 0x50
   2e9d8:	mov	r1, #1
   2e9dc:	bl	130c8 <pclose@plt+0x2c>
   2e9e0:	muleq	r6, r4, r3
   2e9e4:	andeq	r1, r0, r9, lsl #22
   2e9e8:	ldr	ip, [r0, #96]	; 0x60
   2e9ec:	push	{r4, r5, r6, r7, lr}
   2e9f0:	sub	sp, sp, #68	; 0x44
   2e9f4:	ldr	r2, [ip]
   2e9f8:	mov	r6, #0
   2e9fc:	str	r2, [sp, #40]	; 0x28
   2ea00:	ldr	lr, [ip, #4]
   2ea04:	and	r7, r2, #520093696	; 0x1f000000
   2ea08:	cmp	lr, r6
   2ea0c:	sub	r3, r7, #184549376	; 0xb000000
   2ea10:	clz	r3, r3
   2ea14:	lsr	r3, r3, #5
   2ea18:	moveq	r3, #0
   2ea1c:	cmp	r3, r6
   2ea20:	str	lr, [sp, #48]	; 0x30
   2ea24:	str	r6, [r1, #4]
   2ea28:	bne	2ea34 <luaL_where@@Base+0xe930>
   2ea2c:	add	sp, sp, #68	; 0x44
   2ea30:	pop	{r4, r5, r6, r7, pc}
   2ea34:	ldr	r6, [ip, #8]
   2ea38:	cmp	r6, #0
   2ea3c:	bne	2eabc <luaL_where@@Base+0xe9b8>
   2ea40:	mov	r4, r1
   2ea44:	mov	r1, #30
   2ea48:	mov	r5, r0
   2ea4c:	bl	27a00 <luaL_where@@Base+0x78fc>
   2ea50:	ldr	r3, [r4]
   2ea54:	mov	r1, #1
   2ea58:	ldr	r4, [r3]
   2ea5c:	mov	r7, r0
   2ea60:	mov	r0, r5
   2ea64:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2ea68:	ldr	r3, [pc, #84]	; 2eac4 <luaL_where@@Base+0xe9c0>
   2ea6c:	strh	r7, [r5, #120]	; 0x78
   2ea70:	strh	r3, [r5, #124]	; 0x7c
   2ea74:	strh	r0, [r5, #122]	; 0x7a
   2ea78:	mov	r0, r5
   2ea7c:	bl	27498 <luaL_where@@Base+0x7394>
   2ea80:	mvn	r3, #11
   2ea84:	str	r3, [sp, #4]
   2ea88:	str	r4, [sp]
   2ea8c:	str	r0, [sp, #44]	; 0x2c
   2ea90:	mov	r0, r4
   2ea94:	bl	1f244 <lua_atpanic@@Base+0x74>
   2ea98:	mvn	r3, #13
   2ea9c:	str	r3, [sp, #12]
   2eaa0:	mov	r1, sp
   2eaa4:	str	r6, [sp, #60]	; 0x3c
   2eaa8:	add	r3, r0, #1
   2eaac:	mov	r0, r5
   2eab0:	str	r3, [sp, #8]
   2eab4:	bl	2c388 <luaL_where@@Base+0xc284>
   2eab8:	b	2ea2c <luaL_where@@Base+0xe928>
   2eabc:	bl	2e7dc <luaL_where@@Base+0xe6d8>
   2eac0:	b	2ea2c <luaL_where@@Base+0xe928>
   2eac4:	andeq	r2, r0, r3, lsl r9
   2eac8:	ldr	r2, [r0, #96]	; 0x60
   2eacc:	push	{r4, r5, r6, lr}
   2ead0:	ldr	r5, [r2]
   2ead4:	cmp	r5, #0
   2ead8:	popeq	{r4, r5, r6, pc}
   2eadc:	ldr	r2, [r1]
   2eae0:	mov	r6, r1
   2eae4:	mov	r1, r5
   2eae8:	mov	r4, r0
   2eaec:	bl	2ad98 <luaL_where@@Base+0xac94>
   2eaf0:	cmp	r0, #0
   2eaf4:	beq	2eb64 <luaL_where@@Base+0xea60>
   2eaf8:	tst	r5, #32768	; 0x8000
   2eafc:	bne	2eb90 <luaL_where@@Base+0xea8c>
   2eb00:	cmp	r0, #0
   2eb04:	ldr	r2, [r4, #104]	; 0x68
   2eb08:	blt	2eb20 <luaL_where@@Base+0xea1c>
   2eb0c:	cmp	r0, r2
   2eb10:	ble	2eb80 <luaL_where@@Base+0xea7c>
   2eb14:	mov	r3, #0
   2eb18:	str	r3, [r6, #4]
   2eb1c:	pop	{r4, r5, r6, pc}
   2eb20:	add	r3, r0, r2
   2eb24:	cmp	r3, #0
   2eb28:	rsb	r0, r0, #0
   2eb2c:	str	r0, [r6, #4]
   2eb30:	pople	{r4, r5, r6, pc}
   2eb34:	cmp	r0, #0
   2eb38:	pople	{r4, r5, r6, pc}
   2eb3c:	ldr	r2, [r4, #96]	; 0x60
   2eb40:	sub	r1, r3, #-1073741823	; 0xc0000001
   2eb44:	sub	r3, r2, #4
   2eb48:	add	r0, r3, r0, lsl #2
   2eb4c:	add	r2, r2, r1, lsl #2
   2eb50:	ldr	r1, [r2, #4]!
   2eb54:	str	r1, [r3, #4]!
   2eb58:	cmp	r3, r0
   2eb5c:	bne	2eb50 <luaL_where@@Base+0xea4c>
   2eb60:	pop	{r4, r5, r6, pc}
   2eb64:	ldr	r1, [r4, #104]	; 0x68
   2eb68:	mov	r0, r4
   2eb6c:	sub	r1, r1, #1
   2eb70:	ldr	r4, [r4, #96]	; 0x60
   2eb74:	bl	26ccc <luaL_where@@Base+0x6bc8>
   2eb78:	str	r0, [r4]
   2eb7c:	pop	{r4, r5, r6, pc}
   2eb80:	mov	r3, r0
   2eb84:	sub	r0, r2, r0
   2eb88:	str	r0, [r6, #4]
   2eb8c:	b	2eb34 <luaL_where@@Base+0xea30>
   2eb90:	mov	r1, r6
   2eb94:	mov	r0, r4
   2eb98:	pop	{r4, r5, r6, lr}
   2eb9c:	b	2e7dc <luaL_where@@Base+0xe6d8>
   2eba0:	ldr	r2, [r0, #96]	; 0x60
   2eba4:	push	{r4, r5, r6, lr}
   2eba8:	mov	r4, r0
   2ebac:	ldr	r2, [r2]
   2ebb0:	and	ip, r2, #520093696	; 0x1f000000
   2ebb4:	cmp	ip, #318767104	; 0x13000000
   2ebb8:	bne	2ebd8 <luaL_where@@Base+0xead4>
   2ebbc:	tst	r2, #32768	; 0x8000
   2ebc0:	bne	2ebd8 <luaL_where@@Base+0xead4>
   2ebc4:	ldr	ip, [r0, #16]
   2ebc8:	uxth	r2, r2
   2ebcc:	ldr	r2, [ip, r2, lsl #3]
   2ebd0:	cmp	r2, #0
   2ebd4:	beq	2ebe4 <luaL_where@@Base+0xeae0>
   2ebd8:	mov	r0, r4
   2ebdc:	pop	{r4, r5, r6, lr}
   2ebe0:	b	2e7dc <luaL_where@@Base+0xe6d8>
   2ebe4:	ldr	r3, [pc, #48]	; 2ec1c <luaL_where@@Base+0xeb18>
   2ebe8:	str	r2, [r0, #120]	; 0x78
   2ebec:	strh	r3, [r0, #124]	; 0x7c
   2ebf0:	bl	27498 <luaL_where@@Base+0x7394>
   2ebf4:	ldr	r2, [pc, #36]	; 2ec20 <luaL_where@@Base+0xeb1c>
   2ebf8:	mov	r3, #4
   2ebfc:	strh	r2, [r4, #124]	; 0x7c
   2ec00:	strh	r3, [r4, #122]	; 0x7a
   2ec04:	ldr	r5, [r4, #96]	; 0x60
   2ec08:	strh	r0, [r4, #120]	; 0x78
   2ec0c:	mov	r0, r4
   2ec10:	bl	27498 <luaL_where@@Base+0x7394>
   2ec14:	str	r0, [r5]
   2ec18:	pop	{r4, r5, r6, pc}
   2ec1c:	andeq	r4, r0, r6, lsl #2
   2ec20:	andeq	r4, r0, fp, lsl #10
   2ec24:	ldrh	r3, [r0, #24]
   2ec28:	push	{r4, lr}
   2ec2c:	mov	r4, r0
   2ec30:	cmp	r3, #1
   2ec34:	beq	2ec44 <luaL_where@@Base+0xeb40>
   2ec38:	mov	r0, r4
   2ec3c:	pop	{r4, lr}
   2ec40:	b	2e158 <luaL_where@@Base+0xe054>
   2ec44:	ldr	r2, [r0, #28]
   2ec48:	ldr	r3, [r0, #8]
   2ec4c:	ldrh	r2, [r2, #2]
   2ec50:	cmp	r2, r3
   2ec54:	bne	2ec38 <luaL_where@@Base+0xeb34>
   2ec58:	mov	r2, #0
   2ec5c:	mov	r3, #3072	; 0xc00
   2ec60:	str	r2, [r0, #120]	; 0x78
   2ec64:	strh	r3, [r0, #124]	; 0x7c
   2ec68:	bl	25258 <luaL_where@@Base+0x5154>
   2ec6c:	b	2ec38 <luaL_where@@Base+0xeb34>
   2ec70:	ldr	r3, [r0, #80]	; 0x50
   2ec74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ec78:	subs	r7, r2, #0
   2ec7c:	ldr	sl, [r3, #16]
   2ec80:	sub	sp, sp, #20
   2ec84:	mov	r4, r0
   2ec88:	mov	r6, r1
   2ec8c:	sub	r5, sl, #8
   2ec90:	ble	2ece0 <luaL_where@@Base+0xebdc>
   2ec94:	lsl	r9, r1, #2
   2ec98:	add	fp, r7, r1
   2ec9c:	mov	r8, r1
   2eca0:	b	2ecb4 <luaL_where@@Base+0xebb0>
   2eca4:	add	r8, r8, #1
   2eca8:	cmp	fp, r8
   2ecac:	add	r9, r9, #4
   2ecb0:	beq	2ece0 <luaL_where@@Base+0xebdc>
   2ecb4:	ldr	r3, [r4, #96]	; 0x60
   2ecb8:	ldr	r3, [r3, r9]
   2ecbc:	cmp	r3, #0
   2ecc0:	bne	2eca4 <luaL_where@@Base+0xeba0>
   2ecc4:	mov	r1, r8
   2ecc8:	mov	r0, r4
   2eccc:	add	r8, r8, #1
   2ecd0:	bl	25b34 <luaL_where@@Base+0x5a30>
   2ecd4:	cmp	fp, r8
   2ecd8:	add	r9, r9, #4
   2ecdc:	bne	2ecb4 <luaL_where@@Base+0xebb0>
   2ece0:	ldr	r3, [sl, #-4]
   2ece4:	ldr	r2, [r4, #184]	; 0xb8
   2ece8:	and	r1, r3, #6
   2ecec:	cmp	r1, #6
   2ecf0:	bne	2ed6c <luaL_where@@Base+0xec68>
   2ecf4:	sub	r2, r2, #1
   2ecf8:	cmp	r2, #0
   2ecfc:	str	r2, [r4, #184]	; 0xb8
   2ed00:	asr	r3, r3, #3
   2ed04:	ble	2ef48 <luaL_where@@Base+0xee44>
   2ed08:	ldr	r1, [r4, #96]	; 0x60
   2ed0c:	ldr	r0, [pc, #1412]	; 2f298 <luaL_where@@Base+0xf194>
   2ed10:	b	2ed28 <luaL_where@@Base+0xec24>
   2ed14:	sub	r2, r2, #1
   2ed18:	cmp	r2, #0
   2ed1c:	asr	r3, r3, #3
   2ed20:	str	r2, [r4, #184]	; 0xb8
   2ed24:	ble	2f27c <luaL_where@@Base+0xf178>
   2ed28:	ldr	r2, [r4, #108]	; 0x6c
   2ed2c:	sub	ip, r3, #1
   2ed30:	sub	r1, r1, r3, lsl #2
   2ed34:	add	r6, r6, ip
   2ed38:	sub	r3, r2, r3
   2ed3c:	str	r3, [r4, #108]	; 0x6c
   2ed40:	str	r0, [r1, r6, lsl #2]
   2ed44:	ldr	r3, [r5, #4]
   2ed48:	add	r7, r7, #1
   2ed4c:	bic	r3, r3, #7
   2ed50:	sub	r5, r5, r3
   2ed54:	ldr	r3, [r5, #4]
   2ed58:	and	r2, r3, #6
   2ed5c:	cmp	r2, #6
   2ed60:	ldr	r2, [r4, #184]	; 0xb8
   2ed64:	beq	2ed14 <luaL_where@@Base+0xec10>
   2ed68:	str	r1, [r4, #96]	; 0x60
   2ed6c:	cmp	r2, #0
   2ed70:	beq	2eea0 <luaL_where@@Base+0xed9c>
   2ed74:	and	r1, r3, #7
   2ed78:	cmp	r1, #3
   2ed7c:	bne	2edb8 <luaL_where@@Base+0xecb4>
   2ed80:	sub	r2, r2, #1
   2ed84:	cmp	r2, #0
   2ed88:	str	r2, [r4, #184]	; 0xb8
   2ed8c:	asr	r1, r3, #3
   2ed90:	blt	2ef48 <luaL_where@@Base+0xee44>
   2ed94:	bic	r3, r3, #7
   2ed98:	ldr	r2, [r4, #108]	; 0x6c
   2ed9c:	sub	r5, r5, r3
   2eda0:	ldr	r3, [r4, #96]	; 0x60
   2eda4:	add	r6, r6, r1
   2eda8:	sub	r2, r2, r1
   2edac:	sub	r3, r3, r1, lsl #2
   2edb0:	str	r2, [r4, #108]	; 0x6c
   2edb4:	str	r3, [r4, #96]	; 0x60
   2edb8:	ldr	r3, [r5, #4]
   2edbc:	ands	r8, r3, #3
   2edc0:	bne	2ef5c <luaL_where@@Base+0xee58>
   2edc4:	ldr	r9, [r3, #-4]
   2edc8:	lsrs	sl, r9, #24
   2edcc:	lsr	r9, r9, #8
   2edd0:	subne	sl, sl, #1
   2edd4:	uxtb	r9, r9
   2edd8:	add	fp, r9, #1
   2eddc:	moveq	sl, r7
   2ede0:	sub	r3, r5, fp, lsl #3
   2ede4:	ldr	r3, [r3]
   2ede8:	ldr	r1, [r3, #16]
   2edec:	sub	r1, r1, #64	; 0x40
   2edf0:	ldrb	r3, [r1, #37]	; 0x25
   2edf4:	tst	r3, #8
   2edf8:	bne	2f284 <luaL_where@@Base+0xf180>
   2edfc:	ldr	r3, [r4, #184]	; 0xb8
   2ee00:	cmp	r3, #0
   2ee04:	bne	2ee2c <luaL_where@@Base+0xed28>
   2ee08:	ldr	r3, [r4, #92]	; 0x5c
   2ee0c:	cmp	r3, #0
   2ee10:	beq	2ee2c <luaL_where@@Base+0xed28>
   2ee14:	ldr	r3, [r4, #80]	; 0x50
   2ee18:	str	r3, [sp, #4]
   2ee1c:	ldr	r3, [r3, #16]
   2ee20:	sub	r3, r3, #8
   2ee24:	cmp	r5, r3
   2ee28:	beq	2f190 <luaL_where@@Base+0xf08c>
   2ee2c:	cmp	sl, #0
   2ee30:	ble	2ee60 <luaL_where@@Base+0xed5c>
   2ee34:	ldr	r3, [r4, #96]	; 0x60
   2ee38:	ldr	r0, [pc, #1116]	; 2f29c <luaL_where@@Base+0xf198>
   2ee3c:	add	r6, r3, r6, lsl #2
   2ee40:	sub	r3, r3, #8
   2ee44:	cmp	r8, r7
   2ee48:	movge	r2, r0
   2ee4c:	ldrlt	r2, [r6, r8, lsl #2]
   2ee50:	add	r8, r8, #1
   2ee54:	cmp	sl, r8
   2ee58:	str	r2, [r3, #4]!
   2ee5c:	bne	2ee44 <luaL_where@@Base+0xed40>
   2ee60:	ldr	r3, [r4, #184]	; 0xb8
   2ee64:	add	r2, sl, r9
   2ee68:	cmp	r3, #0
   2ee6c:	str	r2, [r4, #104]	; 0x68
   2ee70:	ble	2f064 <luaL_where@@Base+0xef60>
   2ee74:	ldr	r2, [r4, #108]	; 0x6c
   2ee78:	ldr	r1, [r4, #96]	; 0x60
   2ee7c:	sub	r2, r2, #1
   2ee80:	sub	r9, r2, r9
   2ee84:	sub	r3, r3, #1
   2ee88:	sub	r2, r1, fp, lsl #2
   2ee8c:	str	r3, [r4, #184]	; 0xb8
   2ee90:	str	r9, [r4, #108]	; 0x6c
   2ee94:	str	r2, [r4, #96]	; 0x60
   2ee98:	add	sp, sp, #20
   2ee9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eea0:	ldr	r2, [r4, #92]	; 0x5c
   2eea4:	cmp	r2, #0
   2eea8:	beq	2ef34 <luaL_where@@Base+0xee30>
   2eeac:	ldr	r2, [r4, #84]	; 0x54
   2eeb0:	ldrb	r2, [r2]
   2eeb4:	sub	r2, r2, #73	; 0x49
   2eeb8:	cmp	r2, #3
   2eebc:	bhi	2ef34 <luaL_where@@Base+0xee30>
   2eec0:	tst	r3, #3
   2eec4:	bne	2eef0 <luaL_where@@Base+0xedec>
   2eec8:	ldr	r2, [r4, #2304]	; 0x900
   2eecc:	cmp	r2, #0
   2eed0:	bne	2ef34 <luaL_where@@Base+0xee30>
   2eed4:	ldr	r2, [r4, #2308]	; 0x904
   2eed8:	cmp	r2, #0
   2eedc:	bne	2ef34 <luaL_where@@Base+0xee30>
   2eee0:	ldrb	r2, [r4, #44]	; 0x2c
   2eee4:	sub	r2, r2, #73	; 0x49
   2eee8:	cmp	r2, #3
   2eeec:	bls	2ef34 <luaL_where@@Base+0xee30>
   2eef0:	cmp	r6, #0
   2eef4:	ble	2ef14 <luaL_where@@Base+0xee10>
   2eef8:	ldr	r3, [r4, #96]	; 0x60
   2eefc:	mov	r1, #0
   2ef00:	sub	r3, r3, #4
   2ef04:	add	r2, r3, r6, lsl #2
   2ef08:	str	r1, [r3, #4]!
   2ef0c:	cmp	r2, r3
   2ef10:	bne	2ef08 <luaL_where@@Base+0xee04>
   2ef14:	mov	r0, r4
   2ef18:	mov	r2, #0
   2ef1c:	mov	r1, #7
   2ef20:	add	r6, r7, r6
   2ef24:	str	r6, [r4, #104]	; 0x68
   2ef28:	add	sp, sp, #20
   2ef2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ef30:	b	2e444 <luaL_where@@Base+0xe340>
   2ef34:	and	r3, r3, #7
   2ef38:	cmp	r3, #3
   2ef3c:	bne	2edb8 <luaL_where@@Base+0xecb4>
   2ef40:	mvn	r3, #0
   2ef44:	str	r3, [r4, #184]	; 0xb8
   2ef48:	add	r1, r4, #2336	; 0x920
   2ef4c:	add	r1, r1, #12
   2ef50:	ldr	r0, [r4, #80]	; 0x50
   2ef54:	mov	r2, #16
   2ef58:	bl	210d0 <luaL_where@@Base+0xfcc>
   2ef5c:	and	r2, r3, #7
   2ef60:	cmp	r2, #2
   2ef64:	bne	2ef48 <luaL_where@@Base+0xee44>
   2ef68:	ldr	r2, [r4, #184]	; 0xb8
   2ef6c:	ldr	r0, [r5, #-8]
   2ef70:	sub	r2, r2, #2
   2ef74:	cmp	r2, #0
   2ef78:	asr	r3, r3, #3
   2ef7c:	str	r2, [r4, #184]	; 0xb8
   2ef80:	blt	2ef48 <luaL_where@@Base+0xee44>
   2ef84:	ldr	r1, [r4, #108]	; 0x6c
   2ef88:	ldr	ip, [r4, #96]	; 0x60
   2ef8c:	ldr	r2, [pc, #780]	; 2f2a0 <luaL_where@@Base+0xf19c>
   2ef90:	sub	r1, r1, r3
   2ef94:	sub	ip, ip, r3, lsl #2
   2ef98:	cmp	r0, r2
   2ef9c:	sub	r2, r3, #2
   2efa0:	str	r1, [r4, #108]	; 0x6c
   2efa4:	str	ip, [r4, #96]	; 0x60
   2efa8:	str	r2, [r4, #104]	; 0x68
   2efac:	beq	2f12c <luaL_where@@Base+0xf028>
   2efb0:	ldr	lr, [pc, #748]	; 2f2a4 <luaL_where@@Base+0xf1a0>
   2efb4:	ldr	r8, [pc, #748]	; 2f2a8 <luaL_where@@Base+0xf1a4>
   2efb8:	cmp	r0, lr
   2efbc:	sub	r1, r0, r8
   2efc0:	clz	r1, r1
   2efc4:	lsr	r1, r1, #5
   2efc8:	moveq	r1, #0
   2efcc:	cmp	r1, #0
   2efd0:	beq	2ee98 <luaL_where@@Base+0xed94>
   2efd4:	ldr	lr, [r5, #-4]
   2efd8:	cmp	r7, #0
   2efdc:	ldrb	r8, [lr, #-1]
   2efe0:	bne	2f160 <luaL_where@@Base+0xf05c>
   2efe4:	cmp	r2, r8
   2efe8:	ldreq	r0, [pc, #684]	; 2f29c <luaL_where@@Base+0xf198>
   2efec:	beq	2f048 <luaL_where@@Base+0xef44>
   2eff0:	ldr	sl, [r4, #80]	; 0x50
   2eff4:	ldr	r0, [pc, #672]	; 2f29c <luaL_where@@Base+0xf198>
   2eff8:	mvn	r1, #0
   2effc:	ldr	lr, [sl, #16]
   2f000:	str	r0, [ip, r2, lsl #2]
   2f004:	ldrd	r6, [lr, #-16]
   2f008:	str	r1, [lr, #-12]
   2f00c:	lsl	r9, r3, #3
   2f010:	sub	lr, lr, r9
   2f014:	str	lr, [sl, #16]
   2f018:	mov	r1, r8
   2f01c:	mov	r0, r4
   2f020:	bl	2dad4 <luaL_where@@Base+0xd9d0>
   2f024:	ldr	r2, [r4, #80]	; 0x50
   2f028:	ldr	r3, [r2, #16]
   2f02c:	add	r3, r3, r9
   2f030:	str	r3, [r2, #16]
   2f034:	strd	r6, [r3, #-16]
   2f038:	cmp	r0, #0
   2f03c:	beq	2ee98 <luaL_where@@Base+0xed94>
   2f040:	ldr	lr, [r5, #-4]
   2f044:	ldr	ip, [r4, #96]	; 0x60
   2f048:	ldrb	r3, [lr, #-3]
   2f04c:	str	r0, [ip, r3, lsl #2]
   2f050:	ldr	r2, [r4, #104]	; 0x68
   2f054:	cmp	r2, r3
   2f058:	addls	r3, r3, #1
   2f05c:	strls	r3, [r4, #104]	; 0x68
   2f060:	b	2ee98 <luaL_where@@Base+0xed94>
   2f064:	ldr	r3, [r4, #2304]	; 0x900
   2f068:	cmp	r3, #0
   2f06c:	bne	2f0a0 <luaL_where@@Base+0xef9c>
   2f070:	ldr	r3, [r4, #2308]	; 0x904
   2f074:	cmp	r3, #0
   2f078:	bne	2f0a0 <luaL_where@@Base+0xef9c>
   2f07c:	ldrb	r3, [r4, #44]	; 0x2c
   2f080:	sub	r3, r3, #73	; 0x49
   2f084:	cmp	r3, #3
   2f088:	bls	2f0a0 <luaL_where@@Base+0xef9c>
   2f08c:	add	r1, r4, #2336	; 0x920
   2f090:	add	r1, r1, #12
   2f094:	ldr	r0, [r4, #80]	; 0x50
   2f098:	mov	r2, #8
   2f09c:	bl	210d0 <luaL_where@@Base+0xfcc>
   2f0a0:	ldrb	r6, [r4, #113]	; 0x71
   2f0a4:	cmp	r6, #0
   2f0a8:	bne	2ef48 <luaL_where@@Base+0xee44>
   2f0ac:	mov	r2, #7
   2f0b0:	mov	r0, r4
   2f0b4:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   2f0b8:	ldr	r2, [r5, #4]
   2f0bc:	mov	r1, #25
   2f0c0:	lsl	r9, r9, #2
   2f0c4:	mov	r7, r0
   2f0c8:	mov	r0, r4
   2f0cc:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   2f0d0:	ldr	r3, [pc, #468]	; 2f2ac <luaL_where@@Base+0xf1a8>
   2f0d4:	strh	r7, [r4, #120]	; 0x78
   2f0d8:	strh	r3, [r4, #124]	; 0x7c
   2f0dc:	strh	r0, [r4, #122]	; 0x7a
   2f0e0:	mov	r0, r4
   2f0e4:	bl	27498 <luaL_where@@Base+0x7394>
   2f0e8:	ldr	r3, [r4, #188]	; 0xbc
   2f0ec:	ldr	r1, [r4, #96]	; 0x60
   2f0f0:	add	r3, r3, #1
   2f0f4:	mov	ip, #1
   2f0f8:	lsl	r2, sl, #2
   2f0fc:	add	r0, r1, r9
   2f100:	str	r3, [r4, #188]	; 0xbc
   2f104:	sub	r1, r1, #4
   2f108:	strb	ip, [r4, #113]	; 0x71
   2f10c:	bl	12c94 <memmove@plt>
   2f110:	ldr	r0, [r4, #96]	; 0x60
   2f114:	add	r2, r9, #4
   2f118:	sub	r0, r0, #4
   2f11c:	mov	r1, r6
   2f120:	add	sp, sp, #20
   2f124:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f128:	b	12ed4 <memset@plt>
   2f12c:	ldr	r2, [r5, #-4]
   2f130:	cmp	r7, #0
   2f134:	addne	r3, r6, r3
   2f138:	ldrb	r2, [r2, #-3]
   2f13c:	ldrne	r3, [ip, r3, lsl #2]
   2f140:	ldreq	r3, [pc, #340]	; 2f29c <luaL_where@@Base+0xf198>
   2f144:	str	r3, [ip, r2, lsl #2]
   2f148:	ldr	r3, [r4, #104]	; 0x68
   2f14c:	cmp	r3, r2
   2f150:	addls	r2, r2, #1
   2f154:	strls	r2, [r4, #104]	; 0x68
   2f158:	add	sp, sp, #20
   2f15c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f160:	add	r1, r6, r3
   2f164:	cmp	r2, r8
   2f168:	ldr	r0, [ip, r1, lsl #2]
   2f16c:	beq	2f038 <luaL_where@@Base+0xef34>
   2f170:	ldr	sl, [r4, #80]	; 0x50
   2f174:	lsl	r6, r6, #3
   2f178:	ldr	lr, [sl, #16]
   2f17c:	str	r0, [ip, r2, lsl #2]
   2f180:	ldrd	r0, [lr, r6]
   2f184:	ldrd	r6, [lr, #-16]
   2f188:	strd	r0, [lr, #-16]
   2f18c:	b	2f00c <luaL_where@@Base+0xef08>
   2f190:	add	r3, r4, #332	; 0x14c
   2f194:	ldrh	r2, [r3, #2]
   2f198:	cmp	r2, #0
   2f19c:	beq	2f254 <luaL_where@@Base+0xf150>
   2f1a0:	add	r3, r4, #308	; 0x134
   2f1a4:	ldr	r0, [r4, #16]
   2f1a8:	str	r3, [sp, #8]
   2f1ac:	str	fp, [sp, #12]
   2f1b0:	b	2f1c0 <luaL_where@@Base+0xf0bc>
   2f1b4:	ldrh	r2, [lr, #6]
   2f1b8:	cmp	r2, #0
   2f1bc:	beq	2f250 <luaL_where@@Base+0xf14c>
   2f1c0:	ldr	r3, [r0, r2, lsl #3]
   2f1c4:	add	lr, r0, r2, lsl #3
   2f1c8:	cmp	r1, r3
   2f1cc:	bne	2f1b4 <luaL_where@@Base+0xf0b0>
   2f1d0:	ldr	r3, [sp, #8]
   2f1d4:	ldrh	r3, [r3]
   2f1d8:	cmp	r3, #0
   2f1dc:	beq	2f1b4 <luaL_where@@Base+0xf0b0>
   2f1e0:	mov	fp, #0
   2f1e4:	lsl	r3, r3, #3
   2f1e8:	add	ip, r0, r3
   2f1ec:	ldrh	r3, [r0, r3]
   2f1f0:	cmp	r3, r2
   2f1f4:	ldrh	r3, [ip, #6]
   2f1f8:	addeq	fp, fp, #1
   2f1fc:	cmp	r3, #0
   2f200:	bne	2f1e4 <luaL_where@@Base+0xf0e0>
   2f204:	cmp	fp, #0
   2f208:	beq	2f1b4 <luaL_where@@Base+0xf0b0>
   2f20c:	ldr	r2, [r4, #84]	; 0x54
   2f210:	ldr	r3, [r4, #2300]	; 0x8fc
   2f214:	cmp	r2, r3
   2f218:	bne	2f268 <luaL_where@@Base+0xf164>
   2f21c:	ldr	r2, [r4, #180]	; 0xb4
   2f220:	ldr	r3, [r4, #1556]	; 0x614
   2f224:	add	r2, fp, r2
   2f228:	cmp	r2, r3
   2f22c:	ble	2f1b4 <luaL_where@@Base+0xf0b0>
   2f230:	add	r6, r7, r6
   2f234:	mov	r0, r4
   2f238:	str	r6, [r4, #104]	; 0x68
   2f23c:	bl	1dfe0 <_start@@Base+0xac30>
   2f240:	ldrh	r2, [r4, #64]	; 0x40
   2f244:	mov	r0, r4
   2f248:	mov	r1, #5
   2f24c:	b	2ef28 <luaL_where@@Base+0xee24>
   2f250:	ldr	fp, [sp, #12]
   2f254:	mov	r0, r4
   2f258:	str	r1, [sp, #4]
   2f25c:	bl	2e158 <luaL_where@@Base+0xe054>
   2f260:	ldr	r1, [sp, #4]
   2f264:	b	2ee2c <luaL_where@@Base+0xed28>
   2f268:	add	r1, r4, #2336	; 0x920
   2f26c:	add	r1, r1, #12
   2f270:	ldr	r0, [sp, #4]
   2f274:	mov	r2, #14
   2f278:	bl	210d0 <luaL_where@@Base+0xfcc>
   2f27c:	str	r1, [r4, #96]	; 0x60
   2f280:	b	2ef48 <luaL_where@@Base+0xee44>
   2f284:	add	r1, r4, #2336	; 0x920
   2f288:	add	r1, r1, #12
   2f28c:	ldr	r0, [r4, #80]	; 0x50
   2f290:	mov	r2, #12
   2f294:	bl	210d0 <luaL_where@@Base+0xfcc>
   2f298:	andeq	r7, r0, #1012	; 0x3f4
   2f29c:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   2f2a0:	andeq	fp, r6, r0, asr #31
   2f2a4:	andeq	fp, r6, r8, lsr #31
   2f2a8:	andeq	fp, r6, ip, asr #27
   2f2ac:	andeq	r0, r0, r5, lsl #23
   2f2b0:	ldr	r3, [r0, #88]	; 0x58
   2f2b4:	push	{r4, r5, lr}
   2f2b8:	mov	r4, r0
   2f2bc:	ldrb	r3, [r3, #6]
   2f2c0:	sub	sp, sp, #20
   2f2c4:	ldr	ip, [r0, #104]	; 0x68
   2f2c8:	cmp	r3, #201	; 0xc9
   2f2cc:	lslls	r3, r3, #1
   2f2d0:	ldrls	r2, [pc, #124]	; 2f354 <luaL_where@@Base+0xf250>
   2f2d4:	movhi	r3, #0
   2f2d8:	subls	r1, r2, #1440	; 0x5a0
   2f2dc:	mov	lr, #1
   2f2e0:	ldrhls	r3, [r1, r3]
   2f2e4:	ldrhi	r2, [pc, #108]	; 2f358 <luaL_where@@Base+0xf254>
   2f2e8:	str	lr, [sp, #8]
   2f2ec:	lsrls	r1, r3, #8
   2f2f0:	uxtbls	r3, r3
   2f2f4:	addls	r2, r2, r1, lsl #2
   2f2f8:	ldr	r1, [r0, #80]	; 0x50
   2f2fc:	ldr	r0, [r0, #96]	; 0x60
   2f300:	str	r3, [sp, #12]
   2f304:	ldr	r5, [r1, #16]
   2f308:	add	r1, sp, #16
   2f30c:	mov	r3, #0
   2f310:	ldrls	r2, [r2, #-1036]	; 0xfffffbf4
   2f314:	str	r5, [r1, #-12]!
   2f318:	str	r3, [r0, ip, lsl #2]
   2f31c:	mov	r0, r4
   2f320:	blx	r2
   2f324:	ldr	r2, [sp, #8]
   2f328:	cmp	r2, #0
   2f32c:	blt	2f34c <luaL_where@@Base+0xf248>
   2f330:	ldr	r3, [r4, #264]	; 0x108
   2f334:	mov	r0, r4
   2f338:	cmp	r3, #0
   2f33c:	moveq	r3, #6
   2f340:	streq	r3, [r4, #264]	; 0x108
   2f344:	mov	r1, #0
   2f348:	bl	2ec70 <luaL_where@@Base+0xeb6c>
   2f34c:	add	sp, sp, #20
   2f350:	pop	{r4, r5, pc}
   2f354:			; <UNDEFINED> instruction: 0x00070cb0
   2f358:	ldrdeq	lr, [r2], -ip
   2f35c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f360:	mov	r4, r2
   2f364:	sub	sp, sp, #188	; 0xbc
   2f368:	ldr	fp, [r4]
   2f36c:	mov	r2, #0
   2f370:	mov	r1, r2
   2f374:	ldr	r3, [fp, #8]
   2f378:	ldr	r0, [fp, #80]	; 0x50
   2f37c:	str	r3, [sp, #4]
   2f380:	sub	r3, r3, #32768	; 0x8000
   2f384:	str	r3, [r4, #8]
   2f388:	lsl	r3, r3, #1
   2f38c:	bl	205b0 <luaL_where@@Base+0x4ac>
   2f390:	mov	r1, #32768	; 0x8000
   2f394:	mov	r2, #0
   2f398:	mov	r3, #4480	; 0x1180
   2f39c:	mov	ip, r0
   2f3a0:	str	r0, [r4, #4]
   2f3a4:	str	r0, [sp, #20]
   2f3a8:	strh	r1, [ip]
   2f3ac:	mov	r0, fp
   2f3b0:	str	r2, [fp, #120]	; 0x78
   2f3b4:	strh	r3, [fp, #124]	; 0x7c
   2f3b8:	mov	r4, ip
   2f3bc:	bl	25258 <luaL_where@@Base+0x5154>
   2f3c0:	ldrh	r2, [fp, #24]
   2f3c4:	ldr	r3, [fp, #248]	; 0xf8
   2f3c8:	sub	sl, r4, #65536	; 0x10000
   2f3cc:	sub	r1, r2, #-2147483647	; 0x80000001
   2f3d0:	str	r2, [sp, #44]	; 0x2c
   2f3d4:	lsl	r1, r1, #1
   2f3d8:	cmp	r1, r3
   2f3dc:	bhi	2fd80 <luaL_where@@Base+0xfc7c>
   2f3e0:	ldr	r2, [sp, #44]	; 0x2c
   2f3e4:	ldr	r6, [fp, #28]
   2f3e8:	sub	r4, r2, #-536870911	; 0xe0000001
   2f3ec:	sub	r1, r2, #2
   2f3f0:	lsl	r4, r4, #3
   2f3f4:	add	r3, r6, r4
   2f3f8:	ldrh	ip, [fp, #26]
   2f3fc:	ldrb	r2, [r3, #6]
   2f400:	ldr	r0, [fp, #260]	; 0x104
   2f404:	mul	r1, r2, r1
   2f408:	add	r1, r1, ip, lsl #1
   2f40c:	cmp	r1, r0
   2f410:	bhi	2fd68 <luaL_where@@Base+0xfc64>
   2f414:	ldrh	r0, [r3]
   2f418:	ldr	r9, [fp, #32]
   2f41c:	ldr	r3, [pc, #2456]	; 2fdbc <luaL_where@@Base+0xfcb8>
   2f420:	ldr	ip, [sp, #4]
   2f424:	add	r0, r9, r0, lsl #2
   2f428:	mov	r1, #-16777216	; 0xff000000
   2f42c:	str	r1, [r0, r2, lsl #2]
   2f430:	cmp	ip, r3
   2f434:	lsl	r2, r2, #2
   2f438:	str	r0, [sp, #48]	; 0x30
   2f43c:	str	r2, [sp, #52]	; 0x34
   2f440:	add	r4, r6, #8
   2f444:	bls	2fda0 <luaL_where@@Base+0xfc9c>
   2f448:	mov	r8, #0
   2f44c:	str	sl, [sp, #8]
   2f450:	mov	r9, r3
   2f454:	mov	sl, r0
   2f458:	str	r8, [sp, #40]	; 0x28
   2f45c:	b	2f650 <luaL_where@@Base+0xf54c>
   2f460:	ldr	r1, [fp, #16]
   2f464:	lsl	r2, r9, #3
   2f468:	add	r3, r1, r2
   2f46c:	ldrh	r1, [r1, r2]
   2f470:	ldr	r2, [pc, #2376]	; 2fdc0 <luaL_where@@Base+0xfcbc>
   2f474:	ldr	ip, [pc, #2372]	; 2fdc0 <luaL_where@@Base+0xfcbc>
   2f478:	cmp	r1, r2
   2f47c:	lslhi	r2, r1, #1
   2f480:	ldrhi	r0, [sp, #8]
   2f484:	movls	r0, #1
   2f488:	ldr	r5, [pc, #2356]	; 2fdc4 <luaL_where@@Base+0xfcc0>
   2f48c:	ldrhhi	r2, [r0, r2]
   2f490:	subhi	r0, r1, r2
   2f494:	movhi	r1, r2
   2f498:	ldrh	r2, [r3, #2]
   2f49c:	clzhi	r0, r0
   2f4a0:	lsrhi	r0, r0, #5
   2f4a4:	cmp	r2, ip
   2f4a8:	lslhi	ip, r2, #1
   2f4ac:	ldrhi	lr, [sp, #8]
   2f4b0:	movls	ip, #1
   2f4b4:	ldrhhi	lr, [lr, ip]
   2f4b8:	subhi	ip, r2, lr
   2f4bc:	movhi	r2, lr
   2f4c0:	ldrb	lr, [r3, #5]
   2f4c4:	clzhi	ip, ip
   2f4c8:	lsrhi	ip, ip, #5
   2f4cc:	add	lr, r5, lr
   2f4d0:	ldrb	lr, [lr, #36]	; 0x24
   2f4d4:	tst	lr, #96	; 0x60
   2f4d8:	movne	r0, #0
   2f4dc:	tst	ip, r0
   2f4e0:	bne	2f878 <luaL_where@@Base+0xf774>
   2f4e4:	ldrh	ip, [r3, #4]
   2f4e8:	ldrb	r6, [r3, #4]
   2f4ec:	mov	r0, fp
   2f4f0:	bic	r3, ip, #64	; 0x40
   2f4f4:	strh	r3, [fp, #124]	; 0x7c
   2f4f8:	strh	r2, [fp, #122]	; 0x7a
   2f4fc:	strh	r1, [fp, #120]	; 0x78
   2f500:	bl	27498 <luaL_where@@Base+0x7394>
   2f504:	lsl	r5, r9, #1
   2f508:	ldr	r2, [sp, #20]
   2f50c:	sub	r5, r5, #65536	; 0x10000
   2f510:	ldr	ip, [pc, #2224]	; 2fdc8 <luaL_where@@Base+0xfcc4>
   2f514:	uxth	r3, r0
   2f518:	cmp	r3, r9
   2f51c:	mov	r0, r3
   2f520:	strh	r3, [r2, r5]
   2f524:	beq	2f640 <luaL_where@@Base+0xf53c>
   2f528:	ldr	r1, [sp, #4]
   2f52c:	ldr	r2, [fp, #16]
   2f530:	cmp	r1, r3
   2f534:	lsl	r1, r3, #3
   2f538:	add	lr, r2, r1
   2f53c:	bls	2f838 <luaL_where@@Base+0xf734>
   2f540:	ldr	r2, [pc, #2168]	; 2fdc0 <luaL_where@@Base+0xfcbc>
   2f544:	cmp	r3, r2
   2f548:	ldrb	r3, [lr, #4]
   2f54c:	bls	2f590 <luaL_where@@Base+0xf48c>
   2f550:	tst	r3, #64	; 0x40
   2f554:	bne	2f590 <luaL_where@@Base+0xf48c>
   2f558:	and	r2, r3, #31
   2f55c:	cmp	r2, #2
   2f560:	bls	2f590 <luaL_where@@Base+0xf48c>
   2f564:	ldr	r2, [sp, #40]	; 0x28
   2f568:	orr	r3, r3, #64	; 0x40
   2f56c:	cmp	r2, #63	; 0x3f
   2f570:	strb	r3, [lr, #4]
   2f574:	bhi	2fd8c <luaL_where@@Base+0xfc88>
   2f578:	ldr	r1, [sp, #40]	; 0x28
   2f57c:	add	r2, sp, #184	; 0xb8
   2f580:	add	r2, r2, r1, lsl #1
   2f584:	strh	r0, [r2, #-128]	; 0xffffff80
   2f588:	add	r2, r1, #1
   2f58c:	str	r2, [sp, #40]	; 0x28
   2f590:	eor	r2, r6, r3
   2f594:	tst	r2, #31
   2f598:	beq	2f640 <luaL_where@@Base+0xf53c>
   2f59c:	and	r6, r6, #31
   2f5a0:	sub	r2, r6, #15
   2f5a4:	cmp	r2, #4
   2f5a8:	bhi	2fa74 <luaL_where@@Base+0xf970>
   2f5ac:	and	r3, r3, #31
   2f5b0:	sub	r2, r3, #15
   2f5b4:	cmp	r2, #4
   2f5b8:	bls	2f640 <luaL_where@@Base+0xf53c>
   2f5bc:	cmp	r3, #14
   2f5c0:	bne	2fda8 <luaL_where@@Base+0xfca4>
   2f5c4:	ldr	r2, [pc, #2048]	; 2fdcc <luaL_where@@Base+0xfcc8>
   2f5c8:	ldr	r3, [pc, #2048]	; 2fdd0 <luaL_where@@Base+0xfccc>
   2f5cc:	strh	r0, [fp, #120]	; 0x78
   2f5d0:	strh	r2, [fp, #124]	; 0x7c
   2f5d4:	strh	r3, [fp, #122]	; 0x7a
   2f5d8:	mov	r0, fp
   2f5dc:	bl	27498 <luaL_where@@Base+0x7394>
   2f5e0:	ldr	r2, [fp, #16]
   2f5e4:	ldr	r3, [sp, #20]
   2f5e8:	uxth	r0, r0
   2f5ec:	strh	r0, [r3, r5]
   2f5f0:	add	r2, r2, r0, lsl #3
   2f5f4:	ldr	r3, [sp, #4]
   2f5f8:	ldr	r1, [pc, #1984]	; 2fdc0 <luaL_where@@Base+0xfcbc>
   2f5fc:	cmp	r3, r0
   2f600:	cmphi	r0, r1
   2f604:	bls	2f640 <luaL_where@@Base+0xf53c>
   2f608:	ldrb	r3, [r2, #4]
   2f60c:	tst	r3, #64	; 0x40
   2f610:	bne	2f640 <luaL_where@@Base+0xf53c>
   2f614:	ldr	r1, [sp, #40]	; 0x28
   2f618:	orr	r3, r3, #64	; 0x40
   2f61c:	cmp	r1, #63	; 0x3f
   2f620:	strb	r3, [r2, #4]
   2f624:	bhi	2fd8c <luaL_where@@Base+0xfc88>
   2f628:	ldr	r2, [sp, #40]	; 0x28
   2f62c:	add	r3, sp, #184	; 0xb8
   2f630:	add	r3, r3, r2, lsl #1
   2f634:	strh	r0, [r3, #-128]	; 0xffffff80
   2f638:	add	r3, r2, #1
   2f63c:	str	r3, [sp, #40]	; 0x28
   2f640:	ldr	r3, [sp, #4]
   2f644:	add	r9, r9, #1
   2f648:	cmp	r3, r9
   2f64c:	beq	2f898 <luaL_where@@Base+0xf794>
   2f650:	ldrh	r3, [r4, #2]
   2f654:	cmp	r3, r9
   2f658:	bhi	2f460 <luaL_where@@Base+0xf35c>
   2f65c:	ldrh	r3, [fp, #24]
   2f660:	ldrh	r6, [r4]
   2f664:	ldr	r8, [fp, #28]
   2f668:	ldr	r1, [fp, #32]
   2f66c:	add	r8, r8, r3, lsl #3
   2f670:	add	r2, r4, #8
   2f674:	cmp	r2, r8
   2f678:	str	r2, [sp, #32]
   2f67c:	add	r2, r1, r6, lsl #2
   2f680:	str	r2, [sp, #24]
   2f684:	ldrsb	r2, [fp, #114]	; 0x72
   2f688:	ldrhne	r5, [r4, #8]
   2f68c:	ldrheq	r5, [fp, #26]
   2f690:	str	r1, [sp, #12]
   2f694:	cmp	r2, #0
   2f698:	ldr	r1, [sp, #12]
   2f69c:	addlt	r3, r3, #1
   2f6a0:	ldrb	r6, [r4, #6]
   2f6a4:	ldrhge	r3, [r8, #-8]
   2f6a8:	add	r1, r1, r5, lsl #2
   2f6ac:	ldrb	r5, [r4, #4]
   2f6b0:	strhlt	r3, [fp, #24]
   2f6b4:	ldrhlt	r3, [fp, #26]
   2f6b8:	subge	r8, r8, #8
   2f6bc:	ldr	r2, [fp, #8]
   2f6c0:	mov	r0, #0
   2f6c4:	strb	r0, [fp, #114]	; 0x72
   2f6c8:	str	r1, [sp, #28]
   2f6cc:	strh	r3, [r8]
   2f6d0:	strh	r2, [r8, #2]
   2f6d4:	strb	r5, [r8, #4]
   2f6d8:	ldr	r1, [sp, #12]
   2f6dc:	ldrb	r2, [r4, #5]
   2f6e0:	add	lr, r1, r3, lsl #2
   2f6e4:	cmp	r6, r0
   2f6e8:	str	lr, [sp, #16]
   2f6ec:	strb	r2, [r8, #5]
   2f6f0:	strb	r0, [r8, #7]
   2f6f4:	beq	2fa9c <luaL_where@@Base+0xf998>
   2f6f8:	str	r5, [sp, #36]	; 0x24
   2f6fc:	mov	r1, r0
   2f700:	mov	r4, r0
   2f704:	ldr	r5, [sp, #24]
   2f708:	b	2f728 <luaL_where@@Base+0xf624>
   2f70c:	add	ip, ip, #4
   2f710:	cmp	r6, r4
   2f714:	str	r7, [lr]
   2f718:	add	r2, sl, ip
   2f71c:	add	r1, r1, #1
   2f720:	add	lr, lr, #4
   2f724:	bls	2f794 <luaL_where@@Base+0xf690>
   2f728:	ldr	r7, [sl, r1, lsl #2]
   2f72c:	ldr	r3, [r5, r4, lsl #2]
   2f730:	lsl	ip, r1, #2
   2f734:	lsr	r2, r7, #24
   2f738:	cmp	r2, r3, lsr #24
   2f73c:	add	r0, r0, #1
   2f740:	add	r2, sl, ip
   2f744:	bcc	2f70c <luaL_where@@Base+0xf608>
   2f748:	addeq	ip, ip, #4
   2f74c:	ldr	r7, [pc, #1644]	; 2fdc0 <luaL_where@@Base+0xfcbc>
   2f750:	addeq	r2, sl, ip
   2f754:	uxth	ip, r3
   2f758:	addeq	r1, r1, #1
   2f75c:	cmp	ip, r7
   2f760:	bls	2f780 <luaL_where@@Base+0xf67c>
   2f764:	ldr	r7, [sp, #8]
   2f768:	lsl	ip, ip, #1
   2f76c:	bic	r3, r3, #262144	; 0x40000
   2f770:	ldrh	ip, [r7, ip]
   2f774:	lsr	r3, r3, #16
   2f778:	lsl	r3, r3, #16
   2f77c:	orr	r3, ip, r3
   2f780:	add	r4, r4, #1
   2f784:	cmp	r6, r4
   2f788:	str	r3, [lr]
   2f78c:	add	lr, lr, #4
   2f790:	bhi	2f728 <luaL_where@@Base+0xf624>
   2f794:	ldr	r3, [sp, #16]
   2f798:	ldr	r5, [sp, #36]	; 0x24
   2f79c:	add	r3, r3, r0, lsl #2
   2f7a0:	ldr	r2, [r2]
   2f7a4:	cmp	r5, r2, lsr #24
   2f7a8:	bls	2f7d8 <luaL_where@@Base+0xf6d4>
   2f7ac:	sub	r3, r0, #-1073741823	; 0xc0000001
   2f7b0:	ldr	ip, [sp, #16]
   2f7b4:	add	r1, sl, r1, lsl #2
   2f7b8:	add	r3, ip, r3, lsl #2
   2f7bc:	str	r2, [r3, #4]!
   2f7c0:	ldr	r2, [r1, #4]!
   2f7c4:	add	r0, r0, #1
   2f7c8:	cmp	r5, r2, lsr #24
   2f7cc:	bhi	2f7bc <luaL_where@@Base+0xf6b8>
   2f7d0:	ldr	r3, [sp, #16]
   2f7d4:	add	r3, r3, r0, lsl #2
   2f7d8:	ldr	r2, [sp, #24]
   2f7dc:	ldr	ip, [sp, #28]
   2f7e0:	add	r6, r2, r6, lsl #2
   2f7e4:	cmp	ip, r6
   2f7e8:	strb	r0, [r8, #6]
   2f7ec:	bls	2f820 <luaL_where@@Base+0xf71c>
   2f7f0:	sub	r1, r3, #4
   2f7f4:	mov	r2, r6
   2f7f8:	ldr	r0, [r2], #4
   2f7fc:	cmp	ip, r2
   2f800:	str	r0, [r1, #4]!
   2f804:	bhi	2f7f8 <luaL_where@@Base+0xf6f4>
   2f808:	ldr	r2, [sp, #28]
   2f80c:	mvn	r6, r6
   2f810:	add	r5, r2, r6
   2f814:	bic	r5, r5, #3
   2f818:	add	r5, r5, #4
   2f81c:	add	r3, r3, r5
   2f820:	ldr	r2, [sp, #12]
   2f824:	ldr	r4, [sp, #32]
   2f828:	sub	r3, r3, r2
   2f82c:	asr	r3, r3, #2
   2f830:	strh	r3, [fp, #26]
   2f834:	b	2f460 <luaL_where@@Base+0xf35c>
   2f838:	cmp	r3, ip
   2f83c:	beq	2f640 <luaL_where@@Base+0xf53c>
   2f840:	ldrb	lr, [lr, #5]
   2f844:	ldr	ip, [sp, #4]
   2f848:	cmp	ip, r3
   2f84c:	sub	r0, lr, #90	; 0x5a
   2f850:	clz	r0, r0
   2f854:	lsr	r0, r0, #5
   2f858:	movcs	r0, #0
   2f85c:	cmp	r0, #0
   2f860:	beq	2f640 <luaL_where@@Base+0xf53c>
   2f864:	ldrh	r0, [r2, r1]
   2f868:	cmp	ip, r0
   2f86c:	bls	2f640 <luaL_where@@Base+0xf53c>
   2f870:	add	r2, r2, r0, lsl #3
   2f874:	b	2f5f4 <luaL_where@@Base+0xf4f0>
   2f878:	lsl	r3, r9, #1
   2f87c:	ldr	r2, [sp, #20]
   2f880:	sub	r3, r3, #65536	; 0x10000
   2f884:	strh	r9, [r2, r3]
   2f888:	ldr	r3, [sp, #4]
   2f88c:	add	r9, r9, #1
   2f890:	cmp	r3, r9
   2f894:	bne	2f650 <luaL_where@@Base+0xf54c>
   2f898:	ldr	sl, [sp, #8]
   2f89c:	ldr	r8, [sp, #40]	; 0x28
   2f8a0:	ldr	r6, [fp, #28]
   2f8a4:	ldr	r9, [fp, #32]
   2f8a8:	ldrsb	r3, [fp, #114]	; 0x72
   2f8ac:	cmp	r3, #0
   2f8b0:	blt	2f8d0 <luaL_where@@Base+0xf7cc>
   2f8b4:	ldrh	r3, [fp, #24]
   2f8b8:	sub	r3, r3, #1
   2f8bc:	uxth	r3, r3
   2f8c0:	strh	r3, [fp, #24]
   2f8c4:	lsl	r3, r3, #3
   2f8c8:	ldrh	r3, [r6, r3]
   2f8cc:	strh	r3, [fp, #26]
   2f8d0:	ldrb	r2, [r6, #6]
   2f8d4:	add	r3, fp, #320	; 0x140
   2f8d8:	ldr	r1, [sp, #52]	; 0x34
   2f8dc:	ldrh	r5, [r3]
   2f8e0:	ldr	r3, [r9, r2, lsl #2]
   2f8e4:	ldr	r2, [sp, #48]	; 0x30
   2f8e8:	cmp	r8, #0
   2f8ec:	str	r3, [r2, r1]
   2f8f0:	beq	2fd48 <luaL_where@@Base+0xfc44>
   2f8f4:	add	ip, sp, #56	; 0x38
   2f8f8:	add	r4, ip, r8, lsl #1
   2f8fc:	mov	r8, #0
   2f900:	ldr	r1, [fp, #16]
   2f904:	ldr	lr, [pc, #1212]	; 2fdc8 <luaL_where@@Base+0xfcc4>
   2f908:	mov	r0, ip
   2f90c:	str	r8, [sp, #8]
   2f910:	str	fp, [sp, #4]
   2f914:	b	2f930 <luaL_where@@Base+0xf82c>
   2f918:	add	r3, r1, r3, lsl #3
   2f91c:	ldrb	r2, [r3, #4]
   2f920:	bic	r2, r2, #64	; 0x40
   2f924:	strb	r2, [r3, #4]
   2f928:	cmp	r4, r0
   2f92c:	beq	2f998 <luaL_where@@Base+0xf894>
   2f930:	ldrh	r3, [r0], #2
   2f934:	lsl	r2, r3, #1
   2f938:	ldrh	r2, [sl, r2]
   2f93c:	cmp	r2, lr
   2f940:	cmpne	r3, r2
   2f944:	beq	2f918 <luaL_where@@Base+0xf814>
   2f948:	lsl	r2, r2, #3
   2f94c:	add	r7, sp, #184	; 0xb8
   2f950:	add	fp, r7, r8, lsl #1
   2f954:	ldrh	r7, [r1, r2]
   2f958:	strh	r3, [fp, #-128]	; 0xffffff80
   2f95c:	add	r2, r1, r2
   2f960:	cmp	r7, r3
   2f964:	add	r8, r8, #1
   2f968:	beq	2f928 <luaL_where@@Base+0xf824>
   2f96c:	ldrh	r2, [r2, #2]
   2f970:	cmp	r2, r3
   2f974:	beq	2f928 <luaL_where@@Base+0xf824>
   2f978:	add	r3, r1, r3, lsl #3
   2f97c:	mov	r7, #1
   2f980:	ldrb	r2, [r3, #4]
   2f984:	cmp	r4, r0
   2f988:	str	r7, [sp, #8]
   2f98c:	orr	r2, r2, #32
   2f990:	strb	r2, [r3, #4]
   2f994:	bne	2f930 <luaL_where@@Base+0xf82c>
   2f998:	ldr	r3, [sp, #8]
   2f99c:	ldr	fp, [sp, #4]
   2f9a0:	cmp	r3, #0
   2f9a4:	beq	2fd20 <luaL_where@@Base+0xfc1c>
   2f9a8:	ldr	r3, [fp, #8]
   2f9ac:	sub	r2, r3, #1
   2f9b0:	cmp	r5, r2
   2f9b4:	bcs	2fab0 <luaL_where@@Base+0xf9ac>
   2f9b8:	add	r0, r1, #8
   2f9bc:	add	r3, r1, r3, lsl #3
   2f9c0:	add	r0, r0, r5, lsl #3
   2f9c4:	b	2f9d4 <luaL_where@@Base+0xf8d0>
   2f9c8:	sub	r3, r3, #8
   2f9cc:	cmp	r0, r3
   2f9d0:	beq	2fab0 <luaL_where@@Base+0xf9ac>
   2f9d4:	ldrh	r2, [r3, #-6]
   2f9d8:	tst	r2, #32768	; 0x8000
   2f9dc:	addne	r2, r1, r2, lsl #3
   2f9e0:	ldrbne	lr, [r2, #4]
   2f9e4:	bicne	lr, lr, #32
   2f9e8:	strbne	lr, [r2, #4]
   2f9ec:	ldrh	lr, [r3, #-8]
   2f9f0:	tst	lr, #32768	; 0x8000
   2f9f4:	beq	2f9c8 <luaL_where@@Base+0xf8c4>
   2f9f8:	add	r2, r1, lr, lsl #3
   2f9fc:	cmp	r5, lr
   2fa00:	ldrb	lr, [r2, #4]
   2fa04:	bic	lr, lr, #32
   2fa08:	strb	lr, [r2, #4]
   2fa0c:	bls	2f9c8 <luaL_where@@Base+0xf8c4>
   2fa10:	ldrb	lr, [r3, #-3]
   2fa14:	sub	lr, lr, #94	; 0x5e
   2fa18:	cmp	lr, #5
   2fa1c:	bhi	2f9c8 <luaL_where@@Base+0xf8c4>
   2fa20:	ldrb	lr, [r2, #5]
   2fa24:	cmp	lr, #99	; 0x63
   2fa28:	beq	2fa4c <luaL_where@@Base+0xf948>
   2fa2c:	b	2f9c8 <luaL_where@@Base+0xf8c4>
   2fa30:	add	r2, r1, r2, lsl #3
   2fa34:	ldrb	lr, [r2, #4]
   2fa38:	ldrb	r4, [r2, #5]
   2fa3c:	bic	lr, lr, #32
   2fa40:	cmp	r4, #99	; 0x63
   2fa44:	strb	lr, [r2, #4]
   2fa48:	bne	2f9c8 <luaL_where@@Base+0xf8c4>
   2fa4c:	ldrh	lr, [r2, #2]
   2fa50:	ldrh	r2, [r2]
   2fa54:	tst	lr, #32768	; 0x8000
   2fa58:	addne	lr, r1, lr, lsl #3
   2fa5c:	ldrbne	r4, [lr, #4]
   2fa60:	bicne	r4, r4, #32
   2fa64:	strbne	r4, [lr, #4]
   2fa68:	tst	r2, #32768	; 0x8000
   2fa6c:	bne	2fa30 <luaL_where@@Base+0xf92c>
   2fa70:	b	2f9c8 <luaL_where@@Base+0xf8c4>
   2fa74:	cmp	r6, #14
   2fa78:	bne	2fda8 <luaL_where@@Base+0xfca4>
   2fa7c:	and	r3, r3, #31
   2fa80:	sub	r3, r3, #15
   2fa84:	cmp	r3, #4
   2fa88:	bhi	2fda8 <luaL_where@@Base+0xfca4>
   2fa8c:	ldr	r2, [pc, #832]	; 2fdd4 <luaL_where@@Base+0xfcd0>
   2fa90:	strh	r0, [fp, #120]	; 0x78
   2fa94:	ldr	r3, [pc, #828]	; 2fdd8 <luaL_where@@Base+0xfcd4>
   2fa98:	b	2f5d0 <luaL_where@@Base+0xf4cc>
   2fa9c:	ldr	r3, [sp, #16]
   2faa0:	mov	r2, sl
   2faa4:	mov	r0, r6
   2faa8:	mov	r1, r6
   2faac:	b	2f7a0 <luaL_where@@Base+0xf69c>
   2fab0:	ldrh	r3, [fp, #24]
   2fab4:	ldr	r2, [sp, #44]	; 0x2c
   2fab8:	sub	r7, r3, #1
   2fabc:	cmp	r2, r7
   2fac0:	bhi	2fb44 <luaL_where@@Base+0xfa40>
   2fac4:	add	r6, r6, r3, lsl #3
   2fac8:	ldr	r4, [pc, #752]	; 2fdc0 <luaL_where@@Base+0xfcbc>
   2facc:	sub	r3, r9, #4
   2fad0:	str	fp, [sp, #4]
   2fad4:	str	ip, [sp, #12]
   2fad8:	mov	fp, r2
   2fadc:	mov	ip, r3
   2fae0:	ldrh	r2, [r6, #-8]
   2fae4:	ldrb	lr, [r6, #-2]
   2fae8:	cmp	lr, #0
   2faec:	lsl	r2, r2, #2
   2faf0:	beq	2fb2c <luaL_where@@Base+0xfa28>
   2faf4:	mov	r0, #4
   2faf8:	add	r3, ip, r2
   2fafc:	smlabb	lr, r0, lr, r3
   2fb00:	sub	r2, r2, #4
   2fb04:	add	r2, r9, r2
   2fb08:	ldr	r3, [r2, #4]!
   2fb0c:	uxth	r3, r3
   2fb10:	cmp	r3, r4
   2fb14:	addhi	r3, r1, r3, lsl #3
   2fb18:	ldrbhi	r0, [r3, #4]
   2fb1c:	bichi	r0, r0, #32
   2fb20:	strbhi	r0, [r3, #4]
   2fb24:	cmp	lr, r2
   2fb28:	bne	2fb08 <luaL_where@@Base+0xfa04>
   2fb2c:	sub	r7, r7, #1
   2fb30:	cmp	fp, r7
   2fb34:	sub	r6, r6, #8
   2fb38:	bls	2fae0 <luaL_where@@Base+0xf9dc>
   2fb3c:	ldr	fp, [sp, #4]
   2fb40:	ldr	ip, [sp, #12]
   2fb44:	ldr	r3, [fp, #108]	; 0x6c
   2fb48:	ldr	r9, [fp, #104]	; 0x68
   2fb4c:	add	r3, r3, r9
   2fb50:	cmp	r3, #1
   2fb54:	str	r3, [sp, #4]
   2fb58:	bls	2fc44 <luaL_where@@Base+0xfb40>
   2fb5c:	ldr	r6, [pc, #604]	; 2fdc0 <luaL_where@@Base+0xfcbc>
   2fb60:	add	r9, fp, #488	; 0x1e8
   2fb64:	mov	r7, #1
   2fb68:	ldr	r3, [r9, #4]!
   2fb6c:	uxth	r3, r3
   2fb70:	cmp	r3, r6
   2fb74:	bls	2fc24 <luaL_where@@Base+0xfb20>
   2fb78:	lsl	r2, r3, #1
   2fb7c:	add	lr, sl, r2
   2fb80:	ldrh	r2, [sl, r2]
   2fb84:	cmp	r3, r2
   2fb88:	beq	2fc24 <luaL_where@@Base+0xfb20>
   2fb8c:	ldr	r4, [fp, #16]
   2fb90:	add	r0, r4, r3, lsl #3
   2fb94:	ldrb	r2, [r0, #4]
   2fb98:	and	r1, r2, #223	; 0xdf
   2fb9c:	tst	r2, #64	; 0x40
   2fba0:	strb	r1, [r0, #4]
   2fba4:	bne	2fc24 <luaL_where@@Base+0xfb20>
   2fba8:	and	r2, r2, #31
   2fbac:	cmp	r2, #2
   2fbb0:	bls	2fc24 <luaL_where@@Base+0xfb20>
   2fbb4:	add	r2, sp, #56	; 0x38
   2fbb8:	add	ip, r2, r8, lsl #1
   2fbbc:	b	2fc00 <luaL_where@@Base+0xfafc>
   2fbc0:	cmp	r3, r6
   2fbc4:	bls	2fc24 <luaL_where@@Base+0xfb20>
   2fbc8:	lsl	r2, r3, #1
   2fbcc:	add	lr, sl, r2
   2fbd0:	ldrh	r2, [sl, r2]
   2fbd4:	cmp	r3, r2
   2fbd8:	beq	2fc24 <luaL_where@@Base+0xfb20>
   2fbdc:	add	r0, r4, r3, lsl #3
   2fbe0:	ldrb	r2, [r0, #4]
   2fbe4:	and	r1, r2, #223	; 0xdf
   2fbe8:	tst	r2, #64	; 0x40
   2fbec:	strb	r1, [r0, #4]
   2fbf0:	bne	2fc24 <luaL_where@@Base+0xfb20>
   2fbf4:	and	r2, r2, #31
   2fbf8:	cmp	r2, #2
   2fbfc:	bls	2fc24 <luaL_where@@Base+0xfb20>
   2fc00:	orr	r1, r1, #64	; 0x40
   2fc04:	cmp	r8, #63	; 0x3f
   2fc08:	strb	r1, [r0, #4]
   2fc0c:	bhi	2fd8c <luaL_where@@Base+0xfc88>
   2fc10:	strh	r3, [ip], #2
   2fc14:	ldrh	r3, [lr]
   2fc18:	add	r8, r8, #1
   2fc1c:	cmp	r5, r3
   2fc20:	bcs	2fbc0 <luaL_where@@Base+0xfabc>
   2fc24:	ldr	r3, [sp, #4]
   2fc28:	add	r7, r7, #1
   2fc2c:	cmp	r3, r7
   2fc30:	bhi	2fb68 <luaL_where@@Base+0xfa64>
   2fc34:	ldr	r3, [sp, #8]
   2fc38:	cmp	r3, #0
   2fc3c:	addne	ip, sp, #56	; 0x38
   2fc40:	beq	2fd38 <luaL_where@@Base+0xfc34>
   2fc44:	add	lr, ip, r8, lsl #1
   2fc48:	cmp	r8, #0
   2fc4c:	beq	2fd14 <luaL_where@@Base+0xfc10>
   2fc50:	ldr	r1, [fp, #16]
   2fc54:	mov	r2, ip
   2fc58:	mov	r4, #0
   2fc5c:	ldrh	r3, [r2], #2
   2fc60:	add	r0, r1, r3, lsl #3
   2fc64:	ldrb	r0, [r0, #4]
   2fc68:	tst	r0, #32
   2fc6c:	bne	2fc90 <luaL_where@@Base+0xfb8c>
   2fc70:	lsl	r3, r3, #1
   2fc74:	ldrh	r3, [sl, r3]
   2fc78:	add	r3, r1, r3, lsl #3
   2fc7c:	ldrb	r0, [r3, #4]
   2fc80:	tst	r0, #32
   2fc84:	movne	r4, #1
   2fc88:	bicne	r0, r0, #32
   2fc8c:	strbne	r0, [r3, #4]
   2fc90:	cmp	lr, r2
   2fc94:	bne	2fc5c <luaL_where@@Base+0xfb58>
   2fc98:	cmp	r4, #0
   2fc9c:	bne	2fc48 <luaL_where@@Base+0xfb44>
   2fca0:	add	r6, sp, #54	; 0x36
   2fca4:	mov	r4, #0
   2fca8:	b	2fcb0 <luaL_where@@Base+0xfbac>
   2fcac:	ldr	r1, [fp, #16]
   2fcb0:	ldrh	r2, [r6, #2]!
   2fcb4:	add	r0, r1, r2, lsl #3
   2fcb8:	ldrb	r3, [r0, #4]
   2fcbc:	tst	r3, #32
   2fcc0:	bicne	r3, r3, #96	; 0x60
   2fcc4:	strbne	r3, [r0, #4]
   2fcc8:	bne	2fd08 <luaL_where@@Base+0xfc04>
   2fccc:	lsl	ip, r2, #1
   2fcd0:	ldrh	ip, [sl, ip]
   2fcd4:	cmp	r5, ip
   2fcd8:	addcc	r1, r1, ip, lsl #3
   2fcdc:	ldrbcc	r3, [r1, #4]
   2fce0:	orrcc	r3, r3, #64	; 0x40
   2fce4:	strbcc	r3, [r1, #4]
   2fce8:	ldrbcc	r3, [r0, #4]
   2fcec:	strh	r2, [fp, #120]	; 0x78
   2fcf0:	strh	ip, [fp, #122]	; 0x7a
   2fcf4:	and	r3, r3, #31
   2fcf8:	orr	r3, r3, #4864	; 0x1300
   2fcfc:	strh	r3, [fp, #124]	; 0x7c
   2fd00:	mov	r0, fp
   2fd04:	bl	25258 <luaL_where@@Base+0x5154>
   2fd08:	add	r4, r4, #1
   2fd0c:	cmp	r4, r8
   2fd10:	bcc	2fcac <luaL_where@@Base+0xfba8>
   2fd14:	mov	r0, #0
   2fd18:	add	sp, sp, #188	; 0xbc
   2fd1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fd20:	ldr	r3, [fp, #108]	; 0x6c
   2fd24:	ldr	r9, [fp, #104]	; 0x68
   2fd28:	add	r3, r3, r9
   2fd2c:	cmp	r3, #1
   2fd30:	str	r3, [sp, #4]
   2fd34:	bhi	2fb5c <luaL_where@@Base+0xfa58>
   2fd38:	cmp	r8, #0
   2fd3c:	beq	2fd14 <luaL_where@@Base+0xfc10>
   2fd40:	ldr	r1, [fp, #16]
   2fd44:	b	2fca0 <luaL_where@@Base+0xfb9c>
   2fd48:	ldr	r3, [fp, #104]	; 0x68
   2fd4c:	ldr	r9, [fp, #108]	; 0x6c
   2fd50:	add	r3, r3, r9
   2fd54:	cmp	r3, #1
   2fd58:	str	r3, [sp, #4]
   2fd5c:	strhi	r8, [sp, #8]
   2fd60:	bhi	2fb5c <luaL_where@@Base+0xfa58>
   2fd64:	b	2fd14 <luaL_where@@Base+0xfc10>
   2fd68:	mov	r0, fp
   2fd6c:	bl	2e110 <luaL_where@@Base+0xe00c>
   2fd70:	ldr	r6, [fp, #28]
   2fd74:	add	r3, r6, r4
   2fd78:	ldrb	r2, [r3, #6]
   2fd7c:	b	2f414 <luaL_where@@Base+0xf310>
   2fd80:	mov	r0, fp
   2fd84:	bl	25174 <luaL_where@@Base+0x5070>
   2fd88:	b	2f3e0 <luaL_where@@Base+0xf2dc>
   2fd8c:	add	r1, fp, #2336	; 0x920
   2fd90:	add	r1, r1, #12
   2fd94:	ldr	r0, [fp, #80]	; 0x50
   2fd98:	mov	r2, #25
   2fd9c:	bl	210d0 <luaL_where@@Base+0xfcc>
   2fda0:	mov	r8, #0
   2fda4:	b	2f8a8 <luaL_where@@Base+0xf7a4>
   2fda8:	add	r1, fp, #2336	; 0x920
   2fdac:	add	r1, r1, #12
   2fdb0:	ldr	r0, [fp, #80]	; 0x50
   2fdb4:	mov	r2, #26
   2fdb8:	bl	210d0 <luaL_where@@Base+0xfcc>
   2fdbc:	andeq	r8, r0, r1
   2fdc0:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   2fdc4:			; <UNDEFINED> instruction: 0x0006ecb8
   2fdc8:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   2fdcc:	muleq	r0, r3, sl
   2fdd0:	andeq	r3, r0, lr, ror #4
   2fdd4:	andeq	r5, r0, lr, lsl #20
   2fdd8:	ldrdeq	r0, [r0], -r3
   2fddc:	push	{r4, r5, r6, r7, r8, lr}
   2fde0:	mov	r4, r1
   2fde4:	ldr	ip, [r1, #20]
   2fde8:	ldr	r6, [r1, #8]
   2fdec:	ldrh	r1, [r1, #24]
   2fdf0:	ldrh	r3, [r4, #26]
   2fdf4:	sub	r6, r6, ip
   2fdf8:	mov	r2, #0
   2fdfc:	lsl	r6, r6, #3
   2fe00:	add	r3, r3, r1, lsl #1
   2fe04:	add	r1, r6, #80	; 0x50
   2fe08:	add	r3, r1, r3, lsl #2
   2fe0c:	mov	r1, r2
   2fe10:	bl	205b0 <luaL_where@@Base+0x4ac>
   2fe14:	mov	r3, #2304	; 0x900
   2fe18:	strh	r3, [r0, #4]
   2fe1c:	ldr	r3, [r4, #20]
   2fe20:	mov	r5, r0
   2fe24:	add	r0, r0, #80	; 0x50
   2fe28:	ldr	r7, [r4, #8]
   2fe2c:	ldrh	lr, [r4, #24]
   2fe30:	ldrh	ip, [r4, #26]
   2fe34:	sub	r2, r0, r3, lsl #3
   2fe38:	str	r3, [r5, #20]
   2fe3c:	ldr	r1, [r4, #20]
   2fe40:	str	r2, [r5, #16]
   2fe44:	ldr	r3, [r4, #16]
   2fe48:	mov	r4, #0
   2fe4c:	mov	r2, r6
   2fe50:	str	r7, [r5, #8]
   2fe54:	strh	r4, [r5, #64]	; 0x40
   2fe58:	strh	lr, [r5, #24]
   2fe5c:	strh	ip, [r5, #26]
   2fe60:	add	r1, r3, r1, lsl #3
   2fe64:	bl	12cb8 <memcpy@plt>
   2fe68:	mov	r0, r5
   2fe6c:	pop	{r4, r5, r6, r7, r8, pc}
   2fe70:	push	{r4, r5, r6, lr}
   2fe74:	mov	r5, r2
   2fe78:	mov	r2, #0
   2fe7c:	mov	r4, r1
   2fe80:	add	r3, r1, #24
   2fe84:	mov	r1, r2
   2fe88:	mov	r6, r0
   2fe8c:	bl	205b0 <luaL_where@@Base+0x4ac>
   2fe90:	ldr	r1, [r6, #8]
   2fe94:	mov	ip, #0
   2fe98:	mov	lr, #12
   2fe9c:	ldrb	r2, [r1, #28]
   2fea0:	and	r2, r2, #3
   2fea4:	strb	lr, [r0, #5]
   2fea8:	strb	ip, [r0, #6]
   2feac:	ldr	r1, [r1, #116]	; 0x74
   2feb0:	str	r5, [r0, #8]
   2feb4:	str	r4, [r0, #12]
   2feb8:	str	ip, [r0, #16]
   2febc:	ldr	ip, [r1]
   2fec0:	strb	r2, [r0, #4]
   2fec4:	str	ip, [r0]
   2fec8:	str	r0, [r1]
   2fecc:	pop	{r4, r5, r6, pc}
   2fed0:	push	{r4, r5, r6, r7, r8, lr}
   2fed4:	mov	r4, #1
   2fed8:	cmp	r3, #3
   2fedc:	lsl	r4, r4, r3
   2fee0:	movls	r7, #16
   2fee4:	addhi	r3, r4, #8
   2fee8:	mov	r6, r2
   2feec:	movls	r3, r7
   2fef0:	mov	r2, #0
   2fef4:	uxthhi	r7, r3
   2fef8:	mov	r5, r1
   2fefc:	add	r3, r3, r6
   2ff00:	mov	r1, r2
   2ff04:	mov	r8, r0
   2ff08:	bl	205b0 <luaL_where@@Base+0x4ac>
   2ff0c:	ldr	r1, [r8, #8]
   2ff10:	add	r2, r4, #15
   2ff14:	rsb	r4, r4, #0
   2ff18:	add	r2, r0, r2
   2ff1c:	and	r4, r4, r2
   2ff20:	sub	r3, r4, #8
   2ff24:	ldr	r2, [r1, #36]	; 0x24
   2ff28:	sub	r0, r3, r0
   2ff2c:	strh	r0, [r4, #-16]
   2ff30:	strh	r7, [r4, #-14]
   2ff34:	str	r6, [r4, #-12]
   2ff38:	str	r2, [r4, #-8]
   2ff3c:	ldrb	r2, [r1, #28]
   2ff40:	mov	r0, #10
   2ff44:	str	r3, [r1, #36]	; 0x24
   2ff48:	and	r2, r2, #3
   2ff4c:	strb	r0, [r4, #-3]
   2ff50:	mvn	r2, r2, lsl #25
   2ff54:	strh	r5, [r4, #-2]
   2ff58:	mvn	r2, r2, lsr #25
   2ff5c:	strb	r2, [r4, #-4]
   2ff60:	mov	r0, r3
   2ff64:	pop	{r4, r5, r6, r7, r8, pc}
   2ff68:	ldr	r2, [pc, #56]	; 2ffa8 <luaL_where@@Base+0xfea4>
   2ff6c:	ldr	r3, [r0]
   2ff70:	ldr	ip, [r0, #8]
   2ff74:	cmp	r1, r2
   2ff78:	push	{r4, lr}
   2ff7c:	sub	r3, r3, ip
   2ff80:	mov	r4, r0
   2ff84:	bhi	2ffa0 <luaL_where@@Base+0xfe9c>
   2ff88:	add	r1, r3, r1
   2ff8c:	cmp	r1, r2
   2ff90:	bhi	2ffa0 <luaL_where@@Base+0xfe9c>
   2ff94:	bl	250ac <luaL_where@@Base+0x4fa8>
   2ff98:	ldr	r0, [r4]
   2ff9c:	pop	{r4, pc}
   2ffa0:	ldr	r0, [r4, #12]
   2ffa4:	bl	20564 <luaL_where@@Base+0x460>
   2ffa8:	svcvc	0x00ffff00
   2ffac:	push	{r4, r5, r6, lr}
   2ffb0:	mov	r5, r2
   2ffb4:	ldr	r3, [r0]
   2ffb8:	ldr	r2, [r0, #4]
   2ffbc:	mov	r4, r0
   2ffc0:	sub	r2, r2, r3
   2ffc4:	cmp	r5, r2
   2ffc8:	mov	r6, r1
   2ffcc:	bhi	2fff0 <luaL_where@@Base+0xfeec>
   2ffd0:	mov	r1, r6
   2ffd4:	mov	r2, r5
   2ffd8:	mov	r0, r3
   2ffdc:	bl	12cb8 <memcpy@plt>
   2ffe0:	add	r3, r0, r5
   2ffe4:	str	r3, [r4]
   2ffe8:	mov	r0, r4
   2ffec:	pop	{r4, r5, r6, pc}
   2fff0:	mov	r1, r5
   2fff4:	bl	2ff68 <luaL_where@@Base+0xfe64>
   2fff8:	mov	r3, r0
   2fffc:	b	2ffd0 <luaL_where@@Base+0xfecc>
   30000:	push	{r4, lr}
   30004:	mov	r0, r3
   30008:	bl	2ffac <luaL_where@@Base+0xfea8>
   3000c:	mov	r0, #0
   30010:	pop	{r4, pc}
   30014:	ldr	r3, [r0]
   30018:	ldr	r2, [r0, #4]
   3001c:	push	{r4, r5, r6, lr}
   30020:	cmp	r2, r3
   30024:	mov	r4, r0
   30028:	mov	r5, r1
   3002c:	beq	30040 <luaL_where@@Base+0xff3c>
   30030:	strb	r5, [r3], #1
   30034:	mov	r0, r4
   30038:	str	r3, [r4]
   3003c:	pop	{r4, r5, r6, pc}
   30040:	mov	r1, #1
   30044:	bl	2ff68 <luaL_where@@Base+0xfe64>
   30048:	mov	r3, r0
   3004c:	b	30030 <luaL_where@@Base+0xff2c>
   30050:	ldr	r3, [r0]
   30054:	ldr	r2, [r0, #4]
   30058:	push	{r4, r5, r6, lr}
   3005c:	sub	r2, r2, r3
   30060:	ldr	r5, [r1, #12]
   30064:	mov	r4, r0
   30068:	cmp	r5, r2
   3006c:	mov	r6, r1
   30070:	bhi	30094 <luaL_where@@Base+0xff90>
   30074:	add	r1, r6, #16
   30078:	mov	r2, r5
   3007c:	mov	r0, r3
   30080:	bl	12cb8 <memcpy@plt>
   30084:	add	r3, r0, r5
   30088:	str	r3, [r4]
   3008c:	mov	r0, r4
   30090:	pop	{r4, r5, r6, pc}
   30094:	mov	r1, r5
   30098:	bl	2ff68 <luaL_where@@Base+0xfe64>
   3009c:	mov	r3, r0
   300a0:	b	30074 <luaL_where@@Base+0xff70>
   300a4:	ldr	r3, [r0]
   300a8:	ldr	r2, [r0, #4]
   300ac:	push	{r4, r5, r6, lr}
   300b0:	sub	r2, r2, r3
   300b4:	ldr	r4, [r1, #12]
   300b8:	mov	r6, r0
   300bc:	cmp	r4, r2
   300c0:	mov	r5, r1
   300c4:	movls	r0, r3
   300c8:	bhi	30108 <luaL_where@@Base+0x10004>
   300cc:	add	ip, r0, r4
   300d0:	add	r3, r4, #15
   300d4:	cmp	ip, r0
   300d8:	add	r3, r5, r3
   300dc:	bls	300fc <luaL_where@@Base+0xfff8>
   300e0:	sub	r0, r0, #1
   300e4:	add	r1, r5, #15
   300e8:	ldrb	r2, [r3], #-1
   300ec:	cmp	r3, r1
   300f0:	strb	r2, [r0, #1]!
   300f4:	bne	300e8 <luaL_where@@Base+0xffe4>
   300f8:	mov	r0, ip
   300fc:	str	r0, [r6]
   30100:	mov	r0, r6
   30104:	pop	{r4, r5, r6, pc}
   30108:	mov	r1, r4
   3010c:	bl	2ff68 <luaL_where@@Base+0xfe64>
   30110:	b	300cc <luaL_where@@Base+0xffc8>
   30114:	ldr	r3, [r0]
   30118:	ldr	r2, [r0, #4]
   3011c:	push	{r4, r5, r6, lr}
   30120:	sub	r2, r2, r3
   30124:	ldr	r5, [r1, #12]
   30128:	mov	r6, r0
   3012c:	cmp	r5, r2
   30130:	mov	r4, r1
   30134:	movls	r0, r3
   30138:	bhi	30178 <luaL_where@@Base+0x10074>
   3013c:	add	r2, r0, r5
   30140:	cmp	r2, r0
   30144:	bls	3016c <luaL_where@@Base+0x10068>
   30148:	add	r1, r4, #15
   3014c:	ldrb	r3, [r1, #1]!
   30150:	sub	ip, r3, #65	; 0x41
   30154:	cmp	ip, #25
   30158:	addls	r3, r3, #32
   3015c:	strb	r3, [r0], #1
   30160:	cmp	r2, r0
   30164:	bne	3014c <luaL_where@@Base+0x10048>
   30168:	mov	r0, r2
   3016c:	str	r0, [r6]
   30170:	mov	r0, r6
   30174:	pop	{r4, r5, r6, pc}
   30178:	mov	r1, r5
   3017c:	bl	2ff68 <luaL_where@@Base+0xfe64>
   30180:	b	3013c <luaL_where@@Base+0x10038>
   30184:	ldr	r3, [r0]
   30188:	ldr	r2, [r0, #4]
   3018c:	push	{r4, r5, r6, lr}
   30190:	sub	r2, r2, r3
   30194:	ldr	r5, [r1, #12]
   30198:	mov	r6, r0
   3019c:	cmp	r5, r2
   301a0:	mov	r4, r1
   301a4:	movls	r0, r3
   301a8:	bhi	301e8 <luaL_where@@Base+0x100e4>
   301ac:	add	r2, r0, r5
   301b0:	cmp	r2, r0
   301b4:	bls	301dc <luaL_where@@Base+0x100d8>
   301b8:	add	r1, r4, #15
   301bc:	ldrb	r3, [r1, #1]!
   301c0:	sub	ip, r3, #97	; 0x61
   301c4:	cmp	ip, #25
   301c8:	subls	r3, r3, #32
   301cc:	strb	r3, [r0], #1
   301d0:	cmp	r2, r0
   301d4:	bne	301bc <luaL_where@@Base+0x100b8>
   301d8:	mov	r0, r2
   301dc:	str	r0, [r6]
   301e0:	mov	r0, r6
   301e4:	pop	{r4, r5, r6, pc}
   301e8:	mov	r1, r5
   301ec:	bl	2ff68 <luaL_where@@Base+0xfe64>
   301f0:	b	301ac <luaL_where@@Base+0x100a8>
   301f4:	ldr	r3, [r0]
   301f8:	ldr	r2, [r0, #4]
   301fc:	push	{r4, r5, r6, lr}
   30200:	sub	r2, r2, r3
   30204:	cmp	r2, #10
   30208:	mov	r4, r0
   3020c:	mov	r5, r1
   30210:	movhi	r0, r3
   30214:	bls	3022c <luaL_where@@Base+0x10128>
   30218:	mov	r1, r5
   3021c:	bl	14d4c <_start@@Base+0x199c>
   30220:	str	r0, [r4]
   30224:	mov	r0, r4
   30228:	pop	{r4, r5, r6, pc}
   3022c:	mov	r1, #11
   30230:	bl	2ff68 <luaL_where@@Base+0xfe64>
   30234:	b	30218 <luaL_where@@Base+0x10114>
   30238:	ldr	r3, [r0]
   3023c:	ldr	r2, [r0, #4]
   30240:	push	{r4, r5, r6, lr}
   30244:	sub	r2, r2, r3
   30248:	cmp	r2, #9
   3024c:	mov	r4, r0
   30250:	mov	r5, r1
   30254:	movhi	r0, r3
   30258:	bls	30270 <luaL_where@@Base+0x1016c>
   3025c:	mov	r1, r5
   30260:	bl	1b3d8 <_start@@Base+0x8028>
   30264:	str	r0, [r4]
   30268:	mov	r0, r4
   3026c:	pop	{r4, r5, r6, pc}
   30270:	mov	r1, #10
   30274:	bl	2ff68 <luaL_where@@Base+0xfe64>
   30278:	b	3025c <luaL_where@@Base+0x10158>
   3027c:	ldr	r3, [r0]
   30280:	ldr	r2, [r0, #4]
   30284:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   30288:	cmp	r2, r3
   3028c:	mov	r5, r0
   30290:	mov	r7, r1
   30294:	add	r6, r1, #16
   30298:	ldr	r4, [r1, #12]
   3029c:	movne	r0, r3
   302a0:	beq	303f8 <luaL_where@@Base+0x102f4>
   302a4:	mov	r3, #34	; 0x22
   302a8:	cmp	r4, #0
   302ac:	strb	r3, [r0], #1
   302b0:	str	r0, [r5]
   302b4:	beq	30384 <luaL_where@@Base+0x10280>
   302b8:	add	r4, r4, #16
   302bc:	ldr	r9, [pc, #320]	; 30404 <luaL_where@@Base+0x10300>
   302c0:	add	r7, r7, r4
   302c4:	mov	r8, #92	; 0x5c
   302c8:	b	302e8 <luaL_where@@Base+0x101e4>
   302cc:	mov	r3, r0
   302d0:	strb	r8, [r3], #2
   302d4:	cmp	r6, r7
   302d8:	strb	r4, [r2]
   302dc:	mov	r0, r3
   302e0:	str	r3, [r5]
   302e4:	beq	30384 <luaL_where@@Base+0x10280>
   302e8:	ldr	r3, [r5, #4]
   302ec:	ldrb	r4, [r6], #1
   302f0:	sub	r3, r3, r0
   302f4:	cmp	r3, #3
   302f8:	bls	303a4 <luaL_where@@Base+0x102a0>
   302fc:	cmp	r4, #92	; 0x5c
   30300:	cmpne	r4, #34	; 0x22
   30304:	moveq	r3, #1
   30308:	movne	r3, #0
   3030c:	cmp	r4, #10
   30310:	orreq	r3, r3, #1
   30314:	cmp	r3, #0
   30318:	add	r2, r0, #1
   3031c:	bne	302cc <luaL_where@@Base+0x101c8>
   30320:	add	r3, r9, r4
   30324:	ldrb	r3, [r3, #189]	; 0xbd
   30328:	tst	r3, #1
   3032c:	moveq	r3, r2
   30330:	moveq	r2, r0
   30334:	beq	302d4 <luaL_where@@Base+0x101d0>
   30338:	cmp	r4, #99	; 0x63
   3033c:	strb	r8, [r0]
   30340:	bls	303b4 <luaL_where@@Base+0x102b0>
   30344:	mov	r3, #49	; 0x31
   30348:	strb	r3, [r0, #1]
   3034c:	sub	r4, r4, #100	; 0x64
   30350:	add	r0, r0, #2
   30354:	add	r3, r4, r4, lsl #2
   30358:	add	r2, r0, #1
   3035c:	add	r3, r4, r3, lsl #3
   30360:	add	r3, r3, r3, lsl #2
   30364:	lsr	r3, r3, #11
   30368:	add	r1, r3, r3, lsl #2
   3036c:	add	r3, r3, #48	; 0x30
   30370:	sub	r4, r4, r1, lsl #1
   30374:	strb	r3, [r0]
   30378:	add	r4, r4, #48	; 0x30
   3037c:	add	r3, r2, #1
   30380:	b	302d4 <luaL_where@@Base+0x101d0>
   30384:	ldr	r3, [r5, #4]
   30388:	cmp	r3, r0
   3038c:	beq	303e8 <luaL_where@@Base+0x102e4>
   30390:	mov	r3, #34	; 0x22
   30394:	strb	r3, [r0], #1
   30398:	str	r0, [r5]
   3039c:	mov	r0, r5
   303a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   303a4:	mov	r1, #4
   303a8:	mov	r0, r5
   303ac:	bl	2ff68 <luaL_where@@Base+0xfe64>
   303b0:	b	302fc <luaL_where@@Base+0x101f8>
   303b4:	ldrb	r3, [r6]
   303b8:	add	r3, r9, r3
   303bc:	ldrb	r3, [r3, #189]	; 0xbd
   303c0:	tst	r3, #8
   303c4:	bne	303d8 <luaL_where@@Base+0x102d4>
   303c8:	cmp	r4, #9
   303cc:	bls	30378 <luaL_where@@Base+0x10274>
   303d0:	mov	r0, r2
   303d4:	b	30354 <luaL_where@@Base+0x10250>
   303d8:	mov	r3, #48	; 0x30
   303dc:	strb	r3, [r0, #1]
   303e0:	add	r0, r0, #2
   303e4:	b	30354 <luaL_where@@Base+0x10250>
   303e8:	mov	r1, #1
   303ec:	mov	r0, r5
   303f0:	bl	2ff68 <luaL_where@@Base+0xfe64>
   303f4:	b	30390 <luaL_where@@Base+0x1028c>
   303f8:	mov	r1, #1
   303fc:	bl	2ff68 <luaL_where@@Base+0xfe64>
   30400:	b	302a4 <luaL_where@@Base+0x101a0>
   30404:			; <UNDEFINED> instruction: 0x0006ecb8
   30408:	push	{r4, r5, r6, lr}
   3040c:	lsr	r4, r1, #16
   30410:	ldr	r3, [r0]
   30414:	uxtb	r4, r4
   30418:	ldr	ip, [r0, #4]
   3041c:	cmp	r4, #1
   30420:	mov	r5, r1
   30424:	sub	ip, ip, r3
   30428:	movcs	r1, r4
   3042c:	movcc	r1, #1
   30430:	cmp	r1, ip
   30434:	mov	r6, r0
   30438:	sub	sp, sp, #8
   3043c:	movls	r0, r3
   30440:	bhi	3049c <luaL_where@@Base+0x10398>
   30444:	ands	r5, r5, #256	; 0x100
   30448:	beq	30490 <luaL_where@@Base+0x1038c>
   3044c:	cmp	r4, #1
   30450:	strb	r2, [r0]
   30454:	add	r0, r0, #1
   30458:	bls	30480 <luaL_where@@Base+0x1037c>
   3045c:	mov	r3, #32
   30460:	sub	r4, r4, #1
   30464:	cmp	r4, #1
   30468:	strb	r3, [r0], #1
   3046c:	bne	30460 <luaL_where@@Base+0x1035c>
   30470:	cmp	r5, #0
   30474:	bne	30480 <luaL_where@@Base+0x1037c>
   30478:	strb	r2, [r0]
   3047c:	add	r0, r0, #1
   30480:	str	r0, [r6]
   30484:	mov	r0, r6
   30488:	add	sp, sp, #8
   3048c:	pop	{r4, r5, r6, pc}
   30490:	cmp	r4, #1
   30494:	bhi	3045c <luaL_where@@Base+0x10358>
   30498:	b	30478 <luaL_where@@Base+0x10374>
   3049c:	str	r2, [sp, #4]
   304a0:	bl	2ff68 <luaL_where@@Base+0xfe64>
   304a4:	ldr	r2, [sp, #4]
   304a8:	b	30444 <luaL_where@@Base+0x10340>
   304ac:	push	{r4, r5, r6, r7, r8, lr}
   304b0:	lsr	r5, r1, #24
   304b4:	ldr	r3, [r2, #12]
   304b8:	sub	r5, r5, #1
   304bc:	lsr	r4, r1, #16
   304c0:	cmp	r5, r3
   304c4:	movcs	r5, r3
   304c8:	uxtb	r4, r4
   304cc:	mov	r7, r2
   304d0:	ldr	r3, [r0]
   304d4:	ldr	r2, [r0, #4]
   304d8:	cmp	r5, r4
   304dc:	mov	r6, r1
   304e0:	sub	r2, r2, r3
   304e4:	movcs	r1, r5
   304e8:	movcc	r1, r4
   304ec:	cmp	r1, r2
   304f0:	mov	r8, r0
   304f4:	bhi	30568 <luaL_where@@Base+0x10464>
   304f8:	ands	r6, r6, #256	; 0x100
   304fc:	bne	30548 <luaL_where@@Base+0x10444>
   30500:	cmp	r5, r4
   30504:	bcs	30530 <luaL_where@@Base+0x1042c>
   30508:	mov	r2, #32
   3050c:	sub	r4, r4, #1
   30510:	cmp	r5, r4
   30514:	strb	r2, [r3], #1
   30518:	bcc	3050c <luaL_where@@Base+0x10408>
   3051c:	cmp	r6, #0
   30520:	beq	30530 <luaL_where@@Base+0x1042c>
   30524:	str	r3, [r8]
   30528:	mov	r0, r8
   3052c:	pop	{r4, r5, r6, r7, r8, pc}
   30530:	mov	r0, r3
   30534:	add	r1, r7, #16
   30538:	mov	r2, r5
   3053c:	bl	12cb8 <memcpy@plt>
   30540:	add	r3, r0, r5
   30544:	b	30524 <luaL_where@@Base+0x10420>
   30548:	mov	r0, r3
   3054c:	mov	r2, r5
   30550:	add	r1, r7, #16
   30554:	bl	12cb8 <memcpy@plt>
   30558:	cmp	r5, r4
   3055c:	add	r3, r0, r5
   30560:	bcc	30508 <luaL_where@@Base+0x10404>
   30564:	b	30524 <luaL_where@@Base+0x10420>
   30568:	bl	2ff68 <luaL_where@@Base+0xfe64>
   3056c:	mov	r3, r0
   30570:	b	304f8 <luaL_where@@Base+0x103f4>
   30574:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30578:	mov	r7, r1
   3057c:	and	r1, r1, #15
   30580:	cmp	r1, #3
   30584:	sub	sp, sp, #36	; 0x24
   30588:	mov	sl, r0
   3058c:	mov	r4, r2
   30590:	mov	r5, r3
   30594:	movne	fp, #0
   30598:	beq	30858 <luaL_where@@Base+0x10754>
   3059c:	lsr	r8, r7, #24
   305a0:	subs	r8, r8, #1
   305a4:	biccs	r7, r7, #1024	; 0x400
   305a8:	orrs	r3, r4, r5
   305ac:	bne	306f4 <luaL_where@@Base+0x105f0>
   305b0:	cmp	r8, #0
   305b4:	lsr	r5, fp, #8
   305b8:	beq	307fc <luaL_where@@Base+0x106f8>
   305bc:	add	r6, sp, #32
   305c0:	mov	r2, #48	; 0x30
   305c4:	mov	r3, #1
   305c8:	strb	r2, [r6, #-2]!
   305cc:	add	r9, sp, #31
   305d0:	mov	r2, r3
   305d4:	cmp	r8, r2
   305d8:	movle	r8, r3
   305dc:	lsr	r4, r7, #16
   305e0:	ldm	sl, {r0, r2}
   305e4:	add	r5, r8, r5
   305e8:	uxtb	r4, r4
   305ec:	cmp	r4, r5
   305f0:	movcs	r1, r4
   305f4:	movcc	r1, r5
   305f8:	sub	r2, r2, r0
   305fc:	cmp	r1, r2
   30600:	bhi	308f4 <luaL_where@@Base+0x107f0>
   30604:	ands	r1, r7, #1280	; 0x500
   30608:	bne	30818 <luaL_where@@Base+0x10714>
   3060c:	cmp	r4, r5
   30610:	sub	r2, r4, #1
   30614:	movls	r4, r2
   30618:	bls	30638 <luaL_where@@Base+0x10534>
   3061c:	sub	r4, r4, r5
   30620:	add	r4, r0, r4
   30624:	mov	r2, #32
   30628:	strb	r2, [r0], #1
   3062c:	cmp	r0, r4
   30630:	bne	30628 <luaL_where@@Base+0x10524>
   30634:	sub	r4, r5, #1
   30638:	cmp	fp, #0
   3063c:	beq	3066c <luaL_where@@Base+0x10568>
   30640:	uxtb	fp, fp
   30644:	cmp	fp, #87	; 0x57
   30648:	add	r2, r0, #1
   3064c:	movls	ip, r2
   30650:	movhi	ip, #48	; 0x30
   30654:	movls	r2, r0
   30658:	strbhi	ip, [r0], #2
   3065c:	movls	r0, ip
   30660:	cmp	r1, #1024	; 0x400
   30664:	strb	fp, [r2]
   30668:	beq	30828 <luaL_where@@Base+0x10724>
   3066c:	cmp	r8, r3
   30670:	subhi	r8, r8, r3
   30674:	addhi	r8, r0, r8
   30678:	movhi	r3, #48	; 0x30
   3067c:	bls	3068c <luaL_where@@Base+0x10588>
   30680:	strb	r3, [r0], #1
   30684:	cmp	r0, r8
   30688:	bne	30680 <luaL_where@@Base+0x1057c>
   3068c:	cmp	r6, r9
   30690:	bcs	306bc <luaL_where@@Base+0x105b8>
   30694:	sub	r2, r0, #1
   30698:	mov	r3, r6
   3069c:	ldrb	r1, [r3], #1
   306a0:	cmp	r3, r9
   306a4:	strb	r1, [r2, #1]!
   306a8:	bne	3069c <luaL_where@@Base+0x10598>
   306ac:	add	r6, r6, #1
   306b0:	add	r3, sp, #32
   306b4:	sub	r6, r3, r6
   306b8:	add	r0, r0, r6
   306bc:	tst	r7, #256	; 0x100
   306c0:	beq	306e4 <luaL_where@@Base+0x105e0>
   306c4:	cmp	r5, r4
   306c8:	bcs	306e4 <luaL_where@@Base+0x105e0>
   306cc:	sub	r4, r4, r5
   306d0:	add	r4, r0, r4
   306d4:	mov	r3, #32
   306d8:	strb	r3, [r0], #1
   306dc:	cmp	r0, r4
   306e0:	bne	306d8 <luaL_where@@Base+0x105d4>
   306e4:	str	r0, [sl]
   306e8:	mov	r0, sl
   306ec:	add	sp, sp, #36	; 0x24
   306f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   306f4:	ands	r1, r7, #48	; 0x30
   306f8:	add	r9, sp, #31
   306fc:	bne	30790 <luaL_where@@Base+0x1068c>
   30700:	mov	r2, r5
   30704:	mov	r3, r1
   30708:	orrs	r3, r2, r3
   3070c:	mov	r6, r9
   30710:	beq	3075c <luaL_where@@Base+0x10658>
   30714:	mov	r0, r4
   30718:	mov	r1, r5
   3071c:	mov	r2, #10
   30720:	mov	r3, #0
   30724:	bl	6e5bc <luaL_openlibs@@Base+0x4dfc>
   30728:	mov	r0, r4
   3072c:	mov	r1, r5
   30730:	mov	r3, #0
   30734:	add	r2, r2, #48	; 0x30
   30738:	strb	r2, [r6, #-1]!
   3073c:	mov	r2, #10
   30740:	bl	6e5bc <luaL_openlibs@@Base+0x4dfc>
   30744:	mov	r3, #0
   30748:	mov	r2, r1
   3074c:	orrs	r3, r2, r3
   30750:	mov	r4, r0
   30754:	mov	r5, r1
   30758:	bne	30714 <luaL_where@@Base+0x10610>
   3075c:	ldr	r1, [pc, #420]	; 30908 <luaL_where@@Base+0x10804>
   30760:	umull	r2, r3, r4, r1
   30764:	lsr	r3, r3, #3
   30768:	add	r2, r3, r3, lsl #2
   3076c:	sub	r4, r4, r2, lsl #1
   30770:	add	r2, r4, #48	; 0x30
   30774:	subs	r4, r3, #0
   30778:	strb	r2, [r6, #-1]!
   3077c:	bne	30760 <luaL_where@@Base+0x1065c>
   30780:	sub	r2, r9, r6
   30784:	mov	r3, r2
   30788:	lsr	r5, fp, #8
   3078c:	b	305d4 <luaL_where@@Base+0x104d0>
   30790:	tst	r7, #16
   30794:	bne	30880 <luaL_where@@Base+0x1077c>
   30798:	mov	r6, r9
   3079c:	b	307a4 <luaL_where@@Base+0x106a0>
   307a0:	mov	r6, r1
   307a4:	lsr	r2, r4, #3
   307a8:	orr	r2, r2, r5, lsl #29
   307ac:	lsr	r1, r5, #3
   307b0:	and	r3, r4, #7
   307b4:	mov	r5, r1
   307b8:	mov	r4, r2
   307bc:	add	r3, r3, #48	; 0x30
   307c0:	orrs	r2, r4, r5
   307c4:	strb	r3, [r6, #-1]
   307c8:	sub	r1, r6, #1
   307cc:	bne	307a0 <luaL_where@@Base+0x1069c>
   307d0:	tst	r7, #4096	; 0x1000
   307d4:	subne	r6, r6, #2
   307d8:	subeq	r2, r9, r1
   307dc:	subne	r2, r9, r6
   307e0:	movne	r0, #48	; 0x30
   307e4:	lsr	r5, fp, #8
   307e8:	moveq	r6, r1
   307ec:	moveq	r3, r2
   307f0:	movne	r3, r2
   307f4:	strbne	r0, [r1, #-1]
   307f8:	b	305d4 <luaL_where@@Base+0x104d0>
   307fc:	ldr	r3, [pc, #264]	; 3090c <luaL_where@@Base+0x10808>
   30800:	bics	r3, r3, r7
   30804:	addne	r9, sp, #31
   30808:	movne	r6, r9
   3080c:	movne	r3, r8
   30810:	bne	305dc <luaL_where@@Base+0x104d8>
   30814:	b	305bc <luaL_where@@Base+0x104b8>
   30818:	cmp	fp, #0
   3081c:	bne	30640 <luaL_where@@Base+0x1053c>
   30820:	cmp	r1, #1024	; 0x400
   30824:	bne	3066c <luaL_where@@Base+0x10568>
   30828:	cmp	r4, r5
   3082c:	sub	r2, r4, #1
   30830:	movls	r4, r2
   30834:	bls	3066c <luaL_where@@Base+0x10568>
   30838:	sub	r4, r4, r5
   3083c:	add	r4, r0, r4
   30840:	mov	r2, #48	; 0x30
   30844:	strb	r2, [r0], #1
   30848:	cmp	r0, r4
   3084c:	bne	30844 <luaL_where@@Base+0x10740>
   30850:	sub	r4, r5, #1
   30854:	b	3066c <luaL_where@@Base+0x10568>
   30858:	cmp	r2, #0
   3085c:	sbcs	r3, r5, #0
   30860:	blt	308e4 <luaL_where@@Base+0x107e0>
   30864:	tst	r7, #512	; 0x200
   30868:	ldrne	fp, [pc, #160]	; 30910 <luaL_where@@Base+0x1080c>
   3086c:	bne	3059c <luaL_where@@Base+0x10498>
   30870:	tst	r7, #2048	; 0x800
   30874:	movne	fp, #288	; 0x120
   30878:	moveq	fp, #0
   3087c:	b	3059c <luaL_where@@Base+0x10498>
   30880:	ldr	r3, [pc, #140]	; 30914 <luaL_where@@Base+0x10810>
   30884:	ands	r0, r7, #8192	; 0x2000
   30888:	ldr	ip, [pc, #136]	; 30918 <luaL_where@@Base+0x10814>
   3088c:	mov	r6, r9
   30890:	movne	ip, r3
   30894:	and	r2, r4, #15
   30898:	lsr	r3, r4, #4
   3089c:	orr	r3, r3, r5, lsl #28
   308a0:	lsr	r1, r5, #4
   308a4:	ldrb	r2, [ip, r2]
   308a8:	mov	r4, r3
   308ac:	mov	r5, r1
   308b0:	orrs	r3, r4, r5
   308b4:	strb	r2, [r6, #-1]!
   308b8:	bne	30894 <luaL_where@@Base+0x10790>
   308bc:	tst	r7, #4096	; 0x1000
   308c0:	sub	r2, r9, r6
   308c4:	mov	r3, r2
   308c8:	lsreq	r5, fp, #8
   308cc:	beq	305d4 <luaL_where@@Base+0x104d0>
   308d0:	cmp	r0, #0
   308d4:	moveq	fp, #632	; 0x278
   308d8:	movne	fp, #600	; 0x258
   308dc:	mov	r5, #2
   308e0:	b	305d4 <luaL_where@@Base+0x104d0>
   308e4:	rsbs	r4, r2, #0
   308e8:	rsc	r5, r5, #0
   308ec:	ldr	fp, [pc, #40]	; 3091c <luaL_where@@Base+0x10818>
   308f0:	b	3059c <luaL_where@@Base+0x10498>
   308f4:	mov	r0, sl
   308f8:	str	r3, [sp, #4]
   308fc:	bl	2ff68 <luaL_where@@Base+0xfe64>
   30900:	ldr	r3, [sp, #4]
   30904:	b	30604 <luaL_where@@Base+0x10500>
   30908:	stclgt	12, cr12, [ip], {205}	; 0xcd
   3090c:	andeq	r1, r0, r0, lsr #32
   30910:	andeq	r0, r0, fp, lsr #2
   30914:			; <UNDEFINED> instruction: 0x00072cbc
   30918:	andeq	r2, r7, r4, lsl ip
   3091c:	andeq	r0, r0, sp, lsr #2
   30920:	push	{r4, r5, r6, lr}
   30924:	mov	r4, r1
   30928:	mov	r5, r0
   3092c:	vmov	r0, r1, d0
   30930:	bl	6e650 <luaL_openlibs@@Base+0x4e90>
   30934:	asr	r3, r0, #31
   30938:	cmp	r3, r1
   3093c:	cmpeq	r0, r0
   30940:	moveq	r3, #1
   30944:	movne	r3, #0
   30948:	cmp	r4, #3
   3094c:	movne	r3, #0
   30950:	andeq	r3, r3, #1
   30954:	cmp	r3, #0
   30958:	mov	r2, r0
   3095c:	bne	30974 <luaL_where@@Base+0x10870>
   30960:	mov	r3, r1
   30964:	mov	r0, r5
   30968:	mov	r1, r4
   3096c:	pop	{r4, r5, r6, lr}
   30970:	b	30574 <luaL_where@@Base+0x10470>
   30974:	mov	r1, r0
   30978:	mov	r0, r5
   3097c:	pop	{r4, r5, r6, lr}
   30980:	b	301f4 <luaL_where@@Base+0x100f0>
   30984:	vldr	d7, [pc, #60]	; 309c8 <luaL_where@@Base+0x108c4>
   30988:	push	{r4, r5, r6, lr}
   3098c:	mov	r4, r0
   30990:	mov	r5, r1
   30994:	vcmpe.f64	d0, d7
   30998:	vmrs	APSR_nzcv, fpscr
   3099c:	vldrge	d7, [pc, #44]	; 309d0 <luaL_where@@Base+0x108cc>
   309a0:	vmovlt	r0, r1, d0
   309a4:	vsubge.f64	d7, d0, d7
   309a8:	vmovge	r0, r1, d7
   309ac:	bl	6e650 <luaL_openlibs@@Base+0x4e90>
   309b0:	mov	r2, r0
   309b4:	mov	r3, r1
   309b8:	mov	r0, r4
   309bc:	mov	r1, r5
   309c0:	pop	{r4, r5, r6, lr}
   309c4:	b	30574 <luaL_where@@Base+0x10470>
   309c8:	andeq	r0, r0, r0
   309cc:	mvnmi	r0, #0
   309d0:	andeq	r0, r0, r0
   309d4:	mvnsmi	r0, #0
   309d8:	push	{r4, r5, r6, r7, r8, lr}
   309dc:	mov	r4, r0
   309e0:	ldr	r6, [r0, #32]
   309e4:	add	r7, r0, #44	; 0x2c
   309e8:	mov	r8, #0
   309ec:	mov	r5, r6
   309f0:	b	30a0c <luaL_where@@Base+0x10908>
   309f4:	str	r1, [r4, #24]
   309f8:	ldrb	r5, [r3]
   309fc:	cmp	r5, #61	; 0x3d
   30a00:	str	r5, [r4, #32]
   30a04:	bne	30a54 <luaL_where@@Base+0x10950>
   30a08:	add	r8, r8, #1
   30a0c:	ldr	r3, [r4, #44]	; 0x2c
   30a10:	ldr	r2, [r4, #48]	; 0x30
   30a14:	mov	r0, r3
   30a18:	cmp	r2, r3
   30a1c:	beq	30a64 <luaL_where@@Base+0x10960>
   30a20:	strb	r5, [r0], #1
   30a24:	ldr	r3, [r4, #24]
   30a28:	ldr	r2, [r4, #28]
   30a2c:	add	r1, r3, #1
   30a30:	cmp	r3, r2
   30a34:	str	r0, [r4, #44]	; 0x2c
   30a38:	bcc	309f4 <luaL_where@@Base+0x108f0>
   30a3c:	mov	r0, r4
   30a40:	bl	15358 <_start@@Base+0x1fa8>
   30a44:	mov	r5, r0
   30a48:	cmp	r5, #61	; 0x3d
   30a4c:	str	r5, [r4, #32]
   30a50:	beq	30a08 <luaL_where@@Base+0x10904>
   30a54:	cmp	r6, r5
   30a58:	mvnne	r8, r8
   30a5c:	mov	r0, r8
   30a60:	pop	{r4, r5, r6, r7, r8, pc}
   30a64:	mov	r1, #1
   30a68:	mov	r0, r7
   30a6c:	bl	2ff68 <luaL_where@@Base+0xfe64>
   30a70:	b	30a20 <luaL_where@@Base+0x1091c>
   30a74:	ldr	r3, [r0]
   30a78:	ldr	r2, [r0, #4]
   30a7c:	push	{r4, r5, r6, r7, r8, lr}
   30a80:	sub	r2, r2, r3
   30a84:	cmp	r2, #10
   30a88:	mov	r5, r0
   30a8c:	mov	r4, r1
   30a90:	movhi	r0, r3
   30a94:	bls	30bb8 <luaL_where@@Base+0x10ab4>
   30a98:	ldr	r2, [r4, #4]
   30a9c:	cmn	r2, #5
   30aa0:	beq	30b58 <luaL_where@@Base+0x10a54>
   30aa4:	cmn	r2, #14
   30aa8:	add	r3, r0, #1
   30aac:	beq	30b28 <luaL_where@@Base+0x10a24>
   30ab0:	cmn	r2, #15
   30ab4:	mvnhi	r2, r2
   30ab8:	strbhi	r2, [r0]
   30abc:	bhi	30b20 <luaL_where@@Base+0x10a1c>
   30ac0:	mov	r2, #4
   30ac4:	strb	r2, [r0]
   30ac8:	ldr	r2, [r4]
   30acc:	cmp	r2, #127	; 0x7f
   30ad0:	bls	30aec <luaL_where@@Base+0x109e8>
   30ad4:	mvn	r0, #127	; 0x7f
   30ad8:	orr	r1, r0, r2
   30adc:	lsr	r2, r2, #7
   30ae0:	cmp	r2, #127	; 0x7f
   30ae4:	strb	r1, [r3], #1
   30ae8:	bhi	30ad8 <luaL_where@@Base+0x109d4>
   30aec:	strb	r2, [r3]
   30af0:	ldr	r2, [r4, #4]
   30af4:	add	r3, r3, #1
   30af8:	cmp	r2, #127	; 0x7f
   30afc:	bls	30b18 <luaL_where@@Base+0x10a14>
   30b00:	mvn	r0, #127	; 0x7f
   30b04:	orr	r1, r0, r2
   30b08:	lsr	r2, r2, #7
   30b0c:	cmp	r2, #127	; 0x7f
   30b10:	strb	r1, [r3], #1
   30b14:	bhi	30b04 <luaL_where@@Base+0x10a00>
   30b18:	strb	r2, [r3]
   30b1c:	add	r3, r3, #1
   30b20:	str	r3, [r5]
   30b24:	pop	{r4, r5, r6, r7, r8, pc}
   30b28:	mov	r2, #3
   30b2c:	strb	r2, [r0]
   30b30:	ldr	r2, [r4]
   30b34:	cmp	r2, #127	; 0x7f
   30b38:	bls	30b18 <luaL_where@@Base+0x10a14>
   30b3c:	mvn	r0, #127	; 0x7f
   30b40:	orr	r1, r0, r2
   30b44:	lsr	r2, r2, #7
   30b48:	cmp	r2, #127	; 0x7f
   30b4c:	strb	r1, [r3], #1
   30b50:	bhi	30b40 <luaL_where@@Base+0x10a3c>
   30b54:	b	30b18 <luaL_where@@Base+0x10a14>
   30b58:	ldr	r7, [r4]
   30b5c:	ldm	r5, {r0, r3}
   30b60:	ldr	r6, [r7, #12]
   30b64:	sub	r3, r3, r0
   30b68:	add	r4, r6, #5
   30b6c:	cmp	r4, r3
   30b70:	bhi	30bc4 <luaL_where@@Base+0x10ac0>
   30b74:	cmp	r4, #127	; 0x7f
   30b78:	bls	30b94 <luaL_where@@Base+0x10a90>
   30b7c:	mvn	r1, #127	; 0x7f
   30b80:	orr	r2, r1, r4
   30b84:	lsr	r4, r4, #7
   30b88:	cmp	r4, #127	; 0x7f
   30b8c:	strb	r2, [r0], #1
   30b90:	bhi	30b80 <luaL_where@@Base+0x10a7c>
   30b94:	add	r3, r0, #1
   30b98:	strb	r4, [r0]
   30b9c:	add	r1, r7, #16
   30ba0:	mov	r0, r3
   30ba4:	mov	r2, r6
   30ba8:	bl	12cb8 <memcpy@plt>
   30bac:	add	r3, r0, r6
   30bb0:	str	r3, [r5]
   30bb4:	pop	{r4, r5, r6, r7, r8, pc}
   30bb8:	mov	r1, #11
   30bbc:	bl	2ff68 <luaL_where@@Base+0xfe64>
   30bc0:	b	30a98 <luaL_where@@Base+0x10994>
   30bc4:	mov	r1, r4
   30bc8:	mov	r0, r5
   30bcc:	bl	2ff68 <luaL_where@@Base+0xfe64>
   30bd0:	b	30b74 <luaL_where@@Base+0x10a70>
   30bd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30bd8:	sub	sp, sp, #388	; 0x184
   30bdc:	lsr	r3, r1, #16
   30be0:	vstr	d0, [sp, #16]
   30be4:	ldr	r7, [sp, #20]
   30be8:	mov	r4, r2
   30bec:	uxtb	fp, r3
   30bf0:	ldrd	r2, [sp, #16]
   30bf4:	mov	r6, r1
   30bf8:	str	r0, [sp, #36]	; 0x24
   30bfc:	lsr	r0, r1, #24
   30c00:	lsl	r1, r7, #1
   30c04:	cmn	r1, #2097152	; 0x200000
   30c08:	str	r0, [sp, #48]	; 0x30
   30c0c:	strd	r2, [sp, #8]
   30c10:	bcs	31934 <luaL_where@@Base+0x11830>
   30c14:	lsr	r3, r6, #4
   30c18:	ldr	r8, [pc, #596]	; 30e74 <luaL_where@@Base+0x10d70>
   30c1c:	ands	r3, r3, #3
   30c20:	sub	r5, r0, #1
   30c24:	str	r3, [sp, #28]
   30c28:	and	r8, r8, r7, lsr #20
   30c2c:	bne	30e78 <luaL_where@@Base+0x10d74>
   30c30:	ldr	r3, [pc, #556]	; 30e64 <luaL_where@@Base+0x10d60>
   30c34:	tst	r6, #8192	; 0x2000
   30c38:	ldr	r9, [pc, #552]	; 30e68 <luaL_where@@Base+0x10d64>
   30c3c:	movne	r9, r3
   30c40:	cmp	r7, #0
   30c44:	blt	3189c <luaL_where@@Base+0x11798>
   30c48:	tst	r6, #512	; 0x200
   30c4c:	beq	3153c <luaL_where@@Base+0x11438>
   30c50:	mov	sl, #43	; 0x2b
   30c54:	mov	r3, #6
   30c58:	str	r3, [sp, #28]
   30c5c:	bic	r7, r7, #-16777216	; 0xff000000
   30c60:	bic	r7, r7, #15728640	; 0xf00000
   30c64:	cmp	r8, #0
   30c68:	str	r7, [sp, #12]
   30c6c:	beq	317f4 <luaL_where@@Base+0x116f0>
   30c70:	sub	r8, r8, #1020	; 0x3fc
   30c74:	sub	r8, r8, #3
   30c78:	orr	r3, r7, #1048576	; 0x100000
   30c7c:	str	r3, [sp, #12]
   30c80:	cmn	r5, #1
   30c84:	beq	31850 <luaL_where@@Base+0x1174c>
   30c88:	cmp	r5, #12
   30c8c:	bhi	30cc0 <luaL_where@@Base+0x10bbc>
   30c90:	lsl	r0, r5, #2
   30c94:	rsb	r0, r0, #51	; 0x33
   30c98:	sub	lr, r0, #32
   30c9c:	mov	ip, #1
   30ca0:	lsl	r3, ip, lr
   30ca4:	lsl	r2, ip, r0
   30ca8:	rsb	lr, r0, #32
   30cac:	ldrd	r0, [sp, #8]
   30cb0:	orr	r3, r3, ip, lsr lr
   30cb4:	adds	r0, r0, r2
   30cb8:	adc	r1, r1, r3
   30cbc:	strd	r0, [sp, #8]
   30cc0:	cmp	r8, #0
   30cc4:	rsblt	r8, r8, #0
   30cc8:	movlt	r3, #45	; 0x2d
   30ccc:	movge	r3, #43	; 0x2b
   30cd0:	str	r3, [sp, #16]
   30cd4:	orr	r3, r8, #1
   30cd8:	clz	r3, r3
   30cdc:	eor	r3, r3, #31
   30ce0:	ldr	r0, [pc, #392]	; 30e70 <luaL_where@@Base+0x10d6c>
   30ce4:	add	ip, r3, r3, lsl #2
   30ce8:	and	r2, r6, #4096	; 0x1000
   30cec:	add	r3, r3, ip, lsl #1
   30cf0:	ldr	r1, [sp, #28]
   30cf4:	rsb	r3, r3, r3, lsl #3
   30cf8:	orrs	r2, r2, r5
   30cfc:	lsr	r3, r3, #8
   30d00:	add	r3, r3, #1
   30d04:	movne	r7, #1
   30d08:	add	r0, r0, r3, lsl #2
   30d0c:	moveq	r7, #0
   30d10:	add	r1, r5, r1
   30d14:	add	r1, r7, r1
   30d18:	ldr	r7, [r0, #840]	; 0x348
   30d1c:	add	r3, r1, r3
   30d20:	cmp	r8, r7
   30d24:	movls	r7, r3
   30d28:	addhi	r7, r3, #1
   30d2c:	cmp	r4, #0
   30d30:	beq	318c0 <luaL_where@@Base+0x117bc>
   30d34:	ands	ip, r6, #1280	; 0x500
   30d38:	ldrb	r0, [r9, #17]
   30d3c:	bne	317a0 <luaL_where@@Base+0x1169c>
   30d40:	cmp	fp, r7
   30d44:	sub	r3, fp, #1
   30d48:	movls	fp, r3
   30d4c:	bls	30d6c <luaL_where@@Base+0x10c68>
   30d50:	sub	r3, fp, r7
   30d54:	add	r3, r4, r3
   30d58:	mov	r1, #32
   30d5c:	strb	r1, [r4], #1
   30d60:	cmp	r4, r3
   30d64:	bne	30d5c <luaL_where@@Base+0x10c58>
   30d68:	sub	fp, r7, #1
   30d6c:	cmp	sl, #0
   30d70:	bne	317a8 <luaL_where@@Base+0x116a4>
   30d74:	mov	r1, r4
   30d78:	mov	r3, #48	; 0x30
   30d7c:	strb	r3, [r1], #2
   30d80:	strb	r0, [r4, #1]
   30d84:	ldr	r3, [sp, #12]
   30d88:	cmp	r2, #0
   30d8c:	add	ip, r1, #1
   30d90:	lsr	r3, r3, #20
   30d94:	add	r3, r3, #48	; 0x30
   30d98:	strb	r3, [r1]
   30d9c:	beq	30e14 <luaL_where@@Base+0x10d10>
   30da0:	add	r3, r5, #1
   30da4:	mov	r2, #46	; 0x2e
   30da8:	cmp	r5, #12
   30dac:	add	ip, ip, r3
   30db0:	strb	r2, [r1, #1]
   30db4:	ldr	r3, [sp, #8]
   30db8:	ldr	r2, [sp, #12]
   30dbc:	bls	318fc <luaL_where@@Base+0x117f8>
   30dc0:	cmp	r5, #13
   30dc4:	beq	30de8 <luaL_where@@Base+0x10ce4>
   30dc8:	add	r5, r5, #2
   30dcc:	add	r5, r1, r5
   30dd0:	add	lr, r1, #15
   30dd4:	mov	r0, #48	; 0x30
   30dd8:	strb	r0, [r5, #-1]!
   30ddc:	cmp	lr, r5
   30de0:	bne	30dd8 <luaL_where@@Base+0x10cd4>
   30de4:	mov	r5, #13
   30de8:	add	r5, r5, #2
   30dec:	add	r5, r1, r5
   30df0:	add	r1, r1, #2
   30df4:	and	r0, r3, #15
   30df8:	lsr	r3, r3, #4
   30dfc:	ldrb	r0, [r9, r0]
   30e00:	orr	r3, r3, r2, lsl #28
   30e04:	lsr	r2, r2, #4
   30e08:	strb	r0, [r5, #-1]!
   30e0c:	cmp	r5, r1
   30e10:	bne	30df4 <luaL_where@@Base+0x10cf0>
   30e14:	ldrb	r3, [r9, #16]
   30e18:	mov	r0, ip
   30e1c:	mov	r1, r8
   30e20:	strb	r3, [r0], #2
   30e24:	ldrb	r3, [sp, #16]
   30e28:	and	r6, r6, #256	; 0x100
   30e2c:	strb	r3, [ip, #1]
   30e30:	bl	14d4c <_start@@Base+0x199c>
   30e34:	cmp	r6, #0
   30e38:	beq	30e5c <luaL_where@@Base+0x10d58>
   30e3c:	cmp	fp, r7
   30e40:	bls	30e5c <luaL_where@@Base+0x10d58>
   30e44:	sub	r7, fp, r7
   30e48:	add	r7, r0, r7
   30e4c:	mov	r3, #32
   30e50:	strb	r3, [r0], #1
   30e54:	cmp	r0, r7
   30e58:	bne	30e50 <luaL_where@@Base+0x10d4c>
   30e5c:	add	sp, sp, #388	; 0x184
   30e60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30e64:	ldrdeq	r2, [r7], -r0
   30e68:	andeq	r2, r7, r4, ror #25
   30e6c:			; <UNDEFINED> instruction: 0x00070cb0
   30e70:			; <UNDEFINED> instruction: 0x0006ecb8
   30e74:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   30e78:	cmp	r7, #0
   30e7c:	blt	318ac <luaL_where@@Base+0x117a8>
   30e80:	tst	r6, #512	; 0x200
   30e84:	beq	3151c <luaL_where@@Base+0x11418>
   30e88:	mov	r3, #1
   30e8c:	str	r3, [sp, #52]	; 0x34
   30e90:	mov	r3, #43	; 0x2b
   30e94:	str	r3, [sp, #64]	; 0x40
   30e98:	asr	r3, r5, #31
   30e9c:	ldr	r2, [sp, #28]
   30ea0:	str	r3, [sp, #72]	; 0x48
   30ea4:	and	r3, r3, #7
   30ea8:	add	r3, r3, r5
   30eac:	cmp	r2, #3
   30eb0:	str	r3, [sp, #32]
   30eb4:	subeq	r3, r3, #1
   30eb8:	eoreq	r3, r3, r3, asr #31
   30ebc:	streq	r3, [sp, #32]
   30ec0:	ands	r3, r6, #16
   30ec4:	str	r3, [sp, #68]	; 0x44
   30ec8:	and	r3, r6, #4096	; 0x1000
   30ecc:	str	r3, [sp, #56]	; 0x38
   30ed0:	beq	3155c <luaL_where@@Base+0x11458>
   30ed4:	vldr	d7, [sp, #16]
   30ed8:	ldr	r2, [sp, #32]
   30edc:	vcmp.f64	d7, #0.0
   30ee0:	vmrs	APSR_nzcv, fpscr
   30ee4:	movne	r3, #1
   30ee8:	moveq	r3, #0
   30eec:	cmp	r2, #13
   30ef0:	movhi	r3, #0
   30ef4:	andls	r3, r3, #1
   30ef8:	cmp	r3, #0
   30efc:	beq	3155c <luaL_where@@Base+0x11458>
   30f00:	asr	r2, r8, #6
   30f04:	ldr	r3, [pc, #-160]	; 30e6c <luaL_where@@Base+0x10d68>
   30f08:	lsl	r1, r2, #1
   30f0c:	sub	r0, r3, #792	; 0x318
   30f10:	ldrsh	r1, [r0, r1]
   30f14:	cmp	r1, #0
   30f18:	str	r1, [sp, #76]	; 0x4c
   30f1c:	beq	3155c <luaL_where@@Base+0x11458>
   30f20:	add	r3, r3, r2, lsl #3
   30f24:	vldr	d6, [sp, #16]
   30f28:	vldr	d7, [r3, #-728]	; 0xfffffd28
   30f2c:	cmp	r8, #0
   30f30:	vmul.f64	d7, d6, d7
   30f34:	vstr	d7, [sp, #40]	; 0x28
   30f38:	ldrd	r2, [sp, #40]	; 0x28
   30f3c:	strd	r2, [sp, #8]
   30f40:	beq	320ec <luaL_where@@Base+0x11fe8>
   30f44:	ldrd	r2, [sp, #8]
   30f48:	subs	r2, r2, #2
   30f4c:	sbc	r3, r3, #0
   30f50:	mov	r0, r2
   30f54:	mov	r1, r3
   30f58:	ldr	r2, [pc, #-236]	; 30e74 <luaL_where@@Base+0x10d70>
   30f5c:	bic	r3, r3, #-16777216	; 0xff000000
   30f60:	bic	r3, r3, #15728640	; 0xf00000
   30f64:	and	r2, r2, r1, lsr #20
   30f68:	orr	r3, r3, #1048576	; 0x100000
   30f6c:	sub	r2, r2, #1072	; 0x430
   30f70:	str	r3, [sp, #128]	; 0x80
   30f74:	sub	r3, r2, #4
   30f78:	str	r3, [sp, #80]	; 0x50
   30f7c:	ldr	r3, [pc, #-276]	; 30e70 <luaL_where@@Base+0x10d6c>
   30f80:	strd	r0, [sp, #8]
   30f84:	str	r0, [sp, #40]	; 0x28
   30f88:	str	r3, [sp, #60]	; 0x3c
   30f8c:	ldr	r3, [sp, #40]	; 0x28
   30f90:	add	r9, sp, #128	; 0x80
   30f94:	mov	r2, #11
   30f98:	lsr	r3, r3, #21
   30f9c:	mov	r1, #0
   30fa0:	str	r6, [sp]
   30fa4:	mov	r0, r9
   30fa8:	bl	151b0 <_start@@Base+0x1e00>
   30fac:	ldr	r3, [sp, #40]	; 0x28
   30fb0:	ldr	sl, [pc, #-324]	; 30e74 <luaL_where@@Base+0x10d70>
   30fb4:	mov	r2, #11
   30fb8:	and	r3, sl, r3, lsr #10
   30fbc:	str	r6, [sp]
   30fc0:	mov	r1, r0
   30fc4:	mov	r0, r9
   30fc8:	bl	151b0 <_start@@Base+0x1e00>
   30fcc:	ldr	r3, [sp, #40]	; 0x28
   30fd0:	str	r6, [sp]
   30fd4:	mov	r2, #11
   30fd8:	and	r3, sl, r3, lsl #1
   30fdc:	mov	r1, r0
   30fe0:	mov	r0, r9
   30fe4:	bl	151b0 <_start@@Base+0x1e00>
   30fe8:	ldr	r3, [sp, #80]	; 0x50
   30fec:	cmp	r3, #0
   30ff0:	str	r0, [sp, #40]	; 0x28
   30ff4:	bge	315ac <luaL_where@@Base+0x114a8>
   30ff8:	ldr	r3, [sp, #40]	; 0x28
   30ffc:	cmp	r3, #0
   31000:	ldr	r3, [sp, #80]	; 0x50
   31004:	rsb	r3, r3, #0
   31008:	str	r3, [sp, #84]	; 0x54
   3100c:	bne	31054 <luaL_where@@Base+0x10f50>
   31010:	ldr	sl, [sp, #128]	; 0x80
   31014:	cmp	sl, #0
   31018:	beq	3210c <luaL_where@@Base+0x12008>
   3101c:	rsb	r3, sl, #0
   31020:	ldr	r2, [sp, #84]	; 0x54
   31024:	and	r3, r3, sl
   31028:	clz	r3, r3
   3102c:	rsb	r3, r3, #31
   31030:	cmp	r2, r3
   31034:	bls	32168 <luaL_where@@Base+0x12064>
   31038:	ldr	r1, [sp, #84]	; 0x54
   3103c:	lsr	r2, sl, r3
   31040:	sub	r3, r1, r3
   31044:	str	r3, [sp, #84]	; 0x54
   31048:	mov	r3, #0
   3104c:	str	r3, [sp, #40]	; 0x28
   31050:	str	r2, [sp, #128]	; 0x80
   31054:	ldr	r3, [sp, #84]	; 0x54
   31058:	cmp	r3, #18
   3105c:	bls	31f94 <luaL_where@@Base+0x11e90>
   31060:	ldr	r3, [sp, #28]
   31064:	cmp	r3, #2
   31068:	beq	3218c <luaL_where@@Base+0x12088>
   3106c:	ldr	r0, [sp, #40]	; 0x28
   31070:	add	r2, sp, #384	; 0x180
   31074:	ldr	r1, [sp, #84]	; 0x54
   31078:	rsb	r3, r0, r0, lsl #3
   3107c:	add	r2, r2, r0, lsl #2
   31080:	add	r3, r0, r3, lsl #2
   31084:	sub	r3, r3, r1
   31088:	ldr	r2, [r2, #-256]	; 0xffffff00
   3108c:	clz	r2, r2
   31090:	eor	r2, r2, #31
   31094:	add	r3, r3, r2
   31098:	vldr	d6, [pc, #1000]	; 31488 <luaL_where@@Base+0x11384>
   3109c:	vmov	s14, r3
   310a0:	ldr	r3, [sp, #48]	; 0x30
   310a4:	cmp	r5, #0
   310a8:	rsb	r1, r3, #1
   310ac:	vcvt.f64.s32	d7, s14
   310b0:	add	r3, r5, #7
   310b4:	movge	r3, r5
   310b8:	ldr	r2, [pc, #1028]	; 314c4 <luaL_where@@Base+0x113c0>
   310bc:	asr	r3, r3, #3
   310c0:	rsb	r3, r3, #61	; 0x3d
   310c4:	add	r3, r3, r0
   310c8:	mov	r0, r3
   310cc:	vmul.f64	d7, d7, d6
   310d0:	vcvt.s32.f64	s14, d7
   310d4:	vmov	r3, s14
   310d8:	add	r1, r3, r1
   310dc:	smull	r2, r3, r1, r2
   310e0:	asr	r1, r1, #31
   310e4:	rsb	r3, r1, r3, asr #1
   310e8:	add	r3, r3, #62	; 0x3e
   310ec:	str	r5, [sp, #92]	; 0x5c
   310f0:	ldr	lr, [pc, #920]	; 31490 <luaL_where@@Base+0x1138c>
   310f4:	ldr	ip, [sp, #40]	; 0x28
   310f8:	ldr	r5, [sp, #84]	; 0x54
   310fc:	str	fp, [sp, #88]	; 0x58
   31100:	str	r8, [sp, #96]	; 0x60
   31104:	mov	sl, #0
   31108:	add	r9, sp, #128	; 0x80
   3110c:	mov	r8, r0
   31110:	mov	fp, r3
   31114:	str	r7, [sp, #100]	; 0x64
   31118:	ldr	r1, [r9, ip, lsl #2]
   3111c:	cmp	ip, sl
   31120:	add	r7, r9, ip, lsl #2
   31124:	lsl	r2, r1, #23
   31128:	lsr	r1, r1, #9
   3112c:	lsr	r2, r2, #23
   31130:	str	r1, [r9, ip, lsl #2]
   31134:	mul	r2, lr, r2
   31138:	movne	r1, ip
   3113c:	beq	31168 <luaL_where@@Base+0x11064>
   31140:	sub	r1, r1, #1
   31144:	and	r1, r1, #63	; 0x3f
   31148:	cmp	r1, sl
   3114c:	ldr	r3, [r9, r1, lsl #2]
   31150:	lsl	r0, r3, #23
   31154:	add	r3, r2, r3, lsr #9
   31158:	lsr	r0, r0, #23
   3115c:	str	r3, [r9, r1, lsl #2]
   31160:	mul	r2, lr, r0
   31164:	bne	31140 <luaL_where@@Base+0x1103c>
   31168:	cmp	sl, fp
   3116c:	cmpne	r8, sl
   31170:	beq	31a44 <luaL_where@@Base+0x11940>
   31174:	cmp	r2, #0
   31178:	subne	sl, sl, #1
   3117c:	andne	sl, sl, #63	; 0x3f
   31180:	addne	r3, sp, #384	; 0x180
   31184:	addne	r3, r3, sl, lsl #2
   31188:	strne	r2, [r3, #-256]	; 0xffffff00
   3118c:	ldr	r3, [r7]
   31190:	cmp	r3, #0
   31194:	bne	311a4 <luaL_where@@Base+0x110a0>
   31198:	sub	ip, ip, #1
   3119c:	and	ip, ip, #63	; 0x3f
   311a0:	sub	r8, r8, #1
   311a4:	sub	r5, r5, #9
   311a8:	cmp	r5, #8
   311ac:	bhi	31118 <luaL_where@@Base+0x11014>
   311b0:	str	r5, [sp, #84]	; 0x54
   311b4:	ldr	fp, [sp, #88]	; 0x58
   311b8:	ldr	r8, [sp, #96]	; 0x60
   311bc:	ldr	r7, [sp, #100]	; 0x64
   311c0:	ldr	r5, [sp, #92]	; 0x5c
   311c4:	ldr	r2, [sp, #84]	; 0x54
   311c8:	cmp	r2, #0
   311cc:	beq	3124c <luaL_where@@Base+0x11148>
   311d0:	add	r9, sp, #128	; 0x80
   311d4:	mvn	r0, #0
   311d8:	ldr	lr, [pc, #692]	; 31494 <luaL_where@@Base+0x11390>
   311dc:	ldr	r3, [r9, ip, lsl #2]
   311e0:	mvn	r0, r0, lsl r2
   311e4:	asr	lr, lr, r2
   311e8:	lsr	r1, r3, r2
   311ec:	and	r3, r3, r0
   311f0:	cmp	ip, sl
   311f4:	str	r1, [r9, ip, lsl #2]
   311f8:	mul	r2, lr, r3
   311fc:	beq	31230 <luaL_where@@Base+0x1112c>
   31200:	str	fp, [sp, #88]	; 0x58
   31204:	ldr	fp, [sp, #84]	; 0x54
   31208:	sub	ip, ip, #1
   3120c:	and	ip, ip, #63	; 0x3f
   31210:	cmp	ip, sl
   31214:	ldr	r3, [r9, ip, lsl #2]
   31218:	and	r1, r0, r3
   3121c:	add	r3, r2, r3, lsr fp
   31220:	mul	r2, lr, r1
   31224:	str	r3, [r9, ip, lsl #2]
   31228:	bne	31208 <luaL_where@@Base+0x11104>
   3122c:	ldr	fp, [sp, #88]	; 0x58
   31230:	cmp	r2, #0
   31234:	beq	3124c <luaL_where@@Base+0x11148>
   31238:	sub	r3, sl, #1
   3123c:	and	sl, r3, #63	; 0x3f
   31240:	add	r3, sp, #384	; 0x180
   31244:	add	r3, r3, sl, lsl #2
   31248:	str	r2, [r3, #-256]	; 0xffffff00
   3124c:	ldr	r2, [sp, #40]	; 0x28
   31250:	cmp	r2, #0
   31254:	beq	31270 <luaL_where@@Base+0x1116c>
   31258:	add	r3, sp, #384	; 0x180
   3125c:	add	r3, r3, r2, lsl #2
   31260:	ldr	r3, [r3, #-256]	; 0xffffff00
   31264:	cmp	r3, #0
   31268:	subeq	r3, r2, #1
   3126c:	streq	r3, [sp, #40]	; 0x28
   31270:	ldr	r3, [sp, #68]	; 0x44
   31274:	cmp	r3, #0
   31278:	beq	31de8 <luaL_where@@Base+0x11ce4>
   3127c:	ldr	r2, [sp, #40]	; 0x28
   31280:	add	r3, sp, #384	; 0x180
   31284:	cmp	sl, #0
   31288:	add	r3, r3, r2, lsl #2
   3128c:	ldr	r2, [r3, #-256]	; 0xffffff00
   31290:	beq	31d60 <luaL_where@@Base+0x11c5c>
   31294:	cmp	r2, #0
   31298:	bne	31d60 <luaL_where@@Base+0x11c5c>
   3129c:	add	r3, sp, #380	; 0x17c
   312a0:	mov	r1, #64	; 0x40
   312a4:	ldr	r2, [r3], #-4
   312a8:	sub	r1, r1, #1
   312ac:	cmp	r2, #0
   312b0:	beq	312a4 <luaL_where@@Base+0x111a0>
   312b4:	str	r1, [sp, #40]	; 0x28
   312b8:	add	r1, r1, r1, lsl #3
   312bc:	sub	r1, r1, #576	; 0x240
   312c0:	sub	r1, r1, #1
   312c4:	orr	r3, r2, #1
   312c8:	clz	r3, r3
   312cc:	eor	r3, r3, #31
   312d0:	add	r0, r3, r3, lsl #2
   312d4:	add	r3, r3, r0, lsl #1
   312d8:	ldr	r0, [sp, #60]	; 0x3c
   312dc:	rsb	r3, r3, r3, lsl #3
   312e0:	lsr	r3, r3, #8
   312e4:	add	r3, r3, #1
   312e8:	add	r0, r0, r3, lsl #2
   312ec:	ldr	r0, [r0, #840]	; 0x348
   312f0:	cmp	r0, r2
   312f4:	addcc	r3, r3, #1
   312f8:	str	r3, [sp, #92]	; 0x5c
   312fc:	add	r3, r3, r1
   31300:	ldr	r1, [sp, #76]	; 0x4c
   31304:	str	r3, [sp, #84]	; 0x54
   31308:	cmp	r1, #0
   3130c:	str	r3, [sp, #88]	; 0x58
   31310:	beq	31464 <luaL_where@@Base+0x11360>
   31314:	ldr	r3, [sp, #8]
   31318:	ldr	r0, [sp, #80]	; 0x50
   3131c:	cmn	r3, #3
   31320:	add	r1, r0, #71	; 0x47
   31324:	bls	31338 <luaL_where@@Base+0x11234>
   31328:	ldr	r3, [sp, #12]
   3132c:	mvn	r3, r3
   31330:	lsls	r3, r3, #12
   31334:	addeq	r1, r0, #72	; 0x48
   31338:	ldr	lr, [sp, #40]	; 0x28
   3133c:	add	ip, sp, #384	; 0x180
   31340:	sub	r3, lr, #1
   31344:	and	r0, r3, #63	; 0x3f
   31348:	sub	r3, lr, #2
   3134c:	add	ip, ip, r0, lsl #2
   31350:	and	r3, r3, #63	; 0x3f
   31354:	str	r2, [sp, #260]	; 0x104
   31358:	str	r0, [sp, #80]	; 0x50
   3135c:	add	r2, sp, #384	; 0x180
   31360:	ldr	r0, [pc, #304]	; 31498 <luaL_where@@Base+0x11394>
   31364:	add	r3, r2, r3, lsl #2
   31368:	str	ip, [sp, #8]
   3136c:	ldr	ip, [ip, #-256]	; 0xffffff00
   31370:	add	r2, r0, r1, lsl #1
   31374:	str	ip, [sp, #256]	; 0x100
   31378:	add	r9, sp, #128	; 0x80
   3137c:	ldr	ip, [r3, #-256]	; 0xffffff00
   31380:	ldrsb	r3, [r2, #1]
   31384:	ldrb	r2, [r0, r1, lsl #1]
   31388:	mov	r0, r9
   3138c:	mov	r1, lr
   31390:	str	ip, [sp, #252]	; 0xfc
   31394:	bl	1d37c <_start@@Base+0x9fcc>
   31398:	ldr	r3, [sp, #32]
   3139c:	ldr	r0, [sp, #92]	; 0x5c
   313a0:	add	r3, r3, #1
   313a4:	cmp	r3, r0
   313a8:	bcc	31e30 <luaL_where@@Base+0x11d2c>
   313ac:	ldr	lr, [sp, #40]	; 0x28
   313b0:	ldr	r1, [sp, #260]	; 0x104
   313b4:	ldr	r2, [r9, lr, lsl #2]
   313b8:	cmp	r2, r1
   313bc:	bne	31d54 <luaL_where@@Base+0x11c50>
   313c0:	ldr	ip, [sp, #8]
   313c4:	sub	r9, r3, r0
   313c8:	cmp	r9, #8
   313cc:	ldr	r1, [ip, #-256]	; 0xffffff00
   313d0:	bls	3215c <luaL_where@@Base+0x12058>
   313d4:	ldr	r3, [sp, #256]	; 0x100
   313d8:	cmp	r3, r1
   313dc:	bne	31d54 <luaL_where@@Base+0x11c50>
   313e0:	ldr	r0, [sp, #80]	; 0x50
   313e4:	add	r2, sp, #384	; 0x180
   313e8:	sub	r3, r0, #1
   313ec:	and	r3, r3, #63	; 0x3f
   313f0:	sub	r9, r9, #9
   313f4:	add	r3, r2, r3, lsl #2
   313f8:	add	r2, sp, #252	; 0xfc
   313fc:	ldr	r1, [r3, #-256]	; 0xffffff00
   31400:	str	r2, [sp, #8]
   31404:	add	r0, sp, #104	; 0x68
   31408:	bl	1507c <_start@@Base+0x1ccc>
   3140c:	ldr	r3, [sp, #8]
   31410:	add	r0, sp, #116	; 0x74
   31414:	ldr	r1, [r3]
   31418:	bl	1507c <_start@@Base+0x1ccc>
   3141c:	mov	r2, r9
   31420:	add	r1, sp, #116	; 0x74
   31424:	add	r0, sp, #104	; 0x68
   31428:	bl	12d00 <memcmp@plt>
   3142c:	cmp	r0, #0
   31430:	bne	31d54 <luaL_where@@Base+0x11c50>
   31434:	add	r3, sp, #384	; 0x180
   31438:	add	r3, r3, r9
   3143c:	ldrb	r2, [r3, #-280]	; 0xfffffee8
   31440:	ldrb	r3, [r3, #-268]	; 0xfffffef4
   31444:	cmp	r2, #52	; 0x34
   31448:	movls	r2, #0
   3144c:	movhi	r2, #1
   31450:	cmp	r3, #52	; 0x34
   31454:	movhi	r3, #0
   31458:	movls	r3, #1
   3145c:	cmp	r2, r3
   31460:	beq	31d54 <luaL_where@@Base+0x11c50>
   31464:	rsb	r3, sl, #0
   31468:	and	r3, r3, #63	; 0x3f
   3146c:	ldr	r2, [sp, #32]
   31470:	ldr	r1, [sp, #84]	; 0x54
   31474:	add	r3, r3, r3, lsl #3
   31478:	sub	r2, r2, r1
   3147c:	cmp	r2, r3
   31480:	blt	31d70 <luaL_where@@Base+0x11c6c>
   31484:	b	314c8 <luaL_where@@Base+0x113c4>
   31488:			; <UNDEFINED> instruction: 0x509f79fe
   3148c:	svccc	0x00d34413
   31490:	andseq	ip, sp, r5, ror #26
   31494:	blcc	fe6e3c9c <__bss_end__@@Base+0xfe65fa24>
   31498:	ldrdeq	r0, [r7], -r8
   3149c:			; <UNDEFINED> instruction: 0x0006ecb8
   314a0:	andeq	r1, r0, r0, lsl r0
   314a4:			; <UNDEFINED> instruction: 0xfffffc02
   314a8:			; <UNDEFINED> instruction: 0xfffffbcd
   314ac:	eoreq	r2, r0, r0, lsr #32
   314b0:	rsbeq	r6, lr, lr, ror #2
   314b4:	rsbeq	r6, r9, r6, ror #28
   314b8:			; <UNDEFINED> instruction: 0xfffffbee
   314bc:	andeq	r0, r0, r2, lsl r4
   314c0:	andeq	r1, r0, r0, lsr #32
   314c4:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   314c8:	ldr	r3, [sp, #88]	; 0x58
   314cc:	ldr	r2, [sp, #76]	; 0x4c
   314d0:	tst	r6, #32
   314d4:	add	r9, r3, r2
   314d8:	beq	31acc <luaL_where@@Base+0x119c8>
   314dc:	ldr	r3, [sp, #32]
   314e0:	cmp	r3, r9
   314e4:	cmnge	r9, #4
   314e8:	blt	31e54 <luaL_where@@Base+0x11d50>
   314ec:	cmp	r9, #0
   314f0:	movlt	r3, #0
   314f4:	ldrge	r3, [sp, #40]	; 0x28
   314f8:	ldrge	r2, [sp, #52]	; 0x34
   314fc:	strlt	r3, [sp, #40]	; 0x28
   31500:	addge	r3, r3, r3, lsl #3
   31504:	addge	r3, r2, r3
   31508:	strge	r3, [sp, #52]	; 0x34
   3150c:	ldr	r3, [sp, #32]
   31510:	sub	r3, r3, r9
   31514:	str	r3, [sp, #32]
   31518:	b	315e4 <luaL_where@@Base+0x114e0>
   3151c:	ands	r3, r6, #2048	; 0x800
   31520:	streq	r3, [sp, #52]	; 0x34
   31524:	streq	r3, [sp, #64]	; 0x40
   31528:	movne	r3, #1
   3152c:	strne	r3, [sp, #52]	; 0x34
   31530:	movne	r3, #32
   31534:	strne	r3, [sp, #64]	; 0x40
   31538:	b	30e98 <luaL_where@@Base+0x10d94>
   3153c:	and	r3, r6, #2048	; 0x800
   31540:	cmp	r3, #0
   31544:	movne	r3, #6
   31548:	moveq	r3, #5
   3154c:	str	r3, [sp, #28]
   31550:	movne	sl, #32
   31554:	moveq	sl, #0
   31558:	b	30c5c <luaL_where@@Base+0x10b58>
   3155c:	ldr	r3, [pc, #-200]	; 3149c <luaL_where@@Base+0x11398>
   31560:	str	r3, [sp, #60]	; 0x3c
   31564:	ldrd	r2, [sp, #8]
   31568:	bic	sl, r7, #-16777216	; 0xff000000
   3156c:	bic	sl, sl, #15728640	; 0xf00000
   31570:	cmp	r8, #0
   31574:	str	sl, [sp, #128]	; 0x80
   31578:	str	r2, [sp, #40]	; 0x28
   3157c:	beq	3187c <luaL_where@@Base+0x11778>
   31580:	orr	sl, sl, #1048576	; 0x100000
   31584:	cmp	r2, #0
   31588:	str	sl, [sp, #128]	; 0x80
   3158c:	bne	31ab4 <luaL_where@@Base+0x119b0>
   31590:	sub	r1, r8, #1040	; 0x410
   31594:	sub	r1, r1, #3
   31598:	cmp	r1, #0
   3159c:	str	r1, [sp, #80]	; 0x50
   315a0:	str	r2, [sp, #76]	; 0x4c
   315a4:	blt	3226c <luaL_where@@Base+0x12168>
   315a8:	add	r9, sp, #128	; 0x80
   315ac:	str	r6, [sp]
   315b0:	ldr	r1, [sp, #40]	; 0x28
   315b4:	mov	r0, r9
   315b8:	mov	r3, #0
   315bc:	ldr	r2, [sp, #80]	; 0x50
   315c0:	bl	151b0 <_start@@Base+0x1e00>
   315c4:	ldr	sl, [sp, #68]	; 0x44
   315c8:	cmp	sl, #0
   315cc:	str	r0, [sp, #40]	; 0x28
   315d0:	bne	31c94 <luaL_where@@Base+0x11b90>
   315d4:	ldr	r2, [sp, #52]	; 0x34
   315d8:	add	r3, r0, r0, lsl #3
   315dc:	add	r3, r2, r3
   315e0:	str	r3, [sp, #52]	; 0x34
   315e4:	ldr	r5, [pc, #-332]	; 314a0 <luaL_where@@Base+0x1139c>
   315e8:	and	r5, r5, r6
   315ec:	cmp	r5, #16
   315f0:	beq	31cc4 <luaL_where@@Base+0x11bc0>
   315f4:	ldr	r2, [sp, #52]	; 0x34
   315f8:	ldr	r3, [sp, #32]
   315fc:	add	r2, r2, r3
   31600:	str	r2, [sp, #52]	; 0x34
   31604:	ldr	r2, [sp, #56]	; 0x38
   31608:	orr	r3, r2, r3
   3160c:	str	r3, [sp, #56]	; 0x38
   31610:	ldr	r3, [sp, #40]	; 0x28
   31614:	ldr	r2, [sp, #56]	; 0x38
   31618:	ldr	r7, [sp, #52]	; 0x34
   3161c:	lsl	r8, r3, #2
   31620:	add	r3, sp, #384	; 0x180
   31624:	add	r3, r3, r8
   31628:	cmp	r2, #0
   3162c:	addne	r7, r7, #1
   31630:	ldr	r2, [r3, #-256]	; 0xffffff00
   31634:	orr	r3, r2, #1
   31638:	clz	r3, r3
   3163c:	eor	r3, r3, #31
   31640:	add	r1, r3, r3, lsl #2
   31644:	add	r3, r3, r1, lsl #1
   31648:	ldr	r1, [sp, #60]	; 0x3c
   3164c:	rsb	r3, r3, r3, lsl #3
   31650:	lsr	r3, r3, #8
   31654:	add	r3, r3, #1
   31658:	add	r7, r7, r3
   3165c:	add	r3, r1, r3, lsl #2
   31660:	ldr	r3, [r3, #840]	; 0x348
   31664:	cmp	r2, r3
   31668:	addhi	r7, r7, #1
   3166c:	cmp	r4, #0
   31670:	beq	31d0c <luaL_where@@Base+0x11c08>
   31674:	ands	r1, r6, #1280	; 0x500
   31678:	bne	31cb4 <luaL_where@@Base+0x11bb0>
   3167c:	cmp	fp, r7
   31680:	sub	r3, fp, #1
   31684:	movls	fp, r3
   31688:	bls	316a8 <luaL_where@@Base+0x115a4>
   3168c:	sub	r3, fp, r7
   31690:	add	r3, r4, r3
   31694:	mov	r2, #32
   31698:	strb	r2, [r4], #1
   3169c:	cmp	r4, r3
   316a0:	bne	31698 <luaL_where@@Base+0x11594>
   316a4:	sub	fp, r7, #1
   316a8:	ldr	r3, [sp, #64]	; 0x40
   316ac:	cmp	r3, #0
   316b0:	beq	316c8 <luaL_where@@Base+0x115c4>
   316b4:	ldrb	r3, [sp, #64]	; 0x40
   316b8:	add	r4, r4, #1
   316bc:	strb	r3, [r4, #-1]
   316c0:	cmp	r1, #1024	; 0x400
   316c4:	beq	31cdc <luaL_where@@Base+0x11bd8>
   316c8:	add	r3, sp, #384	; 0x180
   316cc:	add	r8, r3, r8
   316d0:	mov	r0, r4
   316d4:	ldr	r1, [r8, #-256]	; 0xffffff00
   316d8:	bl	14d4c <_start@@Base+0x199c>
   316dc:	ldr	r3, [sp, #40]	; 0x28
   316e0:	cmp	r3, #0
   316e4:	beq	31700 <luaL_where@@Base+0x115fc>
   316e8:	add	r8, sp, #128	; 0x80
   316ec:	add	r4, r8, r3, lsl #2
   316f0:	ldr	r1, [r4, #-4]!
   316f4:	bl	1507c <_start@@Base+0x1ccc>
   316f8:	cmp	r8, r4
   316fc:	bne	316f0 <luaL_where@@Base+0x115ec>
   31700:	ldr	r3, [sp, #56]	; 0x38
   31704:	cmp	r3, #0
   31708:	beq	31798 <luaL_where@@Base+0x11694>
   3170c:	ldr	r4, [sp, #32]
   31710:	mov	r3, #46	; 0x2e
   31714:	cmp	sl, #0
   31718:	cmpne	r4, #0
   3171c:	strb	r3, [r0]
   31720:	add	r0, r0, #1
   31724:	ble	31758 <luaL_where@@Base+0x11654>
   31728:	mov	r8, #0
   3172c:	sub	r8, r8, #1
   31730:	and	r8, r8, #63	; 0x3f
   31734:	add	r3, sp, #384	; 0x180
   31738:	add	r3, r3, r8, lsl #2
   3173c:	sub	r4, r4, #9
   31740:	ldr	r1, [r3, #-256]	; 0xffffff00
   31744:	bl	1507c <_start@@Base+0x1ccc>
   31748:	cmp	sl, r8
   3174c:	cmpne	r4, #0
   31750:	bgt	3172c <luaL_where@@Base+0x11628>
   31754:	str	r4, [sp, #32]
   31758:	cmp	r5, #16
   3175c:	ldr	r3, [sp, #32]
   31760:	beq	31fe4 <luaL_where@@Base+0x11ee0>
   31764:	cmp	r3, #0
   31768:	movle	r4, r0
   3176c:	ble	31790 <luaL_where@@Base+0x1168c>
   31770:	ldr	r3, [sp, #32]
   31774:	add	r4, r0, r3
   31778:	mov	r3, #48	; 0x30
   3177c:	strb	r3, [r0], #1
   31780:	cmp	r0, r4
   31784:	bne	3177c <luaL_where@@Base+0x11678>
   31788:	mov	r3, #0
   3178c:	str	r3, [sp, #32]
   31790:	ldr	r3, [sp, #32]
   31794:	add	r0, r4, r3
   31798:	and	r6, r6, #256	; 0x100
   3179c:	b	30e34 <luaL_where@@Base+0x10d30>
   317a0:	cmp	sl, #0
   317a4:	beq	317b0 <luaL_where@@Base+0x116ac>
   317a8:	strb	sl, [r4]
   317ac:	add	r4, r4, #1
   317b0:	mov	r1, r4
   317b4:	mov	r3, #48	; 0x30
   317b8:	cmp	ip, #1024	; 0x400
   317bc:	strb	r3, [r1], #2
   317c0:	strb	r0, [r4, #1]
   317c4:	bne	30d84 <luaL_where@@Base+0x10c80>
   317c8:	cmp	fp, r7
   317cc:	sub	r0, fp, #1
   317d0:	movls	fp, r0
   317d4:	bls	30d84 <luaL_where@@Base+0x10c80>
   317d8:	sub	r0, fp, r7
   317dc:	add	r0, r1, r0
   317e0:	strb	r3, [r1], #1
   317e4:	cmp	r1, r0
   317e8:	bne	317e0 <luaL_where@@Base+0x116dc>
   317ec:	sub	fp, r7, #1
   317f0:	b	30d84 <luaL_where@@Base+0x10c80>
   317f4:	ldr	r3, [sp, #16]
   317f8:	orrs	r2, r7, r3
   317fc:	beq	30c80 <luaL_where@@Base+0x10b7c>
   31800:	cmp	r7, #0
   31804:	ldrd	r0, [sp, #8]
   31808:	clzne	r7, r7
   3180c:	clzeq	r7, r3
   31810:	eorne	r7, r7, #31
   31814:	eoreq	r7, r7, #31
   31818:	rsbne	r7, r7, #20
   3181c:	rsbeq	r7, r7, #52	; 0x34
   31820:	sub	r2, r7, #32
   31824:	lsl	r3, r1, r7
   31828:	ldr	r1, [sp, #8]
   3182c:	orr	r3, r3, r0, lsl r2
   31830:	rsb	r2, r7, #32
   31834:	ldr	r8, [pc, #-920]	; 314a4 <luaL_where@@Base+0x113a0>
   31838:	orr	r3, r3, r1, lsr r2
   3183c:	lsl	r2, r1, r7
   31840:	cmn	r5, #1
   31844:	strd	r2, [sp, #8]
   31848:	sub	r8, r8, r7
   3184c:	bne	30c88 <luaL_where@@Base+0x10b84>
   31850:	ldrd	r2, [sp, #8]
   31854:	cmp	r2, #0
   31858:	beq	319d8 <luaL_where@@Base+0x118d4>
   3185c:	rsb	r5, r2, #0
   31860:	and	r5, r5, r2
   31864:	clz	r5, r5
   31868:	rsb	r5, r5, #31
   3186c:	mov	r3, r2
   31870:	lsr	r5, r5, #2
   31874:	rsb	r5, r5, #13
   31878:	b	30cc0 <luaL_where@@Base+0x10bbc>
   3187c:	ldr	r3, [sp, #8]
   31880:	cmp	r3, #0
   31884:	ldrne	r3, [pc, #-996]	; 314a8 <luaL_where@@Base+0x113a4>
   31888:	strne	r3, [sp, #80]	; 0x50
   3188c:	beq	31aa0 <luaL_where@@Base+0x1199c>
   31890:	mov	r3, #0
   31894:	str	r3, [sp, #76]	; 0x4c
   31898:	b	30f8c <luaL_where@@Base+0x10e88>
   3189c:	mov	r3, #6
   318a0:	str	r3, [sp, #28]
   318a4:	mov	sl, #45	; 0x2d
   318a8:	b	30c5c <luaL_where@@Base+0x10b58>
   318ac:	mov	r3, #1
   318b0:	str	r3, [sp, #52]	; 0x34
   318b4:	mov	r3, #45	; 0x2d
   318b8:	str	r3, [sp, #64]	; 0x40
   318bc:	b	30e98 <luaL_where@@Base+0x10d94>
   318c0:	ldr	r3, [sp, #36]	; 0x24
   318c4:	cmp	fp, r7
   318c8:	movcs	r1, fp
   318cc:	ldr	r4, [r3]
   318d0:	ldr	r3, [r3, #4]
   318d4:	movcc	r1, r7
   318d8:	sub	r3, r3, r4
   318dc:	cmp	r1, r3
   318e0:	bls	30d34 <luaL_where@@Base+0x10c30>
   318e4:	ldr	r0, [sp, #36]	; 0x24
   318e8:	str	r2, [sp, #28]
   318ec:	bl	2ff68 <luaL_where@@Base+0xfe64>
   318f0:	ldr	r2, [sp, #28]
   318f4:	mov	r4, r0
   318f8:	b	30d34 <luaL_where@@Base+0x10c30>
   318fc:	rsb	r3, r5, r5, lsl #30
   31900:	ldr	lr, [sp, #8]
   31904:	lsl	r3, r3, #2
   31908:	add	r2, r3, #52	; 0x34
   3190c:	ldr	r4, [sp, #12]
   31910:	rsb	r0, r2, #32
   31914:	lsr	lr, lr, r2
   31918:	add	r3, r3, #20
   3191c:	orr	lr, lr, r4, lsl r0
   31920:	cmp	r5, #0
   31924:	lsr	r2, r4, r2
   31928:	orr	r3, lr, r4, lsr r3
   3192c:	bne	30de8 <luaL_where@@Base+0x10ce4>
   31930:	b	30e14 <luaL_where@@Base+0x10d10>
   31934:	bic	r2, r7, #-16777216	; 0xff000000
   31938:	ldr	r1, [sp, #16]
   3193c:	tst	r6, #8192	; 0x2000
   31940:	bic	r2, r2, #15728640	; 0xf00000
   31944:	ldr	r3, [pc, #-1184]	; 314ac <luaL_where@@Base+0x113a8>
   31948:	moveq	r3, #0
   3194c:	orrs	r2, r2, r1
   31950:	beq	319fc <luaL_where@@Base+0x118f8>
   31954:	and	r2, r6, #2048	; 0x800
   31958:	ldr	r5, [pc, #-1200]	; 314b0 <luaL_where@@Base+0x113ac>
   3195c:	cmp	r2, #0
   31960:	movne	r8, #32
   31964:	moveq	r8, #0
   31968:	movne	r7, #4
   3196c:	moveq	r7, #3
   31970:	eor	r5, r5, r3
   31974:	cmp	r4, #0
   31978:	beq	31a6c <luaL_where@@Base+0x11968>
   3197c:	ands	r6, r6, #256	; 0x100
   31980:	bne	319b0 <luaL_where@@Base+0x118ac>
   31984:	cmp	r7, fp
   31988:	sub	r3, fp, #1
   3198c:	movcs	fp, r3
   31990:	bcs	319b0 <luaL_where@@Base+0x118ac>
   31994:	sub	r3, fp, r7
   31998:	add	r3, r4, r3
   3199c:	mov	r2, #32
   319a0:	strb	r2, [r4], #1
   319a4:	cmp	r4, r3
   319a8:	bne	319a0 <luaL_where@@Base+0x1189c>
   319ac:	sub	fp, r7, #1
   319b0:	cmp	r8, #0
   319b4:	strbne	r8, [r4]
   319b8:	addne	r4, r4, #1
   319bc:	asr	r2, r5, #16
   319c0:	asr	r3, r5, #8
   319c4:	strb	r5, [r4, #2]
   319c8:	strb	r2, [r4]
   319cc:	strb	r3, [r4, #1]
   319d0:	add	r0, r4, #3
   319d4:	b	30e34 <luaL_where@@Base+0x10d30>
   319d8:	ldr	r3, [sp, #12]
   319dc:	orr	r3, r3, #1048576	; 0x100000
   319e0:	rsb	r5, r3, #0
   319e4:	and	r5, r5, r3
   319e8:	clz	r5, r5
   319ec:	rsb	r5, r5, #31
   319f0:	lsr	r5, r5, #2
   319f4:	rsb	r5, r5, #5
   319f8:	b	30cc0 <luaL_where@@Base+0x10bbc>
   319fc:	ldr	r5, [pc, #-1360]	; 314b4 <luaL_where@@Base+0x113b0>
   31a00:	cmp	r7, #0
   31a04:	eor	r5, r5, r3
   31a08:	blt	31a38 <luaL_where@@Base+0x11934>
   31a0c:	tst	r6, #512	; 0x200
   31a10:	movne	r8, #43	; 0x2b
   31a14:	movne	r7, #4
   31a18:	bne	31974 <luaL_where@@Base+0x11870>
   31a1c:	and	r3, r6, #2048	; 0x800
   31a20:	cmp	r3, #0
   31a24:	moveq	r8, #0
   31a28:	movne	r8, #32
   31a2c:	moveq	r7, #3
   31a30:	movne	r7, #4
   31a34:	b	31974 <luaL_where@@Base+0x11870>
   31a38:	mov	r8, #45	; 0x2d
   31a3c:	mov	r7, #4
   31a40:	b	31974 <luaL_where@@Base+0x11870>
   31a44:	ldr	r3, [r7]
   31a48:	cmp	r3, #0
   31a4c:	bne	311a4 <luaL_where@@Base+0x110a0>
   31a50:	cmp	ip, sl
   31a54:	bne	31198 <luaL_where@@Base+0x11094>
   31a58:	ldr	fp, [sp, #88]	; 0x58
   31a5c:	ldr	r5, [sp, #92]	; 0x5c
   31a60:	ldr	r8, [sp, #96]	; 0x60
   31a64:	ldr	r7, [sp, #100]	; 0x64
   31a68:	b	3124c <luaL_where@@Base+0x11148>
   31a6c:	ldr	r3, [sp, #36]	; 0x24
   31a70:	cmp	r7, fp
   31a74:	movcs	r1, r7
   31a78:	ldr	r4, [r3]
   31a7c:	ldr	r3, [r3, #4]
   31a80:	movcc	r1, fp
   31a84:	sub	r3, r3, r4
   31a88:	cmp	r1, r3
   31a8c:	bls	3197c <luaL_where@@Base+0x11878>
   31a90:	ldr	r0, [sp, #36]	; 0x24
   31a94:	bl	2ff68 <luaL_where@@Base+0xfe64>
   31a98:	mov	r4, r0
   31a9c:	b	3197c <luaL_where@@Base+0x11878>
   31aa0:	ldr	r0, [pc, #-1520]	; 314b8 <luaL_where@@Base+0x113b4>
   31aa4:	ldr	r1, [pc, #-1520]	; 314bc <luaL_where@@Base+0x113b8>
   31aa8:	str	r3, [sp, #76]	; 0x4c
   31aac:	strd	r0, [sp, #80]	; 0x50
   31ab0:	b	31014 <luaL_where@@Base+0x10f10>
   31ab4:	sub	r3, r8, #1072	; 0x430
   31ab8:	sub	r3, r3, #4
   31abc:	str	r3, [sp, #80]	; 0x50
   31ac0:	b	31890 <luaL_where@@Base+0x1178c>
   31ac4:	ldr	r3, [sp, #56]	; 0x38
   31ac8:	str	r3, [sp, #32]
   31acc:	cmp	r9, #0
   31ad0:	rsblt	r9, r9, #0
   31ad4:	movlt	r3, #45	; 0x2d
   31ad8:	movge	r3, #43	; 0x2b
   31adc:	ldr	r2, [sp, #52]	; 0x34
   31ae0:	str	r3, [sp, #8]
   31ae4:	orr	r3, r9, #1
   31ae8:	clz	r3, r3
   31aec:	eor	r3, r3, #31
   31af0:	add	r7, r2, #3
   31af4:	add	r2, r3, r3, lsl #2
   31af8:	ldr	r1, [sp, #32]
   31afc:	add	r3, r3, r2, lsl #1
   31b00:	ldr	r0, [sp, #56]	; 0x38
   31b04:	rsb	r3, r3, r3, lsl #3
   31b08:	orrs	r5, r1, r0
   31b0c:	movne	r2, #1
   31b10:	moveq	r2, #0
   31b14:	add	r7, r7, r1
   31b18:	lsr	r3, r3, #8
   31b1c:	add	r3, r3, #1
   31b20:	add	r7, r7, r2
   31b24:	ldr	r2, [sp, #60]	; 0x3c
   31b28:	cmp	r9, #9
   31b2c:	addle	r7, r7, #1
   31b30:	add	r2, r2, r3, lsl #2
   31b34:	add	r3, r7, r3
   31b38:	ldr	r2, [r2, #840]	; 0x348
   31b3c:	cmp	r9, r2
   31b40:	movls	r7, r3
   31b44:	addhi	r7, r3, #1
   31b48:	cmp	r4, #0
   31b4c:	beq	31fac <luaL_where@@Base+0x11ea8>
   31b50:	ands	r1, r6, #1280	; 0x500
   31b54:	bne	31d44 <luaL_where@@Base+0x11c40>
   31b58:	cmp	fp, r7
   31b5c:	sub	r3, fp, #1
   31b60:	movls	fp, r3
   31b64:	bls	31b84 <luaL_where@@Base+0x11a80>
   31b68:	sub	r3, fp, r7
   31b6c:	add	r3, r4, r3
   31b70:	mov	r2, #32
   31b74:	strb	r2, [r4], #1
   31b78:	cmp	r4, r3
   31b7c:	bne	31b74 <luaL_where@@Base+0x11a70>
   31b80:	sub	fp, r7, #1
   31b84:	ldr	r3, [sp, #64]	; 0x40
   31b88:	cmp	r3, #0
   31b8c:	beq	31ba4 <luaL_where@@Base+0x11aa0>
   31b90:	ldrb	r3, [sp, #64]	; 0x40
   31b94:	add	r4, r4, #1
   31b98:	strb	r3, [r4, #-1]
   31b9c:	cmp	r1, #1024	; 0x400
   31ba0:	beq	31f64 <luaL_where@@Base+0x11e60>
   31ba4:	ldr	r2, [sp, #40]	; 0x28
   31ba8:	add	r3, sp, #384	; 0x180
   31bac:	add	r8, r4, #1
   31bb0:	add	r3, r3, r2, lsl #2
   31bb4:	mov	r0, r8
   31bb8:	ldr	r1, [r3, #-256]	; 0xffffff00
   31bbc:	bl	14d4c <_start@@Base+0x199c>
   31bc0:	ldrb	r3, [r4, #1]
   31bc4:	cmp	r5, #0
   31bc8:	strb	r3, [r4]
   31bcc:	beq	31c5c <luaL_where@@Base+0x11b58>
   31bd0:	add	r3, r4, #2
   31bd4:	ldr	r1, [sp, #32]
   31bd8:	sub	r3, r0, r3
   31bdc:	ldr	r2, [sp, #40]	; 0x28
   31be0:	sub	r5, r1, r3
   31be4:	cmp	r2, sl
   31be8:	cmpne	r5, #0
   31bec:	mov	r3, #46	; 0x2e
   31bf0:	strb	r3, [r4, #1]
   31bf4:	ble	31c24 <luaL_where@@Base+0x11b20>
   31bf8:	mov	r4, r2
   31bfc:	sub	r4, r4, #1
   31c00:	and	r4, r4, #63	; 0x3f
   31c04:	add	r3, sp, #384	; 0x180
   31c08:	add	r3, r3, r4, lsl #2
   31c0c:	sub	r5, r5, #9
   31c10:	ldr	r1, [r3, #-256]	; 0xffffff00
   31c14:	bl	1507c <_start@@Base+0x1ccc>
   31c18:	cmp	sl, r4
   31c1c:	cmpne	r5, #0
   31c20:	bgt	31bfc <luaL_where@@Base+0x11af8>
   31c24:	ldr	r3, [pc, #-1900]	; 314c0 <luaL_where@@Base+0x113bc>
   31c28:	and	r3, r3, r6
   31c2c:	cmp	r3, #32
   31c30:	beq	32128 <luaL_where@@Base+0x12024>
   31c34:	cmp	r5, #0
   31c38:	movle	r3, r0
   31c3c:	ble	31c58 <luaL_where@@Base+0x11b54>
   31c40:	add	r3, r0, r5
   31c44:	mov	r2, #48	; 0x30
   31c48:	strb	r2, [r0], #1
   31c4c:	cmp	r0, r3
   31c50:	bne	31c48 <luaL_where@@Base+0x11b44>
   31c54:	mov	r5, #0
   31c58:	add	r8, r3, r5
   31c5c:	tst	r6, #8192	; 0x2000
   31c60:	ldrb	r2, [sp, #8]
   31c64:	moveq	r3, #101	; 0x65
   31c68:	movne	r3, #69	; 0x45
   31c6c:	cmp	r9, #9
   31c70:	strb	r3, [r8]
   31c74:	movle	r3, #48	; 0x30
   31c78:	strb	r2, [r8, #1]
   31c7c:	addgt	r0, r8, #2
   31c80:	addle	r0, r8, #3
   31c84:	strble	r3, [r8, #2]
   31c88:	mov	r1, r9
   31c8c:	bl	14d4c <_start@@Base+0x199c>
   31c90:	b	31798 <luaL_where@@Base+0x11694>
   31c94:	ldr	r3, [sp, #40]	; 0x28
   31c98:	add	r2, sp, #384	; 0x180
   31c9c:	mov	sl, #0
   31ca0:	add	r1, r3, r3, lsl #3
   31ca4:	add	r3, r2, r3, lsl #2
   31ca8:	sub	r1, r1, #1
   31cac:	ldr	r2, [r3, #-256]	; 0xffffff00
   31cb0:	b	312c4 <luaL_where@@Base+0x111c0>
   31cb4:	ldr	r3, [sp, #64]	; 0x40
   31cb8:	cmp	r3, #0
   31cbc:	beq	316c0 <luaL_where@@Base+0x115bc>
   31cc0:	b	316b4 <luaL_where@@Base+0x115b0>
   31cc4:	ldr	r3, [sp, #32]
   31cc8:	cmp	r3, #0
   31ccc:	cmpne	fp, #0
   31cd0:	bne	32018 <luaL_where@@Base+0x11f14>
   31cd4:	ldr	r2, [sp, #52]	; 0x34
   31cd8:	b	315fc <luaL_where@@Base+0x114f8>
   31cdc:	cmp	fp, r7
   31ce0:	sub	r3, fp, #1
   31ce4:	movls	fp, r3
   31ce8:	bls	316c8 <luaL_where@@Base+0x115c4>
   31cec:	sub	r3, fp, r7
   31cf0:	add	r3, r4, r3
   31cf4:	mov	r2, #48	; 0x30
   31cf8:	strb	r2, [r4], #1
   31cfc:	cmp	r4, r3
   31d00:	bne	31cf8 <luaL_where@@Base+0x11bf4>
   31d04:	sub	fp, r7, #1
   31d08:	b	316c8 <luaL_where@@Base+0x115c4>
   31d0c:	ldr	r3, [sp, #36]	; 0x24
   31d10:	cmp	fp, r7
   31d14:	movcs	r1, fp
   31d18:	ldr	r4, [r3]
   31d1c:	ldr	r3, [r3, #4]
   31d20:	movcc	r1, r7
   31d24:	add	r1, r1, #8
   31d28:	sub	r3, r3, r4
   31d2c:	cmp	r1, r3
   31d30:	bls	31674 <luaL_where@@Base+0x11570>
   31d34:	ldr	r0, [sp, #36]	; 0x24
   31d38:	bl	2ff68 <luaL_where@@Base+0xfe64>
   31d3c:	mov	r4, r0
   31d40:	b	31674 <luaL_where@@Base+0x11570>
   31d44:	ldr	r3, [sp, #64]	; 0x40
   31d48:	cmp	r3, #0
   31d4c:	beq	31b9c <luaL_where@@Base+0x11a98>
   31d50:	b	31b90 <luaL_where@@Base+0x11a8c>
   31d54:	ldrd	r2, [sp, #16]
   31d58:	strd	r2, [sp, #8]
   31d5c:	b	31564 <luaL_where@@Base+0x11460>
   31d60:	ldr	r3, [sp, #40]	; 0x28
   31d64:	add	r1, r3, r3, lsl #3
   31d68:	sub	r1, r1, #1
   31d6c:	b	312c4 <luaL_where@@Base+0x111c0>
   31d70:	ldr	r3, [sp, #32]
   31d74:	ldr	r5, [sp, #84]	; 0x54
   31d78:	mvn	r3, r3
   31d7c:	add	r3, r3, r5
   31d80:	ldr	r1, [sp, #40]	; 0x28
   31d84:	mov	r2, #5
   31d88:	add	r0, sp, #128	; 0x80
   31d8c:	bl	1d37c <_start@@Base+0x9fcc>
   31d90:	add	r2, sp, #384	; 0x180
   31d94:	add	r3, r2, r0, lsl #2
   31d98:	str	r0, [sp, #40]	; 0x28
   31d9c:	ldr	r2, [r3, #-256]	; 0xffffff00
   31da0:	orr	r3, r2, #1
   31da4:	clz	r3, r3
   31da8:	eor	r3, r3, #31
   31dac:	add	r1, r3, r3, lsl #2
   31db0:	add	r3, r3, r1, lsl #1
   31db4:	ldr	r1, [sp, #60]	; 0x3c
   31db8:	rsb	r3, r3, r3, lsl #3
   31dbc:	lsr	r3, r3, #8
   31dc0:	add	r3, r3, #1
   31dc4:	add	r1, r1, r3, lsl #2
   31dc8:	ldr	r1, [r1, #840]	; 0x348
   31dcc:	cmp	r2, r1
   31dd0:	addhi	r3, r3, #1
   31dd4:	ldr	r2, [sp, #92]	; 0x5c
   31dd8:	cmp	r3, r2
   31ddc:	addne	r5, r5, #1
   31de0:	str	r5, [sp, #88]	; 0x58
   31de4:	b	314c8 <luaL_where@@Base+0x113c4>
   31de8:	rsb	r3, sl, #0
   31dec:	and	r3, r3, #63	; 0x3f
   31df0:	ldr	r2, [sp, #32]
   31df4:	add	r3, r3, r3, lsl #3
   31df8:	cmp	r3, r2
   31dfc:	bls	32254 <luaL_where@@Base+0x12150>
   31e00:	ldr	r3, [sp, #32]
   31e04:	mov	r2, #5
   31e08:	mvn	r3, r3
   31e0c:	ldr	r1, [sp, #40]	; 0x28
   31e10:	add	r0, sp, #128	; 0x80
   31e14:	bl	1d37c <_start@@Base+0x9fcc>
   31e18:	ldr	r2, [sp, #52]	; 0x34
   31e1c:	add	r3, r0, r0, lsl #3
   31e20:	add	r3, r2, r3
   31e24:	str	r0, [sp, #40]	; 0x28
   31e28:	str	r3, [sp, #52]	; 0x34
   31e2c:	b	315e4 <luaL_where@@Base+0x114e0>
   31e30:	ldr	r2, [sp, #40]	; 0x28
   31e34:	ldr	r3, [sp, #32]
   31e38:	ldr	r1, [r9, r2, lsl #2]
   31e3c:	ldr	r2, [sp, #92]	; 0x5c
   31e40:	add	r3, r3, #10
   31e44:	sub	r9, r3, r2
   31e48:	add	r3, sp, #260	; 0x104
   31e4c:	str	r3, [sp, #8]
   31e50:	b	31404 <luaL_where@@Base+0x11300>
   31e54:	ldr	r3, [sp, #56]	; 0x38
   31e58:	cmp	r3, #0
   31e5c:	bne	31acc <luaL_where@@Base+0x119c8>
   31e60:	ldr	r3, [sp, #32]
   31e64:	cmp	r3, #0
   31e68:	cmpne	fp, #5
   31e6c:	bls	31acc <luaL_where@@Base+0x119c8>
   31e70:	ldr	r2, [sp, #40]	; 0x28
   31e74:	ldr	r7, [sp, #92]	; 0x5c
   31e78:	sub	r8, r2, sl
   31e7c:	and	r8, r8, #63	; 0x3f
   31e80:	sub	r5, r7, #1
   31e84:	add	r2, r8, r8, lsl #3
   31e88:	add	r5, r2, r5
   31e8c:	cmp	r3, r5
   31e90:	bcs	3220c <luaL_where@@Base+0x12108>
   31e94:	sub	r0, r3, r7
   31e98:	mov	r1, #9
   31e9c:	add	r0, r0, #9
   31ea0:	mov	r5, r3
   31ea4:	bl	6dc98 <luaL_openlibs@@Base+0x44d8>
   31ea8:	ldr	r3, [sp, #40]	; 0x28
   31eac:	add	r8, sp, #116	; 0x74
   31eb0:	rsb	r7, r7, #9
   31eb4:	add	r7, r7, r5
   31eb8:	sub	r0, r3, r0
   31ebc:	and	sl, r0, #63	; 0x3f
   31ec0:	sub	r2, r3, sl
   31ec4:	add	r3, sp, #384	; 0x180
   31ec8:	add	r3, r3, sl, lsl #2
   31ecc:	and	r2, r2, #63	; 0x3f
   31ed0:	ldr	r1, [r3, #-256]	; 0xffffff00
   31ed4:	mov	r0, r8
   31ed8:	add	r3, r2, r2, lsl #3
   31edc:	str	r3, [sp, #8]
   31ee0:	bl	1507c <_start@@Base+0x1ccc>
   31ee4:	ldr	r3, [sp, #8]
   31ee8:	sub	r7, r7, r3
   31eec:	add	r3, sp, #384	; 0x180
   31ef0:	add	r3, r3, r7
   31ef4:	ldrb	r3, [r3, #-268]	; 0xfffffef4
   31ef8:	cmp	r3, #48	; 0x30
   31efc:	bne	31acc <luaL_where@@Base+0x119c8>
   31f00:	ldr	r5, [sp, #32]
   31f04:	b	31f14 <luaL_where@@Base+0x11e10>
   31f08:	ldrb	r3, [r3, #-268]	; 0xfffffef4
   31f0c:	cmp	r3, #48	; 0x30
   31f10:	bne	31f5c <luaL_where@@Base+0x11e58>
   31f14:	cmp	r7, #0
   31f18:	mov	r0, r8
   31f1c:	sub	r5, r5, #1
   31f20:	bne	31f48 <luaL_where@@Base+0x11e44>
   31f24:	ldr	r3, [sp, #40]	; 0x28
   31f28:	cmp	r3, sl
   31f2c:	beq	3224c <luaL_where@@Base+0x12148>
   31f30:	add	sl, sl, #1
   31f34:	add	r3, sp, #384	; 0x180
   31f38:	add	r3, r3, sl, lsl #2
   31f3c:	mov	r7, #9
   31f40:	ldr	r1, [r3, #-256]	; 0xffffff00
   31f44:	bl	1507c <_start@@Base+0x1ccc>
   31f48:	sub	r7, r7, #1
   31f4c:	add	r3, sp, #384	; 0x180
   31f50:	cmp	r5, #0
   31f54:	add	r3, r3, r7
   31f58:	bne	31f08 <luaL_where@@Base+0x11e04>
   31f5c:	str	r5, [sp, #32]
   31f60:	b	31acc <luaL_where@@Base+0x119c8>
   31f64:	cmp	fp, r7
   31f68:	sub	r3, fp, #1
   31f6c:	movls	fp, r3
   31f70:	bls	31ba4 <luaL_where@@Base+0x11aa0>
   31f74:	sub	r3, fp, r7
   31f78:	add	r3, r4, r3
   31f7c:	mov	r2, #48	; 0x30
   31f80:	strb	r2, [r4], #1
   31f84:	cmp	r4, r3
   31f88:	bne	31f80 <luaL_where@@Base+0x11e7c>
   31f8c:	sub	fp, r7, #1
   31f90:	b	31ba4 <luaL_where@@Base+0x11aa0>
   31f94:	ldr	r3, [sp, #84]	; 0x54
   31f98:	cmp	r3, #8
   31f9c:	bls	32200 <luaL_where@@Base+0x120fc>
   31fa0:	mvn	r3, #0
   31fa4:	mov	r0, r3
   31fa8:	b	310ec <luaL_where@@Base+0x10fe8>
   31fac:	ldr	r3, [sp, #36]	; 0x24
   31fb0:	cmp	fp, r7
   31fb4:	movcs	r1, fp
   31fb8:	ldr	r4, [r3]
   31fbc:	ldr	r3, [r3, #4]
   31fc0:	movcc	r1, r7
   31fc4:	add	r1, r1, #5
   31fc8:	sub	r3, r3, r4
   31fcc:	cmp	r1, r3
   31fd0:	bls	31b50 <luaL_where@@Base+0x11a4c>
   31fd4:	ldr	r0, [sp, #36]	; 0x24
   31fd8:	bl	2ff68 <luaL_where@@Base+0xfe64>
   31fdc:	mov	r4, r0
   31fe0:	b	31b50 <luaL_where@@Base+0x11a4c>
   31fe4:	and	r4, r3, r3, asr #31
   31fe8:	add	r0, r0, r4
   31fec:	ldrb	r2, [r0, #-1]
   31ff0:	cmp	r2, #48	; 0x30
   31ff4:	bne	3200c <luaL_where@@Base+0x11f08>
   31ff8:	sub	r3, r0, #1
   31ffc:	mov	r0, r3
   32000:	ldrb	r2, [r3, #-1]!
   32004:	cmp	r2, #48	; 0x30
   32008:	beq	31ffc <luaL_where@@Base+0x11ef8>
   3200c:	cmp	r2, #46	; 0x2e
   32010:	subeq	r0, r0, #1
   32014:	b	31798 <luaL_where@@Base+0x11694>
   32018:	cmp	sl, #0
   3201c:	streq	sl, [sp, #32]
   32020:	beq	31610 <luaL_where@@Base+0x1150c>
   32024:	rsb	r7, sl, sl, lsl #29
   32028:	ldr	r1, [sp, #32]
   3202c:	rsb	r7, sl, r7, lsl #3
   32030:	add	r2, r7, #576	; 0x240
   32034:	cmp	r1, r2
   32038:	bcs	321ac <luaL_where@@Base+0x120a8>
   3203c:	ldr	r3, [pc, #-2944]	; 314c4 <luaL_where@@Base+0x113c0>
   32040:	add	r2, r1, #8
   32044:	add	r8, sp, #116	; 0x74
   32048:	umull	r2, r3, r2, r3
   3204c:	sub	r9, r1, #568	; 0x238
   32050:	lsr	r3, r3, #1
   32054:	rsb	sl, r3, #64	; 0x40
   32058:	add	r3, sp, #384	; 0x180
   3205c:	add	r3, r3, sl, lsl #2
   32060:	rsb	r7, sl, sl, lsl #29
   32064:	mov	r0, r8
   32068:	ldr	r1, [r3, #-256]	; 0xffffff00
   3206c:	rsb	r7, sl, r7, lsl #3
   32070:	bl	1507c <_start@@Base+0x1ccc>
   32074:	sub	r7, r9, r7
   32078:	add	r3, sp, #384	; 0x180
   3207c:	add	r3, r3, r7
   32080:	ldrb	r3, [r3, #-268]	; 0xfffffef4
   32084:	cmp	r3, #48	; 0x30
   32088:	ldreq	r9, [sp, #32]
   3208c:	beq	320a0 <luaL_where@@Base+0x11f9c>
   32090:	b	315f4 <luaL_where@@Base+0x114f0>
   32094:	ldrb	r3, [r3, #-268]	; 0xfffffef4
   32098:	cmp	r3, #48	; 0x30
   3209c:	bne	321e0 <luaL_where@@Base+0x120dc>
   320a0:	cmp	r7, #0
   320a4:	mov	r0, r8
   320a8:	sub	r9, r9, #1
   320ac:	bne	320d0 <luaL_where@@Base+0x11fcc>
   320b0:	cmp	sl, #63	; 0x3f
   320b4:	beq	32244 <luaL_where@@Base+0x12140>
   320b8:	add	sl, sl, #1
   320bc:	add	r3, sp, #384	; 0x180
   320c0:	add	r3, r3, sl, lsl #2
   320c4:	mov	r7, #9
   320c8:	ldr	r1, [r3, #-256]	; 0xffffff00
   320cc:	bl	1507c <_start@@Base+0x1ccc>
   320d0:	sub	r7, r7, #1
   320d4:	add	r3, sp, #384	; 0x180
   320d8:	cmp	r9, #0
   320dc:	add	r3, r3, r7
   320e0:	bne	32094 <luaL_where@@Base+0x11f90>
   320e4:	str	r9, [sp, #32]
   320e8:	b	31610 <luaL_where@@Base+0x1150c>
   320ec:	vldr	d7, [pc, #396]	; 32280 <luaL_where@@Base+0x1217c>
   320f0:	vldr	d6, [sp, #40]	; 0x28
   320f4:	ldr	r3, [sp, #76]	; 0x4c
   320f8:	sub	r3, r3, #10
   320fc:	vmul.f64	d7, d6, d7
   32100:	str	r3, [sp, #76]	; 0x4c
   32104:	vstr	d7, [sp, #8]
   32108:	b	30f44 <luaL_where@@Base+0x10e40>
   3210c:	ldr	r3, [sp, #68]	; 0x44
   32110:	str	sl, [sp, #40]	; 0x28
   32114:	cmp	r3, #0
   32118:	mvn	r1, #0
   3211c:	beq	315e4 <luaL_where@@Base+0x114e0>
   32120:	mov	r2, sl
   32124:	b	312c4 <luaL_where@@Base+0x111c0>
   32128:	and	sl, r5, r5, asr #31
   3212c:	add	r8, r0, sl
   32130:	ldrb	r2, [r8, #-1]
   32134:	cmp	r2, #48	; 0x30
   32138:	bne	32150 <luaL_where@@Base+0x1204c>
   3213c:	sub	r3, r8, #1
   32140:	mov	r8, r3
   32144:	ldrb	r2, [r3, #-1]!
   32148:	cmp	r2, #48	; 0x30
   3214c:	beq	32140 <luaL_where@@Base+0x1203c>
   32150:	cmp	r2, #46	; 0x2e
   32154:	subeq	r8, r8, #1
   32158:	b	31c5c <luaL_where@@Base+0x11b58>
   3215c:	add	r3, sp, #256	; 0x100
   32160:	str	r3, [sp, #8]
   32164:	b	31404 <luaL_where@@Base+0x11300>
   32168:	ldr	r3, [sp, #68]	; 0x44
   3216c:	lsr	r2, sl, r2
   32170:	cmp	r3, #0
   32174:	mov	sl, #0
   32178:	str	r2, [sp, #128]	; 0x80
   3217c:	str	sl, [sp, #40]	; 0x28
   32180:	mvn	r1, #0
   32184:	bne	312c4 <luaL_where@@Base+0x111c0>
   32188:	b	315e4 <luaL_where@@Base+0x114e0>
   3218c:	ldr	r2, [pc, #244]	; 32288 <luaL_where@@Base+0x12184>
   32190:	mvn	r3, #0
   32194:	mov	r0, r3
   32198:	smull	r2, r3, r5, r2
   3219c:	ldr	r1, [sp, #72]	; 0x48
   321a0:	sub	r3, r1, r3, asr #1
   321a4:	add	r3, r3, #63	; 0x3f
   321a8:	b	310ec <luaL_where@@Base+0x10fe8>
   321ac:	add	r3, sp, #384	; 0x180
   321b0:	add	r3, r3, sl, lsl #2
   321b4:	add	r8, sp, #116	; 0x74
   321b8:	ldr	r1, [r3, #-256]	; 0xffffff00
   321bc:	mov	r0, r8
   321c0:	str	r2, [sp, #8]
   321c4:	bl	1507c <_start@@Base+0x1ccc>
   321c8:	ldr	r2, [sp, #8]
   321cc:	add	r9, r7, #8
   321d0:	cmp	r2, #0
   321d4:	str	r2, [sp, #32]
   321d8:	bne	32074 <luaL_where@@Base+0x11f70>
   321dc:	b	31610 <luaL_where@@Base+0x1150c>
   321e0:	ldr	r3, [sp, #52]	; 0x34
   321e4:	str	r9, [sp, #32]
   321e8:	add	r3, r3, r9
   321ec:	str	r3, [sp, #52]	; 0x34
   321f0:	ldr	r3, [sp, #56]	; 0x38
   321f4:	orr	r3, r3, r9
   321f8:	str	r3, [sp, #56]	; 0x38
   321fc:	b	31610 <luaL_where@@Base+0x1150c>
   32200:	ldr	ip, [sp, #40]	; 0x28
   32204:	mov	sl, #0
   32208:	b	311c4 <luaL_where@@Base+0x110c0>
   3220c:	ldr	r3, [sp, #92]	; 0x5c
   32210:	add	r8, sp, #116	; 0x74
   32214:	rsb	r7, r3, #9
   32218:	add	r3, sp, #384	; 0x180
   3221c:	add	r3, r3, sl, lsl #2
   32220:	mov	r0, r8
   32224:	ldr	r1, [r3, #-256]	; 0xffffff00
   32228:	str	r2, [sp, #8]
   3222c:	bl	1507c <_start@@Base+0x1ccc>
   32230:	cmp	r5, #0
   32234:	add	r7, r7, r5
   32238:	beq	31ac4 <luaL_where@@Base+0x119c0>
   3223c:	str	r5, [sp, #32]
   32240:	b	31ee4 <luaL_where@@Base+0x11de0>
   32244:	str	r7, [sp, #32]
   32248:	b	31610 <luaL_where@@Base+0x1150c>
   3224c:	str	r7, [sp, #32]
   32250:	b	31acc <luaL_where@@Base+0x119c8>
   32254:	ldr	r3, [sp, #40]	; 0x28
   32258:	ldr	r2, [sp, #52]	; 0x34
   3225c:	add	r3, r3, r3, lsl #3
   32260:	add	r3, r2, r3
   32264:	str	r3, [sp, #52]	; 0x34
   32268:	b	315e4 <luaL_where@@Base+0x114e0>
   3226c:	rsb	r3, r8, #1040	; 0x410
   32270:	add	r3, r3, #3
   32274:	str	r3, [sp, #84]	; 0x54
   32278:	b	3101c <luaL_where@@Base+0x10f18>
   3227c:	nop			; (mov r0, r0)
   32280:	andcs	r0, r0, r0
   32284:	andmi	sl, r2, #95	; 0x5f
   32288:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   3228c:	push	{r4, lr}
   32290:	mov	r2, #0
   32294:	mov	r4, r0
   32298:	bl	30bd4 <luaL_where@@Base+0x10ad0>
   3229c:	str	r0, [r4]
   322a0:	mov	r0, r4
   322a4:	pop	{r4, pc}
   322a8:	push	{r4, lr}
   322ac:	vldr	d0, [r1]
   322b0:	mov	r2, #0
   322b4:	ldr	r1, [pc, #16]	; 322cc <luaL_where@@Base+0x121c8>
   322b8:	mov	r4, r0
   322bc:	bl	30bd4 <luaL_where@@Base+0x10ad0>
   322c0:	str	r0, [r4]
   322c4:	mov	r0, r4
   322c8:	pop	{r4, pc}
   322cc:	svceq	0x00000035
   322d0:	ldr	r3, [r1, #4]
   322d4:	cmn	r3, #5
   322d8:	beq	32334 <luaL_where@@Base+0x12230>
   322dc:	cmn	r3, #14
   322e0:	push	{r4, r5, r6, lr}
   322e4:	mov	r4, r2
   322e8:	beq	32354 <luaL_where@@Base+0x12250>
   322ec:	cmn	r3, #15
   322f0:	bhi	3234c <luaL_where@@Base+0x12248>
   322f4:	ldr	r5, [r0, #8]
   322f8:	vldr	d0, [r1]
   322fc:	add	r6, r5, #80	; 0x50
   32300:	ldr	r3, [r5, #88]	; 0x58
   32304:	str	r0, [r5, #92]	; 0x5c
   32308:	mov	r2, #0
   3230c:	str	r3, [r5, #80]	; 0x50
   32310:	mov	r0, r6
   32314:	ldr	r1, [pc, #100]	; 32380 <luaL_where@@Base+0x1227c>
   32318:	bl	30bd4 <luaL_where@@Base+0x10ad0>
   3231c:	str	r0, [r5, #80]	; 0x50
   32320:	ldr	r3, [r6, #8]
   32324:	sub	r0, r0, r3
   32328:	str	r0, [r4]
   3232c:	ldr	r0, [r6, #8]
   32330:	pop	{r4, r5, r6, pc}
   32334:	ldr	r3, [r1]
   32338:	ldr	r3, [r3, #12]
   3233c:	str	r3, [r2]
   32340:	ldr	r0, [r1]
   32344:	add	r0, r0, #16
   32348:	bx	lr
   3234c:	mov	r0, #0
   32350:	pop	{r4, r5, r6, pc}
   32354:	ldr	r2, [r0, #8]
   32358:	ldr	r1, [r1]
   3235c:	mov	r3, r2
   32360:	ldr	ip, [r2, #88]	; 0x58
   32364:	str	r0, [r2, #92]	; 0x5c
   32368:	str	ip, [r3, #80]!	; 0x50
   3236c:	mov	r0, r3
   32370:	bl	301f4 <luaL_where@@Base+0x100f0>
   32374:	mov	r6, r0
   32378:	ldr	r0, [r0]
   3237c:	b	32320 <luaL_where@@Base+0x1221c>
   32380:	svceq	0x00000035
   32384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32388:	cmp	r2, #0
   3238c:	sub	sp, sp, #12
   32390:	ldrne	r8, [r2, #12]
   32394:	str	r2, [sp]
   32398:	ldr	r2, [sp, #48]	; 0x30
   3239c:	ldreq	r8, [sp]
   323a0:	cmp	r3, r2
   323a4:	mov	r7, r0
   323a8:	mov	sl, r1
   323ac:	bgt	32464 <luaL_where@@Base+0x12360>
   323b0:	mov	fp, r3
   323b4:	lsl	r9, r3, #3
   323b8:	add	r3, r8, #11
   323bc:	str	r3, [sp, #4]
   323c0:	mov	r5, r2
   323c4:	b	32438 <luaL_where@@Base+0x12334>
   323c8:	ldr	r4, [sl, #8]
   323cc:	add	r4, r9, r4
   323d0:	cmp	r4, #0
   323d4:	beq	3245c <luaL_where@@Base+0x12358>
   323d8:	ldr	r3, [r4, #4]
   323dc:	cmn	r3, #5
   323e0:	beq	32470 <luaL_where@@Base+0x1236c>
   323e4:	cmn	r3, #14
   323e8:	beq	324d4 <luaL_where@@Base+0x123d0>
   323ec:	cmn	r3, #15
   323f0:	bhi	3245c <luaL_where@@Base+0x12358>
   323f4:	mov	r2, #0
   323f8:	vldr	d0, [r4]
   323fc:	ldr	r1, [pc, #292]	; 32528 <luaL_where@@Base+0x12424>
   32400:	mov	r0, r7
   32404:	bl	30bd4 <luaL_where@@Base+0x10ad0>
   32408:	ldr	r3, [r7, #4]
   3240c:	sub	r3, r3, r0
   32410:	cmp	r8, r3
   32414:	str	r0, [r7]
   32418:	bhi	324f4 <luaL_where@@Base+0x123f0>
   3241c:	cmp	fp, r5
   32420:	beq	324ac <luaL_where@@Base+0x123a8>
   32424:	cmp	r8, #0
   32428:	bne	324bc <luaL_where@@Base+0x123b8>
   3242c:	add	fp, fp, #1
   32430:	add	r9, r9, #8
   32434:	str	r0, [r7]
   32438:	ldr	r3, [sl, #24]
   3243c:	cmp	r3, fp
   32440:	bhi	323c8 <luaL_where@@Base+0x122c4>
   32444:	mov	r1, fp
   32448:	mov	r0, sl
   3244c:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   32450:	mov	r4, r0
   32454:	cmp	r4, #0
   32458:	bne	323d8 <luaL_where@@Base+0x122d4>
   3245c:	str	fp, [r7]
   32460:	mov	r7, #0
   32464:	mov	r0, r7
   32468:	add	sp, sp, #12
   3246c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32470:	ldr	ip, [r4]
   32474:	ldr	r3, [r7]
   32478:	ldr	r2, [r7, #4]
   3247c:	ldr	r6, [ip, #12]
   32480:	sub	r2, r2, r3
   32484:	add	r1, r8, r6
   32488:	cmp	r1, r2
   3248c:	bhi	32504 <luaL_where@@Base+0x12400>
   32490:	add	r1, ip, #16
   32494:	mov	r2, r6
   32498:	mov	r0, r3
   3249c:	bl	12cb8 <memcpy@plt>
   324a0:	cmp	fp, r5
   324a4:	add	r0, r0, r6
   324a8:	bne	32424 <luaL_where@@Base+0x12320>
   324ac:	str	r0, [r7]
   324b0:	mov	r0, r7
   324b4:	add	sp, sp, #12
   324b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   324bc:	ldr	r3, [sp]
   324c0:	mov	r2, r8
   324c4:	add	r1, r3, #16
   324c8:	bl	12cb8 <memcpy@plt>
   324cc:	add	r0, r0, r8
   324d0:	b	3242c <luaL_where@@Base+0x12328>
   324d4:	ldm	r7, {r0, r3}
   324d8:	ldr	r2, [sp, #4]
   324dc:	sub	r3, r3, r0
   324e0:	cmp	r2, r3
   324e4:	bhi	32518 <luaL_where@@Base+0x12414>
   324e8:	ldr	r1, [r4]
   324ec:	bl	14d4c <_start@@Base+0x199c>
   324f0:	b	3241c <luaL_where@@Base+0x12318>
   324f4:	mov	r1, r8
   324f8:	mov	r0, r7
   324fc:	bl	2ff68 <luaL_where@@Base+0xfe64>
   32500:	b	3241c <luaL_where@@Base+0x12318>
   32504:	mov	r0, r7
   32508:	bl	2ff68 <luaL_where@@Base+0xfe64>
   3250c:	ldr	ip, [r4]
   32510:	mov	r3, r0
   32514:	b	32490 <luaL_where@@Base+0x1238c>
   32518:	mov	r1, r2
   3251c:	mov	r0, r7
   32520:	bl	2ff68 <luaL_where@@Base+0xfe64>
   32524:	b	324e8 <luaL_where@@Base+0x123e4>
   32528:	svceq	0x00000035
   3252c:	cmn	r1, #1
   32530:	push	{r4, r5, r6, lr}
   32534:	mov	r4, r0
   32538:	beq	325c0 <luaL_where@@Base+0x124bc>
   3253c:	ldrb	r3, [r0, #16]
   32540:	cmp	r3, #64	; 0x40
   32544:	cmpne	r3, #61	; 0x3d
   32548:	bne	325b4 <luaL_where@@Base+0x124b0>
   3254c:	ldr	lr, [r0, #12]
   32550:	cmp	r2, #0
   32554:	add	r1, r0, #17
   32558:	sub	r2, lr, #1
   3255c:	beq	325a4 <luaL_where@@Base+0x124a0>
   32560:	sub	lr, lr, #2
   32564:	cmp	lr, #0
   32568:	mov	r3, lr
   3256c:	blt	325a4 <luaL_where@@Base+0x124a0>
   32570:	ldrb	r0, [r1, lr]
   32574:	add	ip, r1, lr
   32578:	cmp	r0, #47	; 0x2f
   3257c:	cmpne	r0, #92	; 0x5c
   32580:	bne	3259c <luaL_where@@Base+0x12498>
   32584:	b	32628 <luaL_where@@Base+0x12524>
   32588:	ldrb	r0, [ip, #-1]!
   3258c:	mov	r4, r3
   32590:	cmp	r0, #92	; 0x5c
   32594:	cmpne	r0, #47	; 0x2f
   32598:	beq	32604 <luaL_where@@Base+0x12500>
   3259c:	subs	r3, r3, #1
   325a0:	bcs	32588 <luaL_where@@Base+0x12484>
   325a4:	ldr	r0, [pc, #136]	; 32634 <luaL_where@@Base+0x12530>
   325a8:	bl	2ffac <luaL_where@@Base+0xfea8>
   325ac:	mov	r0, #1
   325b0:	pop	{r4, r5, r6, pc}
   325b4:	mov	r2, #8
   325b8:	ldr	r1, [pc, #120]	; 32638 <luaL_where@@Base+0x12534>
   325bc:	b	325a4 <luaL_where@@Base+0x124a0>
   325c0:	ldr	r5, [pc, #116]	; 3263c <luaL_where@@Base+0x12538>
   325c4:	mov	r2, #9
   325c8:	ldr	r1, [pc, #112]	; 32640 <luaL_where@@Base+0x1253c>
   325cc:	add	r0, r5, #12
   325d0:	bl	2ffac <luaL_where@@Base+0xfea8>
   325d4:	mov	r1, r4
   325d8:	add	r0, r5, #12
   325dc:	bl	30050 <luaL_where@@Base+0xff4c>
   325e0:	ldr	r3, [r5, #12]
   325e4:	ldr	r2, [r5, #16]
   325e8:	cmp	r2, r3
   325ec:	beq	32614 <luaL_where@@Base+0x12510>
   325f0:	mov	r2, #93	; 0x5d
   325f4:	strb	r2, [r3], #1
   325f8:	mov	r0, #0
   325fc:	str	r3, [r5, #12]
   32600:	pop	{r4, r5, r6, pc}
   32604:	sub	r2, lr, r3
   32608:	add	r4, r4, #1
   3260c:	add	r1, r1, r4
   32610:	b	325a4 <luaL_where@@Base+0x124a0>
   32614:	mov	r1, #1
   32618:	add	r0, r5, #12
   3261c:	bl	2ff68 <luaL_where@@Base+0xfe64>
   32620:	mov	r3, r0
   32624:	b	325f0 <luaL_where@@Base+0x124ec>
   32628:	mov	r4, lr
   3262c:	mov	r2, #0
   32630:	b	32608 <luaL_where@@Base+0x12504>
   32634:	ldrdeq	r4, [r8], -r0
   32638:	strdeq	r2, [r7], -r8
   3263c:	andeq	r4, r8, r4, asr #3
   32640:	andeq	r2, r7, ip, asr #23
   32644:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32648:	sub	sp, sp, #36	; 0x24
   3264c:	subs	r3, r2, #0
   32650:	str	r3, [sp]
   32654:	mov	fp, r0
   32658:	str	r1, [sp, #12]
   3265c:	bge	329f4 <luaL_where@@Base+0x128f0>
   32660:	mvn	r7, r3
   32664:	mvn	r3, #0
   32668:	mov	r2, r3
   3266c:	str	r3, [sp]
   32670:	ldr	r6, [pc, #928]	; 32a18 <luaL_where@@Base+0x12914>
   32674:	mov	r0, #1
   32678:	mov	r1, #0
   3267c:	mov	sl, r2
   32680:	strd	r0, [sp, #4]
   32684:	add	r2, sp, #24
   32688:	mov	r1, r7
   3268c:	mov	r0, fp
   32690:	bl	14b74 <_start@@Base+0x17c4>
   32694:	subs	r8, r0, #0
   32698:	beq	32870 <luaL_where@@Base+0x1276c>
   3269c:	ldr	r3, [sp, #24]
   326a0:	ldr	r9, [r8]
   326a4:	ldr	r5, [sp, #12]
   326a8:	cmp	r3, #0
   326ac:	addne	r3, r8, r3, lsl #3
   326b0:	str	r3, [sp, #16]
   326b4:	ldrb	r4, [r5], #1
   326b8:	cmp	r4, #0
   326bc:	beq	327c4 <luaL_where@@Base+0x126c0>
   326c0:	sub	r3, r4, #70	; 0x46
   326c4:	cmp	r3, #42	; 0x2a
   326c8:	ldrls	pc, [pc, r3, lsl #2]
   326cc:	b	32854 <luaL_where@@Base+0x12750>
   326d0:	andeq	r2, r3, r4, lsl r8
   326d4:	andeq	r2, r3, r4, asr r8
   326d8:	andeq	r2, r3, r4, asr r8
   326dc:	andeq	r2, r3, r4, asr r8
   326e0:	andeq	r2, r3, r4, asr r8
   326e4:	andeq	r2, r3, r4, asr r8
   326e8:	andeq	r2, r3, r4, asr r8
   326ec:	andeq	r2, r3, r4, asr r8
   326f0:	andeq	r2, r3, r4, asr r8
   326f4:	andeq	r2, r3, r4, asr r8
   326f8:	andeq	r2, r3, r4, asr r8
   326fc:	andeq	r2, r3, r4, asr r8
   32700:	andeq	r2, r3, r4, asr r8
   32704:	andeq	r2, r3, r4, asr r8
   32708:	andeq	r2, r3, r4, asr r8
   3270c:	andeq	r2, r3, r4, asr r8
   32710:	andeq	r2, r3, r4, asr r8
   32714:	andeq	r2, r3, r4, asr r8
   32718:	andeq	r2, r3, r4, asr r8
   3271c:	andeq	r2, r3, r4, asr r8
   32720:	andeq	r2, r3, r0, lsl #16
   32724:	andeq	r2, r3, r4, asr r8
   32728:	andeq	r2, r3, r4, asr r8
   3272c:	andeq	r2, r3, r4, asr r8
   32730:	andeq	r2, r3, r4, asr r8
   32734:	andeq	r2, r3, r4, asr r8
   32738:	andeq	r2, r3, r4, asr r8
   3273c:	andeq	r2, r3, r4, asr r8
   32740:	andeq	r2, r3, r4, asr r8
   32744:	andeq	r2, r3, r4, asr r8
   32748:	andeq	r2, r3, r4, asr r8
   3274c:	andeq	r2, r3, r4, asr r8
   32750:	andeq	r2, r3, r4, lsl r8
   32754:	andeq	r2, r3, r4, asr r8
   32758:	andeq	r2, r3, r4, asr r8
   3275c:	andeq	r2, r3, r4, asr r8
   32760:	andeq	r2, r3, r4, asr r8
   32764:	andeq	r2, r3, r4, asr r8
   32768:	andeq	r2, r3, ip, ror r7
   3276c:	andeq	r2, r3, r4, asr r8
   32770:	andeq	r2, r3, r4, asr r8
   32774:	andeq	r2, r3, r4, asr r8
   32778:	strdeq	r2, [r3], -r4
   3277c:	ldrb	r3, [r9, #6]
   32780:	cmp	r3, #0
   32784:	beq	32894 <luaL_where@@Base+0x12790>
   32788:	cmp	r3, #1
   3278c:	bhi	328f8 <luaL_where@@Base+0x127f4>
   32790:	ldr	r3, [r6, #12]
   32794:	ldr	r2, [r6, #16]
   32798:	cmp	r2, r3
   3279c:	beq	32990 <luaL_where@@Base+0x1288c>
   327a0:	mov	r2, #64	; 0x40
   327a4:	strb	r2, [r3], #1
   327a8:	ldr	r0, [pc, #620]	; 32a1c <luaL_where@@Base+0x12918>
   327ac:	ldr	r1, [r9, #20]
   327b0:	str	r3, [r6, #12]
   327b4:	bl	30238 <luaL_where@@Base+0x10134>
   327b8:	ldrb	r4, [r5], #1
   327bc:	cmp	r4, #0
   327c0:	bne	326c0 <luaL_where@@Base+0x125bc>
   327c4:	ldr	r3, [sp]
   327c8:	add	r7, r7, sl
   327cc:	cmp	r7, r3
   327d0:	bne	32684 <luaL_where@@Base+0x12580>
   327d4:	ldr	r1, [sp, #8]
   327d8:	cmp	r1, #0
   327dc:	ldrne	r2, [pc, #564]	; 32a18 <luaL_where@@Base+0x12914>
   327e0:	ldrne	r3, [r2, #20]
   327e4:	addne	r3, r3, r1
   327e8:	strne	r3, [r2, #12]
   327ec:	add	sp, sp, #36	; 0x24
   327f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   327f4:	mov	r3, #0
   327f8:	str	r3, [sp, #4]
   327fc:	b	326b4 <luaL_where@@Base+0x125b0>
   32800:	ldr	r2, [r6, #12]
   32804:	ldr	r3, [r6, #20]
   32808:	sub	r3, r2, r3
   3280c:	str	r3, [sp, #8]
   32810:	b	326b4 <luaL_where@@Base+0x125b0>
   32814:	add	r2, sp, #28
   32818:	mov	r1, r8
   3281c:	mov	r0, fp
   32820:	bl	1d7f0 <_start@@Base+0xa440>
   32824:	cmp	r0, #0
   32828:	beq	3277c <luaL_where@@Base+0x12678>
   3282c:	cmp	r4, #70	; 0x46
   32830:	beq	32934 <luaL_where@@Base+0x12830>
   32834:	ldr	r4, [sp, #28]
   32838:	mov	r0, r4
   3283c:	bl	12e80 <strlen@plt>
   32840:	mov	r1, r4
   32844:	mov	r2, r0
   32848:	ldr	r0, [pc, #460]	; 32a1c <luaL_where@@Base+0x12918>
   3284c:	bl	2ffac <luaL_where@@Base+0xfea8>
   32850:	b	326b4 <luaL_where@@Base+0x125b0>
   32854:	ldr	r0, [r6, #12]
   32858:	ldr	r3, [r6, #16]
   3285c:	cmp	r3, r0
   32860:	beq	32980 <luaL_where@@Base+0x1287c>
   32864:	strb	r4, [r0], #1
   32868:	str	r0, [r6, #12]
   3286c:	b	326b4 <luaL_where@@Base+0x125b0>
   32870:	cmp	sl, #1
   32874:	beq	327d4 <luaL_where@@Base+0x126d0>
   32878:	ldr	r3, [sp, #24]
   3287c:	sub	r7, r7, r3
   32880:	ldr	r3, [sp]
   32884:	add	r7, r7, sl
   32888:	cmp	r7, r3
   3288c:	bne	32684 <luaL_where@@Base+0x12580>
   32890:	b	327d4 <luaL_where@@Base+0x126d0>
   32894:	ldr	r3, [r9, #16]
   32898:	ldr	r2, [sp, #4]
   3289c:	sub	r3, r3, #64	; 0x40
   328a0:	ldrd	r0, [r3, #40]	; 0x28
   328a4:	str	r3, [sp, #20]
   328a8:	bl	3252c <luaL_where@@Base+0x12428>
   328ac:	cmp	r0, #0
   328b0:	beq	326b4 <luaL_where@@Base+0x125b0>
   328b4:	ldr	r3, [sp, #20]
   328b8:	cmp	r4, #108	; 0x6c
   328bc:	ldrne	r4, [r3, #44]	; 0x2c
   328c0:	beq	329a4 <luaL_where@@Base+0x128a0>
   328c4:	ldr	r0, [r6, #12]
   328c8:	ldr	r2, [r6, #16]
   328cc:	cmp	r2, r0
   328d0:	beq	329cc <luaL_where@@Base+0x128c8>
   328d4:	cmp	r4, #0
   328d8:	mov	r2, #58	; 0x3a
   328dc:	strb	r2, [r0], #1
   328e0:	ldrlt	r4, [r3, #44]	; 0x2c
   328e4:	str	r0, [r6, #12]
   328e8:	mov	r1, r4
   328ec:	ldr	r0, [pc, #296]	; 32a1c <luaL_where@@Base+0x12918>
   328f0:	bl	301f4 <luaL_where@@Base+0x100f0>
   328f4:	b	326b4 <luaL_where@@Base+0x125b0>
   328f8:	mov	r2, #9
   328fc:	ldr	r1, [pc, #284]	; 32a20 <luaL_where@@Base+0x1291c>
   32900:	ldr	r0, [pc, #276]	; 32a1c <luaL_where@@Base+0x12918>
   32904:	bl	2ffac <luaL_where@@Base+0xfea8>
   32908:	ldrb	r1, [r9, #6]
   3290c:	ldr	r0, [pc, #264]	; 32a1c <luaL_where@@Base+0x12918>
   32910:	bl	301f4 <luaL_where@@Base+0x100f0>
   32914:	ldr	r0, [r6, #12]
   32918:	ldr	r3, [r6, #16]
   3291c:	cmp	r3, r0
   32920:	beq	329e4 <luaL_where@@Base+0x128e0>
   32924:	mov	r3, #93	; 0x5d
   32928:	strb	r3, [r0], #1
   3292c:	str	r0, [r6, #12]
   32930:	b	326b4 <luaL_where@@Base+0x125b0>
   32934:	ldrb	r3, [r9, #6]
   32938:	cmp	r3, #0
   3293c:	bne	32834 <luaL_where@@Base+0x12730>
   32940:	ldr	r3, [r9, #16]
   32944:	sub	r3, r3, #64	; 0x40
   32948:	ldr	r1, [r3, #44]	; 0x2c
   3294c:	cmn	r1, #1
   32950:	beq	32834 <luaL_where@@Base+0x12730>
   32954:	ldr	r0, [r3, #40]	; 0x28
   32958:	ldr	r2, [sp, #4]
   3295c:	bl	3252c <luaL_where@@Base+0x12428>
   32960:	ldr	r0, [r6, #12]
   32964:	ldr	r3, [r6, #16]
   32968:	cmp	r3, r0
   3296c:	beq	32a08 <luaL_where@@Base+0x12904>
   32970:	mov	r3, #58	; 0x3a
   32974:	strb	r3, [r0], #1
   32978:	str	r0, [r6, #12]
   3297c:	b	32834 <luaL_where@@Base+0x12730>
   32980:	mov	r1, #1
   32984:	ldr	r0, [pc, #144]	; 32a1c <luaL_where@@Base+0x12918>
   32988:	bl	2ff68 <luaL_where@@Base+0xfe64>
   3298c:	b	32864 <luaL_where@@Base+0x12760>
   32990:	mov	r1, #1
   32994:	ldr	r0, [pc, #128]	; 32a1c <luaL_where@@Base+0x12918>
   32998:	bl	2ff68 <luaL_where@@Base+0xfe64>
   3299c:	mov	r3, r0
   329a0:	b	327a0 <luaL_where@@Base+0x1269c>
   329a4:	ldr	r2, [sp, #16]
   329a8:	mov	r1, r9
   329ac:	mov	r0, fp
   329b0:	bl	1b214 <_start@@Base+0x7e64>
   329b4:	ldr	r2, [r6, #16]
   329b8:	ldr	r3, [sp, #20]
   329bc:	mov	r4, r0
   329c0:	ldr	r0, [r6, #12]
   329c4:	cmp	r2, r0
   329c8:	bne	328d4 <luaL_where@@Base+0x127d0>
   329cc:	mov	r1, #1
   329d0:	ldr	r0, [pc, #68]	; 32a1c <luaL_where@@Base+0x12918>
   329d4:	str	r3, [sp, #20]
   329d8:	bl	2ff68 <luaL_where@@Base+0xfe64>
   329dc:	ldr	r3, [sp, #20]
   329e0:	b	328d4 <luaL_where@@Base+0x127d0>
   329e4:	mov	r1, #1
   329e8:	ldr	r0, [pc, #44]	; 32a1c <luaL_where@@Base+0x12918>
   329ec:	bl	2ff68 <luaL_where@@Base+0xfe64>
   329f0:	b	32924 <luaL_where@@Base+0x12820>
   329f4:	beq	327ec <luaL_where@@Base+0x126e8>
   329f8:	mov	r3, #1
   329fc:	mov	r2, r3
   32a00:	mov	r7, #0
   32a04:	b	32670 <luaL_where@@Base+0x1256c>
   32a08:	mov	r1, #1
   32a0c:	ldr	r0, [pc, #8]	; 32a1c <luaL_where@@Base+0x12918>
   32a10:	bl	2ff68 <luaL_where@@Base+0xfe64>
   32a14:	b	32970 <luaL_where@@Base+0x1286c>
   32a18:	andeq	r4, r8, r4, asr #3
   32a1c:	ldrdeq	r4, [r8], -r0
   32a20:	andeq	r2, r7, r4, lsl #26
   32a24:	push	{r4, r5, r6, r7, r8, lr}
   32a28:	mov	r2, #0
   32a2c:	ldr	r4, [r0, #8]
   32a30:	mov	r3, r1
   32a34:	mov	r6, r0
   32a38:	mov	r5, r1
   32a3c:	ldr	r7, [r4, #12]
   32a40:	mov	r1, r2
   32a44:	ldr	r0, [r4, #16]
   32a48:	blx	r7
   32a4c:	subs	r2, r0, #0
   32a50:	beq	32a7c <luaL_where@@Base+0x12978>
   32a54:	ldr	r1, [r4, #20]
   32a58:	ldr	r3, [r4, #36]	; 0x24
   32a5c:	add	r1, r1, r5
   32a60:	str	r1, [r4, #20]
   32a64:	str	r3, [r2]
   32a68:	ldrb	r3, [r4, #28]
   32a6c:	str	r2, [r4, #36]	; 0x24
   32a70:	and	r3, r3, #3
   32a74:	strb	r3, [r2, #4]
   32a78:	pop	{r4, r5, r6, r7, r8, pc}
   32a7c:	mov	r0, r6
   32a80:	bl	20564 <luaL_where@@Base+0x460>
   32a84:	ldrb	r3, [r2, #5]
   32a88:	sub	r3, r3, #22
   32a8c:	cmp	r3, #7
   32a90:	ldrls	pc, [pc, r3, lsl #2]
   32a94:	b	32ab8 <luaL_where@@Base+0x129b4>
   32a98:	strdeq	r2, [r3], -r4
   32a9c:	andeq	r2, r3, r0, lsl fp
   32aa0:	andeq	r2, r3, r4, lsr #22
   32aa4:	andeq	r2, r3, r0, asr #22
   32aa8:	andeq	r2, r3, r0, asr #22
   32aac:	andeq	r2, r3, r0, asr fp
   32ab0:	andeq	r2, r3, r0, ror #22
   32ab4:			; <UNDEFINED> instruction: 0x00032abc
   32ab8:	bx	lr
   32abc:	push	{r4, r5, r6, lr}
   32ac0:	mov	r5, r1
   32ac4:	mov	r1, #16
   32ac8:	mov	r4, r2
   32acc:	bl	32a24 <luaL_where@@Base+0x12920>
   32ad0:	mov	r3, #10
   32ad4:	mvn	r1, #10
   32ad8:	mov	ip, #11
   32adc:	strb	r3, [r0, #5]
   32ae0:	ldrd	r2, [r4, #8]
   32ae4:	strh	ip, [r0, #6]
   32ae8:	strd	r2, [r0, #8]
   32aec:	strd	r0, [r5]
   32af0:	pop	{r4, r5, r6, pc}
   32af4:	ldrb	r3, [r2, #4]
   32af8:	and	r3, r3, #31
   32afc:	cmp	r3, #14
   32b00:	mvnls	r3, r3
   32b04:	mvnhi	r3, #13
   32b08:	str	r3, [r1, #4]
   32b0c:	bx	lr
   32b10:	ldr	r2, [r2]
   32b14:	mvn	r3, #13
   32b18:	str	r2, [r1]
   32b1c:	str	r3, [r1, #4]
   32b20:	bx	lr
   32b24:	ldrb	r3, [r2, #4]
   32b28:	ldr	r2, [r2]
   32b2c:	and	r3, r3, #31
   32b30:	cmp	r3, #14
   32b34:	mvnls	r3, r3
   32b38:	bls	32b18 <luaL_where@@Base+0x12a14>
   32b3c:	b	32b14 <luaL_where@@Base+0x12a10>
   32b40:	ldr	r2, [r2]
   32b44:	mvn	r3, #3
   32b48:	strd	r2, [r1]
   32b4c:	bx	lr
   32b50:	mov	r2, #0
   32b54:	mvn	r3, #3
   32b58:	strd	r2, [r1]
   32b5c:	bx	lr
   32b60:	ldrd	r2, [r2, #8]
   32b64:	strd	r2, [r1]
   32b68:	bx	lr
   32b6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   32b70:	sub	sp, sp, #16
   32b74:	ldr	r6, [r1, #16]
   32b78:	ldr	ip, [sp, #52]	; 0x34
   32b7c:	ldr	r9, [sp, #48]	; 0x30
   32b80:	cmp	ip, #32768	; 0x8000
   32b84:	lsl	r7, ip, #3
   32b88:	add	r8, r6, r7
   32b8c:	ldr	r4, [sp, #56]	; 0x38
   32b90:	bcc	32c28 <luaL_where@@Base+0x12b24>
   32b94:	and	r5, ip, #31
   32b98:	mov	sl, #1
   32b9c:	ldrh	lr, [r8, #6]
   32ba0:	ands	r5, r9, sl, lsl r5
   32ba4:	bne	32c8c <luaL_where@@Base+0x12b88>
   32ba8:	lsrs	r5, lr, #8
   32bac:	ldrb	ip, [r8, #4]
   32bb0:	bne	32bec <luaL_where@@Base+0x12ae8>
   32bb4:	tst	lr, #128	; 0x80
   32bb8:	bne	32cf4 <luaL_where@@Base+0x12bf0>
   32bbc:	and	ip, ip, #31
   32bc0:	sub	r3, ip, #15
   32bc4:	cmp	r3, #4
   32bc8:	bls	32c58 <luaL_where@@Base+0x12b54>
   32bcc:	cmp	ip, #14
   32bd0:	beq	32ce4 <luaL_where@@Base+0x12be0>
   32bd4:	cmp	ip, #2
   32bd8:	bhi	32c74 <luaL_where@@Base+0x12b70>
   32bdc:	cmp	ip, #14
   32be0:	mvnls	ip, ip
   32be4:	mvnhi	ip, #13
   32be8:	b	32c1c <luaL_where@@Base+0x12b18>
   32bec:	and	ip, ip, #31
   32bf0:	sub	r3, ip, #15
   32bf4:	cmp	r3, #4
   32bf8:	add	r5, r5, #48	; 0x30
   32bfc:	bls	32c40 <luaL_where@@Base+0x12b3c>
   32c00:	cmp	ip, #14
   32c04:	lsl	r3, r5, #2
   32c08:	beq	32cd4 <luaL_where@@Base+0x12bd0>
   32c0c:	ldr	r3, [r2, r5, lsl #2]
   32c10:	bhi	32c84 <luaL_where@@Base+0x12b80>
   32c14:	mvn	ip, ip
   32c18:	str	r3, [r4]
   32c1c:	str	ip, [r4, #4]
   32c20:	add	sp, sp, #16
   32c24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32c28:	mov	r2, r8
   32c2c:	mov	r1, r4
   32c30:	ldr	r0, [r0, #80]	; 0x50
   32c34:	add	sp, sp, #16
   32c38:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   32c3c:	b	32a84 <luaL_where@@Base+0x12980>
   32c40:	ldr	r3, [r2, r5, lsl #2]
   32c44:	mvn	r1, #13
   32c48:	str	r1, [r4, #4]
   32c4c:	str	r3, [r4]
   32c50:	add	sp, sp, #16
   32c54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32c58:	add	lr, lr, #32
   32c5c:	mvn	r1, #13
   32c60:	ldr	r3, [r2, lr, lsl #2]
   32c64:	str	r1, [r4, #4]
   32c68:	str	r3, [r4]
   32c6c:	add	sp, sp, #16
   32c70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32c74:	add	lr, lr, #32
   32c78:	cmp	ip, #14
   32c7c:	ldr	r3, [r2, lr, lsl #2]
   32c80:	bls	32c14 <luaL_where@@Base+0x12b10>
   32c84:	mvn	ip, #13
   32c88:	b	32c18 <luaL_where@@Base+0x12b14>
   32c8c:	ldr	r5, [r1, #8]
   32c90:	sub	r5, r5, #-536870911	; 0xe0000001
   32c94:	add	r5, r6, r5, lsl #3
   32c98:	ldrb	sl, [r5, #5]
   32c9c:	cmp	sl, #20
   32ca0:	bne	32ba8 <luaL_where@@Base+0x12aa4>
   32ca4:	sub	r5, r5, #8
   32ca8:	ldrh	sl, [r5, #8]
   32cac:	cmp	ip, sl
   32cb0:	bne	32cc0 <luaL_where@@Base+0x12bbc>
   32cb4:	ldrh	sl, [r5, #10]
   32cb8:	cmp	r3, sl
   32cbc:	ldrhcs	lr, [r5, #14]
   32cc0:	sub	r5, r5, #8
   32cc4:	ldrb	sl, [r5, #13]
   32cc8:	cmp	sl, #20
   32ccc:	beq	32ca8 <luaL_where@@Base+0x12ba4>
   32cd0:	b	32ba8 <luaL_where@@Base+0x12aa4>
   32cd4:	add	r2, r2, r3
   32cd8:	ldrd	r2, [r2]
   32cdc:	strd	r2, [r4]
   32ce0:	b	32c20 <luaL_where@@Base+0x12b1c>
   32ce4:	add	r2, r2, lr, lsl #3
   32ce8:	ldrd	r2, [r2, #-128]	; 0xffffff80
   32cec:	strd	r2, [r4]
   32cf0:	b	32c20 <luaL_where@@Base+0x12b1c>
   32cf4:	str	r4, [sp, #8]
   32cf8:	ldrh	ip, [r6, r7]
   32cfc:	stm	sp, {r9, ip}
   32d00:	bl	32b6c <luaL_where@@Base+0x12a68>
   32d04:	vldr	s15, [r4]
   32d08:	vcvt.f64.s32	d7, s15
   32d0c:	vstr	d7, [r4]
   32d10:	b	32c20 <luaL_where@@Base+0x12b1c>
   32d14:	push	{r4, r5, lr}
   32d18:	mov	r4, r0
   32d1c:	sub	sp, sp, #12
   32d20:	add	r2, r0, #144	; 0x90
   32d24:	mov	r1, sp
   32d28:	ldr	r0, [r0, #80]	; 0x50
   32d2c:	bl	32a84 <luaL_where@@Base+0x12980>
   32d30:	ldrh	r1, [r4, #128]	; 0x80
   32d34:	ldr	r3, [r4, #16]
   32d38:	mov	r2, sp
   32d3c:	ldr	r0, [r4, #80]	; 0x50
   32d40:	ldr	r1, [r3, r1, lsl #3]
   32d44:	bl	1f4f8 <lua_atpanic@@Base+0x328>
   32d48:	sub	r3, r4, #240	; 0xf0
   32d4c:	cmp	r0, r3
   32d50:	movne	r0, #0
   32d54:	beq	32d60 <luaL_where@@Base+0x12c5c>
   32d58:	add	sp, sp, #12
   32d5c:	pop	{r4, r5, pc}
   32d60:	mov	r5, r0
   32d64:	mov	r0, r4
   32d68:	bl	1c02c <_start@@Base+0x8c7c>
   32d6c:	cmp	r0, #0
   32d70:	beq	32d58 <luaL_where@@Base+0x12c54>
   32d74:	mov	r2, r5
   32d78:	mov	r0, r4
   32d7c:	mov	r1, #26
   32d80:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   32d84:	b	32d58 <luaL_where@@Base+0x12c54>
   32d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32d8c:	sub	sp, sp, #20
   32d90:	ldrb	r8, [r0, #125]	; 0x7d
   32d94:	ldr	r4, [r0, #16]
   32d98:	lsl	r3, r1, #3
   32d9c:	mov	fp, r0
   32da0:	add	r8, r0, r8, lsl #1
   32da4:	add	r2, r8, #300	; 0x12c
   32da8:	mov	r7, r1
   32dac:	ldrh	r6, [r2]
   32db0:	str	r3, [sp, #4]
   32db4:	add	r9, r4, r3
   32db8:	cmp	r1, r6
   32dbc:	bcs	32e08 <luaL_where@@Base+0x12d04>
   32dc0:	add	sl, r0, #16
   32dc4:	lsl	r5, r6, #3
   32dc8:	mov	r1, r9
   32dcc:	ldrh	r2, [r4, r5]
   32dd0:	mov	r0, sl
   32dd4:	add	r5, r4, r5
   32dd8:	add	r2, r4, r2, lsl #3
   32ddc:	bl	1be98 <_start@@Base+0x8ae8>
   32de0:	cmp	r0, #1
   32de4:	beq	32e44 <luaL_where@@Base+0x12d40>
   32de8:	cmp	r0, #2
   32dec:	bne	32dfc <luaL_where@@Base+0x12cf8>
   32df0:	ldrh	r0, [r5, #2]
   32df4:	add	sp, sp, #20
   32df8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32dfc:	ldrh	r6, [r5, #6]
   32e00:	cmp	r7, r6
   32e04:	bcc	32dc4 <luaL_where@@Base+0x12cc0>
   32e08:	ldr	r3, [sp, #4]
   32e0c:	ldrb	r1, [r9, #5]
   32e10:	ldrh	r5, [r4, r3]
   32e14:	sub	r0, r1, #57	; 0x39
   32e18:	cmp	r0, #1
   32e1c:	lsl	r2, r5, #3
   32e20:	add	sl, r4, r2
   32e24:	ldrhls	r5, [r4, r2]
   32e28:	addls	sl, r4, r5, lsl #3
   32e2c:	ldrb	r2, [sl, #5]
   32e30:	cmp	r2, #80	; 0x50
   32e34:	beq	32ea4 <luaL_where@@Base+0x12da0>
   32e38:	cmp	r2, #81	; 0x51
   32e3c:	beq	32e98 <luaL_where@@Base+0x12d94>
   32e40:	mov	r6, r7
   32e44:	add	r8, r8, #284	; 0x11c
   32e48:	ldrh	r0, [r8, #2]
   32e4c:	cmp	r6, r0
   32e50:	bcs	32e8c <luaL_where@@Base+0x12d88>
   32e54:	lsl	r2, r0, #3
   32e58:	add	r3, r4, r2
   32e5c:	ldrh	r2, [r4, r2]
   32e60:	cmp	r7, r2
   32e64:	bne	32e7c <luaL_where@@Base+0x12d78>
   32e68:	b	32df4 <luaL_where@@Base+0x12cf0>
   32e6c:	ldrh	r2, [r4, r3]
   32e70:	add	r3, r4, r3
   32e74:	cmp	r2, r7
   32e78:	beq	32df4 <luaL_where@@Base+0x12cf0>
   32e7c:	ldrh	r0, [r3, #6]
   32e80:	cmp	r6, r0
   32e84:	lsl	r3, r0, #3
   32e88:	bcc	32e6c <luaL_where@@Base+0x12d68>
   32e8c:	mov	r0, #0
   32e90:	add	sp, sp, #20
   32e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32e98:	ldrsh	r2, [r9, #2]
   32e9c:	cmp	r2, #0
   32ea0:	blt	32e40 <luaL_where@@Base+0x12d3c>
   32ea4:	cmp	r1, #57	; 0x39
   32ea8:	beq	32f9c <luaL_where@@Base+0x12e98>
   32eac:	cmp	r6, r5
   32eb0:	bls	32ef8 <luaL_where@@Base+0x12df4>
   32eb4:	add	r3, fp, #16
   32eb8:	str	r3, [sp, #4]
   32ebc:	lsl	r6, r6, #3
   32ec0:	mov	r1, r9
   32ec4:	ldrh	r2, [r4, r6]
   32ec8:	ldr	r0, [sp, #4]
   32ecc:	add	r6, r4, r6
   32ed0:	add	r2, r4, r2, lsl #3
   32ed4:	bl	1be98 <_start@@Base+0x8ae8>
   32ed8:	cmp	r0, #1
   32edc:	beq	32e40 <luaL_where@@Base+0x12d3c>
   32ee0:	cmp	r0, #2
   32ee4:	ldrheq	r0, [r6, #2]
   32ee8:	beq	32df4 <luaL_where@@Base+0x12cf0>
   32eec:	ldrh	r6, [r6, #6]
   32ef0:	cmp	r6, r5
   32ef4:	bhi	32ebc <luaL_where@@Base+0x12db8>
   32ef8:	ldrb	r2, [fp, #124]	; 0x7c
   32efc:	and	r1, r2, #31
   32f00:	cmp	r1, #2
   32f04:	bls	32fe0 <luaL_where@@Base+0x12edc>
   32f08:	cmp	r1, #19
   32f0c:	cmpne	r1, #14
   32f10:	moveq	r2, #1
   32f14:	movne	r2, #0
   32f18:	cmp	r1, #4
   32f1c:	movne	r1, r2
   32f20:	orreq	r1, r2, #1
   32f24:	cmp	r1, #0
   32f28:	beq	32e40 <luaL_where@@Base+0x12d3c>
   32f2c:	ldrh	r1, [r9, #2]
   32f30:	lsl	r1, r1, #3
   32f34:	add	r2, r4, r1
   32f38:	ldrb	r0, [r2, #5]
   32f3c:	cmp	r0, #30
   32f40:	ldr	r0, [fp, #80]	; 0x50
   32f44:	ldrheq	r2, [r4, r1]
   32f48:	add	r1, sp, #8
   32f4c:	addeq	r2, r4, r2, lsl #3
   32f50:	bl	32a84 <luaL_where@@Base+0x12980>
   32f54:	ldrh	ip, [sl]
   32f58:	ldr	r1, [fp, #16]
   32f5c:	add	r2, sp, #8
   32f60:	ldr	r0, [fp, #80]	; 0x50
   32f64:	ldr	r1, [r1, ip, lsl #3]
   32f68:	bl	1f4f8 <lua_atpanic@@Base+0x328>
   32f6c:	ldrb	r2, [fp, #124]	; 0x7c
   32f70:	and	r2, r2, #31
   32f74:	cmp	r2, #14
   32f78:	mov	r1, r0
   32f7c:	mov	r0, fp
   32f80:	beq	33000 <luaL_where@@Base+0x12efc>
   32f84:	cmp	r2, #19
   32f88:	ldr	r1, [r1]
   32f8c:	beq	32ff8 <luaL_where@@Base+0x12ef4>
   32f90:	mov	r2, #4
   32f94:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   32f98:	b	32df4 <luaL_where@@Base+0x12cf0>
   32f9c:	add	r2, fp, #404	; 0x194
   32fa0:	ldrh	r2, [r2, #2]
   32fa4:	cmp	r2, r5
   32fa8:	bls	32eac <luaL_where@@Base+0x12da8>
   32fac:	add	r2, r4, r2, lsl #3
   32fb0:	b	32fc4 <luaL_where@@Base+0x12ec0>
   32fb4:	ldrh	r2, [r2, #6]
   32fb8:	cmp	r2, r5
   32fbc:	add	r2, r4, r2, lsl #3
   32fc0:	bls	32eac <luaL_where@@Base+0x12da8>
   32fc4:	ldrh	r1, [r2, #2]
   32fc8:	add	r1, r4, r1, lsl #3
   32fcc:	ldrb	r1, [r1, #4]
   32fd0:	and	r1, r1, #31
   32fd4:	cmp	r1, #14
   32fd8:	bne	32fb4 <luaL_where@@Base+0x12eb0>
   32fdc:	b	32e40 <luaL_where@@Base+0x12d3c>
   32fe0:	lsl	r0, r2, #24
   32fe4:	and	r0, r0, #520093696	; 0x1f000000
   32fe8:	sub	r0, r0, r1
   32fec:	add	r0, r0, #32512	; 0x7f00
   32ff0:	add	r0, r0, #255	; 0xff
   32ff4:	b	32df4 <luaL_where@@Base+0x12cf0>
   32ff8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   32ffc:	b	32df4 <luaL_where@@Base+0x12cf0>
   33000:	ldrd	r2, [r1]
   33004:	mov	r1, #28
   33008:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   3300c:	b	32df4 <luaL_where@@Base+0x12cf0>
   33010:	push	{r4, lr}
   33014:	mov	r4, r0
   33018:	ldrh	r1, [r0, #120]	; 0x78
   3301c:	bl	32d88 <luaL_where@@Base+0x12c84>
   33020:	cmp	r0, #0
   33024:	popne	{r4, pc}
   33028:	mov	r0, r4
   3302c:	pop	{r4, lr}
   33030:	b	25258 <luaL_where@@Base+0x5154>
   33034:	push	{r4, r5, r6, lr}
   33038:	mov	r4, r0
   3303c:	ldrh	r1, [r0, #120]	; 0x78
   33040:	bl	32d88 <luaL_where@@Base+0x12c84>
   33044:	cmp	r0, #0
   33048:	popne	{r4, r5, r6, pc}
   3304c:	ldrh	r1, [r4, #120]	; 0x78
   33050:	ldr	r2, [r4, #16]
   33054:	lsl	r1, r1, #3
   33058:	add	r3, r2, r1
   3305c:	ldrh	r3, [r3, #2]
   33060:	lsl	r3, r3, #3
   33064:	add	r0, r2, r3
   33068:	ldrb	ip, [r0, #5]
   3306c:	cmp	ip, #41	; 0x29
   33070:	beq	33080 <luaL_where@@Base+0x12f7c>
   33074:	mov	r0, r4
   33078:	pop	{r4, r5, r6, lr}
   3307c:	b	25258 <luaL_where@@Base+0x5154>
   33080:	ldrh	r0, [r0, #2]
   33084:	tst	r0, #32768	; 0x8000
   33088:	bne	33074 <luaL_where@@Base+0x12f70>
   3308c:	ldrh	r3, [r2, r3]
   33090:	lsl	r3, r3, #3
   33094:	add	ip, r2, r3
   33098:	ldrb	lr, [ip, #5]
   3309c:	cmp	lr, #41	; 0x29
   330a0:	bne	33074 <luaL_where@@Base+0x12f70>
   330a4:	ldrh	ip, [ip, #2]
   330a8:	tst	ip, #32768	; 0x8000
   330ac:	bne	33074 <luaL_where@@Base+0x12f70>
   330b0:	ldr	ip, [r2, ip, lsl #3]
   330b4:	ldr	r0, [r2, r0, lsl #3]
   330b8:	cmn	r0, ip
   330bc:	bne	33074 <luaL_where@@Base+0x12f70>
   330c0:	ldrh	r5, [r2, r3]
   330c4:	ldrh	ip, [r2, r1]
   330c8:	add	r3, r4, #400	; 0x190
   330cc:	ldrh	r1, [r3]
   330d0:	cmp	r5, ip
   330d4:	movcs	lr, r5
   330d8:	movcc	lr, ip
   330dc:	cmp	r1, lr
   330e0:	bhi	330f4 <luaL_where@@Base+0x12ff0>
   330e4:	b	33074 <luaL_where@@Base+0x12f70>
   330e8:	ldrh	r1, [r0, #6]
   330ec:	cmp	r1, lr
   330f0:	bls	33074 <luaL_where@@Base+0x12f70>
   330f4:	lsl	r3, r1, #3
   330f8:	add	r0, r2, r3
   330fc:	ldrh	r3, [r2, r3]
   33100:	cmp	r3, ip
   33104:	bne	330e8 <luaL_where@@Base+0x12fe4>
   33108:	ldrh	r3, [r0, #2]
   3310c:	cmp	r3, r5
   33110:	bne	330e8 <luaL_where@@Base+0x12fe4>
   33114:	mov	r0, r4
   33118:	bl	32d88 <luaL_where@@Base+0x12c84>
   3311c:	cmp	r0, #0
   33120:	popne	{r4, r5, r6, pc}
   33124:	b	33074 <luaL_where@@Base+0x12f70>
   33128:	tst	r3, #1048576	; 0x100000
   3312c:	lsr	r3, r3, #16
   33130:	and	r3, r3, #15
   33134:	mov	ip, r0
   33138:	bne	33144 <luaL_where@@Base+0x13040>
   3313c:	cmp	r3, #3
   33140:	bls	3314c <luaL_where@@Base+0x13048>
   33144:	mov	r0, ip
   33148:	b	2fed0 <luaL_where@@Base+0xfdcc>
   3314c:	push	{r4, lr}
   33150:	mov	r4, r1
   33154:	add	r1, r2, #8
   33158:	bl	32a24 <luaL_where@@Base+0x12920>
   3315c:	mov	r2, #10
   33160:	strh	r4, [r0, #6]
   33164:	strb	r2, [r0, #5]
   33168:	pop	{r4, pc}
   3316c:	push	{r4, r5, r6, lr}
   33170:	mov	r4, r1
   33174:	ldrb	r1, [r1, #36]	; 0x24
   33178:	mov	r5, r2
   3317c:	add	r1, r1, #5
   33180:	lsl	r1, r1, #2
   33184:	bl	32a24 <luaL_where@@Base+0x12920>
   33188:	mov	r2, #0
   3318c:	mov	ip, #8
   33190:	add	r1, r4, #64	; 0x40
   33194:	strb	r2, [r0, #6]
   33198:	strb	r2, [r0, #7]
   3319c:	str	r5, [r0, #8]
   331a0:	strb	ip, [r0, #5]
   331a4:	str	r1, [r0, #16]
   331a8:	ldrb	r3, [r4, #37]	; 0x25
   331ac:	add	r3, r3, #32
   331b0:	lsr	r2, r3, #3
   331b4:	and	r2, r2, #32
   331b8:	sub	r3, r3, r2
   331bc:	strb	r3, [r4, #37]	; 0x25
   331c0:	pop	{r4, r5, r6, pc}
   331c4:	ldr	r3, [r0, #16]
   331c8:	push	{r4, r5, r6, r7, r8, lr}
   331cc:	mov	r6, r2
   331d0:	ldr	r3, [r3, #-8]
   331d4:	mov	r5, r1
   331d8:	mov	r1, #24
   331dc:	ldrb	r2, [r3, #5]
   331e0:	mov	r4, r0
   331e4:	cmp	r2, #8
   331e8:	ldreq	r7, [r3, #8]
   331ec:	ldrne	r7, [r0, #36]	; 0x24
   331f0:	bl	32a24 <luaL_where@@Base+0x12920>
   331f4:	ldr	r1, [r4, #8]
   331f8:	ldr	r3, [r4, #20]
   331fc:	ldr	ip, [r4, #40]	; 0x28
   33200:	mov	r2, #8
   33204:	add	r1, r1, #216	; 0xd8
   33208:	mvn	lr, #8
   3320c:	strb	r2, [r0, #5]
   33210:	str	r1, [r0, #16]
   33214:	mov	r2, #0
   33218:	mov	r1, #1
   3321c:	strb	r2, [r0, #7]
   33220:	str	r7, [r0, #8]
   33224:	str	r5, [r0, #20]
   33228:	strb	r1, [r0, #6]
   3322c:	add	r2, r3, #16
   33230:	str	r0, [r3]
   33234:	mvn	r0, #3
   33238:	str	r0, [r3, #12]
   3323c:	str	r6, [r3, #8]
   33240:	str	lr, [r3, #4]
   33244:	add	r0, r3, #8
   33248:	str	r1, [ip, #20]
   3324c:	str	r2, [r4, #20]
   33250:	pop	{r4, r5, r6, r7, r8, pc}
   33254:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33258:	mov	sl, r1
   3325c:	mov	r6, r0
   33260:	bl	3316c <luaL_where@@Base+0x13068>
   33264:	ldrb	r5, [sl, #36]	; 0x24
   33268:	cmp	r5, #0
   3326c:	mov	r9, r0
   33270:	beq	332d8 <luaL_where@@Base+0x131d4>
   33274:	add	fp, r0, #16
   33278:	mov	r4, #0
   3327c:	mov	r8, #5
   33280:	mov	r7, #1
   33284:	mov	r1, #24
   33288:	mov	r0, r6
   3328c:	bl	32a24 <luaL_where@@Base+0x12920>
   33290:	lsl	r2, r4, #1
   33294:	add	r4, r4, #1
   33298:	cmp	r5, r4
   3329c:	strb	r8, [r0, #5]
   332a0:	strb	r7, [r0, #6]
   332a4:	ldr	r3, [sl, #20]
   332a8:	add	r1, r0, #8
   332ac:	ldrh	r3, [r2, r3]
   332b0:	mvn	r2, #0
   332b4:	str	r2, [r0, #12]
   332b8:	str	r1, [r0, #16]
   332bc:	asr	r2, r3, #14
   332c0:	and	r2, r2, #1
   332c4:	eor	r3, sl, r3, lsl #24
   332c8:	strb	r2, [r0, #7]
   332cc:	str	r3, [r0, #20]
   332d0:	str	r0, [fp, #4]!
   332d4:	bne	33284 <luaL_where@@Base+0x13180>
   332d8:	strb	r5, [r9, #7]
   332dc:	mov	r0, r9
   332e0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   332e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   332e8:	mov	r5, r0
   332ec:	ldr	sl, [r1, #12]
   332f0:	sub	sp, sp, #8
   332f4:	cmp	sl, #0
   332f8:	cmpne	r2, #0
   332fc:	ble	33384 <luaL_where@@Base+0x13280>
   33300:	umull	r6, r7, r2, sl
   33304:	ldr	r8, [pc, #188]	; 333c8 <luaL_where@@Base+0x132c4>
   33308:	asr	r9, r2, #31
   3330c:	mla	r7, sl, r9, r7
   33310:	mov	r9, #0
   33314:	cmp	r7, r9
   33318:	cmpeq	r6, r8
   3331c:	bhi	33390 <luaL_where@@Base+0x1328c>
   33320:	mov	r4, r1
   33324:	ldm	r0, {r1, r3}
   33328:	sub	r3, r3, r1
   3332c:	cmp	r6, r3
   33330:	movls	r0, r1
   33334:	bhi	333b4 <luaL_where@@Base+0x132b0>
   33338:	cmp	sl, #1
   3333c:	beq	33398 <luaL_where@@Base+0x13294>
   33340:	add	ip, sl, #16
   33344:	add	ip, r4, ip
   33348:	add	r3, r4, #17
   3334c:	cmp	ip, r3
   33350:	mov	lr, r0
   33354:	movcc	sl, #1
   33358:	add	r4, r4, #16
   3335c:	mov	r0, lr
   33360:	mov	r3, r4
   33364:	ldrb	r1, [r3], #1
   33368:	cmp	ip, r3
   3336c:	strb	r1, [r0], #1
   33370:	bhi	33364 <luaL_where@@Base+0x13260>
   33374:	subs	r2, r2, #1
   33378:	add	lr, lr, sl
   3337c:	bne	3335c <luaL_where@@Base+0x13258>
   33380:	str	r0, [r5]
   33384:	mov	r0, r5
   33388:	add	sp, sp, #8
   3338c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   33390:	ldr	r0, [r0, #12]
   33394:	bl	20564 <luaL_where@@Base+0x460>
   33398:	ldrb	r3, [r4, #16]
   3339c:	add	r2, r0, r2
   333a0:	strb	r3, [r0], #1
   333a4:	cmp	r2, r0
   333a8:	bne	333a0 <luaL_where@@Base+0x1329c>
   333ac:	str	r0, [r5]
   333b0:	b	33384 <luaL_where@@Base+0x13280>
   333b4:	mov	r1, r6
   333b8:	str	r2, [sp, #4]
   333bc:	bl	2ff68 <luaL_where@@Base+0xfe64>
   333c0:	ldr	r2, [sp, #4]
   333c4:	b	33338 <luaL_where@@Base+0x13234>
   333c8:	svcvc	0x00ffff00
   333cc:	ldr	r3, [pc, #32]	; 333f4 <luaL_where@@Base+0x132f0>
   333d0:	push	{r4, lr}
   333d4:	cmp	r1, r3
   333d8:	mov	r4, r0
   333dc:	bhi	333ec <luaL_where@@Base+0x132e8>
   333e0:	bl	250ac <luaL_where@@Base+0x4fa8>
   333e4:	ldr	r0, [r4, #8]
   333e8:	pop	{r4, pc}
   333ec:	ldr	r0, [r0, #12]
   333f0:	bl	20564 <luaL_where@@Base+0x460>
   333f4:	svcvc	0x00ffff00
   333f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   333fc:	mov	r6, r1
   33400:	ldrb	r3, [r1, #37]	; 0x25
   33404:	sub	sp, sp, #20
   33408:	mov	r4, r0
   3340c:	tst	r3, #1
   33410:	beq	3344c <luaL_where@@Base+0x13348>
   33414:	ldr	r8, [r1, #24]
   33418:	cmp	r8, #0
   3341c:	ble	3344c <luaL_where@@Base+0x13348>
   33420:	ldr	r5, [r1, #16]
   33424:	mov	r7, #0
   33428:	sub	r5, r5, #4
   3342c:	ldr	r1, [r5]
   33430:	add	r7, r7, #1
   33434:	sub	r5, r5, #4
   33438:	ldrb	r3, [r1, #5]
   3343c:	cmp	r3, #7
   33440:	beq	33cd8 <luaL_where@@Base+0x13bd4>
   33444:	cmp	r8, r7
   33448:	bne	3342c <luaL_where@@Base+0x13328>
   3344c:	ldr	r1, [r6, #8]
   33450:	ldrb	r2, [r6, #36]	; 0x24
   33454:	ldr	r0, [r4, #8]
   33458:	lsl	r1, r1, #2
   3345c:	ldr	r3, [r4, #4]
   33460:	add	r1, r1, #35	; 0x23
   33464:	add	r1, r1, r2, lsl #1
   33468:	sub	r3, r3, r0
   3346c:	cmp	r1, r3
   33470:	bhi	33ce4 <luaL_where@@Base+0x13be0>
   33474:	ldrb	r2, [r6, #37]	; 0x25
   33478:	add	r3, r0, #9
   3347c:	and	r2, r2, #7
   33480:	strb	r2, [r0, #5]
   33484:	ldrb	r2, [r6, #6]
   33488:	strb	r2, [r0, #6]
   3348c:	ldrb	r2, [r6, #7]
   33490:	strb	r2, [r0, #7]
   33494:	ldrb	r2, [r6, #36]	; 0x24
   33498:	strb	r2, [r0, #8]
   3349c:	ldr	r2, [r6, #24]
   334a0:	cmp	r2, #127	; 0x7f
   334a4:	bls	334c0 <luaL_where@@Base+0x133bc>
   334a8:	mvn	r0, #127	; 0x7f
   334ac:	orr	r1, r0, r2
   334b0:	lsr	r2, r2, #7
   334b4:	cmp	r2, #127	; 0x7f
   334b8:	strb	r1, [r3], #1
   334bc:	bhi	334ac <luaL_where@@Base+0x133a8>
   334c0:	strb	r2, [r3]
   334c4:	ldr	r2, [r6, #28]
   334c8:	add	r3, r3, #1
   334cc:	cmp	r2, #127	; 0x7f
   334d0:	bls	334ec <luaL_where@@Base+0x133e8>
   334d4:	mvn	r0, #127	; 0x7f
   334d8:	orr	r1, r0, r2
   334dc:	lsr	r2, r2, #7
   334e0:	cmp	r2, #127	; 0x7f
   334e4:	strb	r1, [r3], #1
   334e8:	bhi	334d8 <luaL_where@@Base+0x133d4>
   334ec:	strb	r2, [r3]
   334f0:	ldr	r2, [r6, #8]
   334f4:	add	r3, r3, #1
   334f8:	sub	r2, r2, #1
   334fc:	cmp	r2, #127	; 0x7f
   33500:	bls	3351c <luaL_where@@Base+0x13418>
   33504:	mvn	r0, #127	; 0x7f
   33508:	orr	r1, r0, r2
   3350c:	lsr	r2, r2, #7
   33510:	cmp	r2, #127	; 0x7f
   33514:	strb	r1, [r3], #1
   33518:	bhi	33508 <luaL_where@@Base+0x13404>
   3351c:	strb	r2, [r3]
   33520:	ldr	r2, [r4, #28]
   33524:	add	r5, r3, #1
   33528:	cmp	r2, #0
   3352c:	movne	r3, #0
   33530:	strne	r3, [sp, #4]
   33534:	bne	335e4 <luaL_where@@Base+0x134e0>
   33538:	ldr	r2, [r6, #52]	; 0x34
   3353c:	cmp	r2, #0
   33540:	beq	33ab8 <luaL_where@@Base+0x139b4>
   33544:	ldr	r1, [r6, #32]
   33548:	sub	r2, r2, r6
   3354c:	sub	r2, r1, r2
   33550:	cmp	r2, #127	; 0x7f
   33554:	str	r2, [sp, #4]
   33558:	bls	33d00 <luaL_where@@Base+0x13bfc>
   3355c:	mov	r3, r2
   33560:	mvn	r0, #127	; 0x7f
   33564:	b	3356c <luaL_where@@Base+0x13468>
   33568:	mov	r5, r2
   3356c:	orr	r1, r0, r3
   33570:	mov	r2, r5
   33574:	lsr	r3, r3, #7
   33578:	cmp	r3, #127	; 0x7f
   3357c:	strb	r1, [r2], #1
   33580:	bhi	33568 <luaL_where@@Base+0x13464>
   33584:	add	r5, r5, #2
   33588:	strb	r3, [r2]
   3358c:	ldr	r3, [r6, #44]	; 0x2c
   33590:	cmp	r3, #127	; 0x7f
   33594:	bls	335b0 <luaL_where@@Base+0x134ac>
   33598:	mvn	r1, #127	; 0x7f
   3359c:	orr	r2, r1, r3
   335a0:	lsr	r3, r3, #7
   335a4:	cmp	r3, #127	; 0x7f
   335a8:	strb	r2, [r5], #1
   335ac:	bhi	3359c <luaL_where@@Base+0x13498>
   335b0:	strb	r3, [r5]
   335b4:	ldr	r3, [r6, #48]	; 0x30
   335b8:	add	r1, r5, #1
   335bc:	cmp	r3, #127	; 0x7f
   335c0:	bls	335dc <luaL_where@@Base+0x134d8>
   335c4:	mvn	r0, #127	; 0x7f
   335c8:	orr	r2, r0, r3
   335cc:	lsr	r3, r3, #7
   335d0:	cmp	r3, #127	; 0x7f
   335d4:	strb	r2, [r1], #1
   335d8:	bhi	335c8 <luaL_where@@Base+0x134c4>
   335dc:	add	r5, r1, #1
   335e0:	strb	r3, [r1]
   335e4:	ldr	r7, [r6, #8]
   335e8:	add	r1, r6, #68	; 0x44
   335ec:	sub	r7, r7, #1
   335f0:	mov	r0, r5
   335f4:	lsl	r8, r7, #2
   335f8:	mov	r2, r8
   335fc:	bl	12cb8 <memcpy@plt>
   33600:	ldrb	r3, [r6, #37]	; 0x25
   33604:	tst	r3, #16
   33608:	add	r3, r0, r8
   3360c:	bne	3361c <luaL_where@@Base+0x13518>
   33610:	ldrh	r2, [r6, #38]	; 0x26
   33614:	cmp	r2, #0
   33618:	beq	336d4 <luaL_where@@Base+0x135d0>
   3361c:	ldr	r2, [r4, #12]
   33620:	cmp	r7, #0
   33624:	ldr	r8, [r2, #8]
   33628:	sub	r8, r8, #48	; 0x30
   3362c:	beq	336d4 <luaL_where@@Base+0x135d0>
   33630:	add	r1, r5, #4
   33634:	mov	ip, #0
   33638:	b	336a8 <luaL_where@@Base+0x135a4>
   3363c:	cmp	r0, #0
   33640:	cmpne	r2, #86	; 0x56
   33644:	beq	336c0 <luaL_where@@Base+0x135bc>
   33648:	cmp	r2, #84	; 0x54
   3364c:	cmpne	r2, #81	; 0x51
   33650:	moveq	r0, #1
   33654:	movne	r0, #0
   33658:	cmp	r2, #87	; 0x57
   3365c:	orreq	r0, r0, #1
   33660:	cmp	r0, #0
   33664:	sub	r2, r2, #2
   33668:	beq	33698 <luaL_where@@Base+0x13594>
   3366c:	ldrb	r5, [r1, #-1]
   33670:	ldrb	r0, [r1, #-2]
   33674:	ldr	lr, [r8, #704]	; 0x2c0
   33678:	add	r0, r0, r5, lsl #8
   3367c:	ldr	r0, [lr, r0, lsl #2]
   33680:	ldr	r0, [r0, #44]	; 0x2c
   33684:	strb	r2, [r1, #-4]
   33688:	lsr	r2, r0, #16
   3368c:	lsr	r0, r0, #24
   33690:	strb	r2, [r1, #-2]
   33694:	strb	r0, [r1, #-1]
   33698:	add	ip, ip, #1
   3369c:	cmp	r7, ip
   336a0:	add	r1, r1, #4
   336a4:	beq	336d4 <luaL_where@@Base+0x135d0>
   336a8:	ldrb	r2, [r1, #-4]
   336ac:	sub	r0, r2, #78	; 0x4e
   336b0:	cmp	r2, #83	; 0x53
   336b4:	and	r0, r0, #253	; 0xfd
   336b8:	sub	lr, r2, #1
   336bc:	bne	3363c <luaL_where@@Base+0x13538>
   336c0:	add	ip, ip, #1
   336c4:	cmp	r7, ip
   336c8:	strb	lr, [r1, #-4]
   336cc:	add	r1, r1, #4
   336d0:	bne	336a8 <luaL_where@@Base+0x135a4>
   336d4:	ldrb	r5, [r6, #36]	; 0x24
   336d8:	mov	r0, r3
   336dc:	ldr	r1, [r6, #20]
   336e0:	lsl	r5, r5, #1
   336e4:	mov	r2, r5
   336e8:	bl	12cb8 <memcpy@plt>
   336ec:	add	r3, r0, r5
   336f0:	str	r3, [r4]
   336f4:	ldr	sl, [r6, #24]
   336f8:	ldr	r5, [r6, #16]
   336fc:	cmp	sl, #0
   33700:	sub	r8, r5, sl, lsl #2
   33704:	beq	337b8 <luaL_where@@Base+0x136b4>
   33708:	mov	r9, #0
   3370c:	str	r6, [sp, #8]
   33710:	ldr	r7, [r8]
   33714:	ldrb	r2, [r7, #5]
   33718:	cmp	r2, #4
   3371c:	beq	33940 <luaL_where@@Base+0x1383c>
   33720:	cmp	r2, #7
   33724:	beq	33954 <luaL_where@@Base+0x13850>
   33728:	cmp	r2, #10
   3372c:	movne	fp, #1
   33730:	movne	r5, fp
   33734:	movne	r1, #11
   33738:	beq	33a80 <luaL_where@@Base+0x1397c>
   3373c:	ldr	r2, [r4, #4]
   33740:	sub	r2, r2, r3
   33744:	cmp	r2, r1
   33748:	movcs	r0, r3
   3374c:	bcc	33aac <luaL_where@@Base+0x139a8>
   33750:	cmp	r5, #127	; 0x7f
   33754:	mvnhi	r1, #127	; 0x7f
   33758:	bhi	33764 <luaL_where@@Base+0x13660>
   3375c:	b	339a4 <luaL_where@@Base+0x138a0>
   33760:	mov	r0, r2
   33764:	orr	r3, r1, r5
   33768:	mov	r2, r0
   3376c:	lsr	r5, r5, #7
   33770:	cmp	r5, #127	; 0x7f
   33774:	strb	r3, [r2], #1
   33778:	bhi	33760 <luaL_where@@Base+0x1365c>
   3377c:	add	r3, r0, #2
   33780:	strb	r5, [r2]
   33784:	ldr	r5, [r7, #12]
   33788:	mov	r0, r3
   3378c:	add	r1, r7, #16
   33790:	mov	r2, r5
   33794:	bl	12cb8 <memcpy@plt>
   33798:	add	r3, r0, r5
   3379c:	str	r3, [r4]
   337a0:	add	r9, r9, #1
   337a4:	cmp	sl, r9
   337a8:	add	r8, r8, #4
   337ac:	bne	33710 <luaL_where@@Base+0x1360c>
   337b0:	ldr	r6, [sp, #8]
   337b4:	ldr	r5, [r6, #16]
   337b8:	ldr	r7, [r6, #28]
   337bc:	ldr	r2, [r4, #4]
   337c0:	add	r1, r7, r7, lsl #2
   337c4:	sub	r2, r2, r3
   337c8:	lsl	r1, r1, #1
   337cc:	cmp	r1, r2
   337d0:	bhi	33cf0 <luaL_where@@Base+0x13bec>
   337d4:	cmp	r7, #0
   337d8:	beq	33878 <luaL_where@@Base+0x13774>
   337dc:	mov	ip, #0
   337e0:	mvn	r0, #127	; 0x7f
   337e4:	ldm	r5, {r1, lr}
   337e8:	and	r2, r1, #-2147483648	; 0x80000000
   337ec:	cmn	lr, #14
   337f0:	orr	r2, r2, r1, lsl #1
   337f4:	beq	33964 <luaL_where@@Base+0x13860>
   337f8:	add	r2, r2, #1
   337fc:	cmp	r2, #127	; 0x7f
   33800:	bls	33818 <luaL_where@@Base+0x13714>
   33804:	orr	r1, r0, r2
   33808:	lsr	r2, r2, #7
   3380c:	cmp	r2, #127	; 0x7f
   33810:	strb	r1, [r3], #1
   33814:	bhi	33804 <luaL_where@@Base+0x13700>
   33818:	uxtb	r2, r2
   3381c:	strb	r2, [r3]
   33820:	ldr	lr, [r5]
   33824:	add	r1, r3, #1
   33828:	cmp	lr, #0
   3382c:	lsrlt	lr, lr, #27
   33830:	andlt	r2, r2, #7
   33834:	andlt	lr, lr, #24
   33838:	orrlt	r2, lr, r2
   3383c:	strblt	r2, [r3]
   33840:	ldr	r2, [r5, #4]
   33844:	cmp	r2, #127	; 0x7f
   33848:	bls	33860 <luaL_where@@Base+0x1375c>
   3384c:	orr	r3, r0, r2
   33850:	lsr	r2, r2, #7
   33854:	cmp	r2, #127	; 0x7f
   33858:	strb	r3, [r1], #1
   3385c:	bhi	3384c <luaL_where@@Base+0x13748>
   33860:	add	r3, r1, #1
   33864:	strb	r2, [r1]
   33868:	add	ip, ip, #1
   3386c:	cmp	r7, ip
   33870:	add	r5, r5, #8
   33874:	bne	337e4 <luaL_where@@Base+0x136e0>
   33878:	ldr	r1, [sp, #4]
   3387c:	str	r3, [r4]
   33880:	cmp	r1, #0
   33884:	beq	338b4 <luaL_where@@Base+0x137b0>
   33888:	ldr	r2, [r4, #4]
   3388c:	sub	r2, r2, r3
   33890:	cmp	r1, r2
   33894:	bhi	33cc8 <luaL_where@@Base+0x13bc4>
   33898:	ldr	r5, [sp, #4]
   3389c:	mov	r0, r3
   338a0:	ldr	r1, [r6, #52]	; 0x34
   338a4:	mov	r2, r5
   338a8:	bl	12cb8 <memcpy@plt>
   338ac:	add	r3, r0, r5
   338b0:	str	r3, [r4]
   338b4:	ldr	r3, [r4, #32]
   338b8:	cmp	r3, #0
   338bc:	bne	33938 <luaL_where@@Base+0x13834>
   338c0:	ldr	r3, [r4, #8]
   338c4:	ldr	r5, [r4]
   338c8:	add	r1, r3, #5
   338cc:	sub	r5, r5, r3
   338d0:	sub	r5, r5, #5
   338d4:	clz	r3, r5
   338d8:	eor	r3, r3, #31
   338dc:	cmp	r5, #127	; 0x7f
   338e0:	add	r3, r3, r3, lsl #3
   338e4:	add	r3, r3, #72	; 0x48
   338e8:	lsr	r2, r3, #6
   338ec:	sub	r1, r1, r2
   338f0:	bls	33cbc <luaL_where@@Base+0x13bb8>
   338f4:	mov	r0, r1
   338f8:	mov	r3, r5
   338fc:	mvn	r6, #127	; 0x7f
   33900:	orr	lr, r6, r3
   33904:	lsr	r3, r3, #7
   33908:	add	ip, r0, #1
   3390c:	cmp	r3, #127	; 0x7f
   33910:	strb	lr, [r0]
   33914:	mov	r0, ip
   33918:	bhi	33900 <luaL_where@@Base+0x137fc>
   3391c:	strb	r3, [ip]
   33920:	add	r2, r5, r2
   33924:	ldr	r3, [r4, #24]
   33928:	ldr	r5, [r4, #20]
   3392c:	ldr	r0, [r4, #12]
   33930:	blx	r5
   33934:	str	r0, [r4, #32]
   33938:	add	sp, sp, #20
   3393c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33940:	ldr	r5, [r7, #12]
   33944:	add	r5, r5, #5
   33948:	mov	r1, r5
   3394c:	uxtb	fp, r5
   33950:	b	3373c <luaL_where@@Base+0x13638>
   33954:	mov	fp, #0
   33958:	mov	r5, fp
   3395c:	mov	r1, #1
   33960:	b	3373c <luaL_where@@Base+0x13638>
   33964:	cmp	r2, #127	; 0x7f
   33968:	bls	33980 <luaL_where@@Base+0x1387c>
   3396c:	orr	lr, r0, r2
   33970:	lsr	r2, r2, #7
   33974:	cmp	r2, #127	; 0x7f
   33978:	strb	lr, [r3], #1
   3397c:	bhi	3396c <luaL_where@@Base+0x13868>
   33980:	cmp	r1, #0
   33984:	asrlt	r1, r1, #27
   33988:	andlt	r2, r2, #7
   3398c:	andlt	r1, r1, #24
   33990:	add	lr, r3, #1
   33994:	orrlt	r2, r1, r2
   33998:	strb	r2, [r3]
   3399c:	mov	r3, lr
   339a0:	b	33868 <luaL_where@@Base+0x13764>
   339a4:	cmp	r5, #4
   339a8:	strb	fp, [r0]
   339ac:	add	r3, r0, #1
   339b0:	bhi	33784 <luaL_where@@Base+0x13680>
   339b4:	cmp	r5, #1
   339b8:	beq	33ac8 <luaL_where@@Base+0x139c4>
   339bc:	cmp	r5, #0
   339c0:	beq	3379c <luaL_where@@Base+0x13698>
   339c4:	ldr	r2, [r7, #8]
   339c8:	cmp	r2, #127	; 0x7f
   339cc:	bls	339e8 <luaL_where@@Base+0x138e4>
   339d0:	mvn	r0, #127	; 0x7f
   339d4:	orr	r1, r0, r2
   339d8:	lsr	r2, r2, #7
   339dc:	cmp	r2, #127	; 0x7f
   339e0:	strb	r1, [r3], #1
   339e4:	bhi	339d4 <luaL_where@@Base+0x138d0>
   339e8:	strb	r2, [r3]
   339ec:	ldr	r2, [r7, #12]
   339f0:	add	r3, r3, #1
   339f4:	cmp	r2, #127	; 0x7f
   339f8:	bls	33a14 <luaL_where@@Base+0x13910>
   339fc:	mvn	r0, #127	; 0x7f
   33a00:	orr	r1, r0, r2
   33a04:	lsr	r2, r2, #7
   33a08:	cmp	r2, #127	; 0x7f
   33a0c:	strb	r1, [r3], #1
   33a10:	bhi	33a00 <luaL_where@@Base+0x138fc>
   33a14:	cmp	r5, #4
   33a18:	strb	r2, [r3]
   33a1c:	add	r3, r3, #1
   33a20:	bne	3379c <luaL_where@@Base+0x13698>
   33a24:	ldr	r2, [r7, #16]
   33a28:	cmp	r2, #127	; 0x7f
   33a2c:	bls	33a48 <luaL_where@@Base+0x13944>
   33a30:	mvn	r0, #127	; 0x7f
   33a34:	orr	r1, r0, r2
   33a38:	lsr	r2, r2, #7
   33a3c:	cmp	r2, #127	; 0x7f
   33a40:	strb	r1, [r3], #1
   33a44:	bhi	33a34 <luaL_where@@Base+0x13930>
   33a48:	strb	r2, [r3]
   33a4c:	ldr	r2, [r7, #20]
   33a50:	add	r1, r3, #1
   33a54:	cmp	r2, #127	; 0x7f
   33a58:	bls	33a74 <luaL_where@@Base+0x13970>
   33a5c:	mvn	r0, #127	; 0x7f
   33a60:	orr	r3, r0, r2
   33a64:	lsr	r2, r2, #7
   33a68:	cmp	r2, #127	; 0x7f
   33a6c:	strb	r3, [r1], #1
   33a70:	bhi	33a60 <luaL_where@@Base+0x1395c>
   33a74:	add	r3, r1, #1
   33a78:	strb	r2, [r1]
   33a7c:	b	3379c <luaL_where@@Base+0x13698>
   33a80:	ldrh	r2, [r7, #6]
   33a84:	cmp	r2, #11
   33a88:	beq	33c24 <luaL_where@@Base+0x13b20>
   33a8c:	cmp	r2, #12
   33a90:	moveq	fp, #3
   33a94:	moveq	r5, fp
   33a98:	moveq	r1, #21
   33a9c:	movne	fp, #4
   33aa0:	movne	r5, fp
   33aa4:	movne	r1, #21
   33aa8:	b	3373c <luaL_where@@Base+0x13638>
   33aac:	mov	r0, r4
   33ab0:	bl	2ff68 <luaL_where@@Base+0xfe64>
   33ab4:	b	33750 <luaL_where@@Base+0x1364c>
   33ab8:	strb	r2, [r3, #1]
   33abc:	add	r5, r3, #2
   33ac0:	str	r2, [sp, #4]
   33ac4:	b	335e4 <luaL_where@@Base+0x134e0>
   33ac8:	ldr	r1, [r7, #24]
   33acc:	ldr	r2, [r7, #28]
   33ad0:	cmp	r1, #0
   33ad4:	beq	33c34 <luaL_where@@Base+0x13b30>
   33ad8:	subs	r5, r1, #1
   33adc:	ldr	ip, [r7, #8]
   33ae0:	bmi	33c50 <luaL_where@@Base+0x13b4c>
   33ae4:	add	lr, ip, r5, lsl #3
   33ae8:	ldr	lr, [lr, #4]
   33aec:	cmn	lr, #1
   33af0:	bne	33c50 <luaL_where@@Base+0x13b4c>
   33af4:	sub	r1, r1, #2
   33af8:	add	r1, ip, r1, lsl #3
   33afc:	b	33b10 <luaL_where@@Base+0x13a0c>
   33b00:	ldr	ip, [r1, #4]
   33b04:	sub	r1, r1, #8
   33b08:	cmn	ip, #1
   33b0c:	bne	33c50 <luaL_where@@Base+0x13b4c>
   33b10:	subs	r5, r5, #1
   33b14:	bcs	33b00 <luaL_where@@Base+0x139fc>
   33b18:	cmp	r2, #0
   33b1c:	movne	r1, #0
   33b20:	beq	33c3c <luaL_where@@Base+0x13b38>
   33b24:	mov	r5, r1
   33b28:	ldr	lr, [r7, #20]
   33b2c:	add	r2, r2, r2, lsl #1
   33b30:	add	r0, lr, #24
   33b34:	add	ip, r0, r2, lsl #3
   33b38:	mov	fp, #0
   33b3c:	b	33b44 <luaL_where@@Base+0x13a40>
   33b40:	add	r0, r0, #24
   33b44:	ldr	r2, [lr, #4]
   33b48:	mov	lr, r0
   33b4c:	adds	r2, r2, #1
   33b50:	movne	r2, #1
   33b54:	cmp	ip, r0
   33b58:	add	fp, fp, r2
   33b5c:	bne	33b40 <luaL_where@@Base+0x13a3c>
   33b60:	cmp	r5, #127	; 0x7f
   33b64:	uxtb	r2, fp
   33b68:	bls	33b8c <luaL_where@@Base+0x13a88>
   33b6c:	mov	r1, r5
   33b70:	mvn	ip, #127	; 0x7f
   33b74:	orr	r0, ip, r1
   33b78:	lsr	r1, r1, #7
   33b7c:	cmp	r1, #127	; 0x7f
   33b80:	strb	r0, [r3], #1
   33b84:	bhi	33b74 <luaL_where@@Base+0x13a70>
   33b88:	uxtb	r1, r1
   33b8c:	cmp	fp, #127	; 0x7f
   33b90:	strb	r1, [r3]
   33b94:	add	r3, r3, #1
   33b98:	bls	33bbc <luaL_where@@Base+0x13ab8>
   33b9c:	mov	r2, fp
   33ba0:	mvn	r0, #127	; 0x7f
   33ba4:	orr	r1, r0, r2
   33ba8:	lsr	r2, r2, #7
   33bac:	cmp	r2, #127	; 0x7f
   33bb0:	strb	r1, [r3], #1
   33bb4:	bhi	33ba4 <luaL_where@@Base+0x13aa0>
   33bb8:	uxtb	r2, r2
   33bbc:	cmp	r5, #0
   33bc0:	strb	r2, [r3], #1
   33bc4:	str	r3, [r4]
   33bc8:	bne	33c88 <luaL_where@@Base+0x13b84>
   33bcc:	cmp	fp, #0
   33bd0:	beq	33c1c <luaL_where@@Base+0x13b18>
   33bd4:	ldr	r3, [r7, #28]
   33bd8:	ldr	r5, [r7, #20]
   33bdc:	add	r3, r3, r3, lsl #1
   33be0:	add	r5, r5, r3, lsl #3
   33be4:	b	33bec <luaL_where@@Base+0x13ae8>
   33be8:	sub	r5, r5, #24
   33bec:	ldr	r3, [r5, #4]
   33bf0:	add	r1, r5, #8
   33bf4:	cmn	r3, #1
   33bf8:	mov	r0, r4
   33bfc:	beq	33be8 <luaL_where@@Base+0x13ae4>
   33c00:	bl	30a74 <luaL_where@@Base+0x10970>
   33c04:	sub	fp, fp, #1
   33c08:	mov	r1, r5
   33c0c:	mov	r0, r4
   33c10:	bl	30a74 <luaL_where@@Base+0x10970>
   33c14:	cmp	fp, #0
   33c18:	bne	33be8 <luaL_where@@Base+0x13ae4>
   33c1c:	ldr	r3, [r4]
   33c20:	b	337a0 <luaL_where@@Base+0x1369c>
   33c24:	mov	fp, #2
   33c28:	mov	r5, fp
   33c2c:	mov	r1, #21
   33c30:	b	3373c <luaL_where@@Base+0x13638>
   33c34:	cmp	r2, #0
   33c38:	bne	33b24 <luaL_where@@Base+0x13a20>
   33c3c:	add	r3, r0, #3
   33c40:	strb	r2, [r0, #1]
   33c44:	strb	r2, [r0, #2]
   33c48:	str	r3, [r4]
   33c4c:	b	337a0 <luaL_where@@Base+0x1369c>
   33c50:	add	r5, r5, #1
   33c54:	cmp	r2, #0
   33c58:	uxtb	r1, r5
   33c5c:	bne	33b28 <luaL_where@@Base+0x13a24>
   33c60:	cmp	r5, #127	; 0x7f
   33c64:	movhi	fp, r2
   33c68:	bhi	33b6c <luaL_where@@Base+0x13a68>
   33c6c:	cmp	r5, #0
   33c70:	add	r3, r0, #3
   33c74:	strb	r1, [r0, #1]
   33c78:	strb	r2, [r0, #2]
   33c7c:	movne	fp, r2
   33c80:	str	r3, [r4]
   33c84:	beq	337a0 <luaL_where@@Base+0x1369c>
   33c88:	ldr	r2, [r7, #8]
   33c8c:	str	r7, [sp, #12]
   33c90:	mov	r6, #0
   33c94:	mov	r7, r2
   33c98:	mov	r1, r7
   33c9c:	add	r6, r6, #1
   33ca0:	mov	r0, r4
   33ca4:	bl	30a74 <luaL_where@@Base+0x10970>
   33ca8:	cmp	r6, r5
   33cac:	add	r7, r7, #8
   33cb0:	bcc	33c98 <luaL_where@@Base+0x13b94>
   33cb4:	ldr	r7, [sp, #12]
   33cb8:	b	33bcc <luaL_where@@Base+0x13ac8>
   33cbc:	mov	ip, r1
   33cc0:	mov	r3, r5
   33cc4:	b	3391c <luaL_where@@Base+0x13818>
   33cc8:	mov	r0, r4
   33ccc:	bl	2ff68 <luaL_where@@Base+0xfe64>
   33cd0:	mov	r3, r0
   33cd4:	b	33898 <luaL_where@@Base+0x13794>
   33cd8:	mov	r0, r4
   33cdc:	bl	333f8 <luaL_where@@Base+0x132f4>
   33ce0:	b	33444 <luaL_where@@Base+0x13340>
   33ce4:	mov	r0, r4
   33ce8:	bl	333cc <luaL_where@@Base+0x132c8>
   33cec:	b	33474 <luaL_where@@Base+0x13370>
   33cf0:	mov	r0, r4
   33cf4:	bl	2ff68 <luaL_where@@Base+0xfe64>
   33cf8:	mov	r3, r0
   33cfc:	b	337d4 <luaL_where@@Base+0x136d0>
   33d00:	ldr	r2, [sp, #4]
   33d04:	add	r5, r3, #2
   33d08:	cmp	r2, #0
   33d0c:	strb	r2, [r3, #1]
   33d10:	beq	335e4 <luaL_where@@Base+0x134e0>
   33d14:	b	3358c <luaL_where@@Base+0x13488>
   33d18:	ldr	r0, [r2, #8]
   33d1c:	ldr	r3, [r2, #4]
   33d20:	push	{r4, r5, r6, r7, lr}
   33d24:	sub	r3, r3, r0
   33d28:	cmp	r3, #1024	; 0x400
   33d2c:	sub	sp, sp, #12
   33d30:	mov	r4, r2
   33d34:	bcc	33e50 <luaL_where@@Base+0x13d4c>
   33d38:	ldr	r2, [r4, #16]
   33d3c:	ldr	r6, [r2, #40]	; 0x28
   33d40:	ldr	r5, [r6, #12]
   33d44:	add	r1, r5, #10
   33d48:	cmp	r1, r3
   33d4c:	bhi	33e44 <luaL_where@@Base+0x13d40>
   33d50:	mov	r3, #27
   33d54:	strb	r3, [r0]
   33d58:	mov	r1, #76	; 0x4c
   33d5c:	mov	r2, #74	; 0x4a
   33d60:	mov	r3, #2
   33d64:	strb	r2, [r0, #2]
   33d68:	strb	r1, [r0, #1]
   33d6c:	strb	r3, [r0, #3]
   33d70:	ldr	r1, [r4, #16]
   33d74:	ldr	r3, [r4, #28]
   33d78:	add	r2, r0, #5
   33d7c:	ldrb	r1, [r1, #37]	; 0x25
   33d80:	cmp	r3, #0
   33d84:	moveq	r3, #0
   33d88:	movne	r3, #2
   33d8c:	and	r1, r1, #4
   33d90:	add	r3, r3, r1
   33d94:	strb	r3, [r0, #4]
   33d98:	ldr	r3, [r4, #28]
   33d9c:	cmp	r3, #0
   33da0:	bne	33de4 <luaL_where@@Base+0x13ce0>
   33da4:	cmp	r5, #127	; 0x7f
   33da8:	mov	r3, r5
   33dac:	bls	33dc8 <luaL_where@@Base+0x13cc4>
   33db0:	mvn	r0, #127	; 0x7f
   33db4:	orr	r1, r0, r3
   33db8:	lsr	r3, r3, #7
   33dbc:	cmp	r3, #127	; 0x7f
   33dc0:	strb	r1, [r2], #1
   33dc4:	bhi	33db4 <luaL_where@@Base+0x13cb0>
   33dc8:	add	r7, r2, #1
   33dcc:	strb	r3, [r2]
   33dd0:	add	r1, r6, #16
   33dd4:	mov	r2, r5
   33dd8:	mov	r0, r7
   33ddc:	bl	12cb8 <memcpy@plt>
   33de0:	add	r2, r7, r5
   33de4:	ldr	r1, [r4, #8]
   33de8:	ldr	r3, [r4, #24]
   33dec:	sub	r2, r2, r1
   33df0:	ldr	r5, [r4, #20]
   33df4:	ldr	r0, [r4, #12]
   33df8:	blx	r5
   33dfc:	ldr	r1, [r4, #16]
   33e00:	str	r0, [r4, #32]
   33e04:	mov	r0, r4
   33e08:	bl	333f8 <luaL_where@@Base+0x132f4>
   33e0c:	ldr	r3, [r4, #32]
   33e10:	cmp	r3, #0
   33e14:	bne	33e38 <luaL_where@@Base+0x13d34>
   33e18:	add	r1, sp, #8
   33e1c:	ldr	r5, [r4, #20]
   33e20:	strb	r3, [r1, #-1]!
   33e24:	mov	r2, #1
   33e28:	ldr	r3, [r4, #24]
   33e2c:	ldr	r0, [r4, #12]
   33e30:	blx	r5
   33e34:	str	r0, [r4, #32]
   33e38:	mov	r0, #0
   33e3c:	add	sp, sp, #12
   33e40:	pop	{r4, r5, r6, r7, pc}
   33e44:	mov	r0, r4
   33e48:	bl	333cc <luaL_where@@Base+0x132c8>
   33e4c:	b	33d50 <luaL_where@@Base+0x13c4c>
   33e50:	mov	r1, #1024	; 0x400
   33e54:	mov	r0, r2
   33e58:	bl	333cc <luaL_where@@Base+0x132c8>
   33e5c:	ldr	r0, [r4, #8]
   33e60:	ldr	r3, [r4, #4]
   33e64:	sub	r3, r3, r0
   33e68:	b	33d38 <luaL_where@@Base+0x13c34>
   33e6c:	ldr	ip, [r2, #80]	; 0x50
   33e70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33e74:	mov	r5, r2
   33e78:	ldr	r3, [r2, #8]
   33e7c:	ldr	r2, [r2, #20]
   33e80:	ldr	r0, [ip, #8]
   33e84:	sub	r4, r3, r2
   33e88:	sub	sp, sp, #52	; 0x34
   33e8c:	add	r1, r4, #1
   33e90:	str	r3, [sp, #16]
   33e94:	str	r2, [sp, #8]
   33e98:	ldr	r3, [r0, #88]	; 0x58
   33e9c:	add	r1, r1, r1, lsl #2
   33ea0:	ldr	r2, [r0, #84]	; 0x54
   33ea4:	lsl	r1, r1, #1
   33ea8:	sub	r2, r2, r3
   33eac:	cmp	r1, r2
   33eb0:	str	ip, [r0, #92]	; 0x5c
   33eb4:	bhi	34ce4 <luaL_where@@Base+0x14be0>
   33eb8:	ldr	r8, [sp, #8]
   33ebc:	ldr	r1, [r5, #16]
   33ec0:	lsl	r4, r4, #3
   33ec4:	lsl	r7, r8, #3
   33ec8:	mov	r2, r4
   33ecc:	add	r1, r1, r7
   33ed0:	mov	r0, r3
   33ed4:	bl	12cb8 <memcpy@plt>
   33ed8:	sub	r4, r4, r8, lsl #1
   33edc:	ldr	r6, [pc, #3964]	; 34e60 <luaL_where@@Base+0x14d5c>
   33ee0:	mov	r2, r8
   33ee4:	cmp	r8, #32768	; 0x8000
   33ee8:	mov	r8, #0
   33eec:	str	r6, [r5, #8]
   33ef0:	str	r8, [r5, #244]	; 0xf4
   33ef4:	sub	fp, r0, r7
   33ef8:	add	r7, r0, r4
   33efc:	str	r7, [sp, #20]
   33f00:	bhi	33f90 <luaL_where@@Base+0x13e8c>
   33f04:	ldr	r9, [pc, #3928]	; 34e64 <luaL_where@@Base+0x14d60>
   33f08:	mov	r4, r2
   33f0c:	b	33f40 <luaL_where@@Base+0x13e3c>
   33f10:	ldrb	r3, [r6, #4]
   33f14:	add	r2, r4, #1
   33f18:	and	r3, r3, #31
   33f1c:	lsr	r3, r9, r3
   33f20:	tst	r3, #1
   33f24:	beq	33f34 <luaL_where@@Base+0x13e30>
   33f28:	ldrb	r3, [r6, #5]
   33f2c:	cmp	r3, #27
   33f30:	addne	r2, r4, #2
   33f34:	cmp	r2, #32768	; 0x8000
   33f38:	mov	r4, r2
   33f3c:	bhi	33f8c <luaL_where@@Base+0x13e88>
   33f40:	add	r6, fp, r4, lsl #3
   33f44:	lsl	sl, r4, #1
   33f48:	ldrb	r3, [r6, #5]
   33f4c:	cmp	r3, #29
   33f50:	strhne	r4, [r6, #6]
   33f54:	strhne	r8, [r7, sl]
   33f58:	bne	33f10 <luaL_where@@Base+0x13e0c>
   33f5c:	ldr	r3, [r6, #12]
   33f60:	ldr	r1, [r6, #8]
   33f64:	mov	r0, r5
   33f68:	str	r3, [sp, #12]
   33f6c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   33f70:	ldr	r3, [sp, #12]
   33f74:	mov	r1, r3
   33f78:	strh	r0, [r6, #6]
   33f7c:	mov	r0, r5
   33f80:	bl	26ccc <luaL_where@@Base+0x6bc8>
   33f84:	strh	r0, [r7, sl]
   33f88:	b	33f10 <luaL_where@@Base+0x13e0c>
   33f8c:	ldr	r6, [r5, #8]
   33f90:	ldr	r3, [r5, #28]
   33f94:	ldr	r1, [sp, #16]
   33f98:	mov	r2, r3
   33f9c:	str	r3, [sp, #28]
   33fa0:	ldrh	r2, [r2, #2]
   33fa4:	ldr	r3, [pc, #3764]	; 34e60 <luaL_where@@Base+0x14d5c>
   33fa8:	cmp	r1, r3
   33fac:	str	r2, [sp, #12]
   33fb0:	bls	340c8 <luaL_where@@Base+0x13fc4>
   33fb4:	ldr	r2, [sp, #20]
   33fb8:	add	r4, fp, #262144	; 0x40000
   33fbc:	add	sl, r2, #65536	; 0x10000
   33fc0:	mov	r9, r3
   33fc4:	add	sl, sl, #2
   33fc8:	add	r4, r4, #8
   33fcc:	ldr	r3, [r5, #236]	; 0xec
   33fd0:	cmp	r3, r6
   33fd4:	bls	34464 <luaL_where@@Base+0x14360>
   33fd8:	ldr	r2, [sp, #12]
   33fdc:	ldr	r3, [r5, #16]
   33fe0:	cmp	r9, r2
   33fe4:	lsl	r2, r6, #3
   33fe8:	mov	r1, r2
   33fec:	str	r2, [sp, #32]
   33ff0:	add	r2, r6, #1
   33ff4:	str	r3, [sp, #24]
   33ff8:	add	r7, r3, r1
   33ffc:	str	r2, [r5, #8]
   34000:	uxth	r8, r6
   34004:	bcs	343b4 <luaL_where@@Base+0x142b0>
   34008:	ldrh	r2, [r4]
   3400c:	ldr	r1, [sp, #8]
   34010:	cmp	r1, r2
   34014:	addls	r2, fp, r2, lsl #3
   34018:	ldr	r1, [sp, #8]
   3401c:	ldrhls	r2, [r2, #6]
   34020:	strh	r2, [r7]
   34024:	ldrh	r2, [r4, #2]
   34028:	cmp	r1, r2
   3402c:	addls	r2, fp, r2, lsl #3
   34030:	mov	r1, #0
   34034:	ldrhls	r2, [r2, #6]
   34038:	strh	r2, [r7, #2]
   3403c:	ldrb	r2, [r4, #5]
   34040:	strh	r8, [r4, #6]
   34044:	strb	r2, [r7, #5]
   34048:	ldrb	r2, [r4, #4]
   3404c:	bic	r2, r2, #96	; 0x60
   34050:	strb	r2, [r7, #4]
   34054:	strh	r1, [sl]
   34058:	ldrb	r2, [r4, #4]
   3405c:	and	r2, r2, #31
   34060:	sub	r0, r2, #21
   34064:	cmp	r0, #1
   34068:	bls	3416c <luaL_where@@Base+0x14068>
   3406c:	ldrb	r0, [r4, #5]
   34070:	cmp	r0, #90	; 0x5a
   34074:	beq	34444 <luaL_where@@Base+0x14340>
   34078:	cmp	r0, #98	; 0x62
   3407c:	beq	342f4 <luaL_where@@Base+0x141f0>
   34080:	cmp	r0, #99	; 0x63
   34084:	beq	34470 <luaL_where@@Base+0x1436c>
   34088:	cmp	r0, #83	; 0x53
   3408c:	ldr	r7, [r5, #8]
   34090:	beq	34590 <luaL_where@@Base+0x1448c>
   34094:	cmp	r0, #17
   34098:	streq	r6, [r5, #244]	; 0xf4
   3409c:	moveq	r8, r1
   340a0:	moveq	r6, r7
   340a4:	beq	340b0 <luaL_where@@Base+0x13fac>
   340a8:	mov	r6, r7
   340ac:	mov	r8, r1
   340b0:	ldr	r3, [sp, #16]
   340b4:	add	r9, r9, #1
   340b8:	cmp	r3, r9
   340bc:	strh	r8, [sl], #2
   340c0:	add	r4, r4, #8
   340c4:	bne	33fcc <luaL_where@@Base+0x13ec8>
   340c8:	ldrd	r2, [sp, #12]
   340cc:	cmp	r3, r2
   340d0:	beq	345dc <luaL_where@@Base+0x144d8>
   340d4:	sub	r1, r6, #1
   340d8:	cmp	r1, #32768	; 0x8000
   340dc:	bls	34160 <luaL_where@@Base+0x1405c>
   340e0:	ldr	lr, [r5, #16]
   340e4:	add	r2, lr, r1, lsl #3
   340e8:	ldrb	r3, [r2, #5]
   340ec:	cmp	r3, #19
   340f0:	bne	34160 <luaL_where@@Base+0x1405c>
   340f4:	sub	r6, r6, #-536870910	; 0xe0000002
   340f8:	sub	r3, lr, r2
   340fc:	lsl	r6, r6, #3
   34100:	add	r0, lr, r6
   34104:	add	r6, r3, r6
   34108:	b	34118 <luaL_where@@Base+0x14014>
   3410c:	ldrb	r3, [r0, #13]
   34110:	cmp	r3, #19
   34114:	bne	34160 <luaL_where@@Base+0x1405c>
   34118:	ldrh	r3, [r2]
   3411c:	sub	r1, r1, #1
   34120:	sub	r0, r0, #8
   34124:	tst	r3, #32768	; 0x8000
   34128:	addne	r3, lr, r3, lsl #3
   3412c:	ldrbne	ip, [r3, #4]
   34130:	orrne	ip, ip, #64	; 0x40
   34134:	strbne	ip, [r3, #4]
   34138:	ldrh	r3, [r2, #2]
   3413c:	ldr	ip, [r5, #244]	; 0xf4
   34140:	add	r2, r2, r6
   34144:	cmp	r3, ip
   34148:	add	r3, lr, r3, lsl #3
   3414c:	ldrbhi	ip, [r3, #4]
   34150:	orrhi	ip, ip, #64	; 0x40
   34154:	strbhi	ip, [r3, #4]
   34158:	cmp	r1, #32768	; 0x8000
   3415c:	bne	3410c <luaL_where@@Base+0x14008>
   34160:	mov	r0, #0
   34164:	add	sp, sp, #52	; 0x34
   34168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3416c:	ldrh	lr, [r4]
   34170:	ldrb	r0, [r7, #4]
   34174:	ldr	ip, [sp, #20]
   34178:	lsl	r2, lr, #1
   3417c:	bic	r0, r0, #127	; 0x7f
   34180:	orr	r0, r0, #19
   34184:	ldrh	r1, [ip, r2]
   34188:	strb	r0, [r7, #4]
   3418c:	ldrb	r0, [r4, #5]
   34190:	add	ip, ip, r2
   34194:	str	r0, [sp, #36]	; 0x24
   34198:	sub	r0, r0, #16
   3419c:	cmp	r0, #82	; 0x52
   341a0:	ldrls	pc, [pc, r0, lsl #2]
   341a4:	b	34ba8 <luaL_where@@Base+0x14aa4>
   341a8:	andeq	r4, r3, r0, asr #12
   341ac:	andeq	r4, r3, r8, lsr #23
   341b0:	andeq	r4, r3, r8, lsr #23
   341b4:	andeq	r4, r3, r0, ror #12
   341b8:	andeq	r4, r3, r8, lsr #23
   341bc:	andeq	r4, r3, r8, lsr #23
   341c0:	andeq	r4, r3, r8, lsr #23
   341c4:	andeq	r4, r3, r8, lsr #23
   341c8:	andeq	r4, r3, r8, lsr #23
   341cc:	andeq	r4, r3, r8, lsr #23
   341d0:	andeq	r4, r3, r8, lsr #23
   341d4:	andeq	r4, r3, r8, lsr #23
   341d8:	andeq	r4, r3, r8, lsr #23
   341dc:	andeq	r4, r3, r8, lsr #23
   341e0:	andeq	r4, r3, r8, lsr #23
   341e4:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   341e8:	andeq	r4, r3, r8, lsr r7
   341ec:	andeq	r4, r3, r8, lsl #19
   341f0:	andeq	r4, r3, r8, lsl #19
   341f4:	andeq	r4, r3, r8, lsl #19
   341f8:	andeq	r4, r3, r0, lsr #20
   341fc:	andeq	r4, r3, r0, lsr #20
   34200:	andeq	r4, r3, r0, lsr #20
   34204:	andeq	r4, r3, r0, lsr #20
   34208:	andeq	r4, r3, r0, lsr #20
   3420c:	andeq	r4, r3, r0, asr fp
   34210:	andeq	r4, r3, r0, asr fp
   34214:	muleq	r3, r4, fp
   34218:	andeq	r4, r3, ip, ror r7
   3421c:			; <UNDEFINED> instruction: 0x000347b4
   34220:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   34224:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   34228:	andeq	r4, r3, r8, lsr #23
   3422c:	andeq	r4, r3, r8, lsr #23
   34230:	andeq	r4, r3, r8, lsr #23
   34234:	andeq	r4, r3, r8, lsr #23
   34238:	andeq	r4, r3, r8, lsr #23
   3423c:	andeq	r4, r3, r8, lsr #23
   34240:	andeq	r4, r3, r8, lsr #23
   34244:	andeq	r4, r3, r8, lsr #23
   34248:	andeq	r4, r3, r8, lsr #23
   3424c:	andeq	r4, r3, r8, lsr #23
   34250:	andeq	r4, r3, r8, lsr #23
   34254:	andeq	r4, r3, r8, lsr #23
   34258:	andeq	r4, r3, r8, lsr #23
   3425c:	andeq	r4, r3, r8, lsr #23
   34260:	andeq	r4, r3, r8, lsr #23
   34264:	andeq	r4, r3, r8, lsr #23
   34268:	andeq	r4, r3, r8, lsr #23
   3426c:	andeq	r4, r3, r8, lsr #23
   34270:	andeq	r4, r3, r8, lsr #23
   34274:	andeq	r4, r3, r8, lsr #23
   34278:	andeq	r4, r3, r8, lsr #23
   3427c:	andeq	r4, r3, r4, asr #16
   34280:	andeq	r4, r3, ip, lsl #17
   34284:	andeq	r4, r3, r8, lsr #23
   34288:	andeq	r4, r3, r8, lsr #23
   3428c:	andeq	r4, r3, r8, lsr #23
   34290:	andeq	r4, r3, r8, lsr #23
   34294:	andeq	r4, r3, r8, lsr #23
   34298:	andeq	r4, r3, r8, lsr #23
   3429c:	ldrdeq	r4, [r3], -r8
   342a0:	andeq	r4, r3, r8, lsr #23
   342a4:	andeq	r4, r3, r8, lsr #23
   342a8:	andeq	r4, r3, r8, lsr #23
   342ac:	andeq	r4, r3, r8, lsr #23
   342b0:	andeq	r4, r3, r8, lsr #23
   342b4:	andeq	r4, r3, r8, lsr #23
   342b8:	andeq	r4, r3, r8, lsr #23
   342bc:	andeq	r4, r3, r8, lsr #23
   342c0:	andeq	r4, r3, r8, lsr #23
   342c4:	andeq	r4, r3, r8, lsr #23
   342c8:	andeq	r4, r3, r8, lsr #23
   342cc:	andeq	r4, r3, r8, lsr #23
   342d0:	andeq	r4, r3, ip, lsr #18
   342d4:	andeq	r4, r3, r8, lsr #23
   342d8:	andeq	r4, r3, r8, lsr #23
   342dc:	andeq	r4, r3, r8, lsr #23
   342e0:	andeq	r4, r3, r8, lsr #23
   342e4:	andeq	r4, r3, r8, lsr #23
   342e8:	andeq	r4, r3, r8, lsr #23
   342ec:	andeq	r4, r3, r8, lsr #23
   342f0:	andeq	r4, r3, r0, lsl #6
   342f4:	ldrh	ip, [r4]
   342f8:	ldr	r2, [sp, #20]
   342fc:	add	ip, r2, ip, lsl #1
   34300:	ldrh	r2, [ip]
   34304:	cmp	r2, #0
   34308:	moveq	r7, r6
   3430c:	beq	3435c <luaL_where@@Base+0x14258>
   34310:	mov	r1, #25344	; 0x6300
   34314:	ldrh	r0, [r7, #4]
   34318:	ldrh	r6, [r7, #2]
   3431c:	strh	r1, [r7, #4]
   34320:	strh	r2, [r7, #2]
   34324:	ldr	r7, [r5, #8]
   34328:	ldr	r2, [r5, #236]	; 0xec
   3432c:	str	r0, [sp, #24]
   34330:	cmp	r7, r2
   34334:	bcs	34e00 <luaL_where@@Base+0x14cfc>
   34338:	add	r0, r7, #1
   3433c:	str	r0, [r5, #8]
   34340:	lsl	r1, r7, #3
   34344:	ldrh	r0, [sp, #24]
   34348:	add	r2, r3, r1
   3434c:	strh	r0, [r2, #4]
   34350:	strh	r8, [r3, r1]
   34354:	strh	r6, [r2, #2]
   34358:	strh	r7, [r4, #6]
   3435c:	ldrb	r2, [r4, #4]
   34360:	ldr	r6, [r5, #8]
   34364:	and	r2, r2, #31
   34368:	sub	r2, r2, #21
   3436c:	cmp	r2, #1
   34370:	movhi	r8, #0
   34374:	bhi	340b0 <luaL_where@@Base+0x13fac>
   34378:	ldr	r2, [r5, #236]	; 0xec
   3437c:	uxth	r7, r7
   34380:	cmp	r2, r6
   34384:	bls	34fc4 <luaL_where@@Base+0x14ec0>
   34388:	lsl	r1, r6, #3
   3438c:	add	r0, r6, #1
   34390:	str	r0, [r5, #8]
   34394:	add	r2, r3, r1
   34398:	ldr	r0, [pc, #2760]	; 34e68 <luaL_where@@Base+0x14d64>
   3439c:	uxth	r8, r6
   343a0:	strh	r0, [r2, #4]
   343a4:	strh	r7, [r3, r1]
   343a8:	strh	r7, [r2, #2]
   343ac:	ldr	r6, [r5, #8]
   343b0:	b	340b0 <luaL_where@@Base+0x13fac>
   343b4:	ldr	r1, [sp, #28]
   343b8:	add	lr, r1, #8
   343bc:	ldrb	r2, [r1, #6]
   343c0:	ldrh	r0, [r1]
   343c4:	strh	r8, [r1, #2]
   343c8:	cmp	r2, #0
   343cc:	ldr	r1, [r5, #32]
   343d0:	lsl	r0, r0, #2
   343d4:	beq	34414 <luaL_where@@Base+0x14310>
   343d8:	sub	ip, r1, #4
   343dc:	add	ip, ip, r0
   343e0:	sub	r0, r0, #4
   343e4:	add	ip, ip, r2, lsl #2
   343e8:	add	r0, r1, r0
   343ec:	ldr	r2, [r0, #4]!
   343f0:	cmp	ip, r0
   343f4:	uxth	r1, r2
   343f8:	lsr	r2, r2, #16
   343fc:	add	r1, fp, r1, lsl #3
   34400:	lsl	r2, r2, #16
   34404:	ldrh	r1, [r1, #6]
   34408:	orr	r2, r1, r2
   3440c:	str	r2, [r0]
   34410:	bne	343ec <luaL_where@@Base+0x142e8>
   34414:	ldrh	r1, [r5, #24]
   34418:	ldr	r2, [r5, #28]
   3441c:	add	r2, r2, r1, lsl #3
   34420:	cmp	lr, r2
   34424:	mvncs	r2, #0
   34428:	ldrcc	r2, [sp, #28]
   3442c:	strcs	lr, [sp, #28]
   34430:	strcc	lr, [sp, #28]
   34434:	ldrhcc	r2, [r2, #10]
   34438:	strcs	r2, [sp, #12]
   3443c:	strcc	r2, [sp, #12]
   34440:	b	34008 <luaL_where@@Base+0x13f04>
   34444:	ldrh	r3, [r4, #2]
   34448:	and	r3, r3, #31
   3444c:	sub	r3, r3, #21
   34450:	cmp	r3, #1
   34454:	bls	34560 <luaL_where@@Base+0x1445c>
   34458:	mov	r8, #0
   3445c:	ldr	r6, [r5, #8]
   34460:	b	340b0 <luaL_where@@Base+0x13fac>
   34464:	mov	r0, r5
   34468:	bl	251d4 <luaL_where@@Base+0x50d0>
   3446c:	b	33fd8 <luaL_where@@Base+0x13ed4>
   34470:	ldrh	r2, [r4]
   34474:	ldr	r1, [sp, #20]
   34478:	lsl	r2, r2, #1
   3447c:	ldrh	r2, [r1, r2]
   34480:	cmp	r2, #0
   34484:	beq	344cc <luaL_where@@Base+0x143c8>
   34488:	ldrh	r1, [r7, #2]
   3448c:	strh	r2, [r7, #2]
   34490:	ldr	r6, [r5, #8]
   34494:	ldr	r2, [r5, #236]	; 0xec
   34498:	str	r1, [sp, #24]
   3449c:	cmp	r6, r2
   344a0:	bcs	351b0 <luaL_where@@Base+0x150ac>
   344a4:	lsl	r2, r6, #3
   344a8:	add	r7, r3, r2
   344ac:	add	r0, r6, #1
   344b0:	mov	r1, #25344	; 0x6300
   344b4:	str	r0, [r5, #8]
   344b8:	strh	r1, [r7, #4]
   344bc:	strh	r8, [r3, r2]
   344c0:	ldrh	r2, [sp, #24]
   344c4:	strh	r2, [r7, #2]
   344c8:	strh	r6, [r4, #6]
   344cc:	ldrh	r2, [r4, #2]
   344d0:	ldr	r1, [sp, #20]
   344d4:	lsl	r2, r2, #1
   344d8:	ldrh	r8, [r1, r2]
   344dc:	cmp	r8, #0
   344e0:	beq	3445c <luaL_where@@Base+0x14358>
   344e4:	ldrh	r2, [r7]
   344e8:	add	r2, r3, r2, lsl #3
   344ec:	ldrb	r1, [r2, #5]
   344f0:	cmp	r1, #99	; 0x63
   344f4:	bne	34cf4 <luaL_where@@Base+0x14bf0>
   344f8:	mov	r1, #0
   344fc:	ldrh	r2, [r2]
   34500:	add	r1, r1, #1
   34504:	add	r2, r3, r2, lsl #3
   34508:	ldrb	r0, [r2, #5]
   3450c:	cmp	r0, #99	; 0x63
   34510:	beq	344fc <luaL_where@@Base+0x143f8>
   34514:	tst	r1, #1
   34518:	beq	34cf4 <luaL_where@@Base+0x14bf0>
   3451c:	ldr	r7, [r5, #8]
   34520:	ldr	r2, [r5, #236]	; 0xec
   34524:	uxth	r6, r6
   34528:	cmp	r7, r2
   3452c:	bcs	35204 <luaL_where@@Base+0x15100>
   34530:	lsl	r1, r7, #3
   34534:	add	r2, r3, r1
   34538:	add	ip, r7, #1
   3453c:	mov	r0, #25344	; 0x6300
   34540:	str	ip, [r5, #8]
   34544:	strh	r0, [r2, #4]
   34548:	strh	r6, [r3, r1]
   3454c:	strh	r8, [r2, #2]
   34550:	strh	r7, [r4, #6]
   34554:	mov	r8, #0
   34558:	ldr	r6, [r5, #8]
   3455c:	b	340b0 <luaL_where@@Base+0x13fac>
   34560:	sub	r3, r2, #13
   34564:	cmp	r3, #1
   34568:	bls	34c88 <luaL_where@@Base+0x14b84>
   3456c:	mov	r8, r1
   34570:	ldrh	r1, [r7]
   34574:	mov	r2, #0
   34578:	mov	r3, #3072	; 0xc00
   3457c:	strh	r1, [r4, #6]
   34580:	str	r2, [r7]
   34584:	strh	r3, [r7, #4]
   34588:	ldr	r6, [r5, #8]
   3458c:	b	340b0 <luaL_where@@Base+0x13fac>
   34590:	ldrh	r3, [r4, #2]
   34594:	ldr	r2, [sp, #20]
   34598:	lsl	r3, r3, #1
   3459c:	ldrh	r1, [r2, r3]
   345a0:	cmp	r1, #0
   345a4:	beq	340a8 <luaL_where@@Base+0x13fa4>
   345a8:	ldr	r3, [r5, #236]	; 0xec
   345ac:	cmp	r3, r7
   345b0:	bls	35214 <luaL_where@@Base+0x15110>
   345b4:	ldr	ip, [sp, #24]
   345b8:	lsl	r2, r7, #3
   345bc:	add	r3, ip, r2
   345c0:	add	r7, r7, #1
   345c4:	mov	r0, #4096	; 0x1000
   345c8:	str	r7, [r5, #8]
   345cc:	strh	r0, [r3, #4]
   345d0:	strh	r8, [ip, r2]
   345d4:	strh	r1, [r3, #2]
   345d8:	b	34458 <luaL_where@@Base+0x14354>
   345dc:	ldr	r1, [sp, #28]
   345e0:	ldrb	r2, [r1, #6]
   345e4:	ldrh	r3, [r1]
   345e8:	strh	r6, [r1, #2]
   345ec:	cmp	r2, #0
   345f0:	ldr	r1, [r5, #32]
   345f4:	lsl	r3, r3, #2
   345f8:	beq	340d4 <luaL_where@@Base+0x13fd0>
   345fc:	sub	r0, r1, #4
   34600:	add	r0, r0, r3
   34604:	ldr	ip, [pc, #2144]	; 34e6c <luaL_where@@Base+0x14d68>
   34608:	sub	r3, r3, #4
   3460c:	add	r0, r0, r2, lsl #2
   34610:	add	r1, r1, r3
   34614:	ldr	r3, [r1, #4]!
   34618:	and	r2, r3, ip
   3461c:	uxth	r3, r3
   34620:	cmp	r0, r1
   34624:	add	r3, fp, r3, lsl #3
   34628:	ldrh	r3, [r3, #6]
   3462c:	orr	r3, r3, r2
   34630:	str	r3, [r1]
   34634:	bne	34614 <luaL_where@@Base+0x14510>
   34638:	ldr	r6, [r5, #8]
   3463c:	b	340d4 <luaL_where@@Base+0x13fd0>
   34640:	ldr	r3, [r5, #8]
   34644:	sub	r3, r3, #1
   34648:	str	r3, [r5, #8]
   3464c:	ldrh	r3, [r7]
   34650:	strh	r3, [r4, #6]
   34654:	ldrh	r8, [r7, #2]
   34658:	ldr	r6, [r5, #8]
   3465c:	b	340b0 <luaL_where@@Base+0x13fac>
   34660:	ldrh	r3, [r7]
   34664:	ldrh	r2, [r7, #2]
   34668:	ldr	r6, [r5, #8]
   3466c:	tst	r3, #32768	; 0x8000
   34670:	bne	34e54 <luaL_where@@Base+0x14d50>
   34674:	tst	r2, #32768	; 0x8000
   34678:	bne	34684 <luaL_where@@Base+0x14580>
   3467c:	sub	r6, r6, #1
   34680:	str	r6, [r5, #8]
   34684:	ldrh	r3, [r4, #2]
   34688:	ldr	r2, [sp, #20]
   3468c:	lsl	r3, r3, #1
   34690:	ldrh	r7, [r2, r3]
   34694:	cmp	r7, #32768	; 0x8000
   34698:	cmpcc	r1, #32768	; 0x8000
   3469c:	movcs	r8, #1
   346a0:	movcc	r8, #0
   346a4:	cmp	r1, r7
   346a8:	moveq	r8, #0
   346ac:	andne	r8, r8, #1
   346b0:	cmp	r8, #0
   346b4:	beq	340b0 <luaL_where@@Base+0x13fac>
   346b8:	ldr	r3, [r5, #236]	; 0xec
   346bc:	cmp	r3, r6
   346c0:	bls	354f0 <luaL_where@@Base+0x153ec>
   346c4:	ldr	ip, [sp, #24]
   346c8:	lsl	r2, r6, #3
   346cc:	add	r3, ip, r2
   346d0:	ldr	r0, [pc, #1944]	; 34e70 <luaL_where@@Base+0x14d6c>
   346d4:	add	r6, r6, #1
   346d8:	str	r6, [r5, #8]
   346dc:	mov	r8, #0
   346e0:	strh	r0, [r3, #4]
   346e4:	strh	r1, [ip, r2]
   346e8:	strh	r7, [r3, #2]
   346ec:	ldr	r6, [r5, #8]
   346f0:	b	340b0 <luaL_where@@Base+0x13fac>
   346f4:	ldr	r8, [r5, #8]
   346f8:	ldr	r3, [r5, #236]	; 0xec
   346fc:	cmp	r8, r3
   34700:	bcs	3533c <luaL_where@@Base+0x15238>
   34704:	ldr	lr, [sp, #24]
   34708:	lsl	r2, r8, #3
   3470c:	add	r0, r8, #1
   34710:	add	r3, lr, r2
   34714:	ldr	ip, [pc, #1880]	; 34e74 <luaL_where@@Base+0x14d70>
   34718:	str	r0, [r5, #8]
   3471c:	mov	r0, #0
   34720:	strh	ip, [r3, #4]
   34724:	uxth	r8, r8
   34728:	strh	r1, [lr, r2]
   3472c:	strh	r0, [r3, #2]
   34730:	ldr	r6, [r5, #8]
   34734:	b	340b0 <luaL_where@@Base+0x13fac>
   34738:	ldr	r6, [r5, #8]
   3473c:	ldr	r3, [r5, #236]	; 0xec
   34740:	cmp	r6, r3
   34744:	bcs	352d0 <luaL_where@@Base+0x151cc>
   34748:	ldr	lr, [sp, #24]
   3474c:	lsl	r2, r6, #3
   34750:	add	r0, r6, #1
   34754:	add	r3, lr, r2
   34758:	ldr	ip, [pc, #1816]	; 34e78 <luaL_where@@Base+0x14d74>
   3475c:	str	r0, [r5, #8]
   34760:	mov	r0, #0
   34764:	strh	ip, [r3, #4]
   34768:	strh	r1, [lr, r2]
   3476c:	strh	r0, [r3, #2]
   34770:	strh	r6, [r4, #6]
   34774:	ldr	r6, [r5, #8]
   34778:	b	340b0 <luaL_where@@Base+0x13fac>
   3477c:	ldrb	r1, [r4, #4]
   34780:	mov	r3, r4
   34784:	mov	r2, fp
   34788:	and	r1, r1, #31
   3478c:	cmp	r1, #21
   34790:	movne	r1, #86	; 0x56
   34794:	moveq	r1, #85	; 0x55
   34798:	str	r1, [sp]
   3479c:	ldr	r1, [sp, #20]
   347a0:	mov	r0, r5
   347a4:	bl	26760 <luaL_where@@Base+0x665c>
   347a8:	ldr	r6, [r5, #8]
   347ac:	uxth	r8, r0
   347b0:	b	340b0 <luaL_where@@Base+0x13fac>
   347b4:	ldrb	r1, [r4, #4]
   347b8:	mov	r3, r4
   347bc:	mov	r2, fp
   347c0:	and	r1, r1, #31
   347c4:	cmp	r1, #21
   347c8:	movne	r1, #88	; 0x58
   347cc:	moveq	r1, #87	; 0x57
   347d0:	b	34798 <luaL_where@@Base+0x14694>
   347d4:	ldrb	r1, [r4, #4]
   347d8:	mov	r3, r4
   347dc:	mov	r2, fp
   347e0:	and	r1, r1, #31
   347e4:	cmp	r1, #21
   347e8:	movne	r1, #90	; 0x5a
   347ec:	moveq	r1, #89	; 0x59
   347f0:	b	34798 <luaL_where@@Base+0x14694>
   347f4:	ldrh	r2, [r4, #2]
   347f8:	ldr	r3, [sp, #20]
   347fc:	add	r2, r3, r2, lsl #1
   34800:	ldr	r8, [r5, #8]
   34804:	ldr	r3, [r5, #236]	; 0xec
   34808:	ldrh	r6, [r2]
   3480c:	cmp	r8, r3
   34810:	bcs	351e8 <luaL_where@@Base+0x150e4>
   34814:	ldr	ip, [sp, #24]
   34818:	lsl	r2, r8, #3
   3481c:	add	r0, r8, #1
   34820:	str	r0, [r5, #8]
   34824:	add	r3, ip, r2
   34828:	ldr	r0, [pc, #1592]	; 34e68 <luaL_where@@Base+0x14d64>
   3482c:	uxth	r8, r8
   34830:	strh	r0, [r3, #4]
   34834:	strh	r1, [ip, r2]
   34838:	strh	r6, [r3, #2]
   3483c:	ldr	r6, [r5, #8]
   34840:	b	340b0 <luaL_where@@Base+0x13fac>
   34844:	ldr	r8, [r5, #8]
   34848:	ldr	r3, [r5, #236]	; 0xec
   3484c:	ldrh	r6, [r7]
   34850:	cmp	r8, r3
   34854:	bcs	35328 <luaL_where@@Base+0x15224>
   34858:	ldr	ip, [sp, #24]
   3485c:	lsl	r2, r8, #3
   34860:	add	r1, r8, #1
   34864:	add	r3, ip, r2
   34868:	ldr	r0, [pc, #1548]	; 34e7c <luaL_where@@Base+0x14d78>
   3486c:	str	r1, [r5, #8]
   34870:	mov	r1, #18
   34874:	strh	r0, [r3, #4]
   34878:	uxth	r8, r8
   3487c:	strh	r6, [ip, r2]
   34880:	strh	r1, [r3, #2]
   34884:	ldr	r6, [r5, #8]
   34888:	b	340b0 <luaL_where@@Base+0x13fac>
   3488c:	add	lr, fp, lr, lsl #3
   34890:	ldrh	r6, [lr, #6]
   34894:	add	r2, r3, r6, lsl #3
   34898:	ldrb	r1, [r2, #5]
   3489c:	cmp	r1, #25
   348a0:	beq	351d0 <luaL_where@@Base+0x150cc>
   348a4:	cmp	r1, #41	; 0x29
   348a8:	bne	34bf8 <luaL_where@@Base+0x14af4>
   348ac:	ldrh	r1, [r2, #2]
   348b0:	tst	r1, #32768	; 0x8000
   348b4:	bne	34bf8 <luaL_where@@Base+0x14af4>
   348b8:	ldrb	r0, [lr, #4]
   348bc:	tst	r0, #64	; 0x40
   348c0:	bne	34bf8 <luaL_where@@Base+0x14af4>
   348c4:	ldr	r1, [r3, r1, lsl #3]
   348c8:	ldrh	r6, [r2]
   348cc:	adds	r1, r1, #4
   348d0:	bne	34bfc <luaL_where@@Base+0x14af8>
   348d4:	b	34c40 <luaL_where@@Base+0x14b3c>
   348d8:	ldrh	r3, [r4, #2]
   348dc:	ldr	r2, [r5, #236]	; 0xec
   348e0:	ldr	r6, [r5, #8]
   348e4:	ldrh	r8, [r7]
   348e8:	cmp	r6, r2
   348ec:	ldr	r2, [sp, #20]
   348f0:	lsl	r3, r3, #1
   348f4:	ldrh	r7, [r2, r3]
   348f8:	bcs	35314 <luaL_where@@Base+0x15210>
   348fc:	ldr	r1, [sp, #24]
   34900:	lsl	r2, r6, #3
   34904:	add	r3, r1, r2
   34908:	ldr	r0, [pc, #1368]	; 34e68 <luaL_where@@Base+0x14d64>
   3490c:	add	r6, r6, #1
   34910:	str	r6, [r5, #8]
   34914:	strh	r0, [r3, #4]
   34918:	strh	r8, [r1, r2]
   3491c:	strh	r7, [r3, #2]
   34920:	mov	r8, #0
   34924:	ldr	r6, [r5, #8]
   34928:	b	340b0 <luaL_where@@Base+0x13fac>
   3492c:	ldrh	r2, [r4, #2]
   34930:	and	r3, r2, #31
   34934:	sub	r0, r3, #13
   34938:	cmp	r0, #1
   3493c:	bls	34e10 <luaL_where@@Base+0x14d0c>
   34940:	sub	r3, r3, #21
   34944:	cmp	r3, #1
   34948:	bls	3456c <luaL_where@@Base+0x14468>
   3494c:	ands	r1, r2, #2048	; 0x800
   34950:	beq	351c0 <luaL_where@@Base+0x150bc>
   34954:	mov	r1, #31
   34958:	mov	r0, r5
   3495c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   34960:	ldr	r1, [r5, #16]
   34964:	ldr	ip, [sp, #32]
   34968:	mov	r3, #38	; 0x26
   3496c:	ldrh	r2, [r1, ip]
   34970:	add	r1, r1, ip
   34974:	strh	r2, [r4, #6]
   34978:	strb	r3, [r1, #5]
   3497c:	strh	r0, [r1, #2]
   34980:	ldr	r6, [r5, #8]
   34984:	b	340b0 <luaL_where@@Base+0x13fac>
   34988:	ldrh	r2, [r7, #2]
   3498c:	cmp	r2, #32768	; 0x8000
   34990:	bcs	349a4 <luaL_where@@Base+0x148a0>
   34994:	ldr	r1, [r3, r2, lsl #3]
   34998:	add	r0, r1, #1
   3499c:	cmp	r0, #1
   349a0:	bls	34dcc <luaL_where@@Base+0x14cc8>
   349a4:	ldrh	r2, [r4, #2]
   349a8:	ldr	r1, [sp, #20]
   349ac:	ldrh	r8, [ip]
   349b0:	lsl	r2, r2, #1
   349b4:	ldrh	r7, [r1, r2]
   349b8:	cmp	r7, #32768	; 0x8000
   349bc:	bcs	349d0 <luaL_where@@Base+0x148cc>
   349c0:	ldr	r3, [r3, r7, lsl #3]
   349c4:	add	r2, r3, #1
   349c8:	cmp	r2, #1
   349cc:	bls	34d68 <luaL_where@@Base+0x14c64>
   349d0:	ldr	r3, [sp, #36]	; 0x24
   349d4:	ldr	r6, [r5, #8]
   349d8:	ldr	r2, [r5, #236]	; 0xec
   349dc:	lsl	r3, r3, #8
   349e0:	orr	r3, r3, #19
   349e4:	cmp	r6, r2
   349e8:	str	r3, [sp, #32]
   349ec:	bcs	3538c <luaL_where@@Base+0x15288>
   349f0:	add	r1, r6, #1
   349f4:	ldr	r0, [sp, #24]
   349f8:	str	r1, [r5, #8]
   349fc:	lsl	r2, r6, #3
   34a00:	ldrh	r1, [sp, #32]
   34a04:	add	r3, r0, r2
   34a08:	strh	r1, [r3, #4]
   34a0c:	strh	r8, [r0, r2]
   34a10:	strh	r7, [r3, #2]
   34a14:	uxth	r8, r6
   34a18:	ldr	r6, [r5, #8]
   34a1c:	b	340b0 <luaL_where@@Base+0x13fac>
   34a20:	ldr	r0, [sp, #20]
   34a24:	ldrh	r1, [r7, #2]
   34a28:	ldrh	r2, [r0, r2]
   34a2c:	cmp	r1, #32768	; 0x8000
   34a30:	str	r1, [sp, #44]	; 0x2c
   34a34:	str	r2, [sp, #32]
   34a38:	bcs	34ea4 <luaL_where@@Base+0x14da0>
   34a3c:	ldr	r6, [r3, r1, lsl #3]
   34a40:	ldr	r3, [sp, #36]	; 0x24
   34a44:	ldrh	r8, [r7]
   34a48:	sub	r3, r3, #39	; 0x27
   34a4c:	cmp	r3, #1
   34a50:	and	r6, r6, #63	; 0x3f
   34a54:	str	r8, [sp, #40]	; 0x28
   34a58:	bls	34fd4 <luaL_where@@Base+0x14ed0>
   34a5c:	cmp	r6, #0
   34a60:	beq	34d48 <luaL_where@@Base+0x14c44>
   34a64:	cmp	r6, #31
   34a68:	bgt	35244 <luaL_where@@Base+0x15140>
   34a6c:	ldr	r3, [sp, #36]	; 0x24
   34a70:	rsb	r6, r6, #0
   34a74:	cmp	r3, #36	; 0x24
   34a78:	and	r6, r6, #31
   34a7c:	bne	353c0 <luaL_where@@Base+0x152bc>
   34a80:	ldr	r3, [r5, #8]
   34a84:	mov	r2, r3
   34a88:	str	r3, [sp, #36]	; 0x24
   34a8c:	ldr	r3, [r5, #236]	; 0xec
   34a90:	cmp	r2, r3
   34a94:	bcs	355ec <luaL_where@@Base+0x154e8>
   34a98:	ldr	r1, [sp, #36]	; 0x24
   34a9c:	ldr	lr, [sp, #24]
   34aa0:	add	ip, r1, #1
   34aa4:	str	ip, [r5, #8]
   34aa8:	lsl	r2, r1, #3
   34aac:	ldrh	ip, [sp, #32]
   34ab0:	add	r3, lr, r2
   34ab4:	ldr	r0, [pc, #992]	; 34e9c <luaL_where@@Base+0x14d98>
   34ab8:	mov	r1, r6
   34abc:	strh	r0, [r3, #4]
   34ac0:	strh	ip, [lr, r2]
   34ac4:	ldrh	r2, [sp, #44]	; 0x2c
   34ac8:	mov	r0, r5
   34acc:	strh	r2, [r3, #2]
   34ad0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   34ad4:	ldr	r7, [r5, #8]
   34ad8:	ldr	r3, [r5, #236]	; 0xec
   34adc:	cmp	r7, r3
   34ae0:	uxth	r6, r0
   34ae4:	bcs	355e0 <luaL_where@@Base+0x154dc>
   34ae8:	ldr	ip, [r5, #16]
   34aec:	lsl	r2, r7, #3
   34af0:	add	r3, ip, r2
   34af4:	ldr	r1, [pc, #920]	; 34e94 <luaL_where@@Base+0x14d90>
   34af8:	add	r0, r7, #1
   34afc:	str	r0, [r5, #8]
   34b00:	strh	r1, [r3, #4]
   34b04:	strh	r8, [ip, r2]
   34b08:	strh	r6, [r3, #2]
   34b0c:	ldr	r8, [r5, #8]
   34b10:	ldr	r3, [r5, #236]	; 0xec
   34b14:	ldrh	r6, [sp, #36]	; 0x24
   34b18:	cmp	r8, r3
   34b1c:	uxth	r7, r7
   34b20:	bcs	35588 <luaL_where@@Base+0x15484>
   34b24:	lsl	r2, r8, #3
   34b28:	add	r3, ip, r2
   34b2c:	ldr	r1, [pc, #876]	; 34ea0 <luaL_where@@Base+0x14d9c>
   34b30:	add	r0, r8, #1
   34b34:	str	r0, [r5, #8]
   34b38:	uxth	r8, r8
   34b3c:	strh	r1, [r3, #4]
   34b40:	strh	r6, [ip, r2]
   34b44:	strh	r7, [r3, #2]
   34b48:	ldr	r6, [r5, #8]
   34b4c:	b	340b0 <luaL_where@@Base+0x13fac>
   34b50:	ldrh	r0, [r4, #2]
   34b54:	ldrh	ip, [r7, #2]
   34b58:	ldr	lr, [sp, #20]
   34b5c:	lsl	r0, r0, #1
   34b60:	tst	ip, #32768	; 0x8000
   34b64:	add	r2, lr, r0
   34b68:	bne	34800 <luaL_where@@Base+0x146fc>
   34b6c:	ldr	r3, [r3, ip, lsl #3]
   34b70:	cmp	r3, #0
   34b74:	bne	34800 <luaL_where@@Base+0x146fc>
   34b78:	ldrh	r3, [r7]
   34b7c:	strh	r3, [r4, #6]
   34b80:	strh	r1, [r7]
   34b84:	ldrh	r3, [lr, r0]
   34b88:	strh	r3, [r7, #2]
   34b8c:	ldr	r6, [r5, #8]
   34b90:	b	340b0 <luaL_where@@Base+0x13fac>
   34b94:	mov	r3, #97	; 0x61
   34b98:	str	r3, [sp]
   34b9c:	mov	r2, fp
   34ba0:	mov	r3, r4
   34ba4:	b	3479c <luaL_where@@Base+0x14698>
   34ba8:	ldrh	r3, [r4, #2]
   34bac:	ldr	r2, [r5, #236]	; 0xec
   34bb0:	ldr	r7, [r5, #8]
   34bb4:	cmp	r7, r2
   34bb8:	ldr	r2, [sp, #20]
   34bbc:	lsl	r3, r3, #1
   34bc0:	ldrh	r6, [r2, r3]
   34bc4:	bcs	352f8 <luaL_where@@Base+0x151f4>
   34bc8:	ldr	r0, [sp, #24]
   34bcc:	lsl	r2, r7, #3
   34bd0:	add	r3, r0, r2
   34bd4:	ldr	ip, [pc, #676]	; 34e80 <luaL_where@@Base+0x14d7c>
   34bd8:	add	r7, r7, #1
   34bdc:	str	r7, [r5, #8]
   34be0:	mov	r8, #0
   34be4:	strh	ip, [r3, #4]
   34be8:	strh	r1, [r0, r2]
   34bec:	strh	r6, [r3, #2]
   34bf0:	ldr	r6, [r5, #8]
   34bf4:	b	340b0 <luaL_where@@Base+0x13fac>
   34bf8:	mov	r1, #4
   34bfc:	mov	r0, r5
   34c00:	bl	26ccc <luaL_where@@Base+0x6bc8>
   34c04:	uxth	r8, r6
   34c08:	ldr	r3, [r5, #236]	; 0xec
   34c0c:	ldr	r6, [r5, #8]
   34c10:	cmp	r6, r3
   34c14:	uxth	r7, r0
   34c18:	bcs	353a0 <luaL_where@@Base+0x1529c>
   34c1c:	ldr	r1, [r5, #16]
   34c20:	lsl	r2, r6, #3
   34c24:	add	r3, r1, r2
   34c28:	ldr	r0, [pc, #596]	; 34e84 <luaL_where@@Base+0x14d80>
   34c2c:	add	ip, r6, #1
   34c30:	str	ip, [r5, #8]
   34c34:	strh	r0, [r3, #4]
   34c38:	strh	r8, [r1, r2]
   34c3c:	strh	r7, [r3, #2]
   34c40:	ldr	r8, [r5, #8]
   34c44:	ldr	r3, [r5, #236]	; 0xec
   34c48:	uxth	r6, r6
   34c4c:	cmp	r8, r3
   34c50:	ldrh	r7, [r4, #2]
   34c54:	bcs	352ec <luaL_where@@Base+0x151e8>
   34c58:	ldr	r1, [r5, #16]
   34c5c:	lsl	r2, r8, #3
   34c60:	add	r3, r1, r2
   34c64:	ldr	r0, [pc, #540]	; 34e88 <luaL_where@@Base+0x14d84>
   34c68:	add	ip, r8, #1
   34c6c:	str	ip, [r5, #8]
   34c70:	uxth	r8, r8
   34c74:	strh	r0, [r3, #4]
   34c78:	strh	r6, [r1, r2]
   34c7c:	strh	r7, [r3, #2]
   34c80:	ldr	r6, [r5, #8]
   34c84:	b	340b0 <luaL_where@@Base+0x13fac>
   34c88:	ldrh	r3, [r4]
   34c8c:	orr	r2, r2, #4096	; 0x1000
   34c90:	ldr	r6, [r5, #8]
   34c94:	ldr	r1, [r5, #236]	; 0xec
   34c98:	str	r2, [sp, #32]
   34c9c:	ldr	r2, [sp, #20]
   34ca0:	lsl	r3, r3, #1
   34ca4:	cmp	r6, r1
   34ca8:	ldrh	r7, [r2, r3]
   34cac:	bcs	35230 <luaL_where@@Base+0x1512c>
   34cb0:	add	r1, r6, #1
   34cb4:	ldr	r0, [sp, #24]
   34cb8:	str	r1, [r5, #8]
   34cbc:	lsl	r2, r6, #3
   34cc0:	ldrh	r1, [sp, #32]
   34cc4:	add	r3, r0, r2
   34cc8:	strh	r1, [r3, #4]
   34ccc:	strh	r7, [r0, r2]
   34cd0:	strh	r8, [r3, #2]
   34cd4:	strh	r6, [r4, #6]
   34cd8:	mov	r8, #0
   34cdc:	ldr	r6, [r5, #8]
   34ce0:	b	340b0 <luaL_where@@Base+0x13fac>
   34ce4:	add	r0, r0, #80	; 0x50
   34ce8:	bl	333cc <luaL_where@@Base+0x132c8>
   34cec:	mov	r3, r0
   34cf0:	b	33eb8 <luaL_where@@Base+0x13db4>
   34cf4:	uxth	r1, r6
   34cf8:	mvn	r2, #32768	; 0x8000
   34cfc:	str	r1, [sp, #32]
   34d00:	ldrh	r1, [r7, #2]
   34d04:	strh	r2, [r7, #2]
   34d08:	ldr	r6, [r5, #8]
   34d0c:	ldr	r2, [r5, #236]	; 0xec
   34d10:	str	r1, [sp, #24]
   34d14:	cmp	r6, r2
   34d18:	bcs	3537c <luaL_where@@Base+0x15278>
   34d1c:	lsl	r1, r6, #3
   34d20:	add	r2, r3, r1
   34d24:	mov	r0, #25344	; 0x6300
   34d28:	add	ip, r6, #1
   34d2c:	str	ip, [r5, #8]
   34d30:	strh	r0, [r2, #4]
   34d34:	ldrh	r0, [sp, #32]
   34d38:	strh	r0, [r3, r1]
   34d3c:	ldrh	r1, [sp, #24]
   34d40:	strh	r1, [r2, #2]
   34d44:	b	3451c <luaL_where@@Base+0x14418>
   34d48:	ldr	r3, [r5, #8]
   34d4c:	sub	r3, r3, #1
   34d50:	str	r3, [r5, #8]
   34d54:	ldrh	r3, [sp, #40]	; 0x28
   34d58:	uxth	r8, r2
   34d5c:	strh	r3, [r4, #6]
   34d60:	ldr	r6, [r5, #8]
   34d64:	b	340b0 <luaL_where@@Base+0x13fac>
   34d68:	ldr	r2, [sp, #36]	; 0x24
   34d6c:	cmp	r2, #33	; 0x21
   34d70:	beq	353ac <luaL_where@@Base+0x152a8>
   34d74:	cmp	r3, #0
   34d78:	ldr	r6, [r5, #8]
   34d7c:	beq	340b0 <luaL_where@@Base+0x13fac>
   34d80:	ldr	r3, [sp, #36]	; 0x24
   34d84:	cmp	r3, #35	; 0x23
   34d88:	bne	353b8 <luaL_where@@Base+0x152b4>
   34d8c:	ldr	r3, [r5, #236]	; 0xec
   34d90:	cmp	r3, r6
   34d94:	bls	35620 <luaL_where@@Base+0x1551c>
   34d98:	ldr	ip, [sp, #24]
   34d9c:	lsl	r3, r6, #3
   34da0:	add	r2, r6, #1
   34da4:	add	r0, ip, r3
   34da8:	ldr	r1, [pc, #196]	; 34e74 <luaL_where@@Base+0x14d70>
   34dac:	str	r2, [r5, #8]
   34db0:	mov	r2, #0
   34db4:	strh	r1, [r0, #4]
   34db8:	strh	r8, [ip, r3]
   34dbc:	uxth	r8, r6
   34dc0:	strh	r2, [r0, #2]
   34dc4:	ldr	r6, [r5, #8]
   34dc8:	b	340b0 <luaL_where@@Base+0x13fac>
   34dcc:	ldr	r0, [sp, #36]	; 0x24
   34dd0:	cmp	r0, #33	; 0x21
   34dd4:	beq	35498 <luaL_where@@Base+0x15394>
   34dd8:	cmp	r1, #0
   34ddc:	beq	35358 <luaL_where@@Base+0x15254>
   34de0:	ldr	r1, [sp, #36]	; 0x24
   34de4:	cmp	r1, #35	; 0x23
   34de8:	bne	354a0 <luaL_where@@Base+0x1539c>
   34dec:	mov	r1, #31
   34df0:	mov	r2, #0
   34df4:	strb	r1, [r7, #5]
   34df8:	strh	r2, [r7, #2]
   34dfc:	b	349a4 <luaL_where@@Base+0x148a0>
   34e00:	mov	r0, r5
   34e04:	bl	251d4 <luaL_where@@Base+0x50d0>
   34e08:	ldr	r3, [r5, #16]
   34e0c:	b	34338 <luaL_where@@Base+0x14234>
   34e10:	ldr	r6, [r5, #8]
   34e14:	ldr	r3, [r5, #236]	; 0xec
   34e18:	ldrh	r7, [r7]
   34e1c:	cmp	r6, r3
   34e20:	bcs	3550c <luaL_where@@Base+0x15408>
   34e24:	ldr	r0, [sp, #24]
   34e28:	lsl	r2, r6, #3
   34e2c:	add	r1, r6, #1
   34e30:	str	r1, [r5, #8]
   34e34:	add	r3, r0, r2
   34e38:	ldr	r1, [pc, #40]	; 34e68 <luaL_where@@Base+0x14d64>
   34e3c:	strh	r1, [r3, #4]
   34e40:	strh	r7, [r0, r2]
   34e44:	strh	r8, [r3, #2]
   34e48:	uxth	r8, r6
   34e4c:	ldr	r6, [r5, #8]
   34e50:	b	340b0 <luaL_where@@Base+0x13fac>
   34e54:	cmp	r3, r2
   34e58:	beq	3467c <luaL_where@@Base+0x14578>
   34e5c:	b	34684 <luaL_where@@Base+0x14580>
   34e60:	andeq	r8, r0, r1
   34e64:	rsbeq	r4, r0, r0
   34e68:	andeq	r1, r0, r3, lsl r0
   34e6c:			; <UNDEFINED> instruction: 0xffff0000
   34e70:	andeq	r1, r0, r3, lsl r3
   34e74:	andeq	r1, r0, r3, lsl pc
   34e78:	andeq	r2, r0, r3, lsl r0
   34e7c:	andeq	r4, r0, r3, lsl r5
   34e80:	muleq	r0, r3, r0
   34e84:	andeq	r2, r0, r5, lsl #18
   34e88:	andeq	r4, r0, r3, lsl r6
   34e8c:	andeq	r5, r0, r3, lsl lr
   34e90:	andeq	r1, r0, r7, lsl r0
   34e94:	andeq	r2, r0, r3, lsl r5
   34e98:	andeq	r2, r0, r3, lsl r6
   34e9c:	andeq	r2, r0, r3, lsl r4
   34ea0:	andeq	r2, r0, r3, lsl r2
   34ea4:	ldr	r8, [r5, #8]
   34ea8:	ldr	r3, [r5, #236]	; 0xec
   34eac:	sub	r6, r8, #1
   34eb0:	cmp	r6, r3
   34eb4:	ldr	r3, [sp, #36]	; 0x24
   34eb8:	add	lr, fp, lr, lsl #3
   34ebc:	add	r3, r3, #62	; 0x3e
   34ec0:	str	r3, [sp, #36]	; 0x24
   34ec4:	ldrh	r3, [r4, #2]
   34ec8:	str	r6, [r5, #8]
   34ecc:	ldrh	r7, [lr, #6]
   34ed0:	str	r3, [sp, #40]	; 0x28
   34ed4:	bcs	3555c <luaL_where@@Base+0x15458>
   34ed8:	ldr	r0, [sp, #24]
   34edc:	lsl	r2, r6, #3
   34ee0:	add	r3, r0, r2
   34ee4:	mov	r1, #25344	; 0x6300
   34ee8:	str	r8, [r5, #8]
   34eec:	strh	r1, [r3, #4]
   34ef0:	strh	r7, [r0, r2]
   34ef4:	ldrh	r2, [sp, #32]
   34ef8:	uxth	r6, r6
   34efc:	strh	r2, [r3, #2]
   34f00:	ldr	r3, [sp, #40]	; 0x28
   34f04:	ldr	r7, [r5, #8]
   34f08:	ldr	r2, [r5, #236]	; 0xec
   34f0c:	add	r3, fp, r3, lsl #3
   34f10:	cmp	r7, r2
   34f14:	ldrh	r8, [r3, #6]
   34f18:	bcs	35548 <luaL_where@@Base+0x15444>
   34f1c:	ldr	ip, [sp, #24]
   34f20:	lsl	r2, r7, #3
   34f24:	add	r3, ip, r2
   34f28:	add	r0, r7, #1
   34f2c:	mov	r1, #25344	; 0x6300
   34f30:	str	r0, [r5, #8]
   34f34:	strh	r1, [r3, #4]
   34f38:	strh	r6, [ip, r2]
   34f3c:	strh	r8, [r3, #2]
   34f40:	ldr	r6, [r5, #8]
   34f44:	ldr	r3, [r5, #236]	; 0xec
   34f48:	ldrh	r8, [sp, #36]	; 0x24
   34f4c:	cmp	r6, r3
   34f50:	uxth	r7, r7
   34f54:	bcs	35534 <luaL_where@@Base+0x15430>
   34f58:	ldr	ip, [sp, #24]
   34f5c:	lsl	r2, r6, #3
   34f60:	add	r3, ip, r2
   34f64:	ldr	r1, [pc, #-224]	; 34e8c <luaL_where@@Base+0x14d88>
   34f68:	add	r0, r6, #1
   34f6c:	uxth	r6, r6
   34f70:	str	r0, [r5, #8]
   34f74:	strh	r1, [r3, #4]
   34f78:	strh	r7, [ip, r2]
   34f7c:	strh	r8, [r3, #2]
   34f80:	strh	r6, [r4, #6]
   34f84:	ldr	r8, [r5, #8]
   34f88:	ldr	r3, [r5, #236]	; 0xec
   34f8c:	cmp	r8, r3
   34f90:	bcs	35520 <luaL_where@@Base+0x1541c>
   34f94:	ldr	ip, [sp, #24]
   34f98:	lsl	r2, r8, #3
   34f9c:	add	r3, ip, r2
   34fa0:	ldr	r1, [pc, #-280]	; 34e90 <luaL_where@@Base+0x14d8c>
   34fa4:	add	r0, r8, #1
   34fa8:	str	r0, [r5, #8]
   34fac:	uxth	r8, r8
   34fb0:	strh	r1, [r3, #4]
   34fb4:	strh	r6, [ip, r2]
   34fb8:	strh	r6, [r3, #2]
   34fbc:	ldr	r6, [r5, #8]
   34fc0:	b	340b0 <luaL_where@@Base+0x13fac>
   34fc4:	mov	r0, r5
   34fc8:	bl	251d4 <luaL_where@@Base+0x50d0>
   34fcc:	ldr	r3, [r5, #16]
   34fd0:	b	34388 <luaL_where@@Base+0x14284>
   34fd4:	ldr	r3, [sp, #36]	; 0x24
   34fd8:	cmp	r3, #40	; 0x28
   34fdc:	rsbeq	r6, r6, #0
   34fe0:	andeq	r6, r6, #63	; 0x3f
   34fe4:	cmp	r6, #31
   34fe8:	movgt	r2, r8
   34fec:	ldrgt	r8, [sp, #32]
   34ff0:	subgt	r6, r6, #32
   34ff4:	ldr	r3, [r5, #8]
   34ff8:	uxth	r1, r8
   34ffc:	cmp	r6, #0
   35000:	str	r1, [sp, #40]	; 0x28
   35004:	sub	r3, r3, #1
   35008:	beq	34d50 <luaL_where@@Base+0x14c4c>
   3500c:	str	r3, [r5, #8]
   35010:	mov	r1, r6
   35014:	mov	r0, r5
   35018:	str	r2, [sp, #24]
   3501c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   35020:	rsb	r1, r6, #0
   35024:	and	r1, r1, #31
   35028:	mov	r7, r0
   3502c:	mov	r0, r5
   35030:	bl	26ccc <luaL_where@@Base+0x6bc8>
   35034:	ldr	r8, [r5, #8]
   35038:	ldr	r3, [r5, #236]	; 0xec
   3503c:	uxth	r7, r7
   35040:	cmp	r8, r3
   35044:	ldr	r2, [sp, #24]
   35048:	str	r0, [sp, #36]	; 0x24
   3504c:	bcs	355d0 <luaL_where@@Base+0x154cc>
   35050:	ldr	r3, [r5, #16]
   35054:	lsl	r0, r8, #3
   35058:	add	r1, r3, r0
   3505c:	ldr	ip, [pc, #-456]	; 34e9c <luaL_where@@Base+0x14d98>
   35060:	add	lr, r8, #1
   35064:	str	lr, [r5, #8]
   35068:	strh	ip, [r1, #4]
   3506c:	ldrh	ip, [sp, #40]	; 0x28
   35070:	uxth	r2, r2
   35074:	str	r2, [sp, #24]
   35078:	strh	ip, [r3, r0]
   3507c:	strh	r7, [r1, #2]
   35080:	ldr	r0, [r5, #8]
   35084:	ldr	r1, [r5, #236]	; 0xec
   35088:	str	r0, [sp, #32]
   3508c:	cmp	r0, r1
   35090:	bcs	355c0 <luaL_where@@Base+0x154bc>
   35094:	ldr	r2, [sp, #32]
   35098:	ldr	ip, [pc, #-516]	; 34e9c <luaL_where@@Base+0x14d98>
   3509c:	add	lr, r2, #1
   350a0:	lsl	r0, r2, #3
   350a4:	ldrh	r2, [sp, #24]
   350a8:	add	r1, r3, r0
   350ac:	str	lr, [r5, #8]
   350b0:	strh	ip, [r1, #4]
   350b4:	strh	r2, [r3, r0]
   350b8:	strh	r7, [r1, #2]
   350bc:	ldr	r6, [r5, #8]
   350c0:	ldr	r1, [r5, #236]	; 0xec
   350c4:	ldrh	r7, [sp, #36]	; 0x24
   350c8:	cmp	r6, r1
   350cc:	bcs	355b0 <luaL_where@@Base+0x154ac>
   350d0:	lsl	r0, r6, #3
   350d4:	ldrh	r2, [sp, #40]	; 0x28
   350d8:	add	r1, r3, r0
   350dc:	ldr	ip, [pc, #-592]	; 34e94 <luaL_where@@Base+0x14d90>
   350e0:	add	lr, r6, #1
   350e4:	str	lr, [r5, #8]
   350e8:	strh	ip, [r1, #4]
   350ec:	strh	r2, [r3, r0]
   350f0:	strh	r7, [r1, #2]
   350f4:	ldr	r2, [r5, #8]
   350f8:	ldr	r1, [r5, #236]	; 0xec
   350fc:	cmp	r2, r1
   35100:	bcs	35598 <luaL_where@@Base+0x15494>
   35104:	lsl	r0, r2, #3
   35108:	add	r1, r3, r0
   3510c:	ldr	ip, [pc, #-640]	; 34e94 <luaL_where@@Base+0x14d90>
   35110:	add	lr, r2, #1
   35114:	str	lr, [r5, #8]
   35118:	strh	ip, [r1, #4]
   3511c:	ldrh	ip, [sp, #24]
   35120:	uxth	r2, r2
   35124:	uxth	r8, r8
   35128:	strh	ip, [r3, r0]
   3512c:	strh	r7, [r1, #2]
   35130:	ldr	r7, [r5, #8]
   35134:	ldr	r1, [r5, #236]	; 0xec
   35138:	str	r2, [sp, #24]
   3513c:	cmp	r7, r1
   35140:	bcs	35610 <luaL_where@@Base+0x1550c>
   35144:	lsl	r1, r7, #3
   35148:	add	r2, r3, r1
   3514c:	ldr	r0, [pc, #-692]	; 34ea0 <luaL_where@@Base+0x14d9c>
   35150:	add	ip, r7, #1
   35154:	str	ip, [r5, #8]
   35158:	strh	r0, [r2, #4]
   3515c:	strh	r8, [r3, r1]
   35160:	ldrh	r1, [sp, #24]
   35164:	uxth	r6, r6
   35168:	strh	r1, [r2, #2]
   3516c:	strh	r7, [r4, #6]
   35170:	ldr	r8, [r5, #8]
   35174:	ldr	r2, [r5, #236]	; 0xec
   35178:	ldrh	r7, [sp, #32]
   3517c:	cmp	r8, r2
   35180:	bcs	35600 <luaL_where@@Base+0x154fc>
   35184:	lsl	r1, r8, #3
   35188:	add	r2, r3, r1
   3518c:	ldr	r0, [pc, #-756]	; 34ea0 <luaL_where@@Base+0x14d9c>
   35190:	add	ip, r8, #1
   35194:	str	ip, [r5, #8]
   35198:	uxth	r8, r8
   3519c:	strh	r0, [r2, #4]
   351a0:	strh	r7, [r3, r1]
   351a4:	strh	r6, [r2, #2]
   351a8:	ldr	r6, [r5, #8]
   351ac:	b	340b0 <luaL_where@@Base+0x13fac>
   351b0:	mov	r0, r5
   351b4:	bl	251d4 <luaL_where@@Base+0x50d0>
   351b8:	ldr	r3, [r5, #16]
   351bc:	b	344a4 <luaL_where@@Base+0x143a0>
   351c0:	mov	r0, r5
   351c4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   351c8:	uxth	r8, r0
   351cc:	b	34570 <luaL_where@@Base+0x1446c>
   351d0:	ldr	r2, [r3, r6, lsl #3]
   351d4:	mov	r0, r5
   351d8:	add	r2, r2, #4
   351dc:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   351e0:	mov	r6, r0
   351e4:	b	34c40 <luaL_where@@Base+0x14b3c>
   351e8:	mov	r0, r5
   351ec:	str	r1, [sp, #32]
   351f0:	bl	251d4 <luaL_where@@Base+0x50d0>
   351f4:	ldr	r3, [r5, #16]
   351f8:	ldr	r1, [sp, #32]
   351fc:	str	r3, [sp, #24]
   35200:	b	34814 <luaL_where@@Base+0x14710>
   35204:	mov	r0, r5
   35208:	bl	251d4 <luaL_where@@Base+0x50d0>
   3520c:	ldr	r3, [r5, #16]
   35210:	b	34530 <luaL_where@@Base+0x1442c>
   35214:	mov	r0, r5
   35218:	str	r1, [sp, #32]
   3521c:	bl	251d4 <luaL_where@@Base+0x50d0>
   35220:	ldr	r3, [r5, #16]
   35224:	ldr	r1, [sp, #32]
   35228:	str	r3, [sp, #24]
   3522c:	b	345b4 <luaL_where@@Base+0x144b0>
   35230:	mov	r0, r5
   35234:	bl	251d4 <luaL_where@@Base+0x50d0>
   35238:	ldr	r3, [r5, #16]
   3523c:	str	r3, [sp, #24]
   35240:	b	34cb0 <luaL_where@@Base+0x14bac>
   35244:	ldr	r3, [sp, #36]	; 0x24
   35248:	cmp	r3, #36	; 0x24
   3524c:	beq	354c0 <luaL_where@@Base+0x153bc>
   35250:	cmp	r6, #32
   35254:	ldreq	r3, [r5, #8]
   35258:	ldrhne	r3, [sp, #32]
   3525c:	subeq	r3, r3, #1
   35260:	streq	r3, [r5, #8]
   35264:	ldrheq	r3, [sp, #32]
   35268:	strhne	r3, [r7]
   3526c:	strheq	r3, [r4, #6]
   35270:	ldr	r3, [sp, #36]	; 0x24
   35274:	cmp	r3, #37	; 0x25
   35278:	beq	35570 <luaL_where@@Base+0x1546c>
   3527c:	mov	r1, #31
   35280:	mov	r0, r5
   35284:	bl	26ccc <luaL_where@@Base+0x6bc8>
   35288:	ldr	r8, [r5, #8]
   3528c:	ldr	r3, [r5, #236]	; 0xec
   35290:	cmp	r8, r3
   35294:	uxth	r6, r0
   35298:	bcs	35634 <luaL_where@@Base+0x15530>
   3529c:	ldr	r1, [r5, #16]
   352a0:	lsl	r2, r8, #3
   352a4:	add	r3, r1, r2
   352a8:	ldr	r0, [pc, #-1048]	; 34e98 <luaL_where@@Base+0x14d94>
   352ac:	add	ip, r8, #1
   352b0:	str	ip, [r5, #8]
   352b4:	strh	r0, [r3, #4]
   352b8:	ldrh	r0, [sp, #32]
   352bc:	uxth	r8, r8
   352c0:	strh	r0, [r1, r2]
   352c4:	strh	r6, [r3, #2]
   352c8:	ldr	r6, [r5, #8]
   352cc:	b	340b0 <luaL_where@@Base+0x13fac>
   352d0:	mov	r0, r5
   352d4:	str	r1, [sp, #32]
   352d8:	bl	251d4 <luaL_where@@Base+0x50d0>
   352dc:	ldr	r3, [r5, #16]
   352e0:	ldr	r1, [sp, #32]
   352e4:	str	r3, [sp, #24]
   352e8:	b	34748 <luaL_where@@Base+0x14644>
   352ec:	mov	r0, r5
   352f0:	bl	251d4 <luaL_where@@Base+0x50d0>
   352f4:	b	34c58 <luaL_where@@Base+0x14b54>
   352f8:	mov	r0, r5
   352fc:	str	r1, [sp, #32]
   35300:	bl	251d4 <luaL_where@@Base+0x50d0>
   35304:	ldr	r3, [r5, #16]
   35308:	ldr	r1, [sp, #32]
   3530c:	str	r3, [sp, #24]
   35310:	b	34bc8 <luaL_where@@Base+0x14ac4>
   35314:	mov	r0, r5
   35318:	bl	251d4 <luaL_where@@Base+0x50d0>
   3531c:	ldr	r3, [r5, #16]
   35320:	str	r3, [sp, #24]
   35324:	b	348fc <luaL_where@@Base+0x147f8>
   35328:	mov	r0, r5
   3532c:	bl	251d4 <luaL_where@@Base+0x50d0>
   35330:	ldr	r3, [r5, #16]
   35334:	str	r3, [sp, #24]
   35338:	b	34858 <luaL_where@@Base+0x14754>
   3533c:	mov	r0, r5
   35340:	str	r1, [sp, #32]
   35344:	bl	251d4 <luaL_where@@Base+0x50d0>
   35348:	ldr	r3, [r5, #16]
   3534c:	ldr	r1, [sp, #32]
   35350:	str	r3, [sp, #24]
   35354:	b	34704 <luaL_where@@Base+0x14600>
   35358:	ldr	r2, [r5, #8]
   3535c:	ldr	r1, [sp, #20]
   35360:	sub	r2, r2, #1
   35364:	str	r2, [r5, #8]
   35368:	ldrh	ip, [r4]
   3536c:	ldrh	r2, [r7]
   35370:	add	ip, r1, ip, lsl #1
   35374:	strh	r2, [r4, #6]
   35378:	b	349a4 <luaL_where@@Base+0x148a0>
   3537c:	mov	r0, r5
   35380:	bl	251d4 <luaL_where@@Base+0x50d0>
   35384:	ldr	r3, [r5, #16]
   35388:	b	34d1c <luaL_where@@Base+0x14c18>
   3538c:	mov	r0, r5
   35390:	bl	251d4 <luaL_where@@Base+0x50d0>
   35394:	ldr	r3, [r5, #16]
   35398:	str	r3, [sp, #24]
   3539c:	b	349f0 <luaL_where@@Base+0x148ec>
   353a0:	mov	r0, r5
   353a4:	bl	251d4 <luaL_where@@Base+0x50d0>
   353a8:	b	34c1c <luaL_where@@Base+0x14b18>
   353ac:	cmn	r3, #1
   353b0:	ldr	r6, [r5, #8]
   353b4:	beq	340b0 <luaL_where@@Base+0x13fac>
   353b8:	mov	r8, r7
   353bc:	b	340b0 <luaL_where@@Base+0x13fac>
   353c0:	mov	r3, #37	; 0x25
   353c4:	mov	r1, r6
   353c8:	ldrh	r8, [r4, #6]
   353cc:	mov	r0, r5
   353d0:	strb	r3, [r7, #5]
   353d4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   353d8:	ldr	r7, [r5, #8]
   353dc:	ldr	r3, [r5, #236]	; 0xec
   353e0:	cmp	r7, r3
   353e4:	uxth	r6, r0
   353e8:	bcs	35660 <luaL_where@@Base+0x1555c>
   353ec:	ldr	ip, [r5, #16]
   353f0:	lsl	r2, r7, #3
   353f4:	add	r3, ip, r2
   353f8:	ldr	r1, [pc, #-1380]	; 34e9c <luaL_where@@Base+0x14d98>
   353fc:	add	r0, r7, #1
   35400:	str	r0, [r5, #8]
   35404:	strh	r1, [r3, #4]
   35408:	ldrh	r1, [sp, #32]
   3540c:	uxth	r7, r7
   35410:	strh	r1, [ip, r2]
   35414:	strh	r6, [r3, #2]
   35418:	ldr	r6, [r5, #8]
   3541c:	ldr	r3, [r5, #236]	; 0xec
   35420:	cmp	r6, r3
   35424:	bcs	35650 <luaL_where@@Base+0x1554c>
   35428:	lsl	r2, r6, #3
   3542c:	add	r3, ip, r2
   35430:	ldr	r1, [pc, #-1432]	; 34ea0 <luaL_where@@Base+0x14d9c>
   35434:	add	r0, r6, #1
   35438:	str	r0, [r5, #8]
   3543c:	strh	r1, [r3, #4]
   35440:	strh	r8, [ip, r2]
   35444:	ldr	r2, [sp, #36]	; 0x24
   35448:	strh	r7, [r3, #2]
   3544c:	strh	r6, [r4, #6]
   35450:	ldr	r8, [r5, #8]
   35454:	ldr	r3, [r5, #236]	; 0xec
   35458:	lsl	r6, r2, #8
   3545c:	cmp	r8, r3
   35460:	orr	r6, r6, #19
   35464:	bcs	35640 <luaL_where@@Base+0x1553c>
   35468:	add	r1, r8, #1
   3546c:	str	r1, [r5, #8]
   35470:	lsl	r2, r8, #3
   35474:	ldrh	r1, [sp, #32]
   35478:	add	r3, ip, r2
   3547c:	uxth	r8, r8
   35480:	strh	r6, [r3, #4]
   35484:	strh	r1, [ip, r2]
   35488:	ldrh	r2, [sp, #44]	; 0x2c
   3548c:	strh	r2, [r3, #2]
   35490:	ldr	r6, [r5, #8]
   35494:	b	340b0 <luaL_where@@Base+0x13fac>
   35498:	cmn	r1, #1
   3549c:	beq	35358 <luaL_where@@Base+0x15254>
   354a0:	ldr	r1, [r5, #8]
   354a4:	sub	r1, r1, #1
   354a8:	str	r1, [r5, #8]
   354ac:	ldrh	ip, [r4]
   354b0:	strh	r2, [r4, #6]
   354b4:	ldr	r2, [sp, #20]
   354b8:	add	ip, r2, ip, lsl #1
   354bc:	b	349a4 <luaL_where@@Base+0x148a0>
   354c0:	cmp	r6, #32
   354c4:	mov	r1, #0
   354c8:	ldreq	r3, [r5, #8]
   354cc:	mov	r0, r5
   354d0:	subeq	r3, r3, #1
   354d4:	streq	r3, [r5, #8]
   354d8:	ldrhne	r8, [r4, #6]
   354dc:	bl	26ccc <luaL_where@@Base+0x6bc8>
   354e0:	uxth	r8, r8
   354e4:	strh	r0, [r4, #6]
   354e8:	ldr	r6, [r5, #8]
   354ec:	b	340b0 <luaL_where@@Base+0x13fac>
   354f0:	mov	r0, r5
   354f4:	str	r1, [sp, #32]
   354f8:	bl	251d4 <luaL_where@@Base+0x50d0>
   354fc:	ldr	r3, [r5, #16]
   35500:	ldr	r1, [sp, #32]
   35504:	str	r3, [sp, #24]
   35508:	b	346c4 <luaL_where@@Base+0x145c0>
   3550c:	mov	r0, r5
   35510:	bl	251d4 <luaL_where@@Base+0x50d0>
   35514:	ldr	r3, [r5, #16]
   35518:	str	r3, [sp, #24]
   3551c:	b	34e24 <luaL_where@@Base+0x14d20>
   35520:	mov	r0, r5
   35524:	bl	251d4 <luaL_where@@Base+0x50d0>
   35528:	ldr	r3, [r5, #16]
   3552c:	str	r3, [sp, #24]
   35530:	b	34f94 <luaL_where@@Base+0x14e90>
   35534:	mov	r0, r5
   35538:	bl	251d4 <luaL_where@@Base+0x50d0>
   3553c:	ldr	r3, [r5, #16]
   35540:	str	r3, [sp, #24]
   35544:	b	34f58 <luaL_where@@Base+0x14e54>
   35548:	mov	r0, r5
   3554c:	bl	251d4 <luaL_where@@Base+0x50d0>
   35550:	ldr	r3, [r5, #16]
   35554:	str	r3, [sp, #24]
   35558:	b	34f1c <luaL_where@@Base+0x14e18>
   3555c:	mov	r0, r5
   35560:	bl	251d4 <luaL_where@@Base+0x50d0>
   35564:	ldr	r3, [r5, #16]
   35568:	str	r3, [sp, #24]
   3556c:	b	34ed8 <luaL_where@@Base+0x14dd4>
   35570:	mov	r1, #0
   35574:	mov	r0, r5
   35578:	bl	26ccc <luaL_where@@Base+0x6bc8>
   3557c:	ldr	r6, [r5, #8]
   35580:	uxth	r8, r0
   35584:	b	340b0 <luaL_where@@Base+0x13fac>
   35588:	mov	r0, r5
   3558c:	bl	251d4 <luaL_where@@Base+0x50d0>
   35590:	ldr	ip, [r5, #16]
   35594:	b	34b24 <luaL_where@@Base+0x14a20>
   35598:	mov	r0, r5
   3559c:	str	r2, [sp, #36]	; 0x24
   355a0:	bl	251d4 <luaL_where@@Base+0x50d0>
   355a4:	ldr	r3, [r5, #16]
   355a8:	ldr	r2, [sp, #36]	; 0x24
   355ac:	b	35104 <luaL_where@@Base+0x15000>
   355b0:	mov	r0, r5
   355b4:	bl	251d4 <luaL_where@@Base+0x50d0>
   355b8:	ldr	r3, [r5, #16]
   355bc:	b	350d0 <luaL_where@@Base+0x14fcc>
   355c0:	mov	r0, r5
   355c4:	bl	251d4 <luaL_where@@Base+0x50d0>
   355c8:	ldr	r3, [r5, #16]
   355cc:	b	35094 <luaL_where@@Base+0x14f90>
   355d0:	mov	r0, r5
   355d4:	bl	251d4 <luaL_where@@Base+0x50d0>
   355d8:	ldr	r2, [sp, #24]
   355dc:	b	35050 <luaL_where@@Base+0x14f4c>
   355e0:	mov	r0, r5
   355e4:	bl	251d4 <luaL_where@@Base+0x50d0>
   355e8:	b	34ae8 <luaL_where@@Base+0x149e4>
   355ec:	mov	r0, r5
   355f0:	bl	251d4 <luaL_where@@Base+0x50d0>
   355f4:	ldr	r3, [r5, #16]
   355f8:	str	r3, [sp, #24]
   355fc:	b	34a98 <luaL_where@@Base+0x14994>
   35600:	mov	r0, r5
   35604:	bl	251d4 <luaL_where@@Base+0x50d0>
   35608:	ldr	r3, [r5, #16]
   3560c:	b	35184 <luaL_where@@Base+0x15080>
   35610:	mov	r0, r5
   35614:	bl	251d4 <luaL_where@@Base+0x50d0>
   35618:	ldr	r3, [r5, #16]
   3561c:	b	35144 <luaL_where@@Base+0x15040>
   35620:	mov	r0, r5
   35624:	bl	251d4 <luaL_where@@Base+0x50d0>
   35628:	ldr	r3, [r5, #16]
   3562c:	str	r3, [sp, #24]
   35630:	b	34d98 <luaL_where@@Base+0x14c94>
   35634:	mov	r0, r5
   35638:	bl	251d4 <luaL_where@@Base+0x50d0>
   3563c:	b	3529c <luaL_where@@Base+0x15198>
   35640:	mov	r0, r5
   35644:	bl	251d4 <luaL_where@@Base+0x50d0>
   35648:	ldr	ip, [r5, #16]
   3564c:	b	35468 <luaL_where@@Base+0x15364>
   35650:	mov	r0, r5
   35654:	bl	251d4 <luaL_where@@Base+0x50d0>
   35658:	ldr	ip, [r5, #16]
   3565c:	b	35428 <luaL_where@@Base+0x15324>
   35660:	mov	r0, r5
   35664:	bl	251d4 <luaL_where@@Base+0x50d0>
   35668:	b	353ec <luaL_where@@Base+0x152e8>
   3566c:	ldr	r3, [pc, #396]	; 35800 <luaL_where@@Base+0x156fc>
   35670:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   35674:	cmp	r1, r3
   35678:	sub	sp, sp, #8
   3567c:	mov	r4, r0
   35680:	bhi	357c4 <luaL_where@@Base+0x156c0>
   35684:	ldr	r3, [r0, #32]
   35688:	cmp	r3, #0
   3568c:	blt	357c4 <luaL_where@@Base+0x156c0>
   35690:	mov	r8, r2
   35694:	mov	r7, r1
   35698:	ldr	r2, [r0, #28]
   3569c:	ldr	r6, [r0, #24]
   356a0:	add	r9, r0, #44	; 0x2c
   356a4:	b	356f4 <luaL_where@@Base+0x155f0>
   356a8:	add	r5, r2, r5
   356ac:	ldr	r6, [r4, #52]	; 0x34
   356b0:	ldr	r3, [r4, #48]	; 0x30
   356b4:	cmp	r7, r5
   356b8:	movcs	r1, r7
   356bc:	movcc	r1, r5
   356c0:	sub	r3, r3, r6
   356c4:	cmp	r1, r3
   356c8:	bhi	357d4 <luaL_where@@Base+0x156d0>
   356cc:	mov	r1, sl
   356d0:	ldr	r0, [r4, #44]	; 0x2c
   356d4:	bl	12cb8 <memcpy@plt>
   356d8:	add	r2, r6, r5
   356dc:	add	r3, r6, r7
   356e0:	cmp	r2, r3
   356e4:	str	r2, [r4, #44]	; 0x2c
   356e8:	str	r2, [r4, #28]
   356ec:	str	r6, [r4, #24]
   356f0:	bcs	35784 <luaL_where@@Base+0x15680>
   356f4:	subs	r5, r2, r6
   356f8:	ldr	r3, [r4, #52]	; 0x34
   356fc:	beq	35734 <luaL_where@@Base+0x15630>
   35700:	ldr	r2, [r4, #44]	; 0x2c
   35704:	cmp	r3, r2
   35708:	beq	3578c <luaL_where@@Base+0x15688>
   3570c:	cmp	r3, r6
   35710:	beq	35728 <luaL_where@@Base+0x15624>
   35714:	mov	r0, r3
   35718:	mov	r1, r6
   3571c:	mov	r2, r5
   35720:	bl	12c94 <memmove@plt>
   35724:	mov	r3, r0
   35728:	str	r3, [r4, #24]
   3572c:	add	r3, r3, r5
   35730:	str	r3, [r4, #28]
   35734:	str	r3, [r4, #44]	; 0x2c
   35738:	add	r2, sp, #4
   3573c:	ldr	r3, [r4, #60]	; 0x3c
   35740:	ldr	r1, [r4, #64]	; 0x40
   35744:	ldr	r0, [r4, #4]
   35748:	blx	r3
   3574c:	subs	sl, r0, #0
   35750:	beq	357b4 <luaL_where@@Base+0x156b0>
   35754:	ldr	r2, [sp, #4]
   35758:	cmp	r2, #0
   3575c:	beq	357b4 <luaL_where@@Base+0x156b0>
   35760:	cmp	r5, #0
   35764:	bne	356a8 <luaL_where@@Base+0x155a4>
   35768:	mov	r6, sl
   3576c:	add	r2, sl, r2
   35770:	add	r3, r6, r7
   35774:	cmp	r2, r3
   35778:	str	r2, [r4, #28]
   3577c:	str	sl, [r4, #24]
   35780:	bcc	356f4 <luaL_where@@Base+0x155f0>
   35784:	add	sp, sp, #8
   35788:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3578c:	ldr	r2, [r4, #48]	; 0x30
   35790:	sub	r2, r2, r3
   35794:	cmp	r7, r2
   35798:	bhi	357e8 <luaL_where@@Base+0x156e4>
   3579c:	mov	r0, r3
   357a0:	mov	r1, r6
   357a4:	mov	r2, r5
   357a8:	bl	12cb8 <memcpy@plt>
   357ac:	mov	r3, r0
   357b0:	b	35728 <luaL_where@@Base+0x15624>
   357b4:	cmp	r8, #0
   357b8:	mvneq	r3, #0
   357bc:	streq	r3, [r4, #32]
   357c0:	beq	35784 <luaL_where@@Base+0x15680>
   357c4:	ldr	r2, [pc, #56]	; 35804 <luaL_where@@Base+0x15700>
   357c8:	ldr	r1, [r4, #80]	; 0x50
   357cc:	ldr	r0, [r4, #4]
   357d0:	bl	24f84 <luaL_where@@Base+0x4e80>
   357d4:	mov	r0, r9
   357d8:	bl	333cc <luaL_where@@Base+0x132c8>
   357dc:	ldr	r2, [sp, #4]
   357e0:	mov	r6, r0
   357e4:	b	356cc <luaL_where@@Base+0x155c8>
   357e8:	mov	r1, r7
   357ec:	mov	r0, r9
   357f0:	bl	333cc <luaL_where@@Base+0x132c8>
   357f4:	ldr	r6, [r4, #24]
   357f8:	mov	r3, r0
   357fc:	b	3579c <luaL_where@@Base+0x15698>
   35800:	svcvc	0x00ffff00
   35804:	andeq	r0, r0, r1, lsl #23
   35808:	push	{r4, lr}
   3580c:	mov	r4, r0
   35810:	ldr	r0, [r0, #16]
   35814:	ldr	ip, [r4, #28]
   35818:	ldr	r3, [r4, #40]	; 0x28
   3581c:	sub	r0, r0, #8
   35820:	cmp	r3, #0
   35824:	cmpne	r0, ip
   35828:	bhi	35858 <luaL_where@@Base+0x15754>
   3582c:	b	35968 <luaL_where@@Base+0x15864>
   35830:	ldr	r2, [r3, #20]
   35834:	sub	r2, ip, r2
   35838:	cmp	r0, r2
   3583c:	bcs	35868 <luaL_where@@Base+0x15764>
   35840:	ldr	r2, [r3, #24]
   35844:	cmp	r2, #0
   35848:	bge	358c0 <luaL_where@@Base+0x157bc>
   3584c:	ldr	r3, [r3, #16]
   35850:	cmp	r3, #0
   35854:	beq	35968 <luaL_where@@Base+0x15864>
   35858:	bic	r1, r3, #3
   3585c:	ldr	r1, [r1, #20]
   35860:	cmp	r1, #0
   35864:	blt	35830 <luaL_where@@Base+0x1572c>
   35868:	ldr	r1, [r0, #4]
   3586c:	and	r2, r1, #7
   35870:	sub	r2, r2, #1
   35874:	cmp	r2, #6
   35878:	ldrls	pc, [pc, r2, lsl #2]
   3587c:	b	35974 <luaL_where@@Base+0x15870>
   35880:	andeq	r5, r3, r8, lsr #18
   35884:	andeq	r5, r3, ip, lsl r9
   35888:	andeq	r5, r3, ip, lsr #18
   3588c:	andeq	r5, r3, r4, ror r9
   35890:	andeq	r5, r3, r8, lsl #19
   35894:	muleq	r3, ip, r8
   35898:	muleq	r3, ip, r8
   3589c:	bic	r1, r1, #7
   358a0:	sub	r3, r0, r1
   358a4:	ldr	r3, [r3]
   358a8:	ldrb	r3, [r3, #6]
   358ac:	cmp	r3, #21
   358b0:	rsbeq	r1, r1, #8
   358b4:	addeq	r0, r0, r1
   358b8:	subeq	r2, r0, ip
   358bc:	bne	35968 <luaL_where@@Base+0x15864>
   358c0:	cmp	r2, #0
   358c4:	beq	35968 <luaL_where@@Base+0x15864>
   358c8:	ldr	r3, [r4, #8]
   358cc:	add	r2, r2, ip
   358d0:	ldr	r5, [r4, #20]
   358d4:	ldr	r0, [r2, #4]
   358d8:	ldr	r1, [r3, #552]	; 0x228
   358dc:	cmn	r0, #9
   358e0:	bic	r1, r1, #16
   358e4:	str	r1, [r3, #552]	; 0x228
   358e8:	bne	358f8 <luaL_where@@Base+0x157f4>
   358ec:	ldrb	r3, [r4, #7]
   358f0:	cmp	r3, #5
   358f4:	bne	35938 <luaL_where@@Base+0x15834>
   358f8:	mov	r1, #18
   358fc:	mov	r0, r4
   35900:	bl	20530 <luaL_where@@Base+0x42c>
   35904:	mvn	r3, #4
   35908:	str	r3, [r5, #-4]
   3590c:	mov	r1, #5
   35910:	str	r0, [r5, #-8]
   35914:	mov	r0, r4
   35918:	bl	20ff0 <luaL_where@@Base+0xeec>
   3591c:	ldr	r2, [r0, #-8]
   35920:	cmp	r2, #1
   35924:	bne	3592c <luaL_where@@Base+0x15828>
   35928:	ldr	r3, [r3, #16]
   3592c:	bic	r1, r1, #7
   35930:	sub	r0, r0, r1
   35934:	b	35820 <luaL_where@@Base+0x1571c>
   35938:	mov	r3, #5
   3593c:	strb	r3, [r4, #7]
   35940:	ldrd	r0, [r5, #-8]
   35944:	add	ip, r5, #8
   35948:	strd	r0, [r5]
   3594c:	ldrd	r2, [r2]
   35950:	mov	r1, r5
   35954:	mov	r0, r4
   35958:	strd	r2, [r5, #-8]
   3595c:	mov	r2, #2
   35960:	str	ip, [r4, #20]
   35964:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   35968:	mov	r0, r4
   3596c:	mov	r1, #2
   35970:	bl	20ff0 <luaL_where@@Base+0xeec>
   35974:	ldr	r2, [r0, #4]
   35978:	ldrb	r2, [r2, #-3]
   3597c:	add	r2, r2, #1
   35980:	sub	r0, r0, r2, lsl #3
   35984:	b	35820 <luaL_where@@Base+0x1571c>
   35988:	tst	r3, #1
   3598c:	bne	35968 <luaL_where@@Base+0x15864>
   35990:	ldr	r2, [r3, #24]
   35994:	cmp	r2, #0
   35998:	blt	3592c <luaL_where@@Base+0x15828>
   3599c:	b	358c0 <luaL_where@@Base+0x157bc>

000359a0 <lua_error@@Base>:
   359a0:	push	{r4, lr}
   359a4:	bl	35808 <luaL_where@@Base+0x15704>
   359a8:	push	{r4, lr}
   359ac:	mov	r4, r0
   359b0:	ldr	r0, [r0, #16]
   359b4:	sub	r3, r0, #8
   359b8:	ldr	r2, [r0, #-4]
   359bc:	tst	r2, #3
   359c0:	bne	359e0 <lua_error@@Base+0x40>
   359c4:	ldrb	r2, [r2, #-3]
   359c8:	add	r2, r2, #1
   359cc:	sub	r2, r3, r2, lsl #3
   359d0:	mov	r0, r4
   359d4:	bl	20070 <lua_getstack@@Base+0x3b8>
   359d8:	mov	r0, r4
   359dc:	bl	35808 <luaL_where@@Base+0x15704>
   359e0:	and	ip, r2, #7
   359e4:	cmp	ip, #2
   359e8:	movne	r2, #0
   359ec:	bne	359d0 <lua_error@@Base+0x30>
   359f0:	ldr	ip, [r0, #-16]
   359f4:	cmp	ip, #1
   359f8:	beq	35a3c <lua_error@@Base+0x9c>
   359fc:	ldr	ip, [r0, #-8]
   35a00:	bic	r2, r2, #7
   35a04:	sub	r2, r3, r2
   35a08:	ldrb	ip, [ip, #6]
   35a0c:	add	ip, ip, #93	; 0x5d
   35a10:	uxtb	ip, ip
   35a14:	cmp	ip, #15
   35a18:	bhi	359d0 <lua_error@@Base+0x30>
   35a1c:	ldr	ip, [r4, #40]	; 0x28
   35a20:	ldr	lr, [r0, #-12]
   35a24:	bic	r0, ip, #3
   35a28:	add	ip, r2, #8
   35a2c:	str	r3, [r4, #20]
   35a30:	str	ip, [r4, #16]
   35a34:	str	lr, [r0, #8]
   35a38:	b	359d0 <lua_error@@Base+0x30>
   35a3c:	mov	r2, r3
   35a40:	mov	r3, #0
   35a44:	b	359d0 <lua_error@@Base+0x30>
   35a48:	ldr	r3, [pc, #12]	; 35a5c <lua_error@@Base+0xbc>
   35a4c:	push	{r4, lr}
   35a50:	ldr	r3, [r3]
   35a54:	add	r1, r3, r1
   35a58:	bl	359a8 <lua_error@@Base+0x8>
   35a5c:	muleq	r8, ip, r1
   35a60:	push	{r4, lr}
   35a64:	ldr	r1, [pc]	; 35a6c <lua_error@@Base+0xcc>
   35a68:	bl	35a48 <lua_error@@Base+0xa8>
   35a6c:	andeq	r0, r0, lr, lsr r3
   35a70:	push	{r4, lr}
   35a74:	ldrb	r3, [r1]
   35a78:	cmp	r3, #37	; 0x25
   35a7c:	beq	35af0 <lua_error@@Base+0x150>
   35a80:	cmp	r3, #91	; 0x5b
   35a84:	add	r2, r1, #1
   35a88:	bne	35adc <lua_error@@Base+0x13c>
   35a8c:	ldrb	r3, [r1, #1]
   35a90:	cmp	r3, #94	; 0x5e
   35a94:	addeq	r2, r1, #2
   35a98:	ldrbeq	r3, [r1, #2]
   35a9c:	b	35aa8 <lua_error@@Base+0x108>
   35aa0:	cmp	r3, #93	; 0x5d
   35aa4:	beq	35ad8 <lua_error@@Base+0x138>
   35aa8:	cmp	r3, #0
   35aac:	beq	35acc <lua_error@@Base+0x12c>
   35ab0:	cmp	r3, #37	; 0x25
   35ab4:	add	r1, r2, #1
   35ab8:	ldrb	r3, [r2, #1]
   35abc:	movne	r2, r1
   35ac0:	bne	35aa0 <lua_error@@Base+0x100>
   35ac4:	cmp	r3, #0
   35ac8:	bne	35ae4 <lua_error@@Base+0x144>
   35acc:	ldr	r0, [r0]
   35ad0:	ldr	r1, [pc, #52]	; 35b0c <lua_error@@Base+0x16c>
   35ad4:	bl	35a48 <lua_error@@Base+0xa8>
   35ad8:	add	r2, r2, #1
   35adc:	mov	r0, r2
   35ae0:	pop	{r4, pc}
   35ae4:	ldrb	r3, [r2, #2]
   35ae8:	add	r2, r2, #2
   35aec:	b	35aa0 <lua_error@@Base+0x100>
   35af0:	ldrb	r3, [r1, #1]
   35af4:	cmp	r3, #0
   35af8:	addne	r2, r1, #2
   35afc:	bne	35adc <lua_error@@Base+0x13c>
   35b00:	ldr	r0, [r0]
   35b04:	ldr	r1, [pc, #4]	; 35b10 <lua_error@@Base+0x170>
   35b08:	bl	35a48 <lua_error@@Base+0xa8>
   35b0c:	ldrdeq	r0, [r0], -lr
   35b10:			; <UNDEFINED> instruction: 0x000006bc
   35b14:	ldr	r3, [r0, #16]
   35b18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   35b1c:	add	r3, r3, #1
   35b20:	cmp	r3, #200	; 0xc8
   35b24:	mov	r4, r0
   35b28:	str	r3, [r0, #16]
   35b2c:	bgt	36018 <lua_error@@Base+0x678>
   35b30:	ldrb	r3, [r2]
   35b34:	ldr	r9, [pc, #1316]	; 36060 <lua_error@@Base+0x6c0>
   35b38:	mov	r6, r1
   35b3c:	mov	r5, r2
   35b40:	add	r8, r0, #8
   35b44:	cmp	r3, #41	; 0x29
   35b48:	ldrls	pc, [pc, r3, lsl #2]
   35b4c:	b	35c04 <lua_error@@Base+0x264>
   35b50:	muleq	r3, r8, ip
   35b54:	andeq	r5, r3, r4, lsl #24
   35b58:	andeq	r5, r3, r4, lsl #24
   35b5c:	andeq	r5, r3, r4, lsl #24
   35b60:	andeq	r5, r3, r4, lsl #24
   35b64:	andeq	r5, r3, r4, lsl #24
   35b68:	andeq	r5, r3, r4, lsl #24
   35b6c:	andeq	r5, r3, r4, lsl #24
   35b70:	andeq	r5, r3, r4, lsl #24
   35b74:	andeq	r5, r3, r4, lsl #24
   35b78:	andeq	r5, r3, r4, lsl #24
   35b7c:	andeq	r5, r3, r4, lsl #24
   35b80:	andeq	r5, r3, r4, lsl #24
   35b84:	andeq	r5, r3, r4, lsl #24
   35b88:	andeq	r5, r3, r4, lsl #24
   35b8c:	andeq	r5, r3, r4, lsl #24
   35b90:	andeq	r5, r3, r4, lsl #24
   35b94:	andeq	r5, r3, r4, lsl #24
   35b98:	andeq	r5, r3, r4, lsl #24
   35b9c:	andeq	r5, r3, r4, lsl #24
   35ba0:	andeq	r5, r3, r4, lsl #24
   35ba4:	andeq	r5, r3, r4, lsl #24
   35ba8:	andeq	r5, r3, r4, lsl #24
   35bac:	andeq	r5, r3, r4, lsl #24
   35bb0:	andeq	r5, r3, r4, lsl #24
   35bb4:	andeq	r5, r3, r4, lsl #24
   35bb8:	andeq	r5, r3, r4, lsl #24
   35bbc:	andeq	r5, r3, r4, lsl #24
   35bc0:	andeq	r5, r3, r4, lsl #24
   35bc4:	andeq	r5, r3, r4, lsl #24
   35bc8:	andeq	r5, r3, r4, lsl #24
   35bcc:	andeq	r5, r3, r4, lsl #24
   35bd0:	andeq	r5, r3, r4, lsl #24
   35bd4:	andeq	r5, r3, r4, lsl #24
   35bd8:	andeq	r5, r3, r4, lsl #24
   35bdc:	andeq	r5, r3, r4, lsl #24
   35be0:	strdeq	r5, [r3], -r8
   35be4:	andeq	r5, r3, r8, ror #26
   35be8:	andeq	r5, r3, r4, lsl #24
   35bec:	andeq	r5, r3, r4, lsl #24
   35bf0:	andeq	r5, r3, r4, lsl sp
   35bf4:	andeq	r5, r3, ip, lsr #25
   35bf8:	ldrb	r3, [r5, #1]
   35bfc:	cmp	r3, #0
   35c00:	beq	35c8c <lua_error@@Base+0x2ec>
   35c04:	mov	r1, r5
   35c08:	mov	r0, r8
   35c0c:	bl	35a70 <lua_error@@Base+0xd0>
   35c10:	ldr	r3, [r4, #4]
   35c14:	cmp	r6, r3
   35c18:	mov	r7, r0
   35c1c:	ldrbcs	r3, [r0]
   35c20:	bcc	35de4 <lua_error@@Base+0x444>
   35c24:	sub	r3, r3, #42	; 0x2a
   35c28:	cmp	r3, #21
   35c2c:	ldrls	pc, [pc, r3, lsl #2]
   35c30:	b	35eb0 <lua_error@@Base+0x510>
   35c34:	andeq	r5, r3, r4, asr #29
   35c38:			; <UNDEFINED> instruction: 0x00035eb0
   35c3c:			; <UNDEFINED> instruction: 0x00035eb0
   35c40:	andeq	r5, r3, r8, ror #28
   35c44:			; <UNDEFINED> instruction: 0x00035eb0
   35c48:			; <UNDEFINED> instruction: 0x00035eb0
   35c4c:			; <UNDEFINED> instruction: 0x00035eb0
   35c50:			; <UNDEFINED> instruction: 0x00035eb0
   35c54:			; <UNDEFINED> instruction: 0x00035eb0
   35c58:			; <UNDEFINED> instruction: 0x00035eb0
   35c5c:			; <UNDEFINED> instruction: 0x00035eb0
   35c60:			; <UNDEFINED> instruction: 0x00035eb0
   35c64:			; <UNDEFINED> instruction: 0x00035eb0
   35c68:			; <UNDEFINED> instruction: 0x00035eb0
   35c6c:			; <UNDEFINED> instruction: 0x00035eb0
   35c70:			; <UNDEFINED> instruction: 0x00035eb0
   35c74:			; <UNDEFINED> instruction: 0x00035eb0
   35c78:			; <UNDEFINED> instruction: 0x00035eb0
   35c7c:			; <UNDEFINED> instruction: 0x00035eb0
   35c80:			; <UNDEFINED> instruction: 0x00035eb0
   35c84:			; <UNDEFINED> instruction: 0x00035eb0
   35c88:			; <UNDEFINED> instruction: 0x00035eb8
   35c8c:	ldr	r3, [r4, #4]
   35c90:	cmp	r6, r3
   35c94:	bne	35eb0 <lua_error@@Base+0x510>
   35c98:	mov	r0, r6
   35c9c:	ldr	r3, [r4, #16]
   35ca0:	sub	r3, r3, #1
   35ca4:	str	r3, [r4, #16]
   35ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   35cac:	ldr	r3, [r4, #12]
   35cb0:	add	r2, r5, #1
   35cb4:	subs	r0, r3, #1
   35cb8:	bmi	3600c <lua_error@@Base+0x66c>
   35cbc:	add	r1, r4, r3, lsl #3
   35cc0:	ldr	r1, [r1, #16]
   35cc4:	cmn	r1, #1
   35cc8:	addne	r3, r4, r3, lsl #3
   35ccc:	beq	35ce8 <lua_error@@Base+0x348>
   35cd0:	subs	r0, r0, #1
   35cd4:	bcc	3600c <lua_error@@Base+0x66c>
   35cd8:	sub	r3, r3, #8
   35cdc:	ldr	r1, [r3, #16]
   35ce0:	cmn	r1, #1
   35ce4:	bne	35cd0 <lua_error@@Base+0x330>
   35ce8:	add	r5, r4, r0, lsl #3
   35cec:	mov	r1, r6
   35cf0:	ldr	r3, [r5, #20]
   35cf4:	mov	r0, r4
   35cf8:	sub	r6, r6, r3
   35cfc:	str	r6, [r5, #24]
   35d00:	bl	35b14 <lua_error@@Base+0x174>
   35d04:	cmp	r0, #0
   35d08:	mvneq	r3, #0
   35d0c:	streq	r3, [r5, #24]
   35d10:	b	35c9c <lua_error@@Base+0x2fc>
   35d14:	ldrb	r2, [r5, #1]
   35d18:	ldr	r3, [r4, #12]
   35d1c:	cmp	r2, #41	; 0x29
   35d20:	beq	35ee8 <lua_error@@Base+0x548>
   35d24:	cmp	r3, #31
   35d28:	add	r2, r5, #1
   35d2c:	bgt	35f00 <lua_error@@Base+0x560>
   35d30:	add	r0, r4, r3, lsl #3
   35d34:	mvn	ip, #0
   35d38:	add	r3, r3, #1
   35d3c:	str	r6, [r0, #20]
   35d40:	str	ip, [r0, #24]
   35d44:	mov	r1, r6
   35d48:	mov	r0, r4
   35d4c:	str	r3, [r4, #12]
   35d50:	bl	35b14 <lua_error@@Base+0x174>
   35d54:	cmp	r0, #0
   35d58:	ldreq	r3, [r4, #12]
   35d5c:	subeq	r3, r3, #1
   35d60:	streq	r3, [r4, #12]
   35d64:	b	35c9c <lua_error@@Base+0x2fc>
   35d68:	ldrb	r3, [r5, #1]
   35d6c:	cmp	r3, #98	; 0x62
   35d70:	beq	35f0c <lua_error@@Base+0x56c>
   35d74:	cmp	r3, #102	; 0x66
   35d78:	bne	35f7c <lua_error@@Base+0x5dc>
   35d7c:	ldrb	r3, [r5, #2]
   35d80:	add	r7, r5, #2
   35d84:	cmp	r3, #91	; 0x5b
   35d88:	bne	3603c <lua_error@@Base+0x69c>
   35d8c:	mov	r1, r7
   35d90:	mov	r0, r8
   35d94:	bl	35a70 <lua_error@@Base+0xd0>
   35d98:	ldr	r3, [r4]
   35d9c:	mov	r1, r7
   35da0:	cmp	r6, r3
   35da4:	mov	r5, r0
   35da8:	sub	sl, r5, #1
   35dac:	ldrbne	r0, [r6, #-1]
   35db0:	moveq	r0, #0
   35db4:	mov	r2, sl
   35db8:	bl	172c0 <_start@@Base+0x3f10>
   35dbc:	cmp	r0, #0
   35dc0:	bne	35eb0 <lua_error@@Base+0x510>
   35dc4:	mov	r2, sl
   35dc8:	mov	r1, r7
   35dcc:	ldrb	r0, [r6]
   35dd0:	bl	172c0 <_start@@Base+0x3f10>
   35dd4:	cmp	r0, #0
   35dd8:	beq	35eb0 <lua_error@@Base+0x510>
   35ddc:	ldrb	r3, [r5]
   35de0:	b	35b44 <lua_error@@Base+0x1a4>
   35de4:	mov	r2, r0
   35de8:	mov	r1, r5
   35dec:	ldrb	r0, [r6]
   35df0:	bl	1d154 <_start@@Base+0x9da4>
   35df4:	ldrb	r3, [r7]
   35df8:	cmp	r0, #0
   35dfc:	beq	35c24 <lua_error@@Base+0x284>
   35e00:	sub	r2, r3, #42	; 0x2a
   35e04:	cmp	r2, #21
   35e08:	ldrls	pc, [pc, r2, lsl #2]
   35e0c:	b	35edc <lua_error@@Base+0x53c>
   35e10:	andeq	r5, r3, r4, asr #29
   35e14:	andeq	r6, r3, r4, lsr #32
   35e18:	ldrdeq	r5, [r3], -ip
   35e1c:	andeq	r5, r3, r8, ror #28
   35e20:	ldrdeq	r5, [r3], -ip
   35e24:	ldrdeq	r5, [r3], -ip
   35e28:	ldrdeq	r5, [r3], -ip
   35e2c:	ldrdeq	r5, [r3], -ip
   35e30:	ldrdeq	r5, [r3], -ip
   35e34:	ldrdeq	r5, [r3], -ip
   35e38:	ldrdeq	r5, [r3], -ip
   35e3c:	ldrdeq	r5, [r3], -ip
   35e40:	ldrdeq	r5, [r3], -ip
   35e44:	ldrdeq	r5, [r3], -ip
   35e48:	ldrdeq	r5, [r3], -ip
   35e4c:	ldrdeq	r5, [r3], -ip
   35e50:	ldrdeq	r5, [r3], -ip
   35e54:	ldrdeq	r5, [r3], -ip
   35e58:	ldrdeq	r5, [r3], -ip
   35e5c:	ldrdeq	r5, [r3], -ip
   35e60:	ldrdeq	r5, [r3], -ip
   35e64:	andeq	r5, r3, ip, ror #31
   35e68:	add	r8, r7, #1
   35e6c:	b	35e8c <lua_error@@Base+0x4ec>
   35e70:	ldrb	r0, [r6]
   35e74:	mov	r2, r7
   35e78:	mov	r1, r5
   35e7c:	bl	1d154 <_start@@Base+0x9da4>
   35e80:	add	r6, r6, #1
   35e84:	cmp	r0, #0
   35e88:	beq	35eb0 <lua_error@@Base+0x510>
   35e8c:	mov	r2, r8
   35e90:	mov	r1, r6
   35e94:	mov	r0, r4
   35e98:	bl	35b14 <lua_error@@Base+0x174>
   35e9c:	cmp	r0, #0
   35ea0:	bne	35c9c <lua_error@@Base+0x2fc>
   35ea4:	ldr	r2, [r4, #4]
   35ea8:	cmp	r6, r2
   35eac:	bcc	35e70 <lua_error@@Base+0x4d0>
   35eb0:	mov	r0, #0
   35eb4:	b	35c9c <lua_error@@Base+0x2fc>
   35eb8:	add	r5, r7, #1
   35ebc:	ldrb	r3, [r7, #1]
   35ec0:	b	35b44 <lua_error@@Base+0x1a4>
   35ec4:	mov	r3, r7
   35ec8:	mov	r2, r5
   35ecc:	mov	r1, r6
   35ed0:	mov	r0, r4
   35ed4:	bl	3607c <lua_error@@Base+0x6dc>
   35ed8:	b	35c9c <lua_error@@Base+0x2fc>
   35edc:	add	r6, r6, #1
   35ee0:	mov	r5, r7
   35ee4:	b	35b44 <lua_error@@Base+0x1a4>
   35ee8:	cmp	r3, #31
   35eec:	addle	r0, r4, r3, lsl #3
   35ef0:	add	r2, r5, #2
   35ef4:	addle	r3, r3, #1
   35ef8:	mvnle	ip, #1
   35efc:	ble	35d3c <lua_error@@Base+0x39c>
   35f00:	ldr	r0, [r4, #8]
   35f04:	ldr	r1, [pc, #344]	; 36064 <lua_error@@Base+0x6c4>
   35f08:	bl	35a48 <lua_error@@Base+0xa8>
   35f0c:	ldrb	lr, [r5, #2]
   35f10:	cmp	lr, #0
   35f14:	beq	36048 <lua_error@@Base+0x6a8>
   35f18:	ldrb	r0, [r5, #3]
   35f1c:	cmp	r0, #0
   35f20:	beq	36048 <lua_error@@Base+0x6a8>
   35f24:	ldrb	r3, [r6]
   35f28:	cmp	r3, lr
   35f2c:	bne	35eb0 <lua_error@@Base+0x510>
   35f30:	ldr	ip, [r4, #4]
   35f34:	mov	r1, #1
   35f38:	b	35f48 <lua_error@@Base+0x5a8>
   35f3c:	cmp	lr, r2
   35f40:	addeq	r1, r1, #1
   35f44:	mov	r6, r3
   35f48:	add	r3, r6, #1
   35f4c:	cmp	r3, ip
   35f50:	bcs	35eb0 <lua_error@@Base+0x510>
   35f54:	ldrb	r2, [r6, #1]
   35f58:	cmp	r0, r2
   35f5c:	bne	35f3c <lua_error@@Base+0x59c>
   35f60:	subs	r1, r1, #1
   35f64:	bne	35f44 <lua_error@@Base+0x5a4>
   35f68:	adds	r6, r6, #2
   35f6c:	beq	35eb0 <lua_error@@Base+0x510>
   35f70:	ldrb	r3, [r5, #4]
   35f74:	add	r5, r5, #4
   35f78:	b	35b44 <lua_error@@Base+0x1a4>
   35f7c:	add	r2, r9, r3
   35f80:	ldrb	r2, [r2, #189]	; 0xbd
   35f84:	tst	r2, #8
   35f88:	beq	35c04 <lua_error@@Base+0x264>
   35f8c:	subs	r1, r3, #49	; 0x31
   35f90:	bmi	36054 <lua_error@@Base+0x6b4>
   35f94:	ldr	r2, [r4, #12]
   35f98:	cmp	r1, r2
   35f9c:	bge	36054 <lua_error@@Base+0x6b4>
   35fa0:	add	r3, r4, r3, lsl #3
   35fa4:	ldr	r7, [r3, #-368]	; 0xfffffe90
   35fa8:	cmn	r7, #1
   35fac:	beq	36054 <lua_error@@Base+0x6b4>
   35fb0:	ldr	r2, [r4, #4]
   35fb4:	sub	r2, r2, r6
   35fb8:	cmp	r7, r2
   35fbc:	bhi	35eb0 <lua_error@@Base+0x510>
   35fc0:	ldr	r0, [r3, #-372]	; 0xfffffe8c
   35fc4:	mov	r2, r7
   35fc8:	mov	r1, r6
   35fcc:	bl	12d00 <memcmp@plt>
   35fd0:	cmp	r0, #0
   35fd4:	bne	35eb0 <lua_error@@Base+0x510>
   35fd8:	adds	r6, r6, r7
   35fdc:	beq	35eb0 <lua_error@@Base+0x510>
   35fe0:	ldrb	r3, [r5, #2]
   35fe4:	add	r5, r5, #2
   35fe8:	b	35b44 <lua_error@@Base+0x1a4>
   35fec:	add	r5, r7, #1
   35ff0:	mov	r2, r5
   35ff4:	add	r1, r6, #1
   35ff8:	mov	r0, r4
   35ffc:	bl	35b14 <lua_error@@Base+0x174>
   36000:	cmp	r0, #0
   36004:	beq	35ebc <lua_error@@Base+0x51c>
   36008:	b	35c9c <lua_error@@Base+0x2fc>
   3600c:	ldr	r0, [r4, #8]
   36010:	ldr	r1, [pc, #80]	; 36068 <lua_error@@Base+0x6c8>
   36014:	bl	35a48 <lua_error@@Base+0xa8>
   36018:	ldr	r0, [r0, #8]
   3601c:	ldr	r1, [pc, #72]	; 3606c <lua_error@@Base+0x6cc>
   36020:	bl	35a48 <lua_error@@Base+0xa8>
   36024:	mov	r3, r7
   36028:	mov	r2, r5
   3602c:	add	r1, r6, #1
   36030:	mov	r0, r4
   36034:	bl	3607c <lua_error@@Base+0x6dc>
   36038:	b	35c9c <lua_error@@Base+0x2fc>
   3603c:	ldr	r0, [r4, #8]
   36040:	ldr	r1, [pc, #40]	; 36070 <lua_error@@Base+0x6d0>
   36044:	bl	35a48 <lua_error@@Base+0xa8>
   36048:	ldr	r0, [r4, #8]
   3604c:	ldr	r1, [pc, #32]	; 36074 <lua_error@@Base+0x6d4>
   36050:	bl	35a48 <lua_error@@Base+0xa8>
   36054:	ldr	r0, [r4, #8]
   36058:	ldr	r1, [pc, #24]	; 36078 <lua_error@@Base+0x6d8>
   3605c:	bl	35a48 <lua_error@@Base+0xa8>
   36060:			; <UNDEFINED> instruction: 0x0006ecb8
   36064:	andeq	r0, r0, fp, lsr r7
   36068:	andeq	r0, r0, r4, lsr #13
   3606c:	andeq	r0, r0, r1, lsl r7
   36070:	andeq	r0, r0, r2, lsl #13
   36074:	strdeq	r0, [r0], -lr
   36078:	andeq	r0, r0, r5, lsr #14
   3607c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   36080:	mov	r9, r0
   36084:	ldr	r8, [r0, #4]
   36088:	mov	r7, r1
   3608c:	cmp	r1, r8
   36090:	mov	r5, r3
   36094:	bcs	360fc <lua_error@@Base+0x75c>
   36098:	mov	sl, r2
   3609c:	sub	r8, r8, r1
   360a0:	sub	r6, r1, #1
   360a4:	mov	r4, #0
   360a8:	b	360b8 <lua_error@@Base+0x718>
   360ac:	add	r4, r4, #1
   360b0:	cmp	r4, r8
   360b4:	beq	360d0 <lua_error@@Base+0x730>
   360b8:	mov	r2, r5
   360bc:	mov	r1, sl
   360c0:	ldrb	r0, [r6, #1]!
   360c4:	bl	1d154 <_start@@Base+0x9da4>
   360c8:	cmp	r0, #0
   360cc:	bne	360ac <lua_error@@Base+0x70c>
   360d0:	add	r5, r5, #1
   360d4:	add	r1, r7, r4
   360d8:	mov	r2, r5
   360dc:	mov	r0, r9
   360e0:	bl	35b14 <lua_error@@Base+0x174>
   360e4:	sub	r4, r4, #1
   360e8:	cmp	r0, #0
   360ec:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   360f0:	cmn	r4, #1
   360f4:	bne	360d4 <lua_error@@Base+0x734>
   360f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   360fc:	mov	r4, #0
   36100:	b	360d0 <lua_error@@Base+0x730>
   36104:	push	{lr}		; (str lr, [sp, #-4]!)
   36108:	sub	sp, sp, #20
   3610c:	ldr	r3, [pc, #168]	; 361bc <lua_error@@Base+0x81c>
   36110:	add	ip, sp, #16
   36114:	ldr	lr, [r0, #16]
   36118:	mov	r5, r1
   3611c:	str	r3, [ip, #-4]!
   36120:	sub	r1, lr, #8
   36124:	mov	r6, r2
   36128:	mov	r2, ip
   3612c:	mov	r4, r0
   36130:	bl	1d7f0 <_start@@Base+0xa440>
   36134:	ldr	r3, [pc, #132]	; 361c0 <lua_error@@Base+0x820>
   36138:	ldr	r1, [pc, #132]	; 361c4 <lua_error@@Base+0x824>
   3613c:	cmp	r5, r3
   36140:	ldrcs	r2, [r4, #20]
   36144:	ldrcs	r3, [r4, #16]
   36148:	ldr	r1, [r1]
   3614c:	subcs	r2, r2, r3
   36150:	addcs	r5, r5, r2, asr #3
   36154:	addcs	r5, r5, #1
   36158:	cmp	r0, #0
   3615c:	ldr	r2, [sp, #12]
   36160:	beq	36170 <lua_error@@Base+0x7d0>
   36164:	ldrb	r3, [r0, #3]
   36168:	cmp	r3, #104	; 0x68
   3616c:	beq	36198 <lua_error@@Base+0x7f8>
   36170:	add	r1, r1, #484	; 0x1e4
   36174:	add	r1, r1, #3
   36178:	mov	r3, r2
   3617c:	str	r6, [sp]
   36180:	mov	r2, r5
   36184:	mov	r0, r4
   36188:	bl	20040 <lua_getstack@@Base+0x388>
   3618c:	mov	r1, r0
   36190:	mov	r0, r4
   36194:	bl	359a8 <lua_error@@Base+0x8>
   36198:	subs	r5, r5, #1
   3619c:	bne	36170 <lua_error@@Base+0x7d0>
   361a0:	add	r1, r1, #456	; 0x1c8
   361a4:	add	r1, r1, #1
   361a8:	mov	r3, r6
   361ac:	mov	r0, r4
   361b0:	bl	20040 <lua_getstack@@Base+0x388>
   361b4:	mov	r1, r0
   361b8:	b	36190 <lua_error@@Base+0x7f0>
   361bc:	strdeq	r2, [r7], -r0
   361c0:			; <UNDEFINED> instruction: 0xffffd8f1
   361c4:	muleq	r8, ip, r1

000361c8 <luaL_argerror@@Base>:
   361c8:	push	{r4, lr}
   361cc:	bl	36104 <lua_error@@Base+0x764>
   361d0:	ldr	r3, [pc, #12]	; 361e4 <luaL_argerror@@Base+0x1c>
   361d4:	push	{r4, lr}
   361d8:	ldr	r3, [r3]
   361dc:	add	r2, r3, r2
   361e0:	bl	36104 <lua_error@@Base+0x764>
   361e4:	muleq	r8, ip, r1
   361e8:	push	{r4, lr}
   361ec:	ldr	r3, [r0, #16]
   361f0:	ldr	r4, [r0, #20]
   361f4:	cmp	r3, r4
   361f8:	bcs	36224 <luaL_argerror@@Base+0x5c>
   361fc:	add	r1, r3, #8
   36200:	cmp	r1, r4
   36204:	bcs	36228 <luaL_argerror@@Base+0x60>
   36208:	mov	r0, r3
   3620c:	bl	17394 <_start@@Base+0x3fe4>
   36210:	mvn	r3, #1
   36214:	sub	r0, r3, r0
   36218:	str	r0, [r4, #-4]
   3621c:	mov	r0, #1
   36220:	pop	{r4, pc}
   36224:	bl	13100 <pclose@plt+0x64>
   36228:	ldr	r2, [pc, #4]	; 36234 <luaL_argerror@@Base+0x6c>
   3622c:	mov	r1, #2
   36230:	bl	361d0 <luaL_argerror@@Base+0x8>
   36234:	andeq	r0, r0, r7, lsr #4
   36238:	ldr	r3, [r0, #16]
   3623c:	ldr	r1, [r0, #20]
   36240:	add	r2, r3, #8
   36244:	cmp	r1, r2
   36248:	bls	36270 <luaL_argerror@@Base+0xa8>
   3624c:	ldr	r2, [r3, #12]
   36250:	cmn	r2, #12
   36254:	beq	36268 <luaL_argerror@@Base+0xa0>
   36258:	cmn	r2, #1
   3625c:	bne	36270 <luaL_argerror@@Base+0xa8>
   36260:	mov	r0, #0
   36264:	bx	lr
   36268:	ldr	r0, [r3, #8]
   3626c:	bx	lr
   36270:	push	{r4, lr}
   36274:	mov	r1, #2
   36278:	ldr	r2, [pc]	; 36280 <luaL_argerror@@Base+0xb8>
   3627c:	bl	361d0 <luaL_argerror@@Base+0x8>
   36280:	andeq	r0, r0, r9, asr #4
   36284:	ldr	r3, [pc, #200]	; 36354 <luaL_argerror@@Base+0x18c>
   36288:	push	{r4, lr}
   3628c:	cmp	r1, r3
   36290:	mov	r4, r1
   36294:	mov	r5, r0
   36298:	bge	362d4 <luaL_argerror@@Base+0x10c>
   3629c:	sub	r3, r3, #3
   362a0:	cmp	r1, r3
   362a4:	ldrge	r3, [pc, #172]	; 36358 <luaL_argerror@@Base+0x190>
   362a8:	blt	36314 <luaL_argerror@@Base+0x14c>
   362ac:	ldr	r1, [pc, #168]	; 3635c <luaL_argerror@@Base+0x194>
   362b0:	mov	r0, r5
   362b4:	ldr	r1, [r1]
   362b8:	add	r1, r1, #516	; 0x204
   362bc:	add	r1, r1, #1
   362c0:	bl	20040 <lua_getstack@@Base+0x388>
   362c4:	mov	r1, r4
   362c8:	mov	r2, r0
   362cc:	mov	r0, r5
   362d0:	bl	36104 <lua_error@@Base+0x764>
   362d4:	cmp	r1, #0
   362d8:	subge	r3, r1, #-536870911	; 0xe0000001
   362dc:	ldr	r0, [r0, #20]
   362e0:	ldrge	r1, [r5, #16]
   362e4:	addlt	r3, r0, r1, lsl #3
   362e8:	addge	r3, r1, r3, lsl #3
   362ec:	cmp	r3, r0
   362f0:	bcs	3632c <luaL_argerror@@Base+0x164>
   362f4:	ldr	r3, [r3, #4]
   362f8:	cmn	r3, #14
   362fc:	bhi	3634c <luaL_argerror@@Base+0x184>
   36300:	mov	r3, #13
   36304:	ldr	r1, [pc, #84]	; 36360 <luaL_argerror@@Base+0x198>
   36308:	add	r3, r1, r3, lsl #2
   3630c:	ldr	r3, [r3, #-216]	; 0xffffff28
   36310:	b	362ac <luaL_argerror@@Base+0xe4>
   36314:	ldr	r1, [r0, #16]
   36318:	sub	r3, r3, r4
   3631c:	ldr	r1, [r1, #-8]
   36320:	ldrb	r0, [r1, #7]
   36324:	cmp	r0, r3
   36328:	bge	36334 <luaL_argerror@@Base+0x16c>
   3632c:	ldr	r3, [pc, #48]	; 36364 <luaL_argerror@@Base+0x19c>
   36330:	b	362ac <luaL_argerror@@Base+0xe4>
   36334:	ldr	r3, [pc, #44]	; 36368 <luaL_argerror@@Base+0x1a0>
   36338:	sub	r3, r3, r4
   3633c:	add	r1, r1, r3, lsl #3
   36340:	ldr	r3, [r1, #4]
   36344:	cmn	r3, #14
   36348:	bls	36300 <luaL_argerror@@Base+0x138>
   3634c:	mvn	r3, r3
   36350:	b	36304 <luaL_argerror@@Base+0x13c>
   36354:			; <UNDEFINED> instruction: 0xffffd8f1
   36358:	andeq	r3, r7, r8, lsr #13
   3635c:	muleq	r8, ip, r1
   36360:			; <UNDEFINED> instruction: 0x00070cb0
   36364:	andeq	r2, r7, r0, lsl sp
   36368:			; <UNDEFINED> instruction: 0xffffd8f0

0003636c <luaL_typerror@@Base>:
   3636c:	push	{r4, lr}
   36370:	bl	36284 <luaL_argerror@@Base+0xbc>
   36374:	ldr	r3, [pc, #12]	; 36388 <luaL_typerror@@Base+0x1c>
   36378:	push	{r4, lr}
   3637c:	add	r2, r3, r2, lsl #2
   36380:	ldr	r2, [r2, #-156]	; 0xffffff64
   36384:	bl	36284 <luaL_argerror@@Base+0xbc>
   36388:			; <UNDEFINED> instruction: 0x00070cb0
   3638c:	push	{r4, r5, r6, r7, r8, lr}
   36390:	sub	r6, r1, #-536870911	; 0xe0000001
   36394:	ldr	r5, [r0, #16]
   36398:	ldr	r3, [r0, #20]
   3639c:	add	r4, r5, r6, lsl #3
   363a0:	cmp	r3, r4
   363a4:	mov	r7, r0
   363a8:	mov	r8, r1
   363ac:	bls	36420 <luaL_typerror@@Base+0xb4>
   363b0:	ldr	r3, [r4, #4]
   363b4:	cmn	r3, #14
   363b8:	bls	363f4 <luaL_typerror@@Base+0x88>
   363bc:	cmn	r3, #5
   363c0:	bne	36420 <luaL_typerror@@Base+0xb4>
   363c4:	ldr	r0, [r5, r6, lsl #3]
   363c8:	mov	r2, #1
   363cc:	add	r0, r0, #16
   363d0:	mov	r1, r4
   363d4:	bl	189f0 <_start@@Base+0x5640>
   363d8:	cmp	r0, #3
   363dc:	mvneq	r3, #13
   363e0:	streq	r3, [r4, #4]
   363e4:	beq	363fc <luaL_typerror@@Base+0x90>
   363e8:	cmp	r0, #0
   363ec:	beq	36420 <luaL_typerror@@Base+0xb4>
   363f0:	ldr	r3, [r4, #4]
   363f4:	cmn	r3, #14
   363f8:	bne	36404 <luaL_typerror@@Base+0x98>
   363fc:	ldr	r0, [r5, r6, lsl #3]
   36400:	pop	{r4, r5, r6, r7, r8, pc}
   36404:	vldr	d7, [r4]
   36408:	mvn	r3, #13
   3640c:	vcvt.s32.f64	s15, d7
   36410:	vmov	r0, s15
   36414:	str	r0, [r5, r6, lsl #3]
   36418:	str	r3, [r4, #4]
   3641c:	pop	{r4, r5, r6, r7, r8, pc}
   36420:	mov	r1, r8
   36424:	mov	r0, r7
   36428:	mov	r2, #3
   3642c:	bl	36374 <luaL_typerror@@Base+0x8>
   36430:	ldrd	r2, [r0, #16]
   36434:	push	{r4, lr}
   36438:	mov	r4, r0
   3643c:	cmp	r3, r2
   36440:	sub	sp, sp, #8
   36444:	bls	36468 <luaL_typerror@@Base+0xfc>
   36448:	ldr	r1, [r2, #4]
   3644c:	cmn	r1, #9
   36450:	beq	3648c <luaL_typerror@@Base+0x120>
   36454:	cmn	r1, #1
   36458:	beq	36468 <luaL_typerror@@Base+0xfc>
   3645c:	mov	r1, #1
   36460:	bl	3638c <luaL_typerror@@Base+0x20>
   36464:	b	3646c <luaL_typerror@@Base+0x100>
   36468:	mov	r0, #1
   3646c:	add	r2, sp, #8
   36470:	mov	r1, r0
   36474:	str	r0, [r2, #-4]!
   36478:	mov	r0, r4
   3647c:	bl	14b74 <_start@@Base+0x17c4>
   36480:	subs	r2, r0, #0
   36484:	ldrne	r3, [r4, #20]
   36488:	beq	364bc <luaL_typerror@@Base+0x150>
   3648c:	ldr	r2, [r2]
   36490:	add	r1, r3, #8
   36494:	str	r1, [r4, #20]
   36498:	ldrb	r1, [r2, #6]
   3649c:	mov	r0, #1
   364a0:	cmp	r1, #0
   364a4:	ldreq	r1, [r2, #8]
   364a8:	ldrne	r1, [r4, #36]	; 0x24
   364ac:	mvn	r2, #11
   364b0:	stm	r3, {r1, r2}
   364b4:	add	sp, sp, #8
   364b8:	pop	{r4, pc}
   364bc:	mov	r0, r4
   364c0:	ldr	r2, [pc, #4]	; 364cc <luaL_typerror@@Base+0x160>
   364c4:	mov	r1, #1
   364c8:	bl	361d0 <luaL_argerror@@Base+0x8>
   364cc:	andeq	r0, r0, lr, ror r4
   364d0:	ldr	r2, [r0, #20]
   364d4:	ldr	r3, [r0, #16]
   364d8:	push	{r4, r5, r6, lr}
   364dc:	sub	r4, r2, r3
   364e0:	cmp	r4, #0
   364e4:	asr	r4, r4, #3
   364e8:	ble	364f8 <luaL_typerror@@Base+0x18c>
   364ec:	ldr	r1, [r3, #4]
   364f0:	cmn	r1, #5
   364f4:	beq	36528 <luaL_typerror@@Base+0x1bc>
   364f8:	mov	r1, #1
   364fc:	mov	r5, r0
   36500:	bl	3638c <luaL_typerror@@Base+0x20>
   36504:	cmp	r0, #0
   36508:	addlt	r0, r4, r0
   3650c:	blt	36518 <luaL_typerror@@Base+0x1ac>
   36510:	cmp	r4, r0
   36514:	movlt	r0, r4
   36518:	cmp	r0, #0
   3651c:	ble	36550 <luaL_typerror@@Base+0x1e4>
   36520:	sub	r0, r4, r0
   36524:	pop	{r4, r5, r6, pc}
   36528:	ldr	r3, [r3]
   3652c:	ldrb	r3, [r3, #16]
   36530:	cmp	r3, #35	; 0x23
   36534:	bne	364f8 <luaL_typerror@@Base+0x18c>
   36538:	sub	r4, r4, #1
   3653c:	mvn	r3, #13
   36540:	str	r4, [r2, #-8]
   36544:	str	r3, [r2, #-4]
   36548:	mov	r0, #1
   3654c:	pop	{r4, r5, r6, pc}
   36550:	mov	r0, r5
   36554:	ldr	r2, [pc, #4]	; 36560 <luaL_typerror@@Base+0x1f4>
   36558:	mov	r1, #1
   3655c:	bl	361d0 <luaL_argerror@@Base+0x8>
   36560:	andeq	r0, r0, r6, asr #8
   36564:	mov	r1, #1
   36568:	push	{r4, lr}
   3656c:	mov	r4, r0
   36570:	bl	3638c <luaL_typerror@@Base+0x20>
   36574:	cmp	r0, #102	; 0x66
   36578:	mvnls	r1, #13
   3657c:	ldrls	r3, [pc, #28]	; 365a0 <luaL_typerror@@Base+0x234>
   36580:	ldrls	r2, [r4, #20]
   36584:	addls	r0, r3, r0, lsl #3
   36588:	ldrls	r3, [r0, #-2272]	; 0xfffff720
   3658c:	strls	r1, [r2, #-4]
   36590:	movls	r0, #1
   36594:	strls	r3, [r2, #-8]
   36598:	movhi	r0, #0
   3659c:	pop	{r4, pc}
   365a0:			; <UNDEFINED> instruction: 0x00070cb0
   365a4:	push	{r4, lr}
   365a8:	mov	r1, #1
   365ac:	mov	r4, r0
   365b0:	bl	3638c <luaL_typerror@@Base+0x20>
   365b4:	cmp	r0, #512	; 0x200
   365b8:	bcs	365e8 <luaL_typerror@@Base+0x27c>
   365bc:	lsr	r2, r0, #5
   365c0:	ldr	r3, [r4, #8]
   365c4:	and	r0, r0, #31
   365c8:	add	r3, r3, r2, lsl #2
   365cc:	ldr	r2, [r4, #20]
   365d0:	ldr	r3, [r3, #1952]	; 0x7a0
   365d4:	mvn	r1, #13
   365d8:	add	r0, r3, r0, lsl #2
   365dc:	strd	r0, [r2, #-8]
   365e0:	mov	r0, #1
   365e4:	pop	{r4, pc}
   365e8:	mov	r0, #0
   365ec:	pop	{r4, pc}
   365f0:	push	{r4, lr}
   365f4:	mov	r1, #1
   365f8:	mov	r4, r0
   365fc:	bl	3638c <luaL_typerror@@Base+0x20>
   36600:	ldr	r3, [r4, #8]
   36604:	cmp	r0, #0
   36608:	popeq	{r4, pc}
   3660c:	sub	r3, r3, #48	; 0x30
   36610:	ldr	r2, [r3, #712]	; 0x2c8
   36614:	cmp	r2, r0
   36618:	ldrhi	r3, [r3, #704]	; 0x2c0
   3661c:	ldrhi	r0, [r3, r0, lsl #2]
   36620:	movls	r0, #0
   36624:	pop	{r4, pc}
   36628:	push	{r4, r5, r6, lr}
   3662c:	mov	r5, r0
   36630:	bl	365f0 <luaL_typerror@@Base+0x284>
   36634:	mov	r1, #2
   36638:	mov	r4, r0
   3663c:	mov	r0, r5
   36640:	bl	3638c <luaL_typerror@@Base+0x20>
   36644:	cmn	r0, #32768	; 0x8000
   36648:	movcs	r3, #0
   3664c:	movcc	r3, #1
   36650:	cmp	r4, #0
   36654:	moveq	r3, #0
   36658:	cmp	r3, #0
   3665c:	beq	36670 <luaL_typerror@@Base+0x304>
   36660:	ldr	r3, [r4, #8]
   36664:	add	r0, r0, #32768	; 0x8000
   36668:	cmp	r3, r0
   3666c:	bhi	36678 <luaL_typerror@@Base+0x30c>
   36670:	mov	r0, #0
   36674:	pop	{r4, r5, r6, pc}
   36678:	ldr	ip, [r4, #16]
   3667c:	lsl	r0, r0, #3
   36680:	add	r2, ip, r0
   36684:	ldr	r1, [pc, #100]	; 366f0 <luaL_typerror@@Base+0x384>
   36688:	ldrb	r4, [r2, #5]
   3668c:	ldr	r3, [r5, #20]
   36690:	mvn	lr, #13
   36694:	add	r1, r1, r4
   36698:	str	lr, [r3, #-12]
   3669c:	ldrb	r1, [r1, #36]	; 0x24
   366a0:	str	r1, [r3, #-16]
   366a4:	ldrh	r4, [r2, #4]
   366a8:	tst	r1, #3
   366ac:	stmdb	r3, {r4, lr}
   366b0:	ldrh	r0, [ip, r0]
   366b4:	subeq	r0, r0, #32768	; 0x8000
   366b8:	tst	r1, #12
   366bc:	mvn	r1, #13
   366c0:	strd	r0, [r3]
   366c4:	ldrh	r0, [r2, #2]
   366c8:	mvn	r1, #13
   366cc:	subeq	r0, r0, #32768	; 0x8000
   366d0:	strd	r0, [r3, #8]
   366d4:	ldrh	r2, [r2, #6]
   366d8:	add	r0, r3, #24
   366dc:	str	r0, [r5, #20]
   366e0:	mov	r0, #5
   366e4:	str	r2, [r3, #16]
   366e8:	str	r1, [r3, #20]
   366ec:	pop	{r4, r5, r6, pc}
   366f0:			; <UNDEFINED> instruction: 0x0006ecb8
   366f4:	push	{r4, r5, r6, r7, r8, lr}
   366f8:	sub	r7, r1, #-536870911	; 0xe0000001
   366fc:	ldr	r6, [r0, #16]
   36700:	ldr	r3, [r0, #20]
   36704:	add	r4, r6, r7, lsl #3
   36708:	cmp	r3, r4
   3670c:	mov	r5, r0
   36710:	mov	r8, r1
   36714:	bls	36768 <luaL_typerror@@Base+0x3fc>
   36718:	ldr	r3, [r4, #4]
   3671c:	cmn	r3, #14
   36720:	bls	3674c <luaL_typerror@@Base+0x3e0>
   36724:	cmn	r3, #5
   36728:	bne	36768 <luaL_typerror@@Base+0x3fc>
   3672c:	ldr	r0, [r6, r7, lsl #3]
   36730:	mov	r2, #2
   36734:	add	r0, r0, #16
   36738:	mov	r1, r4
   3673c:	bl	189f0 <_start@@Base+0x5640>
   36740:	cmp	r0, #0
   36744:	beq	36768 <luaL_typerror@@Base+0x3fc>
   36748:	ldr	r3, [r4, #4]
   3674c:	cmn	r3, #14
   36750:	ldreq	r3, [r6, r7, lsl #3]
   36754:	vmoveq	s0, r3
   36758:	vcvteq.f64.s32	d0, s0
   3675c:	vldrne	d0, [r4]
   36760:	vstreq	d0, [r4]
   36764:	pop	{r4, r5, r6, r7, r8, pc}
   36768:	mov	r1, r8
   3676c:	mov	r0, r5
   36770:	mov	r2, #3
   36774:	bl	36374 <luaL_typerror@@Base+0x8>
   36778:	ldr	r3, [r0, #16]
   3677c:	push	{r4, lr}
   36780:	mov	r1, #1
   36784:	ldr	r3, [r3, #-8]
   36788:	ldr	r4, [r3, #24]
   3678c:	bl	366f4 <luaL_typerror@@Base+0x388>
   36790:	add	r4, r4, #24
   36794:	mov	r0, r4
   36798:	bl	171a4 <_start@@Base+0x3df4>
   3679c:	mov	r0, #0
   367a0:	pop	{r4, pc}
   367a4:	push	{r4, lr}
   367a8:	mov	r1, #1
   367ac:	mov	r4, r0
   367b0:	bl	366f4 <luaL_typerror@@Base+0x388>
   367b4:	mov	r0, r4
   367b8:	mov	r1, #2
   367bc:	bl	3638c <luaL_typerror@@Base+0x20>
   367c0:	mov	r0, #0
   367c4:	pop	{r4, pc}
   367c8:	push	{r4, lr}
   367cc:	mov	r1, #1
   367d0:	mov	r4, r0
   367d4:	bl	366f4 <luaL_typerror@@Base+0x388>
   367d8:	mov	r0, r4
   367dc:	mov	r1, #2
   367e0:	bl	366f4 <luaL_typerror@@Base+0x388>
   367e4:	mov	r0, #0
   367e8:	pop	{r4, pc}
   367ec:	push	{r4, lr}
   367f0:	mov	r4, r0
   367f4:	vpush	{d8-d9}
   367f8:	mov	r1, #1
   367fc:	bl	366f4 <luaL_typerror@@Base+0x388>
   36800:	ldr	r3, [r4, #16]
   36804:	ldr	r2, [r4, #20]
   36808:	add	r3, r3, #8
   3680c:	cmp	r2, r3
   36810:	movls	r0, #0
   36814:	bhi	36820 <luaL_typerror@@Base+0x4b4>
   36818:	vpop	{d8-d9}
   3681c:	pop	{r4, pc}
   36820:	mov	r0, r4
   36824:	mov	r1, #2
   36828:	vmov.f64	d8, d0
   3682c:	bl	366f4 <luaL_typerror@@Base+0x388>
   36830:	vmov.f64	d9, d0
   36834:	vmov.f64	d0, d8
   36838:	bl	12d0c <log2@plt>
   3683c:	vmov.f64	d8, d0
   36840:	vmov.f64	d0, d9
   36844:	bl	12d0c <log2@plt>
   36848:	vldr	d7, [pc, #24]	; 36868 <luaL_typerror@@Base+0x4fc>
   3684c:	ldr	r3, [r4, #16]
   36850:	mov	r0, #2
   36854:	vdiv.f64	d0, d7, d0
   36858:	vmul.f64	d0, d0, d8
   3685c:	vpop	{d8-d9}
   36860:	vstr	d0, [r3, #-8]
   36864:	pop	{r4, pc}
   36868:	andeq	r0, r0, r0
   3686c:	svccc	0x00f00000	; IMB
   36870:	push	{r4, lr}
   36874:	mov	r1, #1
   36878:	bl	366f4 <luaL_typerror@@Base+0x388>
   3687c:	mov	r0, #0
   36880:	pop	{r4, pc}
   36884:	sub	r2, r1, #-536870911	; 0xe0000001
   36888:	ldr	r3, [r0, #16]
   3688c:	push	{r4, lr}
   36890:	add	ip, r3, r2, lsl #3
   36894:	ldr	lr, [r0, #20]
   36898:	cmp	lr, ip
   3689c:	bls	368b4 <luaL_typerror@@Base+0x548>
   368a0:	ldr	ip, [ip, #4]
   368a4:	cmn	ip, #9
   368a8:	bne	368b4 <luaL_typerror@@Base+0x548>
   368ac:	ldr	r0, [r3, r2, lsl #3]
   368b0:	pop	{r4, pc}
   368b4:	mov	r2, #6
   368b8:	bl	36374 <luaL_typerror@@Base+0x8>
   368bc:	ldrd	r2, [r0, #16]
   368c0:	push	{r4, lr}
   368c4:	cmp	r2, r3
   368c8:	bcs	368dc <luaL_typerror@@Base+0x570>
   368cc:	mov	r1, #2
   368d0:	bl	36884 <luaL_typerror@@Base+0x518>
   368d4:	mov	r0, #0
   368d8:	pop	{r4, pc}
   368dc:	ldr	r2, [pc, #4]	; 368e8 <luaL_typerror@@Base+0x57c>
   368e0:	mov	r1, #1
   368e4:	bl	361d0 <luaL_argerror@@Base+0x8>
   368e8:	andeq	r0, r0, r7, lsr #4
   368ec:	push	{r4, r5, r6, r7, r8, lr}
   368f0:	mov	r1, #1
   368f4:	mov	r7, r0
   368f8:	bl	36884 <luaL_typerror@@Base+0x518>
   368fc:	ldrb	r3, [r0, #6]
   36900:	cmp	r3, #0
   36904:	bne	369c8 <luaL_typerror@@Base+0x65c>
   36908:	mov	r6, r0
   3690c:	mov	r1, #2
   36910:	mov	r0, r7
   36914:	bl	3638c <luaL_typerror@@Base+0x20>
   36918:	ldrb	r2, [r6, #7]
   3691c:	sub	r3, r0, #1
   36920:	cmp	r2, r3
   36924:	mov	r5, r0
   36928:	bls	369f0 <luaL_typerror@@Base+0x684>
   3692c:	mov	r1, #3
   36930:	mov	r0, r7
   36934:	bl	36884 <luaL_typerror@@Base+0x518>
   36938:	ldrb	r3, [r0, #6]
   3693c:	mov	r4, r0
   36940:	cmp	r3, #0
   36944:	bne	369e8 <luaL_typerror@@Base+0x67c>
   36948:	mov	r1, #4
   3694c:	mov	r0, r7
   36950:	bl	3638c <luaL_typerror@@Base+0x20>
   36954:	ldrb	r2, [r4, #7]
   36958:	sub	r3, r0, #1
   3695c:	cmp	r2, r3
   36960:	bls	369d8 <luaL_typerror@@Base+0x66c>
   36964:	add	r4, r4, r0, lsl #2
   36968:	add	r5, r6, r5, lsl #2
   3696c:	ldr	r3, [r4, #16]
   36970:	str	r3, [r5, #16]
   36974:	ldr	r1, [r4, #16]
   36978:	ldrb	r3, [r1, #4]
   3697c:	tst	r3, #3
   36980:	beq	369b8 <luaL_typerror@@Base+0x64c>
   36984:	ldrb	r3, [r6, #4]
   36988:	tst	r3, #4
   3698c:	beq	369b8 <luaL_typerror@@Base+0x64c>
   36990:	ldr	r0, [r7, #8]
   36994:	ldrb	r2, [r0, #29]
   36998:	sub	r2, r2, #1
   3699c:	cmp	r2, #1
   369a0:	bls	369c0 <luaL_typerror@@Base+0x654>
   369a4:	ldrb	r2, [r0, #28]
   369a8:	bic	r3, r3, #7
   369ac:	and	r2, r2, #3
   369b0:	orr	r3, r2, r3
   369b4:	strb	r3, [r6, #4]
   369b8:	mov	r0, #0
   369bc:	pop	{r4, r5, r6, r7, r8, pc}
   369c0:	bl	17498 <_start@@Base+0x40e8>
   369c4:	b	369b8 <luaL_typerror@@Base+0x64c>
   369c8:	mov	r1, #1
   369cc:	mov	r0, r7
   369d0:	ldr	r2, [pc, #32]	; 369f8 <luaL_typerror@@Base+0x68c>
   369d4:	bl	361d0 <luaL_argerror@@Base+0x8>
   369d8:	mov	r1, #4
   369dc:	mov	r0, r7
   369e0:	ldr	r2, [pc, #20]	; 369fc <luaL_typerror@@Base+0x690>
   369e4:	bl	361d0 <luaL_argerror@@Base+0x8>
   369e8:	mov	r1, #3
   369ec:	b	369cc <luaL_typerror@@Base+0x660>
   369f0:	mov	r1, #2
   369f4:	b	369dc <luaL_typerror@@Base+0x670>
   369f8:	andeq	r0, r0, pc, asr r2
   369fc:	andeq	r0, r0, r6, asr #8
   36a00:	push	{r4, r5, r6, lr}
   36a04:	mov	r1, #1
   36a08:	mov	r5, r0
   36a0c:	bl	36884 <luaL_typerror@@Base+0x518>
   36a10:	mov	r1, #2
   36a14:	mov	r4, r0
   36a18:	mov	r0, r5
   36a1c:	bl	3638c <luaL_typerror@@Base+0x20>
   36a20:	ldrb	r2, [r4, #7]
   36a24:	sub	r3, r0, #1
   36a28:	cmp	r2, r3
   36a2c:	bls	36a60 <luaL_typerror@@Base+0x6f4>
   36a30:	ldrb	r2, [r4, #6]
   36a34:	ldr	r3, [r5, #20]
   36a38:	cmp	r2, #0
   36a3c:	addeq	r4, r4, r0, lsl #2
   36a40:	addne	r0, r0, #2
   36a44:	ldreq	r4, [r4, #16]
   36a48:	addne	r4, r4, r0, lsl #3
   36a4c:	mvn	r2, #3
   36a50:	str	r4, [r3, #-8]
   36a54:	str	r2, [r3, #-4]
   36a58:	mov	r0, #1
   36a5c:	pop	{r4, r5, r6, pc}
   36a60:	mov	r0, r5
   36a64:	ldr	r2, [pc, #4]	; 36a70 <luaL_typerror@@Base+0x704>
   36a68:	mov	r1, #2
   36a6c:	bl	361d0 <luaL_argerror@@Base+0x8>
   36a70:	andeq	r0, r0, r6, asr #8
   36a74:	sub	r2, r1, #-536870911	; 0xe0000001
   36a78:	ldr	r3, [r0, #16]
   36a7c:	push	{r4, lr}
   36a80:	add	ip, r3, r2, lsl #3
   36a84:	ldr	lr, [r0, #20]
   36a88:	cmp	lr, ip
   36a8c:	bls	36aa4 <luaL_typerror@@Base+0x738>
   36a90:	ldr	ip, [ip, #4]
   36a94:	cmn	ip, #12
   36a98:	bne	36aa4 <luaL_typerror@@Base+0x738>
   36a9c:	ldr	r0, [r3, r2, lsl #3]
   36aa0:	pop	{r4, pc}
   36aa4:	mov	r2, #5
   36aa8:	bl	36374 <luaL_typerror@@Base+0x8>
   36aac:	push	{r4, lr}
   36ab0:	mov	r4, r0
   36ab4:	mov	r1, #1
   36ab8:	bl	36a74 <luaL_typerror@@Base+0x708>
   36abc:	ldr	r3, [r4, #16]
   36ac0:	ldr	r2, [r4, #20]
   36ac4:	add	r3, r3, #8
   36ac8:	cmp	r2, r3
   36acc:	bls	36ad8 <luaL_typerror@@Base+0x76c>
   36ad0:	mov	r0, #0
   36ad4:	pop	{r4, pc}
   36ad8:	mov	r0, r4
   36adc:	ldr	r2, [pc, #4]	; 36ae8 <luaL_typerror@@Base+0x77c>
   36ae0:	mov	r1, #2
   36ae4:	bl	361d0 <luaL_argerror@@Base+0x8>
   36ae8:	andeq	r0, r0, r7, lsr #4
   36aec:	push	{r4, r5, r6, lr}
   36af0:	mov	r1, #2
   36af4:	sub	sp, sp, #8
   36af8:	mov	r4, r0
   36afc:	bl	36a74 <luaL_typerror@@Base+0x708>
   36b00:	ldr	r3, [r4, #20]
   36b04:	mov	r5, r0
   36b08:	ldr	r0, [r4, #16]
   36b0c:	cmp	r3, r0
   36b10:	bls	36b20 <luaL_typerror@@Base+0x7b4>
   36b14:	ldr	r3, [r0, #4]
   36b18:	cmn	r3, #9
   36b1c:	beq	36b5c <luaL_typerror@@Base+0x7f0>
   36b20:	mov	r1, #1
   36b24:	mov	r0, r4
   36b28:	bl	3638c <luaL_typerror@@Base+0x20>
   36b2c:	cmp	r0, #0
   36b30:	str	r0, [sp, #4]
   36b34:	streq	r5, [r4, #36]	; 0x24
   36b38:	bne	36b44 <luaL_typerror@@Base+0x7d8>
   36b3c:	add	sp, sp, #8
   36b40:	pop	{r4, r5, r6, pc}
   36b44:	mov	r1, r0
   36b48:	add	r2, sp, #4
   36b4c:	mov	r0, r4
   36b50:	bl	14b74 <_start@@Base+0x17c4>
   36b54:	cmp	r0, #0
   36b58:	beq	36bd4 <luaL_typerror@@Base+0x868>
   36b5c:	ldr	r6, [r0]
   36b60:	ldrb	r3, [r6, #6]
   36b64:	cmp	r3, #0
   36b68:	bne	36bf0 <luaL_typerror@@Base+0x884>
   36b6c:	str	r5, [r6, #8]
   36b70:	ldrb	r3, [r5, #4]
   36b74:	tst	r3, #3
   36b78:	beq	36bb0 <luaL_typerror@@Base+0x844>
   36b7c:	ldrb	r3, [r6, #4]
   36b80:	tst	r3, #4
   36b84:	beq	36bb0 <luaL_typerror@@Base+0x844>
   36b88:	ldr	r0, [r4, #8]
   36b8c:	ldrb	r2, [r0, #29]
   36b90:	sub	r2, r2, #1
   36b94:	cmp	r2, #1
   36b98:	bls	36be4 <luaL_typerror@@Base+0x878>
   36b9c:	ldrb	r2, [r0, #28]
   36ba0:	bic	r3, r3, #7
   36ba4:	and	r2, r2, #3
   36ba8:	orr	r3, r2, r3
   36bac:	strb	r3, [r6, #4]
   36bb0:	ldr	r3, [r4, #20]
   36bb4:	mvn	r2, #8
   36bb8:	add	r1, r3, #8
   36bbc:	str	r1, [r4, #20]
   36bc0:	mov	r0, #1
   36bc4:	str	r6, [r3]
   36bc8:	str	r2, [r3, #4]
   36bcc:	add	sp, sp, #8
   36bd0:	pop	{r4, r5, r6, pc}
   36bd4:	mov	r0, r4
   36bd8:	ldr	r2, [pc, #28]	; 36bfc <luaL_typerror@@Base+0x890>
   36bdc:	mov	r1, #1
   36be0:	bl	361d0 <luaL_argerror@@Base+0x8>
   36be4:	mov	r1, r5
   36be8:	bl	17498 <_start@@Base+0x40e8>
   36bec:	b	36bb0 <luaL_typerror@@Base+0x844>
   36bf0:	mov	r0, r4
   36bf4:	ldr	r1, [pc, #4]	; 36c00 <luaL_typerror@@Base+0x894>
   36bf8:	bl	35a48 <lua_error@@Base+0xa8>
   36bfc:	andeq	r0, r0, lr, ror r4
   36c00:			; <UNDEFINED> instruction: 0x000004be
   36c04:	push	{r4, r5, r6, r7, r8, lr}
   36c08:	mov	r1, #1
   36c0c:	mov	r4, r0
   36c10:	bl	36a74 <luaL_typerror@@Base+0x708>
   36c14:	mov	r6, r0
   36c18:	mov	r0, r4
   36c1c:	bl	36238 <luaL_argerror@@Base+0x70>
   36c20:	ldr	r5, [r4, #16]
   36c24:	ldr	r8, [r4, #8]
   36c28:	mov	r1, r5
   36c2c:	mov	r2, #17
   36c30:	mov	r7, r0
   36c34:	mov	r0, r8
   36c38:	bl	1b010 <_start@@Base+0x7c60>
   36c3c:	ldr	r3, [r0, #4]
   36c40:	cmn	r3, #1
   36c44:	bne	36c98 <luaL_typerror@@Base+0x92c>
   36c48:	cmp	r7, #0
   36c4c:	str	r7, [r6, #16]
   36c50:	beq	36c84 <luaL_typerror@@Base+0x918>
   36c54:	ldrb	r3, [r7, #4]
   36c58:	tst	r3, #3
   36c5c:	beq	36c84 <luaL_typerror@@Base+0x918>
   36c60:	ldrb	r3, [r6, #4]
   36c64:	tst	r3, #4
   36c68:	beq	36c84 <luaL_typerror@@Base+0x918>
   36c6c:	bic	r3, r3, #4
   36c70:	strb	r3, [r6, #4]
   36c74:	ldr	r3, [r8, #48]	; 0x30
   36c78:	ldr	r5, [r4, #16]
   36c7c:	str	r3, [r6, #12]
   36c80:	str	r6, [r8, #48]	; 0x30
   36c84:	mvn	r3, #11
   36c88:	str	r6, [r5, #-8]
   36c8c:	str	r3, [r5, #-4]
   36c90:	mov	r0, #2
   36c94:	pop	{r4, r5, r6, r7, r8, pc}
   36c98:	mov	r0, r4
   36c9c:	ldr	r1, [pc]	; 36ca4 <luaL_typerror@@Base+0x938>
   36ca0:	bl	35a48 <lua_error@@Base+0xa8>
   36ca4:			; <UNDEFINED> instruction: 0x000003b7
   36ca8:	push	{r4, lr}
   36cac:	mov	r1, #1
   36cb0:	mov	r4, r0
   36cb4:	bl	36a74 <luaL_typerror@@Base+0x708>
   36cb8:	mov	r0, r4
   36cbc:	mov	r1, #2
   36cc0:	bl	3638c <luaL_typerror@@Base+0x20>
   36cc4:	mov	r0, #0
   36cc8:	pop	{r4, pc}
   36ccc:	push	{r4, lr}
   36cd0:	mov	r1, #1
   36cd4:	bl	36a74 <luaL_typerror@@Base+0x708>
   36cd8:	mov	r0, #0
   36cdc:	pop	{r4, pc}
   36ce0:	push	{r4, lr}
   36ce4:	mov	r1, #1
   36ce8:	bl	36a74 <luaL_typerror@@Base+0x708>
   36cec:	bl	14804 <_start@@Base+0x1454>
   36cf0:	mov	r0, #0
   36cf4:	pop	{r4, pc}
   36cf8:	push	{r4, lr}
   36cfc:	mov	r1, #1
   36d00:	mov	r4, r0
   36d04:	bl	36a74 <luaL_typerror@@Base+0x708>
   36d08:	ldr	r1, [r0, #24]
   36d0c:	ldr	r2, [r0, #8]
   36d10:	subs	r3, r1, #1
   36d14:	bmi	36d4c <luaL_typerror@@Base+0x9e0>
   36d18:	add	ip, r2, r3, lsl #3
   36d1c:	ldr	ip, [ip, #4]
   36d20:	cmn	ip, #1
   36d24:	subeq	r1, r1, #2
   36d28:	addeq	r2, r2, r1, lsl #3
   36d2c:	beq	36d44 <luaL_typerror@@Base+0x9d8>
   36d30:	b	36db8 <luaL_typerror@@Base+0xa4c>
   36d34:	ldr	r1, [r2, #4]
   36d38:	sub	r2, r2, #8
   36d3c:	cmn	r1, #1
   36d40:	bne	36db8 <luaL_typerror@@Base+0xa4c>
   36d44:	subs	r3, r3, #1
   36d48:	bcs	36d34 <luaL_typerror@@Base+0x9c8>
   36d4c:	vldr	d7, [pc, #116]	; 36dc8 <luaL_typerror@@Base+0xa5c>
   36d50:	ldr	r2, [r0, #28]
   36d54:	ldr	r3, [r0, #20]
   36d58:	cmp	r2, #0
   36d5c:	blt	36da8 <luaL_typerror@@Base+0xa3c>
   36d60:	add	r2, r2, r2, lsl #1
   36d64:	sub	r1, r3, #24
   36d68:	add	r3, r3, r2, lsl #3
   36d6c:	ldr	r2, [r3, #4]
   36d70:	cmn	r2, #1
   36d74:	beq	36d9c <luaL_typerror@@Base+0xa30>
   36d78:	ldr	r2, [r3, #12]
   36d7c:	cmn	r2, #14
   36d80:	bhi	36d9c <luaL_typerror@@Base+0xa30>
   36d84:	vldreq	s13, [r3, #8]
   36d88:	vldrne	d6, [r3, #8]
   36d8c:	vcvteq.f64.s32	d6, s13
   36d90:	vcmp.f64	d6, d7
   36d94:	vmrs	APSR_nzcv, fpscr
   36d98:	vmovgt.f64	d7, d6
   36d9c:	sub	r3, r3, #24
   36da0:	cmp	r1, r3
   36da4:	bne	36d6c <luaL_typerror@@Base+0xa00>
   36da8:	ldr	r3, [r4, #20]
   36dac:	mov	r0, #1
   36db0:	vstr	d7, [r3, #-8]
   36db4:	pop	{r4, pc}
   36db8:	vmov	s15, r3
   36dbc:	vcvt.f64.s32	d7, s15
   36dc0:	b	36d50 <luaL_typerror@@Base+0x9e4>
   36dc4:	nop			; (mov r0, r0)
	...
   36dd0:	push	{r4, r5, r6, lr}
   36dd4:	ldr	r3, [r0, #20]
   36dd8:	ldr	r4, [r0, #16]
   36ddc:	cmp	r4, r3
   36de0:	bcs	36e84 <luaL_typerror@@Base+0xb18>
   36de4:	mov	r2, r1
   36de8:	mov	r5, r0
   36dec:	mov	r6, r1
   36df0:	ldr	r0, [r0, #8]
   36df4:	mov	r1, r4
   36df8:	bl	1b010 <_start@@Base+0x7c60>
   36dfc:	ldr	r3, [r4, #4]
   36e00:	cmn	r3, #11
   36e04:	beq	36e40 <luaL_typerror@@Base+0xad4>
   36e08:	cmn	r3, #12
   36e0c:	bne	36e4c <luaL_typerror@@Base+0xae0>
   36e10:	ldr	r3, [r4, #-8]
   36e14:	mvn	r2, #8
   36e18:	cmp	r6, #20
   36e1c:	ldr	r3, [r3, #24]
   36e20:	str	r2, [r4, #-4]
   36e24:	str	r3, [r4, #-8]
   36e28:	beq	36e5c <luaL_typerror@@Base+0xaf0>
   36e2c:	mov	r2, #0
   36e30:	mvn	r3, #13
   36e34:	mov	r0, #4
   36e38:	strd	r2, [r4, #8]
   36e3c:	pop	{r4, r5, r6, pc}
   36e40:	ldr	r3, [r0, #4]
   36e44:	cmn	r3, #1
   36e48:	bne	36e6c <luaL_typerror@@Base+0xb00>
   36e4c:	mov	r0, r5
   36e50:	mov	r2, #5
   36e54:	mov	r1, #1
   36e58:	bl	36374 <luaL_typerror@@Base+0x8>
   36e5c:	mvn	r3, #0
   36e60:	str	r3, [r4, #12]
   36e64:	mov	r0, #4
   36e68:	pop	{r4, r5, r6, pc}
   36e6c:	ldrd	r2, [r0]
   36e70:	add	r1, r4, #8
   36e74:	str	r1, [r5, #20]
   36e78:	mvn	r0, #0
   36e7c:	strd	r2, [r4, #-8]
   36e80:	pop	{r4, r5, r6, pc}
   36e84:	ldr	r2, [pc, #4]	; 36e90 <luaL_typerror@@Base+0xb24>
   36e88:	mov	r1, #1
   36e8c:	bl	361d0 <luaL_argerror@@Base+0x8>
   36e90:	andeq	r0, r0, r7, lsr #4
   36e94:	mov	r1, #21
   36e98:	b	36dd0 <luaL_typerror@@Base+0xa64>
   36e9c:	mov	r1, #20
   36ea0:	b	36dd0 <luaL_typerror@@Base+0xa64>
   36ea4:	sub	r2, r1, #-536870911	; 0xe0000001
   36ea8:	ldr	r3, [r0, #16]
   36eac:	push	{r4, r5, r6, lr}
   36eb0:	mov	r6, r1
   36eb4:	ldr	r1, [r0, #20]
   36eb8:	add	r4, r3, r2, lsl #3
   36ebc:	cmp	r1, r4
   36ec0:	mov	r5, r0
   36ec4:	bls	36f00 <luaL_typerror@@Base+0xb94>
   36ec8:	ldr	r1, [r4, #4]
   36ecc:	cmn	r1, #14
   36ed0:	popls	{r4, r5, r6, pc}
   36ed4:	cmn	r1, #5
   36ed8:	bne	36f00 <luaL_typerror@@Base+0xb94>
   36edc:	ldr	r0, [r3, r2, lsl #3]
   36ee0:	mov	r1, r4
   36ee4:	mov	r2, #1
   36ee8:	add	r0, r0, #16
   36eec:	bl	189f0 <_start@@Base+0x5640>
   36ef0:	cmp	r0, #3
   36ef4:	beq	36f10 <luaL_typerror@@Base+0xba4>
   36ef8:	cmp	r0, #0
   36efc:	popne	{r4, r5, r6, pc}
   36f00:	mov	r1, r6
   36f04:	mov	r0, r5
   36f08:	mov	r2, #3
   36f0c:	bl	36374 <luaL_typerror@@Base+0x8>
   36f10:	mvn	r3, #13
   36f14:	str	r3, [r4, #4]
   36f18:	pop	{r4, r5, r6, pc}
   36f1c:	ldr	r3, [r0, #16]
   36f20:	push	{r4, r5, r6, lr}
   36f24:	mov	r4, r0
   36f28:	ldr	r2, [r3, #-8]
   36f2c:	ldr	r5, [r0, #20]
   36f30:	vpush	{d8-d9}
   36f34:	sub	r5, r5, r3
   36f38:	ldr	r3, [r2, #24]
   36f3c:	add	r6, r3, #24
   36f40:	ldr	r3, [r3, #56]	; 0x38
   36f44:	cmp	r3, #0
   36f48:	beq	37034 <luaL_typerror@@Base+0xcc8>
   36f4c:	mov	r0, r6
   36f50:	bl	17000 <_start@@Base+0x3c50>
   36f54:	vldr	d8, [pc, #236]	; 37048 <luaL_typerror@@Base+0xcdc>
   36f58:	cmp	r5, #0
   36f5c:	vmov	d7, r0, r1
   36f60:	vsub.f64	d8, d7, d8
   36f64:	bgt	36f84 <luaL_typerror@@Base+0xc18>
   36f68:	ldr	r3, [r4, #20]
   36f6c:	add	r2, r3, #8
   36f70:	str	r2, [r4, #20]
   36f74:	vstr	d8, [r3]
   36f78:	vpop	{d8-d9}
   36f7c:	mov	r0, #1
   36f80:	pop	{r4, r5, r6, pc}
   36f84:	mov	r1, #1
   36f88:	mov	r0, r4
   36f8c:	bl	36ea4 <luaL_typerror@@Base+0xb38>
   36f90:	ldr	r3, [r4, #16]
   36f94:	ldr	r2, [r3, #4]
   36f98:	cmn	r2, #14
   36f9c:	moveq	r6, #1
   36fa0:	vldreq	s18, [r3]
   36fa4:	vldrne	d9, [r3]
   36fa8:	movne	r6, #0
   36fac:	vcvteq.f64.s32	d9, s18
   36fb0:	cmp	r5, #8
   36fb4:	beq	37020 <luaL_typerror@@Base+0xcb4>
   36fb8:	mov	r1, #2
   36fbc:	mov	r0, r4
   36fc0:	bl	36ea4 <luaL_typerror@@Base+0xb38>
   36fc4:	ldr	r3, [r4, #16]
   36fc8:	vldr	d7, [pc, #120]	; 37048 <luaL_typerror@@Base+0xcdc>
   36fcc:	ldr	r2, [r3, #12]
   36fd0:	cmn	r2, #14
   36fd4:	movne	r6, #0
   36fd8:	vldreq	s0, [r3, #8]
   36fdc:	vldrne	d0, [r3, #8]
   36fe0:	vcvteq.f64.s32	d0, s0
   36fe4:	vsub.f64	d0, d0, d9
   36fe8:	vadd.f64	d0, d0, d7
   36fec:	vmul.f64	d0, d0, d8
   36ff0:	bl	6d568 <luaL_openlibs@@Base+0x3da8>
   36ff4:	vadd.f64	d8, d0, d9
   36ff8:	cmp	r6, #0
   36ffc:	ldr	r3, [r4, #20]
   37000:	beq	36f6c <luaL_typerror@@Base+0xc00>
   37004:	vcvt.s32.f64	s16, d8
   37008:	mvn	r2, #13
   3700c:	mov	r0, #1
   37010:	str	r2, [r3, #-4]
   37014:	vstr	s16, [r3, #-8]
   37018:	vpop	{d8-d9}
   3701c:	pop	{r4, r5, r6, pc}
   37020:	vmul.f64	d0, d9, d8
   37024:	bl	6d568 <luaL_openlibs@@Base+0x3da8>
   37028:	vldr	d8, [pc, #24]	; 37048 <luaL_typerror@@Base+0xcdc>
   3702c:	vadd.f64	d8, d0, d8
   37030:	b	36ff8 <luaL_typerror@@Base+0xc8c>
   37034:	vldr	d0, [pc, #20]	; 37050 <luaL_typerror@@Base+0xce4>
   37038:	mov	r0, r6
   3703c:	bl	171a4 <_start@@Base+0x3df4>
   37040:	b	36f4c <luaL_typerror@@Base+0xbe0>
   37044:	nop			; (mov r0, r0)
   37048:	andeq	r0, r0, r0
   3704c:	svccc	0x00f00000	; IMB
	...
   37058:	push	{r4, r5, r6, lr}
   3705c:	mov	r5, r0
   37060:	mov	r4, #0
   37064:	add	r4, r4, #1
   37068:	mov	r1, r4
   3706c:	mov	r0, r5
   37070:	bl	36ea4 <luaL_typerror@@Base+0xb38>
   37074:	ldr	r3, [r5, #16]
   37078:	ldr	r2, [r5, #20]
   3707c:	add	r3, r3, r4, lsl #3
   37080:	cmp	r2, r3
   37084:	bhi	37064 <luaL_typerror@@Base+0xcf8>
   37088:	mov	r0, #0
   3708c:	pop	{r4, r5, r6, pc}
   37090:	push	{r4, lr}
   37094:	mov	r1, #1
   37098:	bl	36ea4 <luaL_typerror@@Base+0xb38>
   3709c:	mov	r0, #0
   370a0:	pop	{r4, pc}
   370a4:	ldr	r3, [r0, #16]
   370a8:	ldr	r2, [r0, #20]
   370ac:	cmp	r2, r3
   370b0:	bls	370fc <luaL_typerror@@Base+0xd90>
   370b4:	ldr	r2, [r3, #4]
   370b8:	cmn	r2, #8
   370bc:	beq	370f4 <luaL_typerror@@Base+0xd88>
   370c0:	cmn	r2, #9
   370c4:	bne	370fc <luaL_typerror@@Base+0xd90>
   370c8:	ldr	r3, [r3]
   370cc:	ldrb	r2, [r3, #6]
   370d0:	cmp	r2, #0
   370d4:	beq	370e8 <luaL_typerror@@Base+0xd7c>
   370d8:	cmp	r1, #0
   370dc:	beq	370fc <luaL_typerror@@Base+0xd90>
   370e0:	mov	r0, #0
   370e4:	bx	lr
   370e8:	ldr	r0, [r3, #16]
   370ec:	sub	r0, r0, #64	; 0x40
   370f0:	bx	lr
   370f4:	ldr	r0, [r3]
   370f8:	bx	lr
   370fc:	push	{r4, lr}
   37100:	mov	r2, #6
   37104:	mov	r1, #1
   37108:	bl	36374 <luaL_typerror@@Base+0x8>
   3710c:	push	{r4, r5, r6, lr}
   37110:	mov	r1, #0
   37114:	mov	r4, r0
   37118:	bl	370a4 <luaL_typerror@@Base+0xd38>
   3711c:	mov	r1, #2
   37120:	mov	r5, r0
   37124:	mov	r0, r4
   37128:	bl	3638c <luaL_typerror@@Base+0x20>
   3712c:	subs	r3, r0, #0
   37130:	blt	3715c <luaL_typerror@@Base+0xdf0>
   37134:	ldr	r2, [r5, #28]
   37138:	cmp	r2, r3
   3713c:	ble	3716c <luaL_typerror@@Base+0xe00>
   37140:	ldr	r1, [r5, #16]
   37144:	lsl	r3, r3, #3
   37148:	ldr	r2, [r4, #20]
   3714c:	ldrd	r4, [r3, r1]
   37150:	mov	r0, #1
   37154:	strd	r4, [r2, #-8]
   37158:	pop	{r4, r5, r6, pc}
   3715c:	ldr	r2, [r5, #24]
   37160:	mvn	r1, r3
   37164:	cmp	r1, r2
   37168:	blt	37174 <luaL_typerror@@Base+0xe08>
   3716c:	mov	r0, #0
   37170:	pop	{r4, r5, r6, pc}
   37174:	ldr	r1, [r5, #16]
   37178:	ldr	r2, [r4, #20]
   3717c:	mov	r0, #1
   37180:	ldr	r1, [r1, r3, lsl #2]
   37184:	ldrb	r3, [r1, #5]
   37188:	str	r1, [r2, #-8]
   3718c:	mvn	r3, r3
   37190:	str	r3, [r2, #-4]
   37194:	pop	{r4, r5, r6, pc}
   37198:	push	{r4, r5, r6, lr}
   3719c:	mov	r1, #0
   371a0:	mov	r4, r0
   371a4:	bl	370a4 <luaL_typerror@@Base+0xd38>
   371a8:	mov	r1, #2
   371ac:	mov	r5, r0
   371b0:	mov	r0, r4
   371b4:	bl	3638c <luaL_typerror@@Base+0x20>
   371b8:	ldr	r3, [r5, #8]
   371bc:	cmp	r3, r0
   371c0:	bhi	371cc <luaL_typerror@@Base+0xe60>
   371c4:	mov	r0, #0
   371c8:	pop	{r4, r5, r6, pc}
   371cc:	add	r0, r0, #16
   371d0:	ldr	r3, [r4, #20]
   371d4:	ldr	r0, [r5, r0, lsl #2]
   371d8:	ldr	ip, [pc, #40]	; 37208 <luaL_typerror@@Base+0xe9c>
   371dc:	str	r0, [r3]
   371e0:	uxtb	r2, r0
   371e4:	mvn	r1, #13
   371e8:	lsl	r2, r2, #1
   371ec:	str	r1, [r3, #4]
   371f0:	ldrh	r0, [ip, r2]
   371f4:	add	r2, r3, #16
   371f8:	strd	r0, [r3, #8]
   371fc:	mov	r0, #2
   37200:	str	r2, [r4, #20]
   37204:	pop	{r4, r5, r6, pc}
   37208:	andeq	pc, r6, ip, ror r0	; <UNPREDICTABLE>
   3720c:	ldr	r3, [r0, #16]
   37210:	ldr	r2, [r0, #20]
   37214:	cmp	r3, r2
   37218:	bcs	37230 <luaL_typerror@@Base+0xec4>
   3721c:	ldr	r2, [r3, #4]
   37220:	cmn	r2, #11
   37224:	bne	37230 <luaL_typerror@@Base+0xec4>
   37228:	ldr	r0, [r3]
   3722c:	bx	lr
   37230:	push	{r4, lr}
   37234:	mov	r2, #10
   37238:	mov	r1, #1
   3723c:	bl	36374 <luaL_typerror@@Base+0x8>
   37240:	ldr	r3, [r0, #16]
   37244:	ldr	r2, [r0, #20]
   37248:	cmp	r3, r2
   3724c:	bcs	37274 <luaL_typerror@@Base+0xf08>
   37250:	ldr	r2, [r3, #4]
   37254:	cmn	r2, #13
   37258:	bne	37274 <luaL_typerror@@Base+0xf08>
   3725c:	ldr	r3, [r3]
   37260:	ldrb	r2, [r3, #6]
   37264:	cmp	r2, #1
   37268:	bne	37274 <luaL_typerror@@Base+0xf08>
   3726c:	add	r0, r3, #24
   37270:	bx	lr
   37274:	push	{r4, lr}
   37278:	mov	r1, #1
   3727c:	ldr	r2, [pc]	; 37284 <luaL_typerror@@Base+0xf18>
   37280:	bl	36284 <luaL_argerror@@Base+0xbc>
   37284:	andeq	r2, r7, ip, lsl sp
   37288:	push	{r4, lr}
   3728c:	mov	r4, r0
   37290:	bl	37240 <luaL_typerror@@Base+0xed4>
   37294:	ldr	r3, [r0]
   37298:	cmp	r3, #0
   3729c:	popne	{r4, pc}
   372a0:	mov	r0, r4
   372a4:	ldr	r1, [pc]	; 372ac <luaL_typerror@@Base+0xf40>
   372a8:	bl	35a48 <lua_error@@Base+0xa8>
   372ac:	ldrdeq	r0, [r0], -r3
   372b0:	ldr	r3, [r0, #16]
   372b4:	ldr	ip, [r0, #20]
   372b8:	push	{r4, lr}
   372bc:	cmp	ip, r3
   372c0:	sub	sp, sp, #88	; 0x58
   372c4:	mov	r4, r0
   372c8:	bls	37348 <luaL_typerror@@Base+0xfdc>
   372cc:	ldr	lr, [r3, #4]
   372d0:	cmn	lr, #5
   372d4:	beq	37304 <luaL_typerror@@Base+0xf98>
   372d8:	cmn	lr, #11
   372dc:	bne	37348 <luaL_typerror@@Base+0xfdc>
   372e0:	cmp	r2, #0
   372e4:	cmpne	ip, r2
   372e8:	bhi	37358 <luaL_typerror@@Base+0xfec>
   372ec:	ldr	r3, [r3]
   372f0:	ldrh	r0, [r3, #6]
   372f4:	cmp	r0, #21
   372f8:	ldreq	r0, [r3, #8]
   372fc:	add	sp, sp, #88	; 0x58
   37300:	pop	{r4, pc}
   37304:	ldr	r3, [r3]
   37308:	mov	ip, #18
   3730c:	add	r3, r3, #16
   37310:	add	r0, sp, #4
   37314:	str	r3, [sp, #60]	; 0x3c
   37318:	str	r3, [sp, #28]
   3731c:	str	r4, [sp, #48]	; 0x30
   37320:	str	r1, [sp, #52]	; 0x34
   37324:	str	r2, [sp, #56]	; 0x38
   37328:	str	ip, [sp, #76]	; 0x4c
   3732c:	bl	19624 <_start@@Base+0x6274>
   37330:	cmp	r0, #0
   37334:	ldreq	r0, [sp, #16]
   37338:	beq	372fc <luaL_typerror@@Base+0xf90>
   3733c:	mov	r1, r0
   37340:	mov	r0, r4
   37344:	bl	20ff0 <luaL_where@@Base+0xeec>
   37348:	mov	r0, r4
   3734c:	ldr	r2, [pc, #16]	; 37364 <luaL_typerror@@Base+0xff8>
   37350:	mov	r1, #1
   37354:	bl	36284 <luaL_argerror@@Base+0xbc>
   37358:	mov	r2, #3136	; 0xc40
   3735c:	mov	r1, #1
   37360:	bl	361d0 <luaL_argerror@@Base+0x8>
   37364:	andeq	r2, r7, r4, lsr #26
   37368:	ldr	r3, [r0, #8]
   3736c:	push	{r4, r5, lr}
   37370:	mov	r2, #0
   37374:	ldr	r5, [r3, #228]	; 0xe4
   37378:	sub	sp, sp, #12
   3737c:	mov	r1, r5
   37380:	str	r0, [r5, #12]
   37384:	mov	r4, r0
   37388:	bl	372b0 <luaL_typerror@@Base+0xf44>
   3738c:	add	r2, sp, #8
   37390:	mov	r3, #0
   37394:	str	r3, [r2, #-4]!
   37398:	mov	r1, r0
   3739c:	ldr	r0, [r5]
   373a0:	bl	1b78c <_start@@Base+0x83dc>
   373a4:	ldr	r1, [r4, #20]
   373a8:	mvn	r2, #13
   373ac:	mov	r3, #1
   373b0:	str	r2, [r1, #-4]
   373b4:	lsr	r0, r0, #16
   373b8:	and	r2, r0, #15
   373bc:	mov	r0, r3
   373c0:	lsl	r3, r3, r2
   373c4:	str	r3, [r1, #-8]
   373c8:	add	sp, sp, #12
   373cc:	pop	{r4, r5, pc}
   373d0:	ldr	r3, [r0, #8]
   373d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   373d8:	mov	r4, r0
   373dc:	ldr	r5, [r3, #228]	; 0xe4
   373e0:	mov	r2, #0
   373e4:	mov	r1, r5
   373e8:	str	r0, [r5, #12]
   373ec:	bl	372b0 <luaL_typerror@@Base+0xf44>
   373f0:	ldr	r3, [r4, #16]
   373f4:	ldr	lr, [r4, #20]
   373f8:	add	r2, r3, #8
   373fc:	cmp	lr, r2
   37400:	bls	37544 <luaL_typerror@@Base+0x11d8>
   37404:	ldr	r2, [r3, #12]
   37408:	cmn	r2, #11
   3740c:	beq	37428 <luaL_typerror@@Base+0x10bc>
   37410:	mvn	r3, #1
   37414:	ldr	r2, [r4, #8]
   37418:	mov	r0, #1
   3741c:	str	r3, [lr, #-4]
   37420:	str	r3, [r2, #140]	; 0x8c
   37424:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   37428:	ldr	r3, [r3, #8]
   3742c:	ldr	r7, [r5]
   37430:	ldr	ip, [pc, #284]	; 37554 <luaL_typerror@@Base+0x11e8>
   37434:	ldrh	r2, [r3, #6]
   37438:	add	r0, r7, r0, lsl #4
   3743c:	cmp	r2, #21
   37440:	ldreq	r2, [r3, #8]
   37444:	b	37450 <luaL_typerror@@Base+0x10e4>
   37448:	uxth	r1, r1
   3744c:	add	r0, r7, r1, lsl #4
   37450:	ldr	r1, [r0]
   37454:	lsr	r8, r1, #28
   37458:	cmp	r8, #8
   3745c:	beq	37448 <luaL_typerror@@Base+0x10dc>
   37460:	and	r3, r1, ip
   37464:	cmp	r3, #545259520	; 0x20800000
   37468:	beq	37448 <luaL_typerror@@Base+0x10dc>
   3746c:	add	r2, r7, r2, lsl #4
   37470:	ldr	r6, [pc, #220]	; 37554 <luaL_typerror@@Base+0x11e8>
   37474:	b	37480 <luaL_typerror@@Base+0x1114>
   37478:	uxth	r2, r9
   3747c:	add	r2, r7, r2, lsl #4
   37480:	ldr	r9, [r2]
   37484:	lsr	r3, r9, #28
   37488:	cmp	r3, #8
   3748c:	beq	37478 <luaL_typerror@@Base+0x110c>
   37490:	and	ip, r9, r6
   37494:	cmp	ip, #545259520	; 0x20800000
   37498:	beq	37478 <luaL_typerror@@Base+0x110c>
   3749c:	cmp	r2, r0
   374a0:	mvneq	r3, #2
   374a4:	beq	37414 <luaL_typerror@@Base+0x10a8>
   374a8:	cmp	r3, r8
   374ac:	beq	374e4 <luaL_typerror@@Base+0x1178>
   374b0:	cmp	r8, #1
   374b4:	cmpeq	r3, #2
   374b8:	bne	37410 <luaL_typerror@@Base+0x10a4>
   374bc:	uxth	r3, r9
   374c0:	ldr	r9, [r7, r3, lsl #4]
   374c4:	add	r2, r7, r3, lsl #4
   374c8:	lsr	r3, r9, #28
   374cc:	cmp	r3, #8
   374d0:	beq	374bc <luaL_typerror@@Base+0x1150>
   374d4:	mvn	r3, #1
   374d8:	cmp	r2, r0
   374dc:	subeq	r3, r3, #1
   374e0:	b	37414 <luaL_typerror@@Base+0x10a8>
   374e4:	ldr	r6, [r0, #4]
   374e8:	ldr	ip, [r2, #4]
   374ec:	cmp	r6, ip
   374f0:	bne	374b0 <luaL_typerror@@Base+0x1144>
   374f4:	lsr	r3, r1, #29
   374f8:	cmp	r3, #1
   374fc:	beq	37524 <luaL_typerror@@Base+0x11b8>
   37500:	tst	r8, #11
   37504:	bne	37410 <luaL_typerror@@Base+0x10a4>
   37508:	eor	r3, r9, r1
   3750c:	bic	r3, r3, #54525952	; 0x3400000
   37510:	mvn	r2, #1
   37514:	cmp	r3, #0
   37518:	movne	r3, r2
   3751c:	subeq	r3, r2, #1
   37520:	b	37414 <luaL_typerror@@Base+0x10a8>
   37524:	mov	r1, r0
   37528:	mov	r3, #8
   3752c:	mov	r0, r5
   37530:	bl	1ba9c <_start@@Base+0x86ec>
   37534:	mvn	r3, #1
   37538:	ldr	lr, [r4, #20]
   3753c:	sub	r3, r3, r0
   37540:	b	37414 <luaL_typerror@@Base+0x10a8>
   37544:	mov	r0, r4
   37548:	ldr	r2, [pc, #8]	; 37558 <luaL_typerror@@Base+0x11ec>
   3754c:	mov	r1, #2
   37550:	bl	361d0 <luaL_argerror@@Base+0x8>
   37554:			; <UNDEFINED> instruction: 0xf0800000
   37558:	andeq	r0, r0, r7, lsr #4
   3755c:	push	{r4, r5, r6, r7, r8, r9, lr}
   37560:	sub	sp, sp, #28
   37564:	mov	r3, #0
   37568:	mov	r4, r0
   3756c:	mov	r5, r2
   37570:	mov	r0, r2
   37574:	add	r2, sp, #20
   37578:	str	r2, [sp]
   3757c:	mov	r6, r1
   37580:	mov	r2, #13
   37584:	mov	r1, r3
   37588:	bl	12da8 <_Unwind_VRS_Get@plt>
   3758c:	ands	r3, r4, #3
   37590:	ldr	r1, [sp, #20]
   37594:	beq	3761c <luaL_typerror@@Base+0x12b0>
   37598:	cmp	r3, #1
   3759c:	bne	37610 <luaL_typerror@@Base+0x12a4>
   375a0:	ldrd	r2, [r6]
   375a4:	add	r9, pc, #332	; 0x14c
   375a8:	ldrd	r8, [r9]
   375ac:	ldr	r7, [r1, #12]
   375b0:	eor	r1, r9, r3
   375b4:	eor	r0, r8, r2
   375b8:	cmp	r1, #0
   375bc:	cmpeq	r0, #255	; 0xff
   375c0:	uxtbls	r8, r2
   375c4:	bhi	37630 <luaL_typerror@@Base+0x12c4>
   375c8:	mov	r0, r7
   375cc:	mov	r1, r8
   375d0:	bl	20e04 <luaL_where@@Base+0xd00>
   375d4:	lsr	r4, r4, #3
   375d8:	cmp	r0, #0
   375dc:	andne	r4, r4, #1
   375e0:	moveq	r4, #1
   375e4:	cmp	r4, #0
   375e8:	mov	r7, r0
   375ec:	beq	37658 <luaL_typerror@@Base+0x12ec>
   375f0:	mov	r1, r5
   375f4:	mov	r0, r6
   375f8:	bl	12e20 <__gnu_unwind_frame@plt>
   375fc:	cmp	r0, #0
   37600:	movne	r0, #9
   37604:	moveq	r0, #8
   37608:	add	sp, sp, #28
   3760c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   37610:	mov	r0, #9
   37614:	add	sp, sp, #28
   37618:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3761c:	tst	r4, #8
   37620:	moveq	r0, #6
   37624:	bne	375f0 <luaL_typerror@@Base+0x1284>
   37628:	add	sp, sp, #28
   3762c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   37630:	ldr	r9, [r7, #20]
   37634:	mov	r1, #42	; 0x2a
   37638:	add	r3, r9, #8
   3763c:	str	r3, [r7, #20]
   37640:	mov	r0, r7
   37644:	bl	20530 <luaL_where@@Base+0x42c>
   37648:	mvn	r3, #4
   3764c:	mov	r8, #2
   37650:	stm	r9, {r0, r3}
   37654:	b	375c8 <luaL_typerror@@Base+0x125c>
   37658:	add	r1, sp, #24
   3765c:	ldr	r2, [pc, #156]	; 37700 <luaL_typerror@@Base+0x1394>
   37660:	mov	r3, r4
   37664:	str	r2, [r1, #-8]!
   37668:	mov	r0, r5
   3766c:	mov	r2, #15
   37670:	str	r1, [sp]
   37674:	mov	r1, r4
   37678:	bl	12fe8 <_Unwind_VRS_Set@plt>
   3767c:	add	r1, sp, #24
   37680:	mov	r3, r4
   37684:	str	r6, [r1, #-12]!
   37688:	mov	r2, r4
   3768c:	str	r1, [sp]
   37690:	mov	r0, r5
   37694:	mov	r1, r4
   37698:	bl	12fe8 <_Unwind_VRS_Set@plt>
   3769c:	add	r1, sp, #24
   376a0:	mov	r3, r4
   376a4:	str	r8, [r1, #-16]!
   376a8:	mov	r2, #1
   376ac:	str	r1, [sp]
   376b0:	mov	r0, r5
   376b4:	mov	r1, r4
   376b8:	bl	12fe8 <_Unwind_VRS_Set@plt>
   376bc:	ldr	r3, [pc, #64]	; 37704 <luaL_typerror@@Base+0x1398>
   376c0:	ldr	ip, [pc, #64]	; 37708 <luaL_typerror@@Base+0x139c>
   376c4:	tst	r7, #2
   376c8:	add	r2, sp, #20
   376cc:	movne	ip, r3
   376d0:	str	r2, [sp]
   376d4:	mov	r0, r5
   376d8:	mov	r3, r4
   376dc:	mov	r1, r4
   376e0:	mov	r2, #2
   376e4:	str	ip, [sp, #20]
   376e8:	bl	12fe8 <_Unwind_VRS_Set@plt>
   376ec:	mov	r0, #7
   376f0:	b	37614 <luaL_typerror@@Base+0x12a8>
   376f4:	nop			; (mov r0, r0)
   376f8:	ldmdbmi	r4, {r9, ip, sp}^
   376fc:	ldfmie	f4, [r5], {74}	; 0x4a
   37700:	andeq	fp, r6, ip, ror fp
   37704:	andeq	fp, r6, r4, asr #22
   37708:	andeq	fp, r6, r8, lsr #22
   3770c:	push	{r4, r5, r6, lr}
   37710:	ldr	r5, [r0, #-176]	; 0xffffff50
   37714:	cmp	r5, #0
   37718:	popeq	{r4, r5, r6, pc}
   3771c:	ldr	r4, [r0, #80]	; 0x50
   37720:	ldr	r1, [pc, #40]	; 37750 <luaL_typerror@@Base+0x13e4>
   37724:	mov	r0, r4
   37728:	ldr	r6, [r4, #20]
   3772c:	add	r3, r6, #8
   37730:	str	r3, [r4, #20]
   37734:	bl	20530 <luaL_where@@Base+0x42c>
   37738:	mvn	r3, #4
   3773c:	stm	r6, {r0, r3}
   37740:	mov	r0, r4
   37744:	mov	r3, r5
   37748:	pop	{r4, r5, r6, lr}
   3774c:	bx	r3
   37750:			; <UNDEFINED> instruction: 0x000007bf
   37754:	push	{r4, r5, r6, lr}
   37758:	mov	r2, r1
   3775c:	mov	r4, r0
   37760:	mov	r5, r1
   37764:	ldr	r1, [r0, #2336]	; 0x920
   37768:	ldr	r0, [r0, #2324]	; 0x914
   3776c:	bl	12c88 <mprotect@plt>
   37770:	cmp	r0, #0
   37774:	bne	37780 <luaL_typerror@@Base+0x1414>
   37778:	str	r5, [r4, #2320]	; 0x910
   3777c:	pop	{r4, r5, r6, pc}
   37780:	mov	r0, r4
   37784:	bl	3770c <luaL_typerror@@Base+0x13a0>
   37788:	str	r5, [r4, #2320]	; 0x910
   3778c:	pop	{r4, r5, r6, pc}
   37790:	ldr	r5, [r0, #140]	; 0x8c
   37794:	push	{r4, lr}
   37798:	ldr	r2, [r0, #128]	; 0x80
   3779c:	ldr	r4, [r0, #236]	; 0xec
   377a0:	ldr	r3, [r5, #2324]	; 0x914
   377a4:	sub	r4, r4, r2
   377a8:	cmp	r3, #0
   377ac:	asr	r4, r4, #2
   377b0:	add	r4, r4, #256	; 0x100
   377b4:	beq	377c4 <luaL_typerror@@Base+0x1458>
   377b8:	ldr	r3, [r5, #2320]	; 0x910
   377bc:	cmp	r3, #5
   377c0:	bne	37810 <luaL_typerror@@Base+0x14a4>
   377c4:	ldr	r3, [r5, #1560]	; 0x618
   377c8:	add	r6, r5, #2336	; 0x920
   377cc:	add	r6, r6, #12
   377d0:	lsl	r3, r3, #10
   377d4:	add	r3, r3, #4080	; 0xff0
   377d8:	add	r3, r3, #15
   377dc:	bic	r3, r3, #4080	; 0xff0
   377e0:	bic	r3, r3, #15
   377e4:	cmp	r4, r3
   377e8:	bhi	37838 <luaL_typerror@@Base+0x14cc>
   377ec:	ldr	r1, [r5, #2340]	; 0x924
   377f0:	ldr	r2, [r5, #1564]	; 0x61c
   377f4:	add	r3, r3, r1
   377f8:	cmp	r3, r2, lsl #10
   377fc:	bls	37820 <luaL_typerror@@Base+0x14b4>
   37800:	mov	r1, r6
   37804:	ldr	r0, [r5, #80]	; 0x50
   37808:	mov	r2, #27
   3780c:	bl	210d0 <luaL_where@@Base+0xfcc>
   37810:	mov	r1, #5
   37814:	mov	r0, r5
   37818:	bl	37754 <luaL_typerror@@Base+0x13e8>
   3781c:	b	377c4 <luaL_typerror@@Base+0x1458>
   37820:	mov	r0, r5
   37824:	bl	24d94 <luaL_where@@Base+0x4c90>
   37828:	mov	r1, r6
   3782c:	ldr	r0, [r5, #80]	; 0x50
   37830:	mov	r2, #29
   37834:	bl	210d0 <luaL_where@@Base+0xfcc>
   37838:	mov	r1, r6
   3783c:	ldr	r0, [r5, #80]	; 0x50
   37840:	mov	r2, #28
   37844:	bl	210d0 <luaL_where@@Base+0xfcc>
   37848:	push	{r4, r5, r6, r7, r8, lr}
   3784c:	mov	r6, r0
   37850:	ldr	r5, [r0, #144]	; 0x90
   37854:	mvn	r3, r5
   37858:	lsr	r5, r3, #16
   3785c:	lsl	r5, r5, #16
   37860:	cmp	r5, #0
   37864:	beq	378c0 <luaL_typerror@@Base+0x1554>
   37868:	ldr	r8, [pc, #180]	; 37924 <luaL_typerror@@Base+0x15b8>
   3786c:	mov	r7, #1
   37870:	b	3787c <luaL_typerror@@Base+0x1510>
   37874:	bics	r5, r5, r7, lsl r4
   37878:	beq	378b8 <luaL_typerror@@Base+0x154c>
   3787c:	rsb	r4, r5, #0
   37880:	and	r4, r4, r5
   37884:	clz	r4, r4
   37888:	rsb	r4, r4, #31
   3788c:	ldr	r1, [r6, r4, lsl #2]
   37890:	uxth	r1, r1
   37894:	cmp	r1, r8
   37898:	bhi	37874 <luaL_typerror@@Base+0x1508>
   3789c:	mov	r0, r6
   378a0:	bl	21694 <luaL_where@@Base+0x1590>
   378a4:	ldrd	r2, [r6, #128]	; 0x80
   378a8:	cmp	r2, r3
   378ac:	bcs	37874 <luaL_typerror@@Base+0x1508>
   378b0:	mov	r0, r6
   378b4:	bl	37790 <luaL_typerror@@Base+0x1424>
   378b8:	ldr	r5, [r6, #144]	; 0x90
   378bc:	mvn	r3, r5
   378c0:	lsl	r5, r3, #19
   378c4:	lsr	r5, r5, #19
   378c8:	cmp	r5, #0
   378cc:	popeq	{r4, r5, r6, r7, r8, pc}
   378d0:	ldr	r8, [pc, #76]	; 37924 <luaL_typerror@@Base+0x15b8>
   378d4:	mov	r7, #1
   378d8:	b	378e4 <luaL_typerror@@Base+0x1578>
   378dc:	bics	r5, r5, r7, lsl r4
   378e0:	popeq	{r4, r5, r6, r7, r8, pc}
   378e4:	rsb	r4, r5, #0
   378e8:	and	r4, r4, r5
   378ec:	clz	r4, r4
   378f0:	rsb	r4, r4, #31
   378f4:	ldr	r1, [r6, r4, lsl #2]
   378f8:	uxth	r1, r1
   378fc:	cmp	r1, r8
   37900:	bhi	378dc <luaL_typerror@@Base+0x1570>
   37904:	mov	r0, r6
   37908:	bl	21694 <luaL_where@@Base+0x1590>
   3790c:	ldrd	r2, [r6, #128]	; 0x80
   37910:	cmp	r2, r3
   37914:	bcc	378b0 <luaL_typerror@@Base+0x1544>
   37918:	bics	r5, r5, r7, lsl r4
   3791c:	bne	378e4 <luaL_typerror@@Base+0x1578>
   37920:	pop	{r4, r5, r6, r7, r8, pc}
   37924:	strdeq	r7, [r0], -lr
   37928:	ldr	r1, [r0, #136]	; 0x88
   3792c:	add	r3, r1, #262144	; 0x40000
   37930:	add	r1, r1, #261120	; 0x3fc00
   37934:	ldrsb	r2, [r3, #-2]
   37938:	add	r1, r1, #1016	; 0x3f8
   3793c:	cmp	r2, #0
   37940:	bge	37950 <luaL_typerror@@Base+0x15e4>
   37944:	ldrb	r3, [r3, #-1]
   37948:	cmp	r3, #0
   3794c:	bxeq	lr
   37950:	push	{r4, lr}
   37954:	mov	r4, r0
   37958:	ldr	r2, [pc, #36]	; 37984 <luaL_typerror@@Base+0x1618>
   3795c:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   37960:	ldr	r3, [r4, #140]	; 0x8c
   37964:	ldr	r1, [pc, #28]	; 37988 <luaL_typerror@@Base+0x161c>
   37968:	sub	r3, r3, #164	; 0xa4
   3796c:	mov	r2, r0
   37970:	mov	r0, r4
   37974:	bl	217f8 <luaL_where@@Base+0x16f4>
   37978:	mov	r0, r4
   3797c:	pop	{r4, lr}
   37980:	b	37848 <luaL_typerror@@Base+0x14dc>
   37984:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   37988:	ldr	r0, [r0], #-0
   3798c:	push	{r4, r5, r6, r7, r8, lr}
   37990:	lsr	r5, r1, #16
   37994:	ldr	r3, [r0, #144]	; 0x90
   37998:	ldr	r2, [r0, #148]	; 0x94
   3799c:	mvn	r3, r3
   379a0:	lsl	r5, r5, #16
   379a4:	orr	r2, r2, r1
   379a8:	ands	r5, r5, r3
   379ac:	mov	r4, r0
   379b0:	mov	r6, r1
   379b4:	str	r2, [r0, #148]	; 0x94
   379b8:	beq	37a0c <luaL_typerror@@Base+0x16a0>
   379bc:	mov	r7, #1
   379c0:	b	379cc <luaL_typerror@@Base+0x1660>
   379c4:	cmp	r5, #0
   379c8:	beq	37a04 <luaL_typerror@@Base+0x1698>
   379cc:	rsb	r3, r5, #0
   379d0:	and	r3, r3, r5
   379d4:	clz	r3, r3
   379d8:	rsb	r3, r3, #31
   379dc:	mov	r0, r4
   379e0:	ldr	r1, [r4, r3, lsl #2]
   379e4:	bic	r5, r5, r7, lsl r3
   379e8:	uxth	r1, r1
   379ec:	bl	21284 <luaL_where@@Base+0x1180>
   379f0:	ldrd	r2, [r4, #128]	; 0x80
   379f4:	cmp	r2, r3
   379f8:	bcs	379c4 <luaL_typerror@@Base+0x1658>
   379fc:	mov	r0, r4
   37a00:	bl	37790 <luaL_typerror@@Base+0x1424>
   37a04:	ldr	r5, [r4, #144]	; 0x90
   37a08:	mvn	r3, r5
   37a0c:	ands	r5, r6, r3
   37a10:	popeq	{r4, r5, r6, r7, r8, pc}
   37a14:	mov	r6, #1
   37a18:	b	37a24 <luaL_typerror@@Base+0x16b8>
   37a1c:	cmp	r5, #0
   37a20:	popeq	{r4, r5, r6, r7, r8, pc}
   37a24:	rsb	r3, r5, #0
   37a28:	and	r3, r3, r5
   37a2c:	clz	r3, r3
   37a30:	rsb	r3, r3, #31
   37a34:	mov	r0, r4
   37a38:	ldr	r1, [r4, r3, lsl #2]
   37a3c:	bic	r5, r5, r6, lsl r3
   37a40:	uxth	r1, r1
   37a44:	bl	21284 <luaL_where@@Base+0x1180>
   37a48:	ldrd	r2, [r4, #128]	; 0x80
   37a4c:	cmp	r2, r3
   37a50:	bcs	37a1c <luaL_typerror@@Base+0x16b0>
   37a54:	b	379fc <luaL_typerror@@Base+0x1690>
   37a58:	push	{r4, r5, r6, r7, r8, r9, lr}
   37a5c:	mov	r4, r0
   37a60:	ldr	r3, [r0, #140]	; 0x8c
   37a64:	ldrh	r0, [r1]
   37a68:	mov	r5, r1
   37a6c:	ldr	r1, [r4, #136]	; 0x88
   37a70:	ldr	r3, [r3, #-156]	; 0xffffff64
   37a74:	sub	sp, sp, #36	; 0x24
   37a78:	ldr	r6, [r1, r0, lsl #3]
   37a7c:	add	r2, sp, #12
   37a80:	mov	r1, r6
   37a84:	ldr	r0, [r3]
   37a88:	bl	1b78c <_start@@Base+0x83dc>
   37a8c:	ldrb	r2, [r5, #6]
   37a90:	ldr	r3, [r4, #220]	; 0xdc
   37a94:	tst	r2, #128	; 0x80
   37a98:	add	r3, r3, #1
   37a9c:	str	r3, [r4, #220]	; 0xdc
   37aa0:	ldreq	r1, [pc, #644]	; 37d2c <luaL_typerror@@Base+0x19c0>
   37aa4:	moveq	r3, #1
   37aa8:	ldrne	r1, [pc, #636]	; 37d2c <luaL_typerror@@Base+0x19c0>
   37aac:	biceq	r1, r1, r3, lsl r2
   37ab0:	mov	r7, r0
   37ab4:	mov	r0, r4
   37ab8:	bl	3798c <luaL_typerror@@Base+0x1620>
   37abc:	ldrsb	r3, [r5, #6]
   37ac0:	cmp	r3, #0
   37ac4:	bge	37ba8 <luaL_typerror@@Base+0x183c>
   37ac8:	ldrb	r3, [r5, #7]
   37acc:	cmp	r3, #0
   37ad0:	bne	37ba8 <luaL_typerror@@Base+0x183c>
   37ad4:	ldrb	r3, [r5, #5]
   37ad8:	cmp	r3, #83	; 0x53
   37adc:	beq	37bc4 <luaL_typerror@@Base+0x1858>
   37ae0:	ldrh	r3, [r5, #2]
   37ae4:	ldr	r0, [pc, #580]	; 37d30 <luaL_typerror@@Base+0x19c4>
   37ae8:	cmp	r3, r0
   37aec:	moveq	r5, #4080	; 0xff0
   37af0:	bne	37c10 <luaL_typerror@@Base+0x18a4>
   37af4:	ldr	r7, [pc, #568]	; 37d34 <luaL_typerror@@Base+0x19c8>
   37af8:	mov	r1, r6
   37afc:	mov	r0, r7
   37b00:	bl	16d00 <_start@@Base+0x3950>
   37b04:	cmp	r0, #0
   37b08:	beq	37c84 <luaL_typerror@@Base+0x1918>
   37b0c:	ldr	r3, [r4, #128]	; 0x80
   37b10:	ldr	r2, [pc, #544]	; 37d38 <luaL_typerror@@Base+0x19cc>
   37b14:	eor	r0, r0, r7
   37b18:	ldr	ip, [pc, #540]	; 37d3c <luaL_typerror@@Base+0x19d0>
   37b1c:	ldr	r1, [pc, #540]	; 37d40 <luaL_typerror@@Base+0x19d4>
   37b20:	str	r2, [r3, #-4]
   37b24:	orr	r0, r0, #4096	; 0x1000
   37b28:	sub	r2, r3, #16
   37b2c:	str	ip, [r3, #-8]
   37b30:	str	r1, [r3, #-12]
   37b34:	str	r2, [r4, #128]	; 0x80
   37b38:	str	r0, [r3, #-16]
   37b3c:	ldr	ip, [pc, #492]	; 37d30 <luaL_typerror@@Base+0x19c4>
   37b40:	ldr	r3, [pc, #508]	; 37d44 <luaL_typerror@@Base+0x19d8>
   37b44:	add	r2, sp, #16
   37b48:	mov	r0, r4
   37b4c:	ldr	r1, [pc, #500]	; 37d48 <luaL_typerror@@Base+0x19dc>
   37b50:	str	ip, [sp, #16]
   37b54:	str	r3, [sp, #20]
   37b58:	bl	25eac <luaL_where@@Base+0x5da8>
   37b5c:	ldr	r3, [r4, #136]	; 0x88
   37b60:	mov	r0, #1
   37b64:	add	r3, r3, #261120	; 0x3fc00
   37b68:	ldr	ip, [r4, #148]	; 0x94
   37b6c:	ldrb	r2, [r3, #1006]	; 0x3ee
   37b70:	ldr	lr, [r4, #144]	; 0x90
   37b74:	ldr	r1, [sp, #12]
   37b78:	lsl	r0, r0, r2
   37b7c:	orr	lr, lr, r0
   37b80:	orr	r0, ip, r0
   37b84:	mvn	ip, #0
   37b88:	str	r0, [r4, #148]	; 0x94
   37b8c:	str	lr, [r4, #144]	; 0x90
   37b90:	mov	r0, r4
   37b94:	strb	ip, [r3, #1006]	; 0x3ee
   37b98:	add	r1, r1, #8
   37b9c:	bl	22b78 <luaL_where@@Base+0x2a74>
   37ba0:	add	sp, sp, #36	; 0x24
   37ba4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   37ba8:	mov	r2, #0
   37bac:	mov	r1, r5
   37bb0:	mov	r0, r4
   37bb4:	bl	22ca8 <luaL_where@@Base+0x2ba4>
   37bb8:	ldrb	r3, [r5, #5]
   37bbc:	cmp	r3, #83	; 0x53
   37bc0:	bne	37ae0 <luaL_typerror@@Base+0x1774>
   37bc4:	ldr	r8, [sp, #12]
   37bc8:	cmp	r8, #8
   37bcc:	beq	37cc0 <luaL_typerror@@Base+0x1954>
   37bd0:	ldrh	r1, [r5, #2]
   37bd4:	mov	r2, #4080	; 0xff0
   37bd8:	mov	r0, r4
   37bdc:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   37be0:	mov	r5, #1
   37be4:	mov	r3, #8
   37be8:	str	r3, [sp]
   37bec:	mov	r1, #-469762048	; 0xe4000000
   37bf0:	mov	r3, #0
   37bf4:	mov	r7, r0
   37bf8:	mov	r2, r0
   37bfc:	mvn	r5, r5, lsl r7
   37c00:	mov	r0, r4
   37c04:	bl	16dbc <_start@@Base+0x3a0c>
   37c08:	and	r5, r5, #4080	; 0xff0
   37c0c:	b	37af4 <luaL_typerror@@Base+0x1788>
   37c10:	ldrh	r1, [r5]
   37c14:	ldr	ip, [pc, #296]	; 37d44 <luaL_typerror@@Base+0x19d8>
   37c18:	add	r2, sp, #16
   37c1c:	str	r1, [sp, #20]
   37c20:	str	r0, [sp, #16]
   37c24:	ldr	r1, [pc, #288]	; 37d4c <luaL_typerror@@Base+0x19e0>
   37c28:	mov	r0, r4
   37c2c:	str	r3, [sp, #24]
   37c30:	str	ip, [sp, #28]
   37c34:	bl	25eac <luaL_where@@Base+0x5da8>
   37c38:	ldr	r3, [r4, #136]	; 0x88
   37c3c:	mov	r0, #1
   37c40:	add	r3, r3, #261120	; 0x3fc00
   37c44:	ldr	ip, [r4, #148]	; 0x94
   37c48:	ldrb	r1, [r3, #1006]	; 0x3ee
   37c4c:	ldr	lr, [r4, #144]	; 0x90
   37c50:	lsr	r2, r7, #16
   37c54:	and	r2, r2, #15
   37c58:	lsl	r0, r0, r1
   37c5c:	orr	lr, lr, r0
   37c60:	orr	r0, ip, r0
   37c64:	mvn	ip, #0
   37c68:	str	r0, [r4, #148]	; 0x94
   37c6c:	str	lr, [r4, #144]	; 0x90
   37c70:	mov	r0, r4
   37c74:	strb	ip, [r3, #1006]	; 0x3ee
   37c78:	bl	1e2e0 <_start@@Base+0xaf30>
   37c7c:	add	sp, sp, #36	; 0x24
   37c80:	pop	{r4, r5, r6, r7, r8, r9, pc}
   37c84:	mov	r2, r5
   37c88:	mov	r1, r6
   37c8c:	mov	r0, r4
   37c90:	bl	215b8 <luaL_where@@Base+0x14b4>
   37c94:	ldr	r3, [r4, #128]	; 0x80
   37c98:	ldr	ip, [pc, #152]	; 37d38 <luaL_typerror@@Base+0x19cc>
   37c9c:	ldr	r2, [pc, #172]	; 37d50 <luaL_typerror@@Base+0x19e4>
   37ca0:	ldr	r1, [pc, #152]	; 37d40 <luaL_typerror@@Base+0x19d4>
   37ca4:	str	ip, [r3, #-4]
   37ca8:	sub	ip, r3, #12
   37cac:	orr	r0, r2, r0, lsl #12
   37cb0:	str	r0, [r3, #-8]
   37cb4:	str	ip, [r4, #128]	; 0x80
   37cb8:	str	r1, [r3, #-12]
   37cbc:	b	37b3c <luaL_typerror@@Base+0x17d0>
   37cc0:	ldrh	r1, [r5, #10]
   37cc4:	mov	r2, #4080	; 0xff0
   37cc8:	mov	r0, r4
   37ccc:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   37cd0:	mov	r9, #1
   37cd4:	mov	r3, #12
   37cd8:	str	r3, [sp]
   37cdc:	mov	r1, #-469762048	; 0xe4000000
   37ce0:	mov	r3, #0
   37ce4:	mov	r7, r0
   37ce8:	mov	r2, r0
   37cec:	mvn	r7, r9, lsl r7
   37cf0:	mov	r0, r4
   37cf4:	and	r7, r7, #4080	; 0xff0
   37cf8:	bl	16dbc <_start@@Base+0x3a0c>
   37cfc:	ldrh	r1, [r5, #2]
   37d00:	mov	r2, r7
   37d04:	mov	r0, r4
   37d08:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   37d0c:	str	r8, [sp]
   37d10:	mov	r3, #0
   37d14:	mov	r1, #-469762048	; 0xe4000000
   37d18:	mov	r2, r0
   37d1c:	mov	r0, r4
   37d20:	bic	r5, r7, r9, lsl r2
   37d24:	bl	16dbc <_start@@Base+0x3a0c>
   37d28:	b	37af4 <luaL_typerror@@Base+0x1788>
   37d2c:	rscseq	r1, pc, pc
   37d30:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   37d34:	nop			; (mov r0, r0)
   37d38:	strb	lr, [r0, #5]
   37d3c:	strh	r1, [r0, #6]
   37d40:	mov	lr, #10
   37d44:	strdeq	r7, [r0], -sp
   37d48:	ldrdeq	r0, [r7], -r8
   37d4c:	andeq	r0, r7, r8, lsr #13
   37d50:	strh	r0, [r0, #6]
   37d54:	push	{r4, r5, r6, r7, r8, r9, lr}
   37d58:	mov	r4, r1
   37d5c:	ldrb	r1, [r1, #6]
   37d60:	ldrb	r3, [r4, #13]
   37d64:	sub	sp, sp, #12
   37d68:	mov	r5, r0
   37d6c:	cmp	r3, #16
   37d70:	mov	r6, r2
   37d74:	sxtb	r3, r1
   37d78:	beq	37e00 <luaL_typerror@@Base+0x1a94>
   37d7c:	cmp	r3, #0
   37d80:	blt	37de0 <luaL_typerror@@Base+0x1a74>
   37d84:	mov	r2, #1
   37d88:	ldr	r3, [pc, #864]	; 380f0 <luaL_typerror@@Base+0x1d84>
   37d8c:	mov	r8, #0
   37d90:	bic	r1, r3, r2, lsl r1
   37d94:	mov	r0, r5
   37d98:	bl	3798c <luaL_typerror@@Base+0x1620>
   37d9c:	ldrb	r7, [r4, #6]
   37da0:	sxtb	r9, r7
   37da4:	cmp	r9, #0
   37da8:	blt	37dec <luaL_typerror@@Base+0x1a80>
   37dac:	ldrb	r3, [r4, #4]
   37db0:	and	r3, r3, #31
   37db4:	sub	r3, r3, #13
   37db8:	cmp	r3, #1
   37dbc:	bls	37e3c <luaL_typerror@@Base+0x1ad0>
   37dc0:	cmp	r8, #0
   37dc4:	bne	37e9c <luaL_typerror@@Base+0x1b30>
   37dc8:	mov	r2, r8
   37dcc:	mov	r1, r4
   37dd0:	mov	r0, r5
   37dd4:	add	sp, sp, #12
   37dd8:	pop	{r4, r5, r6, r7, r8, r9, lr}
   37ddc:	b	22ca8 <luaL_where@@Base+0x2ba4>
   37de0:	mov	r8, #0
   37de4:	ldr	r1, [pc, #772]	; 380f0 <luaL_typerror@@Base+0x1d84>
   37de8:	b	37d94 <luaL_typerror@@Base+0x1a28>
   37dec:	ldrb	r3, [r4, #7]
   37df0:	cmp	r3, #0
   37df4:	bne	37dac <luaL_typerror@@Base+0x1a40>
   37df8:	add	sp, sp, #12
   37dfc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   37e00:	ldrb	r2, [r4, #12]
   37e04:	tst	r2, #31
   37e08:	beq	37d7c <luaL_typerror@@Base+0x1a10>
   37e0c:	cmp	r3, #0
   37e10:	blt	380e8 <luaL_typerror@@Base+0x1d7c>
   37e14:	mov	r2, #1
   37e18:	ldr	r3, [pc, #720]	; 380f0 <luaL_typerror@@Base+0x1d84>
   37e1c:	bic	r1, r3, r2, lsl r1
   37e20:	ldrb	r3, [r4, #14]
   37e24:	tst	r3, #128	; 0x80
   37e28:	moveq	r2, #1
   37e2c:	moveq	r8, r2
   37e30:	biceq	r1, r1, r2, lsl r3
   37e34:	movne	r8, #1
   37e38:	b	37d94 <luaL_typerror@@Base+0x1a28>
   37e3c:	ldr	r3, [r6]
   37e40:	tst	r3, #2560	; 0xa00
   37e44:	beq	37f7c <luaL_typerror@@Base+0x1c10>
   37e48:	mov	r1, r4
   37e4c:	ldr	r2, [pc, #672]	; 380f4 <luaL_typerror@@Base+0x1d88>
   37e50:	mov	r0, r5
   37e54:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   37e58:	ldrb	r3, [r4, #4]
   37e5c:	ldr	r2, [r5, #128]	; 0x80
   37e60:	and	r3, r3, #31
   37e64:	cmp	r3, #14
   37e68:	subeq	r1, r2, #4
   37e6c:	ldreq	r3, [pc, #644]	; 380f8 <luaL_typerror@@Base+0x1d8c>
   37e70:	ldrne	r3, [pc, #644]	; 380fc <luaL_typerror@@Base+0x1d90>
   37e74:	subne	r1, r2, #4
   37e78:	and	r0, r0, #15
   37e7c:	orreq	r3, r0, r3
   37e80:	orrne	r0, r3, r0, lsl #16
   37e84:	streq	r1, [r5, #128]	; 0x80
   37e88:	strne	r1, [r5, #128]	; 0x80
   37e8c:	streq	r3, [r2, #-4]
   37e90:	strne	r0, [r2, #-4]
   37e94:	add	sp, sp, #12
   37e98:	pop	{r4, r5, r6, r7, r8, r9, pc}
   37e9c:	ldr	r3, [r5, #144]	; 0x90
   37ea0:	ldrb	r6, [r4, #14]
   37ea4:	tst	r3, #1
   37ea8:	bne	37eb8 <luaL_typerror@@Base+0x1b4c>
   37eac:	cmp	r7, #0
   37eb0:	cmpne	r6, #0
   37eb4:	bne	3800c <luaL_typerror@@Base+0x1ca0>
   37eb8:	tst	r3, #2
   37ebc:	bne	37ecc <luaL_typerror@@Base+0x1b60>
   37ec0:	cmp	r7, #1
   37ec4:	cmpne	r6, #1
   37ec8:	bne	38020 <luaL_typerror@@Base+0x1cb4>
   37ecc:	cmp	r9, #0
   37ed0:	sxtb	ip, r6
   37ed4:	blt	37f94 <luaL_typerror@@Base+0x1c28>
   37ed8:	mov	r3, #1
   37edc:	ldr	r0, [r5, #144]	; 0x90
   37ee0:	lsl	r1, r3, r7
   37ee4:	ldr	r2, [r5, #148]	; 0x94
   37ee8:	orr	r0, r1, r0
   37eec:	orr	r1, r1, r2
   37ef0:	cmp	ip, #0
   37ef4:	strd	r0, [r5, #144]	; 0x90
   37ef8:	blt	37ff0 <luaL_typerror@@Base+0x1c84>
   37efc:	lsl	ip, r3, r6
   37f00:	orr	r0, r0, ip
   37f04:	orr	r1, r1, ip
   37f08:	cmp	r7, #1
   37f0c:	strd	r0, [r5, #144]	; 0x90
   37f10:	bne	380b4 <luaL_typerror@@Base+0x1d48>
   37f14:	cmp	r6, #0
   37f18:	bne	38088 <luaL_typerror@@Base+0x1d1c>
   37f1c:	mov	r2, #14
   37f20:	mov	r1, r7
   37f24:	mov	r0, r5
   37f28:	bl	1c9b4 <_start@@Base+0x9604>
   37f2c:	mov	r2, r7
   37f30:	mov	r1, r6
   37f34:	bl	1c9b4 <_start@@Base+0x9604>
   37f38:	mov	r2, r6
   37f3c:	mov	r1, #14
   37f40:	bl	1c9b4 <_start@@Base+0x9604>
   37f44:	ldrb	r3, [r4, #15]
   37f48:	cmp	r3, #0
   37f4c:	bne	37fd0 <luaL_typerror@@Base+0x1c64>
   37f50:	ldrb	r3, [r4, #7]
   37f54:	cmp	r3, #0
   37f58:	beq	37df8 <luaL_typerror@@Base+0x1a8c>
   37f5c:	lsl	r3, r3, #2
   37f60:	str	r3, [sp]
   37f64:	mov	r0, r5
   37f68:	mov	r3, #13
   37f6c:	mov	r2, #0
   37f70:	mov	r1, #-469762048	; 0xe4000000
   37f74:	bl	16dbc <_start@@Base+0x3a0c>
   37f78:	b	37df8 <luaL_typerror@@Base+0x1a8c>
   37f7c:	mov	r1, r4
   37f80:	mov	r0, r5
   37f84:	mov	r2, #16
   37f88:	add	sp, sp, #12
   37f8c:	pop	{r4, r5, r6, r7, r8, r9, lr}
   37f90:	b	22ca8 <luaL_where@@Base+0x2ba4>
   37f94:	cmp	ip, #0
   37f98:	blt	37f44 <luaL_typerror@@Base+0x1bd8>
   37f9c:	mov	r2, #1
   37fa0:	ldr	r0, [r5, #144]	; 0x90
   37fa4:	lsl	ip, r2, r6
   37fa8:	ldr	r1, [r5, #148]	; 0x94
   37fac:	orr	r0, r0, ip
   37fb0:	orr	r1, r1, ip
   37fb4:	cmp	r6, #0
   37fb8:	strd	r0, [r5, #144]	; 0x90
   37fbc:	bne	38030 <luaL_typerror@@Base+0x1cc4>
   37fc0:	mov	r1, r6
   37fc4:	mov	r0, r5
   37fc8:	bl	1c9b4 <_start@@Base+0x9604>
   37fcc:	b	37f44 <luaL_typerror@@Base+0x1bd8>
   37fd0:	lsl	r3, r3, #2
   37fd4:	str	r3, [sp]
   37fd8:	mov	r2, #1
   37fdc:	mov	r3, #13
   37fe0:	mov	r1, #-469762048	; 0xe4000000
   37fe4:	mov	r0, r5
   37fe8:	bl	16dbc <_start@@Base+0x3a0c>
   37fec:	b	37f50 <luaL_typerror@@Base+0x1be4>
   37ff0:	cmp	r7, r3
   37ff4:	bne	38068 <luaL_typerror@@Base+0x1cfc>
   37ff8:	mov	r1, r7
   37ffc:	mov	r2, #0
   38000:	mov	r0, r5
   38004:	bl	1c9b4 <_start@@Base+0x9604>
   38008:	b	37f44 <luaL_typerror@@Base+0x1bd8>
   3800c:	ldrh	r1, [r5]
   38010:	mov	r0, r5
   38014:	bl	21284 <luaL_where@@Base+0x1180>
   38018:	ldr	r3, [r5, #144]	; 0x90
   3801c:	b	37eb8 <luaL_typerror@@Base+0x1b4c>
   38020:	ldrh	r1, [r5, #4]
   38024:	mov	r0, r5
   38028:	bl	21284 <luaL_where@@Base+0x1180>
   3802c:	b	37ecc <luaL_typerror@@Base+0x1b60>
   38030:	cmp	r6, r2
   38034:	beq	37f44 <luaL_typerror@@Base+0x1bd8>
   38038:	mov	r3, r2
   3803c:	add	r1, r4, #4
   38040:	mov	r2, r6
   38044:	mov	r0, r5
   38048:	bl	1ca38 <_start@@Base+0x9688>
   3804c:	b	37f44 <luaL_typerror@@Base+0x1bd8>
   38050:	cmp	r6, #1
   38054:	beq	38068 <luaL_typerror@@Base+0x1cfc>
   38058:	mov	r2, r6
   3805c:	add	r1, r4, #4
   38060:	mov	r0, r5
   38064:	bl	1ca38 <_start@@Base+0x9688>
   38068:	cmp	r7, #0
   3806c:	beq	37f44 <luaL_typerror@@Base+0x1bd8>
   38070:	mov	r2, r7
   38074:	mov	r3, #0
   38078:	add	r1, r4, #4
   3807c:	mov	r0, r5
   38080:	bl	1ca38 <_start@@Base+0x9688>
   38084:	b	37f44 <luaL_typerror@@Base+0x1bd8>
   38088:	mov	r1, r7
   3808c:	mov	r2, #0
   38090:	mov	r0, r5
   38094:	bl	1c9b4 <_start@@Base+0x9604>
   38098:	cmp	r6, #1
   3809c:	add	r1, r4, #4
   380a0:	beq	37f44 <luaL_typerror@@Base+0x1bd8>
   380a4:	mov	r3, r7
   380a8:	mov	r2, r6
   380ac:	bl	1ca38 <_start@@Base+0x9688>
   380b0:	b	37f44 <luaL_typerror@@Base+0x1bd8>
   380b4:	cmp	r6, #0
   380b8:	bne	38050 <luaL_typerror@@Base+0x1ce4>
   380bc:	mov	r2, r3
   380c0:	mov	r1, r6
   380c4:	mov	r0, r5
   380c8:	bl	1c9b4 <_start@@Base+0x9604>
   380cc:	cmp	r7, #0
   380d0:	beq	37f44 <luaL_typerror@@Base+0x1bd8>
   380d4:	mov	r3, r6
   380d8:	mov	r2, r7
   380dc:	add	r1, r4, #4
   380e0:	bl	1ca38 <_start@@Base+0x9688>
   380e4:	b	37f44 <luaL_typerror@@Base+0x1bd8>
   380e8:	ldr	r1, [pc]	; 380f0 <luaL_typerror@@Base+0x1d84>
   380ec:	b	37e20 <luaL_typerror@@Base+0x1ab4>
   380f0:	rscseq	r1, pc, pc
   380f4:			; <UNDEFINED> instruction: 0xffff0000
   380f8:	vmov	d0, r0, r1
   380fc:	vmov	s0, r0
   38100:	ldrb	r2, [r1, #-2]
   38104:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38108:	mov	r4, r0
   3810c:	tst	r2, #128	; 0x80
   38110:	sub	sp, sp, #36	; 0x24
   38114:	mov	r5, r1
   38118:	moveq	r0, #1
   3811c:	beq	3812c <luaL_typerror@@Base+0x1dc0>
   38120:	ldrb	r0, [r1, #-1]
   38124:	adds	r0, r0, #0
   38128:	movne	r0, #1
   3812c:	ldrb	r1, [r5, #6]
   38130:	tst	r1, #128	; 0x80
   38134:	moveq	r3, #1
   38138:	beq	38148 <luaL_typerror@@Base+0x1ddc>
   3813c:	ldrb	r3, [r5, #7]
   38140:	adds	r3, r3, #0
   38144:	movne	r3, #1
   38148:	ldr	ip, [r4, #160]	; 0xa0
   3814c:	ldrb	r6, [r5, #-3]
   38150:	tst	ip, #262144	; 0x40000
   38154:	moveq	r3, #1
   38158:	moveq	r0, r3
   3815c:	cmp	r6, #9
   38160:	bls	38290 <luaL_typerror@@Base+0x1f24>
   38164:	cmp	r6, #90	; 0x5a
   38168:	beq	38274 <luaL_typerror@@Base+0x1f08>
   3816c:	cmp	r6, #77	; 0x4d
   38170:	beq	38474 <luaL_typerror@@Base+0x2108>
   38174:	cmp	r3, #0
   38178:	beq	38288 <luaL_typerror@@Base+0x1f1c>
   3817c:	sub	r6, r6, #41	; 0x29
   38180:	cmp	r6, #57	; 0x39
   38184:	ldrls	pc, [pc, r6, lsl #2]
   38188:	b	38288 <luaL_typerror@@Base+0x1f1c>
   3818c:	strdeq	r8, [r3], -r4
   38190:	andeq	r8, r3, r4, asr #9
   38194:	andeq	r8, r3, r8, lsl #5
   38198:	andeq	r8, r3, r8, lsl #5
   3819c:	andeq	r8, r3, r8, lsl #5
   381a0:	andeq	r8, r3, r8, lsl #5
   381a4:	muleq	r3, r4, r4
   381a8:	andeq	r8, r3, r8, lsl #5
   381ac:	andeq	r8, r3, r8, lsl #5
   381b0:	andeq	r8, r3, r8, lsl #5
   381b4:	andeq	r8, r3, r8, lsl #5
   381b8:	andeq	r8, r3, r8, lsl #5
   381bc:	andeq	r8, r3, r8, lsl #5
   381c0:	andeq	r8, r3, r8, lsl #5
   381c4:	andeq	r8, r3, r8, lsl #5
   381c8:	andeq	r8, r3, r8, lsl #5
   381cc:	andeq	r8, r3, r8, lsl #5
   381d0:	andeq	r8, r3, r8, lsl #5
   381d4:	andeq	r8, r3, r8, lsl #5
   381d8:	andeq	r8, r3, r8, lsl #5
   381dc:	andeq	r8, r3, r8, lsl #5
   381e0:	andeq	r8, r3, r8, lsl #5
   381e4:	andeq	r8, r3, r8, lsl #5
   381e8:	andeq	r8, r3, r8, lsl #5
   381ec:	andeq	r8, r3, r8, lsl #5
   381f0:	andeq	r8, r3, r8, lsl #5
   381f4:	andeq	r8, r3, r8, lsl #5
   381f8:	andeq	r8, r3, r8, lsl #5
   381fc:	andeq	r8, r3, r8, lsl #5
   38200:	andeq	r8, r3, r8, lsl #5
   38204:	andeq	r8, r3, r8, lsl #5
   38208:	andeq	r8, r3, r8, lsl #5
   3820c:	andeq	r8, r3, r8, lsl #5
   38210:	andeq	r8, r3, r8, lsl #5
   38214:	andeq	r8, r3, r8, lsl #5
   38218:	andeq	r8, r3, r8, lsl #5
   3821c:	andeq	r8, r3, r8, lsl #5
   38220:	andeq	r8, r3, r8, lsl #5
   38224:	andeq	r8, r3, r8, lsl #5
   38228:	andeq	r8, r3, r8, lsl #5
   3822c:	andeq	r8, r3, r8, lsl #5
   38230:	andeq	r8, r3, r8, lsl #5
   38234:	andeq	r8, r3, r8, lsl #5
   38238:	andeq	r8, r3, r8, lsl #5
   3823c:	andeq	r8, r3, r8, lsl #5
   38240:	andeq	r8, r3, r8, lsl #5
   38244:	andeq	r8, r3, r8, lsl #5
   38248:	andeq	r8, r3, r8, lsl #5
   3824c:	andeq	r8, r3, r8, lsl #5
   38250:	andeq	r8, r3, r8, lsl #5
   38254:	andeq	r8, r3, r8, lsl #5
   38258:	andeq	r8, r3, r8, lsl #5
   3825c:	andeq	r8, r3, r8, lsl #5
   38260:	andeq	r8, r3, r4, lsr #10
   38264:	andeq	r8, r3, r8, lsl #5
   38268:	andeq	r8, r3, r8, lsl #5
   3826c:	andeq	r8, r3, r4, lsr #10
   38270:	andeq	r8, r3, r4, lsr #10
   38274:	ldr	r2, [r4, #176]	; 0xb0
   38278:	orrs	r3, r0, r3
   3827c:	sub	r3, r2, #1
   38280:	str	r3, [r4, #176]	; 0xb0
   38284:	bne	383f0 <luaL_typerror@@Base+0x2084>
   38288:	add	sp, sp, #36	; 0x24
   3828c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38290:	ldr	r3, [r4, #176]	; 0xb0
   38294:	cmp	r6, #3
   38298:	sub	r3, r3, #1
   3829c:	ldr	sl, [pc, #696]	; 3855c <luaL_typerror@@Base+0x21f0>
   382a0:	str	r3, [r4, #176]	; 0xb0
   382a4:	mov	r3, r6
   382a8:	addls	r3, r6, #4
   382ac:	add	r3, sl, r3
   382b0:	ldr	r8, [pc, #680]	; 38560 <luaL_typerror@@Base+0x21f4>
   382b4:	ldrb	r3, [r3, #1488]	; 0x5d0
   382b8:	mov	r2, r8
   382bc:	ldrh	r1, [r5, #-8]
   382c0:	and	r3, r3, #15
   382c4:	mov	r0, r4
   382c8:	str	r3, [sp, #4]
   382cc:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   382d0:	mov	fp, #1
   382d4:	ldr	r9, [pc, #648]	; 38564 <luaL_typerror@@Base+0x21f8>
   382d8:	ldrh	r2, [r5, #-6]
   382dc:	mov	r1, r9
   382e0:	ldr	r7, [r4, #144]	; 0x90
   382e4:	bic	r8, r8, fp, lsl r0
   382e8:	str	r0, [sp, #8]
   382ec:	mov	r3, r8
   382f0:	mov	r0, r4
   382f4:	bl	21fec <luaL_where@@Base+0x1ee8>
   382f8:	ldrb	r2, [r5, #-3]
   382fc:	ldr	r3, [r4, #144]	; 0x90
   38300:	ldrh	r1, [r5]
   38304:	bic	r7, r7, r3
   38308:	add	sl, sl, r2
   3830c:	bic	r7, r8, r7
   38310:	mov	r2, r7
   38314:	ldrb	r8, [sl, #1488]	; 0x5d0
   38318:	str	r0, [sp, #12]
   3831c:	mov	r0, r4
   38320:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   38324:	ldrh	r2, [r5, #2]
   38328:	mov	r1, r9
   3832c:	bic	r3, r7, fp, lsl r0
   38330:	mov	sl, r0
   38334:	mov	r0, r4
   38338:	bl	21fec <luaL_where@@Base+0x1ee8>
   3833c:	cmp	r6, #3
   38340:	ldr	r1, [sp, #4]
   38344:	mov	r5, r0
   38348:	mov	r0, r4
   3834c:	bls	38390 <luaL_typerror@@Base+0x2024>
   38350:	bl	17a3c <_start@@Base+0x468c>
   38354:	ldr	r2, [r4, #128]	; 0x80
   38358:	ldr	r3, [sp, #12]
   3835c:	ldr	r1, [sp, #8]
   38360:	eor	fp, r3, #22020096	; 0x1500000
   38364:	sub	r3, r2, #4
   38368:	orr	fp, fp, r1, lsl #16
   3836c:	str	fp, [r2, #-4]
   38370:	eor	r5, r5, #-520093696	; 0xe1000000
   38374:	eor	r5, r5, #5242880	; 0x500000
   38378:	orr	r5, r5, sl, lsl #16
   3837c:	sub	r2, r3, #4
   38380:	str	r2, [r4, #128]	; 0x80
   38384:	str	r5, [r3, #-4]
   38388:	add	sp, sp, #36	; 0x24
   3838c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38390:	ldr	r6, [r4, #128]	; 0x80
   38394:	bl	17a3c <_start@@Base+0x468c>
   38398:	ldr	r1, [sp, #12]
   3839c:	ldr	r2, [r4, #128]	; 0x80
   383a0:	eor	r1, r1, r9
   383a4:	mov	r9, r1
   383a8:	ldr	r1, [sp, #8]
   383ac:	mov	r3, r2
   383b0:	orr	r9, r9, r1, lsl #16
   383b4:	str	r9, [r3, #-4]!
   383b8:	sub	r3, r6, r3
   383bc:	and	r1, r8, #15
   383c0:	asr	r3, r3, #2
   383c4:	sub	r3, r3, #1
   383c8:	bic	r3, r3, #-16777216	; 0xff000000
   383cc:	orr	r3, r3, #436207616	; 0x1a000000
   383d0:	cmp	r1, #13
   383d4:	cmpne	r1, #10
   383d8:	str	r3, [r2, #-8]!
   383dc:	eoreq	r1, r1, #6
   383e0:	str	r2, [r4, #128]	; 0x80
   383e4:	bl	17a3c <_start@@Base+0x468c>
   383e8:	ldr	r3, [r4, #128]	; 0x80
   383ec:	b	38370 <luaL_typerror@@Base+0x2004>
   383f0:	ldrh	r3, [r5, #-6]
   383f4:	ldrh	r0, [r5, #-8]
   383f8:	ldrh	r1, [r5]
   383fc:	and	r2, r3, #31
   38400:	sub	ip, r2, #13
   38404:	asr	r3, r3, #5
   38408:	cmp	ip, #1
   3840c:	and	r3, r3, #31
   38410:	strd	r0, [sp, #16]
   38414:	bls	38540 <luaL_typerror@@Base+0x21d4>
   38418:	cmp	r3, #13
   3841c:	sub	r3, r2, #21
   38420:	movne	r2, #77	; 0x4d
   38424:	moveq	r2, #79	; 0x4f
   38428:	add	r2, r3, r2
   3842c:	ldr	r3, [pc, #308]	; 38568 <luaL_typerror@@Base+0x21fc>
   38430:	add	r6, sp, #24
   38434:	add	r3, r3, r2, lsl #3
   38438:	sub	r3, r3, #2272	; 0x8e0
   3843c:	add	r2, sp, #32
   38440:	ldm	r3, {r0, r1}
   38444:	stm	r6, {r0, r1}
   38448:	ldr	r3, [sp, #28]
   3844c:	mov	r1, r5
   38450:	orr	r3, r3, #2048	; 0x800
   38454:	str	r3, [r2, #-4]!
   38458:	mov	r0, r4
   3845c:	bl	37d54 <luaL_typerror@@Base+0x19e8>
   38460:	mov	r1, r6
   38464:	mov	r0, r4
   38468:	add	r2, sp, #16
   3846c:	bl	25eac <luaL_where@@Base+0x5da8>
   38470:	b	38288 <luaL_typerror@@Base+0x1f1c>
   38474:	cmp	r1, #254	; 0xfe
   38478:	cmpne	r2, #254	; 0xfe
   3847c:	beq	38288 <luaL_typerror@@Base+0x1f1c>
   38480:	mov	r1, r5
   38484:	mov	r0, r4
   38488:	mov	r2, #4
   3848c:	bl	2256c <luaL_where@@Base+0x2468>
   38490:	b	38288 <luaL_typerror@@Base+0x1f1c>
   38494:	ldr	r3, [r4, #176]	; 0xb0
   38498:	mov	r1, r5
   3849c:	sub	r3, r3, #1
   384a0:	mov	r0, r4
   384a4:	ldr	r2, [pc, #192]	; 3856c <luaL_typerror@@Base+0x2200>
   384a8:	str	r3, [r4, #176]	; 0xb0
   384ac:	bl	22de4 <luaL_where@@Base+0x2ce0>
   384b0:	sub	r1, r5, #8
   384b4:	mov	r0, r4
   384b8:	ldr	r2, [pc, #176]	; 38570 <luaL_typerror@@Base+0x2204>
   384bc:	bl	22de4 <luaL_where@@Base+0x2ce0>
   384c0:	b	38288 <luaL_typerror@@Base+0x1f1c>
   384c4:	ldr	r3, [r4, #176]	; 0xb0
   384c8:	mov	r1, r5
   384cc:	sub	r3, r3, #1
   384d0:	mov	r0, r4
   384d4:	ldr	r2, [pc, #152]	; 38574 <luaL_typerror@@Base+0x2208>
   384d8:	str	r3, [r4, #176]	; 0xb0
   384dc:	bl	22cf4 <luaL_where@@Base+0x2bf0>
   384e0:	sub	r1, r5, #8
   384e4:	mov	r0, r4
   384e8:	ldr	r2, [pc, #136]	; 38578 <luaL_typerror@@Base+0x220c>
   384ec:	bl	22cf4 <luaL_where@@Base+0x2bf0>
   384f0:	b	38288 <luaL_typerror@@Base+0x1f1c>
   384f4:	ldr	r3, [r4, #176]	; 0xb0
   384f8:	mov	r1, r5
   384fc:	sub	r3, r3, #1
   38500:	mov	r0, r4
   38504:	ldr	r2, [pc, #112]	; 3857c <luaL_typerror@@Base+0x2210>
   38508:	str	r3, [r4, #176]	; 0xb0
   3850c:	bl	22cf4 <luaL_where@@Base+0x2bf0>
   38510:	sub	r1, r5, #8
   38514:	mov	r0, r4
   38518:	ldr	r2, [pc, #96]	; 38580 <luaL_typerror@@Base+0x2214>
   3851c:	bl	22cf4 <luaL_where@@Base+0x2bf0>
   38520:	b	38288 <luaL_typerror@@Base+0x1f1c>
   38524:	cmp	r0, #0
   38528:	bne	38288 <luaL_typerror@@Base+0x1f1c>
   3852c:	ldrh	r1, [r5]
   38530:	mov	r0, r4
   38534:	mov	r2, #1
   38538:	bl	21b9c <luaL_where@@Base+0x1a98>
   3853c:	b	38288 <luaL_typerror@@Base+0x1f1c>
   38540:	cmp	r2, #13
   38544:	sub	r3, r3, #21
   38548:	movne	r2, #81	; 0x51
   3854c:	moveq	r2, #83	; 0x53
   38550:	sub	r5, r5, #8
   38554:	add	r2, r3, r2
   38558:	b	3842c <luaL_typerror@@Base+0x20c0>
   3855c:			; <UNDEFINED> instruction: 0x0006ecb8
   38560:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   38564:	cmp	r0, r0
   38568:			; <UNDEFINED> instruction: 0x00070cb0
   3856c:	rsc	r0, r0, r0
   38570:	rsbs	r0, r0, r0
   38574:	sbc	r0, r0, r0
   38578:	subs	r0, r0, r0
   3857c:	adc	r0, r0, r0
   38580:	adds	r0, r0, r0
   38584:	push	{r4, r5, lr}
   38588:	sub	sp, sp, #12
   3858c:	ldr	r4, [pc, #52]	; 385c8 <luaL_typerror@@Base+0x225c>
   38590:	ldrh	ip, [r1]
   38594:	ldrh	r3, [r1, #2]
   38598:	add	r4, r4, r2, lsl #3
   3859c:	add	r2, r4, #4
   385a0:	mov	r5, r0
   385a4:	str	ip, [sp]
   385a8:	str	r3, [sp, #4]
   385ac:	bl	37d54 <luaL_typerror@@Base+0x19e8>
   385b0:	mov	r1, r4
   385b4:	mov	r0, r5
   385b8:	mov	r2, sp
   385bc:	bl	25eac <luaL_where@@Base+0x5da8>
   385c0:	add	sp, sp, #12
   385c4:	pop	{r4, r5, pc}
   385c8:	ldrdeq	r0, [r7], -r0	; <UNPREDICTABLE>
   385cc:	push	{r4, r5, r6, lr}
   385d0:	mov	r6, r1
   385d4:	ldrh	r5, [r1, #2]
   385d8:	sub	sp, sp, #8
   385dc:	mov	r4, r0
   385e0:	cmp	r5, #5
   385e4:	beq	386c0 <luaL_typerror@@Base+0x2354>
   385e8:	cmp	r5, #2
   385ec:	bls	38610 <luaL_typerror@@Base+0x22a4>
   385f0:	cmp	r5, #3
   385f4:	beq	38780 <luaL_typerror@@Base+0x2414>
   385f8:	add	r2, r5, #42	; 0x2a
   385fc:	mov	r1, r6
   38600:	mov	r0, r4
   38604:	bl	38584 <luaL_typerror@@Base+0x2218>
   38608:	add	sp, sp, #8
   3860c:	pop	{r4, r5, r6, pc}
   38610:	ldr	r1, [pc, #376]	; 38790 <luaL_typerror@@Base+0x2424>
   38614:	bl	3798c <luaL_typerror@@Base+0x1620>
   38618:	ldr	r2, [pc, #372]	; 38794 <luaL_typerror@@Base+0x2428>
   3861c:	mov	r1, r6
   38620:	mov	r0, r4
   38624:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   38628:	ldr	r2, [r4, #128]	; 0x80
   3862c:	ldr	r3, [pc, #356]	; 38798 <luaL_typerror@@Base+0x242c>
   38630:	sub	r1, r2, #4
   38634:	cmp	r5, #0
   38638:	str	r1, [r4, #128]	; 0x80
   3863c:	and	r0, r0, #15
   38640:	orr	r3, r0, r3
   38644:	str	r3, [r2, #-4]
   38648:	beq	38778 <luaL_typerror@@Base+0x240c>
   3864c:	ldr	r3, [pc, #328]	; 3879c <luaL_typerror@@Base+0x2430>
   38650:	cmp	r5, #1
   38654:	ldr	r1, [pc, #324]	; 387a0 <luaL_typerror@@Base+0x2434>
   38658:	movne	r1, r3
   3865c:	mov	r0, r4
   38660:	bl	21b2c <luaL_where@@Base+0x1a28>
   38664:	ldr	r5, [r4, #144]	; 0x90
   38668:	mvn	r3, #32768	; 0x8000
   3866c:	bic	r2, r5, #3
   38670:	ldrh	r1, [r6]
   38674:	mov	r0, r4
   38678:	str	r2, [r4, #144]	; 0x90
   3867c:	str	r3, [r4, #4]
   38680:	str	r3, [r4]
   38684:	ldr	r2, [pc, #264]	; 38794 <luaL_typerror@@Base+0x2428>
   38688:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3868c:	ldr	r2, [r4, #144]	; 0x90
   38690:	ldr	r1, [r4, #128]	; 0x80
   38694:	ldr	r3, [pc, #264]	; 387a4 <luaL_typerror@@Base+0x2438>
   38698:	and	r5, r5, #3
   3869c:	orr	r5, r2, r5
   386a0:	sub	r2, r1, #4
   386a4:	str	r5, [r4, #144]	; 0x90
   386a8:	str	r2, [r4, #128]	; 0x80
   386ac:	and	r0, r0, #15
   386b0:	orr	r3, r0, r3
   386b4:	str	r3, [r1, #-4]
   386b8:	add	sp, sp, #8
   386bc:	pop	{r4, r5, r6, pc}
   386c0:	mov	r2, r1
   386c4:	ldr	r0, [r0, #136]	; 0x88
   386c8:	ldrh	r3, [r2], #-8
   386cc:	lsl	r3, r3, #3
   386d0:	add	r1, r0, r3
   386d4:	cmp	r1, r2
   386d8:	bne	385f8 <luaL_typerror@@Base+0x228c>
   386dc:	ldrb	r2, [r1, #5]
   386e0:	cmp	r2, #43	; 0x2b
   386e4:	bne	385f8 <luaL_typerror@@Base+0x228c>
   386e8:	ldrsb	r2, [r1, #6]
   386ec:	cmp	r2, #0
   386f0:	bge	385f8 <luaL_typerror@@Base+0x228c>
   386f4:	ldrb	r2, [r1, #7]
   386f8:	cmp	r2, #0
   386fc:	bne	385f8 <luaL_typerror@@Base+0x228c>
   38700:	ldrh	r3, [r0, r3]
   38704:	sub	r2, r6, #16
   38708:	lsl	r3, r3, #3
   3870c:	add	ip, r0, r3
   38710:	cmp	ip, r2
   38714:	bne	385f8 <luaL_typerror@@Base+0x228c>
   38718:	ldrb	r2, [ip, #5]
   3871c:	cmp	r2, #53	; 0x35
   38720:	bne	385f8 <luaL_typerror@@Base+0x228c>
   38724:	ldrh	r2, [ip, #2]
   38728:	cmp	r2, #7
   3872c:	bne	385f8 <luaL_typerror@@Base+0x228c>
   38730:	ldrsb	r2, [ip, #6]
   38734:	cmp	r2, #0
   38738:	bge	385f8 <luaL_typerror@@Base+0x228c>
   3873c:	ldrb	r2, [ip, #7]
   38740:	cmp	r2, #0
   38744:	bne	385f8 <luaL_typerror@@Base+0x228c>
   38748:	ldrh	ip, [r1, #2]
   3874c:	ldrh	r3, [r0, r3]
   38750:	mov	r1, r6
   38754:	mov	r0, r4
   38758:	ldr	r2, [pc, #72]	; 387a8 <luaL_typerror@@Base+0x243c>
   3875c:	stm	sp, {r3, ip}
   38760:	bl	37d54 <luaL_typerror@@Base+0x19e8>
   38764:	mov	r0, r4
   38768:	mov	r2, sp
   3876c:	ldr	r1, [pc, #56]	; 387ac <luaL_typerror@@Base+0x2440>
   38770:	bl	25eac <luaL_where@@Base+0x5da8>
   38774:	b	38608 <luaL_typerror@@Base+0x229c>
   38778:	ldr	r1, [pc, #48]	; 387b0 <luaL_typerror@@Base+0x2444>
   3877c:	b	3865c <luaL_typerror@@Base+0x22f0>
   38780:	ldr	r2, [pc, #44]	; 387b4 <luaL_typerror@@Base+0x2448>
   38784:	bl	23068 <luaL_where@@Base+0x2f64>
   38788:	add	sp, sp, #8
   3878c:	pop	{r4, r5, r6, pc}
   38790:	andeq	r1, r0, pc
   38794:			; <UNDEFINED> instruction: 0xffff0000
   38798:	vmov	d0, r0, r1
   3879c:	andeq	sp, r6, r8, asr #15
   387a0:	andeq	sp, r6, r8, lsl #14
   387a4:	vmov	r0, r1, d0
   387a8:	andeq	r0, r7, ip, lsl #11
   387ac:	andeq	r0, r7, r8, lsl #11
   387b0:	strdeq	sp, [r6], -r8
   387b4:	vsqrt.f64	d0, d0
   387b8:	push	{r4, r5, r6, r7, lr}
   387bc:	mov	r4, r0
   387c0:	sub	sp, sp, #20
   387c4:	ldr	r1, [pc, #308]	; 38900 <luaL_typerror@@Base+0x2594>
   387c8:	bl	3798c <luaL_typerror@@Base+0x1620>
   387cc:	mov	r0, r4
   387d0:	mov	r1, #1
   387d4:	ldr	r5, [r4, #128]	; 0x80
   387d8:	bl	17a3c <_start@@Base+0x468c>
   387dc:	ldr	r3, [r4, #128]	; 0x80
   387e0:	ldr	r2, [pc, #284]	; 38904 <luaL_typerror@@Base+0x2598>
   387e4:	sub	r1, r3, #4
   387e8:	ldr	lr, [pc, #280]	; 38908 <luaL_typerror@@Base+0x259c>
   387ec:	ldr	ip, [pc, #280]	; 3890c <luaL_typerror@@Base+0x25a0>
   387f0:	str	r1, [r4, #128]	; 0x80
   387f4:	str	r2, [r3, #-4]
   387f8:	ldr	r1, [pc, #272]	; 38910 <luaL_typerror@@Base+0x25a4>
   387fc:	add	r2, sp, #8
   38800:	str	lr, [sp, #8]
   38804:	str	ip, [sp, #12]
   38808:	bl	25eac <luaL_where@@Base+0x5da8>
   3880c:	ldr	r3, [r4, #136]	; 0x88
   38810:	mov	r0, #1
   38814:	add	r3, r3, #261120	; 0x3fc00
   38818:	ldr	ip, [r4, #148]	; 0x94
   3881c:	ldrb	r6, [r3, #1006]	; 0x3ee
   38820:	ldrb	r7, [r3, #1014]	; 0x3f6
   38824:	ldr	r1, [r4, #144]	; 0x90
   38828:	lsl	r2, r0, r6
   3882c:	orr	r2, r2, r0, lsl r7
   38830:	mvn	r0, #0
   38834:	orr	r1, r2, r1
   38838:	orr	r2, r2, ip
   3883c:	strb	r0, [r3, #1006]	; 0x3ee
   38840:	str	r1, [r4, #144]	; 0x90
   38844:	str	r2, [r4, #148]	; 0x94
   38848:	mov	r1, r7
   3884c:	strb	r0, [r3, #1014]	; 0x3f6
   38850:	ldr	r2, [r4, #220]	; 0xdc
   38854:	mov	r0, r4
   38858:	bl	1e2e0 <_start@@Base+0xaf30>
   3885c:	ldr	r1, [r4, #128]	; 0x80
   38860:	orr	r0, r7, #-520093696	; 0xe1000000
   38864:	sub	r3, r5, r1
   38868:	sub	lr, r1, #8
   3886c:	asr	r3, r3, #2
   38870:	sub	r3, r3, #1
   38874:	bic	r3, r3, #-16777216	; 0xff000000
   38878:	mov	ip, #24
   3887c:	orr	r3, r3, #-1711276032	; 0x9a000000
   38880:	orr	r0, r0, #6160384	; 0x5e0000
   38884:	str	r3, [r1, #-4]
   38888:	mov	r2, r7
   3888c:	str	lr, [r4, #128]	; 0x80
   38890:	mov	r3, r6
   38894:	str	r0, [r1, #-8]
   38898:	str	ip, [sp]
   3889c:	mov	r0, r4
   388a0:	ldr	r1, [pc, #108]	; 38914 <luaL_typerror@@Base+0x25a8>
   388a4:	bl	16dbc <_start@@Base+0x3a0c>
   388a8:	mov	r2, #20
   388ac:	mov	r3, r6
   388b0:	mov	r0, r4
   388b4:	str	r2, [sp]
   388b8:	ldr	r1, [pc, #84]	; 38914 <luaL_typerror@@Base+0x25a8>
   388bc:	mov	r2, #14
   388c0:	bl	16dbc <_start@@Base+0x3a0c>
   388c4:	ldr	r1, [r4, #140]	; 0x8c
   388c8:	mov	r2, r6
   388cc:	sub	r1, r1, #384	; 0x180
   388d0:	mov	r0, r4
   388d4:	bl	22b78 <luaL_where@@Base+0x2a74>
   388d8:	ldr	r1, [r4, #128]	; 0x80
   388dc:	ldr	r2, [r4, #132]	; 0x84
   388e0:	mov	r3, #0
   388e4:	cmp	r1, r2
   388e8:	str	r3, [r4, #220]	; 0xdc
   388ec:	bcc	388f8 <luaL_typerror@@Base+0x258c>
   388f0:	add	sp, sp, #20
   388f4:	pop	{r4, r5, r6, r7, pc}
   388f8:	mov	r0, r4
   388fc:	bl	37790 <luaL_typerror@@Base+0x1424>
   38900:	rscseq	r1, pc, pc
   38904:	cmp	r0, #0
   38908:	strdeq	r7, [r0], -sp
   3890c:	strdeq	r7, [r0], -lr
   38910:	andeq	r0, r7, r8, asr #9
   38914:	ldr	r0, [r0], #-0
   38918:	ldr	r2, [r0, #220]	; 0xdc
   3891c:	ldr	r3, [r0, #196]	; 0xc4
   38920:	cmp	r2, #0
   38924:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   38928:	mov	r6, r0
   3892c:	sub	sp, sp, #8
   38930:	str	r3, [r0, #200]	; 0xc8
   38934:	bne	38a8c <luaL_typerror@@Base+0x2720>
   38938:	ldr	r2, [r6, #204]	; 0xcc
   3893c:	mov	r7, #1
   38940:	mov	r3, #0
   38944:	cmn	r2, #1
   38948:	str	r3, [r6, #244]	; 0xf4
   3894c:	str	r3, [r6, #248]	; 0xf8
   38950:	str	r3, [r6, #208]	; 0xd0
   38954:	strne	r3, [r6, #204]	; 0xcc
   38958:	ldr	r2, [r6, #144]	; 0x90
   3895c:	ldr	r5, [r6, #156]	; 0x9c
   38960:	cmp	r5, #0
   38964:	beq	38a98 <luaL_typerror@@Base+0x272c>
   38968:	mov	r9, #0
   3896c:	mov	r8, r9
   38970:	b	389b8 <luaL_typerror@@Base+0x264c>
   38974:	lsr	r3, r2, r4
   38978:	tst	r3, #1
   3897c:	bne	38a54 <luaL_typerror@@Base+0x26e8>
   38980:	ldr	r1, [r6, r4, lsl #2]
   38984:	uxth	r1, r1
   38988:	cmp	r1, #15
   3898c:	bls	38a40 <luaL_typerror@@Base+0x26d4>
   38990:	add	r0, r0, r1, lsl #3
   38994:	ldrb	r3, [r0, #4]
   38998:	tst	r3, #32
   3899c:	beq	38a40 <luaL_typerror@@Base+0x26d4>
   389a0:	lsl	r4, r7, r4
   389a4:	tst	sl, #128	; 0x80
   389a8:	orr	r8, r8, r4
   389ac:	orreq	r9, r9, r7, lsl sl
   389b0:	bics	r5, r5, r4
   389b4:	beq	389f4 <luaL_typerror@@Base+0x2688>
   389b8:	rsb	r4, r5, #0
   389bc:	and	r4, r4, r5
   389c0:	clz	r4, r4
   389c4:	rsb	r4, r4, #31
   389c8:	add	r3, r4, #160	; 0xa0
   389cc:	ldr	r0, [r6, #136]	; 0x88
   389d0:	lsl	r3, r3, #1
   389d4:	ldrh	r3, [r6, r3]
   389d8:	add	r3, r0, r3, lsl #3
   389dc:	ldrb	sl, [r3, #6]
   389e0:	cmp	r4, sl
   389e4:	bne	38974 <luaL_typerror@@Base+0x2608>
   389e8:	lsl	r4, r7, r4
   389ec:	bics	r5, r5, r4
   389f0:	bne	389b8 <luaL_typerror@@Base+0x264c>
   389f4:	cmp	r8, #0
   389f8:	beq	38a94 <luaL_typerror@@Base+0x2728>
   389fc:	tst	r8, r2
   38a00:	bne	3895c <luaL_typerror@@Base+0x25f0>
   38a04:	ldr	r3, [pc, #1244]	; 38ee8 <luaL_typerror@@Base+0x2b7c>
   38a08:	mov	r2, r9
   38a0c:	mov	r1, r8
   38a10:	mov	r0, r6
   38a14:	bl	264d8 <luaL_where@@Base+0x63d4>
   38a18:	mov	r2, r9
   38a1c:	ldr	r3, [pc, #1224]	; 38eec <luaL_typerror@@Base+0x2b80>
   38a20:	mov	r1, r8
   38a24:	mov	r0, r6
   38a28:	bl	264d8 <luaL_where@@Base+0x63d4>
   38a2c:	ldrd	r2, [r6, #128]	; 0x80
   38a30:	cmp	r2, r3
   38a34:	bcs	38958 <luaL_typerror@@Base+0x25ec>
   38a38:	mov	r0, r6
   38a3c:	bl	37790 <luaL_typerror@@Base+0x1424>
   38a40:	mov	r0, r6
   38a44:	bl	21284 <luaL_where@@Base+0x1180>
   38a48:	ldrd	r2, [r6, #128]	; 0x80
   38a4c:	cmp	r2, r3
   38a50:	bcc	38a38 <luaL_typerror@@Base+0x26cc>
   38a54:	tst	sl, #128	; 0x80
   38a58:	beq	38a68 <luaL_typerror@@Base+0x26fc>
   38a5c:	lsl	r4, r7, r4
   38a60:	ldr	r2, [r6, #144]	; 0x90
   38a64:	b	389b0 <luaL_typerror@@Base+0x2644>
   38a68:	mov	r2, r4
   38a6c:	mov	r1, sl
   38a70:	mov	r0, r6
   38a74:	bl	25d28 <luaL_where@@Base+0x5c24>
   38a78:	ldrd	r2, [r6, #128]	; 0x80
   38a7c:	cmp	r2, r3
   38a80:	bcs	38a5c <luaL_typerror@@Base+0x26f0>
   38a84:	mov	r0, r6
   38a88:	bl	37790 <luaL_typerror@@Base+0x1424>
   38a8c:	bl	387b8 <luaL_typerror@@Base+0x244c>
   38a90:	b	38938 <luaL_typerror@@Base+0x25cc>
   38a94:	ldr	r5, [r6, #156]	; 0x9c
   38a98:	ldr	r1, [r6, #148]	; 0x94
   38a9c:	orr	r3, r2, r5
   38aa0:	mvn	r3, r3
   38aa4:	lsr	r4, r1, #16
   38aa8:	lsl	r4, r4, #16
   38aac:	ands	r4, r4, r3
   38ab0:	beq	38b0c <luaL_typerror@@Base+0x27a0>
   38ab4:	mov	r5, #1
   38ab8:	b	38ac4 <luaL_typerror@@Base+0x2758>
   38abc:	cmp	r4, #0
   38ac0:	beq	38af8 <luaL_typerror@@Base+0x278c>
   38ac4:	rsb	r3, r4, #0
   38ac8:	and	r3, r3, r4
   38acc:	clz	r3, r3
   38ad0:	rsb	r3, r3, #31
   38ad4:	mov	r0, r6
   38ad8:	ldr	r1, [r6, r3, lsl #2]
   38adc:	bic	r4, r4, r5, lsl r3
   38ae0:	uxth	r1, r1
   38ae4:	bl	21284 <luaL_where@@Base+0x1180>
   38ae8:	ldrd	r2, [r6, #128]	; 0x80
   38aec:	cmp	r2, r3
   38af0:	bcs	38abc <luaL_typerror@@Base+0x2750>
   38af4:	b	38a38 <luaL_typerror@@Base+0x26cc>
   38af8:	ldr	r5, [r6, #156]	; 0x9c
   38afc:	ldr	r3, [r6, #144]	; 0x90
   38b00:	ldr	r1, [r6, #148]	; 0x94
   38b04:	orr	r3, r5, r3
   38b08:	mvn	r3, r3
   38b0c:	ands	r4, r1, r3
   38b10:	beq	38b5c <luaL_typerror@@Base+0x27f0>
   38b14:	mov	r5, #1
   38b18:	b	38b24 <luaL_typerror@@Base+0x27b8>
   38b1c:	cmp	r4, #0
   38b20:	beq	38b58 <luaL_typerror@@Base+0x27ec>
   38b24:	rsb	r3, r4, #0
   38b28:	and	r3, r3, r4
   38b2c:	clz	r3, r3
   38b30:	rsb	r3, r3, #31
   38b34:	mov	r0, r6
   38b38:	ldr	r1, [r6, r3, lsl #2]
   38b3c:	bic	r4, r4, r5, lsl r3
   38b40:	uxth	r1, r1
   38b44:	bl	21284 <luaL_where@@Base+0x1180>
   38b48:	ldrd	r2, [r6, #128]	; 0x80
   38b4c:	cmp	r2, r3
   38b50:	bcs	38b1c <luaL_typerror@@Base+0x27b0>
   38b54:	b	38a38 <luaL_typerror@@Base+0x26cc>
   38b58:	ldr	r5, [r6, #156]	; 0x9c
   38b5c:	cmp	r5, #0
   38b60:	ldr	r0, [r6, #136]	; 0x88
   38b64:	beq	38bf0 <luaL_typerror@@Base+0x2884>
   38b68:	mov	r8, #1
   38b6c:	b	38b78 <luaL_typerror@@Base+0x280c>
   38b70:	bics	r5, r5, r7
   38b74:	beq	38bf0 <luaL_typerror@@Base+0x2884>
   38b78:	clz	r9, r5
   38b7c:	eor	r9, r9, #31
   38b80:	add	r3, r9, #160	; 0xa0
   38b84:	lsl	r7, r8, r9
   38b88:	lsl	r3, r3, #1
   38b8c:	ldrh	r1, [r6, r3]
   38b90:	add	r4, r0, r1, lsl #3
   38b94:	ldrb	r3, [r4, #7]
   38b98:	cmp	r3, #0
   38b9c:	beq	38b70 <luaL_typerror@@Base+0x2804>
   38ba0:	ldrb	r3, [r4, #4]
   38ba4:	mov	sl, r4
   38ba8:	mov	r2, r7
   38bac:	bic	r3, r3, #32
   38bb0:	strb	r3, [sl, #4]!
   38bb4:	mov	r0, r6
   38bb8:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   38bbc:	ldrb	r0, [r4, #7]
   38bc0:	mov	r2, r9
   38bc4:	mov	r3, #13
   38bc8:	mov	r1, sl
   38bcc:	lsl	r0, r0, #2
   38bd0:	str	r0, [sp]
   38bd4:	mov	r0, r6
   38bd8:	bl	1cb2c <_start@@Base+0x977c>
   38bdc:	ldrd	r2, [r6, #128]	; 0x80
   38be0:	cmp	r2, r3
   38be4:	bcc	38a38 <luaL_typerror@@Base+0x26cc>
   38be8:	ldr	r0, [r6, #136]	; 0x88
   38bec:	b	38b70 <luaL_typerror@@Base+0x2804>
   38bf0:	ldr	r4, [r6, #184]	; 0xb8
   38bf4:	ldr	r3, [r6, #128]	; 0x80
   38bf8:	sub	r4, r4, #-536870911	; 0xe0000001
   38bfc:	mov	r7, r3
   38c00:	add	r4, r0, r4, lsl #3
   38c04:	ldrb	r2, [r4, #5]
   38c08:	cmp	r2, #19
   38c0c:	bne	38e58 <luaL_typerror@@Base+0x2aec>
   38c10:	sub	r4, r4, #8
   38c14:	mov	r2, r4
   38c18:	mov	r5, #0
   38c1c:	ldrb	r1, [r2, #15]
   38c20:	cmp	r1, #0
   38c24:	beq	38c58 <luaL_typerror@@Base+0x28ec>
   38c28:	ldrh	r1, [r2, #8]
   38c2c:	add	r1, r0, r1, lsl #3
   38c30:	ldrb	r1, [r1, #7]
   38c34:	cmp	r1, #0
   38c38:	beq	38c58 <luaL_typerror@@Base+0x28ec>
   38c3c:	ldrb	r1, [r2, #12]
   38c40:	and	r1, r1, #31
   38c44:	sub	r1, r1, #13
   38c48:	cmp	r1, #1
   38c4c:	movhi	r1, #1
   38c50:	movls	r1, #2
   38c54:	orr	r5, r5, r1
   38c58:	sub	r2, r2, #8
   38c5c:	ldrb	r1, [r2, #13]
   38c60:	cmp	r1, #19
   38c64:	beq	38c1c <luaL_typerror@@Base+0x28b0>
   38c68:	tst	r5, #1
   38c6c:	ldrne	r8, [pc, #636]	; 38ef0 <luaL_typerror@@Base+0x2b84>
   38c70:	bne	38c88 <luaL_typerror@@Base+0x291c>
   38c74:	b	38d10 <luaL_typerror@@Base+0x29a4>
   38c78:	sub	r4, r4, #8
   38c7c:	ldrb	r2, [r4, #13]
   38c80:	cmp	r2, #19
   38c84:	bne	38d10 <luaL_typerror@@Base+0x29a4>
   38c88:	ldrb	r2, [r4, #15]
   38c8c:	cmp	r2, #0
   38c90:	beq	38c78 <luaL_typerror@@Base+0x290c>
   38c94:	ldrh	r1, [r4, #8]
   38c98:	ldr	r2, [r6, #136]	; 0x88
   38c9c:	add	r2, r2, r1, lsl #3
   38ca0:	ldrb	r1, [r2, #7]
   38ca4:	cmp	r1, #0
   38ca8:	beq	38c78 <luaL_typerror@@Base+0x290c>
   38cac:	ldrb	r2, [r4, #12]
   38cb0:	and	r2, r2, #31
   38cb4:	sub	r2, r2, #13
   38cb8:	cmp	r2, #1
   38cbc:	bls	38c78 <luaL_typerror@@Base+0x290c>
   38cc0:	lsl	r1, r1, #2
   38cc4:	str	r1, [sp]
   38cc8:	mov	r3, #13
   38ccc:	mov	r2, #14
   38cd0:	mov	r1, #-469762048	; 0xe4000000
   38cd4:	mov	r0, r6
   38cd8:	bl	16dbc <_start@@Base+0x3a0c>
   38cdc:	ldrb	r0, [r4, #15]
   38ce0:	mov	r3, #13
   38ce4:	mov	r2, #14
   38ce8:	mov	r1, r8
   38cec:	lsl	r0, r0, #2
   38cf0:	str	r0, [sp]
   38cf4:	mov	r0, r6
   38cf8:	bl	16dbc <_start@@Base+0x3a0c>
   38cfc:	ldr	r3, [r6, #128]	; 0x80
   38d00:	ldr	r2, [r6, #132]	; 0x84
   38d04:	cmp	r3, r2
   38d08:	bcs	38c78 <luaL_typerror@@Base+0x290c>
   38d0c:	b	38a38 <luaL_typerror@@Base+0x26cc>
   38d10:	tst	r5, #2
   38d14:	beq	38e58 <luaL_typerror@@Base+0x2aec>
   38d18:	ldr	r1, [r6, #144]	; 0x90
   38d1c:	ldr	r4, [r6, #136]	; 0x88
   38d20:	lsr	r2, r1, #16
   38d24:	lsl	r2, r2, #16
   38d28:	cmp	r2, #0
   38d2c:	rsbne	r5, r2, #0
   38d30:	andne	r5, r5, r2
   38d34:	moveq	r5, #16
   38d38:	clzne	r5, r5
   38d3c:	rsbne	r5, r5, #31
   38d40:	lsr	r2, r1, r5
   38d44:	ands	r2, r2, #1
   38d48:	beq	38e04 <luaL_typerror@@Base+0x2a98>
   38d4c:	ldr	r2, [r6, #184]	; 0xb8
   38d50:	sub	r2, r2, #-536870911	; 0xe0000001
   38d54:	add	r4, r4, r2, lsl #3
   38d58:	ldrb	r2, [r4, #5]
   38d5c:	cmp	r2, #19
   38d60:	bne	38e58 <luaL_typerror@@Base+0x2aec>
   38d64:	sub	r4, r4, #8
   38d68:	b	38d7c <luaL_typerror@@Base+0x2a10>
   38d6c:	sub	r4, r4, #8
   38d70:	ldrb	r3, [r4, #13]
   38d74:	cmp	r3, #19
   38d78:	bne	38e44 <luaL_typerror@@Base+0x2ad8>
   38d7c:	ldrb	r3, [r4, #15]
   38d80:	cmp	r3, #0
   38d84:	beq	38d6c <luaL_typerror@@Base+0x2a00>
   38d88:	ldrh	r3, [r4, #8]
   38d8c:	ldr	r1, [r6, #136]	; 0x88
   38d90:	add	r1, r1, r3, lsl #3
   38d94:	ldrb	r2, [r1, #7]
   38d98:	cmp	r2, #0
   38d9c:	beq	38d6c <luaL_typerror@@Base+0x2a00>
   38da0:	ldrb	r3, [r4, #12]
   38da4:	and	r3, r3, #31
   38da8:	sub	r3, r3, #13
   38dac:	cmp	r3, #1
   38db0:	bhi	38d6c <luaL_typerror@@Base+0x2a00>
   38db4:	lsl	r2, r2, #2
   38db8:	str	r2, [sp]
   38dbc:	add	r1, r1, #4
   38dc0:	mov	r3, #13
   38dc4:	mov	r2, r5
   38dc8:	mov	r0, r6
   38dcc:	bl	1cb2c <_start@@Base+0x977c>
   38dd0:	ldrb	r0, [r4, #15]
   38dd4:	mov	r3, #13
   38dd8:	mov	r2, r5
   38ddc:	add	r1, r4, #12
   38de0:	lsl	r0, r0, #2
   38de4:	str	r0, [sp]
   38de8:	mov	r0, r6
   38dec:	bl	1caa4 <_start@@Base+0x96f4>
   38df0:	ldr	r3, [r6, #128]	; 0x80
   38df4:	ldr	r2, [r6, #132]	; 0x84
   38df8:	cmp	r3, r2
   38dfc:	bcs	38d6c <luaL_typerror@@Base+0x2a00>
   38e00:	b	38a38 <luaL_typerror@@Base+0x26cc>
   38e04:	ldr	r1, [r6, r5, lsl #2]
   38e08:	mov	r3, #13
   38e0c:	str	r2, [sp]
   38e10:	uxth	r1, r1
   38e14:	mov	r2, r5
   38e18:	add	r1, r4, r1, lsl #3
   38e1c:	add	r1, r1, #4
   38e20:	mov	r0, r6
   38e24:	bl	1caa4 <_start@@Base+0x96f4>
   38e28:	ldr	r3, [r6, #184]	; 0xb8
   38e2c:	ldr	r4, [r6, #136]	; 0x88
   38e30:	sub	r3, r3, #-536870911	; 0xe0000001
   38e34:	add	r4, r4, r3, lsl #3
   38e38:	ldrb	r3, [r4, #5]
   38e3c:	cmp	r3, #19
   38e40:	beq	38d64 <luaL_typerror@@Base+0x29f8>
   38e44:	ldr	r3, [r6, #144]	; 0x90
   38e48:	lsr	r3, r3, r5
   38e4c:	ands	r3, r3, #1
   38e50:	beq	38ebc <luaL_typerror@@Base+0x2b50>
   38e54:	ldr	r3, [r6, #128]	; 0x80
   38e58:	ldr	r1, [r6, #236]	; 0xec
   38e5c:	ldr	r0, [r6, #164]	; 0xa4
   38e60:	sub	r2, r3, r1
   38e64:	cmp	r0, #0
   38e68:	asr	r2, r2, #2
   38e6c:	ldrne	r0, [r1, #-8]
   38e70:	subeq	r2, r2, #1
   38e74:	bicne	r2, r2, #-16777216	; 0xff000000
   38e78:	biceq	r2, r2, #-16777216	; 0xff000000
   38e7c:	orrne	r2, r0, r2
   38e80:	orreq	r2, r2, #-369098752	; 0xea000000
   38e84:	strne	r2, [r1, #-8]
   38e88:	streq	r2, [r1, #-4]
   38e8c:	cmp	r7, r3
   38e90:	str	r3, [r6, #240]	; 0xf0
   38e94:	beq	38eb4 <luaL_typerror@@Base+0x2b48>
   38e98:	sub	r2, r7, r3
   38e9c:	asr	r2, r2, #2
   38ea0:	sub	r2, r2, #1
   38ea4:	bic	r2, r2, #-16777216	; 0xff000000
   38ea8:	orr	r2, r2, #-369098752	; 0xea000000
   38eac:	str	r2, [r3, #-4]!
   38eb0:	str	r3, [r6, #128]	; 0x80
   38eb4:	add	sp, sp, #8
   38eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   38ebc:	ldr	r2, [r6, r5, lsl #2]
   38ec0:	ldr	r1, [r6, #136]	; 0x88
   38ec4:	str	r3, [sp]
   38ec8:	uxth	r3, r2
   38ecc:	mov	r0, r6
   38ed0:	add	r1, r1, r3, lsl #3
   38ed4:	mov	r2, r5
   38ed8:	add	r1, r1, #4
   38edc:	mov	r3, #13
   38ee0:	bl	1cb2c <_start@@Base+0x977c>
   38ee4:	b	38e54 <luaL_typerror@@Base+0x2ae8>
   38ee8:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   38eec:			; <UNDEFINED> instruction: 0xffff0000
   38ef0:	ldr	r0, [r0], #-0
   38ef4:	push	{r4, r5, r6, r7, r8, lr}
   38ef8:	mov	r7, r0
   38efc:	ldr	r8, [pc, #596]	; 39158 <luaL_typerror@@Base+0x2dec>
   38f00:	ldr	r0, [r0, #136]	; 0x88
   38f04:	ldr	r6, [pc, #592]	; 3915c <luaL_typerror@@Base+0x2df0>
   38f08:	mvn	r5, #2
   38f0c:	cmp	r1, r8
   38f10:	add	r4, r0, r1, lsl #3
   38f14:	popls	{r4, r5, r6, r7, r8, pc}
   38f18:	ldrb	r3, [r4, #6]
   38f1c:	tst	r3, #128	; 0x80
   38f20:	popeq	{r4, r5, r6, r7, r8, pc}
   38f24:	ldrb	ip, [r4, #7]
   38f28:	subs	r2, r3, #253	; 0xfd
   38f2c:	movne	r2, #1
   38f30:	cmp	ip, #0
   38f34:	movne	r2, #0
   38f38:	cmp	r2, #0
   38f3c:	popeq	{r4, r5, r6, r7, r8, pc}
   38f40:	cmp	r3, #254	; 0xfe
   38f44:	ldrb	r3, [r4, #5]
   38f48:	bne	38f7c <luaL_typerror@@Base+0x2c10>
   38f4c:	cmp	r3, #83	; 0x53
   38f50:	strb	r5, [r4, #6]
   38f54:	bne	39084 <luaL_typerror@@Base+0x2d18>
   38f58:	ldrh	r1, [r4, #2]
   38f5c:	mov	r0, r7
   38f60:	bl	38ef4 <luaL_typerror@@Base+0x2b88>
   38f64:	ldrb	r3, [r4, #13]
   38f68:	cmp	r3, #16
   38f6c:	popne	{r4, r5, r6, r7, r8, pc}
   38f70:	ldrh	r1, [r4, #10]
   38f74:	ldr	r0, [r7, #136]	; 0x88
   38f78:	b	38f0c <luaL_typerror@@Base+0x2ba0>
   38f7c:	cmp	r3, #90	; 0x5a
   38f80:	bne	38fdc <luaL_typerror@@Base+0x2c70>
   38f84:	ldrh	r3, [r4, #2]
   38f88:	cmp	r3, r6
   38f8c:	bne	38fdc <luaL_typerror@@Base+0x2c70>
   38f90:	ldr	r3, [r7, #176]	; 0xb0
   38f94:	add	r3, r0, r3, lsl #3
   38f98:	cmp	r4, r3
   38f9c:	bcc	38fbc <luaL_typerror@@Base+0x2c50>
   38fa0:	b	39014 <luaL_typerror@@Base+0x2ca8>
   38fa4:	ldrh	r2, [r3, #2]
   38fa8:	cmp	r2, r1
   38fac:	beq	38fc8 <luaL_typerror@@Base+0x2c5c>
   38fb0:	sub	r3, r3, #8
   38fb4:	cmp	r4, r3
   38fb8:	bcs	39014 <luaL_typerror@@Base+0x2ca8>
   38fbc:	ldrh	r2, [r3]
   38fc0:	cmp	r2, r1
   38fc4:	bne	38fa4 <luaL_typerror@@Base+0x2c38>
   38fc8:	ldrb	r2, [r3, #6]
   38fcc:	add	r2, r2, #3
   38fd0:	uxtb	r2, r2
   38fd4:	cmp	r2, #1
   38fd8:	bls	38fb0 <luaL_typerror@@Base+0x2c44>
   38fdc:	ldrb	ip, [r4, #4]
   38fe0:	ldr	r0, [r7, #144]	; 0x90
   38fe4:	and	r3, ip, #31
   38fe8:	sub	r3, r3, #13
   38fec:	cmp	r3, #1
   38ff0:	bls	3901c <luaL_typerror@@Base+0x2cb0>
   38ff4:	ldr	r2, [pc, #356]	; 39160 <luaL_typerror@@Base+0x2df4>
   38ff8:	tst	r0, r2
   38ffc:	bne	3904c <luaL_typerror@@Base+0x2ce0>
   39000:	add	r2, r4, #7
   39004:	mov	r0, r7
   39008:	mov	r1, ip
   3900c:	pop	{r4, r5, r6, r7, r8, lr}
   39010:	b	211f4 <luaL_where@@Base+0x10f0>
   39014:	ldrh	r1, [r4]
   39018:	b	38f0c <luaL_typerror@@Base+0x2ba0>
   3901c:	ldr	r2, [pc, #320]	; 39164 <luaL_typerror@@Base+0x2df8>
   39020:	tst	r0, r2
   39024:	bne	3904c <luaL_typerror@@Base+0x2ce0>
   39028:	add	r3, r7, #60	; 0x3c
   3902c:	add	r0, r7, #124	; 0x7c
   39030:	b	3903c <luaL_typerror@@Base+0x2cd0>
   39034:	cmp	r0, r3
   39038:	beq	39000 <luaL_typerror@@Base+0x2c94>
   3903c:	ldr	r2, [r3, #4]!
   39040:	tst	r2, #32768	; 0x8000
   39044:	bne	39034 <luaL_typerror@@Base+0x2cc8>
   39048:	ldr	r2, [pc, #276]	; 39164 <luaL_typerror@@Base+0x2df8>
   3904c:	mov	r0, r7
   39050:	bl	21b9c <luaL_where@@Base+0x1a98>
   39054:	ldrb	r3, [r4, #4]
   39058:	tst	r3, #64	; 0x40
   3905c:	moveq	r2, #1
   39060:	ldreq	r3, [r7, #152]	; 0x98
   39064:	orreq	r3, r3, r2, lsl r0
   39068:	ldr	r2, [r7, #132]	; 0x84
   3906c:	streq	r3, [r7, #152]	; 0x98
   39070:	ldr	r3, [r7, #128]	; 0x80
   39074:	cmp	r2, r3
   39078:	popls	{r4, r5, r6, r7, r8, pc}
   3907c:	mov	r0, r7
   39080:	bl	37790 <luaL_typerror@@Base+0x1424>
   39084:	ldr	r5, [r7, #188]	; 0xbc
   39088:	sub	r5, r5, #-536870911	; 0xe0000001
   3908c:	add	r5, r0, r5, lsl #3
   39090:	cmp	r4, r5
   39094:	popcs	{r4, r5, r6, r7, r8, pc}
   39098:	ldrb	r3, [r5, #6]
   3909c:	cmp	r3, #254	; 0xfe
   390a0:	beq	390b4 <luaL_typerror@@Base+0x2d48>
   390a4:	sub	r5, r5, #8
   390a8:	cmp	r4, r5
   390ac:	bcc	39098 <luaL_typerror@@Base+0x2d2c>
   390b0:	pop	{r4, r5, r6, r7, r8, pc}
   390b4:	ldrb	r3, [r5, #7]
   390b8:	cmp	r3, #255	; 0xff
   390bc:	beq	39100 <luaL_typerror@@Base+0x2d94>
   390c0:	add	r3, r4, r3, lsl #3
   390c4:	sub	r3, r5, r3
   390c8:	clz	r3, r3
   390cc:	lsr	r3, r3, #5
   390d0:	cmp	r3, #0
   390d4:	beq	390a4 <luaL_typerror@@Base+0x2d38>
   390d8:	ldrh	r1, [r5, #2]
   390dc:	mov	r0, r7
   390e0:	bl	38ef4 <luaL_typerror@@Base+0x2b88>
   390e4:	ldrb	r3, [r5, #13]
   390e8:	cmp	r3, #16
   390ec:	bne	390a4 <luaL_typerror@@Base+0x2d38>
   390f0:	ldrh	r1, [r5, #10]
   390f4:	mov	r0, r7
   390f8:	bl	38ef4 <luaL_typerror@@Base+0x2b88>
   390fc:	b	390a4 <luaL_typerror@@Base+0x2d38>
   39100:	ldrb	r3, [r5, #5]
   39104:	sub	r2, r3, #73	; 0x49
   39108:	sub	r3, r3, #76	; 0x4c
   3910c:	cmp	r3, #1
   39110:	cmphi	r2, #1
   39114:	bhi	390a4 <luaL_typerror@@Base+0x2d38>
   39118:	ldrh	r3, [r5]
   3911c:	ldr	r2, [r7, #136]	; 0x88
   39120:	lsl	r3, r3, #3
   39124:	add	r0, r2, r3
   39128:	ldrh	r1, [r2, r3]
   3912c:	ldrb	r3, [r0, #5]
   39130:	sub	r3, r3, #57	; 0x39
   39134:	cmp	r3, #1
   39138:	lsl	r1, r1, #3
   3913c:	add	r3, r2, r1
   39140:	ldrhls	r3, [r2, r1]
   39144:	addls	r3, r2, r3, lsl #3
   39148:	sub	r3, r4, r3
   3914c:	clz	r3, r3
   39150:	lsr	r3, r3, #5
   39154:	b	390d0 <luaL_typerror@@Base+0x2d64>
   39158:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   3915c:	ldrdeq	r0, [r0], -r3
   39160:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   39164:			; <UNDEFINED> instruction: 0xffff0000
   39168:	ldr	r2, [r0, #224]	; 0xe0
   3916c:	ldr	r3, [r0, #196]	; 0xc4
   39170:	push	{r4, r5, r6, r7, r8, lr}
   39174:	ldr	r1, [r2, #28]
   39178:	lsl	r3, r3, #3
   3917c:	add	ip, r1, r3
   39180:	ldrh	r3, [r1, r3]
   39184:	ldrb	r1, [ip, #6]
   39188:	ldr	r4, [r2, #32]
   3918c:	cmp	r1, #0
   39190:	popeq	{r4, r5, r6, r7, r8, pc}
   39194:	lsl	r3, r3, #2
   39198:	sub	r5, r4, #4
   3919c:	add	r5, r5, r3
   391a0:	sub	r3, r3, #4
   391a4:	mov	r6, r0
   391a8:	ldr	r7, [pc, #52]	; 391e4 <luaL_typerror@@Base+0x2e78>
   391ac:	add	r5, r5, r1, lsl #2
   391b0:	add	r4, r4, r3
   391b4:	b	391c0 <luaL_typerror@@Base+0x2e54>
   391b8:	cmp	r4, r5
   391bc:	popeq	{r4, r5, r6, r7, r8, pc}
   391c0:	ldr	r1, [r4, #4]!
   391c4:	uxth	r1, r1
   391c8:	cmp	r1, r7
   391cc:	bls	391b8 <luaL_typerror@@Base+0x2e4c>
   391d0:	mov	r0, r6
   391d4:	bl	38ef4 <luaL_typerror@@Base+0x2b88>
   391d8:	cmp	r4, r5
   391dc:	bne	391c0 <luaL_typerror@@Base+0x2e54>
   391e0:	pop	{r4, r5, r6, r7, r8, pc}
   391e4:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   391e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   391ec:	mov	r4, r0
   391f0:	ldr	r0, [r0, #176]	; 0xb0
   391f4:	ldr	r3, [r4, #188]	; 0xbc
   391f8:	cmp	r0, r3
   391fc:	bcc	392a0 <luaL_typerror@@Base+0x2f34>
   39200:	ldr	r7, [r4, #224]	; 0xe0
   39204:	ldr	lr, [r4, #192]	; 0xc0
   39208:	ldr	r3, [r7, #8]
   3920c:	cmp	r3, lr
   39210:	popls	{r4, r5, r6, r7, r8, r9, sl, pc}
   39214:	mvn	r5, #32768	; 0x8000
   39218:	ldr	r3, [r4, #196]	; 0xc4
   3921c:	ldr	r1, [r7, #28]
   39220:	ldr	r2, [r7, #16]
   39224:	lsl	r3, r3, #3
   39228:	add	r0, r1, r3
   3922c:	ldrh	r8, [r1, r3]
   39230:	ldrb	r0, [r0, #6]
   39234:	lsl	r3, lr, #3
   39238:	add	r6, r2, r3
   3923c:	cmp	r0, #0
   39240:	lsl	r9, r8, #2
   39244:	ldrh	ip, [r2, r3]
   39248:	ldr	r1, [r7, #32]
   3924c:	beq	39288 <luaL_typerror@@Base+0x2f1c>
   39250:	ldr	r3, [r1, r8, lsl #2]
   39254:	add	r1, r1, r9
   39258:	uxth	r3, r3
   3925c:	cmp	ip, r3
   39260:	movne	r2, #0
   39264:	bne	3927c <luaL_typerror@@Base+0x2f10>
   39268:	b	392f4 <luaL_typerror@@Base+0x2f88>
   3926c:	ldr	r3, [r1, #4]!
   39270:	uxth	r3, r3
   39274:	cmp	ip, r3
   39278:	beq	392f4 <luaL_typerror@@Base+0x2f88>
   3927c:	add	r2, r2, #1
   39280:	cmp	r0, r2
   39284:	bne	3926c <luaL_typerror@@Base+0x2f00>
   39288:	ldr	r3, [r7, #8]
   3928c:	add	lr, lr, #1
   39290:	cmp	lr, r3
   39294:	str	lr, [r4, #192]	; 0xc0
   39298:	bcc	39218 <luaL_typerror@@Base+0x2eac>
   3929c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   392a0:	ldr	r3, [r4, #196]	; 0xc4
   392a4:	sub	r1, r3, #-536870911	; 0xe0000001
   392a8:	lsl	r1, r1, #3
   392ac:	cmp	r3, #0
   392b0:	sub	r3, r3, #1
   392b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   392b8:	ldr	r2, [r4, #224]	; 0xe0
   392bc:	str	r3, [r4, #196]	; 0xc4
   392c0:	ldr	r2, [r2, #28]
   392c4:	add	r2, r2, r1
   392c8:	sub	r1, r1, #8
   392cc:	ldrh	r2, [r2, #2]
   392d0:	cmp	r0, r2
   392d4:	str	r2, [r4, #188]	; 0xbc
   392d8:	bcc	392ac <luaL_typerror@@Base+0x2f40>
   392dc:	mov	r0, r4
   392e0:	bl	39168 <luaL_typerror@@Base+0x2dfc>
   392e4:	ldr	r3, [r4, #224]	; 0xe0
   392e8:	ldr	r3, [r3, #8]
   392ec:	str	r3, [r4, #192]	; 0xc0
   392f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   392f4:	ldr	r3, [r4, #136]	; 0x88
   392f8:	mov	r0, r4
   392fc:	add	ip, r3, ip, lsl #3
   39300:	add	r2, ip, #7
   39304:	ldrb	r1, [ip, #4]
   39308:	bl	211f4 <luaL_where@@Base+0x10f0>
   3930c:	strh	r5, [r6, #2]
   39310:	ldr	lr, [r4, #192]	; 0xc0
   39314:	ldr	r7, [r4, #224]	; 0xe0
   39318:	b	39288 <luaL_typerror@@Base+0x2f1c>
   3931c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39320:	sub	sp, sp, #1200	; 0x4b0
   39324:	sub	sp, sp, #12
   39328:	mov	r3, r1
   3932c:	str	r1, [sp, #24]
   39330:	ldr	r1, [r1, #8]
   39334:	ldr	r3, [r3, #16]
   39338:	sub	r2, r1, #-536870911	; 0xe0000001
   3933c:	mov	fp, r0
   39340:	add	r3, r3, r2, lsl #3
   39344:	ldrb	r2, [r3, #5]
   39348:	sub	r2, r2, #12
   3934c:	tst	r2, #247	; 0xf7
   39350:	beq	39794 <luaL_typerror@@Base+0x3428>
   39354:	ldr	r4, [fp, #8]
   39358:	ldr	r3, [fp, #236]	; 0xec
   3935c:	cmp	r3, r4
   39360:	bls	397c4 <luaL_typerror@@Base+0x3458>
   39364:	ldr	r3, [fp, #16]
   39368:	ldr	ip, [sp, #24]
   3936c:	add	r3, r3, r4, lsl #3
   39370:	mov	r2, #12
   39374:	add	r1, r4, #1
   39378:	str	r1, [fp, #8]
   3937c:	str	r4, [sp, #508]	; 0x1fc
   39380:	mov	r1, ip
   39384:	strb	r2, [r3, #5]
   39388:	ldr	r0, [fp, #80]	; 0x50
   3938c:	str	fp, [sp, #464]	; 0x1d0
   39390:	str	ip, [sp, #548]	; 0x224
   39394:	bl	2fddc <luaL_where@@Base+0xfcd8>
   39398:	ldr	r6, [fp, #2304]	; 0x900
   3939c:	ldr	r3, [fp, #100]	; 0x64
   393a0:	cmp	r6, #0
   393a4:	str	r3, [sp, #484]	; 0x1e4
   393a8:	mov	r3, #0
   393ac:	str	r3, [sp, #576]	; 0x240
   393b0:	str	r3, [sp, #488]	; 0x1e8
   393b4:	ldr	r2, [fp, #244]	; 0xf4
   393b8:	ldrne	r3, [fp, #272]	; 0x110
   393bc:	str	r2, [sp, #536]	; 0x218
   393c0:	ldr	r2, [fp, #2324]	; 0x914
   393c4:	ldrne	r3, [r3, r6, lsl #2]
   393c8:	moveq	r3, r6
   393cc:	cmp	r2, #0
   393d0:	str	r3, [sp, #552]	; 0x228
   393d4:	str	r0, [fp, #76]	; 0x4c
   393d8:	beq	3bb8c <luaL_typerror@@Base+0x5820>
   393dc:	ldr	r2, [fp, #2320]	; 0x910
   393e0:	cmp	r2, #3
   393e4:	beq	393f8 <luaL_typerror@@Base+0x308c>
   393e8:	mov	r1, #3
   393ec:	mov	r0, fp
   393f0:	bl	37754 <luaL_typerror@@Base+0x13e8>
   393f4:	ldr	r3, [sp, #552]	; 0x228
   393f8:	ldr	r4, [sp, #548]	; 0x224
   393fc:	ldr	r2, [fp, #2332]	; 0x91c
   39400:	ldrh	r6, [r4, #24]
   39404:	str	r2, [sp, #556]	; 0x22c
   39408:	add	r2, r2, #256	; 0x100
   3940c:	cmp	r3, #0
   39410:	addne	r6, r6, #1
   39414:	ldr	r3, [fp, #2328]	; 0x918
   39418:	cmp	r6, #512	; 0x200
   3941c:	str	r3, [sp, #44]	; 0x2c
   39420:	str	r2, [sp, #456]	; 0x1c8
   39424:	str	r3, [sp, #560]	; 0x230
   39428:	str	r3, [sp, #452]	; 0x1c4
   3942c:	bge	3c5bc <luaL_typerror@@Base+0x6250>
   39430:	add	r6, r6, #31
   39434:	lsrs	r6, r6, #5
   39438:	moveq	r1, r3
   3943c:	beq	39514 <luaL_typerror@@Base+0x31a8>
   39440:	ldr	r2, [sp, #464]	; 0x1d0
   39444:	ldr	r9, [pc, #4072]	; 3a434 <luaL_typerror@@Base+0x40c8>
   39448:	ldr	r4, [pc, #4072]	; 3a438 <luaL_typerror@@Base+0x40cc>
   3944c:	ldr	r1, [sp, #44]	; 0x2c
   39450:	mov	r5, #0
   39454:	b	39464 <luaL_typerror@@Base+0x30f8>
   39458:	add	r5, r5, #1
   3945c:	cmp	r5, r6
   39460:	beq	39510 <luaL_typerror@@Base+0x31a4>
   39464:	add	r7, r2, r5, lsl #2
   39468:	ldr	r3, [r7, #1568]	; 0x620
   3946c:	cmp	r3, #0
   39470:	bne	39458 <luaL_typerror@@Base+0x30ec>
   39474:	ldr	r8, [sp, #556]	; 0x22c
   39478:	add	r3, r8, #576	; 0x240
   3947c:	cmp	r1, r3
   39480:	bls	3a180 <luaL_typerror@@Base+0x3e14>
   39484:	mov	r3, r8
   39488:	ldr	r1, [pc, #4012]	; 3a43c <luaL_typerror@@Base+0x40d0>
   3948c:	str	r9, [r3], #4
   39490:	sub	r1, r1, r3
   39494:	add	r2, r2, #2496	; 0x9c0
   39498:	asr	r1, r1, #2
   3949c:	sub	r1, r1, #2
   394a0:	bic	r1, r1, #-16777216	; 0xff000000
   394a4:	ldr	r3, [pc, #3988]	; 3a440 <luaL_typerror@@Base+0x40d4>
   394a8:	str	r2, [r8, #8]
   394ac:	orr	r1, r1, #-352321536	; 0xeb000000
   394b0:	mov	r2, r8
   394b4:	str	r1, [r8, #4]
   394b8:	lsl	r1, r5, #5
   394bc:	str	r1, [r2, #12]!
   394c0:	orr	r1, r3, #-369098752	; 0xea000000
   394c4:	sub	r3, r3, #1
   394c8:	cmp	r3, r4
   394cc:	str	r1, [r2, #4]!
   394d0:	bne	394c0 <luaL_typerror@@Base+0x3154>
   394d4:	add	sl, r8, #144	; 0x90
   394d8:	mov	r1, sl
   394dc:	mov	r0, r8
   394e0:	bl	6e608 <luaL_openlibs@@Base+0x4e48>
   394e4:	ldr	r2, [sp, #464]	; 0x1d0
   394e8:	add	r5, r5, #1
   394ec:	add	r3, r8, #400	; 0x190
   394f0:	cmp	r5, r6
   394f4:	add	r8, r8, #16
   394f8:	str	sl, [r2, #2332]	; 0x91c
   394fc:	ldr	r1, [sp, #560]	; 0x230
   39500:	str	sl, [sp, #556]	; 0x22c
   39504:	str	r3, [sp, #456]	; 0x1c8
   39508:	str	r8, [r7, #1568]	; 0x620
   3950c:	bne	39464 <luaL_typerror@@Base+0x30f8>
   39510:	ldr	r4, [sp, #548]	; 0x224
   39514:	ldr	r0, [fp, #76]	; 0x4c
   39518:	add	sl, sp, #448	; 0x1c0
   3951c:	str	fp, [sp, #32]
   39520:	ldr	r3, [r0, #16]
   39524:	ldr	r2, [sp, #536]	; 0x218
   39528:	mov	r0, r3
   3952c:	str	r0, [sp, #460]	; 0x1cc
   39530:	ldr	r0, [sp, #32]
   39534:	str	r3, [sp, #12]
   39538:	ldr	r3, [sp, #508]	; 0x1fc
   3953c:	cmp	r2, #0
   39540:	str	r3, [r0, #8]
   39544:	str	r3, [sp, #500]	; 0x1f4
   39548:	subne	r3, r1, #4
   3954c:	subeq	r3, r1, #8
   39550:	str	r1, [sp, #452]	; 0x1c4
   39554:	strne	r3, [sp, #568]	; 0x238
   39558:	strne	r3, [sp, #452]	; 0x1c4
   3955c:	streq	r3, [sp, #452]	; 0x1c4
   39560:	mov	r3, #0
   39564:	streq	r2, [sp, #568]	; 0x238
   39568:	str	r3, [r1, #-4]
   3956c:	ldr	r2, [sp, #484]	; 0x1e4
   39570:	ldr	lr, [sp, #536]	; 0x218
   39574:	tst	r2, #33554432	; 0x2000000
   39578:	movne	r0, lr
   3957c:	mvneq	r0, #0
   39580:	str	r0, [sp, #528]	; 0x210
   39584:	ldr	r0, [r4, #8]
   39588:	str	r3, [sp, #564]	; 0x234
   3958c:	str	r3, [sp, #572]	; 0x23c
   39590:	str	r3, [sp, #540]	; 0x21c
   39594:	str	r3, [sp, #544]	; 0x220
   39598:	str	lr, [sp, #532]	; 0x214
   3959c:	str	r0, [sp, #16]
   395a0:	ldrb	r0, [r4, #74]	; 0x4a
   395a4:	mov	r1, r3
   395a8:	mvn	ip, #57344	; 0xe000
   395ac:	mov	r2, #64	; 0x40
   395b0:	str	r0, [sp, #36]	; 0x24
   395b4:	add	r0, sp, #644	; 0x284
   395b8:	str	r3, [sp, #472]	; 0x1d8
   395bc:	str	r3, [sp, #476]	; 0x1dc
   395c0:	str	r3, [sp, #480]	; 0x1e0
   395c4:	str	lr, [sp, #20]
   395c8:	str	ip, [sp, #468]	; 0x1d4
   395cc:	bl	12ed4 <memset@plt>
   395d0:	ldr	r2, [pc, #3728]	; 3a468 <luaL_typerror@@Base+0x40fc>
   395d4:	add	r3, sp, #320	; 0x140
   395d8:	str	r2, [r3, #4]!
   395dc:	cmp	sl, r3
   395e0:	bne	395d8 <luaL_typerror@@Base+0x326c>
   395e4:	ldr	r3, [r4, #20]
   395e8:	ldr	r2, [sp, #12]
   395ec:	add	r5, r2, #262144	; 0x40000
   395f0:	add	r3, r2, r3, lsl #3
   395f4:	cmp	r3, r5
   395f8:	bcs	3963c <luaL_typerror@@Base+0x32d0>
   395fc:	ldr	ip, [pc, #3648]	; 3a444 <luaL_typerror@@Base+0x40d8>
   39600:	mov	r0, #255	; 0xff
   39604:	ldrb	r2, [r3, #4]
   39608:	strh	r0, [r3, #6]
   3960c:	add	r1, r3, #8
   39610:	and	r2, r2, #31
   39614:	lsr	r2, ip, r2
   39618:	tst	r2, #1
   3961c:	beq	39630 <luaL_typerror@@Base+0x32c4>
   39620:	ldrb	r2, [r3, #5]
   39624:	cmp	r2, #27
   39628:	strne	r1, [r3]
   3962c:	addne	r1, r3, #16
   39630:	cmp	r5, r1
   39634:	mov	r3, r1
   39638:	bhi	39604 <luaL_typerror@@Base+0x3298>
   3963c:	ldrh	r3, [r4, #24]
   39640:	ldr	fp, [sp, #552]	; 0x228
   39644:	ldr	r1, [sp, #16]
   39648:	mov	r2, #137	; 0x89
   3964c:	str	r3, [sp, #520]	; 0x208
   39650:	cmp	fp, #0
   39654:	mov	r3, #32768	; 0x8000
   39658:	str	r1, [sp, #516]	; 0x204
   3965c:	str	r1, [sp, #512]	; 0x200
   39660:	str	r1, [sp, #508]	; 0x1fc
   39664:	str	r1, [sp, #500]	; 0x1f4
   39668:	strh	r2, [r5, #6]
   3966c:	str	r3, [sp, #504]	; 0x1f8
   39670:	add	r4, r5, #8
   39674:	beq	39898 <luaL_typerror@@Base+0x352c>
   39678:	ldr	r3, [sp, #464]	; 0x1d0
   3967c:	ldr	r1, [fp, #28]
   39680:	mov	r2, r3
   39684:	str	r3, [sp, #52]	; 0x34
   39688:	ldr	r8, [r2, #2308]	; 0x904
   3968c:	ldr	r3, [fp, #8]
   39690:	ldr	r7, [fp, #16]
   39694:	sub	r3, r3, #-536870911	; 0xe0000001
   39698:	lsl	r2, r8, #3
   3969c:	add	r3, r7, r3, lsl #3
   396a0:	ldrh	r2, [r1, r2]
   396a4:	ldrb	r1, [r3, #5]
   396a8:	ldr	r0, [fp, #32]
   396ac:	cmp	r1, #20
   396b0:	lsl	r2, r2, #2
   396b4:	str	r2, [sp, #28]
   396b8:	movne	r6, #0
   396bc:	bne	396f0 <luaL_typerror@@Base+0x3384>
   396c0:	sub	r3, r3, #8
   396c4:	mov	r6, #0
   396c8:	mov	r1, #1
   396cc:	ldrh	r2, [r3, #10]
   396d0:	sub	r3, r3, #8
   396d4:	cmp	r8, r2
   396d8:	ldrhcs	r2, [r3, #16]
   396dc:	andcs	r2, r2, #31
   396e0:	orrcs	r6, r6, r1, lsl r2
   396e4:	ldrb	r2, [r3, #13]
   396e8:	cmp	r2, #20
   396ec:	beq	396cc <luaL_typerror@@Base+0x3360>
   396f0:	ldr	r3, [sp, #28]
   396f4:	mov	r1, r4
   396f8:	sub	r3, r3, #4
   396fc:	str	r4, [sp, #48]	; 0x30
   39700:	mov	ip, #0
   39704:	str	r3, [sp, #40]	; 0x28
   39708:	mov	r9, #1
   3970c:	mov	r4, r0
   39710:	b	3971c <luaL_typerror@@Base+0x33b0>
   39714:	strh	lr, [r1, #6]
   39718:	add	r1, r1, #8
   3971c:	ldrb	r3, [r1, #5]
   39720:	cmp	r3, #71	; 0x47
   39724:	beq	397d0 <luaL_typerror@@Base+0x3464>
   39728:	cmp	r3, #14
   3972c:	bne	39824 <luaL_typerror@@Base+0x34b8>
   39730:	ldrh	r2, [r1]
   39734:	add	r2, r2, #32768	; 0x8000
   39738:	and	r0, r2, #31
   3973c:	add	r3, r7, r2, lsl #3
   39740:	ands	r0, r6, r9, lsl r0
   39744:	ldrh	lr, [r3, #6]
   39748:	beq	39714 <luaL_typerror@@Base+0x33a8>
   3974c:	ldr	r3, [fp, #8]
   39750:	sub	r3, r3, #-536870911	; 0xe0000001
   39754:	add	r3, r7, r3, lsl #3
   39758:	ldrb	r0, [r3, #5]
   3975c:	cmp	r0, #20
   39760:	bne	39714 <luaL_typerror@@Base+0x33a8>
   39764:	sub	r3, r3, #8
   39768:	ldrh	r0, [r3, #8]
   3976c:	cmp	r2, r0
   39770:	bne	39780 <luaL_typerror@@Base+0x3414>
   39774:	ldrh	r0, [r3, #10]
   39778:	cmp	r8, r0
   3977c:	ldrhcs	lr, [r3, #14]
   39780:	sub	r3, r3, #8
   39784:	ldrb	r0, [r3, #13]
   39788:	cmp	r0, #20
   3978c:	beq	39768 <luaL_typerror@@Base+0x33fc>
   39790:	b	39714 <luaL_typerror@@Base+0x33a8>
   39794:	sub	r3, r3, #8
   39798:	ldrb	r2, [r3, #5]
   3979c:	sub	r1, r1, #1
   397a0:	sub	r2, r2, #12
   397a4:	tst	r2, #247	; 0xf7
   397a8:	beq	39794 <luaL_typerror@@Base+0x3428>
   397ac:	ldr	r3, [sp, #24]
   397b0:	str	r1, [r3, #8]
   397b4:	ldr	r4, [fp, #8]
   397b8:	ldr	r3, [fp, #236]	; 0xec
   397bc:	cmp	r3, r4
   397c0:	bhi	39364 <luaL_typerror@@Base+0x2ff8>
   397c4:	mov	r0, fp
   397c8:	bl	251d4 <luaL_where@@Base+0x50d0>
   397cc:	b	39364 <luaL_typerror@@Base+0x2ff8>
   397d0:	ldrh	r3, [r1, #2]
   397d4:	tst	r3, #1
   397d8:	beq	39824 <luaL_typerror@@Base+0x34b8>
   397dc:	lsl	r3, ip, #2
   397e0:	ldr	lr, [sp, #28]
   397e4:	add	r2, r4, r3
   397e8:	ldrh	r0, [r1]
   397ec:	ldr	r2, [r2, lr]
   397f0:	cmp	r0, r2, lsr #24
   397f4:	beq	39818 <luaL_typerror@@Base+0x34ac>
   397f8:	ldr	r2, [sp, #40]	; 0x28
   397fc:	add	r3, r3, #4
   39800:	add	r3, r3, r2
   39804:	add	r3, r4, r3
   39808:	ldr	r2, [r3, #4]!
   3980c:	add	ip, ip, #1
   39810:	cmp	r0, r2, lsr #24
   39814:	bne	39808 <luaL_typerror@@Base+0x349c>
   39818:	add	ip, ip, #1
   3981c:	uxth	r2, r2
   39820:	b	39738 <luaL_typerror@@Base+0x33cc>
   39824:	ldr	r4, [sp, #48]	; 0x30
   39828:	sub	r3, r1, r4
   3982c:	cmp	r3, #2000	; 0x7d0
   39830:	bgt	3c5d4 <luaL_typerror@@Base+0x6268>
   39834:	ldr	r2, [sp, #12]
   39838:	sub	r3, r1, #8
   3983c:	sub	r3, r3, r2
   39840:	cmp	r4, r1
   39844:	asr	r3, r3, #3
   39848:	str	r3, [sp, #504]	; 0x1f8
   3984c:	bcs	39898 <luaL_typerror@@Base+0x352c>
   39850:	mov	r2, r4
   39854:	add	r0, sp, #708	; 0x2c4
   39858:	mov	ip, #255	; 0xff
   3985c:	ldrh	r3, [r2, #6]
   39860:	add	r2, r2, #8
   39864:	lsrs	lr, r3, #8
   39868:	strh	r3, [r0], #2
   3986c:	uxtbeq	r3, r3
   39870:	orreq	r3, r3, #128	; 0x80
   39874:	strheq	r3, [r2, #-2]
   39878:	strhne	ip, [r2, #-2]
   3987c:	cmp	r2, r1
   39880:	bcc	3985c <luaL_typerror@@Base+0x34f0>
   39884:	sub	r3, r1, r5
   39888:	sub	r3, r3, #9
   3988c:	bic	r3, r3, #7
   39890:	add	r3, r3, #8
   39894:	add	r4, r4, r3
   39898:	ldr	r2, [sp, #16]
   3989c:	ldr	r3, [sp, #12]
   398a0:	add	r5, r3, r2, lsl #3
   398a4:	cmp	r5, r4
   398a8:	mov	r3, #2
   398ac:	str	r3, [sp, #492]	; 0x1ec
   398b0:	bls	3a198 <luaL_typerror@@Base+0x3e2c>
   398b4:	ldr	r7, [pc, #2956]	; 3a448 <luaL_typerror@@Base+0x40dc>
   398b8:	ldr	r8, [sp, #36]	; 0x24
   398bc:	mov	r6, #0
   398c0:	cmp	r8, #0
   398c4:	beq	398e4 <luaL_typerror@@Base+0x3578>
   398c8:	ldrb	r3, [r4, #6]
   398cc:	cmp	r3, #254	; 0xfe
   398d0:	beq	39a58 <luaL_typerror@@Base+0x36ec>
   398d4:	cmp	r3, #253	; 0xfd
   398d8:	mvneq	r3, #1
   398dc:	strbeq	r3, [r4, #6]
   398e0:	beq	39a58 <luaL_typerror@@Base+0x36ec>
   398e4:	ldrb	r3, [r4, #5]
   398e8:	sub	r3, r3, #16
   398ec:	cmp	r3, #82	; 0x52
   398f0:	ldrls	pc, [pc, r3, lsl #2]
   398f4:	b	3a5f0 <luaL_typerror@@Base+0x4284>
   398f8:	andeq	sl, r3, ip, asr #9
   398fc:	ldrdeq	sl, [r3], -ip
   39900:	strdeq	sl, [r3], -r0
   39904:	strdeq	sl, [r3], -r0
   39908:	strdeq	sl, [r3], -r0
   3990c:	strdeq	sl, [r3], -r0
   39910:	strdeq	sl, [r3], -r0
   39914:	strdeq	sl, [r3], -r0
   39918:	strdeq	sl, [r3], -r0
   3991c:	strdeq	sl, [r3], -r0
   39920:	strdeq	sl, [r3], -r0
   39924:	strdeq	sl, [r3], -r0
   39928:	strdeq	sl, [r3], -r0
   3992c:	strdeq	sl, [r3], -r0
   39930:	strdeq	sl, [r3], -r0
   39934:	strdeq	sl, [r3], -r0
   39938:	strdeq	sl, [r3], -r0
   3993c:	strdeq	sl, [r3], -r0
   39940:	strdeq	sl, [r3], -r0
   39944:	strdeq	sl, [r3], -r0
   39948:	strdeq	sl, [r3], -r0
   3994c:	strdeq	sl, [r3], -r0
   39950:	strdeq	sl, [r3], -r0
   39954:	strdeq	sl, [r3], -r0
   39958:	strdeq	sl, [r3], -r0
   3995c:	strdeq	sl, [r3], -r0
   39960:	strdeq	sl, [r3], -r0
   39964:	strdeq	sl, [r3], -r0
   39968:	andeq	sl, r3, r0, asr #10
   3996c:	andeq	sl, r3, r0, asr #10
   39970:	andeq	sl, r3, r0, lsl r5
   39974:	strdeq	sl, [r3], -r0
   39978:	strdeq	sl, [r3], -r0
   3997c:	andeq	sl, r3, r0, lsl r5
   39980:	andeq	sl, r3, r0, lsl r5
   39984:	strdeq	sl, [r3], -r0
   39988:	strdeq	sl, [r3], -r0
   3998c:			; <UNDEFINED> instruction: 0x0003a3b8
   39990:	strdeq	sl, [r3], -r0
   39994:	strdeq	sl, [r3], -r0
   39998:	strdeq	sl, [r3], -r0
   3999c:	strdeq	sl, [r3], -r0
   399a0:	strdeq	sl, [r3], -r0
   399a4:	strdeq	sl, [r3], -r0
   399a8:	ldrdeq	sl, [r3], -r8
   399ac:	strdeq	sl, [r3], -r0
   399b0:	strdeq	sl, [r3], -r0
   399b4:	strdeq	sl, [r3], -r0
   399b8:	strdeq	sl, [r3], -r0
   399bc:	strdeq	sl, [r3], -r0
   399c0:	muleq	r3, r8, ip
   399c4:	muleq	r3, r8, ip
   399c8:	muleq	r3, r8, ip
   399cc:	strdeq	sl, [r3], -r0
   399d0:	andeq	r9, r3, r0, asr sl
   399d4:	andeq	r9, r3, r0, lsl #25
   399d8:	muleq	r3, r8, ip
   399dc:	strdeq	sl, [r3], -r0
   399e0:	strdeq	sl, [r3], -r0
   399e4:	strdeq	sl, [r3], -r0
   399e8:	strdeq	sl, [r3], -r0
   399ec:	strdeq	sl, [r3], -r0
   399f0:	ldrdeq	sl, [r3], -r8
   399f4:	ldrdeq	sl, [r3], -r8
   399f8:	ldrdeq	sl, [r3], -r8
   399fc:	ldrdeq	sl, [r3], -r8
   39a00:	ldrdeq	sl, [r3], -r8
   39a04:	ldrdeq	sl, [r3], -r8
   39a08:	strdeq	sl, [r3], -r0
   39a0c:	ldrdeq	sl, [r3], -r8
   39a10:	ldrdeq	sl, [r3], -r8
   39a14:	strdeq	sl, [r3], -r0
   39a18:	andeq	r9, r3, r4, asr #20
   39a1c:	strdeq	sl, [r3], -r0
   39a20:	andeq	sl, r3, ip, lsr #11
   39a24:	andeq	r9, r3, r0, asr sl
   39a28:	ldrdeq	sl, [r3], -r8
   39a2c:	andeq	r9, r3, r4, asr #20
   39a30:	andeq	sl, r3, r4, asr r5
   39a34:	andeq	sl, r3, r4, asr r5
   39a38:	andeq	sl, r3, r4, asr r5
   39a3c:	andeq	sl, r3, r4, asr r5
   39a40:	andeq	sl, r3, r4, ror #7
   39a44:	cmp	r6, #0
   39a48:	ldrne	r3, [pc, #2672]	; 3a4c0 <luaL_typerror@@Base+0x4154>
   39a4c:	strne	r3, [sp, #472]	; 0x1d8
   39a50:	mov	r3, #255	; 0xff
   39a54:	strh	r3, [r4, #6]
   39a58:	add	r4, r4, #8
   39a5c:	cmp	r5, r4
   39a60:	bhi	398c0 <luaL_typerror@@Base+0x3554>
   39a64:	ldr	r3, [sp, #492]	; 0x1ec
   39a68:	tst	r3, #1
   39a6c:	beq	3a190 <luaL_typerror@@Base+0x3e24>
   39a70:	add	r2, r3, #1
   39a74:	str	r3, [sp, #496]	; 0x1f0
   39a78:	ldr	r3, [sp, #536]	; 0x218
   39a7c:	str	r2, [sp, #492]	; 0x1ec
   39a80:	str	r3, [sp, #20]
   39a84:	ldr	r3, [sp, #20]
   39a88:	cmp	r3, #0
   39a8c:	beq	3a1ac <luaL_typerror@@Base+0x3e40>
   39a90:	ldr	r4, [sp, #500]	; 0x1f4
   39a94:	ldr	r1, [sp, #504]	; 0x1f8
   39a98:	sub	r4, r4, #1
   39a9c:	cmp	r4, r1
   39aa0:	str	r4, [sp, #500]	; 0x1f4
   39aa4:	bls	39da8 <luaL_typerror@@Base+0x3a3c>
   39aa8:	ldr	fp, [pc, #2480]	; 3a460 <luaL_typerror@@Base+0x40f4>
   39aac:	ldr	r6, [sp, #460]	; 0x1cc
   39ab0:	lsl	r4, r4, #3
   39ab4:	add	r5, r6, r4
   39ab8:	ldrsb	r2, [r5, #6]
   39abc:	ldrb	r3, [r5, #4]
   39ac0:	cmp	r2, #0
   39ac4:	blt	3a120 <luaL_typerror@@Base+0x3db4>
   39ac8:	tst	r3, #128	; 0x80
   39acc:	bne	3a168 <luaL_typerror@@Base+0x3dfc>
   39ad0:	ldr	r2, [sp, #452]	; 0x1c4
   39ad4:	ldr	r3, [sp, #456]	; 0x1c8
   39ad8:	cmp	r2, r3
   39adc:	bcc	3a180 <luaL_typerror@@Base+0x3e14>
   39ae0:	ldrb	r2, [r5, #5]
   39ae4:	cmp	r2, #99	; 0x63
   39ae8:	ldrls	pc, [pc, r2, lsl #2]
   39aec:	b	3c468 <luaL_typerror@@Base+0x60fc>
   39af0:	andeq	sl, r3, r4, lsr r9
   39af4:	andeq	sl, r3, r4, lsr r9
   39af8:	andeq	sl, r3, r4, lsr r9
   39afc:	andeq	sl, r3, r4, lsr r9
   39b00:	andeq	sl, r3, r4, lsr r9
   39b04:	andeq	sl, r3, r4, lsr r9
   39b08:	andeq	sl, r3, r4, lsr r9
   39b0c:	andeq	sl, r3, r4, lsr r9
   39b10:	andeq	sl, r3, r8, lsr #18
   39b14:	andeq	sl, r3, r8, lsr #18
   39b18:	andeq	sl, r3, r4, lsr r9
   39b1c:	andeq	sl, r3, r8, asr #18
   39b20:	muleq	r3, r0, sp
   39b24:	andeq	ip, r3, r8, ror #8
   39b28:	andeq	ip, r3, r8, ror #8
   39b2c:	andeq	fp, r3, ip, lsl r9
   39b30:	andeq	fp, r3, r8, ror r7
   39b34:	andeq	fp, r3, ip, lsl #15
   39b38:	muleq	r3, ip, r7
   39b3c:	andeq	fp, r3, r4, ror r6
   39b40:	andeq	ip, r3, r8, ror #8
   39b44:	andeq	fp, r3, ip, asr #15
   39b48:	andeq	ip, r3, r8, ror #8
   39b4c:	andeq	ip, r3, r8, ror #8
   39b50:	andeq	ip, r3, r8, ror #8
   39b54:	andeq	ip, r3, r8, ror #8
   39b58:	andeq	ip, r3, r8, ror #8
   39b5c:	andeq	ip, r3, r8, ror #8
   39b60:	andeq	ip, r3, r8, ror #8
   39b64:	andeq	ip, r3, r8, ror #8
   39b68:	andeq	ip, r3, r8, ror #8
   39b6c:	andeq	fp, r3, r0, lsl r8
   39b70:	andeq	fp, r3, r8, lsr #16
   39b74:			; <UNDEFINED> instruction: 0x0003b8bc
   39b78:	ldrdeq	fp, [r3], -r4
   39b7c:	andeq	fp, r3, ip, ror #17
   39b80:	andeq	fp, r3, r4, lsl #18
   39b84:	andeq	sl, r3, ip, ror lr
   39b88:	muleq	r3, r4, lr
   39b8c:	muleq	r3, r0, sp
   39b90:	andeq	sl, r3, r0, lsr pc
   39b94:	andeq	sl, r3, r4, ror r8
   39b98:	andeq	sl, r3, r0, ror #16
   39b9c:	andeq	sl, r3, r8, lsl #17
   39ba0:	strdeq	sl, [r3], -r0
   39ba4:	andeq	sl, r3, r4, lsr #27
   39ba8:			; <UNDEFINED> instruction: 0x0003adbc
   39bac:	ldrdeq	sl, [r3], -r4
   39bb0:	strdeq	sl, [r3], -ip
   39bb4:	andeq	sl, r3, r4, lsl lr
   39bb8:	andeq	sl, r3, ip, lsr #28
   39bbc:	andeq	sl, r3, r4, asr #28
   39bc0:	andeq	sl, r3, r0, ror #28
   39bc4:	andeq	fp, r3, r8
   39bc8:	andeq	sl, r3, r4, ror r8
   39bcc:	andeq	sl, r3, r0, ror #16
   39bd0:	andeq	sl, r3, r8, lsl #17
   39bd4:	andeq	sl, r3, ip, lsr ip
   39bd8:	strdeq	sl, [r3], -ip
   39bdc:	andeq	fp, r3, r4, lsl #19
   39be0:	andeq	sl, r3, r0, lsl sp
   39be4:			; <UNDEFINED> instruction: 0x0003abbc
   39be8:			; <UNDEFINED> instruction: 0x0003abbc
   39bec:	muleq	r3, r0, sp
   39bf0:	andeq	sl, r3, r4, lsl ip
   39bf4:	andeq	sl, r3, r4, asr #20
   39bf8:	andeq	sl, r3, r0, ror sl
   39bfc:	andeq	sl, r3, r0, ror sl
   39c00:	andeq	sl, r3, r0, ror sl
   39c04:	andeq	sl, r3, r4, lsl #21
   39c08:	andeq	sl, r3, r4, asr #22
   39c0c:	andeq	sl, r3, r8, lsr #24
   39c10:	andeq	sl, r3, r0, ror sl
   39c14:	andeq	fp, r3, ip, lsl r0
   39c18:	andeq	fp, r3, ip, lsl r0
   39c1c:	andeq	fp, r3, ip, lsl r0
   39c20:	andeq	fp, r3, r0, lsr r0
   39c24:	strdeq	fp, [r3], -r4
   39c28:	andeq	fp, r3, r8, lsl r1
   39c2c:	andeq	fp, r3, r8, lsl r1
   39c30:	andeq	fp, r3, ip, ror #2
   39c34:	andeq	fp, r3, r0, lsl #4
   39c38:	andeq	fp, r3, ip, asr #4
   39c3c:	andeq	fp, r3, ip, asr #4
   39c40:	andeq	fp, r3, r0, ror #4
   39c44:			; <UNDEFINED> instruction: 0x0003b2b4
   39c48:	andeq	fp, r3, r0, lsl r3
   39c4c:	andeq	fp, r3, r4, lsr r3
   39c50:	andeq	fp, r3, ip, asr r4
   39c54:	muleq	r3, r0, sp
   39c58:			; <UNDEFINED> instruction: 0x0003b5b4
   39c5c:	andeq	fp, r3, r8, asr #11
   39c60:	andeq	sl, r3, r8, asr #30
   39c64:			; <UNDEFINED> instruction: 0x00039cbc
   39c68:	ldrdeq	sl, [r3], -ip
   39c6c:	ldrdeq	sl, [r3], -r0
   39c70:	ldrdeq	sl, [r3], -ip
   39c74:	ldrdeq	sl, [r3], -ip
   39c78:	andeq	sl, r3, ip, lsr #29
   39c7c:	muleq	r3, r0, sp
   39c80:	ldrh	r3, [r4, #2]
   39c84:	tst	r3, #4
   39c88:	bne	39c98 <luaL_typerror@@Base+0x392c>
   39c8c:	ldrb	r3, [r4, #13]
   39c90:	cmp	r3, #16
   39c94:	bne	39a50 <luaL_typerror@@Base+0x36e4>
   39c98:	ldrb	r3, [r4, #4]
   39c9c:	and	r3, r3, #31
   39ca0:	cmp	r3, #14
   39ca4:	beq	39a50 <luaL_typerror@@Base+0x36e4>
   39ca8:	and	r3, r7, #15
   39cac:	orr	r3, r3, #128	; 0x80
   39cb0:	strh	r3, [r4, #6]
   39cb4:	ror	r7, r7, #4
   39cb8:	b	39a58 <luaL_typerror@@Base+0x36ec>
   39cbc:	ldrsb	r3, [r5, #6]
   39cc0:	add	r7, sp, #324	; 0x144
   39cc4:	mov	r0, r7
   39cc8:	cmp	r3, #0
   39ccc:	ldr	r1, [pc, #2028]	; 3a4c0 <luaL_typerror@@Base+0x4154>
   39cd0:	blt	3c0d4 <luaL_typerror@@Base+0x5d68>
   39cd4:	bl	3798c <luaL_typerror@@Base+0x1620>
   39cd8:	ldrb	r8, [r5, #7]
   39cdc:	cmp	r8, #0
   39ce0:	beq	3bfb8 <luaL_typerror@@Base+0x5c4c>
   39ce4:	ldrb	r2, [r5, #6]
   39ce8:	lsl	r8, r8, #2
   39cec:	tst	r2, #128	; 0x80
   39cf0:	beq	3c2ec <luaL_typerror@@Base+0x5f80>
   39cf4:	mov	r1, #0
   39cf8:	mov	r0, r7
   39cfc:	bl	17a3c <_start@@Base+0x468c>
   39d00:	ldr	r3, [sp, #452]	; 0x1c4
   39d04:	ldr	r2, [pc, #1856]	; 3a44c <luaL_typerror@@Base+0x40e0>
   39d08:	sub	r1, r3, #4
   39d0c:	str	r1, [sp, #452]	; 0x1c4
   39d10:	str	r2, [r3, #-4]
   39d14:	add	r2, sp, #1200	; 0x4b0
   39d18:	ldrh	r3, [r6, r4]
   39d1c:	ldr	r0, [pc, #1952]	; 3a4c4 <luaL_typerror@@Base+0x4158>
   39d20:	add	r2, r2, #8
   39d24:	ldr	r1, [pc, #1828]	; 3a450 <luaL_typerror@@Base+0x40e4>
   39d28:	str	r0, [r2, #-1136]!	; 0xfffffb90
   39d2c:	mov	r0, r7
   39d30:	sub	r2, r2, #4
   39d34:	str	r3, [sp, #68]	; 0x44
   39d38:	bl	25eac <luaL_where@@Base+0x5da8>
   39d3c:	ldr	r3, [sp, #460]	; 0x1cc
   39d40:	mov	r1, #1
   39d44:	add	r3, r3, #261120	; 0x3fc00
   39d48:	ldr	ip, [sp, #468]	; 0x1d4
   39d4c:	ldrb	r2, [r3, #1006]	; 0x3ee
   39d50:	ldr	r0, [sp, #472]	; 0x1d8
   39d54:	mvn	lr, #0
   39d58:	cmp	r8, #0
   39d5c:	lsl	r1, r1, r2
   39d60:	orr	ip, ip, r1
   39d64:	orr	r1, r0, r1
   39d68:	strb	lr, [r3, #1006]	; 0x3ee
   39d6c:	str	ip, [sp, #468]	; 0x1d4
   39d70:	str	r1, [sp, #472]	; 0x1d8
   39d74:	bne	3c164 <luaL_typerror@@Base+0x5df8>
   39d78:	ldr	r1, [sp, #452]	; 0x1c4
   39d7c:	ldr	r3, [pc, #1744]	; 3a454 <luaL_typerror@@Base+0x40e8>
   39d80:	sub	r0, r1, #4
   39d84:	orr	r3, r3, r2, lsl #12
   39d88:	str	r0, [sp, #452]	; 0x1c4
   39d8c:	str	r3, [r1, #-4]
   39d90:	ldr	r1, [sp, #504]	; 0x1f8
   39d94:	ldr	r4, [sp, #500]	; 0x1f4
   39d98:	sub	r4, r4, #1
   39d9c:	cmp	r4, r1
   39da0:	str	r4, [sp, #500]	; 0x1f4
   39da4:	bhi	39aac <luaL_typerror@@Base+0x3740>
   39da8:	ldr	r3, [sp, #576]	; 0x240
   39dac:	cmp	r3, #0
   39db0:	beq	39dd0 <luaL_typerror@@Base+0x3a64>
   39db4:	ldr	r3, [sp, #32]
   39db8:	ldr	r0, [r3, #76]	; 0x4c
   39dbc:	ldr	r3, [sp, #24]
   39dc0:	ldr	r2, [r0, #8]
   39dc4:	ldr	r3, [r3, #8]
   39dc8:	cmp	r2, r3
   39dcc:	bcs	3a7a0 <luaL_typerror@@Base+0x4434>
   39dd0:	ldr	r2, [sp, #452]	; 0x1c4
   39dd4:	ldr	r3, [sp, #456]	; 0x1c8
   39dd8:	cmp	r2, r3
   39ddc:	bcc	3a180 <luaL_typerror@@Base+0x3e14>
   39de0:	ldr	r3, [sp, #544]	; 0x220
   39de4:	cmp	r3, #0
   39de8:	addle	r3, sp, #324	; 0x144
   39dec:	strle	r3, [sp, #12]
   39df0:	bgt	3a89c <luaL_typerror@@Base+0x4530>
   39df4:	ldr	r0, [sp, #12]
   39df8:	bl	37848 <luaL_typerror@@Base+0x14dc>
   39dfc:	ldr	r3, [sp, #552]	; 0x228
   39e00:	cmp	r3, #0
   39e04:	beq	3a624 <luaL_typerror@@Base+0x42b8>
   39e08:	ldr	r2, [sp, #520]	; 0x208
   39e0c:	ldr	r5, [r3, #16]
   39e10:	cmp	r2, #0
   39e14:	beq	39e28 <luaL_typerror@@Base+0x3abc>
   39e18:	ldrb	r3, [r3, #6]
   39e1c:	ldr	r2, [sp, #540]	; 0x21c
   39e20:	cmp	r2, r3
   39e24:	bhi	3bed8 <luaL_typerror@@Base+0x5b6c>
   39e28:	ldr	r0, [sp, #12]
   39e2c:	bl	37928 <luaL_typerror@@Base+0x15bc>
   39e30:	ldr	r4, [sp, #460]	; 0x1cc
   39e34:	add	r4, r4, #262144	; 0x40000
   39e38:	ldrb	r3, [r4, #6]
   39e3c:	tst	r3, #128	; 0x80
   39e40:	bne	39e6c <luaL_typerror@@Base+0x3b00>
   39e44:	ldr	r2, [sp, #472]	; 0x1d8
   39e48:	ldrb	r1, [r4, #4]
   39e4c:	lsr	r3, r2, r3
   39e50:	tst	r3, #1
   39e54:	bne	39e60 <luaL_typerror@@Base+0x3af4>
   39e58:	tst	r1, #32
   39e5c:	beq	39e6c <luaL_typerror@@Base+0x3b00>
   39e60:	add	r2, r4, #7
   39e64:	ldr	r0, [sp, #12]
   39e68:	bl	211f4 <luaL_where@@Base+0x10f0>
   39e6c:	add	r3, r5, #262144	; 0x40000
   39e70:	str	r3, [sp, #36]	; 0x24
   39e74:	ldrb	r3, [r3, #7]
   39e78:	cmp	r3, #0
   39e7c:	bne	3b99c <luaL_typerror@@Base+0x5630>
   39e80:	ldr	r3, [sp, #36]	; 0x24
   39e84:	ldrb	r2, [r4, #6]
   39e88:	ldrb	r5, [r3, #6]
   39e8c:	mov	r3, #1
   39e90:	cmp	r2, r5
   39e94:	mvn	r3, r3, lsl r5
   39e98:	bic	r3, r3, #57344	; 0xe000
   39e9c:	str	r3, [sp, #20]
   39ea0:	beq	39ed0 <luaL_typerror@@Base+0x3b64>
   39ea4:	ldr	r3, [sp, #468]	; 0x1d4
   39ea8:	lsr	r3, r3, r5
   39eac:	tst	r3, #1
   39eb0:	bne	39ed0 <luaL_typerror@@Base+0x3b64>
   39eb4:	add	r3, sp, #1200	; 0x4b0
   39eb8:	add	r3, r3, #8
   39ebc:	add	r3, r3, r5, lsl #2
   39ec0:	ldr	r0, [sp, #12]
   39ec4:	ldr	r1, [r3, #-884]	; 0xfffffc8c
   39ec8:	uxth	r1, r1
   39ecc:	bl	21284 <luaL_where@@Base+0x1180>
   39ed0:	mov	r2, r5
   39ed4:	mov	r1, r4
   39ed8:	ldr	r0, [sp, #12]
   39edc:	bl	22ca8 <luaL_where@@Base+0x2ba4>
   39ee0:	ldr	r6, [sp, #504]	; 0x1f8
   39ee4:	cmp	r6, #32768	; 0x8000
   39ee8:	bls	3c294 <luaL_typerror@@Base+0x5f28>
   39eec:	ldr	r3, [sp, #12]
   39ef0:	mov	fp, #0
   39ef4:	add	r8, r3, r6, lsl #1
   39ef8:	sub	r8, r8, #65024	; 0xfe00
   39efc:	str	fp, [sp, #16]
   39f00:	sub	r8, r8, #128	; 0x80
   39f04:	str	fp, [sp, #28]
   39f08:	lsl	r7, r6, #3
   39f0c:	ldr	r9, [sp, #20]
   39f10:	b	39f58 <luaL_typerror@@Base+0x3bec>
   39f14:	mov	r1, #1
   39f18:	cmp	r3, #0
   39f1c:	bic	r9, r9, r1, lsl r2
   39f20:	bne	3ba6c <luaL_typerror@@Base+0x5700>
   39f24:	cmp	r5, r2
   39f28:	beq	39f94 <luaL_typerror@@Base+0x3c28>
   39f2c:	lsrs	r3, r5, #8
   39f30:	sxtb	r2, r2
   39f34:	beq	3ba4c <luaL_typerror@@Base+0x56e0>
   39f38:	ldr	r3, [sp, #16]
   39f3c:	cmp	r2, #0
   39f40:	movge	r3, #1
   39f44:	str	r3, [sp, #16]
   39f48:	sub	r6, r6, #1
   39f4c:	cmp	r6, #32768	; 0x8000
   39f50:	sub	r7, r7, #8
   39f54:	beq	39fb4 <luaL_typerror@@Base+0x3c48>
   39f58:	ldr	r4, [sp, #460]	; 0x1cc
   39f5c:	ldrh	r5, [r8, #-2]!
   39f60:	add	r4, r4, r7
   39f64:	ldrb	r2, [r4, #6]
   39f68:	ldrb	r3, [r4, #7]
   39f6c:	tst	r2, #128	; 0x80
   39f70:	beq	39f14 <luaL_typerror@@Base+0x3ba8>
   39f74:	cmp	r3, #0
   39f78:	movne	r1, #1
   39f7c:	ldrbne	r3, [r4, #4]
   39f80:	strne	r1, [sp, #28]
   39f84:	orrne	r3, r3, #32
   39f88:	strbne	r3, [r4, #4]
   39f8c:	cmp	r5, r2
   39f90:	bne	39f2c <luaL_typerror@@Base+0x3bc0>
   39f94:	ldr	r3, [sp, #468]	; 0x1d4
   39f98:	mov	r2, #1
   39f9c:	sub	r6, r6, #1
   39fa0:	orr	r5, r3, r2, lsl r5
   39fa4:	cmp	r6, #32768	; 0x8000
   39fa8:	str	r5, [sp, #468]	; 0x1d4
   39fac:	sub	r7, r7, #8
   39fb0:	bne	39f58 <luaL_typerror@@Base+0x3bec>
   39fb4:	str	r9, [sp, #20]
   39fb8:	ldr	r3, [sp, #492]	; 0x1ec
   39fbc:	ldr	r2, [sp, #552]	; 0x228
   39fc0:	cmp	r3, #2
   39fc4:	subgt	r3, r3, #1
   39fc8:	bicgt	r3, r3, #1
   39fcc:	ldrh	r2, [r2, #62]	; 0x3e
   39fd0:	lslgt	r3, r3, #2
   39fd4:	movle	r3, #0
   39fd8:	subs	r0, r3, r2
   39fdc:	ldr	r1, [sp, #548]	; 0x224
   39fe0:	str	r0, [sp, #40]	; 0x28
   39fe4:	bmi	3bddc <luaL_typerror@@Base+0x5a70>
   39fe8:	ldr	r2, [sp, #28]
   39fec:	strh	r3, [r1, #62]	; 0x3e
   39ff0:	cmp	r2, #0
   39ff4:	beq	3bbc0 <luaL_typerror@@Base+0x5854>
   39ff8:	ldr	r5, [sp, #504]	; 0x1f8
   39ffc:	cmp	r5, #32768	; 0x8000
   3a000:	bls	3bbc0 <luaL_typerror@@Base+0x5854>
   3a004:	ldr	r7, [pc, #1100]	; 3a458 <luaL_typerror@@Base+0x40ec>
   3a008:	ldr	r9, [sp, #12]
   3a00c:	add	r7, r5, r7
   3a010:	str	fp, [sp, #48]	; 0x30
   3a014:	add	r7, r9, r7, lsl #1
   3a018:	lsl	r6, r5, #3
   3a01c:	ldr	fp, [sp, #20]
   3a020:	b	3a0d8 <luaL_typerror@@Base+0x3d6c>
   3a024:	mvn	r1, r4, lsl #25
   3a028:	mvn	r1, r1, lsr #25
   3a02c:	strb	r1, [r3, #6]
   3a030:	and	r2, r2, #31
   3a034:	sub	r2, r2, #13
   3a038:	ldr	r0, [pc, #1064]	; 3a468 <luaL_typerror@@Base+0x40fc>
   3a03c:	ldr	r1, [pc, #1124]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3a040:	cmp	r2, #1
   3a044:	movls	r1, r0
   3a048:	ands	r2, r1, fp
   3a04c:	beq	3c608 <luaL_typerror@@Base+0x629c>
   3a050:	mov	r1, r5
   3a054:	mov	r0, r9
   3a058:	str	r3, [sp, #20]
   3a05c:	bl	21b9c <luaL_where@@Base+0x1a98>
   3a060:	ldr	r3, [sp, #20]
   3a064:	add	r1, r3, #4
   3a068:	mov	r8, r0
   3a06c:	ldrb	r0, [r3, #7]
   3a070:	mov	r2, r8
   3a074:	mov	r3, #13
   3a078:	lsl	r0, r0, #2
   3a07c:	str	r0, [sp]
   3a080:	mov	r0, r9
   3a084:	bl	1cb2c <_start@@Base+0x977c>
   3a088:	mov	r3, #1
   3a08c:	cmp	r4, r8
   3a090:	lsl	r8, r3, r8
   3a094:	mvn	r3, r8
   3a098:	and	fp, fp, r3
   3a09c:	beq	3bb9c <luaL_typerror@@Base+0x5830>
   3a0a0:	ldr	r3, [sp, #28]
   3a0a4:	cmp	r3, #0
   3a0a8:	ldr	r3, [sp, #16]
   3a0ac:	movne	r3, #1
   3a0b0:	str	r3, [sp, #16]
   3a0b4:	ldr	r2, [sp, #452]	; 0x1c4
   3a0b8:	ldr	r3, [sp, #456]	; 0x1c8
   3a0bc:	cmp	r2, r3
   3a0c0:	bcc	3a188 <luaL_typerror@@Base+0x3e1c>
   3a0c4:	sub	r5, r5, #1
   3a0c8:	cmp	r5, #32768	; 0x8000
   3a0cc:	sub	r6, r6, #8
   3a0d0:	sub	r7, r7, #2
   3a0d4:	beq	3bbb8 <luaL_typerror@@Base+0x584c>
   3a0d8:	ldr	r3, [sp, #460]	; 0x1cc
   3a0dc:	add	r3, r3, r6
   3a0e0:	ldrb	r2, [r3, #4]
   3a0e4:	tst	r2, #32
   3a0e8:	beq	3a0c4 <luaL_typerror@@Base+0x3d58>
   3a0ec:	bic	r1, r2, #32
   3a0f0:	strb	r1, [r3, #4]
   3a0f4:	ldrh	r4, [r7]
   3a0f8:	lsrs	r1, r4, #8
   3a0fc:	str	r1, [sp, #28]
   3a100:	beq	3a024 <luaL_typerror@@Base+0x3cb8>
   3a104:	ldrb	r0, [r3, #7]
   3a108:	lsrs	ip, r4, #8
   3a10c:	ldr	r1, [sp, #40]	; 0x28
   3a110:	add	r1, r1, ip, lsl #2
   3a114:	cmp	r1, r0, lsl #2
   3a118:	bne	3a030 <luaL_typerror@@Base+0x3cc4>
   3a11c:	b	3a0c4 <luaL_typerror@@Base+0x3d58>
   3a120:	ldrb	r2, [r5, #7]
   3a124:	cmp	r2, #0
   3a128:	bne	39ac8 <luaL_typerror@@Base+0x375c>
   3a12c:	ldrb	ip, [r5, #5]
   3a130:	ldr	r0, [pc, #852]	; 3a48c <luaL_typerror@@Base+0x4120>
   3a134:	mvn	r2, r3
   3a138:	add	r0, r0, ip
   3a13c:	and	r2, r2, #128	; 0x80
   3a140:	ldrb	r0, [r0, #36]	; 0x24
   3a144:	mvn	r2, r2
   3a148:	and	r2, r2, r0
   3a14c:	cmp	r2, #95	; 0x5f
   3a150:	bgt	39ac8 <luaL_typerror@@Base+0x375c>
   3a154:	ldr	r2, [sp, #484]	; 0x1e4
   3a158:	tst	r2, #262144	; 0x40000
   3a15c:	bne	39d94 <luaL_typerror@@Base+0x3a28>
   3a160:	tst	r3, #128	; 0x80
   3a164:	beq	39ad0 <luaL_typerror@@Base+0x3764>
   3a168:	add	r0, sp, #324	; 0x144
   3a16c:	bl	391e8 <luaL_typerror@@Base+0x2e7c>
   3a170:	ldr	r2, [sp, #452]	; 0x1c4
   3a174:	ldr	r3, [sp, #456]	; 0x1c8
   3a178:	cmp	r2, r3
   3a17c:	bcs	39ae0 <luaL_typerror@@Base+0x3774>
   3a180:	add	r3, sp, #324	; 0x144
   3a184:	str	r3, [sp, #12]
   3a188:	ldr	r0, [sp, #12]
   3a18c:	bl	37790 <luaL_typerror@@Base+0x1424>
   3a190:	ldr	r3, [sp, #536]	; 0x218
   3a194:	str	r3, [sp, #20]
   3a198:	mov	r3, #0
   3a19c:	str	r3, [sp, #496]	; 0x1f0
   3a1a0:	ldr	r3, [sp, #20]
   3a1a4:	cmp	r3, #0
   3a1a8:	bne	39a90 <luaL_typerror@@Base+0x3724>
   3a1ac:	ldr	r3, [sp, #548]	; 0x224
   3a1b0:	ldrh	r1, [r3, #24]
   3a1b4:	ldr	r7, [r3, #28]
   3a1b8:	ldr	r2, [r3, #32]
   3a1bc:	sub	r3, r1, #1
   3a1c0:	str	r3, [sp, #40]	; 0x28
   3a1c4:	lsl	r6, r3, #3
   3a1c8:	add	r5, r7, r6
   3a1cc:	ldrh	r0, [r7, r6]
   3a1d0:	ldrb	r3, [r5, #6]
   3a1d4:	cmp	r3, #0
   3a1d8:	lsl	ip, r0, #2
   3a1dc:	beq	3c0cc <luaL_typerror@@Base+0x5d60>
   3a1e0:	sub	r1, r3, #-1073741823	; 0xc0000001
   3a1e4:	add	r1, r2, r1, lsl #2
   3a1e8:	ldr	r8, [r1, r0, lsl #2]
   3a1ec:	tst	r8, #65536	; 0x10000
   3a1f0:	subeq	r1, r3, #-1073741822	; 0xc0000002
   3a1f4:	addeq	r1, ip, r1, lsl #2
   3a1f8:	addeq	r2, r2, r1
   3a1fc:	beq	3a210 <luaL_typerror@@Base+0x3ea4>
   3a200:	b	3bb7c <luaL_typerror@@Base+0x5810>
   3a204:	ldr	r8, [r2], #-4
   3a208:	tst	r8, #65536	; 0x10000
   3a20c:	bne	3bb7c <luaL_typerror@@Base+0x5810>
   3a210:	subs	r3, r3, #1
   3a214:	bne	3a204 <luaL_typerror@@Base+0x3e98>
   3a218:	mov	r8, r3
   3a21c:	str	r3, [sp, #36]	; 0x24
   3a220:	ldrb	r1, [r5, #5]
   3a224:	ldr	r2, [sp, #452]	; 0x1c4
   3a228:	ldr	r3, [sp, #456]	; 0x1c8
   3a22c:	str	r1, [sp, #540]	; 0x21c
   3a230:	cmp	r2, r3
   3a234:	bcc	3a180 <luaL_typerror@@Base+0x3e14>
   3a238:	add	r3, sp, #324	; 0x144
   3a23c:	mov	r0, r3
   3a240:	mov	r2, #512	; 0x200
   3a244:	mov	r1, #32768	; 0x8000
   3a248:	str	r3, [sp, #12]
   3a24c:	bl	21b9c <luaL_where@@Base+0x1a98>
   3a250:	ldr	r4, [sp, #548]	; 0x224
   3a254:	ldrh	r3, [r4, #66]	; 0x42
   3a258:	cmp	r3, #0
   3a25c:	beq	3a7ac <luaL_typerror@@Base+0x4440>
   3a260:	cmp	r8, #0
   3a264:	ldr	r3, [sp, #464]	; 0x1d0
   3a268:	bne	3be04 <luaL_typerror@@Base+0x5a98>
   3a26c:	add	r2, r3, #284	; 0x11c
   3a270:	ldrh	r1, [r2]
   3a274:	cmp	r1, #0
   3a278:	beq	3a298 <luaL_typerror@@Base+0x3f2c>
   3a27c:	ldr	r0, [sp, #460]	; 0x1cc
   3a280:	ldr	r3, [r3, #76]	; 0x4c
   3a284:	mov	ip, #24
   3a288:	str	r3, [r0, r1, lsl #3]
   3a28c:	ldrh	r3, [r2]
   3a290:	add	r3, r0, r3, lsl #3
   3a294:	strb	ip, [r3, #5]
   3a298:	ldrh	r0, [r4, #24]
   3a29c:	ldr	r2, [r4, #28]
   3a2a0:	add	r1, r5, #8
   3a2a4:	ldrh	r3, [r7, r6]
   3a2a8:	add	r2, r2, r0, lsl #3
   3a2ac:	cmp	r1, r2
   3a2b0:	ldrb	r1, [r5, #6]
   3a2b4:	ldrheq	r2, [r4, #26]
   3a2b8:	ldrhne	r2, [r5, #8]
   3a2bc:	ldr	r8, [r4, #32]
   3a2c0:	cmp	r1, #0
   3a2c4:	sub	r2, r2, #-1073741823	; 0xc0000001
   3a2c8:	lsl	r3, r3, #2
   3a2cc:	add	r2, r8, r2, lsl #2
   3a2d0:	str	r1, [sp, #16]
   3a2d4:	str	r2, [sp, #20]
   3a2d8:	beq	3bb3c <luaL_typerror@@Base+0x57d0>
   3a2dc:	sub	r3, r3, #4
   3a2e0:	add	r8, r8, r3
   3a2e4:	mov	r6, #0
   3a2e8:	ldr	fp, [sp, #12]
   3a2ec:	b	3a34c <luaL_typerror@@Base+0x3fe0>
   3a2f0:	cmp	r9, #0
   3a2f4:	beq	3a33c <luaL_typerror@@Base+0x3fd0>
   3a2f8:	ldr	r3, [sp, #20]
   3a2fc:	mov	r0, fp
   3a300:	sub	r3, r3, #4
   3a304:	ldr	r1, [r3, #4]
   3a308:	str	r3, [sp, #20]
   3a30c:	bl	215b8 <luaL_where@@Base+0x14b4>
   3a310:	mov	r2, r0
   3a314:	add	r5, r5, #4
   3a318:	mov	r3, #9
   3a31c:	str	r5, [sp]
   3a320:	mov	r1, #-469762048	; 0xe4000000
   3a324:	mov	r0, fp
   3a328:	bl	16dbc <_start@@Base+0x3a0c>
   3a32c:	ldr	r3, [sp, #452]	; 0x1c4
   3a330:	ldr	r2, [sp, #456]	; 0x1c8
   3a334:	cmp	r2, r3
   3a338:	bhi	3a188 <luaL_typerror@@Base+0x3e1c>
   3a33c:	ldr	r3, [sp, #16]
   3a340:	add	r6, r6, #1
   3a344:	cmp	r3, r6
   3a348:	beq	3bb3c <luaL_typerror@@Base+0x57d0>
   3a34c:	ldr	r4, [r8, #4]!
   3a350:	tst	r4, #262144	; 0x40000
   3a354:	bne	3a33c <luaL_typerror@@Base+0x3fd0>
   3a358:	uxth	r1, r4
   3a35c:	ldr	r7, [sp, #460]	; 0x1cc
   3a360:	lsr	r9, r4, #24
   3a364:	add	r7, r7, r1, lsl #3
   3a368:	sub	r5, r9, #1
   3a36c:	ldrb	r3, [r7, #4]
   3a370:	lsl	r5, r5, #3
   3a374:	and	r3, r3, #31
   3a378:	cmp	r3, #14
   3a37c:	beq	3bae8 <luaL_typerror@@Base+0x577c>
   3a380:	cmp	r3, #2
   3a384:	bhi	3ba9c <luaL_typerror@@Base+0x5730>
   3a388:	ldr	r2, [pc, #204]	; 3a45c <luaL_typerror@@Base+0x40f0>
   3a38c:	tst	r4, #196608	; 0x30000
   3a390:	bne	3a2f0 <luaL_typerror@@Base+0x3f84>
   3a394:	ldrb	r3, [r7, #4]
   3a398:	mov	r0, fp
   3a39c:	and	r3, r3, #31
   3a3a0:	cmp	r3, #14
   3a3a4:	mvnls	r1, r3
   3a3a8:	mvnhi	r1, #13
   3a3ac:	bl	215b8 <luaL_where@@Base+0x14b4>
   3a3b0:	mov	r2, r0
   3a3b4:	b	3a314 <luaL_typerror@@Base+0x3fa8>
   3a3b8:	cmp	r6, #0
   3a3bc:	ldrne	r3, [sp, #472]	; 0x1d8
   3a3c0:	orrne	r3, r3, #16711680	; 0xff0000
   3a3c4:	orrne	r3, r3, #4096	; 0x1000
   3a3c8:	orrne	r3, r3, #15
   3a3cc:	strne	r3, [sp, #472]	; 0x1d8
   3a3d0:	mov	r3, #144	; 0x90
   3a3d4:	strh	r3, [r4, #6]
   3a3d8:	b	39a58 <luaL_typerror@@Base+0x36ec>
   3a3dc:	mov	r6, #1
   3a3e0:	b	39a50 <luaL_typerror@@Base+0x36e4>
   3a3e4:	mov	r2, r4
   3a3e8:	add	r1, sp, #464	; 0x1d0
   3a3ec:	ldr	r0, [sp, #460]	; 0x1cc
   3a3f0:	bl	1cc40 <_start@@Base+0x9890>
   3a3f4:	add	r2, sp, #1200	; 0x4b0
   3a3f8:	add	r2, r2, #8
   3a3fc:	add	r3, sp, #324	; 0x144
   3a400:	mov	r1, r4
   3a404:	str	r0, [r2, #-1136]!	; 0xfffffb90
   3a408:	mov	r0, r3
   3a40c:	bl	1cda8 <_start@@Base+0x99f8>
   3a410:	cmp	r6, #0
   3a414:	strh	r0, [r4, #6]
   3a418:	beq	39a58 <luaL_typerror@@Base+0x36ec>
   3a41c:	ldr	r3, [sp, #472]	; 0x1d8
   3a420:	orr	r3, r3, #16711680	; 0xff0000
   3a424:	orr	r3, r3, #4096	; 0x1000
   3a428:	orr	r3, r3, #15
   3a42c:	str	r3, [sp, #472]	; 0x1d8
   3a430:	b	39a58 <luaL_typerror@@Base+0x36ec>
   3a434:	str	lr, [sp]
   3a438:	ldrsbteq	pc, [pc], #250	; <UNPREDICTABLE>
   3a43c:	andeq	sp, r6, ip, lsr r4
   3a440:	ldrshteq	pc, [pc], #250	; <UNPREDICTABLE>
   3a444:	rsbeq	r4, r0, r0
   3a448:	strbge	r2, [r0], -r4, ror #20
   3a44c:	cmp	r0, #0
   3a450:	andeq	r0, r7, r8, ror #7
   3a454:	mov	r0, sp
   3a458:	svcvc	0x00ff80bf
   3a45c:	andeq	r0, r0, sl, lsr #17
   3a460:	ldrdeq	r0, [r7], -r0	; <UNPREDICTABLE>
   3a464:	andeq	r1, r0, pc
   3a468:			; <UNDEFINED> instruction: 0xffff0000
   3a46c:	add	r0, r0, r0
   3a470:	add	r0, r0, r0, lsl #3
   3a474:			; <UNDEFINED> instruction: 0x000704bc
   3a478:	rsb	r0, r0, r0
   3a47c:	vabs.f64	d0, d0
   3a480:	andeq	r0, r7, r0, lsl #8
   3a484:	vdiv.f64	d0, d0, d0
   3a488:			; <UNDEFINED> instruction: 0x00070cb0
   3a48c:			; <UNDEFINED> instruction: 0x0006ecb8
   3a490:	andeq	r0, r7, r4, ror #7
   3a494:	andeq	r0, r7, r4, lsr #9
   3a498:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   3a49c:	andeq	r0, r7, ip, lsr #9
   3a4a0:	andeq	r0, r7, r8, asr r4
   3a4a4:	muleq	r7, r4, r4
   3a4a8:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   3a4ac:	strb	r0, [r0], #-0
   3a4b0:	bic	lr, lr, #4
   3a4b4:	ldr	r0, [r0], #-0
   3a4b8:	tst	lr, #4
   3a4bc:	ldrb	r0, [r0], #-0
   3a4c0:	rscseq	r1, pc, pc
   3a4c4:	strdeq	r7, [r0], -sp
   3a4c8:	ldrdeq	r0, [r7], -r0	; <UNPREDICTABLE>
   3a4cc:	ldrb	r3, [r4, #-3]
   3a4d0:	cmp	r3, #94	; 0x5e
   3a4d4:	beq	3a4fc <luaL_typerror@@Base+0x4190>
   3a4d8:	cmp	r3, #98	; 0x62
   3a4dc:	beq	3a4fc <luaL_typerror@@Base+0x4190>
   3a4e0:	cmp	r3, #90	; 0x5a
   3a4e4:	bne	39a50 <luaL_typerror@@Base+0x36e4>
   3a4e8:	ldrb	r3, [r4, #-4]
   3a4ec:	and	r3, r3, #31
   3a4f0:	sub	r3, r3, #13
   3a4f4:	cmp	r3, #1
   3a4f8:	bls	3a3d0 <luaL_typerror@@Base+0x4064>
   3a4fc:	mov	r2, #128	; 0x80
   3a500:	mov	r3, #129	; 0x81
   3a504:	strh	r2, [r4, #-2]
   3a508:	strh	r3, [r4, #6]
   3a50c:	b	39a58 <luaL_typerror@@Base+0x36ec>
   3a510:	ldrb	r3, [r4, #4]
   3a514:	and	r3, r3, #31
   3a518:	cmp	r3, #14
   3a51c:	beq	3a3b8 <luaL_typerror@@Base+0x404c>
   3a520:	mov	r3, #128	; 0x80
   3a524:	cmp	r6, #0
   3a528:	strh	r3, [r4, #6]
   3a52c:	ldrne	r3, [sp, #472]	; 0x1d8
   3a530:	orrne	r3, r3, #4096	; 0x1000
   3a534:	orrne	r3, r3, #15
   3a538:	strne	r3, [sp, #472]	; 0x1d8
   3a53c:	b	39a58 <luaL_typerror@@Base+0x36ec>
   3a540:	ldrb	r3, [r4, #4]
   3a544:	and	r3, r3, #31
   3a548:	cmp	r3, #14
   3a54c:	beq	39a50 <luaL_typerror@@Base+0x36e4>
   3a550:	b	3a520 <luaL_typerror@@Base+0x41b4>
   3a554:	ldrh	r9, [r4, #2]
   3a558:	ldr	r3, [pc, #-256]	; 3a460 <luaL_typerror@@Base+0x40f4>
   3a55c:	mov	r1, r4
   3a560:	add	r0, sp, #324	; 0x144
   3a564:	lsl	r9, r9, #3
   3a568:	add	r2, r3, r9
   3a56c:	add	r2, r2, #4
   3a570:	bl	1cda8 <_start@@Base+0x99f8>
   3a574:	cmp	r6, #0
   3a578:	strh	r0, [r4, #6]
   3a57c:	beq	39a58 <luaL_typerror@@Base+0x36ec>
   3a580:	ldr	r3, [pc, #-256]	; 3a488 <luaL_typerror@@Base+0x411c>
   3a584:	ldr	r2, [pc, #-296]	; 3a464 <luaL_typerror@@Base+0x40f8>
   3a588:	add	r9, r3, r9
   3a58c:	ldr	r3, [sp, #472]	; 0x1d8
   3a590:	ldr	r1, [r9, #-2268]	; 0xfffff724
   3a594:	tst	r1, #1024	; 0x400
   3a598:	ldr	r1, [pc, #-224]	; 3a4c0 <luaL_typerror@@Base+0x4154>
   3a59c:	moveq	r2, r1
   3a5a0:	orr	r3, r3, r2
   3a5a4:	str	r3, [sp, #472]	; 0x1d8
   3a5a8:	b	39a58 <luaL_typerror@@Base+0x36ec>
   3a5ac:	ldrb	r3, [r4, #4]
   3a5b0:	and	r3, r3, #31
   3a5b4:	sub	r3, r3, #13
   3a5b8:	cmp	r3, #1
   3a5bc:	bls	39a50 <luaL_typerror@@Base+0x36e4>
   3a5c0:	ldrh	r3, [r4, #2]
   3a5c4:	and	r2, r3, #31
   3a5c8:	sub	r2, r2, #13
   3a5cc:	cmp	r2, #1
   3a5d0:	bls	39a50 <luaL_typerror@@Base+0x36e4>
   3a5d4:	b	3a5f4 <luaL_typerror@@Base+0x4288>
   3a5d8:	mov	r3, #128	; 0x80
   3a5dc:	cmp	r6, #0
   3a5e0:	strh	r3, [r4, #6]
   3a5e4:	ldrne	r3, [pc, #-300]	; 3a4c0 <luaL_typerror@@Base+0x4154>
   3a5e8:	strne	r3, [sp, #472]	; 0x1d8
   3a5ec:	b	39a58 <luaL_typerror@@Base+0x36ec>
   3a5f0:	ldrh	r3, [r4, #2]
   3a5f4:	tst	r3, #32768	; 0x8000
   3a5f8:	bne	39a50 <luaL_typerror@@Base+0x36e4>
   3a5fc:	ldrh	r3, [r4]
   3a600:	tst	r3, #32768	; 0x8000
   3a604:	beq	39a50 <luaL_typerror@@Base+0x36e4>
   3a608:	ldr	r2, [sp, #460]	; 0x1cc
   3a60c:	add	r3, r2, r3, lsl #3
   3a610:	ldrh	r3, [r3, #6]
   3a614:	uxtb	r2, r3
   3a618:	cmp	r2, #252	; 0xfc
   3a61c:	bhi	39a50 <luaL_typerror@@Base+0x36e4>
   3a620:	b	39a54 <luaL_typerror@@Base+0x36e8>
   3a624:	ldr	r0, [sp, #12]
   3a628:	bl	37928 <luaL_typerror@@Base+0x15bc>
   3a62c:	ldr	r4, [sp, #460]	; 0x1cc
   3a630:	add	r4, r4, #262144	; 0x40000
   3a634:	ldrb	r3, [r4, #6]
   3a638:	tst	r3, #128	; 0x80
   3a63c:	bne	3a668 <luaL_typerror@@Base+0x42fc>
   3a640:	ldr	r2, [sp, #472]	; 0x1d8
   3a644:	ldrb	r1, [r4, #4]
   3a648:	lsr	r3, r2, r3
   3a64c:	tst	r3, #1
   3a650:	bne	3a65c <luaL_typerror@@Base+0x42f0>
   3a654:	tst	r1, #32
   3a658:	beq	3a668 <luaL_typerror@@Base+0x42fc>
   3a65c:	add	r2, r4, #7
   3a660:	ldr	r0, [sp, #12]
   3a664:	bl	211f4 <luaL_where@@Base+0x10f0>
   3a668:	mov	r1, r4
   3a66c:	mov	r2, #9
   3a670:	ldr	r0, [sp, #12]
   3a674:	bl	22ca8 <luaL_where@@Base+0x2ba4>
   3a678:	ldr	r3, [sp, #492]	; 0x1ec
   3a67c:	ldr	r1, [sp, #548]	; 0x224
   3a680:	cmp	r3, #2
   3a684:	movle	r3, #0
   3a688:	strhle	r3, [r1, #62]	; 0x3e
   3a68c:	ble	3a6bc <luaL_typerror@@Base+0x4350>
   3a690:	sub	r3, r3, #1
   3a694:	bic	r3, r3, #1
   3a698:	lsl	r3, r3, #2
   3a69c:	cmp	r3, #0
   3a6a0:	strh	r3, [r1, #62]	; 0x3e
   3a6a4:	rsb	r2, r3, #0
   3a6a8:	beq	3a6bc <luaL_typerror@@Base+0x4350>
   3a6ac:	mov	r1, #13
   3a6b0:	ldr	r0, [sp, #12]
   3a6b4:	bl	21af0 <luaL_where@@Base+0x19ec>
   3a6b8:	ldr	r1, [sp, #548]	; 0x224
   3a6bc:	ldr	r3, [r1, #36]	; 0x24
   3a6c0:	ldrb	r3, [r3, #7]
   3a6c4:	strb	r3, [r1, #6]
   3a6c8:	ldr	r5, [sp, #480]	; 0x1e0
   3a6cc:	cmp	r5, #0
   3a6d0:	beq	3a75c <luaL_typerror@@Base+0x43f0>
   3a6d4:	ldr	r9, [sp, #12]
   3a6d8:	mov	r8, #5120	; 0x1400
   3a6dc:	mov	r7, #0
   3a6e0:	mov	r6, #1
   3a6e4:	clz	r4, r5
   3a6e8:	eor	r4, r4, #31
   3a6ec:	add	r2, r4, #160	; 0xa0
   3a6f0:	ldr	r3, [sp, #460]	; 0x1cc
   3a6f4:	lsl	r2, r2, #1
   3a6f8:	ldrh	r1, [r9, r2]
   3a6fc:	add	r3, r3, r1, lsl #3
   3a700:	ldrb	r2, [r3, #4]
   3a704:	tst	r2, #32
   3a708:	beq	3a754 <luaL_typerror@@Base+0x43e8>
   3a70c:	ldrb	r0, [r3, #7]
   3a710:	bic	r2, r2, #32
   3a714:	strb	r2, [r3, #4]
   3a718:	cmp	r0, #0
   3a71c:	beq	3a754 <luaL_typerror@@Base+0x43e8>
   3a720:	ldr	r3, [sp, #464]	; 0x1d0
   3a724:	ldr	r2, [sp, #524]	; 0x20c
   3a728:	mov	r0, r3
   3a72c:	strh	r1, [r3, #120]	; 0x78
   3a730:	strh	r8, [r3, #124]	; 0x7c
   3a734:	strh	r2, [r3, #122]	; 0x7a
   3a738:	bl	25258 <luaL_where@@Base+0x5154>
   3a73c:	ldr	r3, [sp, #464]	; 0x1d0
   3a740:	ldr	r3, [r3, #16]
   3a744:	uxth	r0, r0
   3a748:	add	r3, r3, r0, lsl #3
   3a74c:	strb	r4, [r3, #6]
   3a750:	strb	r7, [r3, #7]
   3a754:	bics	r5, r5, r6, lsl r4
   3a758:	bne	3a6e4 <luaL_typerror@@Base+0x4378>
   3a75c:	ldr	r3, [sp, #32]
   3a760:	ldr	r1, [r3, #76]	; 0x4c
   3a764:	ldr	r3, [sp, #24]
   3a768:	ldr	r2, [r1, #8]
   3a76c:	ldr	r3, [r3, #8]
   3a770:	cmp	r2, r3
   3a774:	bcs	3c3c8 <luaL_typerror@@Base+0x605c>
   3a778:	ldr	r5, [sp, #32]
   3a77c:	mov	r4, #0
   3a780:	sub	r0, r5, #384	; 0x180
   3a784:	bl	16f38 <_start@@Base+0x3b88>
   3a788:	str	r4, [r5, #76]	; 0x4c
   3a78c:	ldr	r1, [sp, #24]
   3a790:	ldr	r0, [r5, #80]	; 0x50
   3a794:	bl	2fddc <luaL_where@@Base+0xfcd8>
   3a798:	str	r4, [sp, #576]	; 0x240
   3a79c:	str	r0, [r5, #76]	; 0x4c
   3a7a0:	ldr	r1, [sp, #560]	; 0x230
   3a7a4:	ldr	r4, [sp, #548]	; 0x224
   3a7a8:	b	39520 <luaL_typerror@@Base+0x31b4>
   3a7ac:	ldrh	r3, [r7, r6]
   3a7b0:	ldrb	r0, [r5, #6]
   3a7b4:	ldr	r2, [r4, #32]
   3a7b8:	ldr	r1, [sp, #464]	; 0x1d0
   3a7bc:	add	r3, r3, r0
   3a7c0:	ldr	r4, [r2, r3, lsl #2]
   3a7c4:	ldr	r3, [r4]
   3a7c8:	uxtb	r2, r3
   3a7cc:	cmp	r2, #87	; 0x57
   3a7d0:	bne	3a7f0 <luaL_typerror@@Base+0x4484>
   3a7d4:	ldr	r2, [r1, #272]	; 0x110
   3a7d8:	lsr	r3, r3, #16
   3a7dc:	ldr	r2, [r2, r3, lsl #2]
   3a7e0:	ldrb	r3, [r2, #44]	; 0x2c
   3a7e4:	sub	r3, r3, #73	; 0x49
   3a7e8:	cmp	r3, #3
   3a7ec:	addls	r4, r2, #44	; 0x2c
   3a7f0:	ldr	r9, [sp, #12]
   3a7f4:	add	r1, r1, #2496	; 0x9c0
   3a7f8:	mov	r2, #7
   3a7fc:	mov	r0, r9
   3a800:	bl	22b78 <luaL_where@@Base+0x2a74>
   3a804:	mov	r2, #6
   3a808:	mov	r1, r4
   3a80c:	mov	r0, r9
   3a810:	bl	22b78 <luaL_where@@Base+0x2a74>
   3a814:	ldr	r3, [r4]
   3a818:	ldrb	r1, [r5, #4]
   3a81c:	uxtb	r0, r3
   3a820:	sub	r2, r0, #63	; 0x3f
   3a824:	sub	r1, r1, r8
   3a828:	cmp	r2, #10
   3a82c:	ldrls	pc, [pc, r2, lsl #2]
   3a830:	b	3bfac <luaL_typerror@@Base+0x5c40>
   3a834:	andeq	fp, r3, r8, ror lr
   3a838:	andeq	fp, r3, ip, lsr #31
   3a83c:	andeq	fp, r3, r8, asr lr
   3a840:	andeq	fp, r3, ip, lsr #31
   3a844:	andeq	fp, r3, r8, asr lr
   3a848:	andeq	fp, r3, ip, lsr #31
   3a84c:	andeq	fp, r3, ip, lsr #31
   3a850:	andeq	fp, r3, ip, lsr #31
   3a854:	andeq	fp, r3, ip, lsr #31
   3a858:	andeq	fp, r3, ip, lsr #31
   3a85c:	andeq	fp, r3, r8, lsr lr
   3a860:	mov	r1, r5
   3a864:	add	r0, sp, #324	; 0x144
   3a868:	bl	2346c <luaL_where@@Base+0x3368>
   3a86c:	ldr	r1, [sp, #504]	; 0x1f8
   3a870:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3a874:	mov	r1, r5
   3a878:	add	r0, sp, #324	; 0x144
   3a87c:	bl	233e8 <luaL_where@@Base+0x32e4>
   3a880:	ldr	r1, [sp, #504]	; 0x1f8
   3a884:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3a888:	mov	r1, r5
   3a88c:	add	r0, sp, #324	; 0x144
   3a890:	bl	238cc <luaL_where@@Base+0x37c8>
   3a894:	ldr	r1, [sp, #504]	; 0x1f8
   3a898:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3a89c:	ldr	r3, [sp, #548]	; 0x224
   3a8a0:	add	r4, sp, #324	; 0x144
   3a8a4:	mov	r0, r4
   3a8a8:	ldr	r3, [r3, #28]
   3a8ac:	str	r4, [sp, #12]
   3a8b0:	ldrh	r3, [r3, #2]
   3a8b4:	str	r3, [sp, #500]	; 0x1f4
   3a8b8:	bl	391e8 <luaL_typerror@@Base+0x2e7c>
   3a8bc:	mov	r0, r4
   3a8c0:	bl	387b8 <luaL_typerror@@Base+0x244c>
   3a8c4:	ldr	r3, [sp, #504]	; 0x1f8
   3a8c8:	str	r3, [sp, #500]	; 0x1f4
   3a8cc:	b	39df4 <luaL_typerror@@Base+0x3a88>
   3a8d0:	ldr	r3, [sp, #544]	; 0x220
   3a8d4:	add	r3, r3, #1
   3a8d8:	str	r3, [sp, #544]	; 0x220
   3a8dc:	ldrh	r4, [r5, #2]
   3a8e0:	add	r3, sp, #68	; 0x44
   3a8e4:	add	r7, sp, #324	; 0x144
   3a8e8:	mov	r1, r5
   3a8ec:	add	r4, fp, r4, lsl #3
   3a8f0:	mov	r6, r4
   3a8f4:	add	r0, sp, #460	; 0x1cc
   3a8f8:	ldr	r2, [r6, #4]!
   3a8fc:	bl	1cbb0 <_start@@Base+0x9800>
   3a900:	mov	r2, r6
   3a904:	mov	r1, r5
   3a908:	mov	r0, r7
   3a90c:	bl	37d54 <luaL_typerror@@Base+0x19e8>
   3a910:	mov	r1, r4
   3a914:	add	r2, sp, #68	; 0x44
   3a918:	mov	r0, r7
   3a91c:	bl	25eac <luaL_where@@Base+0x5da8>
   3a920:	ldr	r1, [sp, #504]	; 0x1f8
   3a924:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3a928:	ldrb	r3, [r5, #-3]
   3a92c:	cmp	r3, #59	; 0x3b
   3a930:	beq	3be88 <luaL_typerror@@Base+0x5b1c>
   3a934:	mov	r1, r5
   3a938:	add	r0, sp, #324	; 0x144
   3a93c:	bl	22770 <luaL_where@@Base+0x266c>
   3a940:	ldr	r1, [sp, #504]	; 0x1f8
   3a944:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3a948:	add	r7, sp, #324	; 0x144
   3a94c:	ldr	r2, [pc, #-1196]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3a950:	mov	r1, #32768	; 0x8000
   3a954:	mov	r0, r7
   3a958:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3a95c:	ldrh	r2, [r5, #2]
   3a960:	ldr	r3, [sp, #460]	; 0x1cc
   3a964:	ldr	r1, [sp, #540]	; 0x21c
   3a968:	ldr	r5, [r3, r2, lsl #3]
   3a96c:	add	r3, r3, #262144	; 0x40000
   3a970:	ldrb	r2, [r5, #-3]
   3a974:	add	r6, r2, #1
   3a978:	subs	r1, r1, r6
   3a97c:	strpl	r1, [sp, #540]	; 0x21c
   3a980:	ldrb	r1, [r3, #4]
   3a984:	movmi	r2, #0
   3a988:	strmi	r2, [sp, #540]	; 0x21c
   3a98c:	orr	r1, r1, #32
   3a990:	add	r2, r3, #7
   3a994:	strb	r1, [r3, #4]
   3a998:	rsb	r6, r6, r6, lsl #29
   3a99c:	mov	r4, r0
   3a9a0:	mov	r0, r7
   3a9a4:	bl	211f4 <luaL_where@@Base+0x10f0>
   3a9a8:	mov	r3, #13
   3a9ac:	mov	r2, r4
   3a9b0:	mov	r1, #-469762048	; 0xe4000000
   3a9b4:	str	r0, [sp]
   3a9b8:	mov	r0, r7
   3a9bc:	bl	16dbc <_start@@Base+0x3a0c>
   3a9c0:	ldr	r3, [sp, #464]	; 0x1d0
   3a9c4:	mov	r2, r4
   3a9c8:	sub	r3, r3, #160	; 0xa0
   3a9cc:	mov	r1, #-469762048	; 0xe4000000
   3a9d0:	mov	r0, r7
   3a9d4:	bl	217f8 <luaL_where@@Base+0x16f4>
   3a9d8:	lsl	r2, r6, #3
   3a9dc:	mov	r1, r4
   3a9e0:	mov	r0, r7
   3a9e4:	bl	21af0 <luaL_where@@Base+0x19ec>
   3a9e8:	mov	r1, #1
   3a9ec:	mov	r0, r7
   3a9f0:	bl	17a3c <_start@@Base+0x468c>
   3a9f4:	ldr	r3, [pc, #-1364]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3a9f8:	mov	r2, #1
   3a9fc:	mov	r1, r5
   3aa00:	bic	r2, r3, r2, lsl r4
   3aa04:	bl	215b8 <luaL_where@@Base+0x14b4>
   3aa08:	ldr	lr, [sp, #452]	; 0x1c4
   3aa0c:	mvn	r5, #3
   3aa10:	add	r2, lr, r5
   3aa14:	str	r2, [sp, #452]	; 0x1c4
   3aa18:	ldr	r1, [pc, #-1388]	; 3a4b4 <luaL_typerror@@Base+0x4148>
   3aa1c:	mov	r3, r4
   3aa20:	mov	r2, #14
   3aa24:	orr	ip, r0, #-520093696	; 0xe1000000
   3aa28:	orr	ip, ip, #6160384	; 0x5e0000
   3aa2c:	str	ip, [lr, #-4]
   3aa30:	mov	r0, r7
   3aa34:	str	r5, [sp]
   3aa38:	bl	16dbc <_start@@Base+0x3a0c>
   3aa3c:	ldr	r1, [sp, #504]	; 0x1f8
   3aa40:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3aa44:	add	r7, sp, #324	; 0x144
   3aa48:	mov	r1, r5
   3aa4c:	ldr	r2, [pc, #-1452]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3aa50:	mov	r0, r7
   3aa54:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   3aa58:	ldr	r2, [pc, #-1480]	; 3a498 <luaL_typerror@@Base+0x412c>
   3aa5c:	mov	r1, r0
   3aa60:	mov	r0, r7
   3aa64:	bl	25de8 <luaL_where@@Base+0x5ce4>
   3aa68:	ldr	r1, [sp, #504]	; 0x1f8
   3aa6c:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3aa70:	mov	r1, r5
   3aa74:	add	r0, sp, #324	; 0x144
   3aa78:	bl	23690 <luaL_where@@Base+0x358c>
   3aa7c:	ldr	r1, [sp, #504]	; 0x1f8
   3aa80:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3aa84:	ldrh	r2, [r6, r4]
   3aa88:	ldr	r3, [pc, #-1528]	; 3a498 <luaL_typerror@@Base+0x412c>
   3aa8c:	cmp	r2, r3
   3aa90:	beq	39d90 <luaL_typerror@@Base+0x3a24>
   3aa94:	add	r7, sp, #324	; 0x144
   3aa98:	ldr	r2, [pc, #-1528]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3aa9c:	mov	r1, r5
   3aaa0:	mov	r0, r7
   3aaa4:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   3aaa8:	ldr	r2, [pc, #-1544]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3aaac:	ldrh	r1, [r6, r4]
   3aab0:	mov	r8, r0
   3aab4:	mov	r0, r7
   3aab8:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3aabc:	ldrb	r3, [r5, #4]
   3aac0:	and	r3, r3, #31
   3aac4:	sub	r3, r3, #13
   3aac8:	uxtb	r3, r3
   3aacc:	cmp	r3, #5
   3aad0:	mov	r9, r0
   3aad4:	bhi	3c238 <luaL_typerror@@Base+0x5ecc>
   3aad8:	ldrh	r2, [r5, #2]
   3aadc:	ldr	r1, [pc, #-1628]	; 3a488 <luaL_typerror@@Base+0x411c>
   3aae0:	add	r3, r1, r3, lsl #2
   3aae4:	cmp	r2, #6
   3aae8:	ldr	r5, [r3, #-112]	; 0xffffff90
   3aaec:	beq	3c2a8 <luaL_typerror@@Base+0x5f3c>
   3aaf0:	ldr	r3, [pc, #-1648]	; 3a488 <luaL_typerror@@Base+0x411c>
   3aaf4:	tst	r5, #67108864	; 0x4000000
   3aaf8:	add	r2, r3, r2
   3aafc:	ldrb	r2, [r2, #-88]	; 0xffffffa8
   3ab00:	mov	r3, r2
   3ab04:	bne	3c254 <luaL_typerror@@Base+0x5ee8>
   3ab08:	lsl	r3, r9, #16
   3ab0c:	orr	r3, r3, r8, lsl #12
   3ab10:	orr	r3, r3, #29360128	; 0x1c00000
   3ab14:	ldr	r1, [sp, #452]	; 0x1c4
   3ab18:	and	r0, r2, #15
   3ab1c:	orr	r3, r3, r5
   3ab20:	lsl	r2, r2, #4
   3ab24:	and	r2, r2, #3840	; 0xf00
   3ab28:	orr	r3, r3, r0
   3ab2c:	orr	r3, r3, r2
   3ab30:	sub	r2, r1, #4
   3ab34:	str	r2, [sp, #452]	; 0x1c4
   3ab38:	str	r3, [r1, #-4]
   3ab3c:	ldr	r1, [sp, #504]	; 0x1f8
   3ab40:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3ab44:	ldrb	r3, [r5, #4]
   3ab48:	ldr	r1, [pc, #-1704]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3ab4c:	add	r7, sp, #324	; 0x144
   3ab50:	and	r3, r3, #31
   3ab54:	sub	r3, r3, #13
   3ab58:	cmp	r3, #1
   3ab5c:	ldr	r2, [pc, #-1788]	; 3a468 <luaL_typerror@@Base+0x40fc>
   3ab60:	mov	r0, r7
   3ab64:	movhi	r2, r1
   3ab68:	mov	r1, r5
   3ab6c:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   3ab70:	ldrb	r3, [r5, #4]
   3ab74:	ldr	lr, [pc, #-1748]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3ab78:	mov	ip, #0
   3ab7c:	and	r3, r3, #31
   3ab80:	sub	r3, r3, #13
   3ab84:	uxtb	r3, r3
   3ab88:	cmp	r3, #5
   3ab8c:	ldrls	r1, [pc, #-1804]	; 3a488 <luaL_typerror@@Base+0x411c>
   3ab90:	ldrhi	r1, [pc, #-1764]	; 3a4b4 <luaL_typerror@@Base+0x4148>
   3ab94:	addls	r3, r1, r3, lsl #2
   3ab98:	mov	r2, r0
   3ab9c:	ldrls	r1, [r3, #-112]	; 0xffffff90
   3aba0:	mov	r0, r7
   3aba4:	ldrh	r3, [r6, r4]
   3aba8:	str	lr, [sp]
   3abac:	str	ip, [sp, #4]
   3abb0:	bl	22124 <luaL_where@@Base+0x2020>
   3abb4:	ldr	r1, [sp, #504]	; 0x1f8
   3abb8:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3abbc:	ldr	r9, [pc, #-1820]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3abc0:	add	r7, sp, #324	; 0x144
   3abc4:	mov	r1, r5
   3abc8:	mov	r2, r9
   3abcc:	mov	r0, r7
   3abd0:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   3abd4:	ldrh	r1, [r6, r4]
   3abd8:	tst	r1, #32768	; 0x8000
   3abdc:	bne	3beec <luaL_typerror@@Base+0x5b80>
   3abe0:	ldrh	ip, [r5, #2]
   3abe4:	ldr	lr, [sp, #460]	; 0x1cc
   3abe8:	mov	r2, r0
   3abec:	mov	r0, r7
   3abf0:	ldr	r3, [lr, r1, lsl #3]
   3abf4:	lsr	ip, ip, #8
   3abf8:	ldr	r1, [pc, #-1868]	; 3a4b4 <luaL_typerror@@Base+0x4148>
   3abfc:	add	r3, r3, ip, lsl #2
   3ac00:	ldr	r3, [r3, #20]
   3ac04:	add	r3, r3, #16
   3ac08:	bl	217f8 <luaL_where@@Base+0x16f4>
   3ac0c:	ldr	r1, [sp, #504]	; 0x1f8
   3ac10:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3ac14:	mov	r1, r5
   3ac18:	add	r0, sp, #324	; 0x144
   3ac1c:	bl	234f4 <luaL_where@@Base+0x33f0>
   3ac20:	ldr	r1, [sp, #504]	; 0x1f8
   3ac24:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3ac28:	mov	r1, r5
   3ac2c:	add	r0, sp, #324	; 0x144
   3ac30:	bl	23e54 <luaL_where@@Base+0x3d50>
   3ac34:	ldr	r1, [sp, #504]	; 0x1f8
   3ac38:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3ac3c:	add	r7, sp, #324	; 0x144
   3ac40:	ldr	r2, [pc, #-1952]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3ac44:	mov	r0, r7
   3ac48:	mov	r1, r5
   3ac4c:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   3ac50:	ldrh	r3, [r5, #2]
   3ac54:	ldrh	r8, [r6, r4]
   3ac58:	tst	r3, #32768	; 0x8000
   3ac5c:	str	r3, [sp, #12]
   3ac60:	mov	r2, r0
   3ac64:	bne	3c28c <luaL_typerror@@Base+0x5f20>
   3ac68:	ldr	r6, [sp, #460]	; 0x1cc
   3ac6c:	lsl	r4, r2, #12
   3ac70:	lsl	r2, r8, #3
   3ac74:	mov	r0, r7
   3ac78:	ldrh	r9, [r6, r2]
   3ac7c:	mov	r1, r9
   3ac80:	bl	16ec4 <_start@@Base+0x3b14>
   3ac84:	ldr	r3, [sp, #12]
   3ac88:	ldr	r1, [r6, r3, lsl #3]
   3ac8c:	cmp	r0, #0
   3ac90:	add	r1, r0, r1, lsl #3
   3ac94:	ldr	r0, [pc, #-2096]	; 3a46c <luaL_typerror@@Base+0x4100>
   3ac98:	moveq	r9, r8
   3ac9c:	bl	16d00 <_start@@Base+0x3950>
   3aca0:	subs	r6, r0, #0
   3aca4:	bne	3c06c <luaL_typerror@@Base+0x5d00>
   3aca8:	ldr	r9, [pc, #-2056]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3acac:	mov	r1, r8
   3acb0:	mov	r2, r9
   3acb4:	mov	r0, r7
   3acb8:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3acbc:	mov	r2, #1
   3acc0:	ldrh	r1, [r5, #2]
   3acc4:	mov	r6, r0
   3acc8:	mov	r0, r7
   3accc:	bic	r2, r9, r2, lsl r6
   3acd0:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3acd4:	ldr	r3, [pc, #-2156]	; 3a470 <luaL_typerror@@Base+0x4104>
   3acd8:	ldr	r2, [sp, #452]	; 0x1c4
   3acdc:	sub	r1, r2, #4
   3ace0:	str	r1, [sp, #452]	; 0x1c4
   3ace4:	orr	r0, r0, r4
   3ace8:	orr	r3, r0, r3
   3acec:	orr	r3, r3, r6, lsl #16
   3acf0:	str	r3, [r2, #-4]
   3acf4:	ldr	r1, [sp, #504]	; 0x1f8
   3acf8:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3acfc:	mov	r1, r5
   3ad00:	add	r0, sp, #324	; 0x144
   3ad04:	bl	23a64 <luaL_where@@Base+0x3960>
   3ad08:	ldr	r1, [sp, #504]	; 0x1f8
   3ad0c:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3ad10:	ldrb	r3, [r5, #6]
   3ad14:	cmp	r3, #254	; 0xfe
   3ad18:	beq	39d90 <luaL_typerror@@Base+0x3a24>
   3ad1c:	ldr	r3, [pc, #-2188]	; 3a498 <luaL_typerror@@Base+0x412c>
   3ad20:	ldr	r8, [pc, #-2228]	; 3a474 <luaL_typerror@@Base+0x4108>
   3ad24:	str	r3, [sp, #68]	; 0x44
   3ad28:	ldrh	r1, [r6, r4]
   3ad2c:	add	r7, sp, #324	; 0x144
   3ad30:	sub	r3, r3, #2
   3ad34:	mov	r2, r8
   3ad38:	mov	r0, r7
   3ad3c:	str	r1, [sp, #72]	; 0x48
   3ad40:	mov	r1, r5
   3ad44:	str	r3, [sp, #76]	; 0x4c
   3ad48:	bl	37d54 <luaL_typerror@@Base+0x19e8>
   3ad4c:	sub	r1, r8, #4
   3ad50:	mov	r0, r7
   3ad54:	add	r2, sp, #68	; 0x44
   3ad58:	bl	25eac <luaL_where@@Base+0x5da8>
   3ad5c:	ldr	ip, [sp, #460]	; 0x1cc
   3ad60:	mov	r3, #1
   3ad64:	add	ip, ip, #261120	; 0x3fc00
   3ad68:	mvn	r4, #0
   3ad6c:	ldrb	r1, [ip, #1006]	; 0x3ee
   3ad70:	ldrh	r2, [r5, #2]
   3ad74:	ldr	lr, [sp, #468]	; 0x1d4
   3ad78:	strb	r4, [ip, #1006]	; 0x3ee
   3ad7c:	lsl	r3, r3, r1
   3ad80:	ldr	ip, [sp, #472]	; 0x1d8
   3ad84:	orr	lr, lr, r3
   3ad88:	mov	r0, r7
   3ad8c:	orr	r3, ip, r3
   3ad90:	str	lr, [sp, #468]	; 0x1d4
   3ad94:	str	r3, [sp, #472]	; 0x1d8
   3ad98:	bl	24c6c <luaL_where@@Base+0x4b68>
   3ad9c:	ldr	r1, [sp, #504]	; 0x1f8
   3ada0:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3ada4:	mov	r1, r5
   3ada8:	mov	r2, #35	; 0x23
   3adac:	add	r0, sp, #324	; 0x144
   3adb0:	bl	38584 <luaL_typerror@@Base+0x2218>
   3adb4:	ldr	r1, [sp, #504]	; 0x1f8
   3adb8:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3adbc:	mov	r1, r5
   3adc0:	mov	r2, #54	; 0x36
   3adc4:	add	r0, sp, #324	; 0x144
   3adc8:	bl	38584 <luaL_typerror@@Base+0x2218>
   3adcc:	ldr	r1, [sp, #504]	; 0x1f8
   3add0:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3add4:	ldrb	r3, [r5, #4]
   3add8:	mov	r1, r5
   3addc:	and	r3, r3, #31
   3ade0:	cmp	r3, #14
   3ade4:	beq	3c1e0 <luaL_typerror@@Base+0x5e74>
   3ade8:	ldr	r2, [pc, #-2424]	; 3a478 <luaL_typerror@@Base+0x410c>
   3adec:	add	r0, sp, #324	; 0x144
   3adf0:	bl	22de4 <luaL_where@@Base+0x2ce0>
   3adf4:	ldr	r1, [sp, #504]	; 0x1f8
   3adf8:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3adfc:	mov	r1, r5
   3ae00:	ldr	r2, [pc, #-2444]	; 3a47c <luaL_typerror@@Base+0x4110>
   3ae04:	add	r0, sp, #324	; 0x144
   3ae08:	bl	23068 <luaL_where@@Base+0x2f64>
   3ae0c:	ldr	r1, [sp, #504]	; 0x1f8
   3ae10:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3ae14:	mov	r1, r5
   3ae18:	mov	r2, #56	; 0x38
   3ae1c:	add	r0, sp, #324	; 0x144
   3ae20:	bl	38584 <luaL_typerror@@Base+0x2218>
   3ae24:	ldr	r1, [sp, #504]	; 0x1f8
   3ae28:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3ae2c:	mov	r1, r5
   3ae30:	mov	r2, #57	; 0x39
   3ae34:	add	r0, sp, #324	; 0x144
   3ae38:	bl	38584 <luaL_typerror@@Base+0x2218>
   3ae3c:	ldr	r1, [sp, #504]	; 0x1f8
   3ae40:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3ae44:	mov	r1, r5
   3ae48:	mov	r3, #8
   3ae4c:	mov	r2, #12
   3ae50:	add	r0, sp, #324	; 0x144
   3ae54:	bl	230c8 <luaL_where@@Base+0x2fc4>
   3ae58:	ldr	r1, [sp, #504]	; 0x1f8
   3ae5c:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3ae60:	mov	r1, r5
   3ae64:	mov	r3, #3
   3ae68:	mov	r2, #11
   3ae6c:	add	r0, sp, #324	; 0x144
   3ae70:	bl	230c8 <luaL_where@@Base+0x2fc4>
   3ae74:	ldr	r1, [sp, #504]	; 0x1f8
   3ae78:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3ae7c:	mov	r1, r5
   3ae80:	mov	r2, #1
   3ae84:	add	r0, sp, #324	; 0x144
   3ae88:	bl	22f24 <luaL_where@@Base+0x2e20>
   3ae8c:	ldr	r1, [sp, #504]	; 0x1f8
   3ae90:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3ae94:	mov	r1, r5
   3ae98:	mov	r2, #2
   3ae9c:	add	r0, sp, #324	; 0x144
   3aea0:	bl	22f24 <luaL_where@@Base+0x2e20>
   3aea4:	ldr	r1, [sp, #504]	; 0x1f8
   3aea8:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3aeac:	mov	r2, r5
   3aeb0:	add	r1, sp, #464	; 0x1d0
   3aeb4:	ldr	r0, [sp, #460]	; 0x1cc
   3aeb8:	bl	1cc40 <_start@@Base+0x9890>
   3aebc:	add	r7, sp, #324	; 0x144
   3aec0:	add	r3, sp, #68	; 0x44
   3aec4:	mov	r1, r5
   3aec8:	mov	ip, r0
   3aecc:	mov	r2, r0
   3aed0:	add	r0, sp, #460	; 0x1cc
   3aed4:	str	ip, [sp, #64]	; 0x40
   3aed8:	bl	1cbb0 <_start@@Base+0x9800>
   3aedc:	add	r2, sp, #64	; 0x40
   3aee0:	mov	r0, r7
   3aee4:	mov	r1, r5
   3aee8:	bl	37d54 <luaL_typerror@@Base+0x19e8>
   3aeec:	ldrh	r1, [r5, #2]
   3aef0:	ldr	r2, [sp, #460]	; 0x1cc
   3aef4:	lsl	r0, r1, #3
   3aef8:	add	r3, r2, r0
   3aefc:	ldrb	ip, [r3, #5]
   3af00:	cmp	ip, #99	; 0x63
   3af04:	ldrheq	r1, [r2, r0]
   3af08:	addeq	r3, r2, r1, lsl #3
   3af0c:	cmp	r1, #32768	; 0x8000
   3af10:	bcs	3c108 <luaL_typerror@@Base+0x5d9c>
   3af14:	ldr	r3, [r3]
   3af18:	str	r3, [sp, #60]	; 0x3c
   3af1c:	add	r2, sp, #68	; 0x44
   3af20:	add	r1, sp, #60	; 0x3c
   3af24:	mov	r0, r7
   3af28:	bl	25eac <luaL_where@@Base+0x5da8>
   3af2c:	b	39d90 <luaL_typerror@@Base+0x3a24>
   3af30:	mov	r1, r5
   3af34:	mov	r2, #3
   3af38:	add	r0, sp, #324	; 0x144
   3af3c:	bl	22f24 <luaL_where@@Base+0x2e20>
   3af40:	ldr	r1, [sp, #504]	; 0x1f8
   3af44:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3af48:	ldr	r2, [pc, #-2744]	; 3a498 <luaL_typerror@@Base+0x412c>
   3af4c:	ldr	r3, [sp, #544]	; 0x220
   3af50:	str	r2, [sp, #68]	; 0x44
   3af54:	ldrh	r2, [r5, #2]
   3af58:	add	r3, r3, #1
   3af5c:	str	r3, [sp, #544]	; 0x220
   3af60:	cmp	r2, #1
   3af64:	beq	3c0f8 <luaL_typerror@@Base+0x5d8c>
   3af68:	ldr	r8, [pc, #-2800]	; 3a480 <luaL_typerror@@Base+0x4114>
   3af6c:	ldrh	r3, [r6, r4]
   3af70:	sub	r1, r8, #16
   3af74:	cmp	r2, #0
   3af78:	moveq	r8, r1
   3af7c:	str	r3, [sp, #72]	; 0x48
   3af80:	add	r7, sp, #324	; 0x144
   3af84:	mov	r0, r7
   3af88:	add	r2, r8, #4
   3af8c:	mov	r1, r5
   3af90:	bl	37d54 <luaL_typerror@@Base+0x19e8>
   3af94:	mov	r1, r8
   3af98:	mov	r0, r7
   3af9c:	add	r2, sp, #68	; 0x44
   3afa0:	bl	25eac <luaL_where@@Base+0x5da8>
   3afa4:	ldrh	r3, [r5, #2]
   3afa8:	cmp	r3, #1
   3afac:	bne	39d90 <luaL_typerror@@Base+0x3a24>
   3afb0:	ldr	ip, [sp, #460]	; 0x1cc
   3afb4:	mvn	r5, #0
   3afb8:	add	ip, ip, #261120	; 0x3fc00
   3afbc:	ldrh	r2, [r6, r4]
   3afc0:	ldrb	r1, [ip, #1006]	; 0x3ee
   3afc4:	ldr	lr, [sp, #468]	; 0x1d4
   3afc8:	strb	r5, [ip, #1006]	; 0x3ee
   3afcc:	ldr	ip, [sp, #472]	; 0x1d8
   3afd0:	lsl	r3, r3, r1
   3afd4:	mov	r0, r7
   3afd8:	orr	lr, lr, r3
   3afdc:	orr	r3, ip, r3
   3afe0:	str	lr, [sp, #468]	; 0x1d4
   3afe4:	str	r3, [sp, #472]	; 0x1d8
   3afe8:	bl	24c6c <luaL_where@@Base+0x4b68>
   3afec:	b	39d90 <luaL_typerror@@Base+0x3a24>
   3aff0:	mov	r1, r5
   3aff4:	ldr	r2, [pc, #-2936]	; 3a484 <luaL_typerror@@Base+0x4118>
   3aff8:	add	r0, sp, #324	; 0x144
   3affc:	bl	23000 <luaL_where@@Base+0x2efc>
   3b000:	ldr	r1, [sp, #504]	; 0x1f8
   3b004:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b008:	mov	r1, r5
   3b00c:	add	r0, sp, #324	; 0x144
   3b010:	bl	385cc <luaL_typerror@@Base+0x2260>
   3b014:	ldr	r1, [sp, #504]	; 0x1f8
   3b018:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b01c:	mov	r1, r5
   3b020:	add	r0, sp, #324	; 0x144
   3b024:	bl	21e64 <luaL_where@@Base+0x1d60>
   3b028:	ldr	r1, [sp, #504]	; 0x1f8
   3b02c:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b030:	ldrb	r3, [r5, #6]
   3b034:	cmp	r3, #254	; 0xfe
   3b038:	beq	39d90 <luaL_typerror@@Base+0x3a24>
   3b03c:	ldr	r9, [pc, #-2972]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3b040:	add	r7, sp, #324	; 0x144
   3b044:	mov	r2, r9
   3b048:	ldrh	r1, [r5, #2]
   3b04c:	mov	r0, r7
   3b050:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3b054:	ldrh	r4, [r6, r4]
   3b058:	ldr	r3, [sp, #460]	; 0x1cc
   3b05c:	mov	r2, #1
   3b060:	lsl	r4, r4, #3
   3b064:	ldrh	r1, [r3, r4]
   3b068:	add	r4, r3, r4
   3b06c:	mov	r8, r0
   3b070:	mov	r0, r7
   3b074:	bic	r2, r9, r2, lsl r8
   3b078:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3b07c:	ldrb	r2, [r5, #4]
   3b080:	ldrh	r1, [r4, #2]
   3b084:	and	r2, r2, #31
   3b088:	sub	r2, r2, #13
   3b08c:	uxtb	r2, r2
   3b090:	cmp	r2, #5
   3b094:	mov	r3, r0
   3b098:	ldr	r0, [pc, #-3096]	; 3a488 <luaL_typerror@@Base+0x411c>
   3b09c:	add	r1, r0, r1
   3b0a0:	ldrb	r0, [r1, #-88]	; 0xffffffa8
   3b0a4:	bhi	3c270 <luaL_typerror@@Base+0x5f04>
   3b0a8:	ldr	r1, [pc, #-3108]	; 3a48c <luaL_typerror@@Base+0x4120>
   3b0ac:	add	r2, r1, r2, lsl #2
   3b0b0:	ldr	r1, [r2, #1464]	; 0x5b8
   3b0b4:	tst	r1, #67108864	; 0x4000000
   3b0b8:	bne	3c274 <luaL_typerror@@Base+0x5f08>
   3b0bc:	orr	ip, r1, #29360128	; 0x1c00000
   3b0c0:	and	r2, r0, #15
   3b0c4:	lsl	r1, r0, #4
   3b0c8:	and	r1, r1, #3840	; 0xf00
   3b0cc:	orr	r2, r2, ip
   3b0d0:	orr	r2, r2, r1
   3b0d4:	ldr	r1, [sp, #452]	; 0x1c4
   3b0d8:	orr	r2, r2, r8, lsl #12
   3b0dc:	orr	r3, r2, r3, lsl #16
   3b0e0:	sub	r2, r1, #4
   3b0e4:	str	r2, [sp, #452]	; 0x1c4
   3b0e8:	str	r3, [r1, #-4]
   3b0ec:	ldr	r1, [sp, #504]	; 0x1f8
   3b0f0:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b0f4:	ldrb	r3, [r5, #6]
   3b0f8:	cmp	r3, #254	; 0xfe
   3b0fc:	beq	39d90 <luaL_typerror@@Base+0x3a24>
   3b100:	mov	r1, r5
   3b104:	mov	r2, #0
   3b108:	add	r0, sp, #324	; 0x144
   3b10c:	bl	2256c <luaL_where@@Base+0x2468>
   3b110:	ldr	r1, [sp, #504]	; 0x1f8
   3b114:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b118:	ldr	r2, [pc, #-3208]	; 3a498 <luaL_typerror@@Base+0x412c>
   3b11c:	ldr	r3, [sp, #544]	; 0x220
   3b120:	str	r2, [sp, #68]	; 0x44
   3b124:	ldrh	r2, [r6, r4]
   3b128:	ldr	r4, [pc, #-3232]	; 3a490 <luaL_typerror@@Base+0x4124>
   3b12c:	add	r7, sp, #324	; 0x144
   3b130:	str	r2, [sp, #72]	; 0x48
   3b134:	ldrh	r0, [r5, #2]
   3b138:	mov	r1, r5
   3b13c:	add	r3, r3, #1
   3b140:	mov	r2, r4
   3b144:	str	r0, [sp, #76]	; 0x4c
   3b148:	mov	r0, r7
   3b14c:	str	r3, [sp, #544]	; 0x220
   3b150:	bl	37d54 <luaL_typerror@@Base+0x19e8>
   3b154:	sub	r1, r4, #4
   3b158:	mov	r0, r7
   3b15c:	add	r2, sp, #68	; 0x44
   3b160:	bl	25eac <luaL_where@@Base+0x5da8>
   3b164:	ldr	r1, [sp, #504]	; 0x1f8
   3b168:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b16c:	ldr	r3, [sp, #544]	; 0x220
   3b170:	ldr	r8, [pc, #-3300]	; 3a494 <luaL_typerror@@Base+0x4128>
   3b174:	ldr	r1, [pc, #-3300]	; 3a498 <luaL_typerror@@Base+0x412c>
   3b178:	ldr	ip, [pc, #-3260]	; 3a4c4 <luaL_typerror@@Base+0x4158>
   3b17c:	add	r7, sp, #324	; 0x144
   3b180:	add	r3, r3, #1
   3b184:	mov	r2, r8
   3b188:	mov	r0, r7
   3b18c:	str	r1, [sp, #68]	; 0x44
   3b190:	mov	r1, r5
   3b194:	str	r3, [sp, #544]	; 0x220
   3b198:	str	ip, [sp, #72]	; 0x48
   3b19c:	bl	37d54 <luaL_typerror@@Base+0x19e8>
   3b1a0:	sub	r1, r8, #4
   3b1a4:	mov	r0, r7
   3b1a8:	add	r2, sp, #68	; 0x44
   3b1ac:	bl	25eac <luaL_where@@Base+0x5da8>
   3b1b0:	ldr	lr, [sp, #460]	; 0x1cc
   3b1b4:	ldrh	r8, [r5, #2]
   3b1b8:	add	lr, lr, #261120	; 0x3fc00
   3b1bc:	mov	r3, #1
   3b1c0:	ldrb	r2, [lr, #1006]	; 0x3ee
   3b1c4:	ldrh	r1, [r6, r4]
   3b1c8:	ldr	ip, [sp, #468]	; 0x1d4
   3b1cc:	ldr	r4, [sp, #472]	; 0x1d8
   3b1d0:	lsl	r3, r3, r2
   3b1d4:	mvn	r5, #0
   3b1d8:	orr	ip, ip, r3
   3b1dc:	orr	r1, r1, r8, lsl #24
   3b1e0:	orr	r3, r4, r3
   3b1e4:	mov	r0, r7
   3b1e8:	strb	r5, [lr, #1006]	; 0x3ee
   3b1ec:	str	ip, [sp, #468]	; 0x1d4
   3b1f0:	str	r3, [sp, #472]	; 0x1d8
   3b1f4:	bl	22b78 <luaL_where@@Base+0x2a74>
   3b1f8:	ldr	r1, [sp, #504]	; 0x1f8
   3b1fc:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b200:	ldr	r2, [pc, #-3440]	; 3a498 <luaL_typerror@@Base+0x412c>
   3b204:	ldr	r3, [sp, #544]	; 0x220
   3b208:	str	r2, [sp, #68]	; 0x44
   3b20c:	ldrh	r0, [r6, r4]
   3b210:	ldr	r8, [pc, #-3452]	; 3a49c <luaL_typerror@@Base+0x4130>
   3b214:	add	r7, sp, #324	; 0x144
   3b218:	add	r3, r3, #1
   3b21c:	mov	r1, r5
   3b220:	mov	r2, r8
   3b224:	str	r0, [sp, #72]	; 0x48
   3b228:	mov	r0, r7
   3b22c:	str	r3, [sp, #544]	; 0x220
   3b230:	bl	37d54 <luaL_typerror@@Base+0x19e8>
   3b234:	sub	r1, r8, #4
   3b238:	mov	r0, r7
   3b23c:	add	r2, sp, #68	; 0x44
   3b240:	bl	25eac <luaL_where@@Base+0x5da8>
   3b244:	ldr	r1, [sp, #504]	; 0x1f8
   3b248:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b24c:	mov	r1, r5
   3b250:	add	r0, sp, #324	; 0x144
   3b254:	bl	37a58 <luaL_typerror@@Base+0x16ec>
   3b258:	ldr	r1, [sp, #504]	; 0x1f8
   3b25c:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b260:	ldr	r9, [pc, #-3520]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3b264:	add	r7, sp, #324	; 0x144
   3b268:	mov	r2, r9
   3b26c:	mov	r0, r7
   3b270:	mov	r1, r5
   3b274:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   3b278:	ldrh	r3, [r5, #2]
   3b27c:	ands	r3, r3, #1
   3b280:	mov	r8, r0
   3b284:	beq	3c184 <luaL_typerror@@Base+0x5e18>
   3b288:	ldrh	r2, [r6, r4]
   3b28c:	ldr	r0, [sp, #460]	; 0x1cc
   3b290:	add	r4, r0, r2, lsl #3
   3b294:	ldrsb	r3, [r4, #6]
   3b298:	cmp	r3, #0
   3b29c:	blt	3bffc <luaL_typerror@@Base+0x5c90>
   3b2a0:	mov	r1, r8
   3b2a4:	mov	r0, r7
   3b2a8:	bl	25de8 <luaL_where@@Base+0x5ce4>
   3b2ac:	ldr	r1, [sp, #504]	; 0x1f8
   3b2b0:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b2b4:	ldrh	r3, [r6, r4]
   3b2b8:	ldr	r8, [sp, #460]	; 0x1cc
   3b2bc:	str	r3, [sp, #68]	; 0x44
   3b2c0:	ldrh	r2, [r5, #2]
   3b2c4:	str	r2, [sp, #72]	; 0x48
   3b2c8:	lsl	r9, r2, #3
   3b2cc:	add	r3, r8, r9
   3b2d0:	ldrb	r1, [r3, #5]
   3b2d4:	cmp	r1, #24
   3b2d8:	beq	3c140 <luaL_typerror@@Base+0x5dd4>
   3b2dc:	ldr	r0, [sp, #528]	; 0x210
   3b2e0:	cmp	r2, r0
   3b2e4:	bls	3b9c0 <luaL_typerror@@Base+0x5654>
   3b2e8:	ldrsb	r2, [r3, #6]
   3b2ec:	cmp	r2, #0
   3b2f0:	bge	3b9c0 <luaL_typerror@@Base+0x5654>
   3b2f4:	cmp	r1, #92	; 0x5c
   3b2f8:	beq	3c4a0 <luaL_typerror@@Base+0x6134>
   3b2fc:	cmp	r1, #78	; 0x4e
   3b300:	beq	3c484 <luaL_typerror@@Base+0x6118>
   3b304:	ldr	r4, [pc, #-3692]	; 3a4a0 <luaL_typerror@@Base+0x4134>
   3b308:	mvn	r6, #0
   3b30c:	b	3b9c8 <luaL_typerror@@Base+0x565c>
   3b310:	ldrh	r0, [r6, r4]
   3b314:	ldr	r3, [sp, #544]	; 0x220
   3b318:	ldr	r4, [pc, #-3708]	; 3a4a4 <luaL_typerror@@Base+0x4138>
   3b31c:	add	r7, sp, #324	; 0x144
   3b320:	mov	r1, r5
   3b324:	add	r3, r3, #1
   3b328:	mov	r2, r4
   3b32c:	str	r0, [sp, #68]	; 0x44
   3b330:	b	3b148 <luaL_typerror@@Base+0x4ddc>
   3b334:	ldr	r8, [pc, #-3732]	; 3a4a8 <luaL_typerror@@Base+0x413c>
   3b338:	add	r7, sp, #324	; 0x144
   3b33c:	ldrh	r1, [r6, r4]
   3b340:	mov	r2, r8
   3b344:	mov	r0, r7
   3b348:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3b34c:	mov	r9, #1
   3b350:	mov	r4, r0
   3b354:	mov	r0, r7
   3b358:	lsl	r6, r9, r4
   3b35c:	bic	r1, r8, r6
   3b360:	bl	22b38 <luaL_where@@Base+0x2a34>
   3b364:	ldr	r1, [sp, #464]	; 0x1d0
   3b368:	sub	r1, r1, #384	; 0x180
   3b36c:	orr	r2, r6, r9, lsl r0
   3b370:	mov	r5, r0
   3b374:	bic	r2, r8, r2
   3b378:	mov	r0, r7
   3b37c:	bl	215b8 <luaL_where@@Base+0x14b4>
   3b380:	ldr	ip, [sp, #452]	; 0x1c4
   3b384:	mov	r1, #12
   3b388:	mov	r3, r4
   3b38c:	mov	r2, r5
   3b390:	str	r1, [sp]
   3b394:	mov	r6, #4
   3b398:	mov	r1, #-469762048	; 0xe4000000
   3b39c:	str	ip, [sp, #12]
   3b3a0:	mov	r8, #48	; 0x30
   3b3a4:	mov	r9, r0
   3b3a8:	mov	r0, r7
   3b3ac:	bl	16dbc <_start@@Base+0x3a0c>
   3b3b0:	mov	r3, r4
   3b3b4:	mov	r0, r7
   3b3b8:	mov	r2, #14
   3b3bc:	ldr	r1, [pc, #-3864]	; 3a4ac <luaL_typerror@@Base+0x4140>
   3b3c0:	str	r6, [sp]
   3b3c4:	bl	16dbc <_start@@Base+0x3a0c>
   3b3c8:	mov	r3, r9
   3b3cc:	mov	r2, r4
   3b3d0:	mov	r0, r7
   3b3d4:	mov	r1, #-469762048	; 0xe4000000
   3b3d8:	str	r8, [sp]
   3b3dc:	bl	16dbc <_start@@Base+0x3a0c>
   3b3e0:	ldr	r1, [sp, #452]	; 0x1c4
   3b3e4:	ldr	ip, [pc, #-3900]	; 3a4b0 <luaL_typerror@@Base+0x4144>
   3b3e8:	sub	r0, r1, #4
   3b3ec:	str	r0, [sp, #452]	; 0x1c4
   3b3f0:	mov	r3, r9
   3b3f4:	str	ip, [r1, #-4]
   3b3f8:	mov	r2, r5
   3b3fc:	mov	r0, r7
   3b400:	ldr	r1, [pc, #-3924]	; 3a4b4 <luaL_typerror@@Base+0x4148>
   3b404:	str	r8, [sp]
   3b408:	bl	16dbc <_start@@Base+0x3a0c>
   3b40c:	ldr	ip, [sp, #452]	; 0x1c4
   3b410:	ldr	r3, [sp, #12]
   3b414:	ldr	lr, [pc, #-3940]	; 3a4b8 <luaL_typerror@@Base+0x414c>
   3b418:	sub	r2, r3, ip
   3b41c:	sub	r1, ip, #8
   3b420:	asr	r2, r2, #2
   3b424:	sub	r2, r2, #1
   3b428:	bic	r2, r2, #-16777216	; 0xff000000
   3b42c:	orr	r2, r2, #167772160	; 0xa000000
   3b430:	str	r2, [ip, #-4]
   3b434:	mov	r3, r4
   3b438:	str	r1, [sp, #452]	; 0x1c4
   3b43c:	mov	r0, r7
   3b440:	ldr	r1, [pc, #-3980]	; 3a4bc <luaL_typerror@@Base+0x4150>
   3b444:	str	lr, [ip, #-8]
   3b448:	mov	r2, #14
   3b44c:	str	r6, [sp]
   3b450:	bl	16dbc <_start@@Base+0x3a0c>
   3b454:	ldr	r1, [sp, #504]	; 0x1f8
   3b458:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b45c:	add	r7, sp, #324	; 0x144
   3b460:	mov	r0, r7
   3b464:	ldr	r1, [pc, #-4012]	; 3a4c0 <luaL_typerror@@Base+0x4154>
   3b468:	bl	3798c <luaL_typerror@@Base+0x1620>
   3b46c:	ldr	r3, [pc, #-4016]	; 3a4c4 <luaL_typerror@@Base+0x4158>
   3b470:	add	r2, sp, #1200	; 0x4b0
   3b474:	str	r3, [sp, #68]	; 0x44
   3b478:	ldrh	r3, [r6, r4]
   3b47c:	ldr	r8, [sp, #452]	; 0x1c4
   3b480:	add	r2, r2, #8
   3b484:	mov	r0, r7
   3b488:	str	r3, [r2, #-1136]!	; 0xfffffb90
   3b48c:	ldr	r1, [pc, #-4044]	; 3a4c8 <luaL_typerror@@Base+0x415c>
   3b490:	sub	r2, r2, #4
   3b494:	bl	25eac <luaL_where@@Base+0x5da8>
   3b498:	ldr	r3, [r8, #-4]
   3b49c:	lsr	r2, r3, #28
   3b4a0:	cmp	r2, #14
   3b4a4:	eoreq	r3, r3, #-536870912	; 0xe0000000
   3b4a8:	orreq	r3, r3, #268435456	; 0x10000000
   3b4ac:	streq	r3, [r8, #-4]
   3b4b0:	beq	3b4d4 <luaL_typerror@@Base+0x5168>
   3b4b4:	ldr	r2, [sp, #452]	; 0x1c4
   3b4b8:	sub	r3, r8, r2
   3b4bc:	asr	r3, r3, #2
   3b4c0:	sub	r3, r3, #1
   3b4c4:	bic	r3, r3, #-16777216	; 0xff000000
   3b4c8:	orr	r3, r3, #167772160	; 0xa000000
   3b4cc:	str	r3, [r2, #-4]!
   3b4d0:	str	r2, [sp, #452]	; 0x1c4
   3b4d4:	ldr	r3, [sp, #460]	; 0x1cc
   3b4d8:	mov	r8, #1
   3b4dc:	add	r3, r3, #261120	; 0x3fc00
   3b4e0:	ldr	r0, [sp, #468]	; 0x1d4
   3b4e4:	ldrb	r2, [r3, #1006]	; 0x3ee
   3b4e8:	mvn	r1, #0
   3b4ec:	strb	r1, [r3, #1006]	; 0x3ee
   3b4f0:	ldr	r3, [sp, #472]	; 0x1d8
   3b4f4:	lsl	ip, r8, r2
   3b4f8:	ldr	r1, [sp, #464]	; 0x1d0
   3b4fc:	orr	r0, r0, ip
   3b500:	orr	r3, r3, ip
   3b504:	sub	r1, r1, #384	; 0x180
   3b508:	str	r0, [sp, #468]	; 0x1d4
   3b50c:	mov	r0, r7
   3b510:	str	r3, [sp, #472]	; 0x1d8
   3b514:	bl	22b78 <luaL_where@@Base+0x2a74>
   3b518:	ldrh	r1, [r6, r4]
   3b51c:	ldr	r3, [sp, #460]	; 0x1cc
   3b520:	ldr	r2, [pc, #4032]	; 3c4e8 <luaL_typerror@@Base+0x617c>
   3b524:	mov	r0, r7
   3b528:	add	r3, r3, r1, lsl #3
   3b52c:	ldrb	r6, [r3, #6]
   3b530:	bic	r8, r2, r8, lsl r6
   3b534:	mov	r1, r8
   3b538:	bl	22b38 <luaL_where@@Base+0x2a34>
   3b53c:	ldr	r1, [sp, #452]	; 0x1c4
   3b540:	ldr	r3, [pc, #4004]	; 3c4ec <luaL_typerror@@Base+0x6180>
   3b544:	sub	ip, r1, #8
   3b548:	mov	r2, r8
   3b54c:	mov	r4, r0
   3b550:	ldr	r0, [pc, #3992]	; 3c4f0 <luaL_typerror@@Base+0x6184>
   3b554:	orr	r0, r0, r4, lsl #16
   3b558:	str	r0, [r1, #-4]
   3b55c:	str	ip, [sp, #452]	; 0x1c4
   3b560:	mov	r0, r7
   3b564:	str	r3, [r1, #-8]
   3b568:	ldrh	r1, [r5, #2]
   3b56c:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3b570:	mvn	r1, #3
   3b574:	mov	r3, r6
   3b578:	mov	r2, r4
   3b57c:	str	r1, [sp]
   3b580:	ldr	r1, [pc, #3948]	; 3c4f4 <luaL_typerror@@Base+0x6188>
   3b584:	mov	r5, r0
   3b588:	mov	r0, r7
   3b58c:	bl	16dbc <_start@@Base+0x3a0c>
   3b590:	mov	r2, #4
   3b594:	str	r2, [sp]
   3b598:	ldr	r1, [pc, #3924]	; 3c4f4 <luaL_typerror@@Base+0x6188>
   3b59c:	mov	r3, r5
   3b5a0:	mov	r0, r7
   3b5a4:	mov	r2, #14
   3b5a8:	bl	16dbc <_start@@Base+0x3a0c>
   3b5ac:	ldr	r1, [sp, #504]	; 0x1f8
   3b5b0:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b5b4:	mov	r1, r5
   3b5b8:	add	r0, sp, #324	; 0x144
   3b5bc:	bl	261a8 <luaL_where@@Base+0x60a4>
   3b5c0:	ldr	r1, [sp, #504]	; 0x1f8
   3b5c4:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b5c8:	ldr	r8, [pc, #3880]	; 3c4f8 <luaL_typerror@@Base+0x618c>
   3b5cc:	add	r7, sp, #324	; 0x144
   3b5d0:	ldrh	r1, [r6, r4]
   3b5d4:	mov	r2, r8
   3b5d8:	mov	r0, r7
   3b5dc:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3b5e0:	mov	r9, #1
   3b5e4:	ldrh	r1, [r5, #2]
   3b5e8:	mov	r6, r0
   3b5ec:	mov	r0, r7
   3b5f0:	bic	r4, r8, r9, lsl r6
   3b5f4:	mov	r2, r4
   3b5f8:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3b5fc:	mov	r8, r0
   3b600:	mov	r0, r7
   3b604:	bic	r1, r4, r9, lsl r8
   3b608:	bl	22b38 <luaL_where@@Base+0x2a34>
   3b60c:	mov	r1, r5
   3b610:	ldr	r2, [pc, #3792]	; 3c4e8 <luaL_typerror@@Base+0x617c>
   3b614:	ldr	r5, [pc, #3808]	; 3c4fc <luaL_typerror@@Base+0x6190>
   3b618:	and	r8, r8, #15
   3b61c:	orr	r5, r8, r5
   3b620:	mov	r4, r0
   3b624:	mov	r0, r7
   3b628:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   3b62c:	lsl	r3, r4, #12
   3b630:	ldr	ip, [pc, #3784]	; 3c500 <luaL_typerror@@Base+0x6194>
   3b634:	ldr	lr, [sp, #452]	; 0x1c4
   3b638:	lsl	r1, r6, #16
   3b63c:	lsl	r2, r4, #16
   3b640:	uxth	r3, r3
   3b644:	and	r1, r1, #983040	; 0xf0000
   3b648:	and	r2, r2, #983040	; 0xf0000
   3b64c:	orr	r3, r3, r5
   3b650:	orr	r3, r3, r1
   3b654:	sub	r1, lr, #8
   3b658:	orr	r0, ip, r0, lsl #12
   3b65c:	orr	r2, r0, r2
   3b660:	str	r2, [lr, #-4]
   3b664:	str	r1, [sp, #452]	; 0x1c4
   3b668:	str	r3, [lr, #-8]
   3b66c:	ldr	r1, [sp, #504]	; 0x1f8
   3b670:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b674:	ldrb	r0, [r5, #4]
   3b678:	ldrb	r1, [r5, #6]
   3b67c:	ldr	ip, [pc, #3684]	; 3c4e8 <luaL_typerror@@Base+0x617c>
   3b680:	and	r3, r0, #31
   3b684:	sub	r3, r3, #13
   3b688:	cmp	r3, #1
   3b68c:	ldr	r2, [pc, #3684]	; 3c4f8 <luaL_typerror@@Base+0x618c>
   3b690:	movhi	r2, ip
   3b694:	cmp	r1, #254	; 0xfe
   3b698:	beq	39d90 <luaL_typerror@@Base+0x3a24>
   3b69c:	ldrh	r3, [r6, r4]
   3b6a0:	ldr	r8, [sp, #460]	; 0x1cc
   3b6a4:	add	r3, r8, r3, lsl #3
   3b6a8:	str	r3, [sp, #12]
   3b6ac:	ldrb	r3, [r3, #7]
   3b6b0:	cmp	r3, #0
   3b6b4:	bne	3c638 <luaL_typerror@@Base+0x62cc>
   3b6b8:	ldrh	r1, [r5, #2]
   3b6bc:	add	r8, r8, r1, lsl #3
   3b6c0:	ldrb	r3, [r8, #7]
   3b6c4:	cmp	r3, #0
   3b6c8:	bne	3c638 <luaL_typerror@@Base+0x62cc>
   3b6cc:	ldr	ip, [sp, #480]	; 0x1e0
   3b6d0:	ldr	r3, [sp, #468]	; 0x1d4
   3b6d4:	bic	r2, r2, ip
   3b6d8:	and	r3, r3, r2
   3b6dc:	sub	ip, r3, #1
   3b6e0:	tst	ip, r3
   3b6e4:	beq	3bf70 <luaL_typerror@@Base+0x5c04>
   3b6e8:	ldrsb	r3, [r8, #6]
   3b6ec:	add	r7, sp, #324	; 0x144
   3b6f0:	cmp	r3, #0
   3b6f4:	blt	3c3b8 <luaL_typerror@@Base+0x604c>
   3b6f8:	mov	r1, r2
   3b6fc:	mov	r0, r7
   3b700:	bl	22b38 <luaL_where@@Base+0x2a34>
   3b704:	ldrb	r3, [r8, #6]
   3b708:	add	r1, r8, #4
   3b70c:	mov	r9, r0
   3b710:	mov	r2, r0
   3b714:	mov	r0, r7
   3b718:	bl	1ca38 <_start@@Base+0x9688>
   3b71c:	ldr	lr, [sp, #12]
   3b720:	add	r2, r9, #160	; 0xa0
   3b724:	mov	r0, #1
   3b728:	uxtb	r3, r9
   3b72c:	strb	r3, [r5, #6]
   3b730:	ldrh	ip, [r6, r4]
   3b734:	ldrsb	r1, [lr, #6]
   3b738:	lsl	r2, r2, r0
   3b73c:	cmp	r1, #0
   3b740:	strh	ip, [r7, r2]
   3b744:	ldr	r1, [sp, #480]	; 0x1e0
   3b748:	ldrb	r2, [lr, #4]
   3b74c:	orr	r9, r1, r0, lsl r9
   3b750:	orr	r2, r2, #32
   3b754:	str	r9, [sp, #480]	; 0x1e0
   3b758:	strb	r2, [lr, #4]
   3b75c:	bge	39d90 <luaL_typerror@@Base+0x3a24>
   3b760:	mvn	r3, r3, lsl #25
   3b764:	ldr	r2, [sp, #12]
   3b768:	mvn	r3, r3, lsr #25
   3b76c:	ldr	r1, [sp, #504]	; 0x1f8
   3b770:	strb	r3, [r2, #6]
   3b774:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b778:	mov	r1, r5
   3b77c:	add	r0, sp, #324	; 0x144
   3b780:	bl	38100 <luaL_typerror@@Base+0x1d94>
   3b784:	ldr	r1, [sp, #504]	; 0x1f8
   3b788:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b78c:	add	r0, sp, #324	; 0x144
   3b790:	bl	38918 <luaL_typerror@@Base+0x25ac>
   3b794:	ldr	r1, [sp, #504]	; 0x1f8
   3b798:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b79c:	ldrb	r3, [r5, #4]
   3b7a0:	ldr	r0, [pc, #3392]	; 3c4e8 <luaL_typerror@@Base+0x617c>
   3b7a4:	ldr	r2, [pc, #3404]	; 3c4f8 <luaL_typerror@@Base+0x618c>
   3b7a8:	and	r3, r3, #31
   3b7ac:	sub	r3, r3, #13
   3b7b0:	cmp	r3, #1
   3b7b4:	ldrh	r1, [r6, r4]
   3b7b8:	movhi	r2, r0
   3b7bc:	add	r0, sp, #324	; 0x144
   3b7c0:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3b7c4:	ldr	r1, [sp, #504]	; 0x1f8
   3b7c8:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b7cc:	add	r7, sp, #324	; 0x144
   3b7d0:	mov	r0, r7
   3b7d4:	mov	r1, #1
   3b7d8:	bl	17a3c <_start@@Base+0x468c>
   3b7dc:	ldr	r2, [sp, #452]	; 0x1c4
   3b7e0:	ldr	r3, [sp, #464]	; 0x1d0
   3b7e4:	ldr	r1, [pc, #3352]	; 3c504 <luaL_typerror@@Base+0x6198>
   3b7e8:	sub	ip, r2, #4
   3b7ec:	sub	r3, r3, #268	; 0x10c
   3b7f0:	str	ip, [sp, #452]	; 0x1c4
   3b7f4:	sub	r3, r3, #3
   3b7f8:	str	r1, [r2, #-4]
   3b7fc:	ldr	r1, [pc, #3312]	; 3c4f4 <luaL_typerror@@Base+0x6188>
   3b800:	mov	r2, #14
   3b804:	bl	217f8 <luaL_where@@Base+0x16f4>
   3b808:	ldr	r1, [sp, #504]	; 0x1f8
   3b80c:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b810:	mov	r1, r5
   3b814:	ldr	r2, [pc, #3308]	; 3c508 <luaL_typerror@@Base+0x619c>
   3b818:	add	r0, sp, #324	; 0x144
   3b81c:	bl	22e3c <luaL_where@@Base+0x2d38>
   3b820:	ldr	r1, [sp, #504]	; 0x1f8
   3b824:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b828:	ldr	r8, [pc, #3256]	; 3c4e8 <luaL_typerror@@Base+0x617c>
   3b82c:	add	r7, sp, #324	; 0x144
   3b830:	mov	r1, r5
   3b834:	mov	r2, r8
   3b838:	mov	r0, r7
   3b83c:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   3b840:	ldrh	r1, [r6, r4]
   3b844:	mov	r2, r8
   3b848:	mov	r5, r0
   3b84c:	mov	r0, r7
   3b850:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3b854:	ldr	r3, [sp, #484]	; 0x1e4
   3b858:	tst	r3, #112	; 0x70
   3b85c:	mov	r4, r0
   3b860:	bne	3beb4 <luaL_typerror@@Base+0x5b48>
   3b864:	cmp	r5, r0
   3b868:	movne	r0, r5
   3b86c:	beq	3c3a4 <luaL_typerror@@Base+0x6038>
   3b870:	ldr	r1, [pc, #3220]	; 3c50c <luaL_typerror@@Base+0x61a0>
   3b874:	ldr	r3, [sp, #452]	; 0x1c4
   3b878:	orr	r1, r1, r5, lsl #12
   3b87c:	orr	r1, r1, r0, lsl #16
   3b880:	ldr	r2, [pc, #3208]	; 3c510 <luaL_typerror@@Base+0x61a4>
   3b884:	str	r1, [r3, #-4]
   3b888:	ldr	r1, [pc, #3204]	; 3c514 <luaL_typerror@@Base+0x61a8>
   3b88c:	orr	r2, r4, r2
   3b890:	orr	r2, r2, r0, lsl #12
   3b894:	orr	r1, r4, r1
   3b898:	ldr	r0, [pc, #3192]	; 3c518 <luaL_typerror@@Base+0x61ac>
   3b89c:	orr	r4, r1, r4, lsl #16
   3b8a0:	sub	r1, r3, #16
   3b8a4:	str	r2, [r3, #-8]
   3b8a8:	str	r0, [r3, #-12]
   3b8ac:	str	r1, [sp, #452]	; 0x1c4
   3b8b0:	str	r4, [r3, #-16]
   3b8b4:	ldr	r1, [sp, #504]	; 0x1f8
   3b8b8:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b8bc:	mov	r1, r5
   3b8c0:	mov	r2, #-536870912	; 0xe0000000
   3b8c4:	add	r0, sp, #324	; 0x144
   3b8c8:	bl	22e3c <luaL_where@@Base+0x2d38>
   3b8cc:	ldr	r1, [sp, #504]	; 0x1f8
   3b8d0:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b8d4:	mov	r1, r5
   3b8d8:	ldr	r2, [pc, #3132]	; 3c51c <luaL_typerror@@Base+0x61b0>
   3b8dc:	add	r0, sp, #324	; 0x144
   3b8e0:	bl	22e3c <luaL_where@@Base+0x2d38>
   3b8e4:	ldr	r1, [sp, #504]	; 0x1f8
   3b8e8:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b8ec:	mov	r1, r5
   3b8f0:	ldr	r2, [pc, #3112]	; 3c520 <luaL_typerror@@Base+0x61b4>
   3b8f4:	add	r0, sp, #324	; 0x144
   3b8f8:	bl	22e3c <luaL_where@@Base+0x2d38>
   3b8fc:	ldr	r1, [sp, #504]	; 0x1f8
   3b900:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b904:	mov	r1, r5
   3b908:	mov	r2, #0
   3b90c:	add	r0, sp, #324	; 0x144
   3b910:	bl	22f24 <luaL_where@@Base+0x2e20>
   3b914:	ldr	r1, [sp, #504]	; 0x1f8
   3b918:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b91c:	ldr	r1, [sp, #504]	; 0x1f8
   3b920:	ldr	r3, [sp, #460]	; 0x1cc
   3b924:	add	r2, r1, #1
   3b928:	ldr	lr, [sp, #544]	; 0x220
   3b92c:	add	r3, r3, r2, lsl #3
   3b930:	cmp	r5, r3
   3b934:	bls	3bdbc <luaL_typerror@@Base+0x5a50>
   3b938:	mov	r0, lr
   3b93c:	mov	ip, #0
   3b940:	b	3b958 <luaL_typerror@@Base+0x55ec>
   3b944:	add	r0, r0, #1
   3b948:	mov	ip, #1
   3b94c:	add	r3, r3, #8
   3b950:	cmp	r5, r3
   3b954:	bls	3bdb0 <luaL_typerror@@Base+0x5a44>
   3b958:	ldrb	r2, [r3, #5]
   3b95c:	sub	r2, r2, #80	; 0x50
   3b960:	cmp	r2, #3
   3b964:	bhi	3b94c <luaL_typerror@@Base+0x55e0>
   3b968:	ldrsb	r2, [r3, #6]
   3b96c:	cmp	r2, #0
   3b970:	bge	3b944 <luaL_typerror@@Base+0x55d8>
   3b974:	ldrb	r2, [r3, #7]
   3b978:	cmp	r2, #0
   3b97c:	beq	3b94c <luaL_typerror@@Base+0x55e0>
   3b980:	b	3b944 <luaL_typerror@@Base+0x55d8>
   3b984:	mov	r1, r5
   3b988:	mov	r2, #0
   3b98c:	add	r0, sp, #324	; 0x144
   3b990:	bl	24328 <luaL_where@@Base+0x4224>
   3b994:	ldr	r1, [sp, #504]	; 0x1f8
   3b998:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3b99c:	mov	r1, r4
   3b9a0:	mvn	r2, #57344	; 0xe000
   3b9a4:	ldr	r0, [sp, #12]
   3b9a8:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   3b9ac:	mov	r3, #1
   3b9b0:	mvn	r3, r3, lsl r0
   3b9b4:	bic	r3, r3, #57344	; 0xe000
   3b9b8:	str	r3, [sp, #20]
   3b9bc:	b	39ee0 <luaL_typerror@@Base+0x3b74>
   3b9c0:	ldr	r4, [pc, #2908]	; 3c524 <luaL_typerror@@Base+0x61b8>
   3b9c4:	mvn	r6, #0
   3b9c8:	add	r7, sp, #324	; 0x144
   3b9cc:	mov	r1, r5
   3b9d0:	mov	r0, r7
   3b9d4:	add	r2, r4, #4
   3b9d8:	bl	37d54 <luaL_typerror@@Base+0x19e8>
   3b9dc:	add	r2, sp, #68	; 0x44
   3b9e0:	mov	r1, r4
   3b9e4:	mov	r0, r7
   3b9e8:	bl	25eac <luaL_where@@Base+0x5da8>
   3b9ec:	ldr	r3, [pc, #2924]	; 3c560 <luaL_typerror@@Base+0x61f4>
   3b9f0:	ldr	r2, [sp, #72]	; 0x48
   3b9f4:	cmp	r2, r3
   3b9f8:	bne	39d90 <luaL_typerror@@Base+0x3a24>
   3b9fc:	ldr	r2, [sp, #460]	; 0x1cc
   3ba00:	mov	r3, #1
   3ba04:	add	r2, r2, #261120	; 0x3fc00
   3ba08:	mvn	ip, #0
   3ba0c:	ldrb	r1, [r2, #1006]	; 0x3ee
   3ba10:	ldr	r0, [sp, #468]	; 0x1d4
   3ba14:	strb	ip, [r2, #1006]	; 0x3ee
   3ba18:	ldr	r2, [sp, #472]	; 0x1d8
   3ba1c:	lsl	r3, r3, r1
   3ba20:	cmn	r6, #1
   3ba24:	orr	r0, r0, r3
   3ba28:	orr	r3, r2, r3
   3ba2c:	str	r0, [sp, #468]	; 0x1d4
   3ba30:	str	r3, [sp, #472]	; 0x1d8
   3ba34:	beq	3c394 <luaL_typerror@@Base+0x6028>
   3ba38:	mov	r2, r1
   3ba3c:	mov	r0, r7
   3ba40:	mov	r1, r6
   3ba44:	bl	22b78 <luaL_where@@Base+0x2a74>
   3ba48:	b	39d90 <luaL_typerror@@Base+0x3a24>
   3ba4c:	cmp	r2, #0
   3ba50:	blt	3bb2c <luaL_typerror@@Base+0x57c0>
   3ba54:	mov	r3, #1
   3ba58:	orr	fp, fp, r3, lsl r5
   3ba5c:	lsl	r5, r5, r3
   3ba60:	add	r3, sp, #68	; 0x44
   3ba64:	strh	r6, [r3, r5]
   3ba68:	b	39f48 <luaL_typerror@@Base+0x3bdc>
   3ba6c:	lsl	r3, r3, #2
   3ba70:	str	r3, [sp]
   3ba74:	add	r1, r4, #4
   3ba78:	mov	r3, #13
   3ba7c:	ldr	r0, [sp, #12]
   3ba80:	bl	1cb2c <_start@@Base+0x977c>
   3ba84:	ldr	r2, [sp, #452]	; 0x1c4
   3ba88:	ldr	r3, [sp, #456]	; 0x1c8
   3ba8c:	cmp	r2, r3
   3ba90:	bcc	3a188 <luaL_typerror@@Base+0x3e1c>
   3ba94:	ldrb	r2, [r4, #6]
   3ba98:	b	39f24 <luaL_typerror@@Base+0x3bb8>
   3ba9c:	ldr	r2, [pc, #2692]	; 3c528 <luaL_typerror@@Base+0x61bc>
   3baa0:	mov	r0, fp
   3baa4:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3baa8:	mov	r3, #9
   3baac:	mov	r1, #-469762048	; 0xe4000000
   3bab0:	str	r5, [sp]
   3bab4:	mov	r2, r0
   3bab8:	str	r0, [sp, #28]
   3babc:	mov	r0, fp
   3bac0:	bl	16dbc <_start@@Base+0x3a0c>
   3bac4:	ldr	r2, [sp, #28]
   3bac8:	ldr	r3, [sp, #468]	; 0x1d4
   3bacc:	add	r1, r2, #1
   3bad0:	lsr	r3, r3, r1
   3bad4:	tst	r3, #1
   3bad8:	beq	3a388 <luaL_typerror@@Base+0x401c>
   3badc:	mov	r2, #1
   3bae0:	lsl	r2, r2, r1
   3bae4:	b	3a38c <luaL_typerror@@Base+0x4020>
   3bae8:	ldr	r2, [pc, #2568]	; 3c4f8 <luaL_typerror@@Base+0x618c>
   3baec:	mov	r0, fp
   3baf0:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3baf4:	cmp	r5, #0
   3baf8:	ldr	r2, [sp, #452]	; 0x1c4
   3bafc:	ldrlt	r1, [pc, #2600]	; 3c52c <luaL_typerror@@Base+0x61c0>
   3bb00:	ldrge	r1, [pc, #2600]	; 3c530 <luaL_typerror@@Base+0x61c4>
   3bb04:	rsblt	r5, r5, #0
   3bb08:	lsl	r3, r0, #12
   3bb0c:	uxth	r3, r3
   3bb10:	orr	r3, r3, #589824	; 0x90000
   3bb14:	orr	r3, r3, r1
   3bb18:	orr	r5, r3, r5, asr #2
   3bb1c:	sub	r3, r2, #4
   3bb20:	str	r3, [sp, #452]	; 0x1c4
   3bb24:	str	r5, [r2, #-4]
   3bb28:	b	3a330 <luaL_typerror@@Base+0x3fc4>
   3bb2c:	ldrb	r3, [r4, #7]
   3bb30:	cmp	r3, #0
   3bb34:	beq	39f48 <luaL_typerror@@Base+0x3bdc>
   3bb38:	b	3ba54 <luaL_typerror@@Base+0x56e8>
   3bb3c:	ldr	r3, [sp, #552]	; 0x228
   3bb40:	ldr	r2, [sp, #36]	; 0x24
   3bb44:	cmp	r3, #0
   3bb48:	movne	r2, #0
   3bb4c:	cmp	r2, #0
   3bb50:	beq	39a90 <luaL_typerror@@Base+0x3724>
   3bb54:	ldr	r3, [sp, #468]	; 0x1d4
   3bb58:	ldr	r2, [sp, #40]	; 0x28
   3bb5c:	ldr	r1, [sp, #540]	; 0x21c
   3bb60:	lsl	r3, r3, #19
   3bb64:	str	r2, [sp]
   3bb68:	ldr	r0, [sp, #12]
   3bb6c:	lsr	r3, r3, #19
   3bb70:	mov	r2, #0
   3bb74:	bl	21854 <luaL_where@@Base+0x1750>
   3bb78:	b	39a90 <luaL_typerror@@Base+0x3724>
   3bb7c:	mov	r3, #1
   3bb80:	lsr	r8, r8, #24
   3bb84:	str	r3, [sp, #36]	; 0x24
   3bb88:	b	3a220 <luaL_typerror@@Base+0x3eb4>
   3bb8c:	mov	r0, fp
   3bb90:	bl	24d94 <luaL_where@@Base+0x4c90>
   3bb94:	ldr	r3, [sp, #552]	; 0x228
   3bb98:	b	393f8 <luaL_typerror@@Base+0x308c>
   3bb9c:	ldr	r2, [sp, #468]	; 0x1d4
   3bba0:	ldr	r1, [sp, #48]	; 0x30
   3bba4:	orr	r8, r2, r8
   3bba8:	and	r1, r1, r3
   3bbac:	str	r1, [sp, #48]	; 0x30
   3bbb0:	str	r8, [sp, #468]	; 0x1d4
   3bbb4:	b	3a0b4 <luaL_typerror@@Base+0x3d48>
   3bbb8:	str	fp, [sp, #20]
   3bbbc:	ldr	fp, [sp, #48]	; 0x30
   3bbc0:	ldr	r3, [sp, #40]	; 0x28
   3bbc4:	cmp	r3, #0
   3bbc8:	beq	3bbdc <luaL_typerror@@Base+0x5870>
   3bbcc:	rsb	r2, r3, #0
   3bbd0:	mov	r1, #13
   3bbd4:	ldr	r0, [sp, #12]
   3bbd8:	bl	21af0 <luaL_where@@Base+0x19ec>
   3bbdc:	ldr	r3, [sp, #36]	; 0x24
   3bbe0:	ldrb	r3, [r3, #7]
   3bbe4:	cmp	r3, #0
   3bbe8:	bne	3c0a4 <luaL_typerror@@Base+0x5d38>
   3bbec:	ldr	r3, [sp, #16]
   3bbf0:	ldr	r0, [sp, #468]	; 0x1d4
   3bbf4:	cmp	r3, #0
   3bbf8:	beq	3bca0 <luaL_typerror@@Base+0x5934>
   3bbfc:	mvn	r4, r0
   3bc00:	bics	r4, r4, #57344	; 0xe000
   3bc04:	beq	3bca0 <luaL_typerror@@Base+0x5934>
   3bc08:	mov	r5, #1
   3bc0c:	ldr	r9, [sp, #12]
   3bc10:	b	3bc1c <luaL_typerror@@Base+0x58b0>
   3bc14:	cmp	r4, #0
   3bc18:	beq	3bca0 <luaL_typerror@@Base+0x5934>
   3bc1c:	rsb	r2, r4, #0
   3bc20:	and	r2, r2, r4
   3bc24:	add	r3, sp, #1200	; 0x4b0
   3bc28:	clz	r2, r2
   3bc2c:	rsb	r2, r2, #31
   3bc30:	add	r3, r3, #8
   3bc34:	add	r3, r3, r2, lsl #2
   3bc38:	lsl	ip, r5, r2
   3bc3c:	ldr	r1, [r3, #-884]	; 0xfffffc8c
   3bc40:	bic	r4, r4, ip
   3bc44:	uxth	r1, r1
   3bc48:	sub	r3, r1, #32512	; 0x7f00
   3bc4c:	sub	r3, r3, #65	; 0x41
   3bc50:	lsl	r3, r3, #1
   3bc54:	ldrh	r3, [r9, r3]
   3bc58:	lsrs	r3, r3, #8
   3bc5c:	beq	3bc14 <luaL_typerror@@Base+0x58a8>
   3bc60:	ldr	lr, [sp, #460]	; 0x1cc
   3bc64:	lsl	r3, r3, #2
   3bc68:	add	r1, lr, r1, lsl #3
   3bc6c:	orr	ip, ip, r0
   3bc70:	str	r3, [sp]
   3bc74:	add	r1, r1, #4
   3bc78:	mov	r3, #13
   3bc7c:	mov	r0, r9
   3bc80:	str	ip, [sp, #468]	; 0x1d4
   3bc84:	bl	1caa4 <_start@@Base+0x96f4>
   3bc88:	ldr	r2, [sp, #452]	; 0x1c4
   3bc8c:	ldr	r3, [sp, #456]	; 0x1c8
   3bc90:	cmp	r2, r3
   3bc94:	bcc	3a188 <luaL_typerror@@Base+0x3e1c>
   3bc98:	ldr	r0, [sp, #468]	; 0x1d4
   3bc9c:	b	3bc14 <luaL_typerror@@Base+0x58a8>
   3bca0:	ldr	r5, [pc, #2112]	; 3c4e8 <luaL_typerror@@Base+0x617c>
   3bca4:	ldr	r4, [pc, #2124]	; 3c4f8 <luaL_typerror@@Base+0x618c>
   3bca8:	ldr	r6, [sp, #20]
   3bcac:	ldr	r9, [sp, #12]
   3bcb0:	b	3bd54 <luaL_typerror@@Base+0x59e8>
   3bcb4:	cmp	fp, #0
   3bcb8:	beq	3c1f4 <luaL_typerror@@Base+0x5e88>
   3bcbc:	ands	r2, fp, r5
   3bcc0:	beq	3bcfc <luaL_typerror@@Base+0x5990>
   3bcc4:	and	r3, r6, r0
   3bcc8:	and	r3, r3, r5
   3bccc:	bics	r3, r3, fp
   3bcd0:	beq	3c608 <luaL_typerror@@Base+0x629c>
   3bcd4:	rsb	r0, r2, #0
   3bcd8:	rsb	r1, r3, #0
   3bcdc:	and	r2, r2, r0
   3bce0:	and	r3, r3, r1
   3bce4:	mov	r0, r9
   3bce8:	clz	r1, r2
   3bcec:	clz	r2, r3
   3bcf0:	rsb	r1, r1, #31
   3bcf4:	rsb	r2, r2, #31
   3bcf8:	bl	25d28 <luaL_where@@Base+0x5c24>
   3bcfc:	ands	r2, fp, r4
   3bd00:	beq	3bd40 <luaL_typerror@@Base+0x59d4>
   3bd04:	ldr	r3, [sp, #468]	; 0x1d4
   3bd08:	and	r3, r3, r4
   3bd0c:	and	r3, r3, r6
   3bd10:	bics	r3, r3, fp
   3bd14:	beq	3c608 <luaL_typerror@@Base+0x629c>
   3bd18:	rsb	r0, r2, #0
   3bd1c:	rsb	r1, r3, #0
   3bd20:	and	r2, r2, r0
   3bd24:	and	r3, r3, r1
   3bd28:	mov	r0, r9
   3bd2c:	clz	r1, r2
   3bd30:	clz	r2, r3
   3bd34:	rsb	r1, r1, #31
   3bd38:	rsb	r2, r2, #31
   3bd3c:	bl	25d28 <luaL_where@@Base+0x5c24>
   3bd40:	ldr	r2, [sp, #452]	; 0x1c4
   3bd44:	ldr	r3, [sp, #456]	; 0x1c8
   3bd48:	cmp	r2, r3
   3bd4c:	bcc	3a188 <luaL_typerror@@Base+0x3e1c>
   3bd50:	ldr	r0, [sp, #468]	; 0x1d4
   3bd54:	ands	r3, fp, r0
   3bd58:	beq	3bcb4 <luaL_typerror@@Base+0x5948>
   3bd5c:	rsb	r2, r3, #0
   3bd60:	and	r3, r3, r2
   3bd64:	clz	r3, r3
   3bd68:	rsb	r3, r3, #31
   3bd6c:	add	r1, sp, #72	; 0x48
   3bd70:	add	r1, r1, r3, lsl #1
   3bd74:	ldr	r2, [sp, #460]	; 0x1cc
   3bd78:	ldrh	r1, [r1, #-4]
   3bd7c:	mov	ip, #1
   3bd80:	mvn	lr, ip, lsl r3
   3bd84:	add	r2, r2, r1, lsl #3
   3bd88:	add	r1, r2, #4
   3bd8c:	ldrb	r7, [r2, #6]
   3bd90:	and	fp, fp, lr
   3bd94:	and	r6, r6, lr
   3bd98:	mov	r2, r7
   3bd9c:	orr	ip, r0, ip, lsl r7
   3bda0:	mov	r0, r9
   3bda4:	str	ip, [sp, #468]	; 0x1d4
   3bda8:	bl	1ca38 <_start@@Base+0x9688>
   3bdac:	b	3bd40 <luaL_typerror@@Base+0x59d4>
   3bdb0:	cmp	ip, #0
   3bdb4:	movne	lr, r0
   3bdb8:	strne	r0, [sp, #544]	; 0x220
   3bdbc:	cmp	lr, #0
   3bdc0:	beq	3bdd0 <luaL_typerror@@Base+0x5a64>
   3bdc4:	add	r0, sp, #324	; 0x144
   3bdc8:	bl	387b8 <luaL_typerror@@Base+0x244c>
   3bdcc:	ldr	r1, [sp, #504]	; 0x1f8
   3bdd0:	mov	r3, #-2147483648	; 0x80000000
   3bdd4:	str	r3, [sp, #544]	; 0x220
   3bdd8:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3bddc:	ldr	r3, [sp, #28]
   3bde0:	strh	r2, [r1, #62]	; 0x3e
   3bde4:	cmp	r3, #0
   3bde8:	beq	3bbdc <luaL_typerror@@Base+0x5870>
   3bdec:	ldr	r5, [sp, #504]	; 0x1f8
   3bdf0:	cmp	r5, #32768	; 0x8000
   3bdf4:	movhi	r3, #0
   3bdf8:	strhi	r3, [sp, #40]	; 0x28
   3bdfc:	bhi	3a004 <luaL_typerror@@Base+0x3c98>
   3be00:	b	3bbdc <luaL_typerror@@Base+0x5870>
   3be04:	sub	r3, r3, #160	; 0xa0
   3be08:	mov	r2, #9
   3be0c:	mov	r1, #-469762048	; 0xe4000000
   3be10:	ldr	r0, [sp, #12]
   3be14:	bl	217f8 <luaL_where@@Base+0x16f4>
   3be18:	lsls	r2, r8, #3
   3be1c:	beq	3be2c <luaL_typerror@@Base+0x5ac0>
   3be20:	mov	r1, #9
   3be24:	ldr	r0, [sp, #12]
   3be28:	bl	21af0 <luaL_where@@Base+0x19ec>
   3be2c:	ldr	r4, [sp, #548]	; 0x224
   3be30:	ldr	r3, [sp, #464]	; 0x1d0
   3be34:	b	3a26c <luaL_typerror@@Base+0x3f00>
   3be38:	lsr	r2, r3, #8
   3be3c:	lsr	r3, r3, #16
   3be40:	uxtab	r3, r3, r2
   3be44:	sub	r1, r1, r3
   3be48:	mov	r2, #0
   3be4c:	ldr	r0, [sp, #12]
   3be50:	bl	22b78 <luaL_where@@Base+0x2a74>
   3be54:	b	3be18 <luaL_typerror@@Base+0x5aac>
   3be58:	lsr	r2, r3, #8
   3be5c:	lsr	r3, r3, #16
   3be60:	sub	r1, r1, #1
   3be64:	uxtb	r2, r2
   3be68:	sub	r1, r1, r2
   3be6c:	uxtb	r3, r3
   3be70:	sub	r1, r1, r3
   3be74:	b	3be48 <luaL_typerror@@Base+0x5adc>
   3be78:	lsr	r3, r3, #8
   3be7c:	uxtb	r3, r3
   3be80:	sub	r1, r1, r3
   3be84:	b	3be48 <luaL_typerror@@Base+0x5adc>
   3be88:	ldrh	ip, [r6, r4]
   3be8c:	ldr	r3, [sp, #500]	; 0x1f4
   3be90:	sub	r3, r3, #1
   3be94:	cmp	ip, r3
   3be98:	bne	3a934 <luaL_typerror@@Base+0x45c8>
   3be9c:	sub	r1, r5, #8
   3bea0:	add	r0, sp, #324	; 0x144
   3bea4:	str	ip, [sp, #500]	; 0x1f4
   3bea8:	bl	24328 <luaL_where@@Base+0x4224>
   3beac:	ldr	r1, [sp, #504]	; 0x1f8
   3beb0:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3beb4:	ldr	r3, [pc, #1656]	; 3c534 <luaL_typerror@@Base+0x61c8>
   3beb8:	ldr	r2, [sp, #452]	; 0x1c4
   3bebc:	orr	r3, r0, r3
   3bec0:	sub	r1, r2, #4
   3bec4:	orr	r3, r3, r5, lsl #12
   3bec8:	str	r1, [sp, #452]	; 0x1c4
   3becc:	str	r3, [r2, #-4]
   3bed0:	ldr	r1, [sp, #504]	; 0x1f8
   3bed4:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3bed8:	mov	r3, #0
   3bedc:	ldr	r0, [sp, #12]
   3bee0:	str	r3, [sp, #520]	; 0x208
   3bee4:	bl	39168 <luaL_typerror@@Base+0x2dfc>
   3bee8:	b	39e28 <luaL_typerror@@Base+0x3abc>
   3beec:	str	r0, [sp, #12]
   3bef0:	mov	r1, r9
   3bef4:	mov	r0, r7
   3bef8:	bl	22b38 <luaL_where@@Base+0x2a34>
   3befc:	mov	r2, r9
   3bf00:	ldrh	r1, [r6, r4]
   3bf04:	mov	r8, r0
   3bf08:	mov	r0, r7
   3bf0c:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3bf10:	ldrb	r2, [r5, #5]
   3bf14:	ldr	r3, [sp, #12]
   3bf18:	cmp	r2, #62	; 0x3e
   3bf1c:	mov	r4, r0
   3bf20:	beq	3c334 <luaL_typerror@@Base+0x5fc8>
   3bf24:	mov	r1, #16
   3bf28:	mov	r2, r3
   3bf2c:	str	r1, [sp]
   3bf30:	mov	r3, r8
   3bf34:	ldr	r1, [pc, #1532]	; 3c538 <luaL_typerror@@Base+0x61cc>
   3bf38:	mov	r0, r7
   3bf3c:	bl	16dbc <_start@@Base+0x3a0c>
   3bf40:	ldrh	ip, [r5, #2]
   3bf44:	ldr	r1, [pc, #1516]	; 3c538 <luaL_typerror@@Base+0x61cc>
   3bf48:	mov	r3, r4
   3bf4c:	mov	r2, r8
   3bf50:	lsr	ip, ip, #8
   3bf54:	add	ip, ip, #5
   3bf58:	mov	r0, r7
   3bf5c:	lsl	ip, ip, #2
   3bf60:	str	ip, [sp]
   3bf64:	bl	16dbc <_start@@Base+0x3a0c>
   3bf68:	ldr	r1, [sp, #504]	; 0x1f8
   3bf6c:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3bf70:	ldr	r3, [sp, #12]
   3bf74:	ldrsb	r3, [r3, #6]
   3bf78:	cmp	r3, #0
   3bf7c:	bge	3c638 <luaL_typerror@@Base+0x62cc>
   3bf80:	ldrsb	r3, [r8, #6]
   3bf84:	cmp	r3, #0
   3bf88:	bge	3c638 <luaL_typerror@@Base+0x62cc>
   3bf8c:	mov	r1, r0
   3bf90:	add	r2, r5, #7
   3bf94:	add	r0, sp, #324	; 0x144
   3bf98:	bl	211f4 <luaL_where@@Base+0x10f0>
   3bf9c:	ldrb	r3, [r5, #7]
   3bfa0:	ldr	r1, [sp, #504]	; 0x1f8
   3bfa4:	strb	r3, [r8, #7]
   3bfa8:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3bfac:	cmp	r0, #88	; 0x58
   3bfb0:	movls	r1, #0
   3bfb4:	b	3be48 <luaL_typerror@@Base+0x5adc>
   3bfb8:	mov	r1, r5
   3bfbc:	ldr	r2, [pc, #1332]	; 3c4f8 <luaL_typerror@@Base+0x618c>
   3bfc0:	mov	r0, r7
   3bfc4:	bl	22bd8 <luaL_where@@Base+0x2ad4>
   3bfc8:	mov	r1, r8
   3bfcc:	mov	r5, r0
   3bfd0:	mov	r0, r7
   3bfd4:	bl	17a3c <_start@@Base+0x468c>
   3bfd8:	lsl	r2, r5, #12
   3bfdc:	ldr	r3, [sp, #452]	; 0x1c4
   3bfe0:	uxth	r2, r2
   3bfe4:	orr	r2, r2, #-318767104	; 0xed000000
   3bfe8:	orr	r2, r2, #10289152	; 0x9d0000
   3bfec:	orr	r2, r2, #2816	; 0xb00
   3bff0:	str	r2, [r3, #-4]
   3bff4:	sub	r3, r3, #4
   3bff8:	b	39d04 <luaL_typerror@@Base+0x3998>
   3bffc:	sub	r3, r5, #8
   3c000:	cmp	r4, r3
   3c004:	beq	3b2a0 <luaL_typerror@@Base+0x4f34>
   3c008:	sub	r3, r5, #16
   3c00c:	cmp	r4, r3
   3c010:	bne	3c020 <luaL_typerror@@Base+0x5cb4>
   3c014:	b	3c4cc <luaL_typerror@@Base+0x6160>
   3c018:	ldrh	r4, [r4]
   3c01c:	add	r4, r0, r4, lsl #3
   3c020:	ldrb	r3, [r4, #5]
   3c024:	cmp	r3, #84	; 0x54
   3c028:	bne	3c018 <luaL_typerror@@Base+0x5cac>
   3c02c:	ldrh	r3, [r4, #2]
   3c030:	tst	r3, #1
   3c034:	bne	3c018 <luaL_typerror@@Base+0x5cac>
   3c038:	ldrsh	r3, [r4]
   3c03c:	cmp	r3, #0
   3c040:	blt	3b2a0 <luaL_typerror@@Base+0x4f34>
   3c044:	mov	r1, r2
   3c048:	mov	r0, r7
   3c04c:	ldr	r2, [pc, #1172]	; 3c4e8 <luaL_typerror@@Base+0x617c>
   3c050:	bl	21b9c <luaL_where@@Base+0x1a98>
   3c054:	ldr	r3, [sp, #476]	; 0x1dc
   3c058:	mov	r1, #1
   3c05c:	ldrh	r2, [r4]
   3c060:	orr	r3, r3, r1, lsl r0
   3c064:	str	r3, [sp, #476]	; 0x1dc
   3c068:	b	3b2a0 <luaL_typerror@@Base+0x4f34>
   3c06c:	mov	r1, r9
   3c070:	ldr	r2, [pc, #1136]	; 3c4e8 <luaL_typerror@@Base+0x617c>
   3c074:	mov	r0, r7
   3c078:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3c07c:	eor	r6, r6, #-536870912	; 0xe0000000
   3c080:	ldr	r3, [sp, #452]	; 0x1c4
   3c084:	eor	r6, r6, #8388608	; 0x800000
   3c088:	orr	r4, r6, r4
   3c08c:	sub	r2, r3, #4
   3c090:	str	r2, [sp, #452]	; 0x1c4
   3c094:	orr	r4, r4, r0, lsl #16
   3c098:	str	r4, [r3, #-4]
   3c09c:	ldr	r1, [sp, #504]	; 0x1f8
   3c0a0:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3c0a4:	ldr	r2, [sp, #460]	; 0x1cc
   3c0a8:	lsl	r0, r3, #2
   3c0ac:	add	r3, r2, #262144	; 0x40000
   3c0b0:	add	r1, r3, #4
   3c0b4:	ldrb	r2, [r3, #6]
   3c0b8:	str	r0, [sp]
   3c0bc:	mov	r3, #13
   3c0c0:	ldr	r0, [sp, #12]
   3c0c4:	bl	1caa4 <_start@@Base+0x96f4>
   3c0c8:	b	3bbec <luaL_typerror@@Base+0x5880>
   3c0cc:	ldr	r3, [sp, #20]
   3c0d0:	b	3a218 <luaL_typerror@@Base+0x3eac>
   3c0d4:	ldrb	r8, [r5, #7]
   3c0d8:	cmp	r8, #0
   3c0dc:	bne	39cd4 <luaL_typerror@@Base+0x3968>
   3c0e0:	bl	3798c <luaL_typerror@@Base+0x1620>
   3c0e4:	mov	r1, r8
   3c0e8:	mov	r0, r7
   3c0ec:	bl	17a3c <_start@@Base+0x468c>
   3c0f0:	ldr	r3, [sp, #452]	; 0x1c4
   3c0f4:	b	39d04 <luaL_typerror@@Base+0x3998>
   3c0f8:	ldr	r3, [pc, #1120]	; 3c560 <luaL_typerror@@Base+0x61f4>
   3c0fc:	ldr	r8, [pc, #1080]	; 3c53c <luaL_typerror@@Base+0x61d0>
   3c100:	str	r3, [sp, #72]	; 0x48
   3c104:	b	3af80 <luaL_typerror@@Base+0x4c14>
   3c108:	ldr	r2, [pc, #1072]	; 3c540 <luaL_typerror@@Base+0x61d4>
   3c10c:	mov	r0, r7
   3c110:	bl	21cc8 <luaL_where@@Base+0x1bc4>
   3c114:	ldr	r3, [sp, #452]	; 0x1c4
   3c118:	mov	r2, #0
   3c11c:	sub	r1, r3, #4
   3c120:	str	r1, [sp, #452]	; 0x1c4
   3c124:	orr	r0, r0, #-520093696	; 0xe1000000
   3c128:	orr	r0, r0, #3129344	; 0x2fc000
   3c12c:	orr	r0, r0, #16128	; 0x3f00
   3c130:	orr	r0, r0, #48	; 0x30
   3c134:	str	r0, [r3, #-4]
   3c138:	str	r2, [sp, #60]	; 0x3c
   3c13c:	b	3af1c <luaL_typerror@@Base+0x4bb0>
   3c140:	ldr	r3, [r8, r2, lsl #3]
   3c144:	ldr	r2, [r3, #12]
   3c148:	cmp	r2, #1
   3c14c:	bne	3b9c0 <luaL_typerror@@Base+0x5654>
   3c150:	ldr	r2, [pc, #1032]	; 3c560 <luaL_typerror@@Base+0x61f4>
   3c154:	ldrb	r6, [r3, #16]
   3c158:	ldr	r4, [pc, #996]	; 3c544 <luaL_typerror@@Base+0x61d8>
   3c15c:	str	r2, [sp, #72]	; 0x48
   3c160:	b	3b9c8 <luaL_typerror@@Base+0x565c>
   3c164:	ldr	r3, [pc, #892]	; 3c4e8 <luaL_typerror@@Base+0x617c>
   3c168:	str	r8, [sp]
   3c16c:	str	r3, [sp, #4]
   3c170:	mov	r0, r7
   3c174:	mov	r3, #13
   3c178:	ldr	r1, [pc, #988]	; 3c55c <luaL_typerror@@Base+0x61f0>
   3c17c:	bl	21a78 <luaL_where@@Base+0x1974>
   3c180:	b	39d90 <luaL_typerror@@Base+0x3a24>
   3c184:	mov	r1, #1
   3c188:	mov	r0, r7
   3c18c:	bic	r1, r9, r1, lsl r8
   3c190:	str	r3, [sp, #12]
   3c194:	bl	22b38 <luaL_where@@Base+0x2a34>
   3c198:	ldr	r3, [sp, #12]
   3c19c:	add	r5, r5, #4
   3c1a0:	str	r3, [sp]
   3c1a4:	mov	r1, r5
   3c1a8:	mov	r3, r8
   3c1ac:	mov	r2, r0
   3c1b0:	mov	r9, r0
   3c1b4:	mov	r0, r7
   3c1b8:	bl	1cb2c <_start@@Base+0x977c>
   3c1bc:	mov	r3, #8
   3c1c0:	mov	r2, r9
   3c1c4:	str	r3, [sp]
   3c1c8:	mov	r1, r5
   3c1cc:	mov	r3, r8
   3c1d0:	mov	r0, r7
   3c1d4:	bl	1caa4 <_start@@Base+0x96f4>
   3c1d8:	ldrh	r2, [r6, r4]
   3c1dc:	b	3b2a0 <luaL_typerror@@Base+0x4f34>
   3c1e0:	ldr	r2, [pc, #864]	; 3c548 <luaL_typerror@@Base+0x61dc>
   3c1e4:	add	r0, sp, #324	; 0x144
   3c1e8:	bl	23068 <luaL_where@@Base+0x2f64>
   3c1ec:	ldr	r1, [sp, #504]	; 0x1f8
   3c1f0:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3c1f4:	ldr	r3, [sp, #552]	; 0x228
   3c1f8:	ldr	r2, [sp, #548]	; 0x224
   3c1fc:	str	r6, [sp, #20]
   3c200:	ldrb	r3, [r3, #6]
   3c204:	strb	r3, [r2, #6]
   3c208:	ldr	r1, [sp, #540]	; 0x21c
   3c20c:	cmp	r1, r3
   3c210:	bls	3a6c8 <luaL_typerror@@Base+0x435c>
   3c214:	ldrh	r0, [r2, #24]
   3c218:	lsl	r3, r6, #19
   3c21c:	strb	r1, [r2, #6]
   3c220:	lsr	r3, r3, #19
   3c224:	str	r0, [sp]
   3c228:	ldr	r2, [sp, #36]	; 0x24
   3c22c:	ldr	r0, [sp, #12]
   3c230:	bl	21854 <luaL_where@@Base+0x1750>
   3c234:	b	3a6c8 <luaL_typerror@@Base+0x435c>
   3c238:	ldrh	r3, [r5, #2]
   3c23c:	cmp	r3, #6
   3c240:	beq	3c2a4 <luaL_typerror@@Base+0x5f38>
   3c244:	ldr	r2, [pc, #768]	; 3c54c <luaL_typerror@@Base+0x61e0>
   3c248:	ldr	r5, [pc, #744]	; 3c538 <luaL_typerror@@Base+0x61cc>
   3c24c:	add	r3, r2, r3
   3c250:	ldrb	r3, [r3, #-88]	; 0xffffffa8
   3c254:	str	r3, [sp]
   3c258:	mov	r2, r8
   3c25c:	mov	r3, r9
   3c260:	mov	r1, r5
   3c264:	mov	r0, r7
   3c268:	bl	16dbc <_start@@Base+0x3a0c>
   3c26c:	b	39d90 <luaL_typerror@@Base+0x3a24>
   3c270:	mov	r1, #-469762048	; 0xe4000000
   3c274:	str	r0, [sp]
   3c278:	mov	r2, r8
   3c27c:	mov	r0, r7
   3c280:	bl	16dbc <_start@@Base+0x3a0c>
   3c284:	ldr	r1, [sp, #504]	; 0x1f8
   3c288:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3c28c:	lsl	r4, r0, #12
   3c290:	b	3aca8 <luaL_typerror@@Base+0x493c>
   3c294:	mov	fp, #0
   3c298:	str	fp, [sp, #16]
   3c29c:	str	fp, [sp, #28]
   3c2a0:	b	39fb8 <luaL_typerror@@Base+0x3c4c>
   3c2a4:	ldr	r5, [pc, #652]	; 3c538 <luaL_typerror@@Base+0x61cc>
   3c2a8:	ldrh	r1, [r6, r4]
   3c2ac:	mov	r0, r7
   3c2b0:	bl	16ec4 <_start@@Base+0x3b14>
   3c2b4:	cmp	r0, #0
   3c2b8:	moveq	r2, #6
   3c2bc:	beq	3aaf0 <luaL_typerror@@Base+0x4784>
   3c2c0:	lsl	r3, r9, #16
   3c2c4:	orr	r3, r3, r8, lsl #12
   3c2c8:	ldr	r2, [sp, #452]	; 0x1c4
   3c2cc:	orr	r3, r3, #-503316480	; 0xe2000000
   3c2d0:	orr	r3, r3, #8388608	; 0x800000
   3c2d4:	sub	r1, r2, #4
   3c2d8:	orr	r3, r3, r0
   3c2dc:	str	r1, [sp, #452]	; 0x1c4
   3c2e0:	str	r3, [r2, #-4]
   3c2e4:	ldr	r1, [sp, #504]	; 0x1f8
   3c2e8:	b	39d94 <luaL_typerror@@Base+0x3a28>
   3c2ec:	mov	r3, #1
   3c2f0:	ldr	r0, [sp, #468]	; 0x1d4
   3c2f4:	lsl	r3, r3, r2
   3c2f8:	ldr	ip, [sp, #472]	; 0x1d8
   3c2fc:	orr	r0, r0, r3
   3c300:	orr	ip, ip, r3
   3c304:	add	r1, r5, #4
   3c308:	mov	r3, #13
   3c30c:	str	r0, [sp, #468]	; 0x1d4
   3c310:	str	r8, [sp]
   3c314:	mov	r0, r7
   3c318:	str	ip, [sp, #472]	; 0x1d8
   3c31c:	bl	1caa4 <_start@@Base+0x96f4>
   3c320:	mov	r1, #0
   3c324:	mov	r0, r7
   3c328:	bl	17a3c <_start@@Base+0x468c>
   3c32c:	ldr	r3, [sp, #452]	; 0x1c4
   3c330:	b	39d04 <luaL_typerror@@Base+0x3998>
   3c334:	mov	r0, r7
   3c338:	mov	r1, #1
   3c33c:	bl	17a3c <_start@@Base+0x468c>
   3c340:	ldr	r1, [sp, #452]	; 0x1c4
   3c344:	ldr	r3, [sp, #12]
   3c348:	sub	r0, r1, #4
   3c34c:	str	r0, [sp, #452]	; 0x1c4
   3c350:	ldr	ip, [pc, #504]	; 3c550 <luaL_typerror@@Base+0x61e4>
   3c354:	mov	r0, #8
   3c358:	str	ip, [r1, #-4]
   3c35c:	mov	r2, r3
   3c360:	stm	sp, {r0, r9}
   3c364:	mov	r3, r8
   3c368:	mov	r0, r7
   3c36c:	ldr	r1, [pc, #488]	; 3c55c <luaL_typerror@@Base+0x61f0>
   3c370:	bl	21a78 <luaL_where@@Base+0x1974>
   3c374:	mov	r3, #6
   3c378:	str	r3, [sp]
   3c37c:	mov	r2, #14
   3c380:	mov	r3, r8
   3c384:	ldr	r1, [pc, #360]	; 3c4f4 <luaL_typerror@@Base+0x6188>
   3c388:	mov	r0, r7
   3c38c:	bl	16dbc <_start@@Base+0x3a0c>
   3c390:	b	3bf40 <luaL_typerror@@Base+0x5bd4>
   3c394:	ldrh	r2, [r8, r9]
   3c398:	mov	r0, r7
   3c39c:	bl	24c6c <luaL_where@@Base+0x4b68>
   3c3a0:	b	39d90 <luaL_typerror@@Base+0x3a24>
   3c3a4:	mov	r1, #1
   3c3a8:	mov	r0, r7
   3c3ac:	bic	r1, r8, r1, lsl r5
   3c3b0:	bl	22b38 <luaL_where@@Base+0x2a34>
   3c3b4:	b	3b870 <luaL_typerror@@Base+0x5504>
   3c3b8:	mov	r0, r7
   3c3bc:	bl	21b9c <luaL_where@@Base+0x1a98>
   3c3c0:	mov	r9, r0
   3c3c4:	b	3b71c <luaL_typerror@@Base+0x53b0>
   3c3c8:	ldr	r4, [sp, #24]
   3c3cc:	ldr	r2, [sp, #508]	; 0x1fc
   3c3d0:	ldr	r0, [r1, #16]
   3c3d4:	sub	r3, r3, r2
   3c3d8:	ldr	fp, [sp, #32]
   3c3dc:	ldr	ip, [r4, #16]
   3c3e0:	lsl	r1, r2, #3
   3c3e4:	add	r0, r0, r1
   3c3e8:	lsl	r2, r3, #3
   3c3ec:	add	r1, ip, r1
   3c3f0:	bl	12cb8 <memcpy@plt>
   3c3f4:	ldr	r3, [fp, #76]	; 0x4c
   3c3f8:	ldr	r1, [sp, #468]	; 0x1d4
   3c3fc:	mvn	r2, #57344	; 0xe000
   3c400:	ldr	r3, [r3, #8]
   3c404:	cmp	r1, r2
   3c408:	str	r3, [r4, #8]
   3c40c:	bne	3c620 <luaL_typerror@@Base+0x62b4>
   3c410:	ldr	r2, [sp, #24]
   3c414:	ldr	r6, [sp, #452]	; 0x1c4
   3c418:	ldr	r3, [sp, #564]	; 0x234
   3c41c:	str	r6, [r2, #52]	; 0x34
   3c420:	ldr	r2, [sp, #536]	; 0x218
   3c424:	cmp	r3, #0
   3c428:	subne	r3, r3, r6
   3c42c:	cmp	r2, #0
   3c430:	ldr	r2, [sp, #24]
   3c434:	ldr	r4, [sp, #560]	; 0x230
   3c438:	str	r3, [r2, #56]	; 0x38
   3c43c:	mov	r5, r4
   3c440:	beq	3c568 <luaL_typerror@@Base+0x61fc>
   3c444:	ldr	r3, [sp, #24]
   3c448:	sub	r4, r4, r6
   3c44c:	ldr	r1, [sp, #44]	; 0x2c
   3c450:	str	r4, [r3, #48]	; 0x30
   3c454:	mov	r0, r6
   3c458:	bl	6e608 <luaL_openlibs@@Base+0x4e48>
   3c45c:	add	sp, sp, #1200	; 0x4b0
   3c460:	add	sp, sp, #12
   3c464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c468:	ldr	r3, [sp, #464]	; 0x1d0
   3c46c:	mvn	r0, #13
   3c470:	mov	r1, #32
   3c474:	str	r0, [r3, #2348]	; 0x92c
   3c478:	str	r2, [r3, #2344]	; 0x928
   3c47c:	ldr	r0, [r3, #80]	; 0x50
   3c480:	bl	130c8 <pclose@plt+0x2c>
   3c484:	ldrh	r2, [r8, r9]
   3c488:	mvn	r6, #0
   3c48c:	ldr	r4, [pc, #192]	; 3c554 <luaL_typerror@@Base+0x61e8>
   3c490:	str	r2, [sp, #72]	; 0x48
   3c494:	ldrh	r3, [r3, #2]
   3c498:	str	r3, [sp, #76]	; 0x4c
   3c49c:	b	3b9c8 <luaL_typerror@@Base+0x565c>
   3c4a0:	ldrh	r3, [r3, #2]
   3c4a4:	cmp	r3, #1
   3c4a8:	beq	3c650 <luaL_typerror@@Base+0x62e4>
   3c4ac:	ldr	r4, [pc, #144]	; 3c544 <luaL_typerror@@Base+0x61d8>
   3c4b0:	ldrh	r2, [r8, r9]
   3c4b4:	cmp	r3, #0
   3c4b8:	sub	r3, r4, #88	; 0x58
   3c4bc:	str	r2, [sp, #72]	; 0x48
   3c4c0:	moveq	r4, r3
   3c4c4:	mvn	r6, #0
   3c4c8:	b	3b9c8 <luaL_typerror@@Base+0x565c>
   3c4cc:	ldrsb	r3, [r5, #-2]
   3c4d0:	cmp	r3, #0
   3c4d4:	bge	3c020 <luaL_typerror@@Base+0x5cb4>
   3c4d8:	ldrb	r3, [r5, #-1]
   3c4dc:	cmp	r3, #0
   3c4e0:	bne	3c020 <luaL_typerror@@Base+0x5cb4>
   3c4e4:	b	3b2a0 <luaL_typerror@@Base+0x4f34>
   3c4e8:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   3c4ec:	tst	lr, #3
   3c4f0:	tstne	r0, #4
   3c4f4:	ldrb	r0, [r0], #-0
   3c4f8:			; <UNDEFINED> instruction: 0xffff0000
   3c4fc:	vadd.f64	d0, d0, d0
   3c500:	vmov	r0, s0
   3c504:	tst	lr, #128	; 0x80
   3c508:	mvn	r0, r0
   3c50c:	eor	r0, r0, lr, lsr #8
   3c510:	ror	r0, r0, #8
   3c514:	eor	lr, r0, r0, ror #16
   3c518:	bic	lr, lr, #16711680	; 0xff0000
   3c51c:	orr	r0, r0, r0
   3c520:	eor	r0, r0, r0
   3c524:	andeq	r0, r7, r8, asr r4
   3c528:	andeq	r0, r0, r5, asr r5
   3c52c:	vstr	d0, [r0, #-0]
   3c530:	vstr	d0, [r0]
   3c534:	rev	r0, r0
   3c538:	ldr	r0, [r0], #-0
   3c53c:	strdeq	r0, [r7], -r8
   3c540:	strdeq	r1, [r0], -r0
   3c544:	andeq	r0, r7, r0, ror #8
   3c548:	vneg.f64	d0, d0
   3c54c:			; <UNDEFINED> instruction: 0x00070cb0
   3c550:	cmp	lr, #1
   3c554:	andeq	r0, r7, r0, asr r4
   3c558:	andeq	sp, r6, r4, asr #9
   3c55c:	add	r0, r0, r0
   3c560:	strdeq	r7, [r0], -sp
   3c564:	andeq	r0, r7, r0, lsl r4
   3c568:	ldr	r3, [sp, #548]	; 0x224
   3c56c:	ldrh	r8, [r2, #66]	; 0x42
   3c570:	ldrh	r1, [r3, #62]	; 0x3e
   3c574:	cmp	r1, #0
   3c578:	bne	3c5ec <luaL_typerror@@Base+0x6280>
   3c57c:	sub	r5, r4, #4
   3c580:	mov	r4, r5
   3c584:	str	r5, [sp, #560]	; 0x230
   3c588:	cmp	r8, #0
   3c58c:	ldrne	r3, [sp, #464]	; 0x1d0
   3c590:	ldreq	r3, [pc, #-64]	; 3c558 <luaL_typerror@@Base+0x61ec>
   3c594:	ldrne	r3, [r3, #272]	; 0x110
   3c598:	ldrne	r3, [r3, r8, lsl #2]
   3c59c:	ldrne	r3, [r3, #52]	; 0x34
   3c5a0:	sub	r3, r3, r5
   3c5a4:	asr	r3, r3, #2
   3c5a8:	sub	r3, r3, #1
   3c5ac:	bic	r3, r3, #-16777216	; 0xff000000
   3c5b0:	orr	r3, r3, #-369098752	; 0xea000000
   3c5b4:	str	r3, [r5, #-4]
   3c5b8:	b	3c444 <luaL_typerror@@Base+0x60d8>
   3c5bc:	ldr	r3, [sp, #464]	; 0x1d0
   3c5c0:	mov	r2, #4
   3c5c4:	add	r1, r3, #2336	; 0x920
   3c5c8:	add	r1, r1, #12
   3c5cc:	ldr	r0, [r3, #80]	; 0x50
   3c5d0:	bl	210d0 <luaL_where@@Base+0xfcc>
   3c5d4:	ldr	r3, [sp, #52]	; 0x34
   3c5d8:	mov	r2, #34	; 0x22
   3c5dc:	add	r1, r3, #2336	; 0x920
   3c5e0:	add	r1, r1, #12
   3c5e4:	ldr	r0, [r3, #80]	; 0x50
   3c5e8:	bl	210d0 <luaL_where@@Base+0xfcc>
   3c5ec:	ldr	r7, [pc, #-152]	; 3c55c <luaL_typerror@@Base+0x61f0>
   3c5f0:	mov	r0, r7
   3c5f4:	bl	16d00 <_start@@Base+0x3950>
   3c5f8:	eor	r3, r0, r7
   3c5fc:	orr	r3, r3, #905216	; 0xdd000
   3c600:	str	r3, [r4, #-8]
   3c604:	b	3c588 <luaL_typerror@@Base+0x621c>
   3c608:	ldr	r3, [sp, #464]	; 0x1d0
   3c60c:	mov	r2, #34	; 0x22
   3c610:	add	r1, r3, #2336	; 0x920
   3c614:	add	r1, r1, #12
   3c618:	ldr	r0, [r3, #80]	; 0x50
   3c61c:	bl	210d0 <luaL_where@@Base+0xfcc>
   3c620:	ldr	r3, [sp, #464]	; 0x1d0
   3c624:	mov	r2, #31
   3c628:	add	r1, r3, #2336	; 0x920
   3c62c:	add	r1, r1, #12
   3c630:	ldr	r0, [r3, #80]	; 0x50
   3c634:	bl	210d0 <luaL_where@@Base+0xfcc>
   3c638:	ldr	r3, [sp, #464]	; 0x1d0
   3c63c:	mov	r2, #33	; 0x21
   3c640:	add	r1, r3, #2336	; 0x920
   3c644:	add	r1, r1, #12
   3c648:	ldr	r0, [r3, #80]	; 0x50
   3c64c:	bl	210d0 <luaL_where@@Base+0xfcc>
   3c650:	ldr	r3, [pc, #-248]	; 3c560 <luaL_typerror@@Base+0x61f4>
   3c654:	mvn	r6, #0
   3c658:	str	r3, [sp, #72]	; 0x48
   3c65c:	ldr	r4, [pc, #-256]	; 3c564 <luaL_typerror@@Base+0x61f8>
   3c660:	b	3b9c8 <luaL_typerror@@Base+0x565c>
   3c664:	ldr	r3, [r0, #8]
   3c668:	ldr	r2, [r0]
   3c66c:	mov	r1, r3
   3c670:	sub	r2, r2, r3
   3c674:	ldr	r0, [r0, #12]
   3c678:	b	20260 <luaL_where@@Base+0x15c>
   3c67c:	push	{r4, r5, r6, r7, r8, lr}
   3c680:	ldrh	r5, [r0, #128]	; 0x80
   3c684:	ldrh	r3, [r0, #130]	; 0x82
   3c688:	ldr	r6, [r0, #16]
   3c68c:	lsl	r5, r5, #3
   3c690:	tst	r3, #32768	; 0x8000
   3c694:	add	r2, r6, r5
   3c698:	bne	3c734 <luaL_typerror@@Base+0x63c8>
   3c69c:	ldr	ip, [r0, #80]	; 0x50
   3c6a0:	ldrh	r1, [r2, #2]
   3c6a4:	mov	r4, r0
   3c6a8:	ldrh	r2, [r0, #122]	; 0x7a
   3c6ac:	ldr	r0, [ip, #8]
   3c6b0:	ldr	r1, [r6, r1, lsl #3]
   3c6b4:	cmp	r2, #14
   3c6b8:	ldr	lr, [r0, #88]	; 0x58
   3c6bc:	str	ip, [r0, #92]	; 0x5c
   3c6c0:	str	lr, [r0, #80]	; 0x50
   3c6c4:	add	r7, r6, r3, lsl #3
   3c6c8:	add	r0, r0, #80	; 0x50
   3c6cc:	beq	3c754 <luaL_typerror@@Base+0x63e8>
   3c6d0:	cmp	r2, #15
   3c6d4:	beq	3c73c <luaL_typerror@@Base+0x63d0>
   3c6d8:	cmp	r2, #10
   3c6dc:	beq	3c748 <luaL_typerror@@Base+0x63dc>
   3c6e0:	ldr	r3, [pc, #120]	; 3c760 <luaL_typerror@@Base+0x63f4>
   3c6e4:	vldr	d0, [r7, #8]
   3c6e8:	add	r2, r3, r2, lsl #3
   3c6ec:	ldr	r3, [r2, #-2272]	; 0xfffff720
   3c6f0:	blx	r3
   3c6f4:	ldrh	ip, [r6, r5]
   3c6f8:	ldr	r1, [r0, #8]
   3c6fc:	ldr	r2, [r0]
   3c700:	mov	r3, #85	; 0x55
   3c704:	strh	ip, [r4, #120]	; 0x78
   3c708:	sub	r2, r2, r1
   3c70c:	ldr	r0, [r0, #12]
   3c710:	strb	r3, [r4, #125]	; 0x7d
   3c714:	bl	20260 <luaL_where@@Base+0x15c>
   3c718:	mov	r2, #4
   3c71c:	mov	r1, r0
   3c720:	mov	r0, r4
   3c724:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   3c728:	strh	r0, [r4, #122]	; 0x7a
   3c72c:	mov	r0, #1
   3c730:	pop	{r4, r5, r6, r7, r8, pc}
   3c734:	pop	{r4, r5, r6, r7, r8, lr}
   3c738:	b	25258 <luaL_where@@Base+0x5154>
   3c73c:	ldr	r2, [r6, r3, lsl #3]
   3c740:	bl	30408 <luaL_where@@Base+0x10304>
   3c744:	b	3c6f4 <luaL_typerror@@Base+0x6388>
   3c748:	ldrd	r2, [r7, #8]
   3c74c:	bl	30574 <luaL_where@@Base+0x10470>
   3c750:	b	3c6f4 <luaL_typerror@@Base+0x6388>
   3c754:	ldr	r2, [r6, r3, lsl #3]
   3c758:	bl	304ac <luaL_where@@Base+0x103a8>
   3c75c:	b	3c6f4 <luaL_typerror@@Base+0x6388>
   3c760:			; <UNDEFINED> instruction: 0x00070cb0
   3c764:	ldrh	r3, [r0, #130]	; 0x82
   3c768:	tst	r3, #32768	; 0x8000
   3c76c:	bne	3c800 <luaL_typerror@@Base+0x6494>
   3c770:	push	{r4, r5, r6, lr}
   3c774:	ldrh	r5, [r0, #128]	; 0x80
   3c778:	ldr	r6, [r0, #16]
   3c77c:	lsl	r5, r5, #3
   3c780:	add	r2, r6, r5
   3c784:	ldrh	r1, [r2, #2]
   3c788:	tst	r1, #32768	; 0x8000
   3c78c:	beq	3c798 <luaL_typerror@@Base+0x642c>
   3c790:	pop	{r4, r5, r6, lr}
   3c794:	b	25258 <luaL_where@@Base+0x5154>
   3c798:	ldr	ip, [r0, #80]	; 0x50
   3c79c:	ldr	r2, [r6, r3, lsl #3]
   3c7a0:	mov	r4, r0
   3c7a4:	ldr	r3, [ip, #8]
   3c7a8:	ldr	r1, [r6, r1, lsl #3]
   3c7ac:	mov	r0, r3
   3c7b0:	str	ip, [r3, #92]	; 0x5c
   3c7b4:	ldr	r3, [r3, #88]	; 0x58
   3c7b8:	str	r3, [r0, #80]!	; 0x50
   3c7bc:	bl	332e4 <luaL_where@@Base+0x131e0>
   3c7c0:	ldrh	ip, [r6, r5]
   3c7c4:	mov	r3, #85	; 0x55
   3c7c8:	ldr	r1, [r0, #8]
   3c7cc:	ldr	r2, [r0]
   3c7d0:	strh	ip, [r4, #120]	; 0x78
   3c7d4:	sub	r2, r2, r1
   3c7d8:	ldr	r0, [r0, #12]
   3c7dc:	strb	r3, [r4, #125]	; 0x7d
   3c7e0:	bl	20260 <luaL_where@@Base+0x15c>
   3c7e4:	mov	r2, #4
   3c7e8:	mov	r1, r0
   3c7ec:	mov	r0, r4
   3c7f0:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   3c7f4:	strh	r0, [r4, #122]	; 0x7a
   3c7f8:	mov	r0, #1
   3c7fc:	pop	{r4, r5, r6, pc}
   3c800:	b	25258 <luaL_where@@Base+0x5154>
   3c804:	ldrh	r2, [r0, #130]	; 0x82
   3c808:	tst	r2, #32768	; 0x8000
   3c80c:	bne	3c888 <luaL_typerror@@Base+0x651c>
   3c810:	ldr	r1, [r0, #80]	; 0x50
   3c814:	push	{r4, lr}
   3c818:	mov	r4, r0
   3c81c:	ldrh	lr, [r0, #122]	; 0x7a
   3c820:	ldr	r0, [r1, #8]
   3c824:	ldr	r3, [pc, #96]	; 3c88c <luaL_typerror@@Base+0x6520>
   3c828:	ldr	ip, [r4, #16]
   3c82c:	add	r3, r3, lr, lsl #3
   3c830:	str	r1, [r0, #92]	; 0x5c
   3c834:	ldr	r1, [r0, #88]	; 0x58
   3c838:	ldr	r3, [r3, #-2272]	; 0xfffff720
   3c83c:	str	r1, [r0, #80]!	; 0x50
   3c840:	ldr	r1, [ip, r2, lsl #3]
   3c844:	blx	r3
   3c848:	ldrh	ip, [r4, #128]	; 0x80
   3c84c:	mov	r3, #85	; 0x55
   3c850:	ldr	r1, [r0, #8]
   3c854:	ldr	r2, [r0]
   3c858:	ldr	r0, [r0, #12]
   3c85c:	sub	r2, r2, r1
   3c860:	strh	ip, [r4, #120]	; 0x78
   3c864:	strb	r3, [r4, #125]	; 0x7d
   3c868:	bl	20260 <luaL_where@@Base+0x15c>
   3c86c:	mov	r2, #4
   3c870:	mov	r1, r0
   3c874:	mov	r0, r4
   3c878:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   3c87c:	strh	r0, [r4, #122]	; 0x7a
   3c880:	mov	r0, #1
   3c884:	pop	{r4, pc}
   3c888:	b	25258 <luaL_where@@Base+0x5154>
   3c88c:			; <UNDEFINED> instruction: 0x00070cb0
   3c890:	push	{r4, r5, lr}
   3c894:	sub	sp, sp, #20
   3c898:	add	r4, sp, #4
   3c89c:	mov	r5, r0
   3c8a0:	mov	r0, r4
   3c8a4:	bl	14d4c <_start@@Base+0x199c>
   3c8a8:	mov	r1, r4
   3c8ac:	sub	r2, r0, r4
   3c8b0:	mov	r0, r5
   3c8b4:	bl	20260 <luaL_where@@Base+0x15c>
   3c8b8:	add	sp, sp, #20
   3c8bc:	pop	{r4, r5, pc}
   3c8c0:	push	{lr}		; (str lr, [sp, #-4]!)
   3c8c4:	sub	sp, sp, #12
   3c8c8:	add	r3, sp, #8
   3c8cc:	mov	r2, #1
   3c8d0:	strb	r1, [r3, #-4]!
   3c8d4:	mov	r1, r3
   3c8d8:	bl	20260 <luaL_where@@Base+0x15c>
   3c8dc:	add	sp, sp, #12
   3c8e0:	pop	{pc}		; (ldr pc, [sp], #4)
   3c8e4:	ldrh	r2, [r0, #122]	; 0x7a
   3c8e8:	push	{r4, lr}
   3c8ec:	mov	r4, r0
   3c8f0:	cmp	r2, #0
   3c8f4:	sub	sp, sp, #8
   3c8f8:	ldr	r0, [r0, #80]	; 0x50
   3c8fc:	ldr	r3, [r4, #128]	; 0x80
   3c900:	beq	3c92c <luaL_typerror@@Base+0x65c0>
   3c904:	add	r1, sp, #8
   3c908:	mov	r2, #1
   3c90c:	strb	r3, [r1, #-4]!
   3c910:	bl	20260 <luaL_where@@Base+0x15c>
   3c914:	mov	r1, r0
   3c918:	mov	r0, r4
   3c91c:	mov	r2, #4
   3c920:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   3c924:	add	sp, sp, #8
   3c928:	pop	{r4, pc}
   3c92c:	mov	r1, r3
   3c930:	bl	3c890 <luaL_typerror@@Base+0x6524>
   3c934:	mov	r1, r0
   3c938:	b	3c918 <luaL_typerror@@Base+0x65ac>
   3c93c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3c940:	mov	r5, r0
   3c944:	ldr	r0, [r0, #8]
   3c948:	ldr	r6, [r1, #12]
   3c94c:	ldr	r9, [r2, #12]
   3c950:	ldr	r4, [r0, #88]	; 0x58
   3c954:	ldr	r3, [r0, #84]	; 0x54
   3c958:	add	r7, r6, r9
   3c95c:	sub	r3, r3, r4
   3c960:	cmp	r7, r3
   3c964:	mov	sl, r1
   3c968:	mov	r8, r2
   3c96c:	str	r5, [r0, #92]	; 0x5c
   3c970:	bhi	3c9a8 <luaL_typerror@@Base+0x663c>
   3c974:	add	r1, sl, #16
   3c978:	mov	r2, r6
   3c97c:	mov	r0, r4
   3c980:	bl	12cb8 <memcpy@plt>
   3c984:	mov	r2, r9
   3c988:	add	r1, r8, #16
   3c98c:	add	r0, r4, r6
   3c990:	bl	12cb8 <memcpy@plt>
   3c994:	mov	r2, r7
   3c998:	mov	r1, r4
   3c99c:	mov	r0, r5
   3c9a0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   3c9a4:	b	20260 <luaL_where@@Base+0x15c>
   3c9a8:	add	r0, r0, #80	; 0x50
   3c9ac:	mov	r1, r7
   3c9b0:	bl	333cc <luaL_where@@Base+0x132c8>
   3c9b4:	mov	r4, r0
   3c9b8:	b	3c974 <luaL_typerror@@Base+0x6608>
   3c9bc:	ldr	r3, [r0, #100]	; 0x64
   3c9c0:	tst	r3, #65536	; 0x10000
   3c9c4:	beq	3c9d4 <luaL_typerror@@Base+0x6668>
   3c9c8:	ldrb	r3, [r0, #149]	; 0x95
   3c9cc:	cmp	r3, #24
   3c9d0:	beq	3c9d8 <luaL_typerror@@Base+0x666c>
   3c9d4:	b	25258 <luaL_where@@Base+0x5154>
   3c9d8:	ldr	r2, [r0, #144]	; 0x90
   3c9dc:	ldr	r3, [r2, #12]
   3c9e0:	cmp	r3, #0
   3c9e4:	beq	3ca4c <luaL_typerror@@Base+0x66e0>
   3c9e8:	ldrb	r3, [r0, #133]	; 0x85
   3c9ec:	cmp	r3, #85	; 0x55
   3c9f0:	bne	3c9d4 <luaL_typerror@@Base+0x6668>
   3c9f4:	ldrh	r3, [r0, #130]	; 0x82
   3c9f8:	tst	r3, #32768	; 0x8000
   3c9fc:	bne	3c9d4 <luaL_typerror@@Base+0x6668>
   3ca00:	ldrb	r1, [r0, #132]	; 0x84
   3ca04:	tst	r1, #64	; 0x40
   3ca08:	bne	3c9d4 <luaL_typerror@@Base+0x6668>
   3ca0c:	ldr	r1, [r0, #16]
   3ca10:	push	{r4, lr}
   3ca14:	mov	r4, r0
   3ca18:	ldr	r1, [r1, r3, lsl #3]
   3ca1c:	ldr	r0, [r0, #80]	; 0x50
   3ca20:	bl	3c93c <luaL_typerror@@Base+0x65d0>
   3ca24:	mov	r2, #4
   3ca28:	mov	r1, r0
   3ca2c:	mov	r0, r4
   3ca30:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   3ca34:	ldrh	r3, [r4, #120]	; 0x78
   3ca38:	ldr	r2, [r4, #16]
   3ca3c:	add	r2, r2, r3, lsl #3
   3ca40:	strh	r0, [r2, #2]
   3ca44:	mov	r0, r3
   3ca48:	pop	{r4, pc}
   3ca4c:	ldrh	r3, [r0, #120]	; 0x78
   3ca50:	mov	r0, r3
   3ca54:	bx	lr
   3ca58:	push	{r4, lr}
   3ca5c:	mov	r4, r0
   3ca60:	ldr	r2, [r0, #144]	; 0x90
   3ca64:	ldr	r1, [r0, #128]	; 0x80
   3ca68:	ldr	r0, [r0, #80]	; 0x50
   3ca6c:	bl	20260 <luaL_where@@Base+0x15c>
   3ca70:	mov	r2, #4
   3ca74:	mov	r1, r0
   3ca78:	mov	r0, r4
   3ca7c:	pop	{r4, lr}
   3ca80:	b	2a6f0 <luaL_where@@Base+0xa5ec>
   3ca84:	push	{r4, r5, lr}
   3ca88:	sub	sp, sp, #36	; 0x24
   3ca8c:	mov	r4, sp
   3ca90:	vldr	d0, [r1]
   3ca94:	mov	r5, r0
   3ca98:	mov	r2, r4
   3ca9c:	ldr	r1, [pc, #28]	; 3cac0 <luaL_typerror@@Base+0x6754>
   3caa0:	mov	r0, #0
   3caa4:	bl	30bd4 <luaL_where@@Base+0x10ad0>
   3caa8:	mov	r1, r4
   3caac:	sub	r2, r0, r4
   3cab0:	mov	r0, r5
   3cab4:	bl	20260 <luaL_where@@Base+0x15c>
   3cab8:	add	sp, sp, #36	; 0x24
   3cabc:	pop	{r4, r5, pc}
   3cac0:	svceq	0x00000035
   3cac4:	push	{r4, lr}
   3cac8:	add	r1, r0, #136	; 0x88
   3cacc:	mov	r4, r0
   3cad0:	ldr	r0, [r0, #80]	; 0x50
   3cad4:	bl	3ca84 <luaL_typerror@@Base+0x6718>
   3cad8:	mov	r2, #4
   3cadc:	mov	r1, r0
   3cae0:	mov	r0, r4
   3cae4:	pop	{r4, lr}
   3cae8:	b	2a6f0 <luaL_where@@Base+0xa5ec>
   3caec:	ldr	r2, [r0, #24]
   3caf0:	push	{r4, lr}
   3caf4:	add	r3, r2, #1
   3caf8:	ldrb	r2, [r2]
   3cafc:	cmp	r2, #127	; 0x7f
   3cb00:	bhi	3cba8 <luaL_typerror@@Base+0x683c>
   3cb04:	cmp	r2, #4
   3cb08:	str	r3, [r0, #24]
   3cb0c:	bhi	3cb4c <luaL_typerror@@Base+0x67e0>
   3cb10:	cmp	r2, #3
   3cb14:	beq	3cb2c <luaL_typerror@@Base+0x67c0>
   3cb18:	cmp	r2, #4
   3cb1c:	beq	3cb74 <luaL_typerror@@Base+0x6808>
   3cb20:	mvn	r2, r2
   3cb24:	str	r2, [r1, #4]
   3cb28:	pop	{r4, pc}
   3cb2c:	ldrb	r2, [r3]
   3cb30:	add	r3, r3, #1
   3cb34:	cmp	r2, #127	; 0x7f
   3cb38:	bhi	3cbd4 <luaL_typerror@@Base+0x6868>
   3cb3c:	mvn	ip, #13
   3cb40:	str	r3, [r0, #24]
   3cb44:	stm	r1, {r2, ip}
   3cb48:	pop	{r4, pc}
   3cb4c:	sub	r2, r2, #5
   3cb50:	mov	r4, r1
   3cb54:	add	r1, r3, r2
   3cb58:	str	r1, [r0, #24]
   3cb5c:	mov	r1, r3
   3cb60:	ldr	r0, [r0, #4]
   3cb64:	bl	20260 <luaL_where@@Base+0x15c>
   3cb68:	mvn	r3, #4
   3cb6c:	stm	r4, {r0, r3}
   3cb70:	pop	{r4, pc}
   3cb74:	ldrb	r2, [r3]
   3cb78:	add	r3, r3, #1
   3cb7c:	cmp	r2, #127	; 0x7f
   3cb80:	bhi	3cc2c <luaL_typerror@@Base+0x68c0>
   3cb84:	str	r3, [r0, #24]
   3cb88:	str	r2, [r1]
   3cb8c:	ldrb	r2, [r3]
   3cb90:	add	r3, r3, #1
   3cb94:	cmp	r2, #127	; 0x7f
   3cb98:	bhi	3cc00 <luaL_typerror@@Base+0x6894>
   3cb9c:	str	r3, [r0, #24]
   3cba0:	str	r2, [r1, #4]
   3cba4:	pop	{r4, pc}
   3cba8:	and	r2, r2, #127	; 0x7f
   3cbac:	mov	lr, r3
   3cbb0:	mov	ip, #0
   3cbb4:	ldrb	r3, [lr], #1
   3cbb8:	add	ip, ip, #7
   3cbbc:	and	r4, r3, #127	; 0x7f
   3cbc0:	tst	r3, #128	; 0x80
   3cbc4:	orr	r2, r2, r4, lsl ip
   3cbc8:	mov	r3, lr
   3cbcc:	bne	3cbb4 <luaL_typerror@@Base+0x6848>
   3cbd0:	b	3cb04 <luaL_typerror@@Base+0x6798>
   3cbd4:	and	r2, r2, #127	; 0x7f
   3cbd8:	mov	lr, r3
   3cbdc:	mov	ip, #0
   3cbe0:	ldrb	r3, [lr], #1
   3cbe4:	add	ip, ip, #7
   3cbe8:	and	r4, r3, #127	; 0x7f
   3cbec:	tst	r3, #128	; 0x80
   3cbf0:	orr	r2, r2, r4, lsl ip
   3cbf4:	mov	r3, lr
   3cbf8:	bne	3cbe0 <luaL_typerror@@Base+0x6874>
   3cbfc:	b	3cb3c <luaL_typerror@@Base+0x67d0>
   3cc00:	and	r2, r2, #127	; 0x7f
   3cc04:	mov	lr, r3
   3cc08:	mov	ip, #0
   3cc0c:	ldrb	r3, [lr], #1
   3cc10:	add	ip, ip, #7
   3cc14:	and	r4, r3, #127	; 0x7f
   3cc18:	tst	r3, #128	; 0x80
   3cc1c:	orr	r2, r2, r4, lsl ip
   3cc20:	mov	r3, lr
   3cc24:	bne	3cc0c <luaL_typerror@@Base+0x68a0>
   3cc28:	b	3cb9c <luaL_typerror@@Base+0x6830>
   3cc2c:	and	r2, r2, #127	; 0x7f
   3cc30:	mov	lr, r3
   3cc34:	mov	ip, #0
   3cc38:	ldrb	r3, [lr], #1
   3cc3c:	add	ip, ip, #7
   3cc40:	and	r4, r3, #127	; 0x7f
   3cc44:	tst	r3, #128	; 0x80
   3cc48:	orr	r2, r2, r4, lsl ip
   3cc4c:	mov	r3, lr
   3cc50:	bne	3cc38 <luaL_typerror@@Base+0x68cc>
   3cc54:	b	3cb84 <luaL_typerror@@Base+0x6818>
   3cc58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3cc5c:	mov	r4, r3
   3cc60:	ldrb	r3, [r3]
   3cc64:	cmp	r3, #0
   3cc68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3cc6c:	mov	r9, r0
   3cc70:	mov	r7, r1
   3cc74:	mov	r5, r2
   3cc78:	mvn	r8, #4
   3cc7c:	b	3cc98 <luaL_typerror@@Base+0x692c>
   3cc80:	ldrb	r3, [r4]
   3cc84:	lsl	r5, r5, #1
   3cc88:	add	r3, r3, #1
   3cc8c:	ldrb	r3, [r4, r3]!
   3cc90:	cmp	r3, #0
   3cc94:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3cc98:	tst	r7, r5
   3cc9c:	beq	3cc80 <luaL_typerror@@Base+0x6914>
   3cca0:	ldr	r6, [r9, #20]
   3cca4:	mov	r1, r4
   3cca8:	add	r3, r6, #8
   3ccac:	str	r3, [r9, #20]
   3ccb0:	mov	r0, r9
   3ccb4:	ldrb	r2, [r1], #1
   3ccb8:	bl	20260 <luaL_where@@Base+0x15c>
   3ccbc:	stm	r6, {r0, r8}
   3ccc0:	b	3cc80 <luaL_typerror@@Base+0x6914>
   3ccc4:	push	{r4, r5, r6, lr}
   3ccc8:	mvn	r3, #1
   3cccc:	ldr	r5, [r0, #8]
   3ccd0:	ldr	r2, [r0, #16]
   3ccd4:	mov	r4, r0
   3ccd8:	ldr	r1, [r5, #484]	; 0x1e4
   3ccdc:	add	ip, r2, #8
   3cce0:	str	ip, [r0, #20]
   3cce4:	and	ip, r1, #1
   3cce8:	sub	r3, r3, ip
   3ccec:	str	r3, [r2, #4]
   3ccf0:	ldr	r3, [pc, #48]	; 3cd28 <luaL_typerror@@Base+0x69bc>
   3ccf4:	mov	r2, #16
   3ccf8:	bl	3cc58 <luaL_typerror@@Base+0x68ec>
   3ccfc:	ldr	r1, [r5, #484]	; 0x1e4
   3cd00:	mov	r0, r4
   3cd04:	ldr	r3, [pc, #32]	; 3cd2c <luaL_typerror@@Base+0x69c0>
   3cd08:	mov	r2, #65536	; 0x10000
   3cd0c:	bl	3cc58 <luaL_typerror@@Base+0x68ec>
   3cd10:	ldr	r0, [r4, #20]
   3cd14:	ldr	r3, [r4, #16]
   3cd18:	sub	r5, r5, #48	; 0x30
   3cd1c:	sub	r0, r0, r3
   3cd20:	asr	r0, r0, #3
   3cd24:	pop	{r4, r5, r6, pc}
   3cd28:	andeq	r2, r7, ip, lsr #26
   3cd2c:	andeq	r2, r7, r0, asr sp
   3cd30:	push	{r4, r5, r6, lr}
   3cd34:	mov	r2, #5
   3cd38:	mov	r5, r1
   3cd3c:	mov	r4, r0
   3cd40:	mov	r0, r1
   3cd44:	ldr	r1, [pc, #140]	; 3cdd8 <luaL_typerror@@Base+0x6a6c>
   3cd48:	bl	13048 <strncmp@plt>
   3cd4c:	cmp	r0, #0
   3cd50:	beq	3cd6c <luaL_typerror@@Base+0x6a00>
   3cd54:	mov	r2, #5
   3cd58:	ldr	r1, [pc, #124]	; 3cddc <luaL_typerror@@Base+0x6a70>
   3cd5c:	mov	r0, r5
   3cd60:	bl	13048 <strncmp@plt>
   3cd64:	cmp	r0, #0
   3cd68:	bne	3cdd0 <luaL_typerror@@Base+0x6a64>
   3cd6c:	mov	r1, #40	; 0x28
   3cd70:	mov	r0, r5
   3cd74:	bl	12e8c <strchr@plt>
   3cd78:	subs	r1, r0, #0
   3cd7c:	beq	3cdd0 <luaL_typerror@@Base+0x6a64>
   3cd80:	ldrb	r3, [r1, #1]!
   3cd84:	cmp	r3, #32
   3cd88:	beq	3cd80 <luaL_typerror@@Base+0x6a14>
   3cd8c:	subs	r2, r3, #41	; 0x29
   3cd90:	movne	r2, #1
   3cd94:	cmp	r3, #0
   3cd98:	moveq	r2, #0
   3cd9c:	cmp	r2, #0
   3cda0:	beq	3cdc0 <luaL_typerror@@Base+0x6a54>
   3cda4:	mov	r2, r1
   3cda8:	ldrb	r3, [r2, #1]!
   3cdac:	and	r0, r3, #223	; 0xdf
   3cdb0:	cmp	r3, #41	; 0x29
   3cdb4:	cmpne	r0, #0
   3cdb8:	bne	3cda8 <luaL_typerror@@Base+0x6a3c>
   3cdbc:	sub	r2, r2, r1
   3cdc0:	mov	r0, r4
   3cdc4:	bl	20260 <luaL_where@@Base+0x15c>
   3cdc8:	add	r0, r0, #16
   3cdcc:	pop	{r4, r5, r6, pc}
   3cdd0:	mov	r0, #0
   3cdd4:	pop	{r4, r5, r6, pc}
   3cdd8:	andeq	r2, r7, r0, lsl #27
   3cddc:	andeq	r2, r7, r8, lsl #27
   3cde0:	push	{r4, r5, r6, r7, r8, lr}
   3cde4:	mov	r6, r0
   3cde8:	ldr	r0, [r0, #8]
   3cdec:	ldr	r4, [r6, #20]
   3cdf0:	ldr	r2, [r6, #16]
   3cdf4:	ldr	r8, [r0, #88]	; 0x58
   3cdf8:	ldr	r3, [r0, #84]	; 0x54
   3cdfc:	sub	r4, r4, r2
   3ce00:	sub	r3, r3, r8
   3ce04:	asr	r7, r4, #3
   3ce08:	cmp	r7, r3
   3ce0c:	str	r6, [r0, #92]	; 0x5c
   3ce10:	bhi	3ce6c <luaL_typerror@@Base+0x6b00>
   3ce14:	cmp	r4, #0
   3ce18:	ble	3ce48 <luaL_typerror@@Base+0x6adc>
   3ce1c:	sub	r5, r8, #1
   3ce20:	mov	r4, #1
   3ce24:	mov	r1, r4
   3ce28:	mov	r0, r6
   3ce2c:	bl	3638c <luaL_typerror@@Base+0x20>
   3ce30:	bics	r3, r0, #255	; 0xff
   3ce34:	bne	3ce80 <luaL_typerror@@Base+0x6b14>
   3ce38:	add	r4, r4, #1
   3ce3c:	cmp	r7, r4
   3ce40:	strb	r0, [r5, #1]!
   3ce44:	bge	3ce24 <luaL_typerror@@Base+0x6ab8>
   3ce48:	mov	r2, r7
   3ce4c:	mov	r1, r8
   3ce50:	mov	r0, r6
   3ce54:	ldr	r4, [r6, #16]
   3ce58:	bl	20260 <luaL_where@@Base+0x15c>
   3ce5c:	mvn	r3, #4
   3ce60:	stmdb	r4, {r0, r3}
   3ce64:	mov	r0, #2
   3ce68:	pop	{r4, r5, r6, r7, r8, pc}
   3ce6c:	add	r0, r0, #80	; 0x50
   3ce70:	mov	r1, r7
   3ce74:	bl	333cc <luaL_where@@Base+0x132c8>
   3ce78:	mov	r8, r0
   3ce7c:	b	3ce14 <luaL_typerror@@Base+0x6aa8>
   3ce80:	mov	r1, r4
   3ce84:	mov	r0, r6
   3ce88:	ldr	r2, [pc]	; 3ce90 <luaL_typerror@@Base+0x6b24>
   3ce8c:	bl	361d0 <luaL_argerror@@Base+0x8>
   3ce90:	andeq	r0, r0, r9, lsl r2
   3ce94:	push	{r4, r5, r6, r7, r8, lr}
   3ce98:	mov	r5, r0
   3ce9c:	bl	365f0 <luaL_typerror@@Base+0x284>
   3cea0:	subs	r4, r0, #0
   3cea4:	moveq	r1, r4
   3cea8:	beq	3ceb8 <luaL_typerror@@Base+0x6b4c>
   3ceac:	ldr	r1, [r4, #52]	; 0x34
   3ceb0:	cmp	r1, #0
   3ceb4:	bne	3cec0 <luaL_typerror@@Base+0x6b54>
   3ceb8:	mov	r0, r1
   3cebc:	pop	{r4, r5, r6, r7, r8, pc}
   3cec0:	ldr	r2, [r4, #48]	; 0x30
   3cec4:	mov	r0, r5
   3cec8:	ldr	r6, [r5, #20]
   3cecc:	bl	20260 <luaL_where@@Base+0x15c>
   3ced0:	ldr	r3, [r5, #20]
   3ced4:	ldr	r7, [r4, #52]	; 0x34
   3ced8:	ldr	ip, [r4, #56]	; 0x38
   3cedc:	mvn	r2, #4
   3cee0:	str	r2, [r6, #-4]
   3cee4:	add	lr, r3, #16
   3cee8:	mvn	r2, #13
   3ceec:	mov	r1, #3
   3cef0:	str	r0, [r6, #-8]
   3cef4:	str	r7, [r3]
   3cef8:	str	r2, [r3, #4]
   3cefc:	mov	r0, r1
   3cf00:	str	lr, [r5, #20]
   3cf04:	str	ip, [r3, #8]
   3cf08:	str	r2, [r3, #12]
   3cf0c:	pop	{r4, r5, r6, r7, r8, pc}
   3cf10:	push	{r4, r5, r6, r7, r8, lr}
   3cf14:	mov	r1, #0
   3cf18:	mov	r6, r0
   3cf1c:	bl	370a4 <luaL_typerror@@Base+0xd38>
   3cf20:	mov	r1, #2
   3cf24:	mov	r4, r0
   3cf28:	mov	r0, r6
   3cf2c:	bl	3638c <luaL_typerror@@Base+0x20>
   3cf30:	ldrb	r3, [r4, #36]	; 0x24
   3cf34:	cmp	r3, r0
   3cf38:	movls	r3, #0
   3cf3c:	bls	3cf70 <luaL_typerror@@Base+0x6c04>
   3cf40:	ldr	r2, [r4, #56]	; 0x38
   3cf44:	ldr	r7, [r6, #20]
   3cf48:	cmp	r2, #0
   3cf4c:	bne	3cf78 <luaL_typerror@@Base+0x6c0c>
   3cf50:	ldr	r4, [pc, #144]	; 3cfe8 <luaL_typerror@@Base+0x6c7c>
   3cf54:	mov	r1, r4
   3cf58:	mov	r0, r6
   3cf5c:	bl	20260 <luaL_where@@Base+0x15c>
   3cf60:	mvn	r3, #4
   3cf64:	str	r3, [r7, #-4]
   3cf68:	mov	r3, #1
   3cf6c:	str	r0, [r7, #-8]
   3cf70:	mov	r0, r3
   3cf74:	pop	{r4, r5, r6, r7, r8, pc}
   3cf78:	cmp	r0, #0
   3cf7c:	mov	r4, r2
   3cf80:	beq	3cfd8 <luaL_typerror@@Base+0x6c6c>
   3cf84:	mov	r3, r2
   3cf88:	mov	r1, r0
   3cf8c:	ldrb	r2, [r3]
   3cf90:	add	r5, r3, #1
   3cf94:	mov	r3, r5
   3cf98:	cmp	r2, #0
   3cf9c:	bne	3cf8c <luaL_typerror@@Base+0x6c20>
   3cfa0:	subs	r1, r1, #1
   3cfa4:	bne	3cf8c <luaL_typerror@@Base+0x6c20>
   3cfa8:	ldrb	r2, [r4]
   3cfac:	add	r3, r4, #1
   3cfb0:	mov	r4, r3
   3cfb4:	cmp	r2, #0
   3cfb8:	bne	3cfa8 <luaL_typerror@@Base+0x6c3c>
   3cfbc:	subs	r0, r0, #1
   3cfc0:	bne	3cfa8 <luaL_typerror@@Base+0x6c3c>
   3cfc4:	mov	r0, r3
   3cfc8:	bl	12e80 <strlen@plt>
   3cfcc:	mov	r4, r5
   3cfd0:	mov	r2, r0
   3cfd4:	b	3cf54 <luaL_typerror@@Base+0x6be8>
   3cfd8:	mov	r0, r2
   3cfdc:	bl	12e80 <strlen@plt>
   3cfe0:	mov	r2, r0
   3cfe4:	b	3cf54 <luaL_typerror@@Base+0x6be8>
   3cfe8:	andeq	lr, r6, r0, ror #24
   3cfec:	ldr	r2, [r0, #8]
   3cff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cff4:	mov	r5, r0
   3cff8:	ldr	r0, [r2, #228]	; 0xe4
   3cffc:	sub	sp, sp, #564	; 0x234
   3d000:	mov	r6, r1
   3d004:	ldr	r1, [r0]
   3d008:	mov	r3, #0
   3d00c:	str	r0, [sp, #32]
   3d010:	ldr	r7, [pc, #2708]	; 3daac <luaL_typerror@@Base+0x7740>
   3d014:	add	r0, sp, #24
   3d018:	mov	ip, r3
   3d01c:	mov	r2, r3
   3d020:	str	r3, [sp, #40]	; 0x28
   3d024:	add	r1, r1, r6, lsl #4
   3d028:	add	r3, sp, #304	; 0x130
   3d02c:	add	r8, r0, #35	; 0x23
   3d030:	str	r3, [sp, #28]
   3d034:	str	r3, [sp, #24]
   3d038:	mov	r3, #1
   3d03c:	str	r5, [sp, #36]	; 0x24
   3d040:	str	r3, [sp, #44]	; 0x2c
   3d044:	ldm	r1, {r4, lr}
   3d048:	lsr	r3, r4, #28
   3d04c:	cmp	r3, #8
   3d050:	ldrls	pc, [pc, r3, lsl #2]
   3d054:	b	3d15c <luaL_typerror@@Base+0x6df0>
   3d058:			; <UNDEFINED> instruction: 0x0003d2bc
   3d05c:	andeq	sp, r3, ip, ror r2
   3d060:	andeq	sp, r3, ip, lsl r3
   3d064:	andeq	sp, r3, ip, ror r0
   3d068:	andeq	sp, r3, r4, asr r2
   3d06c:	strdeq	sp, [r3], -ip
   3d070:	muleq	r3, r4, r1
   3d074:	andeq	sp, r3, ip, asr r1
   3d078:	andeq	sp, r3, r0, ror r1
   3d07c:	and	r3, r4, #-67108864	; 0xfc000000
   3d080:	cmp	r3, #805306368	; 0x30000000
   3d084:	bne	3d364 <luaL_typerror@@Base+0x6ff8>
   3d088:	mov	r3, #1
   3d08c:	cmp	ip, #0
   3d090:	str	r3, [sp, #40]	; 0x28
   3d094:	beq	3d0dc <luaL_typerror@@Base+0x6d70>
   3d098:	ldr	r3, [sp, #24]
   3d09c:	add	r0, sp, #48	; 0x30
   3d0a0:	cmp	r3, r0
   3d0a4:	subhi	ip, r3, #1
   3d0a8:	movhi	r0, #40	; 0x28
   3d0ac:	movls	r3, #0
   3d0b0:	strhi	ip, [sp, #24]
   3d0b4:	strbhi	r0, [r3, #-1]
   3d0b8:	ldr	r9, [sp, #28]
   3d0bc:	strls	r3, [sp, #44]	; 0x2c
   3d0c0:	add	r3, sp, #560	; 0x230
   3d0c4:	cmp	r9, r3
   3d0c8:	bcs	3d684 <luaL_typerror@@Base+0x7318>
   3d0cc:	add	r0, r9, #1
   3d0d0:	mov	r3, #41	; 0x29
   3d0d4:	str	r0, [sp, #28]
   3d0d8:	strb	r3, [r9]
   3d0dc:	ldr	r9, [sp, #28]
   3d0e0:	add	r3, sp, #560	; 0x230
   3d0e4:	cmp	r9, r3
   3d0e8:	bcs	3d684 <luaL_typerror@@Base+0x7318>
   3d0ec:	add	r0, r9, #1
   3d0f0:	mov	r3, #91	; 0x5b
   3d0f4:	str	r0, [sp, #28]
   3d0f8:	strb	r3, [r9]
   3d0fc:	ldr	r9, [sp, #28]
   3d100:	cmn	lr, #1
   3d104:	beq	3d750 <luaL_typerror@@Base+0x73e4>
   3d108:	ldr	r3, [sp, #32]
   3d10c:	ldrh	r1, [r1]
   3d110:	ldr	r3, [r3]
   3d114:	add	r3, r3, r1, lsl #4
   3d118:	ldr	r1, [r3, #4]
   3d11c:	add	r3, sp, #548	; 0x224
   3d120:	cmp	r1, #0
   3d124:	add	r3, r3, #2
   3d128:	beq	3d77c <luaL_typerror@@Base+0x7410>
   3d12c:	cmp	r9, r3
   3d130:	bls	3d984 <luaL_typerror@@Base+0x7618>
   3d134:	mov	r3, #0
   3d138:	str	r3, [sp, #44]	; 0x2c
   3d13c:	add	r3, sp, #560	; 0x230
   3d140:	cmp	r9, r3
   3d144:	bcs	3d57c <luaL_typerror@@Base+0x7210>
   3d148:	mov	ip, #0
   3d14c:	add	r1, r9, #1
   3d150:	mov	r3, #93	; 0x5d
   3d154:	str	r1, [sp, #28]
   3d158:	strb	r3, [r9]
   3d15c:	ldr	r3, [sp, #32]
   3d160:	uxth	r4, r4
   3d164:	ldr	r1, [r3]
   3d168:	add	r1, r1, r4, lsl #4
   3d16c:	b	3d044 <luaL_typerror@@Base+0x6cd8>
   3d170:	lsr	r3, r4, #16
   3d174:	uxth	r4, r4
   3d178:	uxtb	r3, r3
   3d17c:	cmp	r3, #1
   3d180:	ldr	r3, [sp, #32]
   3d184:	orreq	r2, r2, lr
   3d188:	ldr	r1, [r3]
   3d18c:	add	r1, r1, r4, lsl #4
   3d190:	b	3d044 <luaL_typerror@@Base+0x6cd8>
   3d194:	mov	r3, #1
   3d198:	cmp	ip, #0
   3d19c:	str	r3, [sp, #40]	; 0x28
   3d1a0:	bne	3d4fc <luaL_typerror@@Base+0x7190>
   3d1a4:	ldr	r3, [sp, #28]
   3d1a8:	add	r1, sp, #560	; 0x230
   3d1ac:	cmp	r3, r1
   3d1b0:	bcs	3d57c <luaL_typerror@@Base+0x7210>
   3d1b4:	add	r0, r3, #1
   3d1b8:	mov	r1, #40	; 0x28
   3d1bc:	str	r0, [sp, #28]
   3d1c0:	strb	r1, [r3]
   3d1c4:	ldr	r3, [sp, #28]
   3d1c8:	add	r1, sp, #560	; 0x230
   3d1cc:	cmp	r3, r1
   3d1d0:	bcs	3d57c <luaL_typerror@@Base+0x7210>
   3d1d4:	add	r1, r3, #1
   3d1d8:	str	r1, [sp, #28]
   3d1dc:	mov	r1, #41	; 0x29
   3d1e0:	strb	r1, [r3]
   3d1e4:	ldr	r3, [sp, #32]
   3d1e8:	uxth	r4, r4
   3d1ec:	mov	ip, #0
   3d1f0:	ldr	r1, [r3]
   3d1f4:	add	r1, r1, r4, lsl #4
   3d1f8:	b	3d044 <luaL_typerror@@Base+0x6cd8>
   3d1fc:	cmp	r6, #21
   3d200:	bne	3d544 <luaL_typerror@@Base+0x71d8>
   3d204:	add	r2, sp, #560	; 0x230
   3d208:	ldr	r3, [r2, #-536]!	; 0xfffffde8
   3d20c:	add	r2, r2, #30
   3d210:	cmp	r3, r2
   3d214:	bcc	3d598 <luaL_typerror@@Base+0x722c>
   3d218:	ldr	r2, [sp, #40]	; 0x28
   3d21c:	mov	r1, #1
   3d220:	cmp	r2, #0
   3d224:	movne	r2, #32
   3d228:	strbne	r2, [r3, #-1]
   3d22c:	subne	r3, r3, #1
   3d230:	ldr	r2, [pc, #2168]	; 3dab0 <luaL_typerror@@Base+0x7744>
   3d234:	sub	r0, r3, #5
   3d238:	str	r1, [sp, #40]	; 0x28
   3d23c:	ldrb	r1, [r2, #-1]!
   3d240:	strb	r1, [r3, #-1]!
   3d244:	cmp	r3, r0
   3d248:	bne	3d23c <luaL_typerror@@Base+0x6ed0>
   3d24c:	str	r3, [sp, #24]
   3d250:	b	3d294 <luaL_typerror@@Base+0x6f28>
   3d254:	add	r0, sp, #560	; 0x230
   3d258:	ldr	r3, [r0, #-536]!	; 0xfffffde8
   3d25c:	add	r1, r0, #29
   3d260:	cmp	r3, r1
   3d264:	bcs	3d4b4 <luaL_typerror@@Base+0x7148>
   3d268:	mov	r3, #0
   3d26c:	str	r3, [sp, #44]	; 0x2c
   3d270:	orr	r1, r4, r2
   3d274:	bl	1b838 <_start@@Base+0x8488>
   3d278:	b	3d294 <luaL_typerror@@Base+0x6f28>
   3d27c:	ldr	r0, [pc, #2096]	; 3dab4 <luaL_typerror@@Base+0x7748>
   3d280:	tst	r4, #8388608	; 0x800000
   3d284:	ldr	r3, [pc, #2092]	; 3dab8 <luaL_typerror@@Base+0x774c>
   3d288:	moveq	r3, r0
   3d28c:	add	r0, sp, #24
   3d290:	bl	1b95c <_start@@Base+0x85ac>
   3d294:	ldr	r3, [sp, #44]	; 0x2c
   3d298:	cmp	r3, #0
   3d29c:	beq	3d5a0 <luaL_typerror@@Base+0x7234>
   3d2a0:	ldr	r1, [sp, #24]
   3d2a4:	ldr	r2, [sp, #28]
   3d2a8:	mov	r0, r5
   3d2ac:	sub	r2, r2, r1
   3d2b0:	bl	20260 <luaL_where@@Base+0x15c>
   3d2b4:	add	sp, sp, #564	; 0x234
   3d2b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d2bc:	tst	r4, #134217728	; 0x8000000
   3d2c0:	ldr	r3, [sp, #24]
   3d2c4:	beq	3d450 <luaL_typerror@@Base+0x70e4>
   3d2c8:	add	r0, sp, #24
   3d2cc:	add	r1, r0, #29
   3d2d0:	cmp	r3, r1
   3d2d4:	bcc	3d268 <luaL_typerror@@Base+0x6efc>
   3d2d8:	ldr	r1, [sp, #40]	; 0x28
   3d2dc:	mov	ip, #1
   3d2e0:	cmp	r1, #0
   3d2e4:	movne	r1, #32
   3d2e8:	strbne	r1, [r3, #-1]
   3d2ec:	subne	r3, r3, #1
   3d2f0:	str	ip, [sp, #40]	; 0x28
   3d2f4:	mov	ip, #108	; 0x6c
   3d2f8:	strb	ip, [r3, #-1]
   3d2fc:	mov	r1, r3
   3d300:	mov	ip, #111	; 0x6f
   3d304:	strb	ip, [r3, #-2]
   3d308:	strb	ip, [r3, #-3]
   3d30c:	mov	r3, #98	; 0x62
   3d310:	strb	r3, [r1, #-4]!
   3d314:	str	r1, [sp, #24]
   3d318:	b	3d270 <luaL_typerror@@Base+0x6f04>
   3d31c:	tst	r4, #8388608	; 0x800000
   3d320:	beq	3d554 <luaL_typerror@@Base+0x71e8>
   3d324:	ldr	r3, [sp, #24]
   3d328:	add	r2, sp, #48	; 0x30
   3d32c:	cmp	r3, r2
   3d330:	bls	3d570 <luaL_typerror@@Base+0x7204>
   3d334:	sub	r1, r3, #1
   3d338:	mov	r2, #38	; 0x26
   3d33c:	str	r1, [sp, #24]
   3d340:	strb	r2, [r3, #-1]
   3d344:	ldr	r3, [sp, #32]
   3d348:	uxth	r4, r4
   3d34c:	mov	ip, #1
   3d350:	ldr	r1, [r3]
   3d354:	str	ip, [sp, #40]	; 0x28
   3d358:	mov	r2, #0
   3d35c:	add	r1, r1, r4, lsl #4
   3d360:	b	3d044 <luaL_typerror@@Base+0x6cd8>
   3d364:	ands	r0, r4, #67108864	; 0x4000000
   3d368:	ldr	r1, [sp, #24]
   3d36c:	bne	3d9c4 <luaL_typerror@@Base+0x7658>
   3d370:	add	r3, sp, #52	; 0x34
   3d374:	cmp	r1, r3
   3d378:	strcc	r0, [sp, #44]	; 0x2c
   3d37c:	bcc	3d3b8 <luaL_typerror@@Base+0x704c>
   3d380:	ldr	r3, [sp, #40]	; 0x28
   3d384:	mov	r0, #41	; 0x29
   3d388:	cmp	r3, #0
   3d38c:	movne	r3, #32
   3d390:	strbne	r3, [r1, #-1]
   3d394:	moveq	r3, r1
   3d398:	subne	r3, r1, #1
   3d39c:	mov	r1, #1
   3d3a0:	str	r1, [sp, #40]	; 0x28
   3d3a4:	sub	r1, r3, #3
   3d3a8:	strb	r0, [r3, #-1]
   3d3ac:	strb	r0, [r3, #-2]
   3d3b0:	strb	r0, [r3, #-3]
   3d3b4:	str	r1, [sp, #24]
   3d3b8:	cmp	r1, r8
   3d3bc:	bcs	3d3f0 <luaL_typerror@@Base+0x7084>
   3d3c0:	add	r3, sp, #76	; 0x4c
   3d3c4:	cmp	r1, r3
   3d3c8:	mov	r3, #0
   3d3cc:	str	r3, [sp, #44]	; 0x2c
   3d3d0:	bcs	3d738 <luaL_typerror@@Base+0x73cc>
   3d3d4:	mov	r3, #0
   3d3d8:	str	r3, [sp, #44]	; 0x2c
   3d3dc:	ldr	r3, [sp, #32]
   3d3e0:	uxth	r4, r4
   3d3e4:	ldr	r1, [r3]
   3d3e8:	add	r1, r1, r4, lsl #4
   3d3ec:	b	3d044 <luaL_typerror@@Base+0x6cd8>
   3d3f0:	umull	sl, fp, lr, r7
   3d3f4:	lsr	r3, fp, #3
   3d3f8:	add	r0, r3, r3, lsl #2
   3d3fc:	sub	r0, lr, r0, lsl #1
   3d400:	add	r0, r0, #48	; 0x30
   3d404:	subs	lr, r3, #0
   3d408:	strb	r0, [r1, #-1]!
   3d40c:	bne	3d3f0 <luaL_typerror@@Base+0x7084>
   3d410:	add	r3, sp, #76	; 0x4c
   3d414:	cmp	r1, r3
   3d418:	str	r1, [sp, #24]
   3d41c:	str	lr, [sp, #40]	; 0x28
   3d420:	bcc	3d3d4 <luaL_typerror@@Base+0x7068>
   3d424:	ldr	r3, [pc, #1680]	; 3dabc <luaL_typerror@@Base+0x7750>
   3d428:	sub	r9, r1, #27
   3d42c:	sub	lr, r3, #27
   3d430:	mov	r0, #1
   3d434:	str	r0, [sp, #40]	; 0x28
   3d438:	ldrb	r0, [r3, #-1]!
   3d43c:	cmp	lr, r3
   3d440:	strb	r0, [r1, #-1]!
   3d444:	bne	3d438 <luaL_typerror@@Base+0x70cc>
   3d448:	str	r9, [sp, #24]
   3d44c:	b	3d15c <luaL_typerror@@Base+0x6df0>
   3d450:	ands	r1, r4, #67108864	; 0x4000000
   3d454:	beq	3d5b8 <luaL_typerror@@Base+0x724c>
   3d458:	cmp	lr, #8
   3d45c:	beq	3d690 <luaL_typerror@@Base+0x7324>
   3d460:	cmp	lr, #4
   3d464:	beq	3d894 <luaL_typerror@@Base+0x7528>
   3d468:	add	r1, sp, #60	; 0x3c
   3d46c:	cmp	r3, r1
   3d470:	bcc	3d88c <luaL_typerror@@Base+0x7520>
   3d474:	ldr	r1, [sp, #40]	; 0x28
   3d478:	mov	r0, #1
   3d47c:	cmp	r1, #0
   3d480:	movne	r1, #32
   3d484:	strbne	r1, [r3, #-1]
   3d488:	subne	r3, r3, #1
   3d48c:	ldr	r1, [pc, #1580]	; 3dac0 <luaL_typerror@@Base+0x7754>
   3d490:	sub	ip, r3, #11
   3d494:	str	r0, [sp, #40]	; 0x28
   3d498:	ldrb	r0, [r1, #-1]!
   3d49c:	strb	r0, [r3, #-1]!
   3d4a0:	cmp	ip, r3
   3d4a4:	bne	3d498 <luaL_typerror@@Base+0x712c>
   3d4a8:	add	r0, sp, #560	; 0x230
   3d4ac:	str	ip, [r0, #-536]!	; 0xfffffde8
   3d4b0:	b	3d270 <luaL_typerror@@Base+0x6f04>
   3d4b4:	ldr	r1, [sp, #40]	; 0x28
   3d4b8:	mov	ip, #1
   3d4bc:	cmp	r1, #0
   3d4c0:	movne	r1, #32
   3d4c4:	strbne	r1, [r3, #-1]
   3d4c8:	subne	r3, r3, #1
   3d4cc:	str	ip, [sp, #40]	; 0x28
   3d4d0:	mov	ip, #100	; 0x64
   3d4d4:	strb	ip, [r3, #-1]
   3d4d8:	mov	ip, #105	; 0x69
   3d4dc:	strb	ip, [r3, #-2]
   3d4e0:	mov	r1, r3
   3d4e4:	mov	ip, #111	; 0x6f
   3d4e8:	strb	ip, [r3, #-3]
   3d4ec:	mov	r3, #118	; 0x76
   3d4f0:	strb	r3, [r1, #-4]!
   3d4f4:	str	r1, [sp, #24]
   3d4f8:	b	3d270 <luaL_typerror@@Base+0x6f04>
   3d4fc:	ldr	r3, [sp, #24]
   3d500:	add	r1, sp, #48	; 0x30
   3d504:	cmp	r3, r1
   3d508:	movls	r3, #0
   3d50c:	subhi	r0, r3, #1
   3d510:	movhi	r1, #40	; 0x28
   3d514:	strls	r3, [sp, #44]	; 0x2c
   3d518:	strhi	r0, [sp, #24]
   3d51c:	strbhi	r1, [r3, #-1]
   3d520:	ldr	r3, [sp, #28]
   3d524:	add	r1, sp, #560	; 0x230
   3d528:	cmp	r3, r1
   3d52c:	bcs	3d57c <luaL_typerror@@Base+0x7210>
   3d530:	add	r0, r3, #1
   3d534:	mov	r1, #41	; 0x29
   3d538:	str	r0, [sp, #28]
   3d53c:	strb	r1, [r3]
   3d540:	b	3d1a4 <luaL_typerror@@Base+0x6e38>
   3d544:	ldr	r3, [pc, #1400]	; 3dac4 <luaL_typerror@@Base+0x7758>
   3d548:	add	r0, sp, #24
   3d54c:	bl	1b95c <_start@@Base+0x85ac>
   3d550:	b	3d294 <luaL_typerror@@Base+0x6f28>
   3d554:	orr	r1, r4, r2
   3d558:	add	r0, sp, #24
   3d55c:	bl	1b838 <_start@@Base+0x8488>
   3d560:	ldr	r3, [sp, #24]
   3d564:	add	r2, sp, #48	; 0x30
   3d568:	cmp	r3, r2
   3d56c:	bhi	3d670 <luaL_typerror@@Base+0x7304>
   3d570:	mov	r3, #0
   3d574:	str	r3, [sp, #44]	; 0x2c
   3d578:	b	3d344 <luaL_typerror@@Base+0x6fd8>
   3d57c:	ldr	r3, [sp, #32]
   3d580:	uxth	r4, r4
   3d584:	mov	ip, #0
   3d588:	ldr	r1, [r3]
   3d58c:	str	ip, [sp, #44]	; 0x2c
   3d590:	add	r1, r1, r4, lsl #4
   3d594:	b	3d044 <luaL_typerror@@Base+0x6cd8>
   3d598:	mov	r3, #0
   3d59c:	str	r3, [sp, #44]	; 0x2c
   3d5a0:	mov	r0, r5
   3d5a4:	mov	r2, #1
   3d5a8:	ldr	r1, [pc, #1304]	; 3dac8 <luaL_typerror@@Base+0x775c>
   3d5ac:	bl	20260 <luaL_where@@Base+0x15c>
   3d5b0:	add	sp, sp, #564	; 0x234
   3d5b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d5b8:	cmp	lr, #1
   3d5bc:	and	r8, r4, #8388608	; 0x800000
   3d5c0:	beq	3d6d8 <luaL_typerror@@Base+0x736c>
   3d5c4:	cmp	lr, #7
   3d5c8:	bhi	3d7b8 <luaL_typerror@@Base+0x744c>
   3d5cc:	cmp	lr, #4
   3d5d0:	beq	3d920 <luaL_typerror@@Base+0x75b4>
   3d5d4:	add	r0, sp, #24
   3d5d8:	add	r1, r0, #30
   3d5dc:	cmp	r3, r1
   3d5e0:	bcc	3d930 <luaL_typerror@@Base+0x75c4>
   3d5e4:	ldr	r1, [sp, #40]	; 0x28
   3d5e8:	mov	ip, #1
   3d5ec:	cmp	r1, #0
   3d5f0:	movne	r1, #32
   3d5f4:	strbne	r1, [r3, #-1]
   3d5f8:	subne	r3, r3, #1
   3d5fc:	ldr	r1, [pc, #1224]	; 3dacc <luaL_typerror@@Base+0x7760>
   3d600:	sub	lr, r3, #5
   3d604:	str	ip, [sp, #40]	; 0x28
   3d608:	ldrb	ip, [r1, #-1]!
   3d60c:	strb	ip, [r3, #-1]!
   3d610:	cmp	lr, r3
   3d614:	bne	3d608 <luaL_typerror@@Base+0x729c>
   3d618:	str	lr, [sp, #24]
   3d61c:	cmp	r8, #0
   3d620:	beq	3d270 <luaL_typerror@@Base+0x6f04>
   3d624:	ldr	r3, [sp, #24]
   3d628:	add	r1, r0, #33	; 0x21
   3d62c:	cmp	r3, r1
   3d630:	bcc	3d268 <luaL_typerror@@Base+0x6efc>
   3d634:	ldr	r1, [sp, #40]	; 0x28
   3d638:	mov	ip, #1
   3d63c:	cmp	r1, #0
   3d640:	movne	r1, #32
   3d644:	strbne	r1, [r3, #-1]
   3d648:	subne	r3, r3, #1
   3d64c:	ldr	r1, [pc, #1148]	; 3dad0 <luaL_typerror@@Base+0x7764>
   3d650:	sub	lr, r3, #8
   3d654:	str	ip, [sp, #40]	; 0x28
   3d658:	ldrb	ip, [r1, #-1]!
   3d65c:	strb	ip, [r3, #-1]!
   3d660:	cmp	lr, r3
   3d664:	bne	3d658 <luaL_typerror@@Base+0x72ec>
   3d668:	str	lr, [sp, #24]
   3d66c:	b	3d270 <luaL_typerror@@Base+0x6f04>
   3d670:	sub	r1, r3, #1
   3d674:	mov	r2, #42	; 0x2a
   3d678:	str	r1, [sp, #24]
   3d67c:	strb	r2, [r3, #-1]
   3d680:	b	3d344 <luaL_typerror@@Base+0x6fd8>
   3d684:	mov	r3, #0
   3d688:	str	r3, [sp, #44]	; 0x2c
   3d68c:	b	3d100 <luaL_typerror@@Base+0x6d94>
   3d690:	add	r0, sp, #24
   3d694:	add	r1, r0, #31
   3d698:	cmp	r3, r1
   3d69c:	bcc	3d268 <luaL_typerror@@Base+0x6efc>
   3d6a0:	ldr	r1, [sp, #40]	; 0x28
   3d6a4:	mov	ip, #1
   3d6a8:	cmp	r1, #0
   3d6ac:	movne	r1, #32
   3d6b0:	strbne	r1, [r3, #-1]
   3d6b4:	subne	r3, r3, #1
   3d6b8:	ldr	r1, [pc, #1044]	; 3dad4 <luaL_typerror@@Base+0x7768>
   3d6bc:	sub	lr, r3, #6
   3d6c0:	str	ip, [sp, #40]	; 0x28
   3d6c4:	ldrb	ip, [r1, #-1]!
   3d6c8:	strb	ip, [r3, #-1]!
   3d6cc:	cmp	lr, r3
   3d6d0:	bne	3d6c4 <luaL_typerror@@Base+0x7358>
   3d6d4:	b	3d668 <luaL_typerror@@Base+0x72fc>
   3d6d8:	cmp	r8, #0
   3d6dc:	beq	3d8dc <luaL_typerror@@Base+0x7570>
   3d6e0:	add	r0, sp, #24
   3d6e4:	add	r1, r0, #29
   3d6e8:	cmp	r3, r1
   3d6ec:	bcc	3d268 <luaL_typerror@@Base+0x6efc>
   3d6f0:	ldr	r1, [sp, #40]	; 0x28
   3d6f4:	mov	ip, #1
   3d6f8:	cmp	r1, #0
   3d6fc:	movne	r1, #32
   3d700:	strbne	r1, [r3, #-1]
   3d704:	subne	r3, r3, #1
   3d708:	str	ip, [sp, #40]	; 0x28
   3d70c:	mov	ip, #114	; 0x72
   3d710:	strb	ip, [r3, #-1]
   3d714:	mov	ip, #97	; 0x61
   3d718:	strb	ip, [r3, #-2]
   3d71c:	mov	r1, r3
   3d720:	mov	ip, #104	; 0x68
   3d724:	strb	ip, [r3, #-3]
   3d728:	mov	r3, #99	; 0x63
   3d72c:	strb	r3, [r1, #-4]!
   3d730:	str	r1, [sp, #24]
   3d734:	b	3d270 <luaL_typerror@@Base+0x6f04>
   3d738:	ldr	r3, [sp, #40]	; 0x28
   3d73c:	cmp	r3, #0
   3d740:	movne	r3, #32
   3d744:	strbne	r3, [r1, #-1]
   3d748:	subne	r1, r1, #1
   3d74c:	b	3d424 <luaL_typerror@@Base+0x70b8>
   3d750:	tst	r4, #1048576	; 0x100000
   3d754:	beq	3d13c <luaL_typerror@@Base+0x6dd0>
   3d758:	add	r3, sp, #560	; 0x230
   3d75c:	cmp	r9, r3
   3d760:	bcs	3d57c <luaL_typerror@@Base+0x7210>
   3d764:	add	r1, r9, #1
   3d768:	mov	r3, #63	; 0x3f
   3d76c:	str	r1, [sp, #28]
   3d770:	strb	r3, [r9]
   3d774:	ldr	r9, [sp, #28]
   3d778:	b	3d13c <luaL_typerror@@Base+0x6dd0>
   3d77c:	cmp	r9, r3
   3d780:	bhi	3d134 <luaL_typerror@@Base+0x6dc8>
   3d784:	add	ip, sp, #12
   3d788:	add	r1, ip, #9
   3d78c:	mov	r3, #48	; 0x30
   3d790:	strb	r3, [sp, #21]
   3d794:	add	r1, r1, #1
   3d798:	add	ip, ip, #10
   3d79c:	b	3d7a4 <luaL_typerror@@Base+0x7438>
   3d7a0:	ldrb	r3, [r1], #1
   3d7a4:	cmp	r1, ip
   3d7a8:	strb	r3, [r9], #1
   3d7ac:	bcc	3d7a0 <luaL_typerror@@Base+0x7434>
   3d7b0:	str	r9, [sp, #28]
   3d7b4:	b	3d13c <luaL_typerror@@Base+0x6dd0>
   3d7b8:	add	r0, sp, #24
   3d7bc:	add	ip, r0, #27
   3d7c0:	cmp	r3, ip
   3d7c4:	strcc	r1, [sp, #44]	; 0x2c
   3d7c8:	movcc	r1, r3
   3d7cc:	bcc	3d804 <luaL_typerror@@Base+0x7498>
   3d7d0:	ldr	r1, [sp, #40]	; 0x28
   3d7d4:	mov	ip, #1
   3d7d8:	cmp	r1, #0
   3d7dc:	movne	r1, #32
   3d7e0:	strbne	r1, [r3, #-1]
   3d7e4:	subne	r3, r3, #1
   3d7e8:	mov	r1, #116	; 0x74
   3d7ec:	str	ip, [sp, #40]	; 0x28
   3d7f0:	strb	r1, [r3, #-1]
   3d7f4:	mov	ip, #95	; 0x5f
   3d7f8:	sub	r1, r3, #2
   3d7fc:	strb	ip, [r3, #-2]
   3d800:	str	r1, [sp, #24]
   3d804:	add	r3, r0, #35	; 0x23
   3d808:	cmp	r1, r3
   3d80c:	bcs	3d93c <luaL_typerror@@Base+0x75d0>
   3d810:	add	r3, sp, #52	; 0x34
   3d814:	cmp	r1, r3
   3d818:	mov	r3, #0
   3d81c:	str	r3, [sp, #44]	; 0x2c
   3d820:	bcc	3d978 <luaL_typerror@@Base+0x760c>
   3d824:	ldr	r3, [sp, #40]	; 0x28
   3d828:	cmp	r3, #0
   3d82c:	movne	r3, #32
   3d830:	strbne	r3, [r1, #-1]
   3d834:	subne	r1, r1, #1
   3d838:	mov	ip, #1
   3d83c:	str	ip, [sp, #40]	; 0x28
   3d840:	mov	ip, #116	; 0x74
   3d844:	strb	ip, [r1, #-1]
   3d848:	mov	r3, r1
   3d84c:	mov	ip, #110	; 0x6e
   3d850:	strb	ip, [r1, #-2]
   3d854:	mov	r1, #105	; 0x69
   3d858:	strb	r1, [r3, #-3]!
   3d85c:	str	r3, [sp, #24]
   3d860:	cmp	r8, #0
   3d864:	beq	3d270 <luaL_typerror@@Base+0x6f04>
   3d868:	ldr	r3, [sp, #24]
   3d86c:	add	r1, sp, #48	; 0x30
   3d870:	cmp	r3, r1
   3d874:	bls	3d268 <luaL_typerror@@Base+0x6efc>
   3d878:	sub	ip, r3, #1
   3d87c:	mov	r1, #117	; 0x75
   3d880:	str	ip, [sp, #24]
   3d884:	strb	r1, [r3, #-1]
   3d888:	b	3d270 <luaL_typerror@@Base+0x6f04>
   3d88c:	add	r0, sp, #24
   3d890:	b	3d268 <luaL_typerror@@Base+0x6efc>
   3d894:	add	r0, sp, #24
   3d898:	add	r1, r0, #30
   3d89c:	cmp	r3, r1
   3d8a0:	bcc	3d268 <luaL_typerror@@Base+0x6efc>
   3d8a4:	ldr	r1, [sp, #40]	; 0x28
   3d8a8:	mov	ip, #1
   3d8ac:	cmp	r1, #0
   3d8b0:	movne	r1, #32
   3d8b4:	strbne	r1, [r3, #-1]
   3d8b8:	subne	r3, r3, #1
   3d8bc:	ldr	r1, [pc, #532]	; 3dad8 <luaL_typerror@@Base+0x776c>
   3d8c0:	sub	lr, r3, #5
   3d8c4:	str	ip, [sp, #40]	; 0x28
   3d8c8:	ldrb	ip, [r1, #-1]!
   3d8cc:	strb	ip, [r3, #-1]!
   3d8d0:	cmp	lr, r3
   3d8d4:	bne	3d8c8 <luaL_typerror@@Base+0x755c>
   3d8d8:	b	3d668 <luaL_typerror@@Base+0x72fc>
   3d8dc:	add	r1, sp, #60	; 0x3c
   3d8e0:	cmp	r3, r1
   3d8e4:	bcc	3d88c <luaL_typerror@@Base+0x7520>
   3d8e8:	ldr	r1, [sp, #40]	; 0x28
   3d8ec:	mov	r0, #1
   3d8f0:	cmp	r1, #0
   3d8f4:	movne	r1, #32
   3d8f8:	strbne	r1, [r3, #-1]
   3d8fc:	subne	r3, r3, #1
   3d900:	ldr	r1, [pc, #468]	; 3dadc <luaL_typerror@@Base+0x7770>
   3d904:	sub	ip, r3, #11
   3d908:	str	r0, [sp, #40]	; 0x28
   3d90c:	ldrb	r0, [r1, #-1]!
   3d910:	strb	r0, [r3, #-1]!
   3d914:	cmp	ip, r3
   3d918:	bne	3d90c <luaL_typerror@@Base+0x75a0>
   3d91c:	b	3d4a8 <luaL_typerror@@Base+0x713c>
   3d920:	add	r1, sp, #52	; 0x34
   3d924:	cmp	r3, r1
   3d928:	bcs	3da14 <luaL_typerror@@Base+0x76a8>
   3d92c:	add	r0, sp, #24
   3d930:	mov	r3, #0
   3d934:	str	r3, [sp, #44]	; 0x2c
   3d938:	b	3d61c <luaL_typerror@@Base+0x72b0>
   3d93c:	ldr	r9, [pc, #360]	; 3daac <luaL_typerror@@Base+0x7740>
   3d940:	lsl	lr, lr, #3
   3d944:	umull	r6, r7, lr, r9
   3d948:	lsr	r3, r7, #3
   3d94c:	add	ip, r3, r3, lsl #2
   3d950:	sub	lr, lr, ip, lsl #1
   3d954:	add	ip, lr, #48	; 0x30
   3d958:	subs	lr, r3, #0
   3d95c:	strb	ip, [r1, #-1]!
   3d960:	bne	3d944 <luaL_typerror@@Base+0x75d8>
   3d964:	add	r3, sp, #52	; 0x34
   3d968:	cmp	r1, r3
   3d96c:	str	r1, [sp, #24]
   3d970:	str	lr, [sp, #40]	; 0x28
   3d974:	bcs	3d838 <luaL_typerror@@Base+0x74cc>
   3d978:	mov	r3, #0
   3d97c:	str	r3, [sp, #44]	; 0x2c
   3d980:	b	3d860 <luaL_typerror@@Base+0x74f4>
   3d984:	mov	r0, lr
   3d988:	str	r2, [sp, #4]
   3d98c:	bl	6da8c <luaL_openlibs@@Base+0x42cc>
   3d990:	add	ip, sp, #12
   3d994:	ldr	r2, [sp, #4]
   3d998:	add	r1, ip, #10
   3d99c:	umull	sl, fp, r0, r7
   3d9a0:	lsr	lr, fp, #3
   3d9a4:	add	r3, lr, lr, lsl #2
   3d9a8:	sub	r3, r0, r3, lsl #1
   3d9ac:	add	r3, r3, #48	; 0x30
   3d9b0:	subs	r0, lr, #0
   3d9b4:	uxtb	r3, r3
   3d9b8:	strb	r3, [r1, #-1]!
   3d9bc:	bne	3d99c <luaL_typerror@@Base+0x7630>
   3d9c0:	b	3d794 <luaL_typerror@@Base+0x7428>
   3d9c4:	cmp	lr, #8
   3d9c8:	beq	3da58 <luaL_typerror@@Base+0x76ec>
   3d9cc:	add	r3, sp, #56	; 0x38
   3d9d0:	cmp	r1, r3
   3d9d4:	bcc	3d598 <luaL_typerror@@Base+0x722c>
   3d9d8:	ldr	r3, [sp, #40]	; 0x28
   3d9dc:	mov	r2, #1
   3d9e0:	cmp	r3, #0
   3d9e4:	movne	r3, #32
   3d9e8:	strbne	r3, [r1, #-1]
   3d9ec:	subne	r1, r1, #1
   3d9f0:	ldr	r3, [pc, #232]	; 3dae0 <luaL_typerror@@Base+0x7774>
   3d9f4:	sub	r0, r1, #7
   3d9f8:	str	r2, [sp, #40]	; 0x28
   3d9fc:	ldrb	r2, [r3, #-1]!
   3da00:	strb	r2, [r1, #-1]!
   3da04:	cmp	r0, r1
   3da08:	bne	3d9fc <luaL_typerror@@Base+0x7690>
   3da0c:	str	r0, [sp, #24]
   3da10:	b	3d294 <luaL_typerror@@Base+0x6f28>
   3da14:	ldr	r1, [sp, #40]	; 0x28
   3da18:	mov	r0, #1
   3da1c:	cmp	r1, #0
   3da20:	movne	r1, #32
   3da24:	strbne	r1, [r3, #-1]
   3da28:	subne	r3, r3, #1
   3da2c:	str	r0, [sp, #40]	; 0x28
   3da30:	mov	r0, #116	; 0x74
   3da34:	strb	r0, [r3, #-1]
   3da38:	mov	r0, #110	; 0x6e
   3da3c:	strb	r0, [r3, #-2]
   3da40:	mov	r1, r3
   3da44:	add	r0, sp, #560	; 0x230
   3da48:	mov	r3, #105	; 0x69
   3da4c:	strb	r3, [r1, #-3]!
   3da50:	str	r1, [r0, #-536]!	; 0xfffffde8
   3da54:	b	3d61c <luaL_typerror@@Base+0x72b0>
   3da58:	add	r3, sp, #54	; 0x36
   3da5c:	cmp	r1, r3
   3da60:	movcc	r3, #0
   3da64:	strcc	r3, [sp, #44]	; 0x2c
   3da68:	bcc	3d9cc <luaL_typerror@@Base+0x7660>
   3da6c:	ldr	r3, [sp, #40]	; 0x28
   3da70:	ldr	r2, [pc, #96]	; 3dad8 <luaL_typerror@@Base+0x776c>
   3da74:	cmp	r3, #0
   3da78:	movne	r3, #32
   3da7c:	strbne	r3, [r1, #-1]
   3da80:	subne	r1, r1, #1
   3da84:	sub	r3, r1, #5
   3da88:	mov	r0, #1
   3da8c:	str	r0, [sp, #40]	; 0x28
   3da90:	ldrb	r0, [r2, #-1]!
   3da94:	strb	r0, [r1, #-1]!
   3da98:	cmp	r3, r1
   3da9c:	bne	3da90 <luaL_typerror@@Base+0x7724>
   3daa0:	mov	r1, r3
   3daa4:	str	r3, [sp, #24]
   3daa8:	b	3d9cc <luaL_typerror@@Base+0x7660>
   3daac:	stclgt	12, cr12, [ip], {205}	; 0xcd
   3dab0:	andeq	r2, r7, r1, ror #27
   3dab4:	muleq	r7, r8, sp
   3dab8:	muleq	r7, r0, sp
   3dabc:	andeq	r2, r7, pc, lsl #28
   3dac0:			; <UNDEFINED> instruction: 0x00072dbb
   3dac4:	andeq	r2, r7, r4, ror #27
   3dac8:	strdeq	r2, [r7], -r0
   3dacc:	andeq	r2, r7, sp, asr #27
   3dad0:	ldrdeq	r2, [r7], -r8
   3dad4:	andeq	r2, r7, r6, lsr #27
   3dad8:	andeq	r2, r7, sp, lsr #27
   3dadc:	andeq	r2, r7, r7, asr #27
   3dae0:	strdeq	r2, [r7], -r3
   3dae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3dae8:	mov	r5, r1
   3daec:	ldr	r8, [r1, #24]
   3daf0:	sub	sp, sp, #12
   3daf4:	cmp	r8, r2
   3daf8:	mov	r4, r2
   3dafc:	mov	sl, r3
   3db00:	ldr	r6, [r1, #20]
   3db04:	ldr	r7, [r1, #28]
   3db08:	mov	r9, r0
   3db0c:	bcs	3dbb0 <luaL_typerror@@Base+0x7844>
   3db10:	cmp	r2, #134217729	; 0x8000001
   3db14:	bhi	3dd4c <luaL_typerror@@Base+0x79e0>
   3db18:	ldrsb	r3, [r1, #7]
   3db1c:	lsl	r2, r2, #3
   3db20:	ldr	fp, [r1, #8]
   3db24:	cmp	r3, #0
   3db28:	mov	ip, r2
   3db2c:	str	r2, [sp]
   3db30:	ble	3dd14 <luaL_typerror@@Base+0x79a8>
   3db34:	mov	r2, #0
   3db38:	mov	r3, ip
   3db3c:	mov	r1, r2
   3db40:	bl	205b0 <luaL_where@@Base+0x4ac>
   3db44:	ldrb	r3, [r5, #7]
   3db48:	cmp	r8, #0
   3db4c:	streq	r8, [sp, #4]
   3db50:	mvn	r3, r3, lsl #25
   3db54:	mvn	r3, r3, lsr #25
   3db58:	strb	r3, [r5, #7]
   3db5c:	beq	3db84 <luaL_typerror@@Base+0x7818>
   3db60:	lsl	r3, r8, #3
   3db64:	sub	fp, fp, r0
   3db68:	add	ip, r0, r3
   3db6c:	mov	r1, r0
   3db70:	str	r3, [sp, #4]
   3db74:	ldrd	r2, [fp, r1]
   3db78:	strd	r2, [r1], #8
   3db7c:	cmp	r1, ip
   3db80:	bne	3db74 <luaL_typerror@@Base+0x7808>
   3db84:	ldr	r3, [sp, #4]
   3db88:	ldr	r2, [sp]
   3db8c:	add	r3, r0, r3
   3db90:	add	r2, r0, r2
   3db94:	mvn	r1, #0
   3db98:	str	r0, [r5, #8]
   3db9c:	str	r4, [r5, #24]
   3dba0:	str	r1, [r3, #4]
   3dba4:	add	r3, r3, #8
   3dba8:	cmp	r2, r3
   3dbac:	bne	3dba0 <luaL_typerror@@Base+0x7834>
   3dbb0:	cmp	sl, #0
   3dbb4:	beq	3dcf8 <luaL_typerror@@Base+0x798c>
   3dbb8:	cmp	sl, #26
   3dbbc:	bhi	3dd4c <luaL_typerror@@Base+0x79e0>
   3dbc0:	mov	fp, #24
   3dbc4:	mov	r2, #0
   3dbc8:	lsl	fp, fp, sl
   3dbcc:	mov	r1, r2
   3dbd0:	mov	r3, fp
   3dbd4:	mov	r0, r9
   3dbd8:	bl	205b0 <luaL_where@@Base+0x4ac>
   3dbdc:	mvn	r3, #0
   3dbe0:	mov	r2, #0
   3dbe4:	mvn	sl, r3, lsl sl
   3dbe8:	add	fp, r0, fp
   3dbec:	str	r0, [r5, #20]
   3dbf0:	str	fp, [r0, #20]
   3dbf4:	str	sl, [r5, #28]
   3dbf8:	str	r2, [r0, #16]
   3dbfc:	str	r3, [r0, #12]
   3dc00:	str	r3, [r0, #4]
   3dc04:	add	r0, r0, #24
   3dc08:	cmp	r0, fp
   3dc0c:	bne	3dbf8 <luaL_typerror@@Base+0x788c>
   3dc10:	cmp	r8, r4
   3dc14:	bls	3dc6c <luaL_typerror@@Base+0x7900>
   3dc18:	ldr	r3, [r5, #8]
   3dc1c:	lsl	fp, r4, #3
   3dc20:	add	sl, r3, fp
   3dc24:	str	r3, [sp]
   3dc28:	str	r4, [r5, #24]
   3dc2c:	ldr	r3, [sl, #4]
   3dc30:	cmn	r3, #1
   3dc34:	beq	3dc50 <luaL_typerror@@Base+0x78e4>
   3dc38:	mov	r2, r4
   3dc3c:	mov	r1, r5
   3dc40:	mov	r0, r9
   3dc44:	bl	3e200 <luaL_typerror@@Base+0x7e94>
   3dc48:	ldrd	r2, [sl]
   3dc4c:	strd	r2, [r0]
   3dc50:	add	r4, r4, #1
   3dc54:	cmp	r8, r4
   3dc58:	add	sl, sl, #8
   3dc5c:	bne	3dc2c <luaL_typerror@@Base+0x78c0>
   3dc60:	ldrsb	r3, [r5, #7]
   3dc64:	cmp	r3, #0
   3dc68:	ble	3dd30 <luaL_typerror@@Base+0x79c4>
   3dc6c:	cmp	r7, #0
   3dc70:	beq	3dd0c <luaL_typerror@@Base+0x79a0>
   3dc74:	add	r7, r7, r7, lsl #1
   3dc78:	add	r4, r6, #24
   3dc7c:	lsl	r7, r7, #3
   3dc80:	add	r8, r4, r7
   3dc84:	mov	sl, r6
   3dc88:	b	3dc90 <luaL_typerror@@Base+0x7924>
   3dc8c:	add	r4, r4, #24
   3dc90:	ldr	r3, [r6, #4]
   3dc94:	cmn	r3, #1
   3dc98:	beq	3dcb4 <luaL_typerror@@Base+0x7948>
   3dc9c:	add	r2, r6, #8
   3dca0:	mov	r1, r5
   3dca4:	mov	r0, r9
   3dca8:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   3dcac:	ldrd	r2, [r6]
   3dcb0:	strd	r2, [r0]
   3dcb4:	cmp	r8, r4
   3dcb8:	mov	r6, r4
   3dcbc:	bne	3dc8c <luaL_typerror@@Base+0x7920>
   3dcc0:	ldr	r3, [r9, #8]
   3dcc4:	add	r7, r7, #24
   3dcc8:	mov	r2, r7
   3dccc:	ldr	r0, [r3, #20]
   3dcd0:	ldr	lr, [r3, #12]
   3dcd4:	sub	r7, r0, r7
   3dcd8:	str	r7, [r3, #20]
   3dcdc:	ldr	r0, [r3, #16]
   3dce0:	mov	r1, sl
   3dce4:	mov	r3, #0
   3dce8:	mov	ip, lr
   3dcec:	add	sp, sp, #12
   3dcf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3dcf4:	bx	ip
   3dcf8:	ldr	r3, [r9, #8]
   3dcfc:	str	sl, [r5, #28]
   3dd00:	add	r3, r3, #144	; 0x90
   3dd04:	str	r3, [r5, #20]
   3dd08:	b	3dc10 <luaL_typerror@@Base+0x78a4>
   3dd0c:	add	sp, sp, #12
   3dd10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dd14:	lsl	r3, r8, #3
   3dd18:	str	r3, [sp, #4]
   3dd1c:	mov	r2, r3
   3dd20:	mov	r1, fp
   3dd24:	ldr	r3, [sp]
   3dd28:	bl	205b0 <luaL_where@@Base+0x4ac>
   3dd2c:	b	3db84 <luaL_typerror@@Base+0x7818>
   3dd30:	mov	r3, fp
   3dd34:	lsl	r2, r8, #3
   3dd38:	ldr	r1, [sp]
   3dd3c:	mov	r0, r9
   3dd40:	bl	205b0 <luaL_where@@Base+0x4ac>
   3dd44:	str	r0, [r5, #8]
   3dd48:	b	3dc6c <luaL_typerror@@Base+0x7900>
   3dd4c:	mov	r0, r9
   3dd50:	mov	r1, #139	; 0x8b
   3dd54:	bl	20258 <luaL_where@@Base+0x154>
   3dd58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3dd5c:	sub	sp, sp, #124	; 0x7c
   3dd60:	add	r7, sp, #4
   3dd64:	str	r0, [sp, #4]
   3dd68:	mov	r6, r1
   3dd6c:	mov	r3, r7
   3dd70:	add	r0, sp, #116	; 0x74
   3dd74:	mov	r1, #0
   3dd78:	str	r1, [r3, #4]!
   3dd7c:	cmp	r3, r0
   3dd80:	bne	3dd78 <luaL_typerror@@Base+0x7a0c>
   3dd84:	ldr	r9, [r6, #24]
   3dd88:	cmp	r9, #0
   3dd8c:	moveq	r5, r9
   3dd90:	moveq	r4, #1
   3dd94:	beq	3de10 <luaL_typerror@@Base+0x7aa4>
   3dd98:	mov	r5, #0
   3dd9c:	mov	r1, r5
   3dda0:	mov	r4, r5
   3dda4:	mov	r8, r7
   3dda8:	mov	sl, #2
   3ddac:	sub	fp, r9, #1
   3ddb0:	lsl	r0, sl, r4
   3ddb4:	cmp	r9, r0
   3ddb8:	bhi	3df24 <luaL_typerror@@Base+0x7bb8>
   3ddbc:	cmp	fp, r1
   3ddc0:	mov	r0, fp
   3ddc4:	bcc	3de0c <luaL_typerror@@Base+0x7aa0>
   3ddc8:	ldr	r3, [r6, #8]
   3ddcc:	add	r3, r3, r1, lsl #3
   3ddd0:	mov	lr, #0
   3ddd4:	ldr	ip, [r3, #4]
   3ddd8:	add	r1, r1, #1
   3dddc:	cmn	ip, #1
   3dde0:	addne	lr, lr, #1
   3dde4:	cmp	r1, r0
   3dde8:	add	r3, r3, #8
   3ddec:	bls	3ddd4 <luaL_typerror@@Base+0x7a68>
   3ddf0:	add	r5, r5, lr
   3ddf4:	ldr	r3, [r8, #4]!
   3ddf8:	add	r4, r4, #1
   3ddfc:	add	lr, r3, lr
   3de00:	cmp	r4, #28
   3de04:	str	lr, [r8]
   3de08:	bne	3ddb0 <luaL_typerror@@Base+0x7a44>
   3de0c:	add	r4, r5, #1
   3de10:	ldr	r9, [r6, #28]
   3de14:	ldr	r0, [r6, #20]
   3de18:	mov	sl, #0
   3de1c:	add	r9, r9, r9, lsl #1
   3de20:	add	r8, r0, #24
   3de24:	add	r9, r8, r9, lsl #3
   3de28:	mov	fp, sl
   3de2c:	b	3de40 <luaL_typerror@@Base+0x7ad4>
   3de30:	cmp	r9, r8
   3de34:	mov	r0, r8
   3de38:	beq	3de78 <luaL_typerror@@Base+0x7b0c>
   3de3c:	add	r8, r8, #24
   3de40:	ldr	r3, [r0, #4]
   3de44:	cmn	r3, #1
   3de48:	beq	3de30 <luaL_typerror@@Base+0x7ac4>
   3de4c:	ldr	r3, [r0, #12]
   3de50:	add	sl, sl, #1
   3de54:	cmn	r3, #15
   3de58:	bhi	3de30 <luaL_typerror@@Base+0x7ac4>
   3de5c:	add	r0, r0, #8
   3de60:	add	r1, sp, #8
   3de64:	bl	1e1d4 <_start@@Base+0xae24>
   3de68:	cmp	r9, r8
   3de6c:	add	fp, fp, r0
   3de70:	mov	r0, r8
   3de74:	bne	3de3c <luaL_typerror@@Base+0x7ad0>
   3de78:	ldr	r3, [r2, #4]
   3de7c:	add	r5, fp, r5
   3de80:	cmn	r3, #15
   3de84:	add	r4, r4, sl
   3de88:	bls	3df50 <luaL_typerror@@Base+0x7be4>
   3de8c:	lsl	r3, r5, #1
   3de90:	cmp	r3, #1
   3de94:	movls	r2, #0
   3de98:	movhi	r2, #1
   3de9c:	cmp	r5, #0
   3dea0:	moveq	r2, #0
   3dea4:	cmp	r2, #0
   3dea8:	beq	3df00 <luaL_typerror@@Base+0x7b94>
   3deac:	mov	r2, #0
   3deb0:	mov	ip, #1
   3deb4:	mov	fp, r2
   3deb8:	mov	r0, r2
   3debc:	mov	r1, r2
   3dec0:	mov	r8, ip
   3dec4:	mov	sl, #2
   3dec8:	ldr	lr, [r7, #4]!
   3decc:	cmp	lr, #0
   3ded0:	beq	3dee8 <luaL_typerror@@Base+0x7b7c>
   3ded4:	add	r0, r0, lr
   3ded8:	lsl	r9, sl, r1
   3dedc:	cmp	ip, r0, lsl #1
   3dee0:	addcc	r2, r9, #1
   3dee4:	movcc	fp, r0
   3dee8:	add	r1, r1, #1
   3deec:	lsl	ip, r8, r1
   3def0:	cmp	r0, r5
   3def4:	cmpne	r3, ip
   3def8:	bhi	3dec8 <luaL_typerror@@Base+0x7b5c>
   3defc:	sub	r4, r4, fp
   3df00:	cmp	r4, #0
   3df04:	beq	3df38 <luaL_typerror@@Base+0x7bcc>
   3df08:	cmp	r4, #1
   3df0c:	beq	3df38 <luaL_typerror@@Base+0x7bcc>
   3df10:	sub	r4, r4, #1
   3df14:	clz	r3, r4
   3df18:	eor	r4, r3, #31
   3df1c:	add	r3, r4, #1
   3df20:	b	3df3c <luaL_typerror@@Base+0x7bd0>
   3df24:	cmp	r0, r1
   3df28:	ldr	r3, [r6, #8]
   3df2c:	movcc	lr, #0
   3df30:	bcs	3ddcc <luaL_typerror@@Base+0x7a60>
   3df34:	b	3ddf4 <luaL_typerror@@Base+0x7a88>
   3df38:	mov	r3, r4
   3df3c:	mov	r1, r6
   3df40:	ldr	r0, [sp, #4]
   3df44:	bl	3dae4 <luaL_typerror@@Base+0x7778>
   3df48:	add	sp, sp, #124	; 0x7c
   3df4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3df50:	mov	r0, r2
   3df54:	add	r1, sp, #8
   3df58:	bl	1e1d4 <_start@@Base+0xae24>
   3df5c:	add	r5, r5, r0
   3df60:	b	3de8c <luaL_typerror@@Base+0x7b20>
   3df64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3df68:	mov	r6, r1
   3df6c:	ldr	r9, [r1, #20]
   3df70:	ldr	r4, [r1, #28]
   3df74:	sub	sp, sp, #8
   3df78:	mov	r1, r4
   3df7c:	mov	r8, r0
   3df80:	mov	r0, r9
   3df84:	mov	r7, r2
   3df88:	bl	1af68 <_start@@Base+0x7bb8>
   3df8c:	ldr	r1, [r0, #4]
   3df90:	mov	r5, r0
   3df94:	adds	r1, r1, #1
   3df98:	movne	r1, #1
   3df9c:	cmp	r4, #0
   3dfa0:	moveq	r1, #1
   3dfa4:	cmp	r1, #0
   3dfa8:	beq	3e01c <luaL_typerror@@Base+0x7cb0>
   3dfac:	ldr	r4, [r9, #20]
   3dfb0:	cmp	r9, r4
   3dfb4:	beq	3dfe4 <luaL_typerror@@Base+0x7c78>
   3dfb8:	ldr	r3, [r4, #-12]
   3dfbc:	sub	r4, r4, #24
   3dfc0:	cmn	r3, #1
   3dfc4:	bne	3dfd8 <luaL_typerror@@Base+0x7c6c>
   3dfc8:	b	3e044 <luaL_typerror@@Base+0x7cd8>
   3dfcc:	ldr	r3, [r4, #12]
   3dfd0:	cmn	r3, #1
   3dfd4:	beq	3e044 <luaL_typerror@@Base+0x7cd8>
   3dfd8:	cmp	r9, r4
   3dfdc:	sub	r4, r4, #24
   3dfe0:	bne	3dfcc <luaL_typerror@@Base+0x7c60>
   3dfe4:	mov	r2, r7
   3dfe8:	mov	r1, r6
   3dfec:	mov	r0, r8
   3dff0:	bl	3dd58 <luaL_typerror@@Base+0x79ec>
   3dff4:	mov	r2, r7
   3dff8:	mov	r1, r6
   3dffc:	mov	r0, r8
   3e000:	add	sp, sp, #8
   3e004:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   3e008:	b	3e288 <luaL_typerror@@Base+0x7f1c>
   3e00c:	ldr	r3, [r5, #16]
   3e010:	mov	r0, r4
   3e014:	str	r3, [r4, #16]
   3e018:	str	r4, [r5, #16]
   3e01c:	ldrd	r2, [r7]
   3e020:	cmp	r3, #-2147483648	; 0x80000000
   3e024:	cmpeq	r2, #0
   3e028:	strd	r2, [r0, #8]
   3e02c:	beq	3e11c <luaL_typerror@@Base+0x7db0>
   3e030:	ldrb	r3, [r6, #4]
   3e034:	tst	r3, #4
   3e038:	bne	3e12c <luaL_typerror@@Base+0x7dc0>
   3e03c:	add	sp, sp, #8
   3e040:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e044:	str	r4, [r9, #20]
   3e048:	ldr	r9, [r6, #20]
   3e04c:	ldr	sl, [r6, #28]
   3e050:	mov	r0, r9
   3e054:	mov	r1, sl
   3e058:	add	r2, r5, #8
   3e05c:	bl	1af68 <_start@@Base+0x7bb8>
   3e060:	cmp	r5, r0
   3e064:	mov	r1, r0
   3e068:	bne	3e074 <luaL_typerror@@Base+0x7d08>
   3e06c:	b	3e00c <luaL_typerror@@Base+0x7ca0>
   3e070:	mov	r1, r0
   3e074:	ldr	r0, [r1, #16]
   3e078:	cmp	r0, r5
   3e07c:	bne	3e070 <luaL_typerror@@Base+0x7d04>
   3e080:	ldrd	r2, [r5]
   3e084:	str	r4, [r1, #16]
   3e088:	ldr	r1, [r5, #16]
   3e08c:	strd	r2, [sp]
   3e090:	ldrd	r2, [r5, #8]
   3e094:	str	r1, [r4, #16]
   3e098:	strd	r2, [r4, #8]
   3e09c:	ldrd	r2, [sp]
   3e0a0:	strd	r2, [r4]
   3e0a4:	mov	r2, #0
   3e0a8:	mvn	r3, #0
   3e0ac:	str	r2, [r5, #16]
   3e0b0:	str	r3, [r5, #4]
   3e0b4:	b	3e0bc <luaL_typerror@@Base+0x7d50>
   3e0b8:	mov	r4, r2
   3e0bc:	ldr	r3, [r4, #16]
   3e0c0:	cmp	r3, #0
   3e0c4:	beq	3e01c <luaL_typerror@@Base+0x7cb0>
   3e0c8:	ldr	r1, [r3, #12]
   3e0cc:	mov	r2, r3
   3e0d0:	cmn	r1, #5
   3e0d4:	bne	3e0b8 <luaL_typerror@@Base+0x7d4c>
   3e0d8:	ldr	r1, [r3, #4]
   3e0dc:	cmn	r1, #1
   3e0e0:	beq	3e0b8 <luaL_typerror@@Base+0x7d4c>
   3e0e4:	ldr	r1, [r3, #8]
   3e0e8:	ldr	r1, [r1, #8]
   3e0ec:	and	r1, r1, sl
   3e0f0:	add	r1, r1, r1, lsl #1
   3e0f4:	add	r1, r9, r1, lsl #3
   3e0f8:	cmp	r0, r1
   3e0fc:	bne	3e0b8 <luaL_typerror@@Base+0x7d4c>
   3e100:	ldr	r1, [r3, #16]
   3e104:	mov	r2, r4
   3e108:	str	r1, [r4, #16]
   3e10c:	ldr	r1, [r0, #16]
   3e110:	str	r1, [r3, #16]
   3e114:	str	r3, [r0, #16]
   3e118:	b	3e0b8 <luaL_typerror@@Base+0x7d4c>
   3e11c:	mov	r2, #0
   3e120:	mov	r3, #0
   3e124:	strd	r2, [r0, #8]
   3e128:	b	3e030 <luaL_typerror@@Base+0x7cc4>
   3e12c:	ldr	r2, [r8, #8]
   3e130:	bic	r3, r3, #4
   3e134:	strb	r3, [r6, #4]
   3e138:	ldr	r3, [r2, #48]	; 0x30
   3e13c:	str	r3, [r6, #12]
   3e140:	str	r6, [r2, #48]	; 0x30
   3e144:	b	3e03c <luaL_typerror@@Base+0x7cd0>
   3e148:	ldr	r3, [r1, #28]
   3e14c:	ldr	ip, [r2, #8]
   3e150:	and	ip, ip, r3
   3e154:	ldr	r3, [r1, #20]
   3e158:	add	ip, ip, ip, lsl #1
   3e15c:	add	r3, r3, ip, lsl #3
   3e160:	b	3e170 <luaL_typerror@@Base+0x7e04>
   3e164:	ldr	r3, [r3, #16]
   3e168:	cmp	r3, #0
   3e16c:	beq	3e190 <luaL_typerror@@Base+0x7e24>
   3e170:	ldr	ip, [r3, #12]
   3e174:	cmn	ip, #5
   3e178:	bne	3e164 <luaL_typerror@@Base+0x7df8>
   3e17c:	ldr	ip, [r3, #8]
   3e180:	cmp	r2, ip
   3e184:	bne	3e164 <luaL_typerror@@Base+0x7df8>
   3e188:	mov	r0, r3
   3e18c:	bx	lr
   3e190:	push	{lr}		; (str lr, [sp, #-4]!)
   3e194:	mov	r3, r2
   3e198:	sub	sp, sp, #12
   3e19c:	mvn	ip, #4
   3e1a0:	mov	r2, sp
   3e1a4:	stm	sp, {r3, ip}
   3e1a8:	bl	3df64 <luaL_typerror@@Base+0x7bf8>
   3e1ac:	add	sp, sp, #12
   3e1b0:	pop	{pc}		; (ldr pc, [sp], #4)
   3e1b4:	push	{r4, r5, r6, r7, r8, lr}
   3e1b8:	mov	r4, r0
   3e1bc:	mov	r0, r2
   3e1c0:	mov	r6, r3
   3e1c4:	mov	r5, r2
   3e1c8:	mov	r7, r1
   3e1cc:	bl	12e80 <strlen@plt>
   3e1d0:	mov	r1, r5
   3e1d4:	mov	r2, r0
   3e1d8:	mov	r0, r4
   3e1dc:	bl	20260 <luaL_where@@Base+0x15c>
   3e1e0:	mov	r1, r7
   3e1e4:	mov	r2, r0
   3e1e8:	mov	r0, r4
   3e1ec:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   3e1f0:	mvn	r2, #13
   3e1f4:	str	r6, [r0]
   3e1f8:	str	r2, [r0, #4]
   3e1fc:	pop	{r4, r5, r6, r7, r8, pc}
   3e200:	vmov	s15, r2
   3e204:	push	{lr}		; (str lr, [sp, #-4]!)
   3e208:	sub	sp, sp, #12
   3e20c:	ldr	lr, [r1, #28]
   3e210:	vcvt.f64.s32	d6, s15
   3e214:	ldr	r3, [r1, #20]
   3e218:	vmov	r2, s13
   3e21c:	vmov	ip, s12
   3e220:	vstr	d6, [sp]
   3e224:	lsl	r2, r2, #1
   3e228:	eor	ip, ip, r2
   3e22c:	sub	ip, ip, r2, ror #18
   3e230:	eor	r2, ip, r2, ror #13
   3e234:	sub	r2, r2, ip, ror #19
   3e238:	and	r2, r2, lr
   3e23c:	add	r2, r2, r2, lsl #1
   3e240:	add	r3, r3, r2, lsl #3
   3e244:	ldr	r2, [r3, #12]
   3e248:	cmn	r2, #15
   3e24c:	bhi	3e260 <luaL_typerror@@Base+0x7ef4>
   3e250:	vldr	d7, [r3, #8]
   3e254:	vcmp.f64	d6, d7
   3e258:	vmrs	APSR_nzcv, fpscr
   3e25c:	beq	3e27c <luaL_typerror@@Base+0x7f10>
   3e260:	ldr	r3, [r3, #16]
   3e264:	cmp	r3, #0
   3e268:	bne	3e244 <luaL_typerror@@Base+0x7ed8>
   3e26c:	mov	r2, sp
   3e270:	bl	3df64 <luaL_typerror@@Base+0x7bf8>
   3e274:	add	sp, sp, #12
   3e278:	pop	{pc}		; (ldr pc, [sp], #4)
   3e27c:	mov	r0, r3
   3e280:	add	sp, sp, #12
   3e284:	pop	{pc}		; (ldr pc, [sp], #4)
   3e288:	mov	ip, #0
   3e28c:	strb	ip, [r1, #6]
   3e290:	ldr	ip, [r2, #4]
   3e294:	cmn	ip, #5
   3e298:	beq	3e384 <luaL_typerror@@Base+0x8018>
   3e29c:	cmn	ip, #14
   3e2a0:	push	{r4, r5, r6, r7, r8, lr}
   3e2a4:	mov	r6, r1
   3e2a8:	beq	3e338 <luaL_typerror@@Base+0x7fcc>
   3e2ac:	cmn	ip, #15
   3e2b0:	mov	r7, r0
   3e2b4:	mov	r5, r2
   3e2b8:	bls	3e304 <luaL_typerror@@Base+0x7f98>
   3e2bc:	cmn	ip, #1
   3e2c0:	beq	3e38c <luaL_typerror@@Base+0x8020>
   3e2c4:	mov	r2, r5
   3e2c8:	ldr	r1, [r6, #28]
   3e2cc:	ldr	r0, [r6, #20]
   3e2d0:	bl	1af68 <_start@@Base+0x7bb8>
   3e2d4:	mov	r4, r0
   3e2d8:	b	3e2e8 <luaL_typerror@@Base+0x7f7c>
   3e2dc:	ldr	r4, [r4, #16]
   3e2e0:	cmp	r4, #0
   3e2e4:	beq	3e370 <luaL_typerror@@Base+0x8004>
   3e2e8:	mov	r1, r5
   3e2ec:	add	r0, r4, #8
   3e2f0:	bl	17394 <_start@@Base+0x3fe4>
   3e2f4:	cmp	r0, #0
   3e2f8:	beq	3e2dc <luaL_typerror@@Base+0x7f70>
   3e2fc:	mov	r0, r4
   3e300:	pop	{r4, r5, r6, r7, r8, pc}
   3e304:	vldr	d7, [r2]
   3e308:	vcvt.s32.f64	s13, d7
   3e30c:	vcvt.f64.s32	d5, s13
   3e310:	vcmp.f64	d5, d7
   3e314:	vmrs	APSR_nzcv, fpscr
   3e318:	bne	3e354 <luaL_typerror@@Base+0x7fe8>
   3e31c:	vmov	r2, s13
   3e320:	ldr	r3, [r1, #24]
   3e324:	cmp	r3, r2
   3e328:	bls	3e368 <luaL_typerror@@Base+0x7ffc>
   3e32c:	ldr	r0, [r1, #8]
   3e330:	add	r0, r0, r2, lsl #3
   3e334:	pop	{r4, r5, r6, r7, r8, pc}
   3e338:	ldr	r2, [r2]
   3e33c:	ldr	ip, [r1, #24]
   3e340:	cmp	r2, ip
   3e344:	bcs	3e368 <luaL_typerror@@Base+0x7ffc>
   3e348:	ldr	r0, [r1, #8]
   3e34c:	add	r0, r0, r2, lsl #3
   3e350:	pop	{r4, r5, r6, r7, r8, pc}
   3e354:	vcmp.f64	d7, d7
   3e358:	vmrs	APSR_nzcv, fpscr
   3e35c:	beq	3e2c4 <luaL_typerror@@Base+0x7f58>
   3e360:	mov	r1, #154	; 0x9a
   3e364:	bl	20258 <luaL_where@@Base+0x154>
   3e368:	pop	{r4, r5, r6, r7, r8, lr}
   3e36c:	b	3e200 <luaL_typerror@@Base+0x7e94>
   3e370:	mov	r2, r5
   3e374:	mov	r1, r6
   3e378:	mov	r0, r7
   3e37c:	pop	{r4, r5, r6, r7, r8, lr}
   3e380:	b	3df64 <luaL_typerror@@Base+0x7bf8>
   3e384:	ldr	r2, [r2]
   3e388:	b	3e148 <luaL_typerror@@Base+0x7ddc>
   3e38c:	mov	r1, #173	; 0xad
   3e390:	bl	20258 <luaL_where@@Base+0x154>
   3e394:	push	{r4, r5, r6, r7, r8, lr}
   3e398:	mov	r8, r0
   3e39c:	ldr	r5, [r0, #8]
   3e3a0:	sub	sp, sp, #8
   3e3a4:	ldr	r3, [r5, #56]	; 0x38
   3e3a8:	ldr	r4, [r3]
   3e3ac:	cmp	r3, r4
   3e3b0:	moveq	r3, #0
   3e3b4:	ldrne	r2, [r4]
   3e3b8:	streq	r3, [r5, #56]	; 0x38
   3e3bc:	strne	r2, [r3]
   3e3c0:	ldrb	r1, [r4, #5]
   3e3c4:	ldrb	r3, [r4, #4]
   3e3c8:	ldrb	r2, [r5, #28]
   3e3cc:	cmp	r1, #10
   3e3d0:	bic	r3, r3, #7
   3e3d4:	and	r2, r2, #3
   3e3d8:	orr	r3, r3, r2
   3e3dc:	beq	3e440 <luaL_typerror@@Base+0x80d4>
   3e3e0:	ldr	r2, [r5, #116]	; 0x74
   3e3e4:	ldr	r0, [r4, #16]
   3e3e8:	ldr	r1, [r2]
   3e3ec:	cmp	r0, #0
   3e3f0:	str	r1, [r4]
   3e3f4:	str	r4, [r2]
   3e3f8:	strb	r3, [r4, #4]
   3e3fc:	beq	3e40c <luaL_typerror@@Base+0x80a0>
   3e400:	ldrb	r3, [r0, #6]
   3e404:	tst	r3, #4
   3e408:	beq	3e414 <luaL_typerror@@Base+0x80a8>
   3e40c:	add	sp, sp, #8
   3e410:	pop	{r4, r5, r6, r7, r8, pc}
   3e414:	ldr	r2, [r5, #240]	; 0xf0
   3e418:	mov	r1, #2
   3e41c:	bl	14a44 <_start@@Base+0x1694>
   3e420:	subs	r2, r0, #0
   3e424:	beq	3e40c <luaL_typerror@@Base+0x80a0>
   3e428:	mov	r3, r4
   3e42c:	mov	r1, r8
   3e430:	mov	r0, r5
   3e434:	bl	21034 <luaL_where@@Base+0xf30>
   3e438:	add	sp, sp, #8
   3e43c:	pop	{r4, r5, r6, r7, r8, pc}
   3e440:	ldr	r2, [r5, #228]	; 0xe4
   3e444:	ldr	r1, [r5, #36]	; 0x24
   3e448:	bic	r3, r3, #16
   3e44c:	str	r1, [r4]
   3e450:	ldr	r1, [r2, #20]
   3e454:	str	r4, [r5, #36]	; 0x24
   3e458:	mov	r2, sp
   3e45c:	strb	r3, [r4, #4]
   3e460:	mvn	r3, #10
   3e464:	str	r3, [sp, #4]
   3e468:	str	r4, [sp]
   3e46c:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   3e470:	ldr	r3, [r0, #4]
   3e474:	mov	ip, r0
   3e478:	cmn	r3, #1
   3e47c:	beq	3e40c <luaL_typerror@@Base+0x80a0>
   3e480:	mov	r3, #0
   3e484:	strb	r3, [r5, #30]
   3e488:	ldrd	r6, [r0]
   3e48c:	mvn	lr, #0
   3e490:	mov	r3, r4
   3e494:	strd	r6, [sp]
   3e498:	mov	r2, sp
   3e49c:	mov	r1, r8
   3e4a0:	mov	r0, r5
   3e4a4:	str	lr, [ip, #4]
   3e4a8:	bl	21034 <luaL_where@@Base+0xf30>
   3e4ac:	add	sp, sp, #8
   3e4b0:	pop	{r4, r5, r6, r7, r8, pc}
   3e4b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e4b8:	mov	r5, r0
   3e4bc:	ldr	r6, [r0, #8]
   3e4c0:	sub	sp, sp, #8
   3e4c4:	ldr	r3, [r6, #228]	; 0xe4
   3e4c8:	cmp	r3, #0
   3e4cc:	beq	3e524 <luaL_typerror@@Base+0x81b8>
   3e4d0:	ldr	r2, [r3, #20]
   3e4d4:	mov	r1, #0
   3e4d8:	ldr	r3, [r2, #28]
   3e4dc:	str	r1, [r2, #16]
   3e4e0:	cmp	r3, r1
   3e4e4:	ldr	r4, [r2, #20]
   3e4e8:	blt	3e524 <luaL_typerror@@Base+0x81b8>
   3e4ec:	add	r3, r3, r3, lsl #1
   3e4f0:	sub	r7, r4, #24
   3e4f4:	mvn	r8, #0
   3e4f8:	add	r4, r4, r3, lsl #3
   3e4fc:	ldr	r3, [r4, #4]
   3e500:	cmn	r3, #1
   3e504:	beq	3e514 <luaL_typerror@@Base+0x81a8>
   3e508:	ldr	r3, [r4, #12]
   3e50c:	cmn	r3, #11
   3e510:	beq	3e554 <luaL_typerror@@Base+0x81e8>
   3e514:	sub	r4, r4, #24
   3e518:	cmp	r7, r4
   3e51c:	bne	3e4fc <luaL_typerror@@Base+0x8190>
   3e520:	ldr	r6, [r5, #8]
   3e524:	ldr	r3, [r6, #56]	; 0x38
   3e528:	cmp	r3, #0
   3e52c:	beq	3e548 <luaL_typerror@@Base+0x81dc>
   3e530:	mov	r0, r5
   3e534:	bl	3e394 <luaL_typerror@@Base+0x8028>
   3e538:	ldr	r3, [r5, #8]
   3e53c:	ldr	r3, [r3, #56]	; 0x38
   3e540:	cmp	r3, #0
   3e544:	bne	3e530 <luaL_typerror@@Base+0x81c4>
   3e548:	mov	r0, #0
   3e54c:	add	sp, sp, #8
   3e550:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3e554:	ldr	r0, [r4, #8]
   3e558:	ldrb	ip, [r6, #28]
   3e55c:	mov	r3, r0
   3e560:	ldrb	r1, [r0, #4]
   3e564:	and	ip, ip, #3
   3e568:	mov	r2, sp
   3e56c:	and	r1, r1, #232	; 0xe8
   3e570:	orr	r1, r1, ip
   3e574:	strb	r1, [r0, #4]
   3e578:	ldrd	sl, [r4]
   3e57c:	mov	r1, r5
   3e580:	mov	r0, r6
   3e584:	strd	sl, [sp]
   3e588:	str	r8, [r4, #4]
   3e58c:	bl	21034 <luaL_where@@Base+0xf30>
   3e590:	b	3e514 <luaL_typerror@@Base+0x81a8>
   3e594:	push	{r4, lr}
   3e598:	mov	r4, r0
   3e59c:	sub	sp, sp, #8
   3e5a0:	ldr	r0, [r0, #8]
   3e5a4:	str	r1, [sp]
   3e5a8:	str	r2, [sp, #4]
   3e5ac:	ldr	r1, [r4]
   3e5b0:	mov	r2, sp
   3e5b4:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   3e5b8:	ldr	r2, [r0, #4]
   3e5bc:	mov	r3, r0
   3e5c0:	cmp	r2, #0
   3e5c4:	beq	3e5e4 <luaL_typerror@@Base+0x8278>
   3e5c8:	ldr	r0, [r4, #44]	; 0x2c
   3e5cc:	mov	r1, #0
   3e5d0:	add	r2, r0, #1
   3e5d4:	strd	r0, [r3]
   3e5d8:	str	r2, [r4, #44]	; 0x2c
   3e5dc:	add	sp, sp, #8
   3e5e0:	pop	{r4, pc}
   3e5e4:	ldr	r0, [r0]
   3e5e8:	add	sp, sp, #8
   3e5ec:	pop	{r4, pc}
   3e5f0:	push	{r4, lr}
   3e5f4:	mov	r4, r0
   3e5f8:	mov	r2, r1
   3e5fc:	ldr	r0, [r0, #8]
   3e600:	ldr	r1, [r4]
   3e604:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   3e608:	ldr	r2, [r0, #4]
   3e60c:	mov	r3, r0
   3e610:	cmp	r2, #0
   3e614:	beq	3e630 <luaL_typerror@@Base+0x82c4>
   3e618:	ldr	r0, [r4, #40]	; 0x28
   3e61c:	mov	r1, #0
   3e620:	add	r2, r0, #1
   3e624:	strd	r0, [r3]
   3e628:	str	r2, [r4, #40]	; 0x28
   3e62c:	pop	{r4, pc}
   3e630:	ldr	r0, [r0]
   3e634:	pop	{r4, pc}
   3e638:	push	{r4, r5, r6, lr}
   3e63c:	sub	sp, sp, #8
   3e640:	ldr	lr, [r0, #8]
   3e644:	ldr	ip, [lr, #228]	; 0xe4
   3e648:	ldr	ip, [ip, #20]
   3e64c:	ldr	r4, [ip, #16]
   3e650:	cmp	r4, #0
   3e654:	beq	3e6bc <luaL_typerror@@Base+0x8350>
   3e658:	ldrb	r4, [ip, #4]
   3e65c:	mvn	r5, #10
   3e660:	str	r5, [sp, #4]
   3e664:	tst	r4, #4
   3e668:	bicne	r4, r4, #4
   3e66c:	ldrne	r5, [lr, #48]	; 0x30
   3e670:	mov	r6, r1
   3e674:	strbne	r4, [ip, #4]
   3e678:	strne	r5, [ip, #12]
   3e67c:	str	r1, [sp]
   3e680:	strne	ip, [lr, #48]	; 0x30
   3e684:	mov	r5, r2
   3e688:	mov	r1, ip
   3e68c:	mov	r2, sp
   3e690:	mov	r4, r3
   3e694:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   3e698:	cmn	r4, #1
   3e69c:	streq	r4, [r0, #4]
   3e6a0:	strne	r5, [r0]
   3e6a4:	ldrbeq	r3, [r6, #4]
   3e6a8:	strne	r4, [r0, #4]
   3e6ac:	ldrbne	r3, [r6, #4]
   3e6b0:	biceq	r3, r3, #16
   3e6b4:	orrne	r3, r3, #16
   3e6b8:	strb	r3, [r6, #4]
   3e6bc:	add	sp, sp, #8
   3e6c0:	pop	{r4, r5, r6, pc}
   3e6c4:	push	{r4, lr}
   3e6c8:	mov	r4, r0
   3e6cc:	bl	3720c <luaL_typerror@@Base+0xea0>
   3e6d0:	ldr	lr, [r4, #16]
   3e6d4:	ldr	r2, [r4, #20]
   3e6d8:	add	r3, lr, #8
   3e6dc:	cmp	r2, r3
   3e6e0:	bls	3e758 <luaL_typerror@@Base+0x83ec>
   3e6e4:	ldr	r3, [r4, #8]
   3e6e8:	ldrh	r2, [r0, #6]
   3e6ec:	mov	r1, r0
   3e6f0:	ldr	r3, [r3, #228]	; 0xe4
   3e6f4:	ldr	ip, [r3]
   3e6f8:	str	r4, [r3, #12]
   3e6fc:	ldr	r3, [ip, r2, lsl #4]
   3e700:	lsr	r2, r3, #28
   3e704:	cmp	r2, #8
   3e708:	bne	3e720 <luaL_typerror@@Base+0x83b4>
   3e70c:	uxth	r3, r3
   3e710:	ldr	r3, [ip, r3, lsl #4]
   3e714:	lsr	r2, r3, #28
   3e718:	cmp	r2, #8
   3e71c:	beq	3e70c <luaL_typerror@@Base+0x83a0>
   3e720:	sub	r2, r2, #1
   3e724:	cmp	r2, #1
   3e728:	bls	3e738 <luaL_typerror@@Base+0x83cc>
   3e72c:	and	r3, r3, #-67108864	; 0xfc000000
   3e730:	cmp	r3, #805306368	; 0x30000000
   3e734:	bne	3e768 <luaL_typerror@@Base+0x83fc>
   3e738:	ldrd	r2, [lr, #8]
   3e73c:	mov	r0, r4
   3e740:	bl	3e638 <luaL_typerror@@Base+0x82cc>
   3e744:	ldr	r3, [r4, #16]
   3e748:	mov	r0, #1
   3e74c:	add	r3, r3, #8
   3e750:	str	r3, [r4, #20]
   3e754:	pop	{r4, pc}
   3e758:	mov	r0, r4
   3e75c:	ldr	r2, [pc, #20]	; 3e778 <luaL_typerror@@Base+0x840c>
   3e760:	mov	r1, #2
   3e764:	bl	361d0 <luaL_argerror@@Base+0x8>
   3e768:	mov	r0, r4
   3e76c:	mov	r2, #2976	; 0xba0
   3e770:	mov	r1, #1
   3e774:	bl	361d0 <luaL_argerror@@Base+0x8>
   3e778:	andeq	r0, r0, r7, lsr #4
   3e77c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e780:	mov	r1, #1
   3e784:	mov	r8, r0
   3e788:	bl	36a74 <luaL_typerror@@Base+0x708>
   3e78c:	mov	r7, r0
   3e790:	bl	1f244 <lua_atpanic@@Base+0x74>
   3e794:	ldrd	r2, [r8, #16]
   3e798:	sub	r3, r3, r2
   3e79c:	cmp	r3, #16
   3e7a0:	add	r4, r0, #1
   3e7a4:	beq	3e850 <luaL_typerror@@Base+0x84e4>
   3e7a8:	cmp	r3, #24
   3e7ac:	bne	3e8dc <luaL_typerror@@Base+0x8570>
   3e7b0:	mov	r1, #2
   3e7b4:	mov	r0, r8
   3e7b8:	bl	3638c <luaL_typerror@@Base+0x20>
   3e7bc:	cmp	r4, r0
   3e7c0:	mov	sl, r0
   3e7c4:	ble	3e8d0 <luaL_typerror@@Base+0x8564>
   3e7c8:	ldr	fp, [r7, #24]
   3e7cc:	lsl	r5, r4, #3
   3e7d0:	mvn	r9, #0
   3e7d4:	b	3e814 <luaL_typerror@@Base+0x84a8>
   3e7d8:	ldr	r6, [r7, #8]
   3e7dc:	sub	r4, r4, #1
   3e7e0:	cmp	r4, fp
   3e7e4:	add	r6, r5, r6
   3e7e8:	bcs	3e840 <luaL_typerror@@Base+0x84d4>
   3e7ec:	ldr	r0, [r7, #8]
   3e7f0:	sub	r0, r0, #8
   3e7f4:	add	r0, r0, r5
   3e7f8:	cmp	r0, #0
   3e7fc:	streq	r9, [r6, #4]
   3e800:	ldrdne	r2, [r0]
   3e804:	strdne	r2, [r6]
   3e808:	cmp	r4, sl
   3e80c:	sub	r5, r5, #8
   3e810:	beq	3e854 <luaL_typerror@@Base+0x84e8>
   3e814:	cmp	r4, fp
   3e818:	bcc	3e7d8 <luaL_typerror@@Base+0x846c>
   3e81c:	mov	r2, r4
   3e820:	mov	r1, r7
   3e824:	mov	r0, r8
   3e828:	bl	3e200 <luaL_typerror@@Base+0x7e94>
   3e82c:	ldr	fp, [r7, #24]
   3e830:	sub	r4, r4, #1
   3e834:	cmp	r4, fp
   3e838:	mov	r6, r0
   3e83c:	bcc	3e7ec <luaL_typerror@@Base+0x8480>
   3e840:	mov	r1, r4
   3e844:	mov	r0, r7
   3e848:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   3e84c:	b	3e7f8 <luaL_typerror@@Base+0x848c>
   3e850:	ldr	fp, [r7, #24]
   3e854:	cmp	r4, fp
   3e858:	bcs	3e8bc <luaL_typerror@@Base+0x8550>
   3e85c:	ldr	r0, [r7, #8]
   3e860:	add	r0, r0, r4, lsl #3
   3e864:	ldr	r3, [r8, #20]
   3e868:	ldrd	r2, [r3, #-8]
   3e86c:	strd	r2, [r0]
   3e870:	ldr	r3, [r0, #4]
   3e874:	add	r3, r3, #4
   3e878:	cmn	r3, #10
   3e87c:	bls	3e8b4 <luaL_typerror@@Base+0x8548>
   3e880:	ldr	r3, [r0]
   3e884:	ldrb	r3, [r3, #4]
   3e888:	tst	r3, #3
   3e88c:	beq	3e8b4 <luaL_typerror@@Base+0x8548>
   3e890:	ldrb	r3, [r7, #4]
   3e894:	tst	r3, #4
   3e898:	beq	3e8b4 <luaL_typerror@@Base+0x8548>
   3e89c:	ldr	r2, [r8, #8]
   3e8a0:	bic	r3, r3, #4
   3e8a4:	strb	r3, [r7, #4]
   3e8a8:	ldr	r3, [r2, #48]	; 0x30
   3e8ac:	str	r3, [r7, #12]
   3e8b0:	str	r7, [r2, #48]	; 0x30
   3e8b4:	mov	r0, #0
   3e8b8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e8bc:	mov	r2, r4
   3e8c0:	mov	r1, r7
   3e8c4:	mov	r0, r8
   3e8c8:	bl	3e200 <luaL_typerror@@Base+0x7e94>
   3e8cc:	b	3e864 <luaL_typerror@@Base+0x84f8>
   3e8d0:	mov	r4, r0
   3e8d4:	ldr	fp, [r7, #24]
   3e8d8:	b	3e854 <luaL_typerror@@Base+0x84e8>
   3e8dc:	mov	r0, r8
   3e8e0:	ldr	r1, [pc]	; 3e8e8 <luaL_typerror@@Base+0x857c>
   3e8e4:	bl	35a48 <lua_error@@Base+0xa8>
   3e8e8:	andeq	r0, r0, r5, asr r5
   3e8ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3e8f0:	mov	r5, r0
   3e8f4:	mov	r6, r1
   3e8f8:	bl	3720c <luaL_typerror@@Base+0xea0>
   3e8fc:	ldr	r2, [r5, #8]
   3e900:	ldr	r4, [r2, #228]	; 0xe4
   3e904:	ldr	r1, [r4]
   3e908:	ldrh	r3, [r0, #6]
   3e90c:	str	r5, [r4, #12]
   3e910:	ldr	r3, [r1, r3, lsl #4]
   3e914:	lsr	r2, r3, #28
   3e918:	cmp	r2, #8
   3e91c:	bne	3e934 <luaL_typerror@@Base+0x85c8>
   3e920:	uxth	r3, r3
   3e924:	ldr	r3, [r1, r3, lsl #4]
   3e928:	lsr	r2, r3, #28
   3e92c:	cmp	r2, #8
   3e930:	beq	3e920 <luaL_typerror@@Base+0x85b4>
   3e934:	cmp	r2, #2
   3e938:	bne	3e950 <luaL_typerror@@Base+0x85e4>
   3e93c:	ldr	r3, [r0, #8]
   3e940:	ldr	r2, [r4, #180]	; 0xb4
   3e944:	sub	r3, r3, r2
   3e948:	cmp	r3, #4096	; 0x1000
   3e94c:	bcc	3e95c <luaL_typerror@@Base+0x85f0>
   3e950:	mov	r0, r5
   3e954:	ldr	r1, [pc, #208]	; 3ea2c <luaL_typerror@@Base+0x86c0>
   3e958:	bl	35a48 <lua_error@@Base+0xa8>
   3e95c:	sub	r0, r3, #32
   3e960:	lsr	r7, r0, #3
   3e964:	add	r2, r7, #4
   3e968:	cmp	r3, r2, lsl #3
   3e96c:	bne	3e950 <luaL_typerror@@Base+0x85e4>
   3e970:	ldr	r3, [r4, #188]	; 0xbc
   3e974:	cmp	r3, r7
   3e978:	bls	3e950 <luaL_typerror@@Base+0x85e4>
   3e97c:	ldr	r3, [r4, #184]	; 0xb8
   3e980:	lsl	r9, r7, #1
   3e984:	ldrh	r3, [r3, r9]
   3e988:	cmp	r3, #0
   3e98c:	beq	3e950 <luaL_typerror@@Base+0x85e4>
   3e990:	ldr	r8, [r4, #24]
   3e994:	ldr	r3, [r8, #24]
   3e998:	cmp	r3, r7
   3e99c:	bls	3e9d0 <luaL_typerror@@Base+0x8664>
   3e9a0:	ldr	r3, [r8, #8]
   3e9a4:	cmp	r6, #0
   3e9a8:	add	r0, r0, r3
   3e9ac:	beq	3e9e8 <luaL_typerror@@Base+0x867c>
   3e9b0:	mvn	r3, #8
   3e9b4:	str	r6, [r0]
   3e9b8:	str	r3, [r0, #4]
   3e9bc:	ldrb	r3, [r8, #4]
   3e9c0:	tst	r3, #4
   3e9c4:	bne	3ea10 <luaL_typerror@@Base+0x86a4>
   3e9c8:	mov	r0, #0
   3e9cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e9d0:	mov	r2, r7
   3e9d4:	mov	r1, r8
   3e9d8:	mov	r0, r5
   3e9dc:	bl	3e200 <luaL_typerror@@Base+0x7e94>
   3e9e0:	cmp	r6, #0
   3e9e4:	bne	3e9b0 <luaL_typerror@@Base+0x8644>
   3e9e8:	ldr	r3, [r4, #192]	; 0xc0
   3e9ec:	ldr	r2, [r4, #184]	; 0xb8
   3e9f0:	cmp	r3, r7
   3e9f4:	movcc	r7, r3
   3e9f8:	mvn	r3, #0
   3e9fc:	str	r3, [r0, #4]
   3ea00:	strh	r6, [r2, r9]
   3ea04:	mov	r0, #0
   3ea08:	str	r7, [r4, #192]	; 0xc0
   3ea0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3ea10:	ldr	r2, [r5, #8]
   3ea14:	bic	r3, r3, #4
   3ea18:	strb	r3, [r8, #4]
   3ea1c:	ldr	r3, [r2, #48]	; 0x30
   3ea20:	str	r3, [r8, #12]
   3ea24:	str	r8, [r2, #48]	; 0x30
   3ea28:	b	3e9c8 <luaL_typerror@@Base+0x865c>
   3ea2c:	andeq	r0, r0, ip, lsr #28
   3ea30:	push	{r4, lr}
   3ea34:	mov	r1, #2
   3ea38:	mov	r4, r0
   3ea3c:	bl	36884 <luaL_typerror@@Base+0x518>
   3ea40:	mov	r1, r0
   3ea44:	mov	r0, r4
   3ea48:	pop	{r4, lr}
   3ea4c:	b	3e8ec <luaL_typerror@@Base+0x8580>
   3ea50:	mov	r1, #0
   3ea54:	b	3e8ec <luaL_typerror@@Base+0x8580>
   3ea58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ea5c:	mov	r6, r0
   3ea60:	ldr	r4, [r0, #8]
   3ea64:	sub	sp, sp, #12
   3ea68:	ldrb	r3, [r4, #29]
   3ea6c:	cmp	r3, #5
   3ea70:	ldrls	pc, [pc, r3, lsl #2]
   3ea74:	b	3ef98 <luaL_typerror@@Base+0x8c2c>
   3ea78:	andeq	lr, r3, r8, asr #21
   3ea7c:	andeq	lr, r3, r4, lsr fp
   3ea80:	andeq	lr, r3, r0, lsr #24
   3ea84:	andeq	lr, r3, r0, asr fp
   3ea88:	andeq	lr, r3, r8, lsr #23
   3ea8c:	muleq	r3, r0, sl
   3ea90:	ldr	r3, [r4, #56]	; 0x38
   3ea94:	cmp	r3, #0
   3ea98:	beq	3eec4 <luaL_typerror@@Base+0x8b58>
   3ea9c:	ldr	r3, [r4, #224]	; 0xe0
   3eaa0:	cmp	r3, #0
   3eaa4:	bne	3ee64 <luaL_typerror@@Base+0x8af8>
   3eaa8:	bl	3e394 <luaL_typerror@@Base+0x8028>
   3eaac:	ldr	r3, [r4, #64]	; 0x40
   3eab0:	cmp	r3, #100	; 0x64
   3eab4:	movls	r0, #100	; 0x64
   3eab8:	subhi	r3, r3, #100	; 0x64
   3eabc:	strhi	r3, [r4, #64]	; 0x40
   3eac0:	movhi	r0, #100	; 0x64
   3eac4:	b	3eb48 <luaL_typerror@@Base+0x87dc>
   3eac8:	ldr	r1, [r4, #116]	; 0x74
   3eacc:	mov	r3, #0
   3ead0:	str	r3, [r4, #44]	; 0x2c
   3ead4:	ldrb	r2, [r1, #4]
   3ead8:	str	r3, [r4, #48]	; 0x30
   3eadc:	str	r3, [r4, #52]	; 0x34
   3eae0:	tst	r2, #3
   3eae4:	bne	3ef50 <luaL_typerror@@Base+0x8be4>
   3eae8:	ldr	r1, [r1, #36]	; 0x24
   3eaec:	ldrb	r3, [r1, #4]
   3eaf0:	tst	r3, #3
   3eaf4:	bne	3ef44 <luaL_typerror@@Base+0x8bd8>
   3eaf8:	ldr	r3, [r4, #124]	; 0x7c
   3eafc:	add	r3, r3, #4
   3eb00:	cmn	r3, #10
   3eb04:	bls	3eb18 <luaL_typerror@@Base+0x87ac>
   3eb08:	ldr	r1, [r4, #120]	; 0x78
   3eb0c:	ldrb	r3, [r1, #4]
   3eb10:	tst	r3, #3
   3eb14:	bne	3eee0 <luaL_typerror@@Base+0x8b74>
   3eb18:	mov	r0, r4
   3eb1c:	bl	17560 <_start@@Base+0x41b0>
   3eb20:	mov	r3, #1
   3eb24:	mov	r0, #0
   3eb28:	strb	r3, [r4, #29]
   3eb2c:	add	sp, sp, #12
   3eb30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3eb34:	ldr	r0, [r4, #44]	; 0x2c
   3eb38:	cmp	r0, #0
   3eb3c:	moveq	r3, #2
   3eb40:	strbeq	r3, [r4, #29]
   3eb44:	bne	3ef34 <luaL_typerror@@Base+0x8bc8>
   3eb48:	add	sp, sp, #12
   3eb4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3eb50:	ldr	r3, [r4, #32]
   3eb54:	ldr	r1, [r4]
   3eb58:	add	r2, r3, #1
   3eb5c:	str	r2, [r4, #32]
   3eb60:	add	r1, r1, r3, lsl #2
   3eb64:	mvn	r2, #0
   3eb68:	mov	r0, r4
   3eb6c:	ldr	r5, [r4, #20]
   3eb70:	bl	14658 <_start@@Base+0x12a8>
   3eb74:	ldr	r3, [r4, #4]
   3eb78:	ldr	r2, [r4, #32]
   3eb7c:	mov	r0, #10
   3eb80:	cmp	r2, r3
   3eb84:	movhi	r3, #4
   3eb88:	strbhi	r3, [r4, #29]
   3eb8c:	ldr	r2, [r4, #20]
   3eb90:	ldr	r3, [r4, #64]	; 0x40
   3eb94:	add	r3, r3, r2
   3eb98:	sub	r3, r3, r5
   3eb9c:	str	r3, [r4, #64]	; 0x40
   3eba0:	add	sp, sp, #12
   3eba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3eba8:	mov	r2, #40	; 0x28
   3ebac:	ldr	r1, [r4, #40]	; 0x28
   3ebb0:	mov	r0, r4
   3ebb4:	ldr	r5, [r4, #20]
   3ebb8:	bl	14658 <_start@@Base+0x12a8>
   3ebbc:	ldr	r3, [r4, #64]	; 0x40
   3ebc0:	ldr	r1, [r4, #20]
   3ebc4:	add	r3, r3, r1
   3ebc8:	sub	r3, r3, r5
   3ebcc:	ldr	r2, [r0]
   3ebd0:	str	r0, [r4, #40]	; 0x28
   3ebd4:	cmp	r2, #0
   3ebd8:	str	r3, [r4, #64]	; 0x40
   3ebdc:	movne	r0, #400	; 0x190
   3ebe0:	bne	3eb48 <luaL_typerror@@Base+0x87dc>
   3ebe4:	ldmib	r4, {r1, r3}
   3ebe8:	lsr	r2, r1, #2
   3ebec:	cmp	r1, #512	; 0x200
   3ebf0:	cmpcs	r2, r3
   3ebf4:	bcs	3ef88 <luaL_typerror@@Base+0x8c1c>
   3ebf8:	ldr	r3, [r4, #56]	; 0x38
   3ebfc:	mov	r0, #400	; 0x190
   3ec00:	cmp	r3, #0
   3ec04:	movne	r2, #5
   3ec08:	movne	r3, #1
   3ec0c:	strbne	r2, [r4, #29]
   3ec10:	strbne	r3, [r4, #30]
   3ec14:	strbeq	r3, [r4, #29]
   3ec18:	streq	r3, [r4, #60]	; 0x3c
   3ec1c:	b	3eb48 <luaL_typerror@@Base+0x87dc>
   3ec20:	ldr	r3, [r4, #224]	; 0xe0
   3ec24:	cmp	r3, #0
   3ec28:	bne	3ee64 <luaL_typerror@@Base+0x8af8>
   3ec2c:	ldr	r5, [r4, #180]	; 0xb4
   3ec30:	add	r7, r4, #168	; 0xa8
   3ec34:	cmp	r5, r7
   3ec38:	beq	3ec84 <luaL_typerror@@Base+0x8918>
   3ec3c:	ldrb	r3, [r5, #4]
   3ec40:	tst	r3, #7
   3ec44:	bne	3ec6c <luaL_typerror@@Base+0x8900>
   3ec48:	ldr	r2, [r5, #16]
   3ec4c:	ldr	r3, [r2, #4]
   3ec50:	add	r3, r3, #4
   3ec54:	cmn	r3, #10
   3ec58:	bls	3ec6c <luaL_typerror@@Base+0x8900>
   3ec5c:	ldr	r1, [r2]
   3ec60:	ldrb	r3, [r1, #4]
   3ec64:	tst	r3, #3
   3ec68:	bne	3ef60 <luaL_typerror@@Base+0x8bf4>
   3ec6c:	ldr	r5, [r5, #12]
   3ec70:	cmp	r5, r7
   3ec74:	bne	3ec3c <luaL_typerror@@Base+0x88d0>
   3ec78:	b	3ec84 <luaL_typerror@@Base+0x8918>
   3ec7c:	mov	r0, r4
   3ec80:	bl	206c8 <luaL_where@@Base+0x5c4>
   3ec84:	ldr	r3, [r4, #44]	; 0x2c
   3ec88:	cmp	r3, #0
   3ec8c:	bne	3ec7c <luaL_typerror@@Base+0x8910>
   3ec90:	ldrb	r1, [r6, #4]
   3ec94:	ldr	r2, [r4, #52]	; 0x34
   3ec98:	mov	r3, #0
   3ec9c:	tst	r1, #3
   3eca0:	str	r2, [r4, #44]	; 0x2c
   3eca4:	str	r3, [r4, #52]	; 0x34
   3eca8:	bne	3ef78 <luaL_typerror@@Base+0x8c0c>
   3ecac:	add	r1, r4, #384	; 0x180
   3ecb0:	ldrh	r3, [r1, #64]	; 0x40
   3ecb4:	cmp	r3, #0
   3ecb8:	bne	3ef6c <luaL_typerror@@Base+0x8c00>
   3ecbc:	mov	r0, r4
   3ecc0:	bl	17560 <_start@@Base+0x41b0>
   3ecc4:	ldr	r3, [r4, #44]	; 0x2c
   3ecc8:	cmp	r3, #0
   3eccc:	beq	3ece4 <luaL_typerror@@Base+0x8978>
   3ecd0:	mov	r0, r4
   3ecd4:	bl	206c8 <luaL_where@@Base+0x5c4>
   3ecd8:	ldr	r3, [r4, #44]	; 0x2c
   3ecdc:	cmp	r3, #0
   3ece0:	bne	3ecd0 <luaL_typerror@@Base+0x8964>
   3ece4:	ldr	r3, [r4, #48]	; 0x30
   3ece8:	mov	r2, #0
   3ecec:	cmp	r3, r2
   3ecf0:	str	r3, [r4, #44]	; 0x2c
   3ecf4:	str	r2, [r4, #48]	; 0x30
   3ecf8:	beq	3ed10 <luaL_typerror@@Base+0x89a4>
   3ecfc:	mov	r0, r4
   3ed00:	bl	206c8 <luaL_where@@Base+0x5c4>
   3ed04:	ldr	r3, [r4, #44]	; 0x2c
   3ed08:	cmp	r3, #0
   3ed0c:	bne	3ecfc <luaL_typerror@@Base+0x8990>
   3ed10:	mov	r1, #0
   3ed14:	mov	r0, r4
   3ed18:	bl	14ab0 <_start@@Base+0x1700>
   3ed1c:	ldr	r7, [r4, #56]	; 0x38
   3ed20:	cmp	r7, #0
   3ed24:	str	r0, [sp, #4]
   3ed28:	beq	3ed60 <luaL_typerror@@Base+0x89f4>
   3ed2c:	mov	r5, r7
   3ed30:	ldr	r5, [r5]
   3ed34:	ldrb	r2, [r4, #28]
   3ed38:	mov	r1, r5
   3ed3c:	ldrb	r3, [r5, #4]
   3ed40:	and	r2, r2, #3
   3ed44:	mov	r0, r4
   3ed48:	bic	r3, r3, #7
   3ed4c:	orr	r3, r3, r2
   3ed50:	strb	r3, [r5, #4]
   3ed54:	bl	17498 <_start@@Base+0x40e8>
   3ed58:	cmp	r7, r5
   3ed5c:	bne	3ed30 <luaL_typerror@@Base+0x89c4>
   3ed60:	ldr	r7, [r4, #44]	; 0x2c
   3ed64:	cmp	r7, #0
   3ed68:	beq	3ed88 <luaL_typerror@@Base+0x8a1c>
   3ed6c:	mov	r7, #0
   3ed70:	mov	r0, r4
   3ed74:	bl	206c8 <luaL_where@@Base+0x5c4>
   3ed78:	ldr	r3, [r4, #44]	; 0x2c
   3ed7c:	cmp	r3, #0
   3ed80:	add	r7, r7, r0
   3ed84:	bne	3ed70 <luaL_typerror@@Base+0x8a04>
   3ed88:	ldr	sl, [r4, #52]	; 0x34
   3ed8c:	cmp	sl, #0
   3ed90:	beq	3ee70 <luaL_typerror@@Base+0x8b04>
   3ed94:	mvn	r9, #0
   3ed98:	b	3edb4 <luaL_typerror@@Base+0x8a48>
   3ed9c:	ldr	r8, [sl, #28]
   3eda0:	cmp	r8, #0
   3eda4:	bne	3ee04 <luaL_typerror@@Base+0x8a98>
   3eda8:	ldr	sl, [sl, #12]
   3edac:	cmp	sl, #0
   3edb0:	beq	3ee70 <luaL_typerror@@Base+0x8b04>
   3edb4:	ldrb	r2, [sl, #4]
   3edb8:	tst	r2, #16
   3edbc:	beq	3ed9c <luaL_typerror@@Base+0x8a30>
   3edc0:	ldr	r8, [sl, #24]
   3edc4:	cmp	r8, #0
   3edc8:	beq	3ed9c <luaL_typerror@@Base+0x8a30>
   3edcc:	mov	fp, #0
   3edd0:	ldr	r5, [sl, #8]
   3edd4:	mov	r1, #1
   3edd8:	add	r5, r5, fp, lsl #3
   3eddc:	mov	r0, r5
   3ede0:	bl	1af04 <_start@@Base+0x7b54>
   3ede4:	add	fp, fp, #1
   3ede8:	cmp	r0, #0
   3edec:	strne	r9, [r5, #4]
   3edf0:	cmp	r8, fp
   3edf4:	bne	3edd0 <luaL_typerror@@Base+0x8a64>
   3edf8:	ldr	r8, [sl, #28]
   3edfc:	cmp	r8, #0
   3ee00:	beq	3eda8 <luaL_typerror@@Base+0x8a3c>
   3ee04:	ldr	fp, [sl, #20]
   3ee08:	add	r8, r8, r8, lsl #1
   3ee0c:	add	r5, fp, #24
   3ee10:	add	r8, r5, r8, lsl #3
   3ee14:	b	3ee2c <luaL_typerror@@Base+0x8ac0>
   3ee18:	str	r9, [fp, #4]
   3ee1c:	cmp	r5, r8
   3ee20:	mov	fp, r5
   3ee24:	beq	3eda8 <luaL_typerror@@Base+0x8a3c>
   3ee28:	add	r5, r5, #24
   3ee2c:	ldr	r2, [fp, #4]
   3ee30:	mov	r1, #0
   3ee34:	cmn	r2, #1
   3ee38:	add	r0, fp, #8
   3ee3c:	beq	3ee1c <luaL_typerror@@Base+0x8ab0>
   3ee40:	bl	1af04 <_start@@Base+0x7b54>
   3ee44:	cmp	r0, #0
   3ee48:	bne	3ee18 <luaL_typerror@@Base+0x8aac>
   3ee4c:	mov	r1, #1
   3ee50:	mov	r0, fp
   3ee54:	bl	1af04 <_start@@Base+0x7b54>
   3ee58:	cmp	r0, #0
   3ee5c:	bne	3ee18 <luaL_typerror@@Base+0x8aac>
   3ee60:	b	3ee1c <luaL_typerror@@Base+0x8ab0>
   3ee64:	ldr	r0, [pc, #308]	; 3efa0 <luaL_typerror@@Base+0x8c34>
   3ee68:	add	sp, sp, #12
   3ee6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ee70:	ldr	ip, [r4, #88]	; 0x58
   3ee74:	ldr	r2, [r4, #84]	; 0x54
   3ee78:	sub	r2, r2, ip
   3ee7c:	cmp	r2, #64	; 0x40
   3ee80:	bhi	3eeec <luaL_typerror@@Base+0x8b80>
   3ee84:	ldrb	r2, [r4, #28]
   3ee88:	ldr	r3, [r4, #20]
   3ee8c:	ldr	r1, [sp, #4]
   3ee90:	mov	r0, #0
   3ee94:	sub	sl, r3, r1
   3ee98:	sub	r7, sl, r7
   3ee9c:	eor	r3, r2, #3
   3eea0:	add	r1, r4, #36	; 0x24
   3eea4:	mov	r2, #3
   3eea8:	str	r7, [r4, #64]	; 0x40
   3eeac:	strb	r3, [r4, #28]
   3eeb0:	strb	r3, [r4, #100]	; 0x64
   3eeb4:	str	r1, [r4, #40]	; 0x28
   3eeb8:	strb	r2, [r4, #29]
   3eebc:	str	r0, [r4, #32]
   3eec0:	b	3eb48 <luaL_typerror@@Base+0x87dc>
   3eec4:	ldrb	r3, [r4, #30]
   3eec8:	cmp	r3, #0
   3eecc:	beq	3ef20 <luaL_typerror@@Base+0x8bb4>
   3eed0:	mov	r0, #0
   3eed4:	strb	r0, [r4, #29]
   3eed8:	str	r0, [r4, #60]	; 0x3c
   3eedc:	b	3eb48 <luaL_typerror@@Base+0x87dc>
   3eee0:	mov	r0, r4
   3eee4:	bl	17498 <_start@@Base+0x40e8>
   3eee8:	b	3eb18 <luaL_typerror@@Base+0x87ac>
   3eeec:	lsr	r8, r2, #1
   3eef0:	ldr	r5, [r4, #80]	; 0x50
   3eef4:	mov	r1, ip
   3eef8:	mov	r3, r8
   3eefc:	mov	r0, r6
   3ef00:	sub	r5, r5, ip
   3ef04:	bl	205b0 <luaL_where@@Base+0x4ac>
   3ef08:	add	ip, r0, r5
   3ef0c:	add	r8, r0, r8
   3ef10:	str	ip, [r4, #80]	; 0x50
   3ef14:	str	r8, [r4, #84]	; 0x54
   3ef18:	str	r0, [r4, #88]	; 0x58
   3ef1c:	b	3ee84 <luaL_typerror@@Base+0x8b18>
   3ef20:	ldr	r3, [r4, #228]	; 0xe4
   3ef24:	add	r2, r4, #144	; 0x90
   3ef28:	ldr	r1, [r3, #20]
   3ef2c:	bl	3dd58 <luaL_typerror@@Base+0x79ec>
   3ef30:	b	3eed0 <luaL_typerror@@Base+0x8b64>
   3ef34:	mov	r0, r4
   3ef38:	add	sp, sp, #12
   3ef3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ef40:	b	206c8 <luaL_where@@Base+0x5c4>
   3ef44:	mov	r0, r4
   3ef48:	bl	17498 <_start@@Base+0x40e8>
   3ef4c:	b	3eaf8 <luaL_typerror@@Base+0x878c>
   3ef50:	mov	r0, r4
   3ef54:	bl	17498 <_start@@Base+0x40e8>
   3ef58:	ldr	r1, [r4, #116]	; 0x74
   3ef5c:	b	3eae8 <luaL_typerror@@Base+0x877c>
   3ef60:	mov	r0, r4
   3ef64:	bl	17498 <_start@@Base+0x40e8>
   3ef68:	b	3ec6c <luaL_typerror@@Base+0x8900>
   3ef6c:	mov	r0, r4
   3ef70:	bl	1d1a0 <_start@@Base+0x9df0>
   3ef74:	b	3ecbc <luaL_typerror@@Base+0x8950>
   3ef78:	mov	r1, r6
   3ef7c:	mov	r0, r4
   3ef80:	bl	17498 <_start@@Base+0x40e8>
   3ef84:	b	3ecac <luaL_typerror@@Base+0x8940>
   3ef88:	lsr	r1, r1, #1
   3ef8c:	mov	r0, r6
   3ef90:	bl	24fe4 <luaL_where@@Base+0x4ee0>
   3ef94:	b	3ebf8 <luaL_typerror@@Base+0x888c>
   3ef98:	mov	r0, #0
   3ef9c:	b	3eb48 <luaL_typerror@@Base+0x87dc>
   3efa0:	svcvc	0x00ffff00
   3efa4:	push	{r4, r5, r6, r7, r8, lr}
   3efa8:	mov	r6, r0
   3efac:	ldr	r5, [r0, #8]
   3efb0:	ldr	r4, [pc, #180]	; 3f06c <luaL_typerror@@Base+0x8d00>
   3efb4:	mvn	r0, #2
   3efb8:	ldr	r3, [r5, #68]	; 0x44
   3efbc:	ldr	r2, [r5, #20]
   3efc0:	ldr	r1, [r5, #24]
   3efc4:	add	r3, r3, r3, lsl #2
   3efc8:	ldr	r7, [r5, #76]	; 0x4c
   3efcc:	lsls	r3, r3, #1
   3efd0:	movne	r4, r3
   3efd4:	cmp	r2, r1
   3efd8:	str	r0, [r5, #76]	; 0x4c
   3efdc:	ldrhi	r3, [r5, #60]	; 0x3c
   3efe0:	addhi	r2, r2, r3
   3efe4:	subhi	r2, r2, r1
   3efe8:	strhi	r2, [r5, #60]	; 0x3c
   3efec:	b	3eff8 <luaL_typerror@@Base+0x8c8c>
   3eff0:	cmp	r4, #0
   3eff4:	ble	3f038 <luaL_typerror@@Base+0x8ccc>
   3eff8:	mov	r0, r6
   3effc:	bl	3ea58 <luaL_typerror@@Base+0x86ec>
   3f000:	ldrb	r3, [r5, #29]
   3f004:	cmp	r3, #0
   3f008:	sub	r4, r4, r0
   3f00c:	bne	3eff0 <luaL_typerror@@Base+0x8c84>
   3f010:	ldr	r6, [r5, #64]	; 0x40
   3f014:	ldr	r2, [pc, #84]	; 3f070 <luaL_typerror@@Base+0x8d04>
   3f018:	str	r7, [r5, #76]	; 0x4c
   3f01c:	ldr	r3, [r5, #72]	; 0x48
   3f020:	umull	r6, r7, r6, r2
   3f024:	mov	r0, #1
   3f028:	lsr	r2, r7, #5
   3f02c:	mul	r3, r3, r2
   3f030:	str	r3, [r5, #24]
   3f034:	pop	{r4, r5, r6, r7, r8, pc}
   3f038:	ldr	r3, [r5, #60]	; 0x3c
   3f03c:	ldr	r2, [r5, #20]
   3f040:	cmp	r3, #1024	; 0x400
   3f044:	addcc	r2, r2, #1024	; 0x400
   3f048:	subcs	r3, r3, #1024	; 0x400
   3f04c:	mvncc	r0, #0
   3f050:	strcc	r2, [r5, #24]
   3f054:	strcc	r7, [r5, #76]	; 0x4c
   3f058:	movcs	r0, #0
   3f05c:	strcs	r3, [r5, #60]	; 0x3c
   3f060:	strcs	r2, [r5, #24]
   3f064:	strcs	r7, [r5, #76]	; 0x4c
   3f068:	pop	{r4, r5, r6, r7, r8, pc}
   3f06c:	svcvc	0x00ffff00
   3f070:	mvnpl	r8, pc, lsl r5
   3f074:	ldr	r3, [r0, #16]
   3f078:	ldr	r2, [r3, #-8]
   3f07c:	ldrb	r1, [r2, #6]
   3f080:	cmp	r1, #0
   3f084:	ldreq	r2, [r2, #16]
   3f088:	ldrbeq	r2, [r2, #-57]	; 0xffffffc7
   3f08c:	addeq	r3, r3, r2, lsl #3
   3f090:	streq	r3, [r0, #20]
   3f094:	b	3efa4 <luaL_typerror@@Base+0x8c38>
   3f098:	ldr	r3, [r0, #8]
   3f09c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f0a0:	sub	sp, sp, #28
   3f0a4:	mov	fp, r0
   3f0a8:	str	r2, [sp, #4]
   3f0ac:	ldrd	r2, [r3, #20]
   3f0b0:	mov	sl, r1
   3f0b4:	cmp	r2, r3
   3f0b8:	bcs	3f22c <luaL_typerror@@Base+0x8ec0>
   3f0bc:	ldr	r4, [sp, #4]
   3f0c0:	mov	r1, sl
   3f0c4:	mov	r0, fp
   3f0c8:	ldr	r2, [r4, #8]
   3f0cc:	bl	3316c <luaL_where@@Base+0x13068>
   3f0d0:	ldrb	r9, [sl, #36]	; 0x24
   3f0d4:	add	r3, r4, #20
   3f0d8:	str	r3, [sp]
   3f0dc:	ldr	r3, [fp, #16]
   3f0e0:	cmp	r9, #0
   3f0e4:	str	r3, [sp, #12]
   3f0e8:	str	r0, [sp, #20]
   3f0ec:	beq	3f1f8 <luaL_typerror@@Base+0x8e8c>
   3f0f0:	add	r3, fp, #32
   3f0f4:	mov	r4, #0
   3f0f8:	add	r8, r0, #16
   3f0fc:	str	r3, [sp, #16]
   3f100:	str	fp, [sp, #8]
   3f104:	b	3f120 <luaL_typerror@@Base+0x8db4>
   3f108:	ldr	r3, [sp]
   3f10c:	add	r4, r4, #1
   3f110:	cmp	r9, r4
   3f114:	ldr	r3, [r3, r6, lsl #2]
   3f118:	str	r3, [r8, #4]!
   3f11c:	beq	3f1f8 <luaL_typerror@@Base+0x8e8c>
   3f120:	ldr	r3, [sl, #20]
   3f124:	lsl	r2, r4, #1
   3f128:	ldrh	r6, [r2, r3]
   3f12c:	tst	r6, #32768	; 0x8000
   3f130:	beq	3f108 <luaL_typerror@@Base+0x8d9c>
   3f134:	ldr	r3, [sp, #8]
   3f138:	uxtb	r7, r6
   3f13c:	ldr	r5, [sp, #16]
   3f140:	ldr	fp, [r3, #8]
   3f144:	ldr	r3, [sp, #12]
   3f148:	add	r7, r3, r7, lsl #3
   3f14c:	b	3f164 <luaL_typerror@@Base+0x8df8>
   3f150:	ldr	r3, [r0, #16]
   3f154:	cmp	r7, r3
   3f158:	bhi	3f170 <luaL_typerror@@Base+0x8e04>
   3f15c:	mov	r5, r0
   3f160:	beq	3f20c <luaL_typerror@@Base+0x8ea0>
   3f164:	ldr	r0, [r5]
   3f168:	cmp	r0, #0
   3f16c:	bne	3f150 <luaL_typerror@@Base+0x8de4>
   3f170:	mov	r2, #0
   3f174:	mov	r1, r2
   3f178:	mov	r3, #24
   3f17c:	ldr	r0, [sp, #8]
   3f180:	bl	205b0 <luaL_where@@Base+0x4ac>
   3f184:	ldrb	r3, [fp, #28]
   3f188:	mov	r2, #5
   3f18c:	mov	r1, #0
   3f190:	and	r3, r3, #3
   3f194:	strb	r1, [r0, #6]
   3f198:	strb	r2, [r0, #5]
   3f19c:	strb	r3, [r0, #4]
   3f1a0:	ldr	r3, [r5]
   3f1a4:	str	r7, [r0, #16]
   3f1a8:	str	r3, [r0]
   3f1ac:	str	r0, [r5]
   3f1b0:	ldr	r2, [fp, #180]	; 0xb4
   3f1b4:	mov	r3, r0
   3f1b8:	add	r1, fp, #168	; 0xa8
   3f1bc:	str	r1, [r0, #8]
   3f1c0:	str	r2, [r0, #12]
   3f1c4:	str	r0, [r2, #8]
   3f1c8:	str	r0, [fp, #180]	; 0xb4
   3f1cc:	lsr	r2, r6, #14
   3f1d0:	and	r2, r2, #1
   3f1d4:	strb	r2, [r0, #7]
   3f1d8:	ldr	r2, [sp, #4]
   3f1dc:	add	r4, r4, #1
   3f1e0:	cmp	r9, r4
   3f1e4:	ldr	r2, [r2, #16]
   3f1e8:	eor	r6, r2, r6, lsl #24
   3f1ec:	str	r6, [r0, #20]
   3f1f0:	str	r3, [r8, #4]!
   3f1f4:	bne	3f120 <luaL_typerror@@Base+0x8db4>
   3f1f8:	ldr	r3, [sp, #20]
   3f1fc:	mov	r0, r3
   3f200:	strb	r9, [r3, #7]
   3f204:	add	sp, sp, #28
   3f208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f20c:	ldrb	r1, [r0, #4]
   3f210:	ldrb	r2, [fp, #28]
   3f214:	mov	r3, r0
   3f218:	bic	r2, r1, r2
   3f21c:	tst	r2, #3
   3f220:	eorne	r1, r1, #3
   3f224:	strbne	r1, [r0, #4]
   3f228:	b	3f1cc <luaL_typerror@@Base+0x8e60>
   3f22c:	bl	3f074 <luaL_typerror@@Base+0x8d08>
   3f230:	b	3f0bc <luaL_typerror@@Base+0x8d50>
   3f234:	push	{r4, r5, r6, lr}
   3f238:	mov	r4, r1
   3f23c:	ldr	r5, [r0, #220]	; 0xdc
   3f240:	ldr	r3, [r5, #8]
   3f244:	ldr	r3, [r3, #224]	; 0xe0
   3f248:	str	r3, [r5, #16]
   3f24c:	ldr	r2, [r3, #-8]
   3f250:	ldr	r2, [r2, #16]
   3f254:	ldrb	r2, [r2, #-57]	; 0xffffffc7
   3f258:	add	r3, r3, r2, lsl #3
   3f25c:	str	r3, [r5, #20]
   3f260:	b	3f274 <luaL_typerror@@Base+0x8f08>
   3f264:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   3f268:	sub	r4, r4, #1
   3f26c:	cmp	r0, #0
   3f270:	bne	3f280 <luaL_typerror@@Base+0x8f14>
   3f274:	cmp	r4, #0
   3f278:	mov	r0, r5
   3f27c:	bne	3f264 <luaL_typerror@@Base+0x8ef8>
   3f280:	ldr	r3, [r5, #8]
   3f284:	ldrb	r0, [r3, #29]
   3f288:	cmp	r0, #5
   3f28c:	cmpne	r0, #2
   3f290:	moveq	r0, #1
   3f294:	movne	r0, #0
   3f298:	pop	{r4, r5, r6, pc}
   3f29c:	push	{r4, r5, r6, lr}
   3f2a0:	mov	r4, r1
   3f2a4:	mov	r6, r0
   3f2a8:	mov	r1, r2
   3f2ac:	mov	r0, r4
   3f2b0:	mov	r2, r3
   3f2b4:	bl	20260 <luaL_where@@Base+0x15c>
   3f2b8:	ldr	r3, [r6]
   3f2bc:	ldr	r1, [r3]
   3f2c0:	mov	r2, r0
   3f2c4:	mov	r5, r0
   3f2c8:	mov	r0, r4
   3f2cc:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   3f2d0:	ldr	r3, [r0, #4]
   3f2d4:	cmn	r3, #1
   3f2d8:	mvneq	r3, #2
   3f2dc:	streq	r3, [r0, #4]
   3f2e0:	ldr	r3, [r4, #8]
   3f2e4:	ldrd	r2, [r3, #20]
   3f2e8:	cmp	r2, r3
   3f2ec:	bcs	3f2f8 <luaL_typerror@@Base+0x8f8c>
   3f2f0:	mov	r0, r5
   3f2f4:	pop	{r4, r5, r6, pc}
   3f2f8:	mov	r0, r4
   3f2fc:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   3f300:	mov	r0, r5
   3f304:	pop	{r4, r5, r6, pc}
   3f308:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f30c:	mov	r8, #0
   3f310:	mov	r7, r0
   3f314:	mov	r9, r1
   3f318:	mov	sl, r2
   3f31c:	mov	r4, r8
   3f320:	mov	r5, #8192	; 0x2000
   3f324:	b	3f378 <luaL_typerror@@Base+0x900c>
   3f328:	add	fp, r6, r4
   3f32c:	mov	r0, fp
   3f330:	mov	r2, r9
   3f334:	sub	r1, r5, r4
   3f338:	bl	12ca0 <fgets@plt>
   3f33c:	cmp	r0, #0
   3f340:	mov	r0, fp
   3f344:	beq	3f3b0 <luaL_typerror@@Base+0x9044>
   3f348:	bl	12e80 <strlen@plt>
   3f34c:	sub	r3, r5, #64	; 0x40
   3f350:	add	r4, r4, r0
   3f354:	cmp	r4, #0
   3f358:	add	r2, r6, r4
   3f35c:	orr	r8, r8, r4
   3f360:	beq	3f370 <luaL_typerror@@Base+0x9004>
   3f364:	ldrb	r2, [r2, #-1]
   3f368:	cmp	r2, #10
   3f36c:	beq	3f3ac <luaL_typerror@@Base+0x9040>
   3f370:	cmp	r3, r4
   3f374:	lslls	r5, r5, #1
   3f378:	ldr	r0, [r7, #8]
   3f37c:	ldr	r2, [r0, #88]	; 0x58
   3f380:	ldr	r3, [r0, #84]	; 0x54
   3f384:	mov	r6, r2
   3f388:	sub	r3, r3, r2
   3f38c:	cmp	r5, r3
   3f390:	str	r7, [r0, #92]	; 0x5c
   3f394:	bls	3f328 <luaL_typerror@@Base+0x8fbc>
   3f398:	add	r0, r0, #80	; 0x50
   3f39c:	mov	r1, r5
   3f3a0:	bl	333cc <luaL_where@@Base+0x132c8>
   3f3a4:	mov	r6, r0
   3f3a8:	b	3f328 <luaL_typerror@@Base+0x8fbc>
   3f3ac:	sub	r4, r4, sl
   3f3b0:	ldr	r5, [r7, #20]
   3f3b4:	mov	r2, r4
   3f3b8:	add	r3, r5, #8
   3f3bc:	str	r3, [r7, #20]
   3f3c0:	mov	r1, r6
   3f3c4:	mov	r0, r7
   3f3c8:	bl	20260 <luaL_where@@Base+0x15c>
   3f3cc:	ldr	r3, [r7, #8]
   3f3d0:	mvn	r2, #4
   3f3d4:	str	r2, [r5, #4]
   3f3d8:	ldrd	r2, [r3, #20]
   3f3dc:	cmp	r2, r3
   3f3e0:	str	r0, [r5]
   3f3e4:	bcs	3f3f0 <luaL_typerror@@Base+0x9084>
   3f3e8:	mov	r0, r8
   3f3ec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f3f0:	mov	r0, r7
   3f3f4:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   3f3f8:	mov	r0, r8
   3f3fc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f400:	push	{r4, r5, lr}
   3f404:	mov	r4, r0
   3f408:	mov	r1, #1
   3f40c:	sub	sp, sp, #12
   3f410:	bl	36884 <luaL_typerror@@Base+0x518>
   3f414:	ldr	r3, [r4, #16]
   3f418:	ldr	r1, [r4, #20]
   3f41c:	add	r2, r3, #8
   3f420:	cmp	r2, r1
   3f424:	movcs	ip, #0
   3f428:	bcs	3f43c <luaL_typerror@@Base+0x90d0>
   3f42c:	ldr	ip, [r3, #12]
   3f430:	cmn	ip, #3
   3f434:	movhi	ip, #0
   3f438:	movls	ip, #1
   3f43c:	ldr	r5, [r4, #8]
   3f440:	ldrb	r1, [r0, #6]
   3f444:	ldr	r3, [r5, #88]	; 0x58
   3f448:	cmp	r1, #0
   3f44c:	str	r3, [r5, #80]	; 0x50
   3f450:	str	r4, [r5, #92]	; 0x5c
   3f454:	add	r3, r5, #80	; 0x50
   3f458:	str	r2, [r4, #20]
   3f45c:	bne	3f4d0 <luaL_typerror@@Base+0x9164>
   3f460:	ldr	r1, [r0, #16]
   3f464:	ldr	r2, [pc, #112]	; 3f4dc <luaL_typerror@@Base+0x9170>
   3f468:	sub	r1, r1, #64	; 0x40
   3f46c:	str	ip, [sp]
   3f470:	mov	r0, r4
   3f474:	bl	196b8 <_start@@Base+0x6308>
   3f478:	cmp	r0, #0
   3f47c:	bne	3f4d0 <luaL_typerror@@Base+0x9164>
   3f480:	ldr	r3, [r5, #88]	; 0x58
   3f484:	ldr	r2, [r5, #80]	; 0x50
   3f488:	mov	r1, r3
   3f48c:	sub	r2, r2, r3
   3f490:	mov	r0, r4
   3f494:	ldr	r5, [r4, #20]
   3f498:	bl	20260 <luaL_where@@Base+0x15c>
   3f49c:	ldr	r3, [r4, #8]
   3f4a0:	mvn	r2, #4
   3f4a4:	str	r2, [r5, #-4]
   3f4a8:	ldrd	r2, [r3, #20]
   3f4ac:	cmp	r2, r3
   3f4b0:	str	r0, [r5, #-8]
   3f4b4:	bcs	3f4c4 <luaL_typerror@@Base+0x9158>
   3f4b8:	mov	r0, #1
   3f4bc:	add	sp, sp, #12
   3f4c0:	pop	{r4, r5, pc}
   3f4c4:	mov	r0, r4
   3f4c8:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   3f4cc:	b	3f4b8 <luaL_typerror@@Base+0x914c>
   3f4d0:	mov	r0, r4
   3f4d4:	ldr	r1, [pc, #4]	; 3f4e0 <luaL_typerror@@Base+0x9174>
   3f4d8:	bl	35a48 <lua_error@@Base+0xa8>
   3f4dc:	andeq	r0, r3, r0
   3f4e0:	andeq	r0, r0, lr, asr #12
   3f4e4:	ldr	r3, [r0, #8]
   3f4e8:	push	{r4, r5, r6, r7, r8, lr}
   3f4ec:	mov	r2, #0
   3f4f0:	ldr	r5, [r3, #228]	; 0xe4
   3f4f4:	mov	r4, r0
   3f4f8:	mov	r1, r5
   3f4fc:	str	r0, [r5, #12]
   3f500:	bl	372b0 <luaL_typerror@@Base+0xf44>
   3f504:	mov	r1, #2
   3f508:	mov	r6, r0
   3f50c:	mov	r0, r4
   3f510:	bl	36a74 <luaL_typerror@@Base+0x708>
   3f514:	ldr	r3, [r5]
   3f518:	ldr	r7, [r5, #24]
   3f51c:	ldr	r3, [r3, r6, lsl #4]
   3f520:	lsr	r2, r3, #28
   3f524:	cmp	r2, #1
   3f528:	mov	r8, r0
   3f52c:	beq	3f548 <luaL_typerror@@Base+0x91dc>
   3f530:	and	r2, r3, #-201326592	; 0xf4000000
   3f534:	cmp	r2, #872415232	; 0x34000000
   3f538:	beq	3f548 <luaL_typerror@@Base+0x91dc>
   3f53c:	and	r3, r3, #-134217728	; 0xf8000000
   3f540:	cmp	r3, #939524096	; 0x38000000
   3f544:	bne	3f5f8 <luaL_typerror@@Base+0x928c>
   3f548:	rsb	r2, r6, #0
   3f54c:	mov	r1, r7
   3f550:	mov	r0, r4
   3f554:	bl	3e200 <luaL_typerror@@Base+0x7e94>
   3f558:	ldr	r3, [r0, #4]
   3f55c:	cmn	r3, #1
   3f560:	bne	3f5ec <luaL_typerror@@Base+0x9280>
   3f564:	mvn	r3, #11
   3f568:	str	r8, [r0]
   3f56c:	str	r3, [r0, #4]
   3f570:	ldrb	r3, [r7, #4]
   3f574:	tst	r3, #4
   3f578:	bne	3f5c4 <luaL_typerror@@Base+0x9258>
   3f57c:	mov	r1, #12
   3f580:	ldr	r0, [r5, #12]
   3f584:	bl	32a24 <luaL_where@@Base+0x12920>
   3f588:	mov	r3, #10
   3f58c:	mov	ip, #21
   3f590:	strb	r3, [r0, #5]
   3f594:	str	r6, [r0, #8]
   3f598:	ldr	r2, [r4, #8]
   3f59c:	ldr	r3, [r4, #20]
   3f5a0:	ldr	r1, [r2, #20]
   3f5a4:	ldr	r2, [r2, #24]
   3f5a8:	strh	ip, [r0, #6]
   3f5ac:	cmp	r1, r2
   3f5b0:	mvn	r2, #10
   3f5b4:	stmdb	r3, {r0, r2}
   3f5b8:	bcs	3f5e0 <luaL_typerror@@Base+0x9274>
   3f5bc:	mov	r0, #1
   3f5c0:	pop	{r4, r5, r6, r7, r8, pc}
   3f5c4:	ldr	r2, [r4, #8]
   3f5c8:	bic	r3, r3, #4
   3f5cc:	strb	r3, [r7, #4]
   3f5d0:	ldr	r3, [r2, #48]	; 0x30
   3f5d4:	str	r3, [r7, #12]
   3f5d8:	str	r7, [r2, #48]	; 0x30
   3f5dc:	b	3f57c <luaL_typerror@@Base+0x9210>
   3f5e0:	mov	r0, r4
   3f5e4:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   3f5e8:	b	3f5bc <luaL_typerror@@Base+0x9250>
   3f5ec:	mov	r0, r4
   3f5f0:	ldr	r1, [pc, #16]	; 3f608 <luaL_typerror@@Base+0x929c>
   3f5f4:	bl	35a48 <lua_error@@Base+0xa8>
   3f5f8:	mov	r0, r4
   3f5fc:	mov	r2, #2976	; 0xba0
   3f600:	mov	r1, #1
   3f604:	bl	361d0 <luaL_argerror@@Base+0x8>
   3f608:			; <UNDEFINED> instruction: 0x000003b7
   3f60c:	ldr	r3, [r0, #8]
   3f610:	push	{r4, r5, r6, lr}
   3f614:	mov	r4, r0
   3f618:	ldr	r5, [r3, #228]	; 0xe4
   3f61c:	ldr	r2, [r0, #16]
   3f620:	mov	r1, r5
   3f624:	add	r2, r2, #8
   3f628:	str	r0, [r5, #12]
   3f62c:	bl	372b0 <luaL_typerror@@Base+0xf44>
   3f630:	mov	r1, #12
   3f634:	mov	r6, r0
   3f638:	ldr	r0, [r5, #12]
   3f63c:	bl	32a24 <luaL_where@@Base+0x12920>
   3f640:	mov	r3, #10
   3f644:	mov	ip, #21
   3f648:	strb	r3, [r0, #5]
   3f64c:	str	r6, [r0, #8]
   3f650:	ldr	r2, [r4, #8]
   3f654:	ldr	r3, [r4, #20]
   3f658:	ldr	r1, [r2, #20]
   3f65c:	ldr	r2, [r2, #24]
   3f660:	strh	ip, [r0, #6]
   3f664:	cmp	r1, r2
   3f668:	mvn	r2, #10
   3f66c:	stmdb	r3, {r0, r2}
   3f670:	bcs	3f67c <luaL_typerror@@Base+0x9310>
   3f674:	mov	r0, #1
   3f678:	pop	{r4, r5, r6, pc}
   3f67c:	mov	r0, r4
   3f680:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   3f684:	mov	r0, #1
   3f688:	pop	{r4, r5, r6, pc}
   3f68c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3f690:	vpush	{d8}
   3f694:	mov	r4, r0
   3f698:	sub	sp, sp, #24
   3f69c:	bl	3720c <luaL_typerror@@Base+0xea0>
   3f6a0:	ldrh	r5, [r0, #6]
   3f6a4:	add	r6, r0, #8
   3f6a8:	cmp	r5, #21
   3f6ac:	beq	3f83c <luaL_typerror@@Base+0x94d0>
   3f6b0:	ldr	r7, [r4, #8]
   3f6b4:	ldr	lr, [r7, #228]	; 0xe4
   3f6b8:	ldr	r8, [lr]
   3f6bc:	str	r4, [lr, #12]
   3f6c0:	add	ip, r8, r5, lsl #4
   3f6c4:	ldr	r2, [r8, r5, lsl #4]
   3f6c8:	lsr	r1, r2, #28
   3f6cc:	cmp	r1, #8
   3f6d0:	bne	3f6ec <luaL_typerror@@Base+0x9380>
   3f6d4:	uxth	r1, r2
   3f6d8:	ldr	r2, [r8, r1, lsl #4]
   3f6dc:	add	ip, r8, r1, lsl #4
   3f6e0:	lsr	r1, r2, #28
   3f6e4:	cmp	r1, #8
   3f6e8:	beq	3f6d4 <luaL_typerror@@Base+0x9368>
   3f6ec:	ldr	r3, [pc, #820]	; 3fa28 <luaL_typerror@@Base+0x96bc>
   3f6f0:	and	r3, r3, r2
   3f6f4:	cmp	r3, #545259520	; 0x20800000
   3f6f8:	beq	3f74c <luaL_typerror@@Base+0x93e0>
   3f6fc:	and	r3, r2, #-201326592	; 0xf4000000
   3f700:	cmp	r3, #872415232	; 0x34000000
   3f704:	ldr	r3, [ip, #4]
   3f708:	beq	3f778 <luaL_typerror@@Base+0x940c>
   3f70c:	cmp	r3, #8
   3f710:	beq	3f884 <luaL_typerror@@Base+0x9518>
   3f714:	cmp	r1, #6
   3f718:	mov	r3, r1
   3f71c:	beq	3f9bc <luaL_typerror@@Base+0x9650>
   3f720:	cmp	r1, #5
   3f724:	beq	3f9c8 <luaL_typerror@@Base+0x965c>
   3f728:	cmp	r1, #2
   3f72c:	beq	3f940 <luaL_typerror@@Base+0x95d4>
   3f730:	cmp	r3, #1
   3f734:	beq	3f960 <luaL_typerror@@Base+0x95f4>
   3f738:	and	r2, r2, #-134217728	; 0xf8000000
   3f73c:	cmp	r2, #939524096	; 0x38000000
   3f740:	beq	3f960 <luaL_typerror@@Base+0x95f4>
   3f744:	ldr	r7, [pc, #736]	; 3fa2c <luaL_typerror@@Base+0x96c0>
   3f748:	b	3f844 <luaL_typerror@@Base+0x94d8>
   3f74c:	ldr	r6, [r0, #8]
   3f750:	uxth	r1, r2
   3f754:	ldr	r2, [r8, r1, lsl #4]
   3f758:	add	ip, r8, r1, lsl #4
   3f75c:	lsr	r1, r2, #28
   3f760:	cmp	r1, #8
   3f764:	beq	3f750 <luaL_typerror@@Base+0x93e4>
   3f768:	and	r3, r2, #-201326592	; 0xf4000000
   3f76c:	cmp	r3, #872415232	; 0x34000000
   3f770:	ldr	r3, [ip, #4]
   3f774:	bne	3f70c <luaL_typerror@@Base+0x93a0>
   3f778:	cmp	r3, #16
   3f77c:	ldr	r2, [r7, #88]	; 0x58
   3f780:	vldrne	s0, [r0, #8]
   3f784:	vldrne	s16, [r0, #12]
   3f788:	add	r6, r7, #80	; 0x50
   3f78c:	vldreq	d8, [r0, #16]
   3f790:	ldr	r5, [r4, #20]
   3f794:	vldreq	d0, [r0, #8]
   3f798:	str	r2, [r7, #80]	; 0x50
   3f79c:	vcvtne.f64.f32	d0, s0
   3f7a0:	str	r4, [r7, #92]	; 0x5c
   3f7a4:	mov	r2, #0
   3f7a8:	ldr	r1, [pc, #640]	; 3fa30 <luaL_typerror@@Base+0x96c4>
   3f7ac:	mov	r0, r6
   3f7b0:	vcvtne.f64.f32	d8, s16
   3f7b4:	bl	30bd4 <luaL_where@@Base+0x10ad0>
   3f7b8:	vmov	r8, s17
   3f7bc:	cmp	r8, #0
   3f7c0:	str	r0, [r7, #80]	; 0x50
   3f7c4:	blt	3f9f8 <luaL_typerror@@Base+0x968c>
   3f7c8:	ldr	r3, [r7, #84]	; 0x54
   3f7cc:	cmp	r0, r3
   3f7d0:	beq	3fa18 <luaL_typerror@@Base+0x96ac>
   3f7d4:	mov	r3, #43	; 0x2b
   3f7d8:	strb	r3, [r0], #1
   3f7dc:	str	r0, [r7, #80]	; 0x50
   3f7e0:	mov	r2, #0
   3f7e4:	vmov.f64	d0, d8
   3f7e8:	ldr	r1, [pc, #576]	; 3fa30 <luaL_typerror@@Base+0x96c4>
   3f7ec:	mov	r0, r6
   3f7f0:	bl	30bd4 <luaL_where@@Base+0x10ad0>
   3f7f4:	ldr	r3, [r7, #84]	; 0x54
   3f7f8:	str	r0, [r7, #80]	; 0x50
   3f7fc:	ldrb	r2, [r0, #-1]
   3f800:	cmp	r2, #97	; 0x61
   3f804:	movcc	r8, #105	; 0x69
   3f808:	movcs	r8, #73	; 0x49
   3f80c:	cmp	r0, r3
   3f810:	beq	3fa08 <luaL_typerror@@Base+0x969c>
   3f814:	strb	r8, [r0]
   3f818:	ldr	r1, [r7, #88]	; 0x58
   3f81c:	add	r2, r0, #1
   3f820:	str	r2, [r7, #80]	; 0x50
   3f824:	mov	r0, r4
   3f828:	sub	r2, r2, r1
   3f82c:	bl	20260 <luaL_where@@Base+0x15c>
   3f830:	mvn	r3, #4
   3f834:	stmdb	r5, {r0, r3}
   3f838:	b	3f864 <luaL_typerror@@Base+0x94f8>
   3f83c:	ldr	r5, [r0, #8]
   3f840:	ldr	r7, [pc, #492]	; 3fa34 <luaL_typerror@@Base+0x96c8>
   3f844:	mov	r1, r5
   3f848:	mov	r0, r4
   3f84c:	bl	3cfec <luaL_typerror@@Base+0x6c80>
   3f850:	mov	r3, r6
   3f854:	mov	r1, r7
   3f858:	add	r2, r0, #16
   3f85c:	mov	r0, r4
   3f860:	bl	20040 <lua_getstack@@Base+0x388>
   3f864:	ldr	r3, [r4, #8]
   3f868:	ldrd	r2, [r3, #20]
   3f86c:	cmp	r2, r3
   3f870:	movcc	r0, #1
   3f874:	bcs	3f9d4 <luaL_typerror@@Base+0x9668>
   3f878:	add	sp, sp, #24
   3f87c:	vpop	{d8}
   3f880:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3f884:	ands	r3, r2, #-67108864	; 0xfc000000
   3f888:	bne	3f714 <luaL_typerror@@Base+0x93a8>
   3f88c:	ldr	r1, [pc, #420]	; 3fa38 <luaL_typerror@@Base+0x96cc>
   3f890:	ands	r9, r2, #8388608	; 0x800000
   3f894:	ldrd	r6, [r0, #8]
   3f898:	ldr	sl, [r4, #20]
   3f89c:	strh	r1, [sp, #22]
   3f8a0:	bne	3f9e4 <luaL_typerror@@Base+0x9678>
   3f8a4:	cmp	r6, #0
   3f8a8:	sbcs	r3, r7, #0
   3f8ac:	addge	r5, sp, #22
   3f8b0:	bge	3f8cc <luaL_typerror@@Base+0x9560>
   3f8b4:	rsbs	r6, r6, #0
   3f8b8:	rsc	r7, r7, #0
   3f8bc:	mov	r9, #1
   3f8c0:	add	r5, sp, #22
   3f8c4:	b	3f8cc <luaL_typerror@@Base+0x9560>
   3f8c8:	mov	r5, r8
   3f8cc:	mov	r0, r6
   3f8d0:	mov	r1, r7
   3f8d4:	mov	r2, #10
   3f8d8:	mov	r3, #0
   3f8dc:	bl	6e5bc <luaL_openlibs@@Base+0x4dfc>
   3f8e0:	mov	r0, r6
   3f8e4:	mov	r1, r7
   3f8e8:	mov	r3, #0
   3f8ec:	sub	r8, r5, #1
   3f8f0:	add	r2, r2, #48	; 0x30
   3f8f4:	strb	r2, [r5, #-1]
   3f8f8:	mov	r2, #10
   3f8fc:	bl	6e5bc <luaL_openlibs@@Base+0x4dfc>
   3f900:	mov	r6, r0
   3f904:	mov	r7, r1
   3f908:	orrs	r3, r6, r7
   3f90c:	bne	3f8c8 <luaL_typerror@@Base+0x955c>
   3f910:	cmp	r9, #0
   3f914:	movne	r3, #45	; 0x2d
   3f918:	strbne	r3, [r8, #-1]
   3f91c:	subne	r8, r5, #2
   3f920:	add	r3, sp, #24
   3f924:	sub	r2, r3, r8
   3f928:	mov	r1, r8
   3f92c:	mov	r0, r4
   3f930:	bl	20260 <luaL_where@@Base+0x15c>
   3f934:	mvn	r3, #4
   3f938:	stmdb	sl, {r0, r3}
   3f93c:	b	3f864 <luaL_typerror@@Base+0x94f8>
   3f940:	ldr	r6, [r6]
   3f944:	uxth	r1, r2
   3f948:	ldr	r2, [r8, r1, lsl #4]
   3f94c:	add	ip, r8, r1, lsl #4
   3f950:	lsr	r3, r2, #28
   3f954:	cmp	r3, #8
   3f958:	beq	3f944 <luaL_typerror@@Base+0x95d8>
   3f95c:	b	3f730 <luaL_typerror@@Base+0x93c4>
   3f960:	sub	r1, ip, r8
   3f964:	mov	r0, lr
   3f968:	asr	r1, r1, #4
   3f96c:	mov	r2, #18
   3f970:	bl	1f3c4 <lua_atpanic@@Base+0x1f4>
   3f974:	cmp	r0, #0
   3f978:	beq	3f744 <luaL_typerror@@Base+0x93d8>
   3f97c:	ldr	r3, [r4, #16]
   3f980:	ldrd	r6, [r0]
   3f984:	ldr	r2, [r4, #20]
   3f988:	ldr	ip, [r3, #-4]
   3f98c:	add	r1, r2, #16
   3f990:	strd	r6, [r3, #-8]
   3f994:	sub	r3, r1, r3
   3f998:	add	r3, r3, #2
   3f99c:	mov	r0, #0
   3f9a0:	str	ip, [r2, #4]
   3f9a4:	str	r4, [r2, #8]
   3f9a8:	str	r3, [r2, #12]
   3f9ac:	str	r0, [r2]
   3f9b0:	str	r1, [r4, #20]
   3f9b4:	str	r1, [r4, #16]
   3f9b8:	b	3f878 <luaL_typerror@@Base+0x950c>
   3f9bc:	ldr	r6, [r6]
   3f9c0:	ldr	r7, [pc, #100]	; 3fa2c <luaL_typerror@@Base+0x96c0>
   3f9c4:	b	3f844 <luaL_typerror@@Base+0x94d8>
   3f9c8:	ldr	r6, [r6]
   3f9cc:	ldr	r7, [pc, #104]	; 3fa3c <luaL_typerror@@Base+0x96d0>
   3f9d0:	b	3f844 <luaL_typerror@@Base+0x94d8>
   3f9d4:	mov	r0, r4
   3f9d8:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   3f9dc:	mov	r0, #1
   3f9e0:	b	3f878 <luaL_typerror@@Base+0x950c>
   3f9e4:	add	r5, sp, #24
   3f9e8:	mov	r2, #85	; 0x55
   3f9ec:	mov	r9, r3
   3f9f0:	strb	r2, [r5, #-3]!
   3f9f4:	b	3f8cc <luaL_typerror@@Base+0x9560>
   3f9f8:	vcmp.f64	d8, d8
   3f9fc:	vmrs	APSR_nzcv, fpscr
   3fa00:	beq	3f7e0 <luaL_typerror@@Base+0x9474>
   3fa04:	b	3f7c8 <luaL_typerror@@Base+0x945c>
   3fa08:	mov	r0, r6
   3fa0c:	mov	r1, #1
   3fa10:	bl	2ff68 <luaL_where@@Base+0xfe64>
   3fa14:	b	3f814 <luaL_typerror@@Base+0x94a8>
   3fa18:	mov	r1, #1
   3fa1c:	mov	r0, r6
   3fa20:	bl	2ff68 <luaL_where@@Base+0xfe64>
   3fa24:	b	3f7d4 <luaL_typerror@@Base+0x9468>
   3fa28:			; <UNDEFINED> instruction: 0xf0800000
   3fa2c:	andeq	r2, r7, ip, lsl lr
   3fa30:	svceq	0x00000035
   3fa34:	andeq	r2, r7, r0, lsl lr
   3fa38:	andeq	r4, r0, ip, asr #24
   3fa3c:	andeq	r2, r7, ip, lsr #28
   3fa40:	ldr	r3, [r1, #28]
   3fa44:	add	r2, r2, #1
   3fa48:	cmp	r3, #0
   3fa4c:	clzne	r3, r3
   3fa50:	eorne	r3, r3, #31
   3fa54:	addne	r3, r3, #1
   3fa58:	b	3dae4 <luaL_typerror@@Base+0x7778>
   3fa5c:	sub	r3, r1, #1
   3fa60:	cmp	r3, #15
   3fa64:	push	{r4, r5, r6, r7, r8, lr}
   3fa68:	mov	r5, r1
   3fa6c:	mov	r6, r2
   3fa70:	mov	r7, r0
   3fa74:	bhi	3fb08 <luaL_typerror@@Base+0x979c>
   3fa78:	add	r1, r1, #4
   3fa7c:	lsl	r1, r1, #3
   3fa80:	bl	32a24 <luaL_where@@Base+0x12920>
   3fa84:	mov	r2, #11
   3fa88:	mvn	r3, #0
   3fa8c:	strb	r2, [r0, #5]
   3fa90:	strb	r5, [r0, #7]
   3fa94:	strb	r3, [r0, #6]
   3fa98:	ldr	r3, [r7, #8]
   3fa9c:	mov	r2, #0
   3faa0:	add	r3, r3, #144	; 0x90
   3faa4:	mov	r4, r0
   3faa8:	add	r1, r0, #32
   3faac:	str	r5, [r0, #24]
   3fab0:	str	r1, [r0, #8]
   3fab4:	strd	r2, [r0, #16]
   3fab8:	str	r2, [r0, #28]
   3fabc:	cmp	r6, #0
   3fac0:	beq	3fb00 <luaL_typerror@@Base+0x9794>
   3fac4:	cmp	r6, #26
   3fac8:	bhi	3fb74 <luaL_typerror@@Base+0x9808>
   3facc:	mov	r5, #24
   3fad0:	mov	r2, #0
   3fad4:	lsl	r5, r5, r6
   3fad8:	mov	r0, r7
   3fadc:	mov	r3, r5
   3fae0:	mov	r1, r2
   3fae4:	bl	205b0 <luaL_where@@Base+0x4ac>
   3fae8:	mvn	r3, #0
   3faec:	mvn	r6, r3, lsl r6
   3faf0:	add	r5, r0, r5
   3faf4:	str	r0, [r4, #20]
   3faf8:	str	r5, [r0, #20]
   3fafc:	str	r6, [r4, #28]
   3fb00:	mov	r0, r4
   3fb04:	pop	{r4, r5, r6, r7, r8, pc}
   3fb08:	mov	r1, #32
   3fb0c:	bl	32a24 <luaL_where@@Base+0x12920>
   3fb10:	mov	r2, #0
   3fb14:	mvn	r3, #0
   3fb18:	mov	r1, #11
   3fb1c:	cmp	r5, r2
   3fb20:	strb	r1, [r0, #5]
   3fb24:	strb	r3, [r0, #6]
   3fb28:	strb	r2, [r0, #7]
   3fb2c:	ldr	r3, [r7, #8]
   3fb30:	mov	r4, r0
   3fb34:	add	r3, r3, #144	; 0x90
   3fb38:	str	r2, [r0, #8]
   3fb3c:	str	r2, [r0, #16]
   3fb40:	str	r2, [r0, #24]
   3fb44:	str	r2, [r0, #28]
   3fb48:	str	r3, [r0, #20]
   3fb4c:	beq	3fabc <luaL_typerror@@Base+0x9750>
   3fb50:	cmp	r5, #134217729	; 0x8000001
   3fb54:	bhi	3fb74 <luaL_typerror@@Base+0x9808>
   3fb58:	lsl	r3, r5, #3
   3fb5c:	mov	r1, r2
   3fb60:	mov	r0, r7
   3fb64:	bl	205b0 <luaL_where@@Base+0x4ac>
   3fb68:	str	r5, [r4, #24]
   3fb6c:	str	r0, [r4, #8]
   3fb70:	b	3fabc <luaL_typerror@@Base+0x9750>
   3fb74:	mov	r0, r7
   3fb78:	mov	r1, #139	; 0x8b
   3fb7c:	bl	20258 <luaL_where@@Base+0x154>
   3fb80:	push	{r4, lr}
   3fb84:	bl	3fa5c <luaL_typerror@@Base+0x96f0>
   3fb88:	ldr	r2, [r0, #24]
   3fb8c:	ldr	r3, [r0, #8]
   3fb90:	cmp	r2, #0
   3fb94:	beq	3fbb0 <luaL_typerror@@Base+0x9844>
   3fb98:	add	r2, r3, r2, lsl #3
   3fb9c:	mvn	r1, #0
   3fba0:	str	r1, [r3, #4]
   3fba4:	add	r3, r3, #8
   3fba8:	cmp	r3, r2
   3fbac:	bne	3fba0 <luaL_typerror@@Base+0x9834>
   3fbb0:	ldr	r1, [r0, #28]
   3fbb4:	cmp	r1, #0
   3fbb8:	popeq	{r4, pc}
   3fbbc:	ldr	r3, [r0, #20]
   3fbc0:	add	r1, r1, r1, lsl #1
   3fbc4:	add	r2, r3, #24
   3fbc8:	add	r1, r2, r1, lsl #3
   3fbcc:	mov	lr, #0
   3fbd0:	mvn	ip, #0
   3fbd4:	cmp	r1, r2
   3fbd8:	str	lr, [r3, #16]
   3fbdc:	str	ip, [r3, #12]
   3fbe0:	str	ip, [r3, #4]
   3fbe4:	mov	r3, r2
   3fbe8:	popeq	{r4, pc}
   3fbec:	add	r2, r2, #24
   3fbf0:	b	3fbd4 <luaL_typerror@@Base+0x9868>
   3fbf4:	push	{r4, r5, r6, r7, r8, lr}
   3fbf8:	mov	r1, r0
   3fbfc:	mov	r6, r0
   3fc00:	ldr	r7, [r0, #8]
   3fc04:	bl	25110 <luaL_where@@Base+0x500c>
   3fc08:	mov	r2, #6
   3fc0c:	mov	r1, #0
   3fc10:	mov	r0, r6
   3fc14:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   3fc18:	mov	r2, #2
   3fc1c:	mov	r1, #0
   3fc20:	ldr	r4, [r6, #8]
   3fc24:	str	r0, [r6, #36]	; 0x24
   3fc28:	mov	r0, r6
   3fc2c:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   3fc30:	mvn	r3, #11
   3fc34:	mov	r1, #255	; 0xff
   3fc38:	str	r3, [r4, #124]	; 0x7c
   3fc3c:	str	r0, [r4, #120]	; 0x78
   3fc40:	mov	r0, r6
   3fc44:	bl	24fe4 <luaL_where@@Base+0x4ee0>
   3fc48:	ldr	r8, [r6, #8]
   3fc4c:	ldr	r1, [pc, #240]	; 3fd44 <luaL_typerror@@Base+0x99d8>
   3fc50:	add	r8, r8, #228	; 0xe4
   3fc54:	ldrb	r4, [r1, #2]
   3fc58:	add	r5, r1, #2
   3fc5c:	cmp	r4, #95	; 0x5f
   3fc60:	cmpne	r4, #0
   3fc64:	beq	3fc78 <luaL_typerror@@Base+0x990c>
   3fc68:	ldrb	r4, [r5, #1]!
   3fc6c:	cmp	r4, #0
   3fc70:	cmpne	r4, #95	; 0x5f
   3fc74:	bne	3fc68 <luaL_typerror@@Base+0x98fc>
   3fc78:	sub	r2, r5, r1
   3fc7c:	mov	r0, r6
   3fc80:	bl	20260 <luaL_where@@Base+0x15c>
   3fc84:	cmp	r4, #0
   3fc88:	mov	r1, r5
   3fc8c:	str	r0, [r8, #4]!
   3fc90:	bne	3fc54 <luaL_typerror@@Base+0x98e8>
   3fc94:	ldr	r8, [pc, #172]	; 3fd48 <luaL_typerror@@Base+0x99dc>
   3fc98:	ldr	r5, [pc, #172]	; 3fd4c <luaL_typerror@@Base+0x99e0>
   3fc9c:	mov	r4, #1
   3fca0:	mov	r2, #3
   3fca4:	b	3fcb8 <luaL_typerror@@Base+0x994c>
   3fca8:	ldr	r5, [r8, #4]!
   3fcac:	mov	r0, r5
   3fcb0:	bl	12e80 <strlen@plt>
   3fcb4:	mov	r2, r0
   3fcb8:	mov	r1, r5
   3fcbc:	mov	r0, r6
   3fcc0:	bl	20260 <luaL_where@@Base+0x15c>
   3fcc4:	cmp	r4, #22
   3fcc8:	ldrb	r3, [r0, #4]
   3fccc:	strb	r4, [r0, #6]
   3fcd0:	add	r4, r4, #1
   3fcd4:	orr	r3, r3, #32
   3fcd8:	strb	r3, [r0, #4]
   3fcdc:	bne	3fca8 <luaL_typerror@@Base+0x993c>
   3fce0:	mov	r0, r6
   3fce4:	mov	r1, #0
   3fce8:	bl	20530 <luaL_where@@Base+0x42c>
   3fcec:	add	r2, r7, #588	; 0x24c
   3fcf0:	add	r3, r7, #604	; 0x25c
   3fcf4:	add	r2, r2, #3
   3fcf8:	add	r3, r3, #3
   3fcfc:	bic	r2, r2, #15
   3fd00:	bic	r3, r3, #15
   3fd04:	mvn	r4, #0
   3fd08:	mvn	r5, #-2147483648	; 0x80000000
   3fd0c:	mov	r6, #0
   3fd10:	ldrb	r1, [r0, #4]
   3fd14:	orr	r1, r1, #32
   3fd18:	strb	r1, [r0, #4]
   3fd1c:	ldr	r1, [r7, #20]
   3fd20:	mov	r0, #0
   3fd24:	lsl	r1, r1, #2
   3fd28:	str	r1, [r7, #24]
   3fd2c:	mov	r7, #-2147483648	; 0x80000000
   3fd30:	strd	r4, [r2]
   3fd34:	strd	r4, [r2, #8]
   3fd38:	strd	r6, [r3]
   3fd3c:	strd	r6, [r3, #8]
   3fd40:	pop	{r4, r5, r6, r7, r8, pc}
   3fd44:	andeq	r2, r7, ip, lsr lr
   3fd48:			; <UNDEFINED> instruction: 0x0006f1b0
   3fd4c:	andeq	r2, r7, r4, asr #29
   3fd50:	cmp	r1, #0
   3fd54:	addgt	r1, r1, #1
   3fd58:	movle	r1, #0
   3fd5c:	cmp	r2, #0
   3fd60:	beq	3fd78 <luaL_typerror@@Base+0x9a0c>
   3fd64:	cmp	r2, #1
   3fd68:	subne	r2, r2, #1
   3fd6c:	clzne	r2, r2
   3fd70:	eorne	r2, r2, #31
   3fd74:	addne	r2, r2, #1
   3fd78:	b	3fb80 <luaL_typerror@@Base+0x9814>
   3fd7c:	ldr	r1, [r0, #24]
   3fd80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fd84:	mov	r3, r1
   3fd88:	add	r2, r1, #1
   3fd8c:	str	r2, [r0, #24]
   3fd90:	ldrb	r2, [r3], #2
   3fd94:	mov	r4, r0
   3fd98:	sub	sp, sp, #52	; 0x34
   3fd9c:	add	ip, r1, #3
   3fda0:	add	r0, r1, #4
   3fda4:	str	r3, [r4, #24]
   3fda8:	str	r2, [sp, #16]
   3fdac:	ldrb	r2, [r1, #1]
   3fdb0:	str	ip, [r4, #24]
   3fdb4:	ldrb	r3, [r1, #2]
   3fdb8:	str	r0, [r4, #24]
   3fdbc:	ldrb	sl, [r1, #4]
   3fdc0:	ldrb	r8, [r1, #3]
   3fdc4:	add	r1, r1, #5
   3fdc8:	cmp	sl, #127	; 0x7f
   3fdcc:	bhi	405ec <luaL_typerror@@Base+0xa280>
   3fdd0:	str	r1, [r4, #24]
   3fdd4:	ldrb	r0, [r1]
   3fdd8:	add	r1, r1, #1
   3fddc:	cmp	r0, #127	; 0x7f
   3fde0:	str	r0, [sp, #8]
   3fde4:	bhi	40618 <luaL_typerror@@Base+0xa2ac>
   3fde8:	str	r1, [r4, #24]
   3fdec:	ldrb	r0, [r1]
   3fdf0:	add	r1, r1, #1
   3fdf4:	cmp	r0, #127	; 0x7f
   3fdf8:	str	r0, [sp, #12]
   3fdfc:	bhi	40648 <luaL_typerror@@Base+0xa2dc>
   3fe00:	ldr	r0, [r4, #108]	; 0x6c
   3fe04:	ldr	ip, [sp, #12]
   3fe08:	ands	r0, r0, #2
   3fe0c:	str	r1, [r4, #24]
   3fe10:	add	fp, ip, #1
   3fe14:	bne	3fe70 <luaL_typerror@@Base+0x9b04>
   3fe18:	ldrb	ip, [r1]
   3fe1c:	add	r1, r1, #1
   3fe20:	cmp	ip, #127	; 0x7f
   3fe24:	str	ip, [sp, #4]
   3fe28:	bhi	40510 <luaL_typerror@@Base+0xa1a4>
   3fe2c:	ldr	r0, [sp, #4]
   3fe30:	str	r1, [r4, #24]
   3fe34:	cmp	r0, #0
   3fe38:	beq	3fe70 <luaL_typerror@@Base+0x9b04>
   3fe3c:	ldrb	ip, [r1]
   3fe40:	add	r1, r1, #1
   3fe44:	cmp	ip, #127	; 0x7f
   3fe48:	bhi	406d4 <luaL_typerror@@Base+0xa368>
   3fe4c:	str	r1, [r4, #24]
   3fe50:	ldrb	r0, [r1]
   3fe54:	str	ip, [sp, #28]
   3fe58:	add	r1, r1, #1
   3fe5c:	cmp	r0, #127	; 0x7f
   3fe60:	bhi	406a8 <luaL_typerror@@Base+0xa33c>
   3fe64:	str	r0, [sp, #32]
   3fe68:	str	r1, [r4, #24]
   3fe6c:	b	3fe80 <luaL_typerror@@Base+0x9b14>
   3fe70:	mov	r1, #0
   3fe74:	str	r1, [sp, #32]
   3fe78:	str	r1, [sp, #28]
   3fe7c:	str	r1, [sp, #4]
   3fe80:	add	r7, sl, #16
   3fe84:	add	r7, r7, fp
   3fe88:	str	r3, [sp, #20]
   3fe8c:	lsl	r7, r7, #2
   3fe90:	ldr	r3, [sp, #8]
   3fe94:	add	r1, r8, #1
   3fe98:	add	r7, r7, #7
   3fe9c:	bic	r7, r7, #7
   3fea0:	bic	r1, r1, #1
   3fea4:	add	r9, r7, r3, lsl #3
   3fea8:	str	r2, [sp, #24]
   3feac:	add	r2, r9, r1, lsl #1
   3feb0:	ldr	r1, [sp, #4]
   3feb4:	str	r2, [sp, #36]	; 0x24
   3feb8:	add	r2, r1, r2
   3febc:	mov	r1, r2
   3fec0:	ldr	r0, [r4, #4]
   3fec4:	str	r2, [sp]
   3fec8:	bl	32a24 <luaL_where@@Base+0x12920>
   3fecc:	add	r5, sl, #1
   3fed0:	ldrb	lr, [sp, #16]
   3fed4:	ldr	r2, [sp, #24]
   3fed8:	ldr	r3, [sp, #20]
   3fedc:	ldr	ip, [sp]
   3fee0:	mov	r1, #7
   3fee4:	lsl	r5, r5, #2
   3fee8:	add	r9, r0, r9
   3feec:	strb	r2, [r0, #6]
   3fef0:	strb	r3, [r0, #7]
   3fef4:	strb	r8, [r0, #36]	; 0x24
   3fef8:	strb	lr, [r0, #37]	; 0x25
   3fefc:	strb	r1, [r0, #5]
   3ff00:	mov	r6, r0
   3ff04:	ldr	r1, [r4, #76]	; 0x4c
   3ff08:	sub	r2, r7, r5
   3ff0c:	str	ip, [r0, #32]
   3ff10:	str	r9, [r0, #20]
   3ff14:	str	fp, [r0, #8]
   3ff18:	add	r7, r0, r7
   3ff1c:	ldr	r0, [sp, #8]
   3ff20:	mov	r3, #0
   3ff24:	str	r0, [r6, #28]
   3ff28:	str	r7, [r6, #16]
   3ff2c:	str	r1, [r6, #40]	; 0x28
   3ff30:	str	r3, [r6, #24]
   3ff34:	strh	r3, [r6, #38]	; 0x26
   3ff38:	str	r3, [r6, r2]
   3ff3c:	ldrb	r3, [r6, #37]	; 0x25
   3ff40:	ldrb	r0, [r6, #7]
   3ff44:	ldr	r7, [sp, #12]
   3ff48:	tst	r3, #2
   3ff4c:	ldr	r1, [r4, #24]
   3ff50:	moveq	r3, #89	; 0x59
   3ff54:	movne	r3, #92	; 0x5c
   3ff58:	lsl	r2, r7, #2
   3ff5c:	orr	r3, r3, r0, lsl #8
   3ff60:	add	r0, r1, r2
   3ff64:	str	r3, [r6, #64]	; 0x40
   3ff68:	str	r0, [r4, #24]
   3ff6c:	add	r0, r6, #68	; 0x44
   3ff70:	bl	12cb8 <memcpy@plt>
   3ff74:	ldr	r3, [r4, #108]	; 0x6c
   3ff78:	tst	r3, #1
   3ff7c:	beq	3ffa8 <luaL_typerror@@Base+0x9c3c>
   3ff80:	cmp	fp, #1
   3ff84:	bls	3ffa8 <luaL_typerror@@Base+0x9c3c>
   3ff88:	add	r1, r6, r7, lsl #2
   3ff8c:	add	r1, r1, #64	; 0x40
   3ff90:	add	r3, r6, #64	; 0x40
   3ff94:	ldr	r2, [r3, #4]!
   3ff98:	rev	r2, r2
   3ff9c:	cmp	r1, r3
   3ffa0:	str	r2, [r3]
   3ffa4:	bne	3ff94 <luaL_typerror@@Base+0x9c28>
   3ffa8:	cmp	r8, #0
   3ffac:	bne	403ec <luaL_typerror@@Base+0xa080>
   3ffb0:	ldr	r2, [r6, #16]
   3ffb4:	sub	r5, r5, #4
   3ffb8:	cmp	sl, #0
   3ffbc:	sub	r5, r2, r5
   3ffc0:	beq	400ac <luaL_typerror@@Base+0x9d40>
   3ffc4:	str	r6, [sp, #16]
   3ffc8:	mov	fp, #0
   3ffcc:	mov	r6, r5
   3ffd0:	b	4005c <luaL_typerror@@Base+0x9cf0>
   3ffd4:	cmp	r5, #1
   3ffd8:	beq	4023c <luaL_typerror@@Base+0x9ed0>
   3ffdc:	cmp	r5, #0
   3ffe0:	beq	40210 <luaL_typerror@@Base+0x9ea4>
   3ffe4:	cmp	r5, #4
   3ffe8:	beq	40374 <luaL_typerror@@Base+0xa008>
   3ffec:	cmp	r5, #2
   3fff0:	movne	r7, #12
   3fff4:	moveq	r7, #11
   3fff8:	mov	r1, #16
   3fffc:	bl	32a24 <luaL_where@@Base+0x12920>
   40000:	mov	r3, #10
   40004:	strb	r3, [r0, #5]
   40008:	ldr	r2, [r4, #24]
   4000c:	strh	r7, [r0, #6]
   40010:	str	r0, [r6]
   40014:	ldrb	r1, [r2]
   40018:	add	r2, r2, #1
   4001c:	cmp	r1, #127	; 0x7f
   40020:	bhi	4043c <luaL_typerror@@Base+0xa0d0>
   40024:	str	r2, [r4, #24]
   40028:	str	r1, [r0, #8]
   4002c:	ldrb	r1, [r2]
   40030:	add	r2, r2, #1
   40034:	cmp	r1, #127	; 0x7f
   40038:	bhi	40468 <luaL_typerror@@Base+0xa0fc>
   4003c:	cmp	r5, #4
   40040:	str	r2, [r4, #24]
   40044:	str	r1, [r0, #12]
   40048:	beq	40340 <luaL_typerror@@Base+0x9fd4>
   4004c:	add	fp, fp, #1
   40050:	cmp	sl, fp
   40054:	add	r6, r6, #4
   40058:	beq	400a4 <luaL_typerror@@Base+0x9d38>
   4005c:	ldr	r2, [r4, #24]
   40060:	add	r1, r2, #1
   40064:	ldrb	r5, [r2]
   40068:	cmp	r5, #127	; 0x7f
   4006c:	bhi	40314 <luaL_typerror@@Base+0x9fa8>
   40070:	cmp	r5, #4
   40074:	str	r1, [r4, #24]
   40078:	ldr	r0, [r4, #4]
   4007c:	bls	3ffd4 <luaL_typerror@@Base+0x9c68>
   40080:	sub	r2, r5, #5
   40084:	add	ip, r1, r2
   40088:	str	ip, [r4, #24]
   4008c:	bl	20260 <luaL_where@@Base+0x15c>
   40090:	add	fp, fp, #1
   40094:	cmp	sl, fp
   40098:	add	r6, r6, #4
   4009c:	str	r0, [r6, #-4]
   400a0:	bne	4005c <luaL_typerror@@Base+0x9cf0>
   400a4:	ldr	r6, [sp, #16]
   400a8:	ldr	r2, [r6, #16]
   400ac:	ldr	r7, [sp, #8]
   400b0:	str	sl, [r6, #24]
   400b4:	cmp	r7, #0
   400b8:	beq	40118 <luaL_typerror@@Base+0x9dac>
   400bc:	mov	r1, #0
   400c0:	mvn	r8, #13
   400c4:	ldr	r0, [r4, #24]
   400c8:	ldrb	r3, [r0], #1
   400cc:	and	r5, r3, #1
   400d0:	lsr	r3, r3, #1
   400d4:	cmp	r3, #63	; 0x3f
   400d8:	bhi	403a4 <luaL_typerror@@Base+0xa038>
   400dc:	cmp	r5, #0
   400e0:	str	r0, [r4, #24]
   400e4:	str	r3, [r2]
   400e8:	streq	r8, [r2, #4]
   400ec:	beq	40108 <luaL_typerror@@Base+0x9d9c>
   400f0:	ldrb	r3, [r0]
   400f4:	add	r0, r0, #1
   400f8:	cmp	r3, #127	; 0x7f
   400fc:	bhi	404e4 <luaL_typerror@@Base+0xa178>
   40100:	str	r0, [r4, #24]
   40104:	str	r3, [r2, #4]
   40108:	add	r1, r1, #1
   4010c:	cmp	r7, r1
   40110:	add	r2, r2, #8
   40114:	bne	400c4 <luaL_typerror@@Base+0x9d58>
   40118:	ldr	r3, [sp, #4]
   4011c:	cmp	r3, #0
   40120:	ldr	r3, [sp, #28]
   40124:	str	r3, [r6, #44]	; 0x2c
   40128:	ldr	r3, [sp, #32]
   4012c:	str	r3, [r6, #48]	; 0x30
   40130:	beq	403d0 <luaL_typerror@@Base+0xa064>
   40134:	cmp	r3, #255	; 0xff
   40138:	ble	40150 <luaL_typerror@@Base+0x9de4>
   4013c:	cmp	r3, #65536	; 0x10000
   40140:	ldr	r3, [sp, #12]
   40144:	lsllt	r3, r3, #1
   40148:	lslge	r3, r3, #2
   4014c:	str	r3, [sp, #12]
   40150:	ldr	r2, [sp, #36]	; 0x24
   40154:	ldr	r3, [sp, #12]
   40158:	ldr	r1, [r4, #24]
   4015c:	ldr	r0, [sp, #4]
   40160:	add	r3, r2, r3
   40164:	add	r3, r6, r3
   40168:	add	r5, r6, r2
   4016c:	add	r2, r1, r0
   40170:	str	r3, [r6, #56]	; 0x38
   40174:	str	r5, [r6, #52]	; 0x34
   40178:	str	r2, [r4, #24]
   4017c:	mov	r2, r0
   40180:	mov	r0, r5
   40184:	bl	12cb8 <memcpy@plt>
   40188:	ldr	r3, [r4, #108]	; 0x6c
   4018c:	tst	r3, #1
   40190:	beq	401d8 <luaL_typerror@@Base+0x9e6c>
   40194:	ldr	r2, [r6, #48]	; 0x30
   40198:	cmp	r2, #255	; 0xff
   4019c:	ble	401d8 <luaL_typerror@@Base+0x9e6c>
   401a0:	ldr	r3, [r6, #8]
   401a4:	cmp	r2, #65536	; 0x10000
   401a8:	sub	r2, r3, #1
   401ac:	blt	40678 <luaL_typerror@@Base+0xa30c>
   401b0:	cmp	r2, #0
   401b4:	addne	r3, r5, r3, lsl #2
   401b8:	subne	r1, r3, #8
   401bc:	subne	r3, r5, #4
   401c0:	beq	401d8 <luaL_typerror@@Base+0x9e6c>
   401c4:	ldr	r2, [r3, #4]!
   401c8:	rev	r2, r2
   401cc:	cmp	r1, r3
   401d0:	str	r2, [r3]
   401d4:	bne	401c4 <luaL_typerror@@Base+0x9e58>
   401d8:	ldrb	r1, [r6, #36]	; 0x24
   401dc:	ldr	r3, [r6, #56]	; 0x38
   401e0:	cmp	r1, #0
   401e4:	beq	40200 <luaL_typerror@@Base+0x9e94>
   401e8:	ldrb	r2, [r3]
   401ec:	add	r3, r3, #1
   401f0:	cmp	r2, #0
   401f4:	bne	401e8 <luaL_typerror@@Base+0x9e7c>
   401f8:	subs	r1, r1, #1
   401fc:	bne	401e8 <luaL_typerror@@Base+0x9e7c>
   40200:	mov	r0, r6
   40204:	str	r3, [r6, #60]	; 0x3c
   40208:	add	sp, sp, #52	; 0x34
   4020c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40210:	ldr	r1, [r4, #72]	; 0x48
   40214:	ldr	ip, [r0, #28]
   40218:	ldr	r2, [r0, #20]
   4021c:	add	r1, r1, ip
   40220:	cmp	r2, r1
   40224:	bls	40700 <luaL_typerror@@Base+0xa394>
   40228:	ldr	r1, [r2, #-8]
   4022c:	sub	r2, r2, #8
   40230:	str	r2, [r0, #20]
   40234:	str	r1, [r6]
   40238:	b	4004c <luaL_typerror@@Base+0x9ce0>
   4023c:	ldrb	r8, [r1]
   40240:	add	r1, r1, #1
   40244:	cmp	r8, #127	; 0x7f
   40248:	bhi	4053c <luaL_typerror@@Base+0xa1d0>
   4024c:	str	r1, [r4, #24]
   40250:	ldrb	r7, [r1]
   40254:	add	r1, r1, #1
   40258:	cmp	r7, #127	; 0x7f
   4025c:	bhi	40568 <luaL_typerror@@Base+0xa1fc>
   40260:	cmp	r7, #0
   40264:	str	r1, [r4, #24]
   40268:	beq	40380 <luaL_typerror@@Base+0xa014>
   4026c:	cmp	r7, #1
   40270:	beq	40494 <luaL_typerror@@Base+0xa128>
   40274:	sub	r2, r7, #1
   40278:	clz	r2, r2
   4027c:	eor	r2, r2, #31
   40280:	add	r2, r2, #1
   40284:	mov	r1, r8
   40288:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   4028c:	cmp	r8, #0
   40290:	str	r0, [sp]
   40294:	beq	402c8 <luaL_typerror@@Base+0x9f5c>
   40298:	ldr	r3, [sp]
   4029c:	mov	r9, #0
   402a0:	ldr	r5, [r3, #8]
   402a4:	mov	r1, r5
   402a8:	add	r9, r9, #1
   402ac:	mov	r0, r4
   402b0:	bl	3caec <luaL_typerror@@Base+0x6780>
   402b4:	cmp	r8, r9
   402b8:	add	r5, r5, #8
   402bc:	bhi	402a4 <luaL_typerror@@Base+0x9f38>
   402c0:	cmp	r7, #0
   402c4:	beq	40308 <luaL_typerror@@Base+0x9f9c>
   402c8:	ldr	r5, [sp]
   402cc:	mov	r8, #0
   402d0:	add	r9, sp, #40	; 0x28
   402d4:	mov	r1, r9
   402d8:	mov	r0, r4
   402dc:	bl	3caec <luaL_typerror@@Base+0x6780>
   402e0:	mov	r2, r9
   402e4:	mov	r1, r5
   402e8:	ldr	r0, [r4, #4]
   402ec:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   402f0:	add	r8, r8, #1
   402f4:	mov	r1, r0
   402f8:	mov	r0, r4
   402fc:	bl	3caec <luaL_typerror@@Base+0x6780>
   40300:	cmp	r7, r8
   40304:	bhi	402d4 <luaL_typerror@@Base+0x9f68>
   40308:	ldr	r3, [sp]
   4030c:	str	r3, [r6]
   40310:	b	4004c <luaL_typerror@@Base+0x9ce0>
   40314:	and	r5, r5, #127	; 0x7f
   40318:	mov	r0, r1
   4031c:	mov	r2, #0
   40320:	ldrb	r3, [r0], #1
   40324:	add	r2, r2, #7
   40328:	and	r1, r3, #127	; 0x7f
   4032c:	tst	r3, #128	; 0x80
   40330:	orr	r5, r5, r1, lsl r2
   40334:	mov	r1, r0
   40338:	bne	40320 <luaL_typerror@@Base+0x9fb4>
   4033c:	b	40070 <luaL_typerror@@Base+0x9d04>
   40340:	ldrb	r1, [r2]
   40344:	add	r2, r2, #1
   40348:	cmp	r1, #127	; 0x7f
   4034c:	bhi	405c0 <luaL_typerror@@Base+0xa254>
   40350:	str	r2, [r4, #24]
   40354:	str	r1, [r0, #16]
   40358:	ldrb	r1, [r2]
   4035c:	add	r2, r2, #1
   40360:	cmp	r1, #127	; 0x7f
   40364:	bhi	40594 <luaL_typerror@@Base+0xa228>
   40368:	str	r2, [r4, #24]
   4036c:	str	r1, [r0, #20]
   40370:	b	4004c <luaL_typerror@@Base+0x9ce0>
   40374:	mov	r7, #16
   40378:	mov	r1, #24
   4037c:	b	3fffc <luaL_typerror@@Base+0x9c90>
   40380:	mov	r2, r7
   40384:	mov	r1, r8
   40388:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   4038c:	cmp	r8, #0
   40390:	str	r0, [sp]
   40394:	bne	40298 <luaL_typerror@@Base+0x9f2c>
   40398:	ldr	r3, [sp]
   4039c:	str	r3, [r6]
   403a0:	b	4004c <luaL_typerror@@Base+0x9ce0>
   403a4:	and	r3, r3, #63	; 0x3f
   403a8:	mov	lr, r0
   403ac:	mvn	ip, #0
   403b0:	ldrb	r0, [lr], #1
   403b4:	add	ip, ip, #7
   403b8:	and	r9, r0, #127	; 0x7f
   403bc:	tst	r0, #128	; 0x80
   403c0:	orr	r3, r3, r9, lsl ip
   403c4:	mov	r0, lr
   403c8:	bne	403b0 <luaL_typerror@@Base+0xa044>
   403cc:	b	400dc <luaL_typerror@@Base+0x9d70>
   403d0:	ldr	r3, [sp, #4]
   403d4:	mov	r0, r6
   403d8:	str	r3, [r6, #52]	; 0x34
   403dc:	str	r3, [r6, #56]	; 0x38
   403e0:	str	r3, [r6, #60]	; 0x3c
   403e4:	add	sp, sp, #52	; 0x34
   403e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   403ec:	ldr	r1, [r4, #24]
   403f0:	ldr	r3, [r6, #20]
   403f4:	lsl	r8, r8, #1
   403f8:	add	r2, r1, r8
   403fc:	str	r2, [r4, #24]
   40400:	mov	r0, r3
   40404:	mov	r2, r8
   40408:	bl	12cb8 <memcpy@plt>
   4040c:	ldr	r2, [r4, #108]	; 0x6c
   40410:	tst	r2, #1
   40414:	mov	r3, r0
   40418:	beq	3ffb0 <luaL_typerror@@Base+0x9c44>
   4041c:	add	r8, r0, r8
   40420:	ldrh	r1, [r3]
   40424:	lsl	r2, r1, #8
   40428:	orr	r2, r2, r1, lsr #8
   4042c:	strh	r2, [r3], #2
   40430:	cmp	r8, r3
   40434:	bne	40420 <luaL_typerror@@Base+0xa0b4>
   40438:	b	3ffb0 <luaL_typerror@@Base+0x9c44>
   4043c:	and	r1, r1, #127	; 0x7f
   40440:	mov	lr, r2
   40444:	mov	ip, #0
   40448:	ldrb	r3, [lr], #1
   4044c:	add	ip, ip, #7
   40450:	and	r2, r3, #127	; 0x7f
   40454:	tst	r3, #128	; 0x80
   40458:	orr	r1, r1, r2, lsl ip
   4045c:	mov	r2, lr
   40460:	bne	40448 <luaL_typerror@@Base+0xa0dc>
   40464:	b	40024 <luaL_typerror@@Base+0x9cb8>
   40468:	and	r1, r1, #127	; 0x7f
   4046c:	mov	lr, r2
   40470:	mov	ip, #0
   40474:	ldrb	r3, [lr], #1
   40478:	add	ip, ip, #7
   4047c:	and	r2, r3, #127	; 0x7f
   40480:	tst	r3, #128	; 0x80
   40484:	orr	r1, r1, r2, lsl ip
   40488:	mov	r2, lr
   4048c:	bne	40474 <luaL_typerror@@Base+0xa108>
   40490:	b	4003c <luaL_typerror@@Base+0x9cd0>
   40494:	mov	r2, r7
   40498:	mov	r1, r8
   4049c:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   404a0:	cmp	r8, #0
   404a4:	str	r0, [sp]
   404a8:	bne	40298 <luaL_typerror@@Base+0x9f2c>
   404ac:	add	r9, sp, #40	; 0x28
   404b0:	mov	r1, r9
   404b4:	mov	r0, r4
   404b8:	bl	3caec <luaL_typerror@@Base+0x6780>
   404bc:	mov	r2, r9
   404c0:	ldr	r1, [sp]
   404c4:	ldr	r0, [r4, #4]
   404c8:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   404cc:	mov	r1, r0
   404d0:	mov	r0, r4
   404d4:	bl	3caec <luaL_typerror@@Base+0x6780>
   404d8:	ldr	r3, [sp]
   404dc:	str	r3, [r6]
   404e0:	b	4004c <luaL_typerror@@Base+0x9ce0>
   404e4:	and	r3, r3, #127	; 0x7f
   404e8:	mov	lr, r0
   404ec:	mov	ip, #0
   404f0:	ldrb	r0, [lr], #1
   404f4:	add	ip, ip, #7
   404f8:	and	r5, r0, #127	; 0x7f
   404fc:	tst	r0, #128	; 0x80
   40500:	orr	r3, r3, r5, lsl ip
   40504:	mov	r0, lr
   40508:	bne	404f0 <luaL_typerror@@Base+0xa184>
   4050c:	b	40100 <luaL_typerror@@Base+0x9d94>
   40510:	and	lr, ip, #127	; 0x7f
   40514:	mov	ip, r1
   40518:	ldrb	r1, [ip], #1
   4051c:	add	r0, r0, #7
   40520:	and	r5, r1, #127	; 0x7f
   40524:	tst	r1, #128	; 0x80
   40528:	orr	lr, lr, r5, lsl r0
   4052c:	mov	r1, ip
   40530:	bne	40518 <luaL_typerror@@Base+0xa1ac>
   40534:	str	lr, [sp, #4]
   40538:	b	3fe2c <luaL_typerror@@Base+0x9ac0>
   4053c:	and	r8, r8, #127	; 0x7f
   40540:	mov	ip, r1
   40544:	mov	r2, #0
   40548:	ldrb	r3, [ip], #1
   4054c:	add	r2, r2, #7
   40550:	and	r1, r3, #127	; 0x7f
   40554:	tst	r3, #128	; 0x80
   40558:	orr	r8, r8, r1, lsl r2
   4055c:	mov	r1, ip
   40560:	bne	40548 <luaL_typerror@@Base+0xa1dc>
   40564:	b	4024c <luaL_typerror@@Base+0x9ee0>
   40568:	and	r7, r7, #127	; 0x7f
   4056c:	mov	ip, r1
   40570:	mov	r2, #0
   40574:	ldrb	r3, [ip], #1
   40578:	add	r2, r2, #7
   4057c:	and	r1, r3, #127	; 0x7f
   40580:	tst	r3, #128	; 0x80
   40584:	orr	r7, r7, r1, lsl r2
   40588:	mov	r1, ip
   4058c:	bne	40574 <luaL_typerror@@Base+0xa208>
   40590:	b	40260 <luaL_typerror@@Base+0x9ef4>
   40594:	and	r1, r1, #127	; 0x7f
   40598:	mov	lr, r2
   4059c:	mov	ip, #0
   405a0:	ldrb	r3, [lr], #1
   405a4:	add	ip, ip, #7
   405a8:	and	r2, r3, #127	; 0x7f
   405ac:	tst	r3, #128	; 0x80
   405b0:	orr	r1, r1, r2, lsl ip
   405b4:	mov	r2, lr
   405b8:	bne	405a0 <luaL_typerror@@Base+0xa234>
   405bc:	b	40368 <luaL_typerror@@Base+0x9ffc>
   405c0:	and	r1, r1, #127	; 0x7f
   405c4:	mov	lr, r2
   405c8:	mov	ip, #0
   405cc:	ldrb	r3, [lr], #1
   405d0:	add	ip, ip, #7
   405d4:	and	r2, r3, #127	; 0x7f
   405d8:	tst	r3, #128	; 0x80
   405dc:	orr	r1, r1, r2, lsl ip
   405e0:	mov	r2, lr
   405e4:	bne	405cc <luaL_typerror@@Base+0xa260>
   405e8:	b	40350 <luaL_typerror@@Base+0x9fe4>
   405ec:	and	sl, sl, #127	; 0x7f
   405f0:	mov	ip, r1
   405f4:	mov	r0, #0
   405f8:	ldrb	r1, [ip], #1
   405fc:	add	r0, r0, #7
   40600:	and	lr, r1, #127	; 0x7f
   40604:	tst	r1, #128	; 0x80
   40608:	orr	sl, sl, lr, lsl r0
   4060c:	mov	r1, ip
   40610:	bne	405f8 <luaL_typerror@@Base+0xa28c>
   40614:	b	3fdd0 <luaL_typerror@@Base+0x9a64>
   40618:	and	lr, r0, #127	; 0x7f
   4061c:	mov	ip, r1
   40620:	mov	r0, #0
   40624:	ldrb	r1, [ip], #1
   40628:	add	r0, r0, #7
   4062c:	and	r5, r1, #127	; 0x7f
   40630:	tst	r1, #128	; 0x80
   40634:	orr	lr, lr, r5, lsl r0
   40638:	mov	r1, ip
   4063c:	bne	40624 <luaL_typerror@@Base+0xa2b8>
   40640:	str	lr, [sp, #8]
   40644:	b	3fde8 <luaL_typerror@@Base+0x9a7c>
   40648:	and	lr, r0, #127	; 0x7f
   4064c:	mov	ip, r1
   40650:	mov	r0, #0
   40654:	ldrb	r1, [ip], #1
   40658:	add	r0, r0, #7
   4065c:	and	r5, r1, #127	; 0x7f
   40660:	tst	r1, #128	; 0x80
   40664:	orr	lr, lr, r5, lsl r0
   40668:	mov	r1, ip
   4066c:	bne	40654 <luaL_typerror@@Base+0xa2e8>
   40670:	str	lr, [sp, #12]
   40674:	b	3fe00 <luaL_typerror@@Base+0x9a94>
   40678:	cmp	r2, #0
   4067c:	beq	401d8 <luaL_typerror@@Base+0x9e6c>
   40680:	add	r3, r5, r3, lsl #1
   40684:	sub	r0, r3, #4
   40688:	sub	r1, r5, #2
   4068c:	ldrh	r2, [r1, #2]!
   40690:	cmp	r1, r0
   40694:	lsl	r3, r2, #8
   40698:	orr	r3, r3, r2, lsr #8
   4069c:	strh	r3, [r1]
   406a0:	bne	4068c <luaL_typerror@@Base+0xa320>
   406a4:	b	401d8 <luaL_typerror@@Base+0x9e6c>
   406a8:	and	r0, r0, #127	; 0x7f
   406ac:	mov	lr, r1
   406b0:	mov	ip, #0
   406b4:	ldrb	r1, [lr], #1
   406b8:	add	ip, ip, #7
   406bc:	and	r5, r1, #127	; 0x7f
   406c0:	tst	r1, #128	; 0x80
   406c4:	orr	r0, r0, r5, lsl ip
   406c8:	mov	r1, lr
   406cc:	bne	406b4 <luaL_typerror@@Base+0xa348>
   406d0:	b	3fe64 <luaL_typerror@@Base+0x9af8>
   406d4:	and	ip, ip, #127	; 0x7f
   406d8:	mov	lr, r1
   406dc:	mov	r0, #0
   406e0:	ldrb	r1, [lr], #1
   406e4:	add	r0, r0, #7
   406e8:	and	r5, r1, #127	; 0x7f
   406ec:	tst	r1, #128	; 0x80
   406f0:	orr	ip, ip, r5, lsl r0
   406f4:	mov	r1, lr
   406f8:	bne	406e0 <luaL_typerror@@Base+0xa374>
   406fc:	b	3fe4c <luaL_typerror@@Base+0x9ae0>
   40700:	ldr	r1, [r4, #80]	; 0x50
   40704:	ldr	r2, [pc]	; 4070c <luaL_typerror@@Base+0xa3a0>
   40708:	bl	24f84 <luaL_where@@Base+0x4e80>
   4070c:	andeq	r0, r0, r1, lsl #23
   40710:	mov	r2, #0
   40714:	push	{r4, r5, r6, lr}
   40718:	mov	r6, r1
   4071c:	mov	r1, r2
   40720:	mov	r4, r0
   40724:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   40728:	mov	r1, #8
   4072c:	mov	r5, r0
   40730:	mov	r2, r0
   40734:	mov	r0, r4
   40738:	bl	2fe70 <luaL_where@@Base+0xfd6c>
   4073c:	mov	r2, #2
   40740:	mvn	r1, #12
   40744:	strb	r2, [r0, #6]
   40748:	ldr	r2, [r4, #20]
   4074c:	mov	r3, r0
   40750:	add	ip, r2, #8
   40754:	str	r6, [r0, #16]
   40758:	str	r5, [r0, #28]
   4075c:	str	ip, [r4, #20]
   40760:	add	r0, r0, #24
   40764:	str	r3, [r2]
   40768:	str	r1, [r2, #4]
   4076c:	pop	{r4, r5, r6, pc}
   40770:	ldr	r2, [r1, #28]
   40774:	push	{r4, r5, r6, r7, r8, lr}
   40778:	cmp	r2, #0
   4077c:	clzne	r2, r2
   40780:	eorne	r2, r2, #31
   40784:	addne	r2, r2, #1
   40788:	mov	r5, r1
   4078c:	ldr	r1, [r1, #24]
   40790:	bl	3fa5c <luaL_typerror@@Base+0x96f0>
   40794:	mov	r3, #0
   40798:	strb	r3, [r0, #6]
   4079c:	ldr	r2, [r5, #24]
   407a0:	mov	r4, r0
   407a4:	cmp	r2, r3
   407a8:	beq	407dc <luaL_typerror@@Base+0xa470>
   407ac:	cmp	r2, #63	; 0x3f
   407b0:	ldr	r0, [r0, #8]
   407b4:	ldr	r1, [r5, #8]
   407b8:	bhi	40844 <luaL_typerror@@Base+0xa4d8>
   407bc:	mov	r3, r1
   407c0:	sub	r0, r0, r3
   407c4:	add	r1, r1, r2, lsl #3
   407c8:	ldrd	r6, [r3]
   407cc:	strd	r6, [r0, r3]
   407d0:	add	r3, r3, #8
   407d4:	cmp	r1, r3
   407d8:	bne	407c8 <luaL_typerror@@Base+0xa45c>
   407dc:	ldr	r2, [r5, #28]
   407e0:	cmp	r2, #0
   407e4:	beq	4083c <luaL_typerror@@Base+0xa4d0>
   407e8:	ldr	r3, [r5, #20]
   407ec:	ldr	r0, [r4, #20]
   407f0:	add	r2, r2, r2, lsl #1
   407f4:	ldr	r1, [r3, #20]
   407f8:	add	r5, r3, #24
   407fc:	sub	lr, r0, r3
   40800:	add	r5, r5, r2, lsl #3
   40804:	add	r2, r1, lr
   40808:	str	r2, [r0, #20]
   4080c:	ldrd	r0, [r3]
   40810:	ldr	r2, [r3, #16]
   40814:	ldrd	r6, [r3, #8]
   40818:	add	ip, lr, r3
   4081c:	strd	r0, [lr, r3]
   40820:	cmp	r2, #0
   40824:	add	r3, r3, #24
   40828:	addne	r2, r2, lr
   4082c:	cmp	r3, r5
   40830:	strd	r6, [ip, #8]
   40834:	str	r2, [ip, #16]
   40838:	bne	4080c <luaL_typerror@@Base+0xa4a0>
   4083c:	mov	r0, r4
   40840:	pop	{r4, r5, r6, r7, r8, pc}
   40844:	lsl	r2, r2, #3
   40848:	bl	12cb8 <memcpy@plt>
   4084c:	b	407dc <luaL_typerror@@Base+0xa470>
   40850:	mov	r2, r1
   40854:	push	{r4, lr}
   40858:	lsr	r2, r2, #24
   4085c:	bic	r1, r1, #-16777216	; 0xff000000
   40860:	bl	3fa5c <luaL_typerror@@Base+0x96f0>
   40864:	ldr	r2, [r0, #24]
   40868:	ldr	r3, [r0, #8]
   4086c:	cmp	r2, #0
   40870:	beq	4088c <luaL_typerror@@Base+0xa520>
   40874:	add	r2, r3, r2, lsl #3
   40878:	mvn	r1, #0
   4087c:	str	r1, [r3, #4]
   40880:	add	r3, r3, #8
   40884:	cmp	r3, r2
   40888:	bne	4087c <luaL_typerror@@Base+0xa510>
   4088c:	ldr	r1, [r0, #28]
   40890:	cmp	r1, #0
   40894:	popeq	{r4, pc}
   40898:	ldr	r3, [r0, #20]
   4089c:	add	r1, r1, r1, lsl #1
   408a0:	add	r2, r3, #24
   408a4:	add	r1, r2, r1, lsl #3
   408a8:	mov	lr, #0
   408ac:	mvn	ip, #0
   408b0:	cmp	r1, r2
   408b4:	str	lr, [r3, #16]
   408b8:	str	ip, [r3, #12]
   408bc:	str	ip, [r3, #4]
   408c0:	mov	r3, r2
   408c4:	popeq	{r4, pc}
   408c8:	add	r2, r2, #24
   408cc:	b	408b0 <luaL_typerror@@Base+0xa544>
   408d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   408d4:	mov	r6, r2
   408d8:	ldr	r8, [r2, #4]
   408dc:	sub	sp, sp, #8
   408e0:	cmn	r8, #14
   408e4:	mov	r9, r0
   408e8:	mov	r5, r1
   408ec:	beq	40a6c <luaL_typerror@@Base+0xa700>
   408f0:	cmn	r8, #15
   408f4:	bls	40a18 <luaL_typerror@@Base+0xa6ac>
   408f8:	cmn	r8, #1
   408fc:	mov	r7, r2
   40900:	beq	40a98 <luaL_typerror@@Base+0xa72c>
   40904:	ldr	sl, [r5, #20]
   40908:	mov	r2, r7
   4090c:	mov	r0, sl
   40910:	ldr	r1, [r5, #28]
   40914:	bl	1af68 <_start@@Base+0x7bb8>
   40918:	mov	r4, r0
   4091c:	b	4092c <luaL_typerror@@Base+0xa5c0>
   40920:	ldr	r4, [r4, #16]
   40924:	cmp	r4, #0
   40928:	beq	40aa4 <luaL_typerror@@Base+0xa738>
   4092c:	mov	r1, r7
   40930:	add	r0, r4, #8
   40934:	bl	17394 <_start@@Base+0x3fe4>
   40938:	cmp	r0, #0
   4093c:	beq	40920 <luaL_typerror@@Base+0xa5b4>
   40940:	sub	r4, r4, sl
   40944:	ldr	ip, [r5, #24]
   40948:	asr	r4, r4, #3
   4094c:	add	r3, ip, #1
   40950:	add	r2, r4, r4, lsl #2
   40954:	add	r2, r2, r2, lsl #4
   40958:	add	r2, r2, r2, lsl #8
   4095c:	add	r2, r2, r2, lsl #16
   40960:	add	r4, r4, r2, lsl #1
   40964:	add	r3, r4, r3
   40968:	cmp	r3, ip
   4096c:	bcs	409b4 <luaL_typerror@@Base+0xa648>
   40970:	ldr	r0, [r5, #8]
   40974:	lsl	r2, r3, #3
   40978:	add	r1, r0, r2
   4097c:	ldr	lr, [r1, #4]
   40980:	cmn	lr, #1
   40984:	addeq	r2, r2, #8
   40988:	addeq	r2, r2, r0
   4098c:	beq	409a8 <luaL_typerror@@Base+0xa63c>
   40990:	b	40a4c <luaL_typerror@@Base+0xa6e0>
   40994:	mov	r1, r2
   40998:	add	r2, r2, #8
   4099c:	ldr	r0, [r1, #4]
   409a0:	cmn	r0, #1
   409a4:	bne	40a4c <luaL_typerror@@Base+0xa6e0>
   409a8:	add	r3, r3, #1
   409ac:	cmp	r3, ip
   409b0:	bcc	40994 <luaL_typerror@@Base+0xa628>
   409b4:	ldr	lr, [r5, #28]
   409b8:	sub	r3, r3, ip
   409bc:	cmp	r3, lr
   409c0:	bhi	40a0c <luaL_typerror@@Base+0xa6a0>
   409c4:	add	r2, r3, r3, lsl #1
   409c8:	ldr	r0, [r5, #20]
   409cc:	lsl	r2, r2, #3
   409d0:	add	r1, r0, r2
   409d4:	ldr	ip, [r1, #4]
   409d8:	cmn	ip, #1
   409dc:	addeq	r2, r2, #24
   409e0:	addeq	r2, r2, r0
   409e4:	beq	40a00 <luaL_typerror@@Base+0xa694>
   409e8:	b	40abc <luaL_typerror@@Base+0xa750>
   409ec:	mov	r1, r2
   409f0:	add	r2, r2, #24
   409f4:	ldr	r0, [r1, #4]
   409f8:	cmn	r0, #1
   409fc:	bne	40abc <luaL_typerror@@Base+0xa750>
   40a00:	add	r3, r3, #1
   40a04:	cmp	r3, lr
   40a08:	bls	409ec <luaL_typerror@@Base+0xa680>
   40a0c:	mov	r0, #0
   40a10:	add	sp, sp, #8
   40a14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   40a18:	vldr	d6, [r2]
   40a1c:	ldr	ip, [r1, #24]
   40a20:	vcvt.s32.f64	s15, d6
   40a24:	vmov	r3, s15
   40a28:	cmp	ip, r3
   40a2c:	bls	40a44 <luaL_typerror@@Base+0xa6d8>
   40a30:	vcvt.f64.s32	d5, s15
   40a34:	vcmp.f64	d6, d5
   40a38:	vmrs	APSR_nzcv, fpscr
   40a3c:	addeq	r3, r3, #1
   40a40:	beq	40968 <luaL_typerror@@Base+0xa5fc>
   40a44:	mov	r7, r6
   40a48:	b	40904 <luaL_typerror@@Base+0xa598>
   40a4c:	mvn	r2, #13
   40a50:	str	r3, [r6]
   40a54:	str	r2, [r6, #4]
   40a58:	ldrd	r2, [r1]
   40a5c:	mov	r0, #1
   40a60:	strd	r2, [r6, #8]
   40a64:	add	sp, sp, #8
   40a68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   40a6c:	ldr	r2, [r2]
   40a70:	ldr	ip, [r1, #24]
   40a74:	cmp	ip, r2
   40a78:	bhi	40ad8 <luaL_typerror@@Base+0xa76c>
   40a7c:	vmov	s15, r2
   40a80:	mov	r7, sp
   40a84:	vcvt.f64.s32	d7, s15
   40a88:	vstr	d7, [sp]
   40a8c:	ldr	r8, [sp, #4]
   40a90:	cmn	r8, #1
   40a94:	bne	40904 <luaL_typerror@@Base+0xa598>
   40a98:	ldr	ip, [r5, #24]
   40a9c:	mov	r3, #0
   40aa0:	b	40968 <luaL_typerror@@Base+0xa5fc>
   40aa4:	mvn	r3, #98304	; 0x18000
   40aa8:	cmp	r8, r3
   40aac:	bne	40ae0 <luaL_typerror@@Base+0xa774>
   40ab0:	ldr	r3, [r7]
   40ab4:	ldr	ip, [r5, #24]
   40ab8:	b	40968 <luaL_typerror@@Base+0xa5fc>
   40abc:	ldrd	r2, [r1, #8]
   40ac0:	mov	r0, #1
   40ac4:	strd	r2, [r6]
   40ac8:	ldrd	r2, [r1]
   40acc:	strd	r2, [r6, #8]
   40ad0:	add	sp, sp, #8
   40ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   40ad8:	add	r3, r2, #1
   40adc:	b	40968 <luaL_typerror@@Base+0xa5fc>
   40ae0:	mov	r0, r9
   40ae4:	mov	r1, #192	; 0xc0
   40ae8:	bl	20258 <luaL_where@@Base+0x154>
   40aec:	ldr	r3, [r1, #4]
   40af0:	push	{r4, r5, lr}
   40af4:	cmn	r3, #14
   40af8:	sub	sp, sp, #20
   40afc:	mov	r4, r1
   40b00:	mov	r5, r0
   40b04:	bls	40b38 <luaL_typerror@@Base+0xa7cc>
   40b08:	cmn	r3, #5
   40b0c:	bne	40cb4 <luaL_typerror@@Base+0xa948>
   40b10:	ldr	r0, [r1]
   40b14:	mov	r2, #1
   40b18:	add	r0, r0, #16
   40b1c:	bl	189f0 <_start@@Base+0x5640>
   40b20:	cmp	r0, #3
   40b24:	mvneq	r3, #13
   40b28:	streq	r3, [r4, #4]
   40b2c:	beq	40b38 <luaL_typerror@@Base+0xa7cc>
   40b30:	cmp	r0, #0
   40b34:	beq	40cb4 <luaL_typerror@@Base+0xa948>
   40b38:	ldr	r3, [r4, #12]
   40b3c:	cmn	r3, #14
   40b40:	bls	40b78 <luaL_typerror@@Base+0xa80c>
   40b44:	cmn	r3, #5
   40b48:	bne	40c9c <luaL_typerror@@Base+0xa930>
   40b4c:	ldr	r0, [r4, #8]
   40b50:	mov	r2, #1
   40b54:	add	r0, r0, #16
   40b58:	add	r1, r4, #8
   40b5c:	bl	189f0 <_start@@Base+0x5640>
   40b60:	cmp	r0, #3
   40b64:	mvneq	r3, #13
   40b68:	streq	r3, [r4, #12]
   40b6c:	beq	40b78 <luaL_typerror@@Base+0xa80c>
   40b70:	cmp	r0, #0
   40b74:	beq	40c9c <luaL_typerror@@Base+0xa930>
   40b78:	ldr	r3, [r4, #20]
   40b7c:	cmn	r3, #14
   40b80:	bls	40bb8 <luaL_typerror@@Base+0xa84c>
   40b84:	cmn	r3, #5
   40b88:	bne	40ca8 <luaL_typerror@@Base+0xa93c>
   40b8c:	ldr	r0, [r4, #16]
   40b90:	mov	r2, #1
   40b94:	add	r0, r0, #16
   40b98:	add	r1, r4, #16
   40b9c:	bl	189f0 <_start@@Base+0x5640>
   40ba0:	cmp	r0, #3
   40ba4:	mvneq	r3, #13
   40ba8:	streq	r3, [r4, #20]
   40bac:	beq	40bb8 <luaL_typerror@@Base+0xa84c>
   40bb0:	cmp	r0, #0
   40bb4:	beq	40ca8 <luaL_typerror@@Base+0xa93c>
   40bb8:	mov	r3, #0
   40bbc:	mov	r1, r3
   40bc0:	mov	r2, r4
   40bc4:	add	ip, sp, #4
   40bc8:	ldr	r0, [r2, #4]
   40bcc:	cmn	r0, #14
   40bd0:	beq	40c60 <luaL_typerror@@Base+0xa8f4>
   40bd4:	vldr	d7, [r2]
   40bd8:	vcvt.s32.f64	s13, d7
   40bdc:	vcvt.f64.s32	d5, s13
   40be0:	vmov	r0, s13
   40be4:	str	r0, [ip, r3, lsl #2]
   40be8:	vcmp.f64	d5, d7
   40bec:	vmrs	APSR_nzcv, fpscr
   40bf0:	moveq	r0, #1
   40bf4:	movne	r0, #0
   40bf8:	add	r1, r1, r0
   40bfc:	add	r3, r3, #1
   40c00:	cmp	r3, #3
   40c04:	add	r2, r2, #8
   40c08:	bne	40bc8 <luaL_typerror@@Base+0xa85c>
   40c0c:	cmp	r1, #3
   40c10:	beq	40c70 <luaL_typerror@@Base+0xa904>
   40c14:	cmp	r1, #0
   40c18:	beq	40c58 <luaL_typerror@@Base+0xa8ec>
   40c1c:	ldr	r3, [r4, #4]
   40c20:	cmn	r3, #14
   40c24:	ldr	r3, [r4, #12]
   40c28:	vldreq	s15, [r4]
   40c2c:	vcvteq.f64.s32	d7, s15
   40c30:	vstreq	d7, [r4]
   40c34:	cmn	r3, #14
   40c38:	ldr	r3, [r4, #20]
   40c3c:	vldreq	s15, [r4, #8]
   40c40:	vcvteq.f64.s32	d7, s15
   40c44:	vstreq	d7, [r4, #8]
   40c48:	cmn	r3, #14
   40c4c:	vldreq	s15, [r4, #16]
   40c50:	vcvteq.f64.s32	d7, s15
   40c54:	vstreq	d7, [r4, #16]
   40c58:	add	sp, sp, #20
   40c5c:	pop	{r4, r5, pc}
   40c60:	ldr	r0, [r2]
   40c64:	add	r1, r1, #1
   40c68:	str	r0, [ip, r3, lsl #2]
   40c6c:	b	40bfc <luaL_typerror@@Base+0xa890>
   40c70:	ldrd	r0, [sp, #4]
   40c74:	ldr	r2, [sp, #12]
   40c78:	mvn	r3, #13
   40c7c:	str	r0, [r4]
   40c80:	str	r1, [r4, #8]
   40c84:	str	r2, [r4, #16]
   40c88:	str	r3, [r4, #4]
   40c8c:	str	r3, [r4, #12]
   40c90:	str	r3, [r4, #20]
   40c94:	add	sp, sp, #20
   40c98:	pop	{r4, r5, pc}
   40c9c:	mov	r0, r5
   40ca0:	ldr	r1, [pc, #24]	; 40cc0 <luaL_typerror@@Base+0xa954>
   40ca4:	bl	20258 <luaL_where@@Base+0x154>
   40ca8:	mov	r0, r5
   40cac:	ldr	r1, [pc, #16]	; 40cc4 <luaL_typerror@@Base+0xa958>
   40cb0:	bl	20258 <luaL_where@@Base+0x154>
   40cb4:	mov	r0, r5
   40cb8:	ldr	r1, [pc, #8]	; 40cc8 <luaL_typerror@@Base+0xa95c>
   40cbc:	bl	20258 <luaL_where@@Base+0x154>
   40cc0:	andeq	r0, r0, lr, ror #5
   40cc4:	andeq	r0, r0, fp, lsl #6
   40cc8:	andeq	r0, r0, r9, asr #5
   40ccc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40cd0:	mov	r7, r1
   40cd4:	ldr	r1, [r0, #80]	; 0x50
   40cd8:	ldrb	r5, [r7, #1]
   40cdc:	sub	sp, sp, #44	; 0x2c
   40ce0:	ldr	r3, [r1, #16]
   40ce4:	ldr	r9, [r0, #96]	; 0x60
   40ce8:	cmp	r2, #0
   40cec:	mov	r4, r0
   40cf0:	str	r3, [sp, #16]
   40cf4:	str	r2, [sp, #12]
   40cf8:	add	r6, r3, r5, lsl #3
   40cfc:	add	fp, r9, r5, lsl #2
   40d00:	beq	40f04 <luaL_typerror@@Base+0xab98>
   40d04:	ldr	r2, [r0, #2284]	; 0x8ec
   40d08:	cmp	r7, r2
   40d0c:	beq	40e98 <luaL_typerror@@Base+0xab2c>
   40d10:	mov	r3, #0
   40d14:	add	r2, sp, #24
   40d18:	mov	r1, r7
   40d1c:	mov	r0, r4
   40d20:	bl	2a160 <luaL_where@@Base+0xa05c>
   40d24:	ldrb	r8, [sp, #36]	; 0x24
   40d28:	ldrh	sl, [sp, #32]
   40d2c:	ldr	r3, [r6, #12]
   40d30:	cmn	r3, #14
   40d34:	ldr	r3, [r6, #4]
   40d38:	vldreq	s15, [r6, #8]
   40d3c:	vldrne	d5, [r6, #8]
   40d40:	vcvteq.f64.s32	d5, s15
   40d44:	cmn	r3, #14
   40d48:	ldreq	r3, [sp, #16]
   40d4c:	vldrne	d6, [r6]
   40d50:	ldreq	r3, [r3, r5, lsl #3]
   40d54:	vmoveq	s14, r3
   40d58:	ldr	r3, [r6, #20]
   40d5c:	vcvteq.f64.s32	d6, s14
   40d60:	cmn	r3, #14
   40d64:	beq	40e14 <luaL_typerror@@Base+0xaaa8>
   40d68:	ldr	r2, [sp, #12]
   40d6c:	vldr	d7, [r6, #16]
   40d70:	cmp	r2, #0
   40d74:	bne	40e2c <luaL_typerror@@Base+0xaac0>
   40d78:	mvn	r3, r3
   40d7c:	vcmpe.f64	d5, d6
   40d80:	lsr	r3, r3, #31
   40d84:	cmp	r3, #0
   40d88:	beq	40e34 <luaL_typerror@@Base+0xaac8>
   40d8c:	vmrs	APSR_nzcv, fpscr
   40d90:	blt	40efc <luaL_typerror@@Base+0xab90>
   40d94:	vadd.f64	d7, d7, d7
   40d98:	mov	r6, #512	; 0x200
   40d9c:	vadd.f64	d7, d7, d6
   40da0:	vcmpe.f64	d5, d7
   40da4:	vmrs	APSR_nzcv, fpscr
   40da8:	movmi	fp, #1
   40dac:	movpl	fp, #2
   40db0:	str	r5, [r4, #104]	; 0x68
   40db4:	ldrh	r2, [r7, #2]
   40db8:	ldr	r3, [pc, #648]	; 41048 <luaL_typerror@@Base+0xacdc>
   40dbc:	mov	r0, r4
   40dc0:	add	r3, r2, r3
   40dc4:	orr	r8, r8, #128	; 0x80
   40dc8:	add	r3, r7, r3, lsl #2
   40dcc:	str	r3, [r4, #84]	; 0x54
   40dd0:	bl	2e158 <luaL_where@@Base+0xe054>
   40dd4:	ldr	r3, [r9, r5, lsl #2]
   40dd8:	orr	r6, r6, r8
   40ddc:	strh	r6, [r4, #124]	; 0x7c
   40de0:	strh	r3, [r4, #120]	; 0x78
   40de4:	strh	sl, [r4, #122]	; 0x7a
   40de8:	mov	r0, r4
   40dec:	add	r5, r5, #4
   40df0:	add	r7, r7, #4
   40df4:	bl	27498 <luaL_where@@Base+0x7394>
   40df8:	str	r5, [r4, #104]	; 0x68
   40dfc:	str	r7, [r4, #84]	; 0x54
   40e00:	mov	r3, #1
   40e04:	mov	r0, fp
   40e08:	strb	r3, [r4, #113]	; 0x71
   40e0c:	add	sp, sp, #44	; 0x2c
   40e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40e14:	ldr	r3, [r6, #16]
   40e18:	ldr	r2, [sp, #12]
   40e1c:	vmov	s15, r3
   40e20:	cmp	r2, #0
   40e24:	vcvt.f64.s32	d7, s15
   40e28:	beq	40d78 <luaL_typerror@@Base+0xaa0c>
   40e2c:	vadd.f64	d6, d6, d7
   40e30:	b	40d78 <luaL_typerror@@Base+0xaa0c>
   40e34:	vmrs	APSR_nzcv, fpscr
   40e38:	bls	40edc <luaL_typerror@@Base+0xab70>
   40e3c:	mov	r6, r3
   40e40:	add	r3, r7, #4
   40e44:	add	r2, r5, #4
   40e48:	str	r2, [r4, #104]	; 0x68
   40e4c:	str	r3, [r4, #84]	; 0x54
   40e50:	mov	r0, r4
   40e54:	bl	2e158 <luaL_where@@Base+0xe054>
   40e58:	ldr	r2, [r9, r5, lsl #2]
   40e5c:	orr	r3, r8, #128	; 0x80
   40e60:	orr	r3, r6, r3
   40e64:	strh	r3, [r4, #124]	; 0x7c
   40e68:	strh	r2, [r4, #120]	; 0x78
   40e6c:	strh	sl, [r4, #122]	; 0x7a
   40e70:	mov	r0, r4
   40e74:	bl	27498 <luaL_where@@Base+0x7394>
   40e78:	str	r5, [r4, #104]	; 0x68
   40e7c:	ldrh	r2, [r7, #2]
   40e80:	ldr	r3, [pc, #448]	; 41048 <luaL_typerror@@Base+0xacdc>
   40e84:	mov	fp, #0
   40e88:	add	r3, r2, r3
   40e8c:	add	r7, r7, r3, lsl #2
   40e90:	str	r7, [r4, #84]	; 0x54
   40e94:	b	40e00 <luaL_typerror@@Base+0xaa94>
   40e98:	add	r1, r0, #2288	; 0x8f0
   40e9c:	ldr	r2, [r9, r5, lsl #2]
   40ea0:	ldrh	ip, [r1]
   40ea4:	uxth	r2, r2
   40ea8:	cmp	ip, r2
   40eac:	bne	40d10 <luaL_typerror@@Base+0xa9a4>
   40eb0:	ldrb	r8, [r0, #2296]	; 0x8f8
   40eb4:	ldrh	r2, [r1, #6]
   40eb8:	ldrh	sl, [r1, #4]
   40ebc:	orr	r1, r8, #10496	; 0x2900
   40ec0:	strh	r1, [r0, #124]	; 0x7c
   40ec4:	strh	r2, [r0, #122]	; 0x7a
   40ec8:	strh	ip, [r0, #120]	; 0x78
   40ecc:	bl	27498 <luaL_where@@Base+0x7394>
   40ed0:	str	r0, [r9, r5, lsl #2]
   40ed4:	str	r0, [fp, #12]
   40ed8:	b	40d2c <luaL_typerror@@Base+0xa9c0>
   40edc:	vadd.f64	d7, d7, d7
   40ee0:	mov	r6, #256	; 0x100
   40ee4:	vadd.f64	d7, d7, d6
   40ee8:	vcmpe.f64	d5, d7
   40eec:	vmrs	APSR_nzcv, fpscr
   40ef0:	movgt	fp, #1
   40ef4:	movle	fp, #2
   40ef8:	b	40db0 <luaL_typerror@@Base+0xaa44>
   40efc:	mov	r6, #768	; 0x300
   40f00:	b	40e40 <luaL_typerror@@Base+0xaad4>
   40f04:	mov	r0, r1
   40f08:	mov	r1, r6
   40f0c:	bl	40aec <luaL_typerror@@Base+0xa780>
   40f10:	mov	r0, r6
   40f14:	bl	1f0ac <_start@@Base+0xbcfc>
   40f18:	sub	r2, fp, #4
   40f1c:	ldr	sl, [sp, #12]
   40f20:	str	r6, [sp, #20]
   40f24:	mov	r6, r2
   40f28:	mov	r8, r0
   40f2c:	ldr	r3, [r6, #4]!
   40f30:	cmp	r3, #0
   40f34:	beq	41004 <luaL_typerror@@Base+0xac98>
   40f38:	and	r1, r3, #520093696	; 0x1f000000
   40f3c:	cmp	r1, #67108864	; 0x4000000
   40f40:	beq	41020 <luaL_typerror@@Base+0xacb4>
   40f44:	cmp	r8, #19
   40f48:	and	r1, r3, #520093696	; 0x1f000000
   40f4c:	beq	40fcc <luaL_typerror@@Base+0xac60>
   40f50:	cmp	r1, #234881024	; 0xe000000
   40f54:	mov	r0, r4
   40f58:	beq	40f78 <luaL_typerror@@Base+0xac0c>
   40f5c:	ldr	r2, [pc, #232]	; 4104c <luaL_typerror@@Base+0xace0>
   40f60:	strh	r3, [r4, #120]	; 0x78
   40f64:	ldr	r3, [pc, #228]	; 41050 <luaL_typerror@@Base+0xace4>
   40f68:	strh	r2, [r4, #124]	; 0x7c
   40f6c:	strh	r3, [r4, #122]	; 0x7a
   40f70:	bl	27498 <luaL_where@@Base+0x7394>
   40f74:	str	r0, [r6]
   40f78:	add	sl, sl, #1
   40f7c:	cmp	sl, #3
   40f80:	bne	40f2c <luaL_typerror@@Base+0xabc0>
   40f84:	ldr	r6, [sp, #20]
   40f88:	ldr	r2, [r9, r5, lsl #2]
   40f8c:	mov	r1, #1
   40f90:	str	r2, [fp, #12]
   40f94:	ldr	r2, [r6, #20]
   40f98:	ldr	sl, [fp, #4]
   40f9c:	cmn	r2, #14
   40fa0:	mov	r0, r4
   40fa4:	ldreq	r2, [r6, #16]
   40fa8:	str	r1, [sp, #4]
   40fac:	ldr	r3, [fp, #8]
   40fb0:	mvn	r2, r2
   40fb4:	str	r3, [sp]
   40fb8:	lsr	r2, r2, #31
   40fbc:	mov	r3, sl
   40fc0:	mov	r1, r8
   40fc4:	bl	29fa0 <luaL_where@@Base+0x9e9c>
   40fc8:	b	40d2c <luaL_typerror@@Base+0xa9c0>
   40fcc:	lsr	r1, r3, #24
   40fd0:	and	r1, r1, #31
   40fd4:	sub	r1, r1, #15
   40fd8:	cmp	r1, #4
   40fdc:	bls	40f78 <luaL_typerror@@Base+0xac0c>
   40fe0:	ldr	r1, [pc, #108]	; 41054 <luaL_typerror@@Base+0xace8>
   40fe4:	strh	r3, [r4, #120]	; 0x78
   40fe8:	ldr	r3, [pc, #104]	; 41058 <luaL_typerror@@Base+0xacec>
   40fec:	strh	r1, [r4, #124]	; 0x7c
   40ff0:	strh	r3, [r4, #122]	; 0x7a
   40ff4:	mov	r0, r4
   40ff8:	bl	27498 <luaL_where@@Base+0x7394>
   40ffc:	str	r0, [r6]
   41000:	b	40f78 <luaL_typerror@@Base+0xac0c>
   41004:	add	r1, r5, sl
   41008:	mov	r0, r4
   4100c:	bl	25b34 <luaL_where@@Base+0x5a30>
   41010:	ldr	r3, [r6]
   41014:	and	r1, r3, #520093696	; 0x1f000000
   41018:	cmp	r1, #67108864	; 0x4000000
   4101c:	bne	40f44 <luaL_typerror@@Base+0xabd8>
   41020:	ldr	r2, [pc, #52]	; 4105c <luaL_typerror@@Base+0xacf0>
   41024:	mov	r1, #0
   41028:	strh	r3, [r4, #120]	; 0x78
   4102c:	strh	r2, [r4, #124]	; 0x7c
   41030:	strh	r1, [r4, #122]	; 0x7a
   41034:	mov	r0, r4
   41038:	bl	27498 <luaL_where@@Base+0x7394>
   4103c:	mov	r3, r0
   41040:	str	r0, [r6]
   41044:	b	40f44 <luaL_typerror@@Base+0xabd8>
   41048:	svccc	0x00ff8001
   4104c:	andeq	r5, r0, lr, lsl #20
   41050:	ldrdeq	r0, [r0], -r3
   41054:	muleq	r0, r3, sl
   41058:	andeq	r3, r0, lr, ror #4
   4105c:	andeq	r5, r0, lr, lsl #27
   41060:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   41064:	eor	r5, r1, r2
   41068:	sub	r3, r5, r2, ror #18
   4106c:	eor	r5, r3, r2, ror #13
   41070:	sub	r5, r5, r3, ror #19
   41074:	and	r5, r5, #127	; 0x7f
   41078:	add	r5, r0, r5, lsl #1
   4107c:	ldrh	r7, [r5, #200]	; 0xc8
   41080:	cmp	r7, #0
   41084:	beq	410c4 <luaL_typerror@@Base+0xad58>
   41088:	mov	r4, r7
   4108c:	ldr	ip, [r0]
   41090:	b	410a0 <luaL_typerror@@Base+0xad34>
   41094:	ldrh	r4, [r3, #10]
   41098:	cmp	r4, #0
   4109c:	beq	410c4 <luaL_typerror@@Base+0xad58>
   410a0:	ldr	lr, [ip, r4, lsl #4]
   410a4:	add	r3, ip, r4, lsl #4
   410a8:	cmp	lr, r1
   410ac:	bne	41094 <luaL_typerror@@Base+0xad28>
   410b0:	ldr	lr, [r3, #4]
   410b4:	cmp	lr, r2
   410b8:	bne	41094 <luaL_typerror@@Base+0xad28>
   410bc:	mov	r0, r4
   410c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   410c4:	mov	r8, r2
   410c8:	ldr	r4, [r0, #4]
   410cc:	ldr	r2, [r0, #8]
   410d0:	mov	r6, r0
   410d4:	cmp	r2, r4
   410d8:	mov	r9, r1
   410dc:	bls	41114 <luaL_typerror@@Base+0xada8>
   410e0:	ldr	r0, [r0]
   410e4:	add	r3, r0, r4, lsl #4
   410e8:	add	r2, r4, #1
   410ec:	str	r2, [r6, #4]
   410f0:	mov	r2, #0
   410f4:	str	r9, [r0, r4, lsl #4]
   410f8:	str	r8, [r3, #4]
   410fc:	strh	r7, [r3, #10]
   41100:	strh	r2, [r3, #8]
   41104:	str	r2, [r3, #12]
   41108:	mov	r0, r4
   4110c:	strh	r4, [r5, #200]	; 0xc8
   41110:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   41114:	cmp	r4, #65536	; 0x10000
   41118:	ldr	r0, [r0, #12]
   4111c:	bcs	41158 <luaL_typerror@@Base+0xadec>
   41120:	lsl	r3, r2, #1
   41124:	cmp	r3, #65536	; 0x10000
   41128:	movcs	r3, #65536	; 0x10000
   4112c:	cmp	r3, #8
   41130:	movcs	r7, r3
   41134:	movcc	r7, #8
   41138:	lsl	r2, r2, #4
   4113c:	lsl	r3, r7, #4
   41140:	ldr	r1, [r6]
   41144:	bl	205b0 <luaL_where@@Base+0x4ac>
   41148:	str	r7, [r6, #8]
   4114c:	str	r0, [r6]
   41150:	ldrh	r7, [r5, #200]	; 0xc8
   41154:	b	410e4 <luaL_typerror@@Base+0xad78>
   41158:	mov	r1, #139	; 0x8b
   4115c:	bl	20258 <luaL_where@@Base+0x154>
   41160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41164:	mov	r6, r3
   41168:	lsr	r3, r3, #24
   4116c:	and	r3, r3, #31
   41170:	sub	sp, sp, #36	; 0x24
   41174:	sub	ip, r3, #15
   41178:	cmp	ip, #4
   4117c:	mov	r5, r0
   41180:	str	r2, [sp, #8]
   41184:	ldr	r8, [r0, #-156]	; 0xffffff64
   41188:	mov	r7, r1
   4118c:	ldr	r4, [sp, #72]	; 0x48
   41190:	bhi	41860 <luaL_typerror@@Base+0xb4f4>
   41194:	ldm	r4, {r1, r3}
   41198:	cmn	r3, #14
   4119c:	beq	413cc <luaL_typerror@@Base+0xb060>
   411a0:	orrs	r3, r1, r3, lsl #1
   411a4:	movne	r3, #1
   411a8:	moveq	r3, #0
   411ac:	str	r3, [sp, #20]
   411b0:	mov	r2, r8
   411b4:	mov	r3, #144	; 0x90
   411b8:	ldr	r1, [r8]
   411bc:	add	sl, r1, r3
   411c0:	ldr	fp, [r1, r3]
   411c4:	ldr	r4, [r7]
   411c8:	mov	r0, r2
   411cc:	str	r2, [sp, #12]
   411d0:	lsr	r3, r4, #28
   411d4:	cmp	r3, #5
   411d8:	uxtheq	r3, r4
   411dc:	ldreq	r7, [r8]
   411e0:	ldreq	r4, [r7, r3, lsl #4]
   411e4:	addeq	r7, r7, r3, lsl #4
   411e8:	mov	r1, r7
   411ec:	lsreq	r3, r4, #28
   411f0:	str	r3, [sp, #16]
   411f4:	bl	1e228 <_start@@Base+0xae78>
   411f8:	ldr	r2, [sp, #12]
   411fc:	mov	r1, sl
   41200:	mov	r9, r0
   41204:	mov	r0, r2
   41208:	bl	1e228 <_start@@Base+0xae78>
   4120c:	ldr	r3, [sp, #16]
   41210:	ldr	r2, [sl, #4]
   41214:	cmp	r3, #3
   41218:	str	r2, [sp, #12]
   4121c:	ldr	r3, [r7, #4]
   41220:	mov	r8, r0
   41224:	bhi	41a14 <luaL_typerror@@Base+0xb6a8>
   41228:	cmn	fp, #-1073741823	; 0xc0000001
   4122c:	bhi	41a14 <luaL_typerror@@Base+0xb6a8>
   41230:	lsr	r4, r4, #26
   41234:	ldr	r2, [pc, #3036]	; 41e18 <luaL_typerror@@Base+0xbaac>
   41238:	ldr	r0, [pc, #3036]	; 41e1c <luaL_typerror@@Base+0xbab0>
   4123c:	and	ip, r4, #7
   41240:	lsr	r1, fp, #26
   41244:	cmp	r4, #7
   41248:	movhi	r4, r2
   4124c:	movls	r4, r0
   41250:	cmp	r1, #7
   41254:	movls	r2, r0
   41258:	lsl	ip, ip, #2
   4125c:	and	r0, r1, #7
   41260:	lsr	r1, r4, ip
   41264:	lsl	r0, r0, #2
   41268:	lsl	r1, r1, #3
   4126c:	lsr	r2, r2, r0
   41270:	and	r1, r1, #120	; 0x78
   41274:	and	r2, r2, #15
   41278:	add	r2, r2, r1
   4127c:	cmp	r2, #63	; 0x3f
   41280:	ldrls	pc, [pc, r2, lsl #2]
   41284:	b	41a14 <luaL_typerror@@Base+0xb6a8>
   41288:	andeq	r1, r4, r4, lsr #7
   4128c:	andeq	r1, r4, r4, ror #13
   41290:	andeq	r1, r4, r4, ror #13
   41294:	andeq	r1, r4, r4, lsl sl
   41298:	andeq	r1, r4, r4, lsl sl
   4129c:	andeq	r1, r4, r4, lsl sl
   412a0:	andeq	r1, r4, r4, lsl sl
   412a4:	andeq	r1, r4, r4, lsl sl
   412a8:			; <UNDEFINED> instruction: 0x000417b4
   412ac:			; <UNDEFINED> instruction: 0x000417b4
   412b0:	andeq	r1, r4, ip, lsl #9
   412b4:	andeq	r1, r4, r4, ror #8
   412b8:	andeq	r1, r4, r4, lsl sl
   412bc:	andeq	r1, r4, ip, lsl r8
   412c0:	andeq	r1, r4, ip, lsl r8
   412c4:	andeq	r1, r4, r4, lsl sl
   412c8:	andeq	r1, r4, ip, lsr r5
   412cc:	andeq	r1, r4, ip, lsr r5
   412d0:	andeq	r1, r4, ip, lsr #8
   412d4:	andeq	r1, r4, ip, lsl #8
   412d8:	andeq	r1, r4, r4, lsl sl
   412dc:	andeq	r1, r4, r4, lsl sl
   412e0:	andeq	r1, r4, r4, lsl sl
   412e4:	andeq	r1, r4, r4, lsl sl
   412e8:	andeq	r1, r4, r4, lsl sl
   412ec:	ldrdeq	r1, [r4], -ip
   412f0:	ldrdeq	r1, [r4], -ip
   412f4:	andeq	r1, r4, r8, ror r5
   412f8:	andeq	r1, r4, r4, lsl sl
   412fc:	andeq	r1, r4, r4, lsl sl
   41300:	andeq	r1, r4, r4, lsl sl
   41304:	andeq	r1, r4, r4, lsl sl
   41308:	andeq	r1, r4, r4, lsl sl
   4130c:	andeq	r1, r4, r4, lsl sl
   41310:	andeq	r1, r4, r4, lsl sl
   41314:	andeq	r1, r4, r4, lsl sl
   41318:	andeq	r1, r4, r4, lsl sl
   4131c:	andeq	r1, r4, r4, lsl sl
   41320:	andeq	r1, r4, r4, lsl sl
   41324:	andeq	r1, r4, r4, lsl sl
   41328:	andeq	r1, r4, r4, lsl sl
   4132c:	andeq	r1, r4, r8, lsl #7
   41330:	andeq	r1, r4, ip, lsl #15
   41334:	andeq	r1, r4, r4, lsl sl
   41338:	andeq	r1, r4, r4, lsl sl
   4133c:	andeq	r1, r4, r4, lsr #7
   41340:	andeq	r1, r4, r4, lsr #7
   41344:	andeq	r1, r4, r4, lsr #7
   41348:	andeq	r1, r4, r4, lsl sl
   4134c:	andeq	r1, r4, r4, lsl sl
   41350:	andeq	r1, r4, r4, lsl sl
   41354:	andeq	r1, r4, r4, lsl sl
   41358:	andeq	r1, r4, r4, lsl sl
   4135c:	andeq	r1, r4, r4, lsl sl
   41360:	andeq	r1, r4, ip, lsr #13
   41364:	andeq	r1, r4, r4, lsl sl
   41368:	andeq	r1, r4, r4, lsl sl
   4136c:	andeq	r1, r4, r4, lsl sl
   41370:	andeq	r1, r4, r4, lsl sl
   41374:	andeq	r1, r4, r4, lsl sl
   41378:	andeq	r1, r4, r4, lsl sl
   4137c:	andeq	r1, r4, r4, lsl sl
   41380:	andeq	r1, r4, r4, lsl sl
   41384:	andeq	r1, r4, ip, lsr #13
   41388:	cmp	r8, #10
   4138c:	beq	41a14 <luaL_typerror@@Base+0xb6a8>
   41390:	ldr	r3, [sp, #12]
   41394:	cmp	r3, #8
   41398:	orreq	r8, r8, #640	; 0x280
   4139c:	ldreq	r3, [pc, #2684]	; 41e20 <luaL_typerror@@Base+0xbab4>
   413a0:	beq	4179c <luaL_typerror@@Base+0xb430>
   413a4:	mov	r0, r6
   413a8:	sub	r3, r9, #21
   413ac:	cmp	r3, #1
   413b0:	movls	r3, #1
   413b4:	strbls	r3, [r5, #268]	; 0x10c
   413b8:	ldr	r3, [sp, #8]
   413bc:	cmp	r3, #0
   413c0:	bne	413e4 <luaL_typerror@@Base+0xb078>
   413c4:	add	sp, sp, #36	; 0x24
   413c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   413cc:	adds	r3, r1, #0
   413d0:	movne	r3, #1
   413d4:	str	r3, [sp, #20]
   413d8:	mov	r2, r8
   413dc:	mov	r3, #144	; 0x90
   413e0:	b	411b8 <luaL_typerror@@Base+0xae4c>
   413e4:	ldrh	r3, [sp, #8]
   413e8:	orr	r9, r9, #19712	; 0x4d00
   413ec:	strh	r0, [r5, #122]	; 0x7a
   413f0:	strh	r9, [r5, #124]	; 0x7c
   413f4:	strh	r3, [r5, #120]	; 0x78
   413f8:	mov	r0, r5
   413fc:	bl	27498 <luaL_where@@Base+0x7394>
   41400:	mov	r0, #0
   41404:	add	sp, sp, #36	; 0x24
   41408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4140c:	orr	r3, r8, #17920	; 0x4600
   41410:	mov	r2, #0
   41414:	strh	r6, [r5, #120]	; 0x78
   41418:	strh	r3, [r5, #124]	; 0x7c
   4141c:	strh	r2, [r5, #122]	; 0x7a
   41420:	mov	r0, r5
   41424:	bl	27498 <luaL_where@@Base+0x7394>
   41428:	mov	r6, r0
   4142c:	cmp	r8, #10
   41430:	cmpne	r9, #10
   41434:	beq	41a14 <luaL_typerror@@Base+0xb6a8>
   41438:	cmp	r9, r8
   4143c:	beq	413a4 <luaL_typerror@@Base+0xb038>
   41440:	uxth	r3, r9
   41444:	strh	r6, [r5, #120]	; 0x78
   41448:	orr	r8, r8, r3, lsl #5
   4144c:	orr	r3, r3, #23040	; 0x5a00
   41450:	strh	r8, [r5, #122]	; 0x7a
   41454:	strh	r3, [r5, #124]	; 0x7c
   41458:	mov	r0, r5
   4145c:	bl	27498 <luaL_where@@Base+0x7394>
   41460:	b	413a8 <luaL_typerror@@Base+0xb03c>
   41464:	orr	r2, r8, #17920	; 0x4600
   41468:	mov	r1, #0
   4146c:	strh	r6, [r5, #120]	; 0x78
   41470:	strh	r2, [r5, #124]	; 0x7c
   41474:	strh	r1, [r5, #122]	; 0x7a
   41478:	mov	r0, r5
   4147c:	str	r3, [sp, #12]
   41480:	bl	27498 <luaL_where@@Base+0x7394>
   41484:	ldr	r3, [sp, #12]
   41488:	mov	r6, r0
   4148c:	cmp	r8, #10
   41490:	cmpne	r9, #10
   41494:	beq	41a14 <luaL_typerror@@Base+0xb6a8>
   41498:	cmp	r3, #3
   4149c:	uxthhi	r3, r9
   414a0:	orrhi	r2, r3, #23040	; 0x5a00
   414a4:	lslhi	r3, r3, #5
   414a8:	uxth	r8, r8
   414ac:	uxthhi	r3, r3
   414b0:	ldrls	r2, [pc, #2412]	; 41e24 <luaL_typerror@@Base+0xbab8>
   414b4:	movls	r3, #608	; 0x260
   414b8:	orr	r8, r8, #4096	; 0x1000
   414bc:	uxth	r0, r6
   414c0:	orr	r8, r3, r8
   414c4:	strh	r0, [r5, #120]	; 0x78
   414c8:	strh	r8, [r5, #122]	; 0x7a
   414cc:	strh	r2, [r5, #124]	; 0x7c
   414d0:	mov	r0, r5
   414d4:	bl	27498 <luaL_where@@Base+0x7394>
   414d8:	b	413a8 <luaL_typerror@@Base+0xb03c>
   414dc:	lsr	r1, r3, #1
   414e0:	mov	r0, r5
   414e4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   414e8:	ldrh	r2, [sp, #8]
   414ec:	ldr	r3, [pc, #2356]	; 41e28 <luaL_typerror@@Base+0xbabc>
   414f0:	strh	r2, [r5, #120]	; 0x78
   414f4:	strh	r3, [r5, #124]	; 0x7c
   414f8:	strh	r0, [r5, #122]	; 0x7a
   414fc:	mov	r0, r5
   41500:	bl	27498 <luaL_where@@Base+0x7394>
   41504:	mov	r2, #0
   41508:	mov	r3, #0
   4150c:	mov	r1, #28
   41510:	mov	r4, r0
   41514:	mov	r0, r5
   41518:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   4151c:	orr	r3, r9, #19712	; 0x4d00
   41520:	strh	r4, [r5, #120]	; 0x78
   41524:	strh	r3, [r5, #124]	; 0x7c
   41528:	strh	r0, [r5, #122]	; 0x7a
   4152c:	mov	r0, r5
   41530:	bl	27498 <luaL_where@@Base+0x7394>
   41534:	tst	fp, #67108864	; 0x4000000
   41538:	bne	4142c <luaL_typerror@@Base+0xb0c0>
   4153c:	cmp	r8, #10
   41540:	cmpne	r9, #10
   41544:	beq	41a14 <luaL_typerror@@Base+0xb6a8>
   41548:	ldr	r3, [sp, #12]
   4154c:	strh	r6, [r5, #120]	; 0x78
   41550:	cmp	r3, #3
   41554:	uxth	r3, r9
   41558:	movls	r8, #19
   4155c:	orr	r8, r8, r3, lsl #5
   41560:	orr	r3, r3, #23040	; 0x5a00
   41564:	strh	r8, [r5, #122]	; 0x7a
   41568:	strh	r3, [r5, #124]	; 0x7c
   4156c:	mov	r0, r5
   41570:	bl	27498 <luaL_where@@Base+0x7394>
   41574:	b	413a8 <luaL_typerror@@Base+0xb03c>
   41578:	cmp	r8, #10
   4157c:	cmpne	r9, #10
   41580:	str	r3, [sp, #16]
   41584:	moveq	sl, #1
   41588:	movne	sl, #0
   4158c:	beq	41a14 <luaL_typerror@@Base+0xb6a8>
   41590:	uxth	r4, r8
   41594:	uxth	r6, r6
   41598:	orr	fp, r4, #17920	; 0x4600
   4159c:	strh	r6, [r5, #120]	; 0x78
   415a0:	strh	sl, [r5, #122]	; 0x7a
   415a4:	strh	fp, [r5, #124]	; 0x7c
   415a8:	mov	r0, r5
   415ac:	bl	27498 <luaL_where@@Base+0x7394>
   415b0:	ldr	r3, [sp, #12]
   415b4:	lsr	r1, r3, #1
   415b8:	mov	r7, r0
   415bc:	mov	r0, r5
   415c0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   415c4:	ldr	r2, [pc, #2140]	; 41e28 <luaL_typerror@@Base+0xbabc>
   415c8:	strh	r6, [r5, #120]	; 0x78
   415cc:	strh	r2, [r5, #124]	; 0x7c
   415d0:	uxth	r6, r9
   415d4:	strh	r0, [r5, #122]	; 0x7a
   415d8:	mov	r0, r5
   415dc:	bl	27498 <luaL_where@@Base+0x7394>
   415e0:	strh	sl, [r5, #122]	; 0x7a
   415e4:	strh	fp, [r5, #124]	; 0x7c
   415e8:	strh	r0, [r5, #120]	; 0x78
   415ec:	mov	r0, r5
   415f0:	bl	27498 <luaL_where@@Base+0x7394>
   415f4:	cmp	r9, r8
   415f8:	ldr	r3, [sp, #16]
   415fc:	mov	sl, r0
   41600:	beq	41648 <luaL_typerror@@Base+0xb2dc>
   41604:	orr	r4, r4, r6, lsl #5
   41608:	orr	r8, r6, #23040	; 0x5a00
   4160c:	uxth	r4, r4
   41610:	strh	r7, [r5, #120]	; 0x78
   41614:	strh	r4, [r5, #122]	; 0x7a
   41618:	strh	r8, [r5, #124]	; 0x7c
   4161c:	mov	r0, r5
   41620:	str	r3, [sp, #12]
   41624:	bl	27498 <luaL_where@@Base+0x7394>
   41628:	strh	sl, [r5, #120]	; 0x78
   4162c:	strh	r4, [r5, #122]	; 0x7a
   41630:	strh	r8, [r5, #124]	; 0x7c
   41634:	mov	r7, r0
   41638:	mov	r0, r5
   4163c:	bl	27498 <luaL_where@@Base+0x7394>
   41640:	ldr	r3, [sp, #12]
   41644:	mov	sl, r0
   41648:	ldrh	r4, [sp, #8]
   4164c:	orr	r6, r6, #19712	; 0x4d00
   41650:	strh	r6, [r5, #124]	; 0x7c
   41654:	strh	r4, [r5, #120]	; 0x78
   41658:	strh	r7, [r5, #122]	; 0x7a
   4165c:	mov	r0, r5
   41660:	str	r3, [sp, #12]
   41664:	bl	27498 <luaL_where@@Base+0x7394>
   41668:	ldr	r3, [sp, #12]
   4166c:	mov	r0, r5
   41670:	lsr	r1, r3, #1
   41674:	bl	26ccc <luaL_where@@Base+0x6bc8>
   41678:	ldr	r3, [pc, #1960]	; 41e28 <luaL_typerror@@Base+0xbabc>
   4167c:	strh	r4, [r5, #120]	; 0x78
   41680:	strh	r3, [r5, #124]	; 0x7c
   41684:	strh	r0, [r5, #122]	; 0x7a
   41688:	mov	r0, r5
   4168c:	bl	27498 <luaL_where@@Base+0x7394>
   41690:	strh	r6, [r5, #124]	; 0x7c
   41694:	strh	sl, [r5, #122]	; 0x7a
   41698:	strh	r0, [r5, #120]	; 0x78
   4169c:	mov	r0, r5
   416a0:	bl	27498 <luaL_where@@Base+0x7394>
   416a4:	mov	r0, #0
   416a8:	b	413c4 <luaL_typerror@@Base+0xb058>
   416ac:	ldr	r4, [sp, #8]
   416b0:	cmp	r4, #0
   416b4:	beq	41a14 <luaL_typerror@@Base+0xb6a8>
   416b8:	mov	r1, r3
   416bc:	mov	r0, r5
   416c0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   416c4:	str	r7, [sp]
   416c8:	mov	r2, r6
   416cc:	mov	r1, r4
   416d0:	mov	r3, r0
   416d4:	mov	r0, r5
   416d8:	bl	282fc <luaL_where@@Base+0x81f8>
   416dc:	mov	r0, #0
   416e0:	b	413c4 <luaL_typerror@@Base+0xb058>
   416e4:	cmp	r8, #10
   416e8:	beq	41a14 <luaL_typerror@@Base+0xb6a8>
   416ec:	sub	r3, r8, #13
   416f0:	cmp	r3, #1
   416f4:	bls	41a8c <luaL_typerror@@Base+0xb720>
   416f8:	sub	r3, r8, #21
   416fc:	cmp	r3, #1
   41700:	bls	419e0 <luaL_typerror@@Base+0xb674>
   41704:	mov	r1, #0
   41708:	mov	r0, r5
   4170c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   41710:	ldr	r3, [sp, #20]
   41714:	cmp	r3, #0
   41718:	beq	41a50 <luaL_typerror@@Base+0xb6e4>
   4171c:	cmp	r3, #1
   41720:	beq	41acc <luaL_typerror@@Base+0xb760>
   41724:	ldrd	r2, [sl]
   41728:	tst	r2, #67108864	; 0x4000000
   4172c:	beq	41a5c <luaL_typerror@@Base+0xb6f0>
   41730:	cmp	r3, #4
   41734:	ldr	r3, [sp, #20]
   41738:	vldreq	s15, [r3]
   4173c:	vldrne	d7, [r3]
   41740:	vcmpeq.f32	s15, #0.0
   41744:	vcmpne.f64	d7, #0.0
   41748:	vmrs	APSR_nzcv, fpscr
   4174c:	movne	r4, #1
   41750:	moveq	r4, #0
   41754:	cmp	r4, #0
   41758:	moveq	r3, #2048	; 0x800
   4175c:	movne	r3, #2304	; 0x900
   41760:	orr	r8, r8, #128	; 0x80
   41764:	orr	r8, r3, r8
   41768:	strh	r0, [r5, #122]	; 0x7a
   4176c:	strh	r8, [r5, #124]	; 0x7c
   41770:	strh	r6, [r5, #120]	; 0x78
   41774:	mov	r0, r5
   41778:	bl	27498 <luaL_where@@Base+0x7394>
   4177c:	mov	r1, r4
   41780:	mov	r0, r5
   41784:	bl	26ccc <luaL_where@@Base+0x6bc8>
   41788:	b	413a8 <luaL_typerror@@Base+0xb03c>
   4178c:	cmp	r8, #10
   41790:	beq	41a14 <luaL_typerror@@Base+0xb6a8>
   41794:	ldr	r3, [pc, #1668]	; 41e20 <luaL_typerror@@Base+0xbab4>
   41798:	orr	r8, r8, #4736	; 0x1280
   4179c:	strh	r8, [r5, #122]	; 0x7a
   417a0:	strh	r6, [r5, #120]	; 0x78
   417a4:	strh	r3, [r5, #124]	; 0x7c
   417a8:	mov	r0, r5
   417ac:	bl	27498 <luaL_where@@Base+0x7394>
   417b0:	b	413a8 <luaL_typerror@@Base+0xb03c>
   417b4:	sub	r2, r8, #10
   417b8:	clz	r2, r2
   417bc:	lsr	r2, r2, #5
   417c0:	cmp	r9, #10
   417c4:	orreq	r2, r2, #1
   417c8:	cmp	r2, #0
   417cc:	bne	41a14 <luaL_typerror@@Base+0xb6a8>
   417d0:	ldr	r2, [sp, #12]
   417d4:	cmp	r2, #7
   417d8:	cmpls	r3, #8
   417dc:	bne	41960 <luaL_typerror@@Base+0xb5f4>
   417e0:	cmp	r2, #3
   417e4:	uxth	r3, r9
   417e8:	movls	r8, #19
   417ec:	orr	r8, r8, r3, lsl #5
   417f0:	tst	fp, #8388608	; 0x800000
   417f4:	uxth	r8, r8
   417f8:	uxth	r0, r6
   417fc:	orr	r3, r3, #23040	; 0x5a00
   41800:	orreq	r8, r8, #2048	; 0x800
   41804:	strh	r0, [r5, #120]	; 0x78
   41808:	strh	r3, [r5, #124]	; 0x7c
   4180c:	strh	r8, [r5, #122]	; 0x7a
   41810:	mov	r0, r5
   41814:	bl	27498 <luaL_where@@Base+0x7394>
   41818:	b	413a8 <luaL_typerror@@Base+0xb03c>
   4181c:	tst	r3, #8
   41820:	bne	41988 <luaL_typerror@@Base+0xb61c>
   41824:	cmp	r3, #3
   41828:	uxthhi	r3, r9
   4182c:	orrhi	r2, r3, #23040	; 0x5a00
   41830:	lslhi	r3, r3, #5
   41834:	orrhi	r3, r3, #5
   41838:	ldrls	r2, [pc, #1508]	; 41e24 <luaL_typerror@@Base+0xbab8>
   4183c:	ldrls	r3, [pc, #1512]	; 41e2c <luaL_typerror@@Base+0xbac0>
   41840:	uxth	r0, r6
   41844:	uxthhi	r3, r3
   41848:	strh	r0, [r5, #120]	; 0x78
   4184c:	strh	r2, [r5, #124]	; 0x7c
   41850:	strh	r3, [r5, #122]	; 0x7a
   41854:	mov	r0, r5
   41858:	bl	27498 <luaL_where@@Base+0x7394>
   4185c:	b	413a8 <luaL_typerror@@Base+0xb03c>
   41860:	and	r2, r6, #520093696	; 0x1f000000
   41864:	cmp	r2, #234881024	; 0xe000000
   41868:	beq	41a28 <luaL_typerror@@Base+0xb6bc>
   4186c:	sub	r3, r3, #1
   41870:	cmp	r3, #1
   41874:	bls	41aa4 <luaL_typerror@@Base+0xb738>
   41878:	cmp	r2, #0
   4187c:	beq	419f8 <luaL_typerror@@Base+0xb68c>
   41880:	cmp	r2, #201326592	; 0xc000000
   41884:	beq	41ad8 <luaL_typerror@@Base+0xb76c>
   41888:	cmp	r2, #67108864	; 0x4000000
   4188c:	beq	41b3c <luaL_typerror@@Base+0xb7d0>
   41890:	cmp	r2, #50331648	; 0x3000000
   41894:	beq	41b90 <luaL_typerror@@Base+0xb824>
   41898:	mov	r2, r4
   4189c:	mov	r1, r6
   418a0:	bl	28d54 <luaL_where@@Base+0x8c50>
   418a4:	ldr	fp, [r8]
   418a8:	ldrh	r1, [r0, #6]
   418ac:	ldr	r3, [fp, r1, lsl #4]
   418b0:	add	sl, fp, r1, lsl #4
   418b4:	lsr	r2, r3, #28
   418b8:	cmp	r2, #8
   418bc:	bne	418d8 <luaL_typerror@@Base+0xb56c>
   418c0:	uxth	r2, r3
   418c4:	ldr	r3, [fp, r2, lsl #4]
   418c8:	add	sl, fp, r2, lsl #4
   418cc:	lsr	r2, r3, #28
   418d0:	cmp	r2, #8
   418d4:	beq	418c0 <luaL_typerror@@Base+0xb554>
   418d8:	ldr	r4, [r4]
   418dc:	cmp	r2, #6
   418e0:	add	r3, r4, #8
   418e4:	str	r3, [sp, #20]
   418e8:	beq	41da0 <luaL_typerror@@Base+0xba34>
   418ec:	mov	r1, sl
   418f0:	mov	r0, r8
   418f4:	bl	1e228 <_start@@Base+0xae78>
   418f8:	mov	r9, r0
   418fc:	ldr	r3, [sl]
   41900:	uxth	r6, r6
   41904:	lsr	r2, r3, #28
   41908:	cmp	r2, #2
   4190c:	beq	41d28 <luaL_typerror@@Base+0xb9bc>
   41910:	sub	r1, r9, #21
   41914:	cmp	r1, #1
   41918:	bls	41dc4 <luaL_typerror@@Base+0xba58>
   4191c:	sub	r1, r9, #19
   41920:	cmp	r1, #1
   41924:	bhi	41c3c <luaL_typerror@@Base+0xb8d0>
   41928:	cmp	r2, #5
   4192c:	uxtheq	r3, r3
   41930:	orr	r9, r9, #17664	; 0x4500
   41934:	addeq	sl, fp, r3, lsl #4
   41938:	mov	r3, #16
   4193c:	strh	r6, [r5, #120]	; 0x78
   41940:	strh	r9, [r5, #124]	; 0x7c
   41944:	strh	r3, [r5, #122]	; 0x7a
   41948:	mov	r0, r5
   4194c:	bl	27498 <luaL_where@@Base+0x7394>
   41950:	ldr	fp, [sl]
   41954:	mov	r6, r0
   41958:	ldr	r2, [r5, #-156]	; 0xffffff64
   4195c:	b	411c4 <luaL_typerror@@Base+0xae58>
   41960:	ldr	r2, [sp, #12]
   41964:	cmp	r3, #7
   41968:	cmpls	r2, #8
   4196c:	beq	419a0 <luaL_typerror@@Base+0xb634>
   41970:	cmp	r8, #19
   41974:	bne	413a4 <luaL_typerror@@Base+0xb038>
   41978:	mov	r1, r6
   4197c:	mov	r0, r5
   41980:	bl	281cc <luaL_where@@Base+0x80c8>
   41984:	b	413a8 <luaL_typerror@@Base+0xb03c>
   41988:	mov	r1, #4
   4198c:	mov	r2, #0
   41990:	mov	fp, #8388608	; 0x800000
   41994:	str	r1, [sp, #12]
   41998:	mov	r8, #20
   4199c:	b	417c0 <luaL_typerror@@Base+0xb454>
   419a0:	cmp	r3, #3
   419a4:	uxthhi	r3, r9
   419a8:	orrhi	r2, r3, #23040	; 0x5a00
   419ac:	lslhi	r3, r3, #5
   419b0:	ldrls	r2, [pc, #1132]	; 41e24 <luaL_typerror@@Base+0xbab8>
   419b4:	uxthhi	r3, r3
   419b8:	movls	r3, #608	; 0x260
   419bc:	uxth	r8, r8
   419c0:	uxth	r6, r6
   419c4:	orr	r8, r3, r8
   419c8:	strh	r8, [r5, #122]	; 0x7a
   419cc:	strh	r2, [r5, #124]	; 0x7c
   419d0:	strh	r6, [r5, #120]	; 0x78
   419d4:	mov	r0, r5
   419d8:	bl	27498 <luaL_where@@Base+0x7394>
   419dc:	b	413a8 <luaL_typerror@@Base+0xb03c>
   419e0:	mov	r2, #0
   419e4:	mov	r3, #0
   419e8:	mov	r1, #29
   419ec:	mov	r0, r5
   419f0:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   419f4:	b	41710 <luaL_typerror@@Base+0xb3a4>
   419f8:	mov	r1, #25
   419fc:	str	r2, [sp, #20]
   41a00:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   41a04:	ldr	r2, [r5, #-156]	; 0xffffff64
   41a08:	mov	r3, #272	; 0x110
   41a0c:	mov	r6, r0
   41a10:	b	411b8 <luaL_typerror@@Base+0xae4c>
   41a14:	add	r1, r5, #2336	; 0x920
   41a18:	add	r1, r1, #12
   41a1c:	ldr	r0, [r5, #80]	; 0x50
   41a20:	mov	r2, #22
   41a24:	bl	210d0 <luaL_where@@Base+0xfcc>
   41a28:	ldrd	r2, [r4]
   41a2c:	cmn	r3, #14
   41a30:	beq	41b24 <luaL_typerror@@Base+0xb7b8>
   41a34:	orrs	r3, r2, r3, lsl #1
   41a38:	movne	r3, #1
   41a3c:	moveq	r3, #0
   41a40:	str	r3, [sp, #20]
   41a44:	mov	r2, r8
   41a48:	mov	r3, #224	; 0xe0
   41a4c:	b	411b8 <luaL_typerror@@Base+0xae4c>
   41a50:	ldr	r4, [sp, #20]
   41a54:	mov	r3, #2048	; 0x800
   41a58:	b	41760 <luaL_typerror@@Base+0xb3f4>
   41a5c:	cmp	r3, #1
   41a60:	beq	41ba4 <luaL_typerror@@Base+0xb838>
   41a64:	cmp	r3, #2
   41a68:	beq	41bb8 <luaL_typerror@@Base+0xb84c>
   41a6c:	cmp	r3, #4
   41a70:	ldr	r3, [sp, #20]
   41a74:	beq	41c2c <luaL_typerror@@Base+0xb8c0>
   41a78:	ldrd	r2, [r3]
   41a7c:	orrs	r3, r2, r3
   41a80:	movne	r4, #1
   41a84:	moveq	r4, #0
   41a88:	b	41754 <luaL_typerror@@Base+0xb3e8>
   41a8c:	mov	r2, #0
   41a90:	mov	r3, #0
   41a94:	mov	r1, #28
   41a98:	mov	r0, r5
   41a9c:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   41aa0:	b	41710 <luaL_typerror@@Base+0xb3a4>
   41aa4:	sub	r1, r2, #33554432	; 0x2000000
   41aa8:	clz	r1, r1
   41aac:	lsr	r1, r1, #5
   41ab0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   41ab4:	mov	r1, #0
   41ab8:	ldr	r2, [r5, #-156]	; 0xffffff64
   41abc:	mov	r3, #48	; 0x30
   41ac0:	str	r1, [sp, #20]
   41ac4:	mov	r6, r0
   41ac8:	b	411b8 <luaL_typerror@@Base+0xae4c>
   41acc:	ldr	r4, [sp, #20]
   41ad0:	mov	r3, #2304	; 0x900
   41ad4:	b	41760 <luaL_typerror@@Base+0xb3f4>
   41ad8:	ldr	r3, [r4]
   41adc:	uxth	r6, r6
   41ae0:	ldrb	r4, [r3, #6]
   41ae4:	cmp	r4, #1
   41ae8:	beq	41bcc <luaL_typerror@@Base+0xb860>
   41aec:	mov	r1, #24
   41af0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   41af4:	ldr	r3, [pc, #812]	; 41e28 <luaL_typerror@@Base+0xbabc>
   41af8:	strh	r6, [r5, #120]	; 0x78
   41afc:	strh	r3, [r5, #124]	; 0x7c
   41b00:	mov	r3, #0
   41b04:	str	r3, [sp, #20]
   41b08:	strh	r0, [r5, #122]	; 0x7a
   41b0c:	mov	r0, r5
   41b10:	bl	27498 <luaL_where@@Base+0x7394>
   41b14:	ldr	r2, [r5, #-156]	; 0xffffff64
   41b18:	mov	r3, #272	; 0x110
   41b1c:	mov	r6, r0
   41b20:	b	411b8 <luaL_typerror@@Base+0xae4c>
   41b24:	adds	r3, r2, #0
   41b28:	movne	r3, #1
   41b2c:	str	r3, [sp, #20]
   41b30:	mov	r2, r8
   41b34:	mov	r3, #224	; 0xe0
   41b38:	b	411b8 <luaL_typerror@@Base+0xae4c>
   41b3c:	ldr	r3, [r1]
   41b40:	lsr	r2, r3, #28
   41b44:	cmp	r2, #5
   41b48:	beq	41c90 <luaL_typerror@@Base+0xb924>
   41b4c:	and	r3, r3, #-67108864	; 0xfc000000
   41b50:	cmp	r3, #805306368	; 0x30000000
   41b54:	beq	41e04 <luaL_typerror@@Base+0xba98>
   41b58:	mov	r1, #16
   41b5c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   41b60:	ldr	r3, [pc, #704]	; 41e28 <luaL_typerror@@Base+0xbabc>
   41b64:	strh	r6, [r5, #120]	; 0x78
   41b68:	strh	r3, [r5, #124]	; 0x7c
   41b6c:	mov	r3, #0
   41b70:	str	r3, [sp, #20]
   41b74:	strh	r0, [r5, #122]	; 0x7a
   41b78:	mov	r0, r5
   41b7c:	bl	27498 <luaL_where@@Base+0x7394>
   41b80:	ldr	r2, [r5, #-156]	; 0xffffff64
   41b84:	mov	r3, #320	; 0x140
   41b88:	mov	r6, r0
   41b8c:	b	411b8 <luaL_typerror@@Base+0xae4c>
   41b90:	mov	r1, #0
   41b94:	mov	r2, r8
   41b98:	mov	r3, #272	; 0x110
   41b9c:	str	r1, [sp, #20]
   41ba0:	b	411b8 <luaL_typerror@@Base+0xae4c>
   41ba4:	ldr	r3, [sp, #20]
   41ba8:	ldrb	r4, [r3]
   41bac:	adds	r4, r4, #0
   41bb0:	movne	r4, #1
   41bb4:	b	41754 <luaL_typerror@@Base+0xb3e8>
   41bb8:	ldr	r3, [sp, #20]
   41bbc:	ldrh	r4, [r3]
   41bc0:	adds	r4, r4, #0
   41bc4:	movne	r4, #1
   41bc8:	b	41754 <luaL_typerror@@Base+0xb3e8>
   41bcc:	ldr	r2, [pc, #604]	; 41e30 <luaL_typerror@@Base+0xbac4>
   41bd0:	mov	r3, #12
   41bd4:	strh	r2, [r0, #124]	; 0x7c
   41bd8:	strh	r3, [r0, #122]	; 0x7a
   41bdc:	strh	r6, [r0, #120]	; 0x78
   41be0:	bl	27498 <luaL_where@@Base+0x7394>
   41be4:	mov	r1, r4
   41be8:	mov	r9, r0
   41bec:	mov	r0, r5
   41bf0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   41bf4:	ldr	r3, [pc, #568]	; 41e34 <luaL_typerror@@Base+0xbac8>
   41bf8:	strh	r9, [r5, #120]	; 0x78
   41bfc:	strh	r3, [r5, #124]	; 0x7c
   41c00:	mov	r3, #0
   41c04:	str	r3, [sp, #20]
   41c08:	strh	r0, [r5, #122]	; 0x7a
   41c0c:	mov	r0, r5
   41c10:	bl	27498 <luaL_where@@Base+0x7394>
   41c14:	ldr	r2, [pc, #540]	; 41e38 <luaL_typerror@@Base+0xbacc>
   41c18:	mov	r3, #13
   41c1c:	strh	r6, [r5, #120]	; 0x78
   41c20:	strh	r2, [r5, #124]	; 0x7c
   41c24:	strh	r3, [r5, #122]	; 0x7a
   41c28:	b	41b0c <luaL_typerror@@Base+0xb7a0>
   41c2c:	ldr	r4, [r3]
   41c30:	adds	r4, r4, #0
   41c34:	movne	r4, #1
   41c38:	b	41754 <luaL_typerror@@Base+0xb3e8>
   41c3c:	mov	r1, #8
   41c40:	mov	r0, r5
   41c44:	bl	26ccc <luaL_where@@Base+0x6bc8>
   41c48:	ldr	r3, [pc, #472]	; 41e28 <luaL_typerror@@Base+0xbabc>
   41c4c:	strh	r6, [r5, #120]	; 0x78
   41c50:	strh	r3, [r5, #124]	; 0x7c
   41c54:	strh	r0, [r5, #122]	; 0x7a
   41c58:	mov	r0, r5
   41c5c:	bl	27498 <luaL_where@@Base+0x7394>
   41c60:	mov	r6, r0
   41c64:	ldr	fp, [sl]
   41c68:	subs	r3, r9, #10
   41c6c:	movne	r3, #1
   41c70:	lsr	r2, fp, #28
   41c74:	cmp	r2, #0
   41c78:	movne	r3, #0
   41c7c:	cmp	r3, #0
   41c80:	beq	41958 <luaL_typerror@@Base+0xb5ec>
   41c84:	orr	r9, r9, #17920	; 0x4600
   41c88:	mov	r3, #0
   41c8c:	b	4193c <luaL_typerror@@Base+0xb5d0>
   41c90:	ldr	sl, [r4]
   41c94:	mov	r9, #0
   41c98:	add	r3, sp, #28
   41c9c:	mov	r2, sl
   41ca0:	str	r9, [sp]
   41ca4:	mov	r0, r8
   41ca8:	bl	1544c <_start@@Base+0x209c>
   41cac:	mov	r1, sl
   41cb0:	mov	r2, #4
   41cb4:	mov	r4, r0
   41cb8:	mov	r0, r5
   41cbc:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   41cc0:	ldr	r3, [pc, #372]	; 41e3c <luaL_typerror@@Base+0xbad0>
   41cc4:	strh	r6, [r5, #120]	; 0x78
   41cc8:	strh	r3, [r5, #124]	; 0x7c
   41ccc:	strh	r0, [r5, #122]	; 0x7a
   41cd0:	mov	r0, r5
   41cd4:	bl	27498 <luaL_where@@Base+0x7394>
   41cd8:	cmp	r4, r9
   41cdc:	beq	41df8 <luaL_typerror@@Base+0xba8c>
   41ce0:	ldr	r3, [r4]
   41ce4:	lsr	r3, r3, #28
   41ce8:	cmp	r3, #11
   41cec:	strne	r9, [sp, #20]
   41cf0:	movne	r3, #17
   41cf4:	bne	41d1c <luaL_typerror@@Base+0xb9b0>
   41cf8:	ldr	r3, [sp, #28]
   41cfc:	mov	r0, r5
   41d00:	mov	r1, r3
   41d04:	subs	r3, r3, r9
   41d08:	movne	r3, #1
   41d0c:	str	r3, [sp, #20]
   41d10:	bl	26ccc <luaL_where@@Base+0x6bc8>
   41d14:	ldrh	r3, [r4]
   41d18:	mov	r6, r0
   41d1c:	lsl	r3, r3, #4
   41d20:	ldr	r2, [r5, #-156]	; 0xffffff64
   41d24:	b	411b8 <luaL_typerror@@Base+0xae4c>
   41d28:	mov	r3, #15
   41d2c:	orr	r9, r9, #17664	; 0x4500
   41d30:	strh	r6, [r5, #120]	; 0x78
   41d34:	strh	r3, [r5, #122]	; 0x7a
   41d38:	strh	r9, [r5, #124]	; 0x7c
   41d3c:	mov	r0, r5
   41d40:	bl	27498 <luaL_where@@Base+0x7394>
   41d44:	ldr	fp, [sl]
   41d48:	ldr	r3, [pc, #240]	; 41e40 <luaL_typerror@@Base+0xbad4>
   41d4c:	and	r3, r3, fp
   41d50:	cmp	r3, #545259520	; 0x20800000
   41d54:	mov	r6, r0
   41d58:	bne	41958 <luaL_typerror@@Base+0xb5ec>
   41d5c:	ldr	r3, [r4, #8]
   41d60:	str	r3, [sp, #20]
   41d64:	ldr	r3, [r8]
   41d68:	uxth	r2, fp
   41d6c:	ldr	fp, [r3, r2, lsl #4]
   41d70:	add	sl, r3, r2, lsl #4
   41d74:	lsr	r2, fp, #28
   41d78:	cmp	r2, #8
   41d7c:	beq	41d68 <luaL_typerror@@Base+0xb9fc>
   41d80:	cmp	r2, #5
   41d84:	uxtheq	sl, fp
   41d88:	mov	r0, r8
   41d8c:	addeq	sl, r3, sl, lsl #4
   41d90:	mov	r1, sl
   41d94:	bl	1e228 <_start@@Base+0xae78>
   41d98:	mov	r9, r0
   41d9c:	b	41c64 <luaL_typerror@@Base+0xb8f8>
   41da0:	orr	r1, r1, #536870912	; 0x20000000
   41da4:	orr	r1, r1, #131072	; 0x20000
   41da8:	mov	r2, #4
   41dac:	mov	r0, r8
   41db0:	bl	41060 <luaL_typerror@@Base+0xacf4>
   41db4:	ldr	fp, [r8]
   41db8:	mov	r9, #5
   41dbc:	add	sl, fp, r0, lsl #4
   41dc0:	b	418fc <luaL_typerror@@Base+0xb590>
   41dc4:	mov	r3, #17
   41dc8:	orr	r9, r9, #17664	; 0x4500
   41dcc:	strh	r6, [r5, #120]	; 0x78
   41dd0:	strh	r3, [r5, #122]	; 0x7a
   41dd4:	strh	r9, [r5, #124]	; 0x7c
   41dd8:	mov	r0, r5
   41ddc:	bl	27498 <luaL_where@@Base+0x7394>
   41de0:	mov	r3, #1
   41de4:	strb	r3, [r5, #268]	; 0x10c
   41de8:	ldr	r2, [r5, #-156]	; 0xffffff64
   41dec:	ldr	fp, [sl]
   41df0:	mov	r6, r0
   41df4:	b	411c4 <luaL_typerror@@Base+0xae58>
   41df8:	str	r4, [sp, #20]
   41dfc:	mov	r3, #17
   41e00:	b	41d1c <luaL_typerror@@Base+0xb9b0>
   41e04:	add	r1, r0, #2336	; 0x920
   41e08:	add	r1, r1, #12
   41e0c:	ldr	r0, [r0, #80]	; 0x50
   41e10:	mov	r2, #11
   41e14:	bl	210d0 <luaL_where@@Base+0xfcc>
   41e18:			; <UNDEFINED> instruction: 0xf436fff5
   41e1c:			; <UNDEFINED> instruction: 0xfff7f021
   41e20:	andeq	r5, r0, r4, lsl sl
   41e24:	andeq	r5, r0, r3, lsl sl
   41e28:	andeq	r2, r0, r5, lsl #18
   41e2c:	andeq	r0, r0, r5, ror #4
   41e30:	andeq	r4, r0, r0, lsl r5
   41e34:	muleq	r0, r3, r8
   41e38:	andeq	r4, r0, r5, lsl #10
   41e3c:	andeq	r0, r0, r4, lsl #17
   41e40:			; <UNDEFINED> instruction: 0xf0800000
   41e44:	ldr	r3, [r0, #96]	; 0x60
   41e48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   41e4c:	sub	sp, sp, #16
   41e50:	ldr	r9, [r3]
   41e54:	ldr	r6, [r3, #4]
   41e58:	cmp	r9, #0
   41e5c:	cmpne	r6, #0
   41e60:	beq	41f04 <luaL_typerror@@Base+0xbb98>
   41e64:	ldr	r2, [r1]
   41e68:	ldr	r7, [r0, #-156]	; 0xffffff64
   41e6c:	ldr	r8, [r3, #8]
   41e70:	ldr	r3, [r2, #4]
   41e74:	mov	r5, r1
   41e78:	cmn	r3, #11
   41e7c:	mov	r4, r0
   41e80:	ldr	r1, [r7]
   41e84:	movne	sl, #1
   41e88:	beq	41f38 <luaL_typerror@@Base+0xbbcc>
   41e8c:	mov	r3, r9
   41e90:	str	r2, [sp]
   41e94:	add	r1, r1, #272	; 0x110
   41e98:	mov	r2, #0
   41e9c:	mov	r0, r4
   41ea0:	bl	41160 <luaL_typerror@@Base+0xadf4>
   41ea4:	ldr	r2, [r5]
   41ea8:	ldr	r1, [r7]
   41eac:	add	r2, r2, #8
   41eb0:	mov	r3, r6
   41eb4:	str	r2, [sp]
   41eb8:	add	r1, r1, #144	; 0x90
   41ebc:	mov	r2, #0
   41ec0:	mov	r9, r0
   41ec4:	mov	r0, r4
   41ec8:	bl	41160 <luaL_typerror@@Base+0xadf4>
   41ecc:	cmp	r8, #0
   41ed0:	mov	r6, r0
   41ed4:	bne	41f0c <luaL_typerror@@Base+0xbba0>
   41ed8:	mov	r1, r8
   41edc:	mov	r0, r4
   41ee0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   41ee4:	mov	r3, r0
   41ee8:	mov	ip, #0
   41eec:	str	sl, [sp]
   41ef0:	mov	r2, r6
   41ef4:	mov	r1, r9
   41ef8:	mov	r0, r4
   41efc:	str	ip, [r5, #4]
   41f00:	bl	286a8 <luaL_where@@Base+0x85a4>
   41f04:	add	sp, sp, #16
   41f08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   41f0c:	ldr	r2, [r5]
   41f10:	ldr	r1, [r7]
   41f14:	add	r2, r2, #16
   41f18:	mov	r3, r8
   41f1c:	str	r2, [sp]
   41f20:	add	r1, r1, #144	; 0x90
   41f24:	mov	r2, #0
   41f28:	mov	r0, r4
   41f2c:	bl	41160 <luaL_typerror@@Base+0xadf4>
   41f30:	mov	r3, r0
   41f34:	b	41ee8 <luaL_typerror@@Base+0xbb7c>
   41f38:	ldr	r3, [r2]
   41f3c:	ldrh	r2, [r3, #6]
   41f40:	b	41f48 <luaL_typerror@@Base+0xbbdc>
   41f44:	uxth	r2, r3
   41f48:	ldr	r3, [r1, r2, lsl #4]
   41f4c:	add	r2, r1, r2, lsl #4
   41f50:	lsr	r0, r3, #28
   41f54:	cmp	r0, #8
   41f58:	beq	41f44 <luaL_typerror@@Base+0xbbd8>
   41f5c:	cmp	r0, #2
   41f60:	beq	41f94 <luaL_typerror@@Base+0xbc28>
   41f64:	sub	r2, r2, r1
   41f68:	mov	r0, r1
   41f6c:	asr	r1, r2, #4
   41f70:	add	r2, sp, #12
   41f74:	bl	1b78c <_start@@Base+0x83dc>
   41f78:	mov	sl, #1
   41f7c:	ldr	r2, [r5]
   41f80:	ldr	r1, [r7]
   41f84:	lsr	r0, r0, #16
   41f88:	and	r0, r0, #15
   41f8c:	lsl	sl, sl, r0
   41f90:	b	41e8c <luaL_typerror@@Base+0xbb20>
   41f94:	ldr	r3, [r2]
   41f98:	uxth	r2, r3
   41f9c:	ldr	r3, [r1, r2, lsl #4]
   41fa0:	add	r2, r1, r2, lsl #4
   41fa4:	lsr	r0, r3, #28
   41fa8:	cmp	r0, #8
   41fac:	beq	41f98 <luaL_typerror@@Base+0xbc2c>
   41fb0:	b	41f64 <luaL_typerror@@Base+0xbbf8>
   41fb4:	ldr	r2, [r0, #96]	; 0x60
   41fb8:	push	{r4, r5, r6, r7, r8, r9, lr}
   41fbc:	sub	sp, sp, #12
   41fc0:	ldm	r2, {r3, r7}
   41fc4:	cmp	r3, #0
   41fc8:	cmpne	r7, #0
   41fcc:	beq	41ff4 <luaL_typerror@@Base+0xbc88>
   41fd0:	ldr	r6, [r2, #8]
   41fd4:	mov	r4, r0
   41fd8:	cmp	r6, #0
   41fdc:	mov	r5, r1
   41fe0:	ldr	r8, [r0, #-156]	; 0xffffff64
   41fe4:	bne	41ffc <luaL_typerror@@Base+0xbc90>
   41fe8:	and	r2, r7, #520093696	; 0x1f000000
   41fec:	cmp	r2, #67108864	; 0x4000000
   41ff0:	beq	4208c <luaL_typerror@@Base+0xbd20>
   41ff4:	add	sp, sp, #12
   41ff8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   41ffc:	ldr	r1, [r8]
   42000:	ldr	r2, [r5]
   42004:	add	r1, r1, #272	; 0x110
   42008:	str	r2, [sp]
   4200c:	mov	r2, #0
   42010:	bl	41160 <luaL_typerror@@Base+0xadf4>
   42014:	ldr	r2, [r5]
   42018:	ldr	r1, [r8]
   4201c:	add	r2, r2, #8
   42020:	mov	r3, r7
   42024:	str	r2, [sp]
   42028:	add	r1, r1, #288	; 0x120
   4202c:	mov	r2, #0
   42030:	mov	r9, r0
   42034:	mov	r0, r4
   42038:	bl	41160 <luaL_typerror@@Base+0xadf4>
   4203c:	ldr	r2, [r5]
   42040:	ldr	r1, [r8]
   42044:	add	r2, r2, #16
   42048:	str	r2, [sp]
   4204c:	add	r1, r1, #144	; 0x90
   42050:	mov	r3, r6
   42054:	mov	r2, #0
   42058:	mov	r7, r0
   4205c:	mov	r0, r4
   42060:	bl	41160 <luaL_typerror@@Base+0xadf4>
   42064:	mov	ip, #0
   42068:	mov	r3, r0
   4206c:	str	ip, [r5, #4]
   42070:	mov	r2, r7
   42074:	mov	r1, r9
   42078:	mov	r0, r4
   4207c:	str	ip, [sp]
   42080:	bl	282fc <luaL_where@@Base+0x81f8>
   42084:	add	sp, sp, #12
   42088:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4208c:	ldr	r1, [r8]
   42090:	ldr	r2, [r5]
   42094:	add	r1, r1, #272	; 0x110
   42098:	str	r2, [sp]
   4209c:	mov	r2, r6
   420a0:	bl	41160 <luaL_typerror@@Base+0xadf4>
   420a4:	ldr	r2, [r5]
   420a8:	ldr	r1, [r8]
   420ac:	add	r2, r2, #8
   420b0:	add	r1, r1, #288	; 0x120
   420b4:	mov	r3, r7
   420b8:	str	r2, [sp]
   420bc:	mov	r2, r6
   420c0:	mov	r9, r0
   420c4:	mov	r0, r4
   420c8:	bl	41160 <luaL_typerror@@Base+0xadf4>
   420cc:	ldr	r3, [r4, #96]	; 0x60
   420d0:	ldr	r2, [pc, #68]	; 4211c <luaL_typerror@@Base+0xbdb0>
   420d4:	ldrh	r3, [r3, #4]
   420d8:	strh	r6, [r4, #122]	; 0x7a
   420dc:	strh	r2, [r4, #124]	; 0x7c
   420e0:	strh	r3, [r4, #120]	; 0x78
   420e4:	mov	r7, r0
   420e8:	mov	r0, r4
   420ec:	bl	27498 <luaL_where@@Base+0x7394>
   420f0:	mov	r1, #1
   420f4:	mov	r6, r0
   420f8:	mov	r0, r4
   420fc:	bl	26ccc <luaL_where@@Base+0x6bc8>
   42100:	ldr	r3, [pc, #24]	; 42120 <luaL_typerror@@Base+0xbdb4>
   42104:	strh	r6, [r4, #120]	; 0x78
   42108:	strh	r3, [r4, #124]	; 0x7c
   4210c:	strh	r0, [r4, #122]	; 0x7a
   42110:	mov	r0, r4
   42114:	bl	27498 <luaL_where@@Base+0x7394>
   42118:	b	42064 <luaL_typerror@@Base+0xbcf8>
   4211c:	andeq	r4, r0, r3, lsl r5
   42120:	andeq	r2, r0, r3, lsl r9
   42124:	ldr	r3, [r0, #96]	; 0x60
   42128:	push	{r4, r5, r6, r7, r8, lr}
   4212c:	sub	sp, sp, #8
   42130:	ldr	r5, [r3]
   42134:	cmp	r5, #0
   42138:	beq	421a4 <luaL_typerror@@Base+0xbe38>
   4213c:	ldr	r3, [r3, #4]
   42140:	ldr	r7, [r0, #-156]	; 0xffffff64
   42144:	ands	r2, r3, #520093696	; 0x1f000000
   42148:	mov	r6, r1
   4214c:	ldr	ip, [r1]
   42150:	mov	r4, r0
   42154:	ldr	r1, [r7]
   42158:	bne	421ac <luaL_typerror@@Base+0xbe40>
   4215c:	mov	r3, r5
   42160:	str	ip, [sp]
   42164:	add	r1, r1, #304	; 0x130
   42168:	bl	41160 <luaL_typerror@@Base+0xadf4>
   4216c:	mov	r1, #93	; 0x5d
   42170:	mov	r2, r0
   42174:	mov	r5, r0
   42178:	mov	r0, r4
   4217c:	bl	27a00 <luaL_where@@Base+0x78fc>
   42180:	mov	r8, r0
   42184:	ldr	r3, [pc, #96]	; 421ec <luaL_typerror@@Base+0xbe80>
   42188:	strh	r5, [r4, #120]	; 0x78
   4218c:	strh	r8, [r4, #122]	; 0x7a
   42190:	strh	r3, [r4, #124]	; 0x7c
   42194:	mov	r0, r4
   42198:	ldr	r4, [r4, #96]	; 0x60
   4219c:	bl	27498 <luaL_where@@Base+0x7394>
   421a0:	str	r0, [r4]
   421a4:	add	sp, sp, #8
   421a8:	pop	{r4, r5, r6, r7, r8, pc}
   421ac:	add	ip, ip, #8
   421b0:	str	ip, [sp]
   421b4:	add	r1, r1, #144	; 0x90
   421b8:	mov	r2, #0
   421bc:	bl	41160 <luaL_typerror@@Base+0xadf4>
   421c0:	ldr	r1, [r7]
   421c4:	ldr	r3, [r6]
   421c8:	add	r1, r1, #288	; 0x120
   421cc:	str	r3, [sp]
   421d0:	mov	r2, #0
   421d4:	mov	r3, r5
   421d8:	mov	r8, r0
   421dc:	mov	r0, r4
   421e0:	bl	41160 <luaL_typerror@@Base+0xadf4>
   421e4:	mov	r5, r0
   421e8:	b	42184 <luaL_typerror@@Base+0xbe18>
   421ec:	andeq	r4, r0, r4, lsl #30
   421f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   421f4:	sub	sp, sp, #52	; 0x34
   421f8:	ldr	fp, [r0, #-156]	; 0xffffff64
   421fc:	mov	r7, r2
   42200:	str	r1, [sp, #12]
   42204:	add	r2, sp, #36	; 0x24
   42208:	mov	r1, r7
   4220c:	mov	r5, r0
   42210:	ldr	r0, [fp]
   42214:	bl	1b78c <_start@@Base+0x83dc>
   42218:	ldr	r2, [fp]
   4221c:	add	r4, r2, r7, lsl #4
   42220:	ldr	r3, [r2, r7, lsl #4]
   42224:	lsr	r1, r3, #28
   42228:	cmp	r1, #8
   4222c:	mov	r6, r0
   42230:	bne	4224c <luaL_typerror@@Base+0xbee0>
   42234:	uxth	r4, r3
   42238:	ldr	r3, [r2, r4, lsl #4]
   4223c:	add	r4, r2, r4, lsl #4
   42240:	lsr	r1, r3, #28
   42244:	cmp	r1, #8
   42248:	beq	42234 <luaL_typerror@@Base+0xbec8>
   4224c:	mov	r1, r7
   42250:	mov	r0, r5
   42254:	bl	26ccc <luaL_where@@Base+0x6bc8>
   42258:	lsr	r3, r6, #28
   4225c:	cmp	r3, #2
   42260:	mov	r8, r0
   42264:	beq	42464 <luaL_typerror@@Base+0xc0f8>
   42268:	tst	r6, #-67108864	; 0xfc000000
   4226c:	beq	4241c <luaL_typerror@@Base+0xc0b0>
   42270:	tst	r6, #1048576	; 0x100000
   42274:	beq	424bc <luaL_typerror@@Base+0xc150>
   42278:	ldr	r2, [r5, #96]	; 0x60
   4227c:	ldr	r3, [r2, #4]
   42280:	cmp	r3, #0
   42284:	beq	428f0 <luaL_typerror@@Base+0xc584>
   42288:	ldr	r9, [r2, #8]
   4228c:	cmp	r9, #0
   42290:	bne	428f0 <luaL_typerror@@Base+0xc584>
   42294:	ldr	r2, [sp, #12]
   42298:	ldr	r1, [fp]
   4229c:	mov	r0, r5
   422a0:	ldr	r2, [r2]
   422a4:	add	r1, r1, #144	; 0x90
   422a8:	add	r2, r2, #8
   422ac:	str	r2, [sp]
   422b0:	mov	r2, r9
   422b4:	bl	41160 <luaL_typerror@@Base+0xadf4>
   422b8:	ldr	r3, [fp]
   422bc:	mov	r2, r9
   422c0:	mov	r1, r4
   422c4:	str	r3, [sp, #16]
   422c8:	str	r0, [sp, #12]
   422cc:	mov	r0, r3
   422d0:	bl	1b6c4 <_start@@Base+0x8314>
   422d4:	ldr	r3, [sp, #16]
   422d8:	mov	r1, r4
   422dc:	mov	r2, #1
   422e0:	mov	sl, r0
   422e4:	mov	r0, r3
   422e8:	bl	1b6c4 <_start@@Base+0x8314>
   422ec:	sub	r1, r0, sl
   422f0:	mov	r0, r5
   422f4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   422f8:	ldrh	r3, [sp, #12]
   422fc:	ldr	r2, [pc, #1536]	; 42904 <luaL_typerror@@Base+0xc598>
   42300:	strh	r3, [r5, #120]	; 0x78
   42304:	strh	r2, [r5, #124]	; 0x7c
   42308:	strh	r0, [r5, #122]	; 0x7a
   4230c:	mov	r0, r5
   42310:	bl	27498 <luaL_where@@Base+0x7394>
   42314:	mov	r1, sl
   42318:	mov	r4, r0
   4231c:	mov	r0, r5
   42320:	bl	26ccc <luaL_where@@Base+0x6bc8>
   42324:	ldr	r3, [pc, #1500]	; 42908 <luaL_typerror@@Base+0xc59c>
   42328:	strh	r4, [r5, #120]	; 0x78
   4232c:	strh	r3, [r5, #124]	; 0x7c
   42330:	strh	r0, [r5, #122]	; 0x7a
   42334:	mov	r0, r5
   42338:	bl	27498 <luaL_where@@Base+0x7394>
   4233c:	ldr	r2, [r5, #96]	; 0x60
   42340:	ldr	r3, [pc, #1476]	; 4290c <luaL_typerror@@Base+0xc5a0>
   42344:	str	r9, [r2, #4]
   42348:	strh	r8, [r5, #120]	; 0x78
   4234c:	strh	r3, [r5, #124]	; 0x7c
   42350:	mov	sl, r0
   42354:	strh	sl, [r5, #122]	; 0x7a
   42358:	mov	r0, r5
   4235c:	bl	27498 <luaL_where@@Base+0x7394>
   42360:	ldr	r8, [r5, #96]	; 0x60
   42364:	mov	r9, r0
   42368:	ldr	r3, [r8, #4]
   4236c:	cmp	r3, #0
   42370:	bne	428f0 <luaL_typerror@@Base+0xc584>
   42374:	mov	r1, #8
   42378:	mov	r0, r5
   4237c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   42380:	ldr	r3, [pc, #1416]	; 42910 <luaL_typerror@@Base+0xc5a4>
   42384:	strh	r9, [r5, #120]	; 0x78
   42388:	strh	r3, [r5, #124]	; 0x7c
   4238c:	strh	r0, [r5, #122]	; 0x7a
   42390:	mov	r0, r5
   42394:	bl	27498 <luaL_where@@Base+0x7394>
   42398:	ldr	r3, [pc, #1396]	; 42914 <luaL_typerror@@Base+0xc5a8>
   4239c:	cmp	sl, r3
   423a0:	mov	r4, r0
   423a4:	beq	425f8 <luaL_typerror@@Base+0xc28c>
   423a8:	mov	r1, #0
   423ac:	mov	r0, r5
   423b0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   423b4:	lsr	r6, r6, #16
   423b8:	and	r6, r6, #15
   423bc:	cmp	r6, #3
   423c0:	movcc	r6, #3
   423c4:	mov	r3, #1
   423c8:	mov	r2, sl
   423cc:	lsl	r6, r3, r6
   423d0:	mov	r1, r4
   423d4:	str	r6, [sp]
   423d8:	mov	r3, r0
   423dc:	mov	r0, r5
   423e0:	bl	286a8 <luaL_where@@Base+0x85a4>
   423e4:	ldr	r8, [r5, #96]	; 0x60
   423e8:	str	r9, [r8]
   423ec:	mov	r1, r7
   423f0:	mov	r0, fp
   423f4:	mov	r2, #2
   423f8:	bl	1f3c4 <lua_atpanic@@Base+0x1f4>
   423fc:	subs	r3, r0, #0
   42400:	beq	42414 <luaL_typerror@@Base+0xc0a8>
   42404:	mov	r1, r9
   42408:	mov	r0, r5
   4240c:	mov	r2, #0
   42410:	bl	2ba64 <luaL_where@@Base+0xb960>
   42414:	add	sp, sp, #52	; 0x34
   42418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4241c:	ldr	r2, [sp, #36]	; 0x24
   42420:	sub	r3, r2, #4
   42424:	bics	r3, r3, #4
   42428:	bne	42270 <luaL_typerror@@Base+0xbf04>
   4242c:	ldr	r3, [r5, #96]	; 0x60
   42430:	ldr	r3, [r3, #4]
   42434:	cmp	r3, #0
   42438:	bne	42474 <luaL_typerror@@Base+0xc108>
   4243c:	cmp	r2, #4
   42440:	beq	425e8 <luaL_typerror@@Base+0xc27c>
   42444:	mov	r3, #1
   42448:	strb	r3, [r5, #268]	; 0x10c
   4244c:	mov	r2, #0
   42450:	mov	r3, #0
   42454:	mov	r1, #29
   42458:	mov	r0, r5
   4245c:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   42460:	b	42494 <luaL_typerror@@Base+0xc128>
   42464:	ldr	r3, [r5, #96]	; 0x60
   42468:	ldr	r3, [r3, #4]
   4246c:	cmp	r3, #0
   42470:	beq	4260c <luaL_typerror@@Base+0xc2a0>
   42474:	ldr	r2, [sp, #12]
   42478:	mov	r1, r4
   4247c:	mov	r0, r5
   42480:	ldr	r2, [r2]
   42484:	add	r2, r2, #8
   42488:	str	r2, [sp]
   4248c:	mov	r2, #0
   42490:	bl	41160 <luaL_typerror@@Base+0xadf4>
   42494:	ldr	r3, [pc, #1148]	; 42918 <luaL_typerror@@Base+0xc5ac>
   42498:	strh	r0, [r5, #122]	; 0x7a
   4249c:	strh	r8, [r5, #120]	; 0x78
   424a0:	strh	r3, [r5, #124]	; 0x7c
   424a4:	mov	r0, r5
   424a8:	ldr	r4, [r5, #96]	; 0x60
   424ac:	bl	27498 <luaL_where@@Base+0x7394>
   424b0:	str	r0, [r4]
   424b4:	add	sp, sp, #52	; 0x34
   424b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   424bc:	lsr	r3, r6, #16
   424c0:	and	r3, r3, #15
   424c4:	cmp	r3, #3
   424c8:	uxth	r8, r8
   424cc:	bhi	4250c <luaL_typerror@@Base+0xc1a0>
   424d0:	ldr	r2, [pc, #1076]	; 4290c <luaL_typerror@@Base+0xc5a0>
   424d4:	mvn	r3, #32768	; 0x8000
   424d8:	strh	r3, [r5, #122]	; 0x7a
   424dc:	strh	r8, [r5, #120]	; 0x78
   424e0:	strh	r2, [r5, #124]	; 0x7c
   424e4:	mov	r0, r5
   424e8:	bl	27498 <luaL_where@@Base+0x7394>
   424ec:	ldr	r3, [sp, #36]	; 0x24
   424f0:	cmp	r3, #128	; 0x80
   424f4:	str	r3, [sp, #16]
   424f8:	mov	r9, r0
   424fc:	bls	42550 <luaL_typerror@@Base+0xc1e4>
   42500:	ldr	r8, [r5, #96]	; 0x60
   42504:	ldr	sl, [pc, #1032]	; 42914 <luaL_typerror@@Base+0xc5a8>
   42508:	b	42368 <luaL_typerror@@Base+0xbffc>
   4250c:	ldr	r1, [sp, #36]	; 0x24
   42510:	mov	r0, r5
   42514:	bl	26ccc <luaL_where@@Base+0x6bc8>
   42518:	ldr	r3, [pc, #1004]	; 4290c <luaL_typerror@@Base+0xc5a0>
   4251c:	strh	r8, [r5, #120]	; 0x78
   42520:	strh	r3, [r5, #124]	; 0x7c
   42524:	strh	r0, [r5, #122]	; 0x7a
   42528:	mov	sl, r0
   4252c:	mov	r0, r5
   42530:	bl	27498 <luaL_where@@Base+0x7394>
   42534:	ldr	r3, [sp, #36]	; 0x24
   42538:	cmp	r3, #128	; 0x80
   4253c:	str	r3, [sp, #16]
   42540:	mov	r9, r0
   42544:	bls	42554 <luaL_typerror@@Base+0xc1e8>
   42548:	ldr	r8, [r5, #96]	; 0x60
   4254c:	b	42368 <luaL_typerror@@Base+0xbffc>
   42550:	ldr	sl, [pc, #956]	; 42914 <luaL_typerror@@Base+0xc5a8>
   42554:	ldr	r8, [r5, #96]	; 0x60
   42558:	ldr	r3, [r8, #4]
   4255c:	cmp	r3, #0
   42560:	beq	42570 <luaL_typerror@@Base+0xc204>
   42564:	ldr	r3, [r8, #8]
   42568:	cmp	r3, #0
   4256c:	beq	42754 <luaL_typerror@@Base+0xc3e8>
   42570:	ldr	r3, [r4]
   42574:	lsr	r2, r3, #28
   42578:	cmp	r2, #3
   4257c:	beq	427b0 <luaL_typerror@@Base+0xc444>
   42580:	cmp	r2, #1
   42584:	beq	4265c <luaL_typerror@@Base+0xc2f0>
   42588:	mov	r1, #8
   4258c:	mov	r0, r5
   42590:	bl	26ccc <luaL_where@@Base+0x6bc8>
   42594:	ldr	r3, [pc, #884]	; 42910 <luaL_typerror@@Base+0xc5a4>
   42598:	strh	r9, [r5, #120]	; 0x78
   4259c:	strh	r3, [r5, #124]	; 0x7c
   425a0:	strh	r0, [r5, #122]	; 0x7a
   425a4:	mov	r0, r5
   425a8:	bl	27498 <luaL_where@@Base+0x7394>
   425ac:	ldr	r3, [r5, #96]	; 0x60
   425b0:	ldr	r3, [r3, #4]
   425b4:	cmp	r3, #0
   425b8:	mov	r6, r0
   425bc:	beq	42620 <luaL_typerror@@Base+0xc2b4>
   425c0:	ldr	r2, [sp, #12]
   425c4:	mov	r1, r4
   425c8:	ldr	r2, [r2]
   425cc:	add	r2, r2, #8
   425d0:	str	r2, [sp]
   425d4:	mov	r2, r0
   425d8:	mov	r0, r5
   425dc:	bl	41160 <luaL_typerror@@Base+0xadf4>
   425e0:	ldr	r8, [r5, #96]	; 0x60
   425e4:	b	423e8 <luaL_typerror@@Base+0xc07c>
   425e8:	mov	r1, r3
   425ec:	mov	r0, r5
   425f0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   425f4:	b	42494 <luaL_typerror@@Base+0xc128>
   425f8:	ldr	r1, [sp, #36]	; 0x24
   425fc:	mov	r0, r5
   42600:	bl	26ccc <luaL_where@@Base+0x6bc8>
   42604:	mov	sl, r0
   42608:	b	423a8 <luaL_typerror@@Base+0xc03c>
   4260c:	mov	r2, r3
   42610:	mov	r1, #25
   42614:	mov	r0, r5
   42618:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   4261c:	b	42494 <luaL_typerror@@Base+0xc128>
   42620:	mov	r1, r3
   42624:	mov	r2, #0
   42628:	mov	r3, #0
   4262c:	add	sl, sp, #48	; 0x30
   42630:	mov	r0, r5
   42634:	strd	r2, [sl, #-8]!
   42638:	bl	26ccc <luaL_where@@Base+0x6bc8>
   4263c:	str	sl, [sp]
   42640:	mov	r2, r6
   42644:	mov	r1, r4
   42648:	mov	r3, r0
   4264c:	mov	r0, r5
   42650:	bl	41160 <luaL_typerror@@Base+0xadf4>
   42654:	ldr	r8, [r5, #96]	; 0x60
   42658:	b	423e8 <luaL_typerror@@Base+0xc07c>
   4265c:	ldrh	r4, [r4, #8]
   42660:	cmp	r4, #0
   42664:	beq	423e8 <luaL_typerror@@Base+0xc07c>
   42668:	mov	sl, r2
   4266c:	str	r9, [sp, #16]
   42670:	str	r7, [sp, #20]
   42674:	b	42688 <luaL_typerror@@Base+0xc31c>
   42678:	cmp	r1, #11
   4267c:	bne	428f0 <luaL_typerror@@Base+0xc584>
   42680:	cmp	r4, #0
   42684:	beq	428cc <luaL_typerror@@Base+0xc560>
   42688:	ldr	r2, [fp]
   4268c:	lsl	r4, r4, #4
   42690:	add	r8, r2, r4
   42694:	ldr	r3, [r2, r4]
   42698:	ldrh	r4, [r8, #8]
   4269c:	lsr	r1, r3, #28
   426a0:	cmp	r1, #9
   426a4:	bne	42678 <luaL_typerror@@Base+0xc30c>
   426a8:	ldr	r0, [r8, #12]
   426ac:	mvn	r1, #13
   426b0:	cmp	r0, #0
   426b4:	mov	r0, #0
   426b8:	strd	r0, [sp, #40]	; 0x28
   426bc:	beq	42680 <luaL_typerror@@Base+0xc314>
   426c0:	uxth	r1, r3
   426c4:	ldr	r3, [r2, r1, lsl #4]
   426c8:	add	r6, r2, r1, lsl #4
   426cc:	lsr	r1, r3, #28
   426d0:	cmp	r1, #8
   426d4:	beq	426c0 <luaL_typerror@@Base+0xc354>
   426d8:	tst	r1, #13
   426dc:	beq	4278c <luaL_typerror@@Base+0xc420>
   426e0:	cmp	r1, #5
   426e4:	bne	428f0 <luaL_typerror@@Base+0xc584>
   426e8:	ldr	r3, [r5, #96]	; 0x60
   426ec:	ldr	r7, [r3, sl, lsl #2]
   426f0:	cmp	r7, #0
   426f4:	bne	42778 <luaL_typerror@@Base+0xc40c>
   426f8:	mov	r1, #0
   426fc:	mov	r0, r5
   42700:	bl	26ccc <luaL_where@@Base+0x6bc8>
   42704:	add	r9, sp, #40	; 0x28
   42708:	mov	r7, r0
   4270c:	ldr	r1, [r8, #4]
   42710:	mov	r0, r5
   42714:	add	r1, r1, #8
   42718:	bl	26ccc <luaL_where@@Base+0x6bc8>
   4271c:	ldr	r3, [pc, #492]	; 42910 <luaL_typerror@@Base+0xc5a4>
   42720:	strh	r3, [r5, #124]	; 0x7c
   42724:	ldrh	r3, [sp, #16]
   42728:	strh	r3, [r5, #120]	; 0x78
   4272c:	strh	r0, [r5, #122]	; 0x7a
   42730:	mov	r0, r5
   42734:	bl	27498 <luaL_where@@Base+0x7394>
   42738:	str	r9, [sp]
   4273c:	mov	r3, r7
   42740:	mov	r1, r6
   42744:	mov	r2, r0
   42748:	mov	r0, r5
   4274c:	bl	41160 <luaL_typerror@@Base+0xadf4>
   42750:	b	42680 <luaL_typerror@@Base+0xc314>
   42754:	ldr	r3, [sp, #12]
   42758:	mov	r1, r4
   4275c:	mov	r0, fp
   42760:	ldr	r2, [r3]
   42764:	add	r2, r2, #8
   42768:	bl	1bbd8 <_start@@Base+0x8828>
   4276c:	cmp	r0, #0
   42770:	beq	42588 <luaL_typerror@@Base+0xc21c>
   42774:	b	42570 <luaL_typerror@@Base+0xc204>
   42778:	ldr	r3, [sp, #12]
   4277c:	ldr	r2, [r3]
   42780:	add	r9, r2, sl, lsl #3
   42784:	add	sl, sl, #1
   42788:	b	4270c <luaL_typerror@@Base+0xc3a0>
   4278c:	ldr	r3, [r5, #96]	; 0x60
   42790:	ldr	r7, [r3, sl, lsl #2]
   42794:	cmp	r7, #0
   42798:	bne	42778 <luaL_typerror@@Base+0xc40c>
   4279c:	cmp	r1, #2
   427a0:	addeq	r9, sp, #40	; 0x28
   427a4:	ldreq	r7, [pc, #360]	; 42914 <luaL_typerror@@Base+0xc5a8>
   427a8:	beq	4270c <luaL_typerror@@Base+0xc3a0>
   427ac:	b	426f8 <luaL_typerror@@Base+0xc38c>
   427b0:	ldr	r1, [fp]
   427b4:	uxth	r2, r3
   427b8:	ldr	r3, [r1, r2, lsl #4]
   427bc:	add	r4, r1, r2, lsl #4
   427c0:	lsr	r2, r3, #28
   427c4:	cmp	r2, #8
   427c8:	beq	427b4 <luaL_typerror@@Base+0xc448>
   427cc:	mov	r0, #0
   427d0:	mov	r1, #0
   427d4:	bics	r2, r2, #2
   427d8:	ldr	r3, [r4, #4]
   427dc:	strd	r0, [sp, #40]	; 0x28
   427e0:	bne	42368 <luaL_typerror@@Base+0xbffc>
   427e4:	ldr	r1, [sp, #16]
   427e8:	cmp	r1, r3, lsl #4
   427ec:	bhi	42368 <luaL_typerror@@Base+0xbffc>
   427f0:	cmp	r1, #0
   427f4:	beq	423e8 <luaL_typerror@@Base+0xc07c>
   427f8:	mov	sl, r2
   427fc:	mov	r6, r2
   42800:	uxth	r2, r9
   42804:	str	r2, [sp, #16]
   42808:	add	r2, sp, #40	; 0x28
   4280c:	str	fp, [sp, #20]
   42810:	str	r9, [sp, #24]
   42814:	ldr	fp, [sp, #12]
   42818:	mov	r8, #1
   4281c:	str	r7, [sp, #12]
   42820:	mov	r9, r2
   42824:	mov	r7, r3
   42828:	b	42860 <luaL_typerror@@Base+0xc4f4>
   4282c:	ldr	r9, [fp]
   42830:	mov	sl, r3
   42834:	add	r9, r9, r8, lsl #3
   42838:	add	r8, r8, #1
   4283c:	mov	r3, sl
   42840:	str	r9, [sp]
   42844:	mov	r1, r4
   42848:	mov	r0, r5
   4284c:	bl	41160 <luaL_typerror@@Base+0xadf4>
   42850:	ldr	r3, [sp, #36]	; 0x24
   42854:	add	r6, r6, r7
   42858:	cmp	r6, r3
   4285c:	bcs	428dc <luaL_typerror@@Base+0xc570>
   42860:	add	r1, r6, #8
   42864:	mov	r0, r5
   42868:	bl	26ccc <luaL_where@@Base+0x6bc8>
   4286c:	ldr	r3, [pc, #156]	; 42910 <luaL_typerror@@Base+0xc5a4>
   42870:	strh	r3, [r5, #124]	; 0x7c
   42874:	ldrh	r3, [sp, #16]
   42878:	strh	r3, [r5, #120]	; 0x78
   4287c:	strh	r0, [r5, #122]	; 0x7a
   42880:	mov	r0, r5
   42884:	bl	27498 <luaL_where@@Base+0x7394>
   42888:	ldr	r3, [r5, #96]	; 0x60
   4288c:	ldr	r3, [r3, r8, lsl #2]
   42890:	cmp	r3, #0
   42894:	mov	r2, r0
   42898:	bne	4282c <luaL_typerror@@Base+0xc4c0>
   4289c:	cmp	r8, #2
   428a0:	beq	4283c <luaL_typerror@@Base+0xc4d0>
   428a4:	ldr	r3, [r4]
   428a8:	lsrs	r1, r3, #28
   428ac:	ldrne	sl, [pc, #96]	; 42914 <luaL_typerror@@Base+0xc5a8>
   428b0:	bne	4283c <luaL_typerror@@Base+0xc4d0>
   428b4:	str	r0, [sp, #28]
   428b8:	mov	r0, r5
   428bc:	bl	26ccc <luaL_where@@Base+0x6bc8>
   428c0:	ldr	r2, [sp, #28]
   428c4:	mov	sl, r0
   428c8:	b	4283c <luaL_typerror@@Base+0xc4d0>
   428cc:	ldr	r9, [sp, #16]
   428d0:	ldr	r7, [sp, #20]
   428d4:	ldr	r8, [r5, #96]	; 0x60
   428d8:	b	423e8 <luaL_typerror@@Base+0xc07c>
   428dc:	ldr	fp, [sp, #20]
   428e0:	ldr	r9, [sp, #24]
   428e4:	ldr	r7, [sp, #12]
   428e8:	ldr	r8, [r5, #96]	; 0x60
   428ec:	b	423e8 <luaL_typerror@@Base+0xc07c>
   428f0:	add	r1, r5, #2336	; 0x920
   428f4:	add	r1, r1, #12
   428f8:	ldr	r0, [r5, #80]	; 0x50
   428fc:	mov	r2, #22
   42900:	bl	210d0 <luaL_where@@Base+0xfcc>
   42904:	muleq	r0, r3, r8
   42908:	muleq	r0, r3, r6
   4290c:	andeq	r5, r0, sl, lsl #5
   42910:	andeq	r2, r0, r5, lsl #18
   42914:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   42918:	andeq	r5, r0, sl, lsl #7
   4291c:	ldr	r3, [r0, #96]	; 0x60
   42920:	push	{r4, r5, r6, lr}
   42924:	mov	r5, r1
   42928:	ldr	r2, [r1]
   4292c:	ldr	r1, [r3]
   42930:	mov	r4, r0
   42934:	bl	2aeec <luaL_where@@Base+0xade8>
   42938:	mov	r1, r5
   4293c:	mov	r2, r0
   42940:	mov	r0, r4
   42944:	pop	{r4, r5, r6, lr}
   42948:	b	421f0 <luaL_typerror@@Base+0xbe84>
   4294c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42950:	mov	r4, r0
   42954:	ldr	r6, [r0, #96]	; 0x60
   42958:	sub	sp, sp, #12
   4295c:	mov	r8, r1
   42960:	ldr	sl, [r6]
   42964:	ldr	fp, [r0, #-156]	; 0xffffff64
   42968:	cmp	sl, #0
   4296c:	beq	429c8 <luaL_typerror@@Base+0xc65c>
   42970:	ldr	r9, [r1]
   42974:	mov	r7, #0
   42978:	mov	r5, r9
   4297c:	b	42990 <luaL_typerror@@Base+0xc624>
   42980:	ldr	r2, [r6, #4]!
   42984:	add	r5, r5, #8
   42988:	cmp	r2, #0
   4298c:	beq	429c0 <luaL_typerror@@Base+0xc654>
   42990:	ldr	r3, [r5, #4]
   42994:	cmn	r3, #11
   42998:	bne	42980 <luaL_typerror@@Base+0xc614>
   4299c:	mov	r1, r5
   429a0:	mov	r0, fp
   429a4:	bl	1c930 <_start@@Base+0x9580>
   429a8:	ldr	r2, [r6, #4]!
   429ac:	add	r5, r5, #8
   429b0:	cmp	r7, r0
   429b4:	movcc	r7, r0
   429b8:	cmp	r2, #0
   429bc:	bne	42990 <luaL_typerror@@Base+0xc624>
   429c0:	cmp	r7, #0
   429c4:	bne	42a3c <luaL_typerror@@Base+0xc6d0>
   429c8:	mov	r1, sl
   429cc:	mov	r0, r4
   429d0:	bl	2a5b4 <luaL_where@@Base+0xa4b0>
   429d4:	ldr	r3, [r4, #96]	; 0x60
   429d8:	ldr	r6, [r8, #8]
   429dc:	ldr	r1, [r3, #4]
   429e0:	lsl	r6, r6, #8
   429e4:	orr	r6, r6, #19
   429e8:	cmp	r1, #0
   429ec:	uxthne	r6, r6
   429f0:	movne	r5, #8
   429f4:	mov	r7, r0
   429f8:	beq	42a30 <luaL_typerror@@Base+0xc6c4>
   429fc:	mov	r0, r4
   42a00:	bl	2a5b4 <luaL_where@@Base+0xa4b0>
   42a04:	strh	r7, [r4, #120]	; 0x78
   42a08:	strh	r6, [r4, #124]	; 0x7c
   42a0c:	strh	r0, [r4, #122]	; 0x7a
   42a10:	mov	r0, r4
   42a14:	bl	27498 <luaL_where@@Base+0x7394>
   42a18:	ldr	r3, [r4, #96]	; 0x60
   42a1c:	ldr	r1, [r3, r5]
   42a20:	add	r5, r5, #4
   42a24:	cmp	r1, #0
   42a28:	mov	r7, r0
   42a2c:	bne	429fc <luaL_typerror@@Base+0xc690>
   42a30:	str	r7, [r3]
   42a34:	add	sp, sp, #12
   42a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42a3c:	ldr	r6, [fp]
   42a40:	ldr	ip, [r8, #8]
   42a44:	add	r6, r6, r7, lsl #4
   42a48:	mov	r3, sl
   42a4c:	str	r9, [sp]
   42a50:	mov	r1, r6
   42a54:	add	sl, r7, #10
   42a58:	mov	r0, r4
   42a5c:	orr	sl, sl, ip, lsl #8
   42a60:	bl	41160 <luaL_typerror@@Base+0xadf4>
   42a64:	ldr	r3, [r4, #96]	; 0x60
   42a68:	ldr	r3, [r3, #4]
   42a6c:	cmp	r3, #0
   42a70:	mov	r9, r0
   42a74:	beq	42ac8 <luaL_typerror@@Base+0xc75c>
   42a78:	uxth	sl, sl
   42a7c:	mov	r5, #1
   42a80:	ldr	r2, [r8]
   42a84:	mov	r1, r6
   42a88:	add	r2, r2, r5, lsl #3
   42a8c:	str	r2, [sp]
   42a90:	mov	r0, r4
   42a94:	mov	r2, #0
   42a98:	bl	41160 <luaL_typerror@@Base+0xadf4>
   42a9c:	strh	r9, [r4, #120]	; 0x78
   42aa0:	strh	sl, [r4, #124]	; 0x7c
   42aa4:	add	r5, r5, #1
   42aa8:	strh	r0, [r4, #122]	; 0x7a
   42aac:	mov	r0, r4
   42ab0:	bl	27498 <luaL_where@@Base+0x7394>
   42ab4:	ldr	r3, [r4, #96]	; 0x60
   42ab8:	ldr	r3, [r3, r5, lsl #2]
   42abc:	cmp	r3, #0
   42ac0:	mov	r9, r0
   42ac4:	bne	42a80 <luaL_typerror@@Base+0xc714>
   42ac8:	mov	r1, r7
   42acc:	mov	r0, r4
   42ad0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   42ad4:	ldr	r3, [pc, #32]	; 42afc <luaL_typerror@@Base+0xc790>
   42ad8:	strh	r9, [r4, #122]	; 0x7a
   42adc:	strh	r3, [r4, #124]	; 0x7c
   42ae0:	ldr	r5, [r4, #96]	; 0x60
   42ae4:	strh	r0, [r4, #120]	; 0x78
   42ae8:	mov	r0, r4
   42aec:	bl	27498 <luaL_where@@Base+0x7394>
   42af0:	str	r0, [r5]
   42af4:	add	sp, sp, #12
   42af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42afc:	andeq	r5, r0, sl, lsl #7
   42b00:	ldr	r3, [r0, #96]	; 0x60
   42b04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   42b08:	mov	r4, r0
   42b0c:	ldr	r5, [r3]
   42b10:	sub	sp, sp, #8
   42b14:	cmp	r5, #0
   42b18:	mov	r7, r1
   42b1c:	ldr	r9, [r0, #-156]	; 0xffffff64
   42b20:	ldr	r6, [r1]
   42b24:	beq	42b38 <luaL_typerror@@Base+0xc7cc>
   42b28:	ldr	r3, [r3, #4]
   42b2c:	and	r2, r3, #520093696	; 0x1f000000
   42b30:	cmp	r2, #167772160	; 0xa000000
   42b34:	beq	42cc0 <luaL_typerror@@Base+0xc954>
   42b38:	mov	r8, #0
   42b3c:	ldr	r3, [r6, #4]
   42b40:	cmn	r3, #11
   42b44:	beq	42bb0 <luaL_typerror@@Base+0xc844>
   42b48:	mov	r1, r5
   42b4c:	mov	r0, r4
   42b50:	bl	2a5b4 <luaL_where@@Base+0xa4b0>
   42b54:	ldr	r3, [r4, #96]	; 0x60
   42b58:	ldr	r1, [r3, #4]
   42b5c:	mov	r6, r0
   42b60:	mov	r0, r4
   42b64:	bl	2a5b4 <luaL_where@@Base+0xa4b0>
   42b68:	ldr	r3, [r7, #8]
   42b6c:	cmp	r3, #38	; 0x26
   42b70:	bls	42c7c <luaL_typerror@@Base+0xc910>
   42b74:	cmp	r3, #39	; 0x27
   42b78:	uxth	r7, r0
   42b7c:	beq	42d04 <luaL_typerror@@Base+0xc998>
   42b80:	lsl	r5, r3, #8
   42b84:	orr	r5, r5, #19
   42b88:	uxth	r5, r5
   42b8c:	strh	r5, [r4, #124]	; 0x7c
   42b90:	strh	r6, [r4, #120]	; 0x78
   42b94:	strh	r7, [r4, #122]	; 0x7a
   42b98:	mov	r0, r4
   42b9c:	ldr	r4, [r4, #96]	; 0x60
   42ba0:	bl	27498 <luaL_where@@Base+0x7394>
   42ba4:	str	r0, [r4]
   42ba8:	add	sp, sp, #8
   42bac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   42bb0:	mov	r1, r6
   42bb4:	mov	r0, r9
   42bb8:	bl	1c930 <_start@@Base+0x9580>
   42bbc:	subs	sl, r0, #0
   42bc0:	beq	42b48 <luaL_typerror@@Base+0xc7dc>
   42bc4:	ldr	r1, [r9]
   42bc8:	mov	r3, r5
   42bcc:	str	r6, [sp]
   42bd0:	add	r1, r1, sl, lsl #4
   42bd4:	mov	r2, #0
   42bd8:	mov	r0, r4
   42bdc:	bl	41160 <luaL_typerror@@Base+0xadf4>
   42be0:	cmp	r8, #0
   42be4:	ldr	r5, [r7, #8]
   42be8:	mov	r6, r0
   42bec:	beq	42d88 <luaL_typerror@@Base+0xca1c>
   42bf0:	cmp	r5, #38	; 0x26
   42bf4:	uxth	r7, r8
   42bf8:	bls	42d28 <luaL_typerror@@Base+0xc9bc>
   42bfc:	cmp	r5, #39	; 0x27
   42c00:	lslne	r5, r5, #8
   42c04:	uxthne	r5, r5
   42c08:	bne	42c2c <luaL_typerror@@Base+0xc8c0>
   42c0c:	ldr	r3, [pc, #396]	; 42da0 <luaL_typerror@@Base+0xca34>
   42c10:	strh	r7, [r4, #120]	; 0x78
   42c14:	strh	r7, [r4, #122]	; 0x7a
   42c18:	strh	r3, [r4, #124]	; 0x7c
   42c1c:	mov	r0, r4
   42c20:	bl	27498 <luaL_where@@Base+0x7394>
   42c24:	mov	r5, #10240	; 0x2800
   42c28:	uxth	r7, r0
   42c2c:	add	r3, sl, #10
   42c30:	orr	r5, r5, r3
   42c34:	strh	r5, [r4, #124]	; 0x7c
   42c38:	strh	r6, [r4, #120]	; 0x78
   42c3c:	strh	r7, [r4, #122]	; 0x7a
   42c40:	mov	r0, r4
   42c44:	bl	27498 <luaL_where@@Base+0x7394>
   42c48:	mov	r1, sl
   42c4c:	mov	r5, r0
   42c50:	mov	r0, r4
   42c54:	bl	26ccc <luaL_where@@Base+0x6bc8>
   42c58:	ldr	r3, [pc, #324]	; 42da4 <luaL_typerror@@Base+0xca38>
   42c5c:	strh	r5, [r4, #122]	; 0x7a
   42c60:	strh	r3, [r4, #124]	; 0x7c
   42c64:	ldr	r5, [r4, #96]	; 0x60
   42c68:	strh	r0, [r4, #120]	; 0x78
   42c6c:	mov	r0, r4
   42c70:	bl	27498 <luaL_where@@Base+0x7394>
   42c74:	str	r0, [r5]
   42c78:	b	42ba8 <luaL_typerror@@Base+0xc83c>
   42c7c:	lsl	r5, r3, #8
   42c80:	orr	r5, r5, #19
   42c84:	tst	r0, #32768	; 0x8000
   42c88:	uxth	r5, r5
   42c8c:	uxth	r7, r0
   42c90:	beq	42b8c <luaL_typerror@@Base+0xc820>
   42c94:	mov	r1, #31
   42c98:	mov	r0, r4
   42c9c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   42ca0:	ldr	r3, [pc, #256]	; 42da8 <luaL_typerror@@Base+0xca3c>
   42ca4:	strh	r7, [r4, #120]	; 0x78
   42ca8:	strh	r3, [r4, #124]	; 0x7c
   42cac:	strh	r0, [r4, #122]	; 0x7a
   42cb0:	mov	r0, r4
   42cb4:	bl	27498 <luaL_where@@Base+0x7394>
   42cb8:	uxth	r7, r0
   42cbc:	b	42b8c <luaL_typerror@@Base+0xc820>
   42cc0:	ldr	r1, [r9]
   42cc4:	add	r6, r6, #8
   42cc8:	mov	r2, #0
   42ccc:	str	r6, [sp]
   42cd0:	add	r1, r1, #176	; 0xb0
   42cd4:	bl	41160 <luaL_typerror@@Base+0xadf4>
   42cd8:	lsr	r3, r0, #24
   42cdc:	and	r3, r3, #31
   42ce0:	sub	r2, r3, #15
   42ce4:	cmp	r2, #4
   42ce8:	mov	r8, r0
   42cec:	bhi	42d64 <luaL_typerror@@Base+0xc9f8>
   42cf0:	ldr	r3, [r4, #96]	; 0x60
   42cf4:	ldr	r6, [r7]
   42cf8:	ldr	r5, [r3]
   42cfc:	str	r8, [r3, #4]
   42d00:	b	42b3c <luaL_typerror@@Base+0xc7d0>
   42d04:	ldr	r3, [pc, #148]	; 42da0 <luaL_typerror@@Base+0xca34>
   42d08:	strh	r7, [r4, #120]	; 0x78
   42d0c:	strh	r7, [r4, #122]	; 0x7a
   42d10:	strh	r3, [r4, #124]	; 0x7c
   42d14:	mov	r0, r4
   42d18:	bl	27498 <luaL_where@@Base+0x7394>
   42d1c:	ldr	r5, [pc, #136]	; 42dac <luaL_typerror@@Base+0xca40>
   42d20:	uxth	r7, r0
   42d24:	b	42b8c <luaL_typerror@@Base+0xc820>
   42d28:	lsl	r5, r5, #8
   42d2c:	tst	r8, #32768	; 0x8000
   42d30:	uxth	r5, r5
   42d34:	beq	42c2c <luaL_typerror@@Base+0xc8c0>
   42d38:	mov	r1, #63	; 0x3f
   42d3c:	mov	r0, r4
   42d40:	bl	26ccc <luaL_where@@Base+0x6bc8>
   42d44:	ldr	r3, [pc, #92]	; 42da8 <luaL_typerror@@Base+0xca3c>
   42d48:	strh	r7, [r4, #120]	; 0x78
   42d4c:	strh	r3, [r4, #124]	; 0x7c
   42d50:	strh	r0, [r4, #122]	; 0x7a
   42d54:	mov	r0, r4
   42d58:	bl	27498 <luaL_where@@Base+0x7394>
   42d5c:	uxth	r7, r0
   42d60:	b	42c2c <luaL_typerror@@Base+0xc8c0>
   42d64:	ldr	r2, [pc, #68]	; 42db0 <luaL_typerror@@Base+0xca44>
   42d68:	orr	r3, r3, #608	; 0x260
   42d6c:	strh	r0, [r4, #120]	; 0x78
   42d70:	strh	r3, [r4, #122]	; 0x7a
   42d74:	strh	r2, [r4, #124]	; 0x7c
   42d78:	mov	r0, r4
   42d7c:	bl	27498 <luaL_where@@Base+0x7394>
   42d80:	mov	r8, r0
   42d84:	b	42cf0 <luaL_typerror@@Base+0xc984>
   42d88:	ldr	r3, [r4, #96]	; 0x60
   42d8c:	mov	r0, r4
   42d90:	ldr	r1, [r3, #4]
   42d94:	bl	2a5b4 <luaL_where@@Base+0xa4b0>
   42d98:	mov	r8, r0
   42d9c:	b	42bf0 <luaL_typerror@@Base+0xc884>
   42da0:	andeq	r2, r0, r3, lsl pc
   42da4:	andeq	r5, r0, sl, lsl #7
   42da8:	andeq	r2, r0, r3, lsl r1
   42dac:	andeq	r2, r0, r3, lsl r8
   42db0:	andeq	r5, r0, r3, lsl sl
   42db4:	push	{r4, r5, r6, r7, r8, r9, lr}
   42db8:	mov	r5, r1
   42dbc:	ldr	r6, [r1]
   42dc0:	ldr	r3, [r0, #96]	; 0x60
   42dc4:	sub	sp, sp, #12
   42dc8:	ldr	r2, [r6, #4]
   42dcc:	mov	r4, r0
   42dd0:	cmn	r2, #11
   42dd4:	ldr	r7, [r3]
   42dd8:	beq	42e20 <luaL_typerror@@Base+0xcab4>
   42ddc:	ldr	r5, [r5, #8]
   42de0:	mov	r1, r7
   42de4:	mov	r0, r4
   42de8:	lsl	r5, r5, #8
   42dec:	orr	r5, r5, #19
   42df0:	bl	2a5b4 <luaL_where@@Base+0xa4b0>
   42df4:	uxth	r5, r5
   42df8:	mov	r3, #0
   42dfc:	strh	r5, [r4, #124]	; 0x7c
   42e00:	strh	r3, [r4, #122]	; 0x7a
   42e04:	strh	r0, [r4, #120]	; 0x78
   42e08:	mov	r0, r4
   42e0c:	ldr	r5, [r4, #96]	; 0x60
   42e10:	bl	27498 <luaL_where@@Base+0x7394>
   42e14:	str	r0, [r5]
   42e18:	add	sp, sp, #12
   42e1c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   42e20:	ldr	r8, [r0, #-156]	; 0xffffff64
   42e24:	mov	r1, r6
   42e28:	mov	r0, r8
   42e2c:	bl	1c930 <_start@@Base+0x9580>
   42e30:	subs	r9, r0, #0
   42e34:	beq	42ddc <luaL_typerror@@Base+0xca70>
   42e38:	ldr	r1, [r8]
   42e3c:	mov	r3, r7
   42e40:	add	r1, r1, r9, lsl #4
   42e44:	mov	r2, #0
   42e48:	str	r6, [sp]
   42e4c:	mov	r0, r4
   42e50:	bl	41160 <luaL_typerror@@Base+0xadf4>
   42e54:	ldr	r1, [r5, #8]
   42e58:	add	r3, r9, #10
   42e5c:	mov	r2, #0
   42e60:	orr	r3, r3, r1, lsl #8
   42e64:	strh	r3, [r4, #124]	; 0x7c
   42e68:	strh	r2, [r4, #122]	; 0x7a
   42e6c:	strh	r0, [r4, #120]	; 0x78
   42e70:	mov	r0, r4
   42e74:	bl	27498 <luaL_where@@Base+0x7394>
   42e78:	mov	r1, r9
   42e7c:	mov	r5, r0
   42e80:	mov	r0, r4
   42e84:	bl	26ccc <luaL_where@@Base+0x6bc8>
   42e88:	ldr	r3, [pc, #8]	; 42e98 <luaL_typerror@@Base+0xcb2c>
   42e8c:	strh	r5, [r4, #122]	; 0x7a
   42e90:	strh	r3, [r4, #124]	; 0x7c
   42e94:	b	42e04 <luaL_typerror@@Base+0xca98>
   42e98:	andeq	r5, r0, sl, lsl #7
   42e9c:	push	{r4, r5, lr}
   42ea0:	sub	sp, sp, #12
   42ea4:	ldr	r5, [r0, #96]	; 0x60
   42ea8:	ldr	r3, [r5]
   42eac:	and	r2, r3, #520093696	; 0x1f000000
   42eb0:	cmp	r2, #167772160	; 0xa000000
   42eb4:	beq	42ecc <luaL_typerror@@Base+0xcb60>
   42eb8:	mov	r1, r3
   42ebc:	bl	2a5b4 <luaL_where@@Base+0xa4b0>
   42ec0:	str	r0, [r5]
   42ec4:	add	sp, sp, #12
   42ec8:	pop	{r4, r5, pc}
   42ecc:	ldr	ip, [r0, #-156]	; 0xffffff64
   42ed0:	ldr	r2, [r1]
   42ed4:	mov	r4, r0
   42ed8:	ldr	r1, [ip]
   42edc:	str	r2, [sp]
   42ee0:	add	r1, r1, #176	; 0xb0
   42ee4:	mov	r2, #0
   42ee8:	bl	41160 <luaL_typerror@@Base+0xadf4>
   42eec:	lsr	r3, r0, #24
   42ef0:	and	r3, r3, #31
   42ef4:	sub	r2, r3, #15
   42ef8:	cmp	r2, #4
   42efc:	bhi	42f10 <luaL_typerror@@Base+0xcba4>
   42f00:	ldr	r3, [r4, #96]	; 0x60
   42f04:	str	r0, [r3]
   42f08:	add	sp, sp, #12
   42f0c:	pop	{r4, r5, pc}
   42f10:	ldr	r2, [pc, #32]	; 42f38 <luaL_typerror@@Base+0xcbcc>
   42f14:	orr	r3, r3, #608	; 0x260
   42f18:	strh	r3, [r4, #122]	; 0x7a
   42f1c:	strh	r0, [r4, #120]	; 0x78
   42f20:	strh	r2, [r4, #124]	; 0x7c
   42f24:	mov	r0, r4
   42f28:	bl	27498 <luaL_where@@Base+0x7394>
   42f2c:	ldr	r3, [r4, #96]	; 0x60
   42f30:	str	r0, [r3]
   42f34:	b	42f08 <luaL_typerror@@Base+0xcb9c>
   42f38:	andeq	r5, r0, r3, lsl sl
   42f3c:	ldr	r3, [r0, #96]	; 0x60
   42f40:	push	{r4, r5, r6, lr}
   42f44:	sub	sp, sp, #16
   42f48:	ldr	r4, [r3]
   42f4c:	cmp	r4, #0
   42f50:	beq	42f94 <luaL_typerror@@Base+0xcc28>
   42f54:	mov	r6, r1
   42f58:	ldr	r1, [r3, #4]
   42f5c:	mov	r5, r0
   42f60:	tst	r1, #520093696	; 0x1f000000
   42f64:	bne	42fa4 <luaL_typerror@@Base+0xcc38>
   42f68:	lsr	r3, r4, #24
   42f6c:	and	r3, r3, #31
   42f70:	sub	r3, r3, #14
   42f74:	cmp	r3, #5
   42f78:	and	r3, r4, #520093696	; 0x1f000000
   42f7c:	bhi	4301c <luaL_typerror@@Base+0xccb0>
   42f80:	cmp	r3, #67108864	; 0x4000000
   42f84:	beq	42fd8 <luaL_typerror@@Base+0xcc6c>
   42f88:	ldr	r3, [r5, #96]	; 0x60
   42f8c:	b	42f98 <luaL_typerror@@Base+0xcc2c>
   42f90:	ldr	r3, [r5, #96]	; 0x60
   42f94:	ldr	r4, [pc, #340]	; 430f0 <luaL_typerror@@Base+0xcd84>
   42f98:	str	r4, [r3]
   42f9c:	add	sp, sp, #16
   42fa0:	pop	{r4, r5, r6, pc}
   42fa4:	bl	281cc <luaL_where@@Base+0x80c8>
   42fa8:	tst	r0, #32768	; 0x8000
   42fac:	bne	42fc4 <luaL_typerror@@Base+0xcc58>
   42fb0:	ldr	r3, [r5, #16]
   42fb4:	uxth	r0, r0
   42fb8:	ldr	r3, [r3, r0, lsl #3]
   42fbc:	cmp	r3, #10
   42fc0:	beq	42f68 <luaL_typerror@@Base+0xcbfc>
   42fc4:	mov	r1, r6
   42fc8:	mov	r0, r5
   42fcc:	bl	2e7dc <luaL_where@@Base+0xe6d8>
   42fd0:	add	sp, sp, #16
   42fd4:	pop	{r4, r5, r6, pc}
   42fd8:	ldr	r3, [r6]
   42fdc:	mov	r2, #2
   42fe0:	add	r1, sp, #8
   42fe4:	ldr	r0, [r3]
   42fe8:	add	r0, r0, #16
   42fec:	bl	189f0 <_start@@Base+0x5640>
   42ff0:	cmp	r0, #0
   42ff4:	beq	42fc4 <luaL_typerror@@Base+0xcc58>
   42ff8:	ldr	r2, [pc, #244]	; 430f4 <luaL_typerror@@Base+0xcd88>
   42ffc:	mov	r3, #0
   43000:	strh	r4, [r5, #120]	; 0x78
   43004:	strh	r2, [r5, #124]	; 0x7c
   43008:	strh	r3, [r5, #122]	; 0x7a
   4300c:	mov	r0, r5
   43010:	bl	27498 <luaL_where@@Base+0x7394>
   43014:	mov	r4, r0
   43018:	b	42f88 <luaL_typerror@@Base+0xcc1c>
   4301c:	cmp	r3, #67108864	; 0x4000000
   43020:	beq	42fd8 <luaL_typerror@@Base+0xcc6c>
   43024:	cmp	r3, #167772160	; 0xa000000
   43028:	bne	42f90 <luaL_typerror@@Base+0xcc24>
   4302c:	ldr	r4, [r6]
   43030:	ldr	r2, [r5, #-156]	; 0xffffff64
   43034:	ldr	r6, [pc, #188]	; 430f8 <luaL_typerror@@Base+0xcd8c>
   43038:	ldr	r3, [r4]
   4303c:	ldr	r1, [r2]
   43040:	ldrh	r2, [r3, #6]
   43044:	add	r2, r1, r2, lsl #4
   43048:	b	43050 <luaL_typerror@@Base+0xcce4>
   4304c:	add	r2, r1, ip, lsl #4
   43050:	ldr	r3, [r2]
   43054:	and	lr, r3, r6
   43058:	lsr	r0, r3, #28
   4305c:	cmp	r0, #8
   43060:	uxth	ip, r3
   43064:	beq	4304c <luaL_typerror@@Base+0xcce0>
   43068:	cmp	lr, #545259520	; 0x20800000
   4306c:	beq	4304c <luaL_typerror@@Base+0xcce0>
   43070:	cmp	r0, #5
   43074:	moveq	r2, ip
   43078:	ldr	r6, [r5, #96]	; 0x60
   4307c:	ldreq	r3, [r1, r2, lsl #4]
   43080:	addeq	r2, r1, r2, lsl #4
   43084:	lsreq	r0, r3, #28
   43088:	cmp	r0, #0
   4308c:	and	r0, r3, #-201326592	; 0xf4000000
   43090:	beq	430c4 <luaL_typerror@@Base+0xcd58>
   43094:	cmp	r0, #872415232	; 0x34000000
   43098:	ldrne	r3, [pc, #80]	; 430f0 <luaL_typerror@@Base+0xcd84>
   4309c:	strne	r3, [r6]
   430a0:	bne	42f9c <luaL_typerror@@Base+0xcc30>
   430a4:	add	r1, r1, #224	; 0xe0
   430a8:	ldr	r3, [r6]
   430ac:	mov	r0, r5
   430b0:	str	r4, [sp]
   430b4:	mov	r2, #0
   430b8:	bl	41160 <luaL_typerror@@Base+0xadf4>
   430bc:	str	r0, [r6]
   430c0:	b	42f9c <luaL_typerror@@Base+0xcc30>
   430c4:	cmp	r0, #0
   430c8:	bne	430a4 <luaL_typerror@@Base+0xcd38>
   430cc:	ldr	r2, [r2, #4]
   430d0:	cmp	r2, #4
   430d4:	bhi	430a4 <luaL_typerror@@Base+0xcd38>
   430d8:	beq	430e4 <luaL_typerror@@Base+0xcd78>
   430dc:	add	r1, r1, #144	; 0x90
   430e0:	b	430a8 <luaL_typerror@@Base+0xcd3c>
   430e4:	tst	r3, #8388608	; 0x800000
   430e8:	bne	430a4 <luaL_typerror@@Base+0xcd38>
   430ec:	b	430dc <luaL_typerror@@Base+0xcd70>
   430f0:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   430f4:	andeq	r5, r0, lr, lsl #27
   430f8:			; <UNDEFINED> instruction: 0xf0800000
   430fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43100:	mov	r4, r0
   43104:	ldr	fp, [r0, #-156]	; 0xffffff64
   43108:	sub	sp, sp, #12
   4310c:	mov	r0, fp
   43110:	mov	r9, r1
   43114:	mov	r6, r3
   43118:	mov	sl, r2
   4311c:	bl	1e228 <_start@@Base+0xae78>
   43120:	ldr	r7, [r9]
   43124:	lsrs	r3, r7, #28
   43128:	mov	r5, r0
   4312c:	bne	43194 <luaL_typerror@@Base+0xce28>
   43130:	cmp	r0, #10
   43134:	beq	43394 <luaL_typerror@@Base+0xd028>
   43138:	uxth	r8, r0
   4313c:	orr	r2, r8, #17920	; 0x4600
   43140:	strh	r6, [r4, #120]	; 0x78
   43144:	strh	r3, [r4, #122]	; 0x7a
   43148:	strh	r2, [r4, #124]	; 0x7c
   4314c:	mov	r0, r4
   43150:	bl	27498 <luaL_where@@Base+0x7394>
   43154:	cmp	r5, #20
   43158:	cmpne	r5, #13
   4315c:	moveq	r1, #1
   43160:	movne	r1, #0
   43164:	mov	r6, r0
   43168:	beq	43348 <luaL_typerror@@Base+0xcfdc>
   4316c:	sub	r5, r5, #21
   43170:	cmp	r5, #1
   43174:	movls	r3, #1
   43178:	strbls	r3, [r4, #268]	; 0x10c
   4317c:	bls	432f8 <luaL_typerror@@Base+0xcf8c>
   43180:	tst	r7, #134217728	; 0x8000000
   43184:	bne	4336c <luaL_typerror@@Base+0xd000>
   43188:	mov	r0, r6
   4318c:	add	sp, sp, #12
   43190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43194:	cmp	r3, #5
   43198:	cmpne	r3, #2
   4319c:	beq	432d8 <luaL_typerror@@Base+0xcf6c>
   431a0:	and	r8, r7, #-67108864	; 0xfc000000
   431a4:	cmp	r3, #1
   431a8:	cmpne	r8, #805306368	; 0x30000000
   431ac:	moveq	r8, #1
   431b0:	movne	r8, #0
   431b4:	beq	43324 <luaL_typerror@@Base+0xcfb8>
   431b8:	and	r7, r7, #-201326592	; 0xf4000000
   431bc:	cmp	r7, #872415232	; 0x34000000
   431c0:	bne	43394 <luaL_typerror@@Base+0xd028>
   431c4:	mov	r1, sl
   431c8:	mov	r0, r4
   431cc:	ldr	r7, [r9, #4]
   431d0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   431d4:	ldr	r2, [pc, #460]	; 433a8 <luaL_typerror@@Base+0xd03c>
   431d8:	mvn	r3, #32768	; 0x8000
   431dc:	strh	r2, [r4, #124]	; 0x7c
   431e0:	strh	r3, [r4, #122]	; 0x7a
   431e4:	uxth	r5, r5
   431e8:	uxth	sl, r6
   431ec:	orr	r9, r5, #17920	; 0x4600
   431f0:	lsr	r7, r7, #1
   431f4:	ldr	fp, [pc, #432]	; 433ac <luaL_typerror@@Base+0xd040>
   431f8:	orr	r5, r5, #19712	; 0x4d00
   431fc:	strh	r0, [r4, #120]	; 0x78
   43200:	mov	r0, r4
   43204:	bl	27498 <luaL_where@@Base+0x7394>
   43208:	strh	sl, [r4, #120]	; 0x78
   4320c:	strh	r8, [r4, #122]	; 0x7a
   43210:	strh	r9, [r4, #124]	; 0x7c
   43214:	mov	r6, r0
   43218:	mov	r0, r4
   4321c:	bl	27498 <luaL_where@@Base+0x7394>
   43220:	mov	r1, r7
   43224:	str	r0, [sp, #4]
   43228:	mov	r0, r4
   4322c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43230:	strh	sl, [r4, #120]	; 0x78
   43234:	strh	fp, [r4, #124]	; 0x7c
   43238:	uxth	sl, r6
   4323c:	strh	r0, [r4, #122]	; 0x7a
   43240:	mov	r0, r4
   43244:	bl	27498 <luaL_where@@Base+0x7394>
   43248:	strh	r8, [r4, #122]	; 0x7a
   4324c:	strh	r9, [r4, #124]	; 0x7c
   43250:	strh	r0, [r4, #120]	; 0x78
   43254:	mov	r0, r4
   43258:	bl	27498 <luaL_where@@Base+0x7394>
   4325c:	mov	r1, #8
   43260:	mov	r8, r0
   43264:	mov	r0, r4
   43268:	bl	26ccc <luaL_where@@Base+0x6bc8>
   4326c:	strh	fp, [r4, #124]	; 0x7c
   43270:	strh	sl, [r4, #120]	; 0x78
   43274:	strh	r0, [r4, #122]	; 0x7a
   43278:	mov	r0, r4
   4327c:	bl	27498 <luaL_where@@Base+0x7394>
   43280:	ldr	r3, [sp, #4]
   43284:	strh	r5, [r4, #124]	; 0x7c
   43288:	strh	r3, [r4, #122]	; 0x7a
   4328c:	strh	r0, [r4, #120]	; 0x78
   43290:	mov	r0, r4
   43294:	bl	27498 <luaL_where@@Base+0x7394>
   43298:	add	r1, r7, #8
   4329c:	mov	r0, r4
   432a0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   432a4:	strh	sl, [r4, #120]	; 0x78
   432a8:	strh	fp, [r4, #124]	; 0x7c
   432ac:	strh	r0, [r4, #122]	; 0x7a
   432b0:	mov	r0, r4
   432b4:	bl	27498 <luaL_where@@Base+0x7394>
   432b8:	strh	r5, [r4, #124]	; 0x7c
   432bc:	strh	r8, [r4, #122]	; 0x7a
   432c0:	strh	r0, [r4, #120]	; 0x78
   432c4:	mov	r0, r4
   432c8:	bl	27498 <luaL_where@@Base+0x7394>
   432cc:	mov	r0, r6
   432d0:	add	sp, sp, #12
   432d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   432d8:	orr	r5, r0, #17920	; 0x4600
   432dc:	mov	r3, #0
   432e0:	strh	r6, [r4, #120]	; 0x78
   432e4:	strh	r5, [r4, #124]	; 0x7c
   432e8:	strh	r3, [r4, #122]	; 0x7a
   432ec:	mov	r0, r4
   432f0:	bl	27498 <luaL_where@@Base+0x7394>
   432f4:	mov	r6, r0
   432f8:	mov	r1, sl
   432fc:	mov	r0, r4
   43300:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43304:	ldr	r3, [pc, #164]	; 433b0 <luaL_typerror@@Base+0xd044>
   43308:	strh	r6, [r4, #122]	; 0x7a
   4330c:	strh	r3, [r4, #124]	; 0x7c
   43310:	strh	r0, [r4, #120]	; 0x78
   43314:	mov	r0, r4
   43318:	add	sp, sp, #12
   4331c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43320:	b	27498 <luaL_where@@Base+0x7394>
   43324:	ldr	r3, [r4, #80]	; 0x50
   43328:	add	r1, sl, #578813952	; 0x22800000
   4332c:	add	r1, r1, #131072	; 0x20000
   43330:	str	r3, [fp, #12]
   43334:	mov	r0, fp
   43338:	mov	r2, #4
   4333c:	bl	41060 <luaL_typerror@@Base+0xacf4>
   43340:	mov	sl, r0
   43344:	b	432f8 <luaL_typerror@@Base+0xcf8c>
   43348:	ldr	r3, [pc, #100]	; 433b4 <luaL_typerror@@Base+0xd048>
   4334c:	orr	r8, r8, #448	; 0x1c0
   43350:	strh	r0, [r4, #120]	; 0x78
   43354:	strh	r8, [r4, #122]	; 0x7a
   43358:	strh	r3, [r4, #124]	; 0x7c
   4335c:	mov	r0, r4
   43360:	add	sp, sp, #12
   43364:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43368:	b	27498 <luaL_where@@Base+0x7394>
   4336c:	mov	r0, r4
   43370:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43374:	ldr	r2, [pc, #60]	; 433b8 <luaL_typerror@@Base+0xd04c>
   43378:	mov	r3, #2
   4337c:	strh	r6, [r4, #120]	; 0x78
   43380:	strh	r2, [r4, #124]	; 0x7c
   43384:	str	r3, [r4, #264]	; 0x108
   43388:	ldr	r6, [pc, #44]	; 433bc <luaL_typerror@@Base+0xd050>
   4338c:	strh	r0, [r4, #122]	; 0x7a
   43390:	b	43188 <luaL_typerror@@Base+0xce1c>
   43394:	add	r1, r4, #2336	; 0x920
   43398:	add	r1, r1, #12
   4339c:	ldr	r0, [r4, #80]	; 0x50
   433a0:	mov	r2, #22
   433a4:	bl	210d0 <luaL_where@@Base+0xfcc>
   433a8:	andeq	r5, r0, sl, lsl #5
   433ac:	andeq	r2, r0, r5, lsl #18
   433b0:	andeq	r5, r0, sl, lsl #7
   433b4:	andeq	r5, r0, lr, lsl #20
   433b8:	muleq	r0, r3, r9
   433bc:	andeq	r7, r0, #1012	; 0x3f4
   433c0:	ldr	r2, [r0, #96]	; 0x60
   433c4:	ldr	r3, [r2]
   433c8:	and	r3, r3, #520093696	; 0x1f000000
   433cc:	cmp	r3, #201326592	; 0xc000000
   433d0:	bxne	lr
   433d4:	ldr	r3, [r2, #4]
   433d8:	and	r3, r3, #520093696	; 0x1f000000
   433dc:	cmp	r3, #67108864	; 0x4000000
   433e0:	bxne	lr
   433e4:	ldr	r3, [r1]
   433e8:	push	{r4, r5, r6, r7, r8, lr}
   433ec:	sub	sp, sp, #16
   433f0:	ldr	r5, [r3]
   433f4:	ldrb	r2, [r5, #6]
   433f8:	cmp	r2, #2
   433fc:	beq	43408 <luaL_typerror@@Base+0xd09c>
   43400:	add	sp, sp, #16
   43404:	pop	{r4, r5, r6, r7, r8, pc}
   43408:	ldr	r7, [r3, #8]
   4340c:	ldr	r8, [r0, #-156]	; 0xffffff64
   43410:	mov	r2, r7
   43414:	mov	r3, #6208	; 0x1840
   43418:	mov	r6, r1
   4341c:	mov	r4, r0
   43420:	add	r1, sp, #12
   43424:	mov	r0, r8
   43428:	bl	153c8 <_start@@Base+0x2018>
   4342c:	ldr	r2, [r5, #28]
   43430:	ldr	r1, [r7, #8]
   43434:	ldr	r3, [r2, #28]
   43438:	ldr	r5, [r2, #20]
   4343c:	and	r3, r3, r1
   43440:	add	r3, r3, r3, lsl #1
   43444:	add	r5, r5, r3, lsl #3
   43448:	b	43458 <luaL_typerror@@Base+0xd0ec>
   4344c:	ldr	r5, [r5, #16]
   43450:	cmp	r5, #0
   43454:	beq	43550 <luaL_typerror@@Base+0xd1e4>
   43458:	ldr	r3, [r5, #12]
   4345c:	cmn	r3, #5
   43460:	bne	4344c <luaL_typerror@@Base+0xd0e0>
   43464:	ldr	r3, [r5, #8]
   43468:	cmp	r7, r3
   4346c:	bne	4344c <luaL_typerror@@Base+0xd0e0>
   43470:	ldr	r3, [r6, #8]
   43474:	cmp	r0, #0
   43478:	str	r3, [r6, #4]
   4347c:	beq	43558 <luaL_typerror@@Base+0xd1ec>
   43480:	ldr	r3, [r5, #4]
   43484:	cmn	r3, #1
   43488:	beq	43558 <luaL_typerror@@Base+0xd1ec>
   4348c:	ldr	r3, [r4, #96]	; 0x60
   43490:	mov	r1, r7
   43494:	mov	r2, #4
   43498:	mov	r0, r4
   4349c:	ldrh	r7, [r3, #4]
   434a0:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   434a4:	ldr	r3, [pc, #344]	; 43604 <luaL_typerror@@Base+0xd298>
   434a8:	strh	r7, [r4, #120]	; 0x78
   434ac:	strh	r3, [r4, #124]	; 0x7c
   434b0:	strh	r0, [r4, #122]	; 0x7a
   434b4:	mov	r0, r4
   434b8:	bl	27498 <luaL_where@@Base+0x7394>
   434bc:	ldr	r1, [sp, #12]
   434c0:	ldr	r3, [r1]
   434c4:	lsr	r2, r3, #28
   434c8:	cmp	r2, #11
   434cc:	beq	4356c <luaL_typerror@@Base+0xd200>
   434d0:	cmp	r2, #12
   434d4:	ldr	r1, [r5]
   434d8:	bne	435a0 <luaL_typerror@@Base+0xd234>
   434dc:	ldr	r0, [r8]
   434e0:	uxth	r5, r3
   434e4:	ldr	r2, [r1, #8]
   434e8:	ldr	r1, [r0, r5, lsl #4]
   434ec:	add	r3, r0, r5, lsl #4
   434f0:	lsr	ip, r1, #28
   434f4:	cmp	ip, #8
   434f8:	bne	43514 <luaL_typerror@@Base+0xd1a8>
   434fc:	uxth	r3, r1
   43500:	ldr	r1, [r0, r3, lsl #4]
   43504:	add	r3, r0, r3, lsl #4
   43508:	lsr	ip, r1, #28
   4350c:	cmp	ip, #8
   43510:	beq	434fc <luaL_typerror@@Base+0xd190>
   43514:	mov	r1, #25
   43518:	mov	r0, r4
   4351c:	str	r3, [sp, #12]
   43520:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   43524:	ldr	r1, [r6, #8]
   43528:	cmp	r1, #0
   4352c:	beq	435b8 <luaL_typerror@@Base+0xd24c>
   43530:	mov	r3, r0
   43534:	mov	r2, r5
   43538:	mov	r0, r4
   4353c:	ldr	r1, [sp, #12]
   43540:	ldr	r4, [r4, #96]	; 0x60
   43544:	bl	430fc <luaL_typerror@@Base+0xcd90>
   43548:	str	r0, [r4]
   4354c:	b	43400 <luaL_typerror@@Base+0xd094>
   43550:	ldr	r3, [r6, #8]
   43554:	str	r3, [r6, #4]
   43558:	add	r1, r4, #2336	; 0x920
   4355c:	add	r1, r1, #12
   43560:	ldr	r0, [r4, #80]	; 0x50
   43564:	mov	r2, #21
   43568:	bl	210d0 <luaL_where@@Base+0xfcc>
   4356c:	ldr	r1, [r1, #4]
   43570:	ldr	r5, [r4, #96]	; 0x60
   43574:	cmp	r1, #0
   43578:	mov	r0, r4
   4357c:	bge	43594 <luaL_typerror@@Base+0xd228>
   43580:	ldr	r2, [r8]
   43584:	uxth	r3, r3
   43588:	ldr	r3, [r2, r3, lsl #4]
   4358c:	tst	r3, #8388608	; 0x800000
   43590:	bne	435e8 <luaL_typerror@@Base+0xd27c>
   43594:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43598:	str	r0, [r5]
   4359c:	b	43400 <luaL_typerror@@Base+0xd094>
   435a0:	mov	r0, r4
   435a4:	mov	r2, #10
   435a8:	ldr	r4, [r4, #96]	; 0x60
   435ac:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   435b0:	str	r0, [r4]
   435b4:	b	43400 <luaL_typerror@@Base+0xd094>
   435b8:	mov	r2, #1
   435bc:	strb	r2, [r4, #113]	; 0x71
   435c0:	ldr	r3, [r4, #96]	; 0x60
   435c4:	ldr	ip, [r6]
   435c8:	mov	r2, r0
   435cc:	add	ip, ip, #16
   435d0:	ldr	r3, [r3, #8]
   435d4:	ldr	r1, [sp, #12]
   435d8:	str	ip, [sp]
   435dc:	mov	r0, r4
   435e0:	bl	41160 <luaL_typerror@@Base+0xadf4>
   435e4:	b	43400 <luaL_typerror@@Base+0xd094>
   435e8:	vmov	s15, r1
   435ec:	mov	r1, #28
   435f0:	vcvt.f64.u32	d7, s15
   435f4:	vmov	r2, r3, d7
   435f8:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   435fc:	str	r0, [r5]
   43600:	b	43400 <luaL_typerror@@Base+0xd094>
   43604:	andeq	r0, r0, r4, lsl #17
   43608:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4360c:	mov	r9, r1
   43610:	ldr	r1, [r0, #96]	; 0x60
   43614:	sub	sp, sp, #28
   43618:	mov	r3, #8
   4361c:	ldr	r1, [r1]
   43620:	ldr	r2, [r9]
   43624:	mov	r7, r0
   43628:	str	r1, [sp, #12]
   4362c:	str	r3, [sp, #16]
   43630:	bl	28d54 <luaL_where@@Base+0x8c50>
   43634:	ldr	r8, [r7, #-156]	; 0xffffff64
   43638:	ldr	r2, [r8]
   4363c:	ldrh	r3, [r0, #6]
   43640:	mov	r5, r0
   43644:	add	r4, r2, r3, lsl #4
   43648:	ldr	r3, [r2, r3, lsl #4]
   4364c:	lsr	r1, r3, #28
   43650:	cmp	r1, #8
   43654:	bne	43670 <luaL_typerror@@Base+0xd304>
   43658:	uxth	r1, r3
   4365c:	ldr	r3, [r2, r1, lsl #4]
   43660:	add	r4, r2, r1, lsl #4
   43664:	lsr	r1, r3, #28
   43668:	cmp	r1, #8
   4366c:	beq	43658 <luaL_typerror@@Base+0xd2ec>
   43670:	cmp	r1, #2
   43674:	beq	43c18 <luaL_typerror@@Base+0xd8ac>
   43678:	mov	r1, r5
   4367c:	ldr	r3, [r7, #96]	; 0x60
   43680:	ldr	r6, [r3, #4]
   43684:	and	r2, r6, #520093696	; 0x1f000000
   43688:	lsr	r3, r6, #24
   4368c:	and	r3, r3, #31
   43690:	sub	r3, r3, #14
   43694:	cmp	r3, #5
   43698:	bls	437b4 <luaL_typerror@@Base+0xd448>
   4369c:	cmp	r2, #167772160	; 0xa000000
   436a0:	beq	43834 <luaL_typerror@@Base+0xd4c8>
   436a4:	cmp	r2, #67108864	; 0x4000000
   436a8:	beq	437f0 <luaL_typerror@@Base+0xd484>
   436ac:	ldr	r5, [r4]
   436b0:	ldr	sl, [r8]
   436b4:	mov	r1, r4
   436b8:	lsr	r3, r5, #28
   436bc:	cmp	r3, #2
   436c0:	bne	436f8 <luaL_typerror@@Base+0xd38c>
   436c4:	uxth	r4, r5
   436c8:	ldr	r5, [sl, r4, lsl #4]
   436cc:	add	r4, sl, r4, lsl #4
   436d0:	lsr	r3, r5, #28
   436d4:	cmp	r3, #8
   436d8:	beq	436c4 <luaL_typerror@@Base+0xd358>
   436dc:	cmp	r3, #1
   436e0:	bne	436f8 <luaL_typerror@@Base+0xd38c>
   436e4:	and	r6, r6, #520093696	; 0x1f000000
   436e8:	cmp	r6, #67108864	; 0x4000000
   436ec:	mov	r1, #0
   436f0:	beq	4367c <luaL_typerror@@Base+0xd310>
   436f4:	mov	r1, r4
   436f8:	ldr	r4, [r9, #8]
   436fc:	sub	r1, r1, sl
   43700:	adds	r2, r4, #0
   43704:	asr	r1, r1, #4
   43708:	movne	r2, #1
   4370c:	mov	r0, r8
   43710:	bl	1f3c4 <lua_atpanic@@Base+0x1f4>
   43714:	subs	r1, r0, #0
   43718:	beq	44110 <luaL_typerror@@Base+0xdda4>
   4371c:	ldr	r3, [r1, #4]
   43720:	cmn	r3, #9
   43724:	beq	43d18 <luaL_typerror@@Base+0xd9ac>
   43728:	cmp	r4, #0
   4372c:	cmneq	r3, #12
   43730:	ldr	r0, [r7, #80]	; 0x50
   43734:	bne	44124 <luaL_typerror@@Base+0xddb8>
   43738:	ldr	r4, [r7, #96]	; 0x60
   4373c:	ldr	r3, [r4, #4]
   43740:	and	r3, r3, #520093696	; 0x1f000000
   43744:	cmp	r3, #67108864	; 0x4000000
   43748:	bne	44124 <luaL_typerror@@Base+0xddb8>
   4374c:	ldr	r2, [r9]
   43750:	ldr	r1, [r1]
   43754:	add	r2, r2, #8
   43758:	bl	1f4f8 <lua_atpanic@@Base+0x328>
   4375c:	mov	r1, r0
   43760:	mov	r0, r7
   43764:	bl	2a7b8 <luaL_where@@Base+0xa6b4>
   43768:	ldr	r3, [r7, #96]	; 0x60
   4376c:	str	r0, [r4]
   43770:	ldr	r2, [r3]
   43774:	cmp	r2, #0
   43778:	beq	44110 <luaL_typerror@@Base+0xdda4>
   4377c:	ldr	r1, [r9]
   43780:	mov	r2, #4
   43784:	mov	r0, r7
   43788:	ldr	r1, [r1, #8]
   4378c:	ldrh	r4, [r3, #4]
   43790:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   43794:	ldr	r3, [pc, #2456]	; 44134 <luaL_typerror@@Base+0xddc8>
   43798:	strh	r4, [r7, #120]	; 0x78
   4379c:	strh	r3, [r7, #124]	; 0x7c
   437a0:	strh	r0, [r7, #122]	; 0x7a
   437a4:	mov	r0, r7
   437a8:	bl	27498 <luaL_where@@Base+0x7394>
   437ac:	add	sp, sp, #28
   437b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   437b4:	cmp	r2, #234881024	; 0xe000000
   437b8:	beq	43898 <luaL_typerror@@Base+0xd52c>
   437bc:	mov	r1, r6
   437c0:	mov	r2, #56	; 0x38
   437c4:	mov	r0, r7
   437c8:	bl	280a0 <luaL_where@@Base+0x7f9c>
   437cc:	ldr	r5, [r4]
   437d0:	lsr	r3, r5, #29
   437d4:	cmp	r3, #1
   437d8:	mov	r6, r0
   437dc:	beq	438c8 <luaL_typerror@@Base+0xd55c>
   437e0:	mov	r1, r4
   437e4:	lsr	r3, r5, #28
   437e8:	ldr	sl, [r8]
   437ec:	b	436bc <luaL_typerror@@Base+0xd350>
   437f0:	ldr	r3, [r9]
   437f4:	cmp	r1, #0
   437f8:	ldr	sl, [r3, #8]
   437fc:	beq	4380c <luaL_typerror@@Base+0xd4a0>
   43800:	ldrh	r3, [r1, #6]
   43804:	cmp	r3, #21
   43808:	beq	43cd8 <luaL_typerror@@Base+0xd96c>
   4380c:	ldr	r5, [r4]
   43810:	lsr	r3, r5, #28
   43814:	cmp	r3, #1
   43818:	beq	43b20 <luaL_typerror@@Base+0xd7b4>
   4381c:	and	r2, r5, #-201326592	; 0xf4000000
   43820:	cmp	r2, #872415232	; 0x34000000
   43824:	beq	439dc <luaL_typerror@@Base+0xd670>
   43828:	mov	r1, r4
   4382c:	ldr	sl, [r8]
   43830:	b	436bc <luaL_typerror@@Base+0xd350>
   43834:	ldr	r3, [r9]
   43838:	ldr	sl, [r8]
   4383c:	ldr	r3, [r3, #8]
   43840:	ldrh	r2, [r3, #6]
   43844:	ldr	r3, [sl, r2, lsl #4]
   43848:	add	fp, sl, r2, lsl #4
   4384c:	lsr	r2, r3, #28
   43850:	cmp	r2, #8
   43854:	bne	43870 <luaL_typerror@@Base+0xd504>
   43858:	uxth	fp, r3
   4385c:	ldr	r3, [sl, fp, lsl #4]
   43860:	add	fp, sl, fp, lsl #4
   43864:	lsr	r2, r3, #28
   43868:	cmp	r2, #8
   4386c:	beq	43858 <luaL_typerror@@Base+0xd4ec>
   43870:	mov	r1, fp
   43874:	mov	r0, r8
   43878:	bl	1e228 <_start@@Base+0xae78>
   4387c:	ldr	r5, [r4]
   43880:	lsr	r3, r5, #29
   43884:	cmp	r3, #1
   43888:	beq	43a94 <luaL_typerror@@Base+0xd728>
   4388c:	mov	r1, r4
   43890:	lsr	r3, r5, #28
   43894:	b	436bc <luaL_typerror@@Base+0xd350>
   43898:	ldr	r3, [pc, #2200]	; 44138 <luaL_typerror@@Base+0xddcc>
   4389c:	ldr	r2, [pc, #2200]	; 4413c <luaL_typerror@@Base+0xddd0>
   438a0:	strh	r6, [r7, #120]	; 0x78
   438a4:	strh	r3, [r7, #122]	; 0x7a
   438a8:	strh	r2, [r7, #124]	; 0x7c
   438ac:	mov	r0, r7
   438b0:	bl	27498 <luaL_where@@Base+0x7394>
   438b4:	ldr	r5, [r4]
   438b8:	lsr	r3, r5, #29
   438bc:	cmp	r3, #1
   438c0:	mov	r6, r0
   438c4:	bne	437e0 <luaL_typerror@@Base+0xd474>
   438c8:	tst	r5, #67108864	; 0x4000000
   438cc:	beq	438fc <luaL_typerror@@Base+0xd590>
   438d0:	mov	r1, #1
   438d4:	mov	r0, r7
   438d8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   438dc:	ldr	r3, [pc, #2140]	; 44140 <luaL_typerror@@Base+0xddd4>
   438e0:	strh	r6, [r7, #120]	; 0x78
   438e4:	strh	r3, [r7, #124]	; 0x7c
   438e8:	strh	r0, [r7, #122]	; 0x7a
   438ec:	mov	r0, r7
   438f0:	bl	27498 <luaL_where@@Base+0x7394>
   438f4:	ldr	r5, [r4]
   438f8:	mov	r6, r0
   438fc:	ldr	r0, [r8]
   43900:	uxth	r5, r5
   43904:	ldr	r2, [r0, r5, lsl #4]
   43908:	add	r3, r0, r5, lsl #4
   4390c:	lsr	r1, r2, #28
   43910:	cmp	r1, #8
   43914:	bne	43930 <luaL_typerror@@Base+0xd5c4>
   43918:	uxth	r3, r2
   4391c:	ldr	r2, [r0, r3, lsl #4]
   43920:	add	r3, r0, r3, lsl #4
   43924:	lsr	r1, r2, #28
   43928:	cmp	r1, #8
   4392c:	beq	43918 <luaL_typerror@@Base+0xd5ac>
   43930:	cmp	r1, #5
   43934:	mvnhi	fp, #0
   43938:	ldrls	sl, [r3, #4]
   4393c:	movhi	sl, fp
   43940:	mov	r2, r6
   43944:	ldr	r1, [r7, #100]	; 0x64
   43948:	ldr	r0, [r7, #16]
   4394c:	add	r3, sp, #16
   43950:	str	sl, [sp]
   43954:	movls	fp, sl
   43958:	bl	1db04 <_start@@Base+0xa754>
   4395c:	ldr	r2, [r7, #100]	; 0x64
   43960:	ldrh	r3, [sp, #12]
   43964:	tst	r2, #4194304	; 0x400000
   43968:	mov	r6, r0
   4396c:	beq	4397c <luaL_typerror@@Base+0xd610>
   43970:	ldr	r1, [sp, #16]
   43974:	cmp	r1, #0
   43978:	bne	43a50 <luaL_typerror@@Base+0xd6e4>
   4397c:	mov	r1, fp
   43980:	mov	r0, r7
   43984:	str	r3, [sp, #12]
   43988:	bl	26ccc <luaL_where@@Base+0x6bc8>
   4398c:	ldr	r2, [pc, #1968]	; 44144 <luaL_typerror@@Base+0xddd8>
   43990:	strh	r6, [r7, #120]	; 0x78
   43994:	strh	r2, [r7, #124]	; 0x7c
   43998:	strh	r0, [r7, #122]	; 0x7a
   4399c:	mov	r0, r7
   439a0:	bl	27498 <luaL_where@@Base+0x7394>
   439a4:	ldr	r3, [pc, #1948]	; 44148 <luaL_typerror@@Base+0xdddc>
   439a8:	strh	r3, [r7, #124]	; 0x7c
   439ac:	ldr	r3, [sp, #12]
   439b0:	strh	r3, [r7, #122]	; 0x7a
   439b4:	strh	r0, [r7, #120]	; 0x78
   439b8:	mov	r6, r0
   439bc:	mov	r0, r7
   439c0:	bl	27498 <luaL_where@@Base+0x7394>
   439c4:	str	r0, [sp, #12]
   439c8:	cmp	r5, #0
   439cc:	bne	43ba0 <luaL_typerror@@Base+0xd834>
   439d0:	ldr	r5, [r4]
   439d4:	ldr	sl, [r8]
   439d8:	b	4388c <luaL_typerror@@Base+0xd520>
   439dc:	ldr	r2, [sl, #12]
   439e0:	cmp	r2, #2
   439e4:	bne	43828 <luaL_typerror@@Base+0xd4bc>
   439e8:	ldrb	r2, [sl, #16]
   439ec:	cmp	r2, #114	; 0x72
   439f0:	beq	43d88 <luaL_typerror@@Base+0xda1c>
   439f4:	cmp	r2, #105	; 0x69
   439f8:	bne	43828 <luaL_typerror@@Base+0xd4bc>
   439fc:	ldrb	r2, [sl, #17]
   43a00:	cmp	r2, #109	; 0x6d
   43a04:	bne	43828 <luaL_typerror@@Base+0xd4bc>
   43a08:	mov	r2, #4
   43a0c:	mov	r1, sl
   43a10:	mov	r0, r7
   43a14:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   43a18:	ldr	r3, [pc, #1812]	; 44134 <luaL_typerror@@Base+0xddc8>
   43a1c:	strh	r6, [r7, #120]	; 0x78
   43a20:	strh	r3, [r7, #124]	; 0x7c
   43a24:	strh	r0, [r7, #122]	; 0x7a
   43a28:	mov	r0, r7
   43a2c:	bl	27498 <luaL_where@@Base+0x7394>
   43a30:	ldrb	r3, [sl, #16]
   43a34:	ldrh	r5, [r4]
   43a38:	cmp	r3, #105	; 0x69
   43a3c:	ldreq	r2, [r4, #4]
   43a40:	ldreq	r3, [sp, #16]
   43a44:	addeq	r3, r3, r2, lsr #1
   43a48:	streq	r3, [sp, #16]
   43a4c:	b	439c8 <luaL_typerror@@Base+0xd65c>
   43a50:	cmp	sl, #4
   43a54:	cmpne	sl, #1
   43a58:	bne	4397c <luaL_typerror@@Base+0xd610>
   43a5c:	mov	r0, r7
   43a60:	str	r3, [sp, #12]
   43a64:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43a68:	ldr	r3, [pc, #1752]	; 44148 <luaL_typerror@@Base+0xdddc>
   43a6c:	strh	r3, [r7, #124]	; 0x7c
   43a70:	ldr	r3, [sp, #12]
   43a74:	strh	r3, [r7, #120]	; 0x78
   43a78:	strh	r0, [r7, #122]	; 0x7a
   43a7c:	mov	r0, r7
   43a80:	bl	27498 <luaL_where@@Base+0x7394>
   43a84:	mov	r3, #0
   43a88:	str	r3, [sp, #16]
   43a8c:	uxth	r3, r0
   43a90:	b	4397c <luaL_typerror@@Base+0xd610>
   43a94:	sub	r3, r0, #15
   43a98:	cmp	r3, #7
   43a9c:	bhi	4388c <luaL_typerror@@Base+0xd520>
   43aa0:	ldr	r3, [fp, #4]
   43aa4:	uxth	r5, r0
   43aa8:	cmp	r3, #8
   43aac:	uxth	r6, r6
   43ab0:	orreq	r3, r5, #17664	; 0x4500
   43ab4:	strheq	r6, [r7, #120]	; 0x78
   43ab8:	moveq	r2, #17
   43abc:	beq	43d70 <luaL_typerror@@Base+0xda04>
   43ac0:	cmp	r3, #4
   43ac4:	beq	43d64 <luaL_typerror@@Base+0xd9f8>
   43ac8:	mov	r1, #8
   43acc:	mov	r0, r7
   43ad0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43ad4:	ldr	r3, [pc, #1644]	; 44148 <luaL_typerror@@Base+0xdddc>
   43ad8:	strh	r6, [r7, #120]	; 0x78
   43adc:	strh	r3, [r7, #124]	; 0x7c
   43ae0:	strh	r0, [r7, #122]	; 0x7a
   43ae4:	mov	r0, r7
   43ae8:	bl	27498 <luaL_where@@Base+0x7394>
   43aec:	orr	r3, r5, #17920	; 0x4600
   43af0:	mov	r2, #0
   43af4:	strh	r3, [r7, #124]	; 0x7c
   43af8:	strh	r2, [r7, #122]	; 0x7a
   43afc:	strh	r0, [r7, #120]	; 0x78
   43b00:	mov	r0, r7
   43b04:	bl	27498 <luaL_where@@Base+0x7394>
   43b08:	mov	r6, r0
   43b0c:	ldr	r3, [fp, #4]
   43b10:	cmp	r3, #4
   43b14:	bhi	43dd4 <luaL_typerror@@Base+0xda68>
   43b18:	ldr	r5, [r4]
   43b1c:	b	438c8 <luaL_typerror@@Base+0xd55c>
   43b20:	mov	r3, #0
   43b24:	str	r3, [sp]
   43b28:	mov	r2, sl
   43b2c:	add	r3, sp, #20
   43b30:	mov	r1, r4
   43b34:	mov	r0, r8
   43b38:	bl	1544c <_start@@Base+0x209c>
   43b3c:	subs	fp, r0, #0
   43b40:	beq	436ac <luaL_typerror@@Base+0xd340>
   43b44:	ldr	r3, [sp, #16]
   43b48:	ldr	r2, [sp, #20]
   43b4c:	mov	r1, sl
   43b50:	add	r3, r3, r2
   43b54:	mov	r0, r7
   43b58:	mov	r2, #4
   43b5c:	str	r3, [sp, #16]
   43b60:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   43b64:	ldr	r3, [pc, #1480]	; 44134 <luaL_typerror@@Base+0xddc8>
   43b68:	strh	r6, [r7, #120]	; 0x78
   43b6c:	strh	r3, [r7, #124]	; 0x7c
   43b70:	strh	r0, [r7, #122]	; 0x7a
   43b74:	mov	r0, r7
   43b78:	bl	27498 <luaL_where@@Base+0x7394>
   43b7c:	ldr	r5, [fp]
   43b80:	lsr	r3, r5, #28
   43b84:	cmp	r3, #11
   43b88:	beq	43ee0 <luaL_typerror@@Base+0xdb74>
   43b8c:	cmp	r3, #10
   43b90:	beq	43e00 <luaL_typerror@@Base+0xda94>
   43b94:	uxth	r5, r5
   43b98:	cmp	r5, #0
   43b9c:	beq	439d0 <luaL_typerror@@Base+0xd664>
   43ba0:	ldr	r1, [sp, #16]
   43ba4:	cmp	r1, #0
   43ba8:	bne	43cac <luaL_typerror@@Base+0xd940>
   43bac:	ldr	r4, [r8]
   43bb0:	ldr	r2, [pc, #1428]	; 4414c <luaL_typerror@@Base+0xdde0>
   43bb4:	add	r1, r4, r5, lsl #4
   43bb8:	ldr	r3, [r4, r5, lsl #4]
   43bbc:	and	r2, r2, r3
   43bc0:	cmp	r2, #545259520	; 0x20800000
   43bc4:	beq	43d98 <luaL_typerror@@Base+0xda2c>
   43bc8:	lsr	r2, r3, #28
   43bcc:	cmp	r2, #8
   43bd0:	bne	43bec <luaL_typerror@@Base+0xd880>
   43bd4:	uxth	r2, r3
   43bd8:	ldr	r3, [r4, r2, lsl #4]
   43bdc:	add	r1, r4, r2, lsl #4
   43be0:	lsr	r2, r3, #28
   43be4:	cmp	r2, #8
   43be8:	beq	43bd4 <luaL_typerror@@Base+0xd868>
   43bec:	ldr	r3, [r9, #8]
   43bf0:	ldr	r4, [r7, #96]	; 0x60
   43bf4:	cmp	r3, #0
   43bf8:	bne	43c78 <luaL_typerror@@Base+0xd90c>
   43bfc:	ldr	r3, [sp, #12]
   43c00:	mov	r2, r5
   43c04:	mov	r0, r7
   43c08:	bl	430fc <luaL_typerror@@Base+0xcd90>
   43c0c:	str	r0, [r4]
   43c10:	add	sp, sp, #28
   43c14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43c18:	ldr	r1, [pc, #1324]	; 4414c <luaL_typerror@@Base+0xdde0>
   43c1c:	and	r1, r1, r3
   43c20:	cmp	r1, #545259520	; 0x20800000
   43c24:	beq	43d44 <luaL_typerror@@Base+0xd9d8>
   43c28:	ldrh	r1, [sp, #12]
   43c2c:	ldr	r2, [pc, #1308]	; 44150 <luaL_typerror@@Base+0xdde4>
   43c30:	mov	r3, #15
   43c34:	strh	r1, [r7, #120]	; 0x78
   43c38:	strh	r2, [r7, #124]	; 0x7c
   43c3c:	strh	r3, [r7, #122]	; 0x7a
   43c40:	mov	r0, r7
   43c44:	bl	27498 <luaL_where@@Base+0x7394>
   43c48:	ldr	ip, [r7, #16]
   43c4c:	add	r3, sp, #24
   43c50:	mov	lr, #0
   43c54:	mov	r2, #1
   43c58:	ldr	r1, [r7, #100]	; 0x64
   43c5c:	str	lr, [r3, #-8]!
   43c60:	str	r2, [sp]
   43c64:	mov	r2, r0
   43c68:	mov	r0, ip
   43c6c:	bl	1db04 <_start@@Base+0xa754>
   43c70:	str	r0, [sp, #12]
   43c74:	b	43678 <luaL_typerror@@Base+0xd30c>
   43c78:	mov	r2, #0
   43c7c:	mov	r3, #1
   43c80:	str	r2, [r9, #4]
   43c84:	strb	r3, [r7, #113]	; 0x71
   43c88:	ldr	r0, [r9]
   43c8c:	ldr	r3, [r4, #8]
   43c90:	add	r0, r0, #16
   43c94:	str	r0, [sp]
   43c98:	ldr	r2, [sp, #12]
   43c9c:	mov	r0, r7
   43ca0:	bl	41160 <luaL_typerror@@Base+0xadf4>
   43ca4:	add	sp, sp, #28
   43ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43cac:	mov	r0, r7
   43cb0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43cb4:	ldrh	r2, [sp, #12]
   43cb8:	ldr	r3, [pc, #1160]	; 44148 <luaL_typerror@@Base+0xdddc>
   43cbc:	strh	r2, [r7, #120]	; 0x78
   43cc0:	strh	r3, [r7, #124]	; 0x7c
   43cc4:	strh	r0, [r7, #122]	; 0x7a
   43cc8:	mov	r0, r7
   43ccc:	bl	27498 <luaL_where@@Base+0x7394>
   43cd0:	str	r0, [sp, #12]
   43cd4:	b	43bac <luaL_typerror@@Base+0xd840>
   43cd8:	ldr	r2, [sp, #12]
   43cdc:	mov	r0, r7
   43ce0:	bl	28894 <luaL_where@@Base+0x8790>
   43ce4:	ldr	r2, [r8]
   43ce8:	ldr	r5, [r2, r0, lsl #4]
   43cec:	add	r4, r2, r0, lsl #4
   43cf0:	lsr	r3, r5, #28
   43cf4:	cmp	r3, #8
   43cf8:	bne	43814 <luaL_typerror@@Base+0xd4a8>
   43cfc:	uxth	r3, r5
   43d00:	ldr	r5, [r2, r3, lsl #4]
   43d04:	add	r4, r2, r3, lsl #4
   43d08:	lsr	r3, r5, #28
   43d0c:	cmp	r3, #8
   43d10:	beq	43cfc <luaL_typerror@@Base+0xd990>
   43d14:	b	43814 <luaL_typerror@@Base+0xd4a8>
   43d18:	ldr	r1, [r1]
   43d1c:	mov	r2, #8
   43d20:	mov	r0, r7
   43d24:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   43d28:	ldr	r2, [r7, #96]	; 0x60
   43d2c:	mvn	r3, #0
   43d30:	orr	r0, r0, #65536	; 0x10000
   43d34:	str	r0, [r2, #-4]
   43d38:	str	r3, [r9, #4]
   43d3c:	add	sp, sp, #28
   43d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43d44:	ldr	r3, [r4]
   43d48:	uxth	r1, r3
   43d4c:	ldr	r3, [r2, r1, lsl #4]
   43d50:	add	r4, r2, r1, lsl #4
   43d54:	lsr	r1, r3, #28
   43d58:	cmp	r1, #8
   43d5c:	beq	43d48 <luaL_typerror@@Base+0xd9dc>
   43d60:	b	43c28 <luaL_typerror@@Base+0xd8bc>
   43d64:	orr	r3, r5, #17664	; 0x4500
   43d68:	mov	r2, #16
   43d6c:	strh	r6, [r7, #120]	; 0x78
   43d70:	strh	r3, [r7, #124]	; 0x7c
   43d74:	strh	r2, [r7, #122]	; 0x7a
   43d78:	mov	r0, r7
   43d7c:	bl	27498 <luaL_where@@Base+0x7394>
   43d80:	mov	r6, r0
   43d84:	b	43b0c <luaL_typerror@@Base+0xd7a0>
   43d88:	ldrb	r2, [sl, #17]
   43d8c:	cmp	r2, #101	; 0x65
   43d90:	bne	43828 <luaL_typerror@@Base+0xd4bc>
   43d94:	b	43a08 <luaL_typerror@@Base+0xd69c>
   43d98:	ldrh	r1, [sp, #12]
   43d9c:	ldr	r2, [pc, #944]	; 44154 <luaL_typerror@@Base+0xdde8>
   43da0:	mov	r3, #0
   43da4:	strh	r1, [r7, #120]	; 0x78
   43da8:	strh	r3, [r7, #122]	; 0x7a
   43dac:	strh	r2, [r7, #124]	; 0x7c
   43db0:	mov	r0, r7
   43db4:	bl	27498 <luaL_where@@Base+0x7394>
   43db8:	ldr	r5, [r4, r5, lsl #4]
   43dbc:	ldr	r4, [r8]
   43dc0:	uxth	r5, r5
   43dc4:	add	r1, r4, r5, lsl #4
   43dc8:	ldr	r3, [r4, r5, lsl #4]
   43dcc:	str	r0, [sp, #12]
   43dd0:	b	43bc8 <luaL_typerror@@Base+0xd85c>
   43dd4:	ldr	r3, [pc, #864]	; 4413c <luaL_typerror@@Base+0xddd0>
   43dd8:	orr	r0, r5, #608	; 0x260
   43ddc:	strh	r0, [r7, #122]	; 0x7a
   43de0:	strh	r3, [r7, #124]	; 0x7c
   43de4:	strh	r6, [r7, #120]	; 0x78
   43de8:	mov	r0, r7
   43dec:	bl	27498 <luaL_where@@Base+0x7394>
   43df0:	mov	r3, #1
   43df4:	strb	r3, [r7, #268]	; 0x10c
   43df8:	mov	r6, r0
   43dfc:	b	43b18 <luaL_typerror@@Base+0xd7ac>
   43e00:	ldr	r1, [sp, #16]
   43e04:	ldrh	sl, [sp, #12]
   43e08:	cmp	r1, #0
   43e0c:	bne	440e4 <luaL_typerror@@Base+0xdd78>
   43e10:	lsr	r3, r5, #16
   43e14:	lsr	r6, r5, #23
   43e18:	and	r3, r3, #127	; 0x7f
   43e1c:	and	r6, r6, #1
   43e20:	clz	r3, r3
   43e24:	eor	r3, r3, #31
   43e28:	add	r6, r6, #15
   43e2c:	add	r6, r6, r3, lsl #1
   43e30:	orr	r2, r6, #17920	; 0x4600
   43e34:	mov	r3, #0
   43e38:	strh	r2, [r7, #124]	; 0x7c
   43e3c:	strh	r3, [r7, #122]	; 0x7a
   43e40:	strh	sl, [r7, #120]	; 0x78
   43e44:	mov	r0, r7
   43e48:	bl	27498 <luaL_where@@Base+0x7394>
   43e4c:	ldr	r3, [r9, #8]
   43e50:	lsr	r4, r5, #8
   43e54:	cmp	r3, #0
   43e58:	and	r4, r4, #127	; 0x7f
   43e5c:	and	fp, r5, #127	; 0x7f
   43e60:	and	r2, r5, #134217728	; 0x8000000
   43e64:	mov	r8, r0
   43e68:	bne	43fd0 <luaL_typerror@@Base+0xdc64>
   43e6c:	cmp	r2, #0
   43e70:	uxth	r8, r0
   43e74:	bne	43f70 <luaL_typerror@@Base+0xdc04>
   43e78:	tst	r5, #8388608	; 0x800000
   43e7c:	bne	43f30 <luaL_typerror@@Base+0xdbc4>
   43e80:	rsb	r4, r4, #32
   43e84:	sub	r1, r4, fp
   43e88:	mov	r0, r7
   43e8c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43e90:	ldr	r3, [pc, #704]	; 44158 <luaL_typerror@@Base+0xddec>
   43e94:	strh	r8, [r7, #120]	; 0x78
   43e98:	strh	r3, [r7, #124]	; 0x7c
   43e9c:	strh	r0, [r7, #122]	; 0x7a
   43ea0:	mov	r0, r7
   43ea4:	bl	27498 <luaL_where@@Base+0x7394>
   43ea8:	mov	r1, r4
   43eac:	mov	r5, r0
   43eb0:	mov	r0, r7
   43eb4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43eb8:	ldr	r3, [pc, #668]	; 4415c <luaL_typerror@@Base+0xddf0>
   43ebc:	strh	r3, [r7, #124]	; 0x7c
   43ec0:	strh	r0, [r7, #122]	; 0x7a
   43ec4:	strh	r5, [r7, #120]	; 0x78
   43ec8:	mov	r0, r7
   43ecc:	bl	27498 <luaL_where@@Base+0x7394>
   43ed0:	mov	r3, r0
   43ed4:	ldr	r2, [r7, #96]	; 0x60
   43ed8:	str	r3, [r2]
   43edc:	b	437ac <luaL_typerror@@Base+0xd440>
   43ee0:	ldr	r1, [fp, #4]
   43ee4:	ldr	r4, [r7, #96]	; 0x60
   43ee8:	cmp	r1, #0
   43eec:	mov	r0, r7
   43ef0:	bge	43f08 <luaL_typerror@@Base+0xdb9c>
   43ef4:	ldr	r3, [r8]
   43ef8:	uxth	r5, r5
   43efc:	ldr	r3, [r3, r5, lsl #4]
   43f00:	tst	r3, #8388608	; 0x800000
   43f04:	bne	43f14 <luaL_typerror@@Base+0xdba8>
   43f08:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43f0c:	str	r0, [r4]
   43f10:	b	437ac <luaL_typerror@@Base+0xd440>
   43f14:	vmov	s15, r1
   43f18:	mov	r1, #28
   43f1c:	vcvt.f64.u32	d7, s15
   43f20:	vmov	r2, r3, d7
   43f24:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   43f28:	str	r0, [r4]
   43f2c:	b	437ac <luaL_typerror@@Base+0xd440>
   43f30:	mov	r1, fp
   43f34:	mov	r0, r7
   43f38:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43f3c:	ldr	r3, [pc, #540]	; 44160 <luaL_typerror@@Base+0xddf4>
   43f40:	strh	r8, [r7, #120]	; 0x78
   43f44:	strh	r3, [r7, #124]	; 0x7c
   43f48:	strh	r0, [r7, #122]	; 0x7a
   43f4c:	mov	r0, r7
   43f50:	bl	27498 <luaL_where@@Base+0x7394>
   43f54:	mvn	r1, #0
   43f58:	mvn	r1, r1, lsl r4
   43f5c:	mov	r5, r0
   43f60:	mov	r0, r7
   43f64:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43f68:	ldr	r3, [pc, #464]	; 44140 <luaL_typerror@@Base+0xddd4>
   43f6c:	b	43ebc <luaL_typerror@@Base+0xdb50>
   43f70:	mov	r1, #1
   43f74:	mov	r0, r7
   43f78:	lsl	r1, r1, fp
   43f7c:	str	r3, [sp, #12]
   43f80:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43f84:	ldr	r2, [pc, #436]	; 44140 <luaL_typerror@@Base+0xddd4>
   43f88:	strh	r8, [r7, #120]	; 0x78
   43f8c:	strh	r2, [r7, #124]	; 0x7c
   43f90:	strh	r0, [r7, #122]	; 0x7a
   43f94:	mov	r0, r7
   43f98:	bl	27498 <luaL_where@@Base+0x7394>
   43f9c:	ldr	r3, [sp, #12]
   43fa0:	mov	r1, r3
   43fa4:	mov	r4, r0
   43fa8:	mov	r0, r7
   43fac:	bl	26ccc <luaL_where@@Base+0x6bc8>
   43fb0:	ldr	r2, [pc, #428]	; 44164 <luaL_typerror@@Base+0xddf8>
   43fb4:	mov	r3, #2
   43fb8:	str	r3, [r7, #264]	; 0x108
   43fbc:	strh	r4, [r7, #120]	; 0x78
   43fc0:	strh	r2, [r7, #124]	; 0x7c
   43fc4:	ldr	r3, [pc, #412]	; 44168 <luaL_typerror@@Base+0xddfc>
   43fc8:	strh	r0, [r7, #122]	; 0x7a
   43fcc:	b	43ed4 <luaL_typerror@@Base+0xdb68>
   43fd0:	cmp	r2, #0
   43fd4:	ldr	r1, [r7, #-156]	; 0xffffff64
   43fd8:	movne	r2, #3
   43fdc:	bne	43fec <luaL_typerror@@Base+0xdc80>
   43fe0:	tst	r5, #8388608	; 0x800000
   43fe4:	moveq	r2, #9
   43fe8:	movne	r2, #10
   43fec:	ldr	r0, [r7, #96]	; 0x60
   43ff0:	ldr	r3, [r9]
   43ff4:	ldr	r1, [r1]
   43ff8:	add	r3, r3, #16
   43ffc:	add	r1, r1, r2, lsl #4
   44000:	str	r3, [sp]
   44004:	mov	r2, #0
   44008:	ldr	r3, [r0, #8]
   4400c:	mov	r0, r7
   44010:	bl	41160 <luaL_typerror@@Base+0xadf4>
   44014:	mov	r1, fp
   44018:	mov	r5, #1
   4401c:	lsl	r4, r5, r4
   44020:	sub	r4, r4, #1
   44024:	lsl	r4, r4, fp
   44028:	orr	fp, r6, #8448	; 0x2100
   4402c:	str	r0, [sp, #12]
   44030:	mov	r0, r7
   44034:	bl	26ccc <luaL_where@@Base+0x6bc8>
   44038:	ldr	r2, [sp, #12]
   4403c:	ldr	r3, [pc, #276]	; 44158 <luaL_typerror@@Base+0xddec>
   44040:	strh	r2, [r7, #120]	; 0x78
   44044:	strh	r3, [r7, #124]	; 0x7c
   44048:	strh	r0, [r7, #122]	; 0x7a
   4404c:	mov	r0, r7
   44050:	bl	27498 <luaL_where@@Base+0x7394>
   44054:	mov	r1, r4
   44058:	str	r0, [sp, #12]
   4405c:	mov	r0, r7
   44060:	bl	26ccc <luaL_where@@Base+0x6bc8>
   44064:	ldr	r3, [sp, #12]
   44068:	strh	fp, [r7, #124]	; 0x7c
   4406c:	strh	r3, [r7, #120]	; 0x78
   44070:	strh	r0, [r7, #122]	; 0x7a
   44074:	mov	r0, r7
   44078:	bl	27498 <luaL_where@@Base+0x7394>
   4407c:	mvn	r1, r4
   44080:	str	r0, [sp, #12]
   44084:	mov	r0, r7
   44088:	bl	26ccc <luaL_where@@Base+0x6bc8>
   4408c:	strh	fp, [r7, #124]	; 0x7c
   44090:	strh	r8, [r7, #120]	; 0x78
   44094:	strh	r0, [r7, #122]	; 0x7a
   44098:	mov	r0, r7
   4409c:	bl	27498 <luaL_where@@Base+0x7394>
   440a0:	ldr	r2, [sp, #12]
   440a4:	orr	r3, r6, #8704	; 0x2200
   440a8:	strh	r3, [r7, #124]	; 0x7c
   440ac:	strh	r2, [r7, #122]	; 0x7a
   440b0:	orr	r6, r6, #19712	; 0x4d00
   440b4:	strh	r0, [r7, #120]	; 0x78
   440b8:	mov	r0, r7
   440bc:	bl	27498 <luaL_where@@Base+0x7394>
   440c0:	strh	r6, [r7, #124]	; 0x7c
   440c4:	strh	sl, [r7, #120]	; 0x78
   440c8:	strh	r0, [r7, #122]	; 0x7a
   440cc:	mov	r0, r7
   440d0:	bl	27498 <luaL_where@@Base+0x7394>
   440d4:	mov	r3, #0
   440d8:	str	r3, [r9, #4]
   440dc:	strb	r5, [r7, #113]	; 0x71
   440e0:	b	437ac <luaL_typerror@@Base+0xd440>
   440e4:	mov	r0, r7
   440e8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   440ec:	ldr	r3, [pc, #84]	; 44148 <luaL_typerror@@Base+0xdddc>
   440f0:	strh	sl, [r7, #120]	; 0x78
   440f4:	strh	r3, [r7, #124]	; 0x7c
   440f8:	strh	r0, [r7, #122]	; 0x7a
   440fc:	mov	r0, r7
   44100:	bl	27498 <luaL_where@@Base+0x7394>
   44104:	ldr	r5, [fp]
   44108:	uxth	sl, r0
   4410c:	b	43e10 <luaL_typerror@@Base+0xdaa4>
   44110:	add	r1, r7, #2336	; 0x920
   44114:	add	r1, r1, #12
   44118:	ldr	r0, [r7, #80]	; 0x50
   4411c:	mov	r2, #11
   44120:	bl	210d0 <luaL_where@@Base+0xfcc>
   44124:	add	r1, r7, #2336	; 0x920
   44128:	add	r1, r1, #12
   4412c:	mov	r2, #11
   44130:	bl	210d0 <luaL_where@@Base+0xfcc>
   44134:	andeq	r0, r0, r4, lsl #17
   44138:	andeq	r1, r0, lr, ror #4
   4413c:	andeq	r5, r0, r3, lsl sl
   44140:	andeq	r2, r0, r3, lsl r1
   44144:	andeq	r2, r0, r3, lsl fp
   44148:	andeq	r2, r0, r5, lsl #18
   4414c:			; <UNDEFINED> instruction: 0xf0800000
   44150:	andeq	r4, r0, r5, lsl #10
   44154:	andeq	r4, r0, r5, lsl #12
   44158:	andeq	r2, r0, r3, lsl r4
   4415c:	andeq	r2, r0, r3, lsl r6
   44160:	andeq	r2, r0, r3, lsl r5
   44164:	muleq	r0, r3, r9
   44168:	andeq	r7, r0, #1012	; 0x3f4
   4416c:	ldr	r3, [r1, #4]
   44170:	cmn	r3, #14
   44174:	bls	441f0 <luaL_typerror@@Base+0xde84>
   44178:	cmn	r3, #11
   4417c:	beq	441a4 <luaL_typerror@@Base+0xde38>
   44180:	cmn	r3, #5
   44184:	moveq	r1, #19
   44188:	beq	4419c <luaL_typerror@@Base+0xde30>
   4418c:	add	r3, r3, #3
   44190:	cmp	r3, #2
   44194:	movcc	r1, #3
   44198:	movcs	r1, #17
   4419c:	mov	r0, r1
   441a0:	bx	lr
   441a4:	ldr	r3, [r1]
   441a8:	ldr	r2, [r0]
   441ac:	ldrh	r1, [r3, #6]
   441b0:	ldr	r3, [r2, r1, lsl #4]
   441b4:	add	r2, r2, r1, lsl #4
   441b8:	and	ip, r3, #-67108864	; 0xfc000000
   441bc:	cmp	ip, #805306368	; 0x30000000
   441c0:	beq	4420c <luaL_typerror@@Base+0xdea0>
   441c4:	lsr	ip, r3, #28
   441c8:	cmp	ip, #6
   441cc:	cmpne	ip, #1
   441d0:	beq	441fc <luaL_typerror@@Base+0xde90>
   441d4:	and	r3, r3, #-201326592	; 0xf4000000
   441d8:	cmp	r3, #67108864	; 0x4000000
   441dc:	bne	4419c <luaL_typerror@@Base+0xde30>
   441e0:	ldr	r3, [r2, #4]
   441e4:	cmp	r3, #4
   441e8:	moveq	r1, #14
   441ec:	b	4419c <luaL_typerror@@Base+0xde30>
   441f0:	mov	r1, #14
   441f4:	mov	r0, r1
   441f8:	bx	lr
   441fc:	orr	r1, r1, #131072	; 0x20000
   44200:	add	r1, r1, #536870912	; 0x20000000
   44204:	mov	r2, #4
   44208:	b	41060 <luaL_typerror@@Base+0xacf4>
   4420c:	uxth	r1, r3
   44210:	orr	r1, r1, #536870912	; 0x20000000
   44214:	orr	r1, r1, #131072	; 0x20000
   44218:	mov	r2, #4
   4421c:	b	41060 <luaL_typerror@@Base+0xacf4>
   44220:	ldr	r3, [r0, #96]	; 0x60
   44224:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44228:	mov	r4, r1
   4422c:	ldr	r2, [r1]
   44230:	sub	sp, sp, #172	; 0xac
   44234:	ldr	r1, [r3]
   44238:	mov	r6, r0
   4423c:	ldr	r7, [r0, #-156]	; 0xffffff64
   44240:	bl	28d54 <luaL_where@@Base+0x8c50>
   44244:	ldrh	r8, [r0, #6]
   44248:	mov	sl, r0
   4424c:	cmp	r8, #21
   44250:	beq	4433c <luaL_typerror@@Base+0xdfd0>
   44254:	ldr	fp, [r6, #-156]	; 0xffffff64
   44258:	lsl	ip, r8, #4
   4425c:	ldr	r0, [fp]
   44260:	add	r5, r0, ip
   44264:	ldr	r2, [r0, r8, lsl #4]
   44268:	lsr	r1, r2, #28
   4426c:	cmp	r1, #8
   44270:	bne	4428c <luaL_typerror@@Base+0xdf20>
   44274:	uxth	r5, r2
   44278:	ldr	r2, [r0, r5, lsl #4]
   4427c:	add	r5, r0, r5, lsl #4
   44280:	lsr	r1, r2, #28
   44284:	cmp	r1, #8
   44288:	beq	44274 <luaL_typerror@@Base+0xdf08>
   4428c:	cmp	r1, #2
   44290:	beq	44320 <luaL_typerror@@Base+0xdfb4>
   44294:	cmp	r1, #6
   44298:	movne	r5, #9
   4429c:	beq	44380 <luaL_typerror@@Base+0xe014>
   442a0:	ldr	r2, [r7]
   442a4:	ldr	r1, [r2, ip]
   442a8:	lsr	r3, r1, #28
   442ac:	cmp	r3, #8
   442b0:	bne	442c8 <luaL_typerror@@Base+0xdf5c>
   442b4:	uxth	r1, r1
   442b8:	ldr	r1, [r2, r1, lsl #4]
   442bc:	lsr	r3, r1, #28
   442c0:	cmp	r3, #8
   442c4:	beq	442b4 <luaL_typerror@@Base+0xdf48>
   442c8:	cmp	r3, #2
   442cc:	uxtheq	r1, r1
   442d0:	movne	r1, r8
   442d4:	mov	r0, r7
   442d8:	mov	r2, r5
   442dc:	bl	1f3c4 <lua_atpanic@@Base+0x1f4>
   442e0:	cmp	r0, #0
   442e4:	beq	44360 <luaL_typerror@@Base+0xdff4>
   442e8:	ldr	r3, [r0, #4]
   442ec:	cmn	r3, #9
   442f0:	bne	44920 <luaL_typerror@@Base+0xe5b4>
   442f4:	ldr	r1, [r0]
   442f8:	mov	r2, #8
   442fc:	mov	r0, r6
   44300:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   44304:	ldr	r2, [r6, #96]	; 0x60
   44308:	mvn	r3, #0
   4430c:	orr	r0, r0, #65536	; 0x10000
   44310:	str	r0, [r2, #-4]
   44314:	str	r3, [r4, #4]
   44318:	add	sp, sp, #172	; 0xac
   4431c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44320:	uxth	r5, r2
   44324:	ldr	r2, [r0, r5, lsl #4]
   44328:	add	r5, r0, r5, lsl #4
   4432c:	lsr	r1, r2, #28
   44330:	cmp	r1, #8
   44334:	beq	44320 <luaL_typerror@@Base+0xdfb4>
   44338:	b	44294 <luaL_typerror@@Base+0xdf28>
   4433c:	ldr	r2, [r6, #96]	; 0x60
   44340:	mov	r1, r0
   44344:	mov	r0, r6
   44348:	ldr	r2, [r2]
   4434c:	bl	28894 <luaL_where@@Base+0x8790>
   44350:	mov	r5, #19
   44354:	mov	r8, r0
   44358:	lsl	ip, r0, #4
   4435c:	b	442a0 <luaL_typerror@@Base+0xdf34>
   44360:	cmp	r5, #19
   44364:	bne	44920 <luaL_typerror@@Base+0xe5b4>
   44368:	mov	r2, r8
   4436c:	mov	r1, r4
   44370:	mov	r0, r6
   44374:	add	sp, sp, #172	; 0xac
   44378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4437c:	b	421f0 <luaL_typerror@@Base+0xbe84>
   44380:	ldr	r1, [r6, #96]	; 0x60
   44384:	ldr	ip, [pc, #1488]	; 4495c <luaL_typerror@@Base+0xe5f0>
   44388:	mov	r2, #15
   4438c:	ldrh	r1, [r1]
   44390:	mov	r0, r6
   44394:	strh	r2, [r6, #122]	; 0x7a
   44398:	strh	ip, [r6, #124]	; 0x7c
   4439c:	strh	r1, [r6, #120]	; 0x78
   443a0:	bl	27498 <luaL_where@@Base+0x7394>
   443a4:	ldr	r9, [r5]
   443a8:	ldr	r8, [fp]
   443ac:	mov	r2, r9
   443b0:	str	r0, [sp, #16]
   443b4:	uxth	r3, r2
   443b8:	ldr	r2, [r8, r3, lsl #4]
   443bc:	add	r3, r8, r3, lsl #4
   443c0:	lsr	r7, r2, #28
   443c4:	cmp	r7, #8
   443c8:	beq	443b4 <luaL_typerror@@Base+0xe048>
   443cc:	mov	r1, r3
   443d0:	mov	r0, fp
   443d4:	str	r3, [sp, #20]
   443d8:	bl	1e228 <_start@@Base+0xae78>
   443dc:	ldr	r1, [sl, #8]
   443e0:	mvn	r3, #3
   443e4:	str	r1, [sp, #32]
   443e8:	add	r2, sp, #32
   443ec:	ldr	r1, [fp, #24]
   443f0:	str	r3, [sp, #36]	; 0x24
   443f4:	str	r0, [sp, #12]
   443f8:	ldr	r0, [r6, #80]	; 0x50
   443fc:	str	r0, [sp, #8]
   44400:	bl	1f4f8 <lua_atpanic@@Base+0x328>
   44404:	ldr	r3, [r0, #4]
   44408:	cmn	r3, #3
   4440c:	beq	44948 <luaL_typerror@@Base+0xe5dc>
   44410:	cmp	r7, #4
   44414:	beq	44704 <luaL_typerror@@Base+0xe398>
   44418:	and	r3, r7, #13
   4441c:	cmp	r7, #5
   44420:	cmpne	r3, #0
   44424:	bne	44934 <luaL_typerror@@Base+0xe5c8>
   44428:	ldr	r3, [sp, #12]
   4442c:	cmp	r3, #10
   44430:	beq	44934 <luaL_typerror@@Base+0xe5c8>
   44434:	ldrh	r3, [sp, #12]
   44438:	str	r3, [sp, #28]
   4443c:	orr	r3, r3, #25088	; 0x6200
   44440:	str	r3, [sp, #24]
   44444:	tst	r9, #8388608	; 0x800000
   44448:	beq	4447c <luaL_typerror@@Base+0xe110>
   4444c:	sub	r1, r5, r8
   44450:	mov	r0, r6
   44454:	asr	r1, r1, #4
   44458:	bl	26ccc <luaL_where@@Base+0x6bc8>
   4445c:	ldrh	r2, [sp, #16]
   44460:	mov	r3, #25344	; 0x6300
   44464:	strh	r3, [r6, #124]	; 0x7c
   44468:	strh	r2, [r6, #120]	; 0x78
   4446c:	strh	r0, [r6, #122]	; 0x7a
   44470:	mov	r0, r6
   44474:	bl	27498 <luaL_where@@Base+0x7394>
   44478:	str	r0, [sp, #16]
   4447c:	ldrh	r7, [r5, #8]
   44480:	cmp	r7, #0
   44484:	beq	444c4 <luaL_typerror@@Base+0xe158>
   44488:	ldr	r2, [fp]
   4448c:	add	r1, r2, r7, lsl #4
   44490:	ldr	r3, [r2, r7, lsl #4]
   44494:	lsr	r3, r3, #28
   44498:	cmp	r3, #8
   4449c:	beq	444b8 <luaL_typerror@@Base+0xe14c>
   444a0:	b	444c4 <luaL_typerror@@Base+0xe158>
   444a4:	ldr	r3, [r2, r7, lsl #4]
   444a8:	add	r1, r2, r7, lsl #4
   444ac:	lsr	r3, r3, #28
   444b0:	cmp	r3, #8
   444b4:	bne	444c4 <luaL_typerror@@Base+0xe158>
   444b8:	ldrh	r7, [r1, #8]
   444bc:	cmp	r7, #0
   444c0:	bne	444a4 <luaL_typerror@@Base+0xe138>
   444c4:	ldr	r9, [r6, #96]	; 0x60
   444c8:	ldr	r3, [pc, #1168]	; 44960 <luaL_typerror@@Base+0xe5f4>
   444cc:	ldr	r2, [r4]
   444d0:	ldr	r1, [r9, #4]
   444d4:	add	r8, r2, #8
   444d8:	cmp	r1, #0
   444dc:	add	r9, r9, #4
   444e0:	str	r3, [sp, #40]	; 0x28
   444e4:	moveq	r0, r3
   444e8:	beq	44678 <luaL_typerror@@Base+0xe30c>
   444ec:	mov	sl, #0
   444f0:	add	r3, r2, #264	; 0x108
   444f4:	str	r3, [sp, #8]
   444f8:	cmp	r7, #0
   444fc:	beq	445f0 <luaL_typerror@@Base+0xe284>
   44500:	ldr	r1, [fp]
   44504:	lsl	r7, r7, #4
   44508:	add	r3, r1, r7
   4450c:	ldrh	r0, [r1, r7]
   44510:	ldrh	r7, [r3, #8]
   44514:	ldr	r3, [r1, r0, lsl #4]
   44518:	add	r4, r1, r0, lsl #4
   4451c:	lsr	r2, r3, #28
   44520:	cmp	r2, #8
   44524:	bne	44540 <luaL_typerror@@Base+0xe1d4>
   44528:	uxth	r4, r3
   4452c:	ldr	r3, [r1, r4, lsl #4]
   44530:	add	r4, r1, r4, lsl #4
   44534:	lsr	r2, r3, #28
   44538:	cmp	r2, #8
   4453c:	beq	44528 <luaL_typerror@@Base+0xe1bc>
   44540:	and	r3, r2, #13
   44544:	cmp	r2, #5
   44548:	cmpne	r3, #0
   4454c:	movne	r2, #1
   44550:	moveq	r2, #0
   44554:	bne	445dc <luaL_typerror@@Base+0xe270>
   44558:	ldr	r3, [r9]
   4455c:	mov	r1, r4
   44560:	str	r8, [sp]
   44564:	mov	r0, r6
   44568:	bl	41160 <luaL_typerror@@Base+0xadf4>
   4456c:	ldr	r3, [r4]
   44570:	tst	r3, #-201326592	; 0xf4000000
   44574:	bne	445b4 <luaL_typerror@@Base+0xe248>
   44578:	ldr	r2, [r4, #4]
   4457c:	cmp	r2, #3
   44580:	bhi	445b4 <luaL_typerror@@Base+0xe248>
   44584:	tst	r3, #8388608	; 0x800000
   44588:	uxth	r0, r0
   4458c:	beq	44610 <luaL_typerror@@Base+0xe2a4>
   44590:	ldr	r3, [pc, #972]	; 44964 <luaL_typerror@@Base+0xe5f8>
   44594:	cmp	r2, #1
   44598:	ldr	r2, [pc, #968]	; 44968 <luaL_typerror@@Base+0xe5fc>
   4459c:	moveq	r3, #624	; 0x270
   445a0:	strh	r0, [r6, #120]	; 0x78
   445a4:	strh	r2, [r6, #124]	; 0x7c
   445a8:	strh	r3, [r6, #122]	; 0x7a
   445ac:	mov	r0, r6
   445b0:	bl	27498 <luaL_where@@Base+0x7394>
   445b4:	ldr	r2, [r9, #4]!
   445b8:	add	r3, sp, #40	; 0x28
   445bc:	cmp	r2, #0
   445c0:	str	r0, [r3, sl, lsl #2]
   445c4:	add	r8, r8, #8
   445c8:	add	sl, sl, #1
   445cc:	beq	4463c <luaL_typerror@@Base+0xe2d0>
   445d0:	ldr	r3, [sp, #8]
   445d4:	cmp	r8, r3
   445d8:	bne	444f8 <luaL_typerror@@Base+0xe18c>
   445dc:	add	r1, r6, #2336	; 0x920
   445e0:	add	r1, r1, #12
   445e4:	ldr	r0, [r6, #80]	; 0x50
   445e8:	mov	r2, #23
   445ec:	bl	210d0 <luaL_where@@Base+0xfcc>
   445f0:	ldr	r3, [r5]
   445f4:	tst	r3, #8388608	; 0x800000
   445f8:	beq	445dc <luaL_typerror@@Base+0xe270>
   445fc:	mov	r1, r8
   44600:	mov	r0, fp
   44604:	bl	4416c <luaL_typerror@@Base+0xde00>
   44608:	ldr	r1, [fp]
   4460c:	b	44514 <luaL_typerror@@Base+0xe1a8>
   44610:	ldr	r1, [pc, #852]	; 4496c <luaL_typerror@@Base+0xe600>
   44614:	ldr	r3, [pc, #852]	; 44970 <luaL_typerror@@Base+0xe604>
   44618:	cmp	r2, #1
   4461c:	moveq	r3, r1
   44620:	strh	r3, [r6, #122]	; 0x7a
   44624:	ldr	r3, [pc, #828]	; 44968 <luaL_typerror@@Base+0xe5fc>
   44628:	strh	r0, [r6, #120]	; 0x78
   4462c:	strh	r3, [r6, #124]	; 0x7c
   44630:	mov	r0, r6
   44634:	bl	27498 <luaL_where@@Base+0x7394>
   44638:	b	445b4 <luaL_typerror@@Base+0xe248>
   4463c:	cmp	sl, #1
   44640:	ldr	r0, [sp, #40]	; 0x28
   44644:	addne	sl, r3, sl, lsl #2
   44648:	addne	r7, sp, #44	; 0x2c
   4464c:	movne	r4, #25344	; 0x6300
   44650:	beq	44674 <luaL_typerror@@Base+0xe308>
   44654:	ldr	r3, [r7], #4
   44658:	strh	r0, [r6, #120]	; 0x78
   4465c:	strh	r4, [r6, #124]	; 0x7c
   44660:	strh	r3, [r6, #122]	; 0x7a
   44664:	mov	r0, r6
   44668:	bl	27498 <luaL_where@@Base+0x7394>
   4466c:	cmp	sl, r7
   44670:	bne	44654 <luaL_typerror@@Base+0xe2e8>
   44674:	uxth	r0, r0
   44678:	ldrh	r3, [sp, #24]
   4467c:	strh	r0, [r6, #120]	; 0x78
   44680:	mov	r0, r6
   44684:	strh	r3, [r6, #124]	; 0x7c
   44688:	ldrh	r3, [sp, #16]
   4468c:	strh	r3, [r6, #122]	; 0x7a
   44690:	bl	27498 <luaL_where@@Base+0x7394>
   44694:	ldr	r3, [sp, #20]
   44698:	ldr	r3, [r3]
   4469c:	and	r2, r3, #-134217728	; 0xf8000000
   446a0:	cmp	r2, #134217728	; 0x8000000
   446a4:	mov	r4, r0
   446a8:	beq	44784 <luaL_typerror@@Base+0xe418>
   446ac:	ldr	r2, [sp, #12]
   446b0:	sub	r7, r2, #21
   446b4:	cmp	r2, #5
   446b8:	cmpne	r7, #1
   446bc:	bhi	44720 <luaL_typerror@@Base+0xe3b4>
   446c0:	ldrh	r1, [r5]
   446c4:	mov	r0, r6
   446c8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   446cc:	ldr	r3, [pc, #672]	; 44974 <luaL_typerror@@Base+0xe608>
   446d0:	strh	r4, [r6, #122]	; 0x7a
   446d4:	strh	r3, [r6, #124]	; 0x7c
   446d8:	strh	r0, [r6, #120]	; 0x78
   446dc:	mov	r0, r6
   446e0:	bl	27498 <luaL_where@@Base+0x7394>
   446e4:	cmp	r7, #1
   446e8:	mov	r4, r0
   446ec:	bls	4488c <luaL_typerror@@Base+0xe520>
   446f0:	ldr	r3, [r6, #96]	; 0x60
   446f4:	mov	r2, #1
   446f8:	str	r4, [r3]
   446fc:	strb	r2, [r6, #113]	; 0x71
   44700:	b	44318 <luaL_typerror@@Base+0xdfac>
   44704:	mov	r3, #0
   44708:	str	r3, [sp, #28]
   4470c:	str	r3, [r4, #4]
   44710:	str	r3, [sp, #12]
   44714:	mov	r3, #25088	; 0x6200
   44718:	str	r3, [sp, #24]
   4471c:	b	44444 <luaL_typerror@@Base+0xe0d8>
   44720:	lsr	r3, r3, #28
   44724:	cmp	r3, #5
   44728:	beq	4489c <luaL_typerror@@Base+0xe530>
   4472c:	ldr	r3, [sp, #12]
   44730:	cmp	r3, #20
   44734:	cmpne	r3, #13
   44738:	beq	448d0 <luaL_typerror@@Base+0xe564>
   4473c:	ldr	r3, [sp, #12]
   44740:	sub	r3, r3, #15
   44744:	bics	r3, r3, #2
   44748:	beq	448fc <luaL_typerror@@Base+0xe590>
   4474c:	ldr	r3, [sp, #12]
   44750:	bic	r3, r3, #2
   44754:	cmp	r3, #16
   44758:	bne	446f0 <luaL_typerror@@Base+0xe384>
   4475c:	ldr	r3, [sp, #28]
   44760:	ldr	r2, [pc, #512]	; 44968 <luaL_typerror@@Base+0xe5fc>
   44764:	orr	r3, r3, #608	; 0x260
   44768:	strh	r0, [r6, #120]	; 0x78
   4476c:	strh	r3, [r6, #122]	; 0x7a
   44770:	strh	r2, [r6, #124]	; 0x7c
   44774:	mov	r0, r6
   44778:	bl	27498 <luaL_where@@Base+0x7394>
   4477c:	mov	r4, r0
   44780:	b	446f0 <luaL_typerror@@Base+0xe384>
   44784:	ldr	r5, [r6, #80]	; 0x50
   44788:	ldr	r8, [r5, #16]
   4478c:	ldr	r2, [r8, #-4]
   44790:	ands	r9, r2, #3
   44794:	bne	4490c <luaL_typerror@@Base+0xe5a0>
   44798:	ldrb	r1, [r2, #-1]
   4479c:	ldr	r3, [r6, #96]	; 0x60
   447a0:	cmp	r1, #1
   447a4:	beq	448c8 <luaL_typerror@@Base+0xe55c>
   447a8:	ldr	r0, [r6, #184]	; 0xb8
   447ac:	ldr	r1, [r5, #20]
   447b0:	cmp	r0, #0
   447b4:	ldr	fp, [r6, #84]	; 0x54
   447b8:	ldr	sl, [r3, #-4]
   447bc:	ble	4490c <luaL_typerror@@Base+0xe5a0>
   447c0:	ldrb	r7, [r2, #-3]
   447c4:	ldr	r0, [pc, #428]	; 44978 <luaL_typerror@@Base+0xe60c>
   447c8:	str	r2, [r6, #84]	; 0x54
   447cc:	add	r7, r7, #1
   447d0:	str	r8, [r5, #20]
   447d4:	sub	r2, r8, r7, lsl #3
   447d8:	str	r2, [r5, #16]
   447dc:	str	r0, [r3, #-4]
   447e0:	ldr	ip, [r6, #108]	; 0x6c
   447e4:	ldr	r0, [r6, #184]	; 0xb8
   447e8:	lsl	r2, r7, #2
   447ec:	sub	r3, r3, r2
   447f0:	sub	ip, ip, r7
   447f4:	sub	r0, r0, #1
   447f8:	str	r3, [r6, #96]	; 0x60
   447fc:	str	r7, [r6, #104]	; 0x68
   44800:	str	ip, [r6, #108]	; 0x6c
   44804:	str	r0, [r6, #184]	; 0xb8
   44808:	mov	r0, r6
   4480c:	str	r1, [sp, #12]
   44810:	str	r2, [sp, #8]
   44814:	bl	2e158 <luaL_where@@Base+0xe054>
   44818:	ldr	r3, [r6, #96]	; 0x60
   4481c:	ldr	r2, [sp, #8]
   44820:	ldr	r0, [r6, #184]	; 0xb8
   44824:	ldr	ip, [r6, #108]	; 0x6c
   44828:	add	r3, r3, r2
   4482c:	ldr	r1, [sp, #12]
   44830:	add	r2, r0, #1
   44834:	add	r7, ip, r7
   44838:	mov	r0, #1
   4483c:	str	r1, [r5, #20]
   44840:	str	r8, [r5, #16]
   44844:	mov	r1, r9
   44848:	str	r3, [r6, #96]	; 0x60
   4484c:	str	r2, [r6, #184]	; 0xb8
   44850:	str	r0, [r6, #104]	; 0x68
   44854:	str	r7, [r6, #108]	; 0x6c
   44858:	mov	r0, r6
   4485c:	str	sl, [r3, #-4]
   44860:	str	fp, [r6, #84]	; 0x54
   44864:	bl	26ccc <luaL_where@@Base+0x6bc8>
   44868:	ldr	r2, [pc, #268]	; 4497c <luaL_typerror@@Base+0xe610>
   4486c:	mov	r3, #3
   44870:	strh	r4, [r6, #120]	; 0x78
   44874:	str	r3, [r6, #264]	; 0x108
   44878:	strh	r2, [r6, #124]	; 0x7c
   4487c:	ldr	r3, [r6, #96]	; 0x60
   44880:	ldr	r4, [pc, #248]	; 44980 <luaL_typerror@@Base+0xe614>
   44884:	strh	r0, [r6, #122]	; 0x7a
   44888:	b	446f4 <luaL_typerror@@Base+0xe388>
   4488c:	mov	r3, #1
   44890:	strb	r3, [r6, #268]	; 0x10c
   44894:	ldr	r3, [r6, #96]	; 0x60
   44898:	b	446f4 <luaL_typerror@@Base+0xe388>
   4489c:	ldrh	r1, [r5]
   448a0:	mov	r0, r6
   448a4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   448a8:	ldr	r3, [pc, #196]	; 44974 <luaL_typerror@@Base+0xe608>
   448ac:	strh	r4, [r6, #122]	; 0x7a
   448b0:	strh	r3, [r6, #124]	; 0x7c
   448b4:	strh	r0, [r6, #120]	; 0x78
   448b8:	mov	r0, r6
   448bc:	bl	27498 <luaL_where@@Base+0x7394>
   448c0:	mov	r4, r0
   448c4:	b	446f0 <luaL_typerror@@Base+0xe384>
   448c8:	ldr	r4, [pc, #144]	; 44960 <luaL_typerror@@Base+0xe5f4>
   448cc:	b	446f4 <luaL_typerror@@Base+0xe388>
   448d0:	ldr	r2, [sp, #28]
   448d4:	ldr	r3, [pc, #168]	; 44984 <luaL_typerror@@Base+0xe618>
   448d8:	orr	r2, r2, #448	; 0x1c0
   448dc:	strh	r4, [r6, #120]	; 0x78
   448e0:	strh	r3, [r6, #124]	; 0x7c
   448e4:	strh	r2, [r6, #122]	; 0x7a
   448e8:	mov	r0, r6
   448ec:	bl	27498 <luaL_where@@Base+0x7394>
   448f0:	ldr	r3, [r6, #96]	; 0x60
   448f4:	mov	r4, r0
   448f8:	b	446f4 <luaL_typerror@@Base+0xe388>
   448fc:	ldr	r2, [sp, #28]
   44900:	ldr	r3, [pc, #96]	; 44968 <luaL_typerror@@Base+0xe5fc>
   44904:	orr	r2, r2, #2656	; 0xa60
   44908:	b	448dc <luaL_typerror@@Base+0xe570>
   4490c:	add	r1, r6, #2336	; 0x920
   44910:	add	r1, r1, #12
   44914:	mov	r0, r5
   44918:	mov	r2, #23
   4491c:	bl	210d0 <luaL_where@@Base+0xfcc>
   44920:	add	r1, r6, #2336	; 0x920
   44924:	add	r1, r1, #12
   44928:	ldr	r0, [r6, #80]	; 0x50
   4492c:	mov	r2, #11
   44930:	bl	210d0 <luaL_where@@Base+0xfcc>
   44934:	add	r1, r6, #2336	; 0x920
   44938:	add	r1, r1, #12
   4493c:	ldr	r0, [sp, #8]
   44940:	mov	r2, #23
   44944:	bl	210d0 <luaL_where@@Base+0xfcc>
   44948:	add	r1, r6, #2336	; 0x920
   4494c:	add	r1, r1, #12
   44950:	ldr	r0, [sp, #8]
   44954:	mov	r2, #5
   44958:	bl	210d0 <luaL_where@@Base+0xfcc>
   4495c:	andeq	r4, r0, r5, lsl #10
   44960:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   44964:	andeq	r0, r0, r2, ror r2
   44968:	andeq	r5, r0, r3, lsl sl
   4496c:	andeq	r0, r0, pc, ror #20
   44970:	andeq	r0, r0, r1, ror sl
   44974:	andeq	r5, r0, sl, lsl #7
   44978:	strdeq	r7, [r0, -lr]
   4497c:	muleq	r0, r3, r9
   44980:	andeq	r7, r0, #1012	; 0x3f4
   44984:	andeq	r5, r0, lr, lsl #20
   44988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4498c:	mov	r7, r0
   44990:	ldr	sl, [pc, #3136]	; 455d8 <luaL_typerror@@Base+0xf26c>
   44994:	ldr	r9, [r0, #-156]	; 0xffffff64
   44998:	sub	sp, sp, #60	; 0x3c
   4499c:	mov	fp, r1
   449a0:	mov	r5, #0
   449a4:	ldr	r1, [r7, #96]	; 0x60
   449a8:	ldr	r6, [r1, r5]
   449ac:	cmp	r6, #0
   449b0:	beq	45590 <luaL_typerror@@Base+0xf224>
   449b4:	and	r2, r6, #520093696	; 0x1f000000
   449b8:	cmp	r2, #167772160	; 0xa000000
   449bc:	beq	44b60 <luaL_typerror@@Base+0xe7f4>
   449c0:	cmp	r2, #0
   449c4:	beq	44b44 <luaL_typerror@@Base+0xe7d8>
   449c8:	lsr	r3, r6, #24
   449cc:	and	r3, r3, #31
   449d0:	sub	r3, r3, #15
   449d4:	ldr	r4, [r9]
   449d8:	cmp	r3, #4
   449dc:	addls	r4, r4, #144	; 0x90
   449e0:	bls	449fc <luaL_typerror@@Base+0xe690>
   449e4:	cmp	r2, #67108864	; 0x4000000
   449e8:	beq	450bc <luaL_typerror@@Base+0xed50>
   449ec:	cmp	r2, #234881024	; 0xe000000
   449f0:	addeq	r4, r4, #224	; 0xe0
   449f4:	addne	r4, r4, #272	; 0x110
   449f8:	movne	r6, #0
   449fc:	add	r2, sp, #48	; 0x30
   44a00:	add	r3, sp, #40	; 0x28
   44a04:	str	r4, [r5, r2]
   44a08:	str	r6, [r5, r3]
   44a0c:	add	r5, r5, #4
   44a10:	cmp	r5, #8
   44a14:	bne	449a4 <luaL_typerror@@Base+0xe638>
   44a18:	ldr	r4, [sp, #40]	; 0x28
   44a1c:	cmp	r4, #0
   44a20:	beq	44aa0 <luaL_typerror@@Base+0xe734>
   44a24:	ldr	r5, [sp, #44]	; 0x2c
   44a28:	ldr	r6, [fp, #8]
   44a2c:	cmp	r5, #0
   44a30:	ldr	r8, [sp, #48]	; 0x30
   44a34:	beq	44a94 <luaL_typerror@@Base+0xe728>
   44a38:	ldr	r3, [r8]
   44a3c:	lsrs	r2, r3, #28
   44a40:	bne	44a94 <luaL_typerror@@Base+0xe728>
   44a44:	ldr	sl, [sp, #52]	; 0x34
   44a48:	ldr	r2, [sl]
   44a4c:	lsrs	r1, r2, #28
   44a50:	bne	44a94 <luaL_typerror@@Base+0xe728>
   44a54:	mov	r1, #1
   44a58:	ands	r0, r3, #8388608	; 0x800000
   44a5c:	strb	r1, [r7, #268]	; 0x10c
   44a60:	beq	44e78 <luaL_typerror@@Base+0xeb0c>
   44a64:	ldr	r1, [r8, #4]
   44a68:	cmp	r1, #8
   44a6c:	bne	44e78 <luaL_typerror@@Base+0xeb0c>
   44a70:	mov	r2, #4800	; 0x12c0
   44a74:	mov	r3, #22
   44a78:	str	r2, [sp, #24]
   44a7c:	mov	r2, #12
   44a80:	str	r3, [sp, #12]
   44a84:	str	r3, [sp, #20]
   44a88:	str	r2, [sp, #16]
   44a8c:	ldr	r3, [pc, #2888]	; 455dc <luaL_typerror@@Base+0xf270>
   44a90:	b	44f40 <luaL_typerror@@Base+0xebd4>
   44a94:	ldr	sl, [r7, #-156]	; 0xffffff64
   44a98:	cmp	r5, #0
   44a9c:	bne	44d00 <luaL_typerror@@Base+0xe994>
   44aa0:	ldr	r3, [r7, #96]	; 0x60
   44aa4:	ldr	r1, [r3]
   44aa8:	cmp	r1, #0
   44aac:	bne	44c7c <luaL_typerror@@Base+0xe910>
   44ab0:	ldr	r4, [fp, #8]
   44ab4:	cmp	r4, #4
   44ab8:	bne	45590 <luaL_typerror@@Base+0xf224>
   44abc:	ldr	r3, [sp, #40]	; 0x28
   44ac0:	cmp	r3, #0
   44ac4:	beq	45238 <luaL_typerror@@Base+0xeecc>
   44ac8:	ldr	r2, [sp, #44]	; 0x2c
   44acc:	cmp	r2, #0
   44ad0:	beq	45238 <luaL_typerror@@Base+0xeecc>
   44ad4:	ldrd	r0, [sp, #48]	; 0x30
   44ad8:	ldr	r0, [r0]
   44adc:	ldr	r1, [r1]
   44ae0:	lsrs	r0, r0, #28
   44ae4:	movne	r0, #1
   44ae8:	moveq	r0, #0
   44aec:	lsrs	r1, r1, #28
   44af0:	moveq	r1, #1
   44af4:	movne	r1, #0
   44af8:	cmp	r0, r1
   44afc:	beq	45238 <luaL_typerror@@Base+0xeecc>
   44b00:	ldr	r1, [r7, #96]	; 0x60
   44b04:	ldr	ip, [pc, #2772]	; 455e0 <luaL_typerror@@Base+0xf274>
   44b08:	ldr	r0, [pc, #2772]	; 455e4 <luaL_typerror@@Base+0xf278>
   44b0c:	strh	r3, [r7, #120]	; 0x78
   44b10:	mov	r3, #2
   44b14:	strh	r2, [r7, #122]	; 0x7a
   44b18:	strh	ip, [r7, #124]	; 0x7c
   44b1c:	str	r3, [r7, #264]	; 0x108
   44b20:	str	r0, [r1]
   44b24:	ldr	r3, [r7, #80]	; 0x50
   44b28:	ldr	r2, [r3, #16]
   44b2c:	ldr	r3, [r2, #-4]
   44b30:	and	r3, r3, #7
   44b34:	cmp	r3, #2
   44b38:	beq	452cc <luaL_typerror@@Base+0xef60>
   44b3c:	add	sp, sp, #60	; 0x3c
   44b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44b44:	mov	r1, #25
   44b48:	mov	r0, r7
   44b4c:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   44b50:	ldr	r4, [r9]
   44b54:	add	r4, r4, #272	; 0x110
   44b58:	mov	r6, r0
   44b5c:	b	449fc <luaL_typerror@@Base+0xe690>
   44b60:	ldr	r2, [fp]
   44b64:	mov	r1, r6
   44b68:	add	r2, r2, r5, lsl #1
   44b6c:	mov	r0, r7
   44b70:	bl	28d54 <luaL_where@@Base+0x8c50>
   44b74:	ldr	r1, [r9]
   44b78:	ldrh	r8, [r0, #6]
   44b7c:	ldr	r3, [r1, r8, lsl #4]
   44b80:	add	r4, r1, r8, lsl #4
   44b84:	lsr	r2, r3, #28
   44b88:	cmp	r2, #8
   44b8c:	bne	44ba8 <luaL_typerror@@Base+0xe83c>
   44b90:	uxth	r4, r3
   44b94:	ldr	r3, [r1, r4, lsl #4]
   44b98:	add	r4, r1, r4, lsl #4
   44b9c:	lsr	r2, r3, #28
   44ba0:	cmp	r2, #8
   44ba4:	beq	44b90 <luaL_typerror@@Base+0xe824>
   44ba8:	mov	r1, r4
   44bac:	mov	r0, r9
   44bb0:	str	r2, [sp, #12]
   44bb4:	bl	1e228 <_start@@Base+0xae78>
   44bb8:	ldr	r2, [sp, #12]
   44bbc:	uxth	r6, r6
   44bc0:	cmp	r2, #2
   44bc4:	beq	45140 <luaL_typerror@@Base+0xedd4>
   44bc8:	sub	r1, r0, #21
   44bcc:	cmp	r1, #1
   44bd0:	bls	45304 <luaL_typerror@@Base+0xef98>
   44bd4:	sub	r1, r0, #19
   44bd8:	cmp	r1, #1
   44bdc:	bls	45370 <luaL_typerror@@Base+0xf004>
   44be0:	cmp	r2, #6
   44be4:	beq	45330 <luaL_typerror@@Base+0xefc4>
   44be8:	str	r0, [sp, #12]
   44bec:	mov	r1, #8
   44bf0:	mov	r0, r7
   44bf4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   44bf8:	strh	r6, [r7, #120]	; 0x78
   44bfc:	strh	sl, [r7, #124]	; 0x7c
   44c00:	strh	r0, [r7, #122]	; 0x7a
   44c04:	mov	r0, r7
   44c08:	bl	27498 <luaL_where@@Base+0x7394>
   44c0c:	ldr	r8, [r4]
   44c10:	mov	r6, r0
   44c14:	ldr	r3, [sp, #12]
   44c18:	lsr	r2, r8, #28
   44c1c:	cmp	r2, #5
   44c20:	uxtheq	r8, r8
   44c24:	ldreq	r4, [r9]
   44c28:	ldreq	r2, [r4, r8, lsl #4]
   44c2c:	addeq	r4, r4, r8, lsl #4
   44c30:	lsreq	r2, r2, #28
   44c34:	cmp	r2, #0
   44c38:	bne	449fc <luaL_typerror@@Base+0xe690>
   44c3c:	cmp	r3, #10
   44c40:	moveq	r6, r2
   44c44:	beq	449fc <luaL_typerror@@Base+0xe690>
   44c48:	sub	r2, r3, #21
   44c4c:	cmp	r2, #1
   44c50:	movls	r2, #1
   44c54:	strbls	r2, [r7, #268]	; 0x10c
   44c58:	orr	r3, r3, #17920	; 0x4600
   44c5c:	mov	r2, #0
   44c60:	strh	r6, [r7, #120]	; 0x78
   44c64:	strh	r3, [r7, #124]	; 0x7c
   44c68:	strh	r2, [r7, #122]	; 0x7a
   44c6c:	mov	r0, r7
   44c70:	bl	27498 <luaL_where@@Base+0x7394>
   44c74:	mov	r6, r0
   44c78:	b	449fc <luaL_typerror@@Base+0xe690>
   44c7c:	ldr	r2, [fp]
   44c80:	ldr	r0, [r2, #4]
   44c84:	cmn	r0, #11
   44c88:	beq	45244 <luaL_typerror@@Base+0xeed8>
   44c8c:	ldr	r1, [r3, #4]
   44c90:	cmp	r1, #0
   44c94:	beq	44ab0 <luaL_typerror@@Base+0xe744>
   44c98:	ldr	r3, [r2, #12]
   44c9c:	cmn	r3, #11
   44ca0:	bne	44ab0 <luaL_typerror@@Base+0xe744>
   44ca4:	add	r2, r2, #8
   44ca8:	mov	r0, r7
   44cac:	bl	28d54 <luaL_where@@Base+0x8c50>
   44cb0:	ldr	ip, [r9]
   44cb4:	ldrh	r1, [r0, #6]
   44cb8:	ldr	r3, [ip, r1, lsl #4]
   44cbc:	lsr	r2, r3, #28
   44cc0:	cmp	r2, #8
   44cc4:	bne	44cdc <luaL_typerror@@Base+0xe970>
   44cc8:	uxth	r3, r3
   44ccc:	ldr	r3, [ip, r3, lsl #4]
   44cd0:	lsr	r2, r3, #28
   44cd4:	cmp	r2, #8
   44cd8:	beq	44cc8 <luaL_typerror@@Base+0xe95c>
   44cdc:	ldr	r4, [fp, #8]
   44ce0:	cmp	r2, #2
   44ce4:	uxtheq	r1, r3
   44ce8:	mov	r0, r9
   44cec:	mov	r2, r4
   44cf0:	bl	1f3c4 <lua_atpanic@@Base+0x1f4>
   44cf4:	cmp	r0, #0
   44cf8:	bne	45298 <luaL_typerror@@Base+0xef2c>
   44cfc:	b	44ab4 <luaL_typerror@@Base+0xe748>
   44d00:	ldr	r3, [r8]
   44d04:	lsr	r2, r3, #28
   44d08:	cmp	r2, #2
   44d0c:	beq	45068 <luaL_typerror@@Base+0xecfc>
   44d10:	and	r1, r3, #-67108864	; 0xfc000000
   44d14:	cmp	r1, #805306368	; 0x30000000
   44d18:	beq	45068 <luaL_typerror@@Base+0xecfc>
   44d1c:	cmp	r2, #0
   44d20:	cmpeq	r6, #10
   44d24:	bne	44aa0 <luaL_typerror@@Base+0xe734>
   44d28:	ldr	r8, [sp, #52]	; 0x34
   44d2c:	ldr	r3, [r8]
   44d30:	lsr	r2, r3, #28
   44d34:	cmp	r2, #2
   44d38:	beq	44d48 <luaL_typerror@@Base+0xe9dc>
   44d3c:	and	r2, r3, #-67108864	; 0xfc000000
   44d40:	cmp	r2, #805306368	; 0x30000000
   44d44:	bne	44aa0 <luaL_typerror@@Base+0xe734>
   44d48:	str	r5, [sp, #40]	; 0x28
   44d4c:	str	r5, [sp, #12]
   44d50:	mov	r5, r4
   44d54:	str	r4, [sp, #44]	; 0x2c
   44d58:	ldr	r1, [sl]
   44d5c:	uxth	r3, r3
   44d60:	lsr	ip, r5, #24
   44d64:	ldr	r2, [r1, r3, lsl #4]
   44d68:	and	ip, ip, #31
   44d6c:	add	r3, r1, r3, lsl #4
   44d70:	lsr	r0, r2, #28
   44d74:	cmp	r0, #8
   44d78:	bne	44d94 <luaL_typerror@@Base+0xea28>
   44d7c:	uxth	r3, r2
   44d80:	ldr	r2, [r1, r3, lsl #4]
   44d84:	add	r3, r1, r3, lsl #4
   44d88:	lsr	r0, r2, #28
   44d8c:	cmp	r0, #8
   44d90:	beq	44d7c <luaL_typerror@@Base+0xea10>
   44d94:	cmp	r0, #5
   44d98:	mvnhi	r4, #0
   44d9c:	ldrls	r4, [r3, #4]
   44da0:	sub	r3, ip, #15
   44da4:	cmp	r3, #5
   44da8:	uxth	r5, r5
   44dac:	bls	44de4 <luaL_typerror@@Base+0xea78>
   44db0:	sub	r3, ip, #13
   44db4:	cmp	r3, #1
   44db8:	movhi	r3, #0
   44dbc:	movls	r3, #4096	; 0x1000
   44dc0:	orr	ip, ip, #608	; 0x260
   44dc4:	orr	ip, r3, ip
   44dc8:	ldr	r3, [pc, #2072]	; 455e8 <luaL_typerror@@Base+0xf27c>
   44dcc:	strh	r5, [r7, #120]	; 0x78
   44dd0:	strh	ip, [r7, #122]	; 0x7a
   44dd4:	strh	r3, [r7, #124]	; 0x7c
   44dd8:	mov	r0, r7
   44ddc:	bl	27498 <luaL_where@@Base+0x7394>
   44de0:	uxth	r5, r0
   44de4:	mov	r1, r4
   44de8:	mov	r0, r7
   44dec:	bl	26ccc <luaL_where@@Base+0x6bc8>
   44df0:	ldr	r3, [pc, #2036]	; 455ec <luaL_typerror@@Base+0xf280>
   44df4:	strh	r5, [r7, #120]	; 0x78
   44df8:	strh	r3, [r7, #124]	; 0x7c
   44dfc:	strh	r0, [r7, #122]	; 0x7a
   44e00:	mov	r0, r7
   44e04:	bl	27498 <luaL_where@@Base+0x7394>
   44e08:	add	r3, r6, #31
   44e0c:	ldrh	r2, [sp, #12]
   44e10:	lsl	r3, r3, #8
   44e14:	orr	r3, r3, #5
   44e18:	strh	r3, [r7, #124]	; 0x7c
   44e1c:	strh	r2, [r7, #120]	; 0x78
   44e20:	strh	r0, [r7, #122]	; 0x7a
   44e24:	mov	r0, r7
   44e28:	bl	27498 <luaL_where@@Base+0x7394>
   44e2c:	ldrh	r1, [r8]
   44e30:	mov	r2, #4
   44e34:	orr	r1, r1, #536870912	; 0x20000000
   44e38:	orr	r1, r1, #131072	; 0x20000
   44e3c:	mov	r4, r0
   44e40:	mov	r0, sl
   44e44:	bl	41060 <luaL_typerror@@Base+0xacf4>
   44e48:	mov	r1, r0
   44e4c:	mov	r0, r7
   44e50:	bl	26ccc <luaL_where@@Base+0x6bc8>
   44e54:	ldr	r3, [pc, #1940]	; 455f0 <luaL_typerror@@Base+0xf284>
   44e58:	strh	r4, [r7, #122]	; 0x7a
   44e5c:	strh	r3, [r7, #124]	; 0x7c
   44e60:	strh	r0, [r7, #120]	; 0x78
   44e64:	mov	r0, r7
   44e68:	bl	27498 <luaL_where@@Base+0x7394>
   44e6c:	cmp	r0, #0
   44e70:	bne	4504c <luaL_typerror@@Base+0xece0>
   44e74:	b	44aa0 <luaL_typerror@@Base+0xe734>
   44e78:	ands	r1, r2, #8388608	; 0x800000
   44e7c:	beq	44e8c <luaL_typerror@@Base+0xeb20>
   44e80:	ldr	ip, [sl, #4]
   44e84:	cmp	ip, #8
   44e88:	beq	44a70 <luaL_typerror@@Base+0xe704>
   44e8c:	cmp	r6, #9
   44e90:	bhi	44f20 <luaL_typerror@@Base+0xebb4>
   44e94:	orr	ip, r3, r2
   44e98:	tst	ip, #67108864	; 0x4000000
   44e9c:	bne	44f20 <luaL_typerror@@Base+0xebb4>
   44ea0:	ldr	ip, [r8, #4]
   44ea4:	cmp	ip, #4
   44ea8:	bne	44f20 <luaL_typerror@@Base+0xebb4>
   44eac:	ldr	ip, [sl, #4]
   44eb0:	cmp	ip, #4
   44eb4:	bne	44f20 <luaL_typerror@@Base+0xebb4>
   44eb8:	eor	r3, r3, r2
   44ebc:	tst	r3, #8388608	; 0x800000
   44ec0:	beq	451b0 <luaL_typerror@@Base+0xee44>
   44ec4:	tst	r5, #32768	; 0x8000
   44ec8:	bne	44ee0 <luaL_typerror@@Base+0xeb74>
   44ecc:	ldr	r3, [r7, #16]
   44ed0:	uxth	r2, r5
   44ed4:	ldr	r3, [r3, r2, lsl #3]
   44ed8:	cmp	r3, #0
   44edc:	bge	451b0 <luaL_typerror@@Base+0xee44>
   44ee0:	tst	r4, #32768	; 0x8000
   44ee4:	bne	44f20 <luaL_typerror@@Base+0xebb4>
   44ee8:	ldr	r3, [r7, #16]
   44eec:	uxth	r2, r4
   44ef0:	ldr	r3, [r3, r2, lsl #3]
   44ef4:	cmp	r3, #0
   44ef8:	bge	455a4 <luaL_typerror@@Base+0xf238>
   44efc:	mov	r2, #21
   44f00:	ldr	r1, [pc, #1772]	; 455f4 <luaL_typerror@@Base+0xf288>
   44f04:	str	r2, [sp, #12]
   44f08:	str	r2, [sp, #20]
   44f0c:	mov	r2, #11
   44f10:	ldr	r3, [pc, #1760]	; 455f8 <luaL_typerror@@Base+0xf28c>
   44f14:	str	r1, [sp, #24]
   44f18:	str	r2, [sp, #16]
   44f1c:	b	44f40 <luaL_typerror@@Base+0xebd4>
   44f20:	mov	r3, #21
   44f24:	ldr	r2, [pc, #1736]	; 455f4 <luaL_typerror@@Base+0xf288>
   44f28:	str	r3, [sp, #12]
   44f2c:	str	r3, [sp, #20]
   44f30:	ldr	r3, [pc, #1728]	; 455f8 <luaL_typerror@@Base+0xf28c>
   44f34:	str	r2, [sp, #24]
   44f38:	mov	r2, #11
   44f3c:	str	r2, [sp, #16]
   44f40:	lsr	r2, r4, #24
   44f44:	and	r2, r2, #31
   44f48:	sub	r1, r2, #13
   44f4c:	cmp	r1, #1
   44f50:	bls	4546c <luaL_typerror@@Base+0xf100>
   44f54:	sub	r2, r2, #21
   44f58:	cmp	r2, #1
   44f5c:	bls	44f98 <luaL_typerror@@Base+0xec2c>
   44f60:	ldr	r2, [sp, #12]
   44f64:	cmp	r0, #0
   44f68:	orr	r1, r2, #23040	; 0x5a00
   44f6c:	uxth	r4, r4
   44f70:	orreq	r2, r3, #2048	; 0x800
   44f74:	movne	r2, r3
   44f78:	strh	r1, [r7, #124]	; 0x7c
   44f7c:	strh	r4, [r7, #120]	; 0x78
   44f80:	strh	r2, [r7, #122]	; 0x7a
   44f84:	mov	r0, r7
   44f88:	str	r3, [sp, #28]
   44f8c:	bl	27498 <luaL_where@@Base+0x7394>
   44f90:	ldr	r3, [sp, #28]
   44f94:	str	r0, [sp, #40]	; 0x28
   44f98:	lsr	r2, r5, #24
   44f9c:	and	r2, r2, #31
   44fa0:	sub	r1, r2, #13
   44fa4:	cmp	r1, #1
   44fa8:	bls	45440 <luaL_typerror@@Base+0xf0d4>
   44fac:	sub	r2, r2, #21
   44fb0:	cmp	r2, #1
   44fb4:	bls	44fe8 <luaL_typerror@@Base+0xec7c>
   44fb8:	ldr	r2, [sl]
   44fbc:	uxth	r5, r5
   44fc0:	tst	r2, #8388608	; 0x800000
   44fc4:	ldr	r2, [sp, #12]
   44fc8:	orreq	r3, r3, #2048	; 0x800
   44fcc:	orr	r2, r2, #23040	; 0x5a00
   44fd0:	strh	r2, [r7, #124]	; 0x7c
   44fd4:	strh	r5, [r7, #120]	; 0x78
   44fd8:	strh	r3, [r7, #122]	; 0x7a
   44fdc:	mov	r0, r7
   44fe0:	bl	27498 <luaL_where@@Base+0x7394>
   44fe4:	str	r0, [sp, #44]	; 0x2c
   44fe8:	ldrd	r4, [sp, #40]	; 0x28
   44fec:	cmp	r6, #9
   44ff0:	uxth	r1, r4
   44ff4:	uxth	r2, r5
   44ff8:	bls	451cc <luaL_typerror@@Base+0xee60>
   44ffc:	ldr	r3, [sp, #12]
   45000:	add	r6, r6, #31
   45004:	strh	r2, [r7, #122]	; 0x7a
   45008:	orr	sl, r3, r6, lsl #8
   4500c:	strh	r1, [r7, #120]	; 0x78
   45010:	strh	sl, [r7, #124]	; 0x7c
   45014:	mov	r0, r7
   45018:	bl	27498 <luaL_where@@Base+0x7394>
   4501c:	ldr	r1, [sp, #16]
   45020:	mov	r6, r0
   45024:	mov	r0, r7
   45028:	bl	26ccc <luaL_where@@Base+0x6bc8>
   4502c:	ldr	r3, [pc, #1468]	; 455f0 <luaL_typerror@@Base+0xf284>
   45030:	strh	r6, [r7, #122]	; 0x7a
   45034:	strh	r3, [r7, #124]	; 0x7c
   45038:	strh	r0, [r7, #120]	; 0x78
   4503c:	mov	r0, r7
   45040:	bl	27498 <luaL_where@@Base+0x7394>
   45044:	cmp	r0, #0
   45048:	beq	455c4 <luaL_typerror@@Base+0xf258>
   4504c:	ldr	r2, [r7, #264]	; 0x108
   45050:	ldr	r3, [r7, #96]	; 0x60
   45054:	cmp	r2, #2
   45058:	str	r0, [r3]
   4505c:	beq	44b24 <luaL_typerror@@Base+0xe7b8>
   45060:	add	sp, sp, #60	; 0x3c
   45064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45068:	cmp	r6, #4
   4506c:	cmpne	r6, #11
   45070:	bne	45228 <luaL_typerror@@Base+0xeebc>
   45074:	ldr	r2, [sp, #52]	; 0x34
   45078:	ldr	r2, [r2]
   4507c:	lsr	r1, r2, #28
   45080:	cmp	r1, #2
   45084:	beq	453ac <luaL_typerror@@Base+0xf040>
   45088:	and	r2, r2, #-67108864	; 0xfc000000
   4508c:	cmp	r2, #805306368	; 0x30000000
   45090:	beq	453ac <luaL_typerror@@Base+0xf040>
   45094:	sub	r2, r6, #10
   45098:	cmp	r2, #1
   4509c:	bhi	44aa0 <luaL_typerror@@Base+0xe734>
   450a0:	ldr	r2, [sp, #52]	; 0x34
   450a4:	ldr	r2, [r2]
   450a8:	lsrs	r2, r2, #28
   450ac:	bne	44aa0 <luaL_typerror@@Base+0xe734>
   450b0:	ldr	r2, [sp, #40]	; 0x28
   450b4:	str	r2, [sp, #12]
   450b8:	b	44d58 <luaL_typerror@@Base+0xe9ec>
   450bc:	rsb	r3, r5, r5, lsl #31
   450c0:	ldr	r2, [fp]
   450c4:	rsb	r0, r5, #4
   450c8:	lsl	r3, r3, #1
   450cc:	add	r3, r3, #8
   450d0:	ldr	r1, [r1, r0]
   450d4:	add	r2, r2, r3
   450d8:	mov	r0, r7
   450dc:	bl	28d54 <luaL_where@@Base+0x8c50>
   450e0:	ldr	r1, [r9]
   450e4:	ldrh	r4, [r0, #6]
   450e8:	b	450f0 <luaL_typerror@@Base+0xed84>
   450ec:	uxth	r4, r3
   450f0:	ldr	r3, [r1, r4, lsl #4]
   450f4:	add	r4, r1, r4, lsl #4
   450f8:	lsr	r2, r3, #28
   450fc:	cmp	r2, #8
   45100:	beq	450ec <luaL_typerror@@Base+0xed80>
   45104:	cmp	r2, #5
   45108:	beq	454a0 <luaL_typerror@@Base+0xf134>
   4510c:	cmp	r2, #2
   45110:	addne	r4, r1, #272	; 0x110
   45114:	bne	449fc <luaL_typerror@@Base+0xe690>
   45118:	mov	r1, #16
   4511c:	mov	r0, r7
   45120:	bl	26ccc <luaL_where@@Base+0x6bc8>
   45124:	strh	r6, [r7, #120]	; 0x78
   45128:	strh	sl, [r7, #124]	; 0x7c
   4512c:	strh	r0, [r7, #122]	; 0x7a
   45130:	mov	r0, r7
   45134:	bl	27498 <luaL_where@@Base+0x7394>
   45138:	mov	r6, r0
   4513c:	b	449fc <luaL_typerror@@Base+0xe690>
   45140:	orr	r2, r0, #17664	; 0x4500
   45144:	mov	r1, #15
   45148:	str	r0, [sp, #12]
   4514c:	strh	r6, [r7, #120]	; 0x78
   45150:	strh	r2, [r7, #124]	; 0x7c
   45154:	strh	r1, [r7, #122]	; 0x7a
   45158:	mov	r0, r7
   4515c:	bl	27498 <luaL_where@@Base+0x7394>
   45160:	ldr	r8, [r4]
   45164:	ldr	r2, [pc, #1168]	; 455fc <luaL_typerror@@Base+0xf290>
   45168:	and	r2, r2, r8
   4516c:	cmp	r2, #545259520	; 0x20800000
   45170:	mov	r6, r0
   45174:	bne	44c14 <luaL_typerror@@Base+0xe8a8>
   45178:	ldr	r3, [r9]
   4517c:	uxth	r2, r8
   45180:	ldr	r8, [r3, r2, lsl #4]
   45184:	add	r4, r3, r2, lsl #4
   45188:	lsr	r2, r8, #28
   4518c:	cmp	r2, #8
   45190:	beq	4517c <luaL_typerror@@Base+0xee10>
   45194:	mov	r1, r4
   45198:	mov	r0, r9
   4519c:	str	r2, [sp, #12]
   451a0:	bl	1e228 <_start@@Base+0xae78>
   451a4:	ldr	r2, [sp, #12]
   451a8:	mov	r3, r0
   451ac:	b	44c1c <luaL_typerror@@Base+0xe8b0>
   451b0:	cmp	r0, #0
   451b4:	uxth	r1, r4
   451b8:	uxth	r2, r5
   451bc:	beq	455b4 <luaL_typerror@@Base+0xf248>
   451c0:	mov	r3, #20
   451c4:	str	r3, [sp, #12]
   451c8:	str	r3, [sp, #20]
   451cc:	cmp	r6, #4
   451d0:	moveq	r3, #2048	; 0x800
   451d4:	beq	451f8 <luaL_typerror@@Base+0xee8c>
   451d8:	ldr	r3, [sp, #20]
   451dc:	cmp	r6, #6
   451e0:	bic	r0, r3, #2
   451e4:	moveq	r3, #0
   451e8:	movne	r3, #2
   451ec:	cmp	r0, #20
   451f0:	addeq	r3, r3, #4
   451f4:	lsl	r3, r3, #8
   451f8:	ldr	ip, [sp, #12]
   451fc:	ldr	r0, [r7, #96]	; 0x60
   45200:	orr	sl, ip, #128	; 0x80
   45204:	orr	r3, r3, sl
   45208:	ldr	ip, [pc, #980]	; 455e4 <luaL_typerror@@Base+0xf278>
   4520c:	strh	r3, [r7, #124]	; 0x7c
   45210:	mov	r3, #2
   45214:	strh	r1, [r7, #120]	; 0x78
   45218:	strh	r2, [r7, #122]	; 0x7a
   4521c:	str	r3, [r7, #264]	; 0x108
   45220:	str	ip, [r0]
   45224:	b	44b24 <luaL_typerror@@Base+0xe7b8>
   45228:	sub	r2, r6, #6
   4522c:	cmp	r2, #1
   45230:	bhi	45094 <luaL_typerror@@Base+0xed28>
   45234:	b	45074 <luaL_typerror@@Base+0xed08>
   45238:	ldr	r2, [r7, #264]	; 0x108
   4523c:	ldr	r0, [pc, #956]	; 45600 <luaL_typerror@@Base+0xf294>
   45240:	b	45050 <luaL_typerror@@Base+0xece4>
   45244:	mov	r0, r7
   45248:	bl	28d54 <luaL_where@@Base+0x8c50>
   4524c:	ldr	ip, [r9]
   45250:	ldrh	r1, [r0, #6]
   45254:	ldr	r3, [ip, r1, lsl #4]
   45258:	lsr	r2, r3, #28
   4525c:	cmp	r2, #8
   45260:	bne	45278 <luaL_typerror@@Base+0xef0c>
   45264:	uxth	r3, r3
   45268:	ldr	r3, [ip, r3, lsl #4]
   4526c:	lsr	r2, r3, #28
   45270:	cmp	r2, #8
   45274:	beq	45264 <luaL_typerror@@Base+0xeef8>
   45278:	ldr	r4, [fp, #8]
   4527c:	cmp	r2, #2
   45280:	uxtheq	r1, r3
   45284:	mov	r2, r4
   45288:	mov	r0, r9
   4528c:	bl	1f3c4 <lua_atpanic@@Base+0x1f4>
   45290:	cmp	r0, #0
   45294:	beq	45528 <luaL_typerror@@Base+0xf1bc>
   45298:	ldr	r3, [r0, #4]
   4529c:	cmn	r3, #9
   452a0:	bne	45590 <luaL_typerror@@Base+0xf224>
   452a4:	ldr	r1, [r0]
   452a8:	mov	r2, #8
   452ac:	mov	r0, r7
   452b0:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   452b4:	ldr	r2, [r7, #96]	; 0x60
   452b8:	mvn	r3, #0
   452bc:	orr	r0, r0, #65536	; 0x10000
   452c0:	str	r0, [r2, #-4]
   452c4:	str	r3, [fp, #4]
   452c8:	b	44b3c <luaL_typerror@@Base+0xe7d0>
   452cc:	ldrsb	r3, [r7, #114]	; 0x72
   452d0:	cmp	r3, #0
   452d4:	blt	44b3c <luaL_typerror@@Base+0xe7d0>
   452d8:	ldr	r3, [r2, #-12]
   452dc:	sub	r2, r3, #4
   452e0:	ldrb	r3, [r3, #-4]
   452e4:	cmp	r3, #11
   452e8:	bhi	44b3c <luaL_typerror@@Base+0xe7d0>
   452ec:	mov	r0, #0
   452f0:	mov	r1, #1
   452f4:	str	r2, [r7, #-256]	; 0xffffff00
   452f8:	str	r0, [r7, #-252]	; 0xffffff04
   452fc:	str	r1, [r7, #264]	; 0x108
   45300:	b	44b3c <luaL_typerror@@Base+0xe7d0>
   45304:	orr	r3, r0, #17664	; 0x4500
   45308:	mov	r2, #17
   4530c:	strh	r3, [r7, #124]	; 0x7c
   45310:	strh	r6, [r7, #120]	; 0x78
   45314:	strh	r2, [r7, #122]	; 0x7a
   45318:	mov	r0, r7
   4531c:	bl	27498 <luaL_where@@Base+0x7394>
   45320:	mov	r3, #1
   45324:	strb	r3, [r7, #268]	; 0x10c
   45328:	mov	r6, r0
   4532c:	b	449fc <luaL_typerror@@Base+0xe690>
   45330:	ldr	r2, [pc, #716]	; 45604 <luaL_typerror@@Base+0xf298>
   45334:	mov	r3, #15
   45338:	strh	r2, [r7, #124]	; 0x7c
   4533c:	strh	r6, [r7, #120]	; 0x78
   45340:	strh	r3, [r7, #122]	; 0x7a
   45344:	mov	r0, r7
   45348:	bl	27498 <luaL_where@@Base+0x7394>
   4534c:	orr	r1, r8, #536870912	; 0x20000000
   45350:	orr	r1, r1, #131072	; 0x20000
   45354:	mov	r2, #4
   45358:	mov	r6, r0
   4535c:	mov	r0, r9
   45360:	bl	41060 <luaL_typerror@@Base+0xacf4>
   45364:	ldr	r4, [r9]
   45368:	add	r4, r4, r0, lsl #4
   4536c:	b	449fc <luaL_typerror@@Base+0xe690>
   45370:	orr	r3, r0, #17664	; 0x4500
   45374:	mov	r2, #16
   45378:	strh	r3, [r7, #124]	; 0x7c
   4537c:	strh	r6, [r7, #120]	; 0x78
   45380:	strh	r2, [r7, #122]	; 0x7a
   45384:	mov	r0, r7
   45388:	bl	27498 <luaL_where@@Base+0x7394>
   4538c:	ldr	r3, [r4]
   45390:	lsr	r2, r3, #28
   45394:	cmp	r2, #5
   45398:	mov	r6, r0
   4539c:	uxtheq	r3, r3
   453a0:	ldreq	r4, [r9]
   453a4:	addeq	r4, r4, r3, lsl #4
   453a8:	b	449fc <luaL_typerror@@Base+0xe690>
   453ac:	cmp	r6, #11
   453b0:	bne	454e8 <luaL_typerror@@Base+0xf17c>
   453b4:	ldr	r0, [sl]
   453b8:	uxth	r3, r3
   453bc:	b	453c4 <luaL_typerror@@Base+0xf058>
   453c0:	uxth	r3, r2
   453c4:	ldr	r2, [r0, r3, lsl #4]
   453c8:	add	r3, r0, r3, lsl #4
   453cc:	lsr	r1, r2, #28
   453d0:	cmp	r1, #8
   453d4:	beq	453c0 <luaL_typerror@@Base+0xf054>
   453d8:	cmp	r1, #5
   453dc:	bhi	44aa0 <luaL_typerror@@Base+0xe734>
   453e0:	ldr	r6, [r3, #4]
   453e4:	cmp	r6, #0
   453e8:	beq	44aa0 <luaL_typerror@@Base+0xe734>
   453ec:	sub	r3, r6, #1
   453f0:	tst	r3, r6
   453f4:	bne	44aa0 <luaL_typerror@@Base+0xe734>
   453f8:	ldr	r3, [pc, #520]	; 45608 <luaL_typerror@@Base+0xf29c>
   453fc:	strh	r4, [r7, #120]	; 0x78
   45400:	strh	r3, [r7, #124]	; 0x7c
   45404:	strh	r5, [r7, #122]	; 0x7a
   45408:	mov	r0, r7
   4540c:	bl	27498 <luaL_where@@Base+0x7394>
   45410:	clz	r1, r6
   45414:	eor	r1, r1, #31
   45418:	mov	r4, r0
   4541c:	mov	r0, r7
   45420:	bl	26ccc <luaL_where@@Base+0x6bc8>
   45424:	ldr	r3, [pc, #480]	; 4560c <luaL_typerror@@Base+0xf2a0>
   45428:	strh	r4, [r7, #120]	; 0x78
   4542c:	strh	r3, [r7, #124]	; 0x7c
   45430:	strh	r0, [r7, #122]	; 0x7a
   45434:	mov	r0, r7
   45438:	bl	27498 <luaL_where@@Base+0x7394>
   4543c:	b	44e6c <luaL_typerror@@Base+0xeb00>
   45440:	ldr	r3, [sp, #24]
   45444:	strh	r5, [r7, #120]	; 0x78
   45448:	orr	r2, r3, r2
   4544c:	ldr	r3, [sp, #12]
   45450:	strh	r2, [r7, #122]	; 0x7a
   45454:	orr	r3, r3, #23040	; 0x5a00
   45458:	strh	r3, [r7, #124]	; 0x7c
   4545c:	mov	r0, r7
   45460:	bl	27498 <luaL_where@@Base+0x7394>
   45464:	str	r0, [sp, #44]	; 0x2c
   45468:	b	44fe8 <luaL_typerror@@Base+0xec7c>
   4546c:	str	r3, [sp, #28]
   45470:	ldr	r3, [sp, #24]
   45474:	strh	r4, [r7, #120]	; 0x78
   45478:	orr	r2, r3, r2
   4547c:	ldr	r3, [sp, #12]
   45480:	strh	r2, [r7, #122]	; 0x7a
   45484:	orr	r1, r3, #23040	; 0x5a00
   45488:	strh	r1, [r7, #124]	; 0x7c
   4548c:	mov	r0, r7
   45490:	bl	27498 <luaL_where@@Base+0x7394>
   45494:	ldr	r3, [sp, #28]
   45498:	str	r0, [sp, #40]	; 0x28
   4549c:	b	44f98 <luaL_typerror@@Base+0xec2c>
   454a0:	ldr	r3, [fp]
   454a4:	mov	r1, r4
   454a8:	mov	r0, #0
   454ac:	ldr	r4, [r3, r5, lsl #1]
   454b0:	str	r0, [sp]
   454b4:	add	r3, sp, #36	; 0x24
   454b8:	mov	r2, r4
   454bc:	mov	r0, r9
   454c0:	bl	1544c <_start@@Base+0x209c>
   454c4:	subs	r8, r0, #0
   454c8:	beq	454dc <luaL_typerror@@Base+0xf170>
   454cc:	ldr	r3, [r8]
   454d0:	lsr	r3, r3, #28
   454d4:	cmp	r3, #11
   454d8:	beq	45548 <luaL_typerror@@Base+0xf1dc>
   454dc:	ldr	r4, [r9]
   454e0:	add	r4, r4, #272	; 0x110
   454e4:	b	449fc <luaL_typerror@@Base+0xe690>
   454e8:	cmp	r6, #4
   454ec:	beq	45540 <luaL_typerror@@Base+0xf1d4>
   454f0:	ldr	r3, [pc, #280]	; 45610 <luaL_typerror@@Base+0xf2a4>
   454f4:	ldr	r2, [pc, #280]	; 45614 <luaL_typerror@@Base+0xf2a8>
   454f8:	cmp	r6, #6
   454fc:	movne	r6, r3
   45500:	moveq	r6, r2
   45504:	ldr	r3, [r7, #96]	; 0x60
   45508:	ldr	r2, [pc, #212]	; 455e4 <luaL_typerror@@Base+0xf278>
   4550c:	mov	r1, #2
   45510:	strh	r6, [r7, #124]	; 0x7c
   45514:	strh	r4, [r7, #120]	; 0x78
   45518:	strh	r5, [r7, #122]	; 0x7a
   4551c:	str	r1, [r7, #264]	; 0x108
   45520:	str	r2, [r3]
   45524:	b	44b24 <luaL_typerror@@Base+0xe7b8>
   45528:	ldr	r3, [r7, #96]	; 0x60
   4552c:	ldr	r1, [r3, #4]
   45530:	cmp	r1, #0
   45534:	beq	44ab4 <luaL_typerror@@Base+0xe748>
   45538:	ldr	r2, [fp]
   4553c:	b	44c98 <luaL_typerror@@Base+0xe92c>
   45540:	ldr	r6, [pc, #152]	; 455e0 <luaL_typerror@@Base+0xf274>
   45544:	b	45504 <luaL_typerror@@Base+0xf198>
   45548:	mov	r1, r4
   4554c:	mov	r2, #4
   45550:	mov	r0, r7
   45554:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   45558:	ldr	r3, [pc, #184]	; 45618 <luaL_typerror@@Base+0xf2ac>
   4555c:	strh	r6, [r7, #120]	; 0x78
   45560:	strh	r3, [r7, #124]	; 0x7c
   45564:	strh	r0, [r7, #122]	; 0x7a
   45568:	mov	r0, r7
   4556c:	bl	27498 <luaL_where@@Base+0x7394>
   45570:	ldrh	r3, [r8]
   45574:	ldr	r4, [r9]
   45578:	ldr	r1, [sp, #36]	; 0x24
   4557c:	mov	r0, r7
   45580:	add	r4, r4, r3, lsl #4
   45584:	bl	26ccc <luaL_where@@Base+0x6bc8>
   45588:	mov	r6, r0
   4558c:	b	449fc <luaL_typerror@@Base+0xe690>
   45590:	add	r1, r7, #2336	; 0x920
   45594:	add	r1, r1, #12
   45598:	ldr	r0, [r7, #80]	; 0x50
   4559c:	mov	r2, #11
   455a0:	bl	210d0 <luaL_where@@Base+0xfcc>
   455a4:	cmp	r1, #0
   455a8:	mov	r1, r2
   455ac:	uxth	r2, r5
   455b0:	bne	451c0 <luaL_typerror@@Base+0xee54>
   455b4:	mov	r3, #19
   455b8:	str	r3, [sp, #12]
   455bc:	str	r3, [sp, #20]
   455c0:	b	451cc <luaL_typerror@@Base+0xee60>
   455c4:	cmp	r4, #0
   455c8:	ldr	r6, [fp, #8]
   455cc:	ldr	sl, [r7, #-156]	; 0xffffff64
   455d0:	bne	44a98 <luaL_typerror@@Base+0xe72c>
   455d4:	b	44aa0 <luaL_typerror@@Base+0xe734>
   455d8:	andeq	r2, r0, r5, lsl #18
   455dc:	ldrdeq	r0, [r0], -r3
   455e0:	andeq	r0, r0, r5, lsl #17
   455e4:	andeq	r7, r0, #1012	; 0x3f4
   455e8:	andeq	r5, r0, r3, lsl sl
   455ec:	andeq	r2, r0, r3, lsl fp
   455f0:	andeq	r5, r0, sl, lsl #7
   455f4:	andeq	r1, r0, r0, lsr #5
   455f8:			; <UNDEFINED> instruction: 0x000002b3
   455fc:			; <UNDEFINED> instruction: 0xf0800000
   45600:	strdeq	r7, [r0, -lr]
   45604:	andeq	r4, r0, r5, lsl #10
   45608:	andeq	r2, r0, r3, lsl sl
   4560c:	andeq	r2, r0, r3, lsl r6
   45610:	andeq	r0, r0, r5, lsl #13
   45614:	andeq	r0, r0, r5, lsl #9
   45618:	andeq	r0, r0, r4, lsl #17
   4561c:	push	{r4, r5, r6, r7, r8, lr}
   45620:	mov	r5, r0
   45624:	ldr	r4, [r0, #4]
   45628:	ldr	r2, [r0, #8]
   4562c:	mov	r6, r1
   45630:	cmp	r2, r4
   45634:	bls	45668 <luaL_typerror@@Base+0xf2fc>
   45638:	ldr	r1, [r0]
   4563c:	add	r3, r1, r4, lsl #4
   45640:	add	r2, r4, #1
   45644:	str	r2, [r5, #4]
   45648:	mov	r2, #0
   4564c:	str	r3, [r6]
   45650:	mov	r0, r4
   45654:	str	r2, [r1, r4, lsl #4]
   45658:	str	r2, [r3, #4]
   4565c:	str	r2, [r3, #8]
   45660:	str	r2, [r3, #12]
   45664:	pop	{r4, r5, r6, r7, r8, pc}
   45668:	cmp	r4, #65536	; 0x10000
   4566c:	ldr	r0, [r0, #12]
   45670:	bcs	456ac <luaL_typerror@@Base+0xf340>
   45674:	lsl	r3, r2, #1
   45678:	cmp	r3, #65536	; 0x10000
   4567c:	movcs	r3, #65536	; 0x10000
   45680:	cmp	r3, #8
   45684:	movcs	r7, r3
   45688:	movcc	r7, #8
   4568c:	ldr	r1, [r5]
   45690:	lsl	r2, r2, #4
   45694:	lsl	r3, r7, #4
   45698:	bl	205b0 <luaL_where@@Base+0x4ac>
   4569c:	str	r7, [r5, #8]
   456a0:	mov	r1, r0
   456a4:	str	r0, [r5]
   456a8:	b	4563c <luaL_typerror@@Base+0xf2d0>
   456ac:	mov	r1, #139	; 0x8b
   456b0:	bl	20258 <luaL_where@@Base+0x154>
   456b4:	ldr	r3, [pc, #276]	; 457d0 <luaL_typerror@@Base+0xf464>
   456b8:	push	{r4, r5, r6, lr}
   456bc:	cmp	r2, r3
   456c0:	mov	r4, r1
   456c4:	mov	r6, r0
   456c8:	bne	45740 <luaL_typerror@@Base+0xf3d4>
   456cc:	ldr	r3, [r0, #16]
   456d0:	ldr	r2, [r3, #-8]
   456d4:	ldrb	r3, [r2, #5]
   456d8:	cmp	r3, #8
   456dc:	bne	457c8 <luaL_typerror@@Base+0xf45c>
   456e0:	ldr	r3, [r1]
   456e4:	str	r3, [r2, #8]
   456e8:	ldr	r3, [r1, #4]
   456ec:	add	r3, r3, #4
   456f0:	cmn	r3, #10
   456f4:	popls	{r4, r5, r6, pc}
   456f8:	ldr	r1, [r1]
   456fc:	ldrb	r3, [r1, #4]
   45700:	tst	r3, #3
   45704:	popeq	{r4, r5, r6, pc}
   45708:	ldrb	r3, [r2, #4]
   4570c:	tst	r3, #4
   45710:	popeq	{r4, r5, r6, pc}
   45714:	ldr	r0, [r0, #8]
   45718:	ldrb	ip, [r0, #29]
   4571c:	sub	ip, ip, #1
   45720:	cmp	ip, #1
   45724:	bls	457c0 <luaL_typerror@@Base+0xf454>
   45728:	ldrb	r1, [r0, #28]
   4572c:	bic	r3, r3, #7
   45730:	and	r1, r1, #3
   45734:	orr	r3, r1, r3
   45738:	strb	r3, [r2, #4]
   4573c:	pop	{r4, r5, r6, pc}
   45740:	mov	r1, r2
   45744:	mov	r5, r2
   45748:	bl	1b44c <_start@@Base+0x809c>
   4574c:	ldr	r1, [pc, #128]	; 457d4 <luaL_typerror@@Base+0xf468>
   45750:	ldrd	r2, [r4]
   45754:	cmp	r5, r1
   45758:	strd	r2, [r0]
   4575c:	popge	{r4, r5, r6, pc}
   45760:	ldr	r3, [r4, #4]
   45764:	add	r3, r3, #4
   45768:	cmn	r3, #10
   4576c:	popls	{r4, r5, r6, pc}
   45770:	ldr	r1, [r4]
   45774:	ldrb	r3, [r1, #4]
   45778:	tst	r3, #3
   4577c:	popeq	{r4, r5, r6, pc}
   45780:	ldr	r3, [r6, #16]
   45784:	ldr	ip, [r3, #-8]
   45788:	ldrb	r3, [ip, #4]
   4578c:	tst	r3, #4
   45790:	popeq	{r4, r5, r6, pc}
   45794:	ldr	r0, [r6, #8]
   45798:	ldrb	r2, [r0, #29]
   4579c:	sub	r2, r2, #1
   457a0:	cmp	r2, #1
   457a4:	bls	457c0 <luaL_typerror@@Base+0xf454>
   457a8:	ldrb	r2, [r0, #28]
   457ac:	bic	r3, r3, #7
   457b0:	and	r2, r2, #3
   457b4:	orr	r3, r2, r3
   457b8:	strb	r3, [ip, #4]
   457bc:	pop	{r4, r5, r6, pc}
   457c0:	pop	{r4, r5, r6, lr}
   457c4:	b	17498 <_start@@Base+0x40e8>
   457c8:	ldr	r1, [pc, #8]	; 457d8 <luaL_typerror@@Base+0xf46c>
   457cc:	bl	20258 <luaL_where@@Base+0x154>
   457d0:			; <UNDEFINED> instruction: 0xffffd8ef
   457d4:			; <UNDEFINED> instruction: 0xffffd8ee
   457d8:	andeq	r0, r0, r7, lsr #6
   457dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   457e0:	mov	r5, r1
   457e4:	sub	sp, sp, #12
   457e8:	mov	r6, r0
   457ec:	ldr	r1, [r1, #4]
   457f0:	mov	r7, r2
   457f4:	mov	r4, #100	; 0x64
   457f8:	b	45864 <luaL_typerror@@Base+0xf4f8>
   457fc:	ldr	r9, [r5]
   45800:	mov	r2, r7
   45804:	mov	r1, r9
   45808:	mov	r0, r6
   4580c:	bl	1f4f8 <lua_atpanic@@Base+0x328>
   45810:	ldr	r3, [r0, #4]
   45814:	mov	r8, r0
   45818:	cmn	r3, #1
   4581c:	bne	458bc <luaL_typerror@@Base+0xf550>
   45820:	ldr	r0, [r9, #16]
   45824:	cmp	r0, #0
   45828:	beq	458bc <luaL_typerror@@Base+0xf550>
   4582c:	ldrb	r1, [r0, #6]
   45830:	ands	r1, r1, #1
   45834:	bne	458bc <luaL_typerror@@Base+0xf550>
   45838:	ldr	r3, [r6, #8]
   4583c:	ldr	r2, [r3, #232]	; 0xe8
   45840:	bl	14a44 <_start@@Base+0x1694>
   45844:	cmp	r0, #0
   45848:	beq	458bc <luaL_typerror@@Base+0xf550>
   4584c:	ldr	r1, [r0, #4]
   45850:	cmn	r1, #9
   45854:	beq	45898 <luaL_typerror@@Base+0xf52c>
   45858:	subs	r4, r4, #1
   4585c:	mov	r5, r0
   45860:	beq	458c8 <luaL_typerror@@Base+0xf55c>
   45864:	cmn	r1, #12
   45868:	beq	457fc <luaL_typerror@@Base+0xf490>
   4586c:	mov	r1, r5
   45870:	mov	r2, #0
   45874:	ldr	r0, [r6, #8]
   45878:	bl	1b010 <_start@@Base+0x7c60>
   4587c:	ldr	r1, [r0, #4]
   45880:	cmn	r1, #1
   45884:	bne	45850 <luaL_typerror@@Base+0xf4e4>
   45888:	mov	r1, r5
   4588c:	mov	r0, r6
   45890:	ldr	r2, [pc, #60]	; 458d4 <luaL_typerror@@Base+0xf568>
   45894:	bl	13114 <pclose@plt+0x78>
   45898:	ldr	r2, [r6, #16]
   4589c:	ldr	r1, [r6, #20]
   458a0:	mov	r3, r0
   458a4:	stm	sp, {r5, r7}
   458a8:	mov	r0, r2
   458ac:	ldr	r2, [pc, #36]	; 458d8 <luaL_typerror@@Base+0xf56c>
   458b0:	bl	1b0a8 <_start@@Base+0x7cf8>
   458b4:	mov	r8, #0
   458b8:	str	r0, [r6, #20]
   458bc:	mov	r0, r8
   458c0:	add	sp, sp, #12
   458c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   458c8:	mov	r0, r6
   458cc:	mov	r1, #364	; 0x16c
   458d0:	bl	20258 <luaL_where@@Base+0x154>
   458d4:	muleq	r0, r3, r1
   458d8:	andeq	fp, r6, r0, asr #31
   458dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   458e0:	mov	r7, r0
   458e4:	sub	sp, sp, #20
   458e8:	mov	r5, r1
   458ec:	mov	r8, r2
   458f0:	mov	r9, #100	; 0x64
   458f4:	ldr	r3, [r5, #4]
   458f8:	cmn	r3, #12
   458fc:	bne	45944 <luaL_typerror@@Base+0xf5d8>
   45900:	ldr	r4, [r5]
   45904:	mov	r2, r8
   45908:	mov	r1, r4
   4590c:	mov	r0, r7
   45910:	bl	1f4f8 <lua_atpanic@@Base+0x328>
   45914:	ldr	r3, [r0, #4]
   45918:	mov	r6, r0
   4591c:	cmn	r3, #1
   45920:	beq	45988 <luaL_typerror@@Base+0xf61c>
   45924:	ldrb	r3, [r4, #4]
   45928:	mov	r2, #0
   4592c:	strb	r2, [r4, #6]
   45930:	tst	r3, #4
   45934:	bne	459c0 <luaL_typerror@@Base+0xf654>
   45938:	mov	r0, r6
   4593c:	add	sp, sp, #20
   45940:	pop	{r4, r5, r6, r7, r8, r9, pc}
   45944:	mov	r2, #1
   45948:	mov	r1, r5
   4594c:	ldr	r0, [r7, #8]
   45950:	bl	1b010 <_start@@Base+0x7c60>
   45954:	ldr	r3, [r0, #4]
   45958:	cmn	r3, #1
   4595c:	beq	45a9c <luaL_typerror@@Base+0xf730>
   45960:	cmn	r3, #9
   45964:	beq	45a44 <luaL_typerror@@Base+0xf6d8>
   45968:	ldrd	r2, [r0]
   4596c:	subs	r9, r9, #1
   45970:	add	r5, sp, #8
   45974:	strd	r2, [sp, #8]
   45978:	bne	458f4 <luaL_typerror@@Base+0xf588>
   4597c:	mov	r0, r7
   45980:	ldr	r1, [pc, #316]	; 45ac4 <luaL_typerror@@Base+0xf758>
   45984:	bl	20258 <luaL_where@@Base+0x154>
   45988:	ldr	r0, [r4, #16]
   4598c:	ldr	r3, [r7, #8]
   45990:	cmp	r0, #0
   45994:	beq	459e0 <luaL_typerror@@Base+0xf674>
   45998:	ldrb	r2, [r0, #6]
   4599c:	tst	r2, #2
   459a0:	bne	459e0 <luaL_typerror@@Base+0xf674>
   459a4:	ldr	r2, [r3, #236]	; 0xec
   459a8:	mov	r1, #1
   459ac:	bl	14a44 <_start@@Base+0x1694>
   459b0:	cmp	r0, #0
   459b4:	beq	459dc <luaL_typerror@@Base+0xf670>
   459b8:	ldr	r3, [r0, #4]
   459bc:	b	45960 <luaL_typerror@@Base+0xf5f4>
   459c0:	ldr	r2, [r7, #8]
   459c4:	bic	r3, r3, #4
   459c8:	strb	r3, [r4, #4]
   459cc:	ldr	r3, [r2, #48]	; 0x30
   459d0:	str	r3, [r4, #12]
   459d4:	str	r4, [r2, #48]	; 0x30
   459d8:	b	45938 <luaL_typerror@@Base+0xf5cc>
   459dc:	ldr	r3, [r7, #8]
   459e0:	ldrb	r2, [r4, #4]
   459e4:	mov	r1, #0
   459e8:	strb	r1, [r4, #6]
   459ec:	tst	r2, #4
   459f0:	bne	45a6c <luaL_typerror@@Base+0xf700>
   459f4:	add	r3, r3, #144	; 0x90
   459f8:	cmp	r6, r3
   459fc:	bne	45938 <luaL_typerror@@Base+0xf5cc>
   45a00:	ldr	r3, [r8, #4]
   45a04:	cmn	r3, #1
   45a08:	beq	45ab8 <luaL_typerror@@Base+0xf74c>
   45a0c:	cmn	r3, #14
   45a10:	beq	45a88 <luaL_typerror@@Base+0xf71c>
   45a14:	cmn	r3, #15
   45a18:	bhi	45a2c <luaL_typerror@@Base+0xf6c0>
   45a1c:	vldr	d7, [r8]
   45a20:	vcmp.f64	d7, d7
   45a24:	vmrs	APSR_nzcv, fpscr
   45a28:	bne	45aac <luaL_typerror@@Base+0xf740>
   45a2c:	mov	r2, r8
   45a30:	mov	r1, r4
   45a34:	mov	r0, r7
   45a38:	bl	3df64 <luaL_typerror@@Base+0x7bf8>
   45a3c:	mov	r6, r0
   45a40:	b	45938 <luaL_typerror@@Base+0xf5cc>
   45a44:	ldr	r2, [r7, #16]
   45a48:	ldr	r1, [r7, #20]
   45a4c:	mov	r3, r0
   45a50:	stm	sp, {r5, r8}
   45a54:	mov	r0, r2
   45a58:	ldr	r2, [pc, #104]	; 45ac8 <luaL_typerror@@Base+0xf75c>
   45a5c:	bl	1b0a8 <_start@@Base+0x7cf8>
   45a60:	mov	r6, #0
   45a64:	str	r0, [r7, #20]
   45a68:	b	45938 <luaL_typerror@@Base+0xf5cc>
   45a6c:	ldr	r1, [r3, #48]	; 0x30
   45a70:	bic	r2, r2, #4
   45a74:	strb	r2, [r4, #4]
   45a78:	str	r1, [r4, #12]
   45a7c:	str	r4, [r3, #48]	; 0x30
   45a80:	ldr	r3, [r7, #8]
   45a84:	b	459f4 <luaL_typerror@@Base+0xf688>
   45a88:	vldr	s14, [r8]
   45a8c:	add	r8, sp, #16
   45a90:	vcvt.f64.s32	d7, s14
   45a94:	vstmdb	r8!, {d7}
   45a98:	b	45a2c <luaL_typerror@@Base+0xf6c0>
   45a9c:	mov	r1, r5
   45aa0:	mov	r0, r7
   45aa4:	ldr	r2, [pc, #32]	; 45acc <luaL_typerror@@Base+0xf760>
   45aa8:	bl	13114 <pclose@plt+0x78>
   45aac:	mov	r0, r7
   45ab0:	mov	r1, #154	; 0x9a
   45ab4:	bl	20258 <luaL_where@@Base+0x154>
   45ab8:	mov	r0, r7
   45abc:	mov	r1, #173	; 0xad
   45ac0:	bl	20258 <luaL_where@@Base+0x154>
   45ac4:	andeq	r0, r0, sp, ror r1
   45ac8:	andeq	fp, r6, r8, lsr #31
   45acc:	muleq	r0, r3, r1
   45ad0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45ad4:	subs	r6, r2, #0
   45ad8:	ldr	r2, [r1, #4]
   45adc:	sub	sp, sp, #12
   45ae0:	mov	r8, r0
   45ae4:	mov	r7, r1
   45ae8:	rsblt	r6, r6, #0
   45aec:	movlt	r3, #1
   45af0:	movge	r3, #0
   45af4:	str	r3, [sp, #4]
   45af8:	cmn	r2, #5
   45afc:	cmnne	r2, #14
   45b00:	bhi	45ca8 <luaL_typerror@@Base+0xf93c>
   45b04:	ldr	r3, [r7, #-4]
   45b08:	cmn	r3, #5
   45b0c:	cmnne	r3, #14
   45b10:	bhi	45ca8 <luaL_typerror@@Base+0xf93c>
   45b14:	cmn	r2, #5
   45b18:	movne	r0, #32
   45b1c:	ldreq	r2, [r7]
   45b20:	mov	r1, #0
   45b24:	mov	r5, r7
   45b28:	ldreq	r0, [r2, #12]
   45b2c:	b	45b40 <luaL_typerror@@Base+0xf7d4>
   45b30:	ldr	r3, [r5, #-4]
   45b34:	cmn	r3, #5
   45b38:	cmnne	r3, #14
   45b3c:	bhi	45b6c <luaL_typerror@@Base+0xf800>
   45b40:	cmn	r3, #5
   45b44:	sub	r5, r5, #8
   45b48:	ldreq	r3, [r5]
   45b4c:	movne	r2, #32
   45b50:	sub	r6, r6, #1
   45b54:	ldreq	r2, [r3, #12]
   45b58:	mov	r3, #0
   45b5c:	adds	r0, r0, r2
   45b60:	adc	r1, r1, r3
   45b64:	cmp	r6, #0
   45b68:	bgt	45b30 <luaL_typerror@@Base+0xf7c4>
   45b6c:	ldr	r2, [pc, #464]	; 45d44 <luaL_typerror@@Base+0xf9d8>
   45b70:	mov	r3, #0
   45b74:	cmp	r1, r3
   45b78:	cmpeq	r0, r2
   45b7c:	bhi	45d38 <luaL_typerror@@Base+0xf9cc>
   45b80:	ldr	sl, [r8, #8]
   45b84:	add	r9, sl, #80	; 0x50
   45b88:	ldr	r2, [sl, #88]	; 0x58
   45b8c:	ldr	r3, [sl, #84]	; 0x54
   45b90:	str	r8, [sl, #92]	; 0x5c
   45b94:	sub	r3, r3, r2
   45b98:	cmp	r0, r3
   45b9c:	str	r2, [sl, #80]	; 0x50
   45ba0:	bhi	45c98 <luaL_typerror@@Base+0xf92c>
   45ba4:	cmp	r7, r5
   45ba8:	bcc	45c08 <luaL_typerror@@Base+0xf89c>
   45bac:	ldr	fp, [pc, #404]	; 45d48 <luaL_typerror@@Base+0xf9dc>
   45bb0:	mov	r4, r5
   45bb4:	b	45bdc <luaL_typerror@@Base+0xf870>
   45bb8:	mov	r2, #0
   45bbc:	vldr	d0, [r4]
   45bc0:	mov	r1, fp
   45bc4:	mov	r0, r9
   45bc8:	bl	30bd4 <luaL_where@@Base+0x10ad0>
   45bcc:	str	r0, [sl, #80]	; 0x50
   45bd0:	add	r4, r4, #8
   45bd4:	cmp	r7, r4
   45bd8:	bcc	45c08 <luaL_typerror@@Base+0xf89c>
   45bdc:	ldr	r3, [r4, #4]
   45be0:	cmn	r3, #5
   45be4:	beq	45c80 <luaL_typerror@@Base+0xf914>
   45be8:	cmn	r3, #14
   45bec:	bne	45bb8 <luaL_typerror@@Base+0xf84c>
   45bf0:	ldr	r1, [r4]
   45bf4:	mov	r0, r9
   45bf8:	add	r4, r4, #8
   45bfc:	bl	301f4 <luaL_where@@Base+0x100f0>
   45c00:	cmp	r7, r4
   45c04:	bcs	45bdc <luaL_typerror@@Base+0xf870>
   45c08:	ldr	r3, [sl, #88]	; 0x58
   45c0c:	ldr	r2, [sl, #80]	; 0x50
   45c10:	mov	r1, r3
   45c14:	sub	r2, r2, r3
   45c18:	mov	r0, r8
   45c1c:	bl	20260 <luaL_where@@Base+0x15c>
   45c20:	mvn	r2, #4
   45c24:	cmp	r6, #0
   45c28:	str	r2, [r5, #4]
   45c2c:	mov	r7, r5
   45c30:	str	r0, [r5]
   45c34:	bgt	45af8 <luaL_typerror@@Base+0xf78c>
   45c38:	ldr	r3, [r8, #8]
   45c3c:	ldrd	r2, [r3, #20]
   45c40:	cmp	r2, r3
   45c44:	movcc	r0, #0
   45c48:	bcc	45cf4 <luaL_typerror@@Base+0xf988>
   45c4c:	ldr	r3, [sp, #4]
   45c50:	cmp	r3, #0
   45c54:	bne	45c70 <luaL_typerror@@Base+0xf904>
   45c58:	ldr	r3, [r8, #16]
   45c5c:	ldr	r2, [r3, #-8]
   45c60:	ldr	r2, [r2, #16]
   45c64:	ldrb	r2, [r2, #-57]	; 0xffffffc7
   45c68:	add	r3, r3, r2, lsl #3
   45c6c:	str	r3, [r8, #20]
   45c70:	mov	r0, r8
   45c74:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   45c78:	mov	r0, #0
   45c7c:	b	45cf4 <luaL_typerror@@Base+0xf988>
   45c80:	ldr	r3, [r4]
   45c84:	mov	r0, r9
   45c88:	add	r1, r3, #16
   45c8c:	ldr	r2, [r3, #12]
   45c90:	bl	2ffac <luaL_where@@Base+0xfea8>
   45c94:	b	45bd0 <luaL_typerror@@Base+0xf864>
   45c98:	mov	r1, r0
   45c9c:	mov	r0, r9
   45ca0:	bl	2ff68 <luaL_where@@Base+0xfe64>
   45ca4:	b	45ba4 <luaL_typerror@@Base+0xf838>
   45ca8:	ldr	r5, [r8, #8]
   45cac:	sub	r4, r7, #8
   45cb0:	mov	r0, r5
   45cb4:	mov	r1, r4
   45cb8:	mov	r2, #8
   45cbc:	bl	1b010 <_start@@Base+0x7c60>
   45cc0:	ldr	r3, [r0, #4]
   45cc4:	cmn	r3, #1
   45cc8:	beq	45cfc <luaL_typerror@@Base+0xf990>
   45ccc:	ldrd	r2, [r7, #-8]
   45cd0:	ldrd	r4, [r7]
   45cd4:	strd	r2, [r7, #8]
   45cd8:	strd	r4, [r7, #16]
   45cdc:	ldrd	r0, [r0]
   45ce0:	ldr	r2, [pc, #100]	; 45d4c <luaL_typerror@@Base+0xf9e0>
   45ce4:	mvn	r3, #3
   45ce8:	strd	r0, [r7]
   45cec:	add	r0, r7, #8
   45cf0:	strd	r2, [r7, #-8]
   45cf4:	add	sp, sp, #12
   45cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45cfc:	mov	r0, r5
   45d00:	mov	r2, #8
   45d04:	mov	r1, r7
   45d08:	bl	1b010 <_start@@Base+0x7c60>
   45d0c:	ldr	r3, [r0, #4]
   45d10:	cmn	r3, #1
   45d14:	bne	45ccc <luaL_typerror@@Base+0xf960>
   45d18:	ldr	r3, [r7, #-4]
   45d1c:	mov	r0, r8
   45d20:	cmn	r3, #5
   45d24:	cmnne	r3, #14
   45d28:	movls	r4, r7
   45d2c:	mov	r1, r4
   45d30:	ldr	r2, [pc, #24]	; 45d50 <luaL_typerror@@Base+0xf9e4>
   45d34:	bl	13114 <pclose@plt+0x78>
   45d38:	mov	r0, r8
   45d3c:	mov	r1, #56	; 0x38
   45d40:	bl	20258 <luaL_where@@Base+0x154>
   45d44:	svcvc	0x00fffeff
   45d48:	svceq	0x00000035
   45d4c:	andeq	fp, r6, ip, asr #27
   45d50:	andeq	r0, r0, pc, lsr #3
   45d54:	push	{r4, r5, r6, r8, r9, lr}
   45d58:	sub	r6, r1, #1
   45d5c:	mov	r4, r0
   45d60:	ldr	r1, [r0, #20]
   45d64:	b	45d98 <luaL_typerror@@Base+0xfa2c>
   45d68:	str	ip, [r4, #20]
   45d6c:	sub	r5, r5, r3
   45d70:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   45d74:	ldr	r3, [r4, #20]
   45d78:	sub	r6, r6, r5, asr #3
   45d7c:	sub	r6, r6, #1
   45d80:	ldrd	r8, [r3, #-8]
   45d84:	cmp	r6, #0
   45d88:	sub	r1, r3, #8
   45d8c:	str	r1, [r4, #20]
   45d90:	strd	r8, [r3, #-16]
   45d94:	pople	{r4, r5, r6, r8, r9, pc}
   45d98:	sub	r1, r1, #8
   45d9c:	rsb	r2, r6, #0
   45da0:	mov	r0, r4
   45da4:	bl	45ad0 <luaL_typerror@@Base+0xf764>
   45da8:	mov	r2, #2
   45dac:	ldr	r5, [r4, #20]
   45db0:	subs	r3, r0, #0
   45db4:	add	ip, r3, #16
   45db8:	mov	r1, r3
   45dbc:	mov	r0, r4
   45dc0:	bne	45d68 <luaL_typerror@@Base+0xf9fc>
   45dc4:	sub	r5, r5, r6, lsl #3
   45dc8:	str	r5, [r4, #20]
   45dcc:	pop	{r4, r5, r6, r8, r9, pc}
   45dd0:	push	{r4, r5, r6, lr}
   45dd4:	mov	r2, #5
   45dd8:	ldr	r4, [r0, #8]
   45ddc:	sub	sp, sp, #8
   45de0:	mov	r5, r0
   45de4:	mov	r0, r4
   45de8:	mov	r6, r1
   45dec:	bl	1b010 <_start@@Base+0x7c60>
   45df0:	ldr	r2, [r0, #4]
   45df4:	cmn	r2, #1
   45df8:	beq	45e20 <luaL_typerror@@Base+0xfab4>
   45dfc:	add	r4, r4, #144	; 0x90
   45e00:	mov	r3, r0
   45e04:	ldr	r2, [pc, #36]	; 45e30 <luaL_typerror@@Base+0xfac4>
   45e08:	ldrd	r0, [r5, #16]
   45e0c:	str	r4, [sp, #4]
   45e10:	str	r6, [sp]
   45e14:	bl	1b0a8 <_start@@Base+0x7cf8>
   45e18:	add	sp, sp, #8
   45e1c:	pop	{r4, r5, r6, pc}
   45e20:	mov	r1, r6
   45e24:	mov	r0, r5
   45e28:	add	r2, r2, #444	; 0x1bc
   45e2c:	bl	13114 <pclose@plt+0x78>
   45e30:	andeq	fp, r6, r0, asr #31
   45e34:	cmn	r1, #14
   45e38:	push	{r4, lr}
   45e3c:	mov	r3, r2
   45e40:	bls	45e7c <luaL_typerror@@Base+0xfb10>
   45e44:	mvn	r1, r1
   45e48:	ldr	ip, [pc, #84]	; 45ea4 <luaL_typerror@@Base+0xfb38>
   45e4c:	cmn	r2, #14
   45e50:	add	r1, ip, r1, lsl #2
   45e54:	movls	r3, #13
   45e58:	ldr	r2, [r1, #-216]	; 0xffffff28
   45e5c:	bhi	45e8c <luaL_typerror@@Base+0xfb20>
   45e60:	add	r3, ip, r3, lsl #2
   45e64:	ldr	r3, [r3, #-216]	; 0xffffff28
   45e68:	cmp	r3, r2
   45e6c:	moveq	r3, r2
   45e70:	ldrne	r1, [pc, #48]	; 45ea8 <luaL_typerror@@Base+0xfb3c>
   45e74:	ldreq	r1, [pc, #48]	; 45eac <luaL_typerror@@Base+0xfb40>
   45e78:	bl	201e0 <luaL_where@@Base+0xdc>
   45e7c:	cmn	r2, #14
   45e80:	bls	45e94 <luaL_typerror@@Base+0xfb28>
   45e84:	ldr	r2, [pc, #36]	; 45eb0 <luaL_typerror@@Base+0xfb44>
   45e88:	ldr	ip, [pc, #20]	; 45ea4 <luaL_typerror@@Base+0xfb38>
   45e8c:	mvn	r3, r3
   45e90:	b	45e60 <luaL_typerror@@Base+0xfaf4>
   45e94:	ldr	r3, [pc, #20]	; 45eb0 <luaL_typerror@@Base+0xfb44>
   45e98:	ldr	r1, [pc, #12]	; 45eac <luaL_typerror@@Base+0xfb40>
   45e9c:	mov	r2, r3
   45ea0:	b	45e78 <luaL_typerror@@Base+0xfb0c>
   45ea4:			; <UNDEFINED> instruction: 0x00070cb0
   45ea8:	andeq	r0, r0, sp, lsr #2
   45eac:	andeq	r0, r0, fp, asr #2
   45eb0:	andeq	r2, r7, r8, asr #29
   45eb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45eb8:	sub	sp, sp, #20
   45ebc:	ldr	r7, [r1, #4]
   45ec0:	mov	r5, r1
   45ec4:	cmn	r7, #11
   45ec8:	str	r0, [sp, #12]
   45ecc:	mov	r6, r2
   45ed0:	mov	r4, r3
   45ed4:	beq	45fd0 <luaL_typerror@@Base+0xfc64>
   45ed8:	ldr	r3, [r2, #4]
   45edc:	cmn	r3, #11
   45ee0:	beq	45fd0 <luaL_typerror@@Base+0xfc64>
   45ee4:	cmp	r7, r3
   45ee8:	beq	46044 <luaL_typerror@@Base+0xfcd8>
   45eec:	add	r2, r7, #3
   45ef0:	cmp	r2, #1
   45ef4:	bhi	46080 <luaL_typerror@@Base+0xfd14>
   45ef8:	add	r3, r3, #3
   45efc:	cmp	r3, #1
   45f00:	bhi	46080 <luaL_typerror@@Base+0xfd14>
   45f04:	ldr	r3, [sp, #12]
   45f08:	ldr	r9, [pc, #384]	; 46090 <luaL_typerror@@Base+0xfd24>
   45f0c:	ldr	r8, [pc, #384]	; 46094 <luaL_typerror@@Base+0xfd28>
   45f10:	ldr	r7, [r3, #8]
   45f14:	b	45f58 <luaL_typerror@@Base+0xfbec>
   45f18:	mov	r2, #7
   45f1c:	mov	r1, r5
   45f20:	mov	r0, r7
   45f24:	bl	1b010 <_start@@Base+0x7c60>
   45f28:	mov	r2, #7
   45f2c:	mov	r1, r6
   45f30:	mov	fp, r0
   45f34:	mov	r0, r7
   45f38:	bl	1b010 <_start@@Base+0x7c60>
   45f3c:	ldr	r2, [fp, #4]
   45f40:	cmn	r2, #1
   45f44:	bne	4602c <luaL_typerror@@Base+0xfcc0>
   45f48:	mov	r3, r6
   45f4c:	eor	r4, r4, #3
   45f50:	mov	r6, r5
   45f54:	mov	r5, r3
   45f58:	tst	r4, #1
   45f5c:	moveq	sl, r9
   45f60:	movne	sl, r8
   45f64:	tst	r4, #2
   45f68:	bne	45f18 <luaL_typerror@@Base+0xfbac>
   45f6c:	mov	r2, #6
   45f70:	mov	r1, r5
   45f74:	mov	r0, r7
   45f78:	bl	1b010 <_start@@Base+0x7c60>
   45f7c:	mov	r2, #6
   45f80:	mov	r1, r6
   45f84:	mov	fp, r0
   45f88:	mov	r0, r7
   45f8c:	bl	1b010 <_start@@Base+0x7c60>
   45f90:	ldr	r2, [fp, #4]
   45f94:	cmn	r2, #1
   45f98:	mov	r1, r0
   45f9c:	beq	4607c <luaL_typerror@@Base+0xfd10>
   45fa0:	mov	r0, fp
   45fa4:	bl	17394 <_start@@Base+0x3fe4>
   45fa8:	cmp	r0, #0
   45fac:	beq	4607c <luaL_typerror@@Base+0xfd10>
   45fb0:	ldr	r3, [sp, #12]
   45fb4:	mov	r2, sl
   45fb8:	ldrd	r0, [r3, #16]
   45fbc:	stm	sp, {r5, r6}
   45fc0:	mov	r3, fp
   45fc4:	bl	1b0a8 <_start@@Base+0x7cf8>
   45fc8:	add	sp, sp, #20
   45fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45fd0:	ldr	r3, [pc, #188]	; 46094 <luaL_typerror@@Base+0xfd28>
   45fd4:	tst	r4, #1
   45fd8:	ldr	r8, [pc, #176]	; 46090 <luaL_typerror@@Base+0xfd24>
   45fdc:	movne	r8, r3
   45fe0:	tst	r4, #2
   45fe4:	ldr	r4, [sp, #12]
   45fe8:	moveq	r2, #6
   45fec:	movne	r2, #7
   45ff0:	cmn	r7, #11
   45ff4:	moveq	r1, r5
   45ff8:	movne	r1, r6
   45ffc:	ldr	r0, [r4, #8]
   46000:	bl	1b010 <_start@@Base+0x7c60>
   46004:	ldr	r2, [r0, #4]
   46008:	mov	r3, r0
   4600c:	cmn	r2, #1
   46010:	beq	46080 <luaL_typerror@@Base+0xfd14>
   46014:	ldrd	r0, [r4, #16]
   46018:	mov	r2, r8
   4601c:	stm	sp, {r5, r6}
   46020:	bl	1b0a8 <_start@@Base+0x7cf8>
   46024:	add	sp, sp, #20
   46028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4602c:	mov	r1, r0
   46030:	mov	r0, fp
   46034:	bl	17394 <_start@@Base+0x3fe4>
   46038:	cmp	r0, #0
   4603c:	beq	45f48 <luaL_typerror@@Base+0xfbdc>
   46040:	b	45fb0 <luaL_typerror@@Base+0xfc44>
   46044:	cmn	r7, #5
   46048:	bne	45f04 <luaL_typerror@@Base+0xfb98>
   4604c:	ldr	r1, [r2]
   46050:	ldr	r0, [r5]
   46054:	bl	14724 <_start@@Base+0x1374>
   46058:	tst	r4, #2
   4605c:	lsreq	r0, r0, #31
   46060:	beq	46070 <luaL_typerror@@Base+0xfd04>
   46064:	cmp	r0, #0
   46068:	movgt	r0, #0
   4606c:	movle	r0, #1
   46070:	and	r4, r4, #1
   46074:	eor	r0, r0, r4
   46078:	b	46024 <luaL_typerror@@Base+0xfcb8>
   4607c:	ldr	r7, [r5, #4]
   46080:	ldr	r2, [r6, #4]
   46084:	mov	r1, r7
   46088:	ldr	r0, [sp, #12]
   4608c:	bl	45e34 <luaL_typerror@@Base+0xfac8>
   46090:	ldrdeq	fp, [r6], -r4
   46094:	andeq	fp, r6, r4, ror #31
   46098:	push	{r4, r5, r6, lr}
   4609c:	mov	r6, r0
   460a0:	mov	r4, r2
   460a4:	ldr	r0, [r0, #8]
   460a8:	mov	r2, #9
   460ac:	mov	r5, r1
   460b0:	bl	1b010 <_start@@Base+0x7c60>
   460b4:	ldr	r3, [r0, #4]
   460b8:	cmn	r3, #9
   460bc:	beq	460cc <luaL_typerror@@Base+0xfd60>
   460c0:	b	460e0 <luaL_typerror@@Base+0xfd74>
   460c4:	ldrd	r2, [r4, #-8]
   460c8:	strd	r2, [r4], #-8
   460cc:	cmp	r5, r4
   460d0:	bcc	460c4 <luaL_typerror@@Base+0xfd58>
   460d4:	ldrd	r2, [r0]
   460d8:	strd	r2, [r5]
   460dc:	pop	{r4, r5, r6, pc}
   460e0:	mov	r1, r5
   460e4:	mov	r0, r6
   460e8:	bl	131c8 <pclose@plt+0x12c>

000460ec <luaL_error@@Base>:
   460ec:	push	{r1, r2, r3}
   460f0:	push	{r4, lr}
   460f4:	sub	sp, sp, #12
   460f8:	add	r3, sp, #24
   460fc:	ldr	r1, [sp, #20]
   46100:	mov	r2, r3
   46104:	mov	r4, r0
   46108:	str	r3, [sp, #4]
   4610c:	bl	1fe24 <lua_getstack@@Base+0x16c>
   46110:	mov	r1, r0
   46114:	mov	r0, r4
   46118:	bl	359a8 <lua_error@@Base+0x8>
   4611c:	push	{r2, r3}
   46120:	subs	r3, r1, #0
   46124:	push	{r7, lr}
   46128:	sub	sp, sp, #8
   4612c:	mov	r4, r0
   46130:	ldr	r6, [sp, #16]
   46134:	beq	461c4 <luaL_error@@Base+0xd8>
   46138:	sub	r2, r3, #256	; 0x100
   4613c:	cmp	r2, #2
   46140:	bhi	46210 <luaL_error@@Base+0x124>
   46144:	mov	r5, r4
   46148:	ldr	r3, [r4, #36]	; 0x24
   4614c:	ldr	r0, [r5, #28]!
   46150:	cmp	r0, r3
   46154:	beq	46228 <luaL_error@@Base+0x13c>
   46158:	ldr	r0, [r4, #28]
   4615c:	ldr	r3, [r4, #32]
   46160:	cmp	r3, r0
   46164:	beq	46244 <luaL_error@@Base+0x158>
   46168:	mov	r3, #0
   4616c:	strb	r3, [r0], #1
   46170:	ldr	r8, [r4, #36]	; 0x24
   46174:	str	r0, [r4, #28]
   46178:	ldr	r7, [pc, #228]	; 46264 <luaL_error@@Base+0x178>
   4617c:	ldr	r5, [r4, #44]	; 0x2c
   46180:	add	r3, sp, #20
   46184:	ldr	r1, [r7]
   46188:	mov	r0, r5
   4618c:	add	r1, r1, r6
   46190:	mov	r2, r3
   46194:	str	r3, [sp, #4]
   46198:	bl	1fe24 <lua_getstack@@Base+0x16c>
   4619c:	cmp	r8, #0
   461a0:	beq	461e8 <luaL_error@@Base+0xfc>
   461a4:	ldr	r1, [r7]
   461a8:	mov	r2, r0
   461ac:	add	r1, r1, #2128	; 0x850
   461b0:	mov	r3, r8
   461b4:	add	r1, r1, #10
   461b8:	mov	r0, r5
   461bc:	bl	20040 <lua_getstack@@Base+0x388>
   461c0:	b	461e8 <luaL_error@@Base+0xfc>
   461c4:	ldr	r2, [pc, #152]	; 46264 <luaL_error@@Base+0x178>
   461c8:	ldr	r5, [r0, #44]	; 0x2c
   461cc:	add	r3, sp, #20
   461d0:	ldr	r1, [r2]
   461d4:	mov	r0, r5
   461d8:	add	r1, r1, r6
   461dc:	mov	r2, r3
   461e0:	str	r3, [sp, #4]
   461e4:	bl	1fe24 <lua_getstack@@Base+0x16c>
   461e8:	ldr	r3, [r4, #60]	; 0x3c
   461ec:	cmp	r3, #1
   461f0:	ble	46204 <luaL_error@@Base+0x118>
   461f4:	mov	r2, r0
   461f8:	ldr	r1, [pc, #104]	; 46268 <luaL_error@@Base+0x17c>
   461fc:	mov	r0, r5
   46200:	bl	20040 <lua_getstack@@Base+0x388>
   46204:	mov	r1, r0
   46208:	mov	r0, r5
   4620c:	bl	359a8 <lua_error@@Base+0x8>
   46210:	cmp	r3, #268	; 0x10c
   46214:	bgt	46144 <luaL_error@@Base+0x58>
   46218:	add	r0, r0, #44	; 0x2c
   4621c:	bl	20190 <luaL_where@@Base+0x8c>
   46220:	mov	r8, r0
   46224:	b	46178 <luaL_error@@Base+0x8c>
   46228:	ldr	r3, [r4, #32]
   4622c:	cmp	r3, r0
   46230:	beq	46254 <luaL_error@@Base+0x168>
   46234:	mov	r3, #36	; 0x24
   46238:	strb	r3, [r0], #1
   4623c:	str	r0, [r4, #28]
   46240:	b	46158 <luaL_error@@Base+0x6c>
   46244:	mov	r0, r5
   46248:	mov	r1, #1
   4624c:	bl	2ff68 <luaL_where@@Base+0xfe64>
   46250:	b	46168 <luaL_error@@Base+0x7c>
   46254:	mov	r1, #1
   46258:	mov	r0, r5
   4625c:	bl	2ff68 <luaL_where@@Base+0xfe64>
   46260:	b	46234 <luaL_error@@Base+0x148>
   46264:	muleq	r8, ip, r1
   46268:	ldrdeq	r2, [r7], -r0
   4626c:	push	{r4, lr}
   46270:	mov	r4, r0
   46274:	add	r0, r0, #44	; 0x2c
   46278:	ldr	r5, [r4, #4]
   4627c:	bl	20190 <luaL_where@@Base+0x8c>
   46280:	mov	r1, r5
   46284:	ldr	r2, [pc, #8]	; 46294 <luaL_error@@Base+0x1a8>
   46288:	mov	r3, r0
   4628c:	mov	r0, r4
   46290:	bl	4611c <luaL_error@@Base+0x30>
   46294:	andeq	r0, r0, r9, lsr #18
   46298:	mov	r2, r1
   4629c:	push	{r4, lr}
   462a0:	mov	r1, #0
   462a4:	bl	4611c <luaL_error@@Base+0x30>
   462a8:	push	{r4, lr}
   462ac:	mov	r1, #2176	; 0x880
   462b0:	ldr	r0, [r0, #16]
   462b4:	bl	46298 <luaL_error@@Base+0x1ac>
   462b8:	ldr	r3, [r0, #16]
   462bc:	push	{r4, r5, r6, lr}
   462c0:	mov	r4, r0
   462c4:	ldr	r3, [r3, #48]	; 0x30
   462c8:	ldr	r3, [r3]
   462cc:	add	r2, r3, r1, lsl #4
   462d0:	ldr	r5, [r3, r1, lsl #4]
   462d4:	ldr	r6, [r2, #4]
   462d8:	lsr	r3, r5, #28
   462dc:	sub	r3, r3, #1
   462e0:	cmp	r3, #7
   462e4:	ldrls	pc, [pc, r3, lsl #2]
   462e8:	b	464d8 <luaL_error@@Base+0x3ec>
   462ec:	andeq	r6, r4, r0, asr #8
   462f0:	ldrdeq	r6, [r4], -r8
   462f4:	andeq	r6, r4, r8, asr #7
   462f8:	ldrdeq	r6, [r4], -r8
   462fc:	andeq	r6, r4, r0, asr #8
   46300:	andeq	r6, r4, ip, ror r3
   46304:	ldrdeq	r6, [r4], -r8
   46308:	andeq	r6, r4, ip, lsl #6
   4630c:	ldr	r3, [pc, #552]	; 4653c <luaL_error@@Base+0x450>
   46310:	ldr	r2, [pc, #552]	; 46540 <luaL_error@@Base+0x454>
   46314:	and	r3, r3, r5
   46318:	cmp	r3, r2
   4631c:	uxth	r1, r5
   46320:	ldreq	r3, [r0, #32]
   46324:	lsr	r5, r5, #16
   46328:	biceq	r3, r3, r6
   4632c:	streq	r3, [r0, #32]
   46330:	bl	462b8 <luaL_error@@Base+0x1cc>
   46334:	ldr	r3, [r4]
   46338:	lsl	r5, r5, #16
   4633c:	cmp	r3, #99	; 0x63
   46340:	bhi	46534 <luaL_error@@Base+0x448>
   46344:	add	r2, r4, r3, lsl #4
   46348:	mov	r0, #0
   4634c:	str	r5, [r2, #52]	; 0x34
   46350:	str	r6, [r2, #56]	; 0x38
   46354:	ldr	r1, [r4, #4]
   46358:	strh	r0, [r2, #60]	; 0x3c
   4635c:	str	r0, [r2, #64]	; 0x40
   46360:	add	r1, r4, r1, lsl #4
   46364:	add	r0, r3, #1
   46368:	ldrh	ip, [r1, #62]	; 0x3e
   4636c:	strh	ip, [r2, #62]	; 0x3e
   46370:	strh	r3, [r1, #62]	; 0x3e
   46374:	stm	r4, {r0, r3}
   46378:	pop	{r4, r5, r6, pc}
   4637c:	ldr	r1, [r0]
   46380:	cmp	r1, #99	; 0x63
   46384:	bhi	46534 <luaL_error@@Base+0x448>
   46388:	add	r3, r0, r1, lsl #4
   4638c:	mov	ip, #0
   46390:	str	r5, [r3, #52]	; 0x34
   46394:	str	r6, [r3, #56]	; 0x38
   46398:	ldr	r0, [r0, #4]
   4639c:	strh	ip, [r3, #60]	; 0x3c
   463a0:	ldrh	lr, [r2, #8]
   463a4:	add	r2, r4, r0, lsl #4
   463a8:	add	r0, r1, #1
   463ac:	ldrh	r5, [r2, #62]	; 0x3e
   463b0:	str	ip, [r3, #64]	; 0x40
   463b4:	strh	r5, [r3, #62]	; 0x3e
   463b8:	strh	r1, [r2, #62]	; 0x3e
   463bc:	strd	r0, [r4]
   463c0:	strh	lr, [r3, #60]	; 0x3c
   463c4:	pop	{r4, r5, r6, pc}
   463c8:	tst	r5, #201326592	; 0xc000000
   463cc:	ldrne	r3, [r0, #32]
   463d0:	andne	r2, r3, #50331648	; 0x3000000
   463d4:	orrne	r5, r5, r2
   463d8:	bicne	r3, r3, #50331648	; 0x3000000
   463dc:	strne	r3, [r0, #32]
   463e0:	uxth	r1, r5
   463e4:	bl	462b8 <luaL_error@@Base+0x1cc>
   463e8:	ldr	r2, [r4]
   463ec:	lsr	r5, r5, #16
   463f0:	cmp	r2, #99	; 0x63
   463f4:	lsl	r5, r5, #16
   463f8:	bhi	46534 <luaL_error@@Base+0x448>
   463fc:	add	r3, r4, r2, lsl #4
   46400:	mov	r0, #0
   46404:	str	r5, [r3, #52]	; 0x34
   46408:	str	r6, [r3, #56]	; 0x38
   4640c:	ldr	r1, [r4, #4]
   46410:	strh	r0, [r3, #60]	; 0x3c
   46414:	str	r0, [r3, #64]	; 0x40
   46418:	add	r1, r4, r1, lsl #4
   4641c:	add	ip, r2, #1
   46420:	ldrh	lr, [r1, #62]	; 0x3e
   46424:	mov	r0, #1
   46428:	strh	lr, [r3, #62]	; 0x3e
   4642c:	strh	r2, [r1, #62]	; 0x3e
   46430:	str	r2, [r4, #4]
   46434:	str	ip, [r4]
   46438:	strh	r0, [r3, #60]	; 0x3c
   4643c:	pop	{r4, r5, r6, pc}
   46440:	ldr	r2, [r0]
   46444:	add	r1, r1, #1879048192	; 0x70000000
   46448:	cmp	r2, #99	; 0x63
   4644c:	bhi	46534 <luaL_error@@Base+0x448>
   46450:	add	r3, r0, r2, lsl #4
   46454:	mov	r0, #0
   46458:	str	r1, [r3, #52]	; 0x34
   4645c:	str	r0, [r3, #56]	; 0x38
   46460:	ldr	r1, [r4, #4]
   46464:	ldr	ip, [r4, #32]
   46468:	strh	r0, [r3, #60]	; 0x3c
   4646c:	add	r1, r4, r1, lsl #4
   46470:	ands	r6, ip, #50331648	; 0x3000000
   46474:	ldrh	r5, [r1, #62]	; 0x3e
   46478:	add	lr, r2, #1
   4647c:	str	r0, [r3, #64]	; 0x40
   46480:	strh	r5, [r3, #62]	; 0x3e
   46484:	strh	r2, [r1, #62]	; 0x3e
   46488:	str	r2, [r4, #4]
   4648c:	str	lr, [r4]
   46490:	popeq	{r4, r5, r6, pc}
   46494:	cmp	lr, #100	; 0x64
   46498:	beq	46534 <luaL_error@@Base+0x448>
   4649c:	add	r1, r4, lr, lsl #4
   464a0:	ldr	r5, [pc, #152]	; 46540 <luaL_error@@Base+0x454>
   464a4:	str	r6, [r3, #72]	; 0x48
   464a8:	str	r5, [r3, #68]	; 0x44
   464ac:	strh	r0, [r1, #60]	; 0x3c
   464b0:	ldrh	r5, [r3, #62]	; 0x3e
   464b4:	add	r2, r2, #2
   464b8:	bic	ip, ip, #50331648	; 0x3000000
   464bc:	str	r0, [r1, #64]	; 0x40
   464c0:	strh	r5, [r1, #62]	; 0x3e
   464c4:	strh	lr, [r3, #62]	; 0x3e
   464c8:	str	r2, [r4]
   464cc:	str	ip, [r4, #32]
   464d0:	str	lr, [r4, #4]
   464d4:	pop	{r4, r5, r6, pc}
   464d8:	ldr	r1, [r0, #32]
   464dc:	ldr	r3, [r0]
   464e0:	and	r2, r1, #50331648	; 0x3000000
   464e4:	cmp	r3, #99	; 0x63
   464e8:	orr	r5, r2, r5
   464ec:	bhi	46534 <luaL_error@@Base+0x448>
   464f0:	add	r2, r0, r3, lsl #4
   464f4:	mov	ip, #0
   464f8:	str	r5, [r2, #52]	; 0x34
   464fc:	str	r6, [r2, #56]	; 0x38
   46500:	ldr	r0, [r0, #4]
   46504:	strh	ip, [r2, #60]	; 0x3c
   46508:	bic	r1, r1, #50331648	; 0x3000000
   4650c:	add	r0, r4, r0, lsl #4
   46510:	add	lr, r3, #1
   46514:	ldrh	r5, [r0, #62]	; 0x3e
   46518:	str	ip, [r2, #64]	; 0x40
   4651c:	strh	r5, [r2, #62]	; 0x3e
   46520:	strh	r3, [r0, #62]	; 0x3e
   46524:	str	r1, [r4, #32]
   46528:	str	r3, [r4, #4]
   4652c:	str	lr, [r4]
   46530:	pop	{r4, r5, r6, pc}
   46534:	mov	r0, r4
   46538:	bl	462a8 <luaL_error@@Base+0x1bc>
   4653c:			; <UNDEFINED> instruction: 0xf0ff0000
   46540:	andhi	r0, r1, r0
   46544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   46548:	mov	r8, #0
   4654c:	sub	sp, sp, #12
   46550:	mov	r9, r0
   46554:	mov	r5, r1
   46558:	mov	r2, r8
   4655c:	mov	r7, r8
   46560:	mvn	sl, #0
   46564:	lsl	r2, r2, #4
   46568:	add	r1, r5, r2
   4656c:	ldr	r6, [r1, #52]	; 0x34
   46570:	ldrh	r4, [r1, #62]	; 0x3e
   46574:	lsr	r0, r6, #28
   46578:	cmp	r0, #7
   4657c:	beq	4663c <luaL_error@@Base+0x550>
   46580:	cmp	r0, #6
   46584:	ldr	fp, [r1, #56]	; 0x38
   46588:	beq	4665c <luaL_error@@Base+0x570>
   4658c:	cmp	r0, #8
   46590:	beq	46704 <luaL_error@@Base+0x618>
   46594:	cmp	r0, #0
   46598:	bne	46750 <luaL_error@@Base+0x664>
   4659c:	tst	r6, #134217728	; 0x8000000
   465a0:	ldr	r0, [r9, #48]	; 0x30
   465a4:	bne	465ec <luaL_error@@Base+0x500>
   465a8:	ldr	r8, [r5, #32]
   465ac:	lsr	r3, r8, #8
   465b0:	ands	r3, r3, #255	; 0xff
   465b4:	lsr	r8, r8, #4
   465b8:	and	r8, r8, #15
   465bc:	beq	465d4 <luaL_error@@Base+0x4e8>
   465c0:	tst	r6, #67108864	; 0x4000000
   465c4:	beq	4661c <luaL_error@@Base+0x530>
   465c8:	sub	r2, r3, #4
   465cc:	bics	r2, r2, #4
   465d0:	beq	4661c <luaL_error@@Base+0x530>
   465d4:	cmp	r8, #0
   465d8:	beq	465ec <luaL_error@@Base+0x500>
   465dc:	clz	r3, fp
   465e0:	eor	r3, r3, #31
   465e4:	cmp	r8, r3
   465e8:	bcs	46880 <luaL_error@@Base+0x794>
   465ec:	add	r8, r7, r6
   465f0:	mov	r2, fp
   465f4:	mov	r1, r8
   465f8:	bl	41060 <luaL_typerror@@Base+0xacf4>
   465fc:	mov	sl, fp
   46600:	mov	r2, r4
   46604:	mov	r7, r0
   46608:	cmp	r4, #0
   4660c:	bne	46564 <luaL_error@@Base+0x478>
   46610:	mov	r0, r7
   46614:	add	sp, sp, #12
   46618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4661c:	clz	r2, r3
   46620:	eor	r2, r2, #31
   46624:	cmp	r2, #4
   46628:	movge	r2, #4
   4662c:	bic	r6, r6, #983040	; 0xf0000
   46630:	orr	r6, r6, r2, lsl #16
   46634:	mov	fp, r3
   46638:	b	465d4 <luaL_error@@Base+0x4e8>
   4663c:	ldr	r3, [r9, #48]	; 0x30
   46640:	uxth	r7, r6
   46644:	mov	r2, r4
   46648:	ldr	r3, [r3]
   4664c:	add	r1, r3, r7, lsl #4
   46650:	ldr	r8, [r3, r7, lsl #4]
   46654:	ldr	sl, [r1, #4]
   46658:	b	46608 <luaL_error@@Base+0x51c>
   4665c:	cmp	r7, #0
   46660:	ldr	r0, [r9, #48]	; 0x30
   46664:	beq	466a4 <luaL_error@@Base+0x5b8>
   46668:	ldr	r1, [r0]
   4666c:	ldr	r3, [r1, r7, lsl #4]
   46670:	lsr	ip, r3, #28
   46674:	cmp	ip, #8
   46678:	bne	46690 <luaL_error@@Base+0x5a4>
   4667c:	uxth	r3, r3
   46680:	ldr	r3, [r1, r3, lsl #4]
   46684:	lsr	ip, r3, #28
   46688:	cmp	ip, #8
   4668c:	beq	4667c <luaL_error@@Base+0x590>
   46690:	cmp	ip, #6
   46694:	beq	46874 <luaL_error@@Base+0x788>
   46698:	and	r3, r3, #-67108864	; 0xfc000000
   4669c:	cmp	r3, #805306368	; 0x30000000
   466a0:	beq	46874 <luaL_error@@Base+0x788>
   466a4:	cmp	r4, #0
   466a8:	bne	466c0 <luaL_error@@Base+0x5d4>
   466ac:	b	466d4 <luaL_error@@Base+0x5e8>
   466b0:	add	r4, r5, r4, lsl #4
   466b4:	ldrh	r4, [r4, #62]	; 0x3e
   466b8:	cmp	r4, #0
   466bc:	beq	466d4 <luaL_error@@Base+0x5e8>
   466c0:	add	r3, r5, r4, lsl #4
   466c4:	ldr	r3, [r3, #52]	; 0x34
   466c8:	lsr	r3, r3, #28
   466cc:	cmp	r3, #8
   466d0:	beq	466b0 <luaL_error@@Base+0x5c4>
   466d4:	add	r2, r5, r2
   466d8:	add	r1, sp, #4
   466dc:	ldrh	sl, [r2, #60]	; 0x3c
   466e0:	bl	4561c <luaL_typerror@@Base+0xf2b0>
   466e4:	ldr	r1, [sp, #4]
   466e8:	add	r8, r7, r6
   466ec:	mov	r2, r4
   466f0:	strh	sl, [r1, #8]
   466f4:	stm	r1, {r8, fp}
   466f8:	mvn	sl, #0
   466fc:	mov	r7, r0
   46700:	b	46608 <luaL_error@@Base+0x51c>
   46704:	ldr	r2, [pc, #456]	; 468d4 <luaL_error@@Base+0x7e8>
   46708:	ldr	r1, [pc, #456]	; 468d8 <luaL_error@@Base+0x7ec>
   4670c:	and	r2, r2, r6
   46710:	cmp	r2, r1
   46714:	orreq	r8, r8, fp
   46718:	beq	46734 <luaL_error@@Base+0x648>
   4671c:	ldr	r1, [pc, #440]	; 468dc <luaL_error@@Base+0x7f0>
   46720:	cmp	r2, r1
   46724:	lsleq	r2, fp, #16
   46728:	biceq	r8, r8, #983040	; 0xf0000
   4672c:	andeq	r2, r2, #983040	; 0xf0000
   46730:	orreq	r8, r2, r8
   46734:	mov	r2, fp
   46738:	add	r1, r7, r6
   4673c:	ldr	r0, [r9, #48]	; 0x30
   46740:	bl	41060 <luaL_typerror@@Base+0xacf4>
   46744:	mov	r2, r4
   46748:	mov	r7, r0
   4674c:	b	46608 <luaL_error@@Base+0x51c>
   46750:	cmp	r0, #2
   46754:	beq	46768 <luaL_error@@Base+0x67c>
   46758:	cmp	r0, #3
   4675c:	beq	467bc <luaL_error@@Base+0x6d0>
   46760:	ldr	r0, [r9, #48]	; 0x30
   46764:	b	465ec <luaL_error@@Base+0x500>
   46768:	cmp	r7, #0
   4676c:	ldr	r0, [r9, #48]	; 0x30
   46770:	bne	46838 <luaL_error@@Base+0x74c>
   46774:	ldr	r3, [pc, #356]	; 468e0 <luaL_error@@Base+0x7f4>
   46778:	and	r3, r6, r3
   4677c:	cmp	r3, #545259520	; 0x20800000
   46780:	bne	465ec <luaL_error@@Base+0x500>
   46784:	cmp	r4, #0
   46788:	bic	r6, r6, #16777216	; 0x1000000
   4678c:	bne	467a4 <luaL_error@@Base+0x6b8>
   46790:	b	465ec <luaL_error@@Base+0x500>
   46794:	add	r4, r5, r4, lsl #4
   46798:	ldrh	r4, [r4, #62]	; 0x3e
   4679c:	cmp	r4, #0
   467a0:	beq	465ec <luaL_error@@Base+0x500>
   467a4:	add	r3, r5, r4, lsl #4
   467a8:	ldr	r3, [r3, #52]	; 0x34
   467ac:	lsr	r3, r3, #28
   467b0:	cmp	r3, #8
   467b4:	beq	46794 <luaL_error@@Base+0x6a8>
   467b8:	b	465ec <luaL_error@@Base+0x500>
   467bc:	ldrh	r2, [r1, #60]	; 0x3c
   467c0:	cmp	r2, #0
   467c4:	bne	46814 <luaL_error@@Base+0x728>
   467c8:	ldr	r2, [pc, #272]	; 468e0 <luaL_error@@Base+0x7f4>
   467cc:	and	r2, r8, r2
   467d0:	cmp	r2, #545259520	; 0x20800000
   467d4:	beq	46874 <luaL_error@@Base+0x788>
   467d8:	ldr	r2, [pc, #260]	; 468e4 <luaL_error@@Base+0x7f8>
   467dc:	ldr	r3, [pc, #260]	; 468e8 <luaL_error@@Base+0x7fc>
   467e0:	and	r2, r8, r2
   467e4:	cmn	sl, #1
   467e8:	cmpne	r2, r3
   467ec:	beq	468c8 <luaL_error@@Base+0x7dc>
   467f0:	cmn	fp, #1
   467f4:	beq	46814 <luaL_error@@Base+0x728>
   467f8:	umull	sl, fp, fp, sl
   467fc:	mov	r1, #0
   46800:	mvn	r0, #-2147483648	; 0x80000000
   46804:	cmp	fp, r1
   46808:	cmpeq	sl, r0
   4680c:	bhi	468c8 <luaL_error@@Base+0x7dc>
   46810:	mov	fp, sl
   46814:	and	r2, r6, #983040	; 0xf0000
   46818:	and	r3, r8, #983040	; 0xf0000
   4681c:	cmp	r3, r2
   46820:	bichi	r6, r6, #983040	; 0xf0000
   46824:	orrhi	r6, r3, r6
   46828:	and	r8, r8, #50331648	; 0x3000000
   4682c:	ldr	r0, [r9, #48]	; 0x30
   46830:	orr	r6, r6, r8
   46834:	b	465ec <luaL_error@@Base+0x500>
   46838:	ldr	r1, [r0]
   4683c:	ldr	r3, [r1, r7, lsl #4]
   46840:	lsr	r2, r3, #28
   46844:	cmp	r2, #8
   46848:	bne	46860 <luaL_error@@Base+0x774>
   4684c:	uxth	r3, r3
   46850:	ldr	r3, [r1, r3, lsl #4]
   46854:	lsr	r2, r3, #28
   46858:	cmp	r2, #8
   4685c:	beq	4684c <luaL_error@@Base+0x760>
   46860:	bic	r3, r3, #251658240	; 0xf000000
   46864:	lsr	r3, r3, #23
   46868:	lsl	r3, r3, #23
   4686c:	cmp	r3, #545259520	; 0x20800000
   46870:	bne	46774 <luaL_error@@Base+0x688>
   46874:	mov	r0, r9
   46878:	mov	r1, #2976	; 0xba0
   4687c:	bl	46298 <luaL_error@@Base+0x1ac>
   46880:	mov	r2, fp
   46884:	mov	r1, r6
   46888:	bl	41060 <luaL_typerror@@Base+0xacf4>
   4688c:	cmp	r8, #4
   46890:	lsr	r3, r6, #16
   46894:	movcc	r2, r8
   46898:	and	r3, r3, #15
   4689c:	movcs	r2, #4
   468a0:	and	r6, r6, #50331648	; 0x3000000
   468a4:	add	r6, r6, #939524096	; 0x38000000
   468a8:	cmp	r3, r2
   468ac:	movcc	r3, r2
   468b0:	mov	r2, #1
   468b4:	mov	r7, r0
   468b8:	add	r6, r6, r3, lsl #16
   468bc:	lsl	fp, r2, r8
   468c0:	ldr	r0, [r9, #48]	; 0x30
   468c4:	b	465ec <luaL_error@@Base+0x500>
   468c8:	mov	r0, r9
   468cc:	ldr	r1, [pc, #24]	; 468ec <luaL_error@@Base+0x800>
   468d0:	bl	46298 <luaL_error@@Base+0x1ac>
   468d4:			; <UNDEFINED> instruction: 0xf0ff0000
   468d8:	andhi	r0, r1, r0
   468dc:	andhi	r0, r2, r0
   468e0:			; <UNDEFINED> instruction: 0xf0800000
   468e4:	andsle	r0, r0, r0
   468e8:	andsne	r0, r0, r0
   468ec:	andeq	r0, r0, pc, lsr #23
   468f0:	push	{r4, r5, r6, r7, r8, lr}
   468f4:	mov	r4, r0
   468f8:	ldr	r8, [pc, #3456]	; 47680 <luaL_error@@Base+0x1594>
   468fc:	ldr	r7, [r0]
   46900:	ldr	r3, [r0, #36]	; 0x24
   46904:	sub	sp, sp, #8
   46908:	str	r3, [r0, #28]
   4690c:	add	r3, r8, r7
   46910:	ldrb	r3, [r3, #189]	; 0xbd
   46914:	tst	r3, #128	; 0x80
   46918:	bne	47390 <luaL_error@@Base+0x12a4>
   4691c:	cmp	r7, #124	; 0x7c
   46920:	ldrls	pc, [pc, r7, lsl #2]
   46924:	b	4717c <luaL_error@@Base+0x1090>
   46928:	andeq	r6, r4, r8, asr #22
   4692c:	andeq	r7, r4, ip, ror r1
   46930:	andeq	r7, r4, ip, ror r1
   46934:	andeq	r7, r4, ip, ror r1
   46938:	andeq	r7, r4, ip, ror r1
   4693c:	andeq	r7, r4, ip, ror r1
   46940:	andeq	r7, r4, ip, ror r1
   46944:	andeq	r7, r4, ip, ror r1
   46948:	andeq	r7, r4, ip, ror r1
   4694c:	andeq	r6, r4, ip, lsl fp
   46950:			; <UNDEFINED> instruction: 0x00046bb4
   46954:	andeq	r6, r4, ip, lsl fp
   46958:	andeq	r6, r4, ip, lsl fp
   4695c:			; <UNDEFINED> instruction: 0x00046bb4
   46960:	andeq	r7, r4, ip, ror r1
   46964:	andeq	r7, r4, ip, ror r1
   46968:	andeq	r7, r4, ip, ror r1
   4696c:	andeq	r7, r4, ip, ror r1
   46970:	andeq	r7, r4, ip, ror r1
   46974:	andeq	r7, r4, ip, ror r1
   46978:	andeq	r7, r4, ip, ror r1
   4697c:	andeq	r7, r4, ip, ror r1
   46980:	andeq	r7, r4, ip, ror r1
   46984:	andeq	r7, r4, ip, ror r1
   46988:	andeq	r7, r4, ip, ror r1
   4698c:	andeq	r7, r4, ip, ror r1
   46990:	andeq	r7, r4, ip, ror r1
   46994:	andeq	r7, r4, ip, ror r1
   46998:	andeq	r7, r4, ip, ror r1
   4699c:	andeq	r7, r4, ip, ror r1
   469a0:	andeq	r7, r4, ip, ror r1
   469a4:	andeq	r7, r4, ip, ror r1
   469a8:	andeq	r6, r4, ip, lsl fp
   469ac:	strdeq	r6, [r4], -ip
   469b0:	andeq	r6, r4, r4, asr ip
   469b4:	andeq	r7, r4, ip, ror r1
   469b8:	andeq	r6, r4, r0, ror #27
   469bc:	andeq	r7, r4, ip, ror r1
   469c0:	andeq	r6, r4, r8, lsr pc
   469c4:	andeq	r6, r4, r4, asr ip
   469c8:	andeq	r7, r4, ip, ror r1
   469cc:	andeq	r7, r4, ip, ror r1
   469d0:	andeq	r7, r4, ip, ror r1
   469d4:	andeq	r7, r4, ip, ror r1
   469d8:	andeq	r7, r4, ip, ror r1
   469dc:	muleq	r4, r0, pc	; <UNPREDICTABLE>
   469e0:	andeq	r7, r4, ip, ror r1
   469e4:	andeq	r6, r4, r8, ror #31
   469e8:	andeq	r7, r4, ip, ror r1
   469ec:	andeq	r7, r4, ip, ror r1
   469f0:	andeq	r7, r4, ip, ror r1
   469f4:	andeq	r7, r4, ip, ror r1
   469f8:	andeq	r7, r4, ip, ror r1
   469fc:	andeq	r7, r4, ip, ror r1
   46a00:	andeq	r7, r4, ip, ror r1
   46a04:	andeq	r7, r4, ip, ror r1
   46a08:	andeq	r7, r4, ip, ror r1
   46a0c:	andeq	r7, r4, ip, ror r1
   46a10:	andeq	r7, r4, ip, ror r1
   46a14:	andeq	r7, r4, ip, ror r1
   46a18:	andeq	r7, r4, r0, rrx
   46a1c:	andeq	r6, r4, ip, ror lr
   46a20:	ldrdeq	r6, [r4], -r4
   46a24:	andeq	r7, r4, ip, ror r1
   46a28:	andeq	r7, r4, ip, ror r1
   46a2c:	andeq	r7, r4, ip, ror r1
   46a30:	andeq	r7, r4, ip, ror r1
   46a34:	andeq	r7, r4, ip, ror r1
   46a38:	andeq	r7, r4, ip, ror r1
   46a3c:	andeq	r7, r4, ip, ror r1
   46a40:	andeq	r7, r4, ip, ror r1
   46a44:	andeq	r7, r4, ip, ror r1
   46a48:	andeq	r7, r4, ip, ror r1
   46a4c:	andeq	r7, r4, ip, ror r1
   46a50:	andeq	r7, r4, ip, ror r1
   46a54:	andeq	r7, r4, ip, ror r1
   46a58:	andeq	r7, r4, ip, ror r1
   46a5c:	andeq	r7, r4, ip, ror r1
   46a60:	andeq	r7, r4, ip, ror r1
   46a64:	andeq	r7, r4, ip, ror r1
   46a68:	andeq	r7, r4, ip, ror r1
   46a6c:	andeq	r7, r4, ip, ror r1
   46a70:	andeq	r7, r4, ip, ror r1
   46a74:	andeq	r7, r4, ip, ror r1
   46a78:	andeq	r7, r4, ip, ror r1
   46a7c:	andeq	r7, r4, ip, ror r1
   46a80:	andeq	r7, r4, ip, ror r1
   46a84:	andeq	r7, r4, ip, ror r1
   46a88:	andeq	r7, r4, ip, ror r1
   46a8c:	andeq	r7, r4, ip, ror r1
   46a90:	andeq	r7, r4, ip, ror r1
   46a94:	andeq	r7, r4, ip, ror r1
   46a98:	andeq	r7, r4, ip, ror r1
   46a9c:	andeq	r7, r4, ip, ror r1
   46aa0:	andeq	r7, r4, ip, ror r1
   46aa4:	andeq	r7, r4, ip, ror r1
   46aa8:	andeq	r7, r4, ip, ror r1
   46aac:	andeq	r7, r4, ip, ror r1
   46ab0:	andeq	r7, r4, ip, ror r1
   46ab4:	andeq	r7, r4, ip, ror r1
   46ab8:	andeq	r7, r4, ip, ror r1
   46abc:	andeq	r7, r4, ip, ror r1
   46ac0:	andeq	r7, r4, ip, ror r1
   46ac4:	andeq	r7, r4, ip, ror r1
   46ac8:	andeq	r7, r4, ip, ror r1
   46acc:	andeq	r7, r4, ip, ror r1
   46ad0:	andeq	r7, r4, ip, ror r1
   46ad4:	andeq	r7, r4, ip, ror r1
   46ad8:	andeq	r7, r4, ip, ror r1
   46adc:	andeq	r7, r4, ip, ror r1
   46ae0:	andeq	r7, r4, ip, ror r1
   46ae4:	andeq	r7, r4, ip, ror r1
   46ae8:	andeq	r7, r4, ip, ror r1
   46aec:	andeq	r7, r4, ip, ror r1
   46af0:	andeq	r7, r4, ip, ror r1
   46af4:	andeq	r7, r4, ip, ror r1
   46af8:	andeq	r7, r4, ip, ror r1
   46afc:	andeq	r7, r4, ip, ror r1
   46b00:	andeq	r7, r4, ip, ror r1
   46b04:	andeq	r7, r4, ip, ror r1
   46b08:	andeq	r7, r4, ip, ror r1
   46b0c:	andeq	r7, r4, ip, ror r1
   46b10:	andeq	r7, r4, ip, ror r1
   46b14:	andeq	r7, r4, ip, ror r1
   46b18:	andeq	r6, r4, ip, asr fp
   46b1c:	ldr	r3, [r4, #24]
   46b20:	add	r2, r3, #1
   46b24:	str	r2, [r4, #24]
   46b28:	ldrb	r7, [r3]
   46b2c:	cmp	r7, #92	; 0x5c
   46b30:	str	r7, [r4]
   46b34:	bne	4690c <luaL_error@@Base+0x820>
   46b38:	mov	r0, r4
   46b3c:	bl	1741c <_start@@Base+0x406c>
   46b40:	ldr	r7, [r4]
   46b44:	b	4690c <luaL_error@@Base+0x820>
   46b48:	ldr	r7, [pc, #2868]	; 47684 <luaL_error@@Base+0x1598>
   46b4c:	mov	r0, r7
   46b50:	str	r7, [r4, #4]
   46b54:	add	sp, sp, #8
   46b58:	pop	{r4, r5, r6, r7, r8, pc}
   46b5c:	ldr	r3, [r4, #24]
   46b60:	add	r2, r3, #1
   46b64:	str	r2, [r4, #24]
   46b68:	ldrb	r0, [r3]
   46b6c:	cmp	r0, #92	; 0x5c
   46b70:	str	r0, [r4]
   46b74:	beq	47560 <luaL_error@@Base+0x1474>
   46b78:	cmp	r0, #124	; 0x7c
   46b7c:	movne	r7, #124	; 0x7c
   46b80:	bne	46b4c <luaL_error@@Base+0xa60>
   46b84:	ldr	r3, [r4, #24]
   46b88:	add	r2, r3, #1
   46b8c:	str	r2, [r4, #24]
   46b90:	ldrb	r3, [r3]
   46b94:	cmp	r3, #92	; 0x5c
   46b98:	str	r3, [r4]
   46b9c:	movne	r7, #260	; 0x104
   46ba0:	bne	46b4c <luaL_error@@Base+0xa60>
   46ba4:	mov	r0, r4
   46ba8:	bl	1741c <_start@@Base+0x406c>
   46bac:	mov	r7, #260	; 0x104
   46bb0:	b	46b4c <luaL_error@@Base+0xa60>
   46bb4:	ldr	r3, [r4, #24]
   46bb8:	mov	r2, r3
   46bbc:	ldrb	r0, [r2], #1
   46bc0:	cmp	r0, #13
   46bc4:	cmpne	r0, #10
   46bc8:	moveq	r1, #1
   46bcc:	movne	r1, #0
   46bd0:	cmp	r0, r7
   46bd4:	moveq	r7, #0
   46bd8:	andne	r7, r1, #1
   46bdc:	cmp	r7, #0
   46be0:	addne	r1, r3, #2
   46be4:	movne	r3, r2
   46be8:	movne	r2, r1
   46bec:	ldr	r1, [r4, #60]	; 0x3c
   46bf0:	add	r1, r1, #1
   46bf4:	str	r1, [r4, #60]	; 0x3c
   46bf8:	b	46b24 <luaL_error@@Base+0xa38>
   46bfc:	ldr	r3, [r4, #24]
   46c00:	add	r2, r3, #1
   46c04:	str	r2, [r4, #24]
   46c08:	ldrb	r0, [r3]
   46c0c:	cmp	r0, #92	; 0x5c
   46c10:	str	r0, [r4]
   46c14:	beq	47554 <luaL_error@@Base+0x1468>
   46c18:	cmp	r0, #61	; 0x3d
   46c1c:	movne	r7, #33	; 0x21
   46c20:	bne	46b4c <luaL_error@@Base+0xa60>
   46c24:	ldr	r3, [r4, #24]
   46c28:	add	r2, r3, #1
   46c2c:	str	r2, [r4, #24]
   46c30:	ldrb	r3, [r3]
   46c34:	cmp	r3, #92	; 0x5c
   46c38:	str	r3, [r4]
   46c3c:	ldrne	r7, [pc, #2628]	; 47688 <luaL_error@@Base+0x159c>
   46c40:	bne	46b4c <luaL_error@@Base+0xa60>
   46c44:	mov	r0, r4
   46c48:	bl	1741c <_start@@Base+0x406c>
   46c4c:	ldr	r7, [pc, #2612]	; 47688 <luaL_error@@Base+0x159c>
   46c50:	b	46b4c <luaL_error@@Base+0xa60>
   46c54:	ldr	r3, [r4, #24]
   46c58:	add	r2, r3, #1
   46c5c:	str	r2, [r4, #24]
   46c60:	ldrb	r3, [r3]
   46c64:	cmp	r3, #92	; 0x5c
   46c68:	str	r3, [r4]
   46c6c:	beq	4759c <luaL_error@@Base+0x14b0>
   46c70:	mov	r6, r4
   46c74:	ldr	r5, [r6], #28
   46c78:	b	46cb0 <luaL_error@@Base+0xbc4>
   46c7c:	ldr	r0, [r4, #28]
   46c80:	ldr	r3, [r4, #32]
   46c84:	cmp	r3, r0
   46c88:	beq	471d8 <luaL_error@@Base+0x10ec>
   46c8c:	strb	r5, [r0], #1
   46c90:	ldr	r3, [r4, #24]
   46c94:	str	r0, [r4, #28]
   46c98:	add	r2, r3, #1
   46c9c:	str	r2, [r4, #24]
   46ca0:	ldrb	r5, [r3]
   46ca4:	cmp	r5, #92	; 0x5c
   46ca8:	str	r5, [r4]
   46cac:	beq	471c8 <luaL_error@@Base+0x10dc>
   46cb0:	cmp	r5, r7
   46cb4:	beq	47254 <luaL_error@@Base+0x1168>
   46cb8:	cmp	r5, #0
   46cbc:	beq	47508 <luaL_error@@Base+0x141c>
   46cc0:	cmp	r5, #92	; 0x5c
   46cc4:	uxtbne	r5, r5
   46cc8:	bne	46c7c <luaL_error@@Base+0xb90>
   46ccc:	ldr	r3, [r4, #24]
   46cd0:	add	r2, r3, #1
   46cd4:	str	r2, [r4, #24]
   46cd8:	ldrb	r0, [r3]
   46cdc:	cmp	r0, #92	; 0x5c
   46ce0:	str	r0, [r4]
   46ce4:	beq	472c4 <luaL_error@@Base+0x11d8>
   46ce8:	cmp	r0, #102	; 0x66
   46cec:	beq	472bc <luaL_error@@Base+0x11d0>
   46cf0:	ble	471a4 <luaL_error@@Base+0x10b8>
   46cf4:	cmp	r0, #116	; 0x74
   46cf8:	beq	472ac <luaL_error@@Base+0x11c0>
   46cfc:	bgt	471e8 <luaL_error@@Base+0x10fc>
   46d00:	cmp	r0, #110	; 0x6e
   46d04:	beq	472b4 <luaL_error@@Base+0x11c8>
   46d08:	cmp	r0, #114	; 0x72
   46d0c:	moveq	r5, #13
   46d10:	beq	46c7c <luaL_error@@Base+0xb90>
   46d14:	add	r3, r8, r0
   46d18:	ldrb	r3, [r3, #189]	; 0xbd
   46d1c:	tst	r3, #8
   46d20:	uxtbeq	r5, r0
   46d24:	beq	46c7c <luaL_error@@Base+0xb90>
   46d28:	ldr	r3, [r4, #24]
   46d2c:	sub	r5, r0, #48	; 0x30
   46d30:	add	r2, r3, #1
   46d34:	str	r2, [r4, #24]
   46d38:	ldrb	r0, [r3]
   46d3c:	cmp	r0, #92	; 0x5c
   46d40:	str	r0, [r4]
   46d44:	beq	47600 <luaL_error@@Base+0x1514>
   46d48:	add	r0, r8, r0
   46d4c:	ldrb	r3, [r0, #189]	; 0xbd
   46d50:	tst	r3, #8
   46d54:	beq	46dc0 <luaL_error@@Base+0xcd4>
   46d58:	ldr	r2, [r4, #24]
   46d5c:	ldr	r3, [r4]
   46d60:	add	r1, r2, #1
   46d64:	str	r1, [r4, #24]
   46d68:	ldrb	r0, [r2]
   46d6c:	sub	r3, r3, #48	; 0x30
   46d70:	add	r5, r3, r5, lsl #3
   46d74:	cmp	r0, #92	; 0x5c
   46d78:	str	r0, [r4]
   46d7c:	beq	47624 <luaL_error@@Base+0x1538>
   46d80:	add	r0, r8, r0
   46d84:	ldrb	r3, [r0, #189]	; 0xbd
   46d88:	tst	r3, #8
   46d8c:	beq	46dc0 <luaL_error@@Base+0xcd4>
   46d90:	ldr	r2, [r4, #24]
   46d94:	ldr	r3, [r4]
   46d98:	add	r1, r2, #1
   46d9c:	str	r1, [r4, #24]
   46da0:	ldrb	r2, [r2]
   46da4:	sub	r3, r3, #48	; 0x30
   46da8:	add	r5, r3, r5, lsl #3
   46dac:	cmp	r2, #92	; 0x5c
   46db0:	str	r2, [r4]
   46db4:	bne	46dc0 <luaL_error@@Base+0xcd4>
   46db8:	mov	r0, r4
   46dbc:	bl	1741c <_start@@Base+0x406c>
   46dc0:	ldr	r0, [r4, #28]
   46dc4:	ldr	r3, [r4, #32]
   46dc8:	cmp	r3, r0
   46dcc:	beq	475f0 <luaL_error@@Base+0x1504>
   46dd0:	strb	r5, [r0], #1
   46dd4:	str	r0, [r4, #28]
   46dd8:	ldr	r5, [r4]
   46ddc:	b	46cb0 <luaL_error@@Base+0xbc4>
   46de0:	ldr	r3, [r4, #24]
   46de4:	add	r2, r3, #1
   46de8:	str	r2, [r4, #24]
   46dec:	ldrb	r0, [r3]
   46df0:	cmp	r0, #92	; 0x5c
   46df4:	str	r0, [r4]
   46df8:	beq	47590 <luaL_error@@Base+0x14a4>
   46dfc:	add	r8, r8, r0
   46e00:	sub	r2, r0, #36	; 0x24
   46e04:	ldrb	r1, [r8, #189]	; 0xbd
   46e08:	clz	r2, r2
   46e0c:	lsr	r2, r2, #5
   46e10:	ldr	r3, [r4, #52]	; 0x34
   46e14:	orrs	r2, r2, r1, lsr #7
   46e18:	bne	47654 <luaL_error@@Base+0x1568>
   46e1c:	cmp	r3, #0
   46e20:	beq	47674 <luaL_error@@Base+0x1588>
   46e24:	ldr	r0, [r4, #44]	; 0x2c
   46e28:	ldr	r1, [r0, #20]
   46e2c:	cmp	r3, r1
   46e30:	bcs	47674 <luaL_error@@Base+0x1588>
   46e34:	ldr	r1, [r3, #4]
   46e38:	add	ip, r3, #8
   46e3c:	cmn	r1, #5
   46e40:	str	ip, [r4, #52]	; 0x34
   46e44:	beq	47370 <luaL_error@@Base+0x1284>
   46e48:	cmn	r1, #14
   46e4c:	bls	472e0 <luaL_error@@Base+0x11f4>
   46e50:	cmn	r1, #11
   46e54:	bne	4763c <luaL_error@@Base+0x1550>
   46e58:	ldr	r2, [r3]
   46e5c:	ldrh	r3, [r2, #6]
   46e60:	cmp	r3, #21
   46e64:	moveq	r7, #36	; 0x24
   46e68:	ldreq	r3, [r2, #8]
   46e6c:	strne	r3, [r4, #12]
   46e70:	streq	r3, [r4, #12]
   46e74:	movne	r7, #36	; 0x24
   46e78:	b	46b4c <luaL_error@@Base+0xa60>
   46e7c:	ldr	r3, [r4, #24]
   46e80:	add	r2, r3, #1
   46e84:	str	r2, [r4, #24]
   46e88:	ldrb	r0, [r3]
   46e8c:	cmp	r0, #92	; 0x5c
   46e90:	str	r0, [r4]
   46e94:	beq	47530 <luaL_error@@Base+0x1444>
   46e98:	cmp	r0, #61	; 0x3d
   46e9c:	movne	r7, #61	; 0x3d
   46ea0:	bne	46b4c <luaL_error@@Base+0xa60>
   46ea4:	ldr	r3, [r4, #24]
   46ea8:	add	r2, r3, #1
   46eac:	str	r2, [r4, #24]
   46eb0:	ldrb	r3, [r3]
   46eb4:	cmp	r3, #92	; 0x5c
   46eb8:	str	r3, [r4]
   46ebc:	ldrne	r7, [pc, #1992]	; 4768c <luaL_error@@Base+0x15a0>
   46ec0:	bne	46b4c <luaL_error@@Base+0xa60>
   46ec4:	mov	r0, r4
   46ec8:	bl	1741c <_start@@Base+0x406c>
   46ecc:	ldr	r7, [pc, #1976]	; 4768c <luaL_error@@Base+0x15a0>
   46ed0:	b	46b4c <luaL_error@@Base+0xa60>
   46ed4:	ldr	r3, [r4, #24]
   46ed8:	add	r2, r3, #1
   46edc:	str	r2, [r4, #24]
   46ee0:	ldrb	r0, [r3]
   46ee4:	cmp	r0, #92	; 0x5c
   46ee8:	str	r0, [r4]
   46eec:	beq	4756c <luaL_error@@Base+0x1480>
   46ef0:	cmp	r0, #61	; 0x3d
   46ef4:	beq	47310 <luaL_error@@Base+0x1224>
   46ef8:	ldr	r3, [r4]
   46efc:	cmp	r3, #62	; 0x3e
   46f00:	movne	r7, #62	; 0x3e
   46f04:	bne	46b4c <luaL_error@@Base+0xa60>
   46f08:	ldr	r3, [r4, #24]
   46f0c:	add	r2, r3, #1
   46f10:	str	r2, [r4, #24]
   46f14:	ldrb	r3, [r3]
   46f18:	cmp	r3, #92	; 0x5c
   46f1c:	str	r3, [r4]
   46f20:	ldrne	r7, [pc, #1896]	; 47690 <luaL_error@@Base+0x15a4>
   46f24:	bne	46b4c <luaL_error@@Base+0xa60>
   46f28:	mov	r0, r4
   46f2c:	bl	1741c <_start@@Base+0x406c>
   46f30:	ldr	r7, [pc, #1880]	; 47690 <luaL_error@@Base+0x15a4>
   46f34:	b	46b4c <luaL_error@@Base+0xa60>
   46f38:	ldr	r3, [r4, #24]
   46f3c:	add	r2, r3, #1
   46f40:	str	r2, [r4, #24]
   46f44:	ldrb	r0, [r3]
   46f48:	cmp	r0, #92	; 0x5c
   46f4c:	str	r0, [r4]
   46f50:	beq	47584 <luaL_error@@Base+0x1498>
   46f54:	cmp	r0, #38	; 0x26
   46f58:	movne	r7, #38	; 0x26
   46f5c:	bne	46b4c <luaL_error@@Base+0xa60>
   46f60:	ldr	r3, [r4, #24]
   46f64:	add	r2, r3, #1
   46f68:	str	r2, [r4, #24]
   46f6c:	ldrb	r3, [r3]
   46f70:	cmp	r3, #92	; 0x5c
   46f74:	str	r3, [r4]
   46f78:	ldrne	r7, [pc, #1812]	; 47694 <luaL_error@@Base+0x15a8>
   46f7c:	bne	46b4c <luaL_error@@Base+0xa60>
   46f80:	mov	r0, r4
   46f84:	bl	1741c <_start@@Base+0x406c>
   46f88:	ldr	r7, [pc, #1796]	; 47694 <luaL_error@@Base+0x15a8>
   46f8c:	b	46b4c <luaL_error@@Base+0xa60>
   46f90:	ldr	r3, [r4, #24]
   46f94:	add	r2, r3, #1
   46f98:	str	r2, [r4, #24]
   46f9c:	ldrb	r0, [r3]
   46fa0:	cmp	r0, #92	; 0x5c
   46fa4:	str	r0, [r4]
   46fa8:	beq	47524 <luaL_error@@Base+0x1438>
   46fac:	cmp	r0, #62	; 0x3e
   46fb0:	movne	r7, #45	; 0x2d
   46fb4:	bne	46b4c <luaL_error@@Base+0xa60>
   46fb8:	ldr	r3, [r4, #24]
   46fbc:	add	r2, r3, #1
   46fc0:	str	r2, [r4, #24]
   46fc4:	ldrb	r3, [r3]
   46fc8:	cmp	r3, #92	; 0x5c
   46fcc:	str	r3, [r4]
   46fd0:	movne	r7, #268	; 0x10c
   46fd4:	bne	46b4c <luaL_error@@Base+0xa60>
   46fd8:	mov	r0, r4
   46fdc:	bl	1741c <_start@@Base+0x406c>
   46fe0:	mov	r7, #268	; 0x10c
   46fe4:	b	46b4c <luaL_error@@Base+0xa60>
   46fe8:	ldr	r3, [r4, #24]
   46fec:	add	r2, r3, #1
   46ff0:	str	r2, [r4, #24]
   46ff4:	ldrb	r0, [r3]
   46ff8:	cmp	r0, #92	; 0x5c
   46ffc:	str	r0, [r4]
   47000:	beq	47548 <luaL_error@@Base+0x145c>
   47004:	cmp	r0, #42	; 0x2a
   47008:	beq	47108 <luaL_error@@Base+0x101c>
   4700c:	ldr	r3, [r4]
   47010:	cmp	r3, #47	; 0x2f
   47014:	beq	47030 <luaL_error@@Base+0xf44>
   47018:	b	4760c <luaL_error@@Base+0x1520>
   4701c:	cmp	r0, #13
   47020:	cmpne	r0, #10
   47024:	beq	4690c <luaL_error@@Base+0x820>
   47028:	cmp	r7, #0
   4702c:	beq	4690c <luaL_error@@Base+0x820>
   47030:	ldr	r3, [r4, #24]
   47034:	add	r2, r3, #1
   47038:	str	r2, [r4, #24]
   4703c:	ldrb	r0, [r3]
   47040:	cmp	r0, #92	; 0x5c
   47044:	str	r0, [r4]
   47048:	movne	r7, r0
   4704c:	bne	4701c <luaL_error@@Base+0xf30>
   47050:	mov	r0, r4
   47054:	bl	1741c <_start@@Base+0x406c>
   47058:	ldr	r7, [r4]
   4705c:	b	4701c <luaL_error@@Base+0xf30>
   47060:	ldr	r3, [r4, #24]
   47064:	add	r2, r3, #1
   47068:	str	r2, [r4, #24]
   4706c:	ldrb	r0, [r3]
   47070:	cmp	r0, #92	; 0x5c
   47074:	str	r0, [r4]
   47078:	beq	47578 <luaL_error@@Base+0x148c>
   4707c:	cmp	r0, #61	; 0x3d
   47080:	beq	47340 <luaL_error@@Base+0x1254>
   47084:	ldr	r3, [r4]
   47088:	cmp	r3, #60	; 0x3c
   4708c:	movne	r7, #60	; 0x3c
   47090:	bne	46b4c <luaL_error@@Base+0xa60>
   47094:	ldr	r3, [r4, #24]
   47098:	add	r2, r3, #1
   4709c:	str	r2, [r4, #24]
   470a0:	ldrb	r3, [r3]
   470a4:	cmp	r3, #92	; 0x5c
   470a8:	str	r3, [r4]
   470ac:	ldrne	r7, [pc, #1508]	; 47698 <luaL_error@@Base+0x15ac>
   470b0:	bne	46b4c <luaL_error@@Base+0xa60>
   470b4:	mov	r0, r4
   470b8:	bl	1741c <_start@@Base+0x406c>
   470bc:	ldr	r7, [pc, #1492]	; 47698 <luaL_error@@Base+0x15ac>
   470c0:	b	46b4c <luaL_error@@Base+0xa60>
   470c4:	ldr	r1, [r4, #24]
   470c8:	ldrb	r2, [r1]
   470cc:	cmp	r2, #13
   470d0:	cmpne	r2, #10
   470d4:	moveq	r3, #1
   470d8:	movne	r3, #0
   470dc:	cmp	r7, r2
   470e0:	moveq	r3, #0
   470e4:	andne	r3, r3, #1
   470e8:	cmp	r3, #0
   470ec:	ldr	r3, [r4, #60]	; 0x3c
   470f0:	addne	r1, r1, #1
   470f4:	add	r3, r3, #1
   470f8:	strne	r1, [r4, #24]
   470fc:	str	r3, [r4, #60]	; 0x3c
   47100:	cmp	r7, #0
   47104:	beq	4690c <luaL_error@@Base+0x820>
   47108:	ldr	r3, [r4, #24]
   4710c:	add	r2, r3, #1
   47110:	str	r2, [r4, #24]
   47114:	ldrb	r0, [r3]
   47118:	cmp	r0, #92	; 0x5c
   4711c:	str	r0, [r4]
   47120:	beq	47518 <luaL_error@@Base+0x142c>
   47124:	cmp	r0, #42	; 0x2a
   47128:	ldrne	r7, [r4]
   4712c:	beq	4715c <luaL_error@@Base+0x1070>
   47130:	cmp	r7, #13
   47134:	cmpne	r7, #10
   47138:	bne	47100 <luaL_error@@Base+0x1014>
   4713c:	b	470c4 <luaL_error@@Base+0xfd8>
   47140:	mov	r0, r4
   47144:	bl	1741c <_start@@Base+0x406c>
   47148:	cmp	r0, #47	; 0x2f
   4714c:	beq	46b1c <luaL_error@@Base+0xa30>
   47150:	ldr	r7, [r4]
   47154:	cmp	r7, #42	; 0x2a
   47158:	bne	47130 <luaL_error@@Base+0x1044>
   4715c:	ldr	r3, [r4, #24]
   47160:	add	r2, r3, #1
   47164:	str	r2, [r4, #24]
   47168:	ldrb	r0, [r3]
   4716c:	cmp	r0, #92	; 0x5c
   47170:	str	r0, [r4]
   47174:	bne	47148 <luaL_error@@Base+0x105c>
   47178:	b	47140 <luaL_error@@Base+0x1054>
   4717c:	ldr	r3, [r4, #24]
   47180:	add	r2, r3, #1
   47184:	str	r2, [r4, #24]
   47188:	ldrb	r3, [r3]
   4718c:	cmp	r3, #92	; 0x5c
   47190:	str	r3, [r4]
   47194:	bne	46b4c <luaL_error@@Base+0xa60>
   47198:	mov	r0, r4
   4719c:	bl	1741c <_start@@Base+0x406c>
   471a0:	b	46b4c <luaL_error@@Base+0xa60>
   471a4:	cmp	r0, #97	; 0x61
   471a8:	beq	472d8 <luaL_error@@Base+0x11ec>
   471ac:	ble	47500 <luaL_error@@Base+0x1414>
   471b0:	cmp	r0, #98	; 0x62
   471b4:	beq	472d0 <luaL_error@@Base+0x11e4>
   471b8:	cmp	r0, #101	; 0x65
   471bc:	moveq	r5, #27
   471c0:	beq	46c7c <luaL_error@@Base+0xb90>
   471c4:	b	46d14 <luaL_error@@Base+0xc28>
   471c8:	mov	r0, r4
   471cc:	bl	1741c <_start@@Base+0x406c>
   471d0:	ldr	r5, [r4]
   471d4:	b	46cb0 <luaL_error@@Base+0xbc4>
   471d8:	mov	r1, #1
   471dc:	mov	r0, r6
   471e0:	bl	2ff68 <luaL_where@@Base+0xfe64>
   471e4:	b	46c8c <luaL_error@@Base+0xba0>
   471e8:	cmp	r0, #118	; 0x76
   471ec:	beq	472a4 <luaL_error@@Base+0x11b8>
   471f0:	cmp	r0, #120	; 0x78
   471f4:	moveq	r5, #0
   471f8:	beq	47224 <luaL_error@@Base+0x1138>
   471fc:	b	46d14 <luaL_error@@Base+0xc28>
   47200:	ldr	r3, [r4]
   47204:	lsl	r5, r5, #4
   47208:	add	r2, r8, r3
   4720c:	ldrb	r2, [r2, #189]	; 0xbd
   47210:	tst	r2, #8
   47214:	andeq	r3, r3, #15
   47218:	subne	r3, r3, #48	; 0x30
   4721c:	addeq	r3, r3, #9
   47220:	add	r5, r5, r3
   47224:	ldr	r3, [r4, #24]
   47228:	add	r2, r3, #1
   4722c:	str	r2, [r4, #24]
   47230:	ldrb	r0, [r3]
   47234:	cmp	r0, #92	; 0x5c
   47238:	str	r0, [r4]
   4723c:	beq	47304 <luaL_error@@Base+0x1218>
   47240:	add	r0, r8, r0
   47244:	ldrb	r3, [r0, #189]	; 0xbd
   47248:	tst	r3, #16
   4724c:	bne	47200 <luaL_error@@Base+0x1114>
   47250:	b	46dc0 <luaL_error@@Base+0xcd4>
   47254:	ldr	r3, [r4, #24]
   47258:	add	r2, r3, #1
   4725c:	str	r2, [r4, #24]
   47260:	ldrb	r3, [r3]
   47264:	cmp	r3, #92	; 0x5c
   47268:	str	r3, [r4]
   4726c:	beq	4753c <luaL_error@@Base+0x1450>
   47270:	cmp	r5, #34	; 0x22
   47274:	beq	474dc <luaL_error@@Base+0x13f0>
   47278:	ldr	r2, [r4, #36]	; 0x24
   4727c:	ldr	r3, [r4, #28]
   47280:	sub	r3, r3, r2
   47284:	cmp	r3, #1
   47288:	bne	47630 <luaL_error@@Base+0x1544>
   4728c:	ldrb	r3, [r2]
   47290:	mov	r2, #9
   47294:	str	r2, [r4, #12]
   47298:	str	r3, [r4, #8]
   4729c:	ldr	r7, [pc, #1016]	; 4769c <luaL_error@@Base+0x15b0>
   472a0:	b	46b4c <luaL_error@@Base+0xa60>
   472a4:	mov	r5, #11
   472a8:	b	46c7c <luaL_error@@Base+0xb90>
   472ac:	mov	r5, #9
   472b0:	b	46c7c <luaL_error@@Base+0xb90>
   472b4:	mov	r5, #10
   472b8:	b	46c7c <luaL_error@@Base+0xb90>
   472bc:	mov	r5, #12
   472c0:	b	46c7c <luaL_error@@Base+0xb90>
   472c4:	mov	r0, r4
   472c8:	bl	1741c <_start@@Base+0x406c>
   472cc:	b	46ce8 <luaL_error@@Base+0xbfc>
   472d0:	mov	r5, #8
   472d4:	b	46c7c <luaL_error@@Base+0xb90>
   472d8:	mov	r5, #7
   472dc:	b	46c7c <luaL_error@@Base+0xb90>
   472e0:	vldrne	d7, [r3]
   472e4:	ldreq	r3, [r3]
   472e8:	mov	r2, #9
   472ec:	str	r2, [r4, #12]
   472f0:	vcvtne.s32.f64	s15, d7
   472f4:	ldr	r7, [pc, #928]	; 4769c <luaL_error@@Base+0x15b0>
   472f8:	vmovne	r3, s15
   472fc:	str	r3, [r4, #8]
   47300:	b	46b4c <luaL_error@@Base+0xa60>
   47304:	mov	r0, r4
   47308:	bl	1741c <_start@@Base+0x406c>
   4730c:	b	47240 <luaL_error@@Base+0x1154>
   47310:	ldr	r3, [r4, #24]
   47314:	add	r2, r3, #1
   47318:	str	r2, [r4, #24]
   4731c:	ldrb	r3, [r3]
   47320:	cmp	r3, #92	; 0x5c
   47324:	str	r3, [r4]
   47328:	ldrne	r7, [pc, #880]	; 476a0 <luaL_error@@Base+0x15b4>
   4732c:	bne	46b4c <luaL_error@@Base+0xa60>
   47330:	mov	r0, r4
   47334:	bl	1741c <_start@@Base+0x406c>
   47338:	ldr	r7, [pc, #864]	; 476a0 <luaL_error@@Base+0x15b4>
   4733c:	b	46b4c <luaL_error@@Base+0xa60>
   47340:	ldr	r3, [r4, #24]
   47344:	add	r2, r3, #1
   47348:	str	r2, [r4, #24]
   4734c:	ldrb	r3, [r3]
   47350:	cmp	r3, #92	; 0x5c
   47354:	str	r3, [r4]
   47358:	movne	r7, #264	; 0x108
   4735c:	bne	46b4c <luaL_error@@Base+0xa60>
   47360:	mov	r0, r4
   47364:	bl	1741c <_start@@Base+0x406c>
   47368:	mov	r7, #264	; 0x108
   4736c:	b	46b4c <luaL_error@@Base+0xa60>
   47370:	ldr	r0, [r4, #48]	; 0x30
   47374:	ldr	r1, [r3]
   47378:	mov	r7, #256	; 0x100
   4737c:	ldr	r3, [r0]
   47380:	str	r1, [r4, #16]
   47384:	str	r2, [r4, #12]
   47388:	str	r3, [r4, #20]
   4738c:	b	46b4c <luaL_error@@Base+0xa60>
   47390:	tst	r3, #8
   47394:	add	r5, r4, #28
   47398:	ldr	r2, [r4, #28]
   4739c:	beq	47454 <luaL_error@@Base+0x1368>
   473a0:	b	473a8 <luaL_error@@Base+0x12bc>
   473a4:	ldr	r7, [r4]
   473a8:	ldr	r3, [r4, #32]
   473ac:	cmp	r2, r3
   473b0:	beq	475b8 <luaL_error@@Base+0x14cc>
   473b4:	strb	r7, [r2], #1
   473b8:	ldr	r3, [r4, #24]
   473bc:	str	r2, [r4, #28]
   473c0:	add	r1, r3, #1
   473c4:	str	r1, [r4, #24]
   473c8:	ldrb	r0, [r3]
   473cc:	cmp	r0, #92	; 0x5c
   473d0:	str	r0, [r4]
   473d4:	beq	475a8 <luaL_error@@Base+0x14bc>
   473d8:	add	r0, r8, r0
   473dc:	ldrsb	r3, [r0, #189]	; 0xbd
   473e0:	cmp	r3, #0
   473e4:	blt	473a4 <luaL_error@@Base+0x12b8>
   473e8:	ldr	r3, [r4, #32]
   473ec:	cmp	r3, r2
   473f0:	movne	r0, r2
   473f4:	beq	47614 <luaL_error@@Base+0x1528>
   473f8:	mov	r3, #0
   473fc:	strb	r3, [r0], #1
   47400:	mov	r2, #16
   47404:	str	r0, [r4, #28]
   47408:	mov	r1, sp
   4740c:	ldr	r0, [r4, #36]	; 0x24
   47410:	bl	189f0 <_start@@Base+0x5640>
   47414:	cmp	r0, #3
   47418:	moveq	r3, #9
   4741c:	streq	r3, [r4, #12]
   47420:	beq	47440 <luaL_error@@Base+0x1354>
   47424:	cmp	r0, #4
   47428:	moveq	r3, #10
   4742c:	streq	r3, [r4, #12]
   47430:	beq	47440 <luaL_error@@Base+0x1354>
   47434:	ldr	r3, [r4, #72]	; 0x48
   47438:	tst	r3, #32
   4743c:	beq	47664 <luaL_error@@Base+0x1578>
   47440:	ldr	r3, [sp]
   47444:	ldr	r7, [pc, #592]	; 4769c <luaL_error@@Base+0x15b0>
   47448:	str	r3, [r4, #8]
   4744c:	b	46b4c <luaL_error@@Base+0xa60>
   47450:	ldr	r7, [r4]
   47454:	ldr	r3, [r4, #32]
   47458:	cmp	r3, r2
   4745c:	beq	475dc <luaL_error@@Base+0x14f0>
   47460:	strb	r7, [r2], #1
   47464:	ldr	r3, [r4, #24]
   47468:	str	r2, [r4, #28]
   4746c:	add	r1, r3, #1
   47470:	str	r1, [r4, #24]
   47474:	ldrb	r0, [r3]
   47478:	cmp	r0, #92	; 0x5c
   4747c:	str	r0, [r4]
   47480:	beq	475cc <luaL_error@@Base+0x14e0>
   47484:	add	r0, r8, r0
   47488:	ldrsb	r3, [r0, #189]	; 0xbd
   4748c:	cmp	r3, #0
   47490:	blt	47450 <luaL_error@@Base+0x1364>
   47494:	ldr	r1, [r4, #36]	; 0x24
   47498:	ldr	r0, [r4, #44]	; 0x2c
   4749c:	sub	r2, r2, r1
   474a0:	bl	20260 <luaL_where@@Base+0x15c>
   474a4:	ldr	r3, [r4, #68]	; 0x44
   474a8:	add	r1, r4, #20
   474ac:	mov	r2, r0
   474b0:	str	r0, [r4, #16]
   474b4:	ldr	r0, [r4, #48]	; 0x30
   474b8:	bl	153c8 <_start@@Base+0x2018>
   474bc:	ldr	r3, [r4, #20]
   474c0:	ldr	r7, [r3]
   474c4:	lsr	r3, r7, #28
   474c8:	cmp	r3, #13
   474cc:	uxtheq	r7, r7
   474d0:	str	r0, [r4, #12]
   474d4:	movne	r7, #256	; 0x100
   474d8:	b	46b4c <luaL_error@@Base+0xa60>
   474dc:	ldr	r3, [r4, #36]	; 0x24
   474e0:	ldr	r2, [r4, #28]
   474e4:	mov	r1, r3
   474e8:	sub	r2, r2, r3
   474ec:	ldr	r0, [r4, #44]	; 0x2c
   474f0:	bl	20260 <luaL_where@@Base+0x15c>
   474f4:	ldr	r7, [pc, #424]	; 476a4 <luaL_error@@Base+0x15b8>
   474f8:	str	r0, [r4, #16]
   474fc:	b	46b4c <luaL_error@@Base+0xa60>
   47500:	cmp	r0, #0
   47504:	bne	46d14 <luaL_error@@Base+0xc28>
   47508:	mov	r0, r4
   4750c:	ldr	r2, [pc, #404]	; 476a8 <luaL_error@@Base+0x15bc>
   47510:	ldr	r1, [pc, #364]	; 47684 <luaL_error@@Base+0x1598>
   47514:	bl	4611c <luaL_error@@Base+0x30>
   47518:	mov	r0, r4
   4751c:	bl	1741c <_start@@Base+0x406c>
   47520:	b	47124 <luaL_error@@Base+0x1038>
   47524:	mov	r0, r4
   47528:	bl	1741c <_start@@Base+0x406c>
   4752c:	b	46fac <luaL_error@@Base+0xec0>
   47530:	mov	r0, r4
   47534:	bl	1741c <_start@@Base+0x406c>
   47538:	b	46e98 <luaL_error@@Base+0xdac>
   4753c:	mov	r0, r4
   47540:	bl	1741c <_start@@Base+0x406c>
   47544:	b	47270 <luaL_error@@Base+0x1184>
   47548:	mov	r0, r4
   4754c:	bl	1741c <_start@@Base+0x406c>
   47550:	b	47004 <luaL_error@@Base+0xf18>
   47554:	mov	r0, r4
   47558:	bl	1741c <_start@@Base+0x406c>
   4755c:	b	46c18 <luaL_error@@Base+0xb2c>
   47560:	mov	r0, r4
   47564:	bl	1741c <_start@@Base+0x406c>
   47568:	b	46b78 <luaL_error@@Base+0xa8c>
   4756c:	mov	r0, r4
   47570:	bl	1741c <_start@@Base+0x406c>
   47574:	b	46ef0 <luaL_error@@Base+0xe04>
   47578:	mov	r0, r4
   4757c:	bl	1741c <_start@@Base+0x406c>
   47580:	b	4707c <luaL_error@@Base+0xf90>
   47584:	mov	r0, r4
   47588:	bl	1741c <_start@@Base+0x406c>
   4758c:	b	46f54 <luaL_error@@Base+0xe68>
   47590:	mov	r0, r4
   47594:	bl	1741c <_start@@Base+0x406c>
   47598:	b	46dfc <luaL_error@@Base+0xd10>
   4759c:	mov	r0, r4
   475a0:	bl	1741c <_start@@Base+0x406c>
   475a4:	b	46c70 <luaL_error@@Base+0xb84>
   475a8:	mov	r0, r4
   475ac:	bl	1741c <_start@@Base+0x406c>
   475b0:	ldr	r2, [r4, #28]
   475b4:	b	473d8 <luaL_error@@Base+0x12ec>
   475b8:	mov	r1, #1
   475bc:	mov	r0, r5
   475c0:	bl	2ff68 <luaL_where@@Base+0xfe64>
   475c4:	mov	r2, r0
   475c8:	b	473b4 <luaL_error@@Base+0x12c8>
   475cc:	mov	r0, r4
   475d0:	bl	1741c <_start@@Base+0x406c>
   475d4:	ldr	r2, [r4, #28]
   475d8:	b	47484 <luaL_error@@Base+0x1398>
   475dc:	mov	r1, #1
   475e0:	mov	r0, r5
   475e4:	bl	2ff68 <luaL_where@@Base+0xfe64>
   475e8:	mov	r2, r0
   475ec:	b	47460 <luaL_error@@Base+0x1374>
   475f0:	mov	r1, #1
   475f4:	mov	r0, r6
   475f8:	bl	2ff68 <luaL_where@@Base+0xfe64>
   475fc:	b	46dd0 <luaL_error@@Base+0xce4>
   47600:	mov	r0, r4
   47604:	bl	1741c <_start@@Base+0x406c>
   47608:	b	46d48 <luaL_error@@Base+0xc5c>
   4760c:	mov	r7, #47	; 0x2f
   47610:	b	46b4c <luaL_error@@Base+0xa60>
   47614:	mov	r0, r5
   47618:	mov	r1, #1
   4761c:	bl	2ff68 <luaL_where@@Base+0xfe64>
   47620:	b	473f8 <luaL_error@@Base+0x130c>
   47624:	mov	r0, r4
   47628:	bl	1741c <_start@@Base+0x406c>
   4762c:	b	46d80 <luaL_error@@Base+0xc94>
   47630:	mov	r0, r4
   47634:	mov	r1, #39	; 0x27
   47638:	bl	4626c <luaL_error@@Base+0x180>
   4763c:	ldr	r1, [r0, #16]
   47640:	ldr	r2, [pc, #100]	; 476ac <luaL_error@@Base+0x15c0>
   47644:	sub	r3, r3, r1
   47648:	asr	r1, r3, #3
   4764c:	add	r1, r1, #1
   47650:	bl	36284 <luaL_argerror@@Base+0xbc>
   47654:	mov	r1, r0
   47658:	ldr	r2, [pc, #80]	; 476b0 <luaL_error@@Base+0x15c4>
   4765c:	mov	r0, r4
   47660:	bl	4611c <luaL_error@@Base+0x30>
   47664:	mov	r0, r4
   47668:	ldr	r2, [pc, #68]	; 476b4 <luaL_error@@Base+0x15c8>
   4766c:	ldr	r1, [pc, #40]	; 4769c <luaL_error@@Base+0x15b0>
   47670:	bl	4611c <luaL_error@@Base+0x30>
   47674:	mov	r0, r4
   47678:	mov	r1, #3136	; 0xc40
   4767c:	bl	46298 <luaL_error@@Base+0x1ac>
   47680:			; <UNDEFINED> instruction: 0x0006ecb8
   47684:	andeq	r0, r0, r3, lsl #2
   47688:	andeq	r0, r0, r7, lsl #2
   4768c:	andeq	r0, r0, r6, lsl #2
   47690:	andeq	r0, r0, fp, lsl #2
   47694:	andeq	r0, r0, r5, lsl #2
   47698:	andeq	r0, r0, sl, lsl #2
   4769c:	andeq	r0, r0, r2, lsl #2
   476a0:	andeq	r0, r0, r9, lsl #2
   476a4:	andeq	r0, r0, r1, lsl #2
   476a8:	andeq	r0, r0, r1, ror #17
   476ac:	andeq	r2, r7, r0, ror #29
   476b0:	ldrdeq	r0, [r0], -r5
   476b4:	andeq	r0, r0, r1, lsr #17
   476b8:	ldr	r3, [r0, #4]
   476bc:	cmp	r3, r1
   476c0:	bne	476c8 <luaL_error@@Base+0x15dc>
   476c4:	b	468f0 <luaL_error@@Base+0x804>
   476c8:	push	{r4, lr}
   476cc:	bl	4626c <luaL_error@@Base+0x180>
   476d0:	ldr	r3, [r0, #64]	; 0x40
   476d4:	push	{r4, r5, r6, r7, r8, r9, lr}
   476d8:	add	r3, r3, #1
   476dc:	cmp	r3, #20
   476e0:	sub	sp, sp, #20
   476e4:	str	r3, [r0, #64]	; 0x40
   476e8:	bgt	47bd8 <luaL_error@@Base+0x1aec>
   476ec:	mov	r7, r1
   476f0:	ldr	r3, [pc, #1332]	; 47c2c <luaL_error@@Base+0x1b40>
   476f4:	ldr	r1, [r0, #4]
   476f8:	mov	r6, r0
   476fc:	cmp	r1, r3
   47700:	beq	477a8 <luaL_error@@Base+0x16bc>
   47704:	cmp	r1, #43	; 0x2b
   47708:	beq	479e8 <luaL_error@@Base+0x18fc>
   4770c:	cmp	r1, #45	; 0x2d
   47710:	beq	479fc <luaL_error@@Base+0x1910>
   47714:	cmp	r1, #126	; 0x7e
   47718:	beq	47998 <luaL_error@@Base+0x18ac>
   4771c:	cmp	r1, #33	; 0x21
   47720:	beq	47aa8 <luaL_error@@Base+0x19bc>
   47724:	cmp	r1, #40	; 0x28
   47728:	beq	47a54 <luaL_error@@Base+0x1968>
   4772c:	cmp	r1, #42	; 0x2a
   47730:	beq	47ad4 <luaL_error@@Base+0x19e8>
   47734:	cmp	r1, #38	; 0x26
   47738:	beq	47b6c <luaL_error@@Base+0x1a80>
   4773c:	ldr	r3, [pc, #1260]	; 47c30 <luaL_error@@Base+0x1b44>
   47740:	cmp	r1, r3
   47744:	beq	479d0 <luaL_error@@Base+0x18e4>
   47748:	ldr	r3, [pc, #1252]	; 47c34 <luaL_error@@Base+0x1b48>
   4774c:	cmp	r1, r3
   47750:	beq	479b8 <luaL_error@@Base+0x18cc>
   47754:	cmp	r1, #256	; 0x100
   47758:	beq	47b9c <luaL_error@@Base+0x1ab0>
   4775c:	ldr	r3, [pc, #1236]	; 47c38 <luaL_error@@Base+0x1b4c>
   47760:	cmp	r1, r3
   47764:	bne	47bcc <luaL_error@@Base+0x1ae0>
   47768:	ldr	r3, [r0, #16]
   4776c:	mov	r4, r1
   47770:	ldr	r5, [r3, #12]
   47774:	b	47784 <luaL_error@@Base+0x1698>
   47778:	ldr	r3, [r6, #16]
   4777c:	ldr	r3, [r3, #12]
   47780:	add	r5, r5, r3
   47784:	mov	r0, r6
   47788:	bl	468f0 <luaL_error@@Base+0x804>
   4778c:	cmp	r0, r4
   47790:	beq	47778 <luaL_error@@Base+0x168c>
   47794:	add	r5, r5, #1
   47798:	mov	r3, #20
   4779c:	str	r5, [r7]
   477a0:	str	r3, [r7, #4]
   477a4:	b	477bc <luaL_error@@Base+0x16d0>
   477a8:	add	r3, r0, #8
   477ac:	ldm	r3, {r0, r1}
   477b0:	stm	r7, {r0, r1}
   477b4:	mov	r0, r6
   477b8:	bl	468f0 <luaL_error@@Base+0x804>
   477bc:	ldr	r0, [r6, #4]
   477c0:	ldr	r5, [pc, #1140]	; 47c3c <luaL_error@@Base+0x1b50>
   477c4:	cmp	r0, #91	; 0x5b
   477c8:	beq	478a4 <luaL_error@@Base+0x17b8>
   477cc:	cmp	r0, #268	; 0x10c
   477d0:	cmpne	r0, #46	; 0x2e
   477d4:	bne	47984 <luaL_error@@Base+0x1898>
   477d8:	ldr	r2, [r6, #48]	; 0x30
   477dc:	ldr	r3, [r7, #4]
   477e0:	ldr	r1, [r2]
   477e4:	add	r4, r1, r3, lsl #4
   477e8:	b	477f4 <luaL_error@@Base+0x1708>
   477ec:	uxth	r3, r3
   477f0:	add	r4, r1, r3, lsl #4
   477f4:	ldr	r3, [r4]
   477f8:	lsr	r2, r3, #28
   477fc:	cmp	r2, #8
   47800:	beq	477ec <luaL_error@@Base+0x1700>
   47804:	and	r2, r3, r5
   47808:	cmp	r2, #545259520	; 0x20800000
   4780c:	beq	477ec <luaL_error@@Base+0x1700>
   47810:	cmp	r0, #268	; 0x10c
   47814:	beq	47950 <luaL_error@@Base+0x1864>
   47818:	mov	r0, r6
   4781c:	bl	468f0 <luaL_error@@Base+0x804>
   47820:	ldr	r3, [r6, #4]
   47824:	cmp	r3, #256	; 0x100
   47828:	bne	47c20 <luaL_error@@Base+0x1b34>
   4782c:	ldr	r3, [r4]
   47830:	ldr	r0, [r6, #48]	; 0x30
   47834:	lsr	r3, r3, #28
   47838:	cmp	r3, #1
   4783c:	bne	47a20 <luaL_error@@Base+0x1934>
   47840:	ldr	r3, [r4, #4]
   47844:	cmn	r3, #1
   47848:	beq	47a20 <luaL_error@@Base+0x1934>
   4784c:	mov	r9, #0
   47850:	ldr	r2, [r6, #16]
   47854:	add	r3, sp, #8
   47858:	str	r9, [sp]
   4785c:	mov	r1, r4
   47860:	bl	1544c <_start@@Base+0x209c>
   47864:	subs	r8, r0, #0
   47868:	beq	47a1c <luaL_error@@Base+0x1930>
   4786c:	ldr	r3, [r8]
   47870:	lsr	r3, r3, #28
   47874:	cmp	r3, #10
   47878:	beq	47a1c <luaL_error@@Base+0x1930>
   4787c:	cmp	r3, #11
   47880:	mov	r0, r6
   47884:	ldreq	r9, [r8, #4]
   47888:	str	r9, [r7]
   4788c:	bl	468f0 <luaL_error@@Base+0x804>
   47890:	ldrh	r3, [r8]
   47894:	ldr	r0, [r6, #4]
   47898:	cmp	r0, #91	; 0x5b
   4789c:	str	r3, [r7, #4]
   478a0:	bne	477cc <luaL_error@@Base+0x16e0>
   478a4:	mov	r0, r6
   478a8:	bl	468f0 <luaL_error@@Base+0x804>
   478ac:	add	r1, sp, #8
   478b0:	mov	r0, r6
   478b4:	bl	4a488 <luaL_error@@Base+0x439c>
   478b8:	ldr	r2, [r6, #48]	; 0x30
   478bc:	ldr	r3, [r7, #4]
   478c0:	ldr	r1, [r2]
   478c4:	add	r8, r1, r3, lsl #4
   478c8:	b	478d4 <luaL_error@@Base+0x17e8>
   478cc:	uxth	r3, r3
   478d0:	add	r8, r1, r3, lsl #4
   478d4:	ldr	r3, [r8]
   478d8:	lsr	r2, r3, #28
   478dc:	cmp	r2, #8
   478e0:	beq	478cc <luaL_error@@Base+0x17e0>
   478e4:	and	r2, r3, r5
   478e8:	cmp	r2, #545259520	; 0x20800000
   478ec:	beq	478cc <luaL_error@@Base+0x17e0>
   478f0:	lsr	r2, r3, #29
   478f4:	cmp	r2, #1
   478f8:	beq	47938 <luaL_error@@Base+0x184c>
   478fc:	ldr	r3, [sp, #12]
   47900:	add	r8, r1, r3, lsl #4
   47904:	b	47910 <luaL_error@@Base+0x1824>
   47908:	uxth	r3, r3
   4790c:	add	r8, r1, r3, lsl #4
   47910:	ldr	r3, [r8]
   47914:	lsr	r2, r3, #28
   47918:	cmp	r2, #8
   4791c:	beq	47908 <luaL_error@@Base+0x181c>
   47920:	and	r2, r3, r5
   47924:	cmp	r2, #545259520	; 0x20800000
   47928:	beq	47908 <luaL_error@@Base+0x181c>
   4792c:	lsr	r3, r3, #29
   47930:	cmp	r3, #1
   47934:	bne	47bec <luaL_error@@Base+0x1b00>
   47938:	mov	r1, #93	; 0x5d
   4793c:	mov	r0, r6
   47940:	bl	476b8 <luaL_error@@Base+0x15cc>
   47944:	mov	r3, #0
   47948:	str	r3, [r7]
   4794c:	b	47890 <luaL_error@@Base+0x17a4>
   47950:	lsr	r2, r3, #29
   47954:	cmp	r2, #1
   47958:	bne	47be0 <luaL_error@@Base+0x1af4>
   4795c:	uxth	r3, r3
   47960:	add	r4, r1, r3, lsl #4
   47964:	ldr	r3, [r4]
   47968:	lsr	r2, r3, #28
   4796c:	cmp	r2, #8
   47970:	beq	4795c <luaL_error@@Base+0x1870>
   47974:	and	r2, r3, r5
   47978:	cmp	r2, #545259520	; 0x20800000
   4797c:	beq	4795c <luaL_error@@Base+0x1870>
   47980:	b	47818 <luaL_error@@Base+0x172c>
   47984:	ldr	r3, [r6, #64]	; 0x40
   47988:	sub	r3, r3, #1
   4798c:	str	r3, [r6, #64]	; 0x40
   47990:	add	sp, sp, #20
   47994:	pop	{r4, r5, r6, r7, r8, r9, pc}
   47998:	bl	468f0 <luaL_error@@Base+0x804>
   4799c:	mov	r1, r7
   479a0:	mov	r0, r6
   479a4:	bl	476d0 <luaL_error@@Base+0x15e4>
   479a8:	ldr	r3, [r7]
   479ac:	mvn	r3, r3
   479b0:	str	r3, [r7]
   479b4:	b	477bc <luaL_error@@Base+0x16d0>
   479b8:	bl	468f0 <luaL_error@@Base+0x804>
   479bc:	mov	r2, #0
   479c0:	mov	r1, r7
   479c4:	mov	r0, r6
   479c8:	bl	4a4c8 <luaL_error@@Base+0x43dc>
   479cc:	b	477bc <luaL_error@@Base+0x16d0>
   479d0:	bl	468f0 <luaL_error@@Base+0x804>
   479d4:	mov	r2, #1
   479d8:	mov	r1, r7
   479dc:	mov	r0, r6
   479e0:	bl	4a4c8 <luaL_error@@Base+0x43dc>
   479e4:	b	477bc <luaL_error@@Base+0x16d0>
   479e8:	bl	468f0 <luaL_error@@Base+0x804>
   479ec:	mov	r1, r7
   479f0:	mov	r0, r6
   479f4:	bl	476d0 <luaL_error@@Base+0x15e4>
   479f8:	b	477bc <luaL_error@@Base+0x16d0>
   479fc:	bl	468f0 <luaL_error@@Base+0x804>
   47a00:	mov	r1, r7
   47a04:	mov	r0, r6
   47a08:	bl	476d0 <luaL_error@@Base+0x15e4>
   47a0c:	ldr	r3, [r7]
   47a10:	rsb	r3, r3, #0
   47a14:	str	r3, [r7]
   47a18:	b	477bc <luaL_error@@Base+0x16d0>
   47a1c:	ldr	r0, [r6, #48]	; 0x30
   47a20:	ldr	r3, [r0]
   47a24:	ldr	r0, [r0, #12]
   47a28:	sub	r3, r4, r3
   47a2c:	asr	r1, r3, #4
   47a30:	bl	3cfec <luaL_typerror@@Base+0x6c80>
   47a34:	ldr	r3, [r6, #16]
   47a38:	mov	r2, #3440	; 0xd70
   47a3c:	add	r3, r3, #16
   47a40:	str	r3, [sp]
   47a44:	mov	r1, #0
   47a48:	add	r3, r0, #16
   47a4c:	mov	r0, r6
   47a50:	bl	4611c <luaL_error@@Base+0x30>
   47a54:	bl	468f0 <luaL_error@@Base+0x804>
   47a58:	ldr	r3, [r6, #4]
   47a5c:	sub	r2, r3, #268	; 0x10c
   47a60:	sub	r2, r2, #1
   47a64:	cmp	r2, #28
   47a68:	bls	47a7c <luaL_error@@Base+0x1990>
   47a6c:	cmp	r3, #256	; 0x100
   47a70:	beq	47b3c <luaL_error@@Base+0x1a50>
   47a74:	cmp	r3, #36	; 0x24
   47a78:	bne	47b50 <luaL_error@@Base+0x1a64>
   47a7c:	mov	r0, r6
   47a80:	bl	4a314 <luaL_error@@Base+0x4228>
   47a84:	mov	r1, #41	; 0x29
   47a88:	mov	r4, r0
   47a8c:	mov	r0, r6
   47a90:	bl	476b8 <luaL_error@@Base+0x15cc>
   47a94:	mov	r1, r7
   47a98:	mov	r0, r6
   47a9c:	bl	476d0 <luaL_error@@Base+0x15e4>
   47aa0:	str	r4, [r7, #4]
   47aa4:	b	477bc <luaL_error@@Base+0x16d0>
   47aa8:	bl	468f0 <luaL_error@@Base+0x804>
   47aac:	mov	r1, r7
   47ab0:	mov	r0, r6
   47ab4:	bl	476d0 <luaL_error@@Base+0x15e4>
   47ab8:	ldr	r3, [r7]
   47abc:	mov	r2, #9
   47ac0:	clz	r3, r3
   47ac4:	lsr	r3, r3, #5
   47ac8:	str	r3, [r7]
   47acc:	str	r2, [r7, #4]
   47ad0:	b	477bc <luaL_error@@Base+0x16d0>
   47ad4:	bl	468f0 <luaL_error@@Base+0x804>
   47ad8:	mov	r1, r7
   47adc:	mov	r0, r6
   47ae0:	bl	476d0 <luaL_error@@Base+0x15e4>
   47ae4:	ldr	r2, [r6, #48]	; 0x30
   47ae8:	ldr	r3, [r7, #4]
   47aec:	ldr	r0, [pc, #328]	; 47c3c <luaL_error@@Base+0x1b50>
   47af0:	ldr	r2, [r2]
   47af4:	add	r1, r2, r3, lsl #4
   47af8:	b	47b04 <luaL_error@@Base+0x1a18>
   47afc:	uxth	r3, r3
   47b00:	add	r1, r2, r3, lsl #4
   47b04:	ldr	r3, [r1]
   47b08:	lsr	ip, r3, #28
   47b0c:	cmp	ip, #8
   47b10:	beq	47afc <luaL_error@@Base+0x1a10>
   47b14:	and	ip, r3, r0
   47b18:	cmp	ip, #545259520	; 0x20800000
   47b1c:	beq	47afc <luaL_error@@Base+0x1a10>
   47b20:	lsr	r2, r3, #29
   47b24:	cmp	r2, #1
   47b28:	bne	47bf0 <luaL_error@@Base+0x1b04>
   47b2c:	uxth	r3, r3
   47b30:	mov	r2, #0
   47b34:	strd	r2, [r7]
   47b38:	b	477bc <luaL_error@@Base+0x16d0>
   47b3c:	ldr	r3, [r6, #20]
   47b40:	ldr	r3, [r3]
   47b44:	lsr	r3, r3, #28
   47b48:	cmp	r3, #7
   47b4c:	beq	47a7c <luaL_error@@Base+0x1990>
   47b50:	mov	r1, r7
   47b54:	mov	r0, r6
   47b58:	bl	4a488 <luaL_error@@Base+0x439c>
   47b5c:	mov	r1, #41	; 0x29
   47b60:	mov	r0, r6
   47b64:	bl	476b8 <luaL_error@@Base+0x15cc>
   47b68:	b	477bc <luaL_error@@Base+0x16d0>
   47b6c:	bl	468f0 <luaL_error@@Base+0x804>
   47b70:	mov	r1, r7
   47b74:	mov	r0, r6
   47b78:	bl	476d0 <luaL_error@@Base+0x15e4>
   47b7c:	ldr	r1, [r7, #4]
   47b80:	mov	r2, #4
   47b84:	add	r1, r1, #536870912	; 0x20000000
   47b88:	add	r1, r1, #131072	; 0x20000
   47b8c:	ldr	r0, [r6, #48]	; 0x30
   47b90:	bl	41060 <luaL_typerror@@Base+0xacf4>
   47b94:	str	r0, [r7, #4]
   47b98:	b	477bc <luaL_error@@Base+0x16d0>
   47b9c:	ldr	r0, [r0, #20]
   47ba0:	ldr	r3, [r0]
   47ba4:	lsr	r2, r3, #28
   47ba8:	cmp	r2, #11
   47bac:	beq	47c10 <luaL_error@@Base+0x1b24>
   47bb0:	cmp	r2, #12
   47bb4:	beq	47bf8 <luaL_error@@Base+0x1b0c>
   47bb8:	cmp	r2, #6
   47bbc:	ldreq	r3, [r6, #12]
   47bc0:	streq	r3, [r7]
   47bc4:	streq	r3, [r7, #4]
   47bc8:	beq	47c04 <luaL_error@@Base+0x1b18>
   47bcc:	mov	r0, r6
   47bd0:	ldr	r2, [pc, #104]	; 47c40 <luaL_error@@Base+0x1b54>
   47bd4:	bl	4611c <luaL_error@@Base+0x30>
   47bd8:	mov	r1, #2176	; 0x880
   47bdc:	bl	46298 <luaL_error@@Base+0x1ac>
   47be0:	mov	r1, r4
   47be4:	mov	r0, r6
   47be8:	bl	1322c <pclose@plt+0x190>
   47bec:	mov	r1, r8
   47bf0:	mov	r0, r6
   47bf4:	bl	1322c <pclose@plt+0x190>
   47bf8:	ldr	r2, [r6, #12]
   47bfc:	uxth	r3, r3
   47c00:	strd	r2, [r7]
   47c04:	mov	r0, r6
   47c08:	bl	468f0 <luaL_error@@Base+0x804>
   47c0c:	b	477bc <luaL_error@@Base+0x16d0>
   47c10:	ldr	r2, [r0, #4]
   47c14:	uxth	r3, r3
   47c18:	strd	r2, [r7]
   47c1c:	b	47c04 <luaL_error@@Base+0x1b18>
   47c20:	mov	r0, r6
   47c24:	mov	r1, #256	; 0x100
   47c28:	bl	4626c <luaL_error@@Base+0x180>
   47c2c:	andeq	r0, r0, r2, lsl #2
   47c30:	andeq	r0, r0, sl, lsr #2
   47c34:	andeq	r0, r0, fp, lsr #2
   47c38:	andeq	r0, r0, r1, lsl #2
   47c3c:			; <UNDEFINED> instruction: 0xf0800000
   47c40:	muleq	r0, r8, sl
   47c44:	push	{r4, r5, r6, r7, r8, r9, lr}
   47c48:	mov	r5, r0
   47c4c:	ldr	r7, [pc, #1768]	; 4833c <luaL_error@@Base+0x2250>
   47c50:	ldr	r8, [pc, #1768]	; 48340 <luaL_error@@Base+0x2254>
   47c54:	ldr	r9, [pc, #1768]	; 48344 <luaL_error@@Base+0x2258>
   47c58:	sub	sp, sp, #20
   47c5c:	mov	r4, r1
   47c60:	sub	r6, r2, #1
   47c64:	mov	r3, #0
   47c68:	str	r3, [sp]
   47c6c:	str	r3, [sp, #4]
   47c70:	ldr	r3, [r5, #4]
   47c74:	cmp	r6, #9
   47c78:	ldrls	pc, [pc, r6, lsl #2]
   47c7c:	b	47ca8 <luaL_error@@Base+0x1bbc>
   47c80:			; <UNDEFINED> instruction: 0x00047cb0
   47c84:			; <UNDEFINED> instruction: 0x00047cb8
   47c88:	andeq	r7, r4, r4, asr #25
   47c8c:	andeq	r7, r4, ip, asr #25
   47c90:	ldrdeq	r7, [r4], -r4
   47c94:	ldrdeq	r7, [r4], -ip
   47c98:	strdeq	r7, [r4], -r4
   47c9c:	andeq	r7, r4, r4, lsl sp
   47ca0:	andeq	r7, r4, r4, lsr #26
   47ca4:	andeq	r7, r4, r4, lsr sp
   47ca8:	cmp	r3, #63	; 0x3f
   47cac:	beq	482c8 <luaL_error@@Base+0x21dc>
   47cb0:	cmp	r3, #260	; 0x104
   47cb4:	beq	48160 <luaL_error@@Base+0x2074>
   47cb8:	ldr	r2, [pc, #1672]	; 48348 <luaL_error@@Base+0x225c>
   47cbc:	cmp	r3, r2
   47cc0:	beq	480c4 <luaL_error@@Base+0x1fd8>
   47cc4:	cmp	r3, #124	; 0x7c
   47cc8:	beq	4808c <luaL_error@@Base+0x1fa0>
   47ccc:	cmp	r3, #94	; 0x5e
   47cd0:	beq	48054 <luaL_error@@Base+0x1f68>
   47cd4:	cmp	r3, #38	; 0x26
   47cd8:	beq	4801c <luaL_error@@Base+0x1f30>
   47cdc:	ldr	r2, [pc, #1640]	; 4834c <luaL_error@@Base+0x2260>
   47ce0:	cmp	r3, r2
   47ce4:	beq	48198 <luaL_error@@Base+0x20ac>
   47ce8:	ldr	r2, [pc, #1632]	; 48350 <luaL_error@@Base+0x2264>
   47cec:	cmp	r3, r2
   47cf0:	beq	47fd8 <luaL_error@@Base+0x1eec>
   47cf4:	cmp	r3, #60	; 0x3c
   47cf8:	beq	47f00 <luaL_error@@Base+0x1e14>
   47cfc:	cmp	r3, #62	; 0x3e
   47d00:	beq	47f8c <luaL_error@@Base+0x1ea0>
   47d04:	cmp	r3, #264	; 0x108
   47d08:	beq	481e0 <luaL_error@@Base+0x20f4>
   47d0c:	cmp	r3, r9
   47d10:	beq	4822c <luaL_error@@Base+0x2140>
   47d14:	cmp	r3, r7
   47d18:	beq	47f54 <luaL_error@@Base+0x1e68>
   47d1c:	cmp	r3, r8
   47d20:	beq	47e4c <luaL_error@@Base+0x1d60>
   47d24:	cmp	r3, #43	; 0x2b
   47d28:	beq	47e90 <luaL_error@@Base+0x1da4>
   47d2c:	cmp	r3, #45	; 0x2d
   47d30:	beq	47ec8 <luaL_error@@Base+0x1ddc>
   47d34:	cmp	r3, #42	; 0x2a
   47d38:	beq	47e14 <luaL_error@@Base+0x1d28>
   47d3c:	cmp	r3, #47	; 0x2f
   47d40:	beq	47dac <luaL_error@@Base+0x1cc0>
   47d44:	cmp	r3, #37	; 0x25
   47d48:	bne	47e00 <luaL_error@@Base+0x1d14>
   47d4c:	mov	r0, r5
   47d50:	bl	468f0 <luaL_error@@Base+0x804>
   47d54:	mov	r1, sp
   47d58:	mov	r0, r5
   47d5c:	bl	476d0 <luaL_error@@Base+0x15e4>
   47d60:	ldr	r3, [sp, #4]
   47d64:	ldr	r2, [r4, #4]
   47d68:	ldr	r1, [sp]
   47d6c:	cmp	r3, r2
   47d70:	strhi	r3, [r4, #4]
   47d74:	cmp	r1, #0
   47d78:	beq	48330 <luaL_error@@Base+0x2244>
   47d7c:	ldm	r4, {r0, r3}
   47d80:	cmp	r3, #9
   47d84:	bne	47da0 <luaL_error@@Base+0x1cb4>
   47d88:	cmp	r0, #-2147483648	; 0x80000000
   47d8c:	cmneq	r1, #1
   47d90:	beq	48330 <luaL_error@@Base+0x2244>
   47d94:	bl	6deb8 <luaL_openlibs@@Base+0x46f8>
   47d98:	str	r1, [r4]
   47d9c:	b	47c70 <luaL_error@@Base+0x1b84>
   47da0:	bl	6dc78 <luaL_openlibs@@Base+0x44b8>
   47da4:	str	r1, [r4]
   47da8:	b	47c70 <luaL_error@@Base+0x1b84>
   47dac:	mov	r0, r5
   47db0:	bl	468f0 <luaL_error@@Base+0x804>
   47db4:	mov	r1, sp
   47db8:	mov	r0, r5
   47dbc:	bl	476d0 <luaL_error@@Base+0x15e4>
   47dc0:	ldr	r3, [sp, #4]
   47dc4:	ldr	r2, [r4, #4]
   47dc8:	ldr	r1, [sp]
   47dcc:	cmp	r3, r2
   47dd0:	strhi	r3, [r4, #4]
   47dd4:	cmp	r1, #0
   47dd8:	beq	48330 <luaL_error@@Base+0x2244>
   47ddc:	ldm	r4, {r0, r3}
   47de0:	cmp	r3, #9
   47de4:	bne	47e08 <luaL_error@@Base+0x1d1c>
   47de8:	cmp	r0, #-2147483648	; 0x80000000
   47dec:	cmneq	r1, #1
   47df0:	beq	48330 <luaL_error@@Base+0x2244>
   47df4:	bl	6dc98 <luaL_openlibs@@Base+0x44d8>
   47df8:	str	r0, [r4]
   47dfc:	b	47c70 <luaL_error@@Base+0x1b84>
   47e00:	add	sp, sp, #20
   47e04:	pop	{r4, r5, r6, r7, r8, r9, pc}
   47e08:	bl	6da8c <luaL_openlibs@@Base+0x42cc>
   47e0c:	str	r0, [r4]
   47e10:	b	47c70 <luaL_error@@Base+0x1b84>
   47e14:	mov	r0, r5
   47e18:	bl	468f0 <luaL_error@@Base+0x804>
   47e1c:	mov	r1, sp
   47e20:	mov	r0, r5
   47e24:	bl	476d0 <luaL_error@@Base+0x15e4>
   47e28:	ldr	r2, [r4]
   47e2c:	ldr	r3, [sp]
   47e30:	mul	r3, r3, r2
   47e34:	str	r3, [r4]
   47e38:	ldr	r3, [sp, #4]
   47e3c:	ldr	r2, [r4, #4]
   47e40:	cmp	r3, r2
   47e44:	strhi	r3, [r4, #4]
   47e48:	b	47c70 <luaL_error@@Base+0x1b84>
   47e4c:	mov	r0, r5
   47e50:	bl	468f0 <luaL_error@@Base+0x804>
   47e54:	mov	r1, sp
   47e58:	mov	r0, r5
   47e5c:	bl	476d0 <luaL_error@@Base+0x15e4>
   47e60:	mov	r2, #9
   47e64:	mov	r1, sp
   47e68:	mov	r0, r5
   47e6c:	bl	47c44 <luaL_error@@Base+0x1b58>
   47e70:	ldr	r3, [r4, #4]
   47e74:	ldr	r2, [sp]
   47e78:	cmp	r3, #9
   47e7c:	ldr	r3, [r4]
   47e80:	asreq	r3, r3, r2
   47e84:	lsrne	r3, r3, r2
   47e88:	str	r3, [r4]
   47e8c:	b	47c70 <luaL_error@@Base+0x1b84>
   47e90:	mov	r0, r5
   47e94:	bl	468f0 <luaL_error@@Base+0x804>
   47e98:	mov	r1, sp
   47e9c:	mov	r0, r5
   47ea0:	bl	476d0 <luaL_error@@Base+0x15e4>
   47ea4:	mov	r2, #10
   47ea8:	mov	r1, sp
   47eac:	mov	r0, r5
   47eb0:	bl	47c44 <luaL_error@@Base+0x1b58>
   47eb4:	ldr	r3, [r4]
   47eb8:	ldr	r2, [sp]
   47ebc:	add	r3, r3, r2
   47ec0:	str	r3, [r4]
   47ec4:	b	47e38 <luaL_error@@Base+0x1d4c>
   47ec8:	mov	r0, r5
   47ecc:	bl	468f0 <luaL_error@@Base+0x804>
   47ed0:	mov	r1, sp
   47ed4:	mov	r0, r5
   47ed8:	bl	476d0 <luaL_error@@Base+0x15e4>
   47edc:	mov	r2, #10
   47ee0:	mov	r1, sp
   47ee4:	mov	r0, r5
   47ee8:	bl	47c44 <luaL_error@@Base+0x1b58>
   47eec:	ldr	r3, [r4]
   47ef0:	ldr	r2, [sp]
   47ef4:	sub	r3, r3, r2
   47ef8:	str	r3, [r4]
   47efc:	b	47e38 <luaL_error@@Base+0x1d4c>
   47f00:	mov	r0, r5
   47f04:	bl	468f0 <luaL_error@@Base+0x804>
   47f08:	mov	r1, sp
   47f0c:	mov	r0, r5
   47f10:	bl	476d0 <luaL_error@@Base+0x15e4>
   47f14:	mov	r1, sp
   47f18:	mov	r2, #8
   47f1c:	mov	r0, r5
   47f20:	bl	47c44 <luaL_error@@Base+0x1b58>
   47f24:	ldr	r3, [r4, #4]
   47f28:	cmp	r3, #9
   47f2c:	beq	48110 <luaL_error@@Base+0x2024>
   47f30:	ldr	r3, [r4]
   47f34:	ldr	r2, [sp]
   47f38:	cmp	r3, r2
   47f3c:	movcs	r3, #0
   47f40:	movcc	r3, #1
   47f44:	str	r3, [r4]
   47f48:	mov	r3, #9
   47f4c:	str	r3, [r4, #4]
   47f50:	b	47c70 <luaL_error@@Base+0x1b84>
   47f54:	mov	r0, r5
   47f58:	bl	468f0 <luaL_error@@Base+0x804>
   47f5c:	mov	r1, sp
   47f60:	mov	r0, r5
   47f64:	bl	476d0 <luaL_error@@Base+0x15e4>
   47f68:	mov	r2, #9
   47f6c:	mov	r1, sp
   47f70:	mov	r0, r5
   47f74:	bl	47c44 <luaL_error@@Base+0x1b58>
   47f78:	ldr	r3, [r4]
   47f7c:	ldr	r2, [sp]
   47f80:	lsl	r3, r3, r2
   47f84:	str	r3, [r4]
   47f88:	b	47c70 <luaL_error@@Base+0x1b84>
   47f8c:	mov	r0, r5
   47f90:	bl	468f0 <luaL_error@@Base+0x804>
   47f94:	mov	r1, sp
   47f98:	mov	r0, r5
   47f9c:	bl	476d0 <luaL_error@@Base+0x15e4>
   47fa0:	mov	r1, sp
   47fa4:	mov	r2, #8
   47fa8:	mov	r0, r5
   47fac:	bl	47c44 <luaL_error@@Base+0x1b58>
   47fb0:	ldr	r3, [r4, #4]
   47fb4:	cmp	r3, #9
   47fb8:	beq	48138 <luaL_error@@Base+0x204c>
   47fbc:	ldr	r3, [r4]
   47fc0:	ldr	r2, [sp]
   47fc4:	cmp	r3, r2
   47fc8:	movls	r3, #0
   47fcc:	movhi	r3, #1
   47fd0:	str	r3, [r4]
   47fd4:	b	47f48 <luaL_error@@Base+0x1e5c>
   47fd8:	mov	r0, r5
   47fdc:	bl	468f0 <luaL_error@@Base+0x804>
   47fe0:	mov	r1, sp
   47fe4:	mov	r0, r5
   47fe8:	bl	476d0 <luaL_error@@Base+0x15e4>
   47fec:	mov	r1, sp
   47ff0:	mov	r2, #7
   47ff4:	mov	r0, r5
   47ff8:	bl	47c44 <luaL_error@@Base+0x1b58>
   47ffc:	ldr	r3, [r4]
   48000:	ldr	r1, [sp]
   48004:	mov	r2, #9
   48008:	subs	r3, r3, r1
   4800c:	movne	r3, #1
   48010:	str	r3, [r4]
   48014:	str	r2, [r4, #4]
   48018:	b	47c70 <luaL_error@@Base+0x1b84>
   4801c:	mov	r0, r5
   48020:	bl	468f0 <luaL_error@@Base+0x804>
   48024:	mov	r1, sp
   48028:	mov	r0, r5
   4802c:	bl	476d0 <luaL_error@@Base+0x15e4>
   48030:	mov	r2, #6
   48034:	mov	r1, sp
   48038:	mov	r0, r5
   4803c:	bl	47c44 <luaL_error@@Base+0x1b58>
   48040:	ldr	r3, [r4]
   48044:	ldr	r2, [sp]
   48048:	and	r3, r3, r2
   4804c:	str	r3, [r4]
   48050:	b	47e38 <luaL_error@@Base+0x1d4c>
   48054:	mov	r0, r5
   48058:	bl	468f0 <luaL_error@@Base+0x804>
   4805c:	mov	r1, sp
   48060:	mov	r0, r5
   48064:	bl	476d0 <luaL_error@@Base+0x15e4>
   48068:	mov	r2, #5
   4806c:	mov	r1, sp
   48070:	mov	r0, r5
   48074:	bl	47c44 <luaL_error@@Base+0x1b58>
   48078:	ldr	r3, [r4]
   4807c:	ldr	r2, [sp]
   48080:	eor	r3, r3, r2
   48084:	str	r3, [r4]
   48088:	b	47e38 <luaL_error@@Base+0x1d4c>
   4808c:	mov	r0, r5
   48090:	bl	468f0 <luaL_error@@Base+0x804>
   48094:	mov	r1, sp
   48098:	mov	r0, r5
   4809c:	bl	476d0 <luaL_error@@Base+0x15e4>
   480a0:	mov	r2, #4
   480a4:	mov	r1, sp
   480a8:	mov	r0, r5
   480ac:	bl	47c44 <luaL_error@@Base+0x1b58>
   480b0:	ldr	r3, [r4]
   480b4:	ldr	r2, [sp]
   480b8:	orr	r3, r3, r2
   480bc:	str	r3, [r4]
   480c0:	b	47e38 <luaL_error@@Base+0x1d4c>
   480c4:	mov	r0, r5
   480c8:	bl	468f0 <luaL_error@@Base+0x804>
   480cc:	mov	r1, sp
   480d0:	mov	r0, r5
   480d4:	bl	476d0 <luaL_error@@Base+0x15e4>
   480d8:	mov	r1, sp
   480dc:	mov	r2, #3
   480e0:	mov	r0, r5
   480e4:	bl	47c44 <luaL_error@@Base+0x1b58>
   480e8:	ldr	r3, [r4]
   480ec:	cmp	r3, #0
   480f0:	beq	48100 <luaL_error@@Base+0x2014>
   480f4:	ldr	r3, [sp]
   480f8:	adds	r3, r3, #0
   480fc:	movne	r3, #1
   48100:	mov	r2, #9
   48104:	str	r3, [r4]
   48108:	str	r2, [r4, #4]
   4810c:	b	47c70 <luaL_error@@Base+0x1b84>
   48110:	ldr	r3, [sp, #4]
   48114:	cmp	r3, #9
   48118:	bne	47f30 <luaL_error@@Base+0x1e44>
   4811c:	ldr	r3, [r4]
   48120:	ldr	r2, [sp]
   48124:	cmp	r3, r2
   48128:	movge	r3, #0
   4812c:	movlt	r3, #1
   48130:	str	r3, [r4]
   48134:	b	47f48 <luaL_error@@Base+0x1e5c>
   48138:	ldr	r3, [sp, #4]
   4813c:	cmp	r3, #9
   48140:	bne	47fbc <luaL_error@@Base+0x1ed0>
   48144:	ldr	r3, [r4]
   48148:	ldr	r2, [sp]
   4814c:	cmp	r3, r2
   48150:	movle	r3, #0
   48154:	movgt	r3, #1
   48158:	str	r3, [r4]
   4815c:	b	47f48 <luaL_error@@Base+0x1e5c>
   48160:	mov	r0, r5
   48164:	bl	468f0 <luaL_error@@Base+0x804>
   48168:	mov	r1, sp
   4816c:	mov	r0, r5
   48170:	bl	476d0 <luaL_error@@Base+0x15e4>
   48174:	mov	r1, sp
   48178:	mov	r2, #2
   4817c:	mov	r0, r5
   48180:	bl	47c44 <luaL_error@@Base+0x1b58>
   48184:	ldr	r3, [r4]
   48188:	cmp	r3, #0
   4818c:	movne	r3, #1
   48190:	bne	48100 <luaL_error@@Base+0x2014>
   48194:	b	480f4 <luaL_error@@Base+0x2008>
   48198:	mov	r0, r5
   4819c:	bl	468f0 <luaL_error@@Base+0x804>
   481a0:	mov	r1, sp
   481a4:	mov	r0, r5
   481a8:	bl	476d0 <luaL_error@@Base+0x15e4>
   481ac:	mov	r1, sp
   481b0:	mov	r2, #7
   481b4:	mov	r0, r5
   481b8:	bl	47c44 <luaL_error@@Base+0x1b58>
   481bc:	ldr	r3, [r4]
   481c0:	ldr	r1, [sp]
   481c4:	mov	r2, #9
   481c8:	sub	r3, r3, r1
   481cc:	clz	r3, r3
   481d0:	lsr	r3, r3, #5
   481d4:	str	r3, [r4]
   481d8:	str	r2, [r4, #4]
   481dc:	b	47c70 <luaL_error@@Base+0x1b84>
   481e0:	mov	r0, r5
   481e4:	bl	468f0 <luaL_error@@Base+0x804>
   481e8:	mov	r1, sp
   481ec:	mov	r0, r5
   481f0:	bl	476d0 <luaL_error@@Base+0x15e4>
   481f4:	mov	r1, sp
   481f8:	mov	r2, #8
   481fc:	mov	r0, r5
   48200:	bl	47c44 <luaL_error@@Base+0x1b58>
   48204:	ldr	r3, [r4, #4]
   48208:	cmp	r3, #9
   4820c:	beq	48278 <luaL_error@@Base+0x218c>
   48210:	ldr	r3, [r4]
   48214:	ldr	r2, [sp]
   48218:	cmp	r3, r2
   4821c:	movhi	r3, #0
   48220:	movls	r3, #1
   48224:	str	r3, [r4]
   48228:	b	47f48 <luaL_error@@Base+0x1e5c>
   4822c:	mov	r0, r5
   48230:	bl	468f0 <luaL_error@@Base+0x804>
   48234:	mov	r1, sp
   48238:	mov	r0, r5
   4823c:	bl	476d0 <luaL_error@@Base+0x15e4>
   48240:	mov	r1, sp
   48244:	mov	r2, #8
   48248:	mov	r0, r5
   4824c:	bl	47c44 <luaL_error@@Base+0x1b58>
   48250:	ldr	r3, [r4, #4]
   48254:	cmp	r3, #9
   48258:	beq	482a0 <luaL_error@@Base+0x21b4>
   4825c:	ldr	r3, [r4]
   48260:	ldr	r2, [sp]
   48264:	cmp	r3, r2
   48268:	movcc	r3, #0
   4826c:	movcs	r3, #1
   48270:	str	r3, [r4]
   48274:	b	47f48 <luaL_error@@Base+0x1e5c>
   48278:	ldr	r3, [sp, #4]
   4827c:	cmp	r3, #9
   48280:	bne	48210 <luaL_error@@Base+0x2124>
   48284:	ldr	r3, [r4]
   48288:	ldr	r2, [sp]
   4828c:	cmp	r3, r2
   48290:	movgt	r3, #0
   48294:	movle	r3, #1
   48298:	str	r3, [r4]
   4829c:	b	47f48 <luaL_error@@Base+0x1e5c>
   482a0:	ldr	r3, [sp, #4]
   482a4:	cmp	r3, #9
   482a8:	bne	4825c <luaL_error@@Base+0x2170>
   482ac:	ldr	r3, [r4]
   482b0:	ldr	r2, [sp]
   482b4:	cmp	r3, r2
   482b8:	movlt	r3, #0
   482bc:	movge	r3, #1
   482c0:	str	r3, [r4]
   482c4:	b	47f48 <luaL_error@@Base+0x1e5c>
   482c8:	mov	r0, r5
   482cc:	bl	468f0 <luaL_error@@Base+0x804>
   482d0:	mov	r1, sp
   482d4:	mov	r0, r5
   482d8:	bl	4a488 <luaL_error@@Base+0x439c>
   482dc:	mov	r1, #58	; 0x3a
   482e0:	mov	r0, r5
   482e4:	bl	476b8 <luaL_error@@Base+0x15cc>
   482e8:	add	r1, sp, #8
   482ec:	mov	r0, r5
   482f0:	bl	476d0 <luaL_error@@Base+0x15e4>
   482f4:	add	r1, sp, #8
   482f8:	mov	r2, #0
   482fc:	mov	r0, r5
   48300:	bl	47c44 <luaL_error@@Base+0x1b58>
   48304:	ldr	r3, [r4]
   48308:	ldr	r2, [sp, #4]
   4830c:	cmp	r3, #0
   48310:	ldr	r3, [sp, #12]
   48314:	ldrne	r1, [sp]
   48318:	ldreq	r1, [sp, #8]
   4831c:	cmp	r3, r2
   48320:	movcc	r3, r2
   48324:	str	r3, [r4, #4]
   48328:	str	r1, [r4]
   4832c:	b	47c70 <luaL_error@@Base+0x1b84>
   48330:	mov	r0, r5
   48334:	ldr	r1, [pc, #24]	; 48354 <luaL_error@@Base+0x2268>
   48338:	bl	46298 <luaL_error@@Base+0x1ac>
   4833c:	andeq	r0, r0, sl, lsl #2
   48340:	andeq	r0, r0, fp, lsl #2
   48344:	andeq	r0, r0, r9, lsl #2
   48348:	andeq	r0, r0, r5, lsl #2
   4834c:	andeq	r0, r0, r6, lsl #2
   48350:	andeq	r0, r0, r7, lsl #2
   48354:	andeq	r0, r0, r9, lsl r2
   48358:	ldr	r3, [r0, #48]	; 0x30
   4835c:	push	{r4, r5, r6, r7, r8, r9, lr}
   48360:	mov	r4, r2
   48364:	ldr	r3, [r3]
   48368:	mov	r7, r1
   4836c:	add	r1, r3, r2, lsl #4
   48370:	ldr	r5, [r3, r2, lsl #4]
   48374:	sub	sp, sp, #12
   48378:	mov	r8, r0
   4837c:	lsr	r2, r5, #28
   48380:	cmp	r2, #8
   48384:	bne	483a0 <luaL_error@@Base+0x22b4>
   48388:	uxth	r4, r5
   4838c:	ldr	r5, [r3, r4, lsl #4]
   48390:	add	r1, r3, r4, lsl #4
   48394:	lsr	r2, r5, #28
   48398:	cmp	r2, #8
   4839c:	beq	48388 <luaL_error@@Base+0x229c>
   483a0:	ldr	r6, [r1, #4]
   483a4:	and	r2, r5, #-33554432	; 0xfe000000
   483a8:	cmp	r6, #4
   483ac:	cmpls	r2, #33554432	; 0x2000000
   483b0:	movne	r9, #1
   483b4:	moveq	r9, #0
   483b8:	bne	4842c <luaL_error@@Base+0x2340>
   483bc:	mov	r0, r8
   483c0:	mov	r1, #61	; 0x3d
   483c4:	bl	476b8 <luaL_error@@Base+0x15cc>
   483c8:	mov	r1, sp
   483cc:	mov	r0, r8
   483d0:	bl	476d0 <luaL_error@@Base+0x15e4>
   483d4:	mov	r2, r9
   483d8:	mov	r1, sp
   483dc:	mov	r0, r8
   483e0:	bl	47c44 <luaL_error@@Base+0x1b58>
   483e4:	mov	r1, r7
   483e8:	ldr	r0, [r8, #48]	; 0x30
   483ec:	bl	4561c <luaL_typerror@@Base+0xf2b0>
   483f0:	rsb	r6, r6, r6, lsl #29
   483f4:	ldr	r3, [sp]
   483f8:	lsl	r6, r6, #3
   483fc:	add	r6, r6, #32
   48400:	ldr	r2, [r7]
   48404:	lsl	r3, r3, r6
   48408:	tst	r5, #8388608	; 0x800000
   4840c:	lsrne	r6, r3, r6
   48410:	asreq	r6, r3, r6
   48414:	orr	r4, r4, #33554432	; 0x2000000
   48418:	add	r4, r4, #-1342177280	; 0xb0000000
   4841c:	str	r4, [r2]
   48420:	str	r6, [r2, #4]
   48424:	add	sp, sp, #12
   48428:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4842c:	mov	r0, r8
   48430:	mov	r1, #2976	; 0xba0
   48434:	bl	46298 <luaL_error@@Base+0x1ac>
   48438:	push	{r4, r5, r6, lr}
   4843c:	mov	r4, r0
   48440:	mov	r5, r1
   48444:	bl	476d0 <luaL_error@@Base+0x15e4>
   48448:	mov	r1, r5
   4844c:	mov	r2, #0
   48450:	mov	r0, r4
   48454:	bl	47c44 <luaL_error@@Base+0x1b58>
   48458:	ldr	r2, [r4, #48]	; 0x30
   4845c:	ldr	r3, [r5, #4]
   48460:	ldr	r1, [r2]
   48464:	ldr	r3, [r1, r3, lsl #4]
   48468:	lsr	r2, r3, #28
   4846c:	cmp	r2, #8
   48470:	bne	48488 <luaL_error@@Base+0x239c>
   48474:	uxth	r3, r3
   48478:	ldr	r3, [r1, r3, lsl #4]
   4847c:	lsr	r2, r3, #28
   48480:	cmp	r2, #8
   48484:	beq	48474 <luaL_error@@Base+0x2388>
   48488:	tst	r3, #-67108864	; 0xfc000000
   4848c:	popeq	{r4, r5, r6, pc}
   48490:	mov	r0, r4
   48494:	ldr	r1, [pc]	; 4849c <luaL_error@@Base+0x23b0>
   48498:	bl	46298 <luaL_error@@Base+0x1ac>
   4849c:	andeq	r0, r0, r9, lsl r2
   484a0:	push	{r4, lr}
   484a4:	sub	sp, sp, #8
   484a8:	mov	r1, sp
   484ac:	mov	r4, r0
   484b0:	bl	48438 <luaL_error@@Base+0x234c>
   484b4:	ldr	r0, [sp]
   484b8:	cmp	r0, #0
   484bc:	blt	484c8 <luaL_error@@Base+0x23dc>
   484c0:	add	sp, sp, #8
   484c4:	pop	{r4, pc}
   484c8:	mov	r0, r4
   484cc:	ldr	r1, [pc]	; 484d4 <luaL_error@@Base+0x23e8>
   484d0:	bl	46298 <luaL_error@@Base+0x1ac>
   484d4:	andeq	r0, r0, pc, lsr #23
   484d8:	mov	r3, #14528	; 0x38c0
   484dc:	push	{r4, r5, r6, lr}
   484e0:	mov	r1, #40	; 0x28
   484e4:	mov	r4, r0
   484e8:	ldr	r6, [r0, #68]	; 0x44
   484ec:	str	r3, [r0, #68]	; 0x44
   484f0:	bl	476b8 <luaL_error@@Base+0x15cc>
   484f4:	mov	r0, r4
   484f8:	bl	484a0 <luaL_error@@Base+0x23b4>
   484fc:	str	r6, [r4, #68]	; 0x44
   48500:	mov	r1, #41	; 0x29
   48504:	mov	r5, r0
   48508:	mov	r0, r4
   4850c:	bl	476b8 <luaL_error@@Base+0x15cc>
   48510:	mov	r0, r5
   48514:	pop	{r4, r5, r6, pc}
   48518:	ldr	r3, [r0, #4]
   4851c:	push	{r4, lr}
   48520:	cmp	r3, #40	; 0x28
   48524:	mov	r4, r1
   48528:	movne	r3, #262144	; 0x40000
   4852c:	beq	48548 <luaL_error@@Base+0x245c>
   48530:	ldr	r0, [r4]
   48534:	bic	r0, r0, #983040	; 0xf0000
   48538:	orr	r0, r0, #1
   4853c:	orr	r0, r0, r3
   48540:	str	r0, [r4]
   48544:	pop	{r4, pc}
   48548:	bl	484d8 <luaL_error@@Base+0x23ec>
   4854c:	subs	r3, r0, #0
   48550:	clzne	r0, r3
   48554:	lslne	r0, r0, #16
   48558:	eorne	r0, r0, #2031616	; 0x1f0000
   4855c:	andne	r3, r0, #983040	; 0xf0000
   48560:	b	48530 <luaL_error@@Base+0x2444>
   48564:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48568:	mov	r4, r0
   4856c:	ldr	r7, [pc, #1168]	; 48a04 <luaL_error@@Base+0x2918>
   48570:	ldr	r8, [pc, #1168]	; 48a08 <luaL_error@@Base+0x291c>
   48574:	ldr	sl, [pc, #1168]	; 48a0c <luaL_error@@Base+0x2920>
   48578:	mov	r5, r1
   4857c:	ldr	r3, [r4, #4]
   48580:	sub	r3, r3, #280	; 0x118
   48584:	cmp	r3, #14
   48588:	ldrls	pc, [pc, r3, lsl #2]
   4858c:	b	487b4 <luaL_error@@Base+0x26c8>
   48590:	andeq	r8, r4, ip, asr #11
   48594:	strdeq	r8, [r4], -r0
   48598:	ldrdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   4859c:			; <UNDEFINED> instruction: 0x000487b4
   485a0:			; <UNDEFINED> instruction: 0x000487b4
   485a4:			; <UNDEFINED> instruction: 0x000487b4
   485a8:			; <UNDEFINED> instruction: 0x000487b4
   485ac:			; <UNDEFINED> instruction: 0x000487b4
   485b0:			; <UNDEFINED> instruction: 0x000487b4
   485b4:	ldrdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   485b8:	andeq	r8, r4, r8, lsl #14
   485bc:	andeq	r8, r4, r4, ror #11
   485c0:	andeq	r8, r4, ip, lsr r7
   485c4:	ldrdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   485c8:	ldrdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   485cc:	ldr	r3, [r5, #32]
   485d0:	orr	r3, r3, #33554432	; 0x2000000
   485d4:	str	r3, [r5, #32]
   485d8:	mov	r0, r4
   485dc:	bl	468f0 <luaL_error@@Base+0x804>
   485e0:	b	4857c <luaL_error@@Base+0x2490>
   485e4:	mov	r0, r4
   485e8:	bl	468f0 <luaL_error@@Base+0x804>
   485ec:	mov	r1, #40	; 0x28
   485f0:	mov	r0, r4
   485f4:	bl	476b8 <luaL_error@@Base+0x15cc>
   485f8:	mov	r1, #40	; 0x28
   485fc:	mov	r0, r4
   48600:	bl	476b8 <luaL_error@@Base+0x15cc>
   48604:	ldr	r3, [r4, #4]
   48608:	cmp	r3, #41	; 0x29
   4860c:	beq	486d4 <luaL_error@@Base+0x25e8>
   48610:	ldr	fp, [pc, #1016]	; 48a10 <luaL_error@@Base+0x2924>
   48614:	ldr	r9, [pc, #1016]	; 48a14 <luaL_error@@Base+0x2928>
   48618:	b	48654 <luaL_error@@Base+0x2568>
   4861c:	cmp	r3, #268	; 0x10c
   48620:	ble	486d4 <luaL_error@@Base+0x25e8>
   48624:	mov	r0, r4
   48628:	bl	468f0 <luaL_error@@Base+0x804>
   4862c:	ldr	r3, [r4, #4]
   48630:	cmp	r3, #40	; 0x28
   48634:	beq	487cc <luaL_error@@Base+0x26e0>
   48638:	cmp	r3, #44	; 0x2c
   4863c:	bne	486d4 <luaL_error@@Base+0x25e8>
   48640:	mov	r0, r4
   48644:	bl	468f0 <luaL_error@@Base+0x804>
   48648:	ldr	r3, [r4, #4]
   4864c:	cmp	r3, #41	; 0x29
   48650:	beq	486d4 <luaL_error@@Base+0x25e8>
   48654:	cmp	r3, #256	; 0x100
   48658:	bne	4861c <luaL_error@@Base+0x2530>
   4865c:	ldr	r6, [r4, #16]
   48660:	mov	r0, r4
   48664:	bl	468f0 <luaL_error@@Base+0x804>
   48668:	ldr	r3, [r6, #8]
   4866c:	cmp	r3, r7
   48670:	beq	4892c <luaL_error@@Base+0x2840>
   48674:	bls	48814 <luaL_error@@Base+0x2728>
   48678:	cmp	r3, r8
   4867c:	beq	488c8 <luaL_error@@Base+0x27dc>
   48680:	bls	488c0 <luaL_error@@Base+0x27d4>
   48684:	cmp	r3, sl
   48688:	beq	48834 <luaL_error@@Base+0x2748>
   4868c:	ldr	r2, [pc, #900]	; 48a18 <luaL_error@@Base+0x292c>
   48690:	cmp	r3, r2
   48694:	bne	4862c <luaL_error@@Base+0x2540>
   48698:	mov	r0, r4
   4869c:	bl	484d8 <luaL_error@@Base+0x23ec>
   486a0:	cmp	r0, #0
   486a4:	beq	4880c <luaL_error@@Base+0x2720>
   486a8:	ldr	r2, [r5, #32]
   486ac:	clz	r3, r0
   486b0:	lsl	r3, r3, #4
   486b4:	eor	r3, r3, #496	; 0x1f0
   486b8:	and	r3, r3, #240	; 0xf0
   486bc:	bic	r2, r2, #240	; 0xf0
   486c0:	orr	r3, r3, r2
   486c4:	str	r3, [r5, #32]
   486c8:	ldr	r3, [r4, #4]
   486cc:	cmp	r3, #44	; 0x2c
   486d0:	beq	48640 <luaL_error@@Base+0x2554>
   486d4:	mov	r0, r4
   486d8:	mov	r1, #41	; 0x29
   486dc:	bl	476b8 <luaL_error@@Base+0x15cc>
   486e0:	mov	r1, #41	; 0x29
   486e4:	mov	r0, r4
   486e8:	bl	476b8 <luaL_error@@Base+0x15cc>
   486ec:	b	4857c <luaL_error@@Base+0x2490>
   486f0:	ldr	r3, [r5, #32]
   486f4:	mov	r0, r4
   486f8:	orr	r3, r3, #16777216	; 0x1000000
   486fc:	str	r3, [r5, #32]
   48700:	bl	468f0 <luaL_error@@Base+0x804>
   48704:	b	4857c <luaL_error@@Base+0x2490>
   48708:	mov	r0, r4
   4870c:	bl	468f0 <luaL_error@@Base+0x804>
   48710:	mov	r1, #40	; 0x28
   48714:	mov	r0, r4
   48718:	bl	476b8 <luaL_error@@Base+0x15cc>
   4871c:	ldr	r3, [pc, #760]	; 48a1c <luaL_error@@Base+0x2930>
   48720:	ldr	r6, [r4, #4]
   48724:	cmp	r6, r3
   48728:	beq	488dc <luaL_error@@Base+0x27f0>
   4872c:	mov	r1, #41	; 0x29
   48730:	mov	r0, r4
   48734:	bl	476b8 <luaL_error@@Base+0x15cc>
   48738:	b	4857c <luaL_error@@Base+0x2490>
   4873c:	mov	r0, r4
   48740:	bl	468f0 <luaL_error@@Base+0x804>
   48744:	mov	r1, #40	; 0x28
   48748:	mov	r0, r4
   4874c:	bl	476b8 <luaL_error@@Base+0x15cc>
   48750:	ldr	r6, [pc, #712]	; 48a20 <luaL_error@@Base+0x2934>
   48754:	ldr	r3, [r4, #4]
   48758:	ldr	r9, [pc, #708]	; 48a24 <luaL_error@@Base+0x2938>
   4875c:	cmp	r3, #256	; 0x100
   48760:	bne	4872c <luaL_error@@Base+0x2640>
   48764:	ldr	fp, [r4, #16]
   48768:	mov	r0, r4
   4876c:	bl	468f0 <luaL_error@@Base+0x804>
   48770:	ldr	r3, [fp, #8]
   48774:	cmp	r3, r6
   48778:	beq	487b8 <luaL_error@@Base+0x26cc>
   4877c:	ldr	r3, [r4, #4]
   48780:	cmp	r3, #40	; 0x28
   48784:	bne	4875c <luaL_error@@Base+0x2670>
   48788:	mov	r0, r4
   4878c:	bl	468f0 <luaL_error@@Base+0x804>
   48790:	ldr	r3, [r4, #4]
   48794:	cmp	r3, r9
   48798:	cmpne	r3, #41	; 0x29
   4879c:	bne	48788 <luaL_error@@Base+0x269c>
   487a0:	mov	r1, #41	; 0x29
   487a4:	mov	r0, r4
   487a8:	bl	476b8 <luaL_error@@Base+0x15cc>
   487ac:	ldr	r3, [r4, #4]
   487b0:	b	4875c <luaL_error@@Base+0x2670>
   487b4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   487b8:	add	r1, r5, #32
   487bc:	mov	r0, r4
   487c0:	bl	48518 <luaL_error@@Base+0x242c>
   487c4:	ldr	r3, [r4, #4]
   487c8:	b	4875c <luaL_error@@Base+0x2670>
   487cc:	mov	r0, r4
   487d0:	bl	468f0 <luaL_error@@Base+0x804>
   487d4:	ldr	r6, [pc, #584]	; 48a24 <luaL_error@@Base+0x2938>
   487d8:	ldr	r3, [r4, #4]
   487dc:	cmp	r3, r6
   487e0:	cmpne	r3, #41	; 0x29
   487e4:	beq	48800 <luaL_error@@Base+0x2714>
   487e8:	mov	r0, r4
   487ec:	bl	468f0 <luaL_error@@Base+0x804>
   487f0:	ldr	r3, [r4, #4]
   487f4:	cmp	r3, #41	; 0x29
   487f8:	cmpne	r3, r6
   487fc:	bne	487e8 <luaL_error@@Base+0x26fc>
   48800:	mov	r1, #41	; 0x29
   48804:	mov	r0, r4
   48808:	bl	476b8 <luaL_error@@Base+0x15cc>
   4880c:	ldr	r3, [r4, #4]
   48810:	b	48638 <luaL_error@@Base+0x254c>
   48814:	cmp	r3, r9
   48818:	beq	48698 <luaL_error@@Base+0x25ac>
   4881c:	ldr	r2, [pc, #516]	; 48a28 <luaL_error@@Base+0x293c>
   48820:	cmp	r3, r2
   48824:	beq	4892c <luaL_error@@Base+0x2840>
   48828:	ldr	r2, [pc, #508]	; 48a2c <luaL_error@@Base+0x2940>
   4882c:	cmp	r3, r2
   48830:	bne	4862c <luaL_error@@Base+0x2540>
   48834:	mov	r1, #40	; 0x28
   48838:	mov	r0, r4
   4883c:	bl	476b8 <luaL_error@@Base+0x15cc>
   48840:	ldr	r3, [r4, #4]
   48844:	cmp	r3, #256	; 0x100
   48848:	bne	48800 <luaL_error@@Base+0x2714>
   4884c:	ldr	r2, [r4, #16]
   48850:	add	r1, r2, #16
   48854:	ldrb	r3, [r2, #16]
   48858:	cmp	r3, #95	; 0x5f
   4885c:	beq	489ec <luaL_error@@Base+0x2900>
   48860:	cmp	r3, #86	; 0x56
   48864:	movne	r2, #0
   48868:	beq	48994 <luaL_error@@Base+0x28a8>
   4886c:	sub	r3, r3, #68	; 0x44
   48870:	cmp	r3, #16
   48874:	ldrls	pc, [pc, r3, lsl #2]
   48878:	b	48988 <luaL_error@@Base+0x289c>
   4887c:	ldrdeq	r8, [r4], -r4
   48880:	andeq	r8, r4, r8, lsl #19
   48884:	andeq	r8, r4, r8, lsl #19
   48888:	andeq	r8, r4, r8, lsl #19
   4888c:	ldrdeq	r8, [r4], -ip
   48890:	andeq	r8, r4, r8, lsl #19
   48894:	andeq	r8, r4, r8, lsl #19
   48898:	andeq	r8, r4, r8, lsl #19
   4889c:	andeq	r8, r4, r8, lsl #19
   488a0:	andeq	r8, r4, r8, lsl #19
   488a4:	andeq	r8, r4, r8, lsl #19
   488a8:	andeq	r8, r4, ip, asr #19
   488ac:	andeq	r8, r4, r8, lsl #19
   488b0:	andeq	r8, r4, r4, ror #19
   488b4:	andeq	r8, r4, r8, lsl #19
   488b8:	andeq	r8, r4, r4, asr #19
   488bc:	andeq	r8, r4, r0, asr #18
   488c0:	cmp	r3, fp
   488c4:	bne	4862c <luaL_error@@Base+0x2540>
   488c8:	add	r1, r5, #32
   488cc:	mov	r0, r4
   488d0:	bl	48518 <luaL_error@@Base+0x242c>
   488d4:	ldr	r3, [r4, #4]
   488d8:	b	48638 <luaL_error@@Base+0x254c>
   488dc:	ldr	fp, [r4, #16]
   488e0:	ldr	r9, [pc, #328]	; 48a30 <luaL_error@@Base+0x2944>
   488e4:	b	4890c <luaL_error@@Base+0x2820>
   488e8:	ldr	r3, [r4, #16]
   488ec:	ldr	r0, [r4, #44]	; 0x2c
   488f0:	add	r3, r3, #16
   488f4:	bl	20040 <lua_getstack@@Base+0x388>
   488f8:	ldr	r2, [r4, #44]	; 0x2c
   488fc:	ldr	r3, [r2, #20]
   48900:	sub	r1, r3, #8
   48904:	ldr	fp, [r3, #-8]
   48908:	str	r1, [r2, #20]
   4890c:	mov	r0, r4
   48910:	bl	468f0 <luaL_error@@Base+0x804>
   48914:	add	r2, fp, #16
   48918:	mov	r1, r9
   4891c:	cmp	r0, r6
   48920:	beq	488e8 <luaL_error@@Base+0x27fc>
   48924:	str	fp, [r5, #24]
   48928:	b	4872c <luaL_error@@Base+0x2640>
   4892c:	ldr	r2, [r5, #32]
   48930:	ldr	r3, [r4, #4]
   48934:	orr	r2, r2, #2
   48938:	str	r2, [r5, #32]
   4893c:	b	48638 <luaL_error@@Base+0x254c>
   48940:	mov	r0, #16
   48944:	ldrb	r3, [r1, #1]
   48948:	cmp	r3, #70	; 0x46
   4894c:	cmpne	r3, #73	; 0x49
   48950:	bne	48988 <luaL_error@@Base+0x289c>
   48954:	cmp	r2, #0
   48958:	ldr	r1, [r5, #32]
   4895c:	mulne	r3, r2, r0
   48960:	clzne	r3, r3
   48964:	bic	r1, r1, #65280	; 0xff00
   48968:	orr	r1, r1, r0, lsl #8
   4896c:	lslne	r3, r3, #4
   48970:	eorne	r3, r3, #496	; 0x1f0
   48974:	andne	r3, r3, #240	; 0xf0
   48978:	bicne	r1, r1, #240	; 0xf0
   4897c:	orrne	r3, r3, r1
   48980:	streq	r1, [r5, #32]
   48984:	strne	r3, [r5, #32]
   48988:	mov	r0, r4
   4898c:	bl	468f0 <luaL_error@@Base+0x804>
   48990:	b	48800 <luaL_error@@Base+0x2714>
   48994:	ldrb	r3, [r1, #2]
   48998:	ldrb	r2, [r1, #1]
   4899c:	sub	r0, r3, #48	; 0x30
   489a0:	sub	r2, r2, #48	; 0x30
   489a4:	uxtb	ip, r0
   489a8:	cmp	ip, #9
   489ac:	addls	r2, r2, r2, lsl #2
   489b0:	ldrbls	r3, [r1, #3]
   489b4:	addhi	r1, r1, #2
   489b8:	addls	r2, r0, r2, lsl #1
   489bc:	addls	r1, r1, #3
   489c0:	b	4886c <luaL_error@@Base+0x2780>
   489c4:	mov	r0, #4
   489c8:	b	48944 <luaL_error@@Base+0x2858>
   489cc:	mov	r0, #32
   489d0:	b	48944 <luaL_error@@Base+0x2858>
   489d4:	mov	r0, #8
   489d8:	b	48944 <luaL_error@@Base+0x2858>
   489dc:	mov	r0, #2
   489e0:	b	48944 <luaL_error@@Base+0x2858>
   489e4:	mov	r0, #1
   489e8:	b	48944 <luaL_error@@Base+0x2858>
   489ec:	ldrb	r3, [r2, #17]
   489f0:	cmp	r3, #95	; 0x5f
   489f4:	bne	48988 <luaL_error@@Base+0x289c>
   489f8:	ldrb	r3, [r2, #18]
   489fc:	add	r1, r2, #18
   48a00:	b	48860 <luaL_error@@Base+0x2774>
   48a04:	rscmi	r4, fp, #58195968	; 0x3780000
   48a08:	mcrhi	1, 3, r3, cr3, cr2, {5}
   48a0c:	ldmdbls	ip, {r2, r3, r5, r8, fp, ip, sp, lr, pc}^
   48a10:	strtvs	r2, [r9], #142	; 0x8e
   48a14:	beq	fed0f078 <__bss_end__@@Base+0xfec8ae00>
   48a18:	svclt	0x00875611
   48a1c:	andeq	r0, r0, r1, lsl #2
   48a20:	cfstr32lt	mvfx9, [r3], #-1000	; 0xfffffc18
   48a24:	andeq	r0, r0, r3, lsl #2
   48a28:	ldmibcs	r4!, {r0, r3, r9, fp, pc}^
   48a2c:	beq	fe18460c <__bss_end__@@Base+0xfe100394>
   48a30:	strdeq	r2, [r7], -r0
   48a34:	ldr	r3, [pc, #412]	; 48bd8 <luaL_error@@Base+0x2aec>
   48a38:	push	{r4, r5, r6, lr}
   48a3c:	mov	r4, r0
   48a40:	str	r3, [r0, #68]	; 0x44
   48a44:	sub	sp, sp, #8
   48a48:	mov	r5, r1
   48a4c:	mov	r6, r2
   48a50:	bl	468f0 <luaL_error@@Base+0x804>
   48a54:	mov	r1, r5
   48a58:	mov	r0, r4
   48a5c:	bl	48564 <luaL_error@@Base+0x2478>
   48a60:	ldr	r3, [r4, #4]
   48a64:	mov	r2, #14528	; 0x38c0
   48a68:	cmp	r3, #123	; 0x7b
   48a6c:	str	r2, [r4, #68]	; 0x44
   48a70:	beq	48b7c <luaL_error@@Base+0x2a90>
   48a74:	cmp	r3, #256	; 0x100
   48a78:	bne	48bb4 <luaL_error@@Base+0x2ac8>
   48a7c:	ldr	r5, [r4, #12]
   48a80:	cmp	r5, #0
   48a84:	bne	48b18 <luaL_error@@Base+0x2a2c>
   48a88:	ldr	r3, [r4, #72]	; 0x48
   48a8c:	tst	r3, #16
   48a90:	bne	48bc0 <luaL_error@@Base+0x2ad4>
   48a94:	add	r1, sp, #4
   48a98:	ldr	r0, [r4, #48]	; 0x30
   48a9c:	bl	4561c <luaL_typerror@@Base+0xf2b0>
   48aa0:	ldr	r2, [r4, #16]
   48aa4:	ldr	r3, [pc, #304]	; 48bdc <luaL_error@@Base+0x2af0>
   48aa8:	mvn	r1, #0
   48aac:	add	r3, r2, r3
   48ab0:	mov	r5, r0
   48ab4:	ldr	r0, [sp, #4]
   48ab8:	str	r1, [r0, #4]
   48abc:	str	r6, [r0]
   48ac0:	eor	r1, r2, r3
   48ac4:	ldrb	ip, [r2, #4]
   48ac8:	sub	r1, r1, r3, ror #18
   48acc:	eor	r3, r1, r3, ror #13
   48ad0:	sub	r3, r3, r1, ror #19
   48ad4:	orr	ip, ip, #32
   48ad8:	strb	ip, [r2, #4]
   48adc:	and	r3, r3, #127	; 0x7f
   48ae0:	ldr	r1, [r4, #48]	; 0x30
   48ae4:	str	r2, [r0, #12]
   48ae8:	add	r3, r1, r3, lsl #1
   48aec:	ldrh	r2, [r3, #200]	; 0xc8
   48af0:	strh	r2, [r0, #10]
   48af4:	strh	r5, [r3, #200]	; 0xc8
   48af8:	mov	r0, r4
   48afc:	bl	468f0 <luaL_error@@Base+0x804>
   48b00:	ldr	r3, [r4, #4]
   48b04:	cmp	r3, #123	; 0x7b
   48b08:	beq	48b50 <luaL_error@@Base+0x2a64>
   48b0c:	mov	r0, r5
   48b10:	add	sp, sp, #8
   48b14:	pop	{r4, r5, r6, pc}
   48b18:	ldr	r1, [r4, #20]
   48b1c:	ldr	r3, [pc, #188]	; 48be0 <luaL_error@@Base+0x2af4>
   48b20:	str	r1, [sp, #4]
   48b24:	ldr	r2, [r1]
   48b28:	eor	r6, r6, r2
   48b2c:	and	r3, r3, r6
   48b30:	cmp	r3, #0
   48b34:	ldrne	r3, [r1, #12]
   48b38:	beq	48af8 <luaL_error@@Base+0x2a0c>
   48b3c:	mov	r0, r4
   48b40:	add	r3, r3, #16
   48b44:	ldr	r2, [pc, #152]	; 48be4 <luaL_error@@Base+0x2af8>
   48b48:	mov	r1, #0
   48b4c:	bl	4611c <luaL_error@@Base+0x30>
   48b50:	ldr	r3, [sp, #4]
   48b54:	ldr	r2, [r3, #4]
   48b58:	cmn	r2, #1
   48b5c:	bne	48b74 <luaL_error@@Base+0x2a88>
   48b60:	ldrh	r2, [r3, #8]
   48b64:	cmp	r2, #0
   48b68:	moveq	r2, #1
   48b6c:	strheq	r2, [r3, #8]
   48b70:	beq	48b0c <luaL_error@@Base+0x2a20>
   48b74:	ldr	r3, [r3, #12]
   48b78:	b	48b3c <luaL_error@@Base+0x2a50>
   48b7c:	add	r1, sp, #4
   48b80:	ldr	r0, [r4, #48]	; 0x30
   48b84:	bl	4561c <luaL_typerror@@Base+0xf2b0>
   48b88:	ldr	r1, [r4, #4]
   48b8c:	ldr	r3, [sp, #4]
   48b90:	mvn	r2, #0
   48b94:	cmp	r1, #123	; 0x7b
   48b98:	str	r6, [r3]
   48b9c:	str	r2, [r3, #4]
   48ba0:	mov	r5, r0
   48ba4:	beq	48b60 <luaL_error@@Base+0x2a74>
   48ba8:	mov	r0, r5
   48bac:	add	sp, sp, #8
   48bb0:	pop	{r4, r5, r6, pc}
   48bb4:	mov	r0, r4
   48bb8:	mov	r1, #256	; 0x100
   48bbc:	bl	4626c <luaL_error@@Base+0x180>
   48bc0:	ldr	r3, [r4, #16]
   48bc4:	mov	r1, r5
   48bc8:	add	r3, r3, #16
   48bcc:	mov	r0, r4
   48bd0:	ldr	r2, [pc, #16]	; 48be8 <luaL_error@@Base+0x2afc>
   48bd4:	bl	4611c <luaL_error@@Base+0x30>
   48bd8:	andeq	r2, r0, r2, lsr #32
   48bdc:	blx	100150a <__bss_end__@@Base+0xf7d292>
   48be0:			; <UNDEFINED> instruction: 0xf0800000
   48be4:	andeq	r0, r0, r7, lsr #24
   48be8:	andeq	r0, r0, r7, lsl #24
   48bec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48bf0:	sub	sp, sp, #36	; 0x24
   48bf4:	mov	r3, #0
   48bf8:	ldr	fp, [pc, #1400]	; 49178 <luaL_error@@Base+0x308c>
   48bfc:	mov	r5, r1
   48c00:	str	r2, [sp, #4]
   48c04:	mov	r6, r0
   48c08:	ldr	r2, [r0, #72]	; 0x48
   48c0c:	mov	r8, r3
   48c10:	mov	r9, r3
   48c14:	mov	r4, r3
   48c18:	str	r0, [r5, #16]
   48c1c:	str	r2, [r1, #12]
   48c20:	str	r3, [r1, #20]
   48c24:	str	r3, [r1, #24]
   48c28:	str	r3, [r1, #32]
   48c2c:	str	r3, [r1, #36]	; 0x24
   48c30:	str	r3, [r1]
   48c34:	str	r3, [r1, #4]
   48c38:	strh	r3, [r1, #62]	; 0x3e
   48c3c:	mov	r1, r5
   48c40:	mov	r0, r6
   48c44:	bl	48564 <luaL_error@@Base+0x2478>
   48c48:	ldr	r1, [r6, #4]
   48c4c:	sub	r3, r1, #268	; 0x10c
   48c50:	sub	r3, r3, #1
   48c54:	cmp	r3, #19
   48c58:	bhi	48cb4 <luaL_error@@Base+0x2bc8>
   48c5c:	ldr	r2, [r6, #20]
   48c60:	ldr	r2, [r2, #4]
   48c64:	cmp	r2, #0
   48c68:	beq	48c78 <luaL_error@@Base+0x2b8c>
   48c6c:	cmp	r9, #0
   48c70:	bne	4909c <luaL_error@@Base+0x2fb0>
   48c74:	mov	r9, r2
   48c78:	mov	r2, #1
   48c7c:	cmp	r1, #284	; 0x11c
   48c80:	lsl	r3, r2, r3
   48c84:	and	r2, r4, r3
   48c88:	orr	r4, r4, r3
   48c8c:	lsl	r2, r2, #1
   48c90:	and	r2, r2, #64	; 0x40
   48c94:	orr	r4, r4, r2
   48c98:	blt	48d68 <luaL_error@@Base+0x2c7c>
   48c9c:	ldr	r2, [sp, #4]
   48ca0:	tst	r3, r2
   48ca4:	beq	49148 <luaL_error@@Base+0x305c>
   48ca8:	mov	r0, r6
   48cac:	bl	468f0 <luaL_error@@Base+0x804>
   48cb0:	b	48c3c <luaL_error@@Base+0x2b50>
   48cb4:	orrs	r3, r9, r8
   48cb8:	bne	4909c <luaL_error@@Base+0x2fb0>
   48cbc:	ands	r9, r4, #1952	; 0x7a0
   48cc0:	bne	48cf4 <luaL_error@@Base+0x2c08>
   48cc4:	cmp	r1, fp
   48cc8:	beq	48f5c <luaL_error@@Base+0x2e70>
   48ccc:	bgt	48db4 <luaL_error@@Base+0x2cc8>
   48cd0:	cmp	r1, #36	; 0x24
   48cd4:	beq	48f4c <luaL_error@@Base+0x2e60>
   48cd8:	cmp	r1, #256	; 0x100
   48cdc:	bne	48cf4 <luaL_error@@Base+0x2c08>
   48ce0:	ldr	r3, [r6, #20]
   48ce4:	ldr	r8, [r3]
   48ce8:	lsr	r3, r8, #28
   48cec:	cmp	r3, #7
   48cf0:	beq	490b0 <luaL_error@@Base+0x2fc4>
   48cf4:	ands	r9, r4, #256	; 0x100
   48cf8:	movne	r8, #16
   48cfc:	bne	48d84 <luaL_error@@Base+0x2c98>
   48d00:	ands	ip, r4, #1
   48d04:	beq	48f74 <luaL_error@@Base+0x2e88>
   48d08:	ldr	r2, [r5, #32]
   48d0c:	ldr	r3, [r5]
   48d10:	and	r0, r2, #50331648	; 0x3000000
   48d14:	cmp	r3, #99	; 0x63
   48d18:	add	r0, r0, #1073741824	; 0x40000000
   48d1c:	bhi	49170 <luaL_error@@Base+0x3084>
   48d20:	add	r1, r5, r3, lsl #4
   48d24:	mvn	ip, #0
   48d28:	str	ip, [r1, #56]	; 0x38
   48d2c:	str	r0, [r1, #52]	; 0x34
   48d30:	ldr	r0, [r5, #4]
   48d34:	mov	ip, #0
   48d38:	strh	ip, [r1, #60]	; 0x3c
   48d3c:	add	r0, r5, r0, lsl #4
   48d40:	bic	r2, r2, #50331648	; 0x3000000
   48d44:	ldrh	lr, [r0, #62]	; 0x3e
   48d48:	str	ip, [r1, #64]	; 0x40
   48d4c:	add	ip, r3, #1
   48d50:	strh	lr, [r1, #62]	; 0x3e
   48d54:	strh	r3, [r0, #62]	; 0x3e
   48d58:	str	r2, [r5, #32]
   48d5c:	str	r3, [r5, #4]
   48d60:	str	ip, [r5]
   48d64:	b	48d98 <luaL_error@@Base+0x2cac>
   48d68:	cmp	r8, #0
   48d6c:	beq	48ca8 <luaL_error@@Base+0x2bbc>
   48d70:	tst	r4, #256	; 0x100
   48d74:	beq	48d84 <luaL_error@@Base+0x2c98>
   48d78:	cmp	r9, #4
   48d7c:	movne	r8, #16
   48d80:	moveq	r8, #15
   48d84:	mov	r1, r8
   48d88:	mov	r0, r5
   48d8c:	bl	462b8 <luaL_error@@Base+0x1cc>
   48d90:	ldr	r3, [r5, #4]
   48d94:	ldr	r2, [r5, #32]
   48d98:	ldr	r1, [r5, #36]	; 0x24
   48d9c:	and	r0, r4, #1015808	; 0xf8000
   48da0:	str	r3, [r5, #8]
   48da4:	str	r2, [r5, #40]	; 0x28
   48da8:	str	r1, [r5, #44]	; 0x2c
   48dac:	add	sp, sp, #36	; 0x24
   48db0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48db4:	cmp	r1, #296	; 0x128
   48db8:	beq	48f34 <luaL_error@@Base+0x2e48>
   48dbc:	ldr	r3, [pc, #952]	; 4917c <luaL_error@@Base+0x3090>
   48dc0:	cmp	r1, r3
   48dc4:	bne	48cf4 <luaL_error@@Base+0x2c08>
   48dc8:	mov	r2, #1342177281	; 0x50000001
   48dcc:	mov	r1, r5
   48dd0:	mov	r0, r6
   48dd4:	bl	48a34 <luaL_error@@Base+0x2948>
   48dd8:	ldr	r3, [r6, #4]
   48ddc:	cmp	r3, #123	; 0x7b
   48de0:	mov	r8, r0
   48de4:	bne	48c3c <luaL_error@@Base+0x2b50>
   48de8:	mov	r0, r6
   48dec:	bl	468f0 <luaL_error@@Base+0x804>
   48df0:	ldr	r3, [pc, #904]	; 49180 <luaL_error@@Base+0x3094>
   48df4:	mov	r2, #9
   48df8:	str	r3, [sp, #8]
   48dfc:	mov	sl, r8
   48e00:	ldr	r3, [r6, #4]
   48e04:	str	r9, [sp, #24]
   48e08:	str	r2, [sp, #28]
   48e0c:	str	r4, [sp, #12]
   48e10:	b	48ec4 <luaL_error@@Base+0x2dd8>
   48e14:	add	r1, sp, #20
   48e18:	ldr	r0, [r6, #48]	; 0x30
   48e1c:	bl	4561c <luaL_typerror@@Base+0xf2b0>
   48e20:	ldr	r3, [r6, #48]	; 0x30
   48e24:	ldr	lr, [sp, #24]
   48e28:	ldr	r2, [r3]
   48e2c:	add	sl, r2, sl, lsl #4
   48e30:	uxth	ip, r0
   48e34:	strh	ip, [sl, #8]
   48e38:	ldrb	r2, [r7, #4]
   48e3c:	mov	r4, r0
   48e40:	ldr	r0, [sp, #20]
   48e44:	orr	r2, r2, #32
   48e48:	strb	r2, [r7, #4]
   48e4c:	ldr	r2, [sp, #28]
   48e50:	add	sl, lr, #1
   48e54:	orr	r2, r2, #33554432	; 0x2000000
   48e58:	add	r2, r2, #-1342177280	; 0xb0000000
   48e5c:	cmp	sl, #-2147483648	; 0x80000000
   48e60:	stm	r0, {r2, lr}
   48e64:	moveq	r2, #10
   48e68:	streq	r2, [sp, #28]
   48e6c:	ldr	r2, [pc, #784]	; 49184 <luaL_error@@Base+0x3098>
   48e70:	str	r7, [r0, #12]
   48e74:	add	r2, r7, r2
   48e78:	eor	r7, r7, r2
   48e7c:	sub	r7, r7, r2, ror #18
   48e80:	eor	r2, r7, r2, ror #13
   48e84:	sub	r2, r2, r7, ror #19
   48e88:	and	r2, r2, #127	; 0x7f
   48e8c:	ldr	lr, [r6, #4]
   48e90:	add	r3, r3, r2, lsl #1
   48e94:	cmp	lr, #44	; 0x2c
   48e98:	ldrh	r2, [r3, #200]	; 0xc8
   48e9c:	str	sl, [sp, #24]
   48ea0:	strh	r2, [r0, #10]
   48ea4:	strh	ip, [r3, #200]	; 0xc8
   48ea8:	bne	49020 <luaL_error@@Base+0x2f34>
   48eac:	mov	r0, r6
   48eb0:	bl	468f0 <luaL_error@@Base+0x804>
   48eb4:	ldr	r3, [r6, #4]
   48eb8:	mov	sl, r4
   48ebc:	cmp	r3, #125	; 0x7d
   48ec0:	beq	49020 <luaL_error@@Base+0x2f34>
   48ec4:	cmp	r3, #256	; 0x100
   48ec8:	ldr	r7, [r6, #16]
   48ecc:	bne	49154 <luaL_error@@Base+0x3068>
   48ed0:	ldr	r3, [r6, #12]
   48ed4:	cmp	r3, #0
   48ed8:	bne	49134 <luaL_error@@Base+0x3048>
   48edc:	mov	r0, r6
   48ee0:	bl	468f0 <luaL_error@@Base+0x804>
   48ee4:	ldr	r3, [r6, #4]
   48ee8:	cmp	r3, #61	; 0x3d
   48eec:	bne	48e14 <luaL_error@@Base+0x2d28>
   48ef0:	mov	r0, r6
   48ef4:	bl	468f0 <luaL_error@@Base+0x804>
   48ef8:	add	r1, sp, #24
   48efc:	mov	r0, r6
   48f00:	bl	48438 <luaL_error@@Base+0x234c>
   48f04:	ldr	r3, [sp, #28]
   48f08:	cmp	r3, #10
   48f0c:	beq	49088 <luaL_error@@Base+0x2f9c>
   48f10:	ldr	r2, [sp, #24]
   48f14:	ldr	r0, [pc, #620]	; 49188 <luaL_error@@Base+0x309c>
   48f18:	ldr	r1, [sp, #8]
   48f1c:	cmp	r2, #0
   48f20:	mov	r3, #9
   48f24:	movlt	r1, r0
   48f28:	str	r1, [sp, #8]
   48f2c:	str	r3, [sp, #28]
   48f30:	b	48e14 <luaL_error@@Base+0x2d28>
   48f34:	mov	r2, #276824064	; 0x10800000
   48f38:	mov	r1, r5
   48f3c:	mov	r0, r6
   48f40:	bl	497f0 <luaL_error@@Base+0x3704>
   48f44:	mov	r8, r0
   48f48:	b	48c3c <luaL_error@@Base+0x2b50>
   48f4c:	mov	r0, r6
   48f50:	ldr	r8, [r6, #12]
   48f54:	bl	468f0 <luaL_error@@Base+0x804>
   48f58:	b	48c3c <luaL_error@@Base+0x2b50>
   48f5c:	mov	r2, #268435456	; 0x10000000
   48f60:	mov	r1, r5
   48f64:	mov	r0, r6
   48f68:	bl	497f0 <luaL_error@@Base+0x3704>
   48f6c:	mov	r8, r0
   48f70:	b	48c3c <luaL_error@@Base+0x2b50>
   48f74:	lsl	r0, r4, #13
   48f78:	tst	r4, #2
   48f7c:	and	r0, r0, #8388608	; 0x800000
   48f80:	beq	48ffc <luaL_error@@Base+0x2f10>
   48f84:	ldr	r3, [pc, #512]	; 4918c <luaL_error@@Base+0x30a0>
   48f88:	and	r3, r3, r4
   48f8c:	cmp	r3, #0
   48f90:	bne	49160 <luaL_error@@Base+0x3074>
   48f94:	tst	r4, #512	; 0x200
   48f98:	orrne	r0, r0, #134217728	; 0x8000000
   48f9c:	moveq	r0, #142606336	; 0x8800000
   48fa0:	cmp	r9, #0
   48fa4:	moveq	r9, #1
   48fa8:	bne	49050 <luaL_error@@Base+0x2f64>
   48fac:	ldr	r2, [r5, #32]
   48fb0:	ldr	r3, [r5]
   48fb4:	add	r0, r0, ip
   48fb8:	cmp	r3, #99	; 0x63
   48fbc:	and	ip, r2, #50331648	; 0x3000000
   48fc0:	add	r0, ip, r0
   48fc4:	bhi	49170 <luaL_error@@Base+0x3084>
   48fc8:	add	r1, r5, r3, lsl #4
   48fcc:	mov	lr, #0
   48fd0:	str	r0, [r1, #52]	; 0x34
   48fd4:	str	r9, [r1, #56]	; 0x38
   48fd8:	ldr	r0, [r5, #4]
   48fdc:	strh	lr, [r1, #60]	; 0x3c
   48fe0:	bic	r2, r2, #50331648	; 0x3000000
   48fe4:	add	r0, r5, r0, lsl #4
   48fe8:	add	ip, r3, #1
   48fec:	ldrh	r6, [r0, #62]	; 0x3e
   48ff0:	str	lr, [r1, #64]	; 0x40
   48ff4:	strh	r6, [r1, #62]	; 0x3e
   48ff8:	b	48d54 <luaL_error@@Base+0x2c68>
   48ffc:	tst	r4, #16
   49000:	beq	49060 <luaL_error@@Base+0x2f74>
   49004:	tst	r4, #32
   49008:	bne	490e8 <luaL_error@@Base+0x2ffc>
   4900c:	clz	ip, r9
   49010:	lsl	ip, ip, #16
   49014:	eor	ip, ip, #2031616	; 0x1f0000
   49018:	mov	r0, #67108864	; 0x4000000
   4901c:	b	48fac <luaL_error@@Base+0x2ec0>
   49020:	mov	r1, #125	; 0x7d
   49024:	mov	r0, r6
   49028:	ldr	r4, [sp, #12]
   4902c:	bl	476b8 <luaL_error@@Base+0x15cc>
   49030:	ldr	r3, [r6, #48]	; 0x30
   49034:	mov	r1, #4
   49038:	ldr	r0, [sp, #8]
   4903c:	ldr	r3, [r3]
   49040:	add	r2, r3, r8, lsl r1
   49044:	str	r0, [r3, r8, lsl #4]
   49048:	str	r1, [r2, #4]
   4904c:	b	48c3c <luaL_error@@Base+0x2b50>
   49050:	clz	ip, r9
   49054:	lsl	ip, ip, #16
   49058:	eor	ip, ip, #2031616	; 0x1f0000
   4905c:	b	48fac <luaL_error@@Base+0x2ec0>
   49060:	tst	r4, #4
   49064:	beq	490c0 <luaL_error@@Base+0x2fd4>
   49068:	ldr	r3, [pc, #288]	; 49190 <luaL_error@@Base+0x30a4>
   4906c:	clz	ip, r9
   49070:	and	r3, r3, r4
   49074:	cmp	r3, #4
   49078:	lsl	ip, ip, #16
   4907c:	moveq	r0, #8388608	; 0x800000
   49080:	eor	ip, ip, #2031616	; 0x1f0000
   49084:	b	48fac <luaL_error@@Base+0x2ec0>
   49088:	ldr	r3, [sp, #24]
   4908c:	cmp	r3, #0
   49090:	movge	r3, #9
   49094:	strge	r3, [sp, #28]
   49098:	b	48e14 <luaL_error@@Base+0x2d28>
   4909c:	tst	r4, #256	; 0x100
   490a0:	bne	48d78 <luaL_error@@Base+0x2c8c>
   490a4:	cmp	r8, #0
   490a8:	beq	48d00 <luaL_error@@Base+0x2c14>
   490ac:	b	48d84 <luaL_error@@Base+0x2c98>
   490b0:	mov	r0, r6
   490b4:	uxth	r8, r8
   490b8:	bl	468f0 <luaL_error@@Base+0x804>
   490bc:	b	48c3c <luaL_error@@Base+0x2b50>
   490c0:	tst	r4, #128	; 0x80
   490c4:	bne	490f8 <luaL_error@@Base+0x300c>
   490c8:	tst	r4, #64	; 0x40
   490cc:	bne	49104 <luaL_error@@Base+0x3018>
   490d0:	tst	r4, #32
   490d4:	beq	49110 <luaL_error@@Base+0x3024>
   490d8:	orr	r0, r0, #4194304	; 0x400000
   490dc:	mov	ip, #131072	; 0x20000
   490e0:	mov	r9, #4
   490e4:	b	48fac <luaL_error@@Base+0x2ec0>
   490e8:	mov	ip, #196608	; 0x30000
   490ec:	mov	r0, #67108864	; 0x4000000
   490f0:	mov	r9, #8
   490f4:	b	48fac <luaL_error@@Base+0x2ec0>
   490f8:	mov	ip, #65536	; 0x10000
   490fc:	mov	r9, #2
   49100:	b	48fac <luaL_error@@Base+0x2ec0>
   49104:	mov	ip, #196608	; 0x30000
   49108:	mov	r9, #8
   4910c:	b	48fac <luaL_error@@Base+0x2ec0>
   49110:	cmp	r9, #0
   49114:	bne	49050 <luaL_error@@Base+0x2f64>
   49118:	tst	r4, #1536	; 0x600
   4911c:	movne	ip, #131072	; 0x20000
   49120:	movne	r9, #4
   49124:	bne	48fac <luaL_error@@Base+0x2ec0>
   49128:	mov	r0, r6
   4912c:	ldr	r2, [pc, #96]	; 49194 <luaL_error@@Base+0x30a8>
   49130:	bl	4611c <luaL_error@@Base+0x30>
   49134:	add	r3, r7, #16
   49138:	mov	r0, r6
   4913c:	ldr	r2, [pc, #84]	; 49198 <luaL_error@@Base+0x30ac>
   49140:	mov	r1, #0
   49144:	bl	4611c <luaL_error@@Base+0x30>
   49148:	mov	r0, r6
   4914c:	ldr	r2, [pc, #72]	; 4919c <luaL_error@@Base+0x30b0>
   49150:	bl	4611c <luaL_error@@Base+0x30>
   49154:	mov	r0, r6
   49158:	mov	r1, #256	; 0x100
   4915c:	bl	4626c <luaL_error@@Base+0x180>
   49160:	mov	r1, ip
   49164:	mov	r0, r6
   49168:	mov	r2, #2976	; 0xba0
   4916c:	bl	4611c <luaL_error@@Base+0x30>
   49170:	mov	r0, r5
   49174:	bl	462a8 <luaL_error@@Base+0x1bc>
   49178:	andeq	r0, r0, r7, lsr #2
   4917c:	andeq	r0, r0, r9, lsr #2
   49180:	andpl	r0, r2, sl
   49184:	blx	1001ab2 <__bss_end__@@Base+0xf7d83a>
   49188:	andpl	r0, r2, r9
   4918c:			; <UNDEFINED> instruction: 0xfff079f5
   49190:	andeq	r0, r0, r4, lsl #12
   49194:	andeq	r0, r0, r8, ror #23
   49198:	andeq	r0, r0, r7, lsr #24
   4919c:	ldrdeq	r0, [r0], -r6
   491a0:	ldr	r3, [r0, #4]
   491a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   491a8:	cmp	r3, #41	; 0x29
   491ac:	sub	sp, sp, #1648	; 0x670
   491b0:	sub	sp, sp, #12
   491b4:	mov	r9, r0
   491b8:	mov	r6, r1
   491bc:	mov	r5, #0
   491c0:	beq	493b4 <luaL_error@@Base+0x32c8>
   491c4:	cmp	r3, #46	; 0x2e
   491c8:	beq	49428 <luaL_error@@Base+0x333c>
   491cc:	mov	r7, r5
   491d0:	mov	r4, r5
   491d4:	mov	r8, #6
   491d8:	mov	r2, #524288	; 0x80000
   491dc:	add	r1, sp, #4
   491e0:	mov	r0, r9
   491e4:	bl	48bec <luaL_error@@Base+0x2b00>
   491e8:	add	r1, sp, #4
   491ec:	mov	r0, r9
   491f0:	str	r8, [sp, #16]
   491f4:	bl	4944c <luaL_error@@Base+0x3360>
   491f8:	add	r1, sp, #4
   491fc:	mov	r0, r9
   49200:	bl	46544 <luaL_error@@Base+0x458>
   49204:	mov	sl, r0
   49208:	ldr	r0, [r9, #48]	; 0x30
   4920c:	ldr	ip, [r0]
   49210:	add	r3, ip, sl, lsl #4
   49214:	ldr	r1, [ip, sl, lsl #4]
   49218:	lsr	r2, r1, #28
   4921c:	cmp	r2, #8
   49220:	bne	4923c <luaL_error@@Base+0x3150>
   49224:	uxth	r3, r1
   49228:	ldr	r1, [ip, r3, lsl #4]
   4922c:	add	r3, ip, r3, lsl #4
   49230:	lsr	r2, r1, #28
   49234:	cmp	r2, #8
   49238:	beq	49224 <luaL_error@@Base+0x3138>
   4923c:	cmp	r2, #4
   49240:	str	r3, [sp]
   49244:	beq	493ac <luaL_error@@Base+0x32c0>
   49248:	and	r3, r1, #-67108864	; 0xfc000000
   4924c:	cmp	r3, #805306368	; 0x30000000
   49250:	beq	49370 <luaL_error@@Base+0x3284>
   49254:	cmp	r2, #6
   49258:	beq	49390 <luaL_error@@Base+0x32a4>
   4925c:	mov	r1, sp
   49260:	bl	4561c <luaL_typerror@@Base+0xf2b0>
   49264:	cmp	r5, #0
   49268:	ldr	r2, [sp]
   4926c:	ldrne	r3, [r9, #48]	; 0x30
   49270:	add	sl, sl, #-1879048192	; 0x90000000
   49274:	ldrne	r3, [r3]
   49278:	moveq	r5, r0
   4927c:	addne	r7, r3, r7, lsl #4
   49280:	ldr	r3, [sp, #24]
   49284:	strhne	r0, [r7, #8]
   49288:	cmp	r3, #0
   4928c:	mov	fp, r0
   49290:	ldrbne	r1, [r3, #4]
   49294:	orrne	r1, r1, #32
   49298:	strbne	r1, [r3, #4]
   4929c:	strne	r3, [r2, #12]
   492a0:	ldr	r3, [r9, #4]
   492a4:	str	r4, [r2, #4]
   492a8:	cmp	r3, #44	; 0x2c
   492ac:	str	sl, [r2]
   492b0:	add	r4, r4, #1
   492b4:	bne	493ac <luaL_error@@Base+0x32c0>
   492b8:	mov	r0, r9
   492bc:	bl	468f0 <luaL_error@@Base+0x804>
   492c0:	ldr	r3, [r9, #4]
   492c4:	mov	r7, fp
   492c8:	cmp	r3, #46	; 0x2e
   492cc:	bne	491d8 <luaL_error@@Base+0x30ec>
   492d0:	mov	r0, r9
   492d4:	bl	468f0 <luaL_error@@Base+0x804>
   492d8:	mov	r1, #46	; 0x2e
   492dc:	mov	r0, r9
   492e0:	bl	476b8 <luaL_error@@Base+0x15cc>
   492e4:	mov	r1, #46	; 0x2e
   492e8:	mov	r0, r9
   492ec:	bl	476b8 <luaL_error@@Base+0x15cc>
   492f0:	ldr	r8, [pc, #332]	; 49444 <luaL_error@@Base+0x3358>
   492f4:	mov	r1, #41	; 0x29
   492f8:	mov	r0, r9
   492fc:	bl	476b8 <luaL_error@@Base+0x15cc>
   49300:	ldr	r3, [r9, #4]
   49304:	cmp	r3, #123	; 0x7b
   49308:	beq	493c0 <luaL_error@@Base+0x32d4>
   4930c:	ldr	r3, [r6, #36]	; 0x24
   49310:	ldr	r1, [r6]
   49314:	mov	r0, #0
   49318:	lsr	r3, r3, #16
   4931c:	cmp	r1, #99	; 0x63
   49320:	lsl	r3, r3, #16
   49324:	orr	r3, r3, r8
   49328:	str	r0, [r6, #36]	; 0x24
   4932c:	bhi	4943c <luaL_error@@Base+0x3350>
   49330:	add	r2, r6, r1, lsl #4
   49334:	add	ip, r1, #1
   49338:	str	r3, [r2, #52]	; 0x34
   4933c:	str	r4, [r2, #56]	; 0x38
   49340:	ldr	r3, [r6, #4]
   49344:	strh	r0, [r2, #60]	; 0x3c
   49348:	str	r0, [r2, #64]	; 0x40
   4934c:	add	r3, r6, r3, lsl #4
   49350:	ldrh	r0, [r3, #62]	; 0x3e
   49354:	strh	r0, [r2, #62]	; 0x3e
   49358:	strh	r1, [r3, #62]	; 0x3e
   4935c:	str	ip, [r6]
   49360:	strh	r5, [r2, #60]	; 0x3c
   49364:	add	sp, sp, #1648	; 0x670
   49368:	add	sp, sp, #12
   4936c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49370:	uxth	r1, r1
   49374:	orr	r1, r1, #536870912	; 0x20000000
   49378:	orr	r1, r1, #131072	; 0x20000
   4937c:	mov	r2, #4
   49380:	bl	41060 <luaL_typerror@@Base+0xacf4>
   49384:	mov	sl, r0
   49388:	ldr	r0, [r9, #48]	; 0x30
   4938c:	b	4925c <luaL_error@@Base+0x3170>
   49390:	orr	r1, sl, #131072	; 0x20000
   49394:	add	r1, r1, #536870912	; 0x20000000
   49398:	mov	r2, #4
   4939c:	bl	41060 <luaL_typerror@@Base+0xacf4>
   493a0:	mov	sl, r0
   493a4:	ldr	r0, [r9, #48]	; 0x30
   493a8:	b	4925c <luaL_error@@Base+0x3170>
   493ac:	mov	r8, #1610612736	; 0x60000000
   493b0:	b	492f4 <luaL_error@@Base+0x3208>
   493b4:	mov	r4, r5
   493b8:	mov	r8, #1610612736	; 0x60000000
   493bc:	b	492f4 <luaL_error@@Base+0x3208>
   493c0:	mov	r0, r9
   493c4:	bl	468f0 <luaL_error@@Base+0x804>
   493c8:	ldr	r3, [r9, #72]	; 0x48
   493cc:	ldr	sl, [pc, #116]	; 49448 <luaL_error@@Base+0x335c>
   493d0:	orr	r3, r3, #32
   493d4:	mov	r7, #1
   493d8:	str	r3, [r9, #72]	; 0x48
   493dc:	b	493f0 <luaL_error@@Base+0x3304>
   493e0:	cmp	r3, sl
   493e4:	beq	49430 <luaL_error@@Base+0x3344>
   493e8:	mov	r0, r9
   493ec:	bl	468f0 <luaL_error@@Base+0x804>
   493f0:	ldr	r3, [r9, #4]
   493f4:	cmp	r3, #123	; 0x7b
   493f8:	addeq	r7, r7, #1
   493fc:	beq	493e8 <luaL_error@@Base+0x32fc>
   49400:	cmp	r3, #125	; 0x7d
   49404:	bne	493e0 <luaL_error@@Base+0x32f4>
   49408:	subs	r7, r7, #1
   4940c:	bne	493e8 <luaL_error@@Base+0x32fc>
   49410:	ldr	r3, [r9, #72]	; 0x48
   49414:	mov	r2, #59	; 0x3b
   49418:	bic	r3, r3, #32
   4941c:	str	r3, [r9, #72]	; 0x48
   49420:	str	r2, [r9, #4]
   49424:	b	4930c <luaL_error@@Base+0x3220>
   49428:	mov	r4, r5
   4942c:	b	492d0 <luaL_error@@Base+0x31e4>
   49430:	mov	r0, r9
   49434:	mov	r1, #125	; 0x7d
   49438:	bl	4626c <luaL_error@@Base+0x180>
   4943c:	mov	r0, r6
   49440:	bl	462a8 <luaL_error@@Base+0x1bc>
   49444:	addvs	r0, r0, r0
   49448:	andeq	r0, r0, r3, lsl #2
   4944c:	ldr	r3, [r0, #64]	; 0x40
   49450:	push	{r4, r5, r6, r7, r8, lr}
   49454:	add	r3, r3, #1
   49458:	cmp	r3, #20
   4945c:	str	r3, [r0, #64]	; 0x40
   49460:	bgt	497d0 <luaL_error@@Base+0x36e4>
   49464:	mov	r5, r0
   49468:	mov	r4, r1
   4946c:	ldr	r6, [pc, #868]	; 497d8 <luaL_error@@Base+0x36ec>
   49470:	ldr	r8, [pc, #868]	; 497dc <luaL_error@@Base+0x36f0>
   49474:	ldr	r7, [pc, #868]	; 497e0 <luaL_error@@Base+0x36f4>
   49478:	b	494e8 <luaL_error@@Base+0x33fc>
   4947c:	cmp	r3, #38	; 0x26
   49480:	beq	4948c <luaL_error@@Base+0x33a0>
   49484:	cmp	r3, r8
   49488:	bne	49540 <luaL_error@@Base+0x3454>
   4948c:	mov	r0, r5
   49490:	bl	468f0 <luaL_error@@Base+0x804>
   49494:	ldr	r2, [r4, #32]
   49498:	ldr	r3, [r4]
   4949c:	and	r2, r2, r6
   494a0:	cmp	r3, #99	; 0x63
   494a4:	str	r2, [r4, #32]
   494a8:	bhi	497b0 <luaL_error@@Base+0x36c4>
   494ac:	add	r2, r4, r3, lsl #4
   494b0:	mov	r1, #4
   494b4:	str	r7, [r2, #52]	; 0x34
   494b8:	str	r1, [r2, #56]	; 0x38
   494bc:	ldr	r1, [r4, #4]
   494c0:	mov	r0, #0
   494c4:	strh	r0, [r2, #60]	; 0x3c
   494c8:	add	r1, r4, r1, lsl #4
   494cc:	add	ip, r3, #1
   494d0:	ldrh	lr, [r1, #62]	; 0x3e
   494d4:	str	r0, [r2, #64]	; 0x40
   494d8:	strh	lr, [r2, #62]	; 0x3e
   494dc:	strh	r3, [r1, #62]	; 0x3e
   494e0:	str	r3, [r4, #4]
   494e4:	str	ip, [r4]
   494e8:	ldr	r3, [r5, #4]
   494ec:	cmp	r3, #42	; 0x2a
   494f0:	bne	4947c <luaL_error@@Base+0x3390>
   494f4:	mov	r0, r5
   494f8:	bl	468f0 <luaL_error@@Base+0x804>
   494fc:	mov	r1, r4
   49500:	mov	r0, r5
   49504:	bl	48564 <luaL_error@@Base+0x2478>
   49508:	ldr	r2, [r4, #32]
   4950c:	ldr	r3, [r4]
   49510:	and	r1, r2, #58720256	; 0x3800000
   49514:	add	r1, r1, #536870912	; 0x20000000
   49518:	and	r2, r2, r6
   4951c:	cmp	r3, #99	; 0x63
   49520:	add	r1, r1, #131072	; 0x20000
   49524:	str	r2, [r4, #32]
   49528:	bhi	497b0 <luaL_error@@Base+0x36c4>
   4952c:	add	r2, r4, r3, lsl #4
   49530:	mov	r0, #4
   49534:	str	r1, [r2, #52]	; 0x34
   49538:	str	r0, [r2, #56]	; 0x38
   4953c:	b	494bc <luaL_error@@Base+0x33d0>
   49540:	cmp	r3, #40	; 0x28
   49544:	beq	49710 <luaL_error@@Base+0x3624>
   49548:	cmp	r3, #256	; 0x100
   4954c:	ldr	r2, [r4, #12]
   49550:	beq	496ec <luaL_error@@Base+0x3600>
   49554:	tst	r2, #2
   49558:	beq	497b8 <luaL_error@@Base+0x36cc>
   4955c:	cmp	r3, #91	; 0x5b
   49560:	bne	49644 <luaL_error@@Base+0x3558>
   49564:	ldr	r6, [pc, #632]	; 497e4 <luaL_error@@Base+0x36f8>
   49568:	b	495e4 <luaL_error@@Base+0x34f8>
   4956c:	cmp	r3, #93	; 0x5d
   49570:	mvneq	r7, #0
   49574:	moveq	r8, #805306368	; 0x30000000
   49578:	beq	4958c <luaL_error@@Base+0x34a0>
   4957c:	mov	r0, r5
   49580:	bl	484a0 <luaL_error@@Base+0x23b4>
   49584:	mov	r8, #805306368	; 0x30000000
   49588:	mov	r7, r0
   4958c:	mov	r0, r5
   49590:	mov	r1, #93	; 0x5d
   49594:	bl	476b8 <luaL_error@@Base+0x15cc>
   49598:	ldr	r0, [r4]
   4959c:	cmp	r0, #99	; 0x63
   495a0:	bhi	497b0 <luaL_error@@Base+0x36c4>
   495a4:	add	r2, r4, r0, lsl #4
   495a8:	mov	ip, #0
   495ac:	str	r8, [r2, #52]	; 0x34
   495b0:	str	r7, [r2, #56]	; 0x38
   495b4:	ldr	r1, [r4, #4]
   495b8:	ldr	r3, [r5, #4]
   495bc:	strh	ip, [r2, #60]	; 0x3c
   495c0:	add	r1, r4, r1, lsl #4
   495c4:	add	lr, r0, #1
   495c8:	ldrh	r7, [r1, #62]	; 0x3e
   495cc:	cmp	r3, #91	; 0x5b
   495d0:	str	ip, [r2, #64]	; 0x40
   495d4:	strh	r7, [r2, #62]	; 0x3e
   495d8:	strh	r0, [r1, #62]	; 0x3e
   495dc:	str	lr, [r4]
   495e0:	bne	49638 <luaL_error@@Base+0x354c>
   495e4:	mov	r0, r5
   495e8:	bl	468f0 <luaL_error@@Base+0x804>
   495ec:	mov	r1, r4
   495f0:	mov	r0, r5
   495f4:	bl	48564 <luaL_error@@Base+0x2478>
   495f8:	ldr	r3, [r5, #4]
   495fc:	cmp	r3, #63	; 0x3f
   49600:	bne	4956c <luaL_error@@Base+0x3480>
   49604:	mov	r0, r5
   49608:	bl	468f0 <luaL_error@@Base+0x804>
   4960c:	mvn	r7, #0
   49610:	mov	r8, r6
   49614:	b	4958c <luaL_error@@Base+0x34a0>
   49618:	mov	r0, r5
   4961c:	bl	468f0 <luaL_error@@Base+0x804>
   49620:	mov	r1, r4
   49624:	mov	r0, r5
   49628:	bl	491a0 <luaL_error@@Base+0x30b4>
   4962c:	ldr	r3, [r5, #4]
   49630:	cmp	r3, #91	; 0x5b
   49634:	beq	49564 <luaL_error@@Base+0x3478>
   49638:	cmp	r3, #40	; 0x28
   4963c:	ldrne	r2, [r4, #12]
   49640:	beq	49618 <luaL_error@@Base+0x352c>
   49644:	sub	r3, r3, #58	; 0x3a
   49648:	clz	r3, r3
   4964c:	lsr	r3, r3, #5
   49650:	ands	r3, r3, r2, lsr #3
   49654:	bne	49780 <luaL_error@@Base+0x3694>
   49658:	mov	r1, r4
   4965c:	mov	r0, r5
   49660:	bl	48564 <luaL_error@@Base+0x2478>
   49664:	ldr	r2, [r4, #4]
   49668:	add	r3, r4, r2, lsl #4
   4966c:	ldr	r3, [r3, #52]	; 0x34
   49670:	lsr	r3, r3, #28
   49674:	cmp	r3, #6
   49678:	beq	496dc <luaL_error@@Base+0x35f0>
   4967c:	ldr	r3, [r4, #32]
   49680:	tst	r3, #1
   49684:	beq	496dc <luaL_error@@Base+0x35f0>
   49688:	ldr	r1, [r4, #12]
   4968c:	ands	r1, r1, #8
   49690:	bne	496dc <luaL_error@@Base+0x35f0>
   49694:	ldr	r0, [r4]
   49698:	lsr	r3, r3, #16
   4969c:	cmp	r0, #99	; 0x63
   496a0:	and	r3, r3, #15
   496a4:	bhi	497b0 <luaL_error@@Base+0x36c4>
   496a8:	add	ip, r4, r0, lsl #4
   496ac:	add	r2, r4, r2, lsl #4
   496b0:	ldr	lr, [pc, #304]	; 497e8 <luaL_error@@Base+0x36fc>
   496b4:	str	r3, [ip, #56]	; 0x38
   496b8:	strh	r1, [ip, #60]	; 0x3c
   496bc:	str	lr, [ip, #52]	; 0x34
   496c0:	ldrh	lr, [r2, #62]	; 0x3e
   496c4:	add	r3, r0, #1
   496c8:	str	r1, [ip, #64]	; 0x40
   496cc:	strh	lr, [ip, #62]	; 0x3e
   496d0:	strh	r0, [r2, #62]	; 0x3e
   496d4:	str	r0, [r4, #4]
   496d8:	str	r3, [r4]
   496dc:	ldr	r3, [r5, #64]	; 0x40
   496e0:	sub	r3, r3, #1
   496e4:	str	r3, [r5, #64]	; 0x40
   496e8:	pop	{r4, r5, r6, r7, r8, pc}
   496ec:	tst	r2, #4
   496f0:	beq	497c4 <luaL_error@@Base+0x36d8>
   496f4:	ldr	r2, [r5, #16]
   496f8:	ldr	r3, [r5, #12]
   496fc:	mov	r0, r5
   49700:	str	r2, [r4, #20]
   49704:	str	r3, [r4, #28]
   49708:	bl	468f0 <luaL_error@@Base+0x804>
   4970c:	b	4962c <luaL_error@@Base+0x3540>
   49710:	mov	r0, r5
   49714:	bl	468f0 <luaL_error@@Base+0x804>
   49718:	mov	r1, r4
   4971c:	mov	r0, r5
   49720:	bl	48564 <luaL_error@@Base+0x2478>
   49724:	ldr	r3, [r4, #12]
   49728:	tst	r3, #2
   4972c:	beq	4975c <luaL_error@@Base+0x3670>
   49730:	ldr	r3, [r5, #4]
   49734:	cmp	r3, #41	; 0x29
   49738:	beq	49620 <luaL_error@@Base+0x3534>
   4973c:	sub	r2, r3, #268	; 0x10c
   49740:	sub	r2, r2, #1
   49744:	cmp	r2, #28
   49748:	bls	49620 <luaL_error@@Base+0x3534>
   4974c:	cmp	r3, #256	; 0x100
   49750:	beq	49798 <luaL_error@@Base+0x36ac>
   49754:	cmp	r3, #36	; 0x24
   49758:	beq	49620 <luaL_error@@Base+0x3534>
   4975c:	ldr	r6, [r4, #4]
   49760:	mov	r1, r4
   49764:	mov	r0, r5
   49768:	bl	4944c <luaL_error@@Base+0x3360>
   4976c:	mov	r1, #41	; 0x29
   49770:	mov	r0, r5
   49774:	bl	476b8 <luaL_error@@Base+0x15cc>
   49778:	str	r6, [r4, #4]
   4977c:	b	4962c <luaL_error@@Base+0x3540>
   49780:	mov	r0, r5
   49784:	bl	468f0 <luaL_error@@Base+0x804>
   49788:	mov	r0, r5
   4978c:	bl	484a0 <luaL_error@@Base+0x23b4>
   49790:	str	r0, [r4, #48]	; 0x30
   49794:	b	49658 <luaL_error@@Base+0x356c>
   49798:	ldr	r3, [r5, #20]
   4979c:	ldr	r3, [r3]
   497a0:	lsr	r3, r3, #28
   497a4:	cmp	r3, #7
   497a8:	bne	4975c <luaL_error@@Base+0x3670>
   497ac:	b	49620 <luaL_error@@Base+0x3534>
   497b0:	mov	r0, r4
   497b4:	bl	462a8 <luaL_error@@Base+0x1bc>
   497b8:	mov	r0, r5
   497bc:	mov	r1, #256	; 0x100
   497c0:	bl	4626c <luaL_error@@Base+0x180>
   497c4:	mov	r0, r5
   497c8:	ldr	r1, [pc, #28]	; 497ec <luaL_error@@Base+0x3700>
   497cc:	bl	4626c <luaL_error@@Base+0x180>
   497d0:	mov	r1, #2176	; 0x880
   497d4:	bl	46298 <luaL_error@@Base+0x1ac>
   497d8:	ldc2l	0, cr0, [pc], #1020	; 49bdc <luaL_error@@Base+0x3af0>
   497dc:	andeq	r0, r0, r5, lsl #2
   497e0:	addcs	r0, r2, #0
   497e4:	andscc	r0, r0, r0
   497e8:	andhi	r0, r2, r0
   497ec:	andeq	r0, r0, r3, lsl #2
   497f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   497f4:	sub	sp, sp, #1680	; 0x690
   497f8:	sub	sp, sp, #4
   497fc:	mov	r4, r0
   49800:	str	r1, [sp, #8]
   49804:	bl	48a34 <luaL_error@@Base+0x2948>
   49808:	ldr	r3, [r4, #4]
   4980c:	cmp	r3, #123	; 0x7b
   49810:	str	r0, [sp, #4]
   49814:	beq	49828 <luaL_error@@Base+0x373c>
   49818:	ldr	r0, [sp, #4]
   4981c:	add	sp, sp, #1680	; 0x690
   49820:	add	sp, sp, #4
   49824:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49828:	mov	r0, r4
   4982c:	bl	468f0 <luaL_error@@Base+0x804>
   49830:	ldr	r3, [r4, #4]
   49834:	cmp	r3, #125	; 0x7d
   49838:	beq	49de0 <luaL_error@@Base+0x3cf4>
   4983c:	mov	fp, #0
   49840:	ldr	r5, [sp, #4]
   49844:	mov	r6, fp
   49848:	mov	sl, fp
   4984c:	mov	r2, #131072	; 0x20000
   49850:	add	r1, sp, #28
   49854:	mov	r0, r4
   49858:	bl	48bec <luaL_error@@Base+0x2b00>
   4985c:	cmp	r0, #0
   49860:	moveq	r3, #14
   49864:	movne	r3, #4
   49868:	cmp	sl, #0
   4986c:	str	r3, [sp, #40]	; 0x28
   49870:	bne	49d98 <luaL_error@@Base+0x3cac>
   49874:	and	r7, r0, #131072	; 0x20000
   49878:	mvn	r8, #0
   4987c:	add	r9, sp, #28
   49880:	b	49914 <luaL_error@@Base+0x3828>
   49884:	mov	r2, r0
   49888:	add	r1, sp, #24
   4988c:	mov	r0, r4
   49890:	bl	48358 <luaL_error@@Base+0x226c>
   49894:	ldr	r2, [r4, #48]	; 0x30
   49898:	ldr	r3, [sp, #48]	; 0x30
   4989c:	ldr	r1, [sp, #24]
   498a0:	ldr	r2, [r2]
   498a4:	mov	sl, #0
   498a8:	add	r5, r2, r5, lsl #4
   498ac:	strh	r0, [r5, #8]
   498b0:	ldrb	r2, [r3, #4]
   498b4:	mov	r5, r0
   498b8:	orr	r2, r2, #32
   498bc:	strb	r2, [r3, #4]
   498c0:	str	r3, [r1, #12]
   498c4:	ldr	r3, [r4, #4]
   498c8:	cmp	r3, #44	; 0x2c
   498cc:	bne	49a14 <luaL_error@@Base+0x3928>
   498d0:	mov	r0, r4
   498d4:	bl	468f0 <luaL_error@@Base+0x804>
   498d8:	ldr	r3, [sp, #36]	; 0x24
   498dc:	ldr	r1, [sp, #68]	; 0x44
   498e0:	add	r2, r3, #1
   498e4:	str	r3, [sp, #32]
   498e8:	str	r2, [sp, #28]
   498ec:	add	r3, r9, r3, lsl #4
   498f0:	ldr	r2, [sp, #72]	; 0x48
   498f4:	mov	r0, #0
   498f8:	cmp	sl, #0
   498fc:	strh	r0, [r3, #62]	; 0x3e
   49900:	str	r6, [sp, #48]	; 0x30
   49904:	str	r6, [sp, #52]	; 0x34
   49908:	str	r1, [sp, #60]	; 0x3c
   4990c:	str	r2, [sp, #64]	; 0x40
   49910:	bne	49d98 <luaL_error@@Base+0x3cac>
   49914:	add	r1, sp, #28
   49918:	mov	r0, r4
   4991c:	str	r8, [sp, #76]	; 0x4c
   49920:	bl	4944c <luaL_error@@Base+0x3360>
   49924:	add	r1, sp, #28
   49928:	mov	r0, r4
   4992c:	bl	46544 <luaL_error@@Base+0x458>
   49930:	cmp	r7, #0
   49934:	mov	fp, r0
   49938:	bne	49884 <luaL_error@@Base+0x3798>
   4993c:	add	r1, sp, #24
   49940:	ldr	r0, [r4, #48]	; 0x30
   49944:	bl	4561c <luaL_typerror@@Base+0xf2b0>
   49948:	ldr	r3, [r4, #48]	; 0x30
   4994c:	ldr	ip, [r3]
   49950:	add	r3, ip, fp, lsl #4
   49954:	ldr	r1, [ip, fp, lsl #4]
   49958:	lsr	r2, r1, #28
   4995c:	cmp	r2, #8
   49960:	bne	4997c <luaL_error@@Base+0x3890>
   49964:	uxth	r3, r1
   49968:	ldr	r1, [ip, r3, lsl #4]
   4996c:	add	r3, ip, r3, lsl #4
   49970:	lsr	r2, r1, #28
   49974:	cmp	r2, #8
   49978:	beq	49964 <luaL_error@@Base+0x3878>
   4997c:	ldr	sl, [sp, #76]	; 0x4c
   49980:	cmn	sl, #1
   49984:	beq	49c78 <luaL_error@@Base+0x3b8c>
   49988:	tst	r1, #-201326592	; 0xf4000000
   4998c:	bne	49da4 <luaL_error@@Base+0x3cb8>
   49990:	cmp	sl, #0
   49994:	bne	499a4 <luaL_error@@Base+0x38b8>
   49998:	ldr	r2, [sp, #48]	; 0x30
   4999c:	cmp	r2, #0
   499a0:	bne	49da4 <luaL_error@@Base+0x3cb8>
   499a4:	ldr	r3, [r3, #4]
   499a8:	lsl	r3, r3, #3
   499ac:	cmp	r3, #32
   499b0:	bhi	49da4 <luaL_error@@Base+0x3cb8>
   499b4:	tst	r1, #134217728	; 0x8000000
   499b8:	movne	r3, #1
   499bc:	cmp	sl, r3
   499c0:	bhi	49da4 <luaL_error@@Base+0x3cb8>
   499c4:	ldr	lr, [sp, #48]	; 0x30
   499c8:	ldr	r3, [sp, #24]
   499cc:	ldr	r2, [sp, #60]	; 0x3c
   499d0:	add	fp, fp, #-1879048192	; 0x90000000
   499d4:	add	sl, fp, sl, lsl #16
   499d8:	cmp	lr, #0
   499dc:	str	sl, [r3]
   499e0:	str	r2, [r3, #4]
   499e4:	movne	sl, #0
   499e8:	beq	49c70 <luaL_error@@Base+0x3b84>
   499ec:	ldrb	r2, [lr, #4]
   499f0:	orr	r2, r2, #32
   499f4:	strb	r2, [lr, #4]
   499f8:	str	lr, [r3, #12]
   499fc:	ldr	r3, [r4, #4]
   49a00:	add	ip, ip, r5, lsl #4
   49a04:	cmp	r3, #44	; 0x2c
   49a08:	mov	r5, r0
   49a0c:	strh	r0, [ip, #8]
   49a10:	beq	498d0 <luaL_error@@Base+0x37e4>
   49a14:	mov	r1, #59	; 0x3b
   49a18:	mov	r0, r4
   49a1c:	bl	476b8 <luaL_error@@Base+0x15cc>
   49a20:	ldr	r3, [r4, #4]
   49a24:	cmp	r3, #125	; 0x7d
   49a28:	bne	4984c <luaL_error@@Base+0x3760>
   49a2c:	mov	r1, #125	; 0x7d
   49a30:	mov	r0, r4
   49a34:	bl	476b8 <luaL_error@@Base+0x15cc>
   49a38:	ldr	r3, [r4, #48]	; 0x30
   49a3c:	ldr	r6, [sp, #8]
   49a40:	mov	fp, #0
   49a44:	ldr	r3, [r3]
   49a48:	mov	r1, r6
   49a4c:	add	r5, r3, r5, lsl #4
   49a50:	mov	r0, r4
   49a54:	strh	fp, [r5, #8]
   49a58:	bl	48564 <luaL_error@@Base+0x2478>
   49a5c:	ldr	r3, [r4, #48]	; 0x30
   49a60:	ldr	r2, [r6, #32]
   49a64:	ldr	r1, [sp, #4]
   49a68:	ldr	r0, [r3]
   49a6c:	str	r2, [sp, #12]
   49a70:	lsr	r3, r2, #16
   49a74:	add	r2, r0, r1, lsl #4
   49a78:	str	r2, [sp, #16]
   49a7c:	ldrh	r5, [r2, #8]
   49a80:	ldr	r9, [r0, r1, lsl #4]
   49a84:	and	r8, r3, #15
   49a88:	cmp	r5, fp
   49a8c:	beq	49dd4 <luaL_error@@Base+0x3ce8>
   49a90:	mov	r6, fp
   49a94:	b	49ad4 <luaL_error@@Base+0x39e8>
   49a98:	ldr	ip, [pc, #840]	; 49de8 <luaL_error@@Base+0x3cfc>
   49a9c:	ldr	r2, [pc, #840]	; 49dec <luaL_error@@Base+0x3d00>
   49aa0:	cmp	r7, #0
   49aa4:	and	ip, r1, ip
   49aa8:	sub	r3, ip, r2
   49aac:	clz	r3, r3
   49ab0:	lsr	r3, r3, #5
   49ab4:	moveq	r3, #0
   49ab8:	cmp	r3, #0
   49abc:	bne	49aec <luaL_error@@Base+0x3a00>
   49ac0:	ldrh	r5, [r5, #8]
   49ac4:	cmp	r5, #0
   49ac8:	beq	49bf0 <luaL_error@@Base+0x3b04>
   49acc:	ldr	r3, [r4, #48]	; 0x30
   49ad0:	ldr	r0, [r3]
   49ad4:	ldr	r1, [r0, r5, lsl #4]
   49ad8:	add	r5, r0, r5, lsl #4
   49adc:	lsr	r3, r1, #28
   49ae0:	cmp	r3, #9
   49ae4:	ldr	r7, [r5, #4]
   49ae8:	bne	49a98 <luaL_error@@Base+0x39ac>
   49aec:	add	r2, sp, #28
   49af0:	uxth	r1, r1
   49af4:	bl	1b78c <_start@@Base+0x83dc>
   49af8:	ldr	r3, [sp, #28]
   49afc:	cmn	r3, #-536870911	; 0xe0000001
   49b00:	and	r2, r0, #51380224	; 0x3100000
   49b04:	orr	r9, r9, r2
   49b08:	bls	49cf4 <luaL_error@@Base+0x3c08>
   49b0c:	cmn	r3, #1
   49b10:	bne	49d00 <luaL_error@@Base+0x3c14>
   49b14:	lsr	r3, r0, #28
   49b18:	cmp	r3, #3
   49b1c:	bne	49d00 <luaL_error@@Base+0x3c14>
   49b20:	ands	lr, r9, #8388608	; 0x800000
   49b24:	bne	49d00 <luaL_error@@Base+0x3c14>
   49b28:	mov	r3, lr
   49b2c:	str	lr, [sp, #28]
   49b30:	ldr	r2, [sp, #12]
   49b34:	orr	r2, r2, r7
   49b38:	ands	r2, r2, #2
   49b3c:	str	r2, [sp, #20]
   49b40:	lsrne	r2, r7, #16
   49b44:	andne	r2, r2, #15
   49b48:	bne	49b6c <luaL_error@@Base+0x3a80>
   49b4c:	lsr	r2, r0, #16
   49b50:	tst	r7, #1
   49b54:	and	r2, r2, #15
   49b58:	beq	49b6c <luaL_error@@Base+0x3a80>
   49b5c:	lsr	r1, r7, #16
   49b60:	and	r1, r1, #15
   49b64:	cmp	r2, r1
   49b68:	movcc	r2, r1
   49b6c:	ldrb	sl, [r4, #83]	; 0x53
   49b70:	ldr	ip, [r5]
   49b74:	mov	r1, #8
   49b78:	add	sl, r4, sl
   49b7c:	str	ip, [sp, #8]
   49b80:	ldrb	sl, [sl, #76]	; 0x4c
   49b84:	lsr	ip, ip, #16
   49b88:	and	ip, ip, #127	; 0x7f
   49b8c:	cmp	sl, r2
   49b90:	movcs	sl, r2
   49b94:	cmp	r8, sl
   49b98:	lsl	r2, r1, sl
   49b9c:	movcc	r8, sl
   49ba0:	cmp	ip, #127	; 0x7f
   49ba4:	sub	r1, r2, #1
   49ba8:	beq	49bbc <luaL_error@@Base+0x3ad0>
   49bac:	ldr	sl, [sp, #8]
   49bb0:	lsr	sl, sl, #28
   49bb4:	cmp	sl, #9
   49bb8:	beq	49d1c <luaL_error@@Base+0x3c30>
   49bbc:	rsb	r2, r2, #0
   49bc0:	add	r6, r1, r6
   49bc4:	and	r6, r6, r2
   49bc8:	lsr	r2, r6, #3
   49bcc:	str	r2, [r5, #4]
   49bd0:	cmp	lr, #0
   49bd4:	addeq	r6, r6, r3
   49bd8:	beq	49ac0 <luaL_error@@Base+0x39d4>
   49bdc:	ldrh	r5, [r5, #8]
   49be0:	cmp	fp, r3
   49be4:	movcc	fp, r3
   49be8:	cmp	r5, #0
   49bec:	bne	49acc <luaL_error@@Base+0x39e0>
   49bf0:	mov	r3, #8
   49bf4:	tst	r9, #8388608	; 0x800000
   49bf8:	lsl	r3, r3, r8
   49bfc:	movne	r6, fp
   49c00:	sub	r2, r3, #1
   49c04:	add	r2, r2, r6
   49c08:	rsb	r3, r3, #0
   49c0c:	ldr	r1, [sp, #16]
   49c10:	and	r2, r2, r3
   49c14:	add	r3, r9, r8, lsl #16
   49c18:	lsr	r2, r2, #3
   49c1c:	ldr	r0, [sp, #4]
   49c20:	str	r3, [r1]
   49c24:	str	r2, [r1, #4]
   49c28:	add	sp, sp, #1680	; 0x690
   49c2c:	add	sp, sp, #4
   49c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49c34:	cmp	r2, #1
   49c38:	beq	49ce0 <luaL_error@@Base+0x3bf4>
   49c3c:	cmp	r2, #5
   49c40:	bne	49ce8 <luaL_error@@Base+0x3bfc>
   49c44:	ldr	r2, [sp, #24]
   49c48:	add	fp, fp, #-2147483648	; 0x80000000
   49c4c:	add	fp, fp, #196608	; 0x30000
   49c50:	str	fp, [r2]
   49c54:	ldr	r3, [r3]
   49c58:	lsr	r3, r3, #28
   49c5c:	cmp	r3, #1
   49c60:	movne	r3, #0
   49c64:	ldreq	r3, [sp, #60]	; 0x3c
   49c68:	orreq	r3, r3, #-2147483648	; 0x80000000
   49c6c:	str	r3, [r2, #4]
   49c70:	mov	sl, #0
   49c74:	b	499fc <luaL_error@@Base+0x3910>
   49c78:	cmp	r2, #3
   49c7c:	ldr	lr, [sp, #48]	; 0x30
   49c80:	beq	49cac <luaL_error@@Base+0x3bc0>
   49c84:	cmp	lr, #0
   49c88:	beq	49c34 <luaL_error@@Base+0x3b48>
   49c8c:	ldr	r3, [sp, #24]
   49c90:	ldr	r2, [sp, #60]	; 0x3c
   49c94:	add	fp, fp, #-1879048192	; 0x90000000
   49c98:	add	fp, fp, #8323072	; 0x7f0000
   49c9c:	str	fp, [r3]
   49ca0:	str	r2, [r3, #4]
   49ca4:	mov	sl, #0
   49ca8:	b	499ec <luaL_error@@Base+0x3900>
   49cac:	ldr	sl, [r3, #4]
   49cb0:	cmn	sl, #1
   49cb4:	movne	sl, #0
   49cb8:	moveq	sl, #1
   49cbc:	cmp	lr, #0
   49cc0:	beq	49ce8 <luaL_error@@Base+0x3bfc>
   49cc4:	ldr	r3, [sp, #24]
   49cc8:	ldr	r2, [sp, #60]	; 0x3c
   49ccc:	add	fp, fp, #-1879048192	; 0x90000000
   49cd0:	add	fp, fp, #8323072	; 0x7f0000
   49cd4:	str	fp, [r3]
   49cd8:	str	r2, [r3, #4]
   49cdc:	b	499ec <luaL_error@@Base+0x3900>
   49ce0:	tst	r1, #1048576	; 0x100000
   49ce4:	beq	49c44 <luaL_error@@Base+0x3b58>
   49ce8:	mov	r0, r4
   49cec:	mov	r1, #256	; 0x100
   49cf0:	bl	4626c <luaL_error@@Base+0x180>
   49cf4:	lsl	r3, r3, #3
   49cf8:	cmn	r3, r6
   49cfc:	bcc	49d0c <luaL_error@@Base+0x3c20>
   49d00:	mov	r0, r4
   49d04:	ldr	r1, [pc, #228]	; 49df0 <luaL_error@@Base+0x3d04>
   49d08:	bl	46298 <luaL_error@@Base+0x1ac>
   49d0c:	tst	r0, #1048576	; 0x100000
   49d10:	bne	49d00 <luaL_error@@Base+0x3c14>
   49d14:	and	lr, r9, #8388608	; 0x800000
   49d18:	b	49b30 <luaL_error@@Base+0x3a44>
   49d1c:	cmp	ip, #0
   49d20:	beq	49d48 <luaL_error@@Base+0x3c5c>
   49d24:	tst	r7, #1
   49d28:	bne	49d48 <luaL_error@@Base+0x3c5c>
   49d2c:	ldr	r7, [sp, #20]
   49d30:	cmp	r7, #0
   49d34:	bne	49d54 <luaL_error@@Base+0x3c68>
   49d38:	and	r7, r1, r6
   49d3c:	add	r7, r7, ip
   49d40:	cmp	r7, r3
   49d44:	bls	49d54 <luaL_error@@Base+0x3c68>
   49d48:	add	r6, r1, r6
   49d4c:	rsb	r2, r2, #0
   49d50:	and	r6, r6, r2
   49d54:	cmp	ip, r3
   49d58:	beq	49db4 <luaL_error@@Base+0x3cc8>
   49d5c:	lsl	r2, ip, #8
   49d60:	and	r0, r0, #192937984	; 0xb800000
   49d64:	rsb	r1, r3, #0
   49d68:	add	r2, r2, #-1610612736	; 0xa0000000
   49d6c:	add	r2, r2, r0
   49d70:	and	r1, r1, r6
   49d74:	sub	r0, r3, #1
   49d78:	add	r2, r2, r3, lsl #13
   49d7c:	and	r0, r0, r6
   49d80:	add	r2, r2, r0
   49d84:	lsr	r1, r1, #3
   49d88:	mov	r3, ip
   49d8c:	str	r2, [r5]
   49d90:	str	r1, [r5, #4]
   49d94:	b	49bd0 <luaL_error@@Base+0x3ae4>
   49d98:	mov	r0, r4
   49d9c:	mov	r1, #125	; 0x7d
   49da0:	bl	4626c <luaL_error@@Base+0x180>
   49da4:	mov	r0, r4
   49da8:	ldr	r2, [pc, #68]	; 49df4 <luaL_error@@Base+0x3d08>
   49dac:	mov	r1, #58	; 0x3a
   49db0:	bl	4611c <luaL_error@@Base+0x30>
   49db4:	tst	r1, r6
   49db8:	bne	49d5c <luaL_error@@Base+0x3c70>
   49dbc:	ldrh	r2, [sp, #8]
   49dc0:	lsr	r1, r6, #3
   49dc4:	str	r1, [r5, #4]
   49dc8:	add	r2, r2, #-1879048192	; 0x90000000
   49dcc:	str	r2, [r5]
   49dd0:	b	49bd0 <luaL_error@@Base+0x3ae4>
   49dd4:	mov	fp, r5
   49dd8:	mov	r6, r5
   49ddc:	b	49bf0 <luaL_error@@Base+0x3b04>
   49de0:	ldr	r5, [sp, #4]
   49de4:	b	49a2c <luaL_error@@Base+0x3940>
   49de8:			; <UNDEFINED> instruction: 0xf0ff0000
   49dec:	andhi	r0, r3, r0
   49df0:	andeq	r0, r0, pc, lsr #23
   49df4:	andeq	r0, r0, r9, lsl r2
   49df8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   49dfc:	sub	sp, sp, #1664	; 0x680
   49e00:	ldr	r3, [r0, #4]
   49e04:	ldr	r8, [pc, #1248]	; 4a2ec <luaL_error@@Base+0x4200>
   49e08:	sub	sp, sp, #4
   49e0c:	mov	r4, r0
   49e10:	mov	r5, #1
   49e14:	ldr	r6, [pc, #1236]	; 4a2f0 <luaL_error@@Base+0x4204>
   49e18:	cmp	r3, r6
   49e1c:	beq	49fbc <luaL_error@@Base+0x3ed0>
   49e20:	cmp	r3, #59	; 0x3b
   49e24:	beq	4a0c4 <luaL_error@@Base+0x3fd8>
   49e28:	cmp	r3, #35	; 0x23
   49e2c:	beq	4a05c <luaL_error@@Base+0x3f70>
   49e30:	mov	r2, #229376	; 0x38000
   49e34:	add	r1, sp, #12
   49e38:	mov	r0, r4
   49e3c:	bl	48bec <luaL_error@@Base+0x2b00>
   49e40:	ldr	r2, [r4, #4]
   49e44:	cmp	r2, r6
   49e48:	cmpne	r2, #59	; 0x3b
   49e4c:	sub	r3, r2, r6
   49e50:	clz	r3, r3
   49e54:	lsr	r3, r3, #5
   49e58:	mov	r7, r0
   49e5c:	bne	49e70 <luaL_error@@Base+0x3d84>
   49e60:	ldr	r2, [sp, #64]	; 0x40
   49e64:	lsr	r1, r2, #28
   49e68:	cmp	r1, #7
   49e6c:	beq	4a098 <luaL_error@@Base+0x3fac>
   49e70:	ldr	r9, [pc, #1148]	; 4a2f4 <luaL_error@@Base+0x4208>
   49e74:	and	r6, r7, #32768	; 0x8000
   49e78:	b	49ebc <luaL_error@@Base+0x3dd0>
   49e7c:	mov	r0, r4
   49e80:	bl	468f0 <luaL_error@@Base+0x804>
   49e84:	ldr	r2, [sp, #20]
   49e88:	add	r3, sp, #12
   49e8c:	str	r2, [sp, #16]
   49e90:	add	r3, r3, r2, lsl #4
   49e94:	add	r2, r2, #1
   49e98:	str	r2, [sp, #12]
   49e9c:	mov	r2, #0
   49ea0:	ldr	r1, [sp, #52]	; 0x34
   49ea4:	strh	r2, [r3, #62]	; 0x3e
   49ea8:	ldr	r3, [sp, #56]	; 0x38
   49eac:	str	r2, [sp, #32]
   49eb0:	str	r2, [sp, #36]	; 0x24
   49eb4:	str	r1, [sp, #44]	; 0x2c
   49eb8:	str	r3, [sp, #48]	; 0x30
   49ebc:	add	r1, sp, #12
   49ec0:	mov	r0, r4
   49ec4:	bl	4944c <luaL_error@@Base+0x3360>
   49ec8:	add	r1, sp, #12
   49ecc:	mov	r0, r4
   49ed0:	bl	46544 <luaL_error@@Base+0x458>
   49ed4:	ldr	r3, [sp, #32]
   49ed8:	cmp	r3, #0
   49edc:	mov	fp, r0
   49ee0:	beq	49f7c <luaL_error@@Base+0x3e90>
   49ee4:	ldr	r3, [sp, #40]	; 0x28
   49ee8:	cmp	r3, #0
   49eec:	bne	49f7c <luaL_error@@Base+0x3e90>
   49ef0:	cmp	r6, #0
   49ef4:	ldr	r1, [r4, #48]	; 0x30
   49ef8:	bne	4a038 <luaL_error@@Base+0x3f4c>
   49efc:	ldr	r3, [r1]
   49f00:	add	r2, r3, r0, lsl #4
   49f04:	ldr	r3, [r3, r0, lsl #4]
   49f08:	lsr	r3, r3, #28
   49f0c:	cmp	r3, #6
   49f10:	streq	r2, [sp, #4]
   49f14:	moveq	sl, r0
   49f18:	beq	49fe8 <luaL_error@@Base+0x3efc>
   49f1c:	tst	r7, #131072	; 0x20000
   49f20:	beq	49fc8 <luaL_error@@Base+0x3edc>
   49f24:	mov	r2, r0
   49f28:	add	r1, sp, #4
   49f2c:	mov	r0, r4
   49f30:	bl	48358 <luaL_error@@Base+0x226c>
   49f34:	ldr	ip, [sp, #4]
   49f38:	ldr	r1, [r4, #48]	; 0x30
   49f3c:	mov	sl, r0
   49f40:	ldr	r2, [sp, #32]
   49f44:	add	r3, r2, r8
   49f48:	eor	r0, r2, r3
   49f4c:	sub	r0, r0, r3, ror #18
   49f50:	eor	r3, r0, r3, ror #13
   49f54:	sub	r3, r3, r0, ror #19
   49f58:	and	r3, r3, #127	; 0x7f
   49f5c:	ldrb	r0, [r2, #4]
   49f60:	add	r3, r1, r3, lsl #1
   49f64:	orr	r1, r0, #32
   49f68:	strb	r1, [r2, #4]
   49f6c:	ldrh	r1, [r3, #200]	; 0xc8
   49f70:	str	r2, [ip, #12]
   49f74:	strh	r1, [ip, #10]
   49f78:	strh	sl, [r3, #200]	; 0xc8
   49f7c:	ldr	r3, [r4, #4]
   49f80:	cmp	r3, #44	; 0x2c
   49f84:	beq	49e7c <luaL_error@@Base+0x3d90>
   49f88:	ldr	r2, [pc, #864]	; 4a2f0 <luaL_error@@Base+0x4204>
   49f8c:	sub	r3, r3, r2
   49f90:	clz	r3, r3
   49f94:	lsr	r3, r3, #5
   49f98:	ands	r5, r3, r5
   49f9c:	bne	49fbc <luaL_error@@Base+0x3ed0>
   49fa0:	mov	r1, #59	; 0x3b
   49fa4:	mov	r0, r4
   49fa8:	bl	476b8 <luaL_error@@Base+0x15cc>
   49fac:	ldr	r6, [pc, #828]	; 4a2f0 <luaL_error@@Base+0x4204>
   49fb0:	ldr	r3, [r4, #4]
   49fb4:	cmp	r3, r6
   49fb8:	bne	49e20 <luaL_error@@Base+0x3d34>
   49fbc:	add	sp, sp, #1664	; 0x680
   49fc0:	add	sp, sp, #4
   49fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49fc8:	mov	r0, r1
   49fcc:	add	r1, sp, #4
   49fd0:	bl	4561c <luaL_typerror@@Base+0xf2b0>
   49fd4:	ldr	r3, [sp, #4]
   49fd8:	add	fp, fp, #-1073741824	; 0xc0000000
   49fdc:	ldr	r1, [r4, #48]	; 0x30
   49fe0:	str	fp, [r3]
   49fe4:	mov	sl, r0
   49fe8:	ldr	r3, [sp, #36]	; 0x24
   49fec:	cmp	r3, #0
   49ff0:	beq	4a090 <luaL_error@@Base+0x3fa4>
   49ff4:	mov	r0, r1
   49ff8:	add	r1, sp, #8
   49ffc:	bl	4561c <luaL_typerror@@Base+0xf2b0>
   4a000:	ldr	r1, [r4, #48]	; 0x30
   4a004:	ldr	r2, [sp, #36]	; 0x24
   4a008:	ldr	r3, [sp, #8]
   4a00c:	ldr	ip, [r1]
   4a010:	add	ip, ip, sl, lsl #4
   4a014:	str	r9, [r3]
   4a018:	ldrh	lr, [ip, #8]
   4a01c:	strh	lr, [r3, #8]
   4a020:	strh	r0, [ip, #8]
   4a024:	ldrb	r0, [r2, #4]
   4a028:	orr	r0, r0, #32
   4a02c:	strb	r0, [r2, #4]
   4a030:	str	r2, [r3, #12]
   4a034:	b	49f40 <luaL_error@@Base+0x3e54>
   4a038:	mov	r0, r1
   4a03c:	add	r1, sp, #4
   4a040:	bl	4561c <luaL_typerror@@Base+0xf2b0>
   4a044:	ldr	ip, [sp, #4]
   4a048:	add	fp, fp, #1879048192	; 0x70000000
   4a04c:	ldr	r1, [r4, #48]	; 0x30
   4a050:	str	fp, [ip]
   4a054:	mov	sl, r0
   4a058:	b	49f40 <luaL_error@@Base+0x3e54>
   4a05c:	mov	r0, r4
   4a060:	ldr	r7, [r4, #60]	; 0x3c
   4a064:	bl	468f0 <luaL_error@@Base+0x804>
   4a068:	ldr	r9, [pc, #648]	; 4a2f8 <luaL_error@@Base+0x420c>
   4a06c:	cmp	r0, r9
   4a070:	mov	fp, r0
   4a074:	beq	4a1d0 <luaL_error@@Base+0x40e4>
   4a078:	cmp	r0, #256	; 0x100
   4a07c:	beq	4a0d8 <luaL_error@@Base+0x3fec>
   4a080:	ldr	r2, [pc, #628]	; 4a2fc <luaL_error@@Base+0x4210>
   4a084:	ldr	r1, [r4, #4]
   4a088:	mov	r0, r4
   4a08c:	bl	4611c <luaL_error@@Base+0x30>
   4a090:	ldr	ip, [sp, #4]
   4a094:	b	49f40 <luaL_error@@Base+0x3e54>
   4a098:	ldr	r1, [r4, #48]	; 0x30
   4a09c:	ldr	r0, [r1]
   4a0a0:	uxth	r2, r2
   4a0a4:	ldr	r2, [r0, r2, lsl #4]
   4a0a8:	lsr	r1, r2, #28
   4a0ac:	cmp	r1, #8
   4a0b0:	beq	4a0a0 <luaL_error@@Base+0x3fb4>
   4a0b4:	bic	r1, r1, #4
   4a0b8:	cmp	r1, #1
   4a0bc:	beq	49f98 <luaL_error@@Base+0x3eac>
   4a0c0:	b	49e70 <luaL_error@@Base+0x3d84>
   4a0c4:	mov	r0, r4
   4a0c8:	bl	468f0 <luaL_error@@Base+0x804>
   4a0cc:	mov	r5, #0
   4a0d0:	ldr	r3, [r4, #4]
   4a0d4:	b	49e14 <luaL_error@@Base+0x3d28>
   4a0d8:	ldr	r3, [r4, #16]
   4a0dc:	ldr	r2, [pc, #540]	; 4a300 <luaL_error@@Base+0x4214>
   4a0e0:	ldr	r3, [r3, #8]
   4a0e4:	cmp	r3, r2
   4a0e8:	beq	4a208 <luaL_error@@Base+0x411c>
   4a0ec:	ldr	r2, [pc, #528]	; 4a304 <luaL_error@@Base+0x4218>
   4a0f0:	cmp	r3, r2
   4a0f4:	bne	4a080 <luaL_error@@Base+0x3f94>
   4a0f8:	mov	r0, r4
   4a0fc:	bl	468f0 <luaL_error@@Base+0x804>
   4a100:	ldr	r3, [r4, #4]
   4a104:	cmp	r3, #256	; 0x100
   4a108:	beq	4a14c <luaL_error@@Base+0x4060>
   4a10c:	cmp	r3, r6
   4a110:	beq	49fbc <luaL_error@@Base+0x3ed0>
   4a114:	ldr	r2, [r4, #60]	; 0x3c
   4a118:	cmp	r7, r2
   4a11c:	bne	49e14 <luaL_error@@Base+0x3d28>
   4a120:	ldr	r6, [pc, #456]	; 4a2f0 <luaL_error@@Base+0x4204>
   4a124:	b	4a134 <luaL_error@@Base+0x4048>
   4a128:	ldr	r2, [r4, #60]	; 0x3c
   4a12c:	cmp	r7, r2
   4a130:	bne	49e14 <luaL_error@@Base+0x3d28>
   4a134:	mov	r0, r4
   4a138:	bl	468f0 <luaL_error@@Base+0x804>
   4a13c:	ldr	r3, [r4, #4]
   4a140:	cmp	r3, r6
   4a144:	bne	4a128 <luaL_error@@Base+0x403c>
   4a148:	b	49e14 <luaL_error@@Base+0x3d28>
   4a14c:	ldr	r2, [r4, #16]
   4a150:	ldr	r1, [pc, #432]	; 4a308 <luaL_error@@Base+0x421c>
   4a154:	ldr	r2, [r2, #8]
   4a158:	cmp	r2, r1
   4a15c:	bne	4a114 <luaL_error@@Base+0x4028>
   4a160:	mov	r0, r4
   4a164:	bl	468f0 <luaL_error@@Base+0x804>
   4a168:	mov	r1, #40	; 0x28
   4a16c:	mov	r0, r4
   4a170:	bl	476b8 <luaL_error@@Base+0x15cc>
   4a174:	ldr	r3, [r4, #4]
   4a178:	cmp	r3, #256	; 0x100
   4a17c:	beq	4a250 <luaL_error@@Base+0x4164>
   4a180:	ldrb	r2, [r4, #83]	; 0x53
   4a184:	ldr	r1, [pc, #364]	; 4a2f8 <luaL_error@@Base+0x420c>
   4a188:	cmp	r3, r1
   4a18c:	addne	r2, r4, r2
   4a190:	mvnne	r3, #0
   4a194:	strbne	r3, [r2, #76]	; 0x4c
   4a198:	bne	4a1bc <luaL_error@@Base+0x40d0>
   4a19c:	ldr	r3, [r4, #8]
   4a1a0:	add	r2, r4, r2
   4a1a4:	cmp	r3, #0
   4a1a8:	clzne	r3, r3
   4a1ac:	eorne	r3, r3, #31
   4a1b0:	mov	r0, r4
   4a1b4:	strb	r3, [r2, #76]	; 0x4c
   4a1b8:	bl	468f0 <luaL_error@@Base+0x804>
   4a1bc:	mov	r1, #41	; 0x29
   4a1c0:	mov	r0, r4
   4a1c4:	bl	476b8 <luaL_error@@Base+0x15cc>
   4a1c8:	ldr	r3, [r4, #4]
   4a1cc:	b	49e14 <luaL_error@@Base+0x3d28>
   4a1d0:	ldmib	r4, {r3, r9}
   4a1d4:	cmp	r3, r6
   4a1d8:	bne	4a1f4 <luaL_error@@Base+0x4108>
   4a1dc:	b	4a2a4 <luaL_error@@Base+0x41b8>
   4a1e0:	mov	r0, r4
   4a1e4:	bl	468f0 <luaL_error@@Base+0x804>
   4a1e8:	ldr	r3, [r4, #4]
   4a1ec:	cmp	r3, r6
   4a1f0:	beq	4a200 <luaL_error@@Base+0x4114>
   4a1f4:	ldr	r2, [r4, #60]	; 0x3c
   4a1f8:	cmp	r7, r2
   4a1fc:	beq	4a1e0 <luaL_error@@Base+0x40f4>
   4a200:	str	r9, [r4, #60]	; 0x3c
   4a204:	b	49e14 <luaL_error@@Base+0x3d28>
   4a208:	mov	r0, r4
   4a20c:	bl	468f0 <luaL_error@@Base+0x804>
   4a210:	cmp	r0, r9
   4a214:	bne	4a2e0 <luaL_error@@Base+0x41f4>
   4a218:	ldmib	r4, {r3, r9}
   4a21c:	cmp	r3, r6
   4a220:	bne	4a23c <luaL_error@@Base+0x4150>
   4a224:	b	4a2a4 <luaL_error@@Base+0x41b8>
   4a228:	mov	r0, r4
   4a22c:	bl	468f0 <luaL_error@@Base+0x804>
   4a230:	ldr	r3, [r4, #4]
   4a234:	cmp	r3, r6
   4a238:	beq	4a200 <luaL_error@@Base+0x4114>
   4a23c:	ldr	r2, [r4, #60]	; 0x3c
   4a240:	cmp	r7, r2
   4a244:	beq	4a228 <luaL_error@@Base+0x413c>
   4a248:	str	r9, [r4, #60]	; 0x3c
   4a24c:	b	49e14 <luaL_error@@Base+0x3d28>
   4a250:	ldr	r3, [r4, #16]
   4a254:	ldr	r2, [pc, #176]	; 4a30c <luaL_error@@Base+0x4220>
   4a258:	ldr	r3, [r3, #8]
   4a25c:	cmp	r3, r2
   4a260:	beq	4a2ac <luaL_error@@Base+0x41c0>
   4a264:	ldr	r2, [pc, #164]	; 4a310 <luaL_error@@Base+0x4224>
   4a268:	cmp	r3, r2
   4a26c:	bne	4a2d0 <luaL_error@@Base+0x41e4>
   4a270:	ldrb	r3, [r4, #83]	; 0x53
   4a274:	cmp	r3, #0
   4a278:	subne	r3, r3, #1
   4a27c:	strbne	r3, [r4, #83]	; 0x53
   4a280:	mov	r0, r4
   4a284:	bl	468f0 <luaL_error@@Base+0x804>
   4a288:	ldr	r3, [r4, #4]
   4a28c:	cmp	r3, #44	; 0x2c
   4a290:	bne	4a1bc <luaL_error@@Base+0x40d0>
   4a294:	mov	r0, r4
   4a298:	bl	468f0 <luaL_error@@Base+0x804>
   4a29c:	ldr	r3, [r4, #4]
   4a2a0:	b	4a180 <luaL_error@@Base+0x4094>
   4a2a4:	str	r9, [r4, #60]	; 0x3c
   4a2a8:	b	49fbc <luaL_error@@Base+0x3ed0>
   4a2ac:	ldrb	r3, [r4, #83]	; 0x53
   4a2b0:	cmp	r3, #6
   4a2b4:	bhi	4a280 <luaL_error@@Base+0x4194>
   4a2b8:	add	r2, r4, r3
   4a2bc:	add	r3, r3, #1
   4a2c0:	ldrb	r1, [r2, #76]	; 0x4c
   4a2c4:	strb	r1, [r2, #77]	; 0x4d
   4a2c8:	strb	r3, [r4, #83]	; 0x53
   4a2cc:	b	4a280 <luaL_error@@Base+0x4194>
   4a2d0:	mov	r0, r4
   4a2d4:	ldr	r2, [pc, #32]	; 4a2fc <luaL_error@@Base+0x4210>
   4a2d8:	mov	r1, #256	; 0x100
   4a2dc:	bl	4611c <luaL_error@@Base+0x30>
   4a2e0:	mov	r1, fp
   4a2e4:	mov	r0, r4
   4a2e8:	bl	4626c <luaL_error@@Base+0x180>
   4a2ec:	blx	1002c1a <__bss_end__@@Base+0xf7e9a2>
   4a2f0:	andeq	r0, r0, r3, lsl #2
   4a2f4:	andhi	r0, r4, r0
   4a2f8:	andeq	r0, r0, r2, lsl #2
   4a2fc:	muleq	r0, r8, sl
   4a300:	ldmdane	sl!, {r3, r7, r8, r9, fp, sp, pc}^
   4a304:			; <UNDEFINED> instruction: 0xf5e6b4f8
   4a308:			; <UNDEFINED> instruction: 0xe79b999f
   4a30c:	orrvc	r9, lr, #60, 4	; 0xc0000003
   4a310:	ldclvs	15, cr12, [r1], #-156	; 0xffffff64
   4a314:	push	{r4, lr}
   4a318:	sub	sp, sp, #1648	; 0x670
   4a31c:	sub	sp, sp, #8
   4a320:	mov	r4, r0
   4a324:	mov	r2, #0
   4a328:	add	r1, sp, #4
   4a32c:	bl	48bec <luaL_error@@Base+0x2b00>
   4a330:	mov	r3, #2
   4a334:	add	r1, sp, #4
   4a338:	mov	r0, r4
   4a33c:	str	r3, [sp, #16]
   4a340:	bl	4944c <luaL_error@@Base+0x3360>
   4a344:	add	r1, sp, #4
   4a348:	mov	r0, r4
   4a34c:	bl	46544 <luaL_error@@Base+0x458>
   4a350:	add	sp, sp, #1648	; 0x670
   4a354:	add	sp, sp, #8
   4a358:	pop	{r4, pc}
   4a35c:	push	{r4, lr}
   4a360:	sub	sp, sp, #1648	; 0x670
   4a364:	sub	sp, sp, #8
   4a368:	mov	r4, r0
   4a36c:	mov	r2, #0
   4a370:	add	r1, sp, #4
   4a374:	bl	48bec <luaL_error@@Base+0x2b00>
   4a378:	add	r1, sp, #4
   4a37c:	mov	r0, r4
   4a380:	bl	4944c <luaL_error@@Base+0x3360>
   4a384:	add	r1, sp, #4
   4a388:	mov	r0, r4
   4a38c:	bl	46544 <luaL_error@@Base+0x458>
   4a390:	ldr	r3, [r4, #4]
   4a394:	ldr	r1, [pc, #28]	; 4a3b8 <luaL_error@@Base+0x42cc>
   4a398:	cmp	r3, r1
   4a39c:	str	r0, [r4, #12]
   4a3a0:	bne	4a3b0 <luaL_error@@Base+0x42c4>
   4a3a4:	add	sp, sp, #1648	; 0x670
   4a3a8:	add	sp, sp, #8
   4a3ac:	pop	{r4, pc}
   4a3b0:	mov	r0, r4
   4a3b4:	bl	4626c <luaL_error@@Base+0x180>
   4a3b8:	andeq	r0, r0, r3, lsl #2
   4a3bc:	push	{r4, lr}
   4a3c0:	mov	r4, r2
   4a3c4:	ldr	r1, [r0, #40]	; 0x28
   4a3c8:	ldr	r2, [r2, #24]
   4a3cc:	mvn	r3, #0
   4a3d0:	ldr	r0, [r4, #44]	; 0x2c
   4a3d4:	mov	ip, #1
   4a3d8:	str	r3, [r1, #24]
   4a3dc:	strb	r3, [r4, #76]	; 0x4c
   4a3e0:	add	r1, r2, ip
   4a3e4:	mov	r3, #0
   4a3e8:	str	ip, [r4, #60]	; 0x3c
   4a3ec:	str	r0, [r4, #40]	; 0x28
   4a3f0:	str	r1, [r4, #24]
   4a3f4:	str	r3, [r4, #64]	; 0x40
   4a3f8:	strb	r3, [r4, #83]	; 0x53
   4a3fc:	str	r3, [r4, #28]
   4a400:	str	r3, [r4, #32]
   4a404:	str	r3, [r4, #36]	; 0x24
   4a408:	ldrb	r3, [r2]
   4a40c:	cmp	r3, #92	; 0x5c
   4a410:	str	r3, [r4]
   4a414:	beq	4a470 <luaL_error@@Base+0x4384>
   4a418:	mov	r3, #14528	; 0x38c0
   4a41c:	mov	r2, #0
   4a420:	str	r3, [r4, #68]	; 0x44
   4a424:	str	r2, [r4, #4]
   4a428:	mov	r0, r4
   4a42c:	bl	468f0 <luaL_error@@Base+0x804>
   4a430:	ldr	r3, [r4, #72]	; 0x48
   4a434:	mov	r0, r4
   4a438:	tst	r3, #1
   4a43c:	beq	4a468 <luaL_error@@Base+0x437c>
   4a440:	bl	49df8 <luaL_error@@Base+0x3d0c>
   4a444:	ldr	r3, [r4, #52]	; 0x34
   4a448:	cmp	r3, #0
   4a44c:	beq	4a460 <luaL_error@@Base+0x4374>
   4a450:	ldr	r2, [r4, #44]	; 0x2c
   4a454:	ldr	r2, [r2, #20]
   4a458:	cmp	r3, r2
   4a45c:	bne	4a47c <luaL_error@@Base+0x4390>
   4a460:	mov	r0, #0
   4a464:	pop	{r4, pc}
   4a468:	bl	4a35c <luaL_error@@Base+0x4270>
   4a46c:	b	4a444 <luaL_error@@Base+0x4358>
   4a470:	mov	r0, r4
   4a474:	bl	1741c <_start@@Base+0x406c>
   4a478:	b	4a418 <luaL_error@@Base+0x432c>
   4a47c:	mov	r0, r4
   4a480:	mov	r1, #3136	; 0xc40
   4a484:	bl	46298 <luaL_error@@Base+0x1ac>
   4a488:	push	{r4, r5, r6, lr}
   4a48c:	mov	r4, r0
   4a490:	mov	r5, r1
   4a494:	mov	r1, r5
   4a498:	mov	r0, r4
   4a49c:	bl	476d0 <luaL_error@@Base+0x15e4>
   4a4a0:	mov	r0, r4
   4a4a4:	mov	r2, #0
   4a4a8:	mov	r1, r5
   4a4ac:	bl	47c44 <luaL_error@@Base+0x1b58>
   4a4b0:	ldr	r3, [r4, #4]
   4a4b4:	mov	r0, r4
   4a4b8:	cmp	r3, #44	; 0x2c
   4a4bc:	popne	{r4, r5, r6, pc}
   4a4c0:	bl	468f0 <luaL_error@@Base+0x804>
   4a4c4:	b	4a494 <luaL_error@@Base+0x43a8>
   4a4c8:	ldr	r3, [r0, #4]
   4a4cc:	push	{r4, r5, r6, lr}
   4a4d0:	cmp	r3, #40	; 0x28
   4a4d4:	sub	sp, sp, #8
   4a4d8:	mov	r5, r0
   4a4dc:	mov	r6, r2
   4a4e0:	mov	r4, r1
   4a4e4:	beq	4a54c <luaL_error@@Base+0x4460>
   4a4e8:	bl	476d0 <luaL_error@@Base+0x15e4>
   4a4ec:	ldr	r3, [r5, #48]	; 0x30
   4a4f0:	add	r2, sp, #4
   4a4f4:	ldr	r1, [r4, #4]
   4a4f8:	ldr	r0, [r3]
   4a4fc:	bl	1b78c <_start@@Base+0x83dc>
   4a500:	cmp	r6, #0
   4a504:	beq	4a528 <luaL_error@@Base+0x443c>
   4a508:	ldr	r3, [sp, #4]
   4a50c:	cmn	r3, #1
   4a510:	strne	r3, [r4]
   4a514:	beq	4a590 <luaL_error@@Base+0x44a4>
   4a518:	mov	r3, #10
   4a51c:	str	r3, [r4, #4]
   4a520:	add	sp, sp, #8
   4a524:	pop	{r4, r5, r6, pc}
   4a528:	lsr	r0, r0, #16
   4a52c:	mov	r3, #1
   4a530:	and	r0, r0, #15
   4a534:	lsl	r0, r3, r0
   4a538:	mov	r3, #10
   4a53c:	str	r0, [r4]
   4a540:	str	r3, [r4, #4]
   4a544:	add	sp, sp, #8
   4a548:	pop	{r4, r5, r6, pc}
   4a54c:	bl	468f0 <luaL_error@@Base+0x804>
   4a550:	ldr	r2, [r5, #4]
   4a554:	sub	r3, r2, #268	; 0x10c
   4a558:	sub	r3, r3, #1
   4a55c:	cmp	r3, #28
   4a560:	bls	4a574 <luaL_error@@Base+0x4488>
   4a564:	cmp	r2, #256	; 0x100
   4a568:	beq	4a5a8 <luaL_error@@Base+0x44bc>
   4a56c:	cmp	r2, #36	; 0x24
   4a570:	bne	4a5bc <luaL_error@@Base+0x44d0>
   4a574:	mov	r0, r5
   4a578:	bl	4a314 <luaL_error@@Base+0x4228>
   4a57c:	str	r0, [r4, #4]
   4a580:	mov	r1, #41	; 0x29
   4a584:	mov	r0, r5
   4a588:	bl	476b8 <luaL_error@@Base+0x15cc>
   4a58c:	b	4a4ec <luaL_error@@Base+0x4400>
   4a590:	ldr	r3, [r4, #4]
   4a594:	cmp	r3, #20
   4a598:	beq	4a518 <luaL_error@@Base+0x442c>
   4a59c:	mov	r0, r5
   4a5a0:	ldr	r1, [pc, #36]	; 4a5cc <luaL_error@@Base+0x44e0>
   4a5a4:	bl	46298 <luaL_error@@Base+0x1ac>
   4a5a8:	ldr	r3, [r5, #20]
   4a5ac:	ldr	r3, [r3]
   4a5b0:	lsr	r3, r3, #28
   4a5b4:	cmp	r3, #7
   4a5b8:	beq	4a574 <luaL_error@@Base+0x4488>
   4a5bc:	mov	r1, r4
   4a5c0:	mov	r0, r5
   4a5c4:	bl	4a488 <luaL_error@@Base+0x439c>
   4a5c8:	b	4a580 <luaL_error@@Base+0x4494>
   4a5cc:	andeq	r0, r0, pc, lsr #23
   4a5d0:	ldr	ip, [pc, #60]	; 4a614 <luaL_error@@Base+0x4528>
   4a5d4:	push	{r2, r3}
   4a5d8:	mov	r5, r1
   4a5dc:	push	{lr}		; (str lr, [sp, #-4]!)
   4a5e0:	sub	sp, sp, #12
   4a5e4:	ldr	ip, [ip]
   4a5e8:	ldr	r2, [sp, #16]
   4a5ec:	add	r3, sp, #20
   4a5f0:	add	r1, ip, r2
   4a5f4:	mov	r2, r3
   4a5f8:	mov	r4, r0
   4a5fc:	str	r3, [sp, #4]
   4a600:	bl	1fe24 <lua_getstack@@Base+0x16c>
   4a604:	mov	r1, r5
   4a608:	mov	r2, r0
   4a60c:	mov	r0, r4
   4a610:	bl	36104 <lua_error@@Base+0x764>
   4a614:	muleq	r8, ip, r1
   4a618:	push	{r1, r2, r3}
   4a61c:	mov	r4, r0
   4a620:	ldr	r2, [pc, #44]	; 4a654 <luaL_error@@Base+0x4568>
   4a624:	push	{lr}		; (str lr, [sp, #-4]!)
   4a628:	sub	sp, sp, #8
   4a62c:	ldr	ip, [r2]
   4a630:	ldr	r1, [sp, #12]
   4a634:	add	r3, sp, #16
   4a638:	add	r1, ip, r1
   4a63c:	mov	r2, r3
   4a640:	str	r3, [sp, #4]
   4a644:	bl	1fe24 <lua_getstack@@Base+0x16c>
   4a648:	mov	r1, r0
   4a64c:	mov	r0, r4
   4a650:	bl	359a8 <lua_error@@Base+0x8>
   4a654:	muleq	r8, ip, r1
   4a658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4a65c:	sub	sp, sp, #28
   4a660:	ldr	ip, [r1]
   4a664:	mov	r9, r3
   4a668:	ldr	r3, [sp, #68]	; 0x44
   4a66c:	cmn	ip, #-1073741823	; 0xc0000001
   4a670:	mov	r6, r1
   4a674:	mov	r5, r2
   4a678:	mov	sl, r0
   4a67c:	ldr	r4, [r1, #4]
   4a680:	ldm	r2, {r7, fp}
   4a684:	ldr	r8, [sp, #64]	; 0x40
   4a688:	str	r3, [sp, #12]
   4a68c:	bhi	4aa98 <luaL_error@@Base+0x49ac>
   4a690:	cmn	r7, #-1073741823	; 0xc0000001
   4a694:	bhi	4aa98 <luaL_error@@Base+0x49ac>
   4a698:	lsr	r2, ip, #26
   4a69c:	and	r0, r2, #7
   4a6a0:	ldr	r3, [pc, #1784]	; 4ada0 <luaL_error@@Base+0x4cb4>
   4a6a4:	ldr	lr, [pc, #1784]	; 4ada4 <luaL_error@@Base+0x4cb8>
   4a6a8:	cmp	r2, #7
   4a6ac:	lsr	r1, r7, #26
   4a6b0:	movls	r2, r3
   4a6b4:	movhi	r2, lr
   4a6b8:	lsl	r0, r0, #2
   4a6bc:	cmp	r1, #7
   4a6c0:	and	r1, r1, #7
   4a6c4:	movhi	r3, lr
   4a6c8:	lsr	r2, r2, r0
   4a6cc:	lsl	r1, r1, #2
   4a6d0:	lsl	r2, r2, #3
   4a6d4:	lsr	r3, r3, r1
   4a6d8:	and	r2, r2, #120	; 0x78
   4a6dc:	and	r3, r3, #15
   4a6e0:	add	r3, r3, r2
   4a6e4:	cmp	r3, #63	; 0x3f
   4a6e8:	ldrls	pc, [pc, r3, lsl #2]
   4a6ec:	b	4aa98 <luaL_error@@Base+0x49ac>
   4a6f0:	andeq	sl, r4, r4, ror fp
   4a6f4:	andeq	sl, r4, r8, asr #20
   4a6f8:	andeq	sl, r4, r0, lsl sl
   4a6fc:	muleq	r4, r8, sl
   4a700:	muleq	r4, r8, sl
   4a704:	muleq	r4, r8, sl
   4a708:	muleq	r4, r8, sl
   4a70c:	muleq	r4, r8, sl
   4a710:	andeq	sl, r4, r8, lsr #17
   4a714:	andeq	sl, r4, r8, lsr #17
   4a718:	andeq	sl, r4, ip, asr r8
   4a71c:	strdeq	sl, [r4], -ip
   4a720:	muleq	r4, r8, sl
   4a724:	andeq	sl, r4, ip, asr #19
   4a728:	andeq	sl, r4, r4, ror ip
   4a72c:	muleq	r4, r8, sl
   4a730:	andeq	sl, r4, r4, lsl r9
   4a734:	andeq	sl, r4, r4, lsl r9
   4a738:	andeq	sl, r4, r0, lsl #16
   4a73c:	strdeq	sl, [r4], -r0
   4a740:	muleq	r4, r8, sl
   4a744:	muleq	r4, r8, sl
   4a748:	muleq	r4, r8, sl
   4a74c:	muleq	r4, r8, sl
   4a750:	muleq	r4, r8, sl
   4a754:	strdeq	sl, [r4], -r4
   4a758:	andeq	sl, r4, r0, asr fp
   4a75c:	andeq	sl, r4, ip, lsl #24
   4a760:	muleq	r4, r8, sl
   4a764:	muleq	r4, r8, sl
   4a768:	muleq	r4, r8, sl
   4a76c:	muleq	r4, r8, sl
   4a770:	muleq	r4, r8, sl
   4a774:	andeq	sl, r4, r8, lsr #23
   4a778:	andeq	sl, r4, r8, lsr #23
   4a77c:	andeq	sl, r4, r8, lsr #23
   4a780:	andeq	sl, r4, r4, lsl #22
   4a784:	muleq	r4, r8, sl
   4a788:	muleq	r4, r8, sl
   4a78c:	muleq	r4, r8, sl
   4a790:	muleq	r4, r8, sl
   4a794:	andeq	sl, r4, ip, lsl #21
   4a798:	andeq	sl, r4, r8, asr #16
   4a79c:	muleq	r4, r8, sl
   4a7a0:	muleq	r4, r8, sl
   4a7a4:	andeq	sl, r4, r4, lsr fp
   4a7a8:	andeq	sl, r4, r0, lsl fp
   4a7ac:	andeq	sl, r4, r0, lsl fp
   4a7b0:	muleq	r4, r8, sl
   4a7b4:	muleq	r4, r8, sl
   4a7b8:	muleq	r4, r8, sl
   4a7bc:	muleq	r4, r8, sl
   4a7c0:	muleq	r4, r8, sl
   4a7c4:	muleq	r4, r8, sl
   4a7c8:	andeq	sl, r4, r4, asr #18
   4a7cc:	muleq	r4, r8, sl
   4a7d0:	muleq	r4, r8, sl
   4a7d4:	muleq	r4, r8, sl
   4a7d8:	muleq	r4, r8, sl
   4a7dc:	muleq	r4, r8, sl
   4a7e0:	muleq	r4, r8, sl
   4a7e4:	muleq	r4, r8, sl
   4a7e8:	muleq	r4, r8, sl
   4a7ec:	andeq	sl, r4, r4, lsl #23
   4a7f0:	uxth	r7, r7
   4a7f4:	ldr	r5, [sl]
   4a7f8:	add	r5, r5, r7, lsl #4
   4a7fc:	ldr	fp, [r5, #4]
   4a800:	cmp	r4, fp
   4a804:	beq	4a99c <luaL_error@@Base+0x48b0>
   4a808:	cmp	fp, #8
   4a80c:	vldreq	d7, [r8]
   4a810:	beq	4a824 <luaL_error@@Base+0x4738>
   4a814:	cmp	fp, #4
   4a818:	bne	4aa98 <luaL_error@@Base+0x49ac>
   4a81c:	vldr	s14, [r8]
   4a820:	vcvt.f64.f32	d7, s14
   4a824:	cmp	r4, #8
   4a828:	vstreq	d7, [r9]
   4a82c:	beq	4a840 <luaL_error@@Base+0x4754>
   4a830:	cmp	r4, #4
   4a834:	bne	4aa98 <luaL_error@@Base+0x49ac>
   4a838:	vcvt.f32.f64	s14, d7
   4a83c:	vstr	s14, [r9]
   4a840:	add	sp, sp, #28
   4a844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4a848:	ldr	r3, [sp, #12]
   4a84c:	and	r3, r3, #3
   4a850:	cmp	r3, #3
   4a854:	bne	4aa98 <luaL_error@@Base+0x49ac>
   4a858:	mov	ip, #8388608	; 0x800000
   4a85c:	cmp	fp, #8
   4a860:	vldreq	d7, [r8]
   4a864:	beq	4a878 <luaL_error@@Base+0x478c>
   4a868:	cmp	fp, #4
   4a86c:	bne	4aa98 <luaL_error@@Base+0x49ac>
   4a870:	vldr	s14, [r8]
   4a874:	vcvt.f64.f32	d7, s14
   4a878:	cmp	r4, #3
   4a87c:	bls	4a9b4 <luaL_error@@Base+0x48c8>
   4a880:	cmp	r4, #4
   4a884:	beq	4acb0 <luaL_error@@Base+0x4bc4>
   4a888:	cmp	r4, #8
   4a88c:	bne	4aa98 <luaL_error@@Base+0x49ac>
   4a890:	tst	ip, #8388608	; 0x800000
   4a894:	vmov	r0, r1, d7
   4a898:	bne	4acd0 <luaL_error@@Base+0x4be4>
   4a89c:	bl	6e650 <luaL_openlibs@@Base+0x4e90>
   4a8a0:	strd	r0, [r9]
   4a8a4:	b	4a840 <luaL_error@@Base+0x4754>
   4a8a8:	cmp	r4, fp
   4a8ac:	bls	4a9e8 <luaL_error@@Base+0x48fc>
   4a8b0:	tst	r7, #8388608	; 0x800000
   4a8b4:	bne	4a9e0 <luaL_error@@Base+0x48f4>
   4a8b8:	add	r3, r8, fp
   4a8bc:	ldrsb	r3, [r3, #-1]
   4a8c0:	cmp	r3, #0
   4a8c4:	movge	r5, #0
   4a8c8:	movlt	r5, #255	; 0xff
   4a8cc:	mov	r1, r8
   4a8d0:	mov	r2, fp
   4a8d4:	mov	r0, r9
   4a8d8:	bl	12cb8 <memcpy@plt>
   4a8dc:	sub	r2, r4, fp
   4a8e0:	mov	r1, r5
   4a8e4:	add	r0, r9, fp
   4a8e8:	bl	12ed4 <memset@plt>
   4a8ec:	add	sp, sp, #28
   4a8f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4a8f4:	uxth	ip, ip
   4a8f8:	ldr	r6, [sl]
   4a8fc:	mov	r1, #0
   4a900:	add	r6, r6, ip, lsl #4
   4a904:	ldr	r4, [r6, #4]
   4a908:	mov	r2, r4
   4a90c:	add	r0, r9, r4
   4a910:	bl	12ed4 <memset@plt>
   4a914:	cmp	fp, #3
   4a918:	bls	4ac90 <luaL_error@@Base+0x4ba4>
   4a91c:	cmp	fp, #4
   4a920:	beq	4ad08 <luaL_error@@Base+0x4c1c>
   4a924:	cmp	fp, #8
   4a928:	bne	4aa98 <luaL_error@@Base+0x49ac>
   4a92c:	tst	r7, #8388608	; 0x800000
   4a930:	ldrd	r0, [r8]
   4a934:	bne	4ad20 <luaL_error@@Base+0x4c34>
   4a938:	bl	6e238 <luaL_openlibs@@Base+0x4a78>
   4a93c:	vmov	d7, r0, r1
   4a940:	b	4a824 <luaL_error@@Base+0x4738>
   4a944:	ldr	r2, [sp, #12]
   4a948:	tst	r2, #1
   4a94c:	bne	4aa98 <luaL_error@@Base+0x49ac>
   4a950:	lsr	ip, ip, #20
   4a954:	and	ip, ip, #1
   4a958:	cmp	r4, fp
   4a95c:	moveq	fp, ip
   4a960:	orrne	fp, ip, #1
   4a964:	cmn	r4, #1
   4a968:	movne	r3, #0
   4a96c:	moveq	r3, #1
   4a970:	orrs	r3, r3, fp
   4a974:	bne	4aa98 <luaL_error@@Base+0x49ac>
   4a978:	cmp	r6, r5
   4a97c:	beq	4a99c <luaL_error@@Base+0x48b0>
   4a980:	mov	r3, r2
   4a984:	mov	r1, r6
   4a988:	mov	r2, r5
   4a98c:	mov	r0, sl
   4a990:	bl	1ba9c <_start@@Base+0x86ec>
   4a994:	cmp	r0, #0
   4a998:	beq	4aa98 <luaL_error@@Base+0x49ac>
   4a99c:	mov	r2, r4
   4a9a0:	mov	r1, r8
   4a9a4:	mov	r0, r9
   4a9a8:	add	sp, sp, #28
   4a9ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4a9b0:	b	12cb8 <memcpy@plt>
   4a9b4:	vcvt.s32.f64	s15, d7
   4a9b8:	cmp	r4, #2
   4a9bc:	vmov	r3, s15
   4a9c0:	beq	4acc8 <luaL_error@@Base+0x4bdc>
   4a9c4:	strb	r3, [r9]
   4a9c8:	b	4a840 <luaL_error@@Base+0x4754>
   4a9cc:	ldr	r3, [sp, #12]
   4a9d0:	tst	r3, #1
   4a9d4:	beq	4aa98 <luaL_error@@Base+0x49ac>
   4a9d8:	cmp	r4, fp
   4a9dc:	bls	4a9e8 <luaL_error@@Base+0x48fc>
   4a9e0:	mov	r5, #0
   4a9e4:	b	4a8cc <luaL_error@@Base+0x47e0>
   4a9e8:	mov	r2, r4
   4a9ec:	mov	r1, r8
   4a9f0:	mov	r0, r9
   4a9f4:	bl	12cb8 <memcpy@plt>
   4a9f8:	b	4a840 <luaL_error@@Base+0x4754>
   4a9fc:	uxth	r7, r7
   4aa00:	ldr	r5, [sl]
   4aa04:	add	r5, r5, r7, lsl #4
   4aa08:	ldr	fp, [r5, #4]
   4aa0c:	b	4a85c <luaL_error@@Base+0x4770>
   4aa10:	cmp	fp, #8
   4aa14:	beq	4acf0 <luaL_error@@Base+0x4c04>
   4aa18:	cmp	fp, #4
   4aa1c:	bne	4aa98 <luaL_error@@Base+0x49ac>
   4aa20:	vldr	s15, [r8]
   4aa24:	vcmp.f32	s15, #0.0
   4aa28:	vmrs	APSR_nzcv, fpscr
   4aa2c:	movne	r3, #1
   4aa30:	moveq	r3, #0
   4aa34:	cmp	r4, #1
   4aa38:	beq	4a9c4 <luaL_error@@Base+0x48d8>
   4aa3c:	str	r3, [r9]
   4aa40:	add	sp, sp, #28
   4aa44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4aa48:	cmp	fp, #0
   4aa4c:	moveq	r3, fp
   4aa50:	beq	4aa7c <luaL_error@@Base+0x4990>
   4aa54:	sub	r8, r8, #1
   4aa58:	add	fp, r8, fp
   4aa5c:	mov	r3, #0
   4aa60:	ldrb	r2, [r8, #1]!
   4aa64:	cmp	r8, fp
   4aa68:	orr	r3, r3, r2
   4aa6c:	bne	4aa60 <luaL_error@@Base+0x4974>
   4aa70:	adds	r3, r3, #0
   4aa74:	movne	r3, #1
   4aa78:	mov	fp, r3
   4aa7c:	cmp	r4, #1
   4aa80:	strbeq	fp, [r9]
   4aa84:	bne	4aa3c <luaL_error@@Base+0x4950>
   4aa88:	b	4a840 <luaL_error@@Base+0x4754>
   4aa8c:	ldr	r3, [sp, #12]
   4aa90:	tst	r3, #1
   4aa94:	bne	4a8a8 <luaL_error@@Base+0x47bc>
   4aa98:	ldr	r1, [sl]
   4aa9c:	ldr	r0, [sl, #12]
   4aaa0:	sub	r1, r6, r1
   4aaa4:	asr	r1, r1, #4
   4aaa8:	bl	3cfec <luaL_typerror@@Base+0x6c80>
   4aaac:	ldr	r3, [sp, #12]
   4aab0:	tst	r3, #2
   4aab4:	add	r4, r0, #16
   4aab8:	beq	4ad84 <luaL_error@@Base+0x4c98>
   4aabc:	ldr	r2, [r5]
   4aac0:	lsrs	r2, r2, #28
   4aac4:	moveq	r3, #4
   4aac8:	beq	4aad8 <luaL_error@@Base+0x49ec>
   4aacc:	cmp	r2, #3
   4aad0:	movne	r3, #1
   4aad4:	moveq	r3, #5
   4aad8:	ldr	r2, [pc, #712]	; 4ada8 <luaL_error@@Base+0x4cbc>
   4aadc:	add	r2, r2, r3, lsl #2
   4aae0:	ldr	r2, [r2, #-160]	; 0xffffff60
   4aae4:	ldr	r3, [sp, #12]
   4aae8:	ldr	r0, [sl, #12]
   4aaec:	lsrs	r1, r3, #8
   4aaf0:	beq	4ad78 <luaL_error@@Base+0x4c8c>
   4aaf4:	mov	r3, r2
   4aaf8:	str	r4, [sp]
   4aafc:	ldr	r2, [pc, #680]	; 4adac <luaL_error@@Base+0x4cc0>
   4ab00:	bl	4a5d0 <luaL_error@@Base+0x44e4>
   4ab04:	cmp	r4, fp
   4ab08:	beq	4a99c <luaL_error@@Base+0x48b0>
   4ab0c:	b	4aa98 <luaL_error@@Base+0x49ac>
   4ab10:	ldr	r3, [sp, #12]
   4ab14:	mvn	r3, r3
   4ab18:	cmp	r6, r5
   4ab1c:	moveq	r3, #0
   4ab20:	andne	r3, r3, #1
   4ab24:	cmp	r3, #0
   4ab28:	bne	4ad2c <luaL_error@@Base+0x4c40>
   4ab2c:	str	r8, [r9]
   4ab30:	b	4a840 <luaL_error@@Base+0x4754>
   4ab34:	subs	r3, r6, r5
   4ab38:	ldr	r2, [sp, #12]
   4ab3c:	movne	r3, #1
   4ab40:	bics	r3, r3, r2
   4ab44:	bne	4ad4c <luaL_error@@Base+0x4c60>
   4ab48:	ldr	r3, [r8]
   4ab4c:	b	4aa3c <luaL_error@@Base+0x4950>
   4ab50:	uxth	ip, ip
   4ab54:	ldr	r6, [sl]
   4ab58:	mov	r1, #0
   4ab5c:	add	r6, r6, ip, lsl #4
   4ab60:	ldr	r4, [r6, #4]
   4ab64:	mov	r2, r4
   4ab68:	add	r0, r9, r4
   4ab6c:	bl	12ed4 <memset@plt>
   4ab70:	b	4a800 <luaL_error@@Base+0x4714>
   4ab74:	cmp	r4, #1
   4ab78:	ldrb	r3, [r8]
   4ab7c:	bne	4aa3c <luaL_error@@Base+0x4950>
   4ab80:	b	4a9c4 <luaL_error@@Base+0x48d8>
   4ab84:	ldr	r3, [sp, #12]
   4ab88:	tst	r3, #1
   4ab8c:	bne	4aa98 <luaL_error@@Base+0x49ac>
   4ab90:	lsr	ip, ip, #20
   4ab94:	cmp	r6, r5
   4ab98:	orrne	ip, ip, #1
   4ab9c:	tst	ip, #1
   4aba0:	beq	4a99c <luaL_error@@Base+0x48b0>
   4aba4:	b	4aa98 <luaL_error@@Base+0x49ac>
   4aba8:	ldr	r6, [sl]
   4abac:	uxth	ip, ip
   4abb0:	ldr	r3, [sp, #12]
   4abb4:	add	r6, r6, ip, lsl #4
   4abb8:	str	r3, [sp, #4]
   4abbc:	mov	r2, r5
   4abc0:	str	r8, [sp]
   4abc4:	mov	r0, sl
   4abc8:	mov	r1, r6
   4abcc:	mov	r3, r9
   4abd0:	bl	4a658 <luaL_error@@Base+0x456c>
   4abd4:	ldr	r5, [r6, #4]
   4abd8:	cmp	r4, r5
   4abdc:	bls	4a840 <luaL_error@@Base+0x4754>
   4abe0:	mov	r3, r9
   4abe4:	add	r3, r3, r5
   4abe8:	mov	r0, r3
   4abec:	mov	r2, r5
   4abf0:	mov	r1, r9
   4abf4:	bl	12cb8 <memcpy@plt>
   4abf8:	sub	r4, r4, r5
   4abfc:	cmp	r5, r4
   4ac00:	mov	r3, r0
   4ac04:	bcc	4abe4 <luaL_error@@Base+0x4af8>
   4ac08:	b	4a840 <luaL_error@@Base+0x4754>
   4ac0c:	cmp	r4, fp
   4ac10:	beq	4a99c <luaL_error@@Base+0x48b0>
   4ac14:	ldr	r4, [sl]
   4ac18:	uxth	ip, ip
   4ac1c:	uxth	r7, r7
   4ac20:	ldr	r6, [sp, #12]
   4ac24:	add	r5, r4, ip, lsl #4
   4ac28:	add	r4, r4, r7, lsl #4
   4ac2c:	str	r8, [sp]
   4ac30:	mov	r2, r4
   4ac34:	mov	r1, r5
   4ac38:	mov	r3, r9
   4ac3c:	mov	r0, sl
   4ac40:	str	r6, [sp, #4]
   4ac44:	bl	4a658 <luaL_error@@Base+0x456c>
   4ac48:	ldr	r3, [r5, #4]
   4ac4c:	str	r6, [sp, #4]
   4ac50:	ldr	r2, [r4, #4]
   4ac54:	mov	r0, sl
   4ac58:	add	r8, r8, r2
   4ac5c:	add	r3, r9, r3
   4ac60:	mov	r1, r5
   4ac64:	str	r8, [sp]
   4ac68:	mov	r2, r4
   4ac6c:	bl	4a658 <luaL_error@@Base+0x456c>
   4ac70:	b	4a840 <luaL_error@@Base+0x4754>
   4ac74:	ldr	r3, [sp, #12]
   4ac78:	tst	r3, #1
   4ac7c:	beq	4aa98 <luaL_error@@Base+0x49ac>
   4ac80:	str	r8, [sp, #20]
   4ac84:	mov	fp, #4
   4ac88:	add	r8, sp, #20
   4ac8c:	b	4a9d8 <luaL_error@@Base+0x48ec>
   4ac90:	tst	r7, #8388608	; 0x800000
   4ac94:	bne	4acdc <luaL_error@@Base+0x4bf0>
   4ac98:	cmp	fp, #2
   4ac9c:	ldrsheq	r3, [r8]
   4aca0:	ldrsbne	r3, [r8]
   4aca4:	vmov	s14, r3
   4aca8:	vcvt.f64.s32	d7, s14
   4acac:	b	4a824 <luaL_error@@Base+0x4738>
   4acb0:	tst	ip, #8388608	; 0x800000
   4acb4:	vcvteq.s32.f64	s14, d7
   4acb8:	vstreq	s14, [r9]
   4acbc:	vcvtne.u32.f64	s14, d7
   4acc0:	vstrne	s14, [r9]
   4acc4:	b	4a840 <luaL_error@@Base+0x4754>
   4acc8:	strh	r3, [r9]
   4accc:	b	4a840 <luaL_error@@Base+0x4754>
   4acd0:	bl	6e6d0 <luaL_openlibs@@Base+0x4f10>
   4acd4:	strd	r0, [r9]
   4acd8:	b	4a840 <luaL_error@@Base+0x4754>
   4acdc:	cmp	fp, #2
   4ace0:	ldrbne	r3, [r8]
   4ace4:	beq	4ad6c <luaL_error@@Base+0x4c80>
   4ace8:	vmov	s14, r3
   4acec:	b	4aca8 <luaL_error@@Base+0x4bbc>
   4acf0:	vldr	d7, [r8]
   4acf4:	vcmp.f64	d7, #0.0
   4acf8:	vmrs	APSR_nzcv, fpscr
   4acfc:	movne	r3, #1
   4ad00:	moveq	r3, #0
   4ad04:	b	4aa34 <luaL_error@@Base+0x4948>
   4ad08:	ldr	r3, [r8]
   4ad0c:	tst	r7, #8388608	; 0x800000
   4ad10:	vmovne	s15, r3
   4ad14:	vcvtne.f64.u32	d7, s15
   4ad18:	bne	4a824 <luaL_error@@Base+0x4738>
   4ad1c:	b	4ace8 <luaL_error@@Base+0x4bfc>
   4ad20:	bl	6e224 <luaL_openlibs@@Base+0x4a64>
   4ad24:	vmov	d7, r0, r1
   4ad28:	b	4a824 <luaL_error@@Base+0x4738>
   4ad2c:	ldr	r3, [sp, #12]
   4ad30:	mov	r2, r5
   4ad34:	mov	r1, r6
   4ad38:	mov	r0, sl
   4ad3c:	bl	1ba9c <_start@@Base+0x86ec>
   4ad40:	cmp	r0, #0
   4ad44:	bne	4ab2c <luaL_error@@Base+0x4a40>
   4ad48:	b	4aa98 <luaL_error@@Base+0x49ac>
   4ad4c:	ldr	r3, [sp, #12]
   4ad50:	mov	r2, r5
   4ad54:	mov	r1, r6
   4ad58:	mov	r0, sl
   4ad5c:	bl	1ba9c <_start@@Base+0x86ec>
   4ad60:	cmp	r0, #0
   4ad64:	bne	4ab48 <luaL_error@@Base+0x4a5c>
   4ad68:	b	4aa98 <luaL_error@@Base+0x49ac>
   4ad6c:	ldrh	r3, [r8]
   4ad70:	vmov	s14, r3
   4ad74:	b	4aca8 <luaL_error@@Base+0x4bbc>
   4ad78:	mov	r3, r4
   4ad7c:	ldr	r1, [pc, #40]	; 4adac <luaL_error@@Base+0x4cc0>
   4ad80:	bl	4a618 <luaL_error@@Base+0x452c>
   4ad84:	ldr	r1, [sl]
   4ad88:	ldr	r0, [sl, #12]
   4ad8c:	sub	r1, r5, r1
   4ad90:	asr	r1, r1, #4
   4ad94:	bl	3cfec <luaL_typerror@@Base+0x6c80>
   4ad98:	add	r2, r0, #16
   4ad9c:	b	4aae4 <luaL_error@@Base+0x49f8>
   4ada0:			; <UNDEFINED> instruction: 0xfff7f021
   4ada4:			; <UNDEFINED> instruction: 0xf436fff5
   4ada8:			; <UNDEFINED> instruction: 0x00070cb0
   4adac:	andeq	r0, r0, pc, ror ip
   4adb0:	push	{r4, r5, r6, r7, r8, lr}
   4adb4:	sub	r7, r1, #-536870911	; 0xe0000001
   4adb8:	ldr	r6, [r0, #16]
   4adbc:	ldr	r3, [r0, #20]
   4adc0:	add	r4, r6, r7, lsl #3
   4adc4:	cmp	r3, r4
   4adc8:	sub	sp, sp, #16
   4adcc:	mov	r5, r0
   4add0:	mov	r8, r1
   4add4:	bls	4af34 <luaL_error@@Base+0x4e48>
   4add8:	ldr	r3, [r4, #4]
   4addc:	cmn	r3, #14
   4ade0:	bhi	4adfc <luaL_error@@Base+0x4d10>
   4ade4:	cmn	r3, #14
   4ade8:	bne	4ae40 <luaL_error@@Base+0x4d54>
   4adec:	ldr	r0, [r6, r7, lsl #3]
   4adf0:	mov	r1, #0
   4adf4:	add	sp, sp, #16
   4adf8:	pop	{r4, r5, r6, r7, r8, pc}
   4adfc:	cmn	r3, #11
   4ae00:	beq	4ae64 <luaL_error@@Base+0x4d78>
   4ae04:	cmn	r3, #5
   4ae08:	bne	4af34 <luaL_error@@Base+0x4e48>
   4ae0c:	ldr	r0, [r6, r7, lsl #3]
   4ae10:	mov	r2, #1
   4ae14:	add	r0, r0, #16
   4ae18:	mov	r1, r4
   4ae1c:	bl	189f0 <_start@@Base+0x5640>
   4ae20:	cmp	r0, #3
   4ae24:	mvneq	r3, #13
   4ae28:	streq	r3, [r4, #4]
   4ae2c:	beq	4adec <luaL_error@@Base+0x4d00>
   4ae30:	cmp	r0, #0
   4ae34:	beq	4af34 <luaL_error@@Base+0x4e48>
   4ae38:	ldr	r3, [r4, #4]
   4ae3c:	b	4ade4 <luaL_error@@Base+0x4cf8>
   4ae40:	vldr	d7, [r4]
   4ae44:	vldr	d6, [pc, #252]	; 4af48 <luaL_error@@Base+0x4e5c>
   4ae48:	mvn	r3, #13
   4ae4c:	mov	r1, #0
   4ae50:	vadd.f64	d7, d7, d6
   4ae54:	vmov	r0, s14
   4ae58:	str	r0, [r6, r7, lsl #3]
   4ae5c:	str	r3, [r4, #4]
   4ae60:	b	4adf4 <luaL_error@@Base+0x4d08>
   4ae64:	ldr	r3, [r0, #8]
   4ae68:	ldr	r4, [r6, r7, lsl #3]
   4ae6c:	ldr	lr, [pc, #220]	; 4af50 <luaL_error@@Base+0x4e64>
   4ae70:	ldr	r0, [r3, #228]	; 0xe4
   4ae74:	ldrh	r3, [r4, #6]
   4ae78:	ldr	r1, [r0]
   4ae7c:	str	r5, [r0, #12]
   4ae80:	add	ip, r1, r3, lsl #4
   4ae84:	ldr	r3, [r1, r3, lsl #4]
   4ae88:	and	lr, lr, r3
   4ae8c:	cmp	lr, #545259520	; 0x20800000
   4ae90:	addne	r4, r4, #8
   4ae94:	bne	4aea4 <luaL_error@@Base+0x4db8>
   4ae98:	b	4af0c <luaL_error@@Base+0x4e20>
   4ae9c:	ldr	r3, [r1, ip, lsl #4]
   4aea0:	add	ip, r1, ip, lsl #4
   4aea4:	lsr	lr, r3, #28
   4aea8:	cmp	lr, #8
   4aeac:	uxtheq	ip, r3
   4aeb0:	beq	4ae9c <luaL_error@@Base+0x4db0>
   4aeb4:	cmp	lr, #5
   4aeb8:	uxtheq	r3, r3
   4aebc:	addeq	ip, r1, r3, lsl #4
   4aec0:	ldr	r3, [pc, #140]	; 4af54 <luaL_error@@Base+0x4e68>
   4aec4:	ldr	lr, [ip]
   4aec8:	and	r3, r3, lr
   4aecc:	cmp	r3, #8388608	; 0x800000
   4aed0:	beq	4af18 <luaL_error@@Base+0x4e2c>
   4aed4:	ldr	r3, [r2]
   4aed8:	cmp	r3, #0
   4aedc:	lslne	r3, r3, #4
   4aee0:	moveq	r3, #176	; 0xb0
   4aee4:	moveq	lr, #11
   4aee8:	streq	lr, [r2]
   4aeec:	lsl	r8, r8, #8
   4aef0:	add	r1, r1, r3
   4aef4:	stm	sp, {r4, r8}
   4aef8:	mov	r2, ip
   4aefc:	add	r3, sp, #8
   4af00:	bl	4a658 <luaL_error@@Base+0x456c>
   4af04:	ldrd	r0, [sp, #8]
   4af08:	b	4adf4 <luaL_error@@Base+0x4d08>
   4af0c:	uxth	ip, r3
   4af10:	ldr	r4, [r4, #8]
   4af14:	b	4ae9c <luaL_error@@Base+0x4db0>
   4af18:	ldr	r3, [ip, #4]
   4af1c:	cmp	r3, #8
   4af20:	moveq	r3, #12
   4af24:	streq	r3, [r2]
   4af28:	moveq	r3, #192	; 0xc0
   4af2c:	bne	4aed4 <luaL_error@@Base+0x4de8>
   4af30:	b	4aeec <luaL_error@@Base+0x4e00>
   4af34:	mov	r1, r8
   4af38:	mov	r0, r5
   4af3c:	mov	r2, #3
   4af40:	bl	36374 <luaL_typerror@@Base+0x8>
   4af44:	nop			; (mov r0, r0)
   4af48:	andeq	r0, r0, r0
   4af4c:	teqmi	r8, #0
   4af50:			; <UNDEFINED> instruction: 0xf0800000
   4af54:	stc2	0, cr0, [r0], {0}
   4af58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4af5c:	sub	sp, sp, #20
   4af60:	mov	r8, r1
   4af64:	mov	r4, r0
   4af68:	bl	2b54c <luaL_where@@Base+0xb448>
   4af6c:	ldr	r6, [r8]
   4af70:	ldr	r9, [r4, #-156]	; 0xffffff64
   4af74:	ldr	r3, [r6, #4]
   4af78:	cmn	r3, #11
   4af7c:	mov	r5, r0
   4af80:	beq	4b11c <luaL_error@@Base+0x5030>
   4af84:	ldr	r3, [r4, #96]	; 0x60
   4af88:	ldr	r7, [r3, #4]
   4af8c:	cmp	r7, #0
   4af90:	ldreq	r1, [r3]
   4af94:	bne	4b01c <luaL_error@@Base+0x4f30>
   4af98:	mov	r0, r4
   4af9c:	bl	2a5b4 <luaL_where@@Base+0xa4b0>
   4afa0:	ldr	r7, [pc, #576]	; 4b1e8 <luaL_error@@Base+0x50fc>
   4afa4:	mov	r8, r0
   4afa8:	ldr	r3, [pc, #572]	; 4b1ec <luaL_error@@Base+0x5100>
   4afac:	ldr	r2, [pc, #572]	; 4b1f0 <luaL_error@@Base+0x5104>
   4afb0:	strh	r8, [r4, #120]	; 0x78
   4afb4:	strh	r3, [r4, #122]	; 0x7a
   4afb8:	strh	r2, [r4, #124]	; 0x7c
   4afbc:	mov	r0, r4
   4afc0:	bl	27498 <luaL_where@@Base+0x7394>
   4afc4:	mov	r3, #1
   4afc8:	strb	r3, [r4, #268]	; 0x10c
   4afcc:	mov	r8, r0
   4afd0:	mov	r1, r7
   4afd4:	mov	r0, r4
   4afd8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   4afdc:	mov	r2, r5
   4afe0:	mov	r1, #10
   4afe4:	str	r8, [sp]
   4afe8:	mov	r3, r0
   4afec:	mov	r0, r4
   4aff0:	bl	27a00 <luaL_where@@Base+0x78fc>
   4aff4:	ldr	r3, [pc, #504]	; 4b1f4 <luaL_error@@Base+0x5108>
   4aff8:	strh	r5, [r4, #122]	; 0x7a
   4affc:	strh	r3, [r4, #124]	; 0x7c
   4b000:	ldr	r5, [r4, #96]	; 0x60
   4b004:	strh	r0, [r4, #120]	; 0x78
   4b008:	mov	r0, r4
   4b00c:	bl	27498 <luaL_where@@Base+0x7394>
   4b010:	str	r0, [r5]
   4b014:	add	sp, sp, #20
   4b018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b01c:	mov	sl, #0
   4b020:	add	r2, sp, #16
   4b024:	mov	fp, #0
   4b028:	str	fp, [r2, #-4]!
   4b02c:	mov	r1, #2
   4b030:	ldr	r0, [r4, #80]	; 0x50
   4b034:	bl	4adb0 <luaL_error@@Base+0x4cc4>
   4b038:	ldr	r3, [sp, #12]
   4b03c:	cmp	r3, fp
   4b040:	mov	r6, r0
   4b044:	bne	4b170 <luaL_error@@Base+0x5084>
   4b048:	mov	r1, r7
   4b04c:	mov	r0, r4
   4b050:	bl	2a5b4 <luaL_where@@Base+0xa4b0>
   4b054:	mov	r7, r0
   4b058:	mov	r1, r6
   4b05c:	mov	r0, r4
   4b060:	bl	26ccc <luaL_where@@Base+0x6bc8>
   4b064:	ldr	r3, [pc, #396]	; 4b1f8 <luaL_error@@Base+0x510c>
   4b068:	strh	r7, [r4, #120]	; 0x78
   4b06c:	strh	r3, [r4, #124]	; 0x7c
   4b070:	strh	r0, [r4, #122]	; 0x7a
   4b074:	mov	r0, r4
   4b078:	bl	27498 <luaL_where@@Base+0x7394>
   4b07c:	cmp	r6, #0
   4b080:	movge	r2, #20
   4b084:	ldrlt	r2, [pc, #368]	; 4b1fc <luaL_error@@Base+0x5110>
   4b088:	rsblt	r6, r6, #0
   4b08c:	ldr	r3, [r4, #96]	; 0x60
   4b090:	add	r7, r6, #1
   4b094:	cmp	sl, #0
   4b098:	ldr	r3, [r3]
   4b09c:	orr	r7, r2, r7, lsl #24
   4b0a0:	beq	4b19c <luaL_error@@Base+0x50b0>
   4b0a4:	ldr	r2, [r8]
   4b0a8:	ldr	r1, [r9]
   4b0ac:	mov	r0, r4
   4b0b0:	str	r2, [sp]
   4b0b4:	add	r1, r1, sl, lsl #4
   4b0b8:	mov	r2, #0
   4b0bc:	bl	41160 <luaL_typerror@@Base+0xadf4>
   4b0c0:	cmp	r6, #15
   4b0c4:	mov	r8, r0
   4b0c8:	bgt	4afd0 <luaL_error@@Base+0x4ee4>
   4b0cc:	lsl	r6, r6, #2
   4b0d0:	mov	r0, #1
   4b0d4:	sub	r1, r6, #32
   4b0d8:	rsb	ip, r6, #32
   4b0dc:	lsl	fp, r0, r1
   4b0e0:	lsl	sl, r0, r6
   4b0e4:	orr	fp, fp, r0, lsr ip
   4b0e8:	subs	r2, sl, #1
   4b0ec:	sbc	r3, fp, #0
   4b0f0:	mov	r1, #29
   4b0f4:	mov	r0, r4
   4b0f8:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   4b0fc:	ldr	r3, [pc, #252]	; 4b200 <luaL_error@@Base+0x5114>
   4b100:	strh	r8, [r4, #120]	; 0x78
   4b104:	strh	r3, [r4, #124]	; 0x7c
   4b108:	strh	r0, [r4, #122]	; 0x7a
   4b10c:	mov	r0, r4
   4b110:	bl	27498 <luaL_where@@Base+0x7394>
   4b114:	mov	r8, r0
   4b118:	b	4afd0 <luaL_error@@Base+0x4ee4>
   4b11c:	mov	r1, r6
   4b120:	mov	r0, r9
   4b124:	bl	1c930 <_start@@Base+0x9580>
   4b128:	ldr	r3, [r4, #96]	; 0x60
   4b12c:	ldr	r7, [r3, #4]
   4b130:	cmp	r7, #0
   4b134:	mov	sl, r0
   4b138:	bne	4b020 <luaL_error@@Base+0x4f34>
   4b13c:	cmp	r0, #0
   4b140:	ldr	r1, [r3]
   4b144:	beq	4af98 <luaL_error@@Base+0x4eac>
   4b148:	ldr	r2, [r9]
   4b14c:	mov	r3, r1
   4b150:	str	r6, [sp]
   4b154:	add	r1, r2, r0, lsl #4
   4b158:	mov	r2, r7
   4b15c:	mov	r0, r4
   4b160:	bl	41160 <luaL_typerror@@Base+0xadf4>
   4b164:	ldr	r7, [pc, #152]	; 4b204 <luaL_error@@Base+0x5118>
   4b168:	mov	r8, r0
   4b16c:	b	4afd0 <luaL_error@@Base+0x4ee4>
   4b170:	ldr	r0, [r8]
   4b174:	ldr	r1, [r9]
   4b178:	add	r0, r0, #8
   4b17c:	mov	r3, r7
   4b180:	str	r0, [sp]
   4b184:	mov	r2, fp
   4b188:	add	r1, r1, #144	; 0x90
   4b18c:	mov	r0, r4
   4b190:	bl	41160 <luaL_typerror@@Base+0xadf4>
   4b194:	mov	r7, r0
   4b198:	b	4b058 <luaL_error@@Base+0x4f6c>
   4b19c:	mov	r1, r3
   4b1a0:	mov	r0, r4
   4b1a4:	bl	2a5b4 <luaL_where@@Base+0xa4b0>
   4b1a8:	cmp	r6, #7
   4b1ac:	mov	r8, r0
   4b1b0:	bgt	4afa8 <luaL_error@@Base+0x4ebc>
   4b1b4:	lsl	r6, r6, #2
   4b1b8:	mvn	r1, #0
   4b1bc:	mov	r0, r4
   4b1c0:	mvn	r1, r1, lsl r6
   4b1c4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   4b1c8:	ldr	r3, [pc, #56]	; 4b208 <luaL_error@@Base+0x511c>
   4b1cc:	strh	r8, [r4, #120]	; 0x78
   4b1d0:	strh	r3, [r4, #124]	; 0x7c
   4b1d4:	strh	r0, [r4, #122]	; 0x7a
   4b1d8:	mov	r0, r4
   4b1dc:	bl	27498 <luaL_where@@Base+0x7394>
   4b1e0:	mov	r8, r0
   4b1e4:	b	4afa8 <luaL_error@@Base+0x4ebc>
   4b1e8:	stmdbeq	r0, {r2, r4}
   4b1ec:	ldrdeq	r0, [r0], -r3
   4b1f0:	andeq	r5, r0, r6, lsl sl
   4b1f4:	andeq	r5, r0, r4, lsl #12
   4b1f8:	muleq	r0, r3, r8
   4b1fc:	andeq	r2, r0, r4, lsl r0
   4b200:	andeq	r2, r0, r6, lsl r1
   4b204:	tstne	r0, r4, lsl r0
   4b208:	andeq	r2, r0, r3, lsl r1
   4b20c:	push	{r4, r5, r6, r7, r8, r9, lr}
   4b210:	sub	sp, sp, #12
   4b214:	mov	r3, #0
   4b218:	mov	r2, sp
   4b21c:	mov	r1, #1
   4b220:	mov	r4, r0
   4b224:	str	r3, [sp]
   4b228:	str	r3, [sp, #4]
   4b22c:	bl	4adb0 <luaL_error@@Base+0x4cc4>
   4b230:	ldr	r3, [r4, #16]
   4b234:	ldr	r2, [r4, #20]
   4b238:	add	r3, r3, #8
   4b23c:	cmp	r2, r3
   4b240:	mov	r6, r0
   4b244:	mov	r7, r1
   4b248:	bhi	4b2dc <luaL_error@@Base+0x51f0>
   4b24c:	ldr	r3, [r4, #8]
   4b250:	ldr	r2, [sp]
   4b254:	add	ip, r3, #80	; 0x50
   4b258:	cmp	r2, #0
   4b25c:	ldr	r2, [r3, #88]	; 0x58
   4b260:	str	r4, [r3, #92]	; 0x5c
   4b264:	str	r2, [r3, #80]	; 0x50
   4b268:	ldrne	r1, [pc, #240]	; 4b360 <luaL_error@@Base+0x5274>
   4b26c:	bne	4b284 <luaL_error@@Base+0x5198>
   4b270:	ldr	r1, [pc, #236]	; 4b364 <luaL_error@@Base+0x5278>
   4b274:	mvn	r8, #0
   4b278:	mov	r9, #0
   4b27c:	and	r6, r6, r8
   4b280:	and	r7, r7, r9
   4b284:	mov	r2, r6
   4b288:	mov	r3, r7
   4b28c:	mov	r0, ip
   4b290:	bl	30574 <luaL_where@@Base+0x10470>
   4b294:	ldr	r5, [r4, #20]
   4b298:	mov	r2, r0
   4b29c:	mov	r0, r4
   4b2a0:	ldr	r3, [r2, #8]
   4b2a4:	ldr	r2, [r2]
   4b2a8:	mov	r1, r3
   4b2ac:	sub	r2, r2, r3
   4b2b0:	bl	20260 <luaL_where@@Base+0x15c>
   4b2b4:	ldr	r3, [r4, #8]
   4b2b8:	mvn	r2, #4
   4b2bc:	str	r2, [r5, #-4]
   4b2c0:	ldrd	r2, [r3, #20]
   4b2c4:	cmp	r2, r3
   4b2c8:	str	r0, [r5, #-8]
   4b2cc:	bcs	4b34c <luaL_error@@Base+0x5260>
   4b2d0:	mov	r0, #1
   4b2d4:	add	sp, sp, #12
   4b2d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4b2dc:	add	r2, sp, #4
   4b2e0:	mov	r1, #2
   4b2e4:	mov	r0, r4
   4b2e8:	bl	4adb0 <luaL_error@@Base+0x4cc4>
   4b2ec:	ldr	r3, [r4, #8]
   4b2f0:	add	ip, r3, #80	; 0x50
   4b2f4:	ldr	r2, [r3, #88]	; 0x58
   4b2f8:	str	r4, [r3, #92]	; 0x5c
   4b2fc:	str	r2, [r3, #80]	; 0x50
   4b300:	cmp	r0, #0
   4b304:	rsblt	r0, r0, #0
   4b308:	ldrlt	r3, [pc, #88]	; 4b368 <luaL_error@@Base+0x527c>
   4b30c:	add	r1, r0, #1
   4b310:	movge	r3, #20
   4b314:	cmp	r0, #15
   4b318:	orr	r1, r3, r1, lsl #24
   4b31c:	bgt	4b284 <luaL_error@@Base+0x5198>
   4b320:	lsl	r0, r0, #2
   4b324:	mvn	lr, #0
   4b328:	sub	r5, r0, #32
   4b32c:	lsl	r3, lr, r0
   4b330:	orr	r3, r3, lr, lsl r5
   4b334:	rsb	r5, r0, #32
   4b338:	lsl	r2, lr, r0
   4b33c:	orr	r3, r3, lr, lsr r5
   4b340:	mvn	r8, r2
   4b344:	mvn	r9, r3
   4b348:	b	4b27c <luaL_error@@Base+0x5190>
   4b34c:	mov	r0, r4
   4b350:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   4b354:	mov	r0, #1
   4b358:	add	sp, sp, #12
   4b35c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4b360:	tstne	r0, r4, lsl r0
   4b364:	stmdbeq	r0, {r2, r4}
   4b368:	andeq	r2, r0, r4, lsl r0
   4b36c:	push	{r4, r5, r6, r7, lr}
   4b370:	sub	sp, sp, #12
   4b374:	mov	r3, #0
   4b378:	mov	r2, sp
   4b37c:	mov	r1, #1
   4b380:	mov	r5, r0
   4b384:	str	r3, [sp]
   4b388:	str	r3, [sp, #4]
   4b38c:	bl	4adb0 <luaL_error@@Base+0x4cc4>
   4b390:	add	r2, sp, #4
   4b394:	mov	r6, r0
   4b398:	mov	r7, r1
   4b39c:	mov	r0, r5
   4b3a0:	mov	r1, #2
   4b3a4:	bl	4adb0 <luaL_error@@Base+0x4cc4>
   4b3a8:	ldr	r4, [sp]
   4b3ac:	cmp	r4, #0
   4b3b0:	bne	4b3dc <luaL_error@@Base+0x52f0>
   4b3b4:	ldr	r3, [sp, #4]
   4b3b8:	cmp	r3, #0
   4b3bc:	mvnne	r2, #13
   4b3c0:	ldrne	r3, [r5, #16]
   4b3c4:	moveq	r4, r3
   4b3c8:	strne	r0, [r3, #8]
   4b3cc:	strne	r2, [r3, #12]
   4b3d0:	mov	r0, r4
   4b3d4:	add	sp, sp, #12
   4b3d8:	pop	{r4, r5, r6, r7, pc}
   4b3dc:	ldr	r3, [r5, #16]
   4b3e0:	mov	r2, r0
   4b3e4:	mov	r1, r7
   4b3e8:	ldr	r3, [r3, #-8]
   4b3ec:	mov	r0, r6
   4b3f0:	ldrb	r3, [r3, #6]
   4b3f4:	sub	r3, r3, #67	; 0x43
   4b3f8:	bl	15844 <_start@@Base+0x2494>
   4b3fc:	mov	r6, r0
   4b400:	mov	r7, r1
   4b404:	mov	r0, r5
   4b408:	mov	r1, #16
   4b40c:	bl	32a24 <luaL_where@@Base+0x12920>
   4b410:	mov	r3, #10
   4b414:	mvn	r2, #10
   4b418:	strb	r3, [r0, #5]
   4b41c:	ldr	r3, [r5, #16]
   4b420:	strh	r4, [r0, #6]
   4b424:	mov	r4, #2
   4b428:	strd	r6, [r0, #8]
   4b42c:	stmdb	r3, {r0, r2}
   4b430:	mov	r0, r4
   4b434:	add	sp, sp, #12
   4b438:	pop	{r4, r5, r6, r7, pc}
   4b43c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   4b440:	sub	sp, sp, #8
   4b444:	add	r2, sp, #8
   4b448:	mov	r5, #0
   4b44c:	str	r5, [r2, #-4]!
   4b450:	mov	r1, #1
   4b454:	mov	r8, r0
   4b458:	bl	4adb0 <luaL_error@@Base+0x4cc4>
   4b45c:	ldr	r4, [sp, #4]
   4b460:	cmp	r4, r5
   4b464:	moveq	r0, r4
   4b468:	bne	4b474 <luaL_error@@Base+0x5388>
   4b46c:	add	sp, sp, #8
   4b470:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   4b474:	mov	r3, r1
   4b478:	rev	r0, r0
   4b47c:	mov	r1, #16
   4b480:	mov	fp, r0
   4b484:	mov	r0, r8
   4b488:	rev	r3, r3
   4b48c:	orr	r6, r5, r3
   4b490:	bl	32a24 <luaL_where@@Base+0x12920>
   4b494:	mov	r2, #10
   4b498:	mov	r7, fp
   4b49c:	mvn	r1, #10
   4b4a0:	strb	r2, [r0, #5]
   4b4a4:	ldr	r2, [r8, #16]
   4b4a8:	mov	r3, r0
   4b4ac:	strd	r6, [r0, #8]
   4b4b0:	strh	r4, [r0, #6]
   4b4b4:	mov	r0, #2
   4b4b8:	str	r3, [r2, #-8]
   4b4bc:	str	r1, [r2, #-4]
   4b4c0:	add	sp, sp, #8
   4b4c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   4b4c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   4b4cc:	sub	sp, sp, #12
   4b4d0:	add	r2, sp, #8
   4b4d4:	mov	r3, #0
   4b4d8:	str	r3, [r2, #-4]!
   4b4dc:	mov	r1, #1
   4b4e0:	mov	r5, r0
   4b4e4:	bl	4adb0 <luaL_error@@Base+0x4cc4>
   4b4e8:	ldr	r4, [sp, #4]
   4b4ec:	cmp	r4, #0
   4b4f0:	moveq	r0, r4
   4b4f4:	bne	4b500 <luaL_error@@Base+0x5414>
   4b4f8:	add	sp, sp, #12
   4b4fc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4b500:	mov	r8, r0
   4b504:	mov	r9, r1
   4b508:	mov	r0, r5
   4b50c:	mov	r1, #16
   4b510:	bl	32a24 <luaL_where@@Base+0x12920>
   4b514:	mov	r2, #10
   4b518:	mvn	r6, r8
   4b51c:	mvn	r7, r9
   4b520:	mvn	r1, #10
   4b524:	strb	r2, [r0, #5]
   4b528:	ldr	r2, [r5, #16]
   4b52c:	mov	r3, r0
   4b530:	strh	r4, [r0, #6]
   4b534:	strd	r6, [r0, #8]
   4b538:	mov	r0, #2
   4b53c:	str	r3, [r2, #-8]
   4b540:	str	r1, [r2, #-4]
   4b544:	add	sp, sp, #12
   4b548:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4b54c:	push	{r4, lr}
   4b550:	sub	sp, sp, #8
   4b554:	add	r2, sp, #8
   4b558:	mov	r3, #0
   4b55c:	str	r3, [r2, #-4]!
   4b560:	mov	r1, #1
   4b564:	ldr	r4, [r0, #16]
   4b568:	bl	4adb0 <luaL_error@@Base+0x4cc4>
   4b56c:	mvn	r3, #13
   4b570:	stmdb	r4, {r0, r3}
   4b574:	mov	r0, #2
   4b578:	add	sp, sp, #8
   4b57c:	pop	{r4, pc}
   4b580:	push	{r4, r5, r6, r7, r8, r9, lr}
   4b584:	mov	r5, r1
   4b588:	ldr	r4, [r1]
   4b58c:	sub	sp, sp, #20
   4b590:	mov	r8, r0
   4b594:	lsrs	r6, r4, #28
   4b598:	mov	r7, r3
   4b59c:	bne	4b618 <luaL_error@@Base+0x552c>
   4b5a0:	and	r2, r4, #-134217728	; 0xf8000000
   4b5a4:	cmp	r2, #134217728	; 0x8000000
   4b5a8:	beq	4b6cc <luaL_error@@Base+0x55e0>
   4b5ac:	ands	r2, r4, #-67108864	; 0xfc000000
   4b5b0:	ldr	r9, [r0]
   4b5b4:	bne	4b708 <luaL_error@@Base+0x561c>
   4b5b8:	ldr	r6, [r1, #4]
   4b5bc:	cmp	r6, #4
   4b5c0:	bhi	4b630 <luaL_error@@Base+0x5544>
   4b5c4:	ldr	r3, [sp, #48]	; 0x30
   4b5c8:	str	r2, [sp, #4]
   4b5cc:	str	r3, [sp]
   4b5d0:	mov	r2, r1
   4b5d4:	add	r3, sp, #12
   4b5d8:	add	r1, r9, #144	; 0x90
   4b5dc:	bl	4a658 <luaL_error@@Base+0x456c>
   4b5e0:	tst	r4, #8388608	; 0x800000
   4b5e4:	ldr	r3, [sp, #12]
   4b5e8:	beq	4b600 <luaL_error@@Base+0x5514>
   4b5ec:	cmp	r3, #0
   4b5f0:	vmovlt	s15, r3
   4b5f4:	vcvtlt.f64.u32	d7, s15
   4b5f8:	vstrlt	d7, [r7]
   4b5fc:	blt	4b60c <luaL_error@@Base+0x5520>
   4b600:	mvn	r2, #13
   4b604:	str	r3, [r7]
   4b608:	str	r2, [r7, #4]
   4b60c:	mov	r0, #0
   4b610:	add	sp, sp, #20
   4b614:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4b618:	and	r4, r4, #-67108864	; 0xfc000000
   4b61c:	cmp	r6, #1
   4b620:	cmpne	r4, #805306368	; 0x30000000
   4b624:	beq	4b67c <luaL_error@@Base+0x5590>
   4b628:	ldr	r6, [r1, #4]
   4b62c:	ldr	r9, [r0]
   4b630:	add	r1, r6, #8
   4b634:	ldr	r0, [r8, #12]
   4b638:	bl	32a24 <luaL_where@@Base+0x12920>
   4b63c:	sub	r5, r5, r9
   4b640:	mvn	r1, #10
   4b644:	asr	r5, r5, #4
   4b648:	mov	r2, r6
   4b64c:	mov	r3, r0
   4b650:	mov	r0, #10
   4b654:	strb	r0, [r3, #5]
   4b658:	strh	r5, [r3, #6]
   4b65c:	add	r0, r3, #8
   4b660:	str	r1, [r7, #4]
   4b664:	str	r3, [r7]
   4b668:	ldr	r1, [sp, #48]	; 0x30
   4b66c:	bl	12cb8 <memcpy@plt>
   4b670:	mov	r0, #1
   4b674:	add	sp, sp, #20
   4b678:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4b67c:	add	r1, r2, #578813952	; 0x22800000
   4b680:	add	r1, r1, #131072	; 0x20000
   4b684:	mov	r2, #4
   4b688:	bl	41060 <luaL_typerror@@Base+0xacf4>
   4b68c:	mov	r1, #12
   4b690:	mov	r4, r0
   4b694:	ldr	r0, [r8, #12]
   4b698:	bl	32a24 <luaL_where@@Base+0x12920>
   4b69c:	mov	r1, #10
   4b6a0:	mvn	r2, #10
   4b6a4:	strh	r4, [r0, #6]
   4b6a8:	mov	r3, r0
   4b6ac:	ldr	r0, [sp, #48]	; 0x30
   4b6b0:	strb	r1, [r3, #5]
   4b6b4:	str	r0, [r3, #8]
   4b6b8:	mov	r0, #1
   4b6bc:	str	r3, [r7]
   4b6c0:	str	r2, [r7, #4]
   4b6c4:	add	sp, sp, #20
   4b6c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4b6cc:	ldr	r3, [r1, #4]
   4b6d0:	ldr	r1, [r0, #16]
   4b6d4:	cmp	r3, #1
   4b6d8:	ldr	r3, [sp, #48]	; 0x30
   4b6dc:	mov	r0, #0
   4b6e0:	ldrbeq	r3, [r3]
   4b6e4:	ldrne	r3, [r3]
   4b6e8:	adds	r2, r3, #0
   4b6ec:	movne	r2, #1
   4b6f0:	mvn	r3, #1
   4b6f4:	sub	r3, r3, r2
   4b6f8:	str	r3, [r7, #4]
   4b6fc:	str	r3, [r1, #140]	; 0x8c
   4b700:	add	sp, sp, #20
   4b704:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4b708:	ldr	r2, [sp, #48]	; 0x30
   4b70c:	str	r6, [sp, #4]
   4b710:	str	r2, [sp]
   4b714:	mov	r2, r1
   4b718:	add	r1, r9, #224	; 0xe0
   4b71c:	bl	4a658 <luaL_error@@Base+0x456c>
   4b720:	mov	r0, r6
   4b724:	add	sp, sp, #20
   4b728:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4b72c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4b730:	mov	r9, r1
   4b734:	ldrh	r4, [r1, #6]
   4b738:	ldr	r1, [r0]
   4b73c:	mov	r7, r0
   4b740:	ldr	ip, [pc, #848]	; 4ba98 <luaL_error@@Base+0x59ac>
   4b744:	ldr	r0, [r1, r4, lsl #4]
   4b748:	add	r4, r1, r4, lsl #4
   4b74c:	and	ip, ip, r0
   4b750:	cmp	ip, #545259520	; 0x20800000
   4b754:	uxtheq	r4, r0
   4b758:	sub	sp, sp, #20
   4b75c:	ldreq	r0, [r1, r4, lsl #4]
   4b760:	mov	sl, r3
   4b764:	addne	r5, r9, #8
   4b768:	lsr	r3, r0, #28
   4b76c:	ldreq	r5, [r9, #8]
   4b770:	addeq	r4, r1, r4, lsl #4
   4b774:	cmp	r3, #8
   4b778:	mov	r6, r2
   4b77c:	ldr	r8, [sp, #56]	; 0x38
   4b780:	beq	4b814 <luaL_error@@Base+0x5728>
   4b784:	ldr	r2, [r6, #4]
   4b788:	cmn	r2, #14
   4b78c:	beq	4b87c <luaL_error@@Base+0x5790>
   4b790:	cmn	r2, #15
   4b794:	bls	4b840 <luaL_error@@Base+0x5754>
   4b798:	cmn	r2, #11
   4b79c:	beq	4b90c <luaL_error@@Base+0x5820>
   4b7a0:	cmn	r2, #5
   4b7a4:	bne	4b7cc <luaL_error@@Base+0x56e0>
   4b7a8:	cmp	r3, #1
   4b7ac:	ldr	r2, [r6]
   4b7b0:	beq	4ba4c <luaL_error@@Base+0x5960>
   4b7b4:	and	ip, r0, #-201326592	; 0xf4000000
   4b7b8:	cmp	ip, #872415232	; 0x34000000
   4b7bc:	beq	4b968 <luaL_error@@Base+0x587c>
   4b7c0:	ldrh	ip, [r9, #6]
   4b7c4:	cmp	ip, #21
   4b7c8:	beq	4b9a8 <luaL_error@@Base+0x58bc>
   4b7cc:	cmp	r3, #2
   4b7d0:	bne	4b864 <luaL_error@@Base+0x5778>
   4b7d4:	ldr	r1, [r7]
   4b7d8:	mov	r3, r0
   4b7dc:	uxth	r3, r3
   4b7e0:	ldr	r3, [r1, r3, lsl #4]
   4b7e4:	lsr	r2, r3, #28
   4b7e8:	cmp	r2, #8
   4b7ec:	beq	4b7dc <luaL_error@@Base+0x56f0>
   4b7f0:	cmp	r2, #1
   4b7f4:	bne	4b864 <luaL_error@@Base+0x5778>
   4b7f8:	uxth	r4, r0
   4b7fc:	ldr	r5, [r5]
   4b800:	add	r4, r1, r4, lsl #4
   4b804:	ldr	r0, [r4]
   4b808:	lsr	r3, r0, #28
   4b80c:	cmp	r3, #8
   4b810:	bne	4b784 <luaL_error@@Base+0x5698>
   4b814:	lsr	r3, r0, #16
   4b818:	uxtb	r3, r3
   4b81c:	cmp	r3, #1
   4b820:	ldreq	r2, [r4, #4]
   4b824:	ldreq	r3, [r8]
   4b828:	orreq	r3, r3, r2
   4b82c:	streq	r3, [r8]
   4b830:	ldreq	r0, [r4]
   4b834:	uxth	r4, r0
   4b838:	add	r4, r1, r4, lsl #4
   4b83c:	b	4b804 <luaL_error@@Base+0x5718>
   4b840:	vldr	d7, [r6]
   4b844:	vcvt.s32.f64	s14, d7
   4b848:	vstr	s14, [sp, #8]
   4b84c:	lsr	r3, r0, #29
   4b850:	cmp	r3, #1
   4b854:	beq	4b890 <luaL_error@@Base+0x57a4>
   4b858:	lsr	r3, r0, #28
   4b85c:	cmp	r3, #2
   4b860:	beq	4b7d4 <luaL_error@@Base+0x56e8>
   4b864:	ldr	r3, [r8]
   4b868:	orr	r3, r3, #1
   4b86c:	str	r3, [r8]
   4b870:	mov	r0, r4
   4b874:	add	sp, sp, #20
   4b878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b87c:	ldr	r3, [r6]
   4b880:	str	r3, [sp, #8]
   4b884:	lsr	r3, r0, #29
   4b888:	cmp	r3, #1
   4b88c:	bne	4b858 <luaL_error@@Base+0x576c>
   4b890:	ldr	ip, [r7]
   4b894:	uxth	r3, r0
   4b898:	b	4b8a0 <luaL_error@@Base+0x57b4>
   4b89c:	uxth	r3, r2
   4b8a0:	ldr	r2, [ip, r3, lsl #4]
   4b8a4:	add	r3, ip, r3, lsl #4
   4b8a8:	lsr	r1, r2, #28
   4b8ac:	cmp	r1, #8
   4b8b0:	beq	4b89c <luaL_error@@Base+0x57b0>
   4b8b4:	cmp	r1, #5
   4b8b8:	bhi	4ba7c <luaL_error@@Base+0x5990>
   4b8bc:	ldr	r3, [r3, #4]
   4b8c0:	cmn	r3, #1
   4b8c4:	beq	4ba7c <luaL_error@@Base+0x5990>
   4b8c8:	lsr	r2, r0, #28
   4b8cc:	cmp	r2, #2
   4b8d0:	ldr	r2, [sp, #8]
   4b8d4:	ldreq	r5, [r5]
   4b8d8:	beq	4b8f8 <luaL_error@@Base+0x580c>
   4b8dc:	tst	r0, #201326592	; 0xc000000
   4b8e0:	beq	4b8f8 <luaL_error@@Base+0x580c>
   4b8e4:	ldr	r1, [r8]
   4b8e8:	tst	r0, #67108864	; 0x4000000
   4b8ec:	andne	r2, r2, #1
   4b8f0:	orr	r1, r1, #33554432	; 0x2000000
   4b8f4:	str	r1, [r8]
   4b8f8:	mla	r3, r2, r3, r5
   4b8fc:	mov	r0, r4
   4b900:	str	r3, [sl]
   4b904:	add	sp, sp, #20
   4b908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b90c:	ldr	ip, [r6]
   4b910:	ldrh	r2, [ip, #6]
   4b914:	b	4b91c <luaL_error@@Base+0x5830>
   4b918:	uxth	r2, lr
   4b91c:	ldr	lr, [r1, r2, lsl #4]
   4b920:	add	r2, r1, r2, lsl #4
   4b924:	lsr	fp, lr, #28
   4b928:	cmp	fp, #8
   4b92c:	beq	4b918 <luaL_error@@Base+0x582c>
   4b930:	cmp	fp, #5
   4b934:	uxtheq	r2, lr
   4b938:	addeq	r2, r1, r2, lsl #4
   4b93c:	ldr	lr, [r2]
   4b940:	ands	lr, lr, #-67108864	; 0xfc000000
   4b944:	bne	4b7cc <luaL_error@@Base+0x56e0>
   4b948:	add	ip, ip, #8
   4b94c:	mov	r0, r7
   4b950:	stm	sp, {ip, lr}
   4b954:	add	r1, r1, #144	; 0x90
   4b958:	add	r3, sp, #8
   4b95c:	bl	4a658 <luaL_error@@Base+0x456c>
   4b960:	ldr	r0, [r4]
   4b964:	b	4b84c <luaL_error@@Base+0x5760>
   4b968:	ldr	r1, [r2, #12]
   4b96c:	cmp	r1, #2
   4b970:	bne	4b7cc <luaL_error@@Base+0x56e0>
   4b974:	ldr	r3, [r8]
   4b978:	orr	r3, r3, #33554432	; 0x2000000
   4b97c:	str	r3, [r8]
   4b980:	ldrb	r3, [r2, #16]
   4b984:	cmp	r3, #114	; 0x72
   4b988:	beq	4ba3c <luaL_error@@Base+0x5950>
   4b98c:	cmp	r3, #105	; 0x69
   4b990:	bne	4b9a0 <luaL_error@@Base+0x58b4>
   4b994:	ldrb	r3, [r2, #17]
   4b998:	cmp	r3, #109	; 0x6d
   4b99c:	beq	4ba88 <luaL_error@@Base+0x599c>
   4b9a0:	ldr	r0, [r4]
   4b9a4:	b	4b858 <luaL_error@@Base+0x576c>
   4b9a8:	ldr	r4, [r5]
   4b9ac:	ldr	r0, [r1, r4, lsl #4]
   4b9b0:	add	r4, r1, r4, lsl #4
   4b9b4:	lsr	r3, r0, #28
   4b9b8:	cmp	r3, #8
   4b9bc:	bne	4b9d8 <luaL_error@@Base+0x58ec>
   4b9c0:	uxth	r3, r0
   4b9c4:	ldr	r0, [r1, r3, lsl #4]
   4b9c8:	add	r4, r1, r3, lsl #4
   4b9cc:	lsr	r3, r0, #28
   4b9d0:	cmp	r3, #8
   4b9d4:	beq	4b9c0 <luaL_error@@Base+0x58d4>
   4b9d8:	cmp	r3, #2
   4b9dc:	beq	4ba20 <luaL_error@@Base+0x5934>
   4b9e0:	cmp	r3, #1
   4b9e4:	bne	4b7cc <luaL_error@@Base+0x56e0>
   4b9e8:	mov	r3, #0
   4b9ec:	str	r3, [sp]
   4b9f0:	mov	r1, r4
   4b9f4:	add	r3, sp, #12
   4b9f8:	mov	r0, r7
   4b9fc:	bl	1544c <_start@@Base+0x209c>
   4ba00:	cmp	r0, #0
   4ba04:	beq	4b9a0 <luaL_error@@Base+0x58b4>
   4ba08:	ldr	r3, [r0]
   4ba0c:	lsr	r3, r3, #28
   4ba10:	cmp	r3, #11
   4ba14:	bne	4b9a0 <luaL_error@@Base+0x58b4>
   4ba18:	mov	r4, r0
   4ba1c:	b	4b870 <luaL_error@@Base+0x5784>
   4ba20:	uxth	r3, r0
   4ba24:	ldr	r0, [r1, r3, lsl #4]
   4ba28:	add	r4, r1, r3, lsl #4
   4ba2c:	lsr	r3, r0, #28
   4ba30:	cmp	r3, #8
   4ba34:	beq	4ba20 <luaL_error@@Base+0x5934>
   4ba38:	b	4b9e0 <luaL_error@@Base+0x58f4>
   4ba3c:	ldrb	r3, [r2, #17]
   4ba40:	cmp	r3, #101	; 0x65
   4ba44:	bne	4b9a0 <luaL_error@@Base+0x58b4>
   4ba48:	b	4ba90 <luaL_error@@Base+0x59a4>
   4ba4c:	str	r8, [sp]
   4ba50:	add	r3, sp, #12
   4ba54:	mov	r1, r4
   4ba58:	mov	r0, r7
   4ba5c:	bl	1544c <_start@@Base+0x209c>
   4ba60:	cmp	r0, #0
   4ba64:	beq	4b9a0 <luaL_error@@Base+0x58b4>
   4ba68:	ldr	r3, [sp, #12]
   4ba6c:	mov	r4, r0
   4ba70:	add	r5, r5, r3
   4ba74:	str	r5, [sl]
   4ba78:	b	4b870 <luaL_error@@Base+0x5784>
   4ba7c:	ldr	r0, [r7, #12]
   4ba80:	ldr	r1, [pc, #20]	; 4ba9c <luaL_error@@Base+0x59b0>
   4ba84:	bl	35a48 <lua_error@@Base+0xa8>
   4ba88:	ldr	r3, [r4, #4]
   4ba8c:	add	r5, r5, r3, lsr #1
   4ba90:	str	r5, [sl]
   4ba94:	b	4b870 <luaL_error@@Base+0x5784>
   4ba98:			; <UNDEFINED> instruction: 0xf0800000
   4ba9c:	andeq	r0, r0, pc, lsr #23
   4baa0:	ldr	ip, [r3, #4]
   4baa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4baa8:	sub	sp, sp, #44	; 0x2c
   4baac:	cmn	ip, #14
   4bab0:	mov	r8, r3
   4bab4:	mov	r7, r2
   4bab8:	mov	r6, r0
   4babc:	mov	r4, r1
   4bac0:	ldr	r5, [sp, #80]	; 0x50
   4bac4:	bne	4bb10 <luaL_error@@Base+0x5a24>
   4bac8:	ldr	r3, [r1]
   4bacc:	ldr	r2, [r0]
   4bad0:	orr	r5, r5, #2
   4bad4:	lsr	ip, r3, #28
   4bad8:	mov	r0, #144	; 0x90
   4badc:	add	r2, r2, r0
   4bae0:	cmp	ip, #5
   4bae4:	uxtheq	r3, r3
   4bae8:	ldreq	r4, [r6]
   4baec:	mov	r0, r6
   4baf0:	addeq	r4, r4, r3, lsl #4
   4baf4:	str	r5, [sp, #4]
   4baf8:	str	r8, [sp]
   4bafc:	mov	r3, r7
   4bb00:	mov	r1, r4
   4bb04:	bl	4a658 <luaL_error@@Base+0x456c>
   4bb08:	add	sp, sp, #44	; 0x2c
   4bb0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4bb10:	cmn	ip, #15
   4bb14:	bhi	4bb30 <luaL_error@@Base+0x5a44>
   4bb18:	ldr	r3, [r1]
   4bb1c:	ldr	r2, [r0]
   4bb20:	orr	r5, r5, #2
   4bb24:	lsr	ip, r3, #28
   4bb28:	mov	r0, #224	; 0xe0
   4bb2c:	b	4badc <luaL_error@@Base+0x59f0>
   4bb30:	cmn	ip, #11
   4bb34:	beq	4bcc4 <luaL_error@@Base+0x5bd8>
   4bb38:	cmn	ip, #5
   4bb3c:	beq	4bd34 <luaL_error@@Base+0x5c48>
   4bb40:	cmn	ip, #12
   4bb44:	beq	4bdc0 <luaL_error@@Base+0x5cd4>
   4bb48:	ldr	r2, [r0]
   4bb4c:	add	r3, ip, #3
   4bb50:	cmp	r3, #1
   4bb54:	mov	r1, r2
   4bb58:	bls	4be18 <luaL_error@@Base+0x5d2c>
   4bb5c:	cmn	ip, #1
   4bb60:	beq	4be60 <luaL_error@@Base+0x5d74>
   4bb64:	cmn	ip, #13
   4bb68:	beq	4bf54 <luaL_error@@Base+0x5e68>
   4bb6c:	cmn	ip, #4
   4bb70:	beq	4c090 <luaL_error@@Base+0x5fa4>
   4bb74:	cmn	ip, #9
   4bb78:	bne	4bc78 <luaL_error@@Base+0x5b8c>
   4bb7c:	ldr	r2, [r4]
   4bb80:	ldr	r3, [r8]
   4bb84:	str	r3, [sp, #20]
   4bb88:	lsr	r3, r2, #28
   4bb8c:	cmp	r3, #2
   4bb90:	bne	4bc78 <luaL_error@@Base+0x5b8c>
   4bb94:	uxth	r3, r2
   4bb98:	ldr	r2, [r1, r3, lsl #4]
   4bb9c:	lsl	ip, r3, #4
   4bba0:	add	lr, r1, ip
   4bba4:	lsr	r3, r2, #28
   4bba8:	cmp	r3, #8
   4bbac:	beq	4bb94 <luaL_error@@Base+0x5aa8>
   4bbb0:	cmp	r3, #6
   4bbb4:	bne	4bc78 <luaL_error@@Base+0x5b8c>
   4bbb8:	mov	r3, r2
   4bbbc:	uxth	r0, r3
   4bbc0:	ldr	r3, [r1, r0, lsl #4]
   4bbc4:	add	r0, r1, r0, lsl #4
   4bbc8:	lsr	r9, r3, #28
   4bbcc:	cmp	r9, #8
   4bbd0:	beq	4bbbc <luaL_error@@Base+0x5ad0>
   4bbd4:	sub	r3, r9, #4
   4bbd8:	cmp	r9, #2
   4bbdc:	cmpne	r3, #1
   4bbe0:	ldrh	r3, [lr, #8]
   4bbe4:	bls	4bbfc <luaL_error@@Base+0x5b10>
   4bbe8:	cmp	r9, #0
   4bbec:	bne	4bc78 <luaL_error@@Base+0x5b8c>
   4bbf0:	ldr	r0, [r0, #4]
   4bbf4:	cmp	r0, #8
   4bbf8:	bhi	4bc78 <luaL_error@@Base+0x5b8c>
   4bbfc:	ands	r2, r2, #8388608	; 0x800000
   4bc00:	bne	4bc78 <luaL_error@@Base+0x5b8c>
   4bc04:	cmp	r3, #0
   4bc08:	beq	4bec8 <luaL_error@@Base+0x5ddc>
   4bc0c:	mov	lr, r2
   4bc10:	b	4bc20 <luaL_error@@Base+0x5b34>
   4bc14:	ldrh	r3, [r9, #8]
   4bc18:	cmp	r3, #0
   4bc1c:	beq	4bec8 <luaL_error@@Base+0x5ddc>
   4bc20:	ldr	r2, [r1, r3, lsl #4]
   4bc24:	add	r9, r1, r3, lsl #4
   4bc28:	lsr	r3, r2, #28
   4bc2c:	cmp	r3, #8
   4bc30:	beq	4bc14 <luaL_error@@Base+0x5b28>
   4bc34:	uxth	r3, r2
   4bc38:	ldr	r2, [r1, r3, lsl #4]
   4bc3c:	add	r3, r1, r3, lsl #4
   4bc40:	lsr	r0, r2, #28
   4bc44:	cmp	r0, #8
   4bc48:	beq	4bc34 <luaL_error@@Base+0x5b48>
   4bc4c:	cmp	r0, #5
   4bc50:	cmpne	r0, #2
   4bc54:	beq	4bc6c <luaL_error@@Base+0x5b80>
   4bc58:	cmp	r0, #0
   4bc5c:	bne	4bc78 <luaL_error@@Base+0x5b8c>
   4bc60:	ldr	r3, [r3, #4]
   4bc64:	cmp	r3, #8
   4bc68:	bhi	4bc78 <luaL_error@@Base+0x5b8c>
   4bc6c:	add	lr, lr, #1
   4bc70:	cmp	lr, #16
   4bc74:	ble	4bc14 <luaL_error@@Base+0x5b28>
   4bc78:	sub	r1, r4, r1
   4bc7c:	ldr	r0, [r6, #12]
   4bc80:	asr	r1, r1, #4
   4bc84:	bl	3cfec <luaL_typerror@@Base+0x6c80>
   4bc88:	ldr	r2, [r8, #4]
   4bc8c:	ldr	ip, [pc, #1460]	; 4c248 <luaL_error@@Base+0x615c>
   4bc90:	cmn	r2, #14
   4bc94:	mvnhi	r2, r2
   4bc98:	movls	r2, #13
   4bc9c:	lsrs	r1, r5, #8
   4bca0:	add	r2, ip, r2, lsl #2
   4bca4:	ldr	r2, [r2, #-216]	; 0xffffff28
   4bca8:	add	r3, r0, #16
   4bcac:	ldr	r0, [r6, #12]
   4bcb0:	beq	4c16c <luaL_error@@Base+0x6080>
   4bcb4:	str	r3, [sp]
   4bcb8:	mov	r3, r2
   4bcbc:	ldr	r2, [pc, #1416]	; 4c24c <luaL_error@@Base+0x6160>
   4bcc0:	bl	4a5d0 <luaL_error@@Base+0x44e4>
   4bcc4:	ldr	r8, [r3]
   4bcc8:	ldr	r0, [r0]
   4bccc:	ldr	r3, [pc, #1404]	; 4c250 <luaL_error@@Base+0x6164>
   4bcd0:	ldrh	r1, [r8, #6]
   4bcd4:	ldr	lr, [r0, r1, lsl #4]
   4bcd8:	add	r2, r0, r1, lsl #4
   4bcdc:	and	r3, r3, lr
   4bce0:	cmp	r3, #545259520	; 0x20800000
   4bce4:	uxtheq	r1, lr
   4bce8:	addne	r8, r8, #8
   4bcec:	ldreq	r8, [r8, #8]
   4bcf0:	ldreq	lr, [r0, r1, lsl #4]
   4bcf4:	addeq	r2, r0, r1, lsl #4
   4bcf8:	b	4bd08 <luaL_error@@Base+0x5c1c>
   4bcfc:	uxth	r3, lr
   4bd00:	ldr	lr, [r0, r3, lsl #4]
   4bd04:	add	r2, r0, r3, lsl #4
   4bd08:	lsr	ip, lr, #28
   4bd0c:	cmp	ip, #8
   4bd10:	beq	4bcfc <luaL_error@@Base+0x5c10>
   4bd14:	cmp	ip, #6
   4bd18:	beq	4be38 <luaL_error@@Base+0x5d4c>
   4bd1c:	cmp	ip, #5
   4bd20:	ldr	r3, [r4]
   4bd24:	uxtheq	r2, lr
   4bd28:	lsr	ip, r3, #28
   4bd2c:	addeq	r2, r0, r2, lsl #4
   4bd30:	b	4bae0 <luaL_error@@Base+0x59f4>
   4bd34:	ldr	r3, [r1]
   4bd38:	ldr	lr, [r8]
   4bd3c:	lsr	ip, r3, #28
   4bd40:	cmp	ip, #5
   4bd44:	beq	4be80 <luaL_error@@Base+0x5d94>
   4bd48:	ldr	r2, [r0]
   4bd4c:	and	r1, r3, #-67108864	; 0xfc000000
   4bd50:	cmp	r1, #805306368	; 0x30000000
   4bd54:	addne	r8, lr, #16
   4bd58:	mov	r1, r2
   4bd5c:	orrne	r5, r5, #2
   4bd60:	movne	r0, #320	; 0x140
   4bd64:	bne	4badc <luaL_error@@Base+0x59f0>
   4bd68:	uxth	r2, r3
   4bd6c:	ldr	r3, [r1, r2, lsl #4]
   4bd70:	add	r0, r1, r2, lsl #4
   4bd74:	lsr	r2, r3, #28
   4bd78:	cmp	r2, #8
   4bd7c:	beq	4bd68 <luaL_error@@Base+0x5c7c>
   4bd80:	ldr	r2, [lr, #12]
   4bd84:	tst	r3, #-67108864	; 0xfc000000
   4bd88:	add	r3, r2, #1
   4bd8c:	bne	4bc78 <luaL_error@@Base+0x5b8c>
   4bd90:	ldr	r2, [r0, #4]
   4bd94:	cmp	r2, #1
   4bd98:	bne	4bc78 <luaL_error@@Base+0x5b8c>
   4bd9c:	ldr	r2, [r4, #4]
   4bda0:	add	r1, lr, #16
   4bda4:	cmp	r2, #0
   4bda8:	cmpne	r2, r3
   4bdac:	movcs	r2, r3
   4bdb0:	mov	r0, r7
   4bdb4:	add	sp, sp, #44	; 0x2c
   4bdb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4bdbc:	b	12cb8 <memcpy@plt>
   4bdc0:	ldr	r3, [r1]
   4bdc4:	lsr	r2, r3, #28
   4bdc8:	cmp	r2, #3
   4bdcc:	beq	4bf8c <luaL_error@@Base+0x5ea0>
   4bdd0:	cmp	r2, #1
   4bdd4:	bne	4bf4c <luaL_error@@Base+0x5e60>
   4bdd8:	ldr	r8, [r8]
   4bddc:	mov	r3, #0
   4bde0:	add	r9, sp, #40	; 0x28
   4bde4:	mov	r1, r3
   4bde8:	ldr	r2, [r4, #4]
   4bdec:	mov	r0, r7
   4bdf0:	str	r3, [r9, #-4]!
   4bdf4:	bl	12ed4 <memset@plt>
   4bdf8:	ldrh	r2, [r4, #8]
   4bdfc:	mov	r3, r7
   4be00:	mov	r0, r6
   4be04:	strd	r8, [sp]
   4be08:	str	r5, [sp, #8]
   4be0c:	mov	r1, r4
   4be10:	bl	4c370 <luaL_error@@Base+0x6284>
   4be14:	b	4bb08 <luaL_error@@Base+0x5a1c>
   4be18:	ldr	r3, [r4]
   4be1c:	mvn	r1, #1
   4be20:	add	r8, sp, #40	; 0x28
   4be24:	sub	ip, r1, ip
   4be28:	strb	ip, [r8, #-5]!
   4be2c:	mov	r0, #48	; 0x30
   4be30:	lsr	ip, r3, #28
   4be34:	b	4badc <luaL_error@@Base+0x59f0>
   4be38:	orr	r1, r1, #536870912	; 0x20000000
   4be3c:	mov	r2, #4
   4be40:	orr	r1, r1, #131072	; 0x20000
   4be44:	mov	r0, r6
   4be48:	bl	41060 <luaL_typerror@@Base+0xacf4>
   4be4c:	ldr	r3, [r4]
   4be50:	ldr	r2, [r6]
   4be54:	lsr	ip, r3, #28
   4be58:	lsl	r0, r0, #4
   4be5c:	b	4badc <luaL_error@@Base+0x59f0>
   4be60:	ldr	r3, [r4]
   4be64:	add	r8, sp, #40	; 0x28
   4be68:	mov	r1, #0
   4be6c:	orr	r5, r5, #2
   4be70:	lsr	ip, r3, #28
   4be74:	str	r1, [r8, #-4]!
   4be78:	mov	r0, #272	; 0x110
   4be7c:	b	4badc <luaL_error@@Base+0x59f0>
   4be80:	mov	r3, #0
   4be84:	str	r3, [sp]
   4be88:	mov	r2, lr
   4be8c:	add	r3, sp, #36	; 0x24
   4be90:	bl	1544c <_start@@Base+0x209c>
   4be94:	cmp	r0, #0
   4be98:	beq	4bf4c <luaL_error@@Base+0x5e60>
   4be9c:	ldr	r2, [r0]
   4bea0:	lsr	r3, r2, #28
   4bea4:	cmp	r3, #11
   4bea8:	bne	4bf4c <luaL_error@@Base+0x5e60>
   4beac:	ldr	r3, [r4]
   4beb0:	uxth	r2, r2
   4beb4:	add	r8, r0, #4
   4beb8:	lsr	ip, r3, #28
   4bebc:	lsl	r0, r2, #4
   4bec0:	ldr	r2, [r6]
   4bec4:	b	4badc <luaL_error@@Base+0x59f0>
   4bec8:	ldr	r9, [r6, #192]	; 0xc0
   4becc:	ldr	fp, [r6, #184]	; 0xb8
   4bed0:	asr	r3, ip, #4
   4bed4:	ldr	r1, [r6, #188]	; 0xbc
   4bed8:	str	r3, [sp, #24]
   4bedc:	add	r3, fp, r9, lsl #1
   4bee0:	cmp	r9, r1
   4bee4:	bcs	4c0f8 <luaL_error@@Base+0x600c>
   4bee8:	ldrh	r0, [r3], #2
   4beec:	add	r2, r9, #1
   4bef0:	cmp	r0, #0
   4bef4:	bne	4c0c0 <luaL_error@@Base+0x5fd4>
   4bef8:	lsl	r3, r9, #1
   4befc:	ldr	sl, [r6, #24]
   4bf00:	ldrh	r1, [sp, #24]
   4bf04:	strh	r1, [fp, r3]
   4bf08:	ldr	r3, [sl, #24]
   4bf0c:	str	r2, [r6, #192]	; 0xc0
   4bf10:	cmp	r3, r9
   4bf14:	bls	4c0ac <luaL_error@@Base+0x5fc0>
   4bf18:	ldr	r0, [sl, #8]
   4bf1c:	add	r0, r0, r9, lsl #3
   4bf20:	ldr	r2, [sp, #20]
   4bf24:	mvn	r3, #8
   4bf28:	strd	r2, [r0]
   4bf2c:	ldrb	r3, [sl, #4]
   4bf30:	tst	r3, #4
   4bf34:	bne	4c0d8 <luaL_error@@Base+0x5fec>
   4bf38:	ldr	r3, [r6, #180]	; 0xb4
   4bf3c:	add	r9, r9, #4
   4bf40:	adds	r3, r3, r9, lsl #3
   4bf44:	strne	r3, [r7]
   4bf48:	bne	4bb08 <luaL_error@@Base+0x5a1c>
   4bf4c:	ldr	r1, [r6]
   4bf50:	b	4bc78 <luaL_error@@Base+0x5b8c>
   4bf54:	ldr	r1, [r8]
   4bf58:	ldr	r3, [r4]
   4bf5c:	add	r0, r1, #24
   4bf60:	str	r0, [sp, #36]	; 0x24
   4bf64:	ldrb	r0, [r1, #6]
   4bf68:	lsr	ip, r3, #28
   4bf6c:	cmp	r0, #1
   4bf70:	movne	r0, #272	; 0x110
   4bf74:	addne	r8, sp, #36	; 0x24
   4bf78:	ldreq	r1, [r1, #24]
   4bf7c:	addeq	r8, sp, #40	; 0x28
   4bf80:	moveq	r0, #272	; 0x110
   4bf84:	streq	r1, [r8, #-4]!
   4bf88:	b	4badc <luaL_error@@Base+0x59f0>
   4bf8c:	ldr	fp, [r8]
   4bf90:	ldr	r1, [r0]
   4bf94:	uxth	r2, r3
   4bf98:	ldr	r3, [r1, r2, lsl #4]
   4bf9c:	add	r2, r1, r2, lsl #4
   4bfa0:	lsr	r0, r3, #28
   4bfa4:	cmp	r0, #8
   4bfa8:	beq	4bf94 <luaL_error@@Base+0x5ea8>
   4bfac:	ldr	r3, [r2, #4]
   4bfb0:	str	r2, [sp, #24]
   4bfb4:	mov	r8, #0
   4bfb8:	ldr	sl, [r4, #4]
   4bfbc:	ldr	r2, [fp, #24]
   4bfc0:	mov	r9, r8
   4bfc4:	str	r3, [sp, #20]
   4bfc8:	cmp	r2, r9
   4bfcc:	bls	4c074 <luaL_error@@Base+0x5f88>
   4bfd0:	ldr	r3, [fp, #8]
   4bfd4:	add	r3, r3, r9, lsl #3
   4bfd8:	cmp	r3, #0
   4bfdc:	beq	4c01c <luaL_error@@Base+0x5f30>
   4bfe0:	ldr	r1, [r3, #4]
   4bfe4:	cmn	r1, #1
   4bfe8:	beq	4c01c <luaL_error@@Base+0x5f30>
   4bfec:	cmp	sl, r8
   4bff0:	bls	4c0c8 <luaL_error@@Base+0x5fdc>
   4bff4:	add	r2, r7, r8
   4bff8:	str	r5, [sp]
   4bffc:	ldr	r1, [sp, #24]
   4c000:	mov	r0, r6
   4c004:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4c008:	ldr	r3, [sp, #20]
   4c00c:	ldr	r2, [fp, #24]
   4c010:	add	r8, r8, r3
   4c014:	add	r9, r9, #1
   4c018:	b	4bfc8 <luaL_error@@Base+0x5edc>
   4c01c:	cmp	r9, #0
   4c020:	beq	4c014 <luaL_error@@Base+0x5f28>
   4c024:	cmn	sl, #1
   4c028:	beq	4bb08 <luaL_error@@Base+0x5a1c>
   4c02c:	ldr	r3, [sp, #20]
   4c030:	cmp	r3, r8
   4c034:	moveq	r4, r8
   4c038:	beq	4c068 <luaL_error@@Base+0x5f7c>
   4c03c:	sub	r2, sl, r8
   4c040:	add	r0, r7, r8
   4c044:	mov	r1, #0
   4c048:	add	sp, sp, #44	; 0x2c
   4c04c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4c050:	b	12ed4 <memset@plt>
   4c054:	add	r0, r7, r4
   4c058:	mov	r2, r8
   4c05c:	mov	r1, r7
   4c060:	bl	12cb8 <memcpy@plt>
   4c064:	add	r4, r4, r8
   4c068:	cmp	sl, r4
   4c06c:	bhi	4c054 <luaL_error@@Base+0x5f68>
   4c070:	b	4bb08 <luaL_error@@Base+0x5a1c>
   4c074:	mov	r1, r9
   4c078:	mov	r0, fp
   4c07c:	str	r2, [sp, #28]
   4c080:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   4c084:	ldr	r2, [sp, #28]
   4c088:	mov	r3, r0
   4c08c:	b	4bfd8 <luaL_error@@Base+0x5eec>
   4c090:	ldr	r3, [r4]
   4c094:	ldr	r1, [r8]
   4c098:	add	r8, sp, #40	; 0x28
   4c09c:	lsr	ip, r3, #28
   4c0a0:	str	r1, [r8, #-4]!
   4c0a4:	mov	r0, #272	; 0x110
   4c0a8:	b	4badc <luaL_error@@Base+0x59f0>
   4c0ac:	mov	r2, r9
   4c0b0:	mov	r1, sl
   4c0b4:	ldr	r0, [r6, #12]
   4c0b8:	bl	3e200 <luaL_typerror@@Base+0x7e94>
   4c0bc:	b	4bf20 <luaL_error@@Base+0x5e34>
   4c0c0:	mov	r9, r2
   4c0c4:	b	4bee0 <luaL_error@@Base+0x5df4>
   4c0c8:	mov	r2, r4
   4c0cc:	add	r1, r6, #12
   4c0d0:	ldr	r0, [r6]
   4c0d4:	bl	13264 <pclose@plt+0x1c8>
   4c0d8:	ldr	r2, [r6, #12]
   4c0dc:	bic	r3, r3, #4
   4c0e0:	ldr	r2, [r2, #8]
   4c0e4:	strb	r3, [sl, #4]
   4c0e8:	ldr	r3, [r2, #48]	; 0x30
   4c0ec:	str	r3, [sl, #12]
   4c0f0:	str	sl, [r2, #48]	; 0x30
   4c0f4:	b	4bf38 <luaL_error@@Base+0x5e4c>
   4c0f8:	cmp	r9, #508	; 0x1fc
   4c0fc:	bcs	4c23c <luaL_error@@Base+0x6150>
   4c100:	ldr	r0, [r6, #180]	; 0xb4
   4c104:	cmp	r0, #0
   4c108:	beq	4c174 <luaL_error@@Base+0x6088>
   4c10c:	ldr	r2, [r6, #188]	; 0xbc
   4c110:	mov	r1, fp
   4c114:	ldr	r0, [r6, #12]
   4c118:	lsl	sl, r2, #1
   4c11c:	cmp	sl, #508	; 0x1fc
   4c120:	movcs	sl, #508	; 0x1fc
   4c124:	cmp	sl, #8
   4c128:	movcc	sl, #8
   4c12c:	lsl	r2, r2, #1
   4c130:	lsl	r3, sl, #1
   4c134:	bl	205b0 <luaL_where@@Base+0x4ac>
   4c138:	sub	r2, sl, r9
   4c13c:	lsl	r3, r9, #1
   4c140:	lsl	r2, r2, #1
   4c144:	str	sl, [r6, #188]	; 0xbc
   4c148:	mov	r1, #0
   4c14c:	str	r3, [sp, #28]
   4c150:	str	r0, [r6, #184]	; 0xb8
   4c154:	mov	fp, r0
   4c158:	add	r0, r0, r3
   4c15c:	bl	12ed4 <memset@plt>
   4c160:	add	r2, r9, #1
   4c164:	ldr	r3, [sp, #28]
   4c168:	b	4befc <luaL_error@@Base+0x5e10>
   4c16c:	ldr	r1, [pc, #216]	; 4c24c <luaL_error@@Base+0x6160>
   4c170:	bl	4a618 <luaL_error@@Base+0x452c>
   4c174:	mov	r2, #0
   4c178:	mov	r3, #0
   4c17c:	mvn	r1, #0
   4c180:	strd	r2, [sp, #8]
   4c184:	str	r1, [sp]
   4c188:	mov	r3, #34	; 0x22
   4c18c:	mov	r2, #3
   4c190:	mov	r1, #4096	; 0x1000
   4c194:	bl	12cc4 <mmap64@plt>
   4c198:	cmn	r0, #1
   4c19c:	mov	sl, r0
   4c1a0:	beq	4c23c <luaL_error@@Base+0x6150>
   4c1a4:	ldr	r2, [pc, #168]	; 4c254 <luaL_error@@Base+0x6168>
   4c1a8:	ldr	r3, [pc, #168]	; 4c258 <luaL_error@@Base+0x616c>
   4c1ac:	ldr	lr, [r6, #16]
   4c1b0:	str	sl, [r6, #180]	; 0xb4
   4c1b4:	str	r2, [sl]
   4c1b8:	str	r3, [sl, #4]
   4c1bc:	add	r2, r2, #33554432	; 0x2000000
   4c1c0:	ldr	r3, [pc, #148]	; 4c25c <luaL_error@@Base+0x6170>
   4c1c4:	add	r2, r2, #17
   4c1c8:	str	r2, [sl, #8]
   4c1cc:	str	r3, [sl, #12]
   4c1d0:	ldr	r2, [pc, #136]	; 4c260 <luaL_error@@Base+0x6174>
   4c1d4:	ldr	r3, [pc, #136]	; 4c264 <luaL_error@@Base+0x6178>
   4c1d8:	add	r1, r0, #4096	; 0x1000
   4c1dc:	ldr	ip, [pc, #132]	; 4c268 <luaL_error@@Base+0x617c>
   4c1e0:	str	r2, [sl, #16]
   4c1e4:	str	r3, [sl, #20]
   4c1e8:	ldr	r2, [pc, #124]	; 4c26c <luaL_error@@Base+0x6180>
   4c1ec:	add	r0, r1, #4
   4c1f0:	add	r3, sl, #36	; 0x24
   4c1f4:	str	lr, [sl, #24]
   4c1f8:	str	r2, [sl, #28]
   4c1fc:	sub	r2, sl, r3
   4c200:	str	ip, [r3, #-4]
   4c204:	asr	r2, r2, #2
   4c208:	sub	r2, r2, #2
   4c20c:	bic	r2, r2, #-16777216	; 0xff000000
   4c210:	orr	r2, r2, #-369098752	; 0xea000000
   4c214:	str	r2, [r3], #8
   4c218:	cmp	r0, r3
   4c21c:	bne	4c1fc <luaL_error@@Base+0x6110>
   4c220:	mov	r0, sl
   4c224:	bl	6e608 <luaL_openlibs@@Base+0x4e48>
   4c228:	mov	r0, sl
   4c22c:	mov	r2, #5
   4c230:	mov	r1, #4096	; 0x1000
   4c234:	bl	12c88 <mprotect@plt>
   4c238:	b	4c10c <luaL_error@@Base+0x6020>
   4c23c:	ldr	r0, [r6, #12]
   4c240:	ldr	r1, [pc, #40]	; 4c270 <luaL_error@@Base+0x6184>
   4c244:	bl	35a48 <lua_error@@Base+0xa8>
   4c248:			; <UNDEFINED> instruction: 0x00070cb0
   4c24c:	andeq	r0, r0, pc, ror ip
   4c250:			; <UNDEFINED> instruction: 0xf0800000
   4c254:	sub	ip, ip, pc
   4c258:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4c25c:	str	ip, [sp, #-92]!	; 0xffffffa4
   4c260:	ldr	ip, [pc]	; 4c268 <luaL_error@@Base+0x617c>
   4c264:	ldr	pc, [pc]	; 4c26c <luaL_error@@Base+0x6180>
   4c268:	mov	ip, pc
   4c26c:	andeq	sp, r6, ip, ror r9
   4c270:	andeq	r0, r0, r9, lsr lr
   4c274:	ands	ip, r1, #134217728	; 0x8000000
   4c278:	push	{r4, r5, r6, lr}
   4c27c:	mov	r4, r1
   4c280:	sub	sp, sp, #16
   4c284:	mov	r6, r0
   4c288:	mov	r5, r2
   4c28c:	ldr	r1, [r0]
   4c290:	bne	4c328 <luaL_error@@Base+0x623c>
   4c294:	tst	r4, #8388608	; 0x800000
   4c298:	moveq	r2, #144	; 0x90
   4c29c:	movne	r2, #160	; 0xa0
   4c2a0:	add	r1, r1, r2
   4c2a4:	str	ip, [sp]
   4c2a8:	add	r2, sp, #12
   4c2ac:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4c2b0:	lsr	r3, r4, #8
   4c2b4:	lsr	r2, r4, #16
   4c2b8:	and	r1, r3, #127	; 0x7f
   4c2bc:	and	r4, r4, #127	; 0x7f
   4c2c0:	and	r2, r2, #127	; 0x7f
   4c2c4:	add	r3, r4, r1
   4c2c8:	cmp	r3, r2, lsl #3
   4c2cc:	bhi	4c360 <luaL_error@@Base+0x6274>
   4c2d0:	mvn	r3, #0
   4c2d4:	cmp	r2, #2
   4c2d8:	mvn	r3, r3, lsl r1
   4c2dc:	ldr	r1, [sp, #12]
   4c2e0:	lsl	r3, r3, r4
   4c2e4:	and	r4, r3, r1, lsl r4
   4c2e8:	beq	4c348 <luaL_error@@Base+0x625c>
   4c2ec:	cmp	r2, #4
   4c2f0:	beq	4c310 <luaL_error@@Base+0x6224>
   4c2f4:	cmp	r2, #1
   4c2f8:	ldrbeq	r1, [r5]
   4c2fc:	biceq	r3, r1, r3
   4c300:	orreq	r4, r3, r4
   4c304:	strbeq	r4, [r5]
   4c308:	add	sp, sp, #16
   4c30c:	pop	{r4, r5, r6, pc}
   4c310:	ldr	r1, [r5]
   4c314:	bic	r3, r1, r3
   4c318:	orr	r4, r3, r4
   4c31c:	str	r4, [r5]
   4c320:	add	sp, sp, #16
   4c324:	pop	{r4, r5, r6, pc}
   4c328:	mov	r2, #0
   4c32c:	str	r2, [sp]
   4c330:	add	r1, r1, #48	; 0x30
   4c334:	add	r2, sp, #11
   4c338:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4c33c:	ldrb	r3, [sp, #11]
   4c340:	str	r3, [sp, #12]
   4c344:	b	4c2b0 <luaL_error@@Base+0x61c4>
   4c348:	ldrh	r1, [r5]
   4c34c:	bic	r3, r1, r3
   4c350:	orr	r4, r3, r4
   4c354:	strh	r4, [r5]
   4c358:	add	sp, sp, #16
   4c35c:	pop	{r4, r5, r6, pc}
   4c360:	ldr	r0, [r6, #12]
   4c364:	ldr	r1, [pc]	; 4c36c <luaL_error@@Base+0x6280>
   4c368:	bl	35a48 <lua_error@@Base+0xa8>
   4c36c:	andeq	r0, r0, ip, asr #28
   4c370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4c374:	sub	sp, sp, #36	; 0x24
   4c378:	subs	r5, r2, #0
   4c37c:	str	r1, [sp, #20]
   4c380:	str	r3, [sp, #16]
   4c384:	ldr	r9, [sp, #72]	; 0x48
   4c388:	beq	4c4e0 <luaL_error@@Base+0x63f4>
   4c38c:	mov	r8, r0
   4c390:	ldr	fp, [pc, #524]	; 4c5a4 <luaL_error@@Base+0x64b8>
   4c394:	b	4c3b0 <luaL_error@@Base+0x62c4>
   4c398:	ldr	r1, [pc, #520]	; 4c5a8 <luaL_error@@Base+0x64bc>
   4c39c:	and	r3, r2, fp
   4c3a0:	cmp	r3, r1
   4c3a4:	beq	4c4e8 <luaL_error@@Base+0x63fc>
   4c3a8:	cmp	r5, #0
   4c3ac:	beq	4c4e0 <luaL_error@@Base+0x63f4>
   4c3b0:	ldr	r4, [r8]
   4c3b4:	lsl	r6, r5, #4
   4c3b8:	add	r7, r4, r6
   4c3bc:	ldr	r2, [r4, r6]
   4c3c0:	ldrh	r5, [r7, #8]
   4c3c4:	lsr	r3, r2, #28
   4c3c8:	sub	r3, r3, #9
   4c3cc:	cmp	r3, #1
   4c3d0:	bhi	4c398 <luaL_error@@Base+0x62ac>
   4c3d4:	ldr	r1, [r7, #12]
   4c3d8:	cmp	r1, #0
   4c3dc:	beq	4c3a8 <luaL_error@@Base+0x62bc>
   4c3e0:	ldr	r3, [sp, #76]	; 0x4c
   4c3e4:	ldr	sl, [r3]
   4c3e8:	cmp	sl, #0
   4c3ec:	blt	4c458 <luaL_error@@Base+0x636c>
   4c3f0:	ldr	r3, [r9, #24]
   4c3f4:	mov	r1, r4
   4c3f8:	mov	r2, r1
   4c3fc:	mov	r4, r3
   4c400:	mov	r3, r6
   4c404:	mov	r6, sl
   4c408:	cmp	r4, sl
   4c40c:	bls	4c564 <luaL_error@@Base+0x6478>
   4c410:	ldr	r0, [r9, #8]
   4c414:	add	r0, r0, sl, lsl #3
   4c418:	cmp	r0, #0
   4c41c:	beq	4c42c <luaL_error@@Base+0x6340>
   4c420:	ldr	r1, [r0, #4]
   4c424:	cmn	r1, #1
   4c428:	bne	4c58c <luaL_error@@Base+0x64a0>
   4c42c:	cmp	sl, #0
   4c430:	beq	4c584 <luaL_error@@Base+0x6498>
   4c434:	mov	sl, r6
   4c438:	cmp	sl, #0
   4c43c:	mov	r6, r3
   4c440:	mov	r4, r2
   4c444:	bne	4c4e0 <luaL_error@@Base+0x63f4>
   4c448:	ldr	r2, [sp, #76]	; 0x4c
   4c44c:	mvn	r3, #0
   4c450:	str	r3, [r2]
   4c454:	ldr	r1, [r7, #12]
   4c458:	ldr	r3, [r9, #28]
   4c45c:	ldr	r2, [r1, #8]
   4c460:	ldr	r0, [r9, #20]
   4c464:	and	r3, r3, r2
   4c468:	add	r3, r3, r3, lsl #1
   4c46c:	add	r3, r0, r3, lsl #3
   4c470:	b	4c480 <luaL_error@@Base+0x6394>
   4c474:	ldr	r3, [r3, #16]
   4c478:	cmp	r3, #0
   4c47c:	beq	4c3a8 <luaL_error@@Base+0x62bc>
   4c480:	ldr	r2, [r3, #12]
   4c484:	cmn	r2, #5
   4c488:	bne	4c474 <luaL_error@@Base+0x6388>
   4c48c:	ldr	r2, [r3, #8]
   4c490:	cmp	r1, r2
   4c494:	bne	4c474 <luaL_error@@Base+0x6388>
   4c498:	ldr	r2, [r3, #4]
   4c49c:	mov	r0, r3
   4c4a0:	cmn	r2, #1
   4c4a4:	beq	4c3a8 <luaL_error@@Base+0x62bc>
   4c4a8:	ldr	r1, [r4, r6]
   4c4ac:	ldr	r2, [r7, #4]
   4c4b0:	lsr	r3, r1, #28
   4c4b4:	cmp	r3, #9
   4c4b8:	ldr	r3, [sp, #16]
   4c4bc:	add	r2, r3, r2
   4c4c0:	beq	4c530 <luaL_error@@Base+0x6444>
   4c4c4:	mov	r3, r0
   4c4c8:	mov	r0, r8
   4c4cc:	bl	4c274 <luaL_error@@Base+0x6188>
   4c4d0:	ldr	r3, [sp, #20]
   4c4d4:	ldr	r3, [r3]
   4c4d8:	tst	r3, #8388608	; 0x800000
   4c4dc:	beq	4c3a8 <luaL_error@@Base+0x62bc>
   4c4e0:	add	sp, sp, #36	; 0x24
   4c4e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4c4e8:	uxth	r1, r2
   4c4ec:	ldr	r2, [r4, r1, lsl #4]
   4c4f0:	add	r1, r4, r1, lsl #4
   4c4f4:	lsr	r3, r2, #28
   4c4f8:	cmp	r3, #8
   4c4fc:	beq	4c4e8 <luaL_error@@Base+0x63fc>
   4c500:	ldr	r3, [r7, #4]
   4c504:	ldr	r0, [sp, #16]
   4c508:	ldrh	r2, [r1, #8]
   4c50c:	add	r3, r0, r3
   4c510:	ldr	r0, [sp, #80]	; 0x50
   4c514:	str	r9, [sp]
   4c518:	str	r0, [sp, #8]
   4c51c:	ldr	r0, [sp, #76]	; 0x4c
   4c520:	str	r0, [sp, #4]
   4c524:	mov	r0, r8
   4c528:	bl	4c370 <luaL_error@@Base+0x6284>
   4c52c:	b	4c3a8 <luaL_error@@Base+0x62bc>
   4c530:	uxth	ip, r1
   4c534:	ldr	r1, [r4, ip, lsl #4]
   4c538:	add	ip, r4, ip, lsl #4
   4c53c:	lsr	r3, r1, #28
   4c540:	cmp	r3, #8
   4c544:	beq	4c530 <luaL_error@@Base+0x6444>
   4c548:	ldr	r3, [sp, #80]	; 0x50
   4c54c:	mov	r1, ip
   4c550:	str	r3, [sp]
   4c554:	mov	r3, r0
   4c558:	mov	r0, r8
   4c55c:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4c560:	b	4c4d0 <luaL_error@@Base+0x63e4>
   4c564:	mov	r1, sl
   4c568:	mov	r0, r9
   4c56c:	str	r2, [sp, #28]
   4c570:	str	r3, [sp, #24]
   4c574:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   4c578:	ldr	r2, [sp, #28]
   4c57c:	ldr	r3, [sp, #24]
   4c580:	b	4c418 <luaL_error@@Base+0x632c>
   4c584:	mov	sl, #1
   4c588:	b	4c408 <luaL_error@@Base+0x631c>
   4c58c:	mov	r6, r3
   4c590:	ldr	r3, [sp, #76]	; 0x4c
   4c594:	mov	r4, r2
   4c598:	add	r2, sl, #1
   4c59c:	str	r2, [r3]
   4c5a0:	b	4c4a8 <luaL_error@@Base+0x63bc>
   4c5a4:			; <UNDEFINED> instruction: 0xf0ff0000
   4c5a8:	andhi	r0, r3, r0
   4c5ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4c5b0:	mov	r3, #0
   4c5b4:	sub	sp, sp, #36	; 0x24
   4c5b8:	ldr	r7, [r0, #16]
   4c5bc:	ldr	r5, [r0, #20]
   4c5c0:	add	r8, sp, #32
   4c5c4:	mov	r4, r0
   4c5c8:	mov	r6, r3
   4c5cc:	str	r3, [r8, #-12]!
   4c5d0:	add	r6, r6, #1
   4c5d4:	add	r7, r7, #8
   4c5d8:	mov	r1, r6
   4c5dc:	mov	r2, r8
   4c5e0:	mov	r0, r4
   4c5e4:	bl	4adb0 <luaL_error@@Base+0x4cc4>
   4c5e8:	cmp	r5, r7
   4c5ec:	bhi	4c5d0 <luaL_error@@Base+0x64e4>
   4c5f0:	ldr	r0, [sp, #20]
   4c5f4:	cmp	r0, #0
   4c5f8:	bne	4c604 <luaL_error@@Base+0x6518>
   4c5fc:	add	sp, sp, #36	; 0x24
   4c600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4c604:	ldr	r6, [r4, #16]
   4c608:	ldr	ip, [r4, #8]
   4c60c:	mov	r3, #0
   4c610:	ldr	r1, [r6, #-8]
   4c614:	ldr	r9, [ip, #228]	; 0xe4
   4c618:	str	r3, [sp, #12]
   4c61c:	ldrb	r7, [r1, #6]
   4c620:	ldr	r8, [r9]
   4c624:	str	r4, [r9, #12]
   4c628:	sub	r7, r7, #73	; 0x49
   4c62c:	add	r8, r8, r0, lsl #4
   4c630:	asr	fp, r7, #31
   4c634:	lsr	r2, fp, #31
   4c638:	rsbs	sl, r2, #0
   4c63c:	rsc	fp, r3, #0
   4c640:	ldr	r3, [sp, #12]
   4c644:	add	r2, sp, #24
   4c648:	str	r3, [sp]
   4c64c:	mov	r1, r8
   4c650:	mov	r3, r6
   4c654:	mov	r0, r9
   4c658:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4c65c:	ldrd	r2, [sp, #24]
   4c660:	cmp	r7, #0
   4c664:	andlt	sl, sl, r2
   4c668:	andlt	fp, fp, r3
   4c66c:	blt	4c680 <luaL_error@@Base+0x6594>
   4c670:	orreq	sl, sl, r2
   4c674:	orreq	fp, fp, r3
   4c678:	eorne	sl, sl, r2
   4c67c:	eorne	fp, fp, r3
   4c680:	add	r6, r6, #8
   4c684:	cmp	r5, r6
   4c688:	bhi	4c640 <luaL_error@@Base+0x6554>
   4c68c:	mov	r1, #16
   4c690:	mov	r0, r4
   4c694:	ldr	r5, [sp, #20]
   4c698:	bl	32a24 <luaL_where@@Base+0x12920>
   4c69c:	mov	r2, #10
   4c6a0:	mvn	r1, #10
   4c6a4:	strb	r2, [r0, #5]
   4c6a8:	ldr	r2, [r4, #16]
   4c6ac:	mov	r3, r0
   4c6b0:	strh	r5, [r0, #6]
   4c6b4:	strd	sl, [r0, #8]
   4c6b8:	mov	r0, #2
   4c6bc:	str	r3, [r2, #-8]
   4c6c0:	str	r1, [r2, #-4]
   4c6c4:	add	sp, sp, #36	; 0x24
   4c6c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4c6cc:	push	{r4, r5, r6, lr}
   4c6d0:	sub	r6, r1, #-536870911	; 0xe0000001
   4c6d4:	ldr	r4, [r0, #8]
   4c6d8:	ldr	r3, [r0, #16]
   4c6dc:	ldr	r5, [r0, #20]
   4c6e0:	ldr	r4, [r4, #228]	; 0xe4
   4c6e4:	add	r3, r3, r6, lsl #3
   4c6e8:	cmp	r5, r3
   4c6ec:	sub	sp, sp, #16
   4c6f0:	str	r0, [r4, #12]
   4c6f4:	bls	4c724 <luaL_error@@Base+0x6638>
   4c6f8:	mov	lr, r1
   4c6fc:	ldr	r1, [r4]
   4c700:	lsl	lr, lr, #8
   4c704:	add	r1, r1, r2, lsl #4
   4c708:	mov	r0, r4
   4c70c:	str	lr, [sp]
   4c710:	add	r2, sp, #12
   4c714:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4c718:	ldr	r0, [sp, #12]
   4c71c:	add	sp, sp, #16
   4c720:	pop	{r4, r5, r6, pc}
   4c724:	ldr	r2, [pc]	; 4c72c <luaL_error@@Base+0x6640>
   4c728:	bl	361d0 <luaL_argerror@@Base+0x8>
   4c72c:	andeq	r0, r0, r7, lsr #4
   4c730:	push	{r4, r5, lr}
   4c734:	sub	r5, r1, #-536870911	; 0xe0000001
   4c738:	ldr	lr, [r0, #8]
   4c73c:	ldr	r3, [r0, #16]
   4c740:	ldr	r4, [r0, #20]
   4c744:	ldr	lr, [lr, #228]	; 0xe4
   4c748:	add	r3, r3, r5, lsl #3
   4c74c:	cmp	r4, r3
   4c750:	sub	sp, sp, #20
   4c754:	str	r0, [lr, #12]
   4c758:	bls	4c788 <luaL_error@@Base+0x669c>
   4c75c:	mov	ip, r1
   4c760:	ldr	r1, [lr]
   4c764:	lsl	ip, ip, #8
   4c768:	mov	r0, lr
   4c76c:	str	ip, [sp]
   4c770:	add	r1, r1, #144	; 0x90
   4c774:	add	r2, sp, #12
   4c778:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4c77c:	ldr	r0, [sp, #12]
   4c780:	add	sp, sp, #20
   4c784:	pop	{r4, r5, pc}
   4c788:	ldr	r2, [pc]	; 4c790 <luaL_error@@Base+0x66a4>
   4c78c:	bl	361d0 <luaL_argerror@@Base+0x8>
   4c790:	andeq	r0, r0, r7, lsr #4
   4c794:	push	{r4, r5, r6, lr}
   4c798:	mov	r2, #17
   4c79c:	mov	r1, #1
   4c7a0:	mov	r4, r0
   4c7a4:	bl	4c6cc <luaL_error@@Base+0x65e0>
   4c7a8:	mov	r1, #2
   4c7ac:	mov	r5, r0
   4c7b0:	mov	r0, r4
   4c7b4:	bl	4c730 <luaL_error@@Base+0x6644>
   4c7b8:	ldr	r3, [r4, #16]
   4c7bc:	ldr	r1, [r4, #20]
   4c7c0:	add	r2, r3, #16
   4c7c4:	cmp	r1, r2
   4c7c8:	mov	r6, r0
   4c7cc:	bls	4c7f0 <luaL_error@@Base+0x6704>
   4c7d0:	ldr	r3, [r3, #20]
   4c7d4:	cmn	r3, #1
   4c7d8:	beq	4c7f0 <luaL_error@@Base+0x6704>
   4c7dc:	mov	r1, #3
   4c7e0:	mov	r0, r4
   4c7e4:	bl	4c730 <luaL_error@@Base+0x6644>
   4c7e8:	mov	r1, r0
   4c7ec:	b	4c7f4 <luaL_error@@Base+0x6708>
   4c7f0:	mov	r1, #0
   4c7f4:	mov	r2, r6
   4c7f8:	mov	r0, r5
   4c7fc:	bl	12ed4 <memset@plt>
   4c800:	mov	r0, #0
   4c804:	pop	{r4, r5, r6, pc}
   4c808:	push	{r4, r5, r6, lr}
   4c80c:	mov	r2, #17
   4c810:	mov	r1, #1
   4c814:	mov	r4, r0
   4c818:	bl	4c6cc <luaL_error@@Base+0x65e0>
   4c81c:	mov	r2, #18
   4c820:	mov	r1, #2
   4c824:	mov	r5, r0
   4c828:	mov	r0, r4
   4c82c:	bl	4c6cc <luaL_error@@Base+0x65e0>
   4c830:	ldr	r3, [r4, #16]
   4c834:	ldr	r2, [r3, #12]
   4c838:	cmn	r2, #5
   4c83c:	mov	r6, r0
   4c840:	bne	4c854 <luaL_error@@Base+0x6768>
   4c844:	ldr	r1, [r4, #20]
   4c848:	add	r2, r3, #16
   4c84c:	cmp	r1, r2
   4c850:	bls	4c878 <luaL_error@@Base+0x678c>
   4c854:	mov	r0, r4
   4c858:	mov	r1, #3
   4c85c:	bl	4c730 <luaL_error@@Base+0x6644>
   4c860:	mov	r2, r0
   4c864:	mov	r1, r6
   4c868:	mov	r0, r5
   4c86c:	bl	12cb8 <memcpy@plt>
   4c870:	mov	r0, #0
   4c874:	pop	{r4, r5, r6, pc}
   4c878:	ldr	r3, [r3, #8]
   4c87c:	ldr	r2, [r3, #12]
   4c880:	add	r2, r2, #1
   4c884:	b	4c864 <luaL_error@@Base+0x6778>
   4c888:	push	{r4, r5, r6, lr}
   4c88c:	mov	r4, r0
   4c890:	bl	12eb0 <__errno_location@plt>
   4c894:	ldrd	r2, [r4, #16]
   4c898:	cmp	r3, r2
   4c89c:	ldr	r6, [r0]
   4c8a0:	bls	4c8bc <luaL_error@@Base+0x67d0>
   4c8a4:	mov	r5, r0
   4c8a8:	mov	r1, #1
   4c8ac:	mov	r0, r4
   4c8b0:	bl	4c730 <luaL_error@@Base+0x6644>
   4c8b4:	ldr	r3, [r4, #20]
   4c8b8:	str	r0, [r5]
   4c8bc:	add	r1, r3, #8
   4c8c0:	mvn	r2, #13
   4c8c4:	str	r1, [r4, #20]
   4c8c8:	mov	r0, #1
   4c8cc:	str	r6, [r3]
   4c8d0:	str	r2, [r3, #4]
   4c8d4:	pop	{r4, r5, r6, pc}
   4c8d8:	ldr	r3, [r0, #8]
   4c8dc:	push	{r4, r5, r6, lr}
   4c8e0:	mov	r5, r0
   4c8e4:	ldr	r6, [r3, #228]	; 0xe4
   4c8e8:	mov	r2, #0
   4c8ec:	mov	r1, r6
   4c8f0:	str	r0, [r6, #12]
   4c8f4:	bl	372b0 <luaL_typerror@@Base+0xf44>
   4c8f8:	ldr	r3, [r5, #16]
   4c8fc:	ldr	r2, [r3, #4]
   4c900:	cmn	r2, #11
   4c904:	beq	4c9ac <luaL_error@@Base+0x68c0>
   4c908:	ldr	ip, [r6]
   4c90c:	ldr	lr, [pc, #176]	; 4c9c4 <luaL_error@@Base+0x68d8>
   4c910:	add	r4, ip, r0, lsl #4
   4c914:	b	4c91c <luaL_error@@Base+0x6830>
   4c918:	add	r4, ip, r1, lsl #4
   4c91c:	ldr	r3, [r4]
   4c920:	and	r0, r3, lr
   4c924:	lsr	r2, r3, #28
   4c928:	cmp	r2, #8
   4c92c:	uxth	r1, r3
   4c930:	beq	4c918 <luaL_error@@Base+0x682c>
   4c934:	cmp	r0, #545259520	; 0x20800000
   4c938:	beq	4c918 <luaL_error@@Base+0x682c>
   4c93c:	ldr	r0, [pc, #132]	; 4c9c8 <luaL_error@@Base+0x68dc>
   4c940:	ldr	r1, [pc, #132]	; 4c9cc <luaL_error@@Base+0x68e0>
   4c944:	and	r3, r3, r0
   4c948:	cmp	r3, r1
   4c94c:	beq	4c98c <luaL_error@@Base+0x68a0>
   4c950:	cmp	r2, #5
   4c954:	bhi	4c978 <luaL_error@@Base+0x688c>
   4c958:	ldr	r0, [r4, #4]
   4c95c:	cmn	r0, #1
   4c960:	beq	4c978 <luaL_error@@Base+0x688c>
   4c964:	ldr	r3, [r5, #20]
   4c968:	mvn	r2, #13
   4c96c:	stmdb	r3, {r0, r2}
   4c970:	mov	r0, #1
   4c974:	pop	{r4, r5, r6, pc}
   4c978:	ldr	r3, [r5, #20]
   4c97c:	mvn	r2, #0
   4c980:	mov	r0, #1
   4c984:	str	r2, [r3, #-4]
   4c988:	pop	{r4, r5, r6, pc}
   4c98c:	mov	r1, #2
   4c990:	mov	r0, r5
   4c994:	bl	4c730 <luaL_error@@Base+0x6644>
   4c998:	mov	r1, r4
   4c99c:	mov	r2, r0
   4c9a0:	ldr	r0, [r6]
   4c9a4:	bl	1b6c4 <_start@@Base+0x8314>
   4c9a8:	b	4c95c <luaL_error@@Base+0x6870>
   4c9ac:	ldr	r3, [r3]
   4c9b0:	ldrsb	r2, [r3, #4]
   4c9b4:	cmp	r2, #0
   4c9b8:	ldrlt	r0, [r3, #-4]
   4c9bc:	bge	4c908 <luaL_error@@Base+0x681c>
   4c9c0:	b	4c964 <luaL_error@@Base+0x6878>
   4c9c4:			; <UNDEFINED> instruction: 0xf0800000
   4c9c8:	andsle	r0, r0, r0
   4c9cc:	andsne	r0, r0, r0
   4c9d0:	ldr	r2, [r0, #8]
   4c9d4:	push	{r4, r5, r6, r7, r8, lr}
   4c9d8:	sub	sp, sp, #16
   4c9dc:	ldr	r5, [r0, #16]
   4c9e0:	ldr	r3, [r0, #20]
   4c9e4:	ldr	r6, [r2, #228]	; 0xe4
   4c9e8:	cmp	r5, r3
   4c9ec:	str	r0, [r6, #12]
   4c9f0:	bcs	4cac4 <luaL_error@@Base+0x69d8>
   4c9f4:	add	r7, r5, #8
   4c9f8:	cmp	r7, r3
   4c9fc:	mov	r4, r0
   4ca00:	bcs	4ca10 <luaL_error@@Base+0x6924>
   4ca04:	ldr	r3, [r5, #12]
   4ca08:	cmn	r3, #1
   4ca0c:	bne	4ca7c <luaL_error@@Base+0x6990>
   4ca10:	ldr	r1, [r6]
   4ca14:	mov	r3, #256	; 0x100
   4ca18:	mov	r0, r6
   4ca1c:	add	r1, r1, #304	; 0x130
   4ca20:	str	r3, [sp]
   4ca24:	add	r2, sp, #12
   4ca28:	mov	r3, r5
   4ca2c:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4ca30:	ldr	r6, [sp, #12]
   4ca34:	mov	r0, r6
   4ca38:	bl	12e80 <strlen@plt>
   4ca3c:	mov	r8, r0
   4ca40:	mov	r2, r8
   4ca44:	str	r7, [r4, #20]
   4ca48:	mov	r1, r6
   4ca4c:	mov	r0, r4
   4ca50:	bl	20260 <luaL_where@@Base+0x15c>
   4ca54:	ldr	r3, [r4, #8]
   4ca58:	mvn	r2, #4
   4ca5c:	str	r2, [r5, #4]
   4ca60:	ldrd	r2, [r3, #20]
   4ca64:	cmp	r2, r3
   4ca68:	str	r0, [r5]
   4ca6c:	bcs	4cab0 <luaL_error@@Base+0x69c4>
   4ca70:	mov	r0, #1
   4ca74:	add	sp, sp, #16
   4ca78:	pop	{r4, r5, r6, r7, r8, pc}
   4ca7c:	mov	r1, #2
   4ca80:	bl	4c730 <luaL_error@@Base+0x6644>
   4ca84:	ldr	r1, [r6]
   4ca88:	mov	r3, #256	; 0x100
   4ca8c:	str	r3, [sp]
   4ca90:	add	r1, r1, #288	; 0x120
   4ca94:	mov	r3, r5
   4ca98:	add	r2, sp, #12
   4ca9c:	mov	r8, r0
   4caa0:	mov	r0, r6
   4caa4:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4caa8:	ldr	r6, [sp, #12]
   4caac:	b	4ca40 <luaL_error@@Base+0x6954>
   4cab0:	mov	r0, r4
   4cab4:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   4cab8:	mov	r0, #1
   4cabc:	add	sp, sp, #16
   4cac0:	pop	{r4, r5, r6, r7, r8, pc}
   4cac4:	ldr	r2, [pc, #4]	; 4cad0 <luaL_error@@Base+0x69e4>
   4cac8:	mov	r1, #1
   4cacc:	bl	361d0 <luaL_argerror@@Base+0x8>
   4cad0:	andeq	r0, r0, r7, lsr #4
   4cad4:	ldr	r3, [r0, #8]
   4cad8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4cadc:	mov	r2, #0
   4cae0:	ldr	r7, [r3, #228]	; 0xe4
   4cae4:	sub	sp, sp, #8
   4cae8:	mov	r1, r7
   4caec:	str	r0, [r7, #12]
   4caf0:	mov	r5, r0
   4caf4:	bl	372b0 <luaL_typerror@@Base+0xf44>
   4caf8:	mov	r8, r0
   4cafc:	ldr	r0, [r7]
   4cb00:	add	r4, r0, r8, lsl #4
   4cb04:	ldr	r3, [r0, r8, lsl #4]
   4cb08:	lsr	r2, r3, #28
   4cb0c:	cmp	r2, #8
   4cb10:	bne	4cb2c <luaL_error@@Base+0x6a40>
   4cb14:	uxth	r1, r3
   4cb18:	ldr	r3, [r0, r1, lsl #4]
   4cb1c:	add	r4, r0, r1, lsl #4
   4cb20:	lsr	r2, r3, #28
   4cb24:	cmp	r2, #8
   4cb28:	beq	4cb14 <luaL_error@@Base+0x6a28>
   4cb2c:	ldr	r6, [r5, #16]
   4cb30:	ldr	r3, [r5, #20]
   4cb34:	add	sl, r6, #8
   4cb38:	cmp	sl, r3
   4cb3c:	bcs	4cbe4 <luaL_error@@Base+0x6af8>
   4cb40:	and	r3, r2, #13
   4cb44:	cmp	r2, #5
   4cb48:	cmpne	r3, #0
   4cb4c:	add	r3, r6, #16
   4cb50:	str	r3, [r5, #20]
   4cb54:	bne	4cbf4 <luaL_error@@Base+0x6b08>
   4cb58:	ldr	r3, [r6, #12]
   4cb5c:	cmn	r3, #11
   4cb60:	bne	4cb74 <luaL_error@@Base+0x6a88>
   4cb64:	ldr	r3, [r6, #8]
   4cb68:	ldrh	r3, [r3, #6]
   4cb6c:	cmp	r3, r8
   4cb70:	beq	4cbcc <luaL_error@@Base+0x6ae0>
   4cb74:	ldr	r1, [r4, #4]
   4cb78:	ldr	r0, [r7, #12]
   4cb7c:	add	r1, r1, #8
   4cb80:	bl	32a24 <luaL_where@@Base+0x12920>
   4cb84:	mov	r2, #10
   4cb88:	mov	ip, #1
   4cb8c:	mov	r3, sl
   4cb90:	mov	r1, r4
   4cb94:	mov	r9, r0
   4cb98:	strh	r8, [r0, #6]
   4cb9c:	strb	r2, [r9, #5]
   4cba0:	mov	r0, r7
   4cba4:	add	r2, r9, #8
   4cba8:	str	ip, [sp]
   4cbac:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4cbb0:	ldr	r3, [r5, #8]
   4cbb4:	str	r9, [r6, #8]
   4cbb8:	mvn	r1, #10
   4cbbc:	ldrd	r2, [r3, #20]
   4cbc0:	str	r1, [r6, #12]
   4cbc4:	cmp	r2, r3
   4cbc8:	bcs	4cbd8 <luaL_error@@Base+0x6aec>
   4cbcc:	mov	r0, #1
   4cbd0:	add	sp, sp, #8
   4cbd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4cbd8:	mov	r0, r5
   4cbdc:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   4cbe0:	b	4cbcc <luaL_error@@Base+0x6ae0>
   4cbe4:	mov	r0, r5
   4cbe8:	ldr	r2, [pc, #20]	; 4cc04 <luaL_error@@Base+0x6b18>
   4cbec:	mov	r1, #2
   4cbf0:	bl	361d0 <luaL_argerror@@Base+0x8>
   4cbf4:	mov	r0, r5
   4cbf8:	mov	r2, #2976	; 0xba0
   4cbfc:	mov	r1, #1
   4cc00:	bl	361d0 <luaL_argerror@@Base+0x8>
   4cc04:	andeq	r0, r0, r7, lsr #4
   4cc08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4cc0c:	sub	sp, sp, #20
   4cc10:	subs	r4, r2, #0
   4cc14:	ldr	r9, [sp, #60]	; 0x3c
   4cc18:	ldr	r8, [sp, #64]	; 0x40
   4cc1c:	beq	4ccc4 <luaL_error@@Base+0x6bd8>
   4cc20:	mov	r5, r0
   4cc24:	mov	sl, r1
   4cc28:	mov	fp, r3
   4cc2c:	ldr	r7, [pc, #272]	; 4cd44 <luaL_error@@Base+0x6c58>
   4cc30:	ldr	r6, [pc, #272]	; 4cd48 <luaL_error@@Base+0x6c5c>
   4cc34:	b	4cc4c <luaL_error@@Base+0x6b60>
   4cc38:	and	r3, r0, r7
   4cc3c:	cmp	r3, r6
   4cc40:	beq	4cd04 <luaL_error@@Base+0x6c18>
   4cc44:	cmp	r4, #0
   4cc48:	beq	4ccc4 <luaL_error@@Base+0x6bd8>
   4cc4c:	ldr	r2, [r5]
   4cc50:	lsl	r1, r4, #4
   4cc54:	add	ip, r2, r1
   4cc58:	ldr	r0, [r2, r1]
   4cc5c:	ldrh	r4, [ip, #8]
   4cc60:	lsr	r3, r0, #28
   4cc64:	sub	r3, r3, #9
   4cc68:	cmp	r3, #1
   4cc6c:	bhi	4cc38 <luaL_error@@Base+0x6b4c>
   4cc70:	ldr	r3, [ip, #12]
   4cc74:	cmp	r3, #0
   4cc78:	beq	4cc44 <luaL_error@@Base+0x6b58>
   4cc7c:	ldr	r3, [r8]
   4cc80:	cmp	r3, r9
   4cc84:	bcs	4ccc4 <luaL_error@@Base+0x6bd8>
   4cc88:	add	r0, r3, #1
   4cc8c:	str	r0, [r8]
   4cc90:	ldr	r1, [r2, r1]
   4cc94:	ldr	r0, [sp, #56]	; 0x38
   4cc98:	add	r3, r0, r3, lsl #3
   4cc9c:	lsr	r0, r1, #28
   4cca0:	cmp	r0, #9
   4cca4:	beq	4cccc <luaL_error@@Base+0x6be0>
   4cca8:	ldr	r2, [ip, #4]
   4ccac:	mov	r0, r5
   4ccb0:	add	r2, fp, r2
   4ccb4:	bl	4c274 <luaL_error@@Base+0x6188>
   4ccb8:	ldr	r3, [sl]
   4ccbc:	tst	r3, #8388608	; 0x800000
   4ccc0:	beq	4cc44 <luaL_error@@Base+0x6b58>
   4ccc4:	add	sp, sp, #20
   4ccc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4cccc:	uxth	r0, r1
   4ccd0:	ldr	r1, [r2, r0, lsl #4]
   4ccd4:	add	r0, r2, r0, lsl #4
   4ccd8:	lsr	lr, r1, #28
   4ccdc:	cmp	lr, #8
   4cce0:	beq	4cccc <luaL_error@@Base+0x6be0>
   4cce4:	ldr	r2, [ip, #4]
   4cce8:	mov	r1, #0
   4ccec:	str	r1, [sp]
   4ccf0:	add	r2, fp, r2
   4ccf4:	mov	r1, r0
   4ccf8:	mov	r0, r5
   4ccfc:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4cd00:	b	4ccb8 <luaL_error@@Base+0x6bcc>
   4cd04:	uxth	r1, r0
   4cd08:	ldr	r0, [r2, r1, lsl #4]
   4cd0c:	add	r1, r2, r1, lsl #4
   4cd10:	lsr	r3, r0, #28
   4cd14:	cmp	r3, #8
   4cd18:	beq	4cd04 <luaL_error@@Base+0x6c18>
   4cd1c:	ldr	r3, [ip, #4]
   4cd20:	ldr	r0, [sp, #56]	; 0x38
   4cd24:	ldrh	r2, [r1, #8]
   4cd28:	add	r3, fp, r3
   4cd2c:	str	r0, [sp]
   4cd30:	str	r8, [sp, #8]
   4cd34:	str	r9, [sp, #4]
   4cd38:	mov	r0, r5
   4cd3c:	bl	4cc08 <luaL_error@@Base+0x6b1c>
   4cd40:	b	4ccb8 <luaL_error@@Base+0x6bcc>
   4cd44:			; <UNDEFINED> instruction: 0xf0ff0000
   4cd48:	andhi	r0, r3, r0
   4cd4c:	ldr	r3, [r0, #8]
   4cd50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4cd54:	mov	r2, #0
   4cd58:	ldr	r7, [r3, #228]	; 0xe4
   4cd5c:	sub	sp, sp, #60	; 0x3c
   4cd60:	mov	r1, r7
   4cd64:	str	r0, [r7, #12]
   4cd68:	mov	r6, r0
   4cd6c:	bl	372b0 <luaL_typerror@@Base+0xf44>
   4cd70:	mov	r8, r0
   4cd74:	ldr	r0, [r7]
   4cd78:	add	r4, r0, r8, lsl #4
   4cd7c:	ldr	r3, [r0, r8, lsl #4]
   4cd80:	lsr	r2, r3, #28
   4cd84:	cmp	r2, #8
   4cd88:	bne	4cda4 <luaL_error@@Base+0x6cb8>
   4cd8c:	uxth	r4, r3
   4cd90:	ldr	r3, [r0, r4, lsl #4]
   4cd94:	add	r4, r0, r4, lsl #4
   4cd98:	lsr	r2, r3, #28
   4cd9c:	cmp	r2, #8
   4cda0:	beq	4cd8c <luaL_error@@Base+0x6ca0>
   4cda4:	add	r2, sp, #48	; 0x30
   4cda8:	mov	r1, r8
   4cdac:	bl	1b78c <_start@@Base+0x83dc>
   4cdb0:	ldr	r5, [r6, #16]
   4cdb4:	tst	r0, #1048576	; 0x100000
   4cdb8:	mov	r9, r0
   4cdbc:	bne	4ce9c <luaL_error@@Base+0x6db0>
   4cdc0:	ldr	r2, [sp, #48]	; 0x30
   4cdc4:	add	r5, r5, #8
   4cdc8:	cmn	r2, #1
   4cdcc:	beq	4d0c0 <luaL_error@@Base+0x6fd4>
   4cdd0:	mov	r3, r9
   4cdd4:	mov	r1, r8
   4cdd8:	ldr	r0, [r7, #12]
   4cddc:	bl	33128 <luaL_where@@Base+0x13024>
   4cde0:	ldr	r9, [r6, #20]
   4cde4:	mvn	r3, #10
   4cde8:	sub	fp, r9, r5
   4cdec:	asrs	r9, fp, #3
   4cdf0:	mov	r2, r0
   4cdf4:	str	r0, [sp, #24]
   4cdf8:	strd	r2, [r5, #-8]
   4cdfc:	ldr	r3, [sp, #48]	; 0x30
   4ce00:	add	sl, r0, #8
   4ce04:	str	r3, [sp, #20]
   4ce08:	beq	4cec8 <luaL_error@@Base+0x6ddc>
   4ce0c:	cmp	r9, #1
   4ce10:	beq	4cf40 <luaL_error@@Base+0x6e54>
   4ce14:	ldr	r3, [r4]
   4ce18:	lsr	r2, r3, #28
   4ce1c:	cmp	r2, #3
   4ce20:	beq	4cf70 <luaL_error@@Base+0x6e84>
   4ce24:	cmp	r2, #1
   4ce28:	bne	4d0dc <luaL_error@@Base+0x6ff0>
   4ce2c:	mov	r3, #0
   4ce30:	add	fp, sp, #56	; 0x38
   4ce34:	mov	r1, r3
   4ce38:	ldr	r2, [sp, #20]
   4ce3c:	mov	r0, sl
   4ce40:	str	r3, [fp, #-4]!
   4ce44:	bl	12ed4 <memset@plt>
   4ce48:	ldrh	r2, [r4, #8]
   4ce4c:	mov	r3, sl
   4ce50:	stm	sp, {r5, r9, fp}
   4ce54:	mov	r1, r4
   4ce58:	mov	r0, r7
   4ce5c:	bl	4cc08 <luaL_error@@Base+0x6b1c>
   4ce60:	ldr	r3, [sp, #52]	; 0x34
   4ce64:	cmp	r9, r3
   4ce68:	bhi	4d0dc <luaL_error@@Base+0x6ff0>
   4ce6c:	ldr	r3, [r4]
   4ce70:	ldr	r4, [r6, #8]
   4ce74:	lsr	r3, r3, #28
   4ce78:	cmp	r3, #1
   4ce7c:	beq	4cedc <luaL_error@@Base+0x6df0>
   4ce80:	ldrd	r2, [r4, #20]
   4ce84:	str	r5, [r6, #20]
   4ce88:	cmp	r2, r3
   4ce8c:	bcs	4d058 <luaL_error@@Base+0x6f6c>
   4ce90:	mov	r0, #1
   4ce94:	add	sp, sp, #60	; 0x3c
   4ce98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4ce9c:	mov	r1, #2
   4cea0:	mov	r0, r6
   4cea4:	bl	4c730 <luaL_error@@Base+0x6644>
   4cea8:	mov	r1, r4
   4ceac:	add	r5, r5, #16
   4ceb0:	mov	r2, r0
   4ceb4:	ldr	r0, [r7]
   4ceb8:	bl	1b6c4 <_start@@Base+0x8314>
   4cebc:	mov	r2, r0
   4cec0:	str	r0, [sp, #48]	; 0x30
   4cec4:	b	4cdc8 <luaL_error@@Base+0x6cdc>
   4cec8:	mov	r2, r3
   4cecc:	mov	r1, r9
   4ced0:	mov	r0, sl
   4ced4:	bl	12ed4 <memset@plt>
   4ced8:	b	4ce6c <luaL_error@@Base+0x6d80>
   4cedc:	rsb	r1, r8, #0
   4cee0:	ldr	r0, [r7, #24]
   4cee4:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   4cee8:	cmp	r0, #0
   4ceec:	beq	4ce80 <luaL_error@@Base+0x6d94>
   4cef0:	ldr	r3, [r0, #4]
   4cef4:	cmn	r3, #12
   4cef8:	bne	4ce80 <luaL_error@@Base+0x6d94>
   4cefc:	ldr	r0, [r0]
   4cf00:	cmp	r0, #0
   4cf04:	beq	4ce80 <luaL_error@@Base+0x6d94>
   4cf08:	ldrb	r3, [r0, #6]
   4cf0c:	tst	r3, #4
   4cf10:	bne	4ce80 <luaL_error@@Base+0x6d94>
   4cf14:	ldr	r2, [r4, #240]	; 0xf0
   4cf18:	mov	r1, #2
   4cf1c:	bl	14a44 <_start@@Base+0x1694>
   4cf20:	subs	r8, r0, #0
   4cf24:	beq	4cf38 <luaL_error@@Base+0x6e4c>
   4cf28:	ldr	r4, [r7, #20]
   4cf2c:	ldr	r3, [r4, #16]
   4cf30:	cmp	r3, #0
   4cf34:	bne	4d088 <luaL_error@@Base+0x6f9c>
   4cf38:	ldr	r4, [r6, #8]
   4cf3c:	b	4ce80 <luaL_error@@Base+0x6d94>
   4cf40:	mov	r2, r5
   4cf44:	mov	r1, r4
   4cf48:	mov	r0, r7
   4cf4c:	bl	1bbd8 <_start@@Base+0x8828>
   4cf50:	cmp	r0, #0
   4cf54:	bne	4ce14 <luaL_error@@Base+0x6d28>
   4cf58:	str	r0, [sp]
   4cf5c:	mov	r2, sl
   4cf60:	mov	r3, r5
   4cf64:	mov	r0, r7
   4cf68:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4cf6c:	b	4ce6c <luaL_error@@Base+0x6d80>
   4cf70:	ldr	r0, [r7]
   4cf74:	uxth	r2, r3
   4cf78:	ldr	r3, [r0, r2, lsl #4]
   4cf7c:	add	r2, r0, r2, lsl #4
   4cf80:	lsr	r1, r3, #28
   4cf84:	cmp	r1, #8
   4cf88:	beq	4cf74 <luaL_error@@Base+0x6e88>
   4cf8c:	ldr	r3, [r2, #4]
   4cf90:	mov	r1, r2
   4cf94:	str	r3, [sp, #28]
   4cf98:	mul	r3, r3, r9
   4cf9c:	ldr	r2, [sp, #20]
   4cfa0:	str	r3, [sp, #32]
   4cfa4:	cmp	r2, r3
   4cfa8:	bcc	4d0d0 <luaL_error@@Base+0x6fe4>
   4cfac:	add	r3, fp, r5
   4cfb0:	mov	r9, r5
   4cfb4:	str	r5, [sp, #36]	; 0x24
   4cfb8:	ldr	r5, [sp, #28]
   4cfbc:	str	r8, [sp, #40]	; 0x28
   4cfc0:	str	r4, [sp, #44]	; 0x2c
   4cfc4:	mov	fp, sl
   4cfc8:	mov	r4, r1
   4cfcc:	mov	r8, r3
   4cfd0:	mov	r3, #0
   4cfd4:	str	r3, [sp]
   4cfd8:	mov	r2, fp
   4cfdc:	mov	r3, r9
   4cfe0:	mov	r1, r4
   4cfe4:	add	r9, r9, #8
   4cfe8:	mov	r0, r7
   4cfec:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4cff0:	cmp	r8, r9
   4cff4:	add	fp, fp, r5
   4cff8:	bne	4cfd0 <luaL_error@@Base+0x6ee4>
   4cffc:	ldr	r3, [sp, #28]
   4d000:	ldr	fp, [sp, #32]
   4d004:	ldr	r5, [sp, #36]	; 0x24
   4d008:	cmp	r3, fp
   4d00c:	ldr	r8, [sp, #40]	; 0x28
   4d010:	ldr	r4, [sp, #44]	; 0x2c
   4d014:	bne	4d06c <luaL_error@@Base+0x6f80>
   4d018:	ldr	r3, [sp, #20]
   4d01c:	cmp	r3, fp
   4d020:	bls	4ce6c <luaL_error@@Base+0x6d80>
   4d024:	str	r4, [sp, #20]
   4d028:	mov	r9, fp
   4d02c:	mov	r4, sl
   4d030:	mov	sl, r3
   4d034:	add	r0, r4, r9
   4d038:	mov	r2, fp
   4d03c:	mov	r1, r4
   4d040:	add	r9, r9, fp
   4d044:	bl	12cb8 <memcpy@plt>
   4d048:	cmp	sl, r9
   4d04c:	bhi	4d034 <luaL_error@@Base+0x6f48>
   4d050:	ldr	r4, [sp, #20]
   4d054:	b	4ce6c <luaL_error@@Base+0x6d80>
   4d058:	mov	r0, r6
   4d05c:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   4d060:	mov	r0, #1
   4d064:	add	sp, sp, #60	; 0x3c
   4d068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4d06c:	ldr	r3, [sp, #32]
   4d070:	ldr	r2, [sp, #20]
   4d074:	add	r0, sl, r3
   4d078:	sub	r2, r2, r3
   4d07c:	mov	r1, #0
   4d080:	bl	12ed4 <memset@plt>
   4d084:	b	4ce6c <luaL_error@@Base+0x6d80>
   4d088:	sub	r2, r5, #8
   4d08c:	mov	r1, r4
   4d090:	mov	r0, r6
   4d094:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   4d098:	ldrd	r2, [r8]
   4d09c:	strd	r2, [r0]
   4d0a0:	ldrb	r3, [r4, #4]
   4d0a4:	tst	r3, #4
   4d0a8:	bne	4d0ec <luaL_error@@Base+0x7000>
   4d0ac:	ldr	r2, [sp, #24]
   4d0b0:	ldrb	r3, [r2, #4]
   4d0b4:	orr	r3, r3, #16
   4d0b8:	strb	r3, [r2, #4]
   4d0bc:	b	4cf38 <luaL_error@@Base+0x6e4c>
   4d0c0:	mov	r0, r6
   4d0c4:	add	r2, r2, #2992	; 0xbb0
   4d0c8:	mov	r1, #1
   4d0cc:	bl	361d0 <luaL_argerror@@Base+0x8>
   4d0d0:	mov	r2, r4
   4d0d4:	add	r1, r7, #12
   4d0d8:	bl	13264 <pclose@plt+0x1c8>
   4d0dc:	mov	r2, r4
   4d0e0:	add	r1, r7, #12
   4d0e4:	ldr	r0, [r7]
   4d0e8:	bl	13264 <pclose@plt+0x1c8>
   4d0ec:	ldr	r2, [r6, #8]
   4d0f0:	bic	r3, r3, #4
   4d0f4:	strb	r3, [r4, #4]
   4d0f8:	ldr	r3, [r2, #48]	; 0x30
   4d0fc:	str	r3, [r4, #12]
   4d100:	str	r4, [r2, #48]	; 0x30
   4d104:	b	4d0ac <luaL_error@@Base+0x6fc0>
   4d108:	ldr	r3, [r0, #16]
   4d10c:	ldr	r2, [r0, #20]
   4d110:	push	{r4, r5, r6, r7, r8, r9, lr}
   4d114:	cmp	r2, r3
   4d118:	sub	sp, sp, #12
   4d11c:	mov	r4, r0
   4d120:	bls	4d26c <luaL_error@@Base+0x7180>
   4d124:	ldr	r1, [r3, #4]
   4d128:	cmn	r1, #13
   4d12c:	bne	4d26c <luaL_error@@Base+0x7180>
   4d130:	ldr	r6, [r3]
   4d134:	ldrb	r1, [r6, #6]
   4d138:	cmp	r1, #2
   4d13c:	bne	4d26c <luaL_error@@Base+0x7180>
   4d140:	add	r1, r3, #8
   4d144:	cmp	r2, r1
   4d148:	bls	4d27c <luaL_error@@Base+0x7190>
   4d14c:	ldr	r2, [r3, #12]
   4d150:	cmn	r2, #5
   4d154:	bne	4d27c <luaL_error@@Base+0x7190>
   4d158:	ldr	r7, [r3, #8]
   4d15c:	ldr	r1, [r6, #28]
   4d160:	mov	r2, r7
   4d164:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   4d168:	ldr	r3, [r0, #4]
   4d16c:	mov	r5, r0
   4d170:	cmn	r3, #1
   4d174:	beq	4d184 <luaL_error@@Base+0x7098>
   4d178:	mov	r0, r5
   4d17c:	add	sp, sp, #12
   4d180:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4d184:	ldr	r1, [r4, #8]
   4d188:	mov	r3, #6208	; 0x1840
   4d18c:	mov	r2, r7
   4d190:	ldr	r8, [r1, #228]	; 0xe4
   4d194:	add	r1, sp, #4
   4d198:	mov	r0, r8
   4d19c:	str	r4, [r8, #12]
   4d1a0:	bl	153c8 <_start@@Base+0x2018>
   4d1a4:	subs	r9, r0, #0
   4d1a8:	beq	4d294 <luaL_error@@Base+0x71a8>
   4d1ac:	ldr	r2, [sp, #4]
   4d1b0:	ldr	r3, [r2]
   4d1b4:	lsr	r1, r3, #28
   4d1b8:	cmp	r1, #11
   4d1bc:	beq	4d234 <luaL_error@@Base+0x7148>
   4d1c0:	ldrh	r3, [r2, #8]
   4d1c4:	cmp	r3, #0
   4d1c8:	bne	4d208 <luaL_error@@Base+0x711c>
   4d1cc:	add	r1, r7, #16
   4d1d0:	ldr	r0, [r6, #24]
   4d1d4:	bl	1306c <dlsym@plt>
   4d1d8:	subs	r6, r0, #0
   4d1dc:	beq	4d28c <luaL_error@@Base+0x71a0>
   4d1e0:	ldr	r0, [r8, #12]
   4d1e4:	mov	r1, #12
   4d1e8:	bl	32a24 <luaL_where@@Base+0x12920>
   4d1ec:	mvn	r3, #10
   4d1f0:	mov	r2, #10
   4d1f4:	strh	r9, [r0, #6]
   4d1f8:	str	r6, [r0, #8]
   4d1fc:	strb	r2, [r0, #5]
   4d200:	stm	r5, {r0, r3}
   4d204:	b	4d178 <luaL_error@@Base+0x708c>
   4d208:	ldr	r1, [r8]
   4d20c:	ldr	r2, [pc, #144]	; 4d2a4 <luaL_error@@Base+0x71b8>
   4d210:	add	r0, r1, r3, lsl #4
   4d214:	ldr	r1, [r1, r3, lsl #4]
   4d218:	ldr	r3, [pc, #136]	; 4d2a8 <luaL_error@@Base+0x71bc>
   4d21c:	and	r2, r2, r1
   4d220:	cmp	r2, r3
   4d224:	bne	4d1cc <luaL_error@@Base+0x70e0>
   4d228:	ldr	r1, [r0, #12]
   4d22c:	add	r1, r1, #16
   4d230:	b	4d1d0 <luaL_error@@Base+0x70e4>
   4d234:	ldr	r1, [r8]
   4d238:	uxth	r3, r3
   4d23c:	ldr	r2, [r2, #4]
   4d240:	ldr	r3, [r1, r3, lsl #4]
   4d244:	tst	r3, #8388608	; 0x800000
   4d248:	beq	4d260 <luaL_error@@Base+0x7174>
   4d24c:	cmp	r2, #0
   4d250:	vmovlt	s15, r2
   4d254:	vcvtlt.f64.u32	d7, s15
   4d258:	vstrlt	d7, [r5]
   4d25c:	blt	4d178 <luaL_error@@Base+0x708c>
   4d260:	mvn	r3, #13
   4d264:	strd	r2, [r5]
   4d268:	b	4d178 <luaL_error@@Base+0x708c>
   4d26c:	mov	r0, r4
   4d270:	mov	r2, #7
   4d274:	mov	r1, #1
   4d278:	bl	36374 <luaL_typerror@@Base+0x8>
   4d27c:	mov	r0, r4
   4d280:	mov	r2, #4
   4d284:	mov	r1, #2
   4d288:	bl	36374 <luaL_typerror@@Base+0x8>
   4d28c:	mov	r0, r4
   4d290:	bl	130e8 <pclose@plt+0x4c>
   4d294:	add	r2, r7, #16
   4d298:	mov	r0, r4
   4d29c:	ldr	r1, [pc, #8]	; 4d2ac <luaL_error@@Base+0x71c0>
   4d2a0:	bl	4a618 <luaL_error@@Base+0x452c>
   4d2a4:			; <UNDEFINED> instruction: 0xf0ff0000
   4d2a8:	andhi	r0, r4, r0
   4d2ac:	andeq	r0, r0, r8, lsl #28
   4d2b0:	push	{r4, r5, r6, lr}
   4d2b4:	mov	r5, r0
   4d2b8:	sub	sp, sp, #8
   4d2bc:	bl	4d108 <luaL_error@@Base+0x701c>
   4d2c0:	ldr	r3, [r5, #16]
   4d2c4:	ldr	r2, [r5, #20]
   4d2c8:	add	r3, r3, #16
   4d2cc:	cmp	r2, r3
   4d2d0:	bls	4d360 <luaL_error@@Base+0x7274>
   4d2d4:	ldr	r2, [r0, #4]
   4d2d8:	cmn	r2, #11
   4d2dc:	bne	4d360 <luaL_error@@Base+0x7274>
   4d2e0:	ldr	r2, [r5, #8]
   4d2e4:	ldr	r6, [r0]
   4d2e8:	ldr	r0, [r2, #228]	; 0xe4
   4d2ec:	ldrh	r2, [r6, #6]
   4d2f0:	ldr	lr, [r0]
   4d2f4:	str	r5, [r0, #12]
   4d2f8:	ldr	r2, [lr, r2, lsl #4]
   4d2fc:	lsr	r1, r2, #28
   4d300:	cmp	r1, #12
   4d304:	bne	4d360 <luaL_error@@Base+0x7274>
   4d308:	mov	r4, #0
   4d30c:	uxth	r1, r2
   4d310:	ldr	r2, [lr, r1, lsl #4]
   4d314:	add	r1, lr, r1, lsl #4
   4d318:	lsr	ip, r2, #28
   4d31c:	cmp	ip, #8
   4d320:	bne	4d33c <luaL_error@@Base+0x7250>
   4d324:	lsr	ip, r2, #16
   4d328:	uxtb	ip, ip
   4d32c:	cmp	ip, #1
   4d330:	ldreq	r1, [r1, #4]
   4d334:	orreq	r4, r4, r1
   4d338:	b	4d30c <luaL_error@@Base+0x7220>
   4d33c:	orr	r2, r2, r4
   4d340:	ands	r4, r2, #33554432	; 0x2000000
   4d344:	bne	4d360 <luaL_error@@Base+0x7274>
   4d348:	ldr	r2, [r6, #8]
   4d34c:	str	r4, [sp]
   4d350:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4d354:	mov	r0, r4
   4d358:	add	sp, sp, #8
   4d35c:	pop	{r4, r5, r6, pc}
   4d360:	mov	r0, r5
   4d364:	ldr	r1, [pc]	; 4d36c <luaL_error@@Base+0x7280>
   4d368:	bl	35a48 <lua_error@@Base+0xa8>
   4d36c:	andeq	r0, r0, r2, ror #27
   4d370:	push	{r4, r5, lr}
   4d374:	sub	sp, sp, #12
   4d378:	mov	r4, r0
   4d37c:	bl	4d108 <luaL_error@@Base+0x701c>
   4d380:	ldr	r3, [r0, #4]
   4d384:	cmn	r3, #11
   4d388:	beq	4d3a4 <luaL_error@@Base+0x72b8>
   4d38c:	ldr	r3, [r4, #20]
   4d390:	ldrd	r0, [r0]
   4d394:	strd	r0, [r3, #-8]
   4d398:	mov	r0, #1
   4d39c:	add	sp, sp, #12
   4d3a0:	pop	{r4, r5, pc}
   4d3a4:	ldr	r3, [r4, #8]
   4d3a8:	ldr	r1, [r0]
   4d3ac:	ldr	r5, [r3, #228]	; 0xe4
   4d3b0:	ldrh	r2, [r1, #6]
   4d3b4:	ldr	r3, [r5]
   4d3b8:	str	r4, [r5, #12]
   4d3bc:	ldr	r2, [r3, r2, lsl #4]
   4d3c0:	lsr	ip, r2, #28
   4d3c4:	cmp	ip, #12
   4d3c8:	bne	4d38c <luaL_error@@Base+0x72a0>
   4d3cc:	uxth	r2, r2
   4d3d0:	ldr	r0, [r1, #8]
   4d3d4:	ldr	ip, [r3, r2, lsl #4]
   4d3d8:	add	r1, r3, r2, lsl #4
   4d3dc:	lsr	lr, ip, #28
   4d3e0:	cmp	lr, #8
   4d3e4:	bne	4d400 <luaL_error@@Base+0x7314>
   4d3e8:	uxth	r1, ip
   4d3ec:	ldr	ip, [r3, r1, lsl #4]
   4d3f0:	add	r1, r3, r1, lsl #4
   4d3f4:	lsr	lr, ip, #28
   4d3f8:	cmp	lr, #8
   4d3fc:	beq	4d3e8 <luaL_error@@Base+0x72fc>
   4d400:	ldr	r3, [r4, #20]
   4d404:	str	r0, [sp]
   4d408:	sub	r3, r3, #8
   4d40c:	mov	r0, r5
   4d410:	bl	4b580 <luaL_error@@Base+0x5494>
   4d414:	cmp	r0, #0
   4d418:	beq	4d398 <luaL_error@@Base+0x72ac>
   4d41c:	ldr	r3, [r4, #8]
   4d420:	ldrd	r2, [r3, #20]
   4d424:	cmp	r2, r3
   4d428:	bcc	4d398 <luaL_error@@Base+0x72ac>
   4d42c:	mov	r0, r4
   4d430:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   4d434:	b	4d398 <luaL_error@@Base+0x72ac>
   4d438:	ldr	r3, [r0, #8]
   4d43c:	push	{r4, r5, r6, r7, r8, lr}
   4d440:	mov	r7, r1
   4d444:	ldr	r5, [r3, #228]	; 0xe4
   4d448:	mov	r4, r0
   4d44c:	str	r0, [r5, #12]
   4d450:	bl	3720c <luaL_typerror@@Base+0xea0>
   4d454:	ldr	r1, [r5]
   4d458:	ldrh	r6, [r0, #6]
   4d45c:	ldr	r3, [r1, r6, lsl #4]
   4d460:	lsr	r2, r3, #28
   4d464:	cmp	r2, #8
   4d468:	bne	4d480 <luaL_error@@Base+0x7394>
   4d46c:	uxth	r3, r3
   4d470:	ldr	r3, [r1, r3, lsl #4]
   4d474:	lsr	r2, r3, #28
   4d478:	cmp	r2, #8
   4d47c:	beq	4d46c <luaL_error@@Base+0x7380>
   4d480:	cmp	r2, #2
   4d484:	uxtheq	r6, r3
   4d488:	mov	r0, r5
   4d48c:	mov	r2, r7
   4d490:	mov	r1, r6
   4d494:	bl	1f3c4 <lua_atpanic@@Base+0x1f4>
   4d498:	cmp	r0, #0
   4d49c:	beq	4d4e0 <luaL_error@@Base+0x73f4>
   4d4a0:	ldr	r3, [r4, #16]
   4d4a4:	ldrd	r6, [r0]
   4d4a8:	ldr	r2, [r4, #20]
   4d4ac:	ldr	ip, [r3, #-4]
   4d4b0:	add	r1, r2, #16
   4d4b4:	strd	r6, [r3, #-8]
   4d4b8:	sub	r3, r1, r3
   4d4bc:	add	r3, r3, #2
   4d4c0:	mov	r0, #0
   4d4c4:	str	ip, [r2, #4]
   4d4c8:	str	r4, [r2, #8]
   4d4cc:	str	r3, [r2, #12]
   4d4d0:	str	r0, [r2]
   4d4d4:	str	r1, [r4, #20]
   4d4d8:	str	r1, [r4, #16]
   4d4dc:	pop	{r4, r5, r6, r7, r8, pc}
   4d4e0:	mov	r1, r6
   4d4e4:	mov	r0, r4
   4d4e8:	bl	3cfec <luaL_typerror@@Base+0x6c80>
   4d4ec:	ldr	r3, [r4, #8]
   4d4f0:	add	r7, r7, #58	; 0x3a
   4d4f4:	ldr	r1, [pc, #16]	; 4d50c <luaL_error@@Base+0x7420>
   4d4f8:	ldr	r3, [r3, r7, lsl #2]
   4d4fc:	add	r3, r3, #16
   4d500:	add	r2, r0, #16
   4d504:	mov	r0, r4
   4d508:	bl	4a618 <luaL_error@@Base+0x452c>
   4d50c:	andeq	r0, r0, r6, asr #27
   4d510:	mov	r1, #21
   4d514:	b	4d438 <luaL_error@@Base+0x734c>
   4d518:	mov	r1, #20
   4d51c:	b	4d438 <luaL_error@@Base+0x734c>
   4d520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4d524:	sub	sp, sp, #60	; 0x3c
   4d528:	ldr	r8, [r0, #16]
   4d52c:	ldr	r2, [r0, #8]
   4d530:	ldr	r1, [r0, #20]
   4d534:	ldr	r3, [r8, #-8]
   4d538:	ldr	r6, [r2, #228]	; 0xe4
   4d53c:	add	r2, r8, #8
   4d540:	ldrb	r3, [r3, #6]
   4d544:	cmp	r1, r2
   4d548:	str	r0, [r6, #12]
   4d54c:	sub	r3, r3, #161	; 0xa1
   4d550:	str	r3, [sp, #12]
   4d554:	bls	4e070 <luaL_error@@Base+0x7f84>
   4d558:	mov	r7, r8
   4d55c:	mov	r5, r0
   4d560:	ldr	r3, [r7, #4]
   4d564:	mov	r4, #0
   4d568:	cmn	r3, #11
   4d56c:	mov	fp, #1
   4d570:	add	r9, sp, #40	; 0x28
   4d574:	beq	4d6cc <luaL_error@@Base+0x75e0>
   4d578:	cmn	r3, #14
   4d57c:	beq	4d7ec <luaL_error@@Base+0x7700>
   4d580:	cmn	r3, #15
   4d584:	bhi	4d804 <luaL_error@@Base+0x7718>
   4d588:	ldr	r3, [r6]
   4d58c:	add	r2, r9, r4, lsl #2
   4d590:	add	r3, r3, #224	; 0xe0
   4d594:	str	r3, [r2, #8]
   4d598:	str	r7, [r9, r4, lsl #2]
   4d59c:	cmp	r4, #1
   4d5a0:	add	r7, r7, #8
   4d5a4:	bne	4d6bc <luaL_error@@Base+0x75d0>
   4d5a8:	cmp	fp, #0
   4d5ac:	beq	4d75c <luaL_error@@Base+0x7670>
   4d5b0:	ldr	r4, [sp, #48]	; 0x30
   4d5b4:	ldr	r7, [sp, #40]	; 0x28
   4d5b8:	ldr	r3, [r4]
   4d5bc:	lsrs	r1, r3, #28
   4d5c0:	bne	4d73c <luaL_error@@Base+0x7650>
   4d5c4:	ldr	r2, [r4, #4]
   4d5c8:	cmp	r2, #8
   4d5cc:	bhi	4d744 <luaL_error@@Base+0x7658>
   4d5d0:	ldr	r8, [sp, #52]	; 0x34
   4d5d4:	ldr	ip, [r8]
   4d5d8:	lsrs	r0, ip, #28
   4d5dc:	bne	4d744 <luaL_error@@Base+0x7658>
   4d5e0:	ldr	r0, [r8, #4]
   4d5e4:	cmp	r0, #8
   4d5e8:	bhi	4d744 <luaL_error@@Base+0x7658>
   4d5ec:	sub	r2, r2, #8
   4d5f0:	clz	r2, r2
   4d5f4:	lsr	r2, r2, #5
   4d5f8:	ands	r3, r2, r3, lsr #23
   4d5fc:	bne	4df18 <luaL_error@@Base+0x7e2c>
   4d600:	sub	r3, r0, #8
   4d604:	clz	r3, r3
   4d608:	lsr	r3, r3, #5
   4d60c:	and	r3, r3, ip, lsr #23
   4d610:	cmp	r3, #0
   4d614:	moveq	r3, #176	; 0xb0
   4d618:	movne	r3, #192	; 0xc0
   4d61c:	moveq	r2, #11
   4d620:	movne	r2, #12
   4d624:	str	r2, [sp, #16]
   4d628:	ldr	sl, [r6]
   4d62c:	mov	r9, #0
   4d630:	add	sl, sl, r3
   4d634:	mov	r2, r4
   4d638:	str	r7, [sp]
   4d63c:	mov	r1, sl
   4d640:	str	r9, [sp, #4]
   4d644:	add	r3, sp, #24
   4d648:	mov	r0, r6
   4d64c:	bl	4a658 <luaL_error@@Base+0x456c>
   4d650:	ldr	r4, [sp, #12]
   4d654:	cmp	r4, #16
   4d658:	bne	4de40 <luaL_error@@Base+0x7d54>
   4d65c:	ldr	r0, [r6, #12]
   4d660:	mov	r1, #16
   4d664:	bl	32a24 <luaL_where@@Base+0x12920>
   4d668:	mov	r3, #10
   4d66c:	ldrh	r1, [sp, #16]
   4d670:	mvn	r2, #10
   4d674:	strb	r3, [r0, #5]
   4d678:	ldr	r3, [sp, #12]
   4d67c:	ldr	r4, [r5, #20]
   4d680:	sub	r3, r3, #10
   4d684:	strh	r1, [r0, #6]
   4d688:	mov	r6, r0
   4d68c:	str	r0, [r4, #-8]
   4d690:	str	r2, [r4, #-4]
   4d694:	cmp	r3, #6
   4d698:	ldrls	pc, [pc, r3, lsl #2]
   4d69c:	b	4dd2c <luaL_error@@Base+0x7c40>
   4d6a0:	andeq	sp, r4, ip, lsl #27
   4d6a4:	andeq	sp, r4, ip, asr #27
   4d6a8:	andeq	sp, r4, r4, lsr #27
   4d6ac:	andeq	sp, r4, r4, ror #26
   4d6b0:	andeq	sp, r4, r0, asr #26
   4d6b4:	andeq	sp, r4, ip, ror #27
   4d6b8:	andeq	sp, r4, ip, lsl sp
   4d6bc:	ldr	r3, [r7, #4]
   4d6c0:	mov	r4, #1
   4d6c4:	cmn	r3, #11
   4d6c8:	bne	4d578 <luaL_error@@Base+0x748c>
   4d6cc:	ldr	ip, [r8, r4, lsl #3]
   4d6d0:	ldr	lr, [r6]
   4d6d4:	ldrh	r1, [ip, #6]
   4d6d8:	ldr	r3, [lr, r1, lsl #4]
   4d6dc:	add	r2, lr, r1, lsl #4
   4d6e0:	lsr	r0, r3, #28
   4d6e4:	cmp	r0, #8
   4d6e8:	bne	4d704 <luaL_error@@Base+0x7618>
   4d6ec:	uxth	r2, r3
   4d6f0:	ldr	r3, [lr, r2, lsl #4]
   4d6f4:	add	r2, lr, r2, lsl #4
   4d6f8:	lsr	r0, r3, #28
   4d6fc:	cmp	r0, #8
   4d700:	beq	4d6ec <luaL_error@@Base+0x7600>
   4d704:	cmp	r0, #2
   4d708:	beq	4d95c <luaL_error@@Base+0x7870>
   4d70c:	cmp	r0, #6
   4d710:	beq	4dbe0 <luaL_error@@Base+0x7af4>
   4d714:	ldr	r3, [r2]
   4d718:	add	sl, ip, #8
   4d71c:	lsr	r1, r3, #28
   4d720:	cmp	r1, #5
   4d724:	uxtheq	r2, r3
   4d728:	add	r3, r9, r4, lsl #2
   4d72c:	addeq	r2, lr, r2, lsl #4
   4d730:	str	r2, [r3, #8]
   4d734:	str	sl, [r9, r4, lsl #2]
   4d738:	b	4d59c <luaL_error@@Base+0x74b0>
   4d73c:	cmp	r1, #2
   4d740:	beq	4d9d8 <luaL_error@@Base+0x78ec>
   4d744:	and	r3, r3, #-67108864	; 0xfc000000
   4d748:	cmp	r3, #805306368	; 0x30000000
   4d74c:	beq	4d9d8 <luaL_error@@Base+0x78ec>
   4d750:	ldr	r3, [sp, #12]
   4d754:	cmp	r3, #10
   4d758:	beq	4dc08 <luaL_error@@Base+0x7b1c>
   4d75c:	ldr	r4, [r5, #20]
   4d760:	ldr	r7, [r5, #16]
   4d764:	ldr	r3, [r7, #4]
   4d768:	cmn	r3, #11
   4d76c:	beq	4d830 <luaL_error@@Base+0x7744>
   4d770:	add	r3, r7, #8
   4d774:	cmp	r4, r3
   4d778:	bhi	4d8c0 <luaL_error@@Base+0x77d4>
   4d77c:	ldr	r3, [sp, #12]
   4d780:	cmp	r3, #4
   4d784:	beq	4d938 <luaL_error@@Base+0x784c>
   4d788:	mvn	r8, #0
   4d78c:	ldr	r2, [pc, #2292]	; 4e088 <luaL_error@@Base+0x7f9c>
   4d790:	ldr	r3, [pc, #2292]	; 4e08c <luaL_error@@Base+0x7fa0>
   4d794:	mov	sl, r8
   4d798:	mov	r4, #0
   4d79c:	add	fp, sp, #32
   4d7a0:	add	r1, r9, r4, lsl #2
   4d7a4:	add	r7, r7, r4, lsl #3
   4d7a8:	ldr	r0, [r1, #8]
   4d7ac:	ldr	r1, [r7, #4]
   4d7b0:	cmp	r0, #0
   4d7b4:	beq	4d7c0 <luaL_error@@Base+0x76d4>
   4d7b8:	cmn	r1, #11
   4d7bc:	beq	4dba8 <luaL_error@@Base+0x7abc>
   4d7c0:	cmn	r1, #5
   4d7c4:	beq	4dae0 <luaL_error@@Base+0x79f4>
   4d7c8:	cmn	r1, #14
   4d7cc:	movls	r1, r3
   4d7d0:	bhi	4dae4 <luaL_error@@Base+0x79f8>
   4d7d4:	str	r1, [fp, r4, lsl #2]
   4d7d8:	cmp	r4, #1
   4d7dc:	beq	4d99c <luaL_error@@Base+0x78b0>
   4d7e0:	ldr	r7, [r5, #16]
   4d7e4:	mov	r4, #1
   4d7e8:	b	4d7a0 <luaL_error@@Base+0x76b4>
   4d7ec:	ldr	r3, [r6]
   4d7f0:	add	r2, r9, r4, lsl #2
   4d7f4:	add	r3, r3, #144	; 0x90
   4d7f8:	str	r3, [r2, #8]
   4d7fc:	str	r7, [r9, r4, lsl #2]
   4d800:	b	4d59c <luaL_error@@Base+0x74b0>
   4d804:	cmn	r3, #1
   4d808:	beq	4d91c <luaL_error@@Base+0x7830>
   4d80c:	cmn	r3, #5
   4d810:	beq	4daf4 <luaL_error@@Base+0x7a08>
   4d814:	add	r3, r9, r4, lsl #2
   4d818:	mov	r1, #0
   4d81c:	mov	r2, #1
   4d820:	str	r1, [r3, #8]
   4d824:	mov	fp, r1
   4d828:	str	r2, [r9, r4, lsl #2]
   4d82c:	b	4d59c <luaL_error@@Base+0x74b0>
   4d830:	ldr	r3, [r7]
   4d834:	ldr	r0, [r6]
   4d838:	ldrh	r1, [r3, #6]
   4d83c:	ldr	r3, [r0, r1, lsl #4]
   4d840:	lsr	r2, r3, #28
   4d844:	cmp	r2, #8
   4d848:	bne	4d860 <luaL_error@@Base+0x7774>
   4d84c:	uxth	r3, r3
   4d850:	ldr	r3, [r0, r3, lsl #4]
   4d854:	lsr	r2, r3, #28
   4d858:	cmp	r2, #8
   4d85c:	beq	4d84c <luaL_error@@Base+0x7760>
   4d860:	cmp	r2, #2
   4d864:	uxtheq	r1, r3
   4d868:	ldr	r2, [sp, #12]
   4d86c:	mov	r0, r6
   4d870:	bl	1f3c4 <lua_atpanic@@Base+0x1f4>
   4d874:	cmp	r0, #0
   4d878:	beq	4d770 <luaL_error@@Base+0x7684>
   4d87c:	ldrd	r0, [r0]
   4d880:	add	r3, r4, #16
   4d884:	mov	ip, #0
   4d888:	ldr	lr, [r7, #-4]
   4d88c:	sub	r2, r3, r7
   4d890:	mov	fp, ip
   4d894:	add	r2, r2, #2
   4d898:	strd	r0, [r7, #-8]
   4d89c:	str	r2, [r4, #12]
   4d8a0:	str	lr, [r4, #4]
   4d8a4:	str	r5, [r4, #8]
   4d8a8:	str	ip, [r4]
   4d8ac:	str	r3, [r5, #20]
   4d8b0:	str	r3, [r5, #16]
   4d8b4:	mov	r0, fp
   4d8b8:	add	sp, sp, #60	; 0x3c
   4d8bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4d8c0:	ldr	r3, [r7, #12]
   4d8c4:	cmn	r3, #11
   4d8c8:	bne	4d77c <luaL_error@@Base+0x7690>
   4d8cc:	ldr	r3, [r7, #8]
   4d8d0:	ldr	r0, [r6]
   4d8d4:	ldrh	r1, [r3, #6]
   4d8d8:	ldr	r3, [r0, r1, lsl #4]
   4d8dc:	lsr	r2, r3, #28
   4d8e0:	cmp	r2, #8
   4d8e4:	bne	4d8fc <luaL_error@@Base+0x7810>
   4d8e8:	uxth	r3, r3
   4d8ec:	ldr	r3, [r0, r3, lsl #4]
   4d8f0:	lsr	r2, r3, #28
   4d8f4:	cmp	r2, #8
   4d8f8:	beq	4d8e8 <luaL_error@@Base+0x77fc>
   4d8fc:	cmp	r2, #2
   4d900:	uxtheq	r1, r3
   4d904:	ldr	r2, [sp, #12]
   4d908:	mov	r0, r6
   4d90c:	bl	1f3c4 <lua_atpanic@@Base+0x1f4>
   4d910:	cmp	r0, #0
   4d914:	bne	4d87c <luaL_error@@Base+0x7790>
   4d918:	b	4d77c <luaL_error@@Base+0x7690>
   4d91c:	ldr	r3, [r6]
   4d920:	add	r2, r9, r4, lsl #2
   4d924:	add	r3, r3, #272	; 0x110
   4d928:	str	r3, [r2, #8]
   4d92c:	mov	r3, #0
   4d930:	str	r3, [r9, r4, lsl #2]
   4d934:	b	4d59c <luaL_error@@Base+0x74b0>
   4d938:	ldrd	r0, [sp, #40]	; 0x28
   4d93c:	ldr	r2, [r5, #8]
   4d940:	mvn	r3, #1
   4d944:	cmp	r0, r1
   4d948:	subeq	r3, r3, #1
   4d94c:	str	r3, [r4, #-4]
   4d950:	mov	fp, #1
   4d954:	str	r3, [r2, #140]	; 0x8c
   4d958:	b	4d8b4 <luaL_error@@Base+0x77c8>
   4d95c:	bic	r3, r3, #251658240	; 0xf000000
   4d960:	ldr	sl, [ip, #8]
   4d964:	lsr	r3, r3, #23
   4d968:	lsl	r3, r3, #23
   4d96c:	cmp	r3, #545259520	; 0x20800000
   4d970:	ldr	r3, [r2]
   4d974:	beq	4d980 <luaL_error@@Base+0x7894>
   4d978:	lsr	r1, r3, #28
   4d97c:	b	4d720 <luaL_error@@Base+0x7634>
   4d980:	uxth	r2, r3
   4d984:	ldr	r3, [lr, r2, lsl #4]
   4d988:	add	r2, lr, r2, lsl #4
   4d98c:	lsr	r1, r3, #28
   4d990:	cmp	r1, #8
   4d994:	beq	4d980 <luaL_error@@Base+0x7894>
   4d998:	b	4d720 <luaL_error@@Base+0x7634>
   4d99c:	eor	r3, sl, r8
   4d9a0:	cmp	r3, #1
   4d9a4:	beq	4de20 <luaL_error@@Base+0x7d34>
   4d9a8:	ldr	r2, [sp, #12]
   4d9ac:	cmp	r2, #5
   4d9b0:	beq	4de18 <luaL_error@@Base+0x7d2c>
   4d9b4:	cmp	r2, #8
   4d9b8:	beq	4dd14 <luaL_error@@Base+0x7c28>
   4d9bc:	ldr	r3, [pc, #1740]	; 4e090 <luaL_error@@Base+0x7fa4>
   4d9c0:	cmp	r2, #9
   4d9c4:	ldr	r1, [pc, #1736]	; 4e094 <luaL_error@@Base+0x7fa8>
   4d9c8:	movls	r1, r3
   4d9cc:	mov	r0, r5
   4d9d0:	ldrd	r2, [sp, #32]
   4d9d4:	bl	4a618 <luaL_error@@Base+0x452c>
   4d9d8:	ldr	r3, [sp, #12]
   4d9dc:	cmp	r3, #4
   4d9e0:	cmpne	r3, #11
   4d9e4:	moveq	sl, #1
   4d9e8:	movne	sl, #0
   4d9ec:	beq	4da50 <luaL_error@@Base+0x7964>
   4d9f0:	sub	r3, r3, #6
   4d9f4:	cmp	r3, #1
   4d9f8:	bls	4da50 <luaL_error@@Base+0x7964>
   4d9fc:	ldr	r3, [sp, #12]
   4da00:	sub	r3, r3, #10
   4da04:	cmp	r3, #1
   4da08:	bhi	4d75c <luaL_error@@Base+0x7670>
   4da0c:	ldr	r2, [sp, #52]	; 0x34
   4da10:	ldr	r3, [r2]
   4da14:	lsrs	r3, r3, #28
   4da18:	bne	4d75c <luaL_error@@Base+0x7670>
   4da1c:	ldr	r0, [sp, #44]	; 0x2c
   4da20:	ldr	r1, [r6]
   4da24:	stm	sp, {r0, r3}
   4da28:	add	r1, r1, #144	; 0x90
   4da2c:	add	r3, sp, #32
   4da30:	mov	r0, r6
   4da34:	bl	4a658 <luaL_error@@Base+0x456c>
   4da38:	ldr	r3, [sp, #12]
   4da3c:	cmp	r3, #11
   4da40:	ldreq	r3, [sp, #32]
   4da44:	rsbeq	r3, r3, #0
   4da48:	streq	r3, [sp, #32]
   4da4c:	b	4dc5c <luaL_error@@Base+0x7b70>
   4da50:	ldr	r2, [sp, #52]	; 0x34
   4da54:	ldr	r3, [r2]
   4da58:	lsr	r1, r3, #28
   4da5c:	cmp	r1, #2
   4da60:	beq	4da70 <luaL_error@@Base+0x7984>
   4da64:	and	r3, r3, #-67108864	; 0xfc000000
   4da68:	cmp	r3, #805306368	; 0x30000000
   4da6c:	bne	4d9fc <luaL_error@@Base+0x7910>
   4da70:	ldr	r3, [sp, #12]
   4da74:	ldr	r8, [sp, #44]	; 0x2c
   4da78:	cmp	r3, #4
   4da7c:	beq	4dea0 <luaL_error@@Base+0x7db4>
   4da80:	cmp	r4, r2
   4da84:	beq	4daa0 <luaL_error@@Base+0x79b4>
   4da88:	mov	r3, #8
   4da8c:	mov	r1, r4
   4da90:	mov	r0, r6
   4da94:	bl	1ba9c <_start@@Base+0x86ec>
   4da98:	cmp	r0, #0
   4da9c:	beq	4d75c <luaL_error@@Base+0x7670>
   4daa0:	cmp	sl, #0
   4daa4:	bne	4df28 <luaL_error@@Base+0x7e3c>
   4daa8:	ldr	r3, [sp, #12]
   4daac:	ldr	r4, [r5, #20]
   4dab0:	cmp	r3, #6
   4dab4:	beq	4df80 <luaL_error@@Base+0x7e94>
   4dab8:	cmp	r7, r8
   4dabc:	mvnhi	r3, #1
   4dac0:	mvnls	r3, #2
   4dac4:	str	r3, [r4, #-4]
   4dac8:	ldr	ip, [r5, #8]
   4dacc:	ldrd	r2, [r4, #-8]
   4dad0:	mov	r0, fp
   4dad4:	strd	r2, [ip, #136]	; 0x88
   4dad8:	add	sp, sp, #60	; 0x3c
   4dadc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4dae0:	mov	r8, r4
   4dae4:	mvn	r1, r1
   4dae8:	add	r1, r2, r1, lsl #2
   4daec:	ldr	r1, [r1, #-216]	; 0xffffff28
   4daf0:	b	4d7d4 <luaL_error@@Base+0x76e8>
   4daf4:	cmp	r4, #0
   4daf8:	addeq	r3, r7, #8
   4dafc:	subne	r3, r7, #8
   4db00:	ldr	r0, [r6]
   4db04:	ldr	r3, [r3]
   4db08:	ldrh	r2, [r3, #6]
   4db0c:	ldr	r3, [r0, r2, lsl #4]
   4db10:	add	sl, r0, r2, lsl #4
   4db14:	lsr	r1, r3, #28
   4db18:	cmp	r1, #8
   4db1c:	bne	4db38 <luaL_error@@Base+0x7a4c>
   4db20:	uxth	sl, r3
   4db24:	ldr	r3, [r0, sl, lsl #4]
   4db28:	add	sl, r0, sl, lsl #4
   4db2c:	lsr	r1, r3, #28
   4db30:	cmp	r1, #8
   4db34:	beq	4db20 <luaL_error@@Base+0x7a34>
   4db38:	ldr	r2, [r8, r4, lsl #3]
   4db3c:	add	fp, r9, r4, lsl #2
   4db40:	cmp	r1, #5
   4db44:	add	r3, r2, #16
   4db48:	mov	r1, #0
   4db4c:	str	r1, [fp, #8]
   4db50:	str	r3, [r9, r4, lsl #2]
   4db54:	movne	fp, #0
   4db58:	bne	4d59c <luaL_error@@Base+0x74b0>
   4db5c:	str	r1, [sp]
   4db60:	add	r3, sp, #32
   4db64:	mov	r1, sl
   4db68:	mov	r0, r6
   4db6c:	bl	1544c <_start@@Base+0x209c>
   4db70:	cmp	r0, #0
   4db74:	beq	4dfc0 <luaL_error@@Base+0x7ed4>
   4db78:	ldr	r3, [r0]
   4db7c:	lsr	r2, r3, #28
   4db80:	cmp	r2, #11
   4db84:	bne	4dfc0 <luaL_error@@Base+0x7ed4>
   4db88:	uxth	r3, r3
   4db8c:	ldr	r2, [r6]
   4db90:	add	r0, r0, #4
   4db94:	add	r3, r2, r3, lsl #4
   4db98:	str	r3, [fp, #8]
   4db9c:	mov	fp, #1
   4dba0:	str	r0, [r9, r4, lsl #2]
   4dba4:	b	4d59c <luaL_error@@Base+0x74b0>
   4dba8:	ldr	ip, [r0]
   4dbac:	ldr	r1, [r6]
   4dbb0:	strd	r2, [sp, #16]
   4dbb4:	sub	r1, r0, r1
   4dbb8:	lsr	ip, ip, #28
   4dbbc:	cmp	ip, #5
   4dbc0:	mov	r0, r5
   4dbc4:	asr	r1, r1, #4
   4dbc8:	moveq	sl, r4
   4dbcc:	bl	3cfec <luaL_typerror@@Base+0x6c80>
   4dbd0:	ldrd	r2, [sp, #16]
   4dbd4:	add	r0, r0, #16
   4dbd8:	str	r0, [fp, r4, lsl #2]
   4dbdc:	b	4d7d8 <luaL_error@@Base+0x76ec>
   4dbe0:	orr	r1, r1, #536870912	; 0x20000000
   4dbe4:	mov	r2, #4
   4dbe8:	orr	r1, r1, #131072	; 0x20000
   4dbec:	mov	r0, r6
   4dbf0:	ldr	sl, [ip, #8]
   4dbf4:	bl	41060 <luaL_typerror@@Base+0xacf4>
   4dbf8:	ldr	lr, [r6]
   4dbfc:	add	r2, lr, r0, lsl #4
   4dc00:	ldr	r3, [lr, r0, lsl #4]
   4dc04:	b	4d978 <luaL_error@@Base+0x788c>
   4dc08:	cmp	r1, #0
   4dc0c:	bne	4d75c <luaL_error@@Base+0x7670>
   4dc10:	ldr	r8, [sp, #52]	; 0x34
   4dc14:	ldr	r3, [r8]
   4dc18:	lsr	r2, r3, #28
   4dc1c:	cmp	r2, #2
   4dc20:	beq	4dc30 <luaL_error@@Base+0x7b44>
   4dc24:	and	r3, r3, #-67108864	; 0xfc000000
   4dc28:	cmp	r3, #805306368	; 0x30000000
   4dc2c:	bne	4d75c <luaL_error@@Base+0x7670>
   4dc30:	ldr	r1, [r6]
   4dc34:	mov	r3, #0
   4dc38:	mov	r2, r4
   4dc3c:	str	r7, [sp]
   4dc40:	str	r3, [sp, #4]
   4dc44:	add	r1, r1, #144	; 0x90
   4dc48:	add	r3, sp, #32
   4dc4c:	mov	r0, r6
   4dc50:	ldr	r7, [sp, #44]	; 0x2c
   4dc54:	bl	4a658 <luaL_error@@Base+0x456c>
   4dc58:	mov	r4, r8
   4dc5c:	ldrh	r1, [r4]
   4dc60:	ldr	ip, [r6]
   4dc64:	ldr	r2, [ip, r1, lsl #4]
   4dc68:	add	r3, ip, r1, lsl #4
   4dc6c:	lsr	r0, r2, #28
   4dc70:	cmp	r0, #8
   4dc74:	bne	4dc90 <luaL_error@@Base+0x7ba4>
   4dc78:	uxth	r3, r2
   4dc7c:	ldr	r2, [ip, r3, lsl #4]
   4dc80:	add	r3, ip, r3, lsl #4
   4dc84:	lsr	r0, r2, #28
   4dc88:	cmp	r0, #8
   4dc8c:	beq	4dc78 <luaL_error@@Base+0x7b8c>
   4dc90:	cmp	r0, #5
   4dc94:	bhi	4d75c <luaL_error@@Base+0x7670>
   4dc98:	ldr	r3, [r3, #4]
   4dc9c:	cmn	r3, #1
   4dca0:	beq	4d75c <luaL_error@@Base+0x7670>
   4dca4:	ldr	r0, [sp, #32]
   4dca8:	orr	r1, r1, #536870912	; 0x20000000
   4dcac:	mov	r2, #4
   4dcb0:	mla	r7, r0, r3, r7
   4dcb4:	orr	r1, r1, #131072	; 0x20000
   4dcb8:	mov	r0, r6
   4dcbc:	bl	41060 <luaL_typerror@@Base+0xacf4>
   4dcc0:	mov	r1, #12
   4dcc4:	mov	r8, r0
   4dcc8:	ldr	r0, [r6, #12]
   4dccc:	bl	32a24 <luaL_where@@Base+0x12920>
   4dcd0:	mov	r3, #10
   4dcd4:	strb	r3, [r0, #5]
   4dcd8:	ldr	ip, [r5, #8]
   4dcdc:	ldr	r4, [r5, #20]
   4dce0:	mvn	r3, #10
   4dce4:	ldr	r1, [ip, #20]
   4dce8:	ldr	r2, [ip, #24]
   4dcec:	str	r7, [r0, #8]
   4dcf0:	cmp	r1, r2
   4dcf4:	strh	r8, [r0, #6]
   4dcf8:	stmdb	r4, {r0, r3}
   4dcfc:	bcc	4dacc <luaL_error@@Base+0x79e0>
   4dd00:	mov	r0, r5
   4dd04:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   4dd08:	ldr	ip, [r5, #8]
   4dd0c:	ldr	r4, [r5, #20]
   4dd10:	b	4dacc <luaL_error@@Base+0x79e0>
   4dd14:	ldr	r1, [pc, #892]	; 4e098 <luaL_error@@Base+0x7fac>
   4dd18:	b	4d9cc <luaL_error@@Base+0x78e0>
   4dd1c:	ldrd	r2, [sp, #24]
   4dd20:	rsbs	r2, r2, #0
   4dd24:	rsc	r3, r3, #0
   4dd28:	strd	r2, [r6, #8]
   4dd2c:	ldr	ip, [r5, #8]
   4dd30:	ldrd	r2, [ip, #20]
   4dd34:	cmp	r2, r3
   4dd38:	bcc	4dacc <luaL_error@@Base+0x79e0>
   4dd3c:	b	4dd00 <luaL_error@@Base+0x7c14>
   4dd40:	ldr	r3, [sp, #16]
   4dd44:	ldrd	r0, [sp, #24]
   4dd48:	cmp	r3, #11
   4dd4c:	ldrd	r2, [sp, #32]
   4dd50:	beq	4e030 <luaL_error@@Base+0x7f44>
   4dd54:	orrs	ip, r2, r3
   4dd58:	beq	4dfec <luaL_error@@Base+0x7f00>
   4dd5c:	bl	6e5bc <luaL_openlibs@@Base+0x4dfc>
   4dd60:	b	4dd28 <luaL_error@@Base+0x7c3c>
   4dd64:	ldr	r3, [sp, #16]
   4dd68:	ldrd	r0, [sp, #24]
   4dd6c:	cmp	r3, #11
   4dd70:	ldrd	r2, [sp, #32]
   4dd74:	beq	4dff8 <luaL_error@@Base+0x7f0c>
   4dd78:	orrs	ip, r2, r3
   4dd7c:	beq	4dfe0 <luaL_error@@Base+0x7ef4>
   4dd80:	bl	6e5bc <luaL_openlibs@@Base+0x4dfc>
   4dd84:	strd	r0, [r6, #8]
   4dd88:	b	4dd2c <luaL_error@@Base+0x7c40>
   4dd8c:	ldrd	r0, [sp, #32]
   4dd90:	ldrd	r2, [sp, #24]
   4dd94:	adds	r8, r2, r0
   4dd98:	adc	r9, r3, r1
   4dd9c:	strd	r8, [r6, #8]
   4dda0:	b	4dd2c <luaL_error@@Base+0x7c40>
   4dda4:	ldr	r0, [sp, #36]	; 0x24
   4dda8:	ldr	r2, [sp, #24]
   4ddac:	ldr	ip, [sp, #32]
   4ddb0:	ldr	r1, [sp, #28]
   4ddb4:	mul	r0, r2, r0
   4ddb8:	umull	r2, r3, r2, ip
   4ddbc:	mla	r1, ip, r1, r0
   4ddc0:	add	r3, r1, r3
   4ddc4:	strd	r2, [r6, #8]
   4ddc8:	b	4dd2c <luaL_error@@Base+0x7c40>
   4ddcc:	ldrd	r0, [sp, #32]
   4ddd0:	ldrd	r2, [sp, #24]
   4ddd4:	subs	r2, r2, r0
   4ddd8:	sbc	r3, r3, r1
   4dddc:	mov	r8, r2
   4dde0:	mov	r9, r3
   4dde4:	strd	r8, [r6, #8]
   4dde8:	b	4dd2c <luaL_error@@Base+0x7c40>
   4ddec:	ldr	r3, [sp, #16]
   4ddf0:	ldrd	r0, [sp, #24]
   4ddf4:	cmp	r3, #11
   4ddf8:	ldrd	r2, [sp, #32]
   4ddfc:	beq	4e07c <luaL_error@@Base+0x7f90>
   4de00:	orrs	ip, r2, r3
   4de04:	moveq	r0, #1
   4de08:	moveq	r1, #0
   4de0c:	beq	4dd84 <luaL_error@@Base+0x7c98>
   4de10:	bl	1bc84 <_start@@Base+0x88d4>
   4de14:	b	4dd84 <luaL_error@@Base+0x7c98>
   4de18:	ldr	r1, [pc, #636]	; 4e09c <luaL_error@@Base+0x7fb0>
   4de1c:	b	4d9cc <luaL_error@@Base+0x78e0>
   4de20:	add	r3, sp, #56	; 0x38
   4de24:	add	r8, r3, r8, lsl #2
   4de28:	add	sl, r3, sl, lsl #2
   4de2c:	ldr	r2, [r8, #-24]	; 0xffffffe8
   4de30:	ldr	r3, [sl, #-24]	; 0xffffffe8
   4de34:	mov	r0, r5
   4de38:	ldr	r1, [pc, #608]	; 4e0a0 <luaL_error@@Base+0x7fb4>
   4de3c:	bl	4a618 <luaL_error@@Base+0x452c>
   4de40:	ldr	r3, [sp, #44]	; 0x2c
   4de44:	str	r9, [sp, #4]
   4de48:	str	r3, [sp]
   4de4c:	mov	r2, r8
   4de50:	mov	r1, sl
   4de54:	add	r3, sp, #32
   4de58:	mov	r0, r6
   4de5c:	bl	4a658 <luaL_error@@Base+0x456c>
   4de60:	cmp	r4, #6
   4de64:	beq	4def0 <luaL_error@@Base+0x7e04>
   4de68:	cmp	r4, #7
   4de6c:	beq	4debc <luaL_error@@Base+0x7dd0>
   4de70:	cmp	r4, #4
   4de74:	bne	4d65c <luaL_error@@Base+0x7570>
   4de78:	ldrd	r2, [sp, #24]
   4de7c:	ldrd	r0, [sp, #32]
   4de80:	ldr	r4, [r5, #20]
   4de84:	ldr	ip, [r5, #8]
   4de88:	cmp	r3, r1
   4de8c:	cmpeq	r2, r0
   4de90:	mvnne	r3, #1
   4de94:	mvneq	r3, #2
   4de98:	str	r3, [r4, #-4]
   4de9c:	b	4dacc <luaL_error@@Base+0x79e0>
   4dea0:	ldr	r4, [r5, #20]
   4dea4:	cmp	r8, r7
   4dea8:	mvnne	r3, #1
   4deac:	mvneq	r3, #2
   4deb0:	str	r3, [r4, #-4]
   4deb4:	ldr	ip, [r5, #8]
   4deb8:	b	4dacc <luaL_error@@Base+0x79e0>
   4debc:	ldr	r3, [sp, #16]
   4dec0:	ldrd	r0, [sp, #32]
   4dec4:	cmp	r3, #11
   4dec8:	ldrd	r2, [sp, #24]
   4decc:	beq	4df98 <luaL_error@@Base+0x7eac>
   4ded0:	cmp	r1, r3
   4ded4:	cmpeq	r0, r2
   4ded8:	mvncc	r3, #1
   4dedc:	mvncs	r3, #2
   4dee0:	ldr	r4, [r5, #20]
   4dee4:	ldr	ip, [r5, #8]
   4dee8:	str	r3, [r4, #-4]
   4deec:	b	4dacc <luaL_error@@Base+0x79e0>
   4def0:	ldr	r3, [sp, #16]
   4def4:	ldrd	r0, [sp, #32]
   4def8:	cmp	r3, #11
   4defc:	ldrd	r2, [sp, #24]
   4df00:	beq	4dfac <luaL_error@@Base+0x7ec0>
   4df04:	cmp	r1, r3
   4df08:	cmpeq	r0, r2
   4df0c:	mvnls	r3, #1
   4df10:	mvnhi	r3, #2
   4df14:	b	4dee0 <luaL_error@@Base+0x7df4>
   4df18:	mov	r2, #12
   4df1c:	mov	r3, #192	; 0xc0
   4df20:	str	r2, [sp, #16]
   4df24:	b	4d628 <luaL_error@@Base+0x753c>
   4df28:	ldrh	r3, [r4]
   4df2c:	ldr	r0, [r6]
   4df30:	b	4df38 <luaL_error@@Base+0x7e4c>
   4df34:	uxth	r3, r2
   4df38:	ldr	r2, [r0, r3, lsl #4]
   4df3c:	add	r3, r0, r3, lsl #4
   4df40:	lsr	r1, r2, #28
   4df44:	cmp	r1, #8
   4df48:	beq	4df34 <luaL_error@@Base+0x7e48>
   4df4c:	cmp	r1, #5
   4df50:	ldr	r4, [r5, #20]
   4df54:	bhi	4d760 <luaL_error@@Base+0x7674>
   4df58:	ldr	r1, [r3, #4]
   4df5c:	sub	r3, r1, #1
   4df60:	cmn	r3, #3
   4df64:	bhi	4d760 <luaL_error@@Base+0x7674>
   4df68:	sub	r0, r7, r8
   4df6c:	bl	6dc98 <luaL_openlibs@@Base+0x44d8>
   4df70:	mvn	r3, #13
   4df74:	ldr	ip, [r5, #8]
   4df78:	stmdb	r4, {r0, r3}
   4df7c:	b	4dacc <luaL_error@@Base+0x79e0>
   4df80:	cmp	r7, r8
   4df84:	mvncs	r3, #1
   4df88:	mvncc	r3, #2
   4df8c:	str	r3, [r4, #-4]
   4df90:	ldr	ip, [r5, #8]
   4df94:	b	4dacc <luaL_error@@Base+0x79e0>
   4df98:	cmp	r0, r2
   4df9c:	sbcs	r3, r1, r3
   4dfa0:	mvnlt	r3, #1
   4dfa4:	mvnge	r3, #2
   4dfa8:	b	4dee0 <luaL_error@@Base+0x7df4>
   4dfac:	cmp	r2, r0
   4dfb0:	sbcs	r3, r3, r1
   4dfb4:	mvnge	r3, #1
   4dfb8:	mvnlt	r3, #2
   4dfbc:	b	4dee0 <luaL_error@@Base+0x7df4>
   4dfc0:	rsb	r4, r4, #1
   4dfc4:	add	r2, sp, #56	; 0x38
   4dfc8:	add	r2, r2, r4, lsl #2
   4dfcc:	mov	r3, #0
   4dfd0:	str	sl, [r2, #-8]
   4dfd4:	str	r3, [r2, #-16]
   4dfd8:	ldr	r4, [r5, #20]
   4dfdc:	b	4d760 <luaL_error@@Base+0x7674>
   4dfe0:	mov	r0, #0
   4dfe4:	mov	r1, #-2147483648	; 0x80000000
   4dfe8:	b	4dd84 <luaL_error@@Base+0x7c98>
   4dfec:	mov	r2, #0
   4dff0:	mov	r3, #-2147483648	; 0x80000000
   4dff4:	b	4dd28 <luaL_error@@Base+0x7c3c>
   4dff8:	orrs	ip, r2, r3
   4dffc:	beq	4dfe0 <luaL_error@@Base+0x7ef4>
   4e000:	cmp	r1, #-2147483648	; 0x80000000
   4e004:	and	ip, r2, r3
   4e008:	cmpeq	r0, #0
   4e00c:	moveq	lr, #1
   4e010:	movne	lr, #0
   4e014:	cmn	ip, #1
   4e018:	movne	ip, #0
   4e01c:	moveq	ip, #1
   4e020:	tst	lr, ip
   4e024:	bne	4dfe0 <luaL_error@@Base+0x7ef4>
   4e028:	bl	6e4e8 <luaL_openlibs@@Base+0x4d28>
   4e02c:	b	4dd84 <luaL_error@@Base+0x7c98>
   4e030:	orrs	ip, r2, r3
   4e034:	beq	4dfec <luaL_error@@Base+0x7f00>
   4e038:	cmp	r1, #-2147483648	; 0x80000000
   4e03c:	and	ip, r2, r3
   4e040:	cmpeq	r0, #0
   4e044:	moveq	lr, #1
   4e048:	movne	lr, #0
   4e04c:	cmn	ip, #1
   4e050:	movne	ip, #0
   4e054:	moveq	ip, #1
   4e058:	tst	lr, ip
   4e05c:	movne	r2, #0
   4e060:	movne	r3, #0
   4e064:	bne	4dd28 <luaL_error@@Base+0x7c3c>
   4e068:	bl	6e4e8 <luaL_openlibs@@Base+0x4d28>
   4e06c:	b	4dd28 <luaL_error@@Base+0x7c3c>
   4e070:	mov	r2, #10
   4e074:	mov	r1, #1
   4e078:	bl	36374 <luaL_typerror@@Base+0x8>
   4e07c:	bl	1bd64 <_start@@Base+0x89b4>
   4e080:	strd	r0, [r6, #8]
   4e084:	b	4dd2c <luaL_error@@Base+0x7c40>
   4e088:			; <UNDEFINED> instruction: 0x00070cb0
   4e08c:	andeq	r2, r7, r8, asr #29
   4e090:	andeq	r0, r0, sp, lsl #26
   4e094:	ldrdeq	r0, [r0], -lr
   4e098:			; <UNDEFINED> instruction: 0x00000cb9
   4e09c:	muleq	r0, fp, ip
   4e0a0:	andeq	r0, r0, pc, ror ip
   4e0a4:	b	4d520 <luaL_error@@Base+0x7434>
   4e0a8:	b	4d520 <luaL_error@@Base+0x7434>
   4e0ac:	b	4d520 <luaL_error@@Base+0x7434>
   4e0b0:	b	4d520 <luaL_error@@Base+0x7434>
   4e0b4:	b	4d520 <luaL_error@@Base+0x7434>
   4e0b8:	b	4d520 <luaL_error@@Base+0x7434>
   4e0bc:	b	4d520 <luaL_error@@Base+0x7434>
   4e0c0:	b	4d520 <luaL_error@@Base+0x7434>
   4e0c4:	b	4d520 <luaL_error@@Base+0x7434>
   4e0c8:	b	4d520 <luaL_error@@Base+0x7434>
   4e0cc:	b	4d520 <luaL_error@@Base+0x7434>
   4e0d0:	ldr	r3, [r0, #8]
   4e0d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4e0d8:	sub	sp, sp, #276	; 0x114
   4e0dc:	ldr	fp, [r3, #228]	; 0xe4
   4e0e0:	str	r0, [sp, #32]
   4e0e4:	str	r0, [fp, #12]
   4e0e8:	bl	3720c <luaL_typerror@@Base+0xea0>
   4e0ec:	ldr	r2, [fp]
   4e0f0:	ldrh	r4, [r0, #6]
   4e0f4:	cmp	r4, #21
   4e0f8:	bne	4e1a0 <luaL_error@@Base+0x80b4>
   4e0fc:	ldr	r4, [r0, #8]
   4e100:	mov	r5, #19
   4e104:	ldr	r3, [r2, r4, lsl #4]
   4e108:	lsr	ip, r3, #28
   4e10c:	b	4e11c <luaL_error@@Base+0x8030>
   4e110:	uxth	r3, r3
   4e114:	ldr	r3, [r2, r3, lsl #4]
   4e118:	lsr	ip, r3, #28
   4e11c:	cmp	ip, #8
   4e120:	beq	4e110 <luaL_error@@Base+0x8024>
   4e124:	cmp	ip, #2
   4e128:	uxtheq	r4, r3
   4e12c:	mov	r0, fp
   4e130:	mov	r2, r5
   4e134:	mov	r1, r4
   4e138:	bl	1f3c4 <lua_atpanic@@Base+0x1f4>
   4e13c:	cmp	r0, #0
   4e140:	beq	4e188 <luaL_error@@Base+0x809c>
   4e144:	ldr	lr, [sp, #32]
   4e148:	ldrd	r4, [r0]
   4e14c:	mov	r0, #0
   4e150:	ldr	r3, [lr, #16]
   4e154:	ldr	r2, [lr, #20]
   4e158:	ldr	ip, [r3, #-4]
   4e15c:	add	r1, r2, #16
   4e160:	strd	r4, [r3, #-8]
   4e164:	sub	r3, r1, r3
   4e168:	add	r3, r3, #2
   4e16c:	stmib	r2, {ip, lr}
   4e170:	str	r3, [r2, #12]
   4e174:	str	r0, [r2]
   4e178:	str	r1, [lr, #20]
   4e17c:	str	r1, [lr, #16]
   4e180:	add	sp, sp, #276	; 0x114
   4e184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4e188:	cmp	r5, #9
   4e18c:	beq	4e8c0 <luaL_error@@Base+0x87d4>
   4e190:	ldr	r0, [sp, #32]
   4e194:	bl	4cd4c <luaL_error@@Base+0x6c60>
   4e198:	add	sp, sp, #276	; 0x114
   4e19c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4e1a0:	ldr	r3, [r2, r4, lsl #4]
   4e1a4:	add	r1, r2, r4, lsl #4
   4e1a8:	str	r1, [sp, #12]
   4e1ac:	lsr	ip, r3, #28
   4e1b0:	cmp	ip, #8
   4e1b4:	mov	r1, r3
   4e1b8:	movne	lr, ip
   4e1bc:	bne	4e1dc <luaL_error@@Base+0x80f0>
   4e1c0:	uxth	lr, r1
   4e1c4:	ldr	r1, [r2, lr, lsl #4]
   4e1c8:	add	r5, r2, lr, lsl #4
   4e1cc:	lsr	lr, r1, #28
   4e1d0:	cmp	lr, #8
   4e1d4:	beq	4e1c0 <luaL_error@@Base+0x80d4>
   4e1d8:	str	r5, [sp, #12]
   4e1dc:	cmp	lr, #2
   4e1e0:	lsrne	lr, r1, #28
   4e1e4:	beq	4e540 <luaL_error@@Base+0x8454>
   4e1e8:	cmp	lr, #6
   4e1ec:	bne	4e89c <luaL_error@@Base+0x87b0>
   4e1f0:	mov	r3, #0
   4e1f4:	ldr	ip, [r0, #8]
   4e1f8:	mov	r1, r3
   4e1fc:	str	r3, [sp, #132]	; 0x84
   4e200:	str	r3, [sp, #128]	; 0x80
   4e204:	str	r3, [sp, #136]	; 0x88
   4e208:	str	r3, [sp, #140]	; 0x8c
   4e20c:	ldr	r3, [sp, #32]
   4e210:	add	r0, sp, #64	; 0x40
   4e214:	mov	r2, #64	; 0x40
   4e218:	ldr	r3, [r3, #20]
   4e21c:	str	ip, [sp, #48]	; 0x30
   4e220:	str	r3, [sp, #16]
   4e224:	bl	12ed4 <memset@plt>
   4e228:	ldr	r3, [sp, #12]
   4e22c:	ldr	r1, [fp]
   4e230:	ldr	r4, [r3]
   4e234:	mov	r3, r4
   4e238:	uxth	r2, r3
   4e23c:	ldr	r3, [r1, r2, lsl #4]
   4e240:	add	r5, r1, r2, lsl #4
   4e244:	lsr	r2, r3, #28
   4e248:	cmp	r2, #8
   4e24c:	beq	4e238 <luaL_error@@Base+0x814c>
   4e250:	and	r1, r3, #-134217728	; 0xf8000000
   4e254:	cmp	r1, #939524096	; 0x38000000
   4e258:	beq	4e8a4 <luaL_error@@Base+0x87b8>
   4e25c:	and	r3, r3, #-201326592	; 0xf4000000
   4e260:	cmp	r2, #1
   4e264:	cmpne	r3, #872415232	; 0x34000000
   4e268:	beq	4e768 <luaL_error@@Base+0x867c>
   4e26c:	mov	sl, #0
   4e270:	ldr	r3, [sp, #12]
   4e274:	ldrh	r9, [r3, #8]
   4e278:	ldr	r3, [sp, #32]
   4e27c:	cmp	r9, #0
   4e280:	ldr	r0, [r3, #16]
   4e284:	add	r7, r0, #8
   4e288:	beq	4e87c <luaL_error@@Base+0x8790>
   4e28c:	ldr	r2, [fp]
   4e290:	add	r1, r2, r9, lsl #4
   4e294:	ldr	r3, [r2, r9, lsl #4]
   4e298:	lsr	r3, r3, #28
   4e29c:	cmp	r3, #8
   4e2a0:	beq	4e2bc <luaL_error@@Base+0x81d0>
   4e2a4:	b	4e750 <luaL_error@@Base+0x8664>
   4e2a8:	ldr	r3, [r2, r9, lsl #4]
   4e2ac:	add	r1, r2, r9, lsl #4
   4e2b0:	lsr	r3, r3, #28
   4e2b4:	cmp	r3, #8
   4e2b8:	bne	4e750 <luaL_error@@Base+0x8664>
   4e2bc:	ldrh	r9, [r1, #8]
   4e2c0:	cmp	r9, #0
   4e2c4:	bne	4e2a8 <luaL_error@@Base+0x81bc>
   4e2c8:	ldr	r3, [sp, #16]
   4e2cc:	cmp	r3, r7
   4e2d0:	bls	4e8b0 <luaL_error@@Base+0x87c4>
   4e2d4:	mov	r5, #0
   4e2d8:	rsb	r3, r0, r0, lsl #27
   4e2dc:	str	r3, [sp, #20]
   4e2e0:	str	r5, [sp, #28]
   4e2e4:	str	r5, [sp, #24]
   4e2e8:	cmp	r9, #0
   4e2ec:	beq	4e5e8 <luaL_error@@Base+0x84fc>
   4e2f0:	ldr	r3, [fp]
   4e2f4:	lsl	r9, r9, #4
   4e2f8:	add	r2, r3, r9
   4e2fc:	ldrh	r0, [r3, r9]
   4e300:	ldrh	r9, [r2, #8]
   4e304:	ldr	r6, [r3, r0, lsl #4]
   4e308:	add	r4, r3, r0, lsl #4
   4e30c:	lsr	r2, r6, #28
   4e310:	cmp	r2, #8
   4e314:	bne	4e330 <luaL_error@@Base+0x8244>
   4e318:	uxth	r4, r6
   4e31c:	ldr	r6, [r3, r4, lsl #4]
   4e320:	add	r4, r3, r4, lsl #4
   4e324:	lsr	r2, r6, #28
   4e328:	cmp	r2, #8
   4e32c:	beq	4e318 <luaL_error@@Base+0x822c>
   4e330:	cmp	r2, #0
   4e334:	ldr	r8, [r4, #4]
   4e338:	bne	4e560 <luaL_error@@Base+0x8474>
   4e33c:	cmp	r8, #8
   4e340:	bhi	4e8a4 <luaL_error@@Base+0x87b8>
   4e344:	add	r8, r8, #3
   4e348:	tst	r6, #67108864	; 0x4000000
   4e34c:	lsr	r2, r8, #2
   4e350:	and	r3, r6, #983040	; 0xf0000
   4e354:	beq	4e594 <luaL_error@@Base+0x84a8>
   4e358:	bic	r0, r8, #3
   4e35c:	ldr	r1, [sp, #12]
   4e360:	ldr	r1, [r1]
   4e364:	ands	r1, r1, #8388608	; 0x800000
   4e368:	bne	4e594 <luaL_error@@Base+0x84a8>
   4e36c:	cmp	r3, #131072	; 0x20000
   4e370:	bls	4e660 <luaL_error@@Base+0x8574>
   4e374:	ldr	r0, [sp, #24]
   4e378:	add	r3, r0, r8, lsr #3
   4e37c:	cmp	r3, #8
   4e380:	bhi	4e634 <luaL_error@@Base+0x8548>
   4e384:	add	r6, r0, #2
   4e388:	add	r8, sp, #48	; 0x30
   4e38c:	add	r6, r8, r6, lsl #3
   4e390:	str	r3, [sp, #24]
   4e394:	ldr	r3, [sp, #20]
   4e398:	mov	r1, r4
   4e39c:	add	r2, r7, r3
   4e3a0:	mov	r0, fp
   4e3a4:	lsl	r2, r2, #5
   4e3a8:	mov	r3, r7
   4e3ac:	str	r2, [sp]
   4e3b0:	mov	r2, r6
   4e3b4:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4e3b8:	ldr	r3, [r4]
   4e3bc:	tst	r3, #-201326592	; 0xf4000000
   4e3c0:	bne	4e3e8 <luaL_error@@Base+0x82fc>
   4e3c4:	ldr	r2, [r4, #4]
   4e3c8:	cmp	r2, #3
   4e3cc:	bhi	4e3e8 <luaL_error@@Base+0x82fc>
   4e3d0:	tst	r3, #8388608	; 0x800000
   4e3d4:	beq	4e6cc <luaL_error@@Base+0x85e0>
   4e3d8:	cmp	r2, #1
   4e3dc:	ldrbeq	r3, [r6]
   4e3e0:	ldrhne	r3, [r6]
   4e3e4:	str	r3, [r6]
   4e3e8:	ldr	r3, [sp, #16]
   4e3ec:	add	r7, r7, #8
   4e3f0:	cmp	r3, r7
   4e3f4:	bhi	4e2e8 <luaL_error@@Base+0x81fc>
   4e3f8:	cmp	r9, #0
   4e3fc:	bne	4e75c <luaL_error@@Base+0x8670>
   4e400:	cmp	r5, #0
   4e404:	lslne	r3, r5, #2
   4e408:	strb	r5, [sp, #56]	; 0x38
   4e40c:	ldreq	r2, [fp]
   4e410:	addne	r3, r3, #15
   4e414:	bicne	r3, r3, #15
   4e418:	str	r9, [sp, #52]	; 0x34
   4e41c:	ldrne	r2, [fp]
   4e420:	strne	r3, [sp, #52]	; 0x34
   4e424:	mvn	r3, #0
   4e428:	str	r3, [fp, #196]	; 0xc4
   4e42c:	ldr	r3, [sp, #12]
   4e430:	mov	r0, r8
   4e434:	sub	r4, r3, r2
   4e438:	bl	6da2c <luaL_openlibs@@Base+0x426c>
   4e43c:	ldr	r3, [fp, #196]	; 0xc4
   4e440:	cmn	r3, #1
   4e444:	beq	4e470 <luaL_error@@Base+0x8384>
   4e448:	ldr	r0, [sp, #48]	; 0x30
   4e44c:	mvn	r3, #3
   4e450:	str	r0, [sp, #40]	; 0x28
   4e454:	add	r2, sp, #40	; 0x28
   4e458:	ldr	r1, [fp, #24]
   4e45c:	ldr	r0, [sp, #32]
   4e460:	str	r3, [sp, #44]	; 0x2c
   4e464:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   4e468:	mvn	r3, #2
   4e46c:	str	r3, [r0, #4]
   4e470:	ldr	r3, [fp]
   4e474:	add	r2, r3, r4
   4e478:	ldr	r0, [r3, r4]
   4e47c:	mov	r1, r0
   4e480:	uxth	ip, r1
   4e484:	ldr	r1, [r3, ip, lsl #4]
   4e488:	add	r5, r3, ip, lsl #4
   4e48c:	lsr	r4, r1, #28
   4e490:	cmp	r4, #8
   4e494:	beq	4e480 <luaL_error@@Base+0x8394>
   4e498:	cmp	r4, #4
   4e49c:	moveq	r0, #0
   4e4a0:	beq	4e180 <luaL_error@@Base+0x8094>
   4e4a4:	cmp	r4, #1
   4e4a8:	beq	4e834 <luaL_error@@Base+0x8748>
   4e4ac:	ldr	r3, [sp, #32]
   4e4b0:	and	r2, r1, #-201326592	; 0xf4000000
   4e4b4:	cmp	r2, #872415232	; 0x34000000
   4e4b8:	and	r0, r0, #8388608	; 0x800000
   4e4bc:	ldr	r3, [r3, #20]
   4e4c0:	beq	4e7d0 <luaL_error@@Base+0x86e4>
   4e4c4:	cmp	r2, #67108864	; 0x4000000
   4e4c8:	addeq	r2, sp, #64	; 0x40
   4e4cc:	beq	4e4e8 <luaL_error@@Base+0x83fc>
   4e4d0:	and	r2, r1, #-134217728	; 0xf8000000
   4e4d4:	cmp	r2, #939524096	; 0x38000000
   4e4d8:	add	ip, sp, #128	; 0x80
   4e4dc:	add	r1, sp, #64	; 0x40
   4e4e0:	movne	r1, ip
   4e4e4:	mov	r2, r1
   4e4e8:	cmp	r0, #0
   4e4ec:	add	r1, sp, #128	; 0x80
   4e4f0:	movne	r2, r1
   4e4f4:	str	r2, [sp]
   4e4f8:	sub	r3, r3, #8
   4e4fc:	mov	r1, r5
   4e500:	mov	r0, fp
   4e504:	mov	r2, #0
   4e508:	bl	4b580 <luaL_error@@Base+0x5494>
   4e50c:	mov	r4, r0
   4e510:	ldr	r5, [sp, #32]
   4e514:	b	4e52c <luaL_error@@Base+0x8440>
   4e518:	ldr	r3, [r5, #8]
   4e51c:	ldrd	r2, [r3, #20]
   4e520:	cmp	r2, r3
   4e524:	bcs	4e828 <luaL_error@@Base+0x873c>
   4e528:	sub	r4, r4, #1
   4e52c:	cmp	r4, #0
   4e530:	bgt	4e518 <luaL_error@@Base+0x842c>
   4e534:	mov	r0, #1
   4e538:	add	sp, sp, #276	; 0x114
   4e53c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4e540:	uxth	lr, r1
   4e544:	ldr	r1, [r2, lr, lsl #4]
   4e548:	add	r5, r2, lr, lsl #4
   4e54c:	lsr	lr, r1, #28
   4e550:	cmp	lr, #8
   4e554:	beq	4e540 <luaL_error@@Base+0x8454>
   4e558:	str	r5, [sp, #12]
   4e55c:	b	4e1e8 <luaL_error@@Base+0x80fc>
   4e560:	and	r3, r6, #-134217728	; 0xf8000000
   4e564:	cmp	r3, #939524096	; 0x38000000
   4e568:	beq	4e8a4 <luaL_error@@Base+0x87b8>
   4e56c:	cmp	r2, #1
   4e570:	and	r3, r6, #983040	; 0xf0000
   4e574:	beq	4e6dc <luaL_error@@Base+0x85f0>
   4e578:	and	r2, r6, #-201326592	; 0xf4000000
   4e57c:	cmp	r2, #872415232	; 0x34000000
   4e580:	addeq	r8, r8, #3
   4e584:	biceq	r0, r8, #3
   4e588:	lsreq	r2, r8, #2
   4e58c:	beq	4e35c <luaL_error@@Base+0x8270>
   4e590:	mov	r2, #1
   4e594:	cmp	r3, #131072	; 0x20000
   4e598:	bls	4e60c <luaL_error@@Base+0x8520>
   4e59c:	cmp	sl, #4
   4e5a0:	beq	4e638 <luaL_error@@Base+0x854c>
   4e5a4:	add	sl, sl, #1
   4e5a8:	bic	sl, sl, #1
   4e5ac:	cmp	sl, #4
   4e5b0:	beq	4e638 <luaL_error@@Base+0x854c>
   4e5b4:	add	r6, sl, #20
   4e5b8:	add	sl, sl, r2
   4e5bc:	add	r3, sp, #48	; 0x30
   4e5c0:	cmp	sl, #4
   4e5c4:	add	r6, r3, r6, lsl #2
   4e5c8:	mov	r8, r3
   4e5cc:	bls	4e394 <luaL_error@@Base+0x82a8>
   4e5d0:	sub	r5, r5, #4
   4e5d4:	add	r5, sl, r5
   4e5d8:	cmp	r5, #32
   4e5dc:	bhi	4e8a4 <luaL_error@@Base+0x87b8>
   4e5e0:	mov	sl, #4
   4e5e4:	b	4e394 <luaL_error@@Base+0x82a8>
   4e5e8:	ldr	r3, [sp, #12]
   4e5ec:	ldr	r3, [r3]
   4e5f0:	tst	r3, #8388608	; 0x800000
   4e5f4:	beq	4e75c <luaL_error@@Base+0x8670>
   4e5f8:	mov	r1, r7
   4e5fc:	mov	r0, fp
   4e600:	bl	4416c <luaL_typerror@@Base+0xde00>
   4e604:	ldr	r3, [fp]
   4e608:	b	4e304 <luaL_error@@Base+0x8218>
   4e60c:	cmp	sl, #4
   4e610:	bne	4e5b4 <luaL_error@@Base+0x84c8>
   4e614:	add	r2, r5, r2
   4e618:	cmp	r2, #32
   4e61c:	bhi	4e8a4 <luaL_error@@Base+0x87b8>
   4e620:	add	r5, r5, #24
   4e624:	add	r8, sp, #48	; 0x30
   4e628:	add	r6, r8, r5, lsl #2
   4e62c:	mov	r5, r2
   4e630:	b	4e394 <luaL_error@@Base+0x82a8>
   4e634:	str	r1, [sp, #28]
   4e638:	sub	r3, r6, #131072	; 0x20000
   4e63c:	mov	r1, #1
   4e640:	lsr	r3, r3, #16
   4e644:	and	r3, r3, #15
   4e648:	sub	r5, r5, #1
   4e64c:	lsl	r3, r1, r3
   4e650:	add	r5, r5, r3
   4e654:	rsb	r3, r3, #0
   4e658:	and	r5, r5, r3
   4e65c:	b	4e614 <luaL_error@@Base+0x8528>
   4e660:	ldr	r3, [sp, #28]
   4e664:	ldr	ip, [sp, #24]
   4e668:	cmp	r3, ip
   4e66c:	cmpne	r0, #1
   4e670:	movhi	r0, #1
   4e674:	movls	r0, #0
   4e678:	cmp	r3, #0
   4e67c:	eorne	r0, r0, #1
   4e680:	moveq	r0, #0
   4e684:	cmp	r0, #0
   4e688:	add	r3, r2, ip, lsl #1
   4e68c:	bne	4e710 <luaL_error@@Base+0x8624>
   4e690:	cmp	r3, #16
   4e694:	bhi	4e708 <luaL_error@@Base+0x861c>
   4e698:	ldr	r3, [sp, #24]
   4e69c:	add	r1, sp, #48	; 0x30
   4e6a0:	add	r6, r3, #2
   4e6a4:	ands	r2, r2, #1
   4e6a8:	add	r3, r3, r8, lsr #3
   4e6ac:	add	r6, r1, r6, lsl #3
   4e6b0:	str	r3, [sp, #24]
   4e6b4:	mov	r8, r1
   4e6b8:	streq	r2, [sp, #28]
   4e6bc:	addne	r3, r3, #1
   4e6c0:	strne	r3, [sp, #24]
   4e6c4:	strne	r3, [sp, #28]
   4e6c8:	b	4e394 <luaL_error@@Base+0x82a8>
   4e6cc:	cmp	r2, #1
   4e6d0:	ldrsbeq	r3, [r6]
   4e6d4:	ldrshne	r3, [r6]
   4e6d8:	b	4e3e4 <luaL_error@@Base+0x82f8>
   4e6dc:	ldr	r2, [sp, #12]
   4e6e0:	mov	r1, r4
   4e6e4:	mov	r0, fp
   4e6e8:	str	r3, [sp, #36]	; 0x24
   4e6ec:	bl	155bc <_start@@Base+0x220c>
   4e6f0:	add	r8, r8, #3
   4e6f4:	ldr	r3, [sp, #36]	; 0x24
   4e6f8:	lsr	r2, r8, #2
   4e6fc:	cmp	r0, #1
   4e700:	bhi	4e358 <luaL_error@@Base+0x826c>
   4e704:	b	4e594 <luaL_error@@Base+0x84a8>
   4e708:	str	r0, [sp, #28]
   4e70c:	b	4e614 <luaL_error@@Base+0x8528>
   4e710:	cmp	r3, #17
   4e714:	bhi	4e748 <luaL_error@@Base+0x865c>
   4e718:	ldr	r0, [sp, #28]
   4e71c:	add	r3, sp, #48	; 0x30
   4e720:	tst	r2, #1
   4e724:	add	r6, r3, r0, lsl #3
   4e728:	add	r3, ip, r8, lsr #3
   4e72c:	str	r3, [sp, #24]
   4e730:	subeq	r3, r3, #1
   4e734:	add	r6, r6, #12
   4e738:	add	r8, sp, #48	; 0x30
   4e73c:	streq	r3, [sp, #28]
   4e740:	strne	r1, [sp, #28]
   4e744:	b	4e394 <luaL_error@@Base+0x82a8>
   4e748:	str	r1, [sp, #28]
   4e74c:	b	4e614 <luaL_error@@Base+0x8528>
   4e750:	ldr	r3, [sp, #16]
   4e754:	cmp	r3, r7
   4e758:	bhi	4e2d4 <luaL_error@@Base+0x81e8>
   4e75c:	ldr	r0, [sp, #32]
   4e760:	ldr	r1, [pc, #376]	; 4e8e0 <luaL_error@@Base+0x87f4>
   4e764:	bl	35a48 <lua_error@@Base+0xa8>
   4e768:	ldr	r1, [r5, #4]
   4e76c:	ldr	r0, [fp, #12]
   4e770:	add	r1, r1, #8
   4e774:	bl	32a24 <luaL_where@@Base+0x12920>
   4e778:	ldr	r1, [sp, #32]
   4e77c:	mov	r3, #10
   4e780:	strb	r3, [r0, #5]
   4e784:	ldr	sl, [r5]
   4e788:	ldr	r3, [r1, #20]
   4e78c:	strh	r4, [r0, #6]
   4e790:	add	r2, r3, #8
   4e794:	lsr	sl, sl, #28
   4e798:	str	r2, [r1, #20]
   4e79c:	cmp	sl, #1
   4e7a0:	mvn	r2, #10
   4e7a4:	mov	r6, r0
   4e7a8:	str	r0, [r3]
   4e7ac:	str	r2, [r3, #4]
   4e7b0:	beq	4e7f8 <luaL_error@@Base+0x870c>
   4e7b4:	ldr	r3, [sp, #12]
   4e7b8:	ldr	r3, [r3]
   4e7bc:	ands	r3, r3, #8388608	; 0x800000
   4e7c0:	bne	4e26c <luaL_error@@Base+0x8180>
   4e7c4:	mov	sl, r3
   4e7c8:	strb	r3, [sp, #57]	; 0x39
   4e7cc:	b	4e270 <luaL_error@@Base+0x8184>
   4e7d0:	cmp	r0, #0
   4e7d4:	movne	r4, #1
   4e7d8:	bne	4e510 <luaL_error@@Base+0x8424>
   4e7dc:	ldr	r0, [r3, #-8]
   4e7e0:	ldr	r2, [r5, #4]
   4e7e4:	add	r0, r0, #8
   4e7e8:	add	r1, sp, #64	; 0x40
   4e7ec:	bl	12cb8 <memcpy@plt>
   4e7f0:	mov	r4, #1
   4e7f4:	b	4e510 <luaL_error@@Base+0x8424>
   4e7f8:	mov	r1, r5
   4e7fc:	ldr	r2, [sp, #12]
   4e800:	mov	r0, fp
   4e804:	bl	155bc <_start@@Base+0x220c>
   4e808:	cmp	r0, #0
   4e80c:	moveq	r3, #1
   4e810:	movne	r3, #0
   4e814:	addeq	r6, r6, #8
   4e818:	strb	r3, [sp, #57]	; 0x39
   4e81c:	streq	r6, [sp, #128]	; 0x80
   4e820:	beq	4e270 <luaL_error@@Base+0x8184>
   4e824:	b	4e26c <luaL_error@@Base+0x8180>
   4e828:	mov	r0, r5
   4e82c:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   4e830:	b	4e528 <luaL_error@@Base+0x843c>
   4e834:	ldrb	r3, [sp, #57]	; 0x39
   4e838:	cmp	r3, #0
   4e83c:	bne	4e510 <luaL_error@@Base+0x8424>
   4e840:	ldr	r3, [sp, #32]
   4e844:	mov	r1, r5
   4e848:	mov	r0, fp
   4e84c:	ldr	r3, [r3, #20]
   4e850:	ldr	r6, [r3, #-8]
   4e854:	bl	155bc <_start@@Base+0x220c>
   4e858:	add	r6, r6, #8
   4e85c:	add	r3, sp, #128	; 0x80
   4e860:	add	r1, sp, #64	; 0x40
   4e864:	ldr	r2, [r5, #4]
   4e868:	cmp	r0, #1
   4e86c:	movls	r1, r3
   4e870:	mov	r0, r6
   4e874:	bl	12cb8 <memcpy@plt>
   4e878:	b	4e510 <luaL_error@@Base+0x8424>
   4e87c:	ldr	r3, [sp, #16]
   4e880:	cmp	r3, r7
   4e884:	bhi	4e2d4 <luaL_error@@Base+0x81e8>
   4e888:	strb	r9, [sp, #56]	; 0x38
   4e88c:	str	r9, [sp, #52]	; 0x34
   4e890:	ldr	r2, [fp]
   4e894:	add	r8, sp, #48	; 0x30
   4e898:	b	4e424 <luaL_error@@Base+0x8338>
   4e89c:	mov	r5, #9
   4e8a0:	b	4e11c <luaL_error@@Base+0x8030>
   4e8a4:	ldr	r0, [sp, #32]
   4e8a8:	ldr	r1, [pc, #52]	; 4e8e4 <luaL_error@@Base+0x87f8>
   4e8ac:	bl	35a48 <lua_error@@Base+0xa8>
   4e8b0:	strb	r9, [sp, #56]	; 0x38
   4e8b4:	str	r9, [sp, #52]	; 0x34
   4e8b8:	add	r8, sp, #48	; 0x30
   4e8bc:	b	4e424 <luaL_error@@Base+0x8338>
   4e8c0:	mov	r1, r4
   4e8c4:	ldr	r4, [sp, #32]
   4e8c8:	mov	r0, r4
   4e8cc:	bl	3cfec <luaL_typerror@@Base+0x6c80>
   4e8d0:	ldr	r1, [pc, #16]	; 4e8e8 <luaL_error@@Base+0x87fc>
   4e8d4:	add	r2, r0, #16
   4e8d8:	mov	r0, r4
   4e8dc:	bl	4a618 <luaL_error@@Base+0x452c>
   4e8e0:	andeq	r0, r0, r4, asr #26
   4e8e4:	andeq	r0, r0, r3, ror #28
   4e8e8:	andeq	r0, r0, pc, lsr #26
   4e8ec:	push	{r4, r5, r6, r7, lr}
   4e8f0:	mov	r5, r0
   4e8f4:	ldr	r4, [r1]
   4e8f8:	mov	r0, r1
   4e8fc:	sub	r4, r2, r4
   4e900:	sub	sp, sp, #12
   4e904:	asr	r4, r4, #4
   4e908:	mov	r1, r4
   4e90c:	mov	r2, r3
   4e910:	mov	r7, r3
   4e914:	bl	1f3c4 <lua_atpanic@@Base+0x1f4>
   4e918:	ldr	r6, [r5, #16]
   4e91c:	subs	r1, r0, #0
   4e920:	beq	4e9e4 <luaL_error@@Base+0x88f8>
   4e924:	ldr	r3, [r1, #4]
   4e928:	cmn	r3, #9
   4e92c:	ldreq	ip, [r5, #20]
   4e930:	beq	4e9a8 <luaL_error@@Base+0x88bc>
   4e934:	cmp	r7, #0
   4e938:	mov	r0, r5
   4e93c:	add	r2, r6, #8
   4e940:	bne	4e974 <luaL_error@@Base+0x8888>
   4e944:	bl	457dc <luaL_typerror@@Base+0xf470>
   4e948:	cmp	r0, #0
   4e94c:	beq	4e994 <luaL_error@@Base+0x88a8>
   4e950:	ldr	r3, [r0, #4]
   4e954:	cmn	r3, #1
   4e958:	beq	4e9e4 <luaL_error@@Base+0x88f8>
   4e95c:	ldr	r3, [r5, #20]
   4e960:	ldrd	r4, [r0]
   4e964:	mov	r0, #1
   4e968:	strd	r4, [r3, #-8]
   4e96c:	add	sp, sp, #12
   4e970:	pop	{r4, r5, r6, r7, pc}
   4e974:	bl	458dc <luaL_typerror@@Base+0xf570>
   4e978:	subs	r3, r0, #0
   4e97c:	beq	4e994 <luaL_error@@Base+0x88a8>
   4e980:	ldrd	r4, [r6, #16]
   4e984:	mov	r0, #0
   4e988:	strd	r4, [r3]
   4e98c:	add	sp, sp, #12
   4e990:	pop	{r4, r5, r6, r7, pc}
   4e994:	ldr	ip, [r5, #20]
   4e998:	sub	r1, ip, #8
   4e99c:	ldrd	r2, [ip]
   4e9a0:	strd	r2, [r6]
   4e9a4:	ldr	r6, [r5, #16]
   4e9a8:	ldrd	r0, [r1]
   4e9ac:	ldr	r4, [r6, #-4]
   4e9b0:	add	r3, ip, #16
   4e9b4:	sub	r2, r3, r6
   4e9b8:	mov	lr, #0
   4e9bc:	add	r2, r2, #2
   4e9c0:	strd	r0, [r6, #-8]
   4e9c4:	str	r2, [ip, #12]
   4e9c8:	strd	r4, [ip, #4]
   4e9cc:	str	lr, [ip]
   4e9d0:	mov	r0, lr
   4e9d4:	str	r3, [r5, #20]
   4e9d8:	str	r3, [r5, #16]
   4e9dc:	add	sp, sp, #12
   4e9e0:	pop	{r4, r5, r6, r7, pc}
   4e9e4:	mov	r1, r4
   4e9e8:	mov	r0, r5
   4e9ec:	bl	3cfec <luaL_typerror@@Base+0x6c80>
   4e9f0:	ldr	r1, [r5, #16]
   4e9f4:	ldr	r3, [r1, #12]
   4e9f8:	cmn	r3, #5
   4e9fc:	add	r2, r0, #16
   4ea00:	beq	4ea30 <luaL_error@@Base+0x8944>
   4ea04:	cmn	r3, #11
   4ea08:	beq	4ea44 <luaL_error@@Base+0x8958>
   4ea0c:	cmn	r3, #14
   4ea10:	mvnhi	r3, r3
   4ea14:	ldrhi	r1, [pc, #72]	; 4ea64 <luaL_error@@Base+0x8978>
   4ea18:	ldrls	r3, [pc, #72]	; 4ea68 <luaL_error@@Base+0x897c>
   4ea1c:	addhi	r3, r1, r3, lsl #2
   4ea20:	ldrhi	r3, [r3, #-216]	; 0xffffff28
   4ea24:	mov	r0, r5
   4ea28:	ldr	r1, [pc, #60]	; 4ea6c <luaL_error@@Base+0x8980>
   4ea2c:	bl	4a618 <luaL_error@@Base+0x452c>
   4ea30:	ldr	r3, [r1, #8]
   4ea34:	mov	r0, r5
   4ea38:	add	r3, r3, #16
   4ea3c:	mov	r1, #3440	; 0xd70
   4ea40:	bl	4a618 <luaL_error@@Base+0x452c>
   4ea44:	ldr	r3, [r1, #8]
   4ea48:	mov	r0, r5
   4ea4c:	str	r2, [sp, #4]
   4ea50:	ldrh	r1, [r3, #6]
   4ea54:	bl	3cfec <luaL_typerror@@Base+0x6c80>
   4ea58:	ldr	r2, [sp, #4]
   4ea5c:	add	r3, r0, #16
   4ea60:	b	4ea24 <luaL_error@@Base+0x8938>
   4ea64:			; <UNDEFINED> instruction: 0x00070cb0
   4ea68:	andeq	r2, r7, r8, asr #29
   4ea6c:	andeq	r0, r0, r5, lsr #27
   4ea70:	push	{r4, r5, r6, r7, lr}
   4ea74:	mov	r4, r0
   4ea78:	ldr	r0, [r0, #8]
   4ea7c:	ldr	r2, [r4, #16]
   4ea80:	ldr	r1, [r4, #20]
   4ea84:	ldr	r5, [r0, #228]	; 0xe4
   4ea88:	sub	sp, sp, #20
   4ea8c:	add	r6, r2, #16
   4ea90:	mov	r3, #0
   4ea94:	cmp	r6, r1
   4ea98:	str	r4, [r5, #12]
   4ea9c:	str	r3, [sp, #8]
   4eaa0:	bcs	4ebc8 <luaL_error@@Base+0x8adc>
   4eaa4:	ldr	r3, [r2, #4]
   4eaa8:	cmn	r3, #11
   4eaac:	bne	4ebc8 <luaL_error@@Base+0x8adc>
   4eab0:	add	r3, sp, #8
   4eab4:	ldr	r1, [r2]
   4eab8:	mov	r0, r5
   4eabc:	str	r3, [sp]
   4eac0:	add	r2, r2, #8
   4eac4:	add	r3, sp, #12
   4eac8:	bl	4b72c <luaL_error@@Base+0x5640>
   4eacc:	ldr	r7, [sp, #8]
   4ead0:	tst	r7, #1
   4ead4:	beq	4eafc <luaL_error@@Base+0x8a10>
   4ead8:	tst	r7, #33554432	; 0x2000000
   4eadc:	bne	4ebd8 <luaL_error@@Base+0x8aec>
   4eae0:	mov	r2, r0
   4eae4:	mov	r1, r5
   4eae8:	mov	r0, r4
   4eaec:	mov	r3, #1
   4eaf0:	bl	4e8ec <luaL_error@@Base+0x8800>
   4eaf4:	add	sp, sp, #20
   4eaf8:	pop	{r4, r5, r6, r7, pc}
   4eafc:	ldr	r1, [r0]
   4eb00:	ldr	r2, [sp, #12]
   4eb04:	lsr	r3, r1, #28
   4eb08:	cmp	r3, #11
   4eb0c:	beq	4ebe4 <luaL_error@@Base+0x8af8>
   4eb10:	cmp	r3, #10
   4eb14:	beq	4eba4 <luaL_error@@Base+0x8ab8>
   4eb18:	ldr	lr, [r5]
   4eb1c:	uxth	r1, r1
   4eb20:	ldr	r0, [pc, #200]	; 4ebf0 <luaL_error@@Base+0x8b04>
   4eb24:	ldr	r3, [lr, r1, lsl #4]
   4eb28:	add	r1, lr, r1, lsl #4
   4eb2c:	and	r0, r0, r3
   4eb30:	cmp	r0, #545259520	; 0x20800000
   4eb34:	uxtheq	r1, r3
   4eb38:	ldreq	r2, [r2]
   4eb3c:	ldreq	r3, [lr, r1, lsl #4]
   4eb40:	addeq	r1, lr, r1, lsl #4
   4eb44:	lsr	r0, r3, #28
   4eb48:	cmp	r0, #8
   4eb4c:	bne	4eb7c <luaL_error@@Base+0x8a90>
   4eb50:	lsr	ip, r3, #16
   4eb54:	uxtb	ip, ip
   4eb58:	cmp	ip, #1
   4eb5c:	ldreq	r1, [r1, #4]
   4eb60:	orreq	r7, r7, r1
   4eb64:	uxth	r1, r3
   4eb68:	ldr	r3, [lr, r1, lsl #4]
   4eb6c:	add	r1, lr, r1, lsl #4
   4eb70:	lsr	ip, r3, #28
   4eb74:	cmp	ip, #8
   4eb78:	beq	4eb50 <luaL_error@@Base+0x8a64>
   4eb7c:	orr	r0, r7, r3
   4eb80:	ands	r4, r0, #33554432	; 0x2000000
   4eb84:	bne	4ebe4 <luaL_error@@Base+0x8af8>
   4eb88:	mov	r0, r5
   4eb8c:	str	r4, [sp]
   4eb90:	mov	r3, r6
   4eb94:	bl	4baa0 <luaL_error@@Base+0x59b4>
   4eb98:	mov	r0, r4
   4eb9c:	add	sp, sp, #20
   4eba0:	pop	{r4, r5, r6, r7, pc}
   4eba4:	orr	r0, r7, r1
   4eba8:	ands	r4, r0, #33554432	; 0x2000000
   4ebac:	bne	4ebe4 <luaL_error@@Base+0x8af8>
   4ebb0:	mov	r0, r5
   4ebb4:	mov	r3, r6
   4ebb8:	bl	4c274 <luaL_error@@Base+0x6188>
   4ebbc:	mov	r0, r4
   4ebc0:	add	sp, sp, #20
   4ebc4:	pop	{r4, r5, r6, r7, pc}
   4ebc8:	mov	r0, r4
   4ebcc:	mov	r2, #10
   4ebd0:	mov	r1, #1
   4ebd4:	bl	36374 <luaL_typerror@@Base+0x8>
   4ebd8:	mov	r0, r4
   4ebdc:	ldr	r1, [pc, #16]	; 4ebf4 <luaL_error@@Base+0x8b08>
   4ebe0:	bl	35a48 <lua_error@@Base+0xa8>
   4ebe4:	ldr	r0, [r5, #12]
   4ebe8:	ldr	r1, [pc, #4]	; 4ebf4 <luaL_error@@Base+0x8b08>
   4ebec:	bl	35a48 <lua_error@@Base+0xa8>
   4ebf0:			; <UNDEFINED> instruction: 0xf0800000
   4ebf4:	andeq	r0, r0, r2, ror #27
   4ebf8:	ldr	r2, [r0, #8]
   4ebfc:	ldr	r3, [r0, #16]
   4ec00:	push	{r4, r5, r6, lr}
   4ec04:	sub	sp, sp, #16
   4ec08:	ldr	r1, [r0, #20]
   4ec0c:	ldr	r5, [r2, #228]	; 0xe4
   4ec10:	add	r2, r3, #8
   4ec14:	mov	r6, #0
   4ec18:	cmp	r2, r1
   4ec1c:	mov	r4, r0
   4ec20:	str	r0, [r5, #12]
   4ec24:	str	r6, [sp, #8]
   4ec28:	bcs	4ee48 <luaL_error@@Base+0x8d5c>
   4ec2c:	ldr	r1, [r3, #4]
   4ec30:	cmn	r1, #11
   4ec34:	bne	4ee48 <luaL_error@@Base+0x8d5c>
   4ec38:	ldr	r1, [r3]
   4ec3c:	add	r3, sp, #8
   4ec40:	str	r3, [sp]
   4ec44:	mov	r0, r5
   4ec48:	add	r3, sp, #12
   4ec4c:	bl	4b72c <luaL_error@@Base+0x5640>
   4ec50:	ldr	r3, [sp, #8]
   4ec54:	ands	r3, r3, #1
   4ec58:	bne	4ecf4 <luaL_error@@Base+0x8c08>
   4ec5c:	ldr	r1, [r0]
   4ec60:	ldr	lr, [r4, #20]
   4ec64:	lsr	r2, r1, #28
   4ec68:	cmp	r2, #11
   4ec6c:	beq	4ed10 <luaL_error@@Base+0x8c24>
   4ec70:	cmp	r2, #10
   4ec74:	ldr	r6, [sp, #12]
   4ec78:	beq	4ed5c <luaL_error@@Base+0x8c70>
   4ec7c:	ldr	ip, [r5]
   4ec80:	uxth	r2, r1
   4ec84:	ldr	r3, [pc, #472]	; 4ee64 <luaL_error@@Base+0x8d78>
   4ec88:	ldr	r0, [ip, r2, lsl #4]
   4ec8c:	add	r1, ip, r2, lsl #4
   4ec90:	and	r3, r3, r0
   4ec94:	cmp	r3, #545259520	; 0x20800000
   4ec98:	beq	4ed48 <luaL_error@@Base+0x8c5c>
   4ec9c:	lsr	r3, r0, #28
   4eca0:	cmp	r3, #8
   4eca4:	bne	4ecc0 <luaL_error@@Base+0x8bd4>
   4eca8:	uxth	r1, r0
   4ecac:	ldr	r0, [ip, r1, lsl #4]
   4ecb0:	add	r1, ip, r1, lsl #4
   4ecb4:	lsr	r3, r0, #28
   4ecb8:	cmp	r3, #8
   4ecbc:	beq	4eca8 <luaL_error@@Base+0x8bbc>
   4ecc0:	str	r6, [sp]
   4ecc4:	sub	r3, lr, #8
   4ecc8:	mov	r0, r5
   4eccc:	bl	4b580 <luaL_error@@Base+0x5494>
   4ecd0:	cmp	r0, #0
   4ecd4:	beq	4ece8 <luaL_error@@Base+0x8bfc>
   4ecd8:	ldr	r3, [r4, #8]
   4ecdc:	ldrd	r2, [r3, #20]
   4ece0:	cmp	r2, r3
   4ece4:	bcs	4ee08 <luaL_error@@Base+0x8d1c>
   4ece8:	mov	r0, #1
   4ecec:	add	sp, sp, #16
   4ecf0:	pop	{r4, r5, r6, pc}
   4ecf4:	mov	r2, r0
   4ecf8:	mov	r3, r6
   4ecfc:	mov	r1, r5
   4ed00:	mov	r0, r4
   4ed04:	bl	4e8ec <luaL_error@@Base+0x8800>
   4ed08:	add	sp, sp, #16
   4ed0c:	pop	{r4, r5, r6, pc}
   4ed10:	ldr	ip, [r5]
   4ed14:	uxth	r1, r1
   4ed18:	ldr	r3, [r0, #4]
   4ed1c:	ldr	r2, [ip, r1, lsl #4]
   4ed20:	tst	r2, #8388608	; 0x800000
   4ed24:	beq	4ed30 <luaL_error@@Base+0x8c44>
   4ed28:	cmp	r3, #0
   4ed2c:	blt	4edd0 <luaL_error@@Base+0x8ce4>
   4ed30:	mvn	r2, #13
   4ed34:	mov	r0, #1
   4ed38:	str	r3, [lr, #-8]
   4ed3c:	str	r2, [lr, #-4]
   4ed40:	add	sp, sp, #16
   4ed44:	pop	{r4, r5, r6, pc}
   4ed48:	uxth	r2, r0
   4ed4c:	ldr	r6, [r6]
   4ed50:	add	r1, ip, r2, lsl #4
   4ed54:	ldr	r0, [ip, r2, lsl #4]
   4ed58:	b	4ec9c <luaL_error@@Base+0x8bb0>
   4ed5c:	lsr	r0, r1, #16
   4ed60:	and	r0, r0, #127	; 0x7f
   4ed64:	cmp	r0, #2
   4ed68:	beq	4edc8 <luaL_error@@Base+0x8cdc>
   4ed6c:	cmp	r0, #4
   4ed70:	beq	4ee18 <luaL_error@@Base+0x8d2c>
   4ed74:	cmp	r0, #1
   4ed78:	ldrbeq	r3, [r6]
   4ed7c:	lsr	r2, r1, #8
   4ed80:	and	r2, r2, #127	; 0x7f
   4ed84:	and	ip, r1, #127	; 0x7f
   4ed88:	add	r4, ip, r2
   4ed8c:	cmp	r4, r0, lsl #3
   4ed90:	bhi	4ee58 <luaL_error@@Base+0x8d6c>
   4ed94:	tst	r1, #134217728	; 0x8000000
   4ed98:	bne	4ede4 <luaL_error@@Base+0x8cf8>
   4ed9c:	rsb	r0, r2, #32
   4eda0:	sub	r2, r0, ip
   4eda4:	tst	r1, #8388608	; 0x800000
   4eda8:	lsl	r2, r3, r2
   4edac:	beq	4ee20 <luaL_error@@Base+0x8d34>
   4edb0:	lsrs	r2, r2, r0
   4edb4:	bmi	4ee34 <luaL_error@@Base+0x8d48>
   4edb8:	mvn	r3, #13
   4edbc:	mov	r0, #1
   4edc0:	strd	r2, [lr, #-8]
   4edc4:	b	4ecec <luaL_error@@Base+0x8c00>
   4edc8:	ldrh	r3, [r6]
   4edcc:	b	4ed7c <luaL_error@@Base+0x8c90>
   4edd0:	vmov	s15, r3
   4edd4:	mov	r0, #1
   4edd8:	vcvt.f64.u32	d7, s15
   4eddc:	vstr	d7, [lr, #-8]
   4ede0:	b	4ecec <luaL_error@@Base+0x8c00>
   4ede4:	lsr	r2, r3, ip
   4ede8:	ldr	r1, [r5, #16]
   4edec:	and	r2, r2, #1
   4edf0:	mvn	r3, #1
   4edf4:	sub	r2, r3, r2
   4edf8:	str	r2, [lr, #-4]
   4edfc:	mov	r0, #1
   4ee00:	str	r2, [r1, #140]	; 0x8c
   4ee04:	b	4ecec <luaL_error@@Base+0x8c00>
   4ee08:	mov	r0, r4
   4ee0c:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   4ee10:	mov	r0, #1
   4ee14:	b	4ecec <luaL_error@@Base+0x8c00>
   4ee18:	ldr	r3, [r6]
   4ee1c:	b	4ed7c <luaL_error@@Base+0x8c90>
   4ee20:	asr	r2, r2, r0
   4ee24:	mvn	r3, #13
   4ee28:	mov	r0, #1
   4ee2c:	strd	r2, [lr, #-8]
   4ee30:	b	4ecec <luaL_error@@Base+0x8c00>
   4ee34:	vmov	s15, r2
   4ee38:	mov	r0, #1
   4ee3c:	vcvt.f64.u32	d7, s15
   4ee40:	vstr	d7, [lr, #-8]
   4ee44:	b	4ecec <luaL_error@@Base+0x8c00>
   4ee48:	mov	r0, r4
   4ee4c:	mov	r2, #10
   4ee50:	mov	r1, #1
   4ee54:	bl	36374 <luaL_typerror@@Base+0x8>
   4ee58:	ldr	r0, [r5, #12]
   4ee5c:	ldr	r1, [pc, #4]	; 4ee68 <luaL_error@@Base+0x8d7c>
   4ee60:	bl	35a48 <lua_error@@Base+0xa8>
   4ee64:			; <UNDEFINED> instruction: 0xf0800000
   4ee68:	andeq	r0, r0, ip, asr #28
   4ee6c:	push	{r7, lr}
   4ee70:	sub	sp, sp, #72	; 0x48
   4ee74:	ldr	r7, [pc, #116]	; 4eef0 <luaL_error@@Base+0x8e04>
   4ee78:	mov	r4, r0
   4ee7c:	mov	r6, r2
   4ee80:	add	r0, sp, #12
   4ee84:	mov	r2, r3
   4ee88:	mov	r5, r3
   4ee8c:	ldr	r8, [sp, #80]	; 0x50
   4ee90:	bl	17ebc <_start@@Base+0x4b0c>
   4ee94:	ldr	r1, [r7]
   4ee98:	ldr	r2, [sp, #84]	; 0x54
   4ee9c:	add	r1, r1, r8
   4eea0:	mov	r0, r4
   4eea4:	bl	1fe24 <lua_getstack@@Base+0x16c>
   4eea8:	mov	r3, r5
   4eeac:	add	r2, sp, #12
   4eeb0:	ldr	r1, [pc, #60]	; 4eef4 <luaL_error@@Base+0x8e08>
   4eeb4:	str	r0, [sp]
   4eeb8:	mov	r0, r4
   4eebc:	bl	20040 <lua_getstack@@Base+0x388>
   4eec0:	cmp	r6, #0
   4eec4:	beq	4eee4 <luaL_error@@Base+0x8df8>
   4eec8:	ldr	r1, [r7]
   4eecc:	mov	r2, r0
   4eed0:	add	r1, r1, #2128	; 0x850
   4eed4:	mov	r3, r6
   4eed8:	add	r1, r1, #10
   4eedc:	mov	r0, r4
   4eee0:	bl	20040 <lua_getstack@@Base+0x388>
   4eee4:	mov	r0, r4
   4eee8:	mov	r1, #3
   4eeec:	bl	20ff0 <luaL_where@@Base+0xeec>
   4eef0:	muleq	r8, ip, r1
   4eef4:	muleq	r7, r4, ip
   4eef8:	push	{r2, r3}
   4eefc:	subs	r2, r1, #0
   4ef00:	push	{lr}		; (str lr, [sp, #-4]!)
   4ef04:	sub	sp, sp, #20
   4ef08:	mov	r4, r0
   4ef0c:	ldr	r5, [sp, #24]
   4ef10:	beq	4ef44 <luaL_error@@Base+0x8e58>
   4ef14:	sub	r2, r2, #284	; 0x11c
   4ef18:	sub	r2, r2, #2
   4ef1c:	cmp	r2, #2
   4ef20:	bhi	4ef60 <luaL_error@@Base+0x8e74>
   4ef24:	ldr	r0, [r0, #44]	; 0x2c
   4ef28:	ldr	r3, [r4, #48]	; 0x30
   4ef2c:	cmp	r3, r0
   4ef30:	beq	4ef70 <luaL_error@@Base+0x8e84>
   4ef34:	mov	r3, #0
   4ef38:	strb	r3, [r0], #1
   4ef3c:	ldr	r2, [r4, #52]	; 0x34
   4ef40:	str	r0, [r4, #44]	; 0x2c
   4ef44:	add	ip, sp, #28
   4ef48:	ldr	r3, [r4, #68]	; 0x44
   4ef4c:	ldr	r1, [r4, #76]	; 0x4c
   4ef50:	ldr	r0, [r4, #4]
   4ef54:	stm	sp, {r5, ip}
   4ef58:	str	ip, [sp, #12]
   4ef5c:	bl	4ee6c <luaL_error@@Base+0x8d80>
   4ef60:	add	r0, r0, #4
   4ef64:	bl	20140 <luaL_where@@Base+0x3c>
   4ef68:	mov	r2, r0
   4ef6c:	b	4ef44 <luaL_error@@Base+0x8e58>
   4ef70:	mov	r1, #1
   4ef74:	add	r0, r4, #44	; 0x2c
   4ef78:	bl	2ff68 <luaL_where@@Base+0xfe64>
   4ef7c:	b	4ef34 <luaL_error@@Base+0x8e48>
   4ef80:	ldrd	r2, [r0, #24]
   4ef84:	push	{r4, r5, r6, lr}
   4ef88:	mov	r4, r0
   4ef8c:	cmp	r2, r3
   4ef90:	ldr	r5, [r0, #32]
   4ef94:	bcs	4f018 <luaL_error@@Base+0x8f2c>
   4ef98:	add	r3, r2, #1
   4ef9c:	str	r3, [r0, #24]
   4efa0:	ldrb	r0, [r2]
   4efa4:	cmp	r0, #13
   4efa8:	cmpne	r0, #10
   4efac:	moveq	r3, #1
   4efb0:	movne	r3, #0
   4efb4:	cmp	r5, r0
   4efb8:	moveq	r3, #0
   4efbc:	andne	r3, r3, #1
   4efc0:	cmp	r3, #0
   4efc4:	str	r0, [r4, #32]
   4efc8:	bne	4eff4 <luaL_error@@Base+0x8f08>
   4efcc:	ldr	r3, [r4, #68]	; 0x44
   4efd0:	ldr	r2, [pc, #84]	; 4f02c <luaL_error@@Base+0x8f40>
   4efd4:	add	r3, r3, #1
   4efd8:	cmp	r3, r2
   4efdc:	str	r3, [r4, #68]	; 0x44
   4efe0:	pople	{r4, r5, r6, pc}
   4efe4:	ldr	r2, [pc, #68]	; 4f030 <luaL_error@@Base+0x8f44>
   4efe8:	ldr	r1, [r4, #36]	; 0x24
   4efec:	mov	r0, r4
   4eff0:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   4eff4:	ldr	r3, [r4, #24]
   4eff8:	ldr	r2, [r4, #28]
   4effc:	cmp	r3, r2
   4f000:	bcs	4f020 <luaL_error@@Base+0x8f34>
   4f004:	add	r2, r3, #1
   4f008:	str	r2, [r4, #24]
   4f00c:	ldrb	r0, [r3]
   4f010:	str	r0, [r4, #32]
   4f014:	b	4efcc <luaL_error@@Base+0x8ee0>
   4f018:	bl	15358 <_start@@Base+0x1fa8>
   4f01c:	b	4efa4 <luaL_error@@Base+0x8eb8>
   4f020:	mov	r0, r4
   4f024:	bl	15358 <_start@@Base+0x1fa8>
   4f028:	b	4f010 <luaL_error@@Base+0x8f24>
   4f02c:	svcvc	0x00fffeff
   4f030:	andeq	r0, r0, r7, ror #16
   4f034:	mov	r2, r1
   4f038:	push	{r4, lr}
   4f03c:	ldr	r1, [r0, #36]	; 0x24
   4f040:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   4f044:	cmn	r1, #1
   4f048:	bxeq	lr
   4f04c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4f050:	mov	r7, r3
   4f054:	ldr	r3, [sp, #40]	; 0x28
   4f058:	mov	r6, r0
   4f05c:	add	r9, r3, #32512	; 0x7f00
   4f060:	mov	r5, r1
   4f064:	mov	sl, r2
   4f068:	ldr	r0, [r0, #52]	; 0x34
   4f06c:	ldr	r8, [pc, #144]	; 4f104 <luaL_error@@Base+0x9018>
   4f070:	add	r9, r9, #255	; 0xff
   4f074:	b	4f0a4 <luaL_error@@Base+0x8fb8>
   4f078:	add	r3, sl, #32512	; 0x7f00
   4f07c:	add	r3, r3, #255	; 0xff
   4f080:	sub	r5, r3, r5
   4f084:	ldr	r0, [r6, #52]	; 0x34
   4f088:	cmp	r5, r8
   4f08c:	add	fp, r0, fp
   4f090:	bhi	4f0f8 <luaL_error@@Base+0x900c>
   4f094:	cmn	r4, #1
   4f098:	strh	r5, [fp, #2]
   4f09c:	mov	r5, r4
   4f0a0:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4f0a4:	ldr	r3, [r0, r5, lsl #3]
   4f0a8:	mov	r2, r7
   4f0ac:	mov	r1, r5
   4f0b0:	lsr	r3, r3, #16
   4f0b4:	sub	r3, r3, #32768	; 0x8000
   4f0b8:	cmn	r3, #1
   4f0bc:	addne	r4, r5, #1
   4f0c0:	addne	r4, r4, r3
   4f0c4:	moveq	r4, r3
   4f0c8:	bl	1b5a8 <_start@@Base+0x81f8>
   4f0cc:	lsl	fp, r5, #3
   4f0d0:	cmp	r0, #0
   4f0d4:	bne	4f078 <luaL_error@@Base+0x8f8c>
   4f0d8:	sub	r5, r9, r5
   4f0dc:	ldr	r0, [r6, #52]	; 0x34
   4f0e0:	cmp	r5, r8
   4f0e4:	add	fp, r0, fp
   4f0e8:	bls	4f094 <luaL_error@@Base+0x8fa8>
   4f0ec:	ldr	r0, [r6, #4]
   4f0f0:	ldr	r1, [pc, #16]	; 4f108 <luaL_error@@Base+0x901c>
   4f0f4:	bl	4f034 <luaL_error@@Base+0x8f48>
   4f0f8:	ldr	r0, [r6, #4]
   4f0fc:	ldr	r1, [pc, #4]	; 4f108 <luaL_error@@Base+0x901c>
   4f100:	bl	4f034 <luaL_error@@Base+0x8f48>
   4f104:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   4f108:	andeq	r0, r0, r7, lsr r9
   4f10c:	ldr	ip, [r1]
   4f110:	cmn	ip, #1
   4f114:	beq	4f16c <luaL_error@@Base+0x9080>
   4f118:	push	{r4, lr}
   4f11c:	ldr	lr, [r0, #52]	; 0x34
   4f120:	b	4f138 <luaL_error@@Base+0x904c>
   4f124:	add	r1, ip, #1
   4f128:	add	r3, r1, r3
   4f12c:	cmn	r3, #1
   4f130:	beq	4f150 <luaL_error@@Base+0x9064>
   4f134:	mov	ip, r3
   4f138:	ldr	r3, [lr, ip, lsl #3]
   4f13c:	add	r4, lr, ip, lsl #3
   4f140:	lsr	r3, r3, #16
   4f144:	sub	r3, r3, #32768	; 0x8000
   4f148:	cmn	r3, #1
   4f14c:	bne	4f124 <luaL_error@@Base+0x9038>
   4f150:	add	r2, r2, #32512	; 0x7f00
   4f154:	add	r2, r2, #255	; 0xff
   4f158:	sub	r2, r2, ip
   4f15c:	cmp	r2, #65536	; 0x10000
   4f160:	bcs	4f174 <luaL_error@@Base+0x9088>
   4f164:	strh	r2, [r4, #2]
   4f168:	pop	{r4, pc}
   4f16c:	str	r2, [r1]
   4f170:	bx	lr
   4f174:	ldr	r0, [r0, #4]
   4f178:	ldr	r1, [pc]	; 4f180 <luaL_error@@Base+0x9094>
   4f17c:	bl	4f034 <luaL_error@@Base+0x8f48>
   4f180:	andeq	r0, r0, r7, lsr r9
   4f184:	push	{r4, lr}
   4f188:	sub	sp, sp, #8
   4f18c:	ldr	lr, [r0, #20]
   4f190:	cmp	lr, r2
   4f194:	bne	4f1c0 <luaL_error@@Base+0x90d4>
   4f198:	cmn	r1, #1
   4f19c:	str	lr, [r0, #24]
   4f1a0:	bne	4f1ac <luaL_error@@Base+0x90c0>
   4f1a4:	add	sp, sp, #8
   4f1a8:	pop	{r4, pc}
   4f1ac:	mov	r2, r1
   4f1b0:	add	r1, r0, #28
   4f1b4:	add	sp, sp, #8
   4f1b8:	pop	{r4, lr}
   4f1bc:	b	4f10c <luaL_error@@Base+0x9020>
   4f1c0:	str	r2, [sp]
   4f1c4:	mov	r3, #255	; 0xff
   4f1c8:	bl	4f044 <luaL_error@@Base+0x8f58>
   4f1cc:	add	sp, sp, #8
   4f1d0:	pop	{r4, pc}
   4f1d4:	push	{r4, r5, r6, lr}
   4f1d8:	ldr	r5, [r0, #52]	; 0x34
   4f1dc:	add	r6, r5, r1, lsl #3
   4f1e0:	strb	r2, [r6, #1]
   4f1e4:	ldrb	r2, [r5, r1, lsl #3]
   4f1e8:	cmp	r2, #88	; 0x58
   4f1ec:	popne	{r4, r5, r6, pc}
   4f1f0:	ldr	r3, [r0, #52]	; 0x34
   4f1f4:	mov	r4, r1
   4f1f8:	ldr	r1, [r3, r1, lsl #3]
   4f1fc:	lsr	r1, r1, #16
   4f200:	sub	r1, r1, #32768	; 0x8000
   4f204:	cmn	r1, #1
   4f208:	beq	4f21c <luaL_error@@Base+0x9130>
   4f20c:	add	r3, r4, #1
   4f210:	add	r1, r3, r1
   4f214:	cmn	r1, #1
   4f218:	bne	4f230 <luaL_error@@Base+0x9144>
   4f21c:	mov	r2, #50	; 0x32
   4f220:	mvn	r3, #32768	; 0x8000
   4f224:	strb	r2, [r5, r4, lsl #3]
   4f228:	strh	r3, [r6, #2]
   4f22c:	pop	{r4, r5, r6, pc}
   4f230:	mov	r2, r4
   4f234:	bl	4f184 <luaL_error@@Base+0x9098>
   4f238:	b	4f21c <luaL_error@@Base+0x9130>
   4f23c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4f240:	sub	sp, sp, #8
   4f244:	ldr	r5, [r0, #20]
   4f248:	mov	r4, r0
   4f24c:	mov	r2, r5
   4f250:	mov	r3, #255	; 0xff
   4f254:	mov	r8, r1
   4f258:	ldr	r1, [r0, #28]
   4f25c:	str	r5, [sp]
   4f260:	ldr	r7, [r0, #4]
   4f264:	bl	4f044 <luaL_error@@Base+0x8f58>
   4f268:	ldr	r2, [r4, #56]	; 0x38
   4f26c:	mvn	r3, #0
   4f270:	cmp	r2, r5
   4f274:	str	r3, [r4, #28]
   4f278:	bls	4f2a4 <luaL_error@@Base+0x91b8>
   4f27c:	ldr	r3, [r4, #52]	; 0x34
   4f280:	ldr	r1, [r7, #72]	; 0x48
   4f284:	add	r2, r3, r5, lsl #3
   4f288:	str	r8, [r3, r5, lsl #3]
   4f28c:	add	r3, r5, #1
   4f290:	str	r1, [r2, #4]
   4f294:	mov	r0, r5
   4f298:	str	r3, [r4, #20]
   4f29c:	add	sp, sp, #8
   4f2a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4f2a4:	ldr	r1, [r7, #100]	; 0x64
   4f2a8:	ldr	r3, [r4, #52]	; 0x34
   4f2ac:	ldr	r2, [r7, #104]	; 0x68
   4f2b0:	sub	r6, r3, r1
   4f2b4:	cmn	r2, #-67108863	; 0xfc000001
   4f2b8:	asr	sl, r6, #3
   4f2bc:	bhi	4f304 <luaL_error@@Base+0x9218>
   4f2c0:	lsl	r3, r2, #1
   4f2c4:	cmp	r3, #67108864	; 0x4000000
   4f2c8:	movcs	r3, #67108864	; 0x4000000
   4f2cc:	cmp	r3, #8
   4f2d0:	movcs	r9, r3
   4f2d4:	movcc	r9, #8
   4f2d8:	lsl	r2, r2, #3
   4f2dc:	lsl	r3, r9, #3
   4f2e0:	ldr	r0, [r4, #8]
   4f2e4:	bl	205b0 <luaL_where@@Base+0x4ac>
   4f2e8:	sub	sl, r9, sl
   4f2ec:	str	r9, [r7, #104]	; 0x68
   4f2f0:	add	r3, r0, r6
   4f2f4:	str	r0, [r7, #100]	; 0x64
   4f2f8:	str	sl, [r4, #56]	; 0x38
   4f2fc:	str	r3, [r4, #52]	; 0x34
   4f300:	b	4f280 <luaL_error@@Base+0x9194>
   4f304:	ldr	r3, [pc, #12]	; 4f318 <luaL_error@@Base+0x922c>
   4f308:	mov	r2, #67108864	; 0x4000000
   4f30c:	ldr	r1, [r4, #48]	; 0x30
   4f310:	ldr	r0, [r4, #4]
   4f314:	bl	132a0 <pclose@plt+0x204>
   4f318:	strdeq	r2, [r7], -r8
   4f31c:	ldr	r3, [r1, #8]
   4f320:	push	{r4, r5, r6, lr}
   4f324:	cmp	r3, #7
   4f328:	mov	r4, r1
   4f32c:	mov	r5, r0
   4f330:	beq	4f35c <luaL_error@@Base+0x9270>
   4f334:	cmp	r3, #8
   4f338:	beq	4f3c0 <luaL_error@@Base+0x92d4>
   4f33c:	cmp	r3, #9
   4f340:	beq	4f380 <luaL_error@@Base+0x9294>
   4f344:	cmp	r3, #13
   4f348:	beq	4f3d8 <luaL_error@@Base+0x92ec>
   4f34c:	cmp	r3, #6
   4f350:	moveq	r3, #12
   4f354:	streq	r3, [r1, #8]
   4f358:	pop	{r4, r5, r6, pc}
   4f35c:	ldr	r1, [r1]
   4f360:	lsl	r1, r1, #16
   4f364:	orr	r1, r1, #45	; 0x2d
   4f368:	mov	r0, r5
   4f36c:	bl	4f23c <luaL_error@@Base+0x9150>
   4f370:	mov	r3, #11
   4f374:	str	r3, [r4, #8]
   4f378:	str	r0, [r4]
   4f37c:	pop	{r4, r5, r6, pc}
   4f380:	ldr	r1, [r1, #4]
   4f384:	ldr	r2, [r0, #36]	; 0x24
   4f388:	cmp	r1, #0
   4f38c:	blt	4f3ec <luaL_error@@Base+0x9300>
   4f390:	cmp	r1, #255	; 0xff
   4f394:	bls	4f404 <luaL_error@@Base+0x9318>
   4f398:	ldr	r3, [r4]
   4f39c:	sub	r0, r1, #256	; 0x100
   4f3a0:	lsl	r1, r3, #24
   4f3a4:	orr	r1, r1, #58	; 0x3a
   4f3a8:	orr	r1, r1, r0, lsl #16
   4f3ac:	cmp	r2, r3
   4f3b0:	ldrls	r3, [r5, #32]
   4f3b4:	subls	r3, r3, #1
   4f3b8:	strls	r3, [r5, #32]
   4f3bc:	b	4f368 <luaL_error@@Base+0x927c>
   4f3c0:	ldr	r1, [r1]
   4f3c4:	mvn	r2, #4
   4f3c8:	bl	3e594 <luaL_typerror@@Base+0x8228>
   4f3cc:	lsl	r1, r0, #16
   4f3d0:	orr	r1, r1, #54	; 0x36
   4f3d4:	b	4f368 <luaL_error@@Base+0x927c>
   4f3d8:	ldr	r2, [r1, #4]
   4f3dc:	mov	r3, #12
   4f3e0:	str	r2, [r1]
   4f3e4:	str	r3, [r1, #8]
   4f3e8:	pop	{r4, r5, r6, pc}
   4f3ec:	ldr	r3, [r4]
   4f3f0:	mvn	r0, r1
   4f3f4:	lsl	r1, r3, #24
   4f3f8:	orr	r1, r1, #57	; 0x39
   4f3fc:	orr	r1, r1, r0, lsl #16
   4f400:	b	4f3ac <luaL_error@@Base+0x92c0>
   4f404:	cmp	r1, r2
   4f408:	lsl	r1, r1, #16
   4f40c:	ldrcs	r3, [r0, #32]
   4f410:	subcs	r3, r3, #1
   4f414:	strcs	r3, [r0, #32]
   4f418:	ldr	r3, [r4]
   4f41c:	orr	r1, r1, r3, lsl #24
   4f420:	orr	r1, r1, #56	; 0x38
   4f424:	b	4f3ac <luaL_error@@Base+0x92c0>
   4f428:	ldr	r3, [r0, #20]
   4f42c:	ldr	ip, [r0, #24]
   4f430:	cmp	r3, ip
   4f434:	bls	4f4d4 <luaL_error@@Base+0x93e8>
   4f438:	push	{r4, r5, r6, lr}
   4f43c:	sub	r3, r3, #-536870911	; 0xe0000001
   4f440:	ldr	r4, [r0, #52]	; 0x34
   4f444:	add	r6, r4, r3, lsl #3
   4f448:	ldr	lr, [r4, r3, lsl #3]
   4f44c:	lsr	ip, lr, #8
   4f450:	uxtb	r5, lr
   4f454:	cmp	r5, #43	; 0x2b
   4f458:	uxtb	ip, ip
   4f45c:	beq	4f494 <luaL_error@@Base+0x93a8>
   4f460:	cmp	r5, #44	; 0x2c
   4f464:	bne	4f4b0 <luaL_error@@Base+0x93c4>
   4f468:	cmp	ip, r1
   4f46c:	bhi	4f4b0 <luaL_error@@Base+0x93c4>
   4f470:	lsr	lr, lr, #16
   4f474:	add	r3, lr, #1
   4f478:	cmp	r3, r1
   4f47c:	bcc	4f4b0 <luaL_error@@Base+0x93c4>
   4f480:	sub	r2, r2, #1
   4f484:	add	r1, r2, r1
   4f488:	cmp	r1, lr
   4f48c:	strhhi	r1, [r6, #2]
   4f490:	pop	{r4, r5, r6, pc}
   4f494:	lsrs	lr, lr, #16
   4f498:	bne	4f4b0 <luaL_error@@Base+0x93c4>
   4f49c:	cmp	ip, r1
   4f4a0:	beq	4f514 <luaL_error@@Base+0x9428>
   4f4a4:	add	lr, ip, #1
   4f4a8:	cmp	lr, r1
   4f4ac:	beq	4f4f4 <luaL_error@@Base+0x9408>
   4f4b0:	cmp	r2, #1
   4f4b4:	subne	r2, r2, #1
   4f4b8:	lsl	r3, r1, #8
   4f4bc:	addne	r1, r2, r1
   4f4c0:	orrne	r3, r3, #44	; 0x2c
   4f4c4:	orreq	r1, r3, #43	; 0x2b
   4f4c8:	orrne	r1, r3, r1, lsl #16
   4f4cc:	pop	{r4, r5, r6, lr}
   4f4d0:	b	4f23c <luaL_error@@Base+0x9150>
   4f4d4:	cmp	r2, #1
   4f4d8:	subne	r2, r2, #1
   4f4dc:	lsl	r3, r1, #8
   4f4e0:	addne	r1, r2, r1
   4f4e4:	orrne	r3, r3, #44	; 0x2c
   4f4e8:	orreq	r1, r3, #43	; 0x2b
   4f4ec:	orrne	r1, r3, r1, lsl #16
   4f4f0:	b	4f23c <luaL_error@@Base+0x9150>
   4f4f4:	add	r2, r2, #1
   4f4f8:	sub	r1, ip, #1
   4f4fc:	add	r1, r1, r2
   4f500:	lsl	ip, ip, #8
   4f504:	orr	r2, ip, #44	; 0x2c
   4f508:	orr	r2, r2, r1, lsl #16
   4f50c:	str	r2, [r4, r3, lsl #3]
   4f510:	pop	{r4, r5, r6, pc}
   4f514:	cmp	r2, #1
   4f518:	bne	4f4f8 <luaL_error@@Base+0x940c>
   4f51c:	pop	{r4, r5, r6, pc}
   4f520:	push	{r4, r5, r6, r7, r8, lr}
   4f524:	mov	r4, r1
   4f528:	mov	r6, r2
   4f52c:	mov	r7, r0
   4f530:	bl	4f31c <luaL_error@@Base+0x9230>
   4f534:	ldr	r1, [r4, #8]
   4f538:	cmp	r1, #3
   4f53c:	beq	4f5d4 <luaL_error@@Base+0x94e8>
   4f540:	cmp	r1, #4
   4f544:	beq	4f580 <luaL_error@@Base+0x9494>
   4f548:	cmp	r1, #5
   4f54c:	beq	4f5f4 <luaL_error@@Base+0x9508>
   4f550:	cmp	r1, #11
   4f554:	beq	4f63c <luaL_error@@Base+0x9550>
   4f558:	cmp	r1, #12
   4f55c:	beq	4f620 <luaL_error@@Base+0x9534>
   4f560:	cmp	r1, #0
   4f564:	beq	4f650 <luaL_error@@Base+0x9564>
   4f568:	cmp	r1, #2
   4f56c:	pophi	{r4, r5, r6, r7, r8, pc}
   4f570:	lsl	r0, r6, #8
   4f574:	orr	r0, r0, #43	; 0x2b
   4f578:	orr	r1, r0, r1, lsl #16
   4f57c:	b	4f5bc <luaL_error@@Base+0x94d0>
   4f580:	ldr	r3, [r4, #4]
   4f584:	lsl	r5, r6, #8
   4f588:	cmn	r3, #14
   4f58c:	bne	4f5a8 <luaL_error@@Base+0x94bc>
   4f590:	ldr	r0, [r4]
   4f594:	sxth	r3, r0
   4f598:	cmp	r0, r3
   4f59c:	orreq	r1, r5, #41	; 0x29
   4f5a0:	orreq	r1, r1, r0, lsl #16
   4f5a4:	beq	4f5bc <luaL_error@@Base+0x94d0>
   4f5a8:	mov	r1, r4
   4f5ac:	mov	r0, r7
   4f5b0:	bl	3e5f0 <luaL_typerror@@Base+0x8284>
   4f5b4:	orr	r1, r5, #42	; 0x2a
   4f5b8:	orr	r1, r1, r0, lsl #16
   4f5bc:	mov	r0, r7
   4f5c0:	bl	4f23c <luaL_error@@Base+0x9150>
   4f5c4:	mov	r3, #12
   4f5c8:	str	r6, [r4]
   4f5cc:	str	r3, [r4, #8]
   4f5d0:	pop	{r4, r5, r6, r7, r8, pc}
   4f5d4:	ldr	r1, [r4]
   4f5d8:	mvn	r2, #4
   4f5dc:	mov	r0, r7
   4f5e0:	bl	3e594 <luaL_typerror@@Base+0x8228>
   4f5e4:	lsl	r1, r6, #8
   4f5e8:	orr	r1, r1, #39	; 0x27
   4f5ec:	orr	r1, r1, r0, lsl #16
   4f5f0:	b	4f5bc <luaL_error@@Base+0x94d0>
   4f5f4:	ldrb	r3, [r7, #64]	; 0x40
   4f5f8:	mvn	r2, #10
   4f5fc:	mov	r0, r7
   4f600:	orr	r3, r3, #4
   4f604:	strb	r3, [r7, #64]	; 0x40
   4f608:	ldr	r1, [r4]
   4f60c:	bl	3e594 <luaL_typerror@@Base+0x8228>
   4f610:	lsl	r1, r6, #8
   4f614:	orr	r1, r1, #40	; 0x28
   4f618:	orr	r1, r1, r0, lsl #16
   4f61c:	b	4f5bc <luaL_error@@Base+0x94d0>
   4f620:	ldr	r0, [r4]
   4f624:	cmp	r0, r6
   4f628:	beq	4f5c4 <luaL_error@@Base+0x94d8>
   4f62c:	lsl	r1, r6, #8
   4f630:	orr	r1, r1, #18
   4f634:	orr	r1, r1, r0, lsl #16
   4f638:	b	4f5bc <luaL_error@@Base+0x94d0>
   4f63c:	ldr	r2, [r4]
   4f640:	ldr	r3, [r7, #52]	; 0x34
   4f644:	add	r3, r3, r2, lsl #3
   4f648:	strb	r6, [r3, #1]
   4f64c:	b	4f5c4 <luaL_error@@Base+0x94d8>
   4f650:	mov	r0, r7
   4f654:	mov	r2, #1
   4f658:	mov	r1, r6
   4f65c:	bl	4f428 <luaL_error@@Base+0x933c>
   4f660:	b	4f5c4 <luaL_error@@Base+0x94d8>
   4f664:	ldr	r2, [r0, #20]
   4f668:	push	{r4, r5, lr}
   4f66c:	mvn	r1, #0
   4f670:	mov	r4, r0
   4f674:	ldr	r0, [r0, #24]
   4f678:	add	r3, r2, r1
   4f67c:	sub	sp, sp, #12
   4f680:	cmp	r0, r3
   4f684:	ldr	r5, [r4, #28]
   4f688:	str	r3, [sp, #4]
   4f68c:	str	r1, [r4, #28]
   4f690:	ldr	r1, [r4, #52]	; 0x34
   4f694:	bgt	4f6b4 <luaL_error@@Base+0x95c8>
   4f698:	ldrb	r0, [r1, r3, lsl #3]
   4f69c:	add	r3, r1, r3, lsl #3
   4f6a0:	cmp	r0, #50	; 0x32
   4f6a4:	mvneq	r1, #32768	; 0x8000
   4f6a8:	strheq	r1, [r3, #2]
   4f6ac:	streq	r2, [r4, #24]
   4f6b0:	beq	4f6cc <luaL_error@@Base+0x95e0>
   4f6b4:	ldr	r1, [r4, #32]
   4f6b8:	ldr	r3, [pc, #48]	; 4f6f0 <luaL_error@@Base+0x9604>
   4f6bc:	mov	r0, r4
   4f6c0:	orr	r1, r3, r1, lsl #8
   4f6c4:	bl	4f23c <luaL_error@@Base+0x9150>
   4f6c8:	str	r0, [sp, #4]
   4f6cc:	cmn	r5, #1
   4f6d0:	beq	4f6e4 <luaL_error@@Base+0x95f8>
   4f6d4:	mov	r2, r5
   4f6d8:	mov	r0, r4
   4f6dc:	add	r1, sp, #4
   4f6e0:	bl	4f10c <luaL_error@@Base+0x9020>
   4f6e4:	ldr	r0, [sp, #4]
   4f6e8:	add	sp, sp, #12
   4f6ec:	pop	{r4, r5, pc}
   4f6f0:	svcvc	0x00ff0058
   4f6f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4f6f8:	mov	r4, r1
   4f6fc:	sub	sp, sp, #12
   4f700:	mov	r5, r0
   4f704:	mov	r6, r2
   4f708:	bl	4f520 <luaL_error@@Base+0x9434>
   4f70c:	ldr	r3, [r4, #8]
   4f710:	cmp	r3, #10
   4f714:	beq	4f81c <luaL_error@@Base+0x9730>
   4f718:	ldr	r1, [r4, #12]
   4f71c:	ldr	r7, [r4, #16]
   4f720:	cmp	r1, r7
   4f724:	beq	4f7fc <luaL_error@@Base+0x9710>
   4f728:	add	r8, r5, #52	; 0x34
   4f72c:	mov	r0, r8
   4f730:	bl	1b530 <_start@@Base+0x8180>
   4f734:	cmp	r0, #0
   4f738:	beq	4f878 <luaL_error@@Base+0x978c>
   4f73c:	ldr	r3, [r4, #8]
   4f740:	lsl	r7, r6, #8
   4f744:	orr	r8, r7, #65536	; 0x10000
   4f748:	cmp	r3, #10
   4f74c:	orr	r7, r7, #131072	; 0x20000
   4f750:	orr	r8, r8, #43	; 0x2b
   4f754:	orr	r7, r7, #43	; 0x2b
   4f758:	beq	4f838 <luaL_error@@Base+0x974c>
   4f75c:	mov	r0, r5
   4f760:	bl	4f664 <luaL_error@@Base+0x9578>
   4f764:	mov	r1, r8
   4f768:	mov	fp, r0
   4f76c:	mov	r0, r5
   4f770:	bl	4f23c <luaL_error@@Base+0x9150>
   4f774:	ldr	r1, [r5, #32]
   4f778:	ldr	r3, [pc, #284]	; 4f89c <luaL_error@@Base+0x97b0>
   4f77c:	orr	r1, r3, r1, lsl #8
   4f780:	mov	sl, r0
   4f784:	mov	r0, r5
   4f788:	bl	4f23c <luaL_error@@Base+0x9150>
   4f78c:	mov	r1, r7
   4f790:	mov	r0, r5
   4f794:	bl	4f23c <luaL_error@@Base+0x9150>
   4f798:	ldr	r8, [r5, #20]
   4f79c:	cmn	fp, #1
   4f7a0:	str	r8, [r5, #24]
   4f7a4:	add	r1, r5, #28
   4f7a8:	ldreq	r7, [r4, #16]
   4f7ac:	mov	r9, r0
   4f7b0:	beq	4f7c8 <luaL_error@@Base+0x96dc>
   4f7b4:	mov	r2, fp
   4f7b8:	mov	r0, r5
   4f7bc:	bl	4f10c <luaL_error@@Base+0x9020>
   4f7c0:	ldr	r7, [r4, #16]
   4f7c4:	ldr	r8, [r5, #20]
   4f7c8:	str	r8, [r5, #24]
   4f7cc:	mov	r1, r7
   4f7d0:	mov	r3, r6
   4f7d4:	mov	r2, r8
   4f7d8:	mov	r0, r5
   4f7dc:	str	sl, [sp]
   4f7e0:	bl	4f044 <luaL_error@@Base+0x8f58>
   4f7e4:	ldr	r1, [r4, #12]
   4f7e8:	mov	r2, r8
   4f7ec:	str	r9, [sp]
   4f7f0:	mov	r0, r5
   4f7f4:	mov	r3, r6
   4f7f8:	bl	4f044 <luaL_error@@Base+0x8f58>
   4f7fc:	mvn	r3, #0
   4f800:	mov	r2, #12
   4f804:	str	r6, [r4]
   4f808:	str	r3, [r4, #12]
   4f80c:	str	r3, [r4, #16]
   4f810:	str	r2, [r4, #8]
   4f814:	add	sp, sp, #12
   4f818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4f81c:	ldr	r2, [r4]
   4f820:	cmn	r2, #1
   4f824:	beq	4f718 <luaL_error@@Base+0x962c>
   4f828:	add	r1, r4, #12
   4f82c:	mov	r0, r5
   4f830:	bl	4f10c <luaL_error@@Base+0x9020>
   4f834:	b	4f718 <luaL_error@@Base+0x962c>
   4f838:	mov	r1, r8
   4f83c:	mov	r0, r5
   4f840:	bl	4f23c <luaL_error@@Base+0x9150>
   4f844:	ldr	r1, [r5, #32]
   4f848:	ldr	r3, [pc, #76]	; 4f89c <luaL_error@@Base+0x97b0>
   4f84c:	orr	r1, r3, r1, lsl #8
   4f850:	mov	sl, r0
   4f854:	mov	r0, r5
   4f858:	bl	4f23c <luaL_error@@Base+0x9150>
   4f85c:	mov	r1, r7
   4f860:	mov	r0, r5
   4f864:	bl	4f23c <luaL_error@@Base+0x9150>
   4f868:	ldr	r7, [r4, #16]
   4f86c:	ldr	r8, [r5, #20]
   4f870:	mov	r9, r0
   4f874:	b	4f7c8 <luaL_error@@Base+0x96dc>
   4f878:	mov	r0, r8
   4f87c:	mov	r1, r7
   4f880:	bl	1b530 <_start@@Base+0x8180>
   4f884:	cmp	r0, #0
   4f888:	bne	4f73c <luaL_error@@Base+0x9650>
   4f88c:	mvn	r9, #0
   4f890:	ldr	r8, [r5, #20]
   4f894:	mov	sl, r9
   4f898:	b	4f7c8 <luaL_error@@Base+0x96dc>
   4f89c:	andhi	r0, r1, r8, asr r0
   4f8a0:	push	{r4, r5, r6, lr}
   4f8a4:	mov	r5, r1
   4f8a8:	mov	r4, r0
   4f8ac:	bl	4f31c <luaL_error@@Base+0x9230>
   4f8b0:	ldr	r3, [r5, #8]
   4f8b4:	cmp	r3, #12
   4f8b8:	beq	4f8f0 <luaL_error@@Base+0x9804>
   4f8bc:	ldr	r2, [r4, #32]
   4f8c0:	ldrb	r1, [r4, #66]	; 0x42
   4f8c4:	add	r3, r2, #1
   4f8c8:	cmp	r3, r1
   4f8cc:	bls	4f8dc <luaL_error@@Base+0x97f0>
   4f8d0:	cmp	r3, #249	; 0xf9
   4f8d4:	strbls	r3, [r4, #66]	; 0x42
   4f8d8:	bhi	4f900 <luaL_error@@Base+0x9814>
   4f8dc:	str	r3, [r4, #32]
   4f8e0:	mov	r1, r5
   4f8e4:	mov	r0, r4
   4f8e8:	pop	{r4, r5, r6, lr}
   4f8ec:	b	4f6f4 <luaL_error@@Base+0x9608>
   4f8f0:	ldr	r1, [r5]
   4f8f4:	mov	r0, r4
   4f8f8:	bl	1b6ac <_start@@Base+0x82fc>
   4f8fc:	b	4f8bc <luaL_error@@Base+0x97d0>
   4f900:	mov	r0, r4
   4f904:	bl	1328c <pclose@plt+0x1f0>
   4f908:	push	{r4, r5, r6, r7, r8, lr}
   4f90c:	mov	r8, r0
   4f910:	ldr	r0, [r3, #8]
   4f914:	mov	r7, r1
   4f918:	cmp	r0, #13
   4f91c:	mov	r6, r2
   4f920:	ldr	r4, [r8]
   4f924:	sub	r5, r1, r2
   4f928:	beq	4f99c <luaL_error@@Base+0x98b0>
   4f92c:	cmp	r0, #14
   4f930:	bne	4f984 <luaL_error@@Base+0x9898>
   4f934:	cmp	r5, #0
   4f938:	ble	4f96c <luaL_error@@Base+0x9880>
   4f93c:	ldr	r1, [r4, #32]
   4f940:	ldrb	r2, [r4, #66]	; 0x42
   4f944:	add	r3, r1, r5
   4f948:	cmp	r3, r2
   4f94c:	bls	4f95c <luaL_error@@Base+0x9870>
   4f950:	cmp	r3, #249	; 0xf9
   4f954:	strbls	r3, [r4, #66]	; 0x42
   4f958:	bhi	4f9f4 <luaL_error@@Base+0x9908>
   4f95c:	str	r3, [r4, #32]
   4f960:	mov	r0, r4
   4f964:	mov	r2, r5
   4f968:	bl	4f428 <luaL_error@@Base+0x933c>
   4f96c:	cmp	r7, r6
   4f970:	ldrcc	r2, [r8]
   4f974:	ldrcc	r3, [r2, #32]
   4f978:	addcc	r5, r3, r5
   4f97c:	strcc	r5, [r2, #32]
   4f980:	pop	{r4, r5, r6, r7, r8, pc}
   4f984:	mov	r1, r3
   4f988:	mov	r0, r4
   4f98c:	bl	4f8a0 <luaL_error@@Base+0x97b4>
   4f990:	cmp	r5, #0
   4f994:	bgt	4f93c <luaL_error@@Base+0x9850>
   4f998:	b	4f96c <luaL_error@@Base+0x9880>
   4f99c:	ldr	r3, [r3]
   4f9a0:	ldr	r2, [r4, #52]	; 0x34
   4f9a4:	adds	r1, r5, #1
   4f9a8:	add	r2, r2, r3, lsl #3
   4f9ac:	movmi	r3, #1
   4f9b0:	strbmi	r3, [r2, #3]
   4f9b4:	bmi	4f96c <luaL_error@@Base+0x9880>
   4f9b8:	add	r3, r1, #1
   4f9bc:	cmp	r1, #1
   4f9c0:	strb	r3, [r2, #3]
   4f9c4:	ble	4f96c <luaL_error@@Base+0x9880>
   4f9c8:	ldr	r3, [r4, #32]
   4f9cc:	ldrb	r2, [r4, #66]	; 0x42
   4f9d0:	sub	r3, r3, #1
   4f9d4:	add	r3, r3, r1
   4f9d8:	cmp	r3, r2
   4f9dc:	bls	4f9ec <luaL_error@@Base+0x9900>
   4f9e0:	cmp	r3, #249	; 0xf9
   4f9e4:	strbls	r3, [r4, #66]	; 0x42
   4f9e8:	bhi	4f9f4 <luaL_error@@Base+0x9908>
   4f9ec:	str	r3, [r4, #32]
   4f9f0:	b	4f96c <luaL_error@@Base+0x9880>
   4f9f4:	mov	r0, r4
   4f9f8:	bl	1328c <pclose@plt+0x1f0>
   4f9fc:	push	{r4, r5, r6, lr}
   4fa00:	mov	r4, r1
   4fa04:	mov	r5, r0
   4fa08:	bl	4f31c <luaL_error@@Base+0x9230>
   4fa0c:	ldr	r3, [r4, #8]
   4fa10:	cmp	r3, #12
   4fa14:	bne	4fa34 <luaL_error@@Base+0x9948>
   4fa18:	ldrd	r2, [r4, #12]
   4fa1c:	ldr	r0, [r4]
   4fa20:	cmp	r2, r3
   4fa24:	popeq	{r4, r5, r6, pc}
   4fa28:	ldr	r3, [r5, #36]	; 0x24
   4fa2c:	cmp	r3, r0
   4fa30:	bls	4fa48 <luaL_error@@Base+0x995c>
   4fa34:	mov	r0, r5
   4fa38:	mov	r1, r4
   4fa3c:	bl	4f8a0 <luaL_error@@Base+0x97b4>
   4fa40:	ldr	r0, [r4]
   4fa44:	pop	{r4, r5, r6, pc}
   4fa48:	mov	r2, r0
   4fa4c:	mov	r1, r4
   4fa50:	mov	r0, r5
   4fa54:	bl	4f6f4 <luaL_error@@Base+0x9608>
   4fa58:	ldr	r0, [r4]
   4fa5c:	pop	{r4, r5, r6, pc}
   4fa60:	ldrd	r2, [r1, #12]
   4fa64:	cmp	r2, r3
   4fa68:	beq	4fa70 <luaL_error@@Base+0x9984>
   4fa6c:	b	4f9fc <luaL_error@@Base+0x9910>
   4fa70:	b	4f31c <luaL_error@@Base+0x9230>
   4fa74:	mov	ip, #9
   4fa78:	push	{r4, r5, lr}
   4fa7c:	mov	r4, r1
   4fa80:	str	ip, [r2]
   4fa84:	ldr	r2, [r3, #8]
   4fa88:	sub	sp, sp, #12
   4fa8c:	cmp	r2, #4
   4fa90:	mov	r5, r0
   4fa94:	beq	4fab8 <luaL_error@@Base+0x99cc>
   4fa98:	cmp	r2, #3
   4fa9c:	beq	4fadc <luaL_error@@Base+0x99f0>
   4faa0:	mov	r1, r3
   4faa4:	mov	r0, r5
   4faa8:	bl	4f9fc <luaL_error@@Base+0x9910>
   4faac:	str	r0, [r4]
   4fab0:	add	sp, sp, #12
   4fab4:	pop	{r4, r5, pc}
   4fab8:	ldr	r2, [r3, #4]
   4fabc:	cmn	r2, #14
   4fac0:	bne	4faa0 <luaL_error@@Base+0x99b4>
   4fac4:	ldr	r2, [r3]
   4fac8:	bics	r1, r2, #255	; 0xff
   4facc:	addeq	r2, r2, #256	; 0x100
   4fad0:	streq	r2, [r4]
   4fad4:	bne	4faa0 <luaL_error@@Base+0x99b4>
   4fad8:	b	4fab0 <luaL_error@@Base+0x99c4>
   4fadc:	ldr	r1, [r3]
   4fae0:	mvn	r2, #4
   4fae4:	str	r3, [sp, #4]
   4fae8:	bl	3e594 <luaL_typerror@@Base+0x8228>
   4faec:	ldr	r3, [sp, #4]
   4faf0:	cmp	r0, #255	; 0xff
   4faf4:	mvnls	r0, r0
   4faf8:	strls	r0, [r4]
   4fafc:	bhi	4faa0 <luaL_error@@Base+0x99b4>
   4fb00:	b	4fab0 <luaL_error@@Base+0x99c4>
   4fb04:	ldr	r3, [r1, #8]
   4fb08:	push	{r4, r5, r6, r7, r8, lr}
   4fb0c:	cmp	r3, #6
   4fb10:	mov	r6, r1
   4fb14:	mov	r4, r2
   4fb18:	mov	r5, r0
   4fb1c:	beq	4fb90 <luaL_error@@Base+0x9aa4>
   4fb20:	cmp	r3, #7
   4fb24:	beq	4fbf4 <luaL_error@@Base+0x9b08>
   4fb28:	cmp	r3, #8
   4fb2c:	mov	r1, r2
   4fb30:	beq	4fbcc <luaL_error@@Base+0x9ae0>
   4fb34:	bl	4f9fc <luaL_error@@Base+0x9910>
   4fb38:	ldr	r2, [r6, #4]
   4fb3c:	cmp	r2, #0
   4fb40:	blt	4fc38 <luaL_error@@Base+0x9b4c>
   4fb44:	ldr	r3, [r6]
   4fb48:	cmp	r2, #255	; 0xff
   4fb4c:	lsl	r1, r0, #8
   4fb50:	lsl	r3, r3, #24
   4fb54:	subhi	r0, r2, #256	; 0x100
   4fb58:	orrls	r0, r3, r2, lsl #16
   4fb5c:	orrhi	r3, r3, #62	; 0x3e
   4fb60:	orrhi	r0, r3, r0, lsl #16
   4fb64:	orrls	r0, r0, #60	; 0x3c
   4fb68:	orr	r1, r0, r1
   4fb6c:	mov	r0, r5
   4fb70:	bl	4f23c <luaL_error@@Base+0x9150>
   4fb74:	ldr	r3, [r4, #8]
   4fb78:	cmp	r3, #12
   4fb7c:	popne	{r4, r5, r6, r7, r8, pc}
   4fb80:	ldr	r1, [r4]
   4fb84:	mov	r0, r5
   4fb88:	pop	{r4, r5, r6, r7, r8, lr}
   4fb8c:	b	1b6ac <_start@@Base+0x82fc>
   4fb90:	ldr	r3, [r0, #4]
   4fb94:	ldr	r2, [r1, #4]
   4fb98:	ldr	r3, [r3, #88]	; 0x58
   4fb9c:	add	r3, r3, r2, lsl #4
   4fba0:	ldrb	r2, [r3, #13]
   4fba4:	orr	r2, r2, #1
   4fba8:	strb	r2, [r3, #13]
   4fbac:	ldr	r3, [r4, #8]
   4fbb0:	cmp	r3, #12
   4fbb4:	beq	4fc54 <luaL_error@@Base+0x9b68>
   4fbb8:	ldr	r2, [r6]
   4fbbc:	mov	r1, r4
   4fbc0:	mov	r0, r5
   4fbc4:	pop	{r4, r5, r6, r7, r8, lr}
   4fbc8:	b	4f6f4 <luaL_error@@Base+0x9608>
   4fbcc:	bl	4f9fc <luaL_error@@Base+0x9910>
   4fbd0:	ldr	r1, [r6]
   4fbd4:	mvn	r2, #4
   4fbd8:	mov	r7, r0
   4fbdc:	mov	r0, r5
   4fbe0:	bl	3e594 <luaL_typerror@@Base+0x8228>
   4fbe4:	lsl	r1, r0, #16
   4fbe8:	orr	r1, r1, r7, lsl #8
   4fbec:	orr	r1, r1, #55	; 0x37
   4fbf0:	b	4fb6c <luaL_error@@Base+0x9a80>
   4fbf4:	ldr	r3, [r0, #4]
   4fbf8:	ldr	r2, [r1, #4]
   4fbfc:	mov	r1, r4
   4fc00:	ldr	r3, [r3, #88]	; 0x58
   4fc04:	add	r3, r3, r2, lsl #4
   4fc08:	ldrb	r2, [r3, #13]
   4fc0c:	orr	r2, r2, #1
   4fc10:	strb	r2, [r3, #13]
   4fc14:	bl	4fa60 <luaL_error@@Base+0x9974>
   4fc18:	ldr	r3, [r4, #8]
   4fc1c:	cmp	r3, #2
   4fc20:	bhi	4fc60 <luaL_error@@Base+0x9b74>
   4fc24:	ldr	r0, [r6]
   4fc28:	lsl	r1, r3, #16
   4fc2c:	orr	r1, r1, #49	; 0x31
   4fc30:	orr	r1, r1, r0, lsl #8
   4fc34:	b	4fb6c <luaL_error@@Base+0x9a80>
   4fc38:	ldr	r1, [r6]
   4fc3c:	mvn	r2, r2
   4fc40:	lsl	r1, r1, #24
   4fc44:	orr	r1, r1, #61	; 0x3d
   4fc48:	orr	r2, r1, r2, lsl #16
   4fc4c:	orr	r1, r2, r0, lsl #8
   4fc50:	b	4fb6c <luaL_error@@Base+0x9a80>
   4fc54:	ldr	r1, [r4]
   4fc58:	bl	1b6ac <_start@@Base+0x82fc>
   4fc5c:	b	4fbb8 <luaL_error@@Base+0x9acc>
   4fc60:	ldr	r6, [r6]
   4fc64:	cmp	r3, #3
   4fc68:	lsl	r6, r6, #8
   4fc6c:	beq	4fca0 <luaL_error@@Base+0x9bb4>
   4fc70:	cmp	r3, #4
   4fc74:	mov	r1, r4
   4fc78:	mov	r0, r5
   4fc7c:	beq	4fc90 <luaL_error@@Base+0x9ba4>
   4fc80:	bl	4f9fc <luaL_error@@Base+0x9910>
   4fc84:	orr	r1, r6, #46	; 0x2e
   4fc88:	orr	r1, r1, r0, lsl #16
   4fc8c:	b	4fb6c <luaL_error@@Base+0x9a80>
   4fc90:	bl	3e5f0 <luaL_typerror@@Base+0x8284>
   4fc94:	orr	r1, r6, #48	; 0x30
   4fc98:	orr	r1, r1, r0, lsl #16
   4fc9c:	b	4fb6c <luaL_error@@Base+0x9a80>
   4fca0:	ldr	r1, [r4]
   4fca4:	mvn	r2, #4
   4fca8:	mov	r0, r5
   4fcac:	bl	3e594 <luaL_typerror@@Base+0x8228>
   4fcb0:	orr	r1, r6, #47	; 0x2f
   4fcb4:	orr	r1, r1, r0, lsl #16
   4fcb8:	b	4fb6c <luaL_error@@Base+0x9a80>
   4fcbc:	ldr	r3, [r1, #8]
   4fcc0:	push	{r4, r5, r6, lr}
   4fcc4:	cmp	r3, #11
   4fcc8:	mov	r5, r1
   4fccc:	mov	r6, r2
   4fcd0:	mov	r4, r0
   4fcd4:	beq	4fd50 <luaL_error@@Base+0x9c64>
   4fcd8:	cmp	r3, #12
   4fcdc:	beq	4fd10 <luaL_error@@Base+0x9c24>
   4fce0:	ldr	r2, [r4, #32]
   4fce4:	ldrb	r1, [r4, #66]	; 0x42
   4fce8:	add	r3, r2, #1
   4fcec:	cmp	r3, r1
   4fcf0:	bls	4fd00 <luaL_error@@Base+0x9c14>
   4fcf4:	cmp	r3, #249	; 0xf9
   4fcf8:	strbls	r3, [r4, #66]	; 0x42
   4fcfc:	bhi	4fda0 <luaL_error@@Base+0x9cb4>
   4fd00:	str	r3, [r4, #32]
   4fd04:	mov	r1, r5
   4fd08:	mov	r0, r4
   4fd0c:	bl	4f520 <luaL_error@@Base+0x9434>
   4fd10:	ldr	r3, [pc, #144]	; 4fda8 <luaL_error@@Base+0x9cbc>
   4fd14:	ldr	r1, [r5]
   4fd18:	ldr	r2, [pc, #140]	; 4fdac <luaL_error@@Base+0x9cc0>
   4fd1c:	cmp	r6, #0
   4fd20:	moveq	r2, r3
   4fd24:	orr	r1, r2, r1, lsl #16
   4fd28:	mov	r0, r4
   4fd2c:	bl	4f23c <luaL_error@@Base+0x9150>
   4fd30:	mov	r0, r4
   4fd34:	bl	4f664 <luaL_error@@Base+0x9578>
   4fd38:	ldr	r3, [r5, #8]
   4fd3c:	cmp	r3, #12
   4fd40:	mov	r2, r0
   4fd44:	beq	4fd8c <luaL_error@@Base+0x9ca0>
   4fd48:	mov	r0, r2
   4fd4c:	pop	{r4, r5, r6, pc}
   4fd50:	ldr	r1, [r1]
   4fd54:	ldr	r2, [r0, #52]	; 0x34
   4fd58:	ldr	r3, [r2, r1, lsl #3]
   4fd5c:	uxtb	ip, r3
   4fd60:	cmp	ip, #19
   4fd64:	bne	4fce0 <luaL_error@@Base+0x9bf4>
   4fd68:	lsr	r3, r3, #16
   4fd6c:	cmp	r6, #0
   4fd70:	lsl	r3, r3, #16
   4fd74:	movne	ip, #15
   4fd78:	moveq	ip, #14
   4fd7c:	orr	r3, r3, ip
   4fd80:	str	r3, [r2, r1, lsl #3]
   4fd84:	pop	{r4, r5, r6, lr}
   4fd88:	b	4f664 <luaL_error@@Base+0x9578>
   4fd8c:	mov	r0, r4
   4fd90:	ldr	r1, [r5]
   4fd94:	bl	1b6ac <_start@@Base+0x82fc>
   4fd98:	mov	r0, r2
   4fd9c:	pop	{r4, r5, r6, pc}
   4fda0:	mov	r0, r4
   4fda4:	bl	1328c <pclose@plt+0x1f0>
   4fda8:	andeq	pc, r0, sp, lsl #30
   4fdac:	andeq	pc, r0, ip, lsl #30
   4fdb0:	push	{r4, r5, r6, lr}
   4fdb4:	mov	r5, r1
   4fdb8:	mov	r4, r0
   4fdbc:	bl	4f31c <luaL_error@@Base+0x9230>
   4fdc0:	ldr	r3, [r5, #8]
   4fdc4:	sub	r2, r3, #2
   4fdc8:	cmp	r2, #2
   4fdcc:	bls	4fe08 <luaL_error@@Base+0x9d1c>
   4fdd0:	cmp	r3, #10
   4fdd4:	beq	4fe34 <luaL_error@@Base+0x9d48>
   4fdd8:	cmp	r3, #1
   4fddc:	bls	4fe54 <luaL_error@@Base+0x9d68>
   4fde0:	mov	r2, #0
   4fde4:	mov	r1, r5
   4fde8:	mov	r0, r4
   4fdec:	bl	4fcbc <luaL_error@@Base+0x9bd0>
   4fdf0:	cmn	r0, #1
   4fdf4:	beq	4fe08 <luaL_error@@Base+0x9d1c>
   4fdf8:	mov	r2, r0
   4fdfc:	add	r1, r5, #16
   4fe00:	mov	r0, r4
   4fe04:	bl	4f10c <luaL_error@@Base+0x9020>
   4fe08:	ldr	r2, [r5, #12]
   4fe0c:	ldr	r3, [r4, #20]
   4fe10:	cmn	r2, #1
   4fe14:	str	r3, [r4, #24]
   4fe18:	beq	4fe28 <luaL_error@@Base+0x9d3c>
   4fe1c:	add	r1, r4, #28
   4fe20:	mov	r0, r4
   4fe24:	bl	4f10c <luaL_error@@Base+0x9020>
   4fe28:	mvn	r3, #0
   4fe2c:	str	r3, [r5, #12]
   4fe30:	pop	{r4, r5, r6, pc}
   4fe34:	ldr	r3, [r5]
   4fe38:	ldr	r1, [r4, #52]	; 0x34
   4fe3c:	sub	r3, r3, #-536870911	; 0xe0000001
   4fe40:	ldr	r2, [r1, r3, lsl #3]
   4fe44:	eor	r2, r2, #1
   4fe48:	strb	r2, [r1, r3, lsl #3]
   4fe4c:	ldr	r0, [r5]
   4fe50:	b	4fdf0 <luaL_error@@Base+0x9d04>
   4fe54:	mov	r0, r4
   4fe58:	mov	r2, #255	; 0xff
   4fe5c:	mov	r1, r5
   4fe60:	bl	4f520 <luaL_error@@Base+0x9434>
   4fe64:	mov	r0, r4
   4fe68:	bl	4f664 <luaL_error@@Base+0x9578>
   4fe6c:	b	4fdf0 <luaL_error@@Base+0x9d04>
   4fe70:	cmp	r0, #0
   4fe74:	beq	4ffd4 <luaL_error@@Base+0x9ee8>
   4fe78:	push	{r4, r5, r6, lr}
   4fe7c:	ldr	lr, [r0, #36]	; 0x24
   4fe80:	subs	ip, lr, #1
   4fe84:	bmi	4fec8 <luaL_error@@Base+0x9ddc>
   4fe88:	add	r4, r0, lr, lsl #1
   4fe8c:	ldr	r5, [r0, #4]
   4fe90:	ldrh	r4, [r4, #66]	; 0x42
   4fe94:	ldr	r5, [r5, #88]	; 0x58
   4fe98:	ldr	r4, [r5, r4, lsl #4]
   4fe9c:	cmp	r1, r4
   4fea0:	addne	lr, lr, #32
   4fea4:	addne	lr, r0, lr, lsl #1
   4fea8:	bne	4fec0 <luaL_error@@Base+0x9dd4>
   4feac:	b	4ff70 <luaL_error@@Base+0x9e84>
   4feb0:	ldrh	r4, [lr], #-2
   4feb4:	ldr	r4, [r5, r4, lsl #4]
   4feb8:	cmp	r1, r4
   4febc:	beq	4ff70 <luaL_error@@Base+0x9e84>
   4fec0:	subs	ip, ip, #1
   4fec4:	bcs	4feb0 <luaL_error@@Base+0x9dc4>
   4fec8:	mov	r5, r0
   4fecc:	mov	r3, #0
   4fed0:	ldr	r0, [r0, #16]
   4fed4:	mov	r4, r2
   4fed8:	bl	4fe70 <luaL_error@@Base+0x9d84>
   4fedc:	cmp	r0, #0
   4fee0:	blt	4fff0 <luaL_error@@Base+0x9f04>
   4fee4:	ldrb	ip, [r5, #67]	; 0x43
   4fee8:	cmp	ip, #0
   4feec:	beq	4ff28 <luaL_error@@Base+0x9e3c>
   4fef0:	add	r2, r5, #468	; 0x1d4
   4fef4:	ldrh	r3, [r2]
   4fef8:	cmp	r0, r3
   4fefc:	mov	r3, #0
   4ff00:	bne	4ff14 <luaL_error@@Base+0x9e28>
   4ff04:	b	4ff60 <luaL_error@@Base+0x9e74>
   4ff08:	ldrh	r1, [r2, #2]!
   4ff0c:	cmp	r0, r1
   4ff10:	beq	4ff60 <luaL_error@@Base+0x9e74>
   4ff14:	add	r3, r3, #1
   4ff18:	cmp	ip, r3
   4ff1c:	bne	4ff08 <luaL_error@@Base+0x9e1c>
   4ff20:	cmp	ip, #59	; 0x3b
   4ff24:	bhi	4fff8 <luaL_error@@Base+0x9f0c>
   4ff28:	ldr	lr, [r4, #8]
   4ff2c:	add	r2, r5, ip, lsl #1
   4ff30:	add	r1, r2, #468	; 0x1d4
   4ff34:	cmp	lr, #6
   4ff38:	uxth	r3, r0
   4ff3c:	strh	r3, [r1]
   4ff40:	ldrne	r3, [r4]
   4ff44:	add	r2, r2, #588	; 0x24c
   4ff48:	subne	r3, r3, #60	; 0x3c
   4ff4c:	add	r1, ip, #1
   4ff50:	uxthne	r3, r3
   4ff54:	strh	r3, [r2]
   4ff58:	mov	r3, ip
   4ff5c:	strb	r1, [r5, #67]	; 0x43
   4ff60:	mov	r2, #7
   4ff64:	str	r3, [r4]
   4ff68:	str	r2, [r4, #8]
   4ff6c:	pop	{r4, r5, r6, pc}
   4ff70:	cmp	r3, #0
   4ff74:	mov	r1, #6
   4ff78:	mvn	r3, #0
   4ff7c:	str	ip, [r2]
   4ff80:	str	r1, [r2, #8]
   4ff84:	str	r3, [r2, #12]
   4ff88:	str	r3, [r2, #16]
   4ff8c:	bne	4ffc4 <luaL_error@@Base+0x9ed8>
   4ff90:	ldr	r3, [r0, #12]
   4ff94:	cmp	r3, #0
   4ff98:	bne	4ffac <luaL_error@@Base+0x9ec0>
   4ff9c:	b	4ffc4 <luaL_error@@Base+0x9ed8>
   4ffa0:	ldr	r3, [r3]
   4ffa4:	cmp	r3, #0
   4ffa8:	beq	4ffc4 <luaL_error@@Base+0x9ed8>
   4ffac:	ldrb	r1, [r3, #8]
   4ffb0:	cmp	r1, ip
   4ffb4:	bhi	4ffa0 <luaL_error@@Base+0x9eb4>
   4ffb8:	ldrb	r1, [r3, #9]
   4ffbc:	orr	r1, r1, #8
   4ffc0:	strb	r1, [r3, #9]
   4ffc4:	add	r0, r0, ip, lsl #1
   4ffc8:	ldrh	r0, [r0, #68]	; 0x44
   4ffcc:	str	r0, [r2, #4]
   4ffd0:	pop	{r4, r5, r6, pc}
   4ffd4:	mvn	r0, #0
   4ffd8:	mov	r3, #8
   4ffdc:	str	r1, [r2]
   4ffe0:	str	r3, [r2, #8]
   4ffe4:	str	r0, [r2, #12]
   4ffe8:	str	r0, [r2, #16]
   4ffec:	bx	lr
   4fff0:	mvn	r0, #0
   4fff4:	pop	{r4, r5, r6, pc}
   4fff8:	ldr	r3, [pc, #12]	; 5000c <luaL_error@@Base+0x9f20>
   4fffc:	mov	r2, #60	; 0x3c
   50000:	ldr	r1, [r5, #48]	; 0x30
   50004:	ldr	r0, [r5, #4]
   50008:	bl	132a0 <pclose@plt+0x204>
   5000c:	andeq	r2, r7, r0, lsl pc
   50010:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   50014:	mov	r4, r0
   50018:	ldr	r0, [r0, #44]	; 0x2c
   5001c:	ldr	r3, [r4, #48]	; 0x30
   50020:	mov	r6, r1
   50024:	cmp	r3, r0
   50028:	mov	r8, r2
   5002c:	ldr	r5, [r4, #32]
   50030:	add	r9, r4, #44	; 0x2c
   50034:	beq	50210 <luaL_error@@Base+0xa124>
   50038:	strb	r5, [r0], #1
   5003c:	ldr	r3, [r4, #24]
   50040:	ldr	r2, [r4, #28]
   50044:	str	r0, [r4, #44]	; 0x2c
   50048:	cmp	r3, r2
   5004c:	bcs	501e4 <luaL_error@@Base+0xa0f8>
   50050:	add	r2, r3, #1
   50054:	str	r2, [r4, #24]
   50058:	ldrb	r5, [r3]
   5005c:	cmp	r5, #13
   50060:	cmpne	r5, #10
   50064:	str	r5, [r4, #32]
   50068:	beq	501d4 <luaL_error@@Base+0xa0e8>
   5006c:	mov	r7, #10
   50070:	cmp	r5, #10
   50074:	beq	500ac <luaL_error@@Base+0x9fc0>
   50078:	ble	500e4 <luaL_error@@Base+0x9ff8>
   5007c:	cmp	r5, #13
   50080:	beq	500ac <luaL_error@@Base+0x9fc0>
   50084:	cmp	r5, #93	; 0x5d
   50088:	bne	500ec <luaL_error@@Base+0xa000>
   5008c:	mov	r0, r4
   50090:	bl	309d8 <luaL_where@@Base+0x108d4>
   50094:	cmp	r0, r8
   50098:	mov	r5, r0
   5009c:	beq	5015c <luaL_error@@Base+0xa070>
   500a0:	ldr	r5, [r4, #32]
   500a4:	cmp	r5, #10
   500a8:	bne	50078 <luaL_error@@Base+0x9f8c>
   500ac:	ldr	r3, [r4, #44]	; 0x2c
   500b0:	ldr	r2, [r4, #48]	; 0x30
   500b4:	cmp	r2, r3
   500b8:	beq	50148 <luaL_error@@Base+0xa05c>
   500bc:	strb	r7, [r3], #1
   500c0:	mov	r0, r4
   500c4:	str	r3, [r4, #44]	; 0x2c
   500c8:	bl	4ef80 <luaL_error@@Base+0x8e94>
   500cc:	cmp	r6, #0
   500d0:	bne	500a0 <luaL_error@@Base+0x9fb4>
   500d4:	ldr	r3, [r4, #52]	; 0x34
   500d8:	ldr	r5, [r4, #32]
   500dc:	str	r3, [r4, #44]	; 0x2c
   500e0:	b	50070 <luaL_error@@Base+0x9f84>
   500e4:	cmn	r5, #1
   500e8:	beq	50220 <luaL_error@@Base+0xa134>
   500ec:	ldr	r0, [r4, #44]	; 0x2c
   500f0:	ldr	r3, [r4, #48]	; 0x30
   500f4:	cmp	r3, r0
   500f8:	beq	50138 <luaL_error@@Base+0xa04c>
   500fc:	strb	r5, [r0], #1
   50100:	ldr	r3, [r4, #24]
   50104:	ldr	r2, [r4, #28]
   50108:	str	r0, [r4, #44]	; 0x2c
   5010c:	cmp	r3, r2
   50110:	bcs	50128 <luaL_error@@Base+0xa03c>
   50114:	add	r2, r3, #1
   50118:	str	r2, [r4, #24]
   5011c:	ldrb	r5, [r3]
   50120:	str	r5, [r4, #32]
   50124:	b	50070 <luaL_error@@Base+0x9f84>
   50128:	mov	r0, r4
   5012c:	bl	15358 <_start@@Base+0x1fa8>
   50130:	mov	r5, r0
   50134:	b	50120 <luaL_error@@Base+0xa034>
   50138:	mov	r1, #1
   5013c:	mov	r0, r9
   50140:	bl	2ff68 <luaL_where@@Base+0xfe64>
   50144:	b	500fc <luaL_error@@Base+0xa010>
   50148:	mov	r1, #1
   5014c:	mov	r0, r9
   50150:	bl	2ff68 <luaL_where@@Base+0xfe64>
   50154:	mov	r3, r0
   50158:	b	500bc <luaL_error@@Base+0x9fd0>
   5015c:	ldr	r0, [r4, #44]	; 0x2c
   50160:	ldr	r3, [r4, #48]	; 0x30
   50164:	ldr	r7, [r4, #32]
   50168:	cmp	r3, r0
   5016c:	beq	50200 <luaL_error@@Base+0xa114>
   50170:	strb	r7, [r0], #1
   50174:	ldr	r3, [r4, #24]
   50178:	ldr	r2, [r4, #28]
   5017c:	str	r0, [r4, #44]	; 0x2c
   50180:	cmp	r3, r2
   50184:	bcs	501f4 <luaL_error@@Base+0xa108>
   50188:	add	r2, r3, #1
   5018c:	str	r2, [r4, #24]
   50190:	ldrb	r0, [r3]
   50194:	cmp	r6, #0
   50198:	str	r0, [r4, #32]
   5019c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   501a0:	ldr	r2, [r4, #52]	; 0x34
   501a4:	ldr	r3, [r4, #44]	; 0x2c
   501a8:	add	r1, r5, #2
   501ac:	sub	r3, r3, r2
   501b0:	add	r2, r2, #2
   501b4:	sub	r3, r3, r1, lsl #1
   501b8:	add	r2, r2, r5
   501bc:	ldr	r1, [r4, #4]
   501c0:	mov	r0, r4
   501c4:	bl	3f29c <luaL_typerror@@Base+0x8f30>
   501c8:	mvn	r3, #4
   501cc:	stm	r6, {r0, r3}
   501d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   501d4:	mov	r0, r4
   501d8:	bl	4ef80 <luaL_error@@Base+0x8e94>
   501dc:	ldr	r5, [r4, #32]
   501e0:	b	5006c <luaL_error@@Base+0x9f80>
   501e4:	mov	r0, r4
   501e8:	bl	15358 <_start@@Base+0x1fa8>
   501ec:	mov	r5, r0
   501f0:	b	5005c <luaL_error@@Base+0x9f70>
   501f4:	mov	r0, r4
   501f8:	bl	15358 <_start@@Base+0x1fa8>
   501fc:	b	50194 <luaL_error@@Base+0xa0a8>
   50200:	mov	r0, r9
   50204:	mov	r1, #1
   50208:	bl	2ff68 <luaL_where@@Base+0xfe64>
   5020c:	b	50170 <luaL_error@@Base+0xa084>
   50210:	mov	r1, #1
   50214:	mov	r0, r9
   50218:	bl	2ff68 <luaL_where@@Base+0xfe64>
   5021c:	b	50038 <luaL_error@@Base+0x9f4c>
   50220:	ldr	r3, [pc, #20]	; 5023c <luaL_error@@Base+0xa150>
   50224:	cmp	r6, #0
   50228:	ldr	r2, [pc, #16]	; 50240 <luaL_error@@Base+0xa154>
   5022c:	mov	r0, r4
   50230:	movne	r2, r3
   50234:	ldr	r1, [pc, #8]	; 50244 <luaL_error@@Base+0xa158>
   50238:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   5023c:			; <UNDEFINED> instruction: 0x000008b2
   50240:	andeq	r0, r0, r9, asr #17
   50244:	andeq	r0, r0, r1, lsr #2
   50248:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   5024c:	ldr	r5, [r0]
   50250:	ldr	r6, [r0, #96]	; 0x60
   50254:	ldr	r3, [r5, #36]	; 0x24
   50258:	add	r3, r1, r3
   5025c:	cmp	r3, #199	; 0xc7
   50260:	bhi	502e8 <luaL_error@@Base+0xa1fc>
   50264:	mov	r7, r2
   50268:	ldr	r2, [r0, #92]	; 0x5c
   5026c:	mov	r4, r0
   50270:	cmp	r2, r6
   50274:	bls	50294 <luaL_error@@Base+0xa1a8>
   50278:	ldr	r0, [r0, #88]	; 0x58
   5027c:	add	r3, r5, r3, lsl #1
   50280:	add	r2, r6, #1
   50284:	str	r7, [r0, r6, lsl #4]
   50288:	strh	r6, [r3, #68]	; 0x44
   5028c:	str	r2, [r4, #96]	; 0x60
   50290:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   50294:	ldr	r3, [pc, #112]	; 5030c <luaL_error@@Base+0xa220>
   50298:	cmp	r2, r3
   5029c:	bhi	502fc <luaL_error@@Base+0xa210>
   502a0:	mov	r8, r1
   502a4:	ldr	r1, [pc, #100]	; 50310 <luaL_error@@Base+0xa224>
   502a8:	lsl	r3, r2, #1
   502ac:	cmp	r3, r1
   502b0:	movcs	r3, r1
   502b4:	cmp	r3, #8
   502b8:	movcs	r9, r3
   502bc:	movcc	r9, #8
   502c0:	ldr	r1, [r0, #88]	; 0x58
   502c4:	lsl	r3, r9, #4
   502c8:	lsl	r2, r2, #4
   502cc:	ldr	r0, [r0, #4]
   502d0:	bl	205b0 <luaL_where@@Base+0x4ac>
   502d4:	str	r9, [r4, #92]	; 0x5c
   502d8:	ldr	r3, [r5, #36]	; 0x24
   502dc:	add	r3, r8, r3
   502e0:	str	r0, [r4, #88]	; 0x58
   502e4:	b	5027c <luaL_error@@Base+0xa190>
   502e8:	ldr	r3, [pc, #36]	; 50314 <luaL_error@@Base+0xa228>
   502ec:	mov	r2, #200	; 0xc8
   502f0:	ldr	r1, [r5, #48]	; 0x30
   502f4:	ldr	r0, [r5, #4]
   502f8:	bl	132a0 <pclose@plt+0x204>
   502fc:	add	r3, r3, #1
   50300:	ldr	r2, [pc, #16]	; 50318 <luaL_error@@Base+0xa22c>
   50304:	mov	r1, #0
   50308:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   5030c:	andeq	pc, r0, r3, asr #31
   50310:	andeq	pc, r0, r4, asr #31
   50314:	andeq	r2, r7, ip, lsl pc
   50318:	andeq	r0, r0, r5, ror r9
   5031c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   50320:	mov	r8, r1
   50324:	ldr	r5, [r0, #96]	; 0x60
   50328:	ldr	r1, [r0, #92]	; 0x5c
   5032c:	mov	r4, r0
   50330:	cmp	r1, r5
   50334:	mov	r6, r2
   50338:	mov	r7, r3
   5033c:	ldr	r9, [r0]
   50340:	bls	50370 <luaL_error@@Base+0xa284>
   50344:	ldr	r0, [r0, #88]	; 0x58
   50348:	ldr	r1, [r9, #36]	; 0x24
   5034c:	add	r3, r0, r5, lsl #4
   50350:	add	r2, r5, #1
   50354:	str	r8, [r0, r5, lsl #4]
   50358:	str	r7, [r3, #4]
   5035c:	strb	r1, [r3, #12]
   50360:	strb	r6, [r3, #13]
   50364:	mov	r0, r5
   50368:	str	r2, [r4, #96]	; 0x60
   5036c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   50370:	ldr	r3, [pc, #76]	; 503c4 <luaL_error@@Base+0xa2d8>
   50374:	cmp	r1, r3
   50378:	bhi	503b4 <luaL_error@@Base+0xa2c8>
   5037c:	ldr	r3, [pc, #68]	; 503c8 <luaL_error@@Base+0xa2dc>
   50380:	lsl	sl, r1, #1
   50384:	cmp	sl, r3
   50388:	movcs	sl, r3
   5038c:	cmp	sl, #8
   50390:	movcc	sl, #8
   50394:	lsl	r2, r1, #4
   50398:	lsl	r3, sl, #4
   5039c:	ldr	r1, [r0, #88]	; 0x58
   503a0:	ldr	r0, [r0, #4]
   503a4:	bl	205b0 <luaL_where@@Base+0x4ac>
   503a8:	str	sl, [r4, #92]	; 0x5c
   503ac:	str	r0, [r4, #88]	; 0x58
   503b0:	b	50348 <luaL_error@@Base+0xa25c>
   503b4:	add	r3, r3, #1
   503b8:	ldr	r2, [pc, #12]	; 503cc <luaL_error@@Base+0xa2e0>
   503bc:	mov	r1, #0
   503c0:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   503c4:	andeq	pc, r0, r3, asr #31
   503c8:	andeq	pc, r0, r4, asr #31
   503cc:	andeq	r0, r0, r5, ror r9
   503d0:	ldr	r3, [r0]
   503d4:	push	{r4, lr}
   503d8:	mov	r4, r0
   503dc:	ldr	r2, [r3, #12]
   503e0:	mov	r0, r3
   503e4:	ldrb	r3, [r2, #9]
   503e8:	orr	r3, r3, #2
   503ec:	strb	r3, [r2, #9]
   503f0:	bl	4f664 <luaL_error@@Base+0x9578>
   503f4:	mov	r2, #2
   503f8:	mov	r1, #1
   503fc:	mov	r3, r0
   50400:	mov	r0, r4
   50404:	pop	{r4, lr}
   50408:	b	5031c <luaL_error@@Base+0xa230>
   5040c:	push	{r4, r5, r6, r7, lr}
   50410:	sub	sp, sp, #12
   50414:	ldr	r5, [r0, #88]	; 0x58
   50418:	add	r4, r5, r1, lsl #4
   5041c:	add	r5, r5, r2, lsl #4
   50420:	cmp	r4, r5
   50424:	bcs	50498 <luaL_error@@Base+0xa3ac>
   50428:	mov	r6, r0
   5042c:	mov	r7, #0
   50430:	b	50440 <luaL_error@@Base+0xa354>
   50434:	add	r4, r4, #16
   50438:	cmp	r5, r4
   5043c:	bls	50498 <luaL_error@@Base+0xa3ac>
   50440:	ldr	r3, [r4]
   50444:	ldr	r2, [r5]
   50448:	cmp	r3, r2
   5044c:	bne	50434 <luaL_error@@Base+0xa348>
   50450:	ldrb	r2, [r4, #13]
   50454:	tst	r2, #2
   50458:	beq	50434 <luaL_error@@Base+0xa348>
   5045c:	ldr	r0, [r6]
   50460:	ldrb	lr, [r4, #12]
   50464:	ldrb	ip, [r5, #12]
   50468:	ldr	r1, [r4, #4]
   5046c:	ldr	r2, [r0, #52]	; 0x34
   50470:	cmp	lr, ip
   50474:	add	r2, r2, r1, lsl #3
   50478:	bcc	504a0 <luaL_error@@Base+0xa3b4>
   5047c:	str	r7, [r4]
   50480:	strb	ip, [r2, #1]
   50484:	add	r4, r4, #16
   50488:	ldr	r2, [r5, #4]
   5048c:	bl	4f184 <luaL_error@@Base+0x9098>
   50490:	cmp	r5, r4
   50494:	bhi	50440 <luaL_error@@Base+0xa354>
   50498:	add	sp, sp, #12
   5049c:	pop	{r4, r5, r6, r7, pc}
   504a0:	add	r0, r0, lr, lsl #1
   504a4:	ldr	ip, [r6, #88]	; 0x58
   504a8:	ldrh	lr, [r0, #68]	; 0x44
   504ac:	ldr	r1, [r2, #4]
   504b0:	add	r3, r3, #16
   504b4:	mov	r0, r6
   504b8:	ldr	r2, [ip, lr, lsl #4]
   504bc:	str	r1, [r6, #68]	; 0x44
   504c0:	add	r2, r2, #16
   504c4:	str	r2, [sp]
   504c8:	mov	r1, #0
   504cc:	ldr	r2, [pc]	; 504d4 <luaL_error@@Base+0xa3e8>
   504d0:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   504d4:	andeq	r0, r0, r2, lsr fp
   504d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   504dc:	sub	sp, sp, #12
   504e0:	ldr	r3, [r0, #96]	; 0x60
   504e4:	ldr	r4, [r1, #4]
   504e8:	ldr	r9, [r0, #88]	; 0x58
   504ec:	add	r4, r9, r4, lsl #4
   504f0:	add	r9, r9, r3, lsl #4
   504f4:	cmp	r4, r9
   504f8:	bcs	50618 <luaL_error@@Base+0xa52c>
   504fc:	sub	r3, r9, #1
   50500:	mov	sl, r1
   50504:	str	r0, [sp]
   50508:	add	r4, r4, #16
   5050c:	mov	fp, #0
   50510:	str	r3, [sp, #4]
   50514:	b	50568 <luaL_error@@Base+0xa47c>
   50518:	tst	r2, #2
   5051c:	beq	50558 <luaL_error@@Base+0xa46c>
   50520:	ldr	r1, [sl]
   50524:	cmp	r1, #0
   50528:	beq	5064c <luaL_error@@Base+0xa560>
   5052c:	ldrsb	r2, [r1, #9]
   50530:	cmp	r6, #1
   50534:	movne	r0, #4
   50538:	moveq	r0, #2
   5053c:	orr	r2, r2, r0
   50540:	strb	r2, [r1, #9]
   50544:	ldrb	r2, [sl, #8]
   50548:	strb	r2, [r4, #-4]
   5054c:	ldrb	r1, [sl, #9]
   50550:	tst	r1, #8
   50554:	bne	50620 <luaL_error@@Base+0xa534>
   50558:	cmp	r9, r4
   5055c:	bls	50618 <luaL_error@@Base+0xa52c>
   50560:	add	r8, r4, #16
   50564:	mov	r4, r8
   50568:	ldr	r6, [r4, #-16]
   5056c:	sub	r0, r4, #16
   50570:	cmp	r6, #0
   50574:	beq	50558 <luaL_error@@Base+0xa46c>
   50578:	ldrb	r2, [r4, #-3]
   5057c:	tst	r2, #4
   50580:	beq	50518 <luaL_error@@Base+0xa42c>
   50584:	cmp	r9, r4
   50588:	str	fp, [r4, #-16]
   5058c:	bls	50618 <luaL_error@@Base+0xa52c>
   50590:	ldr	r3, [sp, #4]
   50594:	add	r8, r4, #16
   50598:	sub	r7, r3, r4
   5059c:	bic	r2, r7, #15
   505a0:	add	r7, r4, #32
   505a4:	add	r7, r2, r7
   505a8:	mov	r5, r8
   505ac:	b	505bc <luaL_error@@Base+0xa4d0>
   505b0:	add	r5, r5, #16
   505b4:	cmp	r7, r5
   505b8:	beq	50564 <luaL_error@@Base+0xa478>
   505bc:	ldr	r3, [r5, #-16]
   505c0:	cmp	r6, r3
   505c4:	bne	505b0 <luaL_error@@Base+0xa4c4>
   505c8:	ldrb	r3, [r5, #-3]
   505cc:	tst	r3, #2
   505d0:	beq	505b0 <luaL_error@@Base+0xa4c4>
   505d4:	ldrb	r3, [sl, #9]
   505d8:	ldr	r2, [sp]
   505dc:	ldrb	ip, [r4, #-4]
   505e0:	tst	r3, #8
   505e4:	ldr	r0, [r2]
   505e8:	ldr	r1, [r5, #-12]
   505ec:	beq	505fc <luaL_error@@Base+0xa510>
   505f0:	ldrb	r2, [r5, #-4]
   505f4:	cmp	r2, ip
   505f8:	bhi	50634 <luaL_error@@Base+0xa548>
   505fc:	ldr	r3, [r0, #52]	; 0x34
   50600:	str	fp, [r5, #-16]
   50604:	add	r3, r3, r1, lsl #3
   50608:	strb	ip, [r3, #1]
   5060c:	ldr	r2, [r4, #-12]
   50610:	bl	4f184 <luaL_error@@Base+0x9098>
   50614:	b	505b0 <luaL_error@@Base+0xa4c4>
   50618:	add	sp, sp, #12
   5061c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   50620:	ldr	r3, [sp]
   50624:	ldr	r1, [r4, #-12]
   50628:	ldr	r0, [r3]
   5062c:	bl	4f1d4 <luaL_error@@Base+0x90e8>
   50630:	b	50558 <luaL_error@@Base+0xa46c>
   50634:	bl	4f1d4 <luaL_error@@Base+0x90e8>
   50638:	ldr	r3, [sp]
   5063c:	ldrb	ip, [r4, #-4]
   50640:	ldr	r1, [r5, #-12]
   50644:	ldr	r0, [r3]
   50648:	b	505fc <luaL_error@@Base+0xa510>
   5064c:	ldr	ip, [sp]
   50650:	ldr	r2, [r0, #4]
   50654:	cmp	r6, #1
   50658:	ldr	r3, [ip]
   5065c:	ldr	r3, [r3, #52]	; 0x34
   50660:	add	r3, r3, r2, lsl #3
   50664:	ldr	r3, [r3, #4]
   50668:	str	r3, [ip, #68]	; 0x44
   5066c:	beq	50680 <luaL_error@@Base+0xa594>
   50670:	add	r3, r6, #16
   50674:	ldr	r0, [sp]
   50678:	ldr	r2, [pc, #12]	; 5068c <luaL_error@@Base+0xa5a0>
   5067c:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   50680:	mov	r0, ip
   50684:	ldr	r2, [pc, #4]	; 50690 <luaL_error@@Base+0xa5a4>
   50688:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   5068c:	andeq	r0, r0, r8, lsl #22
   50690:	strdeq	r0, [r0], -r7
   50694:	push	{r4, r5, r6, r7, r8, lr}
   50698:	mov	r6, r0
   5069c:	ldr	r4, [r0, #12]
   506a0:	ldr	r5, [r0, #4]
   506a4:	ldr	r3, [r4]
   506a8:	ldr	ip, [r5]
   506ac:	str	r3, [r0, #12]
   506b0:	ldrb	lr, [r4, #8]
   506b4:	ldr	r2, [ip, #36]	; 0x24
   506b8:	cmp	lr, r2
   506bc:	bcs	506f0 <luaL_error@@Base+0xa604>
   506c0:	add	r2, r2, #33	; 0x21
   506c4:	add	r1, ip, #66	; 0x42
   506c8:	ldr	r7, [r5, #88]	; 0x58
   506cc:	ldr	r0, [ip, #20]
   506d0:	add	r2, ip, r2, lsl #1
   506d4:	add	r1, r1, lr, lsl #1
   506d8:	ldrh	r3, [r2], #-2
   506dc:	cmp	r1, r2
   506e0:	add	r3, r7, r3, lsl #4
   506e4:	str	r0, [r3, #8]
   506e8:	bne	506d8 <luaL_error@@Base+0xa5ec>
   506ec:	str	lr, [ip, #36]	; 0x24
   506f0:	ldr	r3, [r6, #36]	; 0x24
   506f4:	str	r3, [r6, #32]
   506f8:	ldrb	r3, [r4, #9]
   506fc:	and	r2, r3, #24
   50700:	cmp	r2, #8
   50704:	beq	5075c <luaL_error@@Base+0xa670>
   50708:	tst	r3, #2
   5070c:	beq	50744 <luaL_error@@Base+0xa658>
   50710:	tst	r3, #1
   50714:	beq	5074c <luaL_error@@Base+0xa660>
   50718:	ldr	r3, [r6, #20]
   5071c:	mov	r2, #4
   50720:	mov	r1, #1
   50724:	mov	r0, r5
   50728:	bl	5031c <luaL_error@@Base+0xa230>
   5072c:	str	r0, [r5, #96]	; 0x60
   50730:	mov	r2, r0
   50734:	ldr	r1, [r4, #4]
   50738:	mov	r0, r5
   5073c:	bl	5040c <luaL_error@@Base+0xa320>
   50740:	ldrb	r3, [r4, #9]
   50744:	tst	r3, #4
   50748:	popeq	{r4, r5, r6, r7, r8, pc}
   5074c:	mov	r1, r4
   50750:	mov	r0, r5
   50754:	pop	{r4, r5, r6, r7, r8, lr}
   50758:	b	504d8 <luaL_error@@Base+0xa3ec>
   5075c:	lsl	r1, lr, #8
   50760:	orr	r1, r1, #-2147483598	; 0x80000032
   50764:	mov	r0, r6
   50768:	bl	4f23c <luaL_error@@Base+0x9150>
   5076c:	ldrb	r3, [r4, #9]
   50770:	b	50708 <luaL_error@@Base+0xa61c>
   50774:	push	{r4, lr}
   50778:	mov	r4, r0
   5077c:	add	r0, r0, #4
   50780:	ldr	r5, [r4, #36]	; 0x24
   50784:	bl	20140 <luaL_where@@Base+0x3c>
   50788:	mov	r1, r5
   5078c:	ldr	r2, [pc, #8]	; 5079c <luaL_error@@Base+0xa6b0>
   50790:	mov	r3, r0
   50794:	mov	r0, r4
   50798:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   5079c:	andeq	r0, r0, r9, lsr #18
   507a0:	push	{r4, r5, r6, r7, r8, lr}
   507a4:	mov	r2, #9
   507a8:	mov	r4, r1
   507ac:	ldr	r1, [pc, #256]	; 508b4 <luaL_error@@Base+0xa7c8>
   507b0:	mov	r5, r0
   507b4:	ldr	r6, [r0, #8]
   507b8:	bl	20260 <luaL_where@@Base+0x15c>
   507bc:	ldr	r3, [r5, #8]
   507c0:	ldr	r1, [r3, #120]	; 0x78
   507c4:	ldr	r2, [r1, #28]
   507c8:	ldr	r3, [r1, #20]
   507cc:	ldr	ip, [r0, #8]
   507d0:	and	r2, r2, ip
   507d4:	add	r2, r2, r2, lsl #1
   507d8:	add	r3, r3, r2, lsl #3
   507dc:	b	507ec <luaL_error@@Base+0xa700>
   507e0:	ldr	r3, [r3, #16]
   507e4:	cmp	r3, #0
   507e8:	beq	5082c <luaL_error@@Base+0xa740>
   507ec:	ldr	r2, [r3, #12]
   507f0:	cmn	r2, #5
   507f4:	bne	507e0 <luaL_error@@Base+0xa6f4>
   507f8:	ldr	r2, [r3, #8]
   507fc:	cmp	r0, r2
   50800:	bne	507e0 <luaL_error@@Base+0xa6f4>
   50804:	ldr	r2, [r3, #4]
   50808:	cmn	r2, #12
   5080c:	beq	50834 <luaL_error@@Base+0xa748>
   50810:	ldrb	r3, [r6, #115]	; 0x73
   50814:	mov	r2, #1
   50818:	and	r4, r4, #7
   5081c:	mov	r0, #0
   50820:	bic	r4, r3, r2, lsl r4
   50824:	strb	r4, [r6, #115]	; 0x73
   50828:	pop	{r4, r5, r6, r7, r8, pc}
   5082c:	ldr	r3, [r3, #4]
   50830:	udf	#0
   50834:	ldr	r0, [r3]
   50838:	bic	r1, r4, #7
   5083c:	ldr	r3, [r0, #24]
   50840:	cmp	r3, r1
   50844:	bls	508a8 <luaL_error@@Base+0xa7bc>
   50848:	ldr	r7, [r0, #8]
   5084c:	add	r7, r7, r1, lsl #3
   50850:	cmp	r7, #0
   50854:	beq	50810 <luaL_error@@Base+0xa724>
   50858:	ldr	r3, [r7, #4]
   5085c:	cmn	r3, #9
   50860:	bne	50810 <luaL_error@@Base+0xa724>
   50864:	ldr	r3, [r5, #20]
   50868:	ldr	r2, [r5, #24]
   5086c:	sub	r2, r2, r3
   50870:	cmp	r2, #160	; 0xa0
   50874:	bgt	50888 <luaL_error@@Base+0xa79c>
   50878:	mov	r1, #20
   5087c:	mov	r0, r5
   50880:	bl	1fd08 <lua_getstack@@Base+0x50>
   50884:	ldr	r3, [r5, #20]
   50888:	ldr	r1, [r7]
   5088c:	ldr	ip, [r5, #28]
   50890:	mvn	r2, #8
   50894:	add	r0, r3, #8
   50898:	str	r0, [r5, #20]
   5089c:	sub	r0, r0, ip
   508a0:	stm	r3, {r1, r2}
   508a4:	pop	{r4, r5, r6, r7, r8, pc}
   508a8:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   508ac:	mov	r7, r0
   508b0:	b	50850 <luaL_error@@Base+0xa764>
   508b4:	andeq	r2, r7, ip, lsr #30
   508b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   508bc:	ldr	sl, [r0, #8]
   508c0:	sub	r8, sl, #48	; 0x30
   508c4:	ldrb	r7, [r8, #161]	; 0xa1
   508c8:	ands	r7, r7, #64	; 0x40
   508cc:	bne	509ac <luaL_error@@Base+0xa8c0>
   508d0:	ldr	r5, [r8, #712]	; 0x2c8
   508d4:	mov	r9, r0
   508d8:	sub	r5, r5, #1
   508dc:	cmp	r5, #0
   508e0:	ble	5093c <luaL_error@@Base+0xa850>
   508e4:	ldr	r3, [r8, #704]	; 0x2c0
   508e8:	add	sl, sl, #656	; 0x290
   508ec:	lsl	r4, r5, #2
   508f0:	b	50908 <luaL_error@@Base+0xa81c>
   508f4:	str	r7, [r6, #64]	; 0x40
   508f8:	str	r7, [r2]
   508fc:	subs	r5, r5, #1
   50900:	sub	r4, r4, #4
   50904:	beq	5093c <luaL_error@@Base+0xa850>
   50908:	ldr	r6, [r3, r4]
   5090c:	add	r2, r3, r4
   50910:	cmp	r6, #0
   50914:	beq	508fc <luaL_error@@Base+0xa810>
   50918:	ldrh	r1, [r6, #68]	; 0x44
   5091c:	cmp	r1, #0
   50920:	bne	508f4 <luaL_error@@Base+0xa808>
   50924:	mov	r1, r6
   50928:	mov	r0, sl
   5092c:	bl	1cec4 <_start@@Base+0x9b14>
   50930:	ldr	r3, [r8, #704]	; 0x2c0
   50934:	add	r2, r3, r4
   50938:	b	508f4 <luaL_error@@Base+0xa808>
   5093c:	add	r3, r8, #432	; 0x1b0
   50940:	mov	r4, #0
   50944:	strh	r4, [r3, #64]	; 0x40
   50948:	mov	r1, r4
   5094c:	str	r4, [r8, #708]	; 0x2c4
   50950:	mov	r2, #512	; 0x200
   50954:	add	r0, r8, #2064	; 0x810
   50958:	bl	12ed4 <memset@plt>
   5095c:	ldr	r0, [r8, #2756]	; 0xac4
   50960:	str	r4, [r8, #2772]	; 0xad4
   50964:	cmp	r0, r4
   50968:	str	r4, [r8, #2756]	; 0xac4
   5096c:	beq	50984 <luaL_error@@Base+0xa898>
   50970:	ldr	r4, [r0]
   50974:	ldr	r1, [r0, #4]
   50978:	bl	12f70 <munmap@plt>
   5097c:	subs	r0, r4, #0
   50980:	bne	50970 <luaL_error@@Base+0xa884>
   50984:	add	r0, r8, #2000	; 0x7d0
   50988:	mov	r2, #64	; 0x40
   5098c:	mov	r1, #0
   50990:	bl	12ed4 <memset@plt>
   50994:	ldr	r3, [r9, #8]
   50998:	ldrb	r3, [r3, #115]	; 0x73
   5099c:	tst	r3, #2
   509a0:	bne	509b4 <luaL_error@@Base+0xa8c8>
   509a4:	mov	r0, #0
   509a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   509ac:	mov	r0, #1
   509b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   509b4:	ldr	r1, [pc, #64]	; 509fc <luaL_error@@Base+0xa910>
   509b8:	mov	r0, r9
   509bc:	bl	507a0 <luaL_error@@Base+0xa6b4>
   509c0:	subs	r5, r0, #0
   509c4:	beq	509a4 <luaL_error@@Base+0xa8b8>
   509c8:	ldr	r4, [r9, #20]
   509cc:	mov	r2, #5
   509d0:	add	r3, r4, #8
   509d4:	str	r3, [r9, #20]
   509d8:	ldr	r1, [pc, #32]	; 50a00 <luaL_error@@Base+0xa914>
   509dc:	mov	r0, r9
   509e0:	bl	20260 <luaL_where@@Base+0x15c>
   509e4:	mvn	r3, #4
   509e8:	mov	r1, r5
   509ec:	stm	r4, {r0, r3}
   509f0:	mov	r0, r9
   509f4:	bl	1aaf8 <_start@@Base+0x7748>
   509f8:	b	509a4 <luaL_error@@Base+0xa8b8>
   509fc:			; <UNDEFINED> instruction: 0x96c8a339
   50a00:	andeq	r2, r7, r8, lsr pc
   50a04:	ldr	r3, [r0, #92]	; 0x5c
   50a08:	ldrb	r3, [r3, #37]	; 0x25
   50a0c:	tst	r3, #8
   50a10:	beq	50a58 <luaL_error@@Base+0xa96c>
   50a14:	ldr	r3, [r0, #2304]	; 0x900
   50a18:	cmp	r3, #0
   50a1c:	bne	50a4c <luaL_error@@Base+0xa960>
   50a20:	ldr	r3, [r0, #2308]	; 0x904
   50a24:	cmp	r3, #0
   50a28:	bne	50a4c <luaL_error@@Base+0xa960>
   50a2c:	ldr	r2, [r0, #84]	; 0x54
   50a30:	ldr	r3, [r2]
   50a34:	add	r3, r3, #1
   50a38:	strb	r3, [r2]
   50a3c:	ldr	r2, [r0, #92]	; 0x5c
   50a40:	ldrb	r3, [r2, #37]	; 0x25
   50a44:	orr	r3, r3, #16
   50a48:	strb	r3, [r2, #37]	; 0x25
   50a4c:	mov	r3, #0
   50a50:	str	r3, [r0, #168]	; 0xa8
   50a54:	bx	lr
   50a58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   50a5c:	mov	r4, r0
   50a60:	ldr	r5, [r0, #276]	; 0x114
   50a64:	ldr	r7, [r0, #280]	; 0x118
   50a68:	cmp	r5, #0
   50a6c:	moveq	r5, #1
   50a70:	streq	r5, [r0, #276]	; 0x114
   50a74:	cmp	r7, r5
   50a78:	sub	sp, sp, #60	; 0x3c
   50a7c:	bls	50ac8 <luaL_error@@Base+0xa9dc>
   50a80:	ldr	r3, [r0, #272]	; 0x110
   50a84:	lsl	r2, r5, #2
   50a88:	ldr	r1, [r3, r5, lsl #2]
   50a8c:	cmp	r1, #0
   50a90:	addeq	r2, r5, #1
   50a94:	beq	50d70 <luaL_error@@Base+0xac84>
   50a98:	add	r2, r2, #4
   50a9c:	add	r3, r3, r2
   50aa0:	add	r5, r5, #1
   50aa4:	b	50abc <luaL_error@@Base+0xa9d0>
   50aa8:	ldr	r1, [r3], #4
   50aac:	add	r2, r5, #1
   50ab0:	cmp	r1, #0
   50ab4:	beq	50d70 <luaL_error@@Base+0xac84>
   50ab8:	mov	r5, r2
   50abc:	cmp	r5, r7
   50ac0:	bne	50aa8 <luaL_error@@Base+0xa9bc>
   50ac4:	str	r7, [r4, #276]	; 0x114
   50ac8:	ldr	r3, [r4, #1508]	; 0x5e4
   50acc:	ldr	r2, [pc, #3864]	; 519ec <luaL_error@@Base+0xb900>
   50ad0:	add	r3, r3, #1
   50ad4:	cmp	r3, r2
   50ad8:	movcs	r3, r2
   50adc:	cmp	r3, #2
   50ae0:	movcc	r3, #2
   50ae4:	cmp	r3, r7
   50ae8:	ldr	r6, [r4, #80]	; 0x50
   50aec:	bls	51520 <luaL_error@@Base+0xb434>
   50af0:	lsl	r8, r7, #1
   50af4:	cmp	r8, #8
   50af8:	movcc	r8, #8
   50afc:	cmp	r8, r3
   50b00:	movcs	r8, r3
   50b04:	lsl	r5, r7, #2
   50b08:	lsl	r9, r8, #2
   50b0c:	mov	r0, r6
   50b10:	mov	r3, r9
   50b14:	mov	r2, r5
   50b18:	ldr	r1, [r4, #272]	; 0x110
   50b1c:	bl	205b0 <luaL_where@@Base+0x4ac>
   50b20:	cmp	r8, r7
   50b24:	str	r8, [r4, #280]	; 0x118
   50b28:	str	r0, [r4, #272]	; 0x110
   50b2c:	bls	50b50 <luaL_error@@Base+0xaa64>
   50b30:	sub	r3, r5, #4
   50b34:	sub	r9, r9, #4
   50b38:	add	r3, r0, r3
   50b3c:	mov	r2, #0
   50b40:	add	r0, r0, r9
   50b44:	str	r2, [r3, #4]!
   50b48:	cmp	r0, r3
   50b4c:	bne	50b44 <luaL_error@@Base+0xaa58>
   50b50:	ldr	r5, [r4, #276]	; 0x114
   50b54:	cmp	r5, #0
   50b58:	ldr	r6, [r4, #80]	; 0x50
   50b5c:	beq	51520 <luaL_error@@Base+0xb434>
   50b60:	ldr	r3, [r4, #272]	; 0x110
   50b64:	mov	r2, #76	; 0x4c
   50b68:	mov	r1, #0
   50b6c:	str	r4, [r3, r5, lsl #2]
   50b70:	mov	r0, r4
   50b74:	bl	12ed4 <memset@plt>
   50b78:	ldr	r1, [r4, #232]	; 0xe8
   50b7c:	ldr	r3, [r4, #252]	; 0xfc
   50b80:	ldr	r0, [r4, #256]	; 0x100
   50b84:	add	r2, r4, #268	; 0x10c
   50b88:	str	r1, [r4, #16]
   50b8c:	str	r3, [r4, #28]
   50b90:	mov	r1, #32768	; 0x8000
   50b94:	mov	r3, #0
   50b98:	str	r1, [r4, #20]
   50b9c:	str	r1, [r4, #8]
   50ba0:	str	r3, [r4, #112]	; 0x70
   50ba4:	strh	r5, [r4, #64]	; 0x40
   50ba8:	str	r0, [r4, #32]
   50bac:	str	r3, [r4, #264]	; 0x108
   50bb0:	strh	r3, [r2]
   50bb4:	ldr	r2, [r6, #8]
   50bb8:	ldr	r1, [r4, #92]	; 0x5c
   50bbc:	add	r7, r4, #284	; 0x11c
   50bc0:	strh	r3, [r7]
   50bc4:	str	r1, [r4, #36]	; 0x24
   50bc8:	ldrb	r3, [r2, #115]	; 0x73
   50bcc:	tst	r3, #2
   50bd0:	bne	51284 <luaL_error@@Base+0xb198>
   50bd4:	add	r3, r4, #488	; 0x1e8
   50bd8:	mov	r0, r3
   50bdc:	mov	r2, #1020	; 0x3fc
   50be0:	mov	r1, #0
   50be4:	str	r3, [sp, #24]
   50be8:	bl	12ed4 <memset@plt>
   50bec:	mov	r2, #200	; 0xc8
   50bf0:	mov	r1, #0
   50bf4:	add	r0, r7, #2
   50bf8:	bl	12ed4 <memset@plt>
   50bfc:	add	r0, r4, #2144	; 0x860
   50c00:	mov	r2, #128	; 0x80
   50c04:	mov	r1, #0
   50c08:	add	r0, r0, #8
   50c0c:	bl	12ed4 <memset@plt>
   50c10:	add	r3, r4, #2288	; 0x8f0
   50c14:	mvn	r1, #32768	; 0x8000
   50c18:	ldr	r0, [r4, #1548]	; 0x60c
   50c1c:	ldr	r2, [r4, #2304]	; 0x900
   50c20:	ldr	ip, [r4, #1544]	; 0x608
   50c24:	strh	r1, [r3]
   50c28:	ldr	r3, [r4, #2308]	; 0x904
   50c2c:	ldr	r1, [pc, #3516]	; 519f0 <luaL_error@@Base+0xb904>
   50c30:	mov	r5, #0
   50c34:	strh	r2, [r4, #120]	; 0x78
   50c38:	strh	r3, [r4, #122]	; 0x7a
   50c3c:	add	r2, r4, #492	; 0x1ec
   50c40:	mvn	r3, #0
   50c44:	mov	r6, #1
   50c48:	str	r0, [r4, #176]	; 0xb0
   50c4c:	strh	r1, [r4, #124]	; 0x7c
   50c50:	str	r2, [r4, #96]	; 0x60
   50c54:	str	r3, [r4, #164]	; 0xa4
   50c58:	str	ip, [r4, #172]	; 0xac
   50c5c:	str	r5, [r4, #2284]	; 0x8ec
   50c60:	str	r5, [r4, #104]	; 0x68
   50c64:	str	r5, [r4, #184]	; 0xb8
   50c68:	str	r5, [r4, #188]	; 0xbc
   50c6c:	str	r5, [r4, #180]	; 0xb4
   50c70:	str	r5, [r4, #244]	; 0xf4
   50c74:	str	r5, [r4, #160]	; 0xa0
   50c78:	str	r6, [r4, #108]	; 0x6c
   50c7c:	mov	r0, r4
   50c80:	bl	25258 <luaL_where@@Base+0x5154>
   50c84:	ldr	r3, [r4, #16]
   50c88:	ldr	r1, [pc, #3428]	; 519f4 <luaL_error@@Base+0xb908>
   50c8c:	add	r3, r3, #258048	; 0x3f000
   50c90:	ldr	r0, [pc, #3424]	; 519f8 <luaL_error@@Base+0xb90c>
   50c94:	mov	r2, #5632	; 0x1600
   50c98:	str	r1, [r3, #4084]	; 0xff4
   50c9c:	str	r2, [r3, #4092]	; 0xffc
   50ca0:	str	r5, [r3, #4072]	; 0xfe8
   50ca4:	str	r5, [r3, #4080]	; 0xff0
   50ca8:	str	r5, [r3, #4088]	; 0xff8
   50cac:	str	r0, [r3, #4076]	; 0xfec
   50cb0:	ldr	r3, [r4, #2304]	; 0x900
   50cb4:	ldr	r2, [r4, #84]	; 0x54
   50cb8:	ldr	r1, [pc, #3388]	; 519fc <luaL_error@@Base+0xb910>
   50cbc:	cmp	r3, r5
   50cc0:	str	r1, [r4, #20]
   50cc4:	str	r2, [r4, #2300]	; 0x8fc
   50cc8:	str	r2, [r4, #40]	; 0x28
   50ccc:	beq	51184 <luaL_error@@Base+0xb098>
   50cd0:	ldr	r0, [r4, #272]	; 0x110
   50cd4:	mov	ip, #88	; 0x58
   50cd8:	ldr	r1, [r4, #2308]	; 0x904
   50cdc:	ldr	r8, [r0, r3, lsl #2]
   50ce0:	ldrh	r0, [r8, #68]	; 0x44
   50ce4:	str	ip, [r4, #44]	; 0x2c
   50ce8:	ldr	ip, [r8, #28]
   50cec:	cmp	r0, r5
   50cf0:	movne	r3, r0
   50cf4:	cmp	r1, r5
   50cf8:	str	ip, [sp, #16]
   50cfc:	strh	r3, [r4, #68]	; 0x44
   50d00:	bne	50d78 <luaL_error@@Base+0xac8c>
   50d04:	ldrb	r0, [ip, #6]
   50d08:	cmp	r0, r5
   50d0c:	bne	50d78 <luaL_error@@Base+0xac8c>
   50d10:	ldr	r1, [r4, #92]	; 0x5c
   50d14:	add	r1, r1, #64	; 0x40
   50d18:	cmp	r2, r1
   50d1c:	bls	51084 <luaL_error@@Base+0xaf98>
   50d20:	ldr	r1, [r2, #-4]
   50d24:	uxtb	r0, r1
   50d28:	cmp	r0, #78	; 0x4e
   50d2c:	bne	51084 <luaL_error@@Base+0xaf98>
   50d30:	lsr	r1, r1, #16
   50d34:	sub	r1, r1, #32768	; 0x8000
   50d38:	sub	r1, r1, #-1073741823	; 0xc0000001
   50d3c:	ldr	r2, [r2, r1, lsl #2]
   50d40:	cmp	r3, r2, lsr #16
   50d44:	bne	51084 <luaL_error@@Base+0xaf98>
   50d48:	mov	r0, r4
   50d4c:	bl	2e158 <luaL_where@@Base+0xe054>
   50d50:	ldr	r1, [r4, #84]	; 0x54
   50d54:	add	r2, r4, #2272	; 0x8e0
   50d58:	mov	r3, r6
   50d5c:	sub	r1, r1, #4
   50d60:	add	r2, r2, #12
   50d64:	mov	r0, r4
   50d68:	bl	2a160 <luaL_where@@Base+0xa05c>
   50d6c:	b	510b4 <luaL_error@@Base+0xafc8>
   50d70:	str	r2, [r4, #276]	; 0x114
   50d74:	b	50b54 <luaL_error@@Base+0xaa68>
   50d78:	ldr	r2, [sp, #16]
   50d7c:	lsl	r1, r1, #3
   50d80:	mov	r3, #0
   50d84:	ldrh	r1, [r2, r1]!	; <UNPREDICTABLE>
   50d88:	str	r3, [r4, #2300]	; 0x8fc
   50d8c:	mov	r0, r2
   50d90:	str	r2, [sp, #16]
   50d94:	ldrb	r6, [r0, #6]
   50d98:	ldr	r2, [r8, #32]
   50d9c:	str	r3, [r4, #184]	; 0xb8
   50da0:	add	r2, r2, r1, lsl #2
   50da4:	cmp	r6, r3
   50da8:	str	r2, [sp, #12]
   50dac:	beq	5108c <luaL_error@@Base+0xafa0>
   50db0:	mov	sl, r3
   50db4:	str	r3, [sp, #20]
   50db8:	mov	r7, r3
   50dbc:	sub	r0, r2, #4
   50dc0:	str	r6, [sp, #8]
   50dc4:	b	50e6c <luaL_error@@Base+0xad80>
   50dc8:	ldr	r3, [pc, #3120]	; 51a00 <luaL_error@@Base+0xb914>
   50dcc:	orr	r7, r7, lr
   50dd0:	cmp	ip, r3
   50dd4:	bls	50ee8 <luaL_error@@Base+0xadfc>
   50dd8:	ldrh	r3, [r1, #6]
   50ddc:	bic	r3, r3, #127	; 0x7f
   50de0:	cmp	r3, #128	; 0x80
   50de4:	beq	50ef4 <luaL_error@@Base+0xae08>
   50de8:	ldrb	r2, [r1, #5]
   50dec:	ldrb	r3, [r1, #4]
   50df0:	mov	r0, r4
   50df4:	cmp	r2, #71	; 0x47
   50df8:	and	r3, r3, #31
   50dfc:	ldrheq	r2, [r1, #2]
   50e00:	movne	r2, #33	; 0x21
   50e04:	orr	r3, r3, #18176	; 0x4700
   50e08:	andeq	r2, r2, #16
   50e0c:	orreq	r2, r2, #33	; 0x21
   50e10:	strh	r3, [r4, #124]	; 0x7c
   50e14:	strh	r6, [r4, #120]	; 0x78
   50e18:	strh	r2, [r4, #122]	; 0x7a
   50e1c:	bl	25258 <luaL_where@@Base+0x5154>
   50e20:	adds	r2, r6, #0
   50e24:	and	r3, r5, #196608	; 0x30000
   50e28:	add	r1, r4, r6, lsl #2
   50e2c:	movne	r2, #1
   50e30:	cmp	r3, #0
   50e34:	orr	r3, r3, r0
   50e38:	moveq	r2, #0
   50e3c:	ldr	r0, [r4, #184]	; 0xb8
   50e40:	tst	r5, #65536	; 0x10000
   50e44:	str	r3, [r1, #488]	; 0x1e8
   50e48:	ldr	r3, [sp, #8]
   50e4c:	addne	r6, r6, #1
   50e50:	add	sl, sl, #1
   50e54:	add	r2, r0, r2
   50e58:	strne	r6, [r4, #108]	; 0x6c
   50e5c:	cmp	r3, sl
   50e60:	str	r2, [r4, #184]	; 0xb8
   50e64:	mov	r0, r9
   50e68:	beq	50f04 <luaL_error@@Base+0xae18>
   50e6c:	ldr	r5, [r0, #4]
   50e70:	mov	r3, #1
   50e74:	and	lr, r5, #31
   50e78:	ldr	r1, [r8, #16]
   50e7c:	lsl	lr, r3, lr
   50e80:	uxth	ip, r5
   50e84:	tst	lr, r7
   50e88:	add	r1, r1, ip, lsl #3
   50e8c:	lsr	r6, r5, #24
   50e90:	add	r9, r0, #4
   50e94:	beq	50dc8 <luaL_error@@Base+0xacdc>
   50e98:	cmp	sl, #0
   50e9c:	beq	50dc8 <luaL_error@@Base+0xacdc>
   50ea0:	ldr	r3, [sp, #12]
   50ea4:	ldr	r2, [r3]
   50ea8:	uxth	r3, r2
   50eac:	cmp	ip, r3
   50eb0:	ldrne	r3, [sp, #12]
   50eb4:	beq	50ed0 <luaL_error@@Base+0xade4>
   50eb8:	cmp	r0, r3
   50ebc:	beq	50dc8 <luaL_error@@Base+0xacdc>
   50ec0:	ldr	r2, [r3, #4]!
   50ec4:	uxth	fp, r2
   50ec8:	cmp	ip, fp
   50ecc:	bne	50eb8 <luaL_error@@Base+0xadcc>
   50ed0:	lsr	r2, r2, #24
   50ed4:	add	r2, r4, r2, lsl #2
   50ed8:	ldr	r3, [r2, #488]	; 0x1e8
   50edc:	bics	r0, r3, #196608	; 0x30000
   50ee0:	bne	50e20 <luaL_error@@Base+0xad34>
   50ee4:	b	50dc8 <luaL_error@@Base+0xacdc>
   50ee8:	mov	r0, r4
   50eec:	bl	2b36c <luaL_where@@Base+0xb268>
   50ef0:	b	50e20 <luaL_error@@Base+0xad34>
   50ef4:	mov	r3, #1
   50ef8:	mov	r0, r6
   50efc:	str	r3, [sp, #20]
   50f00:	b	50e20 <luaL_error@@Base+0xad34>
   50f04:	ldr	r3, [sp, #20]
   50f08:	str	r7, [sp, #8]
   50f0c:	cmp	r3, #0
   50f10:	beq	5108c <luaL_error@@Base+0xafa0>
   50f14:	ldr	r3, [sp, #16]
   50f18:	mov	r2, r8
   50f1c:	ldr	fp, [sp, #12]
   50f20:	ldrh	r3, [r3, #2]
   50f24:	ldr	r1, [r2, #16]!
   50f28:	str	fp, [sp, #32]
   50f2c:	str	r2, [sp, #48]	; 0x30
   50f30:	add	r3, r1, r3, lsl #3
   50f34:	str	r3, [sp, #36]	; 0x24
   50f38:	mov	r2, #0
   50f3c:	add	r3, fp, sl, lsl #2
   50f40:	str	r2, [sp, #28]
   50f44:	mov	r9, r3
   50f48:	b	50f74 <luaL_error@@Base+0xae88>
   50f4c:	ldr	r3, [pc, #2732]	; 51a00 <luaL_error@@Base+0xb914>
   50f50:	cmp	r7, r3
   50f54:	bls	50f68 <luaL_error@@Base+0xae7c>
   50f58:	ldrh	r3, [r6, #6]
   50f5c:	bic	r3, r3, #127	; 0x7f
   50f60:	cmp	r3, #128	; 0x80
   50f64:	beq	514f4 <luaL_error@@Base+0xb408>
   50f68:	cmp	r9, fp
   50f6c:	beq	5111c <luaL_error@@Base+0xb030>
   50f70:	ldr	r1, [r8, #16]
   50f74:	ldr	r5, [fp], #4
   50f78:	uxth	r7, r5
   50f7c:	add	r6, r1, r7, lsl #3
   50f80:	ldrb	r3, [r6, #6]
   50f84:	cmp	r3, #253	; 0xfd
   50f88:	bne	50f4c <luaL_error@@Base+0xae60>
   50f8c:	lsr	r5, r5, #24
   50f90:	add	r3, r4, r5, lsl #2
   50f94:	ldr	r3, [r3, #488]	; 0x1e8
   50f98:	cmp	r5, r3
   50f9c:	bne	50f68 <luaL_error@@Base+0xae7c>
   50fa0:	ldrh	r2, [r6]
   50fa4:	ldr	r3, [r8, #20]
   50fa8:	cmp	r2, r3
   50fac:	bcs	516c8 <luaL_error@@Base+0xb5dc>
   50fb0:	ldrh	r2, [r6, #2]
   50fb4:	cmp	r2, r3
   50fb8:	bcs	516ec <luaL_error@@Base+0xb600>
   50fbc:	ldrb	r3, [r6, #5]
   50fc0:	cmp	r3, #83	; 0x53
   50fc4:	beq	5144c <luaL_error@@Base+0xb360>
   50fc8:	ldr	r7, [sp, #36]	; 0x24
   50fcc:	add	r0, r6, #8
   50fd0:	cmp	r7, r0
   50fd4:	bhi	50fe8 <luaL_error@@Base+0xaefc>
   50fd8:	b	51468 <luaL_error@@Base+0xb37c>
   50fdc:	cmp	r7, r5
   50fe0:	bls	51468 <luaL_error@@Base+0xb37c>
   50fe4:	mov	r0, r5
   50fe8:	ldrb	r3, [r0, #6]
   50fec:	add	r5, r0, #8
   50ff0:	cmp	r3, #254	; 0xfe
   50ff4:	bne	50fdc <luaL_error@@Base+0xaef0>
   50ff8:	ldrb	r3, [r5, #-1]
   50ffc:	cmp	r3, #255	; 0xff
   51000:	beq	5175c <luaL_error@@Base+0xb670>
   51004:	add	r3, r6, r3, lsl #3
   51008:	sub	r0, r0, r3
   5100c:	clz	r0, r0
   51010:	lsr	r0, r0, #5
   51014:	cmp	r0, #0
   51018:	beq	50fdc <luaL_error@@Base+0xaef0>
   5101c:	ldrh	r2, [r5, #-6]
   51020:	ldr	r1, [r8, #16]
   51024:	mov	r3, sl
   51028:	str	r2, [sp, #4]
   5102c:	ldr	r2, [sp, #8]
   51030:	mov	r0, r4
   51034:	str	r2, [sp]
   51038:	ldr	r2, [sp, #12]
   5103c:	bl	2b3f8 <luaL_where@@Base+0xb2f4>
   51040:	cmp	r0, #0
   51044:	beq	517f0 <luaL_error@@Base+0xb704>
   51048:	cmp	r7, r5
   5104c:	bls	51468 <luaL_error@@Base+0xb37c>
   51050:	ldrb	r3, [r5, #5]
   51054:	cmp	r3, #16
   51058:	bne	50fe4 <luaL_error@@Base+0xaef8>
   5105c:	ldrh	r2, [r5, #2]
   51060:	ldr	r1, [r8, #16]
   51064:	mov	r3, sl
   51068:	str	r2, [sp, #4]
   5106c:	ldr	r2, [sp, #8]
   51070:	mov	r0, r4
   51074:	str	r2, [sp]
   51078:	ldr	r2, [sp, #12]
   5107c:	bl	2b3f8 <luaL_where@@Base+0xb2f4>
   51080:	b	50fe4 <luaL_error@@Base+0xaef8>
   51084:	mov	r3, #0
   51088:	str	r3, [r4, #184]	; 0xb8
   5108c:	ldr	r2, [r4, #108]	; 0x6c
   51090:	ldr	r3, [sp, #24]
   51094:	mov	r0, r4
   51098:	add	r3, r3, r2, lsl #2
   5109c:	str	r3, [r4, #96]	; 0x60
   510a0:	ldr	r3, [sp, #16]
   510a4:	ldrb	r3, [r3, #4]
   510a8:	sub	r3, r3, r2
   510ac:	str	r3, [r4, #104]	; 0x68
   510b0:	bl	2e158 <luaL_where@@Base+0xe054>
   510b4:	ldrh	r1, [r4, #68]	; 0x44
   510b8:	ldr	r2, [r4, #272]	; 0x110
   510bc:	ldr	r3, [r4, #1520]	; 0x5f0
   510c0:	ldr	r2, [r2, r1, lsl #2]
   510c4:	ldrh	r2, [r2, #60]	; 0x3c
   510c8:	cmp	r2, r3
   510cc:	bge	510f4 <luaL_error@@Base+0xb008>
   510d0:	ldr	r1, [r4, #2308]	; 0x904
   510d4:	ldr	r2, [r8, #28]
   510d8:	ldr	r3, [r4, #1536]	; 0x600
   510dc:	add	r2, r2, r1, lsl #3
   510e0:	ldr	r1, [r4, #1540]	; 0x604
   510e4:	ldrb	r2, [r2, #7]
   510e8:	add	r3, r3, r1
   510ec:	cmp	r2, r3
   510f0:	blt	51104 <luaL_error@@Base+0xb018>
   510f4:	mov	r2, #0
   510f8:	mov	r1, #6
   510fc:	mov	r0, r4
   51100:	bl	2e444 <luaL_where@@Base+0xe340>
   51104:	mov	r2, #0
   51108:	mvn	r3, #0
   5110c:	str	r2, [r4, #2352]	; 0x930
   51110:	str	r3, [r4, #2356]	; 0x934
   51114:	add	sp, sp, #60	; 0x3c
   51118:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5111c:	ldr	r3, [sp, #28]
   51120:	ldr	r9, [sp, #32]
   51124:	cmp	r3, #0
   51128:	beq	5108c <luaL_error@@Base+0xafa0>
   5112c:	str	sl, [sp, #28]
   51130:	mov	sl, fp
   51134:	b	51140 <luaL_error@@Base+0xb054>
   51138:	cmp	sl, r9
   5113c:	beq	51408 <luaL_error@@Base+0xb31c>
   51140:	ldr	r5, [r9], #4
   51144:	ldr	r1, [r8, #16]
   51148:	uxth	r7, r5
   5114c:	lsl	r3, r7, #3
   51150:	add	r6, r1, r3
   51154:	ldrb	r2, [r6, #6]
   51158:	cmp	r2, #253	; 0xfd
   5115c:	bne	51138 <luaL_error@@Base+0xb04c>
   51160:	lsr	r5, r5, #24
   51164:	add	r0, r4, r5, lsl #2
   51168:	ldr	r2, [r0, #488]	; 0x1e8
   5116c:	cmp	r5, r2
   51170:	beq	51344 <luaL_error@@Base+0xb258>
   51174:	add	r2, r4, r2, lsl #2
   51178:	ldr	r3, [r2, #488]	; 0x1e8
   5117c:	str	r3, [r0, #488]	; 0x1e8
   51180:	b	51138 <luaL_error@@Base+0xb04c>
   51184:	ldr	r1, [r2]
   51188:	strh	r3, [r4, #68]	; 0x44
   5118c:	str	r1, [r4, #44]	; 0x2c
   51190:	ldr	r3, [r2]
   51194:	lsr	r0, r3, #8
   51198:	uxtb	r1, r3
   5119c:	sub	r1, r1, #65	; 0x41
   511a0:	uxtb	r0, r0
   511a4:	cmp	r1, #24
   511a8:	ldrls	pc, [pc, r1, lsl #2]
   511ac:	b	5123c <luaL_error@@Base+0xb150>
   511b0:	andeq	r1, r5, r4, ror r4
   511b4:	andeq	r1, r5, r4, ror r4
   511b8:	andeq	r1, r5, ip, lsr r2
   511bc:	andeq	r1, r5, ip, lsr r2
   511c0:	andeq	r1, r5, r4, ror r4
   511c4:	andeq	r1, r5, ip, lsr r2
   511c8:	andeq	r1, r5, ip, lsr r2
   511cc:	andeq	r1, r5, ip, lsr r2
   511d0:	andeq	r1, r5, ip, lsr r2
   511d4:	andeq	r1, r5, r0, ror #9
   511d8:	andeq	r1, r5, r0, ror #9
   511dc:	andeq	r1, r5, r0, ror #9
   511e0:	andeq	r1, r5, ip, lsr r2
   511e4:	andeq	r1, r5, ip, lsr r2
   511e8:	andeq	r1, r5, r0, asr #9
   511ec:	andeq	r1, r5, ip, lsr r2
   511f0:	andeq	r1, r5, ip, lsr r2
   511f4:	muleq	r5, r0, r4
   511f8:	andeq	r1, r5, ip, lsr r2
   511fc:	andeq	r1, r5, ip, lsr r2
   51200:	andeq	r1, r5, r4, lsl r2
   51204:	andeq	r1, r5, ip, lsr r2
   51208:	andeq	r1, r5, ip, lsr r2
   5120c:	andeq	r1, r5, ip, lsr r2
   51210:	andeq	r1, r5, ip, ror r4
   51214:	lsr	r3, r3, #16
   51218:	add	r3, r3, #1069547520	; 0x3fc00000
   5121c:	add	r3, r3, #4161536	; 0x3f8000
   51220:	ldr	r1, [r2, r3, lsl #2]
   51224:	add	r3, r2, r3, lsl #2
   51228:	uxtb	ip, r1
   5122c:	cmp	ip, #88	; 0x58
   51230:	beq	518b0 <luaL_error@@Base+0xb7c4>
   51234:	add	r2, r2, #4
   51238:	str	r0, [r4, #104]	; 0x68
   5123c:	str	r2, [r4, #84]	; 0x54
   51240:	mov	r0, r4
   51244:	bl	2e158 <luaL_where@@Base+0xe054>
   51248:	ldrb	r3, [r4, #44]	; 0x2c
   5124c:	cmp	r3, #79	; 0x4f
   51250:	beq	51798 <luaL_error@@Base+0xb6ac>
   51254:	cmp	r3, #69	; 0x45
   51258:	moveq	r3, #0
   5125c:	streq	r3, [r4, #2300]	; 0x8fc
   51260:	ldr	r3, [r4, #92]	; 0x5c
   51264:	ldrb	r3, [r3, #7]
   51268:	cmp	r3, #248	; 0xf8
   5126c:	bls	51104 <luaL_error@@Base+0xb018>
   51270:	add	r1, r4, #2336	; 0x920
   51274:	add	r1, r1, #12
   51278:	ldr	r0, [r4, #80]	; 0x50
   5127c:	mov	r2, #3
   51280:	bl	210d0 <luaL_where@@Base+0xfcc>
   51284:	ldr	r1, [pc, #1912]	; 51a04 <luaL_error@@Base+0xb918>
   51288:	mov	r0, r6
   5128c:	bl	507a0 <luaL_error@@Base+0xa6b4>
   51290:	subs	r8, r0, #0
   51294:	beq	50bd4 <luaL_error@@Base+0xaae8>
   51298:	ldr	r9, [r6, #20]
   5129c:	mov	r2, #5
   512a0:	add	r3, r9, #8
   512a4:	str	r3, [r6, #20]
   512a8:	ldr	r1, [pc, #1880]	; 51a08 <luaL_error@@Base+0xb91c>
   512ac:	mov	r0, r6
   512b0:	bl	20260 <luaL_where@@Base+0x15c>
   512b4:	ldr	r2, [r4, #92]	; 0x5c
   512b8:	ldr	r1, [r4, #84]	; 0x54
   512bc:	add	r2, r2, #64	; 0x40
   512c0:	sub	r2, r1, r2
   512c4:	ldr	r3, [r6, #20]
   512c8:	asr	r2, r2, #2
   512cc:	ldr	ip, [r4, #2304]	; 0x900
   512d0:	str	r2, [sp, #8]
   512d4:	ldr	fp, [r4, #88]	; 0x58
   512d8:	mvn	r2, #4
   512dc:	str	r2, [r9, #4]
   512e0:	mvn	sl, #8
   512e4:	mvn	r2, #13
   512e8:	add	lr, r3, #24
   512ec:	cmp	ip, #0
   512f0:	str	r0, [r9]
   512f4:	ldr	r0, [sp, #8]
   512f8:	str	r5, [r3]
   512fc:	str	fp, [r3, #8]
   51300:	str	sl, [r3, #12]
   51304:	str	r2, [r3, #4]
   51308:	str	lr, [r6, #20]
   5130c:	str	r0, [r3, #16]
   51310:	str	r2, [r3, #20]
   51314:	beq	517b8 <luaL_error@@Base+0xb6cc>
   51318:	ldr	r1, [r4, #2308]	; 0x904
   5131c:	add	r0, r3, #40	; 0x28
   51320:	str	ip, [r3, #24]
   51324:	str	r2, [r3, #28]
   51328:	str	r0, [r6, #20]
   5132c:	str	r1, [r3, #32]
   51330:	str	r2, [r3, #36]	; 0x24
   51334:	mov	r1, r8
   51338:	mov	r0, r6
   5133c:	bl	1aaf8 <_start@@Base+0x7748>
   51340:	b	50bd4 <luaL_error@@Base+0xaae8>
   51344:	ldrh	fp, [r1, r3]
   51348:	ldr	r3, [r8, #20]
   5134c:	cmp	fp, r3
   51350:	bcs	51734 <luaL_error@@Base+0xb648>
   51354:	ldrh	r0, [r6, #2]
   51358:	cmp	r0, r3
   5135c:	bcs	51710 <luaL_error@@Base+0xb624>
   51360:	ldrb	r3, [r6, #5]
   51364:	uxth	r2, fp
   51368:	str	r2, [sp, #20]
   5136c:	cmp	r3, #83	; 0x53
   51370:	uxth	fp, r0
   51374:	bne	51534 <luaL_error@@Base+0xb448>
   51378:	ldr	r3, [r8, #8]
   5137c:	add	r7, r7, #1
   51380:	cmp	r7, r3
   51384:	bcs	513dc <luaL_error@@Base+0xb2f0>
   51388:	ldrb	r3, [r6, #13]
   5138c:	cmp	r3, #16
   51390:	bne	513dc <luaL_error@@Base+0xb2f0>
   51394:	mov	r3, #1
   51398:	strb	r3, [r4, #268]	; 0x10c
   5139c:	ldrh	r2, [r6, #10]
   513a0:	ldr	r1, [r8, #16]
   513a4:	ldr	r3, [sp, #28]
   513a8:	str	r2, [sp, #4]
   513ac:	ldr	r2, [sp, #8]
   513b0:	mov	r0, r4
   513b4:	str	r2, [sp]
   513b8:	ldr	r2, [sp, #12]
   513bc:	bl	2b3f8 <luaL_where@@Base+0xb2f4>
   513c0:	ldr	r3, [pc, #1604]	; 51a0c <luaL_error@@Base+0xb920>
   513c4:	strh	fp, [r4, #120]	; 0x78
   513c8:	strh	r3, [r4, #124]	; 0x7c
   513cc:	strh	r0, [r4, #122]	; 0x7a
   513d0:	mov	r0, r4
   513d4:	bl	25258 <luaL_where@@Base+0x5154>
   513d8:	uxth	fp, r0
   513dc:	ldrh	r3, [r6, #4]
   513e0:	ldrh	r2, [sp, #20]
   513e4:	strh	fp, [r4, #122]	; 0x7a
   513e8:	bic	r3, r3, #96	; 0x60
   513ec:	strh	r2, [r4, #120]	; 0x78
   513f0:	strh	r3, [r4, #124]	; 0x7c
   513f4:	mov	r0, r4
   513f8:	bl	27498 <luaL_where@@Base+0x7394>
   513fc:	add	r5, r4, r5, lsl #2
   51400:	str	r0, [r5, #488]	; 0x1e8
   51404:	b	51138 <luaL_error@@Base+0xb04c>
   51408:	ldr	r2, [r4, #108]	; 0x6c
   5140c:	ldr	r3, [sp, #24]
   51410:	mov	r0, r4
   51414:	add	r3, r3, r2, lsl #2
   51418:	str	r3, [r4, #96]	; 0x60
   5141c:	ldr	r3, [sp, #16]
   51420:	ldrb	r3, [r3, #4]
   51424:	sub	r3, r3, r2
   51428:	str	r3, [r4, #104]	; 0x68
   5142c:	bl	2e158 <luaL_where@@Base+0xe054>
   51430:	mov	r2, #0
   51434:	mov	r3, #3968	; 0xf80
   51438:	str	r2, [r4, #120]	; 0x78
   5143c:	strh	r3, [r4, #124]	; 0x7c
   51440:	mov	r0, r4
   51444:	bl	25258 <luaL_where@@Base+0x5154>
   51448:	b	510b4 <luaL_error@@Base+0xafc8>
   5144c:	ldr	r3, [r8, #8]
   51450:	add	r7, r7, #1
   51454:	cmp	r7, r3
   51458:	bcs	51468 <luaL_error@@Base+0xb37c>
   5145c:	ldrb	r3, [r6, #13]
   51460:	cmp	r3, #16
   51464:	beq	518dc <luaL_error@@Base+0xb7f0>
   51468:	ldr	r3, [sp, #20]
   5146c:	str	r3, [sp, #28]
   51470:	b	50f68 <luaL_error@@Base+0xae7c>
   51474:	add	r2, r2, #4
   51478:	b	5123c <luaL_error@@Base+0xb150>
   5147c:	ldr	r3, [r4, #92]	; 0x5c
   51480:	add	r2, r2, #4
   51484:	ldrb	r3, [r3, #6]
   51488:	str	r3, [r4, #104]	; 0x68
   5148c:	b	5123c <luaL_error@@Base+0xb150>
   51490:	lsr	r3, r3, #16
   51494:	ldrb	r1, [r2, #-1]
   51498:	sub	ip, r3, #32512	; 0x7f00
   5149c:	sub	ip, ip, #255	; 0xff
   514a0:	rsb	r3, r3, #32768	; 0x8000
   514a4:	sub	r1, r1, #1
   514a8:	lsl	r3, r3, #2
   514ac:	add	r2, r2, ip, lsl #2
   514b0:	add	r0, r1, r0
   514b4:	strd	r2, [r4, #160]	; 0xa0
   514b8:	str	r0, [r4, #104]	; 0x68
   514bc:	b	5123c <luaL_error@@Base+0xb150>
   514c0:	lsr	r3, r3, #16
   514c4:	sub	r1, r3, #32512	; 0x7f00
   514c8:	sub	r1, r1, #255	; 0xff
   514cc:	rsb	r3, r3, #32768	; 0x8000
   514d0:	add	r2, r2, r1, lsl #2
   514d4:	lsl	r3, r3, #2
   514d8:	strd	r2, [r4, #160]	; 0xa0
   514dc:	b	5123c <luaL_error@@Base+0xb150>
   514e0:	lsr	r3, r3, #16
   514e4:	sub	r3, r3, #1
   514e8:	add	r3, r3, r0
   514ec:	str	r3, [r4, #104]	; 0x68
   514f0:	b	5123c <luaL_error@@Base+0xb150>
   514f4:	ldrh	r3, [r6]
   514f8:	ldr	r2, [sp, #8]
   514fc:	mov	r0, r4
   51500:	strd	r2, [sp]
   51504:	mov	r3, sl
   51508:	ldr	r2, [sp, #12]
   5150c:	bl	2b3f8 <luaL_where@@Base+0xb2f4>
   51510:	lsr	r3, r5, #24
   51514:	add	r3, r4, r3, lsl #2
   51518:	str	r0, [r3, #488]	; 0x1e8
   5151c:	b	50f68 <luaL_error@@Base+0xae7c>
   51520:	mov	r0, r6
   51524:	bl	508b8 <luaL_error@@Base+0xa7cc>
   51528:	mov	r3, #0
   5152c:	str	r3, [r4, #168]	; 0xa8
   51530:	b	51114 <luaL_error@@Base+0xb028>
   51534:	ldrh	r3, [r6, #4]
   51538:	ldrh	r2, [sp, #20]
   5153c:	strh	fp, [r4, #122]	; 0x7a
   51540:	strh	r3, [r4, #124]	; 0x7c
   51544:	strh	r2, [r4, #120]	; 0x78
   51548:	mov	r0, r4
   5154c:	bl	27498 <luaL_where@@Base+0x7394>
   51550:	ldr	r2, [sp, #36]	; 0x24
   51554:	add	r3, r4, r5, lsl #2
   51558:	add	r5, r6, #8
   5155c:	cmp	r2, r5
   51560:	str	r0, [sp, #20]
   51564:	str	r0, [r3, #488]	; 0x1e8
   51568:	bls	51138 <luaL_error@@Base+0xb04c>
   5156c:	str	r9, [sp, #48]	; 0x30
   51570:	str	sl, [sp, #32]
   51574:	mov	r9, r2
   51578:	b	51598 <luaL_error@@Base+0xb4ac>
   5157c:	ldrb	r3, [r5, #5]
   51580:	add	r7, r5, #8
   51584:	cmp	r3, #89	; 0x59
   51588:	beq	516a0 <luaL_error@@Base+0xb5b4>
   5158c:	cmp	r9, r7
   51590:	bls	51774 <luaL_error@@Base+0xb688>
   51594:	mov	r5, r7
   51598:	ldrb	r3, [r5, #6]
   5159c:	cmp	r3, #254	; 0xfe
   515a0:	bne	5157c <luaL_error@@Base+0xb490>
   515a4:	ldrb	r3, [r5, #7]
   515a8:	cmp	r3, #255	; 0xff
   515ac:	beq	51780 <luaL_error@@Base+0xb694>
   515b0:	add	r3, r6, r3, lsl #3
   515b4:	sub	r0, r5, r3
   515b8:	clz	r0, r0
   515bc:	lsr	r0, r0, #5
   515c0:	cmp	r0, #0
   515c4:	beq	5157c <luaL_error@@Base+0xb490>
   515c8:	ldrh	sl, [r5]
   515cc:	ldr	fp, [r8, #16]
   515d0:	ldrh	r3, [sp, #20]
   515d4:	lsl	sl, sl, #3
   515d8:	add	r7, fp, sl
   515dc:	ldrb	r1, [r7, #5]
   515e0:	ldrh	r2, [r7, #2]
   515e4:	cmp	r1, #63	; 0x3f
   515e8:	beq	51624 <luaL_error@@Base+0xb538>
   515ec:	lsl	r0, r2, #3
   515f0:	cmp	r1, #58	; 0x3a
   515f4:	add	r2, fp, r0
   515f8:	beq	51878 <luaL_error@@Base+0xb78c>
   515fc:	mov	r1, r2
   51600:	mov	r0, r4
   51604:	str	r3, [sp, #40]	; 0x28
   51608:	bl	2b36c <luaL_where@@Base+0xb268>
   5160c:	ldr	r3, [sp, #40]	; 0x28
   51610:	mov	r2, r0
   51614:	ldrb	r1, [r7, #5]
   51618:	sub	r1, r1, #57	; 0x39
   5161c:	cmp	r1, #1
   51620:	bls	51904 <luaL_error@@Base+0xb818>
   51624:	ldrh	r1, [r7, #4]
   51628:	mov	r0, r4
   5162c:	strh	r3, [r4, #120]	; 0x78
   51630:	strh	r1, [r4, #124]	; 0x7c
   51634:	strh	r2, [r4, #122]	; 0x7a
   51638:	bl	27498 <luaL_where@@Base+0x7394>
   5163c:	ldrh	r2, [r5, #2]
   51640:	ldr	r1, [r8, #16]
   51644:	ldr	r3, [sp, #28]
   51648:	str	r2, [sp, #4]
   5164c:	ldr	r2, [sp, #8]
   51650:	add	r7, r5, #8
   51654:	str	r2, [sp]
   51658:	ldr	r2, [sp, #12]
   5165c:	mov	fp, r0
   51660:	mov	r0, r4
   51664:	bl	2b3f8 <luaL_where@@Base+0xb2f4>
   51668:	subs	sl, r0, #0
   5166c:	beq	51824 <luaL_error@@Base+0xb738>
   51670:	cmp	r9, r7
   51674:	bls	51684 <luaL_error@@Base+0xb598>
   51678:	ldrb	r3, [r5, #13]
   5167c:	cmp	r3, #16
   51680:	beq	5193c <luaL_error@@Base+0xb850>
   51684:	ldrh	r3, [r5, #4]
   51688:	mov	r0, r4
   5168c:	strh	fp, [r4, #120]	; 0x78
   51690:	strh	sl, [r4, #122]	; 0x7a
   51694:	strh	r3, [r4, #124]	; 0x7c
   51698:	bl	27498 <luaL_where@@Base+0x7394>
   5169c:	b	5158c <luaL_error@@Base+0xb4a0>
   516a0:	ldrb	r3, [r6, #5]
   516a4:	cmp	r3, #82	; 0x52
   516a8:	bne	5158c <luaL_error@@Base+0xb4a0>
   516ac:	mov	r3, #22784	; 0x5900
   516b0:	mov	r2, #0
   516b4:	str	r2, [r4, #120]	; 0x78
   516b8:	strh	r3, [r4, #124]	; 0x7c
   516bc:	mov	r0, r4
   516c0:	bl	27498 <luaL_where@@Base+0x7394>
   516c4:	b	5158c <luaL_error@@Base+0xb4a0>
   516c8:	ldr	r3, [sp, #8]
   516cc:	str	r2, [sp, #4]
   516d0:	str	r3, [sp]
   516d4:	ldr	r2, [sp, #12]
   516d8:	mov	r3, sl
   516dc:	mov	r0, r4
   516e0:	bl	2b3f8 <luaL_where@@Base+0xb2f4>
   516e4:	ldr	r3, [r8, #20]
   516e8:	b	50fb0 <luaL_error@@Base+0xaec4>
   516ec:	ldr	r1, [r8, #16]
   516f0:	str	r2, [sp, #4]
   516f4:	ldr	r2, [sp, #8]
   516f8:	mov	r3, sl
   516fc:	str	r2, [sp]
   51700:	mov	r0, r4
   51704:	ldr	r2, [sp, #12]
   51708:	bl	2b3f8 <luaL_where@@Base+0xb2f4>
   5170c:	b	50fbc <luaL_error@@Base+0xaed0>
   51710:	ldr	r2, [sp, #8]
   51714:	ldr	r1, [r8, #16]
   51718:	ldr	r3, [sp, #28]
   5171c:	str	r0, [sp, #4]
   51720:	str	r2, [sp]
   51724:	mov	r0, r4
   51728:	ldr	r2, [sp, #12]
   5172c:	bl	2b3f8 <luaL_where@@Base+0xb2f4>
   51730:	b	51360 <luaL_error@@Base+0xb274>
   51734:	ldr	r3, [sp, #8]
   51738:	str	fp, [sp, #4]
   5173c:	str	r3, [sp]
   51740:	ldr	r2, [sp, #12]
   51744:	ldr	r3, [sp, #28]
   51748:	mov	r0, r4
   5174c:	bl	2b3f8 <luaL_where@@Base+0xb2f4>
   51750:	ldr	r3, [r8, #20]
   51754:	mov	fp, r0
   51758:	b	51354 <luaL_error@@Base+0xb268>
   5175c:	ldrb	r3, [r5, #-3]
   51760:	ldrh	r2, [r5, #-8]
   51764:	mov	r1, r6
   51768:	ldr	r0, [sp, #48]	; 0x30
   5176c:	bl	1c8cc <_start@@Base+0x951c>
   51770:	b	51014 <luaL_error@@Base+0xaf28>
   51774:	ldr	sl, [sp, #32]
   51778:	ldr	r9, [sp, #48]	; 0x30
   5177c:	b	51138 <luaL_error@@Base+0xb04c>
   51780:	ldrb	r3, [r5, #5]
   51784:	ldrh	r2, [r5]
   51788:	mov	r1, r6
   5178c:	add	r0, r8, #16
   51790:	bl	1c8cc <_start@@Base+0x951c>
   51794:	b	515c0 <luaL_error@@Base+0xb4d4>
   51798:	ldr	r1, [r4, #84]	; 0x54
   5179c:	add	r2, r4, #2272	; 0x8e0
   517a0:	sub	r1, r1, #4
   517a4:	add	r2, r2, #12
   517a8:	mov	r3, #1
   517ac:	mov	r0, r4
   517b0:	bl	2a160 <luaL_where@@Base+0xa05c>
   517b4:	b	51260 <luaL_error@@Base+0xb174>
   517b8:	ldrb	r1, [r1]
   517bc:	sub	r0, r1, #65	; 0x41
   517c0:	cmp	r1, #69	; 0x45
   517c4:	cmpne	r0, #1
   517c8:	bhi	51334 <luaL_error@@Base+0xb248>
   517cc:	ldr	r1, [r4, #2308]	; 0x904
   517d0:	add	r0, r3, #40	; 0x28
   517d4:	str	r1, [r3, #24]
   517d8:	mvn	r1, #0
   517dc:	str	r2, [r3, #28]
   517e0:	str	r0, [r6, #20]
   517e4:	str	r2, [r3, #36]	; 0x24
   517e8:	str	r1, [r3, #32]
   517ec:	b	51334 <luaL_error@@Base+0xb248>
   517f0:	ldrh	r0, [r5, #-6]
   517f4:	ldr	ip, [r8, #16]
   517f8:	mov	r3, sl
   517fc:	mov	r1, ip
   51800:	lsl	r0, r0, #3
   51804:	ldr	r2, [sp, #12]
   51808:	ldrh	ip, [ip, r0]
   5180c:	ldr	r0, [sp, #8]
   51810:	str	ip, [sp, #4]
   51814:	str	r0, [sp]
   51818:	mov	r0, r4
   5181c:	bl	2b3f8 <luaL_where@@Base+0xb2f4>
   51820:	b	50fdc <luaL_error@@Base+0xaef0>
   51824:	ldrh	r0, [r5, #2]
   51828:	ldr	ip, [r8, #16]
   5182c:	ldr	r3, [sp, #28]
   51830:	mov	r1, ip
   51834:	lsl	r0, r0, #3
   51838:	ldr	r2, [sp, #12]
   5183c:	ldrh	ip, [ip, r0]
   51840:	ldr	r0, [sp, #8]
   51844:	str	ip, [sp, #4]
   51848:	str	r0, [sp]
   5184c:	mov	r0, r4
   51850:	bl	2b3f8 <luaL_where@@Base+0xb2f4>
   51854:	ldr	r3, [pc, #436]	; 51a10 <luaL_error@@Base+0xb924>
   51858:	strh	r3, [r4, #124]	; 0x7c
   5185c:	ldr	r3, [pc, #432]	; 51a14 <luaL_error@@Base+0xb928>
   51860:	strh	r3, [r4, #122]	; 0x7a
   51864:	strh	r0, [r4, #120]	; 0x78
   51868:	mov	r0, r4
   5186c:	bl	27498 <luaL_where@@Base+0x7394>
   51870:	mov	sl, r0
   51874:	b	51684 <luaL_error@@Base+0xb598>
   51878:	ldrh	r1, [fp, r0]
   5187c:	mov	r0, r4
   51880:	str	r3, [sp, #52]	; 0x34
   51884:	str	r2, [sp, #40]	; 0x28
   51888:	add	r1, fp, r1, lsl #3
   5188c:	bl	2b36c <luaL_where@@Base+0xb268>
   51890:	ldr	r2, [sp, #40]	; 0x28
   51894:	ldrh	r2, [r2, #2]
   51898:	mov	r1, r0
   5189c:	mov	r0, r4
   518a0:	bl	2c2e8 <luaL_where@@Base+0xc1e4>
   518a4:	ldr	r3, [sp, #52]	; 0x34
   518a8:	mov	r2, r0
   518ac:	b	51614 <luaL_error@@Base+0xb528>
   518b0:	lsr	r1, r1, #16
   518b4:	cmp	r1, #32768	; 0x8000
   518b8:	bcs	51234 <luaL_error@@Base+0xb148>
   518bc:	ldr	lr, [pc, #340]	; 51a18 <luaL_error@@Base+0xb92c>
   518c0:	rsb	ip, r1, #32768	; 0x8000
   518c4:	add	lr, r1, lr
   518c8:	lsl	r1, ip, #2
   518cc:	add	r3, r3, lr, lsl #2
   518d0:	str	r3, [r4, #160]	; 0xa0
   518d4:	str	r1, [r4, #164]	; 0xa4
   518d8:	b	51234 <luaL_error@@Base+0xb148>
   518dc:	ldrh	r2, [r6, #10]
   518e0:	ldr	r1, [r8, #16]
   518e4:	mov	r3, sl
   518e8:	str	r2, [sp, #4]
   518ec:	ldr	r2, [sp, #8]
   518f0:	mov	r0, r4
   518f4:	str	r2, [sp]
   518f8:	ldr	r2, [sp, #12]
   518fc:	bl	2b3f8 <luaL_where@@Base+0xb2f4>
   51900:	b	51468 <luaL_error@@Base+0xb37c>
   51904:	ldrh	ip, [fp, sl]
   51908:	ldr	r1, [r8, #16]
   5190c:	mov	r0, r4
   51910:	str	r2, [sp, #40]	; 0x28
   51914:	add	r1, r1, ip, lsl #3
   51918:	ldrh	ip, [r1, #4]
   5191c:	ldrh	r1, [r1, #2]
   51920:	strh	r3, [r4, #120]	; 0x78
   51924:	strh	ip, [r4, #124]	; 0x7c
   51928:	strh	r1, [r4, #122]	; 0x7a
   5192c:	bl	27498 <luaL_where@@Base+0x7394>
   51930:	ldr	r2, [sp, #40]	; 0x28
   51934:	uxth	r3, r0
   51938:	b	51624 <luaL_error@@Base+0xb538>
   5193c:	mov	r3, #1
   51940:	strb	r3, [r4, #268]	; 0x10c
   51944:	ldrh	lr, [r5, #2]
   51948:	ldrh	r0, [r5, #10]
   5194c:	tst	lr, #32768	; 0x8000
   51950:	bne	5195c <luaL_error@@Base+0xb870>
   51954:	tst	r0, #32768	; 0x8000
   51958:	beq	519b8 <luaL_error@@Base+0xb8cc>
   5195c:	ldr	r2, [sp, #8]
   51960:	ldr	r1, [r8, #16]
   51964:	ldr	r3, [sp, #28]
   51968:	str	r0, [sp, #4]
   5196c:	str	r2, [sp]
   51970:	mov	r0, r4
   51974:	ldr	r2, [sp, #12]
   51978:	bl	2b3f8 <luaL_where@@Base+0xb2f4>
   5197c:	ldr	r3, [pc, #136]	; 51a0c <luaL_error@@Base+0xb920>
   51980:	strh	sl, [r4, #120]	; 0x78
   51984:	strh	r3, [r4, #124]	; 0x7c
   51988:	strh	r0, [r4, #122]	; 0x7a
   5198c:	mov	r0, r4
   51990:	bl	25258 <luaL_where@@Base+0x5154>
   51994:	ldrb	r3, [r5, #5]
   51998:	strh	r0, [r4, #122]	; 0x7a
   5199c:	strh	fp, [r4, #120]	; 0x78
   519a0:	mov	r0, r4
   519a4:	lsl	r3, r3, #8
   519a8:	orr	r3, r3, #21
   519ac:	strh	r3, [r4, #124]	; 0x7c
   519b0:	bl	27498 <luaL_where@@Base+0x7394>
   519b4:	b	51594 <luaL_error@@Base+0xb4a8>
   519b8:	ldr	ip, [r8, #16]
   519bc:	mov	r1, #29
   519c0:	ldr	r3, [ip, r0, lsl #3]
   519c4:	ldr	r0, [ip, lr, lsl #3]
   519c8:	str	r3, [sp, #44]	; 0x2c
   519cc:	mov	r3, #0
   519d0:	str	r3, [sp, #40]	; 0x28
   519d4:	ldrd	r2, [sp, #40]	; 0x28
   519d8:	adds	r2, r2, r0
   519dc:	adc	r3, r3, #0
   519e0:	mov	r0, r4
   519e4:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   519e8:	b	51994 <luaL_error@@Base+0xb8a8>
   519ec:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   519f0:	andeq	r0, r0, r5, lsl #26
   519f4:	andeq	r1, r0, r1, lsl #12
   519f8:	andeq	r1, r0, r2, lsl #12
   519fc:	strdeq	r7, [r0], -sp
   51a00:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   51a04:			; <UNDEFINED> instruction: 0x96c8a339
   51a08:	strdeq	lr, [r6], -ip
   51a0c:	andeq	r1, r0, r5, lsl r0
   51a10:	andeq	r5, r0, lr, lsl #20
   51a14:	ldrdeq	r0, [r0], -r3
   51a18:	svccc	0x00ff8001
   51a1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   51a20:	sub	sp, sp, #36	; 0x24
   51a24:	ldr	r7, [r0]
   51a28:	ldr	r3, [r0, #4]
   51a2c:	mov	r8, r0
   51a30:	str	r3, [sp]
   51a34:	ldr	r5, [r7, #20]
   51a38:	ldr	r2, [r7, #24]
   51a3c:	ldr	r3, [r7, #48]	; 0x30
   51a40:	cmp	r5, r2
   51a44:	sub	r3, r1, r3
   51a48:	str	r3, [sp, #4]
   51a4c:	bls	51a94 <luaL_error@@Base+0xb9a8>
   51a50:	ldr	r3, [r7, #52]	; 0x34
   51a54:	sub	r2, r5, #-536870911	; 0xe0000001
   51a58:	ldrb	r3, [r3, r2, lsl #3]
   51a5c:	sub	r3, r3, #67	; 0x43
   51a60:	cmp	r3, #9
   51a64:	ldrls	pc, [pc, r3, lsl #2]
   51a68:	b	51a94 <luaL_error@@Base+0xb9a8>
   51a6c:			; <UNDEFINED> instruction: 0x00051ab0
   51a70:			; <UNDEFINED> instruction: 0x00051ab0
   51a74:	muleq	r5, r4, sl
   51a78:	muleq	r5, r4, sl
   51a7c:	muleq	r5, r4, sl
   51a80:	muleq	r5, r4, sl
   51a84:			; <UNDEFINED> instruction: 0x00051ab0
   51a88:			; <UNDEFINED> instruction: 0x00051ab0
   51a8c:			; <UNDEFINED> instruction: 0x00051ab0
   51a90:			; <UNDEFINED> instruction: 0x00051ab0
   51a94:	ldr	r3, [r7, #12]
   51a98:	ldrb	r3, [r3, #9]
   51a9c:	tst	r3, #8
   51aa0:	bne	52144 <luaL_error@@Base+0xc058>
   51aa4:	ldr	r1, [pc, #1920]	; 5222c <luaL_error@@Base+0xc140>
   51aa8:	mov	r0, r7
   51aac:	bl	4f23c <luaL_error@@Base+0x9150>
   51ab0:	ldr	r2, [r7, #12]
   51ab4:	mov	r0, r7
   51ab8:	ldrb	r3, [r2, #9]
   51abc:	orr	r3, r3, #16
   51ac0:	strb	r3, [r2, #9]
   51ac4:	bl	50694 <luaL_error@@Base+0xa5a8>
   51ac8:	ldrb	r3, [r7, #64]	; 0x40
   51acc:	tst	r3, #64	; 0x40
   51ad0:	beq	51bb8 <luaL_error@@Base+0xbacc>
   51ad4:	cmp	r5, #1
   51ad8:	bls	51bb8 <luaL_error@@Base+0xbacc>
   51adc:	ldr	r2, [r7, #52]	; 0x34
   51ae0:	ldr	sl, [pc, #1864]	; 52230 <luaL_error@@Base+0xc144>
   51ae4:	ldr	r9, [pc, #1864]	; 52234 <luaL_error@@Base+0xc148>
   51ae8:	mov	r4, #1
   51aec:	ldr	r1, [r2, r4, lsl #3]
   51af0:	lsl	r6, r4, #3
   51af4:	uxtb	r3, r1
   51af8:	sub	r3, r3, #50	; 0x32
   51afc:	cmp	r3, #26
   51b00:	ldrls	pc, [pc, r3, lsl #2]
   51b04:	b	51bac <luaL_error@@Base+0xbac0>
   51b08:			; <UNDEFINED> instruction: 0x00051bb8
   51b0c:	andeq	r1, r5, ip, lsr #23
   51b10:	andeq	r1, r5, ip, lsr #23
   51b14:	andeq	r1, r5, ip, lsr #23
   51b18:	andeq	r1, r5, ip, lsr #23
   51b1c:	andeq	r1, r5, ip, lsr #23
   51b20:	andeq	r1, r5, ip, lsr #23
   51b24:	andeq	r1, r5, ip, lsr #23
   51b28:	andeq	r1, r5, ip, lsr #23
   51b2c:	andeq	r1, r5, ip, lsr #23
   51b30:	andeq	r1, r5, ip, lsr #23
   51b34:	andeq	r1, r5, ip, lsr #23
   51b38:	andeq	r1, r5, ip, lsr #23
   51b3c:	andeq	r1, r5, ip, lsr #23
   51b40:	andeq	r1, r5, ip, lsr #23
   51b44:	andeq	r1, r5, ip, lsr #23
   51b48:	andeq	r1, r5, ip, lsr #23
   51b4c:	andeq	r1, r5, r4, ror fp
   51b50:	andeq	r1, r5, r4, ror fp
   51b54:	andeq	r1, r5, ip, lsr #23
   51b58:	andeq	r1, r5, ip, lsr #23
   51b5c:	andeq	r1, r5, ip, lsr #23
   51b60:	andeq	r1, r5, ip, lsr #23
   51b64:	andeq	r1, r5, r4, ror fp
   51b68:	andeq	r1, r5, r4, ror fp
   51b6c:	andeq	r1, r5, r4, ror fp
   51b70:	andeq	r1, r5, r4, ror fp
   51b74:	mov	r0, r7
   51b78:	bl	4f23c <luaL_error@@Base+0x9150>
   51b7c:	ldr	r2, [r7, #52]	; 0x34
   51b80:	sub	r3, sl, r4
   51b84:	add	ip, r2, r6
   51b88:	ldr	ip, [ip, #4]
   51b8c:	add	r1, r2, r0, lsl #3
   51b90:	add	r0, r3, r0
   51b94:	cmp	r0, r9
   51b98:	str	ip, [r1, #4]
   51b9c:	bhi	52220 <luaL_error@@Base+0xc134>
   51ba0:	lsl	r0, r0, #16
   51ba4:	orr	r0, r0, #50	; 0x32
   51ba8:	str	r0, [r2, r6]
   51bac:	add	r4, r4, #1
   51bb0:	cmp	r5, r4
   51bb4:	bne	51aec <luaL_error@@Base+0xba00>
   51bb8:	ldr	r3, [r7, #20]
   51bbc:	ldr	r9, [r7, #44]	; 0x2c
   51bc0:	ldrb	sl, [r7, #67]	; 0x43
   51bc4:	add	r9, r3, r9
   51bc8:	ldr	r0, [r7, #40]	; 0x28
   51bcc:	lsl	r9, r9, #2
   51bd0:	add	r9, r9, #71	; 0x47
   51bd4:	add	r2, sl, #1
   51bd8:	bic	r9, r9, #7
   51bdc:	bic	r2, r2, #1
   51be0:	ldr	ip, [sp, #4]
   51be4:	add	r1, r9, r0, lsl #3
   51be8:	cmp	ip, #255	; 0xff
   51bec:	sub	r0, r3, #1
   51bf0:	add	r3, r1, r2, lsl #1
   51bf4:	str	r1, [sp, #20]
   51bf8:	str	r3, [sp, #8]
   51bfc:	ble	51c0c <luaL_error@@Base+0xbb20>
   51c00:	cmp	ip, #65536	; 0x10000
   51c04:	lslge	r0, r0, #2
   51c08:	lsllt	r0, r0, #1
   51c0c:	ldr	r2, [sp, #8]
   51c10:	ldr	r3, [r8, #52]	; 0x34
   51c14:	add	r2, r2, r0
   51c18:	str	r2, [sp, #12]
   51c1c:	cmp	sl, #0
   51c20:	add	r2, r8, #44	; 0x2c
   51c24:	str	r3, [r8, #44]	; 0x2c
   51c28:	ldr	r6, [r8, #88]	; 0x58
   51c2c:	str	r2, [sp, #24]
   51c30:	str	sl, [sp, #16]
   51c34:	beq	51c90 <luaL_error@@Base+0xbba4>
   51c38:	add	fp, r7, #464	; 0x1d0
   51c3c:	add	fp, fp, #2
   51c40:	add	sl, fp, sl, lsl #1
   51c44:	ldrh	r1, [fp, #2]!
   51c48:	ldr	r2, [r8, #48]	; 0x30
   51c4c:	sub	r2, r2, r3
   51c50:	ldr	r5, [r6, r1, lsl #4]
   51c54:	ldr	r4, [r5, #12]
   51c58:	add	r4, r4, #1
   51c5c:	cmp	r4, r2
   51c60:	bhi	520f4 <luaL_error@@Base+0xc008>
   51c64:	mov	r0, r3
   51c68:	add	r1, r5, #16
   51c6c:	mov	r2, r4
   51c70:	bl	12cb8 <memcpy@plt>
   51c74:	cmp	sl, fp
   51c78:	add	r3, r0, r4
   51c7c:	str	r3, [r8, #44]	; 0x2c
   51c80:	bne	51c44 <luaL_error@@Base+0xbb58>
   51c84:	ldr	r2, [r8, #52]	; 0x34
   51c88:	sub	r2, r3, r2
   51c8c:	str	r2, [sp, #16]
   51c90:	ldr	fp, [r8, #96]	; 0x60
   51c94:	ldr	r2, [r7, #60]	; 0x3c
   51c98:	ldr	r1, [r8, #48]	; 0x30
   51c9c:	add	fp, r6, fp, lsl #4
   51ca0:	add	r6, r6, r2, lsl #4
   51ca4:	cmp	fp, r6
   51ca8:	bls	51d64 <luaL_error@@Base+0xbc78>
   51cac:	mov	r5, #0
   51cb0:	mvn	sl, #127	; 0x7f
   51cb4:	mov	r0, r3
   51cb8:	b	51cc8 <luaL_error@@Base+0xbbdc>
   51cbc:	add	r6, r6, #16
   51cc0:	cmp	fp, r6
   51cc4:	bls	51d60 <luaL_error@@Base+0xbc74>
   51cc8:	ldrb	r3, [r6, #13]
   51ccc:	tst	r3, #6
   51cd0:	bne	51cbc <luaL_error@@Base+0xbbd0>
   51cd4:	ldr	r2, [r6]
   51cd8:	sub	r1, r1, r0
   51cdc:	cmp	r2, #6
   51ce0:	bhi	520b8 <luaL_error@@Base+0xbfcc>
   51ce4:	cmp	r1, #10
   51ce8:	bls	521b8 <luaL_error@@Base+0xc0cc>
   51cec:	strb	r2, [r0]
   51cf0:	add	r0, r0, #1
   51cf4:	ldr	r2, [r6, #4]
   51cf8:	sub	r5, r2, r5
   51cfc:	cmp	r5, #127	; 0x7f
   51d00:	bls	51d18 <luaL_error@@Base+0xbc2c>
   51d04:	orr	r3, sl, r5
   51d08:	lsr	r5, r5, #7
   51d0c:	cmp	r5, #127	; 0x7f
   51d10:	strb	r3, [r0], #1
   51d14:	bhi	51d04 <luaL_error@@Base+0xbc18>
   51d18:	strb	r5, [r0]
   51d1c:	ldr	r3, [r6, #8]
   51d20:	add	r0, r0, #1
   51d24:	sub	r3, r3, r2
   51d28:	cmp	r3, #127	; 0x7f
   51d2c:	bls	51d44 <luaL_error@@Base+0xbc58>
   51d30:	orr	r1, sl, r3
   51d34:	lsr	r3, r3, #7
   51d38:	cmp	r3, #127	; 0x7f
   51d3c:	strb	r1, [r0], #1
   51d40:	bhi	51d30 <luaL_error@@Base+0xbc44>
   51d44:	add	r6, r6, #16
   51d48:	cmp	fp, r6
   51d4c:	strb	r3, [r0], #1
   51d50:	mov	r5, r2
   51d54:	ldr	r1, [r8, #48]	; 0x30
   51d58:	str	r0, [r8, #44]	; 0x2c
   51d5c:	bhi	51cc8 <luaL_error@@Base+0xbbdc>
   51d60:	mov	r3, r0
   51d64:	cmp	r3, r1
   51d68:	beq	52154 <luaL_error@@Base+0xc068>
   51d6c:	mov	r6, #0
   51d70:	strb	r6, [r3]
   51d74:	ldr	r5, [r8, #52]	; 0x34
   51d78:	add	r3, r3, #1
   51d7c:	ldr	r2, [sp, #12]
   51d80:	sub	r5, r3, r5
   51d84:	add	r5, r5, r2
   51d88:	str	r3, [r8, #44]	; 0x2c
   51d8c:	mov	r1, r5
   51d90:	ldr	r0, [sp]
   51d94:	bl	32a24 <luaL_where@@Base+0x12920>
   51d98:	mov	r3, #7
   51d9c:	strb	r3, [r0, #5]
   51da0:	str	r5, [r0, #32]
   51da4:	strh	r6, [r0, #38]	; 0x26
   51da8:	ldrb	r3, [r7, #64]	; 0x40
   51dac:	mov	r4, r0
   51db0:	bic	r3, r3, #96	; 0x60
   51db4:	strb	r3, [r0, #37]	; 0x25
   51db8:	ldrb	r3, [r7, #65]	; 0x41
   51dbc:	strb	r3, [r0, #6]
   51dc0:	ldrb	r3, [r7, #66]	; 0x42
   51dc4:	strb	r3, [r0, #7]
   51dc8:	ldr	r3, [r7, #44]	; 0x2c
   51dcc:	ldr	r2, [r8, #76]	; 0x4c
   51dd0:	add	r3, r3, #1
   51dd4:	str	r2, [r0, #40]	; 0x28
   51dd8:	sub	r3, r9, r3, lsl #2
   51ddc:	ldr	r2, [r7, #52]	; 0x34
   51de0:	str	r6, [r0, r3]
   51de4:	ldrb	r3, [r7, #64]	; 0x40
   51de8:	ldrb	r0, [r7, #66]	; 0x42
   51dec:	ldr	r1, [r7, #20]
   51df0:	tst	r3, #2
   51df4:	moveq	r3, #89	; 0x59
   51df8:	movne	r3, #92	; 0x5c
   51dfc:	orr	r3, r3, r0, lsl #8
   51e00:	cmp	r1, #1
   51e04:	str	r3, [r4, #64]	; 0x40
   51e08:	str	r1, [r4, #8]
   51e0c:	bls	51e2c <luaL_error@@Base+0xbd40>
   51e10:	add	r1, r4, r1, lsl #2
   51e14:	add	r1, r1, #60	; 0x3c
   51e18:	add	r3, r4, #64	; 0x40
   51e1c:	ldr	r0, [r2, #8]!
   51e20:	str	r0, [r3, #4]!
   51e24:	cmp	r1, r3
   51e28:	bne	51e1c <luaL_error@@Base+0xbd30>
   51e2c:	ldr	r2, [r7, #40]	; 0x28
   51e30:	add	r9, r4, r9
   51e34:	cmp	r2, #65536	; 0x10000
   51e38:	bhi	5220c <luaL_error@@Base+0xc120>
   51e3c:	ldr	r3, [r7, #44]	; 0x2c
   51e40:	cmp	r3, #65536	; 0x10000
   51e44:	bhi	5220c <luaL_error@@Base+0xc120>
   51e48:	ldr	lr, [r7]
   51e4c:	str	r9, [r4, #16]
   51e50:	str	r2, [r4, #28]
   51e54:	ldr	r0, [lr, #24]
   51e58:	str	r3, [r4, #24]
   51e5c:	cmp	r0, #0
   51e60:	ldr	r3, [lr, #8]
   51e64:	beq	51e98 <luaL_error@@Base+0xbdac>
   51e68:	mov	r2, #0
   51e6c:	mvn	r5, #13
   51e70:	ldr	r1, [r3, #4]
   51e74:	add	r3, r3, #8
   51e78:	cmp	r1, #0
   51e7c:	ldreq	r1, [r3, #-8]
   51e80:	addeq	ip, r9, r1, lsl #3
   51e84:	streq	r2, [r9, r1, lsl #3]
   51e88:	add	r2, r2, #1
   51e8c:	streq	r5, [ip, #4]
   51e90:	cmp	r2, r0
   51e94:	bne	51e70 <luaL_error@@Base+0xbd84>
   51e98:	ldr	sl, [lr, #28]
   51e9c:	ldr	r5, [lr, #20]
   51ea0:	ldr	r3, [pc, #912]	; 52238 <luaL_error@@Base+0xc14c>
   51ea4:	add	sl, sl, sl, lsl #1
   51ea8:	add	r6, r5, #24
   51eac:	add	sl, r6, sl, lsl #3
   51eb0:	b	51ef4 <luaL_error@@Base+0xbe08>
   51eb4:	vldr	d7, [r5, #8]
   51eb8:	lsl	ip, r2, #3
   51ebc:	add	r1, r9, ip
   51ec0:	vcvt.s32.f64	s13, d7
   51ec4:	vcvt.f64.s32	d5, s13
   51ec8:	vcmp.f64	d7, d5
   51ecc:	vmrs	APSR_nzcv, fpscr
   51ed0:	bne	520e8 <luaL_error@@Base+0xbffc>
   51ed4:	vmov	ip, s13
   51ed8:	mvn	r0, #13
   51edc:	str	ip, [r9, r2, lsl #3]
   51ee0:	str	r0, [r1, #4]
   51ee4:	cmp	sl, r6
   51ee8:	mov	r5, r6
   51eec:	beq	51fdc <luaL_error@@Base+0xbef0>
   51ef0:	add	r6, r6, #24
   51ef4:	ldr	r2, [r5, #4]
   51ef8:	cmp	r2, #0
   51efc:	bne	51ee4 <luaL_error@@Base+0xbdf8>
   51f00:	ldr	r1, [r5, #12]
   51f04:	ldr	r2, [r5]
   51f08:	cmn	r1, #15
   51f0c:	bls	51eb4 <luaL_error@@Base+0xbdc8>
   51f10:	ldr	fp, [r5, #8]
   51f14:	mvn	r2, r2
   51f18:	str	fp, [r9, r2, lsl #2]
   51f1c:	ldrb	r2, [fp, #4]
   51f20:	tst	r2, #3
   51f24:	beq	51f60 <luaL_error@@Base+0xbe74>
   51f28:	ldrb	r2, [r4, #4]
   51f2c:	tst	r2, #4
   51f30:	beq	51f60 <luaL_error@@Base+0xbe74>
   51f34:	ldr	r1, [r7, #8]
   51f38:	ldr	r0, [r1, #8]
   51f3c:	ldrb	r1, [r0, #29]
   51f40:	sub	r1, r1, #1
   51f44:	cmp	r1, #1
   51f48:	bls	521d0 <luaL_error@@Base+0xc0e4>
   51f4c:	ldrb	r1, [r0, #28]
   51f50:	bic	r2, r2, #7
   51f54:	and	r1, r1, #3
   51f58:	orr	r2, r1, r2
   51f5c:	strb	r2, [r4, #4]
   51f60:	ldr	r2, [r5, #12]
   51f64:	cmn	r2, #8
   51f68:	bne	51ee4 <luaL_error@@Base+0xbdf8>
   51f6c:	ldrb	r0, [fp, #36]	; 0x24
   51f70:	ldr	r2, [r7, #4]
   51f74:	ldr	r1, [fp, #20]
   51f78:	cmp	r0, #0
   51f7c:	ldr	ip, [r2, #88]	; 0x58
   51f80:	beq	51ee4 <luaL_error@@Base+0xbdf8>
   51f84:	mov	r2, #2
   51f88:	smlabb	r0, r2, r0, r1
   51f8c:	ldrh	r2, [r1]
   51f90:	cmp	r2, r3
   51f94:	addhi	r2, r2, #60	; 0x3c
   51f98:	strhhi	r2, [r1]
   51f9c:	bhi	51fc4 <luaL_error@@Base+0xbed8>
   51fa0:	add	r2, ip, r2, lsl #4
   51fa4:	ldrb	lr, [r2, #13]
   51fa8:	ldrb	r2, [r2, #12]
   51fac:	tst	lr, #1
   51fb0:	mvnne	r2, r2, lsl #17
   51fb4:	mvneq	r2, r2, lsl #18
   51fb8:	mvnne	r2, r2, lsr #17
   51fbc:	mvneq	r2, r2, lsr #18
   51fc0:	strh	r2, [r1]
   51fc4:	add	r1, r1, #2
   51fc8:	cmp	r0, r1
   51fcc:	bne	51f8c <luaL_error@@Base+0xbea0>
   51fd0:	cmp	sl, r6
   51fd4:	mov	r5, r6
   51fd8:	bne	51ef0 <luaL_error@@Base+0xbe04>
   51fdc:	ldr	r3, [sp, #20]
   51fe0:	add	r1, r7, #588	; 0x24c
   51fe4:	add	r0, r4, r3
   51fe8:	str	r0, [r4, #20]
   51fec:	ldrb	r2, [r7, #67]	; 0x43
   51ff0:	strb	r2, [r4, #36]	; 0x24
   51ff4:	lsl	r2, r2, #1
   51ff8:	bl	12cb8 <memcpy@plt>
   51ffc:	ldr	r3, [sp, #8]
   52000:	ldr	r0, [r7, #20]
   52004:	add	lr, r4, r3
   52008:	ldr	r3, [sp, #4]
   5200c:	ldr	r1, [r7, #48]	; 0x30
   52010:	cmp	r3, #255	; 0xff
   52014:	ldr	r2, [r7, #52]	; 0x34
   52018:	sub	r0, r0, #1
   5201c:	str	lr, [r4, #52]	; 0x34
   52020:	str	r1, [r4, #44]	; 0x2c
   52024:	str	r3, [r4, #48]	; 0x30
   52028:	bgt	52168 <luaL_error@@Base+0xc07c>
   5202c:	sub	lr, lr, #1
   52030:	mov	ip, #0
   52034:	ldr	r3, [r2, #12]
   52038:	add	ip, ip, #1
   5203c:	sub	r3, r3, r1
   52040:	cmp	r0, ip
   52044:	strb	r3, [lr, #1]!
   52048:	add	r2, r2, #8
   5204c:	bhi	52034 <luaL_error@@Base+0xbf48>
   52050:	ldr	r3, [sp, #12]
   52054:	ldr	r2, [r8, #44]	; 0x2c
   52058:	add	r0, r4, r3
   5205c:	ldr	r3, [sp, #16]
   52060:	ldr	r1, [r8, #52]	; 0x34
   52064:	add	r3, r0, r3
   52068:	str	r3, [r4, #60]	; 0x3c
   5206c:	str	r0, [r4, #56]	; 0x38
   52070:	sub	r2, r2, r1
   52074:	bl	12cb8 <memcpy@plt>
   52078:	ldr	r3, [sp]
   5207c:	ldr	r3, [r3, #8]
   52080:	ldrb	r3, [r3, #115]	; 0x73
   52084:	tst	r3, #1
   52088:	bne	52108 <luaL_error@@Base+0xc01c>
   5208c:	ldr	ip, [sp]
   52090:	ldr	r1, [r7, #60]	; 0x3c
   52094:	ldr	r2, [r7, #16]
   52098:	ldr	r3, [ip, #20]
   5209c:	mov	r0, r4
   520a0:	sub	r3, r3, #8
   520a4:	str	r3, [ip, #20]
   520a8:	str	r1, [r8, #96]	; 0x60
   520ac:	str	r2, [r8]
   520b0:	add	sp, sp, #36	; 0x24
   520b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   520b8:	ldr	r4, [r2, #12]
   520bc:	add	r3, r4, #11
   520c0:	cmp	r3, r1
   520c4:	add	r4, r4, #1
   520c8:	movls	r3, r0
   520cc:	bhi	5219c <luaL_error@@Base+0xc0b0>
   520d0:	add	r1, r2, #16
   520d4:	mov	r0, r3
   520d8:	mov	r2, r4
   520dc:	bl	12cb8 <memcpy@plt>
   520e0:	add	r0, r0, r4
   520e4:	b	51cf4 <luaL_error@@Base+0xbc08>
   520e8:	ldrd	r0, [r5, #8]
   520ec:	strd	r0, [r9, ip]
   520f0:	b	51ee4 <luaL_error@@Base+0xbdf8>
   520f4:	mov	r1, r4
   520f8:	ldr	r0, [sp, #24]
   520fc:	bl	2ff68 <luaL_where@@Base+0xfe64>
   52100:	mov	r3, r0
   52104:	b	51c64 <luaL_error@@Base+0xbb78>
   52108:	ldr	r1, [pc, #300]	; 5223c <luaL_error@@Base+0xc150>
   5210c:	ldr	r0, [sp]
   52110:	bl	507a0 <luaL_error@@Base+0xa6b4>
   52114:	subs	r1, r0, #0
   52118:	beq	5208c <luaL_error@@Base+0xbfa0>
   5211c:	ldr	ip, [sp]
   52120:	mvn	r2, #7
   52124:	ldr	r3, [ip, #20]
   52128:	add	r0, r3, #8
   5212c:	str	r0, [ip, #20]
   52130:	str	r4, [r3]
   52134:	str	r2, [r3, #4]
   52138:	mov	r0, ip
   5213c:	bl	1aaf8 <_start@@Base+0x7748>
   52140:	b	5208c <luaL_error@@Base+0xbfa0>
   52144:	mov	r1, #-2147483598	; 0x80000032
   52148:	mov	r0, r7
   5214c:	bl	4f23c <luaL_error@@Base+0x9150>
   52150:	b	51aa4 <luaL_error@@Base+0xb9b8>
   52154:	ldr	r0, [sp, #24]
   52158:	mov	r1, #1
   5215c:	bl	2ff68 <luaL_where@@Base+0xfe64>
   52160:	mov	r3, r0
   52164:	b	51d6c <luaL_error@@Base+0xbc80>
   52168:	ldr	r3, [sp, #4]
   5216c:	cmp	r3, #65536	; 0x10000
   52170:	bge	521e4 <luaL_error@@Base+0xc0f8>
   52174:	sub	lr, lr, #2
   52178:	mov	ip, #0
   5217c:	ldr	r3, [r2, #12]
   52180:	add	ip, ip, #1
   52184:	sub	r3, r3, r1
   52188:	cmp	r0, ip
   5218c:	strh	r3, [lr, #2]!
   52190:	add	r2, r2, #8
   52194:	bhi	5217c <luaL_error@@Base+0xc090>
   52198:	b	52050 <luaL_error@@Base+0xbf64>
   5219c:	mov	r1, r3
   521a0:	ldr	r0, [sp, #24]
   521a4:	str	r2, [sp, #28]
   521a8:	bl	2ff68 <luaL_where@@Base+0xfe64>
   521ac:	ldr	r2, [sp, #28]
   521b0:	mov	r3, r0
   521b4:	b	520d0 <luaL_error@@Base+0xbfe4>
   521b8:	mov	r1, #11
   521bc:	ldr	r0, [sp, #24]
   521c0:	str	r2, [sp, #28]
   521c4:	bl	2ff68 <luaL_where@@Base+0xfe64>
   521c8:	ldr	r2, [sp, #28]
   521cc:	b	51cec <luaL_error@@Base+0xbc00>
   521d0:	mov	r1, fp
   521d4:	str	r3, [sp, #24]
   521d8:	bl	17498 <_start@@Base+0x40e8>
   521dc:	ldr	r3, [sp, #24]
   521e0:	b	51f60 <luaL_error@@Base+0xbe74>
   521e4:	sub	lr, lr, #4
   521e8:	mov	ip, #0
   521ec:	ldr	r3, [r2, #12]
   521f0:	add	ip, ip, #1
   521f4:	sub	r3, r3, r1
   521f8:	cmp	r0, ip
   521fc:	str	r3, [lr, #4]!
   52200:	add	r2, r2, #8
   52204:	bhi	521ec <luaL_error@@Base+0xc100>
   52208:	b	52050 <luaL_error@@Base+0xbf64>
   5220c:	ldr	r3, [pc, #44]	; 52240 <luaL_error@@Base+0xc154>
   52210:	mov	r2, #65536	; 0x10000
   52214:	ldr	r1, [r7, #48]	; 0x30
   52218:	ldr	r0, [r7, #4]
   5221c:	bl	132a0 <pclose@plt+0x204>
   52220:	ldr	r0, [r7, #4]
   52224:	ldr	r1, [pc, #24]	; 52244 <luaL_error@@Base+0xc158>
   52228:	bl	4f034 <luaL_error@@Base+0x8f48>
   5222c:	andeq	r0, r1, fp, asr #32
   52230:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   52234:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   52238:	andeq	pc, r0, r3, asr #31
   5223c:	andeq	ip, r1, r8, lsl r4
   52240:	andeq	r2, r7, r0, asr #30
   52244:	andeq	r0, r0, pc, lsl #20

00052248 <lua_getlocal@@Base>:
   52248:	push	{r4, lr}
   5224c:	sub	sp, sp, #8
   52250:	mov	lr, #0
   52254:	subs	ip, r1, #0
   52258:	str	lr, [sp, #4]
   5225c:	mov	r4, r0
   52260:	beq	522ac <lua_getlocal@@Base+0x64>
   52264:	mov	r3, r2
   52268:	ldr	r1, [ip, #96]	; 0x60
   5226c:	add	r2, sp, #4
   52270:	bl	1d8ec <_start@@Base+0xa53c>
   52274:	mov	r3, r0
   52278:	ldr	r0, [sp, #4]
   5227c:	cmp	r0, #0
   52280:	beq	522a4 <lua_getlocal@@Base+0x5c>
   52284:	ldr	ip, [r4, #20]
   52288:	ldrd	r2, [r3]
   5228c:	ldr	lr, [r4, #24]
   52290:	add	r1, ip, #8
   52294:	cmp	r1, lr
   52298:	strd	r2, [ip]
   5229c:	str	r1, [r4, #20]
   522a0:	bcs	522c8 <lua_getlocal@@Base+0x80>
   522a4:	add	sp, sp, #8
   522a8:	pop	{r4, pc}
   522ac:	ldr	r3, [r0, #20]
   522b0:	ldr	r0, [r3, #-4]
   522b4:	cmn	r0, #9
   522b8:	beq	522e0 <lua_getlocal@@Base+0x98>
   522bc:	mov	r0, ip
   522c0:	add	sp, sp, #8
   522c4:	pop	{r4, pc}
   522c8:	mov	r0, r4
   522cc:	mov	r1, #1
   522d0:	bl	1fd08 <lua_getstack@@Base+0x50>
   522d4:	ldr	r0, [sp, #4]
   522d8:	add	sp, sp, #8
   522dc:	pop	{r4, pc}
   522e0:	ldr	r3, [r3, #-8]
   522e4:	ldrb	r0, [r3, #6]
   522e8:	cmp	r0, #0
   522ec:	bne	522bc <lua_getlocal@@Base+0x74>
   522f0:	ldr	r3, [r3, #16]
   522f4:	sub	r2, r2, #1
   522f8:	ldr	r0, [r3, #-4]
   522fc:	bl	1d474 <_start@@Base+0xa0c4>
   52300:	b	522a4 <lua_getlocal@@Base+0x5c>
   52304:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   52308:	mov	r5, r1
   5230c:	ldrb	r1, [r1]
   52310:	sub	sp, sp, #20
   52314:	mov	r7, r0
   52318:	cmp	r1, #62	; 0x3e
   5231c:	mov	r4, r2
   52320:	str	r3, [sp]
   52324:	beq	52568 <lua_getlocal@@Base+0x320>
   52328:	ldr	r3, [r2, #96]	; 0x60
   5232c:	ldr	r2, [r0, #28]
   52330:	uxth	r0, r3
   52334:	lsrs	r3, r3, #16
   52338:	ldr	r6, [r2, r0, lsl #3]
   5233c:	add	sl, r2, r0, lsl #3
   52340:	addne	r3, sl, r3, lsl #3
   52344:	str	r3, [sp, #12]
   52348:	cmp	r1, #0
   5234c:	beq	5243c <lua_getlocal@@Base+0x1f4>
   52350:	mov	r9, #0
   52354:	ldr	fp, [pc, #832]	; 5269c <lua_getlocal@@Base+0x454>
   52358:	str	r9, [sp, #8]
   5235c:	b	52398 <lua_getlocal@@Base+0x150>
   52360:	cmp	r1, #108	; 0x6c
   52364:	beq	5244c <lua_getlocal@@Base+0x204>
   52368:	cmp	r1, #117	; 0x75
   5236c:	beq	52470 <lua_getlocal@@Base+0x228>
   52370:	cmp	r1, #110	; 0x6e
   52374:	beq	52514 <lua_getlocal@@Base+0x2cc>
   52378:	cmp	r1, #102	; 0x66
   5237c:	beq	5254c <lua_getlocal@@Base+0x304>
   52380:	cmp	r1, #76	; 0x4c
   52384:	bne	5267c <lua_getlocal@@Base+0x434>
   52388:	mov	r9, #1
   5238c:	ldrb	r1, [r5, #1]!
   52390:	cmp	r1, #0
   52394:	beq	523d8 <lua_getlocal@@Base+0x190>
   52398:	cmp	r1, #83	; 0x53
   5239c:	bne	52360 <lua_getlocal@@Base+0x118>
   523a0:	ldrb	r3, [r6, #6]
   523a4:	cmp	r3, #0
   523a8:	beq	524b4 <lua_getlocal@@Base+0x26c>
   523ac:	ldr	r2, [pc, #748]	; 526a0 <lua_getlocal@@Base+0x458>
   523b0:	mvn	r3, #0
   523b4:	str	r2, [r4, #36]	; 0x24
   523b8:	ldr	r2, [pc, #740]	; 526a4 <lua_getlocal@@Base+0x45c>
   523bc:	str	fp, [r4, #16]
   523c0:	str	r2, [r4, #12]
   523c4:	str	r3, [r4, #28]
   523c8:	str	r3, [r4, #32]
   523cc:	ldrb	r1, [r5, #1]!
   523d0:	cmp	r1, #0
   523d4:	bne	52398 <lua_getlocal@@Base+0x150>
   523d8:	ldr	r3, [sp, #8]
   523dc:	cmp	r3, #0
   523e0:	beq	52408 <lua_getlocal@@Base+0x1c0>
   523e4:	ldr	r3, [r7, #20]
   523e8:	ldr	r2, [r7, #24]
   523ec:	mvn	r1, #8
   523f0:	str	r6, [r3]
   523f4:	str	r1, [r3, #4]
   523f8:	add	r3, r3, #8
   523fc:	cmp	r3, r2
   52400:	str	r3, [r7, #20]
   52404:	bcs	525a4 <lua_getlocal@@Base+0x35c>
   52408:	cmp	r9, #0
   5240c:	beq	5243c <lua_getlocal@@Base+0x1f4>
   52410:	ldrb	r2, [r6, #6]
   52414:	cmp	r2, #0
   52418:	beq	525bc <lua_getlocal@@Base+0x374>
   5241c:	ldr	r3, [r7, #20]
   52420:	mvn	r2, #0
   52424:	str	r2, [r3, #4]
   52428:	ldr	r2, [r7, #24]
   5242c:	add	r3, r3, #8
   52430:	cmp	r3, r2
   52434:	str	r3, [r7, #20]
   52438:	bcs	5258c <lua_getlocal@@Base+0x344>
   5243c:	mov	r9, #1
   52440:	mov	r0, r9
   52444:	add	sp, sp, #20
   52448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5244c:	cmp	sl, #0
   52450:	mvneq	r0, #0
   52454:	beq	52468 <lua_getlocal@@Base+0x220>
   52458:	ldr	r2, [sp, #12]
   5245c:	mov	r1, r6
   52460:	mov	r0, r7
   52464:	bl	1b214 <_start@@Base+0x7e64>
   52468:	str	r0, [r4, #20]
   5246c:	b	5238c <lua_getlocal@@Base+0x144>
   52470:	ldrb	r3, [r6, #7]
   52474:	ldr	r2, [sp]
   52478:	cmp	r2, #0
   5247c:	str	r3, [r4, #24]
   52480:	beq	5238c <lua_getlocal@@Base+0x144>
   52484:	ldrb	r3, [r6, #6]
   52488:	cmp	r3, #0
   5248c:	bne	52558 <lua_getlocal@@Base+0x310>
   52490:	ldr	r3, [r6, #16]
   52494:	sub	r3, r3, #64	; 0x40
   52498:	ldrb	r2, [r3, #6]
   5249c:	str	r2, [r4, #100]	; 0x64
   524a0:	ldrb	r3, [r3, #37]	; 0x25
   524a4:	lsr	r3, r3, #1
   524a8:	and	r3, r3, #1
   524ac:	str	r3, [r4, #104]	; 0x68
   524b0:	b	5238c <lua_getlocal@@Base+0x144>
   524b4:	ldr	r8, [r6, #16]
   524b8:	add	r0, r4, #36	; 0x24
   524bc:	ldr	r1, [r8, #-24]	; 0xffffffe8
   524c0:	ldr	r3, [r8, #-20]	; 0xffffffec
   524c4:	add	r2, r1, #16
   524c8:	str	r2, [r4, #16]
   524cc:	mov	r2, r3
   524d0:	str	r3, [sp, #4]
   524d4:	bl	17ebc <_start@@Base+0x4b0c>
   524d8:	ldr	r3, [sp, #4]
   524dc:	ldr	r1, [r8, #-16]
   524e0:	adds	r2, r3, #0
   524e4:	movne	r2, #1
   524e8:	cmp	r1, #0
   524ec:	moveq	r2, #1
   524f0:	ldr	ip, [pc, #432]	; 526a8 <lua_getlocal@@Base+0x460>
   524f4:	ldr	r0, [pc, #432]	; 526ac <lua_getlocal@@Base+0x464>
   524f8:	cmp	r2, #0
   524fc:	movne	r0, ip
   52500:	add	r1, r1, r3
   52504:	str	r3, [r4, #28]
   52508:	str	r0, [r4, #12]
   5250c:	str	r1, [r4, #32]
   52510:	b	5238c <lua_getlocal@@Base+0x144>
   52514:	cmp	sl, #0
   52518:	beq	52538 <lua_getlocal@@Base+0x2f0>
   5251c:	add	r2, r4, #4
   52520:	mov	r1, sl
   52524:	mov	r0, r7
   52528:	bl	1d7f0 <_start@@Base+0xa440>
   5252c:	cmp	r0, #0
   52530:	str	r0, [r4, #8]
   52534:	bne	5238c <lua_getlocal@@Base+0x144>
   52538:	ldr	r2, [pc, #368]	; 526b0 <lua_getlocal@@Base+0x468>
   5253c:	mov	r3, #0
   52540:	str	r2, [r4, #8]
   52544:	str	r3, [r4, #4]
   52548:	b	5238c <lua_getlocal@@Base+0x144>
   5254c:	mov	r3, #1
   52550:	str	r3, [sp, #8]
   52554:	b	5238c <lua_getlocal@@Base+0x144>
   52558:	mov	r2, #0
   5255c:	mov	r3, #1
   52560:	strd	r2, [r4, #100]	; 0x64
   52564:	b	5238c <lua_getlocal@@Base+0x144>
   52568:	ldr	r3, [r0, #20]
   5256c:	mov	r2, #0
   52570:	str	r2, [sp, #12]
   52574:	ldr	r6, [r3, #-8]!
   52578:	mov	sl, r2
   5257c:	str	r3, [r0, #20]
   52580:	add	r5, r5, #1
   52584:	ldrb	r1, [r5]
   52588:	b	52348 <lua_getlocal@@Base+0x100>
   5258c:	mov	r0, r7
   52590:	mov	r1, #1
   52594:	bl	1fd08 <lua_getstack@@Base+0x50>
   52598:	mov	r0, r9
   5259c:	add	sp, sp, #20
   525a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   525a4:	mov	r1, #1
   525a8:	mov	r0, r7
   525ac:	bl	1fd08 <lua_getstack@@Base+0x50>
   525b0:	cmp	r9, #0
   525b4:	bne	52410 <lua_getlocal@@Base+0x1c8>
   525b8:	b	5243c <lua_getlocal@@Base+0x1f4>
   525bc:	mov	r1, r2
   525c0:	mov	r0, r7
   525c4:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   525c8:	ldr	r3, [r6, #16]
   525cc:	sub	r3, r3, #64	; 0x40
   525d0:	ldr	r8, [r3, #52]	; 0x34
   525d4:	cmp	r8, #0
   525d8:	mov	r5, r0
   525dc:	beq	52668 <lua_getlocal@@Base+0x420>
   525e0:	ldr	r2, [r3, #48]	; 0x30
   525e4:	ldr	fp, [r3, #44]	; 0x2c
   525e8:	cmp	r2, #255	; 0xff
   525ec:	movle	r6, r9
   525f0:	bgt	5268c <lua_getlocal@@Base+0x444>
   525f4:	ldr	sl, [r3, #8]
   525f8:	subs	sl, sl, #1
   525fc:	beq	52668 <lua_getlocal@@Base+0x420>
   52600:	mov	r4, #0
   52604:	mvn	r3, #2
   52608:	b	52624 <lua_getlocal@@Base+0x3dc>
   5260c:	ldr	r0, [r5, #8]
   52610:	add	r0, r0, r2, lsl #3
   52614:	add	r4, r4, #1
   52618:	cmp	sl, r4
   5261c:	str	r3, [r0, #4]
   52620:	beq	52668 <lua_getlocal@@Base+0x420>
   52624:	cmp	r6, #1
   52628:	ldrbeq	r2, [r8, r4]
   5262c:	beq	52640 <lua_getlocal@@Base+0x3f8>
   52630:	cmp	r6, #2
   52634:	lsleq	r2, r4, #1
   52638:	ldrne	r2, [r8, r4, lsl #2]
   5263c:	ldrheq	r2, [r2, r8]
   52640:	ldr	r1, [r5, #24]
   52644:	add	r2, r2, fp
   52648:	cmp	r1, r2
   5264c:	bhi	5260c <lua_getlocal@@Base+0x3c4>
   52650:	mov	r1, r5
   52654:	mov	r0, r7
   52658:	str	r3, [sp]
   5265c:	bl	3e200 <luaL_typerror@@Base+0x7e94>
   52660:	ldr	r3, [sp]
   52664:	b	52614 <lua_getlocal@@Base+0x3cc>
   52668:	ldr	r3, [r7, #20]
   5266c:	mvn	r2, #11
   52670:	str	r5, [r3]
   52674:	str	r2, [r3, #4]
   52678:	b	52428 <lua_getlocal@@Base+0x1e0>
   5267c:	mov	r9, #0
   52680:	mov	r0, r9
   52684:	add	sp, sp, #20
   52688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5268c:	cmp	r2, #65536	; 0x10000
   52690:	movge	r6, #4
   52694:	movlt	r6, #2
   52698:	b	525f4 <lua_getlocal@@Base+0x3ac>
   5269c:	andeq	r2, r7, r8, asr pc
   526a0:	subseq	r4, sp, fp, asr r3
   526a4:	andeq	r2, r7, r0, ror #30
   526a8:	andeq	r2, r7, ip, asr #30
   526ac:	andeq	r2, r7, r0, asr pc
   526b0:	andeq	lr, r6, r0, ror #24

000526b4 <lua_getinfo@@Base>:
   526b4:	mov	r3, #0
   526b8:	b	52304 <lua_getlocal@@Base+0xbc>
   526bc:	push	{r4, r5, r6, lr}
   526c0:	mov	r4, r1
   526c4:	ldr	r5, [r0, #4]
   526c8:	ldr	ip, [r0]
   526cc:	ldr	r1, [r0, #96]	; 0x60
   526d0:	mov	r2, #0
   526d4:	mvn	r3, #0
   526d8:	mov	r6, #1
   526dc:	str	ip, [r4, #16]
   526e0:	str	r4, [r0]
   526e4:	str	r0, [r4, #4]
   526e8:	str	r1, [r4, #60]	; 0x3c
   526ec:	str	r3, [r4, #28]
   526f0:	mov	r1, r2
   526f4:	str	r2, [r4, #20]
   526f8:	str	r2, [r4, #24]
   526fc:	str	r2, [r4, #32]
   52700:	str	r2, [r4, #44]	; 0x2c
   52704:	str	r2, [r4, #40]	; 0x28
   52708:	str	r2, [r4, #36]	; 0x24
   5270c:	str	r2, [r4, #12]
   52710:	strb	r2, [r4, #64]	; 0x40
   52714:	str	r5, [r4, #8]
   52718:	mov	r0, r5
   5271c:	strh	r6, [r4, #66]	; 0x42
   52720:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   52724:	ldr	r3, [r5, #20]
   52728:	ldr	r1, [r5, #24]
   5272c:	add	r2, r3, #8
   52730:	cmp	r2, r1
   52734:	mvn	r1, #11
   52738:	str	r0, [r4]
   5273c:	strd	r0, [r3]
   52740:	str	r2, [r5, #20]
   52744:	popcc	{r4, r5, r6, pc}
   52748:	mov	r1, r6
   5274c:	mov	r0, r5
   52750:	pop	{r4, r5, r6, lr}
   52754:	b	1fd08 <lua_getstack@@Base+0x50>
   52758:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5275c:	sub	sp, sp, #84	; 0x54
   52760:	ldr	r3, [r0, #40]	; 0x28
   52764:	ldr	fp, [r2]
   52768:	mov	r1, r2
   5276c:	str	r2, [sp, #56]	; 0x38
   52770:	mvn	r2, #0
   52774:	str	r2, [r3, #24]
   52778:	ldr	r2, [fp, #2304]	; 0x900
   5277c:	ldr	r3, [fp, #272]	; 0x110
   52780:	ldr	r1, [r1, #4]
   52784:	ldr	r5, [fp, #2308]	; 0x904
   52788:	ldr	r8, [r3, r2, lsl #2]
   5278c:	str	r1, [sp, #28]
   52790:	lsl	r2, r5, #3
   52794:	ldrh	r1, [r8, #24]
   52798:	ldr	r3, [r8, #28]
   5279c:	str	r2, [sp, #64]	; 0x40
   527a0:	add	ip, r3, r2
   527a4:	add	r0, ip, #8
   527a8:	ldrh	r2, [r3, r2]
   527ac:	add	r3, r3, r1, lsl #3
   527b0:	cmp	r0, r3
   527b4:	ldrb	r3, [ip, #6]
   527b8:	str	ip, [sp, #32]
   527bc:	ldr	r1, [r8, #32]
   527c0:	str	r3, [sp, #16]
   527c4:	ldrne	r3, [sp, #32]
   527c8:	add	r9, r1, r2, lsl #2
   527cc:	ldr	r0, [r8, #8]
   527d0:	ldrhne	r2, [r3, #8]
   527d4:	ldrheq	r2, [r8, #26]
   527d8:	ldr	r3, [r8, #16]
   527dc:	sub	r0, r0, #-536870911	; 0xe0000001
   527e0:	sub	r2, r2, #-1073741823	; 0xc0000001
   527e4:	add	r3, r3, r0, lsl #3
   527e8:	add	r2, r1, r2, lsl #2
   527ec:	str	r2, [sp, #52]	; 0x34
   527f0:	ldrb	r2, [r3, #5]
   527f4:	cmp	r2, #20
   527f8:	bne	52b7c <lua_getinfo@@Base+0x4c8>
   527fc:	sub	r3, r3, #8
   52800:	mov	sl, #0
   52804:	mov	r1, #1
   52808:	ldrh	r2, [r3, #10]
   5280c:	sub	r3, r3, #8
   52810:	cmp	r5, r2
   52814:	ldrhcs	r2, [r3, #16]
   52818:	andcs	r2, r2, #31
   5281c:	orrcs	sl, sl, r1, lsl r2
   52820:	ldrb	r2, [r3, #13]
   52824:	cmp	r2, #20
   52828:	beq	52808 <lua_getinfo@@Base+0x154>
   5282c:	ldr	r3, [fp, #80]	; 0x50
   52830:	ldr	r2, [sp, #16]
   52834:	mov	r0, r3
   52838:	str	r3, [sp, #44]	; 0x2c
   5283c:	ldr	r1, [r9, r2, lsl #2]
   52840:	ldr	r2, [r3, #40]	; 0x28
   52844:	str	r1, [sp, #48]	; 0x30
   52848:	bic	r2, r2, #3
   5284c:	add	r1, r1, #4
   52850:	ldr	r3, [r3, #16]
   52854:	str	r1, [r2, #8]
   52858:	ldr	r2, [sp, #32]
   5285c:	ldr	r1, [r0, #24]
   52860:	ldrb	r2, [r2, #5]
   52864:	add	r0, r3, r2, lsl #3
   52868:	cmp	r0, r1
   5286c:	bcs	52b84 <lua_getinfo@@Base+0x4d0>
   52870:	ldr	r2, [sp, #16]
   52874:	cmp	r2, #0
   52878:	sub	r2, r3, #8
   5287c:	ldr	r3, [r3, #-4]
   52880:	str	r2, [sp, #20]
   52884:	str	r3, [sp, #60]	; 0x3c
   52888:	beq	52934 <lua_getinfo@@Base+0x280>
   5288c:	mov	r4, #0
   52890:	str	fp, [sp, #24]
   52894:	str	r5, [sp, #36]	; 0x24
   52898:	str	sl, [sp, #40]	; 0x28
   5289c:	ldr	r5, [r9, r4, lsl #2]
   528a0:	tst	r5, #262144	; 0x40000
   528a4:	bne	52924 <lua_getinfo@@Base+0x270>
   528a8:	uxth	r3, r5
   528ac:	ldr	ip, [r8, #16]
   528b0:	lsl	lr, r3, #3
   528b4:	add	sl, ip, lr
   528b8:	lsr	r7, r5, #24
   528bc:	ldrb	r2, [sl, #6]
   528c0:	ldr	r1, [sp, #20]
   528c4:	lsl	fp, r7, #3
   528c8:	cmp	r2, #253	; 0xfd
   528cc:	add	r6, r1, fp
   528d0:	beq	529b0 <lua_getinfo@@Base+0x2fc>
   528d4:	stmib	sp, {r3, r6}
   528d8:	ldr	r3, [sp, #40]	; 0x28
   528dc:	ldr	r2, [sp, #28]
   528e0:	str	r3, [sp]
   528e4:	mov	r1, r8
   528e8:	ldr	r3, [sp, #36]	; 0x24
   528ec:	ldr	r0, [sp, #24]
   528f0:	bl	32b6c <luaL_where@@Base+0x12a68>
   528f4:	tst	r5, #196608	; 0x30000
   528f8:	beq	52924 <lua_getinfo@@Base+0x270>
   528fc:	cmp	r7, #0
   52900:	ldrne	r2, [sp, #52]	; 0x34
   52904:	ldreq	r3, [sp, #60]	; 0x3c
   52908:	ldrne	r3, [r2]
   5290c:	subne	r2, r2, #4
   52910:	str	r3, [r6, #4]
   52914:	ldr	r3, [sp, #44]	; 0x2c
   52918:	strne	r2, [sp, #52]	; 0x34
   5291c:	add	r2, r6, #8
   52920:	str	r2, [r3, #16]
   52924:	ldr	r3, [sp, #16]
   52928:	add	r4, r4, #1
   5292c:	cmp	r3, r4
   52930:	bne	5289c <lua_getinfo@@Base+0x1e8>
   52934:	ldr	r3, [sp, #48]	; 0x30
   52938:	ldrb	r2, [r3]
   5293c:	sub	r3, r2, #63	; 0x3f
   52940:	cmp	r3, #10
   52944:	ldrls	pc, [pc, r3, lsl #2]
   52948:	b	52978 <lua_getinfo@@Base+0x2c4>
   5294c:	andeq	r2, r5, r0, lsl #19
   52950:	andeq	r2, r5, r8, ror r9
   52954:	andeq	r2, r5, r0, lsl #19
   52958:	andeq	r2, r5, r8, ror r9
   5295c:	andeq	r2, r5, r0, lsl #19
   52960:	andeq	r2, r5, r8, ror r9
   52964:	andeq	r2, r5, r8, ror r9
   52968:	andeq	r2, r5, r8, ror r9
   5296c:	andeq	r2, r5, r8, ror r9
   52970:	andeq	r2, r5, r8, ror r9
   52974:	andeq	r2, r5, r0, lsl #19
   52978:	cmp	r2, #88	; 0x58
   5297c:	bls	52b1c <lua_getinfo@@Base+0x468>
   52980:	ldr	r3, [sp, #32]
   52984:	ldr	r2, [sp, #20]
   52988:	ldrb	r3, [r3, #4]
   5298c:	add	r3, r2, r3, lsl #3
   52990:	ldr	r2, [sp, #44]	; 0x2c
   52994:	str	r3, [r2, #20]
   52998:	ldr	r3, [sp, #56]	; 0x38
   5299c:	ldr	r2, [sp, #48]	; 0x30
   529a0:	mov	r0, #0
   529a4:	str	r2, [r3, #8]
   529a8:	add	sp, sp, #84	; 0x54
   529ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   529b0:	cmp	r4, #0
   529b4:	beq	529f0 <lua_getinfo@@Base+0x33c>
   529b8:	ldr	r1, [r9]
   529bc:	uxth	r2, r1
   529c0:	cmp	r3, r2
   529c4:	subne	r5, r9, #4
   529c8:	addne	r5, r5, r4, lsl #2
   529cc:	movne	r2, r9
   529d0:	bne	529e8 <lua_getinfo@@Base+0x334>
   529d4:	b	52b3c <lua_getinfo@@Base+0x488>
   529d8:	ldr	r1, [r2, #4]!
   529dc:	uxth	r0, r1
   529e0:	cmp	r3, r0
   529e4:	beq	52b3c <lua_getinfo@@Base+0x488>
   529e8:	cmp	r5, r2
   529ec:	bne	529d8 <lua_getinfo@@Base+0x324>
   529f0:	ldr	r2, [sp, #24]
   529f4:	ldrb	r3, [sl, #5]
   529f8:	ldrh	r1, [ip, lr]
   529fc:	ldr	r0, [r2, #80]	; 0x50
   52a00:	sub	r2, r3, #82	; 0x52
   52a04:	cmp	r2, #1
   52a08:	bls	52bb8 <lua_getinfo@@Base+0x504>
   52a0c:	cmp	r3, #80	; 0x50
   52a10:	beq	52b54 <lua_getinfo@@Base+0x4a0>
   52a14:	ldr	r1, [ip, r1, lsl #3]
   52a18:	bl	40770 <luaL_typerror@@Base+0xa404>
   52a1c:	mov	fp, r0
   52a20:	ldr	r3, [r8, #28]
   52a24:	ldr	r1, [sp, #64]	; 0x40
   52a28:	ldr	r2, [r8, #16]
   52a2c:	add	r3, r3, r1
   52a30:	ldr	r1, [sp, #20]
   52a34:	ldrh	r3, [r3, #2]
   52a38:	add	r5, sl, #8
   52a3c:	str	fp, [r1, r7, lsl #3]
   52a40:	mvn	r1, #11
   52a44:	str	r1, [r6, #4]
   52a48:	add	r6, r2, r3, lsl #3
   52a4c:	cmp	r6, r5
   52a50:	bls	52924 <lua_getinfo@@Base+0x270>
   52a54:	add	r7, r8, #16
   52a58:	b	52a68 <lua_getinfo@@Base+0x3b4>
   52a5c:	add	r5, r5, #8
   52a60:	cmp	r6, r5
   52a64:	bls	52924 <lua_getinfo@@Base+0x270>
   52a68:	ldrb	r3, [r5, #6]
   52a6c:	cmp	r3, #254	; 0xfe
   52a70:	bne	52a5c <lua_getinfo@@Base+0x3a8>
   52a74:	ldrb	r3, [r5, #7]
   52a78:	cmp	r3, #255	; 0xff
   52a7c:	beq	52b64 <lua_getinfo@@Base+0x4b0>
   52a80:	add	r3, sl, r3, lsl #3
   52a84:	sub	r0, r5, r3
   52a88:	clz	r0, r0
   52a8c:	lsr	r0, r0, #5
   52a90:	cmp	r0, #0
   52a94:	beq	52a5c <lua_getinfo@@Base+0x3a8>
   52a98:	ldrh	r3, [r5]
   52a9c:	ldr	r1, [r8, #16]
   52aa0:	add	r3, r1, r3, lsl #3
   52aa4:	ldrb	r2, [r3, #5]
   52aa8:	cmp	r2, #63	; 0x3f
   52aac:	beq	52d3c <lua_getinfo@@Base+0x688>
   52ab0:	ldrh	r3, [r3, #2]
   52ab4:	lsl	r3, r3, #3
   52ab8:	add	r2, r1, r3
   52abc:	ldrb	r0, [r2, #5]
   52ac0:	cmp	r0, #30
   52ac4:	ldrheq	r2, [r1, r3]
   52ac8:	ldr	r3, [sp, #24]
   52acc:	addeq	r2, r1, r2, lsl #3
   52ad0:	ldr	r0, [r3, #80]	; 0x50
   52ad4:	add	r1, sp, #72	; 0x48
   52ad8:	bl	32a84 <luaL_where@@Base+0x12980>
   52adc:	ldr	r3, [sp, #24]
   52ae0:	add	r2, sp, #72	; 0x48
   52ae4:	mov	r1, fp
   52ae8:	ldr	r0, [r3, #80]	; 0x50
   52aec:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   52af0:	ldr	lr, [sp, #40]	; 0x28
   52af4:	ldr	r3, [sp, #36]	; 0x24
   52af8:	ldr	r2, [sp, #28]
   52afc:	mov	r1, r8
   52b00:	str	r0, [sp, #8]
   52b04:	ldrh	ip, [r5, #2]
   52b08:	ldr	r0, [sp, #24]
   52b0c:	str	lr, [sp]
   52b10:	str	ip, [sp, #4]
   52b14:	bl	32b6c <luaL_where@@Base+0x12a68>
   52b18:	b	52a5c <lua_getinfo@@Base+0x3a8>
   52b1c:	ldr	r1, [sp, #44]	; 0x2c
   52b20:	ldr	r3, [r1, #16]
   52b24:	ldr	r2, [r3, #-8]
   52b28:	ldr	r2, [r2, #16]
   52b2c:	ldrb	r2, [r2, #-57]	; 0xffffffc7
   52b30:	add	r3, r3, r2, lsl #3
   52b34:	str	r3, [r1, #20]
   52b38:	b	52998 <lua_getinfo@@Base+0x2e4>
   52b3c:	lsr	r1, r1, #24
   52b40:	ldr	r0, [sp, #20]
   52b44:	lsl	r1, r1, #3
   52b48:	ldrd	r2, [r0, r1]
   52b4c:	strd	r2, [r0, fp]
   52b50:	b	52924 <lua_getinfo@@Base+0x270>
   52b54:	ldrh	r2, [sl, #2]
   52b58:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   52b5c:	mov	fp, r0
   52b60:	b	52a20 <lua_getinfo@@Base+0x36c>
   52b64:	ldrb	r3, [r5, #5]
   52b68:	ldrh	r2, [r5]
   52b6c:	mov	r1, sl
   52b70:	mov	r0, r7
   52b74:	bl	1c8cc <_start@@Base+0x951c>
   52b78:	b	52a90 <lua_getinfo@@Base+0x3dc>
   52b7c:	mov	sl, #0
   52b80:	b	5282c <lua_getinfo@@Base+0x178>
   52b84:	ldr	ip, [r3, #-8]
   52b88:	ldr	r4, [sp, #44]	; 0x2c
   52b8c:	ldr	r1, [ip, #16]
   52b90:	mov	r0, r4
   52b94:	ldrb	r1, [r1, #-57]	; 0xffffffc7
   52b98:	add	r3, r3, r1, lsl #3
   52b9c:	str	r3, [r4, #20]
   52ba0:	ldr	r3, [ip, #16]
   52ba4:	ldrb	r1, [r3, #-57]	; 0xffffffc7
   52ba8:	sub	r1, r2, r1
   52bac:	bl	1fd08 <lua_getstack@@Base+0x50>
   52bb0:	ldr	r3, [r4, #16]
   52bb4:	b	52870 <lua_getinfo@@Base+0x1bc>
   52bb8:	ldr	r3, [r0, #8]
   52bbc:	ldr	fp, [ip, r1, lsl #3]
   52bc0:	add	r2, sp, #72	; 0x48
   52bc4:	ldr	r5, [r3, #228]	; 0xe4
   52bc8:	mov	r1, fp
   52bcc:	str	r0, [r5, #12]
   52bd0:	ldr	r0, [r5]
   52bd4:	bl	1b78c <_start@@Base+0x83dc>
   52bd8:	mov	r1, fp
   52bdc:	ldr	r2, [sp, #72]	; 0x48
   52be0:	mov	r3, r0
   52be4:	ldr	r0, [r5, #12]
   52be8:	bl	33128 <luaL_where@@Base+0x13024>
   52bec:	ldr	r1, [sp, #20]
   52bf0:	mvn	r3, #10
   52bf4:	str	r0, [r1, r7, lsl #3]
   52bf8:	str	r3, [r6, #4]
   52bfc:	ldrb	r3, [sl, #5]
   52c00:	str	r0, [sp, #68]	; 0x44
   52c04:	cmp	r3, #83	; 0x53
   52c08:	beq	52d08 <lua_getinfo@@Base+0x654>
   52c0c:	ldr	r3, [sp, #64]	; 0x40
   52c10:	ldr	r2, [r8, #28]
   52c14:	ldr	fp, [r8, #16]
   52c18:	add	r2, r2, r3
   52c1c:	add	r3, sl, #8
   52c20:	ldrh	r2, [r2, #2]
   52c24:	add	fp, fp, r2, lsl #3
   52c28:	cmp	fp, r3
   52c2c:	bhi	52c40 <lua_getinfo@@Base+0x58c>
   52c30:	b	52924 <lua_getinfo@@Base+0x270>
   52c34:	cmp	fp, r5
   52c38:	mov	r3, r5
   52c3c:	bls	52924 <lua_getinfo@@Base+0x270>
   52c40:	ldrb	r2, [r3, #6]
   52c44:	add	r5, r3, #8
   52c48:	cmp	r2, #254	; 0xfe
   52c4c:	bne	52c34 <lua_getinfo@@Base+0x580>
   52c50:	ldrb	r2, [r5, #-1]
   52c54:	cmp	r2, #255	; 0xff
   52c58:	beq	52d70 <lua_getinfo@@Base+0x6bc>
   52c5c:	add	r2, sl, r2, lsl #3
   52c60:	sub	r0, r3, r2
   52c64:	clz	r0, r0
   52c68:	lsr	r0, r0, #5
   52c6c:	cmp	r0, #0
   52c70:	beq	52c34 <lua_getinfo@@Base+0x580>
   52c74:	ldrb	r2, [r5, #-4]
   52c78:	ldrh	r1, [r5, #-8]
   52c7c:	ldr	r0, [pc, #392]	; 52e0c <lua_getinfo@@Base+0x758>
   52c80:	and	r2, r2, #31
   52c84:	ldr	r3, [r8, #16]
   52c88:	lsr	r0, r0, r2
   52c8c:	add	r1, r3, r1, lsl #3
   52c90:	tst	r0, #1
   52c94:	ldrh	r1, [r1, #2]
   52c98:	movne	r7, #8
   52c9c:	bne	52cc0 <lua_getinfo@@Base+0x60c>
   52ca0:	sub	r0, r2, #15
   52ca4:	cmp	r0, #1
   52ca8:	movls	r7, #1
   52cac:	bls	52cc0 <lua_getinfo@@Base+0x60c>
   52cb0:	sub	r2, r2, #17
   52cb4:	cmp	r2, #1
   52cb8:	movhi	r7, #4
   52cbc:	movls	r7, #2
   52cc0:	ldr	r2, [r8, #8]
   52cc4:	ldr	r6, [r3, r1, lsl #3]
   52cc8:	add	r3, r3, r2, lsl #3
   52ccc:	cmp	r5, r3
   52cd0:	ldr	r3, [sp, #68]	; 0x44
   52cd4:	add	r6, r3, r6
   52cd8:	bcs	52ce8 <lua_getinfo@@Base+0x634>
   52cdc:	ldrb	r3, [r5, #5]
   52ce0:	cmp	r3, #16
   52ce4:	beq	52de0 <lua_getinfo@@Base+0x72c>
   52ce8:	strd	r6, [sp, #4]
   52cec:	ldrh	r1, [r5, #-6]
   52cf0:	ldrd	r2, [sp, #36]	; 0x24
   52cf4:	mov	r0, r8
   52cf8:	str	r1, [sp]
   52cfc:	ldr	r1, [sp, #28]
   52d00:	bl	17ac8 <_start@@Base+0x4718>
   52d04:	b	52c34 <lua_getinfo@@Base+0x580>
   52d08:	ldr	r3, [sp, #72]	; 0x48
   52d0c:	add	r5, r0, #8
   52d10:	cmp	r3, #8
   52d14:	beq	52d88 <lua_getinfo@@Base+0x6d4>
   52d18:	str	r3, [sp, #8]
   52d1c:	str	r5, [sp, #4]
   52d20:	ldrh	r1, [sl, #2]
   52d24:	ldrd	r2, [sp, #36]	; 0x24
   52d28:	mov	r0, r8
   52d2c:	str	r1, [sp]
   52d30:	ldr	r1, [sp, #28]
   52d34:	bl	17ac8 <_start@@Base+0x4718>
   52d38:	b	52924 <lua_getinfo@@Base+0x270>
   52d3c:	add	r3, sp, #72	; 0x48
   52d40:	str	r3, [sp, #8]
   52d44:	ldrh	r2, [r5, #2]
   52d48:	ldr	r1, [sp, #40]	; 0x28
   52d4c:	ldr	r3, [sp, #36]	; 0x24
   52d50:	ldr	r0, [sp, #24]
   52d54:	stm	sp, {r1, r2}
   52d58:	ldr	r2, [sp, #28]
   52d5c:	mov	r1, r8
   52d60:	bl	32b6c <luaL_where@@Base+0x12a68>
   52d64:	ldr	r3, [sp, #72]	; 0x48
   52d68:	str	r3, [fp, #16]
   52d6c:	b	52a5c <lua_getinfo@@Base+0x3a8>
   52d70:	ldrb	r3, [r5, #-3]
   52d74:	ldrh	r2, [r5, #-8]
   52d78:	mov	r1, sl
   52d7c:	add	r0, r8, #16
   52d80:	bl	1c8cc <_start@@Base+0x951c>
   52d84:	b	52c6c <lua_getinfo@@Base+0x5b8>
   52d88:	ldr	r0, [r8, #8]
   52d8c:	ldr	r2, [r8, #16]
   52d90:	add	r1, sl, #8
   52d94:	add	r2, r2, r0, lsl #3
   52d98:	cmp	r1, r2
   52d9c:	bcs	52d18 <lua_getinfo@@Base+0x664>
   52da0:	ldrb	r2, [sl, #13]
   52da4:	cmp	r2, #16
   52da8:	bne	52d18 <lua_getinfo@@Base+0x664>
   52dac:	ldr	r3, [sp, #68]	; 0x44
   52db0:	mov	r6, #4
   52db4:	add	r3, r3, #12
   52db8:	mov	r0, r8
   52dbc:	stmib	sp, {r3, r6}
   52dc0:	ldrh	r1, [sl, #10]
   52dc4:	ldrd	r2, [sp, #36]	; 0x24
   52dc8:	str	r1, [sp]
   52dcc:	ldr	r1, [sp, #28]
   52dd0:	bl	17ac8 <_start@@Base+0x4718>
   52dd4:	mov	r3, r6
   52dd8:	str	r6, [sp, #72]	; 0x48
   52ddc:	b	52d18 <lua_getinfo@@Base+0x664>
   52de0:	add	r3, r6, #4
   52de4:	mov	r2, #4
   52de8:	str	r2, [sp, #8]
   52dec:	str	r3, [sp, #4]
   52df0:	ldrh	r1, [r5, #2]
   52df4:	ldrd	r2, [sp, #36]	; 0x24
   52df8:	mov	r0, r8
   52dfc:	str	r1, [sp]
   52e00:	ldr	r1, [sp, #28]
   52e04:	bl	17ac8 <_start@@Base+0x4718>
   52e08:	b	52ce8 <lua_getinfo@@Base+0x634>
   52e0c:	rsbeq	r4, r0, r0
   52e10:	push	{r4, lr}
   52e14:	ldr	r1, [r0, #20]
   52e18:	ldr	r4, [r0, #16]
   52e1c:	cmp	r1, r4
   52e20:	bls	52eac <lua_getinfo@@Base+0x7f8>
   52e24:	ldr	r3, [r4, #4]
   52e28:	cmn	r3, #7
   52e2c:	bne	52eac <lua_getinfo@@Base+0x7f8>
   52e30:	ldr	r3, [r4]
   52e34:	ldr	r2, [r3, #40]	; 0x28
   52e38:	cmp	r2, #0
   52e3c:	ldrne	r1, [pc, #116]	; 52eb8 <lua_getinfo@@Base+0x804>
   52e40:	beq	52e68 <lua_getinfo@@Base+0x7b4>
   52e44:	mvn	r3, #1
   52e48:	str	r3, [r4, #-4]
   52e4c:	bl	20530 <luaL_where@@Base+0x42c>
   52e50:	mvn	r3, #4
   52e54:	str	r3, [r4, #4]
   52e58:	mov	r3, #3
   52e5c:	str	r0, [r4]
   52e60:	mov	r0, r3
   52e64:	pop	{r4, pc}
   52e68:	ldrb	r2, [r3, #7]
   52e6c:	cmp	r2, #1
   52e70:	bls	52e7c <lua_getinfo@@Base+0x7c8>
   52e74:	ldr	r1, [pc, #64]	; 52ebc <lua_getinfo@@Base+0x808>
   52e78:	b	52e44 <lua_getinfo@@Base+0x790>
   52e7c:	cmp	r2, #0
   52e80:	bne	52e94 <lua_getinfo@@Base+0x7e0>
   52e84:	ldr	ip, [r3, #20]
   52e88:	ldr	r2, [r3, #16]
   52e8c:	cmp	ip, r2
   52e90:	beq	52e74 <lua_getinfo@@Base+0x7c0>
   52e94:	sub	r1, r1, r4
   52e98:	mov	r0, r3
   52e9c:	asr	r1, r1, #3
   52ea0:	bl	1fd08 <lua_getstack@@Base+0x50>
   52ea4:	mov	r3, #0
   52ea8:	b	52e60 <lua_getinfo@@Base+0x7ac>
   52eac:	ldr	r2, [pc, #12]	; 52ec0 <lua_getinfo@@Base+0x80c>
   52eb0:	mov	r1, #1
   52eb4:	bl	361d0 <luaL_argerror@@Base+0x8>
   52eb8:	strdeq	r0, [r0], -r2
   52ebc:	andeq	r0, r0, r2, lsl r5
   52ec0:	andeq	r0, r0, r6, lsr r2
   52ec4:	push	{r4, lr}
   52ec8:	ldr	r3, [r0, #16]
   52ecc:	ldr	lr, [r0, #20]
   52ed0:	sub	r3, lr, r3
   52ed4:	add	r3, r1, r3, asr #3
   52ed8:	cmp	r3, #8000	; 0x1f40
   52edc:	bgt	52f00 <lua_getinfo@@Base+0x84c>
   52ee0:	cmp	r1, #0
   52ee4:	ble	52ef8 <lua_getinfo@@Base+0x844>
   52ee8:	ldr	r3, [r0, #24]
   52eec:	sub	lr, r3, lr
   52ef0:	cmp	lr, r1, lsl #3
   52ef4:	ble	52f08 <lua_getinfo@@Base+0x854>
   52ef8:	mov	r0, #1
   52efc:	pop	{r4, pc}
   52f00:	mov	r0, #0
   52f04:	pop	{r4, pc}
   52f08:	bl	1fd08 <lua_getstack@@Base+0x50>
   52f0c:	mov	r0, #1
   52f10:	pop	{r4, pc}
   52f14:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   52f18:	mov	r1, #1
   52f1c:	mov	r5, r0
   52f20:	bl	36a74 <luaL_typerror@@Base+0x708>
   52f24:	ldr	r3, [r5, #16]
   52f28:	ldr	r2, [r5, #20]
   52f2c:	add	r1, r3, #8
   52f30:	cmp	r2, r1
   52f34:	mov	sl, r0
   52f38:	bls	52f48 <lua_getinfo@@Base+0x894>
   52f3c:	ldr	r1, [r3, #12]
   52f40:	cmn	r1, #1
   52f44:	bne	5304c <lua_getinfo@@Base+0x998>
   52f48:	mov	r4, #1
   52f4c:	add	r1, r3, #16
   52f50:	cmp	r2, r1
   52f54:	bls	52f64 <lua_getinfo@@Base+0x8b0>
   52f58:	ldr	r3, [r3, #20]
   52f5c:	cmn	r3, #1
   52f60:	bne	53028 <lua_getinfo@@Base+0x974>
   52f64:	mov	r0, sl
   52f68:	bl	1f244 <lua_atpanic@@Base+0x74>
   52f6c:	mov	r7, r0
   52f70:	cmp	r4, r7
   52f74:	bgt	53040 <lua_getinfo@@Base+0x98c>
   52f78:	sub	r8, r7, r4
   52f7c:	add	r8, r8, #1
   52f80:	cmp	r8, #8000	; 0x1f40
   52f84:	bgt	53068 <lua_getinfo@@Base+0x9b4>
   52f88:	mov	r1, r8
   52f8c:	mov	r0, r5
   52f90:	bl	52ec4 <lua_getinfo@@Base+0x810>
   52f94:	cmp	r0, #0
   52f98:	beq	53068 <lua_getinfo@@Base+0x9b4>
   52f9c:	ldr	fp, [sl, #24]
   52fa0:	add	r7, r7, #1
   52fa4:	lsl	r6, r4, #3
   52fa8:	mvn	r9, #0
   52fac:	b	52fe4 <lua_getinfo@@Base+0x930>
   52fb0:	ldr	r0, [sl, #8]
   52fb4:	ldr	r1, [r5, #20]
   52fb8:	add	r0, r6, r0
   52fbc:	cmp	r0, #0
   52fc0:	add	ip, r1, #8
   52fc4:	beq	53008 <lua_getinfo@@Base+0x954>
   52fc8:	ldrd	r2, [r0]
   52fcc:	add	r4, r4, #1
   52fd0:	cmp	r7, r4
   52fd4:	str	ip, [r5, #20]
   52fd8:	add	r6, r6, #8
   52fdc:	strd	r2, [r1]
   52fe0:	beq	53020 <lua_getinfo@@Base+0x96c>
   52fe4:	cmp	fp, r4
   52fe8:	bhi	52fb0 <lua_getinfo@@Base+0x8fc>
   52fec:	mov	r1, r4
   52ff0:	mov	r0, sl
   52ff4:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   52ff8:	ldr	r1, [r5, #20]
   52ffc:	add	ip, r1, #8
   53000:	cmp	r0, #0
   53004:	bne	52fc8 <lua_getinfo@@Base+0x914>
   53008:	add	r4, r4, #1
   5300c:	cmp	r7, r4
   53010:	str	ip, [r5, #20]
   53014:	add	r6, r6, #8
   53018:	str	r9, [r1, #4]
   5301c:	bne	52fe4 <lua_getinfo@@Base+0x930>
   53020:	mov	r0, r8
   53024:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   53028:	mov	r1, #3
   5302c:	mov	r0, r5
   53030:	bl	3638c <luaL_typerror@@Base+0x20>
   53034:	mov	r7, r0
   53038:	cmp	r4, r7
   5303c:	ble	52f78 <lua_getinfo@@Base+0x8c4>
   53040:	mov	r8, #0
   53044:	mov	r0, r8
   53048:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5304c:	mov	r1, #2
   53050:	mov	r0, r5
   53054:	bl	3638c <luaL_typerror@@Base+0x20>
   53058:	ldr	r3, [r5, #16]
   5305c:	ldr	r2, [r5, #20]
   53060:	mov	r4, r0
   53064:	b	52f4c <lua_getinfo@@Base+0x898>
   53068:	mov	r0, r5
   5306c:	ldr	r1, [pc]	; 53074 <lua_getinfo@@Base+0x9c0>
   53070:	bl	35a48 <lua_error@@Base+0xa8>
   53074:	ldrdeq	r0, [r0], -fp
   53078:	ldr	r1, [r0, #16]
   5307c:	push	{r4, lr}
   53080:	ldr	r3, [r1, #-8]
   53084:	ldr	r3, [r3, #24]
   53088:	ldr	r2, [r3, #40]	; 0x28
   5308c:	cmp	r2, #0
   53090:	ldrne	r1, [pc, #76]	; 530e4 <lua_getinfo@@Base+0xa30>
   53094:	beq	5309c <lua_getinfo@@Base+0x9e8>
   53098:	bl	35a48 <lua_error@@Base+0xa8>
   5309c:	ldrb	r2, [r3, #7]
   530a0:	cmp	r2, #1
   530a4:	bls	530b0 <lua_getinfo@@Base+0x9fc>
   530a8:	ldr	r1, [pc, #56]	; 530e8 <lua_getinfo@@Base+0xa34>
   530ac:	b	53098 <lua_getinfo@@Base+0x9e4>
   530b0:	cmp	r2, #0
   530b4:	bne	530c8 <lua_getinfo@@Base+0xa14>
   530b8:	ldr	ip, [r3, #20]
   530bc:	ldr	r2, [r3, #16]
   530c0:	cmp	ip, r2
   530c4:	beq	530a8 <lua_getinfo@@Base+0x9f4>
   530c8:	ldr	r2, [r0, #20]
   530cc:	mov	r0, r3
   530d0:	sub	r1, r2, r1
   530d4:	asr	r1, r1, #3
   530d8:	bl	1fd08 <lua_getstack@@Base+0x50>
   530dc:	mov	r0, #0
   530e0:	pop	{r4, pc}
   530e4:	strdeq	r0, [r0], -r2
   530e8:	andeq	r0, r0, r2, lsl r5

000530ec <lua_newstate@@Base>:
   530ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   530f0:	mov	r2, #0
   530f4:	ldr	r6, [pc, #436]	; 532b0 <lua_newstate@@Base+0x1c4>
   530f8:	mov	r8, r0
   530fc:	mov	r7, r1
   53100:	mov	r0, r1
   53104:	mov	r3, r6
   53108:	mov	r1, r2
   5310c:	blx	r8
   53110:	subs	r4, r0, #0
   53114:	beq	53298 <lua_newstate@@Base+0x1ac>
   53118:	mov	r2, r6
   5311c:	mov	r1, #0
   53120:	add	r5, r0, #48	; 0x30
   53124:	bl	12ed4 <memset@plt>
   53128:	str	r6, [r4, #68]	; 0x44
   5312c:	ldr	r6, [pc, #384]	; 532b4 <lua_newstate@@Base+0x1c8>
   53130:	ldr	r9, [pc, #384]	; 532b8 <lua_newstate@@Base+0x1cc>
   53134:	strh	r6, [r4, #4]
   53138:	mov	r6, #1
   5313c:	strb	r6, [r4, #6]
   53140:	add	r6, r4, #216	; 0xd8
   53144:	str	r6, [r4, #224]	; 0xe0
   53148:	str	r6, [r4, #228]	; 0xe4
   5314c:	mvn	r6, #0
   53150:	str	r6, [r4, #52]	; 0x34
   53154:	str	r6, [r4, #172]	; 0xac
   53158:	str	r6, [r4, #196]	; 0xc4
   5315c:	str	r6, [r4, #204]	; 0xcc
   53160:	add	r6, r4, #192	; 0xc0
   53164:	str	r6, [r4, #212]	; 0xd4
   53168:	mov	r6, #33	; 0x21
   5316c:	str	r7, [r4, #64]	; 0x40
   53170:	strh	r6, [r4, #76]	; 0x4c
   53174:	ldr	r7, [pc, #320]	; 532bc <lua_newstate@@Base+0x1d0>
   53178:	add	r6, r4, #84	; 0x54
   5317c:	mov	sl, #0
   53180:	add	ip, r4, #2912	; 0xb60
   53184:	add	r0, r4, #3536	; 0xdd0
   53188:	str	r6, [r4, #88]	; 0x58
   5318c:	mov	r6, #200	; 0xc8
   53190:	str	r5, [r4, #8]
   53194:	ldr	lr, [pc, #292]	; 532c0 <lua_newstate@@Base+0x1d4>
   53198:	add	ip, ip, #12
   5319c:	add	r0, r0, #4
   531a0:	add	r5, r9, #176	; 0xb0
   531a4:	str	r8, [r4, #60]	; 0x3c
   531a8:	mov	r1, r9
   531ac:	mov	r2, r9
   531b0:	str	r4, [r4, #164]	; 0xa4
   531b4:	str	r4, [r4, #84]	; 0x54
   531b8:	mov	r3, sl
   531bc:	str	sl, [r4, #140]	; 0x8c
   531c0:	str	sl, [r4, #128]	; 0x80
   531c4:	str	sl, [r4, #132]	; 0x84
   531c8:	str	sl, [r4, #136]	; 0x88
   531cc:	strh	r7, [r4, #148]	; 0x94
   531d0:	str	r6, [r4, #120]	; 0x78
   531d4:	str	r6, [r4, #116]	; 0x74
   531d8:	b	531e0 <lua_newstate@@Base+0xf4>
   531dc:	ldrh	r3, [r2, #2]!
   531e0:	add	r3, lr, r3
   531e4:	cmp	r2, r5
   531e8:	str	r3, [ip, #4]!
   531ec:	str	r3, [r0, #4]!
   531f0:	bne	531dc <lua_newstate@@Base+0xf0>
   531f4:	add	r0, r9, #304	; 0x130
   531f8:	add	r2, r1, #178	; 0xb2
   531fc:	add	r0, r0, #2
   53200:	add	r1, r4, #3280	; 0xcd0
   53204:	mov	r3, #8192	; 0x2000
   53208:	b	53210 <lua_newstate@@Base+0x124>
   5320c:	ldrh	r3, [r2, #2]!
   53210:	add	r3, lr, r3
   53214:	cmp	r2, r0
   53218:	str	r3, [r1, #4]!
   5321c:	bne	5320c <lua_newstate@@Base+0x120>
   53220:	ldr	r0, [r4, #3248]	; 0xcb0
   53224:	ldr	r1, [r4, #3260]	; 0xcbc
   53228:	ldr	r3, [r4, #3272]	; 0xcc8
   5322c:	add	r2, r4, #3888	; 0xf30
   53230:	ldr	ip, [r4, #3288]	; 0xcd8
   53234:	str	r0, [r4, #3244]	; 0xcac
   53238:	str	r1, [r4, #3256]	; 0xcb8
   5323c:	ldr	r0, [r4, #3300]	; 0xce4
   53240:	ldr	r1, [pc, #124]	; 532c4 <lua_newstate@@Base+0x1d8>
   53244:	str	r3, [r4, #3268]	; 0xcc4
   53248:	add	r2, r2, #8
   5324c:	mov	r3, #97	; 0x61
   53250:	str	ip, [r4, #3284]	; 0xcd4
   53254:	str	r0, [r4, #3296]	; 0xce0
   53258:	str	r1, [r4, #260]	; 0x104
   5325c:	str	r1, [r4, #264]	; 0x108
   53260:	str	r3, [r2, #4]!
   53264:	add	r3, r3, #1
   53268:	cmp	r3, #154	; 0x9a
   5326c:	bne	53260 <lua_newstate@@Base+0x174>
   53270:	mov	r3, #6
   53274:	mov	r2, #0
   53278:	strb	r3, [r4, #7]
   5327c:	mov	r1, r2
   53280:	ldr	r3, [pc, #64]	; 532c8 <lua_newstate@@Base+0x1dc>
   53284:	mov	r0, r4
   53288:	bl	6bd28 <luaL_openlibs@@Base+0x2568>
   5328c:	cmp	r0, #0
   53290:	strbeq	r0, [r4, #7]
   53294:	bne	532a0 <lua_newstate@@Base+0x1b4>
   53298:	mov	r0, r4
   5329c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   532a0:	mov	r0, r4
   532a4:	bl	1f7c0 <lua_atpanic@@Base+0x5f0>
   532a8:	mov	r4, #0
   532ac:	b	53298 <lua_newstate@@Base+0x1ac>
   532b0:	andeq	r1, r0, r0, lsr #32
   532b4:	andeq	r0, r0, r1, ror #12
   532b8:			; <UNDEFINED> instruction: 0x0006eeb0
   532bc:	andeq	r0, r0, r1, lsl #8
   532c0:	andeq	r9, r6, r0, lsl #17
   532c4:	andeq	r1, r0, pc, asr r4
   532c8:	strdeq	pc, [r3], -r4

000532cc <luaJIT_setmode@@Base>:
   532cc:	push	{r4, r5, r6, r7, r8, lr}
   532d0:	mov	r4, r2
   532d4:	ldr	r5, [r0, #8]
   532d8:	uxtb	r6, r2
   532dc:	ldrb	r2, [r5, #113]	; 0x71
   532e0:	ldr	r3, [r5, #552]	; 0x228
   532e4:	tst	r2, #64	; 0x40
   532e8:	bic	r3, r3, #16
   532ec:	str	r3, [r5, #552]	; 0x228
   532f0:	bne	534c8 <luaJIT_setmode@@Base+0x1fc>
   532f4:	cmp	r6, #16
   532f8:	ldrls	pc, [pc, r6, lsl #2]
   532fc:	b	53370 <luaJIT_setmode@@Base+0xa4>
   53300:	andeq	r3, r5, r8, ror r3
   53304:	andeq	r3, r5, r0, ror r3
   53308:	andeq	r3, r5, r4, lsr #7
   5330c:	andeq	r3, r5, r4, lsr #7
   53310:	andeq	r3, r5, r4, lsr #7
   53314:	andeq	r3, r5, r0, lsl r4
   53318:	andeq	r3, r5, r0, ror r3
   5331c:	andeq	r3, r5, r0, ror r3
   53320:	andeq	r3, r5, r0, ror r3
   53324:	andeq	r3, r5, r0, ror r3
   53328:	andeq	r3, r5, r0, ror r3
   5332c:	andeq	r3, r5, r0, ror r3
   53330:	andeq	r3, r5, r0, ror r3
   53334:	andeq	r3, r5, r0, ror r3
   53338:	andeq	r3, r5, r0, ror r3
   5333c:	andeq	r3, r5, r0, ror r3
   53340:	andeq	r3, r5, r4, asr #6
   53344:	tst	r4, #256	; 0x100
   53348:	beq	53434 <luaJIT_setmode@@Base+0x168>
   5334c:	cmp	r1, #0
   53350:	beq	53370 <luaJIT_setmode@@Base+0xa4>
   53354:	ldrgt	r3, [r0, #16]
   53358:	ldrle	r3, [r0, #20]
   5335c:	subgt	r1, r1, #-536870911	; 0xe0000001
   53360:	add	r1, r3, r1, lsl #3
   53364:	ldr	r3, [r1, #4]
   53368:	cmn	r3, #4
   5336c:	beq	534b0 <luaJIT_setmode@@Base+0x1e4>
   53370:	mov	r0, #0
   53374:	pop	{r4, r5, r6, r7, r8, pc}
   53378:	tst	r4, #512	; 0x200
   5337c:	bne	5347c <luaJIT_setmode@@Base+0x1b0>
   53380:	ldr	r3, [r5, #484]	; 0x1e4
   53384:	tst	r4, #256	; 0x100
   53388:	biceq	r3, r3, #1
   5338c:	orrne	r3, r3, #1
   53390:	mov	r0, r5
   53394:	str	r3, [r5, #484]	; 0x1e4
   53398:	bl	17c5c <_start@@Base+0x48ac>
   5339c:	mov	r0, #1
   533a0:	pop	{r4, r5, r6, r7, r8, pc}
   533a4:	cmp	r1, #0
   533a8:	bne	53444 <luaJIT_setmode@@Base+0x178>
   533ac:	ldr	r1, [r0, #16]
   533b0:	ldr	r3, [r1, #-4]
   533b4:	tst	r3, #3
   533b8:	mvnne	r3, r3
   533bc:	ldrbeq	r3, [r3, #-3]
   533c0:	bicne	r3, r3, #7
   533c4:	addne	r1, r1, r3
   533c8:	subeq	r1, r1, r3, lsl #3
   533cc:	subeq	r1, r1, #16
   533d0:	ldr	r3, [r1]
   533d4:	ldrb	r2, [r3, #6]
   533d8:	cmp	r2, #0
   533dc:	beq	53470 <luaJIT_setmode@@Base+0x1a4>
   533e0:	ldr	r3, [r1, #4]
   533e4:	cmn	r3, #8
   533e8:	bne	53370 <luaJIT_setmode@@Base+0xa4>
   533ec:	ldr	r7, [r1]
   533f0:	cmp	r6, #4
   533f4:	bne	53488 <luaJIT_setmode@@Base+0x1bc>
   533f8:	mov	r0, r5
   533fc:	mov	r2, r4
   53400:	mov	r1, r7
   53404:	bl	1d0d0 <_start@@Base+0x9d20>
   53408:	mov	r0, #1
   5340c:	pop	{r4, r5, r6, r7, r8, pc}
   53410:	ands	r0, r4, #512	; 0x200
   53414:	popeq	{r4, r5, r6, r7, r8, pc}
   53418:	cmp	r1, #0
   5341c:	beq	5342c <luaJIT_setmode@@Base+0x160>
   53420:	ldr	r3, [r5, #664]	; 0x298
   53424:	cmp	r1, r3
   53428:	bcc	534a4 <luaJIT_setmode@@Base+0x1d8>
   5342c:	mov	r0, #1
   53430:	pop	{r4, r5, r6, r7, r8, pc}
   53434:	mov	r3, #95	; 0x5f
   53438:	str	r3, [r5, #216]	; 0xd8
   5343c:	mov	r0, #1
   53440:	pop	{r4, r5, r6, r7, r8, pc}
   53444:	ldrgt	r3, [r0, #16]
   53448:	ldrle	r3, [r0, #20]
   5344c:	subgt	r1, r1, #-536870911	; 0xe0000001
   53450:	add	r1, r3, r1, lsl #3
   53454:	ldr	r3, [r1, #4]
   53458:	cmn	r3, #9
   5345c:	bne	533e4 <luaJIT_setmode@@Base+0x118>
   53460:	ldr	r3, [r1]
   53464:	ldrb	r2, [r3, #6]
   53468:	cmp	r2, #0
   5346c:	bne	53370 <luaJIT_setmode@@Base+0xa4>
   53470:	ldr	r7, [r3, #16]
   53474:	sub	r7, r7, #64	; 0x40
   53478:	b	533f0 <luaJIT_setmode@@Base+0x124>
   5347c:	bl	508b8 <luaL_error@@Base+0xa7cc>
   53480:	mov	r0, #1
   53484:	pop	{r4, r5, r6, r7, r8, pc}
   53488:	mov	r2, r4
   5348c:	mov	r1, r7
   53490:	mov	r0, r5
   53494:	bl	1cffc <_start@@Base+0x9c4c>
   53498:	cmp	r6, #2
   5349c:	beq	5342c <luaJIT_setmode@@Base+0x160>
   534a0:	b	533f8 <luaJIT_setmode@@Base+0x12c>
   534a4:	add	r0, r5, #384	; 0x180
   534a8:	bl	1cfd8 <_start@@Base+0x9c28>
   534ac:	b	5342c <luaJIT_setmode@@Base+0x160>
   534b0:	ldr	r2, [r1]
   534b4:	mov	r3, #96	; 0x60
   534b8:	str	r2, [r5, #204]	; 0xcc
   534bc:	str	r3, [r5, #216]	; 0xd8
   534c0:	mov	r0, #1
   534c4:	pop	{r4, r5, r6, r7, r8, pc}
   534c8:	ldr	r1, [pc]	; 534d0 <luaJIT_setmode@@Base+0x204>
   534cc:	bl	35a48 <lua_error@@Base+0xa8>
   534d0:	andeq	r0, r0, r1, lsl #7
   534d4:	ldr	r3, [r0, #16]
   534d8:	ldr	r2, [r0, #20]
   534dc:	push	{r4, r5, r6, lr}
   534e0:	cmp	r3, r2
   534e4:	mov	r4, r0
   534e8:	mov	r5, r1
   534ec:	beq	53560 <luaJIT_setmode@@Base+0x294>
   534f0:	ldr	r1, [r3, #4]
   534f4:	cmn	r1, #1
   534f8:	beq	53560 <luaJIT_setmode@@Base+0x294>
   534fc:	add	r0, r1, #9
   53500:	cmp	r0, #1
   53504:	bls	5357c <luaJIT_setmode@@Base+0x2b0>
   53508:	cmn	r1, #3
   5350c:	bne	53550 <luaJIT_setmode@@Base+0x284>
   53510:	mov	r1, #0
   53514:	add	r0, r3, #8
   53518:	cmp	r2, r0
   5351c:	bls	53530 <luaJIT_setmode@@Base+0x264>
   53520:	ldr	r3, [r3, #12]
   53524:	add	r2, r3, #3
   53528:	cmp	r2, #1
   5352c:	bls	53584 <luaJIT_setmode@@Base+0x2b8>
   53530:	orr	r5, r5, #2
   53534:	mov	r2, r5
   53538:	mov	r0, r4
   5353c:	bl	532cc <luaJIT_setmode@@Base>
   53540:	cmp	r0, #1
   53544:	beq	53568 <luaJIT_setmode@@Base+0x29c>
   53548:	tst	r5, #255	; 0xff
   5354c:	beq	53570 <luaJIT_setmode@@Base+0x2a4>
   53550:	mov	r0, r4
   53554:	mov	r2, #6
   53558:	mov	r1, #1
   5355c:	bl	36374 <luaL_typerror@@Base+0x8>
   53560:	mov	r1, #0
   53564:	b	53534 <luaJIT_setmode@@Base+0x268>
   53568:	mov	r0, #0
   5356c:	pop	{r4, r5, r6, pc}
   53570:	mov	r0, r4
   53574:	ldr	r1, [pc, #28]	; 53598 <luaJIT_setmode@@Base+0x2cc>
   53578:	bl	35a48 <lua_error@@Base+0xa8>
   5357c:	mov	r1, #1
   53580:	b	53514 <luaJIT_setmode@@Base+0x248>
   53584:	cmn	r3, #2
   53588:	movne	r3, #3
   5358c:	moveq	r3, #4
   53590:	orr	r5, r5, r3
   53594:	b	53534 <luaJIT_setmode@@Base+0x268>
   53598:	strdeq	r0, [r0], -r2
   5359c:	mov	r1, #0
   535a0:	b	534d4 <luaJIT_setmode@@Base+0x208>
   535a4:	mov	r1, #256	; 0x100
   535a8:	b	534d4 <luaJIT_setmode@@Base+0x208>
   535ac:	ldr	r2, [r0, #16]
   535b0:	ldr	r1, [r0, #20]
   535b4:	push	{r4, lr}
   535b8:	cmp	r2, r1
   535bc:	mov	r4, r0
   535c0:	bcs	535d0 <luaJIT_setmode@@Base+0x304>
   535c4:	ldr	r2, [r2, #4]
   535c8:	cmn	r2, #14
   535cc:	bls	535e0 <luaJIT_setmode@@Base+0x314>
   535d0:	mov	r0, r4
   535d4:	mov	r1, #512	; 0x200
   535d8:	pop	{r4, lr}
   535dc:	b	534d4 <luaJIT_setmode@@Base+0x208>
   535e0:	mov	r1, #1
   535e4:	bl	3638c <luaL_typerror@@Base+0x20>
   535e8:	ldr	r2, [pc, #16]	; 53600 <luaJIT_setmode@@Base+0x334>
   535ec:	mov	r1, r0
   535f0:	mov	r0, r4
   535f4:	bl	532cc <luaJIT_setmode@@Base>
   535f8:	mov	r0, #0
   535fc:	pop	{r4, pc}
   53600:	andeq	r0, r0, r5, lsl #4

00053604 <lua_sethook@@Base>:
   53604:	ldr	r0, [r0, #8]
   53608:	ands	r2, r2, #15
   5360c:	moveq	ip, #1
   53610:	movne	ip, #0
   53614:	cmp	r1, #0
   53618:	moveq	ip, #1
   5361c:	push	{r4, lr}
   53620:	cmp	ip, #0
   53624:	ldrb	lr, [r0, #113]	; 0x71
   53628:	movne	r2, #0
   5362c:	movne	r1, r2
   53630:	ldr	ip, [r0, #552]	; 0x228
   53634:	sxtbeq	r2, r2
   53638:	str	r1, [r0, #200]	; 0xc8
   5363c:	bic	r1, lr, #15
   53640:	orr	r2, r2, r1
   53644:	bic	r1, ip, #16
   53648:	str	r3, [r0, #196]	; 0xc4
   5364c:	str	r3, [r0, #192]	; 0xc0
   53650:	strb	r2, [r0, #113]	; 0x71
   53654:	str	r1, [r0, #552]	; 0x228
   53658:	bl	17c5c <_start@@Base+0x48ac>
   5365c:	mov	r0, #1
   53660:	pop	{r4, pc}

00053664 <lua_gethook@@Base>:
   53664:	ldr	r3, [r0, #8]
   53668:	ldr	r0, [r3, #200]	; 0xc8
   5366c:	bx	lr

00053670 <lua_gethookmask@@Base>:
   53670:	ldr	r3, [r0, #8]
   53674:	ldrb	r0, [r3, #113]	; 0x71
   53678:	and	r0, r0, #15
   5367c:	bx	lr

00053680 <lua_gethookcount@@Base>:
   53680:	ldr	r3, [r0, #8]
   53684:	ldr	r0, [r3, #196]	; 0xc4
   53688:	bx	lr
   5368c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   53690:	sub	sp, sp, #12
   53694:	mov	r4, r0
   53698:	mov	r7, r1
   5369c:	bl	12eb0 <__errno_location@plt>
   536a0:	ldr	r8, [r4, #16]
   536a4:	ldr	r1, [r4, #40]	; 0x28
   536a8:	ldr	r6, [r4, #8]
   536ac:	bic	r1, r1, #3
   536b0:	ldr	r2, [r1, #4]
   536b4:	ldr	r3, [r1, #8]
   536b8:	lsr	r2, r2, #3
   536bc:	str	r3, [sp]
   536c0:	ldr	fp, [r0]
   536c4:	mov	r9, r0
   536c8:	ldr	r0, [r8, #-8]
   536cc:	ldr	r5, [r0, #16]
   536d0:	str	r7, [r1, #8]
   536d4:	sub	r0, r5, #57	; 0x39
   536d8:	mov	r1, r7
   536dc:	bl	1b260 <_start@@Base+0x7eb0>
   536e0:	ldr	r2, [r6, #552]	; 0x228
   536e4:	sub	r5, r5, #64	; 0x40
   536e8:	cmp	r2, #0
   536ec:	lsl	sl, r0, #3
   536f0:	add	r3, r8, sl
   536f4:	str	r3, [r4, #20]
   536f8:	bne	537a0 <lua_gethookcount@@Base+0x120>
   536fc:	ldrb	r3, [r6, #113]	; 0x71
   53700:	tst	r3, #8
   53704:	beq	53714 <lua_gethookcount@@Base+0x94>
   53708:	ldr	r2, [r6, #192]	; 0xc0
   5370c:	cmp	r2, #0
   53710:	beq	537f0 <lua_gethookcount@@Base+0x170>
   53714:	tst	r3, #4
   53718:	beq	5377c <lua_gethookcount@@Base+0xfc>
   5371c:	add	r8, r5, #64	; 0x40
   53720:	sub	r1, r7, r8
   53724:	mov	r0, r5
   53728:	asr	r1, r1, #2
   5372c:	sub	r1, r1, #1
   53730:	str	r3, [sp, #4]
   53734:	bl	14c1c <_start@@Base+0x186c>
   53738:	ldr	r3, [sp]
   5373c:	cmp	r7, r3
   53740:	mov	r2, r0
   53744:	bls	53760 <lua_gethookcount@@Base+0xe0>
   53748:	sub	r1, r3, r8
   5374c:	ldr	r0, [r5, #8]
   53750:	asr	r1, r1, #2
   53754:	sub	r1, r1, #1
   53758:	cmp	r0, r1
   5375c:	bhi	537d0 <lua_gethookcount@@Base+0x150>
   53760:	mov	r1, #2
   53764:	mov	r0, r4
   53768:	bl	1fd80 <lua_getstack@@Base+0xc8>
   5376c:	ldr	r3, [r4, #16]
   53770:	add	sl, r3, sl
   53774:	str	sl, [r4, #20]
   53778:	ldrb	r3, [r6, #113]	; 0x71
   5377c:	tst	r3, #2
   53780:	beq	53794 <lua_gethookcount@@Base+0x114>
   53784:	ldrb	r3, [r7, #-4]
   53788:	sub	r3, r3, #73	; 0x49
   5378c:	cmp	r3, #3
   53790:	bls	537b4 <lua_gethookcount@@Base+0x134>
   53794:	str	fp, [r9]
   53798:	add	sp, sp, #12
   5379c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   537a0:	str	r4, [r6, #464]	; 0x1d0
   537a4:	sub	r1, r7, #4
   537a8:	add	r0, r6, #384	; 0x180
   537ac:	bl	195c0 <_start@@Base+0x6210>
   537b0:	b	536fc <lua_gethookcount@@Base+0x7c>
   537b4:	mov	r0, r4
   537b8:	mvn	r2, #0
   537bc:	mov	r1, #1
   537c0:	bl	1fd80 <lua_getstack@@Base+0xc8>
   537c4:	str	fp, [r9]
   537c8:	add	sp, sp, #12
   537cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   537d0:	mov	r0, r5
   537d4:	str	r2, [sp]
   537d8:	bl	14c1c <_start@@Base+0x186c>
   537dc:	ldr	r2, [sp]
   537e0:	ldr	r3, [sp, #4]
   537e4:	cmp	r0, r2
   537e8:	bne	53760 <lua_gethookcount@@Base+0xe0>
   537ec:	b	5377c <lua_gethookcount@@Base+0xfc>
   537f0:	ldr	r3, [r6, #196]	; 0xc4
   537f4:	mvn	r2, #0
   537f8:	str	r3, [r6, #192]	; 0xc0
   537fc:	mov	r1, #3
   53800:	mov	r0, r4
   53804:	bl	1fd80 <lua_getstack@@Base+0xc8>
   53808:	ldr	r3, [r4, #16]
   5380c:	add	r3, r3, sl
   53810:	str	r3, [r4, #20]
   53814:	ldrb	r3, [r6, #113]	; 0x71
   53818:	b	53714 <lua_gethookcount@@Base+0x94>
   5381c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   53820:	mov	r6, r0
   53824:	mov	r8, r1
   53828:	bl	12eb0 <__errno_location@plt>
   5382c:	ldr	r7, [r6, #80]	; 0x50
   53830:	add	r1, r8, #4
   53834:	ldr	r4, [r7, #40]	; 0x28
   53838:	ldr	r5, [r7, #16]
   5383c:	bic	r4, r4, #3
   53840:	ldr	sl, [r4, #8]
   53844:	ldr	r2, [r4, #4]
   53848:	lsr	r2, r2, #3
   5384c:	ldr	r9, [r0]
   53850:	str	r8, [r4, #8]
   53854:	ldr	r3, [r5, #-8]
   53858:	mov	fp, r0
   5385c:	ldr	r0, [r3, #16]
   53860:	sub	r0, r0, #57	; 0x39
   53864:	bl	1b260 <_start@@Base+0x7eb0>
   53868:	ldr	r3, [r6, #168]	; 0xa8
   5386c:	cmp	r3, #0
   53870:	add	r0, r5, r0, lsl #3
   53874:	str	r0, [r7, #20]
   53878:	bne	53888 <lua_gethookcount@@Base+0x208>
   5387c:	ldrb	r3, [r6, #-271]	; 0xfffffef1
   53880:	ands	r3, r3, #96	; 0x60
   53884:	beq	53894 <lua_gethookcount@@Base+0x214>
   53888:	str	sl, [r4, #8]
   5388c:	str	r9, [fp]
   53890:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   53894:	mov	r2, #18
   53898:	str	r3, [r6, #2304]	; 0x900
   5389c:	sub	r1, r8, #4
   538a0:	str	r2, [r6, #168]	; 0xa8
   538a4:	mov	r0, r6
   538a8:	bl	195c0 <_start@@Base+0x6210>
   538ac:	b	53888 <lua_gethookcount@@Base+0x208>
   538b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   538b4:	sub	sp, sp, #12
   538b8:	mov	r4, r0
   538bc:	mov	r6, r1
   538c0:	bl	12eb0 <__errno_location@plt>
   538c4:	ldr	r7, [r4, #16]
   538c8:	ldr	r5, [r4, #40]	; 0x28
   538cc:	mov	r1, r6
   538d0:	ldr	r3, [r7, #-8]
   538d4:	bic	r5, r5, #3
   538d8:	ldr	r2, [r5, #4]
   538dc:	ldr	sl, [r5, #8]
   538e0:	lsr	r2, r2, #3
   538e4:	ldr	r9, [r0]
   538e8:	mov	r8, r0
   538ec:	ldr	r0, [r3, #16]
   538f0:	str	r6, [r5, #8]
   538f4:	sub	r0, r0, #57	; 0x39
   538f8:	bl	1b260 <_start@@Base+0x7eb0>
   538fc:	ldr	r6, [r4, #8]
   53900:	add	r0, r7, r0, lsl #3
   53904:	str	r0, [r4, #20]
   53908:	ldrb	r3, [r6, #113]	; 0x71
   5390c:	ands	ip, r3, #32
   53910:	and	r7, r3, #127	; 0x7f
   53914:	bne	53960 <lua_gethookcount@@Base+0x2e0>
   53918:	ldr	r1, [pc, #108]	; 5398c <lua_gethookcount@@Base+0x30c>
   5391c:	mov	r3, #32
   53920:	strb	r3, [r6, #113]	; 0x71
   53924:	mov	r0, r6
   53928:	ldr	fp, [r1, #32]
   5392c:	str	r1, [sp, #4]
   53930:	str	ip, [r1, #32]
   53934:	bl	17c5c <_start@@Base+0x48ac>
   53938:	ldr	r1, [sp, #4]
   5393c:	mov	r2, fp
   53940:	ldr	r3, [r1, #36]	; 0x24
   53944:	ldr	fp, [r1, #4]
   53948:	ldr	r0, [r1, #8]
   5394c:	mov	r1, r4
   53950:	blx	fp
   53954:	ldrb	r3, [r6, #113]	; 0x71
   53958:	bic	r3, r3, #127	; 0x7f
   5395c:	orr	r7, r3, r7
   53960:	strb	r7, [r6, #113]	; 0x71
   53964:	mov	r0, r6
   53968:	bl	17c5c <_start@@Base+0x48ac>
   5396c:	str	sl, [r5, #8]
   53970:	ldr	r3, [r4, #8]
   53974:	mvn	r2, #0
   53978:	str	r4, [r3, #220]	; 0xdc
   5397c:	str	r2, [r3, #76]	; 0x4c
   53980:	str	r9, [r8]
   53984:	add	sp, sp, #12
   53988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5398c:	andeq	r4, r8, r4, asr #3
   53990:	push	{r4, lr}
   53994:	vpush	{d8-d9}
   53998:	cmp	r0, #11
   5399c:	ldrls	pc, [pc, r0, lsl #2]
   539a0:	b	53a78 <lua_gethookcount@@Base+0x3f8>
   539a4:	strdeq	r3, [r5], -r0
   539a8:	strdeq	r3, [r5], -r8
   539ac:	andeq	r3, r5, r0, lsl #20
   539b0:	andeq	r3, r5, r8, lsl #20
   539b4:	andeq	r3, r5, r0, lsl sl
   539b8:	andeq	r3, r5, r8, lsr #20
   539bc:	andeq	r3, r5, r4, lsr sl
   539c0:	andeq	r3, r5, ip, lsr sl
   539c4:	andeq	r3, r5, r4, asr #20
   539c8:	andeq	r3, r5, r0, asr sl
   539cc:	andeq	r3, r5, r4, ror #20
   539d0:	ldrdeq	r3, [r5], -r4
   539d4:	vcmpe.f64	d0, d1
   539d8:	vmrs	APSR_nzcv, fpscr
   539dc:	vmovpl.f64	d8, d0
   539e0:	vmovmi.f64	d8, d1
   539e4:	vmov.f64	d0, d8
   539e8:	vpop	{d8-d9}
   539ec:	pop	{r4, pc}
   539f0:	vadd.f64	d8, d0, d1
   539f4:	b	539e4 <lua_gethookcount@@Base+0x364>
   539f8:	vsub.f64	d8, d0, d1
   539fc:	b	539e4 <lua_gethookcount@@Base+0x364>
   53a00:	vmul.f64	d8, d0, d1
   53a04:	b	539e4 <lua_gethookcount@@Base+0x364>
   53a08:	vdiv.f64	d8, d0, d1
   53a0c:	b	539e4 <lua_gethookcount@@Base+0x364>
   53a10:	vmov.f64	d8, d0
   53a14:	vmov.f64	d9, d1
   53a18:	vdiv.f64	d0, d8, d1
   53a1c:	bl	6d568 <luaL_openlibs@@Base+0x3da8>
   53a20:	vmls.f64	d8, d0, d9
   53a24:	b	539e4 <lua_gethookcount@@Base+0x364>
   53a28:	vpop	{d8-d9}
   53a2c:	pop	{r4, lr}
   53a30:	b	12ce8 <pow@plt>
   53a34:	vneg.f64	d8, d0
   53a38:	b	539e4 <lua_gethookcount@@Base+0x364>
   53a3c:	vabs.f64	d8, d0
   53a40:	b	539e4 <lua_gethookcount@@Base+0x364>
   53a44:	vpop	{d8-d9}
   53a48:	pop	{r4, lr}
   53a4c:	b	13078 <atan2@plt>
   53a50:	vcvt.s32.f64	s15, d1
   53a54:	vpop	{d8-d9}
   53a58:	pop	{r4, lr}
   53a5c:	vmov	r0, s15
   53a60:	b	12ff4 <ldexp@plt>
   53a64:	vcmpe.f64	d0, d1
   53a68:	vmrs	APSR_nzcv, fpscr
   53a6c:	vmovle.f64	d8, d0
   53a70:	vmovgt.f64	d8, d1
   53a74:	b	539e4 <lua_gethookcount@@Base+0x364>
   53a78:	vmov.f64	d8, d0
   53a7c:	b	539e4 <lua_gethookcount@@Base+0x364>
   53a80:	push	{r4, r5, r6, r7, r8, r9, lr}
   53a84:	sub	sp, sp, #28
   53a88:	ldr	lr, [pc, #224]	; 53b70 <lua_gethookcount@@Base+0x4f0>
   53a8c:	ldr	ip, [sp, #56]	; 0x38
   53a90:	mov	r7, r0
   53a94:	mov	r5, r1
   53a98:	lsl	ip, ip, #1
   53a9c:	mov	r0, r2
   53aa0:	add	r1, sp, #8
   53aa4:	ldrh	r4, [lr, ip]
   53aa8:	mov	r6, r2
   53aac:	mov	r8, r3
   53ab0:	bl	1e638 <_start@@Base+0xb288>
   53ab4:	lsr	r4, r4, #11
   53ab8:	subs	r9, r0, #0
   53abc:	beq	53ad4 <lua_gethookcount@@Base+0x454>
   53ac0:	add	r1, sp, #16
   53ac4:	mov	r0, r8
   53ac8:	bl	1e638 <_start@@Base+0xb288>
   53acc:	subs	r3, r0, #0
   53ad0:	bne	53b54 <lua_gethookcount@@Base+0x4d4>
   53ad4:	ldr	r5, [r7, #8]
   53ad8:	mov	r2, r4
   53adc:	mov	r0, r5
   53ae0:	mov	r1, r6
   53ae4:	bl	1b010 <_start@@Base+0x7c60>
   53ae8:	ldr	r2, [r0, #4]
   53aec:	mov	r3, r0
   53af0:	cmn	r2, #1
   53af4:	beq	53b10 <lua_gethookcount@@Base+0x490>
   53af8:	ldrd	r0, [r7, #16]
   53afc:	ldr	r2, [pc, #112]	; 53b74 <lua_gethookcount@@Base+0x4f4>
   53b00:	stm	sp, {r6, r8}
   53b04:	bl	1b0a8 <_start@@Base+0x7cf8>
   53b08:	add	sp, sp, #28
   53b0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   53b10:	mov	r2, r4
   53b14:	mov	r0, r5
   53b18:	mov	r1, r8
   53b1c:	bl	1b010 <_start@@Base+0x7c60>
   53b20:	ldr	r2, [r0, #4]
   53b24:	mov	r3, r0
   53b28:	cmn	r2, #1
   53b2c:	bne	53af8 <lua_gethookcount@@Base+0x478>
   53b30:	add	r1, sp, #8
   53b34:	mov	r0, r6
   53b38:	bl	1e638 <_start@@Base+0xb288>
   53b3c:	ldr	r2, [pc, #52]	; 53b78 <lua_gethookcount@@Base+0x4f8>
   53b40:	cmp	r0, #0
   53b44:	movne	r1, r8
   53b48:	moveq	r1, r6
   53b4c:	mov	r0, r7
   53b50:	bl	13114 <pclose@plt+0x78>
   53b54:	sub	r0, r4, #10
   53b58:	vldr	d1, [r3]
   53b5c:	vldr	d0, [r9]
   53b60:	bl	53990 <lua_gethookcount@@Base+0x310>
   53b64:	mov	r0, #0
   53b68:	vstr	d0, [r5]
   53b6c:	b	53b08 <lua_gethookcount@@Base+0x488>
   53b70:	andeq	pc, r6, ip, ror r0	; <UNPREDICTABLE>
   53b74:	andeq	fp, r6, r0, asr #31
   53b78:	muleq	r0, r9, r1
   53b7c:	ldrh	r1, [r0, #130]	; 0x82
   53b80:	ldr	r2, [r0, #16]
   53b84:	push	{r4, r5, lr}
   53b88:	vpush	{d8}
   53b8c:	add	r3, r2, r1, lsl #3
   53b90:	mov	r4, r0
   53b94:	ldrb	r5, [r3, #5]
   53b98:	sub	sp, sp, #12
   53b9c:	cmp	r5, #28
   53ba0:	beq	53bc0 <lua_gethookcount@@Base+0x540>
   53ba4:	cmp	r5, #23
   53ba8:	beq	53c2c <lua_gethookcount@@Base+0x5ac>
   53bac:	mov	r3, #0
   53bb0:	mov	r0, r3
   53bb4:	add	sp, sp, #12
   53bb8:	vpop	{d8}
   53bbc:	pop	{r4, r5, pc}
   53bc0:	vldr	d8, [r3, #8]
   53bc4:	ldrb	r0, [r0, #125]	; 0x7d
   53bc8:	vldr	d1, [r4, #152]	; 0x98
   53bcc:	vmov.f64	d0, d8
   53bd0:	sub	r0, r0, #41	; 0x29
   53bd4:	bl	53990 <lua_gethookcount@@Base+0x310>
   53bd8:	vcmp.f64	d8, d0
   53bdc:	vstr	d0, [sp]
   53be0:	vmrs	APSR_nzcv, fpscr
   53be4:	beq	53c18 <lua_gethookcount@@Base+0x598>
   53be8:	ldrb	r3, [r4, #132]	; 0x84
   53bec:	tst	r3, #64	; 0x40
   53bf0:	bne	53bac <lua_gethookcount@@Base+0x52c>
   53bf4:	ldrh	r0, [r4, #128]	; 0x80
   53bf8:	ldrd	r2, [sp]
   53bfc:	mov	r1, r5
   53c00:	strh	r0, [r4, #120]	; 0x78
   53c04:	mov	r0, r4
   53c08:	bl	28dc0 <luaL_where@@Base+0x8cbc>
   53c0c:	mov	r3, #1
   53c10:	strh	r0, [r4, #122]	; 0x7a
   53c14:	b	53bb0 <lua_gethookcount@@Base+0x530>
   53c18:	ldrh	r3, [r4, #120]	; 0x78
   53c1c:	mov	r0, r3
   53c20:	add	sp, sp, #12
   53c24:	vpop	{d8}
   53c28:	pop	{r4, r5, pc}
   53c2c:	ldr	r5, [r2, r1, lsl #3]
   53c30:	ldrb	r2, [r0, #125]	; 0x7d
   53c34:	ldr	r1, [r4, #144]	; 0x90
   53c38:	mov	r0, r5
   53c3c:	bl	1abbc <_start@@Base+0x780c>
   53c40:	cmp	r5, r0
   53c44:	beq	53c18 <lua_gethookcount@@Base+0x598>
   53c48:	ldrb	r3, [r4, #132]	; 0x84
   53c4c:	tst	r3, #64	; 0x40
   53c50:	bne	53bac <lua_gethookcount@@Base+0x52c>
   53c54:	ldrh	r3, [r4, #128]	; 0x80
   53c58:	mov	r1, r0
   53c5c:	mov	r0, r4
   53c60:	strh	r3, [r4, #120]	; 0x78
   53c64:	bl	26ccc <luaL_where@@Base+0x6bc8>
   53c68:	mov	r3, #1
   53c6c:	strh	r0, [r4, #122]	; 0x7a
   53c70:	b	53bb0 <lua_gethookcount@@Base+0x530>
   53c74:	push	{r4, lr}
   53c78:	mov	r4, r0
   53c7c:	ldrb	r0, [r0, #125]	; 0x7d
   53c80:	vldr	s15, [r4, #144]	; 0x90
   53c84:	sub	r0, r0, #54	; 0x36
   53c88:	vcvt.f64.s32	d1, s15
   53c8c:	vldr	s15, [r4, #128]	; 0x80
   53c90:	vcvt.f64.s32	d0, s15
   53c94:	bl	53990 <lua_gethookcount@@Base+0x310>
   53c98:	vcvt.s32.f64	s15, d0
   53c9c:	vcvt.f64.s32	d6, s15
   53ca0:	vcmp.f64	d6, d0
   53ca4:	vmrs	APSR_nzcv, fpscr
   53ca8:	moveq	r0, #2
   53cac:	vstreq	s15, [r4, #120]	; 0x78
   53cb0:	movne	r0, #3
   53cb4:	pop	{r4, pc}
   53cb8:	vldr	d1, [r0, #136]	; 0x88
   53cbc:	push	{r4, lr}
   53cc0:	mov	r4, r0
   53cc4:	ldrb	r0, [r0, #125]	; 0x7d
   53cc8:	vmov.f64	d0, d1
   53ccc:	sub	r0, r0, #41	; 0x29
   53cd0:	bl	53990 <lua_gethookcount@@Base+0x310>
   53cd4:	mov	r0, r4
   53cd8:	mov	r1, #28
   53cdc:	pop	{r4, lr}
   53ce0:	vmov	r2, r3, d0
   53ce4:	b	28dc0 <luaL_where@@Base+0x8cbc>
   53ce8:	push	{r4, lr}
   53cec:	mov	r4, r0
   53cf0:	ldrb	r0, [r0, #125]	; 0x7d
   53cf4:	vldr	d1, [r4, #152]	; 0x98
   53cf8:	vldr	d0, [r4, #136]	; 0x88
   53cfc:	sub	r0, r0, #41	; 0x29
   53d00:	bl	53990 <lua_gethookcount@@Base+0x310>
   53d04:	mov	r0, r4
   53d08:	mov	r1, #28
   53d0c:	pop	{r4, lr}
   53d10:	vmov	r2, r3, d0
   53d14:	b	28dc0 <luaL_where@@Base+0x8cbc>
   53d18:	ldr	r3, [r0, #264]	; 0x108
   53d1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   53d20:	cmp	r3, #0
   53d24:	sub	sp, sp, #164	; 0xa4
   53d28:	mov	r4, r0
   53d2c:	bne	54408 <lua_gethookcount@@Base+0xd88>
   53d30:	ldrb	r3, [r4, #113]	; 0x71
   53d34:	cmp	r3, #0
   53d38:	bne	53f30 <lua_gethookcount@@Base+0x8b0>
   53d3c:	ldrb	r3, [r4, #115]	; 0x73
   53d40:	cmp	r3, #0
   53d44:	subne	r3, r3, #1
   53d48:	strbne	r3, [r4, #115]	; 0x73
   53d4c:	bne	53f04 <lua_gethookcount@@Base+0x884>
   53d50:	ldr	r3, [r4, #184]	; 0xb8
   53d54:	ldr	sl, [r4, #84]	; 0x54
   53d58:	cmp	r3, #0
   53d5c:	bne	53d74 <lua_gethookcount@@Base+0x6f4>
   53d60:	ldr	r3, [r4, #160]	; 0xa0
   53d64:	ldr	r2, [r4, #164]	; 0xa4
   53d68:	sub	r3, sl, r3
   53d6c:	cmp	r3, r2
   53d70:	bcs	56388 <lua_gethookcount@@Base+0x2d08>
   53d74:	ldr	r3, [r4, #2360]	; 0x938
   53d78:	cmp	r3, #0
   53d7c:	bne	53f54 <lua_gethookcount@@Base+0x8d4>
   53d80:	ldr	fp, [sl]
   53d84:	ldr	r0, [pc, #3860]	; 54ca0 <lua_gethookcount@@Base+0x1620>
   53d88:	ldr	r2, [r4, #80]	; 0x50
   53d8c:	uxtb	r7, fp
   53d90:	lsr	r9, fp, #8
   53d94:	lsl	r1, r7, #1
   53d98:	ldr	r5, [r2, #16]
   53d9c:	ldrh	r6, [r0, r1]
   53da0:	mov	r3, #0
   53da4:	uxtb	r1, r9
   53da8:	and	r2, r6, #7
   53dac:	cmp	r2, #3
   53db0:	mov	r0, r1
   53db4:	str	r1, [sp, #16]
   53db8:	str	r2, [sp, #12]
   53dbc:	str	r3, [sp, #80]	; 0x50
   53dc0:	beq	53f0c <lua_gethookcount@@Base+0x88c>
   53dc4:	ldr	r9, [sp, #16]
   53dc8:	lsr	r0, fp, #16
   53dcc:	lsr	r8, r6, #3
   53dd0:	ands	r8, r8, #15
   53dd4:	lsr	r1, fp, #24
   53dd8:	uxtb	fp, r0
   53ddc:	beq	53e14 <lua_gethookcount@@Base+0x794>
   53de0:	cmp	r8, #3
   53de4:	movne	r0, fp
   53de8:	movne	r8, r1
   53dec:	bne	53e14 <lua_gethookcount@@Base+0x794>
   53df0:	lsl	r3, r1, #3
   53df4:	ldr	r0, [r4, #96]	; 0x60
   53df8:	ldrd	r2, [r3, r5]
   53dfc:	strd	r2, [sp, #32]
   53e00:	ldr	r8, [r0, r1, lsl #2]
   53e04:	cmp	r8, #0
   53e08:	beq	543a0 <lua_gethookcount@@Base+0xd20>
   53e0c:	mov	r0, fp
   53e10:	str	r8, [sp, #72]	; 0x48
   53e14:	lsr	r3, r6, #7
   53e18:	and	r3, r3, #15
   53e1c:	sub	r3, r3, #3
   53e20:	cmp	r3, #7
   53e24:	ldrls	pc, [pc, r3, lsl #2]
   53e28:	b	54210 <lua_gethookcount@@Base+0xb90>
   53e2c:	andeq	r4, r5, r0, ror #3
   53e30:	andeq	r4, r5, r0, lsl r2
   53e34:	andeq	r4, r5, r0, lsl r2
   53e38:	andeq	r4, r5, r0, lsl r2
   53e3c:	andeq	r4, r5, r0, lsl r2
   53e40:	andeq	r4, r5, r4, asr #3
   53e44:	andeq	r4, r5, r8, lsl #3
   53e48:	andeq	r3, r5, r8, asr #31
   53e4c:	mov	r5, r0
   53e50:	ldr	r3, [r4, #96]	; 0x60
   53e54:	sub	r2, r9, #-1073741821	; 0xc0000003
   53e58:	ldr	r0, [r3, r2, lsl #2]
   53e5c:	lsl	r6, r2, #2
   53e60:	cmp	r0, #0
   53e64:	beq	558d4 <lua_gethookcount@@Base+0x2254>
   53e68:	add	r3, r3, r6
   53e6c:	ldr	r1, [r3, #4]
   53e70:	str	r0, [r3, #12]
   53e74:	cmp	r1, #0
   53e78:	beq	558b8 <lua_gethookcount@@Base+0x2238>
   53e7c:	ldr	r2, [r3, #8]
   53e80:	str	r1, [r3, #16]
   53e84:	cmp	r2, #0
   53e88:	beq	5588c <lua_gethookcount@@Base+0x220c>
   53e8c:	ldr	r0, [r4, #80]	; 0x50
   53e90:	lsl	r1, r9, #3
   53e94:	str	r2, [r3, #20]
   53e98:	ldr	ip, [r0, #16]
   53e9c:	mov	r3, r1
   53ea0:	add	r0, ip, r1
   53ea4:	sub	r2, r5, #1
   53ea8:	ldrd	r6, [r0, #-24]	; 0xffffffe8
   53eac:	mov	r1, r9
   53eb0:	strd	r6, [ip, r3]
   53eb4:	ldrd	r6, [r0, #-16]
   53eb8:	ldrd	sl, [r0, #-8]
   53ebc:	strd	r6, [r0, #8]
   53ec0:	strd	sl, [r0, #16]
   53ec4:	mov	r0, r4
   53ec8:	bl	2d604 <luaL_where@@Base+0xd500>
   53ecc:	ldr	r3, [sp, #12]
   53ed0:	cmp	r5, #0
   53ed4:	sub	r8, r3, #1
   53ed8:	clz	r8, r8
   53edc:	lsr	r8, r8, #5
   53ee0:	moveq	r8, #0
   53ee4:	cmp	r8, #0
   53ee8:	bne	543d4 <lua_gethookcount@@Base+0xd54>
   53eec:	ldr	r3, [r4, #1512]	; 0x5e8
   53ef0:	ldr	r2, [r4, #8]
   53ef4:	add	r3, r3, #32768	; 0x8000
   53ef8:	add	r3, r3, #1
   53efc:	cmp	r2, r3
   53f00:	bhi	55374 <lua_gethookcount@@Base+0x1cf4>
   53f04:	add	sp, sp, #164	; 0xa4
   53f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   53f0c:	lsl	r3, r1, #3
   53f10:	ldr	r1, [r4, #96]	; 0x60
   53f14:	ldrd	r2, [r3, r5]
   53f18:	strd	r2, [sp, #48]	; 0x30
   53f1c:	ldr	r9, [r1, r0, lsl #2]
   53f20:	cmp	r9, #0
   53f24:	beq	543f4 <lua_gethookcount@@Base+0xd74>
   53f28:	str	r9, [sp, #80]	; 0x50
   53f2c:	b	53dc8 <lua_gethookcount@@Base+0x748>
   53f30:	mov	r3, #0
   53f34:	strb	r3, [r4, #113]	; 0x71
   53f38:	mov	r0, r4
   53f3c:	bl	1dfe0 <_start@@Base+0xac30>
   53f40:	mov	r0, r4
   53f44:	bl	2e158 <luaL_where@@Base+0xe054>
   53f48:	mov	r3, #1
   53f4c:	strb	r3, [r4, #112]	; 0x70
   53f50:	b	53d3c <lua_gethookcount@@Base+0x6bc>
   53f54:	ldr	r0, [r4, #92]	; 0x5c
   53f58:	cmp	r0, #0
   53f5c:	beq	53d80 <lua_gethookcount@@Base+0x700>
   53f60:	ldr	r2, [r4, #2352]	; 0x930
   53f64:	str	r0, [r4, #2352]	; 0x930
   53f68:	cmp	r0, r2
   53f6c:	cmpne	r2, #0
   53f70:	mvnne	r3, #0
   53f74:	strne	r3, [r4, #2356]	; 0x934
   53f78:	bne	53fa4 <lua_gethookcount@@Base+0x924>
   53f7c:	cmp	r3, #108	; 0x6c
   53f80:	bne	53d80 <lua_gethookcount@@Base+0x700>
   53f84:	add	r1, r0, #64	; 0x40
   53f88:	sub	r1, sl, r1
   53f8c:	asr	r1, r1, #2
   53f90:	bl	14c1c <_start@@Base+0x186c>
   53f94:	ldr	r3, [r4, #2356]	; 0x934
   53f98:	cmp	r0, r3
   53f9c:	str	r0, [r4, #2356]	; 0x934
   53fa0:	beq	53d80 <lua_gethookcount@@Base+0x700>
   53fa4:	mov	r2, #0
   53fa8:	mov	r3, #5504	; 0x1580
   53fac:	str	r2, [r4, #120]	; 0x78
   53fb0:	strh	r3, [r4, #124]	; 0x7c
   53fb4:	mov	r0, r4
   53fb8:	bl	27498 <luaL_where@@Base+0x7394>
   53fbc:	mov	r0, r4
   53fc0:	bl	2e158 <luaL_where@@Base+0xe054>
   53fc4:	b	53d80 <lua_gethookcount@@Base+0x700>
   53fc8:	ldr	r2, [r4, #92]	; 0x5c
   53fcc:	mvn	r0, r0
   53fd0:	mvn	r3, #4
   53fd4:	ldr	ip, [r2, #16]
   53fd8:	mov	r2, #4
   53fdc:	ldr	r1, [ip, r0, lsl #2]
   53fe0:	mov	r0, r4
   53fe4:	str	r1, [sp, #40]	; 0x28
   53fe8:	str	r3, [sp, #44]	; 0x2c
   53fec:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   53ff0:	mov	r5, r0
   53ff4:	str	r0, [sp, #76]	; 0x4c
   53ff8:	cmp	r7, #96	; 0x60
   53ffc:	ldrls	pc, [pc, r7, lsl #2]
   54000:	b	545c0 <lua_gethookcount@@Base+0xf40>
   54004:	andeq	r4, r5, r8, ror #20
   54008:	andeq	r4, r5, r8, ror #20
   5400c:	andeq	r4, r5, r8, ror #20
   54010:	andeq	r4, r5, r8, ror #20
   54014:	andeq	r4, r5, r8, lsr #18
   54018:	andeq	r4, r5, r8, lsr #18
   5401c:	andeq	r4, r5, r8, lsr #18
   54020:	andeq	r4, r5, r8, lsr #18
   54024:	andeq	r4, r5, r8, lsr #18
   54028:	andeq	r4, r5, r8, lsr #18
   5402c:	andeq	r4, r5, r8, lsr #18
   54030:	andeq	r4, r5, r8, lsr #18
   54034:	andeq	r4, r5, ip, ror #27
   54038:	andeq	r4, r5, ip, ror #27
   5403c:	andeq	r5, r5, r8, lsl r3
   54040:	andeq	r5, r5, r8, lsl r3
   54044:	andeq	r4, r5, r8, lsr #28
   54048:	andeq	r4, r5, r8, lsr #28
   5404c:			; <UNDEFINED> instruction: 0x00054db4
   54050:			; <UNDEFINED> instruction: 0x000543b4
   54054:	andeq	r4, r5, ip, asr #24
   54058:	andeq	r4, r5, r4, lsl sp
   5405c:	andeq	r4, r5, r8, ror r6
   54060:	andeq	r4, r5, r8, ror r6
   54064:	andeq	r4, r5, r8, ror r6
   54068:	andeq	r4, r5, r8, ror r6
   5406c:			; <UNDEFINED> instruction: 0x000546b4
   54070:	andeq	r4, r5, r4, lsl ip
   54074:	andeq	r4, r5, r4, lsl ip
   54078:	andeq	r4, r5, r4, lsl ip
   5407c:	andeq	r4, r5, r4, lsl ip
   54080:	andeq	r4, r5, r4, lsl ip
   54084:	andeq	r4, r5, r8, ror r6
   54088:	andeq	r4, r5, r8, ror r6
   5408c:	andeq	r4, r5, r8, ror r6
   54090:	andeq	r4, r5, r8, ror r6
   54094:			; <UNDEFINED> instruction: 0x000546b4
   54098:	ldrdeq	r4, [r5], -ip
   5409c:	andeq	r4, r5, r4, asr #23
   540a0:	andeq	r3, r5, ip, asr #29
   540a4:	strdeq	r5, [r5], -r8
   540a8:	andeq	r5, r5, r4, ror #5
   540ac:	andeq	r3, r5, ip, asr #29
   540b0:	andeq	r3, r5, ip, asr #29
   540b4:	andeq	r4, r5, r4, lsl #15
   540b8:	andeq	r5, r5, r8, lsl r0
   540bc:	andeq	r5, r5, ip, asr #5
   540c0:	andeq	r5, r5, ip, asr #5
   540c4:	andeq	r5, r5, ip, asr #5
   540c8:	andeq	r5, r5, ip, asr #5
   540cc:	muleq	r5, ip, r3
   540d0:	muleq	r5, ip, r3
   540d4:	muleq	r5, r0, r2
   540d8:	andeq	r5, r5, ip, asr #4
   540dc:	strdeq	r4, [r5], -ip
   540e0:	strdeq	r4, [r5], -ip
   540e4:	andeq	r4, r5, r0, asr #12
   540e8:	andeq	r4, r5, r0, asr #12
   540ec:	andeq	r4, r5, r4, lsr #12
   540f0:	andeq	r4, r5, ip, asr r7
   540f4:	andeq	r4, r5, r0, asr #12
   540f8:	andeq	r4, r5, r0, asr #12
   540fc:	andeq	r4, r5, r4, lsr #12
   54100:	andeq	r5, r5, r0, ror r1
   54104:	andeq	r4, r5, ip, asr r7
   54108:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   5410c:	andeq	r4, r5, ip, lsl #12
   54110:	ldrdeq	r4, [r5], -ip
   54114:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   54118:	andeq	r3, r5, r0, asr lr
   5411c:	muleq	r5, ip, r3
   54120:	andeq	r4, r5, r4, lsr #30
   54124:	muleq	r5, ip, r3
   54128:	andeq	r4, r5, r4, ror #14
   5412c:	ldrdeq	r4, [r5], -r0
   54130:	ldrdeq	r4, [r5], -r0
   54134:	ldrdeq	r4, [r5], -r0
   54138:	andeq	r4, r5, ip, ror #28
   5413c:	andeq	r5, r5, ip, lsl r1
   54140:	andeq	r5, r5, ip, ror #1
   54144:	andeq	r5, r5, r8, lsl #7
   54148:	andeq	r5, r5, r4, lsl #1
   5414c:	andeq	r5, r5, r0, rrx
   54150:	andeq	r5, r5, r8, lsl #7
   54154:	andeq	r5, r5, r4, lsr r0
   54158:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   5415c:	andeq	r5, r5, r8, lsl #7
   54160:	andeq	r4, r5, r4, asr #29
   54164:	andeq	r5, r5, r0, asr #1
   54168:	andeq	r4, r5, r8, lsr #29
   5416c:	andeq	r5, r5, r8, lsl #7
   54170:	andeq	r4, r5, r4, asr #17
   54174:	andeq	r4, r5, r0, lsl r8
   54178:	andeq	r5, r5, r8, lsl #7
   5417c:	andeq	r3, r5, ip, asr #29
   54180:	andeq	r4, r5, r0, asr #11
   54184:	andeq	r4, r5, r0, asr #11
   54188:	ldr	r2, [r4, #92]	; 0x5c
   5418c:	lsl	r3, r0, #3
   54190:	ldr	r1, [r2, #16]
   54194:	add	ip, r3, r1
   54198:	ldrd	r2, [r3, r1]
   5419c:	strd	r2, [sp, #40]	; 0x28
   541a0:	ldr	r3, [ip, #4]
   541a4:	cmn	r3, #14
   541a8:	beq	5452c <lua_gethookcount@@Base+0xeac>
   541ac:	vldr	d0, [ip]
   541b0:	mov	r0, r4
   541b4:	bl	28e9c <luaL_where@@Base+0x8d98>
   541b8:	mov	r5, r0
   541bc:	str	r5, [sp, #76]	; 0x4c
   541c0:	b	53ff8 <lua_gethookcount@@Base+0x978>
   541c4:	rsb	r5, r0, r0, lsl #24
   541c8:	add	r5, r5, #32512	; 0x7f00
   541cc:	add	r5, r5, #255	; 0xff
   541d0:	mvn	r0, r0
   541d4:	str	r5, [sp, #76]	; 0x4c
   541d8:	str	r0, [sp, #44]	; 0x2c
   541dc:	b	53ff8 <lua_gethookcount@@Base+0x978>
   541e0:	lsl	r3, r0, #3
   541e4:	ldr	r1, [r4, #96]	; 0x60
   541e8:	ldrd	r2, [r3, r5]
   541ec:	strd	r2, [sp, #40]	; 0x28
   541f0:	ldr	r5, [r1, r0, lsl #2]
   541f4:	cmp	r5, #0
   541f8:	bne	541bc <lua_gethookcount@@Base+0xb3c>
   541fc:	mov	r1, r0
   54200:	mov	r0, r4
   54204:	bl	25b34 <luaL_where@@Base+0x5a30>
   54208:	mov	r5, r0
   5420c:	b	541bc <lua_gethookcount@@Base+0xb3c>
   54210:	cmp	r7, #96	; 0x60
   54214:	ldrls	pc, [pc, r7, lsl #2]
   54218:	b	545bc <lua_gethookcount@@Base+0xf3c>
   5421c:	andeq	r4, r5, r4, ror #20
   54220:	andeq	r4, r5, r4, ror #20
   54224:	andeq	r4, r5, r4, ror #20
   54228:	andeq	r4, r5, r4, ror #20
   5422c:	andeq	r4, r5, r4, lsr #18
   54230:	andeq	r4, r5, r4, lsr #18
   54234:	andeq	r4, r5, r4, lsr #18
   54238:	andeq	r4, r5, r4, lsr #18
   5423c:	andeq	r4, r5, r4, lsr #18
   54240:	andeq	r4, r5, r4, lsr #18
   54244:	andeq	r4, r5, r4, lsr #18
   54248:	andeq	r4, r5, r4, lsr #18
   5424c:	andeq	r4, r5, r8, ror #27
   54250:	andeq	r4, r5, r8, ror #27
   54254:	andeq	r5, r5, r4, ror #6
   54258:	andeq	r5, r5, r4, ror #6
   5425c:	andeq	r4, r5, r4, lsr #28
   54260:	andeq	r4, r5, r4, lsr #28
   54264:			; <UNDEFINED> instruction: 0x00054db0
   54268:			; <UNDEFINED> instruction: 0x000543b0
   5426c:	andeq	r4, r5, r8, asr #24
   54270:	andeq	r4, r5, r0, lsl sp
   54274:	andeq	r4, r5, r4, ror r6
   54278:	andeq	r4, r5, r4, ror r6
   5427c:	andeq	r4, r5, r4, ror r6
   54280:	andeq	r4, r5, r4, ror r6
   54284:			; <UNDEFINED> instruction: 0x000546b0
   54288:	andeq	r4, r5, r0, lsl ip
   5428c:	andeq	r4, r5, r0, lsl ip
   54290:	andeq	r4, r5, r0, lsl ip
   54294:	andeq	r4, r5, r0, lsl ip
   54298:	andeq	r4, r5, r0, lsl ip
   5429c:	andeq	r4, r5, r4, ror r6
   542a0:	andeq	r4, r5, r4, ror r6
   542a4:	andeq	r4, r5, r4, ror r6
   542a8:	andeq	r4, r5, r4, ror r6
   542ac:			; <UNDEFINED> instruction: 0x000546b0
   542b0:	ldrdeq	r4, [r5], -r8
   542b4:	andeq	r4, r5, r0, asr #23
   542b8:	andeq	r5, r5, r4, asr #6
   542bc:	strdeq	r5, [r5], -r4
   542c0:	andeq	r5, r5, r0, ror #5
   542c4:	andeq	r5, r5, r4, asr #6
   542c8:	andeq	r5, r5, r4, asr #6
   542cc:	andeq	r4, r5, r0, lsl #15
   542d0:	andeq	r5, r5, r4, lsl r0
   542d4:	andeq	r5, r5, r8, asr #5
   542d8:	andeq	r5, r5, r8, asr #5
   542dc:	andeq	r5, r5, r8, asr #5
   542e0:	andeq	r5, r5, r8, asr #5
   542e4:	muleq	r5, ip, r3
   542e8:	muleq	r5, ip, r3
   542ec:	andeq	r5, r5, ip, lsl #5
   542f0:	andeq	r5, r5, r8, asr #4
   542f4:	strdeq	r4, [r5], -ip
   542f8:	strdeq	r4, [r5], -ip
   542fc:	andeq	r4, r5, r0, asr #12
   54300:	andeq	r4, r5, r0, asr #12
   54304:	andeq	r4, r5, r0, lsr #12
   54308:	andeq	r4, r5, ip, asr r7
   5430c:	andeq	r4, r5, r0, asr #12
   54310:	andeq	r4, r5, r0, asr #12
   54314:	andeq	r4, r5, r0, lsr #12
   54318:	andeq	r5, r5, ip, ror #2
   5431c:	andeq	r4, r5, ip, asr r7
   54320:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   54324:	andeq	r4, r5, r8, lsl #12
   54328:	ldrdeq	r4, [r5], -ip
   5432c:	strdeq	r4, [r5], -r0
   54330:	andeq	r3, r5, ip, asr #28
   54334:	muleq	r5, ip, r3
   54338:	andeq	r4, r5, r0, lsr #30
   5433c:	muleq	r5, ip, r3
   54340:	andeq	r4, r5, r4, ror #14
   54344:	andeq	r4, r5, ip, asr #11
   54348:	andeq	r4, r5, ip, asr #11
   5434c:	andeq	r4, r5, ip, asr #11
   54350:	andeq	r4, r5, r8, ror #28
   54354:	andeq	r5, r5, r8, lsl r1
   54358:	andeq	r5, r5, r8, ror #1
   5435c:	andeq	r5, r5, r8, lsl #7
   54360:	andeq	r5, r5, r0, lsl #1
   54364:	andeq	r5, r5, ip, asr r0
   54368:	andeq	r5, r5, r8, lsl #7
   5436c:	andeq	r5, r5, r0, lsr r0
   54370:	strdeq	r4, [r5], -r0
   54374:	andeq	r5, r5, r8, lsl #7
   54378:	andeq	r4, r5, r0, asr #29
   5437c:	strheq	r5, [r5], -ip
   54380:	andeq	r4, r5, r4, lsr #29
   54384:	andeq	r5, r5, r8, lsl #7
   54388:	andeq	r4, r5, r0, asr #17
   5438c:	andeq	r4, r5, ip, lsl #16
   54390:	andeq	r5, r5, r8, lsl #7
   54394:	andeq	r5, r5, r4, asr #6
   54398:			; <UNDEFINED> instruction: 0x000545bc
   5439c:			; <UNDEFINED> instruction: 0x000545bc
   543a0:	mov	r0, r4
   543a4:	bl	25b34 <luaL_where@@Base+0x5a30>
   543a8:	mov	r8, r0
   543ac:	b	53e0c <lua_gethookcount@@Base+0x78c>
   543b0:	mov	r5, r0
   543b4:	lsr	r5, r5, #24
   543b8:	and	r5, r5, #31
   543bc:	cmp	r5, #1
   543c0:	bls	55824 <lua_gethookcount@@Base+0x21a4>
   543c4:	ldr	r3, [sp, #12]
   543c8:	cmp	r3, #1
   543cc:	bne	53eec <lua_gethookcount@@Base+0x86c>
   543d0:	ldr	r5, [pc, #2252]	; 54ca4 <lua_gethookcount@@Base+0x1624>
   543d4:	ldr	r3, [r4, #96]	; 0x60
   543d8:	str	r5, [r3, r9, lsl #2]
   543dc:	ldr	r3, [r4, #104]	; 0x68
   543e0:	cmp	r3, r9
   543e4:	bhi	53eec <lua_gethookcount@@Base+0x86c>
   543e8:	add	r3, r9, #1
   543ec:	str	r3, [r4, #104]	; 0x68
   543f0:	b	53eec <lua_gethookcount@@Base+0x86c>
   543f4:	mov	r1, r0
   543f8:	mov	r0, r4
   543fc:	bl	25b34 <luaL_where@@Base+0x5a30>
   54400:	mov	r9, r0
   54404:	b	53f28 <lua_gethookcount@@Base+0x8a8>
   54408:	sub	r3, r3, #1
   5440c:	cmp	r3, #5
   54410:	ldrls	pc, [pc, r3, lsl #2]
   54414:	b	54520 <lua_gethookcount@@Base+0xea0>
   54418:	andeq	r4, r5, r0, lsr r4
   5441c:	andeq	r4, r5, r8, asr r4
   54420:	andeq	r4, r5, r8, asr r4
   54424:			; <UNDEFINED> instruction: 0x000544b8
   54428:	andeq	r4, r5, r4, asr r5
   5442c:	andeq	r4, r5, r0, asr #10
   54430:	ldr	r3, [r0, #-256]	; 0xffffff00
   54434:	ldr	r2, [r0, #-244]	; 0xffffff0c
   54438:	mov	r1, r3
   5443c:	ldr	r3, [r3]
   54440:	cmn	r2, #3
   54444:	movls	r2, #0
   54448:	movhi	r2, #1
   5444c:	and	r3, r3, #1
   54450:	eor	r2, r2, r3
   54454:	bl	1e050 <_start@@Base+0xaca0>
   54458:	ldr	r3, [r4, #-244]	; 0xffffff0c
   5445c:	cmn	r3, #3
   54460:	bls	544b0 <lua_gethookcount@@Base+0xe30>
   54464:	ldrb	r3, [r4, #125]	; 0x7d
   54468:	ldr	r2, [r4, #264]	; 0x108
   5446c:	eor	r3, r3, #1
   54470:	cmp	r2, #3
   54474:	strb	r3, [r4, #125]	; 0x7d
   54478:	bne	544b0 <lua_gethookcount@@Base+0xe30>
   5447c:	ldrh	r3, [r4, #24]
   54480:	ldr	r2, [r4, #28]
   54484:	ldr	r1, [r4, #32]
   54488:	sub	r3, r3, #-536870911	; 0xe0000001
   5448c:	lsl	r3, r3, #3
   54490:	add	r0, r2, r3
   54494:	ldrh	r3, [r2, r3]
   54498:	ldrb	r2, [r0, #6]
   5449c:	add	r3, r3, r2
   544a0:	sub	r3, r3, #-1073741823	; 0xc0000001
   544a4:	ldr	r2, [r1, r3, lsl #2]
   544a8:	sub	r2, r2, #1
   544ac:	str	r2, [r1, r3, lsl #2]
   544b0:	mov	r0, r4
   544b4:	bl	27498 <luaL_where@@Base+0x7394>
   544b8:	ldr	r3, [r4, #-244]	; 0xffffff0c
   544bc:	cmn	r3, #3
   544c0:	bls	54520 <lua_gethookcount@@Base+0xea0>
   544c4:	ldr	r3, [r4, #80]	; 0x50
   544c8:	ldr	ip, [r4, #104]	; 0x68
   544cc:	cmp	ip, #0
   544d0:	ldr	r5, [r3, #16]
   544d4:	beq	54520 <lua_gethookcount@@Base+0xea0>
   544d8:	ldr	r2, [r4, #96]	; 0x60
   544dc:	ldr	lr, [pc, #2048]	; 54ce4 <lua_gethookcount@@Base+0x1664>
   544e0:	mov	r3, #0
   544e4:	b	544f4 <lua_gethookcount@@Base+0xe74>
   544e8:	add	r3, r3, #1
   544ec:	cmp	r3, ip
   544f0:	beq	54520 <lua_gethookcount@@Base+0xea0>
   544f4:	mov	r1, r2
   544f8:	add	r2, r2, #4
   544fc:	ldr	r0, [r1]
   54500:	cmp	r0, lr
   54504:	bne	544e8 <lua_gethookcount@@Base+0xe68>
   54508:	add	r0, r5, r3, lsl #3
   5450c:	ldr	r0, [r0, #4]
   54510:	cmn	r0, #2
   54514:	bne	544e8 <lua_gethookcount@@Base+0xe68>
   54518:	ldr	r3, [pc, #1924]	; 54ca4 <lua_gethookcount@@Base+0x1624>
   5451c:	str	r3, [r1]
   54520:	mov	r3, #0
   54524:	str	r3, [r4, #264]	; 0x108
   54528:	b	53d30 <lua_gethookcount@@Base+0x6b0>
   5452c:	ldr	r1, [r1, r0, lsl #3]
   54530:	mov	r0, r4
   54534:	bl	26ccc <luaL_where@@Base+0x6bc8>
   54538:	mov	r5, r0
   5453c:	b	541bc <lua_gethookcount@@Base+0xb3c>
   54540:	ldr	r3, [r0, #84]	; 0x54
   54544:	ldrb	r3, [r3]
   54548:	cmp	r3, #96	; 0x60
   5454c:	bhi	53f04 <lua_gethookcount@@Base+0x884>
   54550:	b	54520 <lua_gethookcount@@Base+0xea0>
   54554:	ldr	r3, [r0, #80]	; 0x50
   54558:	ldr	r2, [r0, #104]	; 0x68
   5455c:	cmp	r2, #0
   54560:	ldr	r6, [r3, #16]
   54564:	beq	54520 <lua_gethookcount@@Base+0xea0>
   54568:	ldr	r9, [pc, #1948]	; 54d0c <lua_gethookcount@@Base+0x168c>
   5456c:	mov	r5, #0
   54570:	b	54584 <lua_gethookcount@@Base+0xf04>
   54574:	add	r5, r5, #1
   54578:	cmp	r2, r5
   5457c:	add	r6, r6, #8
   54580:	bls	54520 <lua_gethookcount@@Base+0xea0>
   54584:	ldr	r7, [r4, #96]	; 0x60
   54588:	lsl	r8, r5, #2
   5458c:	ldr	r3, [r7, r5, lsl #2]
   54590:	cmp	r3, r9
   54594:	bne	54574 <lua_gethookcount@@Base+0xef4>
   54598:	ldr	r3, [r6, #4]
   5459c:	cmn	r3, #1
   545a0:	beq	54574 <lua_gethookcount@@Base+0xef4>
   545a4:	mov	r1, r6
   545a8:	mov	r0, r4
   545ac:	bl	2a7b8 <luaL_where@@Base+0xa6b4>
   545b0:	str	r0, [r7, r8]
   545b4:	ldr	r2, [r4, #104]	; 0x68
   545b8:	b	54574 <lua_gethookcount@@Base+0xef4>
   545bc:	mov	r5, r0
   545c0:	mov	r0, r4
   545c4:	bl	2f2b0 <luaL_where@@Base+0xf1ac>
   545c8:	b	53ecc <lua_gethookcount@@Base+0x84c>
   545cc:	mov	r5, r0
   545d0:	ldr	r3, [r4, #2360]	; 0x938
   545d4:	cmp	r3, #102	; 0x66
   545d8:	beq	55798 <lua_gethookcount@@Base+0x2118>
   545dc:	sub	r2, r5, #1
   545e0:	mov	r1, r9
   545e4:	mov	r0, r4
   545e8:	bl	2ec70 <luaL_where@@Base+0xeb6c>
   545ec:	b	53ecc <lua_gethookcount@@Base+0x84c>
   545f0:	mov	r5, r0
   545f4:	sub	r2, r5, #1
   545f8:	mov	r1, r9
   545fc:	mov	r0, r4
   54600:	bl	2d764 <luaL_where@@Base+0xd660>
   54604:	b	53ecc <lua_gethookcount@@Base+0x84c>
   54608:	mov	r5, r0
   5460c:	sub	r2, r5, #1
   54610:	mov	r1, r9
   54614:	mov	r0, r4
   54618:	bl	2d604 <luaL_where@@Base+0xd500>
   5461c:	b	53ecc <lua_gethookcount@@Base+0x84c>
   54620:	mov	r5, r0
   54624:	mvn	r3, #13
   54628:	mov	r1, r5
   5462c:	mov	r0, r4
   54630:	str	r5, [sp, #40]	; 0x28
   54634:	str	r3, [sp, #44]	; 0x2c
   54638:	bl	26ccc <luaL_where@@Base+0x6bc8>
   5463c:	str	r0, [sp, #76]	; 0x4c
   54640:	mov	r3, #100	; 0x64
   54644:	add	r1, sp, #32
   54648:	mov	r0, r4
   5464c:	str	r3, [sp, #92]	; 0x5c
   54650:	bl	2c388 <luaL_where@@Base+0xc284>
   54654:	mov	r5, r0
   54658:	ldr	r3, [sp, #12]
   5465c:	sub	r8, r3, #1
   54660:	clz	r8, r8
   54664:	lsr	r8, r8, #5
   54668:	cmp	r5, #0
   5466c:	moveq	r8, #0
   54670:	b	53ee4 <lua_gethookcount@@Base+0x864>
   54674:	mov	r5, r0
   54678:	lsr	r3, r8, #24
   5467c:	and	r3, r3, #31
   54680:	sub	r3, r3, #14
   54684:	cmp	r3, #5
   54688:	lsr	r6, r6, #11
   5468c:	bls	553b4 <lua_gethookcount@@Base+0x1d34>
   54690:	and	r3, r8, #520093696	; 0x1f000000
   54694:	cmp	r3, #67108864	; 0x4000000
   54698:	beq	553b4 <lua_gethookcount@@Base+0x1d34>
   5469c:	mov	r2, r6
   546a0:	add	r1, sp, #32
   546a4:	mov	r0, r4
   546a8:	bl	2d9d4 <luaL_where@@Base+0xd8d0>
   546ac:	b	54654 <lua_gethookcount@@Base+0xfd4>
   546b0:	mov	r5, r0
   546b4:	lsr	r3, r8, #24
   546b8:	and	r3, r3, #31
   546bc:	sub	r3, r3, #14
   546c0:	cmp	r3, #5
   546c4:	bls	55508 <lua_gethookcount@@Base+0x1e88>
   546c8:	and	r3, r8, #520093696	; 0x1f000000
   546cc:	cmp	r3, #67108864	; 0x4000000
   546d0:	beq	55508 <lua_gethookcount@@Base+0x1e88>
   546d4:	mov	r2, #14
   546d8:	add	r1, sp, #32
   546dc:	mov	r0, r4
   546e0:	bl	2d9d4 <luaL_where@@Base+0xd8d0>
   546e4:	ldr	r3, [sp, #12]
   546e8:	mov	r5, r0
   546ec:	sub	r8, r3, #1
   546f0:	clz	r8, r8
   546f4:	lsr	r8, r8, #5
   546f8:	b	54668 <lua_gethookcount@@Base+0xfe8>
   546fc:	ldr	r2, [r4, #88]	; 0x58
   54700:	ldr	r3, [r4, #96]	; 0x60
   54704:	mvn	r1, #11
   54708:	ldr	r2, [r2, #8]
   5470c:	str	r1, [sp, #36]	; 0x24
   54710:	str	r2, [sp, #32]
   54714:	ldr	r0, [r3, #-4]
   54718:	cmp	r0, #0
   5471c:	beq	5585c <lua_gethookcount@@Base+0x21dc>
   54720:	ldr	r2, [pc, #1408]	; 54ca8 <lua_gethookcount@@Base+0x1628>
   54724:	mov	r3, #1
   54728:	strh	r0, [r4, #120]	; 0x78
   5472c:	strh	r2, [r4, #124]	; 0x7c
   54730:	strh	r3, [r4, #122]	; 0x7a
   54734:	mov	r0, r4
   54738:	bl	27498 <luaL_where@@Base+0x7394>
   5473c:	mov	r3, #100	; 0x64
   54740:	add	r1, sp, #32
   54744:	str	r3, [sp, #92]	; 0x5c
   54748:	str	r0, [sp, #72]	; 0x48
   5474c:	mov	r0, r4
   54750:	bl	2c388 <luaL_where@@Base+0xc284>
   54754:	mov	r5, r0
   54758:	b	54658 <lua_gethookcount@@Base+0xfd8>
   5475c:	mov	r3, #0
   54760:	b	54644 <lua_gethookcount@@Base+0xfc4>
   54764:	ldr	r3, [r4, #80]	; 0x50
   54768:	ldr	r5, [r3, #20]
   5476c:	ldr	r3, [r3, #16]
   54770:	sub	r5, r5, r3
   54774:	rsb	r5, r9, r5, asr #3
   54778:	add	r5, r5, #1
   5477c:	b	545d0 <lua_gethookcount@@Base+0xf50>
   54780:	mov	r5, r0
   54784:	cmp	r9, r5
   54788:	bhi	547ac <lua_gethookcount@@Base+0x112c>
   5478c:	sub	r3, r9, #-1073741823	; 0xc0000001
   54790:	ldr	r2, [r4, #96]	; 0x60
   54794:	ldr	r1, [pc, #1392]	; 54d0c <lua_gethookcount@@Base+0x168c>
   54798:	add	r3, r2, r3, lsl #2
   5479c:	add	r9, r9, #1
   547a0:	cmp	r9, r5
   547a4:	str	r1, [r3, #4]!
   547a8:	bls	5479c <lua_gethookcount@@Base+0x111c>
   547ac:	ldr	r3, [r4, #104]	; 0x68
   547b0:	ldr	r8, [sp, #12]
   547b4:	cmp	r5, #0
   547b8:	sub	r8, r8, #1
   547bc:	clz	r8, r8
   547c0:	lsr	r8, r8, #5
   547c4:	moveq	r8, #0
   547c8:	cmp	r3, r5
   547cc:	bhi	53ee4 <lua_gethookcount@@Base+0x864>
   547d0:	add	r3, r5, #1
   547d4:	str	r3, [r4, #104]	; 0x68
   547d8:	b	53ee4 <lua_gethookcount@@Base+0x864>
   547dc:	ldr	r3, [r4, #80]	; 0x50
   547e0:	ldr	r5, [r3, #20]
   547e4:	ldr	r3, [r3, #16]
   547e8:	sub	r5, r5, r3
   547ec:	rsb	r5, r9, r5, asr #3
   547f0:	b	545f4 <lua_gethookcount@@Base+0xf74>
   547f4:	ldr	r3, [r4, #80]	; 0x50
   547f8:	ldr	r5, [r3, #20]
   547fc:	ldr	r3, [r3, #16]
   54800:	sub	r5, r5, r3
   54804:	rsb	r5, r9, r5, asr #3
   54808:	b	5460c <lua_gethookcount@@Base+0xf8c>
   5480c:	mov	r5, r0
   54810:	ldr	r1, [r4, #92]	; 0x5c
   54814:	ldrd	r2, [r4, #104]	; 0x68
   54818:	ldrb	r0, [r1, #7]
   5481c:	add	r7, r2, #1
   54820:	add	r3, r7, r3
   54824:	add	r3, r3, r0
   54828:	cmp	r3, #249	; 0xf9
   5482c:	bhi	5652c <lua_gethookcount@@Base+0x2eac>
   54830:	ldr	r0, [r4, #96]	; 0x60
   54834:	add	r3, r2, #1073741824	; 0x40000000
   54838:	ldr	ip, [r0, #-4]
   5483c:	lsl	r8, r3, #2
   54840:	str	ip, [r0, r3, lsl #2]
   54844:	ldrb	ip, [r1, #6]
   54848:	ldr	r3, [r4, #104]	; 0x68
   5484c:	cmp	ip, r3
   54850:	movcs	ip, r3
   54854:	cmp	ip, #0
   54858:	beq	54880 <lua_gethookcount@@Base+0x1200>
   5485c:	sub	r3, r0, #4
   54860:	ldr	r6, [pc, #1188]	; 54d0c <lua_gethookcount@@Base+0x168c>
   54864:	add	r2, r0, r2, lsl #2
   54868:	add	lr, r3, ip, lsl #2
   5486c:	ldr	r1, [r3, #4]!
   54870:	cmp	lr, r3
   54874:	str	r1, [r2, #4]!
   54878:	str	r6, [r3]
   5487c:	bne	5486c <lua_gethookcount@@Base+0x11ec>
   54880:	ldr	r2, [r4, #184]	; 0xb8
   54884:	ldr	r3, [r4, #108]	; 0x6c
   54888:	add	r8, r8, #4
   5488c:	add	r0, r0, r8
   54890:	add	r2, r2, #1
   54894:	add	r7, r3, r7
   54898:	str	r0, [r4, #96]	; 0x60
   5489c:	str	ip, [r4, #104]	; 0x68
   548a0:	mov	r0, r4
   548a4:	str	r2, [r4, #184]	; 0xb8
   548a8:	str	r7, [r4, #108]	; 0x6c
   548ac:	bl	2116c <luaL_where@@Base+0x1068>
   548b0:	mov	r1, #0
   548b4:	mov	r0, r4
   548b8:	bl	2e684 <luaL_where@@Base+0xe580>
   548bc:	b	53ecc <lua_gethookcount@@Base+0x84c>
   548c0:	mov	r5, r0
   548c4:	mov	r0, r4
   548c8:	bl	2116c <luaL_where@@Base+0x1068>
   548cc:	ldr	r3, [r4, #272]	; 0x110
   548d0:	ldr	r8, [sp, #12]
   548d4:	cmp	r5, #0
   548d8:	ldr	r6, [r3, r5, lsl #2]
   548dc:	sub	r8, r8, #1
   548e0:	clz	r8, r8
   548e4:	ldrb	r3, [r6, #7]
   548e8:	lsr	r8, r8, #5
   548ec:	moveq	r8, #0
   548f0:	cmp	r3, #7
   548f4:	beq	55b88 <lua_gethookcount@@Base+0x2508>
   548f8:	ldr	r1, [r4, #84]	; 0x54
   548fc:	ldr	r2, [r4, #2300]	; 0x8fc
   54900:	mov	r3, #0
   54904:	cmp	r1, r2
   54908:	str	r3, [r4, #172]	; 0xac
   5490c:	beq	55838 <lua_gethookcount@@Base+0x21b8>
   54910:	mov	r2, r5
   54914:	mov	r1, #1
   54918:	mov	r0, r4
   5491c:	bl	2e444 <luaL_where@@Base+0xe340>
   54920:	b	53ee4 <lua_gethookcount@@Base+0x864>
   54924:	mov	r5, r0
   54928:	ldr	r8, [sp, #12]
   5492c:	cmp	r5, #0
   54930:	and	r6, r9, #520093696	; 0x1f000000
   54934:	sub	r8, r8, #1
   54938:	clz	r8, r8
   5493c:	lsr	r8, r8, #5
   54940:	moveq	r8, #0
   54944:	cmp	r6, #167772160	; 0xa000000
   54948:	beq	5574c <lua_gethookcount@@Base+0x20cc>
   5494c:	and	r3, r5, #520093696	; 0x1f000000
   54950:	cmp	r3, #167772160	; 0xa000000
   54954:	beq	5574c <lua_gethookcount@@Base+0x20cc>
   54958:	orr	r3, r9, r5
   5495c:	tst	r3, #32768	; 0x8000
   54960:	bne	55b34 <lua_gethookcount@@Base+0x24b4>
   54964:	add	r6, r6, #-184549376	; 0xf5000000
   54968:	tst	r6, #-33554432	; 0xfe000000
   5496c:	bne	53ee4 <lua_gethookcount@@Base+0x864>
   54970:	mov	r0, r4
   54974:	bl	2ec24 <luaL_where@@Base+0xeb20>
   54978:	add	r3, sp, #40	; 0x28
   5497c:	str	r3, [sp]
   54980:	mov	r2, r5
   54984:	add	r3, sp, #48	; 0x30
   54988:	mov	r1, r9
   5498c:	mov	r0, r4
   54990:	bl	27850 <luaL_where@@Base+0x774c>
   54994:	cmp	r0, #2
   54998:	beq	55b6c <lua_gethookcount@@Base+0x24ec>
   5499c:	cmp	r0, #1
   549a0:	bne	53ee4 <lua_gethookcount@@Base+0x864>
   549a4:	ldrd	r2, [sp, #48]	; 0x30
   549a8:	add	r1, sp, #160	; 0xa0
   549ac:	ldr	ip, [sp, #80]	; 0x50
   549b0:	strd	r2, [r1, #-128]!	; 0xffffff80
   549b4:	mov	r0, r4
   549b8:	mov	r2, #4
   549bc:	str	r1, [sp, #12]
   549c0:	str	ip, [sp, #72]	; 0x48
   549c4:	bl	2d058 <luaL_where@@Base+0xcf54>
   549c8:	cmp	r0, #0
   549cc:	beq	53ee4 <lua_gethookcount@@Base+0x864>
   549d0:	ldrd	r2, [sp, #56]	; 0x38
   549d4:	ldr	r1, [sp, #44]	; 0x2c
   549d8:	ldr	r6, [sp, #88]	; 0x58
   549dc:	cmn	r1, #12
   549e0:	strd	r2, [sp, #96]	; 0x60
   549e4:	ldr	r3, [sp, #76]	; 0x4c
   549e8:	beq	563f0 <lua_gethookcount@@Base+0x2d70>
   549ec:	cmn	r1, #13
   549f0:	bne	54a08 <lua_gethookcount@@Base+0x1388>
   549f4:	ldr	r2, [sp, #40]	; 0x28
   549f8:	ldr	r1, [sp, #64]	; 0x40
   549fc:	ldr	r2, [r2, #16]
   54a00:	cmp	r1, r2
   54a04:	beq	5656c <lua_gethookcount@@Base+0x2eec>
   54a08:	ldrd	sl, [sp, #40]	; 0x28
   54a0c:	mov	r2, #4
   54a10:	ldr	r1, [sp, #12]
   54a14:	mov	r0, r4
   54a18:	str	r3, [sp, #72]	; 0x48
   54a1c:	strd	sl, [sp, #32]
   54a20:	bl	2d058 <luaL_where@@Base+0xcf54>
   54a24:	cmp	r0, #0
   54a28:	beq	53ee4 <lua_gethookcount@@Base+0x864>
   54a2c:	add	r3, sp, #56	; 0x38
   54a30:	str	r3, [sp]
   54a34:	mov	r1, r6
   54a38:	add	r3, sp, #96	; 0x60
   54a3c:	ldr	r2, [sp, #88]	; 0x58
   54a40:	mov	r0, r4
   54a44:	bl	27850 <luaL_where@@Base+0x774c>
   54a48:	cmp	r0, #0
   54a4c:	bne	53ee4 <lua_gethookcount@@Base+0x864>
   54a50:	mov	r2, r7
   54a54:	ldr	r1, [sp, #12]
   54a58:	mov	r0, r4
   54a5c:	bl	2d640 <luaL_where@@Base+0xd53c>
   54a60:	b	53ee4 <lua_gethookcount@@Base+0x864>
   54a64:	mov	r5, r0
   54a68:	and	r2, r9, #520093696	; 0x1f000000
   54a6c:	ldr	r3, [sp, #12]
   54a70:	cmp	r2, #167772160	; 0xa000000
   54a74:	sub	r8, r3, #1
   54a78:	clz	r8, r8
   54a7c:	lsr	r8, r8, #5
   54a80:	beq	556ec <lua_gethookcount@@Base+0x206c>
   54a84:	and	r1, r5, #520093696	; 0x1f000000
   54a88:	cmp	r1, #167772160	; 0xa000000
   54a8c:	beq	556ec <lua_gethookcount@@Base+0x206c>
   54a90:	uxth	r0, r9
   54a94:	uxth	ip, r5
   54a98:	orr	r3, r0, ip
   54a9c:	tst	r3, #32768	; 0x8000
   54aa0:	lsr	lr, r5, #24
   54aa4:	lsr	r3, r9, #24
   54aa8:	and	r3, r3, #31
   54aac:	and	sl, lr, #31
   54ab0:	bne	54ad4 <lua_gethookcount@@Base+0x1454>
   54ab4:	sub	lr, r3, #14
   54ab8:	cmp	r2, #67108864	; 0x4000000
   54abc:	cmpne	lr, #5
   54ac0:	bhi	54ad4 <lua_gethookcount@@Base+0x1454>
   54ac4:	sub	r2, sl, #14
   54ac8:	cmp	r1, #67108864	; 0x4000000
   54acc:	cmpne	r2, #5
   54ad0:	bls	54668 <lua_gethookcount@@Base+0xfe8>
   54ad4:	sub	r2, r3, #15
   54ad8:	cmp	r2, #4
   54adc:	sub	r2, sl, #15
   54ae0:	bhi	55c40 <lua_gethookcount@@Base+0x25c0>
   54ae4:	cmp	r2, #4
   54ae8:	bls	55c84 <lua_gethookcount@@Base+0x2604>
   54aec:	cmp	sl, #19
   54af0:	movne	r2, #1
   54af4:	movne	r3, #19
   54af8:	beq	55c84 <lua_gethookcount@@Base+0x2604>
   54afc:	cmp	sl, #14
   54b00:	movne	r2, #0
   54b04:	andeq	r2, r2, #1
   54b08:	cmp	r2, #0
   54b0c:	beq	5600c <lua_gethookcount@@Base+0x298c>
   54b10:	ldr	r2, [pc, #444]	; 54cd4 <lua_gethookcount@@Base+0x1654>
   54b14:	ldr	r3, [pc, #444]	; 54cd8 <lua_gethookcount@@Base+0x1658>
   54b18:	strh	r0, [r4, #120]	; 0x78
   54b1c:	strh	r2, [r4, #124]	; 0x7c
   54b20:	strh	r3, [r4, #122]	; 0x7a
   54b24:	mov	r0, r4
   54b28:	bl	27498 <luaL_where@@Base+0x7394>
   54b2c:	mov	r9, r0
   54b30:	mov	r0, r4
   54b34:	bl	2ec24 <luaL_where@@Base+0xeb20>
   54b38:	ldr	r3, [sp, #52]	; 0x34
   54b3c:	tst	r7, #1
   54b40:	eorne	r6, r7, #4
   54b44:	moveq	r6, r7
   54b48:	cmn	r3, #14
   54b4c:	ldr	r3, [sp, #44]	; 0x2c
   54b50:	vldreq	s15, [sp, #48]	; 0x30
   54b54:	vldrne	d0, [sp, #48]	; 0x30
   54b58:	mov	r0, r6
   54b5c:	vcvteq.f64.s32	d0, s15
   54b60:	cmn	r3, #14
   54b64:	vldreq	s15, [sp, #40]	; 0x28
   54b68:	vldrne	d1, [sp, #40]	; 0x28
   54b6c:	vcvteq.f64.s32	d1, s15
   54b70:	bl	159ac <_start@@Base+0x25fc>
   54b74:	cmp	r0, #0
   54b78:	eoreq	r6, r6, #5
   54b7c:	moveq	r3, #14
   54b80:	movne	r3, #14
   54b84:	orr	r3, r3, #128	; 0x80
   54b88:	orr	r3, r3, r6, lsl #8
   54b8c:	strh	r3, [r4, #124]	; 0x7c
   54b90:	strh	r9, [r4, #120]	; 0x78
   54b94:	strh	r5, [r4, #122]	; 0x7a
   54b98:	mov	r0, r4
   54b9c:	bl	27498 <luaL_where@@Base+0x7394>
   54ba0:	eor	r2, r6, r7
   54ba4:	cmp	r5, #0
   54ba8:	and	r2, r2, #1
   54bac:	ldr	r1, [r4, #84]	; 0x54
   54bb0:	mov	r0, r4
   54bb4:	moveq	r8, #0
   54bb8:	bl	1e050 <_start@@Base+0xaca0>
   54bbc:	b	53ee4 <lua_gethookcount@@Base+0x864>
   54bc0:	mov	r5, r0
   54bc4:	mov	r2, r5
   54bc8:	mov	r1, r8
   54bcc:	mov	r0, r4
   54bd0:	bl	2dad4 <luaL_where@@Base+0xd9d0>
   54bd4:	b	546e4 <lua_gethookcount@@Base+0x1064>
   54bd8:	mov	r5, r0
   54bdc:	lsr	r3, r8, #24
   54be0:	and	r3, r3, #31
   54be4:	sub	r3, r3, #14
   54be8:	cmp	r3, #5
   54bec:	bls	55630 <lua_gethookcount@@Base+0x1fb0>
   54bf0:	and	r3, r8, #520093696	; 0x1f000000
   54bf4:	cmp	r3, #67108864	; 0x4000000
   54bf8:	beq	55630 <lua_gethookcount@@Base+0x1fb0>
   54bfc:	mov	r2, #15
   54c00:	add	r1, sp, #32
   54c04:	mov	r0, r4
   54c08:	bl	2d9d4 <luaL_where@@Base+0xd8d0>
   54c0c:	b	546e4 <lua_gethookcount@@Base+0x1064>
   54c10:	mov	r5, r0
   54c14:	ldrd	r2, [sp, #40]	; 0x28
   54c18:	ldrd	r0, [sp, #32]
   54c1c:	cmp	r7, #31
   54c20:	strd	r2, [sp, #32]
   54c24:	mov	r3, r8
   54c28:	str	r5, [sp, #72]	; 0x48
   54c2c:	str	r8, [sp, #76]	; 0x4c
   54c30:	strd	r0, [sp, #48]	; 0x30
   54c34:	mov	r8, r5
   54c38:	strd	r0, [sp, #40]	; 0x28
   54c3c:	mov	r5, r3
   54c40:	bne	54678 <lua_gethookcount@@Base+0xff8>
   54c44:	b	546b4 <lua_gethookcount@@Base+0x1034>
   54c48:	mov	r5, r0
   54c4c:	lsr	r3, r5, #24
   54c50:	and	r3, r3, #31
   54c54:	sub	r3, r3, #14
   54c58:	ldr	r2, [sp, #12]
   54c5c:	cmp	r3, #5
   54c60:	sub	r8, r2, #1
   54c64:	clz	r8, r8
   54c68:	lsr	r8, r8, #5
   54c6c:	bls	55670 <lua_gethookcount@@Base+0x1ff0>
   54c70:	and	r3, r5, #520093696	; 0x1f000000
   54c74:	cmp	r3, #67108864	; 0x4000000
   54c78:	beq	55670 <lua_gethookcount@@Base+0x1ff0>
   54c7c:	ldrd	r2, [sp, #40]	; 0x28
   54c80:	add	r1, sp, #160	; 0xa0
   54c84:	mov	r0, r4
   54c88:	strd	r2, [r1, #-128]!	; 0xffffff80
   54c8c:	mov	r2, #16
   54c90:	str	r5, [sp, #72]	; 0x48
   54c94:	bl	2d9d4 <luaL_where@@Base+0xd8d0>
   54c98:	mov	r5, r0
   54c9c:	b	54668 <lua_gethookcount@@Base+0xfe8>
   54ca0:	andeq	pc, r6, ip, ror r0	; <UNPREDICTABLE>
   54ca4:	strdeq	r7, [r0, -lr]
   54ca8:	andeq	r4, r0, fp, lsl #10
   54cac:	andeq	fp, r6, r0, asr #31
   54cb0:	andeq	r5, r0, fp, lsl #3
   54cb4:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   54cb8:	andeq	r0, r0, r1, lsl #16
   54cbc:	andeq	r5, r0, fp, lsl #1
   54cc0:	andeq	r2, r0, lr, lsl #24
   54cc4:	andeq	r3, r0, lr, lsl #10
   54cc8:	andeq	r2, r0, lr, lsl #22
   54ccc:	andeq	r2, r0, lr, lsl #20
   54cd0:	muleq	r0, r3, r7
   54cd4:	andeq	r5, r0, lr, lsl #20
   54cd8:	ldrdeq	r0, [r0], -r3
   54cdc:	andeq	r4, r0, lr, lsl #10
   54ce0:	andeq	r2, r0, lr, lsl #30
   54ce4:	andeq	r7, r0, #1012	; 0x3f4
   54ce8:	andeq	r4, r0, r8, lsl #14
   54cec:	andeq	r4, r0, r3, lsl r7
   54cf0:	muleq	r0, r3, r1
   54cf4:	andeq	r2, r0, r3, lsl sl
   54cf8:	andeq	r2, r0, r5, lsl #18
   54cfc:	muleq	r0, r3, r8
   54d00:	andeq	r3, r0, r5, lsl #18
   54d04:	andeq	r4, r0, lr, lsl #17
   54d08:	andeq	r4, r0, r3, lsl r5
   54d0c:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   54d10:	mov	r5, r0
   54d14:	and	r3, r5, #520093696	; 0x1f000000
   54d18:	cmp	r3, #67108864	; 0x4000000
   54d1c:	beq	55b00 <lua_gethookcount@@Base+0x2480>
   54d20:	cmp	r3, #184549376	; 0xb000000
   54d24:	beq	558f4 <lua_gethookcount@@Base+0x2274>
   54d28:	ldrd	r2, [sp, #40]	; 0x28
   54d2c:	add	r1, sp, #160	; 0xa0
   54d30:	str	r5, [sp, #136]	; 0x88
   54d34:	mov	r0, r4
   54d38:	strd	r2, [r1, #-64]!	; 0xffffffc0
   54d3c:	mov	r2, #5
   54d40:	bl	2d058 <luaL_where@@Base+0xcf54>
   54d44:	cmp	r0, #0
   54d48:	beq	56540 <lua_gethookcount@@Base+0x2ec0>
   54d4c:	ldr	r1, [pc, #-168]	; 54cac <lua_gethookcount@@Base+0x162c>
   54d50:	mov	r0, r4
   54d54:	bl	2b4c4 <luaL_where@@Base+0xb3c0>
   54d58:	ldr	r2, [r4, #80]	; 0x50
   54d5c:	ldr	r3, [sp, #152]	; 0x98
   54d60:	ldr	ip, [r2, #16]
   54d64:	mov	r1, r0
   54d68:	ldr	r0, [r4, #96]	; 0x60
   54d6c:	lsl	lr, r1, #3
   54d70:	str	r3, [r0, r1, lsl #2]
   54d74:	ldrd	r2, [sp, #120]	; 0x78
   54d78:	add	r0, r0, r1, lsl #2
   54d7c:	strd	r2, [ip, lr]
   54d80:	str	r5, [r0, #4]
   54d84:	ldrd	r6, [sp, #40]	; 0x28
   54d88:	add	r3, ip, lr
   54d8c:	ldr	lr, [pc, #-136]	; 54d0c <lua_gethookcount@@Base+0x168c>
   54d90:	mvn	ip, #0
   54d94:	strd	r6, [r3, #8]
   54d98:	mov	r2, #2
   54d9c:	str	lr, [r0, #8]
   54da0:	mov	r0, r4
   54da4:	str	ip, [r3, #20]
   54da8:	bl	2d604 <luaL_where@@Base+0xd500>
   54dac:	b	53eec <lua_gethookcount@@Base+0x86c>
   54db0:	mov	r5, r0
   54db4:	ldr	r3, [r4, #104]	; 0x68
   54db8:	ldr	r8, [sp, #12]
   54dbc:	cmp	r5, #0
   54dc0:	sub	r8, r8, #1
   54dc4:	clz	r8, r8
   54dc8:	lsr	r8, r8, #5
   54dcc:	moveq	r8, #0
   54dd0:	cmp	r3, r9
   54dd4:	ldrcc	r2, [r4, #96]	; 0x60
   54dd8:	subcc	r3, r9, #-1073741823	; 0xc0000001
   54ddc:	movcc	r1, #0
   54de0:	strcc	r1, [r2, r3, lsl #2]
   54de4:	b	53ee4 <lua_gethookcount@@Base+0x864>
   54de8:	mov	r5, r0
   54dec:	lsr	r3, r5, #24
   54df0:	and	r3, r3, #31
   54df4:	cmp	r3, #1
   54df8:	and	r7, r7, #1
   54dfc:	movls	r3, #0
   54e00:	movhi	r3, #1
   54e04:	eor	r7, r7, #1
   54e08:	cmp	r3, r7
   54e0c:	ldr	r2, [r4, #104]	; 0x68
   54e10:	ldrb	r3, [sl, #5]
   54e14:	beq	55320 <lua_gethookcount@@Base+0x1ca0>
   54e18:	cmp	r2, r3
   54e1c:	bls	53eec <lua_gethookcount@@Base+0x86c>
   54e20:	b	543ec <lua_gethookcount@@Base+0xd6c>
   54e24:	mov	r5, r0
   54e28:	cmp	r5, #14
   54e2c:	beq	55b20 <lua_gethookcount@@Base+0x24a0>
   54e30:	cmp	r5, #15
   54e34:	beq	55c2c <lua_gethookcount@@Base+0x25ac>
   54e38:	cmp	r5, #5
   54e3c:	beq	55c70 <lua_gethookcount@@Base+0x25f0>
   54e40:	ldr	r2, [sp, #12]
   54e44:	ldr	r3, [r4, #96]	; 0x60
   54e48:	sub	r8, r2, #1
   54e4c:	ldr	r2, [sp, #16]
   54e50:	cmp	r5, #0
   54e54:	clz	r8, r8
   54e58:	str	r9, [r3, r2, lsl #2]
   54e5c:	lsr	r8, r8, #5
   54e60:	moveq	r8, #0
   54e64:	b	53ee4 <lua_gethookcount@@Base+0x864>
   54e68:	mov	r5, r0
   54e6c:	mov	r1, sl
   54e70:	mov	r2, #0
   54e74:	mov	r0, r4
   54e78:	bl	40ccc <luaL_typerror@@Base+0xa960>
   54e7c:	ldr	r8, [sp, #12]
   54e80:	cmp	r5, #0
   54e84:	sub	r8, r8, #1
   54e88:	clz	r8, r8
   54e8c:	lsr	r8, r8, #5
   54e90:	moveq	r8, #0
   54e94:	cmp	r0, #0
   54e98:	ldrne	r3, [r4, #8]
   54e9c:	strne	r3, [r4, #244]	; 0xf4
   54ea0:	b	53ee4 <lua_gethookcount@@Base+0x864>
   54ea4:	mov	r5, r0
   54ea8:	mov	r0, r4
   54eac:	bl	2116c <luaL_where@@Base+0x1068>
   54eb0:	mov	r1, #0
   54eb4:	mov	r0, r4
   54eb8:	bl	2e684 <luaL_where@@Base+0xe580>
   54ebc:	b	54658 <lua_gethookcount@@Base+0xfd8>
   54ec0:	mov	r5, r0
   54ec4:	ldr	r3, [r4, #104]	; 0x68
   54ec8:	mov	r2, #2
   54ecc:	cmp	r9, r3
   54ed0:	ldr	r3, [r4, #84]	; 0x54
   54ed4:	strcc	r9, [r4, #104]	; 0x68
   54ed8:	add	r3, r3, #4
   54edc:	str	r3, [r4, #84]	; 0x54
   54ee0:	mov	r1, r5
   54ee4:	mov	r0, r4
   54ee8:	bl	2e60c <luaL_where@@Base+0xe508>
   54eec:	b	53ecc <lua_gethookcount@@Base+0x84c>
   54ef0:	mov	r5, r0
   54ef4:	ldr	r3, [r4, #104]	; 0x68
   54ef8:	mov	r1, sl
   54efc:	cmp	r9, r3
   54f00:	ldr	r3, [r4, #84]	; 0x54
   54f04:	strcc	r9, [r4, #104]	; 0x68
   54f08:	add	r3, r3, #4
   54f0c:	str	r3, [r4, #84]	; 0x54
   54f10:	mov	r2, #2
   54f14:	mov	r0, r4
   54f18:	bl	2e4a8 <luaL_where@@Base+0xe3a4>
   54f1c:	b	53ecc <lua_gethookcount@@Base+0x84c>
   54f20:	mov	r5, r0
   54f24:	ldr	r3, [r4, #80]	; 0x50
   54f28:	ldr	r1, [r4, #92]	; 0x5c
   54f2c:	ldr	r2, [r4, #184]	; 0xb8
   54f30:	ldr	r3, [r3, #16]
   54f34:	ldrb	r6, [r1, #6]
   54f38:	cmp	r2, #0
   54f3c:	ldr	fp, [r3, #-4]
   54f40:	sub	r3, r8, #1
   54f44:	rsb	fp, r6, fp, asr #3
   54f48:	sub	sl, fp, #1
   54f4c:	ble	55908 <lua_gethookcount@@Base+0x2288>
   54f50:	bic	r7, sl, sl, asr #31
   54f54:	cmn	r3, #1
   54f58:	addeq	r3, r7, r9
   54f5c:	streq	r3, [r4, #104]	; 0x68
   54f60:	moveq	r3, r7
   54f64:	beq	54f78 <lua_gethookcount@@Base+0x18f8>
   54f68:	ldr	r1, [r4, #104]	; 0x68
   54f6c:	add	r2, r3, r9
   54f70:	cmp	r2, r1
   54f74:	strhi	r2, [r4, #104]	; 0x68
   54f78:	ldr	r8, [sp, #12]
   54f7c:	cmp	r5, #0
   54f80:	sub	r8, r8, #1
   54f84:	clz	r8, r8
   54f88:	lsr	r8, r8, #5
   54f8c:	moveq	r8, #0
   54f90:	cmp	r3, #0
   54f94:	ble	53ee4 <lua_gethookcount@@Base+0x864>
   54f98:	rsb	sl, r7, r7, lsl #30
   54f9c:	mvn	r2, r7
   54fa0:	ldr	ip, [r4, #96]	; 0x60
   54fa4:	str	r5, [sp, #12]
   54fa8:	str	r8, [sp, #16]
   54fac:	mov	r5, r4
   54fb0:	ldr	fp, [pc, #-684]	; 54d0c <lua_gethookcount@@Base+0x168c>
   54fb4:	mov	r4, sl
   54fb8:	mov	r6, #0
   54fbc:	mov	sl, r7
   54fc0:	mov	r8, r2
   54fc4:	mov	r7, r3
   54fc8:	b	54fe0 <lua_gethookcount@@Base+0x1960>
   54fcc:	add	r1, r6, r9
   54fd0:	add	r6, r6, #1
   54fd4:	cmp	r6, r7
   54fd8:	str	r0, [ip, r1, lsl #2]
   54fdc:	beq	556dc <lua_gethookcount@@Base+0x205c>
   54fe0:	cmp	sl, r6
   54fe4:	movle	r0, fp
   54fe8:	ble	54fcc <lua_gethookcount@@Base+0x194c>
   54fec:	add	r0, r6, r4
   54ff0:	sub	r0, r0, #-1073741823	; 0xc0000001
   54ff4:	add	r1, r8, r6
   54ff8:	ldr	r0, [ip, r0, lsl #2]
   54ffc:	cmp	r0, #0
   55000:	bne	54fcc <lua_gethookcount@@Base+0x194c>
   55004:	mov	r0, r5
   55008:	bl	25b34 <luaL_where@@Base+0x5a30>
   5500c:	ldr	ip, [r5, #96]	; 0x60
   55010:	b	54fcc <lua_gethookcount@@Base+0x194c>
   55014:	mov	r5, r0
   55018:	mov	r1, r5
   5501c:	mov	r2, #0
   55020:	mov	r0, r4
   55024:	bl	2a994 <luaL_where@@Base+0xa890>
   55028:	mov	r5, r0
   5502c:	b	54658 <lua_gethookcount@@Base+0xfd8>
   55030:	mov	r5, r0
   55034:	ldr	r3, [r4, #272]	; 0x110
   55038:	mov	r0, r4
   5503c:	ldr	r3, [r3, r5, lsl #2]
   55040:	ldr	r1, [r3, #44]	; 0x2c
   55044:	bl	25bd8 <luaL_where@@Base+0x5ad4>
   55048:	mov	r1, r5
   5504c:	mov	r2, r0
   55050:	mov	r0, r4
   55054:	bl	2e60c <luaL_where@@Base+0xe508>
   55058:	b	53ecc <lua_gethookcount@@Base+0x84c>
   5505c:	mov	r5, r0
   55060:	ldr	r1, [sl]
   55064:	mov	r0, r4
   55068:	bl	25bd8 <luaL_where@@Base+0x5ad4>
   5506c:	mov	r1, sl
   55070:	mov	r2, r0
   55074:	mov	r0, r4
   55078:	bl	2e4a8 <luaL_where@@Base+0xe3a4>
   5507c:	b	53ecc <lua_gethookcount@@Base+0x84c>
   55080:	mov	r5, r0
   55084:	ldr	r3, [r4, #272]	; 0x110
   55088:	mov	r2, #1
   5508c:	mov	r0, r4
   55090:	ldr	r3, [r3, r5, lsl #2]
   55094:	ldrh	r1, [r3, #46]	; 0x2e
   55098:	add	r1, r1, #1069547520	; 0x3fc00000
   5509c:	add	r1, r1, #4161536	; 0x3f8000
   550a0:	add	r1, sl, r1, lsl #2
   550a4:	bl	40ccc <luaL_typerror@@Base+0xa960>
   550a8:	mov	r1, r5
   550ac:	mov	r2, r0
   550b0:	mov	r0, r4
   550b4:	bl	2e60c <luaL_where@@Base+0xe508>
   550b8:	b	53ecc <lua_gethookcount@@Base+0x84c>
   550bc:	mov	r5, r0
   550c0:	ldr	r3, [r4, #104]	; 0x68
   550c4:	ldr	r8, [sp, #12]
   550c8:	cmp	r5, #0
   550cc:	sub	r8, r8, #1
   550d0:	clz	r8, r8
   550d4:	lsr	r8, r8, #5
   550d8:	moveq	r8, #0
   550dc:	cmp	r9, r3
   550e0:	strcc	r9, [r4, #104]	; 0x68
   550e4:	b	53ee4 <lua_gethookcount@@Base+0x864>
   550e8:	mov	r5, r0
   550ec:	add	r1, r5, #1069547520	; 0x3fc00000
   550f0:	add	r1, r1, #4161536	; 0x3f8000
   550f4:	mov	r2, #1
   550f8:	add	r1, sl, r1, lsl #2
   550fc:	mov	r0, r4
   55100:	bl	40ccc <luaL_typerror@@Base+0xa960>
   55104:	mov	r1, sl
   55108:	mov	r2, r0
   5510c:	mov	r0, r4
   55110:	bl	2e4a8 <luaL_where@@Base+0xe3a4>
   55114:	b	53ecc <lua_gethookcount@@Base+0x84c>
   55118:	mov	r5, r0
   5511c:	mov	r2, #0
   55120:	mov	r1, sl
   55124:	mov	r0, r4
   55128:	bl	40ccc <luaL_typerror@@Base+0xa960>
   5512c:	ldr	r8, [sp, #12]
   55130:	cmp	r5, #0
   55134:	sub	r8, r8, #1
   55138:	clz	r8, r8
   5513c:	lsr	r8, r8, #5
   55140:	moveq	r8, #0
   55144:	cmp	r0, #0
   55148:	beq	53ee4 <lua_gethookcount@@Base+0x864>
   5514c:	add	r3, r5, #1069547520	; 0x3fc00000
   55150:	add	r3, r3, #4161536	; 0x3f8000
   55154:	mov	r1, #1
   55158:	ldr	r2, [sl, r3, lsl #2]
   5515c:	mov	r0, r4
   55160:	lsr	r2, r2, #16
   55164:	bl	2e444 <luaL_where@@Base+0xe340>
   55168:	b	53ee4 <lua_gethookcount@@Base+0x864>
   5516c:	mov	r5, r0
   55170:	ldr	r3, [r4, #80]	; 0x50
   55174:	sub	r2, r9, #-536870911	; 0xe0000001
   55178:	ldr	r1, [r4, #96]	; 0x60
   5517c:	ldr	r8, [r3, #16]
   55180:	ldr	r0, [r3, #20]
   55184:	sub	r7, r9, #-1073741823	; 0xc0000001
   55188:	ldr	r3, [r8, r2, lsl #3]
   5518c:	sub	ip, r0, r8
   55190:	str	r3, [sp, #96]	; 0x60
   55194:	mvn	r3, #11
   55198:	str	r3, [sp, #100]	; 0x64
   5519c:	ldr	r0, [r1, r7, lsl #2]
   551a0:	asr	fp, ip, #3
   551a4:	cmp	r0, #0
   551a8:	add	r8, r8, r2, lsl #3
   551ac:	lsl	r7, r7, #2
   551b0:	ldr	sl, [sp, #40]	; 0x28
   551b4:	beq	558a8 <lua_gethookcount@@Base+0x2228>
   551b8:	mov	r3, #0
   551bc:	cmp	r9, fp
   551c0:	str	r0, [sp, #136]	; 0x88
   551c4:	str	r3, [sp, #156]	; 0x9c
   551c8:	bcs	53ecc <lua_gethookcount@@Base+0x84c>
   551cc:	add	r7, r7, #4
   551d0:	sub	sl, sl, r9
   551d4:	mov	r6, r9
   551d8:	b	551fc <lua_gethookcount@@Base+0x1b7c>
   551dc:	add	r6, r6, #1
   551e0:	add	r1, sp, #96	; 0x60
   551e4:	mov	r0, r4
   551e8:	str	r3, [sp, #144]	; 0x90
   551ec:	bl	2c388 <luaL_where@@Base+0xc284>
   551f0:	cmp	fp, r6
   551f4:	add	r7, r7, #4
   551f8:	beq	53ecc <lua_gethookcount@@Base+0x84c>
   551fc:	add	r3, sl, r6
   55200:	mov	r1, r3
   55204:	mvn	r2, #13
   55208:	mov	r0, r4
   5520c:	str	r2, [sp, #108]	; 0x6c
   55210:	str	r3, [sp, #104]	; 0x68
   55214:	bl	26ccc <luaL_where@@Base+0x6bc8>
   55218:	ldrd	r2, [r8, #8]!
   5521c:	ldr	r1, [r4, #96]	; 0x60
   55220:	strd	r2, [sp, #112]	; 0x70
   55224:	str	r0, [sp, #140]	; 0x8c
   55228:	ldr	r3, [r1, r7]
   5522c:	cmp	r3, #0
   55230:	bne	551dc <lua_gethookcount@@Base+0x1b5c>
   55234:	mov	r1, r6
   55238:	mov	r0, r4
   5523c:	bl	25b34 <luaL_where@@Base+0x5a30>
   55240:	mov	r3, r0
   55244:	b	551dc <lua_gethookcount@@Base+0x1b5c>
   55248:	mov	r5, r0
   5524c:	ldr	r3, [r4, #92]	; 0x5c
   55250:	mvn	r5, r5
   55254:	mov	r2, #11
   55258:	ldr	r3, [r3, #16]
   5525c:	mov	r0, r4
   55260:	ldr	r1, [r3, r5, lsl #2]
   55264:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   55268:	ldr	r2, [pc, #-1472]	; 54cb0 <lua_gethookcount@@Base+0x1630>
   5526c:	mov	r3, #0
   55270:	strh	r2, [r4, #124]	; 0x7c
   55274:	strh	r3, [r4, #122]	; 0x7a
   55278:	strh	r0, [r4, #120]	; 0x78
   5527c:	mov	r0, r4
   55280:	bl	27498 <luaL_where@@Base+0x7394>
   55284:	mov	r5, r0
   55288:	b	53ecc <lua_gethookcount@@Base+0x84c>
   5528c:	mov	r5, r0
   55290:	ldr	r2, [pc, #-1508]	; 54cb4 <lua_gethookcount@@Base+0x1634>
   55294:	ldr	r1, [pc, #-1508]	; 54cb8 <lua_gethookcount@@Base+0x1638>
   55298:	and	r3, r5, r2
   5529c:	cmp	r3, r2
   552a0:	ldr	r2, [pc, #-1516]	; 54cbc <lua_gethookcount@@Base+0x163c>
   552a4:	lsr	r5, r5, #11
   552a8:	moveq	r3, r1
   552ac:	strh	r5, [r4, #122]	; 0x7a
   552b0:	strh	r3, [r4, #120]	; 0x78
   552b4:	strh	r2, [r4, #124]	; 0x7c
   552b8:	mov	r0, r4
   552bc:	bl	27498 <luaL_where@@Base+0x7394>
   552c0:	mov	r5, r0
   552c4:	b	53ecc <lua_gethookcount@@Base+0x84c>
   552c8:	mov	r5, r0
   552cc:	mov	r2, r5
   552d0:	mov	r1, r9
   552d4:	mov	r0, r4
   552d8:	bl	2a994 <luaL_where@@Base+0xa890>
   552dc:	b	54658 <lua_gethookcount@@Base+0xfd8>
   552e0:	mov	r5, r0
   552e4:	sxth	r1, r5
   552e8:	mov	r0, r4
   552ec:	bl	26ccc <luaL_where@@Base+0x6bc8>
   552f0:	b	546e4 <lua_gethookcount@@Base+0x1064>
   552f4:	mov	r5, r0
   552f8:	ldr	r3, [r4, #92]	; 0x5c
   552fc:	mvn	r5, r5
   55300:	mov	r2, #10
   55304:	ldr	r3, [r3, #16]
   55308:	mov	r0, r4
   5530c:	ldr	r1, [r3, r5, lsl #2]
   55310:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   55314:	b	546e4 <lua_gethookcount@@Base+0x1064>
   55318:	ldrb	r3, [sl, #5]
   5531c:	ldr	r2, [r4, #104]	; 0x68
   55320:	ldr	r8, [sp, #12]
   55324:	cmp	r5, #0
   55328:	sub	r8, r8, #1
   5532c:	clz	r8, r8
   55330:	lsr	r8, r8, #5
   55334:	moveq	r8, #0
   55338:	cmp	r2, r3
   5533c:	bls	53ee4 <lua_gethookcount@@Base+0x864>
   55340:	b	547d4 <lua_gethookcount@@Base+0x1154>
   55344:	ldr	r3, [sp, #12]
   55348:	cmp	r0, #0
   5534c:	sub	r8, r3, #1
   55350:	mov	r5, r0
   55354:	clz	r8, r8
   55358:	lsr	r8, r8, #5
   5535c:	moveq	r8, #0
   55360:	b	53ee4 <lua_gethookcount@@Base+0x864>
   55364:	ldrb	r3, [sl, #5]
   55368:	mov	r5, r0
   5536c:	ldr	r2, [r4, #104]	; 0x68
   55370:	b	55320 <lua_gethookcount@@Base+0x1ca0>
   55374:	add	r1, r4, #2336	; 0x920
   55378:	add	r1, r1, #12
   5537c:	ldr	r0, [r4, #80]	; 0x50
   55380:	mov	r2, #2
   55384:	bl	210d0 <luaL_where@@Base+0xfcc>
   55388:	add	r1, r4, #2336	; 0x920
   5538c:	add	r1, r1, #12
   55390:	ldr	r0, [r4, #80]	; 0x50
   55394:	mov	r2, #5
   55398:	bl	210d0 <luaL_where@@Base+0xfcc>
   5539c:	mvn	r3, #13
   553a0:	str	r7, [r4, #2344]	; 0x928
   553a4:	str	r3, [r4, #2348]	; 0x92c
   553a8:	ldr	r0, [r4, #80]	; 0x50
   553ac:	mov	r1, #7
   553b0:	bl	130c8 <pclose@plt+0x2c>
   553b4:	lsr	r3, r5, #24
   553b8:	and	r3, r3, #31
   553bc:	sub	r3, r3, #14
   553c0:	cmp	r3, #5
   553c4:	bls	553d4 <lua_gethookcount@@Base+0x1d54>
   553c8:	and	r3, r5, #520093696	; 0x1f000000
   553cc:	cmp	r3, #67108864	; 0x4000000
   553d0:	bne	5469c <lua_gethookcount@@Base+0x101c>
   553d4:	mov	r1, r8
   553d8:	add	r2, sp, #32
   553dc:	mov	r0, r4
   553e0:	bl	27edc <luaL_where@@Base+0x7dd8>
   553e4:	mov	r1, r5
   553e8:	add	r2, sp, #40	; 0x28
   553ec:	mov	r7, r0
   553f0:	mov	r0, r4
   553f4:	bl	27edc <luaL_where@@Base+0x7dd8>
   553f8:	ldr	r3, [sp, #12]
   553fc:	sub	r8, r3, #1
   55400:	clz	r8, r8
   55404:	lsr	r8, r8, #5
   55408:	mov	fp, r0
   5540c:	sub	r0, r6, #10
   55410:	cmp	r0, #2
   55414:	bhi	558e8 <lua_gethookcount@@Base+0x2268>
   55418:	lsr	r3, r7, #24
   5541c:	and	r3, r3, #31
   55420:	sub	r3, r3, #15
   55424:	cmp	r3, #4
   55428:	uxth	sl, r7
   5542c:	uxth	r5, fp
   55430:	bhi	55488 <lua_gethookcount@@Base+0x1e08>
   55434:	lsr	r3, fp, #24
   55438:	and	r3, r3, #31
   5543c:	sub	r3, r3, #15
   55440:	cmp	r3, #4
   55444:	bhi	55488 <lua_gethookcount@@Base+0x1e08>
   55448:	ldr	r3, [sp, #36]	; 0x24
   5544c:	cmn	r3, #14
   55450:	ldr	r3, [sp, #44]	; 0x2c
   55454:	vldreq	s15, [sp, #32]
   55458:	vldrne	d0, [sp, #32]
   5545c:	vcvteq.f64.s32	d0, s15
   55460:	cmn	r3, #14
   55464:	vldreq	s15, [sp, #40]	; 0x28
   55468:	vldrne	d1, [sp, #40]	; 0x28
   5546c:	vcvteq.f64.s32	d1, s15
   55470:	bl	53990 <lua_gethookcount@@Base+0x310>
   55474:	vcvt.s32.f64	s14, d0
   55478:	vcvt.f64.s32	d7, s14
   5547c:	vcmp.f64	d0, d7
   55480:	vmrs	APSR_nzcv, fpscr
   55484:	beq	56024 <lua_gethookcount@@Base+0x29a4>
   55488:	and	r3, r7, #520093696	; 0x1f000000
   5548c:	cmp	r3, #234881024	; 0xe000000
   55490:	beq	554b4 <lua_gethookcount@@Base+0x1e34>
   55494:	ldr	r2, [pc, #-1992]	; 54cd4 <lua_gethookcount@@Base+0x1654>
   55498:	ldr	r3, [pc, #-1992]	; 54cd8 <lua_gethookcount@@Base+0x1658>
   5549c:	strh	sl, [r4, #120]	; 0x78
   554a0:	strh	r2, [r4, #124]	; 0x7c
   554a4:	strh	r3, [r4, #122]	; 0x7a
   554a8:	mov	r0, r4
   554ac:	bl	27498 <luaL_where@@Base+0x7394>
   554b0:	uxth	sl, r0
   554b4:	and	r3, fp, #520093696	; 0x1f000000
   554b8:	cmp	r3, #234881024	; 0xe000000
   554bc:	beq	554e0 <lua_gethookcount@@Base+0x1e60>
   554c0:	ldr	r2, [pc, #-2036]	; 54cd4 <lua_gethookcount@@Base+0x1654>
   554c4:	ldr	r3, [pc, #-2036]	; 54cd8 <lua_gethookcount@@Base+0x1658>
   554c8:	strh	r5, [r4, #120]	; 0x78
   554cc:	strh	r2, [r4, #124]	; 0x7c
   554d0:	strh	r3, [r4, #122]	; 0x7a
   554d4:	mov	r0, r4
   554d8:	bl	27498 <luaL_where@@Base+0x7394>
   554dc:	uxth	r5, r0
   554e0:	add	r3, r6, #31
   554e4:	strh	sl, [r4, #120]	; 0x78
   554e8:	lsl	r3, r3, #8
   554ec:	orr	r3, r3, #14
   554f0:	strh	r3, [r4, #124]	; 0x7c
   554f4:	strh	r5, [r4, #122]	; 0x7a
   554f8:	mov	r0, r4
   554fc:	bl	27498 <luaL_where@@Base+0x7394>
   55500:	mov	r5, r0
   55504:	b	54668 <lua_gethookcount@@Base+0xfe8>
   55508:	lsr	r3, r5, #24
   5550c:	and	r3, r3, #31
   55510:	sub	r3, r3, #14
   55514:	cmp	r3, #5
   55518:	bls	55528 <lua_gethookcount@@Base+0x1ea8>
   5551c:	and	r3, r5, #520093696	; 0x1f000000
   55520:	cmp	r3, #67108864	; 0x4000000
   55524:	bne	546d4 <lua_gethookcount@@Base+0x1054>
   55528:	mov	r1, r8
   5552c:	add	r2, sp, #32
   55530:	mov	r0, r4
   55534:	bl	27edc <luaL_where@@Base+0x7dd8>
   55538:	add	r2, sp, #40	; 0x28
   5553c:	mov	r1, r5
   55540:	mov	r6, r0
   55544:	mov	r0, r4
   55548:	bl	27edc <luaL_where@@Base+0x7dd8>
   5554c:	lsr	r3, r6, #24
   55550:	and	r3, r3, #31
   55554:	sub	r3, r3, #15
   55558:	ldr	r2, [sp, #12]
   5555c:	cmp	r3, #4
   55560:	sub	r8, r2, #1
   55564:	clz	r8, r8
   55568:	lsr	r8, r8, #5
   5556c:	mov	r7, r0
   55570:	bhi	555ac <lua_gethookcount@@Base+0x1f2c>
   55574:	lsr	r3, r0, #24
   55578:	and	r3, r3, #31
   5557c:	sub	r3, r3, #15
   55580:	cmp	r3, #4
   55584:	bhi	555ac <lua_gethookcount@@Base+0x1f2c>
   55588:	ldr	r2, [sp, #44]	; 0x2c
   5558c:	ldr	r3, [sp, #40]	; 0x28
   55590:	cmn	r2, #14
   55594:	beq	55db4 <lua_gethookcount@@Base+0x2734>
   55598:	orrs	r3, r3, r2, lsl #1
   5559c:	movne	r3, #1
   555a0:	moveq	r3, #0
   555a4:	cmp	r3, #0
   555a8:	bne	55dec <lua_gethookcount@@Base+0x276c>
   555ac:	mov	r1, r6
   555b0:	mov	r0, r4
   555b4:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   555b8:	mov	r1, r7
   555bc:	mov	r5, r0
   555c0:	mov	r0, r4
   555c4:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   555c8:	ldr	r3, [pc, #-2320]	; 54cc0 <lua_gethookcount@@Base+0x1640>
   555cc:	uxth	r5, r5
   555d0:	strh	r3, [r4, #124]	; 0x7c
   555d4:	strh	r5, [r4, #120]	; 0x78
   555d8:	uxth	r6, r0
   555dc:	strh	r6, [r4, #122]	; 0x7a
   555e0:	mov	r0, r4
   555e4:	bl	27498 <luaL_where@@Base+0x7394>
   555e8:	ldr	r2, [pc, #-2348]	; 54cc4 <lua_gethookcount@@Base+0x1644>
   555ec:	mov	r3, #0
   555f0:	strh	r2, [r4, #124]	; 0x7c
   555f4:	strh	r3, [r4, #122]	; 0x7a
   555f8:	strh	r0, [r4, #120]	; 0x78
   555fc:	mov	r0, r4
   55600:	bl	27498 <luaL_where@@Base+0x7394>
   55604:	ldr	r3, [pc, #-2372]	; 54cc8 <lua_gethookcount@@Base+0x1648>
   55608:	strh	r6, [r4, #122]	; 0x7a
   5560c:	strh	r3, [r4, #124]	; 0x7c
   55610:	strh	r0, [r4, #120]	; 0x78
   55614:	mov	r0, r4
   55618:	bl	27498 <luaL_where@@Base+0x7394>
   5561c:	ldr	r3, [pc, #-2392]	; 54ccc <lua_gethookcount@@Base+0x164c>
   55620:	strh	r5, [r4, #120]	; 0x78
   55624:	strh	r3, [r4, #124]	; 0x7c
   55628:	strh	r0, [r4, #122]	; 0x7a
   5562c:	b	554f8 <lua_gethookcount@@Base+0x1e78>
   55630:	lsr	r3, r5, #24
   55634:	and	r3, r3, #31
   55638:	sub	r3, r3, #14
   5563c:	cmp	r3, #5
   55640:	bls	55650 <lua_gethookcount@@Base+0x1fd0>
   55644:	and	r3, r5, #520093696	; 0x1f000000
   55648:	cmp	r3, #67108864	; 0x4000000
   5564c:	bne	54bfc <lua_gethookcount@@Base+0x157c>
   55650:	add	r3, sp, #40	; 0x28
   55654:	str	r3, [sp]
   55658:	mov	r2, r5
   5565c:	mov	r1, r8
   55660:	add	r3, sp, #32
   55664:	mov	r0, r4
   55668:	bl	28a88 <luaL_where@@Base+0x8984>
   5566c:	b	54654 <lua_gethookcount@@Base+0xfd4>
   55670:	mov	r1, r5
   55674:	add	r2, sp, #40	; 0x28
   55678:	mov	r0, r4
   5567c:	bl	27edc <luaL_where@@Base+0x7dd8>
   55680:	lsr	r3, r0, #24
   55684:	and	r3, r3, #31
   55688:	sub	r3, r3, #15
   5568c:	cmp	r3, #4
   55690:	mov	r5, r0
   55694:	bhi	557e0 <lua_gethookcount@@Base+0x2160>
   55698:	ldr	r3, [sp, #44]	; 0x2c
   5569c:	uxth	r5, r0
   556a0:	cmn	r3, #14
   556a4:	vldrne	d7, [sp, #40]	; 0x28
   556a8:	ldreq	r3, [sp, #40]	; 0x28
   556ac:	vcvtne.s32.f64	s15, d7
   556b0:	vmovne	r3, s15
   556b4:	cmp	r3, #-2147483648	; 0x80000000
   556b8:	beq	557c0 <lua_gethookcount@@Base+0x2140>
   556bc:	mov	r1, #0
   556c0:	mov	r0, r4
   556c4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   556c8:	ldr	r3, [pc, #-2560]	; 54cd0 <lua_gethookcount@@Base+0x1650>
   556cc:	strh	r5, [r4, #122]	; 0x7a
   556d0:	strh	r3, [r4, #124]	; 0x7c
   556d4:	strh	r0, [r4, #120]	; 0x78
   556d8:	b	554f8 <lua_gethookcount@@Base+0x1e78>
   556dc:	mov	r4, r5
   556e0:	ldr	r8, [sp, #16]
   556e4:	ldr	r5, [sp, #12]
   556e8:	b	53ee4 <lua_gethookcount@@Base+0x864>
   556ec:	tst	r7, #2
   556f0:	mov	r0, r4
   556f4:	moveq	r6, #6
   556f8:	movne	r6, #7
   556fc:	bl	2e158 <luaL_where@@Base+0xe054>
   55700:	ldr	r3, [sp, #80]	; 0x50
   55704:	and	r2, r3, #520093696	; 0x1f000000
   55708:	cmp	r2, #167772160	; 0xa000000
   5570c:	beq	55bb0 <lua_gethookcount@@Base+0x2530>
   55710:	ldrd	r0, [sp, #40]	; 0x28
   55714:	ldr	r3, [sp, #76]	; 0x4c
   55718:	strd	r0, [sp, #32]
   5571c:	str	r3, [sp, #72]	; 0x48
   55720:	mov	r2, r6
   55724:	add	r1, sp, #32
   55728:	mov	r0, r4
   5572c:	bl	2d058 <luaL_where@@Base+0xcf54>
   55730:	cmp	r5, #0
   55734:	mov	r2, r7
   55738:	add	r1, sp, #32
   5573c:	mov	r0, r4
   55740:	moveq	r8, #0
   55744:	bl	2d640 <luaL_where@@Base+0xd53c>
   55748:	b	53ee4 <lua_gethookcount@@Base+0x864>
   5574c:	mov	r0, r4
   55750:	bl	2e158 <luaL_where@@Base+0xe054>
   55754:	ldr	r1, [sp, #80]	; 0x50
   55758:	and	r3, r1, #520093696	; 0x1f000000
   5575c:	cmp	r3, #167772160	; 0xa000000
   55760:	beq	55c60 <lua_gethookcount@@Base+0x25e0>
   55764:	ldrd	r2, [sp, #40]	; 0x28
   55768:	ldr	r1, [sp, #76]	; 0x4c
   5576c:	strd	r2, [sp, #32]
   55770:	str	r1, [sp, #72]	; 0x48
   55774:	add	r1, sp, #32
   55778:	mov	r2, #4
   5577c:	mov	r0, r4
   55780:	bl	2d058 <luaL_where@@Base+0xcf54>
   55784:	mov	r2, r7
   55788:	add	r1, sp, #32
   5578c:	mov	r0, r4
   55790:	bl	2d640 <luaL_where@@Base+0xd53c>
   55794:	b	53ee4 <lua_gethookcount@@Base+0x864>
   55798:	mov	r6, #0
   5579c:	mov	r3, #5504	; 0x1580
   557a0:	str	r6, [r4, #120]	; 0x78
   557a4:	strh	r3, [r4, #124]	; 0x7c
   557a8:	mov	r0, r4
   557ac:	bl	27498 <luaL_where@@Base+0x7394>
   557b0:	str	r6, [r4, #2352]	; 0x930
   557b4:	mov	r0, r4
   557b8:	bl	2e158 <luaL_where@@Base+0xe054>
   557bc:	b	545dc <lua_gethookcount@@Base+0xf5c>
   557c0:	ldr	r2, [pc, #-2804]	; 54cd4 <lua_gethookcount@@Base+0x1654>
   557c4:	ldr	r3, [pc, #-2804]	; 54cd8 <lua_gethookcount@@Base+0x1658>
   557c8:	strh	r5, [r4, #120]	; 0x78
   557cc:	strh	r2, [r4, #124]	; 0x7c
   557d0:	strh	r3, [r4, #122]	; 0x7a
   557d4:	mov	r0, r4
   557d8:	bl	27498 <luaL_where@@Base+0x7394>
   557dc:	mov	r5, r0
   557e0:	add	r3, r4, #223	; 0xdf
   557e4:	sub	r2, r4, #432	; 0x1b0
   557e8:	bic	r3, r3, #15
   557ec:	sub	r3, r3, r2
   557f0:	ldr	r1, [pc, #-2844]	; 54cdc <lua_gethookcount@@Base+0x165c>
   557f4:	lsr	r3, r3, #2
   557f8:	mvn	r2, #32768	; 0x8000
   557fc:	strh	r3, [r4, #122]	; 0x7a
   55800:	strh	r1, [r4, #124]	; 0x7c
   55804:	strh	r2, [r4, #120]	; 0x78
   55808:	mov	r0, r4
   5580c:	bl	27498 <luaL_where@@Base+0x7394>
   55810:	ldr	r3, [pc, #-2872]	; 54ce0 <lua_gethookcount@@Base+0x1660>
   55814:	strh	r5, [r4, #120]	; 0x78
   55818:	strh	r3, [r4, #124]	; 0x7c
   5581c:	strh	r0, [r4, #122]	; 0x7a
   55820:	b	554f8 <lua_gethookcount@@Base+0x1e78>
   55824:	ldr	r3, [sp, #12]
   55828:	cmp	r3, #1
   5582c:	bne	53eec <lua_gethookcount@@Base+0x86c>
   55830:	ldr	r5, [pc, #-2900]	; 54ce4 <lua_gethookcount@@Base+0x1664>
   55834:	b	543d4 <lua_gethookcount@@Base+0xd54>
   55838:	ldr	r3, [r4, #184]	; 0xb8
   5583c:	ldr	r2, [r4, #188]	; 0xbc
   55840:	cmn	r3, r2
   55844:	bne	54910 <lua_gethookcount@@Base+0x1290>
   55848:	ldrh	r2, [r4, #64]	; 0x40
   5584c:	mov	r1, #3
   55850:	mov	r0, r4
   55854:	bl	2e444 <luaL_where@@Base+0xe340>
   55858:	b	53ee4 <lua_gethookcount@@Base+0x864>
   5585c:	ldr	r3, [r4, #108]	; 0x6c
   55860:	ldr	r1, [pc, #-2944]	; 54ce8 <lua_gethookcount@@Base+0x1668>
   55864:	sub	r3, r3, #1
   55868:	mov	r2, #16
   5586c:	strh	r3, [r4, #120]	; 0x78
   55870:	strh	r1, [r4, #124]	; 0x7c
   55874:	strh	r2, [r4, #122]	; 0x7a
   55878:	mov	r0, r4
   5587c:	bl	25258 <luaL_where@@Base+0x5154>
   55880:	ldr	r3, [r4, #96]	; 0x60
   55884:	str	r0, [r3, #-4]
   55888:	b	54720 <lua_gethookcount@@Base+0x10a0>
   5588c:	sub	r1, r9, #1
   55890:	mov	r0, r4
   55894:	bl	25b34 <luaL_where@@Base+0x5a30>
   55898:	ldr	r3, [r4, #96]	; 0x60
   5589c:	add	r3, r3, r6
   558a0:	mov	r2, r0
   558a4:	b	53e8c <lua_gethookcount@@Base+0x80c>
   558a8:	sub	r1, r9, #1
   558ac:	mov	r0, r4
   558b0:	bl	25b34 <luaL_where@@Base+0x5a30>
   558b4:	b	551b8 <lua_gethookcount@@Base+0x1b38>
   558b8:	sub	r1, r9, #2
   558bc:	mov	r0, r4
   558c0:	bl	25b34 <luaL_where@@Base+0x5a30>
   558c4:	ldr	r3, [r4, #96]	; 0x60
   558c8:	add	r3, r3, r6
   558cc:	mov	r1, r0
   558d0:	b	53e7c <lua_gethookcount@@Base+0x7fc>
   558d4:	sub	r1, r9, #3
   558d8:	mov	r0, r4
   558dc:	bl	25b34 <luaL_where@@Base+0x5a30>
   558e0:	ldr	r3, [r4, #96]	; 0x60
   558e4:	b	53e68 <lua_gethookcount@@Base+0x7e8>
   558e8:	uxth	sl, r7
   558ec:	uxth	r5, fp
   558f0:	b	55488 <lua_gethookcount@@Base+0x1e08>
   558f4:	mov	r2, r5
   558f8:	mov	r1, #30
   558fc:	mov	r0, r4
   55900:	bl	27a00 <luaL_where@@Base+0x78fc>
   55904:	b	54654 <lua_gethookcount@@Base+0xfd4>
   55908:	ldr	r1, [pc, #-3108]	; 54cec <lua_gethookcount@@Base+0x166c>
   5590c:	mov	r2, #1179648	; 0x120000
   55910:	str	r2, [r4, #120]	; 0x78
   55914:	strh	r1, [r4, #124]	; 0x7c
   55918:	mov	r0, r4
   5591c:	str	r3, [sp, #16]
   55920:	bl	27498 <luaL_where@@Base+0x7394>
   55924:	add	r7, r6, #1
   55928:	ldr	r3, [sp, #16]
   5592c:	lsl	r7, r7, #3
   55930:	add	r2, r7, #3
   55934:	cmp	r3, #0
   55938:	str	r2, [sp, #16]
   5593c:	str	r0, [sp, #20]
   55940:	blt	55e28 <lua_gethookcount@@Base+0x27a8>
   55944:	cmp	sl, #0
   55948:	uxth	r6, r0
   5594c:	ble	55fd8 <lua_gethookcount@@Base+0x2958>
   55950:	cmp	r3, sl
   55954:	movlt	r1, r3
   55958:	movge	r1, sl
   5595c:	str	r1, [sp, #16]
   55960:	bgt	55d94 <lua_gethookcount@@Base+0x2714>
   55964:	add	r1, r2, r3, lsl #3
   55968:	mov	r0, r4
   5596c:	str	r3, [sp, #20]
   55970:	bl	26ccc <luaL_where@@Base+0x6bc8>
   55974:	ldr	r2, [pc, #-3212]	; 54cf0 <lua_gethookcount@@Base+0x1670>
   55978:	strh	r6, [r4, #120]	; 0x78
   5597c:	strh	r2, [r4, #124]	; 0x7c
   55980:	strh	r0, [r4, #122]	; 0x7a
   55984:	mov	r0, r4
   55988:	bl	27498 <luaL_where@@Base+0x7394>
   5598c:	ldr	r1, [pc, #-3232]	; 54cf4 <lua_gethookcount@@Base+0x1674>
   55990:	ldr	r3, [sp, #20]
   55994:	mov	r2, #32768	; 0x8000
   55998:	strh	r2, [r4, #120]	; 0x78
   5599c:	strh	r6, [r4, #122]	; 0x7a
   559a0:	strh	r1, [r4, #124]	; 0x7c
   559a4:	mov	r0, r4
   559a8:	str	r3, [sp, #20]
   559ac:	bl	27498 <luaL_where@@Base+0x7394>
   559b0:	sub	r1, r7, #5
   559b4:	mov	r6, r0
   559b8:	mov	r0, r4
   559bc:	bl	26ccc <luaL_where@@Base+0x6bc8>
   559c0:	ldr	r2, [pc, #-3280]	; 54cf8 <lua_gethookcount@@Base+0x1678>
   559c4:	strh	r6, [r4, #120]	; 0x78
   559c8:	strh	r2, [r4, #124]	; 0x7c
   559cc:	strh	r0, [r4, #122]	; 0x7a
   559d0:	mov	r0, r4
   559d4:	bl	27498 <luaL_where@@Base+0x7394>
   559d8:	ldr	r2, [sp, #16]
   559dc:	ldr	r3, [sp, #20]
   559e0:	cmp	r2, #0
   559e4:	beq	55bd0 <lua_gethookcount@@Base+0x2550>
   559e8:	uxth	r1, r0
   559ec:	mov	r7, #0
   559f0:	rsb	r0, fp, fp, lsl #29
   559f4:	lsl	fp, r9, #2
   559f8:	strd	r8, [sp, #16]
   559fc:	str	r5, [sp, #24]
   55a00:	str	sl, [sp, #28]
   55a04:	mov	r5, r7
   55a08:	mov	sl, fp
   55a0c:	mov	r8, r2
   55a10:	mov	r9, r1
   55a14:	mov	r7, r0
   55a18:	mov	fp, r3
   55a1c:	b	55a98 <lua_gethookcount@@Base+0x2418>
   55a20:	cmn	r6, #15
   55a24:	bls	55af8 <lua_gethookcount@@Base+0x2478>
   55a28:	mov	r1, r5
   55a2c:	mov	r0, r4
   55a30:	bl	26ccc <luaL_where@@Base+0x6bc8>
   55a34:	ldr	r3, [pc, #-3388]	; 54d00 <lua_gethookcount@@Base+0x1680>
   55a38:	strh	r9, [r4, #120]	; 0x78
   55a3c:	strh	r3, [r4, #124]	; 0x7c
   55a40:	mvn	r6, r6
   55a44:	strh	r0, [r4, #122]	; 0x7a
   55a48:	mov	r0, r4
   55a4c:	bl	27498 <luaL_where@@Base+0x7394>
   55a50:	orr	r1, r6, #18432	; 0x4800
   55a54:	orr	r1, r1, #128	; 0x80
   55a58:	mov	ip, #0
   55a5c:	strh	r1, [r4, #124]	; 0x7c
   55a60:	strh	ip, [r4, #122]	; 0x7a
   55a64:	strh	r0, [r4, #120]	; 0x78
   55a68:	mov	r0, r4
   55a6c:	bl	27498 <luaL_where@@Base+0x7394>
   55a70:	cmp	r6, #2
   55a74:	rsbls	r6, r6, r6, lsl #24
   55a78:	addls	r0, r6, #32512	; 0x7f00
   55a7c:	addls	r0, r0, #255	; 0xff
   55a80:	ldr	r1, [r4, #96]	; 0x60
   55a84:	add	r5, r5, #1
   55a88:	cmp	r8, r5
   55a8c:	str	r0, [r1, sl]
   55a90:	add	sl, sl, #4
   55a94:	beq	55bc0 <lua_gethookcount@@Base+0x2540>
   55a98:	ldr	r0, [r4, #80]	; 0x50
   55a9c:	add	r1, r5, r7
   55aa0:	ldr	r0, [r0, #16]
   55aa4:	add	r1, r0, r1, lsl #3
   55aa8:	ldr	r6, [r1, #4]
   55aac:	cmn	r6, #14
   55ab0:	bne	55a20 <lua_gethookcount@@Base+0x23a0>
   55ab4:	ldr	r6, [pc, #-3520]	; 54cfc <lua_gethookcount@@Base+0x167c>
   55ab8:	mov	r1, r5
   55abc:	mov	r0, r4
   55ac0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   55ac4:	ldr	r3, [pc, #-3532]	; 54d00 <lua_gethookcount@@Base+0x1680>
   55ac8:	strh	r9, [r4, #120]	; 0x78
   55acc:	strh	r3, [r4, #124]	; 0x7c
   55ad0:	strh	r0, [r4, #122]	; 0x7a
   55ad4:	mov	r0, r4
   55ad8:	bl	27498 <luaL_where@@Base+0x7394>
   55adc:	mov	r1, #0
   55ae0:	strh	r6, [r4, #124]	; 0x7c
   55ae4:	strh	r1, [r4, #122]	; 0x7a
   55ae8:	strh	r0, [r4, #120]	; 0x78
   55aec:	mov	r0, r4
   55af0:	bl	27498 <luaL_where@@Base+0x7394>
   55af4:	b	55a80 <lua_gethookcount@@Base+0x2400>
   55af8:	ldr	r6, [pc, #-3580]	; 54d04 <lua_gethookcount@@Base+0x1684>
   55afc:	b	55ab8 <lua_gethookcount@@Base+0x2438>
   55b00:	ldr	r2, [pc, #-3584]	; 54d08 <lua_gethookcount@@Base+0x1688>
   55b04:	mov	r3, #0
   55b08:	strh	r5, [r4, #120]	; 0x78
   55b0c:	strh	r2, [r4, #124]	; 0x7c
   55b10:	strh	r3, [r4, #122]	; 0x7a
   55b14:	mov	r0, r4
   55b18:	bl	27498 <luaL_where@@Base+0x7394>
   55b1c:	b	54654 <lua_gethookcount@@Base+0xfd4>
   55b20:	mov	r1, r9
   55b24:	mov	r0, r4
   55b28:	bl	281cc <luaL_where@@Base+0x80c8>
   55b2c:	mov	r9, r0
   55b30:	b	54e40 <lua_gethookcount@@Base+0x17c0>
   55b34:	mov	r0, r4
   55b38:	bl	2ec24 <luaL_where@@Base+0xeb20>
   55b3c:	add	r3, sp, #40	; 0x28
   55b40:	str	r3, [sp]
   55b44:	mov	r2, r5
   55b48:	add	r3, sp, #48	; 0x30
   55b4c:	mov	r1, r9
   55b50:	mov	r0, r4
   55b54:	bl	27850 <luaL_where@@Base+0x774c>
   55b58:	cmp	r0, #2
   55b5c:	beq	55b6c <lua_gethookcount@@Base+0x24ec>
   55b60:	add	r6, r6, #-184549376	; 0xf5000000
   55b64:	tst	r6, #-33554432	; 0xfe000000
   55b68:	beq	5499c <lua_gethookcount@@Base+0x131c>
   55b6c:	and	r2, r7, #1
   55b70:	cmp	r0, #0
   55b74:	eorne	r2, r2, #1
   55b78:	ldr	r1, [r4, #84]	; 0x54
   55b7c:	mov	r0, r4
   55b80:	bl	1e050 <_start@@Base+0xaca0>
   55b84:	b	53ee4 <lua_gethookcount@@Base+0x864>
   55b88:	mov	r1, r5
   55b8c:	mov	r0, r4
   55b90:	bl	2e684 <luaL_where@@Base+0xe580>
   55b94:	ldr	r3, [r4, #84]	; 0x54
   55b98:	ldr	r2, [r6, #44]	; 0x2c
   55b9c:	ldr	r1, [r3]
   55ba0:	str	r3, [r4, #2312]	; 0x908
   55ba4:	str	r1, [r4, #2316]	; 0x90c
   55ba8:	str	r2, [r3]
   55bac:	b	53ee4 <lua_gethookcount@@Base+0x864>
   55bb0:	ldrd	r0, [sp, #48]	; 0x30
   55bb4:	str	r3, [sp, #72]	; 0x48
   55bb8:	strd	r0, [sp, #32]
   55bbc:	b	55720 <lua_gethookcount@@Base+0x20a0>
   55bc0:	ldrd	r8, [sp, #16]
   55bc4:	ldr	r5, [sp, #24]
   55bc8:	ldr	sl, [sp, #28]
   55bcc:	mov	r3, fp
   55bd0:	cmp	r3, sl
   55bd4:	ble	55c00 <lua_gethookcount@@Base+0x2580>
   55bd8:	ldr	r2, [r4, #96]	; 0x60
   55bdc:	add	r0, sl, r9
   55be0:	add	r8, r9, r8
   55be4:	sub	r1, r2, #4
   55be8:	add	r2, r2, r0, lsl #2
   55bec:	ldr	r0, [pc, #-3816]	; 54d0c <lua_gethookcount@@Base+0x168c>
   55bf0:	add	r1, r1, r8, lsl #2
   55bf4:	str	r0, [r2], #4
   55bf8:	cmp	r1, r2
   55bfc:	bne	55bf4 <lua_gethookcount@@Base+0x2574>
   55c00:	ldr	r2, [r4, #104]	; 0x68
   55c04:	ldr	r8, [sp, #12]
   55c08:	cmp	r5, #0
   55c0c:	add	r3, r3, r9
   55c10:	sub	r8, r8, #1
   55c14:	clz	r8, r8
   55c18:	lsr	r8, r8, #5
   55c1c:	moveq	r8, #0
   55c20:	cmp	r3, r2
   55c24:	bhi	547d4 <lua_gethookcount@@Base+0x1154>
   55c28:	b	53ee4 <lua_gethookcount@@Base+0x864>
   55c2c:	mov	r1, r9
   55c30:	mov	r0, r4
   55c34:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   55c38:	mov	r9, r0
   55c3c:	b	54e40 <lua_gethookcount@@Base+0x17c0>
   55c40:	cmp	r2, #4
   55c44:	bls	55cd4 <lua_gethookcount@@Base+0x2654>
   55c48:	cmp	r3, sl
   55c4c:	beq	56554 <lua_gethookcount@@Base+0x2ed4>
   55c50:	sub	r2, r3, #19
   55c54:	clz	r2, r2
   55c58:	lsr	r2, r2, #5
   55c5c:	b	54afc <lua_gethookcount@@Base+0x147c>
   55c60:	ldrd	r2, [sp, #48]	; 0x30
   55c64:	str	r1, [sp, #72]	; 0x48
   55c68:	strd	r2, [sp, #32]
   55c6c:	b	55774 <lua_gethookcount@@Base+0x20f4>
   55c70:	mov	r1, r9
   55c74:	mov	r0, r4
   55c78:	bl	27e88 <luaL_where@@Base+0x7d84>
   55c7c:	mov	r9, r0
   55c80:	b	54e40 <lua_gethookcount@@Base+0x17c0>
   55c84:	mov	r0, r4
   55c88:	bl	2ec24 <luaL_where@@Base+0xeb20>
   55c8c:	ldr	r3, [sp, #52]	; 0x34
   55c90:	mov	r0, r7
   55c94:	cmn	r3, #14
   55c98:	ldr	r3, [sp, #44]	; 0x2c
   55c9c:	vldreq	s15, [sp, #48]	; 0x30
   55ca0:	vldrne	d0, [sp, #48]	; 0x30
   55ca4:	vcvteq.f64.s32	d0, s15
   55ca8:	cmn	r3, #14
   55cac:	vldreq	s15, [sp, #40]	; 0x28
   55cb0:	vldrne	d1, [sp, #40]	; 0x28
   55cb4:	vcvteq.f64.s32	d1, s15
   55cb8:	bl	159ac <_start@@Base+0x25fc>
   55cbc:	cmp	r0, #0
   55cc0:	eoreq	r6, r7, #1
   55cc4:	moveq	r3, #19
   55cc8:	movne	r6, r7
   55ccc:	movne	r3, #19
   55cd0:	b	54b84 <lua_gethookcount@@Base+0x1504>
   55cd4:	cmp	r3, #19
   55cd8:	movne	r2, #1
   55cdc:	movne	sl, #19
   55ce0:	beq	55c84 <lua_gethookcount@@Base+0x2604>
   55ce4:	cmp	r3, #14
   55ce8:	movne	r2, #0
   55cec:	andeq	r2, r2, #1
   55cf0:	cmp	r2, #0
   55cf4:	bne	55dc0 <lua_gethookcount@@Base+0x2740>
   55cf8:	sub	r2, r3, #1
   55cfc:	cmp	r2, #1
   55d00:	bhi	54668 <lua_gethookcount@@Base+0xfe8>
   55d04:	sub	r2, sl, #1
   55d08:	cmp	r2, #1
   55d0c:	bhi	54668 <lua_gethookcount@@Base+0xfe8>
   55d10:	mov	r0, r4
   55d14:	mov	sl, r3
   55d18:	bl	2ec24 <luaL_where@@Base+0xeb20>
   55d1c:	mov	r6, r7
   55d20:	cmp	sl, #19
   55d24:	beq	55c8c <lua_gethookcount@@Base+0x260c>
   55d28:	cmp	sl, #4
   55d2c:	bne	55e58 <lua_gethookcount@@Base+0x27d8>
   55d30:	ldr	r1, [sp, #40]	; 0x28
   55d34:	ldr	r0, [sp, #48]	; 0x30
   55d38:	bl	14724 <_start@@Base+0x1374>
   55d3c:	cmp	r7, #2
   55d40:	beq	563e0 <lua_gethookcount@@Base+0x2d60>
   55d44:	cmp	r7, #3
   55d48:	beq	563d0 <lua_gethookcount@@Base+0x2d50>
   55d4c:	cmp	r7, #1
   55d50:	mvneq	r0, r0
   55d54:	lsr	r0, r0, #31
   55d58:	cmp	r0, #0
   55d5c:	mov	r3, r5
   55d60:	mov	r2, r9
   55d64:	mov	r1, #0
   55d68:	mov	r0, r4
   55d6c:	eoreq	r6, r7, #1
   55d70:	movne	r6, r7
   55d74:	bl	27a00 <luaL_where@@Base+0x78fc>
   55d78:	mov	r1, #0
   55d7c:	mov	r9, r0
   55d80:	mov	r0, r4
   55d84:	bl	26ccc <luaL_where@@Base+0x6bc8>
   55d88:	mov	r3, #19
   55d8c:	mov	r5, r0
   55d90:	b	54b84 <lua_gethookcount@@Base+0x1504>
   55d94:	ldr	r2, [r4, #80]	; 0x50
   55d98:	mov	r0, r4
   55d9c:	str	r3, [sp, #20]
   55da0:	ldr	r2, [r2, #16]
   55da4:	ldr	r1, [r2, #-4]
   55da8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   55dac:	ldr	r2, [pc, #1992]	; 5657c <lua_gethookcount@@Base+0x2efc>
   55db0:	b	55978 <lua_gethookcount@@Base+0x22f8>
   55db4:	adds	r3, r3, #0
   55db8:	movne	r3, #1
   55dbc:	b	555a4 <lua_gethookcount@@Base+0x1f24>
   55dc0:	ldr	r2, [pc, #1976]	; 56580 <lua_gethookcount@@Base+0x2f00>
   55dc4:	ldr	r3, [pc, #1976]	; 56584 <lua_gethookcount@@Base+0x2f04>
   55dc8:	strh	ip, [r4, #120]	; 0x78
   55dcc:	strh	r2, [r4, #124]	; 0x7c
   55dd0:	strh	r3, [r4, #122]	; 0x7a
   55dd4:	mov	r0, r4
   55dd8:	bl	27498 <luaL_where@@Base+0x7394>
   55ddc:	mov	r5, r0
   55de0:	mov	r0, r4
   55de4:	bl	2ec24 <luaL_where@@Base+0xeb20>
   55de8:	b	54b38 <lua_gethookcount@@Base+0x14b8>
   55dec:	mov	r1, #0
   55df0:	mov	r0, r4
   55df4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   55df8:	ldr	r3, [pc, #1928]	; 56588 <lua_gethookcount@@Base+0x2f08>
   55dfc:	uxth	r7, r7
   55e00:	strh	r3, [r4, #124]	; 0x7c
   55e04:	strh	r7, [r4, #120]	; 0x78
   55e08:	strh	r0, [r4, #122]	; 0x7a
   55e0c:	mov	r0, r4
   55e10:	bl	27498 <luaL_where@@Base+0x7394>
   55e14:	ldr	r3, [pc, #1904]	; 5658c <lua_gethookcount@@Base+0x2f0c>
   55e18:	strh	r7, [r4, #122]	; 0x7a
   55e1c:	strh	r6, [r4, #120]	; 0x78
   55e20:	strh	r3, [r4, #124]	; 0x7c
   55e24:	b	554f8 <lua_gethookcount@@Base+0x1e78>
   55e28:	ldr	r3, [r4, #84]	; 0x54
   55e2c:	ldr	r3, [r3, #4]
   55e30:	uxtb	r2, r3
   55e34:	cmp	r2, #65	; 0x41
   55e38:	beq	56040 <lua_gethookcount@@Base+0x29c0>
   55e3c:	mov	r2, #71	; 0x47
   55e40:	mvn	r3, #13
   55e44:	str	r2, [r4, #2344]	; 0x928
   55e48:	str	r3, [r4, #2348]	; 0x92c
   55e4c:	ldr	r0, [r4, #80]	; 0x50
   55e50:	mov	r1, #7
   55e54:	bl	130c8 <pclose@plt+0x2c>
   55e58:	ldrd	r2, [sp, #48]	; 0x30
   55e5c:	add	fp, sp, #160	; 0xa0
   55e60:	ldr	r1, [sp, #80]	; 0x50
   55e64:	strd	r2, [fp, #-128]!	; 0xffffff80
   55e68:	str	r1, [sp, #72]	; 0x48
   55e6c:	b	55eb4 <lua_gethookcount@@Base+0x2834>
   55e70:	mov	r2, #7
   55e74:	mov	r1, fp
   55e78:	mov	r0, r4
   55e7c:	bl	2d058 <luaL_where@@Base+0xcf54>
   55e80:	cmp	r0, #0
   55e84:	bne	5601c <lua_gethookcount@@Base+0x299c>
   55e88:	ldrd	r2, [sp, #40]	; 0x28
   55e8c:	ldrd	r0, [sp, #48]	; 0x30
   55e90:	ldr	ip, [sp, #76]	; 0x4c
   55e94:	ldr	lr, [sp, #80]	; 0x50
   55e98:	eor	r6, r6, #3
   55e9c:	strd	r2, [sp, #32]
   55ea0:	strd	r2, [sp, #48]	; 0x30
   55ea4:	strd	r0, [sp, #40]	; 0x28
   55ea8:	str	ip, [sp, #72]	; 0x48
   55eac:	str	ip, [sp, #80]	; 0x50
   55eb0:	str	lr, [sp, #76]	; 0x4c
   55eb4:	ands	r7, r6, #2
   55eb8:	bne	55e70 <lua_gethookcount@@Base+0x27f0>
   55ebc:	mov	r2, #6
   55ec0:	mov	r1, fp
   55ec4:	mov	r0, r4
   55ec8:	bl	2d058 <luaL_where@@Base+0xcf54>
   55ecc:	cmp	r0, #0
   55ed0:	beq	54668 <lua_gethookcount@@Base+0xfe8>
   55ed4:	mov	r2, #6
   55ed8:	ldrd	r0, [sp, #56]	; 0x38
   55edc:	ldr	r3, [sp, #44]	; 0x2c
   55ee0:	ldr	sl, [sp, #88]	; 0x58
   55ee4:	cmn	r3, #12
   55ee8:	strd	r0, [sp, #96]	; 0x60
   55eec:	beq	55f3c <lua_gethookcount@@Base+0x28bc>
   55ef0:	cmn	r3, #13
   55ef4:	bne	55f0c <lua_gethookcount@@Base+0x288c>
   55ef8:	ldr	r3, [sp, #40]	; 0x28
   55efc:	ldr	r1, [sp, #64]	; 0x40
   55f00:	ldr	r3, [r3, #16]
   55f04:	cmp	r1, r3
   55f08:	beq	56518 <lua_gethookcount@@Base+0x2e98>
   55f0c:	ldrd	r0, [sp, #40]	; 0x28
   55f10:	ldr	r3, [sp, #76]	; 0x4c
   55f14:	strd	r0, [sp, #32]
   55f18:	mov	r1, fp
   55f1c:	mov	r0, r4
   55f20:	str	r3, [sp, #72]	; 0x48
   55f24:	bl	2d058 <luaL_where@@Base+0xcf54>
   55f28:	cmp	r0, #0
   55f2c:	bne	55fac <lua_gethookcount@@Base+0x292c>
   55f30:	cmp	r7, #0
   55f34:	bne	55e88 <lua_gethookcount@@Base+0x2808>
   55f38:	b	54668 <lua_gethookcount@@Base+0xfe8>
   55f3c:	ldr	r3, [sp, #40]	; 0x28
   55f40:	ldr	r1, [sp, #64]	; 0x40
   55f44:	ldr	r3, [r3, #16]
   55f48:	cmp	r1, r3
   55f4c:	bne	55f0c <lua_gethookcount@@Base+0x288c>
   55f50:	ldrh	r1, [sp, #76]	; 0x4c
   55f54:	ldr	r2, [pc, #1588]	; 56590 <lua_gethookcount@@Base+0x2f10>
   55f58:	mov	r3, #5
   55f5c:	str	fp, [sp, #12]
   55f60:	strh	r2, [r4, #124]	; 0x7c
   55f64:	strh	r3, [r4, #122]	; 0x7a
   55f68:	strh	r1, [r4, #120]	; 0x78
   55f6c:	mov	r0, r4
   55f70:	bl	27498 <luaL_where@@Base+0x7394>
   55f74:	ldrh	r2, [sp, #84]	; 0x54
   55f78:	ldr	r3, [pc, #1556]	; 56594 <lua_gethookcount@@Base+0x2f14>
   55f7c:	strh	r2, [r4, #122]	; 0x7a
   55f80:	strh	r3, [r4, #124]	; 0x7c
   55f84:	strh	r0, [r4, #120]	; 0x78
   55f88:	mov	r0, r4
   55f8c:	bl	27498 <luaL_where@@Base+0x7394>
   55f90:	cmp	r5, #0
   55f94:	mov	r2, r6
   55f98:	ldr	r1, [sp, #12]
   55f9c:	mov	r0, r4
   55fa0:	moveq	r8, #0
   55fa4:	bl	2d640 <luaL_where@@Base+0xd53c>
   55fa8:	b	53ee4 <lua_gethookcount@@Base+0x864>
   55fac:	add	r3, sp, #56	; 0x38
   55fb0:	str	r3, [sp]
   55fb4:	ldr	r2, [sp, #88]	; 0x58
   55fb8:	mov	r1, sl
   55fbc:	add	r3, sp, #96	; 0x60
   55fc0:	mov	r0, r4
   55fc4:	bl	27850 <luaL_where@@Base+0x774c>
   55fc8:	cmp	r0, #0
   55fcc:	bne	55f30 <lua_gethookcount@@Base+0x28b0>
   55fd0:	str	fp, [sp, #12]
   55fd4:	b	55f90 <lua_gethookcount@@Base+0x2910>
   55fd8:	ldr	r1, [sp, #16]
   55fdc:	mov	r0, r4
   55fe0:	str	r3, [sp, #20]
   55fe4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   55fe8:	ldr	r2, [pc, #1448]	; 56598 <lua_gethookcount@@Base+0x2f18>
   55fec:	strh	r6, [r4, #120]	; 0x78
   55ff0:	strh	r2, [r4, #124]	; 0x7c
   55ff4:	mov	sl, #0
   55ff8:	strh	r0, [r4, #122]	; 0x7a
   55ffc:	mov	r0, r4
   56000:	bl	27498 <luaL_where@@Base+0x7394>
   56004:	ldr	r3, [sp, #20]
   56008:	b	55bd0 <lua_gethookcount@@Base+0x2550>
   5600c:	sub	r2, sl, #19
   56010:	clz	r2, r2
   56014:	lsr	r2, r2, #5
   56018:	b	55ce4 <lua_gethookcount@@Base+0x2664>
   5601c:	mov	r2, #7
   56020:	b	55ed8 <lua_gethookcount@@Base+0x2858>
   56024:	add	r3, r6, #44	; 0x2c
   56028:	strh	sl, [r4, #120]	; 0x78
   5602c:	lsl	r3, r3, #8
   56030:	orr	r3, r3, #147	; 0x93
   56034:	strh	r3, [r4, #124]	; 0x7c
   56038:	strh	r5, [r4, #122]	; 0x7a
   5603c:	b	554f8 <lua_gethookcount@@Base+0x1e78>
   56040:	lsr	r2, r3, #24
   56044:	cmp	r2, #2
   56048:	bne	55e3c <lua_gethookcount@@Base+0x27bc>
   5604c:	lsr	r2, r3, #16
   56050:	uxtb	r2, r2
   56054:	cmp	r2, #1
   56058:	bne	55e3c <lua_gethookcount@@Base+0x27bc>
   5605c:	ldr	r2, [r4, #80]	; 0x50
   56060:	lsr	r3, r3, #8
   56064:	ldr	r2, [r2, #16]
   56068:	uxtb	r8, r3
   5606c:	add	r3, r2, r8, lsl #3
   56070:	ldr	r3, [r3, #4]
   56074:	cmn	r3, #9
   56078:	bne	55e3c <lua_gethookcount@@Base+0x27bc>
   5607c:	ldr	r1, [r2, r8, lsl #3]
   56080:	ldrb	r3, [r1, #6]
   56084:	cmp	r3, #16
   56088:	bne	55e3c <lua_gethookcount@@Base+0x27bc>
   5608c:	mov	r2, #8
   56090:	mov	r0, r4
   56094:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   56098:	ldr	r3, [r4, #96]	; 0x60
   5609c:	mov	fp, r0
   560a0:	ldr	r0, [r3, r8, lsl #2]
   560a4:	cmp	r0, #0
   560a8:	bne	560b8 <lua_gethookcount@@Base+0x2a38>
   560ac:	mov	r1, r8
   560b0:	mov	r0, r4
   560b4:	bl	25b34 <luaL_where@@Base+0x5a30>
   560b8:	ldr	r3, [pc, #1244]	; 5659c <lua_gethookcount@@Base+0x2f1c>
   560bc:	uxth	r0, r0
   560c0:	strh	r0, [r4, #120]	; 0x78
   560c4:	strh	fp, [r4, #122]	; 0x7a
   560c8:	strh	r3, [r4, #124]	; 0x7c
   560cc:	mov	r0, r4
   560d0:	bl	27498 <luaL_where@@Base+0x7394>
   560d4:	ldr	r0, [r4, #96]	; 0x60
   560d8:	ldr	r1, [r4, #80]	; 0x50
   560dc:	sub	r3, r9, #-1073741823	; 0xc0000001
   560e0:	sub	r2, r9, #-536870911	; 0xe0000001
   560e4:	ldr	r8, [r0, r3, lsl #2]
   560e8:	ldr	r0, [r1, #16]
   560ec:	lsl	r3, r3, #2
   560f0:	add	r2, r0, r2, lsl #3
   560f4:	mov	r1, r8
   560f8:	mov	r0, r4
   560fc:	str	r3, [sp, #28]
   56100:	bl	2ad98 <luaL_where@@Base+0xac94>
   56104:	subs	fp, r0, #0
   56108:	blt	55e3c <lua_gethookcount@@Base+0x27bc>
   5610c:	beq	5626c <lua_gethookcount@@Base+0x2bec>
   56110:	lsr	r3, r8, #24
   56114:	and	r3, r3, #31
   56118:	sub	r3, r3, #15
   5611c:	cmp	r3, #4
   56120:	bhi	564f4 <lua_gethookcount@@Base+0x2e74>
   56124:	tst	r8, #32768	; 0x8000
   56128:	bne	5648c <lua_gethookcount@@Base+0x2e0c>
   5612c:	cmp	sl, fp
   56130:	blt	5639c <lua_gethookcount@@Base+0x2d1c>
   56134:	ldr	r3, [sp, #16]
   56138:	mov	r0, r4
   5613c:	add	r1, r3, fp, lsl #3
   56140:	bl	26ccc <luaL_where@@Base+0x6bc8>
   56144:	ldrh	r2, [sp, #20]
   56148:	ldr	r3, [pc, #1104]	; 565a0 <lua_gethookcount@@Base+0x2f20>
   5614c:	strh	r2, [r4, #120]	; 0x78
   56150:	strh	r3, [r4, #124]	; 0x7c
   56154:	sub	r3, r7, #5
   56158:	str	r3, [sp, #16]
   5615c:	strh	r0, [r4, #122]	; 0x7a
   56160:	mov	r0, r4
   56164:	bl	27498 <luaL_where@@Base+0x7394>
   56168:	ldrh	r1, [sp, #20]
   5616c:	ldr	r2, [pc, #1072]	; 565a4 <lua_gethookcount@@Base+0x2f24>
   56170:	mov	r3, #32768	; 0x8000
   56174:	strh	r2, [r4, #124]	; 0x7c
   56178:	strh	r1, [r4, #122]	; 0x7a
   5617c:	strh	r3, [r4, #120]	; 0x78
   56180:	mov	r0, r4
   56184:	bl	27498 <luaL_where@@Base+0x7394>
   56188:	ldr	r3, [sp, #16]
   5618c:	uxth	r8, r8
   56190:	sub	r1, r3, #8
   56194:	mov	r6, r0
   56198:	mov	r0, r4
   5619c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   561a0:	ldr	r3, [pc, #1024]	; 565a8 <lua_gethookcount@@Base+0x2f28>
   561a4:	strh	r6, [r4, #120]	; 0x78
   561a8:	strh	r3, [r4, #124]	; 0x7c
   561ac:	strh	r0, [r4, #122]	; 0x7a
   561b0:	mov	r0, r4
   561b4:	bl	27498 <luaL_where@@Base+0x7394>
   561b8:	ldr	r1, [r4, #80]	; 0x50
   561bc:	sub	r3, fp, #2
   561c0:	sub	r2, r3, sl
   561c4:	ldr	r3, [r1, #16]
   561c8:	add	r3, r3, r2, lsl #3
   561cc:	ldr	r7, [r3, #4]
   561d0:	cmn	r7, #14
   561d4:	beq	56484 <lua_gethookcount@@Base+0x2e04>
   561d8:	cmn	r7, #15
   561dc:	bls	56440 <lua_gethookcount@@Base+0x2dc0>
   561e0:	ldr	r3, [pc, #964]	; 565ac <lua_gethookcount@@Base+0x2f2c>
   561e4:	strh	r0, [r4, #120]	; 0x78
   561e8:	strh	r3, [r4, #124]	; 0x7c
   561ec:	strh	r8, [r4, #122]	; 0x7a
   561f0:	mov	r0, r4
   561f4:	bl	27498 <luaL_where@@Base+0x7394>
   561f8:	mvn	r7, r7
   561fc:	orr	r3, r7, #18432	; 0x4800
   56200:	orr	r3, r3, #128	; 0x80
   56204:	mov	r2, #0
   56208:	strh	r3, [r4, #124]	; 0x7c
   5620c:	strh	r2, [r4, #122]	; 0x7a
   56210:	strh	r0, [r4, #120]	; 0x78
   56214:	mov	r0, r4
   56218:	bl	27498 <luaL_where@@Base+0x7394>
   5621c:	cmp	r7, #2
   56220:	rsbls	r7, r7, r7, lsl #24
   56224:	mov	r6, r0
   56228:	addls	r6, r7, #32512	; 0x7f00
   5622c:	addls	r6, r6, #255	; 0xff
   56230:	ldr	r3, [sp, #12]
   56234:	ldr	r2, [r4, #96]	; 0x60
   56238:	sub	r8, r3, #1
   5623c:	ldr	r3, [sp, #28]
   56240:	mov	r1, #2
   56244:	add	r2, r2, r3
   56248:	cmp	r5, #0
   5624c:	sub	r3, r9, #1
   56250:	str	r6, [r2, #-4]
   56254:	clz	r8, r8
   56258:	str	r3, [r4, #104]	; 0x68
   5625c:	lsr	r8, r8, #5
   56260:	strb	r1, [r4, #115]	; 0x73
   56264:	moveq	r8, #0
   56268:	b	53ee4 <lua_gethookcount@@Base+0x864>
   5626c:	ldrh	r3, [sp, #20]
   56270:	cmp	sl, #0
   56274:	str	r3, [sp, #24]
   56278:	blt	56348 <lua_gethookcount@@Base+0x2cc8>
   5627c:	mvn	r1, #2
   56280:	sub	r1, r1, r7
   56284:	mov	r0, r4
   56288:	bl	26ccc <luaL_where@@Base+0x6bc8>
   5628c:	ldrh	r2, [sp, #24]
   56290:	ldr	r3, [pc, #792]	; 565b0 <lua_gethookcount@@Base+0x2f30>
   56294:	strh	r2, [r4, #120]	; 0x78
   56298:	strh	r3, [r4, #124]	; 0x7c
   5629c:	strh	r0, [r4, #122]	; 0x7a
   562a0:	mov	r0, r4
   562a4:	bl	27498 <luaL_where@@Base+0x7394>
   562a8:	cmp	r6, #0
   562ac:	mov	r7, r0
   562b0:	beq	562d8 <lua_gethookcount@@Base+0x2c58>
   562b4:	mov	r1, #0
   562b8:	mov	r0, r4
   562bc:	bl	26ccc <luaL_where@@Base+0x6bc8>
   562c0:	ldr	r3, [pc, #728]	; 565a0 <lua_gethookcount@@Base+0x2f20>
   562c4:	strh	r7, [r4, #120]	; 0x78
   562c8:	strh	r3, [r4, #124]	; 0x7c
   562cc:	strh	r0, [r4, #122]	; 0x7a
   562d0:	mov	r0, r4
   562d4:	bl	27498 <luaL_where@@Base+0x7394>
   562d8:	mov	r1, #3
   562dc:	mov	r0, r4
   562e0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   562e4:	ldr	r3, [pc, #712]	; 565b4 <lua_gethookcount@@Base+0x2f34>
   562e8:	strh	r7, [r4, #120]	; 0x78
   562ec:	strh	r3, [r4, #124]	; 0x7c
   562f0:	strh	r0, [r4, #122]	; 0x7a
   562f4:	mov	r0, r4
   562f8:	bl	27498 <luaL_where@@Base+0x7394>
   562fc:	cmp	fp, #0
   56300:	mov	r6, r0
   56304:	beq	56230 <lua_gethookcount@@Base+0x2bb0>
   56308:	mvn	r1, #0
   5630c:	mov	r0, r4
   56310:	bl	26ccc <luaL_where@@Base+0x6bc8>
   56314:	ldr	r3, [pc, #660]	; 565b0 <lua_gethookcount@@Base+0x2f30>
   56318:	strh	r8, [r4, #120]	; 0x78
   5631c:	strh	r3, [r4, #124]	; 0x7c
   56320:	strh	r0, [r4, #122]	; 0x7a
   56324:	mov	r0, r4
   56328:	bl	27498 <luaL_where@@Base+0x7394>
   5632c:	mov	r3, sl
   56330:	mov	r1, r6
   56334:	mov	r8, r0
   56338:	mov	r2, r0
   5633c:	mov	r0, r4
   56340:	bl	27b40 <luaL_where@@Base+0x7a3c>
   56344:	b	56168 <lua_gethookcount@@Base+0x2ae8>
   56348:	ldr	r1, [sp, #16]
   5634c:	mov	r0, r4
   56350:	bl	26ccc <luaL_where@@Base+0x6bc8>
   56354:	mov	r1, fp
   56358:	mov	r7, r0
   5635c:	mov	r0, r4
   56360:	bl	26ccc <luaL_where@@Base+0x6bc8>
   56364:	mov	r6, r0
   56368:	ldrh	r2, [sp, #24]
   5636c:	mov	r3, #147	; 0x93
   56370:	strh	r7, [r4, #122]	; 0x7a
   56374:	strh	r2, [r4, #120]	; 0x78
   56378:	strh	r3, [r4, #124]	; 0x7c
   5637c:	mov	r0, r4
   56380:	bl	27498 <luaL_where@@Base+0x7394>
   56384:	b	56230 <lua_gethookcount@@Base+0x2bb0>
   56388:	add	r1, r4, #2336	; 0x920
   5638c:	add	r1, r1, #12
   56390:	ldr	r0, [r4, #80]	; 0x50
   56394:	mov	r2, #8
   56398:	bl	210d0 <luaL_where@@Base+0xfcc>
   5639c:	ldr	r3, [sp, #16]
   563a0:	mov	r0, r4
   563a4:	add	r1, r3, fp, lsl #3
   563a8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   563ac:	ldrh	r2, [sp, #20]
   563b0:	mov	r3, #147	; 0x93
   563b4:	strh	r3, [r4, #124]	; 0x7c
   563b8:	strh	r2, [r4, #120]	; 0x78
   563bc:	ldr	r6, [pc, #500]	; 565b8 <lua_gethookcount@@Base+0x2f38>
   563c0:	strh	r0, [r4, #122]	; 0x7a
   563c4:	mov	r0, r4
   563c8:	bl	27498 <luaL_where@@Base+0x7394>
   563cc:	b	56230 <lua_gethookcount@@Base+0x2bb0>
   563d0:	cmp	r0, #0
   563d4:	movle	r0, #0
   563d8:	movgt	r0, #1
   563dc:	b	55d58 <lua_gethookcount@@Base+0x26d8>
   563e0:	cmp	r0, #0
   563e4:	movgt	r0, #0
   563e8:	movle	r0, #1
   563ec:	b	55d58 <lua_gethookcount@@Base+0x26d8>
   563f0:	ldr	r2, [sp, #40]	; 0x28
   563f4:	ldr	r1, [sp, #64]	; 0x40
   563f8:	ldr	r2, [r2, #16]
   563fc:	cmp	r1, r2
   56400:	bne	54a08 <lua_gethookcount@@Base+0x1388>
   56404:	ldr	r2, [pc, #388]	; 56590 <lua_gethookcount@@Base+0x2f10>
   56408:	strh	r3, [r4, #120]	; 0x78
   5640c:	mov	r3, #5
   56410:	strh	r2, [r4, #124]	; 0x7c
   56414:	strh	r3, [r4, #122]	; 0x7a
   56418:	mov	r0, r4
   5641c:	bl	27498 <luaL_where@@Base+0x7394>
   56420:	ldrh	r2, [sp, #84]	; 0x54
   56424:	ldr	r3, [pc, #360]	; 56594 <lua_gethookcount@@Base+0x2f14>
   56428:	strh	r2, [r4, #122]	; 0x7a
   5642c:	strh	r3, [r4, #124]	; 0x7c
   56430:	strh	r0, [r4, #120]	; 0x78
   56434:	mov	r0, r4
   56438:	bl	27498 <luaL_where@@Base+0x7394>
   5643c:	b	54a50 <lua_gethookcount@@Base+0x13d0>
   56440:	mov	r6, #14
   56444:	ldr	r3, [pc, #352]	; 565ac <lua_gethookcount@@Base+0x2f2c>
   56448:	strh	r0, [r4, #120]	; 0x78
   5644c:	strh	r3, [r4, #124]	; 0x7c
   56450:	strh	r8, [r4, #122]	; 0x7a
   56454:	mov	r0, r4
   56458:	bl	27498 <luaL_where@@Base+0x7394>
   5645c:	orr	r3, r6, #18432	; 0x4800
   56460:	orr	r3, r3, #128	; 0x80
   56464:	mov	r2, #0
   56468:	strh	r3, [r4, #124]	; 0x7c
   5646c:	strh	r2, [r4, #122]	; 0x7a
   56470:	strh	r0, [r4, #120]	; 0x78
   56474:	mov	r0, r4
   56478:	bl	27498 <luaL_where@@Base+0x7394>
   5647c:	mov	r6, r0
   56480:	b	56230 <lua_gethookcount@@Base+0x2bb0>
   56484:	mov	r6, #19
   56488:	b	56444 <lua_gethookcount@@Base+0x2dc4>
   5648c:	ldrh	r3, [sp, #20]
   56490:	cmp	sl, fp
   56494:	str	r3, [sp, #24]
   56498:	bge	5627c <lua_gethookcount@@Base+0x2bfc>
   5649c:	ldr	r1, [sp, #16]
   564a0:	mov	r0, r4
   564a4:	bl	26ccc <luaL_where@@Base+0x6bc8>
   564a8:	mov	r1, #3
   564ac:	ldr	r6, [pc, #260]	; 565b8 <lua_gethookcount@@Base+0x2f38>
   564b0:	mov	r7, r0
   564b4:	mov	r0, r4
   564b8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   564bc:	ldr	r3, [pc, #248]	; 565bc <lua_gethookcount@@Base+0x2f3c>
   564c0:	strh	r8, [r4, #120]	; 0x78
   564c4:	strh	r3, [r4, #124]	; 0x7c
   564c8:	strh	r0, [r4, #122]	; 0x7a
   564cc:	mov	r0, r4
   564d0:	bl	27498 <luaL_where@@Base+0x7394>
   564d4:	ldr	r3, [pc, #212]	; 565b0 <lua_gethookcount@@Base+0x2f30>
   564d8:	strh	r7, [r4, #122]	; 0x7a
   564dc:	strh	r3, [r4, #124]	; 0x7c
   564e0:	strh	r0, [r4, #120]	; 0x78
   564e4:	mov	r0, r4
   564e8:	bl	27498 <luaL_where@@Base+0x7394>
   564ec:	mov	r7, r0
   564f0:	b	56368 <lua_gethookcount@@Base+0x2ce8>
   564f4:	ldr	r2, [pc, #196]	; 565c0 <lua_gethookcount@@Base+0x2f40>
   564f8:	ldr	r3, [pc, #196]	; 565c4 <lua_gethookcount@@Base+0x2f44>
   564fc:	strh	r8, [r4, #120]	; 0x78
   56500:	strh	r2, [r4, #124]	; 0x7c
   56504:	strh	r3, [r4, #122]	; 0x7a
   56508:	mov	r0, r4
   5650c:	bl	27498 <luaL_where@@Base+0x7394>
   56510:	mov	r8, r0
   56514:	b	56124 <lua_gethookcount@@Base+0x2aa4>
   56518:	str	fp, [sp, #12]
   5651c:	ldrh	r1, [sp, #76]	; 0x4c
   56520:	ldr	r2, [pc, #104]	; 56590 <lua_gethookcount@@Base+0x2f10>
   56524:	mov	r3, #11
   56528:	b	55f60 <lua_gethookcount@@Base+0x28e0>
   5652c:	add	r1, r4, #2336	; 0x920
   56530:	add	r1, r1, #12
   56534:	ldr	r0, [r4, #80]	; 0x50
   56538:	mov	r2, #3
   5653c:	bl	210d0 <luaL_where@@Base+0xfcc>
   56540:	add	r1, r4, #2336	; 0x920
   56544:	add	r1, r1, #12
   56548:	ldr	r0, [r4, #80]	; 0x50
   5654c:	mov	r2, #18
   56550:	bl	210d0 <luaL_where@@Base+0xfcc>
   56554:	mov	r0, r4
   56558:	bl	2ec24 <luaL_where@@Base+0xeb20>
   5655c:	cmp	sl, #14
   56560:	mov	r6, r7
   56564:	bne	55d20 <lua_gethookcount@@Base+0x26a0>
   56568:	b	54b38 <lua_gethookcount@@Base+0x14b8>
   5656c:	strh	r3, [r4, #120]	; 0x78
   56570:	ldr	r2, [pc, #24]	; 56590 <lua_gethookcount@@Base+0x2f10>
   56574:	mov	r3, #11
   56578:	b	56410 <lua_gethookcount@@Base+0x2d90>
   5657c:	muleq	r0, r3, r8
   56580:	andeq	r5, r0, lr, lsl #20
   56584:	ldrdeq	r0, [r0], -r3
   56588:	muleq	r0, r3, r9
   5658c:	andeq	r2, r0, r3, lsl sp
   56590:	andeq	r4, r0, fp, lsl #10
   56594:	andeq	r0, r0, fp, lsl #17
   56598:	muleq	r0, r3, r2
   5659c:	andeq	r0, r0, r8, lsl #17
   565a0:	muleq	r0, r3, r1
   565a4:	andeq	r2, r0, r3, lsl sl
   565a8:	andeq	r2, r0, r5, lsl #18
   565ac:	andeq	r3, r0, r5, lsl #18
   565b0:	andeq	r2, r0, r3, lsl r9
   565b4:	andeq	r2, r0, r3, lsl r5
   565b8:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   565bc:	andeq	r2, r0, r3, lsl r4
   565c0:	muleq	r0, r3, sl
   565c4:	andeq	r2, r0, lr, ror #4
   565c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   565cc:	mov	r4, r2
   565d0:	ldr	r3, [r2, #168]	; 0xa8
   565d4:	ldr	r6, [pc, #3892]	; 57510 <lua_gethookcount@@Base+0x3e90>
   565d8:	sub	sp, sp, #44	; 0x2c
   565dc:	mov	sl, r0
   565e0:	mov	r8, #0
   565e4:	sub	r3, r3, #17
   565e8:	cmp	r3, #4
   565ec:	ldrls	pc, [pc, r3, lsl #2]
   565f0:	b	56608 <lua_gethookcount@@Base+0x2f88>
   565f4:	andeq	r6, r5, r8, lsl #17
   565f8:	andeq	r6, r5, r0, ror #16
   565fc:	andeq	r6, r5, r4, asr #14
   56600:	andeq	r6, r5, r0, asr #15
   56604:	andeq	r6, r5, r0, lsr #12
   56608:	ldr	r3, [sl, #20]
   5660c:	mvn	r2, #13
   56610:	add	r1, r3, #8
   56614:	str	r1, [sl, #20]
   56618:	str	r8, [r3]
   5661c:	str	r2, [r3, #4]
   56620:	ldr	r3, [r4, #2312]	; 0x908
   56624:	ldr	r7, [r4, #80]	; 0x50
   56628:	cmp	r3, #0
   5662c:	ldrne	r2, [r4, #2316]	; 0x90c
   56630:	strne	r2, [r3]
   56634:	ldr	r3, [r4, #2324]	; 0x914
   56638:	strne	r8, [r4, #2312]	; 0x908
   5663c:	cmp	r3, #0
   56640:	str	r8, [r4, #264]	; 0x108
   56644:	beq	56660 <lua_gethookcount@@Base+0x2fe0>
   56648:	ldr	r3, [r4, #2320]	; 0x910
   5664c:	cmp	r3, #5
   56650:	beq	56660 <lua_gethookcount@@Base+0x2fe0>
   56654:	mov	r1, #5
   56658:	mov	r0, r4
   5665c:	bl	37754 <luaL_typerror@@Base+0x13e8>
   56660:	ldr	r1, [r4, #76]	; 0x4c
   56664:	cmp	r1, #0
   56668:	beq	56678 <lua_gethookcount@@Base+0x2ff8>
   5666c:	sub	r0, r4, #384	; 0x180
   56670:	bl	16f38 <_start@@Base+0x3b88>
   56674:	str	r8, [r4, #76]	; 0x4c
   56678:	ldr	r5, [r7, #20]
   5667c:	ldr	r3, [r5, #-4]
   56680:	cmn	r3, #14
   56684:	bhi	568b8 <lua_gethookcount@@Base+0x3238>
   56688:	vldrne	d7, [r5, #-8]
   5668c:	ldreq	fp, [r5, #-8]
   56690:	vcvtne.s32.f64	s15, d7
   56694:	vmovne	fp, s15
   56698:	cmp	fp, #29
   5669c:	beq	572c0 <lua_gethookcount@@Base+0x3c40>
   566a0:	ldr	r3, [r4, #2304]	; 0x900
   566a4:	cmp	r3, #0
   566a8:	bne	566bc <lua_gethookcount@@Base+0x303c>
   566ac:	ldrb	r3, [r4, #44]	; 0x2c
   566b0:	sub	r3, r3, #73	; 0x49
   566b4:	cmp	r3, #3
   566b8:	bhi	568c0 <lua_gethookcount@@Base+0x3240>
   566bc:	ldrh	r9, [r4, #64]	; 0x40
   566c0:	sub	r5, r5, #8
   566c4:	cmp	r9, #0
   566c8:	beq	5670c <lua_gethookcount@@Base+0x308c>
   566cc:	ldr	r3, [r7, #28]
   566d0:	strb	r8, [r4, #7]
   566d4:	str	r3, [sp]
   566d8:	ldr	r3, [r7, #8]
   566dc:	strh	r8, [r4, #66]	; 0x42
   566e0:	ldrb	r3, [r3, #115]	; 0x73
   566e4:	tst	r3, #2
   566e8:	bne	56b60 <lua_gethookcount@@Base+0x34e0>
   566ec:	ldr	r5, [r7, #20]
   566f0:	ldr	r2, [r4, #276]	; 0x114
   566f4:	ldr	r3, [r4, #272]	; 0x110
   566f8:	sub	r5, r5, #8
   566fc:	cmp	r9, r2
   56700:	str	r8, [r3, r9, lsl #2]
   56704:	strcc	r9, [r4, #276]	; 0x114
   56708:	strh	r8, [r4, #64]	; 0x40
   5670c:	cmp	fp, #14
   56710:	str	r5, [r7, #20]
   56714:	beq	571ec <lua_gethookcount@@Base+0x3b6c>
   56718:	cmp	fp, #27
   5671c:	beq	572d4 <lua_gethookcount@@Base+0x3c54>
   56720:	mvn	r2, #0
   56724:	mov	r3, #0
   56728:	str	r2, [r4, #-308]	; 0xfffffecc
   5672c:	str	r3, [r4, #168]	; 0xa8
   56730:	sub	r0, r4, #384	; 0x180
   56734:	bl	17c5c <_start@@Base+0x48ac>
   56738:	mov	r0, #0
   5673c:	add	sp, sp, #44	; 0x2c
   56740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   56744:	ldr	r3, [r4, #2312]	; 0x908
   56748:	cmp	r3, #0
   5674c:	movne	r2, #0
   56750:	ldrne	r1, [r4, #2316]	; 0x90c
   56754:	strne	r1, [r3]
   56758:	ldr	r3, [r4, #100]	; 0x64
   5675c:	strne	r2, [r4, #2312]	; 0x908
   56760:	mov	r2, #0
   56764:	tst	r3, #4194304	; 0x400000
   56768:	str	r2, [r4, #244]	; 0xf4
   5676c:	beq	56780 <lua_gethookcount@@Base+0x3100>
   56770:	ldrh	r1, [r4, #66]	; 0x42
   56774:	ldrh	r2, [r4, #64]	; 0x40
   56778:	cmp	r1, r2
   5677c:	beq	572e0 <lua_gethookcount@@Base+0x3c60>
   56780:	ldrb	r3, [r4, #268]	; 0x10c
   56784:	cmp	r3, #0
   56788:	bne	56b24 <lua_gethookcount@@Base+0x34a4>
   5678c:	ldr	r3, [pc, #3456]	; 57514 <lua_gethookcount@@Base+0x3e94>
   56790:	ldr	r2, [r4, #100]	; 0x64
   56794:	bics	r3, r3, r2
   56798:	beq	56900 <lua_gethookcount@@Base+0x3280>
   5679c:	ldr	r3, [r4, #244]	; 0xf4
   567a0:	cmp	r3, #0
   567a4:	mvneq	r2, #0
   567a8:	ldrheq	r1, [r4, #24]
   567ac:	ldreq	r3, [r4, #28]
   567b0:	addeq	r3, r3, r1, lsl #3
   567b4:	strbeq	r2, [r3, #-1]
   567b8:	mov	r3, #20
   567bc:	str	r3, [r4, #168]	; 0xa8
   567c0:	mvn	r3, #6
   567c4:	str	r3, [r4, #-308]	; 0xfffffecc
   567c8:	mov	r1, r4
   567cc:	mov	r0, r4
   567d0:	bl	3931c <luaL_typerror@@Base+0x2fb0>
   567d4:	ldr	r2, [r4, #44]	; 0x2c
   567d8:	ldr	r0, [r4, #40]	; 0x28
   567dc:	ldr	r1, [r4, #36]	; 0x24
   567e0:	uxtb	r3, r2
   567e4:	sub	r3, r3, #65	; 0x41
   567e8:	ldrh	r6, [r4, #64]	; 0x40
   567ec:	ldr	r5, [r4, #76]	; 0x4c
   567f0:	cmp	r3, #24
   567f4:	ldrls	pc, [pc, r3, lsl #2]
   567f8:	b	57610 <lua_gethookcount@@Base+0x3f90>
   567fc:			; <UNDEFINED> instruction: 0x000574b0
   56800:			; <UNDEFINED> instruction: 0x000574b0
   56804:	andeq	r7, r5, r0, lsl r6
   56808:	andeq	r7, r5, r0, lsl r6
   5680c:			; <UNDEFINED> instruction: 0x000574b0
   56810:	andeq	r7, r5, r0, lsl r6
   56814:	andeq	r7, r5, r0, lsl r6
   56818:	andeq	r7, r5, r0, lsl r6
   5681c:	andeq	r7, r5, r0, lsl r6
   56820:	andeq	r7, r5, r8, asr #9
   56824:	andeq	r7, r5, r8, asr #9
   56828:	andeq	r7, r5, r8, asr #9
   5682c:	andeq	r7, r5, r0, lsl r6
   56830:	andeq	r7, r5, r0, lsl r6
   56834:	andeq	r6, r5, r0, ror ip
   56838:	andeq	r7, r5, r0, lsl r6
   5683c:	andeq	r7, r5, r0, lsl r6
   56840:	andeq	r6, r5, r4, lsl #25
   56844:	andeq	r7, r5, r0, lsl r6
   56848:	andeq	r7, r5, r0, lsl r6
   5684c:	andeq	r6, r5, r4, lsl #25
   56850:	andeq	r7, r5, r0, lsl r6
   56854:	andeq	r7, r5, r0, lsl r6
   56858:	andeq	r7, r5, r0, lsl #7
   5685c:	andeq	r6, r5, r4, lsl #25
   56860:	mov	r3, #17
   56864:	mov	r0, r4
   56868:	str	r3, [r4, #168]	; 0xa8
   5686c:	bl	50a04 <luaL_error@@Base+0xa918>
   56870:	sub	r0, r4, #384	; 0x180
   56874:	bl	17c5c <_start@@Base+0x48ac>
   56878:	ldr	r3, [r4, #168]	; 0xa8
   5687c:	cmp	r3, #17
   56880:	bhi	565e4 <lua_gethookcount@@Base+0x2f64>
   56884:	b	56738 <lua_gethookcount@@Base+0x30b8>
   56888:	ldr	r3, [r4, #2312]	; 0x908
   5688c:	cmp	r3, #0
   56890:	bne	57720 <lua_gethookcount@@Base+0x40a0>
   56894:	ldr	r3, [sl, #8]
   56898:	mvn	r2, #4
   5689c:	str	r2, [r4, #-308]	; 0xfffffecc
   568a0:	ldrb	r3, [r3, #115]	; 0x73
   568a4:	tst	r3, #4
   568a8:	bne	5721c <lua_gethookcount@@Base+0x3b9c>
   568ac:	mov	r0, r4
   568b0:	bl	53d18 <lua_gethookcount@@Base+0x698>
   568b4:	b	56878 <lua_gethookcount@@Base+0x31f8>
   568b8:	mov	fp, #0
   568bc:	b	566a0 <lua_gethookcount@@Base+0x3020>
   568c0:	ldr	r3, [r4, #2308]	; 0x904
   568c4:	cmp	r3, #0
   568c8:	bne	57370 <lua_gethookcount@@Base+0x3cf0>
   568cc:	cmp	fp, #6
   568d0:	ldr	r2, [r4, #40]	; 0x28
   568d4:	bne	57688 <lua_gethookcount@@Base+0x4008>
   568d8:	add	r3, r2, #4
   568dc:	mov	r1, #1
   568e0:	lsr	r3, r3, #2
   568e4:	and	r3, r3, #63	; 0x3f
   568e8:	add	r3, r3, #1392	; 0x570
   568ec:	add	r3, r3, #8
   568f0:	sub	r2, r4, #432	; 0x1b0
   568f4:	lsl	r3, r3, r1
   568f8:	strh	r1, [r2, r3]
   568fc:	b	566bc <lua_gethookcount@@Base+0x303c>
   56900:	add	r3, r4, #444	; 0x1bc
   56904:	ldrh	r3, [r3, #2]
   56908:	cmp	r3, #0
   5690c:	bne	5692c <lua_gethookcount@@Base+0x32ac>
   56910:	add	r3, r4, #448	; 0x1c0
   56914:	ldrh	r2, [r3]
   56918:	cmp	r2, #0
   5691c:	bne	5692c <lua_gethookcount@@Base+0x32ac>
   56920:	ldrh	r3, [r3, #2]
   56924:	cmp	r3, #0
   56928:	beq	57770 <lua_gethookcount@@Base+0x40f0>
   5692c:	ldr	r3, [r4, #244]	; 0xf4
   56930:	ldr	ip, [r4, #16]
   56934:	cmp	r3, #0
   56938:	bne	569a4 <lua_gethookcount@@Base+0x3324>
   5693c:	ldrh	r3, [r4, #24]
   56940:	ldr	r1, [r4, #28]
   56944:	ldr	r2, [r4, #32]
   56948:	sub	r3, r3, #-536870911	; 0xe0000001
   5694c:	lsl	r3, r3, #3
   56950:	add	r0, r1, r3
   56954:	ldrh	r3, [r1, r3]
   56958:	ldrb	r1, [r0, #6]
   5695c:	cmp	r1, #0
   56960:	lsl	r3, r3, #2
   56964:	beq	569a4 <lua_gethookcount@@Base+0x3324>
   56968:	sub	r0, r2, #4
   5696c:	add	r0, r0, r3
   56970:	ldr	lr, [pc, #2976]	; 57518 <lua_gethookcount@@Base+0x3e98>
   56974:	sub	r3, r3, #4
   56978:	add	r0, r0, r1, lsl #2
   5697c:	add	r2, r2, r3
   56980:	ldr	r3, [r2, #4]!
   56984:	uxth	r3, r3
   56988:	cmp	r3, lr
   5698c:	addhi	r3, ip, r3, lsl #3
   56990:	ldrbhi	r1, [r3, #4]
   56994:	orrhi	r1, r1, #32
   56998:	strbhi	r1, [r3, #4]
   5699c:	cmp	r0, r2
   569a0:	bne	56980 <lua_gethookcount@@Base+0x3300>
   569a4:	ldr	r5, [r4, #8]
   569a8:	mov	r6, #0
   569ac:	sub	r3, r5, #-536870911	; 0xe0000001
   569b0:	add	r5, ip, r3, lsl #3
   569b4:	mov	r7, r5
   569b8:	ldrb	r3, [r7, #5]
   569bc:	sub	r3, r3, #13
   569c0:	cmp	r3, #85	; 0x55
   569c4:	ldrls	pc, [pc, r3, lsl #2]
   569c8:	b	571b4 <lua_gethookcount@@Base+0x3b34>
   569cc:			; <UNDEFINED> instruction: 0x00056eb0
   569d0:			; <UNDEFINED> instruction: 0x000571b4
   569d4:			; <UNDEFINED> instruction: 0x000571b4
   569d8:			; <UNDEFINED> instruction: 0x000571b4
   569dc:			; <UNDEFINED> instruction: 0x000571b4
   569e0:			; <UNDEFINED> instruction: 0x000571b4
   569e4:	strdeq	r6, [r5], -ip
   569e8:			; <UNDEFINED> instruction: 0x000571b4
   569ec:			; <UNDEFINED> instruction: 0x000571b4
   569f0:			; <UNDEFINED> instruction: 0x000571b4
   569f4:			; <UNDEFINED> instruction: 0x000571b4
   569f8:			; <UNDEFINED> instruction: 0x000571b4
   569fc:			; <UNDEFINED> instruction: 0x000571b4
   56a00:			; <UNDEFINED> instruction: 0x000571b4
   56a04:			; <UNDEFINED> instruction: 0x000571b4
   56a08:			; <UNDEFINED> instruction: 0x000571b4
   56a0c:			; <UNDEFINED> instruction: 0x000571b4
   56a10:			; <UNDEFINED> instruction: 0x000571b4
   56a14:			; <UNDEFINED> instruction: 0x000571b4
   56a18:			; <UNDEFINED> instruction: 0x000571b4
   56a1c:			; <UNDEFINED> instruction: 0x000571b4
   56a20:			; <UNDEFINED> instruction: 0x000571b4
   56a24:			; <UNDEFINED> instruction: 0x000571b4
   56a28:			; <UNDEFINED> instruction: 0x000571b4
   56a2c:			; <UNDEFINED> instruction: 0x000571b4
   56a30:			; <UNDEFINED> instruction: 0x000571b4
   56a34:			; <UNDEFINED> instruction: 0x000571b4
   56a38:			; <UNDEFINED> instruction: 0x000571b4
   56a3c:			; <UNDEFINED> instruction: 0x000571b4
   56a40:			; <UNDEFINED> instruction: 0x000571b4
   56a44:			; <UNDEFINED> instruction: 0x000571b4
   56a48:			; <UNDEFINED> instruction: 0x000571b4
   56a4c:			; <UNDEFINED> instruction: 0x000571b4
   56a50:			; <UNDEFINED> instruction: 0x000571b4
   56a54:			; <UNDEFINED> instruction: 0x000571b4
   56a58:			; <UNDEFINED> instruction: 0x000571b4
   56a5c:			; <UNDEFINED> instruction: 0x000571b4
   56a60:			; <UNDEFINED> instruction: 0x000571b4
   56a64:			; <UNDEFINED> instruction: 0x000571b4
   56a68:			; <UNDEFINED> instruction: 0x000571b4
   56a6c:			; <UNDEFINED> instruction: 0x000571b4
   56a70:			; <UNDEFINED> instruction: 0x000571b4
   56a74:			; <UNDEFINED> instruction: 0x000571b4
   56a78:			; <UNDEFINED> instruction: 0x000571b4
   56a7c:			; <UNDEFINED> instruction: 0x000571b4
   56a80:			; <UNDEFINED> instruction: 0x000571b4
   56a84:			; <UNDEFINED> instruction: 0x000571b4
   56a88:			; <UNDEFINED> instruction: 0x000571b4
   56a8c:			; <UNDEFINED> instruction: 0x000571b4
   56a90:			; <UNDEFINED> instruction: 0x000571b4
   56a94:			; <UNDEFINED> instruction: 0x000571b4
   56a98:			; <UNDEFINED> instruction: 0x000571b4
   56a9c:			; <UNDEFINED> instruction: 0x000571b4
   56aa0:	andeq	r6, r5, ip, lsl lr
   56aa4:	andeq	r6, r5, ip, lsl lr
   56aa8:			; <UNDEFINED> instruction: 0x000571b4
   56aac:	andeq	r6, r5, r0, lsl lr
   56ab0:	andeq	r6, r5, ip, lsl lr
   56ab4:			; <UNDEFINED> instruction: 0x000571b4
   56ab8:			; <UNDEFINED> instruction: 0x000571b4
   56abc:	andeq	r7, r5, r4, asr #32
   56ac0:	andeq	r7, r5, r4, asr #32
   56ac4:	muleq	r5, r4, lr
   56ac8:	andeq	r7, r5, r4, asr #32
   56acc:	andeq	r7, r5, r4, asr #32
   56ad0:			; <UNDEFINED> instruction: 0x000571b4
   56ad4:			; <UNDEFINED> instruction: 0x000571b4
   56ad8:			; <UNDEFINED> instruction: 0x000571b4
   56adc:			; <UNDEFINED> instruction: 0x000571b4
   56ae0:			; <UNDEFINED> instruction: 0x000571b4
   56ae4:	andeq	r6, r5, ip, lsr lr
   56ae8:			; <UNDEFINED> instruction: 0x000571b4
   56aec:			; <UNDEFINED> instruction: 0x000571b4
   56af0:			; <UNDEFINED> instruction: 0x000571b4
   56af4:	andeq	r6, r5, ip, lsl lr
   56af8:			; <UNDEFINED> instruction: 0x000571b4
   56afc:			; <UNDEFINED> instruction: 0x000571b4
   56b00:			; <UNDEFINED> instruction: 0x000571b4
   56b04:			; <UNDEFINED> instruction: 0x000571b4
   56b08:			; <UNDEFINED> instruction: 0x000571b4
   56b0c:			; <UNDEFINED> instruction: 0x000571b4
   56b10:			; <UNDEFINED> instruction: 0x000571b4
   56b14:			; <UNDEFINED> instruction: 0x000571b4
   56b18:	andeq	r6, r5, ip, lsl lr
   56b1c:	andeq	r6, r5, ip, lsl lr
   56b20:	andeq	r6, r5, ip, lsl lr
   56b24:	ldr	r3, [pc, #2544]	; 5751c <lua_gethookcount@@Base+0x3e9c>
   56b28:	mov	r2, r4
   56b2c:	mov	r1, #0
   56b30:	ldr	r0, [r4, #80]	; 0x50
   56b34:	bl	6bd28 <luaL_openlibs@@Base+0x2568>
   56b38:	cmp	r0, #0
   56b3c:	beq	5678c <lua_gethookcount@@Base+0x310c>
   56b40:	mov	r3, #32768	; 0x8000
   56b44:	mov	r2, #0
   56b48:	mov	r1, r0
   56b4c:	str	r3, [r4, #20]
   56b50:	str	r3, [r4, #8]
   56b54:	strh	r2, [r4, #24]
   56b58:	ldr	r0, [r4, #80]	; 0x50
   56b5c:	bl	20ff0 <luaL_where@@Base+0xeec>
   56b60:	ldr	r1, [pc, #2488]	; 57520 <lua_gethookcount@@Base+0x3ea0>
   56b64:	mov	r0, r7
   56b68:	bl	507a0 <luaL_error@@Base+0xa6b4>
   56b6c:	subs	r3, r0, #0
   56b70:	str	r3, [sp, #8]
   56b74:	beq	566ec <lua_gethookcount@@Base+0x306c>
   56b78:	ldr	r3, [r7, #20]
   56b7c:	mov	r2, #5
   56b80:	add	r1, r3, #8
   56b84:	str	r1, [r7, #20]
   56b88:	mov	r0, r7
   56b8c:	ldr	r1, [pc, #2448]	; 57524 <lua_gethookcount@@Base+0x3ea4>
   56b90:	str	r3, [sp, #20]
   56b94:	bl	20260 <luaL_where@@Base+0x15c>
   56b98:	ldr	r2, [r4, #80]	; 0x50
   56b9c:	ldr	r3, [sp, #20]
   56ba0:	ldr	ip, [r7, #20]
   56ba4:	ldr	r2, [r2, #16]
   56ba8:	mvn	r1, #4
   56bac:	str	r1, [r3, #4]
   56bb0:	add	lr, ip, #8
   56bb4:	ldr	r1, [r4, #84]	; 0x54
   56bb8:	sub	r2, r2, #8
   56bbc:	str	r0, [r3]
   56bc0:	mvn	r3, #13
   56bc4:	str	lr, [r7, #20]
   56bc8:	str	r9, [ip]
   56bcc:	str	r3, [ip, #4]
   56bd0:	b	56c04 <lua_gethookcount@@Base+0x3584>
   56bd4:	ldr	r3, [r2, #4]
   56bd8:	and	r1, r3, #7
   56bdc:	cmp	r1, #2
   56be0:	subne	r1, r3, #4
   56be4:	ldreq	r1, [r2, #-4]
   56be8:	subeq	r1, r1, #4
   56bec:	tst	r3, #3
   56bf0:	bicne	r3, r3, #7
   56bf4:	ldrbeq	r3, [r3, #-3]
   56bf8:	subne	r2, r2, r3
   56bfc:	addeq	r3, r3, #1
   56c00:	subeq	r2, r2, r3, lsl #3
   56c04:	ldr	r3, [r2]
   56c08:	ldrb	r0, [r3, #6]
   56c0c:	cmp	r0, #0
   56c10:	bne	56bd4 <lua_gethookcount@@Base+0x3554>
   56c14:	mvn	r2, #8
   56c18:	str	r2, [ip, #12]
   56c1c:	str	r3, [ip, #8]
   56c20:	ldr	r3, [r3, #16]
   56c24:	ldr	r2, [r7, #28]
   56c28:	sub	r3, r1, r3
   56c2c:	ldr	r1, [sp]
   56c30:	asr	r3, r3, #2
   56c34:	sub	r5, r5, r1
   56c38:	mvn	r1, #13
   56c3c:	str	r1, [ip, #20]
   56c40:	str	r3, [ip, #16]
   56c44:	ldrd	r2, [r2, r5]
   56c48:	add	r1, r4, #2352	; 0x930
   56c4c:	add	r0, ip, #40	; 0x28
   56c50:	strd	r2, [ip, #24]
   56c54:	ldrd	r2, [r1, #-8]
   56c58:	str	r0, [r7, #20]
   56c5c:	ldr	r1, [sp, #8]
   56c60:	mov	r0, r7
   56c64:	strd	r2, [ip, #32]
   56c68:	bl	1aaf8 <_start@@Base+0x7748>
   56c6c:	b	566ec <lua_gethookcount@@Base+0x306c>
   56c70:	lsr	r3, r2, #16
   56c74:	add	r3, r3, #1069547520	; 0x3fc00000
   56c78:	add	r3, r3, #4161536	; 0x3f8000
   56c7c:	mov	ip, #78	; 0x4e
   56c80:	strb	ip, [r0, r3, lsl #2]
   56c84:	add	r2, r2, #2
   56c88:	strb	r2, [r0]
   56c8c:	strh	r6, [r0, #2]
   56c90:	ldrh	r2, [r1, #38]	; 0x26
   56c94:	ldr	r3, [r4, #2320]	; 0x910
   56c98:	strh	r2, [r4, #70]	; 0x46
   56c9c:	strh	r6, [r1, #38]	; 0x26
   56ca0:	ldr	r2, [r4, #52]	; 0x34
   56ca4:	cmp	r3, #5
   56ca8:	str	r2, [r4, #2328]	; 0x918
   56cac:	beq	56cbc <lua_gethookcount@@Base+0x363c>
   56cb0:	mov	r1, #5
   56cb4:	mov	r0, r4
   56cb8:	bl	37754 <luaL_typerror@@Base+0x13e8>
   56cbc:	ldr	r8, [r4, #20]
   56cc0:	ldr	r3, [r4, #8]
   56cc4:	mov	r7, #0
   56cc8:	sub	r3, r3, r8
   56ccc:	mov	r2, #76	; 0x4c
   56cd0:	mov	r1, r4
   56cd4:	str	r7, [r4, #264]	; 0x108
   56cd8:	mov	r0, r5
   56cdc:	lsl	r8, r3, #3
   56ce0:	bl	12cb8 <memcpy@plt>
   56ce4:	ldr	r2, [r4, #-348]	; 0xfffffea4
   56ce8:	mov	r3, #9
   56cec:	str	r2, [r5]
   56cf0:	str	r5, [r4, #-348]	; 0xfffffea4
   56cf4:	ldrb	r0, [r4, #-356]	; 0xfffffe9c
   56cf8:	strb	r3, [r5, #5]
   56cfc:	ldr	ip, [r4, #20]
   56d00:	ldrh	r2, [r4, #24]
   56d04:	add	r1, r5, #80	; 0x50
   56d08:	add	r8, r1, r8
   56d0c:	and	r0, r0, #3
   56d10:	sub	r1, r1, ip, lsl #3
   56d14:	strb	r0, [r5, #4]
   56d18:	str	r8, [r5, #28]
   56d1c:	str	r1, [r5, #16]
   56d20:	lsl	r2, r2, #3
   56d24:	ldr	r1, [r4, #28]
   56d28:	mov	r0, r8
   56d2c:	bl	12cb8 <memcpy@plt>
   56d30:	ldrh	r0, [r4, #24]
   56d34:	ldrh	r2, [r4, #26]
   56d38:	add	r0, r8, r0, lsl #3
   56d3c:	str	r0, [r5, #32]
   56d40:	lsl	r2, r2, #2
   56d44:	ldr	r1, [r4, #32]
   56d48:	bl	12cb8 <memcpy@plt>
   56d4c:	strh	r7, [r4, #64]	; 0x40
   56d50:	ldrh	r2, [r5, #64]	; 0x40
   56d54:	ldr	r3, [r4, #272]	; 0x110
   56d58:	str	r7, [r4, #76]	; 0x4c
   56d5c:	str	r5, [r3, r2, lsl #2]
   56d60:	ldrb	r3, [r4, #-355]	; 0xfffffe9d
   56d64:	sub	r3, r3, #1
   56d68:	cmp	r3, #1
   56d6c:	bhi	56d8c <lua_gethookcount@@Base+0x370c>
   56d70:	ldrb	r3, [r5, #4]
   56d74:	tst	r3, #3
   56d78:	bicne	r3, r3, #3
   56d7c:	ldrne	r2, [r4, #-340]	; 0xfffffeac
   56d80:	strbne	r3, [r5, #4]
   56d84:	strne	r2, [r5, #12]
   56d88:	strne	r5, [r4, #-340]	; 0xfffffeac
   56d8c:	ldr	r5, [r4, #80]	; 0x50
   56d90:	ldr	r3, [r5, #8]
   56d94:	ldrb	r3, [r3, #115]	; 0x73
   56d98:	tst	r3, #2
   56d9c:	beq	56720 <lua_gethookcount@@Base+0x30a0>
   56da0:	ldr	r1, [pc, #1912]	; 57520 <lua_gethookcount@@Base+0x3ea0>
   56da4:	mov	r0, r5
   56da8:	bl	507a0 <luaL_error@@Base+0xa6b4>
   56dac:	subs	r8, r0, #0
   56db0:	beq	56720 <lua_gethookcount@@Base+0x30a0>
   56db4:	ldr	r7, [r5, #20]
   56db8:	mov	r2, #4
   56dbc:	add	r3, r7, #8
   56dc0:	str	r3, [r5, #20]
   56dc4:	ldr	r1, [pc, #1884]	; 57528 <lua_gethookcount@@Base+0x3ea8>
   56dc8:	mov	r0, r5
   56dcc:	bl	20260 <luaL_where@@Base+0x15c>
   56dd0:	ldr	r3, [r5, #20]
   56dd4:	ldr	ip, [r4, #88]	; 0x58
   56dd8:	mvn	r2, #4
   56ddc:	mov	r1, r8
   56de0:	mvn	r8, #13
   56de4:	str	r2, [r7, #4]
   56de8:	add	lr, r3, #16
   56dec:	mvn	r2, #8
   56df0:	str	r0, [r7]
   56df4:	stm	r3, {r6, r8}
   56df8:	mov	r0, r5
   56dfc:	str	lr, [r5, #20]
   56e00:	str	ip, [r3, #8]
   56e04:	str	r2, [r3, #12]
   56e08:	bl	1aaf8 <_start@@Base+0x7748>
   56e0c:	b	56720 <lua_gethookcount@@Base+0x30a0>
   56e10:	ldrb	r3, [r7, #4]
   56e14:	tst	r3, #32
   56e18:	beq	574f0 <lua_gethookcount@@Base+0x3e70>
   56e1c:	ldrh	r2, [r7]
   56e20:	ldr	r3, [r4, #16]
   56e24:	add	r3, r3, r2, lsl #3
   56e28:	ldrb	r2, [r3, #4]
   56e2c:	orr	r2, r2, #32
   56e30:	strb	r2, [r3, #4]
   56e34:	sub	r7, r7, #8
   56e38:	b	569b8 <lua_gethookcount@@Base+0x3338>
   56e3c:	ldrb	r3, [r7, #4]
   56e40:	ldrh	r2, [r7, #2]
   56e44:	tst	r3, #64	; 0x40
   56e48:	beq	56e98 <lua_gethookcount@@Base+0x3818>
   56e4c:	add	r8, r7, #6
   56e50:	mov	r1, r8
   56e54:	mov	r0, r4
   56e58:	bl	1c830 <_start@@Base+0x9480>
   56e5c:	cmp	r0, #0
   56e60:	beq	5775c <lua_gethookcount@@Base+0x40dc>
   56e64:	add	r3, r7, #8
   56e68:	cmp	r5, r3
   56e6c:	bls	56e94 <lua_gethookcount@@Base+0x3814>
   56e70:	ldrb	r3, [r7, #13]
   56e74:	cmp	r3, #16
   56e78:	bne	56e94 <lua_gethookcount@@Base+0x3814>
   56e7c:	mov	r1, r8
   56e80:	ldrh	r2, [r7, #10]
   56e84:	mov	r0, r4
   56e88:	bl	1c830 <_start@@Base+0x9480>
   56e8c:	cmp	r0, #0
   56e90:	beq	5775c <lua_gethookcount@@Base+0x40dc>
   56e94:	ldrh	r2, [r7, #2]
   56e98:	ldr	r3, [r4, #16]
   56e9c:	add	r2, r3, r2, lsl #3
   56ea0:	ldrb	r3, [r2, #4]
   56ea4:	orr	r3, r3, #32
   56ea8:	strb	r3, [r2, #4]
   56eac:	b	56e34 <lua_gethookcount@@Base+0x37b4>
   56eb0:	ldr	r3, [r4, #244]	; 0xf4
   56eb4:	ldr	r5, [r4, #16]
   56eb8:	cmp	r3, #0
   56ebc:	ldr	r3, [r4, #8]
   56ec0:	subeq	r3, r3, #-536870911	; 0xe0000001
   56ec4:	addeq	r6, r5, r3, lsl #3
   56ec8:	bne	5753c <lua_gethookcount@@Base+0x3ebc>
   56ecc:	add	r7, r5, #262144	; 0x40000
   56ed0:	cmp	r7, r6
   56ed4:	bhi	570a8 <lua_gethookcount@@Base+0x3a28>
   56ed8:	mov	r9, #255	; 0xff
   56edc:	mov	sl, #254	; 0xfe
   56ee0:	mov	r8, #1
   56ee4:	ldrb	r3, [r6, #5]
   56ee8:	sub	r3, r3, #19
   56eec:	cmp	r3, #64	; 0x40
   56ef0:	ldrls	pc, [pc, r3, lsl #2]
   56ef4:	b	57158 <lua_gethookcount@@Base+0x3ad8>
   56ef8:	andeq	r7, r5, r8, ror r1
   56efc:	andeq	r7, r5, r8, asr r1
   56f00:	andeq	r7, r5, r8, asr r1
   56f04:	andeq	r7, r5, r8, asr r1
   56f08:	andeq	r7, r5, r8, asr r1
   56f0c:	andeq	r7, r5, r8, asr r1
   56f10:	andeq	r7, r5, r8, asr r1
   56f14:	andeq	r7, r5, r8, asr r1
   56f18:	andeq	r7, r5, r8, asr r1
   56f1c:	andeq	r7, r5, r8, asr r1
   56f20:	andeq	r7, r5, r8, asr r1
   56f24:	andeq	r7, r5, r8, asr r1
   56f28:	andeq	r7, r5, r8, asr r1
   56f2c:	andeq	r7, r5, r8, asr r1
   56f30:	andeq	r7, r5, r8, asr r1
   56f34:	andeq	r7, r5, r8, asr r1
   56f38:	andeq	r7, r5, r8, asr r1
   56f3c:	andeq	r7, r5, r8, asr r1
   56f40:	andeq	r7, r5, r8, asr r1
   56f44:	andeq	r7, r5, r8, asr r1
   56f48:	andeq	r7, r5, r8, asr r1
   56f4c:	andeq	r7, r5, r8, asr r1
   56f50:	andeq	r7, r5, r8, asr r1
   56f54:	andeq	r7, r5, r8, asr r1
   56f58:	andeq	r7, r5, r8, asr r1
   56f5c:	andeq	r7, r5, r8, asr r1
   56f60:	andeq	r7, r5, r8, asr r1
   56f64:	andeq	r7, r5, r8, asr r1
   56f68:	andeq	r7, r5, r8, asr r1
   56f6c:	andeq	r7, r5, r8, asr r1
   56f70:	andeq	r7, r5, r8, asr r1
   56f74:	andeq	r7, r5, r8, asr r1
   56f78:	andeq	r7, r5, r8, asr r1
   56f7c:	andeq	r7, r5, r8, asr r1
   56f80:	andeq	r7, r5, r8, asr r1
   56f84:	andeq	r7, r5, r8, asr r1
   56f88:	andeq	r7, r5, r8, asr r1
   56f8c:	andeq	r7, r5, r8, asr r1
   56f90:	andeq	r7, r5, r8, asr r1
   56f94:	andeq	r7, r5, r8, asr r1
   56f98:	andeq	r7, r5, r8, asr r1
   56f9c:	andeq	r7, r5, r4, asr #2
   56fa0:	andeq	r7, r5, r8, asr r1
   56fa4:	andeq	r7, r5, r8, asr r1
   56fa8:	andeq	r7, r5, r8, asr r1
   56fac:	andeq	r7, r5, r8, asr r1
   56fb0:	andeq	r7, r5, r8, asr r1
   56fb4:	andeq	r7, r5, r8, asr r1
   56fb8:	andeq	r7, r5, r8, asr r1
   56fbc:	andeq	r7, r5, r8, asr r1
   56fc0:	andeq	r7, r5, r8, asr r1
   56fc4:	andeq	r7, r5, r8, asr r1
   56fc8:	andeq	r7, r5, r8, asr r1
   56fcc:	andeq	r7, r5, r8, asr r1
   56fd0:	andeq	r7, r5, r0, lsl #2
   56fd4:	andeq	r7, r5, r0, lsl #2
   56fd8:	andeq	r7, r5, r8, asr r1
   56fdc:	andeq	r7, r5, r0, lsl #2
   56fe0:	andeq	r7, r5, r0, lsl #2
   56fe4:	andeq	r7, r5, r8, asr r1
   56fe8:	andeq	r7, r5, r8, asr r1
   56fec:	andeq	r7, r5, r0, lsl #1
   56ff0:	andeq	r7, r5, r0, lsl #1
   56ff4:	andeq	r7, r5, r0, lsl #1
   56ff8:	andeq	r7, r5, r0, lsl #1
   56ffc:	ldrh	r1, [r7, #2]
   57000:	ldrh	r2, [r7]
   57004:	ldr	r3, [r4, #16]
   57008:	add	r2, r3, r2, lsl #3
   5700c:	add	r3, r3, r1, lsl #3
   57010:	ldrb	r0, [r2, #5]
   57014:	ldrb	r1, [r3, #5]
   57018:	strh	r6, [r3, #6]
   5701c:	strh	r6, [r2, #6]
   57020:	cmp	r1, r0
   57024:	beq	57500 <lua_gethookcount@@Base+0x3e80>
   57028:	ldrb	r1, [r2, #4]
   5702c:	orr	r1, r1, #32
   57030:	strb	r1, [r2, #4]
   57034:	ldrb	r2, [r3, #4]
   57038:	orr	r2, r2, #32
   5703c:	strb	r2, [r3, #4]
   57040:	b	56e34 <lua_gethookcount@@Base+0x37b4>
   57044:	ldr	r8, [r4, #16]
   57048:	ldrh	r1, [r7]
   5704c:	mov	r0, r8
   57050:	bl	1c7b4 <_start@@Base+0x9404>
   57054:	ldrh	r2, [r7, #2]
   57058:	cmp	r0, #0
   5705c:	beq	575f8 <lua_gethookcount@@Base+0x3f78>
   57060:	ldrb	r3, [r0, #4]
   57064:	tst	r3, #64	; 0x40
   57068:	bne	575dc <lua_gethookcount@@Base+0x3f5c>
   5706c:	add	r8, r8, r2, lsl #3
   57070:	ldrb	r3, [r8, #4]
   57074:	orr	r3, r3, #32
   57078:	strb	r3, [r8, #4]
   5707c:	b	56e34 <lua_gethookcount@@Base+0x37b4>
   57080:	ldrb	r3, [r6, #4]
   57084:	tst	r3, #32
   57088:	bne	571a4 <lua_gethookcount@@Base+0x3b24>
   5708c:	and	r3, r3, #127	; 0x7f
   57090:	strb	r3, [r6, #4]
   57094:	strh	sl, [r6, #6]
   57098:	sub	r6, r6, #8
   5709c:	cmp	r7, r6
   570a0:	strb	r8, [r4, #74]	; 0x4a
   570a4:	bls	56ee4 <lua_gethookcount@@Base+0x3864>
   570a8:	ldr	r3, [r4, #20]
   570ac:	add	r3, r5, r3, lsl #3
   570b0:	cmp	r7, r3
   570b4:	bls	5679c <lua_gethookcount@@Base+0x311c>
   570b8:	ldr	lr, [pc, #1132]	; 5752c <lua_gethookcount@@Base+0x3eac>
   570bc:	mov	ip, #255	; 0xff
   570c0:	ldrb	r2, [r3, #4]
   570c4:	strh	ip, [r3, #6]
   570c8:	add	r0, r3, #8
   570cc:	and	r1, r2, #31
   570d0:	bic	r2, r2, #32
   570d4:	lsr	r1, lr, r1
   570d8:	tst	r1, #1
   570dc:	strb	r2, [r3, #4]
   570e0:	beq	570f0 <lua_gethookcount@@Base+0x3a70>
   570e4:	ldrb	r2, [r3, #5]
   570e8:	cmp	r2, #27
   570ec:	addne	r0, r3, #16
   570f0:	cmp	r7, r0
   570f4:	mov	r3, r0
   570f8:	bhi	570c0 <lua_gethookcount@@Base+0x3a40>
   570fc:	b	5679c <lua_gethookcount@@Base+0x311c>
   57100:	ldrh	r1, [r6]
   57104:	mov	r0, r5
   57108:	bl	1c7b4 <_start@@Base+0x9404>
   5710c:	cmp	r0, #0
   57110:	beq	571ac <lua_gethookcount@@Base+0x3b2c>
   57114:	ldrb	r3, [r0, #4]
   57118:	tst	r3, #32
   5711c:	bne	571ac <lua_gethookcount@@Base+0x3b2c>
   57120:	sub	r0, r6, r0
   57124:	asr	r0, r0, #3
   57128:	cmp	r0, #255	; 0xff
   5712c:	movlt	r3, r0
   57130:	movge	r3, #255	; 0xff
   57134:	lsl	r3, r3, #8
   57138:	add	r3, r3, #254	; 0xfe
   5713c:	strh	r3, [r6, #6]
   57140:	b	57168 <lua_gethookcount@@Base+0x3ae8>
   57144:	ldrh	r3, [r6]
   57148:	add	r3, r5, r3, lsl #3
   5714c:	ldrb	r3, [r3, #4]
   57150:	tst	r3, #32
   57154:	beq	5719c <lua_gethookcount@@Base+0x3b1c>
   57158:	ldrb	r3, [r6, #4]
   5715c:	strh	r9, [r6, #6]
   57160:	bic	r3, r3, #32
   57164:	strb	r3, [r6, #4]
   57168:	sub	r6, r6, #8
   5716c:	cmp	r7, r6
   57170:	bls	56ee4 <lua_gethookcount@@Base+0x3864>
   57174:	b	570a8 <lua_gethookcount@@Base+0x3a28>
   57178:	ldrh	r3, [r6, #2]
   5717c:	add	r3, r5, r3, lsl #3
   57180:	ldrb	r2, [r3, #4]
   57184:	tst	r2, #32
   57188:	bne	571ac <lua_gethookcount@@Base+0x3b2c>
   5718c:	ldrb	r3, [r3, #5]
   57190:	sub	r3, r3, #80	; 0x50
   57194:	cmp	r3, #3
   57198:	bhi	571ac <lua_gethookcount@@Base+0x3b2c>
   5719c:	strh	sl, [r6, #6]
   571a0:	b	57168 <lua_gethookcount@@Base+0x3ae8>
   571a4:	bic	r3, r3, #32
   571a8:	strb	r3, [r6, #4]
   571ac:	strh	r9, [r6, #6]
   571b0:	b	57168 <lua_gethookcount@@Base+0x3ae8>
   571b4:	ldrb	r3, [r7, #4]
   571b8:	tst	r3, #32
   571bc:	beq	574e4 <lua_gethookcount@@Base+0x3e64>
   571c0:	ldrh	r2, [r7]
   571c4:	cmp	r2, #32768	; 0x8000
   571c8:	ldrhi	r3, [r4, #16]
   571cc:	addhi	r3, r3, r2, lsl #3
   571d0:	ldrbhi	r2, [r3, #4]
   571d4:	orrhi	r2, r2, #32
   571d8:	strbhi	r2, [r3, #4]
   571dc:	ldrh	r2, [r7, #2]
   571e0:	cmp	r2, #32768	; 0x8000
   571e4:	bls	56e34 <lua_gethookcount@@Base+0x37b4>
   571e8:	b	56e20 <lua_gethookcount@@Base+0x37a0>
   571ec:	ldr	r3, [r4, #84]	; 0x54
   571f0:	ldrb	r3, [r3]
   571f4:	cmp	r3, #73	; 0x49
   571f8:	beq	56720 <lua_gethookcount@@Base+0x30a0>
   571fc:	mov	r3, #17
   57200:	str	r3, [r4, #168]	; 0xa8
   57204:	str	r8, [r4, #2304]	; 0x900
   57208:	str	r8, [r4, #2308]	; 0x904
   5720c:	mov	r0, r4
   57210:	bl	50a04 <luaL_error@@Base+0xa918>
   57214:	ldr	r3, [r4, #168]	; 0xa8
   57218:	b	565e4 <lua_gethookcount@@Base+0x2f64>
   5721c:	mov	r1, r6
   57220:	mov	r0, sl
   57224:	bl	507a0 <luaL_error@@Base+0xa6b4>
   57228:	subs	r1, r0, #0
   5722c:	beq	568ac <lua_gethookcount@@Base+0x322c>
   57230:	sub	r5, r4, #432	; 0x1b0
   57234:	ldr	lr, [r4, #92]	; 0x5c
   57238:	ldrd	r2, [r5, #176]	; 0xb0
   5723c:	ldr	ip, [sl, #20]
   57240:	ldr	r0, [r4, #88]	; 0x58
   57244:	cmp	lr, #0
   57248:	ldrh	r7, [r4, #64]	; 0x40
   5724c:	strd	r2, [sp]
   57250:	ldrd	r2, [r5, #184]	; 0xb8
   57254:	str	r0, [ip, #8]
   57258:	mvn	r0, #8
   5725c:	str	r0, [ip, #12]
   57260:	ldrne	r0, [r4, #84]	; 0x54
   57264:	addne	lr, lr, #64	; 0x40
   57268:	subne	r0, r0, lr
   5726c:	str	r7, [ip]
   57270:	mvn	r7, #13
   57274:	str	r7, [ip, #4]
   57278:	ldr	r7, [r4, #184]	; 0xb8
   5727c:	asrne	r0, r0, #2
   57280:	mvneq	r0, #0
   57284:	mvn	lr, #13
   57288:	add	r9, ip, #32
   5728c:	str	r0, [ip, #16]
   57290:	str	lr, [ip, #20]
   57294:	mov	r0, sl
   57298:	str	r9, [sl, #20]
   5729c:	str	lr, [ip, #28]
   572a0:	str	r7, [ip, #24]
   572a4:	strd	r2, [sp, #8]
   572a8:	bl	1aaf8 <_start@@Base+0x7748>
   572ac:	ldrd	r2, [sp]
   572b0:	strd	r2, [r5, #176]	; 0xb0
   572b4:	ldrd	r2, [sp, #8]
   572b8:	strd	r2, [r5, #184]	; 0xb8
   572bc:	b	568ac <lua_gethookcount@@Base+0x322c>
   572c0:	sub	r5, r5, #8
   572c4:	mov	r3, #20
   572c8:	str	r5, [r7, #20]
   572cc:	str	r3, [r4, #168]	; 0xa8
   572d0:	b	567c0 <lua_gethookcount@@Base+0x3140>
   572d4:	mov	r0, r7
   572d8:	bl	508b8 <luaL_error@@Base+0xa7cc>
   572dc:	b	56720 <lua_gethookcount@@Base+0x30a0>
   572e0:	ldr	r2, [r4, #184]	; 0xb8
   572e4:	ldr	r1, [r4, #188]	; 0xbc
   572e8:	cmn	r2, r1
   572ec:	bne	56780 <lua_gethookcount@@Base+0x3100>
   572f0:	tst	r3, #262144	; 0x40000
   572f4:	mvn	r3, #5
   572f8:	str	r3, [r4, #-308]	; 0xfffffecc
   572fc:	ldrh	r7, [r4, #24]
   57300:	bne	577b0 <lua_gethookcount@@Base+0x4130>
   57304:	mov	r5, #0
   57308:	mov	r1, r5
   5730c:	ldr	r3, [pc, #540]	; 57530 <lua_gethookcount@@Base+0x3eb0>
   57310:	add	r2, sp, #28
   57314:	ldr	r0, [r4, #80]	; 0x50
   57318:	strd	r4, [sp, #28]
   5731c:	str	r5, [sp, #36]	; 0x24
   57320:	ldr	r6, [r4, #8]
   57324:	ldrh	r9, [r4, #26]
   57328:	bl	6bd28 <luaL_openlibs@@Base+0x2568>
   5732c:	ldr	r2, [sp, #36]	; 0x24
   57330:	mov	r3, r5
   57334:	ldr	r1, [sp, #32]
   57338:	lsl	r2, r2, #1
   5733c:	ldr	r5, [r4, #-372]	; 0xfffffe8c
   57340:	mov	r8, r0
   57344:	ldr	r0, [r4, #-364]	; 0xfffffe94
   57348:	sub	r0, r0, r2
   5734c:	str	r0, [r4, #-364]	; 0xfffffe94
   57350:	ldr	r0, [r4, #-368]	; 0xfffffe90
   57354:	blx	r5
   57358:	cmp	r8, #0
   5735c:	bne	57880 <lua_gethookcount@@Base+0x4200>
   57360:	add	r3, r4, #320	; 0x140
   57364:	ldrh	r3, [r3]
   57368:	str	r3, [r4, #244]	; 0xf4
   5736c:	b	56780 <lua_gethookcount@@Base+0x3100>
   57370:	ldr	r2, [r4, #272]	; 0x110
   57374:	ldr	r2, [r2, r3, lsl #2]
   57378:	strh	r3, [r2, #66]	; 0x42
   5737c:	b	566bc <lua_gethookcount@@Base+0x303c>
   57380:	ldr	r2, [r4, #2304]	; 0x900
   57384:	ldr	r3, [r4, #272]	; 0x110
   57388:	ldr	r8, [r4, #2324]	; 0x914
   5738c:	ldr	fp, [r4, #2308]	; 0x904
   57390:	ldr	r3, [r3, r2, lsl #2]
   57394:	ldr	sl, [r4, #52]	; 0x34
   57398:	ldr	r7, [r3, #52]	; 0x34
   5739c:	ldr	r9, [r3, #48]	; 0x30
   573a0:	cmp	r7, r8
   573a4:	add	r9, r7, r9
   573a8:	bcc	573d8 <lua_gethookcount@@Base+0x3d58>
   573ac:	ldr	r3, [r4, #2336]	; 0x920
   573b0:	add	r3, r8, r3
   573b4:	cmp	r7, r3
   573b8:	bcs	573d8 <lua_gethookcount@@Base+0x3d58>
   573bc:	ldr	r3, [r4, #2320]	; 0x910
   573c0:	cmp	r3, #3
   573c4:	beq	57408 <lua_gethookcount@@Base+0x3d88>
   573c8:	mov	r1, #3
   573cc:	mov	r0, r4
   573d0:	bl	37754 <luaL_typerror@@Base+0x13e8>
   573d4:	b	57408 <lua_gethookcount@@Base+0x3d88>
   573d8:	ldr	r8, [r8]
   573dc:	cmp	r7, r8
   573e0:	bcc	573d8 <lua_gethookcount@@Base+0x3d58>
   573e4:	ldr	r1, [r8, #4]
   573e8:	add	r3, r8, r1
   573ec:	cmp	r7, r3
   573f0:	bcs	573d8 <lua_gethookcount@@Base+0x3d58>
   573f4:	mov	r2, #3
   573f8:	mov	r0, r8
   573fc:	bl	12c88 <mprotect@plt>
   57400:	cmp	r0, #0
   57404:	bne	57868 <lua_gethookcount@@Base+0x41e8>
   57408:	lsr	r2, fp, #5
   5740c:	and	r3, fp, #31
   57410:	add	r2, r4, r2, lsl #2
   57414:	lsl	r3, r3, #2
   57418:	ldr	fp, [r2, #1568]	; 0x620
   5741c:	cmp	r7, r9
   57420:	sub	r3, r3, #8
   57424:	mov	r1, r7
   57428:	add	fp, fp, r3
   5742c:	movcs	r0, #0
   57430:	bcs	57618 <lua_gethookcount@@Base+0x3f98>
   57434:	mov	lr, #0
   57438:	sub	fp, fp, r7
   5743c:	mov	ip, r1
   57440:	sub	r7, sl, r7
   57444:	mov	r0, lr
   57448:	b	5745c <lua_gethookcount@@Base+0x3ddc>
   5744c:	cmp	r9, r3
   57450:	mov	ip, r3
   57454:	add	lr, lr, #4
   57458:	bls	57618 <lua_gethookcount@@Base+0x3f98>
   5745c:	mov	r3, ip
   57460:	ldr	r2, [r3], #4
   57464:	and	sl, r2, #251658240	; 0xf000000
   57468:	cmn	r2, #268435457	; 0x10000001
   5746c:	cmpls	sl, #184549376	; 0xb000000
   57470:	bne	5744c <lua_gethookcount@@Base+0x3dcc>
   57474:	sub	sl, fp, lr
   57478:	eor	sl, r2, sl, asr #2
   5747c:	bics	sl, sl, #-16777216	; 0xff000000
   57480:	bne	5744c <lua_gethookcount@@Base+0x3dcc>
   57484:	sub	r1, r7, lr
   57488:	and	r2, r2, #-33554432	; 0xfe000000
   5748c:	asr	r1, r1, #2
   57490:	sub	r1, r1, #2
   57494:	bic	r1, r1, #-16777216	; 0xff000000
   57498:	orr	r2, r1, r2
   5749c:	cmp	r0, #0
   574a0:	str	r2, [r3, #-4]
   574a4:	moveq	r0, ip
   574a8:	mov	r1, r3
   574ac:	b	5744c <lua_gethookcount@@Base+0x3dcc>
   574b0:	ldr	r1, [r4, #2308]	; 0x904
   574b4:	ldr	r2, [r4, #272]	; 0x110
   574b8:	ldr	r3, [r4, #2320]	; 0x910
   574bc:	ldr	r2, [r2, r1, lsl #2]
   574c0:	strh	r6, [r2, #66]	; 0x42
   574c4:	b	56ca0 <lua_gethookcount@@Base+0x3620>
   574c8:	ldr	r2, [r4, #28]
   574cc:	lsl	r3, r6, #16
   574d0:	orr	r3, r3, #87	; 0x57
   574d4:	ldrb	r2, [r2, #4]
   574d8:	orr	r3, r3, r2, lsl #8
   574dc:	str	r3, [r0]
   574e0:	b	56c90 <lua_gethookcount@@Base+0x3610>
   574e4:	tst	r3, #128	; 0x80
   574e8:	beq	56e34 <lua_gethookcount@@Base+0x37b4>
   574ec:	b	571c0 <lua_gethookcount@@Base+0x3b40>
   574f0:	ldrh	r3, [r7, #2]
   574f4:	cmp	r3, #5
   574f8:	bne	56e34 <lua_gethookcount@@Base+0x37b4>
   574fc:	b	56e1c <lua_gethookcount@@Base+0x379c>
   57500:	sub	r1, r1, #80	; 0x50
   57504:	cmp	r1, #3
   57508:	bls	56e34 <lua_gethookcount@@Base+0x37b4>
   5750c:	b	57028 <lua_gethookcount@@Base+0x39a8>
   57510:	strtls	pc, [r5], #-2682	; 0xfffff586
   57514:	mrseq	r0, CPSR
   57518:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   5751c:	andeq	r3, r3, ip, ror #28
   57520:			; <UNDEFINED> instruction: 0x96c8a339
   57524:	andeq	r2, r7, ip, ror #30
   57528:	andeq	r2, r7, r4, ror #30
   5752c:	rsbeq	r4, r0, r0
   57530:	andeq	pc, r2, ip, asr r3	; <UNPREDICTABLE>
   57534:	bicmi	r4, r6, sp, ror #28
   57538:	andeq	lr, r0, r0, ror #20
   5753c:	mov	r2, r3
   57540:	sub	r2, r2, #-536870911	; 0xe0000001
   57544:	add	r6, r5, r2, lsl #3
   57548:	ldrb	r3, [r6, #5]
   5754c:	cmp	r3, #19
   57550:	bne	56ecc <lua_gethookcount@@Base+0x384c>
   57554:	sub	r2, r6, #8
   57558:	mov	lr, #0
   5755c:	ldrh	ip, [r2, #8]
   57560:	ldrh	r1, [r2, #10]
   57564:	add	ip, r5, ip, lsl #3
   57568:	add	r1, r5, r1, lsl #3
   5756c:	ldrb	r0, [ip, #4]
   57570:	ldrb	r3, [r1, #4]
   57574:	eor	r6, r0, r3
   57578:	tst	r6, #32
   5757c:	bne	57590 <lua_gethookcount@@Base+0x3f10>
   57580:	ldrh	r7, [ip, #6]
   57584:	ldrh	r6, [r1, #6]
   57588:	cmp	r7, r6
   5758c:	beq	575b4 <lua_gethookcount@@Base+0x3f34>
   57590:	and	r3, r3, r0
   57594:	orr	r0, r0, #32
   57598:	strb	r0, [ip, #4]
   5759c:	ldrb	r0, [r1, #4]
   575a0:	mvn	r3, r3
   575a4:	and	r3, r3, #32
   575a8:	orr	lr, lr, r3
   575ac:	orr	r3, r0, #32
   575b0:	strb	r3, [r1, #4]
   575b4:	sub	r2, r2, #8
   575b8:	ldrb	r3, [r2, #13]
   575bc:	cmp	r3, #19
   575c0:	beq	5755c <lua_gethookcount@@Base+0x3edc>
   575c4:	cmp	lr, #0
   575c8:	ldr	r2, [r4, #8]
   575cc:	bne	57540 <lua_gethookcount@@Base+0x3ec0>
   575d0:	sub	r3, r2, #-536870911	; 0xe0000001
   575d4:	add	r6, r5, r3, lsl #3
   575d8:	b	56ecc <lua_gethookcount@@Base+0x384c>
   575dc:	add	r1, r0, #6
   575e0:	mov	r0, r4
   575e4:	bl	1c830 <_start@@Base+0x9480>
   575e8:	cmp	r0, #0
   575ec:	bne	57784 <lua_gethookcount@@Base+0x4104>
   575f0:	ldrh	r2, [r7, #2]
   575f4:	ldr	r8, [r4, #16]
   575f8:	ldrh	r3, [r7]
   575fc:	add	r3, r8, r3, lsl #3
   57600:	ldrb	r1, [r3, #4]
   57604:	orr	r1, r1, #32
   57608:	strb	r1, [r3, #4]
   5760c:	b	5706c <lua_gethookcount@@Base+0x39ec>
   57610:	ldr	r3, [r4, #2320]	; 0x910
   57614:	b	56ca0 <lua_gethookcount@@Base+0x3620>
   57618:	bl	6e608 <luaL_openlibs@@Base+0x4e48>
   5761c:	ldr	r3, [r4, #2324]	; 0x914
   57620:	cmp	r8, r3
   57624:	beq	5773c <lua_gethookcount@@Base+0x40bc>
   57628:	mov	r2, #5
   5762c:	ldr	r1, [r8, #4]
   57630:	mov	r0, r8
   57634:	bl	12c88 <mprotect@plt>
   57638:	cmp	r0, #0
   5763c:	bne	57874 <lua_gethookcount@@Base+0x41f4>
   57640:	ldr	r3, [r4, #2320]	; 0x910
   57644:	ldr	r1, [r4, #272]	; 0x110
   57648:	ldr	r2, [r4, #2304]	; 0x900
   5764c:	ldr	ip, [r4, #2308]	; 0x904
   57650:	mvn	r0, #0
   57654:	ldr	r2, [r1, r2, lsl #2]
   57658:	ldr	r2, [r2, #28]
   5765c:	add	r2, r2, ip, lsl #3
   57660:	strb	r0, [r2, #7]
   57664:	ldrh	r2, [r4, #68]	; 0x44
   57668:	ldr	r2, [r1, r2, lsl #2]
   5766c:	ldrh	r1, [r2, #60]	; 0x3c
   57670:	ldrh	r0, [r2, #72]	; 0x48
   57674:	add	r1, r1, #1
   57678:	strh	r1, [r2, #60]	; 0x3c
   5767c:	strh	r0, [r4, #72]	; 0x48
   57680:	strh	r6, [r2, #72]	; 0x48
   57684:	b	56ca0 <lua_gethookcount@@Base+0x3620>
   57688:	ldr	ip, [r4, #36]	; 0x24
   5768c:	mov	r1, r4
   57690:	b	576a4 <lua_gethookcount@@Base+0x4024>
   57694:	add	r3, r3, #1
   57698:	cmp	r3, #64	; 0x40
   5769c:	add	r1, r1, #8
   576a0:	beq	57848 <lua_gethookcount@@Base+0x41c8>
   576a4:	ldr	r0, [r1, #1632]	; 0x660
   576a8:	cmp	r2, r0
   576ac:	bne	57694 <lua_gethookcount@@Base+0x4014>
   576b0:	ldr	r1, [r4, #2148]	; 0x864
   576b4:	ldr	lr, [pc, #-392]	; 57534 <lua_gethookcount@@Base+0x3eb4>
   576b8:	add	r0, r3, #204	; 0xcc
   576bc:	mul	r1, lr, r1
   576c0:	add	r0, r4, r0, lsl #3
   576c4:	add	r1, r1, #12288	; 0x3000
   576c8:	ldrh	r0, [r0, #4]
   576cc:	add	r1, r1, #57	; 0x39
   576d0:	str	r1, [r4, #2148]	; 0x864
   576d4:	lsr	r1, r1, #28
   576d8:	add	r1, r1, r0, lsl #1
   576dc:	ldr	r0, [pc, #-428]	; 57538 <lua_gethookcount@@Base+0x3eb8>
   576e0:	cmp	r1, r0
   576e4:	uxthls	r1, r1
   576e8:	bhi	57790 <lua_gethookcount@@Base+0x4110>
   576ec:	add	r2, r2, #4
   576f0:	add	r3, r4, r3, lsl #3
   576f4:	lsr	r2, r2, #2
   576f8:	and	r2, r2, #63	; 0x3f
   576fc:	add	r2, r2, #1392	; 0x570
   57700:	add	r2, r2, #8
   57704:	add	r3, r3, #1632	; 0x660
   57708:	lsl	r2, r2, #1
   5770c:	sub	r0, r4, #432	; 0x1b0
   57710:	strh	r1, [r3, #4]
   57714:	strh	fp, [r3, #6]
   57718:	strh	r1, [r0, r2]
   5771c:	b	566bc <lua_gethookcount@@Base+0x303c>
   57720:	ldrb	r2, [r4, #115]	; 0x73
   57724:	cmp	r2, #0
   57728:	strbne	r8, [r4, #115]	; 0x73
   5772c:	ldreq	r1, [r4, #2316]	; 0x90c
   57730:	streq	r1, [r3]
   57734:	streq	r2, [r4, #2312]	; 0x908
   57738:	b	56894 <lua_gethookcount@@Base+0x3214>
   5773c:	ldr	r3, [r4, #2320]	; 0x910
   57740:	cmp	r3, #5
   57744:	beq	57644 <lua_gethookcount@@Base+0x3fc4>
   57748:	mov	r1, #5
   5774c:	mov	r0, r4
   57750:	bl	37754 <luaL_typerror@@Base+0x13e8>
   57754:	ldr	r3, [r4, #2320]	; 0x910
   57758:	b	57644 <lua_gethookcount@@Base+0x3fc4>
   5775c:	ldrb	r3, [r7, #4]
   57760:	ldrh	r2, [r7, #2]
   57764:	orr	r3, r3, #32
   57768:	strb	r3, [r7, #4]
   5776c:	b	56e98 <lua_gethookcount@@Base+0x3818>
   57770:	add	r3, r4, #452	; 0x1c4
   57774:	ldrh	r3, [r3]
   57778:	cmp	r3, #0
   5777c:	bne	5692c <lua_gethookcount@@Base+0x32ac>
   57780:	b	5679c <lua_gethookcount@@Base+0x311c>
   57784:	ldr	r8, [r4, #16]
   57788:	ldrh	r2, [r7, #2]
   5778c:	b	5706c <lua_gethookcount@@Base+0x39ec>
   57790:	ldr	r3, [r2]
   57794:	add	r3, r3, #1
   57798:	strb	r3, [r2]
   5779c:	ldrb	r3, [ip, #37]	; 0x25
   577a0:	orr	r3, r3, #16
   577a4:	strb	r3, [ip, #37]	; 0x25
   577a8:	ldr	r5, [r7, #20]
   577ac:	b	566bc <lua_gethookcount@@Base+0x303c>
   577b0:	cmp	r7, #0
   577b4:	beq	57824 <lua_gethookcount@@Base+0x41a4>
   577b8:	ldr	lr, [r4, #32]
   577bc:	ldr	r0, [r4, #28]
   577c0:	sub	r6, lr, #4
   577c4:	add	ip, r0, r7, lsl #3
   577c8:	mov	r5, #4
   577cc:	ldrh	r2, [r0]
   577d0:	ldrb	r7, [r0, #6]
   577d4:	cmp	r7, #0
   577d8:	lsl	r2, r2, #2
   577dc:	beq	57818 <lua_gethookcount@@Base+0x4198>
   577e0:	add	r3, r6, r2
   577e4:	smlabb	r7, r5, r7, r3
   577e8:	sub	r2, r2, #4
   577ec:	add	r2, lr, r2
   577f0:	ldr	r3, [r2, #4]!
   577f4:	uxth	r3, r3
   577f8:	cmp	r3, #32768	; 0x8000
   577fc:	ldrhi	r1, [r4, #16]
   57800:	addhi	r3, r1, r3, lsl #3
   57804:	ldrbhi	r1, [r3, #4]
   57808:	orrhi	r1, r1, #32
   5780c:	strbhi	r1, [r3, #4]
   57810:	cmp	r7, r2
   57814:	bne	577f0 <lua_gethookcount@@Base+0x4170>
   57818:	add	r0, r0, #8
   5781c:	cmp	ip, r0
   57820:	bne	577cc <lua_gethookcount@@Base+0x414c>
   57824:	mov	r0, r4
   57828:	bl	16b78 <_start@@Base+0x37c8>
   5782c:	add	r0, r4, #2144	; 0x860
   57830:	add	r0, r0, #8
   57834:	mov	r2, #128	; 0x80
   57838:	mov	r1, #0
   5783c:	bl	12ed4 <memset@plt>
   57840:	ldrh	r7, [r4, #24]
   57844:	b	57304 <lua_gethookcount@@Base+0x3c84>
   57848:	ldr	r3, [r4, #2144]	; 0x860
   5784c:	mov	r1, #72	; 0x48
   57850:	add	r0, r3, #1
   57854:	and	r0, r0, #63	; 0x3f
   57858:	str	r0, [r4, #2144]	; 0x860
   5785c:	add	r0, r3, #204	; 0xcc
   57860:	str	r2, [r4, r0, lsl #3]
   57864:	b	576ec <lua_gethookcount@@Base+0x406c>
   57868:	mov	r0, r4
   5786c:	bl	3770c <luaL_typerror@@Base+0x13a0>
   57870:	b	57408 <lua_gethookcount@@Base+0x3d88>
   57874:	mov	r0, r4
   57878:	bl	3770c <luaL_typerror@@Base+0x13a0>
   5787c:	b	57640 <lua_gethookcount@@Base+0x3fc0>
   57880:	cmp	r8, #2
   57884:	ldr	r0, [r4, #80]	; 0x50
   57888:	bne	579d4 <lua_gethookcount@@Base+0x4354>
   5788c:	ldr	r3, [r0, #20]
   57890:	ldr	r2, [r3, #-4]
   57894:	cmn	r2, #14
   57898:	bhi	579d4 <lua_gethookcount@@Base+0x4354>
   5789c:	vldrne	d7, [r3, #-8]
   578a0:	ldreq	r2, [r3, #-8]
   578a4:	vcvtne.s32.f64	s15, d7
   578a8:	vmovne	r2, s15
   578ac:	cmp	r2, #24
   578b0:	beq	578bc <lua_gethookcount@@Base+0x423c>
   578b4:	cmp	r2, #26
   578b8:	bne	579d4 <lua_gethookcount@@Base+0x4354>
   578bc:	ldr	r2, [r4, #172]	; 0xac
   578c0:	sub	r2, r2, #1
   578c4:	cmp	r2, #0
   578c8:	str	r2, [r4, #172]	; 0xac
   578cc:	blt	579d4 <lua_gethookcount@@Base+0x4354>
   578d0:	sub	r2, r7, #-536870911	; 0xe0000001
   578d4:	ldr	r1, [r4, #28]
   578d8:	lsl	r2, r2, #3
   578dc:	sub	r3, r3, #8
   578e0:	str	r3, [r0, #20]
   578e4:	add	r3, r1, r2
   578e8:	ldrb	r0, [r1, #6]
   578ec:	ldrb	ip, [r3, #6]
   578f0:	ldrh	r3, [r1, r2]
   578f4:	ldr	r2, [r4, #32]
   578f8:	mov	r1, #0
   578fc:	add	r3, r3, ip
   57900:	ldr	r0, [r2, r0, lsl #2]
   57904:	str	r0, [r2, r3, lsl #2]
   57908:	ldr	r2, [r4, #8]
   5790c:	strh	r9, [r4, #26]
   57910:	cmp	r6, r2
   57914:	strh	r7, [r4, #24]
   57918:	strb	r1, [r4, #114]	; 0x72
   5791c:	bcs	57950 <lua_gethookcount@@Base+0x42d0>
   57920:	ldr	r0, [r4, #16]
   57924:	add	r2, r0, r2, lsl #3
   57928:	add	r0, r0, r6, lsl #3
   5792c:	ldrb	r3, [r2, #-3]
   57930:	ldrh	r1, [r2, #-2]
   57934:	sub	r2, r2, #8
   57938:	add	r3, r3, #136	; 0x88
   5793c:	cmp	r0, r2
   57940:	add	r3, r4, r3, lsl #1
   57944:	strh	r1, [r3, #14]
   57948:	bne	5792c <lua_gethookcount@@Base+0x42ac>
   5794c:	mov	r2, r6
   57950:	add	r3, r4, #2144	; 0x860
   57954:	add	r1, r4, #2272	; 0x8e0
   57958:	add	r3, r3, #8
   5795c:	add	r1, r1, #8
   57960:	mov	r0, #0
   57964:	str	r2, [r4, #8]
   57968:	ldrh	r2, [r3, #2]
   5796c:	add	r3, r3, #8
   57970:	cmp	r6, r2
   57974:	strhls	r0, [r3, #-8]
   57978:	cmp	r1, r3
   5797c:	bne	57968 <lua_gethookcount@@Base+0x42e8>
   57980:	sub	r3, r6, #1
   57984:	cmp	r3, #32768	; 0x8000
   57988:	bls	579b4 <lua_gethookcount@@Base+0x4334>
   5798c:	ldr	r3, [r4, #16]
   57990:	add	r2, r3, #262144	; 0x40000
   57994:	add	r6, r3, r6, lsl #3
   57998:	add	r2, r2, #8
   5799c:	ldrb	r3, [r6, #-4]
   579a0:	sub	r6, r6, #8
   579a4:	bic	r3, r3, #96	; 0x60
   579a8:	strb	r3, [r6, #4]
   579ac:	cmp	r2, r6
   579b0:	bne	5799c <lua_gethookcount@@Base+0x431c>
   579b4:	ldr	r1, [r4, #8]
   579b8:	mov	r3, #0
   579bc:	mov	r2, #17
   579c0:	str	r1, [r4, #244]	; 0xf4
   579c4:	strh	r3, [r4, #66]	; 0x42
   579c8:	strb	r3, [r4, #7]
   579cc:	str	r2, [r4, #168]	; 0xa8
   579d0:	b	56738 <lua_gethookcount@@Base+0x30b8>
   579d4:	mov	r1, r8
   579d8:	bl	20ff0 <luaL_where@@Base+0xeec>
   579dc:	push	{r4, lr}
   579e0:	vpush	{d8}
   579e4:	cmp	r0, #11
   579e8:	ldrls	pc, [pc, r0, lsl #2]
   579ec:	b	57ac8 <lua_gethookcount@@Base+0x4448>
   579f0:	andeq	r7, r5, ip, lsr #20
   579f4:	andeq	r7, r5, r8, lsr sl
   579f8:	andeq	r7, r5, r4, asr #20
   579fc:	andeq	r7, r5, r0, asr sl
   57a00:	andeq	r7, r5, ip, ror #20
   57a04:	andeq	r7, r5, r8, ror sl
   57a08:	andeq	r7, r5, r4, lsl #21
   57a0c:	muleq	r5, r0, sl
   57a10:	muleq	r5, ip, sl
   57a14:	andeq	r7, r5, r8, lsr #21
   57a18:			; <UNDEFINED> instruction: 0x00057ab4
   57a1c:	andeq	r7, r5, r0, lsr #20
   57a20:	vpop	{d8}
   57a24:	pop	{r4, lr}
   57a28:	b	12ec8 <tan@plt>
   57a2c:	vpop	{d8}
   57a30:	pop	{r4, lr}
   57a34:	b	6d568 <luaL_openlibs@@Base+0x3da8>
   57a38:	vpop	{d8}
   57a3c:	pop	{r4, lr}
   57a40:	b	6d678 <luaL_openlibs@@Base+0x3eb8>
   57a44:	vpop	{d8}
   57a48:	pop	{r4, lr}
   57a4c:	b	6d788 <luaL_openlibs@@Base+0x3fc8>
   57a50:	vcmp.f64	d0, #0.0
   57a54:	vsqrt.f64	d8, d0
   57a58:	vmrs	APSR_nzcv, fpscr
   57a5c:	bmi	57ac0 <lua_gethookcount@@Base+0x4440>
   57a60:	vmov.f64	d0, d8
   57a64:	vpop	{d8}
   57a68:	pop	{r4, pc}
   57a6c:	vpop	{d8}
   57a70:	pop	{r4, lr}
   57a74:	b	12fc4 <exp@plt>
   57a78:	vpop	{d8}
   57a7c:	pop	{r4, lr}
   57a80:	b	12e68 <exp2@plt>
   57a84:	vpop	{d8}
   57a88:	pop	{r4, lr}
   57a8c:	b	12c4c <log@plt>
   57a90:	vpop	{d8}
   57a94:	pop	{r4, lr}
   57a98:	b	12d0c <log2@plt>
   57a9c:	vpop	{d8}
   57aa0:	pop	{r4, lr}
   57aa4:	b	12dcc <log10@plt>
   57aa8:	vpop	{d8}
   57aac:	pop	{r4, lr}
   57ab0:	b	12e50 <sin@plt>
   57ab4:	vpop	{d8}
   57ab8:	pop	{r4, lr}
   57abc:	b	13084 <cos@plt>
   57ac0:	bl	12ea4 <sqrt@plt>
   57ac4:	b	57a60 <lua_gethookcount@@Base+0x43e0>
   57ac8:	vldr	d8, [pc]	; 57ad0 <lua_gethookcount@@Base+0x4450>
   57acc:	b	57a60 <lua_gethookcount@@Base+0x43e0>
	...
   57ad8:	push	{r4, lr}
   57adc:	mov	r4, r0
   57ae0:	ldrh	r0, [r0, #122]	; 0x7a
   57ae4:	vldr	d0, [r4, #136]	; 0x88
   57ae8:	bl	579dc <lua_gethookcount@@Base+0x435c>
   57aec:	mov	r0, r4
   57af0:	mov	r1, #28
   57af4:	pop	{r4, lr}
   57af8:	vmov	r2, r3, d0
   57afc:	b	28dc0 <luaL_where@@Base+0x8cbc>
   57b00:	ldr	r3, [r0, #96]	; 0x60
   57b04:	ldr	r2, [r3]
   57b08:	lsr	r3, r2, #24
   57b0c:	and	r3, r3, #31
   57b10:	sub	r3, r3, #15
   57b14:	cmp	r3, #4
   57b18:	bxls	lr
   57b1c:	push	{r4, r5, r6, lr}
   57b20:	mov	r5, r1
   57b24:	mov	r1, r2
   57b28:	mov	r4, r0
   57b2c:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   57b30:	ldrh	r2, [r5, #8]
   57b34:	ldr	r3, [pc, #120]	; 57bb4 <lua_gethookcount@@Base+0x4534>
   57b38:	strh	r2, [r4, #122]	; 0x7a
   57b3c:	strh	r3, [r4, #124]	; 0x7c
   57b40:	strh	r0, [r4, #120]	; 0x78
   57b44:	mov	r0, r4
   57b48:	bl	27498 <luaL_where@@Base+0x7394>
   57b4c:	ldr	r3, [r5]
   57b50:	ldr	r2, [r3, #4]
   57b54:	cmn	r2, #14
   57b58:	vldreq	s0, [r3]
   57b5c:	vldrne	d0, [r3]
   57b60:	vcvteq.f64.s32	d0, s0
   57b64:	mov	r6, r0
   57b68:	ldr	r0, [r5, #8]
   57b6c:	bl	579dc <lua_gethookcount@@Base+0x435c>
   57b70:	vcvt.s32.f64	s14, d0
   57b74:	vcvt.f64.s32	d7, s14
   57b78:	vcmp.f64	d7, d0
   57b7c:	vmrs	APSR_nzcv, fpscr
   57b80:	beq	57b90 <lua_gethookcount@@Base+0x4510>
   57b84:	ldr	r3, [r4, #96]	; 0x60
   57b88:	str	r6, [r3]
   57b8c:	pop	{r4, r5, r6, pc}
   57b90:	ldr	r2, [pc, #32]	; 57bb8 <lua_gethookcount@@Base+0x4538>
   57b94:	ldr	r3, [pc, #32]	; 57bbc <lua_gethookcount@@Base+0x453c>
   57b98:	strh	r6, [r4, #120]	; 0x78
   57b9c:	strh	r2, [r4, #124]	; 0x7c
   57ba0:	strh	r3, [r4, #122]	; 0x7a
   57ba4:	mov	r0, r4
   57ba8:	bl	27498 <luaL_where@@Base+0x7394>
   57bac:	mov	r6, r0
   57bb0:	b	57b84 <lua_gethookcount@@Base+0x4504>
   57bb4:	andeq	r3, r0, lr, lsl #10
   57bb8:	muleq	r0, r3, sl
   57bbc:	andeq	r3, r0, lr, ror #4
   57bc0:	ldr	r2, [r1, #4]
   57bc4:	cmn	r2, #14
   57bc8:	beq	57bd0 <lua_gethookcount@@Base+0x4550>
   57bcc:	b	3ca84 <luaL_typerror@@Base+0x6718>
   57bd0:	ldr	r1, [r1]
   57bd4:	b	3c890 <luaL_typerror@@Base+0x6524>
   57bd8:	push	{r4, r5, r6, lr}
   57bdc:	sub	r6, r1, #-536870911	; 0xe0000001
   57be0:	ldr	r5, [r0, #16]
   57be4:	ldr	r2, [r0, #20]
   57be8:	add	r4, r5, r6, lsl #3
   57bec:	cmp	r2, r4
   57bf0:	mov	r3, r0
   57bf4:	bls	57c2c <lua_gethookcount@@Base+0x45ac>
   57bf8:	ldr	r2, [r4, #4]
   57bfc:	cmn	r2, #5
   57c00:	bne	57c0c <lua_gethookcount@@Base+0x458c>
   57c04:	ldr	r0, [r5, r6, lsl #3]
   57c08:	pop	{r4, r5, r6, pc}
   57c0c:	cmn	r2, #14
   57c10:	bhi	57c2c <lua_gethookcount@@Base+0x45ac>
   57c14:	mov	r1, r4
   57c18:	bl	57bc0 <lua_gethookcount@@Base+0x4540>
   57c1c:	mvn	r3, #4
   57c20:	str	r0, [r5, r6, lsl #3]
   57c24:	str	r3, [r4, #4]
   57c28:	pop	{r4, r5, r6, pc}
   57c2c:	mov	r0, r3
   57c30:	mov	r2, #4
   57c34:	bl	36374 <luaL_typerror@@Base+0x8>
   57c38:	ldr	r3, [r0, #16]
   57c3c:	push	{r4, lr}
   57c40:	sub	r2, r2, #1
   57c44:	ldr	lr, [r3, #-8]
   57c48:	cmp	r2, #13
   57c4c:	add	r1, r1, #1
   57c50:	ldr	lr, [lr, #16]
   57c54:	ldrb	lr, [lr, #-57]	; 0xffffffc7
   57c58:	add	r3, r3, lr, lsl #3
   57c5c:	str	r3, [r0, #20]
   57c60:	beq	57c7c <lua_gethookcount@@Base+0x45fc>
   57c64:	cmp	r2, #14
   57c68:	beq	57c84 <lua_gethookcount@@Base+0x4604>
   57c6c:	cmp	r2, #4
   57c70:	bne	57c8c <lua_gethookcount@@Base+0x460c>
   57c74:	pop	{r4, lr}
   57c78:	b	57bd8 <lua_gethookcount@@Base+0x4558>
   57c7c:	pop	{r4, lr}
   57c80:	b	3638c <luaL_typerror@@Base+0x20>
   57c84:	pop	{r4, lr}
   57c88:	b	366f4 <luaL_typerror@@Base+0x388>
   57c8c:	ldr	r3, [pc, #8]	; 57c9c <lua_gethookcount@@Base+0x461c>
   57c90:	add	r2, r3, r2, lsl #2
   57c94:	ldr	r2, [r2, #-216]	; 0xffffff28
   57c98:	bl	36284 <luaL_argerror@@Base+0xbc>
   57c9c:			; <UNDEFINED> instruction: 0x00070cb0
   57ca0:	ldr	r3, [r0, #16]
   57ca4:	ldr	r2, [r0, #20]
   57ca8:	push	{r4, lr}
   57cac:	cmp	r3, r2
   57cb0:	bcs	57cf8 <lua_gethookcount@@Base+0x4678>
   57cb4:	add	r1, r3, #8
   57cb8:	cmp	r2, r1
   57cbc:	mov	r4, r0
   57cc0:	bls	57cec <lua_gethookcount@@Base+0x466c>
   57cc4:	ldr	r3, [r3, #12]
   57cc8:	cmn	r3, #1
   57ccc:	beq	57cec <lua_gethookcount@@Base+0x466c>
   57cd0:	mov	r1, #2
   57cd4:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   57cd8:	cmp	r0, #0
   57cdc:	beq	57cec <lua_gethookcount@@Base+0x466c>
   57ce0:	add	r1, r0, #16
   57ce4:	mov	r0, r4
   57ce8:	bl	359a8 <lua_error@@Base+0x8>
   57cec:	mov	r0, r4
   57cf0:	ldr	r1, [pc, #12]	; 57d04 <lua_gethookcount@@Base+0x4684>
   57cf4:	bl	35a48 <lua_error@@Base+0xa8>
   57cf8:	ldr	r2, [pc, #8]	; 57d08 <lua_gethookcount@@Base+0x4688>
   57cfc:	mov	r1, #1
   57d00:	bl	361d0 <luaL_argerror@@Base+0x8>
   57d04:	andeq	r0, r0, r5, lsr #7
   57d08:	andeq	r0, r0, r7, lsr #4
   57d0c:	push	{r4, r5, r6, r7, r8, lr}
   57d10:	mov	r1, #1
   57d14:	sub	sp, sp, #8
   57d18:	mov	r4, r0
   57d1c:	bl	36a74 <luaL_typerror@@Base+0x708>
   57d20:	ldr	r2, [r4, #16]
   57d24:	ldr	r1, [r4, #20]
   57d28:	add	r3, r2, #8
   57d2c:	cmp	r1, r3
   57d30:	mov	r6, r0
   57d34:	bls	57d44 <lua_gethookcount@@Base+0x46c4>
   57d38:	ldr	r3, [r2, #12]
   57d3c:	cmn	r3, #1
   57d40:	bne	57e2c <lua_gethookcount@@Base+0x47ac>
   57d44:	mov	r7, #0
   57d48:	add	r3, r2, #16
   57d4c:	cmp	r1, r3
   57d50:	bls	57d60 <lua_gethookcount@@Base+0x46e0>
   57d54:	ldr	r3, [r2, #20]
   57d58:	cmn	r3, #1
   57d5c:	bne	57e10 <lua_gethookcount@@Base+0x4790>
   57d60:	mov	r8, #1
   57d64:	add	r0, r2, #24
   57d68:	cmp	r1, r0
   57d6c:	bls	57d7c <lua_gethookcount@@Base+0x46fc>
   57d70:	ldr	r3, [r2, #28]
   57d74:	cmn	r3, #1
   57d78:	bne	57dfc <lua_gethookcount@@Base+0x477c>
   57d7c:	mov	r0, r6
   57d80:	bl	1f244 <lua_atpanic@@Base+0x74>
   57d84:	mov	ip, r0
   57d88:	ldr	r5, [r4, #8]
   57d8c:	mov	r3, r8
   57d90:	mov	r0, r5
   57d94:	ldr	r1, [r5, #88]	; 0x58
   57d98:	str	r4, [r5, #92]	; 0x5c
   57d9c:	mov	r2, r7
   57da0:	str	r1, [r0, #80]!	; 0x50
   57da4:	mov	r1, r6
   57da8:	str	ip, [sp]
   57dac:	bl	32384 <luaL_where@@Base+0x12280>
   57db0:	cmp	r0, #0
   57db4:	beq	57e48 <lua_gethookcount@@Base+0x47c8>
   57db8:	ldr	r3, [r0, #8]
   57dbc:	ldr	r2, [r0]
   57dc0:	mov	r1, r3
   57dc4:	sub	r2, r2, r3
   57dc8:	mov	r0, r4
   57dcc:	ldr	r5, [r4, #20]
   57dd0:	bl	20260 <luaL_where@@Base+0x15c>
   57dd4:	ldr	r3, [r4, #8]
   57dd8:	mvn	r2, #4
   57ddc:	str	r2, [r5, #-4]
   57de0:	ldrd	r2, [r3, #20]
   57de4:	cmp	r2, r3
   57de8:	str	r0, [r5, #-8]
   57dec:	bcs	57e88 <lua_gethookcount@@Base+0x4808>
   57df0:	mov	r0, #1
   57df4:	add	sp, sp, #8
   57df8:	pop	{r4, r5, r6, r7, r8, pc}
   57dfc:	mov	r1, #4
   57e00:	mov	r0, r4
   57e04:	bl	3638c <luaL_typerror@@Base+0x20>
   57e08:	mov	ip, r0
   57e0c:	b	57d88 <lua_gethookcount@@Base+0x4708>
   57e10:	mov	r1, #3
   57e14:	mov	r0, r4
   57e18:	bl	3638c <luaL_typerror@@Base+0x20>
   57e1c:	ldr	r2, [r4, #16]
   57e20:	ldr	r1, [r4, #20]
   57e24:	mov	r8, r0
   57e28:	b	57d64 <lua_gethookcount@@Base+0x46e4>
   57e2c:	mov	r1, #2
   57e30:	mov	r0, r4
   57e34:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   57e38:	ldr	r2, [r4, #16]
   57e3c:	ldr	r1, [r4, #20]
   57e40:	mov	r7, r0
   57e44:	b	57d48 <lua_gethookcount@@Base+0x46c8>
   57e48:	ldr	r5, [r5, #80]	; 0x50
   57e4c:	ldr	r3, [r6, #24]
   57e50:	cmp	r5, r3
   57e54:	bcs	57ea8 <lua_gethookcount@@Base+0x4828>
   57e58:	ldr	r0, [r6, #8]
   57e5c:	add	r0, r0, r5, lsl #3
   57e60:	cmp	r0, #0
   57e64:	beq	57eb8 <lua_gethookcount@@Base+0x4838>
   57e68:	ldr	r3, [r0, #4]
   57e6c:	cmn	r3, #14
   57e70:	bhi	57e94 <lua_gethookcount@@Base+0x4814>
   57e74:	ldr	r2, [pc, #68]	; 57ec0 <lua_gethookcount@@Base+0x4840>
   57e78:	mov	r3, r5
   57e7c:	mov	r0, r4
   57e80:	ldr	r1, [pc, #60]	; 57ec4 <lua_gethookcount@@Base+0x4844>
   57e84:	bl	4a618 <luaL_error@@Base+0x452c>
   57e88:	mov	r0, r4
   57e8c:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   57e90:	b	57df0 <lua_gethookcount@@Base+0x4770>
   57e94:	ldr	r2, [pc, #44]	; 57ec8 <lua_gethookcount@@Base+0x4848>
   57e98:	mvn	r3, r3
   57e9c:	add	r3, r2, r3, lsl #2
   57ea0:	ldr	r2, [r3, #-216]	; 0xffffff28
   57ea4:	b	57e78 <lua_gethookcount@@Base+0x47f8>
   57ea8:	mov	r0, r6
   57eac:	mov	r1, r5
   57eb0:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   57eb4:	b	57e60 <lua_gethookcount@@Base+0x47e0>
   57eb8:	ldr	r2, [pc, #12]	; 57ecc <lua_gethookcount@@Base+0x484c>
   57ebc:	b	57e78 <lua_gethookcount@@Base+0x47f8>
   57ec0:	andeq	r2, r7, r8, asr #29
   57ec4:	andeq	r0, r0, fp, ror r5
   57ec8:			; <UNDEFINED> instruction: 0x00070cb0
   57ecc:	andeq	r2, r7, r4, ror pc
   57ed0:	cmn	r2, #1
   57ed4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   57ed8:	mov	r6, r2
   57edc:	mov	r8, r0
   57ee0:	mov	r9, r1
   57ee4:	mov	r5, r3
   57ee8:	beq	57f10 <lua_gethookcount@@Base+0x4890>
   57eec:	sub	r3, r1, #-536870911	; 0xe0000001
   57ef0:	ldr	r2, [r0, #16]
   57ef4:	ldr	r1, [r0, #20]
   57ef8:	add	r3, r2, r3, lsl #3
   57efc:	cmp	r3, r1
   57f00:	bcs	57f74 <lua_gethookcount@@Base+0x48f4>
   57f04:	ldr	r3, [r3, #4]
   57f08:	cmn	r3, #1
   57f0c:	beq	57f74 <lua_gethookcount@@Base+0x48f4>
   57f10:	mov	r1, r9
   57f14:	mov	r0, r8
   57f18:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   57f1c:	cmp	r0, #0
   57f20:	beq	57f74 <lua_gethookcount@@Base+0x48f4>
   57f24:	ldrb	r4, [r5]
   57f28:	add	sl, r0, #16
   57f2c:	ldr	r7, [r0, #12]
   57f30:	cmp	r4, #0
   57f34:	beq	57f7c <lua_gethookcount@@Base+0x48fc>
   57f38:	mov	r6, #0
   57f3c:	b	57f54 <lua_gethookcount@@Base+0x48d4>
   57f40:	add	r4, r4, #1
   57f44:	add	r6, r6, #1
   57f48:	ldrb	r4, [r5, r4]!
   57f4c:	cmp	r4, #0
   57f50:	beq	57f7c <lua_gethookcount@@Base+0x48fc>
   57f54:	cmp	r4, r7
   57f58:	bne	57f40 <lua_gethookcount@@Base+0x48c0>
   57f5c:	mov	r2, r4
   57f60:	add	r1, r5, #1
   57f64:	mov	r0, sl
   57f68:	bl	12d00 <memcmp@plt>
   57f6c:	cmp	r0, #0
   57f70:	bne	57f40 <lua_gethookcount@@Base+0x48c0>
   57f74:	mov	r0, r6
   57f78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   57f7c:	mov	r3, sl
   57f80:	mov	r1, r9
   57f84:	mov	r0, r8
   57f88:	ldr	r2, [pc]	; 57f90 <lua_gethookcount@@Base+0x4910>
   57f8c:	bl	4a5d0 <luaL_error@@Base+0x44e4>
   57f90:	muleq	r0, fp, r4
   57f94:	push	{r4, r5, r6, lr}
   57f98:	mov	r5, r0
   57f9c:	ldr	r4, [r0, #16]
   57fa0:	ldr	r3, [r0, #20]
   57fa4:	add	r2, r4, #8
   57fa8:	cmp	r3, r2
   57fac:	sub	sp, sp, #16
   57fb0:	bls	57fc0 <lua_gethookcount@@Base+0x4940>
   57fb4:	ldr	r2, [r4, #12]
   57fb8:	cmn	r2, #1
   57fbc:	bne	58014 <lua_gethookcount@@Base+0x4994>
   57fc0:	cmp	r4, r3
   57fc4:	bcs	581ec <lua_gethookcount@@Base+0x4b6c>
   57fc8:	ldr	r3, [r4, #4]
   57fcc:	cmn	r3, #14
   57fd0:	bls	57ffc <lua_gethookcount@@Base+0x497c>
   57fd4:	cmn	r3, #5
   57fd8:	beq	58154 <lua_gethookcount@@Base+0x4ad4>
   57fdc:	cmn	r3, #11
   57fe0:	beq	580c4 <lua_gethookcount@@Base+0x4a44>
   57fe4:	ldr	r2, [r5, #16]
   57fe8:	mvn	r3, #0
   57fec:	str	r3, [r2, #-4]
   57ff0:	mov	r0, #2
   57ff4:	add	sp, sp, #16
   57ff8:	pop	{r4, r5, r6, pc}
   57ffc:	mov	r1, r4
   58000:	ldrd	r2, [r4]
   58004:	mov	r0, #2
   58008:	strd	r2, [r1, #-8]
   5800c:	add	sp, sp, #16
   58010:	pop	{r4, r5, r6, pc}
   58014:	mov	r1, #2
   58018:	bl	3638c <luaL_typerror@@Base+0x20>
   5801c:	cmp	r0, #10
   58020:	mov	r4, r0
   58024:	ldreq	r4, [r5, #16]
   58028:	ldreq	r3, [r5, #20]
   5802c:	beq	57fc0 <lua_gethookcount@@Base+0x4940>
   58030:	mov	r1, #1
   58034:	mov	r0, r5
   58038:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   5803c:	sub	r3, r4, #2
   58040:	cmp	r3, #34	; 0x22
   58044:	add	r6, r0, #16
   58048:	bhi	581fc <lua_gethookcount@@Base+0x4b7c>
   5804c:	mov	r2, r4
   58050:	add	r1, sp, #12
   58054:	mov	r0, r6
   58058:	bl	12e74 <strtoul@plt>
   5805c:	ldr	r3, [sp, #12]
   58060:	cmp	r3, r6
   58064:	beq	57fe4 <lua_gethookcount@@Base+0x4964>
   58068:	ldrb	r2, [r3]
   5806c:	ldr	ip, [pc, #408]	; 5820c <lua_gethookcount@@Base+0x4b8c>
   58070:	add	r1, ip, r2
   58074:	ldrb	r1, [r1, #189]	; 0xbd
   58078:	tst	r1, #2
   5807c:	beq	5809c <lua_gethookcount@@Base+0x4a1c>
   58080:	add	r3, r3, #1
   58084:	str	r3, [sp, #12]
   58088:	ldrb	r2, [r3]
   5808c:	add	r1, ip, r2
   58090:	ldrb	r1, [r1, #189]	; 0xbd
   58094:	tst	r1, #2
   58098:	bne	58080 <lua_gethookcount@@Base+0x4a00>
   5809c:	cmp	r2, #0
   580a0:	ldr	r2, [r5, #16]
   580a4:	bne	57fe8 <lua_gethookcount@@Base+0x4968>
   580a8:	cmp	r0, #0
   580ac:	mvnge	r3, #13
   580b0:	vmovlt	s15, r0
   580b4:	stmdbge	r2, {r0, r3}
   580b8:	vcvtlt.f64.u32	d7, s15
   580bc:	vstrlt	d7, [r2, #-8]
   580c0:	b	57ff0 <lua_gethookcount@@Base+0x4970>
   580c4:	ldr	r2, [r5, #8]
   580c8:	ldr	r3, [r4]
   580cc:	ldr	r6, [pc, #316]	; 58210 <lua_gethookcount@@Base+0x4b90>
   580d0:	ldr	r0, [r2, #228]	; 0xe4
   580d4:	ldrh	r2, [r3, #6]
   580d8:	ldr	r1, [r0]
   580dc:	str	r5, [r0, #12]
   580e0:	add	r3, r1, r2, lsl #4
   580e4:	b	580f0 <lua_gethookcount@@Base+0x4a70>
   580e8:	uxth	r2, r2
   580ec:	add	r3, r1, r2, lsl #4
   580f0:	ldr	r2, [r3]
   580f4:	lsr	ip, r2, #28
   580f8:	cmp	ip, #8
   580fc:	beq	580e8 <lua_gethookcount@@Base+0x4a68>
   58100:	and	lr, r2, r6
   58104:	cmp	lr, #545259520	; 0x20800000
   58108:	beq	580e8 <lua_gethookcount@@Base+0x4a68>
   5810c:	cmp	ip, #5
   58110:	uxtheq	r3, r2
   58114:	ldreq	r2, [r1, r3, lsl #4]
   58118:	addeq	r3, r1, r3, lsl #4
   5811c:	lsreq	ip, r2, #28
   58120:	cmp	ip, #0
   58124:	and	ip, r2, #-201326592	; 0xf4000000
   58128:	beq	58180 <lua_gethookcount@@Base+0x4b00>
   5812c:	cmp	ip, #872415232	; 0x34000000
   58130:	ldr	r2, [r5, #16]
   58134:	bne	57fe8 <lua_gethookcount@@Base+0x4968>
   58138:	mov	ip, #0
   5813c:	mov	r3, r4
   58140:	sub	r2, r2, #8
   58144:	add	r1, r1, #224	; 0xe0
   58148:	str	ip, [sp]
   5814c:	bl	4baa0 <luaL_error@@Base+0x59b4>
   58150:	b	57ff0 <lua_gethookcount@@Base+0x4970>
   58154:	ldr	r0, [r4]
   58158:	mov	r2, #1
   5815c:	add	r0, r0, #16
   58160:	mov	r1, r4
   58164:	bl	189f0 <_start@@Base+0x5640>
   58168:	cmp	r0, #3
   5816c:	beq	581d4 <lua_gethookcount@@Base+0x4b54>
   58170:	cmp	r0, #0
   58174:	bne	581e4 <lua_gethookcount@@Base+0x4b64>
   58178:	ldr	r3, [r4, #4]
   5817c:	b	57fdc <lua_gethookcount@@Base+0x495c>
   58180:	cmp	ip, #0
   58184:	bne	581cc <lua_gethookcount@@Base+0x4b4c>
   58188:	ldr	r3, [r3, #4]
   5818c:	cmp	r3, #4
   58190:	bhi	581cc <lua_gethookcount@@Base+0x4b4c>
   58194:	bne	581a0 <lua_gethookcount@@Base+0x4b20>
   58198:	tst	r2, #8388608	; 0x800000
   5819c:	bne	581cc <lua_gethookcount@@Base+0x4b4c>
   581a0:	mov	r2, #0
   581a4:	mov	r3, r4
   581a8:	add	r1, r1, #144	; 0x90
   581ac:	str	r2, [sp]
   581b0:	add	r2, sp, #12
   581b4:	bl	4baa0 <luaL_error@@Base+0x59b4>
   581b8:	ldr	r3, [r5, #16]
   581bc:	ldr	r1, [sp, #12]
   581c0:	mvn	r2, #13
   581c4:	stmdb	r3, {r1, r2}
   581c8:	b	57ff0 <lua_gethookcount@@Base+0x4970>
   581cc:	ldr	r2, [r5, #16]
   581d0:	b	58138 <lua_gethookcount@@Base+0x4ab8>
   581d4:	mvn	r3, #13
   581d8:	ldr	r1, [r5, #16]
   581dc:	str	r3, [r4, #4]
   581e0:	b	58000 <lua_gethookcount@@Base+0x4980>
   581e4:	ldr	r1, [r5, #16]
   581e8:	b	58000 <lua_gethookcount@@Base+0x4980>
   581ec:	mov	r0, r5
   581f0:	ldr	r2, [pc, #28]	; 58214 <lua_gethookcount@@Base+0x4b94>
   581f4:	mov	r1, #1
   581f8:	bl	361d0 <luaL_argerror@@Base+0x8>
   581fc:	mov	r0, r5
   58200:	ldr	r2, [pc, #16]	; 58218 <lua_gethookcount@@Base+0x4b98>
   58204:	mov	r1, #2
   58208:	bl	361d0 <luaL_argerror@@Base+0x8>
   5820c:			; <UNDEFINED> instruction: 0x0006ecb8
   58210:			; <UNDEFINED> instruction: 0xf0800000
   58214:	andeq	r0, r0, r7, lsr #4
   58218:	andeq	r0, r0, r9, asr r4
   5821c:	push	{r4, lr}
   58220:	mov	r1, #1
   58224:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   58228:	mov	r0, #0
   5822c:	pop	{r4, pc}
   58230:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   58234:	mov	r1, #1
   58238:	mov	r4, r0
   5823c:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   58240:	mov	r1, #2
   58244:	mov	r5, r0
   58248:	mov	r0, r4
   5824c:	bl	3638c <luaL_typerror@@Base+0x20>
   58250:	ldr	r3, [r4, #16]
   58254:	ldr	r1, [r4, #20]
   58258:	add	r2, r3, #16
   5825c:	cmp	r1, r2
   58260:	mov	r6, r0
   58264:	bls	58274 <lua_gethookcount@@Base+0x4bf4>
   58268:	ldr	r3, [r3, #20]
   5826c:	cmn	r3, #1
   58270:	bne	582dc <lua_gethookcount@@Base+0x4c5c>
   58274:	ldr	r3, [r4, #8]
   58278:	add	r7, r3, #80	; 0x50
   5827c:	ldr	r2, [r3, #88]	; 0x58
   58280:	str	r4, [r3, #92]	; 0x5c
   58284:	str	r2, [r3, #80]	; 0x50
   58288:	mov	r1, r5
   5828c:	mov	r2, r6
   58290:	mov	r0, r7
   58294:	bl	332e4 <luaL_where@@Base+0x131e0>
   58298:	ldr	r5, [r4, #20]
   5829c:	mov	r2, r0
   582a0:	mov	r0, r4
   582a4:	ldr	r3, [r2, #8]
   582a8:	ldr	r2, [r2]
   582ac:	mov	r1, r3
   582b0:	sub	r2, r2, r3
   582b4:	bl	20260 <luaL_where@@Base+0x15c>
   582b8:	ldr	r3, [r4, #8]
   582bc:	mvn	r2, #4
   582c0:	str	r2, [r5, #-4]
   582c4:	ldrd	r2, [r3, #20]
   582c8:	cmp	r2, r3
   582cc:	str	r0, [r5, #-8]
   582d0:	bcs	5833c <lua_gethookcount@@Base+0x4cbc>
   582d4:	mov	r0, #1
   582d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   582dc:	mov	r1, #3
   582e0:	mov	r0, r4
   582e4:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   582e8:	ldr	r8, [r4, #8]
   582ec:	add	r7, r8, #80	; 0x50
   582f0:	ldr	r3, [r8, #88]	; 0x58
   582f4:	str	r4, [r8, #92]	; 0x5c
   582f8:	str	r3, [r8, #80]	; 0x50
   582fc:	cmp	r0, #0
   58300:	cmpne	r6, #1
   58304:	mov	r1, r0
   58308:	ble	58288 <lua_gethookcount@@Base+0x4c08>
   5830c:	mov	r2, r5
   58310:	mov	r0, r4
   58314:	bl	3c93c <luaL_typerror@@Base+0x65d0>
   58318:	ldr	r3, [r8, #88]	; 0x58
   5831c:	mov	r1, r5
   58320:	str	r3, [r8, #80]	; 0x50
   58324:	sub	r6, r6, #1
   58328:	mov	r9, r0
   5832c:	mov	r0, r7
   58330:	bl	30050 <luaL_where@@Base+0xff4c>
   58334:	mov	r5, r9
   58338:	b	58288 <lua_gethookcount@@Base+0x4c08>
   5833c:	mov	r0, r4
   58340:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   58344:	mov	r0, #1
   58348:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   5834c:	push	{r4, r5, r6, lr}
   58350:	mov	r1, #1
   58354:	mov	r5, r0
   58358:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   5835c:	mov	r0, r5
   58360:	mov	r1, #2
   58364:	bl	3638c <luaL_typerror@@Base+0x20>
   58368:	ldr	r4, [r5, #16]
   5836c:	ldr	r2, [r5, #20]
   58370:	add	r3, r4, #16
   58374:	cmp	r2, r3
   58378:	mvnls	r0, #0
   5837c:	bls	58398 <lua_gethookcount@@Base+0x4d18>
   58380:	ldr	r0, [r4, #20]
   58384:	cmn	r0, #1
   58388:	beq	58398 <lua_gethookcount@@Base+0x4d18>
   5838c:	mov	r0, r5
   58390:	mov	r1, #3
   58394:	bl	3638c <luaL_typerror@@Base+0x20>
   58398:	mvn	r3, #13
   5839c:	str	r0, [r4, #16]
   583a0:	str	r3, [r4, #20]
   583a4:	mov	r0, #0
   583a8:	pop	{r4, r5, r6, pc}
   583ac:	push	{r4, r5, r6, r7, r8, lr}
   583b0:	mov	r1, #1
   583b4:	mov	r6, r0
   583b8:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   583bc:	ldr	r3, [r6, #16]
   583c0:	ldr	r2, [r6, #20]
   583c4:	add	r1, r3, #8
   583c8:	cmp	r2, r1
   583cc:	mov	r8, r0
   583d0:	ldr	r5, [r0, #12]
   583d4:	bls	583e4 <lua_gethookcount@@Base+0x4d64>
   583d8:	ldr	r1, [r3, #12]
   583dc:	cmn	r1, #1
   583e0:	bne	584b8 <lua_gethookcount@@Base+0x4e38>
   583e4:	add	r1, r3, #16
   583e8:	cmp	r2, r1
   583ec:	bhi	58464 <lua_gethookcount@@Base+0x4de4>
   583f0:	mov	r4, #1
   583f4:	mov	r0, r4
   583f8:	cmp	r5, r0
   583fc:	movlt	r0, r5
   58400:	cmp	r4, r0
   58404:	bgt	584b0 <lua_gethookcount@@Base+0x4e30>
   58408:	sub	r5, r4, #1
   5840c:	sub	r5, r0, r5
   58410:	cmp	r5, #8000	; 0x1f40
   58414:	bhi	58508 <lua_gethookcount@@Base+0x4e88>
   58418:	ldrd	r2, [r6, #20]
   5841c:	lsl	r7, r5, #3
   58420:	sub	r3, r3, r2
   58424:	cmp	r3, r7
   58428:	ble	584f0 <lua_gethookcount@@Base+0x4e70>
   5842c:	cmp	r5, #0
   58430:	beq	5845c <lua_gethookcount@@Base+0x4ddc>
   58434:	ldr	r3, [r6, #16]
   58438:	add	r2, r4, #14
   5843c:	add	r0, r7, r3
   58440:	add	r2, r8, r2
   58444:	mvn	ip, #13
   58448:	ldrb	r1, [r2, #1]!
   5844c:	stmdb	r3, {r1, ip}
   58450:	add	r3, r3, #8
   58454:	cmp	r3, r0
   58458:	bne	58448 <lua_gethookcount@@Base+0x4dc8>
   5845c:	add	r0, r5, #1
   58460:	pop	{r4, r5, r6, r7, r8, pc}
   58464:	ldr	r3, [r3, #20]
   58468:	cmn	r3, #1
   5846c:	beq	583f0 <lua_gethookcount@@Base+0x4d70>
   58470:	mov	r4, #1
   58474:	mov	r1, #3
   58478:	mov	r0, r6
   5847c:	bl	3638c <luaL_typerror@@Base+0x20>
   58480:	cmp	r0, #0
   58484:	addlt	r3, r5, #1
   58488:	addlt	r0, r0, r3
   5848c:	cmp	r4, #0
   58490:	addlt	r2, r5, #1
   58494:	addlt	r4, r2, r4
   58498:	cmp	r4, #1
   5849c:	movlt	r4, #1
   584a0:	cmp	r5, r0
   584a4:	movlt	r0, r5
   584a8:	cmp	r4, r0
   584ac:	ble	58408 <lua_gethookcount@@Base+0x4d88>
   584b0:	mov	r0, #1
   584b4:	pop	{r4, r5, r6, r7, r8, pc}
   584b8:	mov	r1, #2
   584bc:	mov	r0, r6
   584c0:	bl	3638c <luaL_typerror@@Base+0x20>
   584c4:	ldr	r3, [r6, #16]
   584c8:	ldr	r1, [r6, #20]
   584cc:	add	r2, r3, #16
   584d0:	cmp	r1, r2
   584d4:	movls	r4, r0
   584d8:	bls	58480 <lua_gethookcount@@Base+0x4e00>
   584dc:	ldr	r3, [r3, #20]
   584e0:	mov	r4, r0
   584e4:	cmn	r3, #1
   584e8:	beq	58480 <lua_gethookcount@@Base+0x4e00>
   584ec:	b	58474 <lua_gethookcount@@Base+0x4df4>
   584f0:	mov	r1, r5
   584f4:	mov	r0, r6
   584f8:	bl	1fd08 <lua_getstack@@Base+0x50>
   584fc:	cmp	r5, #0
   58500:	bne	58434 <lua_gethookcount@@Base+0x4db4>
   58504:	b	5845c <lua_gethookcount@@Base+0x4ddc>
   58508:	mov	r0, r6
   5850c:	ldr	r1, [pc]	; 58514 <lua_gethookcount@@Base+0x4e94>
   58510:	bl	35a48 <lua_error@@Base+0xa8>
   58514:	andeq	r0, r0, ip, ror #12
   58518:	ldrd	r2, [r0, #16]
   5851c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   58520:	sub	sp, sp, #20
   58524:	ldr	r9, [r0, #8]
   58528:	cmp	r3, r2
   5852c:	sub	sl, r9, #48	; 0x30
   58530:	beq	5876c <lua_gethookcount@@Base+0x50ec>
   58534:	sub	r3, r3, r2
   58538:	cmp	r3, #0
   5853c:	ble	58670 <lua_gethookcount@@Base+0x4ff0>
   58540:	add	r9, r9, #2864	; 0xb30
   58544:	add	r9, r9, #14
   58548:	mov	r8, #1
   5854c:	asr	r3, r3, #3
   58550:	str	r0, [sp, #4]
   58554:	str	r3, [sp, #8]
   58558:	mov	r1, r8
   5855c:	ldr	r0, [sp, #4]
   58560:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   58564:	ldrb	r3, [r0, #16]
   58568:	add	r7, r0, #16
   5856c:	sub	r2, r3, #48	; 0x30
   58570:	cmp	r2, #9
   58574:	bhi	5867c <lua_gethookcount@@Base+0x4ffc>
   58578:	ldrb	r2, [r0, #17]
   5857c:	cmp	r2, #0
   58580:	beq	5862c <lua_gethookcount@@Base+0x4fac>
   58584:	cmp	r3, #110	; 0x6e
   58588:	beq	586c8 <lua_gethookcount@@Base+0x5048>
   5858c:	mov	r6, r7
   58590:	mov	r3, #1
   58594:	str	r3, [sp, #12]
   58598:	ldr	r5, [pc, #496]	; 58790 <lua_gethookcount@@Base+0x5110>
   5859c:	mov	fp, #65536	; 0x10000
   585a0:	mov	r4, #4
   585a4:	mov	r2, r4
   585a8:	add	r1, r5, #1
   585ac:	mov	r0, r6
   585b0:	bl	13048 <strncmp@plt>
   585b4:	cmp	r0, #0
   585b8:	bne	585c8 <lua_gethookcount@@Base+0x4f48>
   585bc:	ldrb	r3, [r6, r4]
   585c0:	cmp	r3, #0
   585c4:	beq	58694 <lua_gethookcount@@Base+0x5014>
   585c8:	add	r4, r4, #1
   585cc:	lsl	fp, fp, #1
   585d0:	ldrb	r4, [r5, r4]!
   585d4:	cmp	r4, #0
   585d8:	bne	585a4 <lua_gethookcount@@Base+0x4f24>
   585dc:	ldr	r6, [pc, #432]	; 58794 <lua_gethookcount@@Base+0x5114>
   585e0:	mov	r1, r6
   585e4:	mov	r0, r7
   585e8:	ldrb	r5, [r1], #1
   585ec:	mov	r2, r5
   585f0:	bl	13048 <strncmp@plt>
   585f4:	cmp	r0, #0
   585f8:	bne	58608 <lua_gethookcount@@Base+0x4f88>
   585fc:	ldrb	r3, [r7, r5]
   58600:	cmp	r3, #61	; 0x3d
   58604:	beq	586f4 <lua_gethookcount@@Base+0x5074>
   58608:	add	r4, r4, #1
   5860c:	add	r5, r5, #1
   58610:	cmp	r4, #15
   58614:	add	r6, r6, r5
   58618:	bne	585e0 <lua_gethookcount@@Base+0x4f60>
   5861c:	mov	r2, r7
   58620:	ldr	r0, [sp, #4]
   58624:	ldr	r1, [pc, #364]	; 58798 <lua_gethookcount@@Base+0x5118>
   58628:	bl	4a618 <luaL_error@@Base+0x452c>
   5862c:	cmp	r3, #48	; 0x30
   58630:	beq	5864c <lua_gethookcount@@Base+0x4fcc>
   58634:	cmp	r3, #49	; 0x31
   58638:	moveq	r2, #458752	; 0x70000
   5863c:	beq	5864c <lua_gethookcount@@Base+0x4fcc>
   58640:	cmp	r3, #50	; 0x32
   58644:	ldr	r2, [pc, #336]	; 5879c <lua_gethookcount@@Base+0x511c>
   58648:	moveq	r2, #6750208	; 0x670000
   5864c:	ldr	r3, [sl, #532]	; 0x214
   58650:	bic	r3, r3, #267386880	; 0xff00000
   58654:	bic	r3, r3, #983040	; 0xf0000
   58658:	orr	r2, r3, r2
   5865c:	str	r2, [sl, #532]	; 0x214
   58660:	ldr	r3, [sp, #8]
   58664:	add	r8, r8, #1
   58668:	cmp	r3, r8
   5866c:	bge	58558 <lua_gethookcount@@Base+0x4ed8>
   58670:	mov	r0, #0
   58674:	add	sp, sp, #20
   58678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5867c:	cmp	r3, #43	; 0x2b
   58680:	bne	586b0 <lua_gethookcount@@Base+0x5030>
   58684:	mov	r3, #1
   58688:	add	r6, r0, #17
   5868c:	str	r3, [sp, #12]
   58690:	b	58598 <lua_gethookcount@@Base+0x4f18>
   58694:	ldr	r3, [sp, #12]
   58698:	ldr	r2, [sl, #532]	; 0x214
   5869c:	cmp	r3, #0
   586a0:	orrne	r3, r2, fp
   586a4:	biceq	r3, r2, fp
   586a8:	str	r3, [sl, #532]	; 0x214
   586ac:	b	58660 <lua_gethookcount@@Base+0x4fe0>
   586b0:	cmp	r3, #45	; 0x2d
   586b4:	bne	58584 <lua_gethookcount@@Base+0x4f04>
   586b8:	mov	r3, #0
   586bc:	add	r6, r0, #17
   586c0:	str	r3, [sp, #12]
   586c4:	b	58598 <lua_gethookcount@@Base+0x4f18>
   586c8:	ldrb	r3, [r0, #17]
   586cc:	cmp	r3, #111	; 0x6f
   586d0:	bne	5858c <lua_gethookcount@@Base+0x4f0c>
   586d4:	ldrb	r3, [r0, #18]
   586d8:	mov	r2, #0
   586dc:	str	r2, [sp, #12]
   586e0:	cmp	r3, #45	; 0x2d
   586e4:	movne	r6, #2
   586e8:	moveq	r6, #3
   586ec:	add	r6, r7, r6
   586f0:	b	58598 <lua_gethookcount@@Base+0x4f18>
   586f4:	add	r5, r5, #1
   586f8:	add	r1, r7, r5
   586fc:	ldrb	r2, [r7, r5]
   58700:	sub	r3, r2, #48	; 0x30
   58704:	uxtb	ip, r3
   58708:	cmp	ip, #9
   5870c:	bhi	5872c <lua_gethookcount@@Base+0x50ac>
   58710:	ldrb	r2, [r1, #1]!
   58714:	add	r0, r0, r0, lsl #2
   58718:	add	r0, r3, r0, lsl #1
   5871c:	sub	r3, r2, #48	; 0x30
   58720:	uxtb	ip, r3
   58724:	cmp	ip, #9
   58728:	bls	58710 <lua_gethookcount@@Base+0x5090>
   5872c:	cmp	r2, #0
   58730:	bne	5861c <lua_gethookcount@@Base+0x4f9c>
   58734:	add	r3, sl, r4, lsl #2
   58738:	cmp	r4, #6
   5873c:	str	r0, [r3, #1940]	; 0x794
   58740:	bne	58660 <lua_gethookcount@@Base+0x4fe0>
   58744:	ldr	r2, [sl, #1964]	; 0x7ac
   58748:	add	r3, sl, #2784	; 0xae0
   5874c:	add	r3, r3, #14
   58750:	lsl	r2, r2, #1
   58754:	sub	r2, r2, #1
   58758:	uxth	r2, r2
   5875c:	strh	r2, [r3, #2]!
   58760:	cmp	r9, r3
   58764:	bne	5875c <lua_gethookcount@@Base+0x50dc>
   58768:	b	58660 <lua_gethookcount@@Base+0x4fe0>
   5876c:	ldr	r3, [sl, #532]	; 0x214
   58770:	mov	r0, #0
   58774:	bic	r3, r3, #267386880	; 0xff00000
   58778:	bic	r3, r3, #983040	; 0xf0000
   5877c:	orr	r3, r3, #66846720	; 0x3fc0000
   58780:	orr	r3, r3, #196608	; 0x30000
   58784:	str	r3, [sl, #532]	; 0x214
   58788:	add	sp, sp, #20
   5878c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   58790:	andeq	r2, r7, r0, asr sp
   58794:	andeq	r2, r7, r8, ror pc
   58798:	andeq	r0, r0, r8, lsl #16
   5879c:	mvnseq	r0, #0
   587a0:	push	{r4, r5, r6, r7, r8, r9, lr}
   587a4:	mov	r1, #1
   587a8:	sub	sp, sp, #260	; 0x104
   587ac:	mov	r6, r0
   587b0:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   587b4:	ldr	r5, [r6, #16]
   587b8:	ldr	r2, [r6, #20]
   587bc:	add	r3, r5, #8
   587c0:	cmp	r2, r3
   587c4:	ldr	r3, [r5, #-8]
   587c8:	mov	r1, #47	; 0x2f
   587cc:	ldr	r7, [r3, #8]
   587d0:	add	r4, r0, #16
   587d4:	mov	r0, r4
   587d8:	bls	58828 <lua_gethookcount@@Base+0x51a8>
   587dc:	bl	12e8c <strchr@plt>
   587e0:	ldr	r3, [r5, #12]
   587e4:	cmn	r3, #3
   587e8:	bls	588a8 <lua_gethookcount@@Base+0x5228>
   587ec:	cmp	r0, #0
   587f0:	movne	r5, #1
   587f4:	beq	58838 <lua_gethookcount@@Base+0x51b8>
   587f8:	mov	r0, r4
   587fc:	mov	r1, r5
   58800:	bl	12d84 <dlopen@plt>
   58804:	subs	r4, r0, #0
   58808:	beq	588bc <lua_gethookcount@@Base+0x523c>
   5880c:	mov	r1, r7
   58810:	mov	r0, r6
   58814:	bl	40710 <luaL_typerror@@Base+0xa3a4>
   58818:	str	r4, [r0]
   5881c:	mov	r0, #1
   58820:	add	sp, sp, #260	; 0x104
   58824:	pop	{r4, r5, r6, r7, r8, r9, pc}
   58828:	bl	12e8c <strchr@plt>
   5882c:	cmp	r0, #0
   58830:	movne	r5, #1
   58834:	bne	587f8 <lua_gethookcount@@Base+0x5178>
   58838:	mov	r5, r0
   5883c:	mov	r1, #46	; 0x2e
   58840:	mov	r0, r4
   58844:	bl	12e8c <strchr@plt>
   58848:	cmp	r0, #0
   5884c:	beq	58978 <lua_gethookcount@@Base+0x52f8>
   58850:	ldrb	r3, [r4]
   58854:	cmp	r3, #108	; 0x6c
   58858:	bne	58874 <lua_gethookcount@@Base+0x51f4>
   5885c:	ldrb	r3, [r4, #1]
   58860:	cmp	r3, #105	; 0x69
   58864:	bne	58874 <lua_gethookcount@@Base+0x51f4>
   58868:	ldrb	r3, [r4, #2]
   5886c:	cmp	r3, #98	; 0x62
   58870:	beq	58894 <lua_gethookcount@@Base+0x5214>
   58874:	mov	r2, r4
   58878:	ldr	r1, [pc, #360]	; 589e8 <lua_gethookcount@@Base+0x5368>
   5887c:	mov	r0, r6
   58880:	bl	20040 <lua_getstack@@Base+0x388>
   58884:	ldr	r3, [r6, #20]
   58888:	sub	r3, r3, #8
   5888c:	str	r3, [r6, #20]
   58890:	mov	r4, r0
   58894:	ldr	r3, [pc, #336]	; 589ec <lua_gethookcount@@Base+0x536c>
   58898:	cmp	r5, #0
   5889c:	moveq	r5, #1
   588a0:	movne	r5, r3
   588a4:	b	587f8 <lua_gethookcount@@Base+0x5178>
   588a8:	cmp	r0, #0
   588ac:	ldrne	r5, [pc, #312]	; 589ec <lua_gethookcount@@Base+0x536c>
   588b0:	bne	587f8 <lua_gethookcount@@Base+0x5178>
   588b4:	mov	r5, #1
   588b8:	b	5883c <lua_gethookcount@@Base+0x51bc>
   588bc:	bl	12d30 <dlerror@plt>
   588c0:	ldrb	r3, [r0]
   588c4:	mov	r9, r0
   588c8:	cmp	r3, #47	; 0x2f
   588cc:	bne	5896c <lua_gethookcount@@Base+0x52ec>
   588d0:	mov	r1, #58	; 0x3a
   588d4:	bl	12e8c <strchr@plt>
   588d8:	subs	r2, r0, #0
   588dc:	beq	5896c <lua_gethookcount@@Base+0x52ec>
   588e0:	sub	r2, r2, r9
   588e4:	mov	r1, r9
   588e8:	mov	r0, r6
   588ec:	bl	20260 <luaL_where@@Base+0x15c>
   588f0:	ldr	r1, [pc, #248]	; 589f0 <lua_gethookcount@@Base+0x5370>
   588f4:	add	r0, r0, #16
   588f8:	bl	12fdc <fopen64@plt>
   588fc:	subs	r4, r0, #0
   58900:	beq	5896c <lua_gethookcount@@Base+0x52ec>
   58904:	mov	r0, sp
   58908:	mov	r2, r4
   5890c:	mov	r1, #256	; 0x100
   58910:	bl	12ca0 <fgets@plt>
   58914:	cmp	r0, #0
   58918:	beq	58964 <lua_gethookcount@@Base+0x52e4>
   5891c:	mov	r2, #16
   58920:	ldr	r1, [pc, #204]	; 589f4 <lua_gethookcount@@Base+0x5374>
   58924:	mov	r0, sp
   58928:	bl	13048 <strncmp@plt>
   5892c:	cmp	r0, #0
   58930:	beq	5894c <lua_gethookcount@@Base+0x52cc>
   58934:	b	5899c <lua_gethookcount@@Base+0x531c>
   58938:	mov	r1, sp
   5893c:	mov	r0, r6
   58940:	bl	3cd30 <luaL_typerror@@Base+0x69c4>
   58944:	subs	r8, r0, #0
   58948:	bne	589dc <lua_gethookcount@@Base+0x535c>
   5894c:	mov	r2, r4
   58950:	mov	r1, #256	; 0x100
   58954:	mov	r0, sp
   58958:	bl	12ca0 <fgets@plt>
   5895c:	cmp	r0, #0
   58960:	bne	58938 <lua_gethookcount@@Base+0x52b8>
   58964:	mov	r0, r4
   58968:	bl	12f4c <fclose@plt>
   5896c:	mov	r1, r9
   58970:	mov	r0, r6
   58974:	bl	359a8 <lua_error@@Base+0x8>
   58978:	mov	r2, r4
   5897c:	ldr	r1, [pc, #116]	; 589f8 <lua_gethookcount@@Base+0x5378>
   58980:	mov	r0, r6
   58984:	bl	20040 <lua_getstack@@Base+0x388>
   58988:	ldr	r3, [r6, #20]
   5898c:	sub	r3, r3, #8
   58990:	str	r3, [r6, #20]
   58994:	mov	r4, r0
   58998:	b	58850 <lua_gethookcount@@Base+0x51d0>
   5899c:	mov	r1, sp
   589a0:	mov	r0, r6
   589a4:	bl	3cd30 <luaL_typerror@@Base+0x69c4>
   589a8:	mov	r8, r0
   589ac:	mov	r0, r4
   589b0:	bl	12f4c <fclose@plt>
   589b4:	cmp	r8, #0
   589b8:	beq	5896c <lua_gethookcount@@Base+0x52ec>
   589bc:	mov	r1, r5
   589c0:	mov	r0, r8
   589c4:	bl	12d84 <dlopen@plt>
   589c8:	subs	r4, r0, #0
   589cc:	bne	5880c <lua_gethookcount@@Base+0x518c>
   589d0:	bl	12d30 <dlerror@plt>
   589d4:	mov	r9, r0
   589d8:	b	5896c <lua_gethookcount@@Base+0x52ec>
   589dc:	mov	r0, r4
   589e0:	bl	12f4c <fclose@plt>
   589e4:	b	589bc <lua_gethookcount@@Base+0x533c>
   589e8:	andeq	r3, r7, r0, lsl r0
   589ec:	andeq	r0, r0, r1, lsl #2
   589f0:	andeq	r3, r7, r0, asr #3
   589f4:	andeq	r3, r7, r8, lsl r0
   589f8:	andeq	r3, r7, r8
   589fc:	push	{r4, lr}
   58a00:	mov	r1, #1
   58a04:	mov	r4, r0
   58a08:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   58a0c:	ldr	r2, [pc, #96]	; 58a74 <lua_gethookcount@@Base+0x53f4>
   58a10:	ldr	r3, [r0, #8]
   58a14:	cmp	r3, r2
   58a18:	beq	58a38 <lua_gethookcount@@Base+0x53b8>
   58a1c:	bhi	58a54 <lua_gethookcount@@Base+0x53d4>
   58a20:	ldr	r2, [pc, #80]	; 58a78 <lua_gethookcount@@Base+0x53f8>
   58a24:	cmp	r3, r2
   58a28:	beq	58a38 <lua_gethookcount@@Base+0x53b8>
   58a2c:	ldr	r2, [pc, #72]	; 58a7c <lua_gethookcount@@Base+0x53fc>
   58a30:	cmp	r3, r2
   58a34:	bne	58a6c <lua_gethookcount@@Base+0x53ec>
   58a38:	mvn	r3, #2
   58a3c:	ldr	r1, [r4, #20]
   58a40:	ldr	r2, [r4, #8]
   58a44:	mov	r0, #1
   58a48:	str	r3, [r1, #-4]
   58a4c:	str	r3, [r2, #140]	; 0x8c
   58a50:	pop	{r4, pc}
   58a54:	ldr	r2, [pc, #36]	; 58a80 <lua_gethookcount@@Base+0x5400>
   58a58:	cmp	r3, r2
   58a5c:	beq	58a38 <lua_gethookcount@@Base+0x53b8>
   58a60:	ldr	r2, [pc, #28]	; 58a84 <lua_gethookcount@@Base+0x5404>
   58a64:	cmp	r3, r2
   58a68:	beq	58a38 <lua_gethookcount@@Base+0x53b8>
   58a6c:	mvn	r3, #1
   58a70:	b	58a3c <lua_gethookcount@@Base+0x53bc>
   58a74:	orrspl	r1, r4, #168, 14	; 0x2a00000
   58a78:	orrcs	sp, r2, pc, lsl #31
   58a7c:	bcc	ffea4c1c <__bss_end__@@Base+0xffe209a4>
   58a80:			; <UNDEFINED> instruction: 0x662d3c79
   58a84:	teq	lr, #1660944384	; 0x63000000
   58a88:	ldr	r3, [r0, #8]
   58a8c:	push	{r4, r5, r6, r7, r8, lr}
   58a90:	mov	r2, #0
   58a94:	ldr	r7, [r3, #228]	; 0xe4
   58a98:	sub	sp, sp, #16
   58a9c:	mov	r1, r7
   58aa0:	str	r0, [r7, #12]
   58aa4:	mov	r6, r0
   58aa8:	bl	372b0 <luaL_typerror@@Base+0xf44>
   58aac:	mov	r1, #2
   58ab0:	ldr	r8, [pc, #204]	; 58b84 <lua_gethookcount@@Base+0x5504>
   58ab4:	mov	r4, r0
   58ab8:	mov	r0, r6
   58abc:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   58ac0:	ldr	r5, [r7]
   58ac4:	add	r1, r5, r4, lsl #4
   58ac8:	b	58ad0 <lua_gethookcount@@Base+0x5450>
   58acc:	add	r1, r5, ip, lsl #4
   58ad0:	ldr	r3, [r1]
   58ad4:	and	lr, r3, r8
   58ad8:	lsr	r4, r3, #28
   58adc:	cmp	r4, #8
   58ae0:	uxth	ip, r3
   58ae4:	beq	58acc <lua_gethookcount@@Base+0x544c>
   58ae8:	cmp	lr, #545259520	; 0x20800000
   58aec:	beq	58acc <lua_gethookcount@@Base+0x544c>
   58af0:	cmp	r4, #1
   58af4:	beq	58b04 <lua_gethookcount@@Base+0x5484>
   58af8:	mov	r0, #0
   58afc:	add	sp, sp, #16
   58b00:	pop	{r4, r5, r6, r7, r8, pc}
   58b04:	ldr	r3, [r1, #4]
   58b08:	cmn	r3, #1
   58b0c:	beq	58af8 <lua_gethookcount@@Base+0x5478>
   58b10:	mov	r3, #0
   58b14:	mov	r2, r0
   58b18:	str	r3, [sp]
   58b1c:	mov	r0, r7
   58b20:	add	r3, sp, #12
   58b24:	bl	1544c <_start@@Base+0x209c>
   58b28:	cmp	r0, #0
   58b2c:	beq	58af8 <lua_gethookcount@@Base+0x5478>
   58b30:	ldr	r1, [r0]
   58b34:	ldr	r3, [r6, #20]
   58b38:	ldr	r0, [sp, #12]
   58b3c:	lsr	r2, r1, #28
   58b40:	mvn	ip, #13
   58b44:	cmp	r2, #9
   58b48:	stmdb	r3, {r0, ip}
   58b4c:	moveq	r0, r4
   58b50:	beq	58afc <lua_gethookcount@@Base+0x547c>
   58b54:	cmp	r2, #10
   58b58:	bne	58af8 <lua_gethookcount@@Base+0x5478>
   58b5c:	lsr	r2, r1, #8
   58b60:	and	r1, r1, #127	; 0x7f
   58b64:	add	r0, r3, #16
   58b68:	and	r2, r2, #127	; 0x7f
   58b6c:	stm	r3, {r1, ip}
   58b70:	str	r0, [r6, #20]
   58b74:	mov	r0, #3
   58b78:	str	r2, [r3, #8]
   58b7c:	str	ip, [r3, #12]
   58b80:	b	58afc <lua_gethookcount@@Base+0x547c>
   58b84:			; <UNDEFINED> instruction: 0xf0800000
   58b88:	push	{r4, lr}
   58b8c:	mov	r1, #1
   58b90:	sub	sp, sp, #88	; 0x58
   58b94:	mov	r4, r0
   58b98:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   58b9c:	ldr	r2, [r4, #8]
   58ba0:	ldr	r3, [r4, #16]
   58ba4:	str	r4, [sp, #48]	; 0x30
   58ba8:	ldr	r2, [r2, #228]	; 0xe4
   58bac:	add	r3, r3, #8
   58bb0:	mov	r1, #5
   58bb4:	str	r4, [r2, #12]
   58bb8:	strd	r2, [sp, #52]	; 0x34
   58bbc:	str	r1, [sp, #76]	; 0x4c
   58bc0:	add	r3, r0, #16
   58bc4:	add	r0, sp, #4
   58bc8:	str	r3, [sp, #60]	; 0x3c
   58bcc:	str	r3, [sp, #28]
   58bd0:	bl	19624 <_start@@Base+0x6274>
   58bd4:	cmp	r0, #0
   58bd8:	bne	58c0c <lua_gethookcount@@Base+0x558c>
   58bdc:	ldr	r3, [r4, #8]
   58be0:	ldrd	r2, [r3, #20]
   58be4:	cmp	r2, r3
   58be8:	bcs	58bf8 <lua_gethookcount@@Base+0x5578>
   58bec:	mov	r0, #0
   58bf0:	add	sp, sp, #88	; 0x58
   58bf4:	pop	{r4, pc}
   58bf8:	mov	r0, r4
   58bfc:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   58c00:	mov	r0, #0
   58c04:	add	sp, sp, #88	; 0x58
   58c08:	pop	{r4, pc}
   58c0c:	mov	r1, r0
   58c10:	mov	r0, r4
   58c14:	bl	20ff0 <luaL_where@@Base+0xeec>
   58c18:	ldr	r2, [r1, #4]
   58c1c:	push	{r4, lr}
   58c20:	cmn	r2, #5
   58c24:	mov	r4, r1
   58c28:	bne	58c34 <lua_gethookcount@@Base+0x55b4>
   58c2c:	ldr	r0, [r1]
   58c30:	pop	{r4, pc}
   58c34:	cmn	r2, #14
   58c38:	bhi	58c50 <lua_gethookcount@@Base+0x55d0>
   58c3c:	ldr	r0, [r0, #80]	; 0x50
   58c40:	bl	57bc0 <lua_gethookcount@@Base+0x4540>
   58c44:	mvn	r3, #4
   58c48:	stm	r4, {r0, r3}
   58c4c:	pop	{r4, pc}
   58c50:	bl	130b0 <pclose@plt+0x14>
   58c54:	ldr	r3, [r0, #96]	; 0x60
   58c58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   58c5c:	mov	r9, r1
   58c60:	sub	sp, sp, #36	; 0x24
   58c64:	ldr	r1, [r3]
   58c68:	mov	r4, r0
   58c6c:	bl	27e88 <luaL_where@@Base+0x7d84>
   58c70:	ldr	r1, [r9]
   58c74:	mov	r6, #1
   58c78:	mov	r7, r0
   58c7c:	mov	r0, r4
   58c80:	bl	58c18 <lua_gethookcount@@Base+0x5598>
   58c84:	mov	r2, #4
   58c88:	mov	r1, r0
   58c8c:	mov	r5, r0
   58c90:	mov	r0, r4
   58c94:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   58c98:	ldr	r3, [pc, #684]	; 58f4c <lua_gethookcount@@Base+0x58cc>
   58c9c:	strh	r7, [r4, #120]	; 0x78
   58ca0:	strh	r3, [r4, #124]	; 0x7c
   58ca4:	add	r5, r5, #16
   58ca8:	strh	r0, [r4, #122]	; 0x7a
   58cac:	mov	r0, r4
   58cb0:	bl	27498 <luaL_where@@Base+0x7394>
   58cb4:	mov	r0, r4
   58cb8:	bl	2b54c <luaL_where@@Base+0xb448>
   58cbc:	ldr	r3, [r5, #-4]
   58cc0:	str	r5, [sp, #16]
   58cc4:	add	r3, r5, r3
   58cc8:	str	r3, [sp, #20]
   58ccc:	mov	r8, r0
   58cd0:	str	r0, [sp, #12]
   58cd4:	add	r0, sp, #16
   58cd8:	bl	176c8 <_start@@Base+0x4318>
   58cdc:	subs	r5, r0, #0
   58ce0:	beq	58d74 <lua_gethookcount@@Base+0x56f4>
   58ce4:	cmp	r5, #2
   58ce8:	beq	58e78 <lua_gethookcount@@Base+0x57f8>
   58cec:	ldr	r3, [r4, #96]	; 0x60
   58cf0:	mov	r1, r5
   58cf4:	mov	r0, r4
   58cf8:	ldr	r7, [r3, r6, lsl #2]
   58cfc:	bl	26ccc <luaL_where@@Base+0x6bc8>
   58d00:	and	r2, r5, #15
   58d04:	sub	r2, r2, #2
   58d08:	add	r6, r6, #1
   58d0c:	mov	sl, r0
   58d10:	cmp	r2, #5
   58d14:	ldrls	pc, [pc, r2, lsl #2]
   58d18:	b	58ec4 <lua_gethookcount@@Base+0x5844>
   58d1c:	andeq	r8, r5, r4, lsl #29
   58d20:	andeq	r8, r5, r0, ror lr
   58d24:	andeq	r8, r5, r8, lsl #28
   58d28:	ldrdeq	r8, [r5], -r8	; <UNPREDICTABLE>
   58d2c:	andeq	r8, r5, r0, lsr #27
   58d30:	andeq	r8, r5, r4, lsr sp
   58d34:	mov	r1, r7
   58d38:	mov	r0, r4
   58d3c:	bl	281cc <luaL_where@@Base+0x80c8>
   58d40:	cmp	r5, #7
   58d44:	beq	58f18 <lua_gethookcount@@Base+0x5898>
   58d48:	mov	r2, r8
   58d4c:	str	r0, [sp]
   58d50:	mov	r3, sl
   58d54:	mov	r1, #15
   58d58:	mov	r0, r4
   58d5c:	bl	27a00 <luaL_where@@Base+0x78fc>
   58d60:	mov	r8, r0
   58d64:	add	r0, sp, #16
   58d68:	bl	176c8 <_start@@Base+0x4318>
   58d6c:	subs	r5, r0, #0
   58d70:	bne	58ce4 <lua_gethookcount@@Base+0x5664>
   58d74:	ldrh	r2, [sp, #12]
   58d78:	ldr	r3, [pc, #464]	; 58f50 <lua_gethookcount@@Base+0x58d0>
   58d7c:	strh	r8, [r4, #120]	; 0x78
   58d80:	strh	r2, [r4, #122]	; 0x7a
   58d84:	strh	r3, [r4, #124]	; 0x7c
   58d88:	mov	r0, r4
   58d8c:	ldr	r4, [r4, #96]	; 0x60
   58d90:	bl	27498 <luaL_where@@Base+0x7394>
   58d94:	str	r0, [r4]
   58d98:	add	sp, sp, #36	; 0x24
   58d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   58da0:	and	r2, r7, #520093696	; 0x1f000000
   58da4:	cmp	r2, #67108864	; 0x4000000
   58da8:	bne	58ec4 <lua_gethookcount@@Base+0x5844>
   58dac:	cmp	r5, #6
   58db0:	beq	58f2c <lua_gethookcount@@Base+0x58ac>
   58db4:	tst	r5, #16
   58db8:	beq	58ed8 <lua_gethookcount@@Base+0x5858>
   58dbc:	mov	r2, r8
   58dc0:	mov	r3, r7
   58dc4:	mov	r1, #9
   58dc8:	mov	r0, r4
   58dcc:	bl	27a00 <luaL_where@@Base+0x78fc>
   58dd0:	mov	r8, r0
   58dd4:	b	58cd4 <lua_gethookcount@@Base+0x5654>
   58dd8:	mov	fp, #13
   58ddc:	mov	r1, r7
   58de0:	mov	r0, r4
   58de4:	bl	27cc8 <luaL_where@@Base+0x7bc4>
   58de8:	mov	r2, r8
   58dec:	mov	r3, sl
   58df0:	mov	r1, fp
   58df4:	str	r0, [sp]
   58df8:	mov	r0, r4
   58dfc:	bl	27a00 <luaL_where@@Base+0x78fc>
   58e00:	mov	r8, r0
   58e04:	b	58cd4 <lua_gethookcount@@Base+0x5654>
   58e08:	mov	fp, #12
   58e0c:	lsr	r2, r7, #24
   58e10:	and	r2, r2, #31
   58e14:	sub	r2, r2, #15
   58e18:	cmp	r2, #4
   58e1c:	bhi	58ddc <lua_gethookcount@@Base+0x575c>
   58e20:	cmp	r5, #3
   58e24:	uxth	r7, r7
   58e28:	beq	58ef8 <lua_gethookcount@@Base+0x5878>
   58e2c:	ldr	r2, [pc, #288]	; 58f54 <lua_gethookcount@@Base+0x58d4>
   58e30:	ldr	r3, [pc, #288]	; 58f58 <lua_gethookcount@@Base+0x58d8>
   58e34:	strh	r2, [r4, #122]	; 0x7a
   58e38:	strh	r3, [r4, #124]	; 0x7c
   58e3c:	strh	r7, [r4, #120]	; 0x78
   58e40:	mov	r0, r4
   58e44:	bl	27498 <luaL_where@@Base+0x7394>
   58e48:	mov	r3, sl
   58e4c:	mov	r2, r8
   58e50:	mov	r1, #10
   58e54:	str	r0, [sp]
   58e58:	mov	r0, r4
   58e5c:	bl	27a00 <luaL_where@@Base+0x78fc>
   58e60:	mov	r3, #1
   58e64:	strb	r3, [r4, #268]	; 0x10c
   58e68:	mov	r8, r0
   58e6c:	b	58cd4 <lua_gethookcount@@Base+0x5654>
   58e70:	mov	fp, #11
   58e74:	b	58e0c <lua_gethookcount@@Base+0x578c>
   58e78:	mov	r1, r5
   58e7c:	mov	r0, r4
   58e80:	bl	26ccc <luaL_where@@Base+0x6bc8>
   58e84:	ldr	r2, [sp, #28]
   58e88:	ldr	r1, [sp, #24]
   58e8c:	ldr	r0, [r4, #80]	; 0x50
   58e90:	bl	20260 <luaL_where@@Base+0x15c>
   58e94:	mov	r2, #4
   58e98:	mov	r1, r0
   58e9c:	mov	r0, r4
   58ea0:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   58ea4:	ldr	r3, [pc, #176]	; 58f5c <lua_gethookcount@@Base+0x58dc>
   58ea8:	strh	r8, [r4, #120]	; 0x78
   58eac:	strh	r0, [r4, #122]	; 0x7a
   58eb0:	strh	r3, [r4, #124]	; 0x7c
   58eb4:	mov	r0, r4
   58eb8:	bl	27498 <luaL_where@@Base+0x7394>
   58ebc:	mov	r8, r0
   58ec0:	b	58cd4 <lua_gethookcount@@Base+0x5654>
   58ec4:	mov	r1, r9
   58ec8:	mov	r0, r4
   58ecc:	bl	2e7dc <luaL_where@@Base+0xe6d8>
   58ed0:	add	sp, sp, #36	; 0x24
   58ed4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   58ed8:	mov	r3, r0
   58edc:	mov	r2, r8
   58ee0:	str	r7, [sp]
   58ee4:	mov	r1, #14
   58ee8:	mov	r0, r4
   58eec:	bl	27a00 <luaL_where@@Base+0x78fc>
   58ef0:	mov	r8, r0
   58ef4:	b	58cd4 <lua_gethookcount@@Base+0x5654>
   58ef8:	ldr	r2, [pc, #96]	; 58f60 <lua_gethookcount@@Base+0x58e0>
   58efc:	mov	r3, #0
   58f00:	strh	r2, [r4, #124]	; 0x7c
   58f04:	strh	r7, [r4, #120]	; 0x78
   58f08:	strh	r3, [r4, #122]	; 0x7a
   58f0c:	mov	r0, r4
   58f10:	bl	27498 <luaL_where@@Base+0x7394>
   58f14:	b	58ea4 <lua_gethookcount@@Base+0x5824>
   58f18:	ldr	r2, [pc, #64]	; 58f60 <lua_gethookcount@@Base+0x58e0>
   58f1c:	mov	r3, #2
   58f20:	strh	r2, [r4, #124]	; 0x7c
   58f24:	strh	r0, [r4, #120]	; 0x78
   58f28:	b	58f08 <lua_gethookcount@@Base+0x5888>
   58f2c:	ldr	r3, [pc, #40]	; 58f5c <lua_gethookcount@@Base+0x58dc>
   58f30:	strh	r8, [r4, #120]	; 0x78
   58f34:	strh	r3, [r4, #124]	; 0x7c
   58f38:	strh	r7, [r4, #122]	; 0x7a
   58f3c:	mov	r0, r4
   58f40:	bl	27498 <luaL_where@@Base+0x7394>
   58f44:	mov	r8, r0
   58f48:	b	58cd4 <lua_gethookcount@@Base+0x5654>
   58f4c:	andeq	r0, r0, r4, lsl #17
   58f50:	andeq	r5, r0, r4, lsl #12
   58f54:	ldrdeq	r0, [r0], -r3
   58f58:	andeq	r5, r0, r6, lsl sl
   58f5c:	andeq	r5, r0, r5, lsl #10
   58f60:	andeq	r5, r0, r4, lsl #24
   58f64:	ldr	r3, [r0, #96]	; 0x60
   58f68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   58f6c:	mov	r7, r1
   58f70:	sub	sp, sp, #36	; 0x24
   58f74:	ldr	r1, [r3]
   58f78:	mov	r4, r0
   58f7c:	bl	27e88 <luaL_where@@Base+0x7d84>
   58f80:	ldr	r3, [r4, #96]	; 0x60
   58f84:	mov	r5, #0
   58f88:	mov	fp, #1
   58f8c:	ldr	r1, [r3, #4]
   58f90:	mov	r6, r0
   58f94:	mov	r0, r4
   58f98:	bl	27e88 <luaL_where@@Base+0x7d84>
   58f9c:	ldr	r3, [pc, #888]	; 5931c <lua_gethookcount@@Base+0x5c9c>
   58fa0:	uxth	r6, r6
   58fa4:	strh	r3, [r4, #124]	; 0x7c
   58fa8:	strh	r5, [r4, #122]	; 0x7a
   58fac:	strh	r6, [r4, #120]	; 0x78
   58fb0:	str	r0, [sp, #12]
   58fb4:	mov	r0, r4
   58fb8:	bl	27498 <luaL_where@@Base+0x7394>
   58fbc:	mov	r1, r5
   58fc0:	mov	r8, r0
   58fc4:	mov	r0, r4
   58fc8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   58fcc:	ldr	r1, [r7]
   58fd0:	str	r0, [sp, #8]
   58fd4:	mov	r0, r4
   58fd8:	bl	58c18 <lua_gethookcount@@Base+0x5598>
   58fdc:	ldr	r1, [r7]
   58fe0:	add	r1, r1, #8
   58fe4:	mov	r5, r0
   58fe8:	mov	r0, r4
   58fec:	bl	58c18 <lua_gethookcount@@Base+0x5598>
   58ff0:	ldr	r3, [r4, #96]	; 0x60
   58ff4:	strb	fp, [r4, #113]	; 0x71
   58ff8:	ldr	r1, [r3, #8]
   58ffc:	tst	r1, #520093696	; 0x1f000000
   59000:	mov	r9, r0
   59004:	bne	592dc <lua_gethookcount@@Base+0x5c5c>
   59008:	mov	r1, fp
   5900c:	mov	r0, r4
   59010:	bl	26ccc <luaL_where@@Base+0x6bc8>
   59014:	str	fp, [sp, #28]
   59018:	mov	sl, r0
   5901c:	ldr	r3, [sp, #8]
   59020:	add	r2, sp, #28
   59024:	str	r3, [sp, #4]
   59028:	add	r1, r5, #12
   5902c:	mov	r3, sl
   59030:	str	r8, [sp]
   59034:	mov	r0, r4
   59038:	bl	288f0 <luaL_where@@Base+0x87ec>
   5903c:	ldr	r1, [r5, #12]
   59040:	ldr	r2, [sp, #28]
   59044:	uxth	fp, r8
   59048:	cmp	r1, r2
   5904c:	mov	sl, r0
   59050:	bcc	592b4 <lua_gethookcount@@Base+0x5c34>
   59054:	ldr	r2, [pc, #708]	; 59320 <lua_gethookcount@@Base+0x5ca0>
   59058:	strh	r0, [r4, #120]	; 0x78
   5905c:	strh	fp, [r4, #122]	; 0x7a
   59060:	strh	r2, [r4, #124]	; 0x7c
   59064:	mov	r0, r4
   59068:	bl	27498 <luaL_where@@Base+0x7394>
   5906c:	ldr	r2, [r4, #96]	; 0x60
   59070:	ldrh	r8, [sp, #12]
   59074:	ldr	r1, [r2, #8]
   59078:	cmp	r1, #0
   5907c:	beq	59268 <lua_gethookcount@@Base+0x5be8>
   59080:	ldrb	r2, [r2, #15]
   59084:	and	r2, r2, #31
   59088:	cmp	r2, #1
   5908c:	bls	59268 <lua_gethookcount@@Base+0x5be8>
   59090:	ldr	r1, [pc, #652]	; 59324 <lua_gethookcount@@Base+0x5ca4>
   59094:	ldrh	r3, [sp, #8]
   59098:	uxth	sl, sl
   5909c:	strh	sl, [r4, #122]	; 0x7a
   590a0:	strh	r1, [r4, #124]	; 0x7c
   590a4:	strh	r6, [r4, #120]	; 0x78
   590a8:	mov	r0, r4
   590ac:	str	r3, [sp, #8]
   590b0:	str	r1, [sp, #12]
   590b4:	bl	27498 <luaL_where@@Base+0x7394>
   590b8:	ldrh	r3, [sp, #8]
   590bc:	ldr	r1, [sp, #12]
   590c0:	strh	r8, [r4, #120]	; 0x78
   590c4:	strh	r1, [r4, #124]	; 0x7c
   590c8:	strh	r3, [r4, #122]	; 0x7a
   590cc:	str	r0, [sp, #20]
   590d0:	mov	r0, r4
   590d4:	bl	27498 <luaL_where@@Base+0x7394>
   590d8:	strh	sl, [r4, #122]	; 0x7a
   590dc:	strh	fp, [r4, #120]	; 0x78
   590e0:	mov	sl, #0
   590e4:	str	r0, [sp, #16]
   590e8:	ldr	r0, [pc, #568]	; 59328 <lua_gethookcount@@Base+0x5ca8>
   590ec:	strh	r0, [r4, #124]	; 0x7c
   590f0:	mov	r0, r4
   590f4:	bl	27498 <luaL_where@@Base+0x7394>
   590f8:	strh	r8, [r4, #120]	; 0x78
   590fc:	strh	sl, [r4, #122]	; 0x7a
   59100:	str	r0, [sp, #12]
   59104:	ldr	r0, [pc, #528]	; 5931c <lua_gethookcount@@Base+0x5c9c>
   59108:	strh	r0, [r4, #124]	; 0x7c
   5910c:	mov	r0, r4
   59110:	bl	27498 <luaL_where@@Base+0x7394>
   59114:	ldr	r3, [sp, #12]
   59118:	ldr	r1, [sp, #16]
   5911c:	str	r3, [sp]
   59120:	ldr	r2, [sp, #20]
   59124:	mov	r3, r1
   59128:	mov	r1, #1
   5912c:	str	r0, [sp, #4]
   59130:	mov	fp, r0
   59134:	mov	r0, r4
   59138:	bl	27a00 <luaL_where@@Base+0x78fc>
   5913c:	mov	r2, sl
   59140:	mov	r1, #26
   59144:	mov	r8, r0
   59148:	mov	r0, r4
   5914c:	bl	2b1d8 <luaL_where@@Base+0xb0d4>
   59150:	ldr	r2, [r5, #12]
   59154:	ldr	r3, [r9, #12]
   59158:	mov	sl, r0
   5915c:	ldr	r0, [sp, #28]
   59160:	sub	r2, r2, r0
   59164:	cmp	r2, r3
   59168:	bcc	59234 <lua_gethookcount@@Base+0x5bb4>
   5916c:	add	r0, r0, #16
   59170:	cmp	r3, #0
   59174:	add	r0, r5, r0
   59178:	bne	59300 <lua_gethookcount@@Base+0x5c80>
   5917c:	cmp	r0, #0
   59180:	uxth	r8, r8
   59184:	uxth	sl, sl
   59188:	beq	5923c <lua_gethookcount@@Base+0x5bbc>
   5918c:	ldr	r3, [pc, #408]	; 5932c <lua_gethookcount@@Base+0x5cac>
   59190:	strh	r8, [r4, #120]	; 0x78
   59194:	strh	r3, [r4, #124]	; 0x7c
   59198:	strh	sl, [r4, #122]	; 0x7a
   5919c:	mov	r0, r4
   591a0:	bl	27498 <luaL_where@@Base+0x7394>
   591a4:	ldrh	r2, [sp, #8]
   591a8:	ldr	r3, [pc, #372]	; 59324 <lua_gethookcount@@Base+0x5ca4>
   591ac:	strh	r6, [r4, #120]	; 0x78
   591b0:	strh	r2, [r4, #122]	; 0x7a
   591b4:	strh	r3, [r4, #124]	; 0x7c
   591b8:	mov	r0, r4
   591bc:	bl	27498 <luaL_where@@Base+0x7394>
   591c0:	ldr	r3, [pc, #352]	; 59328 <lua_gethookcount@@Base+0x5ca8>
   591c4:	strh	r8, [r4, #120]	; 0x78
   591c8:	strh	r3, [r4, #124]	; 0x7c
   591cc:	ldr	r5, [pc, #348]	; 59330 <lua_gethookcount@@Base+0x5cb0>
   591d0:	strh	r0, [r4, #122]	; 0x7a
   591d4:	mov	r0, r4
   591d8:	bl	27498 <luaL_where@@Base+0x7394>
   591dc:	mov	r1, #1
   591e0:	uxth	r6, r0
   591e4:	mov	r0, r4
   591e8:	bl	26ccc <luaL_where@@Base+0x6bc8>
   591ec:	strh	r6, [r4, #120]	; 0x78
   591f0:	strh	r5, [r4, #124]	; 0x7c
   591f4:	ldr	r9, [r4, #96]	; 0x60
   591f8:	strh	r0, [r4, #122]	; 0x7a
   591fc:	mov	r0, r4
   59200:	bl	27498 <luaL_where@@Base+0x7394>
   59204:	ldr	r8, [r4, #96]	; 0x60
   59208:	str	r0, [r9]
   5920c:	strh	r6, [r4, #120]	; 0x78
   59210:	strh	r5, [r4, #124]	; 0x7c
   59214:	strh	fp, [r4, #122]	; 0x7a
   59218:	mov	r0, r4
   5921c:	bl	27498 <luaL_where@@Base+0x7394>
   59220:	mov	r3, #2
   59224:	str	r0, [r8, #4]
   59228:	str	r3, [r7, #4]
   5922c:	add	sp, sp, #36	; 0x24
   59230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   59234:	uxth	r8, r8
   59238:	uxth	sl, sl
   5923c:	ldr	r3, [pc, #240]	; 59334 <lua_gethookcount@@Base+0x5cb4>
   59240:	strh	r8, [r4, #120]	; 0x78
   59244:	strh	r3, [r4, #124]	; 0x7c
   59248:	strh	sl, [r4, #122]	; 0x7a
   5924c:	mov	r0, r4
   59250:	bl	27498 <luaL_where@@Base+0x7394>
   59254:	ldr	r3, [r4, #96]	; 0x60
   59258:	ldr	r2, [pc, #216]	; 59338 <lua_gethookcount@@Base+0x5cb8>
   5925c:	str	r2, [r3]
   59260:	add	sp, sp, #36	; 0x24
   59264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   59268:	mov	r1, r9
   5926c:	mov	r2, #4
   59270:	mov	r0, r4
   59274:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   59278:	ldr	r2, [pc, #188]	; 5933c <lua_gethookcount@@Base+0x5cbc>
   5927c:	strh	r8, [r4, #120]	; 0x78
   59280:	strh	r2, [r4, #124]	; 0x7c
   59284:	strh	r0, [r4, #122]	; 0x7a
   59288:	mov	r0, r4
   5928c:	bl	27498 <luaL_where@@Base+0x7394>
   59290:	mov	r0, r9
   59294:	bl	1adac <_start@@Base+0x79fc>
   59298:	cmp	r0, #0
   5929c:	beq	59090 <lua_gethookcount@@Base+0x5a10>
   592a0:	mov	r1, r7
   592a4:	mov	r0, r4
   592a8:	bl	2e7dc <luaL_where@@Base+0xe6d8>
   592ac:	add	sp, sp, #36	; 0x24
   592b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   592b4:	ldr	r2, [pc, #132]	; 59340 <lua_gethookcount@@Base+0x5cc0>
   592b8:	strh	r0, [r4, #120]	; 0x78
   592bc:	strh	r2, [r4, #124]	; 0x7c
   592c0:	strh	fp, [r4, #122]	; 0x7a
   592c4:	mov	r0, r4
   592c8:	bl	27498 <luaL_where@@Base+0x7394>
   592cc:	ldr	r2, [r5, #12]
   592d0:	mov	sl, r8
   592d4:	str	r2, [sp, #28]
   592d8:	b	5906c <lua_gethookcount@@Base+0x59ec>
   592dc:	mov	r0, r4
   592e0:	bl	281cc <luaL_where@@Base+0x80c8>
   592e4:	ldr	r1, [r7]
   592e8:	add	r1, r1, #16
   592ec:	mov	sl, r0
   592f0:	mov	r0, r4
   592f4:	bl	210f8 <luaL_where@@Base+0xff4>
   592f8:	str	r0, [sp, #28]
   592fc:	b	5901c <lua_gethookcount@@Base+0x599c>
   59300:	add	r1, r9, #16
   59304:	bl	1e698 <_start@@Base+0xb2e8>
   59308:	uxth	r8, r8
   5930c:	uxth	sl, sl
   59310:	cmp	r0, #0
   59314:	bne	5918c <lua_gethookcount@@Base+0x5b0c>
   59318:	b	5923c <lua_gethookcount@@Base+0x5bbc>
   5931c:	andeq	r4, r0, r3, lsl r5
   59320:	muleq	r0, r3, r6
   59324:	andeq	r4, r0, r5
   59328:	andeq	r2, r0, r3, lsl sl
   5932c:	andeq	r0, r0, r5, lsl #19
   59330:	andeq	r2, r0, r3, lsl r9
   59334:	andeq	r0, r0, r5, lsl #17
   59338:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   5933c:	andeq	r0, r0, r4, lsl #17
   59340:	muleq	r0, r3, r7
   59344:	ldr	r3, [r0, #96]	; 0x60
   59348:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5934c:	mov	r6, r1
   59350:	sub	sp, sp, #28
   59354:	ldr	r1, [r3]
   59358:	mov	r4, r0
   5935c:	bl	27e88 <luaL_where@@Base+0x7d84>
   59360:	ldr	r3, [pc, #1060]	; 5978c <lua_gethookcount@@Base+0x610c>
   59364:	mov	r5, #0
   59368:	strh	r3, [r4, #124]	; 0x7c
   5936c:	strh	r5, [r4, #122]	; 0x7a
   59370:	uxth	r8, r0
   59374:	strh	r8, [r4, #120]	; 0x78
   59378:	mov	r0, r4
   5937c:	bl	27498 <luaL_where@@Base+0x7394>
   59380:	mov	r1, r5
   59384:	mov	sl, r0
   59388:	mov	r0, r4
   5938c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   59390:	ldr	r1, [r6]
   59394:	mov	fp, r0
   59398:	mov	r0, r4
   5939c:	bl	58c18 <lua_gethookcount@@Base+0x5598>
   593a0:	ldr	r3, [r6, #8]
   593a4:	cmp	r3, r5
   593a8:	mov	r9, r0
   593ac:	bne	59624 <lua_gethookcount@@Base+0x5fa4>
   593b0:	ldr	r3, [r4, #96]	; 0x60
   593b4:	ldr	r3, [r3, #4]
   593b8:	tst	r3, #520093696	; 0x1f000000
   593bc:	beq	594f8 <lua_gethookcount@@Base+0x5e78>
   593c0:	ldr	r1, [r6]
   593c4:	mov	r0, r4
   593c8:	add	r1, r1, #8
   593cc:	bl	210f8 <luaL_where@@Base+0xff4>
   593d0:	ldr	r3, [r4, #96]	; 0x60
   593d4:	ldr	r1, [r3, #4]
   593d8:	str	r0, [sp, #20]
   593dc:	mov	r0, r4
   593e0:	bl	281cc <luaL_where@@Base+0x80c8>
   593e4:	mov	r3, r0
   593e8:	ldr	r2, [r4, #96]	; 0x60
   593ec:	uxth	r1, sl
   593f0:	str	r1, [sp, #8]
   593f4:	ldr	r1, [r2, #4]
   593f8:	cmp	r1, #0
   593fc:	beq	5940c <lua_gethookcount@@Base+0x5d8c>
   59400:	ldr	r1, [r2, #8]
   59404:	tst	r1, #520093696	; 0x1f000000
   59408:	bne	596f4 <lua_gethookcount@@Base+0x6074>
   5940c:	ldr	r7, [sp, #20]
   59410:	mov	r5, r3
   59414:	cmp	r7, #0
   59418:	uxth	r5, r5
   5941c:	blt	5967c <lua_gethookcount@@Base+0x5ffc>
   59420:	ldr	r2, [r9, #12]
   59424:	str	r3, [sp, #12]
   59428:	cmp	r2, r7
   5942c:	bcc	595fc <lua_gethookcount@@Base+0x5f7c>
   59430:	ldrh	r3, [sp, #8]
   59434:	ldr	r2, [pc, #852]	; 59790 <lua_gethookcount@@Base+0x6110>
   59438:	strh	r5, [r4, #120]	; 0x78
   5943c:	strh	r3, [r4, #122]	; 0x7a
   59440:	strh	r2, [r4, #124]	; 0x7c
   59444:	mov	r0, r4
   59448:	bl	27498 <luaL_where@@Base+0x7394>
   5944c:	ldr	r3, [sp, #12]
   59450:	strd	sl, [sp]
   59454:	add	r1, r9, #12
   59458:	add	r2, sp, #20
   5945c:	mov	r0, r4
   59460:	bl	288f0 <luaL_where@@Base+0x87ec>
   59464:	ldr	r3, [r6, #8]
   59468:	cmp	r3, #0
   5946c:	beq	59514 <lua_gethookcount@@Base+0x5e94>
   59470:	ldr	r3, [sp, #20]
   59474:	uxth	r9, r0
   59478:	sub	r7, r7, r3
   5947c:	cmp	r7, #0
   59480:	blt	59748 <lua_gethookcount@@Base+0x60c8>
   59484:	ldr	r3, [pc, #776]	; 59794 <lua_gethookcount@@Base+0x6114>
   59488:	strh	r5, [r4, #120]	; 0x78
   5948c:	strh	r3, [r4, #124]	; 0x7c
   59490:	strh	r9, [r4, #122]	; 0x7a
   59494:	mov	r0, r4
   59498:	bl	27498 <luaL_where@@Base+0x7394>
   5949c:	ldr	r3, [pc, #756]	; 59798 <lua_gethookcount@@Base+0x6118>
   594a0:	strh	fp, [r4, #122]	; 0x7a
   594a4:	strh	r3, [r4, #124]	; 0x7c
   594a8:	uxth	r5, r0
   594ac:	strh	r5, [r4, #120]	; 0x78
   594b0:	mov	r0, r4
   594b4:	bl	27498 <luaL_where@@Base+0x7394>
   594b8:	ldr	r3, [pc, #732]	; 5979c <lua_gethookcount@@Base+0x611c>
   594bc:	strh	r8, [r4, #120]	; 0x78
   594c0:	strh	r3, [r4, #124]	; 0x7c
   594c4:	strh	r9, [r4, #122]	; 0x7a
   594c8:	mov	r0, r4
   594cc:	bl	27498 <luaL_where@@Base+0x7394>
   594d0:	ldr	r3, [pc, #712]	; 597a0 <lua_gethookcount@@Base+0x6120>
   594d4:	strh	r5, [r4, #122]	; 0x7a
   594d8:	strh	r3, [r4, #124]	; 0x7c
   594dc:	ldr	r5, [r4, #96]	; 0x60
   594e0:	strh	r0, [r4, #120]	; 0x78
   594e4:	mov	r0, r4
   594e8:	bl	27498 <luaL_where@@Base+0x7394>
   594ec:	str	r0, [r5]
   594f0:	add	sp, sp, #28
   594f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   594f8:	mov	r3, #1
   594fc:	mov	r1, r3
   59500:	mov	r0, r4
   59504:	str	r3, [sp, #20]
   59508:	bl	26ccc <luaL_where@@Base+0x6bc8>
   5950c:	mov	r3, r0
   59510:	b	593e8 <lua_gethookcount@@Base+0x5d68>
   59514:	ldr	r2, [sp, #20]
   59518:	uxth	r9, r0
   5951c:	sub	r7, r7, r2
   59520:	cmp	r7, #0
   59524:	str	r3, [sp, #8]
   59528:	ble	59720 <lua_gethookcount@@Base+0x60a0>
   5952c:	ldr	r2, [pc, #608]	; 59794 <lua_gethookcount@@Base+0x6114>
   59530:	strh	r5, [r4, #120]	; 0x78
   59534:	strh	r2, [r4, #124]	; 0x7c
   59538:	strh	r9, [r4, #122]	; 0x7a
   5953c:	mov	r0, r4
   59540:	bl	27498 <luaL_where@@Base+0x7394>
   59544:	mov	r1, r7
   59548:	mov	r5, r0
   5954c:	mov	r0, r4
   59550:	bl	26ccc <luaL_where@@Base+0x6bc8>
   59554:	ldr	r2, [pc, #584]	; 597a4 <lua_gethookcount@@Base+0x6124>
   59558:	strh	r5, [r4, #120]	; 0x78
   5955c:	strh	r2, [r4, #124]	; 0x7c
   59560:	strh	r0, [r4, #122]	; 0x7a
   59564:	mov	r0, r4
   59568:	bl	27498 <luaL_where@@Base+0x7394>
   5956c:	ldr	r2, [r4, #108]	; 0x6c
   59570:	ldr	r3, [sp, #8]
   59574:	add	r2, r7, r2
   59578:	cmp	r2, #250	; 0xfa
   5957c:	bhi	59780 <lua_gethookcount@@Base+0x6100>
   59580:	ldr	fp, [pc, #544]	; 597a8 <lua_gethookcount@@Base+0x6128>
   59584:	ldr	sl, [pc, #528]	; 5979c <lua_gethookcount@@Base+0x611c>
   59588:	mov	r5, r3
   5958c:	str	r7, [r6, #4]
   59590:	mov	r1, r5
   59594:	mov	r0, r4
   59598:	bl	26ccc <luaL_where@@Base+0x6bc8>
   5959c:	strh	fp, [r4, #124]	; 0x7c
   595a0:	strh	r9, [r4, #120]	; 0x78
   595a4:	strh	r0, [r4, #122]	; 0x7a
   595a8:	mov	r0, r4
   595ac:	bl	27498 <luaL_where@@Base+0x7394>
   595b0:	strh	sl, [r4, #124]	; 0x7c
   595b4:	strh	r8, [r4, #120]	; 0x78
   595b8:	strh	r0, [r4, #122]	; 0x7a
   595bc:	mov	r0, r4
   595c0:	bl	27498 <luaL_where@@Base+0x7394>
   595c4:	ldr	r3, [pc, #480]	; 597ac <lua_gethookcount@@Base+0x612c>
   595c8:	mov	r2, #1
   595cc:	strh	r3, [r4, #124]	; 0x7c
   595d0:	strh	r2, [r4, #122]	; 0x7a
   595d4:	ldr	r6, [r4, #96]	; 0x60
   595d8:	strh	r0, [r4, #120]	; 0x78
   595dc:	mov	r0, r4
   595e0:	bl	27498 <luaL_where@@Base+0x7394>
   595e4:	str	r0, [r6, r5, lsl #2]
   595e8:	add	r5, r5, #1
   595ec:	cmp	r7, r5
   595f0:	bne	59590 <lua_gethookcount@@Base+0x5f10>
   595f4:	add	sp, sp, #28
   595f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   595fc:	ldr	r2, [pc, #428]	; 597b0 <lua_gethookcount@@Base+0x6130>
   59600:	strh	r5, [r4, #120]	; 0x78
   59604:	ldr	r5, [sp, #8]
   59608:	strh	r2, [r4, #124]	; 0x7c
   5960c:	strh	r5, [r4, #122]	; 0x7a
   59610:	mov	r0, r4
   59614:	bl	27498 <luaL_where@@Base+0x7394>
   59618:	ldr	r7, [r9, #12]
   5961c:	ldr	r3, [sp, #12]
   59620:	b	59450 <lua_gethookcount@@Base+0x5dd0>
   59624:	ldr	r1, [r6]
   59628:	mov	r0, r4
   5962c:	add	r1, r1, #8
   59630:	bl	210f8 <luaL_where@@Base+0xff4>
   59634:	ldr	r3, [r4, #96]	; 0x60
   59638:	uxth	r2, sl
   5963c:	str	r2, [sp, #8]
   59640:	ldr	r1, [r3, #4]
   59644:	str	r0, [sp, #20]
   59648:	mov	r0, r4
   5964c:	bl	281cc <luaL_where@@Base+0x80c8>
   59650:	ldr	r2, [r4, #96]	; 0x60
   59654:	ldr	r1, [r2, #8]
   59658:	tst	r1, #520093696	; 0x1f000000
   5965c:	str	r0, [sp, #12]
   59660:	bne	596f8 <lua_gethookcount@@Base+0x6078>
   59664:	mvn	r1, #0
   59668:	mov	r0, r4
   5966c:	bl	26ccc <luaL_where@@Base+0x6bc8>
   59670:	ldr	r3, [sp, #12]
   59674:	mvn	r7, #0
   59678:	uxth	r5, r0
   5967c:	mov	r2, #147	; 0x93
   59680:	strh	r2, [r4, #124]	; 0x7c
   59684:	strh	r5, [r4, #120]	; 0x78
   59688:	strh	fp, [r4, #122]	; 0x7a
   5968c:	mov	r0, r4
   59690:	str	r3, [sp, #12]
   59694:	bl	27498 <luaL_where@@Base+0x7394>
   59698:	ldrh	r3, [sp, #8]
   5969c:	strh	r5, [r4, #122]	; 0x7a
   596a0:	mov	r0, r4
   596a4:	strh	r3, [r4, #120]	; 0x78
   596a8:	ldr	r3, [pc, #248]	; 597a8 <lua_gethookcount@@Base+0x6128>
   596ac:	strh	r3, [r4, #124]	; 0x7c
   596b0:	bl	27498 <luaL_where@@Base+0x7394>
   596b4:	mov	r1, #1
   596b8:	mov	r5, r0
   596bc:	mov	r0, r4
   596c0:	bl	26ccc <luaL_where@@Base+0x6bc8>
   596c4:	ldr	r3, [pc, #220]	; 597a8 <lua_gethookcount@@Base+0x6128>
   596c8:	strh	r5, [r4, #120]	; 0x78
   596cc:	strh	r3, [r4, #124]	; 0x7c
   596d0:	strh	r0, [r4, #122]	; 0x7a
   596d4:	mov	r0, r4
   596d8:	bl	27498 <luaL_where@@Base+0x7394>
   596dc:	ldr	r2, [r9, #12]
   596e0:	ldr	r3, [sp, #12]
   596e4:	add	r7, r7, r2
   596e8:	add	r7, r7, #1
   596ec:	uxth	r5, r0
   596f0:	b	59450 <lua_gethookcount@@Base+0x5dd0>
   596f4:	str	r3, [sp, #12]
   596f8:	mov	r0, r4
   596fc:	bl	281cc <luaL_where@@Base+0x80c8>
   59700:	ldr	r1, [r6]
   59704:	add	r1, r1, #16
   59708:	mov	r5, r0
   5970c:	mov	r0, r4
   59710:	bl	210f8 <luaL_where@@Base+0xff4>
   59714:	ldr	r3, [sp, #12]
   59718:	mov	r7, r0
   5971c:	b	59414 <lua_gethookcount@@Base+0x5d94>
   59720:	ldr	r2, [pc, #140]	; 597b4 <lua_gethookcount@@Base+0x6134>
   59724:	strh	r5, [r4, #120]	; 0x78
   59728:	strh	r9, [r4, #122]	; 0x7a
   5972c:	strh	r2, [r4, #124]	; 0x7c
   59730:	mov	r0, r4
   59734:	bl	27498 <luaL_where@@Base+0x7394>
   59738:	ldr	r3, [sp, #8]
   5973c:	str	r3, [r6, #4]
   59740:	add	sp, sp, #28
   59744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   59748:	mov	r3, #147	; 0x93
   5974c:	strh	r3, [r4, #124]	; 0x7c
   59750:	strh	r5, [r4, #120]	; 0x78
   59754:	strh	r9, [r4, #122]	; 0x7a
   59758:	mov	r0, r4
   5975c:	bl	27498 <luaL_where@@Base+0x7394>
   59760:	sub	r1, r4, #288	; 0x120
   59764:	mov	r2, #4
   59768:	mov	r0, r4
   5976c:	ldr	r4, [r4, #96]	; 0x60
   59770:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   59774:	str	r0, [r4]
   59778:	add	sp, sp, #28
   5977c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   59780:	ldr	r0, [r4, #80]	; 0x50
   59784:	mov	r1, #3
   59788:	bl	130c8 <pclose@plt+0x2c>
   5978c:	andeq	r4, r0, r3, lsl r5
   59790:	muleq	r0, r3, r6
   59794:	andeq	r2, r0, r3, lsl sl
   59798:	muleq	r0, r3, r1
   5979c:	andeq	r4, r0, r5
   597a0:	andeq	r4, r0, r4, lsl #28
   597a4:	muleq	r0, r3, r8
   597a8:	andeq	r2, r0, r3, lsl r9
   597ac:	andeq	r4, r0, r0, lsl r6
   597b0:	muleq	r0, r3, r7
   597b4:	muleq	r0, r3, r2
   597b8:	push	{r4, r5, r6, r7, r8, r9, lr}
   597bc:	mov	r5, r1
   597c0:	ldr	r4, [r1, #4]
   597c4:	sub	sp, sp, #36	; 0x24
   597c8:	cmn	r4, #5
   597cc:	ldreq	r0, [r1]
   597d0:	beq	5987c <lua_gethookcount@@Base+0x61fc>
   597d4:	cmn	r4, #14
   597d8:	bls	59884 <lua_gethookcount@@Base+0x6204>
   597dc:	cmn	r4, #1
   597e0:	beq	598d0 <lua_gethookcount@@Base+0x6250>
   597e4:	cmn	r4, #2
   597e8:	beq	598e0 <lua_gethookcount@@Base+0x6260>
   597ec:	cmn	r4, #3
   597f0:	beq	598bc <lua_gethookcount@@Base+0x623c>
   597f4:	ldr	r2, [pc, #244]	; 598f0 <lua_gethookcount@@Base+0x6270>
   597f8:	mvn	r3, r4
   597fc:	mov	r6, r0
   59800:	add	r3, r2, r3, lsl #2
   59804:	add	r7, sp, #4
   59808:	ldr	r9, [r3, #-216]	; 0xffffff28
   5980c:	mov	r0, r9
   59810:	bl	12e80 <strlen@plt>
   59814:	mov	r1, r9
   59818:	mov	r8, r0
   5981c:	mov	r2, r0
   59820:	mov	r0, r7
   59824:	bl	12cb8 <memcpy@plt>
   59828:	mov	ip, #58	; 0x3a
   5982c:	mov	r1, #32
   59830:	cmn	r4, #9
   59834:	ldr	r2, [r5]
   59838:	add	r3, r0, r8
   5983c:	strb	ip, [r0, r8]
   59840:	add	ip, r3, #2
   59844:	strb	r1, [r3, #1]
   59848:	beq	59890 <lua_gethookcount@@Base+0x6210>
   5984c:	cmn	r4, #13
   59850:	addeq	r2, r2, #24
   59854:	beq	59860 <lua_gethookcount@@Base+0x61e0>
   59858:	cmn	r4, #11
   5985c:	addeq	r2, r2, #8
   59860:	mov	r1, r2
   59864:	mov	r0, ip
   59868:	bl	1b3d8 <_start@@Base+0x8028>
   5986c:	sub	r2, r0, r7
   59870:	mov	r1, r7
   59874:	mov	r0, r6
   59878:	bl	20260 <luaL_where@@Base+0x15c>
   5987c:	add	sp, sp, #36	; 0x24
   59880:	pop	{r4, r5, r6, r7, r8, r9, pc}
   59884:	bl	57bc0 <lua_gethookcount@@Base+0x4540>
   59888:	add	sp, sp, #36	; 0x24
   5988c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   59890:	ldrb	r1, [r2, #6]
   59894:	cmp	r1, #1
   59898:	bls	59860 <lua_gethookcount@@Base+0x61e0>
   5989c:	ldr	lr, [pc, #80]	; 598f4 <lua_gethookcount@@Base+0x6274>
   598a0:	ldm	lr!, {r0, r1}
   598a4:	str	r0, [r3, #2]
   598a8:	str	r1, [ip, #4]
   598ac:	add	r0, r3, #10
   598b0:	ldrb	r1, [r2, #6]
   598b4:	bl	14d4c <_start@@Base+0x199c>
   598b8:	b	5986c <lua_gethookcount@@Base+0x61ec>
   598bc:	mov	r2, #4
   598c0:	ldr	r1, [pc, #48]	; 598f8 <lua_gethookcount@@Base+0x6278>
   598c4:	bl	20260 <luaL_where@@Base+0x15c>
   598c8:	add	sp, sp, #36	; 0x24
   598cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   598d0:	mov	r2, #3
   598d4:	ldr	r1, [pc, #32]	; 598fc <lua_gethookcount@@Base+0x627c>
   598d8:	bl	20260 <luaL_where@@Base+0x15c>
   598dc:	b	5987c <lua_gethookcount@@Base+0x61fc>
   598e0:	mov	r2, #5
   598e4:	ldr	r1, [pc, #20]	; 59900 <lua_gethookcount@@Base+0x6280>
   598e8:	bl	20260 <luaL_where@@Base+0x15c>
   598ec:	b	5987c <lua_gethookcount@@Base+0x61fc>
   598f0:			; <UNDEFINED> instruction: 0x00070cb0
   598f4:	andeq	r3, r7, ip, lsr r0
   598f8:	andeq	r3, r7, r4, lsr r0
   598fc:	andeq	r2, r7, r4, ror pc
   59900:	andeq	r3, r7, ip, lsr #32
   59904:	ldr	r2, [r0, #96]	; 0x60
   59908:	push	{r4, r5, r6, r7, r8, lr}
   5990c:	ldr	r4, [r2]
   59910:	and	r6, r4, #520093696	; 0x1f000000
   59914:	cmp	r6, #67108864	; 0x4000000
   59918:	cmpne	r4, #0
   5991c:	popeq	{r4, r5, r6, r7, r8, pc}
   59920:	mov	r3, #18
   59924:	add	r2, r1, #4
   59928:	mov	r5, r0
   5992c:	mov	r7, r1
   59930:	bl	2ddb8 <luaL_where@@Base+0xdcb4>
   59934:	cmp	r0, #0
   59938:	popne	{r4, r5, r6, r7, r8, pc}
   5993c:	lsr	r3, r4, #24
   59940:	and	r3, r3, #31
   59944:	sub	r2, r3, #14
   59948:	cmp	r2, #5
   5994c:	bhi	59980 <lua_gethookcount@@Base+0x6300>
   59950:	ldr	r3, [pc, #104]	; 599c0 <lua_gethookcount@@Base+0x6340>
   59954:	sub	r6, r6, #234881024	; 0xe000000
   59958:	clz	r6, r6
   5995c:	lsr	r6, r6, #5
   59960:	strh	r4, [r5, #120]	; 0x78
   59964:	strh	r6, [r5, #122]	; 0x7a
   59968:	strh	r3, [r5, #124]	; 0x7c
   5996c:	mov	r0, r5
   59970:	ldr	r4, [r5, #96]	; 0x60
   59974:	bl	27498 <luaL_where@@Base+0x7394>
   59978:	str	r0, [r4]
   5997c:	pop	{r4, r5, r6, r7, r8, pc}
   59980:	cmp	r3, #2
   59984:	bls	59998 <lua_gethookcount@@Base+0x6318>
   59988:	mov	r1, r7
   5998c:	mov	r0, r5
   59990:	pop	{r4, r5, r6, r7, r8, lr}
   59994:	b	2e7dc <luaL_where@@Base+0xe6d8>
   59998:	ldr	r1, [r7]
   5999c:	ldr	r0, [r5, #80]	; 0x50
   599a0:	bl	597b8 <lua_gethookcount@@Base+0x6138>
   599a4:	mov	r2, #4
   599a8:	ldr	r4, [r5, #96]	; 0x60
   599ac:	mov	r1, r0
   599b0:	mov	r0, r5
   599b4:	bl	2a6f0 <luaL_where@@Base+0xa5ec>
   599b8:	str	r0, [r4]
   599bc:	pop	{r4, r5, r6, r7, r8, pc}
   599c0:	andeq	r5, r0, r4, lsl #24
   599c4:	push	{r4, r5, r6, lr}
   599c8:	ldr	r3, [r0, #20]
   599cc:	ldr	r4, [r0, #16]
   599d0:	cmp	r4, r3
   599d4:	bcs	59a50 <lua_gethookcount@@Base+0x63d0>
   599d8:	mov	r5, r0
   599dc:	ldr	r6, [r0, #8]
   599e0:	add	r3, r4, #8
   599e4:	str	r3, [r5, #20]
   599e8:	mov	r0, r6
   599ec:	mov	r2, #18
   599f0:	mov	r1, r4
   599f4:	bl	1b010 <_start@@Base+0x7c60>
   599f8:	ldr	r3, [r0, #4]
   599fc:	cmn	r3, #1
   59a00:	bne	59a40 <lua_gethookcount@@Base+0x63c0>
   59a04:	ldrd	r2, [r6, #20]
   59a08:	cmp	r2, r3
   59a0c:	bcs	59a30 <lua_gethookcount@@Base+0x63b0>
   59a10:	mov	r0, r5
   59a14:	mov	r1, r4
   59a18:	bl	597b8 <lua_gethookcount@@Base+0x6138>
   59a1c:	mvn	r2, #4
   59a20:	mov	r3, #2
   59a24:	stmdb	r4, {r0, r2}
   59a28:	mov	r0, r3
   59a2c:	pop	{r4, r5, r6, pc}
   59a30:	mov	r0, r5
   59a34:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   59a38:	ldr	r4, [r5, #16]
   59a3c:	b	59a10 <lua_gethookcount@@Base+0x6390>
   59a40:	ldrd	r0, [r0]
   59a44:	mvn	r3, #0
   59a48:	strd	r0, [r4, #-8]
   59a4c:	b	59a28 <lua_gethookcount@@Base+0x63a8>
   59a50:	bl	13100 <pclose@plt+0x64>
   59a54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   59a58:	vpush	{d8-d9}
   59a5c:	ldr	r8, [r0, #20]
   59a60:	ldr	r3, [r0, #16]
   59a64:	vldr	d8, [pc, #964]	; 59e30 <lua_gethookcount@@Base+0x67b0>
   59a68:	sub	r8, r8, r3
   59a6c:	vldr	d9, [pc, #964]	; 59e38 <lua_gethookcount@@Base+0x67b8>
   59a70:	sub	sp, sp, #28
   59a74:	mov	r6, r0
   59a78:	mov	r4, #0
   59a7c:	asr	r8, r8, #3
   59a80:	ldr	r9, [r6, #8]
   59a84:	mov	r1, #1
   59a88:	mov	r0, r6
   59a8c:	ldr	r3, [r9, #88]	; 0x58
   59a90:	str	r6, [r9, #92]	; 0x5c
   59a94:	str	r3, [r9, #80]	; 0x50
   59a98:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   59a9c:	add	r7, r9, #80	; 0x50
   59aa0:	mov	r5, #1
   59aa4:	str	r4, [sp]
   59aa8:	ldr	r3, [r0, #12]
   59aac:	add	r2, r0, #16
   59ab0:	add	r3, r2, r3
   59ab4:	strd	r2, [sp, #8]
   59ab8:	add	r0, sp, #8
   59abc:	bl	176c8 <_start@@Base+0x4318>
   59ac0:	subs	r4, r0, #0
   59ac4:	beq	59b64 <lua_gethookcount@@Base+0x64e4>
   59ac8:	cmp	r4, #2
   59acc:	beq	59ccc <lua_gethookcount@@Base+0x664c>
   59ad0:	cmp	r4, #1
   59ad4:	beq	59df4 <lua_gethookcount@@Base+0x6774>
   59ad8:	add	r5, r5, #1
   59adc:	cmp	r8, r5
   59ae0:	blt	59de4 <lua_gethookcount@@Base+0x6764>
   59ae4:	and	r3, r4, #15
   59ae8:	sub	r3, r3, #3
   59aec:	cmp	r3, #5
   59af0:	ldrls	pc, [pc, r3, lsl #2]
   59af4:	b	59ab8 <lua_gethookcount@@Base+0x6438>
   59af8:	andeq	r9, r5, r0, lsr ip
   59afc:	ldrdeq	r9, [r5], -ip
   59b00:	andeq	r9, r5, r8, lsr #25
   59b04:	andeq	r9, r5, r8, ror #24
   59b08:			; <UNDEFINED> instruction: 0x00059bbc
   59b0c:	andeq	r9, r5, r0, lsl fp
   59b10:	sub	r1, r5, #-536870911	; 0xe0000001
   59b14:	ldr	r2, [r6, #16]
   59b18:	add	r3, r2, r1, lsl #3
   59b1c:	ldr	r3, [r3, #4]
   59b20:	cmn	r3, #13
   59b24:	beq	59d0c <lua_gethookcount@@Base+0x668c>
   59b28:	cmn	r3, #4
   59b2c:	beq	59b48 <lua_gethookcount@@Base+0x64c8>
   59b30:	cmn	r3, #11
   59b34:	beq	59d3c <lua_gethookcount@@Base+0x66bc>
   59b38:	add	r3, r3, #4
   59b3c:	cmn	r3, #10
   59b40:	movls	r1, #0
   59b44:	bls	59b4c <lua_gethookcount@@Base+0x64cc>
   59b48:	ldr	r1, [r2, r1, lsl #3]
   59b4c:	mov	r0, r7
   59b50:	bl	30238 <luaL_where@@Base+0x10134>
   59b54:	add	r0, sp, #8
   59b58:	bl	176c8 <_start@@Base+0x4318>
   59b5c:	subs	r4, r0, #0
   59b60:	bne	59ac8 <lua_gethookcount@@Base+0x6448>
   59b64:	ldr	r3, [sp]
   59b68:	mov	r4, #2
   59b6c:	cmp	r3, #1
   59b70:	beq	59a80 <lua_gethookcount@@Base+0x6400>
   59b74:	ldr	r3, [r9, #88]	; 0x58
   59b78:	ldr	r2, [r9, #80]	; 0x50
   59b7c:	mov	r1, r3
   59b80:	sub	r2, r2, r3
   59b84:	mov	r0, r6
   59b88:	ldr	r4, [r6, #20]
   59b8c:	bl	20260 <luaL_where@@Base+0x15c>
   59b90:	ldr	r3, [r6, #8]
   59b94:	mvn	r2, #4
   59b98:	str	r2, [r4, #-4]
   59b9c:	ldrd	r2, [r3, #20]
   59ba0:	cmp	r2, r3
   59ba4:	str	r0, [r4, #-8]
   59ba8:	bcs	59e14 <lua_gethookcount@@Base+0x6794>
   59bac:	mov	r0, #1
   59bb0:	add	sp, sp, #28
   59bb4:	vpop	{d8-d9}
   59bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   59bbc:	mov	r1, r5
   59bc0:	mov	r0, r6
   59bc4:	bl	3638c <luaL_typerror@@Base+0x20>
   59bc8:	mov	r1, r4
   59bcc:	mov	r2, r0
   59bd0:	mov	r0, r7
   59bd4:	bl	30408 <luaL_where@@Base+0x10304>
   59bd8:	b	59ab8 <lua_gethookcount@@Base+0x6438>
   59bdc:	sub	r2, r5, #-536870911	; 0xe0000001
   59be0:	ldr	r3, [r6, #16]
   59be4:	add	r1, r3, r2, lsl #3
   59be8:	ldr	r1, [r1, #4]
   59bec:	cmn	r1, #14
   59bf0:	beq	59d18 <lua_gethookcount@@Base+0x6698>
   59bf4:	mov	r1, r5
   59bf8:	mov	r0, r6
   59bfc:	bl	366f4 <luaL_typerror@@Base+0x388>
   59c00:	vcmpe.f64	d0, d8
   59c04:	vmrs	APSR_nzcv, fpscr
   59c08:	vsubge.f64	d7, d0, d9
   59c0c:	vmovlt	r0, r1, d0
   59c10:	vmovge	r0, r1, d7
   59c14:	bl	6e650 <luaL_openlibs@@Base+0x4e90>
   59c18:	mov	r2, r0
   59c1c:	mov	r3, r1
   59c20:	mov	r0, r7
   59c24:	mov	r1, r4
   59c28:	bl	30574 <luaL_where@@Base+0x10470>
   59c2c:	b	59ab8 <lua_gethookcount@@Base+0x6438>
   59c30:	sub	r2, r5, #-536870911	; 0xe0000001
   59c34:	ldr	r3, [r6, #16]
   59c38:	add	r1, r3, r2, lsl #3
   59c3c:	ldr	r1, [r1, #4]
   59c40:	cmn	r1, #14
   59c44:	bne	59ce0 <lua_gethookcount@@Base+0x6660>
   59c48:	cmp	r4, #3
   59c4c:	ldr	r2, [r3, r2, lsl #3]
   59c50:	beq	59d2c <lua_gethookcount@@Base+0x66ac>
   59c54:	mov	r1, r4
   59c58:	asr	r3, r2, #31
   59c5c:	mov	r0, r7
   59c60:	bl	30574 <luaL_where@@Base+0x10470>
   59c64:	b	59ab8 <lua_gethookcount@@Base+0x6438>
   59c68:	sub	r2, r5, #-536870911	; 0xe0000001
   59c6c:	ldr	sl, [r6, #16]
   59c70:	lsl	r3, r2, #3
   59c74:	add	fp, sl, r3
   59c78:	ldr	r1, [fp, #4]
   59c7c:	cmn	r1, #5
   59c80:	bne	59d48 <lua_gethookcount@@Base+0x66c8>
   59c84:	ldr	r2, [sl, r2, lsl #3]
   59c88:	cmp	r2, #0
   59c8c:	beq	59d20 <lua_gethookcount@@Base+0x66a0>
   59c90:	tst	r4, #16
   59c94:	beq	59cfc <lua_gethookcount@@Base+0x667c>
   59c98:	mov	r1, r2
   59c9c:	mov	r0, r7
   59ca0:	bl	3027c <luaL_where@@Base+0x10178>
   59ca4:	b	59ab8 <lua_gethookcount@@Base+0x6438>
   59ca8:	mov	r1, r5
   59cac:	mov	r0, r6
   59cb0:	bl	366f4 <luaL_typerror@@Base+0x388>
   59cb4:	mov	r1, r4
   59cb8:	mov	r2, #0
   59cbc:	mov	r0, r7
   59cc0:	bl	30bd4 <luaL_where@@Base+0x10ad0>
   59cc4:	str	r0, [r9, #80]	; 0x50
   59cc8:	b	59ab8 <lua_gethookcount@@Base+0x6438>
   59ccc:	ldr	r2, [sp, #20]
   59cd0:	ldr	r1, [sp, #16]
   59cd4:	mov	r0, r7
   59cd8:	bl	2ffac <luaL_where@@Base+0xfea8>
   59cdc:	b	59ab8 <lua_gethookcount@@Base+0x6438>
   59ce0:	mov	r1, r5
   59ce4:	mov	r0, r6
   59ce8:	bl	366f4 <luaL_typerror@@Base+0x388>
   59cec:	mov	r1, r4
   59cf0:	mov	r0, r7
   59cf4:	bl	30920 <luaL_where@@Base+0x1081c>
   59cf8:	b	59ab8 <lua_gethookcount@@Base+0x6438>
   59cfc:	mov	r1, r4
   59d00:	mov	r0, r7
   59d04:	bl	304ac <luaL_where@@Base+0x103a8>
   59d08:	b	59ab8 <lua_gethookcount@@Base+0x6438>
   59d0c:	ldr	r1, [r2, r1, lsl #3]
   59d10:	add	r1, r1, #24
   59d14:	b	59b4c <lua_gethookcount@@Base+0x64cc>
   59d18:	ldr	r2, [r3, r2, lsl #3]
   59d1c:	b	59c54 <lua_gethookcount@@Base+0x65d4>
   59d20:	mov	r3, #1
   59d24:	str	r3, [sp]
   59d28:	b	59ab8 <lua_gethookcount@@Base+0x6438>
   59d2c:	mov	r1, r2
   59d30:	mov	r0, r7
   59d34:	bl	301f4 <luaL_where@@Base+0x100f0>
   59d38:	b	59ab8 <lua_gethookcount@@Base+0x6438>
   59d3c:	ldr	r1, [r2, r1, lsl #3]
   59d40:	add	r1, r1, #8
   59d44:	b	59b4c <lua_gethookcount@@Base+0x64cc>
   59d48:	str	r3, [sp, #4]
   59d4c:	ldr	r3, [sp]
   59d50:	cmp	r3, #2
   59d54:	beq	59d78 <lua_gethookcount@@Base+0x66f8>
   59d58:	mov	r2, #18
   59d5c:	mov	r1, fp
   59d60:	ldr	r0, [r6, #8]
   59d64:	bl	1b010 <_start@@Base+0x7c60>
   59d68:	ldr	r3, [sp, #4]
   59d6c:	ldr	r2, [r0, #4]
   59d70:	cmn	r2, #1
   59d74:	bne	59d8c <lua_gethookcount@@Base+0x670c>
   59d78:	mov	r1, fp
   59d7c:	mov	r0, r6
   59d80:	bl	597b8 <lua_gethookcount@@Base+0x6138>
   59d84:	mov	r2, r0
   59d88:	b	59c88 <lua_gethookcount@@Base+0x6608>
   59d8c:	ldr	r2, [r6, #20]
   59d90:	ldrd	r0, [r0]
   59d94:	mov	ip, r2
   59d98:	add	r2, r2, #16
   59d9c:	strd	r0, [r2, #-16]
   59da0:	ldrd	r0, [sl, r3]
   59da4:	str	r2, [r6, #20]
   59da8:	mov	r2, #2
   59dac:	strd	r0, [ip, #8]!
   59db0:	mov	r0, r6
   59db4:	mov	r1, ip
   59db8:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   59dbc:	ldr	r2, [r6, #20]
   59dc0:	mov	r3, #1
   59dc4:	ldr	r1, [r6, #16]
   59dc8:	ldrd	sl, [r2, #-8]
   59dcc:	str	r3, [sp]
   59dd0:	ldr	r3, [sp, #4]
   59dd4:	sub	r0, r2, #8
   59dd8:	str	r0, [r6, #20]
   59ddc:	strd	sl, [r1, r3]
   59de0:	b	59ab8 <lua_gethookcount@@Base+0x6438>
   59de4:	mov	r1, r5
   59de8:	mov	r0, r6
   59dec:	ldr	r2, [pc, #76]	; 59e40 <lua_gethookcount@@Base+0x67c0>
   59df0:	bl	36104 <lua_error@@Base+0x764>
   59df4:	ldr	r2, [sp, #20]
   59df8:	ldr	r1, [sp, #16]
   59dfc:	mov	r0, r6
   59e00:	bl	20260 <luaL_where@@Base+0x15c>
   59e04:	mov	r1, #1888	; 0x760
   59e08:	add	r2, r0, #16
   59e0c:	mov	r0, r6
   59e10:	bl	4a618 <luaL_error@@Base+0x452c>
   59e14:	mov	r0, r6
   59e18:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   59e1c:	mov	r0, #1
   59e20:	add	sp, sp, #28
   59e24:	vpop	{d8-d9}
   59e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   59e2c:	nop			; (mov r0, r0)
   59e30:	andeq	r0, r0, r0
   59e34:	mvnmi	r0, #0
   59e38:	andeq	r0, r0, r0
   59e3c:	mvnsmi	r0, #0
   59e40:	andeq	r2, r7, r0, lsl sp

00059e44 <lua_status@@Base>:
   59e44:	ldrb	r0, [r0, #7]
   59e48:	bx	lr

00059e4c <lua_checkstack@@Base>:
   59e4c:	cmp	r1, #8000	; 0x1f40
   59e50:	bgt	59e58 <lua_checkstack@@Base+0xc>
   59e54:	b	52ec4 <lua_getinfo@@Base+0x810>
   59e58:	mov	r0, #0
   59e5c:	bx	lr

00059e60 <luaL_checkstack@@Base>:
   59e60:	cmp	r1, #8000	; 0x1f40
   59e64:	push	{r4, r5, r6, lr}
   59e68:	mov	r5, r2
   59e6c:	mov	r4, r0
   59e70:	bgt	59e80 <luaL_checkstack@@Base+0x20>
   59e74:	bl	52ec4 <lua_getinfo@@Base+0x810>
   59e78:	cmp	r0, #0
   59e7c:	popne	{r4, r5, r6, pc}
   59e80:	mov	r2, r5
   59e84:	mov	r0, r4
   59e88:	mov	r1, #119	; 0x77
   59e8c:	bl	4a618 <luaL_error@@Base+0x452c>

00059e90 <lua_xmove@@Base>:
   59e90:	cmp	r0, r1
   59e94:	bxeq	lr
   59e98:	push	{r4, r5, r6, r7, r8, lr}
   59e9c:	mov	r6, r2
   59ea0:	ldr	r3, [r1, #20]
   59ea4:	ldr	r2, [r1, #24]
   59ea8:	lsl	r5, r6, #3
   59eac:	sub	r2, r2, r3
   59eb0:	cmp	r2, r5
   59eb4:	mov	r4, r1
   59eb8:	mov	r7, r0
   59ebc:	ble	59efc <lua_xmove@@Base+0x6c>
   59ec0:	add	r3, r3, r5
   59ec4:	subs	ip, r6, #1
   59ec8:	ldr	r2, [r7, #20]
   59ecc:	str	r3, [r4, #20]
   59ed0:	bmi	59ef4 <lua_xmove@@Base+0x64>
   59ed4:	mov	r1, r2
   59ed8:	ldrd	r4, [r1, #-8]!
   59edc:	sub	ip, ip, #1
   59ee0:	cmn	ip, #1
   59ee4:	strd	r4, [r3, #-8]!
   59ee8:	bne	59ed8 <lua_xmove@@Base+0x48>
   59eec:	rsb	r6, r6, r6, lsl #29
   59ef0:	add	r2, r2, r6, lsl #3
   59ef4:	str	r2, [r7, #20]
   59ef8:	pop	{r4, r5, r6, r7, r8, pc}
   59efc:	mov	r1, r6
   59f00:	mov	r0, r4
   59f04:	bl	1fd08 <lua_getstack@@Base+0x50>
   59f08:	ldr	r3, [r4, #20]
   59f0c:	b	59ec0 <lua_xmove@@Base+0x30>

00059f10 <lua_version@@Base>:
   59f10:	ldr	r0, [pc]	; 59f18 <lua_version@@Base+0x8>
   59f14:	bx	lr
   59f18:	andeq	r0, r7, r0, ror ip

00059f1c <lua_gettop@@Base>:
   59f1c:	ldr	r3, [r0, #20]
   59f20:	ldr	r0, [r0, #16]
   59f24:	sub	r0, r3, r0
   59f28:	asr	r0, r0, #3
   59f2c:	bx	lr

00059f30 <lua_settop@@Base>:
   59f30:	cmp	r1, #0
   59f34:	push	{r4, r5, r6, lr}
   59f38:	mov	r4, r0
   59f3c:	ldr	r3, [r0, #20]
   59f40:	blt	59f88 <lua_settop@@Base+0x58>
   59f44:	ldr	r2, [r0, #16]
   59f48:	lsl	r5, r1, #3
   59f4c:	add	ip, r2, r5
   59f50:	cmp	ip, r3
   59f54:	bls	59f80 <lua_settop@@Base+0x50>
   59f58:	ldr	lr, [r0, #24]
   59f5c:	cmp	ip, lr
   59f60:	bcs	59f98 <lua_settop@@Base+0x68>
   59f64:	mvn	r2, #0
   59f68:	add	r3, r3, #8
   59f6c:	cmp	r3, ip
   59f70:	str	r2, [r3, #-4]
   59f74:	bcc	59f68 <lua_settop@@Base+0x38>
   59f78:	str	r3, [r4, #20]
   59f7c:	pop	{r4, r5, r6, pc}
   59f80:	str	ip, [r0, #20]
   59f84:	pop	{r4, r5, r6, pc}
   59f88:	add	r1, r1, #1
   59f8c:	add	r3, r3, r1, lsl #3
   59f90:	str	r3, [r4, #20]
   59f94:	pop	{r4, r5, r6, pc}
   59f98:	sub	r2, r3, r2
   59f9c:	sub	r1, r1, r2, asr #3
   59fa0:	bl	1fd08 <lua_getstack@@Base+0x50>
   59fa4:	ldr	ip, [r4, #16]
   59fa8:	ldr	r3, [r4, #20]
   59fac:	add	ip, ip, r5
   59fb0:	b	59f64 <lua_settop@@Base+0x34>

00059fb4 <lua_remove@@Base>:
   59fb4:	cmp	r1, #0
   59fb8:	ldr	r2, [r0, #20]
   59fbc:	addle	r1, r2, r1, lsl #3
   59fc0:	ble	59fdc <lua_remove@@Base+0x28>
   59fc4:	sub	r3, r1, #-536870911	; 0xe0000001
   59fc8:	ldr	r1, [r0, #16]
   59fcc:	add	r1, r1, r3, lsl #3
   59fd0:	cmp	r2, r1
   59fd4:	ldrls	r1, [r0, #8]
   59fd8:	addls	r1, r1, #144	; 0x90
   59fdc:	add	r3, r1, #8
   59fe0:	cmp	r2, r3
   59fe4:	bls	5a010 <lua_remove@@Base+0x5c>
   59fe8:	sub	r1, r1, #8
   59fec:	push	{r4, r5}
   59ff0:	ldrd	r4, [r3], #8
   59ff4:	cmp	r2, r3
   59ff8:	strd	r4, [r1, #8]!
   59ffc:	bhi	59ff0 <lua_remove@@Base+0x3c>
   5a000:	sub	r2, r2, #8
   5a004:	str	r2, [r0, #20]
   5a008:	pop	{r4, r5}
   5a00c:	bx	lr
   5a010:	sub	r2, r2, #8
   5a014:	str	r2, [r0, #20]
   5a018:	bx	lr

0005a01c <lua_insert@@Base>:
   5a01c:	cmp	r1, #0
   5a020:	ldr	ip, [r0, #20]
   5a024:	ble	5a06c <lua_insert@@Base+0x50>
   5a028:	sub	r1, r1, #-536870911	; 0xe0000001
   5a02c:	ldr	r2, [r0, #16]
   5a030:	add	r2, r2, r1, lsl #3
   5a034:	cmp	ip, r2
   5a038:	bhi	5a04c <lua_insert@@Base+0x30>
   5a03c:	ldr	r2, [r0, #8]
   5a040:	add	r2, r2, #144	; 0x90
   5a044:	cmp	ip, r2
   5a048:	bls	5a060 <lua_insert@@Base+0x44>
   5a04c:	mov	r3, ip
   5a050:	ldrd	r0, [r3, #-8]
   5a054:	strd	r0, [r3], #-8
   5a058:	cmp	r2, r3
   5a05c:	bcc	5a050 <lua_insert@@Base+0x34>
   5a060:	ldrd	r0, [ip]
   5a064:	strd	r0, [r2]
   5a068:	bx	lr
   5a06c:	add	r2, ip, r1, lsl #3
   5a070:	b	5a044 <lua_insert@@Base+0x28>

0005a074 <lua_replace@@Base>:
   5a074:	ldr	r3, [pc, #64]	; 5a0bc <lua_replace@@Base+0x48>
   5a078:	ldr	r2, [r0, #20]
   5a07c:	cmp	r1, r3
   5a080:	push	{r4, lr}
   5a084:	sub	r3, r2, #8
   5a088:	mov	r4, r0
   5a08c:	beq	5a0ac <lua_replace@@Base+0x38>
   5a090:	mov	r2, r1
   5a094:	mov	r1, r3
   5a098:	bl	456b4 <luaL_typerror@@Base+0xf348>
   5a09c:	ldr	r3, [r4, #20]
   5a0a0:	sub	r3, r3, #8
   5a0a4:	str	r3, [r4, #20]
   5a0a8:	pop	{r4, pc}
   5a0ac:	ldr	r2, [r2, #-8]
   5a0b0:	str	r2, [r0, #36]	; 0x24
   5a0b4:	str	r3, [r4, #20]
   5a0b8:	pop	{r4, pc}
   5a0bc:			; <UNDEFINED> instruction: 0xffffd8ee

0005a0c0 <lua_copy@@Base>:
   5a0c0:	push	{r4, r5, r6, lr}
   5a0c4:	mov	r4, r2
   5a0c8:	mov	r5, r0
   5a0cc:	bl	1b44c <_start@@Base+0x809c>
   5a0d0:	ldr	r3, [pc, #36]	; 5a0fc <lua_copy@@Base+0x3c>
   5a0d4:	cmp	r4, r3
   5a0d8:	beq	5a0f0 <lua_copy@@Base+0x30>
   5a0dc:	mov	r2, r4
   5a0e0:	mov	r1, r0
   5a0e4:	mov	r0, r5
   5a0e8:	pop	{r4, r5, r6, lr}
   5a0ec:	b	456b4 <luaL_typerror@@Base+0xf348>
   5a0f0:	ldr	r3, [r0]
   5a0f4:	str	r3, [r5, #36]	; 0x24
   5a0f8:	pop	{r4, r5, r6, pc}
   5a0fc:			; <UNDEFINED> instruction: 0xffffd8ee

0005a100 <lua_pushvalue@@Base>:
   5a100:	push	{r4, r5, r6, lr}
   5a104:	mov	r4, r0
   5a108:	ldr	r5, [r0, #20]
   5a10c:	bl	1b44c <_start@@Base+0x809c>
   5a110:	ldr	r3, [r4, #20]
   5a114:	ldr	r2, [r4, #24]
   5a118:	add	r3, r3, #8
   5a11c:	cmp	r3, r2
   5a120:	ldrd	r0, [r0]
   5a124:	strd	r0, [r5]
   5a128:	str	r3, [r4, #20]
   5a12c:	popcc	{r4, r5, r6, pc}
   5a130:	mov	r0, r4
   5a134:	mov	r1, #1
   5a138:	pop	{r4, r5, r6, lr}
   5a13c:	b	1fd08 <lua_getstack@@Base+0x50>
   5a140:	ldr	r3, [r0, #16]
   5a144:	ldr	r1, [r0, #20]
   5a148:	add	r2, r3, #8
   5a14c:	cmp	r1, r2
   5a150:	push	{r4, r5, r6, lr}
   5a154:	mov	r4, r0
   5a158:	bls	5a168 <lua_pushvalue@@Base+0x68>
   5a15c:	ldr	r3, [r3, #12]
   5a160:	cmn	r3, #1
   5a164:	bne	5a198 <lua_pushvalue@@Base+0x98>
   5a168:	mov	r1, #1
   5a16c:	mov	r0, r4
   5a170:	bl	59f30 <lua_settop@@Base>
   5a174:	mov	r1, #1
   5a178:	mov	r0, r4
   5a17c:	bl	1b44c <_start@@Base+0x809c>
   5a180:	ldr	r3, [r0, #4]
   5a184:	cmn	r3, #5
   5a188:	cmnne	r3, #14
   5a18c:	bls	5a1e8 <lua_pushvalue@@Base+0xe8>
   5a190:	mov	r0, r4
   5a194:	bl	35808 <luaL_where@@Base+0x15704>
   5a198:	mov	r1, #2
   5a19c:	bl	3638c <luaL_typerror@@Base+0x20>
   5a1a0:	mov	r1, #1
   5a1a4:	mov	r5, r0
   5a1a8:	mov	r0, r4
   5a1ac:	bl	59f30 <lua_settop@@Base>
   5a1b0:	mov	r1, #1
   5a1b4:	mov	r0, r4
   5a1b8:	bl	1b44c <_start@@Base+0x809c>
   5a1bc:	ldr	r3, [r0, #4]
   5a1c0:	cmn	r3, #5
   5a1c4:	cmnne	r3, #14
   5a1c8:	movls	r3, #1
   5a1cc:	movhi	r3, #0
   5a1d0:	cmp	r5, #0
   5a1d4:	movle	r3, #0
   5a1d8:	andgt	r3, r3, #1
   5a1dc:	cmp	r3, #0
   5a1e0:	beq	5a190 <lua_pushvalue@@Base+0x90>
   5a1e4:	b	5a1ec <lua_pushvalue@@Base+0xec>
   5a1e8:	mov	r5, #1
   5a1ec:	mov	r1, r5
   5a1f0:	mov	r0, r4
   5a1f4:	bl	20104 <luaL_where@@Base>
   5a1f8:	mov	r0, r4
   5a1fc:	mov	r1, #1
   5a200:	bl	5a100 <lua_pushvalue@@Base>
   5a204:	mov	r1, #2
   5a208:	mov	r0, r4
   5a20c:	bl	45d54 <luaL_typerror@@Base+0xf9e8>
   5a210:	b	5a190 <lua_pushvalue@@Base+0x90>

0005a214 <lua_type@@Base>:
   5a214:	push	{r4, lr}
   5a218:	mov	r4, r0
   5a21c:	bl	1b44c <_start@@Base+0x809c>
   5a220:	ldr	r3, [r0, #4]
   5a224:	cmn	r3, #14
   5a228:	bls	5a264 <lua_type@@Base+0x50>
   5a22c:	ldr	r2, [r4, #8]
   5a230:	add	r2, r2, #144	; 0x90
   5a234:	cmp	r0, r2
   5a238:	beq	5a26c <lua_type@@Base+0x58>
   5a23c:	mvn	r3, r3
   5a240:	ldr	r1, [pc, #44]	; 5a274 <lua_type@@Base+0x60>
   5a244:	and	r2, r3, #7
   5a248:	cmp	r3, #7
   5a24c:	ldr	r0, [pc, #36]	; 5a278 <lua_type@@Base+0x64>
   5a250:	lsl	r3, r2, #2
   5a254:	movhi	r0, r1
   5a258:	lsr	r0, r0, r3
   5a25c:	and	r0, r0, #15
   5a260:	pop	{r4, pc}
   5a264:	mov	r0, #3
   5a268:	pop	{r4, pc}
   5a26c:	mvn	r0, #0
   5a270:	pop	{r4, pc}
   5a274:	andeq	r5, r7, r6, lsl #20
   5a278:	stmdals	r4, {r4, r8, sp}

0005a27c <luaL_checktype@@Base>:
   5a27c:	push	{r4, r5, r6, lr}
   5a280:	mov	r4, r2
   5a284:	mov	r5, r0
   5a288:	mov	r6, r1
   5a28c:	bl	5a214 <lua_type@@Base>
   5a290:	cmp	r0, r4
   5a294:	popeq	{r4, r5, r6, pc}
   5a298:	mov	r2, r4
   5a29c:	mov	r1, r6
   5a2a0:	mov	r0, r5
   5a2a4:	bl	36374 <luaL_typerror@@Base+0x8>

0005a2a8 <luaL_checkany@@Base>:
   5a2a8:	push	{r4, r5, r6, lr}
   5a2ac:	mov	r4, r0
   5a2b0:	mov	r5, r1
   5a2b4:	bl	1b44c <_start@@Base+0x809c>
   5a2b8:	ldr	r3, [r4, #8]
   5a2bc:	add	r3, r3, #144	; 0x90
   5a2c0:	cmp	r0, r3
   5a2c4:	popne	{r4, r5, r6, pc}
   5a2c8:	mov	r1, r5
   5a2cc:	mov	r0, r4
   5a2d0:	ldr	r2, [pc]	; 5a2d8 <luaL_checkany@@Base+0x30>
   5a2d4:	bl	361d0 <luaL_argerror@@Base+0x8>
   5a2d8:	andeq	r0, r0, r7, lsr #4

0005a2dc <lua_typename@@Base>:
   5a2dc:	ldr	r3, [pc, #8]	; 5a2ec <lua_typename@@Base+0x10>
   5a2e0:	add	r1, r3, r1, lsl #2
   5a2e4:	ldr	r0, [r1, #-156]	; 0xffffff64
   5a2e8:	bx	lr
   5a2ec:			; <UNDEFINED> instruction: 0x00070cb0

0005a2f0 <lua_iscfunction@@Base>:
   5a2f0:	push	{r4, lr}
   5a2f4:	bl	1b44c <_start@@Base+0x809c>
   5a2f8:	ldr	r3, [r0, #4]
   5a2fc:	cmn	r3, #9
   5a300:	beq	5a30c <lua_iscfunction@@Base+0x1c>
   5a304:	mov	r0, #0
   5a308:	pop	{r4, pc}
   5a30c:	ldr	r3, [r0]
   5a310:	ldrb	r0, [r3, #6]
   5a314:	adds	r0, r0, #0
   5a318:	movne	r0, #1
   5a31c:	pop	{r4, pc}

0005a320 <lua_isnumber@@Base>:
   5a320:	push	{lr}		; (str lr, [sp, #-4]!)
   5a324:	sub	sp, sp, #12
   5a328:	bl	1b44c <_start@@Base+0x809c>
   5a32c:	ldr	r3, [r0, #4]
   5a330:	cmn	r3, #14
   5a334:	movls	r0, #1
   5a338:	bls	5a348 <lua_isnumber@@Base+0x28>
   5a33c:	cmn	r3, #5
   5a340:	movne	r0, #0
   5a344:	beq	5a350 <lua_isnumber@@Base+0x30>
   5a348:	add	sp, sp, #12
   5a34c:	pop	{pc}		; (ldr pc, [sp], #4)
   5a350:	ldr	r0, [r0]
   5a354:	mov	r2, #1
   5a358:	mov	r1, sp
   5a35c:	add	r0, r0, #16
   5a360:	bl	189f0 <_start@@Base+0x5640>
   5a364:	adds	r0, r0, #0
   5a368:	movne	r0, #1
   5a36c:	add	sp, sp, #12
   5a370:	pop	{pc}		; (ldr pc, [sp], #4)

0005a374 <lua_isstring@@Base>:
   5a374:	push	{r4, lr}
   5a378:	bl	1b44c <_start@@Base+0x809c>
   5a37c:	ldr	r0, [r0, #4]
   5a380:	cmn	r0, #5
   5a384:	cmnne	r0, #14
   5a388:	movls	r0, #1
   5a38c:	movhi	r0, #0
   5a390:	pop	{r4, pc}

0005a394 <lua_isuserdata@@Base>:
   5a394:	push	{r4, lr}
   5a398:	bl	1b44c <_start@@Base+0x809c>
   5a39c:	ldr	r0, [r0, #4]
   5a3a0:	cmn	r0, #13
   5a3a4:	cmnne	r0, #4
   5a3a8:	moveq	r0, #1
   5a3ac:	movne	r0, #0
   5a3b0:	pop	{r4, pc}

0005a3b4 <lua_rawequal@@Base>:
   5a3b4:	push	{r4, r5, r6, lr}
   5a3b8:	mov	r6, r2
   5a3bc:	mov	r5, r0
   5a3c0:	bl	1b44c <_start@@Base+0x809c>
   5a3c4:	mov	r1, r6
   5a3c8:	mov	r4, r0
   5a3cc:	mov	r0, r5
   5a3d0:	bl	1b44c <_start@@Base+0x809c>
   5a3d4:	ldr	r3, [r5, #8]
   5a3d8:	add	r3, r3, #144	; 0x90
   5a3dc:	cmp	r3, r4
   5a3e0:	cmpne	r3, r0
   5a3e4:	movne	r3, #1
   5a3e8:	moveq	r3, #0
   5a3ec:	beq	5a400 <lua_rawequal@@Base+0x4c>
   5a3f0:	mov	r1, r0
   5a3f4:	mov	r0, r4
   5a3f8:	pop	{r4, r5, r6, lr}
   5a3fc:	b	17394 <_start@@Base+0x3fe4>
   5a400:	mov	r0, r3
   5a404:	pop	{r4, r5, r6, pc}

0005a408 <lua_equal@@Base>:
   5a408:	push	{r4, r5, r6, lr}
   5a40c:	mov	r6, r2
   5a410:	mov	r5, r0
   5a414:	bl	1b44c <_start@@Base+0x809c>
   5a418:	mov	r1, r6
   5a41c:	mov	r4, r0
   5a420:	mov	r0, r5
   5a424:	bl	1b44c <_start@@Base+0x809c>
   5a428:	ldr	r3, [r4, #4]
   5a42c:	cmn	r3, #14
   5a430:	beq	5a49c <lua_equal@@Base+0x94>
   5a434:	ldr	r2, [r0, #4]
   5a438:	bls	5a46c <lua_equal@@Base+0x64>
   5a43c:	cmp	r3, r2
   5a440:	bne	5a464 <lua_equal@@Base+0x5c>
   5a444:	cmn	r3, #4
   5a448:	bhi	5a4b8 <lua_equal@@Base+0xb0>
   5a44c:	ldr	r1, [r4]
   5a450:	ldr	r2, [r0]
   5a454:	cmp	r1, r2
   5a458:	beq	5a538 <lua_equal@@Base+0x130>
   5a45c:	cmn	r3, #12
   5a460:	bls	5a4ec <lua_equal@@Base+0xe4>
   5a464:	mov	r0, #0
   5a468:	pop	{r4, r5, r6, pc}
   5a46c:	cmn	r2, #14
   5a470:	bhi	5a464 <lua_equal@@Base+0x5c>
   5a474:	vldreq	s12, [r0]
   5a478:	vldr	d7, [r4]
   5a47c:	vcvteq.f64.s32	d6, s12
   5a480:	beq	5a488 <lua_equal@@Base+0x80>
   5a484:	vldr	d6, [r0]
   5a488:	vcmp.f64	d6, d7
   5a48c:	vmrs	APSR_nzcv, fpscr
   5a490:	moveq	r0, #1
   5a494:	movne	r0, #0
   5a498:	pop	{r4, r5, r6, pc}
   5a49c:	ldr	r3, [r0, #4]
   5a4a0:	cmn	r3, #14
   5a4a4:	beq	5a4d4 <lua_equal@@Base+0xcc>
   5a4a8:	bhi	5a464 <lua_equal@@Base+0x5c>
   5a4ac:	vldr	s14, [r4]
   5a4b0:	vcvt.f64.s32	d7, s14
   5a4b4:	b	5a484 <lua_equal@@Base+0x7c>
   5a4b8:	ldr	r1, [r5, #8]
   5a4bc:	add	r1, r1, #144	; 0x90
   5a4c0:	cmp	r1, r0
   5a4c4:	cmpne	r1, r4
   5a4c8:	movne	r0, #1
   5a4cc:	moveq	r0, #0
   5a4d0:	pop	{r4, r5, r6, pc}
   5a4d4:	ldr	r1, [r4]
   5a4d8:	ldr	r0, [r0]
   5a4dc:	sub	r0, r1, r0
   5a4e0:	clz	r0, r0
   5a4e4:	lsr	r0, r0, #5
   5a4e8:	pop	{r4, r5, r6, pc}
   5a4ec:	mov	r3, #0
   5a4f0:	mov	r0, r5
   5a4f4:	bl	1fa64 <lua_atpanic@@Base+0x894>
   5a4f8:	cmp	r0, #1
   5a4fc:	popls	{r4, r5, r6, pc}
   5a500:	add	r3, r0, #16
   5a504:	str	r3, [r5, #20]
   5a508:	mov	r1, r0
   5a50c:	mov	r2, #2
   5a510:	mov	r0, r5
   5a514:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   5a518:	ldr	r3, [r5, #20]
   5a51c:	sub	r2, r3, #16
   5a520:	ldr	r0, [r3, #-4]
   5a524:	str	r2, [r5, #20]
   5a528:	cmn	r0, #3
   5a52c:	movhi	r0, #0
   5a530:	movls	r0, #1
   5a534:	pop	{r4, r5, r6, pc}
   5a538:	mov	r0, #1
   5a53c:	pop	{r4, r5, r6, pc}

0005a540 <lua_lessthan@@Base>:
   5a540:	push	{r4, r5, r6, lr}
   5a544:	mov	r6, r2
   5a548:	mov	r4, r0
   5a54c:	bl	1b44c <_start@@Base+0x809c>
   5a550:	mov	r1, r6
   5a554:	mov	r5, r0
   5a558:	mov	r0, r4
   5a55c:	bl	1b44c <_start@@Base+0x809c>
   5a560:	ldr	r3, [r4, #8]
   5a564:	add	r3, r3, #144	; 0x90
   5a568:	cmp	r3, r5
   5a56c:	cmpne	r3, r0
   5a570:	beq	5a61c <lua_lessthan@@Base+0xdc>
   5a574:	ldr	r3, [r5, #4]
   5a578:	cmn	r3, #14
   5a57c:	beq	5a5b8 <lua_lessthan@@Base+0x78>
   5a580:	bhi	5a5c8 <lua_lessthan@@Base+0x88>
   5a584:	ldr	r3, [r0, #4]
   5a588:	cmn	r3, #14
   5a58c:	bhi	5a5c8 <lua_lessthan@@Base+0x88>
   5a590:	vldreq	s12, [r0]
   5a594:	vldr	d7, [r5]
   5a598:	vcvteq.f64.s32	d6, s12
   5a59c:	beq	5a5a4 <lua_lessthan@@Base+0x64>
   5a5a0:	vldr	d6, [r0]
   5a5a4:	vcmpe.f64	d6, d7
   5a5a8:	vmrs	APSR_nzcv, fpscr
   5a5ac:	movgt	r0, #1
   5a5b0:	movle	r0, #0
   5a5b4:	pop	{r4, r5, r6, pc}
   5a5b8:	ldr	r3, [r0, #4]
   5a5bc:	cmn	r3, #14
   5a5c0:	beq	5a624 <lua_lessthan@@Base+0xe4>
   5a5c4:	bls	5a63c <lua_lessthan@@Base+0xfc>
   5a5c8:	mov	r2, r0
   5a5cc:	mov	r1, r5
   5a5d0:	mov	r3, #0
   5a5d4:	mov	r0, r4
   5a5d8:	bl	45eb4 <luaL_typerror@@Base+0xfb48>
   5a5dc:	cmp	r0, #1
   5a5e0:	popls	{r4, r5, r6, pc}
   5a5e4:	add	r3, r0, #16
   5a5e8:	str	r3, [r4, #20]
   5a5ec:	mov	r1, r0
   5a5f0:	mov	r2, #2
   5a5f4:	mov	r0, r4
   5a5f8:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   5a5fc:	ldr	r3, [r4, #20]
   5a600:	sub	r2, r3, #16
   5a604:	ldr	r0, [r3, #-4]
   5a608:	str	r2, [r4, #20]
   5a60c:	cmn	r0, #3
   5a610:	movhi	r0, #0
   5a614:	movls	r0, #1
   5a618:	pop	{r4, r5, r6, pc}
   5a61c:	mov	r0, #0
   5a620:	pop	{r4, r5, r6, pc}
   5a624:	ldr	r0, [r0]
   5a628:	ldr	r1, [r5]
   5a62c:	cmp	r1, r0
   5a630:	movge	r0, #0
   5a634:	movlt	r0, #1
   5a638:	pop	{r4, r5, r6, pc}
   5a63c:	vldr	s14, [r5]
   5a640:	vcvt.f64.s32	d7, s14
   5a644:	b	5a5a0 <lua_lessthan@@Base+0x60>
   5a648:	push	{r4, r5, r6, lr}
   5a64c:	mov	r5, r1
   5a650:	mov	r1, #2
   5a654:	mov	r6, r2
   5a658:	mov	r4, r0
   5a65c:	bl	5a214 <lua_type@@Base>
   5a660:	cmp	r0, #0
   5a664:	bne	5a67c <lua_lessthan@@Base+0x13c>
   5a668:	mov	r2, r6
   5a66c:	mov	r1, r5
   5a670:	mov	r0, r4
   5a674:	pop	{r4, r5, r6, lr}
   5a678:	b	5a540 <lua_lessthan@@Base>
   5a67c:	mov	r0, r4
   5a680:	mov	r1, #2
   5a684:	bl	5a100 <lua_pushvalue@@Base>
   5a688:	sub	r1, r5, #1
   5a68c:	mov	r0, r4
   5a690:	bl	5a100 <lua_pushvalue@@Base>
   5a694:	sub	r1, r6, #2
   5a698:	mov	r0, r4
   5a69c:	bl	5a100 <lua_pushvalue@@Base>
   5a6a0:	ldr	r1, [r4, #20]
   5a6a4:	mov	r0, r4
   5a6a8:	mov	r2, #2
   5a6ac:	sub	r1, r1, #16
   5a6b0:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   5a6b4:	ldr	r3, [r4, #20]
   5a6b8:	sub	r2, r3, #8
   5a6bc:	ldr	r0, [r3, #-4]
   5a6c0:	str	r2, [r4, #20]
   5a6c4:	cmn	r0, #3
   5a6c8:	movhi	r0, #0
   5a6cc:	movls	r0, #1
   5a6d0:	pop	{r4, r5, r6, pc}

0005a6d4 <lua_tonumber@@Base>:
   5a6d4:	push	{lr}		; (str lr, [sp, #-4]!)
   5a6d8:	sub	sp, sp, #12
   5a6dc:	bl	1b44c <_start@@Base+0x809c>
   5a6e0:	ldr	r3, [r0, #4]
   5a6e4:	cmn	r3, #14
   5a6e8:	bhi	5a700 <lua_tonumber@@Base+0x2c>
   5a6ec:	vldreq	s0, [r0]
   5a6f0:	vldrne	d0, [r0]
   5a6f4:	vcvteq.f64.s32	d0, s0
   5a6f8:	add	sp, sp, #12
   5a6fc:	pop	{pc}		; (ldr pc, [sp], #4)
   5a700:	cmn	r3, #5
   5a704:	beq	5a710 <lua_tonumber@@Base+0x3c>
   5a708:	vldr	d0, [pc, #40]	; 5a738 <lua_tonumber@@Base+0x64>
   5a70c:	b	5a6f8 <lua_tonumber@@Base+0x24>
   5a710:	ldr	r0, [r0]
   5a714:	mov	r2, #2
   5a718:	add	r0, r0, #16
   5a71c:	mov	r1, sp
   5a720:	bl	189f0 <_start@@Base+0x5640>
   5a724:	cmp	r0, #0
   5a728:	beq	5a708 <lua_tonumber@@Base+0x34>
   5a72c:	vldr	d0, [sp]
   5a730:	b	5a6f8 <lua_tonumber@@Base+0x24>
   5a734:	nop			; (mov r0, r0)
	...

0005a740 <lua_tonumberx@@Base>:
   5a740:	push	{r4, lr}
   5a744:	sub	sp, sp, #8
   5a748:	mov	r4, r2
   5a74c:	bl	1b44c <_start@@Base+0x809c>
   5a750:	ldr	r3, [r0, #4]
   5a754:	cmn	r3, #14
   5a758:	bhi	5a784 <lua_tonumberx@@Base+0x44>
   5a75c:	cmp	r4, #0
   5a760:	movne	r3, #1
   5a764:	strne	r3, [r4]
   5a768:	ldrne	r3, [r0, #4]
   5a76c:	cmn	r3, #14
   5a770:	vldreq	s0, [r0]
   5a774:	vldrne	d0, [r0]
   5a778:	vcvteq.f64.s32	d0, s0
   5a77c:	add	sp, sp, #8
   5a780:	pop	{r4, pc}
   5a784:	cmn	r3, #5
   5a788:	beq	5a7a0 <lua_tonumberx@@Base+0x60>
   5a78c:	cmp	r4, #0
   5a790:	movne	r3, #0
   5a794:	strne	r3, [r4]
   5a798:	vldr	d0, [pc, #48]	; 5a7d0 <lua_tonumberx@@Base+0x90>
   5a79c:	b	5a77c <lua_tonumberx@@Base+0x3c>
   5a7a0:	ldr	r0, [r0]
   5a7a4:	mov	r2, #2
   5a7a8:	add	r0, r0, #16
   5a7ac:	mov	r1, sp
   5a7b0:	bl	189f0 <_start@@Base+0x5640>
   5a7b4:	cmp	r0, #0
   5a7b8:	beq	5a78c <lua_tonumberx@@Base+0x4c>
   5a7bc:	cmp	r4, #0
   5a7c0:	movne	r3, #1
   5a7c4:	strne	r3, [r4]
   5a7c8:	vldr	d0, [sp]
   5a7cc:	b	5a77c <lua_tonumberx@@Base+0x3c>
	...

0005a7d8 <luaL_checknumber@@Base>:
   5a7d8:	push	{r4, r5, lr}
   5a7dc:	sub	sp, sp, #12
   5a7e0:	mov	r4, r0
   5a7e4:	mov	r5, r1
   5a7e8:	bl	1b44c <_start@@Base+0x809c>
   5a7ec:	ldr	r3, [r0, #4]
   5a7f0:	cmn	r3, #14
   5a7f4:	bhi	5a80c <luaL_checknumber@@Base+0x34>
   5a7f8:	vldreq	s0, [r0]
   5a7fc:	vldrne	d0, [r0]
   5a800:	vcvteq.f64.s32	d0, s0
   5a804:	add	sp, sp, #12
   5a808:	pop	{r4, r5, pc}
   5a80c:	cmn	r3, #5
   5a810:	bne	5a834 <luaL_checknumber@@Base+0x5c>
   5a814:	ldr	r0, [r0]
   5a818:	mov	r2, #2
   5a81c:	add	r0, r0, #16
   5a820:	mov	r1, sp
   5a824:	bl	189f0 <_start@@Base+0x5640>
   5a828:	cmp	r0, #0
   5a82c:	vldrne	d0, [sp]
   5a830:	bne	5a804 <luaL_checknumber@@Base+0x2c>
   5a834:	mov	r1, r5
   5a838:	mov	r0, r4
   5a83c:	mov	r2, #3
   5a840:	bl	36374 <luaL_typerror@@Base+0x8>

0005a844 <luaL_optnumber@@Base>:
   5a844:	push	{r4, r5, lr}
   5a848:	sub	sp, sp, #12
   5a84c:	mov	r4, r0
   5a850:	mov	r5, r1
   5a854:	bl	1b44c <_start@@Base+0x809c>
   5a858:	ldr	r3, [r0, #4]
   5a85c:	cmn	r3, #14
   5a860:	bhi	5a878 <luaL_optnumber@@Base+0x34>
   5a864:	vldreq	s0, [r0]
   5a868:	vldrne	d0, [r0]
   5a86c:	vcvteq.f64.s32	d0, s0
   5a870:	add	sp, sp, #12
   5a874:	pop	{r4, r5, pc}
   5a878:	cmn	r3, #1
   5a87c:	beq	5a870 <luaL_optnumber@@Base+0x2c>
   5a880:	cmn	r3, #5
   5a884:	bne	5a8a8 <luaL_optnumber@@Base+0x64>
   5a888:	ldr	r0, [r0]
   5a88c:	mov	r2, #2
   5a890:	add	r0, r0, #16
   5a894:	mov	r1, sp
   5a898:	bl	189f0 <_start@@Base+0x5640>
   5a89c:	cmp	r0, #0
   5a8a0:	vldrne	d0, [sp]
   5a8a4:	bne	5a870 <luaL_optnumber@@Base+0x2c>
   5a8a8:	mov	r1, r5
   5a8ac:	mov	r0, r4
   5a8b0:	mov	r2, #3
   5a8b4:	bl	36374 <luaL_typerror@@Base+0x8>

0005a8b8 <lua_tointeger@@Base>:
   5a8b8:	push	{lr}		; (str lr, [sp, #-4]!)
   5a8bc:	sub	sp, sp, #12
   5a8c0:	bl	1b44c <_start@@Base+0x809c>
   5a8c4:	ldr	r3, [r0, #4]
   5a8c8:	cmn	r3, #14
   5a8cc:	bne	5a8dc <lua_tointeger@@Base+0x24>
   5a8d0:	ldr	r0, [r0]
   5a8d4:	add	sp, sp, #12
   5a8d8:	pop	{pc}		; (ldr pc, [sp], #4)
   5a8dc:	cmn	r3, #15
   5a8e0:	bhi	5a8f4 <lua_tointeger@@Base+0x3c>
   5a8e4:	vldr	d7, [r0]
   5a8e8:	vcvt.s32.f64	s15, d7
   5a8ec:	vmov	r0, s15
   5a8f0:	b	5a8d4 <lua_tointeger@@Base+0x1c>
   5a8f4:	cmn	r3, #5
   5a8f8:	beq	5a904 <lua_tointeger@@Base+0x4c>
   5a8fc:	mov	r0, #0
   5a900:	b	5a8d4 <lua_tointeger@@Base+0x1c>
   5a904:	ldr	r0, [r0]
   5a908:	mov	r2, #1
   5a90c:	add	r0, r0, #16
   5a910:	mov	r1, sp
   5a914:	bl	189f0 <_start@@Base+0x5640>
   5a918:	cmp	r0, #3
   5a91c:	beq	5a938 <lua_tointeger@@Base+0x80>
   5a920:	cmp	r0, #0
   5a924:	beq	5a8fc <lua_tointeger@@Base+0x44>
   5a928:	ldr	r3, [sp, #4]
   5a92c:	cmn	r3, #14
   5a930:	vldrne	d7, [sp]
   5a934:	bne	5a8e8 <lua_tointeger@@Base+0x30>
   5a938:	ldr	r0, [sp]
   5a93c:	b	5a8d4 <lua_tointeger@@Base+0x1c>

0005a940 <lua_tointegerx@@Base>:
   5a940:	push	{r4, lr}
   5a944:	sub	sp, sp, #8
   5a948:	mov	r4, r2
   5a94c:	bl	1b44c <_start@@Base+0x809c>
   5a950:	ldr	r3, [r0, #4]
   5a954:	cmn	r3, #14
   5a958:	bne	5a974 <lua_tointegerx@@Base+0x34>
   5a95c:	cmp	r4, #0
   5a960:	movne	r3, #1
   5a964:	strne	r3, [r4]
   5a968:	ldr	r0, [r0]
   5a96c:	add	sp, sp, #8
   5a970:	pop	{r4, pc}
   5a974:	cmn	r3, #15
   5a978:	bhi	5a998 <lua_tointegerx@@Base+0x58>
   5a97c:	vldr	d7, [r0]
   5a980:	vcvt.s32.f64	s15, d7
   5a984:	cmp	r4, #0
   5a988:	movne	r3, #1
   5a98c:	strne	r3, [r4]
   5a990:	vmov	r0, s15
   5a994:	b	5a96c <lua_tointegerx@@Base+0x2c>
   5a998:	cmn	r3, #5
   5a99c:	beq	5a9b4 <lua_tointegerx@@Base+0x74>
   5a9a0:	cmp	r4, #0
   5a9a4:	moveq	r0, r4
   5a9a8:	movne	r0, #0
   5a9ac:	strne	r0, [r4]
   5a9b0:	b	5a96c <lua_tointegerx@@Base+0x2c>
   5a9b4:	ldr	r0, [r0]
   5a9b8:	mov	r2, #1
   5a9bc:	add	r0, r0, #16
   5a9c0:	mov	r1, sp
   5a9c4:	bl	189f0 <_start@@Base+0x5640>
   5a9c8:	cmp	r0, #3
   5a9cc:	beq	5a9e8 <lua_tointegerx@@Base+0xa8>
   5a9d0:	cmp	r0, #0
   5a9d4:	beq	5a9a0 <lua_tointegerx@@Base+0x60>
   5a9d8:	ldr	r3, [sp, #4]
   5a9dc:	cmn	r3, #14
   5a9e0:	vldrne	d7, [sp]
   5a9e4:	bne	5a980 <lua_tointegerx@@Base+0x40>
   5a9e8:	cmp	r4, #0
   5a9ec:	movne	r3, #1
   5a9f0:	strne	r3, [r4]
   5a9f4:	ldr	r0, [sp]
   5a9f8:	b	5a96c <lua_tointegerx@@Base+0x2c>

0005a9fc <luaL_checkinteger@@Base>:
   5a9fc:	push	{r4, r5, lr}
   5aa00:	sub	sp, sp, #12
   5aa04:	mov	r4, r0
   5aa08:	mov	r5, r1
   5aa0c:	bl	1b44c <_start@@Base+0x809c>
   5aa10:	ldr	r3, [r0, #4]
   5aa14:	cmn	r3, #14
   5aa18:	bne	5aa28 <luaL_checkinteger@@Base+0x2c>
   5aa1c:	ldr	r0, [r0]
   5aa20:	add	sp, sp, #12
   5aa24:	pop	{r4, r5, pc}
   5aa28:	cmn	r3, #15
   5aa2c:	bhi	5aa40 <luaL_checkinteger@@Base+0x44>
   5aa30:	vldr	d7, [r0]
   5aa34:	vcvt.s32.f64	s15, d7
   5aa38:	vmov	r0, s15
   5aa3c:	b	5aa20 <luaL_checkinteger@@Base+0x24>
   5aa40:	cmn	r3, #5
   5aa44:	bne	5aa84 <luaL_checkinteger@@Base+0x88>
   5aa48:	ldr	r0, [r0]
   5aa4c:	mov	r2, #1
   5aa50:	add	r0, r0, #16
   5aa54:	mov	r1, sp
   5aa58:	bl	189f0 <_start@@Base+0x5640>
   5aa5c:	cmp	r0, #3
   5aa60:	beq	5aa7c <luaL_checkinteger@@Base+0x80>
   5aa64:	cmp	r0, #0
   5aa68:	beq	5aa84 <luaL_checkinteger@@Base+0x88>
   5aa6c:	ldr	r3, [sp, #4]
   5aa70:	cmn	r3, #14
   5aa74:	vldrne	d7, [sp]
   5aa78:	bne	5aa34 <luaL_checkinteger@@Base+0x38>
   5aa7c:	ldr	r0, [sp]
   5aa80:	b	5aa20 <luaL_checkinteger@@Base+0x24>
   5aa84:	mov	r1, r5
   5aa88:	mov	r0, r4
   5aa8c:	mov	r2, #3
   5aa90:	bl	36374 <luaL_typerror@@Base+0x8>

0005aa94 <luaL_optinteger@@Base>:
   5aa94:	push	{r4, r5, r6, lr}
   5aa98:	sub	sp, sp, #8
   5aa9c:	mov	r4, r2
   5aaa0:	mov	r5, r0
   5aaa4:	mov	r6, r1
   5aaa8:	bl	1b44c <_start@@Base+0x809c>
   5aaac:	ldr	r3, [r0, #4]
   5aab0:	cmn	r3, #14
   5aab4:	bne	5aac4 <luaL_optinteger@@Base+0x30>
   5aab8:	ldr	r0, [r0]
   5aabc:	add	sp, sp, #8
   5aac0:	pop	{r4, r5, r6, pc}
   5aac4:	cmn	r3, #15
   5aac8:	bhi	5aadc <luaL_optinteger@@Base+0x48>
   5aacc:	vldr	d7, [r0]
   5aad0:	vcvt.s32.f64	s15, d7
   5aad4:	vmov	r0, s15
   5aad8:	b	5aabc <luaL_optinteger@@Base+0x28>
   5aadc:	cmn	r3, #1
   5aae0:	beq	5ab28 <luaL_optinteger@@Base+0x94>
   5aae4:	cmn	r3, #5
   5aae8:	bne	5ab30 <luaL_optinteger@@Base+0x9c>
   5aaec:	ldr	r0, [r0]
   5aaf0:	mov	r2, #1
   5aaf4:	add	r0, r0, #16
   5aaf8:	mov	r1, sp
   5aafc:	bl	189f0 <_start@@Base+0x5640>
   5ab00:	cmp	r0, #3
   5ab04:	beq	5ab20 <luaL_optinteger@@Base+0x8c>
   5ab08:	cmp	r0, #0
   5ab0c:	beq	5ab30 <luaL_optinteger@@Base+0x9c>
   5ab10:	ldr	r3, [sp, #4]
   5ab14:	cmn	r3, #14
   5ab18:	vldrne	d7, [sp]
   5ab1c:	bne	5aad0 <luaL_optinteger@@Base+0x3c>
   5ab20:	ldr	r0, [sp]
   5ab24:	b	5aabc <luaL_optinteger@@Base+0x28>
   5ab28:	mov	r0, r4
   5ab2c:	b	5aabc <luaL_optinteger@@Base+0x28>
   5ab30:	mov	r1, r6
   5ab34:	mov	r0, r5
   5ab38:	mov	r2, #3
   5ab3c:	bl	36374 <luaL_typerror@@Base+0x8>

0005ab40 <lua_toboolean@@Base>:
   5ab40:	push	{r4, lr}
   5ab44:	bl	1b44c <_start@@Base+0x809c>
   5ab48:	ldr	r0, [r0, #4]
   5ab4c:	cmn	r0, #3
   5ab50:	movhi	r0, #0
   5ab54:	movls	r0, #1
   5ab58:	pop	{r4, pc}

0005ab5c <lua_tolstring@@Base>:
   5ab5c:	push	{r4, r5, r6, lr}
   5ab60:	mov	r4, r2
   5ab64:	mov	r5, r0
   5ab68:	mov	r6, r1
   5ab6c:	bl	1b44c <_start@@Base+0x809c>
   5ab70:	ldr	r3, [r0, #4]
   5ab74:	cmn	r3, #5
   5ab78:	bne	5ab94 <lua_tolstring@@Base+0x38>
   5ab7c:	ldr	r0, [r0]
   5ab80:	cmp	r4, #0
   5ab84:	add	r0, r0, #16
   5ab88:	ldrne	r3, [r0, #-4]
   5ab8c:	strne	r3, [r4]
   5ab90:	pop	{r4, r5, r6, pc}
   5ab94:	cmn	r3, #14
   5ab98:	bhi	5abd4 <lua_tolstring@@Base+0x78>
   5ab9c:	ldr	r3, [r5, #8]
   5aba0:	ldrd	r2, [r3, #20]
   5aba4:	cmp	r2, r3
   5aba8:	bcs	5abf0 <lua_tolstring@@Base+0x94>
   5abac:	mov	r1, r6
   5abb0:	mov	r0, r5
   5abb4:	bl	1b44c <_start@@Base+0x809c>
   5abb8:	mov	r6, r0
   5abbc:	mov	r1, r0
   5abc0:	mov	r0, r5
   5abc4:	bl	57bc0 <lua_gethookcount@@Base+0x4540>
   5abc8:	mvn	r3, #4
   5abcc:	stm	r6, {r0, r3}
   5abd0:	b	5ab80 <lua_tolstring@@Base+0x24>
   5abd4:	cmp	r4, #0
   5abd8:	beq	5abe8 <lua_tolstring@@Base+0x8c>
   5abdc:	mov	r0, #0
   5abe0:	str	r0, [r4]
   5abe4:	pop	{r4, r5, r6, pc}
   5abe8:	mov	r0, r4
   5abec:	pop	{r4, r5, r6, pc}
   5abf0:	mov	r0, r5
   5abf4:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5abf8:	b	5abac <lua_tolstring@@Base+0x50>
   5abfc:	push	{r4, r5, r6, lr}
   5ac00:	mov	r2, #0
   5ac04:	mvn	r1, #0
   5ac08:	bl	5ab5c <lua_tolstring@@Base>
   5ac0c:	ldr	r4, [pc, #80]	; 5ac64 <lua_tolstring@@Base+0x108>
   5ac10:	mov	r2, #45	; 0x2d
   5ac14:	mov	r1, #1
   5ac18:	ldr	r3, [r4]
   5ac1c:	mov	r5, r0
   5ac20:	ldr	r0, [pc, #64]	; 5ac68 <lua_tolstring@@Base+0x10c>
   5ac24:	bl	12d6c <fwrite@plt>
   5ac28:	cmp	r5, #0
   5ac2c:	ldr	r1, [r4]
   5ac30:	ldr	r0, [pc, #52]	; 5ac6c <lua_tolstring@@Base+0x110>
   5ac34:	movne	r0, r5
   5ac38:	bl	1303c <fputs@plt>
   5ac3c:	ldr	r1, [r4]
   5ac40:	mov	r0, #41	; 0x29
   5ac44:	bl	12fac <fputc@plt>
   5ac48:	ldr	r1, [r4]
   5ac4c:	mov	r0, #10
   5ac50:	bl	12fac <fputc@plt>
   5ac54:	ldr	r0, [r4]
   5ac58:	bl	12c7c <fflush@plt>
   5ac5c:	mov	r0, #0
   5ac60:	pop	{r4, r5, r6, pc}
   5ac64:	andeq	r4, r8, r0, lsr #3
   5ac68:	andeq	r3, r7, r8, asr #32
   5ac6c:	strdeq	r2, [r7], -r0
   5ac70:	push	{r4, r5, r6, r7, r8, lr}
   5ac74:	mov	r4, r0
   5ac78:	mov	r1, #2
   5ac7c:	mov	r5, r2
   5ac80:	ldr	r2, [pc, #124]	; 5ad04 <lua_tolstring@@Base+0x1a8>
   5ac84:	bl	59e60 <luaL_checkstack@@Base>
   5ac88:	ldrd	r2, [r4, #16]
   5ac8c:	mov	r0, r4
   5ac90:	ldrd	r6, [r2]
   5ac94:	add	r1, r3, #8
   5ac98:	str	r1, [r4, #20]
   5ac9c:	mov	r2, #2
   5aca0:	strd	r6, [r3]
   5aca4:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   5aca8:	ldr	r3, [r4, #20]
   5acac:	sub	r1, r3, #8
   5acb0:	ldr	r2, [r3, #-4]
   5acb4:	str	r1, [r4, #20]
   5acb8:	cmn	r2, #1
   5acbc:	beq	5acec <lua_tolstring@@Base+0x190>
   5acc0:	cmn	r2, #5
   5acc4:	cmnne	r2, #14
   5acc8:	bhi	5acf8 <lua_tolstring@@Base+0x19c>
   5accc:	ldr	r1, [r4, #16]
   5acd0:	ldrd	r6, [r3, #-8]
   5acd4:	mov	r2, r5
   5acd8:	mov	r0, r4
   5acdc:	strd	r6, [r1, #32]
   5ace0:	mov	r1, #5
   5ace4:	pop	{r4, r5, r6, r7, r8, lr}
   5ace8:	b	5ab5c <lua_tolstring@@Base>
   5acec:	mov	r0, #0
   5acf0:	str	r0, [r5]
   5acf4:	pop	{r4, r5, r6, r7, r8, pc}
   5acf8:	mov	r0, r4
   5acfc:	ldr	r1, [pc, #4]	; 5ad08 <lua_tolstring@@Base+0x1ac>
   5ad00:	bl	35a48 <lua_error@@Base+0xa8>
   5ad04:	andeq	r3, r7, r8, lsr #1
   5ad08:	strdeq	r0, [r0], -r6

0005ad0c <luaL_checklstring@@Base>:
   5ad0c:	push	{r4, r5, r6, lr}
   5ad10:	mov	r4, r2
   5ad14:	mov	r5, r0
   5ad18:	mov	r6, r1
   5ad1c:	bl	1b44c <_start@@Base+0x809c>
   5ad20:	ldr	r3, [r0, #4]
   5ad24:	cmn	r3, #5
   5ad28:	bne	5ad44 <luaL_checklstring@@Base+0x38>
   5ad2c:	ldr	r0, [r0]
   5ad30:	cmp	r4, #0
   5ad34:	add	r0, r0, #16
   5ad38:	ldrne	r3, [r0, #-4]
   5ad3c:	strne	r3, [r4]
   5ad40:	pop	{r4, r5, r6, pc}
   5ad44:	cmn	r3, #14
   5ad48:	bhi	5ad90 <luaL_checklstring@@Base+0x84>
   5ad4c:	ldr	r3, [r5, #8]
   5ad50:	ldrd	r2, [r3, #20]
   5ad54:	cmp	r2, r3
   5ad58:	bcs	5ad84 <luaL_checklstring@@Base+0x78>
   5ad5c:	mov	r1, r6
   5ad60:	mov	r0, r5
   5ad64:	bl	1b44c <_start@@Base+0x809c>
   5ad68:	mov	r6, r0
   5ad6c:	mov	r1, r0
   5ad70:	mov	r0, r5
   5ad74:	bl	57bc0 <lua_gethookcount@@Base+0x4540>
   5ad78:	mvn	r3, #4
   5ad7c:	stm	r6, {r0, r3}
   5ad80:	b	5ad30 <luaL_checklstring@@Base+0x24>
   5ad84:	mov	r0, r5
   5ad88:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5ad8c:	b	5ad5c <luaL_checklstring@@Base+0x50>
   5ad90:	mov	r1, r6
   5ad94:	mov	r0, r5
   5ad98:	mov	r2, #4
   5ad9c:	bl	36374 <luaL_typerror@@Base+0x8>

0005ada0 <luaL_optlstring@@Base>:
   5ada0:	push	{r4, r5, r6, r7, r8, lr}
   5ada4:	mov	r5, r3
   5ada8:	mov	r4, r2
   5adac:	mov	r6, r0
   5adb0:	mov	r7, r1
   5adb4:	bl	1b44c <_start@@Base+0x809c>
   5adb8:	ldr	r3, [r0, #4]
   5adbc:	cmn	r3, #5
   5adc0:	bne	5addc <luaL_optlstring@@Base+0x3c>
   5adc4:	ldr	r0, [r0]
   5adc8:	cmp	r5, #0
   5adcc:	add	r0, r0, #16
   5add0:	ldrne	r3, [r0, #-4]
   5add4:	strne	r3, [r5]
   5add8:	pop	{r4, r5, r6, r7, r8, pc}
   5addc:	cmn	r3, #1
   5ade0:	beq	5ae24 <luaL_optlstring@@Base+0x84>
   5ade4:	cmn	r3, #14
   5ade8:	bhi	5ae54 <luaL_optlstring@@Base+0xb4>
   5adec:	ldr	r3, [r6, #8]
   5adf0:	ldrd	r2, [r3, #20]
   5adf4:	cmp	r2, r3
   5adf8:	bcs	5ae48 <luaL_optlstring@@Base+0xa8>
   5adfc:	mov	r1, r7
   5ae00:	mov	r0, r6
   5ae04:	bl	1b44c <_start@@Base+0x809c>
   5ae08:	mov	r4, r0
   5ae0c:	mov	r1, r0
   5ae10:	mov	r0, r6
   5ae14:	bl	57bc0 <lua_gethookcount@@Base+0x4540>
   5ae18:	mvn	r3, #4
   5ae1c:	stm	r4, {r0, r3}
   5ae20:	b	5adc8 <luaL_optlstring@@Base+0x28>
   5ae24:	cmp	r5, #0
   5ae28:	mov	r0, r4
   5ae2c:	popeq	{r4, r5, r6, r7, r8, pc}
   5ae30:	cmp	r4, #0
   5ae34:	beq	5ae3c <luaL_optlstring@@Base+0x9c>
   5ae38:	bl	12e80 <strlen@plt>
   5ae3c:	str	r0, [r5]
   5ae40:	mov	r0, r4
   5ae44:	pop	{r4, r5, r6, r7, r8, pc}
   5ae48:	mov	r0, r6
   5ae4c:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5ae50:	b	5adfc <luaL_optlstring@@Base+0x5c>
   5ae54:	mov	r1, r7
   5ae58:	mov	r0, r6
   5ae5c:	mov	r2, #4
   5ae60:	bl	36374 <luaL_typerror@@Base+0x8>
   5ae64:	mov	r3, #0
   5ae68:	push	{r4, lr}
   5ae6c:	mov	r2, r3
   5ae70:	mov	r1, #1
   5ae74:	mov	r4, r0
   5ae78:	bl	5ada0 <luaL_optlstring@@Base>
   5ae7c:	bl	12df0 <system@plt>
   5ae80:	ldr	r3, [r4, #20]
   5ae84:	mvn	r2, #13
   5ae88:	add	r1, r3, #8
   5ae8c:	str	r1, [r4, #20]
   5ae90:	stm	r3, {r0, r2}
   5ae94:	mov	r0, #1
   5ae98:	pop	{r4, pc}

0005ae9c <luaL_checkoption@@Base>:
   5ae9c:	push	{r4, r5, r6, r7, r8, lr}
   5aea0:	mov	r5, r2
   5aea4:	mov	r2, #0
   5aea8:	mov	r4, r3
   5aeac:	mov	r7, r0
   5aeb0:	mov	r8, r1
   5aeb4:	bl	5ab5c <lua_tolstring@@Base>
   5aeb8:	subs	r6, r0, #0
   5aebc:	beq	5aefc <luaL_checkoption@@Base+0x60>
   5aec0:	ldr	r0, [r4]
   5aec4:	cmp	r0, #0
   5aec8:	beq	5af18 <luaL_checkoption@@Base+0x7c>
   5aecc:	mov	r5, #0
   5aed0:	b	5aee4 <luaL_checkoption@@Base+0x48>
   5aed4:	ldr	r0, [r4, #4]!
   5aed8:	add	r5, r5, #1
   5aedc:	cmp	r0, #0
   5aee0:	beq	5af18 <luaL_checkoption@@Base+0x7c>
   5aee4:	mov	r1, r6
   5aee8:	bl	12c64 <strcmp@plt>
   5aeec:	cmp	r0, #0
   5aef0:	bne	5aed4 <luaL_checkoption@@Base+0x38>
   5aef4:	mov	r0, r5
   5aef8:	pop	{r4, r5, r6, r7, r8, pc}
   5aefc:	cmp	r5, #0
   5af00:	movne	r6, r5
   5af04:	bne	5aec0 <luaL_checkoption@@Base+0x24>
   5af08:	mov	r1, r8
   5af0c:	mov	r0, r7
   5af10:	mov	r2, #4
   5af14:	bl	36374 <luaL_typerror@@Base+0x8>
   5af18:	mov	r3, r6
   5af1c:	mov	r1, r8
   5af20:	mov	r0, r7
   5af24:	ldr	r2, [pc]	; 5af2c <luaL_checkoption@@Base+0x90>
   5af28:	bl	4a5d0 <luaL_error@@Base+0x44e4>
   5af2c:	muleq	r0, fp, r4

0005af30 <lua_objlen@@Base>:
   5af30:	push	{r4, r5, r6, lr}
   5af34:	mov	r5, r0
   5af38:	bl	1b44c <_start@@Base+0x809c>
   5af3c:	ldr	r3, [r0, #4]
   5af40:	mov	r4, r0
   5af44:	cmn	r3, #5
   5af48:	beq	5af6c <lua_objlen@@Base+0x3c>
   5af4c:	cmn	r3, #12
   5af50:	beq	5af98 <lua_objlen@@Base+0x68>
   5af54:	cmn	r3, #13
   5af58:	beq	5af6c <lua_objlen@@Base+0x3c>
   5af5c:	cmn	r3, #14
   5af60:	bls	5af78 <lua_objlen@@Base+0x48>
   5af64:	mov	r0, #0
   5af68:	pop	{r4, r5, r6, pc}
   5af6c:	ldr	r3, [r4]
   5af70:	ldr	r0, [r3, #12]
   5af74:	pop	{r4, r5, r6, pc}
   5af78:	mov	r0, r5
   5af7c:	mov	r1, r4
   5af80:	bl	57bc0 <lua_gethookcount@@Base+0x4540>
   5af84:	mvn	r3, #4
   5af88:	str	r0, [r4]
   5af8c:	ldr	r0, [r0, #12]
   5af90:	str	r3, [r4, #4]
   5af94:	pop	{r4, r5, r6, pc}
   5af98:	ldr	r0, [r0]
   5af9c:	pop	{r4, r5, r6, lr}
   5afa0:	b	1f244 <lua_atpanic@@Base+0x74>

0005afa4 <lua_tocfunction@@Base>:
   5afa4:	push	{r4, lr}
   5afa8:	bl	1b44c <_start@@Base+0x809c>
   5afac:	ldr	r3, [r0, #4]
   5afb0:	cmn	r3, #9
   5afb4:	bne	5afd8 <lua_tocfunction@@Base+0x34>
   5afb8:	ldr	r2, [r0]
   5afbc:	ldr	r3, [r2, #16]
   5afc0:	ldrb	r3, [r3]
   5afc4:	sub	r3, r3, #95	; 0x5f
   5afc8:	cmp	r3, #1
   5afcc:	bhi	5afd8 <lua_tocfunction@@Base+0x34>
   5afd0:	ldr	r0, [r2, #20]
   5afd4:	pop	{r4, pc}
   5afd8:	mov	r0, #0
   5afdc:	pop	{r4, pc}

0005afe0 <lua_touserdata@@Base>:
   5afe0:	push	{r4, lr}
   5afe4:	bl	1b44c <_start@@Base+0x809c>
   5afe8:	ldr	r3, [r0, #4]
   5afec:	cmn	r3, #13
   5aff0:	beq	5b004 <lua_touserdata@@Base+0x24>
   5aff4:	cmn	r3, #4
   5aff8:	ldreq	r0, [r0]
   5affc:	movne	r0, #0
   5b000:	pop	{r4, pc}
   5b004:	ldr	r0, [r0]
   5b008:	add	r0, r0, #24
   5b00c:	pop	{r4, pc}

0005b010 <lua_tothread@@Base>:
   5b010:	push	{r4, lr}
   5b014:	bl	1b44c <_start@@Base+0x809c>
   5b018:	ldr	r3, [r0, #4]
   5b01c:	cmn	r3, #7
   5b020:	ldreq	r0, [r0]
   5b024:	movne	r0, #0
   5b028:	pop	{r4, pc}

0005b02c <lua_topointer@@Base>:
   5b02c:	push	{r4, lr}
   5b030:	bl	1b44c <_start@@Base+0x809c>
   5b034:	ldr	r3, [r0, #4]
   5b038:	cmn	r3, #13
   5b03c:	beq	5b064 <lua_topointer@@Base+0x38>
   5b040:	cmn	r3, #4
   5b044:	beq	5b05c <lua_topointer@@Base+0x30>
   5b048:	cmn	r3, #11
   5b04c:	beq	5b070 <lua_topointer@@Base+0x44>
   5b050:	add	r3, r3, #4
   5b054:	cmn	r3, #10
   5b058:	bls	5b07c <lua_topointer@@Base+0x50>
   5b05c:	ldr	r0, [r0]
   5b060:	pop	{r4, pc}
   5b064:	ldr	r0, [r0]
   5b068:	add	r0, r0, #24
   5b06c:	pop	{r4, pc}
   5b070:	ldr	r0, [r0]
   5b074:	add	r0, r0, #8
   5b078:	pop	{r4, pc}
   5b07c:	mov	r0, #0
   5b080:	pop	{r4, pc}

0005b084 <lua_pushnil@@Base>:
   5b084:	ldr	r1, [r0, #20]
   5b088:	push	{lr}		; (str lr, [sp, #-4]!)
   5b08c:	add	r2, r1, #8
   5b090:	ldr	lr, [r0, #24]
   5b094:	mvn	ip, #0
   5b098:	cmp	r2, lr
   5b09c:	str	ip, [r1, #4]
   5b0a0:	str	r2, [r0, #20]
   5b0a4:	popcc	{pc}		; (ldrcc pc, [sp], #4)
   5b0a8:	mov	r1, #1
   5b0ac:	pop	{lr}		; (ldr lr, [sp], #4)
   5b0b0:	b	1fd08 <lua_getstack@@Base+0x50>

0005b0b4 <lua_pushnumber@@Base>:
   5b0b4:	vcmp.f64	d0, d0
   5b0b8:	ldr	r3, [r0, #20]
   5b0bc:	push	{r4, r5}
   5b0c0:	vmrs	APSR_nzcv, fpscr
   5b0c4:	vstr	d0, [r3]
   5b0c8:	bne	5b0f4 <lua_pushnumber@@Base+0x40>
   5b0cc:	ldr	r2, [r0, #24]
   5b0d0:	add	r3, r3, #8
   5b0d4:	cmp	r3, r2
   5b0d8:	str	r3, [r0, #20]
   5b0dc:	bcs	5b0e8 <lua_pushnumber@@Base+0x34>
   5b0e0:	pop	{r4, r5}
   5b0e4:	bx	lr
   5b0e8:	mov	r1, #1
   5b0ec:	pop	{r4, r5}
   5b0f0:	b	1fd08 <lua_getstack@@Base+0x50>
   5b0f4:	ldr	r5, [pc, #8]	; 5b104 <lua_pushnumber@@Base+0x50>
   5b0f8:	mov	r4, #0
   5b0fc:	strd	r4, [r3]
   5b100:	b	5b0cc <lua_pushnumber@@Base+0x18>
   5b104:			; <UNDEFINED> instruction: 0xfff80000
   5b108:	push	{r4, lr}
   5b10c:	mov	r1, #1
   5b110:	vpush	{d8}
   5b114:	mov	r4, r0
   5b118:	bl	5a7d8 <luaL_checknumber@@Base>
   5b11c:	mov	r0, r4
   5b120:	mov	r1, #2
   5b124:	vmov.f64	d8, d0
   5b128:	vldr	d0, [pc, #40]	; 5b158 <lua_pushnumber@@Base+0xa4>
   5b12c:	bl	5a844 <luaL_optnumber@@Base>
   5b130:	vcvt.s32.f64	s15, d8
   5b134:	vmov	r0, s15
   5b138:	vcvt.s32.f64	s15, d0
   5b13c:	vmov	r1, s15
   5b140:	bl	12f28 <difftime@plt>
   5b144:	mov	r0, r4
   5b148:	bl	5b0b4 <lua_pushnumber@@Base>
   5b14c:	vpop	{d8}
   5b150:	mov	r0, #1
   5b154:	pop	{r4, pc}
	...

0005b160 <lua_pushinteger@@Base>:
   5b160:	ldr	r2, [r0, #20]
   5b164:	push	{r4, lr}
   5b168:	add	ip, r2, #8
   5b16c:	ldr	r4, [r0, #24]
   5b170:	mvn	lr, #13
   5b174:	cmp	ip, r4
   5b178:	stm	r2, {r1, lr}
   5b17c:	str	ip, [r0, #20]
   5b180:	popcc	{r4, pc}
   5b184:	mov	r1, #1
   5b188:	pop	{r4, lr}
   5b18c:	b	1fd08 <lua_getstack@@Base+0x50>

0005b190 <lua_pushlstring@@Base>:
   5b190:	ldr	r3, [r0, #8]
   5b194:	push	{r4, lr}
   5b198:	mov	r4, r0
   5b19c:	ldr	ip, [r3, #20]
   5b1a0:	ldr	r3, [r3, #24]
   5b1a4:	sub	sp, sp, #8
   5b1a8:	cmp	ip, r3
   5b1ac:	bcs	5b1f4 <lua_pushlstring@@Base+0x64>
   5b1b0:	mov	r0, r4
   5b1b4:	bl	20260 <luaL_where@@Base+0x15c>
   5b1b8:	ldr	r3, [r4, #20]
   5b1bc:	ldr	r1, [r4, #24]
   5b1c0:	add	r2, r3, #8
   5b1c4:	cmp	r2, r1
   5b1c8:	mvn	r1, #4
   5b1cc:	strd	r0, [r3]
   5b1d0:	str	r2, [r4, #20]
   5b1d4:	bcs	5b1e0 <lua_pushlstring@@Base+0x50>
   5b1d8:	add	sp, sp, #8
   5b1dc:	pop	{r4, pc}
   5b1e0:	mov	r0, r4
   5b1e4:	mov	r1, #1
   5b1e8:	add	sp, sp, #8
   5b1ec:	pop	{r4, lr}
   5b1f0:	b	1fd08 <lua_getstack@@Base+0x50>
   5b1f4:	stm	sp, {r1, r2}
   5b1f8:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5b1fc:	ldm	sp, {r1, r2}
   5b200:	b	5b1b0 <lua_pushlstring@@Base+0x20>
   5b204:	ldr	r2, [r0]
   5b208:	push	{r4, r5, r6, lr}
   5b20c:	add	r5, r0, #12
   5b210:	subs	r2, r2, r5
   5b214:	bne	5b220 <lua_pushlstring@@Base+0x90>
   5b218:	mov	r0, r2
   5b21c:	pop	{r4, r5, r6, pc}
   5b220:	mov	r4, r0
   5b224:	mov	r1, r5
   5b228:	ldr	r0, [r0, #8]
   5b22c:	bl	5b190 <lua_pushlstring@@Base>
   5b230:	ldr	r3, [r4, #4]
   5b234:	str	r5, [r4]
   5b238:	add	r3, r3, #1
   5b23c:	str	r3, [r4, #4]
   5b240:	mov	r0, #1
   5b244:	pop	{r4, r5, r6, pc}
   5b248:	ldr	ip, [r0, #12]
   5b24c:	push	{r4, lr}
   5b250:	cmp	ip, r1
   5b254:	ldr	ip, [r0, #8]
   5b258:	bgt	5b27c <lua_pushlstring@@Base+0xec>
   5b25c:	cmp	r1, #0
   5b260:	bne	5b2e4 <lua_pushlstring@@Base+0x154>
   5b264:	mov	lr, r2
   5b268:	mov	r1, lr
   5b26c:	sub	r2, r3, r2
   5b270:	mov	r0, ip
   5b274:	pop	{r4, lr}
   5b278:	b	5b190 <lua_pushlstring@@Base>
   5b27c:	add	r1, r0, r1, lsl #3
   5b280:	ldr	r2, [r1, #24]
   5b284:	cmn	r2, #1
   5b288:	beq	5b2f0 <lua_pushlstring@@Base+0x160>
   5b28c:	cmn	r2, #2
   5b290:	ldr	r1, [r1, #20]
   5b294:	bne	5b2d8 <lua_pushlstring@@Base+0x148>
   5b298:	ldr	r2, [r0]
   5b29c:	ldr	r3, [ip, #20]
   5b2a0:	ldr	r0, [ip, #24]
   5b2a4:	sub	r1, r1, r2
   5b2a8:	add	r2, r3, #8
   5b2ac:	cmp	r2, r0
   5b2b0:	add	r1, r1, #1
   5b2b4:	mvn	r0, #13
   5b2b8:	str	r1, [r3]
   5b2bc:	str	r0, [r3, #4]
   5b2c0:	str	r2, [ip, #20]
   5b2c4:	popcc	{r4, pc}
   5b2c8:	mov	r0, ip
   5b2cc:	mov	r1, #1
   5b2d0:	pop	{r4, lr}
   5b2d4:	b	1fd08 <lua_getstack@@Base+0x50>
   5b2d8:	mov	r0, ip
   5b2dc:	pop	{r4, lr}
   5b2e0:	b	5b190 <lua_pushlstring@@Base>
   5b2e4:	mov	r0, ip
   5b2e8:	ldr	r1, [pc, #12]	; 5b2fc <lua_pushlstring@@Base+0x16c>
   5b2ec:	bl	35a48 <lua_error@@Base+0xa8>
   5b2f0:	mov	r0, ip
   5b2f4:	ldr	r1, [pc, #4]	; 5b300 <lua_pushlstring@@Base+0x170>
   5b2f8:	bl	35a48 <lua_error@@Base+0xa8>
   5b2fc:	andeq	r0, r0, r5, lsr #14
   5b300:	andeq	r0, r0, sp, asr #14
   5b304:	push	{r4, r5, r6, r7, r8, lr}
   5b308:	clz	r3, r1
   5b30c:	ldr	r5, [r0, #12]
   5b310:	lsr	r3, r3, #5
   5b314:	cmp	r5, #0
   5b318:	moveq	r4, r3
   5b31c:	movne	r4, #1
   5b320:	cmp	r4, #0
   5b324:	mov	r6, r0
   5b328:	mov	r8, r2
   5b32c:	mov	r7, r1
   5b330:	ldr	r0, [r0, #8]
   5b334:	ldr	r2, [pc, #100]	; 5b3a0 <lua_pushlstring@@Base+0x210>
   5b338:	beq	5b378 <lua_pushlstring@@Base+0x1e8>
   5b33c:	mov	r1, r5
   5b340:	bl	59e60 <luaL_checkstack@@Base>
   5b344:	cmp	r5, #0
   5b348:	ble	5b370 <lua_pushlstring@@Base+0x1e0>
   5b34c:	mov	r4, #0
   5b350:	mov	r1, r4
   5b354:	mov	r3, r8
   5b358:	mov	r2, r7
   5b35c:	mov	r0, r6
   5b360:	add	r4, r4, #1
   5b364:	bl	5b248 <lua_pushlstring@@Base+0xb8>
   5b368:	cmp	r5, r4
   5b36c:	bne	5b350 <lua_pushlstring@@Base+0x1c0>
   5b370:	mov	r0, r5
   5b374:	pop	{r4, r5, r6, r7, r8, pc}
   5b378:	mov	r1, #1
   5b37c:	bl	59e60 <luaL_checkstack@@Base>
   5b380:	mov	r5, #1
   5b384:	mov	r0, r6
   5b388:	mov	r3, r8
   5b38c:	mov	r2, r7
   5b390:	mov	r1, r4
   5b394:	bl	5b248 <lua_pushlstring@@Base+0xb8>
   5b398:	mov	r0, r5
   5b39c:	pop	{r4, r5, r6, r7, r8, pc}
   5b3a0:	andeq	r3, r7, r4, asr #1
   5b3a4:	ldr	r3, [r0, #16]
   5b3a8:	push	{r4, r5, r6, r7, r8, lr}
   5b3ac:	sub	sp, sp, #280	; 0x118
   5b3b0:	ldr	r8, [r3, #-8]
   5b3b4:	str	r0, [sp, #12]
   5b3b8:	ldr	r3, [r8, #24]
   5b3bc:	ldr	r4, [r8, #40]	; 0x28
   5b3c0:	add	r7, r3, #16
   5b3c4:	ldr	r3, [r3, #12]
   5b3c8:	add	r4, r7, r4
   5b3cc:	add	r3, r7, r3
   5b3d0:	cmp	r3, r4
   5b3d4:	ldr	r6, [r8, #32]
   5b3d8:	str	r3, [sp, #8]
   5b3dc:	str	r7, [sp, #4]
   5b3e0:	bcc	5b444 <lua_pushlstring@@Base+0x2b4>
   5b3e4:	add	r6, r6, #16
   5b3e8:	mov	r5, #0
   5b3ec:	b	5b400 <lua_pushlstring@@Base+0x270>
   5b3f0:	ldr	r3, [sp, #8]
   5b3f4:	add	r4, r4, #1
   5b3f8:	cmp	r3, r4
   5b3fc:	bcc	5b444 <lua_pushlstring@@Base+0x2b4>
   5b400:	mov	r2, r6
   5b404:	mov	r1, r4
   5b408:	add	r0, sp, #4
   5b40c:	str	r5, [sp, #20]
   5b410:	str	r5, [sp, #16]
   5b414:	bl	35b14 <lua_error@@Base+0x174>
   5b418:	subs	r2, r0, #0
   5b41c:	beq	5b3f0 <lua_pushlstring@@Base+0x260>
   5b420:	sub	r7, r2, r7
   5b424:	cmp	r2, r4
   5b428:	addeq	r7, r7, #1
   5b42c:	str	r7, [r8, #40]	; 0x28
   5b430:	mov	r1, r4
   5b434:	add	r0, sp, #4
   5b438:	bl	5b304 <lua_pushlstring@@Base+0x174>
   5b43c:	add	sp, sp, #280	; 0x118
   5b440:	pop	{r4, r5, r6, r7, r8, pc}
   5b444:	mov	r0, #0
   5b448:	add	sp, sp, #280	; 0x118
   5b44c:	pop	{r4, r5, r6, r7, r8, pc}
   5b450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5b454:	mov	r9, r1
   5b458:	sub	sp, sp, #284	; 0x11c
   5b45c:	mov	r1, #1
   5b460:	mov	r5, r0
   5b464:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   5b468:	mov	r1, #2
   5b46c:	mov	r7, r0
   5b470:	mov	r0, r5
   5b474:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   5b478:	ldr	r3, [r5, #16]
   5b47c:	ldr	r1, [r5, #20]
   5b480:	add	r2, r3, #16
   5b484:	cmp	r1, r2
   5b488:	mov	r6, r0
   5b48c:	bls	5b49c <lua_pushlstring@@Base+0x30c>
   5b490:	ldr	r3, [r3, #20]
   5b494:	cmn	r3, #1
   5b498:	bne	5b5d8 <lua_pushlstring@@Base+0x448>
   5b49c:	ldr	fp, [r7, #12]
   5b4a0:	mov	r0, #0
   5b4a4:	cmp	r0, fp
   5b4a8:	movcc	r8, r0
   5b4ac:	movcs	r8, fp
   5b4b0:	add	r4, r8, #16
   5b4b4:	cmp	r9, #0
   5b4b8:	beq	5b534 <lua_pushlstring@@Base+0x3a4>
   5b4bc:	ldr	r3, [r5, #16]
   5b4c0:	ldr	sl, [r5, #20]
   5b4c4:	add	r2, r3, #24
   5b4c8:	cmp	sl, r2
   5b4cc:	bhi	5b5c8 <lua_pushlstring@@Base+0x438>
   5b4d0:	mov	r0, r6
   5b4d4:	bl	1adac <_start@@Base+0x79fc>
   5b4d8:	cmp	r0, #0
   5b4dc:	bne	5b534 <lua_pushlstring@@Base+0x3a4>
   5b4e0:	ldr	r5, [r6, #12]
   5b4e4:	sub	r2, fp, r8
   5b4e8:	cmp	r2, r5
   5b4ec:	bcc	5b5b4 <lua_pushlstring@@Base+0x424>
   5b4f0:	cmp	r5, #0
   5b4f4:	add	r0, r7, r4
   5b4f8:	bne	5b60c <lua_pushlstring@@Base+0x47c>
   5b4fc:	cmp	r0, #0
   5b500:	beq	5b5b4 <lua_pushlstring@@Base+0x424>
   5b504:	add	r4, r7, #16
   5b508:	sub	r4, r0, r4
   5b50c:	add	r5, r5, r4
   5b510:	mvn	r3, #13
   5b514:	add	r4, r4, #1
   5b518:	mov	r0, #2
   5b51c:	str	r5, [sl, #-8]
   5b520:	str	r4, [sl, #-16]
   5b524:	str	r3, [sl, #-12]
   5b528:	str	r3, [sl, #-4]
   5b52c:	add	sp, sp, #284	; 0x11c
   5b530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5b534:	ldrb	r3, [r6, #16]
   5b538:	add	r4, r7, r4
   5b53c:	add	sl, r7, #16
   5b540:	cmp	r3, #94	; 0x5e
   5b544:	movne	r8, #0
   5b548:	moveq	r8, #1
   5b54c:	add	r3, fp, #16
   5b550:	addne	r6, r6, #16
   5b554:	addeq	r6, r6, #17
   5b558:	eor	r8, r8, #1
   5b55c:	mov	fp, #0
   5b560:	add	r3, r7, r3
   5b564:	str	r3, [sp, #8]
   5b568:	str	r5, [sp, #12]
   5b56c:	str	sl, [sp, #4]
   5b570:	mov	r1, r4
   5b574:	mov	r2, r6
   5b578:	add	r0, sp, #4
   5b57c:	str	fp, [sp, #20]
   5b580:	str	fp, [sp, #16]
   5b584:	bl	35b14 <lua_error@@Base+0x174>
   5b588:	add	r1, r4, #1
   5b58c:	cmp	r0, #0
   5b590:	bne	5b61c <lua_pushlstring@@Base+0x48c>
   5b594:	ldr	r3, [sp, #8]
   5b598:	cmp	r3, r4
   5b59c:	movls	r3, #0
   5b5a0:	andhi	r3, r8, #1
   5b5a4:	cmp	r3, #0
   5b5a8:	mov	r4, r1
   5b5ac:	bne	5b570 <lua_pushlstring@@Base+0x3e0>
   5b5b0:	ldr	sl, [r5, #20]
   5b5b4:	mov	r0, #1
   5b5b8:	mvn	r3, #0
   5b5bc:	str	r3, [sl, #-4]
   5b5c0:	add	sp, sp, #284	; 0x11c
   5b5c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5b5c8:	ldr	r3, [r3, #28]
   5b5cc:	cmn	r3, #3
   5b5d0:	bls	5b4e0 <lua_pushlstring@@Base+0x350>
   5b5d4:	b	5b4d0 <lua_pushlstring@@Base+0x340>
   5b5d8:	mov	r1, #3
   5b5dc:	mov	r0, r5
   5b5e0:	bl	3638c <luaL_typerror@@Base+0x20>
   5b5e4:	cmp	r0, #0
   5b5e8:	subge	r0, r0, #1
   5b5ec:	ldrlt	fp, [r7, #12]
   5b5f0:	ldrge	fp, [r7, #12]
   5b5f4:	addlt	r0, fp, r0
   5b5f8:	cmp	r0, #0
   5b5fc:	movlt	r4, #16
   5b600:	movlt	r8, #0
   5b604:	blt	5b4b4 <lua_pushlstring@@Base+0x324>
   5b608:	b	5b4a4 <lua_pushlstring@@Base+0x314>
   5b60c:	add	r1, r6, #16
   5b610:	mov	r3, r5
   5b614:	bl	1e698 <_start@@Base+0xb2e8>
   5b618:	b	5b4fc <lua_pushlstring@@Base+0x36c>
   5b61c:	cmp	r9, #0
   5b620:	beq	5b668 <lua_pushlstring@@Base+0x4d8>
   5b624:	ldr	r3, [r5, #20]
   5b628:	add	r7, r7, #15
   5b62c:	add	r1, r3, #16
   5b630:	mvn	ip, #13
   5b634:	sub	sl, r0, sl
   5b638:	mov	r2, #0
   5b63c:	sub	r4, r4, r7
   5b640:	str	r4, [r3]
   5b644:	str	ip, [r3, #4]
   5b648:	add	r0, sp, #4
   5b64c:	str	r1, [r5, #20]
   5b650:	mov	r1, r2
   5b654:	str	sl, [r3, #8]
   5b658:	str	ip, [r3, #12]
   5b65c:	bl	5b304 <lua_pushlstring@@Base+0x174>
   5b660:	add	r0, r0, #2
   5b664:	b	5b5c0 <lua_pushlstring@@Base+0x430>
   5b668:	mov	r2, r0
   5b66c:	mov	r1, r4
   5b670:	add	r0, sp, #4
   5b674:	bl	5b304 <lua_pushlstring@@Base+0x174>
   5b678:	b	5b5c0 <lua_pushlstring@@Base+0x430>
   5b67c:	mov	r1, #0
   5b680:	b	5b450 <lua_pushlstring@@Base+0x2c0>
   5b684:	mov	r1, #1
   5b688:	b	5b450 <lua_pushlstring@@Base+0x2c0>
   5b68c:	ldr	r1, [r0, #16]
   5b690:	ldr	r2, [r0, #20]
   5b694:	push	{r4, lr}
   5b698:	cmp	r1, r2
   5b69c:	bcs	5b6fc <lua_pushlstring@@Base+0x56c>
   5b6a0:	ldr	ip, [r1, #4]
   5b6a4:	mov	r3, r0
   5b6a8:	cmn	ip, #13
   5b6ac:	beq	5b6c8 <lua_pushlstring@@Base+0x538>
   5b6b0:	add	r0, r2, #8
   5b6b4:	mvn	r1, #0
   5b6b8:	str	r0, [r3, #20]
   5b6bc:	str	r1, [r2, #4]
   5b6c0:	mov	r0, #1
   5b6c4:	pop	{r4, pc}
   5b6c8:	ldr	r1, [r1]
   5b6cc:	ldrb	ip, [r1, #6]
   5b6d0:	cmp	ip, #1
   5b6d4:	bne	5b6b0 <lua_pushlstring@@Base+0x520>
   5b6d8:	ldr	r3, [r1, #24]
   5b6dc:	cmp	r3, #0
   5b6e0:	movne	r2, #4
   5b6e4:	ldrne	r1, [pc, #20]	; 5b700 <lua_pushlstring@@Base+0x570>
   5b6e8:	moveq	r2, #11
   5b6ec:	ldreq	r1, [pc, #16]	; 5b704 <lua_pushlstring@@Base+0x574>
   5b6f0:	bl	5b190 <lua_pushlstring@@Base>
   5b6f4:	mov	r0, #1
   5b6f8:	pop	{r4, pc}
   5b6fc:	bl	13100 <pclose@plt+0x64>
   5b700:	ldrdeq	r3, [r7], -r8
   5b704:	andeq	r3, r7, r0, ror #1
   5b708:	ldr	r3, [r0, #16]
   5b70c:	ldr	r2, [r0, #20]
   5b710:	push	{r4, r5, r6, r7, r8, lr}
   5b714:	cmp	r2, r3
   5b718:	mov	r4, r0
   5b71c:	bls	5b72c <lua_pushlstring@@Base+0x59c>
   5b720:	ldr	r2, [r3, #4]
   5b724:	cmn	r2, #7
   5b728:	beq	5b78c <lua_pushlstring@@Base+0x5fc>
   5b72c:	mov	r6, r4
   5b730:	mov	r5, #2
   5b734:	mov	r1, #1
   5b738:	mov	r0, r4
   5b73c:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   5b740:	mov	r1, r5
   5b744:	ldr	r5, [pc, #80]	; 5b79c <lua_pushlstring@@Base+0x60c>
   5b748:	mov	r7, r0
   5b74c:	mov	r0, r4
   5b750:	bl	3638c <luaL_typerror@@Base+0x20>
   5b754:	ldr	r3, [r5, #20]
   5b758:	add	r1, r7, #16
   5b75c:	str	r3, [r5, #12]
   5b760:	str	r6, [r5, #24]
   5b764:	mov	r2, r0
   5b768:	mov	r0, r6
   5b76c:	bl	32644 <luaL_where@@Base+0x12540>
   5b770:	ldr	r1, [r5, #20]
   5b774:	ldr	r2, [r5, #12]
   5b778:	mov	r0, r4
   5b77c:	sub	r2, r2, r1
   5b780:	bl	5b190 <lua_pushlstring@@Base>
   5b784:	mov	r0, #1
   5b788:	pop	{r4, r5, r6, r7, r8, pc}
   5b78c:	ldr	r6, [r3]
   5b790:	mov	r5, #3
   5b794:	mov	r1, #2
   5b798:	b	5b738 <lua_pushlstring@@Base+0x5a8>
   5b79c:	andeq	r4, r8, r4, asr #3

0005b7a0 <lua_pushstring@@Base>:
   5b7a0:	push	{r4, r5, r6, lr}
   5b7a4:	subs	r5, r1, #0
   5b7a8:	mov	r4, r0
   5b7ac:	beq	5b808 <lua_pushstring@@Base+0x68>
   5b7b0:	ldr	r3, [r0, #8]
   5b7b4:	ldrd	r2, [r3, #20]
   5b7b8:	cmp	r2, r3
   5b7bc:	bcs	5b818 <lua_pushstring@@Base+0x78>
   5b7c0:	mov	r0, r5
   5b7c4:	bl	12e80 <strlen@plt>
   5b7c8:	mov	r1, r5
   5b7cc:	mov	r2, r0
   5b7d0:	mov	r0, r4
   5b7d4:	bl	20260 <luaL_where@@Base+0x15c>
   5b7d8:	ldr	r3, [r4, #20]
   5b7dc:	mvn	r2, #4
   5b7e0:	stm	r3, {r0, r2}
   5b7e4:	ldr	r2, [r4, #24]
   5b7e8:	add	r3, r3, #8
   5b7ec:	cmp	r3, r2
   5b7f0:	str	r3, [r4, #20]
   5b7f4:	popcc	{r4, r5, r6, pc}
   5b7f8:	mov	r0, r4
   5b7fc:	mov	r1, #1
   5b800:	pop	{r4, r5, r6, lr}
   5b804:	b	1fd08 <lua_getstack@@Base+0x50>
   5b808:	ldr	r3, [r0, #20]
   5b80c:	mvn	r2, #0
   5b810:	str	r2, [r3, #4]
   5b814:	b	5b7e4 <lua_pushstring@@Base+0x44>
   5b818:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5b81c:	b	5b7c0 <lua_pushstring@@Base+0x20>
   5b820:	ldr	r3, [r0, #16]
   5b824:	ldr	r2, [r0, #20]
   5b828:	push	{r4, lr}
   5b82c:	cmp	r2, r3
   5b830:	bls	5b8b4 <lua_pushstring@@Base+0x114>
   5b834:	ldr	r2, [r3, #4]
   5b838:	cmn	r2, #7
   5b83c:	bne	5b8b4 <lua_pushstring@@Base+0x114>
   5b840:	ldr	r3, [r3]
   5b844:	cmp	r0, r3
   5b848:	beq	5b89c <lua_pushstring@@Base+0xfc>
   5b84c:	ldrb	r2, [r3, #7]
   5b850:	cmp	r2, #1
   5b854:	beq	5b8a4 <lua_pushstring@@Base+0x104>
   5b858:	cmp	r2, #0
   5b85c:	bne	5b88c <lua_pushstring@@Base+0xec>
   5b860:	ldr	r2, [r3, #28]
   5b864:	ldr	ip, [r3, #16]
   5b868:	add	r2, r2, #8
   5b86c:	cmp	ip, r2
   5b870:	bhi	5b8ac <lua_pushstring@@Base+0x10c>
   5b874:	ldr	r2, [r3, #20]
   5b878:	ldr	r3, [pc, #64]	; 5b8c0 <lua_pushstring@@Base+0x120>
   5b87c:	cmp	ip, r2
   5b880:	ldr	r1, [pc, #60]	; 5b8c4 <lua_pushstring@@Base+0x124>
   5b884:	moveq	r1, r3
   5b888:	b	5b890 <lua_pushstring@@Base+0xf0>
   5b88c:	ldr	r1, [pc, #44]	; 5b8c0 <lua_pushstring@@Base+0x120>
   5b890:	bl	5b7a0 <lua_pushstring@@Base>
   5b894:	mov	r0, #1
   5b898:	pop	{r4, pc}
   5b89c:	ldr	r1, [pc, #36]	; 5b8c8 <lua_pushstring@@Base+0x128>
   5b8a0:	b	5b890 <lua_pushstring@@Base+0xf0>
   5b8a4:	ldr	r1, [pc, #24]	; 5b8c4 <lua_pushstring@@Base+0x124>
   5b8a8:	b	5b890 <lua_pushstring@@Base+0xf0>
   5b8ac:	ldr	r1, [pc, #24]	; 5b8cc <lua_pushstring@@Base+0x12c>
   5b8b0:	b	5b890 <lua_pushstring@@Base+0xf0>
   5b8b4:	ldr	r2, [pc, #20]	; 5b8d0 <lua_pushstring@@Base+0x130>
   5b8b8:	mov	r1, #1
   5b8bc:	bl	361d0 <luaL_argerror@@Base+0x8>
   5b8c0:	andeq	r3, r7, r0, lsl #2
   5b8c4:	strdeq	r3, [r7], -r4
   5b8c8:	andeq	r3, r7, ip, ror #1
   5b8cc:	andeq	r3, r7, r8, lsl #2
   5b8d0:	andeq	r0, r0, r6, lsr r2
   5b8d4:	ldr	r3, [r0, #16]
   5b8d8:	ldr	r2, [r0, #20]
   5b8dc:	push	{r4, r5, r6, lr}
   5b8e0:	cmp	r3, r2
   5b8e4:	mov	r4, r0
   5b8e8:	bcs	5b8f8 <lua_pushstring@@Base+0x158>
   5b8ec:	ldr	r3, [r3, #4]
   5b8f0:	cmn	r3, #1
   5b8f4:	bne	5b92c <lua_pushstring@@Base+0x18c>
   5b8f8:	mov	r5, #0
   5b8fc:	ldr	r3, [pc, #64]	; 5b944 <lua_pushstring@@Base+0x1a4>
   5b900:	mov	r2, #6
   5b904:	mov	r1, #2
   5b908:	mov	r0, r4
   5b90c:	bl	57ed0 <lua_gethookcount@@Base+0x4850>
   5b910:	mov	r1, r5
   5b914:	bl	12f7c <setlocale@plt>
   5b918:	mov	r1, r0
   5b91c:	mov	r0, r4
   5b920:	bl	5b7a0 <lua_pushstring@@Base>
   5b924:	mov	r0, #1
   5b928:	pop	{r4, r5, r6, pc}
   5b92c:	mov	r1, #1
   5b930:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   5b934:	cmp	r0, #0
   5b938:	beq	5b8f8 <lua_pushstring@@Base+0x158>
   5b93c:	add	r5, r0, #16
   5b940:	b	5b8fc <lua_pushstring@@Base+0x15c>
   5b944:	andeq	r3, r7, r0, lsl r1
   5b948:	push	{r4, lr}
   5b94c:	mov	r2, #0
   5b950:	mov	r1, #1
   5b954:	mov	r4, r0
   5b958:	bl	5ad0c <luaL_checklstring@@Base>
   5b95c:	bl	12db4 <getenv@plt>
   5b960:	mov	r1, r0
   5b964:	mov	r0, r4
   5b968:	bl	5b7a0 <lua_pushstring@@Base>
   5b96c:	mov	r0, #1
   5b970:	pop	{r4, pc}
   5b974:	ldr	r3, [pc, #76]	; 5b9c8 <lua_pushstring@@Base+0x228>
   5b978:	push	{r4, r5, lr}
   5b97c:	mov	r5, r0
   5b980:	ldm	r3, {r0, r1, r2, r3}
   5b984:	sub	sp, sp, #20
   5b988:	mov	r4, sp
   5b98c:	stm	r4, {r0, r1, r2, r3}
   5b990:	mov	r0, r4
   5b994:	bl	12dc0 <mkstemp64@plt>
   5b998:	cmn	r0, #1
   5b99c:	beq	5b9bc <lua_pushstring@@Base+0x21c>
   5b9a0:	bl	13060 <close@plt>
   5b9a4:	mov	r0, r5
   5b9a8:	mov	r1, r4
   5b9ac:	bl	5b7a0 <lua_pushstring@@Base>
   5b9b0:	mov	r0, #1
   5b9b4:	add	sp, sp, #20
   5b9b8:	pop	{r4, r5, pc}
   5b9bc:	mov	r0, r5
   5b9c0:	ldr	r1, [pc, #4]	; 5b9cc <lua_pushstring@@Base+0x22c>
   5b9c4:	bl	35a48 <lua_error@@Base+0xa8>
   5b9c8:	andeq	r3, r7, ip, lsr r1
   5b9cc:	andeq	r0, r0, r8, lsl #12
   5b9d0:	ldr	r3, [r0, #16]
   5b9d4:	ldr	r2, [r0, #20]
   5b9d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   5b9dc:	cmp	r3, r2
   5b9e0:	sub	sp, sp, #108	; 0x6c
   5b9e4:	mov	r4, r0
   5b9e8:	bcs	5b9f8 <lua_pushstring@@Base+0x258>
   5b9ec:	ldr	r2, [r3, #4]
   5b9f0:	cmn	r2, #7
   5b9f4:	beq	5ba90 <lua_pushstring@@Base+0x2f0>
   5b9f8:	mov	r5, r4
   5b9fc:	mov	r7, #1
   5ba00:	mov	r6, #0
   5ba04:	mov	r1, r7
   5ba08:	mov	r0, r4
   5ba0c:	bl	3638c <luaL_typerror@@Base+0x20>
   5ba10:	add	r2, sp, #4
   5ba14:	mov	r1, r0
   5ba18:	mov	r0, r5
   5ba1c:	bl	1fcb8 <lua_getstack@@Base>
   5ba20:	cmp	r0, #0
   5ba24:	beq	5baa0 <lua_pushstring@@Base+0x300>
   5ba28:	add	r3, r6, #536870914	; 0x20000002
   5ba2c:	ldr	r2, [r4, #16]
   5ba30:	ldr	r1, [r4, #20]
   5ba34:	lsl	r3, r3, #3
   5ba38:	add	r0, r2, r3
   5ba3c:	cmp	r0, r1
   5ba40:	add	r1, r6, #3
   5ba44:	bcs	5bab0 <lua_pushstring@@Base+0x310>
   5ba48:	ldrd	r8, [r2, r3]
   5ba4c:	ldr	r3, [r5, #20]
   5ba50:	add	r1, r6, #2
   5ba54:	add	r2, r3, #8
   5ba58:	str	r2, [r5, #20]
   5ba5c:	mov	r0, r4
   5ba60:	strd	r8, [r3]
   5ba64:	bl	3638c <luaL_typerror@@Base+0x20>
   5ba68:	add	r1, sp, #4
   5ba6c:	mov	r2, r0
   5ba70:	mov	r0, r5
   5ba74:	bl	1fc68 <lua_setlocal@@Base>
   5ba78:	mov	r1, r0
   5ba7c:	mov	r0, r4
   5ba80:	bl	5b7a0 <lua_pushstring@@Base>
   5ba84:	mov	r0, #1
   5ba88:	add	sp, sp, #108	; 0x6c
   5ba8c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   5ba90:	ldr	r5, [r3]
   5ba94:	mov	r7, #2
   5ba98:	mov	r6, #1
   5ba9c:	b	5ba04 <lua_pushstring@@Base+0x264>
   5baa0:	mov	r1, r7
   5baa4:	mov	r0, r4
   5baa8:	ldr	r2, [pc, #12]	; 5babc <lua_pushstring@@Base+0x31c>
   5baac:	bl	361d0 <luaL_argerror@@Base+0x8>
   5bab0:	mov	r0, r4
   5bab4:	ldr	r2, [pc, #4]	; 5bac0 <lua_pushstring@@Base+0x320>
   5bab8:	bl	361d0 <luaL_argerror@@Base+0x8>
   5babc:	andeq	r0, r0, fp, ror #8
   5bac0:	andeq	r0, r0, r7, lsr #4
   5bac4:	ldr	r3, [r0, #16]
   5bac8:	ldr	r2, [r0, #20]
   5bacc:	push	{r4, r5, r6, r7, r8, r9, lr}
   5bad0:	cmp	r3, r2
   5bad4:	sub	sp, sp, #108	; 0x6c
   5bad8:	mov	r4, r0
   5badc:	bcs	5baec <lua_pushstring@@Base+0x34c>
   5bae0:	ldr	r2, [r3, #4]
   5bae4:	cmn	r2, #7
   5bae8:	beq	5bbe0 <lua_pushstring@@Base+0x440>
   5baec:	mov	r5, #0
   5baf0:	mov	r8, r5
   5baf4:	mov	r6, r5
   5baf8:	mov	r7, r4
   5bafc:	mov	r1, #2
   5bb00:	mov	r0, r4
   5bb04:	bl	3638c <luaL_typerror@@Base+0x20>
   5bb08:	ldr	r3, [r4, #16]
   5bb0c:	add	r5, r3, r5
   5bb10:	ldr	r2, [r5, #4]
   5bb14:	cmn	r2, #9
   5bb18:	mov	r9, r0
   5bb1c:	beq	5bbac <lua_pushstring@@Base+0x40c>
   5bb20:	add	r6, r6, #1
   5bb24:	mov	r1, r6
   5bb28:	mov	r0, r4
   5bb2c:	bl	3638c <luaL_typerror@@Base+0x20>
   5bb30:	add	r2, sp, #4
   5bb34:	mov	r1, r0
   5bb38:	mov	r0, r7
   5bb3c:	bl	1fcb8 <lua_getstack@@Base>
   5bb40:	cmp	r0, #0
   5bb44:	beq	5bbf8 <lua_pushstring@@Base+0x458>
   5bb48:	mov	r2, r9
   5bb4c:	add	r1, sp, #4
   5bb50:	mov	r0, r7
   5bb54:	bl	52248 <lua_getlocal@@Base>
   5bb58:	subs	r5, r0, #0
   5bb5c:	bne	5bb78 <lua_pushstring@@Base+0x3d8>
   5bb60:	ldr	r3, [r4, #20]
   5bb64:	mvn	r2, #0
   5bb68:	mov	r0, #1
   5bb6c:	str	r2, [r3, #-4]
   5bb70:	add	sp, sp, #108	; 0x6c
   5bb74:	pop	{r4, r5, r6, r7, r8, r9, pc}
   5bb78:	mov	r2, #1
   5bb7c:	mov	r0, r7
   5bb80:	mov	r1, r4
   5bb84:	bl	59e90 <lua_xmove@@Base>
   5bb88:	mov	r1, r5
   5bb8c:	mov	r0, r4
   5bb90:	bl	5b7a0 <lua_pushstring@@Base>
   5bb94:	mov	r0, r4
   5bb98:	mvn	r1, #1
   5bb9c:	bl	5a100 <lua_pushvalue@@Base>
   5bba0:	mov	r0, #2
   5bba4:	add	sp, sp, #108	; 0x6c
   5bba8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   5bbac:	add	r8, r8, #1
   5bbb0:	mov	r2, r0
   5bbb4:	add	r3, r3, r8, lsl #3
   5bbb8:	str	r3, [r4, #20]
   5bbbc:	mov	r1, #0
   5bbc0:	mov	r0, r4
   5bbc4:	bl	52248 <lua_getlocal@@Base>
   5bbc8:	mov	r1, r0
   5bbcc:	mov	r0, r4
   5bbd0:	bl	5b7a0 <lua_pushstring@@Base>
   5bbd4:	mov	r0, #1
   5bbd8:	add	sp, sp, #108	; 0x6c
   5bbdc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   5bbe0:	mov	r8, #1
   5bbe4:	ldr	r7, [r3]
   5bbe8:	mov	r6, r8
   5bbec:	mov	r5, #8
   5bbf0:	mov	r1, #3
   5bbf4:	b	5bb00 <lua_pushstring@@Base+0x360>
   5bbf8:	mov	r1, r6
   5bbfc:	mov	r0, r4
   5bc00:	ldr	r2, [pc]	; 5bc08 <lua_pushstring@@Base+0x468>
   5bc04:	bl	361d0 <luaL_argerror@@Base+0x8>
   5bc08:	andeq	r0, r0, fp, ror #8

0005bc0c <lua_pushvfstring@@Base>:
   5bc0c:	ldr	r3, [r0, #8]
   5bc10:	push	{r4, lr}
   5bc14:	mov	r4, r0
   5bc18:	ldr	ip, [r3, #20]
   5bc1c:	ldr	r3, [r3, #24]
   5bc20:	sub	sp, sp, #8
   5bc24:	cmp	ip, r3
   5bc28:	bcs	5bc3c <lua_pushvfstring@@Base+0x30>
   5bc2c:	mov	r0, r4
   5bc30:	add	sp, sp, #8
   5bc34:	pop	{r4, lr}
   5bc38:	b	1fe24 <lua_getstack@@Base+0x16c>
   5bc3c:	stm	sp, {r1, r2}
   5bc40:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5bc44:	ldm	sp, {r1, r2}
   5bc48:	mov	r0, r4
   5bc4c:	add	sp, sp, #8
   5bc50:	pop	{r4, lr}
   5bc54:	b	1fe24 <lua_getstack@@Base+0x16c>

0005bc58 <lua_pushfstring@@Base>:
   5bc58:	push	{r1, r2, r3}
   5bc5c:	ldr	r3, [r0, #8]
   5bc60:	push	{r4, lr}
   5bc64:	mov	r4, r0
   5bc68:	ldrd	r2, [r3, #20]
   5bc6c:	sub	sp, sp, #12
   5bc70:	cmp	r2, r3
   5bc74:	bcs	5bca0 <lua_pushfstring@@Base+0x48>
   5bc78:	add	r3, sp, #24
   5bc7c:	mov	r0, r4
   5bc80:	mov	r2, r3
   5bc84:	ldr	r1, [sp, #20]
   5bc88:	str	r3, [sp, #4]
   5bc8c:	bl	1fe24 <lua_getstack@@Base+0x16c>
   5bc90:	add	sp, sp, #12
   5bc94:	pop	{r4, lr}
   5bc98:	add	sp, sp, #12
   5bc9c:	bx	lr
   5bca0:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5bca4:	b	5bc78 <lua_pushfstring@@Base+0x20>
   5bca8:	push	{r4, lr}
   5bcac:	mov	r4, r0
   5bcb0:	bl	37240 <luaL_typerror@@Base+0xed4>
   5bcb4:	ldr	r2, [r0]
   5bcb8:	mov	r0, r4
   5bcbc:	cmp	r2, #0
   5bcc0:	beq	5bcd4 <lua_pushfstring@@Base+0x7c>
   5bcc4:	ldr	r1, [pc, #28]	; 5bce8 <lua_pushfstring@@Base+0x90>
   5bcc8:	bl	5bc58 <lua_pushfstring@@Base>
   5bccc:	mov	r0, #1
   5bcd0:	pop	{r4, pc}
   5bcd4:	mov	r2, #13
   5bcd8:	ldr	r1, [pc, #12]	; 5bcec <lua_pushfstring@@Base+0x94>
   5bcdc:	bl	5b190 <lua_pushlstring@@Base>
   5bce0:	mov	r0, #1
   5bce4:	pop	{r4, pc}
   5bce8:	andeq	r3, r7, ip, asr #2
   5bcec:	andeq	r3, r7, r8, asr r1
   5bcf0:	push	{r4, r5, r6, lr}
   5bcf4:	mov	r4, r0
   5bcf8:	mov	r6, r1
   5bcfc:	bl	12eb0 <__errno_location@plt>
   5bd00:	ldr	r3, [r4, #20]
   5bd04:	mvn	r2, #0
   5bd08:	add	r1, r3, #8
   5bd0c:	cmp	r6, #0
   5bd10:	ldr	r5, [r0]
   5bd14:	str	r1, [r4, #20]
   5bd18:	mov	r0, r5
   5bd1c:	str	r2, [r3, #4]
   5bd20:	beq	5bd68 <lua_pushfstring@@Base+0x110>
   5bd24:	bl	12de4 <strerror@plt>
   5bd28:	mov	r2, r6
   5bd2c:	ldr	r1, [pc, #76]	; 5bd80 <lua_pushfstring@@Base+0x128>
   5bd30:	mov	r3, r0
   5bd34:	mov	r0, r4
   5bd38:	bl	5bc58 <lua_pushfstring@@Base>
   5bd3c:	ldr	r3, [r4, #8]
   5bd40:	ldr	r1, [r4, #20]
   5bd44:	mvn	ip, #13
   5bd48:	ldr	r2, [r3, #552]	; 0x228
   5bd4c:	add	r0, r1, #8
   5bd50:	bic	r2, r2, #16
   5bd54:	str	r0, [r4, #20]
   5bd58:	stm	r1, {r5, ip}
   5bd5c:	mov	r0, #3
   5bd60:	str	r2, [r3, #552]	; 0x228
   5bd64:	pop	{r4, r5, r6, pc}
   5bd68:	bl	12de4 <strerror@plt>
   5bd6c:	ldr	r1, [pc, #16]	; 5bd84 <lua_pushfstring@@Base+0x12c>
   5bd70:	mov	r2, r0
   5bd74:	mov	r0, r4
   5bd78:	bl	5bc58 <lua_pushfstring@@Base>
   5bd7c:	b	5bd3c <lua_pushfstring@@Base+0xe4>
   5bd80:	strdeq	r3, [r7], -r8
   5bd84:	strdeq	r3, [r7], -ip
   5bd88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5bd8c:	sub	sp, sp, #20
   5bd90:	ldr	r8, [r0, #20]
   5bd94:	ldr	r3, [r0, #16]
   5bd98:	mov	r4, r0
   5bd9c:	sub	r8, r8, r3
   5bda0:	mov	r0, r1
   5bda4:	rsb	r8, r2, r8, asr #3
   5bda8:	mov	fp, r1
   5bdac:	mov	r5, r2
   5bdb0:	str	r2, [sp]
   5bdb4:	bl	12fb8 <clearerr@plt>
   5bdb8:	cmp	r8, #0
   5bdbc:	bne	5be00 <lua_pushfstring@@Base+0x1a8>
   5bdc0:	mov	r2, #1
   5bdc4:	mov	r1, fp
   5bdc8:	mov	r0, r4
   5bdcc:	bl	3f308 <luaL_typerror@@Base+0x8f9c>
   5bdd0:	add	r9, r5, #1
   5bdd4:	mov	sl, r0
   5bdd8:	mov	r0, fp
   5bddc:	bl	12cac <ferror@plt>
   5bde0:	cmp	r0, #0
   5bde4:	bne	5c030 <lua_pushfstring@@Base+0x3d8>
   5bde8:	cmp	sl, #0
   5bdec:	beq	5bee8 <lua_pushfstring@@Base+0x290>
   5bdf0:	ldr	r3, [sp]
   5bdf4:	sub	r0, r9, r3
   5bdf8:	add	sp, sp, #20
   5bdfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5be00:	add	r1, r8, #20
   5be04:	ldr	r2, [pc, #816]	; 5c13c <lua_pushfstring@@Base+0x4e4>
   5be08:	mov	r0, r4
   5be0c:	bl	59e60 <luaL_checkstack@@Base>
   5be10:	ldr	r9, [sp]
   5be14:	sub	r8, r8, #1
   5be18:	mov	sl, #1
   5be1c:	lsl	r5, r9, #3
   5be20:	ldr	r2, [r4, #16]
   5be24:	add	r3, r2, r5
   5be28:	ldr	r3, [r3, #4]
   5be2c:	cmn	r3, #5
   5be30:	beq	5bef8 <lua_pushfstring@@Base+0x2a0>
   5be34:	add	r9, r9, #1
   5be38:	cmn	r3, #14
   5be3c:	mov	r1, r9
   5be40:	mov	r0, r4
   5be44:	bhi	5c124 <lua_pushfstring@@Base+0x4cc>
   5be48:	bl	3638c <luaL_typerror@@Base+0x20>
   5be4c:	subs	r2, r0, #0
   5be50:	beq	5bfbc <lua_pushfstring@@Base+0x364>
   5be54:	ldr	r0, [r4, #8]
   5be58:	ldr	r5, [r0, #88]	; 0x58
   5be5c:	ldr	r3, [r0, #84]	; 0x54
   5be60:	str	r4, [r0, #92]	; 0x5c
   5be64:	sub	r3, r3, r5
   5be68:	cmp	r2, r3
   5be6c:	bhi	5c0a4 <lua_pushfstring@@Base+0x44c>
   5be70:	mov	r3, fp
   5be74:	mov	r1, #1
   5be78:	mov	r0, r5
   5be7c:	bl	12d90 <fread@plt>
   5be80:	ldr	r6, [r4, #20]
   5be84:	mov	r1, r5
   5be88:	add	r3, r6, #8
   5be8c:	str	r3, [r4, #20]
   5be90:	mov	r2, r0
   5be94:	mov	sl, r0
   5be98:	mov	r0, r4
   5be9c:	bl	20260 <luaL_where@@Base+0x15c>
   5bea0:	ldr	r3, [r4, #8]
   5bea4:	mvn	r2, #4
   5bea8:	str	r2, [r6, #4]
   5beac:	ldrd	r2, [r3, #20]
   5beb0:	cmp	r2, r3
   5beb4:	str	r0, [r6]
   5beb8:	bcs	5c098 <lua_pushfstring@@Base+0x440>
   5bebc:	adds	sl, sl, #0
   5bec0:	movne	sl, #1
   5bec4:	cmp	r8, #0
   5bec8:	sub	r8, r8, #1
   5becc:	beq	5bdd8 <lua_pushfstring@@Base+0x180>
   5bed0:	cmp	sl, #0
   5bed4:	bne	5be1c <lua_pushfstring@@Base+0x1c4>
   5bed8:	mov	r0, fp
   5bedc:	bl	12cac <ferror@plt>
   5bee0:	cmp	r0, #0
   5bee4:	bne	5c030 <lua_pushfstring@@Base+0x3d8>
   5bee8:	ldr	r3, [r4, #20]
   5beec:	mvn	r2, #0
   5bef0:	str	r2, [r3, #-4]
   5bef4:	b	5bdf0 <lua_pushfstring@@Base+0x198>
   5bef8:	ldr	r3, [r2, r5]
   5befc:	add	r9, r9, #1
   5bf00:	ldrb	r2, [r3, #16]
   5bf04:	cmp	r2, #42	; 0x2a
   5bf08:	ldrbeq	r2, [r3, #17]
   5bf0c:	cmp	r2, #110	; 0x6e
   5bf10:	beq	5c044 <lua_pushfstring@@Base+0x3ec>
   5bf14:	bic	r3, r2, #32
   5bf18:	cmp	r3, #76	; 0x4c
   5bf1c:	beq	5c078 <lua_pushfstring@@Base+0x420>
   5bf20:	cmp	r2, #97	; 0x61
   5bf24:	bne	5c12c <lua_pushfstring@@Base+0x4d4>
   5bf28:	mov	r5, #0
   5bf2c:	mov	r6, #8192	; 0x2000
   5bf30:	b	5bf38 <lua_pushfstring@@Base+0x2e0>
   5bf34:	lsl	r6, r6, #1
   5bf38:	ldr	r0, [r4, #8]
   5bf3c:	ldr	r7, [r0, #88]	; 0x58
   5bf40:	ldr	r3, [r0, #84]	; 0x54
   5bf44:	str	r4, [r0, #92]	; 0x5c
   5bf48:	sub	r3, r3, r7
   5bf4c:	cmp	r3, r6
   5bf50:	bcc	5bffc <lua_pushfstring@@Base+0x3a4>
   5bf54:	sub	r2, r6, r5
   5bf58:	add	r0, r7, r5
   5bf5c:	mov	r3, fp
   5bf60:	mov	r1, #1
   5bf64:	bl	12d90 <fread@plt>
   5bf68:	add	r5, r5, r0
   5bf6c:	cmp	r6, r5
   5bf70:	beq	5bf34 <lua_pushfstring@@Base+0x2dc>
   5bf74:	ldr	r6, [r4, #20]
   5bf78:	mov	r2, r5
   5bf7c:	add	r3, r6, #8
   5bf80:	str	r3, [r4, #20]
   5bf84:	mov	r1, r7
   5bf88:	mov	r0, r4
   5bf8c:	bl	20260 <luaL_where@@Base+0x15c>
   5bf90:	ldr	r3, [r4, #8]
   5bf94:	mvn	r2, #4
   5bf98:	str	r2, [r6, #4]
   5bf9c:	ldrd	r2, [r3, #20]
   5bfa0:	cmp	r2, r3
   5bfa4:	str	r0, [r6]
   5bfa8:	bcs	5c118 <lua_pushfstring@@Base+0x4c0>
   5bfac:	cmp	r8, #0
   5bfb0:	sub	r8, r8, #1
   5bfb4:	bne	5be1c <lua_pushfstring@@Base+0x1c4>
   5bfb8:	b	5bdd8 <lua_pushfstring@@Base+0x180>
   5bfbc:	mov	r0, fp
   5bfc0:	bl	12cf4 <_IO_getc@plt>
   5bfc4:	mov	r1, fp
   5bfc8:	mov	sl, r0
   5bfcc:	bl	12e98 <ungetc@plt>
   5bfd0:	ldr	r3, [r4, #20]
   5bfd4:	ldr	r2, [r4, #8]
   5bfd8:	add	r1, r3, #8
   5bfdc:	str	r1, [r4, #20]
   5bfe0:	add	r2, r2, #96	; 0x60
   5bfe4:	adds	sl, sl, #1
   5bfe8:	mvn	r1, #4
   5bfec:	movne	sl, #1
   5bff0:	str	r2, [r3]
   5bff4:	str	r1, [r3, #4]
   5bff8:	b	5bec4 <lua_pushfstring@@Base+0x26c>
   5bffc:	add	r0, r0, #80	; 0x50
   5c000:	mov	r1, r6
   5c004:	bl	333cc <luaL_where@@Base+0x132c8>
   5c008:	mov	r7, r0
   5c00c:	b	5bf54 <lua_pushfstring@@Base+0x2fc>
   5c010:	cmn	r8, #1
   5c014:	str	r0, [r4, #20]
   5c018:	strd	r2, [r1]
   5c01c:	bne	5c110 <lua_pushfstring@@Base+0x4b8>
   5c020:	mov	r0, fp
   5c024:	bl	12cac <ferror@plt>
   5c028:	cmp	r0, #0
   5c02c:	beq	5bdf0 <lua_pushfstring@@Base+0x198>
   5c030:	mov	r0, r4
   5c034:	mov	r1, #0
   5c038:	bl	5bcf0 <lua_pushfstring@@Base+0x98>
   5c03c:	add	sp, sp, #20
   5c040:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5c044:	add	r2, sp, #8
   5c048:	ldr	r1, [pc, #240]	; 5c140 <lua_pushfstring@@Base+0x4e8>
   5c04c:	mov	r0, fp
   5c050:	bl	12ef8 <fscanf@plt>
   5c054:	cmp	r0, #1
   5c058:	mov	sl, r0
   5c05c:	beq	5c0c0 <lua_pushfstring@@Base+0x468>
   5c060:	ldr	r3, [r4, #20]
   5c064:	mvn	r2, #0
   5c068:	add	r1, r3, #8
   5c06c:	str	r1, [r4, #20]
   5c070:	str	r2, [r3, #4]
   5c074:	b	5bed8 <lua_pushfstring@@Base+0x280>
   5c078:	sub	r2, r2, #108	; 0x6c
   5c07c:	mov	r1, fp
   5c080:	clz	r2, r2
   5c084:	mov	r0, r4
   5c088:	lsr	r2, r2, #5
   5c08c:	bl	3f308 <luaL_typerror@@Base+0x8f9c>
   5c090:	mov	sl, r0
   5c094:	b	5bec4 <lua_pushfstring@@Base+0x26c>
   5c098:	mov	r0, r4
   5c09c:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5c0a0:	b	5bebc <lua_pushfstring@@Base+0x264>
   5c0a4:	mov	r1, r2
   5c0a8:	add	r0, r0, #80	; 0x50
   5c0ac:	str	r2, [sp, #4]
   5c0b0:	bl	333cc <luaL_where@@Base+0x132c8>
   5c0b4:	ldr	r2, [sp, #4]
   5c0b8:	mov	r5, r0
   5c0bc:	b	5be70 <lua_pushfstring@@Base+0x218>
   5c0c0:	ldrd	r2, [sp, #8]
   5c0c4:	ldr	r1, [r4, #20]
   5c0c8:	sub	r8, r8, #1
   5c0cc:	vmov	d7, r2, r3
   5c0d0:	vmov	d5, r2, r3
   5c0d4:	add	r0, r1, #8
   5c0d8:	vcvt.s32.f64	s15, d7
   5c0dc:	vcvt.f64.s32	d6, s15
   5c0e0:	vcmp.f64	d5, d6
   5c0e4:	vmrs	APSR_nzcv, fpscr
   5c0e8:	bne	5c010 <lua_pushfstring@@Base+0x3b8>
   5c0ec:	cmp	r3, #-2147483648	; 0x80000000
   5c0f0:	cmpeq	r2, #0
   5c0f4:	beq	5c010 <lua_pushfstring@@Base+0x3b8>
   5c0f8:	mvn	r3, #13
   5c0fc:	cmn	r8, #1
   5c100:	str	r0, [r4, #20]
   5c104:	vstr	s15, [r1]
   5c108:	str	r3, [r1, #4]
   5c10c:	beq	5c020 <lua_pushfstring@@Base+0x3c8>
   5c110:	add	r5, r5, #8
   5c114:	b	5be20 <lua_pushfstring@@Base+0x1c8>
   5c118:	mov	r0, r4
   5c11c:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5c120:	b	5bfac <lua_pushfstring@@Base+0x354>
   5c124:	ldr	r2, [pc, #24]	; 5c144 <lua_pushfstring@@Base+0x4ec>
   5c128:	bl	361d0 <luaL_argerror@@Base+0x8>
   5c12c:	mov	r1, r9
   5c130:	mov	r0, r4
   5c134:	ldr	r2, [pc, #12]	; 5c148 <lua_pushfstring@@Base+0x4f0>
   5c138:	bl	361d0 <luaL_argerror@@Base+0x8>
   5c13c:	andeq	r3, r7, r8, ror #2
   5c140:	andeq	r3, r7, ip, ror r1
   5c144:	andeq	r0, r0, ip, lsl #9
   5c148:	andeq	r0, r0, pc, lsr #9
   5c14c:	ldr	r3, [r0, #8]
   5c150:	ldr	r3, [r3, #376]	; 0x178
   5c154:	ldr	r1, [r3, #24]
   5c158:	cmp	r1, #0
   5c15c:	beq	5c168 <lua_pushfstring@@Base+0x510>
   5c160:	mov	r2, #0
   5c164:	b	5bd88 <lua_pushfstring@@Base+0x130>
   5c168:	push	{r4, lr}
   5c16c:	mov	r1, #1520	; 0x5f0
   5c170:	bl	35a48 <lua_error@@Base+0xa8>
   5c174:	push	{r4, lr}
   5c178:	mov	r4, r0
   5c17c:	bl	37288 <luaL_typerror@@Base+0xf1c>
   5c180:	mov	r2, #1
   5c184:	ldr	r1, [r0]
   5c188:	mov	r0, r4
   5c18c:	pop	{r4, lr}
   5c190:	b	5bd88 <lua_pushfstring@@Base+0x130>
   5c194:	ldr	r3, [r1, #4]
   5c198:	push	{r4, r5, r6, lr}
   5c19c:	ands	r3, r3, #3
   5c1a0:	mov	r4, r1
   5c1a4:	mov	r5, r0
   5c1a8:	beq	5c214 <lua_pushfstring@@Base+0x5bc>
   5c1ac:	cmp	r3, #1
   5c1b0:	bne	5c1ec <lua_pushfstring@@Base+0x594>
   5c1b4:	ldr	r0, [r1]
   5c1b8:	bl	1309c <pclose@plt>
   5c1bc:	mov	r3, #0
   5c1c0:	str	r3, [r4]
   5c1c4:	adds	r0, r0, #1
   5c1c8:	movne	r0, #1
   5c1cc:	cmp	r0, #0
   5c1d0:	beq	5c234 <lua_pushfstring@@Base+0x5dc>
   5c1d4:	ldr	r3, [r5, #20]
   5c1d8:	mvn	r2, #2
   5c1dc:	add	r1, r3, #8
   5c1e0:	str	r1, [r5, #20]
   5c1e4:	str	r2, [r3, #4]
   5c1e8:	pop	{r4, r5, r6, pc}
   5c1ec:	ldr	r3, [r0, #20]
   5c1f0:	mvn	r1, #0
   5c1f4:	add	r2, r3, #8
   5c1f8:	str	r2, [r0, #20]
   5c1fc:	str	r1, [r3, #4]
   5c200:	mov	r2, #26
   5c204:	ldr	r1, [pc, #56]	; 5c244 <lua_pushfstring@@Base+0x5ec>
   5c208:	bl	5b190 <lua_pushlstring@@Base>
   5c20c:	mov	r0, #2
   5c210:	pop	{r4, r5, r6, pc}
   5c214:	ldr	r0, [r1]
   5c218:	bl	12f4c <fclose@plt>
   5c21c:	mov	r3, #0
   5c220:	str	r3, [r4]
   5c224:	clz	r0, r0
   5c228:	lsr	r0, r0, #5
   5c22c:	cmp	r0, #0
   5c230:	bne	5c1d4 <lua_pushfstring@@Base+0x57c>
   5c234:	mov	r1, r0
   5c238:	mov	r0, r5
   5c23c:	pop	{r4, r5, r6, lr}
   5c240:	b	5bcf0 <lua_pushfstring@@Base+0x98>
   5c244:	andeq	r3, r7, r0, lsl #3
   5c248:	ldr	r2, [r0, #16]
   5c24c:	push	{r4, r5, r6, r7, r8, lr}
   5c250:	ldr	r6, [r2, #-8]
   5c254:	ldr	r5, [r6, #24]
   5c258:	ldrb	r3, [r6, #7]
   5c25c:	ldr	r1, [r5, #24]
   5c260:	cmp	r1, #0
   5c264:	beq	5c334 <lua_pushfstring@@Base+0x6dc>
   5c268:	sub	r3, r3, #1
   5c26c:	cmp	r3, #0
   5c270:	mov	r4, r0
   5c274:	str	r2, [r0, #20]
   5c278:	bne	5c2b4 <lua_pushfstring@@Base+0x65c>
   5c27c:	mov	r2, #0
   5c280:	mov	r0, r4
   5c284:	bl	5bd88 <lua_pushfstring@@Base+0x130>
   5c288:	mov	r6, r0
   5c28c:	ldr	r0, [r5, #24]
   5c290:	bl	12cac <ferror@plt>
   5c294:	subs	r7, r0, #0
   5c298:	bne	5c320 <lua_pushfstring@@Base+0x6c8>
   5c29c:	ldr	r3, [r4, #16]
   5c2a0:	ldr	r3, [r3, #4]
   5c2a4:	cmn	r3, #1
   5c2a8:	beq	5c2ec <lua_pushfstring@@Base+0x694>
   5c2ac:	mov	r0, r6
   5c2b0:	pop	{r4, r5, r6, r7, r8, pc}
   5c2b4:	ldr	r1, [r0, #24]
   5c2b8:	lsl	r7, r3, #3
   5c2bc:	sub	r1, r1, r2
   5c2c0:	cmp	r1, r7
   5c2c4:	ble	5c310 <lua_pushfstring@@Base+0x6b8>
   5c2c8:	add	r1, r6, #32
   5c2cc:	mov	r0, r2
   5c2d0:	mov	r2, r7
   5c2d4:	bl	12cb8 <memcpy@plt>
   5c2d8:	ldr	r2, [r4, #20]
   5c2dc:	ldr	r1, [r5, #24]
   5c2e0:	add	r2, r2, r7
   5c2e4:	str	r2, [r4, #20]
   5c2e8:	b	5c27c <lua_pushfstring@@Base+0x624>
   5c2ec:	ldr	r3, [r5, #28]
   5c2f0:	tst	r3, #4
   5c2f4:	beq	5c2ac <lua_pushfstring@@Base+0x654>
   5c2f8:	add	r1, r5, #24
   5c2fc:	mov	r0, r4
   5c300:	mov	r6, r7
   5c304:	bl	5c194 <lua_pushfstring@@Base+0x53c>
   5c308:	mov	r0, r6
   5c30c:	pop	{r4, r5, r6, r7, r8, pc}
   5c310:	mov	r1, r3
   5c314:	bl	1fd08 <lua_getstack@@Base+0x50>
   5c318:	ldr	r2, [r4, #20]
   5c31c:	b	5c2c8 <lua_pushfstring@@Base+0x670>
   5c320:	ldr	r3, [r4, #20]
   5c324:	mov	r0, r4
   5c328:	ldr	r1, [r3, #-16]
   5c32c:	add	r1, r1, #16
   5c330:	bl	359a8 <lua_error@@Base+0x8>
   5c334:	ldr	r1, [pc]	; 5c33c <lua_pushfstring@@Base+0x6e4>
   5c338:	bl	35a48 <lua_error@@Base+0xa8>
   5c33c:	ldrdeq	r0, [r0], -r3
   5c340:	ldrd	r2, [r0, #16]
   5c344:	push	{r4, lr}
   5c348:	mov	r4, r0
   5c34c:	cmp	r2, r3
   5c350:	bcc	5c36c <lua_pushfstring@@Base+0x714>
   5c354:	ldr	r3, [r0, #8]
   5c358:	mov	r0, r4
   5c35c:	pop	{r4, lr}
   5c360:	ldr	r1, [r3, #380]	; 0x17c
   5c364:	add	r1, r1, #24
   5c368:	b	5c194 <lua_pushfstring@@Base+0x53c>
   5c36c:	bl	37288 <luaL_typerror@@Base+0xf1c>
   5c370:	mov	r1, r0
   5c374:	mov	r0, r4
   5c378:	pop	{r4, lr}
   5c37c:	b	5c194 <lua_pushfstring@@Base+0x53c>
   5c380:	b	5c340 <lua_pushfstring@@Base+0x6e8>
   5c384:	push	{r4, lr}
   5c388:	mov	r4, r0
   5c38c:	bl	37240 <luaL_typerror@@Base+0xed4>
   5c390:	ldr	r3, [r0]
   5c394:	cmp	r3, #0
   5c398:	beq	5c3b8 <lua_pushfstring@@Base+0x760>
   5c39c:	ldr	r3, [r0, #4]
   5c3a0:	and	r3, r3, #3
   5c3a4:	cmp	r3, #2
   5c3a8:	beq	5c3b8 <lua_pushfstring@@Base+0x760>
   5c3ac:	mov	r1, r0
   5c3b0:	mov	r0, r4
   5c3b4:	bl	5c194 <lua_pushfstring@@Base+0x53c>
   5c3b8:	mov	r0, #0
   5c3bc:	pop	{r4, pc}
   5c3c0:	push	{r4, r5, r6, r7, lr}
   5c3c4:	mov	r5, r0
   5c3c8:	ldr	r4, [r0, #16]
   5c3cc:	ldr	r3, [r0, #20]
   5c3d0:	add	r4, r4, r2, lsl #3
   5c3d4:	cmp	r4, r3
   5c3d8:	sub	sp, sp, #12
   5c3dc:	bcs	5c454 <lua_pushfstring@@Base+0x7fc>
   5c3e0:	mov	r7, r1
   5c3e4:	mov	r6, #1
   5c3e8:	b	5c3fc <lua_pushfstring@@Base+0x7a4>
   5c3ec:	ldr	r3, [r5, #20]
   5c3f0:	add	r4, r4, #8
   5c3f4:	cmp	r3, r4
   5c3f8:	bls	5c44c <lua_pushfstring@@Base+0x7f4>
   5c3fc:	add	r2, sp, #4
   5c400:	mov	r1, r4
   5c404:	mov	r0, r5
   5c408:	bl	322d0 <luaL_where@@Base+0x121cc>
   5c40c:	cmp	r0, #0
   5c410:	beq	5c484 <lua_pushfstring@@Base+0x82c>
   5c414:	cmp	r6, #0
   5c418:	beq	5c3ec <lua_pushfstring@@Base+0x794>
   5c41c:	mov	r3, r7
   5c420:	ldr	r2, [sp, #4]
   5c424:	mov	r1, #1
   5c428:	bl	12d6c <fwrite@plt>
   5c42c:	ldr	r3, [r5, #20]
   5c430:	ldr	r6, [sp, #4]
   5c434:	add	r4, r4, #8
   5c438:	cmp	r3, r4
   5c43c:	sub	r6, r6, r0
   5c440:	clz	r6, r6
   5c444:	lsr	r6, r6, #5
   5c448:	bhi	5c3fc <lua_pushfstring@@Base+0x7a4>
   5c44c:	cmp	r6, #0
   5c450:	beq	5c470 <lua_pushfstring@@Base+0x818>
   5c454:	add	r1, r3, #8
   5c458:	mvn	r2, #2
   5c45c:	str	r1, [r5, #20]
   5c460:	mov	r0, #1
   5c464:	str	r2, [r3, #4]
   5c468:	add	sp, sp, #12
   5c46c:	pop	{r4, r5, r6, r7, pc}
   5c470:	mov	r1, r6
   5c474:	mov	r0, r5
   5c478:	bl	5bcf0 <lua_pushfstring@@Base+0x98>
   5c47c:	add	sp, sp, #12
   5c480:	pop	{r4, r5, r6, r7, pc}
   5c484:	ldr	r1, [r5, #16]
   5c488:	mov	r0, r5
   5c48c:	sub	r1, r4, r1
   5c490:	mov	r2, #4
   5c494:	asr	r1, r1, #3
   5c498:	add	r1, r1, #1
   5c49c:	bl	36374 <luaL_typerror@@Base+0x8>
   5c4a0:	ldr	r3, [r0, #8]
   5c4a4:	ldr	r3, [r3, #380]	; 0x17c
   5c4a8:	ldr	r1, [r3, #24]
   5c4ac:	cmp	r1, #0
   5c4b0:	beq	5c4bc <lua_pushfstring@@Base+0x864>
   5c4b4:	mov	r2, #0
   5c4b8:	b	5c3c0 <lua_pushfstring@@Base+0x768>
   5c4bc:	push	{r4, lr}
   5c4c0:	mov	r1, #1520	; 0x5f0
   5c4c4:	bl	35a48 <lua_error@@Base+0xa8>
   5c4c8:	push	{r4, lr}
   5c4cc:	mov	r4, r0
   5c4d0:	bl	37288 <luaL_typerror@@Base+0xf1c>
   5c4d4:	mov	r2, #1
   5c4d8:	ldr	r1, [r0]
   5c4dc:	mov	r0, r4
   5c4e0:	pop	{r4, lr}
   5c4e4:	b	5c3c0 <lua_pushfstring@@Base+0x768>
   5c4e8:	push	{r4, r5, r6, lr}
   5c4ec:	mov	r4, r0
   5c4f0:	bl	37288 <luaL_typerror@@Base+0xf1c>
   5c4f4:	ldr	r3, [pc, #144]	; 5c58c <lua_pushfstring@@Base+0x934>
   5c4f8:	mvn	r2, #0
   5c4fc:	mov	r1, #2
   5c500:	ldr	r5, [r0]
   5c504:	mov	r0, r4
   5c508:	bl	57ed0 <lua_gethookcount@@Base+0x4850>
   5c50c:	ldr	r3, [r4, #16]
   5c510:	ldr	r1, [r4, #20]
   5c514:	add	r2, r3, #16
   5c518:	cmp	r1, r2
   5c51c:	mov	r6, r0
   5c520:	bls	5c530 <lua_pushfstring@@Base+0x8d8>
   5c524:	ldr	r3, [r3, #20]
   5c528:	cmn	r3, #1
   5c52c:	bne	5c568 <lua_pushfstring@@Base+0x910>
   5c530:	mov	r3, #8192	; 0x2000
   5c534:	mov	r2, r6
   5c538:	mov	r0, r5
   5c53c:	mov	r1, #0
   5c540:	bl	12ebc <setvbuf@plt>
   5c544:	cmp	r0, #0
   5c548:	bne	5c57c <lua_pushfstring@@Base+0x924>
   5c54c:	ldr	r3, [r4, #20]
   5c550:	mvn	r2, #2
   5c554:	add	r1, r3, #8
   5c558:	str	r1, [r4, #20]
   5c55c:	mov	r0, #1
   5c560:	str	r2, [r3, #4]
   5c564:	pop	{r4, r5, r6, pc}
   5c568:	mov	r1, #3
   5c56c:	mov	r0, r4
   5c570:	bl	3638c <luaL_typerror@@Base+0x20>
   5c574:	mov	r3, r0
   5c578:	b	5c534 <lua_pushfstring@@Base+0x8dc>
   5c57c:	mov	r0, r4
   5c580:	mov	r1, #0
   5c584:	pop	{r4, r5, r6, lr}
   5c588:	b	5bcf0 <lua_pushfstring@@Base+0x98>
   5c58c:	muleq	r7, ip, r1
   5c590:	push	{r4, r5, r6, r7, lr}
   5c594:	sub	sp, sp, #12
   5c598:	mov	r4, r0
   5c59c:	bl	37288 <luaL_typerror@@Base+0xf1c>
   5c5a0:	ldr	r3, [pc, #228]	; 5c68c <lua_pushfstring@@Base+0xa34>
   5c5a4:	mov	r2, #1
   5c5a8:	mov	r1, #2
   5c5ac:	ldr	r5, [r0]
   5c5b0:	mov	r0, r4
   5c5b4:	bl	57ed0 <lua_gethookcount@@Base+0x4850>
   5c5b8:	ldr	r3, [r4, #16]
   5c5bc:	ldr	r1, [r4, #20]
   5c5c0:	add	r2, r3, #16
   5c5c4:	cmp	r1, r2
   5c5c8:	mov	r6, r0
   5c5cc:	bls	5c600 <lua_pushfstring@@Base+0x9a8>
   5c5d0:	ldr	r2, [r3, #20]
   5c5d4:	cmn	r2, #14
   5c5d8:	beq	5c650 <lua_pushfstring@@Base+0x9f8>
   5c5dc:	cmn	r2, #15
   5c5e0:	bhi	5c5f8 <lua_pushfstring@@Base+0x9a0>
   5c5e4:	ldrd	r0, [r3, #16]
   5c5e8:	bl	6e650 <luaL_openlibs@@Base+0x4e90>
   5c5ec:	mov	r2, r0
   5c5f0:	mov	r3, r1
   5c5f4:	b	5c608 <lua_pushfstring@@Base+0x9b0>
   5c5f8:	cmn	r2, #1
   5c5fc:	bne	5c67c <lua_pushfstring@@Base+0xa24>
   5c600:	mov	r2, #0
   5c604:	mov	r3, #0
   5c608:	str	r6, [sp]
   5c60c:	mov	r0, r5
   5c610:	bl	12f64 <fseeko64@plt>
   5c614:	cmp	r0, #0
   5c618:	bne	5c65c <lua_pushfstring@@Base+0xa04>
   5c61c:	mov	r0, r5
   5c620:	bl	13090 <ftello64@plt>
   5c624:	ldr	r4, [r4, #20]
   5c628:	asr	r7, r0, #31
   5c62c:	cmp	r7, r1
   5c630:	cmpeq	r0, r0
   5c634:	bne	5c670 <lua_pushfstring@@Base+0xa18>
   5c638:	mvn	r3, #13
   5c63c:	str	r0, [r4, #-8]
   5c640:	str	r3, [r4, #-4]
   5c644:	mov	r0, #1
   5c648:	add	sp, sp, #12
   5c64c:	pop	{r4, r5, r6, r7, pc}
   5c650:	ldr	r2, [r3, #16]
   5c654:	asr	r3, r2, #31
   5c658:	b	5c608 <lua_pushfstring@@Base+0x9b0>
   5c65c:	mov	r0, r4
   5c660:	mov	r1, #0
   5c664:	add	sp, sp, #12
   5c668:	pop	{r4, r5, r6, r7, lr}
   5c66c:	b	5bcf0 <lua_pushfstring@@Base+0x98>
   5c670:	bl	6e238 <luaL_openlibs@@Base+0x4a78>
   5c674:	strd	r0, [r4, #-8]
   5c678:	b	5c644 <lua_pushfstring@@Base+0x9ec>
   5c67c:	mov	r2, #3
   5c680:	mov	r0, r4
   5c684:	mov	r1, r2
   5c688:	bl	36374 <luaL_typerror@@Base+0x8>
   5c68c:	andeq	r3, r7, ip, lsr #3
   5c690:	push	{r4, r5, r6, lr}
   5c694:	mov	r2, #0
   5c698:	mov	r1, #1
   5c69c:	mov	r4, r0
   5c6a0:	bl	5ad0c <luaL_checklstring@@Base>
   5c6a4:	mov	r2, #0
   5c6a8:	mov	r1, #2
   5c6ac:	mov	r5, r0
   5c6b0:	mov	r0, r4
   5c6b4:	bl	5ad0c <luaL_checklstring@@Base>
   5c6b8:	mov	r1, r0
   5c6bc:	mov	r0, r5
   5c6c0:	bl	12e38 <rename@plt>
   5c6c4:	cmp	r0, #0
   5c6c8:	bne	5c6e8 <lua_pushfstring@@Base+0xa90>
   5c6cc:	ldr	r3, [r4, #20]
   5c6d0:	mvn	r2, #2
   5c6d4:	add	r1, r3, #8
   5c6d8:	str	r1, [r4, #20]
   5c6dc:	mov	r0, #1
   5c6e0:	str	r2, [r3, #4]
   5c6e4:	pop	{r4, r5, r6, pc}
   5c6e8:	mov	r1, r5
   5c6ec:	mov	r0, r4
   5c6f0:	pop	{r4, r5, r6, lr}
   5c6f4:	b	5bcf0 <lua_pushfstring@@Base+0x98>
   5c6f8:	push	{r4, r5, r6, lr}
   5c6fc:	mov	r2, #0
   5c700:	mov	r1, #1
   5c704:	mov	r4, r0
   5c708:	bl	5ad0c <luaL_checklstring@@Base>
   5c70c:	mov	r5, r0
   5c710:	bl	12fd0 <remove@plt>
   5c714:	cmp	r0, #0
   5c718:	bne	5c738 <lua_pushfstring@@Base+0xae0>
   5c71c:	ldr	r3, [r4, #20]
   5c720:	mvn	r2, #2
   5c724:	add	r1, r3, #8
   5c728:	str	r1, [r4, #20]
   5c72c:	mov	r0, #1
   5c730:	str	r2, [r3, #4]
   5c734:	pop	{r4, r5, r6, pc}
   5c738:	mov	r1, r5
   5c73c:	mov	r0, r4
   5c740:	pop	{r4, r5, r6, lr}
   5c744:	b	5bcf0 <lua_pushfstring@@Base+0x98>
   5c748:	push	{r4, lr}
   5c74c:	mov	r4, r0
   5c750:	bl	37288 <luaL_typerror@@Base+0xf1c>
   5c754:	ldr	r0, [r0]
   5c758:	bl	12c7c <fflush@plt>
   5c75c:	cmp	r0, #0
   5c760:	bne	5c780 <lua_pushfstring@@Base+0xb28>
   5c764:	ldr	r3, [r4, #20]
   5c768:	mvn	r2, #2
   5c76c:	add	r1, r3, #8
   5c770:	str	r1, [r4, #20]
   5c774:	mov	r0, #1
   5c778:	str	r2, [r3, #4]
   5c77c:	pop	{r4, pc}
   5c780:	mov	r0, r4
   5c784:	mov	r1, #0
   5c788:	pop	{r4, lr}
   5c78c:	b	5bcf0 <lua_pushfstring@@Base+0x98>
   5c790:	ldr	r3, [r0, #8]
   5c794:	push	{r4, lr}
   5c798:	ldr	r3, [r3, #380]	; 0x17c
   5c79c:	ldr	r3, [r3, #24]
   5c7a0:	cmp	r3, #0
   5c7a4:	beq	5c7e8 <lua_pushfstring@@Base+0xb90>
   5c7a8:	mov	r4, r0
   5c7ac:	mov	r0, r3
   5c7b0:	bl	12c7c <fflush@plt>
   5c7b4:	cmp	r0, #0
   5c7b8:	bne	5c7d8 <lua_pushfstring@@Base+0xb80>
   5c7bc:	ldr	r3, [r4, #20]
   5c7c0:	mvn	r2, #2
   5c7c4:	add	r1, r3, #8
   5c7c8:	str	r1, [r4, #20]
   5c7cc:	mov	r0, #1
   5c7d0:	str	r2, [r3, #4]
   5c7d4:	pop	{r4, pc}
   5c7d8:	mov	r0, r4
   5c7dc:	mov	r1, #0
   5c7e0:	pop	{r4, lr}
   5c7e4:	b	5bcf0 <lua_pushfstring@@Base+0x98>
   5c7e8:	mov	r1, #1520	; 0x5f0
   5c7ec:	bl	35a48 <lua_error@@Base+0xa8>

0005c7f0 <lua_pushcclosure@@Base>:
   5c7f0:	ldr	r3, [r0, #8]
   5c7f4:	push	{r4, r5, r6, r7, r8, lr}
   5c7f8:	mov	r8, r2
   5c7fc:	ldrd	r2, [r3, #20]
   5c800:	mov	r6, r0
   5c804:	mov	r5, r1
   5c808:	cmp	r2, r3
   5c80c:	bcs	5c8cc <lua_pushcclosure@@Base+0xdc>
   5c810:	ldr	r3, [r6, #16]
   5c814:	add	r4, r8, #3
   5c818:	mov	r0, r6
   5c81c:	ldr	r3, [r3, #-8]
   5c820:	lsl	r4, r4, #3
   5c824:	mov	r1, r4
   5c828:	ldrb	r2, [r3, #5]
   5c82c:	cmp	r2, #8
   5c830:	ldreq	r7, [r3, #8]
   5c834:	ldrne	r7, [r6, #36]	; 0x24
   5c838:	bl	32a24 <luaL_where@@Base+0x12920>
   5c83c:	ldr	ip, [r6, #20]
   5c840:	ldr	r3, [r6, #8]
   5c844:	mov	r2, #8
   5c848:	rsb	lr, r4, #24
   5c84c:	add	r3, r3, #216	; 0xd8
   5c850:	add	r1, ip, lr
   5c854:	cmp	r8, #0
   5c858:	strb	r2, [r0, #5]
   5c85c:	mov	r2, #1
   5c860:	str	r3, [r0, #16]
   5c864:	strb	r8, [r0, #7]
   5c868:	strb	r2, [r0, #6]
   5c86c:	str	r7, [r0, #8]
   5c870:	str	r5, [r0, #20]
   5c874:	sub	r3, r4, #24
   5c878:	str	r1, [r6, #20]
   5c87c:	beq	5c89c <lua_pushcclosure@@Base+0xac>
   5c880:	sub	r2, r4, #8
   5c884:	add	r2, r0, r2
   5c888:	add	r3, r1, r3
   5c88c:	ldrd	r4, [r3, #-8]!
   5c890:	cmp	r3, r1
   5c894:	strd	r4, [r2], #-8
   5c898:	bne	5c88c <lua_pushcclosure@@Base+0x9c>
   5c89c:	ldr	r4, [r6, #24]
   5c8a0:	add	r3, r1, #8
   5c8a4:	cmp	r3, r4
   5c8a8:	mvn	r2, #8
   5c8ac:	str	r0, [ip, lr]
   5c8b0:	str	r2, [r1, #4]
   5c8b4:	str	r3, [r6, #20]
   5c8b8:	popcc	{r4, r5, r6, r7, r8, pc}
   5c8bc:	mov	r0, r6
   5c8c0:	mov	r1, #1
   5c8c4:	pop	{r4, r5, r6, r7, r8, lr}
   5c8c8:	b	1fd08 <lua_getstack@@Base+0x50>
   5c8cc:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5c8d0:	b	5c810 <lua_pushcclosure@@Base+0x20>
   5c8d4:	push	{r4, r6, r7, lr}
   5c8d8:	mov	r1, #1
   5c8dc:	mov	r4, r0
   5c8e0:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   5c8e4:	mov	r0, r4
   5c8e8:	mov	r1, #2
   5c8ec:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   5c8f0:	ldr	r3, [r4, #16]
   5c8f4:	mov	r6, #0
   5c8f8:	mov	r7, #0
   5c8fc:	add	r2, r3, #24
   5c900:	str	r2, [r4, #20]
   5c904:	mov	r0, r4
   5c908:	strd	r6, [r3, #16]
   5c90c:	mov	r2, #3
   5c910:	ldr	r1, [pc, #36]	; 5c93c <lua_pushcclosure@@Base+0x14c>
   5c914:	bl	5c7f0 <lua_pushcclosure@@Base>
   5c918:	ldr	r2, [r4, #20]
   5c91c:	ldr	r3, [r4, #8]
   5c920:	mov	r1, #86	; 0x56
   5c924:	ldr	r2, [r2, #-8]
   5c928:	add	r3, r3, #212	; 0xd4
   5c92c:	mov	r0, #1
   5c930:	str	r3, [r2, #16]
   5c934:	strb	r1, [r2, #6]
   5c938:	pop	{r4, r6, r7, pc}
   5c93c:	andeq	fp, r5, r4, lsr #7
   5c940:	push	{r4, r5, r6, r7, r8, lr}
   5c944:	mov	r4, r0
   5c948:	mov	r6, r2
   5c94c:	mov	r2, #0
   5c950:	mov	r7, r3
   5c954:	bl	5c7f0 <lua_pushcclosure@@Base>
   5c958:	ldr	r1, [r4, #20]
   5c95c:	ldr	r2, [r4, #16]
   5c960:	ldr	r3, [r4, #8]
   5c964:	ldr	r5, [r1, #-8]
   5c968:	add	r3, r3, #212	; 0xd4
   5c96c:	mov	r0, r7
   5c970:	strb	r6, [r5, #6]
   5c974:	str	r3, [r5, #16]
   5c978:	ldr	r3, [r2, #-8]
   5c97c:	ldr	r6, [r3, #8]
   5c980:	bl	12e80 <strlen@plt>
   5c984:	mov	r1, r7
   5c988:	mov	r2, r0
   5c98c:	mov	r0, r4
   5c990:	bl	20260 <luaL_where@@Base+0x15c>
   5c994:	mov	r1, r6
   5c998:	mov	r2, r0
   5c99c:	mov	r0, r4
   5c9a0:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   5c9a4:	mvn	r3, #8
   5c9a8:	str	r5, [r0]
   5c9ac:	str	r3, [r0, #4]
   5c9b0:	ldrb	r3, [r6, #4]
   5c9b4:	tst	r3, #4
   5c9b8:	bne	5c9dc <lua_pushcclosure@@Base+0x1ec>
   5c9bc:	ldr	r3, [r4, #20]
   5c9c0:	mvn	r2, #8
   5c9c4:	add	r1, r3, #8
   5c9c8:	str	r1, [r4, #20]
   5c9cc:	mov	r0, #1
   5c9d0:	str	r5, [r3]
   5c9d4:	str	r2, [r3, #4]
   5c9d8:	pop	{r4, r5, r6, r7, r8, pc}
   5c9dc:	ldr	r2, [r4, #8]
   5c9e0:	bic	r3, r3, #4
   5c9e4:	strb	r3, [r6, #4]
   5c9e8:	ldr	r3, [r2, #48]	; 0x30
   5c9ec:	str	r3, [r6, #12]
   5c9f0:	str	r6, [r2, #48]	; 0x30
   5c9f4:	b	5c9bc <lua_pushcclosure@@Base+0x1cc>
   5c9f8:	ldr	r3, [pc, #8]	; 5ca08 <lua_pushcclosure@@Base+0x218>
   5c9fc:	mov	r2, #95	; 0x5f
   5ca00:	ldr	r1, [pc, #4]	; 5ca0c <lua_pushcclosure@@Base+0x21c>
   5ca04:	b	5c940 <lua_pushcclosure@@Base+0x150>
   5ca08:			; <UNDEFINED> instruction: 0x000731bc
   5ca0c:	andeq	r6, r3, r0, ror #25
   5ca10:	ldr	r3, [pc, #8]	; 5ca20 <lua_pushcclosure@@Base+0x230>
   5ca14:	mov	r2, #94	; 0x5e
   5ca18:	ldr	r1, [pc, #4]	; 5ca24 <lua_pushcclosure@@Base+0x234>
   5ca1c:	b	5c940 <lua_pushcclosure@@Base+0x150>
   5ca20:	andeq	r3, r7, r4, asr #3
   5ca24:	andeq	ip, r5, ip, asr fp
   5ca28:	ldr	r2, [r0, #20]
   5ca2c:	ldr	r3, [r0, #16]
   5ca30:	push	{r4, lr}
   5ca34:	sub	r2, r2, r3
   5ca38:	cmp	r2, #480	; 0x1e0
   5ca3c:	bgt	5ca54 <lua_pushcclosure@@Base+0x264>
   5ca40:	asr	r2, r2, #3
   5ca44:	ldr	r1, [pc, #16]	; 5ca5c <lua_pushcclosure@@Base+0x26c>
   5ca48:	bl	5c7f0 <lua_pushcclosure@@Base>
   5ca4c:	mov	r0, #1
   5ca50:	pop	{r4, pc}
   5ca54:	ldr	r1, [pc, #4]	; 5ca60 <lua_pushcclosure@@Base+0x270>
   5ca58:	bl	35a48 <lua_error@@Base+0xa8>
   5ca5c:	andeq	ip, r5, r8, asr #4
   5ca60:	ldrdeq	r0, [r0], -fp
   5ca64:	push	{r4, lr}
   5ca68:	mov	r4, r0
   5ca6c:	bl	37288 <luaL_typerror@@Base+0xf1c>
   5ca70:	mov	r0, r4
   5ca74:	pop	{r4, lr}
   5ca78:	b	5ca28 <lua_pushcclosure@@Base+0x238>

0005ca7c <lua_pushboolean@@Base>:
   5ca7c:	cmp	r1, #0
   5ca80:	ldr	r1, [r0, #20]
   5ca84:	push	{lr}		; (str lr, [sp, #-4]!)
   5ca88:	add	r2, r1, #8
   5ca8c:	ldr	lr, [r0, #24]
   5ca90:	mvnne	ip, #2
   5ca94:	mvneq	ip, #1
   5ca98:	cmp	r2, lr
   5ca9c:	str	ip, [r1, #4]
   5caa0:	str	r2, [r0, #20]
   5caa4:	popcc	{pc}		; (ldrcc pc, [sp], #4)
   5caa8:	mov	r1, #1
   5caac:	pop	{lr}		; (ldr lr, [sp], #4)
   5cab0:	b	1fd08 <lua_getstack@@Base+0x50>

0005cab4 <lua_pushlightuserdata@@Base>:
   5cab4:	ldr	r2, [r0, #20]
   5cab8:	push	{r4, lr}
   5cabc:	add	ip, r2, #8
   5cac0:	ldr	r4, [r0, #24]
   5cac4:	mvn	lr, #3
   5cac8:	cmp	ip, r4
   5cacc:	stm	r2, {r1, lr}
   5cad0:	str	ip, [r0, #20]
   5cad4:	popcc	{r4, pc}
   5cad8:	mov	r1, #1
   5cadc:	pop	{r4, lr}
   5cae0:	b	1fd08 <lua_getstack@@Base+0x50>

0005cae4 <lua_createtable@@Base>:
   5cae4:	ldr	r3, [r0, #8]
   5cae8:	push	{r4, r5, lr}
   5caec:	mov	r4, r0
   5caf0:	ldr	ip, [r3, #20]
   5caf4:	ldr	r3, [r3, #24]
   5caf8:	sub	sp, sp, #12
   5cafc:	cmp	ip, r3
   5cb00:	bcs	5cb4c <lua_createtable@@Base+0x68>
   5cb04:	mov	r0, r4
   5cb08:	ldr	r5, [r4, #20]
   5cb0c:	bl	3fd50 <luaL_typerror@@Base+0x99e4>
   5cb10:	ldr	r3, [r4, #20]
   5cb14:	ldr	r2, [r4, #24]
   5cb18:	add	r3, r3, #8
   5cb1c:	cmp	r3, r2
   5cb20:	mvn	r2, #11
   5cb24:	stm	r5, {r0, r2}
   5cb28:	str	r3, [r4, #20]
   5cb2c:	bcs	5cb38 <lua_createtable@@Base+0x54>
   5cb30:	add	sp, sp, #12
   5cb34:	pop	{r4, r5, pc}
   5cb38:	mov	r0, r4
   5cb3c:	mov	r1, #1
   5cb40:	add	sp, sp, #12
   5cb44:	pop	{r4, r5, lr}
   5cb48:	b	1fd08 <lua_getstack@@Base+0x50>
   5cb4c:	stm	sp, {r1, r2}
   5cb50:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5cb54:	ldm	sp, {r1, r2}
   5cb58:	b	5cb04 <lua_createtable@@Base+0x20>
   5cb5c:	push	{r4, r5, r6, lr}
   5cb60:	mov	r1, #1
   5cb64:	mov	r4, r0
   5cb68:	bl	3638c <luaL_typerror@@Base+0x20>
   5cb6c:	mov	r1, #2
   5cb70:	mov	r5, r0
   5cb74:	mov	r0, r4
   5cb78:	bl	3638c <luaL_typerror@@Base+0x20>
   5cb7c:	mov	r1, r5
   5cb80:	mov	r2, r0
   5cb84:	mov	r0, r4
   5cb88:	bl	5cae4 <lua_createtable@@Base>
   5cb8c:	mov	r0, #1
   5cb90:	pop	{r4, r5, r6, pc}
   5cb94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   5cb98:	mov	r7, r0
   5cb9c:	bl	365f0 <luaL_typerror@@Base+0x284>
   5cba0:	mov	r1, #2
   5cba4:	mov	r4, r0
   5cba8:	mov	r0, r7
   5cbac:	bl	3638c <luaL_typerror@@Base+0x20>
   5cbb0:	cmp	r4, #0
   5cbb4:	beq	5cbc4 <lua_createtable@@Base+0xe0>
   5cbb8:	ldrh	r3, [r4, #24]
   5cbbc:	cmp	r3, r0
   5cbc0:	bhi	5cbcc <lua_createtable@@Base+0xe8>
   5cbc4:	mov	r0, #0
   5cbc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   5cbcc:	ldr	r3, [r4, #28]
   5cbd0:	lsl	r0, r0, #3
   5cbd4:	add	r9, r3, r0
   5cbd8:	ldrh	r3, [r3, r0]
   5cbdc:	ldrb	sl, [r9, #6]
   5cbe0:	mov	r2, #0
   5cbe4:	mov	r0, r7
   5cbe8:	add	r8, sl, #2
   5cbec:	mov	r1, r8
   5cbf0:	ldr	r5, [r4, #32]
   5cbf4:	lsl	r4, r3, #2
   5cbf8:	bl	5cae4 <lua_createtable@@Base>
   5cbfc:	ldr	r3, [r7, #20]
   5cc00:	ldr	r6, [r3, #-8]
   5cc04:	ldr	r2, [r6, #24]
   5cc08:	cmp	r2, #0
   5cc0c:	beq	5cc98 <lua_createtable@@Base+0x1b4>
   5cc10:	ldr	r0, [r6, #8]
   5cc14:	ldrh	r3, [r9, #2]
   5cc18:	mvn	r1, #13
   5cc1c:	cmp	r2, #1
   5cc20:	sub	r3, r3, #32768	; 0x8000
   5cc24:	str	r3, [r0]
   5cc28:	str	r1, [r0, #4]
   5cc2c:	bls	5cce4 <lua_createtable@@Base+0x200>
   5cc30:	ldr	r0, [r6, #8]
   5cc34:	add	r0, r0, #8
   5cc38:	ldrb	r3, [r9, #4]
   5cc3c:	mvn	r9, #13
   5cc40:	cmp	sl, #0
   5cc44:	stm	r0, {r3, r9}
   5cc48:	beq	5ccac <lua_createtable@@Base+0x1c8>
   5cc4c:	sub	r4, r4, #4
   5cc50:	add	r5, r5, r4
   5cc54:	mov	r4, #2
   5cc58:	b	5cc78 <lua_createtable@@Base+0x194>
   5cc5c:	ldr	r0, [r6, #8]
   5cc60:	add	r0, r0, r4, lsl #3
   5cc64:	ldr	r3, [r5, #4]!
   5cc68:	add	r4, r4, #1
   5cc6c:	cmp	r8, r4
   5cc70:	stm	r0, {r3, r9}
   5cc74:	beq	5ccac <lua_createtable@@Base+0x1c8>
   5cc78:	cmp	r4, r2
   5cc7c:	bcc	5cc5c <lua_createtable@@Base+0x178>
   5cc80:	mov	r2, r4
   5cc84:	mov	r1, r6
   5cc88:	mov	r0, r7
   5cc8c:	bl	3e200 <luaL_typerror@@Base+0x7e94>
   5cc90:	ldr	r2, [r6, #24]
   5cc94:	b	5cc64 <lua_createtable@@Base+0x180>
   5cc98:	mov	r1, r6
   5cc9c:	mov	r0, r7
   5cca0:	bl	3e200 <luaL_typerror@@Base+0x7e94>
   5cca4:	ldr	r2, [r6, #24]
   5cca8:	b	5cc14 <lua_createtable@@Base+0x130>
   5ccac:	cmp	r8, r2
   5ccb0:	bcs	5ccd0 <lua_createtable@@Base+0x1ec>
   5ccb4:	ldr	r0, [r6, #8]
   5ccb8:	add	r0, r0, r8, lsl #3
   5ccbc:	mov	r2, #-16777216	; 0xff000000
   5ccc0:	mvn	r3, #13
   5ccc4:	strd	r2, [r0]
   5ccc8:	mov	r0, #1
   5cccc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   5ccd0:	mov	r2, r8
   5ccd4:	mov	r1, r6
   5ccd8:	mov	r0, r7
   5ccdc:	bl	3e200 <luaL_typerror@@Base+0x7e94>
   5cce0:	b	5ccbc <lua_createtable@@Base+0x1d8>
   5cce4:	mov	r2, #1
   5cce8:	mov	r1, r6
   5ccec:	mov	r0, r7
   5ccf0:	bl	3e200 <luaL_typerror@@Base+0x7e94>
   5ccf4:	ldr	r2, [r6, #24]
   5ccf8:	b	5cc38 <lua_createtable@@Base+0x154>
   5ccfc:	ldr	r3, [r0, #8]
   5cd00:	push	{r4, r5, r6, r7, r8, lr}
   5cd04:	mov	r1, #1
   5cd08:	ldr	r6, [r3, #228]	; 0xe4
   5cd0c:	mov	r4, r0
   5cd10:	str	r0, [r6, #12]
   5cd14:	bl	4c730 <luaL_error@@Base+0x6644>
   5cd18:	subs	r5, r0, #0
   5cd1c:	beq	5cd2c <lua_createtable@@Base+0x248>
   5cd20:	ldr	r3, [r6, #4]
   5cd24:	cmp	r3, r5
   5cd28:	bhi	5cd34 <lua_createtable@@Base+0x250>
   5cd2c:	mov	r0, #0
   5cd30:	pop	{r4, r5, r6, r7, r8, pc}
   5cd34:	mov	r2, #4
   5cd38:	mov	r1, #0
   5cd3c:	mov	r0, r4
   5cd40:	ldr	r8, [r6]
   5cd44:	bl	5cae4 <lua_createtable@@Base>
   5cd48:	ldr	r3, [r4, #20]
   5cd4c:	mov	r2, #4
   5cd50:	ldr	r1, [pc, #256]	; 5ce58 <lua_createtable@@Base+0x374>
   5cd54:	mov	r0, r4
   5cd58:	ldr	r7, [r3, #-8]
   5cd5c:	add	r6, r8, r5, lsl r2
   5cd60:	bl	20260 <luaL_where@@Base+0x15c>
   5cd64:	mov	r1, r7
   5cd68:	mov	r2, r0
   5cd6c:	mov	r0, r4
   5cd70:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   5cd74:	ldr	r2, [r6, #4]
   5cd78:	ldr	r3, [r8, r5, lsl #4]
   5cd7c:	mvn	r5, #13
   5cd80:	cmn	r2, #1
   5cd84:	stm	r0, {r3, r5}
   5cd88:	beq	5cdb4 <lua_createtable@@Base+0x2d0>
   5cd8c:	mov	r2, #4
   5cd90:	ldr	r1, [pc, #196]	; 5ce5c <lua_createtable@@Base+0x378>
   5cd94:	mov	r0, r4
   5cd98:	bl	20260 <luaL_where@@Base+0x15c>
   5cd9c:	mov	r1, r7
   5cda0:	mov	r2, r0
   5cda4:	mov	r0, r4
   5cda8:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   5cdac:	ldr	r3, [r6, #4]
   5cdb0:	stm	r0, {r3, r5}
   5cdb4:	ldrh	r3, [r6, #8]
   5cdb8:	cmp	r3, #0
   5cdbc:	bne	5cde4 <lua_createtable@@Base+0x300>
   5cdc0:	ldr	r5, [r6, #12]
   5cdc4:	cmp	r5, #0
   5cdc8:	bne	5ce18 <lua_createtable@@Base+0x334>
   5cdcc:	ldr	r3, [r4, #8]
   5cdd0:	ldrd	r2, [r3, #20]
   5cdd4:	cmp	r2, r3
   5cdd8:	bcs	5ce48 <lua_createtable@@Base+0x364>
   5cddc:	mov	r0, #1
   5cde0:	pop	{r4, r5, r6, r7, r8, pc}
   5cde4:	mov	r2, #3
   5cde8:	ldr	r1, [pc, #112]	; 5ce60 <lua_createtable@@Base+0x37c>
   5cdec:	mov	r0, r4
   5cdf0:	bl	20260 <luaL_where@@Base+0x15c>
   5cdf4:	mov	r1, r7
   5cdf8:	mov	r2, r0
   5cdfc:	mov	r0, r4
   5ce00:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   5ce04:	ldrh	r3, [r6, #8]
   5ce08:	mvn	r2, #13
   5ce0c:	str	r2, [r0, #4]
   5ce10:	str	r3, [r0]
   5ce14:	b	5cdc0 <lua_createtable@@Base+0x2dc>
   5ce18:	mov	r2, #4
   5ce1c:	ldr	r1, [pc, #64]	; 5ce64 <lua_createtable@@Base+0x380>
   5ce20:	mov	r0, r4
   5ce24:	bl	20260 <luaL_where@@Base+0x15c>
   5ce28:	mov	r1, r7
   5ce2c:	mov	r2, r0
   5ce30:	mov	r0, r4
   5ce34:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   5ce38:	mvn	r3, #4
   5ce3c:	str	r5, [r0]
   5ce40:	str	r3, [r0, #4]
   5ce44:	b	5cdcc <lua_createtable@@Base+0x2e8>
   5ce48:	mov	r0, r4
   5ce4c:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5ce50:	mov	r0, #1
   5ce54:	pop	{r4, r5, r6, r7, r8, pc}
   5ce58:	andeq	r3, r7, r8, asr #3
   5ce5c:	ldrdeq	r3, [r7], -r0
   5ce60:	ldrdeq	r3, [r7], -r8
   5ce64:	ldrdeq	r3, [r7], -ip

0005ce68 <luaL_newmetatable@@Base>:
   5ce68:	ldr	r3, [r0, #8]
   5ce6c:	push	{r4, r5, r6, r7, r8, lr}
   5ce70:	mov	r4, r0
   5ce74:	mov	r0, r1
   5ce78:	ldr	r6, [r3, #120]	; 0x78
   5ce7c:	mov	r5, r1
   5ce80:	bl	12e80 <strlen@plt>
   5ce84:	mov	r1, r5
   5ce88:	mov	r2, r0
   5ce8c:	mov	r0, r4
   5ce90:	bl	20260 <luaL_where@@Base+0x15c>
   5ce94:	mov	r1, r6
   5ce98:	mov	r2, r0
   5ce9c:	mov	r0, r4
   5cea0:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   5cea4:	ldr	r3, [r0, #4]
   5cea8:	mov	r5, r0
   5ceac:	cmn	r3, #1
   5ceb0:	beq	5ced0 <luaL_newmetatable@@Base+0x68>
   5ceb4:	ldr	r3, [r4, #20]
   5ceb8:	ldrd	r6, [r0]
   5cebc:	add	r2, r3, #8
   5cec0:	str	r2, [r4, #20]
   5cec4:	mov	r0, #0
   5cec8:	strd	r6, [r3]
   5cecc:	pop	{r4, r5, r6, r7, r8, pc}
   5ced0:	mov	r2, #1
   5ced4:	mov	r1, #0
   5ced8:	mov	r0, r4
   5cedc:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   5cee0:	ldr	r3, [r4, #20]
   5cee4:	mvn	r2, #11
   5cee8:	add	r1, r3, #8
   5ceec:	stm	r5, {r0, r2}
   5cef0:	str	r1, [r4, #20]
   5cef4:	stm	r3, {r0, r2}
   5cef8:	ldrb	r3, [r6, #4]
   5cefc:	tst	r3, #4
   5cf00:	bne	5cf0c <luaL_newmetatable@@Base+0xa4>
   5cf04:	mov	r0, #1
   5cf08:	pop	{r4, r5, r6, r7, r8, pc}
   5cf0c:	ldr	r2, [r4, #8]
   5cf10:	bic	r3, r3, #4
   5cf14:	strb	r3, [r6, #4]
   5cf18:	ldr	r3, [r2, #48]	; 0x30
   5cf1c:	mov	r0, #1
   5cf20:	str	r3, [r6, #12]
   5cf24:	str	r6, [r2, #48]	; 0x30
   5cf28:	pop	{r4, r5, r6, r7, r8, pc}

0005cf2c <lua_pushthread@@Base>:
   5cf2c:	ldr	r3, [r0, #20]
   5cf30:	ldr	ip, [r0, #24]
   5cf34:	add	r2, r3, #8
   5cf38:	mvn	r1, #6
   5cf3c:	cmp	r2, ip
   5cf40:	push	{r4, lr}
   5cf44:	mov	r4, r0
   5cf48:	strd	r0, [r3]
   5cf4c:	str	r2, [r0, #20]
   5cf50:	bcc	5cf5c <lua_pushthread@@Base+0x30>
   5cf54:	mov	r1, #1
   5cf58:	bl	1fd08 <lua_getstack@@Base+0x50>
   5cf5c:	ldr	r3, [r4, #8]
   5cf60:	ldr	r0, [r3, #116]	; 0x74
   5cf64:	sub	r0, r4, r0
   5cf68:	clz	r0, r0
   5cf6c:	lsr	r0, r0, #5
   5cf70:	pop	{r4, pc}
   5cf74:	push	{r4, lr}
   5cf78:	mov	r4, r0
   5cf7c:	bl	5cf2c <lua_pushthread@@Base>
   5cf80:	cmp	r0, #0
   5cf84:	mvnne	r2, #0
   5cf88:	ldrne	r3, [r4, #20]
   5cf8c:	mov	r0, #1
   5cf90:	addne	r1, r3, #8
   5cf94:	strne	r1, [r4, #20]
   5cf98:	strne	r2, [r3, #4]
   5cf9c:	pop	{r4, pc}

0005cfa0 <lua_newthread@@Base>:
   5cfa0:	ldr	r3, [r0, #8]
   5cfa4:	push	{r4, r5, r6, lr}
   5cfa8:	mov	r5, r0
   5cfac:	ldrd	r2, [r3, #20]
   5cfb0:	cmp	r2, r3
   5cfb4:	bcs	5d040 <lua_newthread@@Base+0xa0>
   5cfb8:	mov	r1, #48	; 0x30
   5cfbc:	mov	r0, r5
   5cfc0:	bl	32a24 <luaL_where@@Base+0x12920>
   5cfc4:	mov	r6, #1
   5cfc8:	mov	r3, #0
   5cfcc:	mov	r2, #6
   5cfd0:	strb	r3, [r0, #7]
   5cfd4:	strb	r2, [r0, #5]
   5cfd8:	strb	r6, [r0, #6]
   5cfdc:	ldr	r1, [r5, #8]
   5cfe0:	ldr	r2, [r5, #36]	; 0x24
   5cfe4:	str	r3, [r0, #44]	; 0x2c
   5cfe8:	str	r3, [r0, #28]
   5cfec:	str	r3, [r0, #40]	; 0x28
   5cff0:	str	r3, [r0, #32]
   5cff4:	str	r1, [r0, #8]
   5cff8:	str	r2, [r0, #36]	; 0x24
   5cffc:	mov	r1, r5
   5d000:	mov	r4, r0
   5d004:	bl	25110 <luaL_where@@Base+0x500c>
   5d008:	ldr	r3, [r5, #20]
   5d00c:	ldr	r2, [r5, #24]
   5d010:	mvn	r1, #6
   5d014:	str	r4, [r3]
   5d018:	str	r1, [r3, #4]
   5d01c:	add	r3, r3, #8
   5d020:	cmp	r3, r2
   5d024:	str	r3, [r5, #20]
   5d028:	bcc	5d038 <lua_newthread@@Base+0x98>
   5d02c:	mov	r1, r6
   5d030:	mov	r0, r5
   5d034:	bl	1fd08 <lua_getstack@@Base+0x50>
   5d038:	mov	r0, r4
   5d03c:	pop	{r4, r5, r6, pc}
   5d040:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5d044:	b	5cfb8 <lua_newthread@@Base+0x18>
   5d048:	ldr	r3, [r0, #16]
   5d04c:	ldr	r2, [r0, #20]
   5d050:	push	{r4, r5, r6, lr}
   5d054:	cmp	r3, r2
   5d058:	mov	r4, r0
   5d05c:	bcs	5d094 <lua_newthread@@Base+0xf4>
   5d060:	ldr	r5, [r3, #4]
   5d064:	cmn	r5, #9
   5d068:	bne	5d094 <lua_newthread@@Base+0xf4>
   5d06c:	bl	5cfa0 <lua_newthread@@Base>
   5d070:	ldr	r1, [r4, #16]
   5d074:	ldr	r1, [r1]
   5d078:	ldr	r3, [r0, #20]
   5d07c:	mov	r2, r0
   5d080:	add	ip, r3, #8
   5d084:	str	ip, [r2, #20]
   5d088:	mov	r0, #1
   5d08c:	stm	r3, {r1, r5}
   5d090:	pop	{r4, r5, r6, pc}
   5d094:	mov	r0, r4
   5d098:	mov	r2, #6
   5d09c:	mov	r1, #1
   5d0a0:	bl	36374 <luaL_typerror@@Base+0x8>
   5d0a4:	push	{r4, lr}
   5d0a8:	mov	r4, r0
   5d0ac:	bl	5d048 <lua_newthread@@Base+0xa8>
   5d0b0:	mov	r0, r4
   5d0b4:	mov	r2, #1
   5d0b8:	ldr	r1, [pc, #52]	; 5d0f4 <lua_newthread@@Base+0x154>
   5d0bc:	bl	5c7f0 <lua_pushcclosure@@Base>
   5d0c0:	ldr	r2, [r4, #20]
   5d0c4:	ldr	r3, [r4, #8]
   5d0c8:	mov	r1, #36	; 0x24
   5d0cc:	ldr	r2, [r2, #-8]
   5d0d0:	add	r3, r3, #212	; 0xd4
   5d0d4:	mov	r0, #1
   5d0d8:	str	r3, [r2, #16]
   5d0dc:	strb	r1, [r2, #6]
   5d0e0:	ldr	r3, [r4, #8]
   5d0e4:	add	r3, r3, #3904	; 0xf40
   5d0e8:	add	r3, r3, #8
   5d0ec:	str	r3, [r2, #16]
   5d0f0:	pop	{r4, pc}
   5d0f4:	andeq	r3, r5, r8, ror r0

0005d0f8 <lua_newuserdata@@Base>:
   5d0f8:	ldr	r3, [r0, #8]
   5d0fc:	push	{r4, r5, lr}
   5d100:	mov	r4, r0
   5d104:	ldrd	r2, [r3, #20]
   5d108:	sub	sp, sp, #12
   5d10c:	cmp	r2, r3
   5d110:	bcs	5d180 <lua_newuserdata@@Base+0x88>
   5d114:	ldr	r3, [pc, #128]	; 5d19c <lua_newuserdata@@Base+0xa4>
   5d118:	cmp	r1, r3
   5d11c:	bhi	5d190 <lua_newuserdata@@Base+0x98>
   5d120:	ldr	r3, [r4, #16]
   5d124:	mov	r0, r4
   5d128:	ldr	r3, [r3, #-8]
   5d12c:	ldrb	r2, [r3, #5]
   5d130:	cmp	r2, #8
   5d134:	ldreq	r2, [r3, #8]
   5d138:	ldrne	r2, [r4, #36]	; 0x24
   5d13c:	bl	2fe70 <luaL_where@@Base+0xfd6c>
   5d140:	ldr	r3, [r4, #20]
   5d144:	mvn	r1, #12
   5d148:	add	r2, r3, #8
   5d14c:	mov	r5, r0
   5d150:	ldr	r0, [r4, #24]
   5d154:	str	r5, [r3]
   5d158:	cmp	r2, r0
   5d15c:	str	r1, [r3, #4]
   5d160:	str	r2, [r4, #20]
   5d164:	bcc	5d174 <lua_newuserdata@@Base+0x7c>
   5d168:	mov	r0, r4
   5d16c:	mov	r1, #1
   5d170:	bl	1fd08 <lua_getstack@@Base+0x50>
   5d174:	add	r0, r5, #24
   5d178:	add	sp, sp, #12
   5d17c:	pop	{r4, r5, pc}
   5d180:	str	r1, [sp, #4]
   5d184:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5d188:	ldr	r1, [sp, #4]
   5d18c:	b	5d114 <lua_newuserdata@@Base+0x1c>
   5d190:	mov	r0, r4
   5d194:	mov	r1, #79	; 0x4f
   5d198:	bl	20258 <luaL_where@@Base+0x154>
   5d19c:	svcvc	0x00ffff00
   5d1a0:	push	{r4, lr}
   5d1a4:	mov	r1, #8
   5d1a8:	mov	r4, r0
   5d1ac:	bl	5d0f8 <lua_newuserdata@@Base>
   5d1b0:	ldr	r1, [r4, #20]
   5d1b4:	mov	ip, #1
   5d1b8:	mov	r2, #0
   5d1bc:	ldr	r1, [r1, #-8]
   5d1c0:	strb	ip, [r1, #6]
   5d1c4:	ldr	ip, [r4, #16]
   5d1c8:	ldr	ip, [ip, #-8]
   5d1cc:	ldr	ip, [ip, #8]
   5d1d0:	str	ip, [r1, #16]
   5d1d4:	str	r2, [r0]
   5d1d8:	str	r2, [r0, #4]
   5d1dc:	pop	{r4, pc}
   5d1e0:	push	{r4, r5, r6, r7, r8, lr}
   5d1e4:	mov	r7, r1
   5d1e8:	mov	r1, #1
   5d1ec:	mov	r5, r0
   5d1f0:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   5d1f4:	add	r6, r0, #16
   5d1f8:	mov	r0, r5
   5d1fc:	bl	5d1a0 <lua_newuserdata@@Base+0xa8>
   5d200:	mov	r1, r7
   5d204:	mov	r4, r0
   5d208:	mov	r0, r6
   5d20c:	bl	12fdc <fopen64@plt>
   5d210:	cmp	r0, #0
   5d214:	str	r0, [r4]
   5d218:	beq	5d224 <lua_newuserdata@@Base+0x12c>
   5d21c:	mov	r0, r4
   5d220:	pop	{r4, r5, r6, r7, r8, pc}
   5d224:	bl	12eb0 <__errno_location@plt>
   5d228:	ldr	r0, [r0]
   5d22c:	bl	12de4 <strerror@plt>
   5d230:	mov	r2, r6
   5d234:	ldr	r1, [pc, #24]	; 5d254 <lua_newuserdata@@Base+0x15c>
   5d238:	mov	r3, r0
   5d23c:	mov	r0, r5
   5d240:	bl	20040 <lua_getstack@@Base+0x388>
   5d244:	mov	r1, #1
   5d248:	mov	r2, r0
   5d24c:	mov	r0, r5
   5d250:	bl	36104 <lua_error@@Base+0x764>
   5d254:	strdeq	r3, [r7], -r8
   5d258:	ldr	r3, [r0, #16]
   5d25c:	ldr	r2, [r0, #20]
   5d260:	push	{r4, lr}
   5d264:	cmp	r3, r2
   5d268:	mov	r4, r0
   5d26c:	beq	5d2b4 <lua_newuserdata@@Base+0x1bc>
   5d270:	ldr	r2, [r3, #4]
   5d274:	cmn	r2, #1
   5d278:	beq	5d2bc <lua_newuserdata@@Base+0x1c4>
   5d27c:	ldr	r1, [pc, #88]	; 5d2dc <lua_newuserdata@@Base+0x1e4>
   5d280:	bl	5d1e0 <lua_newuserdata@@Base+0xe8>
   5d284:	ldrd	r2, [r4, #16]
   5d288:	mov	lr, #4
   5d28c:	mvn	r1, #12
   5d290:	ldr	ip, [r3, #-8]
   5d294:	sub	r3, r3, #8
   5d298:	str	lr, [r0, #4]
   5d29c:	str	r3, [r4, #20]
   5d2a0:	mov	r0, r4
   5d2a4:	str	ip, [r2]
   5d2a8:	str	r1, [r2, #4]
   5d2ac:	pop	{r4, lr}
   5d2b0:	b	5ca28 <lua_pushcclosure@@Base+0x238>
   5d2b4:	add	r2, r3, #8
   5d2b8:	str	r2, [r0, #20]
   5d2bc:	ldr	r2, [r4, #8]
   5d2c0:	mvn	r1, #12
   5d2c4:	mov	r0, r4
   5d2c8:	ldr	r2, [r2, #376]	; 0x178
   5d2cc:	pop	{r4, lr}
   5d2d0:	str	r1, [r3, #4]
   5d2d4:	str	r2, [r3]
   5d2d8:	b	5ca28 <lua_pushcclosure@@Base+0x238>
   5d2dc:	andeq	r3, r7, r0, asr #3
   5d2e0:	push	{r4, r5, r6, lr}
   5d2e4:	mov	r6, r0
   5d2e8:	ldr	r5, [r0, #16]
   5d2ec:	ldr	ip, [r0, #20]
   5d2f0:	cmp	r5, ip
   5d2f4:	bcs	5d334 <lua_newuserdata@@Base+0x23c>
   5d2f8:	ldr	lr, [r5, #4]
   5d2fc:	cmn	lr, #1
   5d300:	beq	5d334 <lua_newuserdata@@Base+0x23c>
   5d304:	cmn	lr, #13
   5d308:	mov	r4, r1
   5d30c:	beq	5d358 <lua_newuserdata@@Base+0x260>
   5d310:	mov	r1, r2
   5d314:	bl	5d1e0 <lua_newuserdata@@Base+0xe8>
   5d318:	ldr	r5, [r6, #20]
   5d31c:	ldr	r3, [r6, #8]
   5d320:	add	r1, r4, #58	; 0x3a
   5d324:	ldr	r2, [r5, #-8]
   5d328:	mov	r0, #1
   5d32c:	str	r2, [r3, r1, lsl #2]
   5d330:	pop	{r4, r5, r6, pc}
   5d334:	ldr	r2, [r6, #8]
   5d338:	add	r1, r1, #58	; 0x3a
   5d33c:	add	r0, ip, #8
   5d340:	ldr	r1, [r2, r1, lsl #2]
   5d344:	mvn	r2, #12
   5d348:	str	r0, [r6, #20]
   5d34c:	stm	ip, {r1, r2}
   5d350:	mov	r0, #1
   5d354:	pop	{r4, r5, r6, pc}
   5d358:	add	r5, r5, #8
   5d35c:	bl	37288 <luaL_typerror@@Base+0xf1c>
   5d360:	str	r5, [r6, #20]
   5d364:	b	5d31c <lua_newuserdata@@Base+0x224>
   5d368:	ldr	r2, [pc, #4]	; 5d374 <lua_newuserdata@@Base+0x27c>
   5d36c:	mov	r1, #37	; 0x25
   5d370:	b	5d2e0 <lua_newuserdata@@Base+0x1e8>
   5d374:			; <UNDEFINED> instruction: 0x000735b4
   5d378:	ldr	r2, [pc, #4]	; 5d384 <lua_newuserdata@@Base+0x28c>
   5d37c:	mov	r1, #36	; 0x24
   5d380:	b	5d2e0 <lua_newuserdata@@Base+0x1e8>
   5d384:	andeq	r3, r7, r0, asr #3
   5d388:	push	{r4, r5, r6, lr}
   5d38c:	mov	r5, r0
   5d390:	bl	5d1a0 <lua_newuserdata@@Base+0xa8>
   5d394:	mov	r4, r0
   5d398:	bl	12d48 <tmpfile64@plt>
   5d39c:	cmp	r0, #0
   5d3a0:	str	r0, [r4]
   5d3a4:	beq	5d3b0 <lua_newuserdata@@Base+0x2b8>
   5d3a8:	mov	r0, #1
   5d3ac:	pop	{r4, r5, r6, pc}
   5d3b0:	mov	r1, r0
   5d3b4:	mov	r0, r5
   5d3b8:	pop	{r4, r5, r6, lr}
   5d3bc:	b	5bcf0 <lua_pushfstring@@Base+0x98>
   5d3c0:	push	{r4, r5, r6, r7, r8, lr}
   5d3c4:	mov	r1, #1
   5d3c8:	mov	r4, r0
   5d3cc:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   5d3d0:	ldr	r3, [r4, #16]
   5d3d4:	ldr	r1, [r4, #20]
   5d3d8:	add	r2, r3, #8
   5d3dc:	cmp	r1, r2
   5d3e0:	add	r8, r0, #16
   5d3e4:	bls	5d3f4 <lua_newuserdata@@Base+0x2fc>
   5d3e8:	ldr	r3, [r3, #12]
   5d3ec:	cmn	r3, #1
   5d3f0:	bne	5d434 <lua_newuserdata@@Base+0x33c>
   5d3f4:	ldr	r7, [pc, #100]	; 5d460 <lua_newuserdata@@Base+0x368>
   5d3f8:	mov	r0, r4
   5d3fc:	bl	5d1a0 <lua_newuserdata@@Base+0xa8>
   5d400:	mov	r6, #1
   5d404:	mov	r5, r0
   5d408:	str	r6, [r0, #4]
   5d40c:	mov	r0, #0
   5d410:	bl	12c7c <fflush@plt>
   5d414:	mov	r1, r7
   5d418:	mov	r0, r8
   5d41c:	bl	12f94 <popen@plt>
   5d420:	cmp	r0, #0
   5d424:	str	r0, [r5]
   5d428:	beq	5d450 <lua_newuserdata@@Base+0x358>
   5d42c:	mov	r0, r6
   5d430:	pop	{r4, r5, r6, r7, r8, pc}
   5d434:	mov	r1, #2
   5d438:	mov	r0, r4
   5d43c:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   5d440:	cmp	r0, #0
   5d444:	beq	5d3f4 <lua_newuserdata@@Base+0x2fc>
   5d448:	add	r7, r0, #16
   5d44c:	b	5d3f8 <lua_newuserdata@@Base+0x300>
   5d450:	mov	r1, r8
   5d454:	mov	r0, r4
   5d458:	pop	{r4, r5, r6, r7, r8, lr}
   5d45c:	b	5bcf0 <lua_pushfstring@@Base+0x98>
   5d460:	andeq	r3, r7, r0, asr #3
   5d464:	push	{r4, r5, r6, r7, r8, lr}
   5d468:	mov	r1, #1
   5d46c:	mov	r4, r0
   5d470:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   5d474:	ldr	r3, [r4, #16]
   5d478:	ldr	r1, [r4, #20]
   5d47c:	add	r2, r3, #8
   5d480:	cmp	r1, r2
   5d484:	add	r6, r0, #16
   5d488:	bls	5d498 <lua_newuserdata@@Base+0x3a0>
   5d48c:	ldr	r3, [r3, #12]
   5d490:	cmn	r3, #1
   5d494:	bne	5d4c8 <lua_newuserdata@@Base+0x3d0>
   5d498:	ldr	r5, [pc, #84]	; 5d4f4 <lua_newuserdata@@Base+0x3fc>
   5d49c:	mov	r0, r4
   5d4a0:	bl	5d1a0 <lua_newuserdata@@Base+0xa8>
   5d4a4:	mov	r1, r5
   5d4a8:	mov	r7, r0
   5d4ac:	mov	r0, r6
   5d4b0:	bl	12fdc <fopen64@plt>
   5d4b4:	cmp	r0, #0
   5d4b8:	str	r0, [r7]
   5d4bc:	beq	5d4e4 <lua_newuserdata@@Base+0x3ec>
   5d4c0:	mov	r0, #1
   5d4c4:	pop	{r4, r5, r6, r7, r8, pc}
   5d4c8:	mov	r1, #2
   5d4cc:	mov	r0, r4
   5d4d0:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   5d4d4:	cmp	r0, #0
   5d4d8:	beq	5d498 <lua_newuserdata@@Base+0x3a0>
   5d4dc:	add	r5, r0, #16
   5d4e0:	b	5d49c <lua_newuserdata@@Base+0x3a4>
   5d4e4:	mov	r1, r6
   5d4e8:	mov	r0, r4
   5d4ec:	pop	{r4, r5, r6, r7, r8, lr}
   5d4f0:	b	5bcf0 <lua_pushfstring@@Base+0x98>
   5d4f4:	andeq	r3, r7, r0, asr #3

0005d4f8 <lua_concat@@Base>:
   5d4f8:	cmp	r1, #1
   5d4fc:	ble	5d504 <lua_concat@@Base+0xc>
   5d500:	b	45d54 <luaL_typerror@@Base+0xf9e8>
   5d504:	cmp	r1, #0
   5d508:	bxne	lr
   5d50c:	ldr	r3, [r0, #20]
   5d510:	push	{lr}		; (str lr, [sp, #-4]!)
   5d514:	add	ip, r3, #8
   5d518:	ldr	lr, [r0, #24]
   5d51c:	ldr	r1, [r0, #8]
   5d520:	cmp	ip, lr
   5d524:	add	r1, r1, #96	; 0x60
   5d528:	mvn	lr, #4
   5d52c:	stm	r3, {r1, lr}
   5d530:	str	ip, [r0, #20]
   5d534:	popcc	{pc}		; (ldrcc pc, [sp], #4)
   5d538:	mov	r1, #1
   5d53c:	pop	{lr}		; (ldr lr, [sp], #4)
   5d540:	b	1fd08 <lua_getstack@@Base+0x50>

0005d544 <luaL_traceback@@Base>:
   5d544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5d548:	cmp	r2, #0
   5d54c:	ldr	r8, [r0, #20]
   5d550:	ldr	ip, [r0, #16]
   5d554:	sub	sp, sp, #108	; 0x6c
   5d558:	sub	r8, r8, ip
   5d55c:	mov	r4, r0
   5d560:	mov	r5, r1
   5d564:	mov	r7, r3
   5d568:	asr	r8, r8, #3
   5d56c:	beq	5d578 <luaL_traceback@@Base+0x34>
   5d570:	ldr	r1, [pc, #464]	; 5d748 <luaL_traceback@@Base+0x204>
   5d574:	bl	5bc58 <lua_pushfstring@@Base>
   5d578:	mov	r2, #16
   5d57c:	ldr	r1, [pc, #456]	; 5d74c <luaL_traceback@@Base+0x208>
   5d580:	mov	r0, r4
   5d584:	bl	5b190 <lua_pushlstring@@Base>
   5d588:	ldr	sl, [pc, #448]	; 5d750 <luaL_traceback@@Base+0x20c>
   5d58c:	ldr	fp, [pc, #448]	; 5d754 <luaL_traceback@@Base+0x210>
   5d590:	mov	r9, #12
   5d594:	add	r6, r7, #1
   5d598:	add	r2, sp, #4
   5d59c:	mov	r1, r7
   5d5a0:	mov	r0, r5
   5d5a4:	bl	1fcb8 <lua_getstack@@Base>
   5d5a8:	cmp	r0, #0
   5d5ac:	beq	5d6f0 <luaL_traceback@@Base+0x1ac>
   5d5b0:	cmp	r9, r6
   5d5b4:	blt	5d68c <luaL_traceback@@Base+0x148>
   5d5b8:	mov	r3, #0
   5d5bc:	add	r2, sp, #4
   5d5c0:	mov	r1, sl
   5d5c4:	mov	r0, r5
   5d5c8:	bl	52304 <lua_getlocal@@Base+0xbc>
   5d5cc:	ldr	r3, [r5, #20]
   5d5d0:	ldr	r7, [r3, #-8]!
   5d5d4:	str	r3, [r5, #20]
   5d5d8:	ldrb	r2, [r7, #6]
   5d5dc:	cmp	r2, #1
   5d5e0:	bls	5d5f4 <luaL_traceback@@Base+0xb0>
   5d5e4:	ldr	r3, [sp, #12]
   5d5e8:	ldrb	r3, [r3]
   5d5ec:	cmp	r3, #0
   5d5f0:	beq	5d710 <luaL_traceback@@Base+0x1cc>
   5d5f4:	add	r2, sp, #40	; 0x28
   5d5f8:	ldr	r1, [pc, #344]	; 5d758 <luaL_traceback@@Base+0x214>
   5d5fc:	mov	r0, r4
   5d600:	bl	5bc58 <lua_pushfstring@@Base>
   5d604:	ldr	r2, [sp, #24]
   5d608:	cmp	r2, #0
   5d60c:	ble	5d61c <luaL_traceback@@Base+0xd8>
   5d610:	mov	r1, fp
   5d614:	mov	r0, r4
   5d618:	bl	5bc58 <lua_pushfstring@@Base>
   5d61c:	ldr	r3, [sp, #12]
   5d620:	ldrb	r3, [r3]
   5d624:	cmp	r3, #0
   5d628:	bne	5d6dc <luaL_traceback@@Base+0x198>
   5d62c:	ldr	r3, [sp, #16]
   5d630:	ldrb	r3, [r3]
   5d634:	cmp	r3, #109	; 0x6d
   5d638:	beq	5d734 <luaL_traceback@@Base+0x1f0>
   5d63c:	cmp	r3, #67	; 0x43
   5d640:	beq	5d720 <luaL_traceback@@Base+0x1dc>
   5d644:	ldr	r3, [sp, #32]
   5d648:	add	r2, sp, #40	; 0x28
   5d64c:	ldr	r1, [pc, #264]	; 5d75c <luaL_traceback@@Base+0x218>
   5d650:	mov	r0, r4
   5d654:	bl	5bc58 <lua_pushfstring@@Base>
   5d658:	ldr	r1, [r4, #20]
   5d65c:	ldr	r3, [r4, #16]
   5d660:	sub	r1, r1, r3
   5d664:	rsb	r1, r8, r1, asr #3
   5d668:	cmp	r1, #14
   5d66c:	movle	r7, r6
   5d670:	addle	r6, r6, #1
   5d674:	ble	5d598 <luaL_traceback@@Base+0x54>
   5d678:	mov	r0, r4
   5d67c:	mov	r7, r6
   5d680:	bl	5d4f8 <lua_concat@@Base>
   5d684:	add	r6, r6, #1
   5d688:	b	5d598 <luaL_traceback@@Base+0x54>
   5d68c:	add	r2, sp, #4
   5d690:	add	r1, r7, #11
   5d694:	mov	r0, r5
   5d698:	bl	1fcb8 <lua_getstack@@Base>
   5d69c:	cmp	r0, #0
   5d6a0:	mvneq	r9, #-2147483648	; 0x80000000
   5d6a4:	beq	5d598 <luaL_traceback@@Base+0x54>
   5d6a8:	mov	r2, #5
   5d6ac:	ldr	r1, [pc, #172]	; 5d760 <luaL_traceback@@Base+0x21c>
   5d6b0:	mov	r0, r4
   5d6b4:	bl	5b190 <lua_pushlstring@@Base>
   5d6b8:	add	r2, sp, #4
   5d6bc:	mvn	r1, #9
   5d6c0:	mov	r0, r5
   5d6c4:	bl	1fcb8 <lua_getstack@@Base>
   5d6c8:	ldr	r6, [sp, #100]	; 0x64
   5d6cc:	mvn	r9, #-2147483648	; 0x80000000
   5d6d0:	sub	r7, r6, #10
   5d6d4:	sub	r6, r6, #9
   5d6d8:	b	5d598 <luaL_traceback@@Base+0x54>
   5d6dc:	ldr	r2, [sp, #8]
   5d6e0:	ldr	r1, [pc, #124]	; 5d764 <luaL_traceback@@Base+0x220>
   5d6e4:	mov	r0, r4
   5d6e8:	bl	5bc58 <lua_pushfstring@@Base>
   5d6ec:	b	5d658 <luaL_traceback@@Base+0x114>
   5d6f0:	ldr	r1, [r4, #20]
   5d6f4:	ldr	r3, [r4, #16]
   5d6f8:	mov	r0, r4
   5d6fc:	sub	r1, r1, r3
   5d700:	rsb	r1, r8, r1, asr #3
   5d704:	bl	5d4f8 <lua_concat@@Base>
   5d708:	add	sp, sp, #108	; 0x6c
   5d70c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5d710:	ldr	r1, [pc, #80]	; 5d768 <luaL_traceback@@Base+0x224>
   5d714:	mov	r0, r4
   5d718:	bl	5bc58 <lua_pushfstring@@Base>
   5d71c:	b	5d604 <luaL_traceback@@Base+0xc0>
   5d720:	ldr	r2, [r7, #20]
   5d724:	ldr	r1, [pc, #64]	; 5d76c <luaL_traceback@@Base+0x228>
   5d728:	mov	r0, r4
   5d72c:	bl	5bc58 <lua_pushfstring@@Base>
   5d730:	b	5d658 <luaL_traceback@@Base+0x114>
   5d734:	mov	r2, #14
   5d738:	ldr	r1, [pc, #48]	; 5d770 <luaL_traceback@@Base+0x22c>
   5d73c:	mov	r0, r4
   5d740:	bl	5b190 <lua_pushlstring@@Base>
   5d744:	b	5d658 <luaL_traceback@@Base+0x114>
   5d748:	andeq	r3, r7, r4, ror #3
   5d74c:	andeq	r3, r7, r8, ror #3
   5d750:	andeq	r3, r7, r4, lsl #4
   5d754:	andeq	r3, r7, r4, lsr #4
   5d758:	andeq	r3, r7, ip, lsl r2
   5d75c:	andeq	r3, r7, r4, asr r2
   5d760:	strdeq	r3, [r7], -ip
   5d764:	andeq	r3, r7, r8, lsr #4
   5d768:	andeq	r3, r7, ip, lsl #4
   5d76c:	andeq	r3, r7, ip, asr #4
   5d770:	andeq	r3, r7, ip, lsr r2
   5d774:	ldr	r3, [r0, #16]
   5d778:	ldr	r2, [r0, #20]
   5d77c:	push	{r4, r5, r6, r7, r8, lr}
   5d780:	cmp	r3, r2
   5d784:	mov	r4, r0
   5d788:	bcs	5d798 <luaL_traceback@@Base+0x254>
   5d78c:	ldr	r2, [r3, #4]
   5d790:	cmn	r2, #7
   5d794:	beq	5d83c <luaL_traceback@@Base+0x2f8>
   5d798:	mov	r6, r4
   5d79c:	mov	r1, #1
   5d7a0:	mov	r5, #0
   5d7a4:	mov	r2, #0
   5d7a8:	mov	r0, r4
   5d7ac:	bl	5ab5c <lua_tolstring@@Base>
   5d7b0:	subs	r7, r0, #0
   5d7b4:	beq	5d810 <luaL_traceback@@Base+0x2cc>
   5d7b8:	ldr	lr, [r4, #20]
   5d7bc:	ldr	r3, [r4, #16]
   5d7c0:	add	ip, r5, #536870913	; 0x20000001
   5d7c4:	add	r1, r5, #2
   5d7c8:	add	ip, r3, ip, lsl #3
   5d7cc:	cmp	lr, ip
   5d7d0:	sub	r3, r4, r6
   5d7d4:	clz	r3, r3
   5d7d8:	lsr	r3, r3, #5
   5d7dc:	bls	5d7f8 <luaL_traceback@@Base+0x2b4>
   5d7e0:	ldr	r2, [ip, #4]
   5d7e4:	cmn	r2, #1
   5d7e8:	beq	5d7f8 <luaL_traceback@@Base+0x2b4>
   5d7ec:	mov	r0, r4
   5d7f0:	bl	3638c <luaL_typerror@@Base+0x20>
   5d7f4:	mov	r3, r0
   5d7f8:	mov	r0, r4
   5d7fc:	mov	r2, r7
   5d800:	mov	r1, r6
   5d804:	bl	5d544 <luaL_traceback@@Base>
   5d808:	mov	r0, #1
   5d80c:	pop	{r4, r5, r6, r7, r8, pc}
   5d810:	ldr	r3, [r4, #16]
   5d814:	lsl	r2, r5, #3
   5d818:	ldr	lr, [r4, #20]
   5d81c:	add	r1, r3, r2
   5d820:	cmp	lr, r1
   5d824:	bls	5d7c0 <luaL_traceback@@Base+0x27c>
   5d828:	add	r2, r2, #8
   5d82c:	add	r3, r3, r2
   5d830:	str	r3, [r4, #20]
   5d834:	mov	r0, #1
   5d838:	pop	{r4, r5, r6, r7, r8, pc}
   5d83c:	ldr	r6, [r3]
   5d840:	mov	r1, #2
   5d844:	mov	r5, #1
   5d848:	b	5d7a4 <luaL_traceback@@Base+0x260>
   5d84c:	push	{r4, r5, r6, r7, r8, lr}
   5d850:	mov	r6, r0
   5d854:	ldr	r7, [r1]
   5d858:	mvn	r1, #0
   5d85c:	mov	r0, r7
   5d860:	bl	5af30 <lua_objlen@@Base>
   5d864:	mov	r4, #1
   5d868:	mov	r5, r0
   5d86c:	mvn	r1, r4
   5d870:	mov	r0, r7
   5d874:	bl	5af30 <lua_objlen@@Base>
   5d878:	ldr	r2, [r6]
   5d87c:	sub	r1, r2, r4
   5d880:	cmp	r1, #8
   5d884:	movgt	r3, #0
   5d888:	movle	r3, #1
   5d88c:	cmp	r0, r5
   5d890:	movcc	r3, #0
   5d894:	cmp	r3, #0
   5d898:	bne	5d8ac <luaL_traceback@@Base+0x368>
   5d89c:	add	r4, r4, #1
   5d8a0:	cmp	r2, r4
   5d8a4:	add	r5, r5, r0
   5d8a8:	bgt	5d86c <luaL_traceback@@Base+0x328>
   5d8ac:	mov	r1, r4
   5d8b0:	mov	r0, r7
   5d8b4:	bl	5d4f8 <lua_concat@@Base>
   5d8b8:	ldr	r3, [r6]
   5d8bc:	sub	r4, r3, r4
   5d8c0:	add	r4, r4, #1
   5d8c4:	str	r4, [r6]
   5d8c8:	pop	{r4, r5, r6, r7, r8, pc}

0005d8cc <lua_gettable@@Base>:
   5d8cc:	push	{r4, lr}
   5d8d0:	mov	r4, r0
   5d8d4:	bl	1b44c <_start@@Base+0x809c>
   5d8d8:	ldr	r2, [r4, #20]
   5d8dc:	sub	r2, r2, #8
   5d8e0:	mov	r1, r0
   5d8e4:	mov	r0, r4
   5d8e8:	bl	457dc <luaL_typerror@@Base+0xf470>
   5d8ec:	cmp	r0, #0
   5d8f0:	beq	5d904 <lua_gettable@@Base+0x38>
   5d8f4:	ldr	r3, [r4, #20]
   5d8f8:	ldrd	r0, [r0]
   5d8fc:	strd	r0, [r3, #-8]
   5d900:	pop	{r4, pc}
   5d904:	ldr	r1, [r4, #20]
   5d908:	mov	r0, r4
   5d90c:	add	r3, r1, #16
   5d910:	str	r3, [r4, #20]
   5d914:	mov	r2, #2
   5d918:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   5d91c:	ldr	r3, [r4, #20]
   5d920:	sub	r0, r3, #8
   5d924:	sub	r3, r3, #16
   5d928:	str	r3, [r4, #20]
   5d92c:	b	5d8f8 <lua_gettable@@Base+0x2c>
   5d930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5d934:	mov	r4, r0
   5d938:	ldr	r5, [r0, #16]
   5d93c:	ldr	r3, [r0, #36]	; 0x24
   5d940:	ldr	r0, [r0, #20]
   5d944:	ldr	ip, [r5, #-8]
   5d948:	ldr	r2, [r3, #28]
   5d94c:	sub	r5, r0, r5
   5d950:	ldr	r1, [ip, #24]
   5d954:	ldr	r3, [r3, #20]
   5d958:	sub	sp, sp, #12
   5d95c:	ldr	lr, [r1, #8]
   5d960:	asr	r8, r5, #3
   5d964:	and	r2, r2, lr
   5d968:	add	r2, r2, r2, lsl #1
   5d96c:	add	r3, r3, r2, lsl #3
   5d970:	b	5d980 <lua_gettable@@Base+0xb4>
   5d974:	ldr	r3, [r3, #16]
   5d978:	cmp	r3, #0
   5d97c:	beq	5dac8 <lua_gettable@@Base+0x1fc>
   5d980:	ldr	r2, [r3, #12]
   5d984:	cmn	r2, #5
   5d988:	bne	5d974 <lua_gettable@@Base+0xa8>
   5d98c:	ldr	r2, [r3, #8]
   5d990:	cmp	r1, r2
   5d994:	bne	5d974 <lua_gettable@@Base+0xa8>
   5d998:	ldr	r1, [r3, #4]
   5d99c:	add	r2, r0, #8
   5d9a0:	cmn	r1, #1
   5d9a4:	beq	5dacc <lua_gettable@@Base+0x200>
   5d9a8:	str	r2, [r4, #20]
   5d9ac:	mov	r1, r3
   5d9b0:	ldrd	r2, [r3]
   5d9b4:	strd	r2, [r0]
   5d9b8:	ldr	r3, [r1, #4]
   5d9bc:	cmn	r3, #9
   5d9c0:	movne	r7, #0
   5d9c4:	ldreq	r3, [r1]
   5d9c8:	ldrbeq	r7, [r3, #6]
   5d9cc:	subeq	r7, r7, #18
   5d9d0:	clzeq	r7, r7
   5d9d4:	lsreq	r7, r7, #5
   5d9d8:	cmp	r5, #0
   5d9dc:	ldrle	r9, [pc, #284]	; 5db00 <lua_gettable@@Base+0x234>
   5d9e0:	ble	5dab0 <lua_gettable@@Base+0x1e4>
   5d9e4:	ldr	r6, [pc, #276]	; 5db00 <lua_gettable@@Base+0x234>
   5d9e8:	mov	r5, #0
   5d9ec:	b	5da48 <lua_gettable@@Base+0x17c>
   5d9f0:	add	r2, sp, #4
   5d9f4:	mov	r0, r4
   5d9f8:	bl	322d0 <luaL_where@@Base+0x121cc>
   5d9fc:	subs	fp, r0, #0
   5da00:	beq	5da5c <lua_gettable@@Base+0x190>
   5da04:	ldr	r3, [sp, #4]
   5da08:	str	r3, [sp]
   5da0c:	cmp	r5, #0
   5da10:	mov	r9, r6
   5da14:	ldr	r3, [r6]
   5da18:	beq	5da2c <lua_gettable@@Base+0x160>
   5da1c:	mov	r1, r3
   5da20:	mov	r0, #9
   5da24:	bl	12d60 <_IO_putc@plt>
   5da28:	ldr	r3, [r6]
   5da2c:	mov	r0, fp
   5da30:	add	r5, r5, #1
   5da34:	ldr	r2, [sp]
   5da38:	mov	r1, #1
   5da3c:	bl	12d6c <fwrite@plt>
   5da40:	cmp	r8, r5
   5da44:	ble	5dab0 <lua_gettable@@Base+0x1e4>
   5da48:	ldr	sl, [r4, #16]
   5da4c:	lsl	r9, r5, #3
   5da50:	cmp	r7, #0
   5da54:	add	r1, sl, r9
   5da58:	bne	5d9f0 <lua_gettable@@Base+0x124>
   5da5c:	ldr	r0, [r4, #20]
   5da60:	ldrd	r2, [sl, r9]
   5da64:	add	ip, r0, #16
   5da68:	ldrd	sl, [r0, #-8]
   5da6c:	strd	r2, [r0, #8]
   5da70:	add	r1, r0, #8
   5da74:	strd	sl, [r0]
   5da78:	mov	r2, #2
   5da7c:	str	ip, [r4, #20]
   5da80:	mov	r0, r4
   5da84:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   5da88:	mov	r2, sp
   5da8c:	mvn	r1, #0
   5da90:	mov	r0, r4
   5da94:	bl	5ab5c <lua_tolstring@@Base>
   5da98:	subs	fp, r0, #0
   5da9c:	beq	5daf4 <lua_gettable@@Base+0x228>
   5daa0:	ldr	r3, [r4, #20]
   5daa4:	sub	r3, r3, #8
   5daa8:	str	r3, [r4, #20]
   5daac:	b	5da0c <lua_gettable@@Base+0x140>
   5dab0:	ldr	r1, [r9]
   5dab4:	mov	r0, #10
   5dab8:	bl	12d60 <_IO_putc@plt>
   5dabc:	mov	r0, #0
   5dac0:	add	sp, sp, #12
   5dac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5dac8:	add	r2, r0, #8
   5dacc:	str	r2, [r4, #20]
   5dad0:	ldr	r2, [ip, #24]
   5dad4:	mvn	r3, #4
   5dad8:	ldr	r1, [pc, #36]	; 5db04 <lua_gettable@@Base+0x238>
   5dadc:	strd	r2, [r0]
   5dae0:	mov	r0, r4
   5dae4:	bl	5d8cc <lua_gettable@@Base>
   5dae8:	ldr	r3, [r4, #20]
   5daec:	sub	r1, r3, #8
   5daf0:	b	5d9b8 <lua_gettable@@Base+0xec>
   5daf4:	mov	r0, r4
   5daf8:	ldr	r1, [pc, #8]	; 5db08 <lua_gettable@@Base+0x23c>
   5dafc:	bl	35a48 <lua_error@@Base+0xa8>
   5db00:	andeq	r4, r8, ip, lsr #3
   5db04:			; <UNDEFINED> instruction: 0xffffd8ee
   5db08:	andeq	r0, r0, fp, lsl r4

0005db0c <lua_getfield@@Base>:
   5db0c:	push	{r4, r5, r6, lr}
   5db10:	sub	sp, sp, #8
   5db14:	mov	r5, r2
   5db18:	mov	r4, r0
   5db1c:	bl	1b44c <_start@@Base+0x809c>
   5db20:	mov	r6, r0
   5db24:	mov	r0, r5
   5db28:	bl	12e80 <strlen@plt>
   5db2c:	mov	r1, r5
   5db30:	mov	r2, r0
   5db34:	mov	r0, r4
   5db38:	bl	20260 <luaL_where@@Base+0x15c>
   5db3c:	mvn	r3, #4
   5db40:	mov	r1, r6
   5db44:	mov	r2, sp
   5db48:	stm	sp, {r0, r3}
   5db4c:	mov	r0, r4
   5db50:	bl	457dc <luaL_typerror@@Base+0xf470>
   5db54:	cmp	r0, #0
   5db58:	beq	5db90 <lua_getfield@@Base+0x84>
   5db5c:	ldr	r2, [r4, #20]
   5db60:	ldrd	r0, [r0]
   5db64:	ldr	ip, [r4, #24]
   5db68:	add	r3, r2, #8
   5db6c:	cmp	r3, ip
   5db70:	strd	r0, [r2]
   5db74:	str	r3, [r4, #20]
   5db78:	bcc	5db88 <lua_getfield@@Base+0x7c>
   5db7c:	mov	r0, r4
   5db80:	mov	r1, #1
   5db84:	bl	1fd08 <lua_getstack@@Base+0x50>
   5db88:	add	sp, sp, #8
   5db8c:	pop	{r4, r5, r6, pc}
   5db90:	ldr	r1, [r4, #20]
   5db94:	mov	r2, #2
   5db98:	add	r3, r1, #16
   5db9c:	mov	r0, r4
   5dba0:	str	r3, [r4, #20]
   5dba4:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   5dba8:	ldr	r0, [r4, #20]
   5dbac:	sub	r2, r0, #16
   5dbb0:	sub	r0, r0, #8
   5dbb4:	b	5db60 <lua_getfield@@Base+0x54>
   5dbb8:	push	{r4, r5, r6, lr}
   5dbbc:	mov	r4, r0
   5dbc0:	mov	r6, r1
   5dbc4:	mov	r5, r2
   5dbc8:	mov	r2, r1
   5dbcc:	mvn	r1, #0
   5dbd0:	bl	5db0c <lua_getfield@@Base>
   5dbd4:	mov	r0, r4
   5dbd8:	mvn	r1, #0
   5dbdc:	bl	5a320 <lua_isnumber@@Base>
   5dbe0:	cmp	r0, #0
   5dbe4:	bne	5dc04 <lua_getfield@@Base+0xf8>
   5dbe8:	cmn	r5, #1
   5dbec:	beq	5dc18 <lua_getfield@@Base+0x10c>
   5dbf0:	ldr	r3, [r4, #20]
   5dbf4:	mov	r0, r5
   5dbf8:	sub	r3, r3, #8
   5dbfc:	str	r3, [r4, #20]
   5dc00:	pop	{r4, r5, r6, pc}
   5dc04:	mvn	r1, #0
   5dc08:	mov	r0, r4
   5dc0c:	bl	5a8b8 <lua_tointeger@@Base>
   5dc10:	mov	r5, r0
   5dc14:	b	5dbf0 <lua_getfield@@Base+0xe4>
   5dc18:	mov	r2, r6
   5dc1c:	mov	r0, r4
   5dc20:	ldr	r1, [pc]	; 5dc28 <lua_getfield@@Base+0x11c>
   5dc24:	bl	4a618 <luaL_error@@Base+0x452c>
   5dc28:	andeq	r0, r0, sp, lsr #12
   5dc2c:	push	{r4, lr}
   5dc30:	mov	r1, #1
   5dc34:	sub	sp, sp, #48	; 0x30
   5dc38:	mov	r4, r0
   5dc3c:	bl	5a214 <lua_type@@Base>
   5dc40:	cmp	r0, #0
   5dc44:	ble	5dd88 <lua_getfield@@Base+0x27c>
   5dc48:	mov	r2, #5
   5dc4c:	mov	r1, #1
   5dc50:	mov	r0, r4
   5dc54:	bl	5a27c <luaL_checktype@@Base>
   5dc58:	mov	r1, #1
   5dc5c:	mov	r0, r4
   5dc60:	bl	59f30 <lua_settop@@Base>
   5dc64:	mov	r2, #0
   5dc68:	ldr	r1, [pc, #320]	; 5ddb0 <lua_getfield@@Base+0x2a4>
   5dc6c:	mov	r0, r4
   5dc70:	bl	5dbb8 <lua_getfield@@Base+0xac>
   5dc74:	mov	r2, #0
   5dc78:	ldr	r1, [pc, #308]	; 5ddb4 <lua_getfield@@Base+0x2a8>
   5dc7c:	str	r0, [sp, #4]
   5dc80:	mov	r0, r4
   5dc84:	bl	5dbb8 <lua_getfield@@Base+0xac>
   5dc88:	mov	r2, #12
   5dc8c:	ldr	r1, [pc, #292]	; 5ddb8 <lua_getfield@@Base+0x2ac>
   5dc90:	str	r0, [sp, #8]
   5dc94:	mov	r0, r4
   5dc98:	bl	5dbb8 <lua_getfield@@Base+0xac>
   5dc9c:	mvn	r2, #0
   5dca0:	ldr	r1, [pc, #276]	; 5ddbc <lua_getfield@@Base+0x2b0>
   5dca4:	str	r0, [sp, #12]
   5dca8:	mov	r0, r4
   5dcac:	bl	5dbb8 <lua_getfield@@Base+0xac>
   5dcb0:	mvn	r2, #0
   5dcb4:	ldr	r1, [pc, #260]	; 5ddc0 <lua_getfield@@Base+0x2b4>
   5dcb8:	str	r0, [sp, #16]
   5dcbc:	mov	r0, r4
   5dcc0:	bl	5dbb8 <lua_getfield@@Base+0xac>
   5dcc4:	mvn	r2, #0
   5dcc8:	ldr	r1, [pc, #244]	; 5ddc4 <lua_getfield@@Base+0x2b8>
   5dccc:	add	r3, r0, r2
   5dcd0:	mov	r0, r4
   5dcd4:	str	r3, [sp, #20]
   5dcd8:	bl	5dbb8 <lua_getfield@@Base+0xac>
   5dcdc:	ldr	r2, [pc, #228]	; 5ddc8 <lua_getfield@@Base+0x2bc>
   5dce0:	mvn	r1, #0
   5dce4:	sub	r3, r0, #1888	; 0x760
   5dce8:	sub	r3, r3, #12
   5dcec:	mov	r0, r4
   5dcf0:	str	r3, [sp, #24]
   5dcf4:	bl	5db0c <lua_getfield@@Base>
   5dcf8:	mvn	r1, #0
   5dcfc:	mov	r0, r4
   5dd00:	bl	5a214 <lua_type@@Base>
   5dd04:	ldr	r3, [r4, #20]
   5dd08:	cmp	r0, #0
   5dd0c:	mvneq	r2, #0
   5dd10:	beq	5dd24 <lua_getfield@@Base+0x218>
   5dd14:	ldr	r2, [r3, #-4]
   5dd18:	cmn	r2, #3
   5dd1c:	movhi	r2, #0
   5dd20:	movls	r2, #1
   5dd24:	sub	r3, r3, #8
   5dd28:	str	r3, [r4, #20]
   5dd2c:	add	r0, sp, #4
   5dd30:	str	r2, [sp, #36]	; 0x24
   5dd34:	bl	12c70 <mktime@plt>
   5dd38:	mov	r3, r0
   5dd3c:	cmn	r3, #1
   5dd40:	bne	5dd6c <lua_getfield@@Base+0x260>
   5dd44:	ldr	r1, [r4, #20]
   5dd48:	ldr	r0, [r4, #24]
   5dd4c:	add	r2, r1, #8
   5dd50:	cmp	r2, r0
   5dd54:	str	r3, [r1, #4]
   5dd58:	str	r2, [r4, #20]
   5dd5c:	bcs	5dd98 <lua_getfield@@Base+0x28c>
   5dd60:	mov	r0, #1
   5dd64:	add	sp, sp, #48	; 0x30
   5dd68:	pop	{r4, pc}
   5dd6c:	vmov	s15, r3
   5dd70:	mov	r0, r4
   5dd74:	vcvt.f64.s32	d0, s15
   5dd78:	bl	5b0b4 <lua_pushnumber@@Base>
   5dd7c:	mov	r0, #1
   5dd80:	add	sp, sp, #48	; 0x30
   5dd84:	pop	{r4, pc}
   5dd88:	mov	r0, #0
   5dd8c:	bl	12cdc <time@plt>
   5dd90:	mov	r3, r0
   5dd94:	b	5dd3c <lua_getfield@@Base+0x230>
   5dd98:	mov	r0, r4
   5dd9c:	mov	r1, #1
   5dda0:	bl	1fd08 <lua_getstack@@Base+0x50>
   5dda4:	mov	r0, #1
   5dda8:	add	sp, sp, #48	; 0x30
   5ddac:	pop	{r4, pc}
   5ddb0:	andeq	r3, r7, ip, ror #4
   5ddb4:	andeq	r3, r7, r0, ror r2
   5ddb8:	andeq	r3, r7, r4, ror r2
   5ddbc:	andeq	r3, r7, ip, ror r2
   5ddc0:	andeq	r3, r7, r0, lsl #5
   5ddc4:	andeq	r3, r7, r8, lsl #5
   5ddc8:	muleq	r7, r0, r2

0005ddcc <lua_rawget@@Base>:
   5ddcc:	push	{r4, r5, r6, lr}
   5ddd0:	mov	r5, r0
   5ddd4:	bl	1b44c <_start@@Base+0x809c>
   5ddd8:	ldr	r4, [r5, #20]
   5dddc:	sub	r2, r4, #8
   5dde0:	ldr	r1, [r0]
   5dde4:	mov	r0, r5
   5dde8:	bl	1f4f8 <lua_atpanic@@Base+0x328>
   5ddec:	ldrd	r2, [r0]
   5ddf0:	strd	r2, [r4, #-8]
   5ddf4:	pop	{r4, r5, r6, pc}
   5ddf8:	ldr	r2, [r0, #8]
   5ddfc:	ldr	r1, [pc, #260]	; 5df08 <lua_rawget@@Base+0x13c>
   5de00:	push	{r4, r5, lr}
   5de04:	mov	r4, r0
   5de08:	ldr	r3, [r2, #200]	; 0xc8
   5de0c:	sub	sp, sp, #12
   5de10:	cmp	r3, #0
   5de14:	cmpne	r3, r1
   5de18:	ldrb	r5, [r2, #113]	; 0x71
   5de1c:	bne	5def8 <lua_rawget@@Base+0x12c>
   5de20:	ldr	r3, [r0, #20]
   5de24:	ldr	ip, [r0, #24]
   5de28:	ldr	r1, [pc, #220]	; 5df0c <lua_rawget@@Base+0x140>
   5de2c:	add	r2, r3, #8
   5de30:	str	r1, [r3]
   5de34:	cmp	r2, ip
   5de38:	mvn	r1, #3
   5de3c:	str	r1, [r3, #4]
   5de40:	str	r2, [r0, #20]
   5de44:	bcs	5deec <lua_rawget@@Base+0x120>
   5de48:	ldr	r1, [pc, #192]	; 5df10 <lua_rawget@@Base+0x144>
   5de4c:	mov	r0, r4
   5de50:	bl	5ddcc <lua_rawget@@Base>
   5de54:	ands	r3, r5, #1
   5de58:	movne	r3, #99	; 0x63
   5de5c:	moveq	r1, sp
   5de60:	strbne	r3, [sp]
   5de64:	addne	r2, sp, #1
   5de68:	movne	r3, #1
   5de6c:	movne	r1, sp
   5de70:	moveq	r2, r1
   5de74:	tst	r5, #2
   5de78:	addne	r3, r3, #1
   5de7c:	movne	r0, #114	; 0x72
   5de80:	strbne	r0, [r2]
   5de84:	addne	r2, r1, r3
   5de88:	tst	r5, #4
   5de8c:	addne	r3, r3, #1
   5de90:	movne	r0, #108	; 0x6c
   5de94:	strbne	r0, [r2]
   5de98:	addne	r2, r1, r3
   5de9c:	mov	r3, #0
   5dea0:	strb	r3, [r2]
   5dea4:	mov	r0, r4
   5dea8:	bl	5b7a0 <lua_pushstring@@Base>
   5deac:	ldr	r2, [r4, #8]
   5deb0:	ldr	r3, [r4, #20]
   5deb4:	ldr	r1, [r4, #24]
   5deb8:	ldr	r0, [r2, #196]	; 0xc4
   5debc:	add	r2, r3, #8
   5dec0:	cmp	r2, r1
   5dec4:	mvn	r1, #13
   5dec8:	strd	r0, [r3]
   5decc:	str	r2, [r4, #20]
   5ded0:	bcc	5dee0 <lua_rawget@@Base+0x114>
   5ded4:	mov	r0, r4
   5ded8:	mov	r1, #1
   5dedc:	bl	1fd08 <lua_getstack@@Base+0x50>
   5dee0:	mov	r0, #3
   5dee4:	add	sp, sp, #12
   5dee8:	pop	{r4, r5, pc}
   5deec:	mov	r1, #1
   5def0:	bl	1fd08 <lua_getstack@@Base+0x50>
   5def4:	b	5de48 <lua_rawget@@Base+0x7c>
   5def8:	mov	r2, #13
   5defc:	ldr	r1, [pc, #16]	; 5df14 <lua_rawget@@Base+0x148>
   5df00:	bl	5b190 <lua_pushlstring@@Base>
   5df04:	b	5de54 <lua_rawget@@Base+0x88>
   5df08:	andeq	sp, r5, r8, lsl pc
   5df0c:	andeq	r3, r0, r4
   5df10:			; <UNDEFINED> instruction: 0xffffd8f0
   5df14:	muleq	r7, r8, r2
   5df18:	ldr	r3, [r0, #20]
   5df1c:	push	{r4, r5, r6, lr}
   5df20:	add	r2, r3, #8
   5df24:	ldr	lr, [r0, #24]
   5df28:	ldr	ip, [pc, #216]	; 5e008 <lua_rawget@@Base+0x23c>
   5df2c:	mov	r5, r1
   5df30:	cmp	r2, lr
   5df34:	mvn	r1, #3
   5df38:	str	ip, [r3]
   5df3c:	str	r1, [r3, #4]
   5df40:	mov	r4, r0
   5df44:	str	r2, [r0, #20]
   5df48:	bcs	5dfc8 <lua_rawget@@Base+0x1fc>
   5df4c:	ldr	r1, [pc, #184]	; 5e00c <lua_rawget@@Base+0x240>
   5df50:	mov	r0, r4
   5df54:	bl	5ddcc <lua_rawget@@Base>
   5df58:	mvn	r1, #0
   5df5c:	mov	r0, r4
   5df60:	bl	5a214 <lua_type@@Base>
   5df64:	cmp	r0, #6
   5df68:	popne	{r4, r5, r6, pc}
   5df6c:	ldr	r2, [r5]
   5df70:	ldr	r3, [pc, #152]	; 5e010 <lua_rawget@@Base+0x244>
   5df74:	mov	r0, r4
   5df78:	add	r3, r3, r2, lsl #2
   5df7c:	ldr	r1, [r3, #-56]	; 0xffffffc8
   5df80:	bl	5b7a0 <lua_pushstring@@Base>
   5df84:	ldr	r3, [r5, #20]
   5df88:	cmp	r3, #0
   5df8c:	blt	5dfd4 <lua_rawget@@Base+0x208>
   5df90:	ldr	r2, [r4, #20]
   5df94:	ldr	r0, [r4, #24]
   5df98:	add	r1, r2, #8
   5df9c:	cmp	r1, r0
   5dfa0:	mvn	r0, #13
   5dfa4:	str	r3, [r2]
   5dfa8:	str	r0, [r2, #4]
   5dfac:	str	r1, [r4, #20]
   5dfb0:	bcs	5dff4 <lua_rawget@@Base+0x228>
   5dfb4:	mov	r0, r4
   5dfb8:	sub	r1, r1, #16
   5dfbc:	mov	r2, #1
   5dfc0:	pop	{r4, r5, r6, lr}
   5dfc4:	b	6bc98 <luaL_openlibs@@Base+0x24d8>
   5dfc8:	mov	r1, #1
   5dfcc:	bl	1fd08 <lua_getstack@@Base+0x50>
   5dfd0:	b	5df4c <lua_rawget@@Base+0x180>
   5dfd4:	ldr	r3, [r4, #20]
   5dfd8:	ldr	r0, [r4, #24]
   5dfdc:	add	r1, r3, #8
   5dfe0:	mvn	r2, #0
   5dfe4:	cmp	r1, r0
   5dfe8:	str	r2, [r3, #4]
   5dfec:	str	r1, [r4, #20]
   5dff0:	bcc	5dfb4 <lua_rawget@@Base+0x1e8>
   5dff4:	mov	r1, #1
   5dff8:	mov	r0, r4
   5dffc:	bl	1fd08 <lua_getstack@@Base+0x50>
   5e000:	ldr	r1, [r4, #20]
   5e004:	b	5dfb4 <lua_rawget@@Base+0x1e8>
   5e008:	andeq	r3, r0, r4
   5e00c:			; <UNDEFINED> instruction: 0xffffd8f0
   5e010:			; <UNDEFINED> instruction: 0x00070cb0

0005e014 <lua_rawgeti@@Base>:
   5e014:	push	{r4, r5, r6, lr}
   5e018:	mov	r5, r2
   5e01c:	mov	r4, r0
   5e020:	bl	1b44c <_start@@Base+0x809c>
   5e024:	ldr	r0, [r0]
   5e028:	ldr	r3, [r0, #24]
   5e02c:	cmp	r3, r5
   5e030:	bls	5e074 <lua_rawgeti@@Base+0x60>
   5e034:	ldr	r0, [r0, #8]
   5e038:	ldr	r3, [r4, #20]
   5e03c:	add	r0, r0, r5, lsl #3
   5e040:	cmp	r0, #0
   5e044:	beq	5e088 <lua_rawgeti@@Base+0x74>
   5e048:	ldrd	r0, [r0]
   5e04c:	strd	r0, [r3]
   5e050:	ldr	r2, [r4, #24]
   5e054:	add	r3, r3, #8
   5e058:	cmp	r3, r2
   5e05c:	str	r3, [r4, #20]
   5e060:	popcc	{r4, r5, r6, pc}
   5e064:	mov	r0, r4
   5e068:	mov	r1, #1
   5e06c:	pop	{r4, r5, r6, lr}
   5e070:	b	1fd08 <lua_getstack@@Base+0x50>
   5e074:	mov	r1, r5
   5e078:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   5e07c:	ldr	r3, [r4, #20]
   5e080:	cmp	r0, #0
   5e084:	bne	5e048 <lua_rawgeti@@Base+0x34>
   5e088:	mvn	r2, #0
   5e08c:	str	r2, [r3, #4]
   5e090:	b	5e050 <lua_rawgeti@@Base+0x3c>

0005e094 <lua_getmetatable@@Base>:
   5e094:	push	{r4, lr}
   5e098:	mov	r4, r0
   5e09c:	bl	1b44c <_start@@Base+0x809c>
   5e0a0:	ldr	r3, [r0, #4]
   5e0a4:	cmn	r3, #12
   5e0a8:	beq	5e0d8 <lua_getmetatable@@Base+0x44>
   5e0ac:	cmn	r3, #13
   5e0b0:	beq	5e0d8 <lua_getmetatable@@Base+0x44>
   5e0b4:	cmn	r3, #14
   5e0b8:	rsbhi	r3, r3, #21
   5e0bc:	movls	r3, #35	; 0x23
   5e0c0:	ldr	r2, [r4, #8]
   5e0c4:	add	r3, r3, #58	; 0x3a
   5e0c8:	ldr	r0, [r2, r3, lsl #2]
   5e0cc:	cmp	r0, #0
   5e0d0:	bne	5e0e8 <lua_getmetatable@@Base+0x54>
   5e0d4:	pop	{r4, pc}
   5e0d8:	ldr	r3, [r0]
   5e0dc:	ldr	r0, [r3, #16]
   5e0e0:	cmp	r0, #0
   5e0e4:	popeq	{r4, pc}
   5e0e8:	ldr	r3, [r4, #20]
   5e0ec:	ldr	r1, [r4, #24]
   5e0f0:	add	r2, r3, #8
   5e0f4:	cmp	r2, r1
   5e0f8:	mvn	r1, #11
   5e0fc:	strd	r0, [r3]
   5e100:	str	r2, [r4, #20]
   5e104:	bcs	5e110 <lua_getmetatable@@Base+0x7c>
   5e108:	mov	r0, #1
   5e10c:	pop	{r4, pc}
   5e110:	mov	r0, r4
   5e114:	mov	r1, #1
   5e118:	bl	1fd08 <lua_getstack@@Base+0x50>
   5e11c:	mov	r0, #1
   5e120:	pop	{r4, pc}
   5e124:	ldrd	r2, [r0, #16]
   5e128:	push	{r4, lr}
   5e12c:	cmp	r2, r3
   5e130:	bcs	5e158 <lua_getmetatable@@Base+0xc4>
   5e134:	mov	r1, #1
   5e138:	mov	r4, r0
   5e13c:	bl	5e094 <lua_getmetatable@@Base>
   5e140:	cmp	r0, #0
   5e144:	mvneq	r2, #0
   5e148:	ldreq	r3, [r4, #20]
   5e14c:	mov	r0, #1
   5e150:	streq	r2, [r3, #-4]
   5e154:	pop	{r4, pc}
   5e158:	bl	13100 <pclose@plt+0x64>

0005e15c <luaL_getmetafield@@Base>:
   5e15c:	push	{r4, r5, r6, lr}
   5e160:	mov	r5, r2
   5e164:	mov	r4, r0
   5e168:	bl	5e094 <lua_getmetatable@@Base>
   5e16c:	cmp	r0, #0
   5e170:	popeq	{r4, r5, r6, pc}
   5e174:	ldr	r3, [r4, #20]
   5e178:	mov	r0, r5
   5e17c:	ldr	r6, [r3, #-8]
   5e180:	bl	12e80 <strlen@plt>
   5e184:	mov	r1, r5
   5e188:	mov	r2, r0
   5e18c:	mov	r0, r4
   5e190:	bl	20260 <luaL_where@@Base+0x15c>
   5e194:	ldr	r2, [r6, #28]
   5e198:	ldr	r3, [r6, #20]
   5e19c:	ldr	r1, [r0, #8]
   5e1a0:	and	r2, r2, r1
   5e1a4:	add	r2, r2, r2, lsl #1
   5e1a8:	add	r3, r3, r2, lsl #3
   5e1ac:	b	5e1bc <luaL_getmetafield@@Base+0x60>
   5e1b0:	ldr	r3, [r3, #16]
   5e1b4:	cmp	r3, #0
   5e1b8:	beq	5e1f4 <luaL_getmetafield@@Base+0x98>
   5e1bc:	ldr	r2, [r3, #12]
   5e1c0:	cmn	r2, #5
   5e1c4:	bne	5e1b0 <luaL_getmetafield@@Base+0x54>
   5e1c8:	ldr	r2, [r3, #8]
   5e1cc:	cmp	r0, r2
   5e1d0:	bne	5e1b0 <luaL_getmetafield@@Base+0x54>
   5e1d4:	ldr	r1, [r3, #4]
   5e1d8:	ldr	r2, [r4, #20]
   5e1dc:	cmn	r1, #1
   5e1e0:	beq	5e1f8 <luaL_getmetafield@@Base+0x9c>
   5e1e4:	ldrd	r4, [r3]
   5e1e8:	mov	r0, #1
   5e1ec:	strd	r4, [r2, #-8]
   5e1f0:	pop	{r4, r5, r6, pc}
   5e1f4:	ldr	r2, [r4, #20]
   5e1f8:	sub	r2, r2, #8
   5e1fc:	mov	r0, #0
   5e200:	str	r2, [r4, #20]
   5e204:	pop	{r4, r5, r6, pc}

0005e208 <lua_getfenv@@Base>:
   5e208:	push	{r4, lr}
   5e20c:	mov	r4, r0
   5e210:	bl	1b44c <_start@@Base+0x809c>
   5e214:	ldr	r2, [r0, #4]
   5e218:	cmn	r2, #9
   5e21c:	beq	5e288 <lua_getfenv@@Base+0x80>
   5e220:	cmn	r2, #13
   5e224:	ldr	r3, [r4, #20]
   5e228:	beq	5e270 <lua_getfenv@@Base+0x68>
   5e22c:	cmn	r2, #7
   5e230:	mvneq	r1, #11
   5e234:	ldreq	r2, [r0]
   5e238:	mvnne	r2, #0
   5e23c:	strne	r2, [r3, #4]
   5e240:	ldreq	r2, [r2, #36]	; 0x24
   5e244:	streq	r1, [r3, #4]
   5e248:	streq	r2, [r3]
   5e24c:	ldr	r2, [r4, #24]
   5e250:	add	r3, r3, #8
   5e254:	cmp	r3, r2
   5e258:	str	r3, [r4, #20]
   5e25c:	popcc	{r4, pc}
   5e260:	mov	r0, r4
   5e264:	mov	r1, #1
   5e268:	pop	{r4, lr}
   5e26c:	b	1fd08 <lua_getstack@@Base+0x50>
   5e270:	ldr	r2, [r0]
   5e274:	mvn	r1, #11
   5e278:	ldr	r2, [r2, #8]
   5e27c:	str	r1, [r3, #4]
   5e280:	str	r2, [r3]
   5e284:	b	5e24c <lua_getfenv@@Base+0x44>
   5e288:	ldr	r2, [r0]
   5e28c:	ldr	r3, [r4, #20]
   5e290:	mvn	r1, #11
   5e294:	ldr	r2, [r2, #8]
   5e298:	str	r1, [r3, #4]
   5e29c:	str	r2, [r3]
   5e2a0:	b	5e24c <lua_getfenv@@Base+0x44>
   5e2a4:	ldrd	r2, [r0, #16]
   5e2a8:	push	{r4, lr}
   5e2ac:	cmp	r2, r3
   5e2b0:	bcs	5e2c4 <lua_getfenv@@Base+0xbc>
   5e2b4:	mov	r1, #1
   5e2b8:	bl	5e208 <lua_getfenv@@Base>
   5e2bc:	mov	r0, #1
   5e2c0:	pop	{r4, pc}
   5e2c4:	bl	13100 <pclose@plt+0x64>

0005e2c8 <lua_next@@Base>:
   5e2c8:	push	{r4, r5, r6, lr}
   5e2cc:	mov	r4, r0
   5e2d0:	bl	1b44c <_start@@Base+0x809c>
   5e2d4:	ldr	r2, [r4, #20]
   5e2d8:	sub	r2, r2, #8
   5e2dc:	ldr	r1, [r0]
   5e2e0:	mov	r0, r4
   5e2e4:	bl	408d0 <luaL_typerror@@Base+0xa564>
   5e2e8:	ldr	r3, [r4, #20]
   5e2ec:	subs	r5, r0, #0
   5e2f0:	subeq	r3, r3, #8
   5e2f4:	streq	r3, [r4, #20]
   5e2f8:	beq	5e310 <lua_next@@Base+0x48>
   5e2fc:	ldr	r2, [r4, #24]
   5e300:	add	r3, r3, #8
   5e304:	cmp	r3, r2
   5e308:	str	r3, [r4, #20]
   5e30c:	bcs	5e318 <lua_next@@Base+0x50>
   5e310:	mov	r0, r5
   5e314:	pop	{r4, r5, r6, pc}
   5e318:	mov	r0, r4
   5e31c:	mov	r1, #1
   5e320:	bl	1fd08 <lua_getstack@@Base+0x50>
   5e324:	mov	r0, r5
   5e328:	pop	{r4, r5, r6, pc}

0005e32c <lua_getupvalue@@Base>:
   5e32c:	push	{r4, r5, lr}
   5e330:	mov	r5, r2
   5e334:	sub	sp, sp, #12
   5e338:	mov	r4, r0
   5e33c:	bl	1b44c <_start@@Base+0x809c>
   5e340:	sub	r1, r5, #1
   5e344:	add	r2, sp, #4
   5e348:	bl	14c9c <_start@@Base+0x18ec>
   5e34c:	subs	r5, r0, #0
   5e350:	beq	5e378 <lua_getupvalue@@Base+0x4c>
   5e354:	ldr	r3, [sp, #4]
   5e358:	ldr	r2, [r4, #20]
   5e35c:	ldr	ip, [r4, #24]
   5e360:	ldrd	r0, [r3]
   5e364:	add	r3, r2, #8
   5e368:	cmp	r3, ip
   5e36c:	strd	r0, [r2]
   5e370:	str	r3, [r4, #20]
   5e374:	bcs	5e384 <lua_getupvalue@@Base+0x58>
   5e378:	mov	r0, r5
   5e37c:	add	sp, sp, #12
   5e380:	pop	{r4, r5, pc}
   5e384:	mov	r0, r4
   5e388:	mov	r1, #1
   5e38c:	bl	1fd08 <lua_getstack@@Base+0x50>
   5e390:	mov	r0, r5
   5e394:	add	sp, sp, #12
   5e398:	pop	{r4, r5, pc}
   5e39c:	push	{r4, r5, r6, lr}
   5e3a0:	mov	r1, #2
   5e3a4:	mov	r4, r0
   5e3a8:	bl	3638c <luaL_typerror@@Base+0x20>
   5e3ac:	mov	r1, #1
   5e3b0:	mov	r5, r0
   5e3b4:	mov	r0, r4
   5e3b8:	bl	36884 <luaL_typerror@@Base+0x518>
   5e3bc:	mov	r1, #1
   5e3c0:	mov	r2, r5
   5e3c4:	mov	r0, r4
   5e3c8:	bl	5e32c <lua_getupvalue@@Base>
   5e3cc:	subs	r1, r0, #0
   5e3d0:	beq	5e3f8 <lua_getupvalue@@Base+0xcc>
   5e3d4:	mov	r0, r4
   5e3d8:	bl	5b7a0 <lua_pushstring@@Base>
   5e3dc:	ldr	r1, [r4, #20]
   5e3e0:	mov	r0, #2
   5e3e4:	add	ip, r1, #8
   5e3e8:	ldrd	r2, [r1, #-16]
   5e3ec:	strd	r2, [r1]
   5e3f0:	str	ip, [r4, #20]
   5e3f4:	pop	{r4, r5, r6, pc}
   5e3f8:	mov	r0, r1
   5e3fc:	pop	{r4, r5, r6, pc}

0005e400 <lua_upvalueid@@Base>:
   5e400:	push	{r4, lr}
   5e404:	mov	r4, r2
   5e408:	bl	1b44c <_start@@Base+0x809c>
   5e40c:	ldr	r0, [r0]
   5e410:	ldrb	r3, [r0, #6]
   5e414:	cmp	r3, #0
   5e418:	addeq	r0, r0, r4, lsl #2
   5e41c:	addne	r4, r4, #2
   5e420:	ldreq	r0, [r0, #16]
   5e424:	addne	r0, r0, r4, lsl #3
   5e428:	pop	{r4, pc}

0005e42c <lua_upvaluejoin@@Base>:
   5e42c:	push	{r4, r5, r6, r7, r8, lr}
   5e430:	mov	r5, r3
   5e434:	mov	r4, r2
   5e438:	mov	r6, r0
   5e43c:	ldr	r7, [sp, #24]
   5e440:	bl	1b44c <_start@@Base+0x809c>
   5e444:	mov	r1, r5
   5e448:	ldr	r5, [r0]
   5e44c:	mov	r0, r6
   5e450:	bl	1b44c <_start@@Base+0x809c>
   5e454:	add	r4, r5, r4, lsl #2
   5e458:	ldr	r3, [r0]
   5e45c:	add	r3, r3, r7, lsl #2
   5e460:	ldr	r1, [r3, #16]
   5e464:	str	r1, [r4, #16]
   5e468:	ldrb	r3, [r1, #4]
   5e46c:	tst	r3, #3
   5e470:	popeq	{r4, r5, r6, r7, r8, pc}
   5e474:	ldrb	r3, [r5, #4]
   5e478:	tst	r3, #4
   5e47c:	popeq	{r4, r5, r6, r7, r8, pc}
   5e480:	ldr	r0, [r6, #8]
   5e484:	ldrb	r2, [r0, #29]
   5e488:	sub	r2, r2, #1
   5e48c:	cmp	r2, #1
   5e490:	bls	5e4ac <lua_upvaluejoin@@Base+0x80>
   5e494:	ldrb	r2, [r0, #28]
   5e498:	bic	r3, r3, #7
   5e49c:	and	r2, r2, #3
   5e4a0:	orr	r3, r2, r3
   5e4a4:	strb	r3, [r5, #4]
   5e4a8:	pop	{r4, r5, r6, r7, r8, pc}
   5e4ac:	pop	{r4, r5, r6, r7, r8, lr}
   5e4b0:	b	17498 <_start@@Base+0x40e8>

0005e4b4 <luaL_testudata@@Base>:
   5e4b4:	push	{r4, r5, r6, r7, r8, lr}
   5e4b8:	mov	r6, r2
   5e4bc:	mov	r5, r0
   5e4c0:	bl	1b44c <_start@@Base+0x809c>
   5e4c4:	ldr	r2, [r0, #4]
   5e4c8:	cmn	r2, #13
   5e4cc:	bne	5e55c <luaL_testudata@@Base+0xa8>
   5e4d0:	ldr	r2, [r5, #8]
   5e4d4:	mov	r3, r0
   5e4d8:	mov	r0, r6
   5e4dc:	ldr	r7, [r2, #120]	; 0x78
   5e4e0:	ldr	r4, [r3]
   5e4e4:	bl	12e80 <strlen@plt>
   5e4e8:	mov	r1, r6
   5e4ec:	mov	r2, r0
   5e4f0:	mov	r0, r5
   5e4f4:	bl	20260 <luaL_where@@Base+0x15c>
   5e4f8:	ldr	r1, [r7, #28]
   5e4fc:	ldr	r3, [r7, #20]
   5e500:	ldr	r2, [r0, #8]
   5e504:	and	r2, r2, r1
   5e508:	add	r2, r2, r2, lsl #1
   5e50c:	add	r3, r3, r2, lsl #3
   5e510:	b	5e520 <luaL_testudata@@Base+0x6c>
   5e514:	ldr	r3, [r3, #16]
   5e518:	cmp	r3, #0
   5e51c:	beq	5e55c <luaL_testudata@@Base+0xa8>
   5e520:	ldr	r2, [r3, #12]
   5e524:	cmn	r2, #5
   5e528:	bne	5e514 <luaL_testudata@@Base+0x60>
   5e52c:	ldr	r2, [r3, #8]
   5e530:	cmp	r0, r2
   5e534:	bne	5e514 <luaL_testudata@@Base+0x60>
   5e538:	ldr	r2, [r3, #4]
   5e53c:	cmn	r2, #12
   5e540:	bne	5e55c <luaL_testudata@@Base+0xa8>
   5e544:	ldr	r2, [r3]
   5e548:	ldr	r3, [r4, #16]
   5e54c:	cmp	r2, r3
   5e550:	bne	5e55c <luaL_testudata@@Base+0xa8>
   5e554:	add	r0, r4, #24
   5e558:	pop	{r4, r5, r6, r7, r8, pc}
   5e55c:	mov	r0, #0
   5e560:	pop	{r4, r5, r6, r7, r8, pc}

0005e564 <luaL_checkudata@@Base>:
   5e564:	push	{r4, r5, r6, lr}
   5e568:	mov	r4, r0
   5e56c:	mov	r5, r1
   5e570:	mov	r6, r2
   5e574:	bl	5e4b4 <luaL_testudata@@Base>
   5e578:	cmp	r0, #0
   5e57c:	popne	{r4, r5, r6, pc}
   5e580:	mov	r2, r6
   5e584:	mov	r1, r5
   5e588:	mov	r0, r4
   5e58c:	bl	36284 <luaL_argerror@@Base+0xbc>
   5e590:	push	{r4, lr}
   5e594:	mov	r1, #1
   5e598:	ldr	r2, [pc, #32]	; 5e5c0 <luaL_checkudata@@Base+0x5c>
   5e59c:	bl	5e564 <luaL_checkudata@@Base>
   5e5a0:	mov	r4, r0
   5e5a4:	ldr	r0, [r0]
   5e5a8:	cmp	r0, #0
   5e5ac:	beq	5e5b4 <luaL_checkudata@@Base+0x50>
   5e5b0:	bl	12d24 <dlclose@plt>
   5e5b4:	mov	r0, #0
   5e5b8:	str	r0, [r4]
   5e5bc:	pop	{r4, pc}
   5e5c0:	andeq	r3, r7, r8, lsr #5

0005e5c4 <lua_settable@@Base>:
   5e5c4:	push	{r4, r6, r7, lr}
   5e5c8:	mov	r4, r0
   5e5cc:	bl	1b44c <_start@@Base+0x809c>
   5e5d0:	ldr	r2, [r4, #20]
   5e5d4:	sub	r2, r2, #16
   5e5d8:	mov	r1, r0
   5e5dc:	mov	r0, r4
   5e5e0:	bl	458dc <luaL_typerror@@Base+0xf570>
   5e5e4:	ldr	r3, [r4, #20]
   5e5e8:	cmp	r0, #0
   5e5ec:	beq	5e604 <lua_settable@@Base+0x40>
   5e5f0:	sub	r1, r3, #16
   5e5f4:	ldrd	r2, [r3, #-8]
   5e5f8:	str	r1, [r4, #20]
   5e5fc:	strd	r2, [r0]
   5e600:	pop	{r4, r6, r7, pc}
   5e604:	ldrd	r6, [r3, #-24]	; 0xffffffe8
   5e608:	add	ip, r3, #24
   5e60c:	mov	r1, r3
   5e610:	strd	r6, [r3, #16]
   5e614:	mov	r2, #1
   5e618:	mov	r0, r4
   5e61c:	str	ip, [r4, #20]
   5e620:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   5e624:	ldr	r3, [r4, #20]
   5e628:	sub	r3, r3, #24
   5e62c:	str	r3, [r4, #20]
   5e630:	pop	{r4, r6, r7, pc}

0005e634 <lua_setfield@@Base>:
   5e634:	push	{r4, r5, r6, r7, lr}
   5e638:	sub	sp, sp, #12
   5e63c:	mov	r5, r2
   5e640:	mov	r4, r0
   5e644:	bl	1b44c <_start@@Base+0x809c>
   5e648:	mov	r6, r0
   5e64c:	mov	r0, r5
   5e650:	bl	12e80 <strlen@plt>
   5e654:	mov	r1, r5
   5e658:	mov	r2, r0
   5e65c:	mov	r0, r4
   5e660:	bl	20260 <luaL_where@@Base+0x15c>
   5e664:	mvn	r3, #4
   5e668:	mov	r1, r6
   5e66c:	mov	r2, sp
   5e670:	stm	sp, {r0, r3}
   5e674:	mov	r0, r4
   5e678:	bl	458dc <luaL_typerror@@Base+0xf570>
   5e67c:	ldr	r3, [r4, #20]
   5e680:	cmp	r0, #0
   5e684:	beq	5e6a0 <lua_setfield@@Base+0x6c>
   5e688:	sub	r1, r3, #8
   5e68c:	ldrd	r2, [r3, #-8]
   5e690:	str	r1, [r4, #20]
   5e694:	strd	r2, [r0]
   5e698:	add	sp, sp, #12
   5e69c:	pop	{r4, r5, r6, r7, pc}
   5e6a0:	ldrd	r6, [r3, #-24]	; 0xffffffe8
   5e6a4:	add	ip, r3, #24
   5e6a8:	mov	r1, r3
   5e6ac:	strd	r6, [r3, #16]
   5e6b0:	mov	r2, #1
   5e6b4:	mov	r0, r4
   5e6b8:	str	ip, [r4, #20]
   5e6bc:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   5e6c0:	ldr	r3, [r4, #20]
   5e6c4:	sub	r3, r3, #16
   5e6c8:	str	r3, [r4, #20]
   5e6cc:	add	sp, sp, #12
   5e6d0:	pop	{r4, r5, r6, r7, pc}
   5e6d4:	push	{r4, r5, r6, lr}
   5e6d8:	mov	r6, r1
   5e6dc:	mov	r1, #8
   5e6e0:	mov	r5, r0
   5e6e4:	mov	r4, r2
   5e6e8:	bl	5d0f8 <lua_newuserdata@@Base>
   5e6ec:	ldr	r1, [r5, #20]
   5e6f0:	mov	r2, r4
   5e6f4:	mov	lr, #1
   5e6f8:	ldr	r4, [r1, #-8]
   5e6fc:	mov	ip, #2
   5e700:	strb	lr, [r4, #6]
   5e704:	ldr	lr, [r1, #-24]	; 0xffffffe8
   5e708:	mvn	r1, #1
   5e70c:	str	lr, [r4, #16]
   5e710:	mov	r3, r0
   5e714:	mov	r0, r5
   5e718:	stm	r3, {r6, ip}
   5e71c:	bl	5e634 <lua_setfield@@Base>
   5e720:	mov	r0, r4
   5e724:	pop	{r4, r5, r6, pc}
   5e728:	ldr	r3, [r0, #20]
   5e72c:	ldr	ip, [r0, #24]
   5e730:	push	{r4, r5, r6, lr}
   5e734:	mov	r5, r1
   5e738:	add	r1, r3, #8
   5e73c:	str	r2, [r3]
   5e740:	cmp	r1, ip
   5e744:	mvn	r2, #13
   5e748:	str	r2, [r3, #4]
   5e74c:	mov	r4, r0
   5e750:	str	r1, [r0, #20]
   5e754:	bcc	5e760 <lua_setfield@@Base+0x12c>
   5e758:	mov	r1, #1
   5e75c:	bl	1fd08 <lua_getstack@@Base+0x50>
   5e760:	mov	r2, r5
   5e764:	mov	r0, r4
   5e768:	mvn	r1, #1
   5e76c:	pop	{r4, r5, r6, lr}
   5e770:	b	5e634 <lua_setfield@@Base>
   5e774:	cmp	r0, r1
   5e778:	push	{r4, r5, r6, lr}
   5e77c:	mov	r4, r0
   5e780:	mov	r5, r2
   5e784:	beq	5e7ac <lua_setfield@@Base+0x178>
   5e788:	mov	r0, r1
   5e78c:	mov	r2, #1
   5e790:	mov	r1, r4
   5e794:	bl	59e90 <lua_xmove@@Base>
   5e798:	mov	r2, r5
   5e79c:	mov	r0, r4
   5e7a0:	mvn	r1, #1
   5e7a4:	pop	{r4, r5, r6, lr}
   5e7a8:	b	5e634 <lua_setfield@@Base>
   5e7ac:	mvn	r1, #1
   5e7b0:	bl	5a100 <lua_pushvalue@@Base>
   5e7b4:	mvn	r1, #2
   5e7b8:	mov	r0, r4
   5e7bc:	bl	59fb4 <lua_remove@@Base>
   5e7c0:	b	5e798 <lua_setfield@@Base+0x164>
   5e7c4:	ldr	r3, [r0, #16]
   5e7c8:	ldr	r2, [r0, #20]
   5e7cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5e7d0:	cmp	r3, r2
   5e7d4:	sub	sp, sp, #116	; 0x74
   5e7d8:	mov	r4, r0
   5e7dc:	bcs	5e7ec <lua_setfield@@Base+0x1b8>
   5e7e0:	ldr	r2, [r3, #4]
   5e7e4:	cmn	r2, #7
   5e7e8:	beq	5eb34 <lua_setfield@@Base+0x500>
   5e7ec:	mov	r6, r4
   5e7f0:	mov	r9, #1
   5e7f4:	mov	r8, #2
   5e7f8:	mov	r7, #0
   5e7fc:	mov	r3, #0
   5e800:	ldr	r2, [pc, #864]	; 5eb68 <lua_setfield@@Base+0x534>
   5e804:	mov	r1, r8
   5e808:	mov	r0, r4
   5e80c:	bl	5ada0 <luaL_optlstring@@Base>
   5e810:	mov	r1, r9
   5e814:	mov	r5, r0
   5e818:	mov	r0, r4
   5e81c:	bl	5a320 <lua_isnumber@@Base>
   5e820:	cmp	r0, #0
   5e824:	bne	5eaf4 <lua_setfield@@Base+0x4c0>
   5e828:	ldr	r3, [r4, #16]
   5e82c:	lsl	r7, r7, #3
   5e830:	ldr	r2, [r4, #20]
   5e834:	add	r3, r3, r7
   5e838:	cmp	r3, r2
   5e83c:	bcs	5eb48 <lua_setfield@@Base+0x514>
   5e840:	ldr	sl, [r3, #4]
   5e844:	cmn	sl, #9
   5e848:	bne	5eb48 <lua_setfield@@Base+0x514>
   5e84c:	mov	r2, r5
   5e850:	ldr	r1, [pc, #788]	; 5eb6c <lua_setfield@@Base+0x538>
   5e854:	mov	r0, r4
   5e858:	bl	5bc58 <lua_pushfstring@@Base>
   5e85c:	ldr	r2, [r4, #16]
   5e860:	ldr	r3, [r6, #20]
   5e864:	ldr	r2, [r2, r7]
   5e868:	add	r7, sp, #4
   5e86c:	add	r1, r3, #8
   5e870:	str	r1, [r6, #20]
   5e874:	stm	r3, {r2, sl}
   5e878:	mov	r5, r0
   5e87c:	mov	r2, r7
   5e880:	mov	r3, #1
   5e884:	mov	r1, r5
   5e888:	mov	r0, r6
   5e88c:	bl	52304 <lua_getlocal@@Base+0xbc>
   5e890:	cmp	r0, #0
   5e894:	beq	5eb58 <lua_setfield@@Base+0x524>
   5e898:	mov	r2, #16
   5e89c:	mov	r1, #0
   5e8a0:	mov	r0, r4
   5e8a4:	bl	5cae4 <lua_createtable@@Base>
   5e8a8:	ldrb	r3, [r5]
   5e8ac:	cmp	r3, #0
   5e8b0:	beq	5e9a0 <lua_setfield@@Base+0x36c>
   5e8b4:	mov	r7, #0
   5e8b8:	ldr	fp, [pc, #688]	; 5eb70 <lua_setfield@@Base+0x53c>
   5e8bc:	ldr	sl, [pc, #688]	; 5eb74 <lua_setfield@@Base+0x540>
   5e8c0:	ldr	r9, [pc, #688]	; 5eb78 <lua_setfield@@Base+0x544>
   5e8c4:	mov	r8, r7
   5e8c8:	sub	r3, r3, #76	; 0x4c
   5e8cc:	cmp	r3, #41	; 0x29
   5e8d0:	ldrls	pc, [pc, r3, lsl #2]
   5e8d4:	b	5e984 <lua_setfield@@Base+0x350>
   5e8d8:	andeq	lr, r5, ip, lsr #19
   5e8dc:	andeq	lr, r5, r4, lsl #19
   5e8e0:	andeq	lr, r5, r4, lsl #19
   5e8e4:	andeq	lr, r5, r4, lsl #19
   5e8e8:	andeq	lr, r5, r4, lsl #19
   5e8ec:	andeq	lr, r5, r4, lsl #19
   5e8f0:	andeq	lr, r5, r4, lsl #19
   5e8f4:			; <UNDEFINED> instruction: 0x0005e9b4
   5e8f8:	andeq	lr, r5, r4, lsl #19
   5e8fc:	andeq	lr, r5, r4, lsl #19
   5e900:	andeq	lr, r5, r4, lsl #19
   5e904:	andeq	lr, r5, r4, lsl #19
   5e908:	andeq	lr, r5, r4, lsl #19
   5e90c:	andeq	lr, r5, r4, lsl #19
   5e910:	andeq	lr, r5, r4, lsl #19
   5e914:	andeq	lr, r5, r4, lsl #19
   5e918:	andeq	lr, r5, r4, lsl #19
   5e91c:	andeq	lr, r5, r4, lsl #19
   5e920:	andeq	lr, r5, r4, lsl #19
   5e924:	andeq	lr, r5, r4, lsl #19
   5e928:	andeq	lr, r5, r4, lsl #19
   5e92c:	andeq	lr, r5, r4, lsl #19
   5e930:	andeq	lr, r5, r4, lsl #19
   5e934:	andeq	lr, r5, r4, lsl #19
   5e938:	andeq	lr, r5, r4, lsl #19
   5e93c:	andeq	lr, r5, r4, lsl #19
   5e940:	andeq	lr, r5, r0, lsl #19
   5e944:	andeq	lr, r5, r4, lsl #19
   5e948:	andeq	lr, r5, r4, lsl #19
   5e94c:	andeq	lr, r5, r4, lsl #19
   5e950:	andeq	lr, r5, r4, lsl #19
   5e954:	andeq	lr, r5, r4, lsl #19
   5e958:	andeq	lr, r5, r8, lsr #21
   5e95c:	andeq	lr, r5, r4, lsl #19
   5e960:	andeq	lr, r5, ip, ror #20
   5e964:	andeq	lr, r5, r4, lsl #19
   5e968:	andeq	lr, r5, r4, lsl #19
   5e96c:	andeq	lr, r5, r4, lsl #19
   5e970:	andeq	lr, r5, r4, lsl #19
   5e974:	andeq	lr, r5, r4, lsl #19
   5e978:	andeq	lr, r5, r4, lsl #19
   5e97c:	andeq	lr, r5, ip, lsr #20
   5e980:	mov	r8, #1
   5e984:	ldrb	r3, [r5, #1]!
   5e988:	cmp	r3, #0
   5e98c:	bne	5e8c8 <lua_setfield@@Base+0x294>
   5e990:	cmp	r7, #0
   5e994:	bne	5ead8 <lua_setfield@@Base+0x4a4>
   5e998:	cmp	r8, #0
   5e99c:	bne	5eabc <lua_setfield@@Base+0x488>
   5e9a0:	mov	r0, #1
   5e9a4:	add	sp, sp, #116	; 0x74
   5e9a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5e9ac:	mov	r7, #1
   5e9b0:	b	5e984 <lua_setfield@@Base+0x350>
   5e9b4:	ldr	r1, [sp, #20]
   5e9b8:	mov	r0, r4
   5e9bc:	bl	5b7a0 <lua_pushstring@@Base>
   5e9c0:	ldr	r2, [pc, #436]	; 5eb7c <lua_setfield@@Base+0x548>
   5e9c4:	mov	r0, r4
   5e9c8:	mvn	r1, #1
   5e9cc:	bl	5e634 <lua_setfield@@Base>
   5e9d0:	add	r1, sp, #40	; 0x28
   5e9d4:	mov	r0, r4
   5e9d8:	bl	5b7a0 <lua_pushstring@@Base>
   5e9dc:	mov	r0, r4
   5e9e0:	ldr	r2, [pc, #408]	; 5eb80 <lua_setfield@@Base+0x54c>
   5e9e4:	mvn	r1, #1
   5e9e8:	bl	5e634 <lua_setfield@@Base>
   5e9ec:	ldr	r2, [sp, #32]
   5e9f0:	mov	r0, r4
   5e9f4:	ldr	r1, [pc, #392]	; 5eb84 <lua_setfield@@Base+0x550>
   5e9f8:	bl	5e728 <lua_setfield@@Base+0xf4>
   5e9fc:	ldr	r2, [sp, #36]	; 0x24
   5ea00:	mov	r0, r4
   5ea04:	ldr	r1, [pc, #380]	; 5eb88 <lua_setfield@@Base+0x554>
   5ea08:	bl	5e728 <lua_setfield@@Base+0xf4>
   5ea0c:	ldr	r1, [sp, #16]
   5ea10:	mov	r0, r4
   5ea14:	bl	5b7a0 <lua_pushstring@@Base>
   5ea18:	ldr	r2, [pc, #364]	; 5eb8c <lua_setfield@@Base+0x558>
   5ea1c:	mvn	r1, #1
   5ea20:	mov	r0, r4
   5ea24:	bl	5e634 <lua_setfield@@Base>
   5ea28:	b	5e984 <lua_setfield@@Base+0x350>
   5ea2c:	ldr	r2, [sp, #28]
   5ea30:	mov	r1, r9
   5ea34:	mov	r0, r4
   5ea38:	bl	5e728 <lua_setfield@@Base+0xf4>
   5ea3c:	ldr	r2, [sp, #104]	; 0x68
   5ea40:	mov	r0, r4
   5ea44:	ldr	r1, [pc, #324]	; 5eb90 <lua_setfield@@Base+0x55c>
   5ea48:	bl	5e728 <lua_setfield@@Base+0xf4>
   5ea4c:	ldr	r1, [sp, #108]	; 0x6c
   5ea50:	mov	r0, r4
   5ea54:	bl	5ca7c <lua_pushboolean@@Base>
   5ea58:	ldr	r2, [pc, #308]	; 5eb94 <lua_setfield@@Base+0x560>
   5ea5c:	mvn	r1, #1
   5ea60:	mov	r0, r4
   5ea64:	bl	5e634 <lua_setfield@@Base>
   5ea68:	b	5e984 <lua_setfield@@Base+0x350>
   5ea6c:	ldr	r1, [sp, #8]
   5ea70:	mov	r0, r4
   5ea74:	bl	5b7a0 <lua_pushstring@@Base>
   5ea78:	mov	r2, fp
   5ea7c:	mov	r0, r4
   5ea80:	mvn	r1, #1
   5ea84:	bl	5e634 <lua_setfield@@Base>
   5ea88:	ldr	r1, [sp, #12]
   5ea8c:	mov	r0, r4
   5ea90:	bl	5b7a0 <lua_pushstring@@Base>
   5ea94:	mov	r2, sl
   5ea98:	mvn	r1, #1
   5ea9c:	mov	r0, r4
   5eaa0:	bl	5e634 <lua_setfield@@Base>
   5eaa4:	b	5e984 <lua_setfield@@Base+0x350>
   5eaa8:	ldr	r2, [sp, #24]
   5eaac:	ldr	r1, [pc, #228]	; 5eb98 <lua_setfield@@Base+0x564>
   5eab0:	mov	r0, r4
   5eab4:	bl	5e728 <lua_setfield@@Base+0xf4>
   5eab8:	b	5e984 <lua_setfield@@Base+0x350>
   5eabc:	mov	r0, r4
   5eac0:	mov	r1, r6
   5eac4:	ldr	r2, [pc, #208]	; 5eb9c <lua_setfield@@Base+0x568>
   5eac8:	bl	5e774 <lua_setfield@@Base+0x140>
   5eacc:	mov	r0, #1
   5ead0:	add	sp, sp, #116	; 0x74
   5ead4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5ead8:	ldr	r2, [pc, #192]	; 5eba0 <lua_setfield@@Base+0x56c>
   5eadc:	mov	r1, r6
   5eae0:	mov	r0, r4
   5eae4:	bl	5e774 <lua_setfield@@Base+0x140>
   5eae8:	cmp	r8, #0
   5eaec:	beq	5e9a0 <lua_setfield@@Base+0x36c>
   5eaf0:	b	5eabc <lua_setfield@@Base+0x488>
   5eaf4:	mov	r1, r9
   5eaf8:	mov	r0, r4
   5eafc:	bl	5a8b8 <lua_tointeger@@Base>
   5eb00:	add	r7, sp, #4
   5eb04:	mov	r2, r7
   5eb08:	mov	r1, r0
   5eb0c:	mov	r0, r6
   5eb10:	bl	1fcb8 <lua_getstack@@Base>
   5eb14:	cmp	r0, #0
   5eb18:	bne	5e87c <lua_setfield@@Base+0x248>
   5eb1c:	ldr	r3, [r4, #20]
   5eb20:	mvn	r2, #0
   5eb24:	mov	r0, #1
   5eb28:	str	r2, [r3, #-4]
   5eb2c:	add	sp, sp, #116	; 0x74
   5eb30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5eb34:	ldr	r6, [r3]
   5eb38:	mov	r9, #2
   5eb3c:	mov	r8, #3
   5eb40:	mov	r7, #1
   5eb44:	b	5e7fc <lua_setfield@@Base+0x1c8>
   5eb48:	mov	r1, r9
   5eb4c:	mov	r0, r4
   5eb50:	ldr	r2, [pc, #76]	; 5eba4 <lua_setfield@@Base+0x570>
   5eb54:	bl	361d0 <luaL_argerror@@Base+0x8>
   5eb58:	mov	r1, r8
   5eb5c:	mov	r0, r4
   5eb60:	ldr	r2, [pc, #64]	; 5eba8 <lua_setfield@@Base+0x574>
   5eb64:	bl	361d0 <luaL_argerror@@Base+0x8>
   5eb68:			; <UNDEFINED> instruction: 0x000732b4
   5eb6c:			; <UNDEFINED> instruction: 0x000732bc
   5eb70:	ldrdeq	r3, [r7], -ip
   5eb74:	andeq	r3, r7, ip, lsl #6
   5eb78:	strdeq	r3, [r7], -r0
   5eb7c:	andeq	r3, r7, r0, asr #5
   5eb80:	andeq	r3, r7, r8, asr #5
   5eb84:	ldrdeq	r3, [r7], -r8
   5eb88:	ldrdeq	r3, [r7], -r4
   5eb8c:	andeq	r3, r7, r0, lsl r3
   5eb90:	strdeq	r3, [r7], -r8
   5eb94:	andeq	r3, r7, r0, lsl #6
   5eb98:	andeq	r3, r7, r4, ror #5
   5eb9c:	andeq	r3, r7, r4, lsr #6
   5eba0:	andeq	r3, r7, r8, lsl r3
   5eba4:	andeq	r0, r0, r5, ror r2
   5eba8:	andeq	r0, r0, ip, lsl #9
   5ebac:	push	{r4, r5, r6, lr}
   5ebb0:	mov	r4, r0
   5ebb4:	bl	365f0 <luaL_typerror@@Base+0x284>
   5ebb8:	subs	r5, r0, #0
   5ebbc:	beq	5ec8c <lua_setfield@@Base+0x658>
   5ebc0:	mov	r0, r4
   5ebc4:	mov	r2, #8
   5ebc8:	mov	r1, #0
   5ebcc:	bl	5cae4 <lua_createtable@@Base>
   5ebd0:	ldr	r1, [r4, #20]
   5ebd4:	ldr	r3, [r5, #8]
   5ebd8:	mov	r0, r4
   5ebdc:	ldr	r6, [r1, #-8]
   5ebe0:	sub	r3, r3, #32768	; 0x8000
   5ebe4:	mov	r1, r6
   5ebe8:	ldr	r2, [pc, #164]	; 5ec94 <lua_setfield@@Base+0x660>
   5ebec:	sub	r3, r3, #1
   5ebf0:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5ebf4:	ldr	r3, [r5, #20]
   5ebf8:	mov	r1, r6
   5ebfc:	mov	r0, r4
   5ec00:	rsb	r3, r3, #32768	; 0x8000
   5ec04:	ldr	r2, [pc, #140]	; 5ec98 <lua_setfield@@Base+0x664>
   5ec08:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5ec0c:	mov	r1, r6
   5ec10:	ldrh	r3, [r5, #66]	; 0x42
   5ec14:	mov	r0, r4
   5ec18:	ldr	r2, [pc, #124]	; 5ec9c <lua_setfield@@Base+0x668>
   5ec1c:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5ec20:	mov	r1, r6
   5ec24:	ldrh	r3, [r5, #24]
   5ec28:	mov	r0, r4
   5ec2c:	ldr	r2, [pc, #108]	; 5eca0 <lua_setfield@@Base+0x66c>
   5ec30:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5ec34:	ldr	r6, [r4, #20]
   5ec38:	ldr	r3, [pc, #100]	; 5eca4 <lua_setfield@@Base+0x670>
   5ec3c:	add	r2, r6, #8
   5ec40:	str	r2, [r4, #20]
   5ec44:	ldrb	r2, [r5, #7]
   5ec48:	add	r3, r3, r2, lsl #2
   5ec4c:	ldr	r5, [r3, #-36]	; 0xffffffdc
   5ec50:	mov	r0, r5
   5ec54:	bl	12e80 <strlen@plt>
   5ec58:	mov	r1, r5
   5ec5c:	mov	r2, r0
   5ec60:	mov	r0, r4
   5ec64:	bl	20260 <luaL_where@@Base+0x15c>
   5ec68:	mvn	r3, #4
   5ec6c:	str	r3, [r6, #4]
   5ec70:	ldr	r2, [pc, #48]	; 5eca8 <lua_setfield@@Base+0x674>
   5ec74:	mvn	r1, #1
   5ec78:	str	r0, [r6]
   5ec7c:	mov	r0, r4
   5ec80:	bl	5e634 <lua_setfield@@Base>
   5ec84:	mov	r0, #1
   5ec88:	pop	{r4, r5, r6, pc}
   5ec8c:	mov	r0, r5
   5ec90:	pop	{r4, r5, r6, pc}
   5ec94:	andeq	r3, r7, ip, lsr #6
   5ec98:	andeq	r3, r7, r8, asr #4
   5ec9c:	andeq	r3, r7, r4, lsr r3
   5eca0:	andeq	r3, r7, ip, lsr r3
   5eca4:			; <UNDEFINED> instruction: 0x00070cb0
   5eca8:	andeq	r3, r7, r4, asr #6
   5ecac:	push	{r4, r5, r6, r7, r8, lr}
   5ecb0:	mov	r1, #1
   5ecb4:	mov	r4, r0
   5ecb8:	bl	370a4 <luaL_typerror@@Base+0xd38>
   5ecbc:	ldr	r3, [r4, #16]
   5ecc0:	subs	r5, r0, #0
   5ecc4:	beq	5ef54 <lua_setfield@@Base+0x920>
   5ecc8:	ldr	r1, [r4, #20]
   5eccc:	add	r2, r3, #8
   5ecd0:	cmp	r1, r2
   5ecd4:	bhi	5eec4 <lua_setfield@@Base+0x890>
   5ecd8:	mov	r7, #0
   5ecdc:	mov	r2, #16
   5ece0:	mov	r1, #0
   5ece4:	mov	r0, r4
   5ece8:	bl	5cae4 <lua_createtable@@Base>
   5ecec:	ldr	r1, [r4, #20]
   5ecf0:	ldr	r3, [r5, #44]	; 0x2c
   5ecf4:	ldr	r2, [pc, #772]	; 5f000 <lua_setfield@@Base+0x9cc>
   5ecf8:	ldr	r6, [r1, #-8]
   5ecfc:	mov	r0, r4
   5ed00:	mov	r1, r6
   5ed04:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5ed08:	ldrd	r2, [r5, #44]	; 0x2c
   5ed0c:	mov	r1, r6
   5ed10:	mov	r0, r4
   5ed14:	add	r3, r2, r3
   5ed18:	ldr	r2, [pc, #740]	; 5f004 <lua_setfield@@Base+0x9d0>
   5ed1c:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5ed20:	mov	r1, r6
   5ed24:	ldrb	r3, [r5, #7]
   5ed28:	ldr	r2, [pc, #728]	; 5f008 <lua_setfield@@Base+0x9d4>
   5ed2c:	mov	r0, r4
   5ed30:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5ed34:	mov	r1, r6
   5ed38:	ldrb	r3, [r5, #6]
   5ed3c:	ldr	r2, [pc, #712]	; 5f00c <lua_setfield@@Base+0x9d8>
   5ed40:	mov	r0, r4
   5ed44:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5ed48:	mov	r1, r6
   5ed4c:	ldr	r3, [r5, #8]
   5ed50:	ldr	r2, [pc, #696]	; 5f010 <lua_setfield@@Base+0x9dc>
   5ed54:	mov	r0, r4
   5ed58:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5ed5c:	mov	r1, r6
   5ed60:	ldr	r3, [r5, #24]
   5ed64:	ldr	r2, [pc, #680]	; 5f014 <lua_setfield@@Base+0x9e0>
   5ed68:	mov	r0, r4
   5ed6c:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5ed70:	mov	r1, r6
   5ed74:	ldr	r3, [r5, #28]
   5ed78:	ldr	r2, [pc, #664]	; 5f018 <lua_setfield@@Base+0x9e4>
   5ed7c:	mov	r0, r4
   5ed80:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5ed84:	ldrb	r3, [r5, #36]	; 0x24
   5ed88:	mov	r1, r6
   5ed8c:	ldr	r2, [pc, #648]	; 5f01c <lua_setfield@@Base+0x9e8>
   5ed90:	mov	r0, r4
   5ed94:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5ed98:	ldr	r3, [r5, #8]
   5ed9c:	cmp	r3, r7
   5eda0:	bls	5edc4 <lua_setfield@@Base+0x790>
   5eda4:	mov	r1, r7
   5eda8:	mov	r0, r5
   5edac:	bl	14c1c <_start@@Base+0x186c>
   5edb0:	ldr	r2, [pc, #616]	; 5f020 <lua_setfield@@Base+0x9ec>
   5edb4:	mov	r1, r6
   5edb8:	mov	r3, r0
   5edbc:	mov	r0, r4
   5edc0:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5edc4:	ldrb	r1, [r5, #37]	; 0x25
   5edc8:	mov	r0, r4
   5edcc:	and	r1, r1, #2
   5edd0:	bl	5ca7c <lua_pushboolean@@Base>
   5edd4:	ldr	r2, [pc, #584]	; 5f024 <lua_setfield@@Base+0x9f0>
   5edd8:	mvn	r1, #1
   5eddc:	mov	r0, r4
   5ede0:	bl	5e634 <lua_setfield@@Base>
   5ede4:	ldrb	r1, [r5, #37]	; 0x25
   5ede8:	mov	r0, r4
   5edec:	and	r1, r1, #1
   5edf0:	bl	5ca7c <lua_pushboolean@@Base>
   5edf4:	ldr	r2, [pc, #556]	; 5f028 <lua_setfield@@Base+0x9f4>
   5edf8:	mvn	r1, #1
   5edfc:	mov	r0, r4
   5ee00:	bl	5e634 <lua_setfield@@Base>
   5ee04:	ldr	r3, [r4, #20]
   5ee08:	ldr	r0, [r5, #40]	; 0x28
   5ee0c:	mvn	r1, #4
   5ee10:	add	r2, r3, #8
   5ee14:	str	r2, [r4, #20]
   5ee18:	strd	r0, [r3]
   5ee1c:	ldr	r2, [pc, #520]	; 5f02c <lua_setfield@@Base+0x9f8>
   5ee20:	mvn	r1, #1
   5ee24:	mov	r0, r4
   5ee28:	bl	5e634 <lua_setfield@@Base>
   5ee2c:	mov	r1, r7
   5ee30:	mov	r0, r5
   5ee34:	bl	14c1c <_start@@Base+0x186c>
   5ee38:	ldr	ip, [r5, #40]	; 0x28
   5ee3c:	ldr	r1, [r5, #44]	; 0x2c
   5ee40:	add	r2, ip, #16
   5ee44:	cmn	r1, #1
   5ee48:	ldr	r1, [ip, #12]
   5ee4c:	beq	5efdc <lua_setfield@@Base+0x9a8>
   5ee50:	ldrb	lr, [ip, #16]
   5ee54:	cmp	lr, #64	; 0x40
   5ee58:	beq	5eee4 <lua_setfield@@Base+0x8b0>
   5ee5c:	cmp	r1, #40	; 0x28
   5ee60:	mov	r3, r0
   5ee64:	bhi	5efec <lua_setfield@@Base+0x9b8>
   5ee68:	cmp	lr, #61	; 0x3d
   5ee6c:	addeq	r2, ip, #17
   5ee70:	ldreq	r1, [pc, #440]	; 5f030 <lua_setfield@@Base+0x9fc>
   5ee74:	ldrne	r1, [pc, #440]	; 5f034 <lua_setfield@@Base+0xa00>
   5ee78:	mov	r0, r4
   5ee7c:	bl	20040 <lua_getstack@@Base+0x388>
   5ee80:	mov	r0, r4
   5ee84:	ldr	r2, [pc, #428]	; 5f038 <lua_setfield@@Base+0xa04>
   5ee88:	mvn	r1, #1
   5ee8c:	bl	5e634 <lua_setfield@@Base>
   5ee90:	mov	r2, #5
   5ee94:	ldr	r1, [pc, #416]	; 5f03c <lua_setfield@@Base+0xa08>
   5ee98:	mov	r0, r4
   5ee9c:	bl	20260 <luaL_where@@Base+0x15c>
   5eea0:	mov	r1, r6
   5eea4:	mov	r2, r0
   5eea8:	mov	r0, r4
   5eeac:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   5eeb0:	mvn	r3, #7
   5eeb4:	str	r5, [r0]
   5eeb8:	str	r3, [r0, #4]
   5eebc:	mov	r0, #1
   5eec0:	pop	{r4, r5, r6, r7, r8, pc}
   5eec4:	ldr	r3, [r3, #12]
   5eec8:	cmn	r3, #1
   5eecc:	beq	5ecd8 <lua_setfield@@Base+0x6a4>
   5eed0:	mov	r1, #2
   5eed4:	mov	r0, r4
   5eed8:	bl	3638c <luaL_typerror@@Base+0x20>
   5eedc:	mov	r7, r0
   5eee0:	b	5ecdc <lua_setfield@@Base+0x6a8>
   5eee4:	subs	lr, r1, #1
   5eee8:	add	r2, ip, #17
   5eeec:	beq	5ef10 <lua_setfield@@Base+0x8dc>
   5eef0:	ldrb	r3, [r2, lr]
   5eef4:	cmp	r3, #92	; 0x5c
   5eef8:	cmpne	r3, #47	; 0x2f
   5eefc:	subne	r1, r1, #2
   5ef00:	addne	r1, r2, r1
   5ef04:	bne	5ef34 <lua_setfield@@Base+0x900>
   5ef08:	add	lr, lr, #1
   5ef0c:	add	r2, r2, lr
   5ef10:	mov	r3, r0
   5ef14:	ldr	r1, [pc, #276]	; 5f030 <lua_setfield@@Base+0x9fc>
   5ef18:	mov	r0, r4
   5ef1c:	bl	20040 <lua_getstack@@Base+0x388>
   5ef20:	b	5ee80 <lua_setfield@@Base+0x84c>
   5ef24:	ldrb	ip, [r1], #-1
   5ef28:	cmp	ip, #92	; 0x5c
   5ef2c:	cmpne	ip, #47	; 0x2f
   5ef30:	beq	5ef08 <lua_setfield@@Base+0x8d4>
   5ef34:	cmp	r1, r2
   5ef38:	sub	lr, r1, r2
   5ef3c:	bne	5ef24 <lua_setfield@@Base+0x8f0>
   5ef40:	mov	r3, r0
   5ef44:	ldr	r1, [pc, #228]	; 5f030 <lua_setfield@@Base+0x9fc>
   5ef48:	mov	r0, r4
   5ef4c:	bl	20040 <lua_getstack@@Base+0x388>
   5ef50:	b	5ee80 <lua_setfield@@Base+0x84c>
   5ef54:	ldr	r6, [r3]
   5ef58:	mov	r1, r5
   5ef5c:	mov	r2, #4
   5ef60:	mov	r0, r4
   5ef64:	bl	5cae4 <lua_createtable@@Base>
   5ef68:	ldrb	r3, [r6, #6]
   5ef6c:	ldr	r2, [r4, #20]
   5ef70:	cmp	r3, #1
   5ef74:	ldr	r5, [r2, #-8]
   5ef78:	beq	5ef8c <lua_setfield@@Base+0x958>
   5ef7c:	ldr	r2, [pc, #188]	; 5f040 <lua_setfield@@Base+0xa0c>
   5ef80:	mov	r1, r5
   5ef84:	mov	r0, r4
   5ef88:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5ef8c:	mov	r2, #4
   5ef90:	ldr	r1, [pc, #172]	; 5f044 <lua_setfield@@Base+0xa10>
   5ef94:	mov	r0, r4
   5ef98:	bl	20260 <luaL_where@@Base+0x15c>
   5ef9c:	mov	r1, r5
   5efa0:	mov	r2, r0
   5efa4:	mov	r0, r4
   5efa8:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   5efac:	ldr	ip, [r6, #20]
   5efb0:	mvn	r2, #13
   5efb4:	mov	r1, r5
   5efb8:	mov	r3, r0
   5efbc:	mov	r0, r4
   5efc0:	str	ip, [r3]
   5efc4:	str	r2, [r3, #4]
   5efc8:	ldr	r2, [pc, #76]	; 5f01c <lua_setfield@@Base+0x9e8>
   5efcc:	ldrb	r3, [r6, #7]
   5efd0:	bl	3e1b4 <luaL_typerror@@Base+0x7e48>
   5efd4:	mov	r0, #1
   5efd8:	pop	{r4, r5, r6, r7, r8, pc}
   5efdc:	ldr	r1, [pc, #100]	; 5f048 <lua_setfield@@Base+0xa14>
   5efe0:	mov	r0, r4
   5efe4:	bl	20040 <lua_getstack@@Base+0x388>
   5efe8:	b	5ee80 <lua_setfield@@Base+0x84c>
   5efec:	mov	r2, r5
   5eff0:	ldr	r1, [pc, #84]	; 5f04c <lua_setfield@@Base+0xa18>
   5eff4:	mov	r0, r4
   5eff8:	bl	20040 <lua_getstack@@Base+0x388>
   5effc:	b	5ee80 <lua_setfield@@Base+0x84c>
   5f000:	ldrdeq	r3, [r7], -r8
   5f004:	ldrdeq	r3, [r7], -r4
   5f008:	andeq	r3, r7, r0, asr r3
   5f00c:	andeq	r3, r7, ip, asr r3
   5f010:	andeq	r3, r7, r4, ror #6
   5f014:	andeq	r3, r7, r0, ror r3
   5f018:	andeq	r3, r7, ip, ror r3
   5f01c:	andeq	r2, r7, r0, lsl pc
   5f020:	andeq	r3, r7, r4, ror #5
   5f024:	andeq	r3, r7, r0, lsl #6
   5f028:	andeq	r3, r7, r4, lsl #7
   5f02c:	andeq	r3, r7, r0, asr #5
   5f030:	muleq	r7, ip, r3
   5f034:	andeq	r3, r7, ip, lsr #7
   5f038:			; <UNDEFINED> instruction: 0x000733b4
   5f03c:			; <UNDEFINED> instruction: 0x000733b8
   5f040:	andeq	r3, r7, r0, asr #7
   5f044:	andeq	r3, r7, r8, asr #7
   5f048:	muleq	r7, r0, r3
   5f04c:	andeq	r3, r7, r4, lsr #7
   5f050:	push	{r4, r5, r6, lr}
   5f054:	mov	r2, #0
   5f058:	mov	r1, #1
   5f05c:	mov	r4, r0
   5f060:	bl	5ad0c <luaL_checklstring@@Base>
   5f064:	mov	r1, #1
   5f068:	mov	r6, r0
   5f06c:	mov	r0, r4
   5f070:	bl	59f30 <lua_settop@@Base>
   5f074:	mov	r0, r4
   5f078:	ldr	r2, [pc, #624]	; 5f2f0 <lua_setfield@@Base+0xcbc>
   5f07c:	ldr	r1, [pc, #624]	; 5f2f4 <lua_setfield@@Base+0xcc0>
   5f080:	bl	5db0c <lua_getfield@@Base>
   5f084:	mov	r2, r6
   5f088:	mov	r0, r4
   5f08c:	mov	r1, #2
   5f090:	bl	5db0c <lua_getfield@@Base>
   5f094:	ldr	r2, [r4, #20]
   5f098:	ldr	r3, [r2, #-4]
   5f09c:	cmn	r3, #3
   5f0a0:	bhi	5f0bc <lua_setfield@@Base+0xa88>
   5f0a4:	cmn	r3, #13
   5f0a8:	beq	5f210 <lua_setfield@@Base+0xbdc>
   5f0ac:	cmn	r3, #4
   5f0b0:	bne	5f208 <lua_setfield@@Base+0xbd4>
   5f0b4:	ldr	r3, [r2, #-8]
   5f0b8:	b	5f218 <lua_setfield@@Base+0xbe4>
   5f0bc:	ldr	r2, [pc, #564]	; 5f2f8 <lua_setfield@@Base+0xcc4>
   5f0c0:	ldr	r1, [pc, #564]	; 5f2fc <lua_setfield@@Base+0xcc8>
   5f0c4:	mov	r0, r4
   5f0c8:	bl	5db0c <lua_getfield@@Base>
   5f0cc:	mvn	r1, #0
   5f0d0:	mov	r0, r4
   5f0d4:	bl	5a214 <lua_type@@Base>
   5f0d8:	cmp	r0, #5
   5f0dc:	bne	5f2e4 <lua_setfield@@Base+0xcb0>
   5f0e0:	mov	r2, #0
   5f0e4:	ldr	r1, [pc, #532]	; 5f300 <lua_setfield@@Base+0xccc>
   5f0e8:	mov	r0, r4
   5f0ec:	bl	5b190 <lua_pushlstring@@Base>
   5f0f0:	mov	r5, #1
   5f0f4:	b	5f120 <lua_setfield@@Base+0xaec>
   5f0f8:	ldr	r2, [r3, #-4]
   5f0fc:	cmn	r2, #5
   5f100:	cmnne	r2, #14
   5f104:	subhi	r3, r3, #8
   5f108:	strhi	r3, [r4, #20]
   5f10c:	bhi	5f11c <lua_setfield@@Base+0xae8>
   5f110:	mov	r1, #2
   5f114:	mov	r0, r4
   5f118:	bl	45d54 <luaL_typerror@@Base+0xf9e8>
   5f11c:	add	r5, r5, #1
   5f120:	mov	r2, r5
   5f124:	mvn	r1, #1
   5f128:	mov	r0, r4
   5f12c:	bl	5e014 <lua_rawgeti@@Base>
   5f130:	mvn	r1, #0
   5f134:	mov	r0, r4
   5f138:	bl	5a214 <lua_type@@Base>
   5f13c:	cmp	r0, #0
   5f140:	beq	5f2c0 <lua_setfield@@Base+0xc8c>
   5f144:	mov	r1, r6
   5f148:	mov	r0, r4
   5f14c:	bl	5b7a0 <lua_pushstring@@Base>
   5f150:	ldr	r1, [r4, #20]
   5f154:	mov	r2, #2
   5f158:	sub	r1, r1, #8
   5f15c:	mov	r0, r4
   5f160:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   5f164:	mvn	r1, #0
   5f168:	mov	r0, r4
   5f16c:	bl	5a214 <lua_type@@Base>
   5f170:	ldr	r3, [r4, #20]
   5f174:	cmp	r0, #6
   5f178:	bne	5f0f8 <lua_setfield@@Base+0xac4>
   5f17c:	ldr	r1, [r4, #24]
   5f180:	add	r2, r3, #8
   5f184:	ldr	r0, [pc, #376]	; 5f304 <lua_setfield@@Base+0xcd0>
   5f188:	cmp	r2, r1
   5f18c:	mvn	r1, #3
   5f190:	strd	r0, [r3]
   5f194:	str	r2, [r4, #20]
   5f198:	bcs	5f298 <lua_setfield@@Base+0xc64>
   5f19c:	mov	r2, r6
   5f1a0:	mov	r1, #2
   5f1a4:	mov	r0, r4
   5f1a8:	bl	5e634 <lua_setfield@@Base>
   5f1ac:	mov	r1, r6
   5f1b0:	mov	r0, r4
   5f1b4:	bl	5b7a0 <lua_pushstring@@Base>
   5f1b8:	ldr	r1, [r4, #20]
   5f1bc:	mov	r2, #2
   5f1c0:	sub	r1, r1, #8
   5f1c4:	mov	r0, r4
   5f1c8:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   5f1cc:	mvn	r1, #0
   5f1d0:	mov	r0, r4
   5f1d4:	bl	5a214 <lua_type@@Base>
   5f1d8:	cmp	r0, #0
   5f1dc:	bne	5f284 <lua_setfield@@Base+0xc50>
   5f1e0:	mov	r2, r6
   5f1e4:	mov	r1, #2
   5f1e8:	mov	r0, r4
   5f1ec:	bl	5db0c <lua_getfield@@Base>
   5f1f0:	ldr	r3, [r4, #20]
   5f1f4:	ldr	r2, [r3, #-4]
   5f1f8:	cmn	r2, #13
   5f1fc:	beq	5f234 <lua_setfield@@Base+0xc00>
   5f200:	cmn	r2, #4
   5f204:	beq	5f2a8 <lua_setfield@@Base+0xc74>
   5f208:	mov	r0, #1
   5f20c:	pop	{r4, r5, r6, pc}
   5f210:	ldr	r3, [r2, #-8]
   5f214:	add	r3, r3, #24
   5f218:	ldr	r2, [pc, #228]	; 5f304 <lua_setfield@@Base+0xcd0>
   5f21c:	cmp	r3, r2
   5f220:	bne	5f208 <lua_setfield@@Base+0xbd4>
   5f224:	mov	r2, r6
   5f228:	mov	r0, r4
   5f22c:	ldr	r1, [pc, #212]	; 5f308 <lua_setfield@@Base+0xcd4>
   5f230:	bl	460ec <luaL_error@@Base>
   5f234:	ldr	r2, [r3, #-8]
   5f238:	add	r2, r2, #24
   5f23c:	ldr	r1, [pc, #192]	; 5f304 <lua_setfield@@Base+0xcd0>
   5f240:	cmp	r2, r1
   5f244:	bne	5f208 <lua_setfield@@Base+0xbd4>
   5f248:	ldr	r0, [r4, #24]
   5f24c:	add	r2, r3, #8
   5f250:	mvn	r1, #2
   5f254:	cmp	r2, r0
   5f258:	str	r1, [r3, #4]
   5f25c:	str	r2, [r4, #20]
   5f260:	bcs	5f2b0 <lua_setfield@@Base+0xc7c>
   5f264:	mov	r0, r4
   5f268:	mvn	r1, #0
   5f26c:	bl	5a100 <lua_pushvalue@@Base>
   5f270:	mov	r2, r6
   5f274:	mov	r0, r4
   5f278:	mov	r1, #2
   5f27c:	bl	5e634 <lua_setfield@@Base>
   5f280:	b	5f208 <lua_setfield@@Base+0xbd4>
   5f284:	mov	r2, r6
   5f288:	mov	r1, #2
   5f28c:	mov	r0, r4
   5f290:	bl	5e634 <lua_setfield@@Base>
   5f294:	b	5f1e0 <lua_setfield@@Base+0xbac>
   5f298:	mov	r1, #1
   5f29c:	mov	r0, r4
   5f2a0:	bl	1fd08 <lua_getstack@@Base+0x50>
   5f2a4:	b	5f19c <lua_setfield@@Base+0xb68>
   5f2a8:	ldr	r2, [r3, #-8]
   5f2ac:	b	5f23c <lua_setfield@@Base+0xc08>
   5f2b0:	mov	r1, #1
   5f2b4:	mov	r0, r4
   5f2b8:	bl	1fd08 <lua_getstack@@Base+0x50>
   5f2bc:	b	5f264 <lua_setfield@@Base+0xc30>
   5f2c0:	mov	r2, r0
   5f2c4:	mvn	r1, #1
   5f2c8:	mov	r0, r4
   5f2cc:	bl	5ab5c <lua_tolstring@@Base>
   5f2d0:	mov	r2, r6
   5f2d4:	ldr	r1, [pc, #48]	; 5f30c <lua_setfield@@Base+0xcd8>
   5f2d8:	mov	r3, r0
   5f2dc:	mov	r0, r4
   5f2e0:	bl	460ec <luaL_error@@Base>
   5f2e4:	mov	r0, r4
   5f2e8:	ldr	r1, [pc, #32]	; 5f310 <lua_setfield@@Base+0xcdc>
   5f2ec:	bl	460ec <luaL_error@@Base>
   5f2f0:	andeq	lr, r6, r0, lsl r9
   5f2f4:			; <UNDEFINED> instruction: 0xffffd8f0
   5f2f8:	strdeq	r3, [r7], -ip
   5f2fc:			; <UNDEFINED> instruction: 0xffffd8ef
   5f300:	andeq	lr, r6, r0, ror #24
   5f304:	andeq	r4, r0, r4
   5f308:	ldrdeq	r3, [r7], -r0
   5f30c:	andeq	r3, r7, r8, lsr #8
   5f310:	andeq	r3, r7, r4, lsl #8
   5f314:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   5f318:	mov	r3, #0
   5f31c:	sub	sp, sp, #48	; 0x30
   5f320:	ldr	r2, [pc, #652]	; 5f5b4 <lua_setfield@@Base+0xf80>
   5f324:	mov	r1, #1
   5f328:	mov	r5, r0
   5f32c:	bl	5ada0 <luaL_optlstring@@Base>
   5f330:	mov	r1, #2
   5f334:	mov	r6, r0
   5f338:	mov	r0, r5
   5f33c:	bl	5a214 <lua_type@@Base>
   5f340:	cmp	r0, #0
   5f344:	ble	5f4ac <lua_setfield@@Base+0xe78>
   5f348:	mov	r0, r5
   5f34c:	mov	r1, #2
   5f350:	bl	5a7d8 <luaL_checknumber@@Base>
   5f354:	vcvt.s32.f64	s15, d0
   5f358:	vmov	r0, s15
   5f35c:	str	r0, [sp]
   5f360:	ldrb	r3, [r6]
   5f364:	add	r1, sp, #4
   5f368:	mov	r0, sp
   5f36c:	cmp	r3, #33	; 0x21
   5f370:	beq	5f4b8 <lua_setfield@@Base+0xe84>
   5f374:	bl	12d3c <localtime_r@plt>
   5f378:	mov	r7, r0
   5f37c:	cmp	r7, #0
   5f380:	beq	5f4cc <lua_setfield@@Base+0xe98>
   5f384:	ldrb	r3, [r6]
   5f388:	cmp	r3, #42	; 0x2a
   5f38c:	beq	5f3c4 <lua_setfield@@Base+0xd90>
   5f390:	cmp	r3, #0
   5f394:	ldr	r8, [r5, #8]
   5f398:	bne	5f4f0 <lua_setfield@@Base+0xebc>
   5f39c:	ldr	r3, [r5, #20]
   5f3a0:	add	r8, r8, #96	; 0x60
   5f3a4:	add	r1, r3, #8
   5f3a8:	mvn	r2, #4
   5f3ac:	str	r1, [r5, #20]
   5f3b0:	str	r8, [r3]
   5f3b4:	str	r2, [r3, #4]
   5f3b8:	mov	r0, #1
   5f3bc:	add	sp, sp, #48	; 0x30
   5f3c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   5f3c4:	ldrb	r2, [r6, #1]
   5f3c8:	cmp	r2, #116	; 0x74
   5f3cc:	bne	5f4ec <lua_setfield@@Base+0xeb8>
   5f3d0:	ldrb	r1, [r6, #2]
   5f3d4:	cmp	r1, #0
   5f3d8:	bne	5f4ec <lua_setfield@@Base+0xeb8>
   5f3dc:	mov	r2, #9
   5f3e0:	mov	r0, r5
   5f3e4:	bl	5cae4 <lua_createtable@@Base>
   5f3e8:	ldr	r2, [r7]
   5f3ec:	ldr	r1, [pc, #452]	; 5f5b8 <lua_setfield@@Base+0xf84>
   5f3f0:	mov	r0, r5
   5f3f4:	bl	5e728 <lua_setfield@@Base+0xf4>
   5f3f8:	ldr	r2, [r7, #4]
   5f3fc:	ldr	r1, [pc, #440]	; 5f5bc <lua_setfield@@Base+0xf88>
   5f400:	mov	r0, r5
   5f404:	bl	5e728 <lua_setfield@@Base+0xf4>
   5f408:	ldr	r2, [r7, #8]
   5f40c:	ldr	r1, [pc, #428]	; 5f5c0 <lua_setfield@@Base+0xf8c>
   5f410:	mov	r0, r5
   5f414:	bl	5e728 <lua_setfield@@Base+0xf4>
   5f418:	ldr	r2, [r7, #12]
   5f41c:	ldr	r1, [pc, #416]	; 5f5c4 <lua_setfield@@Base+0xf90>
   5f420:	mov	r0, r5
   5f424:	bl	5e728 <lua_setfield@@Base+0xf4>
   5f428:	ldr	r2, [r7, #16]
   5f42c:	ldr	r1, [pc, #404]	; 5f5c8 <lua_setfield@@Base+0xf94>
   5f430:	add	r2, r2, #1
   5f434:	mov	r0, r5
   5f438:	bl	5e728 <lua_setfield@@Base+0xf4>
   5f43c:	ldr	r2, [r7, #20]
   5f440:	ldr	r1, [pc, #388]	; 5f5cc <lua_setfield@@Base+0xf98>
   5f444:	add	r2, r2, #1888	; 0x760
   5f448:	add	r2, r2, #12
   5f44c:	mov	r0, r5
   5f450:	bl	5e728 <lua_setfield@@Base+0xf4>
   5f454:	ldr	r2, [r7, #24]
   5f458:	ldr	r1, [pc, #368]	; 5f5d0 <lua_setfield@@Base+0xf9c>
   5f45c:	add	r2, r2, #1
   5f460:	mov	r0, r5
   5f464:	bl	5e728 <lua_setfield@@Base+0xf4>
   5f468:	ldr	r2, [r7, #28]
   5f46c:	ldr	r1, [pc, #352]	; 5f5d4 <lua_setfield@@Base+0xfa0>
   5f470:	add	r2, r2, #1
   5f474:	mov	r0, r5
   5f478:	bl	5e728 <lua_setfield@@Base+0xf4>
   5f47c:	ldr	r1, [r7, #32]
   5f480:	cmp	r1, #0
   5f484:	blt	5f3b8 <lua_setfield@@Base+0xd84>
   5f488:	mov	r0, r5
   5f48c:	bl	5ca7c <lua_pushboolean@@Base>
   5f490:	mov	r0, r5
   5f494:	ldr	r2, [pc, #316]	; 5f5d8 <lua_setfield@@Base+0xfa4>
   5f498:	mvn	r1, #1
   5f49c:	bl	5e634 <lua_setfield@@Base>
   5f4a0:	mov	r0, #1
   5f4a4:	add	sp, sp, #48	; 0x30
   5f4a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   5f4ac:	mov	r0, #0
   5f4b0:	bl	12cdc <time@plt>
   5f4b4:	b	5f35c <lua_setfield@@Base+0xd28>
   5f4b8:	bl	12c40 <gmtime_r@plt>
   5f4bc:	add	r6, r6, #1
   5f4c0:	mov	r7, r0
   5f4c4:	cmp	r7, #0
   5f4c8:	bne	5f384 <lua_setfield@@Base+0xd50>
   5f4cc:	ldr	r3, [r5, #20]
   5f4d0:	mvn	r2, #0
   5f4d4:	add	r1, r3, #8
   5f4d8:	str	r1, [r5, #20]
   5f4dc:	mov	r0, #1
   5f4e0:	str	r2, [r3, #4]
   5f4e4:	add	sp, sp, #48	; 0x30
   5f4e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   5f4ec:	ldr	r8, [r5, #8]
   5f4f0:	add	sl, r8, #80	; 0x50
   5f4f4:	mov	r2, r6
   5f4f8:	mov	r4, #0
   5f4fc:	cmp	r3, #37	; 0x25
   5f500:	ldrb	r3, [r2, #1]!
   5f504:	movne	r1, #1
   5f508:	moveq	r1, #30
   5f50c:	cmp	r3, #0
   5f510:	add	r4, r4, r1
   5f514:	bne	5f4fc <lua_setfield@@Base+0xec8>
   5f518:	str	r5, [r8, #92]	; 0x5c
   5f51c:	ldr	r3, [r8, #88]	; 0x58
   5f520:	ldr	r1, [r8, #84]	; 0x54
   5f524:	mov	r9, r3
   5f528:	sub	r1, r1, r3
   5f52c:	cmp	r4, r1
   5f530:	bhi	5f594 <lua_setfield@@Base+0xf60>
   5f534:	mov	r3, r7
   5f538:	mov	r2, r6
   5f53c:	mov	r0, r9
   5f540:	bl	12dfc <strftime@plt>
   5f544:	orr	r3, r4, #1
   5f548:	add	r4, r4, r3
   5f54c:	subs	r2, r0, #0
   5f550:	beq	5f51c <lua_setfield@@Base+0xee8>
   5f554:	ldr	r4, [r5, #20]
   5f558:	mov	r1, r9
   5f55c:	add	r3, r4, #8
   5f560:	str	r3, [r5, #20]
   5f564:	mov	r0, r5
   5f568:	bl	20260 <luaL_where@@Base+0x15c>
   5f56c:	ldr	r3, [r5, #8]
   5f570:	mvn	r2, #4
   5f574:	str	r2, [r4, #4]
   5f578:	ldrd	r2, [r3, #20]
   5f57c:	cmp	r2, r3
   5f580:	str	r0, [r4]
   5f584:	bcc	5f3b8 <lua_setfield@@Base+0xd84>
   5f588:	mov	r0, r5
   5f58c:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   5f590:	b	5f3b8 <lua_setfield@@Base+0xd84>
   5f594:	mov	r1, r4
   5f598:	mov	r0, sl
   5f59c:	bl	333cc <luaL_where@@Base+0x132c8>
   5f5a0:	ldr	r1, [r8, #84]	; 0x54
   5f5a4:	ldr	r3, [r8, #88]	; 0x58
   5f5a8:	sub	r1, r1, r3
   5f5ac:	mov	r9, r0
   5f5b0:	b	5f534 <lua_setfield@@Base+0xf00>
   5f5b4:	andeq	r2, r7, r0, lsr #25
   5f5b8:	andeq	r3, r7, ip, ror #4
   5f5bc:	andeq	r3, r7, r0, ror r2
   5f5c0:	andeq	r3, r7, r4, ror r2
   5f5c4:	andeq	r3, r7, ip, ror r2
   5f5c8:	andeq	r3, r7, r0, lsl #5
   5f5cc:	andeq	r3, r7, r8, lsl #5
   5f5d0:	andeq	r3, r7, r4, asr #8
   5f5d4:	andeq	r3, r7, ip, asr #8
   5f5d8:	muleq	r7, r0, r2

0005f5dc <lua_rawset@@Base>:
   5f5dc:	push	{r4, r5, r6, r7, r8, lr}
   5f5e0:	mov	r4, r0
   5f5e4:	bl	1b44c <_start@@Base+0x809c>
   5f5e8:	ldr	r7, [r4, #20]
   5f5ec:	sub	r6, r7, #16
   5f5f0:	mov	r2, r6
   5f5f4:	ldr	r5, [r0]
   5f5f8:	mov	r0, r4
   5f5fc:	mov	r1, r5
   5f600:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   5f604:	ldrd	r2, [r7, #-8]
   5f608:	strd	r2, [r0]
   5f60c:	ldrb	r3, [r5, #4]
   5f610:	tst	r3, #4
   5f614:	bne	5f620 <lua_rawset@@Base+0x44>
   5f618:	str	r6, [r4, #20]
   5f61c:	pop	{r4, r5, r6, r7, r8, pc}
   5f620:	ldr	r2, [r4, #8]
   5f624:	bic	r3, r3, #4
   5f628:	strb	r3, [r5, #4]
   5f62c:	ldr	r3, [r2, #48]	; 0x30
   5f630:	str	r3, [r5, #12]
   5f634:	str	r5, [r2, #48]	; 0x30
   5f638:	str	r6, [r4, #20]
   5f63c:	pop	{r4, r5, r6, r7, r8, pc}
   5f640:	push	{r4, lr}
   5f644:	mov	r4, r0
   5f648:	mov	r1, #1
   5f64c:	bl	36a74 <luaL_typerror@@Base+0x708>
   5f650:	ldr	r3, [r4, #16]
   5f654:	ldr	r2, [r4, #20]
   5f658:	add	r1, r3, #8
   5f65c:	cmp	r2, r1
   5f660:	bls	5f68c <lua_rawset@@Base+0xb0>
   5f664:	add	r1, r3, #16
   5f668:	cmp	r2, r1
   5f66c:	bls	5f69c <lua_rawset@@Base+0xc0>
   5f670:	add	r3, r3, #24
   5f674:	mov	r0, r4
   5f678:	str	r3, [r4, #20]
   5f67c:	mov	r1, #1
   5f680:	bl	5f5dc <lua_rawset@@Base>
   5f684:	mov	r0, #1
   5f688:	pop	{r4, pc}
   5f68c:	mov	r0, r4
   5f690:	ldr	r2, [pc, #20]	; 5f6ac <lua_rawset@@Base+0xd0>
   5f694:	mov	r1, #2
   5f698:	bl	361d0 <luaL_argerror@@Base+0x8>
   5f69c:	mov	r0, r4
   5f6a0:	ldr	r2, [pc, #4]	; 5f6ac <lua_rawset@@Base+0xd0>
   5f6a4:	mov	r1, #3
   5f6a8:	bl	361d0 <luaL_argerror@@Base+0x8>
   5f6ac:	andeq	r0, r0, r7, lsr #4
   5f6b0:	ldr	r3, [r0, #16]
   5f6b4:	ldr	r2, [r0, #20]
   5f6b8:	push	{r4, r5, r6, r7, r8, lr}
   5f6bc:	cmp	r3, r2
   5f6c0:	mov	r4, r0
   5f6c4:	movcs	r6, #1
   5f6c8:	movcs	r5, #0
   5f6cc:	bcs	5f6e4 <lua_rawset@@Base+0x108>
   5f6d0:	ldr	r5, [r3, #4]
   5f6d4:	cmn	r5, #7
   5f6d8:	movne	r5, #0
   5f6dc:	moveq	r5, #1
   5f6e0:	add	r6, r5, #1
   5f6e4:	mov	r1, r6
   5f6e8:	mov	r0, r4
   5f6ec:	bl	5a214 <lua_type@@Base>
   5f6f0:	cmp	r0, #0
   5f6f4:	ble	5f7e0 <lua_rawset@@Base+0x204>
   5f6f8:	add	r1, r5, #2
   5f6fc:	mov	r2, #0
   5f700:	mov	r0, r4
   5f704:	bl	5ad0c <luaL_checklstring@@Base>
   5f708:	mov	r2, #6
   5f70c:	mov	r1, r6
   5f710:	mov	r7, r0
   5f714:	mov	r0, r4
   5f718:	bl	5a27c <luaL_checktype@@Base>
   5f71c:	mov	r2, #0
   5f720:	add	r1, r5, #3
   5f724:	mov	r0, r4
   5f728:	bl	5aa94 <luaL_optinteger@@Base>
   5f72c:	mov	r1, #99	; 0x63
   5f730:	mov	r8, r0
   5f734:	mov	r0, r7
   5f738:	bl	12e8c <strchr@plt>
   5f73c:	mov	r1, #114	; 0x72
   5f740:	adds	r5, r0, #0
   5f744:	mov	r0, r7
   5f748:	movne	r5, #1
   5f74c:	bl	12e8c <strchr@plt>
   5f750:	mov	r1, #108	; 0x6c
   5f754:	cmp	r0, #0
   5f758:	mov	r0, r7
   5f75c:	orrne	r5, r5, #2
   5f760:	bl	12e8c <strchr@plt>
   5f764:	ldr	r7, [pc, #144]	; 5f7fc <lua_rawset@@Base+0x220>
   5f768:	cmp	r0, #0
   5f76c:	orrne	r5, r5, #4
   5f770:	cmp	r8, #0
   5f774:	orrgt	r5, r5, #8
   5f778:	ldr	r3, [r4, #20]
   5f77c:	ldr	r0, [r4, #24]
   5f780:	ldr	r1, [pc, #120]	; 5f800 <lua_rawset@@Base+0x224>
   5f784:	add	r2, r3, #8
   5f788:	str	r1, [r3]
   5f78c:	cmp	r2, r0
   5f790:	mvn	r1, #3
   5f794:	str	r1, [r3, #4]
   5f798:	str	r2, [r4, #20]
   5f79c:	bcc	5f7ac <lua_rawset@@Base+0x1d0>
   5f7a0:	mov	r1, #1
   5f7a4:	mov	r0, r4
   5f7a8:	bl	1fd08 <lua_getstack@@Base+0x50>
   5f7ac:	mov	r1, r6
   5f7b0:	mov	r0, r4
   5f7b4:	bl	5a100 <lua_pushvalue@@Base>
   5f7b8:	mov	r0, r4
   5f7bc:	ldr	r1, [pc, #64]	; 5f804 <lua_rawset@@Base+0x228>
   5f7c0:	bl	5f5dc <lua_rawset@@Base>
   5f7c4:	mov	r3, r8
   5f7c8:	mov	r2, r5
   5f7cc:	mov	r1, r7
   5f7d0:	mov	r0, r4
   5f7d4:	bl	53604 <lua_sethook@@Base>
   5f7d8:	mov	r0, #0
   5f7dc:	pop	{r4, r5, r6, r7, r8, pc}
   5f7e0:	mov	r7, #0
   5f7e4:	mov	r1, r6
   5f7e8:	mov	r0, r4
   5f7ec:	bl	59f30 <lua_settop@@Base>
   5f7f0:	mov	r8, r7
   5f7f4:	mov	r5, r7
   5f7f8:	b	5f778 <lua_rawset@@Base+0x19c>
   5f7fc:	andeq	sp, r5, r8, lsl pc
   5f800:	andeq	r3, r0, r4
   5f804:			; <UNDEFINED> instruction: 0xffffd8f0

0005f808 <lua_rawseti@@Base>:
   5f808:	push	{r4, r5, r6, lr}
   5f80c:	mov	r6, r2
   5f810:	mov	r5, r0
   5f814:	bl	1b44c <_start@@Base+0x809c>
   5f818:	ldr	r4, [r0]
   5f81c:	ldr	r3, [r4, #24]
   5f820:	cmp	r3, r6
   5f824:	bls	5f88c <lua_rawseti@@Base+0x84>
   5f828:	ldr	r0, [r4, #8]
   5f82c:	add	r0, r0, r6, lsl #3
   5f830:	ldr	r3, [r5, #20]
   5f834:	sub	r1, r3, #8
   5f838:	ldrd	r2, [r3, #-8]
   5f83c:	strd	r2, [r0]
   5f840:	ldr	r3, [r0, #4]
   5f844:	add	r3, r3, #4
   5f848:	cmn	r3, #10
   5f84c:	bls	5f884 <lua_rawseti@@Base+0x7c>
   5f850:	ldr	r3, [r0]
   5f854:	ldrb	r3, [r3, #4]
   5f858:	tst	r3, #3
   5f85c:	beq	5f884 <lua_rawseti@@Base+0x7c>
   5f860:	ldrb	r3, [r4, #4]
   5f864:	tst	r3, #4
   5f868:	beq	5f884 <lua_rawseti@@Base+0x7c>
   5f86c:	ldr	r2, [r5, #8]
   5f870:	bic	r3, r3, #4
   5f874:	strb	r3, [r4, #4]
   5f878:	ldr	r3, [r2, #48]	; 0x30
   5f87c:	str	r3, [r4, #12]
   5f880:	str	r4, [r2, #48]	; 0x30
   5f884:	str	r1, [r5, #20]
   5f888:	pop	{r4, r5, r6, pc}
   5f88c:	mov	r2, r6
   5f890:	mov	r1, r4
   5f894:	mov	r0, r5
   5f898:	bl	3e200 <luaL_typerror@@Base+0x7e94>
   5f89c:	b	5f830 <lua_rawseti@@Base+0x28>
   5f8a0:	cmp	r1, r2
   5f8a4:	bxge	lr
   5f8a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   5f8ac:	mov	r7, r1
   5f8b0:	mov	r9, r2
   5f8b4:	mov	r4, r0
   5f8b8:	mov	r2, r7
   5f8bc:	mov	r1, #1
   5f8c0:	mov	r0, r4
   5f8c4:	bl	5e014 <lua_rawgeti@@Base>
   5f8c8:	mov	r2, r9
   5f8cc:	mov	r1, #1
   5f8d0:	mov	r0, r4
   5f8d4:	bl	5e014 <lua_rawgeti@@Base>
   5f8d8:	mvn	r2, #1
   5f8dc:	mvn	r1, #0
   5f8e0:	mov	r0, r4
   5f8e4:	bl	5a648 <lua_lessthan@@Base+0x108>
   5f8e8:	cmp	r0, #0
   5f8ec:	beq	5fb1c <lua_rawseti@@Base+0x314>
   5f8f0:	mov	r2, r7
   5f8f4:	mov	r1, #1
   5f8f8:	mov	r0, r4
   5f8fc:	bl	5f808 <lua_rawseti@@Base>
   5f900:	mov	r2, r9
   5f904:	mov	r1, #1
   5f908:	mov	r0, r4
   5f90c:	bl	5f808 <lua_rawseti@@Base>
   5f910:	sub	r6, r9, r7
   5f914:	cmp	r6, #1
   5f918:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   5f91c:	add	r5, r7, r9
   5f920:	mov	r1, #1
   5f924:	add	r5, r5, r5, lsr #31
   5f928:	mov	r0, r4
   5f92c:	asr	r5, r5, r1
   5f930:	mov	r2, r5
   5f934:	bl	5e014 <lua_rawgeti@@Base>
   5f938:	mov	r2, r7
   5f93c:	mov	r1, #1
   5f940:	mov	r0, r4
   5f944:	bl	5e014 <lua_rawgeti@@Base>
   5f948:	mvn	r2, #0
   5f94c:	mvn	r1, #1
   5f950:	mov	r0, r4
   5f954:	bl	5a648 <lua_lessthan@@Base+0x108>
   5f958:	cmp	r0, #0
   5f95c:	beq	5fb2c <lua_rawseti@@Base+0x324>
   5f960:	mov	r2, r5
   5f964:	mov	r1, #1
   5f968:	mov	r0, r4
   5f96c:	bl	5f808 <lua_rawseti@@Base>
   5f970:	mov	r2, r7
   5f974:	mov	r1, #1
   5f978:	mov	r0, r4
   5f97c:	bl	5f808 <lua_rawseti@@Base>
   5f980:	cmp	r6, #2
   5f984:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   5f988:	mov	r2, r5
   5f98c:	mov	r1, #1
   5f990:	mov	r0, r4
   5f994:	bl	5e014 <lua_rawgeti@@Base>
   5f998:	sub	sl, r9, #1
   5f99c:	mvn	r1, #0
   5f9a0:	mov	r0, r4
   5f9a4:	bl	5a100 <lua_pushvalue@@Base>
   5f9a8:	mov	r2, sl
   5f9ac:	mov	r1, #1
   5f9b0:	mov	r0, r4
   5f9b4:	bl	5e014 <lua_rawgeti@@Base>
   5f9b8:	mov	r2, r5
   5f9bc:	mov	r1, #1
   5f9c0:	mov	r0, r4
   5f9c4:	bl	5f808 <lua_rawseti@@Base>
   5f9c8:	mov	r2, sl
   5f9cc:	mov	r1, #1
   5f9d0:	mov	r0, r4
   5f9d4:	mov	r5, sl
   5f9d8:	bl	5f808 <lua_rawseti@@Base>
   5f9dc:	mov	r8, r7
   5f9e0:	b	5f9fc <lua_rawseti@@Base+0x1f4>
   5f9e4:	cmp	r6, r9
   5f9e8:	bge	5fbb4 <lua_rawseti@@Base+0x3ac>
   5f9ec:	ldr	r3, [r4, #20]
   5f9f0:	sub	r3, r3, #8
   5f9f4:	str	r3, [r4, #20]
   5f9f8:	mov	r8, r6
   5f9fc:	add	r6, r8, #1
   5fa00:	mov	r2, r6
   5fa04:	mov	r1, #1
   5fa08:	mov	r0, r4
   5fa0c:	bl	5e014 <lua_rawgeti@@Base>
   5fa10:	mvn	r2, #1
   5fa14:	mvn	r1, #0
   5fa18:	mov	r0, r4
   5fa1c:	bl	5a648 <lua_lessthan@@Base+0x108>
   5fa20:	cmp	r0, #0
   5fa24:	bne	5f9e4 <lua_rawseti@@Base+0x1dc>
   5fa28:	b	5fa40 <lua_rawseti@@Base+0x238>
   5fa2c:	cmp	r5, r7
   5fa30:	ble	5fbb4 <lua_rawseti@@Base+0x3ac>
   5fa34:	ldr	r3, [r4, #20]
   5fa38:	sub	r3, r3, #8
   5fa3c:	str	r3, [r4, #20]
   5fa40:	sub	r5, r5, #1
   5fa44:	mov	r2, r5
   5fa48:	mov	r1, #1
   5fa4c:	mov	r0, r4
   5fa50:	bl	5e014 <lua_rawgeti@@Base>
   5fa54:	mvn	r2, #0
   5fa58:	mvn	r1, #2
   5fa5c:	mov	r0, r4
   5fa60:	bl	5a648 <lua_lessthan@@Base+0x108>
   5fa64:	cmp	r0, #0
   5fa68:	bne	5fa2c <lua_rawseti@@Base+0x224>
   5fa6c:	cmp	r6, r5
   5fa70:	bgt	5fa98 <lua_rawseti@@Base+0x290>
   5fa74:	mov	r2, r6
   5fa78:	mov	r0, r4
   5fa7c:	mov	r1, #1
   5fa80:	bl	5f808 <lua_rawseti@@Base>
   5fa84:	mov	r2, r5
   5fa88:	mov	r1, #1
   5fa8c:	mov	r0, r4
   5fa90:	bl	5f808 <lua_rawseti@@Base>
   5fa94:	b	5f9f8 <lua_rawseti@@Base+0x1f0>
   5fa98:	ldr	r3, [r4, #20]
   5fa9c:	mov	r2, sl
   5faa0:	sub	r3, r3, #24
   5faa4:	str	r3, [r4, #20]
   5faa8:	mov	r1, #1
   5faac:	mov	r0, r4
   5fab0:	bl	5e014 <lua_rawgeti@@Base>
   5fab4:	mov	r2, r6
   5fab8:	mov	r1, #1
   5fabc:	mov	r0, r4
   5fac0:	bl	5e014 <lua_rawgeti@@Base>
   5fac4:	mov	r2, sl
   5fac8:	mov	r1, #1
   5facc:	mov	r0, r4
   5fad0:	bl	5f808 <lua_rawseti@@Base>
   5fad4:	mov	r2, r6
   5fad8:	mov	r1, #1
   5fadc:	mov	r0, r4
   5fae0:	bl	5f808 <lua_rawseti@@Base>
   5fae4:	sub	r3, r6, r7
   5fae8:	sub	r6, r9, r6
   5faec:	cmp	r3, r6
   5faf0:	add	r1, r8, #2
   5faf4:	bge	5fb8c <lua_rawseti@@Base+0x384>
   5faf8:	mov	r3, r7
   5fafc:	mov	r7, r1
   5fb00:	mov	r1, r3
   5fb04:	mov	r2, r8
   5fb08:	mov	r0, r4
   5fb0c:	bl	5f8a0 <lua_rawseti@@Base+0x98>
   5fb10:	cmp	r7, r9
   5fb14:	blt	5f8b8 <lua_rawseti@@Base+0xb0>
   5fb18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   5fb1c:	ldr	r3, [r4, #20]
   5fb20:	sub	r3, r3, #16
   5fb24:	str	r3, [r4, #20]
   5fb28:	b	5f910 <lua_rawseti@@Base+0x108>
   5fb2c:	ldr	r3, [r4, #20]
   5fb30:	mov	r2, r9
   5fb34:	sub	r3, r3, #8
   5fb38:	str	r3, [r4, #20]
   5fb3c:	mov	r1, #1
   5fb40:	mov	r0, r4
   5fb44:	bl	5e014 <lua_rawgeti@@Base>
   5fb48:	mvn	r2, #1
   5fb4c:	mvn	r1, #0
   5fb50:	mov	r0, r4
   5fb54:	bl	5a648 <lua_lessthan@@Base+0x108>
   5fb58:	cmp	r0, #0
   5fb5c:	beq	5fb9c <lua_rawseti@@Base+0x394>
   5fb60:	mov	r2, r5
   5fb64:	mov	r1, #1
   5fb68:	mov	r0, r4
   5fb6c:	bl	5f808 <lua_rawseti@@Base>
   5fb70:	mov	r2, r9
   5fb74:	mov	r1, #1
   5fb78:	mov	r0, r4
   5fb7c:	bl	5f808 <lua_rawseti@@Base>
   5fb80:	cmp	r6, #2
   5fb84:	bne	5f988 <lua_rawseti@@Base+0x180>
   5fb88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   5fb8c:	mov	r3, r9
   5fb90:	mov	r9, r8
   5fb94:	mov	r8, r3
   5fb98:	b	5fb04 <lua_rawseti@@Base+0x2fc>
   5fb9c:	ldr	r3, [r4, #20]
   5fba0:	cmp	r6, #2
   5fba4:	sub	r3, r3, #16
   5fba8:	str	r3, [r4, #20]
   5fbac:	bne	5f988 <lua_rawseti@@Base+0x180>
   5fbb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   5fbb4:	mov	r0, r4
   5fbb8:	mov	r1, #1456	; 0x5b0
   5fbbc:	bl	35a48 <lua_error@@Base+0xa8>
   5fbc0:	push	{r4, r5, r6, lr}
   5fbc4:	mov	r1, #1
   5fbc8:	mov	r4, r0
   5fbcc:	bl	36a74 <luaL_typerror@@Base+0x708>
   5fbd0:	bl	1f244 <lua_atpanic@@Base+0x74>
   5fbd4:	mov	r1, #2
   5fbd8:	mov	r5, r0
   5fbdc:	mov	r0, r4
   5fbe0:	bl	59f30 <lua_settop@@Base>
   5fbe4:	ldr	r3, [r4, #16]
   5fbe8:	ldr	r3, [r3, #12]
   5fbec:	cmn	r3, #1
   5fbf0:	beq	5fc00 <lua_rawseti@@Base+0x3f8>
   5fbf4:	mov	r1, #2
   5fbf8:	mov	r0, r4
   5fbfc:	bl	36884 <luaL_typerror@@Base+0x518>
   5fc00:	mov	r0, r4
   5fc04:	mov	r2, r5
   5fc08:	mov	r1, #1
   5fc0c:	bl	5f8a0 <lua_rawseti@@Base+0x98>
   5fc10:	mov	r0, #0
   5fc14:	pop	{r4, r5, r6, pc}

0005fc18 <lua_setmetatable@@Base>:
   5fc18:	push	{r4, r5, r6, r7, r8, lr}
   5fc1c:	mov	r4, r0
   5fc20:	bl	1b44c <_start@@Base+0x809c>
   5fc24:	ldr	r3, [r4, #20]
   5fc28:	ldr	r2, [r3, #-4]
   5fc2c:	cmn	r2, #1
   5fc30:	mov	r5, r0
   5fc34:	beq	5fd04 <lua_setmetatable@@Base+0xec>
   5fc38:	ldr	r2, [r0, #4]
   5fc3c:	ldr	r6, [r3, #-8]
   5fc40:	cmn	r2, #12
   5fc44:	beq	5fcbc <lua_setmetatable@@Base+0xa4>
   5fc48:	cmn	r2, #13
   5fc4c:	ldr	r7, [r4, #8]
   5fc50:	bne	5fd20 <lua_setmetatable@@Base+0x108>
   5fc54:	ldr	r3, [r0]
   5fc58:	cmp	r6, #0
   5fc5c:	str	r6, [r3, #16]
   5fc60:	beq	5fca8 <lua_setmetatable@@Base+0x90>
   5fc64:	ldrb	r3, [r6, #4]
   5fc68:	tst	r3, #3
   5fc6c:	beq	5fca8 <lua_setmetatable@@Base+0x90>
   5fc70:	ldr	r2, [r0]
   5fc74:	ldrb	r3, [r2, #4]
   5fc78:	tst	r3, #4
   5fc7c:	beq	5fca8 <lua_setmetatable@@Base+0x90>
   5fc80:	ldr	r0, [r4, #8]
   5fc84:	ldrb	r1, [r0, #29]
   5fc88:	sub	r1, r1, #1
   5fc8c:	cmp	r1, #1
   5fc90:	bls	5fd70 <lua_setmetatable@@Base+0x158>
   5fc94:	ldrb	r1, [r0, #28]
   5fc98:	bic	r3, r3, #7
   5fc9c:	and	r1, r1, #3
   5fca0:	orr	r3, r3, r1
   5fca4:	strb	r3, [r2, #4]
   5fca8:	ldr	r3, [r4, #20]
   5fcac:	mov	r0, #1
   5fcb0:	sub	r3, r3, #8
   5fcb4:	str	r3, [r4, #20]
   5fcb8:	pop	{r4, r5, r6, r7, r8, pc}
   5fcbc:	ldr	r3, [r0]
   5fcc0:	cmp	r6, #0
   5fcc4:	str	r6, [r3, #16]
   5fcc8:	beq	5fca8 <lua_setmetatable@@Base+0x90>
   5fccc:	ldrb	r3, [r6, #4]
   5fcd0:	tst	r3, #3
   5fcd4:	beq	5fca8 <lua_setmetatable@@Base+0x90>
   5fcd8:	ldr	r3, [r0]
   5fcdc:	ldrb	r2, [r3, #4]
   5fce0:	tst	r2, #4
   5fce4:	beq	5fca8 <lua_setmetatable@@Base+0x90>
   5fce8:	ldr	r1, [r4, #8]
   5fcec:	bic	r2, r2, #4
   5fcf0:	strb	r2, [r3, #4]
   5fcf4:	ldr	r2, [r1, #48]	; 0x30
   5fcf8:	str	r2, [r3, #12]
   5fcfc:	str	r3, [r1, #48]	; 0x30
   5fd00:	b	5fca8 <lua_setmetatable@@Base+0x90>
   5fd04:	ldr	r3, [r0, #4]
   5fd08:	cmn	r3, #12
   5fd0c:	beq	5fd60 <lua_setmetatable@@Base+0x148>
   5fd10:	cmn	r3, #13
   5fd14:	ldr	r7, [r4, #8]
   5fd18:	movne	r6, #0
   5fd1c:	beq	5fd60 <lua_setmetatable@@Base+0x148>
   5fd20:	mov	r0, r4
   5fd24:	bl	508b8 <luaL_error@@Base+0xa7cc>
   5fd28:	cmp	r0, #0
   5fd2c:	bne	5fd7c <lua_setmetatable@@Base+0x164>
   5fd30:	ldr	r3, [r5, #4]
   5fd34:	add	r2, r3, #3
   5fd38:	cmp	r2, #1
   5fd3c:	strls	r6, [r7, #328]	; 0x148
   5fd40:	strls	r6, [r7, #324]	; 0x144
   5fd44:	bls	5fca8 <lua_setmetatable@@Base+0x90>
   5fd48:	cmn	r3, #14
   5fd4c:	rsbhi	r3, r3, #21
   5fd50:	movls	r3, #35	; 0x23
   5fd54:	add	r3, r3, #58	; 0x3a
   5fd58:	str	r6, [r7, r3, lsl #2]
   5fd5c:	b	5fca8 <lua_setmetatable@@Base+0x90>
   5fd60:	ldr	r3, [r5]
   5fd64:	mov	r2, #0
   5fd68:	str	r2, [r3, #16]
   5fd6c:	b	5fca8 <lua_setmetatable@@Base+0x90>
   5fd70:	mov	r1, r6
   5fd74:	bl	17498 <_start@@Base+0x40e8>
   5fd78:	b	5fca8 <lua_setmetatable@@Base+0x90>
   5fd7c:	mov	r0, r4
   5fd80:	ldr	r1, [pc]	; 5fd88 <lua_setmetatable@@Base+0x170>
   5fd84:	bl	35a48 <lua_error@@Base+0xa8>
   5fd88:	andeq	r0, r0, r1, lsl #7
   5fd8c:	push	{r4, r5, r6, lr}
   5fd90:	mov	r1, #1
   5fd94:	mov	r4, r0
   5fd98:	bl	59f30 <lua_settop@@Base>
   5fd9c:	mov	r1, #0
   5fda0:	mov	r0, r4
   5fda4:	bl	5d0f8 <lua_newuserdata@@Base>
   5fda8:	mov	r0, r4
   5fdac:	mov	r1, #1
   5fdb0:	bl	1b44c <_start@@Base+0x809c>
   5fdb4:	ldr	r3, [r0, #4]
   5fdb8:	cmn	r3, #3
   5fdbc:	bls	5fdc8 <lua_setmetatable@@Base+0x1b0>
   5fdc0:	mov	r0, #1
   5fdc4:	pop	{r4, r5, r6, pc}
   5fdc8:	mov	r1, #1
   5fdcc:	mov	r0, r4
   5fdd0:	bl	5a214 <lua_type@@Base>
   5fdd4:	cmp	r0, #1
   5fdd8:	mov	r5, r0
   5fddc:	beq	5fe38 <lua_setmetatable@@Base+0x220>
   5fde0:	mov	r1, #1
   5fde4:	mov	r0, r4
   5fde8:	bl	5e094 <lua_getmetatable@@Base>
   5fdec:	cmp	r0, #0
   5fdf0:	beq	5fe94 <lua_setmetatable@@Base+0x27c>
   5fdf4:	ldr	r1, [pc, #168]	; 5fea4 <lua_setmetatable@@Base+0x28c>
   5fdf8:	mov	r0, r4
   5fdfc:	bl	5ddcc <lua_rawget@@Base>
   5fe00:	ldr	r3, [r4, #20]
   5fe04:	sub	r2, r3, #8
   5fe08:	ldr	r3, [r3, #-4]
   5fe0c:	str	r2, [r4, #20]
   5fe10:	cmn	r3, #3
   5fe14:	bhi	5fe94 <lua_setmetatable@@Base+0x27c>
   5fe18:	mov	r1, #1
   5fe1c:	mov	r0, r4
   5fe20:	bl	5e094 <lua_getmetatable@@Base>
   5fe24:	mov	r0, r4
   5fe28:	mov	r1, #2
   5fe2c:	bl	5fc18 <lua_setmetatable@@Base>
   5fe30:	mov	r0, #1
   5fe34:	pop	{r4, r5, r6, pc}
   5fe38:	mov	r2, #0
   5fe3c:	mov	r1, r2
   5fe40:	mov	r0, r4
   5fe44:	bl	5cae4 <lua_createtable@@Base>
   5fe48:	mvn	r1, #0
   5fe4c:	mov	r0, r4
   5fe50:	bl	5a100 <lua_pushvalue@@Base>
   5fe54:	ldr	r2, [r4, #20]
   5fe58:	ldr	r0, [r4, #24]
   5fe5c:	add	r3, r2, #8
   5fe60:	mvn	r1, #2
   5fe64:	cmp	r3, r0
   5fe68:	str	r1, [r2, #4]
   5fe6c:	str	r3, [r4, #20]
   5fe70:	bcs	5fe84 <lua_setmetatable@@Base+0x26c>
   5fe74:	ldr	r1, [pc, #40]	; 5fea4 <lua_setmetatable@@Base+0x28c>
   5fe78:	mov	r0, r4
   5fe7c:	bl	5f5dc <lua_rawset@@Base>
   5fe80:	b	5fe24 <lua_setmetatable@@Base+0x20c>
   5fe84:	mov	r1, r5
   5fe88:	mov	r0, r4
   5fe8c:	bl	1fd08 <lua_getstack@@Base+0x50>
   5fe90:	b	5fe74 <lua_setmetatable@@Base+0x25c>
   5fe94:	mov	r0, r4
   5fe98:	ldr	r2, [pc, #8]	; 5fea8 <lua_setmetatable@@Base+0x290>
   5fe9c:	mov	r1, #1
   5fea0:	bl	361d0 <luaL_argerror@@Base+0x8>
   5fea4:			; <UNDEFINED> instruction: 0xffffd8ed
   5fea8:	andeq	r0, r0, pc, lsr #5
   5feac:	push	{r4, lr}
   5feb0:	mov	r2, #5
   5feb4:	mov	r4, r0
   5feb8:	mov	r1, #1
   5febc:	bl	5a27c <luaL_checktype@@Base>
   5fec0:	mov	r1, #1
   5fec4:	mov	r0, r4
   5fec8:	bl	5e094 <lua_getmetatable@@Base>
   5fecc:	subs	r1, r0, #0
   5fed0:	bne	5fef8 <lua_setmetatable@@Base+0x2e0>
   5fed4:	mov	r2, #1
   5fed8:	mov	r0, r4
   5fedc:	bl	5cae4 <lua_createtable@@Base>
   5fee0:	mvn	r1, #0
   5fee4:	mov	r0, r4
   5fee8:	bl	5a100 <lua_pushvalue@@Base>
   5feec:	mov	r1, #1
   5fef0:	mov	r0, r4
   5fef4:	bl	5fc18 <lua_setmetatable@@Base>
   5fef8:	mov	r0, r4
   5fefc:	ldr	r1, [pc, #24]	; 5ff1c <lua_setmetatable@@Base+0x304>
   5ff00:	bl	5a100 <lua_pushvalue@@Base>
   5ff04:	mov	r0, r4
   5ff08:	ldr	r2, [pc, #16]	; 5ff20 <lua_setmetatable@@Base+0x308>
   5ff0c:	mvn	r1, #1
   5ff10:	bl	5e634 <lua_setfield@@Base>
   5ff14:	mov	r0, #0
   5ff18:	pop	{r4, pc}
   5ff1c:			; <UNDEFINED> instruction: 0xffffd8ee
   5ff20:	andeq	r3, r7, r4, asr r4
   5ff24:	push	{r4, lr}
   5ff28:	mov	r4, r0
   5ff2c:	bl	36238 <luaL_argerror@@Base+0x70>
   5ff30:	ldr	r3, [r4, #16]
   5ff34:	mov	r0, r4
   5ff38:	add	r3, r3, #16
   5ff3c:	str	r3, [r4, #20]
   5ff40:	mov	r1, #1
   5ff44:	bl	5fc18 <lua_setmetatable@@Base>
   5ff48:	ldr	r3, [r4, #20]
   5ff4c:	mvn	r2, #2
   5ff50:	mov	r0, #1
   5ff54:	str	r2, [r3, #-4]
   5ff58:	pop	{r4, pc}

0005ff5c <luaL_setmetatable@@Base>:
   5ff5c:	push	{r4, lr}
   5ff60:	mov	r2, r1
   5ff64:	mov	r4, r0
   5ff68:	ldr	r1, [pc, #16]	; 5ff80 <luaL_setmetatable@@Base+0x24>
   5ff6c:	bl	5db0c <lua_getfield@@Base>
   5ff70:	mov	r0, r4
   5ff74:	mvn	r1, #1
   5ff78:	pop	{r4, lr}
   5ff7c:	b	5fc18 <lua_setmetatable@@Base>
   5ff80:			; <UNDEFINED> instruction: 0xffffd8f0

0005ff84 <lua_setfenv@@Base>:
   5ff84:	push	{r4, lr}
   5ff88:	mov	r4, r0
   5ff8c:	bl	1b44c <_start@@Base+0x809c>
   5ff90:	ldr	r2, [r4, #20]
   5ff94:	ldr	r1, [r2, #-8]
   5ff98:	ldr	r3, [r0, #4]
   5ff9c:	cmn	r3, #9
   5ffa0:	beq	5ffc4 <lua_setfenv@@Base+0x40>
   5ffa4:	cmn	r3, #13
   5ffa8:	beq	5ffc4 <lua_setfenv@@Base+0x40>
   5ffac:	cmn	r3, #7
   5ffb0:	beq	60024 <lua_setfenv@@Base+0xa0>
   5ffb4:	sub	r2, r2, #8
   5ffb8:	str	r2, [r4, #20]
   5ffbc:	mov	r0, #0
   5ffc0:	pop	{r4, pc}
   5ffc4:	ldr	r3, [r0]
   5ffc8:	str	r1, [r3, #8]
   5ffcc:	ldrb	r3, [r1, #4]
   5ffd0:	tst	r3, #3
   5ffd4:	beq	60010 <lua_setfenv@@Base+0x8c>
   5ffd8:	ldr	r2, [r0]
   5ffdc:	ldrb	r3, [r2, #4]
   5ffe0:	tst	r3, #4
   5ffe4:	beq	60010 <lua_setfenv@@Base+0x8c>
   5ffe8:	ldr	r0, [r4, #8]
   5ffec:	ldrb	ip, [r0, #29]
   5fff0:	sub	ip, ip, #1
   5fff4:	cmp	ip, #1
   5fff8:	bls	60030 <lua_setfenv@@Base+0xac>
   5fffc:	ldrb	r1, [r0, #28]
   60000:	bic	r3, r3, #7
   60004:	and	r1, r1, #3
   60008:	orr	r3, r3, r1
   6000c:	strb	r3, [r2, #4]
   60010:	ldr	r3, [r4, #20]
   60014:	mov	r0, #1
   60018:	sub	r3, r3, #8
   6001c:	str	r3, [r4, #20]
   60020:	pop	{r4, pc}
   60024:	ldr	r3, [r0]
   60028:	str	r1, [r3, #36]	; 0x24
   6002c:	b	5ffcc <lua_setfenv@@Base+0x48>
   60030:	bl	17498 <_start@@Base+0x40e8>
   60034:	b	60010 <lua_setfenv@@Base+0x8c>
   60038:	push	{r4, lr}
   6003c:	mov	r4, r0
   60040:	mov	r1, #2
   60044:	bl	36a74 <luaL_typerror@@Base+0x708>
   60048:	ldr	r3, [r4, #16]
   6004c:	mov	r0, r4
   60050:	add	r3, r3, #16
   60054:	str	r3, [r4, #20]
   60058:	mov	r1, #1
   6005c:	bl	5ff84 <lua_setfenv@@Base>
   60060:	cmp	r0, #0
   60064:	beq	60070 <lua_setfenv@@Base+0xec>
   60068:	mov	r0, #1
   6006c:	pop	{r4, pc}
   60070:	mov	r0, r4
   60074:	ldr	r1, [pc]	; 6007c <lua_setfenv@@Base+0xf8>
   60078:	bl	35a48 <lua_error@@Base+0xa8>
   6007c:			; <UNDEFINED> instruction: 0x000004be

00060080 <lua_setupvalue@@Base>:
   60080:	push	{r4, r5, r6, lr}
   60084:	sub	sp, sp, #8
   60088:	mov	r5, r2
   6008c:	mov	r4, r0
   60090:	bl	1b44c <_start@@Base+0x809c>
   60094:	sub	r1, r5, #1
   60098:	add	r2, sp, #4
   6009c:	mov	r6, r0
   600a0:	bl	14c9c <_start@@Base+0x18ec>
   600a4:	subs	r5, r0, #0
   600a8:	beq	6011c <lua_setupvalue@@Base+0x9c>
   600ac:	ldr	r3, [r4, #20]
   600b0:	ldr	r2, [sp, #4]
   600b4:	sub	ip, r3, #8
   600b8:	ldrd	r0, [r3, #-8]
   600bc:	str	ip, [r4, #20]
   600c0:	strd	r0, [r2]
   600c4:	ldr	r2, [r3, #-4]
   600c8:	add	r2, r2, #4
   600cc:	cmn	r2, #10
   600d0:	bls	6011c <lua_setupvalue@@Base+0x9c>
   600d4:	ldr	r1, [r3, #-8]
   600d8:	ldrb	r3, [r1, #4]
   600dc:	tst	r3, #3
   600e0:	beq	6011c <lua_setupvalue@@Base+0x9c>
   600e4:	ldr	ip, [r6]
   600e8:	ldrb	r3, [ip, #4]
   600ec:	tst	r3, #4
   600f0:	beq	6011c <lua_setupvalue@@Base+0x9c>
   600f4:	ldr	r0, [r4, #8]
   600f8:	ldrb	r2, [r0, #29]
   600fc:	sub	r2, r2, #1
   60100:	cmp	r2, #1
   60104:	bls	60128 <lua_setupvalue@@Base+0xa8>
   60108:	ldrb	r2, [r0, #28]
   6010c:	bic	r3, r3, #7
   60110:	and	r2, r2, #3
   60114:	orr	r3, r2, r3
   60118:	strb	r3, [ip, #4]
   6011c:	mov	r0, r5
   60120:	add	sp, sp, #8
   60124:	pop	{r4, r5, r6, pc}
   60128:	bl	17498 <_start@@Base+0x40e8>
   6012c:	b	6011c <lua_setupvalue@@Base+0x9c>
   60130:	ldr	r3, [r0, #16]
   60134:	ldr	r2, [r0, #20]
   60138:	add	r3, r3, #16
   6013c:	cmp	r2, r3
   60140:	push	{r4, r5, r6, lr}
   60144:	bls	60194 <lua_setupvalue@@Base+0x114>
   60148:	mov	r1, #2
   6014c:	mov	r4, r0
   60150:	bl	3638c <luaL_typerror@@Base+0x20>
   60154:	mov	r1, #1
   60158:	mov	r5, r0
   6015c:	mov	r0, r4
   60160:	bl	36884 <luaL_typerror@@Base+0x518>
   60164:	mov	r1, #1
   60168:	mov	r2, r5
   6016c:	mov	r0, r4
   60170:	bl	60080 <lua_setupvalue@@Base>
   60174:	subs	r1, r0, #0
   60178:	beq	6018c <lua_setupvalue@@Base+0x10c>
   6017c:	mov	r0, r4
   60180:	bl	5b7a0 <lua_pushstring@@Base>
   60184:	mov	r0, #1
   60188:	pop	{r4, r5, r6, pc}
   6018c:	mov	r0, r1
   60190:	pop	{r4, r5, r6, pc}
   60194:	ldr	r2, [pc, #4]	; 601a0 <lua_setupvalue@@Base+0x120>
   60198:	mov	r1, #3
   6019c:	bl	361d0 <luaL_argerror@@Base+0x8>
   601a0:	andeq	r0, r0, r7, lsr #4

000601a4 <lua_call@@Base>:
   601a4:	ldr	r3, [r0, #20]
   601a8:	add	r2, r2, #1
   601ac:	sub	r1, r3, r1, lsl #3
   601b0:	b	6bc98 <luaL_openlibs@@Base+0x24d8>

000601b4 <lua_pcall@@Base>:
   601b4:	push	{r4, r5, r6, lr}
   601b8:	cmp	r3, #0
   601bc:	ldr	r4, [r0, #8]
   601c0:	ldr	ip, [r0, #20]
   601c4:	ldrb	r5, [r4, #113]	; 0x71
   601c8:	beq	601f0 <lua_pcall@@Base+0x3c>
   601cc:	addle	r3, ip, r3, lsl #3
   601d0:	ble	601e8 <lua_pcall@@Base+0x34>
   601d4:	sub	r3, r3, #-536870911	; 0xe0000001
   601d8:	ldr	lr, [r0, #16]
   601dc:	add	r3, lr, r3, lsl #3
   601e0:	cmp	r3, ip
   601e4:	addcs	r3, r4, #144	; 0x90
   601e8:	ldr	lr, [r0, #28]
   601ec:	sub	r3, r3, lr
   601f0:	add	r2, r2, #1
   601f4:	sub	r1, ip, r1, lsl #3
   601f8:	bl	6bc7c <luaL_openlibs@@Base+0x24bc>
   601fc:	cmp	r0, #0
   60200:	bicne	r5, r5, #15
   60204:	ldrbne	r3, [r4, #113]	; 0x71
   60208:	andne	r3, r3, #15
   6020c:	orrne	r3, r3, r5
   60210:	strbne	r3, [r4, #113]	; 0x71
   60214:	pop	{r4, r5, r6, pc}
   60218:	push	{r4, r5, r6, r7, r8, lr}
   6021c:	mov	r4, r1
   60220:	ldr	r1, [r1, #8]
   60224:	sub	sp, sp, #16
   60228:	ldr	lr, [pc, #216]	; 60308 <lua_pcall@@Base+0x154>
   6022c:	mvn	ip, #3
   60230:	mov	r6, r0
   60234:	mov	r7, r2
   60238:	ldr	r1, [r1, #120]	; 0x78
   6023c:	mov	r0, r4
   60240:	add	r2, sp, #8
   60244:	mov	r8, r3
   60248:	str	lr, [sp, #8]
   6024c:	str	ip, [sp, #12]
   60250:	bl	1f4f8 <lua_atpanic@@Base+0x328>
   60254:	ldr	r3, [r0, #4]
   60258:	cmn	r3, #9
   6025c:	beq	60268 <lua_pcall@@Base+0xb4>
   60260:	add	sp, sp, #16
   60264:	pop	{r4, r5, r6, r7, r8, pc}
   60268:	add	r1, sp, #16
   6026c:	ldr	r5, [r6, #20]
   60270:	strb	r8, [r1, #-9]!
   60274:	ldr	r2, [r0]
   60278:	str	r3, [r5, #4]
   6027c:	str	r2, [r5]
   60280:	add	r3, r5, #32
   60284:	mvn	r0, #6
   60288:	mvn	r2, #13
   6028c:	str	r0, [r5, #12]
   60290:	str	r2, [r5, #20]
   60294:	str	r4, [r5, #8]
   60298:	str	r7, [r5, #16]
   6029c:	mov	r2, #1
   602a0:	str	r3, [r6, #20]
   602a4:	mov	r0, r6
   602a8:	bl	20260 <luaL_where@@Base+0x15c>
   602ac:	mov	r3, #0
   602b0:	mvn	r2, #4
   602b4:	str	r2, [r5, #28]
   602b8:	mov	r1, #3
   602bc:	mov	r2, r3
   602c0:	str	r0, [r5, #24]
   602c4:	mov	r0, r6
   602c8:	bl	601b4 <lua_pcall@@Base>
   602cc:	ldr	r3, [r6, #8]
   602d0:	cmp	r0, #0
   602d4:	bne	602ec <lua_pcall@@Base+0x138>
   602d8:	ldr	r2, [r3, #552]	; 0x228
   602dc:	bic	r2, r2, #16
   602e0:	str	r2, [r3, #552]	; 0x228
   602e4:	add	sp, sp, #16
   602e8:	pop	{r4, r5, r6, r7, r8, pc}
   602ec:	ldr	r3, [r3, #208]	; 0xd0
   602f0:	cmp	r3, #0
   602f4:	beq	60300 <lua_pcall@@Base+0x14c>
   602f8:	mov	r0, r6
   602fc:	blx	r3
   60300:	mov	r0, #1
   60304:	bl	12e44 <exit@plt>
   60308:			; <UNDEFINED> instruction: 0x00070cb0

0006030c <lua_cpcall@@Base>:
   6030c:	push	{r4, r5, r6, lr}
   60310:	ldr	r4, [r0, #8]
   60314:	ldr	r3, [pc, #32]	; 6033c <lua_cpcall@@Base+0x30>
   60318:	ldrb	r5, [r4, #113]	; 0x71
   6031c:	bl	6bd28 <luaL_openlibs@@Base+0x2568>
   60320:	cmp	r0, #0
   60324:	bicne	r5, r5, #15
   60328:	ldrbne	r3, [r4, #113]	; 0x71
   6032c:	andne	r3, r3, #15
   60330:	orrne	r3, r3, r5
   60334:	strbne	r3, [r4, #113]	; 0x71
   60338:	pop	{r4, r5, r6, pc}
   6033c:	andeq	r3, r3, r4, asr #3

00060340 <luaL_callmeta@@Base>:
   60340:	push	{r4, r5, r6, r7, r8, lr}
   60344:	mov	r4, r0
   60348:	mov	r6, r1
   6034c:	bl	5e15c <luaL_getmetafield@@Base>
   60350:	cmp	r0, #0
   60354:	popeq	{r4, r5, r6, r7, r8, pc}
   60358:	ldr	r5, [r4, #20]
   6035c:	mov	r1, r6
   60360:	sub	r3, r5, #8
   60364:	str	r3, [r4, #20]
   60368:	mov	r0, r4
   6036c:	bl	1b44c <_start@@Base+0x809c>
   60370:	add	r3, r5, #8
   60374:	mov	r1, r5
   60378:	mov	r2, #2
   6037c:	ldrd	r6, [r0]
   60380:	mov	r0, r4
   60384:	strd	r6, [r5]
   60388:	str	r3, [r4, #20]
   6038c:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   60390:	mov	r0, #1
   60394:	pop	{r4, r5, r6, r7, r8, pc}

00060398 <lua_isyieldable@@Base>:
   60398:	ldr	r0, [r0, #40]	; 0x28
   6039c:	and	r0, r0, #1
   603a0:	bx	lr

000603a4 <lua_yield@@Base>:
   603a4:	push	{r4, r5, r6, lr}
   603a8:	ldr	lr, [r0, #40]	; 0x28
   603ac:	ldr	r5, [r0, #8]
   603b0:	tst	lr, #1
   603b4:	beq	6046c <lua_yield@@Base+0xc8>
   603b8:	ldrb	r4, [r5, #113]	; 0x71
   603bc:	mov	r2, r0
   603c0:	ldr	ip, [r0, #16]
   603c4:	tst	r4, #16
   603c8:	ldr	r3, [r0, #20]
   603cc:	bne	60420 <lua_yield@@Base+0x7c>
   603d0:	lsl	lr, r1, #3
   603d4:	sub	r3, r3, lr
   603d8:	cmp	r3, ip
   603dc:	bls	60408 <lua_yield@@Base+0x64>
   603e0:	subs	r1, r1, #1
   603e4:	bmi	60404 <lua_yield@@Base+0x60>
   603e8:	sub	r0, ip, #8
   603ec:	ldrd	r4, [r3], #8
   603f0:	sub	r1, r1, #1
   603f4:	cmn	r1, #1
   603f8:	strd	r4, [r0, #8]!
   603fc:	bne	603ec <lua_yield@@Base+0x48>
   60400:	add	ip, ip, lr
   60404:	str	ip, [r2, #20]
   60408:	mov	r1, #0
   6040c:	mov	r3, #1
   60410:	str	r1, [r2, #40]	; 0x28
   60414:	strb	r3, [r2, #7]
   60418:	mvn	r0, #0
   6041c:	pop	{r4, r5, r6, pc}
   60420:	bic	r0, lr, #3
   60424:	bic	r4, r4, #16
   60428:	add	lr, r3, #16
   6042c:	strb	r4, [r5, #113]	; 0x71
   60430:	sub	r1, lr, ip
   60434:	ldr	ip, [r0, #4]
   60438:	add	r1, r1, #2
   6043c:	str	ip, [r3]
   60440:	mov	r4, #0
   60444:	mov	ip, #1
   60448:	str	r1, [r3, #12]
   6044c:	str	r2, [r3, #8]
   60450:	str	r4, [r3, #4]
   60454:	mov	r1, ip
   60458:	str	lr, [r2, #16]
   6045c:	str	lr, [r2, #20]
   60460:	str	r4, [r2, #40]	; 0x28
   60464:	strb	ip, [r2, #7]
   60468:	bl	6bb20 <luaL_openlibs@@Base+0x2360>
   6046c:	ldr	r1, [pc]	; 60474 <lua_yield@@Base+0xd0>
   60470:	bl	20258 <luaL_where@@Base+0x154>
   60474:	andeq	r0, r0, lr, lsr r3

00060478 <lua_resume@@Base>:
   60478:	ldr	r3, [r0, #40]	; 0x28
   6047c:	push	{r4, r5, r6, lr}
   60480:	cmp	r3, #0
   60484:	mov	r4, r0
   60488:	beq	604c8 <lua_resume@@Base+0x50>
   6048c:	ldr	r5, [r4, #16]
   60490:	ldr	r1, [pc, #100]	; 604fc <lua_resume@@Base+0x84>
   60494:	str	r5, [r4, #20]
   60498:	mov	r0, r4
   6049c:	bl	20530 <luaL_where@@Base+0x42c>
   604a0:	ldr	r3, [r4, #20]
   604a4:	ldr	r2, [r4, #24]
   604a8:	add	r3, r3, #8
   604ac:	cmp	r3, r2
   604b0:	mvn	r2, #4
   604b4:	stm	r5, {r0, r2}
   604b8:	str	r3, [r4, #20]
   604bc:	bcs	604e8 <lua_resume@@Base+0x70>
   604c0:	mov	r0, #2
   604c4:	pop	{r4, r5, r6, pc}
   604c8:	ldrb	r2, [r0, #7]
   604cc:	cmp	r2, #1
   604d0:	bhi	6048c <lua_resume@@Base+0x14>
   604d4:	ldr	r2, [r0, #20]
   604d8:	pop	{r4, r5, r6, lr}
   604dc:	sub	r1, r2, r1, lsl #3
   604e0:	mov	r2, r3
   604e4:	b	6bbf0 <luaL_openlibs@@Base+0x2430>
   604e8:	mov	r0, r4
   604ec:	mov	r1, #1
   604f0:	bl	1fd08 <lua_getstack@@Base+0x50>
   604f4:	mov	r0, #2
   604f8:	pop	{r4, r5, r6, pc}
   604fc:	andeq	r0, r0, pc, lsr #10

00060500 <lua_gc@@Base>:
   60500:	push	{r4, r5, r6, r7, r8, lr}
   60504:	mov	r5, r0
   60508:	ldr	r4, [r0, #8]
   6050c:	cmp	r1, #9
   60510:	ldrls	pc, [pc, r1, lsl #2]
   60514:	b	6069c <lua_gc@@Base+0x19c>
   60518:	andeq	r0, r6, r4, asr r5
   6051c:	andeq	r0, r6, r4, ror #10
   60520:	andeq	r0, r6, ip, lsl #11
   60524:	andeq	r0, r6, r4, lsr #12
   60528:	andeq	r0, r6, r0, lsr r6
   6052c:	andeq	r0, r6, r0, asr #12
   60530:	andeq	r0, r6, r4, lsl #13
   60534:	muleq	r6, r0, r6
   60538:	muleq	r6, ip, r6
   6053c:	andeq	r0, r6, r0, asr #10
   60540:	ldr	r1, [r4, #24]
   60544:	ldr	r0, [pc, #352]	; 606ac <lua_gc@@Base+0x1ac>
   60548:	subs	r0, r1, r0
   6054c:	movne	r0, #1
   60550:	pop	{r4, r5, r6, r7, r8, pc}
   60554:	ldr	r3, [pc, #336]	; 606ac <lua_gc@@Base+0x1ac>
   60558:	mov	r0, r1
   6055c:	str	r3, [r4, #24]
   60560:	pop	{r4, r5, r6, r7, r8, pc}
   60564:	cmn	r2, #1
   60568:	ldr	r2, [r4, #20]
   6056c:	ldreq	r3, [pc, #316]	; 606b0 <lua_gc@@Base+0x1b0>
   60570:	ldreq	r1, [r4, #72]	; 0x48
   60574:	mov	r0, #0
   60578:	umulleq	r2, r3, r2, r3
   6057c:	lsreq	r2, r3, #5
   60580:	muleq	r2, r1, r2
   60584:	str	r2, [r4, #24]
   60588:	pop	{r4, r5, r6, r7, r8, pc}
   6058c:	ldrb	r3, [r4, #29]
   60590:	mvn	r2, #2
   60594:	ldr	r7, [r4, #76]	; 0x4c
   60598:	cmp	r3, #2
   6059c:	str	r2, [r4, #76]	; 0x4c
   605a0:	bhi	605d4 <lua_gc@@Base+0xd4>
   605a4:	mov	r3, #0
   605a8:	add	r1, r4, #36	; 0x24
   605ac:	mov	r2, #3
   605b0:	str	r1, [r4, #40]	; 0x28
   605b4:	str	r3, [r4, #44]	; 0x2c
   605b8:	str	r3, [r4, #48]	; 0x30
   605bc:	str	r3, [r4, #52]	; 0x34
   605c0:	str	r3, [r4, #32]
   605c4:	strb	r2, [r4, #29]
   605c8:	mov	r0, r5
   605cc:	bl	3ea58 <luaL_typerror@@Base+0x86ec>
   605d0:	ldrb	r3, [r4, #29]
   605d4:	sub	r3, r3, #3
   605d8:	cmp	r3, #1
   605dc:	bls	605c8 <lua_gc@@Base+0xc8>
   605e0:	mov	r3, #0
   605e4:	strb	r3, [r4, #29]
   605e8:	mov	r0, r5
   605ec:	bl	3ea58 <luaL_typerror@@Base+0x86ec>
   605f0:	ldrb	r1, [r4, #29]
   605f4:	cmp	r1, #0
   605f8:	bne	605e8 <lua_gc@@Base+0xe8>
   605fc:	ldr	r6, [r4, #64]	; 0x40
   60600:	ldr	r2, [pc, #168]	; 606b0 <lua_gc@@Base+0x1b0>
   60604:	str	r7, [r4, #76]	; 0x4c
   60608:	ldr	r3, [r4, #72]	; 0x48
   6060c:	umull	r6, r7, r6, r2
   60610:	mov	r0, r1
   60614:	lsr	r2, r7, #5
   60618:	mul	r3, r3, r2
   6061c:	str	r3, [r4, #24]
   60620:	pop	{r4, r5, r6, r7, r8, pc}
   60624:	ldr	r1, [r4, #20]
   60628:	lsr	r0, r1, #10
   6062c:	pop	{r4, r5, r6, r7, r8, pc}
   60630:	ldr	r1, [r4, #20]
   60634:	lsl	r0, r1, #22
   60638:	lsr	r0, r0, #22
   6063c:	pop	{r4, r5, r6, r7, r8, pc}
   60640:	ldr	r1, [r4, #20]
   60644:	lsl	r2, r2, #10
   60648:	cmp	r1, r2
   6064c:	subcs	r3, r1, r2
   60650:	movcc	r3, #0
   60654:	str	r3, [r4, #24]
   60658:	b	60670 <lua_gc@@Base+0x170>
   6065c:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   60660:	cmp	r0, #0
   60664:	bgt	606a4 <lua_gc@@Base+0x1a4>
   60668:	ldr	r1, [r4, #20]
   6066c:	ldr	r3, [r4, #24]
   60670:	cmp	r3, r1
   60674:	mov	r0, r5
   60678:	bls	6065c <lua_gc@@Base+0x15c>
   6067c:	mov	r0, #0
   60680:	pop	{r4, r5, r6, r7, r8, pc}
   60684:	ldr	r0, [r4, #72]	; 0x48
   60688:	str	r2, [r4, #72]	; 0x48
   6068c:	pop	{r4, r5, r6, r7, r8, pc}
   60690:	ldr	r0, [r4, #68]	; 0x44
   60694:	str	r2, [r4, #68]	; 0x44
   60698:	pop	{r4, r5, r6, r7, r8, pc}
   6069c:	mvn	r0, #0
   606a0:	pop	{r4, r5, r6, r7, r8, pc}
   606a4:	mov	r0, #1
   606a8:	pop	{r4, r5, r6, r7, r8, pc}
   606ac:	svcvc	0x00ffff00
   606b0:	mvnpl	r8, pc, lsl r5
   606b4:	push	{r4, r5, r6, lr}
   606b8:	mov	r2, #2
   606bc:	ldr	r3, [pc, #180]	; 60778 <lua_gc@@Base+0x278>
   606c0:	mov	r1, #1
   606c4:	mov	r4, r0
   606c8:	bl	57ed0 <lua_gethookcount@@Base+0x4850>
   606cc:	ldr	r3, [r4, #16]
   606d0:	ldr	r1, [r4, #20]
   606d4:	add	r2, r3, #8
   606d8:	cmp	r1, r2
   606dc:	mov	r5, r0
   606e0:	bls	606f0 <lua_gc@@Base+0x1f0>
   606e4:	ldr	r3, [r3, #12]
   606e8:	cmn	r3, #1
   606ec:	bne	60738 <lua_gc@@Base+0x238>
   606f0:	cmp	r5, #3
   606f4:	mov	r2, #0
   606f8:	beq	60750 <lua_gc@@Base+0x250>
   606fc:	mov	r1, r5
   60700:	mov	r0, r4
   60704:	bl	60500 <lua_gc@@Base>
   60708:	sub	r5, r5, #5
   6070c:	bics	r3, r5, #4
   60710:	ldr	r3, [r4, #20]
   60714:	mvneq	r2, #1
   60718:	mvnne	r2, #13
   6071c:	subeq	r0, r2, r0
   60720:	streq	r0, [r3, #4]
   60724:	stmne	r3, {r0, r2}
   60728:	add	r3, r3, #8
   6072c:	str	r3, [r4, #20]
   60730:	mov	r0, #1
   60734:	pop	{r4, r5, r6, pc}
   60738:	mov	r1, #2
   6073c:	mov	r0, r4
   60740:	bl	3638c <luaL_typerror@@Base+0x20>
   60744:	cmp	r5, #3
   60748:	mov	r2, r0
   6074c:	bne	606fc <lua_gc@@Base+0x1fc>
   60750:	ldr	r2, [r4, #8]
   60754:	vldr	d6, [pc, #20]	; 60770 <lua_gc@@Base+0x270>
   60758:	ldr	r3, [r4, #20]
   6075c:	vldr	s14, [r2, #20]
   60760:	vcvt.f64.u32	d7, s14
   60764:	vmul.f64	d7, d7, d6
   60768:	vstr	d7, [r3]
   6076c:	b	60728 <lua_gc@@Base+0x228>
   60770:	andeq	r0, r0, r0
   60774:	svccc	0x00500000
   60778:	andeq	r3, r7, ip, asr r4

0006077c <lua_getallocf@@Base>:
   6077c:	ldr	r3, [r0, #8]
   60780:	cmp	r1, #0
   60784:	ldrne	r2, [r3, #16]
   60788:	strne	r2, [r1]
   6078c:	ldr	r0, [r3, #12]
   60790:	bx	lr

00060794 <lua_setallocf@@Base>:
   60794:	ldr	r3, [r0, #8]
   60798:	str	r2, [r3, #16]
   6079c:	str	r1, [r3, #12]
   607a0:	bx	lr

000607a4 <luaJIT_profile_stop@@Base>:
   607a4:	push	{r4, r5, r6, r7, lr}
   607a8:	sub	sp, sp, #20
   607ac:	ldr	r5, [pc, #168]	; 6085c <luaJIT_profile_stop@@Base+0xb8>
   607b0:	ldr	r4, [r0, #8]
   607b4:	ldr	r3, [r5]
   607b8:	cmp	r4, r3
   607bc:	beq	607c8 <luaJIT_profile_stop@@Base+0x24>
   607c0:	add	sp, sp, #20
   607c4:	pop	{r4, r5, r6, r7, pc}
   607c8:	mov	r7, #0
   607cc:	mov	r6, r0
   607d0:	mov	r2, r7
   607d4:	mov	r1, sp
   607d8:	mov	r0, #2
   607dc:	str	r7, [sp]
   607e0:	str	r7, [sp, #8]
   607e4:	str	r7, [sp, #4]
   607e8:	str	r7, [sp, #12]
   607ec:	bl	12c58 <setitimer@plt>
   607f0:	mov	r2, r7
   607f4:	add	r1, r5, #40	; 0x28
   607f8:	mov	r0, #27
   607fc:	bl	12d54 <sigaction@plt>
   60800:	ldrb	r3, [r4, #113]	; 0x71
   60804:	mov	r0, r4
   60808:	and	r3, r3, #127	; 0x7f
   6080c:	strb	r3, [r4, #113]	; 0x71
   60810:	bl	17c5c <_start@@Base+0x48ac>
   60814:	str	r7, [r4, #2744]	; 0xab8
   60818:	mov	r0, r6
   6081c:	bl	508b8 <luaL_error@@Base+0xa7cc>
   60820:	ldr	r1, [r5, #20]
   60824:	ldr	r2, [r5, #16]
   60828:	ldr	r3, [r4, #20]
   6082c:	sub	r2, r2, r1
   60830:	sub	r3, r3, r2
   60834:	str	r3, [r4, #20]
   60838:	ldr	r6, [r4, #12]
   6083c:	mov	r3, r7
   60840:	ldr	r0, [r4, #16]
   60844:	blx	r6
   60848:	str	r7, [r5, #20]
   6084c:	str	r7, [r5, #16]
   60850:	str	r7, [r5]
   60854:	add	sp, sp, #20
   60858:	pop	{r4, r5, r6, r7, pc}
   6085c:	andeq	r4, r8, r4, asr #3

00060860 <lua_close@@Base>:
   60860:	push	{r4, r5, r6, r7, r8, lr}
   60864:	mov	r6, #0
   60868:	ldr	r5, [r0, #8]
   6086c:	ldr	r7, [pc, #172]	; 60920 <lua_close@@Base+0xc0>
   60870:	mov	r8, #10
   60874:	ldr	r4, [r5, #116]	; 0x74
   60878:	mov	r0, r4
   6087c:	bl	607a4 <luaJIT_profile_stop@@Base>
   60880:	ldr	r1, [r4, #28]
   60884:	mov	r0, r4
   60888:	str	r6, [r5, #220]	; 0xdc
   6088c:	bl	1f628 <lua_atpanic@@Base+0x458>
   60890:	mov	r1, #1
   60894:	mov	r0, r5
   60898:	bl	14ab0 <_start@@Base+0x1700>
   6089c:	ldr	r3, [r5, #484]	; 0x1e4
   608a0:	str	r6, [r5, #552]	; 0x228
   608a4:	bic	r3, r3, #1
   608a8:	str	r3, [r5, #484]	; 0x1e4
   608ac:	mov	r0, r5
   608b0:	bl	17c5c <_start@@Base+0x48ac>
   608b4:	ldrb	r3, [r5, #113]	; 0x71
   608b8:	mov	r2, #0
   608bc:	mov	r1, r2
   608c0:	orr	r3, r3, #16
   608c4:	strb	r3, [r5, #113]	; 0x71
   608c8:	ldr	r3, [r4, #28]
   608cc:	strb	r6, [r4, #7]
   608d0:	add	r3, r3, #8
   608d4:	str	r3, [r4, #20]
   608d8:	str	r3, [r4, #16]
   608dc:	str	r6, [r4, #40]	; 0x28
   608e0:	mov	r3, r7
   608e4:	mov	r0, r4
   608e8:	bl	6bd28 <luaL_openlibs@@Base+0x2568>
   608ec:	cmp	r0, #0
   608f0:	bne	608b4 <lua_close@@Base+0x54>
   608f4:	subs	r8, r8, #1
   608f8:	mov	r1, #1
   608fc:	mov	r0, r5
   60900:	beq	60914 <lua_close@@Base+0xb4>
   60904:	bl	14ab0 <_start@@Base+0x1700>
   60908:	ldr	r3, [r5, #56]	; 0x38
   6090c:	cmp	r3, #0
   60910:	bne	608b4 <lua_close@@Base+0x54>
   60914:	mov	r0, r4
   60918:	pop	{r4, r5, r6, r7, r8, lr}
   6091c:	b	1f7c0 <lua_atpanic@@Base+0x5f0>
   60920:			; <UNDEFINED> instruction: 0x0003e4b4
   60924:	ldr	r3, [r0, #16]
   60928:	ldr	r2, [r0, #20]
   6092c:	push	{r4, r5, r6, lr}
   60930:	cmp	r3, r2
   60934:	mov	r5, r0
   60938:	bcs	6096c <lua_close@@Base+0x10c>
   6093c:	ldr	r4, [r3, #4]
   60940:	add	r1, r4, #3
   60944:	cmp	r1, #1
   60948:	bls	60990 <lua_close@@Base+0x130>
   6094c:	cmn	r4, #1
   60950:	beq	6096c <lua_close@@Base+0x10c>
   60954:	mov	r1, #1
   60958:	bl	3638c <luaL_typerror@@Base+0x20>
   6095c:	ldr	r3, [r5, #16]
   60960:	ldr	r2, [r5, #20]
   60964:	mov	r4, r0
   60968:	b	60970 <lua_close@@Base+0x110>
   6096c:	mov	r4, #0
   60970:	add	r1, r3, #8
   60974:	cmp	r2, r1
   60978:	bls	60988 <lua_close@@Base+0x128>
   6097c:	ldr	r3, [r3, #12]
   60980:	cmn	r3, #3
   60984:	bls	609a0 <lua_close@@Base+0x140>
   60988:	mov	r0, r4
   6098c:	bl	12e44 <exit@plt>
   60990:	cmn	r4, #2
   60994:	movne	r4, #0
   60998:	moveq	r4, #1
   6099c:	b	60970 <lua_close@@Base+0x110>
   609a0:	mov	r0, r5
   609a4:	bl	60860 <lua_close@@Base>
   609a8:	b	60988 <lua_close@@Base+0x128>

000609ac <luaJIT_profile_start@@Base>:
   609ac:	push	{r4, r5, r6, r7, r8, r9, lr}
   609b0:	mov	r8, r3
   609b4:	ldrb	r3, [r1]
   609b8:	sub	sp, sp, #164	; 0xa4
   609bc:	mov	r9, r1
   609c0:	mov	r6, r0
   609c4:	mov	r7, r2
   609c8:	mov	r4, #10
   609cc:	cmp	r3, #0
   609d0:	beq	60a00 <luaJIT_profile_start@@Base+0x54>
   609d4:	cmp	r3, #105	; 0x69
   609d8:	add	r5, r9, #1
   609dc:	beq	60ae4 <luaJIT_profile_start@@Base+0x138>
   609e0:	cmp	r3, #108	; 0x6c
   609e4:	beq	60ad0 <luaJIT_profile_start@@Base+0x124>
   609e8:	cmp	r3, #102	; 0x66
   609ec:	beq	60ad0 <luaJIT_profile_start@@Base+0x124>
   609f0:	ldrb	r3, [r9, #1]
   609f4:	mov	r9, r5
   609f8:	cmp	r3, #0
   609fc:	bne	609d4 <luaJIT_profile_start@@Base+0x28>
   60a00:	ldr	r5, [pc, #300]	; 60b34 <luaJIT_profile_start@@Base+0x188>
   60a04:	ldr	r3, [r5]
   60a08:	cmp	r3, #0
   60a0c:	beq	60a2c <luaJIT_profile_start@@Base+0x80>
   60a10:	mov	r0, r6
   60a14:	bl	607a4 <luaJIT_profile_stop@@Base>
   60a18:	ldr	r3, [r5]
   60a1c:	cmp	r3, #0
   60a20:	beq	60a2c <luaJIT_profile_start@@Base+0x80>
   60a24:	add	sp, sp, #164	; 0xa4
   60a28:	pop	{r4, r5, r6, r7, r8, r9, pc}
   60a2c:	ldr	r2, [pc, #260]	; 60b38 <luaJIT_profile_start@@Base+0x18c>
   60a30:	ldr	r1, [r6, #8]
   60a34:	str	r4, [r5, #28]
   60a38:	umull	r2, r3, r4, r2
   60a3c:	str	r1, [r5]
   60a40:	mov	ip, #0
   60a44:	lsr	r3, r3, #6
   60a48:	str	r3, [sp, #4]
   60a4c:	rsb	r2, r3, r3, lsl #5
   60a50:	str	r3, [sp, #12]
   60a54:	add	r3, r3, r2, lsl #2
   60a58:	add	r1, sp, #4
   60a5c:	sub	r4, r4, r3, lsl #3
   60a60:	mov	r2, ip
   60a64:	rsb	r3, r4, r4, lsl #5
   60a68:	str	ip, [r5, #12]
   60a6c:	add	r4, r4, r3, lsl #2
   60a70:	str	ip, [r5, #16]
   60a74:	str	ip, [r5, #20]
   60a78:	lsl	r4, r4, #3
   60a7c:	str	r6, [r5, #24]
   60a80:	mov	r0, #2
   60a84:	str	ip, [r5, #32]
   60a88:	str	r4, [sp, #8]
   60a8c:	str	r4, [sp, #16]
   60a90:	str	r7, [r5, #4]
   60a94:	add	r4, sp, #160	; 0xa0
   60a98:	str	r8, [r5, #8]
   60a9c:	bl	12c58 <setitimer@plt>
   60aa0:	ldr	r2, [pc, #148]	; 60b3c <luaJIT_profile_start@@Base+0x190>
   60aa4:	mov	r3, #268435456	; 0x10000000
   60aa8:	add	r0, sp, #24
   60aac:	str	r2, [r4, #-140]!	; 0xffffff74
   60ab0:	str	r3, [sp, #152]	; 0x98
   60ab4:	bl	12f88 <sigemptyset@plt>
   60ab8:	mov	r1, r4
   60abc:	ldr	r2, [pc, #124]	; 60b40 <luaJIT_profile_start@@Base+0x194>
   60ac0:	mov	r0, #27
   60ac4:	bl	12d54 <sigaction@plt>
   60ac8:	add	sp, sp, #164	; 0xa4
   60acc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   60ad0:	ldr	r2, [r6, #8]
   60ad4:	mov	r0, r6
   60ad8:	str	r3, [r2, #2744]	; 0xab8
   60adc:	bl	508b8 <luaL_error@@Base+0xa7cc>
   60ae0:	b	609f0 <luaJIT_profile_start@@Base+0x44>
   60ae4:	ldrb	r3, [r9, #1]
   60ae8:	sub	r2, r3, #48	; 0x30
   60aec:	uxtb	r1, r2
   60af0:	cmp	r1, #9
   60af4:	bhi	60b28 <luaJIT_profile_start@@Base+0x17c>
   60af8:	mov	r4, #0
   60afc:	ldrb	r3, [r5, #1]!
   60b00:	add	r4, r4, r4, lsl #2
   60b04:	add	r4, r2, r4, lsl #1
   60b08:	sub	r2, r3, #48	; 0x30
   60b0c:	uxtb	r1, r2
   60b10:	cmp	r1, #9
   60b14:	bls	60afc <luaJIT_profile_start@@Base+0x150>
   60b18:	cmp	r4, #0
   60b1c:	mov	r9, r5
   60b20:	moveq	r4, #1
   60b24:	b	609cc <luaJIT_profile_start@@Base+0x20>
   60b28:	mov	r9, r5
   60b2c:	mov	r4, #1
   60b30:	b	609cc <luaJIT_profile_start@@Base+0x20>
   60b34:	andeq	r4, r8, r4, asr #3
   60b38:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   60b3c:	andeq	pc, r1, r8, lsr r0	; <UNPREDICTABLE>
   60b40:	andeq	r4, r8, ip, ror #3
   60b44:	ldr	r1, [r0, #8]
   60b48:	ldr	r3, [r0, #16]
   60b4c:	ldr	r2, [r0, #20]
   60b50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   60b54:	cmp	r3, r2
   60b58:	sub	sp, sp, #8
   60b5c:	mov	r4, r0
   60b60:	ldr	r6, [r1, #120]	; 0x78
   60b64:	bcs	60b74 <luaJIT_profile_start@@Base+0x1c8>
   60b68:	ldr	r3, [r3, #4]
   60b6c:	cmn	r3, #1
   60b70:	bne	60c18 <luaJIT_profile_start@@Base+0x26c>
   60b74:	mov	r5, #0
   60b78:	mov	r1, #2
   60b7c:	mov	r0, r4
   60b80:	bl	36884 <luaL_typerror@@Base+0x518>
   60b84:	ldr	r9, [pc, #184]	; 60c44 <luaJIT_profile_start@@Base+0x298>
   60b88:	mvn	r8, #3
   60b8c:	mov	sl, r0
   60b90:	mov	r0, r4
   60b94:	bl	5cfa0 <lua_newthread@@Base>
   60b98:	add	r3, r9, #1
   60b9c:	mov	r2, sp
   60ba0:	mov	r1, r6
   60ba4:	stm	sp, {r3, r8}
   60ba8:	mov	r7, r0
   60bac:	mov	r0, r4
   60bb0:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   60bb4:	mvn	r3, #6
   60bb8:	mov	r2, sp
   60bbc:	mov	r1, r6
   60bc0:	str	r7, [r0]
   60bc4:	str	r3, [r0, #4]
   60bc8:	mov	r0, r4
   60bcc:	str	r9, [sp]
   60bd0:	str	r8, [sp, #4]
   60bd4:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   60bd8:	mvn	r3, #8
   60bdc:	str	sl, [r0]
   60be0:	str	r3, [r0, #4]
   60be4:	ldrb	r3, [r6, #4]
   60be8:	tst	r3, #4
   60bec:	bne	60c28 <luaJIT_profile_start@@Base+0x27c>
   60bf0:	cmp	r5, #0
   60bf4:	mov	r0, r4
   60bf8:	addne	r1, r5, #16
   60bfc:	ldreq	r1, [pc, #68]	; 60c48 <luaJIT_profile_start@@Base+0x29c>
   60c00:	mov	r3, r7
   60c04:	ldr	r2, [pc, #64]	; 60c4c <luaJIT_profile_start@@Base+0x2a0>
   60c08:	bl	609ac <luaJIT_profile_start@@Base>
   60c0c:	mov	r0, #0
   60c10:	add	sp, sp, #8
   60c14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   60c18:	mov	r1, #1
   60c1c:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   60c20:	mov	r5, r0
   60c24:	b	60b78 <luaJIT_profile_start@@Base+0x1cc>
   60c28:	ldr	r2, [r4, #8]
   60c2c:	bic	r3, r3, #4
   60c30:	strb	r3, [r6, #4]
   60c34:	ldr	r3, [r2, #48]	; 0x30
   60c38:	str	r3, [r6, #12]
   60c3c:	str	r6, [r2, #48]	; 0x30
   60c40:	b	60bf0 <luaJIT_profile_start@@Base+0x244>
   60c44:			; <UNDEFINED> instruction: 0x00070cb0
   60c48:	andeq	lr, r6, r0, ror #24
   60c4c:	andeq	r0, r6, r8, lsl r2
   60c50:	push	{r4, r5, r6, r7, r8, lr}
   60c54:	mov	r5, r0
   60c58:	sub	sp, sp, #8
   60c5c:	bl	607a4 <luaJIT_profile_stop@@Base>
   60c60:	ldr	r3, [r5, #8]
   60c64:	ldr	r8, [pc, #124]	; 60ce8 <luaJIT_profile_start@@Base+0x33c>
   60c68:	mvn	r7, #3
   60c6c:	ldr	r4, [r3, #120]	; 0x78
   60c70:	add	r3, r8, #1
   60c74:	mov	r1, r4
   60c78:	mov	r2, sp
   60c7c:	mov	r0, r5
   60c80:	stm	sp, {r3, r7}
   60c84:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   60c88:	mvn	r6, #0
   60c8c:	mov	r2, sp
   60c90:	mov	r1, r4
   60c94:	str	r8, [sp]
   60c98:	str	r6, [r0, #4]
   60c9c:	mov	r0, r5
   60ca0:	str	r7, [sp, #4]
   60ca4:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   60ca8:	str	r6, [r0, #4]
   60cac:	ldrb	r3, [r4, #4]
   60cb0:	tst	r3, #4
   60cb4:	bne	60cc4 <luaJIT_profile_start@@Base+0x318>
   60cb8:	mov	r0, #0
   60cbc:	add	sp, sp, #8
   60cc0:	pop	{r4, r5, r6, r7, r8, pc}
   60cc4:	ldr	r2, [r5, #8]
   60cc8:	bic	r3, r3, #4
   60ccc:	strb	r3, [r4, #4]
   60cd0:	ldr	r3, [r2, #48]	; 0x30
   60cd4:	mov	r0, #0
   60cd8:	str	r3, [r4, #12]
   60cdc:	str	r4, [r2, #48]	; 0x30
   60ce0:	add	sp, sp, #8
   60ce4:	pop	{r4, r5, r6, r7, r8, pc}
   60ce8:			; <UNDEFINED> instruction: 0x00070cb0

00060cec <luaJIT_profile_dumpstack@@Base>:
   60cec:	push	{r4, r5, r6, lr}
   60cf0:	mov	r5, r3
   60cf4:	ldr	r4, [pc, #36]	; 60d20 <luaJIT_profile_dumpstack@@Base+0x34>
   60cf8:	ldr	r3, [r4, #20]
   60cfc:	str	r0, [r4, #24]
   60d00:	str	r3, [r4, #12]
   60d04:	bl	32644 <luaL_where@@Base+0x12540>
   60d08:	ldr	r2, [r4, #12]
   60d0c:	ldr	r3, [r4, #20]
   60d10:	sub	r2, r2, r3
   60d14:	str	r2, [r5]
   60d18:	ldr	r0, [r4, #20]
   60d1c:	pop	{r4, r5, r6, pc}
   60d20:	andeq	r4, r8, r4, asr #3

00060d24 <lua_loadx@@Base>:
   60d24:	push	{r4, r5, r6, r7, r8, lr}
   60d28:	sub	sp, sp, #112	; 0x70
   60d2c:	mov	r5, #0
   60d30:	cmp	r3, r5
   60d34:	ldr	ip, [pc, #232]	; 60e24 <lua_loadx@@Base+0x100>
   60d38:	ldr	lr, [sp, #136]	; 0x88
   60d3c:	movne	ip, r3
   60d40:	str	r1, [sp, #60]	; 0x3c
   60d44:	str	r2, [sp, #64]	; 0x40
   60d48:	mov	r1, r5
   60d4c:	ldr	r3, [pc, #212]	; 60e28 <lua_loadx@@Base+0x104>
   60d50:	mov	r2, sp
   60d54:	str	ip, [sp, #80]	; 0x50
   60d58:	str	lr, [sp, #84]	; 0x54
   60d5c:	mov	r6, r0
   60d60:	str	r5, [sp, #44]	; 0x2c
   60d64:	str	r5, [sp, #48]	; 0x30
   60d68:	str	r5, [sp, #52]	; 0x34
   60d6c:	str	r0, [sp, #56]	; 0x38
   60d70:	bl	6bd28 <luaL_openlibs@@Base+0x2568>
   60d74:	ldr	r4, [r6, #8]
   60d78:	ldr	r2, [sp, #104]	; 0x68
   60d7c:	ldr	r1, [sp, #100]	; 0x64
   60d80:	ldr	r3, [r4, #20]
   60d84:	lsl	r2, r2, #3
   60d88:	sub	r3, r3, r2
   60d8c:	str	r3, [r4, #20]
   60d90:	ldr	r8, [r4, #12]
   60d94:	mov	r3, r5
   60d98:	mov	r7, r0
   60d9c:	ldr	r0, [r4, #16]
   60da0:	blx	r8
   60da4:	ldr	r2, [sp, #92]	; 0x5c
   60da8:	ldr	r3, [r4, #20]
   60dac:	ldr	r1, [sp, #88]	; 0x58
   60db0:	lsl	r2, r2, #4
   60db4:	sub	r3, r3, r2
   60db8:	str	r3, [r4, #20]
   60dbc:	ldr	r8, [r4, #12]
   60dc0:	mov	r3, r5
   60dc4:	ldr	r0, [r4, #16]
   60dc8:	blx	r8
   60dcc:	ldr	r1, [sp, #52]	; 0x34
   60dd0:	ldr	r2, [sp, #48]	; 0x30
   60dd4:	ldr	r0, [r4, #20]
   60dd8:	sub	r2, r2, r1
   60ddc:	sub	r0, r0, r2
   60de0:	mov	r3, r5
   60de4:	str	r0, [r4, #20]
   60de8:	ldr	r5, [r4, #12]
   60dec:	ldr	r0, [r4, #16]
   60df0:	blx	r5
   60df4:	ldr	r3, [r6, #8]
   60df8:	ldrd	r2, [r3, #20]
   60dfc:	cmp	r2, r3
   60e00:	bcs	60e10 <lua_loadx@@Base+0xec>
   60e04:	mov	r0, r7
   60e08:	add	sp, sp, #112	; 0x70
   60e0c:	pop	{r4, r5, r6, r7, r8, pc}
   60e10:	mov	r0, r6
   60e14:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   60e18:	mov	r0, r7
   60e1c:	add	sp, sp, #112	; 0x70
   60e20:	pop	{r4, r5, r6, r7, r8, pc}
   60e24:	strdeq	r2, [r7], -r0
   60e28:	andeq	r6, r6, ip, asr #4
   60e2c:	ldrd	r2, [r0, #16]
   60e30:	push	{r4, r5, r6, r7, lr}
   60e34:	mov	r4, r0
   60e38:	add	r1, r2, #8
   60e3c:	cmp	r3, r1
   60e40:	sub	sp, sp, #20
   60e44:	bls	60e54 <lua_loadx@@Base+0x130>
   60e48:	ldr	r1, [r2, #12]
   60e4c:	cmn	r1, #1
   60e50:	bne	60f00 <lua_loadx@@Base+0x1dc>
   60e54:	mov	r6, #0
   60e58:	add	r1, r2, #16
   60e5c:	cmp	r3, r1
   60e60:	bls	60e70 <lua_loadx@@Base+0x14c>
   60e64:	ldr	r1, [r2, #20]
   60e68:	cmn	r1, #1
   60e6c:	bne	60ee8 <lua_loadx@@Base+0x1c4>
   60e70:	mov	r5, #0
   60e74:	cmp	r2, r3
   60e78:	mov	r1, #1
   60e7c:	mov	r0, r4
   60e80:	bcs	60e94 <lua_loadx@@Base+0x170>
   60e84:	ldr	r3, [r2, #4]
   60e88:	cmn	r3, #5
   60e8c:	cmnne	r3, #14
   60e90:	bls	60f14 <lua_loadx@@Base+0x1f0>
   60e94:	bl	36884 <luaL_typerror@@Base+0x518>
   60e98:	mov	r1, #5
   60e9c:	mov	r0, r4
   60ea0:	bl	59f30 <lua_settop@@Base>
   60ea4:	cmp	r6, #0
   60ea8:	addne	r3, r6, #16
   60eac:	ldreq	r3, [pc, #204]	; 60f80 <lua_loadx@@Base+0x25c>
   60eb0:	cmp	r5, #0
   60eb4:	addne	r5, r5, #16
   60eb8:	str	r5, [sp]
   60ebc:	mov	r2, #0
   60ec0:	ldr	r1, [pc, #188]	; 60f84 <lua_loadx@@Base+0x260>
   60ec4:	mov	r0, r4
   60ec8:	bl	60d24 <lua_loadx@@Base>
   60ecc:	cmp	r0, #0
   60ed0:	bne	60f68 <lua_loadx@@Base+0x244>
   60ed4:	mov	r0, r4
   60ed8:	mov	r1, #4
   60edc:	bl	1d2f8 <_start@@Base+0x9f48>
   60ee0:	add	sp, sp, #20
   60ee4:	pop	{r4, r5, r6, r7, pc}
   60ee8:	mov	r1, #3
   60eec:	mov	r0, r4
   60ef0:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   60ef4:	ldrd	r2, [r4, #16]
   60ef8:	mov	r5, r0
   60efc:	b	60e74 <lua_loadx@@Base+0x150>
   60f00:	mov	r1, #2
   60f04:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   60f08:	ldrd	r2, [r4, #16]
   60f0c:	mov	r6, r0
   60f10:	b	60e58 <lua_loadx@@Base+0x134>
   60f14:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   60f18:	mov	r1, #4
   60f1c:	mov	r7, r0
   60f20:	mov	r0, r4
   60f24:	bl	59f30 <lua_settop@@Base>
   60f28:	cmp	r6, #0
   60f2c:	add	r0, r7, #16
   60f30:	moveq	r3, r0
   60f34:	addne	r3, r6, #16
   60f38:	cmp	r5, #0
   60f3c:	ldr	ip, [r7, #12]
   60f40:	addne	r5, r5, #16
   60f44:	str	r0, [sp, #8]
   60f48:	str	r5, [sp]
   60f4c:	add	r2, sp, #8
   60f50:	ldr	r1, [pc, #48]	; 60f88 <lua_loadx@@Base+0x264>
   60f54:	mov	r0, r4
   60f58:	str	ip, [sp, #12]
   60f5c:	bl	60d24 <lua_loadx@@Base>
   60f60:	cmp	r0, #0
   60f64:	beq	60ed4 <lua_loadx@@Base+0x1b0>
   60f68:	ldr	r3, [r4, #20]
   60f6c:	mvn	r2, #0
   60f70:	mov	r0, #2
   60f74:	str	r2, [r3, #-12]
   60f78:	add	sp, sp, #20
   60f7c:	pop	{r4, r5, r6, r7, pc}
   60f80:	andeq	r3, r7, r0, lsr #9
   60f84:	andeq	sl, r5, r0, ror ip
   60f88:	andeq	r5, r1, ip, lsr #7
   60f8c:	b	60e2c <lua_loadx@@Base+0x108>
   60f90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   60f94:	sub	sp, sp, #276	; 0x114
   60f98:	ldr	r6, [pc, #228]	; 61084 <lua_loadx@@Base+0x360>
   60f9c:	ldr	r9, [pc, #228]	; 61088 <lua_loadx@@Base+0x364>
   60fa0:	ldr	r8, [pc, #228]	; 6108c <lua_loadx@@Base+0x368>
   60fa4:	ldr	r7, [pc, #228]	; 61090 <lua_loadx@@Base+0x36c>
   60fa8:	ldr	fp, [pc, #228]	; 61094 <lua_loadx@@Base+0x370>
   60fac:	ldr	sl, [pc, #228]	; 61098 <lua_loadx@@Base+0x374>
   60fb0:	mov	r5, r0
   60fb4:	add	r4, sp, #20
   60fb8:	b	61044 <lua_loadx@@Base+0x320>
   60fbc:	bl	12c64 <strcmp@plt>
   60fc0:	cmp	r0, #0
   60fc4:	mov	r0, r4
   60fc8:	beq	61078 <lua_loadx@@Base+0x354>
   60fcc:	bl	12e80 <strlen@plt>
   60fd0:	mov	r3, #0
   60fd4:	str	r3, [sp]
   60fd8:	add	r2, sp, #12
   60fdc:	mov	r3, fp
   60fe0:	mov	r1, sl
   60fe4:	str	r4, [sp, #12]
   60fe8:	str	r0, [sp, #16]
   60fec:	mov	r0, r5
   60ff0:	bl	60d24 <lua_loadx@@Base>
   60ff4:	subs	r3, r0, #0
   60ff8:	mov	r2, r3
   60ffc:	mov	r1, r3
   61000:	mov	r0, r5
   61004:	bne	61014 <lua_loadx@@Base+0x2f0>
   61008:	bl	601b4 <lua_pcall@@Base>
   6100c:	cmp	r0, #0
   61010:	beq	61038 <lua_loadx@@Base+0x314>
   61014:	mov	r2, #0
   61018:	mvn	r1, #0
   6101c:	mov	r0, r5
   61020:	bl	5ab5c <lua_tolstring@@Base>
   61024:	ldr	r1, [r6]
   61028:	bl	1303c <fputs@plt>
   6102c:	ldr	r1, [r6]
   61030:	mov	r0, #10
   61034:	bl	12fac <fputc@plt>
   61038:	mov	r1, #0
   6103c:	mov	r0, r5
   61040:	bl	59f30 <lua_settop@@Base>
   61044:	ldr	r3, [r6]
   61048:	mov	r2, #11
   6104c:	mov	r1, #1
   61050:	mov	r0, r8
   61054:	bl	12d6c <fwrite@plt>
   61058:	mov	r1, #250	; 0xfa
   6105c:	ldr	r2, [r9]
   61060:	mov	r0, r4
   61064:	bl	12ca0 <fgets@plt>
   61068:	mov	r1, r7
   6106c:	cmp	r0, #0
   61070:	mov	r0, r4
   61074:	bne	60fbc <lua_loadx@@Base+0x298>
   61078:	mov	r0, #0
   6107c:	add	sp, sp, #276	; 0x114
   61080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   61084:	andeq	r4, r8, r0, lsr #3
   61088:	andeq	r4, r8, r8, lsr #3
   6108c:	andeq	r3, r7, r8, lsr #9
   61090:			; <UNDEFINED> instruction: 0x000734b4
   61094:			; <UNDEFINED> instruction: 0x000734bc
   61098:	andeq	r5, r1, ip, lsr #7

0006109c <lua_load@@Base>:
   6109c:	push	{lr}		; (str lr, [sp, #-4]!)
   610a0:	sub	sp, sp, #12
   610a4:	mov	ip, #0
   610a8:	str	ip, [sp]
   610ac:	bl	60d24 <lua_loadx@@Base>
   610b0:	add	sp, sp, #12
   610b4:	pop	{pc}		; (ldr pc, [sp], #4)

000610b8 <luaL_loadfilex@@Base>:
   610b8:	push	{r4, r5, r6, r7, lr}
   610bc:	subs	r6, r1, #0
   610c0:	sub	sp, sp, #8192	; 0x2000
   610c4:	sub	sp, sp, #20
   610c8:	mov	r5, r2
   610cc:	mov	r4, r0
   610d0:	beq	61174 <luaL_loadfilex@@Base+0xbc>
   610d4:	ldr	r1, [pc, #352]	; 6123c <luaL_loadfilex@@Base+0x184>
   610d8:	mov	r0, r6
   610dc:	bl	12fdc <fopen64@plt>
   610e0:	cmp	r0, #0
   610e4:	str	r0, [sp, #12]
   610e8:	beq	61214 <luaL_loadfilex@@Base+0x15c>
   610ec:	mov	r2, r6
   610f0:	ldr	r1, [pc, #328]	; 61240 <luaL_loadfilex@@Base+0x188>
   610f4:	mov	r0, r4
   610f8:	bl	5bc58 <lua_pushfstring@@Base>
   610fc:	str	r5, [sp]
   61100:	add	r2, sp, #12
   61104:	ldr	r1, [pc, #312]	; 61244 <luaL_loadfilex@@Base+0x18c>
   61108:	mov	r3, r0
   6110c:	mov	r6, r0
   61110:	mov	r0, r4
   61114:	bl	60d24 <lua_loadx@@Base>
   61118:	mov	r5, r0
   6111c:	ldr	r0, [sp, #12]
   61120:	bl	12cac <ferror@plt>
   61124:	cmp	r0, #0
   61128:	beq	611e8 <luaL_loadfilex@@Base+0x130>
   6112c:	ldr	r3, [r4, #20]
   61130:	mov	r5, #6
   61134:	sub	r3, r3, #16
   61138:	str	r3, [r4, #20]
   6113c:	bl	12eb0 <__errno_location@plt>
   61140:	ldr	r0, [r0]
   61144:	bl	12de4 <strerror@plt>
   61148:	add	r2, r6, #1
   6114c:	ldr	r1, [pc, #244]	; 61248 <luaL_loadfilex@@Base+0x190>
   61150:	mov	r3, r0
   61154:	mov	r0, r4
   61158:	bl	5bc58 <lua_pushfstring@@Base>
   6115c:	ldr	r0, [sp, #12]
   61160:	bl	12f4c <fclose@plt>
   61164:	mov	r0, r5
   61168:	add	sp, sp, #8192	; 0x2000
   6116c:	add	sp, sp, #20
   61170:	pop	{r4, r5, r6, r7, pc}
   61174:	ldr	r3, [pc, #208]	; 6124c <luaL_loadfilex@@Base+0x194>
   61178:	add	r2, sp, #16
   6117c:	ldr	r1, [pc, #192]	; 61244 <luaL_loadfilex@@Base+0x18c>
   61180:	ldr	r3, [r3]
   61184:	str	r5, [sp]
   61188:	str	r3, [r2, #-4]!
   6118c:	ldr	r3, [pc, #188]	; 61250 <luaL_loadfilex@@Base+0x198>
   61190:	bl	60d24 <lua_loadx@@Base>
   61194:	mov	r5, r0
   61198:	ldr	r0, [sp, #12]
   6119c:	bl	12cac <ferror@plt>
   611a0:	cmp	r0, #0
   611a4:	beq	61164 <luaL_loadfilex@@Base+0xac>
   611a8:	ldr	r3, [r4, #20]
   611ac:	mov	r5, #6
   611b0:	sub	r3, r3, #8
   611b4:	str	r3, [r4, #20]
   611b8:	bl	12eb0 <__errno_location@plt>
   611bc:	ldr	r0, [r0]
   611c0:	bl	12de4 <strerror@plt>
   611c4:	ldr	r2, [pc, #136]	; 61254 <luaL_loadfilex@@Base+0x19c>
   611c8:	ldr	r1, [pc, #120]	; 61248 <luaL_loadfilex@@Base+0x190>
   611cc:	mov	r3, r0
   611d0:	mov	r0, r4
   611d4:	bl	5bc58 <lua_pushfstring@@Base>
   611d8:	mov	r0, r5
   611dc:	add	sp, sp, #8192	; 0x2000
   611e0:	add	sp, sp, #20
   611e4:	pop	{r4, r5, r6, r7, pc}
   611e8:	ldr	r3, [r4, #20]
   611ec:	ldr	r0, [sp, #12]
   611f0:	sub	r2, r3, #8
   611f4:	ldrd	r6, [r3, #-8]
   611f8:	str	r2, [r4, #20]
   611fc:	strd	r6, [r3, #-16]
   61200:	bl	12f4c <fclose@plt>
   61204:	mov	r0, r5
   61208:	add	sp, sp, #8192	; 0x2000
   6120c:	add	sp, sp, #20
   61210:	pop	{r4, r5, r6, r7, pc}
   61214:	bl	12eb0 <__errno_location@plt>
   61218:	mov	r5, #6
   6121c:	ldr	r0, [r0]
   61220:	bl	12de4 <strerror@plt>
   61224:	mov	r2, r6
   61228:	ldr	r1, [pc, #40]	; 61258 <luaL_loadfilex@@Base+0x1a0>
   6122c:	mov	r3, r0
   61230:	mov	r0, r4
   61234:	bl	5bc58 <lua_pushfstring@@Base>
   61238:	b	61164 <luaL_loadfilex@@Base+0xac>
   6123c:	ldrdeq	r3, [r7], -r0
   61240:	andeq	r3, r7, r8, ror #9
   61244:	andeq	sl, r1, r4, lsl lr
   61248:	andeq	r3, r7, ip, ror #9
   6124c:	andeq	r4, r8, r8, lsr #3
   61250:	muleq	r6, ip, r9
   61254:	muleq	r6, sp, r9
   61258:	ldrdeq	r3, [r7], -r4
   6125c:	ldr	r3, [r0, #16]
   61260:	ldr	r2, [r0, #20]
   61264:	push	{r4, r5, r6, lr}
   61268:	cmp	r3, r2
   6126c:	mov	r4, r0
   61270:	bcs	61280 <luaL_loadfilex@@Base+0x1c8>
   61274:	ldr	r1, [r3, #4]
   61278:	cmn	r1, #1
   6127c:	bne	612cc <luaL_loadfilex@@Base+0x214>
   61280:	add	r1, r3, #8
   61284:	cmp	r2, r1
   61288:	bls	61298 <luaL_loadfilex@@Base+0x1e0>
   6128c:	ldr	r3, [r3, #12]
   61290:	cmn	r3, #1
   61294:	bne	61334 <luaL_loadfilex@@Base+0x27c>
   61298:	mov	r1, #3
   6129c:	mov	r0, r4
   612a0:	bl	59f30 <lua_settop@@Base>
   612a4:	mov	r1, #0
   612a8:	mov	r2, r1
   612ac:	mov	r0, r4
   612b0:	bl	610b8 <luaL_loadfilex@@Base>
   612b4:	cmp	r0, #0
   612b8:	bne	61320 <luaL_loadfilex@@Base+0x268>
   612bc:	mov	r0, r4
   612c0:	mov	r1, #3
   612c4:	pop	{r4, r5, r6, lr}
   612c8:	b	1d2f8 <_start@@Base+0x9f48>
   612cc:	mov	r1, #1
   612d0:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   612d4:	ldr	r3, [r4, #16]
   612d8:	ldr	r1, [r4, #20]
   612dc:	add	r2, r3, #8
   612e0:	cmp	r1, r2
   612e4:	mov	r5, r0
   612e8:	bhi	61364 <luaL_loadfilex@@Base+0x2ac>
   612ec:	mov	r1, #3
   612f0:	mov	r0, r4
   612f4:	bl	59f30 <lua_settop@@Base>
   612f8:	cmp	r5, #0
   612fc:	moveq	r1, r5
   61300:	moveq	r2, r1
   61304:	beq	612ac <luaL_loadfilex@@Base+0x1f4>
   61308:	add	r1, r5, #16
   6130c:	mov	r2, #0
   61310:	mov	r0, r4
   61314:	bl	610b8 <luaL_loadfilex@@Base>
   61318:	cmp	r0, #0
   6131c:	beq	612bc <luaL_loadfilex@@Base+0x204>
   61320:	ldr	r3, [r4, #20]
   61324:	mvn	r2, #0
   61328:	mov	r0, #2
   6132c:	str	r2, [r3, #-12]
   61330:	pop	{r4, r5, r6, pc}
   61334:	mov	r1, #2
   61338:	mov	r0, r4
   6133c:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   61340:	mov	r1, #3
   61344:	mov	r6, r0
   61348:	mov	r0, r4
   6134c:	bl	59f30 <lua_settop@@Base>
   61350:	mov	r1, #0
   61354:	cmp	r6, #0
   61358:	beq	6130c <luaL_loadfilex@@Base+0x254>
   6135c:	add	r2, r6, #16
   61360:	b	612ac <luaL_loadfilex@@Base+0x1f4>
   61364:	ldr	r3, [r3, #12]
   61368:	cmn	r3, #1
   6136c:	beq	612ec <luaL_loadfilex@@Base+0x234>
   61370:	mov	r1, #2
   61374:	mov	r0, r4
   61378:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   6137c:	mov	r1, #3
   61380:	mov	r6, r0
   61384:	mov	r0, r4
   61388:	bl	59f30 <lua_settop@@Base>
   6138c:	cmp	r5, #0
   61390:	addne	r1, r5, #16
   61394:	moveq	r1, r5
   61398:	b	61354 <luaL_loadfilex@@Base+0x29c>
   6139c:	ldr	r3, [r0, #16]
   613a0:	ldr	r2, [r0, #20]
   613a4:	push	{r4, lr}
   613a8:	cmp	r3, r2
   613ac:	mov	r4, r0
   613b0:	bcc	61400 <luaL_loadfilex@@Base+0x348>
   613b4:	mvn	r1, #0
   613b8:	str	r1, [r2, #4]
   613bc:	mov	r1, #0
   613c0:	add	r3, r3, #8
   613c4:	str	r3, [r0, #20]
   613c8:	mov	r2, #0
   613cc:	mov	r0, r4
   613d0:	bl	610b8 <luaL_loadfilex@@Base>
   613d4:	subs	r2, r0, #0
   613d8:	bne	6144c <luaL_loadfilex@@Base+0x394>
   613dc:	mov	r0, r4
   613e0:	ldr	r1, [r4, #20]
   613e4:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   613e8:	ldr	r0, [r4, #20]
   613ec:	ldr	r3, [r4, #16]
   613f0:	sub	r0, r0, r3
   613f4:	asr	r0, r0, #3
   613f8:	sub	r0, r0, #1
   613fc:	pop	{r4, pc}
   61400:	ldr	r1, [r3, #4]
   61404:	cmn	r1, #1
   61408:	bne	61420 <luaL_loadfilex@@Base+0x368>
   6140c:	add	r3, r3, #8
   61410:	str	r1, [r2, #4]
   61414:	mov	r1, #0
   61418:	str	r3, [r0, #20]
   6141c:	b	613c8 <luaL_loadfilex@@Base+0x310>
   61420:	mov	r1, #1
   61424:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   61428:	ldr	r2, [r4, #20]
   6142c:	ldr	r3, [r4, #16]
   61430:	mvn	r1, #0
   61434:	str	r1, [r2, #4]
   61438:	add	r3, r3, #8
   6143c:	str	r3, [r4, #20]
   61440:	subs	r1, r0, #0
   61444:	addne	r1, r1, #16
   61448:	b	613c8 <luaL_loadfilex@@Base+0x310>
   6144c:	mov	r0, r4
   61450:	bl	35808 <luaL_where@@Base+0x15704>

00061454 <luaL_loadfile@@Base>:
   61454:	mov	r2, #0
   61458:	b	610b8 <luaL_loadfilex@@Base>

0006145c <luaL_loadbufferx@@Base>:
   6145c:	push	{lr}		; (str lr, [sp, #-4]!)
   61460:	sub	sp, sp, #20
   61464:	ldr	ip, [sp, #24]
   61468:	str	r1, [sp, #8]
   6146c:	str	r2, [sp, #12]
   61470:	str	ip, [sp]
   61474:	add	r2, sp, #8
   61478:	ldr	r1, [pc, #8]	; 61488 <luaL_loadbufferx@@Base+0x2c>
   6147c:	bl	60d24 <lua_loadx@@Base>
   61480:	add	sp, sp, #20
   61484:	pop	{pc}		; (ldr pc, [sp], #4)
   61488:	andeq	r5, r1, ip, lsr #7

0006148c <luaL_loadbuffer@@Base>:
   6148c:	push	{lr}		; (str lr, [sp, #-4]!)
   61490:	sub	sp, sp, #20
   61494:	mov	ip, #0
   61498:	str	r1, [sp, #8]
   6149c:	str	r2, [sp, #12]
   614a0:	str	ip, [sp]
   614a4:	add	r2, sp, #8
   614a8:	ldr	r1, [pc, #8]	; 614b8 <luaL_loadbuffer@@Base+0x2c>
   614ac:	bl	60d24 <lua_loadx@@Base>
   614b0:	add	sp, sp, #20
   614b4:	pop	{pc}		; (ldr pc, [sp], #4)
   614b8:	andeq	r5, r1, ip, lsr #7

000614bc <luaL_loadstring@@Base>:
   614bc:	push	{r4, r5, lr}
   614c0:	mov	r5, r0
   614c4:	sub	sp, sp, #20
   614c8:	mov	r0, r1
   614cc:	mov	r4, r1
   614d0:	bl	12e80 <strlen@plt>
   614d4:	mov	r2, #0
   614d8:	str	r2, [sp]
   614dc:	mov	r3, r4
   614e0:	add	r2, sp, #8
   614e4:	ldr	r1, [pc, #20]	; 61500 <luaL_loadstring@@Base+0x44>
   614e8:	str	r4, [sp, #8]
   614ec:	str	r0, [sp, #12]
   614f0:	mov	r0, r5
   614f4:	bl	60d24 <lua_loadx@@Base>
   614f8:	add	sp, sp, #20
   614fc:	pop	{r4, r5, pc}
   61500:	andeq	r5, r1, ip, lsr #7

00061504 <lua_dump@@Base>:
   61504:	ldr	ip, [r0, #20]
   61508:	push	{lr}		; (str lr, [sp, #-4]!)
   6150c:	sub	sp, sp, #12
   61510:	ldr	lr, [ip, #-4]
   61514:	cmn	lr, #9
   61518:	beq	61528 <lua_dump@@Base+0x24>
   6151c:	mov	r0, #1
   61520:	add	sp, sp, #12
   61524:	pop	{pc}		; (ldr pc, [sp], #4)
   61528:	ldr	lr, [ip, #-8]
   6152c:	ldrb	ip, [lr, #6]
   61530:	cmp	ip, #0
   61534:	bne	6151c <lua_dump@@Base+0x18>
   61538:	mov	r3, r2
   6153c:	mov	r2, r1
   61540:	ldr	r1, [lr, #16]
   61544:	str	ip, [sp]
   61548:	sub	r1, r1, #64	; 0x40
   6154c:	bl	196b8 <_start@@Base+0x6308>
   61550:	add	sp, sp, #12
   61554:	pop	{pc}		; (ldr pc, [sp], #4)
   61558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6155c:	sub	sp, sp, #20
   61560:	ldr	r5, [r0, #16]
   61564:	ldr	r6, [r0, #12]
   61568:	ldr	r4, [r5, #224]	; 0xe0
   6156c:	cmp	r4, #0
   61570:	bne	61828 <lua_dump@@Base+0x324>
   61574:	ldr	r3, [r5, #552]	; 0x228
   61578:	mov	r8, r1
   6157c:	bic	r3, r3, #16
   61580:	mvn	r1, #0
   61584:	str	r3, [r5, #552]	; 0x228
   61588:	ldr	r2, [r6, #40]	; 0x28
   6158c:	str	r1, [r8, #24]
   61590:	str	r4, [r8, #20]
   61594:	ldr	r3, [r0, #188]	; 0xbc
   61598:	ldr	r1, [r0, #196]	; 0xc4
   6159c:	str	r2, [r8, #16]
   615a0:	cmp	r1, r3
   615a4:	ldr	r3, [r0, #176]	; 0xb0
   615a8:	str	r6, [r8, #12]
   615ac:	mov	r7, r0
   615b0:	ldr	r9, [r6, #20]
   615b4:	str	r8, [r6, #40]	; 0x28
   615b8:	str	r3, [sp, #8]
   615bc:	bcc	61764 <lua_dump@@Base+0x260>
   615c0:	mov	sl, r4
   615c4:	mov	r1, r6
   615c8:	mov	r2, r6
   615cc:	ldr	r3, [r6, #16]
   615d0:	add	r5, r9, #16
   615d4:	sub	r3, r5, r3
   615d8:	str	r1, [r9, #8]
   615dc:	add	r3, r3, #2
   615e0:	mov	r1, #1
   615e4:	cmp	r4, #0
   615e8:	str	sl, [r9, #4]
   615ec:	str	r3, [r9, #12]
   615f0:	str	r1, [r9]
   615f4:	str	r5, [r6, #16]
   615f8:	str	r5, [r6, #20]
   615fc:	beq	61864 <lua_dump@@Base+0x360>
   61600:	ldrb	r3, [r2, #6]
   61604:	cmp	r3, #0
   61608:	ldreq	r3, [r2, #16]
   6160c:	addeq	r3, r3, #4
   61610:	streq	r3, [r8, #8]
   61614:	ldr	r3, [r6, #24]
   61618:	sub	r3, r3, r5
   6161c:	cmp	r3, #160	; 0xa0
   61620:	ble	617cc <lua_dump@@Base+0x2c8>
   61624:	ldrh	r3, [r4, #8]
   61628:	cmp	r3, #0
   6162c:	moveq	r4, r3
   61630:	beq	616ec <lua_dump@@Base+0x1e8>
   61634:	mov	r4, #0
   61638:	mov	sl, r4
   6163c:	mov	r9, r4
   61640:	mov	fp, r4
   61644:	str	r4, [sp, #12]
   61648:	b	61658 <lua_dump@@Base+0x154>
   6164c:	ldrh	r3, [r8, #8]
   61650:	cmp	r3, #0
   61654:	beq	616ec <lua_dump@@Base+0x1e8>
   61658:	ldr	r2, [r7]
   6165c:	add	r8, r2, r3, lsl #4
   61660:	ldr	r3, [r2, r3, lsl #4]
   61664:	lsr	r1, r3, #28
   61668:	cmp	r1, #8
   6166c:	beq	6164c <lua_dump@@Base+0x148>
   61670:	uxth	r1, r3
   61674:	ldr	r3, [r2, r1, lsl #4]
   61678:	add	r1, r2, r1, lsl #4
   6167c:	lsr	r0, r3, #28
   61680:	cmp	r0, #8
   61684:	beq	61670 <lua_dump@@Base+0x16c>
   61688:	ldr	r2, [r1, #4]
   6168c:	and	r3, r3, #-201326592	; 0xf4000000
   61690:	add	r2, r2, #3
   61694:	cmp	r3, #67108864	; 0x4000000
   61698:	lsr	r0, r2, #2
   6169c:	beq	6171c <lua_dump@@Base+0x218>
   616a0:	cmp	r0, #1
   616a4:	addhi	r9, r9, #1
   616a8:	bichi	r9, r9, #1
   616ac:	add	ip, r0, r9
   616b0:	cmp	ip, #4
   616b4:	bhi	61738 <lua_dump@@Base+0x234>
   616b8:	add	r3, r9, #36	; 0x24
   616bc:	mov	r9, ip
   616c0:	add	r3, r7, r3, lsl #2
   616c4:	str	r3, [sp]
   616c8:	mov	r2, #0
   616cc:	mov	r3, r5
   616d0:	mov	r0, r7
   616d4:	bl	4b580 <luaL_error@@Base+0x5494>
   616d8:	ldrh	r3, [r8, #8]
   616dc:	add	r5, r5, #8
   616e0:	cmp	r3, #0
   616e4:	add	r4, r4, r0
   616e8:	bne	61658 <lua_dump@@Base+0x154>
   616ec:	str	r5, [r6, #20]
   616f0:	b	61708 <lua_dump@@Base+0x204>
   616f4:	ldr	r3, [r6, #8]
   616f8:	ldrd	r2, [r3, #20]
   616fc:	cmp	r2, r3
   61700:	bcs	61758 <lua_dump@@Base+0x254>
   61704:	sub	r4, r4, #1
   61708:	cmp	r4, #0
   6170c:	bgt	616f4 <lua_dump@@Base+0x1f0>
   61710:	mov	r0, r6
   61714:	add	sp, sp, #20
   61718:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6171c:	cmp	r0, #1
   61720:	beq	617e0 <lua_dump@@Base+0x2dc>
   61724:	add	ip, fp, #1
   61728:	cmp	ip, #8
   6172c:	bls	617ac <lua_dump@@Base+0x2a8>
   61730:	mov	r3, #0
   61734:	str	r3, [sp, #12]
   61738:	bic	r2, r2, #3
   6173c:	cmp	r2, #8
   61740:	addeq	sl, sl, #1
   61744:	biceq	sl, sl, #1
   61748:	ldr	r3, [sp, #8]
   6174c:	add	r3, r3, sl, lsl #2
   61750:	add	sl, sl, r0
   61754:	b	616c4 <lua_dump@@Base+0x1c0>
   61758:	mov	r0, r6
   6175c:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   61760:	b	61704 <lua_dump@@Base+0x200>
   61764:	ldr	r2, [r0, #184]	; 0xb8
   61768:	lsl	r3, r1, #1
   6176c:	ldrh	sl, [r2, r3]
   61770:	cmp	sl, #0
   61774:	beq	617bc <lua_dump@@Base+0x2b8>
   61778:	ldr	r3, [r0]
   6177c:	ldr	r0, [r0, #24]
   61780:	add	r4, r3, sl, lsl #4
   61784:	ldr	sl, [r3, sl, lsl #4]
   61788:	ldr	r3, [r0, #24]
   6178c:	cmp	r1, r3
   61790:	uxth	sl, sl
   61794:	bcs	61820 <lua_dump@@Base+0x31c>
   61798:	ldr	r0, [r0, #8]
   6179c:	add	r0, r0, r1, lsl #3
   617a0:	ldr	r2, [r0]
   617a4:	mov	r1, r2
   617a8:	b	615cc <lua_dump@@Base+0xc8>
   617ac:	add	r3, fp, #4
   617b0:	mov	fp, ip
   617b4:	add	r3, r7, r3, lsl #3
   617b8:	b	616c4 <lua_dump@@Base+0x1c0>
   617bc:	mov	r1, r6
   617c0:	mov	r2, r6
   617c4:	mov	r4, sl
   617c8:	b	615cc <lua_dump@@Base+0xc8>
   617cc:	mov	r1, #20
   617d0:	mov	r0, r6
   617d4:	bl	1fd08 <lua_getstack@@Base+0x50>
   617d8:	ldr	r5, [r6, #16]
   617dc:	b	61624 <lua_dump@@Base+0x120>
   617e0:	ldr	r3, [sp, #12]
   617e4:	cmp	r3, #0
   617e8:	bne	6180c <lua_dump@@Base+0x308>
   617ec:	add	ip, fp, #1
   617f0:	cmp	ip, #8
   617f4:	bhi	61738 <lua_dump@@Base+0x234>
   617f8:	add	r3, fp, #4
   617fc:	str	ip, [sp, #12]
   61800:	mov	fp, ip
   61804:	add	r3, r7, r3, lsl #3
   61808:	b	616c4 <lua_dump@@Base+0x1c0>
   6180c:	add	r3, r3, #3
   61810:	mov	r2, #0
   61814:	str	r2, [sp, #12]
   61818:	add	r3, r7, r3, lsl #3
   6181c:	b	616c4 <lua_dump@@Base+0x1c0>
   61820:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   61824:	b	617a0 <lua_dump@@Base+0x29c>
   61828:	ldr	r4, [r6, #20]
   6182c:	ldr	r1, [pc, #60]	; 61870 <lua_dump@@Base+0x36c>
   61830:	add	r3, r4, #8
   61834:	str	r3, [r6, #20]
   61838:	mov	r0, r6
   6183c:	bl	20530 <luaL_where@@Base+0x42c>
   61840:	ldr	r3, [r5, #208]	; 0xd0
   61844:	mvn	r2, #4
   61848:	cmp	r3, #0
   6184c:	stm	r4, {r0, r2}
   61850:	beq	6185c <lua_dump@@Base+0x358>
   61854:	mov	r0, r6
   61858:	blx	r3
   6185c:	mov	r0, #1
   61860:	bl	12e44 <exit@plt>
   61864:	ldr	r0, [r7, #12]
   61868:	ldr	r1, [pc]	; 61870 <lua_dump@@Base+0x36c>
   6186c:	bl	35a48 <lua_error@@Base+0xa8>
   61870:	andeq	r0, r0, ip, lsr #28
   61874:	push	{r4, r5, r6, r7, r8, lr}
   61878:	mov	r6, r0
   6187c:	ldr	r5, [r0, #12]
   61880:	sub	sp, sp, #8
   61884:	ldr	lr, [r5, #20]
   61888:	ldr	r7, [r5, #16]
   6188c:	cmp	lr, r1
   61890:	str	lr, [r5, #16]
   61894:	bhi	618c4 <lua_dump@@Base+0x3c0>
   61898:	ldr	r3, [lr, #-8]
   6189c:	ldrb	r2, [r3, #6]
   618a0:	cmp	r2, #0
   618a4:	bne	618c4 <lua_dump@@Base+0x3c0>
   618a8:	ldr	r3, [r3, #16]
   618ac:	ldr	r0, [r5, #40]	; 0x28
   618b0:	sub	r3, r3, #64	; 0x40
   618b4:	ldr	r2, [r3, #8]
   618b8:	add	r2, r2, #17
   618bc:	add	r3, r3, r2, lsl #2
   618c0:	str	r3, [r0, #8]
   618c4:	ldrh	r0, [lr, #-12]
   618c8:	ldr	ip, [r6]
   618cc:	b	618d4 <lua_dump@@Base+0x3d0>
   618d0:	uxth	r0, r2
   618d4:	ldr	r2, [ip, r0, lsl #4]
   618d8:	add	r4, ip, r0, lsl #4
   618dc:	lsr	r0, r2, #28
   618e0:	cmp	r0, #8
   618e4:	beq	618d0 <lua_dump@@Base+0x3cc>
   618e8:	cmp	r0, #4
   618ec:	beq	61950 <lua_dump@@Base+0x44c>
   618f0:	and	r2, r2, #-201326592	; 0xf4000000
   618f4:	cmp	r2, #67108864	; 0x4000000
   618f8:	addne	r8, r6, #144	; 0x90
   618fc:	addeq	r8, r6, #32
   61900:	mov	r2, #0
   61904:	mov	r3, r1
   61908:	str	r2, [sp]
   6190c:	mov	r1, r4
   61910:	mov	r2, r8
   61914:	mov	r0, r6
   61918:	bl	4baa0 <luaL_error@@Base+0x59b4>
   6191c:	ldr	r3, [r4]
   61920:	tst	r3, #-201326592	; 0xf4000000
   61924:	bne	61978 <lua_dump@@Base+0x474>
   61928:	ldr	r2, [r4, #4]
   6192c:	ldr	lr, [r5, #20]
   61930:	cmp	r2, #3
   61934:	bhi	61950 <lua_dump@@Base+0x44c>
   61938:	tst	r3, #8388608	; 0x800000
   6193c:	bne	61980 <lua_dump@@Base+0x47c>
   61940:	cmp	r2, #1
   61944:	ldrsbeq	r3, [r8]
   61948:	ldrshne	r3, [r8]
   6194c:	str	r3, [r8]
   61950:	ldr	r3, [r5, #40]	; 0x28
   61954:	sub	lr, lr, #16
   61958:	str	lr, [r5, #20]
   6195c:	str	r7, [r5, #16]
   61960:	ldr	r2, [r3, #16]
   61964:	mov	r3, #0
   61968:	str	r2, [r5, #40]	; 0x28
   6196c:	str	r3, [r6, #196]	; 0xc4
   61970:	add	sp, sp, #8
   61974:	pop	{r4, r5, r6, r7, r8, pc}
   61978:	ldr	lr, [r5, #20]
   6197c:	b	61950 <lua_dump@@Base+0x44c>
   61980:	cmp	r2, #1
   61984:	ldrbeq	r3, [r8]
   61988:	ldrhne	r3, [r8]
   6198c:	b	6194c <lua_dump@@Base+0x448>
   61990:	push	{r4, r5, r6, r7, r8, lr}
   61994:	mov	r4, r0
   61998:	mov	r6, r1
   6199c:	bl	12eb0 <__errno_location@plt>
   619a0:	lsr	r3, r6, #2
   619a4:	and	r3, r3, #63	; 0x3f
   619a8:	add	r3, r3, #1392	; 0x570
   619ac:	ldr	r2, [r4, #1532]	; 0x5fc
   619b0:	add	r3, r3, #8
   619b4:	sub	r1, r4, #432	; 0x1b0
   619b8:	lsl	r3, r3, #1
   619bc:	lsl	r2, r2, #1
   619c0:	mov	r5, r0
   619c4:	ldr	r0, [r4, #168]	; 0xa8
   619c8:	ldr	r7, [r5]
   619cc:	cmp	r0, #0
   619d0:	strh	r2, [r1, r3]
   619d4:	bne	619e4 <lua_dump@@Base+0x4e0>
   619d8:	ldrb	r3, [r4, #-271]	; 0xfffffef1
   619dc:	ands	r3, r3, #96	; 0x60
   619e0:	beq	619ec <lua_dump@@Base+0x4e8>
   619e4:	str	r7, [r5]
   619e8:	pop	{r4, r5, r6, r7, r8, pc}
   619ec:	mov	r2, #18
   619f0:	str	r3, [r4, #2304]	; 0x900
   619f4:	str	r3, [r4, #2308]	; 0x904
   619f8:	sub	r1, r6, #4
   619fc:	str	r2, [r4, #168]	; 0xa8
   61a00:	mov	r0, r4
   61a04:	bl	195c0 <_start@@Base+0x6210>
   61a08:	str	r7, [r5]
   61a0c:	pop	{r4, r5, r6, r7, r8, pc}
   61a10:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   61a14:	mov	r4, r0
   61a18:	mov	r8, r1
   61a1c:	bl	12eb0 <__errno_location@plt>
   61a20:	ldr	r1, [r4, #16]
   61a24:	ldr	r5, [r4, #8]
   61a28:	ldr	r9, [r4, #20]
   61a2c:	ldr	r2, [r1, #-8]
   61a30:	ldr	r3, [r4, #24]
   61a34:	add	sl, r5, #384	; 0x180
   61a38:	sub	r3, r3, r9
   61a3c:	mov	r7, r0
   61a40:	ldrb	r0, [r2, #6]
   61a44:	ldr	r6, [r7]
   61a48:	cmp	r0, #0
   61a4c:	bne	61b78 <lua_dump@@Base+0x674>
   61a50:	ldr	r2, [r2, #16]
   61a54:	sub	r9, r9, r1
   61a58:	sub	r2, r2, #64	; 0x40
   61a5c:	ldrb	r0, [r2, #37]	; 0x25
   61a60:	ldrb	r1, [r2, #7]
   61a64:	asr	r9, r9, #3
   61a68:	tst	r0, #2
   61a6c:	ldrb	fp, [r2, #6]
   61a70:	addne	r2, r9, #1
   61a74:	addne	r1, r1, r2
   61a78:	cmp	r3, r1, lsl #3
   61a7c:	ble	61bb4 <lua_dump@@Base+0x6b0>
   61a80:	sub	r9, fp, r9
   61a84:	bic	r9, r9, r9, asr #31
   61a88:	tst	r8, #1
   61a8c:	str	r4, [r5, #464]	; 0x1d0
   61a90:	bne	61ba0 <lua_dump@@Base+0x69c>
   61a94:	ldr	r2, [r5, #552]	; 0x228
   61a98:	ldrb	r3, [r5, #113]	; 0x71
   61a9c:	cmp	r2, #0
   61aa0:	beq	61aac <lua_dump@@Base+0x5a8>
   61aa4:	tst	r3, #96	; 0x60
   61aa8:	beq	61bc0 <lua_dump@@Base+0x6bc>
   61aac:	tst	r3, #1
   61ab0:	beq	61b34 <lua_dump@@Base+0x630>
   61ab4:	cmp	r9, #0
   61ab8:	beq	61bdc <lua_dump@@Base+0x6d8>
   61abc:	ldr	r0, [r4, #20]
   61ac0:	lsl	r9, r9, #3
   61ac4:	add	r3, r0, #8
   61ac8:	add	r1, r3, r9
   61acc:	mvn	r2, #0
   61ad0:	str	r2, [r3, #-4]
   61ad4:	add	r3, r3, #8
   61ad8:	cmp	r1, r3
   61adc:	bne	61ad0 <lua_dump@@Base+0x5cc>
   61ae0:	add	r0, r0, r9
   61ae4:	str	r0, [r4, #20]
   61ae8:	mvn	r2, #0
   61aec:	mov	r1, #0
   61af0:	mov	r0, r4
   61af4:	bl	1fd80 <lua_getstack@@Base+0xc8>
   61af8:	ldr	r3, [r4, #20]
   61afc:	ldr	r2, [r3, #-4]
   61b00:	cmn	r2, #1
   61b04:	subeq	r9, r3, r9
   61b08:	subeq	r3, r3, #8
   61b0c:	beq	61b20 <lua_dump@@Base+0x61c>
   61b10:	b	61b34 <lua_dump@@Base+0x630>
   61b14:	ldr	r2, [r3, #4]
   61b18:	cmn	r2, #1
   61b1c:	bne	61bf0 <lua_dump@@Base+0x6ec>
   61b20:	cmp	r9, r3
   61b24:	mov	r1, r3
   61b28:	sub	r3, r3, #8
   61b2c:	bne	61b14 <lua_dump@@Base+0x610>
   61b30:	str	r9, [r4, #20]
   61b34:	ldr	r2, [r5, #484]	; 0x1e4
   61b38:	ldrb	r3, [r8, #-4]
   61b3c:	tst	r2, #1
   61b40:	beq	61b50 <lua_dump@@Base+0x64c>
   61b44:	ldr	r2, [r5, #552]	; 0x228
   61b48:	cmp	r2, #0
   61b4c:	beq	61b5c <lua_dump@@Base+0x658>
   61b50:	cmp	r3, #92	; 0x5c
   61b54:	cmpne	r3, #89	; 0x59
   61b58:	addeq	r3, r3, #1
   61b5c:	ldr	r1, [pc, #148]	; 61bf8 <lua_dump@@Base+0x6f4>
   61b60:	lsl	r3, r3, #1
   61b64:	ldr	r2, [pc, #144]	; 61bfc <lua_dump@@Base+0x6f8>
   61b68:	ldrh	r0, [r1, r3]
   61b6c:	str	r6, [r7]
   61b70:	add	r0, r0, r2
   61b74:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   61b78:	cmp	r3, #160	; 0xa0
   61b7c:	movgt	r9, #0
   61b80:	bgt	61a88 <lua_dump@@Base+0x584>
   61b84:	mov	r1, #20
   61b88:	mov	r0, r4
   61b8c:	bl	1fd08 <lua_getstack@@Base+0x50>
   61b90:	tst	r8, #1
   61b94:	mov	r9, #0
   61b98:	str	r4, [r5, #464]	; 0x1d0
   61b9c:	beq	61a94 <lua_dump@@Base+0x590>
   61ba0:	bic	r8, r8, #1
   61ba4:	mov	r0, sl
   61ba8:	mov	r1, r8
   61bac:	bl	61990 <lua_dump@@Base+0x48c>
   61bb0:	b	61b34 <lua_dump@@Base+0x630>
   61bb4:	mov	r0, r4
   61bb8:	bl	1fd08 <lua_getstack@@Base+0x50>
   61bbc:	b	61a80 <lua_dump@@Base+0x57c>
   61bc0:	mov	r0, sl
   61bc4:	sub	r1, r8, #4
   61bc8:	bl	195c0 <_start@@Base+0x6210>
   61bcc:	ldrb	r3, [r5, #113]	; 0x71
   61bd0:	tst	r3, #1
   61bd4:	beq	61b34 <lua_dump@@Base+0x630>
   61bd8:	b	61ab4 <lua_dump@@Base+0x5b0>
   61bdc:	mov	r1, r9
   61be0:	mov	r0, r4
   61be4:	mvn	r2, #0
   61be8:	bl	1fd80 <lua_getstack@@Base+0xc8>
   61bec:	b	61b34 <lua_dump@@Base+0x630>
   61bf0:	str	r1, [r4, #20]
   61bf4:	b	61b34 <lua_dump@@Base+0x630>
   61bf8:			; <UNDEFINED> instruction: 0x0006eeb0
   61bfc:	andeq	r9, r6, r0, lsl #17
   61c00:	ldr	r2, [r0, #168]	; 0xa8
   61c04:	cmp	r2, #0
   61c08:	bxne	lr
   61c0c:	ldrb	r2, [r0, #-271]	; 0xfffffef1
   61c10:	ands	r2, r2, #96	; 0x60
   61c14:	bxne	lr
   61c18:	mov	ip, #18
   61c1c:	str	r2, [r0, #2304]	; 0x900
   61c20:	str	ip, [r0, #168]	; 0xa8
   61c24:	b	195c0 <_start@@Base+0x6210>
   61c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   61c2c:	sub	sp, sp, #20
   61c30:	mov	r4, r0
   61c34:	mov	r6, r1
   61c38:	bl	12eb0 <__errno_location@plt>
   61c3c:	ldr	ip, [r4, #280]	; 0x118
   61c40:	ldr	r5, [r4, #80]	; 0x50
   61c44:	cmp	ip, #1
   61c48:	ldr	r9, [r6, #188]	; 0xbc
   61c4c:	ldr	sl, [r4, #272]	; 0x110
   61c50:	mov	r7, r0
   61c54:	ldr	r8, [r0]
   61c58:	bls	61c9c <lua_dump@@Base+0x798>
   61c5c:	add	r2, sl, #4
   61c60:	mov	r3, #1
   61c64:	mov	lr, r2
   61c68:	ldr	r1, [r2], #4
   61c6c:	cmp	r1, #0
   61c70:	beq	61c90 <lua_dump@@Base+0x78c>
   61c74:	ldr	r0, [r1, #52]	; 0x34
   61c78:	cmp	r9, r0
   61c7c:	bcc	61c90 <lua_dump@@Base+0x78c>
   61c80:	ldr	r1, [r1, #48]	; 0x30
   61c84:	add	r0, r0, r1
   61c88:	cmp	r9, r0
   61c8c:	bcc	61f64 <lua_dump@@Base+0xa60>
   61c90:	add	r3, r3, #1
   61c94:	cmp	ip, r3
   61c98:	bne	61c64 <lua_dump@@Base+0x760>
   61c9c:	mov	r3, #0
   61ca0:	ldr	r2, [sl]
   61ca4:	str	r3, [r4, #2304]	; 0x900
   61ca8:	ldr	r1, [r4, #2308]	; 0x904
   61cac:	ldrh	r3, [r2, #24]
   61cb0:	cmp	r1, r3
   61cb4:	bne	61cd0 <lua_dump@@Base+0x7cc>
   61cb8:	ldr	r3, [r2, #16]
   61cbc:	add	r3, r3, #262144	; 0x40000
   61cc0:	ldrh	r2, [r3, #2]
   61cc4:	str	r2, [r4, #2308]	; 0x904
   61cc8:	ldrh	r3, [r3]
   61ccc:	str	r3, [r4, #2304]	; 0x900
   61cd0:	ldr	r3, [pc, #824]	; 62010 <lua_dump@@Base+0xb0c>
   61cd4:	add	r2, sp, #4
   61cd8:	mov	r1, #0
   61cdc:	mov	r0, r5
   61ce0:	stmib	sp, {r4, r6}
   61ce4:	bl	6bd28 <luaL_openlibs@@Base+0x2568>
   61ce8:	subs	r9, r0, #0
   61cec:	rsbne	r9, r9, #0
   61cf0:	bne	61db8 <lua_dump@@Base+0x8b4>
   61cf4:	ldr	r3, [r5, #8]
   61cf8:	ldrsb	r2, [r3, #113]	; 0x71
   61cfc:	cmp	r2, #0
   61d00:	blt	61d10 <lua_dump@@Base+0x80c>
   61d04:	ldrb	r3, [r3, #115]	; 0x73
   61d08:	tst	r3, #8
   61d0c:	bne	61e98 <lua_dump@@Base+0x994>
   61d10:	ldr	sl, [r5, #40]	; 0x28
   61d14:	ldr	r6, [sp, #12]
   61d18:	bic	sl, sl, #3
   61d1c:	str	r6, [sl, #8]
   61d20:	ldr	r3, [r5, #8]
   61d24:	ldrb	r2, [r3, #113]	; 0x71
   61d28:	tst	r2, #128	; 0x80
   61d2c:	bne	61d48 <lua_dump@@Base+0x844>
   61d30:	ldrb	r3, [r3, #29]
   61d34:	cmp	r3, #5
   61d38:	cmpne	r3, #2
   61d3c:	bne	61f6c <lua_dump@@Base+0xa68>
   61d40:	tst	r2, #64	; 0x40
   61d44:	beq	61f58 <lua_dump@@Base+0xa54>
   61d48:	ldr	r3, [r6]
   61d4c:	uxtb	r2, r3
   61d50:	cmp	r2, #87	; 0x57
   61d54:	beq	61dc4 <lua_dump@@Base+0x8c0>
   61d58:	str	r8, [r7]
   61d5c:	ldr	r3, [r6]
   61d60:	uxtb	r1, r3
   61d64:	sub	r2, r1, #63	; 0x3f
   61d68:	cmp	r2, #10
   61d6c:	ldrls	pc, [pc, r2, lsl #2]
   61d70:	b	61da0 <lua_dump@@Base+0x89c>
   61d74:	andeq	r1, r6, ip, lsl #28
   61d78:	andeq	r1, r6, r0, lsr #27
   61d7c:	andeq	r1, r6, r8, lsr lr
   61d80:	andeq	r1, r6, r0, lsr #27
   61d84:	andeq	r1, r6, r8, lsr lr
   61d88:	andeq	r1, r6, r0, lsr #27
   61d8c:	andeq	r1, r6, r0, lsr #27
   61d90:	andeq	r1, r6, r0, lsr #27
   61d94:	andeq	r1, r6, r0, lsr #27
   61d98:	andeq	r1, r6, r0, lsr #27
   61d9c:	andeq	r1, r6, r8, ror #28
   61da0:	cmp	r1, #88	; 0x58
   61da4:	ldrhi	r9, [r5, #20]
   61da8:	ldrhi	r3, [r5, #16]
   61dac:	subhi	r9, r9, r3
   61db0:	asrhi	r9, r9, #3
   61db4:	addhi	r9, r9, #1
   61db8:	mov	r0, r9
   61dbc:	add	sp, sp, #20
   61dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   61dc4:	ldr	r2, [r4, #272]	; 0x110
   61dc8:	lsr	r1, r3, #16
   61dcc:	ldr	r1, [r2, r1, lsl #2]
   61dd0:	ldrb	r2, [r1, #44]	; 0x2c
   61dd4:	sub	r2, r2, #73	; 0x49
   61dd8:	cmp	r2, #3
   61ddc:	bhi	61d58 <lua_dump@@Base+0x854>
   61de0:	ldr	r2, [r4, #168]	; 0xa8
   61de4:	cmp	r2, #17
   61de8:	streq	r3, [r4, #2316]	; 0x90c
   61dec:	ldreq	r2, [r1, #44]	; 0x2c
   61df0:	moveq	r3, #1
   61df4:	addne	r6, r1, #44	; 0x2c
   61df8:	streq	r6, [r4, #2312]	; 0x908
   61dfc:	strne	r6, [sl, #8]
   61e00:	streq	r2, [r6]
   61e04:	strbeq	r3, [r4, #115]	; 0x73
   61e08:	b	61d58 <lua_dump@@Base+0x854>
   61e0c:	ldr	r9, [r5, #20]
   61e10:	ldr	r2, [r5, #16]
   61e14:	lsr	r3, r3, #8
   61e18:	sub	r9, r9, r2
   61e1c:	uxtb	r3, r3
   61e20:	asr	r9, r9, #3
   61e24:	add	r9, r9, #1
   61e28:	sub	r9, r9, r3
   61e2c:	mov	r0, r9
   61e30:	add	sp, sp, #20
   61e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   61e38:	ldr	r2, [r5, #20]
   61e3c:	ldr	r1, [r5, #16]
   61e40:	lsr	r9, r3, #8
   61e44:	sub	r2, r2, r1
   61e48:	lsr	r3, r3, #16
   61e4c:	uxtb	r9, r9
   61e50:	rsb	r9, r9, r2, asr #3
   61e54:	uxtb	r3, r3
   61e58:	sub	r9, r9, r3
   61e5c:	mov	r0, r9
   61e60:	add	sp, sp, #20
   61e64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   61e68:	ldr	r9, [r5, #20]
   61e6c:	ldr	r1, [r5, #16]
   61e70:	lsr	r2, r3, #8
   61e74:	sub	r9, r9, r1
   61e78:	uxtb	r2, r2
   61e7c:	asr	r9, r9, #3
   61e80:	add	r9, r9, #1
   61e84:	sub	r3, r9, r3, lsr #16
   61e88:	sub	r9, r3, r2
   61e8c:	mov	r0, r9
   61e90:	add	sp, sp, #20
   61e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   61e98:	ldr	r1, [pc, #372]	; 62014 <lua_dump@@Base+0xb10>
   61e9c:	mov	r0, r5
   61ea0:	bl	507a0 <luaL_error@@Base+0xa6b4>
   61ea4:	subs	sl, r0, #0
   61ea8:	beq	61d10 <lua_dump@@Base+0x80c>
   61eac:	ldr	ip, [r5, #20]
   61eb0:	ldr	r3, [r5, #24]
   61eb4:	sub	r3, r3, ip
   61eb8:	cmp	r3, #448	; 0x1c0
   61ebc:	ble	61ffc <lua_dump@@Base+0xaf8>
   61ec0:	ldr	r0, [r4, #2304]	; 0x900
   61ec4:	ldr	r1, [r4, #2308]	; 0x904
   61ec8:	mvn	r3, #13
   61ecc:	mov	r2, #16
   61ed0:	add	lr, ip, #32
   61ed4:	str	r0, [ip]
   61ed8:	strd	r2, [ip, #16]
   61edc:	str	r1, [ip, #8]
   61ee0:	str	r3, [ip, #4]
   61ee4:	str	r3, [ip, #12]
   61ee8:	mov	fp, r3
   61eec:	str	lr, [r5, #20]
   61ef0:	add	ip, ip, #160	; 0xa0
   61ef4:	strd	r2, [ip, #-136]	; 0xffffff78
   61ef8:	mov	r0, lr
   61efc:	add	r2, r6, #124	; 0x7c
   61f00:	b	61f08 <lua_dump@@Base+0xa04>
   61f04:	mov	r0, r3
   61f08:	mov	r3, r0
   61f0c:	ldr	r1, [r2, #4]!
   61f10:	str	r1, [r3], #8
   61f14:	cmp	r3, ip
   61f18:	str	fp, [r3, #-4]
   61f1c:	bne	61f04 <lua_dump@@Base+0xa00>
   61f20:	add	lr, lr, #256	; 0x100
   61f24:	mov	r1, ip
   61f28:	mov	r2, #0
   61f2c:	ldr	r3, [pc, #228]	; 62018 <lua_dump@@Base+0xb14>
   61f30:	str	ip, [r5, #20]
   61f34:	b	61f40 <lua_dump@@Base+0xa3c>
   61f38:	cmp	lr, r1
   61f3c:	beq	61fe4 <lua_dump@@Base+0xae0>
   61f40:	vldmia	r6!, {d7}
   61f44:	vcmp.f64	d7, d7
   61f48:	vstmia	r1!, {d7}
   61f4c:	vmrs	APSR_nzcv, fpscr
   61f50:	strdne	r2, [r1, #-8]
   61f54:	b	61f38 <lua_dump@@Base+0xa34>
   61f58:	mov	r0, r5
   61f5c:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   61f60:	b	61d48 <lua_dump@@Base+0x844>
   61f64:	mov	sl, lr
   61f68:	b	61ca0 <lua_dump@@Base+0x79c>
   61f6c:	ldrb	r3, [r4, #-271]	; 0xfffffef1
   61f70:	tst	r3, #96	; 0x60
   61f74:	bne	61d48 <lua_dump@@Base+0x844>
   61f78:	ldr	r3, [r4, #80]	; 0x50
   61f7c:	ldr	r3, [r3, #16]
   61f80:	ldr	r3, [r3, #-8]
   61f84:	ldrb	r3, [r3, #6]
   61f88:	cmp	r3, #0
   61f8c:	bne	61d48 <lua_dump@@Base+0x844>
   61f90:	ldr	r1, [r4, #2304]	; 0x900
   61f94:	ldr	r2, [r4, #272]	; 0x110
   61f98:	ldr	r3, [r4, #2308]	; 0x904
   61f9c:	ldr	r2, [r2, r1, lsl #2]
   61fa0:	ldr	r2, [r2, #28]
   61fa4:	add	r2, r2, r3, lsl #3
   61fa8:	ldrb	r3, [r2, #7]
   61fac:	cmp	r3, #255	; 0xff
   61fb0:	beq	61d48 <lua_dump@@Base+0x844>
   61fb4:	add	r3, r3, #1
   61fb8:	uxtb	r3, r3
   61fbc:	strb	r3, [r2, #7]
   61fc0:	ldr	r2, [r4, #1536]	; 0x600
   61fc4:	cmp	r3, r2
   61fc8:	blt	61d48 <lua_dump@@Base+0x844>
   61fcc:	mov	r3, #18
   61fd0:	str	r3, [r4, #168]	; 0xa8
   61fd4:	mov	r1, r6
   61fd8:	mov	r0, r4
   61fdc:	bl	195c0 <_start@@Base+0x6210>
   61fe0:	b	61d48 <lua_dump@@Base+0x844>
   61fe4:	add	r0, r0, #136	; 0x88
   61fe8:	str	r0, [r5, #20]
   61fec:	mov	r1, sl
   61ff0:	mov	r0, r5
   61ff4:	bl	1aaf8 <_start@@Base+0x7748>
   61ff8:	b	61d10 <lua_dump@@Base+0x80c>
   61ffc:	mov	r1, #56	; 0x38
   62000:	mov	r0, r5
   62004:	bl	1fd08 <lua_getstack@@Base+0x50>
   62008:	ldr	ip, [r5, #20]
   6200c:	b	61ec0 <lua_dump@@Base+0x9bc>
   62010:	andeq	r2, r5, r8, asr r7
   62014:	strbtls	r9, [pc], #1411	; 6201c <luaL_fileresult@@Base>
   62018:			; <UNDEFINED> instruction: 0xfff80000

0006201c <luaL_fileresult@@Base>:
   6201c:	cmp	r1, #0
   62020:	mov	r3, r0
   62024:	beq	62044 <luaL_fileresult@@Base+0x28>
   62028:	ldr	r2, [r0, #20]
   6202c:	mvn	r1, #2
   62030:	add	r0, r2, #8
   62034:	str	r0, [r3, #20]
   62038:	str	r1, [r2, #4]
   6203c:	mov	r0, #1
   62040:	bx	lr
   62044:	mov	r1, r2
   62048:	b	5bcf0 <lua_pushfstring@@Base+0x98>

0006204c <luaL_execresult@@Base>:
   6204c:	cmn	r1, #1
   62050:	beq	620e8 <luaL_execresult@@Base+0x9c>
   62054:	and	ip, r1, #127	; 0x7f
   62058:	add	r3, ip, #1
   6205c:	ldr	r2, [r0, #20]
   62060:	sxtb	r3, r3
   62064:	cmp	r3, #1
   62068:	push	{r4, r5, r6, lr}
   6206c:	add	r3, r2, #8
   62070:	mov	r4, r1
   62074:	mov	r5, r0
   62078:	bgt	620c8 <luaL_execresult@@Base+0x7c>
   6207c:	cmp	ip, #0
   62080:	asreq	r4, r1, #8
   62084:	str	r3, [r0, #20]
   62088:	uxtbeq	r4, r4
   6208c:	cmp	r4, #0
   62090:	mvneq	r1, #2
   62094:	mvnne	r1, #0
   62098:	str	r1, [r2, #4]
   6209c:	mov	r2, #4
   620a0:	ldr	r1, [pc, #72]	; 620f0 <luaL_execresult@@Base+0xa4>
   620a4:	bl	5b190 <lua_pushlstring@@Base>
   620a8:	ldr	r3, [r5, #20]
   620ac:	mvn	r2, #13
   620b0:	add	r1, r3, #8
   620b4:	str	r1, [r5, #20]
   620b8:	mov	r0, #3
   620bc:	str	r4, [r3]
   620c0:	str	r2, [r3, #4]
   620c4:	pop	{r4, r5, r6, pc}
   620c8:	mvn	r1, #0
   620cc:	str	r3, [r0, #20]
   620d0:	str	r1, [r2, #4]
   620d4:	mov	r2, #6
   620d8:	ldr	r1, [pc, #20]	; 620f4 <luaL_execresult@@Base+0xa8>
   620dc:	mov	r4, ip
   620e0:	bl	5b190 <lua_pushlstring@@Base>
   620e4:	b	620a8 <luaL_execresult@@Base+0x5c>
   620e8:	mov	r1, #0
   620ec:	b	5bcf0 <lua_pushfstring@@Base+0x98>
   620f0:	andeq	r3, r7, r8, lsl #10
   620f4:	andeq	r3, r7, r0, lsl #10

000620f8 <luaL_findtable@@Base>:
   620f8:	push	{r4, r5, r6, r7, r8, lr}
   620fc:	mov	r5, r2
   62100:	mov	r8, r3
   62104:	mov	r4, r0
   62108:	bl	5a100 <lua_pushvalue@@Base>
   6210c:	b	62178 <luaL_findtable@@Base+0x80>
   62110:	ldr	r3, [r4, #20]
   62114:	mov	r1, r2
   62118:	sub	r3, r3, #8
   6211c:	str	r3, [r4, #20]
   62120:	ldrb	r3, [r6]
   62124:	cmp	r3, #46	; 0x2e
   62128:	movne	r2, r8
   6212c:	moveq	r2, #1
   62130:	bl	5cae4 <lua_createtable@@Base>
   62134:	mov	r2, r7
   62138:	mov	r1, r5
   6213c:	mov	r0, r4
   62140:	bl	5b190 <lua_pushlstring@@Base>
   62144:	mvn	r1, #1
   62148:	mov	r0, r4
   6214c:	bl	5a100 <lua_pushvalue@@Base>
   62150:	mvn	r1, #3
   62154:	mov	r0, r4
   62158:	bl	5e5c4 <lua_settable@@Base>
   6215c:	mvn	r1, #1
   62160:	mov	r0, r4
   62164:	bl	59fb4 <lua_remove@@Base>
   62168:	ldrb	r3, [r6]
   6216c:	add	r5, r6, #1
   62170:	cmp	r3, #46	; 0x2e
   62174:	bne	621f8 <luaL_findtable@@Base+0x100>
   62178:	mov	r1, #46	; 0x2e
   6217c:	mov	r0, r5
   62180:	bl	12e8c <strchr@plt>
   62184:	subs	r6, r0, #0
   62188:	beq	621e8 <luaL_findtable@@Base+0xf0>
   6218c:	sub	r7, r6, r5
   62190:	mov	r2, r7
   62194:	mov	r1, r5
   62198:	mov	r0, r4
   6219c:	bl	5b190 <lua_pushlstring@@Base>
   621a0:	mvn	r1, #1
   621a4:	mov	r0, r4
   621a8:	bl	5ddcc <lua_rawget@@Base>
   621ac:	mvn	r1, #0
   621b0:	mov	r0, r4
   621b4:	bl	5a214 <lua_type@@Base>
   621b8:	mvn	r1, #0
   621bc:	subs	r2, r0, #0
   621c0:	mov	r0, r4
   621c4:	beq	62110 <luaL_findtable@@Base+0x18>
   621c8:	bl	5a214 <lua_type@@Base>
   621cc:	cmp	r0, #5
   621d0:	beq	6215c <luaL_findtable@@Base+0x64>
   621d4:	ldr	r3, [r4, #20]
   621d8:	mov	r0, r5
   621dc:	sub	r3, r3, #16
   621e0:	str	r3, [r4, #20]
   621e4:	pop	{r4, r5, r6, r7, r8, pc}
   621e8:	mov	r0, r5
   621ec:	bl	12e80 <strlen@plt>
   621f0:	add	r6, r5, r0
   621f4:	b	6218c <luaL_findtable@@Base+0x94>
   621f8:	mov	r0, #0
   621fc:	pop	{r4, r5, r6, r7, r8, pc}
   62200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   62204:	mov	sl, r3
   62208:	ldrb	lr, [r2, #1]
   6220c:	ldr	ip, [r0, #8]
   62210:	sub	sp, sp, #148	; 0x94
   62214:	subs	r4, r1, #0
   62218:	add	ip, ip, lr, lsl #2
   6221c:	add	r3, ip, #3840	; 0xf00
   62220:	add	r3, r3, #12
   62224:	str	r3, [sp, #16]
   62228:	ldr	r3, [r0, #36]	; 0x24
   6222c:	mov	r5, r0
   62230:	str	r3, [sp, #12]
   62234:	ldrb	r8, [r2]
   62238:	add	r6, r2, #3
   6223c:	ldrb	r7, [r2, #2]
   62240:	beq	6261c <luaL_findtable@@Base+0x524>
   62244:	mov	r3, #16
   62248:	ldr	r2, [pc, #1044]	; 62664 <luaL_findtable@@Base+0x56c>
   6224c:	ldr	r1, [pc, #1044]	; 62668 <luaL_findtable@@Base+0x570>
   62250:	bl	620f8 <luaL_findtable@@Base>
   62254:	mov	r2, r4
   62258:	mvn	r1, #0
   6225c:	mov	r0, r5
   62260:	bl	5db0c <lua_getfield@@Base>
   62264:	ldr	r3, [r5, #20]
   62268:	ldr	r2, [r3, #-4]
   6226c:	cmn	r2, #12
   62270:	beq	622c8 <luaL_findtable@@Base+0x1d0>
   62274:	sub	r3, r3, #8
   62278:	str	r3, [r5, #20]
   6227c:	mov	r2, r4
   62280:	mov	r3, r7
   62284:	ldr	r1, [pc, #992]	; 6266c <luaL_findtable@@Base+0x574>
   62288:	mov	r0, r5
   6228c:	bl	620f8 <luaL_findtable@@Base>
   62290:	cmp	r0, #0
   62294:	bne	62654 <luaL_findtable@@Base+0x55c>
   62298:	ldr	r3, [r5, #20]
   6229c:	mvn	r0, #11
   622a0:	mov	r2, r4
   622a4:	ldr	r1, [r3, #-8]
   622a8:	str	r0, [r3, #4]
   622ac:	add	r0, r3, #8
   622b0:	str	r1, [r3]
   622b4:	str	r0, [r5, #20]
   622b8:	mvn	r1, #2
   622bc:	mov	r0, r5
   622c0:	bl	5e634 <lua_setfield@@Base>
   622c4:	ldr	r3, [r5, #20]
   622c8:	ldr	r2, [r3, #-8]
   622cc:	mvn	r1, #11
   622d0:	mov	r0, r2
   622d4:	str	r2, [sp, #24]
   622d8:	sub	r2, r3, #8
   622dc:	str	r2, [r5, #20]
   622e0:	strd	r0, [r3, #-16]
   622e4:	ldr	r3, [sp, #24]
   622e8:	ldr	r1, [r5, #16]
   622ec:	ldrb	r3, [r3, #4]
   622f0:	sub	r2, r2, r1
   622f4:	str	r2, [sp, #28]
   622f8:	tst	r3, #4
   622fc:	asr	r2, r2, #3
   62300:	str	r2, [sp, #20]
   62304:	bne	62634 <luaL_findtable@@Base+0x53c>
   62308:	ldr	r3, [sp, #24]
   6230c:	mov	fp, #0
   62310:	str	fp, [sp, #8]
   62314:	strb	fp, [r3, #6]
   62318:	ldrb	r3, [r6]
   6231c:	add	r9, r6, #1
   62320:	and	fp, r3, #192	; 0xc0
   62324:	cmp	fp, #192	; 0xc0
   62328:	and	r7, r3, #63	; 0x3f
   6232c:	beq	62400 <luaL_findtable@@Base+0x308>
   62330:	ldr	r3, [r5, #16]
   62334:	ldr	r6, [r5, #20]
   62338:	mov	r0, r5
   6233c:	sub	r6, r6, r3
   62340:	ldr	r3, [sp, #20]
   62344:	rsb	r6, r3, r6, asr #3
   62348:	add	r2, r6, #3
   6234c:	lsl	r2, r2, #3
   62350:	mov	r1, r2
   62354:	str	r2, [sp, #4]
   62358:	bl	32a24 <luaL_where@@Base+0x12920>
   6235c:	ldr	r3, [r5, #8]
   62360:	mov	r1, #1
   62364:	add	r3, r3, #216	; 0xd8
   62368:	cmp	r6, #0
   6236c:	ldr	r2, [sp, #4]
   62370:	mov	r4, r0
   62374:	mov	r0, #8
   62378:	str	r3, [r4, #16]
   6237c:	ldr	r3, [sp, #12]
   62380:	strb	r6, [r4, #7]
   62384:	strb	r0, [r4, #5]
   62388:	strb	r1, [r4, #6]
   6238c:	str	r3, [r4, #8]
   62390:	bne	625c8 <luaL_findtable@@Base+0x4d0>
   62394:	cmp	fp, #0
   62398:	strb	r8, [r4, #6]
   6239c:	add	r6, r9, r7
   623a0:	add	r8, r8, #1
   623a4:	bne	625a0 <luaL_findtable@@Base+0x4a8>
   623a8:	ldr	r3, [r5, #8]
   623ac:	add	r3, r3, #212	; 0xd4
   623b0:	str	r3, [r4, #16]
   623b4:	ldr	r3, [sl]
   623b8:	add	sl, sl, #4
   623bc:	str	r3, [r4, #20]
   623c0:	cmp	r7, #0
   623c4:	streq	r4, [sp, #8]
   623c8:	beq	62318 <luaL_findtable@@Base+0x220>
   623cc:	mov	r2, r7
   623d0:	mov	r1, r9
   623d4:	mov	r0, r5
   623d8:	bl	20260 <luaL_where@@Base+0x15c>
   623dc:	ldr	r1, [sp, #24]
   623e0:	mov	r2, r0
   623e4:	mov	r0, r5
   623e8:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   623ec:	mvn	r3, #8
   623f0:	str	r4, [sp, #8]
   623f4:	str	r4, [r0]
   623f8:	str	r3, [r0, #4]
   623fc:	b	62318 <luaL_findtable@@Base+0x220>
   62400:	sub	r3, r3, #249	; 0xf9
   62404:	cmp	r3, #6
   62408:	ldrls	pc, [pc, r3, lsl #2]
   6240c:	b	625f0 <luaL_findtable@@Base+0x4f8>
   62410:	andeq	r2, r6, r8, ror #9
   62414:			; <UNDEFINED> instruction: 0x000624b0
   62418:	andeq	r2, r6, r8, lsl #9
   6241c:	andeq	r2, r6, r4, ror #8
   62420:	andeq	r2, r6, r0, asr #8
   62424:	andeq	r2, r6, r4, lsr r4
   62428:	andeq	r2, r6, ip, lsr #8
   6242c:	add	sp, sp, #148	; 0x94
   62430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   62434:	add	r8, r8, #1
   62438:	mov	r6, r9
   6243c:	b	62318 <luaL_findtable@@Base+0x220>
   62440:	ldr	r3, [r5, #20]
   62444:	mov	r6, r9
   62448:	add	r2, r3, #8
   6244c:	str	r2, [r5, #20]
   62450:	ldr	r2, [sp, #8]
   62454:	str	r2, [r3]
   62458:	mvn	r2, #8
   6245c:	str	r2, [r3, #4]
   62460:	b	62318 <luaL_findtable@@Base+0x220>
   62464:	ldrb	r3, [r6, #1]
   62468:	ldr	r1, [r5, #20]
   6246c:	add	r6, r6, #2
   62470:	add	r0, r1, #8
   62474:	sub	r3, r1, r3, lsl #3
   62478:	ldrd	r2, [r3]
   6247c:	strd	r2, [r1]
   62480:	str	r0, [r5, #20]
   62484:	b	62318 <luaL_findtable@@Base+0x220>
   62488:	ldr	r3, [r5, #20]
   6248c:	ldr	r1, [r9]
   62490:	ldr	r2, [r9, #4]
   62494:	str	r1, [r3]
   62498:	str	r2, [r3, #4]
   6249c:	ldr	r3, [r5, #20]
   624a0:	add	r6, r6, #9
   624a4:	add	r3, r3, #8
   624a8:	str	r3, [r5, #20]
   624ac:	b	62318 <luaL_findtable@@Base+0x220>
   624b0:	ldr	r2, [r5, #20]
   624b4:	sub	r1, r2, #16
   624b8:	ldr	r3, [r2, #-4]
   624bc:	str	r1, [r5, #20]
   624c0:	cmn	r3, #5
   624c4:	bne	6257c <luaL_findtable@@Base+0x484>
   624c8:	ldr	r3, [r2, #-8]
   624cc:	ldr	r3, [r3, #12]
   624d0:	cmp	r3, #0
   624d4:	bne	6257c <luaL_findtable@@Base+0x484>
   624d8:	ldr	r3, [r2, #-16]
   624dc:	mov	r6, r9
   624e0:	str	r3, [sp, #12]
   624e4:	b	62318 <luaL_findtable@@Base+0x220>
   624e8:	ldrb	r9, [r6, #1]
   624ec:	add	r6, r6, #2
   624f0:	mov	r1, r6
   624f4:	mov	r2, r9
   624f8:	mov	r0, r5
   624fc:	bl	20260 <luaL_where@@Base+0x15c>
   62500:	mov	r2, #108	; 0x6c
   62504:	mov	r1, #0
   62508:	mvn	r4, #0
   6250c:	add	r6, r6, r9
   62510:	mov	r7, r0
   62514:	add	r0, sp, #32
   62518:	bl	12ed4 <memset@plt>
   6251c:	mov	r3, #2
   62520:	add	r0, sp, #32
   62524:	str	r3, [sp, #140]	; 0x8c
   62528:	str	r6, [sp, #56]	; 0x38
   6252c:	str	r4, [sp, #60]	; 0x3c
   62530:	str	r4, [sp, #64]	; 0x40
   62534:	str	r7, [sp, #108]	; 0x6c
   62538:	str	r5, [sp, #36]	; 0x24
   6253c:	bl	3fd7c <luaL_typerror@@Base+0x9a10>
   62540:	ldr	r2, [r5, #36]	; 0x24
   62544:	mov	r1, r0
   62548:	str	r4, [r0, #44]	; 0x2c
   6254c:	mov	r0, r5
   62550:	bl	33254 <luaL_where@@Base+0x13150>
   62554:	mov	r2, r7
   62558:	ldr	r1, [sp, #24]
   6255c:	mov	r4, r0
   62560:	mov	r0, r5
   62564:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   62568:	mvn	r3, #8
   6256c:	ldr	r6, [sp, #56]	; 0x38
   62570:	str	r4, [r0]
   62574:	str	r3, [r0, #4]
   62578:	b	62318 <luaL_findtable@@Base+0x220>
   6257c:	sub	r2, r2, #8
   62580:	ldr	r1, [sp, #24]
   62584:	mov	r0, r5
   62588:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   6258c:	ldr	r3, [r5, #20]
   62590:	mov	r6, r9
   62594:	ldrd	r2, [r3]
   62598:	strd	r2, [r0]
   6259c:	b	62318 <luaL_findtable@@Base+0x220>
   625a0:	ldr	r3, [sp, #16]
   625a4:	cmp	fp, #128	; 0x80
   625a8:	str	r3, [r4, #16]
   625ac:	add	r3, r3, #4
   625b0:	bne	625e8 <luaL_findtable@@Base+0x4f0>
   625b4:	ldr	r2, [sp, #8]
   625b8:	str	r3, [sp, #16]
   625bc:	ldr	r2, [r2, #20]
   625c0:	str	r2, [r4, #20]
   625c4:	b	623c0 <luaL_findtable@@Base+0x2c8>
   625c8:	ldr	r1, [r5, #16]
   625cc:	ldr	r3, [sp, #28]
   625d0:	sub	r2, r2, #24
   625d4:	add	r1, r1, r3
   625d8:	str	r1, [r5, #20]
   625dc:	add	r0, r4, #24
   625e0:	bl	12cb8 <memcpy@plt>
   625e4:	b	62394 <luaL_findtable@@Base+0x29c>
   625e8:	str	r3, [sp, #16]
   625ec:	b	623b4 <luaL_findtable@@Base+0x2bc>
   625f0:	ldr	r4, [r5, #20]
   625f4:	mov	r2, r7
   625f8:	add	r3, r4, #8
   625fc:	str	r3, [r5, #20]
   62600:	mov	r1, r9
   62604:	mov	r0, r5
   62608:	bl	20260 <luaL_where@@Base+0x15c>
   6260c:	mvn	r3, #4
   62610:	add	r6, r9, r7
   62614:	stm	r4, {r0, r3}
   62618:	b	62318 <luaL_findtable@@Base+0x220>
   6261c:	mov	r2, r7
   62620:	bl	5cae4 <lua_createtable@@Base>
   62624:	ldr	r2, [r5, #20]
   62628:	ldr	r3, [r2, #-8]
   6262c:	str	r3, [sp, #24]
   62630:	b	622e4 <luaL_findtable@@Base+0x1ec>
   62634:	ldr	r2, [r5, #8]
   62638:	ldr	r1, [sp, #24]
   6263c:	bic	r3, r3, #4
   62640:	strb	r3, [r1, #4]
   62644:	ldr	r3, [r2, #48]	; 0x30
   62648:	str	r3, [r1, #12]
   6264c:	str	r1, [r2, #48]	; 0x30
   62650:	b	62308 <luaL_findtable@@Base+0x210>
   62654:	mov	r2, r4
   62658:	mov	r0, r5
   6265c:	ldr	r1, [pc, #12]	; 62670 <luaL_findtable@@Base+0x578>
   62660:	bl	4a618 <luaL_error@@Base+0x452c>
   62664:	andeq	lr, r6, r0, lsl r9
   62668:			; <UNDEFINED> instruction: 0xffffd8f0
   6266c:			; <UNDEFINED> instruction: 0xffffd8ee
   62670:	andeq	r0, r0, r1, lsr #15

00062674 <luaopen_base@@Base>:
   62674:	push	{r4, r5, r6, r7, r8, lr}
   62678:	mov	r2, #2
   6267c:	ldr	r8, [pc, #216]	; 6275c <luaopen_base@@Base+0xe8>
   62680:	mov	r4, r0
   62684:	mov	r1, r8
   62688:	ldr	r5, [r0, #36]	; 0x24
   6268c:	bl	20260 <luaL_where@@Base+0x15c>
   62690:	mov	r1, r5
   62694:	mvn	r6, #11
   62698:	mov	r2, r0
   6269c:	mov	r0, r4
   626a0:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   626a4:	mov	r2, #7
   626a8:	ldr	r1, [pc, #176]	; 62760 <luaopen_base@@Base+0xec>
   626ac:	stm	r0, {r5, r6}
   626b0:	mov	r0, r4
   626b4:	bl	5b190 <lua_pushlstring@@Base>
   626b8:	mov	r0, r4
   626bc:	mov	r2, #1
   626c0:	mov	r1, #0
   626c4:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   626c8:	ldr	r3, [r4, #20]
   626cc:	ldr	r1, [pc, #144]	; 62764 <luaopen_base@@Base+0xf0>
   626d0:	add	r2, r3, #8
   626d4:	str	r2, [r4, #20]
   626d8:	mov	r2, #6
   626dc:	mov	r5, r0
   626e0:	mov	r0, r4
   626e4:	stm	r3, {r5, r6}
   626e8:	str	r5, [r5, #16]
   626ec:	bl	20260 <luaL_where@@Base+0x15c>
   626f0:	mov	r1, r5
   626f4:	ldr	r6, [pc, #108]	; 62768 <luaopen_base@@Base+0xf4>
   626f8:	mov	r2, r0
   626fc:	mov	r0, r4
   62700:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   62704:	mov	r2, #2
   62708:	ldr	r1, [pc, #92]	; 6276c <luaopen_base@@Base+0xf8>
   6270c:	mov	r7, r0
   62710:	mov	r0, r4
   62714:	bl	20260 <luaL_where@@Base+0x15c>
   62718:	mvn	ip, #8
   6271c:	mvn	r3, #4
   62720:	str	r3, [r7, #4]
   62724:	mov	r1, r8
   62728:	add	r3, r6, #4
   6272c:	add	r2, r6, #104	; 0x68
   62730:	str	r0, [r7]
   62734:	strb	ip, [r5, #6]
   62738:	mov	r0, r4
   6273c:	bl	62200 <luaL_findtable@@Base+0x108>
   62740:	mov	r0, r4
   62744:	add	r3, r6, #436	; 0x1b4
   62748:	add	r2, r6, #464	; 0x1d0
   6274c:	ldr	r1, [pc, #28]	; 62770 <luaopen_base@@Base+0xfc>
   62750:	bl	62200 <luaL_findtable@@Base+0x108>
   62754:	mov	r0, #2
   62758:	pop	{r4, r5, r6, r7, r8, pc}
   6275c:	andeq	r3, r7, r0, lsl r5
   62760:	andeq	r3, r7, r4, lsl r5
   62764:	andeq	r3, r7, ip, lsl r5
   62768:			; <UNDEFINED> instruction: 0x00070cb0
   6276c:	andeq	r3, r7, r4, lsr #10
   62770:	andeq	r3, r7, r8, lsr #10

00062774 <luaopen_math@@Base>:
   62774:	push	{r4, lr}
   62778:	mov	r1, #40	; 0x28
   6277c:	mov	r4, r0
   62780:	bl	5d0f8 <lua_newuserdata@@Base>
   62784:	ldr	r2, [pc, #36]	; 627b0 <luaopen_math@@Base+0x3c>
   62788:	mov	r1, #0
   6278c:	mov	r3, r0
   62790:	mov	r0, r4
   62794:	str	r1, [r3, #32]
   62798:	add	r3, r2, #524	; 0x20c
   6279c:	ldr	r1, [pc, #16]	; 627b4 <luaopen_math@@Base+0x40>
   627a0:	add	r2, r2, #556	; 0x22c
   627a4:	bl	62200 <luaL_findtable@@Base+0x108>
   627a8:	mov	r0, #1
   627ac:	pop	{r4, pc}
   627b0:			; <UNDEFINED> instruction: 0x00070cb0
   627b4:	andeq	r3, r7, r4, lsr r5

000627b8 <luaopen_string@@Base>:
   627b8:	ldr	r2, [pc, #100]	; 62824 <luaopen_string@@Base+0x6c>
   627bc:	push	{r4, r5, r6, lr}
   627c0:	add	r3, r2, #788	; 0x314
   627c4:	mov	r4, r0
   627c8:	add	r2, r2, #832	; 0x340
   627cc:	ldr	r1, [pc, #84]	; 62828 <luaopen_string@@Base+0x70>
   627d0:	bl	62200 <luaL_findtable@@Base+0x108>
   627d4:	mov	r0, r4
   627d8:	mov	r2, #1
   627dc:	mov	r1, #0
   627e0:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   627e4:	ldr	r3, [r4, #8]
   627e8:	ldr	r2, [r3, #232]	; 0xe8
   627ec:	mov	r5, r0
   627f0:	mov	r1, r0
   627f4:	str	r5, [r3, #336]	; 0x150
   627f8:	mov	r0, r4
   627fc:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   62800:	ldr	r2, [r4, #20]
   62804:	mvn	r1, #11
   62808:	mvn	r3, #1
   6280c:	ldr	r2, [r2, #-8]
   62810:	str	r1, [r0, #4]
   62814:	str	r2, [r0]
   62818:	mov	r0, #1
   6281c:	strb	r3, [r5, #6]
   62820:	pop	{r4, r5, r6, pc}
   62824:			; <UNDEFINED> instruction: 0x00070cb0
   62828:	andeq	lr, r6, r0, asr r9

0006282c <luaopen_io@@Base>:
   6282c:	push	{r4, r5, r6, r7, r8, lr}
   62830:	mov	r4, r0
   62834:	ldr	r5, [pc, #160]	; 628dc <luaopen_io@@Base+0xb0>
   62838:	mov	r1, #0
   6283c:	add	r3, r5, #936	; 0x3a8
   62840:	add	r2, r5, #972	; 0x3cc
   62844:	bl	62200 <luaL_findtable@@Base+0x108>
   62848:	ldr	r3, [r4, #20]
   6284c:	mov	r0, r4
   62850:	add	ip, r3, #8
   62854:	ldrd	r6, [r3, #-8]
   62858:	ldr	r2, [pc, #128]	; 628e0 <luaopen_io@@Base+0xb4>
   6285c:	ldr	r1, [pc, #128]	; 628e4 <luaopen_io@@Base+0xb8>
   62860:	strd	r6, [r3]
   62864:	str	ip, [r4, #20]
   62868:	bl	5e634 <lua_setfield@@Base>
   6286c:	add	r3, r5, #1040	; 0x410
   62870:	add	r2, r5, #1088	; 0x440
   62874:	mov	r0, r4
   62878:	add	r3, r3, #8
   6287c:	add	r2, r2, #4
   62880:	ldr	r1, [pc, #96]	; 628e8 <luaopen_io@@Base+0xbc>
   62884:	bl	62200 <luaL_findtable@@Base+0x108>
   62888:	ldr	r3, [pc, #92]	; 628ec <luaopen_io@@Base+0xc0>
   6288c:	mov	r0, r4
   62890:	ldr	r2, [pc, #88]	; 628f0 <luaopen_io@@Base+0xc4>
   62894:	ldr	r1, [r3]
   62898:	bl	5e6d4 <lua_setfield@@Base+0xa0>
   6289c:	ldr	r3, [r4, #8]
   628a0:	ldr	r1, [pc, #76]	; 628f4 <luaopen_io@@Base+0xc8>
   628a4:	ldr	r2, [pc, #76]	; 628f8 <luaopen_io@@Base+0xcc>
   628a8:	ldr	r1, [r1]
   628ac:	str	r0, [r3, #376]	; 0x178
   628b0:	mov	r0, r4
   628b4:	bl	5e6d4 <lua_setfield@@Base+0xa0>
   628b8:	ldr	r3, [r4, #8]
   628bc:	ldr	r1, [pc, #56]	; 628fc <luaopen_io@@Base+0xd0>
   628c0:	ldr	r2, [pc, #56]	; 62900 <luaopen_io@@Base+0xd4>
   628c4:	ldr	r1, [r1]
   628c8:	str	r0, [r3, #380]	; 0x17c
   628cc:	mov	r0, r4
   628d0:	bl	5e6d4 <lua_setfield@@Base+0xa0>
   628d4:	mov	r0, #1
   628d8:	pop	{r4, r5, r6, r7, r8, pc}
   628dc:			; <UNDEFINED> instruction: 0x00070cb0
   628e0:	andeq	r2, r7, ip, lsl sp
   628e4:			; <UNDEFINED> instruction: 0xffffd8f0
   628e8:	andeq	r3, r7, ip, lsr r5
   628ec:	andeq	r4, r8, r8, lsr #3
   628f0:	andeq	r3, r7, r0, asr #10
   628f4:	andeq	r4, r8, ip, lsr #3
   628f8:	andeq	r3, r7, r8, asr #10
   628fc:	andeq	r4, r8, r0, lsr #3
   62900:	andeq	r3, r7, r0, asr r5

00062904 <luaopen_os@@Base>:
   62904:	ldr	r3, [pc, #28]	; 62928 <luaopen_os@@Base+0x24>
   62908:	push	{r4, lr}
   6290c:	add	r2, r3, #1200	; 0x4b0
   62910:	ldr	r1, [pc, #20]	; 6292c <luaopen_os@@Base+0x28>
   62914:	add	r2, r2, #12
   62918:	add	r3, r3, #1168	; 0x490
   6291c:	bl	62200 <luaL_findtable@@Base+0x108>
   62920:	mov	r0, #1
   62924:	pop	{r4, pc}
   62928:			; <UNDEFINED> instruction: 0x00070cb0
   6292c:	andeq	r3, r7, r8, asr r5

00062930 <luaopen_debug@@Base>:
   62930:	ldr	r2, [pc, #24]	; 62950 <luaopen_debug@@Base+0x20>
   62934:	push	{r4, lr}
   62938:	add	r3, r2, #1296	; 0x510
   6293c:	ldr	r1, [pc, #16]	; 62954 <luaopen_debug@@Base+0x24>
   62940:	add	r2, r2, #1360	; 0x550
   62944:	bl	62200 <luaL_findtable@@Base+0x108>
   62948:	mov	r0, #1
   6294c:	pop	{r4, pc}
   62950:			; <UNDEFINED> instruction: 0x00070cb0
   62954:	andeq	r3, r7, ip, asr r5

00062958 <luaopen_bit@@Base>:
   62958:	ldr	r3, [pc, #28]	; 6297c <luaopen_bit@@Base+0x24>
   6295c:	push	{r4, lr}
   62960:	add	r2, r3, #1536	; 0x600
   62964:	ldr	r1, [pc, #20]	; 62980 <luaopen_bit@@Base+0x28>
   62968:	add	r2, r2, #8
   6296c:	add	r3, r3, #1520	; 0x5f0
   62970:	bl	62200 <luaL_findtable@@Base+0x108>
   62974:	mov	r0, #1
   62978:	pop	{r4, pc}
   6297c:			; <UNDEFINED> instruction: 0x00070cb0
   62980:	andeq	r3, r7, r4, ror #10
   62984:	ldr	r3, [pc, #28]	; 629a8 <luaopen_bit@@Base+0x50>
   62988:	push	{r4, lr}
   6298c:	add	r2, r3, #1648	; 0x670
   62990:	mov	r1, #0
   62994:	add	r2, r2, #12
   62998:	add	r3, r3, #1616	; 0x650
   6299c:	bl	62200 <luaL_findtable@@Base+0x108>
   629a0:	mov	r0, #1
   629a4:	pop	{r4, pc}
   629a8:			; <UNDEFINED> instruction: 0x00070cb0
   629ac:	ldr	r2, [pc, #32]	; 629d4 <luaopen_bit@@Base+0x7c>
   629b0:	push	{r4, lr}
   629b4:	add	r3, r2, #1760	; 0x6e0
   629b8:	add	r2, r2, #1776	; 0x6f0
   629bc:	mov	r1, #0
   629c0:	add	r3, r3, #8
   629c4:	add	r2, r2, #4
   629c8:	bl	62200 <luaL_findtable@@Base+0x108>
   629cc:	mov	r0, #1
   629d0:	pop	{r4, pc}
   629d4:			; <UNDEFINED> instruction: 0x00070cb0

000629d8 <luaopen_ffi@@Base>:
   629d8:	mov	r2, #0
   629dc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   629e0:	mov	r1, r2
   629e4:	mov	r3, #456	; 0x1c8
   629e8:	mov	r9, r0
   629ec:	bl	205b0 <luaL_where@@Base+0x4ac>
   629f0:	mov	r2, #0
   629f4:	mov	r1, r2
   629f8:	mov	r3, #2048	; 0x800
   629fc:	ldr	r7, [pc, #864]	; 62d64 <luaopen_ffi@@Base+0x38c>
   62a00:	mov	r5, #0
   62a04:	add	fp, r7, #640	; 0x280
   62a08:	mov	r6, r0
   62a0c:	mov	r0, r9
   62a10:	bl	205b0 <luaL_where@@Base+0x4ac>
   62a14:	mov	r2, #456	; 0x1c8
   62a18:	mov	r1, #0
   62a1c:	mov	r8, r0
   62a20:	mov	r0, r6
   62a24:	bl	12ed4 <memset@plt>
   62a28:	ldr	r3, [r9, #8]
   62a2c:	mov	r0, #96	; 0x60
   62a30:	mov	r1, #128	; 0x80
   62a34:	add	r4, r8, #16
   62a38:	str	r8, [r6]
   62a3c:	ldr	r2, [pc, #804]	; 62d68 <luaopen_ffi@@Base+0x390>
   62a40:	strd	r0, [r6, #4]
   62a44:	mov	r8, r5
   62a48:	str	r3, [r6, #16]
   62a4c:	b	62a7c <luaopen_ffi@@Base+0xa4>
   62a50:	cmp	r0, #5
   62a54:	strh	ip, [r4, #-6]
   62a58:	str	ip, [r4, #-4]
   62a5c:	ldrhne	r2, [r3, #200]	; 0xc8
   62a60:	add	r4, r4, #16
   62a64:	strhne	r2, [r4, #-22]	; 0xffffffea
   62a68:	strhne	r5, [r3, #200]	; 0xc8
   62a6c:	add	r5, r5, #1
   62a70:	cmp	r5, #96	; 0x60
   62a74:	beq	62b34 <luaopen_ffi@@Base+0x15c>
   62a78:	ldr	r2, [fp, r5, lsl #2]
   62a7c:	lsl	r1, r2, #16
   62a80:	lsr	r0, r2, #28
   62a84:	asr	r1, r1, #26
   62a88:	bic	r2, r2, #64512	; 0xfc00
   62a8c:	eor	r3, r1, r2
   62a90:	sub	ip, r3, r1, ror #18
   62a94:	eor	r3, ip, r1, ror #13
   62a98:	sub	r3, r3, ip, ror #19
   62a9c:	and	r3, r3, #127	; 0x7f
   62aa0:	cmp	r0, #7
   62aa4:	cmpne	r0, #13
   62aa8:	moveq	ip, #1
   62aac:	movne	ip, #0
   62ab0:	add	r3, r6, r3, lsl #1
   62ab4:	strh	r8, [r4, #-8]
   62ab8:	str	r1, [r4, #-12]
   62abc:	str	r2, [r4, #-16]
   62ac0:	bne	62a50 <luaopen_ffi@@Base+0x78>
   62ac4:	mov	r0, r7
   62ac8:	bl	12e80 <strlen@plt>
   62acc:	mov	r1, r7
   62ad0:	add	r4, r4, #16
   62ad4:	mov	r2, r0
   62ad8:	mov	sl, r0
   62adc:	mov	r0, r9
   62ae0:	bl	20260 <luaL_where@@Base+0x15c>
   62ae4:	ldr	r2, [pc, #640]	; 62d6c <luaopen_ffi@@Base+0x394>
   62ae8:	add	r3, sl, #1
   62aec:	add	r7, r7, r3
   62af0:	add	r2, r0, r2
   62af4:	eor	r1, r0, r2
   62af8:	sub	r1, r1, r2, ror #18
   62afc:	eor	r2, r1, r2, ror #13
   62b00:	sub	r2, r2, r1, ror #19
   62b04:	and	r2, r2, #127	; 0x7f
   62b08:	ldrb	r1, [r0, #4]
   62b0c:	add	r2, r6, r2, lsl #1
   62b10:	orr	r1, r1, #32
   62b14:	strb	r1, [r0, #4]
   62b18:	str	r0, [r4, #-20]	; 0xffffffec
   62b1c:	ldrh	r1, [r2, #200]	; 0xc8
   62b20:	strh	r1, [r4, #-22]	; 0xffffffea
   62b24:	strh	r5, [r2, #200]	; 0xc8
   62b28:	add	r5, r5, #1
   62b2c:	cmp	r5, #96	; 0x60
   62b30:	bne	62a78 <luaopen_ffi@@Base+0xa0>
   62b34:	ldr	r4, [r9, #20]
   62b38:	ldr	r1, [r9, #8]
   62b3c:	add	r3, r4, #8
   62b40:	mov	r2, #1
   62b44:	str	r6, [r1, #228]	; 0xe4
   62b48:	mov	r0, r9
   62b4c:	str	r3, [r9, #20]
   62b50:	mov	r1, #0
   62b54:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   62b58:	mvn	r7, #11
   62b5c:	mov	r2, #1
   62b60:	mov	r1, #0
   62b64:	str	r0, [r6, #24]
   62b68:	stm	r4, {r0, r7}
   62b6c:	mov	r0, r9
   62b70:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   62b74:	ldr	r3, [r9, #20]
   62b78:	mov	r2, #6
   62b7c:	add	r1, r3, #8
   62b80:	str	r1, [r9, #20]
   62b84:	ldr	r1, [pc, #484]	; 62d70 <luaopen_ffi@@Base+0x398>
   62b88:	ldr	r4, [pc, #484]	; 62d74 <luaopen_ffi@@Base+0x39c>
   62b8c:	mov	r5, r0
   62b90:	mov	r0, r9
   62b94:	stm	r3, {r5, r7}
   62b98:	str	r5, [r5, #16]
   62b9c:	bl	20260 <luaL_where@@Base+0x15c>
   62ba0:	mov	r1, r5
   62ba4:	mov	r2, r0
   62ba8:	mov	r0, r9
   62bac:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   62bb0:	mov	r2, #1
   62bb4:	ldr	r1, [pc, #444]	; 62d78 <luaopen_ffi@@Base+0x3a0>
   62bb8:	mov	sl, r0
   62bbc:	mov	r0, r9
   62bc0:	bl	20260 <luaL_where@@Base+0x15c>
   62bc4:	mvn	ip, #8
   62bc8:	mvn	r3, #4
   62bcc:	str	r3, [sl, #4]
   62bd0:	add	r2, r4, #76	; 0x4c
   62bd4:	add	r3, r4, #4
   62bd8:	mov	r1, #0
   62bdc:	mov	r8, r1
   62be0:	str	r0, [sl]
   62be4:	strb	ip, [r5, #6]
   62be8:	mov	r0, r9
   62bec:	str	r5, [r6, #20]
   62bf0:	bl	62200 <luaL_findtable@@Base+0x108>
   62bf4:	ldr	r2, [r9, #20]
   62bf8:	ldr	r1, [r9, #8]
   62bfc:	add	r3, r4, #224	; 0xe0
   62c00:	ldr	r0, [r2, #-8]
   62c04:	add	r2, r4, #236	; 0xec
   62c08:	str	r0, [r1, #360]	; 0x168
   62c0c:	mov	r1, r8
   62c10:	mov	r0, r9
   62c14:	bl	62200 <luaL_findtable@@Base+0x108>
   62c18:	add	r3, r4, #264	; 0x108
   62c1c:	add	r2, r4, #272	; 0x110
   62c20:	mov	r1, r8
   62c24:	mov	r0, r9
   62c28:	bl	62200 <luaL_findtable@@Base+0x108>
   62c2c:	ldr	r2, [r6, #16]
   62c30:	ldr	r1, [r6, #24]
   62c34:	add	r2, r2, #96	; 0x60
   62c38:	mov	r0, r9
   62c3c:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   62c40:	ldr	r2, [r9, #20]
   62c44:	mov	r3, r2
   62c48:	ldr	ip, [r3, #-8]!
   62c4c:	mov	r1, r0
   62c50:	mov	r0, r9
   62c54:	str	ip, [r1]
   62c58:	str	r7, [r1, #4]
   62c5c:	str	r3, [r9, #20]
   62c60:	ldr	r1, [r2, #-16]
   62c64:	bl	40710 <luaL_typerror@@Base+0xa3a4>
   62c68:	mov	r2, #5
   62c6c:	ldr	r1, [pc, #264]	; 62d7c <luaopen_ffi@@Base+0x3a4>
   62c70:	str	r8, [r0]
   62c74:	mov	r0, r9
   62c78:	bl	5b190 <lua_pushlstring@@Base>
   62c7c:	mov	r2, #3
   62c80:	ldr	r1, [pc, #248]	; 62d80 <luaopen_ffi@@Base+0x3a8>
   62c84:	mov	r0, r9
   62c88:	bl	5b190 <lua_pushlstring@@Base>
   62c8c:	add	r3, r4, #296	; 0x128
   62c90:	add	r2, r4, #364	; 0x16c
   62c94:	mov	r1, r8
   62c98:	mov	r0, r9
   62c9c:	bl	62200 <luaL_findtable@@Base+0x108>
   62ca0:	ldr	r3, [r9, #8]
   62ca4:	mov	r2, #7
   62ca8:	ldr	r1, [pc, #212]	; 62d84 <luaopen_ffi@@Base+0x3ac>
   62cac:	mov	r0, r9
   62cb0:	ldr	r4, [r3, #120]	; 0x78
   62cb4:	bl	20260 <luaL_where@@Base+0x15c>
   62cb8:	ldr	r2, [r4, #28]
   62cbc:	ldr	r3, [r4, #20]
   62cc0:	ldr	r1, [r0, #8]
   62cc4:	and	r2, r2, r1
   62cc8:	add	r2, r2, r2, lsl #1
   62ccc:	add	r3, r3, r2, lsl #3
   62cd0:	b	62ce0 <luaopen_ffi@@Base+0x308>
   62cd4:	ldr	r3, [r3, #16]
   62cd8:	cmp	r3, #0
   62cdc:	beq	62d04 <luaopen_ffi@@Base+0x32c>
   62ce0:	ldr	r2, [r3, #12]
   62ce4:	cmn	r2, #5
   62ce8:	bne	62cd4 <luaopen_ffi@@Base+0x2fc>
   62cec:	ldr	r2, [r3, #8]
   62cf0:	cmp	r0, r2
   62cf4:	bne	62cd4 <luaopen_ffi@@Base+0x2fc>
   62cf8:	ldr	r2, [r3, #4]
   62cfc:	cmn	r2, #12
   62d00:	beq	62d0c <luaopen_ffi@@Base+0x334>
   62d04:	mov	r0, #1
   62d08:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   62d0c:	mov	r2, #3
   62d10:	ldr	r1, [pc, #112]	; 62d88 <luaopen_ffi@@Base+0x3b0>
   62d14:	mov	r0, r9
   62d18:	ldr	r4, [r3]
   62d1c:	bl	20260 <luaL_where@@Base+0x15c>
   62d20:	mov	r1, r4
   62d24:	mov	r2, r0
   62d28:	mov	r0, r9
   62d2c:	bl	3e148 <luaL_typerror@@Base+0x7ddc>
   62d30:	ldr	r3, [r9, #20]
   62d34:	ldrd	r2, [r3, #-8]
   62d38:	strd	r2, [r0]
   62d3c:	ldrb	r3, [r4, #4]
   62d40:	tst	r3, #4
   62d44:	beq	62d04 <luaopen_ffi@@Base+0x32c>
   62d48:	ldr	r2, [r9, #8]
   62d4c:	bic	r3, r3, #4
   62d50:	strb	r3, [r4, #4]
   62d54:	ldr	r3, [r2, #48]	; 0x30
   62d58:	str	r3, [r4, #12]
   62d5c:	str	r4, [r2, #48]	; 0x30
   62d60:	b	62d04 <luaopen_ffi@@Base+0x32c>
   62d64:	andeq	r1, r7, r0, asr #7
   62d68:	andhi	r0, r5, r0
   62d6c:	blx	101b69a <__bss_end__@@Base+0xf97422>
   62d70:	andeq	r3, r7, ip, lsl r5
   62d74:	andeq	r1, r7, r0, asr #15
   62d78:	andeq	r3, r7, r4, lsr #19
   62d7c:	andeq	r3, r7, r8, ror #10
   62d80:	andeq	r3, r7, r0, ror r5
   62d84:	andeq	lr, r6, r0, lsl r9
   62d88:	andeq	r3, r7, r4, ror r5
   62d8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   62d90:	mov	r6, r1
   62d94:	ldr	sl, [r0, #32]
   62d98:	mov	r4, r0
   62d9c:	cmp	sl, #48	; 0x30
   62da0:	add	r8, r0, #44	; 0x2c
   62da4:	ldr	r1, [r0, #48]	; 0x30
   62da8:	ldr	r3, [r0, #44]	; 0x2c
   62dac:	movne	r5, sl
   62db0:	movne	r7, #101	; 0x65
   62db4:	beq	62f10 <luaopen_ffi@@Base+0x538>
   62db8:	ldr	r9, [pc, #588]	; 6300c <luaopen_ffi@@Base+0x634>
   62dbc:	b	62dfc <luaopen_ffi@@Base+0x424>
   62dc0:	cmp	r3, r1
   62dc4:	beq	62efc <luaopen_ffi@@Base+0x524>
   62dc8:	strb	r5, [r3], #1
   62dcc:	ldr	r2, [r4, #24]
   62dd0:	ldr	r1, [r4, #28]
   62dd4:	str	r3, [r4, #44]	; 0x2c
   62dd8:	cmp	r2, r1
   62ddc:	bcs	62eec <luaopen_ffi@@Base+0x514>
   62de0:	add	r1, r2, #1
   62de4:	str	r1, [r4, #24]
   62de8:	ldrb	r0, [r2]
   62dec:	ldr	r1, [r4, #48]	; 0x30
   62df0:	mov	sl, r5
   62df4:	mov	r5, r0
   62df8:	str	r0, [r4, #32]
   62dfc:	add	r2, r9, r5
   62e00:	sub	r0, r5, #46	; 0x2e
   62e04:	ldrb	r2, [r2, #189]	; 0xbd
   62e08:	clz	r0, r0
   62e0c:	lsr	r0, r0, #5
   62e10:	orrs	r2, r0, r2, lsr #7
   62e14:	bne	62dc0 <luaopen_ffi@@Base+0x3e8>
   62e18:	sub	r2, r5, #43	; 0x2b
   62e1c:	bics	r2, r2, #2
   62e20:	bne	62e30 <luaopen_ffi@@Base+0x458>
   62e24:	orr	sl, sl, #32
   62e28:	cmp	sl, r7
   62e2c:	beq	62dc0 <luaopen_ffi@@Base+0x3e8>
   62e30:	cmp	r3, r1
   62e34:	movne	r0, r3
   62e38:	beq	62fa0 <luaopen_ffi@@Base+0x5c8>
   62e3c:	mov	r3, #0
   62e40:	strb	r3, [r0], #1
   62e44:	mov	r2, #13
   62e48:	str	r0, [r4, #44]	; 0x2c
   62e4c:	mov	r1, r6
   62e50:	ldr	r0, [r4, #52]	; 0x34
   62e54:	bl	189f0 <_start@@Base+0x5640>
   62e58:	cmp	r0, #3
   62e5c:	mov	r5, r0
   62e60:	beq	62f5c <luaopen_ffi@@Base+0x584>
   62e64:	cmp	r0, #1
   62e68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   62e6c:	cmp	r0, #0
   62e70:	beq	62ffc <luaopen_ffi@@Base+0x624>
   62e74:	ldr	r7, [r4, #4]
   62e78:	ldr	r3, [r7, #8]
   62e7c:	ldr	r3, [r3, #228]	; 0xe4
   62e80:	cmp	r3, #0
   62e84:	beq	62f68 <luaopen_ffi@@Base+0x590>
   62e88:	cmp	r5, #2
   62e8c:	beq	62fb0 <luaopen_ffi@@Base+0x5d8>
   62e90:	cmp	r5, #5
   62e94:	mov	r0, r7
   62e98:	mov	r1, #16
   62e9c:	movne	r5, #12
   62ea0:	moveq	r5, #11
   62ea4:	bl	32a24 <luaL_where@@Base+0x12920>
   62ea8:	mov	r3, #10
   62eac:	strb	r3, [r0, #5]
   62eb0:	ldrd	r2, [r6]
   62eb4:	mov	ip, r0
   62eb8:	strh	r5, [r0, #6]
   62ebc:	strd	r2, [r0, #8]
   62ec0:	ldr	r2, [r4]
   62ec4:	mvn	r3, #10
   62ec8:	ldr	r0, [r4, #4]
   62ecc:	ldr	r1, [r2]
   62ed0:	str	r3, [r6, #4]
   62ed4:	str	ip, [r6]
   62ed8:	mov	r2, r6
   62edc:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   62ee0:	mvn	r3, #2
   62ee4:	str	r3, [r0, #4]
   62ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   62eec:	mov	r0, r4
   62ef0:	bl	15358 <_start@@Base+0x1fa8>
   62ef4:	ldr	r3, [r4, #44]	; 0x2c
   62ef8:	b	62dec <luaopen_ffi@@Base+0x414>
   62efc:	mov	r1, #1
   62f00:	mov	r0, r8
   62f04:	bl	2ff68 <luaL_where@@Base+0xfe64>
   62f08:	mov	r3, r0
   62f0c:	b	62dc8 <luaopen_ffi@@Base+0x3f0>
   62f10:	cmp	r1, r3
   62f14:	beq	62fe8 <luaopen_ffi@@Base+0x610>
   62f18:	mov	r2, #48	; 0x30
   62f1c:	strb	r2, [r3], #1
   62f20:	ldr	r2, [r4, #24]
   62f24:	ldr	r1, [r4, #28]
   62f28:	str	r3, [r4, #44]	; 0x2c
   62f2c:	cmp	r2, r1
   62f30:	bcs	62f8c <luaopen_ffi@@Base+0x5b4>
   62f34:	add	r1, r2, #1
   62f38:	str	r1, [r4, #24]
   62f3c:	ldrb	r5, [r2]
   62f40:	orr	r2, r5, #32
   62f44:	cmp	r2, #120	; 0x78
   62f48:	str	r5, [r4, #32]
   62f4c:	moveq	r7, #112	; 0x70
   62f50:	movne	r7, #101	; 0x65
   62f54:	ldr	r1, [r4, #48]	; 0x30
   62f58:	b	62db8 <luaopen_ffi@@Base+0x3e0>
   62f5c:	mvn	r3, #13
   62f60:	str	r3, [r6, #4]
   62f64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   62f68:	ldr	r3, [r7, #20]
   62f6c:	ldr	r8, [r7, #28]
   62f70:	mov	r0, r7
   62f74:	sub	r8, r3, r8
   62f78:	bl	629d8 <luaopen_ffi@@Base>
   62f7c:	ldr	r3, [r7, #28]
   62f80:	add	r3, r3, r8
   62f84:	str	r3, [r7, #20]
   62f88:	b	62e88 <luaopen_ffi@@Base+0x4b0>
   62f8c:	mov	r0, r4
   62f90:	bl	15358 <_start@@Base+0x1fa8>
   62f94:	ldr	r3, [r4, #44]	; 0x2c
   62f98:	mov	r5, r0
   62f9c:	b	62f40 <luaopen_ffi@@Base+0x568>
   62fa0:	mov	r0, r8
   62fa4:	mov	r1, #1
   62fa8:	bl	2ff68 <luaL_where@@Base+0xfe64>
   62fac:	b	62e3c <luaopen_ffi@@Base+0x464>
   62fb0:	mov	r1, #24
   62fb4:	mov	r0, r7
   62fb8:	bl	32a24 <luaL_where@@Base+0x12920>
   62fbc:	mov	r3, #10
   62fc0:	mov	r1, #0
   62fc4:	mov	ip, r0
   62fc8:	mov	r0, #0
   62fcc:	strb	r3, [ip, #5]
   62fd0:	mov	r3, #16
   62fd4:	strd	r0, [ip, #8]
   62fd8:	strh	r3, [ip, #6]
   62fdc:	ldrd	r2, [r6]
   62fe0:	strd	r2, [ip, #16]
   62fe4:	b	62ec0 <luaopen_ffi@@Base+0x4e8>
   62fe8:	mov	r1, #1
   62fec:	mov	r0, r8
   62ff0:	bl	2ff68 <luaL_where@@Base+0xfe64>
   62ff4:	mov	r3, r0
   62ff8:	b	62f18 <luaopen_ffi@@Base+0x540>
   62ffc:	mov	r0, r4
   63000:	ldr	r2, [pc, #8]	; 63010 <luaopen_ffi@@Base+0x638>
   63004:	ldr	r1, [pc, #8]	; 63014 <luaopen_ffi@@Base+0x63c>
   63008:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   6300c:			; <UNDEFINED> instruction: 0x0006ecb8
   63010:	andeq	r0, r0, r1, lsr #17
   63014:	andeq	r0, r0, lr, lsl r1
   63018:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6301c:	mov	r4, r0
   63020:	ldr	r6, [pc, #4072]	; 64010 <luaopen_ffi@@Base+0x1638>
   63024:	ldr	fp, [r0, #32]
   63028:	ldr	r3, [r0, #52]	; 0x34
   6302c:	sub	sp, sp, #12
   63030:	mov	r9, r1
   63034:	add	r8, r0, #44	; 0x2c
   63038:	str	r3, [r0, #44]	; 0x2c
   6303c:	add	r3, r6, fp
   63040:	ldrb	r3, [r3, #189]	; 0xbd
   63044:	tst	r3, #128	; 0x80
   63048:	bne	63f14 <luaopen_ffi@@Base+0x153c>
   6304c:	add	r3, fp, #1
   63050:	cmp	r3, #127	; 0x7f
   63054:	ldrls	pc, [pc, r3, lsl #2]
   63058:	b	63bec <luaopen_ffi@@Base+0x1214>
   6305c:	andeq	r3, r6, ip, asr r2
   63060:	andeq	r3, r6, ip, ror #23
   63064:	andeq	r3, r6, ip, ror #23
   63068:	andeq	r3, r6, ip, ror #23
   6306c:	andeq	r3, r6, ip, ror #23
   63070:	andeq	r3, r6, ip, ror #23
   63074:	andeq	r3, r6, ip, ror #23
   63078:	andeq	r3, r6, ip, ror #23
   6307c:	andeq	r3, r6, ip, ror #23
   63080:	andeq	r3, r6, ip, ror #23
   63084:	andeq	r3, r6, ip, ror #4
   63088:	muleq	r6, r0, r2
   6308c:	andeq	r3, r6, ip, ror #4
   63090:	andeq	r3, r6, ip, ror #4
   63094:	muleq	r6, r0, r2
   63098:	andeq	r3, r6, ip, ror #23
   6309c:	andeq	r3, r6, ip, ror #23
   630a0:	andeq	r3, r6, ip, ror #23
   630a4:	andeq	r3, r6, ip, ror #23
   630a8:	andeq	r3, r6, ip, ror #23
   630ac:	andeq	r3, r6, ip, ror #23
   630b0:	andeq	r3, r6, ip, ror #23
   630b4:	andeq	r3, r6, ip, ror #23
   630b8:	andeq	r3, r6, ip, ror #23
   630bc:	andeq	r3, r6, ip, ror #23
   630c0:	andeq	r3, r6, ip, ror #23
   630c4:	andeq	r3, r6, ip, ror #23
   630c8:	andeq	r3, r6, ip, ror #23
   630cc:	andeq	r3, r6, ip, ror #23
   630d0:	andeq	r3, r6, ip, ror #23
   630d4:	andeq	r3, r6, ip, ror #23
   630d8:	andeq	r3, r6, ip, ror #23
   630dc:	andeq	r3, r6, ip, ror #23
   630e0:	andeq	r3, r6, ip, ror #4
   630e4:	andeq	r3, r6, ip, ror #23
   630e8:	andeq	r3, r6, r0, lsr #5
   630ec:	andeq	r3, r6, ip, ror #23
   630f0:	andeq	r3, r6, ip, ror #23
   630f4:	andeq	r3, r6, ip, ror #23
   630f8:	andeq	r3, r6, ip, ror #23
   630fc:	andeq	r3, r6, r0, lsr #5
   63100:	andeq	r3, r6, ip, ror #23
   63104:	andeq	r3, r6, ip, ror #23
   63108:	andeq	r3, r6, ip, ror #23
   6310c:	andeq	r3, r6, ip, ror #23
   63110:	andeq	r3, r6, ip, ror #23
   63114:	andeq	r3, r6, r4, lsl r8
   63118:	ldrdeq	r3, [r6], -ip
   6311c:	andeq	r3, r6, ip, ror #23
   63120:	andeq	r3, r6, ip, ror #23
   63124:	andeq	r3, r6, ip, ror #23
   63128:	andeq	r3, r6, ip, ror #23
   6312c:	andeq	r3, r6, ip, ror #23
   63130:	andeq	r3, r6, ip, ror #23
   63134:	andeq	r3, r6, ip, ror #23
   63138:	andeq	r3, r6, ip, ror #23
   6313c:	andeq	r3, r6, ip, ror #23
   63140:	andeq	r3, r6, ip, ror #23
   63144:	andeq	r3, r6, ip, ror #23
   63148:	andeq	r3, r6, r8, asr #18
   6314c:	andeq	r3, r6, ip, ror #23
   63150:	muleq	r6, ip, r9
   63154:	strdeq	r3, [r6], -r0
   63158:	andeq	r3, r6, r4, asr #20
   6315c:	andeq	r3, r6, ip, ror #23
   63160:	andeq	r3, r6, ip, ror #23
   63164:	andeq	r3, r6, ip, ror #23
   63168:	andeq	r3, r6, ip, ror #23
   6316c:	andeq	r3, r6, ip, ror #23
   63170:	andeq	r3, r6, ip, ror #23
   63174:	andeq	r3, r6, ip, ror #23
   63178:	andeq	r3, r6, ip, ror #23
   6317c:	andeq	r3, r6, ip, ror #23
   63180:	andeq	r3, r6, ip, ror #23
   63184:	andeq	r3, r6, ip, ror #23
   63188:	andeq	r3, r6, ip, ror #23
   6318c:	andeq	r3, r6, ip, ror #23
   63190:	andeq	r3, r6, ip, ror #23
   63194:	andeq	r3, r6, ip, ror #23
   63198:	andeq	r3, r6, ip, ror #23
   6319c:	andeq	r3, r6, ip, ror #23
   631a0:	andeq	r3, r6, ip, ror #23
   631a4:	andeq	r3, r6, ip, ror #23
   631a8:	andeq	r3, r6, ip, ror #23
   631ac:	andeq	r3, r6, ip, ror #23
   631b0:	andeq	r3, r6, ip, ror #23
   631b4:	andeq	r3, r6, ip, ror #23
   631b8:	andeq	r3, r6, ip, ror #23
   631bc:	andeq	r3, r6, ip, ror #23
   631c0:	andeq	r3, r6, ip, ror #23
   631c4:	andeq	r3, r6, ip, ror #23
   631c8:	andeq	r3, r6, ip, ror #23
   631cc:	muleq	r6, r8, sl
   631d0:	andeq	r3, r6, ip, ror #23
   631d4:	andeq	r3, r6, ip, ror #23
   631d8:	andeq	r3, r6, ip, ror #23
   631dc:	andeq	r3, r6, ip, ror #23
   631e0:	andeq	r3, r6, ip, ror #23
   631e4:	andeq	r3, r6, ip, ror #23
   631e8:	andeq	r3, r6, ip, ror #23
   631ec:	andeq	r3, r6, ip, ror #23
   631f0:	andeq	r3, r6, ip, ror #23
   631f4:	andeq	r3, r6, ip, ror #23
   631f8:	andeq	r3, r6, ip, ror #23
   631fc:	andeq	r3, r6, ip, ror #23
   63200:	andeq	r3, r6, ip, ror #23
   63204:	andeq	r3, r6, ip, ror #23
   63208:	andeq	r3, r6, ip, ror #23
   6320c:	andeq	r3, r6, ip, ror #23
   63210:	andeq	r3, r6, ip, ror #23
   63214:	andeq	r3, r6, ip, ror #23
   63218:	andeq	r3, r6, ip, ror #23
   6321c:	andeq	r3, r6, ip, ror #23
   63220:	andeq	r3, r6, ip, ror #23
   63224:	andeq	r3, r6, ip, ror #23
   63228:	andeq	r3, r6, ip, ror #23
   6322c:	andeq	r3, r6, ip, ror #23
   63230:	andeq	r3, r6, ip, ror #23
   63234:	andeq	r3, r6, ip, ror #23
   63238:	andeq	r3, r6, ip, ror #23
   6323c:	andeq	r3, r6, ip, ror #23
   63240:	andeq	r3, r6, ip, ror #23
   63244:	andeq	r3, r6, ip, ror #23
   63248:	andeq	r3, r6, ip, ror #23
   6324c:	andeq	r3, r6, ip, ror #23
   63250:	andeq	r3, r6, ip, ror #23
   63254:	andeq	r3, r6, ip, ror #23
   63258:	andeq	r3, r6, r4, asr #21
   6325c:	ldr	fp, [pc, #3504]	; 64014 <luaopen_ffi@@Base+0x163c>
   63260:	mov	r0, fp
   63264:	add	sp, sp, #12
   63268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6326c:	ldr	r3, [r4, #24]
   63270:	ldr	r2, [r4, #28]
   63274:	cmp	r3, r2
   63278:	bcs	63ee0 <luaopen_ffi@@Base+0x1508>
   6327c:	add	r2, r3, #1
   63280:	str	r2, [r4, #24]
   63284:	ldrb	fp, [r3]
   63288:	str	fp, [r4, #32]
   6328c:	b	6303c <luaopen_ffi@@Base+0x664>
   63290:	mov	r0, r4
   63294:	bl	4ef80 <luaL_error@@Base+0x8e94>
   63298:	ldr	fp, [r4, #32]
   6329c:	b	6303c <luaopen_ffi@@Base+0x664>
   632a0:	ldr	r0, [r4, #44]	; 0x2c
   632a4:	ldr	r3, [r4, #48]	; 0x30
   632a8:	cmp	r3, r0
   632ac:	beq	64088 <luaopen_ffi@@Base+0x16b0>
   632b0:	uxtb	r3, fp
   632b4:	strb	r3, [r0], #1
   632b8:	str	r3, [sp]
   632bc:	ldr	r1, [r4, #28]
   632c0:	ldr	r3, [r4, #24]
   632c4:	str	r0, [r4, #44]	; 0x2c
   632c8:	cmp	r3, r1
   632cc:	bcs	63e88 <luaopen_ffi@@Base+0x14b0>
   632d0:	add	r1, r3, #1
   632d4:	str	r1, [r4, #24]
   632d8:	ldrb	r5, [r3]
   632dc:	ldr	r7, [pc, #3380]	; 64018 <luaopen_ffi@@Base+0x1640>
   632e0:	ldr	sl, [pc, #3380]	; 6401c <luaopen_ffi@@Base+0x1644>
   632e4:	str	r5, [r4, #32]
   632e8:	cmp	r5, fp
   632ec:	beq	63c64 <luaopen_ffi@@Base+0x128c>
   632f0:	cmp	r5, #10
   632f4:	beq	640e0 <luaopen_ffi@@Base+0x1708>
   632f8:	ble	63c10 <luaopen_ffi@@Base+0x1238>
   632fc:	cmp	r5, #13
   63300:	beq	640e0 <luaopen_ffi@@Base+0x1708>
   63304:	cmp	r5, #92	; 0x5c
   63308:	bne	63c18 <luaopen_ffi@@Base+0x1240>
   6330c:	ldr	r3, [r4, #24]
   63310:	ldr	r1, [r4, #28]
   63314:	cmp	r3, r1
   63318:	bcs	63c48 <luaopen_ffi@@Base+0x1270>
   6331c:	add	r1, r3, #1
   63320:	str	r1, [r4, #24]
   63324:	ldrb	r0, [r3]
   63328:	add	r3, r0, #1
   6332c:	str	r0, [r4, #32]
   63330:	cmp	r3, #123	; 0x7b
   63334:	ldrls	pc, [pc, r3, lsl #2]
   63338:	b	63b18 <luaopen_ffi@@Base+0x1140>
   6333c:	andeq	r3, r6, ip, asr sp
   63340:	andeq	r3, r6, r8, lsl fp
   63344:	andeq	r3, r6, r8, lsl fp
   63348:	andeq	r3, r6, r8, lsl fp
   6334c:	andeq	r3, r6, r8, lsl fp
   63350:	andeq	r3, r6, r8, lsl fp
   63354:	andeq	r3, r6, r8, lsl fp
   63358:	andeq	r3, r6, r8, lsl fp
   6335c:	andeq	r3, r6, r8, lsl fp
   63360:	andeq	r3, r6, r8, lsl fp
   63364:	andeq	r3, r6, r8, lsl fp
   63368:	andeq	r3, r6, r8, ror r7
   6336c:	andeq	r3, r6, r8, lsl fp
   63370:	andeq	r3, r6, r8, lsl fp
   63374:	andeq	r3, r6, r8, ror r7
   63378:	andeq	r3, r6, r8, lsl fp
   6337c:	andeq	r3, r6, r8, lsl fp
   63380:	andeq	r3, r6, r8, lsl fp
   63384:	andeq	r3, r6, r8, lsl fp
   63388:	andeq	r3, r6, r8, lsl fp
   6338c:	andeq	r3, r6, r8, lsl fp
   63390:	andeq	r3, r6, r8, lsl fp
   63394:	andeq	r3, r6, r8, lsl fp
   63398:	andeq	r3, r6, r8, lsl fp
   6339c:	andeq	r3, r6, r8, lsl fp
   633a0:	andeq	r3, r6, r8, lsl fp
   633a4:	andeq	r3, r6, r8, lsl fp
   633a8:	andeq	r3, r6, r8, lsl fp
   633ac:	andeq	r3, r6, r8, lsl fp
   633b0:	andeq	r3, r6, r8, lsl fp
   633b4:	andeq	r3, r6, r8, lsl fp
   633b8:	andeq	r3, r6, r8, lsl fp
   633bc:	andeq	r3, r6, r8, lsl fp
   633c0:	andeq	r3, r6, r8, lsl fp
   633c4:	andeq	r3, r6, r8, lsl fp
   633c8:	strdeq	r3, [r6], -r4
   633cc:	andeq	r3, r6, r8, lsl fp
   633d0:	andeq	r3, r6, r8, lsl fp
   633d4:	andeq	r3, r6, r8, lsl fp
   633d8:	andeq	r3, r6, r8, lsl fp
   633dc:	strdeq	r3, [r6], -r4
   633e0:	andeq	r3, r6, r8, lsl fp
   633e4:	andeq	r3, r6, r8, lsl fp
   633e8:	andeq	r3, r6, r8, lsl fp
   633ec:	andeq	r3, r6, r8, lsl fp
   633f0:	andeq	r3, r6, r8, lsl fp
   633f4:	andeq	r3, r6, r8, lsl fp
   633f8:	andeq	r3, r6, r8, lsl fp
   633fc:	andeq	r3, r6, r8, lsl fp
   63400:	andeq	r3, r6, r8, lsl fp
   63404:	andeq	r3, r6, r8, lsl fp
   63408:	andeq	r3, r6, r8, lsl fp
   6340c:	andeq	r3, r6, r8, lsl fp
   63410:	andeq	r3, r6, r8, lsl fp
   63414:	andeq	r3, r6, r8, lsl fp
   63418:	andeq	r3, r6, r8, lsl fp
   6341c:	andeq	r3, r6, r8, lsl fp
   63420:	andeq	r3, r6, r8, lsl fp
   63424:	andeq	r3, r6, r8, lsl fp
   63428:	andeq	r3, r6, r8, lsl fp
   6342c:	andeq	r3, r6, r8, lsl fp
   63430:	andeq	r3, r6, r8, lsl fp
   63434:	andeq	r3, r6, r8, lsl fp
   63438:	andeq	r3, r6, r8, lsl fp
   6343c:	andeq	r3, r6, r8, lsl fp
   63440:	andeq	r3, r6, r8, lsl fp
   63444:	andeq	r3, r6, r8, lsl fp
   63448:	andeq	r3, r6, r8, lsl fp
   6344c:	andeq	r3, r6, r8, lsl fp
   63450:	andeq	r3, r6, r8, lsl fp
   63454:	andeq	r3, r6, r8, lsl fp
   63458:	andeq	r3, r6, r8, lsl fp
   6345c:	andeq	r3, r6, r8, lsl fp
   63460:	andeq	r3, r6, r8, lsl fp
   63464:	andeq	r3, r6, r8, lsl fp
   63468:	andeq	r3, r6, r8, lsl fp
   6346c:	andeq	r3, r6, r8, lsl fp
   63470:	andeq	r3, r6, r8, lsl fp
   63474:	andeq	r3, r6, r8, lsl fp
   63478:	andeq	r3, r6, r8, lsl fp
   6347c:	andeq	r3, r6, r8, lsl fp
   63480:	andeq	r3, r6, r8, lsl fp
   63484:	andeq	r3, r6, r8, lsl fp
   63488:	andeq	r3, r6, r8, lsl fp
   6348c:	andeq	r3, r6, r8, lsl fp
   63490:	andeq	r3, r6, r8, lsl fp
   63494:	andeq	r3, r6, r8, lsl fp
   63498:	andeq	r3, r6, r8, lsl fp
   6349c:	andeq	r3, r6, r8, lsl fp
   634a0:	andeq	r3, r6, r8, lsl fp
   634a4:	andeq	r3, r6, r8, lsl fp
   634a8:	andeq	r3, r6, r8, lsl fp
   634ac:	andeq	r3, r6, r8, lsl fp
   634b0:	strdeq	r3, [r6], -r4
   634b4:	andeq	r3, r6, r8, lsl fp
   634b8:	andeq	r3, r6, r8, lsl fp
   634bc:	andeq	r3, r6, r8, lsl fp
   634c0:	andeq	r3, r6, r8, lsl fp
   634c4:	andeq	r3, r6, r4, ror #15
   634c8:	ldrdeq	r3, [r6], -r4
   634cc:	andeq	r3, r6, r8, lsl fp
   634d0:	andeq	r3, r6, r8, lsl fp
   634d4:	andeq	r3, r6, r8, lsl fp
   634d8:	andeq	r3, r6, r4, asr #15
   634dc:	andeq	r3, r6, r8, lsl fp
   634e0:	andeq	r3, r6, r8, lsl fp
   634e4:	andeq	r3, r6, r8, lsl fp
   634e8:	andeq	r3, r6, r8, lsl fp
   634ec:	andeq	r3, r6, r8, lsl fp
   634f0:	andeq	r3, r6, r8, lsl fp
   634f4:	andeq	r3, r6, r8, lsl fp
   634f8:			; <UNDEFINED> instruction: 0x000637b4
   634fc:	andeq	r3, r6, r8, lsl fp
   63500:	andeq	r3, r6, r8, lsl fp
   63504:	andeq	r3, r6, r8, lsl fp
   63508:	andeq	r3, r6, r4, lsr #15
   6350c:	andeq	r3, r6, r8, lsl fp
   63510:	andeq	r3, r6, r4, lsl #16
   63514:	andeq	r3, r6, r4, asr r6
   63518:	andeq	r3, r6, r4, asr #12
   6351c:	andeq	r3, r6, r8, lsl fp
   63520:	andeq	r3, r6, r8, ror r5
   63524:	andeq	r3, r6, r8, lsl fp
   63528:	andeq	r3, r6, ip, lsr #10
   6352c:	ldr	r3, [r4, #24]
   63530:	ldr	r1, [r4, #28]
   63534:	cmp	r3, r1
   63538:	bcs	63c54 <luaopen_ffi@@Base+0x127c>
   6353c:	add	r1, r3, #1
   63540:	str	r1, [r4, #24]
   63544:	ldrb	r5, [r3]
   63548:	str	r5, [r4, #32]
   6354c:	add	r3, r6, r5
   63550:	ldrb	r3, [r3, #189]	; 0xbd
   63554:	tst	r3, #2
   63558:	beq	632e8 <luaopen_ffi@@Base+0x910>
   6355c:	cmp	r5, #13
   63560:	cmpne	r5, #10
   63564:	bne	6352c <luaopen_ffi@@Base+0xb54>
   63568:	mov	r0, r4
   6356c:	bl	4ef80 <luaL_error@@Base+0x8e94>
   63570:	ldr	r5, [r4, #32]
   63574:	b	6354c <luaopen_ffi@@Base+0xb74>
   63578:	ldr	r3, [r4, #24]
   6357c:	ldr	r1, [r4, #28]
   63580:	cmp	r3, r1
   63584:	bcs	63cec <luaopen_ffi@@Base+0x1314>
   63588:	add	r1, r3, #1
   6358c:	str	r1, [r4, #24]
   63590:	ldrb	r0, [r3]
   63594:	add	r3, r6, r0
   63598:	str	r0, [r4, #32]
   6359c:	ldrb	r3, [r3, #189]	; 0xbd
   635a0:	lsl	r0, r0, #4
   635a4:	tst	r3, #8
   635a8:	uxtb	r5, r0
   635ac:	bne	635bc <luaopen_ffi@@Base+0xbe4>
   635b0:	tst	r3, #16
   635b4:	beq	640d0 <luaopen_ffi@@Base+0x16f8>
   635b8:	add	r5, r5, #144	; 0x90
   635bc:	ldr	r3, [r4, #24]
   635c0:	ldr	r1, [r4, #28]
   635c4:	cmp	r3, r1
   635c8:	bcs	63ce0 <luaopen_ffi@@Base+0x1308>
   635cc:	add	r1, r3, #1
   635d0:	str	r1, [r4, #24]
   635d4:	ldrb	r0, [r3]
   635d8:	add	r3, r6, r0
   635dc:	str	r0, [r4, #32]
   635e0:	ldrb	r3, [r3, #189]	; 0xbd
   635e4:	and	r0, r0, #15
   635e8:	add	r0, r0, r5
   635ec:	tst	r3, #8
   635f0:	bne	63cd0 <luaopen_ffi@@Base+0x12f8>
   635f4:	tst	r3, #16
   635f8:	beq	640d0 <luaopen_ffi@@Base+0x16f8>
   635fc:	add	r5, r0, #9
   63600:	ldr	r3, [r4, #48]	; 0x30
   63604:	ldr	r1, [r4, #44]	; 0x2c
   63608:	uxtb	r5, r5
   6360c:	cmp	r3, r1
   63610:	movne	r0, r1
   63614:	beq	63c28 <luaopen_ffi@@Base+0x1250>
   63618:	strb	r5, [r0], #1
   6361c:	ldr	r3, [r4, #24]
   63620:	ldr	r1, [r4, #28]
   63624:	str	r0, [r4, #44]	; 0x2c
   63628:	cmp	r3, r1
   6362c:	bcs	63c38 <luaopen_ffi@@Base+0x1260>
   63630:	add	r1, r3, #1
   63634:	str	r1, [r4, #24]
   63638:	ldrb	r5, [r3]
   6363c:	str	r5, [r4, #32]
   63640:	b	632e8 <luaopen_ffi@@Base+0x910>
   63644:	ldr	r3, [r4, #48]	; 0x30
   63648:	ldr	r1, [r4, #44]	; 0x2c
   6364c:	mov	r5, #11
   63650:	b	6360c <luaopen_ffi@@Base+0xc34>
   63654:	ldr	r3, [r4, #24]
   63658:	ldr	r1, [r4, #28]
   6365c:	cmp	r3, r1
   63660:	bcs	63d10 <luaopen_ffi@@Base+0x1338>
   63664:	add	r1, r3, #1
   63668:	str	r1, [r4, #24]
   6366c:	ldrb	r0, [r3]
   63670:	cmp	r0, #123	; 0x7b
   63674:	str	r0, [r4, #32]
   63678:	bne	640d0 <luaopen_ffi@@Base+0x16f8>
   6367c:	ldr	r3, [r4, #24]
   63680:	ldr	r1, [r4, #28]
   63684:	cmp	r3, r1
   63688:	bcs	63d04 <luaopen_ffi@@Base+0x132c>
   6368c:	add	r1, r3, #1
   63690:	str	r1, [r4, #24]
   63694:	ldrb	r0, [r3]
   63698:	mov	r5, #0
   6369c:	str	r0, [r4, #32]
   636a0:	b	636bc <luaopen_ffi@@Base+0xce4>
   636a4:	add	r1, r3, #1
   636a8:	str	r1, [r4, #24]
   636ac:	ldrb	r0, [r3]
   636b0:	cmp	r0, #125	; 0x7d
   636b4:	str	r0, [r4, #32]
   636b8:	beq	6370c <luaopen_ffi@@Base+0xd34>
   636bc:	add	r3, r6, r0
   636c0:	and	r0, r0, #15
   636c4:	ldrb	r3, [r3, #189]	; 0xbd
   636c8:	orr	r5, r0, r5, lsl #4
   636cc:	tst	r3, #8
   636d0:	bne	636e0 <luaopen_ffi@@Base+0xd08>
   636d4:	tst	r3, #16
   636d8:	beq	640d0 <luaopen_ffi@@Base+0x16f8>
   636dc:	add	r5, r5, #9
   636e0:	cmp	r5, r7
   636e4:	bgt	640d0 <luaopen_ffi@@Base+0x16f8>
   636e8:	ldr	r3, [r4, #24]
   636ec:	ldr	r1, [r4, #28]
   636f0:	cmp	r3, r1
   636f4:	bcc	636a4 <luaopen_ffi@@Base+0xccc>
   636f8:	mov	r0, r4
   636fc:	bl	15358 <_start@@Base+0x1fa8>
   63700:	cmp	r0, #125	; 0x7d
   63704:	str	r0, [r4, #32]
   63708:	bne	636bc <luaopen_ffi@@Base+0xce4>
   6370c:	cmp	r5, sl
   63710:	ble	63d1c <luaopen_ffi@@Base+0x1344>
   63714:	cmp	r5, #65536	; 0x10000
   63718:	bge	63dbc <luaopen_ffi@@Base+0x13e4>
   6371c:	sub	r3, r5, #55296	; 0xd800
   63720:	cmp	r3, sl
   63724:	bls	640d0 <luaopen_ffi@@Base+0x16f8>
   63728:	ldrd	r0, [r4, #44]	; 0x2c
   6372c:	asr	r3, r5, #12
   63730:	orr	r3, r3, #224	; 0xe0
   63734:	cmp	r1, r0
   63738:	beq	63df4 <luaopen_ffi@@Base+0x141c>
   6373c:	strb	r3, [r0], #1
   63740:	ldr	r1, [r4, #48]	; 0x30
   63744:	asr	r3, r5, #6
   63748:	and	r3, r3, #63	; 0x3f
   6374c:	cmp	r1, r0
   63750:	str	r0, [r4, #44]	; 0x2c
   63754:	orr	r3, r3, #128	; 0x80
   63758:	beq	63fe0 <luaopen_ffi@@Base+0x1608>
   6375c:	mov	r1, r0
   63760:	and	r5, r5, #63	; 0x3f
   63764:	strb	r3, [r1], #1
   63768:	orr	r5, r5, #128	; 0x80
   6376c:	str	r1, [r4, #44]	; 0x2c
   63770:	ldr	r3, [r4, #48]	; 0x30
   63774:	b	6360c <luaopen_ffi@@Base+0xc34>
   63778:	ldr	r3, [r4, #44]	; 0x2c
   6377c:	ldr	r1, [r4, #48]	; 0x30
   63780:	cmp	r1, r3
   63784:	beq	63fbc <luaopen_ffi@@Base+0x15e4>
   63788:	mov	r1, #10
   6378c:	strb	r1, [r3], #1
   63790:	mov	r0, r4
   63794:	str	r3, [r4, #44]	; 0x2c
   63798:	bl	4ef80 <luaL_error@@Base+0x8e94>
   6379c:	ldr	r5, [r4, #32]
   637a0:	b	632e8 <luaopen_ffi@@Base+0x910>
   637a4:	ldr	r3, [r4, #48]	; 0x30
   637a8:	ldr	r1, [r4, #44]	; 0x2c
   637ac:	mov	r5, #13
   637b0:	b	6360c <luaopen_ffi@@Base+0xc34>
   637b4:	ldr	r3, [r4, #48]	; 0x30
   637b8:	ldr	r1, [r4, #44]	; 0x2c
   637bc:	mov	r5, #10
   637c0:	b	6360c <luaopen_ffi@@Base+0xc34>
   637c4:	ldr	r3, [r4, #48]	; 0x30
   637c8:	ldr	r1, [r4, #44]	; 0x2c
   637cc:	mov	r5, #12
   637d0:	b	6360c <luaopen_ffi@@Base+0xc34>
   637d4:	ldr	r3, [r4, #48]	; 0x30
   637d8:	ldr	r1, [r4, #44]	; 0x2c
   637dc:	mov	r5, #8
   637e0:	b	6360c <luaopen_ffi@@Base+0xc34>
   637e4:	ldr	r3, [r4, #48]	; 0x30
   637e8:	ldr	r1, [r4, #44]	; 0x2c
   637ec:	mov	r5, #7
   637f0:	b	6360c <luaopen_ffi@@Base+0xc34>
   637f4:	ldr	r3, [r4, #48]	; 0x30
   637f8:	ldr	r1, [r4, #44]	; 0x2c
   637fc:	uxtb	r5, r0
   63800:	b	6360c <luaopen_ffi@@Base+0xc34>
   63804:	ldr	r3, [r4, #48]	; 0x30
   63808:	ldr	r1, [r4, #44]	; 0x2c
   6380c:	mov	r5, #9
   63810:	b	6360c <luaopen_ffi@@Base+0xc34>
   63814:	ldr	r3, [r4, #24]
   63818:	ldr	r2, [r4, #28]
   6381c:	cmp	r3, r2
   63820:	bcs	63ebc <luaopen_ffi@@Base+0x14e4>
   63824:	add	r2, r3, #1
   63828:	str	r2, [r4, #24]
   6382c:	ldrb	r0, [r3]
   63830:	cmp	r0, #45	; 0x2d
   63834:	str	r0, [r4, #32]
   63838:	bne	640f0 <luaopen_ffi@@Base+0x1718>
   6383c:	ldr	r3, [r4, #24]
   63840:	ldr	r2, [r4, #28]
   63844:	cmp	r3, r2
   63848:	bcs	63ef0 <luaopen_ffi@@Base+0x1518>
   6384c:	add	r2, r3, #1
   63850:	str	r2, [r4, #24]
   63854:	ldrb	fp, [r3]
   63858:	cmp	fp, #91	; 0x5b
   6385c:	str	fp, [r4, #32]
   63860:	beq	63d6c <luaopen_ffi@@Base+0x1394>
   63864:	cmp	fp, #13
   63868:	cmpne	fp, #10
   6386c:	movne	r3, #1
   63870:	moveq	r3, #0
   63874:	adds	r5, fp, #1
   63878:	movne	r5, #1
   6387c:	ands	r5, r5, r3
   63880:	bne	638b4 <luaopen_ffi@@Base+0xedc>
   63884:	b	6303c <luaopen_ffi@@Base+0x664>
   63888:	add	r2, r3, #1
   6388c:	str	r2, [r4, #24]
   63890:	ldrb	fp, [r3]
   63894:	mov	r1, r5
   63898:	cmp	fp, #10
   6389c:	cmpne	fp, #13
   638a0:	movne	r3, #1
   638a4:	moveq	r3, #0
   638a8:	tst	r1, r3
   638ac:	str	fp, [r4, #32]
   638b0:	beq	6303c <luaopen_ffi@@Base+0x664>
   638b4:	ldr	r3, [r4, #24]
   638b8:	ldr	r2, [r4, #28]
   638bc:	cmp	r3, r2
   638c0:	bcc	63888 <luaopen_ffi@@Base+0xeb0>
   638c4:	mov	r0, r4
   638c8:	bl	15358 <_start@@Base+0x1fa8>
   638cc:	adds	r1, r0, #1
   638d0:	mov	fp, r0
   638d4:	movne	r1, #1
   638d8:	b	63898 <luaopen_ffi@@Base+0xec0>
   638dc:	ldr	r0, [r4, #44]	; 0x2c
   638e0:	ldr	r3, [r4, #48]	; 0x30
   638e4:	cmp	r3, r0
   638e8:	beq	64078 <luaopen_ffi@@Base+0x16a0>
   638ec:	mov	r3, #46	; 0x2e
   638f0:	strb	r3, [r0], #1
   638f4:	ldr	r3, [r4, #24]
   638f8:	ldr	r2, [r4, #28]
   638fc:	str	r0, [r4, #44]	; 0x2c
   63900:	cmp	r3, r2
   63904:	bcs	63eb0 <luaopen_ffi@@Base+0x14d8>
   63908:	add	r2, r3, #1
   6390c:	str	r2, [r4, #24]
   63910:	ldrb	r0, [r3]
   63914:	cmp	r0, #46	; 0x2e
   63918:	str	r0, [r4, #32]
   6391c:	beq	63e1c <luaopen_ffi@@Base+0x1444>
   63920:	add	r6, r6, r0
   63924:	ldrb	r3, [r6, #189]	; 0xbd
   63928:	tst	r3, #8
   6392c:	moveq	fp, #46	; 0x2e
   63930:	beq	63260 <luaopen_ffi@@Base+0x888>
   63934:	mov	r1, r9
   63938:	mov	r0, r4
   6393c:	bl	62d8c <luaopen_ffi@@Base+0x3b4>
   63940:	ldr	fp, [pc, #1752]	; 64020 <luaopen_ffi@@Base+0x1648>
   63944:	b	63260 <luaopen_ffi@@Base+0x888>
   63948:	ldr	r3, [r4, #24]
   6394c:	ldr	r2, [r4, #28]
   63950:	cmp	r3, r2
   63954:	bcs	63ed4 <luaopen_ffi@@Base+0x14fc>
   63958:	add	r2, r3, #1
   6395c:	str	r2, [r4, #24]
   63960:	ldrb	r0, [r3]
   63964:	cmp	r0, #58	; 0x3a
   63968:	str	r0, [r4, #32]
   6396c:	movne	fp, #58	; 0x3a
   63970:	bne	63260 <luaopen_ffi@@Base+0x888>
   63974:	ldr	r3, [r4, #24]
   63978:	ldr	r2, [r4, #28]
   6397c:	cmp	r3, r2
   63980:	bcs	64060 <luaopen_ffi@@Base+0x1688>
   63984:	add	r2, r3, #1
   63988:	str	r2, [r4, #24]
   6398c:	ldrb	r0, [r3]
   63990:	str	r0, [r4, #32]
   63994:	ldr	fp, [pc, #1672]	; 64024 <luaopen_ffi@@Base+0x164c>
   63998:	b	63260 <luaopen_ffi@@Base+0x888>
   6399c:	ldr	r3, [r4, #24]
   639a0:	ldr	r2, [r4, #28]
   639a4:	cmp	r3, r2
   639a8:	bcs	63ec8 <luaopen_ffi@@Base+0x14f0>
   639ac:	add	r2, r3, #1
   639b0:	str	r2, [r4, #24]
   639b4:	ldrb	r0, [r3]
   639b8:	cmp	r0, #61	; 0x3d
   639bc:	str	r0, [r4, #32]
   639c0:	movne	fp, #60	; 0x3c
   639c4:	bne	63260 <luaopen_ffi@@Base+0x888>
   639c8:	ldr	r3, [r4, #24]
   639cc:	ldr	r2, [r4, #28]
   639d0:	cmp	r3, r2
   639d4:	bcs	64054 <luaopen_ffi@@Base+0x167c>
   639d8:	add	r2, r3, #1
   639dc:	str	r2, [r4, #24]
   639e0:	ldrb	r0, [r3]
   639e4:	str	r0, [r4, #32]
   639e8:	ldr	fp, [pc, #1592]	; 64028 <luaopen_ffi@@Base+0x1650>
   639ec:	b	63260 <luaopen_ffi@@Base+0x888>
   639f0:	ldr	r3, [r4, #24]
   639f4:	ldr	r2, [r4, #28]
   639f8:	cmp	r3, r2
   639fc:	bcs	63e70 <luaopen_ffi@@Base+0x1498>
   63a00:	add	r2, r3, #1
   63a04:	str	r2, [r4, #24]
   63a08:	ldrb	r0, [r3]
   63a0c:	cmp	r0, #61	; 0x3d
   63a10:	str	r0, [r4, #32]
   63a14:	movne	fp, #61	; 0x3d
   63a18:	bne	63260 <luaopen_ffi@@Base+0x888>
   63a1c:	ldr	r3, [r4, #24]
   63a20:	ldr	r2, [r4, #28]
   63a24:	cmp	r3, r2
   63a28:	bcs	64048 <luaopen_ffi@@Base+0x1670>
   63a2c:	add	r2, r3, #1
   63a30:	str	r2, [r4, #24]
   63a34:	ldrb	r0, [r3]
   63a38:	str	r0, [r4, #32]
   63a3c:	ldr	fp, [pc, #1512]	; 6402c <luaopen_ffi@@Base+0x1654>
   63a40:	b	63260 <luaopen_ffi@@Base+0x888>
   63a44:	ldr	r3, [r4, #24]
   63a48:	ldr	r2, [r4, #28]
   63a4c:	cmp	r3, r2
   63a50:	bcs	63ea4 <luaopen_ffi@@Base+0x14cc>
   63a54:	add	r2, r3, #1
   63a58:	str	r2, [r4, #24]
   63a5c:	ldrb	r0, [r3]
   63a60:	cmp	r0, #61	; 0x3d
   63a64:	str	r0, [r4, #32]
   63a68:	movne	fp, #62	; 0x3e
   63a6c:	bne	63260 <luaopen_ffi@@Base+0x888>
   63a70:	ldr	r3, [r4, #24]
   63a74:	ldr	r2, [r4, #28]
   63a78:	cmp	r3, r2
   63a7c:	bcs	64004 <luaopen_ffi@@Base+0x162c>
   63a80:	add	r2, r3, #1
   63a84:	str	r2, [r4, #24]
   63a88:	ldrb	r0, [r3]
   63a8c:	str	r0, [r4, #32]
   63a90:	ldr	fp, [pc, #1432]	; 64030 <luaopen_ffi@@Base+0x1658>
   63a94:	b	63260 <luaopen_ffi@@Base+0x888>
   63a98:	mov	r0, r4
   63a9c:	bl	309d8 <luaL_where@@Base+0x108d4>
   63aa0:	subs	r2, r0, #0
   63aa4:	bge	63f00 <luaopen_ffi@@Base+0x1528>
   63aa8:	cmn	r2, #1
   63aac:	moveq	fp, #91	; 0x5b
   63ab0:	beq	63260 <luaopen_ffi@@Base+0x888>
   63ab4:	mov	r0, r4
   63ab8:	ldr	r2, [pc, #1396]	; 64034 <luaopen_ffi@@Base+0x165c>
   63abc:	mov	r1, #288	; 0x120
   63ac0:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   63ac4:	ldr	r3, [r4, #24]
   63ac8:	ldr	r2, [r4, #28]
   63acc:	cmp	r3, r2
   63ad0:	bcs	63e98 <luaopen_ffi@@Base+0x14c0>
   63ad4:	add	r2, r3, #1
   63ad8:	str	r2, [r4, #24]
   63adc:	ldrb	r0, [r3]
   63ae0:	cmp	r0, #61	; 0x3d
   63ae4:	str	r0, [r4, #32]
   63ae8:	movne	fp, #126	; 0x7e
   63aec:	bne	63260 <luaopen_ffi@@Base+0x888>
   63af0:	ldr	r3, [r4, #24]
   63af4:	ldr	r2, [r4, #28]
   63af8:	cmp	r3, r2
   63afc:	bcs	6406c <luaopen_ffi@@Base+0x1694>
   63b00:	add	r2, r3, #1
   63b04:	str	r2, [r4, #24]
   63b08:	ldrb	r0, [r3]
   63b0c:	str	r0, [r4, #32]
   63b10:	mov	fp, #284	; 0x11c
   63b14:	b	63260 <luaopen_ffi@@Base+0x888>
   63b18:	add	r3, r6, r0
   63b1c:	ldrb	r3, [r3, #189]	; 0xbd
   63b20:	tst	r3, #8
   63b24:	beq	640d0 <luaopen_ffi@@Base+0x16f8>
   63b28:	ldr	r3, [r4, #24]
   63b2c:	ldr	r1, [r4, #28]
   63b30:	sub	r5, r0, #48	; 0x30
   63b34:	cmp	r3, r1
   63b38:	bcs	63cf8 <luaopen_ffi@@Base+0x1320>
   63b3c:	add	r1, r3, #1
   63b40:	str	r1, [r4, #24]
   63b44:	ldrb	r0, [r3]
   63b48:	add	r1, r6, r0
   63b4c:	str	r0, [r4, #32]
   63b50:	ldrb	r1, [r1, #189]	; 0xbd
   63b54:	tst	r1, #8
   63b58:	beq	63bcc <luaopen_ffi@@Base+0x11f4>
   63b5c:	ldr	ip, [r4, #24]
   63b60:	ldr	r1, [r4, #28]
   63b64:	add	r5, r5, r5, lsl #2
   63b68:	sub	r3, r0, #48	; 0x30
   63b6c:	cmp	ip, r1
   63b70:	add	r5, r3, r5, lsl #1
   63b74:	bcs	63db0 <luaopen_ffi@@Base+0x13d8>
   63b78:	add	r3, ip, #1
   63b7c:	str	r3, [r4, #24]
   63b80:	ldrb	r0, [ip]
   63b84:	add	r3, r6, r0
   63b88:	str	r0, [r4, #32]
   63b8c:	ldrb	r3, [r3, #189]	; 0xbd
   63b90:	tst	r3, #8
   63b94:	beq	63bcc <luaopen_ffi@@Base+0x11f4>
   63b98:	add	r5, r5, r5, lsl #2
   63b9c:	sub	r0, r0, #48	; 0x30
   63ba0:	add	r5, r0, r5, lsl #1
   63ba4:	cmp	r5, #255	; 0xff
   63ba8:	bgt	640d0 <luaopen_ffi@@Base+0x16f8>
   63bac:	ldr	r3, [r4, #24]
   63bb0:	ldr	r1, [r4, #28]
   63bb4:	cmp	r3, r1
   63bb8:	bcs	63da4 <luaopen_ffi@@Base+0x13cc>
   63bbc:	add	r1, r3, #1
   63bc0:	str	r1, [r4, #24]
   63bc4:	ldrb	r0, [r3]
   63bc8:	str	r0, [r4, #32]
   63bcc:	ldr	r0, [r4, #44]	; 0x2c
   63bd0:	ldr	r3, [r4, #48]	; 0x30
   63bd4:	cmp	r3, r0
   63bd8:	beq	63fac <luaopen_ffi@@Base+0x15d4>
   63bdc:	strb	r5, [r0], #1
   63be0:	str	r0, [r4, #44]	; 0x2c
   63be4:	ldr	r5, [r4, #32]
   63be8:	b	632e8 <luaopen_ffi@@Base+0x910>
   63bec:	ldr	r3, [r4, #24]
   63bf0:	ldr	r1, [r4, #28]
   63bf4:	cmp	r3, r1
   63bf8:	bcs	63e7c <luaopen_ffi@@Base+0x14a4>
   63bfc:	add	r1, r3, #1
   63c00:	str	r1, [r4, #24]
   63c04:	ldrb	r0, [r3]
   63c08:	str	r0, [r4, #32]
   63c0c:	b	63260 <luaopen_ffi@@Base+0x888>
   63c10:	cmn	r5, #1
   63c14:	beq	63d5c <luaopen_ffi@@Base+0x1384>
   63c18:	ldr	r0, [r4, #44]	; 0x2c
   63c1c:	ldr	r3, [r4, #48]	; 0x30
   63c20:	cmp	r3, r0
   63c24:	bne	63618 <luaopen_ffi@@Base+0xc40>
   63c28:	mov	r1, #1
   63c2c:	mov	r0, r8
   63c30:	bl	2ff68 <luaL_where@@Base+0xfe64>
   63c34:	b	63618 <luaopen_ffi@@Base+0xc40>
   63c38:	mov	r0, r4
   63c3c:	bl	15358 <_start@@Base+0x1fa8>
   63c40:	mov	r5, r0
   63c44:	b	6363c <luaopen_ffi@@Base+0xc64>
   63c48:	mov	r0, r4
   63c4c:	bl	15358 <_start@@Base+0x1fa8>
   63c50:	b	63328 <luaopen_ffi@@Base+0x950>
   63c54:	mov	r0, r4
   63c58:	bl	15358 <_start@@Base+0x1fa8>
   63c5c:	mov	r5, r0
   63c60:	b	63548 <luaopen_ffi@@Base+0xb70>
   63c64:	ldr	r3, [r4, #44]	; 0x2c
   63c68:	ldr	r2, [r4, #48]	; 0x30
   63c6c:	cmp	r2, r3
   63c70:	beq	64098 <luaopen_ffi@@Base+0x16c0>
   63c74:	ldrb	r2, [sp]
   63c78:	strb	r2, [r3], #1
   63c7c:	ldr	r2, [r4, #24]
   63c80:	ldr	r1, [r4, #28]
   63c84:	str	r3, [r4, #44]	; 0x2c
   63c88:	cmp	r2, r1
   63c8c:	bcs	63e0c <luaopen_ffi@@Base+0x1434>
   63c90:	add	r1, r2, #1
   63c94:	str	r1, [r4, #24]
   63c98:	ldrb	r0, [r2]
   63c9c:	ldr	r2, [r4, #52]	; 0x34
   63ca0:	str	r0, [r4, #32]
   63ca4:	sub	r3, r3, r2
   63ca8:	sub	r3, r3, #2
   63cac:	add	r2, r2, #1
   63cb0:	ldr	r1, [r4, #4]
   63cb4:	mov	r0, r4
   63cb8:	bl	3f29c <luaL_typerror@@Base+0x8f30>
   63cbc:	mvn	r3, #4
   63cc0:	str	r3, [r9, #4]
   63cc4:	mov	fp, #288	; 0x120
   63cc8:	str	r0, [r9]
   63ccc:	b	63260 <luaopen_ffi@@Base+0x888>
   63cd0:	uxtb	r5, r0
   63cd4:	ldr	r3, [r4, #48]	; 0x30
   63cd8:	ldr	r1, [r4, #44]	; 0x2c
   63cdc:	b	6360c <luaopen_ffi@@Base+0xc34>
   63ce0:	mov	r0, r4
   63ce4:	bl	15358 <_start@@Base+0x1fa8>
   63ce8:	b	635d8 <luaopen_ffi@@Base+0xc00>
   63cec:	mov	r0, r4
   63cf0:	bl	15358 <_start@@Base+0x1fa8>
   63cf4:	b	63594 <luaopen_ffi@@Base+0xbbc>
   63cf8:	mov	r0, r4
   63cfc:	bl	15358 <_start@@Base+0x1fa8>
   63d00:	b	63b48 <luaopen_ffi@@Base+0x1170>
   63d04:	mov	r0, r4
   63d08:	bl	15358 <_start@@Base+0x1fa8>
   63d0c:	b	63698 <luaopen_ffi@@Base+0xcc0>
   63d10:	mov	r0, r4
   63d14:	bl	15358 <_start@@Base+0x1fa8>
   63d18:	b	63670 <luaopen_ffi@@Base+0xc98>
   63d1c:	cmp	r5, #127	; 0x7f
   63d20:	ldr	r3, [r4, #48]	; 0x30
   63d24:	ldr	r1, [r4, #44]	; 0x2c
   63d28:	uxtble	r5, r5
   63d2c:	ble	6360c <luaopen_ffi@@Base+0xc34>
   63d30:	cmp	r3, r1
   63d34:	asr	r3, r5, #6
   63d38:	orr	r3, r3, #192	; 0xc0
   63d3c:	bne	63760 <luaopen_ffi@@Base+0xd88>
   63d40:	mov	r1, #1
   63d44:	mov	r0, r8
   63d48:	str	r3, [sp, #4]
   63d4c:	bl	2ff68 <luaL_where@@Base+0xfe64>
   63d50:	ldr	r3, [sp, #4]
   63d54:	mov	r1, r0
   63d58:	b	63760 <luaopen_ffi@@Base+0xd88>
   63d5c:	mov	r0, r4
   63d60:	ldr	r2, [pc, #732]	; 64044 <luaopen_ffi@@Base+0x166c>
   63d64:	ldr	r1, [pc, #680]	; 64014 <luaopen_ffi@@Base+0x163c>
   63d68:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   63d6c:	mov	r0, r4
   63d70:	bl	309d8 <luaL_where@@Base+0x108d4>
   63d74:	ldr	r3, [r4, #52]	; 0x34
   63d78:	str	r3, [r4, #44]	; 0x2c
   63d7c:	subs	r2, r0, #0
   63d80:	ldrlt	fp, [r4, #32]
   63d84:	blt	63864 <luaopen_ffi@@Base+0xe8c>
   63d88:	mov	r1, #0
   63d8c:	mov	r0, r4
   63d90:	bl	50010 <luaL_error@@Base+0x9f24>
   63d94:	ldr	r3, [r4, #52]	; 0x34
   63d98:	ldr	fp, [r4, #32]
   63d9c:	str	r3, [r4, #44]	; 0x2c
   63da0:	b	6303c <luaopen_ffi@@Base+0x664>
   63da4:	mov	r0, r4
   63da8:	bl	15358 <_start@@Base+0x1fa8>
   63dac:	b	63bc8 <luaopen_ffi@@Base+0x11f0>
   63db0:	mov	r0, r4
   63db4:	bl	15358 <_start@@Base+0x1fa8>
   63db8:	b	63b84 <luaopen_ffi@@Base+0x11ac>
   63dbc:	ldrd	r0, [r4, #44]	; 0x2c
   63dc0:	asr	r3, r5, #18
   63dc4:	orr	r3, r3, #240	; 0xf0
   63dc8:	cmp	r1, r0
   63dcc:	beq	640ac <luaopen_ffi@@Base+0x16d4>
   63dd0:	strb	r3, [r0]
   63dd4:	ldr	r1, [r4, #48]	; 0x30
   63dd8:	add	r0, r0, #1
   63ddc:	asr	r3, r5, #12
   63de0:	and	r3, r3, #63	; 0x3f
   63de4:	cmp	r0, r1
   63de8:	str	r0, [r4, #44]	; 0x2c
   63dec:	orr	r3, r3, #128	; 0x80
   63df0:	bne	6373c <luaopen_ffi@@Base+0xd64>
   63df4:	mov	r1, #1
   63df8:	mov	r0, r8
   63dfc:	str	r3, [sp, #4]
   63e00:	bl	2ff68 <luaL_where@@Base+0xfe64>
   63e04:	ldr	r3, [sp, #4]
   63e08:	b	6373c <luaopen_ffi@@Base+0xd64>
   63e0c:	mov	r0, r4
   63e10:	bl	15358 <_start@@Base+0x1fa8>
   63e14:	ldr	r3, [r4, #44]	; 0x2c
   63e18:	b	63c9c <luaopen_ffi@@Base+0x12c4>
   63e1c:	ldr	r3, [r4, #24]
   63e20:	ldr	r2, [r4, #28]
   63e24:	cmp	r3, r2
   63e28:	bcs	63ff8 <luaopen_ffi@@Base+0x1620>
   63e2c:	add	r2, r3, #1
   63e30:	str	r2, [r4, #24]
   63e34:	ldrb	r0, [r3]
   63e38:	cmp	r0, #46	; 0x2e
   63e3c:	str	r0, [r4, #32]
   63e40:	ldrne	fp, [pc, #496]	; 64038 <luaopen_ffi@@Base+0x1660>
   63e44:	bne	63260 <luaopen_ffi@@Base+0x888>
   63e48:	ldr	r3, [r4, #24]
   63e4c:	ldr	r2, [r4, #28]
   63e50:	cmp	r3, r2
   63e54:	bcs	640c4 <luaopen_ffi@@Base+0x16ec>
   63e58:	add	r2, r3, #1
   63e5c:	str	r2, [r4, #24]
   63e60:	ldrb	r0, [r3]
   63e64:	str	r0, [r4, #32]
   63e68:	mov	fp, #280	; 0x118
   63e6c:	b	63260 <luaopen_ffi@@Base+0x888>
   63e70:	mov	r0, r4
   63e74:	bl	15358 <_start@@Base+0x1fa8>
   63e78:	b	63a0c <luaopen_ffi@@Base+0x1034>
   63e7c:	mov	r0, r4
   63e80:	bl	15358 <_start@@Base+0x1fa8>
   63e84:	b	63c08 <luaopen_ffi@@Base+0x1230>
   63e88:	mov	r0, r4
   63e8c:	bl	15358 <_start@@Base+0x1fa8>
   63e90:	mov	r5, r0
   63e94:	b	632dc <luaopen_ffi@@Base+0x904>
   63e98:	mov	r0, r4
   63e9c:	bl	15358 <_start@@Base+0x1fa8>
   63ea0:	b	63ae0 <luaopen_ffi@@Base+0x1108>
   63ea4:	mov	r0, r4
   63ea8:	bl	15358 <_start@@Base+0x1fa8>
   63eac:	b	63a60 <luaopen_ffi@@Base+0x1088>
   63eb0:	mov	r0, r4
   63eb4:	bl	15358 <_start@@Base+0x1fa8>
   63eb8:	b	63914 <luaopen_ffi@@Base+0xf3c>
   63ebc:	mov	r0, r4
   63ec0:	bl	15358 <_start@@Base+0x1fa8>
   63ec4:	b	63830 <luaopen_ffi@@Base+0xe58>
   63ec8:	mov	r0, r4
   63ecc:	bl	15358 <_start@@Base+0x1fa8>
   63ed0:	b	639b8 <luaopen_ffi@@Base+0xfe0>
   63ed4:	mov	r0, r4
   63ed8:	bl	15358 <_start@@Base+0x1fa8>
   63edc:	b	63964 <luaopen_ffi@@Base+0xf8c>
   63ee0:	mov	r0, r4
   63ee4:	bl	15358 <_start@@Base+0x1fa8>
   63ee8:	mov	fp, r0
   63eec:	b	63288 <luaopen_ffi@@Base+0x8b0>
   63ef0:	mov	r0, r4
   63ef4:	bl	15358 <_start@@Base+0x1fa8>
   63ef8:	mov	fp, r0
   63efc:	b	63858 <luaopen_ffi@@Base+0xe80>
   63f00:	mov	r1, r9
   63f04:	mov	r0, r4
   63f08:	bl	50010 <luaL_error@@Base+0x9f24>
   63f0c:	mov	fp, #288	; 0x120
   63f10:	b	63260 <luaopen_ffi@@Base+0x888>
   63f14:	tst	r3, #8
   63f18:	ldreq	r0, [r4, #44]	; 0x2c
   63f1c:	beq	63f44 <luaopen_ffi@@Base+0x156c>
   63f20:	b	63934 <luaopen_ffi@@Base+0xf5c>
   63f24:	add	r2, r3, #1
   63f28:	str	r2, [r4, #24]
   63f2c:	ldrb	fp, [r3]
   63f30:	add	r3, r6, fp
   63f34:	str	fp, [r4, #32]
   63f38:	ldrsb	r3, [r3, #189]	; 0xbd
   63f3c:	cmp	r3, #0
   63f40:	bge	63f7c <luaopen_ffi@@Base+0x15a4>
   63f44:	ldr	r3, [r4, #48]	; 0x30
   63f48:	cmp	r3, r0
   63f4c:	beq	63fd0 <luaopen_ffi@@Base+0x15f8>
   63f50:	strb	fp, [r0], #1
   63f54:	ldr	r3, [r4, #24]
   63f58:	ldr	r2, [r4, #28]
   63f5c:	str	r0, [r4, #44]	; 0x2c
   63f60:	cmp	r3, r2
   63f64:	bcc	63f24 <luaopen_ffi@@Base+0x154c>
   63f68:	mov	r0, r4
   63f6c:	bl	15358 <_start@@Base+0x1fa8>
   63f70:	mov	fp, r0
   63f74:	ldr	r0, [r4, #44]	; 0x2c
   63f78:	b	63f30 <luaopen_ffi@@Base+0x1558>
   63f7c:	ldr	r2, [r4, #52]	; 0x34
   63f80:	ldr	r1, [r4, #4]
   63f84:	sub	r3, r0, r2
   63f88:	mov	r0, r4
   63f8c:	bl	3f29c <luaL_typerror@@Base+0x8f30>
   63f90:	mvn	r3, #4
   63f94:	stm	r9, {r0, r3}
   63f98:	ldrb	r2, [r0, #6]
   63f9c:	cmp	r2, #0
   63fa0:	addne	fp, r2, #256	; 0x100
   63fa4:	ldreq	fp, [pc, #144]	; 6403c <luaopen_ffi@@Base+0x1664>
   63fa8:	b	63260 <luaopen_ffi@@Base+0x888>
   63fac:	mov	r1, #1
   63fb0:	mov	r0, r8
   63fb4:	bl	2ff68 <luaL_where@@Base+0xfe64>
   63fb8:	b	63bdc <luaopen_ffi@@Base+0x1204>
   63fbc:	mov	r1, #1
   63fc0:	mov	r0, r8
   63fc4:	bl	2ff68 <luaL_where@@Base+0xfe64>
   63fc8:	mov	r3, r0
   63fcc:	b	63788 <luaopen_ffi@@Base+0xdb0>
   63fd0:	mov	r1, #1
   63fd4:	mov	r0, r8
   63fd8:	bl	2ff68 <luaL_where@@Base+0xfe64>
   63fdc:	b	63f50 <luaopen_ffi@@Base+0x1578>
   63fe0:	mov	r1, #1
   63fe4:	mov	r0, r8
   63fe8:	str	r3, [sp, #4]
   63fec:	bl	2ff68 <luaL_where@@Base+0xfe64>
   63ff0:	ldr	r3, [sp, #4]
   63ff4:	b	6375c <luaopen_ffi@@Base+0xd84>
   63ff8:	mov	r0, r4
   63ffc:	bl	15358 <_start@@Base+0x1fa8>
   64000:	b	63e38 <luaopen_ffi@@Base+0x1460>
   64004:	mov	r0, r4
   64008:	bl	15358 <_start@@Base+0x1fa8>
   6400c:	b	63a8c <luaopen_ffi@@Base+0x10b4>
   64010:			; <UNDEFINED> instruction: 0x0006ecb8
   64014:	andeq	r0, r0, r1, lsr #2
   64018:			; <UNDEFINED> instruction: 0x0010ffff
   6401c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   64020:	andeq	r0, r0, lr, lsl r1
   64024:	andeq	r0, r0, sp, lsl r1
   64028:	andeq	r0, r0, fp, lsl r1
   6402c:	andeq	r0, r0, r9, lsl r1
   64030:	andeq	r0, r0, sl, lsl r1
   64034:	andeq	r0, r0, fp, lsl #18
   64038:	andeq	r0, r0, r7, lsl r1
   6403c:	andeq	r0, r0, pc, lsl r1
   64040:	strdeq	r0, [r0], -r3
   64044:	andeq	r0, r0, r1, ror #17
   64048:	mov	r0, r4
   6404c:	bl	15358 <_start@@Base+0x1fa8>
   64050:	b	63a38 <luaopen_ffi@@Base+0x1060>
   64054:	mov	r0, r4
   64058:	bl	15358 <_start@@Base+0x1fa8>
   6405c:	b	639e4 <luaopen_ffi@@Base+0x100c>
   64060:	mov	r0, r4
   64064:	bl	15358 <_start@@Base+0x1fa8>
   64068:	b	63990 <luaopen_ffi@@Base+0xfb8>
   6406c:	mov	r0, r4
   64070:	bl	15358 <_start@@Base+0x1fa8>
   64074:	b	63b0c <luaopen_ffi@@Base+0x1134>
   64078:	mov	r0, r8
   6407c:	mov	r1, #1
   64080:	bl	2ff68 <luaL_where@@Base+0xfe64>
   64084:	b	638ec <luaopen_ffi@@Base+0xf14>
   64088:	mov	r1, #1
   6408c:	mov	r0, r8
   64090:	bl	2ff68 <luaL_where@@Base+0xfe64>
   64094:	b	632b0 <luaopen_ffi@@Base+0x8d8>
   64098:	mov	r0, r8
   6409c:	mov	r1, #1
   640a0:	bl	2ff68 <luaL_where@@Base+0xfe64>
   640a4:	mov	r3, r0
   640a8:	b	63c74 <luaopen_ffi@@Base+0x129c>
   640ac:	mov	r1, #1
   640b0:	mov	r0, r8
   640b4:	str	r3, [sp, #4]
   640b8:	bl	2ff68 <luaL_where@@Base+0xfe64>
   640bc:	ldr	r3, [sp, #4]
   640c0:	b	63dd0 <luaopen_ffi@@Base+0x13f8>
   640c4:	mov	r0, r4
   640c8:	bl	15358 <_start@@Base+0x1fa8>
   640cc:	b	63e64 <luaopen_ffi@@Base+0x148c>
   640d0:	mov	r0, r4
   640d4:	ldr	r2, [pc, #-156]	; 64040 <luaopen_ffi@@Base+0x1668>
   640d8:	mov	r1, #288	; 0x120
   640dc:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   640e0:	mov	r0, r4
   640e4:	ldr	r2, [pc, #-168]	; 64044 <luaopen_ffi@@Base+0x166c>
   640e8:	mov	r1, #288	; 0x120
   640ec:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   640f0:	mov	fp, #45	; 0x2d
   640f4:	b	63260 <luaopen_ffi@@Base+0x888>
   640f8:	ldr	r2, [pc, #60]	; 6413c <luaopen_ffi@@Base+0x1764>
   640fc:	ldr	ip, [r0, #40]	; 0x28
   64100:	ldr	r1, [r0, #68]	; 0x44
   64104:	cmp	ip, r2
   64108:	push	{r4, lr}
   6410c:	mov	r4, r0
   64110:	str	r1, [r0, #72]	; 0x48
   64114:	bne	64128 <luaopen_ffi@@Base+0x1750>
   64118:	add	r1, r0, #8
   6411c:	bl	63018 <luaopen_ffi@@Base+0x640>
   64120:	str	r0, [r4, #36]	; 0x24
   64124:	pop	{r4, pc}
   64128:	ldrd	r0, [r0, #16]
   6412c:	str	ip, [r4, #36]	; 0x24
   64130:	str	r2, [r4, #40]	; 0x28
   64134:	strd	r0, [r4, #8]
   64138:	pop	{r4, pc}
   6413c:	andeq	r0, r0, r1, lsr #2
   64140:	ldr	r1, [pc, #40]	; 64170 <luaopen_ffi@@Base+0x1798>
   64144:	ldr	r3, [r0, #36]	; 0x24
   64148:	ldr	ip, [pc, #36]	; 64174 <luaopen_ffi@@Base+0x179c>
   6414c:	push	{r4, lr}
   64150:	cmp	r3, r1
   64154:	cmpne	r3, ip
   64158:	bne	6416c <luaopen_ffi@@Base+0x1794>
   6415c:	ldr	r4, [r0, #8]
   64160:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   64164:	mov	r0, r4
   64168:	pop	{r4, pc}
   6416c:	bl	50774 <luaL_error@@Base+0xa688>
   64170:	andeq	r0, r0, pc, lsl r1
   64174:	andeq	r0, r0, sl, lsl #2
   64178:	push	{r4, r5, r6, lr}
   6417c:	mov	r4, r0
   64180:	ldr	r5, [r0]
   64184:	sub	sp, sp, #24
   64188:	mov	r0, r5
   6418c:	mov	r6, r1
   64190:	bl	4f9fc <luaL_error@@Base+0x9910>
   64194:	mov	r0, r4
   64198:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   6419c:	mvn	r3, #0
   641a0:	mov	r1, #3
   641a4:	mov	r2, #0
   641a8:	mov	r0, r4
   641ac:	str	r1, [sp, #8]
   641b0:	str	r2, [sp]
   641b4:	str	r3, [sp, #12]
   641b8:	str	r3, [sp, #16]
   641bc:	bl	64140 <luaopen_ffi@@Base+0x1768>
   641c0:	add	r3, sp, #24
   641c4:	add	r2, r6, #8
   641c8:	add	r1, r6, #4
   641cc:	str	r0, [r3, #-24]!	; 0xffffffe8
   641d0:	mov	r0, r5
   641d4:	bl	4fa74 <luaL_error@@Base+0x9988>
   641d8:	add	sp, sp, #24
   641dc:	pop	{r4, r5, r6, pc}
   641e0:	ldr	r3, [r0, #36]	; 0x24
   641e4:	cmp	r3, r1
   641e8:	bne	641f0 <luaopen_ffi@@Base+0x1818>
   641ec:	b	640f8 <luaopen_ffi@@Base+0x1720>
   641f0:	push	{r4, lr}
   641f4:	bl	50774 <luaL_error@@Base+0xa688>
   641f8:	push	{r4, r5, r6, r7, r8, lr}
   641fc:	mov	r4, r0
   64200:	ldr	r5, [r0]
   64204:	ldr	r2, [r5, #12]
   64208:	ldr	r3, [r5, #20]
   6420c:	str	r3, [r5, #24]
   64210:	ldrb	r3, [r2, #9]
   64214:	orr	r3, r3, #4
   64218:	strb	r3, [r2, #9]
   6421c:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   64220:	mov	r0, r4
   64224:	bl	64140 <luaopen_ffi@@Base+0x1768>
   64228:	ldr	r3, [r4]
   6422c:	ldr	lr, [r4, #96]	; 0x60
   64230:	ldr	r2, [r4, #88]	; 0x58
   64234:	ldr	r3, [r3, #12]
   64238:	add	lr, r2, lr, lsl #4
   6423c:	ldr	r3, [r3, #4]
   64240:	add	r2, r2, r3, lsl #4
   64244:	cmp	r2, lr
   64248:	mov	r1, r0
   6424c:	bcc	64260 <luaopen_ffi@@Base+0x1888>
   64250:	b	6428c <luaopen_ffi@@Base+0x18b4>
   64254:	add	r2, r2, #16
   64258:	cmp	lr, r2
   6425c:	bls	6428c <luaopen_ffi@@Base+0x18b4>
   64260:	ldr	ip, [r2]
   64264:	cmp	r1, ip
   64268:	bne	64254 <luaopen_ffi@@Base+0x187c>
   6426c:	ldrb	r3, [r2, #13]
   64270:	tst	r3, #4
   64274:	beq	64254 <luaopen_ffi@@Base+0x187c>
   64278:	add	r3, r1, #16
   6427c:	mov	r0, r4
   64280:	ldr	r2, [pc, #324]	; 643cc <luaopen_ffi@@Base+0x19f4>
   64284:	mov	r1, #0
   64288:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   6428c:	mov	r2, #4
   64290:	ldr	r3, [r5, #20]
   64294:	mov	r0, r4
   64298:	bl	5031c <luaL_error@@Base+0xa230>
   6429c:	ldr	r6, [pc, #300]	; 643d0 <luaopen_ffi@@Base+0x19f8>
   642a0:	mov	r1, r6
   642a4:	mov	r7, r0
   642a8:	mov	r0, r4
   642ac:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   642b0:	ldr	r2, [r4, #36]	; 0x24
   642b4:	cmp	r2, r6
   642b8:	bne	64304 <luaopen_ffi@@Base+0x192c>
   642bc:	ldr	r3, [r4, #108]	; 0x6c
   642c0:	add	r3, r3, #1
   642c4:	cmp	r3, #199	; 0xc7
   642c8:	str	r3, [r4, #108]	; 0x6c
   642cc:	bhi	643bc <luaopen_ffi@@Base+0x19e4>
   642d0:	mov	r6, r2
   642d4:	b	642e4 <luaopen_ffi@@Base+0x190c>
   642d8:	cmp	r3, #199	; 0xc7
   642dc:	str	r3, [r4, #108]	; 0x6c
   642e0:	bhi	643bc <luaopen_ffi@@Base+0x19e4>
   642e4:	mov	r0, r4
   642e8:	bl	641f8 <luaopen_ffi@@Base+0x1820>
   642ec:	ldr	r3, [r4, #108]	; 0x6c
   642f0:	ldr	r2, [r4, #36]	; 0x24
   642f4:	sub	r1, r3, #1
   642f8:	cmp	r2, r6
   642fc:	str	r1, [r4, #108]	; 0x6c
   64300:	beq	642d8 <luaopen_ffi@@Base+0x1900>
   64304:	sub	r3, r2, #260	; 0x104
   64308:	ldr	r1, [r5, #12]
   6430c:	cmp	r3, #29
   64310:	ldrls	pc, [pc, r3, lsl #2]
   64314:	b	643a8 <luaopen_ffi@@Base+0x19d0>
   64318:	muleq	r6, r0, r3
   6431c:	muleq	r6, r0, r3
   64320:	muleq	r6, r0, r3
   64324:	andeq	r4, r6, r8, lsr #7
   64328:	andeq	r4, r6, r8, lsr #7
   6432c:	andeq	r4, r6, r8, lsr #7
   64330:	andeq	r4, r6, r8, lsr #7
   64334:	andeq	r4, r6, r8, lsr #7
   64338:	andeq	r4, r6, r8, lsr #7
   6433c:	andeq	r4, r6, r8, lsr #7
   64340:	andeq	r4, r6, r8, lsr #7
   64344:	andeq	r4, r6, r8, lsr #7
   64348:	andeq	r4, r6, r8, lsr #7
   6434c:	andeq	r4, r6, r8, lsr #7
   64350:	andeq	r4, r6, r8, lsr #7
   64354:	andeq	r4, r6, r8, lsr #7
   64358:	andeq	r4, r6, r8, lsr #7
   6435c:	muleq	r6, r0, r3
   64360:	andeq	r4, r6, r8, lsr #7
   64364:	andeq	r4, r6, r8, lsr #7
   64368:	andeq	r4, r6, r8, lsr #7
   6436c:	andeq	r4, r6, r8, lsr #7
   64370:	andeq	r4, r6, r8, lsr #7
   64374:	andeq	r4, r6, r8, lsr #7
   64378:	andeq	r4, r6, r8, lsr #7
   6437c:	andeq	r4, r6, r8, lsr #7
   64380:	andeq	r4, r6, r8, lsr #7
   64384:	andeq	r4, r6, r8, lsr #7
   64388:	andeq	r4, r6, r8, lsr #7
   6438c:	muleq	r6, r0, r3
   64390:	ldr	r3, [pc, #60]	; 643d4 <luaopen_ffi@@Base+0x19fc>
   64394:	cmp	r2, r3
   64398:	ldrne	r3, [r4, #88]	; 0x58
   6439c:	ldrbne	r2, [r1, #8]
   643a0:	addne	r3, r3, r7, lsl #4
   643a4:	strbne	r2, [r3, #12]
   643a8:	mov	r2, r7
   643ac:	mov	r0, r4
   643b0:	ldr	r1, [r1, #4]
   643b4:	pop	{r4, r5, r6, r7, r8, lr}
   643b8:	b	5040c <luaL_error@@Base+0xa320>
   643bc:	mov	r0, r4
   643c0:	mov	r2, #2176	; 0x880
   643c4:	mov	r1, #0
   643c8:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   643cc:	andeq	r0, r0, sp, lsl fp
   643d0:	andeq	r0, r0, sp, lsl r1
   643d4:	andeq	r0, r0, r5, lsl r1
   643d8:	ldr	ip, [r0, #36]	; 0x24
   643dc:	cmp	r1, ip
   643e0:	beq	64440 <luaopen_ffi@@Base+0x1a68>
   643e4:	push	{r4, r5, r6, r7, r8, lr}
   643e8:	mov	r5, r3
   643ec:	ldr	r3, [r0, #68]	; 0x44
   643f0:	sub	sp, sp, #8
   643f4:	cmp	r3, r5
   643f8:	mov	r4, r0
   643fc:	mov	r6, r2
   64400:	beq	6443c <luaopen_ffi@@Base+0x1a64>
   64404:	add	r7, r0, #4
   64408:	mov	r0, r7
   6440c:	bl	20140 <luaL_where@@Base+0x3c>
   64410:	mov	r1, r6
   64414:	mov	r8, r0
   64418:	mov	r0, r7
   6441c:	bl	20140 <luaL_where@@Base+0x3c>
   64420:	ldr	r1, [r4, #36]	; 0x24
   64424:	mov	r3, r8
   64428:	str	r5, [sp, #4]
   6442c:	ldr	r2, [pc, #16]	; 64444 <luaopen_ffi@@Base+0x1a6c>
   64430:	str	r0, [sp]
   64434:	mov	r0, r4
   64438:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   6443c:	bl	50774 <luaL_error@@Base+0xa688>
   64440:	b	640f8 <luaopen_ffi@@Base+0x1720>
   64444:	andeq	r0, r0, r6, ror #19
   64448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6444c:	sub	sp, sp, #84	; 0x54
   64450:	ldr	r5, [r0]
   64454:	ldr	r3, [r0, #68]	; 0x44
   64458:	mov	r7, r1
   6445c:	ldr	r6, [r5, #32]
   64460:	str	r3, [sp, #12]
   64464:	mov	r4, r0
   64468:	lsl	r3, r6, #8
   6446c:	orr	r1, r3, #52	; 0x34
   64470:	mov	r0, r5
   64474:	str	r3, [sp, #16]
   64478:	bl	4f23c <luaL_error@@Base+0x9150>
   6447c:	mvn	r3, #0
   64480:	mov	r2, #12
   64484:	str	r3, [r7, #16]
   64488:	strd	r2, [r7, #8]
   6448c:	str	r6, [r7]
   64490:	ldr	r3, [r5, #32]
   64494:	ldrb	r2, [r5, #66]	; 0x42
   64498:	add	r3, r3, #1
   6449c:	cmp	r3, r2
   644a0:	str	r0, [sp, #4]
   644a4:	bls	644b4 <luaopen_ffi@@Base+0x1adc>
   644a8:	cmp	r3, #249	; 0xf9
   644ac:	strbls	r3, [r5, #66]	; 0x42
   644b0:	bhi	64a50 <luaopen_ffi@@Base+0x2078>
   644b4:	str	r3, [r5, #32]
   644b8:	mov	r1, #123	; 0x7b
   644bc:	mov	r0, r4
   644c0:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   644c4:	ldr	r1, [r4, #36]	; 0x24
   644c8:	add	r3, r6, #1
   644cc:	cmp	r1, #125	; 0x7d
   644d0:	str	r3, [sp]
   644d4:	beq	64a10 <luaopen_ffi@@Base+0x2038>
   644d8:	ldr	r3, [sp, #4]
   644dc:	mov	fp, #0
   644e0:	str	fp, [sp, #8]
   644e4:	lsl	r3, r3, #3
   644e8:	mov	r8, fp
   644ec:	mov	sl, fp
   644f0:	str	r3, [sp, #20]
   644f4:	mov	r6, #1
   644f8:	b	64554 <luaopen_ffi@@Base+0x1b7c>
   644fc:	ldr	r2, [sp, #64]	; 0x40
   64500:	cmp	r2, #13
   64504:	bne	645e0 <luaopen_ffi@@Base+0x1c08>
   64508:	ldr	r3, [sp, #40]	; 0x28
   6450c:	cmp	r3, #4
   64510:	bls	645fc <luaopen_ffi@@Base+0x1c24>
   64514:	add	r2, sp, #56	; 0x38
   64518:	mov	r1, r7
   6451c:	mov	r0, r5
   64520:	bl	4fb04 <luaL_error@@Base+0x9a18>
   64524:	ldr	r3, [r4, #36]	; 0x24
   64528:	ldr	r2, [sp]
   6452c:	cmp	r3, #44	; 0x2c
   64530:	str	r2, [r5, #32]
   64534:	beq	64540 <luaopen_ffi@@Base+0x1b68>
   64538:	cmp	r3, #59	; 0x3b
   6453c:	bne	64764 <luaopen_ffi@@Base+0x1d8c>
   64540:	mov	r0, r4
   64544:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   64548:	ldr	r1, [r4, #36]	; 0x24
   6454c:	cmp	r1, #125	; 0x7d
   64550:	beq	64764 <luaopen_ffi@@Base+0x1d8c>
   64554:	cmp	r1, #91	; 0x5b
   64558:	beq	64670 <luaopen_ffi@@Base+0x1c98>
   6455c:	ldr	r3, [pc, #1268]	; 64a58 <luaopen_ffi@@Base+0x2080>
   64560:	ldr	r2, [pc, #1268]	; 64a5c <luaopen_ffi@@Base+0x2084>
   64564:	cmp	r1, r2
   64568:	cmpne	r1, r3
   6456c:	beq	64614 <luaopen_ffi@@Base+0x1c3c>
   64570:	mov	r8, #1
   64574:	mov	r2, #4
   64578:	str	r6, [sp, #32]
   6457c:	mov	r9, r8
   64580:	add	r6, r6, r8
   64584:	mvn	r3, #0
   64588:	str	r2, [sp, #40]	; 0x28
   6458c:	mvn	r2, #13
   64590:	str	r3, [sp, #44]	; 0x2c
   64594:	str	r3, [sp, #48]	; 0x30
   64598:	str	r2, [sp, #36]	; 0x24
   6459c:	mov	r2, #0
   645a0:	add	r1, sp, #56	; 0x38
   645a4:	mov	r0, r4
   645a8:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   645ac:	ldr	r3, [sp, #40]	; 0x28
   645b0:	sub	r2, r3, #1
   645b4:	cmp	r2, #3
   645b8:	bhi	644fc <luaopen_ffi@@Base+0x1b24>
   645bc:	cmp	r3, #3
   645c0:	beq	646a8 <luaopen_ffi@@Base+0x1cd0>
   645c4:	ldr	r2, [sp, #64]	; 0x40
   645c8:	cmp	r2, #4
   645cc:	bhi	64500 <luaopen_ffi@@Base+0x1b28>
   645d0:	ldr	r1, [sp, #68]	; 0x44
   645d4:	ldr	r2, [sp, #72]	; 0x48
   645d8:	cmp	r1, r2
   645dc:	beq	64908 <luaopen_ffi@@Base+0x1f30>
   645e0:	add	r1, sp, #56	; 0x38
   645e4:	mov	r0, r5
   645e8:	bl	4f9fc <luaL_error@@Base+0x9910>
   645ec:	ldr	r3, [sp, #40]	; 0x28
   645f0:	mov	r9, #0
   645f4:	cmp	r3, #4
   645f8:	bhi	64514 <luaopen_ffi@@Base+0x1b3c>
   645fc:	add	r3, sp, #32
   64600:	add	r2, r7, #8
   64604:	add	r1, r7, #4
   64608:	mov	r0, r5
   6460c:	bl	4fa74 <luaL_error@@Base+0x9988>
   64610:	b	64514 <luaopen_ffi@@Base+0x1b3c>
   64614:	add	r1, r4, #16
   64618:	mov	r0, r4
   6461c:	bl	63018 <luaopen_ffi@@Base+0x640>
   64620:	cmp	r0, #61	; 0x3d
   64624:	mov	r9, r0
   64628:	str	r0, [r4, #40]	; 0x28
   6462c:	bne	64570 <luaopen_ffi@@Base+0x1b98>
   64630:	mvn	r3, #0
   64634:	mov	r2, #3
   64638:	mov	r1, #0
   6463c:	mov	r0, r4
   64640:	str	r1, [sp, #32]
   64644:	str	r2, [sp, #40]	; 0x28
   64648:	str	r3, [sp, #44]	; 0x2c
   6464c:	str	r3, [sp, #48]	; 0x30
   64650:	bl	64140 <luaopen_ffi@@Base+0x1768>
   64654:	mov	r1, r9
   64658:	add	fp, fp, #1
   6465c:	mov	r9, #0
   64660:	str	r0, [sp, #32]
   64664:	mov	r0, r4
   64668:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   6466c:	b	6459c <luaopen_ffi@@Base+0x1bc4>
   64670:	add	r1, sp, #32
   64674:	mov	r0, r4
   64678:	bl	67778 <luaopen_ffi@@Base+0x4da0>
   6467c:	ldr	r3, [sp, #40]	; 0x28
   64680:	cmp	r3, #4
   64684:	bhi	648ec <luaopen_ffi@@Base+0x1f14>
   64688:	cmp	r3, #4
   6468c:	beq	648b8 <luaopen_ffi@@Base+0x1ee0>
   64690:	add	fp, fp, #1
   64694:	mov	r1, #61	; 0x3d
   64698:	mov	r0, r4
   6469c:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   646a0:	mov	r9, #0
   646a4:	b	6459c <luaopen_ffi@@Base+0x1bc4>
   646a8:	cmp	sl, #0
   646ac:	bne	6492c <luaopen_ffi@@Base+0x1f54>
   646b0:	cmp	r8, #0
   646b4:	movne	r1, r6
   646b8:	moveq	r1, #0
   646bc:	cmp	fp, #0
   646c0:	ldr	r0, [r5, #8]
   646c4:	bne	6489c <luaopen_ffi@@Base+0x1ec4>
   646c8:	mov	r2, fp
   646cc:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   646d0:	mvn	r2, #11
   646d4:	mov	r1, r0
   646d8:	mov	sl, r0
   646dc:	mov	r0, r5
   646e0:	bl	3e594 <luaL_typerror@@Base+0x8228>
   646e4:	ldr	r2, [sp, #16]
   646e8:	ldr	r3, [sp, #40]	; 0x28
   646ec:	orr	r2, r2, #53	; 0x35
   646f0:	ldr	r1, [r5, #52]	; 0x34
   646f4:	cmp	r3, #2
   646f8:	orr	r0, r2, r0, lsl #16
   646fc:	ldr	r2, [sp, #20]
   64700:	str	r0, [r1, r2]
   64704:	bhi	64924 <luaopen_ffi@@Base+0x1f4c>
   64708:	mvn	r3, r3
   6470c:	str	r3, [sp, #28]
   64710:	add	r2, sp, #24
   64714:	mov	r1, sl
   64718:	ldr	r0, [r5, #8]
   6471c:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   64720:	ldrb	r3, [sl, #4]
   64724:	tst	r3, #4
   64728:	bne	649f0 <luaopen_ffi@@Base+0x2018>
   6472c:	ldr	r2, [sp, #64]	; 0x40
   64730:	cmp	r2, #4
   64734:	bhi	64748 <luaopen_ffi@@Base+0x1d70>
   64738:	ldr	r1, [sp, #68]	; 0x44
   6473c:	ldr	r3, [sp, #72]	; 0x48
   64740:	cmp	r1, r3
   64744:	beq	64984 <luaopen_ffi@@Base+0x1fac>
   64748:	mov	r3, #1
   6474c:	str	r3, [sp, #8]
   64750:	mvn	r3, #11
   64754:	str	sl, [r0]
   64758:	str	r3, [r0, #4]
   6475c:	mov	r9, #0
   64760:	b	64500 <luaopen_ffi@@Base+0x1b28>
   64764:	ldr	r3, [sp, #12]
   64768:	mov	r0, r4
   6476c:	mov	r2, #123	; 0x7b
   64770:	mov	r1, #125	; 0x7d
   64774:	bl	643d8 <luaopen_ffi@@Base+0x1a00>
   64778:	cmp	r9, #0
   6477c:	beq	647ec <luaopen_ffi@@Base+0x1e14>
   64780:	ldr	r3, [r5, #20]
   64784:	ldr	r4, [r5, #52]	; 0x34
   64788:	sub	r1, r3, #-536870911	; 0xe0000001
   6478c:	ldr	r2, [pc, #716]	; 64a60 <luaopen_ffi@@Base+0x2088>
   64790:	cmp	r6, #256	; 0x100
   64794:	add	r4, r4, r1, lsl #3
   64798:	str	r2, [sp, #60]	; 0x3c
   6479c:	mov	r1, #4
   647a0:	mvn	r2, #0
   647a4:	addhi	r3, r3, r2
   647a8:	str	r1, [sp, #64]	; 0x40
   647ac:	add	r1, r6, r2
   647b0:	str	r2, [sp, #68]	; 0x44
   647b4:	str	r2, [sp, #72]	; 0x48
   647b8:	str	r1, [sp, #56]	; 0x38
   647bc:	mov	r0, r5
   647c0:	strhi	r3, [r5, #20]
   647c4:	add	r1, sp, #56	; 0x38
   647c8:	subhi	r4, r4, #8
   647cc:	bl	3e5f0 <luaL_typerror@@Base+0x8284>
   647d0:	ldr	r3, [sp]
   647d4:	mov	r2, #0
   647d8:	strb	r2, [r4, #-5]
   647dc:	lsl	r3, r3, #8
   647e0:	orr	r3, r3, #63	; 0x3f
   647e4:	orr	r0, r3, r0, lsl #16
   647e8:	str	r0, [r4]
   647ec:	ldr	r3, [r5, #20]
   647f0:	ldr	r2, [sp, #4]
   647f4:	sub	r3, r3, #1
   647f8:	cmp	r3, r2
   647fc:	moveq	r2, #11
   64800:	ldreq	r3, [r5, #32]
   64804:	ldreq	r1, [sp, #4]
   64808:	subeq	r3, r3, #1
   6480c:	movne	r3, #12
   64810:	streq	r1, [r7]
   64814:	strne	r3, [r7, #8]
   64818:	streq	r3, [r5, #32]
   6481c:	streq	r2, [r7, #8]
   64820:	cmp	sl, #0
   64824:	beq	6493c <luaopen_ffi@@Base+0x1f64>
   64828:	cmp	r8, #0
   6482c:	ldr	r0, [r5, #8]
   64830:	beq	64840 <luaopen_ffi@@Base+0x1e68>
   64834:	ldr	r3, [sl, #24]
   64838:	cmp	r3, r6
   6483c:	bcc	649d0 <luaopen_ffi@@Base+0x1ff8>
   64840:	ldr	r3, [sp, #8]
   64844:	cmp	r3, #0
   64848:	beq	64884 <luaopen_ffi@@Base+0x1eac>
   6484c:	ldr	r1, [sl, #28]
   64850:	ldr	r2, [sl, #20]
   64854:	mvn	lr, #0
   64858:	add	r1, r1, r1, lsl #1
   6485c:	add	r3, r2, #24
   64860:	add	r1, r3, r1, lsl #3
   64864:	b	6486c <luaopen_ffi@@Base+0x1e94>
   64868:	add	r3, r3, #24
   6486c:	ldr	ip, [r2, #4]
   64870:	cmn	ip, #12
   64874:	streq	lr, [r2, #4]
   64878:	cmp	r3, r1
   6487c:	mov	r2, r3
   64880:	bne	64868 <luaopen_ffi@@Base+0x1e90>
   64884:	ldr	r3, [r0, #8]
   64888:	ldrd	r2, [r3, #20]
   6488c:	cmp	r2, r3
   64890:	bcs	64a38 <luaopen_ffi@@Base+0x2060>
   64894:	add	sp, sp, #84	; 0x54
   64898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6489c:	cmp	fp, #1
   648a0:	beq	646c8 <luaopen_ffi@@Base+0x1cf0>
   648a4:	sub	r2, fp, #1
   648a8:	clz	r2, r2
   648ac:	eor	r2, r2, #31
   648b0:	add	r2, r2, #1
   648b4:	b	646cc <luaopen_ffi@@Base+0x1cf4>
   648b8:	ldr	r3, [sp, #32]
   648bc:	ldr	r2, [sp, #36]	; 0x24
   648c0:	cmn	r2, #14
   648c4:	clzeq	r3, r3
   648c8:	lsreq	r3, r3, #5
   648cc:	beq	648dc <luaopen_ffi@@Base+0x1f04>
   648d0:	orrs	r3, r3, r2, lsl #1
   648d4:	moveq	r3, #1
   648d8:	movne	r3, #0
   648dc:	cmp	r3, #0
   648e0:	movne	r8, r3
   648e4:	bne	64694 <luaopen_ffi@@Base+0x1cbc>
   648e8:	b	64690 <luaopen_ffi@@Base+0x1cb8>
   648ec:	add	r3, sp, #32
   648f0:	add	r2, r7, #8
   648f4:	add	r1, r7, #4
   648f8:	mov	r0, r5
   648fc:	bl	4fa74 <luaL_error@@Base+0x9988>
   64900:	ldr	r3, [sp, #40]	; 0x28
   64904:	b	64688 <luaopen_ffi@@Base+0x1cb0>
   64908:	cmp	sl, #0
   6490c:	beq	646b0 <luaopen_ffi@@Base+0x1cd8>
   64910:	cmp	r3, #2
   64914:	bls	64708 <luaopen_ffi@@Base+0x1d30>
   64918:	ldrd	r2, [sp, #32]
   6491c:	strd	r2, [sp, #24]
   64920:	b	64710 <luaopen_ffi@@Base+0x1d38>
   64924:	cmp	r3, #3
   64928:	bne	64918 <luaopen_ffi@@Base+0x1f40>
   6492c:	ldr	r2, [sp, #32]
   64930:	mvn	r3, #4
   64934:	strd	r2, [sp, #24]
   64938:	b	64710 <luaopen_ffi@@Base+0x1d38>
   6493c:	ldr	r2, [sp, #4]
   64940:	ldr	r3, [r5, #52]	; 0x34
   64944:	cmp	r8, #0
   64948:	add	r3, r3, r2, lsl #3
   6494c:	bne	649ac <luaopen_ffi@@Base+0x1fd4>
   64950:	cmp	fp, #0
   64954:	beq	64978 <luaopen_ffi@@Base+0x1fa0>
   64958:	cmp	fp, #1
   6495c:	subne	r2, fp, #1
   64960:	clzne	r2, r2
   64964:	eorne	r2, r2, #31
   64968:	addne	r2, r2, #1
   6496c:	orreq	r8, r8, #2048	; 0x800
   64970:	orrne	r8, r8, r2, lsl #11
   64974:	uxthne	r8, r8
   64978:	strh	r8, [r3, #2]
   6497c:	add	sp, sp, #84	; 0x54
   64980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   64984:	cmp	r2, #2
   64988:	mvnls	r2, r2
   6498c:	strls	r2, [r0, #4]
   64990:	bls	649a4 <luaopen_ffi@@Base+0x1fcc>
   64994:	cmp	r2, #3
   64998:	beq	64a40 <luaopen_ffi@@Base+0x2068>
   6499c:	ldrd	r2, [sp, #56]	; 0x38
   649a0:	strd	r2, [r0]
   649a4:	mov	r9, #0
   649a8:	b	64524 <luaopen_ffi@@Base+0x1b4c>
   649ac:	ldr	r8, [pc, #176]	; 64a64 <luaopen_ffi@@Base+0x208c>
   649b0:	cmp	r6, r8
   649b4:	movcc	r8, r6
   649b8:	cmp	r8, #3
   649bc:	movcc	r8, #3
   649c0:	cmp	fp, #0
   649c4:	uxth	r8, r8
   649c8:	bne	64958 <luaopen_ffi@@Base+0x1f80>
   649cc:	b	64978 <luaopen_ffi@@Base+0x1fa0>
   649d0:	sub	r2, r6, #1
   649d4:	mov	r1, sl
   649d8:	bl	3fa40 <luaL_typerror@@Base+0x96d4>
   649dc:	ldr	r3, [sp, #8]
   649e0:	ldr	r0, [r5, #8]
   649e4:	cmp	r3, #0
   649e8:	beq	64884 <luaopen_ffi@@Base+0x1eac>
   649ec:	b	6484c <luaopen_ffi@@Base+0x1e74>
   649f0:	ldr	r2, [r5, #8]
   649f4:	bic	r3, r3, #4
   649f8:	ldr	r2, [r2, #8]
   649fc:	strb	r3, [sl, #4]
   64a00:	ldr	r3, [r2, #48]	; 0x30
   64a04:	str	r3, [sl, #12]
   64a08:	str	sl, [r2, #48]	; 0x30
   64a0c:	b	6472c <luaopen_ffi@@Base+0x1d54>
   64a10:	mov	fp, #0
   64a14:	ldr	r3, [sp, #12]
   64a18:	mov	r0, r4
   64a1c:	mov	r2, #123	; 0x7b
   64a20:	bl	643d8 <luaopen_ffi@@Base+0x1a00>
   64a24:	mov	r8, fp
   64a28:	str	fp, [sp, #8]
   64a2c:	mov	sl, fp
   64a30:	mov	r6, #1
   64a34:	b	647ec <luaopen_ffi@@Base+0x1e14>
   64a38:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   64a3c:	b	64894 <luaopen_ffi@@Base+0x1ebc>
   64a40:	ldr	r2, [sp, #56]	; 0x38
   64a44:	mvn	r3, #4
   64a48:	strd	r2, [r0]
   64a4c:	b	649a4 <luaopen_ffi@@Base+0x1fcc>
   64a50:	mov	r0, r5
   64a54:	bl	1328c <pclose@plt+0x1f0>
   64a58:	andeq	r0, r0, pc, lsl r1
   64a5c:	andeq	r0, r0, sl, lsl #2
   64a60:	teqmi	r0, #0
   64a64:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   64a68:	ldr	r3, [r0, #36]	; 0x24
   64a6c:	push	{r4, r5, r6, r7, r8, lr}
   64a70:	cmp	r3, #40	; 0x28
   64a74:	sub	sp, sp, #24
   64a78:	mov	r4, r0
   64a7c:	mov	r5, r1
   64a80:	ldr	r7, [r0]
   64a84:	ldr	r8, [r0, #68]	; 0x44
   64a88:	beq	64b3c <luaopen_ffi@@Base+0x2164>
   64a8c:	cmp	r3, #123	; 0x7b
   64a90:	beq	64bc0 <luaopen_ffi@@Base+0x21e8>
   64a94:	cmp	r3, #288	; 0x120
   64a98:	bne	64bcc <luaopen_ffi@@Base+0x21f4>
   64a9c:	ldr	r3, [r0, #8]
   64aa0:	mov	r2, #3
   64aa4:	str	r3, [sp]
   64aa8:	mvn	r3, #0
   64aac:	str	r3, [sp, #16]
   64ab0:	strd	r2, [sp, #8]
   64ab4:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   64ab8:	ldr	r6, [r5]
   64abc:	ldr	r3, [sp, #8]
   64ac0:	cmp	r3, #13
   64ac4:	lsl	r4, r6, #8
   64ac8:	beq	64b78 <luaopen_ffi@@Base+0x21a0>
   64acc:	cmp	r3, #14
   64ad0:	bne	64b2c <luaopen_ffi@@Base+0x2154>
   64ad4:	ldr	r3, [r7, #32]
   64ad8:	orr	r1, r4, #33554432	; 0x2000000
   64adc:	sub	r4, r3, r6
   64ae0:	orr	r1, r1, #66	; 0x42
   64ae4:	orr	r1, r1, r4, lsl #16
   64ae8:	mov	r0, r7
   64aec:	bl	4f23c <luaL_error@@Base+0x9150>
   64af0:	ldr	r2, [r7, #20]
   64af4:	ldr	r3, [r7, #52]	; 0x34
   64af8:	str	r6, [r5, #4]
   64afc:	add	r3, r3, r2, lsl #3
   64b00:	mov	r2, #13
   64b04:	str	r2, [r5, #8]
   64b08:	add	r6, r6, #1
   64b0c:	mvn	r2, #0
   64b10:	str	r2, [r5, #12]
   64b14:	str	r2, [r5, #16]
   64b18:	str	r0, [r5]
   64b1c:	str	r8, [r3, #-4]
   64b20:	str	r6, [r7, #32]
   64b24:	add	sp, sp, #24
   64b28:	pop	{r4, r5, r6, r7, r8, pc}
   64b2c:	mov	r1, sp
   64b30:	mov	r0, r7
   64b34:	bl	4f8a0 <luaL_error@@Base+0x97b4>
   64b38:	b	64ad4 <luaopen_ffi@@Base+0x20fc>
   64b3c:	ldr	r3, [r0, #72]	; 0x48
   64b40:	cmp	r3, r8
   64b44:	bne	64bd4 <luaopen_ffi@@Base+0x21fc>
   64b48:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   64b4c:	ldr	r3, [r4, #36]	; 0x24
   64b50:	cmp	r3, #41	; 0x29
   64b54:	moveq	r3, #14
   64b58:	streq	r3, [sp, #8]
   64b5c:	bne	64b94 <luaopen_ffi@@Base+0x21bc>
   64b60:	mov	r0, r4
   64b64:	mov	r3, r8
   64b68:	mov	r2, #40	; 0x28
   64b6c:	mov	r1, #41	; 0x29
   64b70:	bl	643d8 <luaopen_ffi@@Base+0x1a00>
   64b74:	b	64ab8 <luaopen_ffi@@Base+0x20e0>
   64b78:	ldr	r3, [sp, #4]
   64b7c:	orr	r1, r4, #33554432	; 0x2000000
   64b80:	sub	r4, r3, #1
   64b84:	sub	r4, r4, r6
   64b88:	orr	r1, r1, #65	; 0x41
   64b8c:	orr	r1, r1, r4, lsl #16
   64b90:	b	64ae8 <luaopen_ffi@@Base+0x2110>
   64b94:	mov	r1, sp
   64b98:	mov	r0, r4
   64b9c:	bl	677b4 <luaopen_ffi@@Base+0x4ddc>
   64ba0:	ldr	r3, [sp, #8]
   64ba4:	cmp	r3, #13
   64ba8:	moveq	r2, #0
   64bac:	ldreq	r1, [sp]
   64bb0:	ldreq	r3, [r7, #52]	; 0x34
   64bb4:	addeq	r3, r3, r1, lsl #3
   64bb8:	strbeq	r2, [r3, #3]
   64bbc:	b	64b60 <luaopen_ffi@@Base+0x2188>
   64bc0:	mov	r1, sp
   64bc4:	bl	64448 <luaopen_ffi@@Base+0x1a70>
   64bc8:	b	64ab8 <luaopen_ffi@@Base+0x20e0>
   64bcc:	ldr	r1, [pc, #8]	; 64bdc <luaopen_ffi@@Base+0x2204>
   64bd0:	bl	4f034 <luaL_error@@Base+0x8f48>
   64bd4:	ldr	r1, [pc, #4]	; 64be0 <luaopen_ffi@@Base+0x2208>
   64bd8:	bl	4f034 <luaL_error@@Base+0x8f48>
   64bdc:	andeq	r0, r0, ip, ror sl
   64be0:	andeq	r0, r0, fp, asr #20
   64be4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   64be8:	mov	r4, r0
   64bec:	ldr	r7, [r0, #36]	; 0x24
   64bf0:	sub	sp, sp, #24
   64bf4:	cmp	r7, #40	; 0x28
   64bf8:	mov	r5, r1
   64bfc:	ldr	r6, [r0]
   64c00:	beq	64e08 <luaopen_ffi@@Base+0x2430>
   64c04:	ldr	r2, [pc, #584]	; 64e54 <luaopen_ffi@@Base+0x247c>
   64c08:	ldr	r3, [pc, #584]	; 64e58 <luaopen_ffi@@Base+0x2480>
   64c0c:	cmp	r7, r3
   64c10:	cmpne	r7, r2
   64c14:	bne	64e4c <luaopen_ffi@@Base+0x2474>
   64c18:	bl	64140 <luaopen_ffi@@Base+0x1768>
   64c1c:	mov	r3, #1
   64c20:	mov	r2, r5
   64c24:	mov	r1, r0
   64c28:	mov	r0, r6
   64c2c:	bl	4fe70 <luaL_error@@Base+0x9d84>
   64c30:	mov	r7, #12
   64c34:	ldr	r3, [r4, #36]	; 0x24
   64c38:	cmp	r3, #46	; 0x2e
   64c3c:	beq	64c98 <luaopen_ffi@@Base+0x22c0>
   64c40:	cmp	r3, #91	; 0x5b
   64c44:	beq	64ca8 <luaopen_ffi@@Base+0x22d0>
   64c48:	cmp	r3, #58	; 0x3a
   64c4c:	beq	64cd8 <luaopen_ffi@@Base+0x2300>
   64c50:	cmp	r3, #288	; 0x120
   64c54:	cmpne	r3, #40	; 0x28
   64c58:	moveq	r2, #1
   64c5c:	movne	r2, #0
   64c60:	cmp	r3, #123	; 0x7b
   64c64:	movne	r3, r2
   64c68:	orreq	r3, r2, #1
   64c6c:	cmp	r3, #0
   64c70:	beq	64df0 <luaopen_ffi@@Base+0x2418>
   64c74:	mov	r1, r5
   64c78:	mov	r0, r6
   64c7c:	bl	4f8a0 <luaL_error@@Base+0x97b4>
   64c80:	mov	r1, r5
   64c84:	mov	r0, r4
   64c88:	bl	64a68 <luaopen_ffi@@Base+0x2090>
   64c8c:	ldr	r3, [r4, #36]	; 0x24
   64c90:	cmp	r3, #46	; 0x2e
   64c94:	bne	64c40 <luaopen_ffi@@Base+0x2268>
   64c98:	mov	r1, r5
   64c9c:	mov	r0, r4
   64ca0:	bl	64178 <luaopen_ffi@@Base+0x17a0>
   64ca4:	b	64c34 <luaopen_ffi@@Base+0x225c>
   64ca8:	mov	r1, r5
   64cac:	mov	r0, r6
   64cb0:	bl	4f9fc <luaL_error@@Base+0x9910>
   64cb4:	mov	r1, sp
   64cb8:	mov	r0, r4
   64cbc:	bl	67778 <luaopen_ffi@@Base+0x4da0>
   64cc0:	mov	r3, sp
   64cc4:	add	r2, r5, #8
   64cc8:	add	r1, r5, #4
   64ccc:	mov	r0, r6
   64cd0:	bl	4fa74 <luaL_error@@Base+0x9988>
   64cd4:	b	64c34 <luaopen_ffi@@Base+0x225c>
   64cd8:	mov	r0, r4
   64cdc:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   64ce0:	mov	r0, r4
   64ce4:	bl	64140 <luaopen_ffi@@Base+0x1768>
   64ce8:	mov	r1, r5
   64cec:	mov	sl, r0
   64cf0:	mov	r0, r6
   64cf4:	bl	4f9fc <luaL_error@@Base+0x9910>
   64cf8:	ldr	r3, [r5, #8]
   64cfc:	cmp	r3, #12
   64d00:	mov	r9, r0
   64d04:	beq	64df8 <luaopen_ffi@@Base+0x2420>
   64d08:	ldr	r8, [r6, #32]
   64d0c:	mov	r0, r6
   64d10:	add	r1, r8, #1
   64d14:	lsl	r1, r1, #8
   64d18:	orr	r1, r1, #18
   64d1c:	orr	r1, r1, r9, lsl #16
   64d20:	bl	4f23c <luaL_error@@Base+0x9150>
   64d24:	mvn	r2, #4
   64d28:	mov	r1, sl
   64d2c:	mov	r0, r6
   64d30:	bl	3e594 <luaL_typerror@@Base+0x8228>
   64d34:	ldr	r3, [r6, #32]
   64d38:	ldrb	r2, [r6, #66]	; 0x42
   64d3c:	cmp	r0, #255	; 0xff
   64d40:	bhi	64d90 <luaopen_ffi@@Base+0x23b8>
   64d44:	add	r3, r3, #2
   64d48:	cmp	r3, r2
   64d4c:	bls	64d5c <luaopen_ffi@@Base+0x2384>
   64d50:	cmp	r3, #249	; 0xf9
   64d54:	bhi	64e44 <luaopen_ffi@@Base+0x246c>
   64d58:	strb	r3, [r6, #66]	; 0x42
   64d5c:	lsl	r1, r8, #8
   64d60:	orr	r1, r1, #57	; 0x39
   64d64:	orr	r1, r1, r9, lsl #24
   64d68:	orr	r1, r1, r0, lsl #16
   64d6c:	str	r3, [r6, #32]
   64d70:	mov	r0, r6
   64d74:	bl	4f23c <luaL_error@@Base+0x9150>
   64d78:	str	r8, [r5]
   64d7c:	str	r7, [r5, #8]
   64d80:	mov	r1, r5
   64d84:	mov	r0, r4
   64d88:	bl	64a68 <luaopen_ffi@@Base+0x2090>
   64d8c:	b	64c34 <luaopen_ffi@@Base+0x225c>
   64d90:	add	r3, r3, #3
   64d94:	cmp	r3, r2
   64d98:	bls	64da8 <luaopen_ffi@@Base+0x23d0>
   64d9c:	cmp	r3, #249	; 0xf9
   64da0:	bhi	64e44 <luaopen_ffi@@Base+0x246c>
   64da4:	strb	r3, [r6, #66]	; 0x42
   64da8:	add	r1, r8, #2
   64dac:	mov	sl, r1
   64db0:	lsl	r1, r1, #8
   64db4:	orr	r1, r1, #39	; 0x27
   64db8:	str	r3, [r6, #32]
   64dbc:	orr	r1, r1, r0, lsl #16
   64dc0:	mov	r0, r6
   64dc4:	bl	4f23c <luaL_error@@Base+0x9150>
   64dc8:	lsl	r1, r8, #8
   64dcc:	orr	r1, r1, #56	; 0x38
   64dd0:	orr	r1, r1, sl, lsl #16
   64dd4:	orr	r1, r1, r9, lsl #24
   64dd8:	mov	r0, r6
   64ddc:	bl	4f23c <luaL_error@@Base+0x9150>
   64de0:	ldr	r3, [r6, #32]
   64de4:	sub	r3, r3, #1
   64de8:	str	r3, [r6, #32]
   64dec:	b	64d78 <luaopen_ffi@@Base+0x23a0>
   64df0:	add	sp, sp, #24
   64df4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   64df8:	ldr	r1, [r5]
   64dfc:	mov	r0, r6
   64e00:	bl	1b6ac <_start@@Base+0x82fc>
   64e04:	b	64d08 <luaopen_ffi@@Base+0x2330>
   64e08:	ldr	r8, [r0, #68]	; 0x44
   64e0c:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   64e10:	mov	r1, r5
   64e14:	mov	r2, #0
   64e18:	mov	r0, r4
   64e1c:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   64e20:	mov	r0, r4
   64e24:	mov	r3, r8
   64e28:	mov	r2, r7
   64e2c:	mov	r1, #41	; 0x29
   64e30:	bl	643d8 <luaopen_ffi@@Base+0x1a00>
   64e34:	mov	r1, r5
   64e38:	ldr	r0, [r4]
   64e3c:	bl	4f31c <luaL_error@@Base+0x9230>
   64e40:	b	64c30 <luaopen_ffi@@Base+0x2258>
   64e44:	mov	r0, r6
   64e48:	bl	1328c <pclose@plt+0x1f0>
   64e4c:	ldr	r1, [pc, #8]	; 64e5c <luaopen_ffi@@Base+0x2484>
   64e50:	bl	4f034 <luaL_error@@Base+0x8f48>
   64e54:	andeq	r0, r0, pc, lsl r1
   64e58:	andeq	r0, r0, sl, lsl #2
   64e5c:	muleq	r0, r8, sl
   64e60:	ldr	r3, [r0, #108]	; 0x6c
   64e64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   64e68:	add	r3, r3, #1
   64e6c:	cmp	r3, #199	; 0xc7
   64e70:	sub	sp, sp, #100	; 0x64
   64e74:	str	r3, [r0, #108]	; 0x6c
   64e78:	bhi	660f4 <luaopen_ffi@@Base+0x371c>
   64e7c:	ldr	r3, [r0, #36]	; 0x24
   64e80:	mov	fp, r0
   64e84:	sub	r2, r3, #260	; 0x104
   64e88:	cmp	r2, #29
   64e8c:	ldrls	pc, [pc, r2, lsl #2]
   64e90:	b	64f0c <luaopen_ffi@@Base+0x2534>
   64e94:			; <UNDEFINED> instruction: 0x00064fbc
   64e98:			; <UNDEFINED> instruction: 0x00064fbc
   64e9c:			; <UNDEFINED> instruction: 0x00064fbc
   64ea0:	andeq	r4, r6, ip, lsl #30
   64ea4:	andeq	r4, r6, ip, lsl #30
   64ea8:	andeq	r4, r6, ip, lsl #30
   64eac:	andeq	r4, r6, ip, lsl #30
   64eb0:	andeq	r4, r6, ip, lsl #30
   64eb4:	andeq	r4, r6, ip, lsl #30
   64eb8:	andeq	r4, r6, ip, lsl #30
   64ebc:	andeq	r4, r6, ip, lsl #30
   64ec0:	andeq	r4, r6, ip, lsl #30
   64ec4:	andeq	r4, r6, ip, lsl #30
   64ec8:	andeq	r4, r6, ip, lsl #30
   64ecc:	andeq	r4, r6, ip, lsl #30
   64ed0:	andeq	r4, r6, ip, lsl #30
   64ed4:	andeq	r4, r6, ip, lsl #30
   64ed8:			; <UNDEFINED> instruction: 0x00064fbc
   64edc:	andeq	r4, r6, ip, lsl #30
   64ee0:	andeq	r4, r6, ip, lsl #30
   64ee4:	andeq	r4, r6, ip, lsl #30
   64ee8:	andeq	r4, r6, ip, lsl #30
   64eec:	andeq	r4, r6, ip, lsl #30
   64ef0:	andeq	r4, r6, ip, lsl #30
   64ef4:	andeq	r4, r6, ip, lsl #30
   64ef8:	andeq	r4, r6, ip, lsl #30
   64efc:	andeq	r4, r6, ip, lsl #30
   64f00:	andeq	r4, r6, ip, lsl #30
   64f04:	andeq	r4, r6, ip, lsl #30
   64f08:			; <UNDEFINED> instruction: 0x00064fbc
   64f0c:	sub	r3, r3, #256	; 0x100
   64f10:	sub	r3, r3, #2
   64f14:	ldr	r4, [fp, #68]	; 0x44
   64f18:	cmp	r3, #27
   64f1c:	ldrls	pc, [pc, r3, lsl #2]
   64f20:	b	64fec <luaopen_ffi@@Base+0x2614>
   64f24:	muleq	r6, r4, pc	; <UNPREDICTABLE>
   64f28:	andeq	r5, r6, r8, lsr #17
   64f2c:	andeq	r4, r6, ip, ror #31
   64f30:	andeq	r4, r6, ip, ror #31
   64f34:	andeq	r4, r6, ip, ror #31
   64f38:	andeq	r4, r6, ip, ror #31
   64f3c:	andeq	r5, r6, r8, lsr #9
   64f40:	andeq	r5, r6, r4, lsl r8
   64f44:	ldrdeq	r4, [r6], -r0
   64f48:	andeq	r5, r6, r8, asr #7
   64f4c:	andeq	r4, r6, ip, ror #31
   64f50:	strdeq	r5, [r6], -r0
   64f54:	andeq	r4, r6, ip, ror #31
   64f58:	andeq	r4, r6, ip, ror #31
   64f5c:	andeq	r4, r6, ip, ror #31
   64f60:	andeq	r5, r6, r8, lsl #4
   64f64:	andeq	r5, r6, r4, ror #2
   64f68:	andeq	r4, r6, ip, ror #31
   64f6c:	andeq	r4, r6, ip, ror #31
   64f70:	andeq	r4, r6, ip, ror #31
   64f74:	andeq	r5, r6, r0, ror r0
   64f78:	andeq	r4, r6, ip, ror #31
   64f7c:	andeq	r4, r6, ip, ror #31
   64f80:	andeq	r4, r6, ip, ror #31
   64f84:	andeq	r4, r6, ip, ror #31
   64f88:	andeq	r4, r6, ip, ror #31
   64f8c:	andeq	r4, r6, ip, ror #31
   64f90:	andeq	r5, r6, ip, asr #32
   64f94:	mov	r0, fp
   64f98:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   64f9c:	mov	r0, fp
   64fa0:	bl	503d0 <luaL_error@@Base+0xa2e4>
   64fa4:	ldr	r3, [fp, #36]	; 0x24
   64fa8:	cmp	r3, #59	; 0x3b
   64fac:	beq	65920 <luaopen_ffi@@Base+0x2f48>
   64fb0:	ldr	r3, [fp]
   64fb4:	ldr	r2, [r3, #36]	; 0x24
   64fb8:	str	r2, [r3, #32]
   64fbc:	ldr	r3, [fp, #108]	; 0x6c
   64fc0:	sub	r3, r3, #1
   64fc4:	str	r3, [fp, #108]	; 0x6c
   64fc8:	add	sp, sp, #100	; 0x64
   64fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   64fd0:	add	r1, fp, #16
   64fd4:	mov	r0, fp
   64fd8:	bl	63018 <luaopen_ffi@@Base+0x640>
   64fdc:	ldr	r3, [pc, #4036]	; 65fa8 <luaopen_ffi@@Base+0x35d0>
   64fe0:	cmp	r0, r3
   64fe4:	str	r0, [fp, #40]	; 0x28
   64fe8:	beq	65a34 <luaopen_ffi@@Base+0x305c>
   64fec:	add	r8, sp, #64	; 0x40
   64ff0:	mov	r1, r8
   64ff4:	mov	r0, fp
   64ff8:	ldr	r4, [fp]
   64ffc:	bl	64be4 <luaopen_ffi@@Base+0x220c>
   65000:	ldr	r3, [sp, #72]	; 0x48
   65004:	cmp	r3, #13
   65008:	beq	658d0 <luaopen_ffi@@Base+0x2ef8>
   6500c:	mov	r3, #0
   65010:	mov	r1, r8
   65014:	mov	r2, #1
   65018:	mov	r0, fp
   6501c:	str	r3, [sp, #88]	; 0x58
   65020:	bl	67814 <luaopen_ffi@@Base+0x4e3c>
   65024:	ldr	r3, [fp, #36]	; 0x24
   65028:	cmp	r3, #59	; 0x3b
   6502c:	bne	65060 <luaopen_ffi@@Base+0x2688>
   65030:	mov	r0, fp
   65034:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   65038:	ldr	r2, [fp]
   6503c:	ldr	r3, [fp, #36]	; 0x24
   65040:	ldr	r1, [r2, #36]	; 0x24
   65044:	str	r1, [r2, #32]
   65048:	b	64e84 <luaopen_ffi@@Base+0x24ac>
   6504c:	mov	r0, fp
   65050:	bl	641f8 <luaopen_ffi@@Base+0x1820>
   65054:	ldr	r3, [fp, #36]	; 0x24
   65058:	cmp	r3, #59	; 0x3b
   6505c:	beq	65030 <luaopen_ffi@@Base+0x2658>
   65060:	ldr	r2, [fp]
   65064:	ldr	r1, [r2, #36]	; 0x24
   65068:	str	r1, [r2, #32]
   6506c:	b	64e84 <luaopen_ffi@@Base+0x24ac>
   65070:	ldr	r5, [fp]
   65074:	mov	r0, fp
   65078:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   6507c:	ldr	r9, [r5, #20]
   65080:	mov	r0, fp
   65084:	str	r9, [r5, #24]
   65088:	bl	67738 <luaopen_ffi@@Base+0x4d60>
   6508c:	ldr	r2, [r5, #36]	; 0x24
   65090:	mov	r3, #1
   65094:	strb	r2, [sp, #72]	; 0x48
   65098:	strb	r3, [sp, #73]	; 0x49
   6509c:	ldr	r3, [r5, #4]
   650a0:	ldr	r2, [r5, #12]
   650a4:	add	r8, sp, #96	; 0x60
   650a8:	ldr	r3, [r3, #96]	; 0x60
   650ac:	ldr	r1, [pc, #3832]	; 65fac <luaopen_ffi@@Base+0x35d4>
   650b0:	str	r3, [sp, #68]	; 0x44
   650b4:	str	r2, [r8, #-32]!	; 0xffffffe0
   650b8:	str	r8, [r5, #12]
   650bc:	mov	r7, r0
   650c0:	mov	r0, fp
   650c4:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   650c8:	ldr	r1, [r5, #36]	; 0x24
   650cc:	mov	r0, r5
   650d0:	lsl	r1, r1, #8
   650d4:	orr	r1, r1, #85	; 0x55
   650d8:	bl	4f23c <luaL_error@@Base+0x9150>
   650dc:	mov	r6, r0
   650e0:	mov	r0, fp
   650e4:	bl	67a3c <luaopen_ffi@@Base+0x5064>
   650e8:	mov	r0, r5
   650ec:	bl	4f664 <luaL_error@@Base+0x9578>
   650f0:	mov	r2, r9
   650f4:	mov	r1, r0
   650f8:	mov	r0, r5
   650fc:	bl	4f184 <luaL_error@@Base+0x9098>
   65100:	ldr	r2, [pc, #3752]	; 65fb0 <luaopen_ffi@@Base+0x35d8>
   65104:	mov	r3, r4
   65108:	ldr	r1, [pc, #3748]	; 65fb4 <luaopen_ffi@@Base+0x35dc>
   6510c:	mov	r0, fp
   65110:	bl	643d8 <luaopen_ffi@@Base+0x1a00>
   65114:	mov	r0, r5
   65118:	bl	50694 <luaL_error@@Base+0xa5a8>
   6511c:	ldr	r2, [r5, #20]
   65120:	cmn	r7, #1
   65124:	str	r2, [r5, #24]
   65128:	beq	65140 <luaopen_ffi@@Base+0x2768>
   6512c:	mov	r2, r7
   65130:	add	r1, r5, #28
   65134:	mov	r0, r5
   65138:	bl	4f10c <luaL_error@@Base+0x9020>
   6513c:	ldr	r2, [r5, #20]
   65140:	rsb	r3, r6, #32512	; 0x7f00
   65144:	add	r3, r3, #255	; 0xff
   65148:	add	r3, r3, r2
   6514c:	ldr	r0, [r5, #52]	; 0x34
   65150:	cmp	r3, #65536	; 0x10000
   65154:	add	r0, r0, r6, lsl #3
   65158:	bcs	6610c <luaopen_ffi@@Base+0x3734>
   6515c:	strh	r3, [r0, #2]
   65160:	b	65054 <luaopen_ffi@@Base+0x267c>
   65164:	ldr	r4, [fp]
   65168:	mov	r0, fp
   6516c:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   65170:	ldrb	r3, [r4, #64]	; 0x40
   65174:	orr	r3, r3, #32
   65178:	strb	r3, [r4, #64]	; 0x40
   6517c:	ldr	r1, [fp, #36]	; 0x24
   65180:	sub	r2, r1, #260	; 0x104
   65184:	cmp	r2, #29
   65188:	ldrls	pc, [pc, r2, lsl #2]
   6518c:	b	658e8 <luaopen_ffi@@Base+0x2f10>
   65190:	strdeq	r5, [r6], -r0
   65194:	strdeq	r5, [r6], -r0
   65198:	strdeq	r5, [r6], -r0
   6519c:	andeq	r5, r6, r8, ror #17
   651a0:	andeq	r5, r6, r8, ror #17
   651a4:	andeq	r5, r6, r8, ror #17
   651a8:	andeq	r5, r6, r8, ror #17
   651ac:	andeq	r5, r6, r8, ror #17
   651b0:	andeq	r5, r6, r8, ror #17
   651b4:	andeq	r5, r6, r8, ror #17
   651b8:	andeq	r5, r6, r8, ror #17
   651bc:	andeq	r5, r6, r8, ror #17
   651c0:	andeq	r5, r6, r8, ror #17
   651c4:	andeq	r5, r6, r8, ror #17
   651c8:	andeq	r5, r6, r8, ror #17
   651cc:	andeq	r5, r6, r8, ror #17
   651d0:	andeq	r5, r6, r8, ror #17
   651d4:	strdeq	r5, [r6], -r0
   651d8:	andeq	r5, r6, r8, ror #17
   651dc:	andeq	r5, r6, r8, ror #17
   651e0:	andeq	r5, r6, r8, ror #17
   651e4:	andeq	r5, r6, r8, ror #17
   651e8:	andeq	r5, r6, r8, ror #17
   651ec:	andeq	r5, r6, r8, ror #17
   651f0:	andeq	r5, r6, r8, ror #17
   651f4:	andeq	r5, r6, r8, ror #17
   651f8:	andeq	r5, r6, r8, ror #17
   651fc:	andeq	r5, r6, r8, ror #17
   65200:	andeq	r5, r6, r8, ror #17
   65204:	strdeq	r5, [r6], -r0
   65208:	ldr	r5, [fp]
   6520c:	mov	r3, #1
   65210:	add	r8, sp, #96	; 0x60
   65214:	ldrb	r2, [r5, #36]	; 0x24
   65218:	ldr	r6, [r5, #20]
   6521c:	mov	r0, fp
   65220:	str	r6, [r5, #24]
   65224:	strb	r2, [sp, #48]	; 0x30
   65228:	strb	r3, [sp, #49]	; 0x31
   6522c:	ldr	r3, [r5, #4]
   65230:	ldr	r1, [r5, #12]
   65234:	ldr	r3, [r3, #96]	; 0x60
   65238:	strb	r2, [sp, #72]	; 0x48
   6523c:	str	r3, [sp, #44]	; 0x2c
   65240:	add	r2, sp, #40	; 0x28
   65244:	str	r3, [sp, #68]	; 0x44
   65248:	mov	r3, #0
   6524c:	str	r2, [r8, #-32]!	; 0xffffffe0
   65250:	strb	r3, [sp, #73]	; 0x49
   65254:	str	r1, [sp, #40]	; 0x28
   65258:	str	r8, [r5, #12]
   6525c:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   65260:	ldr	r1, [r5, #36]	; 0x24
   65264:	mov	r0, r5
   65268:	lsl	r1, r1, #8
   6526c:	orr	r1, r1, #85	; 0x55
   65270:	bl	4f23c <luaL_error@@Base+0x9150>
   65274:	mov	r0, fp
   65278:	bl	64e60 <luaopen_ffi@@Base+0x2488>
   6527c:	mov	r3, r4
   65280:	ldr	r2, [pc, #3376]	; 65fb8 <luaopen_ffi@@Base+0x35e0>
   65284:	ldr	r1, [pc, #3376]	; 65fbc <luaopen_ffi@@Base+0x35e4>
   65288:	mov	r0, fp
   6528c:	bl	643d8 <luaopen_ffi@@Base+0x1a00>
   65290:	mov	r0, fp
   65294:	bl	67738 <luaopen_ffi@@Base+0x4d60>
   65298:	ldrb	r3, [sp, #73]	; 0x49
   6529c:	tst	r3, #8
   652a0:	mov	r4, r0
   652a4:	bne	65998 <luaopen_ffi@@Base+0x2fc0>
   652a8:	mov	r0, r5
   652ac:	bl	50694 <luaL_error@@Base+0xa5a8>
   652b0:	mov	r2, r6
   652b4:	mov	r1, r4
   652b8:	mov	r0, r5
   652bc:	bl	4f184 <luaL_error@@Base+0x9098>
   652c0:	ldr	r3, [r5, #20]
   652c4:	ldr	r2, [r5, #52]	; 0x34
   652c8:	add	r3, r3, #32512	; 0x7f00
   652cc:	add	r3, r3, #255	; 0xff
   652d0:	sub	r3, r3, r6
   652d4:	cmp	r3, #65536	; 0x10000
   652d8:	add	r6, r2, r6, lsl #3
   652dc:	bcs	6610c <luaopen_ffi@@Base+0x3734>
   652e0:	strh	r3, [r6, #2]
   652e4:	mov	r0, r5
   652e8:	bl	50694 <luaL_error@@Base+0xa5a8>
   652ec:	b	65054 <luaopen_ffi@@Base+0x267c>
   652f0:	mov	r0, fp
   652f4:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   652f8:	ldr	r3, [pc, #3264]	; 65fc0 <luaopen_ffi@@Base+0x35e8>
   652fc:	ldr	r2, [fp, #36]	; 0x24
   65300:	cmp	r2, r3
   65304:	movne	r4, #0
   65308:	bne	6531c <luaopen_ffi@@Base+0x2944>
   6530c:	b	65b58 <luaopen_ffi@@Base+0x3180>
   65310:	mov	r0, fp
   65314:	mov	r4, r5
   65318:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   6531c:	mov	r0, fp
   65320:	bl	64140 <luaopen_ffi@@Base+0x1768>
   65324:	mov	r1, r4
   65328:	add	r5, r4, #1
   6532c:	mov	r2, r0
   65330:	mov	r0, fp
   65334:	bl	50248 <luaL_error@@Base+0xa15c>
   65338:	ldr	r3, [fp, #36]	; 0x24
   6533c:	cmp	r3, #44	; 0x2c
   65340:	beq	65310 <luaopen_ffi@@Base+0x2938>
   65344:	cmp	r3, #61	; 0x3d
   65348:	beq	65e70 <luaopen_ffi@@Base+0x3498>
   6534c:	mov	r2, #0
   65350:	add	r8, sp, #64	; 0x40
   65354:	mov	r3, #14
   65358:	str	r3, [sp, #72]	; 0x48
   6535c:	mov	r0, fp
   65360:	mov	r3, r8
   65364:	mov	r1, r5
   65368:	bl	4f908 <luaL_error@@Base+0x981c>
   6536c:	ldr	r6, [fp]
   65370:	cmp	r5, #0
   65374:	ldr	r0, [r6, #36]	; 0x24
   65378:	beq	653c0 <luaopen_ffi@@Base+0x29e8>
   6537c:	add	r1, r0, #34	; 0x22
   65380:	add	r2, r0, #1
   65384:	ldr	r5, [fp, #88]	; 0x58
   65388:	ldr	lr, [r6, #20]
   6538c:	add	r1, r6, r1, lsl #1
   65390:	add	r4, r2, r4
   65394:	mov	ip, #0
   65398:	b	653a0 <luaopen_ffi@@Base+0x29c8>
   6539c:	add	r2, r2, #1
   653a0:	ldrh	r3, [r1], #2
   653a4:	cmp	r4, r2
   653a8:	add	r3, r5, r3, lsl #4
   653ac:	strb	r0, [r3, #12]
   653b0:	str	lr, [r3, #4]
   653b4:	strb	ip, [r3, #13]
   653b8:	mov	r0, r2
   653bc:	bne	6539c <luaopen_ffi@@Base+0x29c4>
   653c0:	str	r0, [r6, #36]	; 0x24
   653c4:	b	65054 <luaopen_ffi@@Base+0x267c>
   653c8:	mvn	r3, #0
   653cc:	mov	r0, fp
   653d0:	str	r3, [sp, #64]	; 0x40
   653d4:	ldr	r5, [fp]
   653d8:	bl	67a88 <luaopen_ffi@@Base+0x50b0>
   653dc:	ldr	r3, [fp, #36]	; 0x24
   653e0:	ldr	r2, [pc, #3036]	; 65fc4 <luaopen_ffi@@Base+0x35ec>
   653e4:	add	r8, r5, #28
   653e8:	cmp	r3, r2
   653ec:	mov	r6, r0
   653f0:	bne	65450 <luaopen_ffi@@Base+0x2a78>
   653f4:	mov	r7, r3
   653f8:	mov	r0, r5
   653fc:	bl	4f664 <luaL_error@@Base+0x9578>
   65400:	cmn	r0, #1
   65404:	beq	65418 <luaopen_ffi@@Base+0x2a40>
   65408:	mov	r2, r0
   6540c:	add	r1, sp, #64	; 0x40
   65410:	mov	r0, r5
   65414:	bl	4f10c <luaL_error@@Base+0x9020>
   65418:	ldr	r3, [r5, #20]
   6541c:	cmn	r6, #1
   65420:	str	r3, [r5, #24]
   65424:	beq	65438 <luaopen_ffi@@Base+0x2a60>
   65428:	mov	r2, r6
   6542c:	mov	r1, r8
   65430:	mov	r0, r5
   65434:	bl	4f10c <luaL_error@@Base+0x9020>
   65438:	mov	r0, fp
   6543c:	bl	67a88 <luaopen_ffi@@Base+0x50b0>
   65440:	ldr	r3, [fp, #36]	; 0x24
   65444:	cmp	r3, r7
   65448:	mov	r6, r0
   6544c:	beq	653f8 <luaopen_ffi@@Base+0x2a20>
   65450:	cmp	r3, #260	; 0x104
   65454:	beq	65c24 <luaopen_ffi@@Base+0x324c>
   65458:	cmn	r6, #1
   6545c:	beq	65470 <luaopen_ffi@@Base+0x2a98>
   65460:	mov	r2, r6
   65464:	add	r1, sp, #64	; 0x40
   65468:	mov	r0, r5
   6546c:	bl	4f10c <luaL_error@@Base+0x9020>
   65470:	ldr	r2, [sp, #64]	; 0x40
   65474:	ldr	r3, [r5, #20]
   65478:	cmn	r2, #1
   6547c:	str	r3, [r5, #24]
   65480:	beq	65490 <luaopen_ffi@@Base+0x2ab8>
   65484:	mov	r1, r8
   65488:	mov	r0, r5
   6548c:	bl	4f10c <luaL_error@@Base+0x9020>
   65490:	mov	r3, r4
   65494:	ldr	r2, [pc, #2860]	; 65fc8 <luaopen_ffi@@Base+0x35f0>
   65498:	ldr	r1, [pc, #2836]	; 65fb4 <luaopen_ffi@@Base+0x35dc>
   6549c:	mov	r0, fp
   654a0:	bl	643d8 <luaopen_ffi@@Base+0x1a00>
   654a4:	b	65054 <luaopen_ffi@@Base+0x267c>
   654a8:	ldr	r9, [fp]
   654ac:	mov	r5, #1
   654b0:	strb	r5, [sp, #37]	; 0x25
   654b4:	ldr	r3, [r9, #36]	; 0x24
   654b8:	ldr	r1, [r9, #12]
   654bc:	strb	r3, [sp, #36]	; 0x24
   654c0:	ldr	r2, [r9, #4]
   654c4:	add	r3, sp, #96	; 0x60
   654c8:	mov	r0, fp
   654cc:	ldr	r2, [r2, #96]	; 0x60
   654d0:	str	r1, [r3, #-68]!	; 0xffffffbc
   654d4:	str	r3, [r9, #12]
   654d8:	str	r2, [sp, #32]
   654dc:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   654e0:	mov	r0, fp
   654e4:	bl	64140 <luaopen_ffi@@Base+0x1768>
   654e8:	ldr	r6, [fp, #36]	; 0x24
   654ec:	cmp	r6, #61	; 0x3d
   654f0:	mov	r8, r0
   654f4:	beq	65c78 <luaopen_ffi@@Base+0x32a0>
   654f8:	cmp	r6, #268	; 0x10c
   654fc:	cmpne	r6, #44	; 0x2c
   65500:	bne	66100 <luaopen_ffi@@Base+0x3728>
   65504:	ldr	sl, [fp]
   65508:	mov	r2, #4
   6550c:	mov	r1, #0
   65510:	ldr	r3, [sl, #32]
   65514:	mov	r0, fp
   65518:	add	r3, r3, #3
   6551c:	str	r3, [sp, #4]
   65520:	ldr	r6, [sl, #20]
   65524:	bl	50248 <luaL_error@@Base+0xa15c>
   65528:	mov	r2, #5
   6552c:	mov	r1, r5
   65530:	mov	r0, fp
   65534:	bl	50248 <luaL_error@@Base+0xa15c>
   65538:	mov	r2, #6
   6553c:	mov	r1, #2
   65540:	mov	r0, fp
   65544:	bl	50248 <luaL_error@@Base+0xa15c>
   65548:	mov	r2, r8
   6554c:	mov	r1, #3
   65550:	mov	r0, fp
   65554:	bl	50248 <luaL_error@@Base+0xa15c>
   65558:	ldr	r3, [fp, #36]	; 0x24
   6555c:	cmp	r3, #44	; 0x2c
   65560:	moveq	r7, #4
   65564:	bne	65938 <luaopen_ffi@@Base+0x2f60>
   65568:	mov	r0, fp
   6556c:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   65570:	mov	r0, fp
   65574:	bl	64140 <luaopen_ffi@@Base+0x1768>
   65578:	mov	r1, r7
   6557c:	add	r5, r7, #1
   65580:	mov	r7, r5
   65584:	mov	r2, r0
   65588:	mov	r0, fp
   6558c:	bl	50248 <luaL_error@@Base+0xa15c>
   65590:	ldr	r3, [fp, #36]	; 0x24
   65594:	cmp	r3, #44	; 0x2c
   65598:	beq	65568 <luaopen_ffi@@Base+0x2b90>
   6559c:	mov	r1, #268	; 0x10c
   655a0:	mov	r0, fp
   655a4:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   655a8:	add	r8, sp, #64	; 0x40
   655ac:	ldr	r3, [fp, #68]	; 0x44
   655b0:	mov	r1, r8
   655b4:	mov	r0, fp
   655b8:	str	r3, [sp, #16]
   655bc:	bl	677b4 <luaopen_ffi@@Base+0x4ddc>
   655c0:	mov	r3, r8
   655c4:	mov	r1, #3
   655c8:	mov	r2, r0
   655cc:	mov	r0, fp
   655d0:	bl	4f908 <luaL_error@@Base+0x981c>
   655d4:	ldr	r3, [sl, #32]
   655d8:	ldrb	r2, [sl, #66]	; 0x42
   655dc:	add	r3, r3, #3
   655e0:	cmp	r3, r2
   655e4:	bhi	65988 <luaopen_ffi@@Base+0x2fb0>
   655e8:	sub	r3, r5, #3
   655ec:	str	r3, [sp, #8]
   655f0:	cmp	r5, #5
   655f4:	sub	r3, r5, #4
   655f8:	str	r3, [sp, #20]
   655fc:	bls	65aec <luaopen_ffi@@Base+0x3114>
   65600:	ldr	r6, [fp, #88]	; 0x58
   65604:	mov	r3, #0
   65608:	str	r3, [sp]
   6560c:	ldr	ip, [fp]
   65610:	mov	r7, #0
   65614:	ldr	r2, [ip, #36]	; 0x24
   65618:	ldr	lr, [ip, #20]
   6561c:	add	r1, r2, #34	; 0x22
   65620:	add	r0, r2, #3
   65624:	add	r1, ip, r1, lsl #1
   65628:	ldrh	r3, [r1], #2
   6562c:	add	r3, r6, r3, lsl #4
   65630:	strb	r2, [r3, #12]
   65634:	add	r2, r2, #1
   65638:	cmp	r0, r2
   6563c:	str	lr, [r3, #4]
   65640:	strb	r7, [r3, #13]
   65644:	bne	65628 <luaopen_ffi@@Base+0x2c50>
   65648:	ldr	r3, [sp, #4]
   6564c:	str	r0, [ip, #36]	; 0x24
   65650:	ldr	r1, [pc, #2388]	; 65fac <luaopen_ffi@@Base+0x35d4>
   65654:	lsl	r3, r3, #8
   65658:	mov	r0, fp
   6565c:	mov	r6, r3
   65660:	str	r3, [sp, #12]
   65664:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   65668:	ldr	r3, [sp]
   6566c:	mov	r0, sl
   65670:	cmp	r3, #0
   65674:	orr	r3, r6, #2130706432	; 0x7f000000
   65678:	orr	r3, r3, #16711680	; 0xff0000
   6567c:	moveq	r1, #88	; 0x58
   65680:	movne	r1, #72	; 0x48
   65684:	orr	r1, r3, r1
   65688:	bl	4f23c <luaL_error@@Base+0x9150>
   6568c:	ldr	r3, [sl, #36]	; 0x24
   65690:	mov	ip, #0
   65694:	strb	r3, [sp, #48]	; 0x30
   65698:	strb	ip, [sp, #49]	; 0x31
   6569c:	ldr	r3, [sl, #4]
   656a0:	ldr	r6, [fp]
   656a4:	ldr	r1, [sp, #8]
   656a8:	ldr	r3, [r3, #96]	; 0x60
   656ac:	ldr	r2, [sl, #12]
   656b0:	str	r3, [sp, #44]	; 0x2c
   656b4:	add	r3, sp, #96	; 0x60
   656b8:	cmp	r1, ip
   656bc:	str	r2, [r3, #-56]!	; 0xffffffc8
   656c0:	str	r3, [sl, #12]
   656c4:	str	r0, [sp, #4]
   656c8:	ldr	r0, [r6, #36]	; 0x24
   656cc:	beq	65714 <luaopen_ffi@@Base+0x2d3c>
   656d0:	add	r1, r0, #34	; 0x22
   656d4:	ldr	r3, [sp, #20]
   656d8:	add	r2, r0, #1
   656dc:	ldr	r8, [fp, #88]	; 0x58
   656e0:	ldr	r7, [r6, #20]
   656e4:	add	r1, r6, r1, lsl #1
   656e8:	add	lr, r2, r3
   656ec:	b	656f4 <luaopen_ffi@@Base+0x2d1c>
   656f0:	add	r2, r2, #1
   656f4:	ldrh	r3, [r1], #2
   656f8:	cmp	lr, r2
   656fc:	add	r3, r8, r3, lsl #4
   65700:	strb	r0, [r3, #12]
   65704:	str	r7, [r3, #4]
   65708:	strb	ip, [r3, #13]
   6570c:	mov	r0, r2
   65710:	bne	656f0 <luaopen_ffi@@Base+0x2d18>
   65714:	str	r0, [r6, #36]	; 0x24
   65718:	ldr	r3, [sl, #32]
   6571c:	ldrb	r2, [sl, #66]	; 0x42
   65720:	ldr	r1, [sp, #8]
   65724:	add	r3, r1, r3
   65728:	cmp	r3, r2
   6572c:	bls	6573c <luaopen_ffi@@Base+0x2d64>
   65730:	cmp	r3, #249	; 0xf9
   65734:	bhi	66128 <luaopen_ffi@@Base+0x3750>
   65738:	strb	r3, [sl, #66]	; 0x42
   6573c:	str	r3, [sl, #32]
   65740:	mov	r0, fp
   65744:	bl	67a3c <luaopen_ffi@@Base+0x5064>
   65748:	mov	r0, sl
   6574c:	bl	50694 <luaL_error@@Base+0xa5a8>
   65750:	ldr	r3, [sl, #20]
   65754:	ldr	r1, [sp, #4]
   65758:	add	r3, r3, #32512	; 0x7f00
   6575c:	ldr	r7, [pc, #2152]	; 65fcc <luaopen_ffi@@Base+0x35f4>
   65760:	add	r3, r3, #255	; 0xff
   65764:	sub	r3, r3, r1
   65768:	ldr	r2, [sl, #52]	; 0x34
   6576c:	cmp	r3, r7
   65770:	add	r2, r2, r1, lsl #3
   65774:	bhi	66130 <luaopen_ffi@@Base+0x3758>
   65778:	ldr	r6, [sp, #12]
   6577c:	ldr	r1, [sp]
   65780:	sub	r5, r5, #2
   65784:	cmp	r1, #0
   65788:	orr	r1, r6, #196608	; 0x30000
   6578c:	orr	r5, r1, r5, lsl #24
   65790:	moveq	r1, #69	; 0x45
   65794:	movne	r1, #70	; 0x46
   65798:	strh	r3, [r2, #2]
   6579c:	orr	r1, r5, r1
   657a0:	mov	r0, sl
   657a4:	bl	4f23c <luaL_error@@Base+0x9150>
   657a8:	ldr	r1, [pc, #2080]	; 65fd0 <luaopen_ffi@@Base+0x35f8>
   657ac:	mov	r0, sl
   657b0:	orr	r1, r6, r1
   657b4:	bl	4f23c <luaL_error@@Base+0x9150>
   657b8:	ldr	r3, [sp, #4]
   657bc:	ldr	r2, [sl, #52]	; 0x34
   657c0:	add	r6, r3, #32768	; 0x8000
   657c4:	sub	r1, r0, #-536870911	; 0xe0000001
   657c8:	sub	r0, r6, r0
   657cc:	lsl	r1, r1, #3
   657d0:	add	r3, r1, #8
   657d4:	add	r3, r2, r3
   657d8:	add	r2, r2, r1
   657dc:	ldr	r1, [sp, #16]
   657e0:	cmp	r0, r7
   657e4:	str	r1, [r2, #4]
   657e8:	str	r1, [r3, #4]
   657ec:	bhi	66130 <luaopen_ffi@@Base+0x3758>
   657f0:	strh	r0, [r3, #2]
   657f4:	mov	r0, fp
   657f8:	mov	r3, r4
   657fc:	mov	r2, #264	; 0x108
   65800:	ldr	r1, [pc, #1964]	; 65fb4 <luaopen_ffi@@Base+0x35dc>
   65804:	bl	643d8 <luaopen_ffi@@Base+0x1a00>
   65808:	mov	r0, r9
   6580c:	bl	50694 <luaL_error@@Base+0xa5a8>
   65810:	b	65054 <luaopen_ffi@@Base+0x267c>
   65814:	mov	r0, fp
   65818:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   6581c:	mov	r0, fp
   65820:	ldr	r5, [fp]
   65824:	bl	64140 <luaopen_ffi@@Base+0x1768>
   65828:	mov	r3, #1
   6582c:	add	r2, sp, #40	; 0x28
   65830:	mov	r1, r0
   65834:	mov	r0, r5
   65838:	bl	4fe70 <luaL_error@@Base+0x9d84>
   6583c:	ldr	r3, [fp, #36]	; 0x24
   65840:	cmp	r3, #46	; 0x2e
   65844:	bne	65860 <luaopen_ffi@@Base+0x2e88>
   65848:	add	r1, sp, #40	; 0x28
   6584c:	mov	r0, fp
   65850:	bl	64178 <luaopen_ffi@@Base+0x17a0>
   65854:	ldr	r3, [fp, #36]	; 0x24
   65858:	cmp	r3, #46	; 0x2e
   6585c:	beq	65848 <luaopen_ffi@@Base+0x2e70>
   65860:	cmp	r3, #58	; 0x3a
   65864:	movne	r2, #0
   65868:	beq	65b44 <luaopen_ffi@@Base+0x316c>
   6586c:	add	r8, sp, #64	; 0x40
   65870:	mov	r3, r4
   65874:	mov	r1, r8
   65878:	mov	r0, fp
   6587c:	bl	66780 <luaopen_ffi@@Base+0x3da8>
   65880:	ldr	r5, [fp]
   65884:	mov	r2, r8
   65888:	add	r1, sp, #40	; 0x28
   6588c:	mov	r0, r5
   65890:	bl	4fb04 <luaL_error@@Base+0x9a18>
   65894:	ldr	r2, [r5, #20]
   65898:	ldr	r3, [r5, #52]	; 0x34
   6589c:	add	r3, r3, r2, lsl #3
   658a0:	str	r4, [r3, #-4]
   658a4:	b	65054 <luaopen_ffi@@Base+0x267c>
   658a8:	mov	r0, fp
   658ac:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   658b0:	mov	r0, fp
   658b4:	bl	67a3c <luaopen_ffi@@Base+0x5064>
   658b8:	mov	r3, r4
   658bc:	ldr	r2, [pc, #1768]	; 65fac <luaopen_ffi@@Base+0x35d4>
   658c0:	ldr	r1, [pc, #1772]	; 65fb4 <luaopen_ffi@@Base+0x35dc>
   658c4:	mov	r0, fp
   658c8:	bl	643d8 <luaopen_ffi@@Base+0x1a00>
   658cc:	b	65054 <luaopen_ffi@@Base+0x267c>
   658d0:	ldr	r1, [sp, #64]	; 0x40
   658d4:	ldr	r3, [r4, #52]	; 0x34
   658d8:	mov	r2, #1
   658dc:	add	r3, r3, r1, lsl #3
   658e0:	strb	r2, [r3, #3]
   658e4:	b	65054 <luaopen_ffi@@Base+0x267c>
   658e8:	cmp	r1, #59	; 0x3b
   658ec:	bne	659dc <luaopen_ffi@@Base+0x3004>
   658f0:	ldr	r5, [pc, #1756]	; 65fd4 <luaopen_ffi@@Base+0x35fc>
   658f4:	tst	r3, #1
   658f8:	beq	65908 <luaopen_ffi@@Base+0x2f30>
   658fc:	mov	r1, #-2147483598	; 0x80000032
   65900:	mov	r0, r4
   65904:	bl	4f23c <luaL_error@@Base+0x9150>
   65908:	mov	r1, r5
   6590c:	mov	r0, r4
   65910:	bl	4f23c <luaL_error@@Base+0x9150>
   65914:	ldr	r3, [fp, #36]	; 0x24
   65918:	cmp	r3, #59	; 0x3b
   6591c:	bne	64fb0 <luaopen_ffi@@Base+0x25d8>
   65920:	mov	r0, fp
   65924:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   65928:	ldr	r3, [fp]
   6592c:	ldr	r2, [r3, #36]	; 0x24
   65930:	str	r2, [r3, #32]
   65934:	b	64fbc <luaopen_ffi@@Base+0x25e4>
   65938:	mov	r1, #268	; 0x10c
   6593c:	mov	r0, fp
   65940:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   65944:	add	r8, sp, #64	; 0x40
   65948:	ldr	r3, [fp, #68]	; 0x44
   6594c:	mov	r1, r8
   65950:	mov	r0, fp
   65954:	str	r3, [sp, #16]
   65958:	bl	677b4 <luaopen_ffi@@Base+0x4ddc>
   6595c:	mov	r3, r8
   65960:	mov	r1, #3
   65964:	mov	r2, r0
   65968:	mov	r0, fp
   6596c:	bl	4f908 <luaL_error@@Base+0x981c>
   65970:	ldr	r3, [sl, #32]
   65974:	ldrb	r2, [sl, #66]	; 0x42
   65978:	add	r3, r3, #3
   6597c:	cmp	r2, r3
   65980:	bcs	65adc <luaopen_ffi@@Base+0x3104>
   65984:	mov	r5, #4
   65988:	cmp	r3, #249	; 0xf9
   6598c:	bhi	66128 <luaopen_ffi@@Base+0x3750>
   65990:	strb	r3, [sl, #66]	; 0x42
   65994:	b	655e8 <luaopen_ffi@@Base+0x2c10>
   65998:	mov	r0, fp
   6599c:	bl	503d0 <luaL_error@@Base+0xa2e4>
   659a0:	ldr	r3, [r5, #20]
   659a4:	cmn	r4, #1
   659a8:	str	r3, [r5, #24]
   659ac:	bne	659c8 <luaopen_ffi@@Base+0x2ff0>
   659b0:	mov	r0, r5
   659b4:	bl	50694 <luaL_error@@Base+0xa5a8>
   659b8:	mov	r0, r5
   659bc:	bl	4f664 <luaL_error@@Base+0x9578>
   659c0:	mov	r4, r0
   659c4:	b	652b0 <luaopen_ffi@@Base+0x28d8>
   659c8:	mov	r2, r4
   659cc:	add	r1, r5, #28
   659d0:	mov	r0, r5
   659d4:	bl	4f10c <luaL_error@@Base+0x9020>
   659d8:	b	659b0 <luaopen_ffi@@Base+0x2fd8>
   659dc:	add	r1, sp, #64	; 0x40
   659e0:	mov	r0, fp
   659e4:	bl	677b4 <luaopen_ffi@@Base+0x4ddc>
   659e8:	ldr	r3, [sp, #72]	; 0x48
   659ec:	cmp	r0, #1
   659f0:	mov	r6, r0
   659f4:	beq	65ec4 <luaopen_ffi@@Base+0x34ec>
   659f8:	cmp	r3, #13
   659fc:	bne	65e90 <luaopen_ffi@@Base+0x34b8>
   65a00:	ldr	r2, [sp, #64]	; 0x40
   65a04:	ldr	r3, [r4, #52]	; 0x34
   65a08:	add	r3, r3, r2, lsl #3
   65a0c:	mov	r2, #0
   65a10:	strb	r2, [r3, #3]
   65a14:	ldr	r2, [r4, #36]	; 0x24
   65a18:	ldr	r3, [sp, #68]	; 0x44
   65a1c:	lsl	r5, r2, #8
   65a20:	sub	r3, r3, r2
   65a24:	orr	r5, r5, #73	; 0x49
   65a28:	orr	r5, r5, r3, lsl #16
   65a2c:	ldrb	r3, [r4, #64]	; 0x40
   65a30:	b	658f4 <luaopen_ffi@@Base+0x2f1c>
   65a34:	mov	r0, fp
   65a38:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   65a3c:	mov	r0, fp
   65a40:	ldr	r5, [fp]
   65a44:	bl	64140 <luaopen_ffi@@Base+0x1768>
   65a48:	ldr	r2, [fp]
   65a4c:	ldr	r1, [fp, #96]	; 0x60
   65a50:	ldr	r3, [fp, #88]	; 0x58
   65a54:	ldr	r2, [r2, #12]
   65a58:	add	r1, r3, r1, lsl #4
   65a5c:	ldr	r2, [r2, #4]
   65a60:	add	r3, r3, r2, lsl #4
   65a64:	cmp	r3, r1
   65a68:	mov	r4, r0
   65a6c:	bcc	65a80 <luaopen_ffi@@Base+0x30a8>
   65a70:	b	65aac <luaopen_ffi@@Base+0x30d4>
   65a74:	add	r3, r3, #16
   65a78:	cmp	r1, r3
   65a7c:	bls	65aac <luaopen_ffi@@Base+0x30d4>
   65a80:	ldr	r2, [r3]
   65a84:	cmp	r4, r2
   65a88:	bne	65a74 <luaopen_ffi@@Base+0x309c>
   65a8c:	ldrb	r2, [r3, #13]
   65a90:	tst	r2, #4
   65a94:	beq	65a74 <luaopen_ffi@@Base+0x309c>
   65a98:	ldrb	r1, [r3, #12]
   65a9c:	ldr	r3, [pc, #1332]	; 65fd8 <luaopen_ffi@@Base+0x3600>
   65aa0:	mov	r0, r5
   65aa4:	orr	r1, r3, r1, lsl #8
   65aa8:	bl	4f23c <luaL_error@@Base+0x9150>
   65aac:	ldr	r2, [r5, #12]
   65ab0:	mov	r0, r5
   65ab4:	ldrb	r3, [r2, #9]
   65ab8:	orr	r3, r3, #4
   65abc:	strb	r3, [r2, #9]
   65ac0:	bl	4f664 <luaL_error@@Base+0x9578>
   65ac4:	mov	r1, r4
   65ac8:	mov	r2, #2
   65acc:	mov	r3, r0
   65ad0:	mov	r0, fp
   65ad4:	bl	5031c <luaL_error@@Base+0xa230>
   65ad8:	b	65054 <luaopen_ffi@@Base+0x267c>
   65adc:	str	r5, [sp, #8]
   65ae0:	mov	r5, #4
   65ae4:	mov	r3, #0
   65ae8:	str	r3, [sp, #20]
   65aec:	ldr	r3, [sl, #52]	; 0x34
   65af0:	ldr	r7, [r3, r6, lsl #3]
   65af4:	uxtb	r3, r7
   65af8:	cmp	r3, #45	; 0x2d
   65afc:	beq	66048 <luaopen_ffi@@Base+0x3670>
   65b00:	cmp	r3, #54	; 0x36
   65b04:	beq	65f0c <luaopen_ffi@@Base+0x3534>
   65b08:	cmp	r3, #18
   65b0c:	bne	65600 <luaopen_ffi@@Base+0x2c28>
   65b10:	lsr	r3, r7, #16
   65b14:	ldr	r6, [fp, #88]	; 0x58
   65b18:	add	r3, sl, r3, lsl #1
   65b1c:	ldrh	r3, [r3, #68]	; 0x44
   65b20:	ldr	r0, [r6, r3, lsl #4]
   65b24:	ldr	r3, [r0, #12]
   65b28:	cmp	r3, #5
   65b2c:	beq	66088 <luaopen_ffi@@Base+0x36b0>
   65b30:	cmp	r3, #4
   65b34:	beq	660c8 <luaopen_ffi@@Base+0x36f0>
   65b38:	mov	r3, #0
   65b3c:	str	r3, [sp]
   65b40:	b	6560c <luaopen_ffi@@Base+0x2c34>
   65b44:	add	r1, sp, #40	; 0x28
   65b48:	mov	r0, fp
   65b4c:	bl	64178 <luaopen_ffi@@Base+0x17a0>
   65b50:	mov	r2, #1
   65b54:	b	6586c <luaopen_ffi@@Base+0x2e94>
   65b58:	mov	r0, fp
   65b5c:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   65b60:	mov	r0, fp
   65b64:	ldr	r4, [fp]
   65b68:	bl	64140 <luaopen_ffi@@Base+0x1768>
   65b6c:	mov	r1, #0
   65b70:	mov	r2, r0
   65b74:	mov	r0, fp
   65b78:	bl	50248 <luaL_error@@Base+0xa15c>
   65b7c:	ldr	r5, [r4, #32]
   65b80:	ldrb	r3, [r4, #66]	; 0x42
   65b84:	add	ip, r5, #1
   65b88:	cmp	ip, r3
   65b8c:	bls	65b9c <luaopen_ffi@@Base+0x31c4>
   65b90:	cmp	ip, #249	; 0xf9
   65b94:	bhi	66120 <luaopen_ffi@@Base+0x3748>
   65b98:	strb	ip, [r4, #66]	; 0x42
   65b9c:	ldr	r1, [fp]
   65ba0:	ldr	r3, [fp, #88]	; 0x58
   65ba4:	mov	r2, #0
   65ba8:	ldr	r0, [r1, #36]	; 0x24
   65bac:	ldr	lr, [r1, #20]
   65bb0:	str	ip, [r4, #32]
   65bb4:	add	ip, r1, r0, lsl #1
   65bb8:	add	r8, sp, #64	; 0x40
   65bbc:	ldrh	r6, [ip, #68]	; 0x44
   65bc0:	add	ip, r0, #1
   65bc4:	add	r3, r3, r6, lsl #4
   65bc8:	strb	r0, [r3, #12]
   65bcc:	strb	r2, [r3, #13]
   65bd0:	str	lr, [r3, #4]
   65bd4:	mov	r0, fp
   65bd8:	str	ip, [r1, #36]	; 0x24
   65bdc:	ldr	r3, [fp, #68]	; 0x44
   65be0:	mov	r1, r8
   65be4:	bl	66780 <luaopen_ffi@@Base+0x3da8>
   65be8:	ldr	r3, [sp, #72]	; 0x48
   65bec:	cmp	r3, #12
   65bf0:	beq	66078 <luaopen_ffi@@Base+0x36a0>
   65bf4:	mov	r2, r5
   65bf8:	mov	r1, r8
   65bfc:	mov	r0, r4
   65c00:	bl	4f6f4 <luaL_error@@Base+0x9608>
   65c04:	ldr	r2, [r4, #36]	; 0x24
   65c08:	ldr	r1, [r4, #20]
   65c0c:	ldr	r3, [fp, #88]	; 0x58
   65c10:	add	r4, r4, r2, lsl #1
   65c14:	ldrh	r2, [r4, #66]	; 0x42
   65c18:	add	r3, r3, r2, lsl #4
   65c1c:	str	r1, [r3, #4]
   65c20:	b	65054 <luaopen_ffi@@Base+0x267c>
   65c24:	mov	r0, r5
   65c28:	bl	4f664 <luaL_error@@Base+0x9578>
   65c2c:	cmn	r0, #1
   65c30:	beq	65c44 <luaopen_ffi@@Base+0x326c>
   65c34:	mov	r2, r0
   65c38:	add	r1, sp, #64	; 0x40
   65c3c:	mov	r0, r5
   65c40:	bl	4f10c <luaL_error@@Base+0x9020>
   65c44:	ldr	r3, [r5, #20]
   65c48:	cmn	r6, #1
   65c4c:	str	r3, [r5, #24]
   65c50:	beq	65c64 <luaopen_ffi@@Base+0x328c>
   65c54:	mov	r2, r6
   65c58:	mov	r1, r8
   65c5c:	mov	r0, r5
   65c60:	bl	4f10c <luaL_error@@Base+0x9020>
   65c64:	mov	r0, fp
   65c68:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   65c6c:	mov	r0, fp
   65c70:	bl	67a3c <luaopen_ffi@@Base+0x5064>
   65c74:	b	65470 <luaopen_ffi@@Base+0x2a98>
   65c78:	ldr	r7, [fp]
   65c7c:	mov	r2, r5
   65c80:	mov	r1, #0
   65c84:	mov	r0, fp
   65c88:	ldr	sl, [r7, #32]
   65c8c:	bl	50248 <luaL_error@@Base+0xa15c>
   65c90:	mov	r1, r5
   65c94:	mov	r2, #2
   65c98:	mov	r0, fp
   65c9c:	bl	50248 <luaL_error@@Base+0xa15c>
   65ca0:	mov	r2, #3
   65ca4:	mov	r1, #2
   65ca8:	mov	r0, fp
   65cac:	bl	50248 <luaL_error@@Base+0xa15c>
   65cb0:	mov	r2, r8
   65cb4:	mov	r1, #3
   65cb8:	mov	r0, fp
   65cbc:	bl	50248 <luaL_error@@Base+0xa15c>
   65cc0:	mov	r1, r6
   65cc4:	mov	r0, fp
   65cc8:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   65ccc:	mov	r0, fp
   65cd0:	bl	67a10 <luaopen_ffi@@Base+0x5038>
   65cd4:	mov	r1, #44	; 0x2c
   65cd8:	mov	r0, fp
   65cdc:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   65ce0:	mov	r0, fp
   65ce4:	bl	67a10 <luaopen_ffi@@Base+0x5038>
   65ce8:	ldr	r3, [fp, #36]	; 0x24
   65cec:	cmp	r3, #44	; 0x2c
   65cf0:	beq	66064 <luaopen_ffi@@Base+0x368c>
   65cf4:	ldr	r1, [r7, #32]
   65cf8:	ldr	r3, [pc, #732]	; 65fdc <luaopen_ffi@@Base+0x3604>
   65cfc:	mov	r0, r7
   65d00:	orr	r1, r3, r1, lsl #8
   65d04:	bl	4f23c <luaL_error@@Base+0x9150>
   65d08:	ldr	r3, [r7, #32]
   65d0c:	ldrb	r2, [r7, #66]	; 0x42
   65d10:	add	r3, r3, r5
   65d14:	cmp	r3, r2
   65d18:	bhi	65eb4 <luaopen_ffi@@Base+0x34dc>
   65d1c:	str	r3, [r7, #32]
   65d20:	ldr	ip, [fp]
   65d24:	ldr	r6, [fp, #88]	; 0x58
   65d28:	mov	r5, #0
   65d2c:	ldr	r2, [ip, #36]	; 0x24
   65d30:	ldr	lr, [ip, #20]
   65d34:	add	r1, r2, #34	; 0x22
   65d38:	add	r0, r2, #3
   65d3c:	add	r1, ip, r1, lsl #1
   65d40:	ldrh	r3, [r1], #2
   65d44:	add	r3, r6, r3, lsl #4
   65d48:	strb	r2, [r3, #12]
   65d4c:	add	r2, r2, #1
   65d50:	cmp	r0, r2
   65d54:	str	lr, [r3, #4]
   65d58:	strb	r5, [r3, #13]
   65d5c:	bne	65d40 <luaopen_ffi@@Base+0x3368>
   65d60:	str	r0, [ip, #36]	; 0x24
   65d64:	ldr	r1, [pc, #576]	; 65fac <luaopen_ffi@@Base+0x35d4>
   65d68:	mov	r0, fp
   65d6c:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   65d70:	ldr	r1, [pc, #616]	; 65fe0 <luaopen_ffi@@Base+0x3608>
   65d74:	lsl	sl, sl, #8
   65d78:	orr	r1, sl, r1
   65d7c:	mov	r0, r7
   65d80:	bl	4f23c <luaL_error@@Base+0x9150>
   65d84:	ldr	r2, [fp]
   65d88:	ldr	r3, [r7, #36]	; 0x24
   65d8c:	strb	r5, [sp, #73]	; 0x49
   65d90:	strb	r3, [sp, #72]	; 0x48
   65d94:	ldr	r1, [r2, #36]	; 0x24
   65d98:	ldr	ip, [r7, #4]
   65d9c:	ldr	r3, [fp, #88]	; 0x58
   65da0:	add	r8, sp, #96	; 0x60
   65da4:	ldr	lr, [ip, #96]	; 0x60
   65da8:	mov	r6, r0
   65dac:	add	r0, r2, r1, lsl #1
   65db0:	ldrh	ip, [r0, #68]	; 0x44
   65db4:	ldr	r0, [r7, #12]
   65db8:	str	lr, [sp, #68]	; 0x44
   65dbc:	str	r0, [r8, #-32]!	; 0xffffffe0
   65dc0:	add	r3, r3, ip, lsl #4
   65dc4:	ldr	ip, [r2, #20]
   65dc8:	add	r0, r1, #1
   65dcc:	str	r8, [r7, #12]
   65dd0:	str	ip, [r3, #4]
   65dd4:	strb	r1, [r3, #12]
   65dd8:	strb	r5, [r3, #13]
   65ddc:	str	r0, [r2, #36]	; 0x24
   65de0:	ldr	r3, [r7, #32]
   65de4:	ldrb	r2, [r7, #66]	; 0x42
   65de8:	add	r3, r3, #1
   65dec:	cmp	r3, r2
   65df0:	bls	65e00 <luaopen_ffi@@Base+0x3428>
   65df4:	cmp	r3, #249	; 0xf9
   65df8:	bhi	66118 <luaopen_ffi@@Base+0x3740>
   65dfc:	strb	r3, [r7, #66]	; 0x42
   65e00:	str	r3, [r7, #32]
   65e04:	mov	r0, fp
   65e08:	bl	67a3c <luaopen_ffi@@Base+0x5064>
   65e0c:	mov	r0, r7
   65e10:	bl	50694 <luaL_error@@Base+0xa5a8>
   65e14:	ldr	r1, [pc, #456]	; 65fe4 <luaopen_ffi@@Base+0x360c>
   65e18:	mov	r0, r7
   65e1c:	orr	r1, sl, r1
   65e20:	bl	4f23c <luaL_error@@Base+0x9150>
   65e24:	ldr	r1, [r7, #52]	; 0x34
   65e28:	add	r2, r6, #32768	; 0x8000
   65e2c:	ldr	ip, [pc, #408]	; 65fcc <luaopen_ffi@@Base+0x35f4>
   65e30:	add	lr, r1, r0, lsl #3
   65e34:	sub	r2, r2, r0
   65e38:	cmp	r2, ip
   65e3c:	str	r4, [lr, #4]
   65e40:	ldr	r0, [r7, #4]
   65e44:	bhi	66110 <luaopen_ffi@@Base+0x3738>
   65e48:	ldr	r3, [r7, #20]
   65e4c:	add	r1, r1, r6, lsl #3
   65e50:	add	r3, r3, #32512	; 0x7f00
   65e54:	add	r3, r3, #255	; 0xff
   65e58:	sub	r3, r3, r6
   65e5c:	cmp	r3, ip
   65e60:	strh	r2, [lr, #2]
   65e64:	bhi	66110 <luaopen_ffi@@Base+0x3738>
   65e68:	strh	r3, [r1, #2]
   65e6c:	b	657f4 <luaopen_ffi@@Base+0x2e1c>
   65e70:	mov	r0, fp
   65e74:	add	r8, sp, #64	; 0x40
   65e78:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   65e7c:	mov	r1, r8
   65e80:	mov	r0, fp
   65e84:	bl	677b4 <luaopen_ffi@@Base+0x4ddc>
   65e88:	mov	r2, r0
   65e8c:	b	6535c <luaopen_ffi@@Base+0x2984>
   65e90:	add	r1, sp, #64	; 0x40
   65e94:	mov	r0, r4
   65e98:	bl	4f8a0 <luaL_error@@Base+0x97b4>
   65e9c:	ldr	r5, [r4, #36]	; 0x24
   65ea0:	add	r6, r6, #1
   65ea4:	lsl	r5, r5, #8
   65ea8:	orr	r5, r5, #74	; 0x4a
   65eac:	orr	r5, r5, r6, lsl #16
   65eb0:	b	65a2c <luaopen_ffi@@Base+0x3054>
   65eb4:	cmp	r3, #249	; 0xf9
   65eb8:	bhi	66118 <luaopen_ffi@@Base+0x3740>
   65ebc:	strb	r3, [r7, #66]	; 0x42
   65ec0:	b	65d1c <luaopen_ffi@@Base+0x3344>
   65ec4:	cmp	r3, #13
   65ec8:	bne	660b0 <luaopen_ffi@@Base+0x36d8>
   65ecc:	ldr	r1, [sp, #64]	; 0x40
   65ed0:	ldr	r2, [r4, #52]	; 0x34
   65ed4:	add	r3, r2, r1, lsl #3
   65ed8:	ldrb	r0, [r2, r1, lsl #3]
   65edc:	cmp	r0, #71	; 0x47
   65ee0:	beq	65a0c <luaopen_ffi@@Base+0x3034>
   65ee4:	ldr	r3, [r4, #20]
   65ee8:	sub	r3, r3, #1
   65eec:	str	r3, [r4, #20]
   65ef0:	ldr	r3, [r2, r1, lsl #3]
   65ef4:	bic	r2, r3, #-16777216	; 0xff000000
   65ef8:	uxtb	r5, r3
   65efc:	add	r5, r5, #2
   65f00:	bic	r2, r2, #255	; 0xff
   65f04:	orr	r5, r5, r2
   65f08:	b	65a2c <luaopen_ffi@@Base+0x3054>
   65f0c:	mov	r2, #5
   65f10:	ldr	r1, [pc, #208]	; 65fe8 <luaopen_ffi@@Base+0x3610>
   65f14:	ldr	r0, [fp, #4]
   65f18:	ldr	r6, [sl]
   65f1c:	bl	20260 <luaL_where@@Base+0x15c>
   65f20:	ldr	r2, [r6, #28]
   65f24:	ldr	r3, [r6, #20]
   65f28:	ldr	r1, [r0, #8]
   65f2c:	and	r2, r2, r1
   65f30:	add	r2, r2, r2, lsl #1
   65f34:	add	r3, r3, r2, lsl #3
   65f38:	b	65f48 <luaopen_ffi@@Base+0x3570>
   65f3c:	ldr	r3, [r3, #16]
   65f40:	cmp	r3, #0
   65f44:	beq	65f78 <luaopen_ffi@@Base+0x35a0>
   65f48:	ldr	r2, [r3, #12]
   65f4c:	cmn	r2, #5
   65f50:	bne	65f3c <luaopen_ffi@@Base+0x3564>
   65f54:	ldr	r2, [r3, #8]
   65f58:	cmp	r0, r2
   65f5c:	bne	65f3c <luaopen_ffi@@Base+0x3564>
   65f60:	ldr	r2, [r3, #4]
   65f64:	cmp	r2, #0
   65f68:	bne	65f78 <luaopen_ffi@@Base+0x35a0>
   65f6c:	ldr	r3, [r3]
   65f70:	cmp	r3, r7, lsr #16
   65f74:	beq	660e4 <luaopen_ffi@@Base+0x370c>
   65f78:	mov	r2, #4
   65f7c:	ldr	r1, [pc, #108]	; 65ff0 <luaopen_ffi@@Base+0x3618>
   65f80:	ldr	r0, [fp, #4]
   65f84:	ldr	r6, [sl]
   65f88:	bl	20260 <luaL_where@@Base+0x15c>
   65f8c:	ldr	r3, [r6, #28]
   65f90:	ldr	r2, [r6, #20]
   65f94:	ldr	r1, [r0, #8]
   65f98:	and	r3, r3, r1
   65f9c:	add	r3, r3, r3, lsl #1
   65fa0:	add	r3, r2, r3, lsl #3
   65fa4:	b	66008 <luaopen_ffi@@Base+0x3630>
   65fa8:	andeq	r0, r0, pc, lsl r1
   65fac:	andeq	r0, r0, r3, lsl #2
   65fb0:	andeq	r0, r0, r6, lsl r1
   65fb4:	andeq	r0, r0, r6, lsl #2
   65fb8:	andeq	r0, r0, r1, lsl r1
   65fbc:	andeq	r0, r0, r5, lsl r1
   65fc0:	andeq	r0, r0, r9, lsl #2
   65fc4:	andeq	r0, r0, r5, lsl #2
   65fc8:	andeq	r0, r0, fp, lsl #2
   65fcc:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   65fd0:	svcvc	0x00ff0052
   65fd4:	andeq	r0, r1, fp, asr #32
   65fd8:	svcvc	0x00ff0055
   65fdc:	andeq	r0, r1, r9, lsr #32
   65fe0:	svcvc	0x00ff004d
   65fe4:	svcvc	0x00ff004f
   65fe8:	andeq	r3, r7, r8, ror r5
   65fec:	andeq	r0, r2, ip, asr #32
   65ff0:	andeq	r3, r7, r0, lsl #11
   65ff4:	andeq	r0, r0, r2, ror #21
   65ff8:	andeq	r0, r0, r7, lsr r9
   65ffc:	ldr	r3, [r3, #16]
   66000:	cmp	r3, #0
   66004:	beq	660a4 <luaopen_ffi@@Base+0x36cc>
   66008:	ldr	r2, [r3, #12]
   6600c:	cmn	r2, #5
   66010:	bne	65ffc <luaopen_ffi@@Base+0x3624>
   66014:	ldr	r2, [r3, #8]
   66018:	cmp	r0, r2
   6601c:	bne	65ffc <luaopen_ffi@@Base+0x3624>
   66020:	ldr	r2, [r3, #4]
   66024:	ldr	r6, [fp, #88]	; 0x58
   66028:	cmp	r2, #0
   6602c:	bne	65b38 <luaopen_ffi@@Base+0x3160>
   66030:	ldr	r3, [r3]
   66034:	cmp	r3, r7, lsr #16
   66038:	moveq	r3, #1
   6603c:	movne	r3, #0
   66040:	str	r3, [sp]
   66044:	b	6560c <luaopen_ffi@@Base+0x2c34>
   66048:	lsr	r3, r7, #16
   6604c:	add	r3, r3, #232	; 0xe8
   66050:	ldr	r6, [fp, #88]	; 0x58
   66054:	add	r3, sl, r3, lsl #1
   66058:	ldrh	r3, [r3, #4]
   6605c:	ldr	r0, [r6, r3, lsl #4]
   66060:	b	65b24 <luaopen_ffi@@Base+0x314c>
   66064:	mov	r0, fp
   66068:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   6606c:	mov	r0, fp
   66070:	bl	67a10 <luaopen_ffi@@Base+0x5038>
   66074:	b	65d20 <luaopen_ffi@@Base+0x3348>
   66078:	ldr	r1, [sp, #64]	; 0x40
   6607c:	mov	r0, r4
   66080:	bl	1b6ac <_start@@Base+0x82fc>
   66084:	b	65bf4 <luaopen_ffi@@Base+0x321c>
   66088:	add	r0, r0, #16
   6608c:	ldr	r1, [pc, #-172]	; 65fe8 <luaopen_ffi@@Base+0x3610>
   66090:	bl	12c64 <strcmp@plt>
   66094:	clz	r3, r0
   66098:	lsr	r3, r3, #5
   6609c:	str	r3, [sp]
   660a0:	b	6560c <luaopen_ffi@@Base+0x2c34>
   660a4:	str	r3, [sp]
   660a8:	ldr	r6, [fp, #88]	; 0x58
   660ac:	b	6560c <luaopen_ffi@@Base+0x2c34>
   660b0:	add	r1, sp, #64	; 0x40
   660b4:	mov	r0, r4
   660b8:	bl	4f9fc <luaL_error@@Base+0x9910>
   660bc:	ldr	r5, [pc, #-216]	; 65fec <luaopen_ffi@@Base+0x3614>
   660c0:	orr	r5, r5, r0, lsl #8
   660c4:	b	65a2c <luaopen_ffi@@Base+0x3054>
   660c8:	add	r0, r0, #16
   660cc:	ldr	r1, [pc, #-228]	; 65ff0 <luaopen_ffi@@Base+0x3618>
   660d0:	bl	12c64 <strcmp@plt>
   660d4:	clz	r3, r0
   660d8:	lsr	r3, r3, #5
   660dc:	str	r3, [sp]
   660e0:	b	6560c <luaopen_ffi@@Base+0x2c34>
   660e4:	mov	r3, #1
   660e8:	ldr	r6, [fp, #88]	; 0x58
   660ec:	str	r3, [sp]
   660f0:	b	6560c <luaopen_ffi@@Base+0x2c34>
   660f4:	mov	r2, #2176	; 0x880
   660f8:	mov	r1, #0
   660fc:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   66100:	mov	r0, fp
   66104:	ldr	r1, [pc, #-280]	; 65ff4 <luaopen_ffi@@Base+0x361c>
   66108:	bl	4f034 <luaL_error@@Base+0x8f48>
   6610c:	ldr	r0, [r5, #4]
   66110:	ldr	r1, [pc, #-288]	; 65ff8 <luaopen_ffi@@Base+0x3620>
   66114:	bl	4f034 <luaL_error@@Base+0x8f48>
   66118:	mov	r0, r7
   6611c:	bl	1328c <pclose@plt+0x1f0>
   66120:	mov	r0, r4
   66124:	bl	1328c <pclose@plt+0x1f0>
   66128:	mov	r0, sl
   6612c:	bl	1328c <pclose@plt+0x1f0>
   66130:	ldr	r0, [sl, #4]
   66134:	ldr	r1, [pc, #-324]	; 65ff8 <luaopen_ffi@@Base+0x3620>
   66138:	bl	4f034 <luaL_error@@Base+0x8f48>
   6613c:	push	{r4, r5, r6, lr}
   66140:	mov	r4, r0
   66144:	ldr	r6, [r0, #80]	; 0x50
   66148:	ldr	r5, [r0, #4]
   6614c:	sub	sp, sp, #720	; 0x2d0
   66150:	mov	r0, r6
   66154:	bl	12e80 <strlen@plt>
   66158:	mov	r1, r6
   6615c:	mov	r2, r0
   66160:	mov	r0, r5
   66164:	bl	20260 <luaL_where@@Base+0x15c>
   66168:	ldr	r3, [r5, #20]
   6616c:	ldr	r1, [r5, #24]
   66170:	add	r2, r3, #8
   66174:	cmp	r2, r1
   66178:	mvn	r1, #4
   6617c:	str	r0, [r4, #76]	; 0x4c
   66180:	strd	r0, [r3]
   66184:	str	r2, [r5, #20]
   66188:	bcs	66230 <luaopen_ffi@@Base+0x3858>
   6618c:	mov	r6, #0
   66190:	add	r1, sp, #12
   66194:	mov	r0, r4
   66198:	str	r6, [r4, #108]	; 0x6c
   6619c:	bl	526bc <lua_getinfo@@Base+0x8>
   661a0:	ldr	r3, [sp, #16]
   661a4:	ldrb	r2, [sp, #76]	; 0x4c
   661a8:	ldr	lr, [sp, #24]
   661ac:	ldr	r1, [r3, #96]	; 0x60
   661b0:	ldr	ip, [sp, #48]	; 0x30
   661b4:	add	r3, sp, #720	; 0x2d0
   661b8:	orr	r2, r2, #2
   661bc:	str	r1, [sp, #4]
   661c0:	add	r0, sp, #12
   661c4:	mov	r1, #92	; 0x5c
   661c8:	str	lr, [r3, #-720]!	; 0xfffffd30
   661cc:	strb	r2, [sp, #76]	; 0x4c
   661d0:	str	r3, [sp, #24]
   661d4:	strb	ip, [sp, #8]
   661d8:	str	r6, [sp, #60]	; 0x3c
   661dc:	strb	r6, [sp, #77]	; 0x4d
   661e0:	str	r6, [sp, #64]	; 0x40
   661e4:	str	r6, [sp, #68]	; 0x44
   661e8:	strb	r6, [sp, #9]
   661ec:	bl	4f23c <luaL_error@@Base+0x9150>
   661f0:	mov	r0, r4
   661f4:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   661f8:	mov	r0, r4
   661fc:	bl	64e60 <luaopen_ffi@@Base+0x2488>
   66200:	ldr	r1, [pc, #64]	; 66248 <luaopen_ffi@@Base+0x3870>
   66204:	ldr	r3, [r4, #36]	; 0x24
   66208:	cmp	r3, r1
   6620c:	bne	66240 <luaopen_ffi@@Base+0x3868>
   66210:	ldr	r1, [r4, #68]	; 0x44
   66214:	mov	r0, r4
   66218:	bl	51a1c <luaL_error@@Base+0xb930>
   6621c:	ldr	r3, [r5, #20]
   66220:	sub	r3, r3, #8
   66224:	str	r3, [r5, #20]
   66228:	add	sp, sp, #720	; 0x2d0
   6622c:	pop	{r4, r5, r6, pc}
   66230:	mov	r1, #1
   66234:	mov	r0, r5
   66238:	bl	1fd08 <lua_getstack@@Base+0x50>
   6623c:	b	6618c <luaopen_ffi@@Base+0x37b4>
   66240:	mov	r0, r4
   66244:	bl	50774 <luaL_error@@Base+0xa688>
   66248:	andeq	r0, r0, r1, lsr #2
   6624c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   66250:	mov	r4, r2
   66254:	ldr	r2, [r0, #40]	; 0x28
   66258:	mov	r6, r0
   6625c:	ldr	r1, [pc, #1292]	; 66770 <luaopen_ffi@@Base+0x3d98>
   66260:	mvn	r0, #0
   66264:	str	r0, [r2, #24]
   66268:	mov	r3, #0
   6626c:	mov	r2, #1
   66270:	str	r6, [r4, #4]
   66274:	str	r1, [r4, #40]	; 0x28
   66278:	str	r3, [r4]
   6627c:	str	r3, [r4, #24]
   66280:	str	r3, [r4, #28]
   66284:	str	r3, [r4, #88]	; 0x58
   66288:	str	r3, [r4, #92]	; 0x5c
   6628c:	str	r3, [r4, #96]	; 0x60
   66290:	str	r3, [r4, #100]	; 0x64
   66294:	str	r3, [r4, #104]	; 0x68
   66298:	str	r3, [r4, #36]	; 0x24
   6629c:	str	r2, [r4, #68]	; 0x44
   662a0:	str	r2, [r4, #72]	; 0x48
   662a4:	mov	r0, r4
   662a8:	bl	15358 <_start@@Base+0x1fa8>
   662ac:	cmp	r0, #239	; 0xef
   662b0:	str	r0, [r4, #32]
   662b4:	beq	66370 <luaopen_ffi@@Base+0x3998>
   662b8:	cmp	r0, #35	; 0x23
   662bc:	beq	6630c <luaopen_ffi@@Base+0x3934>
   662c0:	cmp	r0, #27
   662c4:	ldr	r0, [r4, #84]	; 0x54
   662c8:	beq	663ac <luaopen_ffi@@Base+0x39d4>
   662cc:	cmp	r0, #0
   662d0:	beq	6633c <luaopen_ffi@@Base+0x3964>
   662d4:	mov	r1, #116	; 0x74
   662d8:	bl	12e8c <strchr@plt>
   662dc:	cmp	r0, #0
   662e0:	bne	6633c <luaopen_ffi@@Base+0x3964>
   662e4:	ldr	r4, [r6, #20]
   662e8:	ldr	r1, [pc, #1156]	; 66774 <luaopen_ffi@@Base+0x3d9c>
   662ec:	b	66604 <luaopen_ffi@@Base+0x3c2c>
   662f0:	add	r2, r3, #1
   662f4:	str	r2, [r4, #24]
   662f8:	ldrb	r0, [r3]
   662fc:	str	r0, [r4, #32]
   66300:	cmp	r0, #10
   66304:	cmpne	r0, #13
   66308:	beq	665e8 <luaopen_ffi@@Base+0x3c10>
   6630c:	ldr	r3, [r4, #24]
   66310:	ldr	r2, [r4, #28]
   66314:	cmp	r3, r2
   66318:	bcc	662f0 <luaopen_ffi@@Base+0x3918>
   6631c:	mov	r0, r4
   66320:	bl	15358 <_start@@Base+0x1fa8>
   66324:	cmn	r0, #1
   66328:	str	r0, [r4, #32]
   6632c:	bne	66300 <luaopen_ffi@@Base+0x3928>
   66330:	ldr	r0, [r4, #84]	; 0x54
   66334:	cmp	r0, #0
   66338:	bne	662d4 <luaopen_ffi@@Base+0x38fc>
   6633c:	mov	r0, r4
   66340:	bl	6613c <luaopen_ffi@@Base+0x3764>
   66344:	mov	r1, r0
   66348:	ldr	r2, [r6, #36]	; 0x24
   6634c:	mov	r0, r6
   66350:	bl	33254 <luaL_where@@Base+0x13150>
   66354:	ldr	r3, [r6, #20]
   66358:	mvn	r2, #8
   6635c:	add	r1, r3, #8
   66360:	str	r1, [r6, #20]
   66364:	stm	r3, {r0, r2}
   66368:	mov	r0, #0
   6636c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   66370:	ldr	r3, [r4, #24]
   66374:	ldr	r1, [r4, #28]
   66378:	add	r2, r3, #2
   6637c:	cmp	r2, r1
   66380:	bhi	6639c <luaopen_ffi@@Base+0x39c4>
   66384:	ldrb	r0, [r3]
   66388:	cmp	r0, #187	; 0xbb
   6638c:	bne	6639c <luaopen_ffi@@Base+0x39c4>
   66390:	ldrb	r0, [r3, #1]
   66394:	cmp	r0, #191	; 0xbf
   66398:	beq	6662c <luaopen_ffi@@Base+0x3c54>
   6639c:	ldr	r0, [r4, #84]	; 0x54
   663a0:	cmp	r0, #0
   663a4:	bne	662d4 <luaopen_ffi@@Base+0x38fc>
   663a8:	b	6633c <luaopen_ffi@@Base+0x3964>
   663ac:	cmp	r0, #0
   663b0:	beq	663c4 <luaopen_ffi@@Base+0x39ec>
   663b4:	mov	r1, #98	; 0x62
   663b8:	bl	12e8c <strchr@plt>
   663bc:	cmp	r0, #0
   663c0:	beq	662e4 <luaopen_ffi@@Base+0x390c>
   663c4:	ldr	r7, [r4, #4]
   663c8:	ldr	r3, [r4, #24]
   663cc:	ldr	r0, [r4, #28]
   663d0:	ldr	r2, [r7, #20]
   663d4:	ldr	ip, [r7, #28]
   663d8:	add	r1, r3, #13
   663dc:	cmp	r0, r1
   663e0:	ldr	r1, [r4, #52]	; 0x34
   663e4:	sub	r2, r2, ip
   663e8:	str	r2, [r4, #72]	; 0x48
   663ec:	str	r1, [r4, #44]	; 0x2c
   663f0:	bcc	66694 <luaopen_ffi@@Base+0x3cbc>
   663f4:	add	r2, r3, #1
   663f8:	str	r2, [r4, #24]
   663fc:	ldrb	r2, [r3]
   66400:	cmp	r2, #76	; 0x4c
   66404:	beq	66418 <luaopen_ffi@@Base+0x3a40>
   66408:	ldr	r2, [pc, #872]	; 66778 <luaopen_ffi@@Base+0x3da0>
   6640c:	ldr	r1, [r4, #80]	; 0x50
   66410:	ldr	r0, [r4, #4]
   66414:	bl	24f84 <luaL_where@@Base+0x4e80>
   66418:	add	r2, r3, #2
   6641c:	str	r2, [r4, #24]
   66420:	ldrb	r2, [r3, #1]
   66424:	cmp	r2, #74	; 0x4a
   66428:	bne	66408 <luaopen_ffi@@Base+0x3a30>
   6642c:	add	r2, r3, #3
   66430:	str	r2, [r4, #24]
   66434:	ldrb	r2, [r3, #2]
   66438:	cmp	r2, #2
   6643c:	bne	66408 <luaopen_ffi@@Base+0x3a30>
   66440:	ldrb	r5, [r3, #3]
   66444:	add	r3, r3, #4
   66448:	cmp	r5, #127	; 0x7f
   6644c:	bhi	666dc <luaopen_ffi@@Base+0x3d04>
   66450:	bics	r2, r5, #7
   66454:	str	r3, [r4, #24]
   66458:	str	r5, [r4, #108]	; 0x6c
   6645c:	bne	66408 <luaopen_ffi@@Base+0x3a30>
   66460:	tst	r5, #4
   66464:	beq	6647c <luaopen_ffi@@Base+0x3aa4>
   66468:	ldr	r8, [r4, #4]
   6646c:	ldr	r3, [r8, #8]
   66470:	ldr	r3, [r3, #228]	; 0xe4
   66474:	cmp	r3, #0
   66478:	beq	66708 <luaopen_ffi@@Base+0x3d30>
   6647c:	ands	r3, r5, #2
   66480:	bne	666b8 <luaopen_ffi@@Base+0x3ce0>
   66484:	ldr	r2, [r4, #24]
   66488:	add	r1, r2, #1
   6648c:	ldrb	r5, [r2]
   66490:	cmp	r5, #127	; 0x7f
   66494:	bhi	66748 <luaopen_ffi@@Base+0x3d70>
   66498:	ldr	r2, [r4, #28]
   6649c:	add	r3, r1, r5
   664a0:	cmp	r3, r2
   664a4:	str	r1, [r4, #24]
   664a8:	bhi	6672c <luaopen_ffi@@Base+0x3d54>
   664ac:	ldr	r0, [r4, #4]
   664b0:	str	r3, [r4, #24]
   664b4:	mov	r2, r5
   664b8:	bl	20260 <luaL_where@@Base+0x15c>
   664bc:	str	r0, [r4, #76]	; 0x4c
   664c0:	ldr	r3, [r4, #24]
   664c4:	b	66524 <luaopen_ffi@@Base+0x3b4c>
   664c8:	ldrb	r5, [r3]
   664cc:	add	r3, r3, #1
   664d0:	cmp	r5, #127	; 0x7f
   664d4:	bhi	66570 <luaopen_ffi@@Base+0x3b98>
   664d8:	cmp	r5, #0
   664dc:	str	r3, [r4, #24]
   664e0:	beq	665a4 <luaopen_ffi@@Base+0x3bcc>
   664e4:	add	r8, r3, r5
   664e8:	cmp	r8, r2
   664ec:	bhi	6665c <luaopen_ffi@@Base+0x3c84>
   664f0:	mov	r0, r4
   664f4:	bl	3fd7c <luaL_typerror@@Base+0x9a10>
   664f8:	ldr	r3, [r4, #24]
   664fc:	cmp	r3, r8
   66500:	bne	665d8 <luaopen_ffi@@Base+0x3c00>
   66504:	ldr	r2, [r7, #20]
   66508:	ldr	lr, [r7, #24]
   6650c:	add	r1, r2, #8
   66510:	mvn	ip, #7
   66514:	cmp	r1, lr
   66518:	stm	r2, {r0, ip}
   6651c:	str	r1, [r7, #20]
   66520:	bcs	66678 <luaopen_ffi@@Base+0x3ca0>
   66524:	ldr	r2, [r4, #28]
   66528:	cmp	r2, r3
   6652c:	bls	6653c <luaopen_ffi@@Base+0x3b64>
   66530:	ldrb	r1, [r3]
   66534:	cmp	r1, #0
   66538:	beq	66688 <luaopen_ffi@@Base+0x3cb0>
   6653c:	add	r1, r3, #5
   66540:	cmp	r2, r1
   66544:	bcs	664c8 <luaopen_ffi@@Base+0x3af0>
   66548:	mov	r2, #0
   6654c:	mov	r1, #5
   66550:	mov	r0, r4
   66554:	bl	3566c <luaL_where@@Base+0x15568>
   66558:	ldr	r3, [r4, #24]
   6655c:	ldr	r2, [r4, #28]
   66560:	add	r3, r3, #1
   66564:	ldrb	r5, [r3, #-1]
   66568:	cmp	r5, #127	; 0x7f
   6656c:	bls	664d8 <luaopen_ffi@@Base+0x3b00>
   66570:	and	r5, r5, #127	; 0x7f
   66574:	mov	r0, r3
   66578:	mov	r1, #0
   6657c:	ldrb	r3, [r0], #1
   66580:	add	r1, r1, #7
   66584:	and	ip, r3, #127	; 0x7f
   66588:	tst	r3, #128	; 0x80
   6658c:	orr	r5, r5, ip, lsl r1
   66590:	mov	r3, r0
   66594:	bne	6657c <luaopen_ffi@@Base+0x3ba4>
   66598:	cmp	r5, #0
   6659c:	str	r3, [r4, #24]
   665a0:	bne	664e4 <luaopen_ffi@@Base+0x3b0c>
   665a4:	sub	r3, r2, r3
   665a8:	lsl	r3, r3, #1
   665ac:	cmp	r3, #0
   665b0:	bgt	665d8 <luaopen_ffi@@Base+0x3c00>
   665b4:	ldr	r2, [r7, #20]
   665b8:	ldr	r3, [r4, #72]	; 0x48
   665bc:	ldr	r0, [r7, #28]
   665c0:	sub	r1, r2, #8
   665c4:	add	r3, r3, r0
   665c8:	cmp	r1, r3
   665cc:	streq	r1, [r7, #20]
   665d0:	ldreq	r1, [r2, #-8]
   665d4:	beq	66348 <luaopen_ffi@@Base+0x3970>
   665d8:	ldr	r2, [pc, #412]	; 6677c <luaopen_ffi@@Base+0x3da4>
   665dc:	ldr	r1, [r4, #80]	; 0x50
   665e0:	ldr	r0, [r4, #4]
   665e4:	bl	24f84 <luaL_where@@Base+0x4e80>
   665e8:	mov	r0, r4
   665ec:	bl	4ef80 <luaL_error@@Base+0x8e94>
   665f0:	ldr	r3, [r4, #32]
   665f4:	cmp	r3, #27
   665f8:	bne	6639c <luaopen_ffi@@Base+0x39c4>
   665fc:	ldr	r4, [r6, #20]
   66600:	ldr	r1, [pc, #372]	; 6677c <luaopen_ffi@@Base+0x3da4>
   66604:	add	r3, r4, #8
   66608:	str	r3, [r6, #20]
   6660c:	mov	r0, r6
   66610:	bl	20530 <luaL_where@@Base+0x42c>
   66614:	mvn	r3, #4
   66618:	str	r3, [r4, #4]
   6661c:	mov	r1, #3
   66620:	str	r0, [r4]
   66624:	mov	r0, r6
   66628:	bl	20ff0 <luaL_where@@Base+0xeec>
   6662c:	cmp	r2, r1
   66630:	str	r2, [r4, #24]
   66634:	bcs	666ac <luaopen_ffi@@Base+0x3cd4>
   66638:	add	r2, r3, #3
   6663c:	str	r2, [r4, #24]
   66640:	ldrb	r0, [r3, #2]
   66644:	cmp	r0, #35	; 0x23
   66648:	str	r0, [r4, #32]
   6664c:	beq	6630c <luaopen_ffi@@Base+0x3934>
   66650:	cmp	r0, #27
   66654:	bne	6639c <luaopen_ffi@@Base+0x39c4>
   66658:	b	665fc <luaopen_ffi@@Base+0x3c24>
   6665c:	mov	r2, #1
   66660:	mov	r1, r5
   66664:	mov	r0, r4
   66668:	bl	3566c <luaL_where@@Base+0x15568>
   6666c:	ldr	r3, [r4, #24]
   66670:	add	r8, r3, r5
   66674:	b	664f0 <luaopen_ffi@@Base+0x3b18>
   66678:	mov	r1, #1
   6667c:	mov	r0, r7
   66680:	bl	1fd08 <lua_getstack@@Base+0x50>
   66684:	b	664c0 <luaopen_ffi@@Base+0x3ae8>
   66688:	add	r3, r3, #1
   6668c:	str	r3, [r4, #24]
   66690:	b	665a4 <luaopen_ffi@@Base+0x3bcc>
   66694:	mov	r2, #0
   66698:	mov	r1, #13
   6669c:	mov	r0, r4
   666a0:	bl	3566c <luaL_where@@Base+0x15568>
   666a4:	ldr	r3, [r4, #24]
   666a8:	b	663f4 <luaopen_ffi@@Base+0x3a1c>
   666ac:	mov	r0, r4
   666b0:	bl	15358 <_start@@Base+0x1fa8>
   666b4:	b	66644 <luaopen_ffi@@Base+0x3c6c>
   666b8:	ldr	r5, [r4, #80]	; 0x50
   666bc:	mov	r0, r5
   666c0:	bl	12e80 <strlen@plt>
   666c4:	mov	r1, r5
   666c8:	mov	r2, r0
   666cc:	ldr	r0, [r4, #4]
   666d0:	bl	20260 <luaL_where@@Base+0x15c>
   666d4:	str	r0, [r4, #76]	; 0x4c
   666d8:	b	664c0 <luaopen_ffi@@Base+0x3ae8>
   666dc:	and	r5, r5, #127	; 0x7f
   666e0:	mov	r1, r3
   666e4:	mov	r2, #0
   666e8:	ldrb	r3, [r1], #1
   666ec:	add	r2, r2, #7
   666f0:	and	r0, r3, #127	; 0x7f
   666f4:	tst	r3, #128	; 0x80
   666f8:	orr	r5, r5, r0, lsl r2
   666fc:	mov	r3, r1
   66700:	bne	666e8 <luaopen_ffi@@Base+0x3d10>
   66704:	b	66450 <luaopen_ffi@@Base+0x3a78>
   66708:	ldr	r3, [r8, #20]
   6670c:	ldr	r9, [r8, #28]
   66710:	mov	r0, r8
   66714:	sub	r9, r3, r9
   66718:	bl	629d8 <luaopen_ffi@@Base>
   6671c:	ldr	r3, [r8, #28]
   66720:	add	r3, r3, r9
   66724:	str	r3, [r8, #20]
   66728:	b	6647c <luaopen_ffi@@Base+0x3aa4>
   6672c:	mov	r1, r5
   66730:	mov	r2, #1
   66734:	mov	r0, r4
   66738:	bl	3566c <luaL_where@@Base+0x15568>
   6673c:	ldr	r1, [r4, #24]
   66740:	add	r3, r1, r5
   66744:	b	664ac <luaopen_ffi@@Base+0x3ad4>
   66748:	and	r5, r5, #127	; 0x7f
   6674c:	mov	r2, r1
   66750:	ldrb	r1, [r2], #1
   66754:	add	r3, r3, #7
   66758:	and	r0, r1, #127	; 0x7f
   6675c:	tst	r1, #128	; 0x80
   66760:	orr	r5, r5, r0, lsl r3
   66764:	mov	r1, r2
   66768:	bne	66750 <luaopen_ffi@@Base+0x3d78>
   6676c:	b	66498 <luaopen_ffi@@Base+0x3ac0>
   66770:	andeq	r0, r0, r1, lsr #2
   66774:	andeq	r0, r0, r4, lsr r8
   66778:	andeq	r0, r0, pc, asr fp
   6677c:	andeq	r0, r0, r1, lsl #23
   66780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   66784:	sub	sp, sp, #740	; 0x2e4
   66788:	ldr	r6, [r0]
   6678c:	ldr	ip, [r0, #100]	; 0x64
   66790:	mov	r9, r1
   66794:	ldr	lr, [r6, #52]	; 0x34
   66798:	add	r1, sp, #28
   6679c:	sub	sl, lr, ip
   667a0:	mov	r7, r3
   667a4:	mov	r4, r0
   667a8:	mov	r5, r2
   667ac:	str	r3, [sp, #12]
   667b0:	str	sl, [sp, #4]
   667b4:	bl	526bc <lua_getinfo@@Base+0x8>
   667b8:	ldr	r2, [sp, #32]
   667bc:	ldr	r1, [sp, #40]	; 0x28
   667c0:	add	r3, sp, #736	; 0x2e0
   667c4:	ldr	ip, [r2, #96]	; 0x60
   667c8:	ldr	r2, [sp, #64]	; 0x40
   667cc:	str	r1, [r3, #-720]!	; 0xfffffd30
   667d0:	str	r7, [sp, #76]	; 0x4c
   667d4:	mov	r0, r4
   667d8:	mov	r7, #0
   667dc:	mov	r1, #40	; 0x28
   667e0:	str	r3, [sp, #40]	; 0x28
   667e4:	str	ip, [sp, #20]
   667e8:	ldr	r8, [r4]
   667ec:	strb	r2, [sp, #24]
   667f0:	strb	r7, [sp, #25]
   667f4:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   667f8:	asr	r3, sl, #3
   667fc:	cmp	r5, r7
   66800:	str	r3, [sp, #8]
   66804:	bne	66a10 <luaopen_ffi@@Base+0x4038>
   66808:	ldr	r3, [r4, #36]	; 0x24
   6680c:	cmp	r3, #41	; 0x29
   66810:	beq	669dc <luaopen_ffi@@Base+0x4004>
   66814:	ldr	fp, [pc, #584]	; 66a64 <luaopen_ffi@@Base+0x408c>
   66818:	ldr	r7, [pc, #584]	; 66a68 <luaopen_ffi@@Base+0x4090>
   6681c:	cmp	r3, r7
   66820:	cmpne	r3, fp
   66824:	beq	66848 <luaopen_ffi@@Base+0x3e70>
   66828:	b	669ec <luaopen_ffi@@Base+0x4014>
   6682c:	mov	r0, r4
   66830:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   66834:	ldr	r3, [r4, #36]	; 0x24
   66838:	mov	r5, sl
   6683c:	cmp	r3, r7
   66840:	cmpne	r3, fp
   66844:	bne	669f0 <luaopen_ffi@@Base+0x4018>
   66848:	mov	r0, r4
   6684c:	bl	64140 <luaopen_ffi@@Base+0x1768>
   66850:	mov	r1, r5
   66854:	add	sl, r5, #1
   66858:	mov	r2, r0
   6685c:	mov	r0, r4
   66860:	bl	50248 <luaL_error@@Base+0xa15c>
   66864:	ldr	r3, [r4, #36]	; 0x24
   66868:	cmp	r3, #44	; 0x2c
   6686c:	beq	6682c <luaopen_ffi@@Base+0x3e54>
   66870:	ldr	fp, [r4]
   66874:	cmp	sl, #0
   66878:	sub	r7, sl, #1
   6687c:	ldr	r0, [fp, #36]	; 0x24
   66880:	beq	668c0 <luaopen_ffi@@Base+0x3ee8>
   66884:	add	r1, r0, #34	; 0x22
   66888:	add	ip, r7, r0
   6688c:	ldr	r5, [fp, #20]
   66890:	ldr	r7, [r4, #88]	; 0x58
   66894:	add	ip, ip, #1
   66898:	add	r1, fp, r1, lsl #1
   6689c:	mov	lr, #0
   668a0:	ldrh	r3, [r1], #2
   668a4:	add	r3, r7, r3, lsl #4
   668a8:	strb	r0, [r3, #12]
   668ac:	add	r0, r0, #1
   668b0:	cmp	ip, r0
   668b4:	str	r5, [r3, #4]
   668b8:	strb	lr, [r3, #13]
   668bc:	bne	668a0 <luaopen_ffi@@Base+0x3ec8>
   668c0:	str	r0, [fp, #36]	; 0x24
   668c4:	ldr	r3, [r8, #32]
   668c8:	ldrb	r1, [r8, #66]	; 0x42
   668cc:	add	r3, sl, r3
   668d0:	cmp	r3, r1
   668d4:	bls	668e4 <luaopen_ffi@@Base+0x3f0c>
   668d8:	cmp	r3, #249	; 0xf9
   668dc:	strbls	r3, [r8, #66]	; 0x42
   668e0:	bhi	66a54 <luaopen_ffi@@Base+0x407c>
   668e4:	str	r3, [r8, #32]
   668e8:	mov	r1, #41	; 0x29
   668ec:	mov	r0, r4
   668f0:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   668f4:	strb	sl, [sp, #93]	; 0x5d
   668f8:	ldr	r1, [r6, #20]
   668fc:	ldrd	r2, [r6, #52]	; 0x34
   66900:	add	r0, sp, #28
   66904:	sub	r3, r3, r1
   66908:	add	r2, r2, r1, lsl #3
   6690c:	mov	r1, #89	; 0x59
   66910:	strd	r2, [sp, #80]	; 0x50
   66914:	bl	4f23c <luaL_error@@Base+0x9150>
   66918:	mov	r0, r4
   6691c:	bl	64e60 <luaopen_ffi@@Base+0x2488>
   66920:	ldr	r1, [pc, #324]	; 66a6c <luaopen_ffi@@Base+0x4094>
   66924:	ldr	r3, [r4, #36]	; 0x24
   66928:	cmp	r3, r1
   6692c:	beq	66940 <luaopen_ffi@@Base+0x3f68>
   66930:	ldr	r3, [sp, #12]
   66934:	ldr	r2, [pc, #308]	; 66a70 <luaopen_ffi@@Base+0x4098>
   66938:	mov	r0, r4
   6693c:	bl	643d8 <luaopen_ffi@@Base+0x1a00>
   66940:	ldr	r1, [r4, #68]	; 0x44
   66944:	mov	r0, r4
   66948:	str	r1, [r4, #72]	; 0x48
   6694c:	bl	51a1c <luaL_error@@Base+0xb930>
   66950:	ldrd	r2, [r4, #100]	; 0x64
   66954:	ldr	r1, [sp, #4]
   66958:	add	r2, r2, r1
   6695c:	ldr	r1, [sp, #8]
   66960:	sub	r3, r3, r1
   66964:	strd	r2, [r6, #52]	; 0x34
   66968:	mvn	r2, #7
   6696c:	mov	r1, r0
   66970:	mov	r0, r6
   66974:	bl	3e594 <luaL_typerror@@Base+0x8228>
   66978:	lsl	r1, r0, #16
   6697c:	orr	r1, r1, #51	; 0x33
   66980:	mov	r0, r6
   66984:	bl	4f23c <luaL_error@@Base+0x9150>
   66988:	mvn	r2, #0
   6698c:	ldrb	r3, [sp, #92]	; 0x5c
   66990:	mov	r1, #11
   66994:	str	r1, [r9, #8]
   66998:	str	r2, [r9, #12]
   6699c:	str	r2, [r9, #16]
   669a0:	and	r3, r3, #4
   669a4:	str	r0, [r9]
   669a8:	ldrb	r2, [r6, #64]	; 0x40
   669ac:	orr	r3, r3, r2
   669b0:	tst	r3, #1
   669b4:	strb	r3, [r6, #64]	; 0x40
   669b8:	bne	669cc <luaopen_ffi@@Base+0x3ff4>
   669bc:	tst	r3, #32
   669c0:	orrne	r3, r3, #64	; 0x40
   669c4:	orr	r3, r3, #1
   669c8:	strb	r3, [r6, #64]	; 0x40
   669cc:	mov	r0, r4
   669d0:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   669d4:	add	sp, sp, #740	; 0x2e4
   669d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   669dc:	ldr	fp, [r4]
   669e0:	mov	sl, r5
   669e4:	ldr	r0, [fp, #36]	; 0x24
   669e8:	b	668c0 <luaopen_ffi@@Base+0x3ee8>
   669ec:	mov	sl, r5
   669f0:	cmp	r3, #280	; 0x118
   669f4:	mov	r0, r4
   669f8:	bne	66a5c <luaopen_ffi@@Base+0x4084>
   669fc:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   66a00:	ldrb	r3, [r8, #64]	; 0x40
   66a04:	orr	r3, r3, #2
   66a08:	strb	r3, [r8, #64]	; 0x40
   66a0c:	b	66870 <luaopen_ffi@@Base+0x3e98>
   66a10:	mov	r3, #4
   66a14:	ldr	r2, [pc, #88]	; 66a74 <luaopen_ffi@@Base+0x409c>
   66a18:	ldr	r1, [r4, #4]
   66a1c:	mov	r0, r4
   66a20:	bl	3f29c <luaL_typerror@@Base+0x8f30>
   66a24:	mov	r1, r7
   66a28:	mov	r2, r0
   66a2c:	mov	r0, r4
   66a30:	bl	50248 <luaL_error@@Base+0xa15c>
   66a34:	ldr	r3, [r4, #36]	; 0x24
   66a38:	cmp	r3, #41	; 0x29
   66a3c:	movne	r5, #1
   66a40:	bne	66814 <luaopen_ffi@@Base+0x3e3c>
   66a44:	ldr	fp, [r4]
   66a48:	mov	sl, #1
   66a4c:	ldr	r0, [fp, #36]	; 0x24
   66a50:	b	66884 <luaopen_ffi@@Base+0x3eac>
   66a54:	mov	r0, r8
   66a58:	bl	1328c <pclose@plt+0x1f0>
   66a5c:	ldr	r1, [pc, #20]	; 66a78 <luaopen_ffi@@Base+0x40a0>
   66a60:	bl	4f034 <luaL_error@@Base+0x8f48>
   66a64:	andeq	r0, r0, pc, lsl r1
   66a68:	andeq	r0, r0, sl, lsl #2
   66a6c:	andeq	r0, r0, r6, lsl #2
   66a70:	andeq	r0, r0, r9, lsl #2
   66a74:	andeq	r3, r7, r8, lsl #11
   66a78:	andeq	r0, r0, r2, lsr sl
   66a7c:	ldr	r3, [r0, #108]	; 0x6c
   66a80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   66a84:	add	r3, r3, #1
   66a88:	cmp	r3, #199	; 0xc7
   66a8c:	sub	sp, sp, #44	; 0x2c
   66a90:	str	r3, [r0, #108]	; 0x6c
   66a94:	bhi	676f8 <luaopen_ffi@@Base+0x4d20>
   66a98:	mov	fp, r2
   66a9c:	ldr	r3, [r0, #36]	; 0x24
   66aa0:	ldr	r2, [pc, #3188]	; 6771c <luaopen_ffi@@Base+0x4d44>
   66aa4:	mov	r7, r0
   66aa8:	cmp	r3, r2
   66aac:	mov	r6, r1
   66ab0:	beq	66e00 <luaopen_ffi@@Base+0x4428>
   66ab4:	cmp	r3, #45	; 0x2d
   66ab8:	beq	66bf4 <luaopen_ffi@@Base+0x421c>
   66abc:	cmp	r3, #35	; 0x23
   66ac0:	bne	66b64 <luaopen_ffi@@Base+0x418c>
   66ac4:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   66ac8:	mov	r2, #8
   66acc:	mov	r1, r6
   66ad0:	mov	r0, r7
   66ad4:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   66ad8:	ldr	r4, [r7]
   66adc:	mov	r5, #21
   66ae0:	mov	r1, r6
   66ae4:	mov	r0, r4
   66ae8:	bl	4f9fc <luaL_error@@Base+0x9910>
   66aec:	ldr	r1, [r6]
   66af0:	ldr	r3, [r6, #8]
   66af4:	cmp	r3, #12
   66af8:	beq	67408 <luaopen_ffi@@Base+0x4a30>
   66afc:	orr	r1, r5, r1, lsl #16
   66b00:	mov	r0, r4
   66b04:	bl	4f23c <luaL_error@@Base+0x9150>
   66b08:	mov	r3, #11
   66b0c:	str	r3, [r6, #8]
   66b10:	str	r0, [r6]
   66b14:	ldr	r3, [r7, #36]	; 0x24
   66b18:	cmp	r3, #94	; 0x5e
   66b1c:	beq	67534 <luaopen_ffi@@Base+0x4b5c>
   66b20:	bgt	66bb8 <luaopen_ffi@@Base+0x41e0>
   66b24:	cmp	r3, #45	; 0x2d
   66b28:	beq	67528 <luaopen_ffi@@Base+0x4b50>
   66b2c:	bgt	66c20 <luaopen_ffi@@Base+0x4248>
   66b30:	cmp	r3, #42	; 0x2a
   66b34:	beq	66ed4 <luaopen_ffi@@Base+0x44fc>
   66b38:	cmp	r3, #43	; 0x2b
   66b3c:	beq	674ec <luaopen_ffi@@Base+0x4b14>
   66b40:	cmp	r3, #37	; 0x25
   66b44:	beq	66eec <luaopen_ffi@@Base+0x4514>
   66b48:	mov	r4, #15
   66b4c:	ldr	r3, [r7, #108]	; 0x6c
   66b50:	mov	r0, r4
   66b54:	sub	r3, r3, #1
   66b58:	str	r3, [r7, #108]	; 0x6c
   66b5c:	add	sp, sp, #44	; 0x2c
   66b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   66b64:	sub	r2, r2, #1
   66b68:	cmp	r3, r2
   66b6c:	beq	67618 <luaopen_ffi@@Base+0x4c40>
   66b70:	ble	66e80 <luaopen_ffi@@Base+0x44a8>
   66b74:	cmp	r3, #280	; 0x118
   66b78:	beq	67634 <luaopen_ffi@@Base+0x4c5c>
   66b7c:	ble	675e0 <luaopen_ffi@@Base+0x4c08>
   66b80:	ldr	r2, [pc, #2968]	; 67720 <luaopen_ffi@@Base+0x4d48>
   66b84:	cmp	r3, r2
   66b88:	beq	67550 <luaopen_ffi@@Base+0x4b78>
   66b8c:	cmp	r3, #288	; 0x120
   66b90:	bne	66ea0 <luaopen_ffi@@Base+0x44c8>
   66b94:	ldr	r1, [r0, #8]
   66b98:	mvn	r3, #0
   66b9c:	mov	r2, #3
   66ba0:	str	r1, [r6]
   66ba4:	strd	r2, [r6, #8]
   66ba8:	str	r3, [r6, #16]
   66bac:	mov	r0, r7
   66bb0:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   66bb4:	b	66b14 <luaopen_ffi@@Base+0x413c>
   66bb8:	ldr	r2, [pc, #2916]	; 67724 <luaopen_ffi@@Base+0x4d4c>
   66bbc:	cmp	r3, r2
   66bc0:	beq	67504 <luaopen_ffi@@Base+0x4b2c>
   66bc4:	bgt	66c44 <luaopen_ffi@@Base+0x426c>
   66bc8:	cmp	r3, #272	; 0x110
   66bcc:	beq	66ee0 <luaopen_ffi@@Base+0x4508>
   66bd0:	sub	r2, r2, #2
   66bd4:	cmp	r3, r2
   66bd8:	beq	6751c <luaopen_ffi@@Base+0x4b44>
   66bdc:	sub	r2, r2, #22
   66be0:	cmp	r3, r2
   66be4:	bne	66b48 <luaopen_ffi@@Base+0x4170>
   66be8:	mov	r3, #2
   66bec:	mov	r4, #13
   66bf0:	b	66c64 <luaopen_ffi@@Base+0x428c>
   66bf4:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   66bf8:	mov	r2, #8
   66bfc:	mov	r1, r6
   66c00:	mov	r0, r7
   66c04:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   66c08:	ldrd	r2, [r6, #12]
   66c0c:	ldr	r4, [r7]
   66c10:	cmp	r2, r3
   66c14:	beq	67418 <luaopen_ffi@@Base+0x4a40>
   66c18:	mov	r5, #20
   66c1c:	b	66ae0 <luaopen_ffi@@Base+0x4108>
   66c20:	cmp	r3, #60	; 0x3c
   66c24:	beq	66ec8 <luaopen_ffi@@Base+0x44f0>
   66c28:	cmp	r3, #62	; 0x3e
   66c2c:	beq	67510 <luaopen_ffi@@Base+0x4b38>
   66c30:	cmp	r3, #47	; 0x2f
   66c34:	bne	66b48 <luaopen_ffi@@Base+0x4170>
   66c38:	mov	r3, #7
   66c3c:	mov	r4, #3
   66c40:	b	66c64 <luaopen_ffi@@Base+0x428c>
   66c44:	ldr	r2, [pc, #2780]	; 67728 <luaopen_ffi@@Base+0x4d50>
   66c48:	cmp	r3, r2
   66c4c:	beq	66ebc <luaopen_ffi@@Base+0x44e4>
   66c50:	blt	674f8 <luaopen_ffi@@Base+0x4b20>
   66c54:	cmp	r3, #284	; 0x11c
   66c58:	moveq	r3, #3
   66c5c:	moveq	r4, #7
   66c60:	bne	66b48 <luaopen_ffi@@Base+0x4170>
   66c64:	cmp	fp, r3
   66c68:	bcs	66b4c <luaopen_ffi@@Base+0x4174>
   66c6c:	ldr	r9, [pc, #2744]	; 6772c <luaopen_ffi@@Base+0x4d54>
   66c70:	str	fp, [sp, #8]
   66c74:	mov	r0, r7
   66c78:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   66c7c:	cmp	r4, #13
   66c80:	ldr	r5, [r7]
   66c84:	beq	66fe0 <luaopen_ffi@@Base+0x4608>
   66c88:	cmp	r4, #14
   66c8c:	beq	67044 <luaopen_ffi@@Base+0x466c>
   66c90:	cmp	r4, #6
   66c94:	beq	67180 <luaopen_ffi@@Base+0x47a8>
   66c98:	sub	r8, r4, #7
   66c9c:	cmp	r8, #1
   66ca0:	ldr	r3, [r6, #8]
   66ca4:	bls	66ef8 <luaopen_ffi@@Base+0x4520>
   66ca8:	cmp	r3, #4
   66cac:	bne	66cbc <luaopen_ffi@@Base+0x42e4>
   66cb0:	ldrd	r2, [r6, #12]
   66cb4:	cmp	r2, r3
   66cb8:	beq	66cc8 <luaopen_ffi@@Base+0x42f0>
   66cbc:	mov	r0, r5
   66cc0:	mov	r1, r6
   66cc4:	bl	4f9fc <luaL_error@@Base+0x9910>
   66cc8:	add	r3, r9, r4, lsl #1
   66ccc:	add	r1, sp, #16
   66cd0:	ldrb	r2, [r3, #3337]	; 0xd09
   66cd4:	mov	r0, r7
   66cd8:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   66cdc:	cmp	r4, #5
   66ce0:	ldr	fp, [r7]
   66ce4:	mov	r5, r0
   66ce8:	bhi	66f34 <luaopen_ffi@@Base+0x455c>
   66cec:	ldr	r2, [r6, #8]
   66cf0:	cmp	r2, #4
   66cf4:	beq	671d4 <luaopen_ffi@@Base+0x47fc>
   66cf8:	cmp	r4, #5
   66cfc:	add	r1, sp, #16
   66d00:	mov	r0, fp
   66d04:	beq	67394 <luaopen_ffi@@Base+0x49bc>
   66d08:	bl	4fa60 <luaL_error@@Base+0x9974>
   66d0c:	ldr	r2, [sp, #24]
   66d10:	add	sl, r4, #32
   66d14:	cmp	r2, #4
   66d18:	beq	67458 <luaopen_ffi@@Base+0x4a80>
   66d1c:	add	r1, sp, #16
   66d20:	mov	r0, fp
   66d24:	bl	4f9fc <luaL_error@@Base+0x9910>
   66d28:	mov	r8, r0
   66d2c:	mov	r1, r6
   66d30:	mov	r0, fp
   66d34:	bl	4fa60 <luaL_error@@Base+0x9974>
   66d38:	ldr	r2, [r6, #8]
   66d3c:	cmp	r2, #4
   66d40:	bne	66d68 <luaopen_ffi@@Base+0x4390>
   66d44:	ldr	r2, [sp, #24]
   66d48:	cmp	r2, #4
   66d4c:	beq	66d68 <luaopen_ffi@@Base+0x4390>
   66d50:	mov	r1, r6
   66d54:	mov	r0, fp
   66d58:	bl	3e5f0 <luaL_typerror@@Base+0x8284>
   66d5c:	cmp	r0, #255	; 0xff
   66d60:	mov	r2, r0
   66d64:	bls	67540 <luaopen_ffi@@Base+0x4b68>
   66d68:	mov	r1, r6
   66d6c:	mov	r0, fp
   66d70:	bl	4f9fc <luaL_error@@Base+0x9910>
   66d74:	ldr	r2, [r6, #8]
   66d78:	cmp	r2, #12
   66d7c:	bne	66d98 <luaopen_ffi@@Base+0x43c0>
   66d80:	ldr	r2, [fp, #36]	; 0x24
   66d84:	ldr	r1, [r6]
   66d88:	cmp	r1, r2
   66d8c:	ldrcs	r2, [fp, #32]
   66d90:	subcs	r2, r2, #1
   66d94:	strcs	r2, [fp, #32]
   66d98:	ldr	r2, [sp, #24]
   66d9c:	cmp	r2, #12
   66da0:	bne	66dbc <luaopen_ffi@@Base+0x43e4>
   66da4:	ldr	r2, [fp, #36]	; 0x24
   66da8:	ldr	r1, [sp, #16]
   66dac:	cmp	r1, r2
   66db0:	ldrcs	r2, [fp, #32]
   66db4:	subcs	r2, r2, #1
   66db8:	strcs	r2, [fp, #32]
   66dbc:	lsl	r8, r8, #16
   66dc0:	orr	r1, r8, r0, lsl #24
   66dc4:	orr	r1, r1, sl
   66dc8:	mov	r0, fp
   66dcc:	bl	4f23c <luaL_error@@Base+0x9150>
   66dd0:	mov	r4, r5
   66dd4:	mov	r3, #11
   66dd8:	str	r3, [r6, #8]
   66ddc:	str	r0, [r6]
   66de0:	cmp	r4, #15
   66de4:	beq	66b4c <luaopen_ffi@@Base+0x4174>
   66de8:	add	r3, r9, r4, lsl #1
   66dec:	ldr	r2, [sp, #8]
   66df0:	ldrb	r3, [r3, #3336]	; 0xd08
   66df4:	cmp	r3, r2
   66df8:	bhi	66c74 <luaopen_ffi@@Base+0x429c>
   66dfc:	b	66b4c <luaopen_ffi@@Base+0x4174>
   66e00:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   66e04:	mov	r2, #8
   66e08:	mov	r1, r6
   66e0c:	mov	r0, r7
   66e10:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   66e14:	ldr	r4, [r7]
   66e18:	ldr	r3, [r6, #16]
   66e1c:	ldr	r1, [r6, #12]
   66e20:	mov	r0, r4
   66e24:	str	r3, [r6, #12]
   66e28:	str	r1, [r6, #16]
   66e2c:	bl	1b65c <_start@@Base+0x82ac>
   66e30:	mov	r0, r4
   66e34:	ldr	r1, [r6, #12]
   66e38:	bl	1b65c <_start@@Base+0x82ac>
   66e3c:	mov	r1, r6
   66e40:	mov	r0, r4
   66e44:	bl	4f31c <luaL_error@@Base+0x9230>
   66e48:	ldr	r3, [r6, #8]
   66e4c:	cmp	r3, #1
   66e50:	bls	66eb0 <luaopen_ffi@@Base+0x44d8>
   66e54:	cmp	r3, #5
   66e58:	movls	r3, #1
   66e5c:	strls	r3, [r6, #8]
   66e60:	bls	66b14 <luaopen_ffi@@Base+0x413c>
   66e64:	cmp	r3, #10
   66e68:	beq	675a0 <luaopen_ffi@@Base+0x4bc8>
   66e6c:	cmp	r3, #11
   66e70:	beq	673b0 <luaopen_ffi@@Base+0x49d8>
   66e74:	ldr	r1, [r6]
   66e78:	mov	r5, #19
   66e7c:	b	66af4 <luaopen_ffi@@Base+0x411c>
   66e80:	sub	r2, r2, #7
   66e84:	cmp	r3, r2
   66e88:	beq	67608 <luaopen_ffi@@Base+0x4c30>
   66e8c:	add	r2, r2, #2
   66e90:	cmp	r3, r2
   66e94:	beq	67584 <luaopen_ffi@@Base+0x4bac>
   66e98:	cmp	r3, #123	; 0x7b
   66e9c:	beq	67610 <luaopen_ffi@@Base+0x4c38>
   66ea0:	mov	r1, r6
   66ea4:	mov	r0, r7
   66ea8:	bl	64be4 <luaopen_ffi@@Base+0x220c>
   66eac:	b	66b14 <luaopen_ffi@@Base+0x413c>
   66eb0:	mov	r3, #2
   66eb4:	str	r3, [r6, #8]
   66eb8:	b	66b14 <luaopen_ffi@@Base+0x413c>
   66ebc:	mov	r3, #3
   66ec0:	mov	r4, #11
   66ec4:	b	66c64 <luaopen_ffi@@Base+0x428c>
   66ec8:	mov	r3, #3
   66ecc:	mov	r4, #9
   66ed0:	b	66c64 <luaopen_ffi@@Base+0x428c>
   66ed4:	mov	r3, #7
   66ed8:	mov	r4, #2
   66edc:	b	66c64 <luaopen_ffi@@Base+0x428c>
   66ee0:	mov	r3, #1
   66ee4:	mov	r4, #14
   66ee8:	b	66c64 <luaopen_ffi@@Base+0x428c>
   66eec:	mov	r3, #7
   66ef0:	mov	r4, #4
   66ef4:	b	66c64 <luaopen_ffi@@Base+0x428c>
   66ef8:	cmp	r3, #4
   66efc:	bhi	66f0c <luaopen_ffi@@Base+0x4534>
   66f00:	ldrd	r2, [r6, #12]
   66f04:	cmp	r2, r3
   66f08:	beq	66f18 <luaopen_ffi@@Base+0x4540>
   66f0c:	mov	r0, r5
   66f10:	mov	r1, r6
   66f14:	bl	4f9fc <luaL_error@@Base+0x9910>
   66f18:	add	r3, r9, r4, lsl #1
   66f1c:	add	r1, sp, #16
   66f20:	ldrb	r2, [r3, #3337]	; 0xd09
   66f24:	mov	r0, r7
   66f28:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   66f2c:	ldr	fp, [r7]
   66f30:	mov	r5, r0
   66f34:	mov	r1, r6
   66f38:	mov	r0, fp
   66f3c:	bl	4fa60 <luaL_error@@Base+0x9974>
   66f40:	cmp	r8, #1
   66f44:	bls	67284 <luaopen_ffi@@Base+0x48ac>
   66f48:	sub	r2, r4, #9
   66f4c:	tst	r2, #1
   66f50:	moveq	sl, r6
   66f54:	addeq	r8, sp, #16
   66f58:	bne	6736c <luaopen_ffi@@Base+0x4994>
   66f5c:	mov	r1, r8
   66f60:	mov	r0, fp
   66f64:	str	r2, [sp]
   66f68:	bl	4f9fc <luaL_error@@Base+0x9910>
   66f6c:	mov	r1, sl
   66f70:	mov	r4, r0
   66f74:	mov	r0, fp
   66f78:	bl	4f9fc <luaL_error@@Base+0x9910>
   66f7c:	lsl	r4, r4, #16
   66f80:	ldr	r2, [sp]
   66f84:	ldr	ip, [r8, #8]
   66f88:	orr	r4, r4, r0, lsl #8
   66f8c:	orr	r1, r4, r2
   66f90:	ldr	r2, [sl, #8]
   66f94:	cmp	r2, #12
   66f98:	beq	67350 <luaopen_ffi@@Base+0x4978>
   66f9c:	cmp	ip, #12
   66fa0:	bne	66fbc <luaopen_ffi@@Base+0x45e4>
   66fa4:	ldr	r2, [fp, #36]	; 0x24
   66fa8:	ldr	r0, [r8]
   66fac:	cmp	r0, r2
   66fb0:	ldrcs	r2, [fp, #32]
   66fb4:	subcs	r2, r2, #1
   66fb8:	strcs	r2, [fp, #32]
   66fbc:	mov	r0, fp
   66fc0:	bl	4f23c <luaL_error@@Base+0x9150>
   66fc4:	mov	r0, fp
   66fc8:	bl	4f664 <luaL_error@@Base+0x9578>
   66fcc:	mov	r3, #10
   66fd0:	mov	r4, r5
   66fd4:	str	r3, [r6, #8]
   66fd8:	str	r0, [r6]
   66fdc:	b	66de0 <luaopen_ffi@@Base+0x4408>
   66fe0:	mov	r0, r5
   66fe4:	mov	r1, r6
   66fe8:	bl	4fdb0 <luaL_error@@Base+0x9cc4>
   66fec:	mov	r2, #2
   66ff0:	add	r1, sp, #16
   66ff4:	mov	r0, r7
   66ff8:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   66ffc:	ldr	r5, [r7]
   67000:	add	r1, sp, #16
   67004:	mov	r4, r0
   67008:	mov	r0, r5
   6700c:	bl	4f31c <luaL_error@@Base+0x9230>
   67010:	ldr	r2, [r6, #16]
   67014:	cmn	r2, #1
   67018:	beq	67028 <luaopen_ffi@@Base+0x4650>
   6701c:	mov	r0, r5
   67020:	add	r1, sp, #32
   67024:	bl	4f10c <luaL_error@@Base+0x9020>
   67028:	add	lr, sp, #16
   6702c:	mov	ip, r6
   67030:	ldm	lr!, {r0, r1, r2, r3}
   67034:	stmia	ip!, {r0, r1, r2, r3}
   67038:	ldm	lr, {r0, r1}
   6703c:	stm	ip, {r0, r1}
   67040:	b	66de0 <luaopen_ffi@@Base+0x4408>
   67044:	mov	r1, r6
   67048:	mov	r0, r5
   6704c:	bl	4f31c <luaL_error@@Base+0x9230>
   67050:	ldr	r3, [r6, #8]
   67054:	cmp	r3, #1
   67058:	bls	670a4 <luaopen_ffi@@Base+0x46cc>
   6705c:	cmp	r3, #10
   67060:	ldreq	r0, [r6]
   67064:	beq	6708c <luaopen_ffi@@Base+0x46b4>
   67068:	sub	r3, r3, #2
   6706c:	cmp	r3, #2
   67070:	bhi	67478 <luaopen_ffi@@Base+0x4aa0>
   67074:	mov	r0, r5
   67078:	mov	r2, #255	; 0xff
   6707c:	mov	r1, r6
   67080:	bl	4f520 <luaL_error@@Base+0x9434>
   67084:	mov	r0, r5
   67088:	bl	4f664 <luaL_error@@Base+0x9578>
   6708c:	cmn	r0, #1
   67090:	beq	670a4 <luaopen_ffi@@Base+0x46cc>
   67094:	mov	r2, r0
   67098:	add	r1, r6, #12
   6709c:	mov	r0, r5
   670a0:	bl	4f10c <luaL_error@@Base+0x9020>
   670a4:	ldr	r2, [r6, #16]
   670a8:	ldr	r3, [r5, #20]
   670ac:	cmn	r2, #1
   670b0:	str	r3, [r5, #24]
   670b4:	beq	670c4 <luaopen_ffi@@Base+0x46ec>
   670b8:	add	r1, r5, #28
   670bc:	mov	r0, r5
   670c0:	bl	4f10c <luaL_error@@Base+0x9020>
   670c4:	mvn	r3, #0
   670c8:	str	r3, [r6, #16]
   670cc:	add	r3, r9, r4, lsl #1
   670d0:	add	r1, sp, #16
   670d4:	ldrb	r2, [r3, #3337]	; 0xd09
   670d8:	mov	r0, r7
   670dc:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   670e0:	cmp	r4, #14
   670e4:	ldr	fp, [r7]
   670e8:	mov	r5, r0
   670ec:	beq	67190 <luaopen_ffi@@Base+0x47b8>
   670f0:	cmp	r4, #6
   670f4:	subne	r8, r4, #7
   670f8:	bne	66f34 <luaopen_ffi@@Base+0x455c>
   670fc:	add	r1, sp, #16
   67100:	mov	r0, fp
   67104:	bl	4fa60 <luaL_error@@Base+0x9974>
   67108:	ldr	r2, [sp, #24]
   6710c:	cmp	r2, #11
   67110:	bne	6712c <luaopen_ffi@@Base+0x4754>
   67114:	ldr	r1, [sp, #16]
   67118:	ldr	r2, [fp, #52]	; 0x34
   6711c:	add	r0, r2, r1, lsl #3
   67120:	ldrb	r2, [r2, r1, lsl #3]
   67124:	cmp	r2, #38	; 0x26
   67128:	beq	674ac <luaopen_ffi@@Base+0x4ad4>
   6712c:	add	r1, sp, #16
   67130:	mov	r0, fp
   67134:	bl	4f8a0 <luaL_error@@Base+0x97b4>
   67138:	ldr	r2, [sp, #24]
   6713c:	cmp	r2, #12
   67140:	beq	674dc <luaopen_ffi@@Base+0x4b04>
   67144:	ldr	r2, [r6, #8]
   67148:	ldr	r1, [r6]
   6714c:	cmp	r2, #12
   67150:	beq	674cc <luaopen_ffi@@Base+0x4af4>
   67154:	ldr	r2, [sp, #16]
   67158:	mov	r0, fp
   6715c:	lsl	r3, r2, #16
   67160:	orr	r3, r3, #38	; 0x26
   67164:	orr	r1, r3, r1, lsl #24
   67168:	bl	4f23c <luaL_error@@Base+0x9150>
   6716c:	str	r0, [r6]
   67170:	mov	r3, #11
   67174:	str	r3, [r6, #8]
   67178:	mov	r4, r5
   6717c:	b	66de0 <luaopen_ffi@@Base+0x4408>
   67180:	mov	r0, r5
   67184:	mov	r1, r6
   67188:	bl	4f8a0 <luaL_error@@Base+0x97b4>
   6718c:	b	670cc <luaopen_ffi@@Base+0x46f4>
   67190:	add	r1, sp, #16
   67194:	mov	r0, fp
   67198:	bl	4f31c <luaL_error@@Base+0x9230>
   6719c:	ldr	r2, [r6, #12]
   671a0:	cmn	r2, #1
   671a4:	beq	671b4 <luaopen_ffi@@Base+0x47dc>
   671a8:	mov	r0, fp
   671ac:	add	r1, sp, #28
   671b0:	bl	4f10c <luaL_error@@Base+0x9020>
   671b4:	add	lr, sp, #16
   671b8:	mov	ip, r6
   671bc:	ldm	lr!, {r0, r1, r2, r3}
   671c0:	mov	r4, r5
   671c4:	stmia	ip!, {r0, r1, r2, r3}
   671c8:	ldm	lr, {r0, r1}
   671cc:	stm	ip, {r0, r1}
   671d0:	b	66de0 <luaopen_ffi@@Base+0x4408>
   671d4:	ldr	r1, [r6, #12]
   671d8:	ldr	r2, [r6, #16]
   671dc:	cmp	r1, r2
   671e0:	bne	66cf8 <luaopen_ffi@@Base+0x4320>
   671e4:	ldr	r2, [sp, #24]
   671e8:	cmp	r2, #4
   671ec:	bne	66cf8 <luaopen_ffi@@Base+0x4320>
   671f0:	ldr	r1, [sp, #28]
   671f4:	ldr	r2, [sp, #32]
   671f8:	cmp	r1, r2
   671fc:	bne	66cf8 <luaopen_ffi@@Base+0x4320>
   67200:	ldr	r2, [r6, #4]
   67204:	mov	r0, r4
   67208:	cmn	r2, #14
   6720c:	ldr	r2, [sp, #20]
   67210:	vldreq	s15, [r6]
   67214:	vldrne	d0, [r6]
   67218:	vcvteq.f64.s32	d0, s15
   6721c:	cmn	r2, #14
   67220:	vldreq	s15, [sp, #16]
   67224:	vldrne	d1, [sp, #16]
   67228:	vcvteq.f64.s32	d1, s15
   6722c:	bl	53990 <lua_gethookcount@@Base+0x310>
   67230:	vcmp.f64	d0, d0
   67234:	vstr	d0, [sp]
   67238:	vmov.f64	d7, d0
   6723c:	vmrs	APSR_nzcv, fpscr
   67240:	bne	66cf8 <luaopen_ffi@@Base+0x4320>
   67244:	ldrd	r0, [sp]
   67248:	cmp	r1, #-2147483648	; 0x80000000
   6724c:	cmpeq	r0, #0
   67250:	beq	66cf8 <luaopen_ffi@@Base+0x4320>
   67254:	vcvt.s32.f64	s15, d0
   67258:	vcvt.f64.s32	d6, s15
   6725c:	vcmp.f64	d0, d6
   67260:	vmrs	APSR_nzcv, fpscr
   67264:	vldrne	d7, [sp]
   67268:	mvneq	r3, #13
   6726c:	vstreq	s15, [r6]
   67270:	moveq	r4, r5
   67274:	streq	r3, [r6, #4]
   67278:	vstrne	d7, [r6]
   6727c:	movne	r4, r5
   67280:	b	66de0 <luaopen_ffi@@Base+0x4408>
   67284:	ldr	r2, [r6, #8]
   67288:	cmp	r4, #8
   6728c:	movne	r4, #5
   67290:	moveq	r4, #4
   67294:	cmp	r2, #4
   67298:	movhi	sl, r6
   6729c:	addls	sl, sp, #16
   672a0:	mov	r1, sl
   672a4:	mov	r0, fp
   672a8:	addhi	r8, sp, #16
   672ac:	movls	r8, r6
   672b0:	bl	4f9fc <luaL_error@@Base+0x9910>
   672b4:	mov	r1, r8
   672b8:	str	r0, [sp]
   672bc:	mov	r0, fp
   672c0:	bl	4fa60 <luaL_error@@Base+0x9974>
   672c4:	ldr	ip, [r8, #8]
   672c8:	cmp	ip, #4
   672cc:	ldrls	pc, [pc, ip, lsl #2]
   672d0:	b	6748c <luaopen_ffi@@Base+0x4ab4>
   672d4:	andeq	r7, r6, r4, lsr r3
   672d8:	andeq	r7, r6, r4, lsr r3
   672dc:	andeq	r7, r6, r4, lsr r3
   672e0:	andeq	r7, r6, ip, lsl #6
   672e4:	andeq	r7, r6, r8, ror #5
   672e8:	ldr	r3, [sp]
   672ec:	mov	r1, r8
   672f0:	add	r4, r4, #4
   672f4:	mov	r0, fp
   672f8:	orr	r4, r4, r3, lsl #8
   672fc:	bl	3e5f0 <luaL_typerror@@Base+0x8284>
   67300:	ldr	ip, [r8, #8]
   67304:	orr	r1, r4, r0, lsl #16
   67308:	b	66f90 <luaopen_ffi@@Base+0x45b8>
   6730c:	ldr	r3, [sp]
   67310:	ldr	r1, [r8]
   67314:	add	r4, r4, #2
   67318:	mvn	r2, #4
   6731c:	mov	r0, fp
   67320:	orr	r4, r4, r3, lsl #8
   67324:	bl	3e594 <luaL_typerror@@Base+0x8228>
   67328:	ldr	ip, [r8, #8]
   6732c:	orr	r1, r4, r0, lsl #16
   67330:	b	66f90 <luaopen_ffi@@Base+0x45b8>
   67334:	ldr	r3, [sp]
   67338:	ldr	r2, [sl, #8]
   6733c:	add	r1, r4, #6
   67340:	orr	r1, r1, r3, lsl #8
   67344:	cmp	r2, #12
   67348:	orr	r1, r1, ip, lsl #16
   6734c:	bne	66fbc <luaopen_ffi@@Base+0x45e4>
   67350:	ldr	r2, [fp, #36]	; 0x24
   67354:	ldr	r0, [sl]
   67358:	cmp	r0, r2
   6735c:	ldrcs	r2, [fp, #32]
   67360:	subcs	r2, r2, #1
   67364:	strcs	r2, [fp, #32]
   67368:	b	66f9c <luaopen_ffi@@Base+0x45c4>
   6736c:	eor	r2, r2, #3
   67370:	add	r1, sp, #16
   67374:	mov	r0, fp
   67378:	str	r2, [sp]
   6737c:	str	r2, [sp, #12]
   67380:	mov	r8, r6
   67384:	bl	4fa60 <luaL_error@@Base+0x9974>
   67388:	add	sl, sp, #16
   6738c:	ldr	r2, [sp]
   67390:	b	66f5c <luaopen_ffi@@Base+0x4584>
   67394:	bl	4f9fc <luaL_error@@Base+0x9910>
   67398:	mov	r1, r6
   6739c:	mov	sl, #37	; 0x25
   673a0:	mov	r8, r0
   673a4:	mov	r0, fp
   673a8:	bl	4f9fc <luaL_error@@Base+0x9910>
   673ac:	b	66d74 <luaopen_ffi@@Base+0x439c>
   673b0:	ldr	r3, [r4, #32]
   673b4:	ldrb	r2, [r4, #66]	; 0x42
   673b8:	add	r3, r3, #1
   673bc:	cmp	r3, r2
   673c0:	uxtbls	r1, r3
   673c4:	bls	673d8 <luaopen_ffi@@Base+0x4a00>
   673c8:	cmp	r3, #249	; 0xf9
   673cc:	uxtbls	r1, r3
   673d0:	strbls	r1, [r4, #66]	; 0x42
   673d4:	bhi	67704 <luaopen_ffi@@Base+0x4d2c>
   673d8:	ldr	r0, [r6]
   673dc:	ldr	r2, [r4, #52]	; 0x34
   673e0:	sub	r1, r1, #1
   673e4:	add	r2, r2, r0, lsl #3
   673e8:	str	r3, [r4, #32]
   673ec:	strb	r1, [r2, #1]
   673f0:	ldr	r1, [r4, #32]
   673f4:	mov	r5, #19
   673f8:	mov	r3, #12
   673fc:	sub	r1, r1, #1
   67400:	str	r1, [r6]
   67404:	str	r3, [r6, #8]
   67408:	mov	r0, r4
   6740c:	bl	1b6ac <_start@@Base+0x82fc>
   67410:	ldr	r1, [r6]
   67414:	b	66afc <luaopen_ffi@@Base+0x4124>
   67418:	ldr	r3, [r6, #8]
   6741c:	cmp	r3, #5
   67420:	beq	675bc <luaopen_ffi@@Base+0x4be4>
   67424:	cmp	r3, #4
   67428:	bne	66c18 <luaopen_ffi@@Base+0x4240>
   6742c:	ldr	r3, [r6, #4]
   67430:	cmn	r3, #14
   67434:	beq	676cc <luaopen_ffi@@Base+0x4cf4>
   67438:	ldr	r2, [r6]
   6743c:	orrs	r3, r2, r3, lsl #1
   67440:	beq	66c18 <luaopen_ffi@@Base+0x4240>
   67444:	ldrd	r2, [r6]
   67448:	mov	r0, r2
   6744c:	add	r1, r3, #-2147483648	; 0x80000000
   67450:	strd	r0, [r6]
   67454:	b	66b14 <luaopen_ffi@@Base+0x413c>
   67458:	add	r1, sp, #16
   6745c:	mov	r0, fp
   67460:	bl	3e5f0 <luaL_typerror@@Base+0x8284>
   67464:	cmp	r0, #255	; 0xff
   67468:	mov	r8, r0
   6746c:	addls	sl, r4, #22
   67470:	bls	66d2c <luaopen_ffi@@Base+0x4354>
   67474:	b	66d1c <luaopen_ffi@@Base+0x4344>
   67478:	mov	r2, #1
   6747c:	mov	r1, r6
   67480:	mov	r0, r5
   67484:	bl	4fcbc <luaL_error@@Base+0x9bd0>
   67488:	b	6708c <luaopen_ffi@@Base+0x46b4>
   6748c:	mov	r1, r8
   67490:	mov	r0, fp
   67494:	bl	4f9fc <luaL_error@@Base+0x9910>
   67498:	ldr	r3, [sp]
   6749c:	ldr	ip, [r8, #8]
   674a0:	orr	r4, r4, r3, lsl #8
   674a4:	orr	r1, r4, r0, lsl #16
   674a8:	b	66f90 <luaopen_ffi@@Base+0x45b8>
   674ac:	ldr	r2, [r6, #8]
   674b0:	ldr	r1, [r6]
   674b4:	cmp	r2, #12
   674b8:	beq	6769c <luaopen_ffi@@Base+0x4cc4>
   674bc:	strb	r1, [r0, #3]
   674c0:	ldr	r3, [sp, #16]
   674c4:	str	r3, [r6]
   674c8:	b	67170 <luaopen_ffi@@Base+0x4798>
   674cc:	mov	r0, fp
   674d0:	bl	1b6ac <_start@@Base+0x82fc>
   674d4:	ldr	r1, [r6]
   674d8:	b	67154 <luaopen_ffi@@Base+0x477c>
   674dc:	ldr	r1, [sp, #16]
   674e0:	mov	r0, fp
   674e4:	bl	1b6ac <_start@@Base+0x82fc>
   674e8:	b	67144 <luaopen_ffi@@Base+0x476c>
   674ec:	mov	r3, #6
   674f0:	mov	r4, #0
   674f4:	b	66c64 <luaopen_ffi@@Base+0x428c>
   674f8:	mov	r3, #3
   674fc:	mov	r4, #10
   67500:	b	66c64 <luaopen_ffi@@Base+0x428c>
   67504:	mov	r3, #3
   67508:	mov	r4, #8
   6750c:	b	66c64 <luaopen_ffi@@Base+0x428c>
   67510:	mov	r3, #3
   67514:	mov	r4, #12
   67518:	b	66c64 <luaopen_ffi@@Base+0x428c>
   6751c:	mov	r3, #5
   67520:	mov	r4, #6
   67524:	b	66c64 <luaopen_ffi@@Base+0x428c>
   67528:	mov	r3, #6
   6752c:	mov	r4, #1
   67530:	b	66c64 <luaopen_ffi@@Base+0x428c>
   67534:	mov	r3, #10
   67538:	mov	r4, #5
   6753c:	b	66c64 <luaopen_ffi@@Base+0x428c>
   67540:	mov	r0, r8
   67544:	sub	sl, sl, #5
   67548:	mov	r8, r2
   6754c:	b	66d74 <luaopen_ffi@@Base+0x439c>
   67550:	ldr	r1, [r0, #12]
   67554:	mov	r3, #0
   67558:	cmn	r1, #11
   6755c:	str	r3, [r6]
   67560:	ldrd	r2, [r0, #8]
   67564:	movne	r1, #4
   67568:	moveq	r1, #5
   6756c:	str	r1, [r6, #8]
   67570:	mvn	r1, #0
   67574:	strd	r2, [r6]
   67578:	str	r1, [r6, #12]
   6757c:	str	r1, [r6, #16]
   67580:	b	66bac <luaopen_ffi@@Base+0x41d4>
   67584:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   67588:	ldr	r3, [r7, #68]	; 0x44
   6758c:	mov	r2, #0
   67590:	mov	r1, r6
   67594:	mov	r0, r7
   67598:	bl	66780 <luaopen_ffi@@Base+0x3da8>
   6759c:	b	66b14 <luaopen_ffi@@Base+0x413c>
   675a0:	ldr	r3, [r6]
   675a4:	ldr	r1, [r4, #52]	; 0x34
   675a8:	sub	r3, r3, #-536870911	; 0xe0000001
   675ac:	ldr	r2, [r1, r3, lsl #3]
   675b0:	eor	r2, r2, #1
   675b4:	strb	r2, [r1, r3, lsl #3]
   675b8:	b	66b14 <luaopen_ffi@@Base+0x413c>
   675bc:	ldr	r1, [r6]
   675c0:	ldrh	r3, [r1, #6]
   675c4:	cmp	r3, #16
   675c8:	beq	676b8 <luaopen_ffi@@Base+0x4ce0>
   675cc:	ldrd	r2, [r1, #8]
   675d0:	rsbs	r2, r2, #0
   675d4:	rsc	r3, r3, #0
   675d8:	strd	r2, [r1, #8]
   675dc:	b	66b14 <luaopen_ffi@@Base+0x413c>
   675e0:	cmp	r3, #276	; 0x114
   675e4:	moveq	r1, #2
   675e8:	bne	66ea0 <luaopen_ffi@@Base+0x44c8>
   675ec:	mvn	r3, #0
   675f0:	mov	r2, #0
   675f4:	str	r1, [r6, #8]
   675f8:	str	r2, [r6]
   675fc:	str	r3, [r6, #12]
   67600:	str	r3, [r6, #16]
   67604:	b	66bac <luaopen_ffi@@Base+0x41d4>
   67608:	mov	r1, #1
   6760c:	b	675ec <luaopen_ffi@@Base+0x4c14>
   67610:	bl	64448 <luaopen_ffi@@Base+0x1a70>
   67614:	b	66b14 <luaopen_ffi@@Base+0x413c>
   67618:	mov	r2, #0
   6761c:	mvn	r3, #0
   67620:	str	r2, [r1, #8]
   67624:	str	r2, [r1]
   67628:	str	r3, [r1, #12]
   6762c:	str	r3, [r1, #16]
   67630:	b	66bac <luaopen_ffi@@Base+0x41d4>
   67634:	ldr	r3, [r0]
   67638:	ldrb	r2, [r3, #64]	; 0x40
   6763c:	tst	r2, #2
   67640:	beq	67714 <luaopen_ffi@@Base+0x4d3c>
   67644:	ldr	r4, [r3, #32]
   67648:	ldrb	r1, [r3, #66]	; 0x42
   6764c:	add	r2, r4, #1
   67650:	cmp	r2, r1
   67654:	bls	67664 <luaopen_ffi@@Base+0x4c8c>
   67658:	cmp	r2, #249	; 0xf9
   6765c:	strbls	r2, [r3, #66]	; 0x42
   67660:	bhi	6770c <luaopen_ffi@@Base+0x4d34>
   67664:	ldrb	r1, [r3, #65]	; 0x41
   67668:	ldr	r0, [pc, #192]	; 67730 <luaopen_ffi@@Base+0x4d58>
   6766c:	str	r2, [r3, #32]
   67670:	orr	r0, r0, r4, lsl #8
   67674:	orr	r1, r0, r1, lsl #16
   67678:	mov	r0, r3
   6767c:	bl	4f23c <luaL_error@@Base+0x9150>
   67680:	mvn	r3, #0
   67684:	mov	r2, #13
   67688:	str	r4, [r6, #4]
   6768c:	strd	r2, [r6, #8]
   67690:	str	r3, [r6, #16]
   67694:	str	r0, [r6]
   67698:	b	66bac <luaopen_ffi@@Base+0x41d4>
   6769c:	mov	r0, fp
   676a0:	bl	1b6ac <_start@@Base+0x82fc>
   676a4:	ldr	r2, [sp, #16]
   676a8:	ldr	r0, [fp, #52]	; 0x34
   676ac:	ldr	r1, [r6]
   676b0:	add	r0, r0, r2, lsl #3
   676b4:	b	674bc <luaopen_ffi@@Base+0x4ae4>
   676b8:	ldrd	r2, [r1, #16]
   676bc:	mov	r4, r2
   676c0:	add	r5, r3, #-2147483648	; 0x80000000
   676c4:	strd	r4, [r1, #16]
   676c8:	b	66b14 <luaopen_ffi@@Base+0x413c>
   676cc:	ldr	r3, [r6]
   676d0:	cmp	r3, #0
   676d4:	beq	66c18 <luaopen_ffi@@Base+0x4240>
   676d8:	rsb	r2, r3, #0
   676dc:	cmp	r3, r2
   676e0:	strne	r2, [r6]
   676e4:	vmoveq	s15, r3
   676e8:	vcvteq.f64.s32	d7, s15
   676ec:	vnegeq.f64	d7, d7
   676f0:	vstreq	d7, [r6]
   676f4:	b	66b14 <luaopen_ffi@@Base+0x413c>
   676f8:	mov	r2, #2176	; 0x880
   676fc:	mov	r1, #0
   67700:	bl	4eef8 <luaL_error@@Base+0x8e0c>
   67704:	mov	r0, r4
   67708:	bl	1328c <pclose@plt+0x1f0>
   6770c:	mov	r0, r3
   67710:	bl	1328c <pclose@plt+0x1f0>
   67714:	ldr	r1, [pc, #24]	; 67734 <luaopen_ffi@@Base+0x4d5c>
   67718:	bl	4f034 <luaL_error@@Base+0x8f48>
   6771c:	andeq	r0, r0, pc, lsl #2
   67720:	andeq	r0, r0, lr, lsl r1
   67724:	andeq	r0, r0, r9, lsl r1
   67728:	andeq	r0, r0, fp, lsl r1
   6772c:			; <UNDEFINED> instruction: 0x00070cb0
   67730:	andeq	r0, r0, #71	; 0x47
   67734:	andeq	r0, r0, sl, lsr #21
   67738:	push	{r4, lr}
   6773c:	sub	sp, sp, #24
   67740:	mov	r1, sp
   67744:	mov	r2, #0
   67748:	mov	r4, r0
   6774c:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   67750:	ldr	r3, [sp, #8]
   67754:	ldr	r0, [r4]
   67758:	cmp	r3, #0
   6775c:	moveq	r3, #1
   67760:	mov	r1, sp
   67764:	streq	r3, [sp, #8]
   67768:	bl	4fdb0 <luaL_error@@Base+0x9cc4>
   6776c:	ldr	r0, [sp, #16]
   67770:	add	sp, sp, #24
   67774:	pop	{r4, pc}
   67778:	push	{r4, r5, r6, lr}
   6777c:	mov	r4, r0
   67780:	mov	r5, r1
   67784:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   67788:	mov	r1, r5
   6778c:	mov	r0, r4
   67790:	mov	r2, #0
   67794:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   67798:	mov	r1, r5
   6779c:	ldr	r0, [r4]
   677a0:	bl	4fa60 <luaL_error@@Base+0x9974>
   677a4:	mov	r0, r4
   677a8:	mov	r1, #93	; 0x5d
   677ac:	pop	{r4, r5, r6, lr}
   677b0:	b	641e0 <luaopen_ffi@@Base+0x1808>
   677b4:	push	{r4, r5, r6, lr}
   677b8:	mov	r4, r0
   677bc:	mov	r2, #0
   677c0:	mov	r6, r1
   677c4:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   677c8:	ldr	r3, [r4, #36]	; 0x24
   677cc:	mov	r5, #1
   677d0:	cmp	r3, #44	; 0x2c
   677d4:	bne	6780c <luaopen_ffi@@Base+0x4e34>
   677d8:	mov	r0, r4
   677dc:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   677e0:	mov	r1, r6
   677e4:	ldr	r0, [r4]
   677e8:	bl	4f8a0 <luaL_error@@Base+0x97b4>
   677ec:	mov	r2, #0
   677f0:	mov	r1, r6
   677f4:	mov	r0, r4
   677f8:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   677fc:	ldr	r3, [r4, #36]	; 0x24
   67800:	add	r5, r5, #1
   67804:	cmp	r3, #44	; 0x2c
   67808:	beq	677d8 <luaopen_ffi@@Base+0x4e00>
   6780c:	mov	r0, r5
   67810:	pop	{r4, r5, r6, pc}
   67814:	ldr	r3, [r1, #8]
   67818:	push	{r4, r5, r6, r7, r8, lr}
   6781c:	sub	r3, r3, #6
   67820:	cmp	r3, #3
   67824:	sub	sp, sp, #32
   67828:	bhi	679e0 <luaopen_ffi@@Base+0x5008>
   6782c:	ldr	r3, [r0, #36]	; 0x24
   67830:	mov	r6, r1
   67834:	cmp	r3, #44	; 0x2c
   67838:	mov	r7, r2
   6783c:	mov	r4, r0
   67840:	beq	67908 <luaopen_ffi@@Base+0x4f30>
   67844:	mov	r1, #61	; 0x3d
   67848:	mov	r5, sp
   6784c:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   67850:	mov	r1, r5
   67854:	mov	r0, r4
   67858:	bl	677b4 <luaopen_ffi@@Base+0x4ddc>
   6785c:	cmp	r0, r7
   67860:	bne	678bc <luaopen_ffi@@Base+0x4ee4>
   67864:	ldr	r3, [sp, #8]
   67868:	ldr	r0, [r4]
   6786c:	cmp	r3, #13
   67870:	bne	678a8 <luaopen_ffi@@Base+0x4ed0>
   67874:	ldr	r2, [sp]
   67878:	ldr	r3, [r0, #52]	; 0x34
   6787c:	ldrb	r3, [r3, r2, lsl #3]
   67880:	cmp	r3, #71	; 0x47
   67884:	moveq	r2, #11
   67888:	ldreq	r3, [r0, #32]
   6788c:	ldrne	r2, [sp, #4]
   67890:	subeq	r3, r3, #1
   67894:	movne	r3, #12
   67898:	streq	r3, [r0, #32]
   6789c:	strne	r2, [sp]
   678a0:	streq	r2, [sp, #8]
   678a4:	strne	r3, [sp, #8]
   678a8:	mov	r2, r5
   678ac:	mov	r1, r6
   678b0:	bl	4fb04 <luaL_error@@Base+0x9a18>
   678b4:	add	sp, sp, #32
   678b8:	pop	{r4, r5, r6, r7, r8, pc}
   678bc:	mov	r2, r0
   678c0:	mov	r1, r7
   678c4:	mov	r3, r5
   678c8:	mov	r0, r4
   678cc:	bl	4f908 <luaL_error@@Base+0x981c>
   678d0:	ldr	r0, [r4]
   678d4:	mvn	ip, #0
   678d8:	mov	lr, #12
   678dc:	ldr	r3, [r0, #32]
   678e0:	mov	r2, r5
   678e4:	sub	r3, r3, #1
   678e8:	mov	r1, r6
   678ec:	str	r3, [sp]
   678f0:	str	lr, [sp, #8]
   678f4:	str	ip, [sp, #12]
   678f8:	str	ip, [sp, #16]
   678fc:	bl	4fb04 <luaL_error@@Base+0x9a18>
   67900:	add	sp, sp, #32
   67904:	pop	{r4, r5, r6, r7, r8, pc}
   67908:	mov	r5, sp
   6790c:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   67910:	mov	r1, r5
   67914:	mov	r0, r4
   67918:	str	r6, [sp, #24]
   6791c:	bl	64be4 <luaopen_ffi@@Base+0x220c>
   67920:	ldr	r3, [sp, #8]
   67924:	cmp	r3, #6
   67928:	beq	67950 <luaopen_ffi@@Base+0x4f78>
   6792c:	ldr	r3, [r4, #108]	; 0x6c
   67930:	add	r3, r7, r3
   67934:	cmp	r3, #199	; 0xc7
   67938:	bhi	679e8 <luaopen_ffi@@Base+0x5010>
   6793c:	add	r2, r7, #1
   67940:	mov	r1, r5
   67944:	mov	r0, r4
   67948:	bl	67814 <luaopen_ffi@@Base+0x4e3c>
   6794c:	b	678d0 <luaopen_ffi@@Base+0x4ef8>
   67950:	ldr	r8, [r4]
   67954:	ldr	r0, [sp]
   67958:	mov	r3, r6
   6795c:	ldr	r1, [r8, #32]
   67960:	mov	ip, #0
   67964:	ldr	r2, [r3, #8]
   67968:	cmp	r2, #9
   6796c:	bne	67990 <luaopen_ffi@@Base+0x4fb8>
   67970:	ldr	r2, [r3]
   67974:	cmp	r0, r2
   67978:	ldr	r2, [r3, #4]
   6797c:	moveq	ip, #1
   67980:	streq	r1, [r3]
   67984:	cmp	r0, r2
   67988:	moveq	ip, #1
   6798c:	streq	r1, [r3, #4]
   67990:	ldr	r3, [r3, #24]
   67994:	cmp	r3, #0
   67998:	bne	67964 <luaopen_ffi@@Base+0x4f8c>
   6799c:	cmp	ip, #0
   679a0:	beq	6792c <luaopen_ffi@@Base+0x4f54>
   679a4:	lsl	r0, r0, #16
   679a8:	orr	r0, r0, #18
   679ac:	orr	r1, r0, r1, lsl #8
   679b0:	mov	r0, r8
   679b4:	bl	4f23c <luaL_error@@Base+0x9150>
   679b8:	ldr	r3, [r8, #32]
   679bc:	ldrb	r2, [r8, #66]	; 0x42
   679c0:	add	r3, r3, #1
   679c4:	cmp	r3, r2
   679c8:	bls	679d8 <luaopen_ffi@@Base+0x5000>
   679cc:	cmp	r3, #249	; 0xf9
   679d0:	strbls	r3, [r8, #66]	; 0x42
   679d4:	bhi	67a00 <luaopen_ffi@@Base+0x5028>
   679d8:	str	r3, [r8, #32]
   679dc:	b	6792c <luaopen_ffi@@Base+0x4f54>
   679e0:	ldr	r1, [pc, #32]	; 67a08 <luaopen_ffi@@Base+0x5030>
   679e4:	bl	4f034 <luaL_error@@Base+0x8f48>
   679e8:	ldr	r0, [r4]
   679ec:	ldr	r3, [pc, #24]	; 67a0c <luaopen_ffi@@Base+0x5034>
   679f0:	mov	r2, #200	; 0xc8
   679f4:	ldr	r1, [r0, #48]	; 0x30
   679f8:	ldr	r0, [r0, #4]
   679fc:	bl	132a0 <pclose@plt+0x204>
   67a00:	mov	r0, r8
   67a04:	bl	1328c <pclose@plt+0x1f0>
   67a08:	ldrdeq	r0, [r0], -r5
   67a0c:	muleq	r7, r0, r5
   67a10:	push	{r4, lr}
   67a14:	mov	r4, r0
   67a18:	sub	sp, sp, #24
   67a1c:	mov	r1, sp
   67a20:	mov	r2, #0
   67a24:	bl	66a7c <luaopen_ffi@@Base+0x40a4>
   67a28:	mov	r1, sp
   67a2c:	ldr	r0, [r4]
   67a30:	bl	4f8a0 <luaL_error@@Base+0x97b4>
   67a34:	add	sp, sp, #24
   67a38:	pop	{r4, pc}
   67a3c:	push	{r4, lr}
   67a40:	sub	sp, sp, #16
   67a44:	ldr	r4, [r0]
   67a48:	mov	r3, #0
   67a4c:	strb	r3, [sp, #13]
   67a50:	ldr	r3, [r4, #36]	; 0x24
   67a54:	ldr	r1, [r4, #12]
   67a58:	strb	r3, [sp, #12]
   67a5c:	ldr	r2, [r4, #4]
   67a60:	add	r3, sp, #16
   67a64:	ldr	r2, [r2, #96]	; 0x60
   67a68:	str	r1, [r3, #-12]!
   67a6c:	str	r3, [r4, #12]
   67a70:	str	r2, [sp, #8]
   67a74:	bl	64e60 <luaopen_ffi@@Base+0x2488>
   67a78:	mov	r0, r4
   67a7c:	bl	50694 <luaL_error@@Base+0xa5a8>
   67a80:	add	sp, sp, #16
   67a84:	pop	{r4, pc}
   67a88:	push	{r4, r5, r6, lr}
   67a8c:	mov	r4, r0
   67a90:	bl	640f8 <luaopen_ffi@@Base+0x1720>
   67a94:	mov	r0, r4
   67a98:	bl	67738 <luaopen_ffi@@Base+0x4d60>
   67a9c:	ldr	r1, [pc, #24]	; 67abc <luaopen_ffi@@Base+0x50e4>
   67aa0:	mov	r5, r0
   67aa4:	mov	r0, r4
   67aa8:	bl	641e0 <luaopen_ffi@@Base+0x1808>
   67aac:	mov	r0, r4
   67ab0:	bl	67a3c <luaopen_ffi@@Base+0x5064>
   67ab4:	mov	r0, r5
   67ab8:	pop	{r4, r5, r6, pc}
   67abc:	andeq	r0, r0, r3, lsl r1
   67ac0:	push	{r4, r5, r6, r7, r8, lr}
   67ac4:	mov	r5, r0
   67ac8:	bl	365f0 <luaL_typerror@@Base+0x284>
   67acc:	mov	r1, #2
   67ad0:	mov	r4, r0
   67ad4:	mov	r0, r5
   67ad8:	bl	3638c <luaL_typerror@@Base+0x20>
   67adc:	cmp	r4, #0
   67ae0:	beq	67b7c <luaopen_ffi@@Base+0x51a4>
   67ae4:	ldr	r2, [r4, #20]
   67ae8:	add	r3, r0, #32768	; 0x8000
   67aec:	cmp	r2, r3
   67af0:	cmpls	r3, #32768	; 0x8000
   67af4:	movcc	r0, #1
   67af8:	movcs	r0, #0
   67afc:	popcs	{r4, r5, r6, r7, r8, pc}
   67b00:	ldr	r1, [r4, #16]
   67b04:	lsl	r3, r3, #3
   67b08:	add	r4, r1, r3
   67b0c:	ldrb	r2, [r4, #5]
   67b10:	cmp	r2, #30
   67b14:	mvnne	r6, #0
   67b18:	ldrheq	r3, [r1, r3]
   67b1c:	ldrheq	r6, [r4, #2]
   67b20:	addeq	r4, r1, r3, lsl #3
   67b24:	ldr	r1, [r5, #20]
   67b28:	ldrbeq	r2, [r4, #5]
   67b2c:	cmp	r2, #29
   67b30:	beq	67b8c <luaopen_ffi@@Base+0x51b4>
   67b34:	sub	r1, r1, #16
   67b38:	mov	r2, r4
   67b3c:	mov	r0, r5
   67b40:	bl	32a84 <luaL_where@@Base+0x12980>
   67b44:	ldrb	r2, [r4, #4]
   67b48:	ldr	r3, [r5, #20]
   67b4c:	mvn	r1, #13
   67b50:	and	r2, r2, #31
   67b54:	cmn	r6, #1
   67b58:	str	r2, [r3, #-8]
   67b5c:	str	r1, [r3, #-4]
   67b60:	beq	67b84 <luaopen_ffi@@Base+0x51ac>
   67b64:	add	r2, r3, #8
   67b68:	str	r2, [r5, #20]
   67b6c:	mov	r0, #3
   67b70:	str	r6, [r3]
   67b74:	str	r1, [r3, #4]
   67b78:	pop	{r4, r5, r6, r7, r8, pc}
   67b7c:	mov	r0, r4
   67b80:	pop	{r4, r5, r6, r7, r8, pc}
   67b84:	mov	r0, #2
   67b88:	pop	{r4, r5, r6, r7, r8, pc}
   67b8c:	ldr	r3, [r5, #8]
   67b90:	ldr	r3, [r3, #228]	; 0xe4
   67b94:	cmp	r3, #0
   67b98:	bne	67b34 <luaopen_ffi@@Base+0x515c>
   67b9c:	ldr	r7, [r5, #28]
   67ba0:	mov	r0, r5
   67ba4:	sub	r7, r1, r7
   67ba8:	bl	629d8 <luaopen_ffi@@Base>
   67bac:	ldr	r1, [r5, #28]
   67bb0:	add	r1, r7, r1
   67bb4:	str	r1, [r5, #20]
   67bb8:	b	67b34 <luaopen_ffi@@Base+0x515c>
   67bbc:	push	{r4, r5, r6, r7, r8, lr}
   67bc0:	mov	r4, r0
   67bc4:	mov	r6, r1
   67bc8:	mov	r7, r2
   67bcc:	mov	r5, r3
   67bd0:	ldr	r2, [pc, #68]	; 67c1c <luaopen_ffi@@Base+0x5244>
   67bd4:	mov	r3, #4
   67bd8:	ldr	r1, [pc, #64]	; 67c20 <luaopen_ffi@@Base+0x5248>
   67bdc:	bl	620f8 <luaL_findtable@@Base>
   67be0:	mov	r1, r7
   67be4:	mov	r0, r4
   67be8:	mov	r2, #0
   67bec:	bl	5c7f0 <lua_pushcclosure@@Base>
   67bf0:	ldr	r3, [r4, #20]
   67bf4:	mov	r2, r6
   67bf8:	mov	r0, r4
   67bfc:	ldr	r3, [r3, #-8]
   67c00:	mvn	r1, #1
   67c04:	str	r5, [r3, #8]
   67c08:	bl	5e634 <lua_setfield@@Base>
   67c0c:	ldr	r3, [r4, #20]
   67c10:	sub	r3, r3, #8
   67c14:	str	r3, [r4, #20]
   67c18:	pop	{r4, r5, r6, r7, r8, pc}
   67c1c:	andeq	r3, r7, r0, lsr #11
   67c20:			; <UNDEFINED> instruction: 0xffffd8f0

00067c24 <luaopen_table@@Base>:
   67c24:	ldr	r2, [pc, #84]	; 67c80 <luaopen_table@@Base+0x5c>
   67c28:	push	{r4, lr}
   67c2c:	add	r3, r2, #3360	; 0xd20
   67c30:	mov	r4, r0
   67c34:	add	r2, r2, #3376	; 0xd30
   67c38:	add	r3, r3, #8
   67c3c:	add	r2, r2, #8
   67c40:	ldr	r1, [pc, #60]	; 67c84 <luaopen_table@@Base+0x60>
   67c44:	bl	62200 <luaL_findtable@@Base+0x108>
   67c48:	ldr	r3, [r4, #20]
   67c4c:	mov	r0, r4
   67c50:	ldr	r2, [pc, #48]	; 67c88 <luaopen_table@@Base+0x64>
   67c54:	ldr	r3, [r3, #-8]
   67c58:	ldr	r1, [pc, #44]	; 67c8c <luaopen_table@@Base+0x68>
   67c5c:	bl	67bbc <luaopen_ffi@@Base+0x51e4>
   67c60:	ldr	r3, [r4, #20]
   67c64:	mov	r0, r4
   67c68:	ldr	r2, [pc, #32]	; 67c90 <luaopen_table@@Base+0x6c>
   67c6c:	ldr	r3, [r3, #-8]
   67c70:	ldr	r1, [pc, #28]	; 67c94 <luaopen_table@@Base+0x70>
   67c74:	bl	67bbc <luaopen_ffi@@Base+0x51e4>
   67c78:	mov	r0, #1
   67c7c:	pop	{r4, pc}
   67c80:			; <UNDEFINED> instruction: 0x00070cb0
   67c84:	andeq	r3, r7, r8, lsr #13
   67c88:	andeq	ip, r5, r0, lsl sl
   67c8c:	andeq	r3, r7, ip, lsr #11
   67c90:	strdeq	ip, [r5], -r8
   67c94:			; <UNDEFINED> instruction: 0x000735b8

00067c98 <luaopen_jit@@Base>:
   67c98:	push	{r4, r5, r6, lr}
   67c9c:	mov	r4, r0
   67ca0:	bl	1e738 <_start@@Base+0xb388>
   67ca4:	ldr	r2, [r4, #8]
   67ca8:	ldr	r5, [pc, #284]	; 67dcc <luaopen_jit@@Base+0x134>
   67cac:	ldr	r3, [pc, #284]	; 67dd0 <luaopen_jit@@Base+0x138>
   67cb0:	add	ip, r2, #1888	; 0x760
   67cb4:	add	ip, ip, #4
   67cb8:	add	r6, r5, #48	; 0x30
   67cbc:	orr	r3, r0, r3
   67cc0:	str	r3, [r2, #484]	; 0x1e4
   67cc4:	mov	lr, r5
   67cc8:	add	ip, ip, #16
   67ccc:	ldm	lr!, {r0, r1, r2, r3}
   67cd0:	add	r5, r5, #16
   67cd4:	cmp	lr, r6
   67cd8:	str	r0, [ip, #-16]
   67cdc:	str	r1, [ip, #-12]
   67ce0:	str	r2, [ip, #-8]
   67ce4:	str	r3, [ip, #-4]
   67ce8:	bne	67cc4 <luaopen_jit@@Base+0x2c>
   67cec:	ldm	r5!, {r0, r1, r2}
   67cf0:	str	r1, [ip, #4]
   67cf4:	str	r2, [ip, #8]
   67cf8:	str	r0, [ip]
   67cfc:	ldr	r0, [r4, #8]
   67d00:	bl	17c5c <_start@@Base+0x48ac>
   67d04:	mov	r2, #5
   67d08:	ldr	r1, [pc, #196]	; 67dd4 <luaopen_jit@@Base+0x13c>
   67d0c:	mov	r0, r4
   67d10:	bl	5b190 <lua_pushlstring@@Base>
   67d14:	mov	r2, #3
   67d18:	ldr	r1, [pc, #184]	; 67dd8 <luaopen_jit@@Base+0x140>
   67d1c:	mov	r0, r4
   67d20:	bl	5b190 <lua_pushlstring@@Base>
   67d24:	ldr	r3, [r4, #20]
   67d28:	ldr	r1, [r4, #24]
   67d2c:	add	r2, r3, #8
   67d30:	ldr	r0, [pc, #164]	; 67ddc <luaopen_jit@@Base+0x144>
   67d34:	cmp	r2, r1
   67d38:	mvn	r1, #13
   67d3c:	strd	r0, [r3]
   67d40:	str	r2, [r4, #20]
   67d44:	bcc	67d54 <luaopen_jit@@Base+0xbc>
   67d48:	mov	r1, #1
   67d4c:	mov	r0, r4
   67d50:	bl	1fd08 <lua_getstack@@Base+0x50>
   67d54:	ldr	r5, [pc, #132]	; 67de0 <luaopen_jit@@Base+0x148>
   67d58:	mov	r0, r4
   67d5c:	mov	r2, #18
   67d60:	ldr	r1, [pc, #124]	; 67de4 <luaopen_jit@@Base+0x14c>
   67d64:	bl	5b190 <lua_pushlstring@@Base>
   67d68:	sub	r3, r5, #16
   67d6c:	add	r2, r5, #4
   67d70:	mov	r0, r4
   67d74:	ldr	r1, [pc, #108]	; 67de8 <luaopen_jit@@Base+0x150>
   67d78:	bl	62200 <luaL_findtable@@Base+0x108>
   67d7c:	ldr	r3, [r4, #36]	; 0x24
   67d80:	mov	r0, r4
   67d84:	ldr	r2, [pc, #96]	; 67dec <luaopen_jit@@Base+0x154>
   67d88:	ldr	r1, [pc, #96]	; 67df0 <luaopen_jit@@Base+0x158>
   67d8c:	bl	67bbc <luaopen_ffi@@Base+0x51e4>
   67d90:	ldr	r3, [r4, #36]	; 0x24
   67d94:	mov	r0, r4
   67d98:	ldr	r2, [pc, #84]	; 67df4 <luaopen_jit@@Base+0x15c>
   67d9c:	ldr	r1, [pc, #84]	; 67df8 <luaopen_jit@@Base+0x160>
   67da0:	bl	67bbc <luaopen_ffi@@Base+0x51e4>
   67da4:	add	r3, r5, #76	; 0x4c
   67da8:	mov	r0, r4
   67dac:	add	r2, r5, #80	; 0x50
   67db0:	ldr	r1, [pc, #68]	; 67dfc <luaopen_jit@@Base+0x164>
   67db4:	bl	62200 <luaL_findtable@@Base+0x108>
   67db8:	ldr	r3, [r4, #20]
   67dbc:	mov	r0, #1
   67dc0:	sub	r3, r3, #16
   67dc4:	str	r3, [r4, #20]
   67dc8:	pop	{r4, r5, r6, pc}
   67dcc:	andeq	r1, r7, r0, ror #23
   67dd0:	mvnseq	r0, #1
   67dd4:	andeq	r3, r7, r8, ror #10
   67dd8:	andeq	r3, r7, r0, ror r5
   67ddc:	andeq	r4, r0, r4, lsl #29
   67de0:	andeq	r1, r7, r0, lsr ip
   67de4:	andeq	r3, r7, r4, asr #11
   67de8:	andeq	lr, r6, r8, lsl r9
   67dec:	andeq	r2, r6, ip, lsr #19
   67df0:	ldrdeq	r3, [r7], -r8
   67df4:	andeq	r2, r6, r4, lsl #19
   67df8:	andeq	r3, r7, r4, ror #11
   67dfc:	andeq	lr, r6, r4, ror ip
   67e00:	push	{r4, r5, r6, lr}
   67e04:	mov	r1, #1
   67e08:	mov	r5, r0
   67e0c:	bl	36884 <luaL_typerror@@Base+0x518>
   67e10:	ldr	r3, [r5, #16]
   67e14:	ldr	r1, [r5, #20]
   67e18:	add	r2, r3, #8
   67e1c:	cmp	r1, r2
   67e20:	mov	r6, r0
   67e24:	bls	67e34 <luaopen_jit@@Base+0x19c>
   67e28:	ldr	r3, [r3, #12]
   67e2c:	cmn	r3, #1
   67e30:	bne	67eb0 <luaopen_jit@@Base+0x218>
   67e34:	mov	r3, #4
   67e38:	ldr	r2, [pc, #244]	; 67f34 <luaopen_jit@@Base+0x29c>
   67e3c:	ldr	r1, [pc, #244]	; 67f38 <luaopen_jit@@Base+0x2a0>
   67e40:	mov	r0, r5
   67e44:	bl	620f8 <luaL_findtable@@Base>
   67e48:	ldr	r3, [r5, #20]
   67e4c:	mvn	r2, #0
   67e50:	mov	r4, r2
   67e54:	add	r1, r3, #8
   67e58:	str	r1, [r5, #20]
   67e5c:	str	r2, [r3, #4]
   67e60:	mvn	r1, #1
   67e64:	mov	r0, r5
   67e68:	bl	5e2c8 <lua_next@@Base>
   67e6c:	cmp	r0, #0
   67e70:	beq	67f2c <luaopen_jit@@Base+0x294>
   67e74:	ldr	r3, [r5, #20]
   67e78:	sub	r1, r3, #8
   67e7c:	ldr	r2, [r3, #-4]
   67e80:	str	r1, [r5, #20]
   67e84:	cmn	r2, #9
   67e88:	bne	67e60 <luaopen_jit@@Base+0x1c8>
   67e8c:	ldr	r2, [r3, #-8]
   67e90:	cmp	r6, r2
   67e94:	bne	67e60 <luaopen_jit@@Base+0x1c8>
   67e98:	sub	r2, r3, #16
   67e9c:	ldr	r1, [r3, #-24]	; 0xffffffe8
   67ea0:	mov	r0, r5
   67ea4:	bl	3e288 <luaL_typerror@@Base+0x7f1c>
   67ea8:	str	r4, [r0, #4]
   67eac:	b	67e60 <luaopen_jit@@Base+0x1c8>
   67eb0:	mov	r1, #2
   67eb4:	mov	r0, r5
   67eb8:	bl	57bd8 <lua_gethookcount@@Base+0x4558>
   67ebc:	mov	r3, #4
   67ec0:	ldr	r2, [pc, #108]	; 67f34 <luaopen_jit@@Base+0x29c>
   67ec4:	ldr	r1, [pc, #108]	; 67f38 <luaopen_jit@@Base+0x2a0>
   67ec8:	mov	r4, r0
   67ecc:	mov	r0, r5
   67ed0:	bl	620f8 <luaL_findtable@@Base>
   67ed4:	cmp	r4, #0
   67ed8:	beq	67e48 <luaopen_jit@@Base+0x1b0>
   67edc:	ldrb	r3, [r4, #16]
   67ee0:	add	r2, r4, #16
   67ee4:	ldr	r4, [r4, #12]
   67ee8:	cmp	r3, #0
   67eec:	beq	67f04 <luaopen_jit@@Base+0x26c>
   67ef0:	add	r1, r3, r4, ror #26
   67ef4:	ldrb	r3, [r2, #1]!
   67ef8:	eor	r4, r4, r1
   67efc:	cmp	r3, #0
   67f00:	bne	67ef0 <luaopen_jit@@Base+0x258>
   67f04:	mov	r1, #1
   67f08:	mov	r0, r5
   67f0c:	bl	5a100 <lua_pushvalue@@Base>
   67f10:	lsl	r2, r4, #3
   67f14:	mvn	r1, #1
   67f18:	mov	r0, r5
   67f1c:	bl	5f808 <lua_rawseti@@Base>
   67f20:	ldr	r3, [r5, #8]
   67f24:	mvn	r2, #0
   67f28:	strb	r2, [r3, #115]	; 0x73
   67f2c:	mov	r0, #0
   67f30:	pop	{r4, r5, r6, pc}
   67f34:	andeq	r2, r7, ip, lsr #30
   67f38:			; <UNDEFINED> instruction: 0xffffd8f0

00067f3c <luaL_pushmodule@@Base>:
   67f3c:	push	{r4, r5, r6, lr}
   67f40:	mov	r3, #16
   67f44:	mov	r4, r0
   67f48:	mov	r5, r1
   67f4c:	mov	r6, r2
   67f50:	ldr	r1, [pc, #140]	; 67fe4 <luaL_pushmodule@@Base+0xa8>
   67f54:	ldr	r2, [pc, #140]	; 67fe8 <luaL_pushmodule@@Base+0xac>
   67f58:	bl	620f8 <luaL_findtable@@Base>
   67f5c:	mov	r2, r5
   67f60:	mov	r0, r4
   67f64:	mvn	r1, #0
   67f68:	bl	5db0c <lua_getfield@@Base>
   67f6c:	mov	r0, r4
   67f70:	mvn	r1, #0
   67f74:	bl	5a214 <lua_type@@Base>
   67f78:	cmp	r0, #5
   67f7c:	beq	67fc4 <luaL_pushmodule@@Base+0x88>
   67f80:	ldr	r2, [r4, #20]
   67f84:	mov	r3, r6
   67f88:	sub	r2, r2, #8
   67f8c:	str	r2, [r4, #20]
   67f90:	ldr	r1, [pc, #84]	; 67fec <luaL_pushmodule@@Base+0xb0>
   67f94:	mov	r2, r5
   67f98:	mov	r0, r4
   67f9c:	bl	620f8 <luaL_findtable@@Base>
   67fa0:	cmp	r0, #0
   67fa4:	bne	67fd4 <luaL_pushmodule@@Base+0x98>
   67fa8:	mvn	r1, #0
   67fac:	mov	r0, r4
   67fb0:	bl	5a100 <lua_pushvalue@@Base>
   67fb4:	mov	r2, r5
   67fb8:	mvn	r1, #2
   67fbc:	mov	r0, r4
   67fc0:	bl	5e634 <lua_setfield@@Base>
   67fc4:	mov	r0, r4
   67fc8:	mvn	r1, #1
   67fcc:	pop	{r4, r5, r6, lr}
   67fd0:	b	59fb4 <lua_remove@@Base>
   67fd4:	mov	r2, r5
   67fd8:	mov	r0, r4
   67fdc:	ldr	r1, [pc, #12]	; 67ff0 <luaL_pushmodule@@Base+0xb4>
   67fe0:	bl	4a618 <luaL_error@@Base+0x452c>
   67fe4:			; <UNDEFINED> instruction: 0xffffd8f0
   67fe8:	andeq	lr, r6, r0, lsl r9
   67fec:			; <UNDEFINED> instruction: 0xffffd8ee
   67ff0:	andeq	r0, r0, r1, lsr #15
   67ff4:	push	{r4, r5, r6, r7, lr}
   67ff8:	mov	r2, #0
   67ffc:	sub	sp, sp, #108	; 0x6c
   68000:	mov	r1, #1
   68004:	mov	r4, r0
   68008:	bl	5ad0c <luaL_checklstring@@Base>
   6800c:	ldr	r3, [r4, #16]
   68010:	ldr	r5, [r4, #20]
   68014:	mov	r2, #1
   68018:	sub	r5, r5, r3
   6801c:	asr	r6, r5, #3
   68020:	mov	r1, r0
   68024:	mov	r7, r0
   68028:	mov	r0, r4
   6802c:	bl	67f3c <luaL_pushmodule@@Base>
   68030:	mov	r0, r4
   68034:	ldr	r2, [pc, #376]	; 681b4 <luaL_pushmodule@@Base+0x278>
   68038:	mvn	r1, #0
   6803c:	bl	5db0c <lua_getfield@@Base>
   68040:	mov	r0, r4
   68044:	mvn	r1, #0
   68048:	bl	5a214 <lua_type@@Base>
   6804c:	ldr	r3, [r4, #20]
   68050:	cmp	r0, #0
   68054:	subne	r3, r3, #8
   68058:	strne	r3, [r4, #20]
   6805c:	bne	680d4 <luaL_pushmodule@@Base+0x198>
   68060:	sub	r3, r3, #8
   68064:	str	r3, [r4, #20]
   68068:	mvn	r1, #0
   6806c:	mov	r0, r4
   68070:	bl	5a100 <lua_pushvalue@@Base>
   68074:	ldr	r2, [pc, #316]	; 681b8 <luaL_pushmodule@@Base+0x27c>
   68078:	mvn	r1, #1
   6807c:	mov	r0, r4
   68080:	bl	5e634 <lua_setfield@@Base>
   68084:	mov	r1, r7
   68088:	mov	r0, r4
   6808c:	bl	5b7a0 <lua_pushstring@@Base>
   68090:	ldr	r2, [pc, #284]	; 681b4 <luaL_pushmodule@@Base+0x278>
   68094:	mvn	r1, #1
   68098:	mov	r0, r4
   6809c:	bl	5e634 <lua_setfield@@Base>
   680a0:	mov	r1, #46	; 0x2e
   680a4:	mov	r0, r7
   680a8:	bl	12fa0 <strrchr@plt>
   680ac:	mov	r1, r7
   680b0:	subs	r2, r0, #0
   680b4:	addne	r2, r2, #1
   680b8:	subne	r2, r2, r7
   680bc:	mov	r0, r4
   680c0:	bl	5b190 <lua_pushlstring@@Base>
   680c4:	ldr	r2, [pc, #240]	; 681bc <luaL_pushmodule@@Base+0x280>
   680c8:	mvn	r1, #1
   680cc:	mov	r0, r4
   680d0:	bl	5e634 <lua_setfield@@Base>
   680d4:	mvn	r1, #0
   680d8:	mov	r0, r4
   680dc:	bl	5a100 <lua_pushvalue@@Base>
   680e0:	add	r2, sp, #4
   680e4:	mov	r1, #1
   680e8:	mov	r0, r4
   680ec:	bl	1fcb8 <lua_getstack@@Base>
   680f0:	cmp	r0, #0
   680f4:	beq	681a8 <luaL_pushmodule@@Base+0x26c>
   680f8:	add	r2, sp, #4
   680fc:	mov	r3, #0
   68100:	ldr	r1, [pc, #184]	; 681c0 <luaL_pushmodule@@Base+0x284>
   68104:	mov	r0, r4
   68108:	bl	52304 <lua_getlocal@@Base+0xbc>
   6810c:	cmp	r0, #0
   68110:	beq	681a8 <luaL_pushmodule@@Base+0x26c>
   68114:	ldr	r3, [r4, #20]
   68118:	ldr	r2, [r3, #-4]
   6811c:	cmn	r2, #9
   68120:	bne	68134 <luaL_pushmodule@@Base+0x1f8>
   68124:	ldr	r3, [r3, #-8]
   68128:	ldrb	r3, [r3, #6]
   6812c:	cmp	r3, #0
   68130:	bne	681a8 <luaL_pushmodule@@Base+0x26c>
   68134:	mvn	r1, #1
   68138:	mov	r0, r4
   6813c:	bl	5a100 <lua_pushvalue@@Base>
   68140:	mvn	r1, #1
   68144:	mov	r0, r4
   68148:	bl	5ff84 <lua_setfenv@@Base>
   6814c:	ldr	r3, [r4, #20]
   68150:	cmp	r5, #8
   68154:	sub	r3, r3, #8
   68158:	str	r3, [r4, #20]
   6815c:	movgt	r5, #2
   68160:	ble	6819c <luaL_pushmodule@@Base+0x260>
   68164:	mov	r1, r5
   68168:	mov	r0, r4
   6816c:	bl	5a100 <lua_pushvalue@@Base>
   68170:	mvn	r1, #1
   68174:	mov	r0, r4
   68178:	bl	5a100 <lua_pushvalue@@Base>
   6817c:	ldr	r1, [r4, #20]
   68180:	add	r5, r5, #1
   68184:	sub	r1, r1, #8
   68188:	mov	r2, #1
   6818c:	mov	r0, r4
   68190:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   68194:	cmp	r6, r5
   68198:	bge	68164 <luaL_pushmodule@@Base+0x228>
   6819c:	mov	r0, #0
   681a0:	add	sp, sp, #108	; 0x6c
   681a4:	pop	{r4, r5, r6, r7, pc}
   681a8:	mov	r0, r4
   681ac:	ldr	r1, [pc, #16]	; 681c4 <luaL_pushmodule@@Base+0x288>
   681b0:	bl	460ec <luaL_error@@Base>
   681b4:	strdeq	r3, [r7], -r0
   681b8:	strdeq	r3, [r7], -r8
   681bc:	strdeq	r3, [r7], -ip
   681c0:	andeq	r3, r7, r8, lsl #12
   681c4:	andeq	r3, r7, ip, lsl #12

000681c8 <luaL_setfuncs@@Base>:
   681c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   681cc:	mov	r8, r1
   681d0:	mov	r5, r2
   681d4:	mov	r1, r2
   681d8:	ldr	r2, [pc, #128]	; 68260 <luaL_setfuncs@@Base+0x98>
   681dc:	mov	r6, r0
   681e0:	bl	59e60 <luaL_checkstack@@Base>
   681e4:	ldr	r3, [r8]
   681e8:	cmp	r3, #0
   681ec:	beq	68250 <luaL_setfuncs@@Base+0x88>
   681f0:	mvn	r9, #1
   681f4:	add	r8, r8, #8
   681f8:	sub	r9, r9, r5
   681fc:	rsb	r7, r5, #0
   68200:	cmp	r5, #0
   68204:	movgt	r4, #0
   68208:	ble	68224 <luaL_setfuncs@@Base+0x5c>
   6820c:	add	r4, r4, #1
   68210:	mov	r1, r7
   68214:	mov	r0, r6
   68218:	bl	5a100 <lua_pushvalue@@Base>
   6821c:	cmp	r5, r4
   68220:	bne	6820c <luaL_setfuncs@@Base+0x44>
   68224:	ldr	r1, [r8, #-4]
   68228:	mov	r2, r5
   6822c:	mov	r0, r6
   68230:	bl	5c7f0 <lua_pushcclosure@@Base>
   68234:	ldr	r2, [r8, #-8]
   68238:	mov	r1, r9
   6823c:	mov	r0, r6
   68240:	bl	5e634 <lua_setfield@@Base>
   68244:	ldr	r3, [r8], #8
   68248:	cmp	r3, #0
   6824c:	bne	68200 <luaL_setfuncs@@Base+0x38>
   68250:	mvn	r1, r5
   68254:	mov	r0, r6
   68258:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   6825c:	b	59f30 <lua_settop@@Base>
   68260:	andeq	r3, r7, r4, lsr r6

00068264 <luaL_openlib@@Base>:
   68264:	cmp	r1, #0
   68268:	push	{r4, r5, r6, lr}
   6826c:	mov	r5, r0
   68270:	mov	r4, r2
   68274:	mov	r6, r3
   68278:	beq	682c8 <luaL_openlib@@Base+0x64>
   6827c:	cmp	r2, #0
   68280:	beq	682b4 <luaL_openlib@@Base+0x50>
   68284:	ldr	r2, [r2]
   68288:	cmp	r2, #0
   6828c:	beq	682b4 <luaL_openlib@@Base+0x50>
   68290:	mov	r0, r4
   68294:	mov	r2, #0
   68298:	b	682a8 <luaL_openlib@@Base+0x44>
   6829c:	ldr	ip, [r4, r2, lsl #3]
   682a0:	cmp	ip, #0
   682a4:	beq	682b4 <luaL_openlib@@Base+0x50>
   682a8:	adds	r0, r0, #8
   682ac:	add	r2, r2, #1
   682b0:	bne	6829c <luaL_openlib@@Base+0x38>
   682b4:	mov	r0, r5
   682b8:	bl	67f3c <luaL_pushmodule@@Base>
   682bc:	mvn	r1, r6
   682c0:	mov	r0, r5
   682c4:	bl	5a01c <lua_insert@@Base>
   682c8:	cmp	r4, #0
   682cc:	beq	682e4 <luaL_openlib@@Base+0x80>
   682d0:	mov	r2, r6
   682d4:	mov	r1, r4
   682d8:	mov	r0, r5
   682dc:	pop	{r4, r5, r6, lr}
   682e0:	b	681c8 <luaL_setfuncs@@Base>
   682e4:	mvn	r1, r6
   682e8:	mov	r0, r5
   682ec:	pop	{r4, r5, r6, lr}
   682f0:	b	59f30 <lua_settop@@Base>

000682f4 <luaL_register@@Base>:
   682f4:	mov	r3, #0
   682f8:	b	68264 <luaL_openlib@@Base>

000682fc <luaL_prepbuffer@@Base>:
   682fc:	push	{r4, lr}
   68300:	mov	r4, r0
   68304:	bl	5b204 <lua_pushlstring@@Base+0x74>
   68308:	cmp	r0, #0
   6830c:	beq	68328 <luaL_prepbuffer@@Base+0x2c>
   68310:	ldr	r3, [r4, #4]
   68314:	cmp	r3, #1
   68318:	ble	68328 <luaL_prepbuffer@@Base+0x2c>
   6831c:	add	r1, r4, #8
   68320:	add	r0, r4, #4
   68324:	bl	5d84c <luaL_traceback@@Base+0x308>
   68328:	add	r0, r4, #12
   6832c:	pop	{r4, pc}

00068330 <luaL_addlstring@@Base>:
   68330:	cmp	r2, #0
   68334:	bxeq	lr
   68338:	push	{r4, r5, r6, r7, r8, lr}
   6833c:	add	r7, r0, #8192	; 0x2000
   68340:	mov	r5, r0
   68344:	mov	r4, r1
   68348:	add	r6, r1, r2
   6834c:	add	r7, r7, #12
   68350:	b	6836c <luaL_addlstring@@Base+0x3c>
   68354:	add	r1, r3, #1
   68358:	str	r1, [r5]
   6835c:	ldrb	r1, [r4], #1
   68360:	cmp	r4, r6
   68364:	strb	r1, [r3]
   68368:	popeq	{r4, r5, r6, r7, r8, pc}
   6836c:	ldr	r3, [r5]
   68370:	cmp	r3, r7
   68374:	bcc	68354 <luaL_addlstring@@Base+0x24>
   68378:	mov	r0, r5
   6837c:	bl	682fc <luaL_prepbuffer@@Base>
   68380:	ldr	r3, [r5]
   68384:	b	68354 <luaL_addlstring@@Base+0x24>

00068388 <luaL_addstring@@Base>:
   68388:	push	{r4, r5, r6, lr}
   6838c:	mov	r5, r0
   68390:	mov	r0, r1
   68394:	mov	r4, r1
   68398:	bl	12e80 <strlen@plt>
   6839c:	mov	r1, r4
   683a0:	mov	r2, r0
   683a4:	mov	r0, r5
   683a8:	pop	{r4, r5, r6, lr}
   683ac:	b	68330 <luaL_addlstring@@Base>

000683b0 <luaL_pushresult@@Base>:
   683b0:	push	{r4, lr}
   683b4:	mov	r4, r0
   683b8:	bl	5b204 <lua_pushlstring@@Base+0x74>
   683bc:	ldr	r1, [r4, #4]
   683c0:	ldr	r0, [r4, #8]
   683c4:	bl	5d4f8 <lua_concat@@Base>
   683c8:	mov	r3, #1
   683cc:	str	r3, [r4, #4]
   683d0:	pop	{r4, pc}

000683d4 <luaL_gsub@@Base>:
   683d4:	push	{r4, r5, r6, r7, r8, r9, lr}
   683d8:	sub	sp, sp, #8192	; 0x2000
   683dc:	sub	sp, sp, #20
   683e0:	mov	r9, r0
   683e4:	mov	r0, r2
   683e8:	mov	r6, r3
   683ec:	mov	r7, r2
   683f0:	mov	r4, r1
   683f4:	bl	12e80 <strlen@plt>
   683f8:	add	r3, sp, #16
   683fc:	mov	r2, #0
   68400:	str	r9, [sp, #12]
   68404:	str	r3, [r3, #-12]
   68408:	str	r2, [r3, #-8]
   6840c:	mov	r8, r0
   68410:	b	68434 <luaL_gsub@@Base+0x60>
   68414:	bl	68330 <luaL_addlstring@@Base>
   68418:	mov	r0, r6
   6841c:	bl	12e80 <strlen@plt>
   68420:	mov	r1, r6
   68424:	add	r4, r5, r8
   68428:	mov	r2, r0
   6842c:	add	r0, sp, #4
   68430:	bl	68330 <luaL_addlstring@@Base>
   68434:	mov	r1, r7
   68438:	mov	r0, r4
   6843c:	bl	12c28 <strstr@plt>
   68440:	mov	r1, r4
   68444:	subs	r5, r0, #0
   68448:	sub	r2, r5, r4
   6844c:	add	r0, sp, #4
   68450:	bne	68414 <luaL_gsub@@Base+0x40>
   68454:	mov	r0, r4
   68458:	bl	12e80 <strlen@plt>
   6845c:	mov	r1, r4
   68460:	mov	r2, r0
   68464:	add	r0, sp, #4
   68468:	bl	68330 <luaL_addlstring@@Base>
   6846c:	add	r0, sp, #4
   68470:	bl	683b0 <luaL_pushresult@@Base>
   68474:	mov	r2, r5
   68478:	mov	r0, r9
   6847c:	mvn	r1, #0
   68480:	bl	5ab5c <lua_tolstring@@Base>
   68484:	add	sp, sp, #8192	; 0x2000
   68488:	add	sp, sp, #20
   6848c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   68490:	push	{r4, r5, r6, lr}
   68494:	mov	r5, r1
   68498:	mov	r4, r0
   6849c:	mov	r1, #45	; 0x2d
   684a0:	mov	r0, r5
   684a4:	mov	r6, r2
   684a8:	bl	12e8c <strchr@plt>
   684ac:	ldr	r3, [pc, #60]	; 684f0 <luaL_gsub@@Base+0x11c>
   684b0:	ldr	r2, [pc, #60]	; 684f4 <luaL_gsub@@Base+0x120>
   684b4:	cmp	r0, #0
   684b8:	addne	r5, r0, #1
   684bc:	mov	r1, r5
   684c0:	mov	r0, r4
   684c4:	bl	683d4 <luaL_gsub@@Base>
   684c8:	mov	r1, r6
   684cc:	mov	r2, r0
   684d0:	mov	r0, r4
   684d4:	bl	5bc58 <lua_pushfstring@@Base>
   684d8:	mvn	r1, #1
   684dc:	mov	r5, r0
   684e0:	mov	r0, r4
   684e4:	bl	59fb4 <lua_remove@@Base>
   684e8:	mov	r0, r5
   684ec:	pop	{r4, r5, r6, pc}
   684f0:	andeq	r3, r7, r8, asr #12
   684f4:	andeq	r3, r7, r0, lsl #4
   684f8:	push	{r4, r5, r6, r7, r8, r9, lr}
   684fc:	mov	r4, r0
   68500:	sub	sp, sp, #20
   68504:	mov	r7, r1
   68508:	mov	r6, r2
   6850c:	mov	r2, r1
   68510:	ldr	r1, [pc, #584]	; 68760 <luaL_gsub@@Base+0x38c>
   68514:	mov	r8, r3
   68518:	bl	5bc58 <lua_pushfstring@@Base>
   6851c:	mov	r0, r4
   68520:	ldr	r1, [pc, #572]	; 68764 <luaL_gsub@@Base+0x390>
   68524:	bl	5d8cc <lua_gettable@@Base>
   68528:	mov	r0, r4
   6852c:	mvn	r1, #0
   68530:	bl	5a214 <lua_type@@Base>
   68534:	ldr	r3, [r4, #20]
   68538:	subs	r9, r0, #0
   6853c:	beq	685c8 <luaL_gsub@@Base+0x1f4>
   68540:	ldr	r2, [r3, #-4]
   68544:	cmn	r2, #13
   68548:	beq	68680 <luaL_gsub@@Base+0x2ac>
   6854c:	cmn	r2, #4
   68550:	bne	68674 <luaL_gsub@@Base+0x2a0>
   68554:	ldr	r5, [r3, #-8]
   68558:	ldrb	r3, [r6]
   6855c:	ldr	r2, [r5]
   68560:	cmp	r2, #0
   68564:	bne	68638 <luaL_gsub@@Base+0x264>
   68568:	cmp	r3, #42	; 0x2a
   6856c:	ldr	r1, [pc, #500]	; 68768 <luaL_gsub@@Base+0x394>
   68570:	mov	r0, r7
   68574:	movne	r1, #2
   68578:	bl	12d84 <dlopen@plt>
   6857c:	subs	r7, r0, #0
   68580:	beq	68744 <luaL_gsub@@Base+0x370>
   68584:	str	r7, [r5]
   68588:	ldrb	r3, [r6]
   6858c:	cmp	r3, #42	; 0x2a
   68590:	beq	68640 <luaL_gsub@@Base+0x26c>
   68594:	cmp	r8, #0
   68598:	beq	6868c <luaL_gsub@@Base+0x2b8>
   6859c:	mov	r1, r6
   685a0:	ldr	r0, [r5]
   685a4:	bl	1306c <dlsym@plt>
   685a8:	subs	r1, r0, #0
   685ac:	beq	68728 <luaL_gsub@@Base+0x354>
   685b0:	mov	r0, r4
   685b4:	mov	r2, #0
   685b8:	bl	5c7f0 <lua_pushcclosure@@Base>
   685bc:	mov	r0, #0
   685c0:	add	sp, sp, #20
   685c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   685c8:	sub	r3, r3, #8
   685cc:	str	r3, [r4, #20]
   685d0:	mov	r1, #4
   685d4:	mov	r0, r4
   685d8:	bl	5d0f8 <lua_newuserdata@@Base>
   685dc:	ldr	r2, [pc, #392]	; 6876c <luaL_gsub@@Base+0x398>
   685e0:	ldr	r1, [pc, #380]	; 68764 <luaL_gsub@@Base+0x390>
   685e4:	str	r9, [r0]
   685e8:	mov	r5, r0
   685ec:	mov	r0, r4
   685f0:	bl	5db0c <lua_getfield@@Base>
   685f4:	mvn	r1, #1
   685f8:	mov	r0, r4
   685fc:	bl	5fc18 <lua_setmetatable@@Base>
   68600:	mov	r2, r7
   68604:	ldr	r1, [pc, #340]	; 68760 <luaL_gsub@@Base+0x38c>
   68608:	mov	r0, r4
   6860c:	bl	5bc58 <lua_pushfstring@@Base>
   68610:	mvn	r1, #1
   68614:	mov	r0, r4
   68618:	bl	5a100 <lua_pushvalue@@Base>
   6861c:	ldr	r1, [pc, #320]	; 68764 <luaL_gsub@@Base+0x390>
   68620:	mov	r0, r4
   68624:	bl	5e5c4 <lua_settable@@Base>
   68628:	ldr	r2, [r5]
   6862c:	ldrb	r3, [r6]
   68630:	cmp	r2, #0
   68634:	beq	68568 <luaL_gsub@@Base+0x194>
   68638:	cmp	r3, #42	; 0x2a
   6863c:	bne	68594 <luaL_gsub@@Base+0x1c0>
   68640:	ldr	r2, [r4, #20]
   68644:	ldr	r0, [r4, #24]
   68648:	add	r3, r2, #8
   6864c:	mvn	r1, #2
   68650:	cmp	r3, r0
   68654:	str	r1, [r2, #4]
   68658:	str	r3, [r4, #20]
   6865c:	bcc	685bc <luaL_gsub@@Base+0x1e8>
   68660:	mov	r0, r4
   68664:	mov	r1, #1
   68668:	bl	1fd08 <lua_getstack@@Base+0x50>
   6866c:	mov	r0, #0
   68670:	b	685c0 <luaL_gsub@@Base+0x1ec>
   68674:	mov	r3, #0
   68678:	ldr	r3, [r3]
   6867c:	udf	#0
   68680:	ldr	r5, [r3, #-8]
   68684:	add	r5, r5, #24
   68688:	b	68628 <luaL_gsub@@Base+0x254>
   6868c:	ldr	r2, [pc, #220]	; 68770 <luaL_gsub@@Base+0x39c>
   68690:	mov	r1, r6
   68694:	mov	r0, r4
   68698:	bl	68490 <luaL_gsub@@Base+0xbc>
   6869c:	mov	r1, r0
   686a0:	ldr	r0, [r5]
   686a4:	bl	1306c <dlsym@plt>
   686a8:	subs	r1, r0, #0
   686ac:	bne	685b0 <luaL_gsub@@Base+0x1dc>
   686b0:	bl	12d30 <dlerror@plt>
   686b4:	mov	r1, r0
   686b8:	mov	r0, r4
   686bc:	bl	5b7a0 <lua_pushstring@@Base>
   686c0:	ldr	r2, [pc, #172]	; 68774 <luaL_gsub@@Base+0x3a0>
   686c4:	mov	r1, r6
   686c8:	mov	r0, r4
   686cc:	ldr	r5, [r5]
   686d0:	bl	68490 <luaL_gsub@@Base+0xbc>
   686d4:	mov	r1, r0
   686d8:	mov	r0, r5
   686dc:	bl	1306c <dlsym@plt>
   686e0:	ldr	r3, [r4, #20]
   686e4:	sub	r3, r3, #8
   686e8:	str	r3, [r4, #20]
   686ec:	subs	ip, r0, #0
   686f0:	beq	68738 <luaL_gsub@@Base+0x364>
   686f4:	ldr	lr, [pc, #124]	; 68778 <luaL_gsub@@Base+0x3a4>
   686f8:	str	r8, [sp]
   686fc:	mov	r3, r6
   68700:	mov	r0, r4
   68704:	add	r2, sp, #8
   68708:	ldr	r1, [pc, #108]	; 6877c <luaL_gsub@@Base+0x3a8>
   6870c:	str	ip, [sp, #8]
   68710:	str	lr, [sp, #12]
   68714:	bl	60d24 <lua_loadx@@Base>
   68718:	cmp	r0, #0
   6871c:	movne	r0, #3
   68720:	beq	685bc <luaL_gsub@@Base+0x1e8>
   68724:	b	685c0 <luaL_gsub@@Base+0x1ec>
   68728:	bl	12d30 <dlerror@plt>
   6872c:	mov	r1, r0
   68730:	mov	r0, r4
   68734:	bl	5b7a0 <lua_pushstring@@Base>
   68738:	mov	r0, #2
   6873c:	add	sp, sp, #20
   68740:	pop	{r4, r5, r6, r7, r8, r9, pc}
   68744:	bl	12d30 <dlerror@plt>
   68748:	mov	r1, r0
   6874c:	mov	r0, r4
   68750:	bl	5b7a0 <lua_pushstring@@Base>
   68754:	str	r7, [r5]
   68758:	mov	r0, #1
   6875c:	b	685c0 <luaL_gsub@@Base+0x1ec>
   68760:	andeq	r3, r7, ip, asr #12
   68764:			; <UNDEFINED> instruction: 0xffffd8f0
   68768:	andeq	r0, r0, r2, lsl #2
   6876c:	andeq	r3, r7, r8, lsr #5
   68770:	andeq	r3, r7, r8, asr r6
   68774:	andeq	r3, r7, r4, ror #12
   68778:	svcvc	0x00ffff00
   6877c:	andeq	r5, r1, ip, lsr #7
   68780:	push	{r4, r5, r6, lr}
   68784:	mov	r2, #0
   68788:	mov	r1, #1
   6878c:	mov	r4, r0
   68790:	bl	5ad0c <luaL_checklstring@@Base>
   68794:	mov	r2, #0
   68798:	mov	r1, #2
   6879c:	mov	r5, r0
   687a0:	mov	r0, r4
   687a4:	bl	5ad0c <luaL_checklstring@@Base>
   687a8:	mov	r1, r5
   687ac:	mov	r3, #1
   687b0:	mov	r2, r0
   687b4:	mov	r0, r4
   687b8:	bl	684f8 <luaL_gsub@@Base+0x124>
   687bc:	subs	r5, r0, #0
   687c0:	bne	687cc <luaL_gsub@@Base+0x3f8>
   687c4:	mov	r0, #1
   687c8:	pop	{r4, r5, r6, pc}
   687cc:	ldr	r2, [r4, #20]
   687d0:	ldr	r0, [r4, #24]
   687d4:	add	r3, r2, #8
   687d8:	mvn	r1, #0
   687dc:	cmp	r3, r0
   687e0:	str	r1, [r2, #4]
   687e4:	str	r3, [r4, #20]
   687e8:	bcs	68818 <luaL_gsub@@Base+0x444>
   687ec:	mov	r0, r4
   687f0:	mvn	r1, #1
   687f4:	bl	5a01c <lua_insert@@Base>
   687f8:	ldr	r3, [pc, #40]	; 68828 <luaL_gsub@@Base+0x454>
   687fc:	cmp	r5, #1
   68800:	ldr	r1, [pc, #36]	; 6882c <luaL_gsub@@Base+0x458>
   68804:	mov	r0, r4
   68808:	movne	r1, r3
   6880c:	bl	5b7a0 <lua_pushstring@@Base>
   68810:	mov	r0, #3
   68814:	pop	{r4, r5, r6, pc}
   68818:	mov	r1, #1
   6881c:	mov	r0, r4
   68820:	bl	1fd08 <lua_getstack@@Base+0x50>
   68824:	b	687ec <luaL_gsub@@Base+0x418>
   68828:	andeq	r3, r7, ip, ror r6
   6882c:	andeq	r3, r7, r4, ror r6
   68830:	push	{r4, r5, r6, lr}
   68834:	mov	r2, #0
   68838:	sub	sp, sp, #16
   6883c:	mov	r1, #1
   68840:	mov	r4, r0
   68844:	bl	5ad0c <luaL_checklstring@@Base>
   68848:	ldr	r2, [pc, #200]	; 68918 <luaL_gsub@@Base+0x544>
   6884c:	ldr	r1, [pc, #200]	; 6891c <luaL_gsub@@Base+0x548>
   68850:	mov	r5, r0
   68854:	mov	r0, r4
   68858:	bl	5db0c <lua_getfield@@Base>
   6885c:	mov	r0, r4
   68860:	mvn	r1, #0
   68864:	bl	5a214 <lua_type@@Base>
   68868:	cmp	r0, #5
   6886c:	bne	6890c <luaL_gsub@@Base+0x538>
   68870:	mov	r2, r5
   68874:	mvn	r1, #0
   68878:	mov	r0, r4
   6887c:	bl	5db0c <lua_getfield@@Base>
   68880:	mvn	r1, #0
   68884:	mov	r0, r4
   68888:	bl	5a214 <lua_type@@Base>
   6888c:	subs	r6, r0, #0
   68890:	beq	688a0 <luaL_gsub@@Base+0x4cc>
   68894:	mov	r0, #1
   68898:	add	sp, sp, #16
   6889c:	pop	{r4, r5, r6, pc}
   688a0:	ldr	r2, [pc, #120]	; 68920 <luaL_gsub@@Base+0x54c>
   688a4:	mov	r1, r5
   688a8:	mov	r0, r4
   688ac:	bl	68490 <luaL_gsub@@Base+0xbc>
   688b0:	mov	r1, r0
   688b4:	mov	r0, r6
   688b8:	bl	1306c <dlsym@plt>
   688bc:	cmp	r0, #0
   688c0:	beq	688f0 <luaL_gsub@@Base+0x51c>
   688c4:	ldr	ip, [pc, #88]	; 68924 <luaL_gsub@@Base+0x550>
   688c8:	str	r0, [sp, #8]
   688cc:	str	r6, [sp]
   688d0:	mov	r3, r5
   688d4:	add	r2, sp, #8
   688d8:	ldr	r1, [pc, #72]	; 68928 <luaL_gsub@@Base+0x554>
   688dc:	mov	r0, r4
   688e0:	str	ip, [sp, #12]
   688e4:	bl	60d24 <lua_loadx@@Base>
   688e8:	cmp	r0, #0
   688ec:	beq	68894 <luaL_gsub@@Base+0x4c0>
   688f0:	mov	r2, r5
   688f4:	mov	r0, r4
   688f8:	ldr	r1, [pc, #44]	; 6892c <luaL_gsub@@Base+0x558>
   688fc:	bl	5bc58 <lua_pushfstring@@Base>
   68900:	mov	r0, #1
   68904:	add	sp, sp, #16
   68908:	pop	{r4, r5, r6, pc}
   6890c:	mov	r0, r4
   68910:	ldr	r1, [pc, #24]	; 68930 <luaL_gsub@@Base+0x55c>
   68914:	bl	460ec <luaL_error@@Base>
   68918:	andeq	r3, r7, r4, lsl #13
   6891c:			; <UNDEFINED> instruction: 0xffffd8ef
   68920:	andeq	r3, r7, r4, ror #12
   68924:	svcvc	0x00ffff00
   68928:	andeq	r5, r1, ip, lsr #7
   6892c:			; <UNDEFINED> instruction: 0x000736b0
   68930:	andeq	r3, r7, ip, lsl #13
   68934:	push	{r4, r5, r6, r7, r8, lr}
   68938:	mov	r4, r0
   6893c:	mov	r0, r2
   68940:	ldr	r5, [sp, #24]
   68944:	mov	r6, r1
   68948:	mov	r7, r3
   6894c:	bl	12db4 <getenv@plt>
   68950:	cmp	r0, #0
   68954:	andne	r5, r5, #1
   68958:	moveq	r5, #1
   6895c:	cmp	r5, #0
   68960:	bne	689ac <luaL_gsub@@Base+0x5d8>
   68964:	mov	r1, r0
   68968:	ldr	r3, [pc, #76]	; 689bc <luaL_gsub@@Base+0x5e8>
   6896c:	ldr	r2, [pc, #76]	; 689c0 <luaL_gsub@@Base+0x5ec>
   68970:	mov	r0, r4
   68974:	bl	683d4 <luaL_gsub@@Base>
   68978:	mov	r3, r7
   6897c:	ldr	r2, [pc, #64]	; 689c4 <luaL_gsub@@Base+0x5f0>
   68980:	mov	r1, r0
   68984:	mov	r0, r4
   68988:	bl	683d4 <luaL_gsub@@Base>
   6898c:	mvn	r1, #1
   68990:	mov	r0, r4
   68994:	bl	59fb4 <lua_remove@@Base>
   68998:	mov	r2, r6
   6899c:	mov	r0, r4
   689a0:	mvn	r1, #1
   689a4:	pop	{r4, r5, r6, r7, r8, lr}
   689a8:	b	5e634 <lua_setfield@@Base>
   689ac:	mov	r1, r7
   689b0:	mov	r0, r4
   689b4:	bl	5b7a0 <lua_pushstring@@Base>
   689b8:	b	68998 <luaL_gsub@@Base+0x5c4>
   689bc:	ldrdeq	r3, [r7], -r4
   689c0:	ldrdeq	r3, [r7], -r8
   689c4:	ldrdeq	r3, [r7], -ip

000689c8 <luaopen_package@@Base>:
   689c8:	push	{r4, r5, r6, r7, r8, lr}
   689cc:	mov	r4, r0
   689d0:	sub	sp, sp, #8
   689d4:	ldr	r1, [pc, #468]	; 68bb0 <luaopen_package@@Base+0x1e8>
   689d8:	bl	5ce68 <luaL_newmetatable@@Base>
   689dc:	mov	r0, r4
   689e0:	mov	r2, #0
   689e4:	ldr	r1, [pc, #456]	; 68bb4 <luaopen_package@@Base+0x1ec>
   689e8:	bl	5c7f0 <lua_pushcclosure@@Base>
   689ec:	ldr	r2, [r4, #20]
   689f0:	ldr	r3, [r4, #8]
   689f4:	mov	r5, #1
   689f8:	ldr	r2, [r2, #-8]
   689fc:	add	r3, r3, #212	; 0xd4
   68a00:	mov	r0, r4
   68a04:	str	r3, [r2, #16]
   68a08:	strb	r5, [r2, #6]
   68a0c:	mvn	r1, #1
   68a10:	ldr	r2, [pc, #416]	; 68bb8 <luaopen_package@@Base+0x1f0>
   68a14:	bl	5e634 <lua_setfield@@Base>
   68a18:	mov	r3, #0
   68a1c:	mov	r0, r4
   68a20:	ldr	r2, [pc, #404]	; 68bbc <luaopen_package@@Base+0x1f4>
   68a24:	ldr	r1, [pc, #404]	; 68bc0 <luaopen_package@@Base+0x1f8>
   68a28:	bl	68264 <luaL_openlib@@Base>
   68a2c:	ldr	r1, [r4, #20]
   68a30:	mov	r0, r4
   68a34:	sub	r1, r1, #8
   68a38:	ldr	r2, [pc, #388]	; 68bc4 <luaopen_package@@Base+0x1fc>
   68a3c:	bl	456b4 <luaL_typerror@@Base+0xf348>
   68a40:	mov	r1, #4
   68a44:	mov	r0, r4
   68a48:	mov	r2, #0
   68a4c:	bl	5cae4 <lua_createtable@@Base>
   68a50:	ldr	r6, [pc, #368]	; 68bc8 <luaopen_package@@Base+0x200>
   68a54:	ldr	r1, [pc, #368]	; 68bcc <luaopen_package@@Base+0x204>
   68a58:	ldr	r8, [pc, #368]	; 68bd0 <luaopen_package@@Base+0x208>
   68a5c:	mov	r2, #0
   68a60:	mov	r0, r4
   68a64:	bl	5c7f0 <lua_pushcclosure@@Base>
   68a68:	ldr	r2, [r4, #20]
   68a6c:	ldr	r3, [r4, #8]
   68a70:	mov	r7, #1
   68a74:	ldr	r1, [r2, #-8]
   68a78:	add	r3, r3, #212	; 0xd4
   68a7c:	mov	r2, r5
   68a80:	str	r3, [r1, #16]
   68a84:	strb	r7, [r1, #6]
   68a88:	mov	r0, r4
   68a8c:	mvn	r1, #1
   68a90:	bl	5f808 <lua_rawseti@@Base>
   68a94:	cmp	r6, #0
   68a98:	add	r5, r5, r7
   68a9c:	movne	r1, r6
   68aa0:	ldrne	r6, [r8, r5, lsl #2]
   68aa4:	bne	68a5c <luaopen_package@@Base+0x94>
   68aa8:	mov	r0, r4
   68aac:	ldr	r2, [pc, #288]	; 68bd4 <luaopen_package@@Base+0x20c>
   68ab0:	mvn	r1, #1
   68ab4:	bl	5e634 <lua_setfield@@Base>
   68ab8:	mov	r0, r4
   68abc:	ldr	r2, [pc, #276]	; 68bd8 <luaopen_package@@Base+0x210>
   68ac0:	ldr	r1, [pc, #276]	; 68bdc <luaopen_package@@Base+0x214>
   68ac4:	bl	5db0c <lua_getfield@@Base>
   68ac8:	ldr	r2, [r4, #20]
   68acc:	mov	r0, r4
   68ad0:	sub	r1, r2, #8
   68ad4:	ldr	r5, [r2, #-4]
   68ad8:	ldr	r3, [pc, #256]	; 68be0 <luaopen_package@@Base+0x218>
   68adc:	cmn	r5, #3
   68ae0:	movhi	r5, #0
   68ae4:	movls	r5, #1
   68ae8:	str	r5, [sp]
   68aec:	ldr	r2, [pc, #240]	; 68be4 <luaopen_package@@Base+0x21c>
   68af0:	str	r1, [r4, #20]
   68af4:	ldr	r1, [pc, #236]	; 68be8 <luaopen_package@@Base+0x220>
   68af8:	bl	68934 <luaL_gsub@@Base+0x560>
   68afc:	ldr	r3, [pc, #232]	; 68bec <luaopen_package@@Base+0x224>
   68b00:	mov	r0, r4
   68b04:	str	r5, [sp]
   68b08:	ldr	r2, [pc, #224]	; 68bf0 <luaopen_package@@Base+0x228>
   68b0c:	ldr	r1, [pc, #224]	; 68bf4 <luaopen_package@@Base+0x22c>
   68b10:	bl	68934 <luaL_gsub@@Base+0x560>
   68b14:	mov	r0, r4
   68b18:	mov	r2, #10
   68b1c:	ldr	r1, [pc, #212]	; 68bf8 <luaopen_package@@Base+0x230>
   68b20:	bl	5b190 <lua_pushlstring@@Base>
   68b24:	mov	r0, r4
   68b28:	ldr	r2, [pc, #204]	; 68bfc <luaopen_package@@Base+0x234>
   68b2c:	mvn	r1, #1
   68b30:	bl	5e634 <lua_setfield@@Base>
   68b34:	mov	r3, #16
   68b38:	ldr	r2, [pc, #192]	; 68c00 <luaopen_package@@Base+0x238>
   68b3c:	ldr	r1, [pc, #152]	; 68bdc <luaopen_package@@Base+0x214>
   68b40:	mov	r0, r4
   68b44:	bl	620f8 <luaL_findtable@@Base>
   68b48:	mov	r0, r4
   68b4c:	ldr	r2, [pc, #176]	; 68c04 <luaopen_package@@Base+0x23c>
   68b50:	mvn	r1, #1
   68b54:	bl	5e634 <lua_setfield@@Base>
   68b58:	mov	r3, #4
   68b5c:	ldr	r2, [pc, #164]	; 68c08 <luaopen_package@@Base+0x240>
   68b60:	ldr	r1, [pc, #116]	; 68bdc <luaopen_package@@Base+0x214>
   68b64:	mov	r0, r4
   68b68:	bl	620f8 <luaL_findtable@@Base>
   68b6c:	ldr	r2, [pc, #152]	; 68c0c <luaopen_package@@Base+0x244>
   68b70:	mov	r0, r4
   68b74:	mvn	r1, #1
   68b78:	bl	5e634 <lua_setfield@@Base>
   68b7c:	mov	r0, r4
   68b80:	ldr	r1, [pc, #136]	; 68c10 <luaopen_package@@Base+0x248>
   68b84:	bl	5a100 <lua_pushvalue@@Base>
   68b88:	mov	r0, r4
   68b8c:	mov	r2, r6
   68b90:	ldr	r1, [pc, #124]	; 68c14 <luaopen_package@@Base+0x24c>
   68b94:	bl	681c8 <luaL_setfuncs@@Base>
   68b98:	ldr	r3, [r4, #20]
   68b9c:	mov	r0, r7
   68ba0:	sub	r3, r3, #8
   68ba4:	str	r3, [r4, #20]
   68ba8:	add	sp, sp, #8
   68bac:	pop	{r4, r5, r6, r7, r8, pc}
   68bb0:	andeq	r3, r7, r8, lsr #5
   68bb4:	muleq	r5, r0, r5
   68bb8:	andeq	r3, r7, r0, ror #13
   68bbc:	andeq	r1, r7, ip, lsl #25
   68bc0:	andeq	r3, r7, r8, ror #13
   68bc4:			; <UNDEFINED> instruction: 0xffffd8ef
   68bc8:	andeq	r9, r6, r0, asr #7
   68bcc:	andeq	r8, r6, r0, lsr r8
   68bd0:	andeq	r1, r7, ip, lsr #25
   68bd4:	strdeq	r3, [r7], -ip
   68bd8:	andeq	lr, r6, ip, ror #23
   68bdc:			; <UNDEFINED> instruction: 0xffffd8f0
   68be0:	strdeq	r3, [r7], -r0
   68be4:	muleq	r7, r8, r7
   68be8:	andeq	r3, r7, r4, lsr #15
   68bec:	andeq	r3, r7, ip, lsr #15
   68bf0:	andeq	r3, r7, ip, lsl r8
   68bf4:	andeq	r3, r7, r8, lsr #16
   68bf8:	andeq	r3, r7, r0, lsr r8
   68bfc:	andeq	r3, r7, ip, lsr r8
   68c00:	andeq	lr, r6, r0, lsl r9
   68c04:	andeq	r3, r7, r4, asr #16
   68c08:	andeq	r3, r7, r0, lsr #11
   68c0c:	andeq	r3, r7, r4, lsl #13
   68c10:			; <UNDEFINED> instruction: 0xffffd8ee
   68c14:	andeq	r1, r7, r0, asr #25

00068c18 <luaL_addvalue@@Base>:
   68c18:	push	{r4, r5, lr}
   68c1c:	sub	sp, sp, #12
   68c20:	ldr	r5, [r0, #8]
   68c24:	mov	r4, r0
   68c28:	add	r2, sp, #4
   68c2c:	mvn	r1, #0
   68c30:	mov	r0, r5
   68c34:	bl	5ab5c <lua_tolstring@@Base>
   68c38:	mov	r3, r4
   68c3c:	ldr	r2, [sp, #4]
   68c40:	ldr	ip, [r3], #12
   68c44:	sub	r3, ip, r3
   68c48:	rsb	r3, r3, #8192	; 0x2000
   68c4c:	cmp	r3, r2
   68c50:	bcs	68c8c <luaL_addvalue@@Base+0x74>
   68c54:	mov	r0, r4
   68c58:	bl	5b204 <lua_pushlstring@@Base+0x74>
   68c5c:	cmp	r0, #0
   68c60:	bne	68cbc <luaL_addvalue@@Base+0xa4>
   68c64:	ldr	r3, [r4, #4]
   68c68:	add	r3, r3, #1
   68c6c:	cmp	r3, #1
   68c70:	str	r3, [r4, #4]
   68c74:	ble	68c84 <luaL_addvalue@@Base+0x6c>
   68c78:	add	r1, r4, #8
   68c7c:	add	r0, r4, #4
   68c80:	bl	5d84c <luaL_traceback@@Base+0x308>
   68c84:	add	sp, sp, #12
   68c88:	pop	{r4, r5, pc}
   68c8c:	mov	r1, r0
   68c90:	mov	r0, ip
   68c94:	bl	12cb8 <memcpy@plt>
   68c98:	ldr	r2, [r4]
   68c9c:	ldr	r3, [r5, #20]
   68ca0:	ldr	r1, [sp, #4]
   68ca4:	sub	r3, r3, #8
   68ca8:	add	r2, r2, r1
   68cac:	str	r2, [r4]
   68cb0:	str	r3, [r5, #20]
   68cb4:	add	sp, sp, #12
   68cb8:	pop	{r4, r5, pc}
   68cbc:	mov	r0, r5
   68cc0:	mvn	r1, #1
   68cc4:	bl	5a01c <lua_insert@@Base>
   68cc8:	b	68c64 <luaL_addvalue@@Base+0x4c>
   68ccc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   68cd0:	sub	sp, sp, #8512	; 0x2140
   68cd4:	sub	sp, sp, #4
   68cd8:	add	r2, sp, #24
   68cdc:	mov	r1, #1
   68ce0:	mov	r7, r0
   68ce4:	str	r0, [sp, #12]
   68ce8:	bl	5ad0c <luaL_checklstring@@Base>
   68cec:	mov	r2, #0
   68cf0:	mov	r1, #2
   68cf4:	add	r4, sp, #320	; 0x140
   68cf8:	mov	r5, r0
   68cfc:	mov	r0, r7
   68d00:	bl	5ad0c <luaL_checklstring@@Base>
   68d04:	mov	r1, #3
   68d08:	mov	fp, r0
   68d0c:	mov	r0, r7
   68d10:	bl	5a214 <lua_type@@Base>
   68d14:	ldr	r2, [r4, #-296]	; 0xfffffed8
   68d18:	mov	r1, #4
   68d1c:	add	r2, r2, #1
   68d20:	mov	r6, r0
   68d24:	mov	r0, r7
   68d28:	bl	5aa94 <luaL_optinteger@@Base>
   68d2c:	ldrb	r3, [fp]
   68d30:	sub	r6, r6, #3
   68d34:	cmp	r3, #94	; 0x5e
   68d38:	moveq	r3, #1
   68d3c:	movne	r3, #0
   68d40:	addeq	fp, fp, #1
   68d44:	cmp	r6, #3
   68d48:	str	r3, [sp, #8]
   68d4c:	str	r0, [sp, #4]
   68d50:	bhi	690a0 <luaL_addvalue@@Base+0x488>
   68d54:	ldr	r3, [sp, #4]
   68d58:	ldr	r2, [r4, #-296]	; 0xfffffed8
   68d5c:	cmp	r3, #0
   68d60:	ldr	r3, [sp, #12]
   68d64:	add	r2, r5, r2
   68d68:	mov	r7, #0
   68d6c:	str	r3, [r4, #-4]
   68d70:	str	r4, [r4, #-12]
   68d74:	str	r3, [r4, #-280]	; 0xfffffee8
   68d78:	str	r5, [r4, #-288]	; 0xfffffee0
   68d7c:	str	r2, [r4, #-284]	; 0xfffffee4
   68d80:	str	r7, [r4, #-8]
   68d84:	ble	68e68 <luaL_addvalue@@Base+0x250>
   68d88:	mov	r9, r7
   68d8c:	mov	r2, fp
   68d90:	mov	r1, r5
   68d94:	add	r0, sp, #32
   68d98:	str	r9, [r4, #-272]	; 0xfffffef0
   68d9c:	str	r9, [r4, #-276]	; 0xfffffeec
   68da0:	bl	35b14 <lua_error@@Base+0x174>
   68da4:	subs	r8, r0, #0
   68da8:	beq	68ffc <luaL_addvalue@@Base+0x3e4>
   68dac:	ldr	r6, [r4, #-280]	; 0xfffffee8
   68db0:	mov	r1, #3
   68db4:	mov	r0, r6
   68db8:	bl	5a214 <lua_type@@Base>
   68dbc:	add	r7, r7, #1
   68dc0:	sub	r0, r0, #3
   68dc4:	cmp	r0, #3
   68dc8:	ldrls	pc, [pc, r0, lsl #2]
   68dcc:	b	68e10 <luaL_addvalue@@Base+0x1f8>
   68dd0:	andeq	r8, r6, ip, lsr #30
   68dd4:	andeq	r8, r6, ip, lsr #30
   68dd8:	andeq	r8, r6, ip, asr #29
   68ddc:	andeq	r8, r6, r0, ror #27
   68de0:	mov	r1, #3
   68de4:	mov	r0, r6
   68de8:	bl	5a100 <lua_pushvalue@@Base>
   68dec:	mov	r2, r8
   68df0:	mov	r1, r5
   68df4:	add	r0, sp, #32
   68df8:	bl	5b304 <lua_pushlstring@@Base+0x174>
   68dfc:	ldr	r1, [r6, #20]
   68e00:	mov	r2, #2
   68e04:	sub	r1, r1, r0, lsl #3
   68e08:	mov	r0, r6
   68e0c:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   68e10:	ldr	r3, [r6, #20]
   68e14:	ldr	r2, [r3, #-4]
   68e18:	cmn	r2, #3
   68e1c:	bls	68efc <luaL_addvalue@@Base+0x2e4>
   68e20:	sub	r3, r3, #8
   68e24:	str	r3, [r6, #20]
   68e28:	mov	r0, r6
   68e2c:	sub	r2, r8, r5
   68e30:	mov	r1, r5
   68e34:	bl	5b190 <lua_pushlstring@@Base>
   68e38:	sub	r0, r4, #12
   68e3c:	bl	68c18 <luaL_addvalue@@Base>
   68e40:	cmp	r8, r5
   68e44:	movhi	r5, r8
   68e48:	bls	68ffc <luaL_addvalue@@Base+0x3e4>
   68e4c:	ldr	r3, [sp, #8]
   68e50:	cmp	r3, #0
   68e54:	bne	68e64 <luaL_addvalue@@Base+0x24c>
   68e58:	ldr	r3, [sp, #4]
   68e5c:	cmp	r3, r7
   68e60:	bgt	68d8c <luaL_addvalue@@Base+0x174>
   68e64:	ldr	r2, [r4, #-284]	; 0xfffffee4
   68e68:	sub	r3, r4, #12
   68e6c:	mov	r0, r3
   68e70:	sub	r2, r2, r5
   68e74:	mov	r1, r5
   68e78:	str	r3, [sp, #4]
   68e7c:	bl	68330 <luaL_addlstring@@Base>
   68e80:	ldr	r0, [sp, #4]
   68e84:	bl	683b0 <luaL_pushresult@@Base>
   68e88:	ldr	ip, [sp, #12]
   68e8c:	mvn	r1, #13
   68e90:	ldr	r3, [ip, #20]
   68e94:	ldr	r0, [ip, #24]
   68e98:	add	r2, r3, #8
   68e9c:	cmp	r2, r0
   68ea0:	str	r7, [r3]
   68ea4:	str	r1, [r3, #4]
   68ea8:	str	r2, [ip, #20]
   68eac:	bcc	68ebc <luaL_addvalue@@Base+0x2a4>
   68eb0:	mov	r0, ip
   68eb4:	mov	r1, #1
   68eb8:	bl	1fd08 <lua_getstack@@Base+0x50>
   68ebc:	mov	r0, #2
   68ec0:	add	sp, sp, #8512	; 0x2140
   68ec4:	add	sp, sp, #4
   68ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   68ecc:	mov	r3, r8
   68ed0:	mov	r2, r5
   68ed4:	mov	r1, #0
   68ed8:	add	r0, sp, #32
   68edc:	bl	5b248 <lua_pushlstring@@Base+0xb8>
   68ee0:	mov	r1, #3
   68ee4:	mov	r0, r6
   68ee8:	bl	5d8cc <lua_gettable@@Base>
   68eec:	ldr	r3, [r6, #20]
   68ef0:	ldr	r2, [r3, #-4]
   68ef4:	cmn	r2, #3
   68ef8:	bhi	68e20 <luaL_addvalue@@Base+0x208>
   68efc:	cmn	r2, #5
   68f00:	cmnne	r2, #14
   68f04:	bls	68e38 <luaL_addvalue@@Base+0x220>
   68f08:	mvn	r1, #0
   68f0c:	mov	r0, r6
   68f10:	bl	5a214 <lua_type@@Base>
   68f14:	ldr	r3, [pc, #404]	; 690b0 <luaL_addvalue@@Base+0x498>
   68f18:	mov	r1, #1920	; 0x780
   68f1c:	add	r3, r3, r0, lsl #2
   68f20:	mov	r0, r6
   68f24:	ldr	r2, [r3, #-156]	; 0xffffff64
   68f28:	bl	4a618 <luaL_error@@Base+0x452c>
   68f2c:	add	r2, sp, #28
   68f30:	mov	r1, #3
   68f34:	ldr	r0, [r4, #-280]	; 0xfffffee8
   68f38:	bl	5ab5c <lua_tolstring@@Base>
   68f3c:	ldr	r3, [r4, #-292]	; 0xfffffedc
   68f40:	cmp	r3, #0
   68f44:	mov	sl, r0
   68f48:	beq	68e40 <luaL_addvalue@@Base+0x228>
   68f4c:	mov	r6, #0
   68f50:	str	fp, [sp, #16]
   68f54:	str	r7, [sp, #20]
   68f58:	b	68f8c <luaL_addvalue@@Base+0x374>
   68f5c:	ldr	r3, [r4, #-12]
   68f60:	add	r2, sp, #8512	; 0x2140
   68f64:	cmp	r3, r2
   68f68:	bcs	69038 <luaL_addvalue@@Base+0x420>
   68f6c:	add	r0, r3, #1
   68f70:	str	r0, [r4, #-12]
   68f74:	ldrb	r1, [fp]
   68f78:	mov	r6, r7
   68f7c:	strb	r1, [r3]
   68f80:	ldr	r3, [r4, #-292]	; 0xfffffedc
   68f84:	cmp	r3, r6
   68f88:	bls	68fe8 <luaL_addvalue@@Base+0x3d0>
   68f8c:	ldrb	r3, [sl, r6]
   68f90:	add	fp, sl, r6
   68f94:	add	r7, r6, #1
   68f98:	cmp	r3, #37	; 0x25
   68f9c:	bne	68f5c <luaL_addvalue@@Base+0x344>
   68fa0:	ldrb	r1, [sl, r7]
   68fa4:	ldr	r3, [pc, #264]	; 690b4 <luaL_addvalue@@Base+0x49c>
   68fa8:	add	r6, r6, #2
   68fac:	add	r3, r3, r1
   68fb0:	ldrb	r3, [r3, #189]	; 0xbd
   68fb4:	tst	r3, #8
   68fb8:	bne	69054 <luaL_addvalue@@Base+0x43c>
   68fbc:	ldr	r3, [r4, #-12]
   68fc0:	add	r2, sp, #8512	; 0x2140
   68fc4:	cmp	r3, r2
   68fc8:	bcs	69090 <luaL_addvalue@@Base+0x478>
   68fcc:	add	r1, r3, #1
   68fd0:	str	r1, [r4, #-12]
   68fd4:	ldrb	r2, [sl, r7]
   68fd8:	strb	r2, [r3]
   68fdc:	ldr	r3, [r4, #-292]	; 0xfffffedc
   68fe0:	cmp	r3, r6
   68fe4:	bhi	68f8c <luaL_addvalue@@Base+0x374>
   68fe8:	cmp	r8, r5
   68fec:	ldr	fp, [sp, #16]
   68ff0:	ldr	r7, [sp, #20]
   68ff4:	movhi	r5, r8
   68ff8:	bhi	68e4c <luaL_addvalue@@Base+0x234>
   68ffc:	ldr	r2, [r4, #-284]	; 0xfffffee4
   69000:	cmp	r2, r5
   69004:	bls	68e68 <luaL_addvalue@@Base+0x250>
   69008:	mov	r0, r4
   6900c:	ldr	r3, [r0, #-12]!
   69010:	add	r2, r0, #8192	; 0x2000
   69014:	add	r2, r2, #12
   69018:	cmp	r3, r2
   6901c:	bcs	69048 <luaL_addvalue@@Base+0x430>
   69020:	add	r2, r3, #1
   69024:	str	r2, [r4, #-12]
   69028:	ldrb	r2, [r5]
   6902c:	add	r5, r5, #1
   69030:	strb	r2, [r3]
   69034:	b	68e4c <luaL_addvalue@@Base+0x234>
   69038:	add	r0, sp, #308	; 0x134
   6903c:	bl	682fc <luaL_prepbuffer@@Base>
   69040:	ldr	r3, [r4, #-12]
   69044:	b	68f6c <luaL_addvalue@@Base+0x354>
   69048:	bl	682fc <luaL_prepbuffer@@Base>
   6904c:	ldr	r3, [r4, #-12]
   69050:	b	69020 <luaL_addvalue@@Base+0x408>
   69054:	cmp	r1, #48	; 0x30
   69058:	beq	6907c <luaL_addvalue@@Base+0x464>
   6905c:	add	r0, sp, #32
   69060:	sub	r1, r1, #49	; 0x31
   69064:	mov	r3, r8
   69068:	mov	r2, r5
   6906c:	bl	5b248 <lua_pushlstring@@Base+0xb8>
   69070:	add	r0, sp, #308	; 0x134
   69074:	bl	68c18 <luaL_addvalue@@Base>
   69078:	b	68f80 <luaL_addvalue@@Base+0x368>
   6907c:	sub	r2, r8, r5
   69080:	mov	r1, r5
   69084:	add	r0, sp, #308	; 0x134
   69088:	bl	68330 <luaL_addlstring@@Base>
   6908c:	b	68f80 <luaL_addvalue@@Base+0x368>
   69090:	add	r0, sp, #308	; 0x134
   69094:	bl	682fc <luaL_prepbuffer@@Base>
   69098:	ldr	r3, [r4, #-12]
   6909c:	b	68fcc <luaL_addvalue@@Base+0x3b4>
   690a0:	ldr	r0, [sp, #12]
   690a4:	mov	r2, #656	; 0x290
   690a8:	mov	r1, #3
   690ac:	bl	361d0 <luaL_argerror@@Base+0x8>
   690b0:			; <UNDEFINED> instruction: 0x00070cb0
   690b4:			; <UNDEFINED> instruction: 0x0006ecb8
   690b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   690bc:	sub	sp, sp, #8192	; 0x2000
   690c0:	ldrb	lr, [r3]
   690c4:	sub	sp, sp, #20
   690c8:	add	r6, sp, #16
   690cc:	mov	ip, #0
   690d0:	cmp	lr, ip
   690d4:	mov	r5, r0
   690d8:	mov	r4, r2
   690dc:	str	r6, [r6, #-12]
   690e0:	str	ip, [r6, #-8]
   690e4:	str	r0, [r6, #-4]
   690e8:	moveq	r7, r1
   690ec:	bne	6920c <luaL_addvalue@@Base+0x5f4>
   690f0:	ldr	r9, [pc, #304]	; 69228 <luaL_addvalue@@Base+0x610>
   690f4:	ldr	r8, [pc, #304]	; 6922c <luaL_addvalue@@Base+0x614>
   690f8:	ldr	sl, [pc, #304]	; 69230 <luaL_addvalue@@Base+0x618>
   690fc:	ldrb	r3, [r4]
   69100:	cmp	r3, #59	; 0x3b
   69104:	bne	69114 <luaL_addvalue@@Base+0x4fc>
   69108:	ldrb	r3, [r4, #1]!
   6910c:	cmp	r3, #59	; 0x3b
   69110:	beq	69108 <luaL_addvalue@@Base+0x4f0>
   69114:	cmp	r3, #0
   69118:	beq	691f0 <luaL_addvalue@@Base+0x5d8>
   6911c:	mov	r1, #59	; 0x3b
   69120:	mov	r0, r4
   69124:	bl	12e8c <strchr@plt>
   69128:	subs	r3, r0, #0
   6912c:	beq	691c8 <luaL_addvalue@@Base+0x5b0>
   69130:	sub	r2, r3, r4
   69134:	mov	r1, r4
   69138:	mov	r0, r5
   6913c:	mov	r4, r3
   69140:	bl	5b190 <lua_pushlstring@@Base>
   69144:	mov	r2, #0
   69148:	mvn	r1, #0
   6914c:	mov	r0, r5
   69150:	bl	5ab5c <lua_tolstring@@Base>
   69154:	mov	r3, r7
   69158:	mov	r2, r9
   6915c:	mov	r1, r0
   69160:	mov	r0, r5
   69164:	bl	683d4 <luaL_gsub@@Base>
   69168:	mvn	r1, #1
   6916c:	mov	fp, r0
   69170:	mov	r0, r5
   69174:	bl	59fb4 <lua_remove@@Base>
   69178:	mov	r1, r8
   6917c:	mov	r0, fp
   69180:	bl	12fdc <fopen64@plt>
   69184:	cmp	r0, #0
   69188:	beq	691a0 <luaL_addvalue@@Base+0x588>
   6918c:	bl	12f4c <fclose@plt>
   69190:	mov	r0, fp
   69194:	add	sp, sp, #8192	; 0x2000
   69198:	add	sp, sp, #20
   6919c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   691a0:	mov	r2, fp
   691a4:	mov	r1, sl
   691a8:	mov	r0, r5
   691ac:	bl	5bc58 <lua_pushfstring@@Base>
   691b0:	mov	r0, r5
   691b4:	mvn	r1, #1
   691b8:	bl	59fb4 <lua_remove@@Base>
   691bc:	sub	r0, r6, #12
   691c0:	bl	68c18 <luaL_addvalue@@Base>
   691c4:	b	690fc <luaL_addvalue@@Base+0x4e4>
   691c8:	mov	r0, r4
   691cc:	bl	12e80 <strlen@plt>
   691d0:	mov	r1, r4
   691d4:	mov	r2, r0
   691d8:	add	fp, r4, r0
   691dc:	mov	r0, r5
   691e0:	bl	5b190 <lua_pushlstring@@Base>
   691e4:	cmp	fp, #0
   691e8:	movne	r4, fp
   691ec:	bne	69144 <luaL_addvalue@@Base+0x52c>
   691f0:	sub	r0, r6, #12
   691f4:	bl	683b0 <luaL_pushresult@@Base>
   691f8:	mov	fp, #0
   691fc:	mov	r0, fp
   69200:	add	sp, sp, #8192	; 0x2000
   69204:	add	sp, sp, #20
   69208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6920c:	mov	r2, r3
   69210:	add	r3, sp, #8192	; 0x2000
   69214:	add	r3, r3, #56	; 0x38
   69218:	ldr	r3, [r3]
   6921c:	bl	683d4 <luaL_gsub@@Base>
   69220:	mov	r7, r0
   69224:	b	690f0 <luaL_addvalue@@Base+0x4d8>
   69228:	strdeq	r2, [r7], -r0
   6922c:	andeq	r3, r7, r0, asr #3
   69230:	andeq	r3, r7, ip, asr #16
   69234:	push	{r4, r5, r6, lr}
   69238:	mov	r4, r0
   6923c:	sub	sp, sp, #8
   69240:	mov	r5, r1
   69244:	ldr	r1, [pc, #76]	; 69298 <luaL_addvalue@@Base+0x680>
   69248:	mov	r6, r2
   6924c:	bl	5db0c <lua_getfield@@Base>
   69250:	mov	r2, #0
   69254:	mov	r0, r4
   69258:	mvn	r1, #0
   6925c:	bl	5ab5c <lua_tolstring@@Base>
   69260:	subs	r2, r0, #0
   69264:	beq	69288 <luaL_addvalue@@Base+0x670>
   69268:	ldr	r3, [pc, #44]	; 6929c <luaL_addvalue@@Base+0x684>
   6926c:	mov	r1, r5
   69270:	str	r3, [sp]
   69274:	mov	r0, r4
   69278:	ldr	r3, [pc, #32]	; 692a0 <luaL_addvalue@@Base+0x688>
   6927c:	bl	690b8 <luaL_addvalue@@Base+0x4a0>
   69280:	add	sp, sp, #8
   69284:	pop	{r4, r5, r6, pc}
   69288:	mov	r2, r6
   6928c:	mov	r0, r4
   69290:	ldr	r1, [pc, #12]	; 692a4 <luaL_addvalue@@Base+0x68c>
   69294:	bl	460ec <luaL_error@@Base>
   69298:			; <UNDEFINED> instruction: 0xffffd8ef
   6929c:	andeq	r3, r7, ip, ror r8
   692a0:	andeq	r3, r7, r0, lsl #4
   692a4:	andeq	r3, r7, ip, asr r8
   692a8:	push	{r4, r5, r6, lr}
   692ac:	mov	r2, #0
   692b0:	mov	r1, #1
   692b4:	mov	r4, r0
   692b8:	bl	5ad0c <luaL_checklstring@@Base>
   692bc:	mov	r1, #46	; 0x2e
   692c0:	mov	r5, r0
   692c4:	bl	12e8c <strchr@plt>
   692c8:	cmp	r0, #0
   692cc:	popeq	{r4, r5, r6, pc}
   692d0:	sub	r2, r0, r5
   692d4:	mov	r1, r5
   692d8:	mov	r0, r4
   692dc:	bl	5b190 <lua_pushlstring@@Base>
   692e0:	mov	r2, #0
   692e4:	mvn	r1, #0
   692e8:	mov	r0, r4
   692ec:	bl	5ab5c <lua_tolstring@@Base>
   692f0:	ldr	r2, [pc, #92]	; 69354 <luaL_addvalue@@Base+0x73c>
   692f4:	mov	r1, r0
   692f8:	mov	r0, r4
   692fc:	bl	69234 <luaL_addvalue@@Base+0x61c>
   69300:	subs	r6, r0, #0
   69304:	beq	69340 <luaL_addvalue@@Base+0x728>
   69308:	mov	r3, #0
   6930c:	mov	r2, r5
   69310:	mov	r1, r6
   69314:	mov	r0, r4
   69318:	bl	684f8 <luaL_gsub@@Base+0x124>
   6931c:	cmp	r0, #0
   69320:	beq	69340 <luaL_addvalue@@Base+0x728>
   69324:	cmp	r0, #2
   69328:	bne	69348 <luaL_addvalue@@Base+0x730>
   6932c:	mov	r3, r6
   69330:	mov	r2, r5
   69334:	mov	r0, r4
   69338:	ldr	r1, [pc, #24]	; 69358 <luaL_addvalue@@Base+0x740>
   6933c:	bl	5bc58 <lua_pushfstring@@Base>
   69340:	mov	r0, #1
   69344:	pop	{r4, r5, r6, pc}
   69348:	mov	r1, r6
   6934c:	mov	r0, r4
   69350:	bl	132dc <pclose@plt+0x240>
   69354:	andeq	r3, r7, r8, lsr #16
   69358:	andeq	r3, r7, r0, lsl #17
   6935c:	push	{r4, r5, r6, lr}
   69360:	mov	r2, #0
   69364:	mov	r1, #1
   69368:	mov	r4, r0
   6936c:	bl	5ad0c <luaL_checklstring@@Base>
   69370:	ldr	r2, [pc, #68]	; 693bc <luaL_addvalue@@Base+0x7a4>
   69374:	mov	r1, r0
   69378:	mov	r5, r0
   6937c:	mov	r0, r4
   69380:	bl	69234 <luaL_addvalue@@Base+0x61c>
   69384:	subs	r6, r0, #0
   69388:	beq	693a8 <luaL_addvalue@@Base+0x790>
   6938c:	mov	r2, r5
   69390:	mov	r3, #0
   69394:	mov	r1, r6
   69398:	mov	r0, r4
   6939c:	bl	684f8 <luaL_gsub@@Base+0x124>
   693a0:	cmp	r0, #0
   693a4:	bne	693b0 <luaL_addvalue@@Base+0x798>
   693a8:	mov	r0, #1
   693ac:	pop	{r4, r5, r6, pc}
   693b0:	mov	r1, r6
   693b4:	mov	r0, r4
   693b8:	bl	132dc <pclose@plt+0x240>
   693bc:	andeq	r3, r7, r8, lsr #16
   693c0:	push	{r4, r5, r6, lr}
   693c4:	mov	r2, #0
   693c8:	mov	r1, #1
   693cc:	mov	r4, r0
   693d0:	bl	5ad0c <luaL_checklstring@@Base>
   693d4:	ldr	r2, [pc, #60]	; 69418 <luaL_addvalue@@Base+0x800>
   693d8:	mov	r1, r0
   693dc:	mov	r0, r4
   693e0:	bl	69234 <luaL_addvalue@@Base+0x61c>
   693e4:	subs	r5, r0, #0
   693e8:	beq	69404 <luaL_addvalue@@Base+0x7ec>
   693ec:	mov	r2, #0
   693f0:	mov	r1, r5
   693f4:	mov	r0, r4
   693f8:	bl	610b8 <luaL_loadfilex@@Base>
   693fc:	cmp	r0, #0
   69400:	bne	6940c <luaL_addvalue@@Base+0x7f4>
   69404:	mov	r0, #1
   69408:	pop	{r4, r5, r6, pc}
   6940c:	mov	r1, r5
   69410:	mov	r0, r4
   69414:	bl	132dc <pclose@plt+0x240>
   69418:	andeq	r3, r7, r4, lsr #15
   6941c:	push	{r4, r5, r6, r7, lr}
   69420:	mov	r2, #0
   69424:	sub	sp, sp, #12
   69428:	mov	r1, #1
   6942c:	mov	r4, r0
   69430:	bl	5ad0c <luaL_checklstring@@Base>
   69434:	mov	r2, #0
   69438:	mov	r1, #2
   6943c:	mov	r5, r0
   69440:	mov	r0, r4
   69444:	bl	5ad0c <luaL_checklstring@@Base>
   69448:	mov	r3, #0
   6944c:	ldr	r2, [pc, #152]	; 694ec <luaL_addvalue@@Base+0x8d4>
   69450:	mov	r1, #3
   69454:	mov	r6, r0
   69458:	mov	r0, r4
   6945c:	bl	5ada0 <luaL_optlstring@@Base>
   69460:	mov	r3, #0
   69464:	ldr	r2, [pc, #132]	; 694f0 <luaL_addvalue@@Base+0x8d8>
   69468:	mov	r1, #4
   6946c:	mov	r7, r0
   69470:	mov	r0, r4
   69474:	bl	5ada0 <luaL_optlstring@@Base>
   69478:	mov	r3, r7
   6947c:	mov	r2, r6
   69480:	mov	r1, r5
   69484:	str	r0, [sp]
   69488:	mov	r0, r4
   6948c:	bl	690b8 <luaL_addvalue@@Base+0x4a0>
   69490:	cmp	r0, #0
   69494:	movne	r0, #1
   69498:	beq	694a4 <luaL_addvalue@@Base+0x88c>
   6949c:	add	sp, sp, #12
   694a0:	pop	{r4, r5, r6, r7, pc}
   694a4:	ldr	r2, [r4, #20]
   694a8:	ldr	r0, [r4, #24]
   694ac:	add	r3, r2, #8
   694b0:	mvn	r1, #0
   694b4:	cmp	r3, r0
   694b8:	str	r1, [r2, #4]
   694bc:	str	r3, [r4, #20]
   694c0:	bcs	694dc <luaL_addvalue@@Base+0x8c4>
   694c4:	mov	r0, r4
   694c8:	mvn	r1, #1
   694cc:	bl	5a01c <lua_insert@@Base>
   694d0:	mov	r0, #2
   694d4:	add	sp, sp, #12
   694d8:	pop	{r4, r5, r6, r7, pc}
   694dc:	mov	r1, #1
   694e0:	mov	r0, r4
   694e4:	bl	1fd08 <lua_getstack@@Base+0x50>
   694e8:	b	694c4 <luaL_addvalue@@Base+0x8ac>
   694ec:	andeq	r3, r7, r0, lsl #4
   694f0:	andeq	r3, r7, ip, ror r8

000694f4 <luaL_buffinit@@Base>:
   694f4:	add	r2, r1, #12
   694f8:	mov	r3, #0
   694fc:	str	r0, [r1, #8]
   69500:	strd	r2, [r1]
   69504:	bx	lr

00069508 <luaL_ref@@Base>:
   69508:	add	r3, r1, #9984	; 0x2700
   6950c:	ldr	r2, [pc, #196]	; 695d8 <luaL_ref@@Base+0xd0>
   69510:	add	r3, r3, #15
   69514:	cmp	r3, r2
   69518:	push	{r4, r5, r6, lr}
   6951c:	mov	r5, r1
   69520:	mov	r4, r0
   69524:	ldrdls	r2, [r0, #16]
   69528:	subls	r3, r3, r2
   6952c:	addls	r5, r1, r3, asr #3
   69530:	addls	r5, r5, #1
   69534:	mvn	r1, #0
   69538:	mov	r0, r4
   6953c:	bl	5a214 <lua_type@@Base>
   69540:	cmp	r0, #0
   69544:	beq	695c4 <luaL_ref@@Base+0xbc>
   69548:	mov	r2, #0
   6954c:	mov	r1, r5
   69550:	mov	r0, r4
   69554:	bl	5e014 <lua_rawgeti@@Base>
   69558:	mvn	r1, #0
   6955c:	mov	r0, r4
   69560:	bl	5a8b8 <lua_tointeger@@Base>
   69564:	ldr	r3, [r4, #20]
   69568:	sub	r3, r3, #8
   6956c:	str	r3, [r4, #20]
   69570:	subs	r6, r0, #0
   69574:	bne	695a0 <luaL_ref@@Base+0x98>
   69578:	mov	r1, r5
   6957c:	mov	r0, r4
   69580:	bl	5af30 <lua_objlen@@Base>
   69584:	add	r6, r0, #1
   69588:	mov	r1, r5
   6958c:	mov	r0, r4
   69590:	mov	r2, r6
   69594:	bl	5f808 <lua_rawseti@@Base>
   69598:	mov	r0, r6
   6959c:	pop	{r4, r5, r6, pc}
   695a0:	mov	r2, r6
   695a4:	mov	r1, r5
   695a8:	mov	r0, r4
   695ac:	bl	5e014 <lua_rawgeti@@Base>
   695b0:	mov	r2, #0
   695b4:	mov	r1, r5
   695b8:	mov	r0, r4
   695bc:	bl	5f808 <lua_rawseti@@Base>
   695c0:	b	69588 <luaL_ref@@Base+0x80>
   695c4:	ldr	r3, [r4, #20]
   695c8:	mvn	r6, #0
   695cc:	sub	r3, r3, #8
   695d0:	str	r3, [r4, #20]
   695d4:	b	69598 <luaL_ref@@Base+0x90>
   695d8:	andeq	r2, r0, pc, lsl #14

000695dc <luaL_unref@@Base>:
   695dc:	push	{r4, r5, r6, lr}
   695e0:	subs	r6, r2, #0
   695e4:	poplt	{r4, r5, r6, pc}
   695e8:	add	r3, r1, #9984	; 0x2700
   695ec:	ldr	r2, [pc, #132]	; 69678 <luaL_unref@@Base+0x9c>
   695f0:	add	r3, r3, #15
   695f4:	cmp	r3, r2
   695f8:	mov	r4, r0
   695fc:	mov	r5, r1
   69600:	ldrdls	r2, [r0, #16]
   69604:	subls	r3, r3, r2
   69608:	addls	r5, r1, r3, asr #3
   6960c:	addls	r5, r5, #1
   69610:	mov	r2, #0
   69614:	mov	r1, r5
   69618:	mov	r0, r4
   6961c:	bl	5e014 <lua_rawgeti@@Base>
   69620:	mov	r2, r6
   69624:	mov	r1, r5
   69628:	mov	r0, r4
   6962c:	bl	5f808 <lua_rawseti@@Base>
   69630:	ldr	r3, [r4, #20]
   69634:	ldr	r1, [r4, #24]
   69638:	add	r2, r3, #8
   6963c:	cmp	r2, r1
   69640:	mvn	r1, #13
   69644:	str	r6, [r3]
   69648:	str	r1, [r3, #4]
   6964c:	str	r2, [r4, #20]
   69650:	bcs	69668 <luaL_unref@@Base+0x8c>
   69654:	mov	r1, r5
   69658:	mov	r0, r4
   6965c:	mov	r2, #0
   69660:	pop	{r4, r5, r6, lr}
   69664:	b	5f808 <lua_rawseti@@Base>
   69668:	mov	r1, #1
   6966c:	mov	r0, r4
   69670:	bl	1fd08 <lua_getstack@@Base+0x50>
   69674:	b	69654 <luaL_unref@@Base+0x78>
   69678:	andeq	r2, r0, pc, lsl #14

0006967c <luaL_newstate@@Base>:
   6967c:	push	{r4, r5, r6, lr}
   69680:	mov	r0, #131072	; 0x20000
   69684:	bl	19a9c <_start@@Base+0x66ec>
   69688:	cmn	r0, #1
   6968c:	beq	6976c <luaL_newstate@@Base+0xf0>
   69690:	add	r6, r0, #8
   69694:	tst	r6, #7
   69698:	rsbne	r4, r6, #0
   6969c:	andne	r4, r4, #7
   696a0:	addne	r4, r0, r4
   696a4:	addne	r6, r4, #8
   696a8:	moveq	r4, r0
   696ac:	mov	r5, r0
   696b0:	mov	r2, #440	; 0x1b8
   696b4:	mov	r1, #0
   696b8:	mov	r0, r6
   696bc:	bl	12ed4 <memset@plt>
   696c0:	ldr	r1, [pc, #172]	; 69774 <luaL_newstate@@Base+0xf8>
   696c4:	add	r3, r4, #40	; 0x28
   696c8:	add	r2, r4, #296	; 0x128
   696cc:	mov	r0, #131072	; 0x20000
   696d0:	str	r1, [r4, #4]
   696d4:	mov	r1, #255	; 0xff
   696d8:	str	r5, [r4, #432]	; 0x1b0
   696dc:	str	r0, [r4, #436]	; 0x1b4
   696e0:	str	r1, [r4, #36]	; 0x24
   696e4:	str	r3, [r3, #12]
   696e8:	str	r3, [r3, #8]
   696ec:	add	r3, r3, #8
   696f0:	cmp	r2, r3
   696f4:	bne	696e4 <luaL_newstate@@Base+0x68>
   696f8:	add	r3, r4, #448	; 0x1c0
   696fc:	add	r2, r4, #440	; 0x1b8
   69700:	tst	r3, #7
   69704:	sub	r5, r5, r2
   69708:	rsbne	r3, r3, #0
   6970c:	add	r5, r5, #130048	; 0x1fc00
   69710:	andne	r3, r3, #7
   69714:	add	r5, r5, #992	; 0x3e0
   69718:	addne	r1, r2, r3
   6971c:	moveq	r3, r5
   69720:	subne	r3, r5, r3
   69724:	moveq	r1, r2
   69728:	add	r5, r2, r5
   6972c:	str	r3, [r4, #20]
   69730:	mov	r2, #32
   69734:	orr	r0, r3, #1
   69738:	mov	r3, #2097152	; 0x200000
   6973c:	str	r1, [r4, #28]
   69740:	str	r0, [r1, #4]
   69744:	str	r2, [r5, #4]
   69748:	mov	r1, r6
   6974c:	str	r3, [r4, #32]
   69750:	ldr	r0, [pc, #32]	; 69778 <luaL_newstate@@Base+0xfc>
   69754:	bl	530ec <lua_newstate@@Base>
   69758:	cmp	r0, #0
   6975c:	ldrne	r3, [r0, #8]
   69760:	ldrne	r2, [pc, #20]	; 6977c <luaL_newstate@@Base+0x100>
   69764:	strne	r2, [r3, #208]	; 0xd0
   69768:	pop	{r4, r5, r6, pc}
   6976c:	mov	r0, #0
   69770:	pop	{r4, r5, r6, pc}
   69774:			; <UNDEFINED> instruction: 0x000001bb
   69778:	andeq	pc, r1, r8, lsl r0	; <UNPREDICTABLE>
   6977c:	strdeq	sl, [r5], -ip
   69780:	ldr	r3, [r1, #20]
   69784:	push	{r4, lr}
   69788:	sub	ip, r3, #8
   6978c:	str	ip, [r1, #20]
   69790:	ldrd	r4, [r3, #-8]
   69794:	ldr	r3, [r0, #20]
   69798:	add	ip, r3, #8
   6979c:	strd	r4, [r3]
   697a0:	ldr	r1, [r3, #4]
   697a4:	str	ip, [r0, #20]
   697a8:	cmn	r1, #5
   697ac:	beq	697b4 <luaL_newstate@@Base+0x138>
   697b0:	bl	35808 <luaL_where@@Base+0x15704>
   697b4:	ldr	r1, [r3]
   697b8:	add	r1, r1, #16
   697bc:	bl	359a8 <lua_error@@Base+0x8>

000697c0 <luaL_openlibs@@Base>:
   697c0:	push	{r4, r5, r6, lr}
   697c4:	mov	r4, r0
   697c8:	ldr	r5, [pc, #148]	; 69864 <luaL_openlibs@@Base+0xa4>
   697cc:	ldr	r1, [pc, #148]	; 69868 <luaL_openlibs@@Base+0xa8>
   697d0:	mov	r2, #0
   697d4:	mov	r0, r4
   697d8:	bl	5c7f0 <lua_pushcclosure@@Base>
   697dc:	ldr	r1, [r5, #-8]
   697e0:	mov	r0, r4
   697e4:	bl	5b7a0 <lua_pushstring@@Base>
   697e8:	ldr	r1, [r4, #20]
   697ec:	add	r5, r5, #8
   697f0:	sub	r1, r1, #8
   697f4:	mov	r2, #1
   697f8:	mov	r0, r4
   697fc:	bl	6bc98 <luaL_openlibs@@Base+0x24d8>
   69800:	ldr	r1, [r5, #-4]
   69804:	cmp	r1, #0
   69808:	bne	697d0 <luaL_openlibs@@Base+0x10>
   6980c:	ldr	r1, [pc, #88]	; 6986c <luaL_openlibs@@Base+0xac>
   69810:	mov	r3, #1
   69814:	ldr	r2, [pc, #84]	; 69870 <luaL_openlibs@@Base+0xb0>
   69818:	mov	r0, r4
   6981c:	bl	620f8 <luaL_findtable@@Base>
   69820:	ldr	r5, [pc, #76]	; 69874 <luaL_openlibs@@Base+0xb4>
   69824:	ldr	r1, [pc, #76]	; 69878 <luaL_openlibs@@Base+0xb8>
   69828:	mov	r2, #0
   6982c:	mov	r0, r4
   69830:	bl	5c7f0 <lua_pushcclosure@@Base>
   69834:	add	r5, r5, #8
   69838:	ldr	r2, [r5, #-16]
   6983c:	mvn	r1, #1
   69840:	mov	r0, r4
   69844:	bl	5e634 <lua_setfield@@Base>
   69848:	ldr	r1, [r5, #-4]
   6984c:	cmp	r1, #0
   69850:	bne	69828 <luaL_openlibs@@Base+0x68>
   69854:	ldr	r3, [r4, #20]
   69858:	sub	r3, r3, #8
   6985c:	str	r3, [r4, #20]
   69860:	pop	{r4, r5, r6, pc}
   69864:	andeq	r1, r7, r0, ror #25
   69868:	andeq	r2, r6, r4, ror r6
   6986c:			; <UNDEFINED> instruction: 0xffffd8f0
   69870:	andeq	r3, r7, r0, lsr #11
   69874:	andeq	r1, r7, r8, lsr sp
   69878:	ldrdeq	r2, [r6], -r8
   6987c:	andeq	r0, r0, r0
   69880:	lsl	fp, fp, #3
   69884:	ldrd	r0, [sl, r9]!
   69888:	ldrh	ip, [r6, #2]
   6988c:	ldrd	r2, [fp, r9]!
   69890:	add	r6, r6, #4
   69894:	add	ip, r6, ip, lsl #2
   69898:	cmn	r1, #14
   6989c:	bne	698c8 <luaL_openlibs@@Base+0x108>
   698a0:	cmn	r3, #14
   698a4:	bne	698ec <luaL_openlibs@@Base+0x12c>
   698a8:	cmp	r0, r2
   698ac:	sublt	r6, ip, #128, 22	; 0x20000
   698b0:	ldrb	ip, [r6]
   698b4:	ldr	lr, [r6], #4
   698b8:	ldr	ip, [r7, ip, lsl #2]
   698bc:	and	sl, r4, lr, lsr #5
   698c0:	lsr	fp, lr, #16
   698c4:	bx	ip
   698c8:	vldr	d0, [sl, #-0]
   698cc:	bhi	6bf70 <luaL_openlibs@@Base+0x27b0>
   698d0:	cmn	r3, #14
   698d4:	vldr	d1, [fp, #-0]
   698d8:	bcc	698fc <luaL_openlibs@@Base+0x13c>
   698dc:	bhi	6bf70 <luaL_openlibs@@Base+0x27b0>
   698e0:	vmov	s4, r2
   698e4:	vcvt.f64.s32	d1, s4
   698e8:	b	698fc <luaL_openlibs@@Base+0x13c>
   698ec:	vldr	d1, [fp, #-0]
   698f0:	bhi	6bf70 <luaL_openlibs@@Base+0x27b0>
   698f4:	vmov	s4, r0
   698f8:	vcvt.f64.s32	d0, s4
   698fc:	vcmp.f64	d0, d1
   69900:	vmrs	APSR_nzcv, fpscr
   69904:	subcc	r6, ip, #128, 22	; 0x20000
   69908:	b	698b0 <luaL_openlibs@@Base+0xf0>
   6990c:	lsl	fp, fp, #3
   69910:	ldrd	r0, [sl, r9]!
   69914:	ldrh	ip, [r6, #2]
   69918:	ldrd	r2, [fp, r9]!
   6991c:	add	r6, r6, #4
   69920:	add	ip, r6, ip, lsl #2
   69924:	cmn	r1, #14
   69928:	bne	69954 <luaL_openlibs@@Base+0x194>
   6992c:	cmn	r3, #14
   69930:	bne	69978 <luaL_openlibs@@Base+0x1b8>
   69934:	cmp	r0, r2
   69938:	subge	r6, ip, #128, 22	; 0x20000
   6993c:	ldrb	ip, [r6]
   69940:	ldr	lr, [r6], #4
   69944:	ldr	ip, [r7, ip, lsl #2]
   69948:	and	sl, r4, lr, lsr #5
   6994c:	lsr	fp, lr, #16
   69950:	bx	ip
   69954:	vldr	d0, [sl, #-0]
   69958:	bhi	6bf70 <luaL_openlibs@@Base+0x27b0>
   6995c:	cmn	r3, #14
   69960:	vldr	d1, [fp, #-0]
   69964:	bcc	69988 <luaL_openlibs@@Base+0x1c8>
   69968:	bhi	6bf70 <luaL_openlibs@@Base+0x27b0>
   6996c:	vmov	s4, r2
   69970:	vcvt.f64.s32	d1, s4
   69974:	b	69988 <luaL_openlibs@@Base+0x1c8>
   69978:	vldr	d1, [fp, #-0]
   6997c:	bhi	6bf70 <luaL_openlibs@@Base+0x27b0>
   69980:	vmov	s4, r0
   69984:	vcvt.f64.s32	d0, s4
   69988:	vcmp.f64	d0, d1
   6998c:	vmrs	APSR_nzcv, fpscr
   69990:	subcs	r6, ip, #128, 22	; 0x20000
   69994:	b	6993c <luaL_openlibs@@Base+0x17c>
   69998:	lsl	fp, fp, #3
   6999c:	ldrd	r0, [sl, r9]!
   699a0:	ldrh	ip, [r6, #2]
   699a4:	ldrd	r2, [fp, r9]!
   699a8:	add	r6, r6, #4
   699ac:	add	ip, r6, ip, lsl #2
   699b0:	cmn	r1, #14
   699b4:	bne	699e0 <luaL_openlibs@@Base+0x220>
   699b8:	cmn	r3, #14
   699bc:	bne	69a04 <luaL_openlibs@@Base+0x244>
   699c0:	cmp	r0, r2
   699c4:	suble	r6, ip, #128, 22	; 0x20000
   699c8:	ldrb	ip, [r6]
   699cc:	ldr	lr, [r6], #4
   699d0:	ldr	ip, [r7, ip, lsl #2]
   699d4:	and	sl, r4, lr, lsr #5
   699d8:	lsr	fp, lr, #16
   699dc:	bx	ip
   699e0:	vldr	d0, [sl, #-0]
   699e4:	bhi	6bf70 <luaL_openlibs@@Base+0x27b0>
   699e8:	cmn	r3, #14
   699ec:	vldr	d1, [fp, #-0]
   699f0:	bcc	69a14 <luaL_openlibs@@Base+0x254>
   699f4:	bhi	6bf70 <luaL_openlibs@@Base+0x27b0>
   699f8:	vmov	s4, r2
   699fc:	vcvt.f64.s32	d1, s4
   69a00:	b	69a14 <luaL_openlibs@@Base+0x254>
   69a04:	vldr	d1, [fp, #-0]
   69a08:	bhi	6bf70 <luaL_openlibs@@Base+0x27b0>
   69a0c:	vmov	s4, r0
   69a10:	vcvt.f64.s32	d0, s4
   69a14:	vcmp.f64	d0, d1
   69a18:	vmrs	APSR_nzcv, fpscr
   69a1c:	subls	r6, ip, #128, 22	; 0x20000
   69a20:	b	699c8 <luaL_openlibs@@Base+0x208>
   69a24:	lsl	fp, fp, #3
   69a28:	ldrd	r0, [sl, r9]!
   69a2c:	ldrh	ip, [r6, #2]
   69a30:	ldrd	r2, [fp, r9]!
   69a34:	add	r6, r6, #4
   69a38:	add	ip, r6, ip, lsl #2
   69a3c:	cmn	r1, #14
   69a40:	bne	69a6c <luaL_openlibs@@Base+0x2ac>
   69a44:	cmn	r3, #14
   69a48:	bne	69a90 <luaL_openlibs@@Base+0x2d0>
   69a4c:	cmp	r0, r2
   69a50:	subgt	r6, ip, #128, 22	; 0x20000
   69a54:	ldrb	ip, [r6]
   69a58:	ldr	lr, [r6], #4
   69a5c:	ldr	ip, [r7, ip, lsl #2]
   69a60:	and	sl, r4, lr, lsr #5
   69a64:	lsr	fp, lr, #16
   69a68:	bx	ip
   69a6c:	vldr	d0, [sl, #-0]
   69a70:	bhi	6bf70 <luaL_openlibs@@Base+0x27b0>
   69a74:	cmn	r3, #14
   69a78:	vldr	d1, [fp, #-0]
   69a7c:	bcc	69aa0 <luaL_openlibs@@Base+0x2e0>
   69a80:	bhi	6bf70 <luaL_openlibs@@Base+0x27b0>
   69a84:	vmov	s4, r2
   69a88:	vcvt.f64.s32	d1, s4
   69a8c:	b	69aa0 <luaL_openlibs@@Base+0x2e0>
   69a90:	vldr	d1, [fp, #-0]
   69a94:	bhi	6bf70 <luaL_openlibs@@Base+0x27b0>
   69a98:	vmov	s4, r0
   69a9c:	vcvt.f64.s32	d0, s4
   69aa0:	vcmp.f64	d0, d1
   69aa4:	vmrs	APSR_nzcv, fpscr
   69aa8:	subhi	r6, ip, #128, 22	; 0x20000
   69aac:	b	69a54 <luaL_openlibs@@Base+0x294>
   69ab0:	lsl	fp, fp, #3
   69ab4:	ldrd	r0, [sl, r9]!
   69ab8:	ldrh	ip, [r6, #2]
   69abc:	ldrd	r2, [fp, r9]!
   69ac0:	add	r6, r6, #4
   69ac4:	add	ip, r6, ip, lsl #2
   69ac8:	cmn	r1, #14
   69acc:	cmnls	r3, #14
   69ad0:	bls	69c7c <luaL_openlibs@@Base+0x4bc>
   69ad4:	cmn	r1, #11
   69ad8:	cmnne	r3, #11
   69adc:	beq	6c008 <luaL_openlibs@@Base+0x2848>
   69ae0:	cmp	r1, r3
   69ae4:	bne	69afc <luaL_openlibs@@Base+0x33c>
   69ae8:	cmn	r1, #3
   69aec:	bcs	69af8 <luaL_openlibs@@Base+0x338>
   69af0:	cmp	r0, r2
   69af4:	bne	69b14 <luaL_openlibs@@Base+0x354>
   69af8:	sub	r6, ip, #128, 22	; 0x20000
   69afc:	ldrb	ip, [r6]
   69b00:	ldr	lr, [r6], #4
   69b04:	ldr	ip, [r7, ip, lsl #2]
   69b08:	and	sl, r4, lr, lsr #5
   69b0c:	lsr	fp, lr, #16
   69b10:	bx	ip
   69b14:	cmn	r1, #12
   69b18:	bhi	69afc <luaL_openlibs@@Base+0x33c>
   69b1c:	ldr	sl, [r0, #16]
   69b20:	cmp	sl, #0
   69b24:	beq	69afc <luaL_openlibs@@Base+0x33c>
   69b28:	ldrb	sl, [sl, #6]
   69b2c:	mov	r3, #0
   69b30:	mov	r1, r0
   69b34:	tst	sl, #16
   69b38:	beq	6bff0 <luaL_openlibs@@Base+0x2830>
   69b3c:	b	69afc <luaL_openlibs@@Base+0x33c>
   69b40:	lsl	fp, fp, #3
   69b44:	ldrd	r0, [sl, r9]!
   69b48:	ldrh	ip, [r6, #2]
   69b4c:	ldrd	r2, [fp, r9]!
   69b50:	add	r6, r6, #4
   69b54:	add	ip, r6, ip, lsl #2
   69b58:	cmn	r1, #14
   69b5c:	cmnls	r3, #14
   69b60:	bls	69d08 <luaL_openlibs@@Base+0x548>
   69b64:	cmn	r1, #11
   69b68:	cmnne	r3, #11
   69b6c:	beq	6c008 <luaL_openlibs@@Base+0x2848>
   69b70:	cmp	r1, r3
   69b74:	bne	69bb0 <luaL_openlibs@@Base+0x3f0>
   69b78:	cmn	r1, #3
   69b7c:	bcs	69bb4 <luaL_openlibs@@Base+0x3f4>
   69b80:	cmp	r0, r2
   69b84:	beq	69bb4 <luaL_openlibs@@Base+0x3f4>
   69b88:	cmn	r1, #12
   69b8c:	bhi	69bb0 <luaL_openlibs@@Base+0x3f0>
   69b90:	ldr	sl, [r0, #16]
   69b94:	cmp	sl, #0
   69b98:	beq	69bb0 <luaL_openlibs@@Base+0x3f0>
   69b9c:	ldrb	sl, [sl, #6]
   69ba0:	mov	r3, #1
   69ba4:	mov	r1, r0
   69ba8:	tst	sl, #16
   69bac:	beq	6bff0 <luaL_openlibs@@Base+0x2830>
   69bb0:	sub	r6, ip, #128, 22	; 0x20000
   69bb4:	ldrb	ip, [r6]
   69bb8:	ldr	lr, [r6], #4
   69bbc:	ldr	ip, [r7, ip, lsl #2]
   69bc0:	and	sl, r4, lr, lsr #5
   69bc4:	lsr	fp, lr, #16
   69bc8:	bx	ip
   69bcc:	mvn	fp, fp
   69bd0:	ldrd	r0, [r9, sl]
   69bd4:	ldrh	ip, [r6, #2]
   69bd8:	ldr	r2, [r5, fp, lsl #2]
   69bdc:	add	r6, r6, #4
   69be0:	add	ip, r6, ip, lsl #2
   69be4:	cmn	r1, #5
   69be8:	bne	69c0c <luaL_openlibs@@Base+0x44c>
   69bec:	cmp	r0, r2
   69bf0:	subeq	r6, ip, #128, 22	; 0x20000
   69bf4:	ldrb	ip, [r6]
   69bf8:	ldr	lr, [r6], #4
   69bfc:	ldr	ip, [r7, ip, lsl #2]
   69c00:	and	sl, r4, lr, lsr #5
   69c04:	lsr	fp, lr, #16
   69c08:	bx	ip
   69c0c:	cmn	r1, #11
   69c10:	bne	69bf4 <luaL_openlibs@@Base+0x434>
   69c14:	b	6c008 <luaL_openlibs@@Base+0x2848>
   69c18:	mvn	fp, fp
   69c1c:	ldrd	r0, [r9, sl]
   69c20:	ldrh	ip, [r6, #2]
   69c24:	ldr	r2, [r5, fp, lsl #2]
   69c28:	add	r6, r6, #4
   69c2c:	add	ip, r6, ip, lsl #2
   69c30:	cmn	r1, #5
   69c34:	bne	69c58 <luaL_openlibs@@Base+0x498>
   69c38:	cmp	r0, r2
   69c3c:	subne	r6, ip, #128, 22	; 0x20000
   69c40:	ldrb	ip, [r6]
   69c44:	ldr	lr, [r6], #4
   69c48:	ldr	ip, [r7, ip, lsl #2]
   69c4c:	and	sl, r4, lr, lsr #5
   69c50:	lsr	fp, lr, #16
   69c54:	bx	ip
   69c58:	cmn	r1, #11
   69c5c:	bne	69c3c <luaL_openlibs@@Base+0x47c>
   69c60:	b	6c008 <luaL_openlibs@@Base+0x2848>
   69c64:	lsl	fp, fp, #3
   69c68:	ldrd	r0, [sl, r9]!
   69c6c:	ldrh	ip, [r6, #2]
   69c70:	ldrd	r2, [fp, r5]!
   69c74:	add	r6, r6, #4
   69c78:	add	ip, r6, ip, lsl #2
   69c7c:	cmn	r1, #14
   69c80:	bne	69cac <luaL_openlibs@@Base+0x4ec>
   69c84:	cmn	r3, #14
   69c88:	bne	69cc8 <luaL_openlibs@@Base+0x508>
   69c8c:	cmp	r0, r2
   69c90:	subeq	r6, ip, #128, 22	; 0x20000
   69c94:	ldrb	ip, [r6]
   69c98:	ldr	lr, [r6], #4
   69c9c:	ldr	ip, [r7, ip, lsl #2]
   69ca0:	and	sl, r4, lr, lsr #5
   69ca4:	lsr	fp, lr, #16
   69ca8:	bx	ip
   69cac:	bhi	69ce4 <luaL_openlibs@@Base+0x524>
   69cb0:	cmn	r3, #14
   69cb4:	vmov	s4, r2
   69cb8:	vldr	d0, [sl, #-0]
   69cbc:	vldrcc	d1, [fp, #-0]
   69cc0:	vcvtcs.f64.s32	d1, s4
   69cc4:	b	69cd4 <luaL_openlibs@@Base+0x514>
   69cc8:	vmov	s4, r0
   69ccc:	vldr	d1, [fp, #-0]
   69cd0:	vcvt.f64.s32	d0, s4
   69cd4:	vcmp.f64	d0, d1
   69cd8:	vmrs	APSR_nzcv, fpscr
   69cdc:	subeq	r6, ip, #128, 22	; 0x20000
   69ce0:	b	69c94 <luaL_openlibs@@Base+0x4d4>
   69ce4:	cmn	r1, #11
   69ce8:	bne	69c94 <luaL_openlibs@@Base+0x4d4>
   69cec:	b	6c008 <luaL_openlibs@@Base+0x2848>
   69cf0:	lsl	fp, fp, #3
   69cf4:	ldrd	r0, [sl, r9]!
   69cf8:	ldrh	ip, [r6, #2]
   69cfc:	ldrd	r2, [fp, r5]!
   69d00:	add	r6, r6, #4
   69d04:	add	ip, r6, ip, lsl #2
   69d08:	cmn	r1, #14
   69d0c:	bne	69d38 <luaL_openlibs@@Base+0x578>
   69d10:	cmn	r3, #14
   69d14:	bne	69d54 <luaL_openlibs@@Base+0x594>
   69d18:	cmp	r0, r2
   69d1c:	subne	r6, ip, #128, 22	; 0x20000
   69d20:	ldrb	ip, [r6]
   69d24:	ldr	lr, [r6], #4
   69d28:	ldr	ip, [r7, ip, lsl #2]
   69d2c:	and	sl, r4, lr, lsr #5
   69d30:	lsr	fp, lr, #16
   69d34:	bx	ip
   69d38:	bhi	69d70 <luaL_openlibs@@Base+0x5b0>
   69d3c:	cmn	r3, #14
   69d40:	vmov	s4, r2
   69d44:	vldr	d0, [sl, #-0]
   69d48:	vldrcc	d1, [fp, #-0]
   69d4c:	vcvtcs.f64.s32	d1, s4
   69d50:	b	69d60 <luaL_openlibs@@Base+0x5a0>
   69d54:	vmov	s4, r0
   69d58:	vldr	d1, [fp, #-0]
   69d5c:	vcvt.f64.s32	d0, s4
   69d60:	vcmp.f64	d0, d1
   69d64:	vmrs	APSR_nzcv, fpscr
   69d68:	subne	r6, ip, #128, 22	; 0x20000
   69d6c:	b	69d20 <luaL_openlibs@@Base+0x560>
   69d70:	cmn	r1, #11
   69d74:	bne	69d1c <luaL_openlibs@@Base+0x55c>
   69d78:	b	6c008 <luaL_openlibs@@Base+0x2848>
   69d7c:	ldrd	r0, [r9, sl]
   69d80:	ldrh	ip, [r6, #2]
   69d84:	add	r6, r6, #4
   69d88:	mvn	fp, fp
   69d8c:	add	ip, r6, ip, lsl #2
   69d90:	cmn	r1, #11
   69d94:	beq	6c008 <luaL_openlibs@@Base+0x2848>
   69d98:	cmp	r1, fp
   69d9c:	subeq	r6, ip, #128, 22	; 0x20000
   69da0:	ldrb	ip, [r6]
   69da4:	ldr	lr, [r6], #4
   69da8:	ldr	ip, [r7, ip, lsl #2]
   69dac:	and	sl, r4, lr, lsr #5
   69db0:	lsr	fp, lr, #16
   69db4:	bx	ip
   69db8:	ldrd	r0, [r9, sl]
   69dbc:	ldrh	ip, [r6, #2]
   69dc0:	add	r6, r6, #4
   69dc4:	mvn	fp, fp
   69dc8:	add	ip, r6, ip, lsl #2
   69dcc:	cmn	r1, #11
   69dd0:	beq	6c008 <luaL_openlibs@@Base+0x2848>
   69dd4:	cmp	r1, fp
   69dd8:	subne	r6, ip, #128, 22	; 0x20000
   69ddc:	ldrb	ip, [r6]
   69de0:	ldr	lr, [r6], #4
   69de4:	ldr	ip, [r7, ip, lsl #2]
   69de8:	and	sl, r4, lr, lsr #5
   69dec:	lsr	fp, lr, #16
   69df0:	bx	ip
   69df4:	add	fp, r9, fp, lsl #3
   69df8:	ldrh	ip, [r6, #2]
   69dfc:	ldrd	r0, [fp]
   69e00:	add	r6, r6, #4
   69e04:	add	ip, r6, ip, lsl #2
   69e08:	cmn	r1, #3
   69e0c:	subls	r6, ip, #128, 22	; 0x20000
   69e10:	strdls	r0, [r9, sl]
   69e14:	ldrb	ip, [r6]
   69e18:	ldr	lr, [r6], #4
   69e1c:	ldr	ip, [r7, ip, lsl #2]
   69e20:	and	sl, r4, lr, lsr #5
   69e24:	lsr	fp, lr, #16
   69e28:	bx	ip
   69e2c:	add	fp, r9, fp, lsl #3
   69e30:	ldrh	ip, [r6, #2]
   69e34:	ldrd	r0, [fp]
   69e38:	add	r6, r6, #4
   69e3c:	add	ip, r6, ip, lsl #2
   69e40:	cmn	r1, #3
   69e44:	subhi	r6, ip, #128, 22	; 0x20000
   69e48:	strdhi	r0, [r9, sl]
   69e4c:	ldrb	ip, [r6]
   69e50:	ldr	lr, [r6], #4
   69e54:	ldr	ip, [r7, ip, lsl #2]
   69e58:	and	sl, r4, lr, lsr #5
   69e5c:	lsr	fp, lr, #16
   69e60:	bx	ip
   69e64:	add	fp, r9, fp, lsl #3
   69e68:	ldrh	ip, [r6, #2]
   69e6c:	ldrd	r0, [fp]
   69e70:	add	r6, r6, #4
   69e74:	add	ip, r6, ip, lsl #2
   69e78:	cmn	r1, #3
   69e7c:	subls	r6, ip, #128, 22	; 0x20000
   69e80:	ldrb	ip, [r6]
   69e84:	ldr	lr, [r6], #4
   69e88:	ldr	ip, [r7, ip, lsl #2]
   69e8c:	and	sl, r4, lr, lsr #5
   69e90:	lsr	fp, lr, #16
   69e94:	bx	ip
   69e98:	add	fp, r9, fp, lsl #3
   69e9c:	ldrh	ip, [r6, #2]
   69ea0:	ldrd	r0, [fp]
   69ea4:	add	r6, r6, #4
   69ea8:	add	ip, r6, ip, lsl #2
   69eac:	cmn	r1, #3
   69eb0:	subhi	r6, ip, #128, 22	; 0x20000
   69eb4:	ldrb	ip, [r6]
   69eb8:	ldr	lr, [r6], #4
   69ebc:	ldr	ip, [r7, ip, lsl #2]
   69ec0:	and	sl, r4, lr, lsr #5
   69ec4:	lsr	fp, lr, #16
   69ec8:	bx	ip
   69ecc:	ldrd	r0, [r9, sl]
   69ed0:	ldrb	ip, [r6]
   69ed4:	cmn	r1, fp
   69ed8:	ldr	lr, [r6], #4
   69edc:	bne	6c024 <luaL_openlibs@@Base+0x2864>
   69ee0:	ldr	ip, [r7, ip, lsl #2]
   69ee4:	and	sl, r4, lr, lsr #5
   69ee8:	lsr	fp, lr, #16
   69eec:	bx	ip
   69ef0:	ldrd	r0, [r9, sl]
   69ef4:	ldrb	ip, [r6]
   69ef8:	cmn	r1, #14
   69efc:	ldr	lr, [r6], #4
   69f00:	bcs	6c024 <luaL_openlibs@@Base+0x2864>
   69f04:	ldr	ip, [r7, ip, lsl #2]
   69f08:	and	sl, r4, lr, lsr #5
   69f0c:	lsr	fp, lr, #16
   69f10:	bx	ip
   69f14:	lsl	fp, fp, #3
   69f18:	ldrb	ip, [r6]
   69f1c:	ldrd	r0, [r9, fp]
   69f20:	ldr	lr, [r6], #4
   69f24:	strd	r0, [r9, sl]
   69f28:	ldr	ip, [r7, ip, lsl #2]
   69f2c:	and	sl, r4, lr, lsr #5
   69f30:	lsr	fp, lr, #16
   69f34:	bx	ip
   69f38:	add	fp, r9, fp, lsl #3
   69f3c:	ldrb	ip, [r6]
   69f40:	ldr	r0, [fp, #4]
   69f44:	add	sl, r9, sl
   69f48:	ldr	lr, [r6], #4
   69f4c:	cmn	r0, #3
   69f50:	mvnls	r1, #1
   69f54:	mvnhi	r1, #2
   69f58:	str	r1, [sl, #4]
   69f5c:	ldr	ip, [r7, ip, lsl #2]
   69f60:	and	sl, r4, lr, lsr #5
   69f64:	lsr	fp, lr, #16
   69f68:	bx	ip
   69f6c:	lsl	fp, fp, #3
   69f70:	ldrd	r0, [r9, fp]
   69f74:	ldrb	ip, [r6]
   69f78:	ldr	lr, [r6], #4
   69f7c:	cmn	r1, #14
   69f80:	bhi	6c06c <luaL_openlibs@@Base+0x28ac>
   69f84:	eorne	r1, r1, #128, 8	; 0x80000000
   69f88:	bne	69f94 <luaL_openlibs@@Base+0x7d4>
   69f8c:	rsbseq	r0, r0, #0
   69f90:	ldrdvs	r0, [pc, #16]	; 69fa8 <luaL_openlibs@@Base+0x7e8>
   69f94:	strd	r0, [r9, sl]
   69f98:	ldr	ip, [r7, ip, lsl #2]
   69f9c:	and	sl, r4, lr, lsr #5
   69fa0:	lsr	fp, lr, #16
   69fa4:	bx	ip
   69fa8:	andeq	r0, r0, r0
   69fac:	mvnmi	r0, r0
   69fb0:	lsl	fp, fp, #3
   69fb4:	ldrd	r0, [r9, fp]
   69fb8:	cmn	r1, #5
   69fbc:	bne	69fe4 <luaL_openlibs@@Base+0x824>
   69fc0:	ldr	r0, [r0, #12]
   69fc4:	mvn	r1, #13
   69fc8:	ldrb	ip, [r6]
   69fcc:	ldr	lr, [r6], #4
   69fd0:	strd	r0, [r9, sl]
   69fd4:	ldr	ip, [r7, ip, lsl #2]
   69fd8:	and	sl, r4, lr, lsr #5
   69fdc:	lsr	fp, lr, #16
   69fe0:	bx	ip
   69fe4:	cmn	r1, #12
   69fe8:	bne	6c0cc <luaL_openlibs@@Base+0x290c>
   69fec:	bl	1f244 <lua_atpanic@@Base+0x74>
   69ff0:	b	69fc4 <luaL_openlibs@@Base+0x804>
   69ff4:	and	ip, r4, lr, lsr #21
   69ff8:	and	fp, r4, lr, lsr #13
   69ffc:	ldrd	r0, [ip, r9]!
   6a000:	ldrd	r2, [fp, r5]!
   6a004:	cmn	r1, #14
   6a008:	cmneq	r3, #14
   6a00c:	bne	6a034 <luaL_openlibs@@Base+0x874>
   6a010:	adds	r0, r0, r2
   6a014:	bvs	6c044 <luaL_openlibs@@Base+0x2884>
   6a018:	ldrb	ip, [r6]
   6a01c:	ldr	lr, [r6], #4
   6a020:	strd	r0, [r9, sl]
   6a024:	ldr	ip, [r7, ip, lsl #2]
   6a028:	and	sl, r4, lr, lsr #5
   6a02c:	lsr	fp, lr, #16
   6a030:	bx	ip
   6a034:	vldr	d6, [ip, #-0]
   6a038:	vldr	d7, [fp, #-0]
   6a03c:	cmn	r1, #14
   6a040:	cmncc	r3, #14
   6a044:	bcs	6c044 <luaL_openlibs@@Base+0x2884>
   6a048:	vadd.f64	d6, d6, d7
   6a04c:	ldrb	ip, [r6]
   6a050:	add	sl, r9, sl
   6a054:	ldr	lr, [r6], #4
   6a058:	vstr	d6, [sl, #-0]
   6a05c:	ldr	ip, [r7, ip, lsl #2]
   6a060:	and	sl, r4, lr, lsr #5
   6a064:	lsr	fp, lr, #16
   6a068:	bx	ip
   6a06c:	and	ip, r4, lr, lsr #21
   6a070:	and	fp, r4, lr, lsr #13
   6a074:	ldrd	r0, [ip, r9]!
   6a078:	ldrd	r2, [fp, r5]!
   6a07c:	cmn	r1, #14
   6a080:	cmneq	r3, #14
   6a084:	bne	6a0ac <luaL_openlibs@@Base+0x8ec>
   6a088:	subs	r0, r0, r2
   6a08c:	bvs	6c044 <luaL_openlibs@@Base+0x2884>
   6a090:	ldrb	ip, [r6]
   6a094:	ldr	lr, [r6], #4
   6a098:	strd	r0, [r9, sl]
   6a09c:	ldr	ip, [r7, ip, lsl #2]
   6a0a0:	and	sl, r4, lr, lsr #5
   6a0a4:	lsr	fp, lr, #16
   6a0a8:	bx	ip
   6a0ac:	vldr	d6, [ip, #-0]
   6a0b0:	vldr	d7, [fp, #-0]
   6a0b4:	cmn	r1, #14
   6a0b8:	cmncc	r3, #14
   6a0bc:	bcs	6c044 <luaL_openlibs@@Base+0x2884>
   6a0c0:	vsub.f64	d6, d6, d7
   6a0c4:	ldrb	ip, [r6]
   6a0c8:	add	sl, r9, sl
   6a0cc:	ldr	lr, [r6], #4
   6a0d0:	vstr	d6, [sl, #-0]
   6a0d4:	ldr	ip, [r7, ip, lsl #2]
   6a0d8:	and	sl, r4, lr, lsr #5
   6a0dc:	lsr	fp, lr, #16
   6a0e0:	bx	ip
   6a0e4:	and	ip, r4, lr, lsr #21
   6a0e8:	and	fp, r4, lr, lsr #13
   6a0ec:	ldrd	r0, [ip, r9]!
   6a0f0:	ldrd	r2, [fp, r5]!
   6a0f4:	cmn	r1, #14
   6a0f8:	cmneq	r3, #14
   6a0fc:	bne	6a128 <luaL_openlibs@@Base+0x968>
   6a100:	smull	r0, fp, r2, r0
   6a104:	cmp	fp, r0, asr #31
   6a108:	bne	6c044 <luaL_openlibs@@Base+0x2884>
   6a10c:	ldrb	ip, [r6]
   6a110:	ldr	lr, [r6], #4
   6a114:	strd	r0, [r9, sl]
   6a118:	ldr	ip, [r7, ip, lsl #2]
   6a11c:	and	sl, r4, lr, lsr #5
   6a120:	lsr	fp, lr, #16
   6a124:	bx	ip
   6a128:	vldr	d6, [ip, #-0]
   6a12c:	vldr	d7, [fp, #-0]
   6a130:	cmn	r1, #14
   6a134:	cmncc	r3, #14
   6a138:	bcs	6c044 <luaL_openlibs@@Base+0x2884>
   6a13c:	vmul.f64	d6, d6, d7
   6a140:	ldrb	ip, [r6]
   6a144:	add	sl, r9, sl
   6a148:	ldr	lr, [r6], #4
   6a14c:	vstr	d6, [sl, #-0]
   6a150:	ldr	ip, [r7, ip, lsl #2]
   6a154:	and	sl, r4, lr, lsr #5
   6a158:	lsr	fp, lr, #16
   6a15c:	bx	ip
   6a160:	and	ip, r4, lr, lsr #21
   6a164:	and	fp, r4, lr, lsr #13
   6a168:	ldrd	r0, [ip, r9]!
   6a16c:	ldrd	r2, [fp, r5]!
   6a170:	vldr	d0, [ip, #-0]
   6a174:	vldr	d1, [fp, #-0]
   6a178:	cmn	r1, #14
   6a17c:	cmncc	r3, #14
   6a180:	bcs	6c044 <luaL_openlibs@@Base+0x2884>
   6a184:	vdiv.f64	d0, d0, d1
   6a188:	ldrb	ip, [r6]
   6a18c:	add	sl, r9, sl
   6a190:	ldr	lr, [r6], #4
   6a194:	vstr	d0, [sl, #-0]
   6a198:	ldr	ip, [r7, ip, lsl #2]
   6a19c:	and	sl, r4, lr, lsr #5
   6a1a0:	lsr	fp, lr, #16
   6a1a4:	bx	ip
   6a1a8:	and	ip, r4, lr, lsr #21
   6a1ac:	and	fp, r4, lr, lsr #13
   6a1b0:	ldrd	r0, [ip, r9]!
   6a1b4:	ldrd	r2, [fp, r5]!
   6a1b8:	cmn	r1, #14
   6a1bc:	cmneq	r3, #14
   6a1c0:	bne	6a1f0 <luaL_openlibs@@Base+0xa30>
   6a1c4:	movs	r1, r2
   6a1c8:	beq	6c044 <luaL_openlibs@@Base+0x2884>
   6a1cc:	bl	6d820 <luaL_openlibs@@Base+0x4060>
   6a1d0:	mvn	r1, #13
   6a1d4:	ldrb	ip, [r6]
   6a1d8:	ldr	lr, [r6], #4
   6a1dc:	strd	r0, [r9, sl]
   6a1e0:	ldr	ip, [r7, ip, lsl #2]
   6a1e4:	and	sl, r4, lr, lsr #5
   6a1e8:	lsr	fp, lr, #16
   6a1ec:	bx	ip
   6a1f0:	vldr	d6, [ip, #-0]
   6a1f4:	vldr	d7, [fp, #-0]
   6a1f8:	cmn	r1, #14
   6a1fc:	cmncc	r3, #14
   6a200:	bcs	6c044 <luaL_openlibs@@Base+0x2884>
   6a204:	bl	6d7fc <luaL_openlibs@@Base+0x403c>
   6a208:	ldrb	ip, [r6]
   6a20c:	add	sl, r9, sl
   6a210:	ldr	lr, [r6], #4
   6a214:	vstr	d6, [sl, #-0]
   6a218:	ldr	ip, [r7, ip, lsl #2]
   6a21c:	and	sl, r4, lr, lsr #5
   6a220:	lsr	fp, lr, #16
   6a224:	bx	ip
   6a228:	and	ip, r4, lr, lsr #21
   6a22c:	and	fp, r4, lr, lsr #13
   6a230:	ldrd	r2, [ip, r9]!
   6a234:	ldrd	r0, [fp, r5]!
   6a238:	cmn	r3, #14
   6a23c:	cmneq	r1, #14
   6a240:	bne	6a268 <luaL_openlibs@@Base+0xaa8>
   6a244:	adds	r0, r0, r2
   6a248:	bvs	6c058 <luaL_openlibs@@Base+0x2898>
   6a24c:	ldrb	ip, [r6]
   6a250:	ldr	lr, [r6], #4
   6a254:	strd	r0, [r9, sl]
   6a258:	ldr	ip, [r7, ip, lsl #2]
   6a25c:	and	sl, r4, lr, lsr #5
   6a260:	lsr	fp, lr, #16
   6a264:	bx	ip
   6a268:	vldr	d7, [ip, #-0]
   6a26c:	vldr	d6, [fp, #-0]
   6a270:	cmn	r3, #14
   6a274:	cmncc	r1, #14
   6a278:	bcs	6c058 <luaL_openlibs@@Base+0x2898>
   6a27c:	vadd.f64	d6, d6, d7
   6a280:	ldrb	ip, [r6]
   6a284:	add	sl, r9, sl
   6a288:	ldr	lr, [r6], #4
   6a28c:	vstr	d6, [sl, #-0]
   6a290:	ldr	ip, [r7, ip, lsl #2]
   6a294:	and	sl, r4, lr, lsr #5
   6a298:	lsr	fp, lr, #16
   6a29c:	bx	ip
   6a2a0:	and	ip, r4, lr, lsr #21
   6a2a4:	and	fp, r4, lr, lsr #13
   6a2a8:	ldrd	r2, [ip, r9]!
   6a2ac:	ldrd	r0, [fp, r5]!
   6a2b0:	cmn	r3, #14
   6a2b4:	cmneq	r1, #14
   6a2b8:	bne	6a2e0 <luaL_openlibs@@Base+0xb20>
   6a2bc:	subs	r0, r0, r2
   6a2c0:	bvs	6c058 <luaL_openlibs@@Base+0x2898>
   6a2c4:	ldrb	ip, [r6]
   6a2c8:	ldr	lr, [r6], #4
   6a2cc:	strd	r0, [r9, sl]
   6a2d0:	ldr	ip, [r7, ip, lsl #2]
   6a2d4:	and	sl, r4, lr, lsr #5
   6a2d8:	lsr	fp, lr, #16
   6a2dc:	bx	ip
   6a2e0:	vldr	d7, [ip, #-0]
   6a2e4:	vldr	d6, [fp, #-0]
   6a2e8:	cmn	r3, #14
   6a2ec:	cmncc	r1, #14
   6a2f0:	bcs	6c058 <luaL_openlibs@@Base+0x2898>
   6a2f4:	vsub.f64	d6, d6, d7
   6a2f8:	ldrb	ip, [r6]
   6a2fc:	add	sl, r9, sl
   6a300:	ldr	lr, [r6], #4
   6a304:	vstr	d6, [sl, #-0]
   6a308:	ldr	ip, [r7, ip, lsl #2]
   6a30c:	and	sl, r4, lr, lsr #5
   6a310:	lsr	fp, lr, #16
   6a314:	bx	ip
   6a318:	and	ip, r4, lr, lsr #21
   6a31c:	and	fp, r4, lr, lsr #13
   6a320:	ldrd	r2, [ip, r9]!
   6a324:	ldrd	r0, [fp, r5]!
   6a328:	cmn	r3, #14
   6a32c:	cmneq	r1, #14
   6a330:	bne	6a35c <luaL_openlibs@@Base+0xb9c>
   6a334:	smull	r0, fp, r2, r0
   6a338:	cmp	fp, r0, asr #31
   6a33c:	bne	6c058 <luaL_openlibs@@Base+0x2898>
   6a340:	ldrb	ip, [r6]
   6a344:	ldr	lr, [r6], #4
   6a348:	strd	r0, [r9, sl]
   6a34c:	ldr	ip, [r7, ip, lsl #2]
   6a350:	and	sl, r4, lr, lsr #5
   6a354:	lsr	fp, lr, #16
   6a358:	bx	ip
   6a35c:	vldr	d7, [ip, #-0]
   6a360:	vldr	d6, [fp, #-0]
   6a364:	cmn	r3, #14
   6a368:	cmncc	r1, #14
   6a36c:	bcs	6c058 <luaL_openlibs@@Base+0x2898>
   6a370:	vmul.f64	d6, d6, d7
   6a374:	ldrb	ip, [r6]
   6a378:	add	sl, r9, sl
   6a37c:	ldr	lr, [r6], #4
   6a380:	vstr	d6, [sl, #-0]
   6a384:	ldr	ip, [r7, ip, lsl #2]
   6a388:	and	sl, r4, lr, lsr #5
   6a38c:	lsr	fp, lr, #16
   6a390:	bx	ip
   6a394:	and	ip, r4, lr, lsr #21
   6a398:	and	fp, r4, lr, lsr #13
   6a39c:	ldrd	r2, [ip, r9]!
   6a3a0:	ldrd	r0, [fp, r5]!
   6a3a4:	vldr	d1, [ip, #-0]
   6a3a8:	vldr	d0, [fp, #-0]
   6a3ac:	cmn	r3, #14
   6a3b0:	cmncc	r1, #14
   6a3b4:	bcs	6c058 <luaL_openlibs@@Base+0x2898>
   6a3b8:	vdiv.f64	d0, d0, d1
   6a3bc:	ldrb	ip, [r6]
   6a3c0:	add	sl, r9, sl
   6a3c4:	ldr	lr, [r6], #4
   6a3c8:	vstr	d0, [sl, #-0]
   6a3cc:	ldr	ip, [r7, ip, lsl #2]
   6a3d0:	and	sl, r4, lr, lsr #5
   6a3d4:	lsr	fp, lr, #16
   6a3d8:	bx	ip
   6a3dc:	and	ip, r4, lr, lsr #21
   6a3e0:	and	fp, r4, lr, lsr #13
   6a3e4:	ldrd	r2, [ip, r9]!
   6a3e8:	ldrd	r0, [fp, r5]!
   6a3ec:	cmn	r3, #14
   6a3f0:	cmneq	r1, #14
   6a3f4:	bne	6a424 <luaL_openlibs@@Base+0xc64>
   6a3f8:	movs	r1, r2
   6a3fc:	beq	6c058 <luaL_openlibs@@Base+0x2898>
   6a400:	bl	6d820 <luaL_openlibs@@Base+0x4060>
   6a404:	mvn	r1, #13
   6a408:	ldrb	ip, [r6]
   6a40c:	ldr	lr, [r6], #4
   6a410:	strd	r0, [r9, sl]
   6a414:	ldr	ip, [r7, ip, lsl #2]
   6a418:	and	sl, r4, lr, lsr #5
   6a41c:	lsr	fp, lr, #16
   6a420:	bx	ip
   6a424:	vldr	d7, [ip, #-0]
   6a428:	vldr	d6, [fp, #-0]
   6a42c:	cmn	r3, #14
   6a430:	cmncc	r1, #14
   6a434:	bcs	6c058 <luaL_openlibs@@Base+0x2898>
   6a438:	bl	6d7fc <luaL_openlibs@@Base+0x403c>
   6a43c:	ldrb	ip, [r6]
   6a440:	add	sl, r9, sl
   6a444:	ldr	lr, [r6], #4
   6a448:	vstr	d6, [sl, #-0]
   6a44c:	ldr	ip, [r7, ip, lsl #2]
   6a450:	and	sl, r4, lr, lsr #5
   6a454:	lsr	fp, lr, #16
   6a458:	bx	ip
   6a45c:	and	ip, r4, lr, lsr #21
   6a460:	and	fp, r4, lr, lsr #13
   6a464:	ldrd	r0, [ip, r9]!
   6a468:	ldrd	r2, [fp, r9]!
   6a46c:	cmn	r1, #14
   6a470:	cmneq	r3, #14
   6a474:	bne	6a49c <luaL_openlibs@@Base+0xcdc>
   6a478:	adds	r0, r0, r2
   6a47c:	bvs	6c080 <luaL_openlibs@@Base+0x28c0>
   6a480:	ldrb	ip, [r6]
   6a484:	ldr	lr, [r6], #4
   6a488:	strd	r0, [r9, sl]
   6a48c:	ldr	ip, [r7, ip, lsl #2]
   6a490:	and	sl, r4, lr, lsr #5
   6a494:	lsr	fp, lr, #16
   6a498:	bx	ip
   6a49c:	vldr	d6, [ip, #-0]
   6a4a0:	vldr	d7, [fp, #-0]
   6a4a4:	cmn	r1, #14
   6a4a8:	cmncc	r3, #14
   6a4ac:	bcs	6c080 <luaL_openlibs@@Base+0x28c0>
   6a4b0:	vadd.f64	d6, d6, d7
   6a4b4:	ldrb	ip, [r6]
   6a4b8:	add	sl, r9, sl
   6a4bc:	ldr	lr, [r6], #4
   6a4c0:	vstr	d6, [sl, #-0]
   6a4c4:	ldr	ip, [r7, ip, lsl #2]
   6a4c8:	and	sl, r4, lr, lsr #5
   6a4cc:	lsr	fp, lr, #16
   6a4d0:	bx	ip
   6a4d4:	and	ip, r4, lr, lsr #21
   6a4d8:	and	fp, r4, lr, lsr #13
   6a4dc:	ldrd	r0, [ip, r9]!
   6a4e0:	ldrd	r2, [fp, r9]!
   6a4e4:	cmn	r1, #14
   6a4e8:	cmneq	r3, #14
   6a4ec:	bne	6a514 <luaL_openlibs@@Base+0xd54>
   6a4f0:	subs	r0, r0, r2
   6a4f4:	bvs	6c080 <luaL_openlibs@@Base+0x28c0>
   6a4f8:	ldrb	ip, [r6]
   6a4fc:	ldr	lr, [r6], #4
   6a500:	strd	r0, [r9, sl]
   6a504:	ldr	ip, [r7, ip, lsl #2]
   6a508:	and	sl, r4, lr, lsr #5
   6a50c:	lsr	fp, lr, #16
   6a510:	bx	ip
   6a514:	vldr	d6, [ip, #-0]
   6a518:	vldr	d7, [fp, #-0]
   6a51c:	cmn	r1, #14
   6a520:	cmncc	r3, #14
   6a524:	bcs	6c080 <luaL_openlibs@@Base+0x28c0>
   6a528:	vsub.f64	d6, d6, d7
   6a52c:	ldrb	ip, [r6]
   6a530:	add	sl, r9, sl
   6a534:	ldr	lr, [r6], #4
   6a538:	vstr	d6, [sl, #-0]
   6a53c:	ldr	ip, [r7, ip, lsl #2]
   6a540:	and	sl, r4, lr, lsr #5
   6a544:	lsr	fp, lr, #16
   6a548:	bx	ip
   6a54c:	and	ip, r4, lr, lsr #21
   6a550:	and	fp, r4, lr, lsr #13
   6a554:	ldrd	r0, [ip, r9]!
   6a558:	ldrd	r2, [fp, r9]!
   6a55c:	cmn	r1, #14
   6a560:	cmneq	r3, #14
   6a564:	bne	6a590 <luaL_openlibs@@Base+0xdd0>
   6a568:	smull	r0, fp, r2, r0
   6a56c:	cmp	fp, r0, asr #31
   6a570:	bne	6c080 <luaL_openlibs@@Base+0x28c0>
   6a574:	ldrb	ip, [r6]
   6a578:	ldr	lr, [r6], #4
   6a57c:	strd	r0, [r9, sl]
   6a580:	ldr	ip, [r7, ip, lsl #2]
   6a584:	and	sl, r4, lr, lsr #5
   6a588:	lsr	fp, lr, #16
   6a58c:	bx	ip
   6a590:	vldr	d6, [ip, #-0]
   6a594:	vldr	d7, [fp, #-0]
   6a598:	cmn	r1, #14
   6a59c:	cmncc	r3, #14
   6a5a0:	bcs	6c080 <luaL_openlibs@@Base+0x28c0>
   6a5a4:	vmul.f64	d6, d6, d7
   6a5a8:	ldrb	ip, [r6]
   6a5ac:	add	sl, r9, sl
   6a5b0:	ldr	lr, [r6], #4
   6a5b4:	vstr	d6, [sl, #-0]
   6a5b8:	ldr	ip, [r7, ip, lsl #2]
   6a5bc:	and	sl, r4, lr, lsr #5
   6a5c0:	lsr	fp, lr, #16
   6a5c4:	bx	ip
   6a5c8:	and	ip, r4, lr, lsr #21
   6a5cc:	and	fp, r4, lr, lsr #13
   6a5d0:	ldrd	r0, [ip, r9]!
   6a5d4:	ldrd	r2, [fp, r9]!
   6a5d8:	vldr	d0, [ip, #-0]
   6a5dc:	vldr	d1, [fp, #-0]
   6a5e0:	cmn	r1, #14
   6a5e4:	cmncc	r3, #14
   6a5e8:	bcs	6c080 <luaL_openlibs@@Base+0x28c0>
   6a5ec:	vdiv.f64	d0, d0, d1
   6a5f0:	ldrb	ip, [r6]
   6a5f4:	add	sl, r9, sl
   6a5f8:	ldr	lr, [r6], #4
   6a5fc:	vstr	d0, [sl, #-0]
   6a600:	ldr	ip, [r7, ip, lsl #2]
   6a604:	and	sl, r4, lr, lsr #5
   6a608:	lsr	fp, lr, #16
   6a60c:	bx	ip
   6a610:	and	ip, r4, lr, lsr #21
   6a614:	and	fp, r4, lr, lsr #13
   6a618:	ldrd	r0, [ip, r9]!
   6a61c:	ldrd	r2, [fp, r9]!
   6a620:	cmn	r1, #14
   6a624:	cmneq	r3, #14
   6a628:	bne	6a658 <luaL_openlibs@@Base+0xe98>
   6a62c:	movs	r1, r2
   6a630:	beq	6c080 <luaL_openlibs@@Base+0x28c0>
   6a634:	bl	6d820 <luaL_openlibs@@Base+0x4060>
   6a638:	mvn	r1, #13
   6a63c:	ldrb	ip, [r6]
   6a640:	ldr	lr, [r6], #4
   6a644:	strd	r0, [r9, sl]
   6a648:	ldr	ip, [r7, ip, lsl #2]
   6a64c:	and	sl, r4, lr, lsr #5
   6a650:	lsr	fp, lr, #16
   6a654:	bx	ip
   6a658:	vldr	d6, [ip, #-0]
   6a65c:	vldr	d7, [fp, #-0]
   6a660:	cmn	r1, #14
   6a664:	cmncc	r3, #14
   6a668:	bcs	6c080 <luaL_openlibs@@Base+0x28c0>
   6a66c:	bl	6d7fc <luaL_openlibs@@Base+0x403c>
   6a670:	ldrb	ip, [r6]
   6a674:	add	sl, r9, sl
   6a678:	ldr	lr, [r6], #4
   6a67c:	vstr	d6, [sl, #-0]
   6a680:	ldr	ip, [r7, ip, lsl #2]
   6a684:	and	sl, r4, lr, lsr #5
   6a688:	lsr	fp, lr, #16
   6a68c:	bx	ip
   6a690:	and	ip, r4, lr, lsr #21
   6a694:	and	fp, r4, lr, lsr #13
   6a698:	ldrd	r0, [ip, r9]!
   6a69c:	ldrd	r2, [fp, r9]!
   6a6a0:	vldr	d0, [ip, #-0]
   6a6a4:	vldr	d1, [fp, #-0]
   6a6a8:	cmn	r1, #14
   6a6ac:	cmncc	r3, #14
   6a6b0:	bcs	6c080 <luaL_openlibs@@Base+0x28c0>
   6a6b4:	bl	12ce8 <pow@plt>
   6a6b8:	ldrb	ip, [r6]
   6a6bc:	add	sl, r9, sl
   6a6c0:	ldr	lr, [r6], #4
   6a6c4:	vstr	d0, [sl, #-0]
   6a6c8:	ldr	ip, [r7, ip, lsl #2]
   6a6cc:	and	sl, r4, lr, lsr #5
   6a6d0:	lsr	fp, lr, #16
   6a6d4:	bx	ip
   6a6d8:	and	fp, r4, lr, lsr #21
   6a6dc:	and	ip, r4, lr, lsr #13
   6a6e0:	sub	r2, ip, fp
   6a6e4:	str	r9, [r8, #16]
   6a6e8:	add	r1, r9, ip
   6a6ec:	mov	r0, r8
   6a6f0:	str	r6, [sp, #8]
   6a6f4:	lsr	r2, r2, #3
   6a6f8:	bl	45ad0 <luaL_typerror@@Base+0xf764>
   6a6fc:	ldr	r9, [r8, #16]
   6a700:	cmp	r0, #0
   6a704:	bne	6c0b4 <luaL_openlibs@@Base+0x28f4>
   6a708:	ldrd	r2, [r9, fp]
   6a70c:	ldrb	ip, [r6]
   6a710:	ldr	lr, [r6], #4
   6a714:	strd	r2, [r9, sl]
   6a718:	ldr	ip, [r7, ip, lsl #2]
   6a71c:	and	sl, r4, lr, lsr #5
   6a720:	lsr	fp, lr, #16
   6a724:	bx	ip
   6a728:	mvn	fp, fp
   6a72c:	ldrb	ip, [r6]
   6a730:	ldr	r0, [r5, fp, lsl #2]
   6a734:	mvn	r1, #4
   6a738:	ldr	lr, [r6], #4
   6a73c:	strd	r0, [r9, sl]
   6a740:	ldr	ip, [r7, ip, lsl #2]
   6a744:	and	sl, r4, lr, lsr #5
   6a748:	lsr	fp, lr, #16
   6a74c:	bx	ip
   6a750:	mvn	fp, fp
   6a754:	ldrb	ip, [r6]
   6a758:	ldr	r0, [r5, fp, lsl #2]
   6a75c:	mvn	r1, #10
   6a760:	ldr	lr, [r6], #4
   6a764:	strd	r0, [r9, sl]
   6a768:	ldr	ip, [r7, ip, lsl #2]
   6a76c:	and	sl, r4, lr, lsr #5
   6a770:	lsr	fp, lr, #16
   6a774:	bx	ip
   6a778:	asr	r0, lr, #16
   6a77c:	mvn	r1, #13
   6a780:	ldrb	ip, [r6]
   6a784:	ldr	lr, [r6], #4
   6a788:	strd	r0, [r9, sl]
   6a78c:	ldr	ip, [r7, ip, lsl #2]
   6a790:	and	sl, r4, lr, lsr #5
   6a794:	lsr	fp, lr, #16
   6a798:	bx	ip
   6a79c:	lsl	fp, fp, #3
   6a7a0:	ldrb	ip, [r6]
   6a7a4:	ldrd	r0, [r5, fp]
   6a7a8:	ldr	lr, [r6], #4
   6a7ac:	strd	r0, [r9, sl]
   6a7b0:	ldr	ip, [r7, ip, lsl #2]
   6a7b4:	and	sl, r4, lr, lsr #5
   6a7b8:	lsr	fp, lr, #16
   6a7bc:	bx	ip
   6a7c0:	add	sl, r9, sl
   6a7c4:	mvn	fp, fp
   6a7c8:	ldrb	ip, [r6]
   6a7cc:	ldr	lr, [r6], #4
   6a7d0:	str	fp, [sl, #4]
   6a7d4:	ldr	ip, [r7, ip, lsl #2]
   6a7d8:	and	sl, r4, lr, lsr #5
   6a7dc:	lsr	fp, lr, #16
   6a7e0:	bx	ip
   6a7e4:	add	sl, r9, sl
   6a7e8:	add	fp, r9, fp, lsl #3
   6a7ec:	mvn	r0, #0
   6a7f0:	str	r0, [sl, #4]
   6a7f4:	add	sl, sl, #8
   6a7f8:	str	r0, [sl, #4]
   6a7fc:	cmp	sl, fp
   6a800:	add	sl, sl, #8
   6a804:	blt	6a7f8 <luaL_openlibs@@Base+0x1038>
   6a808:	ldrb	ip, [r6]
   6a80c:	ldr	lr, [r6], #4
   6a810:	ldr	ip, [r7, ip, lsl #2]
   6a814:	and	sl, r4, lr, lsr #5
   6a818:	lsr	fp, lr, #16
   6a81c:	bx	ip
   6a820:	ldr	r1, [r9, #-8]
   6a824:	lsl	fp, fp, #2
   6a828:	add	fp, fp, #20
   6a82c:	ldr	r1, [r1, fp]
   6a830:	ldr	r1, [r1, #16]
   6a834:	ldrd	r2, [r1]
   6a838:	ldrb	ip, [r6]
   6a83c:	ldr	lr, [r6], #4
   6a840:	strd	r2, [r9, sl]
   6a844:	ldr	ip, [r7, ip, lsl #2]
   6a848:	and	sl, r4, lr, lsr #5
   6a84c:	lsr	fp, lr, #16
   6a850:	bx	ip
   6a854:	ldr	r1, [r9, #-8]
   6a858:	lsr	sl, sl, #1
   6a85c:	add	sl, sl, #20
   6a860:	lsl	fp, fp, #3
   6a864:	ldr	r1, [r1, sl]
   6a868:	ldrd	r2, [r9, fp]
   6a86c:	ldrb	ip, [r1, #4]
   6a870:	ldrb	fp, [r1, #6]
   6a874:	ldr	r1, [r1, #16]
   6a878:	tst	ip, #4
   6a87c:	add	ip, r3, #4
   6a880:	cmpne	fp, #0
   6a884:	strd	r2, [r1]
   6a888:	bne	6a8a4 <luaL_openlibs@@Base+0x10e4>
   6a88c:	ldrb	ip, [r6]
   6a890:	ldr	lr, [r6], #4
   6a894:	ldr	ip, [r7, ip, lsl #2]
   6a898:	and	sl, r4, lr, lsr #5
   6a89c:	lsr	fp, lr, #16
   6a8a0:	bx	ip
   6a8a4:	cmn	ip, #10
   6a8a8:	ldrbhi	fp, [r2, #4]
   6a8ac:	bls	6a88c <luaL_openlibs@@Base+0x10cc>
   6a8b0:	sub	r0, r7, #2880	; 0xb40
   6a8b4:	tst	fp, #3
   6a8b8:	blne	175a8 <_start@@Base+0x41f8>
   6a8bc:	b	6a88c <luaL_openlibs@@Base+0x10cc>
   6a8c0:	ldr	r1, [r9, #-8]
   6a8c4:	lsr	sl, sl, #1
   6a8c8:	add	sl, sl, #20
   6a8cc:	mvn	fp, fp
   6a8d0:	ldr	r1, [r1, sl]
   6a8d4:	ldr	r2, [r5, fp, lsl #2]
   6a8d8:	ldrb	ip, [r1, #4]
   6a8dc:	ldrb	fp, [r1, #6]
   6a8e0:	ldr	r1, [r1, #16]
   6a8e4:	mvn	r3, #4
   6a8e8:	tst	ip, #4
   6a8ec:	ldrb	ip, [r2, #4]
   6a8f0:	strd	r2, [r1]
   6a8f4:	bne	6a910 <luaL_openlibs@@Base+0x1150>
   6a8f8:	ldrb	ip, [r6]
   6a8fc:	ldr	lr, [r6], #4
   6a900:	ldr	ip, [r7, ip, lsl #2]
   6a904:	and	sl, r4, lr, lsr #5
   6a908:	lsr	fp, lr, #16
   6a90c:	bx	ip
   6a910:	tst	ip, #3
   6a914:	cmpne	fp, #0
   6a918:	sub	r0, r7, #2880	; 0xb40
   6a91c:	blne	175a8 <_start@@Base+0x41f8>
   6a920:	b	6a8f8 <luaL_openlibs@@Base+0x1138>
   6a924:	ldr	r1, [r9, #-8]
   6a928:	lsr	sl, sl, #1
   6a92c:	add	sl, sl, #20
   6a930:	lsl	fp, fp, #3
   6a934:	ldr	r1, [r1, sl]
   6a938:	ldrd	r2, [r5, fp]
   6a93c:	ldr	r1, [r1, #16]
   6a940:	ldrb	ip, [r6]
   6a944:	ldr	lr, [r6], #4
   6a948:	strd	r2, [r1]
   6a94c:	ldr	ip, [r7, ip, lsl #2]
   6a950:	and	sl, r4, lr, lsr #5
   6a954:	lsr	fp, lr, #16
   6a958:	bx	ip
   6a95c:	ldr	r1, [r9, #-8]
   6a960:	lsr	sl, sl, #1
   6a964:	add	sl, sl, #20
   6a968:	ldr	r1, [r1, sl]
   6a96c:	mvn	fp, fp
   6a970:	ldr	r1, [r1, #16]
   6a974:	ldrb	ip, [r6]
   6a978:	ldr	lr, [r6], #4
   6a97c:	str	fp, [r1, #4]
   6a980:	ldr	ip, [r7, ip, lsl #2]
   6a984:	and	sl, r4, lr, lsr #5
   6a988:	lsr	fp, lr, #16
   6a98c:	bx	ip
   6a990:	ldr	r2, [r8, #32]
   6a994:	add	fp, r6, fp, lsl #2
   6a998:	str	r9, [r8, #16]
   6a99c:	cmp	r2, #0
   6a9a0:	sub	r6, fp, #128, 22	; 0x20000
   6a9a4:	beq	6a9b8 <luaL_openlibs@@Base+0x11f8>
   6a9a8:	mov	r0, r8
   6a9ac:	add	r1, r9, sl
   6a9b0:	bl	1f628 <lua_atpanic@@Base+0x458>
   6a9b4:	ldr	r9, [r8, #16]
   6a9b8:	ldrb	ip, [r6]
   6a9bc:	ldr	lr, [r6], #4
   6a9c0:	ldr	ip, [r7, ip, lsl #2]
   6a9c4:	and	sl, r4, lr, lsr #5
   6a9c8:	lsr	fp, lr, #16
   6a9cc:	bx	ip
   6a9d0:	mvn	fp, fp
   6a9d4:	str	r9, [r8, #16]
   6a9d8:	ldr	r1, [r5, fp, lsl #2]
   6a9dc:	str	r6, [sp, #8]
   6a9e0:	ldr	r2, [r9, #-8]
   6a9e4:	mov	r0, r8
   6a9e8:	bl	3f098 <luaL_typerror@@Base+0x8d2c>
   6a9ec:	ldr	r9, [r8, #16]
   6a9f0:	mvn	r1, #8
   6a9f4:	ldrb	ip, [r6]
   6a9f8:	ldr	lr, [r6], #4
   6a9fc:	strd	r0, [r9, sl]
   6aa00:	ldr	ip, [r7, ip, lsl #2]
   6aa04:	and	sl, r4, lr, lsr #5
   6aa08:	lsr	fp, lr, #16
   6aa0c:	bx	ip
   6aa10:	ldr	r2, [r7, #-2860]	; 0xfffff4d4
   6aa14:	ldr	r3, [r7, #-2856]	; 0xfffff4d8
   6aa18:	str	r9, [r8, #16]
   6aa1c:	str	r6, [sp, #8]
   6aa20:	cmp	r2, r3
   6aa24:	mov	r0, r8
   6aa28:	bcs	6aa6c <luaL_openlibs@@Base+0x12ac>
   6aa2c:	lsl	r1, fp, #21
   6aa30:	lsr	r2, fp, #11
   6aa34:	asr	fp, r1, #21
   6aa38:	lsr	r1, r1, #21
   6aa3c:	cmn	fp, #1
   6aa40:	addeq	r1, r1, #2
   6aa44:	bl	3fb80 <luaL_typerror@@Base+0x9814>
   6aa48:	ldr	r9, [r8, #16]
   6aa4c:	mvn	r1, #11
   6aa50:	ldrb	ip, [r6]
   6aa54:	ldr	lr, [r6], #4
   6aa58:	strd	r0, [r9, sl]
   6aa5c:	ldr	ip, [r7, ip, lsl #2]
   6aa60:	and	sl, r4, lr, lsr #5
   6aa64:	lsr	fp, lr, #16
   6aa68:	bx	ip
   6aa6c:	bl	3f074 <luaL_typerror@@Base+0x8d08>
   6aa70:	mov	r0, r8
   6aa74:	b	6aa2c <luaL_openlibs@@Base+0x126c>
   6aa78:	mvn	fp, fp
   6aa7c:	ldr	r2, [r7, #-2860]	; 0xfffff4d4
   6aa80:	ldr	r3, [r7, #-2856]	; 0xfffff4d8
   6aa84:	str	r9, [r8, #16]
   6aa88:	str	r6, [sp, #8]
   6aa8c:	cmp	r2, r3
   6aa90:	mov	r0, r8
   6aa94:	bcs	6aac4 <luaL_openlibs@@Base+0x1304>
   6aa98:	ldr	r1, [r5, fp, lsl #2]
   6aa9c:	bl	40770 <luaL_typerror@@Base+0xa404>
   6aaa0:	ldr	r9, [r8, #16]
   6aaa4:	mvn	r1, #11
   6aaa8:	ldrb	ip, [r6]
   6aaac:	ldr	lr, [r6], #4
   6aab0:	strd	r0, [r9, sl]
   6aab4:	ldr	ip, [r7, ip, lsl #2]
   6aab8:	and	sl, r4, lr, lsr #5
   6aabc:	lsr	fp, lr, #16
   6aac0:	bx	ip
   6aac4:	bl	3f074 <luaL_typerror@@Base+0x8d08>
   6aac8:	mov	r0, r8
   6aacc:	b	6aa98 <luaL_openlibs@@Base+0x12d8>
   6aad0:	ldr	r1, [r9, #-8]
   6aad4:	mvn	fp, fp
   6aad8:	ldr	r0, [r1, #8]
   6aadc:	ldr	fp, [r5, fp, lsl #2]
   6aae0:	b	6aba0 <luaL_openlibs@@Base+0x13e0>
   6aae4:	ldr	r1, [r9, #-8]
   6aae8:	mvn	fp, fp
   6aaec:	ldr	r0, [r1, #8]
   6aaf0:	ldr	fp, [r5, fp, lsl #2]
   6aaf4:	b	6adac <luaL_openlibs@@Base+0x15ec>
   6aaf8:	and	ip, r4, lr, lsr #21
   6aafc:	and	fp, r4, lr, lsr #13
   6ab00:	ldrd	r0, [r9, ip]
   6ab04:	ldrd	r2, [r9, fp]
   6ab08:	cmn	r1, #12
   6ab0c:	bne	6be48 <luaL_openlibs@@Base+0x2688>
   6ab10:	cmn	r3, #14
   6ab14:	ldreq	r3, [r0, #8]
   6ab18:	ldreq	r1, [r0, #24]
   6ab1c:	bne	6ab74 <luaL_openlibs@@Base+0x13b4>
   6ab20:	add	r3, r3, r2, lsl #3
   6ab24:	cmp	r2, r1
   6ab28:	ldrdcc	r2, [r3]
   6ab2c:	bcs	6be48 <luaL_openlibs@@Base+0x2688>
   6ab30:	ldrb	ip, [r6]
   6ab34:	cmn	r3, #1
   6ab38:	beq	6ab54 <luaL_openlibs@@Base+0x1394>
   6ab3c:	ldr	lr, [r6], #4
   6ab40:	strd	r2, [r9, sl]
   6ab44:	ldr	ip, [r7, ip, lsl #2]
   6ab48:	and	sl, r4, lr, lsr #5
   6ab4c:	lsr	fp, lr, #16
   6ab50:	bx	ip
   6ab54:	ldr	r1, [r0, #16]
   6ab58:	cmp	r1, #0
   6ab5c:	beq	6ab3c <luaL_openlibs@@Base+0x137c>
   6ab60:	ldrb	r1, [r1, #6]
   6ab64:	tst	r1, #1
   6ab68:	bne	6ab3c <luaL_openlibs@@Base+0x137c>
   6ab6c:	and	ip, r4, lr, lsr #21
   6ab70:	b	6be48 <luaL_openlibs@@Base+0x2688>
   6ab74:	cmn	r3, #5
   6ab78:	moveq	fp, r2
   6ab7c:	beq	6aba0 <luaL_openlibs@@Base+0x13e0>
   6ab80:	b	6be48 <luaL_openlibs@@Base+0x2688>
   6ab84:	and	ip, r4, lr, lsr #21
   6ab88:	and	fp, fp, #255	; 0xff
   6ab8c:	ldrd	r0, [r9, ip]
   6ab90:	mvn	fp, fp
   6ab94:	ldr	fp, [r5, fp, lsl #2]
   6ab98:	cmn	r1, #12
   6ab9c:	bne	6be00 <luaL_openlibs@@Base+0x2640>
   6aba0:	ldr	r2, [r0, #28]
   6aba4:	ldr	r3, [fp, #8]
   6aba8:	ldr	lr, [r0, #20]
   6abac:	mov	ip, r0
   6abb0:	and	r2, r2, r3
   6abb4:	add	r2, r2, r2, lsl #1
   6abb8:	add	lr, lr, r2, lsl #3
   6abbc:	ldrd	r0, [lr, #8]
   6abc0:	ldrd	r2, [lr]
   6abc4:	ldr	lr, [lr, #16]
   6abc8:	cmn	r1, #5
   6abcc:	cmpeq	r0, fp
   6abd0:	bne	6abf8 <luaL_openlibs@@Base+0x1438>
   6abd4:	cmn	r3, #1
   6abd8:	beq	6ac00 <luaL_openlibs@@Base+0x1440>
   6abdc:	ldrb	ip, [r6]
   6abe0:	ldr	lr, [r6], #4
   6abe4:	strd	r2, [r9, sl]
   6abe8:	ldr	ip, [r7, ip, lsl #2]
   6abec:	and	sl, r4, lr, lsr #5
   6abf0:	lsr	fp, lr, #16
   6abf4:	bx	ip
   6abf8:	cmp	lr, #0
   6abfc:	bne	6abbc <luaL_openlibs@@Base+0x13fc>
   6ac00:	ldr	r0, [ip, #16]
   6ac04:	mov	r2, #0
   6ac08:	mvn	r3, #0
   6ac0c:	cmp	r0, #0
   6ac10:	beq	6abdc <luaL_openlibs@@Base+0x141c>
   6ac14:	ldrb	r1, [r0, #6]
   6ac18:	tst	r1, #1
   6ac1c:	bne	6abdc <luaL_openlibs@@Base+0x141c>
   6ac20:	b	6be08 <luaL_openlibs@@Base+0x2648>
   6ac24:	and	ip, r4, lr, lsr #21
   6ac28:	and	fp, fp, #255	; 0xff
   6ac2c:	ldrd	r0, [r9, ip]
   6ac30:	cmn	r1, #12
   6ac34:	bne	6be2c <luaL_openlibs@@Base+0x266c>
   6ac38:	ldr	r2, [r0, #24]
   6ac3c:	ldr	r3, [r0, #8]
   6ac40:	lsl	r1, fp, #3
   6ac44:	cmp	fp, r2
   6ac48:	ldrdcc	r2, [r3, r1]
   6ac4c:	bcs	6be2c <luaL_openlibs@@Base+0x266c>
   6ac50:	ldrb	ip, [r6]
   6ac54:	cmn	r3, #1
   6ac58:	beq	6ac74 <luaL_openlibs@@Base+0x14b4>
   6ac5c:	ldr	lr, [r6], #4
   6ac60:	strd	r2, [r9, sl]
   6ac64:	ldr	ip, [r7, ip, lsl #2]
   6ac68:	and	sl, r4, lr, lsr #5
   6ac6c:	lsr	fp, lr, #16
   6ac70:	bx	ip
   6ac74:	ldr	r1, [r0, #16]
   6ac78:	cmp	r1, #0
   6ac7c:	beq	6ac5c <luaL_openlibs@@Base+0x149c>
   6ac80:	ldrb	r1, [r1, #6]
   6ac84:	tst	r1, #1
   6ac88:	bne	6ac5c <luaL_openlibs@@Base+0x149c>
   6ac8c:	b	6be2c <luaL_openlibs@@Base+0x266c>
   6ac90:	and	ip, r4, lr, lsr #21
   6ac94:	and	fp, r4, lr, lsr #13
   6ac98:	ldr	r0, [r9, ip]
   6ac9c:	ldr	r1, [r9, fp]
   6aca0:	ldr	r3, [r0, #8]
   6aca4:	ldr	r2, [r0, #24]
   6aca8:	add	r3, r3, r1, lsl #3
   6acac:	cmp	r1, r2
   6acb0:	bcs	6bea4 <luaL_openlibs@@Base+0x26e4>
   6acb4:	ldrd	r0, [r3]
   6acb8:	ldrb	ip, [r6]
   6acbc:	ldr	lr, [r6], #4
   6acc0:	strd	r0, [r9, sl]
   6acc4:	ldr	ip, [r7, ip, lsl #2]
   6acc8:	and	sl, r4, lr, lsr #5
   6accc:	lsr	fp, lr, #16
   6acd0:	bx	ip
   6acd4:	and	ip, r4, lr, lsr #21
   6acd8:	and	fp, r4, lr, lsr #13
   6acdc:	ldrd	r0, [r9, ip]
   6ace0:	ldrd	r2, [r9, fp]
   6ace4:	cmn	r1, #12
   6ace8:	bne	6bf00 <luaL_openlibs@@Base+0x2740>
   6acec:	cmn	r3, #14
   6acf0:	ldreq	r1, [r0, #8]
   6acf4:	ldreq	r3, [r0, #24]
   6acf8:	bne	6ad80 <luaL_openlibs@@Base+0x15c0>
   6acfc:	add	r1, r1, r2, lsl #3
   6ad00:	cmp	r2, r3
   6ad04:	ldrcc	lr, [r1, #4]
   6ad08:	bcs	6bf00 <luaL_openlibs@@Base+0x2740>
   6ad0c:	ldrb	ip, [r6]
   6ad10:	cmn	lr, #1
   6ad14:	ldrb	lr, [r0, #4]
   6ad18:	ldrd	r2, [r9, sl]
   6ad1c:	beq	6ad40 <luaL_openlibs@@Base+0x1580>
   6ad20:	tst	lr, #4
   6ad24:	strd	r2, [r1]
   6ad28:	bne	6ad68 <luaL_openlibs@@Base+0x15a8>
   6ad2c:	ldr	lr, [r6], #4
   6ad30:	ldr	ip, [r7, ip, lsl #2]
   6ad34:	and	sl, r4, lr, lsr #5
   6ad38:	lsr	fp, lr, #16
   6ad3c:	bx	ip
   6ad40:	ldr	sl, [r0, #16]
   6ad44:	cmp	sl, #0
   6ad48:	beq	6ad20 <luaL_openlibs@@Base+0x1560>
   6ad4c:	ldrb	sl, [sl, #6]
   6ad50:	tst	sl, #2
   6ad54:	bne	6ad20 <luaL_openlibs@@Base+0x1560>
   6ad58:	ldr	lr, [r6, #-4]
   6ad5c:	and	ip, r4, lr, lsr #21
   6ad60:	and	sl, r4, lr, lsr #5
   6ad64:	b	6bf00 <luaL_openlibs@@Base+0x2740>
   6ad68:	ldr	r2, [r7, #-2832]	; 0xfffff4f0
   6ad6c:	bic	lr, lr, #4
   6ad70:	str	r0, [r7, #-2832]	; 0xfffff4f0
   6ad74:	strb	lr, [r0, #4]
   6ad78:	str	r2, [r0, #12]
   6ad7c:	b	6ad2c <luaL_openlibs@@Base+0x156c>
   6ad80:	cmn	r3, #5
   6ad84:	moveq	fp, r2
   6ad88:	beq	6adac <luaL_openlibs@@Base+0x15ec>
   6ad8c:	b	6bf00 <luaL_openlibs@@Base+0x2740>
   6ad90:	and	ip, r4, lr, lsr #21
   6ad94:	and	fp, fp, #255	; 0xff
   6ad98:	ldrd	r0, [r9, ip]
   6ad9c:	mvn	fp, fp
   6ada0:	ldr	fp, [r5, fp, lsl #2]
   6ada4:	cmn	r1, #12
   6ada8:	bne	6beb8 <luaL_openlibs@@Base+0x26f8>
   6adac:	ldr	r2, [r0, #28]
   6adb0:	ldr	r3, [fp, #8]
   6adb4:	ldr	lr, [r0, #20]
   6adb8:	mov	ip, r0
   6adbc:	and	r2, r2, r3
   6adc0:	add	r2, r2, r2, lsl #1
   6adc4:	mov	r3, #0
   6adc8:	add	lr, lr, r2, lsl #3
   6adcc:	strb	r3, [ip, #6]
   6add0:	ldrd	r0, [lr, #8]
   6add4:	ldr	r3, [lr, #4]
   6add8:	ldr	r2, [lr, #16]
   6addc:	cmn	r1, #5
   6ade0:	cmpeq	r0, fp
   6ade4:	bne	6ae38 <luaL_openlibs@@Base+0x1678>
   6ade8:	ldrb	r1, [ip, #4]
   6adec:	cmn	r3, #1
   6adf0:	ldrd	r2, [r9, sl]
   6adf4:	beq	6ae1c <luaL_openlibs@@Base+0x165c>
   6adf8:	tst	r1, #4
   6adfc:	strd	r2, [lr]
   6ae00:	bne	6ae8c <luaL_openlibs@@Base+0x16cc>
   6ae04:	ldrb	ip, [r6]
   6ae08:	ldr	lr, [r6], #4
   6ae0c:	ldr	ip, [r7, ip, lsl #2]
   6ae10:	and	sl, r4, lr, lsr #5
   6ae14:	lsr	fp, lr, #16
   6ae18:	bx	ip
   6ae1c:	ldr	r0, [ip, #16]
   6ae20:	cmp	r0, #0
   6ae24:	beq	6adf8 <luaL_openlibs@@Base+0x1638>
   6ae28:	ldrb	r0, [r0, #6]
   6ae2c:	tst	r0, #2
   6ae30:	bne	6adf8 <luaL_openlibs@@Base+0x1638>
   6ae34:	b	6bec0 <luaL_openlibs@@Base+0x2700>
   6ae38:	movs	lr, r2
   6ae3c:	bne	6add0 <luaL_openlibs@@Base+0x1610>
   6ae40:	ldr	r0, [ip, #16]
   6ae44:	mov	r2, sp
   6ae48:	str	r6, [sp, #8]
   6ae4c:	cmp	r0, #0
   6ae50:	str	r9, [r8, #16]
   6ae54:	ldrbne	r1, [r0, #6]
   6ae58:	mov	r0, r8
   6ae5c:	beq	6ae68 <luaL_openlibs@@Base+0x16a8>
   6ae60:	tst	r1, #2
   6ae64:	beq	6bec0 <luaL_openlibs@@Base+0x2700>
   6ae68:	mvn	r3, #4
   6ae6c:	str	fp, [sp]
   6ae70:	mov	r1, ip
   6ae74:	str	r3, [sp, #4]
   6ae78:	bl	3df64 <luaL_typerror@@Base+0x7bf8>
   6ae7c:	ldr	r9, [r8, #16]
   6ae80:	ldrd	r2, [r9, sl]
   6ae84:	strd	r2, [r0]
   6ae88:	b	6ae04 <luaL_openlibs@@Base+0x1644>
   6ae8c:	ldr	r2, [r7, #-2832]	; 0xfffff4f0
   6ae90:	bic	r1, r1, #4
   6ae94:	str	ip, [r7, #-2832]	; 0xfffff4f0
   6ae98:	strb	r1, [ip, #4]
   6ae9c:	str	r2, [ip, #12]
   6aea0:	b	6ae04 <luaL_openlibs@@Base+0x1644>
   6aea4:	and	ip, r4, lr, lsr #21
   6aea8:	and	fp, fp, #255	; 0xff
   6aeac:	ldrd	r0, [r9, ip]
   6aeb0:	cmn	r1, #12
   6aeb4:	bne	6bee4 <luaL_openlibs@@Base+0x2724>
   6aeb8:	ldr	r2, [r0, #24]
   6aebc:	ldr	ip, [r0, #8]
   6aec0:	lsl	r1, fp, #3
   6aec4:	cmp	fp, r2
   6aec8:	ldrdcc	r2, [r1, ip]!
   6aecc:	bcs	6bee4 <luaL_openlibs@@Base+0x2724>
   6aed0:	ldrb	ip, [r6]
   6aed4:	cmn	r3, #1
   6aed8:	ldrb	lr, [r0, #4]
   6aedc:	ldrd	r2, [r9, sl]
   6aee0:	beq	6af04 <luaL_openlibs@@Base+0x1744>
   6aee4:	tst	lr, #4
   6aee8:	strd	r2, [r1]
   6aeec:	bne	6af28 <luaL_openlibs@@Base+0x1768>
   6aef0:	ldr	lr, [r6], #4
   6aef4:	ldr	ip, [r7, ip, lsl #2]
   6aef8:	and	sl, r4, lr, lsr #5
   6aefc:	lsr	fp, lr, #16
   6af00:	bx	ip
   6af04:	ldr	sl, [r0, #16]
   6af08:	cmp	sl, #0
   6af0c:	beq	6aee4 <luaL_openlibs@@Base+0x1724>
   6af10:	ldrb	sl, [sl, #6]
   6af14:	tst	sl, #2
   6af18:	bne	6aee4 <luaL_openlibs@@Base+0x1724>
   6af1c:	ldr	lr, [r6, #-4]
   6af20:	and	sl, r4, lr, lsr #5
   6af24:	b	6bee4 <luaL_openlibs@@Base+0x2724>
   6af28:	ldr	r2, [r7, #-2832]	; 0xfffff4f0
   6af2c:	bic	lr, lr, #4
   6af30:	str	r0, [r7, #-2832]	; 0xfffff4f0
   6af34:	strb	lr, [r0, #4]
   6af38:	str	r2, [r0, #12]
   6af3c:	b	6aef0 <luaL_openlibs@@Base+0x1730>
   6af40:	add	sl, r9, sl
   6af44:	ldr	ip, [sp, #4]
   6af48:	ldr	r1, [sl, #-8]
   6af4c:	ldr	r0, [r5, fp, lsl #3]
   6af50:	subs	ip, ip, #8
   6af54:	ldr	r3, [r1, #24]
   6af58:	beq	6af90 <luaL_openlibs@@Base+0x17d0>
   6af5c:	add	r2, r0, ip, lsr #3
   6af60:	cmp	r2, r3
   6af64:	ldr	r3, [r1, #8]
   6af68:	add	ip, sl, ip
   6af6c:	bhi	6afa8 <luaL_openlibs@@Base+0x17e8>
   6af70:	add	lr, r3, r0, lsl #3
   6af74:	ldrb	r0, [r1, #4]
   6af78:	ldrd	r2, [sl], #8
   6af7c:	strd	r2, [lr], #8
   6af80:	cmp	sl, ip
   6af84:	bcc	6af78 <luaL_openlibs@@Base+0x17b8>
   6af88:	tst	r0, #4
   6af8c:	bne	6afbc <luaL_openlibs@@Base+0x17fc>
   6af90:	ldrb	ip, [r6]
   6af94:	ldr	lr, [r6], #4
   6af98:	ldr	ip, [r7, ip, lsl #2]
   6af9c:	and	sl, r4, lr, lsr #5
   6afa0:	lsr	fp, lr, #16
   6afa4:	bx	ip
   6afa8:	str	r9, [r8, #16]
   6afac:	mov	r0, r8
   6afb0:	str	r6, [sp, #8]
   6afb4:	bl	3fa40 <luaL_typerror@@Base+0x96d4>
   6afb8:	b	6af44 <luaL_openlibs@@Base+0x1784>
   6afbc:	ldr	r2, [r7, #-2832]	; 0xfffff4f0
   6afc0:	bic	r0, r0, #4
   6afc4:	str	r1, [r7, #-2832]	; 0xfffff4f0
   6afc8:	strb	r0, [r1, #4]
   6afcc:	str	r2, [r1, #12]
   6afd0:	b	6af90 <luaL_openlibs@@Base+0x17d0>
   6afd4:	and	ip, r4, lr, lsr #21
   6afd8:	and	fp, r4, lr, lsr #13
   6afdc:	ldr	r1, [r9, ip]
   6afe0:	ldr	r2, [r9, fp]
   6afe4:	ldrb	lr, [r1, #4]
   6afe8:	ldr	r0, [r1, #8]
   6afec:	ldr	r3, [r1, #24]
   6aff0:	tst	lr, #4
   6aff4:	add	r0, r0, r2, lsl #3
   6aff8:	bne	6b024 <luaL_openlibs@@Base+0x1864>
   6affc:	cmp	r2, r3
   6b000:	bcs	6bf60 <luaL_openlibs@@Base+0x27a0>
   6b004:	ldrd	r2, [r9, sl]
   6b008:	ldrb	ip, [r6]
   6b00c:	ldr	lr, [r6], #4
   6b010:	strd	r2, [r0]
   6b014:	ldr	ip, [r7, ip, lsl #2]
   6b018:	and	sl, r4, lr, lsr #5
   6b01c:	lsr	fp, lr, #16
   6b020:	bx	ip
   6b024:	ldr	ip, [r7, #-2832]	; 0xfffff4f0
   6b028:	bic	lr, lr, #4
   6b02c:	str	r1, [r7, #-2832]	; 0xfffff4f0
   6b030:	strb	lr, [r1, #4]
   6b034:	str	ip, [r1, #12]
   6b038:	b	6affc <luaL_openlibs@@Base+0x183c>
   6b03c:	ldr	r0, [sp, #4]
   6b040:	and	fp, r4, lr, lsr #13
   6b044:	add	fp, fp, r0
   6b048:	b	6b050 <luaL_openlibs@@Base+0x1890>
   6b04c:	and	fp, r4, lr, lsr #13
   6b050:	mov	ip, r9
   6b054:	ldrd	r2, [r9, sl]!
   6b058:	sub	fp, fp, #8
   6b05c:	add	r9, r9, #8
   6b060:	cmn	r3, #9
   6b064:	bne	6c0e4 <luaL_openlibs@@Base+0x2924>
   6b068:	str	r6, [r9, #-4]
   6b06c:	ldr	r6, [r2, #16]
   6b070:	ldrb	ip, [r6]
   6b074:	ldr	lr, [r6], #4
   6b078:	ldr	ip, [r7, ip, lsl #2]
   6b07c:	and	sl, r4, lr, lsr #5
   6b080:	add	sl, sl, r9
   6b084:	bx	ip
   6b088:	ldr	r0, [sp, #4]
   6b08c:	add	fp, r0, fp, lsl #3
   6b090:	b	6b098 <luaL_openlibs@@Base+0x18d8>
   6b094:	lsl	fp, fp, #3
   6b098:	ldrd	r2, [sl, r9]!
   6b09c:	sub	fp, fp, #8
   6b0a0:	add	sl, sl, #8
   6b0a4:	cmn	r3, #9
   6b0a8:	bne	6c124 <luaL_openlibs@@Base+0x2964>
   6b0ac:	ldr	r6, [r9, #-4]
   6b0b0:	mov	ip, #0
   6b0b4:	ldrb	r3, [r2, #6]
   6b0b8:	tst	r6, #3
   6b0bc:	bne	6b124 <luaL_openlibs@@Base+0x1964>
   6b0c0:	str	r2, [r9, #-8]
   6b0c4:	cmp	fp, #0
   6b0c8:	beq	6b0e4 <luaL_openlibs@@Base+0x1924>
   6b0cc:	ldrd	r0, [sl, ip]
   6b0d0:	add	lr, ip, #8
   6b0d4:	cmp	lr, fp
   6b0d8:	strd	r0, [r9, ip]
   6b0dc:	mov	ip, lr
   6b0e0:	bne	6b0cc <luaL_openlibs@@Base+0x190c>
   6b0e4:	cmp	r3, #1
   6b0e8:	bhi	6b108 <luaL_openlibs@@Base+0x1948>
   6b0ec:	ldr	r6, [r2, #16]
   6b0f0:	ldrb	ip, [r6]
   6b0f4:	ldr	lr, [r6], #4
   6b0f8:	ldr	ip, [r7, ip, lsl #2]
   6b0fc:	and	sl, r4, lr, lsr #5
   6b100:	add	sl, sl, r9
   6b104:	bx	ip
   6b108:	ldr	lr, [r6, #-4]
   6b10c:	and	sl, r4, lr, lsr #5
   6b110:	sub	r0, r9, sl
   6b114:	ldr	r0, [r0, #-16]
   6b118:	ldr	r0, [r0, #16]
   6b11c:	ldr	r5, [r0, #-48]	; 0xffffffd0
   6b120:	b	6b0ec <luaL_openlibs@@Base+0x192c>
   6b124:	eor	r6, r6, #3
   6b128:	tst	r6, #7
   6b12c:	movne	r3, #0
   6b130:	bne	6b0c0 <luaL_openlibs@@Base+0x1900>
   6b134:	sub	r9, r9, r6
   6b138:	ldr	r6, [r9, #-4]
   6b13c:	tst	r6, #3
   6b140:	movne	r3, #0
   6b144:	b	6b0c0 <luaL_openlibs@@Base+0x1900>
   6b148:	add	sl, r9, sl
   6b14c:	mov	ip, r9
   6b150:	ldrd	r2, [sl, #-16]
   6b154:	ldrd	r0, [sl, #-8]
   6b158:	add	r9, sl, #8
   6b15c:	strd	r2, [sl, #8]
   6b160:	strd	r0, [sl, #16]
   6b164:	ldrd	r2, [sl, #-24]	; 0xffffffe8
   6b168:	mov	fp, #16
   6b16c:	strd	r2, [sl]
   6b170:	cmn	r3, #9
   6b174:	bne	6c0e4 <luaL_openlibs@@Base+0x2924>
   6b178:	str	r6, [r9, #-4]
   6b17c:	ldr	r6, [r2, #16]
   6b180:	ldrb	ip, [r6]
   6b184:	ldr	lr, [r6], #4
   6b188:	ldr	ip, [r7, ip, lsl #2]
   6b18c:	and	sl, r4, lr, lsr #5
   6b190:	add	sl, sl, r9
   6b194:	bx	ip
   6b198:	add	sl, r9, sl
   6b19c:	ldr	ip, [sl, #-16]
   6b1a0:	ldr	r0, [sl, #-8]
   6b1a4:	ldr	lr, [ip, #24]
   6b1a8:	ldr	r1, [ip, #8]
   6b1ac:	add	r6, r6, #4
   6b1b0:	subs	fp, r0, lr
   6b1b4:	add	r2, r1, r0, lsl #3
   6b1b8:	bcs	6b204 <luaL_openlibs@@Base+0x1a44>
   6b1bc:	ldrd	r2, [r2]
   6b1c0:	cmn	r3, #1
   6b1c4:	addeq	r0, r0, #1
   6b1c8:	beq	6b1b0 <luaL_openlibs@@Base+0x19f0>
   6b1cc:	ldrh	fp, [r6, #-2]
   6b1d0:	mvn	r1, #13
   6b1d4:	strd	r2, [sl, #8]
   6b1d8:	add	fp, r6, fp, lsl #2
   6b1dc:	add	ip, r0, #1
   6b1e0:	strd	r0, [sl]
   6b1e4:	sub	r6, fp, #128, 22	; 0x20000
   6b1e8:	str	ip, [sl, #-8]
   6b1ec:	ldrb	ip, [r6]
   6b1f0:	ldr	lr, [r6], #4
   6b1f4:	ldr	ip, [r7, ip, lsl #2]
   6b1f8:	and	sl, r4, lr, lsr #5
   6b1fc:	lsr	fp, lr, #16
   6b200:	bx	ip
   6b204:	ldr	r3, [ip, #28]
   6b208:	ldr	ip, [ip, #20]
   6b20c:	add	r0, fp, fp, lsl #1
   6b210:	cmp	fp, r3
   6b214:	add	r2, ip, r0, lsl #3
   6b218:	bhi	6b1ec <luaL_openlibs@@Base+0x1a2c>
   6b21c:	ldrd	r0, [r2]
   6b220:	cmn	r1, #1
   6b224:	add	fp, fp, #1
   6b228:	beq	6b20c <luaL_openlibs@@Base+0x1a4c>
   6b22c:	ldrh	ip, [r6, #-2]
   6b230:	add	fp, fp, lr
   6b234:	ldrd	r2, [r2, #8]
   6b238:	str	fp, [sl, #-8]
   6b23c:	strd	r0, [sl, #8]
   6b240:	add	fp, r6, ip, lsl #2
   6b244:	sub	r6, fp, #128, 22	; 0x20000
   6b248:	strd	r2, [sl]
   6b24c:	b	6b1ec <luaL_openlibs@@Base+0x1a2c>
   6b250:	and	ip, r4, lr, lsr #21
   6b254:	and	fp, r4, lr, lsr #13
   6b258:	ldr	r0, [r9, #-4]
   6b25c:	add	fp, r9, fp
   6b260:	add	sl, r9, sl
   6b264:	add	fp, fp, #3
   6b268:	add	r3, sl, ip
   6b26c:	sub	r2, r9, #8
   6b270:	sub	fp, fp, r0
   6b274:	cmp	ip, #0
   6b278:	sub	r0, r2, fp
   6b27c:	beq	6b2b4 <luaL_openlibs@@Base+0x1af4>
   6b280:	sub	r3, r3, #16
   6b284:	cmp	fp, r2
   6b288:	ldrdcc	r0, [fp], #8
   6b28c:	mvncs	r1, #0
   6b290:	cmp	sl, r3
   6b294:	strd	r0, [sl], #8
   6b298:	bcc	6b284 <luaL_openlibs@@Base+0x1ac4>
   6b29c:	ldrb	ip, [r6]
   6b2a0:	ldr	lr, [r6], #4
   6b2a4:	ldr	ip, [r7, ip, lsl #2]
   6b2a8:	and	sl, r4, lr, lsr #5
   6b2ac:	lsr	fp, lr, #16
   6b2b0:	bx	ip
   6b2b4:	ldr	r3, [r8, #24]
   6b2b8:	cmp	r0, #0
   6b2bc:	movle	ip, #8
   6b2c0:	addgt	ip, r0, #8
   6b2c4:	add	r1, sl, r0
   6b2c8:	str	ip, [sp, #4]
   6b2cc:	ble	6b29c <luaL_openlibs@@Base+0x1adc>
   6b2d0:	cmp	r1, r3
   6b2d4:	bhi	6b2ec <luaL_openlibs@@Base+0x1b2c>
   6b2d8:	ldrd	r0, [fp], #8
   6b2dc:	strd	r0, [sl], #8
   6b2e0:	cmp	fp, r2
   6b2e4:	bcc	6b2d8 <luaL_openlibs@@Base+0x1b18>
   6b2e8:	b	6b29c <luaL_openlibs@@Base+0x1adc>
   6b2ec:	lsr	r1, r0, #3
   6b2f0:	str	sl, [r8, #20]
   6b2f4:	mov	r0, r8
   6b2f8:	str	r9, [r8, #16]
   6b2fc:	sub	fp, fp, r9
   6b300:	str	r6, [sp, #8]
   6b304:	sub	sl, sl, r9
   6b308:	bl	1fd08 <lua_getstack@@Base+0x50>
   6b30c:	ldr	r9, [r8, #16]
   6b310:	add	sl, r9, sl
   6b314:	add	fp, r9, fp
   6b318:	sub	r2, r9, #8
   6b31c:	b	6b2d8 <luaL_openlibs@@Base+0x1b18>
   6b320:	add	sl, r9, sl
   6b324:	add	fp, r6, fp, lsl #2
   6b328:	ldrd	r0, [sl, #-24]	; 0xffffffe8
   6b32c:	ldr	r2, [sl, #-12]
   6b330:	ldr	r3, [sl, #-4]
   6b334:	cmn	r1, #9
   6b338:	ldrbeq	r0, [r0, #6]
   6b33c:	cmneq	r2, #12
   6b340:	cmneq	r3, #1
   6b344:	cmpeq	r0, #4
   6b348:	subeq	r6, fp, #128, 22	; 0x20000
   6b34c:	bne	6b374 <luaL_openlibs@@Base+0x1bb4>
   6b350:	ldrb	ip, [r6]
   6b354:	ldr	lr, [r6], #4
   6b358:	mov	r0, #0
   6b35c:	mvn	r1, #96, 22	; 0x18000
   6b360:	strd	r0, [sl, #-8]
   6b364:	ldr	ip, [r7, ip, lsl #2]
   6b368:	and	sl, r4, lr, lsr #5
   6b36c:	lsr	fp, lr, #16
   6b370:	bx	ip
   6b374:	mov	r0, #88	; 0x58
   6b378:	mov	ip, #69	; 0x45
   6b37c:	strb	r0, [r6, #-4]
   6b380:	sub	r6, fp, #128, 22	; 0x20000
   6b384:	strb	ip, [r6]
   6b388:	ldr	lr, [r6], #4
   6b38c:	b	6b364 <luaL_openlibs@@Base+0x1ba4>
   6b390:	ldr	r0, [sp, #4]
   6b394:	ldr	r6, [r9, #-4]
   6b398:	add	sl, r9, sl
   6b39c:	add	fp, r0, fp, lsl #3
   6b3a0:	b	6b3b0 <luaL_openlibs@@Base+0x1bf0>
   6b3a4:	ldr	r6, [r9, #-4]
   6b3a8:	lsl	fp, fp, #3
   6b3ac:	add	sl, r9, sl
   6b3b0:	str	fp, [sp, #4]
   6b3b4:	ands	r0, r6, #3
   6b3b8:	eor	r1, r6, #3
   6b3bc:	bne	6b438 <luaL_openlibs@@Base+0x1c78>
   6b3c0:	ldr	lr, [r6, #-4]
   6b3c4:	subs	r3, fp, #8
   6b3c8:	sub	r2, r9, #8
   6b3cc:	beq	6b3e4 <luaL_openlibs@@Base+0x1c24>
   6b3d0:	ldrd	r0, [sl], #8
   6b3d4:	add	r9, r9, #8
   6b3d8:	subs	r3, r3, #8
   6b3dc:	strd	r0, [r9, #-16]
   6b3e0:	bne	6b3d0 <luaL_openlibs@@Base+0x1c10>
   6b3e4:	and	sl, r4, lr, lsr #5
   6b3e8:	sub	r3, r2, sl
   6b3ec:	and	ip, r4, lr, lsr #21
   6b3f0:	ldr	r0, [r3, #-8]
   6b3f4:	cmp	ip, fp
   6b3f8:	bhi	6b420 <luaL_openlibs@@Base+0x1c60>
   6b3fc:	mov	r9, r3
   6b400:	ldr	r1, [r0, #16]
   6b404:	ldrb	ip, [r6]
   6b408:	ldr	lr, [r6], #4
   6b40c:	ldr	r5, [r1, #-48]	; 0xffffffd0
   6b410:	ldr	ip, [r7, ip, lsl #2]
   6b414:	and	sl, r4, lr, lsr #5
   6b418:	lsr	fp, lr, #16
   6b41c:	bx	ip
   6b420:	mvn	r1, #0
   6b424:	add	r9, r9, #8
   6b428:	add	fp, fp, #8
   6b42c:	str	r1, [r9, #-12]
   6b430:	b	6b3f4 <luaL_openlibs@@Base+0x1c34>
   6b434:	add	sl, r9, sl
   6b438:	tst	r1, #7
   6b43c:	bne	6ba6c <luaL_openlibs@@Base+0x22ac>
   6b440:	sub	r9, r9, r1
   6b444:	ldr	r6, [r9, #-4]
   6b448:	b	6b3b4 <luaL_openlibs@@Base+0x1bf4>
   6b44c:	ldr	r6, [r9, #-4]
   6b450:	lsl	fp, fp, #3
   6b454:	str	fp, [sp, #4]
   6b458:	ands	r0, r6, #3
   6b45c:	eor	r1, r6, #3
   6b460:	ldreq	lr, [r6, #-4]
   6b464:	bne	6b434 <luaL_openlibs@@Base+0x1c74>
   6b468:	sub	r3, r9, #8
   6b46c:	and	sl, r4, lr, lsr #5
   6b470:	sub	r9, r3, sl
   6b474:	and	ip, r4, lr, lsr #21
   6b478:	ldr	r0, [r9, #-8]
   6b47c:	cmp	ip, fp
   6b480:	bhi	6b4a4 <luaL_openlibs@@Base+0x1ce4>
   6b484:	ldr	r1, [r0, #16]
   6b488:	ldrb	ip, [r6]
   6b48c:	ldr	lr, [r6], #4
   6b490:	ldr	r5, [r1, #-48]	; 0xffffffd0
   6b494:	ldr	ip, [r7, ip, lsl #2]
   6b498:	and	sl, r4, lr, lsr #5
   6b49c:	lsr	fp, lr, #16
   6b4a0:	bx	ip
   6b4a4:	sub	r1, r3, #4
   6b4a8:	mvn	r2, #0
   6b4ac:	str	r2, [r1, fp]
   6b4b0:	add	fp, fp, #8
   6b4b4:	b	6b47c <luaL_openlibs@@Base+0x1cbc>
   6b4b8:	ldr	r6, [r9, #-4]
   6b4bc:	lsl	fp, fp, #3
   6b4c0:	str	fp, [sp, #4]
   6b4c4:	ands	r0, r6, #3
   6b4c8:	eor	r1, r6, #3
   6b4cc:	ldreq	lr, [r6, #-4]
   6b4d0:	bne	6b434 <luaL_openlibs@@Base+0x1c74>
   6b4d4:	ldrd	r0, [r9, sl]
   6b4d8:	sub	r3, r9, #8
   6b4dc:	and	sl, r4, lr, lsr #5
   6b4e0:	strd	r0, [r3]
   6b4e4:	sub	r9, r3, sl
   6b4e8:	and	ip, r4, lr, lsr #21
   6b4ec:	ldr	r0, [r9, #-8]
   6b4f0:	cmp	ip, fp
   6b4f4:	bhi	6b518 <luaL_openlibs@@Base+0x1d58>
   6b4f8:	ldr	r1, [r0, #16]
   6b4fc:	ldrb	ip, [r6]
   6b500:	ldr	lr, [r6], #4
   6b504:	ldr	r5, [r1, #-48]	; 0xffffffd0
   6b508:	ldr	ip, [r7, ip, lsl #2]
   6b50c:	and	sl, r4, lr, lsr #5
   6b510:	lsr	fp, lr, #16
   6b514:	bx	ip
   6b518:	sub	r1, r3, #4
   6b51c:	mvn	r2, #0
   6b520:	str	r2, [r1, fp]
   6b524:	add	fp, fp, #8
   6b528:	b	6b4f0 <luaL_openlibs@@Base+0x1d30>
   6b52c:	ldrd	r0, [sl, r9]!
   6b530:	add	fp, r6, fp, lsl #2
   6b534:	ldrd	r2, [sl, #8]
   6b538:	cmn	r1, #14
   6b53c:	ldr	ip, [sl, #20]
   6b540:	bne	6b588 <luaL_openlibs@@Base+0x1dc8>
   6b544:	cmn	r3, #14
   6b548:	ldr	r3, [sl, #16]
   6b54c:	cmneq	ip, #14
   6b550:	bne	6c14c <luaL_openlibs@@Base+0x298c>
   6b554:	cmp	r3, #0
   6b558:	blt	6b580 <luaL_openlibs@@Base+0x1dc0>
   6b55c:	cmp	r0, r2
   6b560:	subgt	r6, fp, #128, 22	; 0x20000
   6b564:	ldrb	ip, [r6]
   6b568:	ldr	lr, [r6], #4
   6b56c:	strd	r0, [sl, #24]
   6b570:	ldr	ip, [r7, ip, lsl #2]
   6b574:	and	sl, r4, lr, lsr #5
   6b578:	lsr	fp, lr, #16
   6b57c:	bx	ip
   6b580:	cmp	r2, r0
   6b584:	b	6b560 <luaL_openlibs@@Base+0x1da0>
   6b588:	cmncc	r3, #14
   6b58c:	cmncc	ip, #14
   6b590:	bcs	6c14c <luaL_openlibs@@Base+0x298c>
   6b594:	vldr	d0, [sl, #-0]
   6b598:	vldr	d1, [sl, #8]
   6b59c:	cmp	ip, #0
   6b5a0:	vstr	d0, [sl, #24]
   6b5a4:	vcmpge.f64	d0, d1
   6b5a8:	vcmplt.f64	d1, d0
   6b5ac:	vmrs	APSR_nzcv, fpscr
   6b5b0:	subhi	r6, fp, #128, 22	; 0x20000
   6b5b4:	ldrb	ip, [r6]
   6b5b8:	ldr	lr, [r6], #4
   6b5bc:	b	6b570 <luaL_openlibs@@Base+0x1db0>
   6b5c0:	ldrd	r0, [sl, r9]!
   6b5c4:	add	fp, r6, fp, lsl #2
   6b5c8:	ldrd	r2, [sl, #8]
   6b5cc:	cmn	r1, #14
   6b5d0:	ldr	ip, [sl, #20]
   6b5d4:	bne	6b624 <luaL_openlibs@@Base+0x1e64>
   6b5d8:	cmn	r3, #14
   6b5dc:	ldr	r3, [sl, #16]
   6b5e0:	cmneq	ip, #14
   6b5e4:	bne	6c14c <luaL_openlibs@@Base+0x298c>
   6b5e8:	cmp	r3, #0
   6b5ec:	blt	6b61c <luaL_openlibs@@Base+0x1e5c>
   6b5f0:	cmp	r0, r2
   6b5f4:	sub	r6, fp, #128, 22	; 0x20000
   6b5f8:	ldrhle	fp, [r6, #-2]
   6b5fc:	ldrb	ip, [r6]
   6b600:	ldr	lr, [r6], #4
   6b604:	strd	r0, [sl, #24]
   6b608:	ble	6b840 <luaL_openlibs@@Base+0x2080>
   6b60c:	ldr	ip, [r7, ip, lsl #2]
   6b610:	and	sl, r4, lr, lsr #5
   6b614:	lsr	fp, lr, #16
   6b618:	bx	ip
   6b61c:	cmp	r2, r0
   6b620:	b	6b5f4 <luaL_openlibs@@Base+0x1e34>
   6b624:	cmncc	r3, #14
   6b628:	cmncc	ip, #14
   6b62c:	bcs	6c14c <luaL_openlibs@@Base+0x298c>
   6b630:	vldr	d0, [sl, #-0]
   6b634:	vldr	d1, [sl, #8]
   6b638:	cmp	ip, #0
   6b63c:	vstr	d0, [sl, #24]
   6b640:	vcmpge.f64	d0, d1
   6b644:	vcmplt.f64	d1, d0
   6b648:	vmrs	APSR_nzcv, fpscr
   6b64c:	sub	r6, fp, #128, 22	; 0x20000
   6b650:	ldrhls	fp, [r6, #-2]
   6b654:	bls	6b840 <luaL_openlibs@@Base+0x2080>
   6b658:	ldrb	ip, [r6]
   6b65c:	ldr	lr, [r6], #4
   6b660:	b	6b60c <luaL_openlibs@@Base+0x1e4c>
   6b664:	lsr	r0, r6, #1
   6b668:	and	r0, r0, #126	; 0x7e
   6b66c:	sub	r0, r0, #128	; 0x80
   6b670:	ldrh	r1, [r7, r0]
   6b674:	subs	r1, r1, #2
   6b678:	strh	r1, [r7, r0]
   6b67c:	bcc	6d318 <luaL_openlibs@@Base+0x3b58>
   6b680:	ldrd	r0, [sl, r9]!
   6b684:	add	fp, r6, fp, lsl #2
   6b688:	ldrd	r2, [sl, #16]
   6b68c:	cmn	r1, #14
   6b690:	bne	6b6d8 <luaL_openlibs@@Base+0x1f18>
   6b694:	adds	r0, r0, r2
   6b698:	ldr	r3, [sl, #8]
   6b69c:	addvs	fp, r6, #128, 22	; 0x20000
   6b6a0:	cmp	r2, #0
   6b6a4:	blt	6b6d0 <luaL_openlibs@@Base+0x1f10>
   6b6a8:	cmp	r0, r3
   6b6ac:	suble	r6, fp, #128, 22	; 0x20000
   6b6b0:	strd	r0, [sl]
   6b6b4:	ldrb	ip, [r6]
   6b6b8:	ldr	lr, [r6], #4
   6b6bc:	strd	r0, [sl, #24]
   6b6c0:	ldr	ip, [r7, ip, lsl #2]
   6b6c4:	and	sl, r4, lr, lsr #5
   6b6c8:	lsr	fp, lr, #16
   6b6cc:	bx	ip
   6b6d0:	cmp	r3, r0
   6b6d4:	b	6b6ac <luaL_openlibs@@Base+0x1eec>
   6b6d8:	vldr	d0, [sl, #-0]
   6b6dc:	vldr	d2, [sl, #16]
   6b6e0:	vldr	d1, [sl, #8]
   6b6e4:	cmp	r3, #0
   6b6e8:	vadd.f64	d0, d0, d2
   6b6ec:	vcmpge.f64	d0, d1
   6b6f0:	vcmplt.f64	d1, d0
   6b6f4:	vmrs	APSR_nzcv, fpscr
   6b6f8:	vstr	d0, [sl, #-0]
   6b6fc:	vstr	d0, [sl, #24]
   6b700:	subls	r6, fp, #128, 22	; 0x20000
   6b704:	ldrb	ip, [r6]
   6b708:	ldr	lr, [r6], #4
   6b70c:	b	6b6c0 <luaL_openlibs@@Base+0x1f00>
   6b710:	ldrd	r0, [sl, r9]!
   6b714:	ldrd	r2, [sl, #16]
   6b718:	cmn	r1, #14
   6b71c:	bne	6b764 <luaL_openlibs@@Base+0x1fa4>
   6b720:	adds	r0, r0, r2
   6b724:	ldr	r3, [sl, #8]
   6b728:	bvs	6b73c <luaL_openlibs@@Base+0x1f7c>
   6b72c:	cmp	r2, #0
   6b730:	blt	6b75c <luaL_openlibs@@Base+0x1f9c>
   6b734:	cmp	r0, r3
   6b738:	strd	r0, [sl]
   6b73c:	ldrb	ip, [r6]
   6b740:	ldr	lr, [r6], #4
   6b744:	strd	r0, [sl, #24]
   6b748:	ble	6b840 <luaL_openlibs@@Base+0x2080>
   6b74c:	ldr	ip, [r7, ip, lsl #2]
   6b750:	and	sl, r4, lr, lsr #5
   6b754:	lsr	fp, lr, #16
   6b758:	bx	ip
   6b75c:	cmp	r3, r0
   6b760:	b	6b738 <luaL_openlibs@@Base+0x1f78>
   6b764:	vldr	d0, [sl, #-0]
   6b768:	vldr	d2, [sl, #16]
   6b76c:	vldr	d1, [sl, #8]
   6b770:	cmp	r3, #0
   6b774:	vadd.f64	d0, d0, d2
   6b778:	vcmpge.f64	d0, d1
   6b77c:	vcmplt.f64	d1, d0
   6b780:	vmrs	APSR_nzcv, fpscr
   6b784:	vstr	d0, [sl, #-0]
   6b788:	vstr	d0, [sl, #24]
   6b78c:	bls	6b840 <luaL_openlibs@@Base+0x2080>
   6b790:	ldrb	ip, [r6]
   6b794:	ldr	lr, [r6], #4
   6b798:	b	6b74c <luaL_openlibs@@Base+0x1f8c>
   6b79c:	lsr	r0, r6, #1
   6b7a0:	and	r0, r0, #126	; 0x7e
   6b7a4:	sub	r0, r0, #128	; 0x80
   6b7a8:	ldrh	r1, [r7, r0]
   6b7ac:	subs	r1, r1, #2
   6b7b0:	strh	r1, [r7, r0]
   6b7b4:	bcc	6d318 <luaL_openlibs@@Base+0x3b58>
   6b7b8:	ldrd	r0, [sl, r9]!
   6b7bc:	add	fp, r6, fp, lsl #2
   6b7c0:	cmn	r1, #1
   6b7c4:	subne	r6, fp, #128, 22	; 0x20000
   6b7c8:	strdne	r0, [sl, #-8]
   6b7cc:	ldrb	ip, [r6]
   6b7d0:	ldr	lr, [r6], #4
   6b7d4:	ldr	ip, [r7, ip, lsl #2]
   6b7d8:	and	sl, r4, lr, lsr #5
   6b7dc:	lsr	fp, lr, #16
   6b7e0:	bx	ip
   6b7e4:	ldrd	r0, [sl, r9]!
   6b7e8:	cmn	r1, #1
   6b7ec:	strdne	r0, [sl, #-8]
   6b7f0:	bne	6b840 <luaL_openlibs@@Base+0x2080>
   6b7f4:	ldrb	ip, [r6]
   6b7f8:	ldr	lr, [r6], #4
   6b7fc:	ldr	ip, [r7, ip, lsl #2]
   6b800:	and	sl, r4, lr, lsr #5
   6b804:	lsr	fp, lr, #16
   6b808:	bx	ip
   6b80c:	lsr	r0, r6, #1
   6b810:	and	r0, r0, #126	; 0x7e
   6b814:	sub	r0, r0, #128	; 0x80
   6b818:	ldrh	r1, [r7, r0]
   6b81c:	subs	r1, r1, #2
   6b820:	strh	r1, [r7, r0]
   6b824:	bcc	6d318 <luaL_openlibs@@Base+0x3b58>
   6b828:	ldrb	ip, [r6]
   6b82c:	ldr	lr, [r6], #4
   6b830:	ldr	ip, [r7, ip, lsl #2]
   6b834:	and	sl, r4, lr, lsr #5
   6b838:	lsr	fp, lr, #16
   6b83c:	bx	ip
   6b840:	ldr	r0, [r7, #-2224]	; 0xfffff750
   6b844:	mov	r1, #0
   6b848:	ldr	fp, [r0, fp, lsl #2]
   6b84c:	str	r1, [r7, #-2804]	; 0xfffff50c
   6b850:	ldr	sl, [fp, #52]	; 0x34
   6b854:	str	r9, [r7, #-2656]	; 0xfffff5a0
   6b858:	str	r8, [r7, #-2788]	; 0xfffff51c
   6b85c:	bx	sl
   6b860:	add	fp, r6, fp, lsl #2
   6b864:	sub	r6, fp, #128, 22	; 0x20000
   6b868:	ldrb	ip, [r6]
   6b86c:	ldr	lr, [r6], #4
   6b870:	ldr	ip, [r7, ip, lsl #2]
   6b874:	and	sl, r4, lr, lsr #5
   6b878:	lsr	fp, lr, #16
   6b87c:	bx	ip
   6b880:	lsr	r0, r6, #1
   6b884:	and	r0, r0, #126	; 0x7e
   6b888:	sub	r0, r0, #128	; 0x80
   6b88c:	ldrh	r1, [r7, r0]
   6b890:	subs	r1, r1, #1
   6b894:	strh	r1, [r7, r0]
   6b898:	bcc	6d350 <luaL_openlibs@@Base+0x3b90>
   6b89c:	ldr	r0, [r8, #24]
   6b8a0:	ldrb	r1, [r6, #-62]	; 0xffffffc2
   6b8a4:	ldr	r5, [r6, #-52]	; 0xffffffcc
   6b8a8:	cmp	sl, r0
   6b8ac:	bhi	6bba0 <luaL_openlibs@@Base+0x23e0>
   6b8b0:	ldrb	ip, [r6]
   6b8b4:	ldr	lr, [r6], #4
   6b8b8:	cmp	fp, r1, lsl #3
   6b8bc:	mvn	r3, #0
   6b8c0:	bcc	6b8d4 <luaL_openlibs@@Base+0x2114>
   6b8c4:	ldr	ip, [r7, ip, lsl #2]
   6b8c8:	and	sl, r4, lr, lsr #5
   6b8cc:	lsr	fp, lr, #16
   6b8d0:	bx	ip
   6b8d4:	strd	r2, [r9, fp]
   6b8d8:	add	fp, fp, #8
   6b8dc:	b	6b8b8 <luaL_openlibs@@Base+0x20f8>
   6b8e0:	ldr	r0, [r8, #24]
   6b8e4:	ldrb	r1, [r6, #-62]	; 0xffffffc2
   6b8e8:	ldr	r5, [r6, #-52]	; 0xffffffcc
   6b8ec:	cmp	sl, r0
   6b8f0:	bhi	6bba0 <luaL_openlibs@@Base+0x23e0>
   6b8f4:	cmp	fp, r1, lsl #3
   6b8f8:	mvn	r3, #0
   6b8fc:	bcc	6b908 <luaL_openlibs@@Base+0x2148>
   6b900:	lsr	fp, lr, #16
   6b904:	b	6b840 <luaL_openlibs@@Base+0x2080>
   6b908:	strd	r2, [r9, fp]
   6b90c:	add	fp, fp, #8
   6b910:	b	6b8f4 <luaL_openlibs@@Base+0x2134>
   6b914:	ldr	r0, [r8, #24]
   6b918:	add	r3, r9, fp
   6b91c:	add	sl, sl, fp
   6b920:	str	r2, [r3]
   6b924:	add	r1, fp, #11
   6b928:	ldr	r5, [r6, #-52]	; 0xffffffcc
   6b92c:	cmp	sl, r0
   6b930:	str	r1, [r3, #4]
   6b934:	bcs	6bba0 <luaL_openlibs@@Base+0x23e0>
   6b938:	ldrb	ip, [r6, #-62]	; 0xffffffc2
   6b93c:	mov	sl, r9
   6b940:	mov	fp, r3
   6b944:	cmp	ip, #0
   6b948:	add	r9, r3, #8
   6b94c:	beq	6b970 <luaL_openlibs@@Base+0x21b0>
   6b950:	mvn	r2, #0
   6b954:	cmp	sl, fp
   6b958:	ldrdcc	r0, [sl], #8
   6b95c:	movcs	r1, r2
   6b960:	strcc	r2, [sl, #-4]
   6b964:	subs	ip, ip, #1
   6b968:	strd	r0, [r3, #8]!
   6b96c:	bne	6b954 <luaL_openlibs@@Base+0x2194>
   6b970:	ldrb	ip, [r6]
   6b974:	ldr	lr, [r6], #4
   6b978:	ldr	ip, [r7, ip, lsl #2]
   6b97c:	and	sl, r4, lr, lsr #5
   6b980:	lsr	fp, lr, #16
   6b984:	bx	ip
   6b988:	udf	#16
   6b98c:	ldr	r3, [r2, #20]
   6b990:	add	r1, sl, fp
   6b994:	ldr	r0, [r8, #24]
   6b998:	add	fp, r9, fp
   6b99c:	str	r9, [r8, #16]
   6b9a0:	cmp	r1, r0
   6b9a4:	str	fp, [r8, #20]
   6b9a8:	mvn	r2, #1
   6b9ac:	mov	r0, r8
   6b9b0:	bhi	6bb98 <luaL_openlibs@@Base+0x23d8>
   6b9b4:	str	r2, [r7, #-2804]	; 0xfffff50c
   6b9b8:	blx	r3
   6b9bc:	ldr	r9, [r8, #16]
   6b9c0:	mvn	r2, #0
   6b9c4:	ldr	r1, [r8, #20]
   6b9c8:	str	r8, [r7, #-2660]	; 0xfffff59c
   6b9cc:	lsl	fp, r0, #3
   6b9d0:	str	r2, [r7, #-2804]	; 0xfffff50c
   6b9d4:	ldr	r6, [r9, #-4]
   6b9d8:	sub	sl, r1, fp
   6b9dc:	b	6ba54 <luaL_openlibs@@Base+0x2294>
   6b9e0:	ldr	r3, [r7, #-2676]	; 0xfffff58c
   6b9e4:	add	r1, sl, fp
   6b9e8:	ldr	r0, [r8, #24]
   6b9ec:	add	fp, r9, fp
   6b9f0:	str	r9, [r8, #16]
   6b9f4:	cmp	r1, r0
   6b9f8:	str	fp, [r8, #20]
   6b9fc:	ldr	r1, [r2, #20]
   6ba00:	mvn	r2, #1
   6ba04:	mov	r0, r8
   6ba08:	bhi	6bb98 <luaL_openlibs@@Base+0x23d8>
   6ba0c:	str	r2, [r7, #-2804]	; 0xfffff50c
   6ba10:	blx	r3
   6ba14:	ldr	r9, [r8, #16]
   6ba18:	mvn	r2, #0
   6ba1c:	ldr	r1, [r8, #20]
   6ba20:	str	r8, [r7, #-2660]	; 0xfffff59c
   6ba24:	lsl	fp, r0, #3
   6ba28:	str	r2, [r7, #-2804]	; 0xfffff50c
   6ba2c:	ldr	r6, [r9, #-4]
   6ba30:	sub	sl, r1, fp
   6ba34:	b	6ba54 <luaL_openlibs@@Base+0x2294>
   6ba38:	tst	r6, #4
   6ba3c:	beq	6bd88 <luaL_openlibs@@Base+0x25c8>
   6ba40:	ldr	r6, [ip, #-4]
   6ba44:	mvn	r1, #2
   6ba48:	mov	r9, ip
   6ba4c:	str	r1, [sl, #-4]
   6ba50:	sub	sl, sl, #8
   6ba54:	adds	fp, fp, #8
   6ba58:	mov	r0, #1
   6ba5c:	beq	6bb28 <luaL_openlibs@@Base+0x2368>
   6ba60:	str	fp, [sp, #4]
   6ba64:	ands	r0, r6, #3
   6ba68:	beq	6b3c0 <luaL_openlibs@@Base+0x1c00>
   6ba6c:	bic	ip, r6, #7
   6ba70:	cmp	r0, #1
   6ba74:	sub	ip, r9, ip
   6ba78:	bne	6ba38 <luaL_openlibs@@Base+0x2278>
   6ba7c:	str	ip, [r8, #16]
   6ba80:	ldr	r5, [sp, #20]
   6ba84:	mvn	r3, #1
   6ba88:	sub	r9, r9, #8
   6ba8c:	subs	r2, fp, #8
   6ba90:	lsl	r5, r5, #3
   6ba94:	str	r3, [r7, #-2804]	; 0xfffff50c
   6ba98:	beq	6baac <luaL_openlibs@@Base+0x22ec>
   6ba9c:	subs	r2, r2, #8
   6baa0:	ldrd	r0, [sl], #8
   6baa4:	strd	r0, [r9], #8
   6baa8:	bne	6ba9c <luaL_openlibs@@Base+0x22dc>
   6baac:	cmp	r5, fp
   6bab0:	bne	6bad4 <luaL_openlibs@@Base+0x2314>
   6bab4:	str	r9, [r8, #20]
   6bab8:	ldr	fp, [sp, #16]
   6babc:	mov	r0, #0
   6bac0:	str	fp, [r8, #40]	; 0x28
   6bac4:	ldr	r4, [sp, #28]
   6bac8:	add	sp, sp, #32
   6bacc:	vpop	{d8-d15}
   6bad0:	pop	{r5, r6, r7, r8, r9, sl, fp, pc}
   6bad4:	blt	6baf8 <luaL_openlibs@@Base+0x2338>
   6bad8:	ldr	r2, [r8, #24]
   6badc:	mvn	r1, #0
   6bae0:	cmp	r9, r2
   6bae4:	bcs	6bb08 <luaL_openlibs@@Base+0x2348>
   6bae8:	str	r1, [r9, #4]
   6baec:	add	fp, fp, #8
   6baf0:	add	r9, r9, #8
   6baf4:	b	6baac <luaL_openlibs@@Base+0x22ec>
   6baf8:	sub	r0, fp, r5
   6bafc:	cmp	r5, #0
   6bb00:	subne	r9, r9, r0
   6bb04:	b	6bab4 <luaL_openlibs@@Base+0x22f4>
   6bb08:	str	r9, [r8, #20]
   6bb0c:	lsr	r1, r5, #3
   6bb10:	mov	r0, r8
   6bb14:	bl	1fd08 <lua_getstack@@Base+0x50>
   6bb18:	ldr	r9, [r8, #20]
   6bb1c:	b	6baac <luaL_openlibs@@Base+0x22ec>
   6bb20:	mov	sp, r0
   6bb24:	mov	r0, r1
   6bb28:	ldr	r8, [sp, #12]
   6bb2c:	mvn	r3, #1
   6bb30:	ldr	r2, [r8, #8]
   6bb34:	str	r3, [r2, #76]	; 0x4c
   6bb38:	b	6bac4 <luaL_openlibs@@Base+0x2304>
   6bb3c:	bic	r0, r0, #3
   6bb40:	mov	sp, r0
   6bb44:	ldr	r8, [sp, #12]
   6bb48:	mov	r4, #255	; 0xff
   6bb4c:	mov	fp, #16
   6bb50:	lsl	r4, r4, #3
   6bb54:	ldr	r9, [r8, #16]
   6bb58:	ldr	r7, [r8, #8]
   6bb5c:	mvn	r0, #1
   6bb60:	sub	sl, r9, #8
   6bb64:	ldr	r6, [r9, #-4]
   6bb68:	add	r7, r7, #2880	; 0xb40
   6bb6c:	mvn	r1, #0
   6bb70:	str	r0, [r9, #-4]
   6bb74:	str	r1, [r7, #-2804]	; 0xfffff50c
   6bb78:	b	6ba54 <luaL_openlibs@@Base+0x2294>
   6bb7c:	push	{r0, r1, r2, lr}
   6bb80:	bl	12f04 <_Unwind_Complete@plt>
   6bb84:	ldr	r0, [sp]
   6bb88:	bl	13024 <_Unwind_DeleteException@plt>
   6bb8c:	pop	{r0, r1, r2, lr}
   6bb90:	mov	r0, r1
   6bb94:	bx	r2
   6bb98:	mov	r1, #20
   6bb9c:	b	6bbbc <luaL_openlibs@@Base+0x23fc>
   6bba0:	add	fp, r9, fp
   6bba4:	sub	sl, sl, r9
   6bba8:	mov	r0, r8
   6bbac:	str	r9, [r8, #16]
   6bbb0:	add	r6, r6, #4
   6bbb4:	str	fp, [r8, #20]
   6bbb8:	lsr	r1, sl, #3
   6bbbc:	str	r6, [sp, #8]
   6bbc0:	bl	1fd08 <lua_getstack@@Base+0x50>
   6bbc4:	ldr	r9, [r8, #16]
   6bbc8:	ldr	fp, [r8, #20]
   6bbcc:	ldr	r2, [r9, #-8]
   6bbd0:	sub	fp, fp, r9
   6bbd4:	ldr	r6, [r2, #16]
   6bbd8:	ldrb	ip, [r6]
   6bbdc:	ldr	lr, [r6], #4
   6bbe0:	ldr	ip, [r7, ip, lsl #2]
   6bbe4:	and	sl, r4, lr, lsr #5
   6bbe8:	add	sl, sl, r9
   6bbec:	bx	ip
   6bbf0:	push	{r5, r6, r7, r8, r9, sl, fp, lr}
   6bbf4:	vpush	{d8-d15}
   6bbf8:	sub	sp, sp, #32
   6bbfc:	str	r4, [sp, #28]
   6bc00:	mov	r8, r0
   6bc04:	ldr	r7, [r0, #8]
   6bc08:	mov	r9, r1
   6bc0c:	add	r7, r7, #2880	; 0xb40
   6bc10:	str	r8, [sp, #12]
   6bc14:	mov	r6, #5
   6bc18:	str	r2, [sp, #20]
   6bc1c:	add	r1, sp, #1
   6bc20:	ldrb	r0, [r8, #7]
   6bc24:	str	r2, [sp, #24]
   6bc28:	str	r8, [sp, #8]
   6bc2c:	str	r2, [sp, #16]
   6bc30:	cmp	r0, #0
   6bc34:	str	r1, [r8, #40]	; 0x28
   6bc38:	beq	6bcd4 <luaL_openlibs@@Base+0x2514>
   6bc3c:	str	r8, [r7, #-2660]	; 0xfffff59c
   6bc40:	mov	sl, r9
   6bc44:	ldr	r9, [r8, #16]
   6bc48:	ldr	r0, [r8, #20]
   6bc4c:	mov	r4, #255	; 0xff
   6bc50:	strb	r2, [r8, #7]
   6bc54:	sub	fp, r0, r9
   6bc58:	ldr	r6, [r9, #-4]
   6bc5c:	lsl	r4, r4, #3
   6bc60:	mvn	r1, #0
   6bc64:	add	fp, fp, #8
   6bc68:	ands	r0, r6, #3
   6bc6c:	str	r1, [r7, #-2804]	; 0xfffff50c
   6bc70:	str	fp, [sp, #4]
   6bc74:	beq	6b3c0 <luaL_openlibs@@Base+0x1c00>
   6bc78:	b	6ba6c <luaL_openlibs@@Base+0x22ac>
   6bc7c:	push	{r5, r6, r7, r8, r9, sl, fp, lr}
   6bc80:	vpush	{d8-d15}
   6bc84:	sub	sp, sp, #32
   6bc88:	str	r4, [sp, #28]
   6bc8c:	mov	r6, #5
   6bc90:	str	r3, [sp, #24]
   6bc94:	b	6bcac <luaL_openlibs@@Base+0x24ec>
   6bc98:	push	{r5, r6, r7, r8, r9, sl, fp, lr}
   6bc9c:	vpush	{d8-d15}
   6bca0:	sub	sp, sp, #32
   6bca4:	str	r4, [sp, #28]
   6bca8:	mov	r6, #1
   6bcac:	ldr	fp, [r0, #40]	; 0x28
   6bcb0:	str	r2, [sp, #20]
   6bcb4:	mov	r8, r0
   6bcb8:	str	r0, [sp, #12]
   6bcbc:	ldr	r7, [r8, #8]
   6bcc0:	mov	r9, r1
   6bcc4:	str	r0, [sp, #8]
   6bcc8:	str	fp, [sp, #16]
   6bccc:	add	r7, r7, #2880	; 0xb40
   6bcd0:	str	sp, [r8, #40]	; 0x28
   6bcd4:	str	r8, [r7, #-2660]	; 0xfffff59c
   6bcd8:	ldr	ip, [r8, #16]
   6bcdc:	ldr	r0, [r8, #20]
   6bce0:	mov	r4, #255	; 0xff
   6bce4:	add	r6, r6, r9
   6bce8:	lsl	r4, r4, #3
   6bcec:	sub	r6, r6, ip
   6bcf0:	mvn	r1, #0
   6bcf4:	sub	fp, r0, r9
   6bcf8:	str	r1, [r7, #-2804]	; 0xfffff50c
   6bcfc:	ldrd	r2, [r9, #-8]
   6bd00:	cmn	r3, #9
   6bd04:	bne	6c0e4 <luaL_openlibs@@Base+0x2924>
   6bd08:	str	r6, [r9, #-4]
   6bd0c:	ldr	r6, [r2, #16]
   6bd10:	ldrb	ip, [r6]
   6bd14:	ldr	lr, [r6], #4
   6bd18:	ldr	ip, [r7, ip, lsl #2]
   6bd1c:	and	sl, r4, lr, lsr #5
   6bd20:	add	sl, sl, r9
   6bd24:	bx	ip
   6bd28:	push	{r5, r6, r7, r8, r9, sl, fp, lr}
   6bd2c:	vpush	{d8-d15}
   6bd30:	sub	sp, sp, #32
   6bd34:	str	r4, [sp, #28]
   6bd38:	mov	r8, r0
   6bd3c:	ldr	sl, [r0, #28]
   6bd40:	str	r0, [sp, #12]
   6bd44:	ldr	r7, [r8, #8]
   6bd48:	ldr	ip, [r8, #20]
   6bd4c:	str	r0, [sp, #8]
   6bd50:	ldr	fp, [r8, #40]	; 0x28
   6bd54:	add	r7, r7, #2880	; 0xb40
   6bd58:	sub	sl, sl, ip
   6bd5c:	mov	ip, #0
   6bd60:	str	sl, [sp, #20]
   6bd64:	str	ip, [sp, #24]
   6bd68:	str	fp, [sp, #16]
   6bd6c:	str	sp, [r8, #40]	; 0x28
   6bd70:	str	r8, [r7, #-2660]	; 0xfffff59c
   6bd74:	blx	r3
   6bd78:	movs	r9, r0
   6bd7c:	mov	r6, #5
   6bd80:	bne	6bcd4 <luaL_openlibs@@Base+0x2514>
   6bd84:	b	6bab8 <luaL_openlibs@@Base+0x22f8>
   6bd88:	ldr	r2, [ip, #-8]
   6bd8c:	ldr	r0, [r9, #-16]
   6bd90:	mov	r3, r9
   6bd94:	mov	r9, ip
   6bd98:	cmp	r0, #1
   6bd9c:	ldr	r6, [r3, #-12]
   6bda0:	ldr	r2, [r2, #16]
   6bda4:	mvn	lr, #0
   6bda8:	add	r1, sl, fp
   6bdac:	str	lr, [r1, #-4]
   6bdb0:	bls	6bdbc <luaL_openlibs@@Base+0x25fc>
   6bdb4:	ldr	r5, [r2, #-48]	; 0xffffffd0
   6bdb8:	bx	r0
   6bdbc:	beq	6da04 <luaL_openlibs@@Base+0x4244>
   6bdc0:	sub	r3, r3, #16
   6bdc4:	sub	fp, r3, r9
   6bdc8:	b	6d210 <luaL_openlibs@@Base+0x3a50>
   6bdcc:	ldr	lr, [r6, #-4]
   6bdd0:	sub	r1, r3, #16
   6bdd4:	ldrd	r2, [sl]
   6bdd8:	str	r9, [r8, #16]
   6bddc:	and	fp, r4, lr, lsr #21
   6bde0:	and	sl, r4, lr, lsr #5
   6bde4:	add	r0, r9, fp
   6bde8:	subs	r0, r1, r0
   6bdec:	strdne	r2, [r1]
   6bdf0:	movne	r2, r0
   6bdf4:	bne	6a6ec <luaL_openlibs@@Base+0xf2c>
   6bdf8:	strd	r2, [r9, sl]
   6bdfc:	b	6bfa8 <luaL_openlibs@@Base+0x27e8>
   6be00:	add	r1, r9, ip
   6be04:	b	6be18 <luaL_openlibs@@Base+0x2658>
   6be08:	sub	r1, r7, #2752	; 0xac0
   6be0c:	mvn	r3, #11
   6be10:	str	ip, [r1]
   6be14:	str	r3, [r1, #4]
   6be18:	mvn	r3, #4
   6be1c:	str	fp, [sp]
   6be20:	str	r3, [sp, #4]
   6be24:	mov	r2, sp
   6be28:	b	6be50 <luaL_openlibs@@Base+0x2690>
   6be2c:	and	ip, r4, lr, lsr #21
   6be30:	str	fp, [sp]
   6be34:	mvn	r3, #13
   6be38:	add	r1, r9, ip
   6be3c:	str	r3, [sp, #4]
   6be40:	mov	r2, sp
   6be44:	b	6be50 <luaL_openlibs@@Base+0x2690>
   6be48:	add	r1, r9, ip
   6be4c:	add	r2, r9, fp
   6be50:	str	r9, [r8, #16]
   6be54:	mov	r0, r8
   6be58:	str	r6, [sp, #8]
   6be5c:	bl	457dc <luaL_typerror@@Base+0xf470>
   6be60:	cmp	r0, #0
   6be64:	beq	6be88 <luaL_openlibs@@Base+0x26c8>
   6be68:	ldrd	r2, [r0]
   6be6c:	ldrb	ip, [r6]
   6be70:	ldr	lr, [r6], #4
   6be74:	strd	r2, [r9, sl]
   6be78:	ldr	ip, [r7, ip, lsl #2]
   6be7c:	and	sl, r4, lr, lsr #5
   6be80:	lsr	fp, lr, #16
   6be84:	bx	ip
   6be88:	rsb	r0, r9, #2
   6be8c:	ldr	r9, [r8, #20]
   6be90:	mov	fp, #16
   6be94:	str	r6, [r9, #-12]
   6be98:	add	r6, r0, r9
   6be9c:	ldr	r2, [r9, #-8]
   6bea0:	b	6bd08 <luaL_openlibs@@Base+0x2548>
   6bea4:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   6bea8:	cmp	r0, #0
   6beac:	ldrdne	r0, [r0]
   6beb0:	mvneq	r1, #0
   6beb4:	b	6acb8 <luaL_openlibs@@Base+0x14f8>
   6beb8:	add	r1, r9, ip
   6bebc:	b	6bed0 <luaL_openlibs@@Base+0x2710>
   6bec0:	sub	r1, r7, #2752	; 0xac0
   6bec4:	mvn	r3, #11
   6bec8:	str	ip, [r1]
   6becc:	str	r3, [r1, #4]
   6bed0:	mvn	r3, #4
   6bed4:	str	fp, [sp]
   6bed8:	str	r3, [sp, #4]
   6bedc:	mov	r2, sp
   6bee0:	b	6bf08 <luaL_openlibs@@Base+0x2748>
   6bee4:	and	ip, r4, lr, lsr #21
   6bee8:	str	fp, [sp]
   6beec:	mvn	r3, #13
   6bef0:	add	r1, r9, ip
   6bef4:	str	r3, [sp, #4]
   6bef8:	mov	r2, sp
   6befc:	b	6bf08 <luaL_openlibs@@Base+0x2748>
   6bf00:	add	r1, r9, ip
   6bf04:	add	r2, r9, fp
   6bf08:	str	r9, [r8, #16]
   6bf0c:	mov	r0, r8
   6bf10:	str	r6, [sp, #8]
   6bf14:	bl	458dc <luaL_typerror@@Base+0xf570>
   6bf18:	cmp	r0, #0
   6bf1c:	ldrd	r2, [r9, sl]
   6bf20:	beq	6bf40 <luaL_openlibs@@Base+0x2780>
   6bf24:	ldrb	ip, [r6]
   6bf28:	strd	r2, [r0]
   6bf2c:	ldr	lr, [r6], #4
   6bf30:	ldr	ip, [r7, ip, lsl #2]
   6bf34:	and	sl, r4, lr, lsr #5
   6bf38:	lsr	fp, lr, #16
   6bf3c:	bx	ip
   6bf40:	rsb	r0, r9, #2
   6bf44:	ldr	r9, [r8, #20]
   6bf48:	mov	fp, #24
   6bf4c:	strd	r2, [r9, #16]
   6bf50:	str	r6, [r9, #-12]
   6bf54:	add	r6, r0, r9
   6bf58:	ldr	r2, [r9, #-8]
   6bf5c:	b	6bd08 <luaL_openlibs@@Base+0x2548>
   6bf60:	str	r9, [r8, #16]
   6bf64:	str	r6, [sp, #8]
   6bf68:	bl	3e200 <luaL_typerror@@Base+0x7e94>
   6bf6c:	b	6b004 <luaL_openlibs@@Base+0x1844>
   6bf70:	mov	r0, r8
   6bf74:	sub	r6, r6, #4
   6bf78:	mov	r1, sl
   6bf7c:	str	r9, [r8, #16]
   6bf80:	mov	r2, fp
   6bf84:	str	r6, [sp, #8]
   6bf88:	and	r3, lr, #255	; 0xff
   6bf8c:	bl	45eb4 <luaL_typerror@@Base+0xfb48>
   6bf90:	cmp	r0, #1
   6bf94:	bhi	6c0b4 <luaL_openlibs@@Base+0x28f4>
   6bf98:	ldrh	ip, [r6, #2]
   6bf9c:	add	r6, r6, #4
   6bfa0:	add	ip, r6, ip, lsl #2
   6bfa4:	subcs	r6, ip, #128, 22	; 0x20000
   6bfa8:	ldrb	ip, [r6]
   6bfac:	ldr	lr, [r6], #4
   6bfb0:	ldr	ip, [r7, ip, lsl #2]
   6bfb4:	and	sl, r4, lr, lsr #5
   6bfb8:	lsr	fp, lr, #16
   6bfbc:	bx	ip
   6bfc0:	ldr	lr, [r6, #-4]
   6bfc4:	ldrd	r0, [sl]
   6bfc8:	and	r2, r4, lr, lsr #5
   6bfcc:	strd	r0, [r9, r2]
   6bfd0:	b	6bfa8 <luaL_openlibs@@Base+0x27e8>
   6bfd4:	ldr	r1, [sl, #4]
   6bfd8:	mvn	r0, #2
   6bfdc:	cmp	r0, r1
   6bfe0:	b	6bf98 <luaL_openlibs@@Base+0x27d8>
   6bfe4:	ldr	r1, [sl, #4]
   6bfe8:	cmn	r1, #2
   6bfec:	b	6bf98 <luaL_openlibs@@Base+0x27d8>
   6bff0:	sub	r6, r6, #4
   6bff4:	str	r9, [r8, #16]
   6bff8:	mov	r0, r8
   6bffc:	str	r6, [sp, #8]
   6c000:	bl	1fa64 <lua_atpanic@@Base+0x894>
   6c004:	b	6bf90 <luaL_openlibs@@Base+0x27d0>
   6c008:	sub	r6, r6, #4
   6c00c:	str	r9, [r8, #16]
   6c010:	mov	r0, r8
   6c014:	mov	r1, lr
   6c018:	str	r6, [sp, #8]
   6c01c:	bl	1fb6c <lua_atpanic@@Base+0x99c>
   6c020:	b	6bf90 <luaL_openlibs@@Base+0x27d0>
   6c024:	sub	r6, r6, #4
   6c028:	str	r9, [r8, #16]
   6c02c:	mov	r0, r8
   6c030:	lsr	r1, sl, #3
   6c034:	mov	r2, fp
   6c038:	str	r6, [sp, #8]
   6c03c:	bl	57c38 <lua_gethookcount@@Base+0x45b8>
   6c040:	b	6bfa8 <luaL_openlibs@@Base+0x27e8>
   6c044:	and	ip, r4, lr, lsr #21
   6c048:	and	fp, r4, lr, lsr #13
   6c04c:	add	r2, r9, ip
   6c050:	add	r3, r5, fp
   6c054:	b	6c090 <luaL_openlibs@@Base+0x28d0>
   6c058:	and	ip, r4, lr, lsr #21
   6c05c:	and	fp, r4, lr, lsr #13
   6c060:	add	r3, r9, ip
   6c064:	add	r2, r5, fp
   6c068:	b	6c090 <luaL_openlibs@@Base+0x28d0>
   6c06c:	ldr	lr, [r6, #-8]
   6c070:	sub	r6, r6, #4
   6c074:	add	r2, r9, fp
   6c078:	add	r3, r9, fp
   6c07c:	b	6c090 <luaL_openlibs@@Base+0x28d0>
   6c080:	and	ip, r4, lr, lsr #21
   6c084:	and	fp, r4, lr, lsr #13
   6c088:	add	r2, r9, ip
   6c08c:	add	r3, r9, fp
   6c090:	and	ip, lr, #255	; 0xff
   6c094:	add	r1, r9, sl
   6c098:	str	r9, [r8, #16]
   6c09c:	mov	r0, r8
   6c0a0:	str	r6, [sp, #8]
   6c0a4:	str	ip, [sp]
   6c0a8:	bl	53a80 <lua_gethookcount@@Base+0x400>
   6c0ac:	cmp	r0, #0
   6c0b0:	beq	6bfa8 <luaL_openlibs@@Base+0x27e8>
   6c0b4:	sub	r1, r0, r9
   6c0b8:	str	r6, [r0, #-12]
   6c0bc:	add	r6, r1, #2
   6c0c0:	mov	r9, r0
   6c0c4:	mov	fp, #16
   6c0c8:	b	6bcfc <luaL_openlibs@@Base+0x253c>
   6c0cc:	add	r1, r9, fp
   6c0d0:	str	r9, [r8, #16]
   6c0d4:	mov	r0, r8
   6c0d8:	str	r6, [sp, #8]
   6c0dc:	bl	45dd0 <luaL_typerror@@Base+0xfa64>
   6c0e0:	b	6c0b4 <luaL_openlibs@@Base+0x28f4>
   6c0e4:	mov	r0, r8
   6c0e8:	str	ip, [r8, #16]
   6c0ec:	sub	r1, r9, #8
   6c0f0:	str	r6, [sp, #8]
   6c0f4:	add	r2, r9, fp
   6c0f8:	bl	46098 <luaL_typerror@@Base+0xfd2c>
   6c0fc:	ldr	r2, [r9, #-8]
   6c100:	add	fp, fp, #8
   6c104:	str	r6, [r9, #-4]
   6c108:	ldr	r6, [r2, #16]
   6c10c:	ldrb	ip, [r6]
   6c110:	ldr	lr, [r6], #4
   6c114:	ldr	ip, [r7, ip, lsl #2]
   6c118:	and	sl, r4, lr, lsr #5
   6c11c:	add	sl, sl, r9
   6c120:	bx	ip
   6c124:	mov	r0, r8
   6c128:	str	r9, [r8, #16]
   6c12c:	sub	r1, sl, #8
   6c130:	str	r6, [sp, #8]
   6c134:	add	r2, sl, fp
   6c138:	bl	46098 <luaL_typerror@@Base+0xfd2c>
   6c13c:	ldr	r2, [sl, #-8]
   6c140:	ldr	r6, [r9, #-4]
   6c144:	add	fp, fp, #8
   6c148:	b	6b0b0 <luaL_openlibs@@Base+0x18f0>
   6c14c:	mov	r0, r8
   6c150:	str	r9, [r8, #16]
   6c154:	mov	r1, sl
   6c158:	str	r6, [sp, #8]
   6c15c:	bl	40aec <luaL_typerror@@Base+0xa780>
   6c160:	ldrb	ip, [r6, #-4]
   6c164:	ldr	lr, [r6, #-4]
   6c168:	cmp	ip, #78	; 0x4e
   6c16c:	and	sl, r4, lr, lsr #5
   6c170:	lsr	fp, lr, #16
   6c174:	beq	6b5c0 <luaL_openlibs@@Base+0x1e00>
   6c178:	b	6b52c <luaL_openlibs@@Base+0x1d6c>
   6c17c:	ldrd	r0, [r9]
   6c180:	cmp	fp, #8
   6c184:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c188:	cmn	r1, #3
   6c18c:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6c190:	ldr	r6, [r9, #-4]
   6c194:	strd	r0, [r9, #-8]
   6c198:	mov	ip, r9
   6c19c:	subs	sl, fp, #8
   6c1a0:	add	fp, fp, #8
   6c1a4:	beq	6c8e4 <luaL_openlibs@@Base+0x3124>
   6c1a8:	ldrd	r0, [ip, #8]
   6c1ac:	subs	sl, sl, #8
   6c1b0:	strd	r0, [ip], #8
   6c1b4:	bne	6c1a8 <luaL_openlibs@@Base+0x29e8>
   6c1b8:	b	6c8e4 <luaL_openlibs@@Base+0x3124>
   6c1bc:	ldr	r1, [r9, #4]
   6c1c0:	cmp	fp, #8
   6c1c4:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c1c8:	cmn	r1, #14
   6c1cc:	mvncc	r1, #13
   6c1d0:	rsb	r3, r1, #2
   6c1d4:	lsl	r3, r3, #3
   6c1d8:	ldrd	r0, [r2, r3]
   6c1dc:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c1e0:	ldrd	r0, [r9]
   6c1e4:	cmp	fp, #8
   6c1e8:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c1ec:	cmn	r1, #12
   6c1f0:	cmnne	r1, #13
   6c1f4:	bne	6c25c <luaL_openlibs@@Base+0x2a9c>
   6c1f8:	ldr	ip, [r0, #16]
   6c1fc:	mvn	r1, #0
   6c200:	ldr	fp, [r7, #-2580]	; 0xfffff5ec
   6c204:	cmp	ip, #0
   6c208:	beq	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c20c:	ldr	r2, [ip, #28]
   6c210:	ldr	r3, [fp, #8]
   6c214:	ldr	lr, [ip, #20]
   6c218:	and	r2, r2, r3
   6c21c:	add	r2, r2, r2, lsl #1
   6c220:	add	lr, lr, r2, lsl #3
   6c224:	ldrd	r2, [lr, #8]
   6c228:	ldrd	r0, [lr]
   6c22c:	ldr	lr, [lr, #16]
   6c230:	cmn	r3, #5
   6c234:	cmpeq	r2, fp
   6c238:	beq	6c250 <luaL_openlibs@@Base+0x2a90>
   6c23c:	cmp	lr, #0
   6c240:	bne	6c224 <luaL_openlibs@@Base+0x2a64>
   6c244:	mov	r0, ip
   6c248:	mvn	r1, #11
   6c24c:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c250:	cmn	r1, #1
   6c254:	bne	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c258:	b	6c244 <luaL_openlibs@@Base+0x2a84>
   6c25c:	cmn	r1, #14
   6c260:	mvncs	r1, r1
   6c264:	movcc	r1, #13
   6c268:	add	r3, r7, r1, lsl #2
   6c26c:	ldr	ip, [r3, #-2560]	; 0xfffff600
   6c270:	b	6c1fc <luaL_openlibs@@Base+0x2a3c>
   6c274:	ldrd	r0, [r9]
   6c278:	ldrd	r2, [r9, #8]
   6c27c:	cmp	fp, #16
   6c280:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c284:	cmn	r1, #12
   6c288:	ldreq	ip, [r0, #16]
   6c28c:	cmneq	r3, #12
   6c290:	ldrbeq	r3, [r0, #4]
   6c294:	cmpeq	ip, #0
   6c298:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6c29c:	tst	r3, #4
   6c2a0:	str	r2, [r0, #16]
   6c2a4:	beq	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c2a8:	ldr	r2, [r7, #-2832]	; 0xfffff4f0
   6c2ac:	bic	r3, r3, #4
   6c2b0:	str	r0, [r7, #-2832]	; 0xfffff4f0
   6c2b4:	strb	r3, [r0, #4]
   6c2b8:	str	r2, [r0, #12]
   6c2bc:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c2c0:	ldrd	r2, [r9]
   6c2c4:	cmp	fp, #16
   6c2c8:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c2cc:	mov	r1, r2
   6c2d0:	cmn	r3, #12
   6c2d4:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6c2d8:	mov	r0, r8
   6c2dc:	add	r2, r9, #8
   6c2e0:	bl	1f4f8 <lua_atpanic@@Base+0x328>
   6c2e4:	ldrd	r0, [r0]
   6c2e8:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c2ec:	ldrd	r0, [r9]
   6c2f0:	cmp	fp, #8
   6c2f4:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6c2f8:	cmn	r1, #14
   6c2fc:	bls	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c300:	b	6d19c <luaL_openlibs@@Base+0x39dc>
   6c304:	ldrd	r0, [r9]
   6c308:	cmp	fp, #8
   6c30c:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c310:	cmn	r1, #5
   6c314:	beq	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c318:	ldr	r3, [r7, #-2508]	; 0xfffff634
   6c31c:	str	r9, [r8, #16]
   6c320:	cmn	r1, #14
   6c324:	cmpls	r3, #0
   6c328:	str	r6, [sp, #8]
   6c32c:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6c330:	ldr	r0, [r7, #-2860]	; 0xfffff4d4
   6c334:	ldr	r1, [r7, #-2856]	; 0xfffff4d8
   6c338:	cmp	r0, r1
   6c33c:	blge	6d240 <luaL_openlibs@@Base+0x3a80>
   6c340:	mov	r0, r8
   6c344:	mov	r1, r9
   6c348:	bl	57bc0 <lua_gethookcount@@Base+0x4540>
   6c34c:	ldr	r9, [r8, #16]
   6c350:	mvn	r1, #4
   6c354:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c358:	ldrd	r0, [r9]
   6c35c:	cmp	fp, #8
   6c360:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c364:	mvn	r3, #0
   6c368:	cmn	r1, #12
   6c36c:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6c370:	strd	r2, [r9, fp]
   6c374:	ldr	r6, [r9, #-4]
   6c378:	mov	r1, r0
   6c37c:	str	r9, [r8, #16]
   6c380:	mov	r0, r8
   6c384:	str	r9, [r8, #20]
   6c388:	add	r2, r9, #8
   6c38c:	str	r6, [sp, #8]
   6c390:	bl	408d0 <luaL_typerror@@Base+0xa564>
   6c394:	cmp	r0, #0
   6c398:	mvneq	r1, #0
   6c39c:	beq	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c3a0:	ldrd	r0, [r9, #8]
   6c3a4:	ldrd	r2, [r9, #16]
   6c3a8:	mov	fp, #24
   6c3ac:	strd	r0, [r9, #-8]
   6c3b0:	strd	r2, [r9]
   6c3b4:	b	6c8e4 <luaL_openlibs@@Base+0x3124>
   6c3b8:	ldrd	r0, [r9]
   6c3bc:	cmp	fp, #8
   6c3c0:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c3c4:	cmn	r1, #12
   6c3c8:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6c3cc:	ldrd	r2, [r2, #24]
   6c3d0:	ldr	r6, [r9, #-4]
   6c3d4:	mvn	r1, #0
   6c3d8:	mov	fp, #32
   6c3dc:	strd	r2, [r9, #-8]
   6c3e0:	str	r1, [r9, #12]
   6c3e4:	b	6c8e4 <luaL_openlibs@@Base+0x3124>
   6c3e8:	ldrd	r0, [r9]
   6c3ec:	ldrd	r2, [r9, #8]
   6c3f0:	cmp	fp, #16
   6c3f4:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c3f8:	cmn	r1, #12
   6c3fc:	cmneq	r3, #14
   6c400:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6c404:	ldr	ip, [r0, #24]
   6c408:	ldr	fp, [r0, #8]
   6c40c:	add	r2, r2, #1
   6c410:	ldr	r6, [r9, #-4]
   6c414:	cmp	r2, ip
   6c418:	add	fp, fp, r2, lsl #3
   6c41c:	strd	r2, [r9, #-8]
   6c420:	ldrdcc	r0, [fp]
   6c424:	mov	fp, #8
   6c428:	bcs	6c43c <luaL_openlibs@@Base+0x2c7c>
   6c42c:	cmn	r1, #1
   6c430:	movne	fp, #24
   6c434:	strdne	r0, [r9]
   6c438:	b	6c8e4 <luaL_openlibs@@Base+0x3124>
   6c43c:	ldr	ip, [r0, #28]
   6c440:	mov	r1, r2
   6c444:	cmp	ip, #0
   6c448:	beq	6c8e4 <luaL_openlibs@@Base+0x3124>
   6c44c:	bl	1f1e0 <lua_atpanic@@Base+0x10>
   6c450:	cmp	r0, #0
   6c454:	beq	6c8e4 <luaL_openlibs@@Base+0x3124>
   6c458:	ldrd	r0, [r0]
   6c45c:	b	6c42c <luaL_openlibs@@Base+0x2c6c>
   6c460:	ldrd	r0, [r9]
   6c464:	cmp	fp, #8
   6c468:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c46c:	cmn	r1, #12
   6c470:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6c474:	ldrd	r2, [r2, #24]
   6c478:	ldr	r6, [r9, #-4]
   6c47c:	mov	r0, #0
   6c480:	mvn	r1, #13
   6c484:	mov	fp, #32
   6c488:	strd	r2, [r9, #-8]
   6c48c:	strd	r0, [r9, #8]
   6c490:	b	6c8e4 <luaL_openlibs@@Base+0x3124>
   6c494:	ldrb	sl, [r7, #-2767]	; 0xfffff531
   6c498:	cmp	fp, #8
   6c49c:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c4a0:	tst	sl, #16
   6c4a4:	mov	ip, r9
   6c4a8:	add	r9, r9, #8
   6c4ac:	moveq	r6, #14
   6c4b0:	movne	r6, #15
   6c4b4:	sub	fp, fp, #8
   6c4b8:	b	6bcfc <luaL_openlibs@@Base+0x253c>
   6c4bc:	ldrd	r0, [r9]
   6c4c0:	ldrd	r2, [r9, #8]
   6c4c4:	cmp	fp, #16
   6c4c8:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c4cc:	ldrb	sl, [r7, #-2767]	; 0xfffff531
   6c4d0:	cmn	r3, #9
   6c4d4:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6c4d8:	mov	ip, r9
   6c4dc:	strd	r0, [r9, #8]
   6c4e0:	strd	r2, [r9]
   6c4e4:	tst	sl, #16
   6c4e8:	add	r9, r9, #16
   6c4ec:	moveq	r6, #22
   6c4f0:	movne	r6, #23
   6c4f4:	sub	fp, fp, #16
   6c4f8:	b	6bcfc <luaL_openlibs@@Base+0x253c>
   6c4fc:	ldrd	r0, [r9]
   6c500:	cmp	fp, #8
   6c504:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c508:	cmn	r1, #7
   6c50c:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6c510:	ldr	r6, [r9, #-4]
   6c514:	str	r9, [r8, #16]
   6c518:	ldr	r1, [r0, #20]
   6c51c:	ldrb	sl, [r0, #7]
   6c520:	ldr	ip, [r0, #16]
   6c524:	add	r2, r1, fp
   6c528:	add	r3, r1, sl
   6c52c:	str	r6, [sp, #8]
   6c530:	cmp	r3, ip
   6c534:	beq	6d19c <luaL_openlibs@@Base+0x39dc>
   6c538:	ldr	r3, [r0, #24]
   6c53c:	ldr	ip, [r0, #40]	; 0x28
   6c540:	cmp	sl, #1
   6c544:	cmpls	r2, r3
   6c548:	cmpls	ip, #0
   6c54c:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6c550:	sub	r2, r2, #8
   6c554:	add	r9, r9, #8
   6c558:	sub	fp, fp, #8
   6c55c:	str	r2, [r0, #20]
   6c560:	str	r9, [r8, #20]
   6c564:	ldrd	r2, [r9, ip]
   6c568:	cmp	ip, fp
   6c56c:	strdne	r2, [r1, ip]
   6c570:	add	ip, ip, #8
   6c574:	bne	6c564 <luaL_openlibs@@Base+0x2da4>
   6c578:	mov	r2, #0
   6c57c:	mov	sl, r0
   6c580:	mov	r3, #0
   6c584:	bl	6bbf0 <luaL_openlibs@@Base+0x2430>
   6c588:	ldr	r2, [sl, #16]
   6c58c:	mvn	r1, #0
   6c590:	ldr	r3, [sl, #20]
   6c594:	cmp	r0, #1
   6c598:	ldr	r9, [r8, #16]
   6c59c:	str	r8, [r7, #-2660]	; 0xfffff59c
   6c5a0:	str	r1, [r7, #-2804]	; 0xfffff50c
   6c5a4:	bhi	6c604 <luaL_openlibs@@Base+0x2e44>
   6c5a8:	subs	fp, r3, r2
   6c5ac:	ldr	r0, [r8, #24]
   6c5b0:	add	r1, r9, fp
   6c5b4:	beq	6c5e0 <luaL_openlibs@@Base+0x2e20>
   6c5b8:	cmp	r1, r0
   6c5bc:	mov	ip, #0
   6c5c0:	bhi	6c61c <luaL_openlibs@@Base+0x2e5c>
   6c5c4:	sub	r3, fp, #8
   6c5c8:	str	r2, [sl, #20]
   6c5cc:	ldrd	r0, [r2, ip]
   6c5d0:	cmp	ip, r3
   6c5d4:	strd	r0, [r9, ip]
   6c5d8:	add	ip, ip, #8
   6c5dc:	bne	6c5cc <luaL_openlibs@@Base+0x2e0c>
   6c5e0:	mvn	r2, #2
   6c5e4:	add	fp, fp, #16
   6c5e8:	str	r2, [r9, #-4]
   6c5ec:	sub	sl, r9, #8
   6c5f0:	ands	r0, r6, #3
   6c5f4:	str	r6, [sp, #8]
   6c5f8:	str	fp, [sp, #4]
   6c5fc:	beq	6b3c0 <luaL_openlibs@@Base+0x1c00>
   6c600:	b	6ba6c <luaL_openlibs@@Base+0x22ac>
   6c604:	ldrd	r0, [r3, #-8]!
   6c608:	mvn	r2, #1
   6c60c:	mov	fp, #24
   6c610:	str	r3, [sl, #20]
   6c614:	strd	r0, [r9]
   6c618:	b	6c5e8 <luaL_openlibs@@Base+0x2e28>
   6c61c:	mov	r0, r8
   6c620:	lsr	r1, fp, #3
   6c624:	bl	1fd08 <lua_getstack@@Base+0x50>
   6c628:	mov	r0, #0
   6c62c:	b	6c588 <luaL_openlibs@@Base+0x2dc8>
   6c630:	ldr	r0, [r2, #24]
   6c634:	ldr	r6, [r9, #-4]
   6c638:	str	r9, [r8, #16]
   6c63c:	ldr	r1, [r0, #20]
   6c640:	ldrb	sl, [r0, #7]
   6c644:	ldr	ip, [r0, #16]
   6c648:	add	r2, r1, fp
   6c64c:	add	r3, r1, sl
   6c650:	str	r6, [sp, #8]
   6c654:	cmp	r3, ip
   6c658:	beq	6d19c <luaL_openlibs@@Base+0x39dc>
   6c65c:	ldr	r3, [r0, #24]
   6c660:	ldr	ip, [r0, #40]	; 0x28
   6c664:	cmp	sl, #1
   6c668:	cmpls	r2, r3
   6c66c:	cmpls	ip, #0
   6c670:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6c674:	str	r2, [r0, #20]
   6c678:	str	r9, [r8, #20]
   6c67c:	ldrd	r2, [r9, ip]
   6c680:	cmp	ip, fp
   6c684:	strdne	r2, [r1, ip]
   6c688:	add	ip, ip, #8
   6c68c:	bne	6c67c <luaL_openlibs@@Base+0x2ebc>
   6c690:	mov	r2, #0
   6c694:	mov	sl, r0
   6c698:	mov	r3, #0
   6c69c:	bl	6bbf0 <luaL_openlibs@@Base+0x2430>
   6c6a0:	ldr	r2, [sl, #16]
   6c6a4:	mvn	r1, #0
   6c6a8:	ldr	r3, [sl, #20]
   6c6ac:	cmp	r0, #1
   6c6b0:	ldr	r9, [r8, #16]
   6c6b4:	str	r8, [r7, #-2660]	; 0xfffff59c
   6c6b8:	str	r1, [r7, #-2804]	; 0xfffff50c
   6c6bc:	bhi	6c714 <luaL_openlibs@@Base+0x2f54>
   6c6c0:	subs	fp, r3, r2
   6c6c4:	ldr	r0, [r8, #24]
   6c6c8:	add	r1, r9, fp
   6c6cc:	beq	6c6f8 <luaL_openlibs@@Base+0x2f38>
   6c6d0:	cmp	r1, r0
   6c6d4:	mov	ip, #0
   6c6d8:	bhi	6c720 <luaL_openlibs@@Base+0x2f60>
   6c6dc:	sub	r3, fp, #8
   6c6e0:	str	r2, [sl, #20]
   6c6e4:	ldrd	r0, [r2, ip]
   6c6e8:	cmp	ip, r3
   6c6ec:	strd	r0, [r9, ip]
   6c6f0:	add	ip, ip, #8
   6c6f4:	bne	6c6e4 <luaL_openlibs@@Base+0x2f24>
   6c6f8:	mov	sl, r9
   6c6fc:	add	fp, fp, #8
   6c700:	ands	r0, r6, #3
   6c704:	str	r6, [sp, #8]
   6c708:	str	fp, [sp, #4]
   6c70c:	beq	6b3c0 <luaL_openlibs@@Base+0x1c00>
   6c710:	b	6ba6c <luaL_openlibs@@Base+0x22ac>
   6c714:	mov	r0, r8
   6c718:	mov	r1, sl
   6c71c:	bl	69780 <luaL_newstate@@Base+0x104>
   6c720:	mov	r0, r8
   6c724:	lsr	r1, fp, #3
   6c728:	bl	1fd08 <lua_getstack@@Base+0x50>
   6c72c:	mov	r0, #0
   6c730:	b	6c6a0 <luaL_openlibs@@Base+0x2ee0>
   6c734:	ldr	r0, [r8, #40]	; 0x28
   6c738:	add	r1, r9, fp
   6c73c:	str	r9, [r8, #16]
   6c740:	tst	r0, #1
   6c744:	str	r1, [r8, #20]
   6c748:	mov	r0, #1
   6c74c:	mov	r2, #0
   6c750:	beq	6d19c <luaL_openlibs@@Base+0x39dc>
   6c754:	str	r2, [r8, #40]	; 0x28
   6c758:	strb	r0, [r8, #7]
   6c75c:	b	6bac4 <luaL_openlibs@@Base+0x2304>
   6c760:	ldrd	r0, [r9]
   6c764:	cmp	fp, #8
   6c768:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c76c:	cmn	r1, #14
   6c770:	beq	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c774:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6c778:	lsl	r2, r1, #1
   6c77c:	adds	ip, r2, #128, 18	; 0x200000
   6c780:	bpl	6c7c4 <luaL_openlibs@@Base+0x3004>
   6c784:	mvn	r3, #248, 30	; 0x3e0
   6c788:	subs	ip, r3, ip, asr #21
   6c78c:	lsl	r3, r1, #11
   6c790:	lsl	r2, r0, #11
   6c794:	orr	r3, r3, #128, 8	; 0x80000000
   6c798:	rsb	lr, ip, #32
   6c79c:	orr	r3, r3, r0, lsr #21
   6c7a0:	bls	6c7e0 <luaL_openlibs@@Base+0x3020>
   6c7a4:	orr	r2, r2, r3, lsl lr
   6c7a8:	lsr	r0, r3, ip
   6c7ac:	tst	r2, r1, asr #31
   6c7b0:	addne	r0, r0, #1
   6c7b4:	cmp	r1, #0
   6c7b8:	rsblt	r0, r0, #0
   6c7bc:	mvn	r1, #13
   6c7c0:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c7c4:	bcs	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c7c8:	orr	r2, r2, r0
   6c7cc:	tst	r2, r1, asr #31
   6c7d0:	moveq	r0, #0
   6c7d4:	mvnne	r0, #0
   6c7d8:	mvn	r1, #13
   6c7dc:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c7e0:	cmpeq	r3, #128, 8	; 0x80000000
   6c7e4:	cmpeq	r2, #0
   6c7e8:	bne	6c7f8 <luaL_openlibs@@Base+0x3038>
   6c7ec:	cmp	r1, #0
   6c7f0:	movmi	r0, #128, 8	; 0x80000000
   6c7f4:	bmi	6c7bc <luaL_openlibs@@Base+0x2ffc>
   6c7f8:	bl	6d5f8 <luaL_openlibs@@Base+0x3e38>
   6c7fc:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c800:	ldrd	r0, [r9]
   6c804:	cmp	fp, #8
   6c808:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c80c:	cmn	r1, #14
   6c810:	beq	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c814:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6c818:	lsl	r2, r1, #1
   6c81c:	adds	ip, r2, #128, 18	; 0x200000
   6c820:	bpl	6c86c <luaL_openlibs@@Base+0x30ac>
   6c824:	mvn	r3, #248, 30	; 0x3e0
   6c828:	subs	ip, r3, ip, asr #21
   6c82c:	lsl	r3, r1, #11
   6c830:	lsl	r2, r0, #11
   6c834:	orr	r3, r3, #128, 8	; 0x80000000
   6c838:	rsb	lr, ip, #32
   6c83c:	orr	r3, r3, r0, lsr #21
   6c840:	bls	6c888 <luaL_openlibs@@Base+0x30c8>
   6c844:	orr	r2, r2, r3, lsl lr
   6c848:	lsr	r0, r3, ip
   6c84c:	bics	r2, r2, r1, asr #31
   6c850:	addsne	r0, r0, #1
   6c854:	ldrdvs	r0, [pc, #76]	; 6c8a8 <luaL_openlibs@@Base+0x30e8>
   6c858:	bvs	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c85c:	cmp	r1, #0
   6c860:	rsblt	r0, r0, #0
   6c864:	mvn	r1, #13
   6c868:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c86c:	bcs	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c870:	orr	r2, r2, r0
   6c874:	bics	r2, r2, r1, asr #31
   6c878:	moveq	r0, #0
   6c87c:	movne	r0, #1
   6c880:	mvn	r1, #13
   6c884:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c888:	cmpeq	r3, #128, 8	; 0x80000000
   6c88c:	bne	6c89c <luaL_openlibs@@Base+0x30dc>
   6c890:	cmp	r1, #0
   6c894:	movmi	r0, #128, 8	; 0x80000000
   6c898:	bmi	6c864 <luaL_openlibs@@Base+0x30a4>
   6c89c:	bl	6d708 <luaL_openlibs@@Base+0x3f48>
   6c8a0:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c8a4:	nop			; (mov r0, r0)
   6c8a8:	andeq	r0, r0, r0
   6c8ac:	mvnmi	r0, r0
   6c8b0:	ldrd	r0, [r9]
   6c8b4:	cmp	fp, #8
   6c8b8:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c8bc:	cmn	r1, #14
   6c8c0:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6c8c4:	bicne	r1, r1, #128, 8	; 0x80000000
   6c8c8:	bne	6c8d8 <luaL_openlibs@@Base+0x3118>
   6c8cc:	cmp	r0, #0
   6c8d0:	rsbslt	r0, r0, #0
   6c8d4:	ldrdvs	r0, [pc, #-52]	; 6c8a8 <luaL_openlibs@@Base+0x30e8>
   6c8d8:	ldr	r6, [r9, #-4]
   6c8dc:	strd	r0, [r9, #-8]
   6c8e0:	mov	fp, #16
   6c8e4:	ands	r0, r6, #3
   6c8e8:	ldreq	lr, [r6, #-4]
   6c8ec:	str	fp, [sp, #4]
   6c8f0:	sub	sl, r9, #8
   6c8f4:	bne	6ba6c <luaL_openlibs@@Base+0x22ac>
   6c8f8:	and	ip, r4, lr, lsr #21
   6c8fc:	cmp	ip, fp
   6c900:	bhi	6c924 <luaL_openlibs@@Base+0x3164>
   6c904:	and	r0, r4, lr, lsr #5
   6c908:	ldrb	ip, [r6]
   6c90c:	ldr	lr, [r6], #4
   6c910:	sub	r9, sl, r0
   6c914:	ldr	ip, [r7, ip, lsl #2]
   6c918:	and	sl, r4, lr, lsr #5
   6c91c:	lsr	fp, lr, #16
   6c920:	bx	ip
   6c924:	add	r1, sl, fp
   6c928:	mvn	r0, #0
   6c92c:	add	fp, fp, #8
   6c930:	str	r0, [r1, #-4]
   6c934:	b	6c8fc <luaL_openlibs@@Base+0x313c>
   6c938:	ldr	r1, [r9, #4]
   6c93c:	cmp	fp, #8
   6c940:	vldr	d0, [r9, #-0]
   6c944:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c948:	cmn	r1, #14
   6c94c:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6c950:	vsqrt.f64	d0, d0
   6c954:	ldr	r6, [r9, #-4]
   6c958:	vstr	d0, [r9, #-8]
   6c95c:	b	6c8e0 <luaL_openlibs@@Base+0x3120>
   6c960:	ldr	r1, [r9, #4]
   6c964:	cmp	fp, #8
   6c968:	vldr	d0, [r9, #-0]
   6c96c:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6c970:	cmn	r1, #14
   6c974:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6c978:	bl	12c4c <log@plt>
   6c97c:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6c980:	ldr	r1, [r9, #4]
   6c984:	cmp	fp, #8
   6c988:	vldr	d0, [r9, #-0]
   6c98c:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c990:	cmn	r1, #14
   6c994:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6c998:	bl	12dcc <log10@plt>
   6c99c:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6c9a0:	ldr	r1, [r9, #4]
   6c9a4:	cmp	fp, #8
   6c9a8:	vldr	d0, [r9, #-0]
   6c9ac:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c9b0:	cmn	r1, #14
   6c9b4:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6c9b8:	bl	12fc4 <exp@plt>
   6c9bc:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6c9c0:	ldr	r1, [r9, #4]
   6c9c4:	cmp	fp, #8
   6c9c8:	vldr	d0, [r9, #-0]
   6c9cc:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c9d0:	cmn	r1, #14
   6c9d4:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6c9d8:	bl	12e50 <sin@plt>
   6c9dc:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6c9e0:	ldr	r1, [r9, #4]
   6c9e4:	cmp	fp, #8
   6c9e8:	vldr	d0, [r9, #-0]
   6c9ec:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6c9f0:	cmn	r1, #14
   6c9f4:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6c9f8:	bl	13084 <cos@plt>
   6c9fc:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6ca00:	ldr	r1, [r9, #4]
   6ca04:	cmp	fp, #8
   6ca08:	vldr	d0, [r9, #-0]
   6ca0c:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6ca10:	cmn	r1, #14
   6ca14:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6ca18:	bl	12ec8 <tan@plt>
   6ca1c:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6ca20:	ldr	r1, [r9, #4]
   6ca24:	cmp	fp, #8
   6ca28:	vldr	d0, [r9, #-0]
   6ca2c:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6ca30:	cmn	r1, #14
   6ca34:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6ca38:	bl	12f1c <asin@plt>
   6ca3c:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6ca40:	ldr	r1, [r9, #4]
   6ca44:	cmp	fp, #8
   6ca48:	vldr	d0, [r9, #-0]
   6ca4c:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6ca50:	cmn	r1, #14
   6ca54:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6ca58:	bl	12d9c <acos@plt>
   6ca5c:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6ca60:	ldr	r1, [r9, #4]
   6ca64:	cmp	fp, #8
   6ca68:	vldr	d0, [r9, #-0]
   6ca6c:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6ca70:	cmn	r1, #14
   6ca74:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6ca78:	bl	12f10 <atan@plt>
   6ca7c:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6ca80:	ldr	r1, [r9, #4]
   6ca84:	cmp	fp, #8
   6ca88:	vldr	d0, [r9, #-0]
   6ca8c:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6ca90:	cmn	r1, #14
   6ca94:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6ca98:	bl	13018 <sinh@plt>
   6ca9c:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6caa0:	ldr	r1, [r9, #4]
   6caa4:	cmp	fp, #8
   6caa8:	vldr	d0, [r9, #-0]
   6caac:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cab0:	cmn	r1, #14
   6cab4:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6cab8:	bl	12f34 <cosh@plt>
   6cabc:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6cac0:	ldr	r1, [r9, #4]
   6cac4:	cmp	fp, #8
   6cac8:	vldr	d0, [r9, #-0]
   6cacc:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cad0:	cmn	r1, #14
   6cad4:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6cad8:	bl	12ee0 <tanh@plt>
   6cadc:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6cae0:	ldr	r1, [r9, #4]
   6cae4:	ldr	r3, [r9, #12]
   6cae8:	cmp	fp, #16
   6caec:	vldr	d0, [r9, #-0]
   6caf0:	vldr	d1, [r9, #8]
   6caf4:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6caf8:	cmn	r1, #14
   6cafc:	cmncc	r3, #14
   6cb00:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6cb04:	bl	12ce8 <pow@plt>
   6cb08:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6cb0c:	ldr	r1, [r9, #4]
   6cb10:	ldr	r3, [r9, #12]
   6cb14:	cmp	fp, #16
   6cb18:	vldr	d0, [r9, #-0]
   6cb1c:	vldr	d1, [r9, #8]
   6cb20:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cb24:	cmn	r1, #14
   6cb28:	cmncc	r3, #14
   6cb2c:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6cb30:	bl	13078 <atan2@plt>
   6cb34:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6cb38:	ldr	r1, [r9, #4]
   6cb3c:	ldr	r3, [r9, #12]
   6cb40:	cmp	fp, #16
   6cb44:	vldr	d0, [r9, #-0]
   6cb48:	vldr	d1, [r9, #8]
   6cb4c:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cb50:	cmn	r1, #14
   6cb54:	cmncc	r3, #14
   6cb58:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6cb5c:	bl	13000 <fmod@plt>
   6cb60:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6cb64:	ldr	r3, [r9, #4]
   6cb68:	ldrd	r0, [r9, #8]
   6cb6c:	cmp	fp, #16
   6cb70:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cb74:	vldr	d0, [r9, #-0]
   6cb78:	cmn	r3, #14
   6cb7c:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6cb80:	cmn	r1, #14
   6cb84:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6cb88:	bl	12ff4 <ldexp@plt>
   6cb8c:	b	6c954 <luaL_openlibs@@Base+0x3194>
   6cb90:	ldr	r1, [r9, #4]
   6cb94:	cmp	fp, #8
   6cb98:	vldr	d0, [r9, #-0]
   6cb9c:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cba0:	cmn	r1, #14
   6cba4:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6cba8:	mov	r0, sp
   6cbac:	bl	12f58 <frexp@plt>
   6cbb0:	ldr	r2, [sp]
   6cbb4:	mvn	r3, #13
   6cbb8:	ldr	r6, [r9, #-4]
   6cbbc:	vstr	d0, [r9, #-8]
   6cbc0:	mov	fp, #24
   6cbc4:	strd	r2, [r9]
   6cbc8:	b	6c8e4 <luaL_openlibs@@Base+0x3124>
   6cbcc:	ldr	r1, [r9, #4]
   6cbd0:	cmp	fp, #8
   6cbd4:	vldr	d0, [r9, #-0]
   6cbd8:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cbdc:	cmn	r1, #14
   6cbe0:	bcs	6d19c <luaL_openlibs@@Base+0x39dc>
   6cbe4:	sub	r0, r9, #8
   6cbe8:	ldr	r6, [r9, #-4]
   6cbec:	bl	12e08 <modf@plt>
   6cbf0:	mov	fp, #24
   6cbf4:	vstr	d0, [r9, #-0]
   6cbf8:	b	6c8e4 <luaL_openlibs@@Base+0x3124>
   6cbfc:	ldrd	r0, [r9]
   6cc00:	cmp	fp, #8
   6cc04:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cc08:	add	ip, r9, fp
   6cc0c:	cmn	r1, #14
   6cc10:	add	sl, r9, #8
   6cc14:	bne	6cc50 <luaL_openlibs@@Base+0x3490>
   6cc18:	ldrd	r2, [sl]
   6cc1c:	cmp	sl, ip
   6cc20:	bcs	6c8d8 <luaL_openlibs@@Base+0x3118>
   6cc24:	cmn	r3, #14
   6cc28:	bne	6cc3c <luaL_openlibs@@Base+0x347c>
   6cc2c:	cmp	r0, r2
   6cc30:	add	sl, sl, #8
   6cc34:	movgt	r0, r2
   6cc38:	b	6cc18 <luaL_openlibs@@Base+0x3458>
   6cc3c:	vmov	s4, r0
   6cc40:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6cc44:	vldr	d1, [sl, #-0]
   6cc48:	vcvt.f64.s32	d0, s4
   6cc4c:	b	6cc70 <luaL_openlibs@@Base+0x34b0>
   6cc50:	vldr	d0, [r9, #-0]
   6cc54:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6cc58:	ldrd	r2, [sl]
   6cc5c:	vldr	d1, [sl, #-0]
   6cc60:	cmp	sl, ip
   6cc64:	bcs	6c954 <luaL_openlibs@@Base+0x3194>
   6cc68:	cmn	r3, #14
   6cc6c:	bcs	6cc84 <luaL_openlibs@@Base+0x34c4>
   6cc70:	vcmp.f64	d0, d1
   6cc74:	vmrs	APSR_nzcv, fpscr
   6cc78:	add	sl, sl, #8
   6cc7c:	vmovhi.f64	d0, d1
   6cc80:	b	6cc58 <luaL_openlibs@@Base+0x3498>
   6cc84:	vmov	s4, r2
   6cc88:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6cc8c:	vcvt.f64.s32	d1, s4
   6cc90:	b	6cc70 <luaL_openlibs@@Base+0x34b0>
   6cc94:	ldrd	r0, [r9]
   6cc98:	cmp	fp, #8
   6cc9c:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cca0:	add	ip, r9, fp
   6cca4:	cmn	r1, #14
   6cca8:	add	sl, r9, #8
   6ccac:	bne	6cce8 <luaL_openlibs@@Base+0x3528>
   6ccb0:	ldrd	r2, [sl]
   6ccb4:	cmp	sl, ip
   6ccb8:	bcs	6c8d8 <luaL_openlibs@@Base+0x3118>
   6ccbc:	cmn	r3, #14
   6ccc0:	bne	6ccd4 <luaL_openlibs@@Base+0x3514>
   6ccc4:	cmp	r0, r2
   6ccc8:	add	sl, sl, #8
   6cccc:	movlt	r0, r2
   6ccd0:	b	6ccb0 <luaL_openlibs@@Base+0x34f0>
   6ccd4:	vmov	s4, r0
   6ccd8:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6ccdc:	vldr	d1, [sl, #-0]
   6cce0:	vcvt.f64.s32	d0, s4
   6cce4:	b	6cd08 <luaL_openlibs@@Base+0x3548>
   6cce8:	vldr	d0, [r9, #-0]
   6ccec:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6ccf0:	ldrd	r2, [sl]
   6ccf4:	vldr	d1, [sl, #-0]
   6ccf8:	cmp	sl, ip
   6ccfc:	bcs	6c954 <luaL_openlibs@@Base+0x3194>
   6cd00:	cmn	r3, #14
   6cd04:	bcs	6cd1c <luaL_openlibs@@Base+0x355c>
   6cd08:	vcmp.f64	d0, d1
   6cd0c:	vmrs	APSR_nzcv, fpscr
   6cd10:	add	sl, sl, #8
   6cd14:	vmovcc.f64	d0, d1
   6cd18:	b	6ccf0 <luaL_openlibs@@Base+0x3530>
   6cd1c:	vmov	s4, r2
   6cd20:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6cd24:	vcvt.f64.s32	d1, s4
   6cd28:	b	6cd08 <luaL_openlibs@@Base+0x3548>
   6cd2c:	ldrd	r0, [r9]
   6cd30:	ldr	r6, [r9, #-4]
   6cd34:	cmp	fp, #8
   6cd38:	cmneq	r1, #5
   6cd3c:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6cd40:	ldr	r2, [r0, #12]
   6cd44:	ldrb	r0, [r0, #16]
   6cd48:	mvn	r1, #13
   6cd4c:	cmp	r2, #0
   6cd50:	moveq	fp, #8
   6cd54:	movne	fp, #16
   6cd58:	strd	r0, [r9, #-8]
   6cd5c:	b	6c8e4 <luaL_openlibs@@Base+0x3124>
   6cd60:	ldr	r0, [r7, #-2860]	; 0xfffff4d4
   6cd64:	ldr	r1, [r7, #-2856]	; 0xfffff4d8
   6cd68:	cmp	r0, r1
   6cd6c:	blge	6d240 <luaL_openlibs@@Base+0x3a80>
   6cd70:	ldrd	r0, [r9]
   6cd74:	ldr	r6, [r9, #-4]
   6cd78:	cmp	fp, #8
   6cd7c:	cmneq	r1, #14
   6cd80:	bicseq	r3, r0, #255	; 0xff
   6cd84:	mov	r2, #1
   6cd88:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6cd8c:	str	r0, [sp]
   6cd90:	mov	r1, sp
   6cd94:	str	r9, [r8, #16]
   6cd98:	mov	r0, r8
   6cd9c:	str	r6, [sp, #8]
   6cda0:	bl	20260 <luaL_where@@Base+0x15c>
   6cda4:	ldr	r9, [r8, #16]
   6cda8:	mvn	r1, #4
   6cdac:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6cdb0:	ldr	r0, [r7, #-2860]	; 0xfffff4d4
   6cdb4:	ldr	r1, [r7, #-2856]	; 0xfffff4d8
   6cdb8:	cmp	r0, r1
   6cdbc:	blge	6d240 <luaL_openlibs@@Base+0x3a80>
   6cdc0:	ldrd	r0, [r9]
   6cdc4:	ldrd	r2, [r9, #16]
   6cdc8:	cmp	fp, #16
   6cdcc:	mvn	ip, #0
   6cdd0:	beq	6cde4 <luaL_openlibs@@Base+0x3624>
   6cdd4:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cdd8:	cmn	r3, #14
   6cddc:	mov	ip, r2
   6cde0:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6cde4:	ldrd	r2, [r9, #8]
   6cde8:	cmn	r1, #5
   6cdec:	ldreq	r1, [r0, #12]
   6cdf0:	cmneq	r3, #14
   6cdf4:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6cdf8:	add	r3, r1, #1
   6cdfc:	cmp	r2, #0
   6ce00:	addlt	r2, r2, r3
   6ce04:	cmp	r2, #1
   6ce08:	movlt	r2, #1
   6ce0c:	cmp	ip, #0
   6ce10:	addlt	ip, ip, r3
   6ce14:	bic	ip, ip, ip, asr #31
   6ce18:	cmp	ip, r1
   6ce1c:	add	r0, r0, #15
   6ce20:	movgt	ip, r1
   6ce24:	add	r1, r0, r2
   6ce28:	subs	r2, ip, r2
   6ce2c:	add	r2, r2, #1
   6ce30:	bge	6cd94 <luaL_openlibs@@Base+0x35d4>
   6ce34:	sub	r0, r7, #2784	; 0xae0
   6ce38:	mvn	r1, #4
   6ce3c:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6ce40:	ldr	r0, [r7, #-2860]	; 0xfffff4d4
   6ce44:	ldr	r1, [r7, #-2856]	; 0xfffff4d8
   6ce48:	cmp	r0, r1
   6ce4c:	blge	6d240 <luaL_openlibs@@Base+0x3a80>
   6ce50:	ldr	r2, [r9, #4]
   6ce54:	cmp	fp, #8
   6ce58:	ldr	r1, [r9]
   6ce5c:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6ce60:	sub	r0, r7, #2800	; 0xaf0
   6ce64:	cmn	r2, #5
   6ce68:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6ce6c:	ldr	r3, [r0, #8]
   6ce70:	str	r9, [r8, #16]
   6ce74:	str	r6, [sp, #8]
   6ce78:	str	r8, [r0, #12]
   6ce7c:	str	r3, [r0]
   6ce80:	bl	300a4 <luaL_where@@Base+0xffa0>
   6ce84:	bl	3c664 <luaL_typerror@@Base+0x62f8>
   6ce88:	b	6cda4 <luaL_openlibs@@Base+0x35e4>
   6ce8c:	ldr	r0, [r7, #-2860]	; 0xfffff4d4
   6ce90:	ldr	r1, [r7, #-2856]	; 0xfffff4d8
   6ce94:	cmp	r0, r1
   6ce98:	blge	6d240 <luaL_openlibs@@Base+0x3a80>
   6ce9c:	ldr	r2, [r9, #4]
   6cea0:	cmp	fp, #8
   6cea4:	ldr	r1, [r9]
   6cea8:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6ceac:	sub	r0, r7, #2800	; 0xaf0
   6ceb0:	cmn	r2, #5
   6ceb4:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6ceb8:	ldr	r3, [r0, #8]
   6cebc:	str	r9, [r8, #16]
   6cec0:	str	r6, [sp, #8]
   6cec4:	str	r8, [r0, #12]
   6cec8:	str	r3, [r0]
   6cecc:	bl	30114 <luaL_where@@Base+0x10010>
   6ced0:	bl	3c664 <luaL_typerror@@Base+0x62f8>
   6ced4:	b	6cda4 <luaL_openlibs@@Base+0x35e4>
   6ced8:	ldr	r0, [r7, #-2860]	; 0xfffff4d4
   6cedc:	ldr	r1, [r7, #-2856]	; 0xfffff4d8
   6cee0:	cmp	r0, r1
   6cee4:	blge	6d240 <luaL_openlibs@@Base+0x3a80>
   6cee8:	ldr	r2, [r9, #4]
   6ceec:	cmp	fp, #8
   6cef0:	ldr	r1, [r9]
   6cef4:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cef8:	sub	r0, r7, #2800	; 0xaf0
   6cefc:	cmn	r2, #5
   6cf00:	bne	6d19c <luaL_openlibs@@Base+0x39dc>
   6cf04:	ldr	r3, [r0, #8]
   6cf08:	str	r9, [r8, #16]
   6cf0c:	str	r6, [sp, #8]
   6cf10:	str	r8, [r0, #12]
   6cf14:	str	r3, [r0]
   6cf18:	bl	30184 <luaL_where@@Base+0x10080>
   6cf1c:	bl	3c664 <luaL_typerror@@Base+0x62f8>
   6cf20:	b	6cda4 <luaL_openlibs@@Base+0x35e4>
   6cf24:	bhi	6d19c <luaL_openlibs@@Base+0x39dc>
   6cf28:	lsl	ip, r1, #1
   6cf2c:	adds	ip, ip, #128, 18	; 0x200000
   6cf30:	movpl	r0, #0
   6cf34:	bxpl	lr
   6cf38:	mvn	r3, #248, 30	; 0x3e0
   6cf3c:	subs	ip, r3, ip, asr #21
   6cf40:	bmi	6cf60 <luaL_openlibs@@Base+0x37a0>
   6cf44:	lsl	r3, r1, #11
   6cf48:	orr	r3, r3, #128, 8	; 0x80000000
   6cf4c:	orr	r3, r3, r0, lsr #21
   6cf50:	cmp	r1, #0
   6cf54:	lsr	r0, r3, ip
   6cf58:	rsblt	r0, r0, #0
   6cf5c:	bx	lr
   6cf60:	add	ip, ip, #21
   6cf64:	lsr	r3, r0, ip
   6cf68:	rsb	ip, ip, #20
   6cf6c:	lsl	r0, r1, #12
   6cf70:	cmp	r1, #0
   6cf74:	orr	r0, r3, r0, lsl ip
   6cf78:	rsblt	r0, r0, #0
   6cf7c:	bx	lr
   6cf80:	ldrd	r0, [r9]
   6cf84:	cmp	fp, #8
   6cf88:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cf8c:	cmn	r1, #14
   6cf90:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6cf94:	mvn	r1, #13
   6cf98:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6cf9c:	ldrd	r0, [r9]
   6cfa0:	cmp	fp, #8
   6cfa4:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cfa8:	cmn	r1, #14
   6cfac:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6cfb0:	mov	r2, r0
   6cfb4:	mov	sl, #8
   6cfb8:	ldrd	r0, [r9, sl]
   6cfbc:	cmp	sl, fp
   6cfc0:	add	sl, sl, #8
   6cfc4:	bge	6d050 <luaL_openlibs@@Base+0x3890>
   6cfc8:	cmn	r1, #14
   6cfcc:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6cfd0:	and	r2, r2, r0
   6cfd4:	b	6cfb8 <luaL_openlibs@@Base+0x37f8>
   6cfd8:	ldrd	r0, [r9]
   6cfdc:	cmp	fp, #8
   6cfe0:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6cfe4:	cmn	r1, #14
   6cfe8:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6cfec:	mov	r2, r0
   6cff0:	mov	sl, #8
   6cff4:	ldrd	r0, [r9, sl]
   6cff8:	cmp	sl, fp
   6cffc:	add	sl, sl, #8
   6d000:	bge	6d050 <luaL_openlibs@@Base+0x3890>
   6d004:	cmn	r1, #14
   6d008:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d00c:	orr	r2, r2, r0
   6d010:	b	6cff4 <luaL_openlibs@@Base+0x3834>
   6d014:	ldrd	r0, [r9]
   6d018:	cmp	fp, #8
   6d01c:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6d020:	cmn	r1, #14
   6d024:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d028:	mov	r2, r0
   6d02c:	mov	sl, #8
   6d030:	ldrd	r0, [r9, sl]
   6d034:	cmp	sl, fp
   6d038:	add	sl, sl, #8
   6d03c:	bge	6d050 <luaL_openlibs@@Base+0x3890>
   6d040:	cmn	r1, #14
   6d044:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d048:	eor	r2, r2, r0
   6d04c:	b	6d030 <luaL_openlibs@@Base+0x3870>
   6d050:	mvn	r3, #13
   6d054:	ldr	r6, [r9, #-4]
   6d058:	strd	r2, [r9, #-8]
   6d05c:	b	6c8e0 <luaL_openlibs@@Base+0x3120>
   6d060:	ldrd	r0, [r9]
   6d064:	cmp	fp, #8
   6d068:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6d06c:	cmn	r1, #14
   6d070:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d074:	eor	r2, r0, r0, ror #16
   6d078:	bic	r2, r2, #16711680	; 0xff0000
   6d07c:	ror	r0, r0, #8
   6d080:	mvn	r1, #13
   6d084:	eor	r0, r0, r2, lsr #8
   6d088:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6d08c:	ldrd	r0, [r9]
   6d090:	cmp	fp, #8
   6d094:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6d098:	cmn	r1, #14
   6d09c:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d0a0:	mvn	r0, r0
   6d0a4:	mvn	r1, #13
   6d0a8:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6d0ac:	ldrd	r0, [r9, #8]
   6d0b0:	cmp	fp, #16
   6d0b4:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6d0b8:	cmn	r1, #14
   6d0bc:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d0c0:	and	sl, r0, #31
   6d0c4:	ldrd	r0, [r9]
   6d0c8:	cmn	r1, #14
   6d0cc:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d0d0:	lsl	r0, r0, sl
   6d0d4:	mvn	r1, #13
   6d0d8:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6d0dc:	ldrd	r0, [r9, #8]
   6d0e0:	cmp	fp, #16
   6d0e4:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6d0e8:	cmn	r1, #14
   6d0ec:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d0f0:	and	sl, r0, #31
   6d0f4:	ldrd	r0, [r9]
   6d0f8:	cmn	r1, #14
   6d0fc:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d100:	lsr	r0, r0, sl
   6d104:	mvn	r1, #13
   6d108:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6d10c:	ldrd	r0, [r9, #8]
   6d110:	cmp	fp, #16
   6d114:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6d118:	cmn	r1, #14
   6d11c:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d120:	and	sl, r0, #31
   6d124:	ldrd	r0, [r9]
   6d128:	cmn	r1, #14
   6d12c:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d130:	asr	r0, r0, sl
   6d134:	mvn	r1, #13
   6d138:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6d13c:	ldrd	r0, [r9, #8]
   6d140:	cmp	fp, #16
   6d144:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6d148:	cmn	r1, #14
   6d14c:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d150:	rsb	sl, r0, #0
   6d154:	ldrd	r0, [r9]
   6d158:	cmn	r1, #14
   6d15c:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d160:	ror	r0, r0, sl
   6d164:	mvn	r1, #13
   6d168:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6d16c:	ldrd	r0, [r9, #8]
   6d170:	cmp	fp, #16
   6d174:	bcc	6d19c <luaL_openlibs@@Base+0x39dc>
   6d178:	cmn	r1, #14
   6d17c:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d180:	and	sl, r0, #31
   6d184:	ldrd	r0, [r9]
   6d188:	cmn	r1, #14
   6d18c:	blne	6cf24 <luaL_openlibs@@Base+0x3764>
   6d190:	ror	r0, r0, sl
   6d194:	mvn	r1, #13
   6d198:	b	6c8d8 <luaL_openlibs@@Base+0x3118>
   6d19c:	ldr	r2, [r9, #-8]
   6d1a0:	ldr	r1, [r8, #24]
   6d1a4:	add	r0, r9, fp
   6d1a8:	ldr	r6, [r9, #-4]
   6d1ac:	str	r0, [r8, #20]
   6d1b0:	ldr	r2, [r2, #20]
   6d1b4:	str	r9, [r8, #16]
   6d1b8:	add	r0, r0, #160	; 0xa0
   6d1bc:	str	r6, [sp, #8]
   6d1c0:	cmp	r0, r1
   6d1c4:	mov	r0, r8
   6d1c8:	bhi	6d22c <luaL_openlibs@@Base+0x3a6c>
   6d1cc:	blx	r2
   6d1d0:	ldr	r9, [r8, #16]
   6d1d4:	cmp	r0, #0
   6d1d8:	lsl	fp, r0, #3
   6d1dc:	sub	sl, r9, #8
   6d1e0:	bgt	6c8e4 <luaL_openlibs@@Base+0x3124>
   6d1e4:	ldr	r0, [r8, #20]
   6d1e8:	ldr	r2, [r9, #-8]
   6d1ec:	sub	fp, r0, r9
   6d1f0:	bne	6d210 <luaL_openlibs@@Base+0x3a50>
   6d1f4:	ldr	r6, [r2, #16]
   6d1f8:	ldrb	ip, [r6]
   6d1fc:	ldr	lr, [r6], #4
   6d200:	ldr	ip, [r7, ip, lsl #2]
   6d204:	and	sl, r4, lr, lsr #5
   6d208:	add	sl, sl, r9
   6d20c:	bx	ip
   6d210:	ands	r0, r6, #3
   6d214:	bic	r1, r6, #7
   6d218:	ldreq	lr, [r6, #-4]
   6d21c:	andeq	r1, r4, lr, lsr #5
   6d220:	addeq	r1, r1, #8
   6d224:	sub	ip, r9, r1
   6d228:	b	6bcfc <luaL_openlibs@@Base+0x253c>
   6d22c:	mov	r1, #20
   6d230:	bl	1fd08 <lua_getstack@@Base+0x50>
   6d234:	ldr	r9, [r8, #16]
   6d238:	cmp	r0, r0
   6d23c:	b	6d1e4 <luaL_openlibs@@Base+0x3a24>
   6d240:	mov	sl, lr
   6d244:	str	r9, [r8, #16]
   6d248:	add	r1, r9, fp
   6d24c:	str	r6, [sp, #8]
   6d250:	str	r1, [r8, #20]
   6d254:	mov	r0, r8
   6d258:	bl	3efa4 <luaL_typerror@@Base+0x8c38>
   6d25c:	ldr	r9, [r8, #16]
   6d260:	mov	lr, sl
   6d264:	ldr	r2, [r9, #-8]
   6d268:	bx	lr
   6d26c:	ldrb	r0, [r7, #-2767]	; 0xfffff531
   6d270:	tst	r0, #32
   6d274:	bne	6d2a0 <luaL_openlibs@@Base+0x3ae0>
   6d278:	ldr	r1, [r7, #-2688]	; 0xfffff580
   6d27c:	tst	r0, #16
   6d280:	bne	6d2d8 <luaL_openlibs@@Base+0x3b18>
   6d284:	sub	r1, r1, #1
   6d288:	tst	r0, #12
   6d28c:	strne	r1, [r7, #-2688]	; 0xfffff580
   6d290:	b	6d2d8 <luaL_openlibs@@Base+0x3b18>
   6d294:	ldrb	r0, [r7, #-2767]	; 0xfffff531
   6d298:	tst	r0, #16
   6d29c:	beq	6d2d8 <luaL_openlibs@@Base+0x3b18>
   6d2a0:	and	ip, lr, #255	; 0xff
   6d2a4:	add	ip, r7, ip, lsl #2
   6d2a8:	ldr	pc, [ip, #616]	; 0x268
   6d2ac:	ldrb	r0, [r7, #-2767]	; 0xfffff531
   6d2b0:	ldr	r1, [r7, #-2688]	; 0xfffff580
   6d2b4:	tst	r0, #16
   6d2b8:	bne	6d2a0 <luaL_openlibs@@Base+0x3ae0>
   6d2bc:	tst	r0, #12
   6d2c0:	beq	6d2a0 <luaL_openlibs@@Base+0x3ae0>
   6d2c4:	subs	r1, r1, #1
   6d2c8:	str	r1, [r7, #-2688]	; 0xfffff580
   6d2cc:	beq	6d2d8 <luaL_openlibs@@Base+0x3b18>
   6d2d0:	tst	r0, #4
   6d2d4:	beq	6d2a0 <luaL_openlibs@@Base+0x3ae0>
   6d2d8:	mov	r0, r8
   6d2dc:	str	r9, [r8, #16]
   6d2e0:	mov	r1, r6
   6d2e4:	bl	5368c <lua_gethookcount@@Base+0xc>
   6d2e8:	ldr	r9, [r8, #16]
   6d2ec:	ldrb	ip, [r6, #-4]
   6d2f0:	ldr	lr, [r6, #-4]
   6d2f4:	add	ip, r7, ip, lsl #2
   6d2f8:	ldr	ip, [ip, #616]	; 0x268
   6d2fc:	and	sl, r4, lr, lsr #5
   6d300:	lsr	fp, lr, #16
   6d304:	bx	ip
   6d308:	ldr	r0, [r3, #-24]	; 0xffffffe8
   6d30c:	add	r6, r6, #4
   6d310:	str	r0, [sp, #4]
   6d314:	b	6d2ec <luaL_openlibs@@Base+0x3b2c>
   6d318:	ldr	r2, [r9, #-8]
   6d31c:	sub	r0, r7, #2496	; 0x9c0
   6d320:	str	r6, [sp, #8]
   6d324:	ldr	r2, [r2, #16]
   6d328:	mov	r1, r6
   6d32c:	str	r8, [r7, #-2416]	; 0xfffff690
   6d330:	ldrb	r2, [r2, #-57]	; 0xffffffc7
   6d334:	str	r9, [r8, #16]
   6d338:	add	r2, r9, r2, lsl #3
   6d33c:	str	r2, [r8, #20]
   6d340:	bl	61990 <lua_dump@@Base+0x48c>
   6d344:	b	6d2e8 <luaL_openlibs@@Base+0x3b28>
   6d348:	mov	r1, r6
   6d34c:	b	6d354 <luaL_openlibs@@Base+0x3b94>
   6d350:	orr	r1, r6, #1
   6d354:	add	r3, r9, fp
   6d358:	str	r6, [sp, #8]
   6d35c:	mov	r0, r8
   6d360:	str	r9, [r8, #16]
   6d364:	sub	sl, sl, r9
   6d368:	str	r3, [r8, #20]
   6d36c:	bl	61a10 <lua_dump@@Base+0x50c>
   6d370:	ldr	r9, [r8, #16]
   6d374:	ldr	r3, [r8, #20]
   6d378:	mov	r1, #0
   6d37c:	add	sl, r9, sl
   6d380:	sub	fp, r3, r9
   6d384:	str	r1, [sp, #8]
   6d388:	ldr	r2, [r9, #-8]
   6d38c:	ldr	lr, [r6, #-4]
   6d390:	bx	r0
   6d394:	ldr	ip, [sp, #4]
   6d398:	ldr	lr, [r6, #-4]
   6d39c:	ldr	r2, [r3, #-24]	; 0xffffffe8
   6d3a0:	subs	ip, ip, #8
   6d3a4:	and	fp, r4, lr, lsr #5
   6d3a8:	beq	6d3c4 <luaL_openlibs@@Base+0x3c04>
   6d3ac:	ldrd	r0, [sl]
   6d3b0:	add	sl, sl, #8
   6d3b4:	subs	ip, ip, #8
   6d3b8:	strd	r0, [r9, fp]
   6d3bc:	add	fp, fp, #8
   6d3c0:	bne	6d3ac <luaL_openlibs@@Base+0x3bec>
   6d3c4:	and	sl, r4, lr, lsr #5
   6d3c8:	and	ip, r4, lr, lsr #21
   6d3cc:	add	sl, sl, ip
   6d3d0:	cmp	sl, fp
   6d3d4:	mvn	r1, #0
   6d3d8:	bhi	6d414 <luaL_openlibs@@Base+0x3c54>
   6d3dc:	ldrh	sl, [r2, #64]	; 0x40
   6d3e0:	ldrh	fp, [r2, #66]	; 0x42
   6d3e4:	cmp	fp, sl
   6d3e8:	beq	6bfa8 <luaL_openlibs@@Base+0x27e8>
   6d3ec:	cmp	fp, #0
   6d3f0:	bne	6b840 <luaL_openlibs@@Base+0x2080>
   6d3f4:	str	sl, [r7, #-188]	; 0xffffff44
   6d3f8:	str	r8, [r7, #-2416]	; 0xfffff690
   6d3fc:	str	r9, [r8, #16]
   6d400:	sub	r0, r7, #2496	; 0x9c0
   6d404:	mov	r1, r6
   6d408:	bl	5381c <lua_gethookcount@@Base+0x19c>
   6d40c:	ldr	r9, [r8, #16]
   6d410:	b	6bfa8 <luaL_openlibs@@Base+0x27e8>
   6d414:	strd	r0, [r9, fp]
   6d418:	add	fp, fp, #8
   6d41c:	b	6d3d0 <luaL_openlibs@@Base+0x3c10>
   6d420:	mov	r0, r8
   6d424:	str	r9, [r8, #16]
   6d428:	mov	r1, r6
   6d42c:	bl	538b0 <lua_gethookcount@@Base+0x230>
   6d430:	ldr	r9, [r8, #16]
   6d434:	sub	r6, r6, #4
   6d438:	b	6bfa8 <luaL_openlibs@@Base+0x27e8>
   6d43c:	sub	sp, sp, #12
   6d440:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
   6d444:	ldr	r0, [sp, #64]	; 0x40
   6d448:	ldr	r7, [lr]
   6d44c:	add	r2, sp, #64	; 0x40
   6d450:	mvn	r3, #3
   6d454:	str	r2, [sp, #52]	; 0x34
   6d458:	str	r3, [r7, #-2804]	; 0xfffff50c
   6d45c:	ldr	r1, [r0, #-4]!
   6d460:	str	r0, [sp, #56]	; 0x38
   6d464:	str	r0, [sp, #60]	; 0x3c
   6d468:	vpush	{d0-d15}
   6d46c:	lsl	r1, r1, #8
   6d470:	add	r0, r0, r1, asr #6
   6d474:	ldr	r1, [lr, #4]
   6d478:	sub	r0, r0, lr
   6d47c:	ldr	r8, [r7, #-2660]	; 0xfffff59c
   6d480:	add	r0, r1, r0, lsr #2
   6d484:	ldr	r9, [r7, #-2656]	; 0xfffff5a0
   6d488:	str	r0, [r7, #-188]	; 0xffffff44
   6d48c:	mov	r3, #0
   6d490:	str	r9, [r8, #16]
   6d494:	str	r8, [r7, #-2416]	; 0xfffff690
   6d498:	str	r3, [r7, #-2656]	; 0xfffff5a0
   6d49c:	sub	r0, r7, #2496	; 0x9c0
   6d4a0:	mov	r1, sp
   6d4a4:	bl	61c28 <lua_dump@@Base+0x724>
   6d4a8:	ldr	r1, [r8, #40]	; 0x28
   6d4ac:	ldr	r9, [r8, #16]
   6d4b0:	bic	r1, r1, #3
   6d4b4:	mov	sp, r1
   6d4b8:	ldr	r6, [sp, #8]
   6d4bc:	str	r8, [sp, #12]
   6d4c0:	b	6d4c8 <luaL_openlibs@@Base+0x3d08>
   6d4c4:	ldr	r8, [sp, #12]
   6d4c8:	cmp	r0, #0
   6d4cc:	blt	6d558 <luaL_openlibs@@Base+0x3d98>
   6d4d0:	lsl	fp, r0, #3
   6d4d4:	ldr	r1, [r9, #-8]
   6d4d8:	str	fp, [sp, #4]
   6d4dc:	mov	r2, #0
   6d4e0:	str	r9, [r8, #16]
   6d4e4:	ldr	r1, [r1, #16]
   6d4e8:	str	r2, [r7, #-2656]	; 0xfffff5a0
   6d4ec:	mvn	r3, #0
   6d4f0:	ldr	r5, [r1, #-48]	; 0xffffffd0
   6d4f4:	ldrb	ip, [r6]
   6d4f8:	mov	r4, #255	; 0xff
   6d4fc:	ldr	lr, [r6], #4
   6d500:	lsl	r4, r4, #3
   6d504:	str	r3, [r7, #-2804]	; 0xfffff50c
   6d508:	cmp	ip, #97	; 0x61
   6d50c:	bcs	6d530 <luaL_openlibs@@Base+0x3d70>
   6d510:	cmp	ip, #89	; 0x59
   6d514:	ldr	ip, [r7, ip, lsl #2]
   6d518:	and	sl, r4, lr, lsr #5
   6d51c:	lsrcc	fp, lr, #16
   6d520:	subcs	fp, fp, #8
   6d524:	addcs	sl, sl, r9
   6d528:	ldrcs	r2, [r9, #-8]
   6d52c:	bx	ip
   6d530:	ldr	r0, [r9, #-4]
   6d534:	ands	r1, r0, #3
   6d538:	bne	6d510 <luaL_openlibs@@Base+0x3d50>
   6d53c:	ldr	r2, [r0, #-4]
   6d540:	and	r0, r4, r2, lsr #5
   6d544:	sub	r1, r9, r0
   6d548:	ldr	r2, [r1, #-16]
   6d54c:	ldr	r2, [r2, #16]
   6d550:	ldr	r5, [r2, #-48]	; 0xffffffd0
   6d554:	b	6d510 <luaL_openlibs@@Base+0x3d50>
   6d558:	rsb	r1, r0, #0
   6d55c:	mov	r0, r8
   6d560:	bl	20ff0 <luaL_where@@Base+0xeec>
   6d564:	svccc	0x00f00000	; IMB
   6d568:	vmov	r0, r1, d0
   6d56c:	lsl	r2, r1, #1
   6d570:	adds	ip, r2, #128, 18	; 0x200000
   6d574:	bpl	6d5d4 <luaL_openlibs@@Base+0x3e14>
   6d578:	mvn	r3, #972	; 0x3cc
   6d57c:	subs	ip, r3, ip, asr #21
   6d580:	bxcc	lr
   6d584:	mvn	r3, #1
   6d588:	bic	r2, r0, r3, lsl ip
   6d58c:	and	r0, r0, r3, lsl ip
   6d590:	subs	ip, ip, #32
   6d594:	bicpl	r3, r1, r3, lsl ip
   6d598:	orrpl	r2, r2, r3
   6d59c:	mvnpl	r3, #1
   6d5a0:	andpl	r1, r1, r3, lsl ip
   6d5a4:	tst	r2, r1, asr #31
   6d5a8:	vmoveq	d0, r0, r1
   6d5ac:	bxeq	lr
   6d5b0:	mvn	r3, #1
   6d5b4:	cmp	ip, #0
   6d5b8:	lslpl	r2, r3, ip
   6d5bc:	mvnmi	r2, #0
   6d5c0:	add	ip, ip, #32
   6d5c4:	subs	r0, r0, r3, lsl ip
   6d5c8:	sbc	r1, r1, r2
   6d5cc:	vmov	d0, r0, r1
   6d5d0:	bx	lr
   6d5d4:	bxcs	lr
   6d5d8:	orr	r2, r2, r0
   6d5dc:	tst	r2, r1, asr #31
   6d5e0:	mov	r0, #0
   6d5e4:	and	r1, r1, #128, 8	; 0x80000000
   6d5e8:	ldrne	r3, [pc, #-140]	; 6d564 <luaL_openlibs@@Base+0x3da4>
   6d5ec:	orrne	r1, r1, r3
   6d5f0:	vmov	d0, r0, r1
   6d5f4:	bx	lr
   6d5f8:	lsl	r2, r1, #1
   6d5fc:	adds	ip, r2, #128, 18	; 0x200000
   6d600:	bpl	6d658 <luaL_openlibs@@Base+0x3e98>
   6d604:	mvn	r3, #972	; 0x3cc
   6d608:	subs	ip, r3, ip, asr #21
   6d60c:	bxcc	lr
   6d610:	mvn	r3, #1
   6d614:	bic	r2, r0, r3, lsl ip
   6d618:	and	r0, r0, r3, lsl ip
   6d61c:	subs	ip, ip, #32
   6d620:	bicpl	r3, r1, r3, lsl ip
   6d624:	orrpl	r2, r2, r3
   6d628:	mvnpl	r3, #1
   6d62c:	andpl	r1, r1, r3, lsl ip
   6d630:	tst	r2, r1, asr #31
   6d634:	bxeq	lr
   6d638:	mvn	r3, #1
   6d63c:	cmp	ip, #0
   6d640:	lslpl	r2, r3, ip
   6d644:	mvnmi	r2, #0
   6d648:	add	ip, ip, #32
   6d64c:	subs	r0, r0, r3, lsl ip
   6d650:	sbc	r1, r1, r2
   6d654:	bx	lr
   6d658:	bxcs	lr
   6d65c:	orr	r2, r2, r0
   6d660:	tst	r2, r1, asr #31
   6d664:	mov	r0, #0
   6d668:	and	r1, r1, #128, 8	; 0x80000000
   6d66c:	ldrne	r3, [pc, #-272]	; 6d564 <luaL_openlibs@@Base+0x3da4>
   6d670:	orrne	r1, r1, r3
   6d674:	bx	lr
   6d678:	vmov	r0, r1, d0
   6d67c:	lsl	r2, r1, #1
   6d680:	adds	ip, r2, #128, 18	; 0x200000
   6d684:	bpl	6d6e4 <luaL_openlibs@@Base+0x3f24>
   6d688:	mvn	r3, #972	; 0x3cc
   6d68c:	subs	ip, r3, ip, asr #21
   6d690:	bxcc	lr
   6d694:	mvn	r3, #1
   6d698:	bic	r2, r0, r3, lsl ip
   6d69c:	and	r0, r0, r3, lsl ip
   6d6a0:	subs	ip, ip, #32
   6d6a4:	bicpl	r3, r1, r3, lsl ip
   6d6a8:	orrpl	r2, r2, r3
   6d6ac:	mvnpl	r3, #1
   6d6b0:	andpl	r1, r1, r3, lsl ip
   6d6b4:	bics	r2, r2, r1, asr #31
   6d6b8:	vmoveq	d0, r0, r1
   6d6bc:	bxeq	lr
   6d6c0:	mvn	r3, #1
   6d6c4:	cmp	ip, #0
   6d6c8:	lslpl	r2, r3, ip
   6d6cc:	mvnmi	r2, #0
   6d6d0:	add	ip, ip, #32
   6d6d4:	subs	r0, r0, r3, lsl ip
   6d6d8:	sbc	r1, r1, r2
   6d6dc:	vmov	d0, r0, r1
   6d6e0:	bx	lr
   6d6e4:	bxcs	lr
   6d6e8:	orr	r2, r2, r0
   6d6ec:	bics	r2, r2, r1, asr #31
   6d6f0:	mov	r0, #0
   6d6f4:	and	r1, r1, #128, 8	; 0x80000000
   6d6f8:	ldrne	r3, [pc, #-412]	; 6d564 <luaL_openlibs@@Base+0x3da4>
   6d6fc:	orrne	r1, r1, r3
   6d700:	vmov	d0, r0, r1
   6d704:	bx	lr
   6d708:	lsl	r2, r1, #1
   6d70c:	adds	ip, r2, #128, 18	; 0x200000
   6d710:	bpl	6d768 <luaL_openlibs@@Base+0x3fa8>
   6d714:	mvn	r3, #972	; 0x3cc
   6d718:	subs	ip, r3, ip, asr #21
   6d71c:	bxcc	lr
   6d720:	mvn	r3, #1
   6d724:	bic	r2, r0, r3, lsl ip
   6d728:	and	r0, r0, r3, lsl ip
   6d72c:	subs	ip, ip, #32
   6d730:	bicpl	r3, r1, r3, lsl ip
   6d734:	orrpl	r2, r2, r3
   6d738:	mvnpl	r3, #1
   6d73c:	andpl	r1, r1, r3, lsl ip
   6d740:	bics	r2, r2, r1, asr #31
   6d744:	bxeq	lr
   6d748:	mvn	r3, #1
   6d74c:	cmp	ip, #0
   6d750:	lslpl	r2, r3, ip
   6d754:	mvnmi	r2, #0
   6d758:	add	ip, ip, #32
   6d75c:	subs	r0, r0, r3, lsl ip
   6d760:	sbc	r1, r1, r2
   6d764:	bx	lr
   6d768:	bxcs	lr
   6d76c:	orr	r2, r2, r0
   6d770:	bics	r2, r2, r1, asr #31
   6d774:	mov	r0, #0
   6d778:	and	r1, r1, #128, 8	; 0x80000000
   6d77c:	ldrne	r3, [pc, #-544]	; 6d564 <luaL_openlibs@@Base+0x3da4>
   6d780:	orrne	r1, r1, r3
   6d784:	bx	lr
   6d788:	vmov	r0, r1, d0
   6d78c:	lsl	r2, r1, #1
   6d790:	adds	ip, r2, #128, 18	; 0x200000
   6d794:	andpl	r1, r1, #128, 8	; 0x80000000
   6d798:	movpl	r0, #0
   6d79c:	vmovpl	d0, r0, r1
   6d7a0:	bxpl	lr
   6d7a4:	mvn	r3, #972	; 0x3cc
   6d7a8:	subs	ip, r3, ip, asr #21
   6d7ac:	bxcc	lr
   6d7b0:	mvn	r3, #1
   6d7b4:	and	r0, r0, r3, lsl ip
   6d7b8:	subs	ip, ip, #32
   6d7bc:	andpl	r1, r1, r3, lsl ip
   6d7c0:	vmov	d0, r0, r1
   6d7c4:	bx	lr
   6d7c8:	lsl	r2, r1, #1
   6d7cc:	adds	ip, r2, #128, 18	; 0x200000
   6d7d0:	andpl	r1, r1, #128, 8	; 0x80000000
   6d7d4:	movpl	r0, #0
   6d7d8:	bxpl	lr
   6d7dc:	mvn	r3, #972	; 0x3cc
   6d7e0:	subs	ip, r3, ip, asr #21
   6d7e4:	bxcc	lr
   6d7e8:	mvn	r3, #1
   6d7ec:	and	r0, r0, r3, lsl ip
   6d7f0:	subs	ip, ip, #32
   6d7f4:	andpl	r1, r1, r3, lsl ip
   6d7f8:	bx	lr
   6d7fc:	vdiv.f64	d0, d6, d7
   6d800:	mov	fp, lr
   6d804:	vmov	r0, r1, d0
   6d808:	bl	6d5f8 <luaL_openlibs@@Base+0x3e38>
   6d80c:	vmov	d0, r0, r1
   6d810:	vmul.f64	d0, d0, d7
   6d814:	mov	lr, fp
   6d818:	vsub.f64	d6, d6, d0
   6d81c:	bx	lr
   6d820:	ands	ip, r0, #128, 8	; 0x80000000
   6d824:	rsbmi	r0, r0, #0
   6d828:	eor	ip, ip, r1, asr #1
   6d82c:	cmp	r1, #0
   6d830:	rsbmi	r1, r1, #0
   6d834:	subs	r3, r1, #1
   6d838:	cmpne	r0, r1
   6d83c:	moveq	r0, #0
   6d840:	tsthi	r1, r3
   6d844:	andeq	r0, r0, r3
   6d848:	bls	6d964 <luaL_openlibs@@Base+0x41a4>
   6d84c:	clz	r2, r0
   6d850:	clz	r3, r1
   6d854:	sub	r3, r3, r2
   6d858:	rsbs	r2, r3, #31
   6d85c:	addne	pc, pc, r2, lsl #3
   6d860:	nop			; (mov r0, r0)
   6d864:	cmp	r0, r1, lsl #31
   6d868:	subcs	r0, r0, r1, lsl #31
   6d86c:	cmp	r0, r1, lsl #30
   6d870:	subcs	r0, r0, r1, lsl #30
   6d874:	cmp	r0, r1, lsl #29
   6d878:	subcs	r0, r0, r1, lsl #29
   6d87c:	cmp	r0, r1, lsl #28
   6d880:	subcs	r0, r0, r1, lsl #28
   6d884:	cmp	r0, r1, lsl #27
   6d888:	subcs	r0, r0, r1, lsl #27
   6d88c:	cmp	r0, r1, lsl #26
   6d890:	subcs	r0, r0, r1, lsl #26
   6d894:	cmp	r0, r1, lsl #25
   6d898:	subcs	r0, r0, r1, lsl #25
   6d89c:	cmp	r0, r1, lsl #24
   6d8a0:	subcs	r0, r0, r1, lsl #24
   6d8a4:	cmp	r0, r1, lsl #23
   6d8a8:	subcs	r0, r0, r1, lsl #23
   6d8ac:	cmp	r0, r1, lsl #22
   6d8b0:	subcs	r0, r0, r1, lsl #22
   6d8b4:	cmp	r0, r1, lsl #21
   6d8b8:	subcs	r0, r0, r1, lsl #21
   6d8bc:	cmp	r0, r1, lsl #20
   6d8c0:	subcs	r0, r0, r1, lsl #20
   6d8c4:	cmp	r0, r1, lsl #19
   6d8c8:	subcs	r0, r0, r1, lsl #19
   6d8cc:	cmp	r0, r1, lsl #18
   6d8d0:	subcs	r0, r0, r1, lsl #18
   6d8d4:	cmp	r0, r1, lsl #17
   6d8d8:	subcs	r0, r0, r1, lsl #17
   6d8dc:	cmp	r0, r1, lsl #16
   6d8e0:	subcs	r0, r0, r1, lsl #16
   6d8e4:	cmp	r0, r1, lsl #15
   6d8e8:	subcs	r0, r0, r1, lsl #15
   6d8ec:	cmp	r0, r1, lsl #14
   6d8f0:	subcs	r0, r0, r1, lsl #14
   6d8f4:	cmp	r0, r1, lsl #13
   6d8f8:	subcs	r0, r0, r1, lsl #13
   6d8fc:	cmp	r0, r1, lsl #12
   6d900:	subcs	r0, r0, r1, lsl #12
   6d904:	cmp	r0, r1, lsl #11
   6d908:	subcs	r0, r0, r1, lsl #11
   6d90c:	cmp	r0, r1, lsl #10
   6d910:	subcs	r0, r0, r1, lsl #10
   6d914:	cmp	r0, r1, lsl #9
   6d918:	subcs	r0, r0, r1, lsl #9
   6d91c:	cmp	r0, r1, lsl #8
   6d920:	subcs	r0, r0, r1, lsl #8
   6d924:	cmp	r0, r1, lsl #7
   6d928:	subcs	r0, r0, r1, lsl #7
   6d92c:	cmp	r0, r1, lsl #6
   6d930:	subcs	r0, r0, r1, lsl #6
   6d934:	cmp	r0, r1, lsl #5
   6d938:	subcs	r0, r0, r1, lsl #5
   6d93c:	cmp	r0, r1, lsl #4
   6d940:	subcs	r0, r0, r1, lsl #4
   6d944:	cmp	r0, r1, lsl #3
   6d948:	subcs	r0, r0, r1, lsl #3
   6d94c:	cmp	r0, r1, lsl #2
   6d950:	subcs	r0, r0, r1, lsl #2
   6d954:	cmp	r0, r1, lsl #1
   6d958:	subcs	r0, r0, r1, lsl #1
   6d95c:	cmp	r0, r1
   6d960:	subcs	r0, r0, r1
   6d964:	cmp	r0, #0
   6d968:	cmpne	ip, #0
   6d96c:	submi	r0, r0, r1
   6d970:	eors	r1, r0, ip, lsl #1
   6d974:	rsbmi	r0, r0, #0
   6d978:	bx	lr
   6d97c:	ldr	r6, [ip, #228]	; 0xe4
   6d980:	add	r7, ip, #2880	; 0xb40
   6d984:	str	r4, [sp, #28]
   6d988:	add	r4, sp, #96	; 0x60
   6d98c:	vstmdb	r4!, {d8-d15}
   6d990:	add	ip, r6, #96	; 0x60
   6d994:	strd	r2, [r6, #152]	; 0x98
   6d998:	strd	r0, [r6, #144]	; 0x90
   6d99c:	vstmdb	ip!, {d0-d7}
   6d9a0:	ldr	r3, [sp]
   6d9a4:	add	r2, sp, #128	; 0x80
   6d9a8:	mov	r0, r6
   6d9ac:	lsr	r3, r3, #3
   6d9b0:	str	r2, [r6, #176]	; 0xb0
   6d9b4:	mov	r1, sp
   6d9b8:	str	r3, [r6, #196]	; 0xc4
   6d9bc:	str	r6, [sp, #8]
   6d9c0:	bl	61558 <lua_dump@@Base+0x54>
   6d9c4:	ldr	r9, [r0, #16]
   6d9c8:	mvn	r1, #0
   6d9cc:	ldr	fp, [r0, #20]
   6d9d0:	mov	r4, #255	; 0xff
   6d9d4:	ldr	r2, [r9, #-8]
   6d9d8:	mov	r8, r0
   6d9dc:	sub	fp, fp, r9
   6d9e0:	lsl	r4, r4, #3
   6d9e4:	str	r1, [r7, #-2804]	; 0xfffff50c
   6d9e8:	ldr	r6, [r2, #16]
   6d9ec:	ldrb	ip, [r6]
   6d9f0:	ldr	lr, [r6], #4
   6d9f4:	ldr	ip, [r7, ip, lsl #2]
   6d9f8:	and	sl, r4, lr, lsr #5
   6d9fc:	add	sl, sl, r9
   6da00:	bx	ip
   6da04:	ldr	r6, [r7, #-2652]	; 0xfffff5a4
   6da08:	str	r9, [r8, #16]
   6da0c:	str	r3, [r8, #20]
   6da10:	str	r8, [r6, #12]
   6da14:	mov	r0, r6
   6da18:	mov	r1, sl
   6da1c:	bl	61874 <lua_dump@@Base+0x370>
   6da20:	ldrd	r0, [r6, #144]	; 0x90
   6da24:	vldr	d0, [r6, #32]
   6da28:	b	6bac4 <luaL_openlibs@@Base+0x2304>
   6da2c:	push	{r4, r5, fp, lr}
   6da30:	mov	r4, r0
   6da34:	ldr	r0, [r0, #4]
   6da38:	ldrb	r1, [r4, #8]
   6da3c:	add	r2, r4, #96	; 0x60
   6da40:	add	ip, r4, #16
   6da44:	mov	fp, sp
   6da48:	sub	sp, sp, r0
   6da4c:	subs	r1, r1, #1
   6da50:	vldmia	ip, {d0-d7}
   6da54:	ldr	ip, [r4]
   6da58:	bmi	6da6c <luaL_openlibs@@Base+0x42ac>
   6da5c:	ldr	r3, [r2, r1, lsl #2]
   6da60:	str	r3, [sp, r1, lsl #2]
   6da64:	subs	r1, r1, #1
   6da68:	bpl	6da5c <luaL_openlibs@@Base+0x429c>
   6da6c:	ldrd	r0, [r4, #80]	; 0x50
   6da70:	ldrd	r2, [r4, #88]	; 0x58
   6da74:	blx	ip
   6da78:	mov	sp, fp
   6da7c:	add	ip, r4, #48	; 0x30
   6da80:	strd	r0, [r4, #80]	; 0x50
   6da84:	vstmdb	ip!, {d0-d3}
   6da88:	pop	{r4, r5, fp, pc}
   6da8c:	subs	r2, r1, #1
   6da90:	bxeq	lr
   6da94:	bcc	6dc6c <luaL_openlibs@@Base+0x44ac>
   6da98:	cmp	r0, r1
   6da9c:	bls	6dc50 <luaL_openlibs@@Base+0x4490>
   6daa0:	tst	r1, r2
   6daa4:	beq	6dc5c <luaL_openlibs@@Base+0x449c>
   6daa8:	clz	r3, r0
   6daac:	clz	r2, r1
   6dab0:	sub	r3, r2, r3
   6dab4:	rsbs	r3, r3, #31
   6dab8:	addne	r3, r3, r3, lsl #1
   6dabc:	mov	r2, #0
   6dac0:	addne	pc, pc, r3, lsl #2
   6dac4:	nop			; (mov r0, r0)
   6dac8:	cmp	r0, r1, lsl #31
   6dacc:	adc	r2, r2, r2
   6dad0:	subcs	r0, r0, r1, lsl #31
   6dad4:	cmp	r0, r1, lsl #30
   6dad8:	adc	r2, r2, r2
   6dadc:	subcs	r0, r0, r1, lsl #30
   6dae0:	cmp	r0, r1, lsl #29
   6dae4:	adc	r2, r2, r2
   6dae8:	subcs	r0, r0, r1, lsl #29
   6daec:	cmp	r0, r1, lsl #28
   6daf0:	adc	r2, r2, r2
   6daf4:	subcs	r0, r0, r1, lsl #28
   6daf8:	cmp	r0, r1, lsl #27
   6dafc:	adc	r2, r2, r2
   6db00:	subcs	r0, r0, r1, lsl #27
   6db04:	cmp	r0, r1, lsl #26
   6db08:	adc	r2, r2, r2
   6db0c:	subcs	r0, r0, r1, lsl #26
   6db10:	cmp	r0, r1, lsl #25
   6db14:	adc	r2, r2, r2
   6db18:	subcs	r0, r0, r1, lsl #25
   6db1c:	cmp	r0, r1, lsl #24
   6db20:	adc	r2, r2, r2
   6db24:	subcs	r0, r0, r1, lsl #24
   6db28:	cmp	r0, r1, lsl #23
   6db2c:	adc	r2, r2, r2
   6db30:	subcs	r0, r0, r1, lsl #23
   6db34:	cmp	r0, r1, lsl #22
   6db38:	adc	r2, r2, r2
   6db3c:	subcs	r0, r0, r1, lsl #22
   6db40:	cmp	r0, r1, lsl #21
   6db44:	adc	r2, r2, r2
   6db48:	subcs	r0, r0, r1, lsl #21
   6db4c:	cmp	r0, r1, lsl #20
   6db50:	adc	r2, r2, r2
   6db54:	subcs	r0, r0, r1, lsl #20
   6db58:	cmp	r0, r1, lsl #19
   6db5c:	adc	r2, r2, r2
   6db60:	subcs	r0, r0, r1, lsl #19
   6db64:	cmp	r0, r1, lsl #18
   6db68:	adc	r2, r2, r2
   6db6c:	subcs	r0, r0, r1, lsl #18
   6db70:	cmp	r0, r1, lsl #17
   6db74:	adc	r2, r2, r2
   6db78:	subcs	r0, r0, r1, lsl #17
   6db7c:	cmp	r0, r1, lsl #16
   6db80:	adc	r2, r2, r2
   6db84:	subcs	r0, r0, r1, lsl #16
   6db88:	cmp	r0, r1, lsl #15
   6db8c:	adc	r2, r2, r2
   6db90:	subcs	r0, r0, r1, lsl #15
   6db94:	cmp	r0, r1, lsl #14
   6db98:	adc	r2, r2, r2
   6db9c:	subcs	r0, r0, r1, lsl #14
   6dba0:	cmp	r0, r1, lsl #13
   6dba4:	adc	r2, r2, r2
   6dba8:	subcs	r0, r0, r1, lsl #13
   6dbac:	cmp	r0, r1, lsl #12
   6dbb0:	adc	r2, r2, r2
   6dbb4:	subcs	r0, r0, r1, lsl #12
   6dbb8:	cmp	r0, r1, lsl #11
   6dbbc:	adc	r2, r2, r2
   6dbc0:	subcs	r0, r0, r1, lsl #11
   6dbc4:	cmp	r0, r1, lsl #10
   6dbc8:	adc	r2, r2, r2
   6dbcc:	subcs	r0, r0, r1, lsl #10
   6dbd0:	cmp	r0, r1, lsl #9
   6dbd4:	adc	r2, r2, r2
   6dbd8:	subcs	r0, r0, r1, lsl #9
   6dbdc:	cmp	r0, r1, lsl #8
   6dbe0:	adc	r2, r2, r2
   6dbe4:	subcs	r0, r0, r1, lsl #8
   6dbe8:	cmp	r0, r1, lsl #7
   6dbec:	adc	r2, r2, r2
   6dbf0:	subcs	r0, r0, r1, lsl #7
   6dbf4:	cmp	r0, r1, lsl #6
   6dbf8:	adc	r2, r2, r2
   6dbfc:	subcs	r0, r0, r1, lsl #6
   6dc00:	cmp	r0, r1, lsl #5
   6dc04:	adc	r2, r2, r2
   6dc08:	subcs	r0, r0, r1, lsl #5
   6dc0c:	cmp	r0, r1, lsl #4
   6dc10:	adc	r2, r2, r2
   6dc14:	subcs	r0, r0, r1, lsl #4
   6dc18:	cmp	r0, r1, lsl #3
   6dc1c:	adc	r2, r2, r2
   6dc20:	subcs	r0, r0, r1, lsl #3
   6dc24:	cmp	r0, r1, lsl #2
   6dc28:	adc	r2, r2, r2
   6dc2c:	subcs	r0, r0, r1, lsl #2
   6dc30:	cmp	r0, r1, lsl #1
   6dc34:	adc	r2, r2, r2
   6dc38:	subcs	r0, r0, r1, lsl #1
   6dc3c:	cmp	r0, r1
   6dc40:	adc	r2, r2, r2
   6dc44:	subcs	r0, r0, r1
   6dc48:	mov	r0, r2
   6dc4c:	bx	lr
   6dc50:	moveq	r0, #1
   6dc54:	movne	r0, #0
   6dc58:	bx	lr
   6dc5c:	clz	r2, r1
   6dc60:	rsb	r2, r2, #31
   6dc64:	lsr	r0, r0, r2
   6dc68:	bx	lr
   6dc6c:	cmp	r0, #0
   6dc70:	mvnne	r0, #0
   6dc74:	b	6e5f8 <luaL_openlibs@@Base+0x4e38>
   6dc78:	cmp	r1, #0
   6dc7c:	beq	6dc6c <luaL_openlibs@@Base+0x44ac>
   6dc80:	push	{r0, r1, lr}
   6dc84:	bl	6da8c <luaL_openlibs@@Base+0x42cc>
   6dc88:	pop	{r1, r2, lr}
   6dc8c:	mul	r3, r2, r0
   6dc90:	sub	r1, r1, r3
   6dc94:	bx	lr
   6dc98:	cmp	r1, #0
   6dc9c:	beq	6dea8 <luaL_openlibs@@Base+0x46e8>
   6dca0:	eor	ip, r0, r1
   6dca4:	rsbmi	r1, r1, #0
   6dca8:	subs	r2, r1, #1
   6dcac:	beq	6de74 <luaL_openlibs@@Base+0x46b4>
   6dcb0:	movs	r3, r0
   6dcb4:	rsbmi	r3, r0, #0
   6dcb8:	cmp	r3, r1
   6dcbc:	bls	6de80 <luaL_openlibs@@Base+0x46c0>
   6dcc0:	tst	r1, r2
   6dcc4:	beq	6de90 <luaL_openlibs@@Base+0x46d0>
   6dcc8:	clz	r2, r3
   6dccc:	clz	r0, r1
   6dcd0:	sub	r2, r0, r2
   6dcd4:	rsbs	r2, r2, #31
   6dcd8:	addne	r2, r2, r2, lsl #1
   6dcdc:	mov	r0, #0
   6dce0:	addne	pc, pc, r2, lsl #2
   6dce4:	nop			; (mov r0, r0)
   6dce8:	cmp	r3, r1, lsl #31
   6dcec:	adc	r0, r0, r0
   6dcf0:	subcs	r3, r3, r1, lsl #31
   6dcf4:	cmp	r3, r1, lsl #30
   6dcf8:	adc	r0, r0, r0
   6dcfc:	subcs	r3, r3, r1, lsl #30
   6dd00:	cmp	r3, r1, lsl #29
   6dd04:	adc	r0, r0, r0
   6dd08:	subcs	r3, r3, r1, lsl #29
   6dd0c:	cmp	r3, r1, lsl #28
   6dd10:	adc	r0, r0, r0
   6dd14:	subcs	r3, r3, r1, lsl #28
   6dd18:	cmp	r3, r1, lsl #27
   6dd1c:	adc	r0, r0, r0
   6dd20:	subcs	r3, r3, r1, lsl #27
   6dd24:	cmp	r3, r1, lsl #26
   6dd28:	adc	r0, r0, r0
   6dd2c:	subcs	r3, r3, r1, lsl #26
   6dd30:	cmp	r3, r1, lsl #25
   6dd34:	adc	r0, r0, r0
   6dd38:	subcs	r3, r3, r1, lsl #25
   6dd3c:	cmp	r3, r1, lsl #24
   6dd40:	adc	r0, r0, r0
   6dd44:	subcs	r3, r3, r1, lsl #24
   6dd48:	cmp	r3, r1, lsl #23
   6dd4c:	adc	r0, r0, r0
   6dd50:	subcs	r3, r3, r1, lsl #23
   6dd54:	cmp	r3, r1, lsl #22
   6dd58:	adc	r0, r0, r0
   6dd5c:	subcs	r3, r3, r1, lsl #22
   6dd60:	cmp	r3, r1, lsl #21
   6dd64:	adc	r0, r0, r0
   6dd68:	subcs	r3, r3, r1, lsl #21
   6dd6c:	cmp	r3, r1, lsl #20
   6dd70:	adc	r0, r0, r0
   6dd74:	subcs	r3, r3, r1, lsl #20
   6dd78:	cmp	r3, r1, lsl #19
   6dd7c:	adc	r0, r0, r0
   6dd80:	subcs	r3, r3, r1, lsl #19
   6dd84:	cmp	r3, r1, lsl #18
   6dd88:	adc	r0, r0, r0
   6dd8c:	subcs	r3, r3, r1, lsl #18
   6dd90:	cmp	r3, r1, lsl #17
   6dd94:	adc	r0, r0, r0
   6dd98:	subcs	r3, r3, r1, lsl #17
   6dd9c:	cmp	r3, r1, lsl #16
   6dda0:	adc	r0, r0, r0
   6dda4:	subcs	r3, r3, r1, lsl #16
   6dda8:	cmp	r3, r1, lsl #15
   6ddac:	adc	r0, r0, r0
   6ddb0:	subcs	r3, r3, r1, lsl #15
   6ddb4:	cmp	r3, r1, lsl #14
   6ddb8:	adc	r0, r0, r0
   6ddbc:	subcs	r3, r3, r1, lsl #14
   6ddc0:	cmp	r3, r1, lsl #13
   6ddc4:	adc	r0, r0, r0
   6ddc8:	subcs	r3, r3, r1, lsl #13
   6ddcc:	cmp	r3, r1, lsl #12
   6ddd0:	adc	r0, r0, r0
   6ddd4:	subcs	r3, r3, r1, lsl #12
   6ddd8:	cmp	r3, r1, lsl #11
   6dddc:	adc	r0, r0, r0
   6dde0:	subcs	r3, r3, r1, lsl #11
   6dde4:	cmp	r3, r1, lsl #10
   6dde8:	adc	r0, r0, r0
   6ddec:	subcs	r3, r3, r1, lsl #10
   6ddf0:	cmp	r3, r1, lsl #9
   6ddf4:	adc	r0, r0, r0
   6ddf8:	subcs	r3, r3, r1, lsl #9
   6ddfc:	cmp	r3, r1, lsl #8
   6de00:	adc	r0, r0, r0
   6de04:	subcs	r3, r3, r1, lsl #8
   6de08:	cmp	r3, r1, lsl #7
   6de0c:	adc	r0, r0, r0
   6de10:	subcs	r3, r3, r1, lsl #7
   6de14:	cmp	r3, r1, lsl #6
   6de18:	adc	r0, r0, r0
   6de1c:	subcs	r3, r3, r1, lsl #6
   6de20:	cmp	r3, r1, lsl #5
   6de24:	adc	r0, r0, r0
   6de28:	subcs	r3, r3, r1, lsl #5
   6de2c:	cmp	r3, r1, lsl #4
   6de30:	adc	r0, r0, r0
   6de34:	subcs	r3, r3, r1, lsl #4
   6de38:	cmp	r3, r1, lsl #3
   6de3c:	adc	r0, r0, r0
   6de40:	subcs	r3, r3, r1, lsl #3
   6de44:	cmp	r3, r1, lsl #2
   6de48:	adc	r0, r0, r0
   6de4c:	subcs	r3, r3, r1, lsl #2
   6de50:	cmp	r3, r1, lsl #1
   6de54:	adc	r0, r0, r0
   6de58:	subcs	r3, r3, r1, lsl #1
   6de5c:	cmp	r3, r1
   6de60:	adc	r0, r0, r0
   6de64:	subcs	r3, r3, r1
   6de68:	cmp	ip, #0
   6de6c:	rsbmi	r0, r0, #0
   6de70:	bx	lr
   6de74:	teq	ip, r0
   6de78:	rsbmi	r0, r0, #0
   6de7c:	bx	lr
   6de80:	movcc	r0, #0
   6de84:	asreq	r0, ip, #31
   6de88:	orreq	r0, r0, #1
   6de8c:	bx	lr
   6de90:	clz	r2, r1
   6de94:	rsb	r2, r2, #31
   6de98:	cmp	ip, #0
   6de9c:	lsr	r0, r3, r2
   6dea0:	rsbmi	r0, r0, #0
   6dea4:	bx	lr
   6dea8:	cmp	r0, #0
   6deac:	mvngt	r0, #-2147483648	; 0x80000000
   6deb0:	movlt	r0, #-2147483648	; 0x80000000
   6deb4:	b	6e5f8 <luaL_openlibs@@Base+0x4e38>
   6deb8:	cmp	r1, #0
   6debc:	beq	6dea8 <luaL_openlibs@@Base+0x46e8>
   6dec0:	push	{r0, r1, lr}
   6dec4:	bl	6dca0 <luaL_openlibs@@Base+0x44e0>
   6dec8:	pop	{r1, r2, lr}
   6decc:	mul	r3, r2, r0
   6ded0:	sub	r1, r1, r3
   6ded4:	bx	lr
   6ded8:	eor	r1, r1, #-2147483648	; 0x80000000
   6dedc:	b	6dee4 <luaL_openlibs@@Base+0x4724>
   6dee0:	eor	r3, r3, #-2147483648	; 0x80000000
   6dee4:	push	{r4, r5, lr}
   6dee8:	lsl	r4, r1, #1
   6deec:	lsl	r5, r3, #1
   6def0:	teq	r4, r5
   6def4:	teqeq	r0, r2
   6def8:	orrsne	ip, r4, r0
   6defc:	orrsne	ip, r5, r2
   6df00:	mvnsne	ip, r4, asr #21
   6df04:	mvnsne	ip, r5, asr #21
   6df08:	beq	6e0f4 <luaL_openlibs@@Base+0x4934>
   6df0c:	lsr	r4, r4, #21
   6df10:	rsbs	r5, r4, r5, lsr #21
   6df14:	rsblt	r5, r5, #0
   6df18:	ble	6df38 <luaL_openlibs@@Base+0x4778>
   6df1c:	add	r4, r4, r5
   6df20:	eor	r2, r0, r2
   6df24:	eor	r3, r1, r3
   6df28:	eor	r0, r2, r0
   6df2c:	eor	r1, r3, r1
   6df30:	eor	r2, r0, r2
   6df34:	eor	r3, r1, r3
   6df38:	cmp	r5, #54	; 0x36
   6df3c:	pophi	{r4, r5, pc}
   6df40:	tst	r1, #-2147483648	; 0x80000000
   6df44:	lsl	r1, r1, #12
   6df48:	mov	ip, #1048576	; 0x100000
   6df4c:	orr	r1, ip, r1, lsr #12
   6df50:	beq	6df5c <luaL_openlibs@@Base+0x479c>
   6df54:	rsbs	r0, r0, #0
   6df58:	rsc	r1, r1, #0
   6df5c:	tst	r3, #-2147483648	; 0x80000000
   6df60:	lsl	r3, r3, #12
   6df64:	orr	r3, ip, r3, lsr #12
   6df68:	beq	6df74 <luaL_openlibs@@Base+0x47b4>
   6df6c:	rsbs	r2, r2, #0
   6df70:	rsc	r3, r3, #0
   6df74:	teq	r4, r5
   6df78:	beq	6e0dc <luaL_openlibs@@Base+0x491c>
   6df7c:	sub	r4, r4, #1
   6df80:	rsbs	lr, r5, #32
   6df84:	blt	6dfa0 <luaL_openlibs@@Base+0x47e0>
   6df88:	lsl	ip, r2, lr
   6df8c:	adds	r0, r0, r2, lsr r5
   6df90:	adc	r1, r1, #0
   6df94:	adds	r0, r0, r3, lsl lr
   6df98:	adcs	r1, r1, r3, asr r5
   6df9c:	b	6dfbc <luaL_openlibs@@Base+0x47fc>
   6dfa0:	sub	r5, r5, #32
   6dfa4:	add	lr, lr, #32
   6dfa8:	cmp	r2, #1
   6dfac:	lsl	ip, r3, lr
   6dfb0:	orrcs	ip, ip, #2
   6dfb4:	adds	r0, r0, r3, asr r5
   6dfb8:	adcs	r1, r1, r3, asr #31
   6dfbc:	and	r5, r1, #-2147483648	; 0x80000000
   6dfc0:	bpl	6dfd0 <luaL_openlibs@@Base+0x4810>
   6dfc4:	rsbs	ip, ip, #0
   6dfc8:	rscs	r0, r0, #0
   6dfcc:	rsc	r1, r1, #0
   6dfd0:	cmp	r1, #1048576	; 0x100000
   6dfd4:	bcc	6e014 <luaL_openlibs@@Base+0x4854>
   6dfd8:	cmp	r1, #2097152	; 0x200000
   6dfdc:	bcc	6dffc <luaL_openlibs@@Base+0x483c>
   6dfe0:	lsrs	r1, r1, #1
   6dfe4:	rrxs	r0, r0
   6dfe8:	rrx	ip, ip
   6dfec:	add	r4, r4, #1
   6dff0:	lsl	r2, r4, #21
   6dff4:	cmn	r2, #4194304	; 0x400000
   6dff8:	bcs	6e154 <luaL_openlibs@@Base+0x4994>
   6dffc:	cmp	ip, #-2147483648	; 0x80000000
   6e000:	lsrseq	ip, r0, #1
   6e004:	adcs	r0, r0, #0
   6e008:	adc	r1, r1, r4, lsl #20
   6e00c:	orr	r1, r1, r5
   6e010:	pop	{r4, r5, pc}
   6e014:	lsls	ip, ip, #1
   6e018:	adcs	r0, r0, r0
   6e01c:	adc	r1, r1, r1
   6e020:	tst	r1, #1048576	; 0x100000
   6e024:	sub	r4, r4, #1
   6e028:	bne	6dffc <luaL_openlibs@@Base+0x483c>
   6e02c:	teq	r1, #0
   6e030:	moveq	r1, r0
   6e034:	moveq	r0, #0
   6e038:	clz	r3, r1
   6e03c:	addeq	r3, r3, #32
   6e040:	sub	r3, r3, #11
   6e044:	subs	r2, r3, #32
   6e048:	bge	6e06c <luaL_openlibs@@Base+0x48ac>
   6e04c:	adds	r2, r2, #12
   6e050:	ble	6e068 <luaL_openlibs@@Base+0x48a8>
   6e054:	add	ip, r2, #20
   6e058:	rsb	r2, r2, #12
   6e05c:	lsl	r0, r1, ip
   6e060:	lsr	r1, r1, r2
   6e064:	b	6e07c <luaL_openlibs@@Base+0x48bc>
   6e068:	add	r2, r2, #20
   6e06c:	rsble	ip, r2, #32
   6e070:	lsl	r1, r1, r2
   6e074:	orrle	r1, r1, r0, lsr ip
   6e078:	lslle	r0, r0, r2
   6e07c:	subs	r4, r4, r3
   6e080:	addge	r1, r1, r4, lsl #20
   6e084:	orrge	r1, r1, r5
   6e088:	popge	{r4, r5, pc}
   6e08c:	mvn	r4, r4
   6e090:	subs	r4, r4, #31
   6e094:	bge	6e0d0 <luaL_openlibs@@Base+0x4910>
   6e098:	adds	r4, r4, #12
   6e09c:	bgt	6e0b8 <luaL_openlibs@@Base+0x48f8>
   6e0a0:	add	r4, r4, #20
   6e0a4:	rsb	r2, r4, #32
   6e0a8:	lsr	r0, r0, r4
   6e0ac:	orr	r0, r0, r1, lsl r2
   6e0b0:	orr	r1, r5, r1, lsr r4
   6e0b4:	pop	{r4, r5, pc}
   6e0b8:	rsb	r4, r4, #12
   6e0bc:	rsb	r2, r4, #32
   6e0c0:	lsr	r0, r0, r2
   6e0c4:	orr	r0, r0, r1, lsl r4
   6e0c8:	mov	r1, r5
   6e0cc:	pop	{r4, r5, pc}
   6e0d0:	lsr	r0, r1, r4
   6e0d4:	mov	r1, r5
   6e0d8:	pop	{r4, r5, pc}
   6e0dc:	teq	r4, #0
   6e0e0:	eor	r3, r3, #1048576	; 0x100000
   6e0e4:	eoreq	r1, r1, #1048576	; 0x100000
   6e0e8:	addeq	r4, r4, #1
   6e0ec:	subne	r5, r5, #1
   6e0f0:	b	6df7c <luaL_openlibs@@Base+0x47bc>
   6e0f4:	mvns	ip, r4, asr #21
   6e0f8:	mvnsne	ip, r5, asr #21
   6e0fc:	beq	6e164 <luaL_openlibs@@Base+0x49a4>
   6e100:	teq	r4, r5
   6e104:	teqeq	r0, r2
   6e108:	beq	6e11c <luaL_openlibs@@Base+0x495c>
   6e10c:	orrs	ip, r4, r0
   6e110:	moveq	r1, r3
   6e114:	moveq	r0, r2
   6e118:	pop	{r4, r5, pc}
   6e11c:	teq	r1, r3
   6e120:	movne	r1, #0
   6e124:	movne	r0, #0
   6e128:	popne	{r4, r5, pc}
   6e12c:	lsrs	ip, r4, #21
   6e130:	bne	6e144 <luaL_openlibs@@Base+0x4984>
   6e134:	lsls	r0, r0, #1
   6e138:	adcs	r1, r1, r1
   6e13c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   6e140:	pop	{r4, r5, pc}
   6e144:	adds	r4, r4, #4194304	; 0x400000
   6e148:	addcc	r1, r1, #1048576	; 0x100000
   6e14c:	popcc	{r4, r5, pc}
   6e150:	and	r5, r1, #-2147483648	; 0x80000000
   6e154:	orr	r1, r5, #2130706432	; 0x7f000000
   6e158:	orr	r1, r1, #15728640	; 0xf00000
   6e15c:	mov	r0, #0
   6e160:	pop	{r4, r5, pc}
   6e164:	mvns	ip, r4, asr #21
   6e168:	movne	r1, r3
   6e16c:	movne	r0, r2
   6e170:	mvnseq	ip, r5, asr #21
   6e174:	movne	r3, r1
   6e178:	movne	r2, r0
   6e17c:	orrs	r4, r0, r1, lsl #12
   6e180:	orrseq	r5, r2, r3, lsl #12
   6e184:	teqeq	r1, r3
   6e188:	orrne	r1, r1, #524288	; 0x80000
   6e18c:	pop	{r4, r5, pc}
   6e190:	teq	r0, #0
   6e194:	moveq	r1, #0
   6e198:	bxeq	lr
   6e19c:	push	{r4, r5, lr}
   6e1a0:	mov	r4, #1024	; 0x400
   6e1a4:	add	r4, r4, #50	; 0x32
   6e1a8:	mov	r5, #0
   6e1ac:	mov	r1, #0
   6e1b0:	b	6e02c <luaL_openlibs@@Base+0x486c>
   6e1b4:	teq	r0, #0
   6e1b8:	moveq	r1, #0
   6e1bc:	bxeq	lr
   6e1c0:	push	{r4, r5, lr}
   6e1c4:	mov	r4, #1024	; 0x400
   6e1c8:	add	r4, r4, #50	; 0x32
   6e1cc:	ands	r5, r0, #-2147483648	; 0x80000000
   6e1d0:	rsbmi	r0, r0, #0
   6e1d4:	mov	r1, #0
   6e1d8:	b	6e02c <luaL_openlibs@@Base+0x486c>
   6e1dc:	lsls	r2, r0, #1
   6e1e0:	asr	r1, r2, #3
   6e1e4:	rrx	r1, r1
   6e1e8:	lsl	r0, r2, #28
   6e1ec:	andsne	r3, r2, #-16777216	; 0xff000000
   6e1f0:	teqne	r3, #-16777216	; 0xff000000
   6e1f4:	eorne	r1, r1, #939524096	; 0x38000000
   6e1f8:	bxne	lr
   6e1fc:	bics	r2, r2, #-16777216	; 0xff000000
   6e200:	bxeq	lr
   6e204:	teq	r3, #-16777216	; 0xff000000
   6e208:	orreq	r1, r1, #524288	; 0x80000
   6e20c:	bxeq	lr
   6e210:	push	{r4, r5, lr}
   6e214:	mov	r4, #896	; 0x380
   6e218:	and	r5, r1, #-2147483648	; 0x80000000
   6e21c:	bic	r1, r1, #-2147483648	; 0x80000000
   6e220:	b	6e02c <luaL_openlibs@@Base+0x486c>
   6e224:	orrs	r2, r0, r1
   6e228:	bxeq	lr
   6e22c:	push	{r4, r5, lr}
   6e230:	mov	r5, #0
   6e234:	b	6e254 <luaL_openlibs@@Base+0x4a94>
   6e238:	orrs	r2, r0, r1
   6e23c:	bxeq	lr
   6e240:	push	{r4, r5, lr}
   6e244:	ands	r5, r1, #-2147483648	; 0x80000000
   6e248:	bpl	6e254 <luaL_openlibs@@Base+0x4a94>
   6e24c:	rsbs	r0, r0, #0
   6e250:	rsc	r1, r1, #0
   6e254:	mov	r4, #1024	; 0x400
   6e258:	add	r4, r4, #50	; 0x32
   6e25c:	lsrs	ip, r1, #22
   6e260:	beq	6dfd0 <luaL_openlibs@@Base+0x4810>
   6e264:	mov	r2, #3
   6e268:	lsrs	ip, ip, #3
   6e26c:	addne	r2, r2, #3
   6e270:	lsrs	ip, ip, #3
   6e274:	addne	r2, r2, #3
   6e278:	add	r2, r2, ip, lsr #3
   6e27c:	rsb	r3, r2, #32
   6e280:	lsl	ip, r0, r3
   6e284:	lsr	r0, r0, r2
   6e288:	orr	r0, r0, r1, lsl r3
   6e28c:	lsr	r1, r1, r2
   6e290:	add	r4, r4, r2
   6e294:	b	6dfd0 <luaL_openlibs@@Base+0x4810>
   6e298:	eor	r0, r0, #-2147483648	; 0x80000000
   6e29c:	b	6e2a4 <luaL_openlibs@@Base+0x4ae4>
   6e2a0:	eor	r1, r1, #-2147483648	; 0x80000000
   6e2a4:	lsls	r2, r0, #1
   6e2a8:	lslsne	r3, r1, #1
   6e2ac:	teqne	r2, r3
   6e2b0:	mvnsne	ip, r2, asr #24
   6e2b4:	mvnsne	ip, r3, asr #24
   6e2b8:	beq	6e3b0 <luaL_openlibs@@Base+0x4bf0>
   6e2bc:	lsr	r2, r2, #24
   6e2c0:	rsbs	r3, r2, r3, lsr #24
   6e2c4:	addgt	r2, r2, r3
   6e2c8:	eorgt	r1, r0, r1
   6e2cc:	eorgt	r0, r1, r0
   6e2d0:	eorgt	r1, r0, r1
   6e2d4:	rsblt	r3, r3, #0
   6e2d8:	cmp	r3, #25
   6e2dc:	bxhi	lr
   6e2e0:	tst	r0, #-2147483648	; 0x80000000
   6e2e4:	orr	r0, r0, #8388608	; 0x800000
   6e2e8:	bic	r0, r0, #-16777216	; 0xff000000
   6e2ec:	rsbne	r0, r0, #0
   6e2f0:	tst	r1, #-2147483648	; 0x80000000
   6e2f4:	orr	r1, r1, #8388608	; 0x800000
   6e2f8:	bic	r1, r1, #-16777216	; 0xff000000
   6e2fc:	rsbne	r1, r1, #0
   6e300:	teq	r2, r3
   6e304:	beq	6e398 <luaL_openlibs@@Base+0x4bd8>
   6e308:	sub	r2, r2, #1
   6e30c:	adds	r0, r0, r1, asr r3
   6e310:	rsb	r3, r3, #32
   6e314:	lsl	r1, r1, r3
   6e318:	and	r3, r0, #-2147483648	; 0x80000000
   6e31c:	bpl	6e328 <luaL_openlibs@@Base+0x4b68>
   6e320:	rsbs	r1, r1, #0
   6e324:	rsc	r0, r0, #0
   6e328:	cmp	r0, #8388608	; 0x800000
   6e32c:	bcc	6e360 <luaL_openlibs@@Base+0x4ba0>
   6e330:	cmp	r0, #16777216	; 0x1000000
   6e334:	bcc	6e34c <luaL_openlibs@@Base+0x4b8c>
   6e338:	lsrs	r0, r0, #1
   6e33c:	rrx	r1, r1
   6e340:	add	r2, r2, #1
   6e344:	cmp	r2, #254	; 0xfe
   6e348:	bcs	6e404 <luaL_openlibs@@Base+0x4c44>
   6e34c:	cmp	r1, #-2147483648	; 0x80000000
   6e350:	adc	r0, r0, r2, lsl #23
   6e354:	biceq	r0, r0, #1
   6e358:	orr	r0, r0, r3
   6e35c:	bx	lr
   6e360:	lsls	r1, r1, #1
   6e364:	adc	r0, r0, r0
   6e368:	tst	r0, #8388608	; 0x800000
   6e36c:	sub	r2, r2, #1
   6e370:	bne	6e34c <luaL_openlibs@@Base+0x4b8c>
   6e374:	clz	ip, r0
   6e378:	sub	ip, ip, #8
   6e37c:	subs	r2, r2, ip
   6e380:	lsl	r0, r0, ip
   6e384:	addge	r0, r0, r2, lsl #23
   6e388:	rsblt	r2, r2, #0
   6e38c:	orrge	r0, r0, r3
   6e390:	orrlt	r0, r3, r0, lsr r2
   6e394:	bx	lr
   6e398:	teq	r2, #0
   6e39c:	eor	r1, r1, #8388608	; 0x800000
   6e3a0:	eoreq	r0, r0, #8388608	; 0x800000
   6e3a4:	addeq	r2, r2, #1
   6e3a8:	subne	r3, r3, #1
   6e3ac:	b	6e308 <luaL_openlibs@@Base+0x4b48>
   6e3b0:	lsl	r3, r1, #1
   6e3b4:	mvns	ip, r2, asr #24
   6e3b8:	mvnsne	ip, r3, asr #24
   6e3bc:	beq	6e410 <luaL_openlibs@@Base+0x4c50>
   6e3c0:	teq	r2, r3
   6e3c4:	beq	6e3d4 <luaL_openlibs@@Base+0x4c14>
   6e3c8:	teq	r2, #0
   6e3cc:	moveq	r0, r1
   6e3d0:	bx	lr
   6e3d4:	teq	r0, r1
   6e3d8:	movne	r0, #0
   6e3dc:	bxne	lr
   6e3e0:	tst	r2, #-16777216	; 0xff000000
   6e3e4:	bne	6e3f4 <luaL_openlibs@@Base+0x4c34>
   6e3e8:	lsls	r0, r0, #1
   6e3ec:	orrcs	r0, r0, #-2147483648	; 0x80000000
   6e3f0:	bx	lr
   6e3f4:	adds	r2, r2, #33554432	; 0x2000000
   6e3f8:	addcc	r0, r0, #8388608	; 0x800000
   6e3fc:	bxcc	lr
   6e400:	and	r3, r0, #-2147483648	; 0x80000000
   6e404:	orr	r0, r3, #2130706432	; 0x7f000000
   6e408:	orr	r0, r0, #8388608	; 0x800000
   6e40c:	bx	lr
   6e410:	mvns	r2, r2, asr #24
   6e414:	movne	r0, r1
   6e418:	mvnseq	r3, r3, asr #24
   6e41c:	movne	r1, r0
   6e420:	lsls	r2, r0, #9
   6e424:	lslseq	r3, r1, #9
   6e428:	teqeq	r0, r1
   6e42c:	orrne	r0, r0, #4194304	; 0x400000
   6e430:	bx	lr
   6e434:	mov	r3, #0
   6e438:	b	6e444 <luaL_openlibs@@Base+0x4c84>
   6e43c:	ands	r3, r0, #-2147483648	; 0x80000000
   6e440:	rsbmi	r0, r0, #0
   6e444:	movs	ip, r0
   6e448:	bxeq	lr
   6e44c:	orr	r3, r3, #1258291200	; 0x4b000000
   6e450:	mov	r1, r0
   6e454:	mov	r0, #0
   6e458:	b	6e49c <luaL_openlibs@@Base+0x4cdc>
   6e45c:	orrs	r2, r0, r1
   6e460:	bxeq	lr
   6e464:	mov	r3, #0
   6e468:	b	6e484 <luaL_openlibs@@Base+0x4cc4>
   6e46c:	orrs	r2, r0, r1
   6e470:	bxeq	lr
   6e474:	ands	r3, r1, #-2147483648	; 0x80000000
   6e478:	bpl	6e484 <luaL_openlibs@@Base+0x4cc4>
   6e47c:	rsbs	r0, r0, #0
   6e480:	rsc	r1, r1, #0
   6e484:	movs	ip, r1
   6e488:	moveq	ip, r0
   6e48c:	moveq	r1, r0
   6e490:	moveq	r0, #0
   6e494:	orr	r3, r3, #1526726656	; 0x5b000000
   6e498:	subeq	r3, r3, #268435456	; 0x10000000
   6e49c:	sub	r3, r3, #8388608	; 0x800000
   6e4a0:	clz	r2, ip
   6e4a4:	subs	r2, r2, #8
   6e4a8:	sub	r3, r3, r2, lsl #23
   6e4ac:	blt	6e4cc <luaL_openlibs@@Base+0x4d0c>
   6e4b0:	add	r3, r3, r1, lsl r2
   6e4b4:	lsl	ip, r0, r2
   6e4b8:	rsb	r2, r2, #32
   6e4bc:	cmp	ip, #-2147483648	; 0x80000000
   6e4c0:	adc	r0, r3, r0, lsr r2
   6e4c4:	biceq	r0, r0, #1
   6e4c8:	bx	lr
   6e4cc:	add	r2, r2, #32
   6e4d0:	lsl	ip, r1, r2
   6e4d4:	rsb	r2, r2, #32
   6e4d8:	orrs	r0, r0, ip, lsl #1
   6e4dc:	adc	r0, r3, r1, lsr r2
   6e4e0:	biceq	r0, r0, ip, lsr #31
   6e4e4:	bx	lr
   6e4e8:	cmp	r3, #0
   6e4ec:	cmpeq	r2, #0
   6e4f0:	bne	6e514 <luaL_openlibs@@Base+0x4d54>
   6e4f4:	cmp	r1, #0
   6e4f8:	movlt	r1, #-2147483648	; 0x80000000
   6e4fc:	movlt	r0, #0
   6e500:	blt	6e510 <luaL_openlibs@@Base+0x4d50>
   6e504:	cmpeq	r0, #0
   6e508:	mvnne	r1, #-2147483648	; 0x80000000
   6e50c:	mvnne	r0, #0
   6e510:	b	6e5f8 <luaL_openlibs@@Base+0x4e38>
   6e514:	sub	sp, sp, #8
   6e518:	push	{sp, lr}
   6e51c:	cmp	r1, #0
   6e520:	blt	6e540 <luaL_openlibs@@Base+0x4d80>
   6e524:	cmp	r3, #0
   6e528:	blt	6e574 <luaL_openlibs@@Base+0x4db4>
   6e52c:	bl	6e720 <luaL_openlibs@@Base+0x4f60>
   6e530:	ldr	lr, [sp, #4]
   6e534:	add	sp, sp, #8
   6e538:	pop	{r2, r3}
   6e53c:	bx	lr
   6e540:	rsbs	r0, r0, #0
   6e544:	sbc	r1, r1, r1, lsl #1
   6e548:	cmp	r3, #0
   6e54c:	blt	6e598 <luaL_openlibs@@Base+0x4dd8>
   6e550:	bl	6e720 <luaL_openlibs@@Base+0x4f60>
   6e554:	ldr	lr, [sp, #4]
   6e558:	add	sp, sp, #8
   6e55c:	pop	{r2, r3}
   6e560:	rsbs	r0, r0, #0
   6e564:	sbc	r1, r1, r1, lsl #1
   6e568:	rsbs	r2, r2, #0
   6e56c:	sbc	r3, r3, r3, lsl #1
   6e570:	bx	lr
   6e574:	rsbs	r2, r2, #0
   6e578:	sbc	r3, r3, r3, lsl #1
   6e57c:	bl	6e720 <luaL_openlibs@@Base+0x4f60>
   6e580:	ldr	lr, [sp, #4]
   6e584:	add	sp, sp, #8
   6e588:	pop	{r2, r3}
   6e58c:	rsbs	r0, r0, #0
   6e590:	sbc	r1, r1, r1, lsl #1
   6e594:	bx	lr
   6e598:	rsbs	r2, r2, #0
   6e59c:	sbc	r3, r3, r3, lsl #1
   6e5a0:	bl	6e720 <luaL_openlibs@@Base+0x4f60>
   6e5a4:	ldr	lr, [sp, #4]
   6e5a8:	add	sp, sp, #8
   6e5ac:	pop	{r2, r3}
   6e5b0:	rsbs	r2, r2, #0
   6e5b4:	sbc	r3, r3, r3, lsl #1
   6e5b8:	bx	lr
   6e5bc:	cmp	r3, #0
   6e5c0:	cmpeq	r2, #0
   6e5c4:	bne	6e5dc <luaL_openlibs@@Base+0x4e1c>
   6e5c8:	cmp	r1, #0
   6e5cc:	cmpeq	r0, #0
   6e5d0:	mvnne	r1, #0
   6e5d4:	mvnne	r0, #0
   6e5d8:	b	6e5f8 <luaL_openlibs@@Base+0x4e38>
   6e5dc:	sub	sp, sp, #8
   6e5e0:	push	{sp, lr}
   6e5e4:	bl	6e720 <luaL_openlibs@@Base+0x4f60>
   6e5e8:	ldr	lr, [sp, #4]
   6e5ec:	add	sp, sp, #8
   6e5f0:	pop	{r2, r3}
   6e5f4:	bx	lr
   6e5f8:	push	{r1, lr}
   6e5fc:	mov	r0, #8
   6e600:	bl	12c34 <raise@plt>
   6e604:	pop	{r1, pc}
   6e608:	stmfd	sp!, {r7}
   6e60c:	mov	r7, #983040	; 0xf0000
   6e610:	add	r7, r7, #2
   6e614:	mov	r2, #0
   6e618:	svc	0x00000000
   6e61c:	ldmfd	sp!, {r7}
   6e620:	bx	lr
   6e624:	vmov	s15, r0
   6e628:	vcmpe.f32	s15, #0.0
   6e62c:	vmrs	APSR_nzcv, fpscr
   6e630:	bmi	6e638 <luaL_openlibs@@Base+0x4e78>
   6e634:	b	6e680 <luaL_openlibs@@Base+0x4ec0>
   6e638:	push	{r4, lr}
   6e63c:	eor	r0, r0, #-2147483648	; 0x80000000
   6e640:	bl	6e680 <luaL_openlibs@@Base+0x4ec0>
   6e644:	rsbs	r0, r0, #0
   6e648:	rsc	r1, r1, #0
   6e64c:	pop	{r4, pc}
   6e650:	vmov	d7, r0, r1
   6e654:	vcmpe.f64	d7, #0.0
   6e658:	vmrs	APSR_nzcv, fpscr
   6e65c:	bmi	6e664 <luaL_openlibs@@Base+0x4ea4>
   6e660:	b	6e6d0 <luaL_openlibs@@Base+0x4f10>
   6e664:	push	{r4, lr}
   6e668:	eor	r1, r1, #-2147483648	; 0x80000000
   6e66c:	bl	6e6d0 <luaL_openlibs@@Base+0x4f10>
   6e670:	rsbs	r0, r0, #0
   6e674:	rsc	r1, r1, #0
   6e678:	pop	{r4, pc}
   6e67c:	andeq	r0, r0, r0
   6e680:	vmov	s15, r0
   6e684:	vldr	d6, [pc, #52]	; 6e6c0 <luaL_openlibs@@Base+0x4f00>
   6e688:	vldr	d5, [pc, #56]	; 6e6c8 <luaL_openlibs@@Base+0x4f08>
   6e68c:	push	{r4, r5}
   6e690:	vcvt.f64.f32	d7, s15
   6e694:	mov	r4, #0
   6e698:	vmul.f64	d6, d7, d6
   6e69c:	vcvt.u32.f64	s12, d6
   6e6a0:	vcvt.f64.u32	d4, s12
   6e6a4:	vmov	r1, s12
   6e6a8:	vmls.f64	d7, d4, d5
   6e6ac:	vcvt.u32.f64	s14, d7
   6e6b0:	vmov	r3, s14
   6e6b4:	orr	r0, r4, r3
   6e6b8:	pop	{r4, r5}
   6e6bc:	bx	lr
   6e6c0:	andeq	r0, r0, r0
   6e6c4:	ldclcc	0, cr0, [r0]
   6e6c8:	andeq	r0, r0, r0
   6e6cc:	mvnsmi	r0, r0
   6e6d0:	vmov	d7, r0, r1
   6e6d4:	vldr	d6, [pc, #52]	; 6e710 <luaL_openlibs@@Base+0x4f50>
   6e6d8:	vldr	d5, [pc, #56]	; 6e718 <luaL_openlibs@@Base+0x4f58>
   6e6dc:	push	{r4, r5}
   6e6e0:	mov	r4, #0
   6e6e4:	vmul.f64	d6, d7, d6
   6e6e8:	vcvt.u32.f64	s12, d6
   6e6ec:	vcvt.f64.u32	d4, s12
   6e6f0:	vmov	r1, s12
   6e6f4:	vmls.f64	d7, d4, d5
   6e6f8:	vcvt.u32.f64	s14, d7
   6e6fc:	vmov	r3, s14
   6e700:	orr	r0, r4, r3
   6e704:	pop	{r4, r5}
   6e708:	bx	lr
   6e70c:	nop			; (mov r0, r0)
   6e710:	andeq	r0, r0, r0
   6e714:	ldclcc	0, cr0, [r0]
   6e718:	andeq	r0, r0, r0
   6e71c:	mvnsmi	r0, r0
   6e720:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6e724:	cmp	r1, r3
   6e728:	sub	sp, sp, #12
   6e72c:	cmpeq	r0, r2
   6e730:	mov	sl, r0
   6e734:	mov	fp, r1
   6e738:	ldr	r8, [sp, #48]	; 0x30
   6e73c:	bcc	6e834 <luaL_openlibs@@Base+0x5074>
   6e740:	cmp	r3, #0
   6e744:	mov	r0, r2
   6e748:	mov	r1, r3
   6e74c:	clzne	r2, r3
   6e750:	clzeq	r3, r0
   6e754:	addeq	r2, r3, #32
   6e758:	cmp	fp, #0
   6e75c:	clzeq	r3, sl
   6e760:	addeq	r3, r3, #32
   6e764:	clzne	r3, fp
   6e768:	sub	r3, r2, r3
   6e76c:	sub	ip, r3, #32
   6e770:	lsl	r7, r1, r3
   6e774:	rsb	lr, r3, #32
   6e778:	orr	r7, r7, r0, lsl ip
   6e77c:	orr	r7, r7, r0, lsr lr
   6e780:	lsl	r6, r0, r3
   6e784:	cmp	fp, r7
   6e788:	cmpeq	sl, r6
   6e78c:	bcs	6e854 <luaL_openlibs@@Base+0x5094>
   6e790:	mov	r0, #0
   6e794:	mov	r1, #0
   6e798:	strd	r0, [sp]
   6e79c:	cmp	r3, #0
   6e7a0:	beq	6e840 <luaL_openlibs@@Base+0x5080>
   6e7a4:	lsrs	r7, r7, #1
   6e7a8:	rrx	r6, r6
   6e7ac:	mov	r2, r3
   6e7b0:	b	6e7d4 <luaL_openlibs@@Base+0x5014>
   6e7b4:	subs	r0, sl, r6
   6e7b8:	sbc	r1, fp, r7
   6e7bc:	adds	r4, r0, r0
   6e7c0:	adc	r5, r1, r1
   6e7c4:	adds	sl, r4, #1
   6e7c8:	adc	fp, r5, #0
   6e7cc:	subs	r2, r2, #1
   6e7d0:	beq	6e7f0 <luaL_openlibs@@Base+0x5030>
   6e7d4:	cmp	fp, r7
   6e7d8:	cmpeq	sl, r6
   6e7dc:	bcs	6e7b4 <luaL_openlibs@@Base+0x4ff4>
   6e7e0:	adds	sl, sl, sl
   6e7e4:	adc	fp, fp, fp
   6e7e8:	subs	r2, r2, #1
   6e7ec:	bne	6e7d4 <luaL_openlibs@@Base+0x5014>
   6e7f0:	lsr	r2, sl, r3
   6e7f4:	lsr	r9, fp, r3
   6e7f8:	orr	r2, r2, fp, lsl lr
   6e7fc:	orr	r2, r2, fp, lsr ip
   6e800:	lsl	r1, r9, r3
   6e804:	ldrd	r6, [sp]
   6e808:	orr	r1, r1, r2, lsl ip
   6e80c:	lsl	r0, r2, r3
   6e810:	adds	r6, r6, sl
   6e814:	orr	r1, r1, r2, lsr lr
   6e818:	adc	r7, r7, fp
   6e81c:	subs	r6, r6, r0
   6e820:	sbc	r7, r7, r1
   6e824:	mov	sl, r2
   6e828:	mov	fp, r9
   6e82c:	strd	r6, [sp]
   6e830:	b	6e840 <luaL_openlibs@@Base+0x5080>
   6e834:	mov	r2, #0
   6e838:	mov	r3, #0
   6e83c:	strd	r2, [sp]
   6e840:	cmp	r8, #0
   6e844:	strdne	sl, [r8]
   6e848:	ldrd	r0, [sp]
   6e84c:	add	sp, sp, #12
   6e850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6e854:	mov	r2, #1
   6e858:	subs	sl, sl, r6
   6e85c:	lsl	r1, r2, ip
   6e860:	orr	r1, r1, r2, lsr lr
   6e864:	lsl	r2, r2, r3
   6e868:	str	r1, [sp, #4]
   6e86c:	sbc	fp, fp, r7
   6e870:	str	r2, [sp]
   6e874:	b	6e79c <luaL_openlibs@@Base+0x4fdc>

0006e878 <__libc_csu_init@@Base>:
   6e878:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   6e87c:	mov	r7, r0
   6e880:	ldr	r6, [pc, #72]	; 6e8d0 <__libc_csu_init@@Base+0x58>
   6e884:	ldr	r5, [pc, #72]	; 6e8d4 <__libc_csu_init@@Base+0x5c>
   6e888:	add	r6, pc, r6
   6e88c:	add	r5, pc, r5
   6e890:	sub	r6, r6, r5
   6e894:	mov	r8, r1
   6e898:	mov	r9, r2
   6e89c:	bl	12c08 <_init@@Base>
   6e8a0:	asrs	r6, r6, #2
   6e8a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   6e8a8:	mov	r4, #0
   6e8ac:	add	r4, r4, #1
   6e8b0:	ldr	r3, [r5], #4
   6e8b4:	mov	r2, r9
   6e8b8:	mov	r1, r8
   6e8bc:	mov	r0, r7
   6e8c0:	blx	r3
   6e8c4:	cmp	r6, r4
   6e8c8:	bne	6e8ac <__libc_csu_init@@Base+0x34>
   6e8cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   6e8d0:	andeq	r5, r1, ip, ror #12
   6e8d4:	andeq	r5, r1, r4, ror #12

0006e8d8 <__libc_csu_fini@@Base>:
   6e8d8:	bx	lr

Disassembly of section .fini:

0006e8dc <_fini@@Base>:
   6e8dc:	push	{r3, lr}
   6e8e0:	pop	{r3, pc}
