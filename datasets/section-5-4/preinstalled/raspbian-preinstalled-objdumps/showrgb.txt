
raspbian-preinstalled/showrgb:     file format elf32-littlearm


Disassembly of section .init:

00010500 <.init>:
   10500:	push	{r3, lr}
   10504:	bl	10634 <abort@plt+0x78>
   10508:	pop	{r3, pc}

Disassembly of section .plt:

0001050c <fopen@plt-0x14>:
   1050c:	push	{lr}		; (str lr, [sp, #-4]!)
   10510:	ldr	lr, [pc, #4]	; 1051c <fopen@plt-0x4>
   10514:	add	lr, pc, lr
   10518:	ldr	pc, [lr, #8]!
   1051c:	andeq	r0, r1, r4, ror #21

00010520 <fopen@plt>:
   10520:	add	ip, pc, #0, 12
   10524:	add	ip, ip, #16, 20	; 0x10000
   10528:	ldr	pc, [ip, #2788]!	; 0xae4

0001052c <free@plt>:
   1052c:	add	ip, pc, #0, 12
   10530:	add	ip, ip, #16, 20	; 0x10000
   10534:	ldr	pc, [ip, #2780]!	; 0xadc

00010538 <fgets@plt>:
   10538:	add	ip, pc, #0, 12
   1053c:	add	ip, ip, #16, 20	; 0x10000
   10540:	ldr	pc, [ip, #2772]!	; 0xad4

00010544 <__stack_chk_fail@plt>:
   10544:	add	ip, pc, #0, 12
   10548:	add	ip, ip, #16, 20	; 0x10000
   1054c:	ldr	pc, [ip, #2764]!	; 0xacc

00010550 <perror@plt>:
   10550:	add	ip, pc, #0, 12
   10554:	add	ip, ip, #16, 20	; 0x10000
   10558:	ldr	pc, [ip, #2756]!	; 0xac4

0001055c <__asprintf_chk@plt>:
   1055c:	add	ip, pc, #0, 12
   10560:	add	ip, ip, #16, 20	; 0x10000
   10564:	ldr	pc, [ip, #2748]!	; 0xabc

00010568 <__libc_start_main@plt>:
   10568:	add	ip, pc, #0, 12
   1056c:	add	ip, ip, #16, 20	; 0x10000
   10570:	ldr	pc, [ip, #2740]!	; 0xab4

00010574 <__gmon_start__@plt>:
   10574:	add	ip, pc, #0, 12
   10578:	add	ip, ip, #16, 20	; 0x10000
   1057c:	ldr	pc, [ip, #2732]!	; 0xaac

00010580 <exit@plt>:
   10580:	add	ip, pc, #0, 12
   10584:	add	ip, ip, #16, 20	; 0x10000
   10588:	ldr	pc, [ip, #2724]!	; 0xaa4

0001058c <__printf_chk@plt>:
   1058c:	add	ip, pc, #0, 12
   10590:	add	ip, ip, #16, 20	; 0x10000
   10594:	ldr	pc, [ip, #2716]!	; 0xa9c

00010598 <__fprintf_chk@plt>:
   10598:	add	ip, pc, #0, 12
   1059c:	add	ip, ip, #16, 20	; 0x10000
   105a0:	ldr	pc, [ip, #2708]!	; 0xa94

000105a4 <fclose@plt>:
   105a4:	add	ip, pc, #0, 12
   105a8:	add	ip, ip, #16, 20	; 0x10000
   105ac:	ldr	pc, [ip, #2700]!	; 0xa8c

000105b0 <sscanf@plt>:
   105b0:	add	ip, pc, #0, 12
   105b4:	add	ip, ip, #16, 20	; 0x10000
   105b8:	ldr	pc, [ip, #2692]!	; 0xa84

000105bc <abort@plt>:
   105bc:	add	ip, pc, #0, 12
   105c0:	add	ip, ip, #16, 20	; 0x10000
   105c4:	ldr	pc, [ip, #2684]!	; 0xa7c

Disassembly of section .text:

000105c8 <.text>:
   105c8:	cmp	r0, #2
   105cc:	ldr	r3, [pc, #28]	; 105f0 <abort@plt+0x34>
   105d0:	ldr	r2, [r1]
   105d4:	push	{r4, lr}
   105d8:	ldreq	r0, [r1, #4]
   105dc:	ldrne	r0, [pc, #16]	; 105f4 <abort@plt+0x38>
   105e0:	str	r2, [r3]
   105e4:	bl	106e8 <abort@plt+0x12c>
   105e8:	mov	r0, #0
   105ec:	bl	10580 <exit@plt>
   105f0:	andeq	r1, r2, r8, asr r0
   105f4:	andeq	r0, r1, r8, lsl #20
   105f8:	mov	fp, #0
   105fc:	mov	lr, #0
   10600:	pop	{r1}		; (ldr r1, [sp], #4)
   10604:	mov	r2, sp
   10608:	push	{r2}		; (str r2, [sp, #-4]!)
   1060c:	push	{r0}		; (str r0, [sp, #-4]!)
   10610:	ldr	ip, [pc, #16]	; 10628 <abort@plt+0x6c>
   10614:	push	{ip}		; (str ip, [sp, #-4]!)
   10618:	ldr	r0, [pc, #12]	; 1062c <abort@plt+0x70>
   1061c:	ldr	r3, [pc, #12]	; 10630 <abort@plt+0x74>
   10620:	bl	10568 <__libc_start_main@plt>
   10624:	bl	105bc <abort@plt>
   10628:	andeq	r0, r1, r8, asr r9
   1062c:	andeq	r0, r1, r8, asr #11
   10630:	strdeq	r0, [r1], -r8
   10634:	ldr	r3, [pc, #20]	; 10650 <abort@plt+0x94>
   10638:	ldr	r2, [pc, #20]	; 10654 <abort@plt+0x98>
   1063c:	add	r3, pc, r3
   10640:	ldr	r2, [r3, r2]
   10644:	cmp	r2, #0
   10648:	bxeq	lr
   1064c:	b	10574 <__gmon_start__@plt>
   10650:			; <UNDEFINED> instruction: 0x000109bc
   10654:	andeq	r0, r0, r4, asr #32
   10658:	ldr	r0, [pc, #24]	; 10678 <abort@plt+0xbc>
   1065c:	ldr	r3, [pc, #24]	; 1067c <abort@plt+0xc0>
   10660:	cmp	r3, r0
   10664:	bxeq	lr
   10668:	ldr	r3, [pc, #16]	; 10680 <abort@plt+0xc4>
   1066c:	cmp	r3, #0
   10670:	bxeq	lr
   10674:	bx	r3
   10678:	andeq	r1, r2, r0, asr r0
   1067c:	andeq	r1, r2, r0, asr r0
   10680:	andeq	r0, r0, r0
   10684:	ldr	r0, [pc, #36]	; 106b0 <abort@plt+0xf4>
   10688:	ldr	r1, [pc, #36]	; 106b4 <abort@plt+0xf8>
   1068c:	sub	r1, r1, r0
   10690:	asr	r1, r1, #2
   10694:	add	r1, r1, r1, lsr #31
   10698:	asrs	r1, r1, #1
   1069c:	bxeq	lr
   106a0:	ldr	r3, [pc, #16]	; 106b8 <abort@plt+0xfc>
   106a4:	cmp	r3, #0
   106a8:	bxeq	lr
   106ac:	bx	r3
   106b0:	andeq	r1, r2, r0, asr r0
   106b4:	andeq	r1, r2, r0, asr r0
   106b8:	andeq	r0, r0, r0
   106bc:	push	{r4, lr}
   106c0:	ldr	r4, [pc, #24]	; 106e0 <abort@plt+0x124>
   106c4:	ldrb	r3, [r4]
   106c8:	cmp	r3, #0
   106cc:	popne	{r4, pc}
   106d0:	bl	10658 <abort@plt+0x9c>
   106d4:	mov	r3, #1
   106d8:	strb	r3, [r4]
   106dc:	pop	{r4, pc}
   106e0:	andeq	r1, r2, r4, asr r0
   106e4:	b	10684 <abort@plt+0xc8>
   106e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   106ec:	sub	sp, sp, #16384	; 0x4000
   106f0:	ldr	sl, [pc, #472]	; 108d0 <abort@plt+0x314>
   106f4:	sub	sp, sp, #44	; 0x2c
   106f8:	add	lr, sp, #16384	; 0x4000
   106fc:	ldr	ip, [sl]
   10700:	add	lr, lr, #36	; 0x24
   10704:	mov	r3, r0
   10708:	mov	r4, r0
   1070c:	ldr	r2, [pc, #448]	; 108d4 <abort@plt+0x318>
   10710:	add	r0, sp, #20
   10714:	mov	r1, #1
   10718:	str	ip, [lr]
   1071c:	bl	1055c <__asprintf_chk@plt>
   10720:	cmn	r0, #1
   10724:	beq	108bc <abort@plt+0x300>
   10728:	ldr	r1, [pc, #424]	; 108d8 <abort@plt+0x31c>
   1072c:	ldr	r0, [sp, #20]
   10730:	bl	10520 <fopen@plt>
   10734:	subs	r5, r0, #0
   10738:	beq	10874 <abort@plt+0x2b8>
   1073c:	ldr	r6, [pc, #408]	; 108dc <abort@plt+0x320>
   10740:	ldr	r8, [pc, #408]	; 108e0 <abort@plt+0x324>
   10744:	ldr	r7, [pc, #408]	; 108e4 <abort@plt+0x328>
   10748:	ldr	fp, [pc, #408]	; 108e8 <abort@plt+0x32c>
   1074c:	ldr	r9, [pc, #408]	; 108ec <abort@plt+0x330>
   10750:	mov	r4, #0
   10754:	mov	r2, r5
   10758:	mov	r1, #8192	; 0x2000
   1075c:	add	r0, sp, #36	; 0x24
   10760:	bl	10538 <fgets@plt>
   10764:	cmp	r0, #0
   10768:	beq	10814 <abort@plt+0x258>
   1076c:	add	r2, sp, #8192	; 0x2000
   10770:	add	r3, sp, #32
   10774:	add	r2, r2, #36	; 0x24
   10778:	str	r2, [sp, #4]
   1077c:	str	r3, [sp]
   10780:	add	r2, sp, #24
   10784:	add	r3, sp, #28
   10788:	mov	r1, r6
   1078c:	add	r0, sp, #36	; 0x24
   10790:	bl	105b0 <sscanf@plt>
   10794:	add	r4, r4, #1
   10798:	cmp	r0, #4
   1079c:	beq	107d0 <abort@plt+0x214>
   107a0:	ldrb	r3, [sp, #36]	; 0x24
   107a4:	cmp	r3, #0
   107a8:	cmpne	r3, #33	; 0x21
   107ac:	beq	10754 <abort@plt+0x198>
   107b0:	ldr	r3, [sp, #20]
   107b4:	mov	r2, fp
   107b8:	mov	r1, #1
   107bc:	stm	sp, {r3, r4}
   107c0:	ldr	r0, [r7]
   107c4:	ldr	r3, [r8]
   107c8:	bl	10598 <__fprintf_chk@plt>
   107cc:	b	10754 <abort@plt+0x198>
   107d0:	ldr	r2, [sp, #24]
   107d4:	cmp	r2, #255	; 0xff
   107d8:	bhi	107e8 <abort@plt+0x22c>
   107dc:	ldr	r3, [sp, #28]
   107e0:	cmp	r3, #255	; 0xff
   107e4:	bls	10848 <abort@plt+0x28c>
   107e8:	ldr	r3, [sp, #20]
   107ec:	add	r2, sp, #8192	; 0x2000
   107f0:	add	r2, r2, #36	; 0x24
   107f4:	str	r4, [sp, #8]
   107f8:	strd	r2, [sp]
   107fc:	mov	r1, #1
   10800:	ldr	r3, [r8]
   10804:	mov	r2, r9
   10808:	ldr	r0, [r7]
   1080c:	bl	10598 <__fprintf_chk@plt>
   10810:	b	10754 <abort@plt+0x198>
   10814:	ldr	r0, [sp, #20]
   10818:	bl	1052c <free@plt>
   1081c:	mov	r0, r5
   10820:	bl	105a4 <fclose@plt>
   10824:	add	r3, sp, #16384	; 0x4000
   10828:	add	r3, r3, #36	; 0x24
   1082c:	ldr	r2, [r3]
   10830:	ldr	r3, [sl]
   10834:	cmp	r2, r3
   10838:	bne	108b8 <abort@plt+0x2fc>
   1083c:	add	sp, sp, #16384	; 0x4000
   10840:	add	sp, sp, #44	; 0x2c
   10844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10848:	ldr	r1, [sp, #32]
   1084c:	cmp	r1, #255	; 0xff
   10850:	bhi	107e8 <abort@plt+0x22c>
   10854:	add	r0, sp, #8192	; 0x2000
   10858:	add	r0, r0, #36	; 0x24
   1085c:	str	r0, [sp, #4]
   10860:	str	r1, [sp]
   10864:	mov	r0, #1
   10868:	ldr	r1, [pc, #128]	; 108f0 <abort@plt+0x334>
   1086c:	bl	1058c <__printf_chk@plt>
   10870:	b	10754 <abort@plt+0x198>
   10874:	ldr	r1, [pc, #92]	; 108d8 <abort@plt+0x31c>
   10878:	mov	r0, r4
   1087c:	bl	10520 <fopen@plt>
   10880:	subs	r5, r0, #0
   10884:	bne	1073c <abort@plt+0x180>
   10888:	ldr	r2, [pc, #84]	; 108e4 <abort@plt+0x328>
   1088c:	ldr	r3, [pc, #76]	; 108e0 <abort@plt+0x324>
   10890:	str	r4, [sp]
   10894:	mov	r1, #1
   10898:	ldr	r3, [r3]
   1089c:	ldr	r0, [r2]
   108a0:	ldr	r2, [pc, #76]	; 108f4 <abort@plt+0x338>
   108a4:	bl	10598 <__fprintf_chk@plt>
   108a8:	ldr	r0, [sp, #20]
   108ac:	bl	1052c <free@plt>
   108b0:	mov	r0, #1
   108b4:	bl	10580 <exit@plt>
   108b8:	bl	10544 <__stack_chk_fail@plt>
   108bc:	ldr	r3, [pc, #28]	; 108e0 <abort@plt+0x324>
   108c0:	ldr	r0, [r3]
   108c4:	bl	10550 <perror@plt>
   108c8:	mov	r0, #1
   108cc:	bl	10580 <exit@plt>
   108d0:	andeq	r0, r2, r8, lsl #30
   108d4:	andeq	r0, r1, r8, ror #18
   108d8:	andeq	r0, r1, r0, ror r9
   108dc:	muleq	r1, ip, r9
   108e0:	andeq	r1, r2, r8, asr r0
   108e4:	andeq	r1, r2, r0, asr r0
   108e8:	andeq	r0, r1, ip, ror #19
   108ec:	andeq	r0, r1, r0, asr #19
   108f0:	andeq	r0, r1, ip, lsr #19
   108f4:	andeq	r0, r1, r4, ror r9
   108f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   108fc:	mov	r7, r0
   10900:	ldr	r6, [pc, #72]	; 10950 <abort@plt+0x394>
   10904:	ldr	r5, [pc, #72]	; 10954 <abort@plt+0x398>
   10908:	add	r6, pc, r6
   1090c:	add	r5, pc, r5
   10910:	sub	r6, r6, r5
   10914:	mov	r8, r1
   10918:	mov	r9, r2
   1091c:	bl	10500 <fopen@plt-0x20>
   10920:	asrs	r6, r6, #2
   10924:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10928:	mov	r4, #0
   1092c:	add	r4, r4, #1
   10930:	ldr	r3, [r5], #4
   10934:	mov	r2, r9
   10938:	mov	r1, r8
   1093c:	mov	r0, r7
   10940:	blx	r3
   10944:	cmp	r6, r4
   10948:	bne	1092c <abort@plt+0x370>
   1094c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10950:	strdeq	r0, [r1], -r4
   10954:	andeq	r0, r1, ip, ror #11
   10958:	bx	lr

Disassembly of section .fini:

0001095c <.fini>:
   1095c:	push	{r3, lr}
   10960:	pop	{r3, pc}
