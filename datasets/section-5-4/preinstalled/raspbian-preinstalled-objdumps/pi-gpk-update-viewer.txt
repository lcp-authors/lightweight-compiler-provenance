
raspbian-preinstalled/pi-gpk-update-viewer:     file format elf32-littlearm


Disassembly of section .init:

00015a54 <.init>:
   15a54:	push	{r3, lr}
   15a58:	bl	16f68 <g_strcmp0@plt+0x330>
   15a5c:	pop	{r3, pc}

Disassembly of section .plt:

00015a60 <gtk_expander_get_expanded@plt-0x14>:
   15a60:	push	{lr}		; (str lr, [sp, #-4]!)
   15a64:	ldr	lr, [pc, #4]	; 15a70 <gtk_expander_get_expanded@plt-0x4>
   15a68:	add	lr, pc, lr
   15a6c:	ldr	pc, [lr, #8]!
   15a70:	muleq	r2, r0, r5

00015a74 <gtk_expander_get_expanded@plt>:
   15a74:	add	ip, pc, #0, 12
   15a78:	add	ip, ip, #159744	; 0x27000
   15a7c:	ldr	pc, [ip, #1424]!	; 0x590

00015a80 <g_string_set_size@plt>:
   15a80:	add	ip, pc, #0, 12
   15a84:	add	ip, ip, #159744	; 0x27000
   15a88:	ldr	pc, [ip, #1416]!	; 0x588

00015a8c <g_object_new@plt>:
   15a8c:	add	ip, pc, #0, 12
   15a90:	add	ip, ip, #159744	; 0x27000
   15a94:	ldr	pc, [ip, #1408]!	; 0x580

00015a98 <g_object_add_weak_pointer@plt>:
   15a98:	add	ip, pc, #0, 12
   15a9c:	add	ip, ip, #159744	; 0x27000
   15aa0:	ldr	pc, [ip, #1400]!	; 0x578

00015aa4 <g_date_strftime@plt>:
   15aa4:	add	ip, pc, #0, 12
   15aa8:	add	ip, ip, #159744	; 0x27000
   15aac:	ldr	pc, [ip, #1392]!	; 0x570

00015ab0 <dbus_g_proxy_new_for_name_owner@plt>:
   15ab0:	add	ip, pc, #0, 12
   15ab4:	add	ip, ip, #159744	; 0x27000
   15ab8:	ldr	pc, [ip, #1384]!	; 0x568

00015abc <gtk_tree_store_append@plt>:
   15abc:	add	ip, pc, #0, 12
   15ac0:	add	ip, ip, #159744	; 0x27000
   15ac4:	ldr	pc, [ip, #1376]!	; 0x560

00015ac8 <gtk_cell_renderer_text_get_type@plt>:
   15ac8:	add	ip, pc, #0, 12
   15acc:	add	ip, ip, #159744	; 0x27000
   15ad0:	ldr	pc, [ip, #1368]!	; 0x558

00015ad4 <gtk_application_new@plt>:
   15ad4:	add	ip, pc, #0, 12
   15ad8:	add	ip, ip, #159744	; 0x27000
   15adc:	ldr	pc, [ip, #1360]!	; 0x550

00015ae0 <g_malloc_n@plt>:
   15ae0:	add	ip, pc, #0, 12
   15ae4:	add	ip, ip, #159744	; 0x27000
   15ae8:	ldr	pc, [ip, #1352]!	; 0x548

00015aec <g_object_ref@plt>:
   15aec:	add	ip, pc, #0, 12
   15af0:	add	ip, ip, #159744	; 0x27000
   15af4:	ldr	pc, [ip, #1344]!	; 0x540

00015af8 <gtk_tree_view_append_column@plt>:
   15af8:	add	ip, pc, #0, 12
   15afc:	add	ip, ip, #159744	; 0x27000
   15b00:	ldr	pc, [ip, #1336]!	; 0x538

00015b04 <g_settings_get_boolean@plt>:
   15b04:	add	ip, pc, #0, 12
   15b08:	add	ip, ip, #159744	; 0x27000
   15b0c:	ldr	pc, [ip, #1328]!	; 0x530

00015b10 <gtk_dialog_get_action_area@plt>:
   15b10:	add	ip, pc, #0, 12
   15b14:	add	ip, ip, #159744	; 0x27000
   15b18:	ldr	pc, [ip, #1320]!	; 0x528

00015b1c <pk_control_get_properties_async@plt>:
   15b1c:	add	ip, pc, #0, 12
   15b20:	add	ip, ip, #159744	; 0x27000
   15b24:	ldr	pc, [ip, #1312]!	; 0x520

00015b28 <g_option_context_parse@plt>:
   15b28:	add	ip, pc, #0, 12
   15b2c:	add	ip, ip, #159744	; 0x27000
   15b30:	ldr	pc, [ip, #1304]!	; 0x518

00015b34 <g_option_context_add_group@plt>:
   15b34:	add	ip, pc, #0, 12
   15b38:	add	ip, ip, #159744	; 0x27000
   15b3c:	ldr	pc, [ip, #1296]!	; 0x510

00015b40 <pk_results_get_package_array@plt>:
   15b40:	add	ip, pc, #0, 12
   15b44:	add	ip, ip, #159744	; 0x27000
   15b48:	ldr	pc, [ip, #1288]!	; 0x508

00015b4c <g_cclosure_marshal_VOID__UINT@plt>:
   15b4c:	add	ip, pc, #0, 12
   15b50:	add	ip, ip, #159744	; 0x27000
   15b54:	ldr	pc, [ip, #1280]!	; 0x500

00015b58 <gtk_tree_view_convert_widget_to_bin_window_coords@plt>:
   15b58:	add	ip, pc, #0, 12
   15b5c:	add	ip, ip, #159744	; 0x27000
   15b60:	ldr	pc, [ip, #1272]!	; 0x4f8

00015b64 <g_settings_new@plt>:
   15b64:	add	ip, pc, #0, 12
   15b68:	add	ip, ip, #159744	; 0x27000
   15b6c:	ldr	pc, [ip, #1264]!	; 0x4f0

00015b70 <gtk_message_dialog_format_secondary_text@plt>:
   15b70:	add	ip, pc, #0, 12
   15b74:	add	ip, ip, #159744	; 0x27000
   15b78:	ldr	pc, [ip, #1256]!	; 0x4e8

00015b7c <gtk_text_buffer_get_selection_bounds@plt>:
   15b7c:	add	ip, pc, #0, 12
   15b80:	add	ip, ip, #159744	; 0x27000
   15b84:	ldr	pc, [ip, #1248]!	; 0x4e0

00015b88 <gtk_tree_store_new@plt>:
   15b88:	add	ip, pc, #0, 12
   15b8c:	add	ip, ip, #159744	; 0x27000
   15b90:	ldr	pc, [ip, #1240]!	; 0x4d8

00015b94 <pk_results_get_media_change_required_array@plt>:
   15b94:	add	ip, pc, #0, 12
   15b98:	add	ip, ip, #159744	; 0x27000
   15b9c:	ldr	pc, [ip, #1232]!	; 0x4d0

00015ba0 <gtk_dialog_response@plt>:
   15ba0:	add	ip, pc, #0, 12
   15ba4:	add	ip, ip, #159744	; 0x27000
   15ba8:	ldr	pc, [ip, #1224]!	; 0x4c8

00015bac <g_return_if_fail_warning@plt>:
   15bac:	add	ip, pc, #0, 12
   15bb0:	add	ip, ip, #159744	; 0x27000
   15bb4:	ldr	pc, [ip, #1216]!	; 0x4c0

00015bb8 <g_type_register_static_simple@plt>:
   15bb8:	add	ip, pc, #0, 12
   15bbc:	add	ip, ip, #159744	; 0x27000
   15bc0:	ldr	pc, [ip, #1208]!	; 0x4b8

00015bc4 <gtk_container_add_with_properties@plt>:
   15bc4:	add	ip, pc, #0, 12
   15bc8:	add	ip, ip, #159744	; 0x27000
   15bcc:	ldr	pc, [ip, #1200]!	; 0x4b0

00015bd0 <gtk_list_store_set@plt>:
   15bd0:	add	ip, pc, #0, 12
   15bd4:	add	ip, ip, #159744	; 0x27000
   15bd8:	ldr	pc, [ip, #1192]!	; 0x4a8

00015bdc <g_value_get_string@plt>:
   15bdc:	add	ip, pc, #0, 12
   15be0:	add	ip, ip, #159744	; 0x27000
   15be4:	ldr	pc, [ip, #1184]!	; 0x4a0

00015be8 <pk_package_get_id@plt>:
   15be8:	add	ip, pc, #0, 12
   15bec:	add	ip, ip, #159744	; 0x27000
   15bf0:	ldr	pc, [ip, #1176]!	; 0x498

00015bf4 <gtk_dialog_add_button@plt>:
   15bf4:	add	ip, pc, #0, 12
   15bf8:	add	ip, ip, #159744	; 0x27000
   15bfc:	ldr	pc, [ip, #1168]!	; 0x490

00015c00 <gtk_menu_item_new_with_label@plt>:
   15c00:	add	ip, pc, #0, 12
   15c04:	add	ip, ip, #159744	; 0x27000
   15c08:	ldr	pc, [ip, #1160]!	; 0x488

00015c0c <g_type_class_adjust_private_offset@plt>:
   15c0c:	add	ip, pc, #0, 12
   15c10:	add	ip, ip, #159744	; 0x27000
   15c14:	ldr	pc, [ip, #1152]!	; 0x480

00015c18 <g_timeout_add@plt>:
   15c18:	add	ip, pc, #0, 12
   15c1c:	add	ip, ip, #159744	; 0x27000
   15c20:	ldr	pc, [ip, #1144]!	; 0x478

00015c24 <gtk_tree_model_foreach@plt>:
   15c24:	add	ip, pc, #0, 12
   15c28:	add	ip, ip, #159744	; 0x27000
   15c2c:	ldr	pc, [ip, #1136]!	; 0x470

00015c30 <gtk_info_bar_new@plt>:
   15c30:	add	ip, pc, #0, 12
   15c34:	add	ip, ip, #159744	; 0x27000
   15c38:	ldr	pc, [ip, #1128]!	; 0x468

00015c3c <gtk_tree_row_reference_free@plt>:
   15c3c:	add	ip, pc, #0, 12
   15c40:	add	ip, ip, #159744	; 0x27000
   15c44:	ldr	pc, [ip, #1120]!	; 0x460

00015c48 <gtk_tree_view_column_pack_start@plt>:
   15c48:	add	ip, pc, #0, 12
   15c4c:	add	ip, ip, #159744	; 0x27000
   15c50:	ldr	pc, [ip, #1112]!	; 0x458

00015c54 <g_format_size@plt>:
   15c54:	add	ip, pc, #0, 12
   15c58:	add	ip, ip, #159744	; 0x27000
   15c5c:	ldr	pc, [ip, #1104]!	; 0x450

00015c60 <g_application_get_type@plt>:
   15c60:	add	ip, pc, #0, 12
   15c64:	add	ip, ip, #159744	; 0x27000
   15c68:	ldr	pc, [ip, #1096]!	; 0x448

00015c6c <g_utf8_casefold@plt>:
   15c6c:	add	ip, pc, #0, 12
   15c70:	add	ip, ip, #159744	; 0x27000
   15c74:	ldr	pc, [ip, #1088]!	; 0x440

00015c78 <g_error_free@plt>:
   15c78:	add	ip, pc, #0, 12
   15c7c:	add	ip, ip, #159744	; 0x27000
   15c80:	ldr	pc, [ip, #1080]!	; 0x438

00015c84 <gdk_window_set_cursor@plt>:
   15c84:	add	ip, pc, #0, 12
   15c88:	add	ip, ip, #159744	; 0x27000
   15c8c:	ldr	pc, [ip, #1072]!	; 0x430

00015c90 <pk_package_sack_get_details@plt>:
   15c90:	add	ip, pc, #0, 12
   15c94:	add	ip, ip, #159744	; 0x27000
   15c98:	ldr	pc, [ip, #1064]!	; 0x428

00015c9c <pk_client_get_updates_async@plt>:
   15c9c:	add	ip, pc, #0, 12
   15ca0:	add	ip, ip, #159744	; 0x27000
   15ca4:	ldr	pc, [ip, #1056]!	; 0x420

00015ca8 <g_slist_prepend@plt>:
   15ca8:	add	ip, pc, #0, 12
   15cac:	add	ip, ip, #159744	; 0x27000
   15cb0:	ldr	pc, [ip, #1048]!	; 0x418

00015cb4 <bind_textdomain_codeset@plt>:
   15cb4:	add	ip, pc, #0, 12
   15cb8:	add	ip, ip, #159744	; 0x27000
   15cbc:	ldr	pc, [ip, #1040]!	; 0x410

00015cc0 <gtk_label_get_type@plt>:
   15cc0:	add	ip, pc, #0, 12
   15cc4:	add	ip, ip, #159744	; 0x27000
   15cc8:	ldr	pc, [ip, #1032]!	; 0x408

00015ccc <gtk_label_set_label@plt>:
   15ccc:	add	ip, pc, #0, 12
   15cd0:	add	ip, ip, #159744	; 0x27000
   15cd4:	ldr	pc, [ip, #1024]!	; 0x400

00015cd8 <g_param_spec_string@plt>:
   15cd8:	add	ip, pc, #0, 12
   15cdc:	add	ip, ip, #159744	; 0x27000
   15ce0:	ldr	pc, [ip, #1016]!	; 0x3f8

00015ce4 <g_string_truncate@plt>:
   15ce4:	add	ip, pc, #0, 12
   15ce8:	add	ip, ip, #159744	; 0x27000
   15cec:	ldr	pc, [ip, #1008]!	; 0x3f0

00015cf0 <g_strdelimit@plt>:
   15cf0:	add	ip, pc, #0, 12
   15cf4:	add	ip, ip, #159744	; 0x27000
   15cf8:	ldr	pc, [ip, #1000]!	; 0x3e8

00015cfc <gtk_get_option_group@plt>:
   15cfc:	add	ip, pc, #0, 12
   15d00:	add	ip, ip, #159744	; 0x27000
   15d04:	ldr	pc, [ip, #992]!	; 0x3e0

00015d08 <g_log_set_handler@plt>:
   15d08:	add	ip, pc, #0, 12
   15d0c:	add	ip, ip, #159744	; 0x27000
   15d10:	ldr	pc, [ip, #984]!	; 0x3d8

00015d14 <gtk_widget_get_type@plt>:
   15d14:	add	ip, pc, #0, 12
   15d18:	add	ip, ip, #159744	; 0x27000
   15d1c:	ldr	pc, [ip, #976]!	; 0x3d0

00015d20 <g_string_new@plt>:
   15d20:	add	ip, pc, #0, 12
   15d24:	add	ip, ip, #159744	; 0x27000
   15d28:	ldr	pc, [ip, #968]!	; 0x3c8

00015d2c <gtk_text_view_window_to_buffer_coords@plt>:
   15d2c:	add	ip, pc, #0, 12
   15d30:	add	ip, ip, #159744	; 0x27000
   15d34:	ldr	pc, [ip, #960]!	; 0x3c0

00015d38 <gtk_tree_view_set_model@plt>:
   15d38:	add	ip, pc, #0, 12
   15d3c:	add	ip, ip, #159744	; 0x27000
   15d40:	ldr	pc, [ip, #952]!	; 0x3b8

00015d44 <pk_package_id_split@plt>:
   15d44:	add	ip, pc, #0, 12
   15d48:	add	ip, ip, #159744	; 0x27000
   15d4c:	ldr	pc, [ip, #944]!	; 0x3b0

00015d50 <gtk_text_buffer_delete_mark@plt>:
   15d50:	add	ip, pc, #0, 12
   15d54:	add	ip, ip, #159744	; 0x27000
   15d58:	ldr	pc, [ip, #936]!	; 0x3a8

00015d5c <gtk_info_bar_get_content_area@plt>:
   15d5c:	add	ip, pc, #0, 12
   15d60:	add	ip, ip, #159744	; 0x27000
   15d64:	ldr	pc, [ip, #928]!	; 0x3a0

00015d68 <g_type_check_instance_cast@plt>:
   15d68:	add	ip, pc, #0, 12
   15d6c:	add	ip, ip, #159744	; 0x27000
   15d70:	ldr	pc, [ip, #920]!	; 0x398

00015d74 <gtk_tree_view_column_new_with_attributes@plt>:
   15d74:	add	ip, pc, #0, 12
   15d78:	add	ip, ip, #159744	; 0x27000
   15d7c:	ldr	pc, [ip, #912]!	; 0x390

00015d80 <gtk_text_view_get_type@plt>:
   15d80:	add	ip, pc, #0, 12
   15d84:	add	ip, ip, #159744	; 0x27000
   15d88:	ldr	pc, [ip, #904]!	; 0x388

00015d8c <g_option_context_new@plt>:
   15d8c:	add	ip, pc, #0, 12
   15d90:	add	ip, ip, #159744	; 0x27000
   15d94:	ldr	pc, [ip, #896]!	; 0x380

00015d98 <gdk_event_get_time@plt>:
   15d98:	add	ip, pc, #0, 12
   15d9c:	add	ip, ip, #159744	; 0x27000
   15da0:	ldr	pc, [ip, #888]!	; 0x378

00015da4 <gtk_widget_get_window@plt>:
   15da4:	add	ip, pc, #0, 12
   15da8:	add	ip, ip, #159744	; 0x27000
   15dac:	ldr	pc, [ip, #880]!	; 0x370

00015db0 <gtk_menu_new@plt>:
   15db0:	add	ip, pc, #0, 12
   15db4:	add	ip, ip, #159744	; 0x27000
   15db8:	ldr	pc, [ip, #872]!	; 0x368

00015dbc <gtk_widget_hide@plt>:
   15dbc:	add	ip, pc, #0, 12
   15dc0:	add	ip, ip, #159744	; 0x27000
   15dc4:	ldr	pc, [ip, #864]!	; 0x360

00015dc8 <g_option_group_new@plt>:
   15dc8:	add	ip, pc, #0, 12
   15dcc:	add	ip, ip, #159744	; 0x27000
   15dd0:	ldr	pc, [ip, #856]!	; 0x358

00015dd4 <g_object_steal_data@plt>:
   15dd4:	add	ip, pc, #0, 12
   15dd8:	add	ip, ip, #159744	; 0x27000
   15ddc:	ldr	pc, [ip, #848]!	; 0x350

00015de0 <pk_role_enum_to_string@plt>:
   15de0:	add	ip, pc, #0, 12
   15de4:	add	ip, ip, #159744	; 0x27000
   15de8:	ldr	pc, [ip, #840]!	; 0x348

00015dec <g_log@plt>:
   15dec:	add	ip, pc, #0, 12
   15df0:	add	ip, ip, #159744	; 0x27000
   15df4:	ldr	pc, [ip, #832]!	; 0x340

00015df8 <gtk_text_view_get_window@plt>:
   15df8:	add	ip, pc, #0, 12
   15dfc:	add	ip, ip, #159744	; 0x27000
   15e00:	ldr	pc, [ip, #824]!	; 0x338

00015e04 <g_option_context_set_summary@plt>:
   15e04:	add	ip, pc, #0, 12
   15e08:	add	ip, ip, #159744	; 0x27000
   15e0c:	ldr	pc, [ip, #816]!	; 0x330

00015e10 <g_date_free@plt>:
   15e10:	add	ip, pc, #0, 12
   15e14:	add	ip, ip, #159744	; 0x27000
   15e18:	ldr	pc, [ip, #808]!	; 0x328

00015e1c <gtk_text_buffer_get_insert@plt>:
   15e1c:	add	ip, pc, #0, 12
   15e20:	add	ip, ip, #159744	; 0x27000
   15e24:	ldr	pc, [ip, #800]!	; 0x320

00015e28 <g_type_name@plt>:
   15e28:	add	ip, pc, #0, 12
   15e2c:	add	ip, ip, #159744	; 0x27000
   15e30:	ldr	pc, [ip, #792]!	; 0x318

00015e34 <g_cancellable_cancel@plt>:
   15e34:	add	ip, pc, #0, 12
   15e38:	add	ip, ip, #159744	; 0x27000
   15e3c:	ldr	pc, [ip, #784]!	; 0x310

00015e40 <pk_status_enum_to_string@plt>:
   15e40:	add	ip, pc, #0, 12
   15e44:	add	ip, ip, #159744	; 0x27000
   15e48:	ldr	pc, [ip, #776]!	; 0x308

00015e4c <gtk_expander_get_type@plt>:
   15e4c:	add	ip, pc, #0, 12
   15e50:	add	ip, ip, #159744	; 0x27000
   15e54:	ldr	pc, [ip, #768]!	; 0x300

00015e58 <gtk_tree_store_get_type@plt>:
   15e58:	add	ip, pc, #0, 12
   15e5c:	add	ip, ip, #159744	; 0x27000
   15e60:	ldr	pc, [ip, #760]!	; 0x2f8

00015e64 <pk_results_get_error_code@plt>:
   15e64:	add	ip, pc, #0, 12
   15e68:	add	ip, ip, #159744	; 0x27000
   15e6c:	ldr	pc, [ip, #752]!	; 0x2f0

00015e70 <gtk_text_buffer_insert@plt>:
   15e70:	add	ip, pc, #0, 12
   15e74:	add	ip, ip, #159744	; 0x27000
   15e78:	ldr	pc, [ip, #744]!	; 0x2e8

00015e7c <gtk_toggle_button_get_type@plt>:
   15e7c:	add	ip, pc, #0, 12
   15e80:	add	ip, ip, #159744	; 0x27000
   15e84:	ldr	pc, [ip, #736]!	; 0x2e0

00015e88 <gtk_box_new@plt>:
   15e88:	add	ip, pc, #0, 12
   15e8c:	add	ip, ip, #159744	; 0x27000
   15e90:	ldr	pc, [ip, #728]!	; 0x2d8

00015e94 <pk_client_get_type@plt>:
   15e94:	add	ip, pc, #0, 12
   15e98:	add	ip, ip, #159744	; 0x27000
   15e9c:	ldr	pc, [ip, #720]!	; 0x2d0

00015ea0 <gtk_widget_set_tooltip_text@plt>:
   15ea0:	add	ip, pc, #0, 12
   15ea4:	add	ip, ip, #159744	; 0x27000
   15ea8:	ldr	pc, [ip, #712]!	; 0x2c8

00015eac <pk_control_get_properties_finish@plt>:
   15eac:	add	ip, pc, #0, 12
   15eb0:	add	ip, ip, #159744	; 0x27000
   15eb4:	ldr	pc, [ip, #704]!	; 0x2c0

00015eb8 <gtk_tree_model_iter_children@plt>:
   15eb8:	add	ip, pc, #0, 12
   15ebc:	add	ip, ip, #159744	; 0x27000
   15ec0:	ldr	pc, [ip, #696]!	; 0x2b8

00015ec4 <gdk_cursor_new_for_display@plt>:
   15ec4:	add	ip, pc, #0, 12
   15ec8:	add	ip, ip, #159744	; 0x27000
   15ecc:	ldr	pc, [ip, #688]!	; 0x2b0

00015ed0 <gtk_tree_model_iter_next@plt>:
   15ed0:	add	ip, pc, #0, 12
   15ed4:	add	ip, ip, #159744	; 0x27000
   15ed8:	ldr	pc, [ip, #680]!	; 0x2a8

00015edc <g_value_set_uint@plt>:
   15edc:	add	ip, pc, #0, 12
   15ee0:	add	ip, ip, #159744	; 0x27000
   15ee4:	ldr	pc, [ip, #672]!	; 0x2a0

00015ee8 <gtk_application_add_window@plt>:
   15ee8:	add	ip, pc, #0, 12
   15eec:	add	ip, ip, #159744	; 0x27000
   15ef0:	ldr	pc, [ip, #664]!	; 0x298

00015ef4 <gtk_window_set_icon_name@plt>:
   15ef4:	add	ip, pc, #0, 12
   15ef8:	add	ip, ip, #159744	; 0x27000
   15efc:	ldr	pc, [ip, #656]!	; 0x290

00015f00 <gtk_tree_selection_select_path@plt>:
   15f00:	add	ip, pc, #0, 12
   15f04:	add	ip, ip, #159744	; 0x27000
   15f08:	ldr	pc, [ip, #648]!	; 0x288

00015f0c <pk_error_get_details@plt>:
   15f0c:	add	ip, pc, #0, 12
   15f10:	add	ip, ip, #159744	; 0x27000
   15f14:	ldr	pc, [ip, #640]!	; 0x280

00015f18 <gtk_tree_selection_set_mode@plt>:
   15f18:	add	ip, pc, #0, 12
   15f1c:	add	ip, ip, #159744	; 0x27000
   15f20:	ldr	pc, [ip, #632]!	; 0x278

00015f24 <pk_error_get_code@plt>:
   15f24:	add	ip, pc, #0, 12
   15f28:	add	ip, ip, #159744	; 0x27000
   15f2c:	ldr	pc, [ip, #624]!	; 0x270

00015f30 <gtk_tree_view_expand_all@plt>:
   15f30:	add	ip, pc, #0, 12
   15f34:	add	ip, ip, #159744	; 0x27000
   15f38:	ldr	pc, [ip, #616]!	; 0x268

00015f3c <gtk_tree_row_reference_new@plt>:
   15f3c:	add	ip, pc, #0, 12
   15f40:	add	ip, ip, #159744	; 0x27000
   15f44:	ldr	pc, [ip, #608]!	; 0x260

00015f48 <gtk_button_new_with_mnemonic@plt>:
   15f48:	add	ip, pc, #0, 12
   15f4c:	add	ip, ip, #159744	; 0x27000
   15f50:	ldr	pc, [ip, #600]!	; 0x258

00015f54 <dbus_g_proxy_call@plt>:
   15f54:	add	ip, pc, #0, 12
   15f58:	add	ip, ip, #159744	; 0x27000
   15f5c:	ldr	pc, [ip, #592]!	; 0x250

00015f60 <gtk_widget_get_style_context@plt>:
   15f60:	add	ip, pc, #0, 12
   15f64:	add	ip, ip, #159744	; 0x27000
   15f68:	ldr	pc, [ip, #584]!	; 0x248

00015f6c <gtk_tree_view_get_model@plt>:
   15f6c:	add	ip, pc, #0, 12
   15f70:	add	ip, ip, #159744	; 0x27000
   15f74:	ldr	pc, [ip, #576]!	; 0x240

00015f78 <textdomain@plt>:
   15f78:	add	ip, pc, #0, 12
   15f7c:	add	ip, ip, #159744	; 0x27000
   15f80:	ldr	pc, [ip, #568]!	; 0x238

00015f84 <gdk_pixbuf_new_subpixbuf@plt>:
   15f84:	add	ip, pc, #0, 12
   15f88:	add	ip, ip, #159744	; 0x27000
   15f8c:	ldr	pc, [ip, #560]!	; 0x230

00015f90 <gtk_text_buffer_get_type@plt>:
   15f90:	add	ip, pc, #0, 12
   15f94:	add	ip, ip, #159744	; 0x27000
   15f98:	ldr	pc, [ip, #552]!	; 0x228

00015f9c <gtk_tree_view_column_set_sort_column_id@plt>:
   15f9c:	add	ip, pc, #0, 12
   15fa0:	add	ip, ip, #159744	; 0x27000
   15fa4:	ldr	pc, [ip, #544]!	; 0x220

00015fa8 <g_option_group_set_parse_hooks@plt>:
   15fa8:	add	ip, pc, #0, 12
   15fac:	add	ip, ip, #159744	; 0x27000
   15fb0:	ldr	pc, [ip, #536]!	; 0x218

00015fb4 <pango_attr_list_unref@plt>:
   15fb4:	add	ip, pc, #0, 12
   15fb8:	add	ip, ip, #159744	; 0x27000
   15fbc:	ldr	pc, [ip, #528]!	; 0x210

00015fc0 <g_application_release@plt>:
   15fc0:	add	ip, pc, #0, 12
   15fc4:	add	ip, ip, #159744	; 0x27000
   15fc8:	ldr	pc, [ip, #520]!	; 0x208

00015fcc <pk_package_sack_filter_by_info@plt>:
   15fcc:	add	ip, pc, #0, 12
   15fd0:	add	ip, ip, #159744	; 0x27000
   15fd4:	ldr	pc, [ip, #512]!	; 0x200

00015fd8 <g_signal_emit@plt>:
   15fd8:	add	ip, pc, #0, 12
   15fdc:	add	ip, ip, #159744	; 0x27000
   15fe0:	ldr	pc, [ip, #504]!	; 0x1f8

00015fe4 <g_strdup@plt>:
   15fe4:	add	ip, pc, #0, 12
   15fe8:	add	ip, ip, #159744	; 0x27000
   15fec:	ldr	pc, [ip, #496]!	; 0x1f0

00015ff0 <pk_control_new@plt>:
   15ff0:	add	ip, pc, #0, 12
   15ff4:	add	ip, ip, #159744	; 0x27000
   15ff8:	ldr	pc, [ip, #488]!	; 0x1e8

00015ffc <dbus_g_bus_get@plt>:
   15ffc:	add	ip, pc, #0, 12
   16000:	add	ip, ip, #159744	; 0x27000
   16004:	ldr	pc, [ip, #480]!	; 0x1e0

00016008 <strftime@plt>:
   16008:	add	ip, pc, #0, 12
   1600c:	add	ip, ip, #159744	; 0x27000
   16010:	ldr	pc, [ip, #472]!	; 0x1d8

00016014 <g_strchomp@plt>:
   16014:	add	ip, pc, #0, 12
   16018:	add	ip, ip, #159744	; 0x27000
   1601c:	ldr	pc, [ip, #464]!	; 0x1d0

00016020 <gtk_info_bar_get_type@plt>:
   16020:	add	ip, pc, #0, 12
   16024:	add	ip, ip, #159744	; 0x27000
   16028:	ldr	pc, [ip, #456]!	; 0x1c8

0001602c <memset@plt>:
   1602c:	add	ip, pc, #0, 12
   16030:	add	ip, ip, #159744	; 0x27000
   16034:	ldr	pc, [ip, #448]!	; 0x1c0

00016038 <pk_package_sack_get_total_bytes@plt>:
   16038:	add	ip, pc, #0, 12
   1603c:	add	ip, ip, #159744	; 0x27000
   16040:	ldr	pc, [ip, #440]!	; 0x1b8

00016044 <gtk_tree_path_compare@plt>:
   16044:	add	ip, pc, #0, 12
   16048:	add	ip, ip, #159744	; 0x27000
   1604c:	ldr	pc, [ip, #432]!	; 0x1b0

00016050 <gtk_tree_sortable_get_type@plt>:
   16050:	add	ip, pc, #0, 12
   16054:	add	ip, ip, #159744	; 0x27000
   16058:	ldr	pc, [ip, #424]!	; 0x1a8

0001605c <gtk_container_get_type@plt>:
   1605c:	add	ip, pc, #0, 12
   16060:	add	ip, ip, #159744	; 0x27000
   16064:	ldr	pc, [ip, #416]!	; 0x1a0

00016068 <gtk_builder_get_object@plt>:
   16068:	add	ip, pc, #0, 12
   1606c:	add	ip, ip, #159744	; 0x27000
   16070:	ldr	pc, [ip, #408]!	; 0x198

00016074 <pk_task_user_declined@plt>:
   16074:	add	ip, pc, #0, 12
   16078:	add	ip, ip, #159744	; 0x27000
   1607c:	ldr	pc, [ip, #400]!	; 0x190

00016080 <gtk_text_buffer_get_iter_at_mark@plt>:
   16080:	add	ip, pc, #0, 12
   16084:	add	ip, ip, #159744	; 0x27000
   16088:	ldr	pc, [ip, #392]!	; 0x188

0001608c <gtk_scrolled_window_set_overlay_scrolling@plt>:
   1608c:	add	ip, pc, #0, 12
   16090:	add	ip, ip, #159744	; 0x27000
   16094:	ldr	pc, [ip, #384]!	; 0x180

00016098 <gtk_container_set_border_width@plt>:
   16098:	add	ip, pc, #0, 12
   1609c:	add	ip, ip, #159744	; 0x27000
   160a0:	ldr	pc, [ip, #376]!	; 0x178

000160a4 <pk_client_generic_finish@plt>:
   160a4:	add	ip, pc, #0, 12
   160a8:	add	ip, ip, #159744	; 0x27000
   160ac:	ldr	pc, [ip, #368]!	; 0x170

000160b0 <gtk_progress_bar_set_fraction@plt>:
   160b0:	add	ip, pc, #0, 12
   160b4:	add	ip, ip, #159744	; 0x27000
   160b8:	ldr	pc, [ip, #360]!	; 0x168

000160bc <pk_task_user_accepted@plt>:
   160bc:	add	ip, pc, #0, 12
   160c0:	add	ip, ip, #159744	; 0x27000
   160c4:	ldr	pc, [ip, #352]!	; 0x160

000160c8 <g_ptr_array_new_with_free_func@plt>:
   160c8:	add	ip, pc, #0, 12
   160cc:	add	ip, ip, #159744	; 0x27000
   160d0:	ldr	pc, [ip, #344]!	; 0x158

000160d4 <gtk_image_set_from_pixbuf@plt>:
   160d4:	add	ip, pc, #0, 12
   160d8:	add	ip, ip, #159744	; 0x27000
   160dc:	ldr	pc, [ip, #336]!	; 0x150

000160e0 <g_strdup_printf@plt>:
   160e0:	add	ip, pc, #0, 12
   160e4:	add	ip, ip, #159744	; 0x27000
   160e8:	ldr	pc, [ip, #328]!	; 0x148

000160ec <gtk_show_uri@plt>:
   160ec:	add	ip, pc, #0, 12
   160f0:	add	ip, ip, #159744	; 0x27000
   160f4:	ldr	pc, [ip, #320]!	; 0x140

000160f8 <dcngettext@plt>:
   160f8:	add	ip, pc, #0, 12
   160fc:	add	ip, ip, #159744	; 0x27000
   16100:	ldr	pc, [ip, #312]!	; 0x138

00016104 <gtk_icon_theme_append_search_path@plt>:
   16104:	add	ip, pc, #0, 12
   16108:	add	ip, ip, #159744	; 0x27000
   1610c:	ldr	pc, [ip, #304]!	; 0x130

00016110 <pk_error_enum_to_string@plt>:
   16110:	add	ip, pc, #0, 12
   16114:	add	ip, ip, #159744	; 0x27000
   16118:	ldr	pc, [ip, #296]!	; 0x128

0001611c <gtk_icon_theme_load_icon@plt>:
   1611c:	add	ip, pc, #0, 12
   16120:	add	ip, ip, #159744	; 0x27000
   16124:	ldr	pc, [ip, #288]!	; 0x120

00016128 <g_signal_new@plt>:
   16128:	add	ip, pc, #0, 12
   1612c:	add	ip, ip, #159744	; 0x27000
   16130:	ldr	pc, [ip, #280]!	; 0x118

00016134 <g_application_run@plt>:
   16134:	add	ip, pc, #0, 12
   16138:	add	ip, ip, #159744	; 0x27000
   1613c:	ldr	pc, [ip, #272]!	; 0x110

00016140 <gtk_tree_view_set_search_equal_func@plt>:
   16140:	add	ip, pc, #0, 12
   16144:	add	ip, ip, #159744	; 0x27000
   16148:	ldr	pc, [ip, #264]!	; 0x108

0001614c <pk_results_get_distro_upgrade_array@plt>:
   1614c:	add	ip, pc, #0, 12
   16150:	add	ip, ip, #159744	; 0x27000
   16154:	ldr	pc, [ip, #256]!	; 0x100

00016158 <gtk_scrolled_window_new@plt>:
   16158:	add	ip, pc, #0, 12
   1615c:	add	ip, ip, #159744	; 0x27000
   16160:	ldr	pc, [ip, #248]!	; 0xf8

00016164 <gtk_tree_store_set@plt>:
   16164:	add	ip, pc, #0, 12
   16168:	add	ip, ip, #159744	; 0x27000
   1616c:	ldr	pc, [ip, #240]!	; 0xf0

00016170 <gtk_tree_path_free@plt>:
   16170:	add	ip, pc, #0, 12
   16174:	add	ip, ip, #159744	; 0x27000
   16178:	ldr	pc, [ip, #232]!	; 0xe8

0001617c <gtk_tree_view_get_column@plt>:
   1617c:	add	ip, pc, #0, 12
   16180:	add	ip, ip, #159744	; 0x27000
   16184:	ldr	pc, [ip, #224]!	; 0xe0

00016188 <abort@plt>:
   16188:	add	ip, pc, #0, 12
   1618c:	add	ip, ip, #159744	; 0x27000
   16190:	ldr	pc, [ip, #216]!	; 0xd8

00016194 <gtk_tree_view_set_show_expanders@plt>:
   16194:	add	ip, pc, #0, 12
   16198:	add	ip, ip, #159744	; 0x27000
   1619c:	ldr	pc, [ip, #208]!	; 0xd0

000161a0 <gdk_pixbuf_get_height@plt>:
   161a0:	add	ip, pc, #0, 12
   161a4:	add	ip, ip, #159744	; 0x27000
   161a8:	ldr	pc, [ip, #200]!	; 0xc8

000161ac <gtk_text_view_new@plt>:
   161ac:	add	ip, pc, #0, 12
   161b0:	add	ip, ip, #159744	; 0x27000
   161b4:	ldr	pc, [ip, #192]!	; 0xc0

000161b8 <gtk_label_new@plt>:
   161b8:	add	ip, pc, #0, 12
   161bc:	add	ip, ip, #159744	; 0x27000
   161c0:	ldr	pc, [ip, #184]!	; 0xb8

000161c4 <g_strsplit@plt>:
   161c4:	add	ip, pc, #0, 12
   161c8:	add	ip, ip, #159744	; 0x27000
   161cc:	ldr	pc, [ip, #176]!	; 0xb0

000161d0 <gtk_tree_view_set_level_indentation@plt>:
   161d0:	add	ip, pc, #0, 12
   161d4:	add	ip, ip, #159744	; 0x27000
   161d8:	ldr	pc, [ip, #168]!	; 0xa8

000161dc <gtk_tree_view_get_path_at_pos@plt>:
   161dc:	add	ip, pc, #0, 12
   161e0:	add	ip, ip, #159744	; 0x27000
   161e4:	ldr	pc, [ip, #160]!	; 0xa0

000161e8 <gtk_cell_renderer_text_new@plt>:
   161e8:	add	ip, pc, #0, 12
   161ec:	add	ip, ip, #159744	; 0x27000
   161f0:	ldr	pc, [ip, #152]!	; 0x98

000161f4 <pk_task_get_type@plt>:
   161f4:	add	ip, pc, #0, 12
   161f8:	add	ip, ip, #159744	; 0x27000
   161fc:	ldr	pc, [ip, #144]!	; 0x90

00016200 <pk_ptr_array_to_strv@plt>:
   16200:	add	ip, pc, #0, 12
   16204:	add	ip, ip, #159744	; 0x27000
   16208:	ldr	pc, [ip, #136]!	; 0x88

0001620c <gtk_window_set_title@plt>:
   1620c:	add	ip, pc, #0, 12
   16210:	add	ip, ip, #159744	; 0x27000
   16214:	ldr	pc, [ip, #128]!	; 0x80

00016218 <gtk_box_reorder_child@plt>:
   16218:	add	ip, pc, #0, 12
   1621c:	add	ip, ip, #159744	; 0x27000
   16220:	ldr	pc, [ip, #120]!	; 0x78

00016224 <gtk_tree_view_column_get_type@plt>:
   16224:	add	ip, pc, #0, 12
   16228:	add	ip, ip, #159744	; 0x27000
   1622c:	ldr	pc, [ip, #112]!	; 0x70

00016230 <gdk_pixbuf_get_width@plt>:
   16230:	add	ip, pc, #0, 12
   16234:	add	ip, ip, #159744	; 0x27000
   16238:	ldr	pc, [ip, #104]!	; 0x68

0001623c <gtk_widget_set_size_request@plt>:
   1623c:	add	ip, pc, #0, 12
   16240:	add	ip, ip, #159744	; 0x27000
   16244:	ldr	pc, [ip, #96]!	; 0x60

00016248 <gtk_container_add@plt>:
   16248:	add	ip, pc, #0, 12
   1624c:	add	ip, ip, #159744	; 0x27000
   16250:	ldr	pc, [ip, #88]!	; 0x58

00016254 <gdk_display_get_default@plt>:
   16254:	add	ip, pc, #0, 12
   16258:	add	ip, ip, #159744	; 0x27000
   1625c:	ldr	pc, [ip, #80]!	; 0x50

00016260 <gtk_text_view_set_buffer@plt>:
   16260:	add	ip, pc, #0, 12
   16264:	add	ip, ip, #159744	; 0x27000
   16268:	ldr	pc, [ip, #72]!	; 0x48

0001626c <pk_package_sack_sort@plt>:
   1626c:	add	ip, pc, #0, 12
   16270:	add	ip, ip, #159744	; 0x27000
   16274:	ldr	pc, [ip, #64]!	; 0x40

00016278 <g_date_new@plt>:
   16278:	add	ip, pc, #0, 12
   1627c:	add	ip, ip, #159744	; 0x27000
   16280:	ldr	pc, [ip, #56]!	; 0x38

00016284 <gtk_window_set_default_size@plt>:
   16284:	add	ip, pc, #0, 12
   16288:	add	ip, ip, #159744	; 0x27000
   1628c:	ldr	pc, [ip, #48]!	; 0x30

00016290 <g_type_instance_get_private@plt>:
   16290:	add	ip, pc, #0, 12
   16294:	add	ip, ip, #159744	; 0x27000
   16298:	ldr	pc, [ip, #40]!	; 0x28

0001629c <g_strjoin@plt>:
   1629c:	add	ip, pc, #0, 12
   162a0:	add	ip, ip, #159744	; 0x27000
   162a4:	ldr	pc, [ip, #32]!

000162a8 <gtk_tree_view_column_new@plt>:
   162a8:	add	ip, pc, #0, 12
   162ac:	add	ip, ip, #159744	; 0x27000
   162b0:	ldr	pc, [ip, #24]!

000162b4 <g_str_has_prefix@plt>:
   162b4:	add	ip, pc, #0, 12
   162b8:	add	ip, ip, #159744	; 0x27000
   162bc:	ldr	pc, [ip, #16]!

000162c0 <pk_package_sack_get_array@plt>:
   162c0:	add	ip, pc, #0, 12
   162c4:	add	ip, ip, #159744	; 0x27000
   162c8:	ldr	pc, [ip, #8]!

000162cc <localtime@plt>:
   162cc:	add	ip, pc, #0, 12
   162d0:	add	ip, ip, #159744	; 0x27000
   162d4:	ldr	pc, [ip, #0]!

000162d8 <gtk_scrolled_window_set_policy@plt>:
   162d8:	add	ip, pc, #0, 12
   162dc:	add	ip, ip, #155648	; 0x26000
   162e0:	ldr	pc, [ip, #4088]!	; 0xff8

000162e4 <g_cancellable_new@plt>:
   162e4:	add	ip, pc, #0, 12
   162e8:	add	ip, ip, #155648	; 0x26000
   162ec:	ldr	pc, [ip, #4080]!	; 0xff0

000162f0 <gtk_tree_view_column_set_title@plt>:
   162f0:	add	ip, pc, #0, 12
   162f4:	add	ip, ip, #155648	; 0x26000
   162f8:	ldr	pc, [ip, #4072]!	; 0xfe8

000162fc <gtk_box_get_type@plt>:
   162fc:	add	ip, pc, #0, 12
   16300:	add	ip, ip, #155648	; 0x26000
   16304:	ldr	pc, [ip, #4064]!	; 0xfe0

00016308 <gtk_text_buffer_insert_with_tags_by_name@plt>:
   16308:	add	ip, pc, #0, 12
   1630c:	add	ip, ip, #155648	; 0x26000
   16310:	ldr	pc, [ip, #4056]!	; 0xfd8

00016314 <g_signal_connect_data@plt>:
   16314:	add	ip, pc, #0, 12
   16318:	add	ip, ip, #155648	; 0x26000
   1631c:	ldr	pc, [ip, #4048]!	; 0xfd0

00016320 <g_once_init_enter@plt>:
   16320:	add	ip, pc, #0, 12
   16324:	add	ip, ip, #155648	; 0x26000
   16328:	ldr	pc, [ip, #4040]!	; 0xfc8

0001632c <g_slist_remove_link@plt>:
   1632c:	add	ip, pc, #0, 12
   16330:	add	ip, ip, #155648	; 0x26000
   16334:	ldr	pc, [ip, #4032]!	; 0xfc0

00016338 <gtk_tree_row_reference_get_model@plt>:
   16338:	add	ip, pc, #0, 12
   1633c:	add	ip, ip, #155648	; 0x26000
   16340:	ldr	pc, [ip, #4024]!	; 0xfb8

00016344 <gtk_notebook_append_page@plt>:
   16344:	add	ip, pc, #0, 12
   16348:	add	ip, ip, #155648	; 0x26000
   1634c:	ldr	pc, [ip, #4016]!	; 0xfb0

00016350 <gtk_text_buffer_set_text@plt>:
   16350:	add	ip, pc, #0, 12
   16354:	add	ip, ip, #155648	; 0x26000
   16358:	ldr	pc, [ip, #4008]!	; 0xfa8

0001635c <gtk_widget_set_no_show_all@plt>:
   1635c:	add	ip, pc, #0, 12
   16360:	add	ip, ip, #155648	; 0x26000
   16364:	ldr	pc, [ip, #4000]!	; 0xfa0

00016368 <gtk_tree_path_new_from_string@plt>:
   16368:	add	ip, pc, #0, 12
   1636c:	add	ip, ip, #155648	; 0x26000
   16370:	ldr	pc, [ip, #3992]!	; 0xf98

00016374 <gtk_text_tag_table_lookup@plt>:
   16374:	add	ip, pc, #0, 12
   16378:	add	ip, ip, #155648	; 0x26000
   1637c:	ldr	pc, [ip, #3984]!	; 0xf90

00016380 <pk_task_update_packages_async@plt>:
   16380:	add	ip, pc, #0, 12
   16384:	add	ip, ip, #155648	; 0x26000
   16388:	ldr	pc, [ip, #3976]!	; 0xf88

0001638c <gtk_widget_destroy@plt>:
   1638c:	add	ip, pc, #0, 12
   16390:	add	ip, ip, #155648	; 0x26000
   16394:	ldr	pc, [ip, #3968]!	; 0xf80

00016398 <gdk_window_set_transient_for@plt>:
   16398:	add	ip, pc, #0, 12
   1639c:	add	ip, ip, #155648	; 0x26000
   163a0:	ldr	pc, [ip, #3960]!	; 0xf78

000163a4 <gtk_menu_popup@plt>:
   163a4:	add	ip, pc, #0, 12
   163a8:	add	ip, ip, #155648	; 0x26000
   163ac:	ldr	pc, [ip, #3952]!	; 0xf70

000163b0 <gtk_box_pack_start@plt>:
   163b0:	add	ip, pc, #0, 12
   163b4:	add	ip, ip, #155648	; 0x26000
   163b8:	ldr	pc, [ip, #3944]!	; 0xf68

000163bc <gtk_menu_shell_get_type@plt>:
   163bc:	add	ip, pc, #0, 12
   163c0:	add	ip, ip, #155648	; 0x26000
   163c4:	ldr	pc, [ip, #3936]!	; 0xf60

000163c8 <pk_bitfield_from_enums@plt>:
   163c8:	add	ip, pc, #0, 12
   163cc:	add	ip, ip, #155648	; 0x26000
   163d0:	ldr	pc, [ip, #3928]!	; 0xf58

000163d4 <gtk_text_view_get_buffer@plt>:
   163d4:	add	ip, pc, #0, 12
   163d8:	add	ip, ip, #155648	; 0x26000
   163dc:	ldr	pc, [ip, #3920]!	; 0xf50

000163e0 <gtk_progress_bar_get_type@plt>:
   163e0:	add	ip, pc, #0, 12
   163e4:	add	ip, ip, #155648	; 0x26000
   163e8:	ldr	pc, [ip, #3912]!	; 0xf48

000163ec <gtk_cell_renderer_spinner_new@plt>:
   163ec:	add	ip, pc, #0, 12
   163f0:	add	ip, ip, #155648	; 0x26000
   163f4:	ldr	pc, [ip, #3904]!	; 0xf40

000163f8 <gtk_text_tag_table_add@plt>:
   163f8:	add	ip, pc, #0, 12
   163fc:	add	ip, ip, #155648	; 0x26000
   16400:	ldr	pc, [ip, #3896]!	; 0xf38

00016404 <gtk_text_tag_new@plt>:
   16404:	add	ip, pc, #0, 12
   16408:	add	ip, ip, #155648	; 0x26000
   1640c:	ldr	pc, [ip, #3888]!	; 0xf30

00016410 <g_intern_static_string@plt>:
   16410:	add	ip, pc, #0, 12
   16414:	add	ip, ip, #155648	; 0x26000
   16418:	ldr	pc, [ip, #3880]!	; 0xf28

0001641c <gtk_notebook_new@plt>:
   1641c:	add	ip, pc, #0, 12
   16420:	add	ip, ip, #155648	; 0x26000
   16424:	ldr	pc, [ip, #3872]!	; 0xf20

00016428 <g_date_set_time_val@plt>:
   16428:	add	ip, pc, #0, 12
   1642c:	add	ip, ip, #155648	; 0x26000
   16430:	ldr	pc, [ip, #3864]!	; 0xf18

00016434 <g_strrstr@plt>:
   16434:	add	ip, pc, #0, 12
   16438:	add	ip, ip, #155648	; 0x26000
   1643c:	ldr	pc, [ip, #3856]!	; 0xf10

00016440 <gtk_image_get_type@plt>:
   16440:	add	ip, pc, #0, 12
   16444:	add	ip, ip, #155648	; 0x26000
   16448:	ldr	pc, [ip, #3848]!	; 0xf08

0001644c <g_strfreev@plt>:
   1644c:	add	ip, pc, #0, 12
   16450:	add	ip, ip, #155648	; 0x26000
   16454:	ldr	pc, [ip, #3840]!	; 0xf00

00016458 <gtk_text_iter_get_tags@plt>:
   16458:	add	ip, pc, #0, 12
   1645c:	add	ip, ip, #155648	; 0x26000
   16460:	ldr	pc, [ip, #3832]!	; 0xef8

00016464 <g_strv_length@plt>:
   16464:	add	ip, pc, #0, 12
   16468:	add	ip, ip, #155648	; 0x26000
   1646c:	ldr	pc, [ip, #3824]!	; 0xef0

00016470 <dbus_g_proxy_add_signal@plt>:
   16470:	add	ip, pc, #0, 12
   16474:	add	ip, ip, #155648	; 0x26000
   16478:	ldr	pc, [ip, #3816]!	; 0xee8

0001647c <pango_attr_iterator_range@plt>:
   1647c:	add	ip, pc, #0, 12
   16480:	add	ip, ip, #155648	; 0x26000
   16484:	ldr	pc, [ip, #3808]!	; 0xee0

00016488 <g_option_context_free@plt>:
   16488:	add	ip, pc, #0, 12
   1648c:	add	ip, ip, #155648	; 0x26000
   16490:	ldr	pc, [ip, #3800]!	; 0xed8

00016494 <fileno@plt>:
   16494:	add	ip, pc, #0, 12
   16498:	add	ip, ip, #155648	; 0x26000
   1649c:	ldr	pc, [ip, #3792]!	; 0xed0

000164a0 <gtk_window_present_with_time@plt>:
   164a0:	add	ip, pc, #0, 12
   164a4:	add	ip, ip, #155648	; 0x26000
   164a8:	ldr	pc, [ip, #3784]!	; 0xec8

000164ac <__stack_chk_fail@plt>:
   164ac:	add	ip, pc, #0, 12
   164b0:	add	ip, ip, #155648	; 0x26000
   164b4:	ldr	pc, [ip, #3776]!	; 0xec0

000164b8 <gdk_x11_window_foreign_new_for_display@plt>:
   164b8:	add	ip, pc, #0, 12
   164bc:	add	ip, ip, #155648	; 0x26000
   164c0:	ldr	pc, [ip, #3768]!	; 0xeb8

000164c4 <gtk_tree_view_get_type@plt>:
   164c4:	add	ip, pc, #0, 12
   164c8:	add	ip, ip, #155648	; 0x26000
   164cc:	ldr	pc, [ip, #3760]!	; 0xeb0

000164d0 <gtk_list_store_new@plt>:
   164d0:	add	ip, pc, #0, 12
   164d4:	add	ip, ip, #155648	; 0x26000
   164d8:	ldr	pc, [ip, #3752]!	; 0xea8

000164dc <gtk_text_view_set_left_margin@plt>:
   164dc:	add	ip, pc, #0, 12
   164e0:	add	ip, ip, #155648	; 0x26000
   164e4:	ldr	pc, [ip, #3744]!	; 0xea0

000164e8 <isatty@plt>:
   164e8:	add	ip, pc, #0, 12
   164ec:	add	ip, ip, #155648	; 0x26000
   164f0:	ldr	pc, [ip, #3736]!	; 0xe98

000164f4 <g_strcanon@plt>:
   164f4:	add	ip, pc, #0, 12
   164f8:	add	ip, ip, #155648	; 0x26000
   164fc:	ldr	pc, [ip, #3728]!	; 0xe90

00016500 <gtk_message_dialog_format_secondary_markup@plt>:
   16500:	add	ip, pc, #0, 12
   16504:	add	ip, ip, #155648	; 0x26000
   16508:	ldr	pc, [ip, #3720]!	; 0xe88

0001650c <dbus_g_object_path_get_g_type@plt>:
   1650c:	add	ip, pc, #0, 12
   16510:	add	ip, ip, #155648	; 0x26000
   16514:	ldr	pc, [ip, #3712]!	; 0xe80

00016518 <g_free@plt>:
   16518:	add	ip, pc, #0, 12
   1651c:	add	ip, ip, #155648	; 0x26000
   16520:	ldr	pc, [ip, #3704]!	; 0xe78

00016524 <gtk_text_buffer_create_tag@plt>:
   16524:	add	ip, pc, #0, 12
   16528:	add	ip, ip, #155648	; 0x26000
   1652c:	ldr	pc, [ip, #3696]!	; 0xe70

00016530 <dcgettext@plt>:
   16530:	add	ip, pc, #0, 12
   16534:	add	ip, ip, #155648	; 0x26000
   16538:	ldr	pc, [ip, #3688]!	; 0xe68

0001653c <gtk_text_iter_get_offset@plt>:
   1653c:	add	ip, pc, #0, 12
   16540:	add	ip, ip, #155648	; 0x26000
   16544:	ldr	pc, [ip, #3680]!	; 0xe60

00016548 <gtk_tree_model_get_iter_first@plt>:
   16548:	add	ip, pc, #0, 12
   1654c:	add	ip, ip, #155648	; 0x26000
   16550:	ldr	pc, [ip, #3672]!	; 0xe58

00016554 <gtk_tree_view_column_set_expand@plt>:
   16554:	add	ip, pc, #0, 12
   16558:	add	ip, ip, #155648	; 0x26000
   1655c:	ldr	pc, [ip, #3664]!	; 0xe50

00016560 <gtk_main@plt>:
   16560:	add	ip, pc, #0, 12
   16564:	add	ip, ip, #155648	; 0x26000
   16568:	ldr	pc, [ip, #3656]!	; 0xe48

0001656c <strstr@plt>:
   1656c:	add	ip, pc, #0, 12
   16570:	add	ip, ip, #155648	; 0x26000
   16574:	ldr	pc, [ip, #3648]!	; 0xe40

00016578 <g_object_set@plt>:
   16578:	add	ip, pc, #0, 12
   1657c:	add	ip, ip, #155648	; 0x26000
   16580:	ldr	pc, [ip, #3640]!	; 0xe38

00016584 <gtk_text_buffer_insert_at_cursor@plt>:
   16584:	add	ip, pc, #0, 12
   16588:	add	ip, ip, #155648	; 0x26000
   1658c:	ldr	pc, [ip, #3632]!	; 0xe30

00016590 <gtk_message_dialog_get_type@plt>:
   16590:	add	ip, pc, #0, 12
   16594:	add	ip, ip, #155648	; 0x26000
   16598:	ldr	pc, [ip, #3624]!	; 0xe28

0001659c <gtk_text_view_get_iter_at_location@plt>:
   1659c:	add	ip, pc, #0, 12
   165a0:	add	ip, ip, #155648	; 0x26000
   165a4:	ldr	pc, [ip, #3616]!	; 0xe20

000165a8 <g_ptr_array_new@plt>:
   165a8:	add	ip, pc, #0, 12
   165ac:	add	ip, ip, #155648	; 0x26000
   165b0:	ldr	pc, [ip, #3608]!	; 0xe18

000165b4 <gtk_cell_renderer_pixbuf_new@plt>:
   165b4:	add	ip, pc, #0, 12
   165b8:	add	ip, ip, #155648	; 0x26000
   165bc:	ldr	pc, [ip, #3600]!	; 0xe10

000165c0 <gtk_text_view_set_right_margin@plt>:
   165c0:	add	ip, pc, #0, 12
   165c4:	add	ip, ip, #155648	; 0x26000
   165c8:	ldr	pc, [ip, #3592]!	; 0xe08

000165cc <g_object_get@plt>:
   165cc:	add	ip, pc, #0, 12
   165d0:	add	ip, ip, #155648	; 0x26000
   165d4:	ldr	pc, [ip, #3584]!	; 0xe00

000165d8 <gtk_tree_selection_get_selected@plt>:
   165d8:	add	ip, pc, #0, 12
   165dc:	add	ip, ip, #155648	; 0x26000
   165e0:	ldr	pc, [ip, #3576]!	; 0xdf8

000165e4 <gtk_dialog_get_type@plt>:
   165e4:	add	ip, pc, #0, 12
   165e8:	add	ip, ip, #155648	; 0x26000
   165ec:	ldr	pc, [ip, #3568]!	; 0xdf0

000165f0 <g_object_class_install_property@plt>:
   165f0:	add	ip, pc, #0, 12
   165f4:	add	ip, ip, #155648	; 0x26000
   165f8:	ldr	pc, [ip, #3560]!	; 0xde8

000165fc <gtk_tree_selection_count_selected_rows@plt>:
   165fc:	add	ip, pc, #0, 12
   16600:	add	ip, ip, #155648	; 0x26000
   16604:	ldr	pc, [ip, #3552]!	; 0xde0

00016608 <pk_results_get_repo_signature_required_array@plt>:
   16608:	add	ip, pc, #0, 12
   1660c:	add	ip, ip, #155648	; 0x26000
   16610:	ldr	pc, [ip, #3544]!	; 0xdd8

00016614 <gtk_tree_view_get_selection@plt>:
   16614:	add	ip, pc, #0, 12
   16618:	add	ip, ip, #155648	; 0x26000
   1661c:	ldr	pc, [ip, #3536]!	; 0xdd0

00016620 <gtk_tree_model_get_type@plt>:
   16620:	add	ip, pc, #0, 12
   16624:	add	ip, ip, #155648	; 0x26000
   16628:	ldr	pc, [ip, #3528]!	; 0xdc8

0001662c <gtk_list_store_append@plt>:
   1662c:	add	ip, pc, #0, 12
   16630:	add	ip, ip, #155648	; 0x26000
   16634:	ldr	pc, [ip, #3520]!	; 0xdc0

00016638 <gtk_cell_renderer_pixbuf_get_type@plt>:
   16638:	add	ip, pc, #0, 12
   1663c:	add	ip, ip, #155648	; 0x26000
   16640:	ldr	pc, [ip, #3512]!	; 0xdb8

00016644 <gtk_text_buffer_create_mark@plt>:
   16644:	add	ip, pc, #0, 12
   16648:	add	ip, ip, #155648	; 0x26000
   1664c:	ldr	pc, [ip, #3504]!	; 0xdb0

00016650 <gtk_text_view_set_editable@plt>:
   16650:	add	ip, pc, #0, 12
   16654:	add	ip, ip, #155648	; 0x26000
   16658:	ldr	pc, [ip, #3496]!	; 0xda8

0001665c <g_type_class_add_private@plt>:
   1665c:	add	ip, pc, #0, 12
   16660:	add	ip, ip, #155648	; 0x26000
   16664:	ldr	pc, [ip, #3488]!	; 0xda0

00016668 <g_param_spec_uint@plt>:
   16668:	add	ip, pc, #0, 12
   1666c:	add	ip, ip, #155648	; 0x26000
   16670:	ldr	pc, [ip, #3480]!	; 0xd98

00016674 <pk_task_generic_finish@plt>:
   16674:	add	ip, pc, #0, 12
   16678:	add	ip, ip, #155648	; 0x26000
   1667c:	ldr	pc, [ip, #3472]!	; 0xd90

00016680 <dbus_g_proxy_connect_signal@plt>:
   16680:	add	ip, pc, #0, 12
   16684:	add	ip, ip, #155648	; 0x26000
   16688:	ldr	pc, [ip, #3464]!	; 0xd88

0001668c <g_timeout_add_seconds@plt>:
   1668c:	add	ip, pc, #0, 12
   16690:	add	ip, ip, #155648	; 0x26000
   16694:	ldr	pc, [ip, #3456]!	; 0xd80

00016698 <dbus_g_proxy_call_no_reply@plt>:
   16698:	add	ip, pc, #0, 12
   1669c:	add	ip, ip, #155648	; 0x26000
   166a0:	ldr	pc, [ip, #3448]!	; 0xd78

000166a4 <gdk_window_get_device_position@plt>:
   166a4:	add	ip, pc, #0, 12
   166a8:	add	ip, ip, #155648	; 0x26000
   166ac:	ldr	pc, [ip, #3440]!	; 0xd70

000166b0 <raise@plt>:
   166b0:	add	ip, pc, #0, 12
   166b4:	add	ip, ip, #155648	; 0x26000
   166b8:	ldr	pc, [ip, #3432]!	; 0xd68

000166bc <gtk_toggle_button_set_active@plt>:
   166bc:	add	ip, pc, #0, 12
   166c0:	add	ip, ip, #155648	; 0x26000
   166c4:	ldr	pc, [ip, #3424]!	; 0xd60

000166c8 <gtk_dialog_get_content_area@plt>:
   166c8:	add	ip, pc, #0, 12
   166cc:	add	ip, ip, #155648	; 0x26000
   166d0:	ldr	pc, [ip, #3416]!	; 0xd58

000166d4 <g_type_check_instance_is_a@plt>:
   166d4:	add	ip, pc, #0, 12
   166d8:	add	ip, ip, #155648	; 0x26000
   166dc:	ldr	pc, [ip, #3408]!	; 0xd50

000166e0 <g_print@plt>:
   166e0:	add	ip, pc, #0, 12
   166e4:	add	ip, ip, #155648	; 0x26000
   166e8:	ldr	pc, [ip, #3400]!	; 0xd48

000166ec <getuid@plt>:
   166ec:	add	ip, pc, #0, 12
   166f0:	add	ip, ip, #155648	; 0x26000
   166f4:	ldr	pc, [ip, #3392]!	; 0xd40

000166f8 <pk_info_enum_from_string@plt>:
   166f8:	add	ip, pc, #0, 12
   166fc:	add	ip, ip, #155648	; 0x26000
   16700:	ldr	pc, [ip, #3384]!	; 0xd38

00016704 <bindtextdomain@plt>:
   16704:	add	ip, pc, #0, 12
   16708:	add	ip, ip, #155648	; 0x26000
   1670c:	ldr	pc, [ip, #3376]!	; 0xd30

00016710 <g_value_get_uint@plt>:
   16710:	add	ip, pc, #0, 12
   16714:	add	ip, ip, #155648	; 0x26000
   16718:	ldr	pc, [ip, #3368]!	; 0xd28

0001671c <gtk_tree_store_clear@plt>:
   1671c:	add	ip, pc, #0, 12
   16720:	add	ip, ip, #155648	; 0x26000
   16724:	ldr	pc, [ip, #3360]!	; 0xd20

00016728 <pk_client_error_quark@plt>:
   16728:	add	ip, pc, #0, 12
   1672c:	add	ip, ip, #155648	; 0x26000
   16730:	ldr	pc, [ip, #3352]!	; 0xd18

00016734 <pk_results_get_eula_required_array@plt>:
   16734:	add	ip, pc, #0, 12
   16738:	add	ip, ip, #155648	; 0x26000
   1673c:	ldr	pc, [ip, #3344]!	; 0xd10

00016740 <pk_package_sack_get_size@plt>:
   16740:	add	ip, pc, #0, 12
   16744:	add	ip, ip, #155648	; 0x26000
   16748:	ldr	pc, [ip, #3336]!	; 0xd08

0001674c <gtk_style_context_get_color@plt>:
   1674c:	add	ip, pc, #0, 12
   16750:	add	ip, ip, #155648	; 0x26000
   16754:	ldr	pc, [ip, #3328]!	; 0xd00

00016758 <pk_results_get_package_sack@plt>:
   16758:	add	ip, pc, #0, 12
   1675c:	add	ip, ip, #155648	; 0x26000
   16760:	ldr	pc, [ip, #3320]!	; 0xcf8

00016764 <setlocale@plt>:
   16764:	add	ip, pc, #0, 12
   16768:	add	ip, ip, #155648	; 0x26000
   1676c:	ldr	pc, [ip, #3312]!	; 0xcf0

00016770 <g_value_get_type@plt>:
   16770:	add	ip, pc, #0, 12
   16774:	add	ip, ip, #155648	; 0x26000
   16778:	ldr	pc, [ip, #3304]!	; 0xce8

0001677c <gtk_menu_get_type@plt>:
   1677c:	add	ip, pc, #0, 12
   16780:	add	ip, ip, #155648	; 0x26000
   16784:	ldr	pc, [ip, #3296]!	; 0xce0

00016788 <g_option_context_add_main_entries@plt>:
   16788:	add	ip, pc, #0, 12
   1678c:	add	ip, ip, #155648	; 0x26000
   16790:	ldr	pc, [ip, #3288]!	; 0xcd8

00016794 <gtk_tree_path_copy@plt>:
   16794:	add	ip, pc, #0, 12
   16798:	add	ip, ip, #155648	; 0x26000
   1679c:	ldr	pc, [ip, #3280]!	; 0xcd0

000167a0 <gtk_text_buffer_insert_with_tags@plt>:
   167a0:	add	ip, pc, #0, 12
   167a4:	add	ip, ip, #155648	; 0x26000
   167a8:	ldr	pc, [ip, #3272]!	; 0xcc8

000167ac <gtk_window_set_resizable@plt>:
   167ac:	add	ip, pc, #0, 12
   167b0:	add	ip, ip, #155648	; 0x26000
   167b4:	ldr	pc, [ip, #3264]!	; 0xcc0

000167b8 <gtk_widget_show_all@plt>:
   167b8:	add	ip, pc, #0, 12
   167bc:	add	ip, ip, #155648	; 0x26000
   167c0:	ldr	pc, [ip, #3256]!	; 0xcb8

000167c4 <gtk_builder_new@plt>:
   167c4:	add	ip, pc, #0, 12
   167c8:	add	ip, ip, #155648	; 0x26000
   167cc:	ldr	pc, [ip, #3248]!	; 0xcb0

000167d0 <g_string_free@plt>:
   167d0:	add	ip, pc, #0, 12
   167d4:	add	ip, ip, #155648	; 0x26000
   167d8:	ldr	pc, [ip, #3240]!	; 0xca8

000167dc <gtk_tree_view_set_tooltip_cell@plt>:
   167dc:	add	ip, pc, #0, 12
   167e0:	add	ip, ip, #155648	; 0x26000
   167e4:	ldr	pc, [ip, #3232]!	; 0xca0

000167e8 <gtk_dialog_run@plt>:
   167e8:	add	ip, pc, #0, 12
   167ec:	add	ip, ip, #155648	; 0x26000
   167f0:	ldr	pc, [ip, #3224]!	; 0xc98

000167f4 <pk_client_get_details_async@plt>:
   167f4:	add	ip, pc, #0, 12
   167f8:	add	ip, ip, #155648	; 0x26000
   167fc:	ldr	pc, [ip, #3216]!	; 0xc90

00016800 <pk_item_progress_get_package_id@plt>:
   16800:	add	ip, pc, #0, 12
   16804:	add	ip, ip, #155648	; 0x26000
   16808:	ldr	pc, [ip, #3208]!	; 0xc88

0001680c <pk_client_get_distro_upgrades_async@plt>:
   1680c:	add	ip, pc, #0, 12
   16810:	add	ip, ip, #155648	; 0x26000
   16814:	ldr	pc, [ip, #3200]!	; 0xc80

00016818 <gtk_window_present@plt>:
   16818:	add	ip, pc, #0, 12
   1681c:	add	ip, ip, #155648	; 0x26000
   16820:	ldr	pc, [ip, #3192]!	; 0xc78

00016824 <g_object_set_data@plt>:
   16824:	add	ip, pc, #0, 12
   16828:	add	ip, ip, #155648	; 0x26000
   1682c:	ldr	pc, [ip, #3184]!	; 0xc70

00016830 <pango_attr_iterator_get@plt>:
   16830:	add	ip, pc, #0, 12
   16834:	add	ip, ip, #155648	; 0x26000
   16838:	ldr	pc, [ip, #3176]!	; 0xc68

0001683c <pk_results_get_update_detail_array@plt>:
   1683c:	add	ip, pc, #0, 12
   16840:	add	ip, ip, #155648	; 0x26000
   16844:	ldr	pc, [ip, #3168]!	; 0xc60

00016848 <gdk_event_get_device@plt>:
   16848:	add	ip, pc, #0, 12
   1684c:	add	ip, ip, #155648	; 0x26000
   16850:	ldr	pc, [ip, #3160]!	; 0xc58

00016854 <pango_attr_iterator_next@plt>:
   16854:	add	ip, pc, #0, 12
   16858:	add	ip, ip, #155648	; 0x26000
   1685c:	ldr	pc, [ip, #3152]!	; 0xc50

00016860 <pk_info_enum_to_string@plt>:
   16860:	add	ip, pc, #0, 12
   16864:	add	ip, ip, #155648	; 0x26000
   16868:	ldr	pc, [ip, #3144]!	; 0xc48

0001686c <gtk_widget_show@plt>:
   1686c:	add	ip, pc, #0, 12
   16870:	add	ip, ip, #155648	; 0x26000
   16874:	ldr	pc, [ip, #3136]!	; 0xc40

00016878 <g_object_unref@plt>:
   16878:	add	ip, pc, #0, 12
   1687c:	add	ip, ip, #155648	; 0x26000
   16880:	ldr	pc, [ip, #3128]!	; 0xc38

00016884 <strlen@plt>:
   16884:	add	ip, pc, #0, 12
   16888:	add	ip, ip, #155648	; 0x26000
   1688c:	ldr	pc, [ip, #3120]!	; 0xc30

00016890 <g_cclosure_marshal_VOID__VOID@plt>:
   16890:	add	ip, pc, #0, 12
   16894:	add	ip, ip, #155648	; 0x26000
   16898:	ldr	pc, [ip, #3112]!	; 0xc28

0001689c <gtk_text_buffer_get_tag_table@plt>:
   1689c:	add	ip, pc, #0, 12
   168a0:	add	ip, ip, #155648	; 0x26000
   168a4:	ldr	pc, [ip, #3104]!	; 0xc20

000168a8 <gtk_tree_view_column_get_width@plt>:
   168a8:	add	ip, pc, #0, 12
   168ac:	add	ip, ip, #155648	; 0x26000
   168b0:	ldr	pc, [ip, #3096]!	; 0xc18

000168b4 <pango_attr_iterator_destroy@plt>:
   168b4:	add	ip, pc, #0, 12
   168b8:	add	ip, ip, #155648	; 0x26000
   168bc:	ldr	pc, [ip, #3088]!	; 0xc10

000168c0 <g_once_init_leave@plt>:
   168c0:	add	ip, pc, #0, 12
   168c4:	add	ip, ip, #155648	; 0x26000
   168c8:	ldr	pc, [ip, #3080]!	; 0xc08

000168cc <gtk_icon_size_lookup@plt>:
   168cc:	add	ip, pc, #0, 12
   168d0:	add	ip, ip, #155648	; 0x26000
   168d4:	ldr	pc, [ip, #3072]!	; 0xc00

000168d8 <gtk_button_set_label@plt>:
   168d8:	add	ip, pc, #0, 12
   168dc:	add	ip, ip, #155648	; 0x26000
   168e0:	ldr	pc, [ip, #3064]!	; 0xbf8

000168e4 <g_log_set_fatal_mask@plt>:
   168e4:	add	ip, pc, #0, 12
   168e8:	add	ip, ip, #155648	; 0x26000
   168ec:	ldr	pc, [ip, #3056]!	; 0xbf0

000168f0 <pk_client_get_update_detail_async@plt>:
   168f0:	add	ip, pc, #0, 12
   168f4:	add	ip, ip, #155648	; 0x26000
   168f8:	ldr	pc, [ip, #3048]!	; 0xbe8

000168fc <gtk_tree_selection_unselect_all@plt>:
   168fc:	add	ip, pc, #0, 12
   16900:	add	ip, ip, #155648	; 0x26000
   16904:	ldr	pc, [ip, #3040]!	; 0xbe0

00016908 <gtk_window_set_transient_for@plt>:
   16908:	add	ip, pc, #0, 12
   1690c:	add	ip, ip, #155648	; 0x26000
   16910:	ldr	pc, [ip, #3032]!	; 0xbd8

00016914 <gtk_text_buffer_new@plt>:
   16914:	add	ip, pc, #0, 12
   16918:	add	ip, ip, #155648	; 0x26000
   1691c:	ldr	pc, [ip, #3024]!	; 0xbd0

00016920 <gtk_tree_view_set_search_column@plt>:
   16920:	add	ip, pc, #0, 12
   16924:	add	ip, ip, #155648	; 0x26000
   16928:	ldr	pc, [ip, #3016]!	; 0xbc8

0001692c <g_source_set_name_by_id@plt>:
   1692c:	add	ip, pc, #0, 12
   16930:	add	ip, ip, #155648	; 0x26000
   16934:	ldr	pc, [ip, #3008]!	; 0xbc0

00016938 <g_malloc0_n@plt>:
   16938:	add	ip, pc, #0, 12
   1693c:	add	ip, ip, #155648	; 0x26000
   16940:	ldr	pc, [ip, #3000]!	; 0xbb8

00016944 <pk_package_id_to_printable@plt>:
   16944:	add	ip, pc, #0, 12
   16948:	add	ip, ip, #155648	; 0x26000
   1694c:	ldr	pc, [ip, #2992]!	; 0xbb0

00016950 <g_slist_find_custom@plt>:
   16950:	add	ip, pc, #0, 12
   16954:	add	ip, ip, #155648	; 0x26000
   16958:	ldr	pc, [ip, #2984]!	; 0xba8

0001695c <gtk_tree_sortable_set_sort_column_id@plt>:
   1695c:	add	ip, pc, #0, 12
   16960:	add	ip, ip, #155648	; 0x26000
   16964:	ldr	pc, [ip, #2976]!	; 0xba0

00016968 <gtk_main_quit@plt>:
   16968:	add	ip, pc, #0, 12
   1696c:	add	ip, ip, #155648	; 0x26000
   16970:	ldr	pc, [ip, #2968]!	; 0xb98

00016974 <g_strchug@plt>:
   16974:	add	ip, pc, #0, 12
   16978:	add	ip, ip, #155648	; 0x26000
   1697c:	ldr	pc, [ip, #2960]!	; 0xb90

00016980 <gtk_tree_row_reference_get_path@plt>:
   16980:	add	ip, pc, #0, 12
   16984:	add	ip, ip, #155648	; 0x26000
   16988:	ldr	pc, [ip, #2952]!	; 0xb88

0001698c <g_spawn_command_line_async@plt>:
   1698c:	add	ip, pc, #0, 12
   16990:	add	ip, ip, #155648	; 0x26000
   16994:	ldr	pc, [ip, #2944]!	; 0xb80

00016998 <gtk_tree_view_scroll_to_cell@plt>:
   16998:	add	ip, pc, #0, 12
   1699c:	add	ip, ip, #155648	; 0x26000
   169a0:	ldr	pc, [ip, #2936]!	; 0xb78

000169a4 <g_type_class_peek_parent@plt>:
   169a4:	add	ip, pc, #0, 12
   169a8:	add	ip, ip, #155648	; 0x26000
   169ac:	ldr	pc, [ip, #2928]!	; 0xb70

000169b0 <gtk_tree_view_column_add_attribute@plt>:
   169b0:	add	ip, pc, #0, 12
   169b4:	add	ip, ip, #155648	; 0x26000
   169b8:	ldr	pc, [ip, #2920]!	; 0xb68

000169bc <gtk_tree_view_new_with_model@plt>:
   169bc:	add	ip, pc, #0, 12
   169c0:	add	ip, ip, #155648	; 0x26000
   169c4:	ldr	pc, [ip, #2912]!	; 0xb60

000169c8 <g_ptr_array_unref@plt>:
   169c8:	add	ip, pc, #0, 12
   169cc:	add	ip, ip, #155648	; 0x26000
   169d0:	ldr	pc, [ip, #2904]!	; 0xb58

000169d4 <gtk_cell_renderer_toggle_new@plt>:
   169d4:	add	ip, pc, #0, 12
   169d8:	add	ip, ip, #155648	; 0x26000
   169dc:	ldr	pc, [ip, #2896]!	; 0xb50

000169e0 <pk_results_get_details_array@plt>:
   169e0:	add	ip, pc, #0, 12
   169e4:	add	ip, ip, #155648	; 0x26000
   169e8:	ldr	pc, [ip, #2888]!	; 0xb48

000169ec <gtk_scrolled_window_get_type@plt>:
   169ec:	add	ip, pc, #0, 12
   169f0:	add	ip, ip, #155648	; 0x26000
   169f4:	ldr	pc, [ip, #2880]!	; 0xb40

000169f8 <g_malloc0@plt>:
   169f8:	add	ip, pc, #0, 12
   169fc:	add	ip, ip, #155648	; 0x26000
   16a00:	ldr	pc, [ip, #2872]!	; 0xb38

00016a04 <gtk_window_set_modal@plt>:
   16a04:	add	ip, pc, #0, 12
   16a08:	add	ip, ip, #155648	; 0x26000
   16a0c:	ldr	pc, [ip, #2864]!	; 0xb30

00016a10 <g_ptr_array_add@plt>:
   16a10:	add	ip, pc, #0, 12
   16a14:	add	ip, ip, #155648	; 0x26000
   16a18:	ldr	pc, [ip, #2856]!	; 0xb28

00016a1c <g_markup_escape_text@plt>:
   16a1c:	add	ip, pc, #0, 12
   16a20:	add	ip, ip, #155648	; 0x26000
   16a24:	ldr	pc, [ip, #2848]!	; 0xb20

00016a28 <g_str_has_suffix@plt>:
   16a28:	add	ip, pc, #0, 12
   16a2c:	add	ip, ip, #155648	; 0x26000
   16a30:	ldr	pc, [ip, #2840]!	; 0xb18

00016a34 <gtk_init@plt>:
   16a34:	add	ip, pc, #0, 12
   16a38:	add	ip, ip, #155648	; 0x26000
   16a3c:	ldr	pc, [ip, #2832]!	; 0xb10

00016a40 <gtk_image_set_from_icon_name@plt>:
   16a40:	add	ip, pc, #0, 12
   16a44:	add	ip, ip, #155648	; 0x26000
   16a48:	ldr	pc, [ip, #2824]!	; 0xb08

00016a4c <g_settings_set_boolean@plt>:
   16a4c:	add	ip, pc, #0, 12
   16a50:	add	ip, ip, #155648	; 0x26000
   16a54:	ldr	pc, [ip, #2816]!	; 0xb00

00016a58 <time@plt>:
   16a58:	add	ip, pc, #0, 12
   16a5c:	add	ip, ip, #155648	; 0x26000
   16a60:	ldr	pc, [ip, #2808]!	; 0xaf8

00016a64 <pango_parse_markup@plt>:
   16a64:	add	ip, pc, #0, 12
   16a68:	add	ip, ip, #155648	; 0x26000
   16a6c:	ldr	pc, [ip, #2800]!	; 0xaf0

00016a70 <gtk_message_dialog_new@plt>:
   16a70:	add	ip, pc, #0, 12
   16a74:	add	ip, ip, #155648	; 0x26000
   16a78:	ldr	pc, [ip, #2792]!	; 0xae8

00016a7c <gtk_icon_theme_get_default@plt>:
   16a7c:	add	ip, pc, #0, 12
   16a80:	add	ip, ip, #155648	; 0x26000
   16a84:	ldr	pc, [ip, #2784]!	; 0xae0

00016a88 <gtk_label_set_markup@plt>:
   16a88:	add	ip, pc, #0, 12
   16a8c:	add	ip, ip, #155648	; 0x26000
   16a90:	ldr	pc, [ip, #2776]!	; 0xad8

00016a94 <pk_network_enum_to_string@plt>:
   16a94:	add	ip, pc, #0, 12
   16a98:	add	ip, ip, #155648	; 0x26000
   16a9c:	ldr	pc, [ip, #2768]!	; 0xad0

00016aa0 <gtk_tree_view_set_headers_visible@plt>:
   16aa0:	add	ip, pc, #0, 12
   16aa4:	add	ip, ip, #155648	; 0x26000
   16aa8:	ldr	pc, [ip, #2760]!	; 0xac8

00016aac <gtk_text_buffer_get_start_iter@plt>:
   16aac:	add	ip, pc, #0, 12
   16ab0:	add	ip, ip, #155648	; 0x26000
   16ab4:	ldr	pc, [ip, #2752]!	; 0xac0

00016ab8 <g_string_append@plt>:
   16ab8:	add	ip, pc, #0, 12
   16abc:	add	ip, ip, #155648	; 0x26000
   16ac0:	ldr	pc, [ip, #2744]!	; 0xab8

00016ac4 <pk_item_progress_get_percentage@plt>:
   16ac4:	add	ip, pc, #0, 12
   16ac8:	add	ip, ip, #155648	; 0x26000
   16acc:	ldr	pc, [ip, #2736]!	; 0xab0

00016ad0 <pk_enum_find_string@plt>:
   16ad0:	add	ip, pc, #0, 12
   16ad4:	add	ip, ip, #155648	; 0x26000
   16ad8:	ldr	pc, [ip, #2728]!	; 0xaa8

00016adc <gtk_tree_model_get_iter@plt>:
   16adc:	add	ip, pc, #0, 12
   16ae0:	add	ip, ip, #155648	; 0x26000
   16ae4:	ldr	pc, [ip, #2720]!	; 0xaa0

00016ae8 <dbus_g_thread_init@plt>:
   16ae8:	add	ip, pc, #0, 12
   16aec:	add	ip, ip, #155648	; 0x26000
   16af0:	ldr	pc, [ip, #2712]!	; 0xa98

00016af4 <pk_results_get_require_restart_worst@plt>:
   16af4:	add	ip, pc, #0, 12
   16af8:	add	ip, ip, #155648	; 0x26000
   16afc:	ldr	pc, [ip, #2704]!	; 0xa90

00016b00 <g_cclosure_marshal_VOID__BOOLEAN@plt>:
   16b00:	add	ip, pc, #0, 12
   16b04:	add	ip, ip, #155648	; 0x26000
   16b08:	ldr	pc, [ip, #2696]!	; 0xa88

00016b0c <g_strjoinv@plt>:
   16b0c:	add	ip, pc, #0, 12
   16b10:	add	ip, ip, #155648	; 0x26000
   16b14:	ldr	pc, [ip, #2688]!	; 0xa80

00016b18 <gtk_tooltip_set_text@plt>:
   16b18:	add	ip, pc, #0, 12
   16b1c:	add	ip, ip, #155648	; 0x26000
   16b20:	ldr	pc, [ip, #2680]!	; 0xa78

00016b24 <gtk_check_button_new_with_label@plt>:
   16b24:	add	ip, pc, #0, 12
   16b28:	add	ip, ip, #155648	; 0x26000
   16b2c:	ldr	pc, [ip, #2672]!	; 0xa70

00016b30 <gtk_tree_model_get@plt>:
   16b30:	add	ip, pc, #0, 12
   16b34:	add	ip, ip, #155648	; 0x26000
   16b38:	ldr	pc, [ip, #2664]!	; 0xa68

00016b3c <g_string_append_printf@plt>:
   16b3c:	add	ip, pc, #0, 12
   16b40:	add	ip, ip, #155648	; 0x26000
   16b44:	ldr	pc, [ip, #2656]!	; 0xa60

00016b48 <g_type_check_class_cast@plt>:
   16b48:	add	ip, pc, #0, 12
   16b4c:	add	ip, ip, #155648	; 0x26000
   16b50:	ldr	pc, [ip, #2648]!	; 0xa58

00016b54 <__libc_start_main@plt>:
   16b54:	add	ip, pc, #0, 12
   16b58:	add	ip, ip, #155648	; 0x26000
   16b5c:	ldr	pc, [ip, #2640]!	; 0xa50

00016b60 <gtk_button_get_type@plt>:
   16b60:	add	ip, pc, #0, 12
   16b64:	add	ip, ip, #155648	; 0x26000
   16b68:	ldr	pc, [ip, #2632]!	; 0xa48

00016b6c <gtk_tree_path_new_first@plt>:
   16b6c:	add	ip, pc, #0, 12
   16b70:	add	ip, ip, #155648	; 0x26000
   16b74:	ldr	pc, [ip, #2624]!	; 0xa40

00016b78 <__gmon_start__@plt>:
   16b78:	add	ip, pc, #0, 12
   16b7c:	add	ip, ip, #155648	; 0x26000
   16b80:	ldr	pc, [ip, #2616]!	; 0xa38

00016b84 <g_ptr_array_free@plt>:
   16b84:	add	ip, pc, #0, 12
   16b88:	add	ip, ip, #155648	; 0x26000
   16b8c:	ldr	pc, [ip, #2608]!	; 0xa30

00016b90 <gtk_builder_add_from_file@plt>:
   16b90:	add	ip, pc, #0, 12
   16b94:	add	ip, ip, #155648	; 0x26000
   16b98:	ldr	pc, [ip, #2600]!	; 0xa28

00016b9c <g_object_get_data@plt>:
   16b9c:	add	ip, pc, #0, 12
   16ba0:	add	ip, ip, #155648	; 0x26000
   16ba4:	ldr	pc, [ip, #2592]!	; 0xa20

00016ba8 <gtk_notebook_get_type@plt>:
   16ba8:	add	ip, pc, #0, 12
   16bac:	add	ip, ip, #155648	; 0x26000
   16bb0:	ldr	pc, [ip, #2584]!	; 0xa18

00016bb4 <strchr@plt>:
   16bb4:	add	ip, pc, #0, 12
   16bb8:	add	ip, ip, #155648	; 0x26000
   16bbc:	ldr	pc, [ip, #2576]!	; 0xa10

00016bc0 <gtk_window_set_focus@plt>:
   16bc0:	add	ip, pc, #0, 12
   16bc4:	add	ip, ip, #155648	; 0x26000
   16bc8:	ldr	pc, [ip, #2568]!	; 0xa08

00016bcc <pango_attr_list_get_iterator@plt>:
   16bcc:	add	ip, pc, #0, 12
   16bd0:	add	ip, ip, #155648	; 0x26000
   16bd4:	ldr	pc, [ip, #2560]!	; 0xa00

00016bd8 <gtk_info_bar_set_message_type@plt>:
   16bd8:	add	ip, pc, #0, 12
   16bdc:	add	ip, ip, #155648	; 0x26000
   16be0:	ldr	pc, [ip, #2552]!	; 0x9f8

00016be4 <gtk_menu_shell_append@plt>:
   16be4:	add	ip, pc, #0, 12
   16be8:	add	ip, ip, #155648	; 0x26000
   16bec:	ldr	pc, [ip, #2544]!	; 0x9f0

00016bf0 <g_time_val_from_iso8601@plt>:
   16bf0:	add	ip, pc, #0, 12
   16bf4:	add	ip, ip, #155648	; 0x26000
   16bf8:	ldr	pc, [ip, #2536]!	; 0x9e8

00016bfc <gtk_window_get_type@plt>:
   16bfc:	add	ip, pc, #0, 12
   16c00:	add	ip, ip, #155648	; 0x26000
   16c04:	ldr	pc, [ip, #2528]!	; 0x9e0

00016c08 <gtk_widget_set_sensitive@plt>:
   16c08:	add	ip, pc, #0, 12
   16c0c:	add	ip, ip, #155648	; 0x26000
   16c10:	ldr	pc, [ip, #2520]!	; 0x9d8

00016c14 <g_source_remove@plt>:
   16c14:	add	ip, pc, #0, 12
   16c18:	add	ip, ip, #155648	; 0x26000
   16c1c:	ldr	pc, [ip, #2512]!	; 0x9d0

00016c20 <g_slist_free@plt>:
   16c20:	add	ip, pc, #0, 12
   16c24:	add	ip, ip, #155648	; 0x26000
   16c28:	ldr	pc, [ip, #2504]!	; 0x9c8

00016c2c <gtk_toggle_button_get_active@plt>:
   16c2c:	add	ip, pc, #0, 12
   16c30:	add	ip, ip, #155648	; 0x26000
   16c34:	ldr	pc, [ip, #2496]!	; 0x9c0

00016c38 <g_strcmp0@plt>:
   16c38:	add	ip, pc, #0, 12
   16c3c:	add	ip, ip, #155648	; 0x26000
   16c40:	ldr	pc, [ip, #2488]!	; 0x9b8

Disassembly of section .text:

00016c48 <.text>:
   16c48:	push	{r4, r5, r6, r7, lr}
   16c4c:	sub	sp, sp, #84	; 0x54
   16c50:	ldr	r7, [pc, #656]	; 16ee8 <g_strcmp0@plt+0x2b0>
   16c54:	mov	r4, #0
   16c58:	str	r0, [sp, #12]
   16c5c:	ldr	r3, [r7]
   16c60:	str	r1, [sp, #8]
   16c64:	mov	r2, #52	; 0x34
   16c68:	mov	r1, r4
   16c6c:	add	r0, sp, #24
   16c70:	str	r3, [sp, #76]	; 0x4c
   16c74:	str	r4, [sp, #16]
   16c78:	bl	1602c <memset@plt>
   16c7c:	ldr	ip, [pc, #616]	; 16eec <g_strcmp0@plt+0x2b4>
   16c80:	add	r3, sp, #16
   16c84:	mov	r2, #5
   16c88:	ldr	r1, [pc, #608]	; 16ef0 <g_strcmp0@plt+0x2b8>
   16c8c:	mov	r0, r4
   16c90:	str	ip, [sp, #20]
   16c94:	str	r3, [sp, #36]	; 0x24
   16c98:	bl	16530 <dcgettext@plt>
   16c9c:	ldr	r1, [pc, #592]	; 16ef4 <g_strcmp0@plt+0x2bc>
   16ca0:	str	r0, [sp, #40]	; 0x28
   16ca4:	mov	r0, #6
   16ca8:	bl	16764 <setlocale@plt>
   16cac:	ldr	r1, [pc, #580]	; 16ef8 <g_strcmp0@plt+0x2c0>
   16cb0:	ldr	r0, [pc, #580]	; 16efc <g_strcmp0@plt+0x2c4>
   16cb4:	bl	16704 <bindtextdomain@plt>
   16cb8:	ldr	r1, [pc, #576]	; 16f00 <g_strcmp0@plt+0x2c8>
   16cbc:	ldr	r0, [pc, #568]	; 16efc <g_strcmp0@plt+0x2c4>
   16cc0:	bl	15cb4 <bind_textdomain_codeset@plt>
   16cc4:	ldr	r0, [pc, #560]	; 16efc <g_strcmp0@plt+0x2c4>
   16cc8:	bl	15f78 <textdomain@plt>
   16ccc:	bl	16ae8 <dbus_g_thread_init@plt>
   16cd0:	add	r1, sp, #8
   16cd4:	add	r0, sp, #12
   16cd8:	bl	16a34 <gtk_init@plt>
   16cdc:	mov	r0, r4
   16ce0:	bl	15d8c <g_option_context_new@plt>
   16ce4:	mov	r2, #5
   16ce8:	ldr	r1, [pc, #532]	; 16f04 <g_strcmp0@plt+0x2cc>
   16cec:	mov	r5, r0
   16cf0:	mov	r0, r4
   16cf4:	bl	16530 <dcgettext@plt>
   16cf8:	mov	r1, r0
   16cfc:	mov	r0, r5
   16d00:	bl	15e04 <g_option_context_set_summary@plt>
   16d04:	mov	r2, r4
   16d08:	add	r1, sp, #20
   16d0c:	mov	r0, r5
   16d10:	bl	16788 <g_option_context_add_main_entries@plt>
   16d14:	bl	1ed74 <g_strcmp0@plt+0x813c>
   16d18:	mov	r1, r0
   16d1c:	mov	r0, r5
   16d20:	bl	15b34 <g_option_context_add_group@plt>
   16d24:	mov	r0, #1
   16d28:	bl	15cfc <gtk_get_option_group@plt>
   16d2c:	mov	r1, r0
   16d30:	mov	r0, r5
   16d34:	bl	15b34 <g_option_context_add_group@plt>
   16d38:	mov	r3, r4
   16d3c:	add	r2, sp, #8
   16d40:	add	r1, sp, #12
   16d44:	mov	r0, r5
   16d48:	bl	15b28 <g_option_context_parse@plt>
   16d4c:	mov	r0, r5
   16d50:	bl	16488 <g_option_context_free@plt>
   16d54:	ldr	r6, [sp, #16]
   16d58:	cmp	r6, r4
   16d5c:	bne	16ed0 <g_strcmp0@plt+0x298>
   16d60:	bl	16a7c <gtk_icon_theme_get_default@plt>
   16d64:	ldr	r1, [pc, #412]	; 16f08 <g_strcmp0@plt+0x2d0>
   16d68:	bl	16104 <gtk_icon_theme_append_search_path@plt>
   16d6c:	mov	r2, #5
   16d70:	ldr	r1, [pc, #404]	; 16f0c <g_strcmp0@plt+0x2d4>
   16d74:	mov	r0, r6
   16d78:	bl	16530 <dcgettext@plt>
   16d7c:	mov	r1, #1
   16d80:	bl	224d4 <g_strcmp0@plt+0xb89c>
   16d84:	cmp	r0, #0
   16d88:	moveq	r4, #1
   16d8c:	bne	16dac <g_strcmp0@plt+0x174>
   16d90:	ldr	r2, [sp, #76]	; 0x4c
   16d94:	ldr	r3, [r7]
   16d98:	mov	r0, r4
   16d9c:	cmp	r2, r3
   16da0:	bne	16ee4 <g_strcmp0@plt+0x2ac>
   16da4:	add	sp, sp, #84	; 0x54
   16da8:	pop	{r4, r5, r6, r7, pc}
   16dac:	mov	r1, r6
   16db0:	ldr	r0, [pc, #344]	; 16f10 <g_strcmp0@plt+0x2d8>
   16db4:	bl	15ad4 <gtk_application_new@plt>
   16db8:	ldr	r5, [pc, #340]	; 16f14 <g_strcmp0@plt+0x2dc>
   16dbc:	str	r6, [sp, #4]
   16dc0:	str	r6, [sp]
   16dc4:	mov	r3, r6
   16dc8:	ldr	r2, [pc, #328]	; 16f18 <g_strcmp0@plt+0x2e0>
   16dcc:	ldr	r1, [pc, #328]	; 16f1c <g_strcmp0@plt+0x2e4>
   16dd0:	str	r0, [r5, #8]
   16dd4:	bl	16314 <g_signal_connect_data@plt>
   16dd8:	mov	r3, r6
   16ddc:	ldr	r2, [pc, #316]	; 16f20 <g_strcmp0@plt+0x2e8>
   16de0:	ldr	r1, [pc, #316]	; 16f24 <g_strcmp0@plt+0x2ec>
   16de4:	str	r6, [sp, #4]
   16de8:	str	r6, [sp]
   16dec:	ldr	r0, [r5, #8]
   16df0:	bl	16314 <g_signal_connect_data@plt>
   16df4:	bl	15c60 <g_application_get_type@plt>
   16df8:	ldr	r4, [r5, #8]
   16dfc:	mov	r1, r0
   16e00:	mov	r0, r4
   16e04:	bl	15d68 <g_type_check_instance_cast@plt>
   16e08:	ldr	r2, [sp, #8]
   16e0c:	ldr	r1, [sp, #12]
   16e10:	bl	16134 <g_application_run@plt>
   16e14:	mov	r4, r0
   16e18:	ldr	r0, [r5, #4]
   16e1c:	bl	15e34 <g_cancellable_cancel@plt>
   16e20:	ldr	r0, [r5, #44]	; 0x2c
   16e24:	cmp	r0, #0
   16e28:	bne	16edc <g_strcmp0@plt+0x2a4>
   16e2c:	ldr	r0, [r5, #88]	; 0x58
   16e30:	cmp	r0, #0
   16e34:	beq	16e3c <g_strcmp0@plt+0x204>
   16e38:	bl	169c8 <g_ptr_array_unref@plt>
   16e3c:	ldr	r0, [r5, #84]	; 0x54
   16e40:	bl	16518 <g_free@plt>
   16e44:	ldr	r0, [r5, #16]
   16e48:	cmp	r0, #0
   16e4c:	beq	16e54 <g_strcmp0@plt+0x21c>
   16e50:	bl	16878 <g_object_unref@plt>
   16e54:	ldr	r0, [r5]
   16e58:	cmp	r0, #0
   16e5c:	beq	16e64 <g_strcmp0@plt+0x22c>
   16e60:	bl	16878 <g_object_unref@plt>
   16e64:	ldr	r0, [r5, #4]
   16e68:	cmp	r0, #0
   16e6c:	beq	16e74 <g_strcmp0@plt+0x23c>
   16e70:	bl	16878 <g_object_unref@plt>
   16e74:	ldr	r0, [r5, #68]	; 0x44
   16e78:	cmp	r0, #0
   16e7c:	beq	16e84 <g_strcmp0@plt+0x24c>
   16e80:	bl	16878 <g_object_unref@plt>
   16e84:	ldr	r0, [r5, #56]	; 0x38
   16e88:	cmp	r0, #0
   16e8c:	beq	16e94 <g_strcmp0@plt+0x25c>
   16e90:	bl	16878 <g_object_unref@plt>
   16e94:	ldr	r0, [r5, #64]	; 0x40
   16e98:	cmp	r0, #0
   16e9c:	beq	16ea4 <g_strcmp0@plt+0x26c>
   16ea0:	bl	16878 <g_object_unref@plt>
   16ea4:	ldr	r0, [r5, #36]	; 0x24
   16ea8:	cmp	r0, #0
   16eac:	beq	16eb4 <g_strcmp0@plt+0x27c>
   16eb0:	bl	16878 <g_object_unref@plt>
   16eb4:	ldr	r0, [r5, #52]	; 0x34
   16eb8:	cmp	r0, #0
   16ebc:	beq	16ec4 <g_strcmp0@plt+0x28c>
   16ec0:	bl	16878 <g_object_unref@plt>
   16ec4:	ldr	r0, [r5, #8]
   16ec8:	bl	16878 <g_object_unref@plt>
   16ecc:	b	16d90 <g_strcmp0@plt+0x158>
   16ed0:	ldr	r0, [pc, #80]	; 16f28 <g_strcmp0@plt+0x2f0>
   16ed4:	bl	166e0 <g_print@plt>
   16ed8:	b	16d90 <g_strcmp0@plt+0x158>
   16edc:	bl	16c14 <g_source_remove@plt>
   16ee0:	b	16e2c <g_strcmp0@plt+0x1f4>
   16ee4:	bl	164ac <__stack_chk_fail@plt>
   16ee8:	andeq	ip, r3, r0, asr lr
   16eec:	strdeq	r7, [r2], -ip
   16ef0:	andeq	r7, r2, r4, lsl #14
   16ef4:	andeq	r7, r2, r8, ror #22
   16ef8:	andeq	r7, r2, r8, lsr #14
   16efc:	andeq	r7, r2, ip, lsr r7
   16f00:	andeq	r7, r2, r8, asr #14
   16f04:	andeq	r7, r2, r0, asr r7
   16f08:	andeq	r7, r2, r8, ror #14
   16f0c:	andeq	r7, r2, r4, lsl #15
   16f10:	muleq	r2, r4, r7
   16f14:	andeq	sp, r3, r0, lsl r6
   16f18:	ldrdeq	r7, [r1], -r0
   16f1c:			; <UNDEFINED> instruction: 0x000277bc
   16f20:	andeq	r7, r1, r0, lsr #32
   16f24:	andeq	r7, r2, r0, lsr r2
   16f28:	andeq	r7, r2, r0, ror #14
   16f2c:	mov	fp, #0
   16f30:	mov	lr, #0
   16f34:	pop	{r1}		; (ldr r1, [sp], #4)
   16f38:	mov	r2, sp
   16f3c:	push	{r2}		; (str r2, [sp, #-4]!)
   16f40:	push	{r0}		; (str r0, [sp, #-4]!)
   16f44:	ldr	ip, [pc, #16]	; 16f5c <g_strcmp0@plt+0x324>
   16f48:	push	{ip}		; (str ip, [sp, #-4]!)
   16f4c:	ldr	r0, [pc, #12]	; 16f60 <g_strcmp0@plt+0x328>
   16f50:	ldr	r3, [pc, #12]	; 16f64 <g_strcmp0@plt+0x32c>
   16f54:	bl	16b54 <__libc_start_main@plt>
   16f58:	bl	16188 <abort@plt>
   16f5c:	strdeq	r6, [r2], -r8
   16f60:	andeq	r6, r1, r8, asr #24
   16f64:	muleq	r2, r8, r1
   16f68:	ldr	r3, [pc, #20]	; 16f84 <g_strcmp0@plt+0x34c>
   16f6c:	ldr	r2, [pc, #20]	; 16f88 <g_strcmp0@plt+0x350>
   16f70:	add	r3, pc, r3
   16f74:	ldr	r2, [r3, r2]
   16f78:	cmp	r2, #0
   16f7c:	bxeq	lr
   16f80:	b	16b78 <__gmon_start__@plt>
   16f84:	andeq	r6, r2, r8, lsl #1
   16f88:	strdeq	r0, [r0], -ip
   16f8c:	ldr	r0, [pc, #24]	; 16fac <g_strcmp0@plt+0x374>
   16f90:	ldr	r3, [pc, #24]	; 16fb0 <g_strcmp0@plt+0x378>
   16f94:	cmp	r3, r0
   16f98:	bxeq	lr
   16f9c:	ldr	r3, [pc, #16]	; 16fb4 <g_strcmp0@plt+0x37c>
   16fa0:	cmp	r3, #0
   16fa4:	bxeq	lr
   16fa8:	bx	r3
   16fac:	andeq	sp, r3, r8, lsl #12
   16fb0:	andeq	sp, r3, r8, lsl #12
   16fb4:	andeq	r0, r0, r0
   16fb8:	ldr	r0, [pc, #36]	; 16fe4 <g_strcmp0@plt+0x3ac>
   16fbc:	ldr	r1, [pc, #36]	; 16fe8 <g_strcmp0@plt+0x3b0>
   16fc0:	sub	r1, r1, r0
   16fc4:	asr	r1, r1, #2
   16fc8:	add	r1, r1, r1, lsr #31
   16fcc:	asrs	r1, r1, #1
   16fd0:	bxeq	lr
   16fd4:	ldr	r3, [pc, #16]	; 16fec <g_strcmp0@plt+0x3b4>
   16fd8:	cmp	r3, #0
   16fdc:	bxeq	lr
   16fe0:	bx	r3
   16fe4:	andeq	sp, r3, r8, lsl #12
   16fe8:	andeq	sp, r3, r8, lsl #12
   16fec:	andeq	r0, r0, r0
   16ff0:	push	{r4, lr}
   16ff4:	ldr	r4, [pc, #24]	; 17014 <g_strcmp0@plt+0x3dc>
   16ff8:	ldrb	r3, [r4]
   16ffc:	cmp	r3, #0
   17000:	popne	{r4, pc}
   17004:	bl	16f8c <g_strcmp0@plt+0x354>
   17008:	mov	r3, #1
   1700c:	strb	r3, [r4]
   17010:	pop	{r4, pc}
   17014:	andeq	sp, r3, ip, lsl #12
   17018:	b	16fb8 <g_strcmp0@plt+0x380>
   1701c:	andeq	r0, r0, r0
   17020:	ldr	r3, [pc, #40]	; 17050 <g_strcmp0@plt+0x418>
   17024:	push	{r4, lr}
   17028:	ldr	r1, [pc, #36]	; 17054 <g_strcmp0@plt+0x41c>
   1702c:	ldr	r0, [r3]
   17030:	bl	16068 <gtk_builder_get_object@plt>
   17034:	mov	r4, r0
   17038:	bl	16bfc <gtk_window_get_type@plt>
   1703c:	mov	r1, r0
   17040:	mov	r0, r4
   17044:	bl	15d68 <g_type_check_instance_cast@plt>
   17048:	pop	{r4, lr}
   1704c:	b	16818 <gtk_window_present@plt>
   17050:	andeq	sp, r3, r0, lsl r6
   17054:	andeq	r6, r2, ip, lsr #4
   17058:	push	{r4, r5, r6, r7, lr}
   1705c:	subs	r6, r1, #0
   17060:	sub	sp, sp, #12
   17064:	mov	r4, r0
   17068:	mov	r5, r2
   1706c:	beq	170c4 <g_strcmp0@plt+0x48c>
   17070:	ldr	r2, [pc, #100]	; 170dc <g_strcmp0@plt+0x4a4>
   17074:	mov	r3, r4
   17078:	str	r5, [sp]
   1707c:	mov	r1, #16
   17080:	ldr	r0, [pc, #88]	; 170e0 <g_strcmp0@plt+0x4a8>
   17084:	bl	15dec <g_log@plt>
   17088:	ldr	r3, [pc, #84]	; 170e4 <g_strcmp0@plt+0x4ac>
   1708c:	ldr	r1, [pc, #84]	; 170e8 <g_strcmp0@plt+0x4b0>
   17090:	ldr	r0, [r3]
   17094:	bl	16068 <gtk_builder_get_object@plt>
   17098:	mov	r7, r0
   1709c:	bl	16bfc <gtk_window_get_type@plt>
   170a0:	mov	r1, r0
   170a4:	mov	r0, r7
   170a8:	bl	15d68 <g_type_check_instance_cast@plt>
   170ac:	mov	r3, r5
   170b0:	mov	r2, r6
   170b4:	mov	r1, r4
   170b8:	add	sp, sp, #12
   170bc:	pop	{r4, r5, r6, r7, lr}
   170c0:	b	24790 <g_strcmp0@plt+0xdb58>
   170c4:	mov	r0, r6
   170c8:	mov	r2, #5
   170cc:	ldr	r1, [pc, #24]	; 170ec <g_strcmp0@plt+0x4b4>
   170d0:	bl	16530 <dcgettext@plt>
   170d4:	mov	r6, r0
   170d8:	b	17070 <g_strcmp0@plt+0x438>
   170dc:	andeq	r6, r2, r8, asr r2
   170e0:	andeq	r6, r2, r0, ror #4
   170e4:	andeq	sp, r3, r0, lsl r6
   170e8:	andeq	r6, r2, ip, lsr #4
   170ec:	andeq	r6, r2, ip, lsr r2
   170f0:	push	{r4, r5, lr}
   170f4:	sub	sp, sp, #12
   170f8:	ldr	r4, [pc, #100]	; 17164 <g_strcmp0@plt+0x52c>
   170fc:	mov	r3, #0
   17100:	mov	r1, sp
   17104:	ldr	r2, [r4]
   17108:	ldr	r0, [pc, #88]	; 17168 <g_strcmp0@plt+0x530>
   1710c:	str	r2, [sp, #4]
   17110:	str	r3, [sp]
   17114:	bl	1698c <g_spawn_command_line_async@plt>
   17118:	subs	r5, r0, #0
   1711c:	beq	17138 <g_strcmp0@plt+0x500>
   17120:	ldr	r2, [sp, #4]
   17124:	ldr	r3, [r4]
   17128:	cmp	r2, r3
   1712c:	bne	17160 <g_strcmp0@plt+0x528>
   17130:	add	sp, sp, #12
   17134:	pop	{r4, r5, pc}
   17138:	mov	r2, #5
   1713c:	ldr	r1, [pc, #40]	; 1716c <g_strcmp0@plt+0x534>
   17140:	bl	16530 <dcgettext@plt>
   17144:	ldr	r3, [sp]
   17148:	mov	r1, r5
   1714c:	ldr	r2, [r3, #8]
   17150:	bl	17058 <g_strcmp0@plt+0x420>
   17154:	ldr	r0, [sp]
   17158:	bl	15c78 <g_error_free@plt>
   1715c:	b	17120 <g_strcmp0@plt+0x4e8>
   17160:	bl	164ac <__stack_chk_fail@plt>
   17164:	andeq	ip, r3, r0, asr lr
   17168:	andeq	r6, r2, r0, ror r2
   1716c:	muleq	r2, ip, r2
   17170:	push	{r4, lr}
   17174:	ldr	r4, [pc, #32]	; 1719c <g_strcmp0@plt+0x564>
   17178:	ldr	r0, [r4, #4]
   1717c:	bl	15e34 <g_cancellable_cancel@plt>
   17180:	bl	15c60 <g_application_get_type@plt>
   17184:	ldr	r4, [r4, #8]
   17188:	mov	r1, r0
   1718c:	mov	r0, r4
   17190:	bl	15d68 <g_type_check_instance_cast@plt>
   17194:	pop	{r4, lr}
   17198:	b	15fc0 <g_application_release@plt>
   1719c:	andeq	sp, r3, r0, lsl r6
   171a0:	b	17170 <g_strcmp0@plt+0x538>
   171a4:	ldr	r3, [pc, #196]	; 17270 <g_strcmp0@plt+0x638>
   171a8:	push	{r4, r5, r6, r7, r8, lr}
   171ac:	sub	sp, sp, #32
   171b0:	ldr	r8, [pc, #188]	; 17274 <g_strcmp0@plt+0x63c>
   171b4:	ldr	r4, [r3, #12]
   171b8:	ldr	r3, [r8]
   171bc:	cmp	r4, #0
   171c0:	str	r3, [sp, #28]
   171c4:	beq	17250 <g_strcmp0@plt+0x618>
   171c8:	mvn	r7, #0
   171cc:	ldr	r5, [r4]
   171d0:	mov	r0, r5
   171d4:	bl	16338 <gtk_tree_row_reference_get_model@plt>
   171d8:	mov	r6, r0
   171dc:	mov	r0, r5
   171e0:	bl	16980 <gtk_tree_row_reference_get_path@plt>
   171e4:	subs	r5, r0, #0
   171e8:	beq	17244 <g_strcmp0@plt+0x60c>
   171ec:	mov	r2, r5
   171f0:	add	r1, sp, #12
   171f4:	mov	r0, r6
   171f8:	bl	16adc <gtk_tree_model_get_iter@plt>
   171fc:	add	r3, sp, #8
   17200:	mov	r2, #13
   17204:	add	r1, sp, #12
   17208:	mov	r0, r6
   1720c:	str	r7, [sp]
   17210:	bl	16b30 <gtk_tree_model_get@plt>
   17214:	bl	15e58 <gtk_tree_store_get_type@plt>
   17218:	mov	r1, r0
   1721c:	mov	r0, r6
   17220:	bl	15d68 <g_type_check_instance_cast@plt>
   17224:	ldr	r3, [sp, #8]
   17228:	str	r7, [sp]
   1722c:	add	r3, r3, #1
   17230:	mov	r2, #13
   17234:	add	r1, sp, #12
   17238:	bl	16164 <gtk_tree_store_set@plt>
   1723c:	mov	r0, r5
   17240:	bl	16170 <gtk_tree_path_free@plt>
   17244:	ldr	r4, [r4, #4]
   17248:	cmp	r4, #0
   1724c:	bne	171cc <g_strcmp0@plt+0x594>
   17250:	ldr	r2, [sp, #28]
   17254:	ldr	r3, [r8]
   17258:	mov	r0, #1
   1725c:	cmp	r2, r3
   17260:	bne	1726c <g_strcmp0@plt+0x634>
   17264:	add	sp, sp, #32
   17268:	pop	{r4, r5, r6, r7, r8, pc}
   1726c:	bl	164ac <__stack_chk_fail@plt>
   17270:	andeq	sp, r3, r0, lsl r6
   17274:	andeq	ip, r3, r0, asr lr
   17278:	push	{r4, r5, r6, r7, r8, lr}
   1727c:	sub	sp, sp, #16
   17280:	ldr	r5, [pc, #172]	; 17334 <g_strcmp0@plt+0x6fc>
   17284:	mvn	lr, #0
   17288:	mov	r4, #0
   1728c:	ldr	ip, [r5]
   17290:	mov	r7, r1
   17294:	mov	r6, r3
   17298:	mov	r1, r2
   1729c:	str	lr, [sp]
   172a0:	add	r3, sp, #8
   172a4:	mov	r2, #1
   172a8:	str	r4, [sp, #8]
   172ac:	str	ip, [sp, #12]
   172b0:	mov	r8, r0
   172b4:	bl	16b30 <gtk_tree_model_get@plt>
   172b8:	ldr	r1, [sp, #8]
   172bc:	cmp	r1, r4
   172c0:	moveq	r4, r1
   172c4:	beq	172dc <g_strcmp0@plt+0x6a4>
   172c8:	mov	r0, r6
   172cc:	bl	16c38 <g_strcmp0@plt>
   172d0:	cmp	r0, r4
   172d4:	beq	17300 <g_strcmp0@plt+0x6c8>
   172d8:	ldr	r1, [sp, #8]
   172dc:	mov	r0, r1
   172e0:	bl	16518 <g_free@plt>
   172e4:	ldr	r2, [sp, #12]
   172e8:	ldr	r3, [r5]
   172ec:	mov	r0, r4
   172f0:	cmp	r2, r3
   172f4:	bne	17330 <g_strcmp0@plt+0x6f8>
   172f8:	add	sp, sp, #16
   172fc:	pop	{r4, r5, r6, r7, r8, pc}
   17300:	mov	r1, #80	; 0x50
   17304:	mov	r0, r8
   17308:	bl	15d68 <g_type_check_instance_cast@plt>
   1730c:	ldr	r1, [pc, #36]	; 17338 <g_strcmp0@plt+0x700>
   17310:	bl	16b9c <g_object_get_data@plt>
   17314:	mov	r4, #1
   17318:	mov	r6, r0
   1731c:	mov	r0, r7
   17320:	bl	16794 <gtk_tree_path_copy@plt>
   17324:	ldr	r1, [sp, #8]
   17328:	str	r0, [r6]
   1732c:	b	172dc <g_strcmp0@plt+0x6a4>
   17330:	bl	164ac <__stack_chk_fail@plt>
   17334:	andeq	ip, r3, r0, asr lr
   17338:			; <UNDEFINED> instruction: 0x000262bc
   1733c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17340:	sub	sp, sp, #56	; 0x38
   17344:	ldr	sl, [pc, #240]	; 1743c <g_strcmp0@plt+0x804>
   17348:	ldr	r9, [pc, #240]	; 17440 <g_strcmp0@plt+0x808>
   1734c:	ldr	r1, [pc, #240]	; 17444 <g_strcmp0@plt+0x80c>
   17350:	ldr	r3, [sl]
   17354:	mov	r5, r0
   17358:	ldr	r0, [r9]
   1735c:	str	r3, [sp, #52]	; 0x34
   17360:	bl	16068 <gtk_builder_get_object@plt>
   17364:	mov	r4, r0
   17368:	bl	164c4 <gtk_tree_view_get_type@plt>
   1736c:	mov	r1, r0
   17370:	mov	r0, r4
   17374:	bl	15d68 <g_type_check_instance_cast@plt>
   17378:	bl	15f6c <gtk_tree_view_get_model@plt>
   1737c:	add	r1, sp, #20
   17380:	mov	r4, r0
   17384:	bl	16548 <gtk_tree_model_get_iter_first@plt>
   17388:	cmp	r0, #0
   1738c:	beq	17420 <g_strcmp0@plt+0x7e8>
   17390:	mvn	r7, #0
   17394:	mov	r6, #5
   17398:	mov	r3, r5
   1739c:	mov	r2, #4
   173a0:	add	r1, sp, #20
   173a4:	ldr	r0, [r9, #16]
   173a8:	stmib	sp, {r5, r7}
   173ac:	str	r6, [sp]
   173b0:	bl	16164 <gtk_tree_store_set@plt>
   173b4:	add	r2, sp, #20
   173b8:	add	r1, sp, #36	; 0x24
   173bc:	mov	r0, r4
   173c0:	bl	15eb8 <gtk_tree_model_iter_children@plt>
   173c4:	cmp	r0, #0
   173c8:	beq	1740c <g_strcmp0@plt+0x7d4>
   173cc:	bl	15e58 <gtk_tree_store_get_type@plt>
   173d0:	mov	r8, r0
   173d4:	mov	r1, r8
   173d8:	mov	r0, r4
   173dc:	bl	15d68 <g_type_check_instance_cast@plt>
   173e0:	mov	r3, r5
   173e4:	mov	r2, #4
   173e8:	add	r1, sp, #36	; 0x24
   173ec:	stmib	sp, {r5, r7}
   173f0:	str	r6, [sp]
   173f4:	bl	16164 <gtk_tree_store_set@plt>
   173f8:	add	r1, sp, #36	; 0x24
   173fc:	mov	r0, r4
   17400:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   17404:	cmp	r0, #0
   17408:	bne	173d4 <g_strcmp0@plt+0x79c>
   1740c:	add	r1, sp, #20
   17410:	mov	r0, r4
   17414:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   17418:	cmp	r0, #0
   1741c:	bne	17398 <g_strcmp0@plt+0x760>
   17420:	ldr	r2, [sp, #52]	; 0x34
   17424:	ldr	r3, [sl]
   17428:	cmp	r2, r3
   1742c:	bne	17438 <g_strcmp0@plt+0x800>
   17430:	add	sp, sp, #56	; 0x38
   17434:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17438:	bl	164ac <__stack_chk_fail@plt>
   1743c:	andeq	ip, r3, r0, asr lr
   17440:	andeq	sp, r3, r0, lsl r6
   17444:	andeq	r6, r2, r4, asr #5
   17448:	push	{r4, r5, r6, lr}
   1744c:	sub	sp, sp, #72	; 0x48
   17450:	ldr	r5, [pc, #248]	; 17550 <g_strcmp0@plt+0x918>
   17454:	mvn	ip, #0
   17458:	add	r2, sp, #48	; 0x30
   1745c:	mov	r3, #1
   17460:	str	ip, [sp, #24]
   17464:	str	r2, [sp, #20]
   17468:	mov	ip, #7
   1746c:	add	r2, sp, #40	; 0x28
   17470:	ldr	lr, [r5]
   17474:	add	r4, sp, #44	; 0x2c
   17478:	str	r3, [sp, #16]
   1747c:	mov	r3, #6
   17480:	stmib	sp, {r2, ip}
   17484:	str	r4, [sp, #12]
   17488:	str	r3, [sp]
   1748c:	mov	ip, #0
   17490:	add	r3, sp, #36	; 0x24
   17494:	mov	r2, #3
   17498:	str	lr, [sp, #68]	; 0x44
   1749c:	str	ip, [sp, #48]	; 0x30
   174a0:	mov	r4, r0
   174a4:	mov	r6, r1
   174a8:	bl	16b30 <gtk_tree_model_get@plt>
   174ac:	ldr	r3, [sp, #36]	; 0x24
   174b0:	cmp	r3, #0
   174b4:	beq	174f4 <g_strcmp0@plt+0x8bc>
   174b8:	ldr	r3, [sp, #48]	; 0x30
   174bc:	cmp	r3, #0
   174c0:	beq	174f4 <g_strcmp0@plt+0x8bc>
   174c4:	ldr	r3, [pc, #136]	; 17554 <g_strcmp0@plt+0x91c>
   174c8:	ldr	ip, [sp, #44]	; 0x2c
   174cc:	ldr	r0, [sp, #40]	; 0x28
   174d0:	ldr	r1, [r3, #20]
   174d4:	ldr	r2, [r3, #24]
   174d8:	add	r1, r1, ip
   174dc:	ldr	ip, [r3, #28]
   174e0:	add	r2, r2, #1
   174e4:	cmp	r0, ip
   174e8:	str	r1, [r3, #20]
   174ec:	str	r2, [r3, #24]
   174f0:	strhi	r0, [r3, #28]
   174f4:	mov	r2, r6
   174f8:	add	r1, sp, #52	; 0x34
   174fc:	mov	r0, r4
   17500:	bl	15eb8 <gtk_tree_model_iter_children@plt>
   17504:	cmp	r0, #0
   17508:	beq	1752c <g_strcmp0@plt+0x8f4>
   1750c:	add	r1, sp, #52	; 0x34
   17510:	mov	r0, r4
   17514:	bl	17448 <g_strcmp0@plt+0x810>
   17518:	add	r1, sp, #52	; 0x34
   1751c:	mov	r0, r4
   17520:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   17524:	cmp	r0, #0
   17528:	bne	1750c <g_strcmp0@plt+0x8d4>
   1752c:	ldr	r0, [sp, #48]	; 0x30
   17530:	bl	16518 <g_free@plt>
   17534:	ldr	r2, [sp, #68]	; 0x44
   17538:	ldr	r3, [r5]
   1753c:	cmp	r2, r3
   17540:	bne	1754c <g_strcmp0@plt+0x914>
   17544:	add	sp, sp, #72	; 0x48
   17548:	pop	{r4, r5, r6, pc}
   1754c:	bl	164ac <__stack_chk_fail@plt>
   17550:	andeq	ip, r3, r0, asr lr
   17554:	andeq	sp, r3, r0, lsl r6
   17558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1755c:	sub	sp, sp, #76	; 0x4c
   17560:	ldr	r7, [pc, #616]	; 177d0 <g_strcmp0@plt+0xb98>
   17564:	ldr	r4, [pc, #616]	; 177d4 <g_strcmp0@plt+0xb9c>
   17568:	ldr	r1, [pc, #616]	; 177d8 <g_strcmp0@plt+0xba0>
   1756c:	ldr	r3, [r7]
   17570:	ldr	r0, [r4]
   17574:	str	r3, [sp, #68]	; 0x44
   17578:	bl	16068 <gtk_builder_get_object@plt>
   1757c:	mov	r6, r0
   17580:	bl	15d14 <gtk_widget_get_type@plt>
   17584:	mov	r1, r0
   17588:	mov	r5, r0
   1758c:	mov	r0, r6
   17590:	bl	15d68 <g_type_check_instance_cast@plt>
   17594:	bl	15dbc <gtk_widget_hide@plt>
   17598:	ldr	r0, [r4, #32]
   1759c:	bl	15dbc <gtk_widget_hide@plt>
   175a0:	ldr	r2, [pc, #564]	; 177dc <g_strcmp0@plt+0xba4>
   175a4:	mov	r1, #128	; 0x80
   175a8:	ldr	r0, [pc, #560]	; 177e0 <g_strcmp0@plt+0xba8>
   175ac:	bl	15dec <g_log@plt>
   175b0:	mov	r0, #0
   175b4:	bl	1733c <g_strcmp0@plt+0x704>
   175b8:	ldr	r1, [pc, #548]	; 177e4 <g_strcmp0@plt+0xbac>
   175bc:	ldr	r0, [r4]
   175c0:	bl	16068 <gtk_builder_get_object@plt>
   175c4:	mov	r1, r5
   175c8:	bl	15d68 <g_type_check_instance_cast@plt>
   175cc:	mov	r1, #0
   175d0:	bl	16c08 <gtk_widget_set_sensitive@plt>
   175d4:	ldr	r1, [pc, #524]	; 177e8 <g_strcmp0@plt+0xbb0>
   175d8:	ldr	r0, [r4]
   175dc:	bl	16068 <gtk_builder_get_object@plt>
   175e0:	mov	r6, r0
   175e4:	bl	164c4 <gtk_tree_view_get_type@plt>
   175e8:	mov	r1, r0
   175ec:	mov	r5, r0
   175f0:	mov	r0, r6
   175f4:	bl	15d68 <g_type_check_instance_cast@plt>
   175f8:	bl	16614 <gtk_tree_view_get_selection@plt>
   175fc:	bl	168fc <gtk_tree_selection_unselect_all@plt>
   17600:	ldr	r1, [pc, #480]	; 177e8 <g_strcmp0@plt+0xbb0>
   17604:	ldr	r0, [r4]
   17608:	bl	16068 <gtk_builder_get_object@plt>
   1760c:	mov	r1, r5
   17610:	bl	15d68 <g_type_check_instance_cast@plt>
   17614:	bl	15f6c <gtk_tree_view_get_model@plt>
   17618:	mov	r5, r0
   1761c:	bl	165a8 <g_ptr_array_new@plt>
   17620:	add	r1, sp, #52	; 0x34
   17624:	mov	r6, r0
   17628:	mov	r0, r5
   1762c:	bl	16548 <gtk_tree_model_get_iter_first@plt>
   17630:	cmp	r0, #0
   17634:	beq	17758 <g_strcmp0@plt+0xb20>
   17638:	add	fp, sp, #32
   1763c:	add	sl, sp, #28
   17640:	mvn	r9, #0
   17644:	mov	r8, #1
   17648:	mov	r3, #3
   1764c:	str	r3, [sp]
   17650:	add	r1, sp, #52	; 0x34
   17654:	str	r9, [sp, #16]
   17658:	str	fp, [sp, #12]
   1765c:	str	r8, [sp, #8]
   17660:	str	sl, [sp, #4]
   17664:	add	r3, sp, #24
   17668:	mov	r2, #2
   1766c:	mov	r0, r5
   17670:	bl	16b30 <gtk_tree_model_get@plt>
   17674:	ldr	r1, [sp, #32]
   17678:	cmp	r1, #0
   1767c:	beq	177c0 <g_strcmp0@plt+0xb88>
   17680:	ldr	r3, [sp, #28]
   17684:	cmp	r3, #0
   17688:	beq	177c0 <g_strcmp0@plt+0xb88>
   1768c:	ldr	r3, [sp, #24]
   17690:	sub	r3, r3, #3
   17694:	cmp	r3, #6
   17698:	bhi	177c0 <g_strcmp0@plt+0xb88>
   1769c:	mov	r0, r6
   176a0:	bl	16a10 <g_ptr_array_add@plt>
   176a4:	add	r2, sp, #52	; 0x34
   176a8:	add	r1, sp, #36	; 0x24
   176ac:	mov	r0, r5
   176b0:	bl	15eb8 <gtk_tree_model_iter_children@plt>
   176b4:	cmp	r0, #0
   176b8:	bne	176dc <g_strcmp0@plt+0xaa4>
   176bc:	b	17744 <g_strcmp0@plt+0xb0c>
   176c0:	mov	r0, r6
   176c4:	bl	16a10 <g_ptr_array_add@plt>
   176c8:	add	r1, sp, #36	; 0x24
   176cc:	mov	r0, r5
   176d0:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   176d4:	cmp	r0, #0
   176d8:	beq	17744 <g_strcmp0@plt+0xb0c>
   176dc:	mov	r3, #3
   176e0:	str	r3, [sp]
   176e4:	str	r9, [sp, #16]
   176e8:	add	r3, sp, #24
   176ec:	str	fp, [sp, #12]
   176f0:	str	r8, [sp, #8]
   176f4:	str	sl, [sp, #4]
   176f8:	mov	r2, #2
   176fc:	add	r1, sp, #36	; 0x24
   17700:	mov	r0, r5
   17704:	bl	16b30 <gtk_tree_model_get@plt>
   17708:	ldr	r3, [sp, #28]
   1770c:	cmp	r3, #0
   17710:	beq	17734 <g_strcmp0@plt+0xafc>
   17714:	ldr	r3, [sp, #24]
   17718:	ldr	r1, [sp, #32]
   1771c:	sub	r3, r3, #3
   17720:	cmp	r3, #6
   17724:	bls	176c0 <g_strcmp0@plt+0xa88>
   17728:	mov	r0, r1
   1772c:	bl	16518 <g_free@plt>
   17730:	b	176c8 <g_strcmp0@plt+0xa90>
   17734:	ldr	r1, [sp, #32]
   17738:	mov	r0, r1
   1773c:	bl	16518 <g_free@plt>
   17740:	b	176c8 <g_strcmp0@plt+0xa90>
   17744:	add	r1, sp, #52	; 0x34
   17748:	mov	r0, r5
   1774c:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   17750:	cmp	r0, #0
   17754:	bne	17648 <g_strcmp0@plt+0xa10>
   17758:	mov	r0, r6
   1775c:	bl	16200 <pk_ptr_array_to_strv@plt>
   17760:	ldr	r2, [pc, #132]	; 177ec <g_strcmp0@plt+0xbb4>
   17764:	mov	r3, #0
   17768:	str	r3, [sp]
   1776c:	strd	r2, [sp, #4]
   17770:	ldr	r3, [pc, #120]	; 177f0 <g_strcmp0@plt+0xbb8>
   17774:	ldr	r2, [r4, #4]
   17778:	mov	r1, r0
   1777c:	mov	r5, r0
   17780:	ldr	r0, [r4, #36]	; 0x24
   17784:	bl	16380 <pk_task_update_packages_async@plt>
   17788:	mov	r3, #1
   1778c:	mov	r0, r5
   17790:	str	r3, [r4, #40]	; 0x28
   17794:	bl	1644c <g_strfreev@plt>
   17798:	cmp	r6, #0
   1779c:	beq	177a8 <g_strcmp0@plt+0xb70>
   177a0:	mov	r0, r6
   177a4:	bl	169c8 <g_ptr_array_unref@plt>
   177a8:	ldr	r2, [sp, #68]	; 0x44
   177ac:	ldr	r3, [r7]
   177b0:	cmp	r2, r3
   177b4:	bne	177cc <g_strcmp0@plt+0xb94>
   177b8:	add	sp, sp, #76	; 0x4c
   177bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177c0:	mov	r0, r1
   177c4:	bl	16518 <g_free@plt>
   177c8:	b	176a4 <g_strcmp0@plt+0xa6c>
   177cc:	bl	164ac <__stack_chk_fail@plt>
   177d0:	andeq	ip, r3, r0, asr lr
   177d4:	andeq	sp, r3, r0, lsl r6
   177d8:	ldrdeq	r6, [r2], -r8
   177dc:	andeq	r6, r2, ip, ror #5
   177e0:	andeq	r6, r2, r0, ror #4
   177e4:	andeq	r6, r2, r8, lsl #6
   177e8:	andeq	r6, r2, r4, asr #5
   177ec:	andeq	r8, r1, ip, ror #30
   177f0:	andeq	r9, r1, r0, lsr r6
   177f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177f8:	sub	sp, sp, #20
   177fc:	ldr	ip, [pc, #256]	; 17904 <g_strcmp0@plt+0xccc>
   17800:	mov	r6, r3
   17804:	mov	r3, #0
   17808:	str	r3, [sp, #4]
   1780c:	str	ip, [sp]
   17810:	mvn	r3, #0
   17814:	mov	r4, r0
   17818:	mov	r5, r1
   1781c:	bl	16308 <gtk_text_buffer_insert_with_tags_by_name@plt>
   17820:	ldr	r3, [r6]
   17824:	cmp	r3, #0
   17828:	beq	178e8 <g_strcmp0@plt+0xcb0>
   1782c:	ldr	fp, [pc, #212]	; 17908 <g_strcmp0@plt+0xcd0>
   17830:	ldr	sl, [pc, #212]	; 1790c <g_strcmp0@plt+0xcd4>
   17834:	mvn	r3, #0
   17838:	mov	r2, sl
   1783c:	mov	r1, r5
   17840:	mov	r0, r4
   17844:	bl	15e70 <gtk_text_buffer_insert@plt>
   17848:	mvn	r3, #0
   1784c:	ldr	r2, [pc, #188]	; 17910 <g_strcmp0@plt+0xcd8>
   17850:	mov	r1, r5
   17854:	mov	r0, r4
   17858:	bl	15e70 <gtk_text_buffer_insert@plt>
   1785c:	mov	r7, #0
   17860:	mov	r3, #1
   17864:	ldr	r2, [pc, #168]	; 17914 <g_strcmp0@plt+0xcdc>
   17868:	mov	r1, r7
   1786c:	str	r3, [sp, #4]
   17870:	str	fp, [sp]
   17874:	ldr	r3, [pc, #156]	; 17918 <g_strcmp0@plt+0xce0>
   17878:	str	r7, [sp, #8]
   1787c:	mov	r0, r4
   17880:	bl	16524 <gtk_text_buffer_create_tag@plt>
   17884:	mov	r1, #80	; 0x50
   17888:	mov	r8, r0
   1788c:	bl	15d68 <g_type_check_instance_cast@plt>
   17890:	mov	r9, r0
   17894:	ldr	r0, [r6]
   17898:	bl	15fe4 <g_strdup@plt>
   1789c:	ldr	r1, [pc, #120]	; 1791c <g_strcmp0@plt+0xce4>
   178a0:	mov	r2, r0
   178a4:	mov	r0, r9
   178a8:	bl	16824 <g_object_set_data@plt>
   178ac:	str	r7, [sp, #4]
   178b0:	str	r8, [sp]
   178b4:	mvn	r3, #0
   178b8:	ldr	r2, [r6]
   178bc:	mov	r1, r5
   178c0:	mov	r0, r4
   178c4:	bl	167a0 <gtk_text_buffer_insert_with_tags@plt>
   178c8:	mvn	r3, #0
   178cc:	ldr	r2, [pc, #76]	; 17920 <g_strcmp0@plt+0xce8>
   178d0:	mov	r1, r5
   178d4:	mov	r0, r4
   178d8:	bl	15e70 <gtk_text_buffer_insert@plt>
   178dc:	ldr	r3, [r6, #4]!
   178e0:	cmp	r3, r7
   178e4:	bne	17834 <g_strcmp0@plt+0xbfc>
   178e8:	mov	r1, r5
   178ec:	mov	r0, r4
   178f0:	mvn	r3, #0
   178f4:	ldr	r2, [pc, #16]	; 1790c <g_strcmp0@plt+0xcd4>
   178f8:	add	sp, sp, #20
   178fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17900:	b	15e70 <gtk_text_buffer_insert@plt>
   17904:	andeq	r6, r2, r8, lsl r3
   17908:	andeq	r6, r2, ip, lsr r3
   1790c:	andeq	r7, r2, r0, lsr #25
   17910:	andeq	r6, r2, r0, lsr #6
   17914:	andeq	r6, r2, r0, lsr r3
   17918:	andeq	r6, r2, r8, lsr #6
   1791c:	andeq	r6, r2, r8, asr #6
   17920:	andeq	ip, r2, ip, lsl #5
   17924:	push	{r4, r5, r6, r7, r8, r9, lr}
   17928:	mov	r9, r0
   1792c:	ldr	r4, [pc, #376]	; 17aac <g_strcmp0@plt+0xe74>
   17930:	sub	sp, sp, #12
   17934:	mov	r8, r1
   17938:	ldr	r0, [r4]
   1793c:	ldr	r1, [pc, #364]	; 17ab0 <g_strcmp0@plt+0xe78>
   17940:	bl	16068 <gtk_builder_get_object@plt>
   17944:	mov	r6, r0
   17948:	bl	15d14 <gtk_widget_get_type@plt>
   1794c:	mov	r5, r0
   17950:	mov	r1, r0
   17954:	mov	r0, r6
   17958:	bl	15d68 <g_type_check_instance_cast@plt>
   1795c:	bl	15dbc <gtk_widget_hide@plt>
   17960:	ldr	r1, [pc, #332]	; 17ab4 <g_strcmp0@plt+0xe7c>
   17964:	ldr	r0, [r4]
   17968:	bl	16068 <gtk_builder_get_object@plt>
   1796c:	mov	r1, r5
   17970:	bl	15d68 <g_type_check_instance_cast@plt>
   17974:	mov	r2, #5
   17978:	ldr	r1, [pc, #312]	; 17ab8 <g_strcmp0@plt+0xe80>
   1797c:	mov	r7, r0
   17980:	mov	r0, #0
   17984:	bl	16530 <dcgettext@plt>
   17988:	mov	r1, r0
   1798c:	ldr	r0, [pc, #296]	; 17abc <g_strcmp0@plt+0xe84>
   17990:	bl	160e0 <g_strdup_printf@plt>
   17994:	mov	r6, r0
   17998:	bl	15cc0 <gtk_label_get_type@plt>
   1799c:	mov	r1, r0
   179a0:	mov	r0, r7
   179a4:	bl	15d68 <g_type_check_instance_cast@plt>
   179a8:	mov	r1, r6
   179ac:	bl	15ccc <gtk_label_set_label@plt>
   179b0:	mov	r0, r6
   179b4:	bl	16518 <g_free@plt>
   179b8:	ldr	r1, [pc, #256]	; 17ac0 <g_strcmp0@plt+0xe88>
   179bc:	ldr	r0, [r4]
   179c0:	bl	16068 <gtk_builder_get_object@plt>
   179c4:	mov	r1, r5
   179c8:	bl	15d68 <g_type_check_instance_cast@plt>
   179cc:	ldr	r7, [pc, #240]	; 17ac4 <g_strcmp0@plt+0xe8c>
   179d0:	mov	r5, r0
   179d4:	bl	16bfc <gtk_window_get_type@plt>
   179d8:	mov	r1, r0
   179dc:	mov	r6, r0
   179e0:	mov	r0, r5
   179e4:	bl	15d68 <g_type_check_instance_cast@plt>
   179e8:	mov	r3, #1
   179ec:	mov	r1, r3
   179f0:	mov	r2, #0
   179f4:	stm	sp, {r7, r9}
   179f8:	bl	16a70 <gtk_message_dialog_new@plt>
   179fc:	mov	r5, r0
   17a00:	bl	16590 <gtk_message_dialog_get_type@plt>
   17a04:	mov	r1, r0
   17a08:	mov	r0, r5
   17a0c:	bl	15d68 <g_type_check_instance_cast@plt>
   17a10:	mov	r2, r8
   17a14:	mov	r1, r7
   17a18:	bl	15b70 <gtk_message_dialog_format_secondary_text@plt>
   17a1c:	mov	r1, r6
   17a20:	mov	r0, r5
   17a24:	bl	15d68 <g_type_check_instance_cast@plt>
   17a28:	ldr	r1, [pc, #152]	; 17ac8 <g_strcmp0@plt+0xe90>
   17a2c:	bl	15ef4 <gtk_window_set_icon_name@plt>
   17a30:	mov	r2, r5
   17a34:	ldr	r1, [pc, #144]	; 17acc <g_strcmp0@plt+0xe94>
   17a38:	mov	r0, #60	; 0x3c
   17a3c:	bl	1668c <g_timeout_add_seconds@plt>
   17a40:	ldr	r1, [pc, #136]	; 17ad0 <g_strcmp0@plt+0xe98>
   17a44:	str	r0, [r4, #44]	; 0x2c
   17a48:	bl	1692c <g_source_set_name_by_id@plt>
   17a4c:	bl	165e4 <gtk_dialog_get_type@plt>
   17a50:	mov	r1, r0
   17a54:	mov	r0, r5
   17a58:	bl	15d68 <g_type_check_instance_cast@plt>
   17a5c:	bl	167e8 <gtk_dialog_run@plt>
   17a60:	mov	r0, r5
   17a64:	bl	1638c <gtk_widget_destroy@plt>
   17a68:	ldr	r0, [r4, #44]	; 0x2c
   17a6c:	cmp	r0, #0
   17a70:	bne	17a88 <g_strcmp0@plt+0xe50>
   17a74:	ldr	r3, [r4, #48]	; 0x30
   17a78:	cmp	r3, #0
   17a7c:	beq	17aa0 <g_strcmp0@plt+0xe68>
   17a80:	add	sp, sp, #12
   17a84:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17a88:	bl	16c14 <g_source_remove@plt>
   17a8c:	mov	r3, #0
   17a90:	str	r3, [r4, #44]	; 0x2c
   17a94:	ldr	r3, [r4, #48]	; 0x30
   17a98:	cmp	r3, #0
   17a9c:	bne	17a80 <g_strcmp0@plt+0xe48>
   17aa0:	add	sp, sp, #12
   17aa4:	pop	{r4, r5, r6, r7, r8, r9, lr}
   17aa8:	b	17170 <g_strcmp0@plt+0x538>
   17aac:	andeq	sp, r3, r0, lsl r6
   17ab0:	andeq	r6, r2, r0, asr r3
   17ab4:	andeq	r6, r2, ip, asr r3
   17ab8:	andeq	r6, r2, r0, ror r3
   17abc:	muleq	r2, r0, r3
   17ac0:	andeq	r6, r2, ip, lsr #4
   17ac4:	andeq	fp, r2, ip, asr r9
   17ac8:	andeq	r6, r2, r8, lsr #7
   17acc:	ldrdeq	r7, [r1], -r4
   17ad0:	andeq	r6, r2, r0, asr #7
   17ad4:	push	{r4, lr}
   17ad8:	mov	r1, #128	; 0x80
   17adc:	mov	r4, r0
   17ae0:	ldr	r2, [pc, #36]	; 17b0c <g_strcmp0@plt+0xed4>
   17ae4:	ldr	r0, [pc, #36]	; 17b10 <g_strcmp0@plt+0xed8>
   17ae8:	bl	15dec <g_log@plt>
   17aec:	mov	r0, r4
   17af0:	mvn	r1, #5
   17af4:	bl	15ba0 <gtk_dialog_response@plt>
   17af8:	ldr	r2, [pc, #20]	; 17b14 <g_strcmp0@plt+0xedc>
   17afc:	mov	r3, #0
   17b00:	mov	r0, r3
   17b04:	str	r3, [r2, #44]	; 0x2c
   17b08:	pop	{r4, pc}
   17b0c:	andeq	r6, r2, r8, ror #7
   17b10:	andeq	r6, r2, r0, ror #4
   17b14:	andeq	sp, r3, r0, lsl r6
   17b18:	push	{r4, r5, r6, r7, lr}
   17b1c:	sub	sp, sp, #20
   17b20:	ldr	r5, [pc, #136]	; 17bb0 <g_strcmp0@plt+0xf78>
   17b24:	mvn	r4, #0
   17b28:	mov	r6, r2
   17b2c:	ldr	ip, [r5]
   17b30:	mov	r2, r1
   17b34:	str	r4, [sp]
   17b38:	mov	r1, r3
   17b3c:	add	r3, sp, #8
   17b40:	str	ip, [sp, #12]
   17b44:	bl	16b30 <gtk_tree_model_get@plt>
   17b48:	mov	r1, r4
   17b4c:	mov	r0, r6
   17b50:	bl	15c6c <g_utf8_casefold@plt>
   17b54:	mov	r1, r4
   17b58:	mov	r6, r0
   17b5c:	ldr	r0, [sp, #8]
   17b60:	bl	15c6c <g_utf8_casefold@plt>
   17b64:	mov	r1, r6
   17b68:	mov	r7, r0
   17b6c:	bl	1656c <strstr@plt>
   17b70:	mov	r4, r0
   17b74:	ldr	r0, [sp, #8]
   17b78:	bl	16518 <g_free@plt>
   17b7c:	mov	r0, r6
   17b80:	bl	16518 <g_free@plt>
   17b84:	mov	r0, r7
   17b88:	bl	16518 <g_free@plt>
   17b8c:	ldr	r2, [sp, #12]
   17b90:	ldr	r3, [r5]
   17b94:	cmp	r2, r3
   17b98:	bne	17bac <g_strcmp0@plt+0xf74>
   17b9c:	clz	r0, r4
   17ba0:	lsr	r0, r0, #5
   17ba4:	add	sp, sp, #20
   17ba8:	pop	{r4, r5, r6, r7, pc}
   17bac:	bl	164ac <__stack_chk_fail@plt>
   17bb0:	andeq	ip, r3, r0, asr lr
   17bb4:	push	{r4, r5, r6, r7, r8, r9, lr}
   17bb8:	sub	sp, sp, #68	; 0x44
   17bbc:	ldr	r6, [pc, #360]	; 17d2c <g_strcmp0@plt+0x10f4>
   17bc0:	mov	r4, r1
   17bc4:	mov	r1, #80	; 0x50
   17bc8:	ldr	r3, [r6]
   17bcc:	mov	r5, r2
   17bd0:	str	r3, [sp, #60]	; 0x3c
   17bd4:	mov	r7, r0
   17bd8:	bl	15d68 <g_type_check_instance_cast@plt>
   17bdc:	ldr	r1, [pc, #332]	; 17d30 <g_strcmp0@plt+0x10f8>
   17be0:	bl	16b9c <g_object_get_data@plt>
   17be4:	mov	r3, r5
   17be8:	mov	r2, r4
   17bec:	add	r1, sp, #4
   17bf0:	mov	r9, r0
   17bf4:	mov	r0, r7
   17bf8:	bl	1659c <gtk_text_view_get_iter_at_location@plt>
   17bfc:	add	r0, sp, #4
   17c00:	bl	16458 <gtk_text_iter_get_tags@plt>
   17c04:	subs	r8, r0, #0
   17c08:	beq	17cd8 <g_strcmp0@plt+0x10a0>
   17c0c:	ldr	r5, [pc, #288]	; 17d34 <g_strcmp0@plt+0x10fc>
   17c10:	mov	r4, r8
   17c14:	b	17c24 <g_strcmp0@plt+0xfec>
   17c18:	ldr	r4, [r4, #4]
   17c1c:	cmp	r4, #0
   17c20:	beq	17cac <g_strcmp0@plt+0x1074>
   17c24:	mov	r1, #80	; 0x50
   17c28:	ldr	r0, [r4]
   17c2c:	bl	15d68 <g_type_check_instance_cast@plt>
   17c30:	mov	r1, r5
   17c34:	bl	16b9c <g_object_get_data@plt>
   17c38:	cmp	r0, #0
   17c3c:	beq	17c18 <g_strcmp0@plt+0xfe0>
   17c40:	cmp	r9, #1
   17c44:	beq	17c8c <g_strcmp0@plt+0x1054>
   17c48:	mov	r1, #80	; 0x50
   17c4c:	mov	r0, r7
   17c50:	bl	15d68 <g_type_check_instance_cast@plt>
   17c54:	ldr	r1, [pc, #212]	; 17d30 <g_strcmp0@plt+0x10f8>
   17c58:	mov	r2, #1
   17c5c:	bl	16824 <g_object_set_data@plt>
   17c60:	bl	16254 <gdk_display_get_default@plt>
   17c64:	mov	r1, #60	; 0x3c
   17c68:	bl	15ec4 <gdk_cursor_new_for_display@plt>
   17c6c:	mov	r1, #2
   17c70:	mov	r4, r0
   17c74:	mov	r0, r7
   17c78:	bl	15df8 <gtk_text_view_get_window@plt>
   17c7c:	mov	r1, r4
   17c80:	bl	15c84 <gdk_window_set_cursor@plt>
   17c84:	mov	r0, r4
   17c88:	bl	16878 <g_object_unref@plt>
   17c8c:	mov	r0, r8
   17c90:	bl	16c20 <g_slist_free@plt>
   17c94:	ldr	r2, [sp, #60]	; 0x3c
   17c98:	ldr	r3, [r6]
   17c9c:	cmp	r2, r3
   17ca0:	bne	17d28 <g_strcmp0@plt+0x10f0>
   17ca4:	add	sp, sp, #68	; 0x44
   17ca8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17cac:	cmp	r9, #0
   17cb0:	beq	17c8c <g_strcmp0@plt+0x1054>
   17cb4:	mov	r1, #80	; 0x50
   17cb8:	mov	r0, r7
   17cbc:	bl	15d68 <g_type_check_instance_cast@plt>
   17cc0:	ldr	r1, [pc, #104]	; 17d30 <g_strcmp0@plt+0x10f8>
   17cc4:	mov	r2, r4
   17cc8:	bl	16824 <g_object_set_data@plt>
   17ccc:	bl	16254 <gdk_display_get_default@plt>
   17cd0:	mov	r1, #152	; 0x98
   17cd4:	b	17c68 <g_strcmp0@plt+0x1030>
   17cd8:	cmp	r9, #0
   17cdc:	beq	17c94 <g_strcmp0@plt+0x105c>
   17ce0:	mov	r1, #80	; 0x50
   17ce4:	mov	r0, r7
   17ce8:	bl	15d68 <g_type_check_instance_cast@plt>
   17cec:	mov	r2, r8
   17cf0:	ldr	r1, [pc, #56]	; 17d30 <g_strcmp0@plt+0x10f8>
   17cf4:	bl	16824 <g_object_set_data@plt>
   17cf8:	bl	16254 <gdk_display_get_default@plt>
   17cfc:	mov	r1, #152	; 0x98
   17d00:	bl	15ec4 <gdk_cursor_new_for_display@plt>
   17d04:	mov	r1, #2
   17d08:	mov	r4, r0
   17d0c:	mov	r0, r7
   17d10:	bl	15df8 <gtk_text_view_get_window@plt>
   17d14:	mov	r1, r4
   17d18:	bl	15c84 <gdk_window_set_cursor@plt>
   17d1c:	mov	r0, r4
   17d20:	bl	16878 <g_object_unref@plt>
   17d24:	b	17c94 <g_strcmp0@plt+0x105c>
   17d28:	bl	164ac <__stack_chk_fail@plt>
   17d2c:	andeq	ip, r3, r0, asr lr
   17d30:	strdeq	r6, [r2], -ip
   17d34:	andeq	r6, r2, r8, asr #6
   17d38:	push	{r4, r5, r6, r7, lr}
   17d3c:	sub	sp, sp, #36	; 0x24
   17d40:	ldr	r4, [pc, #164]	; 17dec <g_strcmp0@plt+0x11b4>
   17d44:	mov	r6, r1
   17d48:	mov	r5, r0
   17d4c:	ldr	r3, [r4]
   17d50:	str	r3, [sp, #28]
   17d54:	bl	15da4 <gtk_widget_get_window@plt>
   17d58:	mov	r7, r0
   17d5c:	mov	r0, r6
   17d60:	bl	16848 <gdk_event_get_device@plt>
   17d64:	subs	r1, r0, #0
   17d68:	beq	17dcc <g_strcmp0@plt+0x1194>
   17d6c:	mov	r3, #0
   17d70:	add	r2, sp, #12
   17d74:	str	r3, [sp]
   17d78:	mov	r0, r7
   17d7c:	add	r3, sp, #16
   17d80:	bl	166a4 <gdk_window_get_device_position@plt>
   17d84:	bl	15d80 <gtk_text_view_get_type@plt>
   17d88:	mov	r1, r0
   17d8c:	mov	r6, r0
   17d90:	mov	r0, r5
   17d94:	bl	15d68 <g_type_check_instance_cast@plt>
   17d98:	add	r2, sp, #24
   17d9c:	add	r3, sp, #20
   17da0:	str	r2, [sp, #4]
   17da4:	str	r3, [sp]
   17da8:	mov	r1, #1
   17dac:	ldrd	r2, [sp, #12]
   17db0:	bl	15d2c <gtk_text_view_window_to_buffer_coords@plt>
   17db4:	mov	r1, r6
   17db8:	mov	r0, r5
   17dbc:	bl	15d68 <g_type_check_instance_cast@plt>
   17dc0:	ldr	r2, [sp, #24]
   17dc4:	ldr	r1, [sp, #20]
   17dc8:	bl	17bb4 <g_strcmp0@plt+0xf7c>
   17dcc:	ldr	r2, [sp, #28]
   17dd0:	ldr	r3, [r4]
   17dd4:	mov	r0, #0
   17dd8:	cmp	r2, r3
   17ddc:	bne	17de8 <g_strcmp0@plt+0x11b0>
   17de0:	add	sp, sp, #36	; 0x24
   17de4:	pop	{r4, r5, r6, r7, pc}
   17de8:	bl	164ac <__stack_chk_fail@plt>
   17dec:	andeq	ip, r3, r0, asr lr
   17df0:	push	{r4, r5, r6, r7, lr}
   17df4:	sub	sp, sp, #28
   17df8:	ldr	r4, [pc, #132]	; 17e84 <g_strcmp0@plt+0x124c>
   17dfc:	mov	r7, r1
   17e00:	mov	r5, r0
   17e04:	ldr	r3, [r4]
   17e08:	str	r3, [sp, #20]
   17e0c:	bl	15d80 <gtk_text_view_get_type@plt>
   17e10:	mov	r1, r0
   17e14:	mov	r6, r0
   17e18:	mov	r0, r5
   17e1c:	bl	15d68 <g_type_check_instance_cast@plt>
   17e20:	vldr	d6, [r7, #24]
   17e24:	vldr	d7, [r7, #16]
   17e28:	add	ip, sp, #16
   17e2c:	add	r1, sp, #12
   17e30:	vcvt.s32.f64	s13, d6
   17e34:	vcvt.s32.f64	s15, d7
   17e38:	stm	sp, {r1, ip}
   17e3c:	mov	r1, #1
   17e40:	vmov	r3, s13
   17e44:	vmov	r2, s15
   17e48:	bl	15d2c <gtk_text_view_window_to_buffer_coords@plt>
   17e4c:	mov	r1, r6
   17e50:	mov	r0, r5
   17e54:	bl	15d68 <g_type_check_instance_cast@plt>
   17e58:	ldr	r2, [sp, #16]
   17e5c:	ldr	r1, [sp, #12]
   17e60:	bl	17bb4 <g_strcmp0@plt+0xf7c>
   17e64:	ldr	r2, [sp, #20]
   17e68:	ldr	r3, [r4]
   17e6c:	cmp	r2, r3
   17e70:	bne	17e80 <g_strcmp0@plt+0x1248>
   17e74:	mov	r0, #0
   17e78:	add	sp, sp, #28
   17e7c:	pop	{r4, r5, r6, r7, pc}
   17e80:	bl	164ac <__stack_chk_fail@plt>
   17e84:	andeq	ip, r3, r0, asr lr
   17e88:	push	{r4, r5, r6, r7, r8, r9, lr}
   17e8c:	sub	sp, sp, #28
   17e90:	ldr	r4, [pc, #268]	; 17fa4 <g_strcmp0@plt+0x136c>
   17e94:	ldr	r0, [r4, #16]
   17e98:	bl	1671c <gtk_tree_store_clear@plt>
   17e9c:	mvn	r2, #0
   17ea0:	ldr	r0, [r4, #52]	; 0x34
   17ea4:	ldr	r1, [pc, #252]	; 17fa8 <g_strcmp0@plt+0x1370>
   17ea8:	bl	16350 <gtk_text_buffer_set_text@plt>
   17eac:	ldr	r1, [pc, #248]	; 17fac <g_strcmp0@plt+0x1374>
   17eb0:	ldr	r0, [r4]
   17eb4:	bl	16068 <gtk_builder_get_object@plt>
   17eb8:	mov	r5, r0
   17ebc:	bl	15d14 <gtk_widget_get_type@plt>
   17ec0:	mov	r1, r0
   17ec4:	mov	r0, r5
   17ec8:	bl	15d68 <g_type_check_instance_cast@plt>
   17ecc:	mov	r2, #5
   17ed0:	ldr	r1, [pc, #216]	; 17fb0 <g_strcmp0@plt+0x1378>
   17ed4:	mov	r6, r0
   17ed8:	mov	r0, #0
   17edc:	bl	16530 <dcgettext@plt>
   17ee0:	mov	r1, r0
   17ee4:	ldr	r0, [pc, #200]	; 17fb4 <g_strcmp0@plt+0x137c>
   17ee8:	bl	160e0 <g_strdup_printf@plt>
   17eec:	mov	r5, r0
   17ef0:	bl	15cc0 <gtk_label_get_type@plt>
   17ef4:	mov	r1, r0
   17ef8:	mov	r0, r6
   17efc:	bl	15d68 <g_type_check_instance_cast@plt>
   17f00:	mov	r1, r5
   17f04:	bl	15ccc <gtk_label_set_label@plt>
   17f08:	ldr	r0, [r4, #56]	; 0x38
   17f0c:	ldr	r1, [pc, #164]	; 17fb8 <g_strcmp0@plt+0x1380>
   17f10:	bl	15b04 <g_settings_get_boolean@plt>
   17f14:	subs	r8, r0, #0
   17f18:	moveq	r6, #1
   17f1c:	moveq	r7, #0
   17f20:	bne	17f7c <g_strcmp0@plt+0x1344>
   17f24:	ldr	r9, [r4, #36]	; 0x24
   17f28:	bl	15e94 <pk_client_get_type@plt>
   17f2c:	mov	r1, r0
   17f30:	mov	r0, r9
   17f34:	bl	15d68 <g_type_check_instance_cast@plt>
   17f38:	ldr	r3, [r4, #4]
   17f3c:	ldr	lr, [pc, #120]	; 17fbc <g_strcmp0@plt+0x1384>
   17f40:	ldr	ip, [pc, #120]	; 17fc0 <g_strcmp0@plt+0x1388>
   17f44:	mov	r1, #0
   17f48:	str	r3, [sp]
   17f4c:	mov	r2, r6
   17f50:	mov	r3, r7
   17f54:	str	lr, [sp, #12]
   17f58:	str	ip, [sp, #4]
   17f5c:	str	r1, [sp, #16]
   17f60:	str	r1, [sp, #8]
   17f64:	bl	15c9c <pk_client_get_updates_async@plt>
   17f68:	mov	r0, r5
   17f6c:	bl	16518 <g_free@plt>
   17f70:	mov	r0, r8
   17f74:	add	sp, sp, #28
   17f78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17f7c:	ldr	r2, [pc, #64]	; 17fc4 <g_strcmp0@plt+0x138c>
   17f80:	mov	r1, #128	; 0x80
   17f84:	ldr	r0, [pc, #60]	; 17fc8 <g_strcmp0@plt+0x1390>
   17f88:	bl	15dec <g_log@plt>
   17f8c:	mvn	r1, #0
   17f90:	mov	r0, #16
   17f94:	bl	163c8 <pk_bitfield_from_enums@plt>
   17f98:	mov	r6, r0
   17f9c:	mov	r7, r1
   17fa0:	b	17f24 <g_strcmp0@plt+0x12ec>
   17fa4:	andeq	sp, r3, r0, lsl r6
   17fa8:	andeq	r7, r2, r8, ror #22
   17fac:	andeq	r6, r2, ip, asr r3
   17fb0:	andeq	r6, r2, r8, lsl #8
   17fb4:	muleq	r2, r0, r3
   17fb8:	andeq	r6, r2, r0, lsr #8
   17fbc:	andeq	ip, r1, r0, asr #6
   17fc0:	andeq	r9, r1, r0, lsr r6
   17fc4:	andeq	r6, r2, ip, lsr #8
   17fc8:	andeq	r6, r2, r0, ror #4
   17fcc:	b	17e88 <g_strcmp0@plt+0x1250>
   17fd0:	ldr	r3, [pc, #3052]	; 18bc4 <g_strcmp0@plt+0x1f8c>
   17fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17fd8:	sub	sp, sp, #116	; 0x74
   17fdc:	ldr	r5, [pc, #2724]	; 18a88 <g_strcmp0@plt+0x1e50>
   17fe0:	ldr	r3, [r3]
   17fe4:	mov	r4, #0
   17fe8:	mov	r7, #1
   17fec:	ldr	r0, [pc, #2712]	; 18a8c <g_strcmp0@plt+0x1e54>
   17ff0:	str	r3, [sp, #108]	; 0x6c
   17ff4:	str	r4, [r5, #44]	; 0x2c
   17ff8:	str	r4, [sp, #68]	; 0x44
   17ffc:	str	r4, [r5, #20]
   18000:	str	r4, [r5, #40]	; 0x28
   18004:	str	r7, [r5, #60]	; 0x3c
   18008:	bl	15b64 <g_settings_new@plt>
   1800c:	str	r0, [r5, #56]	; 0x38
   18010:	bl	162e4 <g_cancellable_new@plt>
   18014:	str	r0, [r5, #4]
   18018:	bl	1ea80 <g_strcmp0@plt+0x7e48>
   1801c:	mov	r1, r7
   18020:	str	r0, [r5, #64]	; 0x40
   18024:	bl	1e004 <g_strcmp0@plt+0x73cc>
   18028:	mov	r1, r7
   1802c:	ldr	r0, [r5, #64]	; 0x40
   18030:	bl	1e32c <g_strcmp0@plt+0x76f4>
   18034:	mov	r1, r7
   18038:	ldr	r0, [r5, #64]	; 0x40
   1803c:	bl	1e3a4 <g_strcmp0@plt+0x776c>
   18040:	bl	15ff0 <pk_control_new@plt>
   18044:	mov	r3, r4
   18048:	ldr	r2, [pc, #2624]	; 18a90 <g_strcmp0@plt+0x1e58>
   1804c:	ldr	r1, [pc, #2624]	; 18a94 <g_strcmp0@plt+0x1e5c>
   18050:	str	r4, [sp, #4]
   18054:	str	r4, [sp]
   18058:	str	r0, [r5, #68]	; 0x44
   1805c:	bl	16314 <g_signal_connect_data@plt>
   18060:	mov	r3, r4
   18064:	ldr	r2, [pc, #2604]	; 18a98 <g_strcmp0@plt+0x1e60>
   18068:	ldr	r1, [pc, #2604]	; 18a9c <g_strcmp0@plt+0x1e64>
   1806c:	str	r4, [sp, #4]
   18070:	str	r4, [sp]
   18074:	ldr	r0, [r5, #68]	; 0x44
   18078:	bl	16314 <g_signal_connect_data@plt>
   1807c:	mov	r3, r4
   18080:	ldr	r2, [pc, #2584]	; 18aa0 <g_strcmp0@plt+0x1e68>
   18084:	ldr	r1, [pc, #2584]	; 18aa4 <g_strcmp0@plt+0x1e6c>
   18088:	str	r4, [sp, #4]
   1808c:	str	r4, [sp]
   18090:	ldr	r0, [r5, #68]	; 0x44
   18094:	bl	16314 <g_signal_connect_data@plt>
   18098:	bl	24328 <g_strcmp0@plt+0xd6f0>
   1809c:	mov	r6, r0
   180a0:	bl	161f4 <pk_task_get_type@plt>
   180a4:	mov	r1, r0
   180a8:	mov	r0, r6
   180ac:	bl	15d68 <g_type_check_instance_cast@plt>
   180b0:	mov	r3, r4
   180b4:	ldr	r2, [pc, #2540]	; 18aa8 <g_strcmp0@plt+0x1e70>
   180b8:	ldr	r1, [pc, #2540]	; 18aac <g_strcmp0@plt+0x1e74>
   180bc:	str	r4, [sp, #4]
   180c0:	str	r4, [sp]
   180c4:	str	r0, [r5, #36]	; 0x24
   180c8:	bl	16314 <g_signal_connect_data@plt>
   180cc:	mov	r3, r4
   180d0:	mov	r2, r4
   180d4:	ldr	r0, [r5, #36]	; 0x24
   180d8:	ldr	r1, [pc, #2512]	; 18ab0 <g_strcmp0@plt+0x1e78>
   180dc:	bl	16578 <g_object_set@plt>
   180e0:	mov	r3, r4
   180e4:	mov	r1, r4
   180e8:	ldr	r2, [pc, #2500]	; 18ab4 <g_strcmp0@plt+0x1e7c>
   180ec:	ldr	r0, [r5, #68]	; 0x44
   180f0:	bl	15b1c <pk_control_get_properties_async@plt>
   180f4:	bl	167c4 <gtk_builder_new@plt>
   180f8:	add	r2, sp, #68	; 0x44
   180fc:	ldr	r1, [pc, #2484]	; 18ab8 <g_strcmp0@plt+0x1e80>
   18100:	str	r0, [r5]
   18104:	bl	16b90 <gtk_builder_add_from_file@plt>
   18108:	cmp	r0, r4
   1810c:	beq	18c40 <g_strcmp0@plt+0x2008>
   18110:	ldr	r1, [pc, #2468]	; 18abc <g_strcmp0@plt+0x1e84>
   18114:	ldr	r0, [r5]
   18118:	bl	16068 <gtk_builder_get_object@plt>
   1811c:	mov	r8, r0
   18120:	bl	15d14 <gtk_widget_get_type@plt>
   18124:	mov	r6, r0
   18128:	mov	r1, r0
   1812c:	mov	r0, r8
   18130:	bl	15d68 <g_type_check_instance_cast@plt>
   18134:	mov	r8, r0
   18138:	bl	16bfc <gtk_window_get_type@plt>
   1813c:	mov	r9, r0
   18140:	mov	r1, r0
   18144:	mov	r0, r8
   18148:	bl	15d68 <g_type_check_instance_cast@plt>
   1814c:	ldr	r1, [pc, #2412]	; 18ac0 <g_strcmp0@plt+0x1e88>
   18150:	bl	15ef4 <gtk_window_set_icon_name@plt>
   18154:	mov	r1, r9
   18158:	mov	r0, r8
   1815c:	str	r9, [sp, #56]	; 0x38
   18160:	str	r8, [sp, #48]	; 0x30
   18164:	ldr	r8, [r5, #8]
   18168:	bl	15d68 <g_type_check_instance_cast@plt>
   1816c:	mov	r1, r0
   18170:	mov	r0, r8
   18174:	bl	15ee8 <gtk_application_add_window@plt>
   18178:	mov	ip, #68	; 0x44
   1817c:	mov	r1, #28
   18180:	mov	r0, #20
   18184:	mov	r3, #24
   18188:	mov	r2, #64	; 0x40
   1818c:	str	ip, [sp, #36]	; 0x24
   18190:	str	ip, [sp, #32]
   18194:	str	r3, [sp, #40]	; 0x28
   18198:	str	r0, [sp, #44]	; 0x2c
   1819c:	str	r0, [sp, #8]
   181a0:	str	r0, [sp, #4]
   181a4:	str	r0, [sp]
   181a8:	str	r1, [sp, #28]
   181ac:	str	r1, [sp, #24]
   181b0:	str	r1, [sp, #20]
   181b4:	str	r1, [sp, #16]
   181b8:	str	r1, [sp, #12]
   181bc:	mov	r0, #15
   181c0:	mov	r1, r2
   181c4:	bl	15b88 <gtk_tree_store_new@plt>
   181c8:	str	r0, [r5, #16]
   181cc:	mov	r0, r4
   181d0:	bl	16914 <gtk_text_buffer_new@plt>
   181d4:	ldr	r3, [pc, #2280]	; 18ac4 <g_strcmp0@plt+0x1e8c>
   181d8:	ldr	r2, [pc, #2280]	; 18ac8 <g_strcmp0@plt+0x1e90>
   181dc:	str	r3, [sp]
   181e0:	mov	r3, #2
   181e4:	str	r3, [sp, #4]
   181e8:	ldr	r1, [pc, #2268]	; 18acc <g_strcmp0@plt+0x1e94>
   181ec:	mov	r3, #5
   181f0:	str	r4, [sp, #8]
   181f4:	str	r0, [r5, #52]	; 0x34
   181f8:	bl	16524 <gtk_text_buffer_create_tag@plt>
   181fc:	mov	r3, #700	; 0x2bc
   18200:	ldr	r2, [pc, #2248]	; 18ad0 <g_strcmp0@plt+0x1e98>
   18204:	ldr	r1, [pc, #2248]	; 18ad4 <g_strcmp0@plt+0x1e9c>
   18208:	str	r4, [sp]
   1820c:	ldr	r0, [r5, #52]	; 0x34
   18210:	bl	16524 <gtk_text_buffer_create_tag@plt>
   18214:	ldr	r1, [pc, #2236]	; 18ad8 <g_strcmp0@plt+0x1ea0>
   18218:	ldr	r0, [r5]
   1821c:	bl	16068 <gtk_builder_get_object@plt>
   18220:	mov	r1, r6
   18224:	bl	15d68 <g_type_check_instance_cast@plt>
   18228:	bl	15dbc <gtk_widget_hide@plt>
   1822c:	ldr	r1, [pc, #2216]	; 18adc <g_strcmp0@plt+0x1ea4>
   18230:	ldr	r0, [r5]
   18234:	bl	16068 <gtk_builder_get_object@plt>
   18238:	mov	r1, r6
   1823c:	bl	15d68 <g_type_check_instance_cast@plt>
   18240:	mov	r8, r0
   18244:	bl	15d80 <gtk_text_view_get_type@plt>
   18248:	mov	r9, r0
   1824c:	mov	r1, r0
   18250:	mov	r0, r8
   18254:	bl	15d68 <g_type_check_instance_cast@plt>
   18258:	ldr	r1, [r5, #52]	; 0x34
   1825c:	bl	16260 <gtk_text_view_set_buffer@plt>
   18260:	mov	r1, r9
   18264:	mov	r0, r8
   18268:	bl	15d68 <g_type_check_instance_cast@plt>
   1826c:	mov	r1, r4
   18270:	bl	16650 <gtk_text_view_set_editable@plt>
   18274:	mov	r1, r9
   18278:	mov	r0, r8
   1827c:	bl	15d68 <g_type_check_instance_cast@plt>
   18280:	mov	r1, #5
   18284:	bl	164dc <gtk_text_view_set_left_margin@plt>
   18288:	mov	r1, r9
   1828c:	mov	r0, r8
   18290:	bl	15d68 <g_type_check_instance_cast@plt>
   18294:	mov	r3, r4
   18298:	ldr	r2, [pc, #2112]	; 18ae0 <g_strcmp0@plt+0x1ea8>
   1829c:	ldr	r1, [pc, #2112]	; 18ae4 <g_strcmp0@plt+0x1eac>
   182a0:	str	r4, [sp, #4]
   182a4:	str	r4, [sp]
   182a8:	bl	16314 <g_signal_connect_data@plt>
   182ac:	mov	r1, r9
   182b0:	mov	r0, r8
   182b4:	bl	15d68 <g_type_check_instance_cast@plt>
   182b8:	mov	r3, r4
   182bc:	ldr	r2, [pc, #2084]	; 18ae8 <g_strcmp0@plt+0x1eb0>
   182c0:	ldr	r1, [pc, #2084]	; 18aec <g_strcmp0@plt+0x1eb4>
   182c4:	str	r4, [sp, #4]
   182c8:	str	r4, [sp]
   182cc:	bl	16314 <g_signal_connect_data@plt>
   182d0:	mov	r1, r9
   182d4:	mov	r0, r8
   182d8:	bl	15d68 <g_type_check_instance_cast@plt>
   182dc:	mov	r3, r4
   182e0:	ldr	r2, [pc, #2056]	; 18af0 <g_strcmp0@plt+0x1eb8>
   182e4:	ldr	r1, [pc, #2056]	; 18af4 <g_strcmp0@plt+0x1ebc>
   182e8:	str	r4, [sp, #4]
   182ec:	str	r4, [sp]
   182f0:	bl	16314 <g_signal_connect_data@plt>
   182f4:	mov	r1, r9
   182f8:	mov	r0, r8
   182fc:	bl	15d68 <g_type_check_instance_cast@plt>
   18300:	mov	r3, r4
   18304:	ldr	r2, [pc, #2028]	; 18af8 <g_strcmp0@plt+0x1ec0>
   18308:	ldr	r1, [pc, #2028]	; 18afc <g_strcmp0@plt+0x1ec4>
   1830c:	str	r4, [sp, #4]
   18310:	str	r4, [sp]
   18314:	bl	16314 <g_signal_connect_data@plt>
   18318:	ldr	r1, [pc, #2016]	; 18b00 <g_strcmp0@plt+0x1ec8>
   1831c:	ldr	r0, [r5]
   18320:	bl	16068 <gtk_builder_get_object@plt>
   18324:	mov	r1, r6
   18328:	bl	15d68 <g_type_check_instance_cast@plt>
   1832c:	mov	r8, r0
   18330:	bl	164c4 <gtk_tree_view_get_type@plt>
   18334:	mov	fp, r0
   18338:	mov	r1, r0
   1833c:	mov	r0, r8
   18340:	bl	15d68 <g_type_check_instance_cast@plt>
   18344:	mov	r1, r4
   18348:	bl	16920 <gtk_tree_view_set_search_column@plt>
   1834c:	mov	r1, fp
   18350:	mov	r0, r8
   18354:	bl	15d68 <g_type_check_instance_cast@plt>
   18358:	mov	r3, r4
   1835c:	mov	r2, r4
   18360:	ldr	r1, [pc, #1948]	; 18b04 <g_strcmp0@plt+0x1ecc>
   18364:	bl	16140 <gtk_tree_view_set_search_equal_func@plt>
   18368:	mov	r1, fp
   1836c:	mov	r0, r8
   18370:	bl	15d68 <g_type_check_instance_cast@plt>
   18374:	mov	r1, #3
   18378:	bl	161d0 <gtk_tree_view_set_level_indentation@plt>
   1837c:	mov	r1, fp
   18380:	mov	r0, r8
   18384:	bl	15d68 <g_type_check_instance_cast@plt>
   18388:	mov	r1, r4
   1838c:	bl	16aa0 <gtk_tree_view_set_headers_visible@plt>
   18390:	mov	r1, fp
   18394:	mov	r0, r8
   18398:	bl	15d68 <g_type_check_instance_cast@plt>
   1839c:	mov	r1, r4
   183a0:	bl	16194 <gtk_tree_view_set_show_expanders@plt>
   183a4:	mov	r1, fp
   183a8:	mov	r0, r8
   183ac:	bl	15d68 <g_type_check_instance_cast@plt>
   183b0:	ldr	sl, [r5, #16]
   183b4:	mov	r9, r0
   183b8:	bl	16620 <gtk_tree_model_get_type@plt>
   183bc:	mov	r1, r0
   183c0:	mov	r0, sl
   183c4:	bl	15d68 <g_type_check_instance_cast@plt>
   183c8:	mov	r1, r0
   183cc:	mov	r0, r9
   183d0:	bl	15d38 <gtk_tree_view_set_model@plt>
   183d4:	mov	r1, fp
   183d8:	mov	r0, r8
   183dc:	str	fp, [sp, #60]	; 0x3c
   183e0:	bl	15d68 <g_type_check_instance_cast@plt>
   183e4:	mov	sl, r0
   183e8:	bl	162a8 <gtk_tree_view_column_new@plt>
   183ec:	mov	r9, r0
   183f0:	bl	16224 <gtk_tree_view_column_get_type@plt>
   183f4:	mov	r1, r0
   183f8:	str	r0, [sp, #52]	; 0x34
   183fc:	mov	r0, r9
   18400:	bl	15d68 <g_type_check_instance_cast@plt>
   18404:	mov	r1, r7
   18408:	bl	16554 <gtk_tree_view_column_set_expand@plt>
   1840c:	mov	r1, #2
   18410:	mov	r0, r9
   18414:	bl	15f9c <gtk_tree_view_column_set_sort_column_id@plt>
   18418:	bl	169d4 <gtk_cell_renderer_toggle_new@plt>
   1841c:	mov	r3, r4
   18420:	ldr	r2, [pc, #1760]	; 18b08 <g_strcmp0@plt+0x1ed0>
   18424:	ldr	r1, [pc, #1760]	; 18b0c <g_strcmp0@plt+0x1ed4>
   18428:	str	r4, [sp, #4]
   1842c:	str	r4, [sp]
   18430:	mov	fp, r0
   18434:	bl	16314 <g_signal_connect_data@plt>
   18438:	mov	r1, fp
   1843c:	mov	r0, r9
   18440:	mov	r2, r4
   18444:	bl	15c48 <gtk_tree_view_column_pack_start@plt>
   18448:	mov	r1, fp
   1844c:	mov	r0, r9
   18450:	mov	r3, #3
   18454:	ldr	r2, [pc, #1716]	; 18b10 <g_strcmp0@plt+0x1ed8>
   18458:	bl	169b0 <gtk_tree_view_column_add_attribute@plt>
   1845c:	mov	r1, fp
   18460:	mov	r0, r9
   18464:	mov	r3, #5
   18468:	ldr	r2, [pc, #1700]	; 18b14 <g_strcmp0@plt+0x1edc>
   1846c:	bl	169b0 <gtk_tree_view_column_add_attribute@plt>
   18470:	mov	r1, fp
   18474:	mov	r0, r9
   18478:	mov	r3, #4
   1847c:	ldr	r2, [pc, #1684]	; 18b18 <g_strcmp0@plt+0x1ee0>
   18480:	bl	169b0 <gtk_tree_view_column_add_attribute@plt>
   18484:	mov	r1, fp
   18488:	mov	r0, r9
   1848c:	mov	r3, #14
   18490:	ldr	r2, [pc, #1668]	; 18b1c <g_strcmp0@plt+0x1ee4>
   18494:	bl	169b0 <gtk_tree_view_column_add_attribute@plt>
   18498:	bl	161e8 <gtk_cell_renderer_text_new@plt>
   1849c:	ldr	r2, [pc, #1660]	; 18b20 <g_strcmp0@plt+0x1ee8>
   184a0:	mov	r3, #3
   184a4:	ldr	r1, [pc, #1560]	; 18ac4 <g_strcmp0@plt+0x1e8c>
   184a8:	stmib	sp, {r2, r3, r4}
   184ac:	mov	r2, r4
   184b0:	str	r3, [sp]
   184b4:	ldr	r3, [pc, #1640]	; 18b24 <g_strcmp0@plt+0x1eec>
   184b8:	mov	fp, r0
   184bc:	bl	16578 <g_object_set@plt>
   184c0:	mov	r2, r7
   184c4:	mov	r1, fp
   184c8:	mov	r0, r9
   184cc:	bl	15c48 <gtk_tree_view_column_pack_start@plt>
   184d0:	mov	r3, r4
   184d4:	mov	r1, fp
   184d8:	mov	r0, r9
   184dc:	ldr	r2, [pc, #1604]	; 18b28 <g_strcmp0@plt+0x1ef0>
   184e0:	bl	169b0 <gtk_tree_view_column_add_attribute@plt>
   184e4:	mov	r1, r9
   184e8:	mov	r0, sl
   184ec:	bl	15af8 <gtk_tree_view_append_column@plt>
   184f0:	mov	r3, fp
   184f4:	ldr	r2, [pc, #1584]	; 18b2c <g_strcmp0@plt+0x1ef4>
   184f8:	ldr	r1, [pc, #1584]	; 18b30 <g_strcmp0@plt+0x1ef8>
   184fc:	str	r4, [sp, #4]
   18500:	str	r4, [sp]
   18504:	mov	r0, sl
   18508:	bl	16314 <g_signal_connect_data@plt>
   1850c:	bl	162a8 <gtk_tree_view_column_new@plt>
   18510:	mov	r2, #5
   18514:	ldr	r1, [pc, #1560]	; 18b34 <g_strcmp0@plt+0x1efc>
   18518:	mov	r9, r0
   1851c:	mov	r0, r4
   18520:	bl	16530 <dcgettext@plt>
   18524:	mov	r1, r0
   18528:	mov	r0, r9
   1852c:	bl	162f0 <gtk_tree_view_column_set_title@plt>
   18530:	ldr	r1, [sp, #52]	; 0x34
   18534:	mov	r0, r9
   18538:	bl	15d68 <g_type_check_instance_cast@plt>
   1853c:	mov	r1, r4
   18540:	bl	16554 <gtk_tree_view_column_set_expand@plt>
   18544:	mov	r0, r9
   18548:	mov	r1, #10
   1854c:	bl	15f9c <gtk_tree_view_column_set_sort_column_id@plt>
   18550:	bl	1d200 <g_strcmp0@plt+0x65c8>
   18554:	ldr	r3, [pc, #1500]	; 18b38 <g_strcmp0@plt+0x1f00>
   18558:	mov	r2, #4
   1855c:	ldr	r1, [pc, #1496]	; 18b3c <g_strcmp0@plt+0x1f04>
   18560:	stm	sp, {r3, r4}
   18564:	ldr	r3, [pc, #1492]	; 18b40 <g_strcmp0@plt+0x1f08>
   18568:	mov	fp, r0
   1856c:	bl	16578 <g_object_set@plt>
   18570:	mov	r2, r7
   18574:	mov	r1, fp
   18578:	mov	r0, r9
   1857c:	bl	15c48 <gtk_tree_view_column_pack_start@plt>
   18580:	mov	r1, fp
   18584:	mov	r0, r9
   18588:	mov	r3, #10
   1858c:	ldr	r2, [pc, #1456]	; 18b44 <g_strcmp0@plt+0x1f0c>
   18590:	bl	169b0 <gtk_tree_view_column_add_attribute@plt>
   18594:	bl	163ec <gtk_cell_renderer_spinner_new@plt>
   18598:	mov	r3, r4
   1859c:	mov	r2, #4
   185a0:	ldr	r1, [pc, #1440]	; 18b48 <g_strcmp0@plt+0x1f10>
   185a4:	mov	fp, r0
   185a8:	bl	16578 <g_object_set@plt>
   185ac:	mov	r2, r7
   185b0:	mov	r1, fp
   185b4:	mov	r0, r9
   185b8:	bl	15c48 <gtk_tree_view_column_pack_start@plt>
   185bc:	mov	r3, #13
   185c0:	ldr	r2, [pc, #1412]	; 18b4c <g_strcmp0@plt+0x1f14>
   185c4:	mov	r1, fp
   185c8:	mov	r0, r9
   185cc:	bl	169b0 <gtk_tree_view_column_add_attribute@plt>
   185d0:	ldr	fp, [sp, #52]	; 0x34
   185d4:	mov	r0, r9
   185d8:	mov	r1, fp
   185dc:	bl	15d68 <g_type_check_instance_cast@plt>
   185e0:	mov	r1, r4
   185e4:	bl	16554 <gtk_tree_view_column_set_expand@plt>
   185e8:	mov	r1, r9
   185ec:	mov	r0, sl
   185f0:	bl	15af8 <gtk_tree_view_append_column@plt>
   185f4:	mov	r0, r9
   185f8:	mov	r1, #80	; 0x50
   185fc:	bl	15d68 <g_type_check_instance_cast@plt>
   18600:	mov	r2, #10
   18604:	ldr	r1, [pc, #1348]	; 18b50 <g_strcmp0@plt+0x1f18>
   18608:	bl	16824 <g_object_set_data@plt>
   1860c:	mov	r3, r4
   18610:	ldr	r2, [pc, #1340]	; 18b54 <g_strcmp0@plt+0x1f1c>
   18614:	ldr	r1, [pc, #1340]	; 18b58 <g_strcmp0@plt+0x1f20>
   18618:	str	r4, [sp, #4]
   1861c:	str	r4, [sp]
   18620:	mov	r0, sl
   18624:	bl	16314 <g_signal_connect_data@plt>
   18628:	mov	r3, r4
   1862c:	mov	r2, r7
   18630:	ldr	r1, [pc, #1316]	; 18b5c <g_strcmp0@plt+0x1f24>
   18634:	mov	r0, sl
   18638:	bl	16578 <g_object_set@plt>
   1863c:	bl	162a8 <gtk_tree_view_column_new@plt>
   18640:	mov	r1, fp
   18644:	mov	r7, r0
   18648:	bl	15d68 <g_type_check_instance_cast@plt>
   1864c:	mov	r1, r4
   18650:	bl	16554 <gtk_tree_view_column_set_expand@plt>
   18654:	mov	r0, r7
   18658:	mov	r1, #8
   1865c:	bl	15f9c <gtk_tree_view_column_set_sort_column_id@plt>
   18660:	bl	1cd88 <g_strcmp0@plt+0x6150>
   18664:	mov	r1, r6
   18668:	mov	r9, r0
   1866c:	mov	r0, sl
   18670:	bl	15d68 <g_type_check_instance_cast@plt>
   18674:	bl	15f60 <gtk_widget_get_style_context@plt>
   18678:	add	r2, sp, #72	; 0x48
   1867c:	mov	r1, #8
   18680:	bl	1674c <gtk_style_context_get_color@plt>
   18684:	vldr	d7, [pc, #1012]	; 18a80 <g_strcmp0@plt+0x1e48>
   18688:	ldr	r3, [pc, #1232]	; 18b60 <g_strcmp0@plt+0x1f28>
   1868c:	add	r2, sp, #72	; 0x48
   18690:	mov	r0, r9
   18694:	vstr	d7, [sp]
   18698:	str	r2, [sp, #12]
   1869c:	str	r3, [sp, #8]
   186a0:	mov	r2, #2
   186a4:	ldr	r3, [pc, #1208]	; 18b64 <g_strcmp0@plt+0x1f2c>
   186a8:	ldr	r1, [pc, #1208]	; 18b68 <g_strcmp0@plt+0x1f30>
   186ac:	str	r4, [sp, #16]
   186b0:	bl	16578 <g_object_set@plt>
   186b4:	mov	r3, r4
   186b8:	mov	r0, r9
   186bc:	mov	r2, #8
   186c0:	ldr	r1, [pc, #1148]	; 18b44 <g_strcmp0@plt+0x1f0c>
   186c4:	bl	16578 <g_object_set@plt>
   186c8:	mov	r1, r9
   186cc:	mov	r0, r7
   186d0:	mov	r2, r4
   186d4:	bl	15c48 <gtk_tree_view_column_pack_start@plt>
   186d8:	mov	r3, #8
   186dc:	ldr	r2, [pc, #1120]	; 18b44 <g_strcmp0@plt+0x1f0c>
   186e0:	mov	r1, r9
   186e4:	mov	r0, r7
   186e8:	bl	169b0 <gtk_tree_view_column_add_attribute@plt>
   186ec:	mov	r1, r7
   186f0:	mov	r0, sl
   186f4:	bl	15af8 <gtk_tree_view_append_column@plt>
   186f8:	bl	1d51c <g_strcmp0@plt+0x68e4>
   186fc:	mov	r3, r4
   18700:	mov	r2, #4
   18704:	ldr	r1, [pc, #1072]	; 18b3c <g_strcmp0@plt+0x1f04>
   18708:	mov	r7, r0
   1870c:	bl	16578 <g_object_set@plt>
   18710:	mov	r3, #6
   18714:	ldr	r2, [pc, #1064]	; 18b44 <g_strcmp0@plt+0x1f0c>
   18718:	mov	r1, r7
   1871c:	str	r4, [sp]
   18720:	ldr	r0, [pc, #1092]	; 18b6c <g_strcmp0@plt+0x1f34>
   18724:	bl	15d74 <gtk_tree_view_column_new_with_attributes@plt>
   18728:	mov	r1, fp
   1872c:	mov	r7, r0
   18730:	bl	15d68 <g_type_check_instance_cast@plt>
   18734:	mov	r1, r4
   18738:	bl	16554 <gtk_tree_view_column_set_expand@plt>
   1873c:	mov	r1, r7
   18740:	mov	r0, sl
   18744:	bl	15af8 <gtk_tree_view_append_column@plt>
   18748:	mov	r0, r7
   1874c:	mov	r1, #80	; 0x50
   18750:	bl	15d68 <g_type_check_instance_cast@plt>
   18754:	mov	r2, #6
   18758:	ldr	r1, [pc, #1008]	; 18b50 <g_strcmp0@plt+0x1f18>
   1875c:	bl	16824 <g_object_set_data@plt>
   18760:	mov	r0, r7
   18764:	mov	r1, #80	; 0x50
   18768:	bl	15d68 <g_type_check_instance_cast@plt>
   1876c:	mov	r2, #8
   18770:	ldr	r1, [pc, #984]	; 18b50 <g_strcmp0@plt+0x1f18>
   18774:	bl	16824 <g_object_set_data@plt>
   18778:	mov	r0, r8
   1877c:	mov	r3, r4
   18780:	ldr	r2, [pc, #1000]	; 18b70 <g_strcmp0@plt+0x1f38>
   18784:	ldr	r1, [pc, #1000]	; 18b74 <g_strcmp0@plt+0x1f3c>
   18788:	str	r4, [sp, #4]
   1878c:	str	r4, [sp]
   18790:	bl	16314 <g_signal_connect_data@plt>
   18794:	mov	r3, r4
   18798:	ldr	r2, [pc, #984]	; 18b78 <g_strcmp0@plt+0x1f40>
   1879c:	mov	r0, r8
   187a0:	ldr	r1, [pc, #980]	; 18b7c <g_strcmp0@plt+0x1f44>
   187a4:	str	r4, [sp, #4]
   187a8:	str	r4, [sp]
   187ac:	bl	16314 <g_signal_connect_data@plt>
   187b0:	ldr	r1, [sp, #60]	; 0x3c
   187b4:	mov	r0, r8
   187b8:	bl	15d68 <g_type_check_instance_cast@plt>
   187bc:	bl	16614 <gtk_tree_view_get_selection@plt>
   187c0:	mov	r1, #2
   187c4:	mov	r7, r0
   187c8:	bl	15f18 <gtk_tree_selection_set_mode@plt>
   187cc:	mov	r3, r4
   187d0:	ldr	r2, [pc, #936]	; 18b80 <g_strcmp0@plt+0x1f48>
   187d4:	mov	r0, r7
   187d8:	ldr	r1, [pc, #932]	; 18b84 <g_strcmp0@plt+0x1f4c>
   187dc:	str	r4, [sp, #4]
   187e0:	str	r4, [sp]
   187e4:	bl	16314 <g_signal_connect_data@plt>
   187e8:	ldr	r1, [pc, #920]	; 18b88 <g_strcmp0@plt+0x1f50>
   187ec:	ldr	r0, [r5]
   187f0:	bl	16068 <gtk_builder_get_object@plt>
   187f4:	mov	r1, r6
   187f8:	bl	15d68 <g_type_check_instance_cast@plt>
   187fc:	bl	15dbc <gtk_widget_hide@plt>
   18800:	ldr	r1, [pc, #900]	; 18b8c <g_strcmp0@plt+0x1f54>
   18804:	ldr	r0, [r5]
   18808:	bl	16068 <gtk_builder_get_object@plt>
   1880c:	mov	r1, r6
   18810:	bl	15d68 <g_type_check_instance_cast@plt>
   18814:	bl	15dbc <gtk_widget_hide@plt>
   18818:	ldr	r1, [pc, #880]	; 18b90 <g_strcmp0@plt+0x1f58>
   1881c:	ldr	r0, [r5]
   18820:	bl	16068 <gtk_builder_get_object@plt>
   18824:	mov	r1, r6
   18828:	bl	15d68 <g_type_check_instance_cast@plt>
   1882c:	mov	r1, r4
   18830:	mov	r7, r0
   18834:	bl	16c08 <gtk_widget_set_sensitive@plt>
   18838:	mov	r3, r4
   1883c:	ldr	r2, [pc, #848]	; 18b94 <g_strcmp0@plt+0x1f5c>
   18840:	mov	r0, r7
   18844:	ldr	r1, [pc, #844]	; 18b98 <g_strcmp0@plt+0x1f60>
   18848:	str	r4, [sp, #4]
   1884c:	str	r4, [sp]
   18850:	bl	16314 <g_signal_connect_data@plt>
   18854:	ldr	r1, [pc, #832]	; 18b9c <g_strcmp0@plt+0x1f64>
   18858:	ldr	r0, [r5]
   1885c:	bl	16068 <gtk_builder_get_object@plt>
   18860:	mov	r1, r6
   18864:	bl	15d68 <g_type_check_instance_cast@plt>
   18868:	mov	r1, r4
   1886c:	bl	16c08 <gtk_widget_set_sensitive@plt>
   18870:	ldr	r1, [pc, #808]	; 18ba0 <g_strcmp0@plt+0x1f68>
   18874:	ldr	r0, [r5]
   18878:	bl	16068 <gtk_builder_get_object@plt>
   1887c:	mov	r1, r6
   18880:	bl	15d68 <g_type_check_instance_cast@plt>
   18884:	mov	r1, r4
   18888:	bl	16c08 <gtk_widget_set_sensitive@plt>
   1888c:	ldr	r1, [pc, #784]	; 18ba4 <g_strcmp0@plt+0x1f6c>
   18890:	ldr	r0, [r5]
   18894:	bl	16068 <gtk_builder_get_object@plt>
   18898:	mov	r1, r6
   1889c:	bl	15d68 <g_type_check_instance_cast@plt>
   188a0:	mov	r3, r4
   188a4:	ldr	r2, [pc, #764]	; 18ba8 <g_strcmp0@plt+0x1f70>
   188a8:	ldr	r1, [pc, #744]	; 18b98 <g_strcmp0@plt+0x1f60>
   188ac:	str	r4, [sp, #4]
   188b0:	str	r4, [sp]
   188b4:	mov	r7, r0
   188b8:	bl	16314 <g_signal_connect_data@plt>
   188bc:	ldr	r9, [sp, #56]	; 0x38
   188c0:	ldr	r8, [sp, #48]	; 0x30
   188c4:	mov	r1, r9
   188c8:	mov	r0, r8
   188cc:	bl	15d68 <g_type_check_instance_cast@plt>
   188d0:	mov	r1, r7
   188d4:	bl	16bc0 <gtk_window_set_focus@plt>
   188d8:	ldr	r1, [pc, #716]	; 18bac <g_strcmp0@plt+0x1f74>
   188dc:	ldr	r0, [r5]
   188e0:	bl	16068 <gtk_builder_get_object@plt>
   188e4:	mov	r1, r6
   188e8:	bl	15d68 <g_type_check_instance_cast@plt>
   188ec:	mov	r3, r4
   188f0:	ldr	r2, [pc, #696]	; 18bb0 <g_strcmp0@plt+0x1f78>
   188f4:	ldr	r1, [pc, #668]	; 18b98 <g_strcmp0@plt+0x1f60>
   188f8:	str	r4, [sp, #4]
   188fc:	str	r4, [sp]
   18900:	bl	16314 <g_signal_connect_data@plt>
   18904:	mov	r1, r9
   18908:	mov	r0, r8
   1890c:	bl	15d68 <g_type_check_instance_cast@plt>
   18910:	mov	r2, #1200	; 0x4b0
   18914:	mov	r1, #700	; 0x2bc
   18918:	bl	220dc <g_strcmp0@plt+0xb4a4>
   1891c:	cmp	r0, #0
   18920:	beq	18c14 <g_strcmp0@plt+0x1fdc>
   18924:	ldr	r1, [pc, #648]	; 18bb4 <g_strcmp0@plt+0x1f7c>
   18928:	ldr	r0, [r5]
   1892c:	bl	16068 <gtk_builder_get_object@plt>
   18930:	mov	r1, r6
   18934:	bl	15d68 <g_type_check_instance_cast@plt>
   18938:	mov	r2, #32
   1893c:	mvn	r1, #0
   18940:	bl	1623c <gtk_widget_set_size_request@plt>
   18944:	ldr	r1, [pc, #620]	; 18bb8 <g_strcmp0@plt+0x1f80>
   18948:	ldr	r0, [r5]
   1894c:	bl	16068 <gtk_builder_get_object@plt>
   18950:	mov	r1, r6
   18954:	bl	15d68 <g_type_check_instance_cast@plt>
   18958:	mov	r2, #32
   1895c:	mvn	r1, #0
   18960:	bl	1623c <gtk_widget_set_size_request@plt>
   18964:	bl	15c30 <gtk_info_bar_new@plt>
   18968:	mov	r1, #1
   1896c:	mov	r7, #3
   18970:	str	r0, [r5, #72]	; 0x48
   18974:	bl	1635c <gtk_widget_set_no_show_all@plt>
   18978:	bl	15c30 <gtk_info_bar_new@plt>
   1897c:	mov	r1, #1
   18980:	str	r0, [r5, #32]
   18984:	bl	1635c <gtk_widget_set_no_show_all@plt>
   18988:	ldr	r0, [pc, #476]	; 18b6c <g_strcmp0@plt+0x1f34>
   1898c:	bl	161b8 <gtk_label_new@plt>
   18990:	ldr	r4, [r5, #72]	; 0x48
   18994:	str	r0, [r5, #76]	; 0x4c
   18998:	bl	16020 <gtk_info_bar_get_type@plt>
   1899c:	mov	r1, r0
   189a0:	mov	r9, r0
   189a4:	mov	r0, r4
   189a8:	bl	15d68 <g_type_check_instance_cast@plt>
   189ac:	bl	15d5c <gtk_info_bar_get_content_area@plt>
   189b0:	mov	r4, r0
   189b4:	bl	1605c <gtk_container_get_type@plt>
   189b8:	mov	r1, r0
   189bc:	mov	r8, r0
   189c0:	mov	r0, r4
   189c4:	bl	15d68 <g_type_check_instance_cast@plt>
   189c8:	ldr	r1, [r5, #76]	; 0x4c
   189cc:	bl	16248 <gtk_container_add@plt>
   189d0:	ldr	r0, [r5, #76]	; 0x4c
   189d4:	bl	1686c <gtk_widget_show@plt>
   189d8:	mov	r2, #5
   189dc:	ldr	r1, [pc, #472]	; 18bbc <g_strcmp0@plt+0x1f84>
   189e0:	mov	r0, #0
   189e4:	bl	16530 <dcgettext@plt>
   189e8:	bl	161b8 <gtk_label_new@plt>
   189ec:	mov	r1, r9
   189f0:	mov	r4, r0
   189f4:	ldr	r0, [r5, #32]
   189f8:	bl	15d68 <g_type_check_instance_cast@plt>
   189fc:	bl	15d5c <gtk_info_bar_get_content_area@plt>
   18a00:	mov	r1, r8
   18a04:	bl	15d68 <g_type_check_instance_cast@plt>
   18a08:	mov	r1, r4
   18a0c:	bl	16248 <gtk_container_add@plt>
   18a10:	mov	r0, r4
   18a14:	bl	1686c <gtk_widget_show@plt>
   18a18:	ldr	r1, [pc, #416]	; 18bc0 <g_strcmp0@plt+0x1f88>
   18a1c:	ldr	r0, [r5]
   18a20:	bl	16068 <gtk_builder_get_object@plt>
   18a24:	mov	r1, r6
   18a28:	bl	15d68 <g_type_check_instance_cast@plt>
   18a2c:	mov	r4, r0
   18a30:	bl	162fc <gtk_box_get_type@plt>
   18a34:	mov	r6, r0
   18a38:	mov	r1, r0
   18a3c:	mov	r0, r4
   18a40:	bl	15d68 <g_type_check_instance_cast@plt>
   18a44:	mov	r3, #0
   18a48:	mov	r2, r3
   18a4c:	ldr	r1, [r5, #72]	; 0x48
   18a50:	str	r7, [sp]
   18a54:	bl	163b0 <gtk_box_pack_start@plt>
   18a58:	mov	r1, r6
   18a5c:	mov	r0, r4
   18a60:	bl	15d68 <g_type_check_instance_cast@plt>
   18a64:	mov	r2, #1
   18a68:	ldr	r1, [r5, #72]	; 0x48
   18a6c:	bl	16218 <gtk_box_reorder_child@plt>
   18a70:	mov	r1, r6
   18a74:	mov	r0, r4
   18a78:	b	18bd8 <g_strcmp0@plt+0x1fa0>
   18a7c:	nop			; (mov r0, r0)
   18a80:	andeq	r0, r0, r0
   18a84:	svccc	0x00f00000	; IMB
   18a88:	andeq	sp, r3, r0, lsl r6
   18a8c:	andeq	r6, r2, r8, asr #8
   18a90:	andeq	r7, r1, ip, asr #31
   18a94:	andeq	r6, r2, ip, asr r4
   18a98:	strdeq	ip, [r1], -r0
   18a9c:	andeq	r6, r2, r0, ror r4
   18aa0:	andeq	ip, r1, r8
   18aa4:	andeq	r6, r2, r0, lsl #9
   18aa8:	andeq	r8, r1, r0, ror #29
   18aac:	muleq	r2, r8, r4
   18ab0:	andeq	r6, r2, r8, lsr #9
   18ab4:	strdeq	ip, [r1], -r8
   18ab8:			; <UNDEFINED> instruction: 0x000264b4
   18abc:	andeq	r6, r2, ip, lsr #4
   18ac0:	andeq	r6, r2, r8, lsr #7
   18ac4:	andeq	r6, r2, r0, lsl r5
   18ac8:	strdeq	r6, [r2], -ip
   18acc:	andeq	r6, r2, r8, lsl r3
   18ad0:	andeq	r6, r2, ip, lsl r5
   18ad4:	andeq	r6, r2, r4, lsr #10
   18ad8:	ldrdeq	r6, [r2], -r8
   18adc:	andeq	r6, r2, r0, lsr r5
   18ae0:	andeq	ip, r1, r0, ror #2
   18ae4:	andeq	r6, r2, r4, asr #10
   18ae8:	andeq	ip, r1, ip, rrx
   18aec:	andeq	r6, r2, r4, asr r5
   18af0:	strdeq	r7, [r1], -r0
   18af4:	andeq	r6, r2, r0, ror #10
   18af8:	andeq	r7, r1, r8, lsr sp
   18afc:	andeq	r6, r2, r4, ror r5
   18b00:	andeq	r6, r2, r4, asr #5
   18b04:	andeq	r7, r1, r8, lsl fp
   18b08:	andeq	fp, r1, ip, lsr #29
   18b0c:	andeq	r6, r2, ip, lsl #11
   18b10:			; <UNDEFINED> instruction: 0x00026ab4
   18b14:	muleq	r2, r4, r5
   18b18:	andeq	r6, r2, r0, lsr #11
   18b1c:	andeq	ip, r2, r8, lsr r9
   18b20:			; <UNDEFINED> instruction: 0x000265b8
   18b24:	andeq	r6, r2, ip, lsr #11
   18b28:	andeq	r6, r2, r0, asr #11
   18b2c:	andeq	r8, r1, r8, ror #28
   18b30:	andeq	r6, r2, r8, asr #11
   18b34:	ldrdeq	r6, [r2], -r8
   18b38:	strdeq	r6, [r2], -ip
   18b3c:	strdeq	r6, [r2], -r0
   18b40:	andeq	r6, r2, r0, ror #11
   18b44:	andeq	r6, r2, r4, lsl #12
   18b48:	andeq	r6, r2, ip, lsl #12
   18b4c:	andeq	r6, r2, r4, lsl r6
   18b50:	andeq	r6, r2, ip, lsl r6
   18b54:	andeq	r8, r1, r8, ror #24
   18b58:	andeq	r6, r2, r8, lsr #12
   18b5c:	andeq	r6, r2, r8, lsr r6
   18b60:	andeq	r6, r2, r8, asr r6
   18b64:	andeq	r6, r2, r4, asr #12
   18b68:	andeq	r6, r2, ip, asr #12
   18b6c:	andeq	r7, r2, r8, ror #22
   18b70:	andeq	sl, r1, r0, lsl lr
   18b74:	andeq	r6, r2, r8, ror #12
   18b78:	andeq	sl, r1, r4, lsr #28
   18b7c:	andeq	r6, r2, r4, ror r6
   18b80:	andeq	sl, r1, ip, asr #6
   18b84:	andeq	r7, r2, r8, asr r6
   18b88:	andeq	r6, r2, r8, lsl #13
   18b8c:	andeq	r6, r2, r0, lsr #13
   18b90:	andeq	r6, r2, r8, lsl #6
   18b94:	andeq	r7, r1, r8, asr r5
   18b98:			; <UNDEFINED> instruction: 0x000266b0
   18b9c:			; <UNDEFINED> instruction: 0x000266b8
   18ba0:	ldrdeq	r6, [r2], -r0
   18ba4:	andeq	r6, r2, r0, asr r3
   18ba8:	andeq	r7, r1, r0, lsr #3
   18bac:	andeq	r6, r2, r8, ror #13
   18bb0:	strdeq	r7, [r1], -r0
   18bb4:	andeq	r6, r2, ip, lsl r7
   18bb8:	andeq	r6, r2, ip, lsr #14
   18bbc:	andeq	r6, r2, r8, lsr r7
   18bc0:	muleq	r2, r4, r7
   18bc4:	andeq	ip, r3, r0, asr lr
   18bc8:	strdeq	r6, [r2], -r8
   18bcc:	andeq	r6, r2, r0, lsl r7
   18bd0:	andeq	r6, r2, r4, ror #9
   18bd4:	andeq	r6, r2, r0, ror #4
   18bd8:	bl	15d68 <g_type_check_instance_cast@plt>
   18bdc:	mov	r3, #0
   18be0:	str	r7, [sp]
   18be4:	ldr	r1, [r5, #32]
   18be8:	mov	r2, r3
   18bec:	bl	163b0 <gtk_box_pack_start@plt>
   18bf0:	ldr	r0, [sp, #48]	; 0x30
   18bf4:	bl	1686c <gtk_widget_show@plt>
   18bf8:	ldr	r3, [pc, #-60]	; 18bc4 <g_strcmp0@plt+0x1f8c>
   18bfc:	ldr	r2, [sp, #108]	; 0x6c
   18c00:	ldr	r3, [r3]
   18c04:	cmp	r2, r3
   18c08:	bne	18c64 <g_strcmp0@plt+0x202c>
   18c0c:	add	sp, sp, #116	; 0x74
   18c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18c14:	ldr	r2, [pc, #-84]	; 18bc8 <g_strcmp0@plt+0x1f90>
   18c18:	mov	r1, #128	; 0x80
   18c1c:	ldr	r0, [pc, #-80]	; 18bd4 <g_strcmp0@plt+0x1f9c>
   18c20:	bl	15dec <g_log@plt>
   18c24:	ldr	r1, [pc, #-96]	; 18bcc <g_strcmp0@plt+0x1f94>
   18c28:	ldr	r0, [r5]
   18c2c:	bl	16068 <gtk_builder_get_object@plt>
   18c30:	mov	r1, r6
   18c34:	bl	15d68 <g_type_check_instance_cast@plt>
   18c38:	bl	15dbc <gtk_widget_hide@plt>
   18c3c:	b	18924 <g_strcmp0@plt+0x1cec>
   18c40:	ldr	r3, [sp, #68]	; 0x44
   18c44:	ldr	r2, [pc, #-124]	; 18bd0 <g_strcmp0@plt+0x1f98>
   18c48:	mov	r1, #16
   18c4c:	ldr	r3, [r3, #8]
   18c50:	ldr	r0, [pc, #-132]	; 18bd4 <g_strcmp0@plt+0x1f9c>
   18c54:	bl	15dec <g_log@plt>
   18c58:	ldr	r0, [sp, #68]	; 0x44
   18c5c:	bl	15c78 <g_error_free@plt>
   18c60:	b	18bf8 <g_strcmp0@plt+0x1fc0>
   18c64:	bl	164ac <__stack_chk_fail@plt>
   18c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c6c:	sub	sp, sp, #76	; 0x4c
   18c70:	ldr	r6, [pc, #488]	; 18e60 <g_strcmp0@plt+0x2228>
   18c74:	mov	r8, #0
   18c78:	mov	fp, r2
   18c7c:	ldr	r3, [r6]
   18c80:	mov	r4, r0
   18c84:	str	r3, [sp, #68]	; 0x44
   18c88:	mov	r7, r1
   18c8c:	str	r8, [sp, #20]
   18c90:	bl	164c4 <gtk_tree_view_get_type@plt>
   18c94:	ldr	sl, [sp, #112]	; 0x70
   18c98:	mov	r1, r0
   18c9c:	mov	r5, r0
   18ca0:	mov	r0, r4
   18ca4:	bl	15d68 <g_type_check_instance_cast@plt>
   18ca8:	bl	15f6c <gtk_tree_view_get_model@plt>
   18cac:	mov	r1, r5
   18cb0:	mov	r9, r0
   18cb4:	mov	r0, r4
   18cb8:	bl	15d68 <g_type_check_instance_cast@plt>
   18cbc:	add	r3, sp, #40	; 0x28
   18cc0:	mov	r2, fp
   18cc4:	mov	r1, r7
   18cc8:	str	r3, [sp]
   18ccc:	add	r3, sp, #36	; 0x24
   18cd0:	bl	15b58 <gtk_tree_view_convert_widget_to_bin_window_coords@plt>
   18cd4:	mov	r1, r5
   18cd8:	mov	r0, r4
   18cdc:	bl	15d68 <g_type_check_instance_cast@plt>
   18ce0:	add	r1, sp, #48	; 0x30
   18ce4:	add	r2, sp, #44	; 0x2c
   18ce8:	add	r3, sp, #24
   18cec:	str	r1, [sp, #8]
   18cf0:	str	r2, [sp, #4]
   18cf4:	str	r3, [sp]
   18cf8:	ldr	r2, [sp, #40]	; 0x28
   18cfc:	add	r3, sp, #20
   18d00:	ldr	r1, [sp, #36]	; 0x24
   18d04:	bl	161dc <gtk_tree_view_get_path_at_pos@plt>
   18d08:	subs	r7, r0, #0
   18d0c:	beq	18df4 <g_strcmp0@plt+0x21bc>
   18d10:	ldr	r3, [sp, #24]
   18d14:	ldr	r0, [sp, #20]
   18d18:	cmp	r3, #0
   18d1c:	beq	18d6c <g_strcmp0@plt+0x2134>
   18d20:	cmp	r0, #0
   18d24:	beq	18d78 <g_strcmp0@plt+0x2140>
   18d28:	mov	r2, r0
   18d2c:	add	r1, sp, #52	; 0x34
   18d30:	mov	r0, r9
   18d34:	bl	16adc <gtk_tree_model_get_iter@plt>
   18d38:	mov	r1, #80	; 0x50
   18d3c:	ldr	r0, [sp, #24]
   18d40:	bl	15d68 <g_type_check_instance_cast@plt>
   18d44:	ldr	r1, [pc, #280]	; 18e64 <g_strcmp0@plt+0x222c>
   18d48:	bl	16b9c <g_object_get_data@plt>
   18d4c:	cmp	r0, #6
   18d50:	beq	18d94 <g_strcmp0@plt+0x215c>
   18d54:	cmp	r0, #10
   18d58:	beq	18e24 <g_strcmp0@plt+0x21ec>
   18d5c:	cmp	r0, #2
   18d60:	beq	18dfc <g_strcmp0@plt+0x21c4>
   18d64:	ldr	r0, [sp, #20]
   18d68:	mov	r7, r8
   18d6c:	cmp	r0, #0
   18d70:	beq	18d78 <g_strcmp0@plt+0x2140>
   18d74:	bl	16170 <gtk_tree_path_free@plt>
   18d78:	ldr	r2, [sp, #68]	; 0x44
   18d7c:	ldr	r3, [r6]
   18d80:	mov	r0, r7
   18d84:	cmp	r2, r3
   18d88:	bne	18e5c <g_strcmp0@plt+0x2224>
   18d8c:	add	sp, sp, #76	; 0x4c
   18d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d94:	mvn	r3, #0
   18d98:	mov	r2, r0
   18d9c:	str	r3, [sp]
   18da0:	mov	r0, r9
   18da4:	add	r1, sp, #52	; 0x34
   18da8:	add	r3, sp, #32
   18dac:	bl	16b30 <gtk_tree_model_get@plt>
   18db0:	ldr	r0, [sp, #32]
   18db4:	cmp	r0, #1
   18db8:	beq	18d64 <g_strcmp0@plt+0x212c>
   18dbc:	bl	1fb7c <g_strcmp0@plt+0x8f44>
   18dc0:	cmp	r0, #0
   18dc4:	beq	18df4 <g_strcmp0@plt+0x21bc>
   18dc8:	mov	r1, r0
   18dcc:	mov	r0, sl
   18dd0:	bl	16b18 <gtk_tooltip_set_text@plt>
   18dd4:	mov	r1, r5
   18dd8:	mov	r0, r4
   18ddc:	bl	15d68 <g_type_check_instance_cast@plt>
   18de0:	mov	r3, #0
   18de4:	str	r3, [sp]
   18de8:	mov	r1, sl
   18dec:	ldrd	r2, [sp, #20]
   18df0:	bl	167dc <gtk_tree_view_set_tooltip_cell@plt>
   18df4:	ldr	r0, [sp, #20]
   18df8:	b	18d6c <g_strcmp0@plt+0x2134>
   18dfc:	mvn	r3, #0
   18e00:	mov	r2, r0
   18e04:	str	r3, [sp]
   18e08:	mov	r0, r9
   18e0c:	add	r1, sp, #52	; 0x34
   18e10:	add	r3, sp, #28
   18e14:	bl	16b30 <gtk_tree_model_get@plt>
   18e18:	ldr	r0, [sp, #28]
   18e1c:	bl	20278 <g_strcmp0@plt+0x9640>
   18e20:	b	18dc0 <g_strcmp0@plt+0x2188>
   18e24:	mvn	r3, #0
   18e28:	mov	r2, r0
   18e2c:	str	r3, [sp]
   18e30:	mov	r0, r9
   18e34:	add	r1, sp, #52	; 0x34
   18e38:	add	r3, sp, #28
   18e3c:	bl	16b30 <gtk_tree_model_get@plt>
   18e40:	ldr	r0, [sp, #28]
   18e44:	cmp	r0, #0
   18e48:	moveq	r7, r0
   18e4c:	ldreq	r0, [sp, #20]
   18e50:	beq	18d6c <g_strcmp0@plt+0x2134>
   18e54:	bl	21088 <g_strcmp0@plt+0xa450>
   18e58:	b	18dc0 <g_strcmp0@plt+0x2188>
   18e5c:	bl	164ac <__stack_chk_fail@plt>
   18e60:	andeq	ip, r3, r0, asr lr
   18e64:	andeq	r6, r2, ip, lsl r6
   18e68:	push	{r4, r5, r6, lr}
   18e6c:	mov	r6, r2
   18e70:	mov	r4, r1
   18e74:	mov	r5, r0
   18e78:	bl	164c4 <gtk_tree_view_get_type@plt>
   18e7c:	mov	r1, r0
   18e80:	mov	r0, r5
   18e84:	bl	15d68 <g_type_check_instance_cast@plt>
   18e88:	mov	r1, #0
   18e8c:	bl	1617c <gtk_tree_view_get_column@plt>
   18e90:	bl	168a8 <gtk_tree_view_column_get_width@plt>
   18e94:	ldr	r2, [r4, #8]
   18e98:	sub	r2, r2, r0
   18e9c:	sub	r2, r2, #200	; 0xc8
   18ea0:	cmp	r2, #9
   18ea4:	ble	18ebc <g_strcmp0@plt+0x2284>
   18ea8:	mov	r0, r6
   18eac:	mov	r3, #0
   18eb0:	ldr	r1, [pc, #28]	; 18ed4 <g_strcmp0@plt+0x229c>
   18eb4:	pop	{r4, r5, r6, lr}
   18eb8:	b	16578 <g_object_set@plt>
   18ebc:	mov	r3, r2
   18ec0:	mov	r1, #16
   18ec4:	ldr	r2, [pc, #12]	; 18ed8 <g_strcmp0@plt+0x22a0>
   18ec8:	ldr	r0, [pc, #12]	; 18edc <g_strcmp0@plt+0x22a4>
   18ecc:	pop	{r4, r5, r6, lr}
   18ed0:	b	15dec <g_log@plt>
   18ed4:	andeq	r6, r2, r0, asr #15
   18ed8:	muleq	r2, ip, r7
   18edc:	andeq	r6, r2, r0, ror #4
   18ee0:	push	{r4, r5, lr}
   18ee4:	sub	sp, sp, #12
   18ee8:	ldr	r4, [pc, #108]	; 18f5c <g_strcmp0@plt+0x2324>
   18eec:	mov	r3, #0
   18ef0:	mov	r2, sp
   18ef4:	ldr	ip, [r4]
   18ef8:	ldr	r1, [pc, #96]	; 18f60 <g_strcmp0@plt+0x2328>
   18efc:	str	ip, [sp, #4]
   18f00:	bl	165cc <g_object_get@plt>
   18f04:	ldr	r3, [sp]
   18f08:	cmp	r3, #0
   18f0c:	bne	18f28 <g_strcmp0@plt+0x22f0>
   18f10:	ldr	r2, [sp, #4]
   18f14:	ldr	r3, [r4]
   18f18:	cmp	r2, r3
   18f1c:	bne	18f58 <g_strcmp0@plt+0x2320>
   18f20:	add	sp, sp, #12
   18f24:	pop	{r4, r5, pc}
   18f28:	ldr	r3, [pc, #52]	; 18f64 <g_strcmp0@plt+0x232c>
   18f2c:	ldr	r1, [pc, #52]	; 18f68 <g_strcmp0@plt+0x2330>
   18f30:	ldr	r0, [r3]
   18f34:	bl	16068 <gtk_builder_get_object@plt>
   18f38:	mov	r5, r0
   18f3c:	bl	15d14 <gtk_widget_get_type@plt>
   18f40:	mov	r1, r0
   18f44:	mov	r0, r5
   18f48:	bl	15d68 <g_type_check_instance_cast@plt>
   18f4c:	mov	r1, #1
   18f50:	bl	16c08 <gtk_widget_set_sensitive@plt>
   18f54:	b	18f10 <g_strcmp0@plt+0x22d8>
   18f58:	bl	164ac <__stack_chk_fail@plt>
   18f5c:	andeq	ip, r3, r0, asr lr
   18f60:	andeq	r6, r2, r0, lsr #9
   18f64:	andeq	sp, r3, r0, lsl r6
   18f68:	andeq	r6, r2, r0, asr r3
   18f6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f70:	sub	sp, sp, #52	; 0x34
   18f74:	ldr	r6, [pc, #1336]	; 194b4 <g_strcmp0@plt+0x287c>
   18f78:	ldr	r4, [pc, #1336]	; 194b8 <g_strcmp0@plt+0x2880>
   18f7c:	mov	r7, #0
   18f80:	ldr	r3, [r6]
   18f84:	ldr	r0, [r4, #36]	; 0x24
   18f88:	add	r2, sp, #28
   18f8c:	str	r3, [sp, #44]	; 0x2c
   18f90:	str	r7, [sp, #28]
   18f94:	bl	16674 <pk_task_generic_finish@plt>
   18f98:	subs	fp, r0, #0
   18f9c:	beq	1920c <g_strcmp0@plt+0x25d4>
   18fa0:	bl	15e64 <pk_results_get_error_code@plt>
   18fa4:	subs	r5, r0, #0
   18fa8:	beq	19094 <g_strcmp0@plt+0x245c>
   18fac:	bl	15f24 <pk_error_get_code@plt>
   18fb0:	bl	16110 <pk_error_enum_to_string@plt>
   18fb4:	mov	r8, r0
   18fb8:	mov	r0, r5
   18fbc:	bl	15f0c <pk_error_get_details@plt>
   18fc0:	mov	r3, r8
   18fc4:	ldr	r2, [pc, #1264]	; 194bc <g_strcmp0@plt+0x2884>
   18fc8:	mov	r1, #16
   18fcc:	str	r0, [sp]
   18fd0:	ldr	r0, [pc, #1256]	; 194c0 <g_strcmp0@plt+0x2888>
   18fd4:	bl	15dec <g_log@plt>
   18fd8:	ldr	r1, [pc, #1252]	; 194c4 <g_strcmp0@plt+0x288c>
   18fdc:	ldr	r0, [r4]
   18fe0:	bl	16068 <gtk_builder_get_object@plt>
   18fe4:	mov	r8, r0
   18fe8:	bl	16bfc <gtk_window_get_type@plt>
   18fec:	mov	r1, r0
   18ff0:	mov	r0, r8
   18ff4:	bl	15d68 <g_type_check_instance_cast@plt>
   18ff8:	mov	r8, r0
   18ffc:	mov	r0, r5
   19000:	bl	15f24 <pk_error_get_code@plt>
   19004:	bl	1ee78 <g_strcmp0@plt+0x8240>
   19008:	mov	r9, r0
   1900c:	mov	r0, r5
   19010:	bl	15f24 <pk_error_get_code@plt>
   19014:	bl	1f508 <g_strcmp0@plt+0x88d0>
   19018:	mov	sl, r0
   1901c:	mov	r0, r5
   19020:	bl	15f0c <pk_error_get_details@plt>
   19024:	mov	r2, sl
   19028:	mov	r1, r9
   1902c:	mov	r3, r0
   19030:	mov	r0, r8
   19034:	bl	24790 <g_strcmp0@plt+0xdb58>
   19038:	mov	r0, #1
   1903c:	bl	1733c <g_strcmp0@plt+0x704>
   19040:	ldr	r1, [pc, #1152]	; 194c8 <g_strcmp0@plt+0x2890>
   19044:	ldr	r0, [r4]
   19048:	bl	16068 <gtk_builder_get_object@plt>
   1904c:	mov	r8, r0
   19050:	bl	15d14 <gtk_widget_get_type@plt>
   19054:	mov	r1, r0
   19058:	mov	r0, r8
   1905c:	bl	15d68 <g_type_check_instance_cast@plt>
   19060:	mov	r1, #1
   19064:	bl	16c08 <gtk_widget_set_sensitive@plt>
   19068:	mov	r0, r5
   1906c:	str	r7, [r4, #40]	; 0x28
   19070:	bl	16878 <g_object_unref@plt>
   19074:	mov	r0, fp
   19078:	bl	16878 <g_object_unref@plt>
   1907c:	ldr	r2, [sp, #44]	; 0x2c
   19080:	ldr	r3, [r6]
   19084:	cmp	r2, r3
   19088:	bne	194b0 <g_strcmp0@plt+0x2878>
   1908c:	add	sp, sp, #52	; 0x34
   19090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19094:	mov	r0, #1
   19098:	bl	1733c <g_strcmp0@plt+0x704>
   1909c:	mov	r0, fp
   190a0:	bl	16af4 <pk_results_get_require_restart_worst@plt>
   190a4:	ldr	r3, [r4, #60]	; 0x3c
   190a8:	mov	r8, #0
   190ac:	cmp	r3, r0
   190b0:	strcc	r0, [r4, #60]	; 0x3c
   190b4:	mov	r0, fp
   190b8:	bl	15b40 <pk_results_get_package_array@plt>
   190bc:	str	r8, [sp, #36]	; 0x24
   190c0:	str	r8, [sp, #40]	; 0x28
   190c4:	mov	r5, r0
   190c8:	ldr	r0, [pc, #1020]	; 194cc <g_strcmp0@plt+0x2894>
   190cc:	bl	15d20 <g_string_new@plt>
   190d0:	ldr	r3, [r5, #4]
   190d4:	cmp	r3, r8
   190d8:	mov	r9, r0
   190dc:	beq	19424 <g_strcmp0@plt+0x27ec>
   190e0:	ldr	sl, [pc, #1000]	; 194d0 <g_strcmp0@plt+0x2898>
   190e4:	mov	r7, r8
   190e8:	b	1910c <g_strcmp0@plt+0x24d4>
   190ec:	ldr	r0, [sp, #36]	; 0x24
   190f0:	bl	16518 <g_free@plt>
   190f4:	ldr	r0, [sp, #40]	; 0x28
   190f8:	bl	16518 <g_free@plt>
   190fc:	ldr	r3, [r5, #4]
   19100:	add	r7, r7, #1
   19104:	cmp	r7, r3
   19108:	bcs	19174 <g_strcmp0@plt+0x253c>
   1910c:	ldr	r2, [r5]
   19110:	add	ip, sp, #40	; 0x28
   19114:	mov	r1, #0
   19118:	ldr	r0, [r2, r7, lsl #2]
   1911c:	stmib	sp, {sl, ip}
   19120:	add	ip, sp, #36	; 0x24
   19124:	ldr	r3, [pc, #936]	; 194d4 <g_strcmp0@plt+0x289c>
   19128:	str	r1, [sp, #12]
   1912c:	add	r2, sp, #32
   19130:	str	ip, [sp]
   19134:	ldr	r1, [pc, #924]	; 194d8 <g_strcmp0@plt+0x28a0>
   19138:	bl	165cc <g_object_get@plt>
   1913c:	ldr	r3, [sp, #32]
   19140:	cmp	r3, #9
   19144:	bne	190ec <g_strcmp0@plt+0x24b4>
   19148:	ldrd	r0, [sp, #36]	; 0x24
   1914c:	bl	22434 <g_strcmp0@plt+0xb7fc>
   19150:	ldr	r1, [pc, #900]	; 194dc <g_strcmp0@plt+0x28a4>
   19154:	mov	r8, r0
   19158:	mov	r2, r0
   1915c:	mov	r0, r9
   19160:	bl	16b3c <g_string_append_printf@plt>
   19164:	mov	r0, r8
   19168:	bl	16518 <g_free@plt>
   1916c:	mov	r8, #1
   19170:	b	190ec <g_strcmp0@plt+0x24b4>
   19174:	ldr	r1, [r9, #4]
   19178:	cmp	r1, #0
   1917c:	bne	192a0 <g_strcmp0@plt+0x2668>
   19180:	mov	r0, r9
   19184:	mov	r1, #0
   19188:	bl	167d0 <g_string_free@plt>
   1918c:	cmp	r8, #0
   19190:	mov	r7, r0
   19194:	beq	191e0 <g_strcmp0@plt+0x25a8>
   19198:	ldr	r1, [pc, #804]	; 194c4 <g_strcmp0@plt+0x288c>
   1919c:	ldr	r0, [r4]
   191a0:	bl	16068 <gtk_builder_get_object@plt>
   191a4:	mov	r8, r0
   191a8:	bl	16bfc <gtk_window_get_type@plt>
   191ac:	mov	r1, r0
   191b0:	mov	r0, r8
   191b4:	bl	15d68 <g_type_check_instance_cast@plt>
   191b8:	mov	r2, #5
   191bc:	ldr	r1, [pc, #796]	; 194e0 <g_strcmp0@plt+0x28a8>
   191c0:	mov	r8, r0
   191c4:	mov	r0, #0
   191c8:	bl	16530 <dcgettext@plt>
   191cc:	mov	r3, #0
   191d0:	mov	r2, r7
   191d4:	mov	r1, r0
   191d8:	mov	r0, r8
   191dc:	bl	24790 <g_strcmp0@plt+0xdb58>
   191e0:	mov	r0, r7
   191e4:	bl	16518 <g_free@plt>
   191e8:	ldr	r9, [r4, #60]	; 0x3c
   191ec:	sub	r3, r9, #3
   191f0:	cmp	r3, #3
   191f4:	bls	192b0 <g_strcmp0@plt+0x2678>
   191f8:	mov	r3, #0
   191fc:	mov	r0, r5
   19200:	str	r3, [r4, #40]	; 0x28
   19204:	bl	169c8 <g_ptr_array_unref@plt>
   19208:	b	19074 <g_strcmp0@plt+0x243c>
   1920c:	ldr	r3, [sp, #28]
   19210:	ldr	r5, [r3]
   19214:	bl	16728 <pk_client_error_quark@plt>
   19218:	cmp	r5, r0
   1921c:	bne	19238 <g_strcmp0@plt+0x2600>
   19220:	ldr	r3, [sp, #28]
   19224:	ldr	r0, [r3, #4]
   19228:	cmp	r0, #9
   1922c:	beq	19490 <g_strcmp0@plt+0x2858>
   19230:	cmp	r0, #10
   19234:	bgt	193dc <g_strcmp0@plt+0x27a4>
   19238:	mov	r2, #5
   1923c:	ldr	r1, [pc, #672]	; 194e4 <g_strcmp0@plt+0x28ac>
   19240:	mov	r0, fp
   19244:	bl	16530 <dcgettext@plt>
   19248:	ldr	r3, [sp, #28]
   1924c:	mov	r1, fp
   19250:	ldr	r2, [r3, #8]
   19254:	bl	17058 <g_strcmp0@plt+0x420>
   19258:	ldr	r0, [sp, #28]
   1925c:	bl	15c78 <g_error_free@plt>
   19260:	mov	r0, #1
   19264:	bl	1733c <g_strcmp0@plt+0x704>
   19268:	ldr	r1, [pc, #600]	; 194c8 <g_strcmp0@plt+0x2890>
   1926c:	ldr	r0, [r4]
   19270:	bl	16068 <gtk_builder_get_object@plt>
   19274:	mov	r5, r0
   19278:	bl	15d14 <gtk_widget_get_type@plt>
   1927c:	mov	r1, r0
   19280:	mov	r0, r5
   19284:	bl	15d68 <g_type_check_instance_cast@plt>
   19288:	mov	r1, #1
   1928c:	bl	16c08 <gtk_widget_set_sensitive@plt>
   19290:	mov	r3, #0
   19294:	str	r3, [r4, #40]	; 0x28
   19298:	b	1907c <g_strcmp0@plt+0x2444>
   1929c:	mov	r8, r3
   192a0:	sub	r1, r1, #1
   192a4:	mov	r0, r9
   192a8:	bl	15a80 <g_string_set_size@plt>
   192ac:	b	19180 <g_strcmp0@plt+0x2548>
   192b0:	cmp	r9, #4
   192b4:	beq	19458 <g_strcmp0@plt+0x2820>
   192b8:	cmp	r9, #6
   192bc:	beq	19484 <g_strcmp0@plt+0x284c>
   192c0:	cmp	r9, #3
   192c4:	beq	194a4 <g_strcmp0@plt+0x286c>
   192c8:	cmp	r9, #5
   192cc:	bne	1940c <g_strcmp0@plt+0x27d4>
   192d0:	ldr	r1, [pc, #528]	; 194e8 <g_strcmp0@plt+0x28b0>
   192d4:	mov	r2, r9
   192d8:	mov	r0, #0
   192dc:	bl	16530 <dcgettext@plt>
   192e0:	mov	r2, #5
   192e4:	ldr	r1, [pc, #512]	; 194ec <g_strcmp0@plt+0x28b4>
   192e8:	mov	sl, r0
   192ec:	mov	r0, #0
   192f0:	bl	16530 <dcgettext@plt>
   192f4:	str	r0, [sp, #20]
   192f8:	ldr	r1, [pc, #452]	; 194c4 <g_strcmp0@plt+0x288c>
   192fc:	ldr	r0, [r4]
   19300:	bl	16068 <gtk_builder_get_object@plt>
   19304:	mov	r7, r0
   19308:	bl	16bfc <gtk_window_get_type@plt>
   1930c:	mov	r1, r0
   19310:	mov	r8, r0
   19314:	mov	r0, r7
   19318:	bl	15d68 <g_type_check_instance_cast@plt>
   1931c:	mov	r7, r0
   19320:	mov	r0, r9
   19324:	bl	1fc44 <g_strcmp0@plt+0x900c>
   19328:	ldr	r2, [pc, #448]	; 194f0 <g_strcmp0@plt+0x28b8>
   1932c:	mov	r3, #2
   19330:	str	r2, [sp]
   19334:	mov	r1, #1
   19338:	mov	r2, #0
   1933c:	str	r0, [sp, #4]
   19340:	mov	r0, r7
   19344:	bl	16a70 <gtk_message_dialog_new@plt>
   19348:	mov	r7, r0
   1934c:	bl	165e4 <gtk_dialog_get_type@plt>
   19350:	ldr	r3, [r4, #60]	; 0x3c
   19354:	bic	r3, r3, #2
   19358:	cmp	r3, #4
   1935c:	mov	r9, r0
   19360:	bne	1943c <g_strcmp0@plt+0x2804>
   19364:	bl	16590 <gtk_message_dialog_get_type@plt>
   19368:	mov	r1, r0
   1936c:	mov	r0, r7
   19370:	bl	15d68 <g_type_check_instance_cast@plt>
   19374:	mov	r2, sl
   19378:	ldr	r1, [pc, #368]	; 194f0 <g_strcmp0@plt+0x28b8>
   1937c:	bl	15b70 <gtk_message_dialog_format_secondary_text@plt>
   19380:	mov	r1, r8
   19384:	mov	r0, r7
   19388:	bl	15d68 <g_type_check_instance_cast@plt>
   1938c:	ldr	r1, [pc, #352]	; 194f4 <g_strcmp0@plt+0x28bc>
   19390:	bl	15ef4 <gtk_window_set_icon_name@plt>
   19394:	mov	r1, r9
   19398:	mov	r0, r7
   1939c:	bl	15d68 <g_type_check_instance_cast@plt>
   193a0:	bl	167e8 <gtk_dialog_run@plt>
   193a4:	mov	r8, r0
   193a8:	mov	r0, r7
   193ac:	bl	1638c <gtk_widget_destroy@plt>
   193b0:	cmn	r8, #5
   193b4:	bne	1941c <g_strcmp0@plt+0x27e4>
   193b8:	ldr	r3, [r4, #60]	; 0x3c
   193bc:	cmp	r3, #3
   193c0:	bne	1941c <g_strcmp0@plt+0x27e4>
   193c4:	bl	219a4 <g_strcmp0@plt+0xad6c>
   193c8:	mov	r7, r0
   193cc:	bl	218dc <g_strcmp0@plt+0xaca4>
   193d0:	mov	r0, r7
   193d4:	bl	16878 <g_object_unref@plt>
   193d8:	b	1941c <g_strcmp0@plt+0x27e4>
   193dc:	sub	r5, r0, #10
   193e0:	mov	r0, r5
   193e4:	bl	1ee78 <g_strcmp0@plt+0x8240>
   193e8:	mov	r7, r0
   193ec:	mov	r0, r5
   193f0:	bl	1f508 <g_strcmp0@plt+0x88d0>
   193f4:	ldr	r3, [sp, #28]
   193f8:	ldr	r2, [r3, #8]
   193fc:	mov	r1, r0
   19400:	mov	r0, r7
   19404:	bl	17058 <g_strcmp0@plt+0x420>
   19408:	b	19258 <g_strcmp0@plt+0x2620>
   1940c:	ldr	r2, [pc, #228]	; 194f8 <g_strcmp0@plt+0x28c0>
   19410:	mov	r1, #16
   19414:	ldr	r0, [pc, #164]	; 194c0 <g_strcmp0@plt+0x2888>
   19418:	bl	15dec <g_log@plt>
   1941c:	bl	17170 <g_strcmp0@plt+0x538>
   19420:	b	191f8 <g_strcmp0@plt+0x25c0>
   19424:	ldr	r1, [r0, #4]
   19428:	cmp	r1, #0
   1942c:	bne	1929c <g_strcmp0@plt+0x2664>
   19430:	bl	167d0 <g_string_free@plt>
   19434:	mov	r7, r0
   19438:	b	191e0 <g_strcmp0@plt+0x25a8>
   1943c:	mov	r1, r0
   19440:	mov	r0, r7
   19444:	bl	15d68 <g_type_check_instance_cast@plt>
   19448:	ldr	r1, [sp, #20]
   1944c:	mvn	r2, #4
   19450:	bl	15bf4 <gtk_dialog_add_button@plt>
   19454:	b	19364 <g_strcmp0@plt+0x272c>
   19458:	ldr	r1, [pc, #156]	; 194fc <g_strcmp0@plt+0x28c4>
   1945c:	mov	r2, #5
   19460:	mov	r0, #0
   19464:	bl	16530 <dcgettext@plt>
   19468:	mov	r2, #5
   1946c:	ldr	r1, [pc, #140]	; 19500 <g_strcmp0@plt+0x28c8>
   19470:	mov	sl, r0
   19474:	mov	r0, #0
   19478:	bl	16530 <dcgettext@plt>
   1947c:	str	r0, [sp, #20]
   19480:	b	192f8 <g_strcmp0@plt+0x26c0>
   19484:	mov	r2, #5
   19488:	ldr	r1, [pc, #116]	; 19504 <g_strcmp0@plt+0x28cc>
   1948c:	b	19460 <g_strcmp0@plt+0x2828>
   19490:	ldr	r2, [pc, #112]	; 19508 <g_strcmp0@plt+0x28d0>
   19494:	mov	r1, #128	; 0x80
   19498:	ldr	r0, [pc, #32]	; 194c0 <g_strcmp0@plt+0x2888>
   1949c:	bl	15dec <g_log@plt>
   194a0:	b	19258 <g_strcmp0@plt+0x2620>
   194a4:	mov	r2, #5
   194a8:	ldr	r1, [pc, #92]	; 1950c <g_strcmp0@plt+0x28d4>
   194ac:	b	192d8 <g_strcmp0@plt+0x26a0>
   194b0:	bl	164ac <__stack_chk_fail@plt>
   194b4:	andeq	ip, r3, r0, asr lr
   194b8:	andeq	sp, r3, r0, lsl r6
   194bc:	andeq	r6, r2, r0, lsl r8
   194c0:	andeq	r6, r2, r0, ror #4
   194c4:	andeq	r6, r2, ip, lsr #4
   194c8:	andeq	r6, r2, r8, lsl #6
   194cc:	andeq	r7, r2, r8, ror #22
   194d0:	andeq	r6, r2, r0, asr #16
   194d4:	andeq	r6, r2, r4, lsr r8
   194d8:	andeq	ip, r2, r4, ror sl
   194dc:	andeq	r7, r2, r4, asr #12
   194e0:	andeq	r6, r2, r8, asr #16
   194e4:	andeq	r6, r2, ip, asr #15
   194e8:	andeq	r6, r2, r8, asr #19
   194ec:	andeq	r6, r2, r0, asr #19
   194f0:	andeq	fp, r2, ip, asr r9
   194f4:	andeq	r6, r2, r8, lsr #7
   194f8:	andeq	r6, r2, r8, lsr #20
   194fc:	andeq	r6, r2, r8, ror #16
   19500:	ldrdeq	r6, [r2], -ip
   19504:	strdeq	r6, [r2], -r0
   19508:	andeq	r6, r2, r8, ror #15
   1950c:	andeq	r6, r2, r0, asr r9
   19510:	push	{r4, r5, r6, lr}
   19514:	mov	r4, r1
   19518:	mov	r6, r0
   1951c:	bl	16338 <gtk_tree_row_reference_get_model@plt>
   19520:	mov	r5, r0
   19524:	mov	r0, r4
   19528:	bl	16338 <gtk_tree_row_reference_get_model@plt>
   1952c:	cmp	r5, r0
   19530:	movne	r4, #1
   19534:	beq	19540 <g_strcmp0@plt+0x2908>
   19538:	mov	r0, r4
   1953c:	pop	{r4, r5, r6, pc}
   19540:	mov	r0, r6
   19544:	bl	16980 <gtk_tree_row_reference_get_path@plt>
   19548:	mov	r6, r0
   1954c:	mov	r0, r4
   19550:	bl	16980 <gtk_tree_row_reference_get_path@plt>
   19554:	mov	r1, r0
   19558:	mov	r5, r0
   1955c:	mov	r0, r6
   19560:	bl	16044 <gtk_tree_path_compare@plt>
   19564:	mov	r4, r0
   19568:	mov	r0, r6
   1956c:	bl	16170 <gtk_tree_path_free@plt>
   19570:	mov	r0, r5
   19574:	bl	16170 <gtk_tree_path_free@plt>
   19578:	mov	r0, r4
   1957c:	pop	{r4, r5, r6, pc}
   19580:	push	{r4, r5, r6, lr}
   19584:	sub	sp, sp, #8
   19588:	ldr	r5, [pc, #136]	; 19618 <g_strcmp0@plt+0x29e0>
   1958c:	mov	r2, #0
   19590:	subs	r4, r1, #0
   19594:	ldr	r3, [r5]
   19598:	str	r2, [sp]
   1959c:	str	r3, [sp, #4]
   195a0:	beq	195fc <g_strcmp0@plt+0x29c4>
   195a4:	mov	r1, #80	; 0x50
   195a8:	mov	r6, r0
   195ac:	bl	15d68 <g_type_check_instance_cast@plt>
   195b0:	mov	r2, sp
   195b4:	ldr	r1, [pc, #96]	; 1961c <g_strcmp0@plt+0x29e4>
   195b8:	bl	16824 <g_object_set_data@plt>
   195bc:	mov	r2, r4
   195c0:	ldr	r1, [pc, #88]	; 19620 <g_strcmp0@plt+0x29e8>
   195c4:	mov	r0, r6
   195c8:	bl	15c24 <gtk_tree_model_foreach@plt>
   195cc:	mov	r1, #80	; 0x50
   195d0:	mov	r0, r6
   195d4:	bl	15d68 <g_type_check_instance_cast@plt>
   195d8:	ldr	r1, [pc, #60]	; 1961c <g_strcmp0@plt+0x29e4>
   195dc:	bl	15dd4 <g_object_steal_data@plt>
   195e0:	ldr	r0, [sp]
   195e4:	ldr	r2, [sp, #4]
   195e8:	ldr	r3, [r5]
   195ec:	cmp	r2, r3
   195f0:	bne	19614 <g_strcmp0@plt+0x29dc>
   195f4:	add	sp, sp, #8
   195f8:	pop	{r4, r5, r6, pc}
   195fc:	ldr	r0, [pc, #32]	; 19624 <g_strcmp0@plt+0x29ec>
   19600:	ldr	r2, [pc, #32]	; 19628 <g_strcmp0@plt+0x29f0>
   19604:	ldr	r1, [pc, #32]	; 1962c <g_strcmp0@plt+0x29f4>
   19608:	bl	15bac <g_return_if_fail_warning@plt>
   1960c:	mov	r0, r4
   19610:	b	195e4 <g_strcmp0@plt+0x29ac>
   19614:	bl	164ac <__stack_chk_fail@plt>
   19618:	andeq	ip, r3, r0, asr lr
   1961c:			; <UNDEFINED> instruction: 0x000262bc
   19620:	andeq	r7, r1, r8, ror r2
   19624:	andeq	r6, r2, r0, ror #4
   19628:	andeq	r6, r2, r0, asr #20
   1962c:	andeq	r6, r2, r8, lsl #4
   19630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19634:	sub	sp, sp, #180	; 0xb4
   19638:	ldr	r3, [pc, #1396]	; 19bb4 <g_strcmp0@plt+0x2f7c>
   1963c:	ldr	r6, [pc, #1396]	; 19bb8 <g_strcmp0@plt+0x2f80>
   19640:	ldr	lr, [pc, #1396]	; 19bbc <g_strcmp0@plt+0x2f84>
   19644:	ldr	r2, [pc, #1396]	; 19bc0 <g_strcmp0@plt+0x2f88>
   19648:	ldr	r7, [pc, #1396]	; 19bc4 <g_strcmp0@plt+0x2f8c>
   1964c:	str	r3, [sp, #28]
   19650:	add	r3, sp, #144	; 0x90
   19654:	mov	r4, #0
   19658:	ldr	ip, [r6]
   1965c:	mov	r5, r1
   19660:	str	lr, [sp, #20]
   19664:	add	r1, sp, #112	; 0x70
   19668:	add	lr, sp, #108	; 0x6c
   1966c:	str	r2, [sp, #4]
   19670:	str	r3, [sp, #32]
   19674:	add	r2, sp, #116	; 0x74
   19678:	add	r3, sp, #124	; 0x7c
   1967c:	str	r7, [sp, #12]
   19680:	str	r1, [sp, #16]
   19684:	str	r2, [sp, #8]
   19688:	str	r3, [sp]
   1968c:	str	r4, [sp, #36]	; 0x24
   19690:	str	lr, [sp, #24]
   19694:	ldr	r3, [pc, #1324]	; 19bc8 <g_strcmp0@plt+0x2f90>
   19698:	add	r2, sp, #120	; 0x78
   1969c:	ldr	r1, [pc, #1320]	; 19bcc <g_strcmp0@plt+0x2f94>
   196a0:	str	ip, [sp, #172]	; 0xac
   196a4:	str	r4, [sp, #128]	; 0x80
   196a8:	str	r4, [sp, #132]	; 0x84
   196ac:	mov	r7, r0
   196b0:	bl	165cc <g_object_get@plt>
   196b4:	cmp	r5, #12
   196b8:	beq	19714 <g_strcmp0@plt+0x2adc>
   196bc:	cmp	r5, #4
   196c0:	beq	19938 <g_strcmp0@plt+0x2d00>
   196c4:	cmp	r5, #2
   196c8:	beq	19814 <g_strcmp0@plt+0x2bdc>
   196cc:	cmp	r5, #13
   196d0:	beq	19878 <g_strcmp0@plt+0x2c40>
   196d4:	cmp	r5, #3
   196d8:	beq	19a90 <g_strcmp0@plt+0x2e58>
   196dc:	ldr	r0, [sp, #132]	; 0x84
   196e0:	bl	16518 <g_free@plt>
   196e4:	ldr	r0, [sp, #128]	; 0x80
   196e8:	bl	16518 <g_free@plt>
   196ec:	ldr	r0, [sp, #112]	; 0x70
   196f0:	cmp	r0, #0
   196f4:	beq	196fc <g_strcmp0@plt+0x2ac4>
   196f8:	bl	16878 <g_object_unref@plt>
   196fc:	ldr	r2, [sp, #172]	; 0xac
   19700:	ldr	r3, [r6]
   19704:	cmp	r2, r3
   19708:	bne	19fdc <g_strcmp0@plt+0x33a4>
   1970c:	add	sp, sp, #180	; 0xb4
   19710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19714:	ldr	r1, [sp, #144]	; 0x90
   19718:	mov	r3, r4
   1971c:	and	r2, r1, #4
   19720:	orrs	r3, r2, r3
   19724:	bne	196dc <g_strcmp0@plt+0x2aa4>
   19728:	ldr	r3, [sp, #120]	; 0x78
   1972c:	cmp	r3, #9
   19730:	beq	196dc <g_strcmp0@plt+0x2aa4>
   19734:	ldr	r2, [pc, #1172]	; 19bd0 <g_strcmp0@plt+0x2f98>
   19738:	ldr	r5, [pc, #1172]	; 19bd4 <g_strcmp0@plt+0x2f9c>
   1973c:	add	r1, sp, #132	; 0x84
   19740:	add	r3, sp, #128	; 0x80
   19744:	str	r4, [sp, #12]
   19748:	str	r2, [sp, #4]
   1974c:	str	r1, [sp, #8]
   19750:	add	r2, sp, #140	; 0x8c
   19754:	str	r3, [sp]
   19758:	ldr	r1, [pc, #1144]	; 19bd8 <g_strcmp0@plt+0x2fa0>
   1975c:	ldr	r3, [pc, #1144]	; 19bdc <g_strcmp0@plt+0x2fa4>
   19760:	ldr	r0, [sp, #112]	; 0x70
   19764:	bl	165cc <g_object_get@plt>
   19768:	ldr	r1, [pc, #1136]	; 19be0 <g_strcmp0@plt+0x2fa8>
   1976c:	ldr	r0, [r5]
   19770:	bl	16068 <gtk_builder_get_object@plt>
   19774:	mov	r4, r0
   19778:	bl	164c4 <gtk_tree_view_get_type@plt>
   1977c:	mov	r1, r0
   19780:	mov	r0, r4
   19784:	bl	15d68 <g_type_check_instance_cast@plt>
   19788:	mov	r9, r0
   1978c:	bl	15f6c <gtk_tree_view_get_model@plt>
   19790:	ldr	r3, [sp, #120]	; 0x78
   19794:	cmp	r3, #22
   19798:	addne	r8, sp, #156	; 0x9c
   1979c:	mov	r7, r0
   197a0:	beq	19d84 <g_strcmp0@plt+0x314c>
   197a4:	ldr	r1, [sp, #128]	; 0x80
   197a8:	ldr	r0, [r5, #84]	; 0x54
   197ac:	bl	16c38 <g_strcmp0@plt>
   197b0:	cmp	r0, #0
   197b4:	bne	19b54 <g_strcmp0@plt+0x2f1c>
   197b8:	ldr	r1, [sp, #128]	; 0x80
   197bc:	mov	r0, r7
   197c0:	bl	19580 <g_strcmp0@plt+0x2948>
   197c4:	subs	r4, r0, #0
   197c8:	beq	19c3c <g_strcmp0@plt+0x3004>
   197cc:	mov	r2, r4
   197d0:	mov	r1, r8
   197d4:	mov	r0, r7
   197d8:	bl	16adc <gtk_tree_model_get_iter@plt>
   197dc:	ldr	r3, [sp, #120]	; 0x78
   197e0:	cmp	r3, #22
   197e4:	beq	19df8 <g_strcmp0@plt+0x31c0>
   197e8:	ldr	r1, [pc, #1012]	; 19be4 <g_strcmp0@plt+0x2fac>
   197ec:	ldr	r0, [r5, #56]	; 0x38
   197f0:	bl	15b04 <g_settings_get_boolean@plt>
   197f4:	cmp	r0, #0
   197f8:	bne	19b6c <g_strcmp0@plt+0x2f34>
   197fc:	ldr	r3, [sp, #120]	; 0x78
   19800:	cmp	r3, #22
   19804:	beq	19b2c <g_strcmp0@plt+0x2ef4>
   19808:	mov	r0, r4
   1980c:	bl	16170 <gtk_tree_path_free@plt>
   19810:	b	196dc <g_strcmp0@plt+0x2aa4>
   19814:	ldr	r3, [pc, #952]	; 19bd4 <g_strcmp0@plt+0x2f9c>
   19818:	ldr	r1, [pc, #1016]	; 19c18 <g_strcmp0@plt+0x2fe0>
   1981c:	ldr	r0, [r3]
   19820:	bl	16068 <gtk_builder_get_object@plt>
   19824:	mov	r4, r0
   19828:	bl	15d14 <gtk_widget_get_type@plt>
   1982c:	mov	r1, r0
   19830:	mov	r0, r4
   19834:	bl	15d68 <g_type_check_instance_cast@plt>
   19838:	mov	r4, r0
   1983c:	bl	1686c <gtk_widget_show@plt>
   19840:	ldr	r3, [sp, #116]	; 0x74
   19844:	cmn	r3, #1
   19848:	beq	196dc <g_strcmp0@plt+0x2aa4>
   1984c:	bl	163e0 <gtk_progress_bar_get_type@plt>
   19850:	mov	r1, r0
   19854:	mov	r0, r4
   19858:	bl	15d68 <g_type_check_instance_cast@plt>
   1985c:	vldr	s15, [sp, #116]	; 0x74
   19860:	vldr	d0, [pc, #832]	; 19ba8 <g_strcmp0@plt+0x2f70>
   19864:	vcvt.f32.s32	s14, s15
   19868:	vcvt.f64.f32	d7, s14
   1986c:	vdiv.f64	d0, d7, d0
   19870:	bl	160b0 <gtk_progress_bar_set_fraction@plt>
   19874:	b	196dc <g_strcmp0@plt+0x2aa4>
   19878:	ldr	r1, [sp, #144]	; 0x90
   1987c:	mov	r3, r4
   19880:	and	r2, r1, #4
   19884:	orrs	r3, r2, r3
   19888:	bne	196dc <g_strcmp0@plt+0x2aa4>
   1988c:	ldr	r8, [pc, #832]	; 19bd4 <g_strcmp0@plt+0x2f9c>
   19890:	mov	r3, r4
   19894:	add	r2, sp, #140	; 0x8c
   19898:	mov	r0, r7
   1989c:	ldr	r1, [pc, #836]	; 19be8 <g_strcmp0@plt+0x2fb0>
   198a0:	bl	165cc <g_object_get@plt>
   198a4:	ldr	r1, [pc, #820]	; 19be0 <g_strcmp0@plt+0x2fa8>
   198a8:	ldr	r0, [r8]
   198ac:	bl	16068 <gtk_builder_get_object@plt>
   198b0:	mov	r4, r0
   198b4:	bl	164c4 <gtk_tree_view_get_type@plt>
   198b8:	mov	r1, r0
   198bc:	mov	r0, r4
   198c0:	bl	15d68 <g_type_check_instance_cast@plt>
   198c4:	bl	15f6c <gtk_tree_view_get_model@plt>
   198c8:	mov	r4, r0
   198cc:	ldr	r0, [sp, #140]	; 0x8c
   198d0:	bl	16800 <pk_item_progress_get_package_id@plt>
   198d4:	mov	r1, r0
   198d8:	mov	r0, r4
   198dc:	bl	19580 <g_strcmp0@plt+0x2948>
   198e0:	subs	r5, r0, #0
   198e4:	beq	19e9c <g_strcmp0@plt+0x3264>
   198e8:	add	r1, sp, #156	; 0x9c
   198ec:	mov	r2, r5
   198f0:	mov	r0, r4
   198f4:	mvn	r7, #0
   198f8:	bl	16adc <gtk_tree_model_get_iter@plt>
   198fc:	add	r3, sp, #136	; 0x88
   19900:	mov	r0, r4
   19904:	add	r1, sp, #156	; 0x9c
   19908:	mov	r2, #7
   1990c:	str	r7, [sp]
   19910:	bl	16b30 <gtk_tree_model_get@plt>
   19914:	ldr	r0, [sp, #140]	; 0x8c
   19918:	bl	16ac4 <pk_item_progress_get_percentage@plt>
   1991c:	cmp	r0, #0
   19920:	mov	r3, r0
   19924:	str	r0, [sp, #116]	; 0x74
   19928:	bgt	19af4 <g_strcmp0@plt+0x2ebc>
   1992c:	mov	r0, r5
   19930:	bl	16170 <gtk_tree_path_free@plt>
   19934:	b	196dc <g_strcmp0@plt+0x2aa4>
   19938:	ldr	r0, [sp, #124]	; 0x7c
   1993c:	bl	15e40 <pk_status_enum_to_string@plt>
   19940:	ldr	r5, [pc, #652]	; 19bd4 <g_strcmp0@plt+0x2f9c>
   19944:	ldr	r2, [pc, #672]	; 19bec <g_strcmp0@plt+0x2fb4>
   19948:	mov	r1, #128	; 0x80
   1994c:	mov	r3, r0
   19950:	ldr	r0, [pc, #736]	; 19c38 <g_strcmp0@plt+0x3000>
   19954:	bl	15dec <g_log@plt>
   19958:	ldr	r1, [pc, #656]	; 19bf0 <g_strcmp0@plt+0x2fb8>
   1995c:	ldr	r0, [r5]
   19960:	bl	16068 <gtk_builder_get_object@plt>
   19964:	mov	r8, r0
   19968:	bl	15d14 <gtk_widget_get_type@plt>
   1996c:	mov	r1, r0
   19970:	mov	r7, r0
   19974:	mov	r0, r8
   19978:	bl	15d68 <g_type_check_instance_cast@plt>
   1997c:	bl	1686c <gtk_widget_show@plt>
   19980:	ldr	r1, [pc, #620]	; 19bf4 <g_strcmp0@plt+0x2fbc>
   19984:	ldr	r0, [r5]
   19988:	bl	16068 <gtk_builder_get_object@plt>
   1998c:	mov	r1, r7
   19990:	bl	15d68 <g_type_check_instance_cast@plt>
   19994:	mov	r8, r0
   19998:	bl	15dbc <gtk_widget_hide@plt>
   1999c:	mov	r0, r8
   199a0:	bl	15da4 <gtk_widget_get_window@plt>
   199a4:	ldr	r3, [sp, #124]	; 0x7c
   199a8:	cmp	r3, #18
   199ac:	mov	r8, r0
   199b0:	beq	19b98 <g_strcmp0@plt+0x2f60>
   199b4:	bl	16254 <gdk_display_get_default@plt>
   199b8:	mov	r1, #150	; 0x96
   199bc:	bl	15ec4 <gdk_cursor_new_for_display@plt>
   199c0:	mov	r4, r0
   199c4:	mov	r1, r0
   199c8:	mov	r0, r8
   199cc:	bl	15c84 <gdk_window_set_cursor@plt>
   199d0:	mov	r0, r4
   199d4:	bl	16878 <g_object_unref@plt>
   199d8:	ldr	r1, [pc, #536]	; 19bf8 <g_strcmp0@plt+0x2fc0>
   199dc:	ldr	r0, [r5]
   199e0:	bl	16068 <gtk_builder_get_object@plt>
   199e4:	mov	r1, r7
   199e8:	bl	15d68 <g_type_check_instance_cast@plt>
   199ec:	ldr	r4, [sp, #124]	; 0x7c
   199f0:	mov	r8, r0
   199f4:	bl	15cc0 <gtk_label_get_type@plt>
   199f8:	cmp	r4, #18
   199fc:	mov	r9, r0
   19a00:	beq	19e18 <g_strcmp0@plt+0x31e0>
   19a04:	sub	r0, r4, #2
   19a08:	bics	r0, r0, #2
   19a0c:	beq	19d70 <g_strcmp0@plt+0x3138>
   19a10:	cmp	r4, #1
   19a14:	beq	19aec <g_strcmp0@plt+0x2eb4>
   19a18:	mov	r0, r4
   19a1c:	bl	1fd88 <g_strcmp0@plt+0x9150>
   19a20:	mov	r4, r0
   19a24:	mov	r1, r9
   19a28:	mov	r0, r8
   19a2c:	bl	15d68 <g_type_check_instance_cast@plt>
   19a30:	mov	r1, r4
   19a34:	bl	15ccc <gtk_label_set_label@plt>
   19a38:	mov	r0, r8
   19a3c:	bl	1686c <gtk_widget_show@plt>
   19a40:	ldr	r0, [r5]
   19a44:	ldr	r1, [pc, #456]	; 19c14 <g_strcmp0@plt+0x2fdc>
   19a48:	bl	16068 <gtk_builder_get_object@plt>
   19a4c:	mov	r1, r7
   19a50:	bl	15d68 <g_type_check_instance_cast@plt>
   19a54:	mov	r4, r0
   19a58:	bl	16440 <gtk_image_get_type@plt>
   19a5c:	mov	r1, r0
   19a60:	mov	r0, r4
   19a64:	bl	15d68 <g_type_check_instance_cast@plt>
   19a68:	mov	r5, r0
   19a6c:	ldr	r0, [sp, #124]	; 0x7c
   19a70:	bl	21014 <g_strcmp0@plt+0xa3dc>
   19a74:	mov	r2, #4
   19a78:	mov	r1, r0
   19a7c:	mov	r0, r5
   19a80:	bl	16a40 <gtk_image_set_from_icon_name@plt>
   19a84:	mov	r0, r4
   19a88:	bl	1686c <gtk_widget_show@plt>
   19a8c:	b	196dc <g_strcmp0@plt+0x2aa4>
   19a90:	ldr	r5, [pc, #316]	; 19bd4 <g_strcmp0@plt+0x2f9c>
   19a94:	ldr	r1, [pc, #384]	; 19c1c <g_strcmp0@plt+0x2fe4>
   19a98:	ldr	r0, [r5]
   19a9c:	bl	16068 <gtk_builder_get_object@plt>
   19aa0:	mov	r7, r0
   19aa4:	bl	15d14 <gtk_widget_get_type@plt>
   19aa8:	mov	r1, r0
   19aac:	mov	r0, r7
   19ab0:	bl	15d68 <g_type_check_instance_cast@plt>
   19ab4:	ldr	r1, [pc, #320]	; 19bfc <g_strcmp0@plt+0x2fc4>
   19ab8:	mov	r3, r4
   19abc:	add	r2, sp, #156	; 0x9c
   19ac0:	mov	r7, r0
   19ac4:	ldr	r0, [r5, #36]	; 0x24
   19ac8:	bl	165cc <g_object_get@plt>
   19acc:	ldr	r2, [sp, #108]	; 0x6c
   19ad0:	ldr	r3, [sp, #156]	; 0x9c
   19ad4:	mov	r0, r7
   19ad8:	orrs	r3, r2, r3
   19adc:	movne	r1, #1
   19ae0:	moveq	r1, #0
   19ae4:	bl	16c08 <gtk_widget_set_sensitive@plt>
   19ae8:	b	196dc <g_strcmp0@plt+0x2aa4>
   19aec:	ldr	r4, [pc, #284]	; 19c10 <g_strcmp0@plt+0x2fd8>
   19af0:	b	19a24 <g_strcmp0@plt+0x2dec>
   19af4:	ldr	r2, [sp, #136]	; 0x88
   19af8:	ldr	r0, [pc, #256]	; 19c00 <g_strcmp0@plt+0x2fc8>
   19afc:	mov	lr, #8
   19b00:	mul	ip, r2, r3
   19b04:	str	r7, [sp, #8]
   19b08:	add	r1, sp, #156	; 0x9c
   19b0c:	umull	r0, ip, r0, ip
   19b10:	ldr	r0, [r8, #16]
   19b14:	str	lr, [sp]
   19b18:	sub	r2, r2, ip, lsr #5
   19b1c:	str	r2, [sp, #4]
   19b20:	mov	r2, #9
   19b24:	bl	16164 <gtk_tree_store_set@plt>
   19b28:	b	1992c <g_strcmp0@plt+0x2cf4>
   19b2c:	ldr	r3, [sp, #140]	; 0x8c
   19b30:	ldr	r0, [r5, #16]
   19b34:	cmp	r3, #18
   19b38:	beq	19ebc <g_strcmp0@plt+0x3284>
   19b3c:	mvn	r2, #0
   19b40:	str	r2, [sp]
   19b44:	mov	r1, r8
   19b48:	mov	r2, #10
   19b4c:	bl	16164 <gtk_tree_store_set@plt>
   19b50:	b	19808 <g_strcmp0@plt+0x2bd0>
   19b54:	ldr	r0, [r5, #84]	; 0x54
   19b58:	bl	16518 <g_free@plt>
   19b5c:	ldr	r0, [sp, #128]	; 0x80
   19b60:	bl	15fe4 <g_strdup@plt>
   19b64:	str	r0, [r5, #84]	; 0x54
   19b68:	b	197b8 <g_strcmp0@plt+0x2b80>
   19b6c:	mov	r1, #3
   19b70:	mov	r0, r9
   19b74:	bl	1617c <gtk_tree_view_get_column@plt>
   19b78:	vldr	s1, [pc, #48]	; 19bb0 <g_strcmp0@plt+0x2f78>
   19b7c:	mov	r3, #0
   19b80:	mov	r1, r4
   19b84:	vmov.f32	s0, s1
   19b88:	mov	r2, r0
   19b8c:	mov	r0, r9
   19b90:	bl	16998 <gtk_tree_view_scroll_to_cell@plt>
   19b94:	b	197fc <g_strcmp0@plt+0x2bc4>
   19b98:	mov	r1, r4
   19b9c:	bl	15c84 <gdk_window_set_cursor@plt>
   19ba0:	b	199d8 <g_strcmp0@plt+0x2da0>
   19ba4:	nop			; (mov r0, r0)
   19ba8:	andeq	r0, r0, r0
   19bac:	subsmi	r0, r9, r0
   19bb0:	andeq	r0, r0, r0
   19bb4:	andeq	r6, r2, r4, ror #20
   19bb8:	andeq	ip, r3, r0, asr lr
   19bbc:	andeq	r6, r2, r8, ror sl
   19bc0:	andeq	r6, r2, r8, lsl #21
   19bc4:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   19bc8:	andeq	r6, r2, r4, asr sl
   19bcc:	andeq	r6, r2, ip, asr sl
   19bd0:	andeq	r6, r2, r0, asr #16
   19bd4:	andeq	sp, r3, r0, lsl r6
   19bd8:	andeq	ip, r2, r4, ror sl
   19bdc:	andeq	r6, r2, r4, lsr r8
   19be0:	andeq	r6, r2, r4, asr #5
   19be4:	andeq	r6, r2, r4, lsl #22
   19be8:	andeq	r6, r2, r4, ror #22
   19bec:	andeq	r6, r2, r4, lsl fp
   19bf0:	andeq	r6, r2, r0, lsr #22
   19bf4:	andeq	r6, r2, ip, lsr #22
   19bf8:	andeq	r6, r2, ip, lsl r7
   19bfc:	andeq	r6, r2, r0, lsr #9
   19c00:	mvnpl	r8, pc, lsl r5
   19c04:	ldrdeq	r6, [r2], -r8
   19c08:	strdeq	r6, [r2], -r0
   19c0c:	andeq	r6, r2, r8, asr #22
   19c10:	andeq	r7, r2, r8, ror #22
   19c14:	andeq	r6, r2, r8, lsr fp
   19c18:	andeq	r6, r2, r8, lsl #13
   19c1c:	andeq	r6, r2, r0, asr r3
   19c20:	andeq	r6, r2, ip, lsr #21
   19c24:	andeq	r6, r2, r4, ror fp
   19c28:	andeq	r9, r1, r0, lsl r5
   19c2c:	andeq	r7, r1, r4, lsr #3
   19c30:			; <UNDEFINED> instruction: 0x00026abc
   19c34:	muleq	r2, r4, sl
   19c38:	andeq	r6, r2, r0, ror #4
   19c3c:	bl	15d14 <gtk_widget_get_type@plt>
   19c40:	mov	r1, r0
   19c44:	mov	r0, r9
   19c48:	bl	15d68 <g_type_check_instance_cast@plt>
   19c4c:	bl	15f60 <gtk_widget_get_style_context@plt>
   19c50:	ldr	r2, [sp, #132]	; 0x84
   19c54:	ldr	r1, [sp, #128]	; 0x80
   19c58:	bl	221e8 <g_strcmp0@plt+0xb5b0>
   19c5c:	ldr	r3, [sp, #128]	; 0x80
   19c60:	ldr	r2, [pc, #-100]	; 19c04 <g_strcmp0@plt+0x2fcc>
   19c64:	mov	r1, #128	; 0x80
   19c68:	mov	sl, r0
   19c6c:	str	r0, [sp]
   19c70:	ldr	r0, [pc, #-64]	; 19c38 <g_strcmp0@plt+0x3000>
   19c74:	bl	15dec <g_log@plt>
   19c78:	mov	r2, r4
   19c7c:	mov	r1, r8
   19c80:	ldr	r0, [r5, #16]
   19c84:	bl	15abc <gtk_tree_store_append@plt>
   19c88:	ldr	ip, [sp, #140]	; 0x8c
   19c8c:	mov	r0, #2
   19c90:	str	r0, [sp, #8]
   19c94:	mvn	r0, #0
   19c98:	mov	r1, #1
   19c9c:	ldr	r3, [sp, #128]	; 0x80
   19ca0:	str	ip, [sp, #12]
   19ca4:	str	r0, [sp, #96]	; 0x60
   19ca8:	str	r0, [sp, #92]	; 0x5c
   19cac:	mov	ip, #13
   19cb0:	mov	lr, #8
   19cb4:	mov	r0, #7
   19cb8:	mov	r2, r4
   19cbc:	str	r1, [sp]
   19cc0:	str	r4, [sp, #84]	; 0x54
   19cc4:	str	r4, [sp, #76]	; 0x4c
   19cc8:	str	r4, [sp, #68]	; 0x44
   19ccc:	str	r4, [sp, #60]	; 0x3c
   19cd0:	str	r4, [sp, #44]	; 0x2c
   19cd4:	str	r4, [sp, #36]	; 0x24
   19cd8:	str	r1, [sp, #52]	; 0x34
   19cdc:	str	r1, [sp, #28]
   19ce0:	str	r1, [sp, #20]
   19ce4:	str	ip, [sp, #88]	; 0x58
   19ce8:	str	lr, [sp, #72]	; 0x48
   19cec:	str	r0, [sp, #64]	; 0x40
   19cf0:	mov	lr, #5
   19cf4:	mov	r4, #9
   19cf8:	mov	ip, #10
   19cfc:	mov	r1, #6
   19d00:	mov	r0, #4
   19d04:	str	lr, [sp, #40]	; 0x28
   19d08:	str	r3, [sp, #4]
   19d0c:	str	r4, [sp, #80]	; 0x50
   19d10:	mov	r3, sl
   19d14:	str	ip, [sp, #56]	; 0x38
   19d18:	str	r1, [sp, #48]	; 0x30
   19d1c:	mov	ip, #14
   19d20:	mov	r1, r8
   19d24:	mov	r4, #3
   19d28:	str	r0, [sp, #32]
   19d2c:	ldr	r0, [r5, #16]
   19d30:	str	ip, [sp, #24]
   19d34:	str	r4, [sp, #16]
   19d38:	bl	16164 <gtk_tree_store_set@plt>
   19d3c:	mov	r0, sl
   19d40:	bl	16518 <g_free@plt>
   19d44:	ldr	r1, [sp, #128]	; 0x80
   19d48:	mov	r0, r7
   19d4c:	bl	19580 <g_strcmp0@plt+0x2948>
   19d50:	subs	r4, r0, #0
   19d54:	bne	197cc <g_strcmp0@plt+0x2b94>
   19d58:	ldr	r3, [sp, #128]	; 0x80
   19d5c:	ldr	r2, [pc, #-348]	; 19c08 <g_strcmp0@plt+0x2fd0>
   19d60:	mov	r1, #16
   19d64:	ldr	r0, [pc, #-308]	; 19c38 <g_strcmp0@plt+0x3000>
   19d68:	bl	15dec <g_log@plt>
   19d6c:	b	196dc <g_strcmp0@plt+0x2aa4>
   19d70:	mov	r2, #5
   19d74:	ldr	r1, [pc, #-368]	; 19c0c <g_strcmp0@plt+0x2fd4>
   19d78:	bl	16530 <dcgettext@plt>
   19d7c:	mov	r4, r0
   19d80:	b	19a24 <g_strcmp0@plt+0x2dec>
   19d84:	ldr	r1, [sp, #128]	; 0x80
   19d88:	bl	19580 <g_strcmp0@plt+0x2948>
   19d8c:	subs	r4, r0, #0
   19d90:	beq	19e94 <g_strcmp0@plt+0x325c>
   19d94:	ldr	r3, [sp, #140]	; 0x8c
   19d98:	cmp	r3, #18
   19d9c:	beq	19f04 <g_strcmp0@plt+0x32cc>
   19da0:	mov	r1, r4
   19da4:	mov	r0, r7
   19da8:	bl	15f3c <gtk_tree_row_reference_new@plt>
   19dac:	subs	r8, r0, #0
   19db0:	beq	19e94 <g_strcmp0@plt+0x325c>
   19db4:	ldr	r2, [pc, #-404]	; 19c28 <g_strcmp0@plt+0x2ff0>
   19db8:	mov	r1, r8
   19dbc:	ldr	r0, [r5, #12]
   19dc0:	bl	16950 <g_slist_find_custom@plt>
   19dc4:	cmp	r0, #0
   19dc8:	bne	19e7c <g_strcmp0@plt+0x3244>
   19dcc:	ldr	r2, [r5, #80]	; 0x50
   19dd0:	cmp	r2, #0
   19dd4:	beq	19fac <g_strcmp0@plt+0x3374>
   19dd8:	mov	r1, r8
   19ddc:	ldr	r0, [r5, #12]
   19de0:	bl	15ca8 <g_slist_prepend@plt>
   19de4:	add	r8, sp, #156	; 0x9c
   19de8:	str	r0, [r5, #12]
   19dec:	mov	r0, r4
   19df0:	bl	16170 <gtk_tree_path_free@plt>
   19df4:	b	197a4 <g_strcmp0@plt+0x2b6c>
   19df8:	mvn	r3, #0
   19dfc:	str	r3, [sp]
   19e00:	mov	r2, #3
   19e04:	mov	r3, #1
   19e08:	mov	r1, r8
   19e0c:	ldr	r0, [r5, #16]
   19e10:	bl	16164 <gtk_tree_store_set@plt>
   19e14:	b	197e8 <g_strcmp0@plt+0x2bb0>
   19e18:	mov	r1, r0
   19e1c:	mov	r0, r8
   19e20:	bl	15d68 <g_type_check_instance_cast@plt>
   19e24:	ldr	r1, [pc, #-540]	; 19c10 <g_strcmp0@plt+0x2fd8>
   19e28:	bl	15ccc <gtk_label_set_label@plt>
   19e2c:	ldr	r1, [pc, #-544]	; 19c14 <g_strcmp0@plt+0x2fdc>
   19e30:	ldr	r0, [r5]
   19e34:	bl	16068 <gtk_builder_get_object@plt>
   19e38:	mov	r1, r7
   19e3c:	bl	15d68 <g_type_check_instance_cast@plt>
   19e40:	bl	15dbc <gtk_widget_hide@plt>
   19e44:	ldr	r1, [pc, #-564]	; 19c18 <g_strcmp0@plt+0x2fe0>
   19e48:	ldr	r0, [r5]
   19e4c:	bl	16068 <gtk_builder_get_object@plt>
   19e50:	mov	r1, r7
   19e54:	bl	15d68 <g_type_check_instance_cast@plt>
   19e58:	bl	15dbc <gtk_widget_hide@plt>
   19e5c:	ldr	r0, [r5]
   19e60:	ldr	r1, [pc, #-588]	; 19c1c <g_strcmp0@plt+0x2fe4>
   19e64:	bl	16068 <gtk_builder_get_object@plt>
   19e68:	mov	r1, r7
   19e6c:	bl	15d68 <g_type_check_instance_cast@plt>
   19e70:	mov	r1, #1
   19e74:	bl	16c08 <gtk_widget_set_sensitive@plt>
   19e78:	b	196dc <g_strcmp0@plt+0x2aa4>
   19e7c:	ldr	r0, [pc, #-588]	; 19c38 <g_strcmp0@plt+0x3000>
   19e80:	ldr	r2, [pc, #-616]	; 19c20 <g_strcmp0@plt+0x2fe8>
   19e84:	mov	r1, #128	; 0x80
   19e88:	bl	15dec <g_log@plt>
   19e8c:	mov	r0, r8
   19e90:	bl	15c3c <gtk_tree_row_reference_free@plt>
   19e94:	add	r8, sp, #156	; 0x9c
   19e98:	b	19dec <g_strcmp0@plt+0x31b4>
   19e9c:	ldr	r0, [sp, #140]	; 0x8c
   19ea0:	bl	16800 <pk_item_progress_get_package_id@plt>
   19ea4:	ldr	r2, [pc, #-648]	; 19c24 <g_strcmp0@plt+0x2fec>
   19ea8:	mov	r1, #128	; 0x80
   19eac:	mov	r3, r0
   19eb0:	ldr	r0, [pc, #-640]	; 19c38 <g_strcmp0@plt+0x3000>
   19eb4:	bl	15dec <g_log@plt>
   19eb8:	b	196dc <g_strcmp0@plt+0x2aa4>
   19ebc:	mvn	r9, #0
   19ec0:	mov	r3, #0
   19ec4:	mov	r2, #8
   19ec8:	mov	r1, r8
   19ecc:	str	r9, [sp]
   19ed0:	bl	16164 <gtk_tree_store_set@plt>
   19ed4:	add	r3, sp, #140	; 0x8c
   19ed8:	mov	r0, r7
   19edc:	str	r9, [sp]
   19ee0:	mov	r2, #10
   19ee4:	mov	r1, r8
   19ee8:	bl	16b30 <gtk_tree_model_get@plt>
   19eec:	ldr	r3, [sp, #140]	; 0x8c
   19ef0:	ldr	r0, [r5, #16]
   19ef4:	cmp	r3, #25
   19ef8:	addls	r3, r3, #26
   19efc:	strls	r3, [sp, #140]	; 0x8c
   19f00:	b	19b3c <g_strcmp0@plt+0x2f04>
   19f04:	add	r8, sp, #156	; 0x9c
   19f08:	mov	r2, r4
   19f0c:	mov	r1, r8
   19f10:	mov	r0, r7
   19f14:	bl	16adc <gtk_tree_model_get_iter@plt>
   19f18:	bl	15e58 <gtk_tree_store_get_type@plt>
   19f1c:	mov	r1, r0
   19f20:	mov	r0, r7
   19f24:	bl	15d68 <g_type_check_instance_cast@plt>
   19f28:	mvn	r3, #0
   19f2c:	str	r3, [sp]
   19f30:	mov	r2, #13
   19f34:	mov	r1, r8
   19f38:	bl	16164 <gtk_tree_store_set@plt>
   19f3c:	mov	r1, r4
   19f40:	mov	r0, r7
   19f44:	bl	15f3c <gtk_tree_row_reference_new@plt>
   19f48:	ldr	r2, [pc, #-808]	; 19c28 <g_strcmp0@plt+0x2ff0>
   19f4c:	mov	r1, r0
   19f50:	mov	fp, r0
   19f54:	ldr	r0, [r5, #12]
   19f58:	bl	16950 <g_slist_find_custom@plt>
   19f5c:	mov	sl, r0
   19f60:	mov	r0, fp
   19f64:	bl	15c3c <gtk_tree_row_reference_free@plt>
   19f68:	cmp	sl, #0
   19f6c:	beq	19fc8 <g_strcmp0@plt+0x3390>
   19f70:	mov	r1, sl
   19f74:	ldr	r0, [r5, #12]
   19f78:	bl	1632c <g_slist_remove_link@plt>
   19f7c:	str	r0, [r5, #12]
   19f80:	ldr	r0, [sl]
   19f84:	bl	15c3c <gtk_tree_row_reference_free@plt>
   19f88:	mov	r0, sl
   19f8c:	bl	16c20 <g_slist_free@plt>
   19f90:	ldr	sl, [r5, #12]
   19f94:	cmp	sl, #0
   19f98:	bne	19dec <g_strcmp0@plt+0x31b4>
   19f9c:	ldr	r0, [r5, #80]	; 0x50
   19fa0:	bl	16c14 <g_source_remove@plt>
   19fa4:	str	sl, [r5, #80]	; 0x50
   19fa8:	b	19dec <g_strcmp0@plt+0x31b4>
   19fac:	ldr	r1, [pc, #-904]	; 19c2c <g_strcmp0@plt+0x2ff4>
   19fb0:	mov	r0, #60	; 0x3c
   19fb4:	bl	15c18 <g_timeout_add@plt>
   19fb8:	ldr	r1, [pc, #-912]	; 19c30 <g_strcmp0@plt+0x2ff8>
   19fbc:	str	r0, [r5, #80]	; 0x50
   19fc0:	bl	1692c <g_source_set_name_by_id@plt>
   19fc4:	b	19dd8 <g_strcmp0@plt+0x31a0>
   19fc8:	ldr	r2, [pc, #-924]	; 19c34 <g_strcmp0@plt+0x2ffc>
   19fcc:	mov	r1, #16
   19fd0:	ldr	r0, [pc, #-928]	; 19c38 <g_strcmp0@plt+0x3000>
   19fd4:	bl	15dec <g_log@plt>
   19fd8:	b	19dec <g_strcmp0@plt+0x31b4>
   19fdc:	bl	164ac <__stack_chk_fail@plt>
   19fe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19fe4:	sub	sp, sp, #60	; 0x3c
   19fe8:	ldr	r8, [pc, #612]	; 1a254 <g_strcmp0@plt+0x361c>
   19fec:	mov	r3, #0
   19ff0:	str	r3, [sp, #24]
   19ff4:	ldr	r3, [r8]
   19ff8:	add	r2, sp, #24
   19ffc:	str	r3, [sp, #52]	; 0x34
   1a000:	bl	160a4 <pk_client_generic_finish@plt>
   1a004:	subs	r3, r0, #0
   1a008:	str	r3, [sp, #20]
   1a00c:	beq	1a228 <g_strcmp0@plt+0x35f0>
   1a010:	bl	15e64 <pk_results_get_error_code@plt>
   1a014:	subs	r4, r0, #0
   1a018:	beq	1a0d4 <g_strcmp0@plt+0x349c>
   1a01c:	bl	15f24 <pk_error_get_code@plt>
   1a020:	bl	16110 <pk_error_enum_to_string@plt>
   1a024:	mov	r5, r0
   1a028:	mov	r0, r4
   1a02c:	bl	15f0c <pk_error_get_details@plt>
   1a030:	ldr	r2, [pc, #544]	; 1a258 <g_strcmp0@plt+0x3620>
   1a034:	mov	r3, r5
   1a038:	mov	r1, #16
   1a03c:	str	r0, [sp]
   1a040:	ldr	r0, [pc, #532]	; 1a25c <g_strcmp0@plt+0x3624>
   1a044:	bl	15dec <g_log@plt>
   1a048:	ldr	r3, [pc, #528]	; 1a260 <g_strcmp0@plt+0x3628>
   1a04c:	ldr	r1, [pc, #528]	; 1a264 <g_strcmp0@plt+0x362c>
   1a050:	ldr	r0, [r3]
   1a054:	bl	16068 <gtk_builder_get_object@plt>
   1a058:	mov	r5, r0
   1a05c:	bl	16bfc <gtk_window_get_type@plt>
   1a060:	mov	r1, r0
   1a064:	mov	r0, r5
   1a068:	bl	15d68 <g_type_check_instance_cast@plt>
   1a06c:	mov	r5, r0
   1a070:	mov	r0, r4
   1a074:	bl	15f24 <pk_error_get_code@plt>
   1a078:	bl	1ee78 <g_strcmp0@plt+0x8240>
   1a07c:	mov	r6, r0
   1a080:	mov	r0, r4
   1a084:	bl	15f24 <pk_error_get_code@plt>
   1a088:	bl	1f508 <g_strcmp0@plt+0x88d0>
   1a08c:	mov	r7, r0
   1a090:	mov	r0, r4
   1a094:	bl	15f0c <pk_error_get_details@plt>
   1a098:	mov	r2, r7
   1a09c:	mov	r1, r6
   1a0a0:	mov	r3, r0
   1a0a4:	mov	r0, r5
   1a0a8:	bl	24790 <g_strcmp0@plt+0xdb58>
   1a0ac:	mov	r0, r4
   1a0b0:	bl	16878 <g_object_unref@plt>
   1a0b4:	ldr	r0, [sp, #20]
   1a0b8:	bl	16878 <g_object_unref@plt>
   1a0bc:	ldr	r2, [sp, #52]	; 0x34
   1a0c0:	ldr	r3, [r8]
   1a0c4:	cmp	r2, r3
   1a0c8:	bne	1a250 <g_strcmp0@plt+0x3618>
   1a0cc:	add	sp, sp, #60	; 0x3c
   1a0d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0d4:	ldr	r0, [sp, #20]
   1a0d8:	bl	1683c <pk_results_get_update_detail_array@plt>
   1a0dc:	ldr	r6, [r0, #4]
   1a0e0:	mov	r5, r0
   1a0e4:	cmp	r6, #0
   1a0e8:	beq	1a1e8 <g_strcmp0@plt+0x35b0>
   1a0ec:	ldr	r3, [pc, #364]	; 1a260 <g_strcmp0@plt+0x3628>
   1a0f0:	ldr	r1, [pc, #368]	; 1a268 <g_strcmp0@plt+0x3630>
   1a0f4:	ldr	r0, [r3]
   1a0f8:	bl	16068 <gtk_builder_get_object@plt>
   1a0fc:	mov	r6, r0
   1a100:	bl	164c4 <gtk_tree_view_get_type@plt>
   1a104:	mov	r1, r0
   1a108:	mov	r0, r6
   1a10c:	bl	15d68 <g_type_check_instance_cast@plt>
   1a110:	bl	15f6c <gtk_tree_view_get_model@plt>
   1a114:	ldr	r3, [r5, #4]
   1a118:	cmp	r3, #0
   1a11c:	mov	r7, r0
   1a120:	beq	1a21c <g_strcmp0@plt+0x35e4>
   1a124:	ldr	sl, [pc, #320]	; 1a26c <g_strcmp0@plt+0x3634>
   1a128:	add	fp, sp, #32
   1a12c:	b	1a198 <g_strcmp0@plt+0x3560>
   1a130:	mov	r2, r9
   1a134:	add	r1, sp, #36	; 0x24
   1a138:	mov	r0, r7
   1a13c:	bl	16adc <gtk_tree_model_get_iter@plt>
   1a140:	mov	r0, r9
   1a144:	bl	16170 <gtk_tree_path_free@plt>
   1a148:	ldr	r3, [pc, #272]	; 1a260 <g_strcmp0@plt+0x3628>
   1a14c:	mov	r0, r6
   1a150:	ldr	r6, [r3, #16]
   1a154:	bl	15aec <g_object_ref@plt>
   1a158:	ldr	r1, [sp, #32]
   1a15c:	mvn	r2, #0
   1a160:	mov	r3, #6
   1a164:	stmib	sp, {r1, r2}
   1a168:	str	r3, [sp]
   1a16c:	mov	r2, #12
   1a170:	add	r1, sp, #36	; 0x24
   1a174:	mov	r3, r0
   1a178:	mov	r0, r6
   1a17c:	bl	16164 <gtk_tree_store_set@plt>
   1a180:	ldr	r0, [sp, #28]
   1a184:	bl	16518 <g_free@plt>
   1a188:	ldr	r3, [r5, #4]
   1a18c:	add	r4, r4, #1
   1a190:	cmp	r3, r4
   1a194:	bls	1a21c <g_strcmp0@plt+0x35e4>
   1a198:	ldr	r1, [r5]
   1a19c:	mov	r0, #0
   1a1a0:	mov	r3, sl
   1a1a4:	ldr	r6, [r1, r4, lsl #2]
   1a1a8:	add	r2, sp, #28
   1a1ac:	ldr	r1, [pc, #188]	; 1a270 <g_strcmp0@plt+0x3638>
   1a1b0:	str	r0, [sp, #4]
   1a1b4:	str	fp, [sp]
   1a1b8:	mov	r0, r6
   1a1bc:	bl	165cc <g_object_get@plt>
   1a1c0:	ldr	r1, [sp, #28]
   1a1c4:	mov	r0, r7
   1a1c8:	bl	19580 <g_strcmp0@plt+0x2948>
   1a1cc:	subs	r9, r0, #0
   1a1d0:	bne	1a130 <g_strcmp0@plt+0x34f8>
   1a1d4:	ldr	r2, [pc, #152]	; 1a274 <g_strcmp0@plt+0x363c>
   1a1d8:	mov	r1, #16
   1a1dc:	ldr	r0, [pc, #120]	; 1a25c <g_strcmp0@plt+0x3624>
   1a1e0:	bl	15dec <g_log@plt>
   1a1e4:	b	1a180 <g_strcmp0@plt+0x3548>
   1a1e8:	mov	r2, #5
   1a1ec:	ldr	r1, [pc, #132]	; 1a278 <g_strcmp0@plt+0x3640>
   1a1f0:	mov	r0, r6
   1a1f4:	bl	16530 <dcgettext@plt>
   1a1f8:	mov	r2, #5
   1a1fc:	ldr	r1, [pc, #120]	; 1a27c <g_strcmp0@plt+0x3644>
   1a200:	mov	r4, r0
   1a204:	mov	r0, r6
   1a208:	bl	16530 <dcgettext@plt>
   1a20c:	mov	r2, r6
   1a210:	mov	r1, r0
   1a214:	mov	r0, r4
   1a218:	bl	17058 <g_strcmp0@plt+0x420>
   1a21c:	mov	r0, r5
   1a220:	bl	169c8 <g_ptr_array_unref@plt>
   1a224:	b	1a0b4 <g_strcmp0@plt+0x347c>
   1a228:	mov	r2, #5
   1a22c:	ldr	r1, [pc, #68]	; 1a278 <g_strcmp0@plt+0x3640>
   1a230:	bl	16530 <dcgettext@plt>
   1a234:	ldr	r3, [sp, #24]
   1a238:	ldr	r1, [sp, #20]
   1a23c:	ldr	r2, [r3, #8]
   1a240:	bl	17058 <g_strcmp0@plt+0x420>
   1a244:	ldr	r0, [sp, #24]
   1a248:	bl	15c78 <g_error_free@plt>
   1a24c:	b	1a0bc <g_strcmp0@plt+0x3484>
   1a250:	bl	164ac <__stack_chk_fail@plt>
   1a254:	andeq	ip, r3, r0, asr lr
   1a258:	andeq	r6, r2, r8, lsr #23
   1a25c:	andeq	r6, r2, r0, ror #4
   1a260:	andeq	sp, r3, r0, lsl r6
   1a264:	andeq	r6, r2, ip, lsr #4
   1a268:	andeq	r6, r2, r4, asr #5
   1a26c:	andeq	r6, r2, ip, ror #23
   1a270:	andeq	r6, r2, r4, lsr r8
   1a274:	strdeq	r6, [r2], -r4
   1a278:	andeq	r6, r2, r8, lsl #23
   1a27c:	ldrdeq	r6, [r2], -r0
   1a280:	push	{r4, r5, r6, lr}
   1a284:	sub	sp, sp, #16
   1a288:	ldr	r5, [pc, #172]	; 1a33c <g_strcmp0@plt+0x3704>
   1a28c:	subs	r4, r0, #0
   1a290:	ldr	r3, [r5]
   1a294:	str	r3, [sp, #12]
   1a298:	beq	1a2f8 <g_strcmp0@plt+0x36c0>
   1a29c:	ldrb	r3, [r4]
   1a2a0:	cmp	r3, #0
   1a2a4:	moveq	r4, r3
   1a2a8:	beq	1a2f8 <g_strcmp0@plt+0x36c0>
   1a2ac:	add	r1, sp, #4
   1a2b0:	bl	16bf0 <g_time_val_from_iso8601@plt>
   1a2b4:	cmp	r0, #0
   1a2b8:	beq	1a314 <g_strcmp0@plt+0x36dc>
   1a2bc:	bl	16278 <g_date_new@plt>
   1a2c0:	add	r1, sp, #4
   1a2c4:	mov	r6, r0
   1a2c8:	bl	16428 <g_date_set_time_val@plt>
   1a2cc:	mov	r0, #100	; 0x64
   1a2d0:	bl	169f8 <g_malloc0@plt>
   1a2d4:	mov	r3, r6
   1a2d8:	ldr	r2, [pc, #96]	; 1a340 <g_strcmp0@plt+0x3708>
   1a2dc:	mov	r1, #100	; 0x64
   1a2e0:	mov	r4, r0
   1a2e4:	bl	15aa4 <g_date_strftime@plt>
   1a2e8:	cmp	r6, #0
   1a2ec:	beq	1a2f8 <g_strcmp0@plt+0x36c0>
   1a2f0:	mov	r0, r6
   1a2f4:	bl	15e10 <g_date_free@plt>
   1a2f8:	ldr	r2, [sp, #12]
   1a2fc:	ldr	r3, [r5]
   1a300:	mov	r0, r4
   1a304:	cmp	r2, r3
   1a308:	bne	1a338 <g_strcmp0@plt+0x3700>
   1a30c:	add	sp, sp, #16
   1a310:	pop	{r4, r5, r6, pc}
   1a314:	mov	r3, r4
   1a318:	ldr	r2, [pc, #36]	; 1a344 <g_strcmp0@plt+0x370c>
   1a31c:	mov	r1, #16
   1a320:	ldr	r0, [pc, #32]	; 1a348 <g_strcmp0@plt+0x3710>
   1a324:	bl	15dec <g_log@plt>
   1a328:	mov	r0, r4
   1a32c:	bl	15fe4 <g_strdup@plt>
   1a330:	mov	r4, r0
   1a334:	b	1a2f8 <g_strcmp0@plt+0x36c0>
   1a338:	bl	164ac <__stack_chk_fail@plt>
   1a33c:	andeq	ip, r3, r0, asr lr
   1a340:	andeq	r6, r2, r0, asr #24
   1a344:	andeq	r6, r2, r4, lsl ip
   1a348:	andeq	r6, r2, r0, ror #4
   1a34c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a350:	sub	sp, sp, #228	; 0xe4
   1a354:	ldr	r6, [pc, #1736]	; 1aa24 <g_strcmp0@plt+0x3dec>
   1a358:	mov	r5, #0
   1a35c:	add	r2, sp, #132	; 0x84
   1a360:	ldr	r3, [r6]
   1a364:	add	r1, sp, #76	; 0x4c
   1a368:	str	r3, [sp, #220]	; 0xdc
   1a36c:	str	r5, [sp, #72]	; 0x48
   1a370:	str	r5, [sp, #80]	; 0x50
   1a374:	bl	165d8 <gtk_tree_selection_get_selected@plt>
   1a378:	cmp	r0, r5
   1a37c:	bne	1a3a0 <g_strcmp0@plt+0x3768>
   1a380:	ldr	r0, [sp, #72]	; 0x48
   1a384:	bl	16518 <g_free@plt>
   1a388:	ldr	r2, [sp, #220]	; 0xdc
   1a38c:	ldr	r3, [r6]
   1a390:	cmp	r2, r3
   1a394:	bne	1aa20 <g_strcmp0@plt+0x3de8>
   1a398:	add	sp, sp, #228	; 0xe4
   1a39c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a3a0:	add	r2, sp, #72	; 0x48
   1a3a4:	ldr	r4, [pc, #1660]	; 1aa28 <g_strcmp0@plt+0x3df0>
   1a3a8:	mvn	r7, #0
   1a3ac:	mov	r3, #1
   1a3b0:	add	r1, sp, #132	; 0x84
   1a3b4:	stmib	sp, {r2, r7}
   1a3b8:	str	r3, [sp]
   1a3bc:	mov	r2, #12
   1a3c0:	add	r3, sp, #80	; 0x50
   1a3c4:	ldr	r0, [sp, #76]	; 0x4c
   1a3c8:	bl	16b30 <gtk_tree_model_get@plt>
   1a3cc:	ldr	r1, [pc, #1624]	; 1aa2c <g_strcmp0@plt+0x3df4>
   1a3d0:	ldr	r0, [r4]
   1a3d4:	bl	16068 <gtk_builder_get_object@plt>
   1a3d8:	mov	r8, r0
   1a3dc:	bl	15d14 <gtk_widget_get_type@plt>
   1a3e0:	mov	r1, r0
   1a3e4:	mov	r0, r8
   1a3e8:	bl	15d68 <g_type_check_instance_cast@plt>
   1a3ec:	ldr	r1, [sp, #72]	; 0x48
   1a3f0:	subs	r1, r1, r5
   1a3f4:	movne	r1, #1
   1a3f8:	bl	16c08 <gtk_widget_set_sensitive@plt>
   1a3fc:	ldr	r0, [sp, #80]	; 0x50
   1a400:	cmp	r0, r5
   1a404:	beq	1a754 <g_strcmp0@plt+0x3b1c>
   1a408:	ldr	r3, [sp, #72]	; 0x48
   1a40c:	str	r0, [sp]
   1a410:	ldr	r2, [pc, #1560]	; 1aa30 <g_strcmp0@plt+0x3df8>
   1a414:	mov	r1, #128	; 0x80
   1a418:	ldr	r0, [pc, #1556]	; 1aa34 <g_strcmp0@plt+0x3dfc>
   1a41c:	bl	15dec <g_log@plt>
   1a420:	mov	r2, #5
   1a424:	ldr	r1, [pc, #1548]	; 1aa38 <g_strcmp0@plt+0x3e00>
   1a428:	mov	r0, r5
   1a42c:	ldr	r8, [r4, #52]	; 0x34
   1a430:	bl	16530 <dcgettext@plt>
   1a434:	mov	r2, r7
   1a438:	mov	r1, r0
   1a43c:	mov	r0, r8
   1a440:	bl	16350 <gtk_text_buffer_set_text@plt>
   1a444:	ldr	r2, [pc, #1520]	; 1aa3c <g_strcmp0@plt+0x3e04>
   1a448:	ldr	r3, [pc, #1520]	; 1aa40 <g_strcmp0@plt+0x3e08>
   1a44c:	ldr	r1, [pc, #1520]	; 1aa44 <g_strcmp0@plt+0x3e0c>
   1a450:	ldr	r0, [pc, #1520]	; 1aa48 <g_strcmp0@plt+0x3e10>
   1a454:	ldr	ip, [pc, #1520]	; 1aa4c <g_strcmp0@plt+0x3e14>
   1a458:	str	r2, [sp, #44]	; 0x2c
   1a45c:	ldr	r2, [pc, #1516]	; 1aa50 <g_strcmp0@plt+0x3e18>
   1a460:	str	r3, [sp, #20]
   1a464:	add	r3, sp, #120	; 0x78
   1a468:	str	r1, [sp, #36]	; 0x24
   1a46c:	str	r0, [sp, #28]
   1a470:	ldr	r1, [pc, #1500]	; 1aa54 <g_strcmp0@plt+0x3e1c>
   1a474:	ldr	r0, [pc, #1500]	; 1aa58 <g_strcmp0@plt+0x3e20>
   1a478:	str	ip, [sp, #12]
   1a47c:	str	r2, [sp, #4]
   1a480:	add	ip, sp, #116	; 0x74
   1a484:	add	r2, sp, #112	; 0x70
   1a488:	str	r3, [sp, #48]	; 0x30
   1a48c:	add	r3, sp, #108	; 0x6c
   1a490:	str	ip, [sp, #40]	; 0x28
   1a494:	str	r2, [sp, #32]
   1a498:	add	ip, sp, #104	; 0x68
   1a49c:	add	r2, sp, #100	; 0x64
   1a4a0:	str	r3, [sp, #24]
   1a4a4:	add	r3, sp, #96	; 0x60
   1a4a8:	add	lr, sp, #128	; 0x80
   1a4ac:	str	ip, [sp, #16]
   1a4b0:	str	r2, [sp, #8]
   1a4b4:	add	ip, sp, #124	; 0x7c
   1a4b8:	add	r2, sp, #92	; 0x5c
   1a4bc:	str	r3, [sp]
   1a4c0:	str	r1, [sp, #60]	; 0x3c
   1a4c4:	ldr	r3, [pc, #1424]	; 1aa5c <g_strcmp0@plt+0x3e24>
   1a4c8:	ldr	r1, [pc, #1424]	; 1aa60 <g_strcmp0@plt+0x3e28>
   1a4cc:	str	r0, [sp, #52]	; 0x34
   1a4d0:	ldr	r0, [sp, #80]	; 0x50
   1a4d4:	str	lr, [sp, #64]	; 0x40
   1a4d8:	str	ip, [sp, #56]	; 0x38
   1a4dc:	str	r5, [sp, #68]	; 0x44
   1a4e0:	bl	165cc <g_object_get@plt>
   1a4e4:	ldr	r1, [pc, #1400]	; 1aa64 <g_strcmp0@plt+0x3e2c>
   1a4e8:	ldr	r0, [r4]
   1a4ec:	bl	16068 <gtk_builder_get_object@plt>
   1a4f0:	mov	r5, r0
   1a4f4:	bl	164c4 <gtk_tree_view_get_type@plt>
   1a4f8:	mov	r1, r0
   1a4fc:	mov	r0, r5
   1a500:	bl	15d68 <g_type_check_instance_cast@plt>
   1a504:	bl	16614 <gtk_tree_view_get_selection@plt>
   1a508:	add	r2, sp, #148	; 0x94
   1a50c:	add	r1, sp, #84	; 0x54
   1a510:	bl	165d8 <gtk_tree_selection_get_selected@plt>
   1a514:	cmp	r0, #0
   1a518:	moveq	r3, #5
   1a51c:	streq	r3, [sp, #88]	; 0x58
   1a520:	bne	1a778 <g_strcmp0@plt+0x3b40>
   1a524:	mvn	r2, #0
   1a528:	ldr	r1, [pc, #1336]	; 1aa68 <g_strcmp0@plt+0x3e30>
   1a52c:	ldr	r0, [r4, #52]	; 0x34
   1a530:	bl	16350 <gtk_text_buffer_set_text@plt>
   1a534:	add	r1, sp, #164	; 0xa4
   1a538:	ldr	r0, [r4, #52]	; 0x34
   1a53c:	bl	16aac <gtk_text_buffer_get_start_iter@plt>
   1a540:	ldr	r3, [sp, #88]	; 0x58
   1a544:	cmp	r3, #4
   1a548:	beq	1a854 <g_strcmp0@plt+0x3c1c>
   1a54c:	cmp	r3, #6
   1a550:	beq	1a950 <g_strcmp0@plt+0x3d18>
   1a554:	cmp	r3, #7
   1a558:	beq	1a95c <g_strcmp0@plt+0x3d24>
   1a55c:	cmp	r3, #8
   1a560:	beq	1a9cc <g_strcmp0@plt+0x3d94>
   1a564:	cmp	r3, #9
   1a568:	beq	1a9d8 <g_strcmp0@plt+0x3da0>
   1a56c:	ldr	r0, [sp, #124]	; 0x7c
   1a570:	bl	1a280 <g_strcmp0@plt+0x3648>
   1a574:	mov	r7, r0
   1a578:	ldr	r0, [sp, #128]	; 0x80
   1a57c:	bl	1a280 <g_strcmp0@plt+0x3648>
   1a580:	adds	r5, r0, #0
   1a584:	movne	r5, #1
   1a588:	cmp	r7, #0
   1a58c:	moveq	r5, #0
   1a590:	cmp	r5, #0
   1a594:	mov	r8, r0
   1a598:	bne	1a7bc <g_strcmp0@plt+0x3b84>
   1a59c:	cmp	r7, #0
   1a5a0:	beq	1a5fc <g_strcmp0@plt+0x39c4>
   1a5a4:	mov	r2, #5
   1a5a8:	ldr	r1, [pc, #1212]	; 1aa6c <g_strcmp0@plt+0x3e34>
   1a5ac:	mov	r0, r5
   1a5b0:	bl	16530 <dcgettext@plt>
   1a5b4:	mov	r1, r7
   1a5b8:	bl	160e0 <g_strdup_printf@plt>
   1a5bc:	ldr	r3, [pc, #1196]	; 1aa70 <g_strcmp0@plt+0x3e38>
   1a5c0:	str	r5, [sp, #4]
   1a5c4:	str	r3, [sp]
   1a5c8:	add	r1, sp, #164	; 0xa4
   1a5cc:	mvn	r3, #0
   1a5d0:	mov	r2, r0
   1a5d4:	mov	r9, r0
   1a5d8:	ldr	r0, [r4, #52]	; 0x34
   1a5dc:	bl	16308 <gtk_text_buffer_insert_with_tags_by_name@plt>
   1a5e0:	ldr	r0, [r4, #52]	; 0x34
   1a5e4:	mvn	r3, #0
   1a5e8:	ldr	r2, [pc, #1156]	; 1aa74 <g_strcmp0@plt+0x3e3c>
   1a5ec:	add	r1, sp, #164	; 0xa4
   1a5f0:	bl	15e70 <gtk_text_buffer_insert@plt>
   1a5f4:	mov	r0, r9
   1a5f8:	bl	16518 <g_free@plt>
   1a5fc:	ldr	r0, [sp, #112]	; 0x70
   1a600:	bl	1d530 <g_strcmp0@plt+0x68f8>
   1a604:	subs	r5, r0, #0
   1a608:	movne	r5, #0
   1a60c:	beq	1a794 <g_strcmp0@plt+0x3b5c>
   1a610:	ldr	r0, [sp, #96]	; 0x60
   1a614:	cmp	r0, #0
   1a618:	beq	1a650 <g_strcmp0@plt+0x3a18>
   1a61c:	bl	16464 <g_strv_length@plt>
   1a620:	mov	r3, #5
   1a624:	str	r3, [sp]
   1a628:	ldr	r2, [pc, #1096]	; 1aa78 <g_strcmp0@plt+0x3e40>
   1a62c:	ldr	r1, [pc, #1096]	; 1aa7c <g_strcmp0@plt+0x3e44>
   1a630:	mov	r3, r0
   1a634:	mov	r0, #0
   1a638:	bl	160f8 <dcngettext@plt>
   1a63c:	ldr	r3, [sp, #96]	; 0x60
   1a640:	add	r1, sp, #164	; 0xa4
   1a644:	mov	r2, r0
   1a648:	ldr	r0, [r4, #52]	; 0x34
   1a64c:	bl	177f4 <g_strcmp0@plt+0xbbc>
   1a650:	ldr	r0, [sp, #100]	; 0x64
   1a654:	cmp	r0, #0
   1a658:	beq	1a690 <g_strcmp0@plt+0x3a58>
   1a65c:	bl	16464 <g_strv_length@plt>
   1a660:	mov	r3, #5
   1a664:	str	r3, [sp]
   1a668:	ldr	r2, [pc, #1040]	; 1aa80 <g_strcmp0@plt+0x3e48>
   1a66c:	ldr	r1, [pc, #1040]	; 1aa84 <g_strcmp0@plt+0x3e4c>
   1a670:	mov	r3, r0
   1a674:	mov	r0, #0
   1a678:	bl	160f8 <dcngettext@plt>
   1a67c:	ldr	r3, [sp, #100]	; 0x64
   1a680:	add	r1, sp, #164	; 0xa4
   1a684:	mov	r2, r0
   1a688:	ldr	r0, [r4, #52]	; 0x34
   1a68c:	bl	177f4 <g_strcmp0@plt+0xbbc>
   1a690:	ldr	r0, [sp, #104]	; 0x68
   1a694:	cmp	r0, #0
   1a698:	beq	1a6d0 <g_strcmp0@plt+0x3a98>
   1a69c:	bl	16464 <g_strv_length@plt>
   1a6a0:	mov	r3, #5
   1a6a4:	str	r3, [sp]
   1a6a8:	ldr	r2, [pc, #984]	; 1aa88 <g_strcmp0@plt+0x3e50>
   1a6ac:	ldr	r1, [pc, #984]	; 1aa8c <g_strcmp0@plt+0x3e54>
   1a6b0:	mov	r3, r0
   1a6b4:	mov	r0, #0
   1a6b8:	bl	160f8 <dcngettext@plt>
   1a6bc:	ldr	r3, [sp, #104]	; 0x68
   1a6c0:	add	r1, sp, #164	; 0xa4
   1a6c4:	mov	r2, r0
   1a6c8:	ldr	r0, [r4, #52]	; 0x34
   1a6cc:	bl	177f4 <g_strcmp0@plt+0xbbc>
   1a6d0:	ldr	r3, [sp, #108]	; 0x6c
   1a6d4:	cmp	r3, #4
   1a6d8:	beq	1a8ec <g_strcmp0@plt+0x3cb4>
   1a6dc:	cmp	r3, #3
   1a6e0:	beq	1a944 <g_strcmp0@plt+0x3d0c>
   1a6e4:	ldr	r3, [sp, #120]	; 0x78
   1a6e8:	cmp	r3, #2
   1a6ec:	beq	1a8a0 <g_strcmp0@plt+0x3c68>
   1a6f0:	cmp	r3, #3
   1a6f4:	beq	1a938 <g_strcmp0@plt+0x3d00>
   1a6f8:	cmp	r5, #0
   1a6fc:	beq	1a81c <g_strcmp0@plt+0x3be4>
   1a700:	ldr	r0, [sp, #92]	; 0x5c
   1a704:	bl	16518 <g_free@plt>
   1a708:	ldr	r0, [sp, #96]	; 0x60
   1a70c:	bl	1644c <g_strfreev@plt>
   1a710:	ldr	r0, [sp, #100]	; 0x64
   1a714:	bl	1644c <g_strfreev@plt>
   1a718:	ldr	r0, [sp, #104]	; 0x68
   1a71c:	bl	1644c <g_strfreev@plt>
   1a720:	ldr	r0, [sp, #112]	; 0x70
   1a724:	bl	16518 <g_free@plt>
   1a728:	ldr	r0, [sp, #116]	; 0x74
   1a72c:	bl	16518 <g_free@plt>
   1a730:	ldr	r0, [sp, #124]	; 0x7c
   1a734:	bl	16518 <g_free@plt>
   1a738:	ldr	r0, [sp, #128]	; 0x80
   1a73c:	bl	16518 <g_free@plt>
   1a740:	mov	r0, r7
   1a744:	bl	16518 <g_free@plt>
   1a748:	mov	r0, r8
   1a74c:	bl	16518 <g_free@plt>
   1a750:	b	1a380 <g_strcmp0@plt+0x3748>
   1a754:	mov	r2, #5
   1a758:	ldr	r1, [pc, #816]	; 1aa90 <g_strcmp0@plt+0x3e58>
   1a75c:	ldr	r4, [r4, #52]	; 0x34
   1a760:	bl	16530 <dcgettext@plt>
   1a764:	mov	r2, r7
   1a768:	mov	r1, r0
   1a76c:	mov	r0, r4
   1a770:	bl	16350 <gtk_text_buffer_set_text@plt>
   1a774:	b	1a380 <g_strcmp0@plt+0x3748>
   1a778:	str	r7, [sp]
   1a77c:	add	r1, sp, #148	; 0x94
   1a780:	add	r3, sp, #88	; 0x58
   1a784:	mov	r2, #2
   1a788:	ldr	r0, [sp, #84]	; 0x54
   1a78c:	bl	16b30 <gtk_tree_model_get@plt>
   1a790:	b	1a524 <g_strcmp0@plt+0x38ec>
   1a794:	ldr	r1, [sp, #112]	; 0x70
   1a798:	ldr	r0, [r4, #64]	; 0x40
   1a79c:	bl	1e41c <g_strcmp0@plt+0x77e4>
   1a7a0:	mov	r9, r0
   1a7a4:	bl	1d530 <g_strcmp0@plt+0x68f8>
   1a7a8:	cmp	r0, #0
   1a7ac:	beq	1a9a0 <g_strcmp0@plt+0x3d68>
   1a7b0:	mov	r0, r9
   1a7b4:	bl	16518 <g_free@plt>
   1a7b8:	b	1a610 <g_strcmp0@plt+0x39d8>
   1a7bc:	mov	r2, #5
   1a7c0:	ldr	r1, [pc, #716]	; 1aa94 <g_strcmp0@plt+0x3e5c>
   1a7c4:	mov	r0, #0
   1a7c8:	bl	16530 <dcgettext@plt>
   1a7cc:	mov	r2, r8
   1a7d0:	mov	r1, r7
   1a7d4:	bl	160e0 <g_strdup_printf@plt>
   1a7d8:	ldr	r1, [pc, #656]	; 1aa70 <g_strcmp0@plt+0x3e38>
   1a7dc:	mov	r3, #0
   1a7e0:	stm	sp, {r1, r3}
   1a7e4:	add	r1, sp, #164	; 0xa4
   1a7e8:	mvn	r3, #0
   1a7ec:	mov	r5, r0
   1a7f0:	mov	r2, r0
   1a7f4:	ldr	r0, [r4, #52]	; 0x34
   1a7f8:	bl	16308 <gtk_text_buffer_insert_with_tags_by_name@plt>
   1a7fc:	ldr	r0, [r4, #52]	; 0x34
   1a800:	mvn	r3, #0
   1a804:	ldr	r2, [pc, #616]	; 1aa74 <g_strcmp0@plt+0x3e3c>
   1a808:	add	r1, sp, #164	; 0xa4
   1a80c:	bl	15e70 <gtk_text_buffer_insert@plt>
   1a810:	mov	r0, r5
   1a814:	bl	16518 <g_free@plt>
   1a818:	b	1a5fc <g_strcmp0@plt+0x39c4>
   1a81c:	ldr	r0, [sp, #116]	; 0x74
   1a820:	bl	1d530 <g_strcmp0@plt+0x68f8>
   1a824:	cmp	r0, #0
   1a828:	bne	1a700 <g_strcmp0@plt+0x3ac8>
   1a82c:	ldr	r1, [sp, #116]	; 0x74
   1a830:	ldr	r0, [r4, #64]	; 0x40
   1a834:	bl	1e41c <g_strcmp0@plt+0x77e4>
   1a838:	mov	r5, r0
   1a83c:	bl	1d530 <g_strcmp0@plt+0x68f8>
   1a840:	cmp	r0, #0
   1a844:	beq	1a9e4 <g_strcmp0@plt+0x3dac>
   1a848:	mov	r0, r5
   1a84c:	bl	16518 <g_free@plt>
   1a850:	b	1a700 <g_strcmp0@plt+0x3ac8>
   1a854:	ldr	r1, [pc, #572]	; 1aa98 <g_strcmp0@plt+0x3e60>
   1a858:	mov	r2, #5
   1a85c:	mov	r0, #0
   1a860:	ldr	r5, [r4, #52]	; 0x34
   1a864:	bl	16530 <dcgettext@plt>
   1a868:	ldr	r2, [pc, #512]	; 1aa70 <g_strcmp0@plt+0x3e38>
   1a86c:	mov	r3, #0
   1a870:	add	r1, sp, #164	; 0xa4
   1a874:	strd	r2, [sp]
   1a878:	mvn	r3, #0
   1a87c:	mov	r2, r0
   1a880:	mov	r0, r5
   1a884:	bl	16308 <gtk_text_buffer_insert_with_tags_by_name@plt>
   1a888:	mvn	r3, #0
   1a88c:	ldr	r2, [pc, #480]	; 1aa74 <g_strcmp0@plt+0x3e3c>
   1a890:	add	r1, sp, #164	; 0xa4
   1a894:	ldr	r0, [r4, #52]	; 0x34
   1a898:	bl	15e70 <gtk_text_buffer_insert@plt>
   1a89c:	b	1a56c <g_strcmp0@plt+0x3934>
   1a8a0:	ldr	r1, [pc, #500]	; 1aa9c <g_strcmp0@plt+0x3e64>
   1a8a4:	mov	r2, #5
   1a8a8:	mov	r0, #0
   1a8ac:	ldr	r9, [r4, #52]	; 0x34
   1a8b0:	bl	16530 <dcgettext@plt>
   1a8b4:	ldr	r2, [pc, #436]	; 1aa70 <g_strcmp0@plt+0x3e38>
   1a8b8:	mov	r3, #0
   1a8bc:	add	r1, sp, #164	; 0xa4
   1a8c0:	strd	r2, [sp]
   1a8c4:	mvn	r3, #0
   1a8c8:	mov	r2, r0
   1a8cc:	mov	r0, r9
   1a8d0:	bl	16308 <gtk_text_buffer_insert_with_tags_by_name@plt>
   1a8d4:	mvn	r3, #0
   1a8d8:	ldr	r2, [pc, #404]	; 1aa74 <g_strcmp0@plt+0x3e3c>
   1a8dc:	add	r1, sp, #164	; 0xa4
   1a8e0:	ldr	r0, [r4, #52]	; 0x34
   1a8e4:	bl	15e70 <gtk_text_buffer_insert@plt>
   1a8e8:	b	1a6f8 <g_strcmp0@plt+0x3ac0>
   1a8ec:	ldr	r1, [pc, #428]	; 1aaa0 <g_strcmp0@plt+0x3e68>
   1a8f0:	mov	r2, #5
   1a8f4:	mov	r0, #0
   1a8f8:	ldr	r9, [r4, #52]	; 0x34
   1a8fc:	bl	16530 <dcgettext@plt>
   1a900:	ldr	r2, [pc, #360]	; 1aa70 <g_strcmp0@plt+0x3e38>
   1a904:	mov	r3, #0
   1a908:	add	r1, sp, #164	; 0xa4
   1a90c:	strd	r2, [sp]
   1a910:	mvn	r3, #0
   1a914:	mov	r2, r0
   1a918:	mov	r0, r9
   1a91c:	bl	16308 <gtk_text_buffer_insert_with_tags_by_name@plt>
   1a920:	mvn	r3, #0
   1a924:	ldr	r2, [pc, #328]	; 1aa74 <g_strcmp0@plt+0x3e3c>
   1a928:	add	r1, sp, #164	; 0xa4
   1a92c:	ldr	r0, [r4, #52]	; 0x34
   1a930:	bl	15e70 <gtk_text_buffer_insert@plt>
   1a934:	b	1a6e4 <g_strcmp0@plt+0x3aac>
   1a938:	mov	r2, #5
   1a93c:	ldr	r1, [pc, #352]	; 1aaa4 <g_strcmp0@plt+0x3e6c>
   1a940:	b	1a8a8 <g_strcmp0@plt+0x3c70>
   1a944:	mov	r2, #5
   1a948:	ldr	r1, [pc, #344]	; 1aaa8 <g_strcmp0@plt+0x3e70>
   1a94c:	b	1a8f4 <g_strcmp0@plt+0x3cbc>
   1a950:	mov	r2, #5
   1a954:	ldr	r1, [pc, #336]	; 1aaac <g_strcmp0@plt+0x3e74>
   1a958:	b	1a85c <g_strcmp0@plt+0x3c24>
   1a95c:	ldr	r1, [pc, #332]	; 1aab0 <g_strcmp0@plt+0x3e78>
   1a960:	mov	r2, #5
   1a964:	mov	r0, #0
   1a968:	ldr	r5, [r4, #52]	; 0x34
   1a96c:	bl	16530 <dcgettext@plt>
   1a970:	ldr	r1, [pc, #316]	; 1aab4 <g_strcmp0@plt+0x3e7c>
   1a974:	ldr	r2, [pc, #244]	; 1aa70 <g_strcmp0@plt+0x3e38>
   1a978:	mov	r3, #0
   1a97c:	str	r1, [sp, #4]
   1a980:	str	r2, [sp]
   1a984:	str	r3, [sp, #8]
   1a988:	add	r1, sp, #164	; 0xa4
   1a98c:	mvn	r3, #0
   1a990:	mov	r2, r0
   1a994:	mov	r0, r5
   1a998:	bl	16308 <gtk_text_buffer_insert_with_tags_by_name@plt>
   1a99c:	b	1a888 <g_strcmp0@plt+0x3c50>
   1a9a0:	mov	r2, r9
   1a9a4:	add	r1, sp, #164	; 0xa4
   1a9a8:	ldr	r0, [r4, #52]	; 0x34
   1a9ac:	bl	21bf4 <g_strcmp0@plt+0xafbc>
   1a9b0:	mvn	r3, #0
   1a9b4:	ldr	r2, [pc, #252]	; 1aab8 <g_strcmp0@plt+0x3e80>
   1a9b8:	add	r1, sp, #164	; 0xa4
   1a9bc:	ldr	r0, [r4, #52]	; 0x34
   1a9c0:	bl	15e70 <gtk_text_buffer_insert@plt>
   1a9c4:	mov	r5, #1
   1a9c8:	b	1a7b0 <g_strcmp0@plt+0x3b78>
   1a9cc:	mov	r2, #5
   1a9d0:	ldr	r1, [pc, #228]	; 1aabc <g_strcmp0@plt+0x3e84>
   1a9d4:	b	1a964 <g_strcmp0@plt+0x3d2c>
   1a9d8:	mov	r2, #5
   1a9dc:	ldr	r1, [pc, #220]	; 1aac0 <g_strcmp0@plt+0x3e88>
   1a9e0:	b	1a85c <g_strcmp0@plt+0x3c24>
   1a9e4:	mov	r2, #5
   1a9e8:	ldr	r1, [pc, #212]	; 1aac4 <g_strcmp0@plt+0x3e8c>
   1a9ec:	bl	16530 <dcgettext@plt>
   1a9f0:	mov	r2, r5
   1a9f4:	mov	r1, r0
   1a9f8:	ldr	r0, [pc, #200]	; 1aac8 <g_strcmp0@plt+0x3e90>
   1a9fc:	bl	160e0 <g_strdup_printf@plt>
   1aa00:	add	r1, sp, #164	; 0xa4
   1aa04:	mov	r9, r0
   1aa08:	mov	r2, r0
   1aa0c:	ldr	r0, [r4, #52]	; 0x34
   1aa10:	bl	21bf4 <g_strcmp0@plt+0xafbc>
   1aa14:	mov	r0, r9
   1aa18:	bl	16518 <g_free@plt>
   1aa1c:	b	1a848 <g_strcmp0@plt+0x3c10>
   1aa20:	bl	164ac <__stack_chk_fail@plt>
   1aa24:	andeq	ip, r3, r0, asr lr
   1aa28:	andeq	sp, r3, r0, lsl r6
   1aa2c:	andeq	r6, r2, r4, asr #24
   1aa30:	andeq	r6, r2, r0, asr ip
   1aa34:	andeq	r6, r2, r0, ror #4
   1aa38:	andeq	r6, r2, r8, ror #24
   1aa3c:	andeq	sl, r2, r4, lsr #11
   1aa40:	andeq	r6, r2, ip, ror #23
   1aa44:	andeq	r6, r2, r8, lsl #25
   1aa48:	muleq	r2, r4, ip
   1aa4c:	andeq	r6, r2, r0, lsr #25
   1aa50:	andeq	r6, r2, ip, lsr #25
   1aa54:	andeq	fp, r2, ip, ror #30
   1aa58:	andeq	r6, r2, r0, lsl #25
   1aa5c:	andeq	r6, r2, r4, ror ip
   1aa60:	andeq	r6, r2, r4, lsr r8
   1aa64:	andeq	r6, r2, r4, asr #5
   1aa68:	andeq	r7, r2, r8, ror #22
   1aa6c:	andeq	r6, r2, r0, lsl lr
   1aa70:	andeq	r6, r2, r8, lsl r3
   1aa74:	andeq	r7, r2, r0, lsr #25
   1aa78:	andeq	r6, r2, r8, lsr lr
   1aa7c:	andeq	r6, r2, ip, ror lr
   1aa80:	andeq	r6, r2, r0, asr #29
   1aa84:	andeq	r6, r2, r4, lsl pc
   1aa88:	andeq	r6, r2, r4, ror #30
   1aa8c:			; <UNDEFINED> instruction: 0x00026fb4
   1aa90:	andeq	r7, r2, r4, ror #3
   1aa94:	ldrdeq	r6, [r2], -r4
   1aa98:			; <UNDEFINED> instruction: 0x00026cbc
   1aa9c:	strheq	r7, [r2], -r0
   1aaa0:	andeq	r7, r2, r0
   1aaa4:	andeq	r7, r2, r4, lsl r1
   1aaa8:	andeq	r7, r2, r8, asr r0
   1aaac:	strdeq	r6, [r2], -r8
   1aab0:	andeq	r6, r2, r4, lsr sp
   1aab4:	andeq	r6, r2, r4, lsr #10
   1aab8:	andeq	r6, r2, r4, lsr lr
   1aabc:	andeq	r6, r2, r0, ror sp
   1aac0:			; <UNDEFINED> instruction: 0x00026dbc
   1aac4:	andeq	r7, r2, r8, lsl #3
   1aac8:	ldrdeq	r7, [r2], -ip
   1aacc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aad0:	sub	sp, sp, #68	; 0x44
   1aad4:	ldr	r9, [pc, #768]	; 1addc <g_strcmp0@plt+0x41a4>
   1aad8:	mov	r8, r0
   1aadc:	ldr	r3, [r9]
   1aae0:	str	r3, [sp, #60]	; 0x3c
   1aae4:	bl	15db0 <gtk_menu_new@plt>
   1aae8:	ldr	r2, [pc, #752]	; 1ade0 <g_strcmp0@plt+0x41a8>
   1aaec:	mov	r3, #0
   1aaf0:	ldr	r1, [pc, #748]	; 1ade4 <g_strcmp0@plt+0x41ac>
   1aaf4:	str	r3, [sp, #24]
   1aaf8:	mov	r7, r0
   1aafc:	ldr	r0, [r2]
   1ab00:	bl	16068 <gtk_builder_get_object@plt>
   1ab04:	mov	r4, r0
   1ab08:	bl	164c4 <gtk_tree_view_get_type@plt>
   1ab0c:	mov	r1, r0
   1ab10:	mov	r0, r4
   1ab14:	bl	15d68 <g_type_check_instance_cast@plt>
   1ab18:	bl	15f6c <gtk_tree_view_get_model@plt>
   1ab1c:	add	r1, sp, #28
   1ab20:	mov	r6, r0
   1ab24:	bl	16548 <gtk_tree_model_get_iter_first@plt>
   1ab28:	cmp	r0, #0
   1ab2c:	beq	1adc0 <g_strcmp0@plt+0x4188>
   1ab30:	mov	r4, #1
   1ab34:	mov	r5, r4
   1ab38:	add	fp, sp, #24
   1ab3c:	mvn	sl, #0
   1ab40:	mov	r3, #5
   1ab44:	str	r3, [sp]
   1ab48:	mov	r2, #3
   1ab4c:	add	r3, sp, #20
   1ab50:	add	r1, sp, #28
   1ab54:	mov	r0, r6
   1ab58:	str	sl, [sp, #8]
   1ab5c:	str	fp, [sp, #4]
   1ab60:	bl	16b30 <gtk_tree_model_get@plt>
   1ab64:	ldr	r3, [sp, #20]
   1ab68:	add	r2, sp, #28
   1ab6c:	cmp	r3, #0
   1ab70:	add	r1, sp, #44	; 0x2c
   1ab74:	mov	r0, r6
   1ab78:	moveq	r5, #0
   1ab7c:	movne	r4, #0
   1ab80:	bl	15eb8 <gtk_tree_model_iter_children@plt>
   1ab84:	cmp	r0, #0
   1ab88:	beq	1abd4 <g_strcmp0@plt+0x3f9c>
   1ab8c:	mov	r3, #5
   1ab90:	str	r3, [sp]
   1ab94:	mov	r2, #3
   1ab98:	add	r3, sp, #20
   1ab9c:	add	r1, sp, #44	; 0x2c
   1aba0:	mov	r0, r6
   1aba4:	str	sl, [sp, #8]
   1aba8:	str	fp, [sp, #4]
   1abac:	bl	16b30 <gtk_tree_model_get@plt>
   1abb0:	ldr	r3, [sp, #20]
   1abb4:	add	r1, sp, #44	; 0x2c
   1abb8:	cmp	r3, #0
   1abbc:	mov	r0, r6
   1abc0:	moveq	r5, #0
   1abc4:	movne	r4, #0
   1abc8:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   1abcc:	cmp	r0, #0
   1abd0:	bne	1ab8c <g_strcmp0@plt+0x3f54>
   1abd4:	add	r1, sp, #28
   1abd8:	mov	r0, r6
   1abdc:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   1abe0:	cmp	r0, #0
   1abe4:	bne	1ab40 <g_strcmp0@plt+0x3f08>
   1abe8:	ldr	r3, [sp, #24]
   1abec:	cmp	r3, #0
   1abf0:	beq	1adac <g_strcmp0@plt+0x4174>
   1abf4:	bl	163bc <gtk_menu_shell_get_type@plt>
   1abf8:	cmp	r5, #0
   1abfc:	mov	r6, r0
   1ac00:	beq	1ad18 <g_strcmp0@plt+0x40e0>
   1ac04:	cmp	r4, #0
   1ac08:	beq	1ad64 <g_strcmp0@plt+0x412c>
   1ac0c:	mov	r2, #5
   1ac10:	ldr	r1, [pc, #464]	; 1ade8 <g_strcmp0@plt+0x41b0>
   1ac14:	mov	r0, #0
   1ac18:	bl	16530 <dcgettext@plt>
   1ac1c:	bl	15c00 <gtk_menu_item_new_with_label@plt>
   1ac20:	mov	r4, #0
   1ac24:	mov	r3, r4
   1ac28:	ldr	r2, [pc, #444]	; 1adec <g_strcmp0@plt+0x41b4>
   1ac2c:	str	r4, [sp, #4]
   1ac30:	str	r4, [sp]
   1ac34:	ldr	r1, [pc, #436]	; 1adf0 <g_strcmp0@plt+0x41b8>
   1ac38:	mov	r5, r0
   1ac3c:	bl	16314 <g_signal_connect_data@plt>
   1ac40:	mov	r1, r6
   1ac44:	mov	r0, r7
   1ac48:	bl	15d68 <g_type_check_instance_cast@plt>
   1ac4c:	mov	r1, r5
   1ac50:	bl	16be4 <gtk_menu_shell_append@plt>
   1ac54:	mov	r2, #5
   1ac58:	ldr	r1, [pc, #404]	; 1adf4 <g_strcmp0@plt+0x41bc>
   1ac5c:	mov	r0, r4
   1ac60:	bl	16530 <dcgettext@plt>
   1ac64:	bl	15c00 <gtk_menu_item_new_with_label@plt>
   1ac68:	mov	r5, r0
   1ac6c:	bl	15d14 <gtk_widget_get_type@plt>
   1ac70:	mov	r1, r0
   1ac74:	mov	r0, r5
   1ac78:	bl	15d68 <g_type_check_instance_cast@plt>
   1ac7c:	mov	r1, r4
   1ac80:	bl	16c08 <gtk_widget_set_sensitive@plt>
   1ac84:	mov	r3, r4
   1ac88:	ldr	r2, [pc, #360]	; 1adf8 <g_strcmp0@plt+0x41c0>
   1ac8c:	mov	r0, r5
   1ac90:	str	r4, [sp, #4]
   1ac94:	str	r4, [sp]
   1ac98:	ldr	r1, [pc, #336]	; 1adf0 <g_strcmp0@plt+0x41b8>
   1ac9c:	bl	16314 <g_signal_connect_data@plt>
   1aca0:	mov	r1, r6
   1aca4:	mov	r0, r7
   1aca8:	bl	15d68 <g_type_check_instance_cast@plt>
   1acac:	mov	r1, r5
   1acb0:	bl	16be4 <gtk_menu_shell_append@plt>
   1acb4:	mov	r0, r7
   1acb8:	bl	167b8 <gtk_widget_show_all@plt>
   1acbc:	bl	1677c <gtk_menu_get_type@plt>
   1acc0:	mov	r1, r0
   1acc4:	mov	r0, r7
   1acc8:	bl	15d68 <g_type_check_instance_cast@plt>
   1accc:	cmp	r8, #0
   1acd0:	moveq	r5, r8
   1acd4:	ldrne	r5, [r8, #40]	; 0x28
   1acd8:	mov	r4, r0
   1acdc:	mov	r0, r8
   1ace0:	bl	15d98 <gdk_event_get_time@plt>
   1ace4:	mov	r3, #0
   1ace8:	mov	r2, r3
   1acec:	stm	sp, {r3, r5}
   1acf0:	mov	r1, r3
   1acf4:	str	r0, [sp, #8]
   1acf8:	mov	r0, r4
   1acfc:	bl	163a4 <gtk_menu_popup@plt>
   1ad00:	ldr	r2, [sp, #60]	; 0x3c
   1ad04:	ldr	r3, [r9]
   1ad08:	cmp	r2, r3
   1ad0c:	bne	1add8 <g_strcmp0@plt+0x41a0>
   1ad10:	add	sp, sp, #68	; 0x44
   1ad14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad18:	mov	r2, #5
   1ad1c:	ldr	r1, [pc, #216]	; 1adfc <g_strcmp0@plt+0x41c4>
   1ad20:	mov	r0, r5
   1ad24:	bl	16530 <dcgettext@plt>
   1ad28:	bl	15c00 <gtk_menu_item_new_with_label@plt>
   1ad2c:	mov	r3, r5
   1ad30:	ldr	r2, [pc, #192]	; 1adf8 <g_strcmp0@plt+0x41c0>
   1ad34:	ldr	r1, [pc, #180]	; 1adf0 <g_strcmp0@plt+0x41b8>
   1ad38:	str	r5, [sp, #4]
   1ad3c:	str	r5, [sp]
   1ad40:	mov	sl, r0
   1ad44:	bl	16314 <g_signal_connect_data@plt>
   1ad48:	mov	r1, r6
   1ad4c:	mov	r0, r7
   1ad50:	bl	15d68 <g_type_check_instance_cast@plt>
   1ad54:	mov	r1, sl
   1ad58:	bl	16be4 <gtk_menu_shell_append@plt>
   1ad5c:	cmp	r4, #0
   1ad60:	bne	1ac0c <g_strcmp0@plt+0x3fd4>
   1ad64:	mov	r2, #5
   1ad68:	ldr	r1, [pc, #144]	; 1ae00 <g_strcmp0@plt+0x41c8>
   1ad6c:	mov	r0, r4
   1ad70:	bl	16530 <dcgettext@plt>
   1ad74:	bl	15c00 <gtk_menu_item_new_with_label@plt>
   1ad78:	mov	r3, r4
   1ad7c:	ldr	r2, [pc, #128]	; 1ae04 <g_strcmp0@plt+0x41cc>
   1ad80:	str	r4, [sp, #4]
   1ad84:	str	r4, [sp]
   1ad88:	ldr	r1, [pc, #96]	; 1adf0 <g_strcmp0@plt+0x41b8>
   1ad8c:	mov	r5, r0
   1ad90:	bl	16314 <g_signal_connect_data@plt>
   1ad94:	mov	r1, r6
   1ad98:	mov	r0, r7
   1ad9c:	bl	15d68 <g_type_check_instance_cast@plt>
   1ada0:	mov	r1, r5
   1ada4:	bl	16be4 <gtk_menu_shell_append@plt>
   1ada8:	b	1ac0c <g_strcmp0@plt+0x3fd4>
   1adac:	ldr	r2, [pc, #84]	; 1ae08 <g_strcmp0@plt+0x41d0>
   1adb0:	mov	r1, #128	; 0x80
   1adb4:	ldr	r0, [pc, #80]	; 1ae0c <g_strcmp0@plt+0x41d4>
   1adb8:	bl	15dec <g_log@plt>
   1adbc:	b	1ad00 <g_strcmp0@plt+0x40c8>
   1adc0:	ldr	r3, [sp, #24]
   1adc4:	cmp	r3, #0
   1adc8:	beq	1adac <g_strcmp0@plt+0x4174>
   1adcc:	bl	163bc <gtk_menu_shell_get_type@plt>
   1add0:	mov	r6, r0
   1add4:	b	1ac0c <g_strcmp0@plt+0x3fd4>
   1add8:	bl	164ac <__stack_chk_fail@plt>
   1addc:	andeq	ip, r3, r0, asr lr
   1ade0:	andeq	sp, r3, r0, lsl r6
   1ade4:	andeq	r6, r2, r4, asr #5
   1ade8:	andeq	r7, r2, ip, asr #4
   1adec:	andeq	fp, r1, ip, lsl r5
   1adf0:	andeq	r7, r2, r0, lsr r2
   1adf4:	andeq	r7, r2, r4, ror #4
   1adf8:	andeq	fp, r1, ip, lsl #15
   1adfc:	andeq	r7, r2, r4, lsr #4
   1ae00:	andeq	r7, r2, ip, lsr r2
   1ae04:	andeq	fp, r1, r4, ror r6
   1ae08:	andeq	r7, r2, r4, lsl #4
   1ae0c:	andeq	r6, r2, r0, ror #4
   1ae10:	push	{r4, lr}
   1ae14:	mov	r0, #0
   1ae18:	bl	1aacc <g_strcmp0@plt+0x3e94>
   1ae1c:	mov	r0, #1
   1ae20:	pop	{r4, pc}
   1ae24:	push	{r4, r5, r6, r7, r8, lr}
   1ae28:	sub	sp, sp, #24
   1ae2c:	ldr	r4, [pc, #240]	; 1af24 <g_strcmp0@plt+0x42ec>
   1ae30:	ldr	r2, [r1]
   1ae34:	ldr	r3, [r4]
   1ae38:	cmp	r2, #4
   1ae3c:	str	r3, [sp, #20]
   1ae40:	bne	1ae54 <g_strcmp0@plt+0x421c>
   1ae44:	ldr	r3, [r1, #40]	; 0x28
   1ae48:	mov	r5, r1
   1ae4c:	cmp	r3, #3
   1ae50:	beq	1ae70 <g_strcmp0@plt+0x4238>
   1ae54:	mov	r0, #0
   1ae58:	ldr	r2, [sp, #20]
   1ae5c:	ldr	r3, [r4]
   1ae60:	cmp	r2, r3
   1ae64:	bne	1af20 <g_strcmp0@plt+0x42e8>
   1ae68:	add	sp, sp, #24
   1ae6c:	pop	{r4, r5, r6, r7, r8, pc}
   1ae70:	ldr	r2, [pc, #176]	; 1af28 <g_strcmp0@plt+0x42f0>
   1ae74:	mov	r1, #128	; 0x80
   1ae78:	mov	r6, r0
   1ae7c:	ldr	r0, [pc, #168]	; 1af2c <g_strcmp0@plt+0x42f4>
   1ae80:	bl	15dec <g_log@plt>
   1ae84:	bl	164c4 <gtk_tree_view_get_type@plt>
   1ae88:	mov	r1, r0
   1ae8c:	mov	r7, r0
   1ae90:	mov	r0, r6
   1ae94:	bl	15d68 <g_type_check_instance_cast@plt>
   1ae98:	bl	16614 <gtk_tree_view_get_selection@plt>
   1ae9c:	mov	r8, r0
   1aea0:	bl	165fc <gtk_tree_selection_count_selected_rows@plt>
   1aea4:	cmp	r0, #1
   1aea8:	ble	1aebc <g_strcmp0@plt+0x4284>
   1aeac:	mov	r0, r5
   1aeb0:	bl	1aacc <g_strcmp0@plt+0x3e94>
   1aeb4:	mov	r0, #1
   1aeb8:	b	1ae58 <g_strcmp0@plt+0x4220>
   1aebc:	mov	r1, r7
   1aec0:	mov	r0, r6
   1aec4:	bl	15d68 <g_type_check_instance_cast@plt>
   1aec8:	vldr	d6, [r5, #24]
   1aecc:	vldr	d7, [r5, #16]
   1aed0:	mov	r3, #0
   1aed4:	str	r3, [sp, #8]
   1aed8:	vcvt.s32.f64	s13, d6
   1aedc:	vcvt.s32.f64	s15, d7
   1aee0:	str	r3, [sp, #4]
   1aee4:	str	r3, [sp]
   1aee8:	add	r3, sp, #16
   1aeec:	vmov	r2, s13
   1aef0:	vmov	r1, s15
   1aef4:	bl	161dc <gtk_tree_view_get_path_at_pos@plt>
   1aef8:	cmp	r0, #0
   1aefc:	beq	1aeac <g_strcmp0@plt+0x4274>
   1af00:	mov	r0, r8
   1af04:	bl	168fc <gtk_tree_selection_unselect_all@plt>
   1af08:	mov	r0, r8
   1af0c:	ldr	r1, [sp, #16]
   1af10:	bl	15f00 <gtk_tree_selection_select_path@plt>
   1af14:	ldr	r0, [sp, #16]
   1af18:	bl	16170 <gtk_tree_path_free@plt>
   1af1c:	b	1aeac <g_strcmp0@plt+0x4274>
   1af20:	bl	164ac <__stack_chk_fail@plt>
   1af24:	andeq	ip, r3, r0, asr lr
   1af28:	andeq	r7, r2, r8, ror r2
   1af2c:	andeq	r6, r2, r0, ror #4
   1af30:	push	{r4, r5, r6, r7, lr}
   1af34:	sub	sp, sp, #20
   1af38:	ldr	r5, [pc, #184]	; 1aff8 <g_strcmp0@plt+0x43c0>
   1af3c:	ldr	r4, [pc, #184]	; 1affc <g_strcmp0@plt+0x43c4>
   1af40:	mov	r3, #0
   1af44:	ldr	ip, [r5]
   1af48:	ldr	r0, [r4, #68]	; 0x44
   1af4c:	add	r2, sp, #8
   1af50:	ldr	r1, [pc, #168]	; 1b000 <g_strcmp0@plt+0x43c8>
   1af54:	str	ip, [sp, #12]
   1af58:	bl	165cc <g_object_get@plt>
   1af5c:	ldr	r0, [r4, #72]	; 0x48
   1af60:	bl	15dbc <gtk_widget_hide@plt>
   1af64:	ldr	r3, [sp, #8]
   1af68:	cmp	r3, #5
   1af6c:	bne	1af7c <g_strcmp0@plt+0x4344>
   1af70:	ldr	r2, [r4, #20]
   1af74:	cmp	r2, #524288	; 0x80000
   1af78:	bcs	1af94 <g_strcmp0@plt+0x435c>
   1af7c:	ldr	r2, [sp, #12]
   1af80:	ldr	r3, [r5]
   1af84:	cmp	r2, r3
   1af88:	bne	1aff4 <g_strcmp0@plt+0x43bc>
   1af8c:	add	sp, sp, #20
   1af90:	pop	{r4, r5, r6, r7, pc}
   1af94:	ldr	r2, [pc, #104]	; 1b004 <g_strcmp0@plt+0x43cc>
   1af98:	str	r3, [sp]
   1af9c:	ldr	r1, [pc, #100]	; 1b008 <g_strcmp0@plt+0x43d0>
   1afa0:	ldr	r3, [r4, #24]
   1afa4:	mov	r0, #0
   1afa8:	bl	160f8 <dcngettext@plt>
   1afac:	ldr	r7, [r4, #76]	; 0x4c
   1afb0:	mov	r6, r0
   1afb4:	bl	15cc0 <gtk_label_get_type@plt>
   1afb8:	mov	r1, r0
   1afbc:	mov	r0, r7
   1afc0:	bl	15d68 <g_type_check_instance_cast@plt>
   1afc4:	mov	r1, r6
   1afc8:	bl	15ccc <gtk_label_set_label@plt>
   1afcc:	bl	16020 <gtk_info_bar_get_type@plt>
   1afd0:	ldr	r6, [r4, #72]	; 0x48
   1afd4:	mov	r1, r0
   1afd8:	mov	r0, r6
   1afdc:	bl	15d68 <g_type_check_instance_cast@plt>
   1afe0:	mov	r1, #1
   1afe4:	bl	16bd8 <gtk_info_bar_set_message_type@plt>
   1afe8:	ldr	r0, [r4, #72]	; 0x48
   1afec:	bl	1686c <gtk_widget_show@plt>
   1aff0:	b	1af7c <g_strcmp0@plt+0x4344>
   1aff4:	bl	164ac <__stack_chk_fail@plt>
   1aff8:	andeq	ip, r3, r0, asr lr
   1affc:	andeq	sp, r3, r0, lsl r6
   1b000:	andeq	r6, r2, r8, lsl #9
   1b004:	muleq	r2, ip, r2
   1b008:	andeq	r7, r2, r4, lsl #6
   1b00c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b010:	sub	sp, sp, #36	; 0x24
   1b014:	ldr	r6, [pc, #1160]	; 1b4a4 <g_strcmp0@plt+0x486c>
   1b018:	ldr	r4, [pc, #1160]	; 1b4a8 <g_strcmp0@plt+0x4870>
   1b01c:	mov	r3, #0
   1b020:	ldr	ip, [r6]
   1b024:	mov	r2, #1
   1b028:	ldr	r1, [pc, #1148]	; 1b4ac <g_strcmp0@plt+0x4874>
   1b02c:	ldr	r0, [r4]
   1b030:	str	ip, [sp, #28]
   1b034:	str	r2, [r4, #28]
   1b038:	str	r3, [r4, #20]
   1b03c:	str	r3, [r4, #24]
   1b040:	bl	16068 <gtk_builder_get_object@plt>
   1b044:	mov	r5, r0
   1b048:	bl	164c4 <gtk_tree_view_get_type@plt>
   1b04c:	mov	r1, r0
   1b050:	mov	r0, r5
   1b054:	bl	15d68 <g_type_check_instance_cast@plt>
   1b058:	bl	15f6c <gtk_tree_view_get_model@plt>
   1b05c:	add	r1, sp, #12
   1b060:	mov	r5, r0
   1b064:	bl	16548 <gtk_tree_model_get_iter_first@plt>
   1b068:	cmp	r0, #0
   1b06c:	beq	1b090 <g_strcmp0@plt+0x4458>
   1b070:	add	r1, sp, #12
   1b074:	mov	r0, r5
   1b078:	bl	17448 <g_strcmp0@plt+0x810>
   1b07c:	add	r1, sp, #12
   1b080:	mov	r0, r5
   1b084:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   1b088:	cmp	r0, #0
   1b08c:	bne	1b070 <g_strcmp0@plt+0x4438>
   1b090:	add	r2, sp, #12
   1b094:	mov	r3, #0
   1b098:	ldr	r1, [pc, #1040]	; 1b4b0 <g_strcmp0@plt+0x4878>
   1b09c:	ldr	r0, [r4, #68]	; 0x44
   1b0a0:	bl	165cc <g_object_get@plt>
   1b0a4:	ldr	r0, [sp, #12]
   1b0a8:	bl	16a94 <pk_network_enum_to_string@plt>
   1b0ac:	ldr	r2, [pc, #1024]	; 1b4b4 <g_strcmp0@plt+0x487c>
   1b0b0:	mov	r1, #128	; 0x80
   1b0b4:	mov	r3, r0
   1b0b8:	ldr	r0, [pc, #1016]	; 1b4b8 <g_strcmp0@plt+0x4880>
   1b0bc:	bl	15dec <g_log@plt>
   1b0c0:	ldr	r3, [sp, #12]
   1b0c4:	cmp	r3, #1
   1b0c8:	beq	1b438 <g_strcmp0@plt+0x4800>
   1b0cc:	ldr	r1, [pc, #1000]	; 1b4bc <g_strcmp0@plt+0x4884>
   1b0d0:	ldr	r0, [r4]
   1b0d4:	bl	16068 <gtk_builder_get_object@plt>
   1b0d8:	mov	r8, r0
   1b0dc:	bl	15d14 <gtk_widget_get_type@plt>
   1b0e0:	mov	r5, r0
   1b0e4:	mov	r1, r0
   1b0e8:	mov	r0, r8
   1b0ec:	bl	15d68 <g_type_check_instance_cast@plt>
   1b0f0:	ldr	r1, [r4, #24]
   1b0f4:	mov	r8, #5
   1b0f8:	adds	r1, r1, #0
   1b0fc:	movne	r1, #1
   1b100:	bl	16c08 <gtk_widget_set_sensitive@plt>
   1b104:	ldr	r1, [pc, #948]	; 1b4c0 <g_strcmp0@plt+0x4888>
   1b108:	ldr	r0, [r4]
   1b10c:	bl	16068 <gtk_builder_get_object@plt>
   1b110:	mov	r1, r5
   1b114:	bl	15d68 <g_type_check_instance_cast@plt>
   1b118:	mov	r1, #1
   1b11c:	bl	16c08 <gtk_widget_set_sensitive@plt>
   1b120:	ldr	r1, [pc, #924]	; 1b4c4 <g_strcmp0@plt+0x488c>
   1b124:	ldr	r0, [r4]
   1b128:	bl	16068 <gtk_builder_get_object@plt>
   1b12c:	mov	r1, r5
   1b130:	bl	15d68 <g_type_check_instance_cast@plt>
   1b134:	mov	r1, #1
   1b138:	bl	16c08 <gtk_widget_set_sensitive@plt>
   1b13c:	ldr	r1, [pc, #888]	; 1b4bc <g_strcmp0@plt+0x4884>
   1b140:	ldr	r0, [r4]
   1b144:	bl	16068 <gtk_builder_get_object@plt>
   1b148:	mov	r1, r5
   1b14c:	bl	15d68 <g_type_check_instance_cast@plt>
   1b150:	ldr	r2, [pc, #880]	; 1b4c8 <g_strcmp0@plt+0x4890>
   1b154:	ldr	r1, [pc, #880]	; 1b4cc <g_strcmp0@plt+0x4894>
   1b158:	str	r8, [sp]
   1b15c:	ldr	r3, [r4, #24]
   1b160:	mov	sl, r0
   1b164:	mov	r0, #0
   1b168:	bl	160f8 <dcngettext@plt>
   1b16c:	mov	r9, r0
   1b170:	bl	16b60 <gtk_button_get_type@plt>
   1b174:	mov	r1, r0
   1b178:	mov	r0, sl
   1b17c:	bl	15d68 <g_type_check_instance_cast@plt>
   1b180:	mov	r1, r9
   1b184:	bl	168d8 <gtk_button_set_label@plt>
   1b188:	ldr	r3, [r4, #88]	; 0x58
   1b18c:	cmp	r3, #0
   1b190:	beq	1b1a0 <g_strcmp0@plt+0x4568>
   1b194:	ldr	r7, [r3, #4]
   1b198:	cmp	r7, #0
   1b19c:	beq	1b46c <g_strcmp0@plt+0x4834>
   1b1a0:	ldr	r1, [pc, #808]	; 1b4d0 <g_strcmp0@plt+0x4898>
   1b1a4:	ldr	r0, [r4]
   1b1a8:	bl	16068 <gtk_builder_get_object@plt>
   1b1ac:	mov	r1, r5
   1b1b0:	bl	15d68 <g_type_check_instance_cast@plt>
   1b1b4:	bl	15dbc <gtk_widget_hide@plt>
   1b1b8:	ldr	r1, [pc, #788]	; 1b4d4 <g_strcmp0@plt+0x489c>
   1b1bc:	ldr	r0, [r4]
   1b1c0:	bl	16068 <gtk_builder_get_object@plt>
   1b1c4:	mov	r1, r5
   1b1c8:	bl	15d68 <g_type_check_instance_cast@plt>
   1b1cc:	bl	1686c <gtk_widget_show@plt>
   1b1d0:	ldr	r1, [pc, #768]	; 1b4d8 <g_strcmp0@plt+0x48a0>
   1b1d4:	ldr	r0, [r4]
   1b1d8:	bl	16068 <gtk_builder_get_object@plt>
   1b1dc:	mov	r1, r5
   1b1e0:	bl	15d68 <g_type_check_instance_cast@plt>
   1b1e4:	ldr	sl, [r4, #28]
   1b1e8:	mov	r9, r0
   1b1ec:	bl	15cc0 <gtk_label_get_type@plt>
   1b1f0:	cmp	sl, #1
   1b1f4:	mov	r8, r0
   1b1f8:	beq	1b3a0 <g_strcmp0@plt+0x4768>
   1b1fc:	mov	r1, r0
   1b200:	mov	r0, r9
   1b204:	bl	15d68 <g_type_check_instance_cast@plt>
   1b208:	mov	sl, r0
   1b20c:	ldr	r0, [r4, #28]
   1b210:	bl	1fb7c <g_strcmp0@plt+0x8f44>
   1b214:	mov	r1, r0
   1b218:	mov	r0, sl
   1b21c:	bl	15ccc <gtk_label_set_label@plt>
   1b220:	mov	r0, r9
   1b224:	bl	1686c <gtk_widget_show@plt>
   1b228:	ldr	r1, [pc, #684]	; 1b4dc <g_strcmp0@plt+0x48a4>
   1b22c:	ldr	r0, [r4]
   1b230:	bl	16068 <gtk_builder_get_object@plt>
   1b234:	mov	r1, r5
   1b238:	bl	15d68 <g_type_check_instance_cast@plt>
   1b23c:	mov	r9, r0
   1b240:	bl	16440 <gtk_image_get_type@plt>
   1b244:	mov	r1, r0
   1b248:	mov	r0, r9
   1b24c:	bl	15d68 <g_type_check_instance_cast@plt>
   1b250:	mov	sl, r0
   1b254:	ldr	r0, [r4, #28]
   1b258:	bl	21054 <g_strcmp0@plt+0xa41c>
   1b25c:	mov	r2, #4
   1b260:	mov	r1, r0
   1b264:	mov	r0, sl
   1b268:	bl	16a40 <gtk_image_set_from_icon_name@plt>
   1b26c:	mov	r0, r9
   1b270:	bl	1686c <gtk_widget_show@plt>
   1b274:	ldr	r1, [pc, #612]	; 1b4e0 <g_strcmp0@plt+0x48a8>
   1b278:	ldr	r0, [r4]
   1b27c:	bl	16068 <gtk_builder_get_object@plt>
   1b280:	mov	r1, r5
   1b284:	bl	15d68 <g_type_check_instance_cast@plt>
   1b288:	mov	r9, #5
   1b28c:	mov	r3, r7
   1b290:	ldr	r2, [pc, #588]	; 1b4e4 <g_strcmp0@plt+0x48ac>
   1b294:	ldr	r1, [pc, #588]	; 1b4e8 <g_strcmp0@plt+0x48b0>
   1b298:	str	r9, [sp]
   1b29c:	mov	sl, r0
   1b2a0:	mov	r0, #0
   1b2a4:	bl	160f8 <dcngettext@plt>
   1b2a8:	mov	r1, r7
   1b2ac:	bl	160e0 <g_strdup_printf@plt>
   1b2b0:	mov	r1, r0
   1b2b4:	mov	fp, r0
   1b2b8:	ldr	r0, [pc, #556]	; 1b4ec <g_strcmp0@plt+0x48b4>
   1b2bc:	bl	160e0 <g_strdup_printf@plt>
   1b2c0:	mov	r1, r8
   1b2c4:	mov	r7, r0
   1b2c8:	mov	r0, sl
   1b2cc:	bl	15d68 <g_type_check_instance_cast@plt>
   1b2d0:	mov	r1, r7
   1b2d4:	bl	15ccc <gtk_label_set_label@plt>
   1b2d8:	mov	r0, fp
   1b2dc:	bl	16518 <g_free@plt>
   1b2e0:	mov	r0, r7
   1b2e4:	bl	16518 <g_free@plt>
   1b2e8:	ldr	r1, [pc, #512]	; 1b4f0 <g_strcmp0@plt+0x48b8>
   1b2ec:	ldr	r0, [r4]
   1b2f0:	bl	16068 <gtk_builder_get_object@plt>
   1b2f4:	mov	r1, r5
   1b2f8:	bl	15d68 <g_type_check_instance_cast@plt>
   1b2fc:	bl	1686c <gtk_widget_show@plt>
   1b300:	ldr	r1, [pc, #492]	; 1b4f4 <g_strcmp0@plt+0x48bc>
   1b304:	ldr	r0, [r4]
   1b308:	bl	16068 <gtk_builder_get_object@plt>
   1b30c:	mov	r1, r5
   1b310:	bl	15d68 <g_type_check_instance_cast@plt>
   1b314:	ldr	r7, [r4, #24]
   1b318:	cmp	r7, #0
   1b31c:	mov	sl, r0
   1b320:	beq	1b424 <g_strcmp0@plt+0x47ec>
   1b324:	ldr	r0, [r4, #20]
   1b328:	cmp	r0, #0
   1b32c:	bne	1b3c4 <g_strcmp0@plt+0x478c>
   1b330:	mov	r3, r7
   1b334:	ldr	r2, [pc, #444]	; 1b4f8 <g_strcmp0@plt+0x48c0>
   1b338:	ldr	r1, [pc, #444]	; 1b4fc <g_strcmp0@plt+0x48c4>
   1b33c:	str	r9, [sp]
   1b340:	bl	160f8 <dcngettext@plt>
   1b344:	mov	r1, r7
   1b348:	bl	160e0 <g_strdup_printf@plt>
   1b34c:	mov	r1, r8
   1b350:	mov	r7, r0
   1b354:	mov	r0, sl
   1b358:	bl	15d68 <g_type_check_instance_cast@plt>
   1b35c:	mov	r1, r7
   1b360:	bl	15ccc <gtk_label_set_label@plt>
   1b364:	mov	r0, r7
   1b368:	bl	16518 <g_free@plt>
   1b36c:	ldr	r1, [pc, #384]	; 1b4f4 <g_strcmp0@plt+0x48bc>
   1b370:	ldr	r0, [r4]
   1b374:	bl	16068 <gtk_builder_get_object@plt>
   1b378:	mov	r1, r5
   1b37c:	bl	15d68 <g_type_check_instance_cast@plt>
   1b380:	bl	1686c <gtk_widget_show@plt>
   1b384:	bl	1af30 <g_strcmp0@plt+0x42f8>
   1b388:	ldr	r2, [sp, #28]
   1b38c:	ldr	r3, [r6]
   1b390:	cmp	r2, r3
   1b394:	bne	1b4a0 <g_strcmp0@plt+0x4868>
   1b398:	add	sp, sp, #36	; 0x24
   1b39c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b3a0:	mov	r0, r9
   1b3a4:	bl	15dbc <gtk_widget_hide@plt>
   1b3a8:	ldr	r1, [pc, #300]	; 1b4dc <g_strcmp0@plt+0x48a4>
   1b3ac:	ldr	r0, [r4]
   1b3b0:	bl	16068 <gtk_builder_get_object@plt>
   1b3b4:	mov	r1, r5
   1b3b8:	bl	15d68 <g_type_check_instance_cast@plt>
   1b3bc:	bl	15dbc <gtk_widget_hide@plt>
   1b3c0:	b	1b274 <g_strcmp0@plt+0x463c>
   1b3c4:	mov	r1, #0
   1b3c8:	bl	15c54 <g_format_size@plt>
   1b3cc:	ldr	fp, [r4, #24]
   1b3d0:	ldr	r2, [pc, #296]	; 1b500 <g_strcmp0@plt+0x48c8>
   1b3d4:	mov	r3, fp
   1b3d8:	str	r9, [sp]
   1b3dc:	ldr	r1, [pc, #288]	; 1b504 <g_strcmp0@plt+0x48cc>
   1b3e0:	mov	r7, r0
   1b3e4:	mov	r0, #0
   1b3e8:	bl	160f8 <dcngettext@plt>
   1b3ec:	mov	r2, r7
   1b3f0:	mov	r1, fp
   1b3f4:	bl	160e0 <g_strdup_printf@plt>
   1b3f8:	mov	r1, r8
   1b3fc:	mov	r9, r0
   1b400:	mov	r0, sl
   1b404:	bl	15d68 <g_type_check_instance_cast@plt>
   1b408:	mov	r1, r9
   1b40c:	bl	15ccc <gtk_label_set_label@plt>
   1b410:	mov	r0, r9
   1b414:	bl	16518 <g_free@plt>
   1b418:	mov	r0, r7
   1b41c:	bl	16518 <g_free@plt>
   1b420:	b	1b36c <g_strcmp0@plt+0x4734>
   1b424:	mov	r1, r8
   1b428:	bl	15d68 <g_type_check_instance_cast@plt>
   1b42c:	ldr	r1, [pc, #212]	; 1b508 <g_strcmp0@plt+0x48d0>
   1b430:	bl	15ccc <gtk_label_set_label@plt>
   1b434:	b	1b36c <g_strcmp0@plt+0x4734>
   1b438:	mov	r2, #5
   1b43c:	ldr	r1, [pc, #200]	; 1b50c <g_strcmp0@plt+0x48d4>
   1b440:	mov	r0, #0
   1b444:	bl	16530 <dcgettext@plt>
   1b448:	mov	r2, #5
   1b44c:	ldr	r1, [pc, #188]	; 1b510 <g_strcmp0@plt+0x48d8>
   1b450:	mov	r4, r0
   1b454:	mov	r0, #0
   1b458:	bl	16530 <dcgettext@plt>
   1b45c:	mov	r1, r0
   1b460:	mov	r0, r4
   1b464:	bl	17924 <g_strcmp0@plt+0xcec>
   1b468:	b	1b384 <g_strcmp0@plt+0x474c>
   1b46c:	mov	r2, r8
   1b470:	ldr	r1, [pc, #156]	; 1b514 <g_strcmp0@plt+0x48dc>
   1b474:	mov	r0, r7
   1b478:	bl	16530 <dcgettext@plt>
   1b47c:	mov	r2, r8
   1b480:	ldr	r1, [pc, #144]	; 1b518 <g_strcmp0@plt+0x48e0>
   1b484:	mov	r4, r0
   1b488:	mov	r0, r7
   1b48c:	bl	16530 <dcgettext@plt>
   1b490:	mov	r1, r0
   1b494:	mov	r0, r4
   1b498:	bl	17924 <g_strcmp0@plt+0xcec>
   1b49c:	b	1b384 <g_strcmp0@plt+0x474c>
   1b4a0:	bl	164ac <__stack_chk_fail@plt>
   1b4a4:	andeq	ip, r3, r0, asr lr
   1b4a8:	andeq	sp, r3, r0, lsl r6
   1b4ac:	andeq	r6, r2, r4, asr #5
   1b4b0:	andeq	r6, r2, r8, lsl #9
   1b4b4:	andeq	r7, r2, ip, ror #6
   1b4b8:	andeq	r6, r2, r0, ror #4
   1b4bc:	andeq	r6, r2, r8, lsl #6
   1b4c0:			; <UNDEFINED> instruction: 0x000266b8
   1b4c4:	ldrdeq	r6, [r2], -r0
   1b4c8:	andeq	r7, r2, r4, asr #7
   1b4cc:	ldrdeq	r7, [r2], -r8
   1b4d0:	andeq	r6, r2, r0, lsr #22
   1b4d4:	andeq	r6, r2, ip, lsr #22
   1b4d8:	andeq	r6, r2, ip, lsr #14
   1b4dc:	andeq	r7, r2, ip, asr #8
   1b4e0:	andeq	r6, r2, ip, asr r3
   1b4e4:	andeq	r7, r2, r8, asr r4
   1b4e8:	andeq	r7, r2, r8, ror r4
   1b4ec:	muleq	r2, r0, r3
   1b4f0:	andeq	r6, r2, r0, lsl r7
   1b4f4:	andeq	r6, r2, r0, lsr #13
   1b4f8:	muleq	r2, r8, r4
   1b4fc:	andeq	r7, r2, ip, lsr #9
   1b500:	andeq	r7, r2, r0, asr #9
   1b504:	ldrdeq	r7, [r2], -ip
   1b508:	andeq	r7, r2, r8, ror #22
   1b50c:	andeq	r7, r2, r4, lsl #7
   1b510:	andeq	r7, r2, r0, lsr #7
   1b514:	andeq	r7, r2, r8, ror #7
   1b518:	andeq	r7, r2, r4, lsl #8
   1b51c:	push	{r4, r5, r6, r7, r8, lr}
   1b520:	sub	sp, sp, #48	; 0x30
   1b524:	ldr	r8, [pc, #316]	; 1b668 <g_strcmp0@plt+0x4a30>
   1b528:	ldr	r2, [pc, #316]	; 1b66c <g_strcmp0@plt+0x4a34>
   1b52c:	ldr	r1, [pc, #316]	; 1b670 <g_strcmp0@plt+0x4a38>
   1b530:	ldr	r3, [r8]
   1b534:	ldr	r0, [r2]
   1b538:	str	r3, [sp, #44]	; 0x2c
   1b53c:	bl	16068 <gtk_builder_get_object@plt>
   1b540:	mov	r4, r0
   1b544:	bl	164c4 <gtk_tree_view_get_type@plt>
   1b548:	mov	r1, r0
   1b54c:	mov	r0, r4
   1b550:	bl	15d68 <g_type_check_instance_cast@plt>
   1b554:	bl	15f6c <gtk_tree_view_get_model@plt>
   1b558:	add	r1, sp, #12
   1b55c:	mov	r5, r0
   1b560:	bl	16548 <gtk_tree_model_get_iter_first@plt>
   1b564:	cmp	r0, #0
   1b568:	beq	1b648 <g_strcmp0@plt+0x4a10>
   1b56c:	bl	15e58 <gtk_tree_store_get_type@plt>
   1b570:	mvn	r6, #0
   1b574:	mov	r7, r0
   1b578:	add	r3, sp, #8
   1b57c:	mov	r2, #2
   1b580:	add	r1, sp, #12
   1b584:	mov	r0, r5
   1b588:	str	r6, [sp]
   1b58c:	bl	16b30 <gtk_tree_model_get@plt>
   1b590:	ldr	r4, [sp, #8]
   1b594:	mov	r1, r7
   1b598:	sub	r4, r4, #8
   1b59c:	mov	r0, r5
   1b5a0:	clz	r4, r4
   1b5a4:	lsr	r4, r4, #5
   1b5a8:	bl	15d68 <g_type_check_instance_cast@plt>
   1b5ac:	mov	r3, r4
   1b5b0:	mov	r2, #3
   1b5b4:	add	r1, sp, #12
   1b5b8:	str	r6, [sp]
   1b5bc:	bl	16164 <gtk_tree_store_set@plt>
   1b5c0:	add	r2, sp, #12
   1b5c4:	add	r1, sp, #28
   1b5c8:	mov	r0, r5
   1b5cc:	bl	15eb8 <gtk_tree_model_iter_children@plt>
   1b5d0:	cmp	r0, #0
   1b5d4:	beq	1b634 <g_strcmp0@plt+0x49fc>
   1b5d8:	add	r3, sp, #8
   1b5dc:	mov	r2, #2
   1b5e0:	add	r1, sp, #28
   1b5e4:	mov	r0, r5
   1b5e8:	str	r6, [sp]
   1b5ec:	bl	16b30 <gtk_tree_model_get@plt>
   1b5f0:	ldr	r4, [sp, #8]
   1b5f4:	mov	r1, r7
   1b5f8:	sub	r4, r4, #8
   1b5fc:	mov	r0, r5
   1b600:	clz	r4, r4
   1b604:	lsr	r4, r4, #5
   1b608:	bl	15d68 <g_type_check_instance_cast@plt>
   1b60c:	mov	r3, r4
   1b610:	mov	r2, #3
   1b614:	add	r1, sp, #28
   1b618:	str	r6, [sp]
   1b61c:	bl	16164 <gtk_tree_store_set@plt>
   1b620:	add	r1, sp, #28
   1b624:	mov	r0, r5
   1b628:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   1b62c:	cmp	r0, #0
   1b630:	bne	1b5d8 <g_strcmp0@plt+0x49a0>
   1b634:	add	r1, sp, #12
   1b638:	mov	r0, r5
   1b63c:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   1b640:	cmp	r0, #0
   1b644:	bne	1b578 <g_strcmp0@plt+0x4940>
   1b648:	bl	1b00c <g_strcmp0@plt+0x43d4>
   1b64c:	ldr	r2, [sp, #44]	; 0x2c
   1b650:	ldr	r3, [r8]
   1b654:	cmp	r2, r3
   1b658:	bne	1b664 <g_strcmp0@plt+0x4a2c>
   1b65c:	add	sp, sp, #48	; 0x30
   1b660:	pop	{r4, r5, r6, r7, r8, pc}
   1b664:	bl	164ac <__stack_chk_fail@plt>
   1b668:	andeq	ip, r3, r0, asr lr
   1b66c:	andeq	sp, r3, r0, lsl r6
   1b670:	andeq	r6, r2, r4, asr #5
   1b674:	push	{r4, r5, r6, r7, lr}
   1b678:	sub	sp, sp, #52	; 0x34
   1b67c:	ldr	r7, [pc, #252]	; 1b780 <g_strcmp0@plt+0x4b48>
   1b680:	ldr	r2, [pc, #252]	; 1b784 <g_strcmp0@plt+0x4b4c>
   1b684:	ldr	r1, [pc, #252]	; 1b788 <g_strcmp0@plt+0x4b50>
   1b688:	ldr	r3, [r7]
   1b68c:	ldr	r0, [r2]
   1b690:	str	r3, [sp, #44]	; 0x2c
   1b694:	bl	16068 <gtk_builder_get_object@plt>
   1b698:	mov	r4, r0
   1b69c:	bl	164c4 <gtk_tree_view_get_type@plt>
   1b6a0:	mov	r1, r0
   1b6a4:	mov	r0, r4
   1b6a8:	bl	15d68 <g_type_check_instance_cast@plt>
   1b6ac:	bl	15f6c <gtk_tree_view_get_model@plt>
   1b6b0:	add	r1, sp, #12
   1b6b4:	mov	r4, r0
   1b6b8:	bl	16548 <gtk_tree_model_get_iter_first@plt>
   1b6bc:	cmp	r0, #0
   1b6c0:	beq	1b760 <g_strcmp0@plt+0x4b28>
   1b6c4:	bl	15e58 <gtk_tree_store_get_type@plt>
   1b6c8:	mvn	r5, #0
   1b6cc:	mov	r6, r0
   1b6d0:	mvn	r2, #0
   1b6d4:	add	r1, sp, #12
   1b6d8:	mov	r0, r4
   1b6dc:	bl	16b30 <gtk_tree_model_get@plt>
   1b6e0:	mov	r1, r6
   1b6e4:	mov	r0, r4
   1b6e8:	bl	15d68 <g_type_check_instance_cast@plt>
   1b6ec:	mov	r3, #0
   1b6f0:	mov	r2, #3
   1b6f4:	add	r1, sp, #12
   1b6f8:	str	r5, [sp]
   1b6fc:	bl	16164 <gtk_tree_store_set@plt>
   1b700:	add	r2, sp, #12
   1b704:	add	r1, sp, #28
   1b708:	mov	r0, r4
   1b70c:	bl	15eb8 <gtk_tree_model_iter_children@plt>
   1b710:	cmp	r0, #0
   1b714:	beq	1b74c <g_strcmp0@plt+0x4b14>
   1b718:	mov	r1, r6
   1b71c:	mov	r0, r4
   1b720:	bl	15d68 <g_type_check_instance_cast@plt>
   1b724:	mov	r3, #0
   1b728:	mov	r2, #3
   1b72c:	add	r1, sp, #28
   1b730:	str	r5, [sp]
   1b734:	bl	16164 <gtk_tree_store_set@plt>
   1b738:	add	r1, sp, #28
   1b73c:	mov	r0, r4
   1b740:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   1b744:	cmp	r0, #0
   1b748:	bne	1b718 <g_strcmp0@plt+0x4ae0>
   1b74c:	add	r1, sp, #12
   1b750:	mov	r0, r4
   1b754:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   1b758:	cmp	r0, #0
   1b75c:	bne	1b6d0 <g_strcmp0@plt+0x4a98>
   1b760:	bl	1b00c <g_strcmp0@plt+0x43d4>
   1b764:	ldr	r2, [sp, #44]	; 0x2c
   1b768:	ldr	r3, [r7]
   1b76c:	cmp	r2, r3
   1b770:	bne	1b77c <g_strcmp0@plt+0x4b44>
   1b774:	add	sp, sp, #52	; 0x34
   1b778:	pop	{r4, r5, r6, r7, pc}
   1b77c:	bl	164ac <__stack_chk_fail@plt>
   1b780:	andeq	ip, r3, r0, asr lr
   1b784:	andeq	sp, r3, r0, lsl r6
   1b788:	andeq	r6, r2, r4, asr #5
   1b78c:	push	{r4, r5, r6, r7, lr}
   1b790:	sub	sp, sp, #52	; 0x34
   1b794:	ldr	r7, [pc, #276]	; 1b8b0 <g_strcmp0@plt+0x4c78>
   1b798:	ldr	r2, [pc, #276]	; 1b8b4 <g_strcmp0@plt+0x4c7c>
   1b79c:	ldr	r1, [pc, #276]	; 1b8b8 <g_strcmp0@plt+0x4c80>
   1b7a0:	ldr	r3, [r7]
   1b7a4:	ldr	r0, [r2]
   1b7a8:	str	r3, [sp, #44]	; 0x2c
   1b7ac:	bl	16068 <gtk_builder_get_object@plt>
   1b7b0:	mov	r4, r0
   1b7b4:	bl	164c4 <gtk_tree_view_get_type@plt>
   1b7b8:	mov	r1, r0
   1b7bc:	mov	r0, r4
   1b7c0:	bl	15d68 <g_type_check_instance_cast@plt>
   1b7c4:	bl	15f6c <gtk_tree_view_get_model@plt>
   1b7c8:	add	r1, sp, #12
   1b7cc:	mov	r4, r0
   1b7d0:	bl	16548 <gtk_tree_model_get_iter_first@plt>
   1b7d4:	cmp	r0, #0
   1b7d8:	beq	1b890 <g_strcmp0@plt+0x4c58>
   1b7dc:	mvn	r5, #0
   1b7e0:	add	r3, sp, #8
   1b7e4:	str	r5, [sp]
   1b7e8:	mov	r2, #2
   1b7ec:	add	r1, sp, #12
   1b7f0:	mov	r0, r4
   1b7f4:	bl	16b30 <gtk_tree_model_get@plt>
   1b7f8:	ldr	r3, [sp, #8]
   1b7fc:	cmp	r3, #9
   1b800:	beq	1b828 <g_strcmp0@plt+0x4bf0>
   1b804:	bl	15e58 <gtk_tree_store_get_type@plt>
   1b808:	mov	r1, r0
   1b80c:	mov	r0, r4
   1b810:	bl	15d68 <g_type_check_instance_cast@plt>
   1b814:	str	r5, [sp]
   1b818:	mov	r3, #1
   1b81c:	mov	r2, #3
   1b820:	add	r1, sp, #12
   1b824:	bl	16164 <gtk_tree_store_set@plt>
   1b828:	add	r2, sp, #12
   1b82c:	add	r1, sp, #28
   1b830:	mov	r0, r4
   1b834:	bl	15eb8 <gtk_tree_model_iter_children@plt>
   1b838:	cmp	r0, #0
   1b83c:	beq	1b87c <g_strcmp0@plt+0x4c44>
   1b840:	bl	15e58 <gtk_tree_store_get_type@plt>
   1b844:	mov	r6, r0
   1b848:	mov	r1, r6
   1b84c:	mov	r0, r4
   1b850:	bl	15d68 <g_type_check_instance_cast@plt>
   1b854:	mov	r3, #1
   1b858:	mov	r2, #3
   1b85c:	add	r1, sp, #28
   1b860:	str	r5, [sp]
   1b864:	bl	16164 <gtk_tree_store_set@plt>
   1b868:	add	r1, sp, #28
   1b86c:	mov	r0, r4
   1b870:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   1b874:	cmp	r0, #0
   1b878:	bne	1b848 <g_strcmp0@plt+0x4c10>
   1b87c:	add	r1, sp, #12
   1b880:	mov	r0, r4
   1b884:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   1b888:	cmp	r0, #0
   1b88c:	bne	1b7e0 <g_strcmp0@plt+0x4ba8>
   1b890:	bl	1b00c <g_strcmp0@plt+0x43d4>
   1b894:	ldr	r2, [sp, #44]	; 0x2c
   1b898:	ldr	r3, [r7]
   1b89c:	cmp	r2, r3
   1b8a0:	bne	1b8ac <g_strcmp0@plt+0x4c74>
   1b8a4:	add	sp, sp, #52	; 0x34
   1b8a8:	pop	{r4, r5, r6, r7, pc}
   1b8ac:	bl	164ac <__stack_chk_fail@plt>
   1b8b0:	andeq	ip, r3, r0, asr lr
   1b8b4:	andeq	sp, r3, r0, lsl r6
   1b8b8:	andeq	r6, r2, r4, asr #5
   1b8bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b8c0:	sub	sp, sp, #36	; 0x24
   1b8c4:	ldr	r8, [pc, #640]	; 1bb4c <g_strcmp0@plt+0x4f14>
   1b8c8:	mov	r5, #0
   1b8cc:	add	r2, sp, #16
   1b8d0:	ldr	r3, [r8]
   1b8d4:	str	r5, [sp, #16]
   1b8d8:	str	r3, [sp, #28]
   1b8dc:	str	r5, [sp, #20]
   1b8e0:	bl	160a4 <pk_client_generic_finish@plt>
   1b8e4:	subs	r9, r0, #0
   1b8e8:	beq	1bb00 <g_strcmp0@plt+0x4ec8>
   1b8ec:	bl	15e64 <pk_results_get_error_code@plt>
   1b8f0:	subs	r4, r0, #0
   1b8f4:	beq	1b9c8 <g_strcmp0@plt+0x4d90>
   1b8f8:	bl	15f24 <pk_error_get_code@plt>
   1b8fc:	bl	16110 <pk_error_enum_to_string@plt>
   1b900:	mov	r6, r0
   1b904:	mov	r0, r4
   1b908:	bl	15f0c <pk_error_get_details@plt>
   1b90c:	ldr	r2, [pc, #572]	; 1bb50 <g_strcmp0@plt+0x4f18>
   1b910:	mov	r3, r6
   1b914:	mov	r1, #16
   1b918:	str	r0, [sp]
   1b91c:	ldr	r0, [pc, #560]	; 1bb54 <g_strcmp0@plt+0x4f1c>
   1b920:	bl	15dec <g_log@plt>
   1b924:	ldr	r3, [pc, #556]	; 1bb58 <g_strcmp0@plt+0x4f20>
   1b928:	ldr	r1, [pc, #556]	; 1bb5c <g_strcmp0@plt+0x4f24>
   1b92c:	ldr	r0, [r3]
   1b930:	bl	16068 <gtk_builder_get_object@plt>
   1b934:	mov	r6, r0
   1b938:	bl	16bfc <gtk_window_get_type@plt>
   1b93c:	mov	r1, r0
   1b940:	mov	r0, r6
   1b944:	bl	15d68 <g_type_check_instance_cast@plt>
   1b948:	mov	r6, r0
   1b94c:	mov	r0, r4
   1b950:	bl	15f24 <pk_error_get_code@plt>
   1b954:	bl	1ee78 <g_strcmp0@plt+0x8240>
   1b958:	mov	r7, r0
   1b95c:	mov	r0, r4
   1b960:	bl	15f24 <pk_error_get_code@plt>
   1b964:	bl	1f508 <g_strcmp0@plt+0x88d0>
   1b968:	mov	sl, r0
   1b96c:	mov	r0, r4
   1b970:	bl	15f0c <pk_error_get_details@plt>
   1b974:	mov	r2, sl
   1b978:	mov	r1, r7
   1b97c:	mov	r3, r0
   1b980:	mov	r0, r6
   1b984:	bl	24790 <g_strcmp0@plt+0xdb58>
   1b988:	ldr	r0, [sp, #20]
   1b98c:	bl	16518 <g_free@plt>
   1b990:	mov	r0, r5
   1b994:	bl	16518 <g_free@plt>
   1b998:	mov	r0, r5
   1b99c:	bl	16518 <g_free@plt>
   1b9a0:	mov	r0, r4
   1b9a4:	bl	16878 <g_object_unref@plt>
   1b9a8:	mov	r0, r9
   1b9ac:	bl	16878 <g_object_unref@plt>
   1b9b0:	ldr	r2, [sp, #28]
   1b9b4:	ldr	r3, [r8]
   1b9b8:	cmp	r2, r3
   1b9bc:	bne	1bb40 <g_strcmp0@plt+0x4f08>
   1b9c0:	add	sp, sp, #36	; 0x24
   1b9c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9c8:	mov	r0, r9
   1b9cc:	bl	1614c <pk_results_get_distro_upgrade_array@plt>
   1b9d0:	ldr	r3, [r0, #4]
   1b9d4:	mov	r7, r0
   1b9d8:	cmp	r3, #0
   1b9dc:	beq	1baf8 <g_strcmp0@plt+0x4ec0>
   1b9e0:	ldr	fp, [pc, #376]	; 1bb60 <g_strcmp0@plt+0x4f28>
   1b9e4:	mov	r5, r4
   1b9e8:	b	1b9fc <g_strcmp0@plt+0x4dc4>
   1b9ec:	ldr	r3, [r7, #4]
   1b9f0:	add	r5, r5, #1
   1b9f4:	cmp	r5, r3
   1b9f8:	bcs	1baf8 <g_strcmp0@plt+0x4ec0>
   1b9fc:	ldr	r1, [r7]
   1ba00:	mov	r3, #0
   1ba04:	add	r2, sp, #24
   1ba08:	ldr	r6, [r1, r5, lsl #2]
   1ba0c:	mov	r1, fp
   1ba10:	mov	r0, r6
   1ba14:	bl	165cc <g_object_get@plt>
   1ba18:	ldr	sl, [sp, #24]
   1ba1c:	cmp	sl, #1
   1ba20:	bne	1b9ec <g_strcmp0@plt+0x4db4>
   1ba24:	cmp	r6, #0
   1ba28:	beq	1bb44 <g_strcmp0@plt+0x4f0c>
   1ba2c:	ldr	r5, [pc, #292]	; 1bb58 <g_strcmp0@plt+0x4f20>
   1ba30:	mov	r3, #0
   1ba34:	add	r2, sp, #20
   1ba38:	mov	r0, r6
   1ba3c:	ldr	r1, [pc, #288]	; 1bb64 <g_strcmp0@plt+0x4f2c>
   1ba40:	bl	165cc <g_object_get@plt>
   1ba44:	ldr	r1, [pc, #284]	; 1bb68 <g_strcmp0@plt+0x4f30>
   1ba48:	ldr	r0, [r5]
   1ba4c:	bl	16068 <gtk_builder_get_object@plt>
   1ba50:	mov	r4, r0
   1ba54:	bl	15d14 <gtk_widget_get_type@plt>
   1ba58:	mov	r1, r0
   1ba5c:	mov	fp, r0
   1ba60:	mov	r0, r4
   1ba64:	bl	15d68 <g_type_check_instance_cast@plt>
   1ba68:	mov	r2, #5
   1ba6c:	ldr	r1, [pc, #248]	; 1bb6c <g_strcmp0@plt+0x4f34>
   1ba70:	str	r0, [sp, #12]
   1ba74:	mov	r0, #0
   1ba78:	bl	16530 <dcgettext@plt>
   1ba7c:	ldr	r1, [sp, #20]
   1ba80:	bl	160e0 <g_strdup_printf@plt>
   1ba84:	mov	r1, r0
   1ba88:	mov	r4, r0
   1ba8c:	ldr	r0, [pc, #220]	; 1bb70 <g_strcmp0@plt+0x4f38>
   1ba90:	bl	160e0 <g_strdup_printf@plt>
   1ba94:	mov	r6, r0
   1ba98:	bl	15cc0 <gtk_label_get_type@plt>
   1ba9c:	ldr	r3, [sp, #12]
   1baa0:	mov	r1, r0
   1baa4:	mov	r0, r3
   1baa8:	bl	15d68 <g_type_check_instance_cast@plt>
   1baac:	mov	r1, r6
   1bab0:	bl	15ccc <gtk_label_set_label@plt>
   1bab4:	ldr	r1, [pc, #184]	; 1bb74 <g_strcmp0@plt+0x4f3c>
   1bab8:	ldr	r0, [r5]
   1babc:	bl	16068 <gtk_builder_get_object@plt>
   1bac0:	mov	r1, fp
   1bac4:	bl	15d68 <g_type_check_instance_cast@plt>
   1bac8:	bl	1686c <gtk_widget_show@plt>
   1bacc:	str	sl, [r5, #48]	; 0x30
   1bad0:	bl	1b00c <g_strcmp0@plt+0x43d4>
   1bad4:	ldr	r0, [sp, #20]
   1bad8:	bl	16518 <g_free@plt>
   1badc:	mov	r0, r4
   1bae0:	bl	16518 <g_free@plt>
   1bae4:	mov	r0, r6
   1bae8:	bl	16518 <g_free@plt>
   1baec:	mov	r0, r7
   1baf0:	bl	169c8 <g_ptr_array_unref@plt>
   1baf4:	b	1b9a8 <g_strcmp0@plt+0x4d70>
   1baf8:	mov	r6, #0
   1bafc:	b	1bad4 <g_strcmp0@plt+0x4e9c>
   1bb00:	mov	r2, #5
   1bb04:	ldr	r1, [pc, #108]	; 1bb78 <g_strcmp0@plt+0x4f40>
   1bb08:	bl	16530 <dcgettext@plt>
   1bb0c:	ldr	r3, [sp, #16]
   1bb10:	mov	r1, r9
   1bb14:	ldr	r2, [r3, #8]
   1bb18:	bl	17058 <g_strcmp0@plt+0x420>
   1bb1c:	ldr	r0, [sp, #16]
   1bb20:	bl	15c78 <g_error_free@plt>
   1bb24:	ldr	r0, [sp, #20]
   1bb28:	bl	16518 <g_free@plt>
   1bb2c:	mov	r0, r9
   1bb30:	bl	16518 <g_free@plt>
   1bb34:	mov	r0, r9
   1bb38:	bl	16518 <g_free@plt>
   1bb3c:	b	1b9b0 <g_strcmp0@plt+0x4d78>
   1bb40:	bl	164ac <__stack_chk_fail@plt>
   1bb44:	mov	r4, r6
   1bb48:	b	1bad4 <g_strcmp0@plt+0x4e9c>
   1bb4c:	andeq	ip, r3, r0, asr lr
   1bb50:	andeq	r7, r2, r0, lsr #10
   1bb54:	andeq	r6, r2, r0, ror #4
   1bb58:	andeq	sp, r3, r0, lsl r6
   1bb5c:	andeq	r6, r2, ip, lsr #4
   1bb60:	andeq	sl, r2, r4, lsr #11
   1bb64:	andeq	r6, r2, r0, asr #16
   1bb68:	andeq	r7, r2, r0, asr r5
   1bb6c:	andeq	r7, r2, r0, ror #10
   1bb70:	muleq	r2, r4, r5
   1bb74:	ldrdeq	r6, [r2], -r8
   1bb78:	strdeq	r7, [r2], -r4
   1bb7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb80:	sub	sp, sp, #76	; 0x4c
   1bb84:	ldr	r8, [pc, #752]	; 1be7c <g_strcmp0@plt+0x5244>
   1bb88:	mov	r3, #0
   1bb8c:	str	r3, [sp, #32]
   1bb90:	ldr	r3, [r8]
   1bb94:	add	r2, sp, #32
   1bb98:	str	r3, [sp, #68]	; 0x44
   1bb9c:	bl	160a4 <pk_client_generic_finish@plt>
   1bba0:	subs	r3, r0, #0
   1bba4:	str	r3, [sp, #24]
   1bba8:	beq	1be18 <g_strcmp0@plt+0x51e0>
   1bbac:	bl	15e64 <pk_results_get_error_code@plt>
   1bbb0:	subs	r4, r0, #0
   1bbb4:	beq	1bc70 <g_strcmp0@plt+0x5038>
   1bbb8:	bl	15f24 <pk_error_get_code@plt>
   1bbbc:	bl	16110 <pk_error_enum_to_string@plt>
   1bbc0:	mov	r5, r0
   1bbc4:	mov	r0, r4
   1bbc8:	bl	15f0c <pk_error_get_details@plt>
   1bbcc:	ldr	r2, [pc, #684]	; 1be80 <g_strcmp0@plt+0x5248>
   1bbd0:	mov	r3, r5
   1bbd4:	mov	r1, #16
   1bbd8:	str	r0, [sp]
   1bbdc:	ldr	r0, [pc, #672]	; 1be84 <g_strcmp0@plt+0x524c>
   1bbe0:	bl	15dec <g_log@plt>
   1bbe4:	ldr	r3, [pc, #668]	; 1be88 <g_strcmp0@plt+0x5250>
   1bbe8:	ldr	r1, [pc, #668]	; 1be8c <g_strcmp0@plt+0x5254>
   1bbec:	ldr	r0, [r3]
   1bbf0:	bl	16068 <gtk_builder_get_object@plt>
   1bbf4:	mov	r5, r0
   1bbf8:	bl	16bfc <gtk_window_get_type@plt>
   1bbfc:	mov	r1, r0
   1bc00:	mov	r0, r5
   1bc04:	bl	15d68 <g_type_check_instance_cast@plt>
   1bc08:	mov	r5, r0
   1bc0c:	mov	r0, r4
   1bc10:	bl	15f24 <pk_error_get_code@plt>
   1bc14:	bl	1ee78 <g_strcmp0@plt+0x8240>
   1bc18:	mov	r6, r0
   1bc1c:	mov	r0, r4
   1bc20:	bl	15f24 <pk_error_get_code@plt>
   1bc24:	bl	1f508 <g_strcmp0@plt+0x88d0>
   1bc28:	mov	r7, r0
   1bc2c:	mov	r0, r4
   1bc30:	bl	15f0c <pk_error_get_details@plt>
   1bc34:	mov	r2, r7
   1bc38:	mov	r1, r6
   1bc3c:	mov	r3, r0
   1bc40:	mov	r0, r5
   1bc44:	bl	24790 <g_strcmp0@plt+0xdb58>
   1bc48:	mov	r0, r4
   1bc4c:	bl	16878 <g_object_unref@plt>
   1bc50:	ldr	r0, [sp, #24]
   1bc54:	bl	16878 <g_object_unref@plt>
   1bc58:	ldr	r2, [sp, #68]	; 0x44
   1bc5c:	ldr	r3, [r8]
   1bc60:	cmp	r2, r3
   1bc64:	bne	1be78 <g_strcmp0@plt+0x5240>
   1bc68:	add	sp, sp, #76	; 0x4c
   1bc6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc70:	ldr	r0, [sp, #24]
   1bc74:	bl	169e0 <pk_results_get_details_array@plt>
   1bc78:	ldr	r6, [r0, #4]
   1bc7c:	mov	r5, r0
   1bc80:	cmp	r6, #0
   1bc84:	beq	1be40 <g_strcmp0@plt+0x5208>
   1bc88:	ldr	sl, [pc, #504]	; 1be88 <g_strcmp0@plt+0x5250>
   1bc8c:	ldr	r1, [pc, #508]	; 1be90 <g_strcmp0@plt+0x5258>
   1bc90:	ldr	r0, [sl]
   1bc94:	bl	16068 <gtk_builder_get_object@plt>
   1bc98:	mov	r6, r0
   1bc9c:	bl	164c4 <gtk_tree_view_get_type@plt>
   1bca0:	mov	r1, r0
   1bca4:	str	r0, [sp, #28]
   1bca8:	mov	r0, r6
   1bcac:	bl	15d68 <g_type_check_instance_cast@plt>
   1bcb0:	bl	15f6c <gtk_tree_view_get_model@plt>
   1bcb4:	ldr	r3, [r5, #4]
   1bcb8:	cmp	r3, #0
   1bcbc:	mov	r6, r0
   1bcc0:	beq	1bdb8 <g_strcmp0@plt+0x5180>
   1bcc4:	add	fp, sp, #40	; 0x28
   1bcc8:	b	1bd4c <g_strcmp0@plt+0x5114>
   1bccc:	mov	r2, r9
   1bcd0:	add	r1, sp, #52	; 0x34
   1bcd4:	mov	r0, r6
   1bcd8:	bl	16adc <gtk_tree_model_get_iter@plt>
   1bcdc:	mov	r0, r9
   1bce0:	bl	16170 <gtk_tree_path_free@plt>
   1bce4:	mov	r0, r7
   1bce8:	ldr	r9, [sl, #16]
   1bcec:	bl	15aec <g_object_ref@plt>
   1bcf0:	ldr	r3, [sp, #40]	; 0x28
   1bcf4:	mov	r1, #8
   1bcf8:	mov	r2, #7
   1bcfc:	mvn	r7, #0
   1bd00:	str	r3, [sp, #12]
   1bd04:	str	r3, [sp, #4]
   1bd08:	str	r1, [sp, #8]
   1bd0c:	str	r2, [sp]
   1bd10:	str	r7, [sp, #16]
   1bd14:	mov	r2, #11
   1bd18:	add	r1, sp, #52	; 0x34
   1bd1c:	mov	r3, r0
   1bd20:	mov	r0, r9
   1bd24:	bl	16164 <gtk_tree_store_set@plt>
   1bd28:	ldrd	r2, [sp, #40]	; 0x28
   1bd2c:	orrs	r3, r2, r3
   1bd30:	beq	1bd9c <g_strcmp0@plt+0x5164>
   1bd34:	ldr	r0, [sp, #36]	; 0x24
   1bd38:	bl	16518 <g_free@plt>
   1bd3c:	ldr	r3, [r5, #4]
   1bd40:	add	r4, r4, #1
   1bd44:	cmp	r3, r4
   1bd48:	bls	1bdb8 <g_strcmp0@plt+0x5180>
   1bd4c:	ldr	r1, [r5]
   1bd50:	mov	r0, #0
   1bd54:	ldr	r3, [pc, #312]	; 1be94 <g_strcmp0@plt+0x525c>
   1bd58:	ldr	r7, [r1, r4, lsl #2]
   1bd5c:	add	r2, sp, #36	; 0x24
   1bd60:	ldr	r1, [pc, #304]	; 1be98 <g_strcmp0@plt+0x5260>
   1bd64:	str	r0, [sp, #4]
   1bd68:	str	fp, [sp]
   1bd6c:	mov	r0, r7
   1bd70:	bl	165cc <g_object_get@plt>
   1bd74:	ldr	r1, [sp, #36]	; 0x24
   1bd78:	mov	r0, r6
   1bd7c:	bl	19580 <g_strcmp0@plt+0x2948>
   1bd80:	subs	r9, r0, #0
   1bd84:	bne	1bccc <g_strcmp0@plt+0x5094>
   1bd88:	ldr	r2, [pc, #268]	; 1be9c <g_strcmp0@plt+0x5264>
   1bd8c:	mov	r1, #128	; 0x80
   1bd90:	ldr	r0, [pc, #236]	; 1be84 <g_strcmp0@plt+0x524c>
   1bd94:	bl	15dec <g_log@plt>
   1bd98:	b	1bd34 <g_strcmp0@plt+0x50fc>
   1bd9c:	mov	r3, #10
   1bda0:	str	r7, [sp]
   1bda4:	mov	r2, r3
   1bda8:	add	r1, sp, #52	; 0x34
   1bdac:	ldr	r0, [sl, #16]
   1bdb0:	bl	16164 <gtk_tree_store_set@plt>
   1bdb4:	b	1bd34 <g_strcmp0@plt+0x50fc>
   1bdb8:	ldr	r1, [pc, #208]	; 1be90 <g_strcmp0@plt+0x5258>
   1bdbc:	ldr	r0, [sl]
   1bdc0:	bl	16068 <gtk_builder_get_object@plt>
   1bdc4:	mov	r4, r0
   1bdc8:	bl	15d14 <gtk_widget_get_type@plt>
   1bdcc:	mov	r1, r0
   1bdd0:	mov	r0, r4
   1bdd4:	bl	15d68 <g_type_check_instance_cast@plt>
   1bdd8:	ldr	r1, [sp, #28]
   1bddc:	bl	15d68 <g_type_check_instance_cast@plt>
   1bde0:	bl	16614 <gtk_tree_view_get_selection@plt>
   1bde4:	mov	r6, r0
   1bde8:	bl	168fc <gtk_tree_selection_unselect_all@plt>
   1bdec:	bl	16b6c <gtk_tree_path_new_first@plt>
   1bdf0:	mov	r1, r0
   1bdf4:	mov	r4, r0
   1bdf8:	mov	r0, r6
   1bdfc:	bl	15f00 <gtk_tree_selection_select_path@plt>
   1be00:	mov	r0, r4
   1be04:	bl	16170 <gtk_tree_path_free@plt>
   1be08:	bl	1b00c <g_strcmp0@plt+0x43d4>
   1be0c:	mov	r0, r5
   1be10:	bl	169c8 <g_ptr_array_unref@plt>
   1be14:	b	1bc50 <g_strcmp0@plt+0x5018>
   1be18:	mov	r2, #5
   1be1c:	ldr	r1, [pc, #124]	; 1bea0 <g_strcmp0@plt+0x5268>
   1be20:	bl	16530 <dcgettext@plt>
   1be24:	ldr	r3, [sp, #32]
   1be28:	ldr	r1, [sp, #24]
   1be2c:	ldr	r2, [r3, #8]
   1be30:	bl	17058 <g_strcmp0@plt+0x420>
   1be34:	ldr	r0, [sp, #32]
   1be38:	bl	15c78 <g_error_free@plt>
   1be3c:	b	1bc58 <g_strcmp0@plt+0x5020>
   1be40:	mov	r2, #5
   1be44:	ldr	r1, [pc, #88]	; 1bea4 <g_strcmp0@plt+0x526c>
   1be48:	mov	r0, r6
   1be4c:	bl	16530 <dcgettext@plt>
   1be50:	mov	r2, #5
   1be54:	ldr	r1, [pc, #76]	; 1bea8 <g_strcmp0@plt+0x5270>
   1be58:	mov	r4, r0
   1be5c:	mov	r0, r6
   1be60:	bl	16530 <dcgettext@plt>
   1be64:	mov	r2, r6
   1be68:	mov	r1, r0
   1be6c:	mov	r0, r4
   1be70:	bl	17058 <g_strcmp0@plt+0x420>
   1be74:	b	1be0c <g_strcmp0@plt+0x51d4>
   1be78:	bl	164ac <__stack_chk_fail@plt>
   1be7c:	andeq	ip, r3, r0, asr lr
   1be80:	andeq	r7, r2, r0, lsr #11
   1be84:	andeq	r6, r2, r0, ror #4
   1be88:	andeq	sp, r3, r0, lsl r6
   1be8c:	andeq	r6, r2, ip, lsr #4
   1be90:	andeq	r6, r2, r4, asr #5
   1be94:	andeq	r6, r2, ip, lsl #12
   1be98:	andeq	r6, r2, r4, lsr r8
   1be9c:	andeq	r7, r2, r0, ror #11
   1bea0:	andeq	r6, r2, r8, lsl #23
   1bea4:	andeq	r7, r2, r0, asr #11
   1bea8:	ldrdeq	r6, [r2], -r0
   1beac:	push	{r4, r5, r6, r7, r8, lr}
   1beb0:	sub	sp, sp, #64	; 0x40
   1beb4:	ldr	r7, [pc, #312]	; 1bff4 <g_strcmp0@plt+0x53bc>
   1beb8:	mov	r0, r1
   1bebc:	mvn	r5, #0
   1bec0:	ldr	r3, [r7]
   1bec4:	str	r3, [sp, #60]	; 0x3c
   1bec8:	bl	16368 <gtk_tree_path_new_from_string@plt>
   1becc:	ldr	r3, [pc, #292]	; 1bff8 <g_strcmp0@plt+0x53c0>
   1bed0:	ldr	r1, [pc, #292]	; 1bffc <g_strcmp0@plt+0x53c4>
   1bed4:	mov	r8, r0
   1bed8:	ldr	r0, [r3]
   1bedc:	bl	16068 <gtk_builder_get_object@plt>
   1bee0:	mov	r4, r0
   1bee4:	bl	164c4 <gtk_tree_view_get_type@plt>
   1bee8:	mov	r1, r0
   1beec:	mov	r0, r4
   1bef0:	bl	15d68 <g_type_check_instance_cast@plt>
   1bef4:	bl	15f6c <gtk_tree_view_get_model@plt>
   1bef8:	mov	r2, r8
   1befc:	add	r1, sp, #28
   1bf00:	mov	r4, r0
   1bf04:	bl	16adc <gtk_tree_model_get_iter@plt>
   1bf08:	add	r2, sp, #24
   1bf0c:	mov	r3, #1
   1bf10:	add	r1, sp, #28
   1bf14:	mov	r0, r4
   1bf18:	stmib	sp, {r2, r5}
   1bf1c:	str	r3, [sp]
   1bf20:	mov	r2, #3
   1bf24:	add	r3, sp, #20
   1bf28:	bl	16b30 <gtk_tree_model_get@plt>
   1bf2c:	ldr	ip, [sp, #20]
   1bf30:	ldr	r3, [sp, #24]
   1bf34:	eor	ip, ip, #1
   1bf38:	str	ip, [sp]
   1bf3c:	ldr	r2, [pc, #188]	; 1c000 <g_strcmp0@plt+0x53c8>
   1bf40:	mov	r1, #128	; 0x80
   1bf44:	ldr	r0, [pc, #184]	; 1c004 <g_strcmp0@plt+0x53cc>
   1bf48:	str	ip, [sp, #20]
   1bf4c:	bl	15dec <g_log@plt>
   1bf50:	ldr	r0, [sp, #24]
   1bf54:	bl	16518 <g_free@plt>
   1bf58:	bl	15e58 <gtk_tree_store_get_type@plt>
   1bf5c:	mov	r1, r0
   1bf60:	mov	r6, r0
   1bf64:	mov	r0, r4
   1bf68:	bl	15d68 <g_type_check_instance_cast@plt>
   1bf6c:	add	r1, sp, #28
   1bf70:	ldr	r3, [sp, #20]
   1bf74:	mov	r2, #3
   1bf78:	str	r5, [sp]
   1bf7c:	bl	16164 <gtk_tree_store_set@plt>
   1bf80:	add	r2, sp, #28
   1bf84:	mov	r0, r4
   1bf88:	add	r1, sp, #44	; 0x2c
   1bf8c:	bl	15eb8 <gtk_tree_model_iter_children@plt>
   1bf90:	cmp	r0, #0
   1bf94:	beq	1bfcc <g_strcmp0@plt+0x5394>
   1bf98:	mov	r1, r6
   1bf9c:	mov	r0, r4
   1bfa0:	bl	15d68 <g_type_check_instance_cast@plt>
   1bfa4:	ldr	r3, [sp, #20]
   1bfa8:	mov	r2, #3
   1bfac:	add	r1, sp, #44	; 0x2c
   1bfb0:	str	r5, [sp]
   1bfb4:	bl	16164 <gtk_tree_store_set@plt>
   1bfb8:	add	r1, sp, #44	; 0x2c
   1bfbc:	mov	r0, r4
   1bfc0:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   1bfc4:	cmp	r0, #0
   1bfc8:	bne	1bf98 <g_strcmp0@plt+0x5360>
   1bfcc:	mov	r0, r8
   1bfd0:	bl	16170 <gtk_tree_path_free@plt>
   1bfd4:	bl	1b00c <g_strcmp0@plt+0x43d4>
   1bfd8:	ldr	r2, [sp, #60]	; 0x3c
   1bfdc:	ldr	r3, [r7]
   1bfe0:	cmp	r2, r3
   1bfe4:	bne	1bff0 <g_strcmp0@plt+0x53b8>
   1bfe8:	add	sp, sp, #64	; 0x40
   1bfec:	pop	{r4, r5, r6, r7, r8, pc}
   1bff0:	bl	164ac <__stack_chk_fail@plt>
   1bff4:	andeq	ip, r3, r0, asr lr
   1bff8:	andeq	sp, r3, r0, lsl r6
   1bffc:	andeq	r6, r2, r4, asr #5
   1c000:	strdeq	r7, [r2], -ip
   1c004:	andeq	r6, r2, r0, ror #4
   1c008:	push	{r4, lr}
   1c00c:	bl	1af30 <g_strcmp0@plt+0x42f8>
   1c010:	pop	{r4, lr}
   1c014:	b	17e88 <g_strcmp0@plt+0x1250>
   1c018:	push	{r4, r5, r6, lr}
   1c01c:	bl	16458 <gtk_text_iter_get_tags@plt>
   1c020:	subs	r6, r0, #0
   1c024:	popeq	{r4, r5, r6, pc}
   1c028:	ldr	r5, [pc, #56]	; 1c068 <g_strcmp0@plt+0x5430>
   1c02c:	mov	r4, r6
   1c030:	mov	r1, #80	; 0x50
   1c034:	ldr	r0, [r4]
   1c038:	bl	15d68 <g_type_check_instance_cast@plt>
   1c03c:	mov	r1, r5
   1c040:	bl	16b9c <g_object_get_data@plt>
   1c044:	cmp	r0, #0
   1c048:	beq	1c050 <g_strcmp0@plt+0x5418>
   1c04c:	bl	219f8 <g_strcmp0@plt+0xadc0>
   1c050:	ldr	r4, [r4, #4]
   1c054:	cmp	r4, #0
   1c058:	bne	1c030 <g_strcmp0@plt+0x53f8>
   1c05c:	mov	r0, r6
   1c060:	pop	{r4, r5, r6, lr}
   1c064:	b	16c20 <g_slist_free@plt>
   1c068:	andeq	r6, r2, r8, asr #6
   1c06c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c070:	sub	sp, sp, #196	; 0xc4
   1c074:	ldr	r4, [pc, #224]	; 1c15c <g_strcmp0@plt+0x5524>
   1c078:	ldr	r2, [r1]
   1c07c:	ldr	r3, [r4]
   1c080:	cmp	r2, #7
   1c084:	str	r3, [sp, #188]	; 0xbc
   1c088:	bne	1c09c <g_strcmp0@plt+0x5464>
   1c08c:	ldr	r7, [r1, #40]	; 0x28
   1c090:	mov	r5, r1
   1c094:	cmp	r7, #1
   1c098:	beq	1c0b8 <g_strcmp0@plt+0x5480>
   1c09c:	ldr	r2, [sp, #188]	; 0xbc
   1c0a0:	ldr	r3, [r4]
   1c0a4:	mov	r0, #0
   1c0a8:	cmp	r2, r3
   1c0ac:	bne	1c158 <g_strcmp0@plt+0x5520>
   1c0b0:	add	sp, sp, #196	; 0xc4
   1c0b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c0b8:	mov	r6, r0
   1c0bc:	bl	15d80 <gtk_text_view_get_type@plt>
   1c0c0:	mov	r1, r0
   1c0c4:	mov	r8, r0
   1c0c8:	mov	r0, r6
   1c0cc:	bl	15d68 <g_type_check_instance_cast@plt>
   1c0d0:	bl	163d4 <gtk_text_view_get_buffer@plt>
   1c0d4:	add	r2, sp, #76	; 0x4c
   1c0d8:	add	r1, sp, #20
   1c0dc:	bl	15b7c <gtk_text_buffer_get_selection_bounds@plt>
   1c0e0:	add	r0, sp, #20
   1c0e4:	bl	1653c <gtk_text_iter_get_offset@plt>
   1c0e8:	mov	r9, r0
   1c0ec:	add	r0, sp, #76	; 0x4c
   1c0f0:	bl	1653c <gtk_text_iter_get_offset@plt>
   1c0f4:	cmp	r9, r0
   1c0f8:	bne	1c09c <g_strcmp0@plt+0x5464>
   1c0fc:	mov	r1, r8
   1c100:	mov	r0, r6
   1c104:	bl	15d68 <g_type_check_instance_cast@plt>
   1c108:	vldr	d6, [r5, #24]
   1c10c:	vldr	d7, [r5, #16]
   1c110:	add	lr, sp, #16
   1c114:	add	ip, sp, #12
   1c118:	vcvt.s32.f64	s13, d6
   1c11c:	vcvt.s32.f64	s15, d7
   1c120:	stm	sp, {ip, lr}
   1c124:	mov	r1, r7
   1c128:	vmov	r3, s13
   1c12c:	vmov	r2, s15
   1c130:	bl	15d2c <gtk_text_view_window_to_buffer_coords@plt>
   1c134:	mov	r1, r8
   1c138:	mov	r0, r6
   1c13c:	bl	15d68 <g_type_check_instance_cast@plt>
   1c140:	add	r1, sp, #132	; 0x84
   1c144:	ldrd	r2, [sp, #12]
   1c148:	bl	1659c <gtk_text_view_get_iter_at_location@plt>
   1c14c:	add	r0, sp, #132	; 0x84
   1c150:	bl	1c018 <g_strcmp0@plt+0x53e0>
   1c154:	b	1c09c <g_strcmp0@plt+0x5464>
   1c158:	bl	164ac <__stack_chk_fail@plt>
   1c15c:	andeq	ip, r3, r0, asr lr
   1c160:	push	{r4, r5, lr}
   1c164:	sub	sp, sp, #68	; 0x44
   1c168:	ldr	r4, [pc, #124]	; 1c1ec <g_strcmp0@plt+0x55b4>
   1c16c:	ldr	r3, [r1, #20]
   1c170:	ldr	r1, [pc, #120]	; 1c1f0 <g_strcmp0@plt+0x55b8>
   1c174:	ldr	r2, [r4]
   1c178:	cmp	r3, r1
   1c17c:	mov	r5, r0
   1c180:	str	r2, [sp, #60]	; 0x3c
   1c184:	beq	1c1b0 <g_strcmp0@plt+0x5578>
   1c188:	ldr	r2, [pc, #100]	; 1c1f4 <g_strcmp0@plt+0x55bc>
   1c18c:	cmp	r3, r2
   1c190:	beq	1c1b0 <g_strcmp0@plt+0x5578>
   1c194:	ldr	r2, [sp, #60]	; 0x3c
   1c198:	ldr	r3, [r4]
   1c19c:	mov	r0, #0
   1c1a0:	cmp	r2, r3
   1c1a4:	bne	1c1e8 <g_strcmp0@plt+0x55b0>
   1c1a8:	add	sp, sp, #68	; 0x44
   1c1ac:	pop	{r4, r5, pc}
   1c1b0:	bl	15d80 <gtk_text_view_get_type@plt>
   1c1b4:	mov	r1, r0
   1c1b8:	mov	r0, r5
   1c1bc:	bl	15d68 <g_type_check_instance_cast@plt>
   1c1c0:	bl	163d4 <gtk_text_view_get_buffer@plt>
   1c1c4:	mov	r5, r0
   1c1c8:	bl	15e1c <gtk_text_buffer_get_insert@plt>
   1c1cc:	add	r1, sp, #4
   1c1d0:	mov	r2, r0
   1c1d4:	mov	r0, r5
   1c1d8:	bl	16080 <gtk_text_buffer_get_iter_at_mark@plt>
   1c1dc:	add	r0, sp, #4
   1c1e0:	bl	1c018 <g_strcmp0@plt+0x53e0>
   1c1e4:	b	1c194 <g_strcmp0@plt+0x555c>
   1c1e8:	bl	164ac <__stack_chk_fail@plt>
   1c1ec:	andeq	ip, r3, r0, asr lr
   1c1f0:	andeq	pc, r0, sp, lsl #30
   1c1f4:	andeq	pc, r0, sp, lsl #31
   1c1f8:	push	{r4, r5, r6, r7, lr}
   1c1fc:	sub	sp, sp, #20
   1c200:	ldr	r6, [pc, #204]	; 1c2d4 <g_strcmp0@plt+0x569c>
   1c204:	ldr	r4, [pc, #204]	; 1c2d8 <g_strcmp0@plt+0x56a0>
   1c208:	mov	r5, #0
   1c20c:	ldr	r3, [r6]
   1c210:	ldr	r0, [r4, #68]	; 0x44
   1c214:	add	r2, sp, #8
   1c218:	str	r3, [sp, #12]
   1c21c:	str	r5, [sp, #8]
   1c220:	bl	15eac <pk_control_get_properties_finish@plt>
   1c224:	cmp	r0, r5
   1c228:	beq	1c2a0 <g_strcmp0@plt+0x5668>
   1c22c:	mov	r3, r5
   1c230:	add	r2, r4, #96	; 0x60
   1c234:	ldr	r1, [pc, #160]	; 1c2dc <g_strcmp0@plt+0x56a4>
   1c238:	ldr	r0, [r4, #68]	; 0x44
   1c23c:	bl	165cc <g_object_get@plt>
   1c240:	ldr	r1, [r4, #96]	; 0x60
   1c244:	mov	r3, r5
   1c248:	and	r2, r1, #67108864	; 0x4000000
   1c24c:	orrs	r3, r2, r3
   1c250:	bne	1c26c <g_strcmp0@plt+0x5634>
   1c254:	ldr	r2, [sp, #12]
   1c258:	ldr	r3, [r6]
   1c25c:	cmp	r2, r3
   1c260:	bne	1c2d0 <g_strcmp0@plt+0x5698>
   1c264:	add	sp, sp, #20
   1c268:	pop	{r4, r5, r6, r7, pc}
   1c26c:	ldr	r7, [r4, #36]	; 0x24
   1c270:	bl	15e94 <pk_client_get_type@plt>
   1c274:	mov	r1, r0
   1c278:	mov	r0, r7
   1c27c:	bl	15d68 <g_type_check_instance_cast@plt>
   1c280:	ldr	r2, [pc, #88]	; 1c2e0 <g_strcmp0@plt+0x56a8>
   1c284:	str	r5, [sp, #4]
   1c288:	str	r2, [sp]
   1c28c:	mov	r3, r5
   1c290:	ldr	r1, [r4, #4]
   1c294:	ldr	r2, [pc, #72]	; 1c2e4 <g_strcmp0@plt+0x56ac>
   1c298:	bl	1680c <pk_client_get_distro_upgrades_async@plt>
   1c29c:	b	1c254 <g_strcmp0@plt+0x561c>
   1c2a0:	mov	r2, #5
   1c2a4:	ldr	r1, [pc, #60]	; 1c2e8 <g_strcmp0@plt+0x56b0>
   1c2a8:	bl	16530 <dcgettext@plt>
   1c2ac:	ldr	r3, [sp, #8]
   1c2b0:	ldr	r2, [r3, #8]
   1c2b4:	mov	r1, r0
   1c2b8:	ldr	r0, [pc, #44]	; 1c2ec <g_strcmp0@plt+0x56b4>
   1c2bc:	bl	166e0 <g_print@plt>
   1c2c0:	ldr	r0, [sp, #8]
   1c2c4:	bl	15c78 <g_error_free@plt>
   1c2c8:	bl	17170 <g_strcmp0@plt+0x538>
   1c2cc:	b	1c254 <g_strcmp0@plt+0x561c>
   1c2d0:	bl	164ac <__stack_chk_fail@plt>
   1c2d4:	andeq	ip, r3, r0, asr lr
   1c2d8:	andeq	sp, r3, r0, lsl r6
   1c2dc:	andeq	r7, r2, r8, asr #12
   1c2e0:			; <UNDEFINED> instruction: 0x0001b8bc
   1c2e4:	andeq	r9, r1, r0, lsr r6
   1c2e8:	andeq	r7, r2, ip, lsl #12
   1c2ec:	andeq	r7, r2, r0, asr #12
   1c2f0:	push	{r4, lr}
   1c2f4:	mov	r1, #128	; 0x80
   1c2f8:	ldr	r2, [pc, #48]	; 1c330 <g_strcmp0@plt+0x56f8>
   1c2fc:	ldr	r0, [pc, #48]	; 1c334 <g_strcmp0@plt+0x56fc>
   1c300:	bl	15dec <g_log@plt>
   1c304:	ldr	r3, [pc, #44]	; 1c338 <g_strcmp0@plt+0x5700>
   1c308:	ldr	r3, [r3, #40]	; 0x28
   1c30c:	cmp	r3, #0
   1c310:	bne	1c31c <g_strcmp0@plt+0x56e4>
   1c314:	pop	{r4, lr}
   1c318:	b	17e88 <g_strcmp0@plt+0x1250>
   1c31c:	ldr	r2, [pc, #24]	; 1c33c <g_strcmp0@plt+0x5704>
   1c320:	mov	r1, #128	; 0x80
   1c324:	ldr	r0, [pc, #8]	; 1c334 <g_strcmp0@plt+0x56fc>
   1c328:	pop	{r4, lr}
   1c32c:	b	15dec <g_log@plt>
   1c330:	andeq	r7, r2, r0, asr r6
   1c334:	andeq	r6, r2, r0, ror #4
   1c338:	andeq	sp, r3, r0, lsl r6
   1c33c:	andeq	r7, r2, r0, ror #12
   1c340:	ldr	r2, [pc, #1692]	; 1c9e4 <g_strcmp0@plt+0x5dac>
   1c344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c348:	sub	sp, sp, #220	; 0xdc
   1c34c:	ldr	ip, [r2]
   1c350:	mov	r3, #0
   1c354:	add	r2, sp, #140	; 0x8c
   1c358:	str	r3, [sp, #140]	; 0x8c
   1c35c:	str	r3, [sp, #148]	; 0x94
   1c360:	str	r3, [sp, #152]	; 0x98
   1c364:	str	ip, [sp, #212]	; 0xd4
   1c368:	bl	160a4 <pk_client_generic_finish@plt>
   1c36c:	subs	r3, r0, #0
   1c370:	str	r3, [sp, #124]	; 0x7c
   1c374:	beq	1c8f8 <g_strcmp0@plt+0x5cc0>
   1c378:	bl	15e64 <pk_results_get_error_code@plt>
   1c37c:	subs	fp, r0, #0
   1c380:	beq	1c440 <g_strcmp0@plt+0x5808>
   1c384:	bl	15f24 <pk_error_get_code@plt>
   1c388:	bl	16110 <pk_error_enum_to_string@plt>
   1c38c:	mov	r5, r0
   1c390:	mov	r0, fp
   1c394:	bl	15f0c <pk_error_get_details@plt>
   1c398:	ldr	r2, [pc, #1608]	; 1c9e8 <g_strcmp0@plt+0x5db0>
   1c39c:	mov	r3, r5
   1c3a0:	mov	r1, #16
   1c3a4:	str	r0, [sp]
   1c3a8:	ldr	r0, [pc, #1596]	; 1c9ec <g_strcmp0@plt+0x5db4>
   1c3ac:	bl	15dec <g_log@plt>
   1c3b0:	ldr	r3, [pc, #1592]	; 1c9f0 <g_strcmp0@plt+0x5db8>
   1c3b4:	ldr	r1, [pc, #1592]	; 1c9f4 <g_strcmp0@plt+0x5dbc>
   1c3b8:	ldr	r0, [r3]
   1c3bc:	bl	16068 <gtk_builder_get_object@plt>
   1c3c0:	mov	r5, r0
   1c3c4:	bl	16bfc <gtk_window_get_type@plt>
   1c3c8:	mov	r1, r0
   1c3cc:	mov	r0, r5
   1c3d0:	bl	15d68 <g_type_check_instance_cast@plt>
   1c3d4:	mov	r5, r0
   1c3d8:	mov	r0, fp
   1c3dc:	bl	15f24 <pk_error_get_code@plt>
   1c3e0:	bl	1ee78 <g_strcmp0@plt+0x8240>
   1c3e4:	mov	r6, r0
   1c3e8:	mov	r0, fp
   1c3ec:	bl	15f24 <pk_error_get_code@plt>
   1c3f0:	bl	1f508 <g_strcmp0@plt+0x88d0>
   1c3f4:	mov	r7, r0
   1c3f8:	mov	r0, fp
   1c3fc:	bl	15f0c <pk_error_get_details@plt>
   1c400:	mov	r2, r7
   1c404:	mov	r1, r6
   1c408:	mov	r3, r0
   1c40c:	mov	r0, r5
   1c410:	bl	24790 <g_strcmp0@plt+0xdb58>
   1c414:	mov	r0, fp
   1c418:	bl	16878 <g_object_unref@plt>
   1c41c:	ldr	r0, [sp, #124]	; 0x7c
   1c420:	bl	16878 <g_object_unref@plt>
   1c424:	ldr	r3, [pc, #1464]	; 1c9e4 <g_strcmp0@plt+0x5dac>
   1c428:	ldr	r2, [sp, #212]	; 0xd4
   1c42c:	ldr	r3, [r3]
   1c430:	cmp	r2, r3
   1c434:	bne	1c9e0 <g_strcmp0@plt+0x5da8>
   1c438:	add	sp, sp, #220	; 0xdc
   1c43c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c440:	ldr	r0, [sp, #124]	; 0x7c
   1c444:	bl	16758 <pk_results_get_package_sack@plt>
   1c448:	mov	r1, fp
   1c44c:	ldr	r6, [pc, #1436]	; 1c9f0 <g_strcmp0@plt+0x5db8>
   1c450:	mov	r4, r0
   1c454:	str	r0, [sp, #132]	; 0x84
   1c458:	bl	1626c <pk_package_sack_sort@plt>
   1c45c:	mov	r0, r4
   1c460:	bl	162c0 <pk_package_sack_get_array@plt>
   1c464:	ldr	r1, [pc, #1420]	; 1c9f8 <g_strcmp0@plt+0x5dc0>
   1c468:	mov	r9, r0
   1c46c:	ldr	r0, [r6]
   1c470:	bl	16068 <gtk_builder_get_object@plt>
   1c474:	mov	r5, r0
   1c478:	bl	15d14 <gtk_widget_get_type@plt>
   1c47c:	mov	r1, r0
   1c480:	str	r0, [sp, #128]	; 0x80
   1c484:	mov	r0, r5
   1c488:	bl	15d68 <g_type_check_instance_cast@plt>
   1c48c:	str	r0, [sp, #120]	; 0x78
   1c490:	bl	164c4 <gtk_tree_view_get_type@plt>
   1c494:	ldr	r3, [r9, #4]
   1c498:	cmp	r3, #0
   1c49c:	movne	r4, fp
   1c4a0:	addne	r5, sp, #196	; 0xc4
   1c4a4:	str	r0, [sp, #116]	; 0x74
   1c4a8:	beq	1c6d4 <g_strcmp0@plt+0x5a9c>
   1c4ac:	ldr	r1, [r9]
   1c4b0:	add	ip, sp, #152	; 0x98
   1c4b4:	ldr	r3, [pc, #1344]	; 1c9fc <g_strcmp0@plt+0x5dc4>
   1c4b8:	ldr	r0, [r1, fp, lsl #2]
   1c4bc:	str	ip, [sp, #8]
   1c4c0:	ldr	ip, [pc, #1336]	; 1ca00 <g_strcmp0@plt+0x5dc8>
   1c4c4:	add	r2, sp, #144	; 0x90
   1c4c8:	str	ip, [sp, #4]
   1c4cc:	add	ip, sp, #148	; 0x94
   1c4d0:	str	ip, [sp]
   1c4d4:	ldr	r1, [pc, #1320]	; 1ca04 <g_strcmp0@plt+0x5dcc>
   1c4d8:	str	r4, [sp, #12]
   1c4dc:	bl	165cc <g_object_get@plt>
   1c4e0:	ldr	r1, [pc, #1296]	; 1c9f8 <g_strcmp0@plt+0x5dc0>
   1c4e4:	ldr	r0, [r6]
   1c4e8:	ldr	r7, [sp, #144]	; 0x90
   1c4ec:	bl	16068 <gtk_builder_get_object@plt>
   1c4f0:	ldr	r1, [sp, #116]	; 0x74
   1c4f4:	bl	15d68 <g_type_check_instance_cast@plt>
   1c4f8:	bl	15f6c <gtk_tree_view_get_model@plt>
   1c4fc:	mov	r1, r5
   1c500:	mov	r8, r0
   1c504:	bl	16548 <gtk_tree_model_get_iter_first@plt>
   1c508:	sub	r3, r7, #3
   1c50c:	cmp	r3, #1
   1c510:	bls	1c8d4 <g_strcmp0@plt+0x5c9c>
   1c514:	cmp	r0, #0
   1c518:	bne	1c534 <g_strcmp0@plt+0x58fc>
   1c51c:	b	1c784 <g_strcmp0@plt+0x5b4c>
   1c520:	mov	r1, r5
   1c524:	mov	r0, r8
   1c528:	bl	15ed0 <gtk_tree_model_iter_next@plt>
   1c52c:	cmp	r0, #0
   1c530:	beq	1c784 <g_strcmp0@plt+0x5b4c>
   1c534:	mvn	r3, #0
   1c538:	str	r3, [sp, #8]
   1c53c:	add	r3, sp, #156	; 0x9c
   1c540:	str	r3, [sp, #4]
   1c544:	mov	r3, #1
   1c548:	str	r3, [sp]
   1c54c:	mov	r2, #2
   1c550:	add	r3, sp, #160	; 0xa0
   1c554:	mov	r1, r5
   1c558:	mov	r0, r8
   1c55c:	bl	16b30 <gtk_tree_model_get@plt>
   1c560:	ldr	sl, [sp, #156]	; 0x9c
   1c564:	mov	r0, sl
   1c568:	bl	16518 <g_free@plt>
   1c56c:	cmp	sl, #0
   1c570:	bne	1c520 <g_strcmp0@plt+0x58e8>
   1c574:	ldr	r3, [sp, #160]	; 0xa0
   1c578:	cmp	r3, r7
   1c57c:	bne	1c520 <g_strcmp0@plt+0x58e8>
   1c580:	ldm	r5, {r0, r1, r2, r3}
   1c584:	add	ip, sp, #180	; 0xb4
   1c588:	stm	ip, {r0, r1, r2, r3}
   1c58c:	add	fp, fp, #1
   1c590:	ldr	r0, [sp, #120]	; 0x78
   1c594:	bl	15f60 <gtk_widget_get_style_context@plt>
   1c598:	ldr	r2, [sp, #152]	; 0x98
   1c59c:	ldr	r1, [sp, #148]	; 0x94
   1c5a0:	bl	221e8 <g_strcmp0@plt+0xb5b0>
   1c5a4:	ldr	r3, [sp, #148]	; 0x94
   1c5a8:	ldr	r2, [pc, #1112]	; 1ca08 <g_strcmp0@plt+0x5dd0>
   1c5ac:	mov	r1, #128	; 0x80
   1c5b0:	mov	r8, r0
   1c5b4:	str	r0, [sp]
   1c5b8:	ldr	r0, [pc, #1068]	; 1c9ec <g_strcmp0@plt+0x5db4>
   1c5bc:	bl	15dec <g_log@plt>
   1c5c0:	ldr	r3, [r6, #96]	; 0x60
   1c5c4:	str	r4, [sp, #108]	; 0x6c
   1c5c8:	and	r3, r3, #4194304	; 0x400000
   1c5cc:	str	r3, [sp, #104]	; 0x68
   1c5d0:	ldrd	r0, [sp, #104]	; 0x68
   1c5d4:	ldr	r7, [sp, #144]	; 0x90
   1c5d8:	add	r2, sp, #180	; 0xb4
   1c5dc:	subs	r7, r7, #9
   1c5e0:	movne	r7, #1
   1c5e4:	orrs	r3, r0, r1
   1c5e8:	add	r1, sp, #164	; 0xa4
   1c5ec:	ldr	r0, [r6, #16]
   1c5f0:	movne	sl, r7
   1c5f4:	moveq	sl, #0
   1c5f8:	bl	15abc <gtk_tree_store_append@plt>
   1c5fc:	ldr	r1, [sp, #144]	; 0x90
   1c600:	mov	r2, #2
   1c604:	mov	lr, #1
   1c608:	ldr	r3, [sp, #148]	; 0x94
   1c60c:	str	r1, [sp, #12]
   1c610:	str	r2, [sp, #8]
   1c614:	mvn	ip, #0
   1c618:	mov	r2, #13
   1c61c:	mov	r1, #9
   1c620:	mov	r0, #8
   1c624:	str	lr, [sp]
   1c628:	str	lr, [sp, #52]	; 0x34
   1c62c:	str	lr, [sp, #36]	; 0x24
   1c630:	str	ip, [sp, #96]	; 0x60
   1c634:	str	ip, [sp, #92]	; 0x5c
   1c638:	str	r2, [sp, #88]	; 0x58
   1c63c:	str	r1, [sp, #80]	; 0x50
   1c640:	str	r0, [sp, #72]	; 0x48
   1c644:	mov	lr, #7
   1c648:	mov	ip, #10
   1c64c:	mov	r2, #6
   1c650:	mov	r1, #5
   1c654:	mov	r0, #14
   1c658:	str	r3, [sp, #4]
   1c65c:	str	lr, [sp, #64]	; 0x40
   1c660:	mov	r3, r8
   1c664:	mov	lr, #4
   1c668:	str	ip, [sp, #56]	; 0x38
   1c66c:	str	r2, [sp, #48]	; 0x30
   1c670:	mov	ip, #3
   1c674:	mov	r2, #0
   1c678:	str	r1, [sp, #40]	; 0x28
   1c67c:	str	sl, [sp, #28]
   1c680:	add	r1, sp, #164	; 0xa4
   1c684:	str	r7, [sp, #44]	; 0x2c
   1c688:	str	r7, [sp, #20]
   1c68c:	str	r4, [sp, #84]	; 0x54
   1c690:	str	r4, [sp, #76]	; 0x4c
   1c694:	str	r4, [sp, #68]	; 0x44
   1c698:	str	r4, [sp, #60]	; 0x3c
   1c69c:	str	r0, [sp, #32]
   1c6a0:	ldr	r0, [r6, #16]
   1c6a4:	str	lr, [sp, #24]
   1c6a8:	str	ip, [sp, #16]
   1c6ac:	bl	16164 <gtk_tree_store_set@plt>
   1c6b0:	mov	r0, r8
   1c6b4:	bl	16518 <g_free@plt>
   1c6b8:	ldr	r0, [sp, #148]	; 0x94
   1c6bc:	bl	16518 <g_free@plt>
   1c6c0:	ldr	r0, [sp, #152]	; 0x98
   1c6c4:	bl	16518 <g_free@plt>
   1c6c8:	ldr	r3, [r9, #4]
   1c6cc:	cmp	r3, fp
   1c6d0:	bhi	1c4ac <g_strcmp0@plt+0x5874>
   1c6d4:	ldr	r0, [r6, #88]	; 0x58
   1c6d8:	cmp	r0, #0
   1c6dc:	beq	1c6e4 <g_strcmp0@plt+0x5aac>
   1c6e0:	bl	169c8 <g_ptr_array_unref@plt>
   1c6e4:	ldr	r0, [sp, #124]	; 0x7c
   1c6e8:	bl	15b40 <pk_results_get_package_array@plt>
   1c6ec:	ldr	r1, [pc, #772]	; 1c9f8 <g_strcmp0@plt+0x5dc0>
   1c6f0:	str	r0, [r6, #88]	; 0x58
   1c6f4:	ldr	r0, [r6]
   1c6f8:	bl	16068 <gtk_builder_get_object@plt>
   1c6fc:	ldr	r1, [sp, #116]	; 0x74
   1c700:	bl	15d68 <g_type_check_instance_cast@plt>
   1c704:	mov	r4, r0
   1c708:	bl	15f6c <gtk_tree_view_get_model@plt>
   1c70c:	mov	r5, r0
   1c710:	bl	16050 <gtk_tree_sortable_get_type@plt>
   1c714:	mov	r1, r0
   1c718:	mov	r0, r5
   1c71c:	bl	15d68 <g_type_check_instance_cast@plt>
   1c720:	mov	r2, #1
   1c724:	mov	r1, #2
   1c728:	bl	1695c <gtk_tree_sortable_set_sort_column_id@plt>
   1c72c:	mov	r0, r4
   1c730:	bl	15f30 <gtk_tree_view_expand_all@plt>
   1c734:	ldr	r3, [r6, #88]	; 0x58
   1c738:	ldr	r3, [r3, #4]
   1c73c:	cmp	r3, #0
   1c740:	bne	1c920 <g_strcmp0@plt+0x5ce8>
   1c744:	ldr	r1, [pc, #704]	; 1ca0c <g_strcmp0@plt+0x5dd4>
   1c748:	ldr	r0, [r6]
   1c74c:	bl	16068 <gtk_builder_get_object@plt>
   1c750:	ldr	r1, [sp, #128]	; 0x80
   1c754:	bl	15d68 <g_type_check_instance_cast@plt>
   1c758:	mov	r1, #1
   1c75c:	bl	16c08 <gtk_widget_set_sensitive@plt>
   1c760:	bl	1b00c <g_strcmp0@plt+0x43d4>
   1c764:	mov	r0, r9
   1c768:	bl	169c8 <g_ptr_array_unref@plt>
   1c76c:	ldr	r3, [sp, #132]	; 0x84
   1c770:	cmp	r3, #0
   1c774:	beq	1c41c <g_strcmp0@plt+0x57e4>
   1c778:	mov	r0, r3
   1c77c:	bl	16878 <g_object_unref@plt>
   1c780:	b	1c41c <g_strcmp0@plt+0x57e4>
   1c784:	sub	r3, r7, #6
   1c788:	cmp	r3, #3
   1c78c:	ldrls	pc, [pc, r3, lsl #2]
   1c790:	b	1c8e0 <g_strcmp0@plt+0x5ca8>
   1c794:	andeq	ip, r1, ip, lsl #17
   1c798:	andeq	ip, r1, r4, lsr #15
   1c79c:	andeq	ip, r1, r4, lsr #17
   1c7a0:			; <UNDEFINED> instruction: 0x0001c8bc
   1c7a4:	ldr	r1, [pc, #612]	; 1ca10 <g_strcmp0@plt+0x5dd8>
   1c7a8:	mov	r2, #5
   1c7ac:	mov	r0, #0
   1c7b0:	bl	16530 <dcgettext@plt>
   1c7b4:	mov	r1, r0
   1c7b8:	ldr	r0, [pc, #596]	; 1ca14 <g_strcmp0@plt+0x5ddc>
   1c7bc:	bl	160e0 <g_strdup_printf@plt>
   1c7c0:	mov	r1, r5
   1c7c4:	mov	r2, #0
   1c7c8:	mov	r8, r0
   1c7cc:	ldr	r0, [r6, #16]
   1c7d0:	bl	15abc <gtk_tree_store_append@plt>
   1c7d4:	mov	r0, #3
   1c7d8:	mov	r1, #2
   1c7dc:	mov	r2, #1
   1c7e0:	str	r0, [sp, #16]
   1c7e4:	str	r1, [sp, #8]
   1c7e8:	mov	ip, #14
   1c7ec:	mov	r1, #13
   1c7f0:	mov	r0, #9
   1c7f4:	str	r2, [sp, #20]
   1c7f8:	str	r2, [sp]
   1c7fc:	str	ip, [sp, #24]
   1c800:	mvn	lr, #0
   1c804:	str	r2, [sp, #44]	; 0x2c
   1c808:	str	r1, [sp, #80]	; 0x50
   1c80c:	str	r0, [sp, #72]	; 0x48
   1c810:	mov	ip, #8
   1c814:	mov	r2, #7
   1c818:	mov	r1, #10
   1c81c:	mov	r0, #6
   1c820:	str	ip, [sp, #64]	; 0x40
   1c824:	str	r2, [sp, #56]	; 0x38
   1c828:	str	r1, [sp, #48]	; 0x30
   1c82c:	str	r4, [sp, #28]
   1c830:	str	r7, [sp, #12]
   1c834:	str	r4, [sp, #4]
   1c838:	mov	r3, r8
   1c83c:	str	r4, [sp, #76]	; 0x4c
   1c840:	str	r4, [sp, #68]	; 0x44
   1c844:	str	r4, [sp, #60]	; 0x3c
   1c848:	str	r4, [sp, #52]	; 0x34
   1c84c:	str	r4, [sp, #36]	; 0x24
   1c850:	str	lr, [sp, #88]	; 0x58
   1c854:	str	lr, [sp, #84]	; 0x54
   1c858:	mov	ip, #5
   1c85c:	mov	r1, r5
   1c860:	str	r0, [sp, #40]	; 0x28
   1c864:	mov	r2, #0
   1c868:	ldr	r0, [r6, #16]
   1c86c:	str	ip, [sp, #32]
   1c870:	bl	16164 <gtk_tree_store_set@plt>
   1c874:	ldm	r5, {r0, r1, r2, r3}
   1c878:	add	ip, sp, #180	; 0xb4
   1c87c:	stm	ip, {r0, r1, r2, r3}
   1c880:	mov	r0, r8
   1c884:	bl	16518 <g_free@plt>
   1c888:	b	1c58c <g_strcmp0@plt+0x5954>
   1c88c:	ldr	r1, [pc, #388]	; 1ca18 <g_strcmp0@plt+0x5de0>
   1c890:	mov	r2, #5
   1c894:	mov	r0, #0
   1c898:	bl	16530 <dcgettext@plt>
   1c89c:	mov	r1, r0
   1c8a0:	b	1c7b8 <g_strcmp0@plt+0x5b80>
   1c8a4:	ldr	r1, [pc, #368]	; 1ca1c <g_strcmp0@plt+0x5de4>
   1c8a8:	mov	r2, #5
   1c8ac:	mov	r0, #0
   1c8b0:	bl	16530 <dcgettext@plt>
   1c8b4:	mov	r1, r0
   1c8b8:	b	1c7b8 <g_strcmp0@plt+0x5b80>
   1c8bc:	ldr	r1, [pc, #348]	; 1ca20 <g_strcmp0@plt+0x5de8>
   1c8c0:	mov	r2, #5
   1c8c4:	mov	r0, #0
   1c8c8:	bl	16530 <dcgettext@plt>
   1c8cc:	mov	r1, r0
   1c8d0:	b	1c7b8 <g_strcmp0@plt+0x5b80>
   1c8d4:	cmp	r0, #0
   1c8d8:	mov	r7, #5
   1c8dc:	bne	1c534 <g_strcmp0@plt+0x58fc>
   1c8e0:	ldr	r1, [pc, #316]	; 1ca24 <g_strcmp0@plt+0x5dec>
   1c8e4:	mov	r2, #5
   1c8e8:	mov	r0, #0
   1c8ec:	bl	16530 <dcgettext@plt>
   1c8f0:	mov	r1, r0
   1c8f4:	b	1c7b8 <g_strcmp0@plt+0x5b80>
   1c8f8:	mov	r2, #5
   1c8fc:	ldr	r1, [pc, #292]	; 1ca28 <g_strcmp0@plt+0x5df0>
   1c900:	bl	16530 <dcgettext@plt>
   1c904:	ldr	r3, [sp, #140]	; 0x8c
   1c908:	ldr	r1, [sp, #124]	; 0x7c
   1c90c:	ldr	r2, [r3, #8]
   1c910:	bl	17058 <g_strcmp0@plt+0x420>
   1c914:	ldr	r0, [sp, #140]	; 0x8c
   1c918:	bl	15c78 <g_error_free@plt>
   1c91c:	b	1c424 <g_strcmp0@plt+0x57ec>
   1c920:	ldr	r0, [r9, #4]
   1c924:	mov	r1, #4
   1c928:	add	r0, r0, #1
   1c92c:	bl	16938 <g_malloc0_n@plt>
   1c930:	ldr	r3, [r9, #4]
   1c934:	cmp	r3, #0
   1c938:	movne	r4, #0
   1c93c:	mov	r5, r0
   1c940:	subne	r7, r0, #4
   1c944:	beq	1c96c <g_strcmp0@plt+0x5d34>
   1c948:	ldr	r3, [r9]
   1c94c:	ldr	r0, [r3, r4, lsl #2]
   1c950:	bl	15be8 <pk_package_get_id@plt>
   1c954:	bl	15fe4 <g_strdup@plt>
   1c958:	ldr	r3, [r9, #4]
   1c95c:	add	r4, r4, #1
   1c960:	cmp	r4, r3
   1c964:	str	r0, [r7, #4]!
   1c968:	bcc	1c948 <g_strcmp0@plt+0x5d10>
   1c96c:	ldr	r4, [r6, #36]	; 0x24
   1c970:	bl	15e94 <pk_client_get_type@plt>
   1c974:	mov	r1, r0
   1c978:	mov	r0, r4
   1c97c:	bl	15d68 <g_type_check_instance_cast@plt>
   1c980:	ldr	r3, [pc, #164]	; 1ca2c <g_strcmp0@plt+0x5df4>
   1c984:	mov	r4, #0
   1c988:	mov	r1, r5
   1c98c:	stmib	sp, {r3, r4}
   1c990:	str	r4, [sp]
   1c994:	ldr	r3, [pc, #148]	; 1ca30 <g_strcmp0@plt+0x5df8>
   1c998:	ldr	r2, [r6, #4]
   1c99c:	bl	168f0 <pk_client_get_update_detail_async@plt>
   1c9a0:	ldr	r7, [r6, #36]	; 0x24
   1c9a4:	bl	15e94 <pk_client_get_type@plt>
   1c9a8:	mov	r1, r0
   1c9ac:	mov	r0, r7
   1c9b0:	bl	15d68 <g_type_check_instance_cast@plt>
   1c9b4:	ldr	r3, [pc, #120]	; 1ca34 <g_strcmp0@plt+0x5dfc>
   1c9b8:	str	r4, [sp, #8]
   1c9bc:	str	r3, [sp, #4]
   1c9c0:	str	r4, [sp]
   1c9c4:	ldr	r3, [pc, #100]	; 1ca30 <g_strcmp0@plt+0x5df8>
   1c9c8:	ldr	r2, [r6, #4]
   1c9cc:	mov	r1, r5
   1c9d0:	bl	167f4 <pk_client_get_details_async@plt>
   1c9d4:	mov	r0, r5
   1c9d8:	bl	1644c <g_strfreev@plt>
   1c9dc:	b	1c744 <g_strcmp0@plt+0x5b0c>
   1c9e0:	bl	164ac <__stack_chk_fail@plt>
   1c9e4:	andeq	ip, r3, r0, asr lr
   1c9e8:	andeq	r7, r2, r4, lsl #13
   1c9ec:	andeq	r6, r2, r0, ror #4
   1c9f0:	andeq	sp, r3, r0, lsl r6
   1c9f4:	andeq	r6, r2, ip, lsr #4
   1c9f8:	andeq	r6, r2, r4, asr #5
   1c9fc:	andeq	r6, r2, r4, lsr r8
   1ca00:	andeq	r6, r2, r0, asr #16
   1ca04:	andeq	ip, r2, r4, ror sl
   1ca08:	ldrdeq	r6, [r2], -r8
   1ca0c:	andeq	r6, r2, r8, lsl #6
   1ca10:	andeq	r7, r2, r4, lsr #13
   1ca14:	muleq	r2, r4, r5
   1ca18:	andeq	r7, r2, ip, asr #13
   1ca1c:			; <UNDEFINED> instruction: 0x000276b8
   1ca20:	ldrdeq	r7, [r2], -ip
   1ca24:	andeq	r7, r2, ip, ror #13
   1ca28:	andeq	r7, r2, ip, ror #12
   1ca2c:	andeq	r9, r1, r0, ror #31
   1ca30:	andeq	r9, r1, r0, lsr r6
   1ca34:	andeq	fp, r1, ip, ror fp
   1ca38:	mov	r3, #0
   1ca3c:	str	r3, [r0, #20]
   1ca40:	str	r3, [r0, #24]
   1ca44:	bx	lr
   1ca48:	push	{r4, lr}
   1ca4c:	sub	sp, sp, #16
   1ca50:	bl	15ac8 <gtk_cell_renderer_text_get_type@plt>
   1ca54:	mov	r4, r0
   1ca58:	ldr	r0, [pc, #48]	; 1ca90 <g_strcmp0@plt+0x5e58>
   1ca5c:	bl	16410 <g_intern_static_string@plt>
   1ca60:	ldr	r1, [pc, #44]	; 1ca94 <g_strcmp0@plt+0x5e5c>
   1ca64:	mov	r2, #0
   1ca68:	mov	r3, #28
   1ca6c:	stmib	sp, {r1, r2}
   1ca70:	str	r3, [sp]
   1ca74:	mov	r2, #152	; 0x98
   1ca78:	ldr	r3, [pc, #24]	; 1ca98 <g_strcmp0@plt+0x5e60>
   1ca7c:	mov	r1, r0
   1ca80:	mov	r0, r4
   1ca84:	bl	15bb8 <g_type_register_static_simple@plt>
   1ca88:	add	sp, sp, #16
   1ca8c:	pop	{r4, pc}
   1ca90:	andeq	r7, r2, r4, asr #15
   1ca94:	andeq	ip, r1, r8, lsr sl
   1ca98:	muleq	r1, ip, sl
   1ca9c:	push	{r4, r5, r6, lr}
   1caa0:	sub	sp, sp, #16
   1caa4:	ldr	r5, [pc, #144]	; 1cb3c <g_strcmp0@plt+0x5f04>
   1caa8:	mov	r6, r0
   1caac:	bl	169a4 <g_type_class_peek_parent@plt>
   1cab0:	ldr	r3, [r5]
   1cab4:	cmp	r3, #0
   1cab8:	bne	1cb2c <g_strcmp0@plt+0x5ef4>
   1cabc:	mov	r1, #80	; 0x50
   1cac0:	mov	r0, r6
   1cac4:	bl	16b48 <g_type_check_class_cast@plt>
   1cac8:	ldr	r3, [pc, #112]	; 1cb40 <g_strcmp0@plt+0x5f08>
   1cacc:	mov	r4, r0
   1cad0:	mov	r0, r6
   1cad4:	str	r3, [r4, #24]
   1cad8:	bl	169a4 <g_type_class_peek_parent@plt>
   1cadc:	ldr	r1, [pc, #96]	; 1cb44 <g_strcmp0@plt+0x5f0c>
   1cae0:	ldr	r3, [pc, #96]	; 1cb48 <g_strcmp0@plt+0x5f10>
   1cae4:	str	r1, [r4, #16]
   1cae8:	mov	r1, #3
   1caec:	str	r3, [r4, #12]
   1caf0:	ldr	r2, [pc, #84]	; 1cb4c <g_strcmp0@plt+0x5f14>
   1caf4:	mov	r3, #0
   1caf8:	str	r1, [sp, #8]
   1cafc:	mvn	r1, #0
   1cb00:	stm	sp, {r1, r3}
   1cb04:	mov	r1, r2
   1cb08:	str	r0, [r5, #4]
   1cb0c:	ldr	r0, [pc, #60]	; 1cb50 <g_strcmp0@plt+0x5f18>
   1cb10:	bl	16668 <g_param_spec_uint@plt>
   1cb14:	mov	r1, #1
   1cb18:	mov	r2, r0
   1cb1c:	mov	r0, r4
   1cb20:	add	sp, sp, #16
   1cb24:	pop	{r4, r5, r6, lr}
   1cb28:	b	165f0 <g_object_class_install_property@plt>
   1cb2c:	mov	r1, r5
   1cb30:	mov	r0, r6
   1cb34:	bl	15c0c <g_type_class_adjust_private_offset@plt>
   1cb38:	b	1cabc <g_strcmp0@plt+0x5e84>
   1cb3c:	andeq	sp, r3, r8, ror r6
   1cb40:	andeq	ip, r1, r4, asr #26
   1cb44:	andeq	ip, r1, r0, lsr #25
   1cb48:	andeq	ip, r1, r4, lsr #23
   1cb4c:	ldrdeq	r7, [r2], -r8
   1cb50:	andeq	r6, r2, r4, lsl #12
   1cb54:	push	{r4, lr}
   1cb58:	mcr	15, 0, r0, cr7, cr10, {5}
   1cb5c:	ldr	r4, [pc, #60]	; 1cba0 <g_strcmp0@plt+0x5f68>
   1cb60:	ldr	r3, [r4, #8]
   1cb64:	mcr	15, 0, r0, cr7, cr10, {5}
   1cb68:	cmp	r3, #0
   1cb6c:	beq	1cb78 <g_strcmp0@plt+0x5f40>
   1cb70:	ldr	r0, [r4, #8]
   1cb74:	pop	{r4, pc}
   1cb78:	add	r0, r4, #8
   1cb7c:	bl	16320 <g_once_init_enter@plt>
   1cb80:	cmp	r0, #0
   1cb84:	beq	1cb70 <g_strcmp0@plt+0x5f38>
   1cb88:	bl	1ca48 <g_strcmp0@plt+0x5e10>
   1cb8c:	mov	r1, r0
   1cb90:	add	r0, r4, #8
   1cb94:	bl	168c0 <g_once_init_leave@plt>
   1cb98:	ldr	r0, [r4, #8]
   1cb9c:	pop	{r4, pc}
   1cba0:	andeq	sp, r3, r8, ror r6
   1cba4:	push	{r4, r5, r6, r7, r8, lr}
   1cba8:	sub	sp, sp, #24
   1cbac:	mov	r5, r1
   1cbb0:	mov	r6, r0
   1cbb4:	mov	r8, r2
   1cbb8:	mov	r7, r3
   1cbbc:	bl	1cb54 <g_strcmp0@plt+0x5f1c>
   1cbc0:	mov	r1, r0
   1cbc4:	mov	r0, r6
   1cbc8:	bl	15d68 <g_type_check_instance_cast@plt>
   1cbcc:	cmp	r5, #1
   1cbd0:	beq	1cc28 <g_strcmp0@plt+0x5ff0>
   1cbd4:	ldm	r7, {r3, r4}
   1cbd8:	ldr	r0, [r3]
   1cbdc:	bl	15e28 <g_type_name@plt>
   1cbe0:	ldr	r3, [r6]
   1cbe4:	mov	r7, r0
   1cbe8:	ldr	r0, [r3]
   1cbec:	bl	15e28 <g_type_name@plt>
   1cbf0:	ldr	r2, [pc, #144]	; 1cc88 <g_strcmp0@plt+0x6050>
   1cbf4:	mov	r3, #72	; 0x48
   1cbf8:	str	r3, [sp]
   1cbfc:	stmib	sp, {r2, r5}
   1cc00:	str	r7, [sp, #16]
   1cc04:	str	r4, [sp, #12]
   1cc08:	ldr	r3, [pc, #124]	; 1cc8c <g_strcmp0@plt+0x6054>
   1cc0c:	ldr	r2, [pc, #124]	; 1cc90 <g_strcmp0@plt+0x6058>
   1cc10:	mov	r1, #16
   1cc14:	str	r0, [sp, #20]
   1cc18:	ldr	r0, [pc, #116]	; 1cc94 <g_strcmp0@plt+0x605c>
   1cc1c:	bl	15dec <g_log@plt>
   1cc20:	add	sp, sp, #24
   1cc24:	pop	{r4, r5, r6, r7, r8, pc}
   1cc28:	mov	r4, r0
   1cc2c:	mov	r0, r8
   1cc30:	bl	16710 <g_value_get_uint@plt>
   1cc34:	str	r0, [r4, #20]
   1cc38:	ldr	r0, [r4, #24]
   1cc3c:	bl	16518 <g_free@plt>
   1cc40:	ldr	r0, [r4, #20]
   1cc44:	mov	r1, #0
   1cc48:	bl	15c54 <g_format_size@plt>
   1cc4c:	mov	r3, #0
   1cc50:	ldr	r1, [pc, #64]	; 1cc98 <g_strcmp0@plt+0x6060>
   1cc54:	mov	r2, r0
   1cc58:	str	r0, [r4, #24]
   1cc5c:	mov	r0, r4
   1cc60:	bl	16578 <g_object_set@plt>
   1cc64:	ldr	r2, [r4, #20]
   1cc68:	mov	r0, r4
   1cc6c:	adds	r2, r2, #0
   1cc70:	movne	r2, #1
   1cc74:	mov	r3, #0
   1cc78:	ldr	r1, [pc, #28]	; 1cc9c <g_strcmp0@plt+0x6064>
   1cc7c:	add	sp, sp, #24
   1cc80:	pop	{r4, r5, r6, r7, r8, lr}
   1cc84:	b	16578 <g_object_set@plt>
   1cc88:	andeq	r7, r2, r4, lsr r8
   1cc8c:	andeq	r7, r2, r0, ror #15
   1cc90:	strdeq	r7, [r2], -ip
   1cc94:	andeq	r6, r2, r0, ror #4
   1cc98:	andeq	r6, r2, r0, asr #11
   1cc9c:	andeq	ip, r2, r8, lsr r9
   1cca0:	push	{r4, r5, r6, r7, lr}
   1cca4:	sub	sp, sp, #28
   1cca8:	mov	r4, r1
   1ccac:	mov	r5, r0
   1ccb0:	mov	r7, r2
   1ccb4:	mov	r6, r3
   1ccb8:	bl	1cb54 <g_strcmp0@plt+0x5f1c>
   1ccbc:	mov	r1, r0
   1ccc0:	mov	r0, r5
   1ccc4:	bl	15d68 <g_type_check_instance_cast@plt>
   1ccc8:	cmp	r4, #1
   1cccc:	beq	1cd20 <g_strcmp0@plt+0x60e8>
   1ccd0:	ldm	r6, {r3, r6}
   1ccd4:	ldr	r0, [r3]
   1ccd8:	bl	15e28 <g_type_name@plt>
   1ccdc:	ldr	r3, [r5]
   1cce0:	mov	r7, r0
   1cce4:	ldr	r0, [r3]
   1cce8:	bl	15e28 <g_type_name@plt>
   1ccec:	ldr	r2, [pc, #64]	; 1cd34 <g_strcmp0@plt+0x60fc>
   1ccf0:	mov	r3, #50	; 0x32
   1ccf4:	str	r3, [sp]
   1ccf8:	stmib	sp, {r2, r4}
   1ccfc:	strd	r6, [sp, #12]
   1cd00:	ldr	r3, [pc, #48]	; 1cd38 <g_strcmp0@plt+0x6100>
   1cd04:	ldr	r2, [pc, #48]	; 1cd3c <g_strcmp0@plt+0x6104>
   1cd08:	mov	r1, #16
   1cd0c:	str	r0, [sp, #20]
   1cd10:	ldr	r0, [pc, #40]	; 1cd40 <g_strcmp0@plt+0x6108>
   1cd14:	bl	15dec <g_log@plt>
   1cd18:	add	sp, sp, #28
   1cd1c:	pop	{r4, r5, r6, r7, pc}
   1cd20:	ldr	r1, [r0, #20]
   1cd24:	mov	r0, r7
   1cd28:	add	sp, sp, #28
   1cd2c:	pop	{r4, r5, r6, r7, lr}
   1cd30:	b	15edc <g_value_set_uint@plt>
   1cd34:	andeq	r7, r2, r4, lsr r8
   1cd38:	andeq	r7, r2, r0, ror #15
   1cd3c:	strdeq	r7, [r2], -ip
   1cd40:	andeq	r6, r2, r0, ror #4
   1cd44:	push	{r4, lr}
   1cd48:	mov	r4, r0
   1cd4c:	bl	1cb54 <g_strcmp0@plt+0x5f1c>
   1cd50:	mov	r1, r0
   1cd54:	mov	r0, r4
   1cd58:	bl	15d68 <g_type_check_instance_cast@plt>
   1cd5c:	ldr	r0, [r0, #24]
   1cd60:	bl	16518 <g_free@plt>
   1cd64:	ldr	r3, [pc, #24]	; 1cd84 <g_strcmp0@plt+0x614c>
   1cd68:	mov	r1, #80	; 0x50
   1cd6c:	ldr	r0, [r3, #4]
   1cd70:	bl	16b48 <g_type_check_class_cast@plt>
   1cd74:	ldr	r3, [r0, #24]
   1cd78:	mov	r0, r4
   1cd7c:	pop	{r4, lr}
   1cd80:	bx	r3
   1cd84:	andeq	sp, r3, r8, ror r6
   1cd88:	push	{r4, lr}
   1cd8c:	bl	1cb54 <g_strcmp0@plt+0x5f1c>
   1cd90:	mov	r1, #0
   1cd94:	pop	{r4, lr}
   1cd98:	b	15a8c <g_object_new@plt>
   1cd9c:	push	{r4, lr}
   1cda0:	sub	sp, sp, #16
   1cda4:	bl	16638 <gtk_cell_renderer_pixbuf_get_type@plt>
   1cda8:	mov	r4, r0
   1cdac:	ldr	r0, [pc, #48]	; 1cde4 <g_strcmp0@plt+0x61ac>
   1cdb0:	bl	16410 <g_intern_static_string@plt>
   1cdb4:	ldr	r1, [pc, #44]	; 1cde8 <g_strcmp0@plt+0x61b0>
   1cdb8:	mov	r2, #0
   1cdbc:	mov	r3, #24
   1cdc0:	stmib	sp, {r1, r2}
   1cdc4:	str	r3, [sp]
   1cdc8:	mov	r2, #148	; 0x94
   1cdcc:	ldr	r3, [pc, #24]	; 1cdec <g_strcmp0@plt+0x61b4>
   1cdd0:	mov	r1, r0
   1cdd4:	mov	r0, r4
   1cdd8:	bl	15bb8 <g_type_register_static_simple@plt>
   1cddc:	add	sp, sp, #16
   1cde0:	pop	{r4, pc}
   1cde4:	andeq	r7, r2, r0, asr #16
   1cde8:	andeq	ip, r1, r8, lsr pc
   1cdec:	strdeq	ip, [r1], -r0
   1cdf0:	push	{r4, r5, r6, lr}
   1cdf4:	sub	sp, sp, #16
   1cdf8:	ldr	r5, [pc, #196]	; 1cec4 <g_strcmp0@plt+0x628c>
   1cdfc:	mov	r6, r0
   1ce00:	bl	169a4 <g_type_class_peek_parent@plt>
   1ce04:	ldr	r3, [r5]
   1ce08:	cmp	r3, #0
   1ce0c:	bne	1ceb4 <g_strcmp0@plt+0x627c>
   1ce10:	mov	r1, #80	; 0x50
   1ce14:	mov	r0, r6
   1ce18:	bl	16b48 <g_type_check_class_cast@plt>
   1ce1c:	ldr	r3, [pc, #164]	; 1cec8 <g_strcmp0@plt+0x6290>
   1ce20:	mov	r4, r0
   1ce24:	mov	r0, r6
   1ce28:	str	r3, [r4, #24]
   1ce2c:	bl	169a4 <g_type_class_peek_parent@plt>
   1ce30:	ldr	r3, [pc, #148]	; 1cecc <g_strcmp0@plt+0x6294>
   1ce34:	ldr	r1, [pc, #148]	; 1ced0 <g_strcmp0@plt+0x6298>
   1ce38:	mov	ip, #3
   1ce3c:	str	r3, [r4, #16]
   1ce40:	str	r1, [r4, #12]
   1ce44:	mov	r3, #0
   1ce48:	ldr	r2, [pc, #132]	; 1ced4 <g_strcmp0@plt+0x629c>
   1ce4c:	mvn	r1, #0
   1ce50:	mov	r6, #2
   1ce54:	stm	sp, {r1, r3, ip}
   1ce58:	mov	r1, r2
   1ce5c:	str	r0, [r5, #4]
   1ce60:	ldr	r0, [pc, #112]	; 1ced8 <g_strcmp0@plt+0x62a0>
   1ce64:	bl	16668 <g_param_spec_uint@plt>
   1ce68:	mov	r1, #1
   1ce6c:	mov	r2, r0
   1ce70:	mov	r0, r4
   1ce74:	bl	165f0 <g_object_class_install_property@plt>
   1ce78:	ldr	r2, [pc, #92]	; 1cedc <g_strcmp0@plt+0x62a4>
   1ce7c:	ldr	r3, [pc, #92]	; 1cee0 <g_strcmp0@plt+0x62a8>
   1ce80:	mov	r1, r2
   1ce84:	str	r6, [sp]
   1ce88:	ldr	r0, [pc, #84]	; 1cee4 <g_strcmp0@plt+0x62ac>
   1ce8c:	bl	15cd8 <g_param_spec_string@plt>
   1ce90:	mov	r1, r6
   1ce94:	mov	r2, r0
   1ce98:	mov	r0, r4
   1ce9c:	bl	165f0 <g_object_class_install_property@plt>
   1cea0:	mov	r0, r4
   1cea4:	mov	r1, #12
   1cea8:	add	sp, sp, #16
   1ceac:	pop	{r4, r5, r6, lr}
   1ceb0:	b	1665c <g_type_class_add_private@plt>
   1ceb4:	mov	r1, r5
   1ceb8:	mov	r0, r6
   1cebc:	bl	15c0c <g_type_class_adjust_private_offset@plt>
   1cec0:	b	1ce10 <g_strcmp0@plt+0x61d8>
   1cec4:	andeq	sp, r3, r4, lsl #13
   1cec8:			; <UNDEFINED> instruction: 0x0001d1b4
   1cecc:	andeq	sp, r1, ip, lsl #2
   1ced0:	andeq	ip, r1, r0, ror pc
   1ced4:	ldrdeq	r7, [r2], -r8
   1ced8:	andeq	r6, r2, r4, lsl #12
   1cedc:	andeq	r7, r2, r4, asr r8
   1cee0:	strdeq	r6, [r2], -ip
   1cee4:	andeq	r6, r2, r0, ror #11
   1cee8:	push	{r4, lr}
   1ceec:	mcr	15, 0, r0, cr7, cr10, {5}
   1cef0:	ldr	r4, [pc, #60]	; 1cf34 <g_strcmp0@plt+0x62fc>
   1cef4:	ldr	r3, [r4, #8]
   1cef8:	mcr	15, 0, r0, cr7, cr10, {5}
   1cefc:	cmp	r3, #0
   1cf00:	beq	1cf0c <g_strcmp0@plt+0x62d4>
   1cf04:	ldr	r0, [r4, #8]
   1cf08:	pop	{r4, pc}
   1cf0c:	add	r0, r4, #8
   1cf10:	bl	16320 <g_once_init_enter@plt>
   1cf14:	cmp	r0, #0
   1cf18:	beq	1cf04 <g_strcmp0@plt+0x62cc>
   1cf1c:	bl	1cd9c <g_strcmp0@plt+0x6164>
   1cf20:	mov	r1, r0
   1cf24:	add	r0, r4, #8
   1cf28:	bl	168c0 <g_once_init_leave@plt>
   1cf2c:	ldr	r0, [r4, #8]
   1cf30:	pop	{r4, pc}
   1cf34:	andeq	sp, r3, r4, lsl #13
   1cf38:	push	{r4, r5, r6, lr}
   1cf3c:	mov	r5, r0
   1cf40:	bl	1cee8 <g_strcmp0@plt+0x62b0>
   1cf44:	mov	r1, r0
   1cf48:	mov	r0, r5
   1cf4c:	bl	16290 <g_type_instance_get_private@plt>
   1cf50:	mov	r3, #0
   1cf54:	str	r0, [r5, #20]
   1cf58:	str	r3, [r0]
   1cf5c:	str	r3, [r0, #4]
   1cf60:	mov	r4, r0
   1cf64:	bl	165a8 <g_ptr_array_new@plt>
   1cf68:	str	r0, [r4, #8]
   1cf6c:	pop	{r4, r5, r6, pc}
   1cf70:	push	{r4, r5, r6, r7, r8, lr}
   1cf74:	sub	sp, sp, #24
   1cf78:	mov	r4, r1
   1cf7c:	mov	r6, r0
   1cf80:	mov	r8, r2
   1cf84:	mov	r7, r3
   1cf88:	bl	1cee8 <g_strcmp0@plt+0x62b0>
   1cf8c:	mov	r1, r0
   1cf90:	mov	r0, r6
   1cf94:	bl	15d68 <g_type_check_instance_cast@plt>
   1cf98:	cmp	r4, #1
   1cf9c:	mov	r5, r0
   1cfa0:	beq	1cff8 <g_strcmp0@plt+0x63c0>
   1cfa4:	cmp	r4, #2
   1cfa8:	beq	1d078 <g_strcmp0@plt+0x6440>
   1cfac:	ldm	r7, {r3, r5}
   1cfb0:	ldr	r0, [r3]
   1cfb4:	bl	15e28 <g_type_name@plt>
   1cfb8:	ldr	r3, [r6]
   1cfbc:	mov	r7, r0
   1cfc0:	ldr	r0, [r3]
   1cfc4:	bl	15e28 <g_type_name@plt>
   1cfc8:	ldr	r2, [pc, #292]	; 1d0f4 <g_strcmp0@plt+0x64bc>
   1cfcc:	mov	r3, #120	; 0x78
   1cfd0:	str	r3, [sp]
   1cfd4:	stmib	sp, {r2, r4, r5, r7}
   1cfd8:	mov	r1, #16
   1cfdc:	ldr	r3, [pc, #276]	; 1d0f8 <g_strcmp0@plt+0x64c0>
   1cfe0:	ldr	r2, [pc, #276]	; 1d0fc <g_strcmp0@plt+0x64c4>
   1cfe4:	str	r0, [sp, #20]
   1cfe8:	ldr	r0, [pc, #272]	; 1d100 <g_strcmp0@plt+0x64c8>
   1cfec:	bl	15dec <g_log@plt>
   1cff0:	add	sp, sp, #24
   1cff4:	pop	{r4, r5, r6, r7, r8, pc}
   1cff8:	mov	r0, r8
   1cffc:	ldr	r6, [r5, #20]
   1d000:	bl	16710 <g_value_get_uint@plt>
   1d004:	ldr	r4, [r5, #20]
   1d008:	ldr	r3, [r4, #8]
   1d00c:	ldr	ip, [r3, #4]
   1d010:	cmp	ip, #0
   1d014:	str	r0, [r6]
   1d018:	beq	1d0ec <g_strcmp0@plt+0x64b4>
   1d01c:	ldr	r2, [r3]
   1d020:	ldr	r0, [r4]
   1d024:	ldr	r3, [r2]
   1d028:	cmp	r3, r0
   1d02c:	beq	1d0d0 <g_strcmp0@plt+0x6498>
   1d030:	mov	r3, #0
   1d034:	b	1d044 <g_strcmp0@plt+0x640c>
   1d038:	ldr	r1, [r2, #4]!
   1d03c:	cmp	r1, r0
   1d040:	beq	1d0d0 <g_strcmp0@plt+0x6498>
   1d044:	add	r3, r3, #1
   1d048:	cmp	r3, ip
   1d04c:	bne	1d038 <g_strcmp0@plt+0x6400>
   1d050:	bl	2109c <g_strcmp0@plt+0xa464>
   1d054:	ldr	r2, [r5, #20]
   1d058:	mov	r3, #0
   1d05c:	ldr	r1, [pc, #160]	; 1d104 <g_strcmp0@plt+0x64cc>
   1d060:	str	r0, [r4, #4]
   1d064:	mov	r0, r5
   1d068:	ldr	r2, [r2, #4]
   1d06c:	add	sp, sp, #24
   1d070:	pop	{r4, r5, r6, r7, r8, lr}
   1d074:	b	16578 <g_object_set@plt>
   1d078:	mov	r0, r8
   1d07c:	bl	15bdc <g_value_get_string@plt>
   1d080:	mvn	r2, #0
   1d084:	ldr	r1, [pc, #124]	; 1d108 <g_strcmp0@plt+0x64d0>
   1d088:	bl	161c4 <g_strsplit@plt>
   1d08c:	mov	r6, r0
   1d090:	ldr	r0, [r0]
   1d094:	cmp	r0, #0
   1d098:	movne	r4, r6
   1d09c:	beq	1d0c0 <g_strcmp0@plt+0x6488>
   1d0a0:	bl	166f8 <pk_info_enum_from_string@plt>
   1d0a4:	ldr	r3, [r5, #20]
   1d0a8:	mov	r1, r0
   1d0ac:	ldr	r0, [r3, #8]
   1d0b0:	bl	16a10 <g_ptr_array_add@plt>
   1d0b4:	ldr	r0, [r4, #4]!
   1d0b8:	cmp	r0, #0
   1d0bc:	bne	1d0a0 <g_strcmp0@plt+0x6468>
   1d0c0:	mov	r0, r6
   1d0c4:	add	sp, sp, #24
   1d0c8:	pop	{r4, r5, r6, r7, r8, lr}
   1d0cc:	b	1644c <g_strfreev@plt>
   1d0d0:	mov	r3, #0
   1d0d4:	mov	r0, r5
   1d0d8:	mov	r2, r3
   1d0dc:	ldr	r1, [pc, #32]	; 1d104 <g_strcmp0@plt+0x64cc>
   1d0e0:	add	sp, sp, #24
   1d0e4:	pop	{r4, r5, r6, r7, r8, lr}
   1d0e8:	b	16578 <g_object_set@plt>
   1d0ec:	ldr	r0, [r4]
   1d0f0:	b	1d050 <g_strcmp0@plt+0x6418>
   1d0f4:	andeq	r7, r2, r4, lsr r8
   1d0f8:	andeq	r7, r2, r8, ror #16
   1d0fc:	strdeq	r7, [r2], -ip
   1d100:	andeq	r6, r2, r0, ror #4
   1d104:	andeq	r7, r2, r4, lsl #17
   1d108:	andeq	r7, r2, r4, ror #16
   1d10c:	push	{r4, r5, r6, r7, lr}
   1d110:	sub	sp, sp, #28
   1d114:	mov	r4, r1
   1d118:	mov	r5, r0
   1d11c:	mov	r7, r2
   1d120:	mov	r6, r3
   1d124:	bl	1cee8 <g_strcmp0@plt+0x62b0>
   1d128:	mov	r1, r0
   1d12c:	mov	r0, r5
   1d130:	bl	15d68 <g_type_check_instance_cast@plt>
   1d134:	cmp	r4, #1
   1d138:	beq	1d18c <g_strcmp0@plt+0x6554>
   1d13c:	ldm	r6, {r3, r6}
   1d140:	ldr	r0, [r3]
   1d144:	bl	15e28 <g_type_name@plt>
   1d148:	ldr	r3, [r5]
   1d14c:	mov	r7, r0
   1d150:	ldr	r0, [r3]
   1d154:	bl	15e28 <g_type_name@plt>
   1d158:	ldr	r2, [pc, #68]	; 1d1a4 <g_strcmp0@plt+0x656c>
   1d15c:	mov	r3, #62	; 0x3e
   1d160:	str	r3, [sp]
   1d164:	stmib	sp, {r2, r4}
   1d168:	strd	r6, [sp, #12]
   1d16c:	ldr	r3, [pc, #52]	; 1d1a8 <g_strcmp0@plt+0x6570>
   1d170:	ldr	r2, [pc, #52]	; 1d1ac <g_strcmp0@plt+0x6574>
   1d174:	mov	r1, #16
   1d178:	str	r0, [sp, #20]
   1d17c:	ldr	r0, [pc, #44]	; 1d1b0 <g_strcmp0@plt+0x6578>
   1d180:	bl	15dec <g_log@plt>
   1d184:	add	sp, sp, #28
   1d188:	pop	{r4, r5, r6, r7, pc}
   1d18c:	ldr	r3, [r0, #20]
   1d190:	mov	r0, r7
   1d194:	ldr	r1, [r3]
   1d198:	add	sp, sp, #28
   1d19c:	pop	{r4, r5, r6, r7, lr}
   1d1a0:	b	15edc <g_value_set_uint@plt>
   1d1a4:	andeq	r7, r2, r4, lsr r8
   1d1a8:	andeq	r7, r2, r8, ror #16
   1d1ac:	strdeq	r7, [r2], -ip
   1d1b0:	andeq	r6, r2, r0, ror #4
   1d1b4:	push	{r4, lr}
   1d1b8:	mov	r4, r0
   1d1bc:	bl	1cee8 <g_strcmp0@plt+0x62b0>
   1d1c0:	mov	r1, r0
   1d1c4:	mov	r0, r4
   1d1c8:	bl	15d68 <g_type_check_instance_cast@plt>
   1d1cc:	mov	r1, #1
   1d1d0:	ldr	r3, [r0, #20]
   1d1d4:	ldr	r0, [r3, #8]
   1d1d8:	bl	16b84 <g_ptr_array_free@plt>
   1d1dc:	ldr	r3, [pc, #24]	; 1d1fc <g_strcmp0@plt+0x65c4>
   1d1e0:	mov	r1, #80	; 0x50
   1d1e4:	ldr	r0, [r3, #4]
   1d1e8:	bl	16b48 <g_type_check_class_cast@plt>
   1d1ec:	ldr	r3, [r0, #24]
   1d1f0:	mov	r0, r4
   1d1f4:	pop	{r4, lr}
   1d1f8:	bx	r3
   1d1fc:	andeq	sp, r3, r4, lsl #13
   1d200:	push	{r4, lr}
   1d204:	bl	1cee8 <g_strcmp0@plt+0x62b0>
   1d208:	mov	r1, #0
   1d20c:	pop	{r4, lr}
   1d210:	b	15a8c <g_object_new@plt>
   1d214:	mov	r2, #1
   1d218:	mov	r3, #0
   1d21c:	strd	r2, [r0, #20]
   1d220:	bx	lr
   1d224:	push	{r4, lr}
   1d228:	sub	sp, sp, #16
   1d22c:	bl	16638 <gtk_cell_renderer_pixbuf_get_type@plt>
   1d230:	mov	r4, r0
   1d234:	ldr	r0, [pc, #48]	; 1d26c <g_strcmp0@plt+0x6634>
   1d238:	bl	16410 <g_intern_static_string@plt>
   1d23c:	ldr	r1, [pc, #44]	; 1d270 <g_strcmp0@plt+0x6638>
   1d240:	mov	r2, #0
   1d244:	mov	r3, #28
   1d248:	stmib	sp, {r1, r2}
   1d24c:	str	r3, [sp]
   1d250:	mov	r2, #148	; 0x94
   1d254:	ldr	r3, [pc, #24]	; 1d274 <g_strcmp0@plt+0x663c>
   1d258:	mov	r1, r0
   1d25c:	mov	r0, r4
   1d260:	bl	15bb8 <g_type_register_static_simple@plt>
   1d264:	add	sp, sp, #16
   1d268:	pop	{r4, pc}
   1d26c:	muleq	r2, r0, r8
   1d270:	andeq	sp, r1, r4, lsl r2
   1d274:	andeq	sp, r1, r4, lsr #5
   1d278:	ldr	r3, [pc, #32]	; 1d2a0 <g_strcmp0@plt+0x6668>
   1d27c:	push	{r4, lr}
   1d280:	mov	r1, #80	; 0x50
   1d284:	mov	r4, r0
   1d288:	ldr	r0, [r3]
   1d28c:	bl	16b48 <g_type_check_class_cast@plt>
   1d290:	ldr	r3, [r0, #24]
   1d294:	mov	r0, r4
   1d298:	pop	{r4, lr}
   1d29c:	bx	r3
   1d2a0:	muleq	r3, r0, r6
   1d2a4:	push	{r4, r5, r6, lr}
   1d2a8:	sub	sp, sp, #16
   1d2ac:	ldr	r5, [pc, #148]	; 1d348 <g_strcmp0@plt+0x6710>
   1d2b0:	mov	r6, r0
   1d2b4:	bl	169a4 <g_type_class_peek_parent@plt>
   1d2b8:	ldr	r3, [r5, #4]
   1d2bc:	cmp	r3, #0
   1d2c0:	bne	1d338 <g_strcmp0@plt+0x6700>
   1d2c4:	mov	r1, #80	; 0x50
   1d2c8:	mov	r0, r6
   1d2cc:	bl	16b48 <g_type_check_class_cast@plt>
   1d2d0:	ldr	r3, [pc, #116]	; 1d34c <g_strcmp0@plt+0x6714>
   1d2d4:	mov	r4, r0
   1d2d8:	mov	r0, r6
   1d2dc:	str	r3, [r4, #24]
   1d2e0:	bl	169a4 <g_type_class_peek_parent@plt>
   1d2e4:	ldr	r3, [pc, #100]	; 1d350 <g_strcmp0@plt+0x6718>
   1d2e8:	ldr	ip, [pc, #100]	; 1d354 <g_strcmp0@plt+0x671c>
   1d2ec:	str	r3, [r4, #12]
   1d2f0:	ldr	r2, [pc, #96]	; 1d358 <g_strcmp0@plt+0x6720>
   1d2f4:	mov	r6, #1
   1d2f8:	mvn	r3, #0
   1d2fc:	mov	r1, #3
   1d300:	str	ip, [r4, #16]
   1d304:	str	r1, [sp, #8]
   1d308:	stm	sp, {r3, r6}
   1d30c:	mov	r1, r2
   1d310:	mov	r3, #0
   1d314:	str	r0, [r5]
   1d318:	ldr	r0, [pc, #60]	; 1d35c <g_strcmp0@plt+0x6724>
   1d31c:	bl	16668 <g_param_spec_uint@plt>
   1d320:	mov	r1, r6
   1d324:	mov	r2, r0
   1d328:	mov	r0, r4
   1d32c:	add	sp, sp, #16
   1d330:	pop	{r4, r5, r6, lr}
   1d334:	b	165f0 <g_object_class_install_property@plt>
   1d338:	add	r1, r5, #4
   1d33c:	mov	r0, r6
   1d340:	bl	15c0c <g_type_class_adjust_private_offset@plt>
   1d344:	b	1d2c4 <g_strcmp0@plt+0x668c>
   1d348:	muleq	r3, r0, r6
   1d34c:	andeq	sp, r1, r8, ror r2
   1d350:			; <UNDEFINED> instruction: 0x0001d3b0
   1d354:	andeq	sp, r1, r8, ror r4
   1d358:	ldrdeq	r7, [r2], -r8
   1d35c:	andeq	r6, r2, r4, lsl #12
   1d360:	push	{r4, lr}
   1d364:	mcr	15, 0, r0, cr7, cr10, {5}
   1d368:	ldr	r4, [pc, #60]	; 1d3ac <g_strcmp0@plt+0x6774>
   1d36c:	ldr	r3, [r4, #8]
   1d370:	mcr	15, 0, r0, cr7, cr10, {5}
   1d374:	cmp	r3, #0
   1d378:	beq	1d384 <g_strcmp0@plt+0x674c>
   1d37c:	ldr	r0, [r4, #8]
   1d380:	pop	{r4, pc}
   1d384:	add	r0, r4, #8
   1d388:	bl	16320 <g_once_init_enter@plt>
   1d38c:	cmp	r0, #0
   1d390:	beq	1d37c <g_strcmp0@plt+0x6744>
   1d394:	bl	1d224 <g_strcmp0@plt+0x65ec>
   1d398:	mov	r1, r0
   1d39c:	add	r0, r4, #8
   1d3a0:	bl	168c0 <g_once_init_leave@plt>
   1d3a4:	ldr	r0, [r4, #8]
   1d3a8:	pop	{r4, pc}
   1d3ac:	muleq	r3, r0, r6
   1d3b0:	push	{r4, r5, r6, r7, r8, lr}
   1d3b4:	sub	sp, sp, #24
   1d3b8:	mov	r4, r1
   1d3bc:	mov	r5, r0
   1d3c0:	mov	r8, r2
   1d3c4:	mov	r6, r3
   1d3c8:	bl	1d360 <g_strcmp0@plt+0x6728>
   1d3cc:	mov	r1, r0
   1d3d0:	mov	r0, r5
   1d3d4:	bl	15d68 <g_type_check_instance_cast@plt>
   1d3d8:	cmp	r4, #1
   1d3dc:	beq	1d430 <g_strcmp0@plt+0x67f8>
   1d3e0:	ldm	r6, {r3, r6}
   1d3e4:	ldr	r0, [r3]
   1d3e8:	bl	15e28 <g_type_name@plt>
   1d3ec:	ldr	r3, [r5]
   1d3f0:	mov	r7, r0
   1d3f4:	ldr	r0, [r3]
   1d3f8:	bl	15e28 <g_type_name@plt>
   1d3fc:	ldr	r2, [pc, #96]	; 1d464 <g_strcmp0@plt+0x682c>
   1d400:	mov	r3, #70	; 0x46
   1d404:	str	r3, [sp]
   1d408:	stmib	sp, {r2, r4}
   1d40c:	strd	r6, [sp, #12]
   1d410:	ldr	r3, [pc, #80]	; 1d468 <g_strcmp0@plt+0x6830>
   1d414:	ldr	r2, [pc, #80]	; 1d46c <g_strcmp0@plt+0x6834>
   1d418:	mov	r1, #16
   1d41c:	str	r0, [sp, #20]
   1d420:	ldr	r0, [pc, #72]	; 1d470 <g_strcmp0@plt+0x6838>
   1d424:	bl	15dec <g_log@plt>
   1d428:	add	sp, sp, #24
   1d42c:	pop	{r4, r5, r6, r7, r8, pc}
   1d430:	mov	r7, r0
   1d434:	mov	r0, r8
   1d438:	bl	16710 <g_value_get_uint@plt>
   1d43c:	str	r0, [r7, #20]
   1d440:	bl	21054 <g_strcmp0@plt+0xa41c>
   1d444:	mov	r3, #0
   1d448:	ldr	r1, [pc, #36]	; 1d474 <g_strcmp0@plt+0x683c>
   1d44c:	mov	r2, r0
   1d450:	str	r0, [r7, #24]
   1d454:	mov	r0, r7
   1d458:	add	sp, sp, #24
   1d45c:	pop	{r4, r5, r6, r7, r8, lr}
   1d460:	b	16578 <g_object_set@plt>
   1d464:	andeq	r7, r2, r4, lsr r8
   1d468:	andeq	r7, r2, r8, lsr #17
   1d46c:	strdeq	r7, [r2], -ip
   1d470:	andeq	r6, r2, r0, ror #4
   1d474:	andeq	r7, r2, r4, lsl #17
   1d478:	push	{r4, r5, r6, r7, lr}
   1d47c:	sub	sp, sp, #28
   1d480:	mov	r4, r1
   1d484:	mov	r5, r0
   1d488:	mov	r7, r2
   1d48c:	mov	r6, r3
   1d490:	bl	1d360 <g_strcmp0@plt+0x6728>
   1d494:	mov	r1, r0
   1d498:	mov	r0, r5
   1d49c:	bl	15d68 <g_type_check_instance_cast@plt>
   1d4a0:	cmp	r4, #1
   1d4a4:	beq	1d4f8 <g_strcmp0@plt+0x68c0>
   1d4a8:	ldm	r6, {r3, r6}
   1d4ac:	ldr	r0, [r3]
   1d4b0:	bl	15e28 <g_type_name@plt>
   1d4b4:	ldr	r3, [r5]
   1d4b8:	mov	r7, r0
   1d4bc:	ldr	r0, [r3]
   1d4c0:	bl	15e28 <g_type_name@plt>
   1d4c4:	ldr	r2, [pc, #64]	; 1d50c <g_strcmp0@plt+0x68d4>
   1d4c8:	mov	r3, #52	; 0x34
   1d4cc:	str	r3, [sp]
   1d4d0:	stmib	sp, {r2, r4}
   1d4d4:	strd	r6, [sp, #12]
   1d4d8:	ldr	r3, [pc, #48]	; 1d510 <g_strcmp0@plt+0x68d8>
   1d4dc:	ldr	r2, [pc, #48]	; 1d514 <g_strcmp0@plt+0x68dc>
   1d4e0:	mov	r1, #16
   1d4e4:	str	r0, [sp, #20]
   1d4e8:	ldr	r0, [pc, #40]	; 1d518 <g_strcmp0@plt+0x68e0>
   1d4ec:	bl	15dec <g_log@plt>
   1d4f0:	add	sp, sp, #28
   1d4f4:	pop	{r4, r5, r6, r7, pc}
   1d4f8:	ldr	r1, [r0, #20]
   1d4fc:	mov	r0, r7
   1d500:	add	sp, sp, #28
   1d504:	pop	{r4, r5, r6, r7, lr}
   1d508:	b	15edc <g_value_set_uint@plt>
   1d50c:	andeq	r7, r2, r4, lsr r8
   1d510:	andeq	r7, r2, r8, lsr #17
   1d514:	strdeq	r7, [r2], -ip
   1d518:	andeq	r6, r2, r0, ror #4
   1d51c:	push	{r4, lr}
   1d520:	bl	1d360 <g_strcmp0@plt+0x6728>
   1d524:	mov	r1, #0
   1d528:	pop	{r4, lr}
   1d52c:	b	15a8c <g_object_new@plt>
   1d530:	cmp	r0, #0
   1d534:	ldrbne	r0, [r0]
   1d538:	clzne	r0, r0
   1d53c:	lsrne	r0, r0, #5
   1d540:	moveq	r0, #1
   1d544:	bx	lr
   1d548:	cmp	r0, #0
   1d54c:	bxeq	lr
   1d550:	ldrb	r2, [r0]
   1d554:	cmp	r2, #0
   1d558:	beq	1d59c <g_strcmp0@plt+0x6964>
   1d55c:	cmp	r1, #1
   1d560:	bls	1d5a4 <g_strcmp0@plt+0x696c>
   1d564:	ldrb	r3, [r0, #1]
   1d568:	cmp	r3, #0
   1d56c:	beq	1d5a4 <g_strcmp0@plt+0x696c>
   1d570:	sub	r1, r1, #1
   1d574:	add	ip, r0, r1
   1d578:	add	r3, r0, #1
   1d57c:	rsb	r2, r0, #1
   1d580:	cmp	r3, ip
   1d584:	add	r0, r2, r3
   1d588:	bxeq	lr
   1d58c:	ldrb	r1, [r3, #1]!
   1d590:	cmp	r1, #0
   1d594:	bne	1d580 <g_strcmp0@plt+0x6948>
   1d598:	bx	lr
   1d59c:	mov	r0, r2
   1d5a0:	bx	lr
   1d5a4:	mov	r0, #1
   1d5a8:	bx	lr
   1d5ac:	push	{lr}		; (str lr, [sp, #-4]!)
   1d5b0:	sub	sp, sp, #20
   1d5b4:	ldr	r0, [pc, #48]	; 1d5ec <g_strcmp0@plt+0x69b4>
   1d5b8:	bl	16410 <g_intern_static_string@plt>
   1d5bc:	ldr	r1, [pc, #44]	; 1d5f0 <g_strcmp0@plt+0x69b8>
   1d5c0:	mov	r2, #0
   1d5c4:	mov	r3, #16
   1d5c8:	stmib	sp, {r1, r2}
   1d5cc:	str	r3, [sp]
   1d5d0:	mov	r2, #72	; 0x48
   1d5d4:	ldr	r3, [pc, #24]	; 1d5f4 <g_strcmp0@plt+0x69bc>
   1d5d8:	mov	r1, r0
   1d5dc:	mov	r0, #80	; 0x50
   1d5e0:	bl	15bb8 <g_type_register_static_simple@plt>
   1d5e4:	add	sp, sp, #20
   1d5e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d5ec:	andeq	r7, r2, r8, ror r9
   1d5f0:			; <UNDEFINED> instruction: 0x0001deb8
   1d5f4:	strdeq	sp, [r1], -r8
   1d5f8:	push	{r4, lr}
   1d5fc:	mov	r4, r0
   1d600:	bl	169a4 <g_type_class_peek_parent@plt>
   1d604:	ldr	r1, [pc, #64]	; 1d64c <g_strcmp0@plt+0x6a14>
   1d608:	ldr	r3, [r1, #4]
   1d60c:	cmp	r3, #0
   1d610:	str	r0, [r1]
   1d614:	bne	1d63c <g_strcmp0@plt+0x6a04>
   1d618:	mov	r1, #80	; 0x50
   1d61c:	mov	r0, r4
   1d620:	bl	16b48 <g_type_check_class_cast@plt>
   1d624:	ldr	r3, [pc, #36]	; 1d650 <g_strcmp0@plt+0x6a18>
   1d628:	mov	r1, #88	; 0x58
   1d62c:	str	r3, [r0, #24]
   1d630:	mov	r0, r4
   1d634:	pop	{r4, lr}
   1d638:	b	1665c <g_type_class_add_private@plt>
   1d63c:	add	r1, r1, #4
   1d640:	mov	r0, r4
   1d644:	bl	15c0c <g_type_class_adjust_private_offset@plt>
   1d648:	b	1d618 <g_strcmp0@plt+0x69e0>
   1d64c:	muleq	r3, ip, r6
   1d650:	andeq	sp, r1, ip, lsr #30
   1d654:	push	{r4, r5, r6, lr}
   1d658:	mov	r4, r0
   1d65c:	mov	r5, r1
   1d660:	b	1d688 <g_strcmp0@plt+0x6a50>
   1d664:	cmp	r4, r3
   1d668:	beq	1d698 <g_strcmp0@plt+0x6a60>
   1d66c:	ldrb	r2, [r3, #-1]
   1d670:	add	r0, r3, #1
   1d674:	cmp	r2, #32
   1d678:	bne	1d698 <g_strcmp0@plt+0x6a60>
   1d67c:	ldrb	r2, [r3, #1]
   1d680:	cmp	r2, #32
   1d684:	bne	1d698 <g_strcmp0@plt+0x6a60>
   1d688:	mov	r1, r5
   1d68c:	bl	1656c <strstr@plt>
   1d690:	subs	r3, r0, #0
   1d694:	bne	1d664 <g_strcmp0@plt+0x6a2c>
   1d698:	mov	r0, r3
   1d69c:	pop	{r4, r5, r6, pc}
   1d6a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d6a4:	mov	r5, r1
   1d6a8:	sub	sp, sp, #12
   1d6ac:	mov	r8, r0
   1d6b0:	mov	r1, #1024	; 0x400
   1d6b4:	mov	r0, r5
   1d6b8:	mov	r9, r2
   1d6bc:	mov	sl, r3
   1d6c0:	bl	1d548 <g_strcmp0@plt+0x6910>
   1d6c4:	subs	r4, r0, #0
   1d6c8:	moveq	r7, r4
   1d6cc:	beq	1d778 <g_strcmp0@plt+0x6b40>
   1d6d0:	mov	r0, r8
   1d6d4:	bl	15fe4 <g_strdup@plt>
   1d6d8:	mov	r1, r5
   1d6dc:	mov	r7, r0
   1d6e0:	bl	1d654 <g_strcmp0@plt+0x6a1c>
   1d6e4:	subs	r6, r0, #0
   1d6e8:	beq	1d76c <g_strcmp0@plt+0x6b34>
   1d6ec:	mov	fp, #0
   1d6f0:	strb	fp, [r6], r4
   1d6f4:	mov	r1, r5
   1d6f8:	mov	r0, r6
   1d6fc:	bl	1d654 <g_strcmp0@plt+0x6a1c>
   1d700:	cmp	r0, #0
   1d704:	beq	1d76c <g_strcmp0@plt+0x6b34>
   1d708:	subs	r3, r6, fp
   1d70c:	movne	r3, #1
   1d710:	cmp	r7, fp
   1d714:	moveq	r3, fp
   1d718:	strb	fp, [r0], r4
   1d71c:	cmp	r0, fp
   1d720:	moveq	r3, fp
   1d724:	cmp	r3, fp
   1d728:	beq	1d76c <g_strcmp0@plt+0x6b34>
   1d72c:	str	r0, [sp, #4]
   1d730:	mov	r3, r6
   1d734:	mov	r2, r9
   1d738:	mov	r1, r7
   1d73c:	str	sl, [sp]
   1d740:	ldr	r0, [pc, #68]	; 1d78c <g_strcmp0@plt+0x6b54>
   1d744:	bl	160e0 <g_strdup_printf@plt>
   1d748:	mov	r3, sl
   1d74c:	mov	r2, r9
   1d750:	mov	r1, r5
   1d754:	mov	r6, r0
   1d758:	bl	1d6a0 <g_strcmp0@plt+0x6a68>
   1d75c:	mov	r4, r0
   1d760:	mov	r0, r6
   1d764:	bl	16518 <g_free@plt>
   1d768:	b	1d778 <g_strcmp0@plt+0x6b40>
   1d76c:	mov	r0, r8
   1d770:	bl	15fe4 <g_strdup@plt>
   1d774:	mov	r4, r0
   1d778:	mov	r0, r7
   1d77c:	bl	16518 <g_free@plt>
   1d780:	mov	r0, r4
   1d784:	add	sp, sp, #12
   1d788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d78c:	andeq	r7, r2, r4, lsl #19
   1d790:	push	{r4, r5, r6, lr}
   1d794:	mov	r5, r0
   1d798:	mov	r0, r1
   1d79c:	bl	15fe4 <g_strdup@plt>
   1d7a0:	mov	r4, r0
   1d7a4:	bl	16974 <g_strchug@plt>
   1d7a8:	bl	16014 <g_strchomp@plt>
   1d7ac:	ldr	r3, [r5, #12]
   1d7b0:	mov	r2, r4
   1d7b4:	ldr	r1, [pc, #20]	; 1d7d0 <g_strcmp0@plt+0x6b98>
   1d7b8:	ldr	r0, [r3, #80]	; 0x50
   1d7bc:	bl	16b3c <g_string_append_printf@plt>
   1d7c0:	mov	r0, r4
   1d7c4:	bl	16518 <g_free@plt>
   1d7c8:	mov	r0, #1
   1d7cc:	pop	{r4, r5, r6, pc}
   1d7d0:	muleq	r2, r0, r9
   1d7d4:	push	{r4, r5, r6, lr}
   1d7d8:	mov	r5, r0
   1d7dc:	mov	r0, r1
   1d7e0:	bl	15fe4 <g_strdup@plt>
   1d7e4:	mov	r2, #32
   1d7e8:	ldr	r1, [pc, #60]	; 1d82c <g_strcmp0@plt+0x6bf4>
   1d7ec:	mov	r4, r0
   1d7f0:	bl	15cf0 <g_strdelimit@plt>
   1d7f4:	ldr	r3, [r5, #12]
   1d7f8:	ldr	r2, [r3, #64]	; 0x40
   1d7fc:	ldr	r3, [r3, #60]	; 0x3c
   1d800:	cmp	r2, r3
   1d804:	movcs	r5, #0
   1d808:	bcs	1d81c <g_strcmp0@plt+0x6be4>
   1d80c:	mov	r0, r5
   1d810:	mov	r1, r4
   1d814:	bl	1d790 <g_strcmp0@plt+0x6b58>
   1d818:	mov	r5, r0
   1d81c:	mov	r0, r4
   1d820:	bl	16518 <g_free@plt>
   1d824:	mov	r0, r5
   1d828:	pop	{r4, r5, r6, pc}
   1d82c:	muleq	r2, r4, r9
   1d830:	push	{r4, r5, r6, r7, r8, lr}
   1d834:	mov	r4, r0
   1d838:	mov	r0, r1
   1d83c:	bl	15fe4 <g_strdup@plt>
   1d840:	ldr	r2, [r4, #12]
   1d844:	ldr	r1, [pc, #264]	; 1d954 <g_strcmp0@plt+0x6d1c>
   1d848:	ldrd	r2, [r2, #12]
   1d84c:	mov	r5, r0
   1d850:	bl	1d6a0 <g_strcmp0@plt+0x6a68>
   1d854:	mov	r6, r0
   1d858:	mov	r0, r5
   1d85c:	bl	16518 <g_free@plt>
   1d860:	ldr	r2, [r4, #12]
   1d864:	ldr	r1, [pc, #236]	; 1d958 <g_strcmp0@plt+0x6d20>
   1d868:	mov	r0, r6
   1d86c:	ldrd	r2, [r2, #12]
   1d870:	bl	1d6a0 <g_strcmp0@plt+0x6a68>
   1d874:	mov	r5, r0
   1d878:	mov	r0, r6
   1d87c:	bl	16518 <g_free@plt>
   1d880:	ldr	r2, [r4, #12]
   1d884:	ldr	r1, [pc, #208]	; 1d95c <g_strcmp0@plt+0x6d24>
   1d888:	mov	r0, r5
   1d88c:	ldrd	r2, [r2, #4]
   1d890:	bl	1d6a0 <g_strcmp0@plt+0x6a68>
   1d894:	mov	r6, r0
   1d898:	mov	r0, r5
   1d89c:	bl	16518 <g_free@plt>
   1d8a0:	ldr	r2, [r4, #12]
   1d8a4:	ldr	r1, [pc, #180]	; 1d960 <g_strcmp0@plt+0x6d28>
   1d8a8:	mov	r0, r6
   1d8ac:	ldrd	r2, [r2, #4]
   1d8b0:	bl	1d6a0 <g_strcmp0@plt+0x6a68>
   1d8b4:	mov	r5, r0
   1d8b8:	mov	r0, r6
   1d8bc:	bl	16518 <g_free@plt>
   1d8c0:	mvn	r2, #0
   1d8c4:	ldr	r1, [pc, #152]	; 1d964 <g_strcmp0@plt+0x6d2c>
   1d8c8:	mov	r0, r5
   1d8cc:	bl	161c4 <g_strsplit@plt>
   1d8d0:	mov	r1, r0
   1d8d4:	mov	r6, r0
   1d8d8:	ldr	r0, [pc, #136]	; 1d968 <g_strcmp0@plt+0x6d30>
   1d8dc:	bl	16b0c <g_strjoinv@plt>
   1d8e0:	mov	r7, r0
   1d8e4:	mov	r0, r6
   1d8e8:	bl	1644c <g_strfreev@plt>
   1d8ec:	mov	r0, r5
   1d8f0:	bl	16518 <g_free@plt>
   1d8f4:	ldr	r3, [r4, #12]
   1d8f8:	ldr	r3, [r3, #68]	; 0x44
   1d8fc:	cmp	r3, #0
   1d900:	bne	1d90c <g_strcmp0@plt+0x6cd4>
   1d904:	mov	r0, r7
   1d908:	pop	{r4, r5, r6, r7, r8, pc}
   1d90c:	ldr	r3, [pc, #88]	; 1d96c <g_strcmp0@plt+0x6d34>
   1d910:	ldr	r2, [pc, #88]	; 1d970 <g_strcmp0@plt+0x6d38>
   1d914:	ldr	r1, [pc, #88]	; 1d974 <g_strcmp0@plt+0x6d3c>
   1d918:	mov	r0, r7
   1d91c:	bl	1d6a0 <g_strcmp0@plt+0x6a68>
   1d920:	mov	r4, r0
   1d924:	mov	r0, r7
   1d928:	bl	16518 <g_free@plt>
   1d92c:	ldr	r3, [pc, #68]	; 1d978 <g_strcmp0@plt+0x6d40>
   1d930:	ldr	r2, [pc, #68]	; 1d97c <g_strcmp0@plt+0x6d44>
   1d934:	ldr	r1, [pc, #68]	; 1d980 <g_strcmp0@plt+0x6d48>
   1d938:	mov	r0, r4
   1d93c:	bl	1d6a0 <g_strcmp0@plt+0x6a68>
   1d940:	mov	r7, r0
   1d944:	mov	r0, r4
   1d948:	bl	16518 <g_free@plt>
   1d94c:	mov	r0, r7
   1d950:	pop	{r4, r5, r6, r7, r8, pc}
   1d954:	muleq	r2, r8, r9
   1d958:	muleq	r2, ip, r9
   1d95c:	andeq	r7, r2, r0, lsr #19
   1d960:	andeq	r7, r2, r4, lsr #19
   1d964:	andeq	r7, r2, r8, lsr #19
   1d968:			; <UNDEFINED> instruction: 0x000279b0
   1d96c:			; <UNDEFINED> instruction: 0x000279b8
   1d970:			; <UNDEFINED> instruction: 0x000279bc
   1d974:	andeq	r7, r2, r0, asr #19
   1d978:	andeq	r7, r2, r4, asr #19
   1d97c:	andeq	r7, r2, r8, asr #19
   1d980:	andeq	r7, r2, r0, asr #24
   1d984:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d988:	mov	r4, r0
   1d98c:	sub	sp, sp, #20
   1d990:	ldr	r6, [pc, #1156]	; 1de1c <g_strcmp0@plt+0x71e4>
   1d994:	b	1d9b0 <g_strcmp0@plt+0x6d78>
   1d998:	ldr	r3, [r4, #12]
   1d99c:	ldr	r3, [r3, #80]	; 0x50
   1d9a0:	mov	r0, r3
   1d9a4:	ldr	r1, [r3, #4]
   1d9a8:	sub	r1, r1, #1
   1d9ac:	bl	15a80 <g_string_set_size@plt>
   1d9b0:	ldr	r3, [r4, #12]
   1d9b4:	mov	r1, r6
   1d9b8:	ldr	r3, [r3, #80]	; 0x50
   1d9bc:	ldr	r0, [r3]
   1d9c0:	bl	16a28 <g_str_has_suffix@plt>
   1d9c4:	cmp	r0, #0
   1d9c8:	bne	1d998 <g_strcmp0@plt+0x6d60>
   1d9cc:	ldr	r3, [r4, #12]
   1d9d0:	mov	r5, r0
   1d9d4:	ldr	r3, [r3, #80]	; 0x50
   1d9d8:	ldr	r0, [r3]
   1d9dc:	bl	15fe4 <g_strdup@plt>
   1d9e0:	ldr	r3, [r4, #12]
   1d9e4:	ldr	r2, [r3, #72]	; 0x48
   1d9e8:	cmp	r2, #0
   1d9ec:	mov	r6, r0
   1d9f0:	bne	1db4c <g_strcmp0@plt+0x6f14>
   1d9f4:	ldr	r2, [r3, #56]	; 0x38
   1d9f8:	cmp	r2, #1
   1d9fc:	beq	1dba8 <g_strcmp0@plt+0x6f70>
   1da00:	ldr	r2, [r3, #76]	; 0x4c
   1da04:	cmp	r2, #0
   1da08:	beq	1da2c <g_strcmp0@plt+0x6df4>
   1da0c:	ldr	r2, [r3]
   1da10:	sub	r2, r2, #2
   1da14:	cmp	r2, #1
   1da18:	movhi	r2, r3
   1da1c:	bls	1dc54 <g_strcmp0@plt+0x701c>
   1da20:	ldr	r3, [r2, #72]	; 0x48
   1da24:	cmp	r3, #0
   1da28:	bne	1db58 <g_strcmp0@plt+0x6f20>
   1da2c:	mov	r1, #96	; 0x60
   1da30:	mov	r0, r6
   1da34:	bl	16bb4 <strchr@plt>
   1da38:	cmp	r0, #0
   1da3c:	beq	1dbdc <g_strcmp0@plt+0x6fa4>
   1da40:	ldr	r1, [pc, #984]	; 1de20 <g_strcmp0@plt+0x71e8>
   1da44:	mvn	r2, #0
   1da48:	mov	r0, r6
   1da4c:	bl	161c4 <g_strsplit@plt>
   1da50:	mov	r7, r0
   1da54:	ldr	r0, [pc, #968]	; 1de24 <g_strcmp0@plt+0x71ec>
   1da58:	bl	15d20 <g_string_new@plt>
   1da5c:	ldr	r1, [r7]
   1da60:	cmp	r1, #0
   1da64:	mov	r5, r0
   1da68:	bne	1daa4 <g_strcmp0@plt+0x6e6c>
   1da6c:	b	1dad4 <g_strcmp0@plt+0x6e9c>
   1da70:	ldr	r3, [r4, #12]
   1da74:	ldr	r1, [r3, #20]
   1da78:	bl	16ab8 <g_string_append@plt>
   1da7c:	ldr	r1, [r7, #4]
   1da80:	mov	r0, r5
   1da84:	bl	16ab8 <g_string_append@plt>
   1da88:	ldr	r3, [r4, #12]
   1da8c:	mov	r0, r5
   1da90:	ldr	r1, [r3, #24]
   1da94:	bl	16ab8 <g_string_append@plt>
   1da98:	ldr	r1, [r7, #8]!
   1da9c:	cmp	r1, #0
   1daa0:	beq	1dad4 <g_strcmp0@plt+0x6e9c>
   1daa4:	mov	r0, r4
   1daa8:	bl	1d830 <g_strcmp0@plt+0x6bf8>
   1daac:	mov	r1, r0
   1dab0:	mov	r8, r0
   1dab4:	mov	r0, r5
   1dab8:	bl	16ab8 <g_string_append@plt>
   1dabc:	mov	r0, r8
   1dac0:	bl	16518 <g_free@plt>
   1dac4:	ldr	r3, [r7, #4]
   1dac8:	mov	r0, r5
   1dacc:	cmp	r3, #0
   1dad0:	bne	1da70 <g_strcmp0@plt+0x6e38>
   1dad4:	mov	r0, r5
   1dad8:	mov	r1, #0
   1dadc:	bl	167d0 <g_string_free@plt>
   1dae0:	mov	r5, r0
   1dae4:	ldr	r1, [r4, #12]
   1dae8:	ldr	r3, [r1]
   1daec:	cmp	r3, #2
   1daf0:	beq	1db78 <g_strcmp0@plt+0x6f40>
   1daf4:	cmp	r3, #4
   1daf8:	beq	1dc14 <g_strcmp0@plt+0x6fdc>
   1dafc:	cmp	r3, #5
   1db00:	beq	1dc34 <g_strcmp0@plt+0x6ffc>
   1db04:	bic	r3, r3, #2
   1db08:	cmp	r3, #1
   1db0c:	beq	1dbf0 <g_strcmp0@plt+0x6fb8>
   1db10:	ldr	r2, [pc, #784]	; 1de28 <g_strcmp0@plt+0x71f0>
   1db14:	mov	r3, r5
   1db18:	mov	r1, #128	; 0x80
   1db1c:	ldr	r0, [pc, #776]	; 1de2c <g_strcmp0@plt+0x71f4>
   1db20:	bl	15dec <g_log@plt>
   1db24:	ldr	r3, [r4, #12]
   1db28:	mov	r1, #0
   1db2c:	ldr	r0, [r3, #80]	; 0x50
   1db30:	bl	15ce4 <g_string_truncate@plt>
   1db34:	mov	r0, r6
   1db38:	bl	16518 <g_free@plt>
   1db3c:	mov	r0, r5
   1db40:	add	sp, sp, #20
   1db44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db48:	b	16518 <g_free@plt>
   1db4c:	ldr	r2, [r3, #76]	; 0x4c
   1db50:	cmp	r2, #0
   1db54:	bne	1da0c <g_strcmp0@plt+0x6dd4>
   1db58:	mvn	r1, #0
   1db5c:	mov	r0, r6
   1db60:	bl	16a1c <g_markup_escape_text@plt>
   1db64:	mov	r5, r0
   1db68:	mov	r0, r6
   1db6c:	bl	16518 <g_free@plt>
   1db70:	mov	r6, r5
   1db74:	b	1da2c <g_strcmp0@plt+0x6df4>
   1db78:	ldr	r3, [r1, #48]	; 0x30
   1db7c:	ldr	r2, [r1, #44]	; 0x2c
   1db80:	ldr	r0, [r1, #84]	; 0x54
   1db84:	str	r3, [sp]
   1db88:	ldr	r1, [pc, #672]	; 1de30 <g_strcmp0@plt+0x71f8>
   1db8c:	mov	r3, r5
   1db90:	bl	16b3c <g_string_append_printf@plt>
   1db94:	ldr	r2, [r4, #12]
   1db98:	ldr	r3, [r2, #64]	; 0x40
   1db9c:	add	r3, r3, #1
   1dba0:	str	r3, [r2, #64]	; 0x40
   1dba4:	b	1db10 <g_strcmp0@plt+0x6ed8>
   1dba8:	mov	r2, #40	; 0x28
   1dbac:	ldr	r1, [pc, #640]	; 1de34 <g_strcmp0@plt+0x71fc>
   1dbb0:	bl	15cf0 <g_strdelimit@plt>
   1dbb4:	mov	r2, #41	; 0x29
   1dbb8:	ldr	r1, [pc, #632]	; 1de38 <g_strcmp0@plt+0x7200>
   1dbbc:	mov	r0, r6
   1dbc0:	bl	15cf0 <g_strdelimit@plt>
   1dbc4:	ldr	r3, [r4, #12]
   1dbc8:	mov	r2, r3
   1dbcc:	ldr	r1, [r3, #76]	; 0x4c
   1dbd0:	cmp	r1, #0
   1dbd4:	beq	1da20 <g_strcmp0@plt+0x6de8>
   1dbd8:	b	1da0c <g_strcmp0@plt+0x6dd4>
   1dbdc:	mov	r1, r6
   1dbe0:	mov	r0, r4
   1dbe4:	bl	1d830 <g_strcmp0@plt+0x6bf8>
   1dbe8:	mov	r5, r0
   1dbec:	b	1dae4 <g_strcmp0@plt+0x6eac>
   1dbf0:	ldr	r0, [r1, #84]	; 0x54
   1dbf4:	mov	r2, r5
   1dbf8:	ldr	r1, [pc, #572]	; 1de3c <g_strcmp0@plt+0x7204>
   1dbfc:	bl	16b3c <g_string_append_printf@plt>
   1dc00:	ldr	r2, [r4, #12]
   1dc04:	ldr	r3, [r2, #64]	; 0x40
   1dc08:	add	r3, r3, #1
   1dc0c:	str	r3, [r2, #64]	; 0x40
   1dc10:	b	1db10 <g_strcmp0@plt+0x6ed8>
   1dc14:	ldr	r3, [r1, #32]
   1dc18:	ldr	r2, [r1, #28]
   1dc1c:	ldr	r0, [r1, #84]	; 0x54
   1dc20:	str	r3, [sp]
   1dc24:	ldr	r1, [pc, #516]	; 1de30 <g_strcmp0@plt+0x71f8>
   1dc28:	mov	r3, r5
   1dc2c:	bl	16b3c <g_string_append_printf@plt>
   1dc30:	b	1db10 <g_strcmp0@plt+0x6ed8>
   1dc34:	ldr	r3, [r1, #40]	; 0x28
   1dc38:	ldr	r2, [r1, #36]	; 0x24
   1dc3c:	ldr	r0, [r1, #84]	; 0x54
   1dc40:	str	r3, [sp]
   1dc44:	ldr	r1, [pc, #484]	; 1de30 <g_strcmp0@plt+0x71f8>
   1dc48:	mov	r3, r5
   1dc4c:	bl	16b3c <g_string_append_printf@plt>
   1dc50:	b	1db10 <g_strcmp0@plt+0x6ed8>
   1dc54:	mvn	r2, #0
   1dc58:	ldr	r1, [pc, #444]	; 1de1c <g_strcmp0@plt+0x71e4>
   1dc5c:	mov	r0, r6
   1dc60:	bl	161c4 <g_strsplit@plt>
   1dc64:	ldr	fp, [r0]
   1dc68:	mov	r9, r0
   1dc6c:	cmp	fp, #0
   1dc70:	beq	1de0c <g_strcmp0@plt+0x71d4>
   1dc74:	ldr	r8, [pc, #420]	; 1de20 <g_strcmp0@plt+0x71e8>
   1dc78:	ldr	sl, [pc, #448]	; 1de40 <g_strcmp0@plt+0x7208>
   1dc7c:	mov	r7, r0
   1dc80:	mov	r1, r8
   1dc84:	mov	r0, fp
   1dc88:	bl	162b4 <g_str_has_prefix@plt>
   1dc8c:	cmp	r0, #0
   1dc90:	bne	1dd04 <g_strcmp0@plt+0x70cc>
   1dc94:	mov	r1, r8
   1dc98:	mov	r0, fp
   1dc9c:	bl	16a28 <g_str_has_suffix@plt>
   1dca0:	cmp	r0, #0
   1dca4:	bne	1dd04 <g_strcmp0@plt+0x70cc>
   1dca8:	mov	r1, sl
   1dcac:	mov	r0, fp
   1dcb0:	bl	162b4 <g_str_has_prefix@plt>
   1dcb4:	cmp	r0, #0
   1dcb8:	bne	1dce4 <g_strcmp0@plt+0x70ac>
   1dcbc:	ldr	r1, [pc, #384]	; 1de44 <g_strcmp0@plt+0x720c>
   1dcc0:	mov	r0, fp
   1dcc4:	bl	162b4 <g_str_has_prefix@plt>
   1dcc8:	cmp	r0, #0
   1dccc:	bne	1dce4 <g_strcmp0@plt+0x70ac>
   1dcd0:	ldr	r1, [pc, #368]	; 1de48 <g_strcmp0@plt+0x7210>
   1dcd4:	mov	r0, fp
   1dcd8:	bl	162b4 <g_str_has_prefix@plt>
   1dcdc:	cmp	r0, #0
   1dce0:	beq	1dd44 <g_strcmp0@plt+0x710c>
   1dce4:	ldr	r1, [r7]
   1dce8:	ldr	r0, [pc, #348]	; 1de4c <g_strcmp0@plt+0x7214>
   1dcec:	bl	160e0 <g_strdup_printf@plt>
   1dcf0:	mov	r5, #1
   1dcf4:	mov	fp, r0
   1dcf8:	ldr	r0, [r7]
   1dcfc:	bl	16518 <g_free@plt>
   1dd00:	str	fp, [r7]
   1dd04:	ldr	fp, [r7, #4]!
   1dd08:	cmp	fp, #0
   1dd0c:	bne	1dc80 <g_strcmp0@plt+0x7048>
   1dd10:	cmp	r5, #0
   1dd14:	beq	1de0c <g_strcmp0@plt+0x71d4>
   1dd18:	mov	r1, r9
   1dd1c:	ldr	r0, [pc, #248]	; 1de1c <g_strcmp0@plt+0x71e4>
   1dd20:	bl	16b0c <g_strjoinv@plt>
   1dd24:	mov	r5, r0
   1dd28:	mov	r0, r9
   1dd2c:	bl	1644c <g_strfreev@plt>
   1dd30:	mov	r0, r6
   1dd34:	bl	16518 <g_free@plt>
   1dd38:	mov	r6, r5
   1dd3c:	ldr	r2, [r4, #12]
   1dd40:	b	1da20 <g_strcmp0@plt+0x6de8>
   1dd44:	ldr	r1, [pc, #260]	; 1de50 <g_strcmp0@plt+0x7218>
   1dd48:	mov	r0, fp
   1dd4c:	bl	162b4 <g_str_has_prefix@plt>
   1dd50:	cmp	r0, #0
   1dd54:	bne	1dce4 <g_strcmp0@plt+0x70ac>
   1dd58:	ldr	r1, [pc, #244]	; 1de54 <g_strcmp0@plt+0x721c>
   1dd5c:	mov	r0, fp
   1dd60:	bl	162b4 <g_str_has_prefix@plt>
   1dd64:	cmp	r0, #0
   1dd68:	bne	1dce4 <g_strcmp0@plt+0x70ac>
   1dd6c:	ldr	r1, [pc, #228]	; 1de58 <g_strcmp0@plt+0x7220>
   1dd70:	mov	r0, fp
   1dd74:	bl	16434 <g_strrstr@plt>
   1dd78:	cmp	r0, #0
   1dd7c:	bne	1dce4 <g_strcmp0@plt+0x70ac>
   1dd80:	ldr	r1, [pc, #212]	; 1de5c <g_strcmp0@plt+0x7224>
   1dd84:	mov	r0, fp
   1dd88:	bl	16434 <g_strrstr@plt>
   1dd8c:	cmp	r0, #0
   1dd90:	bne	1dce4 <g_strcmp0@plt+0x70ac>
   1dd94:	ldr	r1, [pc, #196]	; 1de60 <g_strcmp0@plt+0x7228>
   1dd98:	mov	r0, fp
   1dd9c:	bl	16434 <g_strrstr@plt>
   1dda0:	cmp	r0, #0
   1dda4:	bne	1dce4 <g_strcmp0@plt+0x70ac>
   1dda8:	ldr	r1, [pc, #180]	; 1de64 <g_strcmp0@plt+0x722c>
   1ddac:	mov	r0, fp
   1ddb0:	bl	16434 <g_strrstr@plt>
   1ddb4:	subs	r3, r0, #0
   1ddb8:	str	r3, [sp, #12]
   1ddbc:	bne	1dce4 <g_strcmp0@plt+0x70ac>
   1ddc0:	ldrb	r2, [fp]
   1ddc4:	cmp	r2, #95	; 0x5f
   1ddc8:	beq	1dd04 <g_strcmp0@plt+0x70cc>
   1ddcc:	mov	r1, #1024	; 0x400
   1ddd0:	mov	r0, fp
   1ddd4:	bl	1d548 <g_strcmp0@plt+0x6910>
   1ddd8:	subs	r2, r0, #0
   1dddc:	beq	1dd04 <g_strcmp0@plt+0x70cc>
   1dde0:	add	r2, fp, r2
   1dde4:	ldr	r3, [sp, #12]
   1dde8:	b	1ddf8 <g_strcmp0@plt+0x71c0>
   1ddec:	ldrb	r1, [fp], #1
   1ddf0:	cmp	r1, #95	; 0x5f
   1ddf4:	addeq	r3, r3, #1
   1ddf8:	cmp	r2, fp
   1ddfc:	bne	1ddec <g_strcmp0@plt+0x71b4>
   1de00:	cmp	r3, #1
   1de04:	bhi	1dce4 <g_strcmp0@plt+0x70ac>
   1de08:	b	1dd04 <g_strcmp0@plt+0x70cc>
   1de0c:	mov	r0, r6
   1de10:	bl	15fe4 <g_strdup@plt>
   1de14:	mov	r5, r0
   1de18:	b	1dd28 <g_strcmp0@plt+0x70f0>
   1de1c:			; <UNDEFINED> instruction: 0x000279b4
   1de20:	ldrdeq	r7, [r2], -r0
   1de24:	andeq	r7, r2, r8, ror #22
   1de28:	andeq	r7, r2, ip, lsl sl
   1de2c:	andeq	r6, r2, r0, ror #4
   1de30:	andeq	r7, r2, r4, lsl sl
   1de34:	andeq	r7, r2, ip, asr #19
   1de38:	andeq	fp, r2, r0, lsr #25
   1de3c:	andeq	r7, r2, r4, asr #12
   1de40:	ldrdeq	r7, [r2], -r4
   1de44:	muleq	r2, r4, r9
   1de48:	andeq	r7, r2, r0, ror #19
   1de4c:	ldrdeq	r7, [r2], -r8
   1de50:	andeq	r7, r2, r8, ror #19
   1de54:	strdeq	r7, [r2], -r4
   1de58:	strdeq	r7, [r2], -ip
   1de5c:	andeq	r7, r2, r4, lsl #20
   1de60:	andeq	r7, r2, ip, lsl #20
   1de64:	andeq	r7, r2, r0, lsl sl
   1de68:	push	{r4, lr}
   1de6c:	mcr	15, 0, r0, cr7, cr10, {5}
   1de70:	ldr	r4, [pc, #60]	; 1deb4 <g_strcmp0@plt+0x727c>
   1de74:	ldr	r3, [r4, #8]
   1de78:	mcr	15, 0, r0, cr7, cr10, {5}
   1de7c:	cmp	r3, #0
   1de80:	beq	1de8c <g_strcmp0@plt+0x7254>
   1de84:	ldr	r0, [r4, #8]
   1de88:	pop	{r4, pc}
   1de8c:	add	r0, r4, #8
   1de90:	bl	16320 <g_once_init_enter@plt>
   1de94:	cmp	r0, #0
   1de98:	beq	1de84 <g_strcmp0@plt+0x724c>
   1de9c:	bl	1d5ac <g_strcmp0@plt+0x6974>
   1dea0:	mov	r1, r0
   1dea4:	add	r0, r4, #8
   1dea8:	bl	168c0 <g_once_init_leave@plt>
   1deac:	ldr	r0, [r4, #8]
   1deb0:	pop	{r4, pc}
   1deb4:	muleq	r3, ip, r6
   1deb8:	push	{r4, r5, r6, r7, r8, lr}
   1debc:	mov	r4, r0
   1dec0:	bl	1de68 <g_strcmp0@plt+0x7230>
   1dec4:	ldr	r6, [pc, #92]	; 1df28 <g_strcmp0@plt+0x72f0>
   1dec8:	mov	r1, r0
   1decc:	mov	r0, r4
   1ded0:	bl	16290 <g_type_instance_get_private@plt>
   1ded4:	mov	r2, #6
   1ded8:	mov	r3, #3
   1dedc:	str	r0, [r4, #12]
   1dee0:	mov	r5, r0
   1dee4:	str	r2, [r0]
   1dee8:	str	r3, [r0, #56]	; 0x38
   1deec:	mov	r0, r6
   1def0:	bl	15d20 <g_string_new@plt>
   1def4:	ldr	r7, [r4, #12]
   1def8:	str	r0, [r5, #80]	; 0x50
   1defc:	mov	r0, r6
   1df00:	bl	15d20 <g_string_new@plt>
   1df04:	ldr	r3, [r4, #12]
   1df08:	mov	r2, #0
   1df0c:	mvn	r1, #0
   1df10:	str	r0, [r7, #84]	; 0x54
   1df14:	str	r1, [r3, #60]	; 0x3c
   1df18:	str	r2, [r3, #68]	; 0x44
   1df1c:	str	r2, [r3, #72]	; 0x48
   1df20:	str	r2, [r3, #76]	; 0x4c
   1df24:	pop	{r4, r5, r6, r7, r8, pc}
   1df28:	andeq	r7, r2, r8, ror #22
   1df2c:	push	{r4, r5, r6, lr}
   1df30:	mov	r4, r0
   1df34:	bl	1de68 <g_strcmp0@plt+0x7230>
   1df38:	cmp	r4, #0
   1df3c:	beq	1dfc8 <g_strcmp0@plt+0x7390>
   1df40:	ldr	r3, [r4]
   1df44:	cmp	r3, #0
   1df48:	beq	1df58 <g_strcmp0@plt+0x7320>
   1df4c:	ldr	r3, [r3]
   1df50:	cmp	r3, r0
   1df54:	beq	1df6c <g_strcmp0@plt+0x7334>
   1df58:	mov	r1, r0
   1df5c:	mov	r0, r4
   1df60:	bl	166d4 <g_type_check_instance_is_a@plt>
   1df64:	cmp	r0, #0
   1df68:	beq	1dfc8 <g_strcmp0@plt+0x7390>
   1df6c:	bl	1de68 <g_strcmp0@plt+0x7230>
   1df70:	mov	r1, r0
   1df74:	mov	r0, r4
   1df78:	bl	15d68 <g_type_check_instance_cast@plt>
   1df7c:	ldr	r3, [r0, #12]
   1df80:	mov	r5, r0
   1df84:	cmp	r3, #0
   1df88:	beq	1dfdc <g_strcmp0@plt+0x73a4>
   1df8c:	ldr	r0, [r3, #80]	; 0x50
   1df90:	mov	r1, #1
   1df94:	bl	167d0 <g_string_free@plt>
   1df98:	ldr	r3, [r5, #12]
   1df9c:	mov	r1, #1
   1dfa0:	ldr	r0, [r3, #84]	; 0x54
   1dfa4:	bl	167d0 <g_string_free@plt>
   1dfa8:	ldr	r3, [pc, #64]	; 1dff0 <g_strcmp0@plt+0x73b8>
   1dfac:	mov	r1, #80	; 0x50
   1dfb0:	ldr	r0, [r3]
   1dfb4:	bl	16b48 <g_type_check_class_cast@plt>
   1dfb8:	ldr	r3, [r0, #24]
   1dfbc:	mov	r0, r4
   1dfc0:	pop	{r4, r5, r6, lr}
   1dfc4:	bx	r3
   1dfc8:	ldr	r2, [pc, #36]	; 1dff4 <g_strcmp0@plt+0x73bc>
   1dfcc:	ldr	r1, [pc, #36]	; 1dff8 <g_strcmp0@plt+0x73c0>
   1dfd0:	ldr	r0, [pc, #36]	; 1dffc <g_strcmp0@plt+0x73c4>
   1dfd4:	pop	{r4, r5, r6, lr}
   1dfd8:	b	15bac <g_return_if_fail_warning@plt>
   1dfdc:	ldr	r2, [pc, #28]	; 1e000 <g_strcmp0@plt+0x73c8>
   1dfe0:	ldr	r1, [pc, #16]	; 1dff8 <g_strcmp0@plt+0x73c0>
   1dfe4:	ldr	r0, [pc, #16]	; 1dffc <g_strcmp0@plt+0x73c4>
   1dfe8:	pop	{r4, r5, r6, lr}
   1dfec:	b	15bac <g_return_if_fail_warning@plt>
   1dff0:	muleq	r3, ip, r6
   1dff4:	andeq	r7, r2, r8, lsr #20
   1dff8:	andeq	r7, r2, r4, asr #17
   1dffc:	andeq	r6, r2, r0, ror #4
   1e000:	andeq	r7, r2, r4, asr #20
   1e004:	push	{r4, r5, r6, lr}
   1e008:	mov	r4, r0
   1e00c:	mov	r5, r1
   1e010:	bl	1de68 <g_strcmp0@plt+0x7230>
   1e014:	cmp	r4, #0
   1e018:	beq	1e0bc <g_strcmp0@plt+0x7484>
   1e01c:	ldr	r3, [r4]
   1e020:	cmp	r3, #0
   1e024:	beq	1e034 <g_strcmp0@plt+0x73fc>
   1e028:	ldr	r3, [r3]
   1e02c:	cmp	r3, r0
   1e030:	beq	1e048 <g_strcmp0@plt+0x7410>
   1e034:	mov	r1, r0
   1e038:	mov	r0, r4
   1e03c:	bl	166d4 <g_type_check_instance_is_a@plt>
   1e040:	cmp	r0, #0
   1e044:	beq	1e0bc <g_strcmp0@plt+0x7484>
   1e048:	cmp	r5, #1
   1e04c:	beq	1e13c <g_strcmp0@plt+0x7504>
   1e050:	cmp	r5, #2
   1e054:	beq	1e0d4 <g_strcmp0@plt+0x749c>
   1e058:	cmp	r5, #0
   1e05c:	bne	1e1a4 <g_strcmp0@plt+0x756c>
   1e060:	ldr	r3, [r4, #12]
   1e064:	ldr	r2, [pc, #336]	; 1e1bc <g_strcmp0@plt+0x7584>
   1e068:	ldr	r1, [pc, #336]	; 1e1c0 <g_strcmp0@plt+0x7588>
   1e06c:	ldr	ip, [pc, #336]	; 1e1c4 <g_strcmp0@plt+0x758c>
   1e070:	ldr	r0, [pc, #336]	; 1e1c8 <g_strcmp0@plt+0x7590>
   1e074:	str	r2, [r3, #28]
   1e078:	str	r1, [r3, #32]
   1e07c:	ldr	r2, [pc, #328]	; 1e1cc <g_strcmp0@plt+0x7594>
   1e080:	ldr	r1, [pc, #328]	; 1e1d0 <g_strcmp0@plt+0x7598>
   1e084:	str	ip, [r3, #44]	; 0x2c
   1e088:	str	r0, [r3, #52]	; 0x34
   1e08c:	str	r2, [r3, #4]
   1e090:	str	r2, [r3, #8]
   1e094:	str	r2, [r3, #12]
   1e098:	str	r2, [r3, #16]
   1e09c:	str	r2, [r3, #20]
   1e0a0:	str	r2, [r3, #24]
   1e0a4:	str	r2, [r3, #48]	; 0x30
   1e0a8:	str	r1, [r3, #36]	; 0x24
   1e0ac:	str	r1, [r3, #40]	; 0x28
   1e0b0:	mov	r0, #1
   1e0b4:	str	r5, [r3, #56]	; 0x38
   1e0b8:	pop	{r4, r5, r6, pc}
   1e0bc:	ldr	r2, [pc, #272]	; 1e1d4 <g_strcmp0@plt+0x759c>
   1e0c0:	ldr	r1, [pc, #272]	; 1e1d8 <g_strcmp0@plt+0x75a0>
   1e0c4:	ldr	r0, [pc, #272]	; 1e1dc <g_strcmp0@plt+0x75a4>
   1e0c8:	bl	15bac <g_return_if_fail_warning@plt>
   1e0cc:	mov	r0, #0
   1e0d0:	pop	{r4, r5, r6, pc}
   1e0d4:	ldr	r3, [r4, #12]
   1e0d8:	ldr	r0, [pc, #256]	; 1e1e0 <g_strcmp0@plt+0x75a8>
   1e0dc:	ldr	r1, [pc, #256]	; 1e1e4 <g_strcmp0@plt+0x75ac>
   1e0e0:	ldr	ip, [pc, #256]	; 1e1e8 <g_strcmp0@plt+0x75b0>
   1e0e4:	ldr	r2, [pc, #256]	; 1e1ec <g_strcmp0@plt+0x75b4>
   1e0e8:	str	r0, [r3, #16]
   1e0ec:	str	r1, [r3, #20]
   1e0f0:	ldr	r0, [pc, #248]	; 1e1f0 <g_strcmp0@plt+0x75b8>
   1e0f4:	ldr	r1, [pc, #248]	; 1e1f4 <g_strcmp0@plt+0x75bc>
   1e0f8:	str	ip, [r3, #12]
   1e0fc:	str	r2, [r3, #24]
   1e100:	ldr	ip, [pc, #240]	; 1e1f8 <g_strcmp0@plt+0x75c0>
   1e104:	ldr	r2, [pc, #240]	; 1e1fc <g_strcmp0@plt+0x75c4>
   1e108:	str	r0, [r3, #32]
   1e10c:	str	r1, [r3, #36]	; 0x24
   1e110:	ldr	r0, [pc, #232]	; 1e200 <g_strcmp0@plt+0x75c8>
   1e114:	ldr	r1, [pc, #232]	; 1e204 <g_strcmp0@plt+0x75cc>
   1e118:	str	ip, [r3, #28]
   1e11c:	str	r2, [r3, #40]	; 0x28
   1e120:	ldr	ip, [pc, #224]	; 1e208 <g_strcmp0@plt+0x75d0>
   1e124:	ldr	r2, [pc, #224]	; 1e20c <g_strcmp0@plt+0x75d4>
   1e128:	str	ip, [r3, #44]	; 0x2c
   1e12c:	strd	r0, [r3, #48]	; 0x30
   1e130:	str	r2, [r3, #4]
   1e134:	str	r2, [r3, #8]
   1e138:	b	1e0b0 <g_strcmp0@plt+0x7478>
   1e13c:	ldr	r3, [r4, #12]
   1e140:	ldr	r0, [pc, #200]	; 1e210 <g_strcmp0@plt+0x75d8>
   1e144:	ldr	r1, [pc, #200]	; 1e214 <g_strcmp0@plt+0x75dc>
   1e148:	ldr	r2, [pc, #200]	; 1e218 <g_strcmp0@plt+0x75e0>
   1e14c:	ldr	ip, [pc, #200]	; 1e21c <g_strcmp0@plt+0x75e4>
   1e150:	str	r0, [r3, #4]
   1e154:	str	r1, [r3, #8]
   1e158:	ldr	r0, [pc, #192]	; 1e220 <g_strcmp0@plt+0x75e8>
   1e15c:	ldr	r1, [pc, #192]	; 1e224 <g_strcmp0@plt+0x75ec>
   1e160:	str	r2, [r3, #20]
   1e164:	ldr	r2, [pc, #188]	; 1e228 <g_strcmp0@plt+0x75f0>
   1e168:	str	ip, [r3, #24]
   1e16c:	str	r0, [r3, #28]
   1e170:	ldr	ip, [pc, #84]	; 1e1cc <g_strcmp0@plt+0x7594>
   1e174:	ldr	r0, [pc, #176]	; 1e22c <g_strcmp0@plt+0x75f4>
   1e178:	str	r1, [r3, #32]
   1e17c:	str	r2, [r3, #44]	; 0x2c
   1e180:	ldr	r1, [pc, #168]	; 1e230 <g_strcmp0@plt+0x75f8>
   1e184:	ldr	r2, [pc, #168]	; 1e234 <g_strcmp0@plt+0x75fc>
   1e188:	str	ip, [r3, #48]	; 0x30
   1e18c:	str	r0, [r3, #52]	; 0x34
   1e190:	str	r1, [r3, #12]
   1e194:	str	r1, [r3, #36]	; 0x24
   1e198:	str	r2, [r3, #16]
   1e19c:	str	r2, [r3, #40]	; 0x28
   1e1a0:	b	1e0b0 <g_strcmp0@plt+0x7478>
   1e1a4:	ldr	r2, [pc, #140]	; 1e238 <g_strcmp0@plt+0x7600>
   1e1a8:	mov	r1, #16
   1e1ac:	ldr	r0, [pc, #40]	; 1e1dc <g_strcmp0@plt+0x75a4>
   1e1b0:	bl	15dec <g_log@plt>
   1e1b4:	mov	r0, #0
   1e1b8:	pop	{r4, r5, r6, pc}
   1e1bc:	andeq	r7, r2, r4, asr fp
   1e1c0:	andeq	r7, r2, r8, lsl #12
   1e1c4:	andeq	r7, r2, ip, asr fp
   1e1c8:	andeq	r7, r2, r0, ror #22
   1e1cc:	andeq	r7, r2, r8, ror #22
   1e1d0:	andeq	r7, r2, r8, asr fp
   1e1d4:	andeq	r7, r2, r8, asr sl
   1e1d8:	ldrdeq	r7, [r2], -ip
   1e1dc:	andeq	r6, r2, r0, ror #4
   1e1e0:	andeq	r7, r2, r0, lsl #22
   1e1e4:	andeq	r7, r2, ip, lsl #22
   1e1e8:	strdeq	r7, [r2], -r4
   1e1ec:	andeq	r7, r2, r4, lsl fp
   1e1f0:	andeq	r7, r2, r4, lsr #22
   1e1f4:	andeq	r7, r2, ip, lsr #22
   1e1f8:	andeq	r7, r2, ip, lsl fp
   1e1fc:	andeq	r7, r2, r4, lsr fp
   1e200:	andeq	r7, r2, r4, asr #22
   1e204:	andeq	r7, r2, ip, asr #22
   1e208:	andeq	r7, r2, ip, lsr fp
   1e20c:	andeq	r7, r2, ip, ror #21
   1e210:	andeq	r7, r2, r0, ror sl
   1e214:	andeq	r7, r2, r4, ror sl
   1e218:	andeq	r7, r2, r8, lsl #21
   1e21c:	muleq	r2, r0, sl
   1e220:	muleq	r2, r8, sl
   1e224:	andeq	r7, r2, r0, lsr #21
   1e228:	andeq	r6, r2, r0, lsr #6
   1e22c:	andeq	r7, r2, r8, lsr #21
   1e230:	andeq	r7, r2, ip, ror sl
   1e234:	andeq	r7, r2, r0, lsl #21
   1e238:	andeq	r7, r2, ip, ror #22
   1e23c:	push	{r4, r5, r6, lr}
   1e240:	mov	r4, r0
   1e244:	mov	r5, r1
   1e248:	bl	1de68 <g_strcmp0@plt+0x7230>
   1e24c:	cmp	r4, #0
   1e250:	beq	1e290 <g_strcmp0@plt+0x7658>
   1e254:	ldr	r3, [r4]
   1e258:	cmp	r3, #0
   1e25c:	beq	1e26c <g_strcmp0@plt+0x7634>
   1e260:	ldr	r3, [r3]
   1e264:	cmp	r3, r0
   1e268:	beq	1e280 <g_strcmp0@plt+0x7648>
   1e26c:	mov	r1, r0
   1e270:	mov	r0, r4
   1e274:	bl	166d4 <g_type_check_instance_is_a@plt>
   1e278:	cmp	r0, #0
   1e27c:	beq	1e290 <g_strcmp0@plt+0x7658>
   1e280:	ldr	r3, [r4, #12]
   1e284:	mov	r0, #1
   1e288:	str	r5, [r3, #60]	; 0x3c
   1e28c:	pop	{r4, r5, r6, pc}
   1e290:	ldr	r2, [pc, #16]	; 1e2a8 <g_strcmp0@plt+0x7670>
   1e294:	ldr	r1, [pc, #16]	; 1e2ac <g_strcmp0@plt+0x7674>
   1e298:	ldr	r0, [pc, #16]	; 1e2b0 <g_strcmp0@plt+0x7678>
   1e29c:	bl	15bac <g_return_if_fail_warning@plt>
   1e2a0:	mov	r0, #0
   1e2a4:	pop	{r4, r5, r6, pc}
   1e2a8:	andeq	r7, r2, r8, asr sl
   1e2ac:	strdeq	r7, [r2], -r4
   1e2b0:	andeq	r6, r2, r0, ror #4
   1e2b4:	push	{r4, r5, r6, lr}
   1e2b8:	mov	r4, r0
   1e2bc:	mov	r5, r1
   1e2c0:	bl	1de68 <g_strcmp0@plt+0x7230>
   1e2c4:	cmp	r4, #0
   1e2c8:	beq	1e308 <g_strcmp0@plt+0x76d0>
   1e2cc:	ldr	r3, [r4]
   1e2d0:	cmp	r3, #0
   1e2d4:	beq	1e2e4 <g_strcmp0@plt+0x76ac>
   1e2d8:	ldr	r3, [r3]
   1e2dc:	cmp	r3, r0
   1e2e0:	beq	1e2f8 <g_strcmp0@plt+0x76c0>
   1e2e4:	mov	r1, r0
   1e2e8:	mov	r0, r4
   1e2ec:	bl	166d4 <g_type_check_instance_is_a@plt>
   1e2f0:	cmp	r0, #0
   1e2f4:	beq	1e308 <g_strcmp0@plt+0x76d0>
   1e2f8:	ldr	r3, [r4, #12]
   1e2fc:	mov	r0, #1
   1e300:	str	r5, [r3, #68]	; 0x44
   1e304:	pop	{r4, r5, r6, pc}
   1e308:	ldr	r2, [pc, #16]	; 1e320 <g_strcmp0@plt+0x76e8>
   1e30c:	ldr	r1, [pc, #16]	; 1e324 <g_strcmp0@plt+0x76ec>
   1e310:	ldr	r0, [pc, #16]	; 1e328 <g_strcmp0@plt+0x76f0>
   1e314:	bl	15bac <g_return_if_fail_warning@plt>
   1e318:	mov	r0, #0
   1e31c:	pop	{r4, r5, r6, pc}
   1e320:	andeq	r7, r2, r8, asr sl
   1e324:	andeq	r7, r2, r0, lsl r9
   1e328:	andeq	r6, r2, r0, ror #4
   1e32c:	push	{r4, r5, r6, lr}
   1e330:	mov	r4, r0
   1e334:	mov	r5, r1
   1e338:	bl	1de68 <g_strcmp0@plt+0x7230>
   1e33c:	cmp	r4, #0
   1e340:	beq	1e380 <g_strcmp0@plt+0x7748>
   1e344:	ldr	r3, [r4]
   1e348:	cmp	r3, #0
   1e34c:	beq	1e35c <g_strcmp0@plt+0x7724>
   1e350:	ldr	r3, [r3]
   1e354:	cmp	r3, r0
   1e358:	beq	1e370 <g_strcmp0@plt+0x7738>
   1e35c:	mov	r1, r0
   1e360:	mov	r0, r4
   1e364:	bl	166d4 <g_type_check_instance_is_a@plt>
   1e368:	cmp	r0, #0
   1e36c:	beq	1e380 <g_strcmp0@plt+0x7748>
   1e370:	ldr	r3, [r4, #12]
   1e374:	mov	r0, #1
   1e378:	str	r5, [r3, #72]	; 0x48
   1e37c:	pop	{r4, r5, r6, pc}
   1e380:	ldr	r2, [pc, #16]	; 1e398 <g_strcmp0@plt+0x7760>
   1e384:	ldr	r1, [pc, #16]	; 1e39c <g_strcmp0@plt+0x7764>
   1e388:	ldr	r0, [pc, #16]	; 1e3a0 <g_strcmp0@plt+0x7768>
   1e38c:	bl	15bac <g_return_if_fail_warning@plt>
   1e390:	mov	r0, #0
   1e394:	pop	{r4, r5, r6, pc}
   1e398:	andeq	r7, r2, r8, asr sl
   1e39c:	andeq	r7, r2, r0, lsr r9
   1e3a0:	andeq	r6, r2, r0, ror #4
   1e3a4:	push	{r4, r5, r6, lr}
   1e3a8:	mov	r4, r0
   1e3ac:	mov	r5, r1
   1e3b0:	bl	1de68 <g_strcmp0@plt+0x7230>
   1e3b4:	cmp	r4, #0
   1e3b8:	beq	1e3f8 <g_strcmp0@plt+0x77c0>
   1e3bc:	ldr	r3, [r4]
   1e3c0:	cmp	r3, #0
   1e3c4:	beq	1e3d4 <g_strcmp0@plt+0x779c>
   1e3c8:	ldr	r3, [r3]
   1e3cc:	cmp	r3, r0
   1e3d0:	beq	1e3e8 <g_strcmp0@plt+0x77b0>
   1e3d4:	mov	r1, r0
   1e3d8:	mov	r0, r4
   1e3dc:	bl	166d4 <g_type_check_instance_is_a@plt>
   1e3e0:	cmp	r0, #0
   1e3e4:	beq	1e3f8 <g_strcmp0@plt+0x77c0>
   1e3e8:	ldr	r3, [r4, #12]
   1e3ec:	mov	r0, #1
   1e3f0:	str	r5, [r3, #76]	; 0x4c
   1e3f4:	pop	{r4, r5, r6, pc}
   1e3f8:	ldr	r2, [pc, #16]	; 1e410 <g_strcmp0@plt+0x77d8>
   1e3fc:	ldr	r1, [pc, #16]	; 1e414 <g_strcmp0@plt+0x77dc>
   1e400:	ldr	r0, [pc, #16]	; 1e418 <g_strcmp0@plt+0x77e0>
   1e404:	bl	15bac <g_return_if_fail_warning@plt>
   1e408:	mov	r0, #0
   1e40c:	pop	{r4, r5, r6, pc}
   1e410:	andeq	r7, r2, r8, asr sl
   1e414:	andeq	r7, r2, r8, asr #18
   1e418:	andeq	r6, r2, r0, ror #4
   1e41c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e420:	mov	r5, r0
   1e424:	sub	sp, sp, #12
   1e428:	mov	r4, r1
   1e42c:	bl	1de68 <g_strcmp0@plt+0x7230>
   1e430:	cmp	r5, #0
   1e434:	beq	1e650 <g_strcmp0@plt+0x7a18>
   1e438:	ldr	r3, [r5]
   1e43c:	cmp	r3, #0
   1e440:	beq	1e450 <g_strcmp0@plt+0x7818>
   1e444:	ldr	r3, [r3]
   1e448:	cmp	r3, r0
   1e44c:	beq	1e464 <g_strcmp0@plt+0x782c>
   1e450:	mov	r1, r0
   1e454:	mov	r0, r5
   1e458:	bl	166d4 <g_type_check_instance_is_a@plt>
   1e45c:	cmp	r0, #0
   1e460:	beq	1e650 <g_strcmp0@plt+0x7a18>
   1e464:	ldr	r3, [r5, #12]
   1e468:	ldr	r3, [r3, #56]	; 0x38
   1e46c:	cmp	r3, #3
   1e470:	beq	1e968 <g_strcmp0@plt+0x7d30>
   1e474:	mov	r3, r4
   1e478:	ldr	r2, [pc, #1432]	; 1ea18 <g_strcmp0@plt+0x7de0>
   1e47c:	mov	r1, #128	; 0x80
   1e480:	ldr	r0, [pc, #1428]	; 1ea1c <g_strcmp0@plt+0x7de4>
   1e484:	bl	15dec <g_log@plt>
   1e488:	ldr	r3, [r5, #12]
   1e48c:	mov	r2, #6
   1e490:	mov	r6, #0
   1e494:	str	r2, [r3]
   1e498:	str	r6, [r3, #64]	; 0x40
   1e49c:	ldr	r0, [r3, #80]	; 0x50
   1e4a0:	mov	r1, r6
   1e4a4:	bl	15ce4 <g_string_truncate@plt>
   1e4a8:	ldr	r3, [r5, #12]
   1e4ac:	mov	r1, r6
   1e4b0:	ldr	r0, [r3, #84]	; 0x54
   1e4b4:	bl	15ce4 <g_string_truncate@plt>
   1e4b8:	mov	r0, r4
   1e4bc:	mvn	r2, #0
   1e4c0:	ldr	r1, [pc, #1368]	; 1ea20 <g_strcmp0@plt+0x7de8>
   1e4c4:	bl	161c4 <g_strsplit@plt>
   1e4c8:	mov	r4, r0
   1e4cc:	str	r0, [sp, #4]
   1e4d0:	bl	16464 <g_strv_length@plt>
   1e4d4:	subs	fp, r0, #0
   1e4d8:	beq	1e598 <g_strcmp0@plt+0x7960>
   1e4dc:	ldr	sl, [pc, #1336]	; 1ea1c <g_strcmp0@plt+0x7de4>
   1e4e0:	sub	r8, r4, #4
   1e4e4:	ldr	r4, [r8, #4]!
   1e4e8:	mov	r1, #1024	; 0x400
   1e4ec:	mov	r0, r4
   1e4f0:	bl	1d548 <g_strcmp0@plt+0x6910>
   1e4f4:	cmp	r0, #0
   1e4f8:	beq	1e534 <g_strcmp0@plt+0x78fc>
   1e4fc:	ldrb	r3, [r4]
   1e500:	cmp	r3, #32
   1e504:	cmpne	r3, #9
   1e508:	bne	1e6a8 <g_strcmp0@plt+0x7a70>
   1e50c:	sub	r0, r0, #1
   1e510:	add	r0, r0, r4
   1e514:	mov	r3, r4
   1e518:	b	1e52c <g_strcmp0@plt+0x78f4>
   1e51c:	ldrb	r2, [r3, #1]!
   1e520:	cmp	r2, #32
   1e524:	cmpne	r2, #9
   1e528:	bne	1e6a8 <g_strcmp0@plt+0x7a70>
   1e52c:	cmp	r0, r3
   1e530:	bne	1e51c <g_strcmp0@plt+0x78e4>
   1e534:	mov	r3, r4
   1e538:	ldr	r2, [pc, #1252]	; 1ea24 <g_strcmp0@plt+0x7dec>
   1e53c:	mov	r1, #128	; 0x80
   1e540:	mov	r0, sl
   1e544:	bl	15dec <g_log@plt>
   1e548:	ldr	r3, [r5, #12]
   1e54c:	ldr	r2, [r3]
   1e550:	cmp	r2, #6
   1e554:	beq	1e578 <g_strcmp0@plt+0x7940>
   1e558:	mov	r0, r5
   1e55c:	bl	1d984 <g_strcmp0@plt+0x6d4c>
   1e560:	ldr	r3, [r5, #12]
   1e564:	ldr	r2, [r3]
   1e568:	cmp	r2, #2
   1e56c:	moveq	r2, #0
   1e570:	streq	r2, [r3]
   1e574:	beq	1e698 <g_strcmp0@plt+0x7a60>
   1e578:	ldr	r1, [r3, #64]	; 0x40
   1e57c:	ldr	r2, [r3, #60]	; 0x3c
   1e580:	cmp	r1, r2
   1e584:	bcc	1e84c <g_strcmp0@plt+0x7c14>
   1e588:	mov	r2, #0
   1e58c:	str	r2, [r3]
   1e590:	mov	r2, #6
   1e594:	str	r2, [r3]
   1e598:	ldr	r0, [sp, #4]
   1e59c:	bl	1644c <g_strfreev@plt>
   1e5a0:	ldr	r3, [r5, #12]
   1e5a4:	ldr	r2, [r3]
   1e5a8:	cmp	r2, #6
   1e5ac:	beq	1e5bc <g_strcmp0@plt+0x7984>
   1e5b0:	mov	r0, r5
   1e5b4:	bl	1d984 <g_strcmp0@plt+0x6d4c>
   1e5b8:	ldr	r3, [r5, #12]
   1e5bc:	ldr	r6, [pc, #1116]	; 1ea20 <g_strcmp0@plt+0x7de8>
   1e5c0:	b	1e5e0 <g_strcmp0@plt+0x79a8>
   1e5c4:	ldr	r3, [r5, #12]
   1e5c8:	ldr	r3, [r3, #84]	; 0x54
   1e5cc:	mov	r0, r3
   1e5d0:	ldr	r1, [r3, #4]
   1e5d4:	sub	r1, r1, #1
   1e5d8:	bl	15a80 <g_string_set_size@plt>
   1e5dc:	ldr	r3, [r5, #12]
   1e5e0:	ldr	r3, [r3, #84]	; 0x54
   1e5e4:	mov	r1, r6
   1e5e8:	ldr	r0, [r3]
   1e5ec:	bl	16a28 <g_str_has_suffix@plt>
   1e5f0:	cmp	r0, #0
   1e5f4:	bne	1e5c4 <g_strcmp0@plt+0x798c>
   1e5f8:	ldr	r3, [r5, #12]
   1e5fc:	mov	r4, r0
   1e600:	ldr	r3, [r3, #84]	; 0x54
   1e604:	ldr	r0, [r3]
   1e608:	bl	15fe4 <g_strdup@plt>
   1e60c:	ldr	r3, [r5, #12]
   1e610:	mov	r1, r4
   1e614:	mov	r6, r0
   1e618:	ldr	r0, [r3, #80]	; 0x50
   1e61c:	bl	15ce4 <g_string_truncate@plt>
   1e620:	ldr	r3, [r5, #12]
   1e624:	mov	r1, r4
   1e628:	ldr	r0, [r3, #84]	; 0x54
   1e62c:	bl	15ce4 <g_string_truncate@plt>
   1e630:	mov	r3, r6
   1e634:	ldr	r2, [pc, #1004]	; 1ea28 <g_strcmp0@plt+0x7df0>
   1e638:	mov	r1, #128	; 0x80
   1e63c:	ldr	r0, [pc, #984]	; 1ea1c <g_strcmp0@plt+0x7de4>
   1e640:	bl	15dec <g_log@plt>
   1e644:	mov	r0, r6
   1e648:	add	sp, sp, #12
   1e64c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e650:	ldr	r2, [pc, #980]	; 1ea2c <g_strcmp0@plt+0x7df4>
   1e654:	ldr	r1, [pc, #980]	; 1ea30 <g_strcmp0@plt+0x7df8>
   1e658:	ldr	r0, [pc, #956]	; 1ea1c <g_strcmp0@plt+0x7de4>
   1e65c:	bl	15bac <g_return_if_fail_warning@plt>
   1e660:	mov	r6, #0
   1e664:	mov	r0, r6
   1e668:	add	sp, sp, #12
   1e66c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e670:	mov	r3, r4
   1e674:	ldr	r2, [pc, #952]	; 1ea34 <g_strcmp0@plt+0x7dfc>
   1e678:	mov	r1, #128	; 0x80
   1e67c:	mov	r0, sl
   1e680:	bl	15dec <g_log@plt>
   1e684:	ldr	r3, [r5, #12]
   1e688:	ldr	r2, [r3]
   1e68c:	cmp	r2, #3
   1e690:	moveq	r2, #5
   1e694:	streq	r2, [r3]
   1e698:	add	r6, r6, #1
   1e69c:	cmp	fp, r6
   1e6a0:	bne	1e4e4 <g_strcmp0@plt+0x78ac>
   1e6a4:	b	1e598 <g_strcmp0@plt+0x7960>
   1e6a8:	ldr	r1, [pc, #904]	; 1ea38 <g_strcmp0@plt+0x7e00>
   1e6ac:	mov	r0, r4
   1e6b0:	bl	162b4 <g_str_has_prefix@plt>
   1e6b4:	cmp	r0, #0
   1e6b8:	bne	1e814 <g_strcmp0@plt+0x7bdc>
   1e6bc:	ldr	r1, [pc, #888]	; 1ea3c <g_strcmp0@plt+0x7e04>
   1e6c0:	mov	r0, r4
   1e6c4:	bl	162b4 <g_str_has_prefix@plt>
   1e6c8:	subs	r7, r0, #0
   1e6cc:	bne	1e670 <g_strcmp0@plt+0x7a38>
   1e6d0:	mov	r1, #1024	; 0x400
   1e6d4:	mov	r0, r4
   1e6d8:	bl	1d548 <g_strcmp0@plt+0x6910>
   1e6dc:	subs	r9, r0, #0
   1e6e0:	beq	1e7a4 <g_strcmp0@plt+0x7b6c>
   1e6e4:	mov	r0, r4
   1e6e8:	bl	15fe4 <g_strdup@plt>
   1e6ec:	mov	r2, #126	; 0x7e
   1e6f0:	ldr	r1, [pc, #840]	; 1ea40 <g_strcmp0@plt+0x7e08>
   1e6f4:	str	r0, [sp]
   1e6f8:	bl	164f4 <g_strcanon@plt>
   1e6fc:	ldr	r3, [sp]
   1e700:	ldrb	r2, [r3]
   1e704:	cmp	r2, #126	; 0x7e
   1e708:	beq	1e7a0 <g_strcmp0@plt+0x7b68>
   1e70c:	sub	r9, r9, #1
   1e710:	add	r9, r9, r3
   1e714:	mov	r1, r3
   1e718:	b	1e728 <g_strcmp0@plt+0x7af0>
   1e71c:	ldrb	r2, [r1, #1]!
   1e720:	cmp	r2, #126	; 0x7e
   1e724:	beq	1e7a0 <g_strcmp0@plt+0x7b68>
   1e728:	cmp	r2, #32
   1e72c:	addne	r7, r7, #1
   1e730:	cmp	r9, r1
   1e734:	bne	1e71c <g_strcmp0@plt+0x7ae4>
   1e738:	cmp	r7, #2
   1e73c:	mov	r0, r3
   1e740:	bls	1e7a4 <g_strcmp0@plt+0x7b6c>
   1e744:	bl	16518 <g_free@plt>
   1e748:	mov	r3, r4
   1e74c:	ldr	r2, [pc, #752]	; 1ea44 <g_strcmp0@plt+0x7e0c>
   1e750:	mov	r1, #128	; 0x80
   1e754:	mov	r0, sl
   1e758:	bl	15dec <g_log@plt>
   1e75c:	ldr	r3, [r5, #12]
   1e760:	ldr	r2, [r3]
   1e764:	cmp	r2, #6
   1e768:	beq	1e778 <g_strcmp0@plt+0x7b40>
   1e76c:	mov	r0, r5
   1e770:	bl	1d984 <g_strcmp0@plt+0x6d4c>
   1e774:	ldr	r3, [r5, #12]
   1e778:	ldr	r0, [r3, #64]	; 0x40
   1e77c:	ldr	r1, [r3, #60]	; 0x3c
   1e780:	mov	r2, #1
   1e784:	cmp	r0, r1
   1e788:	str	r2, [r3]
   1e78c:	bcs	1e590 <g_strcmp0@plt+0x7958>
   1e790:	ldr	r1, [r3, #52]	; 0x34
   1e794:	mov	r0, r5
   1e798:	bl	1d790 <g_strcmp0@plt+0x6b58>
   1e79c:	b	1e864 <g_strcmp0@plt+0x7c2c>
   1e7a0:	mov	r0, r3
   1e7a4:	bl	16518 <g_free@plt>
   1e7a8:	ldr	r1, [pc, #664]	; 1ea48 <g_strcmp0@plt+0x7e10>
   1e7ac:	mov	r0, r4
   1e7b0:	bl	162b4 <g_str_has_prefix@plt>
   1e7b4:	cmp	r0, #0
   1e7b8:	beq	1e874 <g_strcmp0@plt+0x7c3c>
   1e7bc:	mov	r3, r4
   1e7c0:	ldr	r2, [pc, #644]	; 1ea4c <g_strcmp0@plt+0x7e14>
   1e7c4:	mov	r1, #128	; 0x80
   1e7c8:	mov	r0, sl
   1e7cc:	bl	15dec <g_log@plt>
   1e7d0:	ldr	r3, [r5, #12]
   1e7d4:	ldr	r2, [r3]
   1e7d8:	cmp	r2, #6
   1e7dc:	beq	1e7ec <g_strcmp0@plt+0x7bb4>
   1e7e0:	mov	r0, r5
   1e7e4:	bl	1d984 <g_strcmp0@plt+0x6d4c>
   1e7e8:	ldr	r3, [r5, #12]
   1e7ec:	ldr	r0, [r3, #64]	; 0x40
   1e7f0:	ldr	r1, [r3, #60]	; 0x3c
   1e7f4:	mov	r2, #2
   1e7f8:	cmp	r0, r1
   1e7fc:	str	r2, [r3]
   1e800:	bcs	1e590 <g_strcmp0@plt+0x7958>
   1e804:	add	r1, r4, #2
   1e808:	mov	r0, r5
   1e80c:	bl	1d790 <g_strcmp0@plt+0x6b58>
   1e810:	b	1e864 <g_strcmp0@plt+0x7c2c>
   1e814:	mov	r3, r4
   1e818:	ldr	r2, [pc, #560]	; 1ea50 <g_strcmp0@plt+0x7e18>
   1e81c:	mov	r1, #128	; 0x80
   1e820:	mov	r0, sl
   1e824:	bl	15dec <g_log@plt>
   1e828:	ldr	r3, [r5, #12]
   1e82c:	add	r6, r6, #1
   1e830:	ldr	r2, [r3]
   1e834:	cmp	r2, #3
   1e838:	moveq	r2, #4
   1e83c:	streq	r2, [r3]
   1e840:	cmp	fp, r6
   1e844:	bne	1e4e4 <g_strcmp0@plt+0x78ac>
   1e848:	b	1e598 <g_strcmp0@plt+0x7960>
   1e84c:	ldr	r1, [pc, #460]	; 1ea20 <g_strcmp0@plt+0x7de8>
   1e850:	mov	r0, r5
   1e854:	bl	1d790 <g_strcmp0@plt+0x6b58>
   1e858:	ldr	r3, [r5, #12]
   1e85c:	mov	r2, #0
   1e860:	str	r2, [r3]
   1e864:	cmp	r0, #0
   1e868:	bne	1e698 <g_strcmp0@plt+0x7a60>
   1e86c:	ldr	r3, [r5, #12]
   1e870:	b	1e590 <g_strcmp0@plt+0x7958>
   1e874:	ldr	r1, [pc, #472]	; 1ea54 <g_strcmp0@plt+0x7e1c>
   1e878:	mov	r0, r4
   1e87c:	bl	162b4 <g_str_has_prefix@plt>
   1e880:	cmp	r0, #0
   1e884:	bne	1e7bc <g_strcmp0@plt+0x7b84>
   1e888:	ldr	r1, [pc, #456]	; 1ea58 <g_strcmp0@plt+0x7e20>
   1e88c:	mov	r0, r4
   1e890:	bl	162b4 <g_str_has_prefix@plt>
   1e894:	cmp	r0, #0
   1e898:	bne	1e7bc <g_strcmp0@plt+0x7b84>
   1e89c:	ldr	r1, [pc, #440]	; 1ea5c <g_strcmp0@plt+0x7e24>
   1e8a0:	mov	r0, r4
   1e8a4:	bl	162b4 <g_str_has_prefix@plt>
   1e8a8:	cmp	r0, #0
   1e8ac:	bne	1e7bc <g_strcmp0@plt+0x7b84>
   1e8b0:	ldr	r1, [pc, #424]	; 1ea60 <g_strcmp0@plt+0x7e28>
   1e8b4:	mov	r0, r4
   1e8b8:	bl	162b4 <g_str_has_prefix@plt>
   1e8bc:	cmp	r0, #0
   1e8c0:	bne	1e7bc <g_strcmp0@plt+0x7b84>
   1e8c4:	ldr	r1, [pc, #408]	; 1ea64 <g_strcmp0@plt+0x7e2c>
   1e8c8:	mov	r0, r4
   1e8cc:	bl	162b4 <g_str_has_prefix@plt>
   1e8d0:	cmp	r0, #0
   1e8d4:	bne	1e7bc <g_strcmp0@plt+0x7b84>
   1e8d8:	ldr	r1, [pc, #392]	; 1ea68 <g_strcmp0@plt+0x7e30>
   1e8dc:	mov	r0, r4
   1e8e0:	bl	162b4 <g_str_has_prefix@plt>
   1e8e4:	cmp	r0, #0
   1e8e8:	bne	1e988 <g_strcmp0@plt+0x7d50>
   1e8ec:	ldr	r1, [pc, #376]	; 1ea6c <g_strcmp0@plt+0x7e34>
   1e8f0:	mov	r0, r4
   1e8f4:	bl	162b4 <g_str_has_prefix@plt>
   1e8f8:	cmp	r0, #0
   1e8fc:	bne	1e9d0 <g_strcmp0@plt+0x7d98>
   1e900:	ldr	r2, [r5, #12]
   1e904:	ldr	r3, [r2]
   1e908:	cmp	r3, #6
   1e90c:	cmpne	r3, #0
   1e910:	bne	1e930 <g_strcmp0@plt+0x7cf8>
   1e914:	cmp	r3, #6
   1e918:	beq	1e928 <g_strcmp0@plt+0x7cf0>
   1e91c:	mov	r0, r5
   1e920:	bl	1d984 <g_strcmp0@plt+0x6d4c>
   1e924:	ldr	r2, [r5, #12]
   1e928:	mov	r3, #3
   1e92c:	str	r3, [r2]
   1e930:	mov	r3, r4
   1e934:	ldr	r2, [pc, #308]	; 1ea70 <g_strcmp0@plt+0x7e38>
   1e938:	mov	r1, #128	; 0x80
   1e93c:	mov	r0, sl
   1e940:	bl	15dec <g_log@plt>
   1e944:	ldr	r3, [r5, #12]
   1e948:	ldr	r1, [r3, #64]	; 0x40
   1e94c:	ldr	r2, [r3, #60]	; 0x3c
   1e950:	cmp	r1, r2
   1e954:	bcs	1e590 <g_strcmp0@plt+0x7958>
   1e958:	mov	r1, r4
   1e95c:	mov	r0, r5
   1e960:	bl	1d790 <g_strcmp0@plt+0x6b58>
   1e964:	b	1e864 <g_strcmp0@plt+0x7c2c>
   1e968:	ldr	r2, [pc, #260]	; 1ea74 <g_strcmp0@plt+0x7e3c>
   1e96c:	ldr	r1, [pc, #188]	; 1ea30 <g_strcmp0@plt+0x7df8>
   1e970:	ldr	r0, [pc, #164]	; 1ea1c <g_strcmp0@plt+0x7de4>
   1e974:	bl	15bac <g_return_if_fail_warning@plt>
   1e978:	mov	r6, #0
   1e97c:	mov	r0, r6
   1e980:	add	sp, sp, #12
   1e984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e988:	mov	r3, r4
   1e98c:	ldr	r2, [pc, #228]	; 1ea78 <g_strcmp0@plt+0x7e40>
   1e990:	mov	r1, #128	; 0x80
   1e994:	mov	r0, sl
   1e998:	bl	15dec <g_log@plt>
   1e99c:	ldr	r3, [r5, #12]
   1e9a0:	ldr	r2, [r3]
   1e9a4:	cmp	r2, #6
   1e9a8:	beq	1e9b8 <g_strcmp0@plt+0x7d80>
   1e9ac:	mov	r0, r5
   1e9b0:	bl	1d984 <g_strcmp0@plt+0x6d4c>
   1e9b4:	ldr	r3, [r5, #12]
   1e9b8:	mov	r2, #4
   1e9bc:	add	r1, r4, #2
   1e9c0:	str	r2, [r3]
   1e9c4:	mov	r0, r5
   1e9c8:	bl	1d7d4 <g_strcmp0@plt+0x6b9c>
   1e9cc:	b	1e864 <g_strcmp0@plt+0x7c2c>
   1e9d0:	mov	r3, r4
   1e9d4:	ldr	r2, [pc, #160]	; 1ea7c <g_strcmp0@plt+0x7e44>
   1e9d8:	mov	r1, #128	; 0x80
   1e9dc:	mov	r0, sl
   1e9e0:	bl	15dec <g_log@plt>
   1e9e4:	ldr	r3, [r5, #12]
   1e9e8:	ldr	r2, [r3]
   1e9ec:	cmp	r2, #6
   1e9f0:	beq	1ea00 <g_strcmp0@plt+0x7dc8>
   1e9f4:	mov	r0, r5
   1e9f8:	bl	1d984 <g_strcmp0@plt+0x6d4c>
   1e9fc:	ldr	r3, [r5, #12]
   1ea00:	mov	r2, #5
   1ea04:	add	r1, r4, #3
   1ea08:	str	r2, [r3]
   1ea0c:	mov	r0, r5
   1ea10:	bl	1d7d4 <g_strcmp0@plt+0x6b9c>
   1ea14:	b	1e864 <g_strcmp0@plt+0x7c2c>
   1ea18:			; <UNDEFINED> instruction: 0x00027bb4
   1ea1c:	andeq	r6, r2, r0, ror #4
   1ea20:	andeq	r7, r2, r0, lsr #25
   1ea24:	andeq	r7, r2, r0, asr #23
   1ea28:	andeq	r7, r2, r8, ror #24
   1ea2c:	andeq	r7, r2, r8, asr sl
   1ea30:	andeq	r7, r2, r4, ror #18
   1ea34:	andeq	r7, r2, r4, ror #23
   1ea38:	andeq	r7, r2, r4, ror ip
   1ea3c:	andeq	r7, r2, r0, ror #23
   1ea40:	strdeq	r7, [r2], -r8
   1ea44:	andeq	r7, r2, r0, lsl #24
   1ea48:	andeq	r7, r2, ip, lsl #24
   1ea4c:	andeq	r7, r2, r4, lsr #24
   1ea50:	andeq	r7, r2, ip, asr #23
   1ea54:	andeq	r7, r2, ip, asr fp
   1ea58:	andeq	r7, r2, r0, lsl ip
   1ea5c:	andeq	r7, r2, r4, lsl ip
   1ea60:	andeq	r7, r2, r8, lsl ip
   1ea64:	andeq	r7, r2, ip, lsl ip
   1ea68:	andeq	r7, r2, r0, lsr #24
   1ea6c:	andeq	r7, r2, r4, asr #24
   1ea70:	andeq	r7, r2, r8, asr ip
   1ea74:	andeq	r7, r2, r0, lsl #23
   1ea78:	andeq	r7, r2, r4, lsr ip
   1ea7c:	andeq	r7, r2, r8, asr #24
   1ea80:	push	{r4, lr}
   1ea84:	bl	1de68 <g_strcmp0@plt+0x7230>
   1ea88:	mov	r1, #0
   1ea8c:	bl	15a8c <g_object_new@plt>
   1ea90:	mov	r4, r0
   1ea94:	bl	1de68 <g_strcmp0@plt+0x7230>
   1ea98:	mov	r1, r0
   1ea9c:	mov	r0, r4
   1eaa0:	pop	{r4, lr}
   1eaa4:	b	15d68 <g_type_check_instance_cast@plt>
   1eaa8:	bx	lr
   1eaac:	push	{r4, r5, r6, r7, r8, lr}
   1eab0:	sub	sp, sp, #272	; 0x110
   1eab4:	ldr	r7, [pc, #312]	; 1ebf4 <g_strcmp0@plt+0x7fbc>
   1eab8:	mov	r4, r0
   1eabc:	add	r0, sp, #8
   1eac0:	ldr	r3, [r7]
   1eac4:	mov	r6, r1
   1eac8:	mov	r8, r2
   1eacc:	str	r3, [sp, #268]	; 0x10c
   1ead0:	bl	16a58 <time@plt>
   1ead4:	add	r0, sp, #8
   1ead8:	bl	162cc <localtime@plt>
   1eadc:	ldr	r2, [pc, #276]	; 1ebf8 <g_strcmp0@plt+0x7fc0>
   1eae0:	mov	r1, #254	; 0xfe
   1eae4:	mov	r3, r0
   1eae8:	add	r0, sp, #12
   1eaec:	bl	16008 <strftime@plt>
   1eaf0:	ldr	r3, [pc, #260]	; 1ebfc <g_strcmp0@plt+0x7fc4>
   1eaf4:	ldr	r3, [r3]
   1eaf8:	cmp	r3, #0
   1eafc:	bne	1eb34 <g_strcmp0@plt+0x7efc>
   1eb00:	cmp	r6, #128	; 0x80
   1eb04:	mov	r3, r8
   1eb08:	mov	r2, r4
   1eb0c:	add	r1, sp, #12
   1eb10:	ldreq	r0, [pc, #232]	; 1ec00 <g_strcmp0@plt+0x7fc8>
   1eb14:	ldrne	r0, [pc, #232]	; 1ec04 <g_strcmp0@plt+0x7fcc>
   1eb18:	bl	166e0 <g_print@plt>
   1eb1c:	ldr	r2, [sp, #268]	; 0x10c
   1eb20:	ldr	r3, [r7]
   1eb24:	cmp	r2, r3
   1eb28:	bne	1ebf0 <g_strcmp0@plt+0x7fb8>
   1eb2c:	add	sp, sp, #272	; 0x110
   1eb30:	pop	{r4, r5, r6, r7, r8, pc}
   1eb34:	add	r3, sp, #12
   1eb38:	mov	r2, #32
   1eb3c:	mov	r1, #27
   1eb40:	ldr	r0, [pc, #192]	; 1ec08 <g_strcmp0@plt+0x7fd0>
   1eb44:	bl	166e0 <g_print@plt>
   1eb48:	ldr	r1, [pc, #188]	; 1ec0c <g_strcmp0@plt+0x7fd4>
   1eb4c:	mov	r0, r4
   1eb50:	bl	16c38 <g_strcmp0@plt>
   1eb54:	cmp	r0, #0
   1eb58:	movne	r3, #0
   1eb5c:	movne	r1, #27
   1eb60:	moveq	r1, #27
   1eb64:	streq	r0, [sp, #4]
   1eb68:	moveq	r3, r4
   1eb6c:	stmne	sp, {r1, r3}
   1eb70:	streq	r1, [sp]
   1eb74:	movne	r3, r4
   1eb78:	moveq	r2, #34	; 0x22
   1eb7c:	movne	r2, #36	; 0x24
   1eb80:	ldr	r0, [pc, #136]	; 1ec10 <g_strcmp0@plt+0x7fd8>
   1eb84:	bl	166e0 <g_print@plt>
   1eb88:	mov	r0, r4
   1eb8c:	bl	16884 <strlen@plt>
   1eb90:	cmp	r0, #19
   1eb94:	mov	r4, r0
   1eb98:	bhi	1ebb4 <g_strcmp0@plt+0x7f7c>
   1eb9c:	ldr	r5, [pc, #112]	; 1ec14 <g_strcmp0@plt+0x7fdc>
   1eba0:	add	r4, r4, #1
   1eba4:	mov	r0, r5
   1eba8:	bl	166e0 <g_print@plt>
   1ebac:	cmp	r4, #20
   1ebb0:	bne	1eba0 <g_strcmp0@plt+0x7f68>
   1ebb4:	sub	r6, r6, #4
   1ebb8:	bics	r6, r6, #4
   1ebbc:	movne	r2, #0
   1ebc0:	movne	r1, #27
   1ebc4:	moveq	r1, #27
   1ebc8:	stmne	sp, {r1, r2}
   1ebcc:	streq	r6, [sp, #4]
   1ebd0:	moveq	r3, r8
   1ebd4:	streq	r1, [sp]
   1ebd8:	moveq	r2, #31
   1ebdc:	movne	r3, r8
   1ebe0:	movne	r2, #34	; 0x22
   1ebe4:	ldr	r0, [pc, #44]	; 1ec18 <g_strcmp0@plt+0x7fe0>
   1ebe8:	bl	166e0 <g_print@plt>
   1ebec:	b	1eb1c <g_strcmp0@plt+0x7ee4>
   1ebf0:	bl	164ac <__stack_chk_fail@plt>
   1ebf4:	andeq	ip, r3, r0, asr lr
   1ebf8:	andeq	r7, r2, r8, ror ip
   1ebfc:	andeq	sp, r3, r8, lsr #13
   1ec00:	andeq	r7, r2, r4, lsl #25
   1ec04:	muleq	r2, r0, ip
   1ec08:	andeq	r7, r2, r4, lsr #25
   1ec0c:	andeq	r6, r2, r0, ror #4
   1ec10:			; <UNDEFINED> instruction: 0x00027cb0
   1ec14:			; <UNDEFINED> instruction: 0x000279b4
   1ec18:	andeq	r7, r2, r0, asr #25
   1ec1c:	push	{r4, r5, lr}
   1ec20:	sub	sp, sp, #68	; 0x44
   1ec24:	ldr	r4, [pc, #104]	; 1ec94 <g_strcmp0@plt+0x805c>
   1ec28:	mov	r5, r0
   1ec2c:	mov	r2, #52	; 0x34
   1ec30:	ldr	r3, [r4]
   1ec34:	mov	r1, #0
   1ec38:	add	r0, sp, #8
   1ec3c:	str	r3, [sp, #60]	; 0x3c
   1ec40:	bl	1602c <memset@plt>
   1ec44:	ldr	r2, [pc, #76]	; 1ec98 <g_strcmp0@plt+0x8060>
   1ec48:	ldr	r1, [pc, #76]	; 1ec9c <g_strcmp0@plt+0x8064>
   1ec4c:	ldr	ip, [pc, #76]	; 1eca0 <g_strcmp0@plt+0x8068>
   1ec50:	mov	r3, #118	; 0x76
   1ec54:	str	r2, [sp, #4]
   1ec58:	str	r1, [sp, #20]
   1ec5c:	mov	r2, #0
   1ec60:	mov	r0, r5
   1ec64:	add	r1, sp, #4
   1ec68:	strb	r3, [sp, #8]
   1ec6c:	str	ip, [sp, #24]
   1ec70:	bl	16788 <g_option_context_add_main_entries@plt>
   1ec74:	ldr	r2, [sp, #60]	; 0x3c
   1ec78:	ldr	r3, [r4]
   1ec7c:	cmp	r2, r3
   1ec80:	bne	1ec90 <g_strcmp0@plt+0x8058>
   1ec84:	mov	r0, #1
   1ec88:	add	sp, sp, #68	; 0x44
   1ec8c:	pop	{r4, r5, pc}
   1ec90:	bl	164ac <__stack_chk_fail@plt>
   1ec94:	andeq	ip, r3, r0, asr lr
   1ec98:	ldrdeq	r7, [r2], -r0
   1ec9c:	andeq	sp, r3, ip, lsr #13
   1eca0:	ldrdeq	r7, [r2], -r8
   1eca4:	ldr	r3, [pc, #60]	; 1ece8 <g_strcmp0@plt+0x80b0>
   1eca8:	ldr	r3, [r3, #4]
   1ecac:	cmp	r3, #0
   1ecb0:	beq	1ecdc <g_strcmp0@plt+0x80a4>
   1ecb4:	push	{r4, lr}
   1ecb8:	mov	r1, #12
   1ecbc:	mov	r4, r0
   1ecc0:	bl	168e4 <g_log_set_fatal_mask@plt>
   1ecc4:	mov	r0, r4
   1ecc8:	mov	r3, #0
   1eccc:	ldr	r2, [pc, #24]	; 1ecec <g_strcmp0@plt+0x80b4>
   1ecd0:	mov	r1, #156	; 0x9c
   1ecd4:	pop	{r4, lr}
   1ecd8:	b	15d08 <g_log_set_handler@plt>
   1ecdc:	ldr	r2, [pc, #12]	; 1ecf0 <g_strcmp0@plt+0x80b8>
   1ece0:	mov	r1, #144	; 0x90
   1ece4:	b	15d08 <g_log_set_handler@plt>
   1ece8:	andeq	sp, r3, r8, lsr #13
   1ecec:	andeq	lr, r1, ip, lsr #21
   1ecf0:	andeq	lr, r1, r8, lsr #21
   1ecf4:	push	{lr}		; (str lr, [sp, #-4]!)
   1ecf8:	sub	sp, sp, #12
   1ecfc:	ldr	r0, [pc, #88]	; 1ed5c <g_strcmp0@plt+0x8124>
   1ed00:	bl	1eca4 <g_strcmp0@plt+0x806c>
   1ed04:	ldr	r3, [pc, #84]	; 1ed60 <g_strcmp0@plt+0x8128>
   1ed08:	ldr	r0, [r3]
   1ed0c:	bl	16494 <fileno@plt>
   1ed10:	bl	164e8 <isatty@plt>
   1ed14:	ldr	ip, [pc, #72]	; 1ed64 <g_strcmp0@plt+0x812c>
   1ed18:	ldr	r1, [pc, #72]	; 1ed68 <g_strcmp0@plt+0x8130>
   1ed1c:	ldr	r3, [pc, #72]	; 1ed6c <g_strcmp0@plt+0x8134>
   1ed20:	ldr	lr, [ip, #4]
   1ed24:	ldr	r2, [pc, #68]	; 1ed70 <g_strcmp0@plt+0x8138>
   1ed28:	cmp	lr, #0
   1ed2c:	moveq	r3, r1
   1ed30:	mov	r1, #128	; 0x80
   1ed34:	sub	lr, r0, #1
   1ed38:	clz	lr, lr
   1ed3c:	lsr	lr, lr, #5
   1ed40:	str	lr, [sp]
   1ed44:	ldr	r0, [pc, #16]	; 1ed5c <g_strcmp0@plt+0x8124>
   1ed48:	str	lr, [ip]
   1ed4c:	bl	15dec <g_log@plt>
   1ed50:	mov	r0, #1
   1ed54:	add	sp, sp, #12
   1ed58:	pop	{pc}		; (ldr pc, [sp], #4)
   1ed5c:	andeq	r6, r2, r0, ror #4
   1ed60:	andeq	sp, r3, r8, lsl #12
   1ed64:	andeq	sp, r3, r8, lsr #13
   1ed68:	andeq	r7, r2, ip, lsl #26
   1ed6c:	andeq	r7, r2, r4, lsl #26
   1ed70:	andeq	r7, r2, r8, lsl sp
   1ed74:	push	{r4, lr}
   1ed78:	mov	r2, #5
   1ed7c:	sub	sp, sp, #8
   1ed80:	ldr	r1, [pc, #76]	; 1edd4 <g_strcmp0@plt+0x819c>
   1ed84:	mov	r0, #0
   1ed88:	bl	16530 <dcgettext@plt>
   1ed8c:	mov	r2, #5
   1ed90:	ldr	r1, [pc, #64]	; 1edd8 <g_strcmp0@plt+0x81a0>
   1ed94:	mov	r4, r0
   1ed98:	mov	r0, #0
   1ed9c:	bl	16530 <dcgettext@plt>
   1eda0:	mov	r3, #0
   1eda4:	mov	r1, r4
   1eda8:	str	r3, [sp]
   1edac:	mov	r2, r0
   1edb0:	ldr	r0, [pc, #36]	; 1eddc <g_strcmp0@plt+0x81a4>
   1edb4:	bl	15dc8 <g_option_group_new@plt>
   1edb8:	ldr	r2, [pc, #32]	; 1ede0 <g_strcmp0@plt+0x81a8>
   1edbc:	ldr	r1, [pc, #32]	; 1ede4 <g_strcmp0@plt+0x81ac>
   1edc0:	mov	r4, r0
   1edc4:	bl	15fa8 <g_option_group_set_parse_hooks@plt>
   1edc8:	mov	r0, r4
   1edcc:	add	sp, sp, #8
   1edd0:	pop	{r4, pc}
   1edd4:	andeq	r7, r2, r0, asr #26
   1edd8:	andeq	r7, r2, r4, asr sp
   1eddc:	andeq	r7, r2, ip, ror #26
   1ede0:	strdeq	lr, [r1], -r4
   1ede4:	andeq	lr, r1, ip, lsl ip
   1ede8:	cmp	r0, #3
   1edec:	ldrls	pc, [pc, r0, lsl #2]
   1edf0:	b	1ee44 <g_strcmp0@plt+0x820c>
   1edf4:	andeq	lr, r1, r4, lsr lr
   1edf8:	andeq	lr, r1, r4, lsr #28
   1edfc:	andeq	lr, r1, r4, lsl lr
   1ee00:	andeq	lr, r1, r4, lsl #28
   1ee04:	mov	r2, #5
   1ee08:	ldr	r1, [pc, #80]	; 1ee60 <g_strcmp0@plt+0x8228>
   1ee0c:	mov	r0, #0
   1ee10:	b	16530 <dcgettext@plt>
   1ee14:	mov	r2, #5
   1ee18:	ldr	r1, [pc, #68]	; 1ee64 <g_strcmp0@plt+0x822c>
   1ee1c:	mov	r0, #0
   1ee20:	b	16530 <dcgettext@plt>
   1ee24:	mov	r2, #5
   1ee28:	ldr	r1, [pc, #56]	; 1ee68 <g_strcmp0@plt+0x8230>
   1ee2c:	mov	r0, #0
   1ee30:	b	16530 <dcgettext@plt>
   1ee34:	mov	r2, #5
   1ee38:	ldr	r1, [pc, #44]	; 1ee6c <g_strcmp0@plt+0x8234>
   1ee3c:	mov	r0, #0
   1ee40:	b	16530 <dcgettext@plt>
   1ee44:	push	{r4, lr}
   1ee48:	mov	r1, #16
   1ee4c:	ldr	r2, [pc, #28]	; 1ee70 <g_strcmp0@plt+0x8238>
   1ee50:	ldr	r0, [pc, #28]	; 1ee74 <g_strcmp0@plt+0x823c>
   1ee54:	bl	15dec <g_log@plt>
   1ee58:	mov	r0, #0
   1ee5c:	pop	{r4, pc}
   1ee60:	andeq	r8, r2, ip, asr #6
   1ee64:	andeq	r8, r2, r8, asr #6
   1ee68:	andeq	r8, r2, r4, asr #6
   1ee6c:	andeq	r8, r2, r4, asr r3
   1ee70:	andeq	r8, r2, ip, asr r3
   1ee74:	andeq	r6, r2, r0, ror #4
   1ee78:	cmp	r0, #67	; 0x43
   1ee7c:	ldrls	pc, [pc, r0, lsl #2]
   1ee80:	b	1f3d4 <g_strcmp0@plt+0x879c>
   1ee84:	andeq	pc, r1, r4, asr #7
   1ee88:			; <UNDEFINED> instruction: 0x0001f3b4
   1ee8c:	andeq	pc, r1, r4, lsr #7
   1ee90:	muleq	r1, r4, r3
   1ee94:	andeq	pc, r1, r4, lsl #7
   1ee98:	andeq	pc, r1, r4, ror r3	; <UNPREDICTABLE>
   1ee9c:	andeq	pc, r1, r4, ror #6
   1eea0:	andeq	pc, r1, r4, asr r3	; <UNPREDICTABLE>
   1eea4:	andeq	pc, r1, r4, asr #6
   1eea8:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1eeac:	andeq	pc, r1, r4, lsr #6
   1eeb0:	andeq	pc, r1, r4, lsl r3	; <UNPREDICTABLE>
   1eeb4:	andeq	pc, r1, r4, lsl #6
   1eeb8:	strdeq	pc, [r1], -r4
   1eebc:	andeq	pc, r1, r4, ror #5
   1eec0:	ldrdeq	pc, [r1], -r4
   1eec4:	andeq	pc, r1, r4, asr #5
   1eec8:			; <UNDEFINED> instruction: 0x0001f2b4
   1eecc:	andeq	pc, r1, r4, lsr #5
   1eed0:	muleq	r1, r4, r2
   1eed4:	andeq	pc, r1, r4, lsl #5
   1eed8:	andeq	pc, r1, r4, ror r2	; <UNPREDICTABLE>
   1eedc:	andeq	pc, r1, r4, ror #4
   1eee0:	andeq	pc, r1, r4, asr r2	; <UNPREDICTABLE>
   1eee4:	andeq	pc, r1, r4, asr #4
   1eee8:	andeq	pc, r1, r4, lsr r2	; <UNPREDICTABLE>
   1eeec:	andeq	pc, r1, r4, lsr #4
   1eef0:	andeq	pc, r1, r4, lsl r2	; <UNPREDICTABLE>
   1eef4:	andeq	pc, r1, r4, lsl #4
   1eef8:	strdeq	pc, [r1], -r4
   1eefc:	andeq	pc, r1, r4, ror #3
   1ef00:	ldrdeq	pc, [r1], -r4
   1ef04:	andeq	pc, r1, r4, asr #3
   1ef08:			; <UNDEFINED> instruction: 0x0001f1b4
   1ef0c:	andeq	pc, r1, r4, lsr #3
   1ef10:	muleq	r1, r4, r1
   1ef14:	andeq	pc, r1, r4, lsl #3
   1ef18:	andeq	pc, r1, r4, ror r1	; <UNPREDICTABLE>
   1ef1c:	andeq	pc, r1, r4, ror #2
   1ef20:	andeq	pc, r1, r4, asr r1	; <UNPREDICTABLE>
   1ef24:	andeq	pc, r1, r4, asr #2
   1ef28:	andeq	pc, r1, r4, lsr r1	; <UNPREDICTABLE>
   1ef2c:	andeq	pc, r1, r4, lsr #2
   1ef30:	andeq	pc, r1, r4, lsl r1	; <UNPREDICTABLE>
   1ef34:	andeq	pc, r1, r4, lsl #2
   1ef38:	strdeq	pc, [r1], -r4
   1ef3c:	andeq	pc, r1, r4, ror #1
   1ef40:	ldrdeq	pc, [r1], -r4
   1ef44:	andeq	pc, r1, r4, asr #1
   1ef48:	strheq	pc, [r1], -r4	; <UNPREDICTABLE>
   1ef4c:	andeq	pc, r1, r4, lsr #1
   1ef50:	muleq	r1, r4, r0
   1ef54:	andeq	pc, r1, r4, lsl #1
   1ef58:	andeq	pc, r1, r4, ror r0	; <UNPREDICTABLE>
   1ef5c:	andeq	pc, r1, r4, rrx
   1ef60:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1ef64:	andeq	pc, r1, r4, asr #32
   1ef68:	andeq	pc, r1, r4, lsr r0	; <UNPREDICTABLE>
   1ef6c:	andeq	pc, r1, r4, lsr #32
   1ef70:	andeq	pc, r1, r4, lsl r0	; <UNPREDICTABLE>
   1ef74:	andeq	pc, r1, r4
   1ef78:	strdeq	lr, [r1], -r4
   1ef7c:	andeq	lr, r1, r4, ror #31
   1ef80:	ldrdeq	lr, [r1], -r4
   1ef84:	andeq	lr, r1, r4, asr #31
   1ef88:			; <UNDEFINED> instruction: 0x0001efb4
   1ef8c:	andeq	lr, r1, r4, lsr #31
   1ef90:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ef94:	mov	r2, #5
   1ef98:	ldr	r1, [pc, #1104]	; 1f3f0 <g_strcmp0@plt+0x87b8>
   1ef9c:	mov	r0, #0
   1efa0:	b	16530 <dcgettext@plt>
   1efa4:	mov	r2, #5
   1efa8:	ldr	r1, [pc, #1092]	; 1f3f4 <g_strcmp0@plt+0x87bc>
   1efac:	mov	r0, #0
   1efb0:	b	16530 <dcgettext@plt>
   1efb4:	mov	r2, #5
   1efb8:	ldr	r1, [pc, #1080]	; 1f3f8 <g_strcmp0@plt+0x87c0>
   1efbc:	mov	r0, #0
   1efc0:	b	16530 <dcgettext@plt>
   1efc4:	mov	r2, #5
   1efc8:	ldr	r1, [pc, #1068]	; 1f3fc <g_strcmp0@plt+0x87c4>
   1efcc:	mov	r0, #0
   1efd0:	b	16530 <dcgettext@plt>
   1efd4:	mov	r2, #5
   1efd8:	ldr	r1, [pc, #1056]	; 1f400 <g_strcmp0@plt+0x87c8>
   1efdc:	mov	r0, #0
   1efe0:	b	16530 <dcgettext@plt>
   1efe4:	mov	r2, #5
   1efe8:	ldr	r1, [pc, #1044]	; 1f404 <g_strcmp0@plt+0x87cc>
   1efec:	mov	r0, #0
   1eff0:	b	16530 <dcgettext@plt>
   1eff4:	mov	r2, #5
   1eff8:	ldr	r1, [pc, #1032]	; 1f408 <g_strcmp0@plt+0x87d0>
   1effc:	mov	r0, #0
   1f000:	b	16530 <dcgettext@plt>
   1f004:	mov	r2, #5
   1f008:	ldr	r1, [pc, #1020]	; 1f40c <g_strcmp0@plt+0x87d4>
   1f00c:	mov	r0, #0
   1f010:	b	16530 <dcgettext@plt>
   1f014:	mov	r2, #5
   1f018:	ldr	r1, [pc, #1008]	; 1f410 <g_strcmp0@plt+0x87d8>
   1f01c:	mov	r0, #0
   1f020:	b	16530 <dcgettext@plt>
   1f024:	mov	r2, #5
   1f028:	ldr	r1, [pc, #996]	; 1f414 <g_strcmp0@plt+0x87dc>
   1f02c:	mov	r0, #0
   1f030:	b	16530 <dcgettext@plt>
   1f034:	mov	r2, #5
   1f038:	ldr	r1, [pc, #984]	; 1f418 <g_strcmp0@plt+0x87e0>
   1f03c:	mov	r0, #0
   1f040:	b	16530 <dcgettext@plt>
   1f044:	mov	r2, #5
   1f048:	ldr	r1, [pc, #972]	; 1f41c <g_strcmp0@plt+0x87e4>
   1f04c:	mov	r0, #0
   1f050:	b	16530 <dcgettext@plt>
   1f054:	mov	r2, #5
   1f058:	ldr	r1, [pc, #960]	; 1f420 <g_strcmp0@plt+0x87e8>
   1f05c:	mov	r0, #0
   1f060:	b	16530 <dcgettext@plt>
   1f064:	mov	r2, #5
   1f068:	ldr	r1, [pc, #948]	; 1f424 <g_strcmp0@plt+0x87ec>
   1f06c:	mov	r0, #0
   1f070:	b	16530 <dcgettext@plt>
   1f074:	mov	r2, #5
   1f078:	ldr	r1, [pc, #936]	; 1f428 <g_strcmp0@plt+0x87f0>
   1f07c:	mov	r0, #0
   1f080:	b	16530 <dcgettext@plt>
   1f084:	mov	r2, #5
   1f088:	ldr	r1, [pc, #924]	; 1f42c <g_strcmp0@plt+0x87f4>
   1f08c:	mov	r0, #0
   1f090:	b	16530 <dcgettext@plt>
   1f094:	mov	r2, #5
   1f098:	ldr	r1, [pc, #912]	; 1f430 <g_strcmp0@plt+0x87f8>
   1f09c:	mov	r0, #0
   1f0a0:	b	16530 <dcgettext@plt>
   1f0a4:	mov	r2, #5
   1f0a8:	ldr	r1, [pc, #900]	; 1f434 <g_strcmp0@plt+0x87fc>
   1f0ac:	mov	r0, #0
   1f0b0:	b	16530 <dcgettext@plt>
   1f0b4:	mov	r2, #5
   1f0b8:	ldr	r1, [pc, #888]	; 1f438 <g_strcmp0@plt+0x8800>
   1f0bc:	mov	r0, #0
   1f0c0:	b	16530 <dcgettext@plt>
   1f0c4:	mov	r2, #5
   1f0c8:	ldr	r1, [pc, #876]	; 1f43c <g_strcmp0@plt+0x8804>
   1f0cc:	mov	r0, #0
   1f0d0:	b	16530 <dcgettext@plt>
   1f0d4:	mov	r2, #5
   1f0d8:	ldr	r1, [pc, #864]	; 1f440 <g_strcmp0@plt+0x8808>
   1f0dc:	mov	r0, #0
   1f0e0:	b	16530 <dcgettext@plt>
   1f0e4:	mov	r2, #5
   1f0e8:	ldr	r1, [pc, #852]	; 1f444 <g_strcmp0@plt+0x880c>
   1f0ec:	mov	r0, #0
   1f0f0:	b	16530 <dcgettext@plt>
   1f0f4:	mov	r2, #5
   1f0f8:	ldr	r1, [pc, #840]	; 1f448 <g_strcmp0@plt+0x8810>
   1f0fc:	mov	r0, #0
   1f100:	b	16530 <dcgettext@plt>
   1f104:	mov	r2, #5
   1f108:	ldr	r1, [pc, #828]	; 1f44c <g_strcmp0@plt+0x8814>
   1f10c:	mov	r0, #0
   1f110:	b	16530 <dcgettext@plt>
   1f114:	mov	r2, #5
   1f118:	ldr	r1, [pc, #816]	; 1f450 <g_strcmp0@plt+0x8818>
   1f11c:	mov	r0, #0
   1f120:	b	16530 <dcgettext@plt>
   1f124:	mov	r2, #5
   1f128:	ldr	r1, [pc, #804]	; 1f454 <g_strcmp0@plt+0x881c>
   1f12c:	mov	r0, #0
   1f130:	b	16530 <dcgettext@plt>
   1f134:	mov	r2, #5
   1f138:	ldr	r1, [pc, #792]	; 1f458 <g_strcmp0@plt+0x8820>
   1f13c:	mov	r0, #0
   1f140:	b	16530 <dcgettext@plt>
   1f144:	mov	r2, #5
   1f148:	ldr	r1, [pc, #780]	; 1f45c <g_strcmp0@plt+0x8824>
   1f14c:	mov	r0, #0
   1f150:	b	16530 <dcgettext@plt>
   1f154:	mov	r2, #5
   1f158:	ldr	r1, [pc, #768]	; 1f460 <g_strcmp0@plt+0x8828>
   1f15c:	mov	r0, #0
   1f160:	b	16530 <dcgettext@plt>
   1f164:	mov	r2, #5
   1f168:	ldr	r1, [pc, #756]	; 1f464 <g_strcmp0@plt+0x882c>
   1f16c:	mov	r0, #0
   1f170:	b	16530 <dcgettext@plt>
   1f174:	mov	r2, #5
   1f178:	ldr	r1, [pc, #744]	; 1f468 <g_strcmp0@plt+0x8830>
   1f17c:	mov	r0, #0
   1f180:	b	16530 <dcgettext@plt>
   1f184:	mov	r2, #5
   1f188:	ldr	r1, [pc, #732]	; 1f46c <g_strcmp0@plt+0x8834>
   1f18c:	mov	r0, #0
   1f190:	b	16530 <dcgettext@plt>
   1f194:	mov	r2, #5
   1f198:	ldr	r1, [pc, #720]	; 1f470 <g_strcmp0@plt+0x8838>
   1f19c:	mov	r0, #0
   1f1a0:	b	16530 <dcgettext@plt>
   1f1a4:	mov	r2, #5
   1f1a8:	ldr	r1, [pc, #708]	; 1f474 <g_strcmp0@plt+0x883c>
   1f1ac:	mov	r0, #0
   1f1b0:	b	16530 <dcgettext@plt>
   1f1b4:	mov	r2, #5
   1f1b8:	ldr	r1, [pc, #696]	; 1f478 <g_strcmp0@plt+0x8840>
   1f1bc:	mov	r0, #0
   1f1c0:	b	16530 <dcgettext@plt>
   1f1c4:	mov	r2, #5
   1f1c8:	ldr	r1, [pc, #684]	; 1f47c <g_strcmp0@plt+0x8844>
   1f1cc:	mov	r0, #0
   1f1d0:	b	16530 <dcgettext@plt>
   1f1d4:	mov	r2, #5
   1f1d8:	ldr	r1, [pc, #672]	; 1f480 <g_strcmp0@plt+0x8848>
   1f1dc:	mov	r0, #0
   1f1e0:	b	16530 <dcgettext@plt>
   1f1e4:	mov	r2, #5
   1f1e8:	ldr	r1, [pc, #660]	; 1f484 <g_strcmp0@plt+0x884c>
   1f1ec:	mov	r0, #0
   1f1f0:	b	16530 <dcgettext@plt>
   1f1f4:	mov	r2, #5
   1f1f8:	ldr	r1, [pc, #648]	; 1f488 <g_strcmp0@plt+0x8850>
   1f1fc:	mov	r0, #0
   1f200:	b	16530 <dcgettext@plt>
   1f204:	mov	r2, #5
   1f208:	ldr	r1, [pc, #636]	; 1f48c <g_strcmp0@plt+0x8854>
   1f20c:	mov	r0, #0
   1f210:	b	16530 <dcgettext@plt>
   1f214:	mov	r2, #5
   1f218:	ldr	r1, [pc, #624]	; 1f490 <g_strcmp0@plt+0x8858>
   1f21c:	mov	r0, #0
   1f220:	b	16530 <dcgettext@plt>
   1f224:	mov	r2, #5
   1f228:	ldr	r1, [pc, #612]	; 1f494 <g_strcmp0@plt+0x885c>
   1f22c:	mov	r0, #0
   1f230:	b	16530 <dcgettext@plt>
   1f234:	mov	r2, #5
   1f238:	ldr	r1, [pc, #600]	; 1f498 <g_strcmp0@plt+0x8860>
   1f23c:	mov	r0, #0
   1f240:	b	16530 <dcgettext@plt>
   1f244:	mov	r2, #5
   1f248:	ldr	r1, [pc, #588]	; 1f49c <g_strcmp0@plt+0x8864>
   1f24c:	mov	r0, #0
   1f250:	b	16530 <dcgettext@plt>
   1f254:	mov	r2, #5
   1f258:	ldr	r1, [pc, #576]	; 1f4a0 <g_strcmp0@plt+0x8868>
   1f25c:	mov	r0, #0
   1f260:	b	16530 <dcgettext@plt>
   1f264:	mov	r2, #5
   1f268:	ldr	r1, [pc, #564]	; 1f4a4 <g_strcmp0@plt+0x886c>
   1f26c:	mov	r0, #0
   1f270:	b	16530 <dcgettext@plt>
   1f274:	mov	r2, #5
   1f278:	ldr	r1, [pc, #552]	; 1f4a8 <g_strcmp0@plt+0x8870>
   1f27c:	mov	r0, #0
   1f280:	b	16530 <dcgettext@plt>
   1f284:	mov	r2, #5
   1f288:	ldr	r1, [pc, #540]	; 1f4ac <g_strcmp0@plt+0x8874>
   1f28c:	mov	r0, #0
   1f290:	b	16530 <dcgettext@plt>
   1f294:	mov	r2, #5
   1f298:	ldr	r1, [pc, #528]	; 1f4b0 <g_strcmp0@plt+0x8878>
   1f29c:	mov	r0, #0
   1f2a0:	b	16530 <dcgettext@plt>
   1f2a4:	mov	r2, #5
   1f2a8:	ldr	r1, [pc, #516]	; 1f4b4 <g_strcmp0@plt+0x887c>
   1f2ac:	mov	r0, #0
   1f2b0:	b	16530 <dcgettext@plt>
   1f2b4:	mov	r2, #5
   1f2b8:	ldr	r1, [pc, #504]	; 1f4b8 <g_strcmp0@plt+0x8880>
   1f2bc:	mov	r0, #0
   1f2c0:	b	16530 <dcgettext@plt>
   1f2c4:	mov	r2, #5
   1f2c8:	ldr	r1, [pc, #492]	; 1f4bc <g_strcmp0@plt+0x8884>
   1f2cc:	mov	r0, #0
   1f2d0:	b	16530 <dcgettext@plt>
   1f2d4:	mov	r2, #5
   1f2d8:	ldr	r1, [pc, #480]	; 1f4c0 <g_strcmp0@plt+0x8888>
   1f2dc:	mov	r0, #0
   1f2e0:	b	16530 <dcgettext@plt>
   1f2e4:	mov	r2, #5
   1f2e8:	ldr	r1, [pc, #468]	; 1f4c4 <g_strcmp0@plt+0x888c>
   1f2ec:	mov	r0, #0
   1f2f0:	b	16530 <dcgettext@plt>
   1f2f4:	mov	r2, #5
   1f2f8:	ldr	r1, [pc, #456]	; 1f4c8 <g_strcmp0@plt+0x8890>
   1f2fc:	mov	r0, #0
   1f300:	b	16530 <dcgettext@plt>
   1f304:	mov	r2, #5
   1f308:	ldr	r1, [pc, #444]	; 1f4cc <g_strcmp0@plt+0x8894>
   1f30c:	mov	r0, #0
   1f310:	b	16530 <dcgettext@plt>
   1f314:	mov	r2, #5
   1f318:	ldr	r1, [pc, #432]	; 1f4d0 <g_strcmp0@plt+0x8898>
   1f31c:	mov	r0, #0
   1f320:	b	16530 <dcgettext@plt>
   1f324:	mov	r2, #5
   1f328:	ldr	r1, [pc, #420]	; 1f4d4 <g_strcmp0@plt+0x889c>
   1f32c:	mov	r0, #0
   1f330:	b	16530 <dcgettext@plt>
   1f334:	mov	r2, #5
   1f338:	ldr	r1, [pc, #408]	; 1f4d8 <g_strcmp0@plt+0x88a0>
   1f33c:	mov	r0, #0
   1f340:	b	16530 <dcgettext@plt>
   1f344:	mov	r2, #5
   1f348:	ldr	r1, [pc, #396]	; 1f4dc <g_strcmp0@plt+0x88a4>
   1f34c:	mov	r0, #0
   1f350:	b	16530 <dcgettext@plt>
   1f354:	mov	r2, #5
   1f358:	ldr	r1, [pc, #384]	; 1f4e0 <g_strcmp0@plt+0x88a8>
   1f35c:	mov	r0, #0
   1f360:	b	16530 <dcgettext@plt>
   1f364:	mov	r2, #5
   1f368:	ldr	r1, [pc, #372]	; 1f4e4 <g_strcmp0@plt+0x88ac>
   1f36c:	mov	r0, #0
   1f370:	b	16530 <dcgettext@plt>
   1f374:	mov	r2, #5
   1f378:	ldr	r1, [pc, #360]	; 1f4e8 <g_strcmp0@plt+0x88b0>
   1f37c:	mov	r0, #0
   1f380:	b	16530 <dcgettext@plt>
   1f384:	mov	r2, #5
   1f388:	ldr	r1, [pc, #348]	; 1f4ec <g_strcmp0@plt+0x88b4>
   1f38c:	mov	r0, #0
   1f390:	b	16530 <dcgettext@plt>
   1f394:	mov	r2, #5
   1f398:	ldr	r1, [pc, #336]	; 1f4f0 <g_strcmp0@plt+0x88b8>
   1f39c:	mov	r0, #0
   1f3a0:	b	16530 <dcgettext@plt>
   1f3a4:	mov	r2, #5
   1f3a8:	ldr	r1, [pc, #324]	; 1f4f4 <g_strcmp0@plt+0x88bc>
   1f3ac:	mov	r0, #0
   1f3b0:	b	16530 <dcgettext@plt>
   1f3b4:	mov	r2, #5
   1f3b8:	ldr	r1, [pc, #312]	; 1f4f8 <g_strcmp0@plt+0x88c0>
   1f3bc:	mov	r0, #0
   1f3c0:	b	16530 <dcgettext@plt>
   1f3c4:	mov	r2, #5
   1f3c8:	ldr	r1, [pc, #300]	; 1f4fc <g_strcmp0@plt+0x88c4>
   1f3cc:	mov	r0, #0
   1f3d0:	b	16530 <dcgettext@plt>
   1f3d4:	push	{r4, lr}
   1f3d8:	mov	r1, #16
   1f3dc:	ldr	r2, [pc, #284]	; 1f500 <g_strcmp0@plt+0x88c8>
   1f3e0:	ldr	r0, [pc, #284]	; 1f504 <g_strcmp0@plt+0x88cc>
   1f3e4:	bl	15dec <g_log@plt>
   1f3e8:	mov	r0, #0
   1f3ec:	pop	{r4, pc}
   1f3f0:	andeq	r8, r2, r0, ror fp
   1f3f4:	andeq	r8, r2, r8, asr fp
   1f3f8:	andeq	r8, r2, ip, lsr fp
   1f3fc:	andeq	r8, r2, ip, lsl fp
   1f400:	andeq	r8, r2, r4, lsl #22
   1f404:	ldrdeq	r8, [r2], -ip
   1f408:			; <UNDEFINED> instruction: 0x00028ab8
   1f40c:	muleq	r2, r0, sl
   1f410:	andeq	r8, r2, r0, ror sl
   1f414:	andeq	r8, r2, r4, asr sl
   1f418:	andeq	r8, r2, ip, lsr sl
   1f41c:	andeq	r8, r2, r0, lsr #20
   1f420:	andeq	r8, r2, ip, lsl #20
   1f424:	strdeq	r8, [r2], -r4
   1f428:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1f42c:			; <UNDEFINED> instruction: 0x000289bc
   1f430:	muleq	r2, r8, r9
   1f434:	andeq	r8, r2, r0, ror r9
   1f438:	andeq	r8, r2, ip, asr r9
   1f43c:	andeq	r8, r2, r4, asr #18
   1f440:	andeq	r8, r2, r8, lsr #18
   1f444:	andeq	r8, r2, r8, lsl #18
   1f448:	ldrdeq	r8, [r2], -ip
   1f44c:			; <UNDEFINED> instruction: 0x000288b0
   1f450:	muleq	r2, r0, r8
   1f454:	andeq	r8, r2, r8, ror #16
   1f458:	andeq	r8, r2, r4, asr #16
   1f45c:	andeq	r8, r2, r0, lsr r8
   1f460:	andeq	r8, r2, r8, lsl r8
   1f464:	andeq	r8, r2, r0, lsl #16
   1f468:	andeq	r8, r2, ip, ror #13
   1f46c:	ldrdeq	r8, [r2], -r0
   1f470:	andeq	r8, r2, r8, lsr #13
   1f474:	andeq	r8, r2, r8, lsl #13
   1f478:	ldrdeq	r8, [r2], -ip
   1f47c:	andeq	r8, r2, r4, ror #12
   1f480:	andeq	r8, r2, r0, asr #15
   1f484:	andeq	r8, r2, r8, lsr #15
   1f488:	muleq	r2, r0, r7
   1f48c:	andeq	r8, r2, r8, ror #14
   1f490:	andeq	r8, r2, r0, asr r7
   1f494:	andeq	r8, r2, r0, asr #14
   1f498:	andeq	r8, r2, r4, asr #12
   1f49c:	andeq	r8, r2, ip, lsl r6
   1f4a0:	andeq	r8, r2, ip, lsr #14
   1f4a4:	andeq	r8, r2, r4, lsl r7
   1f4a8:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1f4ac:			; <UNDEFINED> instruction: 0x000285b4
   1f4b0:	muleq	r2, r4, r5
   1f4b4:			; <UNDEFINED> instruction: 0x000283b0
   1f4b8:	andeq	r8, r2, r0, ror #11
   1f4bc:	andeq	r8, r2, r0, lsl #11
   1f4c0:	andeq	r8, r2, r0, ror #7
   1f4c4:	andeq	r8, r2, r8, lsr r5
   1f4c8:	andeq	r8, r2, r8, lsl r5
   1f4cc:	strdeq	r8, [r2], -ip
   1f4d0:	andeq	r8, r2, r4, ror #9
   1f4d4:	andeq	r8, r2, r8, asr #9
   1f4d8:	andeq	r8, r2, r4, lsr #9
   1f4dc:	andeq	r8, r2, r8, lsl #9
   1f4e0:	andeq	r8, r2, r8, ror #8
   1f4e4:	andeq	r8, r2, r4, asr r5
   1f4e8:	andeq	r8, r2, r4, asr #8
   1f4ec:	andeq	r8, r2, ip, lsl r4
   1f4f0:	strdeq	r8, [r2], -ip
   1f4f4:	muleq	r2, r0, r3
   1f4f8:	ldrdeq	r8, [r2], -r0
   1f4fc:	andeq	r8, r2, r0, ror r3
   1f500:	andeq	r8, r2, r0, lsl #23
   1f504:	andeq	r6, r2, r0, ror #4
   1f508:	cmp	r0, #67	; 0x43
   1f50c:	ldrls	pc, [pc, r0, lsl #2]
   1f510:	b	1fa64 <g_strcmp0@plt+0x8e2c>
   1f514:	andeq	pc, r1, r4, asr sl	; <UNPREDICTABLE>
   1f518:	andeq	pc, r1, r4, asr #20
   1f51c:	andeq	pc, r1, r4, lsr sl	; <UNPREDICTABLE>
   1f520:	andeq	pc, r1, r4, lsr #20
   1f524:	andeq	pc, r1, r4, lsl sl	; <UNPREDICTABLE>
   1f528:	andeq	pc, r1, r4, lsl #20
   1f52c:	strdeq	pc, [r1], -r4
   1f530:	andeq	pc, r1, r4, ror #19
   1f534:	ldrdeq	pc, [r1], -r4
   1f538:	andeq	pc, r1, r4, asr #19
   1f53c:			; <UNDEFINED> instruction: 0x0001f9b4
   1f540:	andeq	pc, r1, r4, lsr #19
   1f544:	muleq	r1, r4, r9
   1f548:	andeq	pc, r1, r4, lsl #19
   1f54c:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f550:	andeq	pc, r1, r4, ror #18
   1f554:	andeq	pc, r1, r4, asr r9	; <UNPREDICTABLE>
   1f558:	andeq	pc, r1, r4, asr #18
   1f55c:	andeq	pc, r1, r4, lsr r9	; <UNPREDICTABLE>
   1f560:	andeq	pc, r1, r4, lsr #18
   1f564:	andeq	pc, r1, r4, lsl r9	; <UNPREDICTABLE>
   1f568:	andeq	pc, r1, r4, lsl #18
   1f56c:	strdeq	pc, [r1], -r4
   1f570:	andeq	pc, r1, r4, ror #17
   1f574:	ldrdeq	pc, [r1], -r4
   1f578:	andeq	pc, r1, r4, asr #17
   1f57c:			; <UNDEFINED> instruction: 0x0001f8b4
   1f580:	andeq	pc, r1, r4, lsr #17
   1f584:	muleq	r1, r4, r8
   1f588:	andeq	pc, r1, r4, lsl #17
   1f58c:	andeq	pc, r1, r4, ror r8	; <UNPREDICTABLE>
   1f590:	andeq	pc, r1, r4, ror #16
   1f594:	andeq	pc, r1, r4, asr r8	; <UNPREDICTABLE>
   1f598:	andeq	pc, r1, r4, asr #16
   1f59c:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   1f5a0:	andeq	pc, r1, r4, lsr #16
   1f5a4:	andeq	pc, r1, r4, lsl r8	; <UNPREDICTABLE>
   1f5a8:	andeq	pc, r1, r4, lsl #16
   1f5ac:	strdeq	pc, [r1], -r4
   1f5b0:	andeq	pc, r1, r4, ror #15
   1f5b4:	ldrdeq	pc, [r1], -r4
   1f5b8:	andeq	pc, r1, r4, asr #15
   1f5bc:			; <UNDEFINED> instruction: 0x0001f7b4
   1f5c0:	andeq	pc, r1, r4, lsr #15
   1f5c4:	muleq	r1, r4, r7
   1f5c8:	andeq	pc, r1, r4, lsl #15
   1f5cc:	andeq	pc, r1, r4, ror r7	; <UNPREDICTABLE>
   1f5d0:	andeq	pc, r1, r4, ror #14
   1f5d4:	andeq	pc, r1, r4, asr r7	; <UNPREDICTABLE>
   1f5d8:	andeq	pc, r1, r4, asr #14
   1f5dc:	andeq	pc, r1, r4, lsr r7	; <UNPREDICTABLE>
   1f5e0:	andeq	pc, r1, r4, lsr #14
   1f5e4:	andeq	pc, r1, r4, lsl r7	; <UNPREDICTABLE>
   1f5e8:	andeq	pc, r1, r4, lsl #14
   1f5ec:	strdeq	pc, [r1], -r4
   1f5f0:	andeq	pc, r1, r4, ror #13
   1f5f4:	ldrdeq	pc, [r1], -r4
   1f5f8:	andeq	pc, r1, r4, asr #13
   1f5fc:			; <UNDEFINED> instruction: 0x0001f6b4
   1f600:	andeq	pc, r1, r4, lsr #13
   1f604:	muleq	r1, r4, r6
   1f608:	andeq	pc, r1, r4, lsl #13
   1f60c:	andeq	pc, r1, r4, ror r6	; <UNPREDICTABLE>
   1f610:	andeq	pc, r1, r4, ror #12
   1f614:	andeq	pc, r1, r4, asr r6	; <UNPREDICTABLE>
   1f618:	andeq	pc, r1, r4, asr #12
   1f61c:	andeq	pc, r1, r4, lsr r6	; <UNPREDICTABLE>
   1f620:	andeq	pc, r1, r4, lsr #12
   1f624:	mov	r2, #5
   1f628:	ldr	r1, [pc, #1084]	; 1fa6c <g_strcmp0@plt+0x8e34>
   1f62c:	mov	r0, #0
   1f630:	b	16530 <dcgettext@plt>
   1f634:	mov	r2, #5
   1f638:	ldr	r1, [pc, #1072]	; 1fa70 <g_strcmp0@plt+0x8e38>
   1f63c:	mov	r0, #0
   1f640:	b	16530 <dcgettext@plt>
   1f644:	mov	r2, #5
   1f648:	ldr	r1, [pc, #1060]	; 1fa74 <g_strcmp0@plt+0x8e3c>
   1f64c:	mov	r0, #0
   1f650:	b	16530 <dcgettext@plt>
   1f654:	mov	r2, #5
   1f658:	ldr	r1, [pc, #1048]	; 1fa78 <g_strcmp0@plt+0x8e40>
   1f65c:	mov	r0, #0
   1f660:	b	16530 <dcgettext@plt>
   1f664:	mov	r2, #5
   1f668:	ldr	r1, [pc, #1036]	; 1fa7c <g_strcmp0@plt+0x8e44>
   1f66c:	mov	r0, #0
   1f670:	b	16530 <dcgettext@plt>
   1f674:	mov	r2, #5
   1f678:	ldr	r1, [pc, #1024]	; 1fa80 <g_strcmp0@plt+0x8e48>
   1f67c:	mov	r0, #0
   1f680:	b	16530 <dcgettext@plt>
   1f684:	mov	r2, #5
   1f688:	ldr	r1, [pc, #1012]	; 1fa84 <g_strcmp0@plt+0x8e4c>
   1f68c:	mov	r0, #0
   1f690:	b	16530 <dcgettext@plt>
   1f694:	mov	r2, #5
   1f698:	ldr	r1, [pc, #1000]	; 1fa88 <g_strcmp0@plt+0x8e50>
   1f69c:	mov	r0, #0
   1f6a0:	b	16530 <dcgettext@plt>
   1f6a4:	mov	r2, #5
   1f6a8:	ldr	r1, [pc, #988]	; 1fa8c <g_strcmp0@plt+0x8e54>
   1f6ac:	mov	r0, #0
   1f6b0:	b	16530 <dcgettext@plt>
   1f6b4:	mov	r2, #5
   1f6b8:	ldr	r1, [pc, #976]	; 1fa90 <g_strcmp0@plt+0x8e58>
   1f6bc:	mov	r0, #0
   1f6c0:	b	16530 <dcgettext@plt>
   1f6c4:	mov	r2, #5
   1f6c8:	ldr	r1, [pc, #964]	; 1fa94 <g_strcmp0@plt+0x8e5c>
   1f6cc:	mov	r0, #0
   1f6d0:	b	16530 <dcgettext@plt>
   1f6d4:	mov	r2, #5
   1f6d8:	ldr	r1, [pc, #952]	; 1fa98 <g_strcmp0@plt+0x8e60>
   1f6dc:	mov	r0, #0
   1f6e0:	b	16530 <dcgettext@plt>
   1f6e4:	mov	r2, #5
   1f6e8:	ldr	r1, [pc, #940]	; 1fa9c <g_strcmp0@plt+0x8e64>
   1f6ec:	mov	r0, #0
   1f6f0:	b	16530 <dcgettext@plt>
   1f6f4:	mov	r2, #5
   1f6f8:	ldr	r1, [pc, #928]	; 1faa0 <g_strcmp0@plt+0x8e68>
   1f6fc:	mov	r0, #0
   1f700:	b	16530 <dcgettext@plt>
   1f704:	mov	r2, #5
   1f708:	ldr	r1, [pc, #916]	; 1faa4 <g_strcmp0@plt+0x8e6c>
   1f70c:	mov	r0, #0
   1f710:	b	16530 <dcgettext@plt>
   1f714:	mov	r2, #5
   1f718:	ldr	r1, [pc, #904]	; 1faa8 <g_strcmp0@plt+0x8e70>
   1f71c:	mov	r0, #0
   1f720:	b	16530 <dcgettext@plt>
   1f724:	mov	r2, #5
   1f728:	ldr	r1, [pc, #892]	; 1faac <g_strcmp0@plt+0x8e74>
   1f72c:	mov	r0, #0
   1f730:	b	16530 <dcgettext@plt>
   1f734:	mov	r2, #5
   1f738:	ldr	r1, [pc, #880]	; 1fab0 <g_strcmp0@plt+0x8e78>
   1f73c:	mov	r0, #0
   1f740:	b	16530 <dcgettext@plt>
   1f744:	mov	r2, #5
   1f748:	ldr	r1, [pc, #868]	; 1fab4 <g_strcmp0@plt+0x8e7c>
   1f74c:	mov	r0, #0
   1f750:	b	16530 <dcgettext@plt>
   1f754:	mov	r2, #5
   1f758:	ldr	r1, [pc, #856]	; 1fab8 <g_strcmp0@plt+0x8e80>
   1f75c:	mov	r0, #0
   1f760:	b	16530 <dcgettext@plt>
   1f764:	mov	r2, #5
   1f768:	ldr	r1, [pc, #844]	; 1fabc <g_strcmp0@plt+0x8e84>
   1f76c:	mov	r0, #0
   1f770:	b	16530 <dcgettext@plt>
   1f774:	mov	r2, #5
   1f778:	ldr	r1, [pc, #832]	; 1fac0 <g_strcmp0@plt+0x8e88>
   1f77c:	mov	r0, #0
   1f780:	b	16530 <dcgettext@plt>
   1f784:	mov	r2, #5
   1f788:	ldr	r1, [pc, #820]	; 1fac4 <g_strcmp0@plt+0x8e8c>
   1f78c:	mov	r0, #0
   1f790:	b	16530 <dcgettext@plt>
   1f794:	mov	r2, #5
   1f798:	ldr	r1, [pc, #808]	; 1fac8 <g_strcmp0@plt+0x8e90>
   1f79c:	mov	r0, #0
   1f7a0:	b	16530 <dcgettext@plt>
   1f7a4:	mov	r2, #5
   1f7a8:	ldr	r1, [pc, #796]	; 1facc <g_strcmp0@plt+0x8e94>
   1f7ac:	mov	r0, #0
   1f7b0:	b	16530 <dcgettext@plt>
   1f7b4:	mov	r2, #5
   1f7b8:	ldr	r1, [pc, #784]	; 1fad0 <g_strcmp0@plt+0x8e98>
   1f7bc:	mov	r0, #0
   1f7c0:	b	16530 <dcgettext@plt>
   1f7c4:	mov	r2, #5
   1f7c8:	ldr	r1, [pc, #772]	; 1fad4 <g_strcmp0@plt+0x8e9c>
   1f7cc:	mov	r0, #0
   1f7d0:	b	16530 <dcgettext@plt>
   1f7d4:	mov	r2, #5
   1f7d8:	ldr	r1, [pc, #760]	; 1fad8 <g_strcmp0@plt+0x8ea0>
   1f7dc:	mov	r0, #0
   1f7e0:	b	16530 <dcgettext@plt>
   1f7e4:	mov	r2, #5
   1f7e8:	ldr	r1, [pc, #748]	; 1fadc <g_strcmp0@plt+0x8ea4>
   1f7ec:	mov	r0, #0
   1f7f0:	b	16530 <dcgettext@plt>
   1f7f4:	mov	r2, #5
   1f7f8:	ldr	r1, [pc, #736]	; 1fae0 <g_strcmp0@plt+0x8ea8>
   1f7fc:	mov	r0, #0
   1f800:	b	16530 <dcgettext@plt>
   1f804:	mov	r2, #5
   1f808:	ldr	r1, [pc, #724]	; 1fae4 <g_strcmp0@plt+0x8eac>
   1f80c:	mov	r0, #0
   1f810:	b	16530 <dcgettext@plt>
   1f814:	mov	r2, #5
   1f818:	ldr	r1, [pc, #712]	; 1fae8 <g_strcmp0@plt+0x8eb0>
   1f81c:	mov	r0, #0
   1f820:	b	16530 <dcgettext@plt>
   1f824:	mov	r2, #5
   1f828:	ldr	r1, [pc, #700]	; 1faec <g_strcmp0@plt+0x8eb4>
   1f82c:	mov	r0, #0
   1f830:	b	16530 <dcgettext@plt>
   1f834:	mov	r2, #5
   1f838:	ldr	r1, [pc, #688]	; 1faf0 <g_strcmp0@plt+0x8eb8>
   1f83c:	mov	r0, #0
   1f840:	b	16530 <dcgettext@plt>
   1f844:	mov	r2, #5
   1f848:	ldr	r1, [pc, #676]	; 1faf4 <g_strcmp0@plt+0x8ebc>
   1f84c:	mov	r0, #0
   1f850:	b	16530 <dcgettext@plt>
   1f854:	mov	r2, #5
   1f858:	ldr	r1, [pc, #664]	; 1faf8 <g_strcmp0@plt+0x8ec0>
   1f85c:	mov	r0, #0
   1f860:	b	16530 <dcgettext@plt>
   1f864:	mov	r2, #5
   1f868:	ldr	r1, [pc, #652]	; 1fafc <g_strcmp0@plt+0x8ec4>
   1f86c:	mov	r0, #0
   1f870:	b	16530 <dcgettext@plt>
   1f874:	mov	r2, #5
   1f878:	ldr	r1, [pc, #640]	; 1fb00 <g_strcmp0@plt+0x8ec8>
   1f87c:	mov	r0, #0
   1f880:	b	16530 <dcgettext@plt>
   1f884:	mov	r2, #5
   1f888:	ldr	r1, [pc, #628]	; 1fb04 <g_strcmp0@plt+0x8ecc>
   1f88c:	mov	r0, #0
   1f890:	b	16530 <dcgettext@plt>
   1f894:	mov	r2, #5
   1f898:	ldr	r1, [pc, #616]	; 1fb08 <g_strcmp0@plt+0x8ed0>
   1f89c:	mov	r0, #0
   1f8a0:	b	16530 <dcgettext@plt>
   1f8a4:	mov	r2, #5
   1f8a8:	ldr	r1, [pc, #604]	; 1fb0c <g_strcmp0@plt+0x8ed4>
   1f8ac:	mov	r0, #0
   1f8b0:	b	16530 <dcgettext@plt>
   1f8b4:	mov	r2, #5
   1f8b8:	ldr	r1, [pc, #592]	; 1fb10 <g_strcmp0@plt+0x8ed8>
   1f8bc:	mov	r0, #0
   1f8c0:	b	16530 <dcgettext@plt>
   1f8c4:	mov	r2, #5
   1f8c8:	ldr	r1, [pc, #580]	; 1fb14 <g_strcmp0@plt+0x8edc>
   1f8cc:	mov	r0, #0
   1f8d0:	b	16530 <dcgettext@plt>
   1f8d4:	mov	r2, #5
   1f8d8:	ldr	r1, [pc, #568]	; 1fb18 <g_strcmp0@plt+0x8ee0>
   1f8dc:	mov	r0, #0
   1f8e0:	b	16530 <dcgettext@plt>
   1f8e4:	mov	r2, #5
   1f8e8:	ldr	r1, [pc, #556]	; 1fb1c <g_strcmp0@plt+0x8ee4>
   1f8ec:	mov	r0, #0
   1f8f0:	b	16530 <dcgettext@plt>
   1f8f4:	mov	r2, #5
   1f8f8:	ldr	r1, [pc, #544]	; 1fb20 <g_strcmp0@plt+0x8ee8>
   1f8fc:	mov	r0, #0
   1f900:	b	16530 <dcgettext@plt>
   1f904:	mov	r2, #5
   1f908:	ldr	r1, [pc, #532]	; 1fb24 <g_strcmp0@plt+0x8eec>
   1f90c:	mov	r0, #0
   1f910:	b	16530 <dcgettext@plt>
   1f914:	mov	r2, #5
   1f918:	ldr	r1, [pc, #520]	; 1fb28 <g_strcmp0@plt+0x8ef0>
   1f91c:	mov	r0, #0
   1f920:	b	16530 <dcgettext@plt>
   1f924:	mov	r2, #5
   1f928:	ldr	r1, [pc, #508]	; 1fb2c <g_strcmp0@plt+0x8ef4>
   1f92c:	mov	r0, #0
   1f930:	b	16530 <dcgettext@plt>
   1f934:	mov	r2, #5
   1f938:	ldr	r1, [pc, #496]	; 1fb30 <g_strcmp0@plt+0x8ef8>
   1f93c:	mov	r0, #0
   1f940:	b	16530 <dcgettext@plt>
   1f944:	mov	r2, #5
   1f948:	ldr	r1, [pc, #484]	; 1fb34 <g_strcmp0@plt+0x8efc>
   1f94c:	mov	r0, #0
   1f950:	b	16530 <dcgettext@plt>
   1f954:	mov	r2, #5
   1f958:	ldr	r1, [pc, #472]	; 1fb38 <g_strcmp0@plt+0x8f00>
   1f95c:	mov	r0, #0
   1f960:	b	16530 <dcgettext@plt>
   1f964:	mov	r2, #5
   1f968:	ldr	r1, [pc, #460]	; 1fb3c <g_strcmp0@plt+0x8f04>
   1f96c:	mov	r0, #0
   1f970:	b	16530 <dcgettext@plt>
   1f974:	mov	r2, #5
   1f978:	ldr	r1, [pc, #448]	; 1fb40 <g_strcmp0@plt+0x8f08>
   1f97c:	mov	r0, #0
   1f980:	b	16530 <dcgettext@plt>
   1f984:	mov	r2, #5
   1f988:	ldr	r1, [pc, #436]	; 1fb44 <g_strcmp0@plt+0x8f0c>
   1f98c:	mov	r0, #0
   1f990:	b	16530 <dcgettext@plt>
   1f994:	mov	r2, #5
   1f998:	ldr	r1, [pc, #424]	; 1fb48 <g_strcmp0@plt+0x8f10>
   1f99c:	mov	r0, #0
   1f9a0:	b	16530 <dcgettext@plt>
   1f9a4:	mov	r2, #5
   1f9a8:	ldr	r1, [pc, #412]	; 1fb4c <g_strcmp0@plt+0x8f14>
   1f9ac:	mov	r0, #0
   1f9b0:	b	16530 <dcgettext@plt>
   1f9b4:	mov	r2, #5
   1f9b8:	ldr	r1, [pc, #400]	; 1fb50 <g_strcmp0@plt+0x8f18>
   1f9bc:	mov	r0, #0
   1f9c0:	b	16530 <dcgettext@plt>
   1f9c4:	mov	r2, #5
   1f9c8:	ldr	r1, [pc, #388]	; 1fb54 <g_strcmp0@plt+0x8f1c>
   1f9cc:	mov	r0, #0
   1f9d0:	b	16530 <dcgettext@plt>
   1f9d4:	mov	r2, #5
   1f9d8:	ldr	r1, [pc, #376]	; 1fb58 <g_strcmp0@plt+0x8f20>
   1f9dc:	mov	r0, #0
   1f9e0:	b	16530 <dcgettext@plt>
   1f9e4:	mov	r2, #5
   1f9e8:	ldr	r1, [pc, #364]	; 1fb5c <g_strcmp0@plt+0x8f24>
   1f9ec:	mov	r0, #0
   1f9f0:	b	16530 <dcgettext@plt>
   1f9f4:	mov	r2, #5
   1f9f8:	ldr	r1, [pc, #352]	; 1fb60 <g_strcmp0@plt+0x8f28>
   1f9fc:	mov	r0, #0
   1fa00:	b	16530 <dcgettext@plt>
   1fa04:	mov	r2, #5
   1fa08:	ldr	r1, [pc, #340]	; 1fb64 <g_strcmp0@plt+0x8f2c>
   1fa0c:	mov	r0, #0
   1fa10:	b	16530 <dcgettext@plt>
   1fa14:	mov	r2, #5
   1fa18:	ldr	r1, [pc, #328]	; 1fb68 <g_strcmp0@plt+0x8f30>
   1fa1c:	mov	r0, #0
   1fa20:	b	16530 <dcgettext@plt>
   1fa24:	mov	r2, #5
   1fa28:	ldr	r1, [pc, #316]	; 1fb6c <g_strcmp0@plt+0x8f34>
   1fa2c:	mov	r0, #0
   1fa30:	b	16530 <dcgettext@plt>
   1fa34:	mov	r2, #5
   1fa38:	ldr	r1, [pc, #304]	; 1fb70 <g_strcmp0@plt+0x8f38>
   1fa3c:	mov	r0, #0
   1fa40:	b	16530 <dcgettext@plt>
   1fa44:	mov	r2, #5
   1fa48:	ldr	r1, [pc, #292]	; 1fb74 <g_strcmp0@plt+0x8f3c>
   1fa4c:	mov	r0, #0
   1fa50:	b	16530 <dcgettext@plt>
   1fa54:	mov	r2, #5
   1fa58:	ldr	r1, [pc, #280]	; 1fb78 <g_strcmp0@plt+0x8f40>
   1fa5c:	mov	r0, #0
   1fa60:	b	16530 <dcgettext@plt>
   1fa64:	mov	r0, #0
   1fa68:	bx	lr
   1fa6c:	andeq	sl, r2, ip, lsr #6
   1fa70:	andeq	sl, r2, r0, lsr #5
   1fa74:	ldrdeq	sl, [r2], -ip
   1fa78:	andeq	sl, r2, r8, ror #4
   1fa7c:	andeq	sl, r2, r8, lsr #4
   1fa80:	andeq	sl, r2, ip, ror #3
   1fa84:	andeq	sl, r2, ip, lsr #3
   1fa88:	andeq	sl, r2, ip, lsr #2
   1fa8c:	strheq	sl, [r2], -r8
   1fa90:	andeq	sl, r2, r8, asr #32
   1fa94:	ldrdeq	r9, [r2], -r8
   1fa98:	andeq	r9, r2, r4, ror #30
   1fa9c:	andeq	r9, r2, r4, ror #29
   1faa0:			; <UNDEFINED> instruction: 0x00029eb0
   1faa4:	andeq	r9, r2, r8, ror #28
   1faa8:	andeq	r9, r2, r4, lsr lr
   1faac:	strdeq	r9, [r2], -ip
   1fab0:	andeq	r9, r2, r0, asr #27
   1fab4:	andeq	r9, r2, r4, asr #26
   1fab8:	andeq	r9, r2, r0, ror #25
   1fabc:	andeq	r9, r2, r4, lsr #25
   1fac0:	andeq	r9, r2, r8, lsr ip
   1fac4:	andeq	r9, r2, r8, ror #23
   1fac8:	andeq	r9, r2, ip, asr fp
   1facc:	ldrdeq	r9, [r2], -r8
   1fad0:	andeq	r9, r2, ip, ror #20
   1fad4:	andeq	r9, r2, ip, lsl sl
   1fad8:	andeq	r9, r2, ip, asr #19
   1fadc:	andeq	r9, r2, r8, ror r9
   1fae0:	andeq	r9, r2, r4, lsl #18
   1fae4:	andeq	r9, r2, r8, lsr #11
   1fae8:	andeq	r9, r2, r8, lsr #10
   1faec:	andeq	r9, r2, r4, asr #9
   1faf0:	andeq	r9, r2, r4, ror #8
   1faf4:	andeq	r9, r2, r8, asr #17
   1faf8:	strdeq	r9, [r2], -r4
   1fafc:	andeq	r9, r2, r4, asr r8
   1fb00:	andeq	r9, r2, ip, lsl r8
   1fb04:	andeq	r9, r2, r4, asr #15
   1fb08:	muleq	r2, r0, r7
   1fb0c:	andeq	r9, r2, r0, ror #14
   1fb10:	andeq	r9, r2, r8, ror #13
   1fb14:	andeq	r9, r2, r8, asr #7
   1fb18:	andeq	r9, r2, r4, ror #6
   1fb1c:	muleq	r2, r8, r6
   1fb20:	andeq	r9, r2, r8, lsr #12
   1fb24:	strdeq	r9, [r2], -ip
   1fb28:	andeq	r9, r2, r4, lsl #5
   1fb2c:	andeq	r9, r2, r0, lsr #4
   1fb30:	andeq	r8, r2, r0, lsl ip
   1fb34:			; <UNDEFINED> instruction: 0x000292b8
   1fb38:			; <UNDEFINED> instruction: 0x000291b8
   1fb3c:	ldrdeq	r8, [r2], -ip
   1fb40:	andeq	r9, r2, r4, lsl #2
   1fb44:	andeq	r9, r2, ip, lsl #1
   1fb48:	andeq	r9, r2, r4, lsl r0
   1fb4c:	andeq	r8, r2, r8, asr #31
   1fb50:	andeq	r8, r2, r0, lsl #31
   1fb54:	andeq	r8, r2, ip, lsr pc
   1fb58:	andeq	r8, r2, r0, ror #29
   1fb5c:	muleq	r2, r0, lr
   1fb60:	andeq	r9, r2, r0, lsr r1
   1fb64:	andeq	r8, r2, r4, lsr #28
   1fb68:	muleq	r2, ip, sp
   1fb6c:	andeq	r8, r2, r8, lsl sp
   1fb70:			; <UNDEFINED> instruction: 0x00028bb0
   1fb74:	andeq	r8, r2, r0, ror ip
   1fb78:	muleq	r2, r0, fp
   1fb7c:	sub	r3, r0, #1
   1fb80:	cmp	r3, #5
   1fb84:	ldrls	pc, [pc, r3, lsl #2]
   1fb88:	b	1fc04 <g_strcmp0@plt+0x8fcc>
   1fb8c:			; <UNDEFINED> instruction: 0x0001fbb4
   1fb90:	andeq	pc, r1, r4, asr #23
   1fb94:	ldrdeq	pc, [r1], -r4
   1fb98:	andeq	pc, r1, r4, ror #23
   1fb9c:	strdeq	pc, [r1], -r4
   1fba0:	andeq	pc, r1, r4, lsr #23
   1fba4:	mov	r2, #5
   1fba8:	ldr	r1, [pc, #116]	; 1fc24 <g_strcmp0@plt+0x8fec>
   1fbac:	mov	r0, #0
   1fbb0:	b	16530 <dcgettext@plt>
   1fbb4:	mov	r2, #5
   1fbb8:	ldr	r1, [pc, #104]	; 1fc28 <g_strcmp0@plt+0x8ff0>
   1fbbc:	mov	r0, #0
   1fbc0:	b	16530 <dcgettext@plt>
   1fbc4:	mov	r2, #5
   1fbc8:	ldr	r1, [pc, #92]	; 1fc2c <g_strcmp0@plt+0x8ff4>
   1fbcc:	mov	r0, #0
   1fbd0:	b	16530 <dcgettext@plt>
   1fbd4:	mov	r2, #5
   1fbd8:	ldr	r1, [pc, #80]	; 1fc30 <g_strcmp0@plt+0x8ff8>
   1fbdc:	mov	r0, #0
   1fbe0:	b	16530 <dcgettext@plt>
   1fbe4:	mov	r2, #5
   1fbe8:	ldr	r1, [pc, #68]	; 1fc34 <g_strcmp0@plt+0x8ffc>
   1fbec:	mov	r0, #0
   1fbf0:	b	16530 <dcgettext@plt>
   1fbf4:	mov	r2, #5
   1fbf8:	ldr	r1, [pc, #56]	; 1fc38 <g_strcmp0@plt+0x9000>
   1fbfc:	mov	r0, #0
   1fc00:	b	16530 <dcgettext@plt>
   1fc04:	mov	r3, r0
   1fc08:	push	{r4, lr}
   1fc0c:	mov	r1, #16
   1fc10:	ldr	r2, [pc, #36]	; 1fc3c <g_strcmp0@plt+0x9004>
   1fc14:	ldr	r0, [pc, #36]	; 1fc40 <g_strcmp0@plt+0x9008>
   1fc18:	bl	15dec <g_log@plt>
   1fc1c:	mov	r0, #0
   1fc20:	pop	{r4, pc}
   1fc24:	andeq	sl, r2, r4, lsr r4
   1fc28:	andeq	sl, r2, r0, asr r3
   1fc2c:	andeq	sl, r2, ip, ror #6
   1fc30:	andeq	sl, r2, r0, lsr #7
   1fc34:	ldrdeq	sl, [r2], -r0
   1fc38:	andeq	sl, r2, ip, ror #7
   1fc3c:	andeq	sl, r2, ip, ror #8
   1fc40:	andeq	r6, r2, r0, ror #4
   1fc44:	sub	r3, r0, #1
   1fc48:	cmp	r3, #5
   1fc4c:	ldrls	pc, [pc, r3, lsl #2]
   1fc50:	b	1fccc <g_strcmp0@plt+0x9094>
   1fc54:	andeq	pc, r1, ip, ror ip	; <UNPREDICTABLE>
   1fc58:	andeq	pc, r1, ip, lsl #25
   1fc5c:	muleq	r1, ip, ip
   1fc60:	andeq	pc, r1, ip, lsr #25
   1fc64:			; <UNDEFINED> instruction: 0x0001fcbc
   1fc68:	andeq	pc, r1, ip, ror #24
   1fc6c:	mov	r2, #5
   1fc70:	ldr	r1, [pc, #116]	; 1fcec <g_strcmp0@plt+0x90b4>
   1fc74:	mov	r0, #0
   1fc78:	b	16530 <dcgettext@plt>
   1fc7c:	mov	r2, #5
   1fc80:	ldr	r1, [pc, #104]	; 1fcf0 <g_strcmp0@plt+0x90b8>
   1fc84:	mov	r0, #0
   1fc88:	b	16530 <dcgettext@plt>
   1fc8c:	mov	r2, #5
   1fc90:	ldr	r1, [pc, #92]	; 1fcf4 <g_strcmp0@plt+0x90bc>
   1fc94:	mov	r0, #0
   1fc98:	b	16530 <dcgettext@plt>
   1fc9c:	mov	r2, #5
   1fca0:	ldr	r1, [pc, #80]	; 1fcf8 <g_strcmp0@plt+0x90c0>
   1fca4:	mov	r0, #0
   1fca8:	b	16530 <dcgettext@plt>
   1fcac:	mov	r2, #5
   1fcb0:	ldr	r1, [pc, #68]	; 1fcfc <g_strcmp0@plt+0x90c4>
   1fcb4:	mov	r0, #0
   1fcb8:	b	16530 <dcgettext@plt>
   1fcbc:	mov	r2, #5
   1fcc0:	ldr	r1, [pc, #56]	; 1fd00 <g_strcmp0@plt+0x90c8>
   1fcc4:	mov	r0, #0
   1fcc8:	b	16530 <dcgettext@plt>
   1fccc:	mov	r3, r0
   1fcd0:	push	{r4, lr}
   1fcd4:	mov	r1, #16
   1fcd8:	ldr	r2, [pc, #36]	; 1fd04 <g_strcmp0@plt+0x90cc>
   1fcdc:	ldr	r0, [pc, #36]	; 1fd08 <g_strcmp0@plt+0x90d0>
   1fce0:	bl	15dec <g_log@plt>
   1fce4:	mov	r0, #0
   1fce8:	pop	{r4, pc}
   1fcec:	andeq	sl, r2, r0, asr #10
   1fcf0:	andeq	sl, r2, r8, lsl #9
   1fcf4:	andeq	sl, r2, r0, ror #9
   1fcf8:			; <UNDEFINED> instruction: 0x0002a4b8
   1fcfc:	andeq	sl, r2, r0, lsr #9
   1fd00:	andeq	sl, r2, r8, lsl #10
   1fd04:	andeq	sl, r2, ip, ror #8
   1fd08:	andeq	r6, r2, r0, ror #4
   1fd0c:	cmp	r0, #2
   1fd10:	beq	1fd44 <g_strcmp0@plt+0x910c>
   1fd14:	cmp	r0, #3
   1fd18:	beq	1fd64 <g_strcmp0@plt+0x912c>
   1fd1c:	cmp	r0, #1
   1fd20:	beq	1fd54 <g_strcmp0@plt+0x911c>
   1fd24:	mov	r3, r0
   1fd28:	push	{r4, lr}
   1fd2c:	mov	r1, #16
   1fd30:	ldr	r2, [pc, #60]	; 1fd74 <g_strcmp0@plt+0x913c>
   1fd34:	ldr	r0, [pc, #60]	; 1fd78 <g_strcmp0@plt+0x9140>
   1fd38:	bl	15dec <g_log@plt>
   1fd3c:	mov	r0, #0
   1fd40:	pop	{r4, pc}
   1fd44:	mov	r2, #5
   1fd48:	ldr	r1, [pc, #44]	; 1fd7c <g_strcmp0@plt+0x9144>
   1fd4c:	mov	r0, #0
   1fd50:	b	16530 <dcgettext@plt>
   1fd54:	mov	r2, #5
   1fd58:	ldr	r1, [pc, #32]	; 1fd80 <g_strcmp0@plt+0x9148>
   1fd5c:	mov	r0, #0
   1fd60:	b	16530 <dcgettext@plt>
   1fd64:	mov	r2, #5
   1fd68:	ldr	r1, [pc, #20]	; 1fd84 <g_strcmp0@plt+0x914c>
   1fd6c:	mov	r0, #0
   1fd70:	b	16530 <dcgettext@plt>
   1fd74:	andeq	sl, r2, r4, lsl #11
   1fd78:	andeq	r6, r2, r0, ror #4
   1fd7c:	andeq	sl, r2, r0, ror r5
   1fd80:	andeq	sl, r2, r8, ror #10
   1fd84:	andeq	sl, r2, ip, ror r5
   1fd88:	cmp	r0, #35	; 0x23
   1fd8c:	ldrls	pc, [pc, r0, lsl #2]
   1fd90:	b	20064 <g_strcmp0@plt+0x942c>
   1fd94:	andeq	r0, r2, r4, asr r0
   1fd98:	andeq	r0, r2, r4, asr #32
   1fd9c:	andeq	r0, r2, r4, lsr r0
   1fda0:	andeq	r0, r2, r4, lsr #32
   1fda4:	andeq	r0, r2, r4, lsl r0
   1fda8:	andeq	r0, r2, r4
   1fdac:	strdeq	pc, [r1], -r4
   1fdb0:	andeq	pc, r1, r4, ror #31
   1fdb4:	ldrdeq	pc, [r1], -r4
   1fdb8:	andeq	pc, r1, r4, asr #31
   1fdbc:			; <UNDEFINED> instruction: 0x0001ffb4
   1fdc0:	andeq	pc, r1, r4, lsr #31
   1fdc4:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1fdc8:	andeq	pc, r1, r4, lsl #31
   1fdcc:	andeq	pc, r1, r4, ror pc	; <UNPREDICTABLE>
   1fdd0:	andeq	pc, r1, r4, ror #30
   1fdd4:	andeq	pc, r1, r4, asr pc	; <UNPREDICTABLE>
   1fdd8:	andeq	pc, r1, r4, asr #30
   1fddc:	andeq	pc, r1, r4, lsr pc	; <UNPREDICTABLE>
   1fde0:	andeq	pc, r1, r4, lsr #30
   1fde4:	andeq	pc, r1, r4, lsl pc	; <UNPREDICTABLE>
   1fde8:	andeq	pc, r1, r4, lsl #30
   1fdec:	strdeq	pc, [r1], -r4
   1fdf0:	andeq	pc, r1, r4, ror #29
   1fdf4:	ldrdeq	pc, [r1], -r4
   1fdf8:	andeq	pc, r1, r4, asr #29
   1fdfc:			; <UNDEFINED> instruction: 0x0001feb4
   1fe00:	andeq	pc, r1, r4, lsr #29
   1fe04:	muleq	r1, r4, lr
   1fe08:	andeq	pc, r1, r4, lsl #29
   1fe0c:	andeq	pc, r1, r4, ror lr	; <UNPREDICTABLE>
   1fe10:	andeq	pc, r1, r4, ror #28
   1fe14:	andeq	pc, r1, r4, asr lr	; <UNPREDICTABLE>
   1fe18:	andeq	pc, r1, r4, asr #28
   1fe1c:	andeq	pc, r1, r4, lsr lr	; <UNPREDICTABLE>
   1fe20:	andeq	pc, r1, r4, lsr #28
   1fe24:	mov	r2, #5
   1fe28:	ldr	r1, [pc, #600]	; 20088 <g_strcmp0@plt+0x9450>
   1fe2c:	mov	r0, #0
   1fe30:	b	16530 <dcgettext@plt>
   1fe34:	mov	r2, #5
   1fe38:	ldr	r1, [pc, #588]	; 2008c <g_strcmp0@plt+0x9454>
   1fe3c:	mov	r0, #0
   1fe40:	b	16530 <dcgettext@plt>
   1fe44:	mov	r2, #5
   1fe48:	ldr	r1, [pc, #576]	; 20090 <g_strcmp0@plt+0x9458>
   1fe4c:	mov	r0, #0
   1fe50:	b	16530 <dcgettext@plt>
   1fe54:	mov	r2, #5
   1fe58:	ldr	r1, [pc, #564]	; 20094 <g_strcmp0@plt+0x945c>
   1fe5c:	mov	r0, #0
   1fe60:	b	16530 <dcgettext@plt>
   1fe64:	mov	r2, #5
   1fe68:	ldr	r1, [pc, #552]	; 20098 <g_strcmp0@plt+0x9460>
   1fe6c:	mov	r0, #0
   1fe70:	b	16530 <dcgettext@plt>
   1fe74:	mov	r2, #5
   1fe78:	ldr	r1, [pc, #540]	; 2009c <g_strcmp0@plt+0x9464>
   1fe7c:	mov	r0, #0
   1fe80:	b	16530 <dcgettext@plt>
   1fe84:	mov	r2, #5
   1fe88:	ldr	r1, [pc, #528]	; 200a0 <g_strcmp0@plt+0x9468>
   1fe8c:	mov	r0, #0
   1fe90:	b	16530 <dcgettext@plt>
   1fe94:	mov	r2, #5
   1fe98:	ldr	r1, [pc, #516]	; 200a4 <g_strcmp0@plt+0x946c>
   1fe9c:	mov	r0, #0
   1fea0:	b	16530 <dcgettext@plt>
   1fea4:	mov	r2, #5
   1fea8:	ldr	r1, [pc, #504]	; 200a8 <g_strcmp0@plt+0x9470>
   1feac:	mov	r0, #0
   1feb0:	b	16530 <dcgettext@plt>
   1feb4:	mov	r2, #5
   1feb8:	ldr	r1, [pc, #492]	; 200ac <g_strcmp0@plt+0x9474>
   1febc:	mov	r0, #0
   1fec0:	b	16530 <dcgettext@plt>
   1fec4:	mov	r2, #5
   1fec8:	ldr	r1, [pc, #480]	; 200b0 <g_strcmp0@plt+0x9478>
   1fecc:	mov	r0, #0
   1fed0:	b	16530 <dcgettext@plt>
   1fed4:	mov	r2, #5
   1fed8:	ldr	r1, [pc, #468]	; 200b4 <g_strcmp0@plt+0x947c>
   1fedc:	mov	r0, #0
   1fee0:	b	16530 <dcgettext@plt>
   1fee4:	mov	r2, #5
   1fee8:	ldr	r1, [pc, #456]	; 200b8 <g_strcmp0@plt+0x9480>
   1feec:	mov	r0, #0
   1fef0:	b	16530 <dcgettext@plt>
   1fef4:	mov	r2, #5
   1fef8:	ldr	r1, [pc, #444]	; 200bc <g_strcmp0@plt+0x9484>
   1fefc:	mov	r0, #0
   1ff00:	b	16530 <dcgettext@plt>
   1ff04:	mov	r2, #5
   1ff08:	ldr	r1, [pc, #432]	; 200c0 <g_strcmp0@plt+0x9488>
   1ff0c:	mov	r0, #0
   1ff10:	b	16530 <dcgettext@plt>
   1ff14:	mov	r2, #5
   1ff18:	ldr	r1, [pc, #420]	; 200c4 <g_strcmp0@plt+0x948c>
   1ff1c:	mov	r0, #0
   1ff20:	b	16530 <dcgettext@plt>
   1ff24:	mov	r2, #5
   1ff28:	ldr	r1, [pc, #408]	; 200c8 <g_strcmp0@plt+0x9490>
   1ff2c:	mov	r0, #0
   1ff30:	b	16530 <dcgettext@plt>
   1ff34:	mov	r2, #5
   1ff38:	ldr	r1, [pc, #396]	; 200cc <g_strcmp0@plt+0x9494>
   1ff3c:	mov	r0, #0
   1ff40:	b	16530 <dcgettext@plt>
   1ff44:	mov	r2, #5
   1ff48:	ldr	r1, [pc, #384]	; 200d0 <g_strcmp0@plt+0x9498>
   1ff4c:	mov	r0, #0
   1ff50:	b	16530 <dcgettext@plt>
   1ff54:	mov	r2, #5
   1ff58:	ldr	r1, [pc, #372]	; 200d4 <g_strcmp0@plt+0x949c>
   1ff5c:	mov	r0, #0
   1ff60:	b	16530 <dcgettext@plt>
   1ff64:	mov	r2, #5
   1ff68:	ldr	r1, [pc, #360]	; 200d8 <g_strcmp0@plt+0x94a0>
   1ff6c:	mov	r0, #0
   1ff70:	b	16530 <dcgettext@plt>
   1ff74:	mov	r2, #5
   1ff78:	ldr	r1, [pc, #348]	; 200dc <g_strcmp0@plt+0x94a4>
   1ff7c:	mov	r0, #0
   1ff80:	b	16530 <dcgettext@plt>
   1ff84:	mov	r2, #5
   1ff88:	ldr	r1, [pc, #336]	; 200e0 <g_strcmp0@plt+0x94a8>
   1ff8c:	mov	r0, #0
   1ff90:	b	16530 <dcgettext@plt>
   1ff94:	mov	r2, #5
   1ff98:	ldr	r1, [pc, #324]	; 200e4 <g_strcmp0@plt+0x94ac>
   1ff9c:	mov	r0, #0
   1ffa0:	b	16530 <dcgettext@plt>
   1ffa4:	mov	r2, #5
   1ffa8:	ldr	r1, [pc, #312]	; 200e8 <g_strcmp0@plt+0x94b0>
   1ffac:	mov	r0, #0
   1ffb0:	b	16530 <dcgettext@plt>
   1ffb4:	mov	r2, #5
   1ffb8:	ldr	r1, [pc, #300]	; 200ec <g_strcmp0@plt+0x94b4>
   1ffbc:	mov	r0, #0
   1ffc0:	b	16530 <dcgettext@plt>
   1ffc4:	mov	r2, #5
   1ffc8:	ldr	r1, [pc, #288]	; 200f0 <g_strcmp0@plt+0x94b8>
   1ffcc:	mov	r0, #0
   1ffd0:	b	16530 <dcgettext@plt>
   1ffd4:	mov	r2, #5
   1ffd8:	ldr	r1, [pc, #276]	; 200f4 <g_strcmp0@plt+0x94bc>
   1ffdc:	mov	r0, #0
   1ffe0:	b	16530 <dcgettext@plt>
   1ffe4:	mov	r2, #5
   1ffe8:	ldr	r1, [pc, #264]	; 200f8 <g_strcmp0@plt+0x94c0>
   1ffec:	mov	r0, #0
   1fff0:	b	16530 <dcgettext@plt>
   1fff4:	mov	r2, #5
   1fff8:	ldr	r1, [pc, #252]	; 200fc <g_strcmp0@plt+0x94c4>
   1fffc:	mov	r0, #0
   20000:	b	16530 <dcgettext@plt>
   20004:	mov	r2, #5
   20008:	ldr	r1, [pc, #240]	; 20100 <g_strcmp0@plt+0x94c8>
   2000c:	mov	r0, #0
   20010:	b	16530 <dcgettext@plt>
   20014:	mov	r2, #5
   20018:	ldr	r1, [pc, #228]	; 20104 <g_strcmp0@plt+0x94cc>
   2001c:	mov	r0, #0
   20020:	b	16530 <dcgettext@plt>
   20024:	mov	r2, #5
   20028:	ldr	r1, [pc, #216]	; 20108 <g_strcmp0@plt+0x94d0>
   2002c:	mov	r0, #0
   20030:	b	16530 <dcgettext@plt>
   20034:	mov	r2, #5
   20038:	ldr	r1, [pc, #204]	; 2010c <g_strcmp0@plt+0x94d4>
   2003c:	mov	r0, #0
   20040:	b	16530 <dcgettext@plt>
   20044:	mov	r2, #5
   20048:	ldr	r1, [pc, #192]	; 20110 <g_strcmp0@plt+0x94d8>
   2004c:	mov	r0, #0
   20050:	b	16530 <dcgettext@plt>
   20054:	mov	r2, #5
   20058:	ldr	r1, [pc, #180]	; 20114 <g_strcmp0@plt+0x94dc>
   2005c:	mov	r0, #0
   20060:	b	16530 <dcgettext@plt>
   20064:	push	{r4, lr}
   20068:	bl	15e40 <pk_status_enum_to_string@plt>
   2006c:	ldr	r2, [pc, #164]	; 20118 <g_strcmp0@plt+0x94e0>
   20070:	mov	r1, #16
   20074:	mov	r3, r0
   20078:	ldr	r0, [pc, #156]	; 2011c <g_strcmp0@plt+0x94e4>
   2007c:	bl	15dec <g_log@plt>
   20080:	mov	r0, #0
   20084:	pop	{r4, pc}
   20088:	ldrdeq	sl, [r2], -r8
   2008c:			; <UNDEFINED> instruction: 0x0002a8b0
   20090:	andeq	sl, r2, r4, lsl #17
   20094:	andeq	sl, r2, r8, asr r8
   20098:	andeq	sl, r2, ip, lsr r8
   2009c:	andeq	sl, r2, r8, lsl r8
   200a0:	strdeq	sl, [r2], -ip
   200a4:	ldrdeq	sl, [r2], -ip
   200a8:	andeq	sl, r2, ip, asr #15
   200ac:			; <UNDEFINED> instruction: 0x0002a7b8
   200b0:	muleq	r2, r8, r7
   200b4:	andeq	sl, r2, r4, lsl #15
   200b8:	andeq	sl, r2, r4, ror #14
   200bc:	andeq	sl, r2, ip, asr #14
   200c0:	andeq	sl, r2, ip, lsr #14
   200c4:	andeq	sl, r2, r8, lsl #14
   200c8:	strdeq	sl, [r2], -ip
   200cc:	strdeq	sl, [r2], -r0
   200d0:	andeq	sl, r2, r0, ror #13
   200d4:	andeq	sl, r2, ip, asr #13
   200d8:			; <UNDEFINED> instruction: 0x0002a6bc
   200dc:	andeq	sl, r2, r8, lsr #13
   200e0:	muleq	r2, r0, r6
   200e4:	andeq	sl, r2, ip, ror r6
   200e8:	andeq	sl, r2, r4, ror #12
   200ec:	andeq	sl, r2, r0, asr r6
   200f0:	andeq	sl, r2, r0, lsr #12
   200f4:	andeq	sl, r2, r8, lsl #12
   200f8:	andeq	sl, r2, r4, lsr r6
   200fc:	strdeq	sl, [r2], -r4
   20100:	andeq	sl, r2, r0, ror #11
   20104:	ldrdeq	sl, [r2], -r4
   20108:	andeq	sl, r2, ip, asr #11
   2010c:	andeq	sl, r2, ip, lsr #11
   20110:			; <UNDEFINED> instruction: 0x0002a5b8
   20114:	muleq	r2, ip, r5
   20118:	andeq	sl, r2, r8, ror #17
   2011c:	andeq	r6, r2, r0, ror #4
   20120:	sub	r3, r0, #3
   20124:	push	{r4, lr}
   20128:	mov	r4, r1
   2012c:	sub	sp, sp, #8
   20130:	cmp	r3, #6
   20134:	ldrls	pc, [pc, r3, lsl #2]
   20138:	b	20214 <g_strcmp0@plt+0x95dc>
   2013c:	andeq	r0, r2, r4, lsl #3
   20140:	muleq	r2, ip, r1
   20144:			; <UNDEFINED> instruction: 0x000201b4
   20148:	andeq	r0, r2, ip, asr #3
   2014c:	andeq	r0, r2, r4, ror #3
   20150:	strdeq	r0, [r2], -ip
   20154:	andeq	r0, r2, r8, asr r1
   20158:	mov	r3, #5
   2015c:	str	r3, [sp]
   20160:	ldr	r2, [pc, #208]	; 20238 <g_strcmp0@plt+0x9600>
   20164:	mov	r3, r1
   20168:	ldr	r1, [pc, #204]	; 2023c <g_strcmp0@plt+0x9604>
   2016c:	mov	r0, #0
   20170:	bl	160f8 <dcngettext@plt>
   20174:	mov	r1, r4
   20178:	add	sp, sp, #8
   2017c:	pop	{r4, lr}
   20180:	b	160e0 <g_strdup_printf@plt>
   20184:	mov	r3, #5
   20188:	str	r3, [sp]
   2018c:	ldr	r2, [pc, #172]	; 20240 <g_strcmp0@plt+0x9608>
   20190:	mov	r3, r1
   20194:	ldr	r1, [pc, #168]	; 20244 <g_strcmp0@plt+0x960c>
   20198:	b	2016c <g_strcmp0@plt+0x9534>
   2019c:	mov	r3, #5
   201a0:	str	r3, [sp]
   201a4:	ldr	r2, [pc, #156]	; 20248 <g_strcmp0@plt+0x9610>
   201a8:	mov	r3, r1
   201ac:	ldr	r1, [pc, #152]	; 2024c <g_strcmp0@plt+0x9614>
   201b0:	b	2016c <g_strcmp0@plt+0x9534>
   201b4:	mov	r3, #5
   201b8:	str	r3, [sp]
   201bc:	ldr	r2, [pc, #140]	; 20250 <g_strcmp0@plt+0x9618>
   201c0:	mov	r3, r1
   201c4:	ldr	r1, [pc, #136]	; 20254 <g_strcmp0@plt+0x961c>
   201c8:	b	2016c <g_strcmp0@plt+0x9534>
   201cc:	mov	r3, #5
   201d0:	str	r3, [sp]
   201d4:	ldr	r2, [pc, #124]	; 20258 <g_strcmp0@plt+0x9620>
   201d8:	mov	r3, r1
   201dc:	ldr	r1, [pc, #120]	; 2025c <g_strcmp0@plt+0x9624>
   201e0:	b	2016c <g_strcmp0@plt+0x9534>
   201e4:	mov	r3, #5
   201e8:	str	r3, [sp]
   201ec:	ldr	r2, [pc, #108]	; 20260 <g_strcmp0@plt+0x9628>
   201f0:	mov	r3, r1
   201f4:	ldr	r1, [pc, #104]	; 20264 <g_strcmp0@plt+0x962c>
   201f8:	b	2016c <g_strcmp0@plt+0x9534>
   201fc:	mov	r3, #5
   20200:	str	r3, [sp]
   20204:	ldr	r2, [pc, #92]	; 20268 <g_strcmp0@plt+0x9630>
   20208:	mov	r3, r1
   2020c:	ldr	r1, [pc, #88]	; 2026c <g_strcmp0@plt+0x9634>
   20210:	b	2016c <g_strcmp0@plt+0x9534>
   20214:	bl	16860 <pk_info_enum_to_string@plt>
   20218:	ldr	r2, [pc, #80]	; 20270 <g_strcmp0@plt+0x9638>
   2021c:	mov	r1, #16
   20220:	mov	r3, r0
   20224:	ldr	r0, [pc, #72]	; 20274 <g_strcmp0@plt+0x963c>
   20228:	bl	15dec <g_log@plt>
   2022c:	mov	r0, #0
   20230:	add	sp, sp, #8
   20234:	pop	{r4, pc}
   20238:	andeq	sl, r2, ip, ror #19
   2023c:	andeq	sl, r2, r0, lsl #20
   20240:	andeq	sl, r2, r0, lsl #18
   20244:	andeq	sl, r2, r4, lsl r9
   20248:			; <UNDEFINED> instruction: 0x0002a9bc
   2024c:	ldrdeq	sl, [r2], -r4
   20250:	andeq	sl, r2, r8, lsr #18
   20254:	andeq	sl, r2, r4, lsr r9
   20258:	muleq	r2, r4, r9
   2025c:	andeq	sl, r2, r8, lsr #19
   20260:	andeq	sl, r2, r0, asr #18
   20264:	andeq	sl, r2, r8, asr r9
   20268:	andeq	sl, r2, ip, ror #18
   2026c:	andeq	sl, r2, r0, lsl #19
   20270:	andeq	sl, r2, r4, lsl sl
   20274:	andeq	r6, r2, r0, ror #4
   20278:	sub	r3, r0, #1
   2027c:	cmp	r3, #23
   20280:	ldrls	pc, [pc, r3, lsl #2]
   20284:	b	20398 <g_strcmp0@plt+0x9760>
   20288:	strdeq	r0, [r2], -r8
   2028c:	andeq	r0, r2, r8, lsl #6
   20290:	andeq	r0, r2, r8, lsl r3
   20294:	andeq	r0, r2, r8, lsr #6
   20298:	andeq	r0, r2, r8, lsr r3
   2029c:	andeq	r0, r2, r8, asr #6
   202a0:	andeq	r0, r2, r8, asr r3
   202a4:	andeq	r0, r2, r8, ror #6
   202a8:	andeq	r0, r2, r8, ror r3
   202ac:	muleq	r2, r8, r3
   202b0:	muleq	r2, r8, r3
   202b4:	muleq	r2, r8, r3
   202b8:	muleq	r2, r8, r3
   202bc:	muleq	r2, r8, r3
   202c0:	muleq	r2, r8, r3
   202c4:	strdeq	r0, [r2], -r8
   202c8:	andeq	r0, r2, r8, lsl #6
   202cc:	muleq	r2, r8, r3
   202d0:	muleq	r2, r8, r3
   202d4:	muleq	r2, r8, r3
   202d8:	muleq	r2, r8, r3
   202dc:	muleq	r2, r8, r3
   202e0:	andeq	r0, r2, r8, lsl #7
   202e4:	andeq	r0, r2, r8, ror #5
   202e8:	mov	r2, #5
   202ec:	ldr	r1, [pc, #200]	; 203bc <g_strcmp0@plt+0x9784>
   202f0:	mov	r0, #0
   202f4:	b	16530 <dcgettext@plt>
   202f8:	mov	r2, #5
   202fc:	ldr	r1, [pc, #188]	; 203c0 <g_strcmp0@plt+0x9788>
   20300:	mov	r0, #0
   20304:	b	16530 <dcgettext@plt>
   20308:	mov	r2, #5
   2030c:	ldr	r1, [pc, #176]	; 203c4 <g_strcmp0@plt+0x978c>
   20310:	mov	r0, #0
   20314:	b	16530 <dcgettext@plt>
   20318:	mov	r2, #5
   2031c:	ldr	r1, [pc, #164]	; 203c8 <g_strcmp0@plt+0x9790>
   20320:	mov	r0, #0
   20324:	b	16530 <dcgettext@plt>
   20328:	mov	r2, #5
   2032c:	ldr	r1, [pc, #152]	; 203cc <g_strcmp0@plt+0x9794>
   20330:	mov	r0, #0
   20334:	b	16530 <dcgettext@plt>
   20338:	mov	r2, #5
   2033c:	ldr	r1, [pc, #140]	; 203d0 <g_strcmp0@plt+0x9798>
   20340:	mov	r0, #0
   20344:	b	16530 <dcgettext@plt>
   20348:	mov	r2, #5
   2034c:	ldr	r1, [pc, #128]	; 203d4 <g_strcmp0@plt+0x979c>
   20350:	mov	r0, #0
   20354:	b	16530 <dcgettext@plt>
   20358:	mov	r2, #5
   2035c:	ldr	r1, [pc, #116]	; 203d8 <g_strcmp0@plt+0x97a0>
   20360:	mov	r0, #0
   20364:	b	16530 <dcgettext@plt>
   20368:	mov	r2, #5
   2036c:	ldr	r1, [pc, #104]	; 203dc <g_strcmp0@plt+0x97a4>
   20370:	mov	r0, #0
   20374:	b	16530 <dcgettext@plt>
   20378:	mov	r2, #5
   2037c:	ldr	r1, [pc, #92]	; 203e0 <g_strcmp0@plt+0x97a8>
   20380:	mov	r0, #0
   20384:	b	16530 <dcgettext@plt>
   20388:	mov	r2, #5
   2038c:	ldr	r1, [pc, #80]	; 203e4 <g_strcmp0@plt+0x97ac>
   20390:	mov	r0, #0
   20394:	b	16530 <dcgettext@plt>
   20398:	push	{r4, lr}
   2039c:	bl	16860 <pk_info_enum_to_string@plt>
   203a0:	ldr	r2, [pc, #64]	; 203e8 <g_strcmp0@plt+0x97b0>
   203a4:	mov	r1, #16
   203a8:	mov	r3, r0
   203ac:	ldr	r0, [pc, #56]	; 203ec <g_strcmp0@plt+0x97b4>
   203b0:	bl	15dec <g_log@plt>
   203b4:	mov	r0, #0
   203b8:	pop	{r4, pc}
   203bc:	andeq	sl, r2, r4, asr #21
   203c0:	andeq	sl, r2, ip, lsr #21
   203c4:			; <UNDEFINED> instruction: 0x0002aab8
   203c8:	andeq	sl, r2, r4, lsr sl
   203cc:	andeq	sl, r2, r8, lsl #21
   203d0:	andeq	sl, r2, r4, asr #20
   203d4:	andeq	sl, r2, r8, ror sl
   203d8:	andeq	sl, r2, r4, asr sl
   203dc:	andeq	sl, r2, r8, ror #20
   203e0:	muleq	r2, ip, sl
   203e4:	andeq	sl, r2, ip, asr #21
   203e8:	ldrdeq	sl, [r2], -r8
   203ec:	andeq	r6, r2, r0, ror #4
   203f0:	sub	r3, r0, #10
   203f4:	cmp	r3, #12
   203f8:	ldrls	pc, [pc, r3, lsl #2]
   203fc:	b	204c4 <g_strcmp0@plt+0x988c>
   20400:	andeq	r0, r2, r4, asr #8
   20404:	andeq	r0, r2, r4, asr r4
   20408:	andeq	r0, r2, r4, ror #8
   2040c:	andeq	r0, r2, r4, ror r4
   20410:	andeq	r0, r2, r4, lsl #9
   20414:	muleq	r2, r4, r4
   20418:	andeq	r0, r2, r4, asr #9
   2041c:	andeq	r0, r2, r4, asr #9
   20420:	andeq	r0, r2, r4, asr #9
   20424:	andeq	r0, r2, r4, lsr #9
   20428:	andeq	r0, r2, r4, asr #9
   2042c:			; <UNDEFINED> instruction: 0x000204b4
   20430:	andeq	r0, r2, r4, lsr r4
   20434:	mov	r2, #5
   20438:	ldr	r1, [pc, #168]	; 204e8 <g_strcmp0@plt+0x98b0>
   2043c:	mov	r0, #0
   20440:	b	16530 <dcgettext@plt>
   20444:	mov	r2, #5
   20448:	ldr	r1, [pc, #156]	; 204ec <g_strcmp0@plt+0x98b4>
   2044c:	mov	r0, #0
   20450:	b	16530 <dcgettext@plt>
   20454:	mov	r2, #5
   20458:	ldr	r1, [pc, #144]	; 204f0 <g_strcmp0@plt+0x98b8>
   2045c:	mov	r0, #0
   20460:	b	16530 <dcgettext@plt>
   20464:	mov	r2, #5
   20468:	ldr	r1, [pc, #132]	; 204f4 <g_strcmp0@plt+0x98bc>
   2046c:	mov	r0, #0
   20470:	b	16530 <dcgettext@plt>
   20474:	mov	r2, #5
   20478:	ldr	r1, [pc, #120]	; 204f8 <g_strcmp0@plt+0x98c0>
   2047c:	mov	r0, #0
   20480:	b	16530 <dcgettext@plt>
   20484:	mov	r2, #5
   20488:	ldr	r1, [pc, #108]	; 204fc <g_strcmp0@plt+0x98c4>
   2048c:	mov	r0, #0
   20490:	b	16530 <dcgettext@plt>
   20494:	mov	r2, #5
   20498:	ldr	r1, [pc, #96]	; 20500 <g_strcmp0@plt+0x98c8>
   2049c:	mov	r0, #0
   204a0:	b	16530 <dcgettext@plt>
   204a4:	mov	r2, #5
   204a8:	ldr	r1, [pc, #84]	; 20504 <g_strcmp0@plt+0x98cc>
   204ac:	mov	r0, #0
   204b0:	b	16530 <dcgettext@plt>
   204b4:	mov	r2, #5
   204b8:	ldr	r1, [pc, #72]	; 20508 <g_strcmp0@plt+0x98d0>
   204bc:	mov	r0, #0
   204c0:	b	16530 <dcgettext@plt>
   204c4:	push	{r4, lr}
   204c8:	bl	16860 <pk_info_enum_to_string@plt>
   204cc:	ldr	r2, [pc, #56]	; 2050c <g_strcmp0@plt+0x98d4>
   204d0:	mov	r1, #16
   204d4:	mov	r3, r0
   204d8:	ldr	r0, [pc, #48]	; 20510 <g_strcmp0@plt+0x98d8>
   204dc:	bl	15dec <g_log@plt>
   204e0:	mov	r0, #0
   204e4:	pop	{r4, pc}
   204e8:	andeq	sl, r2, r4, asr fp
   204ec:	strdeq	sl, [r2], -r0
   204f0:	strdeq	sl, [r2], -ip
   204f4:	andeq	sl, r2, r8, lsl #22
   204f8:	andeq	sl, r2, r4, lsl fp
   204fc:	andeq	sl, r2, r0, lsr #22
   20500:	andeq	sl, r2, ip, lsr #22
   20504:	andeq	sl, r2, r8, lsr fp
   20508:	andeq	sl, r2, r8, asr #22
   2050c:	ldrdeq	sl, [r2], -r8
   20510:	andeq	r6, r2, r0, ror #4
   20514:	sub	r3, r0, #10
   20518:	cmp	r3, #12
   2051c:	ldrls	pc, [pc, r3, lsl #2]
   20520:	b	205e8 <g_strcmp0@plt+0x99b0>
   20524:	andeq	r0, r2, r8, ror #10
   20528:	andeq	r0, r2, r8, ror r5
   2052c:	andeq	r0, r2, r8, lsl #11
   20530:	muleq	r2, r8, r5
   20534:	andeq	r0, r2, r8, lsr #11
   20538:			; <UNDEFINED> instruction: 0x000205b8
   2053c:	andeq	r0, r2, r8, ror #11
   20540:	andeq	r0, r2, r8, ror #11
   20544:	andeq	r0, r2, r8, ror #11
   20548:	andeq	r0, r2, r8, asr #11
   2054c:	andeq	r0, r2, r8, ror #11
   20550:	ldrdeq	r0, [r2], -r8
   20554:	andeq	r0, r2, r8, asr r5
   20558:	mov	r2, #5
   2055c:	ldr	r1, [pc, #168]	; 2060c <g_strcmp0@plt+0x99d4>
   20560:	mov	r0, #0
   20564:	b	16530 <dcgettext@plt>
   20568:	mov	r2, #5
   2056c:	ldr	r1, [pc, #156]	; 20610 <g_strcmp0@plt+0x99d8>
   20570:	mov	r0, #0
   20574:	b	16530 <dcgettext@plt>
   20578:	mov	r2, #5
   2057c:	ldr	r1, [pc, #144]	; 20614 <g_strcmp0@plt+0x99dc>
   20580:	mov	r0, #0
   20584:	b	16530 <dcgettext@plt>
   20588:	mov	r2, #5
   2058c:	ldr	r1, [pc, #132]	; 20618 <g_strcmp0@plt+0x99e0>
   20590:	mov	r0, #0
   20594:	b	16530 <dcgettext@plt>
   20598:	mov	r2, #5
   2059c:	ldr	r1, [pc, #120]	; 2061c <g_strcmp0@plt+0x99e4>
   205a0:	mov	r0, #0
   205a4:	b	16530 <dcgettext@plt>
   205a8:	mov	r2, #5
   205ac:	ldr	r1, [pc, #108]	; 20620 <g_strcmp0@plt+0x99e8>
   205b0:	mov	r0, #0
   205b4:	b	16530 <dcgettext@plt>
   205b8:	mov	r2, #5
   205bc:	ldr	r1, [pc, #96]	; 20624 <g_strcmp0@plt+0x99ec>
   205c0:	mov	r0, #0
   205c4:	b	16530 <dcgettext@plt>
   205c8:	mov	r2, #5
   205cc:	ldr	r1, [pc, #84]	; 20628 <g_strcmp0@plt+0x99f0>
   205d0:	mov	r0, #0
   205d4:	b	16530 <dcgettext@plt>
   205d8:	mov	r2, #5
   205dc:	ldr	r1, [pc, #72]	; 2062c <g_strcmp0@plt+0x99f4>
   205e0:	mov	r0, #0
   205e4:	b	16530 <dcgettext@plt>
   205e8:	push	{r4, lr}
   205ec:	bl	16860 <pk_info_enum_to_string@plt>
   205f0:	ldr	r2, [pc, #56]	; 20630 <g_strcmp0@plt+0x99f8>
   205f4:	mov	r1, #16
   205f8:	mov	r3, r0
   205fc:	ldr	r0, [pc, #48]	; 20634 <g_strcmp0@plt+0x99fc>
   20600:	bl	15dec <g_log@plt>
   20604:	mov	r0, #0
   20608:	pop	{r4, pc}
   2060c:			; <UNDEFINED> instruction: 0x0002abb0
   20610:	andeq	sl, r2, r4, ror #22
   20614:	andeq	sl, r2, r0, ror fp
   20618:	andeq	sl, r2, ip, lsr #21
   2061c:	andeq	sl, r2, r8, ror fp
   20620:	andeq	sl, r2, r0, lsl #23
   20624:	andeq	sl, r2, ip, lsl #23
   20628:	muleq	r2, r8, fp
   2062c:	andeq	sl, r2, r4, lsr #23
   20630:	ldrdeq	sl, [r2], -r8
   20634:	andeq	r6, r2, r0, ror #4
   20638:	cmp	r0, #32
   2063c:	ldrls	pc, [pc, r0, lsl #2]
   20640:	b	208b8 <g_strcmp0@plt+0x9c80>
   20644:	andeq	r0, r2, r8, lsr #17
   20648:	muleq	r2, r8, r8
   2064c:	andeq	r0, r2, r8, lsl #17
   20650:	andeq	r0, r2, r8, ror r8
   20654:	andeq	r0, r2, r8, ror #16
   20658:	andeq	r0, r2, r8, asr r8
   2065c:	andeq	r0, r2, r8, asr #16
   20660:	andeq	r0, r2, r8, lsr r8
   20664:	andeq	r0, r2, r8, lsr #16
   20668:	andeq	r0, r2, r8, lsl r8
   2066c:	andeq	r0, r2, r8, lsl #16
   20670:	strdeq	r0, [r2], -r8
   20674:	andeq	r0, r2, r8, ror #15
   20678:	ldrdeq	r0, [r2], -r8
   2067c:	andeq	r0, r2, r8, asr #15
   20680:			; <UNDEFINED> instruction: 0x000207b8
   20684:	andeq	r0, r2, r8, lsr #15
   20688:	muleq	r2, r8, r7
   2068c:	andeq	r0, r2, r8, lsl #15
   20690:	andeq	r0, r2, r8, ror r7
   20694:	andeq	r0, r2, r8, ror #14
   20698:	andeq	r0, r2, r8, asr r7
   2069c:	andeq	r0, r2, r8, asr #14
   206a0:	andeq	r0, r2, r8, lsr r7
   206a4:	andeq	r0, r2, r8, lsr #14
   206a8:	andeq	r0, r2, r8, lsl r7
   206ac:	andeq	r0, r2, r8, lsl #14
   206b0:	strdeq	r0, [r2], -r8
   206b4:	andeq	r0, r2, r8, ror #13
   206b8:	ldrdeq	r0, [r2], -r8
   206bc:	andeq	r0, r2, r8, ror r8
   206c0:	andeq	r0, r2, r8, ror #16
   206c4:	andeq	r0, r2, r8, asr #13
   206c8:	mov	r2, #5
   206cc:	ldr	r1, [pc, #520]	; 208dc <g_strcmp0@plt+0x9ca4>
   206d0:	mov	r0, #0
   206d4:	b	16530 <dcgettext@plt>
   206d8:	mov	r2, #5
   206dc:	ldr	r1, [pc, #508]	; 208e0 <g_strcmp0@plt+0x9ca8>
   206e0:	mov	r0, #0
   206e4:	b	16530 <dcgettext@plt>
   206e8:	mov	r2, #5
   206ec:	ldr	r1, [pc, #496]	; 208e4 <g_strcmp0@plt+0x9cac>
   206f0:	mov	r0, #0
   206f4:	b	16530 <dcgettext@plt>
   206f8:	mov	r2, #5
   206fc:	ldr	r1, [pc, #484]	; 208e8 <g_strcmp0@plt+0x9cb0>
   20700:	mov	r0, #0
   20704:	b	16530 <dcgettext@plt>
   20708:	mov	r2, #5
   2070c:	ldr	r1, [pc, #472]	; 208ec <g_strcmp0@plt+0x9cb4>
   20710:	mov	r0, #0
   20714:	b	16530 <dcgettext@plt>
   20718:	mov	r2, #5
   2071c:	ldr	r1, [pc, #460]	; 208f0 <g_strcmp0@plt+0x9cb8>
   20720:	mov	r0, #0
   20724:	b	16530 <dcgettext@plt>
   20728:	mov	r2, #5
   2072c:	ldr	r1, [pc, #448]	; 208f4 <g_strcmp0@plt+0x9cbc>
   20730:	mov	r0, #0
   20734:	b	16530 <dcgettext@plt>
   20738:	mov	r2, #5
   2073c:	ldr	r1, [pc, #436]	; 208f8 <g_strcmp0@plt+0x9cc0>
   20740:	mov	r0, #0
   20744:	b	16530 <dcgettext@plt>
   20748:	mov	r2, #5
   2074c:	ldr	r1, [pc, #424]	; 208fc <g_strcmp0@plt+0x9cc4>
   20750:	mov	r0, #0
   20754:	b	16530 <dcgettext@plt>
   20758:	mov	r2, #5
   2075c:	ldr	r1, [pc, #412]	; 20900 <g_strcmp0@plt+0x9cc8>
   20760:	mov	r0, #0
   20764:	b	16530 <dcgettext@plt>
   20768:	mov	r2, #5
   2076c:	ldr	r1, [pc, #400]	; 20904 <g_strcmp0@plt+0x9ccc>
   20770:	mov	r0, #0
   20774:	b	16530 <dcgettext@plt>
   20778:	mov	r2, #5
   2077c:	ldr	r1, [pc, #388]	; 20908 <g_strcmp0@plt+0x9cd0>
   20780:	mov	r0, #0
   20784:	b	16530 <dcgettext@plt>
   20788:	mov	r2, #5
   2078c:	ldr	r1, [pc, #376]	; 2090c <g_strcmp0@plt+0x9cd4>
   20790:	mov	r0, #0
   20794:	b	16530 <dcgettext@plt>
   20798:	mov	r2, #5
   2079c:	ldr	r1, [pc, #364]	; 20910 <g_strcmp0@plt+0x9cd8>
   207a0:	mov	r0, #0
   207a4:	b	16530 <dcgettext@plt>
   207a8:	mov	r2, #5
   207ac:	ldr	r1, [pc, #352]	; 20914 <g_strcmp0@plt+0x9cdc>
   207b0:	mov	r0, #0
   207b4:	b	16530 <dcgettext@plt>
   207b8:	mov	r2, #5
   207bc:	ldr	r1, [pc, #340]	; 20918 <g_strcmp0@plt+0x9ce0>
   207c0:	mov	r0, #0
   207c4:	b	16530 <dcgettext@plt>
   207c8:	mov	r2, #5
   207cc:	ldr	r1, [pc, #328]	; 2091c <g_strcmp0@plt+0x9ce4>
   207d0:	mov	r0, #0
   207d4:	b	16530 <dcgettext@plt>
   207d8:	mov	r2, #5
   207dc:	ldr	r1, [pc, #316]	; 20920 <g_strcmp0@plt+0x9ce8>
   207e0:	mov	r0, #0
   207e4:	b	16530 <dcgettext@plt>
   207e8:	mov	r2, #5
   207ec:	ldr	r1, [pc, #304]	; 20924 <g_strcmp0@plt+0x9cec>
   207f0:	mov	r0, #0
   207f4:	b	16530 <dcgettext@plt>
   207f8:	mov	r2, #5
   207fc:	ldr	r1, [pc, #292]	; 20928 <g_strcmp0@plt+0x9cf0>
   20800:	mov	r0, #0
   20804:	b	16530 <dcgettext@plt>
   20808:	mov	r2, #5
   2080c:	ldr	r1, [pc, #280]	; 2092c <g_strcmp0@plt+0x9cf4>
   20810:	mov	r0, #0
   20814:	b	16530 <dcgettext@plt>
   20818:	mov	r2, #5
   2081c:	ldr	r1, [pc, #268]	; 20930 <g_strcmp0@plt+0x9cf8>
   20820:	mov	r0, #0
   20824:	b	16530 <dcgettext@plt>
   20828:	mov	r2, #5
   2082c:	ldr	r1, [pc, #256]	; 20934 <g_strcmp0@plt+0x9cfc>
   20830:	mov	r0, #0
   20834:	b	16530 <dcgettext@plt>
   20838:	mov	r2, #5
   2083c:	ldr	r1, [pc, #244]	; 20938 <g_strcmp0@plt+0x9d00>
   20840:	mov	r0, #0
   20844:	b	16530 <dcgettext@plt>
   20848:	mov	r2, #5
   2084c:	ldr	r1, [pc, #232]	; 2093c <g_strcmp0@plt+0x9d04>
   20850:	mov	r0, #0
   20854:	b	16530 <dcgettext@plt>
   20858:	mov	r2, #5
   2085c:	ldr	r1, [pc, #220]	; 20940 <g_strcmp0@plt+0x9d08>
   20860:	mov	r0, #0
   20864:	b	16530 <dcgettext@plt>
   20868:	mov	r2, #5
   2086c:	ldr	r1, [pc, #208]	; 20944 <g_strcmp0@plt+0x9d0c>
   20870:	mov	r0, #0
   20874:	b	16530 <dcgettext@plt>
   20878:	mov	r2, #5
   2087c:	ldr	r1, [pc, #196]	; 20948 <g_strcmp0@plt+0x9d10>
   20880:	mov	r0, #0
   20884:	b	16530 <dcgettext@plt>
   20888:	mov	r2, #5
   2088c:	ldr	r1, [pc, #184]	; 2094c <g_strcmp0@plt+0x9d14>
   20890:	mov	r0, #0
   20894:	b	16530 <dcgettext@plt>
   20898:	mov	r2, #5
   2089c:	ldr	r1, [pc, #172]	; 20950 <g_strcmp0@plt+0x9d18>
   208a0:	mov	r0, #0
   208a4:	b	16530 <dcgettext@plt>
   208a8:	mov	r2, #5
   208ac:	ldr	r1, [pc, #160]	; 20954 <g_strcmp0@plt+0x9d1c>
   208b0:	mov	r0, #0
   208b4:	b	16530 <dcgettext@plt>
   208b8:	push	{r4, lr}
   208bc:	bl	15de0 <pk_role_enum_to_string@plt>
   208c0:	ldr	r2, [pc, #144]	; 20958 <g_strcmp0@plt+0x9d20>
   208c4:	mov	r1, #16
   208c8:	mov	r3, r0
   208cc:	ldr	r0, [pc, #136]	; 2095c <g_strcmp0@plt+0x9d24>
   208d0:	bl	15dec <g_log@plt>
   208d4:	mov	r0, #0
   208d8:	pop	{r4, pc}
   208dc:	andeq	sl, r2, r4, lsl #26
   208e0:	andeq	sl, r2, r4, lsl #28
   208e4:	andeq	sl, r2, r8, ror #27
   208e8:	ldrdeq	sl, [r2], -r4
   208ec:	andeq	sl, r2, r8, lsr #27
   208f0:	andeq	sl, r2, r8, lsl #12
   208f4:	muleq	r2, r8, sp
   208f8:	andeq	sl, r2, r0, asr sp
   208fc:			; <UNDEFINED> instruction: 0x0002acbc
   20900:	andeq	sl, r2, r4, ror ip
   20904:	andeq	sl, r2, r0, ror #24
   20908:	andeq	sl, r2, ip, asr #24
   2090c:	andeq	sl, r2, r8, lsr ip
   20910:	andeq	sl, r2, r0, lsr sp
   20914:	andeq	sl, r2, r8, lsl sp
   20918:	strdeq	sl, [r2], -r0
   2091c:	andeq	sl, r2, r4, lsl fp
   20920:	andeq	sl, r2, r0, lsr #25
   20924:	andeq	sl, r2, r8, ror #26
   20928:	andeq	sl, r2, r8, lsl #22
   2092c:	muleq	r2, r0, ip
   20930:	andeq	sl, r2, r8, lsr #24
   20934:	andeq	sl, r2, ip, ror #23
   20938:	andeq	sl, r2, r4, lsl ip
   2093c:	ldrdeq	sl, [r2], -r0
   20940:	andeq	sl, r2, r0, lsl #27
   20944:	andeq	sl, r2, ip, lsr sp
   20948:	andeq	sl, r2, r4, lsl #24
   2094c:	ldrdeq	sl, [r2], -r4
   20950:	strdeq	sl, [r2], -ip
   20954:	andeq	sl, r2, r0, asr #23
   20958:	andeq	sl, r2, ip, lsl lr
   2095c:	andeq	r6, r2, r0, ror #4
   20960:	cmp	r0, #32
   20964:	ldrls	pc, [pc, r0, lsl #2]
   20968:	b	20be0 <g_strcmp0@plt+0x9fa8>
   2096c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20970:	andeq	r0, r2, r0, asr #23
   20974:			; <UNDEFINED> instruction: 0x00020bb0
   20978:	andeq	r0, r2, r0, lsr #23
   2097c:	muleq	r2, r0, fp
   20980:	andeq	r0, r2, r0, lsl #23
   20984:	andeq	r0, r2, r0, ror fp
   20988:	andeq	r0, r2, r0, ror #22
   2098c:	andeq	r0, r2, r0, asr fp
   20990:	andeq	r0, r2, r0, asr #22
   20994:	andeq	r0, r2, r0, lsr fp
   20998:	andeq	r0, r2, r0, lsr #22
   2099c:	andeq	r0, r2, r0, lsl fp
   209a0:	andeq	r0, r2, r0, lsl #22
   209a4:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   209a8:	andeq	r0, r2, r0, ror #21
   209ac:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   209b0:	andeq	r0, r2, r0, asr #21
   209b4:			; <UNDEFINED> instruction: 0x00020ab0
   209b8:	andeq	r0, r2, r0, lsr #21
   209bc:	muleq	r2, r0, sl
   209c0:	andeq	r0, r2, r0, lsl #21
   209c4:	andeq	r0, r2, r0, ror sl
   209c8:	andeq	r0, r2, r0, ror #20
   209cc:	andeq	r0, r2, r0, asr sl
   209d0:	andeq	r0, r2, r0, asr #20
   209d4:	andeq	r0, r2, r0, lsr sl
   209d8:	andeq	r0, r2, r0, lsr #20
   209dc:	andeq	r0, r2, r0, lsl sl
   209e0:	andeq	r0, r2, r0, lsl #20
   209e4:	andeq	r0, r2, r0, lsr #23
   209e8:	muleq	r2, r0, fp
   209ec:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   209f0:	mov	r2, #5
   209f4:	ldr	r1, [pc, #520]	; 20c04 <g_strcmp0@plt+0x9fcc>
   209f8:	mov	r0, #0
   209fc:	b	16530 <dcgettext@plt>
   20a00:	mov	r2, #5
   20a04:	ldr	r1, [pc, #508]	; 20c08 <g_strcmp0@plt+0x9fd0>
   20a08:	mov	r0, #0
   20a0c:	b	16530 <dcgettext@plt>
   20a10:	mov	r2, #5
   20a14:	ldr	r1, [pc, #496]	; 20c0c <g_strcmp0@plt+0x9fd4>
   20a18:	mov	r0, #0
   20a1c:	b	16530 <dcgettext@plt>
   20a20:	mov	r2, #5
   20a24:	ldr	r1, [pc, #484]	; 20c10 <g_strcmp0@plt+0x9fd8>
   20a28:	mov	r0, #0
   20a2c:	b	16530 <dcgettext@plt>
   20a30:	mov	r2, #5
   20a34:	ldr	r1, [pc, #472]	; 20c14 <g_strcmp0@plt+0x9fdc>
   20a38:	mov	r0, #0
   20a3c:	b	16530 <dcgettext@plt>
   20a40:	mov	r2, #5
   20a44:	ldr	r1, [pc, #460]	; 20c18 <g_strcmp0@plt+0x9fe0>
   20a48:	mov	r0, #0
   20a4c:	b	16530 <dcgettext@plt>
   20a50:	mov	r2, #5
   20a54:	ldr	r1, [pc, #448]	; 20c1c <g_strcmp0@plt+0x9fe4>
   20a58:	mov	r0, #0
   20a5c:	b	16530 <dcgettext@plt>
   20a60:	mov	r2, #5
   20a64:	ldr	r1, [pc, #436]	; 20c20 <g_strcmp0@plt+0x9fe8>
   20a68:	mov	r0, #0
   20a6c:	b	16530 <dcgettext@plt>
   20a70:	mov	r2, #5
   20a74:	ldr	r1, [pc, #424]	; 20c24 <g_strcmp0@plt+0x9fec>
   20a78:	mov	r0, #0
   20a7c:	b	16530 <dcgettext@plt>
   20a80:	mov	r2, #5
   20a84:	ldr	r1, [pc, #412]	; 20c28 <g_strcmp0@plt+0x9ff0>
   20a88:	mov	r0, #0
   20a8c:	b	16530 <dcgettext@plt>
   20a90:	mov	r2, #5
   20a94:	ldr	r1, [pc, #400]	; 20c2c <g_strcmp0@plt+0x9ff4>
   20a98:	mov	r0, #0
   20a9c:	b	16530 <dcgettext@plt>
   20aa0:	mov	r2, #5
   20aa4:	ldr	r1, [pc, #388]	; 20c30 <g_strcmp0@plt+0x9ff8>
   20aa8:	mov	r0, #0
   20aac:	b	16530 <dcgettext@plt>
   20ab0:	mov	r2, #5
   20ab4:	ldr	r1, [pc, #376]	; 20c34 <g_strcmp0@plt+0x9ffc>
   20ab8:	mov	r0, #0
   20abc:	b	16530 <dcgettext@plt>
   20ac0:	mov	r2, #5
   20ac4:	ldr	r1, [pc, #364]	; 20c38 <g_strcmp0@plt+0xa000>
   20ac8:	mov	r0, #0
   20acc:	b	16530 <dcgettext@plt>
   20ad0:	mov	r2, #5
   20ad4:	ldr	r1, [pc, #352]	; 20c3c <g_strcmp0@plt+0xa004>
   20ad8:	mov	r0, #0
   20adc:	b	16530 <dcgettext@plt>
   20ae0:	mov	r2, #5
   20ae4:	ldr	r1, [pc, #340]	; 20c40 <g_strcmp0@plt+0xa008>
   20ae8:	mov	r0, #0
   20aec:	b	16530 <dcgettext@plt>
   20af0:	mov	r2, #5
   20af4:	ldr	r1, [pc, #328]	; 20c44 <g_strcmp0@plt+0xa00c>
   20af8:	mov	r0, #0
   20afc:	b	16530 <dcgettext@plt>
   20b00:	mov	r2, #5
   20b04:	ldr	r1, [pc, #316]	; 20c48 <g_strcmp0@plt+0xa010>
   20b08:	mov	r0, #0
   20b0c:	b	16530 <dcgettext@plt>
   20b10:	mov	r2, #5
   20b14:	ldr	r1, [pc, #304]	; 20c4c <g_strcmp0@plt+0xa014>
   20b18:	mov	r0, #0
   20b1c:	b	16530 <dcgettext@plt>
   20b20:	mov	r2, #5
   20b24:	ldr	r1, [pc, #292]	; 20c50 <g_strcmp0@plt+0xa018>
   20b28:	mov	r0, #0
   20b2c:	b	16530 <dcgettext@plt>
   20b30:	mov	r2, #5
   20b34:	ldr	r1, [pc, #280]	; 20c54 <g_strcmp0@plt+0xa01c>
   20b38:	mov	r0, #0
   20b3c:	b	16530 <dcgettext@plt>
   20b40:	mov	r2, #5
   20b44:	ldr	r1, [pc, #268]	; 20c58 <g_strcmp0@plt+0xa020>
   20b48:	mov	r0, #0
   20b4c:	b	16530 <dcgettext@plt>
   20b50:	mov	r2, #5
   20b54:	ldr	r1, [pc, #256]	; 20c5c <g_strcmp0@plt+0xa024>
   20b58:	mov	r0, #0
   20b5c:	b	16530 <dcgettext@plt>
   20b60:	mov	r2, #5
   20b64:	ldr	r1, [pc, #244]	; 20c60 <g_strcmp0@plt+0xa028>
   20b68:	mov	r0, #0
   20b6c:	b	16530 <dcgettext@plt>
   20b70:	mov	r2, #5
   20b74:	ldr	r1, [pc, #232]	; 20c64 <g_strcmp0@plt+0xa02c>
   20b78:	mov	r0, #0
   20b7c:	b	16530 <dcgettext@plt>
   20b80:	mov	r2, #5
   20b84:	ldr	r1, [pc, #220]	; 20c68 <g_strcmp0@plt+0xa030>
   20b88:	mov	r0, #0
   20b8c:	b	16530 <dcgettext@plt>
   20b90:	mov	r2, #5
   20b94:	ldr	r1, [pc, #208]	; 20c6c <g_strcmp0@plt+0xa034>
   20b98:	mov	r0, #0
   20b9c:	b	16530 <dcgettext@plt>
   20ba0:	mov	r2, #5
   20ba4:	ldr	r1, [pc, #196]	; 20c70 <g_strcmp0@plt+0xa038>
   20ba8:	mov	r0, #0
   20bac:	b	16530 <dcgettext@plt>
   20bb0:	mov	r2, #5
   20bb4:	ldr	r1, [pc, #184]	; 20c74 <g_strcmp0@plt+0xa03c>
   20bb8:	mov	r0, #0
   20bbc:	b	16530 <dcgettext@plt>
   20bc0:	mov	r2, #5
   20bc4:	ldr	r1, [pc, #172]	; 20c78 <g_strcmp0@plt+0xa040>
   20bc8:	mov	r0, #0
   20bcc:	b	16530 <dcgettext@plt>
   20bd0:	mov	r2, #5
   20bd4:	ldr	r1, [pc, #160]	; 20c7c <g_strcmp0@plt+0xa044>
   20bd8:	mov	r0, #0
   20bdc:	b	16530 <dcgettext@plt>
   20be0:	push	{r4, lr}
   20be4:	bl	15de0 <pk_role_enum_to_string@plt>
   20be8:	ldr	r2, [pc, #144]	; 20c80 <g_strcmp0@plt+0xa048>
   20bec:	mov	r1, #16
   20bf0:	mov	r3, r0
   20bf4:	ldr	r0, [pc, #136]	; 20c84 <g_strcmp0@plt+0xa04c>
   20bf8:	bl	15dec <g_log@plt>
   20bfc:	mov	r0, #0
   20c00:	pop	{r4, pc}
   20c04:	andeq	sl, r2, ip, lsl #31
   20c08:	andeq	fp, r2, r4, ror r0
   20c0c:	andeq	fp, r2, ip, asr r0
   20c10:	andeq	fp, r2, ip, asr #32
   20c14:	andeq	fp, r2, r0, lsr r0
   20c18:	andeq	fp, r2, ip, lsl r0
   20c1c:	andeq	fp, r2, ip
   20c20:	ldrdeq	sl, [r2], -r0
   20c24:	andeq	sl, r2, ip, lsr pc
   20c28:	andeq	sl, r2, r8, asr #29
   20c2c:			; <UNDEFINED> instruction: 0x0002aeb8
   20c30:	andeq	sl, r2, r4, lsr #29
   20c34:	andeq	sl, r2, r4, lsl #29
   20c38:			; <UNDEFINED> instruction: 0x0002afb4
   20c3c:	andeq	sl, r2, r0, lsr #31
   20c40:	andeq	sl, r2, r8, ror pc
   20c44:	andeq	sl, r2, r4, ror #29
   20c48:	andeq	sl, r2, r4, lsr #30
   20c4c:	andeq	sl, r2, r4, ror #31
   20c50:	strdeq	sl, [r2], -r8
   20c54:	andeq	sl, r2, ip, lsl #30
   20c58:	andeq	sl, r2, r8, ror lr
   20c5c:	andeq	sl, r2, r8, asr #28
   20c60:	andeq	sl, r2, r8, ror #28
   20c64:	andeq	sl, r2, ip, asr pc
   20c68:	strdeq	sl, [r2], -r8
   20c6c:	andeq	sl, r2, r0, asr #31
   20c70:	andeq	sl, r2, ip, asr lr
   20c74:	andeq	sl, r2, r4, lsr lr
   20c78:	andeq	sl, r2, r0, asr pc
   20c7c:	andeq	sl, r2, r0, asr #23
   20c80:	andeq	sl, r2, ip, lsl lr
   20c84:	andeq	r6, r2, r0, ror #4
   20c88:	cmp	r0, #34	; 0x22
   20c8c:	ldrls	pc, [pc, r0, lsl #2]
   20c90:	b	20f50 <g_strcmp0@plt+0xa318>
   20c94:	andeq	r0, r2, r0, asr #30
   20c98:	andeq	r0, r2, r0, lsr pc
   20c9c:	andeq	r0, r2, r0, lsr #30
   20ca0:	andeq	r0, r2, r0, lsl pc
   20ca4:	andeq	r0, r2, r0, lsl #30
   20ca8:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20cac:	andeq	r0, r2, r0, ror #29
   20cb0:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20cb4:	andeq	r0, r2, r0, asr #29
   20cb8:			; <UNDEFINED> instruction: 0x00020eb0
   20cbc:	andeq	r0, r2, r0, lsr #29
   20cc0:	muleq	r2, r0, lr
   20cc4:	andeq	r0, r2, r0, lsl #29
   20cc8:	andeq	r0, r2, r0, ror lr
   20ccc:	andeq	r0, r2, r0, ror #28
   20cd0:	andeq	r0, r2, r0, asr lr
   20cd4:	andeq	r0, r2, r0, asr #28
   20cd8:	andeq	r0, r2, r0, lsr lr
   20cdc:	andeq	r0, r2, r0, lsr #28
   20ce0:	andeq	r0, r2, r0, lsl lr
   20ce4:	andeq	r0, r2, r0, lsl #28
   20ce8:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20cec:	andeq	r0, r2, r0, ror #27
   20cf0:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20cf4:	andeq	r0, r2, r0, asr #27
   20cf8:			; <UNDEFINED> instruction: 0x00020db0
   20cfc:	andeq	r0, r2, r0, lsr #27
   20d00:	muleq	r2, r0, sp
   20d04:	andeq	r0, r2, r0, lsl #27
   20d08:	andeq	r0, r2, r0, ror sp
   20d0c:	andeq	r0, r2, r0, ror #26
   20d10:	andeq	r0, r2, r0, asr sp
   20d14:	andeq	r0, r2, r0, asr #26
   20d18:	andeq	r0, r2, r0, lsr sp
   20d1c:	andeq	r0, r2, r0, lsr #26
   20d20:	mov	r2, #5
   20d24:	ldr	r1, [pc, #580]	; 20f70 <g_strcmp0@plt+0xa338>
   20d28:	mov	r0, #0
   20d2c:	b	16530 <dcgettext@plt>
   20d30:	mov	r2, #5
   20d34:	ldr	r1, [pc, #568]	; 20f74 <g_strcmp0@plt+0xa33c>
   20d38:	mov	r0, #0
   20d3c:	b	16530 <dcgettext@plt>
   20d40:	mov	r2, #5
   20d44:	ldr	r1, [pc, #556]	; 20f78 <g_strcmp0@plt+0xa340>
   20d48:	mov	r0, #0
   20d4c:	b	16530 <dcgettext@plt>
   20d50:	mov	r2, #5
   20d54:	ldr	r1, [pc, #544]	; 20f7c <g_strcmp0@plt+0xa344>
   20d58:	mov	r0, #0
   20d5c:	b	16530 <dcgettext@plt>
   20d60:	mov	r2, #5
   20d64:	ldr	r1, [pc, #532]	; 20f80 <g_strcmp0@plt+0xa348>
   20d68:	mov	r0, #0
   20d6c:	b	16530 <dcgettext@plt>
   20d70:	mov	r2, #5
   20d74:	ldr	r1, [pc, #520]	; 20f84 <g_strcmp0@plt+0xa34c>
   20d78:	mov	r0, #0
   20d7c:	b	16530 <dcgettext@plt>
   20d80:	mov	r2, #5
   20d84:	ldr	r1, [pc, #508]	; 20f88 <g_strcmp0@plt+0xa350>
   20d88:	mov	r0, #0
   20d8c:	b	16530 <dcgettext@plt>
   20d90:	mov	r2, #5
   20d94:	ldr	r1, [pc, #496]	; 20f8c <g_strcmp0@plt+0xa354>
   20d98:	mov	r0, #0
   20d9c:	b	16530 <dcgettext@plt>
   20da0:	mov	r2, #5
   20da4:	ldr	r1, [pc, #484]	; 20f90 <g_strcmp0@plt+0xa358>
   20da8:	mov	r0, #0
   20dac:	b	16530 <dcgettext@plt>
   20db0:	mov	r2, #5
   20db4:	ldr	r1, [pc, #472]	; 20f94 <g_strcmp0@plt+0xa35c>
   20db8:	mov	r0, #0
   20dbc:	b	16530 <dcgettext@plt>
   20dc0:	mov	r2, #5
   20dc4:	ldr	r1, [pc, #460]	; 20f98 <g_strcmp0@plt+0xa360>
   20dc8:	mov	r0, #0
   20dcc:	b	16530 <dcgettext@plt>
   20dd0:	mov	r2, #5
   20dd4:	ldr	r1, [pc, #448]	; 20f9c <g_strcmp0@plt+0xa364>
   20dd8:	mov	r0, #0
   20ddc:	b	16530 <dcgettext@plt>
   20de0:	mov	r2, #5
   20de4:	ldr	r1, [pc, #436]	; 20fa0 <g_strcmp0@plt+0xa368>
   20de8:	mov	r0, #0
   20dec:	b	16530 <dcgettext@plt>
   20df0:	mov	r2, #5
   20df4:	ldr	r1, [pc, #424]	; 20fa4 <g_strcmp0@plt+0xa36c>
   20df8:	mov	r0, #0
   20dfc:	b	16530 <dcgettext@plt>
   20e00:	mov	r2, #5
   20e04:	ldr	r1, [pc, #412]	; 20fa8 <g_strcmp0@plt+0xa370>
   20e08:	mov	r0, #0
   20e0c:	b	16530 <dcgettext@plt>
   20e10:	mov	r2, #5
   20e14:	ldr	r1, [pc, #400]	; 20fac <g_strcmp0@plt+0xa374>
   20e18:	mov	r0, #0
   20e1c:	b	16530 <dcgettext@plt>
   20e20:	mov	r2, #5
   20e24:	ldr	r1, [pc, #388]	; 20fb0 <g_strcmp0@plt+0xa378>
   20e28:	mov	r0, #0
   20e2c:	b	16530 <dcgettext@plt>
   20e30:	mov	r2, #5
   20e34:	ldr	r1, [pc, #376]	; 20fb4 <g_strcmp0@plt+0xa37c>
   20e38:	mov	r0, #0
   20e3c:	b	16530 <dcgettext@plt>
   20e40:	mov	r2, #5
   20e44:	ldr	r1, [pc, #364]	; 20fb8 <g_strcmp0@plt+0xa380>
   20e48:	mov	r0, #0
   20e4c:	b	16530 <dcgettext@plt>
   20e50:	mov	r2, #5
   20e54:	ldr	r1, [pc, #352]	; 20fbc <g_strcmp0@plt+0xa384>
   20e58:	mov	r0, #0
   20e5c:	b	16530 <dcgettext@plt>
   20e60:	mov	r2, #5
   20e64:	ldr	r1, [pc, #340]	; 20fc0 <g_strcmp0@plt+0xa388>
   20e68:	mov	r0, #0
   20e6c:	b	16530 <dcgettext@plt>
   20e70:	mov	r2, #5
   20e74:	ldr	r1, [pc, #328]	; 20fc4 <g_strcmp0@plt+0xa38c>
   20e78:	mov	r0, #0
   20e7c:	b	16530 <dcgettext@plt>
   20e80:	mov	r2, #5
   20e84:	ldr	r1, [pc, #316]	; 20fc8 <g_strcmp0@plt+0xa390>
   20e88:	mov	r0, #0
   20e8c:	b	16530 <dcgettext@plt>
   20e90:	mov	r2, #5
   20e94:	ldr	r1, [pc, #304]	; 20fcc <g_strcmp0@plt+0xa394>
   20e98:	mov	r0, #0
   20e9c:	b	16530 <dcgettext@plt>
   20ea0:	mov	r2, #5
   20ea4:	ldr	r1, [pc, #292]	; 20fd0 <g_strcmp0@plt+0xa398>
   20ea8:	mov	r0, #0
   20eac:	b	16530 <dcgettext@plt>
   20eb0:	mov	r2, #5
   20eb4:	ldr	r1, [pc, #280]	; 20fd4 <g_strcmp0@plt+0xa39c>
   20eb8:	mov	r0, #0
   20ebc:	b	16530 <dcgettext@plt>
   20ec0:	mov	r2, #5
   20ec4:	ldr	r1, [pc, #268]	; 20fd8 <g_strcmp0@plt+0xa3a0>
   20ec8:	mov	r0, #0
   20ecc:	b	16530 <dcgettext@plt>
   20ed0:	mov	r2, #5
   20ed4:	ldr	r1, [pc, #256]	; 20fdc <g_strcmp0@plt+0xa3a4>
   20ed8:	mov	r0, #0
   20edc:	b	16530 <dcgettext@plt>
   20ee0:	mov	r2, #5
   20ee4:	ldr	r1, [pc, #244]	; 20fe0 <g_strcmp0@plt+0xa3a8>
   20ee8:	mov	r0, #0
   20eec:	b	16530 <dcgettext@plt>
   20ef0:	mov	r2, #5
   20ef4:	ldr	r1, [pc, #232]	; 20fe4 <g_strcmp0@plt+0xa3ac>
   20ef8:	mov	r0, #0
   20efc:	b	16530 <dcgettext@plt>
   20f00:	mov	r2, #5
   20f04:	ldr	r1, [pc, #220]	; 20fe8 <g_strcmp0@plt+0xa3b0>
   20f08:	mov	r0, #0
   20f0c:	b	16530 <dcgettext@plt>
   20f10:	mov	r2, #5
   20f14:	ldr	r1, [pc, #208]	; 20fec <g_strcmp0@plt+0xa3b4>
   20f18:	mov	r0, #0
   20f1c:	b	16530 <dcgettext@plt>
   20f20:	mov	r2, #5
   20f24:	ldr	r1, [pc, #196]	; 20ff0 <g_strcmp0@plt+0xa3b8>
   20f28:	mov	r0, #0
   20f2c:	b	16530 <dcgettext@plt>
   20f30:	mov	r2, #5
   20f34:	ldr	r1, [pc, #184]	; 20ff4 <g_strcmp0@plt+0xa3bc>
   20f38:	mov	r0, #0
   20f3c:	b	16530 <dcgettext@plt>
   20f40:	mov	r2, #5
   20f44:	ldr	r1, [pc, #172]	; 20ff8 <g_strcmp0@plt+0xa3c0>
   20f48:	mov	r0, #0
   20f4c:	b	16530 <dcgettext@plt>
   20f50:	mov	r3, r0
   20f54:	push	{r4, lr}
   20f58:	mov	r1, #16
   20f5c:	ldr	r2, [pc, #152]	; 20ffc <g_strcmp0@plt+0xa3c4>
   20f60:	ldr	r0, [pc, #152]	; 21000 <g_strcmp0@plt+0xa3c8>
   20f64:	bl	15dec <g_log@plt>
   20f68:	mov	r0, #0
   20f6c:	pop	{r4, pc}
   20f70:	andeq	fp, r2, ip, lsl r2
   20f74:	andeq	fp, r2, r4, lsl r2
   20f78:	andeq	fp, r2, r0, lsl #4
   20f7c:	strdeq	fp, [r2], -r4
   20f80:	andeq	fp, r2, r4, ror #3
   20f84:	ldrdeq	fp, [r2], -ip
   20f88:	andeq	fp, r2, ip, ror r1
   20f8c:	strdeq	fp, [r2], -r8
   20f90:	andeq	fp, r2, r8, asr #2
   20f94:	andeq	fp, r2, ip, lsl #3
   20f98:	andeq	fp, r2, ip, asr #3
   20f9c:	andeq	fp, r2, ip, lsr r1
   20fa0:	andeq	fp, r2, r0, ror #1
   20fa4:	muleq	r2, r8, r1
   20fa8:	ldrdeq	fp, [r2], -r8
   20fac:	ldrdeq	fp, [r2], -r0
   20fb0:			; <UNDEFINED> instruction: 0x0002b1bc
   20fb4:	andeq	fp, r2, ip, ror #1
   20fb8:	andeq	fp, r2, r4, asr #3
   20fbc:	andeq	fp, r2, ip, ror #2
   20fc0:	andeq	fp, r2, r4, ror #2
   20fc4:	andeq	fp, r2, r4, asr #1
   20fc8:	strheq	fp, [r2], -r8
   20fcc:	strheq	fp, [r2], -r0
   20fd0:	andeq	fp, r2, r0, asr r1
   20fd4:	andeq	fp, r2, r4, lsr #1
   20fd8:	andeq	fp, r2, ip, lsl r1
   20fdc:	andeq	fp, r2, ip, lsr #2
   20fe0:	andeq	fp, r2, r0, lsl r1
   20fe4:	andeq	fp, r2, r0, lsl #2
   20fe8:	andeq	fp, r2, ip, lsr #3
   20fec:	andeq	fp, r2, r8, asr r1
   20ff0:	muleq	r2, r8, r0
   20ff4:	andeq	fp, r2, r8, lsl #1
   20ff8:	andeq	fp, r2, ip, lsr #4
   20ffc:	andeq	fp, r2, ip, lsr r2
   21000:	andeq	r6, r2, r0, ror #4
   21004:	mov	r1, r0
   21008:	ldr	r0, [pc]	; 21010 <g_strcmp0@plt+0xa3d8>
   2100c:	b	16ad0 <pk_enum_find_string@plt>
   21010:	andeq	r7, r2, r4, ror sp
   21014:	mov	r1, r0
   21018:	ldr	r0, [pc]	; 21020 <g_strcmp0@plt+0xa3e8>
   2101c:	b	16ad0 <pk_enum_find_string@plt>
   21020:	andeq	r7, r2, r4, asr #28
   21024:	mov	r1, r0
   21028:	ldr	r0, [pc]	; 21030 <g_strcmp0@plt+0xa3f8>
   2102c:	b	16ad0 <pk_enum_find_string@plt>
   21030:	andeq	r7, r2, ip, ror #30
   21034:	mov	r1, r0
   21038:	ldr	r0, [pc]	; 21040 <g_strcmp0@plt+0xa408>
   2103c:	b	16ad0 <pk_enum_find_string@plt>
   21040:	muleq	r2, r4, r0
   21044:	mov	r1, r0
   21048:	ldr	r0, [pc]	; 21050 <g_strcmp0@plt+0xa418>
   2104c:	b	16ad0 <pk_enum_find_string@plt>
   21050:	andeq	r8, r2, r4, lsr #3
   21054:	mov	r1, r0
   21058:	push	{r4, lr}
   2105c:	ldr	r0, [pc, #16]	; 21074 <g_strcmp0@plt+0xa43c>
   21060:	bl	16ad0 <pk_enum_find_string@plt>
   21064:	ldrb	r3, [r0]
   21068:	cmp	r3, #0
   2106c:	moveq	r0, #0
   21070:	pop	{r4, pc}
   21074:	andeq	r8, r2, r4, asr #5
   21078:	mov	r1, r0
   2107c:	ldr	r0, [pc]	; 21084 <g_strcmp0@plt+0xa44c>
   21080:	b	16ad0 <pk_enum_find_string@plt>
   21084:	andeq	r8, r2, r4, lsl #6
   21088:	cmp	r0, #25
   2108c:	bhi	21094 <g_strcmp0@plt+0xa45c>
   21090:	b	203f0 <g_strcmp0@plt+0x97b8>
   21094:	sub	r0, r0, #26
   21098:	b	20514 <g_strcmp0@plt+0x98dc>
   2109c:	cmp	r0, #10
   210a0:	beq	210c4 <g_strcmp0@plt+0xa48c>
   210a4:	sub	r3, r0, #11
   210a8:	cmp	r3, #1
   210ac:	bls	210cc <g_strcmp0@plt+0xa494>
   210b0:	cmp	r0, #25
   210b4:	bhi	210d4 <g_strcmp0@plt+0xa49c>
   210b8:	mov	r1, r0
   210bc:	ldr	r0, [pc, #28]	; 210e0 <g_strcmp0@plt+0xa4a8>
   210c0:	b	16ad0 <pk_enum_find_string@plt>
   210c4:	ldr	r0, [pc, #24]	; 210e4 <g_strcmp0@plt+0xa4ac>
   210c8:	bx	lr
   210cc:	ldr	r0, [pc, #20]	; 210e8 <g_strcmp0@plt+0xa4b0>
   210d0:	bx	lr
   210d4:	sub	r1, r0, #26
   210d8:	ldr	r0, [pc]	; 210e0 <g_strcmp0@plt+0xa4a8>
   210dc:	b	16ad0 <pk_enum_find_string@plt>
   210e0:	andeq	r7, r2, r4, ror sp
   210e4:	andeq	fp, r2, r4, asr r2
   210e8:	andeq	fp, r2, ip, ror #4
   210ec:	push	{lr}		; (str lr, [sp, #-4]!)
   210f0:	sub	sp, sp, #20
   210f4:	ldr	r0, [pc, #48]	; 2112c <g_strcmp0@plt+0xa4f4>
   210f8:	bl	16410 <g_intern_static_string@plt>
   210fc:	ldr	r1, [pc, #44]	; 21130 <g_strcmp0@plt+0xa4f8>
   21100:	mov	r2, #0
   21104:	mov	r3, #16
   21108:	stmib	sp, {r1, r2}
   2110c:	str	r3, [sp]
   21110:	mov	r2, #92	; 0x5c
   21114:	ldr	r3, [pc, #24]	; 21134 <g_strcmp0@plt+0xa4fc>
   21118:	mov	r1, r0
   2111c:	mov	r0, #80	; 0x50
   21120:	bl	15bb8 <g_type_register_static_simple@plt>
   21124:	add	sp, sp, #20
   21128:	pop	{pc}		; (ldr pc, [sp], #4)
   2112c:	andeq	fp, r2, ip, lsr #16
   21130:	strdeq	r1, [r2], -r0
   21134:	andeq	r1, r2, r0, lsr #3
   21138:	ldr	r3, [r2, #12]
   2113c:	push	{r4, r5, r6, lr}
   21140:	sub	r5, r1, #3
   21144:	ldr	r3, [r3, #16]
   21148:	clz	r5, r5
   2114c:	lsr	r5, r5, #5
   21150:	cmp	r3, r5
   21154:	popeq	{r4, r5, r6, pc}
   21158:	mov	r4, r2
   2115c:	mov	r3, r5
   21160:	ldr	r2, [pc, #44]	; 21194 <g_strcmp0@plt+0xa55c>
   21164:	mov	r1, #128	; 0x80
   21168:	ldr	r0, [pc, #40]	; 21198 <g_strcmp0@plt+0xa560>
   2116c:	bl	15dec <g_log@plt>
   21170:	ldr	r1, [r4, #12]
   21174:	ldr	r2, [pc, #32]	; 2119c <g_strcmp0@plt+0xa564>
   21178:	mov	r3, r5
   2117c:	str	r5, [r1, #16]
   21180:	mov	r0, r4
   21184:	ldr	r1, [r2]
   21188:	pop	{r4, r5, r6, lr}
   2118c:	mov	r2, #0
   21190:	b	15fd8 <g_signal_emit@plt>
   21194:	andeq	fp, r2, r8, lsr r8
   21198:	andeq	r6, r2, r0, ror #4
   2119c:			; <UNDEFINED> instruction: 0x0003d6b0
   211a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   211a4:	sub	sp, sp, #28
   211a8:	mov	r4, r0
   211ac:	bl	169a4 <g_type_class_peek_parent@plt>
   211b0:	ldr	r5, [pc, #376]	; 21330 <g_strcmp0@plt+0xa6f8>
   211b4:	ldr	r3, [r5, #28]
   211b8:	cmp	r3, #0
   211bc:	str	r0, [r5, #24]
   211c0:	bne	21320 <g_strcmp0@plt+0xa6e8>
   211c4:	mov	r1, #80	; 0x50
   211c8:	mov	r0, r4
   211cc:	bl	16b48 <g_type_check_class_cast@plt>
   211d0:	ldr	r3, [pc, #348]	; 21334 <g_strcmp0@plt+0xa6fc>
   211d4:	ldr	r9, [pc, #348]	; 21338 <g_strcmp0@plt+0xa700>
   211d8:	mov	r7, #4
   211dc:	mov	r8, #1
   211e0:	mov	sl, #20
   211e4:	mov	r1, #24
   211e8:	mov	fp, #28
   211ec:	mov	r6, r0
   211f0:	mov	r0, r4
   211f4:	str	r3, [r6, #24]
   211f8:	mov	r4, #0
   211fc:	bl	1665c <g_type_class_add_private@plt>
   21200:	ldr	r1, [r6]
   21204:	mov	r3, #68	; 0x44
   21208:	str	r9, [sp, #8]
   2120c:	str	sl, [sp, #20]
   21210:	str	r8, [sp, #16]
   21214:	str	r7, [sp, #12]
   21218:	str	r4, [sp, #4]
   2121c:	str	r4, [sp]
   21220:	mov	r2, #2
   21224:	ldr	r0, [pc, #272]	; 2133c <g_strcmp0@plt+0xa704>
   21228:	bl	16128 <g_signal_new@plt>
   2122c:	ldr	r1, [r6]
   21230:	mov	r3, #72	; 0x48
   21234:	str	sl, [sp, #20]
   21238:	stmib	sp, {r4, r9}
   2123c:	str	r8, [sp, #16]
   21240:	str	r7, [sp, #12]
   21244:	str	r4, [sp]
   21248:	mov	r2, #2
   2124c:	ldr	r9, [pc, #236]	; 21340 <g_strcmp0@plt+0xa708>
   21250:	ldr	sl, [pc, #236]	; 21344 <g_strcmp0@plt+0xa70c>
   21254:	str	r0, [r5]
   21258:	ldr	r0, [pc, #232]	; 21348 <g_strcmp0@plt+0xa710>
   2125c:	bl	16128 <g_signal_new@plt>
   21260:	ldr	r1, [r6]
   21264:	mov	r3, #76	; 0x4c
   21268:	str	r4, [sp, #16]
   2126c:	str	r7, [sp, #12]
   21270:	str	r4, [sp, #4]
   21274:	str	r4, [sp]
   21278:	str	r9, [sp, #8]
   2127c:	mov	r2, #2
   21280:	str	r0, [r5, #4]
   21284:	ldr	r0, [pc, #192]	; 2134c <g_strcmp0@plt+0xa714>
   21288:	bl	16128 <g_signal_new@plt>
   2128c:	ldr	r1, [r6]
   21290:	mov	r3, #80	; 0x50
   21294:	str	r8, [sp, #16]
   21298:	str	r7, [sp, #12]
   2129c:	str	r4, [sp, #4]
   212a0:	str	r4, [sp]
   212a4:	str	sl, [sp, #8]
   212a8:	str	fp, [sp, #20]
   212ac:	mov	r2, #2
   212b0:	str	r0, [r5, #8]
   212b4:	ldr	r0, [pc, #148]	; 21350 <g_strcmp0@plt+0xa718>
   212b8:	bl	16128 <g_signal_new@plt>
   212bc:	ldr	r1, [r6]
   212c0:	mov	r3, #84	; 0x54
   212c4:	str	fp, [sp, #20]
   212c8:	str	r8, [sp, #16]
   212cc:	str	r7, [sp, #12]
   212d0:	stmib	sp, {r4, sl}
   212d4:	str	r4, [sp]
   212d8:	mov	r2, #2
   212dc:	str	r0, [r5, #12]
   212e0:	ldr	r0, [pc, #108]	; 21354 <g_strcmp0@plt+0xa71c>
   212e4:	bl	16128 <g_signal_new@plt>
   212e8:	ldr	r1, [r6]
   212ec:	mov	r3, #88	; 0x58
   212f0:	str	r9, [sp, #8]
   212f4:	str	r4, [sp, #16]
   212f8:	str	r7, [sp, #12]
   212fc:	str	r4, [sp, #4]
   21300:	str	r4, [sp]
   21304:	mov	r2, #2
   21308:	str	r0, [r5, #16]
   2130c:	ldr	r0, [pc, #68]	; 21358 <g_strcmp0@plt+0xa720>
   21310:	bl	16128 <g_signal_new@plt>
   21314:	str	r0, [r5, #20]
   21318:	add	sp, sp, #28
   2131c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21320:	add	r1, r5, #28
   21324:	mov	r0, r4
   21328:	bl	15c0c <g_type_class_adjust_private_offset@plt>
   2132c:	b	211c4 <g_strcmp0@plt+0xa58c>
   21330:			; <UNDEFINED> instruction: 0x0003d6b0
   21334:	andeq	r1, r2, r8, ror #15
   21338:	andeq	r6, r1, r0, lsl #22
   2133c:	andeq	fp, r2, r8, asr r8
   21340:	muleq	r1, r0, r8
   21344:	andeq	r5, r1, ip, asr #22
   21348:	andeq	fp, r2, r8, ror #16
   2134c:	andeq	fp, r2, ip, lsr #11
   21350:	andeq	fp, r2, ip, ror r8
   21354:	muleq	r2, r0, r8
   21358:	muleq	r2, ip, r8
   2135c:	ldr	r2, [r0, #12]
   21360:	push	{r4, r5, lr}
   21364:	mov	r3, #0
   21368:	ldr	r4, [pc, #180]	; 21424 <g_strcmp0@plt+0xa7ec>
   2136c:	ldr	r0, [r2]
   21370:	sub	sp, sp, #44	; 0x2c
   21374:	ldr	r2, [r4]
   21378:	cmp	r0, r3
   2137c:	str	r2, [sp, #36]	; 0x24
   21380:	str	r3, [sp, #28]
   21384:	str	r3, [sp, #32]
   21388:	beq	21408 <g_strcmp0@plt+0xa7d0>
   2138c:	add	ip, sp, #28
   21390:	mov	r1, #20
   21394:	mov	r2, #8
   21398:	str	r3, [sp, #16]
   2139c:	str	r3, [sp, #4]
   213a0:	str	r1, [sp, #8]
   213a4:	str	r2, [sp]
   213a8:	str	ip, [sp, #12]
   213ac:	mov	r3, #28
   213b0:	add	r2, sp, #32
   213b4:	ldr	r1, [pc, #108]	; 21428 <g_strcmp0@plt+0xa7f0>
   213b8:	bl	15f54 <dbus_g_proxy_call@plt>
   213bc:	subs	r5, r0, #0
   213c0:	beq	213e4 <g_strcmp0@plt+0xa7ac>
   213c4:	ldr	r5, [sp, #28]
   213c8:	ldr	r2, [sp, #36]	; 0x24
   213cc:	ldr	r3, [r4]
   213d0:	mov	r0, r5
   213d4:	cmp	r2, r3
   213d8:	bne	21420 <g_strcmp0@plt+0xa7e8>
   213dc:	add	sp, sp, #44	; 0x2c
   213e0:	pop	{r4, r5, pc}
   213e4:	ldr	r3, [sp, #32]
   213e8:	ldr	r2, [pc, #60]	; 2142c <g_strcmp0@plt+0xa7f4>
   213ec:	mov	r1, #16
   213f0:	ldr	r3, [r3, #8]
   213f4:	ldr	r0, [pc, #52]	; 21430 <g_strcmp0@plt+0xa7f8>
   213f8:	bl	15dec <g_log@plt>
   213fc:	ldr	r0, [sp, #32]
   21400:	bl	15c78 <g_error_free@plt>
   21404:	b	213c8 <g_strcmp0@plt+0xa790>
   21408:	ldr	r2, [pc, #36]	; 21434 <g_strcmp0@plt+0xa7fc>
   2140c:	mov	r1, #16
   21410:	ldr	r0, [pc, #24]	; 21430 <g_strcmp0@plt+0xa7f8>
   21414:	bl	15dec <g_log@plt>
   21418:	ldr	r5, [sp, #28]
   2141c:	b	213c8 <g_strcmp0@plt+0xa790>
   21420:	bl	164ac <__stack_chk_fail@plt>
   21424:	andeq	ip, r3, r0, asr lr
   21428:	andeq	fp, r2, r4, asr #17
   2142c:	ldrdeq	fp, [r2], -r0
   21430:	andeq	r6, r2, r0, ror #4
   21434:			; <UNDEFINED> instruction: 0x0002b8b0
   21438:	push	{r4, r5, r6, lr}
   2143c:	mov	r0, r2
   21440:	mov	r4, r2
   21444:	bl	2135c <g_strcmp0@plt+0xa724>
   21448:	ldr	r3, [r4, #12]
   2144c:	ldr	r3, [r3, #20]
   21450:	cmp	r3, r0
   21454:	popeq	{r4, r5, r6, pc}
   21458:	mov	r5, r0
   2145c:	mov	r3, r0
   21460:	ldr	r2, [pc, #44]	; 21494 <g_strcmp0@plt+0xa85c>
   21464:	mov	r1, #128	; 0x80
   21468:	ldr	r0, [pc, #40]	; 21498 <g_strcmp0@plt+0xa860>
   2146c:	bl	15dec <g_log@plt>
   21470:	ldr	r1, [r4, #12]
   21474:	ldr	r2, [pc, #32]	; 2149c <g_strcmp0@plt+0xa864>
   21478:	mov	r3, r5
   2147c:	str	r5, [r1, #20]
   21480:	mov	r0, r4
   21484:	ldr	r1, [r2, #4]
   21488:	pop	{r4, r5, r6, lr}
   2148c:	mov	r2, #0
   21490:	b	15fd8 <g_signal_emit@plt>
   21494:	strdeq	fp, [r2], -r4
   21498:	andeq	r6, r2, r0, ror #4
   2149c:			; <UNDEFINED> instruction: 0x0003d6b0
   214a0:	push	{r4, lr}
   214a4:	mcr	15, 0, r0, cr7, cr10, {5}
   214a8:	ldr	r4, [pc, #60]	; 214ec <g_strcmp0@plt+0xa8b4>
   214ac:	ldr	r3, [r4, #32]
   214b0:	mcr	15, 0, r0, cr7, cr10, {5}
   214b4:	cmp	r3, #0
   214b8:	beq	214c4 <g_strcmp0@plt+0xa88c>
   214bc:	ldr	r0, [r4, #32]
   214c0:	pop	{r4, pc}
   214c4:	add	r0, r4, #32
   214c8:	bl	16320 <g_once_init_enter@plt>
   214cc:	cmp	r0, #0
   214d0:	beq	214bc <g_strcmp0@plt+0xa884>
   214d4:	bl	210ec <g_strcmp0@plt+0xa4b4>
   214d8:	mov	r1, r0
   214dc:	add	r0, r4, #32
   214e0:	bl	168c0 <g_once_init_leave@plt>
   214e4:	ldr	r0, [r4, #32]
   214e8:	pop	{r4, pc}
   214ec:			; <UNDEFINED> instruction: 0x0003d6b0
   214f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   214f4:	sub	sp, sp, #52	; 0x34
   214f8:	ldr	r7, [pc, #672]	; 217a0 <g_strcmp0@plt+0xab68>
   214fc:	mov	r5, #0
   21500:	mov	r4, r0
   21504:	ldr	r3, [r7]
   21508:	str	r5, [sp, #36]	; 0x24
   2150c:	str	r3, [sp, #44]	; 0x2c
   21510:	bl	214a0 <g_strcmp0@plt+0xa868>
   21514:	add	r6, sp, #36	; 0x24
   21518:	mov	r1, r0
   2151c:	mov	r0, r4
   21520:	bl	16290 <g_type_instance_get_private@plt>
   21524:	mov	r1, r5
   21528:	str	r0, [r4, #12]
   2152c:	str	r5, [r0, #16]
   21530:	str	r5, [r0, #20]
   21534:	str	r5, [r0, #8]
   21538:	mov	r0, r5
   2153c:	bl	15ffc <dbus_g_bus_get@plt>
   21540:	ldr	r3, [pc, #604]	; 217a4 <g_strcmp0@plt+0xab6c>
   21544:	str	r6, [sp]
   21548:	mov	r1, r3
   2154c:	ldr	r2, [pc, #596]	; 217a8 <g_strcmp0@plt+0xab70>
   21550:	ldr	sl, [r4, #12]
   21554:	mov	r9, r0
   21558:	bl	15ab0 <dbus_g_proxy_new_for_name_owner@plt>
   2155c:	ldr	r8, [r4, #12]
   21560:	str	r0, [sl]
   21564:	ldr	r3, [r8]
   21568:	cmp	r3, r5
   2156c:	beq	2173c <g_strcmp0@plt+0xab04>
   21570:	ldr	sl, [pc, #564]	; 217ac <g_strcmp0@plt+0xab74>
   21574:	str	r6, [sp]
   21578:	mov	r3, sl
   2157c:	ldr	r2, [pc, #556]	; 217b0 <g_strcmp0@plt+0xab78>
   21580:	ldr	r1, [pc, #540]	; 217a4 <g_strcmp0@plt+0xab6c>
   21584:	mov	r0, r9
   21588:	bl	15ab0 <dbus_g_proxy_new_for_name_owner@plt>
   2158c:	ldr	fp, [r4, #12]
   21590:	str	r0, [r8, #4]
   21594:	ldr	r3, [fp, #4]
   21598:	cmp	r3, #0
   2159c:	beq	2173c <g_strcmp0@plt+0xab04>
   215a0:	ldr	r3, [pc, #524]	; 217b4 <g_strcmp0@plt+0xab7c>
   215a4:	ldr	r2, [pc, #516]	; 217b0 <g_strcmp0@plt+0xab78>
   215a8:	str	r6, [sp]
   215ac:	mov	r0, r9
   215b0:	ldr	r1, [pc, #492]	; 217a4 <g_strcmp0@plt+0xab6c>
   215b4:	bl	15ab0 <dbus_g_proxy_new_for_name_owner@plt>
   215b8:	ldr	r3, [r4, #12]
   215bc:	str	r0, [fp, #12]
   215c0:	ldr	r2, [r3, #12]
   215c4:	cmp	r2, #0
   215c8:	beq	2173c <g_strcmp0@plt+0xab04>
   215cc:	ldr	r0, [r3, #4]
   215d0:	mov	r2, #28
   215d4:	mov	r3, r5
   215d8:	ldr	r1, [pc, #472]	; 217b8 <g_strcmp0@plt+0xab80>
   215dc:	bl	16470 <dbus_g_proxy_add_signal@plt>
   215e0:	ldr	r1, [r4, #12]
   215e4:	mov	r3, r4
   215e8:	ldr	r2, [pc, #460]	; 217bc <g_strcmp0@plt+0xab84>
   215ec:	ldr	r0, [r1, #4]
   215f0:	ldr	r1, [pc, #448]	; 217b8 <g_strcmp0@plt+0xab80>
   215f4:	str	r5, [sp]
   215f8:	bl	16680 <dbus_g_proxy_connect_signal@plt>
   215fc:	bl	1650c <dbus_g_object_path_get_g_type@plt>
   21600:	ldr	r1, [r4, #12]
   21604:	mov	r3, r5
   21608:	mov	r6, r0
   2160c:	mov	r2, r0
   21610:	ldr	r0, [r1]
   21614:	ldr	r1, [pc, #420]	; 217c0 <g_strcmp0@plt+0xab88>
   21618:	bl	16470 <dbus_g_proxy_add_signal@plt>
   2161c:	ldr	r1, [r4, #12]
   21620:	mov	r3, r4
   21624:	ldr	r2, [pc, #408]	; 217c4 <g_strcmp0@plt+0xab8c>
   21628:	ldr	r0, [r1]
   2162c:	ldr	r1, [pc, #396]	; 217c0 <g_strcmp0@plt+0xab88>
   21630:	str	r5, [sp]
   21634:	bl	16680 <dbus_g_proxy_connect_signal@plt>
   21638:	ldr	r1, [r4, #12]
   2163c:	mov	r2, r6
   21640:	mov	r3, r5
   21644:	ldr	r0, [r1]
   21648:	ldr	r1, [pc, #376]	; 217c8 <g_strcmp0@plt+0xab90>
   2164c:	bl	16470 <dbus_g_proxy_add_signal@plt>
   21650:	ldr	r1, [r4, #12]
   21654:	mov	r3, r4
   21658:	ldr	r2, [pc, #356]	; 217c4 <g_strcmp0@plt+0xab8c>
   2165c:	ldr	r0, [r1]
   21660:	ldr	r1, [pc, #352]	; 217c8 <g_strcmp0@plt+0xab90>
   21664:	str	r5, [sp]
   21668:	bl	16680 <dbus_g_proxy_connect_signal@plt>
   2166c:	mov	r0, r4
   21670:	ldr	r8, [r4, #12]
   21674:	bl	2135c <g_strcmp0@plt+0xa724>
   21678:	ldr	r6, [r4, #12]
   2167c:	str	r5, [sp, #40]	; 0x28
   21680:	ldr	r3, [r6, #12]
   21684:	cmp	r3, #0
   21688:	str	r0, [r8, #20]
   2168c:	beq	21760 <g_strcmp0@plt+0xab28>
   21690:	mov	r0, #24
   21694:	bl	169f8 <g_malloc0@plt>
   21698:	mov	r8, r0
   2169c:	bl	16770 <g_value_get_type@plt>
   216a0:	ldr	r3, [r4, #12]
   216a4:	ldr	r2, [pc, #288]	; 217cc <g_strcmp0@plt+0xab94>
   216a8:	ldr	r1, [pc, #288]	; 217d0 <g_strcmp0@plt+0xab98>
   216ac:	ldr	ip, [r3, #12]
   216b0:	mov	r3, #64	; 0x40
   216b4:	str	r5, [sp, #24]
   216b8:	str	r5, [sp, #12]
   216bc:	str	r2, [sp, #8]
   216c0:	str	r8, [sp, #20]
   216c4:	str	sl, [sp]
   216c8:	str	r3, [sp, #4]
   216cc:	add	r2, sp, #40	; 0x28
   216d0:	str	r0, [sp, #16]
   216d4:	mov	r0, ip
   216d8:	bl	15f54 <dbus_g_proxy_call@plt>
   216dc:	subs	r5, r0, #0
   216e0:	beq	21778 <g_strcmp0@plt+0xab40>
   216e4:	mov	r0, r8
   216e8:	bl	16710 <g_value_get_uint@plt>
   216ec:	sub	r5, r0, #3
   216f0:	mov	r0, r8
   216f4:	clz	r5, r5
   216f8:	lsr	r5, r5, #5
   216fc:	bl	16518 <g_free@plt>
   21700:	ldr	r1, [r4, #12]
   21704:	str	r5, [r6, #16]
   21708:	ldr	r2, [pc, #196]	; 217d4 <g_strcmp0@plt+0xab9c>
   2170c:	ldr	r3, [r1, #16]
   21710:	ldr	r1, [r1, #20]
   21714:	ldr	r0, [pc, #188]	; 217d8 <g_strcmp0@plt+0xaba0>
   21718:	str	r1, [sp]
   2171c:	mov	r1, #128	; 0x80
   21720:	bl	15dec <g_log@plt>
   21724:	ldr	r2, [sp, #44]	; 0x2c
   21728:	ldr	r3, [r7]
   2172c:	cmp	r2, r3
   21730:	bne	2179c <g_strcmp0@plt+0xab64>
   21734:	add	sp, sp, #52	; 0x34
   21738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2173c:	ldr	r3, [sp, #36]	; 0x24
   21740:	ldr	r2, [pc, #148]	; 217dc <g_strcmp0@plt+0xaba4>
   21744:	mov	r1, #16
   21748:	ldr	r3, [r3, #8]
   2174c:	ldr	r0, [pc, #132]	; 217d8 <g_strcmp0@plt+0xaba0>
   21750:	bl	15dec <g_log@plt>
   21754:	ldr	r0, [sp, #36]	; 0x24
   21758:	bl	15c78 <g_error_free@plt>
   2175c:	b	21724 <g_strcmp0@plt+0xaaec>
   21760:	ldr	r2, [pc, #120]	; 217e0 <g_strcmp0@plt+0xaba8>
   21764:	mov	r1, #16
   21768:	ldr	r0, [pc, #104]	; 217d8 <g_strcmp0@plt+0xaba0>
   2176c:	mov	r5, r3
   21770:	bl	15dec <g_log@plt>
   21774:	b	21700 <g_strcmp0@plt+0xaac8>
   21778:	ldr	r3, [sp, #40]	; 0x28
   2177c:	ldr	r2, [pc, #96]	; 217e4 <g_strcmp0@plt+0xabac>
   21780:	mov	r1, #16
   21784:	ldr	r3, [r3, #8]
   21788:	ldr	r0, [pc, #72]	; 217d8 <g_strcmp0@plt+0xaba0>
   2178c:	bl	15dec <g_log@plt>
   21790:	ldr	r0, [sp, #40]	; 0x28
   21794:	bl	15c78 <g_error_free@plt>
   21798:	b	21700 <g_strcmp0@plt+0xaac8>
   2179c:	bl	164ac <__stack_chk_fail@plt>
   217a0:	andeq	ip, r3, r0, asr lr
   217a4:	andeq	fp, r2, r8, lsl r9
   217a8:	andeq	fp, r2, r4, lsr r9
   217ac:	andeq	fp, r2, r0, ror #18
   217b0:	andeq	fp, r2, r4, lsl #19
   217b4:	andeq	fp, r2, r8, lsr #19
   217b8:	andeq	fp, r2, r8, asr #19
   217bc:	andeq	r1, r2, r8, lsr r1
   217c0:	ldrdeq	fp, [r2], -r8
   217c4:	andeq	r1, r2, r8, lsr r4
   217c8:	andeq	fp, r2, r8, ror #19
   217cc:	andeq	r6, r2, r4, asr sl
   217d0:	strdeq	fp, [r2], -ip
   217d4:	andeq	fp, r2, r0, lsr #20
   217d8:	andeq	r6, r2, r0, ror #4
   217dc:	andeq	fp, r2, r0, asr r9
   217e0:			; <UNDEFINED> instruction: 0x0002b8b0
   217e4:	andeq	fp, r2, r0, lsl #20
   217e8:	push	{r4, r5, r6, lr}
   217ec:	subs	r4, r0, #0
   217f0:	beq	218b4 <g_strcmp0@plt+0xac7c>
   217f4:	bl	214a0 <g_strcmp0@plt+0xa868>
   217f8:	ldr	r3, [r4]
   217fc:	cmp	r3, #0
   21800:	beq	21810 <g_strcmp0@plt+0xabd8>
   21804:	ldr	r3, [r3]
   21808:	cmp	r3, r0
   2180c:	beq	21838 <g_strcmp0@plt+0xac00>
   21810:	mov	r1, r0
   21814:	mov	r0, r4
   21818:	bl	166d4 <g_type_check_instance_is_a@plt>
   2181c:	cmp	r0, #0
   21820:	bne	21838 <g_strcmp0@plt+0xac00>
   21824:	ldr	r2, [pc, #156]	; 218c8 <g_strcmp0@plt+0xac90>
   21828:	ldr	r1, [pc, #156]	; 218cc <g_strcmp0@plt+0xac94>
   2182c:	ldr	r0, [pc, #156]	; 218d0 <g_strcmp0@plt+0xac98>
   21830:	pop	{r4, r5, r6, lr}
   21834:	b	15bac <g_return_if_fail_warning@plt>
   21838:	bl	214a0 <g_strcmp0@plt+0xa868>
   2183c:	mov	r1, r0
   21840:	mov	r0, r4
   21844:	bl	15d68 <g_type_check_instance_cast@plt>
   21848:	mov	r5, r0
   2184c:	bl	214a0 <g_strcmp0@plt+0xa868>
   21850:	mov	r1, r0
   21854:	mov	r0, r5
   21858:	bl	16290 <g_type_instance_get_private@plt>
   2185c:	str	r0, [r5, #12]
   21860:	ldr	r0, [r0]
   21864:	bl	16878 <g_object_unref@plt>
   21868:	ldr	r3, [r5, #12]
   2186c:	ldr	r0, [r3, #4]
   21870:	bl	16878 <g_object_unref@plt>
   21874:	ldr	r3, [r5, #12]
   21878:	ldr	r0, [r3, #8]
   2187c:	cmp	r0, #0
   21880:	beq	2188c <g_strcmp0@plt+0xac54>
   21884:	bl	16878 <g_object_unref@plt>
   21888:	ldr	r3, [r5, #12]
   2188c:	ldr	r0, [r3, #12]
   21890:	bl	16878 <g_object_unref@plt>
   21894:	ldr	r3, [pc, #56]	; 218d4 <g_strcmp0@plt+0xac9c>
   21898:	mov	r1, #80	; 0x50
   2189c:	ldr	r0, [r3, #24]
   218a0:	bl	16b48 <g_type_check_class_cast@plt>
   218a4:	ldr	r3, [r0, #24]
   218a8:	mov	r0, r4
   218ac:	pop	{r4, r5, r6, lr}
   218b0:	bx	r3
   218b4:	ldr	r2, [pc, #28]	; 218d8 <g_strcmp0@plt+0xaca0>
   218b8:	ldr	r1, [pc, #12]	; 218cc <g_strcmp0@plt+0xac94>
   218bc:	ldr	r0, [pc, #12]	; 218d0 <g_strcmp0@plt+0xac98>
   218c0:	pop	{r4, r5, r6, lr}
   218c4:	b	15bac <g_return_if_fail_warning@plt>
   218c8:	andeq	fp, r2, r8, asr #20
   218cc:	andeq	fp, r2, r0, lsl #16
   218d0:	andeq	r6, r2, r0, ror #4
   218d4:			; <UNDEFINED> instruction: 0x0003d6b0
   218d8:	andeq	fp, r2, r8, lsr sl
   218dc:	push	{r4, lr}
   218e0:	mov	r4, r0
   218e4:	sub	sp, sp, #8
   218e8:	bl	214a0 <g_strcmp0@plt+0xa868>
   218ec:	cmp	r4, #0
   218f0:	beq	21958 <g_strcmp0@plt+0xad20>
   218f4:	ldr	r3, [r4]
   218f8:	cmp	r3, #0
   218fc:	beq	2190c <g_strcmp0@plt+0xacd4>
   21900:	ldr	r3, [r3]
   21904:	cmp	r3, r0
   21908:	beq	21920 <g_strcmp0@plt+0xace8>
   2190c:	mov	r1, r0
   21910:	mov	r0, r4
   21914:	bl	166d4 <g_type_check_instance_is_a@plt>
   21918:	cmp	r0, #0
   2191c:	beq	21958 <g_strcmp0@plt+0xad20>
   21920:	ldr	r3, [r4, #12]
   21924:	ldr	r4, [r3]
   21928:	cmp	r4, #0
   2192c:	beq	21974 <g_strcmp0@plt+0xad3c>
   21930:	mov	r3, #0
   21934:	mov	r0, r4
   21938:	str	r3, [sp]
   2193c:	mov	r2, #28
   21940:	mov	r3, #1
   21944:	ldr	r1, [pc, #68]	; 21990 <g_strcmp0@plt+0xad58>
   21948:	bl	16698 <dbus_g_proxy_call_no_reply@plt>
   2194c:	mov	r0, #1
   21950:	add	sp, sp, #8
   21954:	pop	{r4, pc}
   21958:	ldr	r2, [pc, #52]	; 21994 <g_strcmp0@plt+0xad5c>
   2195c:	ldr	r1, [pc, #52]	; 21998 <g_strcmp0@plt+0xad60>
   21960:	ldr	r0, [pc, #52]	; 2199c <g_strcmp0@plt+0xad64>
   21964:	bl	15bac <g_return_if_fail_warning@plt>
   21968:	mov	r0, #0
   2196c:	add	sp, sp, #8
   21970:	pop	{r4, pc}
   21974:	ldr	r2, [pc, #36]	; 219a0 <g_strcmp0@plt+0xad68>
   21978:	mov	r1, #16
   2197c:	ldr	r0, [pc, #24]	; 2199c <g_strcmp0@plt+0xad64>
   21980:	bl	15dec <g_log@plt>
   21984:	mov	r0, r4
   21988:	add	sp, sp, #8
   2198c:	pop	{r4, pc}
   21990:	andeq	fp, r2, ip, ror sl
   21994:	andeq	fp, r2, r0, ror #20
   21998:	andeq	fp, r2, r8, lsl r8
   2199c:	andeq	r6, r2, r0, ror #4
   219a0:			; <UNDEFINED> instruction: 0x0002b8b0
   219a4:	push	{r4, r5, r6, lr}
   219a8:	ldr	r4, [pc, #68]	; 219f4 <g_strcmp0@plt+0xadbc>
   219ac:	ldr	r5, [r4, #36]	; 0x24
   219b0:	cmp	r5, #0
   219b4:	beq	219d8 <g_strcmp0@plt+0xada0>
   219b8:	mov	r0, r5
   219bc:	bl	15aec <g_object_ref@plt>
   219c0:	ldr	r4, [r4, #36]	; 0x24
   219c4:	bl	214a0 <g_strcmp0@plt+0xa868>
   219c8:	mov	r1, r0
   219cc:	mov	r0, r4
   219d0:	pop	{r4, r5, r6, lr}
   219d4:	b	15d68 <g_type_check_instance_cast@plt>
   219d8:	bl	214a0 <g_strcmp0@plt+0xa868>
   219dc:	mov	r1, r5
   219e0:	bl	15a8c <g_object_new@plt>
   219e4:	mov	r1, r4
   219e8:	str	r0, [r1, #36]!	; 0x24
   219ec:	bl	15a98 <g_object_add_weak_pointer@plt>
   219f0:	b	219c0 <g_strcmp0@plt+0xad88>
   219f4:			; <UNDEFINED> instruction: 0x0003d6b0
   219f8:	push	{r4, r5, r6, lr}
   219fc:	sub	sp, sp, #8
   21a00:	ldr	r4, [pc, #132]	; 21a8c <g_strcmp0@plt+0xae54>
   21a04:	mov	r2, #0
   21a08:	subs	r5, r0, #0
   21a0c:	ldr	r3, [r4]
   21a10:	str	r2, [sp]
   21a14:	str	r3, [sp, #4]
   21a18:	beq	21a50 <g_strcmp0@plt+0xae18>
   21a1c:	mov	r3, sp
   21a20:	mov	r0, r2
   21a24:	mov	r1, r5
   21a28:	bl	160ec <gtk_show_uri@plt>
   21a2c:	subs	r6, r0, #0
   21a30:	beq	21a68 <g_strcmp0@plt+0xae30>
   21a34:	ldr	r2, [sp, #4]
   21a38:	ldr	r3, [r4]
   21a3c:	mov	r0, r6
   21a40:	cmp	r2, r3
   21a44:	bne	21a88 <g_strcmp0@plt+0xae50>
   21a48:	add	sp, sp, #8
   21a4c:	pop	{r4, r5, r6, pc}
   21a50:	ldr	r2, [pc, #56]	; 21a90 <g_strcmp0@plt+0xae58>
   21a54:	ldr	r1, [pc, #56]	; 21a94 <g_strcmp0@plt+0xae5c>
   21a58:	ldr	r0, [pc, #56]	; 21a98 <g_strcmp0@plt+0xae60>
   21a5c:	mov	r6, r5
   21a60:	bl	15bac <g_return_if_fail_warning@plt>
   21a64:	b	21a34 <g_strcmp0@plt+0xadfc>
   21a68:	mov	r3, r5
   21a6c:	ldr	r2, [pc, #40]	; 21a9c <g_strcmp0@plt+0xae64>
   21a70:	mov	r1, #16
   21a74:	ldr	r0, [pc, #28]	; 21a98 <g_strcmp0@plt+0xae60>
   21a78:	bl	15dec <g_log@plt>
   21a7c:	ldr	r0, [sp]
   21a80:	bl	15c78 <g_error_free@plt>
   21a84:	b	21a34 <g_strcmp0@plt+0xadfc>
   21a88:	bl	164ac <__stack_chk_fail@plt>
   21a8c:	andeq	ip, r3, r0, asr lr
   21a90:	muleq	r2, r4, sl
   21a94:	andeq	fp, r2, r4, lsl #21
   21a98:	andeq	r6, r2, r0, ror #4
   21a9c:	andeq	fp, r2, r0, lsr #21
   21aa0:	ldrb	r2, [r0]
   21aa4:	cmp	r2, #0
   21aa8:	beq	21b08 <g_strcmp0@plt+0xaed0>
   21aac:	push	{r4, r5, r6, lr}
   21ab0:	mov	r4, r0
   21ab4:	ldr	r1, [pc, #84]	; 21b10 <g_strcmp0@plt+0xaed8>
   21ab8:	bl	162b4 <g_str_has_prefix@plt>
   21abc:	subs	r5, r0, #0
   21ac0:	bne	21ae0 <g_strcmp0@plt+0xaea8>
   21ac4:	mov	r0, r4
   21ac8:	ldr	r1, [pc, #68]	; 21b14 <g_strcmp0@plt+0xaedc>
   21acc:	bl	16a28 <g_str_has_suffix@plt>
   21ad0:	cmp	r0, #0
   21ad4:	bne	21af4 <g_strcmp0@plt+0xaebc>
   21ad8:	mov	r0, #0
   21adc:	pop	{r4, r5, r6, pc}
   21ae0:	mov	r2, #5
   21ae4:	ldr	r1, [pc, #44]	; 21b18 <g_strcmp0@plt+0xaee0>
   21ae8:	mov	r0, #0
   21aec:	pop	{r4, r5, r6, lr}
   21af0:	b	16530 <dcgettext@plt>
   21af4:	mov	r0, r5
   21af8:	mov	r2, #5
   21afc:	ldr	r1, [pc, #24]	; 21b1c <g_strcmp0@plt+0xaee4>
   21b00:	pop	{r4, r5, r6, lr}
   21b04:	b	16530 <dcgettext@plt>
   21b08:	mov	r0, #0
   21b0c:	bx	lr
   21b10:			; <UNDEFINED> instruction: 0x000267bc
   21b14:	andeq	fp, r2, r4, asr fp
   21b18:	andeq	fp, r2, ip, asr #22
   21b1c:	andeq	fp, r2, r8, asr fp
   21b20:	push	{r4, r5, r6, r7, r8, lr}
   21b24:	mov	r5, r0
   21b28:	ldr	r0, [r0, #4]
   21b2c:	mov	r1, #4
   21b30:	add	r0, r0, #1
   21b34:	bl	16938 <g_malloc0_n@plt>
   21b38:	ldr	r3, [r5, #4]
   21b3c:	cmp	r3, #0
   21b40:	mov	r7, r0
   21b44:	beq	21b74 <g_strcmp0@plt+0xaf3c>
   21b48:	sub	r6, r0, #4
   21b4c:	mov	r4, #0
   21b50:	ldr	r3, [r5]
   21b54:	ldr	r0, [r3, r4, lsl #2]
   21b58:	bl	15be8 <pk_package_get_id@plt>
   21b5c:	bl	15fe4 <g_strdup@plt>
   21b60:	ldr	r3, [r5, #4]
   21b64:	add	r4, r4, #1
   21b68:	cmp	r3, r4
   21b6c:	str	r0, [r6, #4]!
   21b70:	bhi	21b50 <g_strcmp0@plt+0xaf18>
   21b74:	mov	r0, r7
   21b78:	pop	{r4, r5, r6, r7, r8, pc}
   21b7c:	push	{r4, r5, r6, lr}
   21b80:	subs	r4, r0, #0
   21b84:	beq	21bcc <g_strcmp0@plt+0xaf94>
   21b88:	bl	165a8 <g_ptr_array_new@plt>
   21b8c:	mov	r6, r0
   21b90:	mov	r0, r4
   21b94:	bl	16464 <g_strv_length@plt>
   21b98:	cmp	r0, #0
   21b9c:	subne	r4, r4, #4
   21ba0:	addne	r5, r4, r0, lsl #2
   21ba4:	beq	21bc4 <g_strcmp0@plt+0xaf8c>
   21ba8:	ldr	r0, [r4, #4]!
   21bac:	bl	15fe4 <g_strdup@plt>
   21bb0:	mov	r1, r0
   21bb4:	mov	r0, r6
   21bb8:	bl	16a10 <g_ptr_array_add@plt>
   21bbc:	cmp	r4, r5
   21bc0:	bne	21ba8 <g_strcmp0@plt+0xaf70>
   21bc4:	mov	r0, r6
   21bc8:	pop	{r4, r5, r6, pc}
   21bcc:	ldr	r2, [pc, #20]	; 21be8 <g_strcmp0@plt+0xafb0>
   21bd0:	ldr	r1, [pc, #20]	; 21bec <g_strcmp0@plt+0xafb4>
   21bd4:	ldr	r0, [pc, #20]	; 21bf0 <g_strcmp0@plt+0xafb8>
   21bd8:	mov	r6, r4
   21bdc:	bl	15bac <g_return_if_fail_warning@plt>
   21be0:	mov	r0, r6
   21be4:	pop	{r4, r5, r6, pc}
   21be8:	andeq	fp, r2, r0, ror #22
   21bec:			; <UNDEFINED> instruction: 0x0002bab8
   21bf0:	andeq	r6, r2, r0, ror #4
   21bf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21bf8:	mov	r7, r1
   21bfc:	ldr	r8, [pc, #1156]	; 22088 <g_strcmp0@plt+0xb450>
   21c00:	sub	sp, sp, #60	; 0x3c
   21c04:	mov	r3, #0
   21c08:	ldr	r1, [r8]
   21c0c:	subs	r6, r0, #0
   21c10:	str	r1, [sp, #52]	; 0x34
   21c14:	str	r3, [sp, #24]
   21c18:	beq	21c7c <g_strcmp0@plt+0xb044>
   21c1c:	mov	r4, r2
   21c20:	bl	15f90 <gtk_text_buffer_get_type@plt>
   21c24:	ldr	r3, [r6]
   21c28:	cmp	r3, #0
   21c2c:	beq	21c3c <g_strcmp0@plt+0xb004>
   21c30:	ldr	r3, [r3]
   21c34:	cmp	r3, r0
   21c38:	beq	21c50 <g_strcmp0@plt+0xb018>
   21c3c:	mov	r1, r0
   21c40:	mov	r0, r6
   21c44:	bl	166d4 <g_type_check_instance_is_a@plt>
   21c48:	cmp	r0, #0
   21c4c:	beq	21c7c <g_strcmp0@plt+0xb044>
   21c50:	cmp	r4, #0
   21c54:	beq	2202c <g_strcmp0@plt+0xb3f4>
   21c58:	ldrb	r3, [r4]
   21c5c:	cmp	r3, #0
   21c60:	bne	21c90 <g_strcmp0@plt+0xb058>
   21c64:	ldr	r2, [sp, #52]	; 0x34
   21c68:	ldr	r3, [r8]
   21c6c:	cmp	r2, r3
   21c70:	bne	22084 <g_strcmp0@plt+0xb44c>
   21c74:	add	sp, sp, #60	; 0x3c
   21c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21c7c:	ldr	r2, [pc, #1032]	; 2208c <g_strcmp0@plt+0xb454>
   21c80:	ldr	r1, [pc, #1032]	; 22090 <g_strcmp0@plt+0xb458>
   21c84:	ldr	r0, [pc, #1032]	; 22094 <g_strcmp0@plt+0xb45c>
   21c88:	bl	15bac <g_return_if_fail_warning@plt>
   21c8c:	b	21c64 <g_strcmp0@plt+0xb02c>
   21c90:	mov	r5, #0
   21c94:	add	r2, sp, #24
   21c98:	add	r3, sp, #28
   21c9c:	str	r2, [sp, #8]
   21ca0:	str	r3, [sp]
   21ca4:	mov	r0, r4
   21ca8:	str	r5, [sp, #4]
   21cac:	mov	r2, r5
   21cb0:	add	r3, sp, #20
   21cb4:	mvn	r1, #0
   21cb8:	bl	16a64 <pango_parse_markup@plt>
   21cbc:	cmp	r0, r5
   21cc0:	beq	22040 <g_strcmp0@plt+0xb408>
   21cc4:	ldr	r3, [sp, #20]
   21cc8:	cmp	r3, #0
   21ccc:	beq	22064 <g_strcmp0@plt+0xb42c>
   21cd0:	mov	r3, r5
   21cd4:	mov	r1, r5
   21cd8:	mov	r2, r7
   21cdc:	mov	r0, r6
   21ce0:	bl	16644 <gtk_text_buffer_create_mark@plt>
   21ce4:	ldr	fp, [pc, #940]	; 22098 <g_strcmp0@plt+0xb460>
   21ce8:	ldr	sl, [pc, #940]	; 2209c <g_strcmp0@plt+0xb464>
   21cec:	mov	r9, r0
   21cf0:	ldr	r0, [sp, #20]
   21cf4:	bl	16bcc <pango_attr_list_get_iterator@plt>
   21cf8:	mov	r4, r0
   21cfc:	add	r2, sp, #36	; 0x24
   21d00:	add	r1, sp, #32
   21d04:	mov	r0, r4
   21d08:	bl	1647c <pango_attr_iterator_range@plt>
   21d0c:	ldr	r3, [sp, #36]	; 0x24
   21d10:	mov	r0, #0
   21d14:	cmn	r3, #-2147483647	; 0x80000001
   21d18:	ldreq	r3, [sp, #32]
   21d1c:	subeq	r3, r3, #1
   21d20:	streq	r3, [sp, #36]	; 0x24
   21d24:	bl	16404 <gtk_text_tag_new@plt>
   21d28:	mov	r1, #1
   21d2c:	mov	r5, r0
   21d30:	mov	r0, r4
   21d34:	bl	16830 <pango_attr_iterator_get@plt>
   21d38:	cmp	r0, #0
   21d3c:	beq	21d54 <g_strcmp0@plt+0xb11c>
   21d40:	ldr	r2, [r0, #12]
   21d44:	mov	r3, #0
   21d48:	mov	r1, fp
   21d4c:	mov	r0, r5
   21d50:	bl	16578 <g_object_set@plt>
   21d54:	mov	r1, #2
   21d58:	mov	r0, r4
   21d5c:	bl	16830 <pango_attr_iterator_get@plt>
   21d60:	cmp	r0, #0
   21d64:	beq	21d7c <g_strcmp0@plt+0xb144>
   21d68:	ldr	r2, [r0, #12]
   21d6c:	mov	r3, #0
   21d70:	mov	r1, sl
   21d74:	mov	r0, r5
   21d78:	bl	16578 <g_object_set@plt>
   21d7c:	mov	r1, #3
   21d80:	mov	r0, r4
   21d84:	bl	16830 <pango_attr_iterator_get@plt>
   21d88:	cmp	r0, #0
   21d8c:	beq	21da4 <g_strcmp0@plt+0xb16c>
   21d90:	ldr	r2, [r0, #12]
   21d94:	mov	r3, #0
   21d98:	ldr	r1, [pc, #768]	; 220a0 <g_strcmp0@plt+0xb468>
   21d9c:	mov	r0, r5
   21da0:	bl	16578 <g_object_set@plt>
   21da4:	mov	r1, #4
   21da8:	mov	r0, r4
   21dac:	bl	16830 <pango_attr_iterator_get@plt>
   21db0:	cmp	r0, #0
   21db4:	beq	21dcc <g_strcmp0@plt+0xb194>
   21db8:	ldr	r2, [r0, #12]
   21dbc:	mov	r3, #0
   21dc0:	ldr	r1, [pc, #732]	; 220a4 <g_strcmp0@plt+0xb46c>
   21dc4:	mov	r0, r5
   21dc8:	bl	16578 <g_object_set@plt>
   21dcc:	mov	r1, #5
   21dd0:	mov	r0, r4
   21dd4:	bl	16830 <pango_attr_iterator_get@plt>
   21dd8:	cmp	r0, #0
   21ddc:	beq	21df4 <g_strcmp0@plt+0xb1bc>
   21de0:	ldr	r2, [r0, #12]
   21de4:	mov	r3, #0
   21de8:	ldr	r1, [pc, #696]	; 220a8 <g_strcmp0@plt+0xb470>
   21dec:	mov	r0, r5
   21df0:	bl	16578 <g_object_set@plt>
   21df4:	mov	r1, #6
   21df8:	mov	r0, r4
   21dfc:	bl	16830 <pango_attr_iterator_get@plt>
   21e00:	cmp	r0, #0
   21e04:	beq	21e1c <g_strcmp0@plt+0xb1e4>
   21e08:	ldr	r2, [r0, #12]
   21e0c:	mov	r3, #0
   21e10:	ldr	r1, [pc, #660]	; 220ac <g_strcmp0@plt+0xb474>
   21e14:	mov	r0, r5
   21e18:	bl	16578 <g_object_set@plt>
   21e1c:	mov	r1, #7
   21e20:	mov	r0, r4
   21e24:	bl	16830 <pango_attr_iterator_get@plt>
   21e28:	cmp	r0, #0
   21e2c:	beq	21e44 <g_strcmp0@plt+0xb20c>
   21e30:	ldr	r2, [r0, #12]
   21e34:	mov	r3, #0
   21e38:	ldr	r1, [pc, #624]	; 220b0 <g_strcmp0@plt+0xb478>
   21e3c:	mov	r0, r5
   21e40:	bl	16578 <g_object_set@plt>
   21e44:	mov	r1, #8
   21e48:	mov	r0, r4
   21e4c:	bl	16830 <pango_attr_iterator_get@plt>
   21e50:	cmp	r0, #0
   21e54:	beq	21e6c <g_strcmp0@plt+0xb234>
   21e58:	ldr	r2, [r0, #12]
   21e5c:	mov	r3, #0
   21e60:	ldr	r1, [pc, #588]	; 220b4 <g_strcmp0@plt+0xb47c>
   21e64:	mov	r0, r5
   21e68:	bl	16578 <g_object_set@plt>
   21e6c:	mov	r1, #9
   21e70:	mov	r0, r4
   21e74:	bl	16830 <pango_attr_iterator_get@plt>
   21e78:	cmp	r0, #0
   21e7c:	beq	21eac <g_strcmp0@plt+0xb274>
   21e80:	ldr	r1, [r0, #12]
   21e84:	ldrh	lr, [r0, #16]
   21e88:	mov	ip, #0
   21e8c:	str	r1, [sp, #44]	; 0x2c
   21e90:	mov	r3, ip
   21e94:	add	r2, sp, #40	; 0x28
   21e98:	ldr	r1, [pc, #536]	; 220b8 <g_strcmp0@plt+0xb480>
   21e9c:	mov	r0, r5
   21ea0:	strh	lr, [sp, #48]	; 0x30
   21ea4:	str	ip, [sp, #40]	; 0x28
   21ea8:	bl	16578 <g_object_set@plt>
   21eac:	mov	r1, #10
   21eb0:	mov	r0, r4
   21eb4:	bl	16830 <pango_attr_iterator_get@plt>
   21eb8:	cmp	r0, #0
   21ebc:	beq	21eec <g_strcmp0@plt+0xb2b4>
   21ec0:	ldr	r1, [r0, #12]
   21ec4:	ldrh	lr, [r0, #16]
   21ec8:	mov	ip, #0
   21ecc:	str	r1, [sp, #44]	; 0x2c
   21ed0:	mov	r3, ip
   21ed4:	add	r2, sp, #40	; 0x28
   21ed8:	ldr	r1, [pc, #476]	; 220bc <g_strcmp0@plt+0xb484>
   21edc:	mov	r0, r5
   21ee0:	strh	lr, [sp, #48]	; 0x30
   21ee4:	str	ip, [sp, #40]	; 0x28
   21ee8:	bl	16578 <g_object_set@plt>
   21eec:	mov	r1, #11
   21ef0:	mov	r0, r4
   21ef4:	bl	16830 <pango_attr_iterator_get@plt>
   21ef8:	cmp	r0, #0
   21efc:	beq	21f14 <g_strcmp0@plt+0xb2dc>
   21f00:	ldr	r2, [r0, #12]
   21f04:	mov	r3, #0
   21f08:	ldr	r1, [pc, #432]	; 220c0 <g_strcmp0@plt+0xb488>
   21f0c:	mov	r0, r5
   21f10:	bl	16578 <g_object_set@plt>
   21f14:	mov	r1, #12
   21f18:	mov	r0, r4
   21f1c:	bl	16830 <pango_attr_iterator_get@plt>
   21f20:	cmp	r0, #0
   21f24:	beq	21f44 <g_strcmp0@plt+0xb30c>
   21f28:	ldr	r2, [r0, #12]
   21f2c:	mov	r3, #0
   21f30:	subs	r2, r2, r3
   21f34:	movne	r2, #1
   21f38:	ldr	r1, [pc, #388]	; 220c4 <g_strcmp0@plt+0xb48c>
   21f3c:	mov	r0, r5
   21f40:	bl	16578 <g_object_set@plt>
   21f44:	mov	r1, #13
   21f48:	mov	r0, r4
   21f4c:	bl	16830 <pango_attr_iterator_get@plt>
   21f50:	cmp	r0, #0
   21f54:	beq	21f6c <g_strcmp0@plt+0xb334>
   21f58:	ldr	r2, [r0, #12]
   21f5c:	mov	r3, #0
   21f60:	ldr	r1, [pc, #352]	; 220c8 <g_strcmp0@plt+0xb490>
   21f64:	mov	r0, r5
   21f68:	bl	16578 <g_object_set@plt>
   21f6c:	mov	r1, #15
   21f70:	mov	r0, r4
   21f74:	bl	16830 <pango_attr_iterator_get@plt>
   21f78:	cmp	r0, #0
   21f7c:	beq	21f98 <g_strcmp0@plt+0xb360>
   21f80:	mov	r1, #0
   21f84:	ldrd	r2, [r0, #16]
   21f88:	str	r1, [sp]
   21f8c:	mov	r0, r5
   21f90:	ldr	r1, [pc, #308]	; 220cc <g_strcmp0@plt+0xb494>
   21f94:	bl	16578 <g_object_set@plt>
   21f98:	mov	r0, r6
   21f9c:	bl	1689c <gtk_text_buffer_get_tag_table@plt>
   21fa0:	mov	r1, r5
   21fa4:	bl	163f8 <gtk_text_tag_table_add@plt>
   21fa8:	mov	r0, r6
   21fac:	bl	1689c <gtk_text_buffer_get_tag_table@plt>
   21fb0:	ldr	r1, [pc, #280]	; 220d0 <g_strcmp0@plt+0xb498>
   21fb4:	bl	16374 <gtk_text_tag_table_lookup@plt>
   21fb8:	ldrd	r2, [sp, #32]
   21fbc:	ldr	ip, [sp, #28]
   21fc0:	mov	r1, #0
   21fc4:	sub	r3, r3, r2
   21fc8:	str	r1, [sp, #8]
   21fcc:	add	r2, ip, r2
   21fd0:	mov	r1, r7
   21fd4:	str	r5, [sp]
   21fd8:	str	r0, [sp, #4]
   21fdc:	mov	r0, r6
   21fe0:	bl	167a0 <gtk_text_buffer_insert_with_tags@plt>
   21fe4:	mov	r2, r9
   21fe8:	mov	r1, r7
   21fec:	mov	r0, r6
   21ff0:	bl	16080 <gtk_text_buffer_get_iter_at_mark@plt>
   21ff4:	mov	r0, r4
   21ff8:	bl	16854 <pango_attr_iterator_next@plt>
   21ffc:	cmp	r0, #0
   22000:	bne	21cfc <g_strcmp0@plt+0xb0c4>
   22004:	mov	r1, r9
   22008:	mov	r0, r6
   2200c:	bl	15d50 <gtk_text_buffer_delete_mark@plt>
   22010:	mov	r0, r4
   22014:	bl	168b4 <pango_attr_iterator_destroy@plt>
   22018:	ldr	r0, [sp, #20]
   2201c:	bl	15fb4 <pango_attr_list_unref@plt>
   22020:	ldr	r0, [sp, #28]
   22024:	bl	16518 <g_free@plt>
   22028:	b	21c64 <g_strcmp0@plt+0xb02c>
   2202c:	ldr	r2, [pc, #160]	; 220d4 <g_strcmp0@plt+0xb49c>
   22030:	ldr	r1, [pc, #88]	; 22090 <g_strcmp0@plt+0xb458>
   22034:	ldr	r0, [pc, #88]	; 22094 <g_strcmp0@plt+0xb45c>
   22038:	bl	15bac <g_return_if_fail_warning@plt>
   2203c:	b	21c64 <g_strcmp0@plt+0xb02c>
   22040:	ldr	r3, [sp, #24]
   22044:	ldr	r2, [pc, #140]	; 220d8 <g_strcmp0@plt+0xb4a0>
   22048:	mov	r1, #16
   2204c:	ldr	r3, [r3, #8]
   22050:	ldr	r0, [pc, #60]	; 22094 <g_strcmp0@plt+0xb45c>
   22054:	bl	15dec <g_log@plt>
   22058:	ldr	r0, [sp, #24]
   2205c:	bl	15c78 <g_error_free@plt>
   22060:	b	21c64 <g_strcmp0@plt+0xb02c>
   22064:	mov	r0, r6
   22068:	mov	r1, r7
   2206c:	mvn	r3, #0
   22070:	ldr	r2, [sp, #28]
   22074:	bl	15e70 <gtk_text_buffer_insert@plt>
   22078:	ldr	r0, [sp, #28]
   2207c:	bl	16518 <g_free@plt>
   22080:	b	21c64 <g_strcmp0@plt+0xb02c>
   22084:	bl	164ac <__stack_chk_fail@plt>
   22088:	andeq	ip, r3, r0, asr lr
   2208c:	andeq	fp, r2, r0, ror fp
   22090:	ldrdeq	fp, [r2], -r0
   22094:	andeq	r6, r2, r0, ror #4
   22098:			; <UNDEFINED> instruction: 0x0002bbb8
   2209c:	andeq	fp, r2, r4, asr #23
   220a0:	andeq	fp, r2, ip, asr #23
   220a4:	andeq	r6, r2, ip, lsl r5
   220a8:	ldrdeq	fp, [r2], -r4
   220ac:	ldrdeq	fp, [r2], -ip
   220b0:	andeq	r6, r2, ip, lsl #12
   220b4:	andeq	fp, r2, r4, ror #23
   220b8:	strdeq	fp, [r2], -r0
   220bc:	andeq	fp, r2, r0, lsl #24
   220c0:	andeq	r6, r2, ip, lsr r3
   220c4:	andeq	fp, r2, r0, lsl ip
   220c8:	andeq	fp, r2, r0, lsr #24
   220cc:	andeq	fp, r2, r8, lsr #24
   220d0:	andeq	r6, r2, r8, lsl r3
   220d4:	andeq	fp, r2, ip, lsl #23
   220d8:	muleq	r2, ip, fp
   220dc:	cmp	r1, #0
   220e0:	clz	r3, r2
   220e4:	lsr	r3, r3, #5
   220e8:	push	{r4, r5, r6, r7, lr}
   220ec:	movne	r4, r3
   220f0:	moveq	r4, #1
   220f4:	cmp	r4, #0
   220f8:	sub	sp, sp, #12
   220fc:	beq	22118 <g_strcmp0@plt+0xb4e0>
   22100:	ldr	r3, [pc, #88]	; 22160 <g_strcmp0@plt+0xb528>
   22104:	ldr	r0, [r3]
   22108:	clz	r0, r0
   2210c:	lsr	r0, r0, #5
   22110:	add	sp, sp, #12
   22114:	pop	{r4, r5, r6, r7, pc}
   22118:	mov	r3, r1
   2211c:	mov	r6, r2
   22120:	mov	r5, r1
   22124:	mov	r7, r0
   22128:	str	r2, [sp]
   2212c:	mov	r1, #128	; 0x80
   22130:	ldr	r2, [pc, #44]	; 22164 <g_strcmp0@plt+0xb52c>
   22134:	ldr	r0, [pc, #44]	; 22168 <g_strcmp0@plt+0xb530>
   22138:	bl	15dec <g_log@plt>
   2213c:	mov	r0, r7
   22140:	mov	r2, r6
   22144:	mov	r1, r5
   22148:	bl	16284 <gtk_window_set_default_size@plt>
   2214c:	ldr	r3, [pc, #12]	; 22160 <g_strcmp0@plt+0xb528>
   22150:	mov	r0, #1
   22154:	str	r4, [r3]
   22158:	add	sp, sp, #12
   2215c:	pop	{r4, r5, r6, r7, pc}
   22160:	ldrdeq	sp, [r3], -r8
   22164:	andeq	fp, r2, r0, lsr ip
   22168:	andeq	r6, r2, r0, ror #4
   2216c:	push	{r4, r5, r6, lr}
   22170:	subs	r4, r1, #0
   22174:	bne	22190 <g_strcmp0@plt+0xb558>
   22178:	ldr	r2, [pc, #92]	; 221dc <g_strcmp0@plt+0xb5a4>
   2217c:	ldr	r1, [pc, #92]	; 221e0 <g_strcmp0@plt+0xb5a8>
   22180:	ldr	r0, [pc, #92]	; 221e4 <g_strcmp0@plt+0xb5ac>
   22184:	bl	15bac <g_return_if_fail_warning@plt>
   22188:	mov	r0, r4
   2218c:	pop	{r4, r5, r6, pc}
   22190:	mov	r5, r0
   22194:	bl	16254 <gdk_display_get_default@plt>
   22198:	mov	r1, r4
   2219c:	bl	164b8 <gdk_x11_window_foreign_new_for_display@plt>
   221a0:	mov	r6, r0
   221a4:	bl	15d14 <gtk_widget_get_type@plt>
   221a8:	mov	r1, r0
   221ac:	mov	r0, r5
   221b0:	bl	15d68 <g_type_check_instance_cast@plt>
   221b4:	bl	15da4 <gtk_widget_get_window@plt>
   221b8:	mov	r1, #1
   221bc:	mov	r4, r0
   221c0:	mov	r0, r5
   221c4:	bl	16a04 <gtk_window_set_modal@plt>
   221c8:	mov	r0, r4
   221cc:	mov	r1, r6
   221d0:	bl	16398 <gdk_window_set_transient_for@plt>
   221d4:	mov	r0, #1
   221d8:	pop	{r4, r5, r6, pc}
   221dc:	andeq	fp, r2, ip, asr #24
   221e0:	strdeq	fp, [r2], -r0
   221e4:	andeq	r6, r2, r0, ror #4
   221e8:	push	{r4, r5, r6, r7, r8, lr}
   221ec:	sub	sp, sp, #40	; 0x28
   221f0:	ldr	r6, [pc, #520]	; 22400 <g_strcmp0@plt+0xb7c8>
   221f4:	subs	r4, r1, #0
   221f8:	ldr	r3, [r6]
   221fc:	str	r3, [sp, #36]	; 0x24
   22200:	beq	22394 <g_strcmp0@plt+0xb75c>
   22204:	cmp	r0, #0
   22208:	mov	r7, r2
   2220c:	beq	223a8 <g_strcmp0@plt+0xb770>
   22210:	mov	r2, sp
   22214:	mov	r1, #8
   22218:	bl	1674c <gtk_style_context_get_color@plt>
   2221c:	vldr	d4, [pc, #468]	; 223f8 <g_strcmp0@plt+0xb7c0>
   22220:	vldr	d5, [sp, #16]
   22224:	vldr	d6, [sp, #8]
   22228:	vldr	d7, [sp]
   2222c:	ldr	r0, [pc, #464]	; 22404 <g_strcmp0@plt+0xb7cc>
   22230:	vmul.f64	d5, d5, d4
   22234:	vmul.f64	d6, d6, d4
   22238:	vmul.f64	d7, d7, d4
   2223c:	vcvt.u32.f64	s11, d5
   22240:	vcvt.u32.f64	s13, d6
   22244:	vcvt.u32.f64	s15, d7
   22248:	vmov	r3, s11
   2224c:	vmov	r2, s13
   22250:	vmov	r1, s15
   22254:	bl	160e0 <g_strdup_printf@plt>
   22258:	mov	r8, r0
   2225c:	mov	r0, r4
   22260:	bl	15d44 <pk_package_id_split@plt>
   22264:	subs	r5, r0, #0
   22268:	beq	223d4 <g_strcmp0@plt+0xb79c>
   2226c:	cmp	r7, #0
   22270:	beq	22280 <g_strcmp0@plt+0xb648>
   22274:	ldrb	r3, [r7]
   22278:	cmp	r3, #0
   2227c:	bne	22300 <g_strcmp0@plt+0xb6c8>
   22280:	ldr	r0, [r5]
   22284:	bl	15d20 <g_string_new@plt>
   22288:	ldr	r2, [r5, #4]
   2228c:	ldrb	r3, [r2]
   22290:	cmp	r3, #0
   22294:	mov	r4, r0
   22298:	bne	223b8 <g_strcmp0@plt+0xb780>
   2229c:	ldr	r0, [r5, #8]
   222a0:	bl	21aa0 <g_strcmp0@plt+0xae68>
   222a4:	subs	r2, r0, #0
   222a8:	beq	222b8 <g_strcmp0@plt+0xb680>
   222ac:	ldr	r1, [pc, #340]	; 22408 <g_strcmp0@plt+0xb7d0>
   222b0:	mov	r0, r4
   222b4:	bl	16b3c <g_string_append_printf@plt>
   222b8:	mov	r0, r4
   222bc:	mov	r1, #0
   222c0:	bl	167d0 <g_string_free@plt>
   222c4:	mov	r7, #0
   222c8:	mov	r4, r0
   222cc:	mov	r0, r7
   222d0:	bl	16518 <g_free@plt>
   222d4:	mov	r0, r8
   222d8:	bl	16518 <g_free@plt>
   222dc:	mov	r0, r5
   222e0:	bl	1644c <g_strfreev@plt>
   222e4:	ldr	r2, [sp, #36]	; 0x24
   222e8:	ldr	r3, [r6]
   222ec:	mov	r0, r4
   222f0:	cmp	r2, r3
   222f4:	bne	223f4 <g_strcmp0@plt+0xb7bc>
   222f8:	add	sp, sp, #40	; 0x28
   222fc:	pop	{r4, r5, r6, r7, r8, pc}
   22300:	ldr	r0, [pc, #260]	; 2240c <g_strcmp0@plt+0xb7d4>
   22304:	bl	15d20 <g_string_new@plt>
   22308:	mvn	r1, #0
   2230c:	mov	r4, r0
   22310:	mov	r0, r7
   22314:	bl	16a1c <g_markup_escape_text@plt>
   22318:	ldr	r1, [pc, #240]	; 22410 <g_strcmp0@plt+0xb7d8>
   2231c:	mov	r2, r0
   22320:	mov	r7, r0
   22324:	mov	r0, r4
   22328:	bl	16b3c <g_string_append_printf@plt>
   2232c:	mov	r2, r8
   22330:	mov	r0, r4
   22334:	ldr	r1, [pc, #216]	; 22414 <g_strcmp0@plt+0xb7dc>
   22338:	bl	16b3c <g_string_append_printf@plt>
   2233c:	mov	r0, r4
   22340:	ldr	r1, [r5]
   22344:	bl	16ab8 <g_string_append@plt>
   22348:	ldr	r2, [r5, #4]
   2234c:	ldrb	r3, [r2]
   22350:	cmp	r3, #0
   22354:	bne	223c4 <g_strcmp0@plt+0xb78c>
   22358:	ldr	r0, [r5, #8]
   2235c:	bl	21aa0 <g_strcmp0@plt+0xae68>
   22360:	subs	r2, r0, #0
   22364:	beq	22374 <g_strcmp0@plt+0xb73c>
   22368:	ldr	r1, [pc, #152]	; 22408 <g_strcmp0@plt+0xb7d0>
   2236c:	mov	r0, r4
   22370:	bl	16b3c <g_string_append_printf@plt>
   22374:	ldr	r1, [pc, #156]	; 22418 <g_strcmp0@plt+0xb7e0>
   22378:	mov	r0, r4
   2237c:	bl	16ab8 <g_string_append@plt>
   22380:	mov	r0, r4
   22384:	mov	r1, #0
   22388:	bl	167d0 <g_string_free@plt>
   2238c:	mov	r4, r0
   22390:	b	222cc <g_strcmp0@plt+0xb694>
   22394:	ldr	r2, [pc, #128]	; 2241c <g_strcmp0@plt+0xb7e4>
   22398:	ldr	r1, [pc, #128]	; 22420 <g_strcmp0@plt+0xb7e8>
   2239c:	ldr	r0, [pc, #128]	; 22424 <g_strcmp0@plt+0xb7ec>
   223a0:	bl	15bac <g_return_if_fail_warning@plt>
   223a4:	b	222e4 <g_strcmp0@plt+0xb6ac>
   223a8:	ldr	r0, [pc, #120]	; 22428 <g_strcmp0@plt+0xb7f0>
   223ac:	bl	15fe4 <g_strdup@plt>
   223b0:	mov	r8, r0
   223b4:	b	2225c <g_strcmp0@plt+0xb624>
   223b8:	ldr	r1, [pc, #108]	; 2242c <g_strcmp0@plt+0xb7f4>
   223bc:	bl	16b3c <g_string_append_printf@plt>
   223c0:	b	2229c <g_strcmp0@plt+0xb664>
   223c4:	ldr	r1, [pc, #96]	; 2242c <g_strcmp0@plt+0xb7f4>
   223c8:	mov	r0, r4
   223cc:	bl	16b3c <g_string_append_printf@plt>
   223d0:	b	22358 <g_strcmp0@plt+0xb720>
   223d4:	mov	r3, r4
   223d8:	ldr	r2, [pc, #80]	; 22430 <g_strcmp0@plt+0xb7f8>
   223dc:	mov	r1, #16
   223e0:	ldr	r0, [pc, #60]	; 22424 <g_strcmp0@plt+0xb7ec>
   223e4:	bl	15dec <g_log@plt>
   223e8:	mov	r4, r5
   223ec:	mov	r7, r5
   223f0:	b	222cc <g_strcmp0@plt+0xb694>
   223f4:	bl	164ac <__stack_chk_fail@plt>
   223f8:	andeq	r0, r0, r0
   223fc:	rsbmi	lr, pc, r0
   22400:	andeq	ip, r3, r0, asr lr
   22404:	andeq	fp, r2, r8, asr ip
   22408:	andeq	fp, r2, r8, lsl #25
   2240c:	andeq	r7, r2, r8, ror #22
   22410:	andeq	r7, r2, r4, asr #12
   22414:	muleq	r2, r0, ip
   22418:	andeq	fp, r2, r4, lsr #25
   2241c:	andeq	r6, r2, r0, asr #20
   22420:	andeq	fp, r2, ip, lsl #22
   22424:	andeq	r6, r2, r0, ror #4
   22428:	andeq	fp, r2, r8, ror #24
   2242c:	andeq	fp, r2, r4, lsl #25
   22430:	andeq	fp, r2, r0, ror ip
   22434:	push	{r4, r5, r6, lr}
   22438:	subs	r4, r0, #0
   2243c:	beq	224ac <g_strcmp0@plt+0xb874>
   22440:	mov	r5, r1
   22444:	bl	15d44 <pk_package_id_split@plt>
   22448:	cmp	r5, #0
   2244c:	mov	r6, r0
   22450:	beq	22460 <g_strcmp0@plt+0xb828>
   22454:	ldrb	r3, [r5]
   22458:	cmp	r3, #0
   2245c:	bne	2247c <g_strcmp0@plt+0xb844>
   22460:	ldr	r0, [r6]
   22464:	bl	15fe4 <g_strdup@plt>
   22468:	mov	r4, r0
   2246c:	mov	r0, r6
   22470:	bl	1644c <g_strfreev@plt>
   22474:	mov	r0, r4
   22478:	pop	{r4, r5, r6, pc}
   2247c:	mov	r0, r5
   22480:	mvn	r1, #0
   22484:	bl	16a1c <g_markup_escape_text@plt>
   22488:	ldr	r2, [r6]
   2248c:	mov	r5, r0
   22490:	mov	r1, r0
   22494:	ldr	r0, [pc, #40]	; 224c4 <g_strcmp0@plt+0xb88c>
   22498:	bl	160e0 <g_strdup_printf@plt>
   2249c:	mov	r4, r0
   224a0:	mov	r0, r5
   224a4:	bl	16518 <g_free@plt>
   224a8:	b	2246c <g_strcmp0@plt+0xb834>
   224ac:	ldr	r2, [pc, #20]	; 224c8 <g_strcmp0@plt+0xb890>
   224b0:	ldr	r1, [pc, #20]	; 224cc <g_strcmp0@plt+0xb894>
   224b4:	ldr	r0, [pc, #20]	; 224d0 <g_strcmp0@plt+0xb898>
   224b8:	bl	15bac <g_return_if_fail_warning@plt>
   224bc:	mov	r0, r4
   224c0:	pop	{r4, r5, r6, pc}
   224c4:	andeq	fp, r2, ip, lsr #25
   224c8:	andeq	r6, r2, r0, asr #20
   224cc:	andeq	fp, r2, ip, lsr #22
   224d0:	andeq	r6, r2, r0, ror #4
   224d4:	push	{r4, r5, r6, r7, r8, r9, lr}
   224d8:	sub	sp, sp, #12
   224dc:	mov	r4, r1
   224e0:	mov	r5, r0
   224e4:	bl	166ec <getuid@plt>
   224e8:	adds	r0, r0, #0
   224ec:	movne	r0, #1
   224f0:	cmp	r4, #0
   224f4:	moveq	r0, #1
   224f8:	cmp	r0, #0
   224fc:	movne	r4, #0
   22500:	movne	r5, r4
   22504:	movne	r6, #1
   22508:	beq	22528 <g_strcmp0@plt+0xb8f0>
   2250c:	mov	r0, r4
   22510:	bl	16518 <g_free@plt>
   22514:	mov	r0, r5
   22518:	bl	16518 <g_free@plt>
   2251c:	mov	r0, r6
   22520:	add	sp, sp, #12
   22524:	pop	{r4, r5, r6, r7, r8, r9, pc}
   22528:	cmp	r5, #0
   2252c:	beq	22658 <g_strcmp0@plt+0xba20>
   22530:	mov	r2, #5
   22534:	ldr	r1, [pc, #312]	; 22674 <g_strcmp0@plt+0xba3c>
   22538:	bl	16530 <dcgettext@plt>
   2253c:	mov	r1, r5
   22540:	bl	160e0 <g_strdup_printf@plt>
   22544:	mov	r4, r0
   22548:	mov	r2, #5
   2254c:	ldr	r1, [pc, #292]	; 22678 <g_strcmp0@plt+0xba40>
   22550:	mov	r0, #0
   22554:	bl	16530 <dcgettext@plt>
   22558:	mov	r2, #5
   2255c:	ldr	r1, [pc, #280]	; 2267c <g_strcmp0@plt+0xba44>
   22560:	ldr	r8, [pc, #280]	; 22680 <g_strcmp0@plt+0xba48>
   22564:	mov	r5, r0
   22568:	mov	r0, #0
   2256c:	bl	16530 <dcgettext@plt>
   22570:	mov	r1, r5
   22574:	mov	r3, #0
   22578:	mov	r2, r0
   2257c:	ldr	r0, [pc, #256]	; 22684 <g_strcmp0@plt+0xba4c>
   22580:	bl	1629c <g_strjoin@plt>
   22584:	mov	r2, #1
   22588:	mov	r3, #3
   2258c:	mov	r1, r2
   22590:	str	r4, [sp, #4]
   22594:	str	r8, [sp]
   22598:	mov	r5, r0
   2259c:	mov	r0, #0
   225a0:	bl	16a70 <gtk_message_dialog_new@plt>
   225a4:	mov	r6, r0
   225a8:	bl	165e4 <gtk_dialog_get_type@plt>
   225ac:	mov	r7, r0
   225b0:	mov	r1, r0
   225b4:	mov	r0, r6
   225b8:	bl	15d68 <g_type_check_instance_cast@plt>
   225bc:	mov	r2, #5
   225c0:	ldr	r1, [pc, #192]	; 22688 <g_strcmp0@plt+0xba50>
   225c4:	mov	r9, r0
   225c8:	mov	r0, #0
   225cc:	bl	16530 <dcgettext@plt>
   225d0:	mvn	r2, #4
   225d4:	mov	r1, r0
   225d8:	mov	r0, r9
   225dc:	bl	15bf4 <gtk_dialog_add_button@plt>
   225e0:	bl	16590 <gtk_message_dialog_get_type@plt>
   225e4:	mov	r1, r0
   225e8:	mov	r0, r6
   225ec:	bl	15d68 <g_type_check_instance_cast@plt>
   225f0:	mov	r2, r5
   225f4:	mov	r1, r8
   225f8:	bl	15b70 <gtk_message_dialog_format_secondary_text@plt>
   225fc:	bl	16bfc <gtk_window_get_type@plt>
   22600:	mov	r1, r0
   22604:	mov	r0, r6
   22608:	bl	15d68 <g_type_check_instance_cast@plt>
   2260c:	ldr	r1, [pc, #120]	; 2268c <g_strcmp0@plt+0xba54>
   22610:	bl	15ef4 <gtk_window_set_icon_name@plt>
   22614:	mov	r1, r7
   22618:	mov	r0, r6
   2261c:	bl	15d68 <g_type_check_instance_cast@plt>
   22620:	bl	167e8 <gtk_dialog_run@plt>
   22624:	mov	r7, r0
   22628:	mov	r0, r6
   2262c:	bl	1638c <gtk_widget_destroy@plt>
   22630:	cmn	r7, #5
   22634:	moveq	r6, #1
   22638:	beq	2250c <g_strcmp0@plt+0xb8d4>
   2263c:	mov	r3, #0
   22640:	ldr	r2, [pc, #72]	; 22690 <g_strcmp0@plt+0xba58>
   22644:	mov	r1, #16
   22648:	ldr	r0, [pc, #68]	; 22694 <g_strcmp0@plt+0xba5c>
   2264c:	bl	15dec <g_log@plt>
   22650:	mov	r6, #0
   22654:	b	2250c <g_strcmp0@plt+0xb8d4>
   22658:	mov	r2, #5
   2265c:	ldr	r1, [pc, #52]	; 22698 <g_strcmp0@plt+0xba60>
   22660:	mov	r0, r5
   22664:	bl	16530 <dcgettext@plt>
   22668:	bl	15fe4 <g_strdup@plt>
   2266c:	mov	r4, r0
   22670:	b	22548 <g_strcmp0@plt+0xb910>
   22674:	strdeq	fp, [r2], -r0
   22678:	andeq	fp, r2, r4, lsl sp
   2267c:	andeq	fp, r2, ip, asr #26
   22680:	andeq	fp, r2, ip, asr r9
   22684:	andeq	r7, r2, r0, lsr #25
   22688:	andeq	fp, r2, r8, lsr #27
   2268c:			; <UNDEFINED> instruction: 0x0002bdbc
   22690:	ldrdeq	fp, [r2], -r4
   22694:	andeq	r6, r2, r0, ror #4
   22698:			; <UNDEFINED> instruction: 0x0002bcbc
   2269c:	push	{r4, r5, r6, r7, r8, lr}
   226a0:	mov	r4, r0
   226a4:	mov	r0, r1
   226a8:	mov	r5, r1
   226ac:	mov	r7, r2
   226b0:	bl	21024 <g_strcmp0@plt+0xa3ec>
   226b4:	ldr	r1, [pc, #124]	; 22738 <g_strcmp0@plt+0xbb00>
   226b8:	mov	r6, r0
   226bc:	bl	162b4 <g_str_has_prefix@plt>
   226c0:	cmp	r0, #0
   226c4:	bne	22708 <g_strcmp0@plt+0xbad0>
   226c8:	ldr	r1, [pc, #108]	; 2273c <g_strcmp0@plt+0xbb04>
   226cc:	mov	r0, r6
   226d0:	bl	162b4 <g_str_has_prefix@plt>
   226d4:	cmp	r0, #0
   226d8:	movne	r1, #50	; 0x32
   226dc:	beq	22724 <g_strcmp0@plt+0xbaec>
   226e0:	mov	r0, r4
   226e4:	bl	24b9c <g_strcmp0@plt+0xdf64>
   226e8:	mov	r2, r6
   226ec:	mov	r1, r7
   226f0:	mov	r0, r4
   226f4:	bl	24eb4 <g_strcmp0@plt+0xe27c>
   226f8:	cmp	r5, #18
   226fc:	beq	22710 <g_strcmp0@plt+0xbad8>
   22700:	mov	r0, #1
   22704:	pop	{r4, r5, r6, r7, r8, pc}
   22708:	mov	r1, #150	; 0x96
   2270c:	b	226e0 <g_strcmp0@plt+0xbaa8>
   22710:	mov	r0, r4
   22714:	mov	r1, #0
   22718:	bl	24c64 <g_strcmp0@plt+0xe02c>
   2271c:	mov	r0, #1
   22720:	pop	{r4, r5, r6, r7, r8, pc}
   22724:	mov	r2, r6
   22728:	mov	r1, r7
   2272c:	mov	r0, r4
   22730:	bl	24df4 <g_strcmp0@plt+0xe1bc>
   22734:	b	226f8 <g_strcmp0@plt+0xbac0>
   22738:	andeq	fp, r2, r8, ror #27
   2273c:	andeq	fp, r2, r8, ror #13
   22740:	push	{r4, lr}
   22744:	subs	r4, r0, #0
   22748:	sub	sp, sp, #8
   2274c:	beq	227d0 <g_strcmp0@plt+0xbb98>
   22750:	cmp	r4, #59	; 0x3b
   22754:	bls	227e8 <g_strcmp0@plt+0xbbb0>
   22758:	vmov	s15, r4
   2275c:	vldr	d4, [pc, #156]	; 22800 <g_strcmp0@plt+0xbbc8>
   22760:	vldr	d5, [pc, #160]	; 22808 <g_strcmp0@plt+0xbbd0>
   22764:	vcvt.f64.u32	d6, s15
   22768:	vdiv.f64	d7, d6, d4
   2276c:	vadd.f64	d7, d7, d5
   22770:	vcvt.u32.f64	s15, d7
   22774:	vmov	r4, s15
   22778:	cmp	r4, #59	; 0x3b
   2277c:	bls	227b8 <g_strcmp0@plt+0xbb80>
   22780:	ldr	r3, [pc, #136]	; 22810 <g_strcmp0@plt+0xbbd8>
   22784:	mov	r2, #5
   22788:	str	r2, [sp]
   2278c:	umull	r3, r4, r3, r4
   22790:	ldr	r2, [pc, #124]	; 22814 <g_strcmp0@plt+0xbbdc>
   22794:	ldr	r1, [pc, #124]	; 22818 <g_strcmp0@plt+0xbbe0>
   22798:	lsr	r4, r4, #5
   2279c:	mov	r3, r4
   227a0:	mov	r0, #0
   227a4:	bl	160f8 <dcngettext@plt>
   227a8:	mov	r1, r4
   227ac:	add	sp, sp, #8
   227b0:	pop	{r4, lr}
   227b4:	b	160e0 <g_strdup_printf@plt>
   227b8:	mov	r3, #5
   227bc:	str	r3, [sp]
   227c0:	ldr	r2, [pc, #84]	; 2281c <g_strcmp0@plt+0xbbe4>
   227c4:	vmov	r3, s15
   227c8:	ldr	r1, [pc, #80]	; 22820 <g_strcmp0@plt+0xbbe8>
   227cc:	b	227a0 <g_strcmp0@plt+0xbb68>
   227d0:	mov	r2, #5
   227d4:	ldr	r1, [pc, #72]	; 22824 <g_strcmp0@plt+0xbbec>
   227d8:	bl	16530 <dcgettext@plt>
   227dc:	add	sp, sp, #8
   227e0:	pop	{r4, lr}
   227e4:	b	160e0 <g_strdup_printf@plt>
   227e8:	mov	r3, #5
   227ec:	str	r3, [sp]
   227f0:	ldr	r2, [pc, #48]	; 22828 <g_strcmp0@plt+0xbbf0>
   227f4:	mov	r3, r4
   227f8:	ldr	r1, [pc, #44]	; 2282c <g_strcmp0@plt+0xbbf4>
   227fc:	b	227a0 <g_strcmp0@plt+0xbb68>
   22800:	andeq	r0, r0, r0
   22804:	submi	r0, lr, r0
   22808:	andeq	r0, r0, r0
   2280c:	svccc	0x00e00000
   22810:	stmhi	r8, {r0, r3, r7, fp, pc}
   22814:	andeq	fp, r2, r8, lsr #28
   22818:	andeq	fp, r2, r4, lsr lr
   2281c:	andeq	fp, r2, r0, lsl lr
   22820:	andeq	fp, r2, ip, lsl lr
   22824:	strdeq	fp, [r2], -r4
   22828:	strdeq	fp, [r2], -r8
   2282c:	andeq	fp, r2, r4, lsl #28
   22830:	push	{r4, r5, r6, r7, r8, lr}
   22834:	subs	r5, r0, #0
   22838:	sub	sp, sp, #8
   2283c:	beq	22964 <g_strcmp0@plt+0xbd2c>
   22840:	cmp	r5, #59	; 0x3b
   22844:	bls	229e8 <g_strcmp0@plt+0xbdb0>
   22848:	vmov	s15, r5
   2284c:	vldr	d5, [pc, #436]	; 22a08 <g_strcmp0@plt+0xbdd0>
   22850:	vldr	d6, [pc, #440]	; 22a10 <g_strcmp0@plt+0xbdd8>
   22854:	vcvt.f64.u32	d4, s15
   22858:	vdiv.f64	d7, d4, d5
   2285c:	vadd.f64	d7, d7, d6
   22860:	vcvt.u32.f64	s15, d7
   22864:	vmov	r4, s15
   22868:	cmp	r4, #59	; 0x3b
   2286c:	bls	228b4 <g_strcmp0@plt+0xbc7c>
   22870:	ldr	r5, [pc, #416]	; 22a18 <g_strcmp0@plt+0xbde0>
   22874:	umull	r3, r5, r5, r4
   22878:	lsr	r5, r5, #5
   2287c:	rsb	r3, r5, r5, lsl #4
   22880:	subs	r4, r4, r3, lsl #2
   22884:	bne	228f8 <g_strcmp0@plt+0xbcc0>
   22888:	mov	r3, #5
   2288c:	ldr	r2, [pc, #392]	; 22a1c <g_strcmp0@plt+0xbde4>
   22890:	ldr	r1, [pc, #392]	; 22a20 <g_strcmp0@plt+0xbde8>
   22894:	str	r3, [sp]
   22898:	mov	r0, r4
   2289c:	mov	r3, r5
   228a0:	bl	160f8 <dcngettext@plt>
   228a4:	mov	r1, r5
   228a8:	add	sp, sp, #8
   228ac:	pop	{r4, r5, r6, r7, r8, lr}
   228b0:	b	160e0 <g_strdup_printf@plt>
   228b4:	ldr	r6, [pc, #348]	; 22a18 <g_strcmp0@plt+0xbde0>
   228b8:	umull	r3, r6, r6, r5
   228bc:	lsr	r6, r6, #5
   228c0:	rsb	r6, r6, r6, lsl #4
   228c4:	subs	r6, r5, r6, lsl #2
   228c8:	bne	2297c <g_strcmp0@plt+0xbd44>
   228cc:	mov	r3, #5
   228d0:	str	r3, [sp]
   228d4:	mov	r0, r6
   228d8:	vmov	r3, s15
   228dc:	ldr	r2, [pc, #320]	; 22a24 <g_strcmp0@plt+0xbdec>
   228e0:	ldr	r1, [pc, #320]	; 22a28 <g_strcmp0@plt+0xbdf0>
   228e4:	bl	160f8 <dcngettext@plt>
   228e8:	mov	r1, r4
   228ec:	add	sp, sp, #8
   228f0:	pop	{r4, r5, r6, r7, r8, lr}
   228f4:	b	160e0 <g_strdup_printf@plt>
   228f8:	mov	r2, #5
   228fc:	ldr	r1, [pc, #296]	; 22a2c <g_strcmp0@plt+0xbdf4>
   22900:	mov	r0, #0
   22904:	mov	r6, r2
   22908:	bl	16530 <dcgettext@plt>
   2290c:	mov	r3, r5
   22910:	str	r6, [sp]
   22914:	ldr	r2, [pc, #276]	; 22a30 <g_strcmp0@plt+0xbdf8>
   22918:	ldr	r1, [pc, #276]	; 22a34 <g_strcmp0@plt+0xbdfc>
   2291c:	mov	r7, r0
   22920:	mov	r0, #0
   22924:	bl	160f8 <dcngettext@plt>
   22928:	mov	r3, r4
   2292c:	str	r6, [sp]
   22930:	ldr	r2, [pc, #256]	; 22a38 <g_strcmp0@plt+0xbe00>
   22934:	ldr	r1, [pc, #256]	; 22a3c <g_strcmp0@plt+0xbe04>
   22938:	mov	r8, r0
   2293c:	mov	r0, #0
   22940:	bl	160f8 <dcngettext@plt>
   22944:	mov	r2, r8
   22948:	mov	r3, r4
   2294c:	mov	r1, r5
   22950:	str	r0, [sp]
   22954:	mov	r0, r7
   22958:	bl	160e0 <g_strdup_printf@plt>
   2295c:	add	sp, sp, #8
   22960:	pop	{r4, r5, r6, r7, r8, pc}
   22964:	mov	r2, #5
   22968:	ldr	r1, [pc, #208]	; 22a40 <g_strcmp0@plt+0xbe08>
   2296c:	bl	16530 <dcgettext@plt>
   22970:	add	sp, sp, #8
   22974:	pop	{r4, r5, r6, r7, r8, lr}
   22978:	b	160e0 <g_strdup_printf@plt>
   2297c:	mov	r2, #5
   22980:	ldr	r1, [pc, #164]	; 22a2c <g_strcmp0@plt+0xbdf4>
   22984:	mov	r0, #0
   22988:	mov	r5, r2
   2298c:	bl	16530 <dcgettext@plt>
   22990:	mov	r3, r4
   22994:	str	r5, [sp]
   22998:	ldr	r2, [pc, #152]	; 22a38 <g_strcmp0@plt+0xbe00>
   2299c:	ldr	r1, [pc, #152]	; 22a3c <g_strcmp0@plt+0xbe04>
   229a0:	mov	r7, r0
   229a4:	mov	r0, #0
   229a8:	bl	160f8 <dcngettext@plt>
   229ac:	mov	r3, r6
   229b0:	str	r5, [sp]
   229b4:	ldr	r2, [pc, #136]	; 22a44 <g_strcmp0@plt+0xbe0c>
   229b8:	ldr	r1, [pc, #136]	; 22a48 <g_strcmp0@plt+0xbe10>
   229bc:	mov	r8, r0
   229c0:	mov	r0, #0
   229c4:	bl	160f8 <dcngettext@plt>
   229c8:	mov	r2, r8
   229cc:	mov	r3, r6
   229d0:	mov	r1, r4
   229d4:	str	r0, [sp]
   229d8:	mov	r0, r7
   229dc:	bl	160e0 <g_strdup_printf@plt>
   229e0:	add	sp, sp, #8
   229e4:	pop	{r4, r5, r6, r7, r8, pc}
   229e8:	mov	r3, #5
   229ec:	str	r3, [sp]
   229f0:	ldr	r2, [pc, #84]	; 22a4c <g_strcmp0@plt+0xbe14>
   229f4:	mov	r3, r5
   229f8:	ldr	r1, [pc, #80]	; 22a50 <g_strcmp0@plt+0xbe18>
   229fc:	mov	r0, #0
   22a00:	b	228a0 <g_strcmp0@plt+0xbc68>
   22a04:	nop			; (mov r0, r0)
   22a08:	andeq	r0, r0, r0
   22a0c:	submi	r0, lr, r0
   22a10:	andeq	r0, r0, r0
   22a14:	svccc	0x00e00000
   22a18:	stmhi	r8, {r0, r3, r7, fp, pc}
   22a1c:	andeq	fp, r2, r8, lsr #28
   22a20:	andeq	fp, r2, r4, lsr lr
   22a24:	andeq	fp, r2, r0, lsl lr
   22a28:	andeq	fp, r2, ip, lsl lr
   22a2c:	andeq	fp, r2, ip, lsr lr
   22a30:	andeq	fp, r2, r8, ror #28
   22a34:	andeq	fp, r2, r0, ror lr
   22a38:	andeq	fp, r2, r8, asr #28
   22a3c:	andeq	fp, r2, r0, asr lr
   22a40:	strdeq	fp, [r2], -r4
   22a44:	andeq	fp, r2, r8, asr lr
   22a48:	andeq	fp, r2, r0, ror #28
   22a4c:	strdeq	fp, [r2], -r8
   22a50:	andeq	fp, r2, r4, lsl #28
   22a54:	push	{r4, lr}
   22a58:	sub	sp, sp, #8
   22a5c:	mov	r4, r0
   22a60:	bl	16464 <g_strv_length@plt>
   22a64:	subs	r2, r0, #0
   22a68:	ldreq	r0, [pc, #224]	; 22b50 <g_strcmp0@plt+0xbf18>
   22a6c:	beq	22aa8 <g_strcmp0@plt+0xbe70>
   22a70:	cmp	r2, #1
   22a74:	beq	22aa4 <g_strcmp0@plt+0xbe6c>
   22a78:	cmp	r2, #2
   22a7c:	beq	22b0c <g_strcmp0@plt+0xbed4>
   22a80:	cmp	r2, #3
   22a84:	beq	22b2c <g_strcmp0@plt+0xbef4>
   22a88:	cmp	r2, #4
   22a8c:	beq	22ab4 <g_strcmp0@plt+0xbe7c>
   22a90:	cmp	r2, #5
   22a94:	movne	r0, #0
   22a98:	beq	22adc <g_strcmp0@plt+0xbea4>
   22a9c:	add	sp, sp, #8
   22aa0:	pop	{r4, pc}
   22aa4:	ldr	r0, [r4]
   22aa8:	add	sp, sp, #8
   22aac:	pop	{r4, lr}
   22ab0:	b	15fe4 <g_strdup@plt>
   22ab4:	mov	r2, #5
   22ab8:	ldr	r1, [pc, #148]	; 22b54 <g_strcmp0@plt+0xbf1c>
   22abc:	mov	r0, #0
   22ac0:	bl	16530 <dcgettext@plt>
   22ac4:	ldr	r2, [r4, #12]
   22ac8:	ldr	r3, [r4, #8]
   22acc:	str	r2, [sp]
   22ad0:	ldm	r4, {r1, r2}
   22ad4:	bl	160e0 <g_strdup_printf@plt>
   22ad8:	b	22a9c <g_strcmp0@plt+0xbe64>
   22adc:	ldr	r1, [pc, #116]	; 22b58 <g_strcmp0@plt+0xbf20>
   22ae0:	mov	r0, #0
   22ae4:	bl	16530 <dcgettext@plt>
   22ae8:	ldr	r2, [r4, #16]
   22aec:	ldr	r3, [r4, #12]
   22af0:	str	r2, [sp, #4]
   22af4:	str	r3, [sp]
   22af8:	ldrd	r2, [r4, #4]
   22afc:	ldr	r1, [r4]
   22b00:	bl	160e0 <g_strdup_printf@plt>
   22b04:	add	sp, sp, #8
   22b08:	pop	{r4, pc}
   22b0c:	mov	r2, #5
   22b10:	ldr	r1, [pc, #68]	; 22b5c <g_strcmp0@plt+0xbf24>
   22b14:	mov	r0, #0
   22b18:	bl	16530 <dcgettext@plt>
   22b1c:	ldm	r4, {r1, r2}
   22b20:	add	sp, sp, #8
   22b24:	pop	{r4, lr}
   22b28:	b	160e0 <g_strdup_printf@plt>
   22b2c:	mov	r2, #5
   22b30:	ldr	r1, [pc, #40]	; 22b60 <g_strcmp0@plt+0xbf28>
   22b34:	mov	r0, #0
   22b38:	bl	16530 <dcgettext@plt>
   22b3c:	ldrd	r2, [r4, #4]
   22b40:	ldr	r1, [r4]
   22b44:	add	sp, sp, #8
   22b48:	pop	{r4, lr}
   22b4c:	b	160e0 <g_strdup_printf@plt>
   22b50:	andeq	fp, r2, r8, ror lr
   22b54:	andeq	fp, r2, r4, lsl #29
   22b58:	andeq	fp, r2, r0, lsl #29
   22b5c:	andeq	fp, r2, ip, lsl #29
   22b60:	andeq	fp, r2, r8, lsl #29
   22b64:	mov	r0, #0
   22b68:	bx	lr
   22b6c:	push	{r4, lr}
   22b70:	sub	sp, sp, #16
   22b74:	bl	161f4 <pk_task_get_type@plt>
   22b78:	mov	r4, r0
   22b7c:	ldr	r0, [pc, #48]	; 22bb4 <g_strcmp0@plt+0xbf7c>
   22b80:	bl	16410 <g_intern_static_string@plt>
   22b84:	ldr	r1, [pc, #44]	; 22bb8 <g_strcmp0@plt+0xbf80>
   22b88:	mov	r2, #0
   22b8c:	mov	r3, #24
   22b90:	stmib	sp, {r1, r2}
   22b94:	str	r3, [sp]
   22b98:	mov	r2, #132	; 0x84
   22b9c:	ldr	r3, [pc, #24]	; 22bbc <g_strcmp0@plt+0xbf84>
   22ba0:	mov	r1, r0
   22ba4:	mov	r0, r4
   22ba8:	bl	15bb8 <g_type_register_static_simple@plt>
   22bac:	add	sp, sp, #16
   22bb0:	pop	{r4, pc}
   22bb4:			; <UNDEFINED> instruction: 0x0002beb4
   22bb8:	muleq	r2, ip, r0
   22bbc:	andeq	r2, r2, r0, ror #24
   22bc0:	push	{r4, lr}
   22bc4:	mov	r4, r1
   22bc8:	bl	15d14 <gtk_widget_get_type@plt>
   22bcc:	ldr	r3, [r4, #20]
   22bd0:	mov	r1, r0
   22bd4:	ldr	r0, [r3, #12]
   22bd8:	bl	15d68 <g_type_check_instance_cast@plt>
   22bdc:	bl	15dbc <gtk_widget_hide@plt>
   22be0:	bl	161f4 <pk_task_get_type@plt>
   22be4:	mov	r1, r0
   22be8:	mov	r0, r4
   22bec:	bl	15d68 <g_type_check_instance_cast@plt>
   22bf0:	ldr	r3, [r4, #20]
   22bf4:	ldr	r1, [r3, #28]
   22bf8:	bl	160bc <pk_task_user_accepted@plt>
   22bfc:	ldr	r3, [r4, #20]
   22c00:	mov	r2, #0
   22c04:	str	r2, [r3, #28]
   22c08:	str	r2, [r3, #12]
   22c0c:	pop	{r4, pc}
   22c10:	push	{r4, lr}
   22c14:	mov	r4, r1
   22c18:	bl	15d14 <gtk_widget_get_type@plt>
   22c1c:	ldr	r3, [r4, #20]
   22c20:	mov	r1, r0
   22c24:	ldr	r0, [r3, #12]
   22c28:	bl	15d68 <g_type_check_instance_cast@plt>
   22c2c:	bl	15dbc <gtk_widget_hide@plt>
   22c30:	bl	161f4 <pk_task_get_type@plt>
   22c34:	mov	r1, r0
   22c38:	mov	r0, r4
   22c3c:	bl	15d68 <g_type_check_instance_cast@plt>
   22c40:	ldr	r3, [r4, #20]
   22c44:	ldr	r1, [r3, #28]
   22c48:	bl	16074 <pk_task_user_declined@plt>
   22c4c:	ldr	r3, [r4, #20]
   22c50:	mov	r2, #0
   22c54:	str	r2, [r3, #28]
   22c58:	str	r2, [r3, #12]
   22c5c:	pop	{r4, pc}
   22c60:	push	{r4, r5, r6, lr}
   22c64:	mov	r4, r0
   22c68:	bl	169a4 <g_type_class_peek_parent@plt>
   22c6c:	ldr	r1, [pc, #128]	; 22cf4 <g_strcmp0@plt+0xc0bc>
   22c70:	ldr	r3, [r1, #4]
   22c74:	cmp	r3, #0
   22c78:	str	r0, [r1]
   22c7c:	bne	22ce4 <g_strcmp0@plt+0xc0ac>
   22c80:	mov	r1, #80	; 0x50
   22c84:	mov	r0, r4
   22c88:	bl	16b48 <g_type_check_class_cast@plt>
   22c8c:	mov	r5, r0
   22c90:	bl	161f4 <pk_task_get_type@plt>
   22c94:	mov	r1, r0
   22c98:	mov	r0, r4
   22c9c:	bl	16b48 <g_type_check_class_cast@plt>
   22ca0:	ldr	r1, [pc, #80]	; 22cf8 <g_strcmp0@plt+0xc0c0>
   22ca4:	ldr	r2, [pc, #80]	; 22cfc <g_strcmp0@plt+0xc0c4>
   22ca8:	str	r1, [r5, #24]
   22cac:	ldr	lr, [pc, #76]	; 22d00 <g_strcmp0@plt+0xc0c8>
   22cb0:	ldr	r1, [pc, #76]	; 22d04 <g_strcmp0@plt+0xc0cc>
   22cb4:	ldr	ip, [pc, #76]	; 22d08 <g_strcmp0@plt+0xc0d0>
   22cb8:	mov	r3, r0
   22cbc:	mov	r0, r4
   22cc0:	str	r2, [r3, #92]	; 0x5c
   22cc4:	ldr	r2, [pc, #64]	; 22d0c <g_strcmp0@plt+0xc0d4>
   22cc8:	str	lr, [r3, #96]	; 0x60
   22ccc:	str	r1, [r3, #104]	; 0x68
   22cd0:	str	ip, [r3, #100]	; 0x64
   22cd4:	str	r2, [r3, #108]	; 0x6c
   22cd8:	mov	r1, #36	; 0x24
   22cdc:	pop	{r4, r5, r6, lr}
   22ce0:	b	1665c <g_type_class_add_private@plt>
   22ce4:	add	r1, r1, #4
   22ce8:	mov	r0, r4
   22cec:	bl	15c0c <g_type_class_adjust_private_offset@plt>
   22cf0:	b	22c80 <g_strcmp0@plt+0xc048>
   22cf4:	ldrdeq	sp, [r3], -ip
   22cf8:	andeq	r4, r2, ip, lsl r2
   22cfc:	strdeq	r3, [r2], -r0
   22d00:	andeq	r3, r2, ip, lsr sp
   22d04:	ldrdeq	r3, [r2], -r4
   22d08:	andeq	r3, r2, ip, asr #21
   22d0c:	andeq	r3, r2, ip, lsr r5
   22d10:	push	{r4, r5, r6, lr}
   22d14:	mov	r4, r1
   22d18:	mov	r6, r0
   22d1c:	mov	r5, r2
   22d20:	bl	15d14 <gtk_widget_get_type@plt>
   22d24:	cmn	r4, #8
   22d28:	mov	r1, r0
   22d2c:	mov	r0, r6
   22d30:	beq	22d44 <g_strcmp0@plt+0xc10c>
   22d34:	bl	15d68 <g_type_check_instance_cast@plt>
   22d38:	mov	r1, r5
   22d3c:	pop	{r4, r5, r6, lr}
   22d40:	b	22c10 <g_strcmp0@plt+0xbfd8>
   22d44:	bl	15d68 <g_type_check_instance_cast@plt>
   22d48:	mov	r1, r5
   22d4c:	pop	{r4, r5, r6, lr}
   22d50:	b	22bc0 <g_strcmp0@plt+0xbf88>
   22d54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22d58:	mov	r3, r1
   22d5c:	ldr	r6, [pc, #676]	; 23008 <g_strcmp0@plt+0xc3d0>
   22d60:	sub	sp, sp, #20
   22d64:	mov	r7, r2
   22d68:	ldr	r2, [r6]
   22d6c:	mov	r1, r7
   22d70:	mov	sl, r0
   22d74:	mov	r0, r3
   22d78:	mov	r3, #0
   22d7c:	str	r2, [sp, #12]
   22d80:	str	r3, [sp, #8]
   22d84:	bl	15fcc <pk_package_sack_filter_by_info@plt>
   22d88:	mov	r4, r0
   22d8c:	bl	16740 <pk_package_sack_get_size@plt>
   22d90:	cmp	r0, #0
   22d94:	beq	22dfc <g_strcmp0@plt+0xc1c4>
   22d98:	mov	r1, #6
   22d9c:	mov	r0, #1
   22da0:	bl	15e88 <gtk_box_new@plt>
   22da4:	sub	r7, r7, #11
   22da8:	mov	r5, r0
   22dac:	bl	1605c <gtk_container_get_type@plt>
   22db0:	mov	r1, r0
   22db4:	mov	r0, r5
   22db8:	bl	15d68 <g_type_check_instance_cast@plt>
   22dbc:	mov	r1, #12
   22dc0:	bl	16098 <gtk_container_set_border_width@plt>
   22dc4:	mov	r2, #5
   22dc8:	cmp	r7, #9
   22dcc:	ldrls	pc, [pc, r7, lsl #2]
   22dd0:	b	22fb4 <g_strcmp0@plt+0xc37c>
   22dd4:	ldrdeq	r2, [r2], -r8
   22dd8:	andeq	r2, r2, r4, lsl #30
   22ddc:	andeq	r2, r2, r0, lsr pc
   22de0:			; <UNDEFINED> instruction: 0x00022fb4
   22de4:	andeq	r2, r2, ip, asr pc
   22de8:			; <UNDEFINED> instruction: 0x00022fb4
   22dec:			; <UNDEFINED> instruction: 0x00022fb4
   22df0:			; <UNDEFINED> instruction: 0x00022fb4
   22df4:	andeq	r2, r2, r8, lsl #31
   22df8:	andeq	r2, r2, r8, lsr lr
   22dfc:	mov	r0, r7
   22e00:	bl	16860 <pk_info_enum_to_string@plt>
   22e04:	ldr	r2, [pc, #512]	; 2300c <g_strcmp0@plt+0xc3d4>
   22e08:	mov	r1, #128	; 0x80
   22e0c:	mov	r3, r0
   22e10:	ldr	r0, [pc, #504]	; 23010 <g_strcmp0@plt+0xc3d8>
   22e14:	bl	15dec <g_log@plt>
   22e18:	mov	r0, r4
   22e1c:	bl	16878 <g_object_unref@plt>
   22e20:	ldr	r2, [sp, #12]
   22e24:	ldr	r3, [r6]
   22e28:	cmp	r2, r3
   22e2c:	bne	23004 <g_strcmp0@plt+0xc3cc>
   22e30:	add	sp, sp, #20
   22e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e38:	ldr	r1, [pc, #468]	; 23014 <g_strcmp0@plt+0xc3dc>
   22e3c:	mov	r0, #0
   22e40:	bl	16530 <dcgettext@plt>
   22e44:	mov	r2, #5
   22e48:	ldr	r1, [pc, #456]	; 23018 <g_strcmp0@plt+0xc3e0>
   22e4c:	mov	fp, r0
   22e50:	mov	r0, #0
   22e54:	bl	16530 <dcgettext@plt>
   22e58:	bl	161b8 <gtk_label_new@plt>
   22e5c:	str	r0, [sp, #4]
   22e60:	add	r2, sp, #8
   22e64:	mov	r1, #0
   22e68:	mov	r0, r4
   22e6c:	bl	15c90 <pk_package_sack_get_details@plt>
   22e70:	cmp	r0, #0
   22e74:	beq	22fe0 <g_strcmp0@plt+0xc3a8>
   22e78:	mov	r0, r4
   22e7c:	bl	16038 <pk_package_sack_get_total_bytes@plt>
   22e80:	mov	r8, r0
   22e84:	mov	r0, r4
   22e88:	mov	r9, r1
   22e8c:	bl	162c0 <pk_package_sack_get_array@plt>
   22e90:	mov	r2, r8
   22e94:	mov	r3, r9
   22e98:	mov	r1, fp
   22e9c:	mov	r7, r0
   22ea0:	mov	r0, r5
   22ea4:	bl	25c04 <g_strcmp0@plt+0xefcc>
   22ea8:	mov	r1, r7
   22eac:	mov	r0, r5
   22eb0:	bl	25a68 <g_strcmp0@plt+0xee30>
   22eb4:	ldr	r2, [sp, #4]
   22eb8:	mov	r1, r5
   22ebc:	mov	r0, sl
   22ec0:	bl	16344 <gtk_notebook_append_page@plt>
   22ec4:	cmp	r7, #0
   22ec8:	beq	22e18 <g_strcmp0@plt+0xc1e0>
   22ecc:	mov	r0, r7
   22ed0:	bl	169c8 <g_ptr_array_unref@plt>
   22ed4:	b	22e18 <g_strcmp0@plt+0xc1e0>
   22ed8:	ldr	r1, [pc, #316]	; 2301c <g_strcmp0@plt+0xc3e4>
   22edc:	mov	r0, #0
   22ee0:	bl	16530 <dcgettext@plt>
   22ee4:	mov	r2, #5
   22ee8:	ldr	r1, [pc, #304]	; 23020 <g_strcmp0@plt+0xc3e8>
   22eec:	mov	fp, r0
   22ef0:	mov	r0, #0
   22ef4:	bl	16530 <dcgettext@plt>
   22ef8:	bl	161b8 <gtk_label_new@plt>
   22efc:	str	r0, [sp, #4]
   22f00:	b	22e60 <g_strcmp0@plt+0xc228>
   22f04:	ldr	r1, [pc, #280]	; 23024 <g_strcmp0@plt+0xc3ec>
   22f08:	mov	r0, #0
   22f0c:	bl	16530 <dcgettext@plt>
   22f10:	mov	r2, #5
   22f14:	ldr	r1, [pc, #268]	; 23028 <g_strcmp0@plt+0xc3f0>
   22f18:	mov	fp, r0
   22f1c:	mov	r0, #0
   22f20:	bl	16530 <dcgettext@plt>
   22f24:	bl	161b8 <gtk_label_new@plt>
   22f28:	str	r0, [sp, #4]
   22f2c:	b	22e60 <g_strcmp0@plt+0xc228>
   22f30:	ldr	r1, [pc, #244]	; 2302c <g_strcmp0@plt+0xc3f4>
   22f34:	mov	r0, #0
   22f38:	bl	16530 <dcgettext@plt>
   22f3c:	mov	r2, #5
   22f40:	ldr	r1, [pc, #232]	; 23030 <g_strcmp0@plt+0xc3f8>
   22f44:	mov	fp, r0
   22f48:	mov	r0, #0
   22f4c:	bl	16530 <dcgettext@plt>
   22f50:	bl	161b8 <gtk_label_new@plt>
   22f54:	str	r0, [sp, #4]
   22f58:	b	22e60 <g_strcmp0@plt+0xc228>
   22f5c:	ldr	r1, [pc, #200]	; 2302c <g_strcmp0@plt+0xc3f4>
   22f60:	mov	r0, #0
   22f64:	bl	16530 <dcgettext@plt>
   22f68:	mov	r2, #5
   22f6c:	ldr	r1, [pc, #192]	; 23034 <g_strcmp0@plt+0xc3fc>
   22f70:	mov	fp, r0
   22f74:	mov	r0, #0
   22f78:	bl	16530 <dcgettext@plt>
   22f7c:	bl	161b8 <gtk_label_new@plt>
   22f80:	str	r0, [sp, #4]
   22f84:	b	22e60 <g_strcmp0@plt+0xc228>
   22f88:	ldr	r1, [pc, #168]	; 23038 <g_strcmp0@plt+0xc400>
   22f8c:	mov	r0, #0
   22f90:	bl	16530 <dcgettext@plt>
   22f94:	mov	r2, #5
   22f98:	ldr	r1, [pc, #156]	; 2303c <g_strcmp0@plt+0xc404>
   22f9c:	mov	fp, r0
   22fa0:	mov	r0, #0
   22fa4:	bl	16530 <dcgettext@plt>
   22fa8:	bl	161b8 <gtk_label_new@plt>
   22fac:	str	r0, [sp, #4]
   22fb0:	b	22e60 <g_strcmp0@plt+0xc228>
   22fb4:	ldr	r1, [pc, #132]	; 23040 <g_strcmp0@plt+0xc408>
   22fb8:	mov	r0, #0
   22fbc:	bl	16530 <dcgettext@plt>
   22fc0:	mov	r2, #5
   22fc4:	ldr	r1, [pc, #120]	; 23044 <g_strcmp0@plt+0xc40c>
   22fc8:	mov	fp, r0
   22fcc:	mov	r0, #0
   22fd0:	bl	16530 <dcgettext@plt>
   22fd4:	bl	161b8 <gtk_label_new@plt>
   22fd8:	str	r0, [sp, #4]
   22fdc:	b	22e60 <g_strcmp0@plt+0xc228>
   22fe0:	ldr	r3, [sp, #8]
   22fe4:	ldr	r2, [pc, #92]	; 23048 <g_strcmp0@plt+0xc410>
   22fe8:	mov	r1, #16
   22fec:	ldr	r3, [r3, #8]
   22ff0:	ldr	r0, [pc, #24]	; 23010 <g_strcmp0@plt+0xc3d8>
   22ff4:	bl	15dec <g_log@plt>
   22ff8:	ldr	r0, [sp, #8]
   22ffc:	bl	15c78 <g_error_free@plt>
   23000:	b	22e78 <g_strcmp0@plt+0xc240>
   23004:	bl	164ac <__stack_chk_fail@plt>
   23008:	andeq	ip, r3, r0, asr lr
   2300c:			; <UNDEFINED> instruction: 0x0002bebc
   23010:	andeq	r6, r2, r0, ror #4
   23014:	andeq	fp, r2, r0, asr #31
   23018:	strdeq	fp, [r2], -r4
   2301c:	andeq	fp, r2, r4, asr #30
   23020:	andeq	fp, r2, r4, ror pc
   23024:	ldrdeq	fp, [r2], -r0
   23028:	andeq	fp, r2, r4, lsl #30
   2302c:	andeq	fp, r2, ip, lsl #30
   23030:	andeq	fp, r2, ip, lsr pc
   23034:	andeq	sl, r2, ip, lsl #23
   23038:	andeq	fp, r2, ip, ror pc
   2303c:			; <UNDEFINED> instruction: 0x0002bfb4
   23040:	andeq	ip, r2, r0
   23044:	ldrdeq	fp, [r2], -r8
   23048:	andeq	ip, r2, r4, lsr r0
   2304c:	push	{r4, lr}
   23050:	mcr	15, 0, r0, cr7, cr10, {5}
   23054:	ldr	r4, [pc, #60]	; 23098 <g_strcmp0@plt+0xc460>
   23058:	ldr	r3, [r4, #8]
   2305c:	mcr	15, 0, r0, cr7, cr10, {5}
   23060:	cmp	r3, #0
   23064:	beq	23070 <g_strcmp0@plt+0xc438>
   23068:	ldr	r0, [r4, #8]
   2306c:	pop	{r4, pc}
   23070:	add	r0, r4, #8
   23074:	bl	16320 <g_once_init_enter@plt>
   23078:	cmp	r0, #0
   2307c:	beq	23068 <g_strcmp0@plt+0xc430>
   23080:	bl	22b6c <g_strcmp0@plt+0xbf34>
   23084:	mov	r1, r0
   23088:	add	r0, r4, #8
   2308c:	bl	168c0 <g_once_init_leave@plt>
   23090:	ldr	r0, [r4, #8]
   23094:	pop	{r4, pc}
   23098:	ldrdeq	sp, [r3], -ip
   2309c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   230a0:	sub	sp, sp, #16
   230a4:	ldr	r7, [pc, #1076]	; 234e0 <g_strcmp0@plt+0xc8a8>
   230a8:	mov	r4, r0
   230ac:	mov	r6, #0
   230b0:	ldr	r3, [r7]
   230b4:	str	r3, [sp, #12]
   230b8:	bl	2304c <g_strcmp0@plt+0xc414>
   230bc:	mov	r1, r0
   230c0:	mov	r0, r4
   230c4:	bl	16290 <g_type_instance_get_private@plt>
   230c8:	mov	r5, r0
   230cc:	str	r0, [r4, #20]
   230d0:	ldr	r0, [pc, #1036]	; 234e4 <g_strcmp0@plt+0xc8ac>
   230d4:	str	r6, [r5, #28]
   230d8:	str	r6, [r5, #8]
   230dc:	str	r6, [r5, #12]
   230e0:	bl	15b64 <g_settings_new@plt>
   230e4:	ldr	r8, [r4, #20]
   230e8:	str	r0, [r5, #4]
   230ec:	str	r6, [sp, #8]
   230f0:	bl	167c4 <gtk_builder_new@plt>
   230f4:	ldr	r3, [r4, #20]
   230f8:	add	r2, sp, #8
   230fc:	ldr	r1, [pc, #996]	; 234e8 <g_strcmp0@plt+0xc8b0>
   23100:	str	r0, [r8, #16]
   23104:	ldr	r0, [r3, #16]
   23108:	bl	16b90 <gtk_builder_add_from_file@plt>
   2310c:	cmp	r0, r6
   23110:	beq	23470 <g_strcmp0@plt+0xc838>
   23114:	ldr	r3, [r4, #20]
   23118:	ldr	r1, [pc, #972]	; 234ec <g_strcmp0@plt+0xc8b4>
   2311c:	mov	r6, #0
   23120:	ldr	r0, [r3, #16]
   23124:	bl	16068 <gtk_builder_get_object@plt>
   23128:	mov	r8, r0
   2312c:	bl	15d14 <gtk_widget_get_type@plt>
   23130:	mov	r5, r0
   23134:	mov	r1, r0
   23138:	mov	r0, r8
   2313c:	bl	15d68 <g_type_check_instance_cast@plt>
   23140:	ldr	r2, [pc, #936]	; 234f0 <g_strcmp0@plt+0xc8b8>
   23144:	str	r6, [sp, #4]
   23148:	str	r6, [sp]
   2314c:	mov	r3, r4
   23150:	ldr	r1, [pc, #924]	; 234f4 <g_strcmp0@plt+0xc8bc>
   23154:	bl	16314 <g_signal_connect_data@plt>
   23158:	ldr	r3, [r4, #20]
   2315c:	ldr	r1, [pc, #904]	; 234ec <g_strcmp0@plt+0xc8b4>
   23160:	ldr	r0, [r3, #16]
   23164:	bl	16068 <gtk_builder_get_object@plt>
   23168:	mov	r1, r5
   2316c:	bl	15d68 <g_type_check_instance_cast@plt>
   23170:	mov	r9, r0
   23174:	bl	16bfc <gtk_window_get_type@plt>
   23178:	mov	r1, r0
   2317c:	mov	r8, r0
   23180:	mov	r0, r9
   23184:	bl	15d68 <g_type_check_instance_cast@plt>
   23188:	ldr	r1, [pc, #872]	; 234f8 <g_strcmp0@plt+0xc8c0>
   2318c:	bl	15ef4 <gtk_window_set_icon_name@plt>
   23190:	ldr	r3, [r4, #20]
   23194:	ldr	r1, [pc, #864]	; 234fc <g_strcmp0@plt+0xc8c4>
   23198:	ldr	r0, [r3, #16]
   2319c:	bl	16068 <gtk_builder_get_object@plt>
   231a0:	mov	r1, r5
   231a4:	bl	15d68 <g_type_check_instance_cast@plt>
   231a8:	ldr	r2, [pc, #832]	; 234f0 <g_strcmp0@plt+0xc8b8>
   231ac:	str	r6, [sp, #4]
   231b0:	str	r6, [sp]
   231b4:	mov	r3, r4
   231b8:	ldr	r1, [pc, #832]	; 23500 <g_strcmp0@plt+0xc8c8>
   231bc:	bl	16314 <g_signal_connect_data@plt>
   231c0:	ldr	r3, [r4, #20]
   231c4:	ldr	r1, [pc, #824]	; 23504 <g_strcmp0@plt+0xc8cc>
   231c8:	ldr	r0, [r3, #16]
   231cc:	bl	16068 <gtk_builder_get_object@plt>
   231d0:	mov	r1, r5
   231d4:	bl	15d68 <g_type_check_instance_cast@plt>
   231d8:	bl	15dbc <gtk_widget_hide@plt>
   231dc:	mov	r2, #5
   231e0:	ldr	r1, [pc, #800]	; 23508 <g_strcmp0@plt+0xc8d0>
   231e4:	mov	r0, r6
   231e8:	bl	16530 <dcgettext@plt>
   231ec:	bl	15f48 <gtk_button_new_with_mnemonic@plt>
   231f0:	mov	r3, r4
   231f4:	str	r6, [sp, #4]
   231f8:	str	r6, [sp]
   231fc:	ldr	r2, [pc, #776]	; 2350c <g_strcmp0@plt+0xc8d4>
   23200:	ldr	r1, [pc, #760]	; 23500 <g_strcmp0@plt+0xc8c8>
   23204:	mov	r9, r0
   23208:	bl	16314 <g_signal_connect_data@plt>
   2320c:	mov	r2, #5
   23210:	mov	r0, r6
   23214:	ldr	r1, [pc, #756]	; 23510 <g_strcmp0@plt+0xc8d8>
   23218:	bl	16530 <dcgettext@plt>
   2321c:	mov	r1, r0
   23220:	mov	r0, r9
   23224:	bl	15ea0 <gtk_widget_set_tooltip_text@plt>
   23228:	ldr	r3, [r4, #20]
   2322c:	ldr	r1, [pc, #696]	; 234ec <g_strcmp0@plt+0xc8b4>
   23230:	ldr	r0, [r3, #16]
   23234:	bl	16068 <gtk_builder_get_object@plt>
   23238:	mov	r1, r5
   2323c:	bl	15d68 <g_type_check_instance_cast@plt>
   23240:	mov	sl, r0
   23244:	bl	165e4 <gtk_dialog_get_type@plt>
   23248:	mov	r1, r0
   2324c:	mov	r0, sl
   23250:	bl	15d68 <g_type_check_instance_cast@plt>
   23254:	bl	15b10 <gtk_dialog_get_action_area@plt>
   23258:	mov	sl, r0
   2325c:	bl	162fc <gtk_box_get_type@plt>
   23260:	mov	r1, r0
   23264:	mov	r0, sl
   23268:	bl	15d68 <g_type_check_instance_cast@plt>
   2326c:	mov	r3, r6
   23270:	mov	r2, r6
   23274:	mov	r1, r9
   23278:	str	r6, [sp]
   2327c:	bl	163b0 <gtk_box_pack_start@plt>
   23280:	mov	r0, r9
   23284:	bl	1686c <gtk_widget_show@plt>
   23288:	str	r6, [sp, #8]
   2328c:	ldr	r6, [r4, #20]
   23290:	bl	167c4 <gtk_builder_new@plt>
   23294:	ldr	r3, [r4, #20]
   23298:	add	r2, sp, #8
   2329c:	ldr	r1, [pc, #624]	; 23514 <g_strcmp0@plt+0xc8dc>
   232a0:	str	r0, [r6, #24]
   232a4:	ldr	r0, [r3, #24]
   232a8:	bl	16b90 <gtk_builder_add_from_file@plt>
   232ac:	cmp	r0, #0
   232b0:	beq	234b8 <g_strcmp0@plt+0xc880>
   232b4:	ldr	r3, [r4, #20]
   232b8:	ldr	r1, [pc, #600]	; 23518 <g_strcmp0@plt+0xc8e0>
   232bc:	mov	r6, #0
   232c0:	ldr	r0, [r3, #24]
   232c4:	bl	16068 <gtk_builder_get_object@plt>
   232c8:	mov	r1, r5
   232cc:	bl	15d68 <g_type_check_instance_cast@plt>
   232d0:	ldr	r2, [pc, #536]	; 234f0 <g_strcmp0@plt+0xc8b8>
   232d4:	str	r6, [sp, #4]
   232d8:	str	r6, [sp]
   232dc:	mov	r3, r4
   232e0:	ldr	r1, [pc, #524]	; 234f4 <g_strcmp0@plt+0xc8bc>
   232e4:	bl	16314 <g_signal_connect_data@plt>
   232e8:	ldr	r3, [r4, #20]
   232ec:	ldr	r1, [pc, #548]	; 23518 <g_strcmp0@plt+0xc8e0>
   232f0:	ldr	r0, [r3, #24]
   232f4:	bl	16068 <gtk_builder_get_object@plt>
   232f8:	mov	r1, r5
   232fc:	bl	15d68 <g_type_check_instance_cast@plt>
   23300:	mov	r1, r8
   23304:	bl	15d68 <g_type_check_instance_cast@plt>
   23308:	ldr	r1, [pc, #488]	; 234f8 <g_strcmp0@plt+0xc8c0>
   2330c:	bl	15ef4 <gtk_window_set_icon_name@plt>
   23310:	ldr	r3, [r4, #20]
   23314:	ldr	r1, [pc, #512]	; 2351c <g_strcmp0@plt+0xc8e4>
   23318:	ldr	r0, [r3, #24]
   2331c:	bl	16068 <gtk_builder_get_object@plt>
   23320:	mov	r1, r5
   23324:	bl	15d68 <g_type_check_instance_cast@plt>
   23328:	ldr	r2, [pc, #476]	; 2350c <g_strcmp0@plt+0xc8d4>
   2332c:	str	r6, [sp, #4]
   23330:	str	r6, [sp]
   23334:	mov	r3, r4
   23338:	ldr	r1, [pc, #448]	; 23500 <g_strcmp0@plt+0xc8c8>
   2333c:	bl	16314 <g_signal_connect_data@plt>
   23340:	ldr	r3, [r4, #20]
   23344:	ldr	r1, [pc, #468]	; 23520 <g_strcmp0@plt+0xc8e8>
   23348:	ldr	r0, [r3, #24]
   2334c:	bl	16068 <gtk_builder_get_object@plt>
   23350:	mov	r1, r5
   23354:	bl	15d68 <g_type_check_instance_cast@plt>
   23358:	mov	r3, r4
   2335c:	ldr	r2, [pc, #396]	; 234f0 <g_strcmp0@plt+0xc8b8>
   23360:	ldr	r1, [pc, #408]	; 23500 <g_strcmp0@plt+0xc8c8>
   23364:	str	r6, [sp, #4]
   23368:	str	r6, [sp]
   2336c:	bl	16314 <g_signal_connect_data@plt>
   23370:	str	r6, [sp, #8]
   23374:	ldr	r6, [r4, #20]
   23378:	bl	167c4 <gtk_builder_new@plt>
   2337c:	ldr	r3, [r4, #20]
   23380:	add	r2, sp, #8
   23384:	ldr	r1, [pc, #408]	; 23524 <g_strcmp0@plt+0xc8ec>
   23388:	str	r0, [r6, #20]
   2338c:	ldr	r0, [r3, #20]
   23390:	bl	16b90 <gtk_builder_add_from_file@plt>
   23394:	cmp	r0, #0
   23398:	beq	23494 <g_strcmp0@plt+0xc85c>
   2339c:	ldr	r3, [r4, #20]
   233a0:	ldr	r1, [pc, #384]	; 23528 <g_strcmp0@plt+0xc8f0>
   233a4:	mov	r6, #0
   233a8:	ldr	r0, [r3, #20]
   233ac:	bl	16068 <gtk_builder_get_object@plt>
   233b0:	mov	r1, r5
   233b4:	bl	15d68 <g_type_check_instance_cast@plt>
   233b8:	ldr	r2, [pc, #304]	; 234f0 <g_strcmp0@plt+0xc8b8>
   233bc:	mov	r3, r4
   233c0:	ldr	r1, [pc, #300]	; 234f4 <g_strcmp0@plt+0xc8bc>
   233c4:	str	r6, [sp, #4]
   233c8:	str	r6, [sp]
   233cc:	bl	16314 <g_signal_connect_data@plt>
   233d0:	ldr	r3, [r4, #20]
   233d4:	ldr	r1, [pc, #332]	; 23528 <g_strcmp0@plt+0xc8f0>
   233d8:	ldr	r0, [r3, #20]
   233dc:	bl	16068 <gtk_builder_get_object@plt>
   233e0:	mov	r1, r5
   233e4:	bl	15d68 <g_type_check_instance_cast@plt>
   233e8:	mov	r1, r8
   233ec:	bl	15d68 <g_type_check_instance_cast@plt>
   233f0:	ldr	r1, [pc, #256]	; 234f8 <g_strcmp0@plt+0xc8c0>
   233f4:	bl	15ef4 <gtk_window_set_icon_name@plt>
   233f8:	ldr	r3, [r4, #20]
   233fc:	ldr	r1, [pc, #296]	; 2352c <g_strcmp0@plt+0xc8f4>
   23400:	ldr	r0, [r3, #20]
   23404:	bl	16068 <gtk_builder_get_object@plt>
   23408:	mov	r1, r5
   2340c:	bl	15d68 <g_type_check_instance_cast@plt>
   23410:	ldr	r2, [pc, #244]	; 2350c <g_strcmp0@plt+0xc8d4>
   23414:	mov	r3, r4
   23418:	ldr	r1, [pc, #224]	; 23500 <g_strcmp0@plt+0xc8c8>
   2341c:	str	r6, [sp, #4]
   23420:	str	r6, [sp]
   23424:	bl	16314 <g_signal_connect_data@plt>
   23428:	ldr	r3, [r4, #20]
   2342c:	ldr	r1, [pc, #252]	; 23530 <g_strcmp0@plt+0xc8f8>
   23430:	ldr	r0, [r3, #20]
   23434:	bl	16068 <gtk_builder_get_object@plt>
   23438:	mov	r1, r5
   2343c:	bl	15d68 <g_type_check_instance_cast@plt>
   23440:	mov	r3, r4
   23444:	ldr	r2, [pc, #164]	; 234f0 <g_strcmp0@plt+0xc8b8>
   23448:	str	r6, [sp, #4]
   2344c:	str	r6, [sp]
   23450:	ldr	r1, [pc, #168]	; 23500 <g_strcmp0@plt+0xc8c8>
   23454:	bl	16314 <g_signal_connect_data@plt>
   23458:	ldr	r2, [sp, #12]
   2345c:	ldr	r3, [r7]
   23460:	cmp	r2, r3
   23464:	bne	234dc <g_strcmp0@plt+0xc8a4>
   23468:	add	sp, sp, #16
   2346c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23470:	ldr	r3, [sp, #8]
   23474:	ldr	r2, [pc, #184]	; 23534 <g_strcmp0@plt+0xc8fc>
   23478:	mov	r1, #16
   2347c:	ldr	r3, [r3, #8]
   23480:	ldr	r0, [pc, #176]	; 23538 <g_strcmp0@plt+0xc900>
   23484:	bl	15dec <g_log@plt>
   23488:	ldr	r0, [sp, #8]
   2348c:	bl	15c78 <g_error_free@plt>
   23490:	b	23114 <g_strcmp0@plt+0xc4dc>
   23494:	ldr	r3, [sp, #8]
   23498:	ldr	r2, [pc, #148]	; 23534 <g_strcmp0@plt+0xc8fc>
   2349c:	mov	r1, #16
   234a0:	ldr	r3, [r3, #8]
   234a4:	ldr	r0, [pc, #140]	; 23538 <g_strcmp0@plt+0xc900>
   234a8:	bl	15dec <g_log@plt>
   234ac:	ldr	r0, [sp, #8]
   234b0:	bl	15c78 <g_error_free@plt>
   234b4:	b	2339c <g_strcmp0@plt+0xc764>
   234b8:	ldr	r3, [sp, #8]
   234bc:	ldr	r2, [pc, #112]	; 23534 <g_strcmp0@plt+0xc8fc>
   234c0:	mov	r1, #16
   234c4:	ldr	r3, [r3, #8]
   234c8:	ldr	r0, [pc, #104]	; 23538 <g_strcmp0@plt+0xc900>
   234cc:	bl	15dec <g_log@plt>
   234d0:	ldr	r0, [sp, #8]
   234d4:	bl	15c78 <g_error_free@plt>
   234d8:	b	232b4 <g_strcmp0@plt+0xc67c>
   234dc:	bl	164ac <__stack_chk_fail@plt>
   234e0:	andeq	ip, r3, r0, asr lr
   234e4:	andeq	r6, r2, r8, asr #8
   234e8:	andeq	ip, r2, r0, rrx
   234ec:	andeq	ip, r2, r8, lsl #1
   234f0:	andeq	r2, r2, r0, lsl ip
   234f4:	muleq	r2, r8, r0
   234f8:			; <UNDEFINED> instruction: 0x0002bdbc
   234fc:	andeq	ip, r2, r8, lsr #1
   23500:			; <UNDEFINED> instruction: 0x000266b0
   23504:	strheq	ip, [r2], -r8
   23508:	andeq	ip, r2, ip, asr #1
   2350c:	andeq	r2, r2, r0, asr #23
   23510:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   23514:	strdeq	ip, [r2], -r8
   23518:	andeq	ip, r2, r0, lsr #2
   2351c:	andeq	ip, r2, ip, lsr #2
   23520:	andeq	ip, r2, ip, lsr r1
   23524:	andeq	ip, r2, ip, asr #2
   23528:	andeq	ip, r2, r8, ror r1
   2352c:	andeq	ip, r2, r4, lsl #3
   23530:	muleq	r2, r0, r1
   23534:	andeq	r6, r2, r4, ror #9
   23538:	andeq	r6, r2, r0, ror #4
   2353c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23540:	sub	sp, sp, #40	; 0x28
   23544:	ldr	r8, [pc, #816]	; 2387c <g_strcmp0@plt+0xcc44>
   23548:	mov	r5, r2
   2354c:	mov	r6, r1
   23550:	ldr	r3, [r8]
   23554:	mov	r9, r0
   23558:	str	r3, [sp, #36]	; 0x24
   2355c:	bl	2304c <g_strcmp0@plt+0xc414>
   23560:	ldr	r7, [pc, #792]	; 23880 <g_strcmp0@plt+0xcc48>
   23564:	add	sl, sp, #24
   23568:	mov	r1, r0
   2356c:	mov	r0, r9
   23570:	bl	15d68 <g_type_check_instance_cast@plt>
   23574:	mov	r2, #0
   23578:	mov	r3, #0
   2357c:	mov	lr, #0
   23580:	add	ip, sp, #20
   23584:	strd	r2, [sp, #24]
   23588:	ldr	r1, [pc, #756]	; 23884 <g_strcmp0@plt+0xcc4c>
   2358c:	ldr	r3, [pc, #756]	; 23888 <g_strcmp0@plt+0xcc50>
   23590:	add	r2, sp, #16
   23594:	ldr	r4, [r0, #20]
   23598:	mov	r0, r5
   2359c:	str	r6, [r4, #28]
   235a0:	stmib	sp, {r7, sl, lr}
   235a4:	str	ip, [sp]
   235a8:	bl	165cc <g_object_get@plt>
   235ac:	ldr	r3, [sp, #16]
   235b0:	cmp	r3, #14
   235b4:	beq	235cc <g_strcmp0@plt+0xc994>
   235b8:	ldr	r1, [pc, #716]	; 2388c <g_strcmp0@plt+0xcc54>
   235bc:	ldr	r0, [r4, #4]
   235c0:	bl	15b04 <g_settings_get_boolean@plt>
   235c4:	cmp	r0, #0
   235c8:	beq	2384c <g_strcmp0@plt+0xcc14>
   235cc:	mov	r2, #5
   235d0:	ldr	r1, [pc, #696]	; 23890 <g_strcmp0@plt+0xcc58>
   235d4:	mov	r0, #0
   235d8:	bl	16530 <dcgettext@plt>
   235dc:	ldr	r3, [sp, #16]
   235e0:	cmp	r3, #11
   235e4:	mov	r7, r0
   235e8:	beq	237e0 <g_strcmp0@plt+0xcba8>
   235ec:	cmp	r3, #14
   235f0:	beq	23828 <g_strcmp0@plt+0xcbf0>
   235f4:	cmp	r3, #22
   235f8:	beq	237bc <g_strcmp0@plt+0xcb84>
   235fc:	cmp	r3, #10
   23600:	beq	23804 <g_strcmp0@plt+0xcbcc>
   23604:	mov	r2, #5
   23608:	ldr	r1, [pc, #644]	; 23894 <g_strcmp0@plt+0xcc5c>
   2360c:	mov	r0, #0
   23610:	bl	16530 <dcgettext@plt>
   23614:	mov	sl, r0
   23618:	ldr	r6, [pc, #632]	; 23898 <g_strcmp0@plt+0xcc60>
   2361c:	mov	r3, #3
   23620:	mov	r1, r3
   23624:	mov	r2, #0
   23628:	ldr	r0, [r4, #8]
   2362c:	strd	r6, [sp]
   23630:	bl	16a70 <gtk_message_dialog_new@plt>
   23634:	mov	r7, r0
   23638:	bl	16bfc <gtk_window_get_type@plt>
   2363c:	mov	r1, r0
   23640:	mov	r0, r7
   23644:	bl	15d68 <g_type_check_instance_cast@plt>
   23648:	str	r0, [r4, #12]
   2364c:	mov	r7, r0
   23650:	bl	16590 <gtk_message_dialog_get_type@plt>
   23654:	mov	r1, r0
   23658:	mov	r0, r7
   2365c:	bl	15d68 <g_type_check_instance_cast@plt>
   23660:	mov	r2, sl
   23664:	mov	r1, r6
   23668:	bl	16500 <gtk_message_dialog_format_secondary_markup@plt>
   2366c:	bl	1641c <gtk_notebook_new@plt>
   23670:	mov	r6, r0
   23674:	bl	16ba8 <gtk_notebook_get_type@plt>
   23678:	mov	r1, r0
   2367c:	mov	r0, r6
   23680:	bl	15d68 <g_type_check_instance_cast@plt>
   23684:	mov	r6, r0
   23688:	mov	r0, r5
   2368c:	bl	16758 <pk_results_get_package_sack@plt>
   23690:	mov	r2, #12
   23694:	mov	r5, r0
   23698:	mov	r1, r0
   2369c:	mov	r0, r6
   236a0:	bl	22d54 <g_strcmp0@plt+0xc11c>
   236a4:	mov	r0, r6
   236a8:	mov	r1, r5
   236ac:	mov	r2, #13
   236b0:	bl	22d54 <g_strcmp0@plt+0xc11c>
   236b4:	mov	r0, r6
   236b8:	mov	r1, r5
   236bc:	mov	r2, #11
   236c0:	bl	22d54 <g_strcmp0@plt+0xc11c>
   236c4:	mov	r0, r6
   236c8:	mov	r1, r5
   236cc:	mov	r2, #15
   236d0:	bl	22d54 <g_strcmp0@plt+0xc11c>
   236d4:	mov	r0, r6
   236d8:	mov	r1, r5
   236dc:	mov	r2, #19
   236e0:	bl	22d54 <g_strcmp0@plt+0xc11c>
   236e4:	mov	r2, #20
   236e8:	mov	r1, r5
   236ec:	mov	r0, r6
   236f0:	bl	22d54 <g_strcmp0@plt+0xc11c>
   236f4:	bl	165e4 <gtk_dialog_get_type@plt>
   236f8:	mov	r7, r0
   236fc:	mov	r1, r0
   23700:	ldr	r0, [r4, #12]
   23704:	bl	15d68 <g_type_check_instance_cast@plt>
   23708:	mov	r1, r6
   2370c:	bl	259a8 <g_strcmp0@plt+0xed70>
   23710:	mov	r1, r7
   23714:	ldr	r0, [r4, #12]
   23718:	bl	15d68 <g_type_check_instance_cast@plt>
   2371c:	ldr	r1, [pc, #360]	; 2388c <g_strcmp0@plt+0xcc54>
   23720:	bl	258b4 <g_strcmp0@plt+0xec7c>
   23724:	mov	r1, r7
   23728:	ldr	r0, [r4, #12]
   2372c:	bl	15d68 <g_type_check_instance_cast@plt>
   23730:	mov	r2, #5
   23734:	ldr	r1, [pc, #352]	; 2389c <g_strcmp0@plt+0xcc64>
   23738:	mov	r6, r0
   2373c:	mov	r0, #0
   23740:	bl	16530 <dcgettext@plt>
   23744:	mvn	r2, #7
   23748:	mov	r1, r0
   2374c:	mov	r0, r6
   23750:	bl	15bf4 <gtk_dialog_add_button@plt>
   23754:	ldr	r1, [pc, #324]	; 238a0 <g_strcmp0@plt+0xcc68>
   23758:	ldr	r0, [r4, #12]
   2375c:	bl	15ef4 <gtk_window_set_icon_name@plt>
   23760:	mov	r2, #0
   23764:	mov	r3, r9
   23768:	ldr	r0, [r4, #12]
   2376c:	ldr	r1, [pc, #304]	; 238a4 <g_strcmp0@plt+0xcc6c>
   23770:	str	r2, [sp, #4]
   23774:	str	r2, [sp]
   23778:	ldr	r2, [pc, #296]	; 238a8 <g_strcmp0@plt+0xcc70>
   2377c:	bl	16314 <g_signal_connect_data@plt>
   23780:	bl	15d14 <gtk_widget_get_type@plt>
   23784:	mov	r1, r0
   23788:	ldr	r0, [r4, #12]
   2378c:	bl	15d68 <g_type_check_instance_cast@plt>
   23790:	bl	167b8 <gtk_widget_show_all@plt>
   23794:	cmp	r5, #0
   23798:	beq	237a4 <g_strcmp0@plt+0xcb6c>
   2379c:	mov	r0, r5
   237a0:	bl	16878 <g_object_unref@plt>
   237a4:	ldr	r2, [sp, #36]	; 0x24
   237a8:	ldr	r3, [r8]
   237ac:	cmp	r2, r3
   237b0:	bne	23878 <g_strcmp0@plt+0xcc40>
   237b4:	add	sp, sp, #40	; 0x28
   237b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   237bc:	mov	r3, #5
   237c0:	str	r3, [sp]
   237c4:	ldr	r2, [pc, #224]	; 238ac <g_strcmp0@plt+0xcc74>
   237c8:	ldr	r3, [sp, #20]
   237cc:	ldr	r1, [pc, #220]	; 238b0 <g_strcmp0@plt+0xcc78>
   237d0:	mov	r0, #0
   237d4:	bl	160f8 <dcngettext@plt>
   237d8:	mov	sl, r0
   237dc:	b	23618 <g_strcmp0@plt+0xc9e0>
   237e0:	mov	r3, #5
   237e4:	str	r3, [sp]
   237e8:	ldr	r2, [pc, #196]	; 238b4 <g_strcmp0@plt+0xcc7c>
   237ec:	ldr	r3, [sp, #20]
   237f0:	ldr	r1, [pc, #192]	; 238b8 <g_strcmp0@plt+0xcc80>
   237f4:	mov	r0, #0
   237f8:	bl	160f8 <dcngettext@plt>
   237fc:	mov	sl, r0
   23800:	b	23618 <g_strcmp0@plt+0xc9e0>
   23804:	mov	r3, #5
   23808:	str	r3, [sp]
   2380c:	ldr	r2, [pc, #168]	; 238bc <g_strcmp0@plt+0xcc84>
   23810:	ldr	r3, [sp, #20]
   23814:	ldr	r1, [pc, #164]	; 238c0 <g_strcmp0@plt+0xcc88>
   23818:	mov	r0, #0
   2381c:	bl	160f8 <dcngettext@plt>
   23820:	mov	sl, r0
   23824:	b	23618 <g_strcmp0@plt+0xc9e0>
   23828:	mov	r3, #5
   2382c:	str	r3, [sp]
   23830:	ldr	r2, [pc, #140]	; 238c4 <g_strcmp0@plt+0xcc8c>
   23834:	ldr	r3, [sp, #20]
   23838:	ldr	r1, [pc, #136]	; 238c8 <g_strcmp0@plt+0xcc90>
   2383c:	mov	r0, #0
   23840:	bl	160f8 <dcngettext@plt>
   23844:	mov	sl, r0
   23848:	b	23618 <g_strcmp0@plt+0xc9e0>
   2384c:	ldr	r2, [pc, #120]	; 238cc <g_strcmp0@plt+0xcc94>
   23850:	mov	r1, #128	; 0x80
   23854:	ldr	r0, [pc, #116]	; 238d0 <g_strcmp0@plt+0xcc98>
   23858:	bl	15dec <g_log@plt>
   2385c:	bl	161f4 <pk_task_get_type@plt>
   23860:	mov	r1, r0
   23864:	mov	r0, r9
   23868:	bl	15d68 <g_type_check_instance_cast@plt>
   2386c:	ldr	r1, [r4, #28]
   23870:	bl	160bc <pk_task_user_accepted@plt>
   23874:	b	237a4 <g_strcmp0@plt+0xcb6c>
   23878:	bl	164ac <__stack_chk_fail@plt>
   2387c:	andeq	ip, r3, r0, asr lr
   23880:	andeq	r6, r2, r4, ror #20
   23884:	andeq	r6, r2, ip, asr sl
   23888:	muleq	r2, ip, r1
   2388c:	andeq	ip, r2, r4, lsr #3
   23890:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   23894:	andeq	ip, r2, ip, lsr r4
   23898:	andeq	fp, r2, ip, asr r9
   2389c:	andeq	ip, r2, r8, lsl #9
   238a0:			; <UNDEFINED> instruction: 0x0002bdbc
   238a4:	muleq	r2, r4, r4
   238a8:	andeq	r2, r2, r0, lsl sp
   238ac:	andeq	ip, r2, r0, lsr #6
   238b0:	andeq	ip, r2, r8, ror #6
   238b4:	andeq	ip, r2, r0, lsl #4
   238b8:	andeq	ip, r2, r8, asr #4
   238bc:			; <UNDEFINED> instruction: 0x0002c3b0
   238c0:	strdeq	ip, [r2], -r8
   238c4:	muleq	r2, r0, r2
   238c8:	ldrdeq	ip, [r2], -r8
   238cc:			; <UNDEFINED> instruction: 0x0002c1b4
   238d0:	andeq	r6, r2, r0, ror #4
   238d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   238d8:	sub	sp, sp, #32
   238dc:	ldr	r7, [pc, #436]	; 23a98 <g_strcmp0@plt+0xce60>
   238e0:	mov	r6, r2
   238e4:	mov	r5, r1
   238e8:	ldr	r3, [r7]
   238ec:	mov	r9, r0
   238f0:	str	r3, [sp, #28]
   238f4:	bl	2304c <g_strcmp0@plt+0xc414>
   238f8:	mov	r1, r0
   238fc:	mov	r0, r9
   23900:	bl	15d68 <g_type_check_instance_cast@plt>
   23904:	ldr	r4, [r0, #20]
   23908:	mov	r0, r6
   2390c:	str	r5, [r4, #28]
   23910:	bl	15b94 <pk_results_get_media_change_required_array@plt>
   23914:	ldr	r3, [r0, #4]
   23918:	mov	r6, r0
   2391c:	cmp	r3, #1
   23920:	beq	23960 <g_strcmp0@plt+0xcd28>
   23924:	ldr	r2, [pc, #368]	; 23a9c <g_strcmp0@plt+0xce64>
   23928:	mov	r1, #16
   2392c:	ldr	r0, [pc, #364]	; 23aa0 <g_strcmp0@plt+0xce68>
   23930:	bl	15dec <g_log@plt>
   23934:	mov	r8, #0
   23938:	mov	r0, r8
   2393c:	bl	16518 <g_free@plt>
   23940:	mov	r0, r6
   23944:	bl	169c8 <g_ptr_array_unref@plt>
   23948:	ldr	r2, [sp, #28]
   2394c:	ldr	r3, [r7]
   23950:	cmp	r2, r3
   23954:	bne	23a94 <g_strcmp0@plt+0xce5c>
   23958:	add	sp, sp, #32
   2395c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23960:	ldr	r3, [r0]
   23964:	ldr	r1, [pc, #312]	; 23aa4 <g_strcmp0@plt+0xce6c>
   23968:	mov	r5, #0
   2396c:	add	r2, sp, #24
   23970:	ldr	r0, [r3]
   23974:	add	r3, sp, #20
   23978:	stmib	sp, {r1, r2, r5}
   2397c:	add	r2, sp, #16
   23980:	str	r3, [sp]
   23984:	ldr	r1, [pc, #284]	; 23aa8 <g_strcmp0@plt+0xce70>
   23988:	ldr	r3, [pc, #284]	; 23aac <g_strcmp0@plt+0xce74>
   2398c:	bl	165cc <g_object_get@plt>
   23990:	ldr	r0, [sp, #20]
   23994:	bl	1ede8 <g_strcmp0@plt+0x81b0>
   23998:	mov	r2, #5
   2399c:	ldr	r1, [pc, #268]	; 23ab0 <g_strcmp0@plt+0xce78>
   239a0:	mov	r8, r0
   239a4:	mov	r0, r5
   239a8:	bl	16530 <dcgettext@plt>
   239ac:	mov	r1, r8
   239b0:	ldr	r2, [sp, #24]
   239b4:	bl	160e0 <g_strdup_printf@plt>
   239b8:	mov	r2, #5
   239bc:	ldr	r1, [pc, #240]	; 23ab4 <g_strcmp0@plt+0xce7c>
   239c0:	ldr	sl, [r4, #8]
   239c4:	mov	r8, r0
   239c8:	mov	r0, r5
   239cc:	bl	16530 <dcgettext@plt>
   239d0:	mov	r3, #3
   239d4:	mov	r1, r3
   239d8:	mov	r2, r5
   239dc:	str	r0, [sp]
   239e0:	mov	r0, sl
   239e4:	bl	16a70 <gtk_message_dialog_new@plt>
   239e8:	mov	sl, r0
   239ec:	bl	16bfc <gtk_window_get_type@plt>
   239f0:	mov	r1, r0
   239f4:	mov	r0, sl
   239f8:	bl	15d68 <g_type_check_instance_cast@plt>
   239fc:	str	r0, [r4, #12]
   23a00:	mov	sl, r0
   23a04:	bl	16590 <gtk_message_dialog_get_type@plt>
   23a08:	mov	r1, r0
   23a0c:	mov	r0, sl
   23a10:	bl	15d68 <g_type_check_instance_cast@plt>
   23a14:	mov	r2, r8
   23a18:	ldr	r1, [pc, #152]	; 23ab8 <g_strcmp0@plt+0xce80>
   23a1c:	bl	16500 <gtk_message_dialog_format_secondary_markup@plt>
   23a20:	bl	165e4 <gtk_dialog_get_type@plt>
   23a24:	mov	r1, r0
   23a28:	ldr	r0, [r4, #12]
   23a2c:	bl	15d68 <g_type_check_instance_cast@plt>
   23a30:	mov	r2, #5
   23a34:	ldr	r1, [pc, #128]	; 23abc <g_strcmp0@plt+0xce84>
   23a38:	mov	sl, r0
   23a3c:	mov	r0, r5
   23a40:	bl	16530 <dcgettext@plt>
   23a44:	mvn	r2, #7
   23a48:	mov	r1, r0
   23a4c:	mov	r0, sl
   23a50:	bl	15bf4 <gtk_dialog_add_button@plt>
   23a54:	ldr	r0, [r4, #12]
   23a58:	ldr	r1, [pc, #96]	; 23ac0 <g_strcmp0@plt+0xce88>
   23a5c:	bl	15ef4 <gtk_window_set_icon_name@plt>
   23a60:	ldr	r0, [r4, #12]
   23a64:	mov	r3, r9
   23a68:	ldr	r2, [pc, #84]	; 23ac4 <g_strcmp0@plt+0xce8c>
   23a6c:	ldr	r1, [pc, #84]	; 23ac8 <g_strcmp0@plt+0xce90>
   23a70:	str	r5, [sp, #4]
   23a74:	str	r5, [sp]
   23a78:	bl	16314 <g_signal_connect_data@plt>
   23a7c:	bl	15d14 <gtk_widget_get_type@plt>
   23a80:	mov	r1, r0
   23a84:	ldr	r0, [r4, #12]
   23a88:	bl	15d68 <g_type_check_instance_cast@plt>
   23a8c:	bl	167b8 <gtk_widget_show_all@plt>
   23a90:	b	23938 <g_strcmp0@plt+0xcd00>
   23a94:	bl	164ac <__stack_chk_fail@plt>
   23a98:	andeq	ip, r3, r0, asr lr
   23a9c:	andeq	ip, r2, r0, lsr #9
   23aa0:	andeq	r6, r2, r0, ror #4
   23aa4:	ldrdeq	ip, [r2], -r4
   23aa8:	andeq	ip, r2, r8, asr #9
   23aac:			; <UNDEFINED> instruction: 0x0002c4bc
   23ab0:	andeq	ip, r2, r0, ror #9
   23ab4:	andeq	r8, r2, r8, lsr #18
   23ab8:	andeq	fp, r2, ip, asr r9
   23abc:	andeq	ip, r2, r8, lsl #9
   23ac0:			; <UNDEFINED> instruction: 0x0002bdbc
   23ac4:	andeq	r2, r2, r0, lsl sp
   23ac8:	muleq	r2, r4, r4
   23acc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23ad0:	sub	sp, sp, #44	; 0x2c
   23ad4:	ldr	r6, [pc, #560]	; 23d0c <g_strcmp0@plt+0xd0d4>
   23ad8:	mov	sl, #0
   23adc:	mov	r5, r1
   23ae0:	ldr	r3, [r6]
   23ae4:	mov	r7, r2
   23ae8:	mov	r4, r0
   23aec:	str	r3, [sp, #36]	; 0x24
   23af0:	str	sl, [sp, #24]
   23af4:	str	sl, [sp, #28]
   23af8:	str	sl, [sp, #32]
   23afc:	bl	2304c <g_strcmp0@plt+0xc414>
   23b00:	mov	r1, r0
   23b04:	mov	r0, r4
   23b08:	bl	15d68 <g_type_check_instance_cast@plt>
   23b0c:	ldr	r4, [r0, #20]
   23b10:	mov	r0, r7
   23b14:	str	r5, [r4, #28]
   23b18:	bl	16734 <pk_results_get_eula_required_array@plt>
   23b1c:	ldr	r8, [r0, #4]
   23b20:	mov	r5, r0
   23b24:	cmp	r8, #1
   23b28:	beq	23b90 <g_strcmp0@plt+0xcf58>
   23b2c:	mov	r3, r8
   23b30:	ldr	r2, [pc, #472]	; 23d10 <g_strcmp0@plt+0xd0d8>
   23b34:	mov	r1, #16
   23b38:	ldr	r0, [pc, #468]	; 23d14 <g_strcmp0@plt+0xd0dc>
   23b3c:	bl	15dec <g_log@plt>
   23b40:	mov	r7, sl
   23b44:	mov	r9, sl
   23b48:	mov	r0, r9
   23b4c:	bl	16518 <g_free@plt>
   23b50:	ldr	r0, [sp, #24]
   23b54:	bl	16518 <g_free@plt>
   23b58:	ldr	r0, [sp, #28]
   23b5c:	bl	16518 <g_free@plt>
   23b60:	ldr	r0, [sp, #32]
   23b64:	bl	16518 <g_free@plt>
   23b68:	mov	r0, r7
   23b6c:	bl	1644c <g_strfreev@plt>
   23b70:	mov	r0, r5
   23b74:	bl	169c8 <g_ptr_array_unref@plt>
   23b78:	ldr	r2, [sp, #36]	; 0x24
   23b7c:	ldr	r3, [r6]
   23b80:	cmp	r2, r3
   23b84:	bne	23d08 <g_strcmp0@plt+0xd0d0>
   23b88:	add	sp, sp, #44	; 0x2c
   23b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23b90:	ldr	r3, [r0]
   23b94:	ldr	r1, [pc, #380]	; 23d18 <g_strcmp0@plt+0xd0e0>
   23b98:	add	r2, sp, #32
   23b9c:	ldr	r0, [r3]
   23ba0:	add	r3, sp, #28
   23ba4:	stmib	sp, {r1, r2, sl}
   23ba8:	add	r2, sp, #24
   23bac:	str	r3, [sp]
   23bb0:	ldr	r1, [pc, #356]	; 23d1c <g_strcmp0@plt+0xd0e4>
   23bb4:	ldr	r3, [pc, #356]	; 23d20 <g_strcmp0@plt+0xd0e8>
   23bb8:	bl	165cc <g_object_get@plt>
   23bbc:	ldr	r1, [pc, #352]	; 23d24 <g_strcmp0@plt+0xd0ec>
   23bc0:	ldr	r0, [r4, #24]
   23bc4:	bl	16068 <gtk_builder_get_object@plt>
   23bc8:	mov	r7, r0
   23bcc:	bl	15d14 <gtk_widget_get_type@plt>
   23bd0:	mov	r1, r0
   23bd4:	mov	fp, r0
   23bd8:	mov	r0, r7
   23bdc:	bl	15d68 <g_type_check_instance_cast@plt>
   23be0:	str	r0, [sp, #20]
   23be4:	ldr	r0, [sp, #24]
   23be8:	bl	15d44 <pk_package_id_split@plt>
   23bec:	ldr	r2, [sp, #28]
   23bf0:	ldr	r1, [r0]
   23bf4:	mov	r7, r0
   23bf8:	ldr	r0, [pc, #296]	; 23d28 <g_strcmp0@plt+0xd0f0>
   23bfc:	bl	160e0 <g_strdup_printf@plt>
   23c00:	mov	r9, r0
   23c04:	bl	15cc0 <gtk_label_get_type@plt>
   23c08:	ldr	r3, [sp, #20]
   23c0c:	mov	r1, r0
   23c10:	mov	r0, r3
   23c14:	bl	15d68 <g_type_check_instance_cast@plt>
   23c18:	mov	r1, r9
   23c1c:	bl	15ccc <gtk_label_set_label@plt>
   23c20:	mov	r0, sl
   23c24:	bl	16914 <gtk_text_buffer_new@plt>
   23c28:	ldr	r1, [sp, #32]
   23c2c:	str	r1, [sp, #20]
   23c30:	mov	sl, r0
   23c34:	mov	r0, r1
   23c38:	bl	16884 <strlen@plt>
   23c3c:	ldr	r1, [sp, #20]
   23c40:	mov	r2, r0
   23c44:	mov	r0, sl
   23c48:	bl	16584 <gtk_text_buffer_insert_at_cursor@plt>
   23c4c:	ldr	r1, [pc, #216]	; 23d2c <g_strcmp0@plt+0xd0f4>
   23c50:	ldr	r0, [r4, #24]
   23c54:	bl	16068 <gtk_builder_get_object@plt>
   23c58:	mov	r1, fp
   23c5c:	bl	15d68 <g_type_check_instance_cast@plt>
   23c60:	str	r0, [sp, #20]
   23c64:	bl	15d80 <gtk_text_view_get_type@plt>
   23c68:	mov	r1, r0
   23c6c:	ldr	r0, [sp, #20]
   23c70:	bl	15d68 <g_type_check_instance_cast@plt>
   23c74:	mov	r1, sl
   23c78:	bl	16260 <gtk_text_view_set_buffer@plt>
   23c7c:	mov	r2, #200	; 0xc8
   23c80:	ldr	r0, [sp, #20]
   23c84:	mov	r1, #100	; 0x64
   23c88:	bl	1623c <gtk_widget_set_size_request@plt>
   23c8c:	ldr	r1, [pc, #156]	; 23d30 <g_strcmp0@plt+0xd0f8>
   23c90:	ldr	r0, [r4, #24]
   23c94:	bl	16068 <gtk_builder_get_object@plt>
   23c98:	str	r0, [sp, #20]
   23c9c:	bl	16bfc <gtk_window_get_type@plt>
   23ca0:	ldr	r3, [sp, #20]
   23ca4:	mov	r1, r0
   23ca8:	mov	r0, r3
   23cac:	bl	15d68 <g_type_check_instance_cast@plt>
   23cb0:	ldr	r1, [r4, #8]
   23cb4:	cmp	r1, #0
   23cb8:	mov	r3, r0
   23cbc:	str	r0, [r4, #12]
   23cc0:	beq	23ce4 <g_strcmp0@plt+0xd0ac>
   23cc4:	bl	16908 <gtk_window_set_transient_for@plt>
   23cc8:	mov	r1, r8
   23ccc:	ldr	r0, [r4, #12]
   23cd0:	bl	16a04 <gtk_window_set_modal@plt>
   23cd4:	ldr	r1, [pc, #88]	; 23d34 <g_strcmp0@plt+0xd0fc>
   23cd8:	ldr	r0, [r4, #12]
   23cdc:	bl	1620c <gtk_window_set_title@plt>
   23ce0:	ldr	r3, [r4, #12]
   23ce4:	ldr	r2, [pc, #76]	; 23d38 <g_strcmp0@plt+0xd100>
   23ce8:	mov	r1, fp
   23cec:	mov	r0, r3
   23cf0:	str	r2, [r4, #32]
   23cf4:	bl	15d68 <g_type_check_instance_cast@plt>
   23cf8:	bl	1686c <gtk_widget_show@plt>
   23cfc:	mov	r0, sl
   23d00:	bl	16878 <g_object_unref@plt>
   23d04:	b	23b48 <g_strcmp0@plt+0xcf10>
   23d08:	bl	164ac <__stack_chk_fail@plt>
   23d0c:	andeq	ip, r3, r0, asr lr
   23d10:	andeq	ip, r2, r0, lsr #9
   23d14:	andeq	r6, r2, r0, ror #4
   23d18:	andeq	ip, r2, ip, lsr r5
   23d1c:	andeq	r6, r2, r4, lsr r8
   23d20:	andeq	ip, r2, r0, lsr r5
   23d24:	andeq	ip, r2, r0, asr r5
   23d28:	andeq	ip, r2, ip, asr r5
   23d2c:	andeq	r6, r2, r0, lsr r5
   23d30:	andeq	ip, r2, r0, lsr #2
   23d34:	andeq	r7, r2, r8, ror #22
   23d38:	andeq	ip, r2, ip, lsl #11
   23d3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23d40:	sub	sp, sp, #56	; 0x38
   23d44:	ldr	sl, [pc, #612]	; 23fb0 <g_strcmp0@plt+0xd378>
   23d48:	mov	r4, #0
   23d4c:	mov	r5, r1
   23d50:	ldr	r3, [sl]
   23d54:	mov	r6, r2
   23d58:	str	r3, [sp, #52]	; 0x34
   23d5c:	mov	r7, r0
   23d60:	str	r4, [sp, #32]
   23d64:	str	r4, [sp, #36]	; 0x24
   23d68:	str	r4, [sp, #40]	; 0x28
   23d6c:	str	r4, [sp, #44]	; 0x2c
   23d70:	str	r4, [sp, #48]	; 0x30
   23d74:	bl	2304c <g_strcmp0@plt+0xc414>
   23d78:	mov	r1, r0
   23d7c:	mov	r0, r7
   23d80:	bl	15d68 <g_type_check_instance_cast@plt>
   23d84:	ldr	r9, [r0, #20]
   23d88:	mov	r0, r6
   23d8c:	str	r5, [r9, #28]
   23d90:	bl	16608 <pk_results_get_repo_signature_required_array@plt>
   23d94:	ldr	r8, [r0, #4]
   23d98:	mov	r5, r0
   23d9c:	cmp	r8, #1
   23da0:	beq	23e08 <g_strcmp0@plt+0xd1d0>
   23da4:	mov	r3, r8
   23da8:	ldr	r2, [pc, #516]	; 23fb4 <g_strcmp0@plt+0xd37c>
   23dac:	mov	r1, #16
   23db0:	ldr	r0, [pc, #512]	; 23fb8 <g_strcmp0@plt+0xd380>
   23db4:	bl	15dec <g_log@plt>
   23db8:	mov	r0, r4
   23dbc:	bl	16518 <g_free@plt>
   23dc0:	ldr	r0, [sp, #32]
   23dc4:	bl	16518 <g_free@plt>
   23dc8:	ldr	r0, [sp, #36]	; 0x24
   23dcc:	bl	16518 <g_free@plt>
   23dd0:	ldr	r0, [sp, #40]	; 0x28
   23dd4:	bl	16518 <g_free@plt>
   23dd8:	ldr	r0, [sp, #44]	; 0x2c
   23ddc:	bl	16518 <g_free@plt>
   23de0:	ldr	r0, [sp, #48]	; 0x30
   23de4:	bl	16518 <g_free@plt>
   23de8:	mov	r0, r5
   23dec:	bl	169c8 <g_ptr_array_unref@plt>
   23df0:	ldr	r2, [sp, #52]	; 0x34
   23df4:	ldr	r3, [sl]
   23df8:	cmp	r2, r3
   23dfc:	bne	23fac <g_strcmp0@plt+0xd374>
   23e00:	add	sp, sp, #56	; 0x38
   23e04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23e08:	ldr	r1, [r0]
   23e0c:	ldr	r2, [pc, #424]	; 23fbc <g_strcmp0@plt+0xd384>
   23e10:	ldr	r3, [pc, #424]	; 23fc0 <g_strcmp0@plt+0xd388>
   23e14:	ldr	lr, [pc, #424]	; 23fc4 <g_strcmp0@plt+0xd38c>
   23e18:	add	ip, sp, #48	; 0x30
   23e1c:	ldr	r0, [r1]
   23e20:	add	r1, sp, #44	; 0x2c
   23e24:	str	r2, [sp, #20]
   23e28:	str	r3, [sp, #12]
   23e2c:	add	r2, sp, #40	; 0x28
   23e30:	add	r3, sp, #36	; 0x24
   23e34:	str	lr, [sp, #4]
   23e38:	str	ip, [sp, #24]
   23e3c:	str	r4, [sp, #28]
   23e40:	str	r1, [sp, #16]
   23e44:	str	r2, [sp, #8]
   23e48:	str	r3, [sp]
   23e4c:	add	r2, sp, #32
   23e50:	ldr	r3, [pc, #368]	; 23fc8 <g_strcmp0@plt+0xd390>
   23e54:	ldr	r1, [pc, #368]	; 23fcc <g_strcmp0@plt+0xd394>
   23e58:	bl	165cc <g_object_get@plt>
   23e5c:	ldr	r1, [pc, #364]	; 23fd0 <g_strcmp0@plt+0xd398>
   23e60:	ldr	r0, [r9, #20]
   23e64:	bl	16068 <gtk_builder_get_object@plt>
   23e68:	mov	r4, r0
   23e6c:	bl	15d14 <gtk_widget_get_type@plt>
   23e70:	mov	r6, r0
   23e74:	mov	r1, r0
   23e78:	mov	r0, r4
   23e7c:	bl	15d68 <g_type_check_instance_cast@plt>
   23e80:	mov	r4, r0
   23e84:	bl	15cc0 <gtk_label_get_type@plt>
   23e88:	mov	r7, r0
   23e8c:	mov	r1, r0
   23e90:	mov	r0, r4
   23e94:	bl	15d68 <g_type_check_instance_cast@plt>
   23e98:	ldr	r1, [sp, #36]	; 0x24
   23e9c:	bl	15ccc <gtk_label_set_label@plt>
   23ea0:	ldr	r1, [pc, #300]	; 23fd4 <g_strcmp0@plt+0xd39c>
   23ea4:	ldr	r0, [r9, #20]
   23ea8:	bl	16068 <gtk_builder_get_object@plt>
   23eac:	mov	r1, r6
   23eb0:	bl	15d68 <g_type_check_instance_cast@plt>
   23eb4:	mov	r1, r7
   23eb8:	bl	15d68 <g_type_check_instance_cast@plt>
   23ebc:	ldr	r1, [sp, #40]	; 0x28
   23ec0:	bl	15ccc <gtk_label_set_label@plt>
   23ec4:	ldr	r1, [pc, #268]	; 23fd8 <g_strcmp0@plt+0xd3a0>
   23ec8:	ldr	r0, [r9, #20]
   23ecc:	bl	16068 <gtk_builder_get_object@plt>
   23ed0:	mov	r1, r6
   23ed4:	bl	15d68 <g_type_check_instance_cast@plt>
   23ed8:	mov	r1, r7
   23edc:	bl	15d68 <g_type_check_instance_cast@plt>
   23ee0:	ldr	r1, [sp, #44]	; 0x2c
   23ee4:	bl	15ccc <gtk_label_set_label@plt>
   23ee8:	ldr	r1, [pc, #236]	; 23fdc <g_strcmp0@plt+0xd3a4>
   23eec:	ldr	r0, [r9, #20]
   23ef0:	bl	16068 <gtk_builder_get_object@plt>
   23ef4:	mov	r1, r6
   23ef8:	bl	15d68 <g_type_check_instance_cast@plt>
   23efc:	mov	r1, r7
   23f00:	bl	15d68 <g_type_check_instance_cast@plt>
   23f04:	ldr	r1, [sp, #48]	; 0x30
   23f08:	bl	15ccc <gtk_label_set_label@plt>
   23f0c:	ldr	r0, [sp, #32]
   23f10:	bl	16944 <pk_package_id_to_printable@plt>
   23f14:	ldr	r1, [pc, #196]	; 23fe0 <g_strcmp0@plt+0xd3a8>
   23f18:	mov	r4, r0
   23f1c:	ldr	r0, [r9, #20]
   23f20:	bl	16068 <gtk_builder_get_object@plt>
   23f24:	mov	r1, r6
   23f28:	bl	15d68 <g_type_check_instance_cast@plt>
   23f2c:	mov	r1, r7
   23f30:	bl	15d68 <g_type_check_instance_cast@plt>
   23f34:	mov	r1, r4
   23f38:	bl	15ccc <gtk_label_set_label@plt>
   23f3c:	ldr	r1, [pc, #160]	; 23fe4 <g_strcmp0@plt+0xd3ac>
   23f40:	ldr	r0, [r9, #20]
   23f44:	bl	16068 <gtk_builder_get_object@plt>
   23f48:	mov	r7, r0
   23f4c:	bl	16bfc <gtk_window_get_type@plt>
   23f50:	mov	r1, r0
   23f54:	mov	r0, r7
   23f58:	bl	15d68 <g_type_check_instance_cast@plt>
   23f5c:	ldr	r1, [r9, #8]
   23f60:	cmp	r1, #0
   23f64:	mov	r3, r0
   23f68:	str	r0, [r9, #12]
   23f6c:	beq	23f90 <g_strcmp0@plt+0xd358>
   23f70:	bl	16908 <gtk_window_set_transient_for@plt>
   23f74:	mov	r1, r8
   23f78:	ldr	r0, [r9, #12]
   23f7c:	bl	16a04 <gtk_window_set_modal@plt>
   23f80:	ldr	r1, [pc, #96]	; 23fe8 <g_strcmp0@plt+0xd3b0>
   23f84:	ldr	r0, [r9, #12]
   23f88:	bl	1620c <gtk_window_set_title@plt>
   23f8c:	ldr	r3, [r9, #12]
   23f90:	ldr	r2, [pc, #84]	; 23fec <g_strcmp0@plt+0xd3b4>
   23f94:	mov	r1, r6
   23f98:	mov	r0, r3
   23f9c:	str	r2, [r9, #32]
   23fa0:	bl	15d68 <g_type_check_instance_cast@plt>
   23fa4:	bl	1686c <gtk_widget_show@plt>
   23fa8:	b	23db8 <g_strcmp0@plt+0xd180>
   23fac:	bl	164ac <__stack_chk_fail@plt>
   23fb0:	andeq	ip, r3, r0, asr lr
   23fb4:	andeq	ip, r2, r0, lsr #9
   23fb8:	andeq	r6, r2, r0, ror #4
   23fbc:	andeq	ip, r2, r4, lsr #11
   23fc0:	andeq	ip, r2, ip, lsr #11
   23fc4:			; <UNDEFINED> instruction: 0x0002c5b8
   23fc8:	muleq	r2, r4, r5
   23fcc:	andeq	r6, r2, r4, lsr r8
   23fd0:	andeq	ip, r2, r0, asr #11
   23fd4:	andeq	ip, r2, ip, asr #11
   23fd8:	ldrdeq	ip, [r2], -r8
   23fdc:	andeq	ip, r2, r4, ror #11
   23fe0:	strdeq	ip, [r2], -r0
   23fe4:	andeq	ip, r2, r8, ror r1
   23fe8:	andeq	r7, r2, r8, ror #22
   23fec:	andeq	ip, r2, r0, lsl #12
   23ff0:	push	{r4, r5, r6, r7, r8, r9, lr}
   23ff4:	sub	sp, sp, #20
   23ff8:	ldr	r7, [pc, #488]	; 241e8 <g_strcmp0@plt+0xd5b0>
   23ffc:	mov	r6, r2
   24000:	mov	r5, r1
   24004:	ldr	r3, [r7]
   24008:	mov	r4, r0
   2400c:	str	r3, [sp, #12]
   24010:	bl	2304c <g_strcmp0@plt+0xc414>
   24014:	mov	r1, r0
   24018:	mov	r0, r4
   2401c:	bl	15d68 <g_type_check_instance_cast@plt>
   24020:	ldr	r1, [pc, #452]	; 241ec <g_strcmp0@plt+0xd5b4>
   24024:	ldr	r4, [r0, #20]
   24028:	str	r5, [r4, #28]
   2402c:	ldr	r0, [r4, #16]
   24030:	bl	16068 <gtk_builder_get_object@plt>
   24034:	mov	r8, r0
   24038:	bl	15d14 <gtk_widget_get_type@plt>
   2403c:	mov	r1, r0
   24040:	mov	r5, r0
   24044:	mov	r0, r8
   24048:	bl	15d68 <g_type_check_instance_cast@plt>
   2404c:	bl	15dbc <gtk_widget_hide@plt>
   24050:	mov	r0, r6
   24054:	mov	r3, #0
   24058:	add	r2, sp, #8
   2405c:	ldr	r1, [pc, #396]	; 241f0 <g_strcmp0@plt+0xd5b8>
   24060:	bl	165cc <g_object_get@plt>
   24064:	ldr	r3, [sp, #8]
   24068:	mov	r2, #5
   2406c:	cmp	r3, #22
   24070:	ldr	r1, [pc, #380]	; 241f4 <g_strcmp0@plt+0xd5bc>
   24074:	mov	r0, #0
   24078:	beq	241a8 <g_strcmp0@plt+0xd570>
   2407c:	bl	16530 <dcgettext@plt>
   24080:	mov	r2, #5
   24084:	ldr	r1, [pc, #364]	; 241f8 <g_strcmp0@plt+0xd5c0>
   24088:	mov	r6, r0
   2408c:	mov	r0, #0
   24090:	bl	16530 <dcgettext@plt>
   24094:	mov	r2, #5
   24098:	ldr	r1, [pc, #348]	; 241fc <g_strcmp0@plt+0xd5c4>
   2409c:	mov	r8, r0
   240a0:	mov	r0, #0
   240a4:	bl	16530 <dcgettext@plt>
   240a8:	ldr	r1, [pc, #336]	; 24200 <g_strcmp0@plt+0xd5c8>
   240ac:	mov	r2, #5
   240b0:	mov	r9, r0
   240b4:	mov	r0, #0
   240b8:	bl	16530 <dcgettext@plt>
   240bc:	mov	r2, r8
   240c0:	mov	r3, r9
   240c4:	mov	r1, r6
   240c8:	str	r0, [sp]
   240cc:	ldr	r0, [pc, #304]	; 24204 <g_strcmp0@plt+0xd5cc>
   240d0:	bl	160e0 <g_strdup_printf@plt>
   240d4:	ldr	r1, [pc, #300]	; 24208 <g_strcmp0@plt+0xd5d0>
   240d8:	mov	r6, r0
   240dc:	ldr	r0, [r4, #16]
   240e0:	bl	16068 <gtk_builder_get_object@plt>
   240e4:	mov	r1, r5
   240e8:	bl	15d68 <g_type_check_instance_cast@plt>
   240ec:	mov	r8, r0
   240f0:	bl	15cc0 <gtk_label_get_type@plt>
   240f4:	mov	r1, r0
   240f8:	mov	r0, r8
   240fc:	bl	15d68 <g_type_check_instance_cast@plt>
   24100:	mov	r1, r6
   24104:	bl	16a88 <gtk_label_set_markup@plt>
   24108:	mov	r0, r6
   2410c:	bl	16518 <g_free@plt>
   24110:	ldr	r1, [pc, #244]	; 2420c <g_strcmp0@plt+0xd5d4>
   24114:	ldr	r0, [r4, #16]
   24118:	bl	16068 <gtk_builder_get_object@plt>
   2411c:	mov	r6, r0
   24120:	bl	16bfc <gtk_window_get_type@plt>
   24124:	mov	r1, r0
   24128:	mov	r0, r6
   2412c:	bl	15d68 <g_type_check_instance_cast@plt>
   24130:	ldr	r1, [r4, #8]
   24134:	cmp	r1, #0
   24138:	mov	r6, r0
   2413c:	str	r0, [r4, #12]
   24140:	beq	24164 <g_strcmp0@plt+0xd52c>
   24144:	bl	16908 <gtk_window_set_transient_for@plt>
   24148:	mov	r1, #1
   2414c:	ldr	r0, [r4, #12]
   24150:	bl	16a04 <gtk_window_set_modal@plt>
   24154:	ldr	r1, [pc, #180]	; 24210 <g_strcmp0@plt+0xd5d8>
   24158:	ldr	r0, [r4, #12]
   2415c:	bl	1620c <gtk_window_set_title@plt>
   24160:	ldr	r6, [r4, #12]
   24164:	mov	r2, #5
   24168:	ldr	r1, [pc, #132]	; 241f4 <g_strcmp0@plt+0xd5bc>
   2416c:	mov	r0, #0
   24170:	bl	16530 <dcgettext@plt>
   24174:	mov	r1, r0
   24178:	mov	r0, r6
   2417c:	bl	1620c <gtk_window_set_title@plt>
   24180:	mov	r1, r5
   24184:	ldr	r0, [r4, #12]
   24188:	bl	15d68 <g_type_check_instance_cast@plt>
   2418c:	bl	1686c <gtk_widget_show@plt>
   24190:	ldr	r2, [sp, #12]
   24194:	ldr	r3, [r7]
   24198:	cmp	r2, r3
   2419c:	bne	241e4 <g_strcmp0@plt+0xd5ac>
   241a0:	add	sp, sp, #20
   241a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   241a8:	bl	16530 <dcgettext@plt>
   241ac:	mov	r2, #5
   241b0:	ldr	r1, [pc, #92]	; 24214 <g_strcmp0@plt+0xd5dc>
   241b4:	mov	r6, r0
   241b8:	mov	r0, #0
   241bc:	bl	16530 <dcgettext@plt>
   241c0:	mov	r2, #5
   241c4:	ldr	r1, [pc, #48]	; 241fc <g_strcmp0@plt+0xd5c4>
   241c8:	mov	r8, r0
   241cc:	mov	r0, #0
   241d0:	bl	16530 <dcgettext@plt>
   241d4:	mov	r2, #5
   241d8:	ldr	r1, [pc, #56]	; 24218 <g_strcmp0@plt+0xd5e0>
   241dc:	mov	r9, r0
   241e0:	b	240b4 <g_strcmp0@plt+0xd47c>
   241e4:	bl	164ac <__stack_chk_fail@plt>
   241e8:	andeq	ip, r3, r0, asr lr
   241ec:	andeq	ip, r2, r0, asr r5
   241f0:	andeq	r6, r2, ip, asr sl
   241f4:	andeq	ip, r2, r0, lsl r6
   241f8:	andeq	ip, r2, r4, lsl r7
   241fc:	andeq	ip, r2, r8, lsl #13
   24200:	andeq	ip, r2, ip, asr r7
   24204:	andeq	ip, r2, r4, lsl #14
   24208:	muleq	r2, r4, r7
   2420c:	andeq	ip, r2, r8, lsl #1
   24210:	andeq	r7, r2, r8, ror #22
   24214:	andeq	ip, r2, r4, asr #12
   24218:	andeq	ip, r2, ip, asr #13
   2421c:	push	{r4, r5, r6, lr}
   24220:	mov	r5, r0
   24224:	bl	2304c <g_strcmp0@plt+0xc414>
   24228:	mov	r1, r0
   2422c:	mov	r0, r5
   24230:	bl	15d68 <g_type_check_instance_cast@plt>
   24234:	ldr	r3, [r0, #20]
   24238:	mov	r4, r0
   2423c:	ldr	r0, [r3, #16]
   24240:	bl	16878 <g_object_unref@plt>
   24244:	ldr	r3, [r4, #20]
   24248:	ldr	r0, [r3, #20]
   2424c:	bl	16878 <g_object_unref@plt>
   24250:	ldr	r3, [r4, #20]
   24254:	ldr	r0, [r3, #24]
   24258:	bl	16878 <g_object_unref@plt>
   2425c:	ldr	r3, [r4, #20]
   24260:	ldr	r0, [r3, #4]
   24264:	bl	16878 <g_object_unref@plt>
   24268:	ldr	r3, [pc, #24]	; 24288 <g_strcmp0@plt+0xd650>
   2426c:	mov	r1, #80	; 0x50
   24270:	ldr	r0, [r3]
   24274:	bl	16b48 <g_type_check_class_cast@plt>
   24278:	ldr	r3, [r0, #24]
   2427c:	mov	r0, r5
   24280:	pop	{r4, r5, r6, lr}
   24284:	bx	r3
   24288:	ldrdeq	sp, [r3], -ip
   2428c:	push	{r4, r5, r6, lr}
   24290:	mov	r4, r0
   24294:	mov	r5, r1
   24298:	bl	2304c <g_strcmp0@plt+0xc414>
   2429c:	cmp	r4, #0
   242a0:	beq	242e8 <g_strcmp0@plt+0xd6b0>
   242a4:	ldr	r3, [r4]
   242a8:	cmp	r3, #0
   242ac:	beq	242bc <g_strcmp0@plt+0xd684>
   242b0:	ldr	r3, [r3]
   242b4:	cmp	r3, r0
   242b8:	beq	242d0 <g_strcmp0@plt+0xd698>
   242bc:	mov	r1, r0
   242c0:	mov	r0, r4
   242c4:	bl	166d4 <g_type_check_instance_is_a@plt>
   242c8:	cmp	r0, #0
   242cc:	beq	242e8 <g_strcmp0@plt+0xd6b0>
   242d0:	cmp	r5, #0
   242d4:	beq	24300 <g_strcmp0@plt+0xd6c8>
   242d8:	ldr	r3, [r4, #20]
   242dc:	mov	r0, #1
   242e0:	str	r5, [r3, #8]
   242e4:	pop	{r4, r5, r6, pc}
   242e8:	ldr	r2, [pc, #40]	; 24318 <g_strcmp0@plt+0xd6e0>
   242ec:	ldr	r1, [pc, #40]	; 2431c <g_strcmp0@plt+0xd6e4>
   242f0:	ldr	r0, [pc, #40]	; 24320 <g_strcmp0@plt+0xd6e8>
   242f4:	bl	15bac <g_return_if_fail_warning@plt>
   242f8:	mov	r0, #0
   242fc:	pop	{r4, r5, r6, pc}
   24300:	ldr	r2, [pc, #28]	; 24324 <g_strcmp0@plt+0xd6ec>
   24304:	ldr	r1, [pc, #16]	; 2431c <g_strcmp0@plt+0xd6e4>
   24308:	ldr	r0, [pc, #16]	; 24320 <g_strcmp0@plt+0xd6e8>
   2430c:	bl	15bac <g_return_if_fail_warning@plt>
   24310:	mov	r0, r5
   24314:	pop	{r4, r5, r6, pc}
   24318:	andeq	ip, r2, r4, lsr #15
   2431c:	muleq	r2, r8, lr
   24320:	andeq	r6, r2, r0, ror #4
   24324:			; <UNDEFINED> instruction: 0x0002c7b8
   24328:	push	{r4, lr}
   2432c:	bl	2304c <g_strcmp0@plt+0xc414>
   24330:	mov	r1, #0
   24334:	bl	15a8c <g_object_new@plt>
   24338:	mov	r4, r0
   2433c:	bl	2304c <g_strcmp0@plt+0xc414>
   24340:	mov	r1, r0
   24344:	mov	r0, r4
   24348:	pop	{r4, lr}
   2434c:	b	15d68 <g_type_check_instance_cast@plt>
   24350:	push	{r4, r5, r6, lr}
   24354:	mov	r4, r2
   24358:	mov	r5, r0
   2435c:	bl	15e4c <gtk_expander_get_type@plt>
   24360:	mov	r1, r0
   24364:	mov	r0, r5
   24368:	bl	15d68 <g_type_check_instance_cast@plt>
   2436c:	ldr	r1, [pc, #72]	; 243bc <g_strcmp0@plt+0xd784>
   24370:	mov	r5, r0
   24374:	mov	r0, r4
   24378:	bl	16068 <gtk_builder_get_object@plt>
   2437c:	mov	r4, r0
   24380:	bl	16bfc <gtk_window_get_type@plt>
   24384:	mov	r1, r0
   24388:	mov	r0, r4
   2438c:	bl	15d68 <g_type_check_instance_cast@plt>
   24390:	mov	r4, r0
   24394:	mov	r0, r5
   24398:	bl	15a74 <gtk_expander_get_expanded@plt>
   2439c:	subs	r1, r0, #0
   243a0:	mov	r0, r4
   243a4:	beq	243b4 <g_strcmp0@plt+0xd77c>
   243a8:	mov	r1, #1
   243ac:	pop	{r4, r5, r6, lr}
   243b0:	b	167ac <gtk_window_set_resizable@plt>
   243b4:	pop	{r4, r5, r6, lr}
   243b8:	b	167ac <gtk_window_set_resizable@plt>
   243bc:	andeq	ip, r2, r8, lsl #1
   243c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   243c4:	sub	sp, sp, #28
   243c8:	ldr	r9, [pc, #884]	; 24744 <g_strcmp0@plt+0xdb0c>
   243cc:	cmp	r2, #0
   243d0:	str	r2, [sp, #8]
   243d4:	ldr	r2, [r9]
   243d8:	mov	r7, #0
   243dc:	str	r1, [sp, #12]
   243e0:	str	r2, [sp, #20]
   243e4:	str	r7, [sp, #16]
   243e8:	beq	24678 <g_strcmp0@plt+0xda40>
   243ec:	mov	sl, r3
   243f0:	mov	fp, r0
   243f4:	bl	167c4 <gtk_builder_new@plt>
   243f8:	add	r2, sp, #16
   243fc:	ldr	r1, [pc, #836]	; 24748 <g_strcmp0@plt+0xdb10>
   24400:	mov	r4, r0
   24404:	bl	16b90 <gtk_builder_add_from_file@plt>
   24408:	cmp	r0, r7
   2440c:	beq	24654 <g_strcmp0@plt+0xda1c>
   24410:	ldr	r1, [pc, #820]	; 2474c <g_strcmp0@plt+0xdb14>
   24414:	mov	r0, r4
   24418:	bl	16068 <gtk_builder_get_object@plt>
   2441c:	mov	r6, r0
   24420:	bl	15d14 <gtk_widget_get_type@plt>
   24424:	mov	r1, r0
   24428:	mov	r5, r0
   2442c:	mov	r0, r6
   24430:	bl	15d68 <g_type_check_instance_cast@plt>
   24434:	mov	r8, r0
   24438:	bl	16bfc <gtk_window_get_type@plt>
   2443c:	mov	r6, r0
   24440:	mov	r1, r0
   24444:	mov	r0, r8
   24448:	bl	15d68 <g_type_check_instance_cast@plt>
   2444c:	mov	r1, r7
   24450:	bl	167ac <gtk_window_set_resizable@plt>
   24454:	mov	r2, #2
   24458:	mov	r3, r7
   2445c:	str	r2, [sp, #4]
   24460:	ldr	r1, [pc, #744]	; 24750 <g_strcmp0@plt+0xdb18>
   24464:	ldr	r2, [pc, #744]	; 24754 <g_strcmp0@plt+0xdb1c>
   24468:	str	r7, [sp]
   2446c:	mov	r0, r8
   24470:	bl	16314 <g_signal_connect_data@plt>
   24474:	mov	r1, r6
   24478:	mov	r0, r8
   2447c:	bl	15d68 <g_type_check_instance_cast@plt>
   24480:	ldr	r1, [pc, #720]	; 24758 <g_strcmp0@plt+0xdb20>
   24484:	bl	1620c <gtk_window_set_title@plt>
   24488:	cmp	fp, #0
   2448c:	mov	r1, r6
   24490:	mov	r0, r8
   24494:	beq	24690 <g_strcmp0@plt+0xda58>
   24498:	bl	15d68 <g_type_check_instance_cast@plt>
   2449c:	mov	r1, fp
   244a0:	bl	16908 <gtk_window_set_transient_for@plt>
   244a4:	mov	r0, r8
   244a8:	mov	r1, r6
   244ac:	bl	15d68 <g_type_check_instance_cast@plt>
   244b0:	ldr	r1, [pc, #676]	; 2475c <g_strcmp0@plt+0xdb24>
   244b4:	bl	15ef4 <gtk_window_set_icon_name@plt>
   244b8:	ldr	r1, [pc, #672]	; 24760 <g_strcmp0@plt+0xdb28>
   244bc:	mov	r0, r4
   244c0:	bl	16068 <gtk_builder_get_object@plt>
   244c4:	mov	r1, r5
   244c8:	bl	15d68 <g_type_check_instance_cast@plt>
   244cc:	mov	r7, #0
   244d0:	mov	r3, #2
   244d4:	ldr	r2, [pc, #632]	; 24754 <g_strcmp0@plt+0xdb1c>
   244d8:	str	r3, [sp, #4]
   244dc:	ldr	r1, [pc, #640]	; 24764 <g_strcmp0@plt+0xdb2c>
   244e0:	mov	r3, r7
   244e4:	str	r7, [sp]
   244e8:	bl	16314 <g_signal_connect_data@plt>
   244ec:	ldr	r1, [pc, #628]	; 24768 <g_strcmp0@plt+0xdb30>
   244f0:	mov	r0, r4
   244f4:	bl	16068 <gtk_builder_get_object@plt>
   244f8:	mov	r1, r5
   244fc:	bl	15d68 <g_type_check_instance_cast@plt>
   24500:	mov	r3, r4
   24504:	ldr	r2, [pc, #608]	; 2476c <g_strcmp0@plt+0xdb34>
   24508:	ldr	r1, [pc, #608]	; 24770 <g_strcmp0@plt+0xdb38>
   2450c:	str	r7, [sp, #4]
   24510:	str	r7, [sp]
   24514:	bl	16314 <g_signal_connect_data@plt>
   24518:	ldr	r1, [pc, #596]	; 24774 <g_strcmp0@plt+0xdb3c>
   2451c:	mov	r0, r4
   24520:	bl	16068 <gtk_builder_get_object@plt>
   24524:	mov	r1, r5
   24528:	bl	15d68 <g_type_check_instance_cast@plt>
   2452c:	mov	fp, r0
   24530:	bl	15cc0 <gtk_label_get_type@plt>
   24534:	mov	r1, r0
   24538:	mov	r8, r0
   2453c:	mov	r0, fp
   24540:	bl	15d68 <g_type_check_instance_cast@plt>
   24544:	ldr	r1, [sp, #12]
   24548:	bl	15ccc <gtk_label_set_label@plt>
   2454c:	ldr	r1, [pc, #548]	; 24778 <g_strcmp0@plt+0xdb40>
   24550:	mov	r0, r4
   24554:	bl	16068 <gtk_builder_get_object@plt>
   24558:	mov	r1, r5
   2455c:	bl	15d68 <g_type_check_instance_cast@plt>
   24560:	mov	r1, r8
   24564:	bl	15d68 <g_type_check_instance_cast@plt>
   24568:	ldr	r1, [sp, #8]
   2456c:	bl	16a88 <gtk_label_set_markup@plt>
   24570:	cmp	sl, r7
   24574:	beq	24584 <g_strcmp0@plt+0xd94c>
   24578:	ldrb	r3, [sl]
   2457c:	cmp	r3, r7
   24580:	bne	246a0 <g_strcmp0@plt+0xda68>
   24584:	ldr	r1, [pc, #476]	; 24768 <g_strcmp0@plt+0xdb30>
   24588:	mov	r0, r4
   2458c:	bl	16068 <gtk_builder_get_object@plt>
   24590:	mov	r1, r5
   24594:	bl	15d68 <g_type_check_instance_cast@plt>
   24598:	bl	15dbc <gtk_widget_hide@plt>
   2459c:	ldr	r1, [pc, #424]	; 2474c <g_strcmp0@plt+0xdb14>
   245a0:	mov	r0, r4
   245a4:	bl	16068 <gtk_builder_get_object@plt>
   245a8:	mov	r1, r5
   245ac:	bl	15d68 <g_type_check_instance_cast@plt>
   245b0:	mov	r1, r6
   245b4:	mov	r7, r0
   245b8:	bl	15d68 <g_type_check_instance_cast@plt>
   245bc:	ldr	r1, [sp, #64]	; 0x40
   245c0:	bl	164a0 <gtk_window_present_with_time@plt>
   245c4:	mov	r1, r6
   245c8:	mov	r0, r7
   245cc:	bl	15d68 <g_type_check_instance_cast@plt>
   245d0:	ldr	r1, [pc, #388]	; 2475c <g_strcmp0@plt+0xdb24>
   245d4:	bl	15ef4 <gtk_window_set_icon_name@plt>
   245d8:	bl	16560 <gtk_main@plt>
   245dc:	cmp	r7, #0
   245e0:	movne	r8, #0
   245e4:	beq	24624 <g_strcmp0@plt+0xd9ec>
   245e8:	ldr	r3, [r7]
   245ec:	cmp	r3, #0
   245f0:	beq	24600 <g_strcmp0@plt+0xd9c8>
   245f4:	ldr	r3, [r3]
   245f8:	cmp	r5, r3
   245fc:	beq	24648 <g_strcmp0@plt+0xda10>
   24600:	mov	r1, r5
   24604:	mov	r0, r7
   24608:	bl	166d4 <g_type_check_instance_is_a@plt>
   2460c:	cmp	r0, #0
   24610:	bne	24648 <g_strcmp0@plt+0xda10>
   24614:	cmp	r8, #0
   24618:	beq	24624 <g_strcmp0@plt+0xd9ec>
   2461c:	mov	r0, r8
   24620:	bl	16878 <g_object_unref@plt>
   24624:	mov	r0, r4
   24628:	bl	16878 <g_object_unref@plt>
   2462c:	mov	r0, #1
   24630:	ldr	r2, [sp, #20]
   24634:	ldr	r3, [r9]
   24638:	cmp	r2, r3
   2463c:	bne	24740 <g_strcmp0@plt+0xdb08>
   24640:	add	sp, sp, #28
   24644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24648:	mov	r0, r7
   2464c:	bl	15dbc <gtk_widget_hide@plt>
   24650:	b	24614 <g_strcmp0@plt+0xd9dc>
   24654:	ldr	r3, [sp, #16]
   24658:	ldr	r2, [pc, #284]	; 2477c <g_strcmp0@plt+0xdb44>
   2465c:	mov	r1, #16
   24660:	ldr	r3, [r3, #8]
   24664:	ldr	r0, [pc, #276]	; 24780 <g_strcmp0@plt+0xdb48>
   24668:	bl	15dec <g_log@plt>
   2466c:	ldr	r0, [sp, #16]
   24670:	bl	15c78 <g_error_free@plt>
   24674:	b	24624 <g_strcmp0@plt+0xd9ec>
   24678:	ldr	r0, [pc, #256]	; 24780 <g_strcmp0@plt+0xdb48>
   2467c:	ldr	r2, [pc, #256]	; 24784 <g_strcmp0@plt+0xdb4c>
   24680:	ldr	r1, [pc, #256]	; 24788 <g_strcmp0@plt+0xdb50>
   24684:	bl	15bac <g_return_if_fail_warning@plt>
   24688:	ldr	r0, [sp, #8]
   2468c:	b	24630 <g_strcmp0@plt+0xd9f8>
   24690:	bl	15d68 <g_type_check_instance_cast@plt>
   24694:	mov	r1, #1
   24698:	bl	16a04 <gtk_window_set_modal@plt>
   2469c:	b	244a4 <g_strcmp0@plt+0xd86c>
   246a0:	mov	r0, r7
   246a4:	bl	16914 <gtk_text_buffer_new@plt>
   246a8:	mov	r8, r0
   246ac:	mov	r0, sl
   246b0:	bl	16884 <strlen@plt>
   246b4:	mov	r1, sl
   246b8:	mov	r2, r0
   246bc:	mov	r0, r8
   246c0:	bl	16584 <gtk_text_buffer_insert_at_cursor@plt>
   246c4:	ldr	r1, [pc, #192]	; 2478c <g_strcmp0@plt+0xdb54>
   246c8:	mov	r0, r4
   246cc:	bl	16068 <gtk_builder_get_object@plt>
   246d0:	mov	r1, r5
   246d4:	bl	15d68 <g_type_check_instance_cast@plt>
   246d8:	mov	r7, r0
   246dc:	bl	15d80 <gtk_text_view_get_type@plt>
   246e0:	mov	r1, r0
   246e4:	mov	r0, r7
   246e8:	bl	15d68 <g_type_check_instance_cast@plt>
   246ec:	mov	r1, r8
   246f0:	bl	16260 <gtk_text_view_set_buffer@plt>
   246f4:	ldr	r1, [pc, #80]	; 2474c <g_strcmp0@plt+0xdb14>
   246f8:	mov	r0, r4
   246fc:	bl	16068 <gtk_builder_get_object@plt>
   24700:	mov	r1, r5
   24704:	bl	15d68 <g_type_check_instance_cast@plt>
   24708:	mov	r1, r6
   2470c:	mov	r7, r0
   24710:	bl	15d68 <g_type_check_instance_cast@plt>
   24714:	ldr	r1, [sp, #64]	; 0x40
   24718:	bl	164a0 <gtk_window_present_with_time@plt>
   2471c:	mov	r1, r6
   24720:	mov	r0, r7
   24724:	bl	15d68 <g_type_check_instance_cast@plt>
   24728:	ldr	r1, [pc, #44]	; 2475c <g_strcmp0@plt+0xdb24>
   2472c:	bl	15ef4 <gtk_window_set_icon_name@plt>
   24730:	bl	16560 <gtk_main@plt>
   24734:	cmp	r7, #0
   24738:	bne	245e8 <g_strcmp0@plt+0xd9b0>
   2473c:	b	24614 <g_strcmp0@plt+0xd9dc>
   24740:	bl	164ac <__stack_chk_fail@plt>
   24744:	andeq	ip, r3, r0, asr lr
   24748:	andeq	ip, r2, r0, rrx
   2474c:	andeq	ip, r2, r8, lsl #1
   24750:	muleq	r2, r8, r0
   24754:	andeq	r6, r1, r8, ror #18
   24758:	andeq	r7, r2, r8, ror #22
   2475c:			; <UNDEFINED> instruction: 0x0002bdbc
   24760:	andeq	ip, r2, r8, lsr #1
   24764:			; <UNDEFINED> instruction: 0x000266b0
   24768:	strheq	ip, [r2], -r8
   2476c:	andeq	r4, r2, r0, asr r3
   24770:	andeq	ip, r2, r4, lsl #16
   24774:	andeq	ip, r2, r0, asr r5
   24778:	muleq	r2, r4, r7
   2477c:	andeq	r6, r2, r4, ror #9
   24780:	andeq	r6, r2, r0, ror #4
   24784:	strdeq	ip, [r2], -r4
   24788:	ldrdeq	ip, [r2], -r0
   2478c:	andeq	r6, r2, r0, lsr r5
   24790:	push	{lr}		; (str lr, [sp, #-4]!)
   24794:	sub	sp, sp, #12
   24798:	mov	ip, #0
   2479c:	str	ip, [sp]
   247a0:	bl	243c0 <g_strcmp0@plt+0xd788>
   247a4:	add	sp, sp, #12
   247a8:	pop	{pc}		; (ldr pc, [sp], #4)
   247ac:	push	{lr}		; (str lr, [sp, #-4]!)
   247b0:	sub	sp, sp, #12
   247b4:	mov	ip, #0
   247b8:	mov	r3, r2
   247bc:	str	ip, [sp]
   247c0:	mov	r2, r1
   247c4:	mov	r1, r0
   247c8:	mov	r0, ip
   247cc:	bl	243c0 <g_strcmp0@plt+0xd788>
   247d0:	add	sp, sp, #12
   247d4:	pop	{pc}		; (ldr pc, [sp], #4)
   247d8:	push	{r4, lr}
   247dc:	sub	sp, sp, #16
   247e0:	bl	16440 <gtk_image_get_type@plt>
   247e4:	mov	r4, r0
   247e8:	ldr	r0, [pc, #48]	; 24820 <g_strcmp0@plt+0xdbe8>
   247ec:	bl	16410 <g_intern_static_string@plt>
   247f0:	ldr	r1, [pc, #44]	; 24824 <g_strcmp0@plt+0xdbec>
   247f4:	mov	r2, #0
   247f8:	mov	r3, #48	; 0x30
   247fc:	stmib	sp, {r1, r2}
   24800:	str	r3, [sp]
   24804:	mov	r2, #444	; 0x1bc
   24808:	ldr	r3, [pc, #24]	; 24828 <g_strcmp0@plt+0xdbf0>
   2480c:	mov	r1, r0
   24810:	mov	r0, r4
   24814:	bl	15bb8 <g_type_register_static_simple@plt>
   24818:	add	sp, sp, #16
   2481c:	pop	{r4, pc}
   24820:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   24824:	muleq	r2, r8, r9
   24828:	andeq	r4, r2, ip, lsr #16
   2482c:	push	{r4, r5, r6, lr}
   24830:	mov	r5, r0
   24834:	ldr	r4, [pc, #68]	; 24880 <g_strcmp0@plt+0xdc48>
   24838:	bl	169a4 <g_type_class_peek_parent@plt>
   2483c:	ldr	r3, [r4]
   24840:	cmp	r3, #0
   24844:	bne	24870 <g_strcmp0@plt+0xdc38>
   24848:	bl	15d14 <gtk_widget_get_type@plt>
   2484c:	mov	r1, r0
   24850:	mov	r0, r5
   24854:	bl	16b48 <g_type_check_class_cast@plt>
   24858:	ldr	r3, [pc, #36]	; 24884 <g_strcmp0@plt+0xdc4c>
   2485c:	str	r3, [r0, #76]	; 0x4c
   24860:	mov	r0, r5
   24864:	bl	169a4 <g_type_class_peek_parent@plt>
   24868:	str	r0, [r4, #4]
   2486c:	pop	{r4, r5, r6, pc}
   24870:	mov	r1, r4
   24874:	mov	r0, r5
   24878:	bl	15c0c <g_type_class_adjust_private_offset@plt>
   2487c:	b	24848 <g_strcmp0@plt+0xdc10>
   24880:	andeq	sp, r3, r8, ror #13
   24884:	andeq	r4, r2, r8, lsr #22
   24888:	ldr	r1, [pc, #164]	; 24934 <g_strcmp0@plt+0xdcfc>
   2488c:	ldr	r3, [pc, #164]	; 24938 <g_strcmp0@plt+0xdd00>
   24890:	push	{r4, r5, r6, lr}
   24894:	mov	r4, r0
   24898:	ldr	r2, [r1, #8]
   2489c:	add	r0, r2, #1
   248a0:	umull	ip, r3, r3, r2
   248a4:	str	r0, [r1, #8]
   248a8:	lsr	r3, r3, #4
   248ac:	add	r3, r3, r3, lsl #2
   248b0:	cmp	r2, r3, lsl #2
   248b4:	beq	248fc <g_strcmp0@plt+0xdcc4>
   248b8:	ldr	r5, [r4, #44]	; 0x2c
   248bc:	cmp	r5, #0
   248c0:	beq	24918 <g_strcmp0@plt+0xdce0>
   248c4:	bl	16440 <gtk_image_get_type@plt>
   248c8:	mov	r1, r0
   248cc:	mov	r0, r4
   248d0:	bl	15d68 <g_type_check_instance_cast@plt>
   248d4:	ldr	r2, [r4, #32]
   248d8:	ldr	r3, [r4, #44]	; 0x2c
   248dc:	ldr	r1, [r3, r2, lsl #2]
   248e0:	bl	160d4 <gtk_image_set_from_pixbuf@plt>
   248e4:	ldrd	r0, [r4, #32]
   248e8:	add	r0, r0, #1
   248ec:	bl	25f28 <g_strcmp0@plt+0xf2f0>
   248f0:	mov	r0, #1
   248f4:	str	r1, [r4, #32]
   248f8:	pop	{r4, r5, r6, pc}
   248fc:	ldr	r2, [pc, #56]	; 2493c <g_strcmp0@plt+0xdd04>
   24900:	mov	r1, #128	; 0x80
   24904:	ldr	r0, [pc, #52]	; 24940 <g_strcmp0@plt+0xdd08>
   24908:	bl	15dec <g_log@plt>
   2490c:	ldr	r5, [r4, #44]	; 0x2c
   24910:	cmp	r5, #0
   24914:	bne	248c4 <g_strcmp0@plt+0xdc8c>
   24918:	ldr	r2, [pc, #36]	; 24944 <g_strcmp0@plt+0xdd0c>
   2491c:	mov	r1, #16
   24920:	ldr	r0, [pc, #24]	; 24940 <g_strcmp0@plt+0xdd08>
   24924:	bl	15dec <g_log@plt>
   24928:	str	r5, [r4, #28]
   2492c:	mov	r0, r5
   24930:	pop	{r4, r5, r6, pc}
   24934:	andeq	sp, r3, r8, ror #13
   24938:	stclgt	12, cr12, [ip], {205}	; 0xcd
   2493c:	andeq	ip, r2, ip, ror #17
   24940:	andeq	r6, r2, r0, ror #4
   24944:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   24948:	push	{r4, lr}
   2494c:	mcr	15, 0, r0, cr7, cr10, {5}
   24950:	ldr	r4, [pc, #60]	; 24994 <g_strcmp0@plt+0xdd5c>
   24954:	ldr	r3, [r4, #12]
   24958:	mcr	15, 0, r0, cr7, cr10, {5}
   2495c:	cmp	r3, #0
   24960:	beq	2496c <g_strcmp0@plt+0xdd34>
   24964:	ldr	r0, [r4, #12]
   24968:	pop	{r4, pc}
   2496c:	add	r0, r4, #12
   24970:	bl	16320 <g_once_init_enter@plt>
   24974:	cmp	r0, #0
   24978:	beq	24964 <g_strcmp0@plt+0xdd2c>
   2497c:	bl	247d8 <g_strcmp0@plt+0xdba0>
   24980:	mov	r1, r0
   24984:	add	r0, r4, #12
   24988:	bl	168c0 <g_once_init_leave@plt>
   2498c:	ldr	r0, [r4, #12]
   24990:	pop	{r4, pc}
   24994:	andeq	sp, r3, r8, ror #13
   24998:	push	{r4, r5, lr}
   2499c:	mov	r4, r0
   249a0:	sub	sp, sp, #12
   249a4:	bl	24948 <g_strcmp0@plt+0xdd10>
   249a8:	cmp	r4, #0
   249ac:	beq	24a2c <g_strcmp0@plt+0xddf4>
   249b0:	ldr	r3, [r4]
   249b4:	cmp	r3, #0
   249b8:	beq	249c8 <g_strcmp0@plt+0xdd90>
   249bc:	ldr	r3, [r3]
   249c0:	cmp	r3, r0
   249c4:	beq	249dc <g_strcmp0@plt+0xdda4>
   249c8:	mov	r1, r0
   249cc:	mov	r0, r4
   249d0:	bl	166d4 <g_type_check_instance_is_a@plt>
   249d4:	cmp	r0, #0
   249d8:	beq	24a2c <g_strcmp0@plt+0xddf4>
   249dc:	mov	r5, #0
   249e0:	mov	r3, #200	; 0xc8
   249e4:	str	r3, [r4, #40]	; 0x28
   249e8:	str	r5, [r4, #44]	; 0x2c
   249ec:	str	r5, [r4, #24]
   249f0:	str	r5, [r4, #28]
   249f4:	str	r5, [r4, #32]
   249f8:	str	r5, [r4, #36]	; 0x24
   249fc:	bl	15d14 <gtk_widget_get_type@plt>
   24a00:	mov	r1, r0
   24a04:	mov	r0, r4
   24a08:	bl	15d68 <g_type_check_instance_cast@plt>
   24a0c:	str	r5, [sp, #4]
   24a10:	str	r5, [sp]
   24a14:	mov	r3, r4
   24a18:	ldr	r2, [pc, #36]	; 24a44 <g_strcmp0@plt+0xde0c>
   24a1c:	ldr	r1, [pc, #36]	; 24a48 <g_strcmp0@plt+0xde10>
   24a20:	bl	16314 <g_signal_connect_data@plt>
   24a24:	add	sp, sp, #12
   24a28:	pop	{r4, r5, pc}
   24a2c:	ldr	r2, [pc, #24]	; 24a4c <g_strcmp0@plt+0xde14>
   24a30:	ldr	r1, [pc, #24]	; 24a50 <g_strcmp0@plt+0xde18>
   24a34:	ldr	r0, [pc, #24]	; 24a54 <g_strcmp0@plt+0xde1c>
   24a38:	add	sp, sp, #12
   24a3c:	pop	{r4, r5, lr}
   24a40:	b	15bac <g_return_if_fail_warning@plt>
   24a44:	andeq	r4, r2, r8, ror #26
   24a48:	andeq	ip, r2, r0, lsr r9
   24a4c:	andeq	ip, r2, r4, lsl r9
   24a50:	andeq	ip, r2, r8, lsl r8
   24a54:	andeq	r6, r2, r0, ror #4
   24a58:	push	{r4, r5, r6, lr}
   24a5c:	mov	r5, r0
   24a60:	bl	24948 <g_strcmp0@plt+0xdd10>
   24a64:	cmp	r5, #0
   24a68:	beq	24ae8 <g_strcmp0@plt+0xdeb0>
   24a6c:	ldr	r3, [r5]
   24a70:	cmp	r3, #0
   24a74:	beq	24a84 <g_strcmp0@plt+0xde4c>
   24a78:	ldr	r3, [r3]
   24a7c:	cmp	r3, r0
   24a80:	beq	24a98 <g_strcmp0@plt+0xde60>
   24a84:	mov	r1, r0
   24a88:	mov	r0, r5
   24a8c:	bl	166d4 <g_type_check_instance_is_a@plt>
   24a90:	cmp	r0, #0
   24a94:	beq	24ae8 <g_strcmp0@plt+0xdeb0>
   24a98:	ldr	r6, [r5, #44]	; 0x2c
   24a9c:	cmp	r6, #0
   24aa0:	beq	24b00 <g_strcmp0@plt+0xdec8>
   24aa4:	ldr	r3, [r5, #36]	; 0x24
   24aa8:	cmp	r3, #0
   24aac:	movne	r4, #0
   24ab0:	beq	24ad0 <g_strcmp0@plt+0xde98>
   24ab4:	ldr	r0, [r6, r4, lsl #2]
   24ab8:	bl	16878 <g_object_unref@plt>
   24abc:	ldr	r3, [r5, #36]	; 0x24
   24ac0:	add	r4, r4, #1
   24ac4:	cmp	r4, r3
   24ac8:	ldr	r6, [r5, #44]	; 0x2c
   24acc:	bcc	24ab4 <g_strcmp0@plt+0xde7c>
   24ad0:	mov	r0, r6
   24ad4:	bl	16518 <g_free@plt>
   24ad8:	mov	r3, #0
   24adc:	mov	r0, #1
   24ae0:	str	r3, [r5, #44]	; 0x2c
   24ae4:	pop	{r4, r5, r6, pc}
   24ae8:	ldr	r2, [pc, #40]	; 24b18 <g_strcmp0@plt+0xdee0>
   24aec:	ldr	r1, [pc, #40]	; 24b1c <g_strcmp0@plt+0xdee4>
   24af0:	ldr	r0, [pc, #40]	; 24b20 <g_strcmp0@plt+0xdee8>
   24af4:	bl	15bac <g_return_if_fail_warning@plt>
   24af8:	mov	r0, #0
   24afc:	pop	{r4, r5, r6, pc}
   24b00:	ldr	r2, [pc, #28]	; 24b24 <g_strcmp0@plt+0xdeec>
   24b04:	mov	r1, #128	; 0x80
   24b08:	ldr	r0, [pc, #16]	; 24b20 <g_strcmp0@plt+0xdee8>
   24b0c:	bl	15dec <g_log@plt>
   24b10:	mov	r0, r6
   24b14:	pop	{r4, r5, r6, pc}
   24b18:	andeq	ip, r2, r4, lsl r9
   24b1c:	andeq	ip, r2, r0, lsr r8
   24b20:	andeq	r6, r2, r0, ror #4
   24b24:	andeq	ip, r2, r0, asr #18
   24b28:	push	{r4, r5, r6, lr}
   24b2c:	mov	r5, r0
   24b30:	bl	24948 <g_strcmp0@plt+0xdd10>
   24b34:	mov	r1, r0
   24b38:	mov	r0, r5
   24b3c:	bl	15d68 <g_type_check_instance_cast@plt>
   24b40:	mov	r4, r0
   24b44:	ldr	r0, [r0, #28]
   24b48:	cmp	r0, #0
   24b4c:	bne	24b90 <g_strcmp0@plt+0xdf58>
   24b50:	ldr	r0, [r4, #24]
   24b54:	bl	16518 <g_free@plt>
   24b58:	mov	r3, #0
   24b5c:	str	r3, [r4, #24]
   24b60:	mov	r0, r4
   24b64:	bl	24a58 <g_strcmp0@plt+0xde20>
   24b68:	ldr	r3, [pc, #40]	; 24b98 <g_strcmp0@plt+0xdf60>
   24b6c:	ldr	r4, [r3, #4]
   24b70:	bl	15d14 <gtk_widget_get_type@plt>
   24b74:	mov	r1, r0
   24b78:	mov	r0, r4
   24b7c:	bl	16b48 <g_type_check_class_cast@plt>
   24b80:	ldr	r3, [r0, #76]	; 0x4c
   24b84:	mov	r0, r5
   24b88:	pop	{r4, r5, r6, lr}
   24b8c:	bx	r3
   24b90:	bl	16c14 <g_source_remove@plt>
   24b94:	b	24b50 <g_strcmp0@plt+0xdf18>
   24b98:	andeq	sp, r3, r8, ror #13
   24b9c:	push	{r4, r5, r6, lr}
   24ba0:	mov	r4, r0
   24ba4:	mov	r5, r1
   24ba8:	bl	24948 <g_strcmp0@plt+0xdd10>
   24bac:	cmp	r4, #0
   24bb0:	beq	24c0c <g_strcmp0@plt+0xdfd4>
   24bb4:	ldr	r3, [r4]
   24bb8:	cmp	r3, #0
   24bbc:	beq	24bcc <g_strcmp0@plt+0xdf94>
   24bc0:	ldr	r3, [r3]
   24bc4:	cmp	r3, r0
   24bc8:	beq	24be0 <g_strcmp0@plt+0xdfa8>
   24bcc:	mov	r1, r0
   24bd0:	mov	r0, r4
   24bd4:	bl	166d4 <g_type_check_instance_is_a@plt>
   24bd8:	cmp	r0, #0
   24bdc:	beq	24c0c <g_strcmp0@plt+0xdfd4>
   24be0:	ldr	r0, [pc, #100]	; 24c4c <g_strcmp0@plt+0xe014>
   24be4:	mov	r3, r5
   24be8:	ldr	r2, [pc, #96]	; 24c50 <g_strcmp0@plt+0xe018>
   24bec:	mov	r1, #128	; 0x80
   24bf0:	bl	15dec <g_log@plt>
   24bf4:	ldr	r0, [r4, #28]
   24bf8:	str	r5, [r4, #40]	; 0x28
   24bfc:	cmp	r0, #0
   24c00:	bne	24c24 <g_strcmp0@plt+0xdfec>
   24c04:	mov	r0, #1
   24c08:	pop	{r4, r5, r6, pc}
   24c0c:	ldr	r2, [pc, #64]	; 24c54 <g_strcmp0@plt+0xe01c>
   24c10:	ldr	r1, [pc, #64]	; 24c58 <g_strcmp0@plt+0xe020>
   24c14:	ldr	r0, [pc, #48]	; 24c4c <g_strcmp0@plt+0xe014>
   24c18:	bl	15bac <g_return_if_fail_warning@plt>
   24c1c:	mov	r0, #0
   24c20:	pop	{r4, r5, r6, pc}
   24c24:	bl	16c14 <g_source_remove@plt>
   24c28:	mov	r2, r4
   24c2c:	ldr	r1, [pc, #40]	; 24c5c <g_strcmp0@plt+0xe024>
   24c30:	ldr	r0, [r4, #40]	; 0x28
   24c34:	bl	15c18 <g_timeout_add@plt>
   24c38:	ldr	r1, [pc, #32]	; 24c60 <g_strcmp0@plt+0xe028>
   24c3c:	str	r0, [r4, #28]
   24c40:	bl	1692c <g_source_set_name_by_id@plt>
   24c44:	mov	r0, #1
   24c48:	pop	{r4, r5, r6, pc}
   24c4c:	andeq	r6, r2, r0, ror #4
   24c50:	andeq	ip, r2, r0, asr r9
   24c54:	andeq	ip, r2, r4, lsl r9
   24c58:	andeq	ip, r2, r0, asr r8
   24c5c:	andeq	r4, r2, r8, lsl #17
   24c60:	andeq	ip, r2, r8, ror #18
   24c64:	push	{r4, r5, r6, lr}
   24c68:	mov	r4, r0
   24c6c:	mov	r5, r1
   24c70:	bl	24948 <g_strcmp0@plt+0xdd10>
   24c74:	cmp	r4, #0
   24c78:	beq	24cd4 <g_strcmp0@plt+0xe09c>
   24c7c:	ldr	r3, [r4]
   24c80:	cmp	r3, #0
   24c84:	beq	24c94 <g_strcmp0@plt+0xe05c>
   24c88:	ldr	r3, [r3]
   24c8c:	cmp	r3, r0
   24c90:	beq	24ca8 <g_strcmp0@plt+0xe070>
   24c94:	mov	r1, r0
   24c98:	mov	r0, r4
   24c9c:	bl	166d4 <g_type_check_instance_is_a@plt>
   24ca0:	cmp	r0, #0
   24ca4:	beq	24cd4 <g_strcmp0@plt+0xe09c>
   24ca8:	cmp	r5, #0
   24cac:	ldr	r0, [r4, #28]
   24cb0:	bne	24cec <g_strcmp0@plt+0xe0b4>
   24cb4:	cmp	r0, #0
   24cb8:	bne	24d24 <g_strcmp0@plt+0xe0ec>
   24cbc:	ldr	r2, [pc, #136]	; 24d4c <g_strcmp0@plt+0xe114>
   24cc0:	mov	r1, #128	; 0x80
   24cc4:	ldr	r0, [pc, #132]	; 24d50 <g_strcmp0@plt+0xe118>
   24cc8:	bl	15dec <g_log@plt>
   24ccc:	mov	r0, r5
   24cd0:	pop	{r4, r5, r6, pc}
   24cd4:	ldr	r2, [pc, #120]	; 24d54 <g_strcmp0@plt+0xe11c>
   24cd8:	ldr	r1, [pc, #120]	; 24d58 <g_strcmp0@plt+0xe120>
   24cdc:	ldr	r0, [pc, #108]	; 24d50 <g_strcmp0@plt+0xe118>
   24ce0:	bl	15bac <g_return_if_fail_warning@plt>
   24ce4:	mov	r0, #0
   24ce8:	pop	{r4, r5, r6, pc}
   24cec:	cmp	r0, #0
   24cf0:	bne	24d34 <g_strcmp0@plt+0xe0fc>
   24cf4:	mov	r2, r4
   24cf8:	str	r0, [r4, #32]
   24cfc:	ldr	r1, [pc, #88]	; 24d5c <g_strcmp0@plt+0xe124>
   24d00:	ldr	r0, [r4, #40]	; 0x28
   24d04:	bl	15c18 <g_timeout_add@plt>
   24d08:	ldr	r1, [pc, #80]	; 24d60 <g_strcmp0@plt+0xe128>
   24d0c:	str	r0, [r4, #28]
   24d10:	bl	1692c <g_source_set_name_by_id@plt>
   24d14:	mov	r0, r4
   24d18:	bl	24888 <g_strcmp0@plt+0xdc50>
   24d1c:	mov	r0, #1
   24d20:	pop	{r4, r5, r6, pc}
   24d24:	bl	16c14 <g_source_remove@plt>
   24d28:	str	r5, [r4, #28]
   24d2c:	mov	r0, #1
   24d30:	pop	{r4, r5, r6, pc}
   24d34:	ldr	r2, [pc, #40]	; 24d64 <g_strcmp0@plt+0xe12c>
   24d38:	mov	r1, #128	; 0x80
   24d3c:	ldr	r0, [pc, #12]	; 24d50 <g_strcmp0@plt+0xe118>
   24d40:	bl	15dec <g_log@plt>
   24d44:	mov	r0, #0
   24d48:	pop	{r4, r5, r6, pc}
   24d4c:	muleq	r2, r4, r9
   24d50:	andeq	r6, r2, r0, ror #4
   24d54:	andeq	ip, r2, r4, lsl r9
   24d58:	andeq	ip, r2, r4, ror r8
   24d5c:	andeq	r4, r2, r8, lsl #17
   24d60:	ldrdeq	ip, [r2], -r4
   24d64:			; <UNDEFINED> instruction: 0x0002c9b4
   24d68:	push	{r4, r5, r6, lr}
   24d6c:	sub	sp, sp, #8
   24d70:	ldr	r4, [pc, #108]	; 24de4 <g_strcmp0@plt+0xe1ac>
   24d74:	mov	r6, r2
   24d78:	mov	r3, #0
   24d7c:	ldr	ip, [r4]
   24d80:	mov	r2, sp
   24d84:	ldr	r1, [pc, #92]	; 24de8 <g_strcmp0@plt+0xe1b0>
   24d88:	str	ip, [sp, #4]
   24d8c:	bl	165cc <g_object_get@plt>
   24d90:	ldr	r5, [sp]
   24d94:	cmp	r5, #0
   24d98:	bne	24da8 <g_strcmp0@plt+0xe170>
   24d9c:	ldr	r3, [r6, #28]
   24da0:	cmp	r3, #0
   24da4:	bne	24dc0 <g_strcmp0@plt+0xe188>
   24da8:	ldr	r2, [sp, #4]
   24dac:	ldr	r3, [r4]
   24db0:	cmp	r2, r3
   24db4:	bne	24de0 <g_strcmp0@plt+0xe1a8>
   24db8:	add	sp, sp, #8
   24dbc:	pop	{r4, r5, r6, pc}
   24dc0:	ldr	r2, [pc, #36]	; 24dec <g_strcmp0@plt+0xe1b4>
   24dc4:	mov	r1, #128	; 0x80
   24dc8:	ldr	r0, [pc, #32]	; 24df0 <g_strcmp0@plt+0xe1b8>
   24dcc:	bl	15dec <g_log@plt>
   24dd0:	mov	r1, r5
   24dd4:	mov	r0, r6
   24dd8:	bl	24c64 <g_strcmp0@plt+0xe02c>
   24ddc:	b	24da8 <g_strcmp0@plt+0xe170>
   24de0:	bl	164ac <__stack_chk_fail@plt>
   24de4:	andeq	ip, r3, r0, asr lr
   24de8:	andeq	ip, r2, r8, lsr r9
   24dec:	strdeq	ip, [r2], -r4
   24df0:	andeq	r6, r2, r0, ror #4
   24df4:	push	{r4, r5, r6, lr}
   24df8:	mov	r5, r0
   24dfc:	mov	r6, r1
   24e00:	mov	r4, r2
   24e04:	bl	24948 <g_strcmp0@plt+0xdd10>
   24e08:	cmp	r5, #0
   24e0c:	beq	24e74 <g_strcmp0@plt+0xe23c>
   24e10:	ldr	r3, [r5]
   24e14:	cmp	r3, #0
   24e18:	beq	24e28 <g_strcmp0@plt+0xe1f0>
   24e1c:	ldr	r3, [r3]
   24e20:	cmp	r3, r0
   24e24:	beq	24e3c <g_strcmp0@plt+0xe204>
   24e28:	mov	r1, r0
   24e2c:	mov	r0, r5
   24e30:	bl	166d4 <g_type_check_instance_is_a@plt>
   24e34:	cmp	r0, #0
   24e38:	beq	24e74 <g_strcmp0@plt+0xe23c>
   24e3c:	cmp	r4, #0
   24e40:	beq	24e8c <g_strcmp0@plt+0xe254>
   24e44:	mov	r1, #0
   24e48:	mov	r0, r5
   24e4c:	bl	24c64 <g_strcmp0@plt+0xe02c>
   24e50:	bl	16440 <gtk_image_get_type@plt>
   24e54:	mov	r1, r0
   24e58:	mov	r0, r5
   24e5c:	bl	15d68 <g_type_check_instance_cast@plt>
   24e60:	mov	r2, r6
   24e64:	mov	r1, r4
   24e68:	bl	16a40 <gtk_image_set_from_icon_name@plt>
   24e6c:	mov	r0, #1
   24e70:	pop	{r4, r5, r6, pc}
   24e74:	ldr	r2, [pc, #40]	; 24ea4 <g_strcmp0@plt+0xe26c>
   24e78:	ldr	r1, [pc, #40]	; 24ea8 <g_strcmp0@plt+0xe270>
   24e7c:	ldr	r0, [pc, #40]	; 24eac <g_strcmp0@plt+0xe274>
   24e80:	bl	15bac <g_return_if_fail_warning@plt>
   24e84:	mov	r0, #0
   24e88:	pop	{r4, r5, r6, pc}
   24e8c:	ldr	r2, [pc, #28]	; 24eb0 <g_strcmp0@plt+0xe278>
   24e90:	ldr	r1, [pc, #16]	; 24ea8 <g_strcmp0@plt+0xe270>
   24e94:	ldr	r0, [pc, #16]	; 24eac <g_strcmp0@plt+0xe274>
   24e98:	bl	15bac <g_return_if_fail_warning@plt>
   24e9c:	mov	r0, r4
   24ea0:	pop	{r4, r5, r6, pc}
   24ea4:	andeq	ip, r2, r4, lsl r9
   24ea8:	muleq	r2, r8, r8
   24eac:	andeq	r6, r2, r0, ror #4
   24eb0:	andeq	ip, r2, r4, lsl sl
   24eb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24eb8:	sub	sp, sp, #36	; 0x24
   24ebc:	ldr	fp, [pc, #704]	; 25184 <g_strcmp0@plt+0xe54c>
   24ec0:	mov	r7, r0
   24ec4:	mov	r5, r1
   24ec8:	ldr	r3, [fp]
   24ecc:	mov	r4, r2
   24ed0:	str	r3, [sp, #28]
   24ed4:	bl	24948 <g_strcmp0@plt+0xdd10>
   24ed8:	cmp	r7, #0
   24edc:	beq	24fe4 <g_strcmp0@plt+0xe3ac>
   24ee0:	ldr	r3, [r7]
   24ee4:	cmp	r3, #0
   24ee8:	beq	24ef8 <g_strcmp0@plt+0xe2c0>
   24eec:	ldr	r3, [r3]
   24ef0:	cmp	r3, r0
   24ef4:	beq	24f0c <g_strcmp0@plt+0xe2d4>
   24ef8:	mov	r1, r0
   24efc:	mov	r0, r7
   24f00:	bl	166d4 <g_type_check_instance_is_a@plt>
   24f04:	cmp	r0, #0
   24f08:	beq	24fe4 <g_strcmp0@plt+0xe3ac>
   24f0c:	cmp	r4, #0
   24f10:	beq	2502c <g_strcmp0@plt+0xe3f4>
   24f14:	mov	r1, r4
   24f18:	ldr	r0, [r7, #24]
   24f1c:	bl	16c38 <g_strcmp0@plt>
   24f20:	subs	r8, r0, #0
   24f24:	beq	25014 <g_strcmp0@plt+0xe3dc>
   24f28:	mov	r1, #0
   24f2c:	mov	r0, r7
   24f30:	bl	24c64 <g_strcmp0@plt+0xe02c>
   24f34:	ldr	r0, [r7, #24]
   24f38:	bl	16518 <g_free@plt>
   24f3c:	mov	r0, r4
   24f40:	bl	15fe4 <g_strdup@plt>
   24f44:	ldr	r3, [r7, #44]	; 0x2c
   24f48:	cmp	r3, #0
   24f4c:	str	r0, [r7, #24]
   24f50:	beq	24f5c <g_strcmp0@plt+0xe324>
   24f54:	mov	r0, r7
   24f58:	bl	24a58 <g_strcmp0@plt+0xde20>
   24f5c:	mov	r3, r4
   24f60:	ldr	r2, [pc, #544]	; 25188 <g_strcmp0@plt+0xe550>
   24f64:	mov	r1, #128	; 0x80
   24f68:	ldr	r0, [pc, #540]	; 2518c <g_strcmp0@plt+0xe554>
   24f6c:	bl	15dec <g_log@plt>
   24f70:	mov	r0, r5
   24f74:	add	r2, sp, #24
   24f78:	add	r1, sp, #20
   24f7c:	bl	168cc <gtk_icon_size_lookup@plt>
   24f80:	subs	r8, r0, #0
   24f84:	beq	25044 <g_strcmp0@plt+0xe40c>
   24f88:	bl	16a7c <gtk_icon_theme_get_default@plt>
   24f8c:	mov	r3, #0
   24f90:	str	r3, [sp]
   24f94:	ldr	r2, [sp, #20]
   24f98:	mov	r1, r4
   24f9c:	bl	1611c <gtk_icon_theme_load_icon@plt>
   24fa0:	subs	r8, r0, #0
   24fa4:	beq	25168 <g_strcmp0@plt+0xe530>
   24fa8:	mov	r0, r4
   24fac:	ldr	r1, [pc, #476]	; 25190 <g_strcmp0@plt+0xe558>
   24fb0:	bl	16c38 <g_strcmp0@plt>
   24fb4:	cmp	r0, #0
   24fb8:	beq	2512c <g_strcmp0@plt+0xe4f4>
   24fbc:	ldr	r3, [sp, #20]
   24fc0:	mov	r0, r8
   24fc4:	cmp	r3, #0
   24fc8:	beq	24fd8 <g_strcmp0@plt+0xe3a0>
   24fcc:	ldr	r3, [sp, #24]
   24fd0:	cmp	r3, #0
   24fd4:	bne	25058 <g_strcmp0@plt+0xe420>
   24fd8:	bl	16878 <g_object_unref@plt>
   24fdc:	mov	r8, #0
   24fe0:	b	24ff8 <g_strcmp0@plt+0xe3c0>
   24fe4:	ldr	r2, [pc, #424]	; 25194 <g_strcmp0@plt+0xe55c>
   24fe8:	ldr	r1, [pc, #424]	; 25198 <g_strcmp0@plt+0xe560>
   24fec:	ldr	r0, [pc, #408]	; 2518c <g_strcmp0@plt+0xe554>
   24ff0:	bl	15bac <g_return_if_fail_warning@plt>
   24ff4:	mov	r8, #0
   24ff8:	ldr	r2, [sp, #28]
   24ffc:	ldr	r3, [fp]
   25000:	mov	r0, r8
   25004:	cmp	r2, r3
   25008:	bne	25180 <g_strcmp0@plt+0xe548>
   2500c:	add	sp, sp, #36	; 0x24
   25010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25014:	mov	r3, r4
   25018:	ldr	r2, [pc, #380]	; 2519c <g_strcmp0@plt+0xe564>
   2501c:	mov	r1, #128	; 0x80
   25020:	ldr	r0, [pc, #356]	; 2518c <g_strcmp0@plt+0xe554>
   25024:	bl	15dec <g_log@plt>
   25028:	b	24ff8 <g_strcmp0@plt+0xe3c0>
   2502c:	ldr	r2, [pc, #364]	; 251a0 <g_strcmp0@plt+0xe568>
   25030:	ldr	r1, [pc, #352]	; 25198 <g_strcmp0@plt+0xe560>
   25034:	ldr	r0, [pc, #336]	; 2518c <g_strcmp0@plt+0xe554>
   25038:	mov	r8, r4
   2503c:	bl	15bac <g_return_if_fail_warning@plt>
   25040:	b	24ff8 <g_strcmp0@plt+0xe3c0>
   25044:	ldr	r2, [pc, #344]	; 251a4 <g_strcmp0@plt+0xe56c>
   25048:	mov	r1, #16
   2504c:	ldr	r0, [pc, #312]	; 2518c <g_strcmp0@plt+0xe554>
   25050:	bl	15dec <g_log@plt>
   25054:	b	24ff8 <g_strcmp0@plt+0xe3c0>
   25058:	bl	16230 <gdk_pixbuf_get_width@plt>
   2505c:	ldr	r1, [sp, #20]
   25060:	bl	25f48 <g_strcmp0@plt+0xf310>
   25064:	mov	r4, #0
   25068:	mov	sl, r0
   2506c:	mov	r0, r8
   25070:	bl	161a0 <gdk_pixbuf_get_height@plt>
   25074:	ldr	r1, [sp, #24]
   25078:	bl	25f48 <g_strcmp0@plt+0xf310>
   2507c:	str	r4, [r7, #32]
   25080:	mov	r1, #4
   25084:	mov	r5, r0
   25088:	str	r0, [sp, #12]
   2508c:	mul	r0, r0, sl
   25090:	str	r0, [r7, #36]	; 0x24
   25094:	bl	15ae0 <g_malloc_n@plt>
   25098:	cmp	r5, r4
   2509c:	strgt	r4, [sp, #8]
   250a0:	movgt	r9, r4
   250a4:	str	r0, [r7, #44]	; 0x2c
   250a8:	ble	25110 <g_strcmp0@plt+0xe4d8>
   250ac:	cmp	sl, #0
   250b0:	ble	25100 <g_strcmp0@plt+0xe4c8>
   250b4:	ldr	r3, [sp, #8]
   250b8:	mov	r4, #0
   250bc:	lsl	r5, r3, #2
   250c0:	ldr	r2, [sp, #24]
   250c4:	ldr	r3, [sp, #20]
   250c8:	str	r2, [sp]
   250cc:	mov	r0, r8
   250d0:	mul	r1, r4, r3
   250d4:	mul	r2, r9, r2
   250d8:	ldr	r6, [r7, #44]	; 0x2c
   250dc:	bl	15f84 <gdk_pixbuf_new_subpixbuf@plt>
   250e0:	add	r4, r4, #1
   250e4:	cmp	sl, r4
   250e8:	str	r0, [r6, r5]
   250ec:	add	r5, r5, #4
   250f0:	bne	250c0 <g_strcmp0@plt+0xe488>
   250f4:	ldr	r3, [sp, #8]
   250f8:	add	r3, sl, r3
   250fc:	str	r3, [sp, #8]
   25100:	ldr	r3, [sp, #12]
   25104:	add	r9, r9, #1
   25108:	cmp	r3, r9
   2510c:	bne	250ac <g_strcmp0@plt+0xe474>
   25110:	mov	r0, r8
   25114:	bl	16878 <g_object_unref@plt>
   25118:	mov	r0, r7
   2511c:	mov	r1, #1
   25120:	bl	24c64 <g_strcmp0@plt+0xe02c>
   25124:	mov	r8, #1
   25128:	b	24ff8 <g_strcmp0@plt+0xe3c0>
   2512c:	mov	r0, r8
   25130:	bl	16230 <gdk_pixbuf_get_width@plt>
   25134:	cmp	r0, #0
   25138:	add	r3, r0, #7
   2513c:	movge	r3, r0
   25140:	mov	r0, r8
   25144:	asr	r3, r3, #3
   25148:	str	r3, [sp, #20]
   2514c:	bl	161a0 <gdk_pixbuf_get_height@plt>
   25150:	add	r3, r0, #3
   25154:	cmp	r0, #0
   25158:	movlt	r0, r3
   2515c:	asr	r3, r0, #2
   25160:	str	r3, [sp, #24]
   25164:	b	24fbc <g_strcmp0@plt+0xe384>
   25168:	mov	r3, r4
   2516c:	ldr	r2, [pc, #52]	; 251a8 <g_strcmp0@plt+0xe570>
   25170:	mov	r1, #128	; 0x80
   25174:	ldr	r0, [pc, #16]	; 2518c <g_strcmp0@plt+0xe554>
   25178:	bl	15dec <g_log@plt>
   2517c:	b	24ff8 <g_strcmp0@plt+0xe3c0>
   25180:	bl	164ac <__stack_chk_fail@plt>
   25184:	andeq	ip, r3, r0, asr lr
   25188:	andeq	ip, r2, r0, asr sl
   2518c:	andeq	r6, r2, r0, ror #4
   25190:	andeq	fp, r2, r8, ror #13
   25194:	andeq	ip, r2, r4, lsl r9
   25198:			; <UNDEFINED> instruction: 0x0002c8b8
   2519c:	andeq	ip, r2, r4, lsr #20
   251a0:	andeq	ip, r2, r4, lsl sl
   251a4:	andeq	ip, r2, r0, ror #20
   251a8:	andeq	ip, r2, ip, ror sl
   251ac:	push	{r4, lr}
   251b0:	bl	24948 <g_strcmp0@plt+0xdd10>
   251b4:	mov	r1, #0
   251b8:	pop	{r4, lr}
   251bc:	b	15a8c <g_object_new@plt>
   251c0:	mov	r0, r1
   251c4:	b	16878 <g_object_unref@plt>
   251c8:	push	{r4, r5, r6, lr}
   251cc:	sub	sp, sp, #8
   251d0:	mov	r4, r0
   251d4:	bl	162a8 <gtk_tree_view_column_new@plt>
   251d8:	mov	r5, r0
   251dc:	bl	165b4 <gtk_cell_renderer_pixbuf_new@plt>
   251e0:	mov	r3, #0
   251e4:	mov	r2, #5
   251e8:	ldr	r1, [pc, #176]	; 252a0 <g_strcmp0@plt+0xe668>
   251ec:	mov	r6, r0
   251f0:	bl	16578 <g_object_set@plt>
   251f4:	mov	r1, r6
   251f8:	mov	r0, r5
   251fc:	mov	r2, #0
   25200:	bl	15c48 <gtk_tree_view_column_pack_start@plt>
   25204:	mov	r3, #0
   25208:	ldr	r2, [pc, #148]	; 252a4 <g_strcmp0@plt+0xe66c>
   2520c:	mov	r1, r6
   25210:	mov	r0, r5
   25214:	bl	169b0 <gtk_tree_view_column_add_attribute@plt>
   25218:	mov	r1, r5
   2521c:	mov	r0, r4
   25220:	bl	15af8 <gtk_tree_view_append_column@plt>
   25224:	bl	161e8 <gtk_cell_renderer_text_new@plt>
   25228:	mov	r5, #0
   2522c:	mov	r2, #5
   25230:	ldr	r1, [pc, #112]	; 252a8 <g_strcmp0@plt+0xe670>
   25234:	mov	r6, r0
   25238:	mov	r0, r5
   2523c:	bl	16530 <dcgettext@plt>
   25240:	mov	r3, #2
   25244:	ldr	r2, [pc, #96]	; 252ac <g_strcmp0@plt+0xe674>
   25248:	mov	r1, r6
   2524c:	str	r5, [sp]
   25250:	bl	15d74 <gtk_tree_view_column_new_with_attributes@plt>
   25254:	mov	r1, #2
   25258:	mov	r6, r0
   2525c:	bl	15f9c <gtk_tree_view_column_set_sort_column_id@plt>
   25260:	mov	r1, r6
   25264:	mov	r0, r4
   25268:	bl	15af8 <gtk_tree_view_append_column@plt>
   2526c:	mov	r1, r5
   25270:	mov	r0, r4
   25274:	bl	16aa0 <gtk_tree_view_set_headers_visible@plt>
   25278:	mov	r0, r4
   2527c:	bl	16614 <gtk_tree_view_get_selection@plt>
   25280:	mov	r1, r5
   25284:	mov	r4, r0
   25288:	bl	15f18 <gtk_tree_selection_set_mode@plt>
   2528c:	mov	r0, r4
   25290:	bl	168fc <gtk_tree_selection_unselect_all@plt>
   25294:	mov	r0, #1
   25298:	add	sp, sp, #8
   2529c:	pop	{r4, r5, r6, pc}
   252a0:	strdeq	r6, [r2], -r0
   252a4:	andeq	r7, r2, r4, lsl #17
   252a8:	muleq	r2, r4, sl
   252ac:	andeq	r6, r2, r0, asr #11
   252b0:	push	{r4, r5, r6, lr}
   252b4:	sub	sp, sp, #8
   252b8:	mov	r4, r1
   252bc:	mov	r5, r0
   252c0:	bl	15e7c <gtk_toggle_button_get_type@plt>
   252c4:	mov	r1, r0
   252c8:	mov	r0, r5
   252cc:	bl	15d68 <g_type_check_instance_cast@plt>
   252d0:	bl	16c2c <gtk_toggle_button_get_active@plt>
   252d4:	mov	r3, r4
   252d8:	ldr	r2, [pc, #60]	; 2531c <g_strcmp0@plt+0xe6e4>
   252dc:	mov	r1, #128	; 0x80
   252e0:	mov	r5, r0
   252e4:	str	r0, [sp]
   252e8:	ldr	r0, [pc, #48]	; 25320 <g_strcmp0@plt+0xe6e8>
   252ec:	bl	15dec <g_log@plt>
   252f0:	ldr	r0, [pc, #44]	; 25324 <g_strcmp0@plt+0xe6ec>
   252f4:	bl	15b64 <g_settings_new@plt>
   252f8:	clz	r2, r5
   252fc:	mov	r1, r4
   25300:	lsr	r2, r2, #5
   25304:	mov	r6, r0
   25308:	bl	16a4c <g_settings_set_boolean@plt>
   2530c:	mov	r0, r6
   25310:	add	sp, sp, #8
   25314:	pop	{r4, r5, r6, lr}
   25318:	b	16878 <g_object_unref@plt>
   2531c:	muleq	r2, ip, sl
   25320:	andeq	r6, r2, r0, ror #4
   25324:	andeq	r6, r2, r8, asr #8
   25328:	ldr	r2, [pc, #316]	; 2546c <g_strcmp0@plt+0xe834>
   2532c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25330:	mov	r3, #64	; 0x40
   25334:	sub	sp, sp, #60	; 0x3c
   25338:	ldr	ip, [r2]
   2533c:	mov	r4, #0
   25340:	mov	r8, r1
   25344:	mov	r2, r3
   25348:	mov	r1, r3
   2534c:	mov	r9, r0
   25350:	mov	r0, #3
   25354:	str	ip, [sp, #52]	; 0x34
   25358:	str	r4, [sp, #28]
   2535c:	str	r4, [sp, #32]
   25360:	bl	164d0 <gtk_list_store_new@plt>
   25364:	ldr	r3, [r8]
   25368:	cmp	r3, r4
   2536c:	mov	r6, r0
   25370:	beq	25448 <g_strcmp0@plt+0xe810>
   25374:	ldr	fp, [pc, #244]	; 25470 <g_strcmp0@plt+0xe838>
   25378:	ldr	r1, [r9]
   2537c:	mov	ip, #0
   25380:	ldr	r3, [pc, #236]	; 25474 <g_strcmp0@plt+0xe83c>
   25384:	ldr	r0, [r1, r4, lsl #2]
   25388:	str	ip, [sp, #12]
   2538c:	add	ip, sp, #32
   25390:	add	r2, sp, #24
   25394:	stmib	sp, {fp, ip}
   25398:	add	ip, sp, #28
   2539c:	str	ip, [sp]
   253a0:	ldr	r1, [pc, #208]	; 25478 <g_strcmp0@plt+0xe840>
   253a4:	bl	165cc <g_object_get@plt>
   253a8:	ldr	r2, [sp, #32]
   253ac:	ldr	r1, [sp, #28]
   253b0:	mov	r0, #0
   253b4:	bl	221e8 <g_strcmp0@plt+0xb5b0>
   253b8:	add	r4, r4, #1
   253bc:	mov	r5, r0
   253c0:	ldr	r0, [sp, #28]
   253c4:	bl	15d44 <pk_package_id_split@plt>
   253c8:	mov	r7, r0
   253cc:	ldr	r0, [sp, #24]
   253d0:	bl	21004 <g_strcmp0@plt+0xa3cc>
   253d4:	add	r1, sp, #36	; 0x24
   253d8:	mov	sl, r0
   253dc:	mov	r0, r6
   253e0:	bl	1662c <gtk_list_store_append@plt>
   253e4:	ldr	ip, [sp, #28]
   253e8:	mvn	r0, #0
   253ec:	mov	r1, #2
   253f0:	mov	r2, #1
   253f4:	mov	r3, sl
   253f8:	str	ip, [sp, #4]
   253fc:	str	r0, [sp, #16]
   25400:	str	r1, [sp, #8]
   25404:	str	r2, [sp]
   25408:	add	r1, sp, #36	; 0x24
   2540c:	mov	r2, #0
   25410:	mov	r0, r6
   25414:	str	r5, [sp, #12]
   25418:	bl	15bd0 <gtk_list_store_set@plt>
   2541c:	mov	r0, r7
   25420:	bl	1644c <g_strfreev@plt>
   25424:	ldr	r0, [sp, #28]
   25428:	bl	16518 <g_free@plt>
   2542c:	ldr	r0, [sp, #32]
   25430:	bl	16518 <g_free@plt>
   25434:	mov	r0, r5
   25438:	bl	16518 <g_free@plt>
   2543c:	ldr	r3, [r8]
   25440:	cmp	r4, r3
   25444:	bcc	25378 <g_strcmp0@plt+0xe740>
   25448:	ldr	r3, [pc, #28]	; 2546c <g_strcmp0@plt+0xe834>
   2544c:	ldr	r2, [sp, #52]	; 0x34
   25450:	mov	r0, r6
   25454:	ldr	r3, [r3]
   25458:	cmp	r2, r3
   2545c:	bne	25468 <g_strcmp0@plt+0xe830>
   25460:	add	sp, sp, #60	; 0x3c
   25464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25468:	bl	164ac <__stack_chk_fail@plt>
   2546c:	andeq	ip, r3, r0, asr lr
   25470:	andeq	r6, r2, r0, asr #16
   25474:	andeq	r6, r2, r4, lsr r8
   25478:	andeq	ip, r2, r4, ror sl
   2547c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25480:	mov	r4, r0
   25484:	bl	16464 <g_strv_length@plt>
   25488:	mov	r6, r0
   2548c:	ldr	r0, [pc, #192]	; 25554 <g_strcmp0@plt+0xe91c>
   25490:	bl	160c8 <g_ptr_array_new_with_free_func@plt>
   25494:	cmp	r6, #0
   25498:	mov	r7, r0
   2549c:	beq	25504 <g_strcmp0@plt+0xe8cc>
   254a0:	sub	r4, r4, #4
   254a4:	ldr	r9, [pc, #172]	; 25558 <g_strcmp0@plt+0xe920>
   254a8:	ldr	r8, [pc, #172]	; 2555c <g_strcmp0@plt+0xe924>
   254ac:	add	r6, r4, r6, lsl #2
   254b0:	b	254d8 <g_strcmp0@plt+0xe8a0>
   254b4:	ldr	r0, [r5]
   254b8:	bl	15fe4 <g_strdup@plt>
   254bc:	mov	r1, r0
   254c0:	mov	r0, r7
   254c4:	bl	16a10 <g_ptr_array_add@plt>
   254c8:	mov	r0, r5
   254cc:	bl	1644c <g_strfreev@plt>
   254d0:	cmp	r4, r6
   254d4:	beq	25504 <g_strcmp0@plt+0xe8cc>
   254d8:	ldr	r0, [r4, #4]!
   254dc:	bl	15d44 <pk_package_id_split@plt>
   254e0:	subs	r5, r0, #0
   254e4:	bne	254b4 <g_strcmp0@plt+0xe87c>
   254e8:	ldr	r3, [r4]
   254ec:	mov	r2, r9
   254f0:	mov	r1, #16
   254f4:	mov	r0, r8
   254f8:	bl	15dec <g_log@plt>
   254fc:	cmp	r4, r6
   25500:	bne	254d8 <g_strcmp0@plt+0xe8a0>
   25504:	mov	r0, r7
   25508:	bl	16200 <pk_ptr_array_to_strv@plt>
   2550c:	mov	r5, r0
   25510:	bl	22a54 <g_strcmp0@plt+0xbe1c>
   25514:	mov	r4, r0
   25518:	mov	r0, r5
   2551c:	bl	1644c <g_strfreev@plt>
   25520:	cmp	r4, #0
   25524:	beq	25538 <g_strcmp0@plt+0xe900>
   25528:	mov	r0, r7
   2552c:	bl	169c8 <g_ptr_array_unref@plt>
   25530:	mov	r0, r4
   25534:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25538:	mov	r0, r4
   2553c:	mov	r2, #5
   25540:	ldr	r1, [pc, #24]	; 25560 <g_strcmp0@plt+0xe928>
   25544:	bl	16530 <dcgettext@plt>
   25548:	bl	15fe4 <g_strdup@plt>
   2554c:	mov	r4, r0
   25550:	b	25528 <g_strcmp0@plt+0xe8f0>
   25554:	andeq	r6, r1, r8, lsl r5
   25558:			; <UNDEFINED> instruction: 0x0002cab0
   2555c:	andeq	r6, r2, r0, ror #4
   25560:	andeq	ip, r2, r4, asr #21
   25564:	push	{r4, r5, r6, r7, r8, r9, lr}
   25568:	mov	r5, r1
   2556c:	sub	sp, sp, #20
   25570:	add	r1, r1, #4
   25574:	mov	r9, r0
   25578:	mov	r0, r5
   2557c:	bl	25328 <g_strcmp0@plt+0xe6f0>
   25580:	mov	r8, r0
   25584:	bl	16620 <gtk_tree_model_get_type@plt>
   25588:	mov	r1, r0
   2558c:	mov	r0, r8
   25590:	bl	15d68 <g_type_check_instance_cast@plt>
   25594:	bl	169bc <gtk_tree_view_new_with_model@plt>
   25598:	mov	r7, r0
   2559c:	bl	164c4 <gtk_tree_view_get_type@plt>
   255a0:	mov	r1, r0
   255a4:	mov	r0, r7
   255a8:	bl	15d68 <g_type_check_instance_cast@plt>
   255ac:	bl	251c8 <g_strcmp0@plt+0xe590>
   255b0:	mov	r0, r7
   255b4:	bl	1686c <gtk_widget_show@plt>
   255b8:	mov	r1, #0
   255bc:	mov	r0, r1
   255c0:	bl	16158 <gtk_scrolled_window_new@plt>
   255c4:	mov	r4, r0
   255c8:	bl	169ec <gtk_scrolled_window_get_type@plt>
   255cc:	mov	r6, r0
   255d0:	mov	r1, r0
   255d4:	mov	r0, r4
   255d8:	bl	15d68 <g_type_check_instance_cast@plt>
   255dc:	mov	r2, #1
   255e0:	mov	r1, #2
   255e4:	bl	162d8 <gtk_scrolled_window_set_policy@plt>
   255e8:	mov	r1, r6
   255ec:	mov	r0, r4
   255f0:	bl	15d68 <g_type_check_instance_cast@plt>
   255f4:	mov	r1, #0
   255f8:	bl	1608c <gtk_scrolled_window_set_overlay_scrolling@plt>
   255fc:	bl	1605c <gtk_container_get_type@plt>
   25600:	mov	r1, r0
   25604:	mov	r6, r0
   25608:	mov	r0, r4
   2560c:	bl	15d68 <g_type_check_instance_cast@plt>
   25610:	mov	r1, r7
   25614:	bl	16248 <gtk_container_add@plt>
   25618:	mov	r0, r4
   2561c:	bl	1686c <gtk_widget_show@plt>
   25620:	mov	r1, r6
   25624:	mov	r0, r4
   25628:	bl	15d68 <g_type_check_instance_cast@plt>
   2562c:	mov	r1, #6
   25630:	bl	16098 <gtk_container_set_border_width@plt>
   25634:	ldr	r3, [r5, #4]
   25638:	cmp	r3, #5
   2563c:	bhi	256e0 <g_strcmp0@plt+0xeaa8>
   25640:	cmp	r3, #1
   25644:	bhi	256b4 <g_strcmp0@plt+0xea7c>
   25648:	bl	165e4 <gtk_dialog_get_type@plt>
   2564c:	mov	r5, #1
   25650:	mov	r1, r0
   25654:	mov	r0, r9
   25658:	bl	15d68 <g_type_check_instance_cast@plt>
   2565c:	bl	166c8 <gtk_dialog_get_content_area@plt>
   25660:	mov	r1, r6
   25664:	bl	15d68 <g_type_check_instance_cast@plt>
   25668:	ldr	r3, [pc, #144]	; 25700 <g_strcmp0@plt+0xeac8>
   2566c:	mov	r6, #0
   25670:	mov	r1, r4
   25674:	stm	sp, {r3, r5, r6}
   25678:	mov	r3, r5
   2567c:	ldr	r2, [pc, #128]	; 25704 <g_strcmp0@plt+0xeacc>
   25680:	bl	15bc4 <gtk_container_add_with_properties@plt>
   25684:	mov	r0, r9
   25688:	mov	r1, #80	; 0x50
   2568c:	bl	15d68 <g_type_check_instance_cast@plt>
   25690:	str	r6, [sp, #4]
   25694:	str	r6, [sp]
   25698:	mov	r3, r8
   2569c:	ldr	r2, [pc, #100]	; 25708 <g_strcmp0@plt+0xead0>
   256a0:	ldr	r1, [pc, #100]	; 2570c <g_strcmp0@plt+0xead4>
   256a4:	bl	16314 <g_signal_connect_data@plt>
   256a8:	mov	r0, r5
   256ac:	add	sp, sp, #20
   256b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   256b4:	bl	15d14 <gtk_widget_get_type@plt>
   256b8:	mov	r1, r0
   256bc:	mov	r0, r4
   256c0:	bl	15d68 <g_type_check_instance_cast@plt>
   256c4:	ldr	r2, [r5, #4]
   256c8:	mvn	r1, #0
   256cc:	add	r2, r2, r2, lsl #1
   256d0:	lsl	r2, r2, #4
   256d4:	add	r2, r2, #8
   256d8:	bl	1623c <gtk_widget_set_size_request@plt>
   256dc:	b	25648 <g_strcmp0@plt+0xea10>
   256e0:	bl	15d14 <gtk_widget_get_type@plt>
   256e4:	mov	r1, r0
   256e8:	mov	r0, r4
   256ec:	bl	15d68 <g_type_check_instance_cast@plt>
   256f0:	mov	r2, #248	; 0xf8
   256f4:	mvn	r1, #0
   256f8:	bl	1623c <gtk_widget_set_size_request@plt>
   256fc:	b	25648 <g_strcmp0@plt+0xea10>
   25700:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   25704:	ldrdeq	ip, [r2], -r4
   25708:	andeq	r5, r2, r0, asr #3
   2570c:	andeq	ip, r2, r4, ror #21
   25710:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25714:	mov	r9, r0
   25718:	mov	r0, r1
   2571c:	bl	16200 <pk_ptr_array_to_strv@plt>
   25720:	mov	r1, r0
   25724:	ldr	r0, [pc, #384]	; 258ac <g_strcmp0@plt+0xec74>
   25728:	bl	16b0c <g_strjoinv@plt>
   2572c:	mov	r8, r0
   25730:	bl	1d530 <g_strcmp0@plt+0x68f8>
   25734:	cmp	r0, #0
   25738:	bne	25888 <g_strcmp0@plt+0xec50>
   2573c:	bl	161ac <gtk_text_view_new@plt>
   25740:	mov	r5, r0
   25744:	bl	15d80 <gtk_text_view_get_type@plt>
   25748:	mov	r6, r0
   2574c:	mov	r1, r0
   25750:	mov	r0, r5
   25754:	bl	15d68 <g_type_check_instance_cast@plt>
   25758:	mov	r1, #0
   2575c:	bl	16650 <gtk_text_view_set_editable@plt>
   25760:	mov	r1, r6
   25764:	mov	r0, r5
   25768:	bl	15d68 <g_type_check_instance_cast@plt>
   2576c:	mov	r1, #5
   25770:	bl	164dc <gtk_text_view_set_left_margin@plt>
   25774:	mov	r1, r6
   25778:	mov	r0, r5
   2577c:	bl	15d68 <g_type_check_instance_cast@plt>
   25780:	mov	r1, #5
   25784:	bl	165c0 <gtk_text_view_set_right_margin@plt>
   25788:	mov	r1, #0
   2578c:	mov	r0, r1
   25790:	bl	16158 <gtk_scrolled_window_new@plt>
   25794:	mov	r4, r0
   25798:	bl	169ec <gtk_scrolled_window_get_type@plt>
   2579c:	mov	r7, r0
   257a0:	mov	r1, r0
   257a4:	mov	r0, r4
   257a8:	bl	15d68 <g_type_check_instance_cast@plt>
   257ac:	mov	r2, #1
   257b0:	mov	r1, #2
   257b4:	bl	162d8 <gtk_scrolled_window_set_policy@plt>
   257b8:	mov	r1, r7
   257bc:	mov	r0, r4
   257c0:	bl	15d68 <g_type_check_instance_cast@plt>
   257c4:	mov	r1, #0
   257c8:	bl	1608c <gtk_scrolled_window_set_overlay_scrolling@plt>
   257cc:	bl	1605c <gtk_container_get_type@plt>
   257d0:	mov	r7, r0
   257d4:	mov	r1, r0
   257d8:	mov	r0, r4
   257dc:	bl	15d68 <g_type_check_instance_cast@plt>
   257e0:	mov	r1, r5
   257e4:	bl	16248 <gtk_container_add@plt>
   257e8:	mov	r0, r4
   257ec:	bl	1686c <gtk_widget_show@plt>
   257f0:	mov	r0, #0
   257f4:	bl	16914 <gtk_text_buffer_new@plt>
   257f8:	mvn	r2, #0
   257fc:	mov	r1, r8
   25800:	mov	sl, r0
   25804:	bl	16350 <gtk_text_buffer_set_text@plt>
   25808:	mov	r1, r6
   2580c:	mov	r0, r5
   25810:	bl	15d68 <g_type_check_instance_cast@plt>
   25814:	mov	r1, sl
   25818:	bl	16260 <gtk_text_view_set_buffer@plt>
   2581c:	mov	r0, r5
   25820:	bl	1686c <gtk_widget_show@plt>
   25824:	mov	r1, r7
   25828:	mov	r0, r4
   2582c:	bl	15d68 <g_type_check_instance_cast@plt>
   25830:	mov	r1, #6
   25834:	bl	16098 <gtk_container_set_border_width@plt>
   25838:	bl	15d14 <gtk_widget_get_type@plt>
   2583c:	mov	r1, r0
   25840:	mov	r0, r4
   25844:	bl	15d68 <g_type_check_instance_cast@plt>
   25848:	mov	r2, #300	; 0x12c
   2584c:	mvn	r1, #0
   25850:	bl	1623c <gtk_widget_set_size_request@plt>
   25854:	bl	165e4 <gtk_dialog_get_type@plt>
   25858:	mov	r1, r0
   2585c:	mov	r0, r9
   25860:	bl	15d68 <g_type_check_instance_cast@plt>
   25864:	bl	166c8 <gtk_dialog_get_content_area@plt>
   25868:	mov	r1, r7
   2586c:	bl	15d68 <g_type_check_instance_cast@plt>
   25870:	mov	r1, r4
   25874:	bl	16248 <gtk_container_add@plt>
   25878:	mov	r0, r8
   2587c:	bl	16518 <g_free@plt>
   25880:	mov	r0, #1
   25884:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25888:	mov	r0, r8
   2588c:	bl	16518 <g_free@plt>
   25890:	mov	r2, #5
   25894:	ldr	r1, [pc, #20]	; 258b0 <g_strcmp0@plt+0xec78>
   25898:	mov	r0, #0
   2589c:	bl	16530 <dcgettext@plt>
   258a0:	bl	15fe4 <g_strdup@plt>
   258a4:	mov	r8, r0
   258a8:	b	2573c <g_strcmp0@plt+0xeb04>
   258ac:	andeq	r7, r2, r0, lsr #25
   258b0:	strdeq	ip, [r2], -r0
   258b4:	push	{r4, r5, r6, r7, lr}
   258b8:	mov	r2, #5
   258bc:	sub	sp, sp, #20
   258c0:	mov	r6, r1
   258c4:	mov	r7, r0
   258c8:	ldr	r1, [pc, #192]	; 25990 <g_strcmp0@plt+0xed58>
   258cc:	mov	r0, #0
   258d0:	bl	16530 <dcgettext@plt>
   258d4:	bl	16b24 <gtk_check_button_new_with_label@plt>
   258d8:	mov	r4, #0
   258dc:	mov	r3, r6
   258e0:	ldr	r2, [pc, #172]	; 25994 <g_strcmp0@plt+0xed5c>
   258e4:	str	r4, [sp, #4]
   258e8:	str	r4, [sp]
   258ec:	ldr	r1, [pc, #164]	; 25998 <g_strcmp0@plt+0xed60>
   258f0:	mov	r5, r0
   258f4:	bl	16314 <g_signal_connect_data@plt>
   258f8:	bl	165e4 <gtk_dialog_get_type@plt>
   258fc:	mov	r1, r0
   25900:	mov	r0, r7
   25904:	bl	15d68 <g_type_check_instance_cast@plt>
   25908:	bl	166c8 <gtk_dialog_get_content_area@plt>
   2590c:	mov	r7, r0
   25910:	bl	1605c <gtk_container_get_type@plt>
   25914:	mov	r1, r0
   25918:	mov	r0, r7
   2591c:	bl	15d68 <g_type_check_instance_cast@plt>
   25920:	ldr	r2, [pc, #116]	; 2599c <g_strcmp0@plt+0xed64>
   25924:	mov	r3, r4
   25928:	mov	r1, r5
   2592c:	str	r4, [sp, #8]
   25930:	str	r4, [sp, #4]
   25934:	str	r2, [sp]
   25938:	ldr	r2, [pc, #96]	; 259a0 <g_strcmp0@plt+0xed68>
   2593c:	bl	15bc4 <gtk_container_add_with_properties@plt>
   25940:	ldr	r0, [pc, #92]	; 259a4 <g_strcmp0@plt+0xed6c>
   25944:	bl	15b64 <g_settings_new@plt>
   25948:	mov	r1, r6
   2594c:	mov	r7, r0
   25950:	bl	15b04 <g_settings_get_boolean@plt>
   25954:	mov	r4, r0
   25958:	mov	r0, r7
   2595c:	bl	16878 <g_object_unref@plt>
   25960:	bl	15e7c <gtk_toggle_button_get_type@plt>
   25964:	mov	r1, r0
   25968:	mov	r0, r5
   2596c:	bl	15d68 <g_type_check_instance_cast@plt>
   25970:	clz	r1, r4
   25974:	lsr	r1, r1, #5
   25978:	bl	166bc <gtk_toggle_button_set_active@plt>
   2597c:	mov	r0, r5
   25980:	bl	1686c <gtk_widget_show@plt>
   25984:	mov	r0, #1
   25988:	add	sp, sp, #20
   2598c:	pop	{r4, r5, r6, r7, pc}
   25990:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   25994:			; <UNDEFINED> instruction: 0x000252b0
   25998:			; <UNDEFINED> instruction: 0x000266b0
   2599c:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   259a0:	ldrdeq	ip, [r2], -r4
   259a4:	andeq	r6, r2, r8, asr #8
   259a8:	push	{r4, r5, lr}
   259ac:	mov	r4, r1
   259b0:	sub	sp, sp, #20
   259b4:	mov	r5, r0
   259b8:	bl	16ba8 <gtk_notebook_get_type@plt>
   259bc:	cmp	r4, #0
   259c0:	moveq	r0, r4
   259c4:	beq	25a58 <g_strcmp0@plt+0xee20>
   259c8:	ldr	r3, [r4]
   259cc:	cmp	r3, #0
   259d0:	beq	259e0 <g_strcmp0@plt+0xeda8>
   259d4:	ldr	r3, [r3]
   259d8:	cmp	r3, r0
   259dc:	beq	259f4 <g_strcmp0@plt+0xedbc>
   259e0:	mov	r1, r0
   259e4:	mov	r0, r4
   259e8:	bl	166d4 <g_type_check_instance_is_a@plt>
   259ec:	cmp	r0, #0
   259f0:	beq	25a58 <g_strcmp0@plt+0xee20>
   259f4:	bl	165e4 <gtk_dialog_get_type@plt>
   259f8:	mov	r1, r0
   259fc:	mov	r0, r5
   25a00:	bl	15d68 <g_type_check_instance_cast@plt>
   25a04:	bl	166c8 <gtk_dialog_get_content_area@plt>
   25a08:	mov	r5, r0
   25a0c:	bl	1605c <gtk_container_get_type@plt>
   25a10:	mov	r1, r0
   25a14:	mov	r0, r5
   25a18:	bl	15d68 <g_type_check_instance_cast@plt>
   25a1c:	mov	r5, r0
   25a20:	bl	15d14 <gtk_widget_get_type@plt>
   25a24:	mov	r1, r0
   25a28:	mov	r0, r4
   25a2c:	bl	15d68 <g_type_check_instance_cast@plt>
   25a30:	ldr	r2, [pc, #40]	; 25a60 <g_strcmp0@plt+0xee28>
   25a34:	mov	r3, #0
   25a38:	str	r2, [sp]
   25a3c:	str	r3, [sp, #8]
   25a40:	str	r3, [sp, #4]
   25a44:	ldr	r2, [pc, #24]	; 25a64 <g_strcmp0@plt+0xee2c>
   25a48:	mov	r1, r0
   25a4c:	mov	r0, r5
   25a50:	bl	15bc4 <gtk_container_add_with_properties@plt>
   25a54:	mov	r0, #1
   25a58:	add	sp, sp, #20
   25a5c:	pop	{r4, r5, pc}
   25a60:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   25a64:	ldrdeq	ip, [r2], -r4
   25a68:	push	{r4, r5, r6, r7, r8, r9, lr}
   25a6c:	mov	r5, r1
   25a70:	sub	sp, sp, #20
   25a74:	add	r1, r1, #4
   25a78:	mov	r9, r0
   25a7c:	mov	r0, r5
   25a80:	bl	25328 <g_strcmp0@plt+0xe6f0>
   25a84:	mov	r8, r0
   25a88:	bl	16620 <gtk_tree_model_get_type@plt>
   25a8c:	mov	r1, r0
   25a90:	mov	r0, r8
   25a94:	bl	15d68 <g_type_check_instance_cast@plt>
   25a98:	bl	169bc <gtk_tree_view_new_with_model@plt>
   25a9c:	mov	r7, r0
   25aa0:	bl	164c4 <gtk_tree_view_get_type@plt>
   25aa4:	mov	r1, r0
   25aa8:	mov	r0, r7
   25aac:	bl	15d68 <g_type_check_instance_cast@plt>
   25ab0:	bl	251c8 <g_strcmp0@plt+0xe590>
   25ab4:	mov	r0, r7
   25ab8:	bl	1686c <gtk_widget_show@plt>
   25abc:	mov	r1, #0
   25ac0:	mov	r0, r1
   25ac4:	bl	16158 <gtk_scrolled_window_new@plt>
   25ac8:	mov	r4, r0
   25acc:	bl	169ec <gtk_scrolled_window_get_type@plt>
   25ad0:	mov	r6, r0
   25ad4:	mov	r1, r0
   25ad8:	mov	r0, r4
   25adc:	bl	15d68 <g_type_check_instance_cast@plt>
   25ae0:	mov	r2, #1
   25ae4:	mov	r1, #2
   25ae8:	bl	162d8 <gtk_scrolled_window_set_policy@plt>
   25aec:	mov	r1, r6
   25af0:	mov	r0, r4
   25af4:	bl	15d68 <g_type_check_instance_cast@plt>
   25af8:	mov	r1, #0
   25afc:	bl	1608c <gtk_scrolled_window_set_overlay_scrolling@plt>
   25b00:	bl	1605c <gtk_container_get_type@plt>
   25b04:	mov	r1, r0
   25b08:	mov	r6, r0
   25b0c:	mov	r0, r4
   25b10:	bl	15d68 <g_type_check_instance_cast@plt>
   25b14:	mov	r1, r7
   25b18:	bl	16248 <gtk_container_add@plt>
   25b1c:	mov	r0, r4
   25b20:	bl	1686c <gtk_widget_show@plt>
   25b24:	mov	r1, r6
   25b28:	mov	r0, r4
   25b2c:	bl	15d68 <g_type_check_instance_cast@plt>
   25b30:	mov	r1, #6
   25b34:	bl	16098 <gtk_container_set_border_width@plt>
   25b38:	ldr	r3, [r5, #4]
   25b3c:	cmp	r3, #5
   25b40:	bhi	25bd4 <g_strcmp0@plt+0xef9c>
   25b44:	cmp	r3, #1
   25b48:	bhi	25ba8 <g_strcmp0@plt+0xef70>
   25b4c:	mov	r1, r6
   25b50:	mov	r0, r9
   25b54:	bl	15d68 <g_type_check_instance_cast@plt>
   25b58:	ldr	r3, [pc, #148]	; 25bf4 <g_strcmp0@plt+0xefbc>
   25b5c:	mov	r6, #0
   25b60:	mov	r5, #1
   25b64:	mov	r1, r4
   25b68:	stm	sp, {r3, r5, r6}
   25b6c:	mov	r3, r5
   25b70:	ldr	r2, [pc, #128]	; 25bf8 <g_strcmp0@plt+0xefc0>
   25b74:	bl	15bc4 <gtk_container_add_with_properties@plt>
   25b78:	mov	r0, r9
   25b7c:	mov	r1, #80	; 0x50
   25b80:	bl	15d68 <g_type_check_instance_cast@plt>
   25b84:	str	r6, [sp, #4]
   25b88:	str	r6, [sp]
   25b8c:	mov	r3, r8
   25b90:	ldr	r2, [pc, #100]	; 25bfc <g_strcmp0@plt+0xefc4>
   25b94:	ldr	r1, [pc, #100]	; 25c00 <g_strcmp0@plt+0xefc8>
   25b98:	bl	16314 <g_signal_connect_data@plt>
   25b9c:	mov	r0, r5
   25ba0:	add	sp, sp, #20
   25ba4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   25ba8:	bl	15d14 <gtk_widget_get_type@plt>
   25bac:	mov	r1, r0
   25bb0:	mov	r0, r4
   25bb4:	bl	15d68 <g_type_check_instance_cast@plt>
   25bb8:	ldr	r2, [r5, #4]
   25bbc:	mvn	r1, #0
   25bc0:	add	r2, r2, r2, lsl #1
   25bc4:	lsl	r2, r2, #4
   25bc8:	add	r2, r2, #8
   25bcc:	bl	1623c <gtk_widget_set_size_request@plt>
   25bd0:	b	25b4c <g_strcmp0@plt+0xef14>
   25bd4:	bl	15d14 <gtk_widget_get_type@plt>
   25bd8:	mov	r1, r0
   25bdc:	mov	r0, r4
   25be0:	bl	15d68 <g_type_check_instance_cast@plt>
   25be4:	mov	r2, #248	; 0xf8
   25be8:	mvn	r1, #0
   25bec:	bl	1623c <gtk_widget_set_size_request@plt>
   25bf0:	b	25b4c <g_strcmp0@plt+0xef14>
   25bf4:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   25bf8:	ldrdeq	ip, [r2], -r4
   25bfc:	andeq	r5, r2, r0, asr #3
   25c00:	andeq	ip, r2, r4, ror #21
   25c04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25c08:	sub	sp, sp, #16
   25c0c:	mov	r4, r2
   25c10:	mov	r5, r3
   25c14:	mov	r9, r0
   25c18:	mov	r6, r1
   25c1c:	bl	1605c <gtk_container_get_type@plt>
   25c20:	orrs	r3, r4, r5
   25c24:	mov	sl, r0
   25c28:	beq	25cec <g_strcmp0@plt+0xf0b4>
   25c2c:	mov	r1, r5
   25c30:	mov	r0, r4
   25c34:	bl	15c54 <g_format_size@plt>
   25c38:	mov	r1, r6
   25c3c:	mov	r4, #0
   25c40:	mov	r2, r0
   25c44:	mov	r5, r0
   25c48:	ldr	r0, [pc, #224]	; 25d30 <g_strcmp0@plt+0xf0f8>
   25c4c:	bl	160e0 <g_strdup_printf@plt>
   25c50:	mov	r1, #6
   25c54:	mov	r7, r0
   25c58:	mov	r0, #0
   25c5c:	bl	15e88 <gtk_box_new@plt>
   25c60:	mov	r1, sl
   25c64:	mov	r8, r0
   25c68:	mov	r0, r9
   25c6c:	bl	15d68 <g_type_check_instance_cast@plt>
   25c70:	ldr	r3, [pc, #188]	; 25d34 <g_strcmp0@plt+0xf0fc>
   25c74:	ldr	r2, [pc, #188]	; 25d38 <g_strcmp0@plt+0xf100>
   25c78:	mov	r1, r8
   25c7c:	str	r3, [sp]
   25c80:	str	r4, [sp, #8]
   25c84:	mov	r3, r4
   25c88:	str	r4, [sp, #4]
   25c8c:	bl	15bc4 <gtk_container_add_with_properties@plt>
   25c90:	mov	r0, r7
   25c94:	bl	161b8 <gtk_label_new@plt>
   25c98:	mov	r6, r0
   25c9c:	bl	162fc <gtk_box_get_type@plt>
   25ca0:	mov	r1, r0
   25ca4:	mov	r0, r8
   25ca8:	bl	15d68 <g_type_check_instance_cast@plt>
   25cac:	str	r4, [sp]
   25cb0:	mov	r3, r4
   25cb4:	mov	r2, r4
   25cb8:	mov	r1, r6
   25cbc:	bl	163b0 <gtk_box_pack_start@plt>
   25cc0:	mov	r0, r8
   25cc4:	bl	1686c <gtk_widget_show@plt>
   25cc8:	mov	r0, r6
   25ccc:	bl	1686c <gtk_widget_show@plt>
   25cd0:	mov	r0, r7
   25cd4:	bl	16518 <g_free@plt>
   25cd8:	mov	r0, r5
   25cdc:	bl	16518 <g_free@plt>
   25ce0:	mov	r0, #1
   25ce4:	add	sp, sp, #16
   25ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25cec:	mov	r0, r6
   25cf0:	bl	161b8 <gtk_label_new@plt>
   25cf4:	mov	r1, sl
   25cf8:	mov	r6, r0
   25cfc:	mov	r0, r9
   25d00:	bl	15d68 <g_type_check_instance_cast@plt>
   25d04:	ldr	r2, [pc, #40]	; 25d34 <g_strcmp0@plt+0xf0fc>
   25d08:	mov	r3, #0
   25d0c:	str	r2, [sp]
   25d10:	mov	r5, r3
   25d14:	mov	r1, r6
   25d18:	str	r3, [sp, #8]
   25d1c:	str	r3, [sp, #4]
   25d20:	ldr	r2, [pc, #16]	; 25d38 <g_strcmp0@plt+0xf100>
   25d24:	bl	15bc4 <gtk_container_add_with_properties@plt>
   25d28:	mov	r7, r5
   25d2c:	b	25cc8 <g_strcmp0@plt+0xf090>
   25d30:	andeq	r6, r2, r8, asr r2
   25d34:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   25d38:	ldrdeq	ip, [r2], -r4
   25d3c:	subs	r2, r1, #1
   25d40:	bxeq	lr
   25d44:	bcc	25f1c <g_strcmp0@plt+0xf2e4>
   25d48:	cmp	r0, r1
   25d4c:	bls	25f00 <g_strcmp0@plt+0xf2c8>
   25d50:	tst	r1, r2
   25d54:	beq	25f0c <g_strcmp0@plt+0xf2d4>
   25d58:	clz	r3, r0
   25d5c:	clz	r2, r1
   25d60:	sub	r3, r2, r3
   25d64:	rsbs	r3, r3, #31
   25d68:	addne	r3, r3, r3, lsl #1
   25d6c:	mov	r2, #0
   25d70:	addne	pc, pc, r3, lsl #2
   25d74:	nop			; (mov r0, r0)
   25d78:	cmp	r0, r1, lsl #31
   25d7c:	adc	r2, r2, r2
   25d80:	subcs	r0, r0, r1, lsl #31
   25d84:	cmp	r0, r1, lsl #30
   25d88:	adc	r2, r2, r2
   25d8c:	subcs	r0, r0, r1, lsl #30
   25d90:	cmp	r0, r1, lsl #29
   25d94:	adc	r2, r2, r2
   25d98:	subcs	r0, r0, r1, lsl #29
   25d9c:	cmp	r0, r1, lsl #28
   25da0:	adc	r2, r2, r2
   25da4:	subcs	r0, r0, r1, lsl #28
   25da8:	cmp	r0, r1, lsl #27
   25dac:	adc	r2, r2, r2
   25db0:	subcs	r0, r0, r1, lsl #27
   25db4:	cmp	r0, r1, lsl #26
   25db8:	adc	r2, r2, r2
   25dbc:	subcs	r0, r0, r1, lsl #26
   25dc0:	cmp	r0, r1, lsl #25
   25dc4:	adc	r2, r2, r2
   25dc8:	subcs	r0, r0, r1, lsl #25
   25dcc:	cmp	r0, r1, lsl #24
   25dd0:	adc	r2, r2, r2
   25dd4:	subcs	r0, r0, r1, lsl #24
   25dd8:	cmp	r0, r1, lsl #23
   25ddc:	adc	r2, r2, r2
   25de0:	subcs	r0, r0, r1, lsl #23
   25de4:	cmp	r0, r1, lsl #22
   25de8:	adc	r2, r2, r2
   25dec:	subcs	r0, r0, r1, lsl #22
   25df0:	cmp	r0, r1, lsl #21
   25df4:	adc	r2, r2, r2
   25df8:	subcs	r0, r0, r1, lsl #21
   25dfc:	cmp	r0, r1, lsl #20
   25e00:	adc	r2, r2, r2
   25e04:	subcs	r0, r0, r1, lsl #20
   25e08:	cmp	r0, r1, lsl #19
   25e0c:	adc	r2, r2, r2
   25e10:	subcs	r0, r0, r1, lsl #19
   25e14:	cmp	r0, r1, lsl #18
   25e18:	adc	r2, r2, r2
   25e1c:	subcs	r0, r0, r1, lsl #18
   25e20:	cmp	r0, r1, lsl #17
   25e24:	adc	r2, r2, r2
   25e28:	subcs	r0, r0, r1, lsl #17
   25e2c:	cmp	r0, r1, lsl #16
   25e30:	adc	r2, r2, r2
   25e34:	subcs	r0, r0, r1, lsl #16
   25e38:	cmp	r0, r1, lsl #15
   25e3c:	adc	r2, r2, r2
   25e40:	subcs	r0, r0, r1, lsl #15
   25e44:	cmp	r0, r1, lsl #14
   25e48:	adc	r2, r2, r2
   25e4c:	subcs	r0, r0, r1, lsl #14
   25e50:	cmp	r0, r1, lsl #13
   25e54:	adc	r2, r2, r2
   25e58:	subcs	r0, r0, r1, lsl #13
   25e5c:	cmp	r0, r1, lsl #12
   25e60:	adc	r2, r2, r2
   25e64:	subcs	r0, r0, r1, lsl #12
   25e68:	cmp	r0, r1, lsl #11
   25e6c:	adc	r2, r2, r2
   25e70:	subcs	r0, r0, r1, lsl #11
   25e74:	cmp	r0, r1, lsl #10
   25e78:	adc	r2, r2, r2
   25e7c:	subcs	r0, r0, r1, lsl #10
   25e80:	cmp	r0, r1, lsl #9
   25e84:	adc	r2, r2, r2
   25e88:	subcs	r0, r0, r1, lsl #9
   25e8c:	cmp	r0, r1, lsl #8
   25e90:	adc	r2, r2, r2
   25e94:	subcs	r0, r0, r1, lsl #8
   25e98:	cmp	r0, r1, lsl #7
   25e9c:	adc	r2, r2, r2
   25ea0:	subcs	r0, r0, r1, lsl #7
   25ea4:	cmp	r0, r1, lsl #6
   25ea8:	adc	r2, r2, r2
   25eac:	subcs	r0, r0, r1, lsl #6
   25eb0:	cmp	r0, r1, lsl #5
   25eb4:	adc	r2, r2, r2
   25eb8:	subcs	r0, r0, r1, lsl #5
   25ebc:	cmp	r0, r1, lsl #4
   25ec0:	adc	r2, r2, r2
   25ec4:	subcs	r0, r0, r1, lsl #4
   25ec8:	cmp	r0, r1, lsl #3
   25ecc:	adc	r2, r2, r2
   25ed0:	subcs	r0, r0, r1, lsl #3
   25ed4:	cmp	r0, r1, lsl #2
   25ed8:	adc	r2, r2, r2
   25edc:	subcs	r0, r0, r1, lsl #2
   25ee0:	cmp	r0, r1, lsl #1
   25ee4:	adc	r2, r2, r2
   25ee8:	subcs	r0, r0, r1, lsl #1
   25eec:	cmp	r0, r1
   25ef0:	adc	r2, r2, r2
   25ef4:	subcs	r0, r0, r1
   25ef8:	mov	r0, r2
   25efc:	bx	lr
   25f00:	moveq	r0, #1
   25f04:	movne	r0, #0
   25f08:	bx	lr
   25f0c:	clz	r2, r1
   25f10:	rsb	r2, r2, #31
   25f14:	lsr	r0, r0, r2
   25f18:	bx	lr
   25f1c:	cmp	r0, #0
   25f20:	mvnne	r0, #0
   25f24:	b	26188 <g_strcmp0@plt+0xf550>
   25f28:	cmp	r1, #0
   25f2c:	beq	25f1c <g_strcmp0@plt+0xf2e4>
   25f30:	push	{r0, r1, lr}
   25f34:	bl	25d3c <g_strcmp0@plt+0xf104>
   25f38:	pop	{r1, r2, lr}
   25f3c:	mul	r3, r2, r0
   25f40:	sub	r1, r1, r3
   25f44:	bx	lr
   25f48:	cmp	r1, #0
   25f4c:	beq	26158 <g_strcmp0@plt+0xf520>
   25f50:	eor	ip, r0, r1
   25f54:	rsbmi	r1, r1, #0
   25f58:	subs	r2, r1, #1
   25f5c:	beq	26124 <g_strcmp0@plt+0xf4ec>
   25f60:	movs	r3, r0
   25f64:	rsbmi	r3, r0, #0
   25f68:	cmp	r3, r1
   25f6c:	bls	26130 <g_strcmp0@plt+0xf4f8>
   25f70:	tst	r1, r2
   25f74:	beq	26140 <g_strcmp0@plt+0xf508>
   25f78:	clz	r2, r3
   25f7c:	clz	r0, r1
   25f80:	sub	r2, r0, r2
   25f84:	rsbs	r2, r2, #31
   25f88:	addne	r2, r2, r2, lsl #1
   25f8c:	mov	r0, #0
   25f90:	addne	pc, pc, r2, lsl #2
   25f94:	nop			; (mov r0, r0)
   25f98:	cmp	r3, r1, lsl #31
   25f9c:	adc	r0, r0, r0
   25fa0:	subcs	r3, r3, r1, lsl #31
   25fa4:	cmp	r3, r1, lsl #30
   25fa8:	adc	r0, r0, r0
   25fac:	subcs	r3, r3, r1, lsl #30
   25fb0:	cmp	r3, r1, lsl #29
   25fb4:	adc	r0, r0, r0
   25fb8:	subcs	r3, r3, r1, lsl #29
   25fbc:	cmp	r3, r1, lsl #28
   25fc0:	adc	r0, r0, r0
   25fc4:	subcs	r3, r3, r1, lsl #28
   25fc8:	cmp	r3, r1, lsl #27
   25fcc:	adc	r0, r0, r0
   25fd0:	subcs	r3, r3, r1, lsl #27
   25fd4:	cmp	r3, r1, lsl #26
   25fd8:	adc	r0, r0, r0
   25fdc:	subcs	r3, r3, r1, lsl #26
   25fe0:	cmp	r3, r1, lsl #25
   25fe4:	adc	r0, r0, r0
   25fe8:	subcs	r3, r3, r1, lsl #25
   25fec:	cmp	r3, r1, lsl #24
   25ff0:	adc	r0, r0, r0
   25ff4:	subcs	r3, r3, r1, lsl #24
   25ff8:	cmp	r3, r1, lsl #23
   25ffc:	adc	r0, r0, r0
   26000:	subcs	r3, r3, r1, lsl #23
   26004:	cmp	r3, r1, lsl #22
   26008:	adc	r0, r0, r0
   2600c:	subcs	r3, r3, r1, lsl #22
   26010:	cmp	r3, r1, lsl #21
   26014:	adc	r0, r0, r0
   26018:	subcs	r3, r3, r1, lsl #21
   2601c:	cmp	r3, r1, lsl #20
   26020:	adc	r0, r0, r0
   26024:	subcs	r3, r3, r1, lsl #20
   26028:	cmp	r3, r1, lsl #19
   2602c:	adc	r0, r0, r0
   26030:	subcs	r3, r3, r1, lsl #19
   26034:	cmp	r3, r1, lsl #18
   26038:	adc	r0, r0, r0
   2603c:	subcs	r3, r3, r1, lsl #18
   26040:	cmp	r3, r1, lsl #17
   26044:	adc	r0, r0, r0
   26048:	subcs	r3, r3, r1, lsl #17
   2604c:	cmp	r3, r1, lsl #16
   26050:	adc	r0, r0, r0
   26054:	subcs	r3, r3, r1, lsl #16
   26058:	cmp	r3, r1, lsl #15
   2605c:	adc	r0, r0, r0
   26060:	subcs	r3, r3, r1, lsl #15
   26064:	cmp	r3, r1, lsl #14
   26068:	adc	r0, r0, r0
   2606c:	subcs	r3, r3, r1, lsl #14
   26070:	cmp	r3, r1, lsl #13
   26074:	adc	r0, r0, r0
   26078:	subcs	r3, r3, r1, lsl #13
   2607c:	cmp	r3, r1, lsl #12
   26080:	adc	r0, r0, r0
   26084:	subcs	r3, r3, r1, lsl #12
   26088:	cmp	r3, r1, lsl #11
   2608c:	adc	r0, r0, r0
   26090:	subcs	r3, r3, r1, lsl #11
   26094:	cmp	r3, r1, lsl #10
   26098:	adc	r0, r0, r0
   2609c:	subcs	r3, r3, r1, lsl #10
   260a0:	cmp	r3, r1, lsl #9
   260a4:	adc	r0, r0, r0
   260a8:	subcs	r3, r3, r1, lsl #9
   260ac:	cmp	r3, r1, lsl #8
   260b0:	adc	r0, r0, r0
   260b4:	subcs	r3, r3, r1, lsl #8
   260b8:	cmp	r3, r1, lsl #7
   260bc:	adc	r0, r0, r0
   260c0:	subcs	r3, r3, r1, lsl #7
   260c4:	cmp	r3, r1, lsl #6
   260c8:	adc	r0, r0, r0
   260cc:	subcs	r3, r3, r1, lsl #6
   260d0:	cmp	r3, r1, lsl #5
   260d4:	adc	r0, r0, r0
   260d8:	subcs	r3, r3, r1, lsl #5
   260dc:	cmp	r3, r1, lsl #4
   260e0:	adc	r0, r0, r0
   260e4:	subcs	r3, r3, r1, lsl #4
   260e8:	cmp	r3, r1, lsl #3
   260ec:	adc	r0, r0, r0
   260f0:	subcs	r3, r3, r1, lsl #3
   260f4:	cmp	r3, r1, lsl #2
   260f8:	adc	r0, r0, r0
   260fc:	subcs	r3, r3, r1, lsl #2
   26100:	cmp	r3, r1, lsl #1
   26104:	adc	r0, r0, r0
   26108:	subcs	r3, r3, r1, lsl #1
   2610c:	cmp	r3, r1
   26110:	adc	r0, r0, r0
   26114:	subcs	r3, r3, r1
   26118:	cmp	ip, #0
   2611c:	rsbmi	r0, r0, #0
   26120:	bx	lr
   26124:	teq	ip, r0
   26128:	rsbmi	r0, r0, #0
   2612c:	bx	lr
   26130:	movcc	r0, #0
   26134:	asreq	r0, ip, #31
   26138:	orreq	r0, r0, #1
   2613c:	bx	lr
   26140:	clz	r2, r1
   26144:	rsb	r2, r2, #31
   26148:	cmp	ip, #0
   2614c:	lsr	r0, r3, r2
   26150:	rsbmi	r0, r0, #0
   26154:	bx	lr
   26158:	cmp	r0, #0
   2615c:	mvngt	r0, #-2147483648	; 0x80000000
   26160:	movlt	r0, #-2147483648	; 0x80000000
   26164:	b	26188 <g_strcmp0@plt+0xf550>
   26168:	cmp	r1, #0
   2616c:	beq	26158 <g_strcmp0@plt+0xf520>
   26170:	push	{r0, r1, lr}
   26174:	bl	25f50 <g_strcmp0@plt+0xf318>
   26178:	pop	{r1, r2, lr}
   2617c:	mul	r3, r2, r0
   26180:	sub	r1, r1, r3
   26184:	bx	lr
   26188:	push	{r1, lr}
   2618c:	mov	r0, #8
   26190:	bl	166b0 <raise@plt>
   26194:	pop	{r1, pc}
   26198:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2619c:	mov	r7, r0
   261a0:	ldr	r6, [pc, #72]	; 261f0 <g_strcmp0@plt+0xf5b8>
   261a4:	ldr	r5, [pc, #72]	; 261f4 <g_strcmp0@plt+0xf5bc>
   261a8:	add	r6, pc, r6
   261ac:	add	r5, pc, r5
   261b0:	sub	r6, r6, r5
   261b4:	mov	r8, r1
   261b8:	mov	r9, r2
   261bc:	bl	15a54 <gtk_expander_get_expanded@plt-0x20>
   261c0:	asrs	r6, r6, #2
   261c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   261c8:	mov	r4, #0
   261cc:	add	r4, r4, #1
   261d0:	ldr	r3, [r5], #4
   261d4:	mov	r2, r9
   261d8:	mov	r1, r8
   261dc:	mov	r0, r7
   261e0:	blx	r3
   261e4:	cmp	r6, r4
   261e8:	bne	261cc <g_strcmp0@plt+0xf594>
   261ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   261f0:	muleq	r1, ip, ip
   261f4:	muleq	r1, r4, ip
   261f8:	bx	lr

Disassembly of section .fini:

000261fc <.fini>:
   261fc:	push	{r3, lr}
   26200:	pop	{r3, pc}
