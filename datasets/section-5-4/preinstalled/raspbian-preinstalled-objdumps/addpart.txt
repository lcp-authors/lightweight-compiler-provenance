
raspbian-preinstalled/addpart:     file format elf32-littlearm


Disassembly of section .init:

00010a8c <.init>:
   10a8c:	push	{r3, lr}
   10a90:	bl	1109c <strspn@plt+0x3f8>
   10a94:	pop	{r3, pc}

Disassembly of section .plt:

00010a98 <raise@plt-0x14>:
   10a98:	push	{lr}		; (str lr, [sp, #-4]!)
   10a9c:	ldr	lr, [pc, #4]	; 10aa8 <raise@plt-0x4>
   10aa0:	add	lr, pc, lr
   10aa4:	ldr	pc, [lr, #8]!
   10aa8:	muleq	r1, r4, r4

00010aac <raise@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #77824	; 0x13000
   10ab4:	ldr	pc, [ip, #1172]!	; 0x494

00010ab8 <strcmp@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #77824	; 0x13000
   10ac0:	ldr	pc, [ip, #1164]!	; 0x48c

00010ac4 <strtol@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #77824	; 0x13000
   10acc:	ldr	pc, [ip, #1156]!	; 0x484

00010ad0 <strcspn@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #77824	; 0x13000
   10ad8:	ldr	pc, [ip, #1148]!	; 0x47c

00010adc <free@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #77824	; 0x13000
   10ae4:	ldr	pc, [ip, #1140]!	; 0x474

00010ae8 <strndup@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #77824	; 0x13000
   10af0:	ldr	pc, [ip, #1132]!	; 0x46c

00010af4 <memcpy@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #77824	; 0x13000
   10afc:	ldr	pc, [ip, #1124]!	; 0x464

00010b00 <__strtoull_internal@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #77824	; 0x13000
   10b08:	ldr	pc, [ip, #1116]!	; 0x45c

00010b0c <dcgettext@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #77824	; 0x13000
   10b14:	ldr	pc, [ip, #1108]!	; 0x454

00010b18 <strdup@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #77824	; 0x13000
   10b20:	ldr	pc, [ip, #1100]!	; 0x44c

00010b24 <__stack_chk_fail@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #77824	; 0x13000
   10b2c:	ldr	pc, [ip, #1092]!	; 0x444

00010b30 <textdomain@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #77824	; 0x13000
   10b38:	ldr	pc, [ip, #1084]!	; 0x43c

00010b3c <err@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #77824	; 0x13000
   10b44:	ldr	pc, [ip, #1076]!	; 0x434

00010b48 <ioctl@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #77824	; 0x13000
   10b50:	ldr	pc, [ip, #1068]!	; 0x42c

00010b54 <open64@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #77824	; 0x13000
   10b5c:	ldr	pc, [ip, #1060]!	; 0x424

00010b60 <malloc@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #77824	; 0x13000
   10b68:	ldr	pc, [ip, #1052]!	; 0x41c

00010b6c <__libc_start_main@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #77824	; 0x13000
   10b74:	ldr	pc, [ip, #1044]!	; 0x414

00010b78 <__gmon_start__@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #77824	; 0x13000
   10b80:	ldr	pc, [ip, #1036]!	; 0x40c

00010b84 <getopt_long@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #77824	; 0x13000
   10b8c:	ldr	pc, [ip, #1028]!	; 0x404

00010b90 <__ctype_b_loc@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #77824	; 0x13000
   10b98:	ldr	pc, [ip, #1020]!	; 0x3fc

00010b9c <exit@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #77824	; 0x13000
   10ba4:	ldr	pc, [ip, #1012]!	; 0x3f4

00010ba8 <strtoul@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #77824	; 0x13000
   10bb0:	ldr	pc, [ip, #1004]!	; 0x3ec

00010bb4 <strlen@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #77824	; 0x13000
   10bbc:	ldr	pc, [ip, #996]!	; 0x3e4

00010bc0 <strchr@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #77824	; 0x13000
   10bc8:	ldr	pc, [ip, #988]!	; 0x3dc

00010bcc <warnx@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #77824	; 0x13000
   10bd4:	ldr	pc, [ip, #980]!	; 0x3d4

00010bd8 <__errno_location@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #77824	; 0x13000
   10be0:	ldr	pc, [ip, #972]!	; 0x3cc

00010be4 <__vasprintf_chk@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #77824	; 0x13000
   10bec:	ldr	pc, [ip, #964]!	; 0x3c4

00010bf0 <memset@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #77824	; 0x13000
   10bf8:	ldr	pc, [ip, #956]!	; 0x3bc

00010bfc <fgetc@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #77824	; 0x13000
   10c04:	ldr	pc, [ip, #948]!	; 0x3b4

00010c08 <__printf_chk@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #77824	; 0x13000
   10c10:	ldr	pc, [ip, #940]!	; 0x3ac

00010c14 <strtod@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #77824	; 0x13000
   10c1c:	ldr	pc, [ip, #932]!	; 0x3a4

00010c20 <__fprintf_chk@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #77824	; 0x13000
   10c28:	ldr	pc, [ip, #924]!	; 0x39c

00010c2c <setlocale@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #77824	; 0x13000
   10c34:	ldr	pc, [ip, #916]!	; 0x394

00010c38 <errx@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #77824	; 0x13000
   10c40:	ldr	pc, [ip, #908]!	; 0x38c

00010c44 <fputc@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #77824	; 0x13000
   10c4c:	ldr	pc, [ip, #900]!	; 0x384

00010c50 <localeconv@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #77824	; 0x13000
   10c58:	ldr	pc, [ip, #892]!	; 0x37c

00010c5c <__strtoll_internal@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #77824	; 0x13000
   10c64:	ldr	pc, [ip, #884]!	; 0x374

00010c68 <bindtextdomain@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #77824	; 0x13000
   10c70:	ldr	pc, [ip, #876]!	; 0x36c

00010c74 <fputs@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #77824	; 0x13000
   10c7c:	ldr	pc, [ip, #868]!	; 0x364

00010c80 <strncmp@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #77824	; 0x13000
   10c88:	ldr	pc, [ip, #860]!	; 0x35c

00010c8c <abort@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #77824	; 0x13000
   10c94:	ldr	pc, [ip, #852]!	; 0x354

00010c98 <__snprintf_chk@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #77824	; 0x13000
   10ca0:	ldr	pc, [ip, #844]!	; 0x34c

00010ca4 <strspn@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #77824	; 0x13000
   10cac:	ldr	pc, [ip, #836]!	; 0x344

Disassembly of section .text:

00010cb0 <.text>:
   10cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10cb4:	sub	sp, sp, #196	; 0xc4
   10cb8:	ldr	r7, [pc, #808]	; 10fe8 <strspn@plt+0x344>
   10cbc:	mov	r5, r0
   10cc0:	mov	r6, r1
   10cc4:	ldr	r3, [r7]
   10cc8:	ldr	r1, [pc, #796]	; 10fec <strspn@plt+0x348>
   10ccc:	mov	r0, #6
   10cd0:	str	r3, [sp, #188]	; 0xbc
   10cd4:	bl	10c2c <setlocale@plt>
   10cd8:	ldr	r1, [pc, #784]	; 10ff0 <strspn@plt+0x34c>
   10cdc:	ldr	r0, [pc, #784]	; 10ff4 <strspn@plt+0x350>
   10ce0:	bl	10c68 <bindtextdomain@plt>
   10ce4:	mov	r4, #0
   10ce8:	ldr	r0, [pc, #772]	; 10ff4 <strspn@plt+0x350>
   10cec:	bl	10b30 <textdomain@plt>
   10cf0:	mov	r1, r6
   10cf4:	mov	r0, r5
   10cf8:	str	r4, [sp]
   10cfc:	ldr	r3, [pc, #756]	; 10ff8 <strspn@plt+0x354>
   10d00:	ldr	r2, [pc, #756]	; 10ffc <strspn@plt+0x358>
   10d04:	bl	10b84 <getopt_long@plt>
   10d08:	cmn	r0, #1
   10d0c:	beq	10d9c <strspn@plt+0xf8>
   10d10:	cmp	r0, #86	; 0x56
   10d14:	bne	10d5c <strspn@plt+0xb8>
   10d18:	mov	r2, #5
   10d1c:	ldr	r1, [pc, #732]	; 11000 <strspn@plt+0x35c>
   10d20:	mov	r0, r4
   10d24:	bl	10b0c <dcgettext@plt>
   10d28:	ldr	r2, [pc, #724]	; 11004 <strspn@plt+0x360>
   10d2c:	ldr	r3, [pc, #724]	; 11008 <strspn@plt+0x364>
   10d30:	ldr	r2, [r2]
   10d34:	mov	r1, r0
   10d38:	mov	r0, #1
   10d3c:	bl	10c08 <__printf_chk@plt>
   10d40:	ldr	r2, [sp, #188]	; 0xbc
   10d44:	ldr	r3, [r7]
   10d48:	mov	r0, #0
   10d4c:	cmp	r2, r3
   10d50:	bne	10fac <strspn@plt+0x308>
   10d54:	add	sp, sp, #196	; 0xc4
   10d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d5c:	cmp	r0, #104	; 0x68
   10d60:	beq	10ebc <strspn@plt+0x218>
   10d64:	ldr	r3, [pc, #672]	; 1100c <strspn@plt+0x368>
   10d68:	mov	r0, r4
   10d6c:	mov	r2, #5
   10d70:	ldr	r1, [pc, #664]	; 11010 <strspn@plt+0x36c>
   10d74:	ldr	r4, [r3]
   10d78:	bl	10b0c <dcgettext@plt>
   10d7c:	ldr	r3, [pc, #640]	; 11004 <strspn@plt+0x360>
   10d80:	mov	r1, #1
   10d84:	ldr	r3, [r3]
   10d88:	mov	r2, r0
   10d8c:	mov	r0, r4
   10d90:	bl	10c20 <__fprintf_chk@plt>
   10d94:	mov	r0, #1
   10d98:	bl	10b9c <exit@plt>
   10d9c:	cmp	r5, #5
   10da0:	bne	10fb0 <strspn@plt+0x30c>
   10da4:	mov	r1, r4
   10da8:	ldr	r0, [r6, #4]
   10dac:	bl	10b54 <open64@plt>
   10db0:	subs	fp, r0, #0
   10db4:	blt	10fc8 <strspn@plt+0x324>
   10db8:	mov	r2, r5
   10dbc:	ldr	r1, [pc, #592]	; 11014 <strspn@plt+0x370>
   10dc0:	mov	r0, r4
   10dc4:	ldr	r8, [r6, #8]
   10dc8:	bl	10b0c <dcgettext@plt>
   10dcc:	mov	r1, r0
   10dd0:	mov	r0, r8
   10dd4:	bl	11d6c <strspn@plt+0x10c8>
   10dd8:	mov	r2, r5
   10ddc:	ldr	r1, [pc, #564]	; 11018 <strspn@plt+0x374>
   10de0:	ldr	r8, [r6, #12]
   10de4:	mov	sl, r0
   10de8:	mov	r0, r4
   10dec:	bl	10b0c <dcgettext@plt>
   10df0:	mov	r1, r0
   10df4:	mov	r0, r8
   10df8:	bl	11f40 <strspn@plt+0x129c>
   10dfc:	mov	r2, r5
   10e00:	ldr	r6, [r6, #16]
   10e04:	mov	r9, r0
   10e08:	mov	r8, r1
   10e0c:	mov	r0, r4
   10e10:	ldr	r1, [pc, #516]	; 1101c <strspn@plt+0x378>
   10e14:	bl	10b0c <dcgettext@plt>
   10e18:	lsl	r8, r8, #9
   10e1c:	orr	r8, r8, r9, lsr #23
   10e20:	lsl	r9, r9, #9
   10e24:	mov	r1, r0
   10e28:	mov	r0, r6
   10e2c:	bl	11f40 <strspn@plt+0x129c>
   10e30:	mov	r2, #132	; 0x84
   10e34:	mov	r6, r0
   10e38:	str	r1, [sp, #12]
   10e3c:	add	r0, sp, #52	; 0x34
   10e40:	mov	r1, r4
   10e44:	bl	10bf0 <memset@plt>
   10e48:	ldr	r3, [sp, #12]
   10e4c:	mov	r0, fp
   10e50:	mov	lr, #152	; 0x98
   10e54:	lsl	r3, r3, #9
   10e58:	orr	r3, r3, r6, lsr #23
   10e5c:	add	ip, sp, #32
   10e60:	lsl	r6, r6, #9
   10e64:	mov	fp, #1
   10e68:	add	r2, sp, #16
   10e6c:	ldr	r1, [pc, #428]	; 11020 <strspn@plt+0x37c>
   10e70:	str	sl, [sp, #48]	; 0x30
   10e74:	str	r8, [sp, #36]	; 0x24
   10e78:	str	r3, [sp, #44]	; 0x2c
   10e7c:	str	r9, [sp, #32]
   10e80:	str	r6, [sp, #40]	; 0x28
   10e84:	str	r4, [sp, #20]
   10e88:	str	fp, [sp, #16]
   10e8c:	str	lr, [sp, #24]
   10e90:	str	ip, [sp, #28]
   10e94:	bl	10b48 <ioctl@plt>
   10e98:	cmp	r0, #0
   10e9c:	beq	10d40 <strspn@plt+0x9c>
   10ea0:	ldr	r1, [pc, #380]	; 11024 <strspn@plt+0x380>
   10ea4:	mov	r2, r5
   10ea8:	mov	r0, r4
   10eac:	bl	10b0c <dcgettext@plt>
   10eb0:	mov	r1, r0
   10eb4:	mov	r0, fp
   10eb8:	bl	10b3c <err@plt>
   10ebc:	ldr	r3, [pc, #356]	; 11028 <strspn@plt+0x384>
   10ec0:	mov	r2, #5
   10ec4:	ldr	r1, [pc, #352]	; 1102c <strspn@plt+0x388>
   10ec8:	ldr	r5, [r3]
   10ecc:	mov	r0, r4
   10ed0:	bl	10b0c <dcgettext@plt>
   10ed4:	mov	r1, r5
   10ed8:	bl	10c74 <fputs@plt>
   10edc:	mov	r2, #5
   10ee0:	ldr	r1, [pc, #328]	; 11030 <strspn@plt+0x38c>
   10ee4:	mov	r0, r4
   10ee8:	bl	10b0c <dcgettext@plt>
   10eec:	ldr	r3, [pc, #272]	; 11004 <strspn@plt+0x360>
   10ef0:	mov	r1, #1
   10ef4:	ldr	r3, [r3]
   10ef8:	mov	r2, r0
   10efc:	mov	r0, r5
   10f00:	bl	10c20 <__fprintf_chk@plt>
   10f04:	mov	r1, r5
   10f08:	mov	r0, #10
   10f0c:	bl	10c44 <fputc@plt>
   10f10:	mov	r2, #5
   10f14:	ldr	r1, [pc, #280]	; 11034 <strspn@plt+0x390>
   10f18:	mov	r0, r4
   10f1c:	bl	10b0c <dcgettext@plt>
   10f20:	mov	r1, r5
   10f24:	bl	10c74 <fputs@plt>
   10f28:	mov	r2, #5
   10f2c:	ldr	r1, [pc, #260]	; 11038 <strspn@plt+0x394>
   10f30:	mov	r0, r4
   10f34:	bl	10b0c <dcgettext@plt>
   10f38:	mov	r1, r5
   10f3c:	bl	10c74 <fputs@plt>
   10f40:	mov	r2, #5
   10f44:	ldr	r1, [pc, #240]	; 1103c <strspn@plt+0x398>
   10f48:	mov	r0, r4
   10f4c:	bl	10b0c <dcgettext@plt>
   10f50:	mov	r2, #5
   10f54:	ldr	r1, [pc, #228]	; 11040 <strspn@plt+0x39c>
   10f58:	mov	r5, r0
   10f5c:	mov	r0, r4
   10f60:	bl	10b0c <dcgettext@plt>
   10f64:	ldr	r2, [pc, #216]	; 11044 <strspn@plt+0x3a0>
   10f68:	mov	r3, r5
   10f6c:	str	r2, [sp]
   10f70:	ldr	r1, [pc, #208]	; 11048 <strspn@plt+0x3a4>
   10f74:	ldr	r2, [pc, #208]	; 1104c <strspn@plt+0x3a8>
   10f78:	str	r0, [sp, #4]
   10f7c:	mov	r0, #1
   10f80:	bl	10c08 <__printf_chk@plt>
   10f84:	mov	r2, #5
   10f88:	ldr	r1, [pc, #192]	; 11050 <strspn@plt+0x3ac>
   10f8c:	mov	r0, r4
   10f90:	bl	10b0c <dcgettext@plt>
   10f94:	ldr	r2, [pc, #184]	; 11054 <strspn@plt+0x3b0>
   10f98:	mov	r1, r0
   10f9c:	mov	r0, #1
   10fa0:	bl	10c08 <__printf_chk@plt>
   10fa4:	mov	r0, r4
   10fa8:	bl	10b9c <exit@plt>
   10fac:	bl	10b24 <__stack_chk_fail@plt>
   10fb0:	mov	r2, #5
   10fb4:	ldr	r1, [pc, #156]	; 11058 <strspn@plt+0x3b4>
   10fb8:	mov	r0, r4
   10fbc:	bl	10b0c <dcgettext@plt>
   10fc0:	bl	10bcc <warnx@plt>
   10fc4:	b	10d64 <strspn@plt+0xc0>
   10fc8:	mov	r2, r5
   10fcc:	ldr	r1, [pc, #136]	; 1105c <strspn@plt+0x3b8>
   10fd0:	mov	r0, r4
   10fd4:	bl	10b0c <dcgettext@plt>
   10fd8:	ldr	r2, [r6, #4]
   10fdc:	mov	r1, r0
   10fe0:	mov	r0, #1
   10fe4:	bl	10b3c <err@plt>
   10fe8:	andeq	r3, r2, r8, lsr lr
   10fec:	andeq	r3, r1, r0, asr r3
   10ff0:	andeq	r3, r1, r4, lsl #6
   10ff4:	andeq	r3, r1, r8, lsl r3
   10ff8:	ldrdeq	r3, [r1], -r4
   10ffc:	andeq	r3, r1, r4, lsr #6
   11000:	andeq	r3, r1, r8, lsr #6
   11004:	andeq	r4, r2, r0, lsl r0
   11008:	andeq	r3, r1, r4, lsr r3
   1100c:	andeq	r4, r2, r8, lsl r0
   11010:	andeq	r3, r1, r4, asr r4
   11014:	andeq	r3, r1, r4, lsr #9
   11018:	andeq	r3, r1, r8, asr #9
   1101c:	andeq	r3, r1, r0, ror #9
   11020:	andeq	r1, r0, r9, ror #4
   11024:	strdeq	r3, [r1], -r8
   11028:	andeq	r4, r2, ip, lsl r0
   1102c:	andeq	r3, r1, r8, asr #6
   11030:	andeq	r3, r1, r4, asr r3
   11034:	andeq	r3, r1, ip, lsl #7
   11038:	andeq	r3, r1, ip, asr #7
   1103c:	ldrdeq	r3, [r1], -r8
   11040:	andeq	r3, r1, ip, ror #7
   11044:	andeq	r3, r1, ip, lsl r4
   11048:	andeq	r3, r1, r8, lsl #8
   1104c:	strdeq	r3, [r1], -ip
   11050:	andeq	r3, r1, ip, lsr #8
   11054:	andeq	r3, r1, r8, asr #8
   11058:	andeq	r3, r1, ip, ror r4
   1105c:	muleq	r1, r4, r4
   11060:	mov	fp, #0
   11064:	mov	lr, #0
   11068:	pop	{r1}		; (ldr r1, [sp], #4)
   1106c:	mov	r2, sp
   11070:	push	{r2}		; (str r2, [sp, #-4]!)
   11074:	push	{r0}		; (str r0, [sp, #-4]!)
   11078:	ldr	ip, [pc, #16]	; 11090 <strspn@plt+0x3ec>
   1107c:	push	{ip}		; (str ip, [sp, #-4]!)
   11080:	ldr	r0, [pc, #12]	; 11094 <strspn@plt+0x3f0>
   11084:	ldr	r3, [pc, #12]	; 11098 <strspn@plt+0x3f4>
   11088:	bl	10b6c <__libc_start_main@plt>
   1108c:	bl	10c8c <abort@plt>
   11090:	andeq	r3, r1, r4, asr #5
   11094:			; <UNDEFINED> instruction: 0x00010cb0
   11098:	andeq	r3, r1, r4, ror #4
   1109c:	ldr	r3, [pc, #20]	; 110b8 <strspn@plt+0x414>
   110a0:	ldr	r2, [pc, #20]	; 110bc <strspn@plt+0x418>
   110a4:	add	r3, pc, r3
   110a8:	ldr	r2, [r3, r2]
   110ac:	cmp	r2, #0
   110b0:	bxeq	lr
   110b4:	b	10b78 <__gmon_start__@plt>
   110b8:	muleq	r1, r0, lr
   110bc:	strheq	r0, [r0], -ip
   110c0:	ldr	r0, [pc, #24]	; 110e0 <strspn@plt+0x43c>
   110c4:	ldr	r3, [pc, #24]	; 110e4 <strspn@plt+0x440>
   110c8:	cmp	r3, r0
   110cc:	bxeq	lr
   110d0:	ldr	r3, [pc, #16]	; 110e8 <strspn@plt+0x444>
   110d4:	cmp	r3, #0
   110d8:	bxeq	lr
   110dc:	bx	r3
   110e0:	andeq	r4, r2, ip
   110e4:	andeq	r4, r2, ip
   110e8:	andeq	r0, r0, r0
   110ec:	ldr	r0, [pc, #36]	; 11118 <strspn@plt+0x474>
   110f0:	ldr	r1, [pc, #36]	; 1111c <strspn@plt+0x478>
   110f4:	sub	r1, r1, r0
   110f8:	asr	r1, r1, #2
   110fc:	add	r1, r1, r1, lsr #31
   11100:	asrs	r1, r1, #1
   11104:	bxeq	lr
   11108:	ldr	r3, [pc, #16]	; 11120 <strspn@plt+0x47c>
   1110c:	cmp	r3, #0
   11110:	bxeq	lr
   11114:	bx	r3
   11118:	andeq	r4, r2, ip
   1111c:	andeq	r4, r2, ip
   11120:	andeq	r0, r0, r0
   11124:	push	{r4, lr}
   11128:	ldr	r4, [pc, #24]	; 11148 <strspn@plt+0x4a4>
   1112c:	ldrb	r3, [r4]
   11130:	cmp	r3, #0
   11134:	popne	{r4, pc}
   11138:	bl	110c0 <strspn@plt+0x41c>
   1113c:	mov	r3, #1
   11140:	strb	r3, [r4]
   11144:	pop	{r4, pc}
   11148:	andeq	r4, r2, r0, lsr #32
   1114c:	b	110ec <strspn@plt+0x448>
   11150:	cmp	r0, #0
   11154:	mov	r3, #0
   11158:	str	r3, [r1]
   1115c:	bxeq	lr
   11160:	ldrsb	r2, [r0]
   11164:	cmp	r2, #47	; 0x2f
   11168:	bne	111a4 <strspn@plt+0x500>
   1116c:	ldrsb	r3, [r0, #1]
   11170:	cmp	r3, #47	; 0x2f
   11174:	bne	111ac <strspn@plt+0x508>
   11178:	add	r3, r0, #1
   1117c:	b	1118c <strspn@plt+0x4e8>
   11180:	ldrsb	r2, [r3]
   11184:	cmp	r2, #47	; 0x2f
   11188:	bne	111ac <strspn@plt+0x508>
   1118c:	cmp	r3, #0
   11190:	mov	r0, r3
   11194:	bxeq	lr
   11198:	ldrsb	r2, [r3], #1
   1119c:	cmp	r2, #47	; 0x2f
   111a0:	beq	11180 <strspn@plt+0x4dc>
   111a4:	cmp	r2, #0
   111a8:	beq	111e8 <strspn@plt+0x544>
   111ac:	mov	r3, #1
   111b0:	str	r3, [r1]
   111b4:	ldrsb	r3, [r0, #1]
   111b8:	add	r2, r0, #1
   111bc:	cmp	r3, #47	; 0x2f
   111c0:	cmpne	r3, #0
   111c4:	bxeq	lr
   111c8:	rsb	r3, r0, #1
   111cc:	add	ip, r2, r3
   111d0:	str	ip, [r1]
   111d4:	ldrsb	ip, [r2, #1]!
   111d8:	cmp	ip, #0
   111dc:	cmpne	ip, #47	; 0x2f
   111e0:	bne	111cc <strspn@plt+0x528>
   111e4:	bx	lr
   111e8:	mov	r0, r2
   111ec:	bx	lr
   111f0:	push	{r4, r5, r6, r7, r8, lr}
   111f4:	mov	r7, r1
   111f8:	ldrsb	r1, [r0]
   111fc:	cmp	r1, #0
   11200:	movne	r5, r0
   11204:	movne	r4, #0
   11208:	beq	11274 <strspn@plt+0x5d0>
   1120c:	cmp	r1, #92	; 0x5c
   11210:	addne	r6, r5, r4
   11214:	beq	11244 <strspn@plt+0x5a0>
   11218:	mov	r0, r7
   1121c:	bl	10bc0 <strchr@plt>
   11220:	cmp	r0, #0
   11224:	bne	1126c <strspn@plt+0x5c8>
   11228:	ldrsb	r1, [r6, #1]!
   1122c:	add	r4, r4, #1
   11230:	mov	r0, r4
   11234:	cmp	r1, #0
   11238:	popeq	{r4, r5, r6, r7, r8, pc}
   1123c:	cmp	r1, #92	; 0x5c
   11240:	bne	11218 <strspn@plt+0x574>
   11244:	add	r3, r5, r4
   11248:	ldrsb	r3, [r3, #1]
   1124c:	cmp	r3, #0
   11250:	beq	1126c <strspn@plt+0x5c8>
   11254:	add	r4, r4, #2
   11258:	mov	r0, r4
   1125c:	ldrsb	r1, [r5, r4]
   11260:	cmp	r1, #0
   11264:	bne	1120c <strspn@plt+0x568>
   11268:	pop	{r4, r5, r6, r7, r8, pc}
   1126c:	mov	r0, r4
   11270:	pop	{r4, r5, r6, r7, r8, pc}
   11274:	mov	r0, r1
   11278:	pop	{r4, r5, r6, r7, r8, pc}
   1127c:	ldr	ip, [pc, #244]	; 11378 <strspn@plt+0x6d4>
   11280:	push	{r4, r5, r6, r7, r8, r9, lr}
   11284:	add	ip, pc, ip
   11288:	ldr	lr, [pc, #236]	; 1137c <strspn@plt+0x6d8>
   1128c:	sub	sp, sp, #12
   11290:	mov	r5, #0
   11294:	ldr	r7, [ip, lr]
   11298:	mov	r4, r0
   1129c:	mov	r8, r1
   112a0:	ldr	r3, [r7]
   112a4:	mov	r0, ip
   112a8:	mov	r9, r2
   112ac:	str	r5, [sp]
   112b0:	str	r3, [sp, #4]
   112b4:	bl	10bd8 <__errno_location@plt>
   112b8:	cmp	r4, r5
   112bc:	str	r5, [r0]
   112c0:	beq	112d0 <strspn@plt+0x62c>
   112c4:	ldrsb	r3, [r4]
   112c8:	cmp	r3, r5
   112cc:	bne	112f0 <strspn@plt+0x64c>
   112d0:	ldr	r1, [pc, #168]	; 11380 <strspn@plt+0x6dc>
   112d4:	mov	r3, r4
   112d8:	add	r1, pc, r1
   112dc:	mov	r2, r8
   112e0:	ldr	r0, [r1]
   112e4:	ldr	r1, [pc, #152]	; 11384 <strspn@plt+0x6e0>
   112e8:	add	r1, pc, r1
   112ec:	bl	10c38 <errx@plt>
   112f0:	mov	r6, r0
   112f4:	mov	r2, r9
   112f8:	mov	r3, r5
   112fc:	mov	r1, sp
   11300:	mov	r0, r4
   11304:	bl	10b00 <__strtoull_internal@plt>
   11308:	ldr	r2, [r6]
   1130c:	cmp	r2, r5
   11310:	bne	1134c <strspn@plt+0x6a8>
   11314:	ldr	r3, [sp]
   11318:	cmp	r3, r4
   1131c:	beq	112d0 <strspn@plt+0x62c>
   11320:	cmp	r3, r5
   11324:	beq	11334 <strspn@plt+0x690>
   11328:	ldrsb	r3, [r3]
   1132c:	cmp	r3, r5
   11330:	bne	112d0 <strspn@plt+0x62c>
   11334:	ldr	r2, [sp, #4]
   11338:	ldr	r3, [r7]
   1133c:	cmp	r2, r3
   11340:	bne	11374 <strspn@plt+0x6d0>
   11344:	add	sp, sp, #12
   11348:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1134c:	ldr	r3, [pc, #52]	; 11388 <strspn@plt+0x6e4>
   11350:	cmp	r2, #34	; 0x22
   11354:	add	r3, pc, r3
   11358:	ldr	r0, [r3]
   1135c:	bne	112d0 <strspn@plt+0x62c>
   11360:	ldr	r1, [pc, #36]	; 1138c <strspn@plt+0x6e8>
   11364:	mov	r3, r4
   11368:	mov	r2, r8
   1136c:	add	r1, pc, r1
   11370:	bl	10b3c <err@plt>
   11374:	bl	10b24 <__stack_chk_fail@plt>
   11378:			; <UNDEFINED> instruction: 0x00012cb0
   1137c:	strheq	r0, [r0], -r8
   11380:	andeq	r2, r1, r8, lsr #26
   11384:	andeq	r2, r0, r8, lsr #4
   11388:	andeq	r2, r1, ip, lsr #25
   1138c:	andeq	r2, r0, r4, lsr #3
   11390:	push	{r4, lr}
   11394:	mov	r5, r0
   11398:	mov	r4, r1
   1139c:	bl	10bd8 <__errno_location@plt>
   113a0:	ldr	ip, [pc, #32]	; 113c8 <strspn@plt+0x724>
   113a4:	ldr	r1, [pc, #32]	; 113cc <strspn@plt+0x728>
   113a8:	add	ip, pc, ip
   113ac:	mov	lr, #34	; 0x22
   113b0:	mov	r3, r5
   113b4:	mov	r2, r4
   113b8:	add	r1, pc, r1
   113bc:	str	lr, [r0]
   113c0:	ldr	r0, [ip]
   113c4:	bl	10b3c <err@plt>
   113c8:	andeq	r2, r1, r8, asr ip
   113cc:	andeq	r2, r0, r8, asr r1
   113d0:	push	{r4, r5, r6, lr}
   113d4:	mov	r4, r0
   113d8:	mov	r5, r1
   113dc:	bl	1127c <strspn@plt+0x5d8>
   113e0:	mov	r3, #0
   113e4:	mvn	r2, #0
   113e8:	cmp	r1, r3
   113ec:	cmpeq	r0, r2
   113f0:	popls	{r4, r5, r6, pc}
   113f4:	mov	r1, r5
   113f8:	mov	r0, r4
   113fc:	bl	11390 <strspn@plt+0x6ec>
   11400:	ldr	r3, [pc, #8]	; 11410 <strspn@plt+0x76c>
   11404:	add	r3, pc, r3
   11408:	str	r0, [r3]
   1140c:	bx	lr
   11410:	strdeq	r2, [r1], -ip
   11414:	ldr	r3, [pc, #1648]	; 11a8c <strspn@plt+0xde8>
   11418:	ldr	ip, [pc, #1648]	; 11a90 <strspn@plt+0xdec>
   1141c:	add	r3, pc, r3
   11420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11424:	mov	r5, r1
   11428:	ldr	r1, [r3, ip]
   1142c:	sub	sp, sp, #52	; 0x34
   11430:	mov	ip, r1
   11434:	mov	r8, r0
   11438:	str	r1, [sp, #24]
   1143c:	mov	r0, #0
   11440:	mov	r1, #0
   11444:	ldr	r3, [ip]
   11448:	strd	r0, [r5]
   1144c:	mov	r9, r2
   11450:	str	r3, [sp, #44]	; 0x2c
   11454:	bl	10bd8 <__errno_location@plt>
   11458:	cmp	r8, #0
   1145c:	mov	r4, r0
   11460:	beq	11640 <strspn@plt+0x99c>
   11464:	ldrsb	fp, [r8]
   11468:	cmp	fp, #0
   1146c:	beq	11640 <strspn@plt+0x99c>
   11470:	bl	10b90 <__ctype_b_loc@plt>
   11474:	mov	r2, r8
   11478:	ldr	r1, [r0]
   1147c:	b	11484 <strspn@plt+0x7e0>
   11480:	ldrsb	fp, [r2, #1]!
   11484:	uxtb	r3, fp
   11488:	lsl	r3, r3, #1
   1148c:	ldrh	ip, [r1, r3]
   11490:	ands	ip, ip, #8192	; 0x2000
   11494:	bne	11480 <strspn@plt+0x7dc>
   11498:	cmp	fp, #45	; 0x2d
   1149c:	beq	11640 <strspn@plt+0x99c>
   114a0:	add	fp, sp, #40	; 0x28
   114a4:	mov	r3, ip
   114a8:	mov	r2, ip
   114ac:	str	ip, [r4]
   114b0:	mov	r1, fp
   114b4:	mov	r0, r8
   114b8:	str	ip, [sp, #40]	; 0x28
   114bc:	bl	10b00 <__strtoull_internal@plt>
   114c0:	ldr	sl, [sp, #40]	; 0x28
   114c4:	cmp	sl, r8
   114c8:	mov	r2, r0
   114cc:	mov	r3, r1
   114d0:	ldr	r0, [r4]
   114d4:	strd	r2, [sp, #16]
   114d8:	beq	117c0 <strspn@plt+0xb1c>
   114dc:	cmp	r0, #0
   114e0:	bne	11668 <strspn@plt+0x9c4>
   114e4:	cmp	sl, #0
   114e8:	beq	117f4 <strspn@plt+0xb50>
   114ec:	ldrsb	r0, [sl]
   114f0:	cmp	r0, #0
   114f4:	beq	117e8 <strspn@plt+0xb44>
   114f8:	mov	r8, #0
   114fc:	mov	r2, #0
   11500:	mov	r3, #0
   11504:	str	r9, [sp, #32]
   11508:	mov	r6, fp
   1150c:	mov	r9, sl
   11510:	mov	r7, r8
   11514:	mov	sl, r2
   11518:	mov	fp, r3
   1151c:	str	r5, [sp, #28]
   11520:	ldrsb	r2, [r9, #1]
   11524:	cmp	r2, #105	; 0x69
   11528:	beq	116ac <strspn@plt+0xa08>
   1152c:	bic	r1, r2, #32
   11530:	cmp	r1, #66	; 0x42
   11534:	bne	117cc <strspn@plt+0xb28>
   11538:	ldrsb	r2, [r9, #2]
   1153c:	cmp	r2, #0
   11540:	beq	119b0 <strspn@plt+0xd0c>
   11544:	bl	10c50 <localeconv@plt>
   11548:	cmp	r0, #0
   1154c:	beq	11640 <strspn@plt+0x99c>
   11550:	ldr	r2, [r0]
   11554:	cmp	r2, #0
   11558:	beq	11640 <strspn@plt+0x99c>
   1155c:	mov	r0, r2
   11560:	str	r2, [sp]
   11564:	bl	10bb4 <strlen@plt>
   11568:	orrs	r3, sl, fp
   1156c:	mov	r5, r0
   11570:	bne	11640 <strspn@plt+0x99c>
   11574:	ldrsb	r1, [r9]
   11578:	cmp	r1, #0
   1157c:	beq	11640 <strspn@plt+0x99c>
   11580:	ldr	r2, [sp]
   11584:	mov	r1, r9
   11588:	mov	r0, r2
   1158c:	mov	r2, r5
   11590:	bl	10c80 <strncmp@plt>
   11594:	cmp	r0, #0
   11598:	bne	11640 <strspn@plt+0x99c>
   1159c:	ldrsb	r2, [r9, r5]
   115a0:	add	r5, r9, r5
   115a4:	cmp	r2, #48	; 0x30
   115a8:	bne	115c8 <strspn@plt+0x924>
   115ac:	add	r8, r8, #1
   115b0:	sub	r1, r8, r5
   115b4:	mov	r3, r5
   115b8:	add	r8, r3, r1
   115bc:	ldrsb	r2, [r3, #1]!
   115c0:	cmp	r2, #48	; 0x30
   115c4:	beq	115b8 <strspn@plt+0x914>
   115c8:	mov	r3, #0
   115cc:	str	r7, [r4]
   115d0:	mov	r2, r3
   115d4:	mov	r1, r6
   115d8:	mov	r0, r5
   115dc:	str	r7, [sp, #40]	; 0x28
   115e0:	bl	10b00 <__strtoull_internal@plt>
   115e4:	ldr	r9, [sp, #40]	; 0x28
   115e8:	cmp	r9, r5
   115ec:	mov	sl, r0
   115f0:	mov	fp, r1
   115f4:	beq	117bc <strspn@plt+0xb18>
   115f8:	ldr	ip, [r4]
   115fc:	cmp	ip, #0
   11600:	beq	11698 <strspn@plt+0x9f4>
   11604:	subs	r3, r0, #1
   11608:	str	r3, [sp, #8]
   1160c:	sbc	r3, r1, #0
   11610:	str	r3, [sp, #12]
   11614:	ldrd	r2, [sp, #8]
   11618:	mvn	r1, #0
   1161c:	mvn	r0, #2
   11620:	cmp	r3, r1
   11624:	cmpeq	r2, r0
   11628:	bhi	119ec <strspn@plt+0xd48>
   1162c:	cmp	r9, #0
   11630:	beq	11640 <strspn@plt+0x99c>
   11634:	ldrsb	r2, [r9]
   11638:	cmp	r2, #0
   1163c:	bne	11520 <strspn@plt+0x87c>
   11640:	mov	r3, #22
   11644:	mvn	r0, #21
   11648:	str	r3, [r4]
   1164c:	ldr	r3, [sp, #24]
   11650:	ldr	r2, [sp, #44]	; 0x2c
   11654:	ldr	r3, [r3]
   11658:	cmp	r2, r3
   1165c:	bne	11a88 <strspn@plt+0xde4>
   11660:	add	sp, sp, #52	; 0x34
   11664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11668:	subs	r6, r2, #1
   1166c:	sbc	r7, r3, #0
   11670:	mvn	r3, #0
   11674:	mvn	r2, #2
   11678:	cmp	r7, r3
   1167c:	cmpeq	r6, r2
   11680:	bls	114e4 <strspn@plt+0x840>
   11684:	rsb	r0, r0, #0
   11688:	cmp	r0, #0
   1168c:	bge	1164c <strspn@plt+0x9a8>
   11690:	rsb	r3, r0, #0
   11694:	b	11648 <strspn@plt+0x9a4>
   11698:	orrs	r3, sl, fp
   1169c:	bne	1162c <strspn@plt+0x988>
   116a0:	ldrsb	r2, [r9, #1]
   116a4:	cmp	r2, #105	; 0x69
   116a8:	bne	1152c <strspn@plt+0x888>
   116ac:	ldrsb	r2, [r9, #2]
   116b0:	bic	r2, r2, #32
   116b4:	cmp	r2, #66	; 0x42
   116b8:	bne	11544 <strspn@plt+0x8a0>
   116bc:	ldrsb	r2, [r9, #3]
   116c0:	cmp	r2, #0
   116c4:	bne	11544 <strspn@plt+0x8a0>
   116c8:	strd	sl, [sp]
   116cc:	mov	sl, r9
   116d0:	ldr	r9, [sp, #32]
   116d4:	mov	r3, #1024	; 0x400
   116d8:	ldr	r5, [sp, #28]
   116dc:	str	r3, [sp, #28]
   116e0:	ldrsb	r7, [sl]
   116e4:	ldr	r6, [pc, #936]	; 11a94 <strspn@plt+0xdf0>
   116e8:	add	r6, pc, r6
   116ec:	mov	r1, r7
   116f0:	mov	r0, r6
   116f4:	bl	10bc0 <strchr@plt>
   116f8:	cmp	r0, #0
   116fc:	beq	119cc <strspn@plt+0xd28>
   11700:	sub	ip, r0, r6
   11704:	add	fp, ip, #1
   11708:	cmp	fp, #0
   1170c:	beq	117d8 <strspn@plt+0xb34>
   11710:	ldr	r3, [sp, #20]
   11714:	ldr	r6, [sp, #28]
   11718:	cmp	r3, #0
   1171c:	mov	r0, #0
   11720:	asr	r7, r6, #31
   11724:	mov	r1, #0
   11728:	bne	11a28 <strspn@plt+0xd84>
   1172c:	orrs	r3, r0, r1
   11730:	bne	1181c <strspn@plt+0xb78>
   11734:	str	fp, [sp, #32]
   11738:	sub	ip, ip, #1
   1173c:	str	r8, [sp, #36]	; 0x24
   11740:	mov	fp, r4
   11744:	ldrd	r0, [sp, #16]
   11748:	mov	lr, r5
   1174c:	mov	sl, r9
   11750:	b	11760 <strspn@plt+0xabc>
   11754:	orrs	r3, r4, r5
   11758:	sub	ip, ip, #1
   1175c:	bne	11804 <strspn@plt+0xb60>
   11760:	mul	r2, r0, r7
   11764:	cmn	ip, #1
   11768:	mla	r2, r6, r1, r2
   1176c:	umull	r0, r1, r0, r6
   11770:	add	r2, r2, r1
   11774:	mov	r1, r2
   11778:	beq	11990 <strspn@plt+0xcec>
   1177c:	cmp	r2, #0
   11780:	mov	r4, #0
   11784:	mov	r5, #0
   11788:	beq	11754 <strspn@plt+0xab0>
   1178c:	umull	r2, r3, r6, r2
   11790:	umull	r8, r9, r0, r6
   11794:	strd	r2, [sp, #8]
   11798:	mov	r8, r9
   1179c:	ldr	r3, [sp, #12]
   117a0:	adds	r8, r2, r8
   117a4:	mov	r2, #0
   117a8:	adc	r3, r3, r2
   117ac:	cmp	r3, r2
   117b0:	movne	r4, #1
   117b4:	movne	r5, #0
   117b8:	b	11754 <strspn@plt+0xab0>
   117bc:	ldr	r0, [r4]
   117c0:	cmp	r0, #0
   117c4:	beq	11640 <strspn@plt+0x99c>
   117c8:	b	11684 <strspn@plt+0x9e0>
   117cc:	cmp	r2, #0
   117d0:	bne	11544 <strspn@plt+0x8a0>
   117d4:	b	116c8 <strspn@plt+0xa24>
   117d8:	cmp	r9, #0
   117dc:	movne	r0, fp
   117e0:	bne	11828 <strspn@plt+0xb84>
   117e4:	mov	r0, r9
   117e8:	ldrd	r2, [sp, #16]
   117ec:	strd	r2, [r5]
   117f0:	b	1164c <strspn@plt+0x9a8>
   117f4:	ldrd	r2, [sp, #16]
   117f8:	mov	r0, sl
   117fc:	strd	r2, [r5]
   11800:	b	1164c <strspn@plt+0x9a8>
   11804:	mov	r4, fp
   11808:	ldr	r8, [sp, #36]	; 0x24
   1180c:	ldr	fp, [sp, #32]
   11810:	mov	r5, lr
   11814:	mov	r9, sl
   11818:	strd	r0, [sp, #16]
   1181c:	mvn	r0, #33	; 0x21
   11820:	cmp	r9, #0
   11824:	beq	1182c <strspn@plt+0xb88>
   11828:	str	fp, [r9]
   1182c:	ldrd	r2, [sp]
   11830:	mov	r1, r2
   11834:	orrs	r3, r1, r3
   11838:	movne	r3, #1
   1183c:	moveq	r3, #0
   11840:	cmp	fp, #0
   11844:	moveq	r3, #0
   11848:	cmp	r3, #0
   1184c:	beq	11984 <strspn@plt+0xce0>
   11850:	ldr	r3, [pc, #576]	; 11a98 <strspn@plt+0xdf4>
   11854:	ldr	r1, [pc, #576]	; 11a9c <strspn@plt+0xdf8>
   11858:	umull	ip, r3, r3, r8
   1185c:	smull	ip, r1, r1, r8
   11860:	lsr	r3, r3, #1
   11864:	rsb	r1, r1, r8, asr #31
   11868:	add	r3, r3, r3, lsl #1
   1186c:	add	r1, r1, fp
   11870:	subs	r3, r8, r3
   11874:	sub	r6, r1, #1
   11878:	bne	119f4 <strspn@plt+0xd50>
   1187c:	ldrd	r8, [sp]
   11880:	adds	r3, r8, r8
   11884:	adc	r2, r9, r9
   11888:	adds	r3, r3, r8
   1188c:	adc	r2, r2, r9
   11890:	lsl	ip, r3, #5
   11894:	lsl	lr, r2, #5
   11898:	orr	lr, lr, r3, lsr #27
   1189c:	adds	r3, r3, ip
   118a0:	adc	r2, r2, lr
   118a4:	adds	r3, r8, r3
   118a8:	str	r3, [sp]
   118ac:	ldr	r3, [sp, #4]
   118b0:	adc	r3, r3, r2
   118b4:	str	r3, [sp, #4]
   118b8:	cmp	r6, #0
   118bc:	blt	11640 <strspn@plt+0x99c>
   118c0:	beq	11968 <strspn@plt+0xcc4>
   118c4:	ldr	r3, [sp, #4]
   118c8:	ldr	r8, [sp, #28]
   118cc:	cmp	r3, #0
   118d0:	mov	r6, #0
   118d4:	asr	r9, r8, #31
   118d8:	mov	r7, #0
   118dc:	bne	11a5c <strspn@plt+0xdb8>
   118e0:	orrs	r3, r6, r7
   118e4:	bne	11968 <strspn@plt+0xcc4>
   118e8:	sub	r1, r1, #3
   118ec:	ldrd	r2, [sp]
   118f0:	mov	lr, r4
   118f4:	str	r5, [sp, #8]
   118f8:	b	11908 <strspn@plt+0xc64>
   118fc:	orrs	ip, r6, r7
   11900:	sub	r1, r1, #1
   11904:	bne	1195c <strspn@plt+0xcb8>
   11908:	mul	ip, r2, r9
   1190c:	cmn	r1, #1
   11910:	mla	ip, r8, r3, ip
   11914:	umull	r2, r3, r2, r8
   11918:	add	ip, ip, r3
   1191c:	mov	r3, ip
   11920:	beq	1195c <strspn@plt+0xcb8>
   11924:	cmp	ip, #0
   11928:	mov	r6, #0
   1192c:	mov	r7, #0
   11930:	beq	118fc <strspn@plt+0xc58>
   11934:	umull	sl, fp, r2, r8
   11938:	umull	r4, r5, r8, ip
   1193c:	mov	ip, fp
   11940:	adds	ip, r4, ip
   11944:	mov	ip, #0
   11948:	adc	ip, r5, ip
   1194c:	cmp	ip, #0
   11950:	movne	r6, #1
   11954:	movne	r7, #0
   11958:	b	118fc <strspn@plt+0xc58>
   1195c:	ldr	r5, [sp, #8]
   11960:	mov	r4, lr
   11964:	strd	r2, [sp]
   11968:	ldrd	r2, [sp]
   1196c:	ldr	r1, [sp, #16]
   11970:	adds	r1, r1, r2
   11974:	str	r1, [sp, #16]
   11978:	ldr	r1, [sp, #20]
   1197c:	adc	r3, r1, r3
   11980:	str	r3, [sp, #20]
   11984:	ldrd	r2, [sp, #16]
   11988:	strd	r2, [r5]
   1198c:	b	11688 <strspn@plt+0x9e4>
   11990:	mov	r4, fp
   11994:	strd	r0, [sp, #16]
   11998:	ldr	r8, [sp, #36]	; 0x24
   1199c:	ldr	fp, [sp, #32]
   119a0:	mov	r5, lr
   119a4:	mov	r9, sl
   119a8:	mov	r0, #0
   119ac:	b	11820 <strspn@plt+0xb7c>
   119b0:	mov	r3, #1000	; 0x3e8
   119b4:	strd	sl, [sp]
   119b8:	ldr	r5, [sp, #28]
   119bc:	mov	sl, r9
   119c0:	str	r3, [sp, #28]
   119c4:	ldr	r9, [sp, #32]
   119c8:	b	116e0 <strspn@plt+0xa3c>
   119cc:	ldr	r6, [pc, #204]	; 11aa0 <strspn@plt+0xdfc>
   119d0:	mov	r1, r7
   119d4:	add	r6, pc, r6
   119d8:	mov	r0, r6
   119dc:	bl	10bc0 <strchr@plt>
   119e0:	cmp	r0, #0
   119e4:	bne	11700 <strspn@plt+0xa5c>
   119e8:	b	11640 <strspn@plt+0x99c>
   119ec:	mov	r0, ip
   119f0:	b	11684 <strspn@plt+0x9e0>
   119f4:	cmp	r3, #1
   119f8:	bne	118b8 <strspn@plt+0xc14>
   119fc:	ldrd	r8, [sp]
   11a00:	lsl	r2, r9, #2
   11a04:	lsl	r3, r8, #2
   11a08:	adds	r3, r3, r8
   11a0c:	orr	r2, r2, r8, lsr #30
   11a10:	adc	r2, r2, r9
   11a14:	adds	r3, r3, r3
   11a18:	str	r3, [sp]
   11a1c:	adc	r3, r2, r2
   11a20:	str	r3, [sp, #4]
   11a24:	b	118b8 <strspn@plt+0xc14>
   11a28:	ldr	lr, [sp, #28]
   11a2c:	ldr	r3, [sp, #16]
   11a30:	ldr	sl, [sp, #20]
   11a34:	umull	r2, r3, r3, lr
   11a38:	str	r3, [sp, #8]
   11a3c:	mov	r3, #0
   11a40:	str	r3, [sp, #12]
   11a44:	ldrd	r2, [sp, #8]
   11a48:	umlal	r2, r3, sl, lr
   11a4c:	cmp	r3, #0
   11a50:	movne	r0, #1
   11a54:	movne	r1, #0
   11a58:	b	1172c <strspn@plt+0xa88>
   11a5c:	ldr	r3, [sp]
   11a60:	ldr	ip, [sp, #28]
   11a64:	ldr	lr, [sp, #4]
   11a68:	umull	sl, fp, r3, ip
   11a6c:	mov	r3, #0
   11a70:	mov	r2, fp
   11a74:	umlal	r2, r3, lr, ip
   11a78:	cmp	r3, #0
   11a7c:	movne	r6, #1
   11a80:	movne	r7, #0
   11a84:	b	118e0 <strspn@plt+0xc3c>
   11a88:	bl	10b24 <__stack_chk_fail@plt>
   11a8c:	andeq	r2, r1, r8, lsl fp
   11a90:	strheq	r0, [r0], -r8
   11a94:	andeq	r1, r0, r4, lsr lr
   11a98:	bge	feabc54c <stdout@@GLIBC_2.4+0xfea98530>
   11a9c:	ldrbpl	r5, [r5, #-1366]	; 0xfffffaaa
   11aa0:	andeq	r1, r0, r4, asr fp
   11aa4:	mov	r2, #0
   11aa8:	b	11414 <strspn@plt+0x770>
   11aac:	push	{r4, r5, r6, lr}
   11ab0:	subs	r5, r0, #0
   11ab4:	mov	r6, r1
   11ab8:	beq	11b24 <strspn@plt+0xe80>
   11abc:	ldrsb	r4, [r5]
   11ac0:	cmp	r4, #0
   11ac4:	beq	11b38 <strspn@plt+0xe94>
   11ac8:	bl	10b90 <__ctype_b_loc@plt>
   11acc:	mov	r3, r5
   11ad0:	ldr	r0, [r0]
   11ad4:	b	11aec <strspn@plt+0xe48>
   11ad8:	adds	r3, r3, #1
   11adc:	beq	11b24 <strspn@plt+0xe80>
   11ae0:	ldrsb	r4, [r3]
   11ae4:	cmp	r4, #0
   11ae8:	beq	11b00 <strspn@plt+0xe5c>
   11aec:	uxtb	r4, r4
   11af0:	lsl	r4, r4, #1
   11af4:	ldrh	r2, [r0, r4]
   11af8:	tst	r2, #2048	; 0x800
   11afc:	bne	11ad8 <strspn@plt+0xe34>
   11b00:	cmp	r6, #0
   11b04:	strne	r3, [r6]
   11b08:	cmp	r5, r3
   11b0c:	bcs	11b30 <strspn@plt+0xe8c>
   11b10:	ldrsb	r3, [r3]
   11b14:	cmp	r3, #0
   11b18:	bne	11b30 <strspn@plt+0xe8c>
   11b1c:	mov	r0, #1
   11b20:	pop	{r4, r5, r6, pc}
   11b24:	cmp	r6, #0
   11b28:	movne	r3, #0
   11b2c:	strne	r3, [r6]
   11b30:	mov	r0, #0
   11b34:	pop	{r4, r5, r6, pc}
   11b38:	cmp	r1, #0
   11b3c:	strne	r5, [r1]
   11b40:	b	11b30 <strspn@plt+0xe8c>
   11b44:	push	{r4, r5, r6, lr}
   11b48:	subs	r5, r0, #0
   11b4c:	mov	r6, r1
   11b50:	beq	11bbc <strspn@plt+0xf18>
   11b54:	ldrsb	r4, [r5]
   11b58:	cmp	r4, #0
   11b5c:	beq	11bd0 <strspn@plt+0xf2c>
   11b60:	bl	10b90 <__ctype_b_loc@plt>
   11b64:	mov	r3, r5
   11b68:	ldr	r0, [r0]
   11b6c:	b	11b84 <strspn@plt+0xee0>
   11b70:	adds	r3, r3, #1
   11b74:	beq	11bbc <strspn@plt+0xf18>
   11b78:	ldrsb	r4, [r3]
   11b7c:	cmp	r4, #0
   11b80:	beq	11b98 <strspn@plt+0xef4>
   11b84:	uxtb	r4, r4
   11b88:	lsl	r4, r4, #1
   11b8c:	ldrh	r2, [r0, r4]
   11b90:	tst	r2, #4096	; 0x1000
   11b94:	bne	11b70 <strspn@plt+0xecc>
   11b98:	cmp	r6, #0
   11b9c:	strne	r3, [r6]
   11ba0:	cmp	r5, r3
   11ba4:	bcs	11bc8 <strspn@plt+0xf24>
   11ba8:	ldrsb	r3, [r3]
   11bac:	cmp	r3, #0
   11bb0:	bne	11bc8 <strspn@plt+0xf24>
   11bb4:	mov	r0, #1
   11bb8:	pop	{r4, r5, r6, pc}
   11bbc:	cmp	r6, #0
   11bc0:	movne	r3, #0
   11bc4:	strne	r3, [r6]
   11bc8:	mov	r0, #0
   11bcc:	pop	{r4, r5, r6, pc}
   11bd0:	cmp	r1, #0
   11bd4:	strne	r5, [r1]
   11bd8:	b	11bc8 <strspn@plt+0xf24>
   11bdc:	push	{r1, r2, r3}
   11be0:	ldr	r3, [pc, #188]	; 11ca4 <strspn@plt+0x1000>
   11be4:	ldr	r2, [pc, #188]	; 11ca8 <strspn@plt+0x1004>
   11be8:	add	r3, pc, r3
   11bec:	push	{r4, r5, r6, r7, r8, lr}
   11bf0:	sub	sp, sp, #12
   11bf4:	ldr	r7, [r3, r2]
   11bf8:	ldr	r8, [sp, #36]	; 0x24
   11bfc:	mov	r6, r0
   11c00:	ldr	r3, [r7]
   11c04:	add	r4, sp, #48	; 0x30
   11c08:	str	r3, [sp, #4]
   11c0c:	b	11c28 <strspn@plt+0xf84>
   11c10:	mov	r1, r5
   11c14:	mov	r0, r6
   11c18:	bl	10ab8 <strcmp@plt>
   11c1c:	add	r4, r4, #8
   11c20:	cmp	r0, #0
   11c24:	beq	11c60 <strspn@plt+0xfbc>
   11c28:	ldr	r1, [r4, #-8]
   11c2c:	sub	r3, r4, #4
   11c30:	cmp	r1, #0
   11c34:	str	r3, [sp]
   11c38:	beq	11c80 <strspn@plt+0xfdc>
   11c3c:	ldr	r5, [r4, #-4]
   11c40:	str	r4, [sp]
   11c44:	cmp	r5, #0
   11c48:	beq	11c80 <strspn@plt+0xfdc>
   11c4c:	mov	r0, r6
   11c50:	bl	10ab8 <strcmp@plt>
   11c54:	cmp	r0, #0
   11c58:	bne	11c10 <strspn@plt+0xf6c>
   11c5c:	mov	r0, #1
   11c60:	ldr	r2, [sp, #4]
   11c64:	ldr	r3, [r7]
   11c68:	cmp	r2, r3
   11c6c:	bne	11ca0 <strspn@plt+0xffc>
   11c70:	add	sp, sp, #12
   11c74:	pop	{r4, r5, r6, r7, r8, lr}
   11c78:	add	sp, sp, #12
   11c7c:	bx	lr
   11c80:	ldr	r1, [pc, #36]	; 11cac <strspn@plt+0x1008>
   11c84:	mov	r3, r6
   11c88:	add	r1, pc, r1
   11c8c:	mov	r2, r8
   11c90:	ldr	r0, [r1]
   11c94:	ldr	r1, [pc, #20]	; 11cb0 <strspn@plt+0x100c>
   11c98:	add	r1, pc, r1
   11c9c:	bl	10c38 <errx@plt>
   11ca0:	bl	10b24 <__stack_chk_fail@plt>
   11ca4:	andeq	r2, r1, ip, asr #6
   11ca8:	strheq	r0, [r0], -r8
   11cac:	andeq	r2, r1, r8, ror r3
   11cb0:	andeq	r1, r0, r8, ror r8
   11cb4:	cmp	r1, #0
   11cb8:	beq	11d04 <strspn@plt+0x1060>
   11cbc:	ldrsb	r3, [r0]
   11cc0:	cmp	r3, #0
   11cc4:	beq	11d04 <strspn@plt+0x1060>
   11cc8:	sxtb	r2, r2
   11ccc:	cmp	r3, r2
   11cd0:	bxeq	lr
   11cd4:	add	r1, r0, r1
   11cd8:	add	r3, r0, #1
   11cdc:	b	11cf8 <strspn@plt+0x1054>
   11ce0:	ldrsb	ip, [r3]
   11ce4:	add	r3, r3, #1
   11ce8:	cmp	ip, #0
   11cec:	beq	11d04 <strspn@plt+0x1060>
   11cf0:	cmp	ip, r2
   11cf4:	bxeq	lr
   11cf8:	cmp	r3, r1
   11cfc:	mov	r0, r3
   11d00:	bne	11ce0 <strspn@plt+0x103c>
   11d04:	mov	r0, #0
   11d08:	bx	lr
   11d0c:	push	{r4, r5, r6, lr}
   11d10:	mov	r2, #10
   11d14:	mov	r4, r0
   11d18:	mov	r5, r1
   11d1c:	bl	113d0 <strspn@plt+0x72c>
   11d20:	cmp	r0, #65536	; 0x10000
   11d24:	bcs	11d30 <strspn@plt+0x108c>
   11d28:	uxth	r0, r0
   11d2c:	pop	{r4, r5, r6, pc}
   11d30:	mov	r1, r5
   11d34:	mov	r0, r4
   11d38:	bl	11390 <strspn@plt+0x6ec>
   11d3c:	push	{r4, r5, r6, lr}
   11d40:	mov	r2, #16
   11d44:	mov	r4, r0
   11d48:	mov	r5, r1
   11d4c:	bl	113d0 <strspn@plt+0x72c>
   11d50:	cmp	r0, #65536	; 0x10000
   11d54:	bcs	11d60 <strspn@plt+0x10bc>
   11d58:	uxth	r0, r0
   11d5c:	pop	{r4, r5, r6, pc}
   11d60:	mov	r1, r5
   11d64:	mov	r0, r4
   11d68:	bl	11390 <strspn@plt+0x6ec>
   11d6c:	mov	r2, #10
   11d70:	b	113d0 <strspn@plt+0x72c>
   11d74:	mov	r2, #16
   11d78:	b	113d0 <strspn@plt+0x72c>
   11d7c:	ldr	r2, [pc, #236]	; 11e70 <strspn@plt+0x11cc>
   11d80:	ldr	ip, [pc, #236]	; 11e74 <strspn@plt+0x11d0>
   11d84:	add	r2, pc, r2
   11d88:	push	{r4, r5, r6, r7, r8, lr}
   11d8c:	sub	sp, sp, #8
   11d90:	ldr	r7, [r2, ip]
   11d94:	mov	r5, #0
   11d98:	mov	r4, r0
   11d9c:	ldr	r3, [r7]
   11da0:	mov	r8, r1
   11da4:	str	r5, [sp]
   11da8:	str	r3, [sp, #4]
   11dac:	bl	10bd8 <__errno_location@plt>
   11db0:	cmp	r4, r5
   11db4:	str	r5, [r0]
   11db8:	beq	11dc8 <strspn@plt+0x1124>
   11dbc:	ldrsb	r3, [r4]
   11dc0:	cmp	r3, r5
   11dc4:	bne	11de8 <strspn@plt+0x1144>
   11dc8:	ldr	r1, [pc, #168]	; 11e78 <strspn@plt+0x11d4>
   11dcc:	mov	r3, r4
   11dd0:	add	r1, pc, r1
   11dd4:	mov	r2, r8
   11dd8:	ldr	r0, [r1]
   11ddc:	ldr	r1, [pc, #152]	; 11e7c <strspn@plt+0x11d8>
   11de0:	add	r1, pc, r1
   11de4:	bl	10c38 <errx@plt>
   11de8:	mov	r6, r0
   11dec:	mov	r2, #10
   11df0:	mov	r3, r5
   11df4:	mov	r1, sp
   11df8:	mov	r0, r4
   11dfc:	bl	10c5c <__strtoll_internal@plt>
   11e00:	ldr	r2, [r6]
   11e04:	cmp	r2, r5
   11e08:	bne	11e44 <strspn@plt+0x11a0>
   11e0c:	ldr	r3, [sp]
   11e10:	cmp	r3, r4
   11e14:	beq	11dc8 <strspn@plt+0x1124>
   11e18:	cmp	r3, r5
   11e1c:	beq	11e2c <strspn@plt+0x1188>
   11e20:	ldrsb	r3, [r3]
   11e24:	cmp	r3, r5
   11e28:	bne	11dc8 <strspn@plt+0x1124>
   11e2c:	ldr	r2, [sp, #4]
   11e30:	ldr	r3, [r7]
   11e34:	cmp	r2, r3
   11e38:	bne	11e6c <strspn@plt+0x11c8>
   11e3c:	add	sp, sp, #8
   11e40:	pop	{r4, r5, r6, r7, r8, pc}
   11e44:	ldr	r3, [pc, #52]	; 11e80 <strspn@plt+0x11dc>
   11e48:	cmp	r2, #34	; 0x22
   11e4c:	add	r3, pc, r3
   11e50:	ldr	r0, [r3]
   11e54:	bne	11dc8 <strspn@plt+0x1124>
   11e58:	ldr	r1, [pc, #36]	; 11e84 <strspn@plt+0x11e0>
   11e5c:	mov	r3, r4
   11e60:	mov	r2, r8
   11e64:	add	r1, pc, r1
   11e68:	bl	10b3c <err@plt>
   11e6c:	bl	10b24 <__stack_chk_fail@plt>
   11e70:			; <UNDEFINED> instruction: 0x000121b0
   11e74:	strheq	r0, [r0], -r8
   11e78:	andeq	r2, r1, r0, lsr r2
   11e7c:	andeq	r1, r0, r0, lsr r7
   11e80:			; <UNDEFINED> instruction: 0x000121b4
   11e84:	andeq	r1, r0, ip, lsr #13
   11e88:	push	{r4, r5, r6, r7, r8, lr}
   11e8c:	mov	r7, r0
   11e90:	mov	r6, r1
   11e94:	bl	11d7c <strspn@plt+0x10d8>
   11e98:	mov	r3, #0
   11e9c:	mvn	r2, #0
   11ea0:	adds	r4, r0, #-2147483648	; 0x80000000
   11ea4:	adc	r5, r1, #0
   11ea8:	cmp	r5, r3
   11eac:	cmpeq	r4, r2
   11eb0:	popls	{r4, r5, r6, r7, r8, pc}
   11eb4:	bl	10bd8 <__errno_location@plt>
   11eb8:	ldr	ip, [pc, #32]	; 11ee0 <strspn@plt+0x123c>
   11ebc:	ldr	r1, [pc, #32]	; 11ee4 <strspn@plt+0x1240>
   11ec0:	add	ip, pc, ip
   11ec4:	mov	lr, #34	; 0x22
   11ec8:	mov	r3, r7
   11ecc:	mov	r2, r6
   11ed0:	add	r1, pc, r1
   11ed4:	str	lr, [r0]
   11ed8:	ldr	r0, [ip]
   11edc:	bl	10b3c <err@plt>
   11ee0:	andeq	r2, r1, r0, asr #2
   11ee4:	andeq	r1, r0, r0, asr #12
   11ee8:	push	{r4, r5, r6, lr}
   11eec:	mov	r5, r0
   11ef0:	mov	r4, r1
   11ef4:	bl	11e88 <strspn@plt+0x11e4>
   11ef8:	add	r3, r0, #32768	; 0x8000
   11efc:	cmp	r3, #65536	; 0x10000
   11f00:	bcs	11f0c <strspn@plt+0x1268>
   11f04:	sxth	r0, r0
   11f08:	pop	{r4, r5, r6, pc}
   11f0c:	bl	10bd8 <__errno_location@plt>
   11f10:	ldr	ip, [pc, #32]	; 11f38 <strspn@plt+0x1294>
   11f14:	ldr	r1, [pc, #32]	; 11f3c <strspn@plt+0x1298>
   11f18:	add	ip, pc, ip
   11f1c:	mov	lr, #34	; 0x22
   11f20:	mov	r3, r5
   11f24:	mov	r2, r4
   11f28:	add	r1, pc, r1
   11f2c:	str	lr, [r0]
   11f30:	ldr	r0, [ip]
   11f34:	bl	10b3c <err@plt>
   11f38:	andeq	r2, r1, r8, ror #1
   11f3c:	andeq	r1, r0, r8, ror #11
   11f40:	mov	r2, #10
   11f44:	b	1127c <strspn@plt+0x5d8>
   11f48:	mov	r2, #16
   11f4c:	b	1127c <strspn@plt+0x5d8>
   11f50:	ldr	r2, [pc, #228]	; 1203c <strspn@plt+0x1398>
   11f54:	ldr	r3, [pc, #228]	; 12040 <strspn@plt+0x139c>
   11f58:	add	r2, pc, r2
   11f5c:	push	{r4, r5, r6, r7, r8, lr}
   11f60:	sub	sp, sp, #8
   11f64:	ldr	r7, [r2, r3]
   11f68:	mov	r5, #0
   11f6c:	mov	r4, r0
   11f70:	ldr	r3, [r7]
   11f74:	mov	r8, r1
   11f78:	str	r5, [sp]
   11f7c:	str	r3, [sp, #4]
   11f80:	bl	10bd8 <__errno_location@plt>
   11f84:	cmp	r4, r5
   11f88:	str	r5, [r0]
   11f8c:	beq	11f9c <strspn@plt+0x12f8>
   11f90:	ldrsb	r3, [r4]
   11f94:	cmp	r3, r5
   11f98:	bne	11fbc <strspn@plt+0x1318>
   11f9c:	ldr	r1, [pc, #160]	; 12044 <strspn@plt+0x13a0>
   11fa0:	mov	r3, r4
   11fa4:	add	r1, pc, r1
   11fa8:	mov	r2, r8
   11fac:	ldr	r0, [r1]
   11fb0:	ldr	r1, [pc, #144]	; 12048 <strspn@plt+0x13a4>
   11fb4:	add	r1, pc, r1
   11fb8:	bl	10c38 <errx@plt>
   11fbc:	mov	r6, r0
   11fc0:	mov	r1, sp
   11fc4:	mov	r0, r4
   11fc8:	bl	10c14 <strtod@plt>
   11fcc:	ldr	r2, [r6]
   11fd0:	cmp	r2, r5
   11fd4:	bne	12010 <strspn@plt+0x136c>
   11fd8:	ldr	r3, [sp]
   11fdc:	cmp	r3, r4
   11fe0:	beq	11f9c <strspn@plt+0x12f8>
   11fe4:	cmp	r3, r5
   11fe8:	beq	11ff8 <strspn@plt+0x1354>
   11fec:	ldrsb	r3, [r3]
   11ff0:	cmp	r3, r5
   11ff4:	bne	11f9c <strspn@plt+0x12f8>
   11ff8:	ldr	r2, [sp, #4]
   11ffc:	ldr	r3, [r7]
   12000:	cmp	r2, r3
   12004:	bne	12038 <strspn@plt+0x1394>
   12008:	add	sp, sp, #8
   1200c:	pop	{r4, r5, r6, r7, r8, pc}
   12010:	ldr	r3, [pc, #52]	; 1204c <strspn@plt+0x13a8>
   12014:	cmp	r2, #34	; 0x22
   12018:	add	r3, pc, r3
   1201c:	ldr	r0, [r3]
   12020:	bne	11f9c <strspn@plt+0x12f8>
   12024:	ldr	r1, [pc, #36]	; 12050 <strspn@plt+0x13ac>
   12028:	mov	r3, r4
   1202c:	mov	r2, r8
   12030:	add	r1, pc, r1
   12034:	bl	10b3c <err@plt>
   12038:	bl	10b24 <__stack_chk_fail@plt>
   1203c:	ldrdeq	r1, [r1], -ip
   12040:	strheq	r0, [r0], -r8
   12044:	andeq	r2, r1, ip, asr r0
   12048:	andeq	r1, r0, ip, asr r5
   1204c:	andeq	r1, r1, r8, ror #31
   12050:	andeq	r1, r0, r0, ror #9
   12054:	ldr	r2, [pc, #232]	; 12144 <strspn@plt+0x14a0>
   12058:	ldr	r3, [pc, #232]	; 12148 <strspn@plt+0x14a4>
   1205c:	add	r2, pc, r2
   12060:	push	{r4, r5, r6, r7, r8, lr}
   12064:	sub	sp, sp, #8
   12068:	ldr	r7, [r2, r3]
   1206c:	mov	r5, #0
   12070:	mov	r4, r0
   12074:	ldr	r3, [r7]
   12078:	mov	r8, r1
   1207c:	str	r5, [sp]
   12080:	str	r3, [sp, #4]
   12084:	bl	10bd8 <__errno_location@plt>
   12088:	cmp	r4, r5
   1208c:	str	r5, [r0]
   12090:	beq	120a0 <strspn@plt+0x13fc>
   12094:	ldrsb	r3, [r4]
   12098:	cmp	r3, r5
   1209c:	bne	120c0 <strspn@plt+0x141c>
   120a0:	ldr	r1, [pc, #164]	; 1214c <strspn@plt+0x14a8>
   120a4:	mov	r3, r4
   120a8:	add	r1, pc, r1
   120ac:	mov	r2, r8
   120b0:	ldr	r0, [r1]
   120b4:	ldr	r1, [pc, #148]	; 12150 <strspn@plt+0x14ac>
   120b8:	add	r1, pc, r1
   120bc:	bl	10c38 <errx@plt>
   120c0:	mov	r6, r0
   120c4:	mov	r2, #10
   120c8:	mov	r1, sp
   120cc:	mov	r0, r4
   120d0:	bl	10ac4 <strtol@plt>
   120d4:	ldr	r2, [r6]
   120d8:	cmp	r2, r5
   120dc:	bne	12118 <strspn@plt+0x1474>
   120e0:	ldr	r3, [sp]
   120e4:	cmp	r3, r4
   120e8:	beq	120a0 <strspn@plt+0x13fc>
   120ec:	cmp	r3, r5
   120f0:	beq	12100 <strspn@plt+0x145c>
   120f4:	ldrsb	r3, [r3]
   120f8:	cmp	r3, r5
   120fc:	bne	120a0 <strspn@plt+0x13fc>
   12100:	ldr	r2, [sp, #4]
   12104:	ldr	r3, [r7]
   12108:	cmp	r2, r3
   1210c:	bne	12140 <strspn@plt+0x149c>
   12110:	add	sp, sp, #8
   12114:	pop	{r4, r5, r6, r7, r8, pc}
   12118:	ldr	r3, [pc, #52]	; 12154 <strspn@plt+0x14b0>
   1211c:	cmp	r2, #34	; 0x22
   12120:	add	r3, pc, r3
   12124:	ldr	r0, [r3]
   12128:	bne	120a0 <strspn@plt+0x13fc>
   1212c:	ldr	r1, [pc, #36]	; 12158 <strspn@plt+0x14b4>
   12130:	mov	r3, r4
   12134:	mov	r2, r8
   12138:	add	r1, pc, r1
   1213c:	bl	10b3c <err@plt>
   12140:	bl	10b24 <__stack_chk_fail@plt>
   12144:	ldrdeq	r1, [r1], -r8
   12148:	strheq	r0, [r0], -r8
   1214c:	andeq	r1, r1, r8, asr pc
   12150:	andeq	r1, r0, r8, asr r4
   12154:	andeq	r1, r1, r0, ror #29
   12158:	ldrdeq	r1, [r0], -r8
   1215c:	ldr	r2, [pc, #232]	; 1224c <strspn@plt+0x15a8>
   12160:	ldr	r3, [pc, #232]	; 12250 <strspn@plt+0x15ac>
   12164:	add	r2, pc, r2
   12168:	push	{r4, r5, r6, r7, r8, lr}
   1216c:	sub	sp, sp, #8
   12170:	ldr	r7, [r2, r3]
   12174:	mov	r5, #0
   12178:	mov	r4, r0
   1217c:	ldr	r3, [r7]
   12180:	mov	r8, r1
   12184:	str	r5, [sp]
   12188:	str	r3, [sp, #4]
   1218c:	bl	10bd8 <__errno_location@plt>
   12190:	cmp	r4, r5
   12194:	str	r5, [r0]
   12198:	beq	121a8 <strspn@plt+0x1504>
   1219c:	ldrsb	r3, [r4]
   121a0:	cmp	r3, r5
   121a4:	bne	121c8 <strspn@plt+0x1524>
   121a8:	ldr	r1, [pc, #164]	; 12254 <strspn@plt+0x15b0>
   121ac:	mov	r3, r4
   121b0:	add	r1, pc, r1
   121b4:	mov	r2, r8
   121b8:	ldr	r0, [r1]
   121bc:	ldr	r1, [pc, #148]	; 12258 <strspn@plt+0x15b4>
   121c0:	add	r1, pc, r1
   121c4:	bl	10c38 <errx@plt>
   121c8:	mov	r6, r0
   121cc:	mov	r2, #10
   121d0:	mov	r1, sp
   121d4:	mov	r0, r4
   121d8:	bl	10ba8 <strtoul@plt>
   121dc:	ldr	r2, [r6]
   121e0:	cmp	r2, r5
   121e4:	bne	12220 <strspn@plt+0x157c>
   121e8:	ldr	r3, [sp]
   121ec:	cmp	r3, r4
   121f0:	beq	121a8 <strspn@plt+0x1504>
   121f4:	cmp	r3, r5
   121f8:	beq	12208 <strspn@plt+0x1564>
   121fc:	ldrsb	r3, [r3]
   12200:	cmp	r3, r5
   12204:	bne	121a8 <strspn@plt+0x1504>
   12208:	ldr	r2, [sp, #4]
   1220c:	ldr	r3, [r7]
   12210:	cmp	r2, r3
   12214:	bne	12248 <strspn@plt+0x15a4>
   12218:	add	sp, sp, #8
   1221c:	pop	{r4, r5, r6, r7, r8, pc}
   12220:	ldr	r3, [pc, #52]	; 1225c <strspn@plt+0x15b8>
   12224:	cmp	r2, #34	; 0x22
   12228:	add	r3, pc, r3
   1222c:	ldr	r0, [r3]
   12230:	bne	121a8 <strspn@plt+0x1504>
   12234:	ldr	r1, [pc, #36]	; 12260 <strspn@plt+0x15bc>
   12238:	mov	r3, r4
   1223c:	mov	r2, r8
   12240:	add	r1, pc, r1
   12244:	bl	10b3c <err@plt>
   12248:	bl	10b24 <__stack_chk_fail@plt>
   1224c:	ldrdeq	r1, [r1], -r0
   12250:	strheq	r0, [r0], -r8
   12254:	andeq	r1, r1, r0, asr lr
   12258:	andeq	r1, r0, r0, asr r3
   1225c:	ldrdeq	r1, [r1], -r8
   12260:	ldrdeq	r1, [r0], -r0
   12264:	ldr	r3, [pc, #140]	; 122f8 <strspn@plt+0x1654>
   12268:	ldr	r2, [pc, #140]	; 122fc <strspn@plt+0x1658>
   1226c:	add	r3, pc, r3
   12270:	push	{r4, r5, r6, lr}
   12274:	sub	sp, sp, #16
   12278:	ldr	r4, [r3, r2]
   1227c:	mov	r5, r1
   12280:	mov	r1, sp
   12284:	ldr	r3, [r4]
   12288:	mov	r6, r0
   1228c:	str	r3, [sp, #12]
   12290:	bl	11aa4 <strspn@plt+0xe00>
   12294:	cmp	r0, #0
   12298:	beq	122d8 <strspn@plt+0x1634>
   1229c:	bl	10bd8 <__errno_location@plt>
   122a0:	ldr	r3, [pc, #88]	; 12300 <strspn@plt+0x165c>
   122a4:	mov	r2, r5
   122a8:	ldr	r1, [pc, r3]
   122ac:	ldr	r3, [r0]
   122b0:	mov	r0, r1
   122b4:	cmp	r3, #0
   122b8:	mov	r3, r6
   122bc:	beq	122cc <strspn@plt+0x1628>
   122c0:	ldr	r1, [pc, #60]	; 12304 <strspn@plt+0x1660>
   122c4:	add	r1, pc, r1
   122c8:	bl	10b3c <err@plt>
   122cc:	ldr	r1, [pc, #52]	; 12308 <strspn@plt+0x1664>
   122d0:	add	r1, pc, r1
   122d4:	bl	10c38 <errx@plt>
   122d8:	ldr	r2, [sp, #12]
   122dc:	ldr	r3, [r4]
   122e0:	ldrd	r0, [sp]
   122e4:	cmp	r2, r3
   122e8:	bne	122f4 <strspn@plt+0x1650>
   122ec:	add	sp, sp, #16
   122f0:	pop	{r4, r5, r6, pc}
   122f4:	bl	10b24 <__stack_chk_fail@plt>
   122f8:	andeq	r1, r1, r8, asr #25
   122fc:	strheq	r0, [r0], -r8
   12300:	andeq	r1, r1, r8, asr sp
   12304:	andeq	r1, r0, ip, asr #4
   12308:	andeq	r1, r0, r0, asr #4
   1230c:	push	{r4, lr}
   12310:	mov	r4, r1
   12314:	mov	r1, r2
   12318:	bl	11f50 <strspn@plt+0x12ac>
   1231c:	vldr	d6, [pc, #28]	; 12340 <strspn@plt+0x169c>
   12320:	vcvt.s32.f64	s15, d0
   12324:	vcvt.f64.s32	d5, s15
   12328:	vstr	s15, [r4]
   1232c:	vsub.f64	d0, d0, d5
   12330:	vmul.f64	d0, d0, d6
   12334:	vcvt.s32.f64	s0, d0
   12338:	vstr	s0, [r4, #4]
   1233c:	pop	{r4, pc}
   12340:	andeq	r0, r0, r0
   12344:	smlawbmi	lr, r0, r4, r8
   12348:	and	r2, r0, #61440	; 0xf000
   1234c:	cmp	r2, #16384	; 0x4000
   12350:	moveq	r2, r1
   12354:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12358:	moveq	sl, #100	; 0x64
   1235c:	mov	r3, r0
   12360:	add	r9, r1, #1
   12364:	add	r8, r1, #2
   12368:	add	r7, r1, #3
   1236c:	add	r6, r1, #4
   12370:	add	r5, r1, #5
   12374:	add	r4, r1, #6
   12378:	add	lr, r1, #7
   1237c:	add	ip, r1, #8
   12380:	add	r0, r1, #9
   12384:	strbeq	sl, [r2], #10
   12388:	beq	1242c <strspn@plt+0x1788>
   1238c:	cmp	r2, #40960	; 0xa000
   12390:	moveq	r2, r1
   12394:	moveq	sl, #108	; 0x6c
   12398:	strbeq	sl, [r2], #10
   1239c:	beq	1242c <strspn@plt+0x1788>
   123a0:	cmp	r2, #8192	; 0x2000
   123a4:	moveq	r2, r1
   123a8:	moveq	sl, #99	; 0x63
   123ac:	strbeq	sl, [r2], #10
   123b0:	beq	1242c <strspn@plt+0x1788>
   123b4:	cmp	r2, #24576	; 0x6000
   123b8:	moveq	r2, r1
   123bc:	moveq	sl, #98	; 0x62
   123c0:	strbeq	sl, [r2], #10
   123c4:	beq	1242c <strspn@plt+0x1788>
   123c8:	cmp	r2, #49152	; 0xc000
   123cc:	moveq	r2, r1
   123d0:	moveq	sl, #115	; 0x73
   123d4:	strbeq	sl, [r2], #10
   123d8:	beq	1242c <strspn@plt+0x1788>
   123dc:	cmp	r2, #4096	; 0x1000
   123e0:	moveq	r2, r1
   123e4:	moveq	sl, #112	; 0x70
   123e8:	strbeq	sl, [r2], #10
   123ec:	beq	1242c <strspn@plt+0x1788>
   123f0:	cmp	r2, #32768	; 0x8000
   123f4:	moveq	r2, r1
   123f8:	moveq	sl, #45	; 0x2d
   123fc:	strbeq	sl, [r2], #10
   12400:	beq	1242c <strspn@plt+0x1788>
   12404:	mov	r2, r0
   12408:	mov	r0, ip
   1240c:	mov	ip, lr
   12410:	mov	lr, r4
   12414:	mov	r4, r5
   12418:	mov	r5, r6
   1241c:	mov	r6, r7
   12420:	mov	r7, r8
   12424:	mov	r8, r9
   12428:	mov	r9, r1
   1242c:	tst	r3, #256	; 0x100
   12430:	movne	fp, #114	; 0x72
   12434:	moveq	fp, #45	; 0x2d
   12438:	tst	r3, #128	; 0x80
   1243c:	movne	sl, #119	; 0x77
   12440:	moveq	sl, #45	; 0x2d
   12444:	tst	r3, #2048	; 0x800
   12448:	strb	fp, [r9]
   1244c:	and	r9, r3, #64	; 0x40
   12450:	strb	sl, [r8]
   12454:	beq	124f0 <strspn@plt+0x184c>
   12458:	cmp	r9, #0
   1245c:	movne	r9, #115	; 0x73
   12460:	moveq	r9, #83	; 0x53
   12464:	tst	r3, #32
   12468:	movne	r8, #114	; 0x72
   1246c:	moveq	r8, #45	; 0x2d
   12470:	tst	r3, #16
   12474:	strb	r9, [r7]
   12478:	movne	r7, #119	; 0x77
   1247c:	moveq	r7, #45	; 0x2d
   12480:	tst	r3, #1024	; 0x400
   12484:	strb	r8, [r6]
   12488:	and	r6, r3, #8
   1248c:	strb	r7, [r5]
   12490:	beq	12500 <strspn@plt+0x185c>
   12494:	cmp	r6, #0
   12498:	movne	r6, #115	; 0x73
   1249c:	moveq	r6, #83	; 0x53
   124a0:	tst	r3, #4
   124a4:	movne	r5, #114	; 0x72
   124a8:	moveq	r5, #45	; 0x2d
   124ac:	tst	r3, #2
   124b0:	strb	r6, [r4]
   124b4:	movne	r4, #119	; 0x77
   124b8:	moveq	r4, #45	; 0x2d
   124bc:	tst	r3, #512	; 0x200
   124c0:	strb	r5, [lr]
   124c4:	and	r3, r3, #1
   124c8:	strb	r4, [ip]
   124cc:	beq	12510 <strspn@plt+0x186c>
   124d0:	cmp	r3, #0
   124d4:	movne	ip, #116	; 0x74
   124d8:	moveq	ip, #84	; 0x54
   124dc:	mov	r3, #0
   124e0:	strb	ip, [r0]
   124e4:	mov	r0, r1
   124e8:	strb	r3, [r2]
   124ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124f0:	cmp	r9, #0
   124f4:	movne	r9, #120	; 0x78
   124f8:	moveq	r9, #45	; 0x2d
   124fc:	b	12464 <strspn@plt+0x17c0>
   12500:	cmp	r6, #0
   12504:	movne	r6, #120	; 0x78
   12508:	moveq	r6, #45	; 0x2d
   1250c:	b	124a0 <strspn@plt+0x17fc>
   12510:	cmp	r3, #0
   12514:	movne	ip, #120	; 0x78
   12518:	moveq	ip, #45	; 0x2d
   1251c:	b	124dc <strspn@plt+0x1838>
   12520:	ldr	r1, [pc, #680]	; 127d0 <strspn@plt+0x1b2c>
   12524:	ldr	ip, [pc, #680]	; 127d4 <strspn@plt+0x1b30>
   12528:	add	r1, pc, r1
   1252c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12530:	sub	sp, sp, #108	; 0x6c
   12534:	ldr	r8, [r1, ip]
   12538:	tst	r0, #2
   1253c:	strd	r2, [sp, #32]
   12540:	ldr	r1, [r8]
   12544:	addeq	r9, sp, #60	; 0x3c
   12548:	str	r1, [sp, #100]	; 0x64
   1254c:	ldrd	r2, [sp, #32]
   12550:	movne	r1, #32
   12554:	strbne	r1, [sp, #60]	; 0x3c
   12558:	addne	ip, sp, #61	; 0x3d
   1255c:	addne	r9, sp, #60	; 0x3c
   12560:	moveq	ip, r9
   12564:	mov	r1, #10
   12568:	mov	sl, #1
   1256c:	sub	lr, r1, #32
   12570:	lsl	r4, sl, r1
   12574:	lsl	r5, sl, lr
   12578:	rsb	lr, r1, #32
   1257c:	orr	r5, r5, sl, lsr lr
   12580:	cmp	r3, r5
   12584:	cmpeq	r2, r4
   12588:	bcc	12744 <strspn@plt+0x1aa0>
   1258c:	add	r1, r1, #10
   12590:	cmp	r1, #70	; 0x46
   12594:	bne	1256c <strspn@plt+0x18c8>
   12598:	mov	lr, ip
   1259c:	strd	r2, [sp, #32]
   125a0:	mov	r4, r2
   125a4:	tst	r0, #1
   125a8:	mov	r2, #69	; 0x45
   125ac:	bic	r5, r3, #-268435456	; 0xf0000000
   125b0:	lsr	sl, r3, #28
   125b4:	strb	r2, [lr], #1
   125b8:	bne	1272c <strspn@plt+0x1a88>
   125bc:	orrs	r3, r4, r5
   125c0:	mov	r3, #0
   125c4:	strb	r3, [lr]
   125c8:	beq	1276c <strspn@plt+0x1ac8>
   125cc:	sub	r2, r1, #20
   125d0:	rsb	r0, r2, #32
   125d4:	lsr	r3, r4, r2
   125d8:	sub	r1, r1, #52	; 0x34
   125dc:	orr	r3, r3, r5, lsl r0
   125e0:	orr	r3, r3, r5, lsr r1
   125e4:	lsr	r2, r5, r2
   125e8:	adds	r6, r3, #50	; 0x32
   125ec:	adc	r7, r2, #0
   125f0:	mov	r3, #0
   125f4:	mov	r2, #100	; 0x64
   125f8:	mov	r0, r6
   125fc:	mov	r1, r7
   12600:	bl	130f0 <strspn@plt+0x244c>
   12604:	cmp	r1, #0
   12608:	cmpeq	r0, #10
   1260c:	mov	r2, r0
   12610:	mov	r3, r1
   12614:	addeq	sl, sl, #1
   12618:	beq	1276c <strspn@plt+0x1ac8>
   1261c:	cmp	r7, #0
   12620:	cmpeq	r6, #99	; 0x63
   12624:	strd	r2, [sp, #32]
   12628:	bls	1276c <strspn@plt+0x1ac8>
   1262c:	bl	10c50 <localeconv@plt>
   12630:	ldrd	r2, [sp, #32]
   12634:	cmp	r0, #0
   12638:	beq	127b4 <strspn@plt+0x1b10>
   1263c:	ldr	r0, [r0]
   12640:	cmp	r0, #0
   12644:	beq	127c0 <strspn@plt+0x1b1c>
   12648:	ldrsb	r1, [r0]
   1264c:	cmp	r1, #0
   12650:	ldreq	r0, [pc, #384]	; 127d8 <strspn@plt+0x1b34>
   12654:	addeq	r0, pc, r0
   12658:	ldr	r1, [pc, #380]	; 127dc <strspn@plt+0x1b38>
   1265c:	strd	r2, [sp, #16]
   12660:	add	r1, pc, r1
   12664:	add	r4, sp, #68	; 0x44
   12668:	mov	r3, #32
   1266c:	str	r0, [sp, #8]
   12670:	str	r1, [sp]
   12674:	str	r9, [sp, #24]
   12678:	str	sl, [sp, #4]
   1267c:	mov	r0, r4
   12680:	mov	r1, r3
   12684:	mov	r2, #1
   12688:	bl	10c98 <__snprintf_chk@plt>
   1268c:	b	12794 <strspn@plt+0x1af0>
   12690:	ldr	r4, [pc, #328]	; 127e0 <strspn@plt+0x1b3c>
   12694:	mvn	sl, #0
   12698:	ldr	fp, [pc, #324]	; 127e4 <strspn@plt+0x1b40>
   1269c:	umull	r2, r3, lr, r4
   126a0:	sub	r4, r1, #42	; 0x2a
   126a4:	strd	r2, [sp, #40]	; 0x28
   126a8:	ldr	r3, [sp, #44]	; 0x2c
   126ac:	lsl	r2, sl, lr
   126b0:	lsr	r3, r3, #3
   126b4:	str	r3, [sp, #52]	; 0x34
   126b8:	ldr	r3, [sp, #32]
   126bc:	str	r4, [sp, #48]	; 0x30
   126c0:	orr	r4, r2, sl, lsl r4
   126c4:	lsr	r2, r3, lr
   126c8:	mov	r3, r2
   126cc:	ldr	r2, [sp, #52]	; 0x34
   126d0:	add	fp, pc, fp
   126d4:	str	r4, [sp, #40]	; 0x28
   126d8:	ldrsb	fp, [fp, r2]
   126dc:	mov	r2, r3
   126e0:	ldr	r3, [sp, #36]	; 0x24
   126e4:	rsb	r5, lr, #32
   126e8:	ldr	r4, [sp, #40]	; 0x28
   126ec:	orr	r2, r2, r3, lsl r5
   126f0:	orr	r4, r4, sl, lsr r5
   126f4:	ldr	r3, [sp, #32]
   126f8:	str	r4, [sp, #40]	; 0x28
   126fc:	cmp	r0, #0
   12700:	bic	r4, r3, sl, lsl lr
   12704:	ldr	r0, [sp, #36]	; 0x24
   12708:	ldr	r3, [sp, #48]	; 0x30
   1270c:	mov	lr, ip
   12710:	orr	sl, r2, r0, lsr r3
   12714:	ldr	r3, [sp, #40]	; 0x28
   12718:	strb	fp, [lr], #1
   1271c:	bic	r5, r0, r3
   12720:	beq	125bc <strspn@plt+0x1918>
   12724:	cmp	fp, #66	; 0x42
   12728:	beq	125bc <strspn@plt+0x1918>
   1272c:	mov	r3, #105	; 0x69
   12730:	strb	r3, [ip, #1]
   12734:	mov	r3, #66	; 0x42
   12738:	add	lr, ip, #3
   1273c:	strb	r3, [ip, #2]
   12740:	b	125bc <strspn@plt+0x1918>
   12744:	subs	lr, r1, #10
   12748:	strd	r2, [sp, #32]
   1274c:	and	r0, r0, #1
   12750:	bne	12690 <strspn@plt+0x19ec>
   12754:	ldr	sl, [sp, #32]
   12758:	cmp	r0, #0
   1275c:	movne	r0, lr
   12760:	mov	r3, #66	; 0x42
   12764:	strb	r0, [ip, #1]
   12768:	strb	r3, [ip]
   1276c:	ldr	r2, [pc, #116]	; 127e8 <strspn@plt+0x1b44>
   12770:	add	r4, sp, #68	; 0x44
   12774:	add	r2, pc, r2
   12778:	mov	r3, #32
   1277c:	stm	sp, {r2, sl}
   12780:	str	r9, [sp, #8]
   12784:	mov	r0, r4
   12788:	mov	r1, r3
   1278c:	mov	r2, #1
   12790:	bl	10c98 <__snprintf_chk@plt>
   12794:	mov	r0, r4
   12798:	bl	10b18 <strdup@plt>
   1279c:	ldr	r2, [sp, #100]	; 0x64
   127a0:	ldr	r3, [r8]
   127a4:	cmp	r2, r3
   127a8:	bne	127cc <strspn@plt+0x1b28>
   127ac:	add	sp, sp, #108	; 0x6c
   127b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127b4:	ldr	r0, [pc, #48]	; 127ec <strspn@plt+0x1b48>
   127b8:	add	r0, pc, r0
   127bc:	b	12658 <strspn@plt+0x19b4>
   127c0:	ldr	r0, [pc, #40]	; 127f0 <strspn@plt+0x1b4c>
   127c4:	add	r0, pc, r0
   127c8:	b	12658 <strspn@plt+0x19b4>
   127cc:	bl	10b24 <__stack_chk_fail@plt>
   127d0:	andeq	r1, r1, ip, lsl #20
   127d4:	strheq	r0, [r0], -r8
   127d8:	andeq	r0, r0, r0, ror #29
   127dc:	andeq	r0, r0, r0, ror #29
   127e0:	stclgt	12, cr12, [ip], {205}	; 0xcd
   127e4:	andeq	r0, r0, r8, ror #28
   127e8:	ldrdeq	r0, [r0], -r8
   127ec:	andeq	r0, r0, ip, ror sp
   127f0:	andeq	r0, r0, r0, ror sp
   127f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127f8:	subs	r4, r0, #0
   127fc:	beq	128cc <strspn@plt+0x1c28>
   12800:	ldrsb	lr, [r4]
   12804:	cmp	lr, #0
   12808:	beq	128cc <strspn@plt+0x1c28>
   1280c:	cmp	r1, #0
   12810:	clz	ip, r2
   12814:	lsr	ip, ip, #5
   12818:	moveq	r0, #1
   1281c:	movne	r0, ip
   12820:	cmp	r3, #0
   12824:	moveq	r0, #1
   12828:	cmp	r0, #0
   1282c:	bne	128cc <strspn@plt+0x1c28>
   12830:	mov	r8, r3
   12834:	mov	r7, r2
   12838:	mov	r9, r1
   1283c:	mov	r5, r0
   12840:	b	1289c <strspn@plt+0x1bf8>
   12844:	cmp	r3, #0
   12848:	bne	12888 <strspn@plt+0x1be4>
   1284c:	cmn	r4, #1
   12850:	add	r6, r4, #1
   12854:	beq	128d4 <strspn@plt+0x1c30>
   12858:	cmp	r0, r6
   1285c:	bcs	128cc <strspn@plt+0x1c28>
   12860:	sub	r1, r6, r0
   12864:	blx	r8
   12868:	cmn	r0, #1
   1286c:	beq	128cc <strspn@plt+0x1c28>
   12870:	str	r0, [r9, r5, lsl #2]
   12874:	ldrsb	r3, [r6]
   12878:	add	r5, r5, #1
   1287c:	cmp	r3, #0
   12880:	beq	128d4 <strspn@plt+0x1c30>
   12884:	mov	r0, #0
   12888:	cmn	r4, #1
   1288c:	beq	128d4 <strspn@plt+0x1c30>
   12890:	ldrsb	lr, [r4, #1]!
   12894:	cmp	lr, #0
   12898:	beq	128d4 <strspn@plt+0x1c30>
   1289c:	cmp	r7, r5
   128a0:	mov	r6, r4
   128a4:	bls	128dc <strspn@plt+0x1c38>
   128a8:	cmp	r0, #0
   128ac:	moveq	r0, r4
   128b0:	cmp	lr, #44	; 0x2c
   128b4:	ldrsb	r3, [r4, #1]
   128b8:	bne	12844 <strspn@plt+0x1ba0>
   128bc:	cmp	r3, #0
   128c0:	beq	1284c <strspn@plt+0x1ba8>
   128c4:	cmp	r0, r6
   128c8:	bcc	12860 <strspn@plt+0x1bbc>
   128cc:	mvn	r0, #0
   128d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128d4:	mov	r0, r5
   128d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128dc:	mvn	r0, #1
   128e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128e4:	cmp	r0, #0
   128e8:	beq	12954 <strspn@plt+0x1cb0>
   128ec:	push	{r4, lr}
   128f0:	mov	r4, r3
   128f4:	cmp	r4, #0
   128f8:	ldrsb	ip, [r0]
   128fc:	clz	r3, ip
   12900:	lsr	r3, r3, #5
   12904:	moveq	r3, #1
   12908:	cmp	r3, #0
   1290c:	bne	1294c <strspn@plt+0x1ca8>
   12910:	ldr	lr, [r4]
   12914:	cmp	lr, r2
   12918:	bhi	1294c <strspn@plt+0x1ca8>
   1291c:	cmp	ip, #43	; 0x2b
   12920:	strne	r3, [r4]
   12924:	addeq	r0, r0, #1
   12928:	ldr	r3, [sp, #8]
   1292c:	addeq	r1, r1, lr, lsl #2
   12930:	subeq	r2, r2, lr
   12934:	bl	127f4 <strspn@plt+0x1b50>
   12938:	cmp	r0, #0
   1293c:	ldrgt	r3, [r4]
   12940:	addgt	r3, r3, r0
   12944:	strgt	r3, [r4]
   12948:	pop	{r4, pc}
   1294c:	mvn	r0, #0
   12950:	pop	{r4, pc}
   12954:	mvn	r0, #0
   12958:	bx	lr
   1295c:	cmp	r2, #0
   12960:	clz	r3, r1
   12964:	lsr	r3, r3, #5
   12968:	moveq	r3, #1
   1296c:	cmp	r0, #0
   12970:	moveq	r3, #1
   12974:	cmp	r3, #0
   12978:	bne	12a44 <strspn@plt+0x1da0>
   1297c:	push	{r4, r5, r6, r7, r8, lr}
   12980:	mov	r6, r2
   12984:	mov	r2, r3
   12988:	ldrsb	r3, [r0]
   1298c:	mov	r8, r1
   12990:	mov	r4, r0
   12994:	mov	r7, #1
   12998:	cmp	r3, #0
   1299c:	beq	12a0c <strspn@plt+0x1d68>
   129a0:	cmp	r2, #0
   129a4:	moveq	r2, r4
   129a8:	cmp	r3, #44	; 0x2c
   129ac:	mov	r5, r4
   129b0:	ldrsb	r3, [r4, #1]!
   129b4:	beq	12a14 <strspn@plt+0x1d70>
   129b8:	cmp	r3, #0
   129bc:	bne	12a34 <strspn@plt+0x1d90>
   129c0:	mov	r5, r4
   129c4:	cmp	r2, r5
   129c8:	sub	r1, r5, r2
   129cc:	mov	r0, r2
   129d0:	bcs	12a2c <strspn@plt+0x1d88>
   129d4:	blx	r6
   129d8:	mov	r2, r4
   129dc:	cmp	r0, #0
   129e0:	and	r1, r0, #7
   129e4:	poplt	{r4, r5, r6, r7, r8, pc}
   129e8:	ldrb	r3, [r8, r0, asr #3]
   129ec:	orr	r3, r3, r7, lsl r1
   129f0:	strb	r3, [r8, r0, asr #3]
   129f4:	ldrsb	r3, [r5]
   129f8:	cmp	r3, #0
   129fc:	beq	12a0c <strspn@plt+0x1d68>
   12a00:	ldrsb	r3, [r4]
   12a04:	cmp	r3, #0
   12a08:	bne	129a8 <strspn@plt+0x1d04>
   12a0c:	mov	r0, #0
   12a10:	pop	{r4, r5, r6, r7, r8, pc}
   12a14:	cmp	r3, #0
   12a18:	moveq	r5, r4
   12a1c:	cmp	r2, r5
   12a20:	sub	r1, r5, r2
   12a24:	mov	r0, r2
   12a28:	bcc	129d4 <strspn@plt+0x1d30>
   12a2c:	mvn	r0, #0
   12a30:	pop	{r4, r5, r6, r7, r8, pc}
   12a34:	adds	r4, r5, #1
   12a38:	bne	12998 <strspn@plt+0x1cf4>
   12a3c:	mov	r0, #0
   12a40:	pop	{r4, r5, r6, r7, r8, pc}
   12a44:	mvn	r0, #21
   12a48:	bx	lr
   12a4c:	cmp	r2, #0
   12a50:	clz	r3, r1
   12a54:	lsr	r3, r3, #5
   12a58:	moveq	r3, #1
   12a5c:	cmp	r0, #0
   12a60:	moveq	r3, #1
   12a64:	cmp	r3, #0
   12a68:	bne	12b2c <strspn@plt+0x1e88>
   12a6c:	push	{r4, r5, r6, r7, r8, lr}
   12a70:	mov	r6, r2
   12a74:	mov	r2, r3
   12a78:	ldrsb	r3, [r0]
   12a7c:	mov	r7, r1
   12a80:	mov	r4, r0
   12a84:	cmp	r3, #0
   12a88:	beq	12af4 <strspn@plt+0x1e50>
   12a8c:	cmp	r2, #0
   12a90:	moveq	r2, r4
   12a94:	cmp	r3, #44	; 0x2c
   12a98:	mov	r5, r4
   12a9c:	ldrsb	r3, [r4, #1]!
   12aa0:	beq	12afc <strspn@plt+0x1e58>
   12aa4:	cmp	r3, #0
   12aa8:	bne	12b1c <strspn@plt+0x1e78>
   12aac:	mov	r5, r4
   12ab0:	cmp	r2, r5
   12ab4:	sub	r1, r5, r2
   12ab8:	mov	r0, r2
   12abc:	bcs	12b14 <strspn@plt+0x1e70>
   12ac0:	blx	r6
   12ac4:	mov	r2, r4
   12ac8:	cmp	r0, #0
   12acc:	poplt	{r4, r5, r6, r7, r8, pc}
   12ad0:	ldr	r3, [r7]
   12ad4:	orr	r3, r3, r0
   12ad8:	str	r3, [r7]
   12adc:	ldrsb	r3, [r5]
   12ae0:	cmp	r3, #0
   12ae4:	beq	12af4 <strspn@plt+0x1e50>
   12ae8:	ldrsb	r3, [r4]
   12aec:	cmp	r3, #0
   12af0:	bne	12a94 <strspn@plt+0x1df0>
   12af4:	mov	r0, #0
   12af8:	pop	{r4, r5, r6, r7, r8, pc}
   12afc:	cmp	r3, #0
   12b00:	moveq	r5, r4
   12b04:	cmp	r2, r5
   12b08:	sub	r1, r5, r2
   12b0c:	mov	r0, r2
   12b10:	bcc	12ac0 <strspn@plt+0x1e1c>
   12b14:	mvn	r0, #0
   12b18:	pop	{r4, r5, r6, r7, r8, pc}
   12b1c:	adds	r4, r5, #1
   12b20:	bne	12a84 <strspn@plt+0x1de0>
   12b24:	mov	r0, #0
   12b28:	pop	{r4, r5, r6, r7, r8, pc}
   12b2c:	mvn	r0, #21
   12b30:	bx	lr
   12b34:	ldr	ip, [pc, #396]	; 12cc8 <strspn@plt+0x2024>
   12b38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b3c:	add	ip, pc, ip
   12b40:	ldr	lr, [pc, #388]	; 12ccc <strspn@plt+0x2028>
   12b44:	sub	sp, sp, #8
   12b48:	mov	r9, r3
   12b4c:	ldr	r5, [ip, lr]
   12b50:	mov	sl, #0
   12b54:	subs	r4, r0, #0
   12b58:	ldr	r3, [r5]
   12b5c:	mov	r7, r1
   12b60:	str	sl, [sp]
   12b64:	mov	r1, ip
   12b68:	str	r3, [sp, #4]
   12b6c:	beq	12be0 <strspn@plt+0x1f3c>
   12b70:	str	r9, [r7]
   12b74:	str	r9, [r2]
   12b78:	mov	r6, r2
   12b7c:	bl	10bd8 <__errno_location@plt>
   12b80:	str	sl, [r0]
   12b84:	ldrsb	r3, [r4]
   12b88:	mov	r8, r0
   12b8c:	cmp	r3, #58	; 0x3a
   12b90:	beq	12bfc <strspn@plt+0x1f58>
   12b94:	mov	sl, sp
   12b98:	mov	r1, sl
   12b9c:	mov	r2, #10
   12ba0:	mov	r0, r4
   12ba4:	bl	10ac4 <strtol@plt>
   12ba8:	str	r0, [r7]
   12bac:	str	r0, [r6]
   12bb0:	ldr	r0, [r8]
   12bb4:	cmp	r0, #0
   12bb8:	bne	12c4c <strspn@plt+0x1fa8>
   12bbc:	ldr	r2, [sp]
   12bc0:	cmp	r2, #0
   12bc4:	cmpne	r2, r4
   12bc8:	beq	12c4c <strspn@plt+0x1fa8>
   12bcc:	ldrsb	r3, [r2]
   12bd0:	cmp	r3, #58	; 0x3a
   12bd4:	beq	12c54 <strspn@plt+0x1fb0>
   12bd8:	cmp	r3, #45	; 0x2d
   12bdc:	beq	12c64 <strspn@plt+0x1fc0>
   12be0:	mov	r0, #0
   12be4:	ldr	r2, [sp, #4]
   12be8:	ldr	r3, [r5]
   12bec:	cmp	r2, r3
   12bf0:	bne	12cc4 <strspn@plt+0x2020>
   12bf4:	add	sp, sp, #8
   12bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bfc:	add	r4, r4, #1
   12c00:	mov	r0, r4
   12c04:	mov	r2, #10
   12c08:	mov	r1, sp
   12c0c:	bl	10ac4 <strtol@plt>
   12c10:	str	r0, [r6]
   12c14:	ldr	r3, [r8]
   12c18:	cmp	r3, #0
   12c1c:	bne	12c4c <strspn@plt+0x1fa8>
   12c20:	ldr	r3, [sp]
   12c24:	cmp	r3, #0
   12c28:	beq	12c4c <strspn@plt+0x1fa8>
   12c2c:	ldrsb	r2, [r3]
   12c30:	sub	r3, r3, r4
   12c34:	clz	r3, r3
   12c38:	cmp	r2, #0
   12c3c:	lsr	r3, r3, #5
   12c40:	movne	r3, #1
   12c44:	cmp	r3, #0
   12c48:	beq	12be0 <strspn@plt+0x1f3c>
   12c4c:	mvn	r0, #0
   12c50:	b	12be4 <strspn@plt+0x1f40>
   12c54:	ldrsb	r3, [r2, #1]
   12c58:	cmp	r3, #0
   12c5c:	streq	r9, [r6]
   12c60:	beq	12be4 <strspn@plt+0x1f40>
   12c64:	mov	r3, #0
   12c68:	add	r4, r2, #1
   12c6c:	str	r3, [r8]
   12c70:	mov	r1, sl
   12c74:	mov	r0, r4
   12c78:	mov	r2, #10
   12c7c:	str	r3, [sp]
   12c80:	bl	10ac4 <strtol@plt>
   12c84:	str	r0, [r6]
   12c88:	ldr	r3, [r8]
   12c8c:	cmp	r3, #0
   12c90:	bne	12c4c <strspn@plt+0x1fa8>
   12c94:	ldr	r2, [sp]
   12c98:	cmp	r2, #0
   12c9c:	beq	12c4c <strspn@plt+0x1fa8>
   12ca0:	ldrsb	r3, [r2]
   12ca4:	sub	r2, r2, r4
   12ca8:	clz	r2, r2
   12cac:	cmp	r3, #0
   12cb0:	lsr	r2, r2, #5
   12cb4:	movne	r2, #1
   12cb8:	cmp	r2, #0
   12cbc:	beq	12be0 <strspn@plt+0x1f3c>
   12cc0:	b	12c4c <strspn@plt+0x1fa8>
   12cc4:	bl	10b24 <__stack_chk_fail@plt>
   12cc8:	strdeq	r1, [r1], -r8
   12ccc:	strheq	r0, [r0], -r8
   12cd0:	ldr	r3, [pc, #244]	; 12dcc <strspn@plt+0x2128>
   12cd4:	ldr	r2, [pc, #244]	; 12dd0 <strspn@plt+0x212c>
   12cd8:	add	r3, pc, r3
   12cdc:	push	{r4, r5, r6, r7, r8, r9, lr}
   12ce0:	sub	sp, sp, #20
   12ce4:	ldr	r9, [r3, r2]
   12ce8:	cmp	r0, #0
   12cec:	cmpne	r1, #0
   12cf0:	ldr	r3, [r9]
   12cf4:	str	r3, [sp, #12]
   12cf8:	beq	12dc0 <strspn@plt+0x211c>
   12cfc:	mov	r4, r1
   12d00:	add	r8, sp, #4
   12d04:	add	r7, sp, #8
   12d08:	b	12d48 <strspn@plt+0x20a4>
   12d0c:	cmp	r4, r3
   12d10:	bne	12dc0 <strspn@plt+0x211c>
   12d14:	mov	r2, r4
   12d18:	mov	r1, r6
   12d1c:	mov	r0, r5
   12d20:	bl	10c80 <strncmp@plt>
   12d24:	cmp	r0, #0
   12d28:	bne	12dc0 <strspn@plt+0x211c>
   12d2c:	adds	r0, r5, r4
   12d30:	moveq	r3, #0
   12d34:	movne	r3, #1
   12d38:	adds	r4, r6, r4
   12d3c:	moveq	r3, #0
   12d40:	cmp	r3, #0
   12d44:	beq	12dc0 <strspn@plt+0x211c>
   12d48:	mov	r1, r8
   12d4c:	bl	11150 <strspn@plt+0x4ac>
   12d50:	mov	r1, r7
   12d54:	mov	r5, r0
   12d58:	mov	r0, r4
   12d5c:	bl	11150 <strspn@plt+0x4ac>
   12d60:	ldr	r4, [sp, #4]
   12d64:	ldr	r3, [sp, #8]
   12d68:	mov	r6, r0
   12d6c:	adds	r0, r4, r3
   12d70:	beq	12da4 <strspn@plt+0x2100>
   12d74:	cmp	r0, #1
   12d78:	bne	12d0c <strspn@plt+0x2068>
   12d7c:	cmp	r5, #0
   12d80:	beq	12d90 <strspn@plt+0x20ec>
   12d84:	ldrsb	r2, [r5]
   12d88:	cmp	r2, #47	; 0x2f
   12d8c:	beq	12da8 <strspn@plt+0x2104>
   12d90:	cmp	r6, #0
   12d94:	beq	12d0c <strspn@plt+0x2068>
   12d98:	ldrsb	r2, [r6]
   12d9c:	cmp	r2, #47	; 0x2f
   12da0:	bne	12d0c <strspn@plt+0x2068>
   12da4:	mov	r0, #1
   12da8:	ldr	r2, [sp, #12]
   12dac:	ldr	r3, [r9]
   12db0:	cmp	r2, r3
   12db4:	bne	12dc8 <strspn@plt+0x2124>
   12db8:	add	sp, sp, #20
   12dbc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12dc0:	mov	r0, #0
   12dc4:	b	12da8 <strspn@plt+0x2104>
   12dc8:	bl	10b24 <__stack_chk_fail@plt>
   12dcc:	andeq	r1, r1, ip, asr r2
   12dd0:	strheq	r0, [r0], -r8
   12dd4:	orrs	r3, r0, r1
   12dd8:	beq	12e54 <strspn@plt+0x21b0>
   12ddc:	cmp	r0, #0
   12de0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12de4:	mov	r4, r1
   12de8:	mov	r5, r0
   12dec:	beq	12e60 <strspn@plt+0x21bc>
   12df0:	cmp	r1, #0
   12df4:	beq	12e70 <strspn@plt+0x21cc>
   12df8:	mov	r6, r2
   12dfc:	bl	10bb4 <strlen@plt>
   12e00:	mvn	r3, r0
   12e04:	cmp	r6, r3
   12e08:	mov	r7, r0
   12e0c:	movhi	r8, #0
   12e10:	bhi	12e4c <strspn@plt+0x21a8>
   12e14:	add	r9, r6, r0
   12e18:	add	r0, r9, #1
   12e1c:	bl	10b60 <malloc@plt>
   12e20:	subs	r8, r0, #0
   12e24:	beq	12e4c <strspn@plt+0x21a8>
   12e28:	mov	r1, r5
   12e2c:	mov	r2, r7
   12e30:	bl	10af4 <memcpy@plt>
   12e34:	mov	r2, r6
   12e38:	mov	r1, r4
   12e3c:	add	r0, r8, r7
   12e40:	bl	10af4 <memcpy@plt>
   12e44:	mov	r3, #0
   12e48:	strb	r3, [r8, r9]
   12e4c:	mov	r0, r8
   12e50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e54:	ldr	r0, [pc, #28]	; 12e78 <strspn@plt+0x21d4>
   12e58:	add	r0, pc, r0
   12e5c:	b	10b18 <strdup@plt>
   12e60:	mov	r0, r4
   12e64:	mov	r1, r2
   12e68:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e6c:	b	10ae8 <strndup@plt>
   12e70:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e74:	b	10b18 <strdup@plt>
   12e78:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12e7c:	push	{r4, r5, r6, lr}
   12e80:	subs	r4, r1, #0
   12e84:	mov	r5, r0
   12e88:	moveq	r2, r4
   12e8c:	beq	12e9c <strspn@plt+0x21f8>
   12e90:	mov	r0, r4
   12e94:	bl	10bb4 <strlen@plt>
   12e98:	mov	r2, r0
   12e9c:	mov	r1, r4
   12ea0:	mov	r0, r5
   12ea4:	pop	{r4, r5, r6, lr}
   12ea8:	b	12dd4 <strspn@plt+0x2130>
   12eac:	push	{r1, r2, r3}
   12eb0:	ldr	r1, [pc, #132]	; 12f3c <strspn@plt+0x2298>
   12eb4:	ldr	r3, [pc, #132]	; 12f40 <strspn@plt+0x229c>
   12eb8:	add	r1, pc, r1
   12ebc:	push	{r4, r5, lr}
   12ec0:	mov	r5, r0
   12ec4:	ldr	r4, [r1, r3]
   12ec8:	sub	sp, sp, #16
   12ecc:	add	ip, sp, #32
   12ed0:	ldr	r0, [r4]
   12ed4:	ldr	r2, [sp, #28]
   12ed8:	str	r0, [sp, #12]
   12edc:	mov	r3, ip
   12ee0:	add	r0, sp, #8
   12ee4:	mov	r1, #1
   12ee8:	str	ip, [sp, #4]
   12eec:	bl	10be4 <__vasprintf_chk@plt>
   12ef0:	subs	r2, r0, #0
   12ef4:	movlt	r5, #0
   12ef8:	blt	12f14 <strspn@plt+0x2270>
   12efc:	mov	r0, r5
   12f00:	ldr	r1, [sp, #8]
   12f04:	bl	12dd4 <strspn@plt+0x2130>
   12f08:	mov	r5, r0
   12f0c:	ldr	r0, [sp, #8]
   12f10:	bl	10adc <free@plt>
   12f14:	ldr	r2, [sp, #12]
   12f18:	ldr	r3, [r4]
   12f1c:	mov	r0, r5
   12f20:	cmp	r2, r3
   12f24:	bne	12f38 <strspn@plt+0x2294>
   12f28:	add	sp, sp, #16
   12f2c:	pop	{r4, r5, lr}
   12f30:	add	sp, sp, #12
   12f34:	bx	lr
   12f38:	bl	10b24 <__stack_chk_fail@plt>
   12f3c:	andeq	r1, r1, ip, ror r0
   12f40:	strheq	r0, [r0], -r8
   12f44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f48:	mov	r6, r0
   12f4c:	ldr	r0, [pc, #348]	; 130b0 <strspn@plt+0x240c>
   12f50:	ldr	ip, [pc, #348]	; 130b4 <strspn@plt+0x2410>
   12f54:	add	r0, pc, r0
   12f58:	ldr	r5, [r6]
   12f5c:	ldr	r8, [r0, ip]
   12f60:	sub	sp, sp, #8
   12f64:	ldrsb	r4, [r5]
   12f68:	mov	r9, r2
   12f6c:	ldr	r2, [r8]
   12f70:	cmp	r4, #0
   12f74:	mov	r7, r1
   12f78:	str	r2, [sp, #4]
   12f7c:	mov	r1, r0
   12f80:	beq	13030 <strspn@plt+0x238c>
   12f84:	mov	r0, r5
   12f88:	mov	r1, r9
   12f8c:	mov	sl, r3
   12f90:	bl	10ca4 <strspn@plt>
   12f94:	add	r4, r5, r0
   12f98:	ldrsb	r5, [r5, r0]
   12f9c:	cmp	r5, #0
   12fa0:	beq	13098 <strspn@plt+0x23f4>
   12fa4:	cmp	sl, #0
   12fa8:	beq	1304c <strspn@plt+0x23a8>
   12fac:	ldr	r0, [pc, #260]	; 130b8 <strspn@plt+0x2414>
   12fb0:	mov	r1, r5
   12fb4:	add	r0, pc, r0
   12fb8:	bl	10bc0 <strchr@plt>
   12fbc:	cmp	r0, #0
   12fc0:	beq	13068 <strspn@plt+0x23c4>
   12fc4:	add	sl, r4, #1
   12fc8:	mov	r3, #0
   12fcc:	mov	r0, sl
   12fd0:	mov	r1, sp
   12fd4:	strb	r5, [sp]
   12fd8:	strb	r3, [sp, #1]
   12fdc:	bl	111f0 <strspn@plt+0x54c>
   12fe0:	add	r3, r4, r0
   12fe4:	str	r0, [r7]
   12fe8:	ldrsb	r3, [r3, #1]
   12fec:	subs	r5, r5, r3
   12ff0:	movne	r5, #1
   12ff4:	cmp	r3, #0
   12ff8:	moveq	r5, #1
   12ffc:	cmp	r5, #0
   13000:	bne	13098 <strspn@plt+0x23f4>
   13004:	add	r0, r0, #2
   13008:	add	r5, r4, r0
   1300c:	ldrsb	r1, [r4, r0]
   13010:	cmp	r1, #0
   13014:	beq	13028 <strspn@plt+0x2384>
   13018:	mov	r0, r9
   1301c:	bl	10bc0 <strchr@plt>
   13020:	cmp	r0, #0
   13024:	beq	13098 <strspn@plt+0x23f4>
   13028:	mov	r4, sl
   1302c:	str	r5, [r6]
   13030:	ldr	r2, [sp, #4]
   13034:	ldr	r3, [r8]
   13038:	mov	r0, r4
   1303c:	cmp	r2, r3
   13040:	bne	130ac <strspn@plt+0x2408>
   13044:	add	sp, sp, #8
   13048:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1304c:	mov	r1, r9
   13050:	mov	r0, r4
   13054:	bl	10ad0 <strcspn@plt>
   13058:	add	r3, r4, r0
   1305c:	str	r0, [r7]
   13060:	str	r3, [r6]
   13064:	b	13030 <strspn@plt+0x238c>
   13068:	mov	r1, r9
   1306c:	mov	r0, r4
   13070:	bl	111f0 <strspn@plt+0x54c>
   13074:	str	r0, [r7]
   13078:	ldrsb	r1, [r4, r0]
   1307c:	add	r5, r4, r0
   13080:	cmp	r1, #0
   13084:	beq	130a4 <strspn@plt+0x2400>
   13088:	mov	r0, r9
   1308c:	bl	10bc0 <strchr@plt>
   13090:	cmp	r0, #0
   13094:	bne	130a4 <strspn@plt+0x2400>
   13098:	str	r4, [r6]
   1309c:	mov	r4, #0
   130a0:	b	13030 <strspn@plt+0x238c>
   130a4:	str	r5, [r6]
   130a8:	b	13030 <strspn@plt+0x238c>
   130ac:	bl	10b24 <__stack_chk_fail@plt>
   130b0:	andeq	r0, r1, r0, ror #31
   130b4:	strheq	r0, [r0], -r8
   130b8:	andeq	r0, r0, r0, lsr #11
   130bc:	push	{r4, lr}
   130c0:	mov	r4, r0
   130c4:	b	130d0 <strspn@plt+0x242c>
   130c8:	cmp	r0, #10
   130cc:	beq	130e8 <strspn@plt+0x2444>
   130d0:	mov	r0, r4
   130d4:	bl	10bfc <fgetc@plt>
   130d8:	cmn	r0, #1
   130dc:	bne	130c8 <strspn@plt+0x2424>
   130e0:	mov	r0, #1
   130e4:	pop	{r4, pc}
   130e8:	mov	r0, #0
   130ec:	pop	{r4, pc}
   130f0:	cmp	r3, #0
   130f4:	cmpeq	r2, #0
   130f8:	bne	13110 <strspn@plt+0x246c>
   130fc:	cmp	r1, #0
   13100:	cmpeq	r0, #0
   13104:	mvnne	r1, #0
   13108:	mvnne	r0, #0
   1310c:	b	1312c <strspn@plt+0x2488>
   13110:	sub	sp, sp, #8
   13114:	push	{sp, lr}
   13118:	bl	1313c <strspn@plt+0x2498>
   1311c:	ldr	lr, [sp, #4]
   13120:	add	sp, sp, #8
   13124:	pop	{r2, r3}
   13128:	bx	lr
   1312c:	push	{r1, lr}
   13130:	mov	r0, #8
   13134:	bl	10aac <raise@plt>
   13138:	pop	{r1, pc}
   1313c:	cmp	r1, r3
   13140:	cmpeq	r0, r2
   13144:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13148:	mov	r4, r0
   1314c:	movcc	r0, #0
   13150:	mov	r5, r1
   13154:	ldr	lr, [sp, #36]	; 0x24
   13158:	movcc	r1, r0
   1315c:	bcc	13258 <strspn@plt+0x25b4>
   13160:	cmp	r3, #0
   13164:	clzeq	ip, r2
   13168:	clzne	ip, r3
   1316c:	addeq	ip, ip, #32
   13170:	cmp	r5, #0
   13174:	clzeq	r1, r4
   13178:	addeq	r1, r1, #32
   1317c:	clzne	r1, r5
   13180:	sub	ip, ip, r1
   13184:	sub	sl, ip, #32
   13188:	lsl	r9, r3, ip
   1318c:	rsb	fp, ip, #32
   13190:	orr	r9, r9, r2, lsl sl
   13194:	orr	r9, r9, r2, lsr fp
   13198:	lsl	r8, r2, ip
   1319c:	cmp	r5, r9
   131a0:	cmpeq	r4, r8
   131a4:	movcc	r0, #0
   131a8:	movcc	r1, r0
   131ac:	bcc	131c8 <strspn@plt+0x2524>
   131b0:	mov	r0, #1
   131b4:	subs	r4, r4, r8
   131b8:	lsl	r1, r0, sl
   131bc:	orr	r1, r1, r0, lsr fp
   131c0:	lsl	r0, r0, ip
   131c4:	sbc	r5, r5, r9
   131c8:	cmp	ip, #0
   131cc:	beq	13258 <strspn@plt+0x25b4>
   131d0:	lsr	r6, r8, #1
   131d4:	orr	r6, r6, r9, lsl #31
   131d8:	lsr	r7, r9, #1
   131dc:	mov	r2, ip
   131e0:	b	13204 <strspn@plt+0x2560>
   131e4:	subs	r3, r4, r6
   131e8:	sbc	r8, r5, r7
   131ec:	adds	r3, r3, r3
   131f0:	adc	r8, r8, r8
   131f4:	adds	r4, r3, #1
   131f8:	adc	r5, r8, #0
   131fc:	subs	r2, r2, #1
   13200:	beq	13220 <strspn@plt+0x257c>
   13204:	cmp	r5, r7
   13208:	cmpeq	r4, r6
   1320c:	bcs	131e4 <strspn@plt+0x2540>
   13210:	adds	r4, r4, r4
   13214:	adc	r5, r5, r5
   13218:	subs	r2, r2, #1
   1321c:	bne	13204 <strspn@plt+0x2560>
   13220:	lsr	r3, r4, ip
   13224:	orr	r3, r3, r5, lsl fp
   13228:	lsr	r2, r5, ip
   1322c:	orr	r3, r3, r5, lsr sl
   13230:	adds	r0, r0, r4
   13234:	mov	r4, r3
   13238:	lsl	r3, r2, ip
   1323c:	orr	r3, r3, r4, lsl sl
   13240:	lsl	ip, r4, ip
   13244:	orr	r3, r3, r4, lsr fp
   13248:	adc	r1, r1, r5
   1324c:	subs	r0, r0, ip
   13250:	mov	r5, r2
   13254:	sbc	r1, r1, r3
   13258:	cmp	lr, #0
   1325c:	strdne	r4, [lr]
   13260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13264:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13268:	mov	r7, r0
   1326c:	ldr	r6, [pc, #72]	; 132bc <strspn@plt+0x2618>
   13270:	ldr	r5, [pc, #72]	; 132c0 <strspn@plt+0x261c>
   13274:	add	r6, pc, r6
   13278:	add	r5, pc, r5
   1327c:	sub	r6, r6, r5
   13280:	mov	r8, r1
   13284:	mov	r9, r2
   13288:	bl	10a8c <raise@plt-0x20>
   1328c:	asrs	r6, r6, #2
   13290:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13294:	mov	r4, #0
   13298:	add	r4, r4, #1
   1329c:	ldr	r3, [r5], #4
   132a0:	mov	r2, r9
   132a4:	mov	r1, r8
   132a8:	mov	r0, r7
   132ac:	blx	r3
   132b0:	cmp	r6, r4
   132b4:	bne	13298 <strspn@plt+0x25f4>
   132b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   132bc:			; <UNDEFINED> instruction: 0x00010bb8
   132c0:			; <UNDEFINED> instruction: 0x00010bb0
   132c4:	bx	lr

Disassembly of section .fini:

000132c8 <.fini>:
   132c8:	push	{r3, lr}
   132cc:	pop	{r3, pc}
