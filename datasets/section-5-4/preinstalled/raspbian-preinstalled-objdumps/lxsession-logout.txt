
raspbian-preinstalled/lxsession-logout:     file format elf32-littlearm


Disassembly of section .init:

000119d4 <.init>:
   119d4:	push	{r3, lr}
   119d8:	bl	12d90 <g_strcmp0@plt+0xeec>
   119dc:	pop	{r3, pc}

Disassembly of section .plt:

000119e0 <gtk_window_add_accel_group@plt-0x14>:
   119e0:	push	{lr}		; (str lr, [sp, #-4]!)
   119e4:	ldr	lr, [pc, #4]	; 119f0 <gtk_window_add_accel_group@plt-0x4>
   119e8:	add	lr, pc, lr
   119ec:	ldr	pc, [lr, #8]!
   119f0:	andeq	r3, r1, ip, ror #8

000119f4 <gtk_window_add_accel_group@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #77824	; 0x13000
   119fc:	ldr	pc, [ip, #1132]!	; 0x46c

00011a00 <gdk_screen_get_width@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #77824	; 0x13000
   11a08:	ldr	pc, [ip, #1124]!	; 0x464

00011a0c <g_option_context_parse@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #77824	; 0x13000
   11a14:	ldr	pc, [ip, #1116]!	; 0x45c

00011a18 <g_option_context_add_group@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #77824	; 0x13000
   11a20:	ldr	pc, [ip, #1108]!	; 0x454

00011a24 <gtk_alignment_new@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #77824	; 0x13000
   11a2c:	ldr	pc, [ip, #1100]!	; 0x44c

00011a30 <g_error_free@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #77824	; 0x13000
   11a38:	ldr	pc, [ip, #1092]!	; 0x444

00011a3c <strtol@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #77824	; 0x13000
   11a44:	ldr	pc, [ip, #1084]!	; 0x43c

00011a48 <bind_textdomain_codeset@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #77824	; 0x13000
   11a50:	ldr	pc, [ip, #1076]!	; 0x434

00011a54 <gtk_get_option_group@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #77824	; 0x13000
   11a5c:	ldr	pc, [ip, #1068]!	; 0x42c

00011a60 <gtk_image_new_from_icon_name@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #77824	; 0x13000
   11a68:	ldr	pc, [ip, #1060]!	; 0x424

00011a6c <g_option_context_new@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #77824	; 0x13000
   11a74:	ldr	pc, [ip, #1052]!	; 0x41c

00011a78 <gtk_widget_get_window@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #77824	; 0x13000
   11a80:	ldr	pc, [ip, #1044]!	; 0x414

00011a84 <gtk_window_set_decorated@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #77824	; 0x13000
   11a8c:	ldr	pc, [ip, #1036]!	; 0x40c

00011a90 <gtk_button_set_alignment@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #77824	; 0x13000
   11a98:	ldr	pc, [ip, #1028]!	; 0x404

00011a9c <exit@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #77824	; 0x13000
   11aa4:	ldr	pc, [ip, #1020]!	; 0x3fc

00011aa8 <gtk_widget_get_display@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #77824	; 0x13000
   11ab0:	ldr	pc, [ip, #1012]!	; 0x3f4

00011ab4 <flock@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #77824	; 0x13000
   11abc:	ldr	pc, [ip, #1004]!	; 0x3ec

00011ac0 <gtk_button_new_with_mnemonic@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #77824	; 0x13000
   11ac8:	ldr	pc, [ip, #996]!	; 0x3e4

00011acc <g_variant_new@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #77824	; 0x13000
   11ad4:	ldr	pc, [ip, #988]!	; 0x3dc

00011ad8 <textdomain@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #77824	; 0x13000
   11ae0:	ldr	pc, [ip, #980]!	; 0x3d4

00011ae4 <gdk_pixbuf_get_rowstride@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #77824	; 0x13000
   11aec:	ldr	pc, [ip, #972]!	; 0x3cc

00011af0 <__fprintf_chk@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #77824	; 0x13000
   11af8:	ldr	pc, [ip, #964]!	; 0x3c4

00011afc <gdk_pixbuf_get_from_drawable@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #77824	; 0x13000
   11b04:	ldr	pc, [ip, #956]!	; 0x3bc

00011b08 <g_spawn_command_line_sync@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #77824	; 0x13000
   11b10:	ldr	pc, [ip, #948]!	; 0x3b4

00011b14 <gtk_container_set_border_width@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #77824	; 0x13000
   11b1c:	ldr	pc, [ip, #940]!	; 0x3ac

00011b20 <gdk_screen_get_height@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #77824	; 0x13000
   11b28:	ldr	pc, [ip, #932]!	; 0x3a4

00011b2c <XInternAtom@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #77824	; 0x13000
   11b34:	ldr	pc, [ip, #924]!	; 0x39c

00011b38 <g_strdup_printf@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #77824	; 0x13000
   11b40:	ldr	pc, [ip, #916]!	; 0x394

00011b44 <gtk_icon_theme_append_search_path@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #77824	; 0x13000
   11b4c:	ldr	pc, [ip, #908]!	; 0x38c

00011b50 <close@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #77824	; 0x13000
   11b58:	ldr	pc, [ip, #900]!	; 0x384

00011b5c <gdk_get_default_root_window@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #77824	; 0x13000
   11b64:	ldr	pc, [ip, #892]!	; 0x37c

00011b68 <read@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #77824	; 0x13000
   11b70:	ldr	pc, [ip, #884]!	; 0x374

00011b74 <abort@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #77824	; 0x13000
   11b7c:	ldr	pc, [ip, #876]!	; 0x36c

00011b80 <gdk_pixbuf_get_height@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #77824	; 0x13000
   11b88:	ldr	pc, [ip, #868]!	; 0x364

00011b8c <gtk_label_new@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #77824	; 0x13000
   11b94:	ldr	pc, [ip, #860]!	; 0x35c

00011b98 <gtk_accel_group_new@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #77824	; 0x13000
   11ba0:	ldr	pc, [ip, #852]!	; 0x354

00011ba4 <gtk_button_new_from_stock@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #77824	; 0x13000
   11bac:	ldr	pc, [ip, #844]!	; 0x34c

00011bb0 <XChangeProperty@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #77824	; 0x13000
   11bb8:	ldr	pc, [ip, #836]!	; 0x344

00011bbc <unlink@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #77824	; 0x13000
   11bc4:	ldr	pc, [ip, #828]!	; 0x33c

00011bc8 <gdk_pixbuf_get_width@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #77824	; 0x13000
   11bd0:	ldr	pc, [ip, #820]!	; 0x334

00011bd4 <gtk_container_add@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #77824	; 0x13000
   11bdc:	ldr	pc, [ip, #812]!	; 0x32c

00011be0 <kill@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #77824	; 0x13000
   11be8:	ldr	pc, [ip, #804]!	; 0x324

00011bec <g_find_program_in_path@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #77824	; 0x13000
   11bf4:	ldr	pc, [ip, #796]!	; 0x31c

00011bf8 <g_signal_connect_data@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #77824	; 0x13000
   11c00:	ldr	pc, [ip, #788]!	; 0x314

00011c04 <gtk_vbox_new@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #77824	; 0x13000
   11c0c:	ldr	pc, [ip, #780]!	; 0x30c

00011c10 <g_dbus_proxy_call_sync@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #77824	; 0x13000
   11c18:	ldr	pc, [ip, #772]!	; 0x304

00011c1c <gtk_label_set_text@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #77824	; 0x13000
   11c24:	ldr	pc, [ip, #764]!	; 0x2fc

00011c28 <gtk_box_pack_start@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #77824	; 0x13000
   11c30:	ldr	pc, [ip, #756]!	; 0x2f4

00011c34 <gtk_event_box_new@plt>:
   11c34:	add	ip, pc, #0, 12
   11c38:	add	ip, ip, #77824	; 0x13000
   11c3c:	ldr	pc, [ip, #748]!	; 0x2ec

00011c40 <open@plt>:
   11c40:	add	ip, pc, #0, 12
   11c44:	add	ip, ip, #77824	; 0x13000
   11c48:	ldr	pc, [ip, #740]!	; 0x2e4

00011c4c <gtk_box_pack_end@plt>:
   11c4c:	add	ip, pc, #0, 12
   11c50:	add	ip, ip, #77824	; 0x13000
   11c54:	ldr	pc, [ip, #732]!	; 0x2dc

00011c58 <g_option_context_free@plt>:
   11c58:	add	ip, pc, #0, 12
   11c5c:	add	ip, ip, #77824	; 0x13000
   11c60:	ldr	pc, [ip, #724]!	; 0x2d4

00011c64 <g_variant_get@plt>:
   11c64:	add	ip, pc, #0, 12
   11c68:	add	ip, ip, #77824	; 0x13000
   11c6c:	ldr	pc, [ip, #716]!	; 0x2cc

00011c70 <__stack_chk_fail@plt>:
   11c70:	add	ip, pc, #0, 12
   11c74:	add	ip, ip, #77824	; 0x13000
   11c78:	ldr	pc, [ip, #708]!	; 0x2c4

00011c7c <gtk_misc_set_alignment@plt>:
   11c7c:	add	ip, pc, #0, 12
   11c80:	add	ip, ip, #77824	; 0x13000
   11c84:	ldr	pc, [ip, #700]!	; 0x2bc

00011c88 <g_getenv@plt>:
   11c88:	add	ip, pc, #0, 12
   11c8c:	add	ip, ip, #77824	; 0x13000
   11c90:	ldr	pc, [ip, #692]!	; 0x2b4

00011c94 <gtk_window_new@plt>:
   11c94:	add	ip, pc, #0, 12
   11c98:	add	ip, ip, #77824	; 0x13000
   11c9c:	ldr	pc, [ip, #684]!	; 0x2ac

00011ca0 <g_free@plt>:
   11ca0:	add	ip, pc, #0, 12
   11ca4:	add	ip, ip, #77824	; 0x13000
   11ca8:	ldr	pc, [ip, #676]!	; 0x2a4

00011cac <dcgettext@plt>:
   11cac:	add	ip, pc, #0, 12
   11cb0:	add	ip, ip, #77824	; 0x13000
   11cb4:	ldr	pc, [ip, #668]!	; 0x29c

00011cb8 <g_file_test@plt>:
   11cb8:	add	ip, pc, #0, 12
   11cbc:	add	ip, ip, #77824	; 0x13000
   11cc0:	ldr	pc, [ip, #660]!	; 0x294

00011cc4 <__cxa_atexit@plt>:
   11cc4:	add	ip, pc, #0, 12
   11cc8:	add	ip, ip, #77824	; 0x13000
   11ccc:	ldr	pc, [ip, #652]!	; 0x28c

00011cd0 <gtk_main@plt>:
   11cd0:	add	ip, pc, #0, 12
   11cd4:	add	ip, ip, #77824	; 0x13000
   11cd8:	ldr	pc, [ip, #644]!	; 0x284

00011cdc <strstr@plt>:
   11cdc:	add	ip, pc, #0, 12
   11ce0:	add	ip, ip, #77824	; 0x13000
   11ce4:	ldr	pc, [ip, #636]!	; 0x27c

00011ce8 <gtk_hseparator_new@plt>:
   11ce8:	add	ip, pc, #0, 12
   11cec:	add	ip, ip, #77824	; 0x13000
   11cf0:	ldr	pc, [ip, #628]!	; 0x274

00011cf4 <gtk_button_set_image@plt>:
   11cf4:	add	ip, pc, #0, 12
   11cf8:	add	ip, ip, #77824	; 0x13000
   11cfc:	ldr	pc, [ip, #620]!	; 0x26c

00011d00 <g_variant_unref@plt>:
   11d00:	add	ip, pc, #0, 12
   11d04:	add	ip, ip, #77824	; 0x13000
   11d08:	ldr	pc, [ip, #612]!	; 0x264

00011d0c <g_print@plt>:
   11d0c:	add	ip, pc, #0, 12
   11d10:	add	ip, ip, #77824	; 0x13000
   11d14:	ldr	pc, [ip, #604]!	; 0x25c

00011d18 <bindtextdomain@plt>:
   11d18:	add	ip, pc, #0, 12
   11d1c:	add	ip, ip, #77824	; 0x13000
   11d20:	ldr	pc, [ip, #596]!	; 0x254

00011d24 <gtk_widget_get_root_window@plt>:
   11d24:	add	ip, pc, #0, 12
   11d28:	add	ip, ip, #77824	; 0x13000
   11d2c:	ldr	pc, [ip, #588]!	; 0x24c

00011d30 <gdk_cairo_create@plt>:
   11d30:	add	ip, pc, #0, 12
   11d34:	add	ip, ip, #77824	; 0x13000
   11d38:	ldr	pc, [ip, #580]!	; 0x244

00011d3c <gtk_widget_add_accelerator@plt>:
   11d3c:	add	ip, pc, #0, 12
   11d40:	add	ip, ip, #77824	; 0x13000
   11d44:	ldr	pc, [ip, #572]!	; 0x23c

00011d48 <setlocale@plt>:
   11d48:	add	ip, pc, #0, 12
   11d4c:	add	ip, ip, #77824	; 0x13000
   11d50:	ldr	pc, [ip, #564]!	; 0x234

00011d54 <cairo_destroy@plt>:
   11d54:	add	ip, pc, #0, 12
   11d58:	add	ip, ip, #77824	; 0x13000
   11d5c:	ldr	pc, [ip, #556]!	; 0x22c

00011d60 <g_option_context_add_main_entries@plt>:
   11d60:	add	ip, pc, #0, 12
   11d64:	add	ip, ip, #77824	; 0x13000
   11d68:	ldr	pc, [ip, #548]!	; 0x224

00011d6c <gtk_widget_show_all@plt>:
   11d6c:	add	ip, pc, #0, 12
   11d70:	add	ip, ip, #77824	; 0x13000
   11d74:	ldr	pc, [ip, #540]!	; 0x21c

00011d78 <gtk_vseparator_new@plt>:
   11d78:	add	ip, pc, #0, 12
   11d7c:	add	ip, ip, #77824	; 0x13000
   11d80:	ldr	pc, [ip, #532]!	; 0x214

00011d84 <gtk_image_new_from_file@plt>:
   11d84:	add	ip, pc, #0, 12
   11d88:	add	ip, ip, #77824	; 0x13000
   11d8c:	ldr	pc, [ip, #524]!	; 0x20c

00011d90 <strlen@plt>:
   11d90:	add	ip, pc, #0, 12
   11d94:	add	ip, ip, #77824	; 0x13000
   11d98:	ldr	pc, [ip, #516]!	; 0x204

00011d9c <g_dbus_proxy_new_for_bus_sync@plt>:
   11d9c:	add	ip, pc, #0, 12
   11da0:	add	ip, ip, #77824	; 0x13000
   11da4:	ldr	pc, [ip, #508]!	; 0x1fc

00011da8 <gdk_screen_get_default@plt>:
   11da8:	add	ip, pc, #0, 12
   11dac:	add	ip, ip, #77824	; 0x13000
   11db0:	ldr	pc, [ip, #500]!	; 0x1f4

00011db4 <gtk_main_quit@plt>:
   11db4:	add	ip, pc, #0, 12
   11db8:	add	ip, ip, #77824	; 0x13000
   11dbc:	ldr	pc, [ip, #492]!	; 0x1ec

00011dc0 <g_spawn_command_line_async@plt>:
   11dc0:	add	ip, pc, #0, 12
   11dc4:	add	ip, ip, #77824	; 0x13000
   11dc8:	ldr	pc, [ip, #484]!	; 0x1e4

00011dcc <cairo_paint@plt>:
   11dcc:	add	ip, pc, #0, 12
   11dd0:	add	ip, ip, #77824	; 0x13000
   11dd4:	ldr	pc, [ip, #476]!	; 0x1dc

00011dd8 <strcmp@plt>:
   11dd8:	add	ip, pc, #0, 12
   11ddc:	add	ip, ip, #77824	; 0x13000
   11de0:	ldr	pc, [ip, #468]!	; 0x1d4

00011de4 <g_variant_is_of_type@plt>:
   11de4:	add	ip, pc, #0, 12
   11de8:	add	ip, ip, #77824	; 0x13000
   11dec:	ldr	pc, [ip, #460]!	; 0x1cc

00011df0 <gtk_icon_theme_get_default@plt>:
   11df0:	add	ip, pc, #0, 12
   11df4:	add	ip, ip, #77824	; 0x13000
   11df8:	ldr	pc, [ip, #452]!	; 0x1c4

00011dfc <gtk_label_set_markup@plt>:
   11dfc:	add	ip, pc, #0, 12
   11e00:	add	ip, ip, #77824	; 0x13000
   11e04:	ldr	pc, [ip, #444]!	; 0x1bc

00011e08 <gdk_pixbuf_get_pixels@plt>:
   11e08:	add	ip, pc, #0, 12
   11e0c:	add	ip, ip, #77824	; 0x13000
   11e10:	ldr	pc, [ip, #436]!	; 0x1b4

00011e14 <gtk_hbox_new@plt>:
   11e14:	add	ip, pc, #0, 12
   11e18:	add	ip, ip, #77824	; 0x13000
   11e1c:	ldr	pc, [ip, #428]!	; 0x1ac

00011e20 <__sprintf_chk@plt>:
   11e20:	add	ip, pc, #0, 12
   11e24:	add	ip, ip, #77824	; 0x13000
   11e28:	ldr	pc, [ip, #420]!	; 0x1a4

00011e2c <gdk_pixbuf_get_has_alpha@plt>:
   11e2c:	add	ip, pc, #0, 12
   11e30:	add	ip, ip, #77824	; 0x13000
   11e34:	ldr	pc, [ip, #412]!	; 0x19c

00011e38 <gtk_window_fullscreen@plt>:
   11e38:	add	ip, pc, #0, 12
   11e3c:	add	ip, ip, #77824	; 0x13000
   11e40:	ldr	pc, [ip, #404]!	; 0x194

00011e44 <gtk_label_set_justify@plt>:
   11e44:	add	ip, pc, #0, 12
   11e48:	add	ip, ip, #77824	; 0x13000
   11e4c:	ldr	pc, [ip, #396]!	; 0x18c

00011e50 <__libc_start_main@plt>:
   11e50:	add	ip, pc, #0, 12
   11e54:	add	ip, ip, #77824	; 0x13000
   11e58:	ldr	pc, [ip, #388]!	; 0x184

00011e5c <__gmon_start__@plt>:
   11e5c:	add	ip, pc, #0, 12
   11e60:	add	ip, ip, #77824	; 0x13000
   11e64:	ldr	pc, [ip, #380]!	; 0x17c

00011e68 <gtk_widget_set_app_paintable@plt>:
   11e68:	add	ip, pc, #0, 12
   11e6c:	add	ip, ip, #77824	; 0x13000
   11e70:	ldr	pc, [ip, #372]!	; 0x174

00011e74 <gdk_cairo_set_source_pixbuf@plt>:
   11e74:	add	ip, pc, #0, 12
   11e78:	add	ip, ip, #77824	; 0x13000
   11e7c:	ldr	pc, [ip, #364]!	; 0x16c

00011e80 <gdk_x11_display_get_xdisplay@plt>:
   11e80:	add	ip, pc, #0, 12
   11e84:	add	ip, ip, #77824	; 0x13000
   11e88:	ldr	pc, [ip, #356]!	; 0x164

00011e8c <gdk_x11_drawable_get_xid@plt>:
   11e8c:	add	ip, pc, #0, 12
   11e90:	add	ip, ip, #77824	; 0x13000
   11e94:	ldr	pc, [ip, #348]!	; 0x15c

00011e98 <gdk_window_get_origin@plt>:
   11e98:	add	ip, pc, #0, 12
   11e9c:	add	ip, ip, #77824	; 0x13000
   11ea0:	ldr	pc, [ip, #340]!	; 0x154

00011ea4 <g_strcmp0@plt>:
   11ea4:	add	ip, pc, #0, 12
   11ea8:	add	ip, ip, #77824	; 0x13000
   11eac:	ldr	pc, [ip, #332]!	; 0x14c

Disassembly of section .text:

00011eb0 <.text>:
   11eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11eb4:	sub	sp, sp, #68	; 0x44
   11eb8:	ldr	r5, [pc, #1632]	; 12520 <g_strcmp0@plt+0x67c>
   11ebc:	str	r0, [sp, #28]
   11ec0:	str	r1, [sp, #24]
   11ec4:	ldr	r3, [r5]
   11ec8:	ldr	r1, [pc, #1792]	; 125d0 <g_strcmp0@plt+0x72c>
   11ecc:	mov	r0, #6
   11ed0:	str	r3, [sp, #60]	; 0x3c
   11ed4:	bl	11d48 <setlocale@plt>
   11ed8:	ldr	r1, [pc, #1604]	; 12524 <g_strcmp0@plt+0x680>
   11edc:	ldr	r0, [pc, #1604]	; 12528 <g_strcmp0@plt+0x684>
   11ee0:	bl	11d18 <bindtextdomain@plt>
   11ee4:	ldr	r1, [pc, #1600]	; 1252c <g_strcmp0@plt+0x688>
   11ee8:	ldr	r0, [pc, #1592]	; 12528 <g_strcmp0@plt+0x684>
   11eec:	bl	11a48 <bind_textdomain_codeset@plt>
   11ef0:	ldr	r0, [pc, #1584]	; 12528 <g_strcmp0@plt+0x684>
   11ef4:	bl	11ad8 <textdomain@plt>
   11ef8:	mov	r4, #0
   11efc:	ldr	r0, [pc, #1580]	; 12530 <g_strcmp0@plt+0x68c>
   11f00:	str	r4, [sp, #52]	; 0x34
   11f04:	str	r4, [sp, #48]	; 0x30
   11f08:	str	r4, [sp, #56]	; 0x38
   11f0c:	bl	11c88 <g_getenv@plt>
   11f10:	cmp	r0, r4
   11f14:	beq	11f28 <g_strcmp0@plt+0x84>
   11f18:	mov	r1, r4
   11f1c:	mov	r2, #10
   11f20:	bl	11a3c <strtol@plt>
   11f24:	str	r0, [sp, #48]	; 0x30
   11f28:	ldr	r2, [sp, #48]	; 0x30
   11f2c:	ldr	r3, [pc, #1536]	; 12534 <g_strcmp0@plt+0x690>
   11f30:	str	r2, [sp]
   11f34:	mov	r1, #1
   11f38:	mov	r2, #4096	; 0x1000
   11f3c:	ldr	r0, [pc, #1524]	; 12538 <g_strcmp0@plt+0x694>
   11f40:	bl	11e20 <__sprintf_chk@plt>
   11f44:	mov	r2, #384	; 0x180
   11f48:	mov	r1, #64	; 0x40
   11f4c:	ldr	r0, [pc, #1508]	; 12538 <g_strcmp0@plt+0x694>
   11f50:	bl	11c40 <open@plt>
   11f54:	cmp	r0, #0
   11f58:	blt	11f6c <g_strcmp0@plt+0xc8>
   11f5c:	mov	r1, #6
   11f60:	bl	11ab4 <flock@plt>
   11f64:	cmp	r0, #0
   11f68:	bne	12d04 <g_strcmp0@plt+0xe60>
   11f6c:	ldr	r0, [pc, #1480]	; 1253c <g_strcmp0@plt+0x698>
   11f70:	bl	13e38 <g_strcmp0@plt+0x1f94>
   11f74:	bl	1339c <g_strcmp0@plt+0x14f8>
   11f78:	cmp	r0, #0
   11f7c:	ldrbne	r3, [sp, #56]	; 0x38
   11f80:	bicne	r3, r3, #33	; 0x21
   11f84:	orrne	r3, r3, #33	; 0x21
   11f88:	strbne	r3, [sp, #56]	; 0x38
   11f8c:	bl	133b8 <g_strcmp0@plt+0x1514>
   11f90:	cmp	r0, #0
   11f94:	ldrbne	r3, [sp, #56]	; 0x38
   11f98:	bicne	r3, r3, #66	; 0x42
   11f9c:	orrne	r3, r3, #66	; 0x42
   11fa0:	strbne	r3, [sp, #56]	; 0x38
   11fa4:	bl	133d4 <g_strcmp0@plt+0x1530>
   11fa8:	cmp	r0, #0
   11fac:	ldrbne	r3, [sp, #56]	; 0x38
   11fb0:	mvnne	r3, r3
   11fb4:	andne	r3, r3, #123	; 0x7b
   11fb8:	mvnne	r3, r3
   11fbc:	strbne	r3, [sp, #56]	; 0x38
   11fc0:	bl	133f0 <g_strcmp0@plt+0x154c>
   11fc4:	cmp	r0, #0
   11fc8:	ldrhne	r3, [sp, #56]	; 0x38
   11fcc:	orrne	r3, r3, #264	; 0x108
   11fd0:	strhne	r3, [sp, #56]	; 0x38
   11fd4:	ldrb	r3, [sp, #56]	; 0x38
   11fd8:	tst	r3, #1
   11fdc:	beq	124f4 <g_strcmp0@plt+0x650>
   11fe0:	tst	r3, #2
   11fe4:	beq	124c8 <g_strcmp0@plt+0x624>
   11fe8:	tst	r3, #4
   11fec:	beq	12464 <g_strcmp0@plt+0x5c0>
   11ff0:	tst	r3, #8
   11ff4:	beq	123e0 <g_strcmp0@plt+0x53c>
   11ff8:	ldr	r1, [pc, #1344]	; 12540 <g_strcmp0@plt+0x69c>
   11ffc:	ldr	r0, [pc, #1344]	; 12544 <g_strcmp0@plt+0x6a0>
   12000:	bl	13648 <g_strcmp0@plt+0x17a4>
   12004:	ldr	r1, [pc, #1332]	; 12540 <g_strcmp0@plt+0x69c>
   12008:	cmp	r0, #0
   1200c:	ldr	r0, [pc, #1332]	; 12548 <g_strcmp0@plt+0x6a4>
   12010:	ldrhne	r2, [sp, #56]	; 0x38
   12014:	ldrne	r3, [pc, #1328]	; 1254c <g_strcmp0@plt+0x6a8>
   12018:	orrne	r3, r2, r3
   1201c:	strhne	r3, [sp, #56]	; 0x38
   12020:	bl	13648 <g_strcmp0@plt+0x17a4>
   12024:	cmp	r0, #0
   12028:	ldr	r0, [pc, #1312]	; 12550 <g_strcmp0@plt+0x6ac>
   1202c:	ldrhne	r2, [sp, #56]	; 0x38
   12030:	ldrne	r3, [pc, #1300]	; 1254c <g_strcmp0@plt+0x6a8>
   12034:	orrne	r3, r2, r3
   12038:	strhne	r3, [sp, #56]	; 0x38
   1203c:	bl	11c88 <g_getenv@plt>
   12040:	ldr	r1, [pc, #1292]	; 12554 <g_strcmp0@plt+0x6b0>
   12044:	cmp	r0, #0
   12048:	ldr	r0, [pc, #1288]	; 12558 <g_strcmp0@plt+0x6b4>
   1204c:	ldrne	r3, [sp, #56]	; 0x38
   12050:	orrne	r3, r3, #65536	; 0x10000
   12054:	orrne	r3, r3, #16
   12058:	strne	r3, [sp, #56]	; 0x38
   1205c:	bl	13648 <g_strcmp0@plt+0x17a4>
   12060:	ldr	r1, [pc, #1268]	; 1255c <g_strcmp0@plt+0x6b8>
   12064:	cmp	r0, #0
   12068:	ldr	r0, [pc, #1264]	; 12560 <g_strcmp0@plt+0x6bc>
   1206c:	ldrne	r3, [sp, #56]	; 0x38
   12070:	orrne	r3, r3, #131072	; 0x20000
   12074:	orrne	r3, r3, #16
   12078:	strne	r3, [sp, #56]	; 0x38
   1207c:	bl	13648 <g_strcmp0@plt+0x17a4>
   12080:	cmp	r0, #0
   12084:	ldr	r0, [pc, #1240]	; 12564 <g_strcmp0@plt+0x6c0>
   12088:	ldrne	r3, [sp, #56]	; 0x38
   1208c:	orrne	r3, r3, #262144	; 0x40000
   12090:	orrne	r3, r3, #16
   12094:	strne	r3, [sp, #56]	; 0x38
   12098:	bl	11c88 <g_getenv@plt>
   1209c:	cmp	r0, #0
   120a0:	ldr	r0, [pc, #1216]	; 12568 <g_strcmp0@plt+0x6c4>
   120a4:	ldrne	r3, [sp, #56]	; 0x38
   120a8:	orrne	r3, r3, #524288	; 0x80000
   120ac:	orrne	r3, r3, #3
   120b0:	strne	r3, [sp, #56]	; 0x38
   120b4:	bl	11bec <g_find_program_in_path@plt>
   120b8:	cmp	r0, #0
   120bc:	beq	1294c <g_strcmp0@plt+0xaa8>
   120c0:	ldrb	r3, [sp, #58]	; 0x3a
   120c4:	orr	r3, r3, #16
   120c8:	strb	r3, [sp, #58]	; 0x3a
   120cc:	ldr	r0, [pc, #1276]	; 125d0 <g_strcmp0@plt+0x72c>
   120d0:	bl	11a6c <g_option_context_new@plt>
   120d4:	ldr	r2, [pc, #1100]	; 12528 <g_strcmp0@plt+0x684>
   120d8:	ldr	r1, [pc, #1164]	; 1256c <g_strcmp0@plt+0x6c8>
   120dc:	mov	r4, #0
   120e0:	mov	r6, r0
   120e4:	bl	11d60 <g_option_context_add_main_entries@plt>
   120e8:	mov	r0, #1
   120ec:	bl	11a54 <gtk_get_option_group@plt>
   120f0:	mov	r1, r0
   120f4:	mov	r0, r6
   120f8:	bl	11a18 <g_option_context_add_group@plt>
   120fc:	mov	r0, r6
   12100:	add	r3, sp, #36	; 0x24
   12104:	add	r2, sp, #24
   12108:	add	r1, sp, #28
   1210c:	str	r4, [sp, #36]	; 0x24
   12110:	bl	11a0c <g_option_context_parse@plt>
   12114:	cmp	r0, r4
   12118:	beq	12428 <g_strcmp0@plt+0x584>
   1211c:	mov	r0, r6
   12120:	bl	11c58 <g_option_context_free@plt>
   12124:	bl	11df0 <gtk_icon_theme_get_default@plt>
   12128:	ldr	r1, [pc, #1088]	; 12570 <g_strcmp0@plt+0x6cc>
   1212c:	bl	11b44 <gtk_icon_theme_append_search_path@plt>
   12130:	bl	11da8 <gdk_screen_get_default@plt>
   12134:	mov	r6, r0
   12138:	bl	11b5c <gdk_get_default_root_window@plt>
   1213c:	mov	r7, r0
   12140:	mov	r0, r6
   12144:	bl	11a00 <gdk_screen_get_width@plt>
   12148:	mov	r8, r0
   1214c:	mov	r0, r6
   12150:	bl	11b20 <gdk_screen_get_height@plt>
   12154:	mov	r1, r7
   12158:	str	r8, [sp, #12]
   1215c:	str	r4, [sp, #8]
   12160:	str	r4, [sp, #4]
   12164:	str	r4, [sp]
   12168:	mov	r3, r4
   1216c:	mov	r2, r4
   12170:	str	r0, [sp, #16]
   12174:	mov	r0, r4
   12178:	bl	11afc <gdk_pixbuf_get_from_drawable@plt>
   1217c:	subs	r7, r0, #0
   12180:	beq	1221c <g_strcmp0@plt+0x378>
   12184:	bl	11e08 <gdk_pixbuf_get_pixels@plt>
   12188:	mov	r6, r0
   1218c:	mov	r0, r7
   12190:	bl	11bc8 <gdk_pixbuf_get_width@plt>
   12194:	mov	r8, r0
   12198:	mov	r0, r7
   1219c:	bl	11b80 <gdk_pixbuf_get_height@plt>
   121a0:	mov	r9, r0
   121a4:	mov	r0, r7
   121a8:	bl	11e2c <gdk_pixbuf_get_has_alpha@plt>
   121ac:	cmp	r0, #0
   121b0:	mov	r0, r7
   121b4:	movne	sl, #4
   121b8:	moveq	sl, #3
   121bc:	bl	11ae4 <gdk_pixbuf_get_rowstride@plt>
   121c0:	cmp	r9, #0
   121c4:	ble	1221c <g_strcmp0@plt+0x378>
   121c8:	cmp	r8, #0
   121cc:	movgt	r3, r6
   121d0:	movgt	r2, #0
   121d4:	ble	1220c <g_strcmp0@plt+0x368>
   121d8:	ldrb	lr, [r3]
   121dc:	ldrb	ip, [r3, #1]
   121e0:	ldrb	r1, [r3, #2]
   121e4:	add	r2, r2, #1
   121e8:	lsr	lr, lr, #1
   121ec:	lsr	ip, ip, #1
   121f0:	lsr	r1, r1, #1
   121f4:	cmp	r8, r2
   121f8:	strb	lr, [r3]
   121fc:	strb	ip, [r3, #1]
   12200:	strb	r1, [r3, #2]
   12204:	add	r3, r3, sl
   12208:	bne	121d8 <g_strcmp0@plt+0x334>
   1220c:	add	r4, r4, #1
   12210:	cmp	r9, r4
   12214:	add	r6, r6, r0
   12218:	bne	121c8 <g_strcmp0@plt+0x324>
   1221c:	mov	r0, #0
   12220:	bl	11c94 <gtk_window_new@plt>
   12224:	mov	r1, #0
   12228:	mov	r4, #0
   1222c:	ldr	r8, [pc, #832]	; 12574 <g_strcmp0@plt+0x6d0>
   12230:	mov	r6, r0
   12234:	bl	11a84 <gtk_window_set_decorated@plt>
   12238:	mov	r0, r6
   1223c:	bl	11e38 <gtk_window_fullscreen@plt>
   12240:	mov	r0, r6
   12244:	mov	r1, #1
   12248:	bl	11e68 <gtk_widget_set_app_paintable@plt>
   1224c:	mov	r3, r7
   12250:	ldr	r2, [pc, #800]	; 12578 <g_strcmp0@plt+0x6d4>
   12254:	ldr	r1, [pc, #800]	; 1257c <g_strcmp0@plt+0x6d8>
   12258:	mov	r0, r6
   1225c:	str	r4, [sp, #4]
   12260:	str	r4, [sp]
   12264:	bl	11bf8 <g_signal_connect_data@plt>
   12268:	mov	r3, r4
   1226c:	ldr	r2, [pc, #780]	; 12580 <g_strcmp0@plt+0x6dc>
   12270:	ldr	r1, [pc, #780]	; 12584 <g_strcmp0@plt+0x6e0>
   12274:	str	r4, [sp, #4]
   12278:	str	r4, [sp]
   1227c:	mov	r0, r6
   12280:	bl	11bf8 <g_signal_connect_data@plt>
   12284:	vldr	s3, [pc, #896]	; 1260c <g_strcmp0@plt+0x768>
   12288:	vldr	s1, [pc, #888]	; 12608 <g_strcmp0@plt+0x764>
   1228c:	vmov.f32	s2, s3
   12290:	vmov.f32	s0, s1
   12294:	bl	11a24 <gtk_alignment_new@plt>
   12298:	mov	r1, r0
   1229c:	mov	r9, r0
   122a0:	mov	r0, r6
   122a4:	bl	11bd4 <gtk_container_add@plt>
   122a8:	bl	11c34 <gtk_event_box_new@plt>
   122ac:	mov	r7, r0
   122b0:	mov	r1, r0
   122b4:	mov	r0, r9
   122b8:	bl	11bd4 <gtk_container_add@plt>
   122bc:	mov	r1, #6
   122c0:	mov	r0, r4
   122c4:	bl	11c04 <gtk_vbox_new@plt>
   122c8:	mov	r1, #12
   122cc:	mov	r9, r0
   122d0:	bl	11b14 <gtk_container_set_border_width@plt>
   122d4:	mov	r0, r7
   122d8:	mov	r1, r9
   122dc:	bl	11bd4 <gtk_container_add@plt>
   122e0:	mov	r0, r4
   122e4:	mov	r1, #6
   122e8:	bl	11c04 <gtk_vbox_new@plt>
   122ec:	ldr	r3, [r8]
   122f0:	cmp	r3, r4
   122f4:	mov	r7, r0
   122f8:	beq	12610 <g_strcmp0@plt+0x76c>
   122fc:	mov	r0, r3
   12300:	bl	11d84 <gtk_image_new_from_file@plt>
   12304:	ldr	r4, [r8, #4]
   12308:	cmp	r4, #0
   1230c:	mov	sl, r0
   12310:	beq	12350 <g_strcmp0@plt+0x4ac>
   12314:	ldr	r1, [pc, #620]	; 12588 <g_strcmp0@plt+0x6e4>
   12318:	mov	r0, r4
   1231c:	bl	11dd8 <strcmp@plt>
   12320:	subs	fp, r0, #0
   12324:	beq	12c50 <g_strcmp0@plt+0xdac>
   12328:	ldr	r1, [pc, #604]	; 1258c <g_strcmp0@plt+0x6e8>
   1232c:	mov	r0, r4
   12330:	bl	11dd8 <strcmp@plt>
   12334:	subs	fp, r0, #0
   12338:	beq	127f8 <g_strcmp0@plt+0x954>
   1233c:	mov	r0, r4
   12340:	ldr	r1, [pc, #584]	; 12590 <g_strcmp0@plt+0x6ec>
   12344:	bl	11dd8 <strcmp@plt>
   12348:	subs	r4, r0, #0
   1234c:	beq	12b64 <g_strcmp0@plt+0xcc0>
   12350:	mov	r1, #2
   12354:	mov	r0, #0
   12358:	bl	11e14 <gtk_hbox_new@plt>
   1235c:	mov	r4, #0
   12360:	mov	r3, r4
   12364:	mov	r2, r4
   12368:	str	r4, [sp]
   1236c:	mov	fp, r0
   12370:	mov	r1, fp
   12374:	mov	r0, r9
   12378:	bl	11c28 <gtk_box_pack_start@plt>
   1237c:	mov	r9, #2
   12380:	vldr	s1, [pc, #644]	; 1260c <g_strcmp0@plt+0x768>
   12384:	vldr	s0, [pc, #636]	; 12608 <g_strcmp0@plt+0x764>
   12388:	mov	r0, sl
   1238c:	bl	11c7c <gtk_misc_set_alignment@plt>
   12390:	mov	r1, sl
   12394:	mov	r3, r4
   12398:	mov	r2, r4
   1239c:	mov	r0, fp
   123a0:	str	r9, [sp]
   123a4:	bl	11c28 <gtk_box_pack_start@plt>
   123a8:	bl	11d78 <gtk_vseparator_new@plt>
   123ac:	mov	r3, r4
   123b0:	mov	r2, r4
   123b4:	str	r9, [sp]
   123b8:	mov	r1, r0
   123bc:	mov	r0, fp
   123c0:	bl	11c28 <gtk_box_pack_start@plt>
   123c4:	str	r9, [sp]
   123c8:	mov	r0, fp
   123cc:	mov	r3, r4
   123d0:	mov	r2, r4
   123d4:	mov	r1, r7
   123d8:	bl	11c28 <gtk_box_pack_start@plt>
   123dc:	b	12624 <g_strcmp0@plt+0x780>
   123e0:	bl	13380 <g_strcmp0@plt+0x14dc>
   123e4:	cmp	r0, #0
   123e8:	ldrhne	r3, [sp, #56]	; 0x38
   123ec:	orrne	r3, r3, #4096	; 0x1000
   123f0:	orrne	r3, r3, #8
   123f4:	strhne	r3, [sp, #56]	; 0x38
   123f8:	ldrb	r3, [sp, #56]	; 0x38
   123fc:	tst	r3, #4
   12400:	beq	1249c <g_strcmp0@plt+0x5f8>
   12404:	tst	r3, #8
   12408:	bne	11ff8 <g_strcmp0@plt+0x154>
   1240c:	bl	13304 <g_strcmp0@plt+0x1460>
   12410:	cmp	r0, #0
   12414:	ldrhne	r3, [sp, #56]	; 0x38
   12418:	orrne	r3, r3, #16384	; 0x4000
   1241c:	orrne	r3, r3, #8
   12420:	strhne	r3, [sp, #56]	; 0x38
   12424:	b	11ff8 <g_strcmp0@plt+0x154>
   12428:	mov	r2, #5
   1242c:	ldr	r1, [pc, #352]	; 12594 <g_strcmp0@plt+0x6f0>
   12430:	bl	11cac <dcgettext@plt>
   12434:	ldr	r3, [sp, #36]	; 0x24
   12438:	ldr	r1, [r3, #8]
   1243c:	bl	11d0c <g_print@plt>
   12440:	ldr	r0, [sp, #36]	; 0x24
   12444:	bl	11a30 <g_error_free@plt>
   12448:	mov	r0, #1
   1244c:	ldr	r2, [sp, #60]	; 0x3c
   12450:	ldr	r3, [r5]
   12454:	cmp	r2, r3
   12458:	bne	12d00 <g_strcmp0@plt+0xe5c>
   1245c:	add	sp, sp, #68	; 0x44
   12460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12464:	bl	13364 <g_strcmp0@plt+0x14c0>
   12468:	cmp	r0, #0
   1246c:	ldrhne	r3, [sp, #56]	; 0x38
   12470:	ldrne	r2, [pc, #288]	; 12598 <g_strcmp0@plt+0x6f4>
   12474:	ldrbeq	r3, [sp, #56]	; 0x38
   12478:	andne	r3, r3, r2
   1247c:	orrne	r3, r3, #2048	; 0x800
   12480:	orrne	r3, r3, #4
   12484:	strhne	r3, [sp, #56]	; 0x38
   12488:	uxtbne	r3, r3
   1248c:	tst	r3, #8
   12490:	beq	123e0 <g_strcmp0@plt+0x53c>
   12494:	tst	r3, #4
   12498:	bne	11ff8 <g_strcmp0@plt+0x154>
   1249c:	bl	132dc <g_strcmp0@plt+0x1438>
   124a0:	cmp	r0, #0
   124a4:	ldrhne	r3, [sp, #56]	; 0x38
   124a8:	ldrne	r2, [pc, #236]	; 1259c <g_strcmp0@plt+0x6f8>
   124ac:	ldrbeq	r3, [sp, #56]	; 0x38
   124b0:	andne	r3, r3, r2
   124b4:	orrne	r3, r3, #8192	; 0x2000
   124b8:	orrne	r3, r3, #4
   124bc:	strhne	r3, [sp, #56]	; 0x38
   124c0:	uxtbne	r3, r3
   124c4:	b	12404 <g_strcmp0@plt+0x560>
   124c8:	bl	13348 <g_strcmp0@plt+0x14a4>
   124cc:	cmp	r0, #0
   124d0:	ldrhne	r3, [sp, #56]	; 0x38
   124d4:	ldrne	r2, [pc, #196]	; 125a0 <g_strcmp0@plt+0x6fc>
   124d8:	ldrbeq	r3, [sp, #56]	; 0x38
   124dc:	andne	r3, r3, r2
   124e0:	orrne	r3, r3, #1024	; 0x400
   124e4:	orrne	r3, r3, #2
   124e8:	strhne	r3, [sp, #56]	; 0x38
   124ec:	uxtbne	r3, r3
   124f0:	b	11fe8 <g_strcmp0@plt+0x144>
   124f4:	bl	1332c <g_strcmp0@plt+0x1488>
   124f8:	cmp	r0, #0
   124fc:	ldrhne	r3, [sp, #56]	; 0x38
   12500:	ldrne	r2, [pc, #156]	; 125a4 <g_strcmp0@plt+0x700>
   12504:	ldrbeq	r3, [sp, #56]	; 0x38
   12508:	andne	r3, r3, r2
   1250c:	orrne	r3, r3, #512	; 0x200
   12510:	orrne	r3, r3, #1
   12514:	strhne	r3, [sp, #56]	; 0x38
   12518:	uxtbne	r3, r3
   1251c:	b	11fe0 <g_strcmp0@plt+0x13c>
   12520:	andeq	r4, r2, r8, ror #25
   12524:	andeq	r4, r1, r0, lsl #3
   12528:	muleq	r1, r4, r1
   1252c:	andeq	r4, r1, r0, lsr #3
   12530:	andeq	r4, r1, r8, lsr #3
   12534:			; <UNDEFINED> instruction: 0x000141b8
   12538:	andeq	r5, r2, r0, lsr #1
   1253c:	andeq	r3, r1, ip, lsr r6
   12540:	ldrdeq	r4, [r1], -r8
   12544:	andeq	r4, r1, r8, ror #3
   12548:	andeq	r4, r1, ip, ror #3
   1254c:			; <UNDEFINED> instruction: 0xffff8010
   12550:	strdeq	r3, [r1], -r4
   12554:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12558:	strdeq	r4, [r1], -ip
   1255c:	andeq	r4, r1, r0, lsl #4
   12560:	andeq	r4, r1, ip, lsl #4
   12564:	andeq	r4, r1, r4, lsl r2
   12568:	andeq	r4, r1, r0, lsl #2
   1256c:	andeq	r5, r2, r8
   12570:	andeq	r4, r1, ip, lsr #4
   12574:	muleq	r2, r4, r0
   12578:	ldrdeq	r3, [r1], -ip
   1257c:	andeq	r4, r1, r8, asr #4
   12580:			; <UNDEFINED> instruction: 0x00011db4
   12584:	andeq	r4, r1, r8, asr r2
   12588:	andeq	r4, r1, r0, ror #4
   1258c:	andeq	r4, r1, r8, ror #4
   12590:	andeq	r4, r1, ip, ror #4
   12594:	andeq	r4, r1, r0, lsr #4
   12598:			; <UNDEFINED> instruction: 0xfffff7fb
   1259c:			; <UNDEFINED> instruction: 0xffffdffb
   125a0:			; <UNDEFINED> instruction: 0xfffffbfd
   125a4:			; <UNDEFINED> instruction: 0xfffffdfe
   125a8:	andeq	r0, r8, r4
   125ac:	andeq	r0, r8, r8
   125b0:	andeq	r0, r8, r0, lsl r0
   125b4:	andeq	r4, r1, r8, lsr #7
   125b8:			; <UNDEFINED> instruction: 0x000143b0
   125bc:	andeq	r3, r1, r4, lsl #12
   125c0:	andeq	r4, r1, r0, asr #7
   125c4:	andeq	r3, r1, r0, lsl #12
   125c8:	andeq	r4, r1, ip, asr #7
   125cc:	andeq	pc, r0, fp, lsl pc	; <UNPREDICTABLE>
   125d0:	strdeq	r4, [r1], -r0
   125d4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   125d8:	strdeq	r4, [r1], -ip
   125dc:	strdeq	r3, [r1], -r4
   125e0:	ldrdeq	r4, [r1], -r0
   125e4:	ldrdeq	r4, [r1], -ip
   125e8:	andeq	r3, r1, r0, lsl r9
   125ec:	andeq	r4, r1, r0, lsr #2
   125f0:	andeq	r4, r1, ip, asr r3
   125f4:	andeq	r4, r1, ip, ror #6
   125f8:	andeq	r3, r1, r0, asr #22
   125fc:	andeq	r4, r1, ip, ror #5
   12600:	andeq	r4, r1, r8, lsr r3
   12604:	andeq	r4, r1, r4, asr #6
   12608:	svccc	0x00000000
   1260c:	andeq	r0, r0, r0
   12610:	str	r3, [sp]
   12614:	mov	r0, r9
   12618:	mov	r2, r3
   1261c:	mov	r1, r7
   12620:	bl	11c28 <gtk_box_pack_start@plt>
   12624:	ldr	r0, [pc, #-92]	; 125d0 <g_strcmp0@plt+0x72c>
   12628:	bl	11b8c <gtk_label_new@plt>
   1262c:	ldr	r9, [r8, #8]
   12630:	cmp	r9, #0
   12634:	mov	r4, r0
   12638:	beq	12bb8 <g_strcmp0@plt+0xd14>
   1263c:	ldr	r1, [r8, #8]
   12640:	mov	r0, r4
   12644:	bl	11dfc <gtk_label_set_markup@plt>
   12648:	mov	r8, #4
   1264c:	mov	r3, #0
   12650:	mov	r2, r3
   12654:	mov	r1, r4
   12658:	str	r8, [sp]
   1265c:	mov	r0, r7
   12660:	bl	11c28 <gtk_box_pack_start@plt>
   12664:	ldrb	r3, [sp, #56]	; 0x38
   12668:	tst	r3, #1
   1266c:	bne	128cc <g_strcmp0@plt+0xa28>
   12670:	tst	r3, #2
   12674:	bne	1284c <g_strcmp0@plt+0x9a8>
   12678:	ldr	r4, [pc, #-216]	; 125a8 <g_strcmp0@plt+0x704>
   1267c:	ldr	r3, [sp, #56]	; 0x38
   12680:	and	r4, r4, r3
   12684:	cmp	r4, #4
   12688:	beq	12a64 <g_strcmp0@plt+0xbc0>
   1268c:	ldr	r2, [pc, #-232]	; 125ac <g_strcmp0@plt+0x708>
   12690:	and	r2, r2, r3
   12694:	cmp	r2, #8
   12698:	beq	129e0 <g_strcmp0@plt+0xb3c>
   1269c:	ldr	r2, [pc, #-244]	; 125b0 <g_strcmp0@plt+0x70c>
   126a0:	and	r3, r3, r2
   126a4:	cmp	r3, #16
   126a8:	beq	12960 <g_strcmp0@plt+0xabc>
   126ac:	ldrb	r3, [sp, #58]	; 0x3a
   126b0:	and	r3, r3, #24
   126b4:	cmp	r3, #16
   126b8:	beq	12ae4 <g_strcmp0@plt+0xc40>
   126bc:	mov	r2, #5
   126c0:	ldr	r1, [pc, #-276]	; 125b4 <g_strcmp0@plt+0x710>
   126c4:	mov	r0, #0
   126c8:	bl	11cac <dcgettext@plt>
   126cc:	bl	11ac0 <gtk_button_new_with_mnemonic@plt>
   126d0:	mov	r1, #4
   126d4:	mov	r4, #0
   126d8:	mov	r9, #4
   126dc:	mov	r8, r0
   126e0:	ldr	r0, [pc, #-304]	; 125b8 <g_strcmp0@plt+0x714>
   126e4:	bl	11a60 <gtk_image_new_from_icon_name@plt>
   126e8:	mov	r1, r0
   126ec:	mov	r0, r8
   126f0:	bl	11cf4 <gtk_button_set_image@plt>
   126f4:	vldr	s1, [pc, #-244]	; 12608 <g_strcmp0@plt+0x764>
   126f8:	vldr	s0, [pc, #-244]	; 1260c <g_strcmp0@plt+0x768>
   126fc:	mov	r0, r8
   12700:	bl	11a90 <gtk_button_set_alignment@plt>
   12704:	add	r3, sp, #48	; 0x30
   12708:	mov	r0, r8
   1270c:	ldr	r2, [pc, #-344]	; 125bc <g_strcmp0@plt+0x718>
   12710:	ldr	r1, [pc, #-284]	; 125fc <g_strcmp0@plt+0x758>
   12714:	str	r4, [sp, #4]
   12718:	str	r4, [sp]
   1271c:	bl	11bf8 <g_signal_connect_data@plt>
   12720:	mov	r1, r8
   12724:	mov	r3, r4
   12728:	mov	r2, r4
   1272c:	mov	r0, r7
   12730:	str	r9, [sp]
   12734:	bl	11c28 <gtk_box_pack_start@plt>
   12738:	ldr	r0, [pc, #-384]	; 125c0 <g_strcmp0@plt+0x71c>
   1273c:	bl	11ba4 <gtk_button_new_from_stock@plt>
   12740:	vldr	s1, [pc, #-320]	; 12608 <g_strcmp0@plt+0x764>
   12744:	vldr	s0, [pc, #-320]	; 1260c <g_strcmp0@plt+0x768>
   12748:	mov	r8, r0
   1274c:	bl	11a90 <gtk_button_set_alignment@plt>
   12750:	mov	r3, r4
   12754:	ldr	r2, [pc, #-408]	; 125c4 <g_strcmp0@plt+0x720>
   12758:	ldr	r1, [pc, #-356]	; 125fc <g_strcmp0@plt+0x758>
   1275c:	str	r4, [sp, #4]
   12760:	str	r4, [sp]
   12764:	mov	r0, r8
   12768:	bl	11bf8 <g_signal_connect_data@plt>
   1276c:	bl	11b98 <gtk_accel_group_new@plt>
   12770:	mov	r1, r0
   12774:	mov	sl, r0
   12778:	mov	r0, r6
   1277c:	bl	119f4 <gtk_window_add_accel_group@plt>
   12780:	mov	r3, #1
   12784:	mov	r2, sl
   12788:	mov	r0, r8
   1278c:	str	r3, [sp, #4]
   12790:	ldr	r1, [pc, #-464]	; 125c8 <g_strcmp0@plt+0x724>
   12794:	ldr	r3, [pc, #-464]	; 125cc <g_strcmp0@plt+0x728>
   12798:	str	r4, [sp]
   1279c:	bl	11d3c <gtk_widget_add_accelerator@plt>
   127a0:	mov	r3, r4
   127a4:	mov	r2, r4
   127a8:	mov	r1, r8
   127ac:	mov	r0, r7
   127b0:	str	r9, [sp]
   127b4:	bl	11c28 <gtk_box_pack_start@plt>
   127b8:	ldr	r0, [pc, #-496]	; 125d0 <g_strcmp0@plt+0x72c>
   127bc:	bl	11b8c <gtk_label_new@plt>
   127c0:	mov	r1, #2
   127c4:	str	r0, [sp, #52]	; 0x34
   127c8:	bl	11e44 <gtk_label_set_justify@plt>
   127cc:	mov	r3, r4
   127d0:	mov	r2, r4
   127d4:	ldr	r1, [sp, #52]	; 0x34
   127d8:	mov	r0, r7
   127dc:	str	r9, [sp]
   127e0:	bl	11c28 <gtk_box_pack_start@plt>
   127e4:	mov	r0, r6
   127e8:	bl	11d6c <gtk_widget_show_all@plt>
   127ec:	bl	11cd0 <gtk_main@plt>
   127f0:	mov	r0, r4
   127f4:	b	1244c <g_strcmp0@plt+0x5a8>
   127f8:	mov	r4, #2
   127fc:	mov	r1, sl
   12800:	mov	r3, fp
   12804:	mov	r2, fp
   12808:	mov	r0, r7
   1280c:	str	r4, [sp]
   12810:	bl	11c28 <gtk_box_pack_start@plt>
   12814:	bl	11ce8 <gtk_hseparator_new@plt>
   12818:	mov	r3, fp
   1281c:	mov	r2, fp
   12820:	str	r4, [sp]
   12824:	mov	r1, r0
   12828:	mov	r0, r7
   1282c:	bl	11c28 <gtk_box_pack_start@plt>
   12830:	str	fp, [sp]
   12834:	mov	r0, r9
   12838:	mov	r3, fp
   1283c:	mov	r2, fp
   12840:	mov	r1, r7
   12844:	bl	11c28 <gtk_box_pack_start@plt>
   12848:	b	12624 <g_strcmp0@plt+0x780>
   1284c:	mov	r2, #5
   12850:	ldr	r1, [pc, #-644]	; 125d4 <g_strcmp0@plt+0x730>
   12854:	mov	r0, #0
   12858:	bl	11cac <dcgettext@plt>
   1285c:	bl	11ac0 <gtk_button_new_with_mnemonic@plt>
   12860:	mov	r1, #4
   12864:	mov	r8, #0
   12868:	mov	r4, r0
   1286c:	ldr	r0, [pc, #-668]	; 125d8 <g_strcmp0@plt+0x734>
   12870:	bl	11a60 <gtk_image_new_from_icon_name@plt>
   12874:	mov	r1, r0
   12878:	mov	r0, r4
   1287c:	bl	11cf4 <gtk_button_set_image@plt>
   12880:	mov	r0, r4
   12884:	vldr	s1, [pc, #-644]	; 12608 <g_strcmp0@plt+0x764>
   12888:	vldr	s0, [pc, #-644]	; 1260c <g_strcmp0@plt+0x768>
   1288c:	bl	11a90 <gtk_button_set_alignment@plt>
   12890:	add	r3, sp, #48	; 0x30
   12894:	mov	r0, r4
   12898:	str	r8, [sp, #4]
   1289c:	str	r8, [sp]
   128a0:	ldr	r2, [pc, #-716]	; 125dc <g_strcmp0@plt+0x738>
   128a4:	ldr	r1, [pc, #-688]	; 125fc <g_strcmp0@plt+0x758>
   128a8:	bl	11bf8 <g_signal_connect_data@plt>
   128ac:	mov	r0, #4
   128b0:	str	r0, [sp]
   128b4:	mov	r1, r4
   128b8:	mov	r3, r8
   128bc:	mov	r2, r8
   128c0:	mov	r0, r7
   128c4:	bl	11c28 <gtk_box_pack_start@plt>
   128c8:	b	12678 <g_strcmp0@plt+0x7d4>
   128cc:	mov	r2, #5
   128d0:	ldr	r1, [pc, #-760]	; 125e0 <g_strcmp0@plt+0x73c>
   128d4:	mov	r0, #0
   128d8:	bl	11cac <dcgettext@plt>
   128dc:	bl	11ac0 <gtk_button_new_with_mnemonic@plt>
   128e0:	mov	r1, r8
   128e4:	mov	r9, #0
   128e8:	mov	r4, r0
   128ec:	ldr	r0, [pc, #-784]	; 125e4 <g_strcmp0@plt+0x740>
   128f0:	bl	11a60 <gtk_image_new_from_icon_name@plt>
   128f4:	mov	r1, r0
   128f8:	mov	r0, r4
   128fc:	bl	11cf4 <gtk_button_set_image@plt>
   12900:	vldr	s1, [pc, #-768]	; 12608 <g_strcmp0@plt+0x764>
   12904:	vldr	s0, [pc, #-768]	; 1260c <g_strcmp0@plt+0x768>
   12908:	mov	r0, r4
   1290c:	bl	11a90 <gtk_button_set_alignment@plt>
   12910:	add	r3, sp, #48	; 0x30
   12914:	ldr	r2, [pc, #-820]	; 125e8 <g_strcmp0@plt+0x744>
   12918:	ldr	r1, [pc, #-804]	; 125fc <g_strcmp0@plt+0x758>
   1291c:	mov	r0, r4
   12920:	str	r9, [sp, #4]
   12924:	str	r9, [sp]
   12928:	bl	11bf8 <g_signal_connect_data@plt>
   1292c:	mov	r3, r9
   12930:	mov	r1, r4
   12934:	str	r8, [sp]
   12938:	mov	r2, r9
   1293c:	mov	r0, r7
   12940:	bl	11c28 <gtk_box_pack_start@plt>
   12944:	ldrb	r3, [sp, #56]	; 0x38
   12948:	b	12670 <g_strcmp0@plt+0x7cc>
   1294c:	ldr	r0, [pc, #-872]	; 125ec <g_strcmp0@plt+0x748>
   12950:	bl	11bec <g_find_program_in_path@plt>
   12954:	cmp	r0, #0
   12958:	bne	120c0 <g_strcmp0@plt+0x21c>
   1295c:	b	120cc <g_strcmp0@plt+0x228>
   12960:	mov	r2, #5
   12964:	ldr	r1, [pc, #-892]	; 125f0 <g_strcmp0@plt+0x74c>
   12968:	mov	r0, #0
   1296c:	bl	11cac <dcgettext@plt>
   12970:	bl	11ac0 <gtk_button_new_with_mnemonic@plt>
   12974:	mov	r1, #4
   12978:	mov	r8, #0
   1297c:	mov	r4, r0
   12980:	ldr	r0, [pc, #-916]	; 125f4 <g_strcmp0@plt+0x750>
   12984:	bl	11a60 <gtk_image_new_from_icon_name@plt>
   12988:	mov	r1, r0
   1298c:	mov	r0, r4
   12990:	bl	11cf4 <gtk_button_set_image@plt>
   12994:	mov	r0, r4
   12998:	vldr	s1, [pc, #-920]	; 12608 <g_strcmp0@plt+0x764>
   1299c:	vldr	s0, [pc, #-920]	; 1260c <g_strcmp0@plt+0x768>
   129a0:	bl	11a90 <gtk_button_set_alignment@plt>
   129a4:	add	r3, sp, #48	; 0x30
   129a8:	mov	r0, r4
   129ac:	str	r8, [sp, #4]
   129b0:	str	r8, [sp]
   129b4:	ldr	r2, [pc, #-964]	; 125f8 <g_strcmp0@plt+0x754>
   129b8:	ldr	r1, [pc, #-964]	; 125fc <g_strcmp0@plt+0x758>
   129bc:	bl	11bf8 <g_signal_connect_data@plt>
   129c0:	mov	r0, #4
   129c4:	str	r0, [sp]
   129c8:	mov	r1, r4
   129cc:	mov	r3, r8
   129d0:	mov	r2, r8
   129d4:	mov	r0, r7
   129d8:	bl	11c28 <gtk_box_pack_start@plt>
   129dc:	b	126ac <g_strcmp0@plt+0x808>
   129e0:	mov	r2, #5
   129e4:	ldr	r1, [pc, #-1004]	; 12600 <g_strcmp0@plt+0x75c>
   129e8:	mov	r0, #0
   129ec:	bl	11cac <dcgettext@plt>
   129f0:	bl	11ac0 <gtk_button_new_with_mnemonic@plt>
   129f4:	mov	r1, #4
   129f8:	mov	r8, #0
   129fc:	mov	r4, r0
   12a00:	ldr	r0, [pc, #-1028]	; 12604 <g_strcmp0@plt+0x760>
   12a04:	bl	11a60 <gtk_image_new_from_icon_name@plt>
   12a08:	mov	r1, r0
   12a0c:	mov	r0, r4
   12a10:	bl	11cf4 <gtk_button_set_image@plt>
   12a14:	vldr	s1, [pc, #752]	; 12d0c <g_strcmp0@plt+0xe68>
   12a18:	vldr	s0, [pc, #752]	; 12d10 <g_strcmp0@plt+0xe6c>
   12a1c:	mov	r0, r4
   12a20:	bl	11a90 <gtk_button_set_alignment@plt>
   12a24:	add	r3, sp, #48	; 0x30
   12a28:	ldr	r2, [pc, #740]	; 12d14 <g_strcmp0@plt+0xe70>
   12a2c:	ldr	r1, [pc, #740]	; 12d18 <g_strcmp0@plt+0xe74>
   12a30:	mov	r0, r4
   12a34:	str	r8, [sp, #4]
   12a38:	str	r8, [sp]
   12a3c:	bl	11bf8 <g_signal_connect_data@plt>
   12a40:	mov	r0, #4
   12a44:	mov	r3, r8
   12a48:	str	r0, [sp]
   12a4c:	mov	r1, r4
   12a50:	mov	r2, r8
   12a54:	mov	r0, r7
   12a58:	bl	11c28 <gtk_box_pack_start@plt>
   12a5c:	ldr	r3, [sp, #56]	; 0x38
   12a60:	b	1269c <g_strcmp0@plt+0x7f8>
   12a64:	mov	r2, #5
   12a68:	ldr	r1, [pc, #684]	; 12d1c <g_strcmp0@plt+0xe78>
   12a6c:	mov	r0, #0
   12a70:	bl	11cac <dcgettext@plt>
   12a74:	bl	11ac0 <gtk_button_new_with_mnemonic@plt>
   12a78:	mov	r1, r4
   12a7c:	mov	r9, #0
   12a80:	mov	r8, r0
   12a84:	ldr	r0, [pc, #660]	; 12d20 <g_strcmp0@plt+0xe7c>
   12a88:	bl	11a60 <gtk_image_new_from_icon_name@plt>
   12a8c:	mov	r1, r0
   12a90:	mov	r0, r8
   12a94:	bl	11cf4 <gtk_button_set_image@plt>
   12a98:	vldr	s1, [pc, #620]	; 12d0c <g_strcmp0@plt+0xe68>
   12a9c:	vldr	s0, [pc, #620]	; 12d10 <g_strcmp0@plt+0xe6c>
   12aa0:	mov	r0, r8
   12aa4:	bl	11a90 <gtk_button_set_alignment@plt>
   12aa8:	add	r3, sp, #48	; 0x30
   12aac:	ldr	r2, [pc, #624]	; 12d24 <g_strcmp0@plt+0xe80>
   12ab0:	ldr	r1, [pc, #608]	; 12d18 <g_strcmp0@plt+0xe74>
   12ab4:	mov	r0, r8
   12ab8:	str	r9, [sp, #4]
   12abc:	str	r9, [sp]
   12ac0:	bl	11bf8 <g_signal_connect_data@plt>
   12ac4:	mov	r3, r9
   12ac8:	mov	r1, r8
   12acc:	str	r4, [sp]
   12ad0:	mov	r2, r9
   12ad4:	mov	r0, r7
   12ad8:	bl	11c28 <gtk_box_pack_start@plt>
   12adc:	ldr	r3, [sp, #56]	; 0x38
   12ae0:	b	1268c <g_strcmp0@plt+0x7e8>
   12ae4:	mov	r2, #5
   12ae8:	ldr	r1, [pc, #568]	; 12d28 <g_strcmp0@plt+0xe84>
   12aec:	mov	r0, #0
   12af0:	bl	11cac <dcgettext@plt>
   12af4:	bl	11ac0 <gtk_button_new_with_mnemonic@plt>
   12af8:	mov	r1, #4
   12afc:	mov	r8, #0
   12b00:	mov	r4, r0
   12b04:	ldr	r0, [pc, #544]	; 12d2c <g_strcmp0@plt+0xe88>
   12b08:	bl	11a60 <gtk_image_new_from_icon_name@plt>
   12b0c:	mov	r1, r0
   12b10:	mov	r0, r4
   12b14:	bl	11cf4 <gtk_button_set_image@plt>
   12b18:	mov	r0, r4
   12b1c:	vldr	s1, [pc, #488]	; 12d0c <g_strcmp0@plt+0xe68>
   12b20:	vldr	s0, [pc, #488]	; 12d10 <g_strcmp0@plt+0xe6c>
   12b24:	bl	11a90 <gtk_button_set_alignment@plt>
   12b28:	add	r3, sp, #48	; 0x30
   12b2c:	mov	r0, r4
   12b30:	str	r8, [sp, #4]
   12b34:	str	r8, [sp]
   12b38:	ldr	r2, [pc, #496]	; 12d30 <g_strcmp0@plt+0xe8c>
   12b3c:	ldr	r1, [pc, #468]	; 12d18 <g_strcmp0@plt+0xe74>
   12b40:	bl	11bf8 <g_signal_connect_data@plt>
   12b44:	mov	r0, #4
   12b48:	str	r0, [sp]
   12b4c:	mov	r1, r4
   12b50:	mov	r3, r8
   12b54:	mov	r2, r8
   12b58:	mov	r0, r7
   12b5c:	bl	11c28 <gtk_box_pack_start@plt>
   12b60:	b	126bc <g_strcmp0@plt+0x818>
   12b64:	mov	fp, #2
   12b68:	mov	r1, sl
   12b6c:	mov	r3, r4
   12b70:	mov	r2, r4
   12b74:	mov	r0, r7
   12b78:	str	fp, [sp]
   12b7c:	bl	11c4c <gtk_box_pack_end@plt>
   12b80:	bl	11ce8 <gtk_hseparator_new@plt>
   12b84:	mov	r3, r4
   12b88:	mov	r2, r4
   12b8c:	str	fp, [sp]
   12b90:	mov	r1, r0
   12b94:	mov	r0, r7
   12b98:	bl	11c4c <gtk_box_pack_end@plt>
   12b9c:	str	r4, [sp]
   12ba0:	mov	r0, r9
   12ba4:	mov	r3, r4
   12ba8:	mov	r2, r4
   12bac:	mov	r1, r7
   12bb0:	bl	11c28 <gtk_box_pack_start@plt>
   12bb4:	b	12624 <g_strcmp0@plt+0x780>
   12bb8:	ldr	r0, [pc, #372]	; 12d34 <g_strcmp0@plt+0xe90>
   12bbc:	bl	11c88 <g_getenv@plt>
   12bc0:	ldr	sl, [pc, #368]	; 12d38 <g_strcmp0@plt+0xe94>
   12bc4:	str	r9, [sp, #40]	; 0x28
   12bc8:	cmp	r0, #0
   12bcc:	movne	sl, r0
   12bd0:	ldr	r0, [pc, #356]	; 12d3c <g_strcmp0@plt+0xe98>
   12bd4:	bl	11bec <g_find_program_in_path@plt>
   12bd8:	cmp	r0, #0
   12bdc:	beq	12c04 <g_strcmp0@plt+0xd60>
   12be0:	add	r3, sp, #44	; 0x2c
   12be4:	str	r3, [sp]
   12be8:	mov	r2, r9
   12bec:	mov	r3, r9
   12bf0:	add	r1, sp, #40	; 0x28
   12bf4:	ldr	r0, [pc, #324]	; 12d40 <g_strcmp0@plt+0xe9c>
   12bf8:	bl	11b08 <g_spawn_command_line_sync@plt>
   12bfc:	cmp	r0, #0
   12c00:	beq	12cd8 <g_strcmp0@plt+0xe34>
   12c04:	ldr	r9, [sp, #40]	; 0x28
   12c08:	cmp	r9, #0
   12c0c:	ldreq	r3, [pc, #304]	; 12d44 <g_strcmp0@plt+0xea0>
   12c10:	streq	r3, [sp, #40]	; 0x28
   12c14:	beq	12c2c <g_strcmp0@plt+0xd88>
   12c18:	mov	r0, r9
   12c1c:	bl	11d90 <strlen@plt>
   12c20:	mov	r3, #0
   12c24:	add	r0, r9, r0
   12c28:	strb	r3, [r0, #-1]
   12c2c:	mov	r2, #5
   12c30:	ldr	r1, [pc, #272]	; 12d48 <g_strcmp0@plt+0xea4>
   12c34:	mov	r0, #0
   12c38:	bl	11cac <dcgettext@plt>
   12c3c:	mov	r1, sl
   12c40:	ldr	r2, [sp, #40]	; 0x28
   12c44:	bl	11b38 <g_strdup_printf@plt>
   12c48:	str	r0, [r8, #8]
   12c4c:	b	1263c <g_strcmp0@plt+0x798>
   12c50:	mov	r1, #2
   12c54:	bl	11e14 <gtk_hbox_new@plt>
   12c58:	mov	r3, fp
   12c5c:	mov	r2, fp
   12c60:	str	fp, [sp]
   12c64:	mov	r4, r0
   12c68:	mov	r1, r4
   12c6c:	mov	r0, r9
   12c70:	bl	11c28 <gtk_box_pack_start@plt>
   12c74:	mov	r9, #2
   12c78:	vldr	s1, [pc, #144]	; 12d10 <g_strcmp0@plt+0xe6c>
   12c7c:	vldr	s0, [pc, #136]	; 12d0c <g_strcmp0@plt+0xe68>
   12c80:	mov	r0, sl
   12c84:	bl	11c7c <gtk_misc_set_alignment@plt>
   12c88:	mov	r3, fp
   12c8c:	mov	r2, fp
   12c90:	mov	r1, r7
   12c94:	mov	r0, r4
   12c98:	str	r9, [sp]
   12c9c:	bl	11c28 <gtk_box_pack_start@plt>
   12ca0:	bl	11d78 <gtk_vseparator_new@plt>
   12ca4:	mov	r3, fp
   12ca8:	mov	r2, fp
   12cac:	str	r9, [sp]
   12cb0:	mov	r1, r0
   12cb4:	mov	r0, r4
   12cb8:	bl	11c4c <gtk_box_pack_end@plt>
   12cbc:	str	r9, [sp]
   12cc0:	mov	r0, r4
   12cc4:	mov	r1, sl
   12cc8:	mov	r3, fp
   12ccc:	mov	r2, fp
   12cd0:	bl	11c4c <gtk_box_pack_end@plt>
   12cd4:	b	12624 <g_strcmp0@plt+0x780>
   12cd8:	ldr	r3, [sp, #44]	; 0x2c
   12cdc:	ldr	r1, [pc, #104]	; 12d4c <g_strcmp0@plt+0xea8>
   12ce0:	ldr	r2, [pc, #104]	; 12d50 <g_strcmp0@plt+0xeac>
   12ce4:	ldr	r3, [r3, #8]
   12ce8:	ldr	r0, [r1]
   12cec:	mov	r1, #1
   12cf0:	bl	11af0 <__fprintf_chk@plt>
   12cf4:	ldr	r0, [sp, #44]	; 0x2c
   12cf8:	bl	11a30 <g_error_free@plt>
   12cfc:	b	12c04 <g_strcmp0@plt+0xd60>
   12d00:	bl	11c70 <__stack_chk_fail@plt>
   12d04:	mov	r0, #1
   12d08:	bl	11a9c <exit@plt>
   12d0c:	svccc	0x00000000
   12d10:	andeq	r0, r0, r0
   12d14:	andeq	r3, r1, r0, asr ip
   12d18:	andeq	r4, r1, ip, ror #5
   12d1c:	andeq	r4, r1, r4, lsl r3
   12d20:	andeq	r4, r1, r0, lsr #6
   12d24:	andeq	r3, r1, r0, lsl sp
   12d28:	andeq	r4, r1, r4, lsl #7
   12d2c:	muleq	r1, r4, r3
   12d30:	andeq	r3, r1, r4, lsr #22
   12d34:	andeq	r4, r1, r4, ror r2
   12d38:	andeq	r4, r1, r8, ror r1
   12d3c:	andeq	r4, r1, r4, lsl #5
   12d40:	muleq	r1, r0, r2
   12d44:	strdeq	r4, [r1], -r0
   12d48:	andeq	r4, r1, r4, lsr #5
   12d4c:	andeq	r5, r2, r8, ror r0
   12d50:	andeq	r4, r1, r0, lsr #4
   12d54:	mov	fp, #0
   12d58:	mov	lr, #0
   12d5c:	pop	{r1}		; (ldr r1, [sp], #4)
   12d60:	mov	r2, sp
   12d64:	push	{r2}		; (str r2, [sp, #-4]!)
   12d68:	push	{r0}		; (str r0, [sp, #-4]!)
   12d6c:	ldr	ip, [pc, #16]	; 12d84 <g_strcmp0@plt+0xee0>
   12d70:	push	{ip}		; (str ip, [sp, #-4]!)
   12d74:	ldr	r0, [pc, #12]	; 12d88 <g_strcmp0@plt+0xee4>
   12d78:	ldr	r3, [pc, #12]	; 12d8c <g_strcmp0@plt+0xee8>
   12d7c:	bl	11e50 <__libc_start_main@plt>
   12d80:	bl	11b74 <abort@plt>
   12d84:	andeq	r3, r1, r4, lsr lr
   12d88:			; <UNDEFINED> instruction: 0x00011eb0
   12d8c:	ldrdeq	r3, [r1], -r4
   12d90:	ldr	r3, [pc, #20]	; 12dac <g_strcmp0@plt+0xf08>
   12d94:	ldr	r2, [pc, #20]	; 12db0 <g_strcmp0@plt+0xf0c>
   12d98:	add	r3, pc, r3
   12d9c:	ldr	r2, [r3, r2]
   12da0:	cmp	r2, #0
   12da4:	bxeq	lr
   12da8:	b	11e5c <__gmon_start__@plt>
   12dac:	strheq	r2, [r1], -ip
   12db0:	andeq	r0, r0, r0, lsr #3
   12db4:	ldr	r0, [pc, #24]	; 12dd4 <g_strcmp0@plt+0xf30>
   12db8:	ldr	r3, [pc, #24]	; 12dd8 <g_strcmp0@plt+0xf34>
   12dbc:	cmp	r3, r0
   12dc0:	bxeq	lr
   12dc4:	ldr	r3, [pc, #16]	; 12ddc <g_strcmp0@plt+0xf38>
   12dc8:	cmp	r3, #0
   12dcc:	bxeq	lr
   12dd0:	bx	r3
   12dd4:	andeq	r5, r2, r8, ror r0
   12dd8:	andeq	r5, r2, r8, ror r0
   12ddc:	andeq	r0, r0, r0
   12de0:	ldr	r0, [pc, #36]	; 12e0c <g_strcmp0@plt+0xf68>
   12de4:	ldr	r1, [pc, #36]	; 12e10 <g_strcmp0@plt+0xf6c>
   12de8:	sub	r1, r1, r0
   12dec:	asr	r1, r1, #2
   12df0:	add	r1, r1, r1, lsr #31
   12df4:	asrs	r1, r1, #1
   12df8:	bxeq	lr
   12dfc:	ldr	r3, [pc, #16]	; 12e14 <g_strcmp0@plt+0xf70>
   12e00:	cmp	r3, #0
   12e04:	bxeq	lr
   12e08:	bx	r3
   12e0c:	andeq	r5, r2, r8, ror r0
   12e10:	andeq	r5, r2, r8, ror r0
   12e14:	andeq	r0, r0, r0
   12e18:	push	{r4, lr}
   12e1c:	ldr	r4, [pc, #24]	; 12e3c <g_strcmp0@plt+0xf98>
   12e20:	ldrb	r3, [r4]
   12e24:	cmp	r3, #0
   12e28:	popne	{r4, pc}
   12e2c:	bl	12db4 <g_strcmp0@plt+0xf10>
   12e30:	mov	r3, #1
   12e34:	strb	r3, [r4]
   12e38:	pop	{r4, pc}
   12e3c:	andeq	r5, r2, ip, ror r0
   12e40:	b	12de0 <g_strcmp0@plt+0xf3c>
   12e44:	push	{r4, r5, r6, r7, r8, lr}
   12e48:	mov	r8, r0
   12e4c:	ldr	r6, [pc, #212]	; 12f28 <g_strcmp0@plt+0x1084>
   12e50:	ldr	r5, [pc, #212]	; 12f2c <g_strcmp0@plt+0x1088>
   12e54:	sub	sp, sp, #24
   12e58:	ldr	r0, [r6]
   12e5c:	ldr	ip, [r5]
   12e60:	mov	r3, #0
   12e64:	cmp	r0, #0
   12e68:	mov	r4, r1
   12e6c:	mov	r7, r2
   12e70:	str	ip, [sp, #20]
   12e74:	str	r3, [sp, #16]
   12e78:	beq	12ef0 <g_strcmp0@plt+0x104c>
   12e7c:	mov	r3, #0
   12e80:	mvn	ip, #0
   12e84:	str	r7, [sp, #8]
   12e88:	mov	r1, r8
   12e8c:	str	r3, [sp, #4]
   12e90:	mov	r2, r3
   12e94:	str	ip, [sp]
   12e98:	bl	11c10 <g_dbus_proxy_call_sync@plt>
   12e9c:	subs	r6, r0, #0
   12ea0:	moveq	r0, r4
   12ea4:	beq	12ec4 <g_strcmp0@plt+0x1020>
   12ea8:	ldr	r1, [pc, #128]	; 12f30 <g_strcmp0@plt+0x108c>
   12eac:	bl	11de4 <g_variant_is_of_type@plt>
   12eb0:	cmp	r0, #0
   12eb4:	bne	12edc <g_strcmp0@plt+0x1038>
   12eb8:	mov	r0, r6
   12ebc:	bl	11d00 <g_variant_unref@plt>
   12ec0:	ldr	r0, [sp, #16]
   12ec4:	ldr	r2, [sp, #20]
   12ec8:	ldr	r3, [r5]
   12ecc:	cmp	r2, r3
   12ed0:	bne	12f24 <g_strcmp0@plt+0x1080>
   12ed4:	add	sp, sp, #24
   12ed8:	pop	{r4, r5, r6, r7, r8, pc}
   12edc:	add	r2, sp, #16
   12ee0:	ldr	r1, [pc, #72]	; 12f30 <g_strcmp0@plt+0x108c>
   12ee4:	mov	r0, r6
   12ee8:	bl	11c64 <g_variant_get@plt>
   12eec:	b	12eb8 <g_strcmp0@plt+0x1014>
   12ef0:	ldr	r3, [pc, #60]	; 12f34 <g_strcmp0@plt+0x1090>
   12ef4:	ldr	r2, [pc, #60]	; 12f38 <g_strcmp0@plt+0x1094>
   12ef8:	str	r0, [sp, #8]
   12efc:	mov	r1, r0
   12f00:	strd	r2, [sp]
   12f04:	str	r7, [sp, #12]
   12f08:	mov	r2, r0
   12f0c:	mov	r0, #1
   12f10:	bl	11d9c <g_dbus_proxy_new_for_bus_sync@plt>
   12f14:	cmp	r0, #0
   12f18:	str	r0, [r6]
   12f1c:	bne	12e7c <g_strcmp0@plt+0xfd8>
   12f20:	b	12ec4 <g_strcmp0@plt+0x1020>
   12f24:	bl	11c70 <__stack_chk_fail@plt>
   12f28:	andeq	r5, r2, r0, lsl #1
   12f2c:	andeq	r4, r2, r8, ror #25
   12f30:	andeq	r3, r1, ip, lsl #29
   12f34:	andeq	r3, r1, ip, asr lr
   12f38:	andeq	r3, r1, r4, ror lr
   12f3c:	push	{r4, r5, r6, r7, lr}
   12f40:	mov	r7, r0
   12f44:	ldr	r5, [pc, #132]	; 12fd0 <g_strcmp0@plt+0x112c>
   12f48:	sub	sp, sp, #20
   12f4c:	mov	r6, r1
   12f50:	ldr	r4, [r5, #4]
   12f54:	cmp	r4, #0
   12f58:	beq	12f94 <g_strcmp0@plt+0x10f0>
   12f5c:	mov	r1, #1
   12f60:	ldr	r0, [pc, #108]	; 12fd4 <g_strcmp0@plt+0x1130>
   12f64:	bl	11acc <g_variant_new@plt>
   12f68:	mov	r3, #0
   12f6c:	mvn	r2, #0
   12f70:	str	r6, [sp, #8]
   12f74:	strd	r2, [sp]
   12f78:	mov	r1, r7
   12f7c:	mov	r2, r0
   12f80:	mov	r0, r4
   12f84:	bl	11c10 <g_dbus_proxy_call_sync@plt>
   12f88:	add	sp, sp, #20
   12f8c:	pop	{r4, r5, r6, r7, lr}
   12f90:	b	11d00 <g_variant_unref@plt>
   12f94:	ldr	r2, [pc, #60]	; 12fd8 <g_strcmp0@plt+0x1134>
   12f98:	ldr	r3, [pc, #60]	; 12fdc <g_strcmp0@plt+0x1138>
   12f9c:	mov	r1, r4
   12fa0:	stmib	sp, {r2, r4, r6}
   12fa4:	mov	r0, #1
   12fa8:	str	r3, [sp]
   12fac:	mov	r2, r4
   12fb0:	ldr	r3, [pc, #40]	; 12fe0 <g_strcmp0@plt+0x113c>
   12fb4:	bl	11d9c <g_dbus_proxy_new_for_bus_sync@plt>
   12fb8:	cmp	r0, #0
   12fbc:	mov	r4, r0
   12fc0:	str	r0, [r5, #4]
   12fc4:	bne	12f5c <g_strcmp0@plt+0x10b8>
   12fc8:	add	sp, sp, #20
   12fcc:	pop	{r4, r5, r6, r7, pc}
   12fd0:	andeq	r5, r2, r0, lsl #1
   12fd4:	andeq	r3, r1, ip, lsl #29
   12fd8:	andeq	r3, r1, r8, lsr #29
   12fdc:	andeq	r3, r1, r8, asr #29
   12fe0:	muleq	r1, r0, lr
   12fe4:	push	{r4, r5, r6, lr}
   12fe8:	mov	r6, r0
   12fec:	ldr	r5, [pc, #248]	; 130ec <g_strcmp0@plt+0x1248>
   12ff0:	ldr	r4, [pc, #248]	; 130f0 <g_strcmp0@plt+0x124c>
   12ff4:	sub	sp, sp, #24
   12ff8:	ldr	r0, [r5, #4]
   12ffc:	ldr	r3, [r4]
   13000:	cmp	r0, #0
   13004:	str	r3, [sp, #20]
   13008:	beq	130a8 <g_strcmp0@plt+0x1204>
   1300c:	mov	r3, #0
   13010:	mvn	ip, #0
   13014:	mov	r1, r6
   13018:	str	r3, [sp, #8]
   1301c:	str	r3, [sp, #4]
   13020:	mov	r2, r3
   13024:	str	ip, [sp]
   13028:	bl	11c10 <g_dbus_proxy_call_sync@plt>
   1302c:	subs	r6, r0, #0
   13030:	beq	130e0 <g_strcmp0@plt+0x123c>
   13034:	ldr	r1, [pc, #184]	; 130f4 <g_strcmp0@plt+0x1250>
   13038:	bl	11de4 <g_variant_is_of_type@plt>
   1303c:	subs	r5, r0, #0
   13040:	bne	13068 <g_strcmp0@plt+0x11c4>
   13044:	mov	r0, r6
   13048:	bl	11d00 <g_variant_unref@plt>
   1304c:	ldr	r2, [sp, #20]
   13050:	ldr	r3, [r4]
   13054:	mov	r0, r5
   13058:	cmp	r2, r3
   1305c:	bne	130e8 <g_strcmp0@plt+0x1244>
   13060:	add	sp, sp, #24
   13064:	pop	{r4, r5, r6, pc}
   13068:	add	r2, sp, #16
   1306c:	ldr	r1, [pc, #128]	; 130f4 <g_strcmp0@plt+0x1250>
   13070:	mov	r0, r6
   13074:	bl	11c64 <g_variant_get@plt>
   13078:	ldr	r1, [pc, #120]	; 130f8 <g_strcmp0@plt+0x1254>
   1307c:	ldr	r0, [sp, #16]
   13080:	bl	11ea4 <g_strcmp0@plt>
   13084:	cmp	r0, #0
   13088:	moveq	r5, #1
   1308c:	beq	13044 <g_strcmp0@plt+0x11a0>
   13090:	ldr	r1, [pc, #100]	; 130fc <g_strcmp0@plt+0x1258>
   13094:	ldr	r0, [sp, #16]
   13098:	bl	11ea4 <g_strcmp0@plt>
   1309c:	clz	r5, r0
   130a0:	lsr	r5, r5, #5
   130a4:	b	13044 <g_strcmp0@plt+0x11a0>
   130a8:	ldr	r2, [pc, #80]	; 13100 <g_strcmp0@plt+0x125c>
   130ac:	ldr	r3, [pc, #80]	; 13104 <g_strcmp0@plt+0x1260>
   130b0:	str	r0, [sp, #12]
   130b4:	str	r0, [sp, #8]
   130b8:	str	r2, [sp, #4]
   130bc:	str	r3, [sp]
   130c0:	mov	r2, r0
   130c4:	mov	r1, r0
   130c8:	ldr	r3, [pc, #56]	; 13108 <g_strcmp0@plt+0x1264>
   130cc:	mov	r0, #1
   130d0:	bl	11d9c <g_dbus_proxy_new_for_bus_sync@plt>
   130d4:	cmp	r0, #0
   130d8:	str	r0, [r5, #4]
   130dc:	bne	1300c <g_strcmp0@plt+0x1168>
   130e0:	mov	r5, #0
   130e4:	b	1304c <g_strcmp0@plt+0x11a8>
   130e8:	bl	11c70 <__stack_chk_fail@plt>
   130ec:	andeq	r5, r2, r0, lsl #1
   130f0:	andeq	r4, r2, r8, ror #25
   130f4:	andeq	r3, r1, r0, ror #29
   130f8:	andeq	r3, r1, r4, ror #29
   130fc:	andeq	r3, r1, r8, ror #29
   13100:	andeq	r3, r1, r8, lsr #29
   13104:	andeq	r3, r1, r8, asr #29
   13108:	muleq	r1, r0, lr
   1310c:	push	{r4, r5, r6, r7, lr}
   13110:	mov	r7, r0
   13114:	ldr	r5, [pc, #132]	; 131a0 <g_strcmp0@plt+0x12fc>
   13118:	sub	sp, sp, #20
   1311c:	mov	r6, r1
   13120:	ldr	r4, [r5, #8]
   13124:	cmp	r4, #0
   13128:	beq	13164 <g_strcmp0@plt+0x12c0>
   1312c:	mov	r1, #1
   13130:	ldr	r0, [pc, #108]	; 131a4 <g_strcmp0@plt+0x1300>
   13134:	bl	11acc <g_variant_new@plt>
   13138:	mov	r3, #0
   1313c:	mvn	r2, #0
   13140:	str	r6, [sp, #8]
   13144:	strd	r2, [sp]
   13148:	mov	r1, r7
   1314c:	mov	r2, r0
   13150:	mov	r0, r4
   13154:	bl	11c10 <g_dbus_proxy_call_sync@plt>
   13158:	add	sp, sp, #20
   1315c:	pop	{r4, r5, r6, r7, lr}
   13160:	b	11d00 <g_variant_unref@plt>
   13164:	ldr	r2, [pc, #60]	; 131a8 <g_strcmp0@plt+0x1304>
   13168:	ldr	r3, [pc, #60]	; 131ac <g_strcmp0@plt+0x1308>
   1316c:	mov	r1, r4
   13170:	stmib	sp, {r2, r4, r6}
   13174:	mov	r0, #1
   13178:	str	r3, [sp]
   1317c:	mov	r2, r4
   13180:	ldr	r3, [pc, #40]	; 131b0 <g_strcmp0@plt+0x130c>
   13184:	bl	11d9c <g_dbus_proxy_new_for_bus_sync@plt>
   13188:	cmp	r0, #0
   1318c:	mov	r4, r0
   13190:	str	r0, [r5, #8]
   13194:	bne	1312c <g_strcmp0@plt+0x1288>
   13198:	add	sp, sp, #20
   1319c:	pop	{r4, r5, r6, r7, pc}
   131a0:	andeq	r5, r2, r0, lsl #1
   131a4:	andeq	r3, r1, ip, lsl #29
   131a8:	andeq	r3, r1, r0, lsl pc
   131ac:	andeq	r3, r1, r4, lsr pc
   131b0:	strdeq	r3, [r1], -r4
   131b4:	push	{r4, r5, r6, lr}
   131b8:	mov	r6, r0
   131bc:	ldr	r5, [pc, #248]	; 132bc <g_strcmp0@plt+0x1418>
   131c0:	ldr	r4, [pc, #248]	; 132c0 <g_strcmp0@plt+0x141c>
   131c4:	sub	sp, sp, #24
   131c8:	ldr	r0, [r5, #8]
   131cc:	ldr	r3, [r4]
   131d0:	cmp	r0, #0
   131d4:	str	r3, [sp, #20]
   131d8:	beq	13278 <g_strcmp0@plt+0x13d4>
   131dc:	mov	r3, #0
   131e0:	mvn	ip, #0
   131e4:	mov	r1, r6
   131e8:	str	r3, [sp, #8]
   131ec:	str	r3, [sp, #4]
   131f0:	mov	r2, r3
   131f4:	str	ip, [sp]
   131f8:	bl	11c10 <g_dbus_proxy_call_sync@plt>
   131fc:	subs	r6, r0, #0
   13200:	beq	132b0 <g_strcmp0@plt+0x140c>
   13204:	ldr	r1, [pc, #184]	; 132c4 <g_strcmp0@plt+0x1420>
   13208:	bl	11de4 <g_variant_is_of_type@plt>
   1320c:	subs	r5, r0, #0
   13210:	bne	13238 <g_strcmp0@plt+0x1394>
   13214:	mov	r0, r6
   13218:	bl	11d00 <g_variant_unref@plt>
   1321c:	ldr	r2, [sp, #20]
   13220:	ldr	r3, [r4]
   13224:	mov	r0, r5
   13228:	cmp	r2, r3
   1322c:	bne	132b8 <g_strcmp0@plt+0x1414>
   13230:	add	sp, sp, #24
   13234:	pop	{r4, r5, r6, pc}
   13238:	add	r2, sp, #16
   1323c:	ldr	r1, [pc, #128]	; 132c4 <g_strcmp0@plt+0x1420>
   13240:	mov	r0, r6
   13244:	bl	11c64 <g_variant_get@plt>
   13248:	ldr	r1, [pc, #120]	; 132c8 <g_strcmp0@plt+0x1424>
   1324c:	ldr	r0, [sp, #16]
   13250:	bl	11ea4 <g_strcmp0@plt>
   13254:	cmp	r0, #0
   13258:	moveq	r5, #1
   1325c:	beq	13214 <g_strcmp0@plt+0x1370>
   13260:	ldr	r1, [pc, #100]	; 132cc <g_strcmp0@plt+0x1428>
   13264:	ldr	r0, [sp, #16]
   13268:	bl	11ea4 <g_strcmp0@plt>
   1326c:	clz	r5, r0
   13270:	lsr	r5, r5, #5
   13274:	b	13214 <g_strcmp0@plt+0x1370>
   13278:	ldr	r2, [pc, #80]	; 132d0 <g_strcmp0@plt+0x142c>
   1327c:	ldr	r3, [pc, #80]	; 132d4 <g_strcmp0@plt+0x1430>
   13280:	str	r0, [sp, #12]
   13284:	str	r0, [sp, #8]
   13288:	str	r2, [sp, #4]
   1328c:	str	r3, [sp]
   13290:	mov	r2, r0
   13294:	mov	r1, r0
   13298:	ldr	r3, [pc, #56]	; 132d8 <g_strcmp0@plt+0x1434>
   1329c:	mov	r0, #1
   132a0:	bl	11d9c <g_dbus_proxy_new_for_bus_sync@plt>
   132a4:	cmp	r0, #0
   132a8:	str	r0, [r5, #8]
   132ac:	bne	131dc <g_strcmp0@plt+0x1338>
   132b0:	mov	r5, #0
   132b4:	b	1321c <g_strcmp0@plt+0x1378>
   132b8:	bl	11c70 <__stack_chk_fail@plt>
   132bc:	andeq	r5, r2, r0, lsl #1
   132c0:	andeq	r4, r2, r8, ror #25
   132c4:	andeq	r3, r1, r0, ror #29
   132c8:	andeq	r3, r1, r4, ror #29
   132cc:	andeq	r3, r1, r8, ror #29
   132d0:	andeq	r3, r1, r0, lsl pc
   132d4:	andeq	r3, r1, r0, asr pc
   132d8:	strdeq	r3, [r1], -r4
   132dc:	mov	r2, #0
   132e0:	mov	r1, r2
   132e4:	ldr	r0, [pc]	; 132ec <g_strcmp0@plt+0x1448>
   132e8:	b	12e44 <g_strcmp0@plt+0xfa0>
   132ec:	andeq	r3, r1, r4, ror pc
   132f0:	mov	r2, r0
   132f4:	mov	r1, #1
   132f8:	ldr	r0, [pc]	; 13300 <g_strcmp0@plt+0x145c>
   132fc:	b	12e44 <g_strcmp0@plt+0xfa0>
   13300:	andeq	r3, r1, r4, lsl #31
   13304:	mov	r2, #0
   13308:	mov	r1, r2
   1330c:	ldr	r0, [pc]	; 13314 <g_strcmp0@plt+0x1470>
   13310:	b	12e44 <g_strcmp0@plt+0xfa0>
   13314:	andeq	r3, r1, ip, lsl #31
   13318:	mov	r2, r0
   1331c:	mov	r1, #1
   13320:	ldr	r0, [pc]	; 13328 <g_strcmp0@plt+0x1484>
   13324:	b	12e44 <g_strcmp0@plt+0xfa0>
   13328:	andeq	r3, r1, r0, lsr #31
   1332c:	ldr	r0, [pc]	; 13334 <g_strcmp0@plt+0x1490>
   13330:	b	131b4 <g_strcmp0@plt+0x1310>
   13334:	andeq	r3, r1, ip, lsr #31
   13338:	mov	r1, r0
   1333c:	ldr	r0, [pc]	; 13344 <g_strcmp0@plt+0x14a0>
   13340:	b	1310c <g_strcmp0@plt+0x1268>
   13344:			; <UNDEFINED> instruction: 0x00013fb8
   13348:	ldr	r0, [pc]	; 13350 <g_strcmp0@plt+0x14ac>
   1334c:	b	131b4 <g_strcmp0@plt+0x1310>
   13350:	andeq	r3, r1, r4, asr #31
   13354:	mov	r1, r0
   13358:	ldr	r0, [pc]	; 13360 <g_strcmp0@plt+0x14bc>
   1335c:	b	1310c <g_strcmp0@plt+0x1268>
   13360:	ldrdeq	r3, [r1], -r0
   13364:	ldr	r0, [pc]	; 1336c <g_strcmp0@plt+0x14c8>
   13368:	b	131b4 <g_strcmp0@plt+0x1310>
   1336c:	ldrdeq	r3, [r1], -r8
   13370:	mov	r1, r0
   13374:	ldr	r0, [pc]	; 1337c <g_strcmp0@plt+0x14d8>
   13378:	b	1310c <g_strcmp0@plt+0x1268>
   1337c:	andeq	r3, r1, r4, lsl #31
   13380:	ldr	r0, [pc]	; 13388 <g_strcmp0@plt+0x14e4>
   13384:	b	131b4 <g_strcmp0@plt+0x1310>
   13388:	andeq	r3, r1, r4, ror #31
   1338c:	mov	r1, r0
   13390:	ldr	r0, [pc]	; 13398 <g_strcmp0@plt+0x14f4>
   13394:	b	1310c <g_strcmp0@plt+0x1268>
   13398:	andeq	r3, r1, r0, lsr #31
   1339c:	ldr	r0, [pc]	; 133a4 <g_strcmp0@plt+0x1500>
   133a0:	b	12fe4 <g_strcmp0@plt+0x1140>
   133a4:	andeq	r3, r1, ip, lsr #31
   133a8:	mov	r1, r0
   133ac:	ldr	r0, [pc]	; 133b4 <g_strcmp0@plt+0x1510>
   133b0:	b	12f3c <g_strcmp0@plt+0x1098>
   133b4:			; <UNDEFINED> instruction: 0x00013fb8
   133b8:	ldr	r0, [pc]	; 133c0 <g_strcmp0@plt+0x151c>
   133bc:	b	12fe4 <g_strcmp0@plt+0x1140>
   133c0:	andeq	r3, r1, r4, asr #31
   133c4:	mov	r1, r0
   133c8:	ldr	r0, [pc]	; 133d0 <g_strcmp0@plt+0x152c>
   133cc:	b	12f3c <g_strcmp0@plt+0x1098>
   133d0:	ldrdeq	r3, [r1], -r0
   133d4:	ldr	r0, [pc]	; 133dc <g_strcmp0@plt+0x1538>
   133d8:	b	12fe4 <g_strcmp0@plt+0x1140>
   133dc:	ldrdeq	r3, [r1], -r8
   133e0:	mov	r1, r0
   133e4:	ldr	r0, [pc]	; 133ec <g_strcmp0@plt+0x1548>
   133e8:	b	12f3c <g_strcmp0@plt+0x1098>
   133ec:	andeq	r3, r1, r4, lsl #31
   133f0:	ldr	r0, [pc]	; 133f8 <g_strcmp0@plt+0x1554>
   133f4:	b	12fe4 <g_strcmp0@plt+0x1140>
   133f8:	andeq	r3, r1, r4, ror #31
   133fc:	mov	r1, r0
   13400:	ldr	r0, [pc]	; 13408 <g_strcmp0@plt+0x1564>
   13404:	b	12f3c <g_strcmp0@plt+0x1098>
   13408:	andeq	r3, r1, r0, lsr #31
   1340c:	push	{r4, r5, r6, r7, lr}
   13410:	sub	sp, sp, #28
   13414:	ldr	r6, [pc, #216]	; 134f4 <g_strcmp0@plt+0x1650>
   13418:	ldr	r5, [pc, #216]	; 134f8 <g_strcmp0@plt+0x1654>
   1341c:	mov	r3, #0
   13420:	ldr	r4, [r6, #12]
   13424:	ldr	r2, [r5]
   13428:	cmp	r4, #0
   1342c:	mov	r7, r0
   13430:	str	r2, [sp, #20]
   13434:	str	r3, [sp, #16]
   13438:	beq	134b4 <g_strcmp0@plt+0x1610>
   1343c:	mov	r3, #0
   13440:	mvn	r1, #0
   13444:	mov	r0, r4
   13448:	str	r1, [sp]
   1344c:	str	r7, [sp, #8]
   13450:	str	r3, [sp, #4]
   13454:	mov	r2, r3
   13458:	ldr	r1, [pc, #156]	; 134fc <g_strcmp0@plt+0x1658>
   1345c:	bl	11c10 <g_dbus_proxy_call_sync@plt>
   13460:	subs	r4, r0, #0
   13464:	moveq	r0, #1
   13468:	beq	13488 <g_strcmp0@plt+0x15e4>
   1346c:	ldr	r1, [pc, #140]	; 13500 <g_strcmp0@plt+0x165c>
   13470:	bl	11de4 <g_variant_is_of_type@plt>
   13474:	cmp	r0, #0
   13478:	bne	134a0 <g_strcmp0@plt+0x15fc>
   1347c:	mov	r0, r4
   13480:	bl	11d00 <g_variant_unref@plt>
   13484:	ldr	r0, [sp, #16]
   13488:	ldr	r2, [sp, #20]
   1348c:	ldr	r3, [r5]
   13490:	cmp	r2, r3
   13494:	bne	134f0 <g_strcmp0@plt+0x164c>
   13498:	add	sp, sp, #28
   1349c:	pop	{r4, r5, r6, r7, pc}
   134a0:	add	r2, sp, #16
   134a4:	ldr	r1, [pc, #84]	; 13500 <g_strcmp0@plt+0x165c>
   134a8:	mov	r0, r4
   134ac:	bl	11c64 <g_variant_get@plt>
   134b0:	b	1347c <g_strcmp0@plt+0x15d8>
   134b4:	ldr	r0, [pc, #72]	; 13504 <g_strcmp0@plt+0x1660>
   134b8:	bl	11c88 <g_getenv@plt>
   134bc:	ldr	r3, [pc, #68]	; 13508 <g_strcmp0@plt+0x1664>
   134c0:	mov	r2, r4
   134c4:	mov	r1, r4
   134c8:	stmib	sp, {r3, r4, r7}
   134cc:	ldr	r3, [pc, #56]	; 1350c <g_strcmp0@plt+0x1668>
   134d0:	str	r0, [sp]
   134d4:	mov	r0, #1
   134d8:	bl	11d9c <g_dbus_proxy_new_for_bus_sync@plt>
   134dc:	cmp	r0, #0
   134e0:	mov	r4, r0
   134e4:	str	r0, [r6, #12]
   134e8:	bne	1343c <g_strcmp0@plt+0x1598>
   134ec:	b	13488 <g_strcmp0@plt+0x15e4>
   134f0:	bl	11c70 <__stack_chk_fail@plt>
   134f4:	andeq	r5, r2, r0, lsl #1
   134f8:	andeq	r4, r2, r8, ror #25
   134fc:	andeq	r4, r1, r8, asr #32
   13500:	andeq	r3, r1, ip, lsl #29
   13504:	strdeq	r3, [r1], -r4
   13508:	andeq	r4, r1, r4, lsr #32
   1350c:	andeq	r4, r1, r4
   13510:	push	{r4, r5, r6, lr}
   13514:	mov	r6, r0
   13518:	ldr	r5, [pc, #200]	; 135e8 <g_strcmp0@plt+0x1744>
   1351c:	ldr	r4, [pc, #200]	; 135ec <g_strcmp0@plt+0x1748>
   13520:	sub	sp, sp, #24
   13524:	ldr	r0, [r5, #16]
   13528:	ldr	r2, [r4]
   1352c:	mov	r3, #0
   13530:	cmp	r0, #0
   13534:	str	r2, [sp, #20]
   13538:	str	r3, [sp, #16]
   1353c:	beq	135b0 <g_strcmp0@plt+0x170c>
   13540:	mov	r3, #0
   13544:	mvn	r1, #0
   13548:	str	r1, [sp]
   1354c:	stmib	sp, {r3, r6}
   13550:	mov	r2, r3
   13554:	ldr	r1, [pc, #148]	; 135f0 <g_strcmp0@plt+0x174c>
   13558:	bl	11c10 <g_dbus_proxy_call_sync@plt>
   1355c:	subs	r5, r0, #0
   13560:	moveq	r0, #1
   13564:	beq	13584 <g_strcmp0@plt+0x16e0>
   13568:	ldr	r1, [pc, #132]	; 135f4 <g_strcmp0@plt+0x1750>
   1356c:	bl	11de4 <g_variant_is_of_type@plt>
   13570:	cmp	r0, #0
   13574:	bne	1359c <g_strcmp0@plt+0x16f8>
   13578:	mov	r0, r5
   1357c:	bl	11d00 <g_variant_unref@plt>
   13580:	ldr	r0, [sp, #16]
   13584:	ldr	r2, [sp, #20]
   13588:	ldr	r3, [r4]
   1358c:	cmp	r2, r3
   13590:	bne	135e4 <g_strcmp0@plt+0x1740>
   13594:	add	sp, sp, #24
   13598:	pop	{r4, r5, r6, pc}
   1359c:	add	r2, sp, #16
   135a0:	ldr	r1, [pc, #76]	; 135f4 <g_strcmp0@plt+0x1750>
   135a4:	mov	r0, r5
   135a8:	bl	11c64 <g_variant_get@plt>
   135ac:	b	13578 <g_strcmp0@plt+0x16d4>
   135b0:	ldr	r3, [pc, #64]	; 135f8 <g_strcmp0@plt+0x1754>
   135b4:	ldr	r2, [pc, #64]	; 135fc <g_strcmp0@plt+0x1758>
   135b8:	str	r0, [sp, #8]
   135bc:	mov	r1, r0
   135c0:	strd	r2, [sp]
   135c4:	str	r6, [sp, #12]
   135c8:	mov	r2, r0
   135cc:	mov	r0, #1
   135d0:	bl	11d9c <g_dbus_proxy_new_for_bus_sync@plt>
   135d4:	cmp	r0, #0
   135d8:	str	r0, [r5, #16]
   135dc:	bne	13540 <g_strcmp0@plt+0x169c>
   135e0:	b	13584 <g_strcmp0@plt+0x16e0>
   135e4:	bl	11c70 <__stack_chk_fail@plt>
   135e8:	andeq	r5, r2, r0, lsl #1
   135ec:	andeq	r4, r2, r8, ror #25
   135f0:	andeq	r4, r1, ip, lsl #1
   135f4:	andeq	r3, r1, ip, lsl #29
   135f8:	andeq	r4, r1, r8, asr r0
   135fc:	andeq	r4, r1, r0, ror r0
   13600:	b	11db4 <gtk_main_quit@plt>
   13604:	ldr	r1, [r1]
   13608:	push	{r4, lr}
   1360c:	cmp	r1, #0
   13610:	beq	13628 <g_strcmp0@plt+0x1784>
   13614:	mov	r0, r1
   13618:	mov	r1, #15
   1361c:	bl	11be0 <kill@plt>
   13620:	pop	{r4, lr}
   13624:	b	11db4 <gtk_main_quit@plt>
   13628:	ldr	r0, [pc, #8]	; 13638 <g_strcmp0@plt+0x1794>
   1362c:	bl	11dc0 <g_spawn_command_line_async@plt>
   13630:	pop	{r4, lr}
   13634:	b	11db4 <gtk_main_quit@plt>
   13638:	muleq	r1, r4, r0
   1363c:	ldr	r0, [pc]	; 13644 <g_strcmp0@plt+0x17a0>
   13640:	b	11bbc <unlink@plt>
   13644:	andeq	r5, r2, r0, lsr #1
   13648:	push	{r4, r5, r6, r7, r8, lr}
   1364c:	sub	sp, sp, #4096	; 0x1000
   13650:	ldr	r4, [pc, #372]	; 137cc <g_strcmp0@plt+0x1928>
   13654:	sub	sp, sp, #16
   13658:	add	r2, sp, #4096	; 0x1000
   1365c:	ldr	r3, [r4]
   13660:	add	r2, r2, #12
   13664:	mov	r5, r0
   13668:	mov	r0, r1
   1366c:	str	r3, [r2]
   13670:	bl	11bec <g_find_program_in_path@plt>
   13674:	subs	r3, r0, #0
   13678:	moveq	r0, r3
   1367c:	beq	136c8 <g_strcmp0@plt+0x1824>
   13680:	bl	11ca0 <g_free@plt>
   13684:	ldr	r3, [pc, #324]	; 137d0 <g_strcmp0@plt+0x192c>
   13688:	mov	r2, #4096	; 0x1000
   1368c:	mov	r1, #1
   13690:	str	r5, [sp]
   13694:	add	r0, sp, #12
   13698:	bl	11e20 <__sprintf_chk@plt>
   1369c:	add	r0, sp, #12
   136a0:	mov	r1, #1
   136a4:	bl	11cb8 <g_file_test@plt>
   136a8:	cmp	r0, #0
   136ac:	beq	137a8 <g_strcmp0@plt+0x1904>
   136b0:	mov	r1, #0
   136b4:	add	r0, sp, #12
   136b8:	bl	11c40 <open@plt>
   136bc:	subs	r6, r0, #0
   136c0:	bge	136ec <g_strcmp0@plt+0x1848>
   136c4:	mov	r0, #0
   136c8:	add	r3, sp, #4096	; 0x1000
   136cc:	add	r3, r3, #12
   136d0:	ldr	r2, [r3]
   136d4:	ldr	r3, [r4]
   136d8:	cmp	r2, r3
   136dc:	bne	137c8 <g_strcmp0@plt+0x1924>
   136e0:	add	sp, sp, #4096	; 0x1000
   136e4:	add	sp, sp, #16
   136e8:	pop	{r4, r5, r6, r7, r8, pc}
   136ec:	mov	r2, #4096	; 0x1000
   136f0:	add	r1, sp, #12
   136f4:	bl	11b68 <read@plt>
   136f8:	mov	r7, r0
   136fc:	mov	r0, r6
   13700:	bl	11b50 <close@plt>
   13704:	cmp	r7, #0
   13708:	ble	136c4 <g_strcmp0@plt+0x1820>
   1370c:	add	r3, sp, #16
   13710:	add	r7, r3, r7
   13714:	mov	r6, #0
   13718:	mov	r1, r6
   1371c:	mov	r2, #10
   13720:	add	r0, sp, #12
   13724:	strb	r6, [r7, #-4]
   13728:	bl	11a3c <strtol@plt>
   1372c:	cmp	r0, #0
   13730:	ble	136c4 <g_strcmp0@plt+0x1820>
   13734:	str	r0, [sp]
   13738:	ldr	r3, [pc, #148]	; 137d4 <g_strcmp0@plt+0x1930>
   1373c:	mov	r2, #4096	; 0x1000
   13740:	mov	r1, #1
   13744:	add	r0, sp, #12
   13748:	bl	11e20 <__sprintf_chk@plt>
   1374c:	mov	r1, r6
   13750:	add	r0, sp, #12
   13754:	bl	11c40 <open@plt>
   13758:	subs	r7, r0, #0
   1375c:	blt	136c4 <g_strcmp0@plt+0x1820>
   13760:	mov	r2, #4096	; 0x1000
   13764:	add	r1, sp, #12
   13768:	bl	11b68 <read@plt>
   1376c:	mov	r8, r0
   13770:	mov	r0, r7
   13774:	bl	11b50 <close@plt>
   13778:	cmp	r8, r6
   1377c:	ble	136c4 <g_strcmp0@plt+0x1820>
   13780:	add	r3, sp, #16
   13784:	add	r3, r3, r8
   13788:	mov	r1, r5
   1378c:	add	r0, sp, #12
   13790:	strb	r6, [r3, #-4]
   13794:	bl	11cdc <strstr@plt>
   13798:	cmp	r0, r6
   1379c:	movne	r0, #1
   137a0:	bne	136c8 <g_strcmp0@plt+0x1824>
   137a4:	b	136c4 <g_strcmp0@plt+0x1820>
   137a8:	str	r5, [sp, #4]
   137ac:	str	r5, [sp]
   137b0:	ldr	r3, [pc, #32]	; 137d8 <g_strcmp0@plt+0x1934>
   137b4:	mov	r2, #4096	; 0x1000
   137b8:	mov	r1, #1
   137bc:	add	r0, sp, #12
   137c0:	bl	11e20 <__sprintf_chk@plt>
   137c4:	b	136b0 <g_strcmp0@plt+0x180c>
   137c8:	bl	11c70 <__stack_chk_fail@plt>
   137cc:	andeq	r4, r2, r8, ror #25
   137d0:	andeq	r4, r1, r4, lsr #1
   137d4:	andeq	r4, r1, r8, asr #1
   137d8:	strheq	r4, [r1], -r4	; <UNPREDICTABLE>
   137dc:	push	{r4, r5, r6, r7, lr}
   137e0:	sub	sp, sp, #20
   137e4:	ldr	r4, [pc, #140]	; 13878 <g_strcmp0@plt+0x19d4>
   137e8:	subs	r6, r2, #0
   137ec:	ldr	r3, [r4]
   137f0:	str	r3, [sp, #12]
   137f4:	beq	13858 <g_strcmp0@plt+0x19b4>
   137f8:	mov	r7, r0
   137fc:	bl	11a78 <gtk_widget_get_window@plt>
   13800:	bl	11d30 <gdk_cairo_create@plt>
   13804:	mov	r5, r0
   13808:	mov	r0, r7
   1380c:	bl	11a78 <gtk_widget_get_window@plt>
   13810:	add	r2, sp, #8
   13814:	add	r1, sp, #4
   13818:	bl	11e98 <gdk_window_get_origin@plt>
   1381c:	ldr	r2, [sp, #8]
   13820:	ldr	r3, [sp, #4]
   13824:	rsb	r2, r2, #0
   13828:	rsb	r3, r3, #0
   1382c:	vmov	s2, r2
   13830:	vmov	s0, r3
   13834:	mov	r1, r6
   13838:	mov	r0, r5
   1383c:	vcvt.f64.s32	d1, s2
   13840:	vcvt.f64.s32	d0, s0
   13844:	bl	11e74 <gdk_cairo_set_source_pixbuf@plt>
   13848:	mov	r0, r5
   1384c:	bl	11dcc <cairo_paint@plt>
   13850:	mov	r0, r5
   13854:	bl	11d54 <cairo_destroy@plt>
   13858:	ldr	r2, [sp, #12]
   1385c:	ldr	r3, [r4]
   13860:	mov	r0, #0
   13864:	cmp	r2, r3
   13868:	bne	13874 <g_strcmp0@plt+0x19d0>
   1386c:	add	sp, sp, #20
   13870:	pop	{r4, r5, r6, r7, pc}
   13874:	bl	11c70 <__stack_chk_fail@plt>
   13878:	andeq	r4, r2, r8, ror #25
   1387c:	push	{r4, r5, r6, r7, lr}
   13880:	sub	sp, sp, #20
   13884:	mov	r4, r1
   13888:	mov	r6, r0
   1388c:	bl	11aa8 <gtk_widget_get_display@plt>
   13890:	mov	r5, r0
   13894:	mov	r0, r6
   13898:	bl	11d24 <gtk_widget_get_root_window@plt>
   1389c:	mov	r7, r0
   138a0:	mov	r0, r5
   138a4:	bl	11e80 <gdk_x11_display_get_xdisplay@plt>
   138a8:	mov	r6, r0
   138ac:	mov	r0, r7
   138b0:	bl	11e8c <gdk_x11_drawable_get_xid@plt>
   138b4:	mov	r7, r0
   138b8:	mov	r0, r5
   138bc:	bl	11e80 <gdk_x11_display_get_xdisplay@plt>
   138c0:	mov	r2, #0
   138c4:	ldr	r1, [pc, #64]	; 1390c <g_strcmp0@plt+0x1a68>
   138c8:	bl	11b2c <XInternAtom@plt>
   138cc:	mov	r5, r0
   138d0:	mov	r0, r4
   138d4:	bl	11d90 <strlen@plt>
   138d8:	mov	ip, #0
   138dc:	mov	r3, #8
   138e0:	str	r4, [sp, #8]
   138e4:	stm	sp, {r3, ip}
   138e8:	mov	r2, r5
   138ec:	mov	r1, r7
   138f0:	mov	r3, #31
   138f4:	add	r0, r0, #1
   138f8:	str	r0, [sp, #12]
   138fc:	mov	r0, r6
   13900:	bl	11bb0 <XChangeProperty@plt>
   13904:	add	sp, sp, #20
   13908:	pop	{r4, r5, r6, r7, pc}
   1390c:	ldrdeq	r4, [r1], -ip
   13910:	push	{r4, r5, r6, lr}
   13914:	mov	r4, r1
   13918:	ldr	r5, [pc, #204]	; 139ec <g_strcmp0@plt+0x1b48>
   1391c:	mov	r3, #0
   13920:	sub	sp, sp, #8
   13924:	ldr	r2, [r5]
   13928:	mov	r1, r3
   1392c:	mov	r6, r0
   13930:	ldr	r0, [r4, #4]
   13934:	str	r3, [sp]
   13938:	str	r2, [sp, #4]
   1393c:	bl	11c1c <gtk_label_set_text@plt>
   13940:	ldrb	r3, [r4, #10]
   13944:	tst	r3, #8
   13948:	bne	139b8 <g_strcmp0@plt+0x1b14>
   1394c:	ldrb	r3, [r4, #9]
   13950:	tst	r3, #2
   13954:	bne	1399c <g_strcmp0@plt+0x1af8>
   13958:	ldrb	r3, [r4, #8]
   1395c:	tst	r3, #32
   13960:	bne	139dc <g_strcmp0@plt+0x1b38>
   13964:	ldr	r3, [sp]
   13968:	cmp	r3, #0
   1396c:	beq	139b0 <g_strcmp0@plt+0x1b0c>
   13970:	ldr	r0, [r4, #4]
   13974:	ldr	r1, [r3, #8]
   13978:	bl	11c1c <gtk_label_set_text@plt>
   1397c:	ldr	r0, [sp]
   13980:	bl	11a30 <g_error_free@plt>
   13984:	ldr	r2, [sp, #4]
   13988:	ldr	r3, [r5]
   1398c:	cmp	r2, r3
   13990:	bne	139e8 <g_strcmp0@plt+0x1b44>
   13994:	add	sp, sp, #8
   13998:	pop	{r4, r5, r6, pc}
   1399c:	mov	r0, sp
   139a0:	bl	13338 <g_strcmp0@plt+0x1494>
   139a4:	ldr	r3, [sp]
   139a8:	cmp	r3, #0
   139ac:	bne	13970 <g_strcmp0@plt+0x1acc>
   139b0:	bl	11db4 <gtk_main_quit@plt>
   139b4:	b	13984 <g_strcmp0@plt+0x1ae0>
   139b8:	mov	r0, r6
   139bc:	ldr	r1, [pc, #44]	; 139f0 <g_strcmp0@plt+0x1b4c>
   139c0:	bl	1387c <g_strcmp0@plt+0x19d8>
   139c4:	ldr	r0, [r4]
   139c8:	cmp	r0, #0
   139cc:	beq	13964 <g_strcmp0@plt+0x1ac0>
   139d0:	mov	r1, #15
   139d4:	bl	11be0 <kill@plt>
   139d8:	b	13964 <g_strcmp0@plt+0x1ac0>
   139dc:	mov	r0, sp
   139e0:	bl	133a8 <g_strcmp0@plt+0x1504>
   139e4:	b	13964 <g_strcmp0@plt+0x1ac0>
   139e8:	bl	11c70 <__stack_chk_fail@plt>
   139ec:	andeq	r4, r2, r8, ror #25
   139f0:	strdeq	r4, [r1], -r0
   139f4:	push	{r4, r5, r6, lr}
   139f8:	mov	r4, r1
   139fc:	ldr	r5, [pc, #204]	; 13ad0 <g_strcmp0@plt+0x1c2c>
   13a00:	mov	r3, #0
   13a04:	sub	sp, sp, #8
   13a08:	ldr	r2, [r5]
   13a0c:	mov	r1, r3
   13a10:	mov	r6, r0
   13a14:	ldr	r0, [r4, #4]
   13a18:	str	r3, [sp]
   13a1c:	str	r2, [sp, #4]
   13a20:	bl	11c1c <gtk_label_set_text@plt>
   13a24:	ldrb	r3, [r4, #10]
   13a28:	tst	r3, #8
   13a2c:	bne	13a9c <g_strcmp0@plt+0x1bf8>
   13a30:	ldrb	r3, [r4, #9]
   13a34:	tst	r3, #4
   13a38:	bne	13a80 <g_strcmp0@plt+0x1bdc>
   13a3c:	ldrb	r3, [r4, #8]
   13a40:	tst	r3, #64	; 0x40
   13a44:	bne	13ac0 <g_strcmp0@plt+0x1c1c>
   13a48:	ldr	r3, [sp]
   13a4c:	cmp	r3, #0
   13a50:	beq	13a94 <g_strcmp0@plt+0x1bf0>
   13a54:	ldr	r0, [r4, #4]
   13a58:	ldr	r1, [r3, #8]
   13a5c:	bl	11c1c <gtk_label_set_text@plt>
   13a60:	ldr	r0, [sp]
   13a64:	bl	11a30 <g_error_free@plt>
   13a68:	ldr	r2, [sp, #4]
   13a6c:	ldr	r3, [r5]
   13a70:	cmp	r2, r3
   13a74:	bne	13acc <g_strcmp0@plt+0x1c28>
   13a78:	add	sp, sp, #8
   13a7c:	pop	{r4, r5, r6, pc}
   13a80:	mov	r0, sp
   13a84:	bl	13354 <g_strcmp0@plt+0x14b0>
   13a88:	ldr	r3, [sp]
   13a8c:	cmp	r3, #0
   13a90:	bne	13a54 <g_strcmp0@plt+0x1bb0>
   13a94:	bl	11db4 <gtk_main_quit@plt>
   13a98:	b	13a68 <g_strcmp0@plt+0x1bc4>
   13a9c:	mov	r0, r6
   13aa0:	ldr	r1, [pc, #44]	; 13ad4 <g_strcmp0@plt+0x1c30>
   13aa4:	bl	1387c <g_strcmp0@plt+0x19d8>
   13aa8:	ldr	r0, [r4]
   13aac:	cmp	r0, #0
   13ab0:	beq	13a48 <g_strcmp0@plt+0x1ba4>
   13ab4:	mov	r1, #15
   13ab8:	bl	11be0 <kill@plt>
   13abc:	b	13a48 <g_strcmp0@plt+0x1ba4>
   13ac0:	mov	r0, sp
   13ac4:	bl	133c4 <g_strcmp0@plt+0x1520>
   13ac8:	b	13a48 <g_strcmp0@plt+0x1ba4>
   13acc:	bl	11c70 <__stack_chk_fail@plt>
   13ad0:	andeq	r4, r2, r8, ror #25
   13ad4:	strdeq	r4, [r1], -r8
   13ad8:	push	{r4, lr}
   13adc:	ldr	r0, [pc, #52]	; 13b18 <g_strcmp0@plt+0x1c74>
   13ae0:	bl	11bec <g_find_program_in_path@plt>
   13ae4:	cmp	r0, #0
   13ae8:	ldrne	r0, [pc, #40]	; 13b18 <g_strcmp0@plt+0x1c74>
   13aec:	beq	13b00 <g_strcmp0@plt+0x1c5c>
   13af0:	mov	r1, #0
   13af4:	bl	11dc0 <g_spawn_command_line_async@plt>
   13af8:	mov	r0, #1
   13afc:	pop	{r4, pc}
   13b00:	ldr	r0, [pc, #20]	; 13b1c <g_strcmp0@plt+0x1c78>
   13b04:	bl	11bec <g_find_program_in_path@plt>
   13b08:	cmp	r0, #0
   13b0c:	popeq	{r4, pc}
   13b10:	ldr	r0, [pc, #8]	; 13b20 <g_strcmp0@plt+0x1c7c>
   13b14:	b	13af0 <g_strcmp0@plt+0x1c4c>
   13b18:	andeq	r4, r1, r0, lsl #2
   13b1c:	andeq	r4, r1, r0, lsr #2
   13b20:	andeq	r4, r1, r8, lsl #2
   13b24:	push	{r4, lr}
   13b28:	ldr	r0, [r1, #4]
   13b2c:	mov	r1, #0
   13b30:	bl	11c1c <gtk_label_set_text@plt>
   13b34:	bl	13ad8 <g_strcmp0@plt+0x1c34>
   13b38:	pop	{r4, lr}
   13b3c:	b	11db4 <gtk_main_quit@plt>
   13b40:	push	{r4, r5, r6, lr}
   13b44:	mov	r5, #0
   13b48:	ldr	r6, [pc, #240]	; 13c40 <g_strcmp0@plt+0x1d9c>
   13b4c:	sub	sp, sp, #16
   13b50:	mov	r4, r1
   13b54:	ldr	r3, [r6]
   13b58:	ldr	r0, [r1, #4]
   13b5c:	mov	r1, r5
   13b60:	str	r3, [sp, #12]
   13b64:	str	r5, [sp, #8]
   13b68:	bl	11c1c <gtk_label_set_text@plt>
   13b6c:	bl	13ad8 <g_strcmp0@plt+0x1c34>
   13b70:	ldrsb	r3, [r4, #9]
   13b74:	cmp	r3, r5
   13b78:	blt	13bfc <g_strcmp0@plt+0x1d58>
   13b7c:	ldrb	r2, [r4, #10]
   13b80:	tst	r2, #2
   13b84:	bne	13bd0 <g_strcmp0@plt+0x1d2c>
   13b88:	ands	r3, r2, #1
   13b8c:	bne	13c18 <g_strcmp0@plt+0x1d74>
   13b90:	tst	r2, #4
   13b94:	bne	13c24 <g_strcmp0@plt+0x1d80>
   13b98:	ldr	r3, [sp, #8]
   13b9c:	cmp	r3, #0
   13ba0:	beq	13bf4 <g_strcmp0@plt+0x1d50>
   13ba4:	ldr	r0, [r4, #4]
   13ba8:	ldr	r1, [r3, #8]
   13bac:	bl	11c1c <gtk_label_set_text@plt>
   13bb0:	ldr	r0, [sp, #8]
   13bb4:	bl	11a30 <g_error_free@plt>
   13bb8:	ldr	r2, [sp, #12]
   13bbc:	ldr	r3, [r6]
   13bc0:	cmp	r2, r3
   13bc4:	bne	13c3c <g_strcmp0@plt+0x1d98>
   13bc8:	add	sp, sp, #16
   13bcc:	pop	{r4, r5, r6, pc}
   13bd0:	mov	r3, r5
   13bd4:	str	r5, [sp]
   13bd8:	mov	r2, r5
   13bdc:	mov	r1, r5
   13be0:	ldr	r0, [pc, #92]	; 13c44 <g_strcmp0@plt+0x1da0>
   13be4:	bl	11b08 <g_spawn_command_line_sync@plt>
   13be8:	ldr	r3, [sp, #8]
   13bec:	cmp	r3, #0
   13bf0:	bne	13ba4 <g_strcmp0@plt+0x1d00>
   13bf4:	bl	11db4 <gtk_main_quit@plt>
   13bf8:	b	13bb8 <g_strcmp0@plt+0x1d14>
   13bfc:	str	r5, [sp]
   13c00:	mov	r3, r5
   13c04:	mov	r2, r5
   13c08:	mov	r1, r5
   13c0c:	ldr	r0, [pc, #52]	; 13c48 <g_strcmp0@plt+0x1da4>
   13c10:	bl	11b08 <g_spawn_command_line_sync@plt>
   13c14:	b	13b98 <g_strcmp0@plt+0x1cf4>
   13c18:	add	r0, sp, #8
   13c1c:	bl	1340c <g_strcmp0@plt+0x1568>
   13c20:	b	13b98 <g_strcmp0@plt+0x1cf4>
   13c24:	str	r3, [sp]
   13c28:	mov	r2, r3
   13c2c:	mov	r1, r3
   13c30:	ldr	r0, [pc, #20]	; 13c4c <g_strcmp0@plt+0x1da8>
   13c34:	bl	11b08 <g_spawn_command_line_sync@plt>
   13c38:	b	13b98 <g_strcmp0@plt+0x1cf4>
   13c3c:	bl	11c70 <__stack_chk_fail@plt>
   13c40:	andeq	r4, r2, r8, ror #25
   13c44:	andeq	r4, r1, ip, asr #2
   13c48:	andeq	r4, r1, r0, lsr r1
   13c4c:	andeq	r4, r1, ip, asr r1
   13c50:	push	{r4, r5, lr}
   13c54:	mov	r3, #0
   13c58:	ldr	r5, [pc, #172]	; 13d0c <g_strcmp0@plt+0x1e68>
   13c5c:	sub	sp, sp, #12
   13c60:	mov	r4, r1
   13c64:	ldr	r2, [r5]
   13c68:	ldr	r0, [r1, #4]
   13c6c:	mov	r1, r3
   13c70:	str	r3, [sp]
   13c74:	str	r2, [sp, #4]
   13c78:	bl	11c1c <gtk_label_set_text@plt>
   13c7c:	bl	13ad8 <g_strcmp0@plt+0x1c34>
   13c80:	ldrb	r3, [r4, #9]
   13c84:	tst	r3, #64	; 0x40
   13c88:	bne	13cf0 <g_strcmp0@plt+0x1e4c>
   13c8c:	tst	r3, #16
   13c90:	bne	13cd4 <g_strcmp0@plt+0x1e30>
   13c94:	tst	r3, #1
   13c98:	bne	13cfc <g_strcmp0@plt+0x1e58>
   13c9c:	ldr	r3, [sp]
   13ca0:	cmp	r3, #0
   13ca4:	beq	13ce8 <g_strcmp0@plt+0x1e44>
   13ca8:	ldr	r0, [r4, #4]
   13cac:	ldr	r1, [r3, #8]
   13cb0:	bl	11c1c <gtk_label_set_text@plt>
   13cb4:	ldr	r0, [sp]
   13cb8:	bl	11a30 <g_error_free@plt>
   13cbc:	ldr	r2, [sp, #4]
   13cc0:	ldr	r3, [r5]
   13cc4:	cmp	r2, r3
   13cc8:	bne	13d08 <g_strcmp0@plt+0x1e64>
   13ccc:	add	sp, sp, #12
   13cd0:	pop	{r4, r5, pc}
   13cd4:	mov	r0, sp
   13cd8:	bl	1338c <g_strcmp0@plt+0x14e8>
   13cdc:	ldr	r3, [sp]
   13ce0:	cmp	r3, #0
   13ce4:	bne	13ca8 <g_strcmp0@plt+0x1e04>
   13ce8:	bl	11db4 <gtk_main_quit@plt>
   13cec:	b	13cbc <g_strcmp0@plt+0x1e18>
   13cf0:	mov	r0, sp
   13cf4:	bl	13318 <g_strcmp0@plt+0x1474>
   13cf8:	b	13c9c <g_strcmp0@plt+0x1df8>
   13cfc:	mov	r0, sp
   13d00:	bl	133fc <g_strcmp0@plt+0x1558>
   13d04:	b	13c9c <g_strcmp0@plt+0x1df8>
   13d08:	bl	11c70 <__stack_chk_fail@plt>
   13d0c:	andeq	r4, r2, r8, ror #25
   13d10:	push	{r4, r5, lr}
   13d14:	mov	r3, #0
   13d18:	ldr	r5, [pc, #176]	; 13dd0 <g_strcmp0@plt+0x1f2c>
   13d1c:	sub	sp, sp, #12
   13d20:	mov	r4, r1
   13d24:	ldr	r2, [r5]
   13d28:	ldr	r0, [r1, #4]
   13d2c:	mov	r1, r3
   13d30:	str	r3, [sp]
   13d34:	str	r2, [sp, #4]
   13d38:	bl	11c1c <gtk_label_set_text@plt>
   13d3c:	bl	13ad8 <g_strcmp0@plt+0x1c34>
   13d40:	ldrb	r3, [r4, #9]
   13d44:	tst	r3, #32
   13d48:	bne	13db4 <g_strcmp0@plt+0x1f10>
   13d4c:	tst	r3, #8
   13d50:	bne	13d98 <g_strcmp0@plt+0x1ef4>
   13d54:	ldrsb	r3, [r4, #8]
   13d58:	cmp	r3, #0
   13d5c:	blt	13dc0 <g_strcmp0@plt+0x1f1c>
   13d60:	ldr	r3, [sp]
   13d64:	cmp	r3, #0
   13d68:	beq	13dac <g_strcmp0@plt+0x1f08>
   13d6c:	ldr	r0, [r4, #4]
   13d70:	ldr	r1, [r3, #8]
   13d74:	bl	11c1c <gtk_label_set_text@plt>
   13d78:	ldr	r0, [sp]
   13d7c:	bl	11a30 <g_error_free@plt>
   13d80:	ldr	r2, [sp, #4]
   13d84:	ldr	r3, [r5]
   13d88:	cmp	r2, r3
   13d8c:	bne	13dcc <g_strcmp0@plt+0x1f28>
   13d90:	add	sp, sp, #12
   13d94:	pop	{r4, r5, pc}
   13d98:	mov	r0, sp
   13d9c:	bl	13370 <g_strcmp0@plt+0x14cc>
   13da0:	ldr	r3, [sp]
   13da4:	cmp	r3, #0
   13da8:	bne	13d6c <g_strcmp0@plt+0x1ec8>
   13dac:	bl	11db4 <gtk_main_quit@plt>
   13db0:	b	13d80 <g_strcmp0@plt+0x1edc>
   13db4:	mov	r0, sp
   13db8:	bl	132f0 <g_strcmp0@plt+0x144c>
   13dbc:	b	13d60 <g_strcmp0@plt+0x1ebc>
   13dc0:	mov	r0, sp
   13dc4:	bl	133e0 <g_strcmp0@plt+0x153c>
   13dc8:	b	13d60 <g_strcmp0@plt+0x1ebc>
   13dcc:	bl	11c70 <__stack_chk_fail@plt>
   13dd0:	andeq	r4, r2, r8, ror #25
   13dd4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13dd8:	mov	r7, r0
   13ddc:	ldr	r6, [pc, #72]	; 13e2c <g_strcmp0@plt+0x1f88>
   13de0:	ldr	r5, [pc, #72]	; 13e30 <g_strcmp0@plt+0x1f8c>
   13de4:	add	r6, pc, r6
   13de8:	add	r5, pc, r5
   13dec:	sub	r6, r6, r5
   13df0:	mov	r8, r1
   13df4:	mov	r9, r2
   13df8:	bl	119d4 <gtk_window_add_accel_group@plt-0x20>
   13dfc:	asrs	r6, r6, #2
   13e00:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e04:	mov	r4, #0
   13e08:	add	r4, r4, #1
   13e0c:	ldr	r3, [r5], #4
   13e10:	mov	r2, r9
   13e14:	mov	r1, r8
   13e18:	mov	r0, r7
   13e1c:	blx	r3
   13e20:	cmp	r6, r4
   13e24:	bne	13e08 <g_strcmp0@plt+0x1f64>
   13e28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e2c:	strdeq	r0, [r1], -r8
   13e30:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   13e34:	bx	lr
   13e38:	ldr	r3, [pc, #12]	; 13e4c <g_strcmp0@plt+0x1fa8>
   13e3c:	mov	r1, #0
   13e40:	add	r3, pc, r3
   13e44:	ldr	r2, [r3]
   13e48:	b	11cc4 <__cxa_atexit@plt>
   13e4c:			; <UNDEFINED> instruction: 0x000111bc

Disassembly of section .fini:

00013e50 <.fini>:
   13e50:	push	{r3, lr}
   13e54:	pop	{r3, pc}
