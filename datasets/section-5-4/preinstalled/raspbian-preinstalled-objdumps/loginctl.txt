
raspbian-preinstalled/loginctl:     file format elf32-littlearm


Disassembly of section .init:

00001b48 <.init>:
    1b48:	push	{r3, lr}
    1b4c:	bl	28b4 <log_oom_internal@plt+0x848>
    1b50:	pop	{r3, pc}

Disassembly of section .plt:

00001b54 <output_mode_to_string@plt-0x14>:
    1b54:	push	{lr}		; (str lr, [sp, #-4]!)
    1b58:	ldr	lr, [pc, #4]	; 1b64 <output_mode_to_string@plt-0x4>
    1b5c:	add	lr, pc, lr
    1b60:	ldr	pc, [lr, #8]!
    1b64:	andeq	r8, r1, ip, lsr #5

00001b68 <output_mode_to_string@plt>:
    1b68:	add	ip, pc, #0, 12
    1b6c:	add	ip, ip, #24, 20	; 0x18000
    1b70:	ldr	pc, [ip, #684]!	; 0x2ac

00001b74 <sd_bus_set_allow_interactive_authorization@plt>:
    1b74:	add	ip, pc, #0, 12
    1b78:	add	ip, ip, #24, 20	; 0x18000
    1b7c:	ldr	pc, [ip, #676]!	; 0x2a4

00001b80 <strv_find@plt>:
    1b80:	add	ip, pc, #0, 12
    1b84:	add	ip, ip, #24, 20	; 0x18000
    1b88:	ldr	pc, [ip, #668]!	; 0x29c

00001b8c <version@plt>:
    1b8c:	add	ip, pc, #0, 12
    1b90:	add	ip, ip, #24, 20	; 0x18000
    1b94:	ldr	pc, [ip, #660]!	; 0x294

00001b98 <path_startswith@plt>:
    1b98:	add	ip, pc, #0, 12
    1b9c:	add	ip, ip, #24, 20	; 0x18000
    1ba0:	ldr	pc, [ip, #652]!	; 0x28c

00001ba4 <free@plt>:
    1ba4:	add	ip, pc, #0, 12
    1ba8:	add	ip, ip, #24, 20	; 0x18000
    1bac:	ldr	pc, [ip, #644]!	; 0x284

00001bb0 <sd_device_get_sysname@plt>:
    1bb0:	add	ip, pc, #0, 12
    1bb4:	add	ip, ip, #24, 20	; 0x18000
    1bb8:	ldr	pc, [ip, #636]!	; 0x27c

00001bbc <sigbus_install@plt>:
    1bbc:	add	ip, pc, #0, 12
    1bc0:	add	ip, ip, #24, 20	; 0x18000
    1bc4:	ldr	pc, [ip, #628]!	; 0x274

00001bc8 <log_open@plt>:
    1bc8:	add	ip, pc, #0, 12
    1bcc:	add	ip, ip, #24, 20	; 0x18000
    1bd0:	ldr	pc, [ip, #620]!	; 0x26c

00001bd4 <output_mode_from_string@plt>:
    1bd4:	add	ip, pc, #0, 12
    1bd8:	add	ip, ip, #24, 20	; 0x18000
    1bdc:	ldr	pc, [ip, #612]!	; 0x264

00001be0 <log_assert_failed_unreachable_realm@plt>:
    1be0:	add	ip, pc, #0, 12
    1be4:	add	ip, ip, #24, 20	; 0x18000
    1be8:	ldr	pc, [ip, #604]!	; 0x25c

00001bec <sd_device_get_syspath@plt>:
    1bec:	add	ip, pc, #0, 12
    1bf0:	add	ip, ip, #24, 20	; 0x18000
    1bf4:	ldr	pc, [ip, #596]!	; 0x254

00001bf8 <cg_is_empty_recursive@plt>:
    1bf8:	add	ip, pc, #0, 12
    1bfc:	add	ip, ip, #24, 20	; 0x18000
    1c00:	ldr	pc, [ip, #588]!	; 0x24c

00001c04 <sd_device_enumerator_new@plt>:
    1c04:	add	ip, pc, #0, 12
    1c08:	add	ip, ip, #24, 20	; 0x18000
    1c0c:	ldr	pc, [ip, #580]!	; 0x244

00001c10 <sd_bus_get_property@plt>:
    1c10:	add	ip, pc, #0, 12
    1c14:	add	ip, ip, #24, 20	; 0x18000
    1c18:	ldr	pc, [ip, #572]!	; 0x23c

00001c1c <table_add_cell_full@plt>:
    1c1c:	add	ip, pc, #0, 12
    1c20:	add	ip, ip, #24, 20	; 0x18000
    1c24:	ldr	pc, [ip, #564]!	; 0x234

00001c28 <table_print_json@plt>:
    1c28:	add	ip, pc, #0, 12
    1c2c:	add	ip, ip, #24, 20	; 0x18000
    1c30:	ldr	pc, [ip, #556]!	; 0x22c

00001c34 <strcmp_ptr@plt>:
    1c34:	add	ip, pc, #0, 12
    1c38:	add	ip, ip, #24, 20	; 0x18000
    1c3c:	ldr	pc, [ip, #548]!	; 0x224

00001c40 <ask_password_agent_close@plt>:
    1c40:	add	ip, pc, #0, 12
    1c44:	add	ip, ip, #24, 20	; 0x18000
    1c48:	ldr	pc, [ip, #540]!	; 0x21c

00001c4c <polkit_agent_close@plt>:
    1c4c:	add	ip, pc, #0, 12
    1c50:	add	ip, ip, #24, 20	; 0x18000
    1c54:	ldr	pc, [ip, #532]!	; 0x214

00001c58 <mac_selinux_finish@plt>:
    1c58:	add	ip, pc, #0, 12
    1c5c:	add	ip, ip, #24, 20	; 0x18000
    1c60:	ldr	pc, [ip, #524]!	; 0x20c

00001c64 <puts@plt>:
    1c64:	add	ip, pc, #0, 12
    1c68:	add	ip, ip, #24, 20	; 0x18000
    1c6c:	ldr	pc, [ip, #516]!	; 0x204

00001c70 <get_user_creds@plt>:
    1c70:	add	ip, pc, #0, 12
    1c74:	add	ip, ip, #24, 20	; 0x18000
    1c78:	ldr	pc, [ip, #508]!	; 0x1fc

00001c7c <sd_device_has_tag@plt>:
    1c7c:	add	ip, pc, #0, 12
    1c80:	add	ip, ip, #24, 20	; 0x18000
    1c84:	ldr	pc, [ip, #500]!	; 0x1f4

00001c88 <putchar@plt>:
    1c88:	add	ip, pc, #0, 12
    1c8c:	add	ip, ip, #24, 20	; 0x18000
    1c90:	ldr	pc, [ip, #492]!	; 0x1ec

00001c94 <get_process_comm@plt>:
    1c94:	add	ip, pc, #0, 12
    1c98:	add	ip, ip, #24, 20	; 0x18000
    1c9c:	ldr	pc, [ip, #484]!	; 0x1e4

00001ca0 <columns@plt>:
    1ca0:	add	ip, pc, #0, 12
    1ca4:	add	ip, ip, #24, 20	; 0x18000
    1ca8:	ldr	pc, [ip, #476]!	; 0x1dc

00001cac <memset@plt>:
    1cac:	add	ip, pc, #0, 12
    1cb0:	add	ip, ip, #24, 20	; 0x18000
    1cb4:	ldr	pc, [ip, #468]!	; 0x1d4

00001cb8 <log_get_max_level_realm@plt>:
    1cb8:	add	ip, pc, #0, 12
    1cbc:	add	ip, ip, #24, 20	; 0x18000
    1cc0:	ldr	pc, [ip, #460]!	; 0x1cc

00001cc4 <sd_device_enumerator_add_match_tag@plt>:
    1cc4:	add	ip, pc, #0, 12
    1cc8:	add	ip, ip, #24, 20	; 0x18000
    1ccc:	ldr	pc, [ip, #452]!	; 0x1c4

00001cd0 <table_set_header@plt>:
    1cd0:	add	ip, pc, #0, 12
    1cd4:	add	ip, ip, #24, 20	; 0x18000
    1cd8:	ldr	pc, [ip, #444]!	; 0x1bc

00001cdc <abort@plt>:
    1cdc:	add	ip, pc, #0, 12
    1ce0:	add	ip, ip, #24, 20	; 0x18000
    1ce4:	ldr	pc, [ip, #436]!	; 0x1b4

00001ce8 <dispatch_verb@plt>:
    1ce8:	add	ip, pc, #0, 12
    1cec:	add	ip, ip, #24, 20	; 0x18000
    1cf0:	ldr	pc, [ip, #428]!	; 0x1ac

00001cf4 <sd_device_get_subsystem@plt>:
    1cf4:	add	ip, pc, #0, 12
    1cf8:	add	ip, ip, #24, 20	; 0x18000
    1cfc:	ldr	pc, [ip, #420]!	; 0x1a4

00001d00 <format_timestamp_relative@plt>:
    1d00:	add	ip, pc, #0, 12
    1d04:	add	ip, ip, #24, 20	; 0x18000
    1d08:	ldr	pc, [ip, #412]!	; 0x19c

00001d0c <signal_from_string@plt>:
    1d0c:	add	ip, pc, #0, 12
    1d10:	add	ip, ip, #24, 20	; 0x18000
    1d14:	ldr	pc, [ip, #404]!	; 0x194

00001d18 <sd_bus_error_free@plt>:
    1d18:	add	ip, pc, #0, 12
    1d1c:	add	ip, ip, #24, 20	; 0x18000
    1d20:	ldr	pc, [ip, #396]!	; 0x18c

00001d24 <ellipsize_mem@plt>:
    1d24:	add	ip, pc, #0, 12
    1d28:	add	ip, ip, #24, 20	; 0x18000
    1d2c:	ldr	pc, [ip, #388]!	; 0x184

00001d30 <sd_bus_flush_close_unref@plt>:
    1d30:	add	ip, pc, #0, 12
    1d34:	add	ip, ip, #24, 20	; 0x18000
    1d38:	ldr	pc, [ip, #380]!	; 0x17c

00001d3c <device_enumerator_scan_devices@plt>:
    1d3c:	add	ip, pc, #0, 12
    1d40:	add	ip, ip, #24, 20	; 0x18000
    1d44:	ldr	pc, [ip, #372]!	; 0x174

00001d48 <device_enumerator_get_devices@plt>:
    1d48:	add	ip, pc, #0, 12
    1d4c:	add	ip, ip, #24, 20	; 0x18000
    1d50:	ldr	pc, [ip, #364]!	; 0x16c

00001d54 <sd_bus_message_exit_container@plt>:
    1d54:	add	ip, pc, #0, 12
    1d58:	add	ip, ip, #24, 20	; 0x18000
    1d5c:	ldr	pc, [ip, #356]!	; 0x164

00001d60 <bus_map_all_properties@plt>:
    1d60:	add	ip, pc, #0, 12
    1d64:	add	ip, ip, #24, 20	; 0x18000
    1d68:	ldr	pc, [ip, #348]!	; 0x15c

00001d6c <table_new_internal@plt>:
    1d6c:	add	ip, pc, #0, 12
    1d70:	add	ip, ip, #24, 20	; 0x18000
    1d74:	ldr	pc, [ip, #340]!	; 0x154

00001d78 <sd_bus_message_skip@plt>:
    1d78:	add	ip, pc, #0, 12
    1d7c:	add	ip, ip, #24, 20	; 0x18000
    1d80:	ldr	pc, [ip, #332]!	; 0x14c

00001d84 <table_set_sort@plt>:
    1d84:	add	ip, pc, #0, 12
    1d88:	add	ip, ip, #24, 20	; 0x18000
    1d8c:	ldr	pc, [ip, #324]!	; 0x144

00001d90 <sd_bus_message_enter_container@plt>:
    1d90:	add	ip, pc, #0, 12
    1d94:	add	ip, ip, #24, 20	; 0x18000
    1d98:	ldr	pc, [ip, #316]!	; 0x13c

00001d9c <__overflow@plt>:
    1d9c:	add	ip, pc, #0, 12
    1da0:	add	ip, ip, #24, 20	; 0x18000
    1da4:	ldr	pc, [ip, #308]!	; 0x134

00001da8 <show_cgroup_get_unit_path_and_warn@plt>:
    1da8:	add	ip, pc, #0, 12
    1dac:	add	ip, ip, #24, 20	; 0x18000
    1db0:	ldr	pc, [ip, #300]!	; 0x12c

00001db4 <table_set_align_percent@plt>:
    1db4:	add	ip, pc, #0, 12
    1db8:	add	ip, ip, #24, 20	; 0x18000
    1dbc:	ldr	pc, [ip, #292]!	; 0x124

00001dc0 <table_add_many_internal@plt>:
    1dc0:	add	ip, pc, #0, 12
    1dc4:	add	ip, ip, #24, 20	; 0x18000
    1dc8:	ldr	pc, [ip, #284]!	; 0x11c

00001dcc <__stack_chk_fail@plt>:
    1dcc:	add	ip, pc, #0, 12
    1dd0:	add	ip, ip, #24, 20	; 0x18000
    1dd4:	ldr	pc, [ip, #276]!	; 0x114

00001dd8 <terminal_urlify_man@plt>:
    1dd8:	add	ip, pc, #0, 12
    1ddc:	add	ip, ip, #24, 20	; 0x18000
    1de0:	ldr	pc, [ip, #268]!	; 0x10c

00001de4 <strappend@plt>:
    1de4:	add	ip, pc, #0, 12
    1de8:	add	ip, ip, #24, 20	; 0x18000
    1dec:	ldr	pc, [ip, #260]!	; 0x104

00001df0 <output_mode_to_json_format_flags@plt>:
    1df0:	add	ip, pc, #0, 12
    1df4:	add	ip, ip, #24, 20	; 0x18000
    1df8:	ldr	pc, [ip, #252]!	; 0xfc

00001dfc <special_glyph@plt>:
    1dfc:	add	ip, pc, #0, 12
    1e00:	add	ip, ip, #24, 20	; 0x18000
    1e04:	ldr	pc, [ip, #244]!	; 0xf4

00001e08 <strstr@plt>:
    1e08:	add	ip, pc, #0, 12
    1e0c:	add	ip, ip, #24, 20	; 0x18000
    1e10:	ldr	pc, [ip, #236]!	; 0xec

00001e14 <polkit_agent_open@plt>:
    1e14:	add	ip, pc, #0, 12
    1e18:	add	ip, ip, #24, 20	; 0x18000
    1e1c:	ldr	pc, [ip, #228]!	; 0xe4

00001e20 <format_timestamp@plt>:
    1e20:	add	ip, pc, #0, 12
    1e24:	add	ip, ip, #24, 20	; 0x18000
    1e28:	ldr	pc, [ip, #220]!	; 0xdc

00001e2c <sd_bus_message_peek_type@plt>:
    1e2c:	add	ip, pc, #0, 12
    1e30:	add	ip, ip, #24, 20	; 0x18000
    1e34:	ldr	pc, [ip, #212]!	; 0xd4

00001e38 <signal_to_string@plt>:
    1e38:	add	ip, pc, #0, 12
    1e3c:	add	ip, ip, #24, 20	; 0x18000
    1e40:	ldr	pc, [ip, #204]!	; 0xcc

00001e44 <__asprintf_chk@plt>:
    1e44:	add	ip, pc, #0, 12
    1e48:	add	ip, ip, #24, 20	; 0x18000
    1e4c:	ldr	pc, [ip, #196]!	; 0xc4

00001e50 <table_unref@plt>:
    1e50:	add	ip, pc, #0, 12
    1e54:	add	ip, ip, #24, 20	; 0x18000
    1e58:	ldr	pc, [ip, #188]!	; 0xbc

00001e5c <getopt_long@plt>:
    1e5c:	add	ip, pc, #0, 12
    1e60:	add	ip, ip, #24, 20	; 0x18000
    1e64:	ldr	pc, [ip, #180]!	; 0xb4

00001e68 <sd_bus_message_unref@plt>:
    1e68:	add	ip, pc, #0, 12
    1e6c:	add	ip, ip, #24, 20	; 0x18000
    1e70:	ldr	pc, [ip, #172]!	; 0xac

00001e74 <table_get_rows@plt>:
    1e74:	add	ip, pc, #0, 12
    1e78:	add	ip, ip, #24, 20	; 0x18000
    1e7c:	ldr	pc, [ip, #164]!	; 0xa4

00001e80 <pager_close@plt>:
    1e80:	add	ip, pc, #0, 12
    1e84:	add	ip, ip, #24, 20	; 0x18000
    1e88:	ldr	pc, [ip, #156]!	; 0x9c

00001e8c <unit_show_processes@plt>:
    1e8c:	add	ip, pc, #0, 12
    1e90:	add	ip, ip, #24, 20	; 0x18000
    1e94:	ldr	pc, [ip, #148]!	; 0x94

00001e98 <sd_device_get_sysattr_value@plt>:
    1e98:	add	ip, pc, #0, 12
    1e9c:	add	ip, ip, #24, 20	; 0x18000
    1ea0:	ldr	pc, [ip, #140]!	; 0x8c

00001ea4 <table_print@plt>:
    1ea4:	add	ip, pc, #0, 12
    1ea8:	add	ip, ip, #24, 20	; 0x18000
    1eac:	ldr	pc, [ip, #132]!	; 0x84

00001eb0 <sd_bus_message_read@plt>:
    1eb0:	add	ip, pc, #0, 12
    1eb4:	add	ip, ip, #24, 20	; 0x18000
    1eb8:	ldr	pc, [ip, #124]!	; 0x7c

00001ebc <bus_print_all_properties@plt>:
    1ebc:	add	ip, pc, #0, 12
    1ec0:	add	ip, ip, #24, 20	; 0x18000
    1ec4:	ldr	pc, [ip, #116]!	; 0x74

00001ec8 <setlocale@plt>:
    1ec8:	add	ip, pc, #0, 12
    1ecc:	add	ip, ip, #24, 20	; 0x18000
    1ed0:	ldr	pc, [ip, #108]!	; 0x6c

00001ed4 <show_cgroup_and_extra@plt>:
    1ed4:	add	ip, pc, #0, 12
    1ed8:	add	ip, ip, #24, 20	; 0x18000
    1edc:	ldr	pc, [ip, #100]!	; 0x64

00001ee0 <flockfile@plt>:
    1ee0:	add	ip, pc, #0, 12
    1ee4:	add	ip, ip, #24, 20	; 0x18000
    1ee8:	ldr	pc, [ip, #92]!	; 0x5c

00001eec <bus_log_parse_error@plt>:
    1eec:	add	ip, pc, #0, 12
    1ef0:	add	ip, ip, #24, 20	; 0x18000
    1ef4:	ldr	pc, [ip, #84]!	; 0x54

00001ef8 <safe_atou_full@plt>:
    1ef8:	add	ip, pc, #0, 12
    1efc:	add	ip, ip, #24, 20	; 0x18000
    1f00:	ldr	pc, [ip, #76]!	; 0x4c

00001f04 <strv_extend@plt>:
    1f04:	add	ip, pc, #0, 12
    1f08:	add	ip, ip, #24, 20	; 0x18000
    1f0c:	ldr	pc, [ip, #68]!	; 0x44

00001f10 <on_tty@plt>:
    1f10:	add	ip, pc, #0, 12
    1f14:	add	ip, ip, #24, 20	; 0x18000
    1f18:	ldr	pc, [ip, #60]!	; 0x3c

00001f1c <strlen@plt>:
    1f1c:	add	ip, pc, #0, 12
    1f20:	add	ip, ip, #24, 20	; 0x18000
    1f24:	ldr	pc, [ip, #52]!	; 0x34

00001f28 <uid_is_valid@plt>:
    1f28:	add	ip, pc, #0, 12
    1f2c:	add	ip, ip, #24, 20	; 0x18000
    1f30:	ldr	pc, [ip, #44]!	; 0x2c

00001f34 <rlimit_nofile_bump@plt>:
    1f34:	add	ip, pc, #0, 12
    1f38:	add	ip, ip, #24, 20	; 0x18000
    1f3c:	ldr	pc, [ip, #36]!	; 0x24

00001f40 <bus_error_message@plt>:
    1f40:	add	ip, pc, #0, 12
    1f44:	add	ip, ip, #24, 20	; 0x18000
    1f48:	ldr	pc, [ip, #28]!

00001f4c <strcmp@plt>:
    1f4c:	add	ip, pc, #0, 12
    1f50:	add	ip, ip, #24, 20	; 0x18000
    1f54:	ldr	pc, [ip, #20]!

00001f58 <pager_have@plt>:
    1f58:	add	ip, pc, #0, 12
    1f5c:	add	ip, ip, #24, 20	; 0x18000
    1f60:	ldr	pc, [ip, #12]!

00001f64 <sd_bus_message_read_basic@plt>:
    1f64:	add	ip, pc, #0, 12
    1f68:	add	ip, ip, #24, 20	; 0x18000
    1f6c:	ldr	pc, [ip, #4]!

00001f70 <log_parse_environment_realm@plt>:
    1f70:	add	ip, pc, #0, 12
    1f74:	add	ip, ip, #94208	; 0x17000
    1f78:	ldr	pc, [ip, #4092]!	; 0xffc

00001f7c <sd_bus_call_method@plt>:
    1f7c:	add	ip, pc, #0, 12
    1f80:	add	ip, ip, #94208	; 0x17000
    1f84:	ldr	pc, [ip, #4084]!	; 0xff4

00001f88 <sd_device_get_property_value@plt>:
    1f88:	add	ip, pc, #0, 12
    1f8c:	add	ip, ip, #94208	; 0x17000
    1f90:	ldr	pc, [ip, #4076]!	; 0xfec

00001f94 <fputs_unlocked@plt>:
    1f94:	add	ip, pc, #0, 12
    1f98:	add	ip, ip, #94208	; 0x17000
    1f9c:	ldr	pc, [ip, #4068]!	; 0xfe4

00001fa0 <log_assert_failed_realm@plt>:
    1fa0:	add	ip, pc, #0, 12
    1fa4:	add	ip, ip, #94208	; 0x17000
    1fa8:	ldr	pc, [ip, #4060]!	; 0xfdc

00001fac <log_internal_realm@plt>:
    1fac:	add	ip, pc, #0, 12
    1fb0:	add	ip, ip, #94208	; 0x17000
    1fb4:	ldr	pc, [ip, #4052]!	; 0xfd4

00001fb8 <strv_free@plt>:
    1fb8:	add	ip, pc, #0, 12
    1fbc:	add	ip, ip, #94208	; 0x17000
    1fc0:	ldr	pc, [ip, #4044]!	; 0xfcc

00001fc4 <bus_print_property_value@plt>:
    1fc4:	add	ip, pc, #0, 12
    1fc8:	add	ip, ip, #94208	; 0x17000
    1fcc:	ldr	pc, [ip, #4036]!	; 0xfc4

00001fd0 <funlockfile@plt>:
    1fd0:	add	ip, pc, #0, 12
    1fd4:	add	ip, ip, #94208	; 0x17000
    1fd8:	ldr	pc, [ip, #4028]!	; 0xfbc

00001fdc <pager_open@plt>:
    1fdc:	add	ip, pc, #0, 12
    1fe0:	add	ip, ip, #94208	; 0x17000
    1fe4:	ldr	pc, [ip, #4020]!	; 0xfb4

00001fe8 <getenv@plt>:
    1fe8:	add	ip, pc, #0, 12
    1fec:	add	ip, ip, #94208	; 0x17000
    1ff0:	ldr	pc, [ip, #4012]!	; 0xfac

00001ff4 <__libc_start_main@plt>:
    1ff4:	add	ip, pc, #0, 12
    1ff8:	add	ip, ip, #94208	; 0x17000
    1ffc:	ldr	pc, [ip, #4004]!	; 0xfa4

00002000 <sd_device_enumerator_unref@plt>:
    2000:	add	ip, pc, #0, 12
    2004:	add	ip, ip, #94208	; 0x17000
    2008:	ldr	pc, [ip, #3996]!	; 0xf9c

0000200c <colors_enabled@plt>:
    200c:	add	ip, pc, #0, 12
    2010:	add	ip, ip, #94208	; 0x17000
    2014:	ldr	pc, [ip, #3988]!	; 0xf94

00002018 <__gmon_start__@plt>:
    2018:	add	ip, pc, #0, 12
    201c:	add	ip, ip, #94208	; 0x17000
    2020:	ldr	pc, [ip, #3980]!	; 0xf8c

00002024 <__cxa_finalize@plt>:
    2024:	add	ip, pc, #0, 12
    2028:	add	ip, ip, #94208	; 0x17000
    202c:	ldr	pc, [ip, #3972]!	; 0xf84

00002030 <show_journal_by_unit@plt>:
    2030:	add	ip, pc, #0, 12
    2034:	add	ip, ip, #94208	; 0x17000
    2038:	ldr	pc, [ip, #3964]!	; 0xf7c

0000203c <strdup@plt>:
    203c:	add	ip, pc, #0, 12
    2040:	add	ip, ip, #94208	; 0x17000
    2044:	ldr	pc, [ip, #3956]!	; 0xf74

00002048 <__printf_chk@plt>:
    2048:	add	ip, pc, #0, 12
    204c:	add	ip, ip, #94208	; 0x17000
    2050:	ldr	pc, [ip, #3948]!	; 0xf6c

00002054 <bus_connect_transport@plt>:
    2054:	add	ip, pc, #0, 12
    2058:	add	ip, ip, #94208	; 0x17000
    205c:	ldr	pc, [ip, #3940]!	; 0xf64

00002060 <sd_device_enumerator_allow_uninitialized@plt>:
    2060:	add	ip, pc, #0, 12
    2064:	add	ip, ip, #94208	; 0x17000
    2068:	ldr	pc, [ip, #3932]!	; 0xf5c

0000206c <log_oom_internal@plt>:
    206c:	add	ip, pc, #0, 12
    2070:	add	ip, ip, #94208	; 0x17000
    2074:	ldr	pc, [ip, #3924]!	; 0xf54

Disassembly of section .text:

00002078 <.text>:
    2078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    207c:	sub	sp, sp, #44	; 0x2c
    2080:	ldr	r6, [pc, #1768]	; 2770 <log_oom_internal@plt+0x704>
    2084:	ldr	r3, [pc, #1768]	; 2774 <log_oom_internal@plt+0x708>
    2088:	add	r6, pc, r6
    208c:	mov	r8, r1
    2090:	ldr	r3, [r6, r3]
    2094:	ldr	r1, [pc, #1756]	; 2778 <log_oom_internal@plt+0x70c>
    2098:	str	r3, [sp, #20]
    209c:	ldr	r3, [r3]
    20a0:	add	r1, pc, r1
    20a4:	mov	r4, #0
    20a8:	mov	r7, r0
    20ac:	mov	r0, #6
    20b0:	str	r3, [sp, #36]	; 0x24
    20b4:	str	r4, [sp, #32]
    20b8:	bl	1ec8 <setlocale@plt>
    20bc:	mov	r0, r4
    20c0:	bl	1f70 <log_parse_environment_realm@plt>
    20c4:	bl	1bc8 <log_open@plt>
    20c8:	mov	r0, #524288	; 0x80000
    20cc:	bl	1f34 <rlimit_nofile_bump@plt>
    20d0:	bl	1bbc <sigbus_install@plt>
    20d4:	cmp	r7, r4
    20d8:	blt	25b0 <log_oom_internal@plt+0x544>
    20dc:	cmp	r8, #0
    20e0:	beq	25dc <log_oom_internal@plt+0x570>
    20e4:	ldr	r5, [pc, #1680]	; 277c <log_oom_internal@plt+0x710>
    20e8:	ldr	fp, [pc, #1680]	; 2780 <log_oom_internal@plt+0x714>
    20ec:	ldr	r3, [pc, #1680]	; 2784 <log_oom_internal@plt+0x718>
    20f0:	ldr	r9, [pc, #1680]	; 2788 <log_oom_internal@plt+0x71c>
    20f4:	add	r5, pc, r5
    20f8:	add	fp, pc, fp
    20fc:	add	r3, pc, r3
    2100:	add	r5, r5, #544	; 0x220
    2104:	add	r9, pc, r9
    2108:	add	r2, fp, #16
    210c:	add	r3, r3, #28
    2110:	str	r2, [sp, #24]
    2114:	str	r3, [sp, #28]
    2118:	mov	r4, #0
    211c:	str	r4, [sp]
    2120:	mov	r3, r5
    2124:	mov	r2, r9
    2128:	mov	r1, r8
    212c:	mov	r0, r7
    2130:	bl	1e5c <getopt_long@plt>
    2134:	cmp	r0, #0
    2138:	blt	23b4 <log_oom_internal@plt+0x348>
    213c:	cmp	r0, #111	; 0x6f
    2140:	beq	2430 <log_oom_internal@plt+0x3c4>
    2144:	ble	218c <log_oom_internal@plt+0x120>
    2148:	ldr	r3, [pc, #1596]	; 278c <log_oom_internal@plt+0x720>
    214c:	cmp	r0, r3
    2150:	beq	2490 <log_oom_internal@plt+0x424>
    2154:	ble	21dc <log_oom_internal@plt+0x170>
    2158:	ldr	r3, [pc, #1584]	; 2790 <log_oom_internal@plt+0x724>
    215c:	cmp	r0, r3
    2160:	beq	247c <log_oom_internal@plt+0x410>
    2164:	blt	22cc <log_oom_internal@plt+0x260>
    2168:	cmp	r0, #260	; 0x104
    216c:	beq	2548 <log_oom_internal@plt+0x4dc>
    2170:	add	r3, r3, #2
    2174:	cmp	r0, r3
    2178:	bne	21b0 <log_oom_internal@plt+0x144>
    217c:	ldr	r3, [pc, #1552]	; 2794 <log_oom_internal@plt+0x728>
    2180:	add	r3, pc, r3
    2184:	strb	r4, [r3]
    2188:	b	2118 <log_oom_internal@plt+0xac>
    218c:	cmp	r0, #97	; 0x61
    2190:	beq	2564 <log_oom_internal@plt+0x4f8>
    2194:	bgt	221c <log_oom_internal@plt+0x1b0>
    2198:	cmp	r0, #72	; 0x48
    219c:	beq	2388 <log_oom_internal@plt+0x31c>
    21a0:	cmp	r0, #77	; 0x4d
    21a4:	beq	24a4 <log_oom_internal@plt+0x438>
    21a8:	cmp	r0, #63	; 0x3f
    21ac:	beq	23ac <log_oom_internal@plt+0x340>
    21b0:	ldr	r2, [pc, #1504]	; 2798 <log_oom_internal@plt+0x72c>
    21b4:	ldr	r1, [pc, #1504]	; 279c <log_oom_internal@plt+0x730>
    21b8:	add	r2, pc, r2
    21bc:	add	r2, r2, #652	; 0x28c
    21c0:	str	r2, [sp]
    21c4:	ldr	r2, [pc, #1492]	; 27a0 <log_oom_internal@plt+0x734>
    21c8:	mov	r3, #1488	; 0x5d0
    21cc:	add	r2, pc, r2
    21d0:	add	r1, pc, r1
    21d4:	mov	r0, #0
    21d8:	bl	1be0 <log_assert_failed_unreachable_realm@plt>
    21dc:	cmp	r0, #115	; 0x73
    21e0:	beq	22f8 <log_oom_internal@plt+0x28c>
    21e4:	cmp	r0, #256	; 0x100
    21e8:	beq	253c <log_oom_internal@plt+0x4d0>
    21ec:	cmp	r0, #112	; 0x70
    21f0:	bne	21b0 <log_oom_internal@plt+0x144>
    21f4:	ldr	r3, [pc, #1448]	; 27a4 <log_oom_internal@plt+0x738>
    21f8:	ldr	r0, [sp, #24]
    21fc:	ldr	r3, [r6, r3]
    2200:	ldr	r1, [r3]
    2204:	bl	1f04 <strv_extend@plt>
    2208:	cmp	r0, #0
    220c:	blt	2608 <log_oom_internal@plt+0x59c>
    2210:	mov	r3, #1
    2214:	strb	r3, [fp, #12]
    2218:	b	2118 <log_oom_internal@plt+0xac>
    221c:	cmp	r0, #108	; 0x6c
    2220:	beq	22e4 <log_oom_internal@plt+0x278>
    2224:	cmp	r0, #110	; 0x6e
    2228:	beq	24c8 <log_oom_internal@plt+0x45c>
    222c:	cmp	r0, #104	; 0x68
    2230:	bne	21b0 <log_oom_internal@plt+0x144>
    2234:	mov	r2, r4
    2238:	mov	r1, r4
    223c:	mov	r0, r4
    2240:	bl	3014 <log_oom_internal@plt+0xfa8>
    2244:	mov	sl, r0
    2248:	cmp	sl, #0
    224c:	bgt	23b4 <log_oom_internal@plt+0x348>
    2250:	ldr	r0, [sp, #32]
    2254:	cmp	r0, #0
    2258:	beq	2260 <log_oom_internal@plt+0x1f4>
    225c:	bl	1d30 <sd_bus_flush_close_unref@plt>
    2260:	ldr	r3, [pc, #1344]	; 27a8 <log_oom_internal@plt+0x73c>
    2264:	ldr	r4, [r6, r3]
    2268:	cmp	r4, #0
    226c:	beq	229c <log_oom_internal@plt+0x230>
    2270:	ldr	r3, [pc, #1332]	; 27ac <log_oom_internal@plt+0x740>
    2274:	add	r4, r4, #3
    2278:	bic	r4, r4, #3
    227c:	ldr	r5, [r6, r3]
    2280:	cmp	r4, r5
    2284:	bcs	229c <log_oom_internal@plt+0x230>
    2288:	ldm	r4, {r0, r3}
    228c:	add	r4, r4, #8
    2290:	blx	r3
    2294:	cmp	r4, r5
    2298:	bcc	2288 <log_oom_internal@plt+0x21c>
    229c:	bl	1c40 <ask_password_agent_close@plt>
    22a0:	bl	1c4c <polkit_agent_close@plt>
    22a4:	bl	1c58 <mac_selinux_finish@plt>
    22a8:	bl	1e80 <pager_close@plt>
    22ac:	ldr	r3, [sp, #20]
    22b0:	ldr	r2, [sp, #36]	; 0x24
    22b4:	lsr	r0, sl, #31
    22b8:	ldr	r3, [r3]
    22bc:	cmp	r2, r3
    22c0:	bne	276c <log_oom_internal@plt+0x700>
    22c4:	add	sp, sp, #44	; 0x2c
    22c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    22cc:	ldr	r2, [pc, #1244]	; 27b0 <log_oom_internal@plt+0x744>
    22d0:	add	r2, pc, r2
    22d4:	ldr	r3, [r2]
    22d8:	orr	r3, r3, #1
    22dc:	str	r3, [r2]
    22e0:	b	2118 <log_oom_internal@plt+0xac>
    22e4:	ldr	r3, [pc, #1224]	; 27b4 <log_oom_internal@plt+0x748>
    22e8:	mov	r2, #1
    22ec:	add	r3, pc, r3
    22f0:	strb	r2, [r3, #24]
    22f4:	b	2118 <log_oom_internal@plt+0xac>
    22f8:	ldr	r3, [pc, #1188]	; 27a4 <log_oom_internal@plt+0x738>
    22fc:	ldr	r1, [pc, #1204]	; 27b8 <log_oom_internal@plt+0x74c>
    2300:	ldr	r3, [r6, r3]
    2304:	add	r1, pc, r1
    2308:	ldr	sl, [r3]
    230c:	mov	r0, sl
    2310:	bl	1f4c <strcmp@plt>
    2314:	cmp	r0, #0
    2318:	beq	26fc <log_oom_internal@plt+0x690>
    231c:	mov	r0, sl
    2320:	bl	1d0c <signal_from_string@plt>
    2324:	ldr	r3, [pc, #1168]	; 27bc <log_oom_internal@plt+0x750>
    2328:	add	r3, pc, r3
    232c:	cmp	r0, #0
    2330:	str	r0, [r3, #4]
    2334:	bge	2118 <log_oom_internal@plt+0xac>
    2338:	mov	r0, r4
    233c:	bl	1cb8 <log_get_max_level_realm@plt>
    2340:	cmp	r0, #2
    2344:	ble	23ac <log_oom_internal@plt+0x340>
    2348:	ldr	r2, [pc, #1136]	; 27c0 <log_oom_internal@plt+0x754>
    234c:	ldr	r3, [pc, #1136]	; 27c4 <log_oom_internal@plt+0x758>
    2350:	add	r2, pc, r2
    2354:	str	r2, [sp, #4]
    2358:	add	r3, pc, r3
    235c:	ldr	r2, [pc, #1124]	; 27c8 <log_oom_internal@plt+0x75c>
    2360:	add	r3, r3, #664	; 0x298
    2364:	str	sl, [sp, #8]
    2368:	str	r3, [sp]
    236c:	add	r2, pc, r2
    2370:	ldr	r3, [pc, #1108]	; 27cc <log_oom_internal@plt+0x760>
    2374:	mov	r1, #1073741846	; 0x40000016
    2378:	mov	r0, #3
    237c:	bl	1fac <log_internal_realm@plt>
    2380:	mov	sl, r0
    2384:	b	2248 <log_oom_internal@plt+0x1dc>
    2388:	ldr	r2, [pc, #1088]	; 27d0 <log_oom_internal@plt+0x764>
    238c:	ldr	r3, [pc, #1040]	; 27a4 <log_oom_internal@plt+0x738>
    2390:	add	r2, pc, r2
    2394:	mov	r1, #1
    2398:	str	r1, [r2, #4]
    239c:	ldr	r3, [r6, r3]
    23a0:	ldr	r3, [r3]
    23a4:	str	r3, [r2, #28]
    23a8:	b	2118 <log_oom_internal@plt+0xac>
    23ac:	mvn	sl, #21
    23b0:	b	2250 <log_oom_internal@plt+0x1e4>
    23b4:	ldr	r0, [pc, #1048]	; 27d4 <log_oom_internal@plt+0x768>
    23b8:	add	r3, sp, #32
    23bc:	add	r0, pc, r0
    23c0:	mov	r2, #0
    23c4:	ldr	r1, [r0, #28]
    23c8:	ldr	r0, [r0, #4]
    23cc:	bl	2054 <bus_connect_transport@plt>
    23d0:	subs	sl, r0, #0
    23d4:	bge	2578 <log_oom_internal@plt+0x50c>
    23d8:	mov	r0, #0
    23dc:	bl	1cb8 <log_get_max_level_realm@plt>
    23e0:	cmp	r0, #2
    23e4:	rsble	sl, sl, #0
    23e8:	uxtble	sl, sl
    23ec:	rsble	sl, sl, #0
    23f0:	ble	2250 <log_oom_internal@plt+0x1e4>
    23f4:	ldr	r2, [pc, #988]	; 27d8 <log_oom_internal@plt+0x76c>
    23f8:	ldr	r3, [pc, #988]	; 27dc <log_oom_internal@plt+0x770>
    23fc:	add	r2, pc, r2
    2400:	str	r2, [sp, #4]
    2404:	add	r3, pc, r3
    2408:	ldr	r2, [pc, #976]	; 27e0 <log_oom_internal@plt+0x774>
    240c:	add	r3, r3, #676	; 0x2a4
    2410:	mov	r1, sl
    2414:	str	r3, [sp]
    2418:	add	r2, pc, r2
    241c:	ldr	r3, [pc, #960]	; 27e4 <log_oom_internal@plt+0x778>
    2420:	mov	r0, #3
    2424:	bl	1fac <log_internal_realm@plt>
    2428:	mov	sl, r0
    242c:	b	2250 <log_oom_internal@plt+0x1e4>
    2430:	ldr	r3, [pc, #876]	; 27a4 <log_oom_internal@plt+0x738>
    2434:	ldr	r1, [pc, #940]	; 27e8 <log_oom_internal@plt+0x77c>
    2438:	ldr	r3, [r6, r3]
    243c:	add	r1, pc, r1
    2440:	ldr	sl, [r3]
    2444:	mov	r0, sl
    2448:	bl	1f4c <strcmp@plt>
    244c:	cmp	r0, #0
    2450:	beq	2630 <log_oom_internal@plt+0x5c4>
    2454:	mov	r0, sl
    2458:	bl	1bd4 <output_mode_from_string@plt>
    245c:	ldr	r3, [pc, #904]	; 27ec <log_oom_internal@plt+0x780>
    2460:	add	r3, pc, r3
    2464:	cmp	r0, #0
    2468:	str	r0, [r3, #20]
    246c:	blt	26ac <log_oom_internal@plt+0x640>
    2470:	sub	r0, r0, #9
    2474:	cmp	r0, #3
    2478:	bhi	2118 <log_oom_internal@plt+0xac>
    247c:	ldr	r3, [pc, #876]	; 27f0 <log_oom_internal@plt+0x784>
    2480:	mov	r2, #0
    2484:	add	r3, pc, r3
    2488:	strb	r2, [r3, #24]
    248c:	b	2118 <log_oom_internal@plt+0xac>
    2490:	ldr	r3, [pc, #860]	; 27f4 <log_oom_internal@plt+0x788>
    2494:	mov	r2, #1
    2498:	add	r3, pc, r3
    249c:	strb	r2, [r3, #13]
    24a0:	b	2118 <log_oom_internal@plt+0xac>
    24a4:	ldr	r2, [pc, #844]	; 27f8 <log_oom_internal@plt+0x78c>
    24a8:	ldr	r3, [pc, #756]	; 27a4 <log_oom_internal@plt+0x738>
    24ac:	add	r2, pc, r2
    24b0:	mov	r1, #2
    24b4:	str	r1, [r2, #4]
    24b8:	ldr	r3, [r6, r3]
    24bc:	ldr	r3, [r3]
    24c0:	str	r3, [r2, #28]
    24c4:	b	2118 <log_oom_internal@plt+0xac>
    24c8:	ldr	r3, [pc, #724]	; 27a4 <log_oom_internal@plt+0x738>
    24cc:	ldr	r2, [sp, #28]
    24d0:	mov	r1, r4
    24d4:	ldr	sl, [r6, r3]
    24d8:	ldr	r0, [sl]
    24dc:	bl	1ef8 <safe_atou_full@plt>
    24e0:	cmp	r0, #0
    24e4:	bge	2118 <log_oom_internal@plt+0xac>
    24e8:	mov	r0, r4
    24ec:	bl	1cb8 <log_get_max_level_realm@plt>
    24f0:	cmp	r0, #2
    24f4:	ble	23ac <log_oom_internal@plt+0x340>
    24f8:	ldr	r2, [pc, #764]	; 27fc <log_oom_internal@plt+0x790>
    24fc:	ldr	r3, [pc, #764]	; 2800 <log_oom_internal@plt+0x794>
    2500:	add	r2, pc, r2
    2504:	ldr	r1, [sl]
    2508:	add	r3, pc, r3
    250c:	str	r2, [sp, #4]
    2510:	ldr	r2, [pc, #748]	; 2804 <log_oom_internal@plt+0x798>
    2514:	add	r3, r3, #664	; 0x298
    2518:	str	r1, [sp, #8]
    251c:	str	r3, [sp]
    2520:	add	r2, pc, r2
    2524:	ldr	r3, [pc, #732]	; 2808 <log_oom_internal@plt+0x79c>
    2528:	mov	r1, #1073741846	; 0x40000016
    252c:	mov	r0, #3
    2530:	bl	1fac <log_internal_realm@plt>
    2534:	mov	sl, r0
    2538:	b	2248 <log_oom_internal@plt+0x1dc>
    253c:	bl	1b8c <version@plt>
    2540:	mov	sl, r0
    2544:	b	2248 <log_oom_internal@plt+0x1dc>
    2548:	ldr	r3, [pc, #596]	; 27a4 <log_oom_internal@plt+0x738>
    254c:	ldr	r2, [pc, #696]	; 280c <log_oom_internal@plt+0x7a0>
    2550:	ldr	r3, [r6, r3]
    2554:	add	r2, pc, r2
    2558:	ldr	r3, [r3]
    255c:	str	r3, [r2, #8]
    2560:	b	2118 <log_oom_internal@plt+0xac>
    2564:	ldr	r3, [pc, #676]	; 2810 <log_oom_internal@plt+0x7a4>
    2568:	mov	r2, #1
    256c:	add	r3, pc, r3
    2570:	strb	r2, [r3, #12]
    2574:	b	2118 <log_oom_internal@plt+0xac>
    2578:	ldr	r3, [pc, #660]	; 2814 <log_oom_internal@plt+0x7a8>
    257c:	ldr	r0, [sp, #32]
    2580:	add	r3, pc, r3
    2584:	ldrb	r1, [r3]
    2588:	bl	1b74 <sd_bus_set_allow_interactive_authorization@plt>
    258c:	ldr	r2, [pc, #644]	; 2818 <log_oom_internal@plt+0x7ac>
    2590:	mov	r1, r8
    2594:	add	r2, pc, r2
    2598:	mov	r0, r7
    259c:	add	r2, r2, #800	; 0x320
    25a0:	ldr	r3, [sp, #32]
    25a4:	bl	1ce8 <dispatch_verb@plt>
    25a8:	mov	sl, r0
    25ac:	b	2250 <log_oom_internal@plt+0x1e4>
    25b0:	ldr	r3, [pc, #612]	; 281c <log_oom_internal@plt+0x7b0>
    25b4:	ldr	r2, [pc, #612]	; 2820 <log_oom_internal@plt+0x7b4>
    25b8:	add	r3, pc, r3
    25bc:	ldr	r1, [pc, #608]	; 2824 <log_oom_internal@plt+0x7b8>
    25c0:	add	r3, r3, #652	; 0x28c
    25c4:	str	r3, [sp]
    25c8:	mov	r0, r4
    25cc:	ldr	r3, [pc, #596]	; 2828 <log_oom_internal@plt+0x7bc>
    25d0:	add	r2, pc, r2
    25d4:	add	r1, pc, r1
    25d8:	bl	1fa0 <log_assert_failed_realm@plt>
    25dc:	ldr	r3, [pc, #584]	; 282c <log_oom_internal@plt+0x7c0>
    25e0:	ldr	r2, [pc, #584]	; 2830 <log_oom_internal@plt+0x7c4>
    25e4:	add	r3, pc, r3
    25e8:	ldr	r1, [pc, #580]	; 2834 <log_oom_internal@plt+0x7c8>
    25ec:	add	r3, r3, #652	; 0x28c
    25f0:	str	r3, [sp]
    25f4:	mov	r0, r8
    25f8:	ldr	r3, [pc, #568]	; 2838 <log_oom_internal@plt+0x7cc>
    25fc:	add	r2, pc, r2
    2600:	add	r1, pc, r1
    2604:	bl	1fa0 <log_assert_failed_realm@plt>
    2608:	ldr	r3, [pc, #556]	; 283c <log_oom_internal@plt+0x7d0>
    260c:	ldr	r1, [pc, #556]	; 2840 <log_oom_internal@plt+0x7d4>
    2610:	add	r3, pc, r3
    2614:	mov	r0, r4
    2618:	add	r3, r3, #664	; 0x298
    261c:	ldr	r2, [pc, #544]	; 2844 <log_oom_internal@plt+0x7d8>
    2620:	add	r1, pc, r1
    2624:	bl	206c <log_oom_internal@plt>
    2628:	mov	sl, r0
    262c:	b	2248 <log_oom_internal@plt+0x1dc>
    2630:	ldr	r3, [pc, #528]	; 2848 <log_oom_internal@plt+0x7dc>
    2634:	mov	sl, r0
    2638:	mov	r4, r0
    263c:	ldr	r5, [r6, r3]
    2640:	mov	r7, #10
    2644:	ldr	r0, [r5]
    2648:	bl	1ee0 <flockfile@plt>
    264c:	b	265c <log_oom_internal@plt+0x5f0>
    2650:	add	r4, r4, #1
    2654:	cmp	r4, #15
    2658:	beq	26a0 <log_oom_internal@plt+0x634>
    265c:	mov	r0, r4
    2660:	bl	1b68 <output_mode_to_string@plt>
    2664:	cmp	r0, #0
    2668:	beq	2650 <log_oom_internal@plt+0x5e4>
    266c:	ldr	r1, [r5]
    2670:	bl	1f94 <fputs_unlocked@plt>
    2674:	ldr	r0, [r5]
    2678:	ldr	r3, [r0, #20]
    267c:	ldr	r2, [r0, #24]
    2680:	cmp	r3, r2
    2684:	addcc	r2, r3, #1
    2688:	strcc	r2, [r0, #20]
    268c:	strbcc	r7, [r3]
    2690:	bcc	2650 <log_oom_internal@plt+0x5e4>
    2694:	mov	r1, #10
    2698:	bl	1d9c <__overflow@plt>
    269c:	b	2650 <log_oom_internal@plt+0x5e4>
    26a0:	ldr	r0, [r5]
    26a4:	bl	1fd0 <funlockfile@plt>
    26a8:	b	2250 <log_oom_internal@plt+0x1e4>
    26ac:	mov	r0, r4
    26b0:	bl	1cb8 <log_get_max_level_realm@plt>
    26b4:	cmp	r0, #2
    26b8:	ble	23ac <log_oom_internal@plt+0x340>
    26bc:	ldr	r2, [pc, #392]	; 284c <log_oom_internal@plt+0x7e0>
    26c0:	ldr	r3, [pc, #392]	; 2850 <log_oom_internal@plt+0x7e4>
    26c4:	add	r2, pc, r2
    26c8:	str	r2, [sp, #4]
    26cc:	add	r3, pc, r3
    26d0:	ldr	r2, [pc, #380]	; 2854 <log_oom_internal@plt+0x7e8>
    26d4:	add	r3, r3, #664	; 0x298
    26d8:	str	sl, [sp, #8]
    26dc:	str	r3, [sp]
    26e0:	add	r2, pc, r2
    26e4:	ldr	r3, [pc, #364]	; 2858 <log_oom_internal@plt+0x7ec>
    26e8:	mov	r1, #1073741846	; 0x40000016
    26ec:	mov	r0, #3
    26f0:	bl	1fac <log_internal_realm@plt>
    26f4:	mov	sl, r0
    26f8:	b	2248 <log_oom_internal@plt+0x1dc>
    26fc:	ldr	r3, [pc, #324]	; 2848 <log_oom_internal@plt+0x7dc>
    2700:	mov	sl, r0
    2704:	mov	r4, r0
    2708:	ldr	r5, [r6, r3]
    270c:	mov	r7, #10
    2710:	ldr	r0, [r5]
    2714:	bl	1ee0 <flockfile@plt>
    2718:	b	2728 <log_oom_internal@plt+0x6bc>
    271c:	add	r4, r4, #1
    2720:	cmp	r4, #65	; 0x41
    2724:	beq	26a0 <log_oom_internal@plt+0x634>
    2728:	mov	r0, r4
    272c:	bl	1e38 <signal_to_string@plt>
    2730:	cmp	r0, #0
    2734:	beq	271c <log_oom_internal@plt+0x6b0>
    2738:	ldr	r1, [r5]
    273c:	bl	1f94 <fputs_unlocked@plt>
    2740:	ldr	r0, [r5]
    2744:	ldr	r3, [r0, #20]
    2748:	ldr	r2, [r0, #24]
    274c:	cmp	r3, r2
    2750:	addcc	r2, r3, #1
    2754:	strcc	r2, [r0, #20]
    2758:	strbcc	r7, [r3]
    275c:	bcc	271c <log_oom_internal@plt+0x6b0>
    2760:	mov	r1, #10
    2764:	bl	1d9c <__overflow@plt>
    2768:	b	271c <log_oom_internal@plt+0x6b0>
    276c:	bl	1dcc <__stack_chk_fail@plt>
    2770:	andeq	r7, r1, r0, lsl #27
    2774:			; <UNDEFINED> instruction: 0x000001bc
    2778:	ldrdeq	r6, [r0], -r4
    277c:	strdeq	r7, [r1], -r0
    2780:	andeq	r7, r1, r0, lsr pc
    2784:	andeq	r7, r1, r0, lsl #30
    2788:	ldrdeq	r6, [r0], -r8
    278c:	andeq	r0, r0, r1, lsl #2
    2790:	andeq	r0, r0, r3, lsl #2
    2794:	andeq	r7, r1, ip, ror lr
    2798:	andeq	r5, r0, ip, lsr #19
    279c:	strdeq	r6, [r0], -r8
    27a0:	andeq	r5, r0, r4, ror #25
    27a4:	andeq	r0, r0, r4, asr #3
    27a8:	andeq	r0, r0, r8, asr #3
    27ac:	andeq	r0, r0, ip, asr #3
    27b0:	andeq	r7, r1, r8, asr sp
    27b4:	andeq	r7, r1, ip, lsr sp
    27b8:	andeq	r6, r0, r0, lsl #27
    27bc:	ldrdeq	r7, [r1], -r4
    27c0:	andeq	r6, r0, r4, asr sp
    27c4:	andeq	r5, r0, ip, lsl #16
    27c8:	andeq	r5, r0, r4, asr #22
    27cc:			; <UNDEFINED> instruction: 0x000005bf
    27d0:	muleq	r1, r8, ip
    27d4:	andeq	r7, r1, ip, ror #24
    27d8:	strdeq	r6, [r0], -r0
    27dc:	andeq	r5, r0, r0, ror #14
    27e0:	muleq	r0, r8, sl
    27e4:	andeq	r0, r0, sl, lsl #12
    27e8:	andeq	r6, r0, r8, asr #24
    27ec:	andeq	r7, r1, r8, asr #23
    27f0:	andeq	r7, r1, r8, ror fp
    27f4:	muleq	r1, r0, fp
    27f8:	andeq	r7, r1, ip, ror fp
    27fc:	andeq	r6, r0, r8, ror #22
    2800:	andeq	r5, r0, ip, asr r6
    2804:	muleq	r0, r0, r9
    2808:	muleq	r0, r3, r5
    280c:	ldrdeq	r7, [r1], -r4
    2810:			; <UNDEFINED> instruction: 0x00017abc
    2814:	andeq	r7, r1, ip, ror sl
    2818:	andeq	r7, r1, r0, asr r2
    281c:	andeq	r5, r0, ip, lsr #11
    2820:	andeq	r5, r0, r0, ror #17
    2824:	andeq	r6, r0, r8, lsl #21
    2828:	andeq	r0, r0, fp, ror #10
    282c:	andeq	r5, r0, r0, lsl #11
    2830:			; <UNDEFINED> instruction: 0x000058b4
    2834:	andeq	r6, r0, r0, lsl #6
    2838:	andeq	r0, r0, ip, ror #10
    283c:	andeq	r5, r0, r4, asr r5
    2840:	muleq	r0, r0, r8
    2844:	andeq	r0, r0, fp, ror r5
    2848:	ldrdeq	r0, [r0], -r4
    284c:	andeq	r6, r0, r8, asr #19
    2850:	muleq	r0, r8, r4
    2854:	ldrdeq	r5, [r0], -r0
    2858:	muleq	r0, pc, r5	; <UNPREDICTABLE>
    285c:	mov	fp, #0
    2860:	mov	lr, #0
    2864:	pop	{r1}		; (ldr r1, [sp], #4)
    2868:	mov	r2, sp
    286c:	push	{r2}		; (str r2, [sp, #-4]!)
    2870:	push	{r0}		; (str r0, [sp, #-4]!)
    2874:	ldr	sl, [pc, #40]	; 28a4 <log_oom_internal@plt+0x838>
    2878:	add	r3, pc, #36	; 0x24
    287c:	add	sl, sl, r3
    2880:	ldr	ip, [pc, #32]	; 28a8 <log_oom_internal@plt+0x83c>
    2884:	ldr	ip, [sl, ip]
    2888:	push	{ip}		; (str ip, [sp, #-4]!)
    288c:	ldr	r3, [pc, #24]	; 28ac <log_oom_internal@plt+0x840>
    2890:	ldr	r3, [sl, r3]
    2894:	ldr	r0, [pc, #20]	; 28b0 <log_oom_internal@plt+0x844>
    2898:	ldr	r0, [sl, r0]
    289c:	bl	1ff4 <__libc_start_main@plt>
    28a0:	bl	1cdc <abort@plt>
    28a4:	andeq	r7, r1, ip, ror #10
    28a8:	ldrdeq	r0, [r0], -ip
    28ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    28b0:	andeq	r0, r0, r0, asr #3
    28b4:	ldr	r3, [pc, #20]	; 28d0 <log_oom_internal@plt+0x864>
    28b8:	ldr	r2, [pc, #20]	; 28d4 <log_oom_internal@plt+0x868>
    28bc:	add	r3, pc, r3
    28c0:	ldr	r2, [r3, r2]
    28c4:	cmp	r2, #0
    28c8:	bxeq	lr
    28cc:	b	2018 <__gmon_start__@plt>
    28d0:	andeq	r7, r1, ip, asr #10
    28d4:	andeq	r0, r0, r4, ror #3
    28d8:	ldr	r0, [pc, #44]	; 290c <log_oom_internal@plt+0x8a0>
    28dc:	ldr	r3, [pc, #44]	; 2910 <log_oom_internal@plt+0x8a4>
    28e0:	add	r0, pc, r0
    28e4:	add	r3, pc, r3
    28e8:	cmp	r3, r0
    28ec:	ldr	r3, [pc, #32]	; 2914 <log_oom_internal@plt+0x8a8>
    28f0:	add	r3, pc, r3
    28f4:	bxeq	lr
    28f8:	ldr	r2, [pc, #24]	; 2918 <log_oom_internal@plt+0x8ac>
    28fc:	ldr	r3, [r3, r2]
    2900:	cmp	r3, #0
    2904:	bxeq	lr
    2908:	bx	r3
    290c:	andeq	r7, r1, ip, lsr r7
    2910:	andeq	r7, r1, r8, lsr r7
    2914:	andeq	r7, r1, r8, lsl r5
    2918:	ldrdeq	r0, [r0], -r8
    291c:	ldr	r0, [pc, #56]	; 295c <log_oom_internal@plt+0x8f0>
    2920:	ldr	r3, [pc, #56]	; 2960 <log_oom_internal@plt+0x8f4>
    2924:	add	r0, pc, r0
    2928:	add	r3, pc, r3
    292c:	sub	r1, r3, r0
    2930:	ldr	r3, [pc, #44]	; 2964 <log_oom_internal@plt+0x8f8>
    2934:	asr	r1, r1, #2
    2938:	add	r3, pc, r3
    293c:	add	r1, r1, r1, lsr #31
    2940:	asrs	r1, r1, #1
    2944:	bxeq	lr
    2948:	ldr	r2, [pc, #24]	; 2968 <log_oom_internal@plt+0x8fc>
    294c:	ldr	r3, [r3, r2]
    2950:	cmp	r3, #0
    2954:	bxeq	lr
    2958:	bx	r3
    295c:	strdeq	r7, [r1], -r8
    2960:	strdeq	r7, [r1], -r4
    2964:	ldrdeq	r7, [r1], -r0
    2968:	andeq	r0, r0, r8, ror #3
    296c:	ldr	r3, [pc, #76]	; 29c0 <log_oom_internal@plt+0x954>
    2970:	ldr	r2, [pc, #76]	; 29c4 <log_oom_internal@plt+0x958>
    2974:	add	r3, pc, r3
    2978:	add	r2, pc, r2
    297c:	ldrb	r3, [r3]
    2980:	cmp	r3, #0
    2984:	bxne	lr
    2988:	ldr	r3, [pc, #56]	; 29c8 <log_oom_internal@plt+0x95c>
    298c:	push	{r4, lr}
    2990:	ldr	r3, [r2, r3]
    2994:	cmp	r3, #0
    2998:	beq	29a8 <log_oom_internal@plt+0x93c>
    299c:	ldr	r3, [pc, #40]	; 29cc <log_oom_internal@plt+0x960>
    29a0:	ldr	r0, [pc, r3]
    29a4:	bl	2024 <__cxa_finalize@plt>
    29a8:	bl	28d8 <log_oom_internal@plt+0x86c>
    29ac:	ldr	r3, [pc, #28]	; 29d0 <log_oom_internal@plt+0x964>
    29b0:	mov	r2, #1
    29b4:	add	r3, pc, r3
    29b8:	strb	r2, [r3]
    29bc:	pop	{r4, pc}
    29c0:			; <UNDEFINED> instruction: 0x000176b0
    29c4:	muleq	r1, r0, r4
    29c8:	andeq	r0, r0, ip, ror #3
    29cc:	andeq	r7, r1, r8, asr r6
    29d0:	andeq	r7, r1, r0, ror r6
    29d4:	b	291c <log_oom_internal@plt+0x8b0>
    29d8:	ldr	ip, [pc, #1472]	; 2fa0 <log_oom_internal@plt+0xf34>
    29dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    29e0:	add	ip, pc, ip
    29e4:	ldr	lr, [pc, #1464]	; 2fa4 <log_oom_internal@plt+0xf38>
    29e8:	sub	sp, sp, #116	; 0x74
    29ec:	subs	r4, r0, #0
    29f0:	str	r4, [sp, #24]
    29f4:	mov	r6, r1
    29f8:	mov	r1, ip
    29fc:	ldr	ip, [ip, lr]
    2a00:	mov	fp, r3
    2a04:	str	ip, [sp, #44]	; 0x2c
    2a08:	ldr	r3, [ip]
    2a0c:	ldr	r9, [sp, #152]	; 0x98
    2a10:	str	r3, [sp, #108]	; 0x6c
    2a14:	ldr	r3, [sp, #156]	; 0x9c
    2a18:	str	r3, [sp, #36]	; 0x24
    2a1c:	ldr	r3, [sp, #160]	; 0xa0
    2a20:	beq	2f08 <log_oom_internal@plt+0xe9c>
    2a24:	cmp	r6, #0
    2a28:	beq	2f2c <log_oom_internal@plt+0xec0>
    2a2c:	mov	r4, r2
    2a30:	ldr	r2, [sp, #36]	; 0x24
    2a34:	cmp	r2, #0
    2a38:	beq	2f54 <log_oom_internal@plt+0xee8>
    2a3c:	ldr	r2, [sp, #164]	; 0xa4
    2a40:	tst	r2, #8
    2a44:	mvnne	r2, #0
    2a48:	strne	r2, [sp, #40]	; 0x28
    2a4c:	beq	2d44 <log_oom_internal@plt+0xcd8>
    2a50:	ldr	r1, [pc, #1360]	; 2fa8 <log_oom_internal@plt+0xf3c>
    2a54:	sub	r2, r3, #2
    2a58:	add	r1, pc, r1
    2a5c:	str	r1, [sp, #28]
    2a60:	ldr	r1, [pc, #1348]	; 2fac <log_oom_internal@plt+0xf40>
    2a64:	cmn	r2, #4
    2a68:	add	r1, pc, r1
    2a6c:	str	r1, [sp, #32]
    2a70:	ldr	r1, [pc, #1336]	; 2fb0 <log_oom_internal@plt+0xf44>
    2a74:	movhi	r2, r3
    2a78:	add	r1, pc, r1
    2a7c:	str	r1, [sp, #68]	; 0x44
    2a80:	ldr	r1, [pc, #1324]	; 2fb4 <log_oom_internal@plt+0xf48>
    2a84:	str	r2, [sp, #60]	; 0x3c
    2a88:	add	r1, pc, r1
    2a8c:	str	r1, [sp, #48]	; 0x30
    2a90:	ldr	r3, [r4]
    2a94:	cmp	r3, fp
    2a98:	bcs	2cdc <log_oom_internal@plt+0xc70>
    2a9c:	mov	r7, #0
    2aa0:	ldr	r0, [r6, r3, lsl #2]
    2aa4:	add	r1, sp, #96	; 0x60
    2aa8:	str	r7, [sp, #88]	; 0x58
    2aac:	str	r7, [sp, #76]	; 0x4c
    2ab0:	bl	1bec <sd_device_get_syspath@plt>
    2ab4:	cmp	r0, r7
    2ab8:	blt	2ebc <log_oom_internal@plt+0xe50>
    2abc:	mov	r1, r9
    2ac0:	ldr	r0, [sp, #96]	; 0x60
    2ac4:	bl	1b98 <path_startswith@plt>
    2ac8:	subs	r7, r0, #0
    2acc:	beq	2ebc <log_oom_internal@plt+0xe50>
    2ad0:	ldr	r3, [r4]
    2ad4:	add	r2, sp, #92	; 0x5c
    2ad8:	ldr	r1, [sp, #28]
    2adc:	ldr	r0, [r6, r3, lsl #2]
    2ae0:	bl	1f88 <sd_device_get_property_value@plt>
    2ae4:	cmp	r0, #0
    2ae8:	blt	2b04 <log_oom_internal@plt+0xa98>
    2aec:	ldr	r1, [sp, #92]	; 0x5c
    2af0:	cmp	r1, #0
    2af4:	beq	2b04 <log_oom_internal@plt+0xa98>
    2af8:	ldrb	r3, [r1]
    2afc:	cmp	r3, #0
    2b00:	bne	2b10 <log_oom_internal@plt+0xaa4>
    2b04:	ldr	r3, [sp, #32]
    2b08:	mov	r1, r3
    2b0c:	str	r3, [sp, #92]	; 0x5c
    2b10:	ldr	r0, [sp, #24]
    2b14:	bl	1f4c <strcmp@plt>
    2b18:	ldr	r3, [r4]
    2b1c:	cmp	r0, #0
    2b20:	bne	2cc0 <log_oom_internal@plt+0xc54>
    2b24:	ldr	r1, [pc, #1164]	; 2fb8 <log_oom_internal@plt+0xf4c>
    2b28:	ldr	r0, [r6, r3, lsl #2]
    2b2c:	add	r1, pc, r1
    2b30:	bl	1c7c <sd_device_has_tag@plt>
    2b34:	ldr	r3, [r4]
    2b38:	cmp	r0, #0
    2b3c:	ble	2cc0 <log_oom_internal@plt+0xc54>
    2b40:	ldr	r0, [r6, r3, lsl #2]
    2b44:	add	r1, sp, #84	; 0x54
    2b48:	bl	1cf4 <sd_device_get_subsystem@plt>
    2b4c:	ldr	r3, [r4]
    2b50:	cmp	r0, #0
    2b54:	blt	2cc0 <log_oom_internal@plt+0xc54>
    2b58:	ldr	r0, [r6, r3, lsl #2]
    2b5c:	add	r1, sp, #80	; 0x50
    2b60:	bl	1bb0 <sd_device_get_sysname@plt>
    2b64:	ldr	r3, [r4]
    2b68:	cmp	r0, #0
    2b6c:	blt	2cc0 <log_oom_internal@plt+0xc54>
    2b70:	ldr	r1, [pc, #1092]	; 2fbc <log_oom_internal@plt+0xf50>
    2b74:	ldr	r0, [r6, r3, lsl #2]
    2b78:	add	r1, pc, r1
    2b7c:	bl	1c7c <sd_device_has_tag@plt>
    2b80:	ldr	r3, [r4]
    2b84:	ldr	r1, [pc, #1076]	; 2fc0 <log_oom_internal@plt+0xf54>
    2b88:	add	r5, sp, #88	; 0x58
    2b8c:	mov	r2, r5
    2b90:	add	r1, pc, r1
    2b94:	str	r0, [sp, #52]	; 0x34
    2b98:	ldr	r0, [r6, r3, lsl #2]
    2b9c:	bl	1e98 <sd_device_get_sysattr_value@plt>
    2ba0:	cmp	r0, #0
    2ba4:	blt	2eec <log_oom_internal@plt+0xe80>
    2ba8:	ldr	r7, [r4]
    2bac:	add	r5, r7, #1
    2bb0:	cmp	fp, r5
    2bb4:	bls	2ce4 <log_oom_internal@plt+0xc78>
    2bb8:	ldr	r3, [pc, #1028]	; 2fc4 <log_oom_internal@plt+0xf58>
    2bbc:	add	r7, r6, r7, lsl #2
    2bc0:	add	r3, pc, r3
    2bc4:	str	r3, [sp, #64]	; 0x40
    2bc8:	ldr	r3, [pc, #1016]	; 2fc8 <log_oom_internal@plt+0xf5c>
    2bcc:	add	r8, sp, #100	; 0x64
    2bd0:	add	r3, pc, r3
    2bd4:	str	r3, [sp, #56]	; 0x38
    2bd8:	b	2be8 <log_oom_internal@plt+0xb7c>
    2bdc:	add	r5, r5, #1
    2be0:	cmp	fp, r5
    2be4:	bls	2ce4 <log_oom_internal@plt+0xc78>
    2be8:	mov	r1, r8
    2bec:	ldr	r0, [r7, #4]!
    2bf0:	bl	1bec <sd_device_get_syspath@plt>
    2bf4:	cmp	r0, #0
    2bf8:	blt	2bdc <log_oom_internal@plt+0xb70>
    2bfc:	ldr	sl, [sp, #100]	; 0x64
    2c00:	mov	r1, r9
    2c04:	mov	r0, sl
    2c08:	bl	1b98 <path_startswith@plt>
    2c0c:	cmp	r0, #0
    2c10:	beq	2bdc <log_oom_internal@plt+0xb70>
    2c14:	mov	r0, sl
    2c18:	ldr	r1, [sp, #96]	; 0x60
    2c1c:	bl	1b98 <path_startswith@plt>
    2c20:	cmp	r0, #0
    2c24:	bne	2bdc <log_oom_internal@plt+0xb70>
    2c28:	add	r2, sp, #104	; 0x68
    2c2c:	ldr	r1, [sp, #48]	; 0x30
    2c30:	ldr	r0, [r7]
    2c34:	bl	1f88 <sd_device_get_property_value@plt>
    2c38:	cmp	r0, #0
    2c3c:	blt	2c58 <log_oom_internal@plt+0xbec>
    2c40:	ldr	r1, [sp, #104]	; 0x68
    2c44:	cmp	r1, #0
    2c48:	beq	2c58 <log_oom_internal@plt+0xbec>
    2c4c:	ldrb	r3, [r1]
    2c50:	cmp	r3, #0
    2c54:	bne	2c64 <log_oom_internal@plt+0xbf8>
    2c58:	ldr	r3, [sp, #56]	; 0x38
    2c5c:	mov	r1, r3
    2c60:	str	r3, [sp, #104]	; 0x68
    2c64:	ldr	r0, [sp, #24]
    2c68:	bl	1f4c <strcmp@plt>
    2c6c:	cmp	r0, #0
    2c70:	bne	2bdc <log_oom_internal@plt+0xb70>
    2c74:	ldr	r1, [sp, #64]	; 0x40
    2c78:	ldr	r0, [r7]
    2c7c:	bl	1c7c <sd_device_has_tag@plt>
    2c80:	cmp	r0, #0
    2c84:	ble	2bdc <log_oom_internal@plt+0xb70>
    2c88:	ldr	r7, [sp, #96]	; 0x60
    2c8c:	mov	r0, r7
    2c90:	bl	1f1c <strlen@plt>
    2c94:	mov	r3, #20
    2c98:	ldr	r2, [sp, #40]	; 0x28
    2c9c:	mov	r1, r0
    2ca0:	mov	r0, r7
    2ca4:	bl	1d24 <ellipsize_mem@plt>
    2ca8:	subs	r7, r0, #0
    2cac:	beq	2d0c <log_oom_internal@plt+0xca0>
    2cb0:	cmp	fp, r5
    2cb4:	movls	r0, #2
    2cb8:	movhi	r0, #1
    2cbc:	b	2d5c <log_oom_internal@plt+0xcf0>
    2cc0:	add	r3, r3, #1
    2cc4:	str	r3, [r4]
    2cc8:	ldr	r0, [sp, #76]	; 0x4c
    2ccc:	bl	1ba4 <free@plt>
    2cd0:	ldr	r3, [r4]
    2cd4:	cmp	r3, fp
    2cd8:	bcc	2a9c <log_oom_internal@plt+0xa30>
    2cdc:	mov	r8, #0
    2ce0:	b	2d24 <log_oom_internal@plt+0xcb8>
    2ce4:	ldr	r7, [sp, #96]	; 0x60
    2ce8:	mov	r0, r7
    2cec:	bl	1f1c <strlen@plt>
    2cf0:	mov	r3, #20
    2cf4:	ldr	r2, [sp, #40]	; 0x28
    2cf8:	mov	r1, r0
    2cfc:	mov	r0, r7
    2d00:	bl	1d24 <ellipsize_mem@plt>
    2d04:	subs	r7, r0, #0
    2d08:	bne	2d58 <log_oom_internal@plt+0xcec>
    2d0c:	mov	r7, #0
    2d10:	mvn	r8, #11
    2d14:	ldr	r0, [sp, #76]	; 0x4c
    2d18:	bl	1ba4 <free@plt>
    2d1c:	mov	r0, r7
    2d20:	bl	1ba4 <free@plt>
    2d24:	ldr	r3, [sp, #44]	; 0x2c
    2d28:	ldr	r2, [sp, #108]	; 0x6c
    2d2c:	mov	r0, r8
    2d30:	ldr	r3, [r3]
    2d34:	cmp	r2, r3
    2d38:	bne	2f9c <log_oom_internal@plt+0xf30>
    2d3c:	add	sp, sp, #116	; 0x74
    2d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2d44:	cmp	r3, #10
    2d48:	movcs	r2, r3
    2d4c:	movcc	r2, #10
    2d50:	str	r2, [sp, #40]	; 0x28
    2d54:	b	2a50 <log_oom_internal@plt+0x9e4>
    2d58:	mov	r0, #2
    2d5c:	bl	1dfc <special_glyph@plt>
    2d60:	ldr	r1, [pc, #612]	; 2fcc <log_oom_internal@plt+0xf60>
    2d64:	str	r7, [sp]
    2d68:	ldr	r2, [sp, #36]	; 0x24
    2d6c:	add	r1, pc, r1
    2d70:	mov	r3, r0
    2d74:	mov	r0, #1
    2d78:	bl	2048 <__printf_chk@plt>
    2d7c:	ldr	r3, [sp, #52]	; 0x34
    2d80:	cmp	r3, #0
    2d84:	ble	2ed0 <log_oom_internal@plt+0xe64>
    2d88:	ldr	r3, [pc, #576]	; 2fd0 <log_oom_internal@plt+0xf64>
    2d8c:	add	r3, pc, r3
    2d90:	ldr	r2, [sp, #88]	; 0x58
    2d94:	ldr	r1, [sp, #84]	; 0x54
    2d98:	cmp	r2, #0
    2d9c:	ldr	r0, [sp, #80]	; 0x50
    2da0:	beq	2edc <log_oom_internal@plt+0xe70>
    2da4:	ldr	ip, [pc, #552]	; 2fd4 <log_oom_internal@plt+0xf68>
    2da8:	ldr	lr, [pc, #552]	; 2fd8 <log_oom_internal@plt+0xf6c>
    2dac:	add	ip, pc, ip
    2db0:	add	lr, pc, lr
    2db4:	str	r2, [sp, #12]
    2db8:	ldr	r2, [pc, #540]	; 2fdc <log_oom_internal@plt+0xf70>
    2dbc:	stmib	sp, {r0, ip}
    2dc0:	str	r1, [sp]
    2dc4:	str	lr, [sp, #16]
    2dc8:	add	r2, pc, r2
    2dcc:	mov	r1, #1
    2dd0:	add	r0, sp, #76	; 0x4c
    2dd4:	bl	1e44 <__asprintf_chk@plt>
    2dd8:	cmp	r0, #0
    2ddc:	blt	2f7c <log_oom_internal@plt+0xf10>
    2de0:	mov	r0, r7
    2de4:	bl	1ba4 <free@plt>
    2de8:	ldr	r7, [sp, #76]	; 0x4c
    2dec:	mov	r0, r7
    2df0:	bl	1f1c <strlen@plt>
    2df4:	mov	r3, #70	; 0x46
    2df8:	ldr	r2, [sp, #40]	; 0x28
    2dfc:	mov	r1, r0
    2e00:	mov	r0, r7
    2e04:	bl	1d24 <ellipsize_mem@plt>
    2e08:	subs	r7, r0, #0
    2e0c:	beq	2d0c <log_oom_internal@plt+0xca0>
    2e10:	cmp	fp, r5
    2e14:	bls	2ec4 <log_oom_internal@plt+0xe58>
    2e18:	mov	r0, #0
    2e1c:	bl	1dfc <special_glyph@plt>
    2e20:	mov	r5, r0
    2e24:	ldr	r8, [sp, #36]	; 0x24
    2e28:	ldr	r1, [pc, #432]	; 2fe0 <log_oom_internal@plt+0xf74>
    2e2c:	mov	r3, r5
    2e30:	str	r7, [sp]
    2e34:	mov	r2, r8
    2e38:	add	r1, pc, r1
    2e3c:	mov	r0, #1
    2e40:	bl	2048 <__printf_chk@plt>
    2e44:	ldr	r3, [r4]
    2e48:	add	r3, r3, #1
    2e4c:	cmp	r3, fp
    2e50:	str	r3, [r4]
    2e54:	bcs	2ea8 <log_oom_internal@plt+0xe3c>
    2e58:	mov	r1, r5
    2e5c:	mov	r0, r8
    2e60:	bl	1de4 <strappend@plt>
    2e64:	subs	r5, r0, #0
    2e68:	beq	2f94 <log_oom_internal@plt+0xf28>
    2e6c:	ldr	r2, [sp, #164]	; 0xa4
    2e70:	ldr	r3, [sp, #96]	; 0x60
    2e74:	str	r2, [sp, #12]
    2e78:	ldr	r2, [sp, #60]	; 0x3c
    2e7c:	stm	sp, {r3, r5}
    2e80:	str	r2, [sp, #8]
    2e84:	mov	r3, fp
    2e88:	mov	r2, r4
    2e8c:	mov	r1, r6
    2e90:	ldr	r0, [sp, #24]
    2e94:	bl	29d8 <log_oom_internal@plt+0x96c>
    2e98:	cmp	r0, #0
    2e9c:	blt	2f84 <log_oom_internal@plt+0xf18>
    2ea0:	mov	r0, r5
    2ea4:	bl	1ba4 <free@plt>
    2ea8:	ldr	r0, [sp, #76]	; 0x4c
    2eac:	bl	1ba4 <free@plt>
    2eb0:	mov	r0, r7
    2eb4:	bl	1ba4 <free@plt>
    2eb8:	b	2a90 <log_oom_internal@plt+0xa24>
    2ebc:	mov	r8, r7
    2ec0:	b	2d14 <log_oom_internal@plt+0xca8>
    2ec4:	ldr	r5, [pc, #280]	; 2fe4 <log_oom_internal@plt+0xf78>
    2ec8:	add	r5, pc, r5
    2ecc:	b	2e24 <log_oom_internal@plt+0xdb8>
    2ed0:	ldr	r3, [pc, #272]	; 2fe8 <log_oom_internal@plt+0xf7c>
    2ed4:	add	r3, pc, r3
    2ed8:	b	2d90 <log_oom_internal@plt+0xd24>
    2edc:	ldr	lr, [sp, #68]	; 0x44
    2ee0:	mov	r2, lr
    2ee4:	mov	ip, lr
    2ee8:	b	2db4 <log_oom_internal@plt+0xd48>
    2eec:	ldr	r3, [r4]
    2ef0:	ldr	r1, [pc, #244]	; 2fec <log_oom_internal@plt+0xf80>
    2ef4:	mov	r2, r5
    2ef8:	add	r1, pc, r1
    2efc:	ldr	r0, [r6, r3, lsl #2]
    2f00:	bl	1e98 <sd_device_get_sysattr_value@plt>
    2f04:	b	2ba8 <log_oom_internal@plt+0xb3c>
    2f08:	ldr	r2, [pc, #224]	; 2ff0 <log_oom_internal@plt+0xf84>
    2f0c:	ldr	r1, [pc, #224]	; 2ff4 <log_oom_internal@plt+0xf88>
    2f10:	add	r2, pc, r2
    2f14:	str	r2, [sp]
    2f18:	ldr	r2, [pc, #216]	; 2ff8 <log_oom_internal@plt+0xf8c>
    2f1c:	mov	r3, #30
    2f20:	add	r2, pc, r2
    2f24:	add	r1, pc, r1
    2f28:	bl	1fa0 <log_assert_failed_realm@plt>
    2f2c:	ldr	r3, [pc, #200]	; 2ffc <log_oom_internal@plt+0xf90>
    2f30:	ldr	r2, [pc, #200]	; 3000 <log_oom_internal@plt+0xf94>
    2f34:	ldr	r1, [pc, #200]	; 3004 <log_oom_internal@plt+0xf98>
    2f38:	add	r3, pc, r3
    2f3c:	str	r3, [sp]
    2f40:	mov	r0, r6
    2f44:	mov	r3, #31
    2f48:	add	r2, pc, r2
    2f4c:	add	r1, pc, r1
    2f50:	bl	1fa0 <log_assert_failed_realm@plt>
    2f54:	ldr	r3, [pc, #172]	; 3008 <log_oom_internal@plt+0xf9c>
    2f58:	mov	r0, r2
    2f5c:	ldr	r1, [pc, #168]	; 300c <log_oom_internal@plt+0xfa0>
    2f60:	ldr	r2, [pc, #168]	; 3010 <log_oom_internal@plt+0xfa4>
    2f64:	add	r3, pc, r3
    2f68:	str	r3, [sp]
    2f6c:	add	r2, pc, r2
    2f70:	mov	r3, #33	; 0x21
    2f74:	add	r1, pc, r1
    2f78:	bl	1fa0 <log_assert_failed_realm@plt>
    2f7c:	mvn	r8, #11
    2f80:	b	2d14 <log_oom_internal@plt+0xca8>
    2f84:	mov	r8, r0
    2f88:	mov	r0, r5
    2f8c:	bl	1ba4 <free@plt>
    2f90:	b	2d14 <log_oom_internal@plt+0xca8>
    2f94:	mvn	r8, #11
    2f98:	b	2f88 <log_oom_internal@plt+0xf1c>
    2f9c:	bl	1dcc <__stack_chk_fail@plt>
    2fa0:	andeq	r7, r1, r8, lsr #8
    2fa4:			; <UNDEFINED> instruction: 0x000001bc
    2fa8:	andeq	r5, r0, ip, lsl #8
    2fac:	andeq	r5, r0, r4, lsr #7
    2fb0:	strdeq	r6, [r0], -ip
    2fb4:	ldrdeq	r5, [r0], -ip
    2fb8:	andeq	r5, r0, ip, lsl r3
    2fbc:	strdeq	r5, [r0], -r4
    2fc0:	andeq	r5, r0, ip, ror #5
    2fc4:	andeq	r5, r0, r8, lsl #5
    2fc8:	andeq	r5, r0, ip, lsr r2
    2fcc:	andeq	r5, r0, ip, lsl r1
    2fd0:	andeq	r5, r0, r8, lsl #1
    2fd4:	andeq	r5, r0, r4, ror r0
    2fd8:	andeq	r5, r0, r4, ror r0
    2fdc:	andeq	r5, r0, r8, asr #1
    2fe0:	andeq	r5, r0, r0, asr r0
    2fe4:	andeq	r4, r0, r0, ror #30
    2fe8:	andeq	r5, r0, r0, lsr #31
    2fec:	andeq	r4, r0, ip, lsl #31
    2ff0:	andeq	r4, r0, r4, asr ip
    2ff4:	andeq	r4, r0, r4, lsr #30
    2ff8:	andeq	r4, r0, ip, lsl #30
    2ffc:	andeq	r4, r0, ip, lsr #24
    3000:	andeq	r4, r0, r4, ror #29
    3004:	andeq	r4, r0, r4, lsl #30
    3008:	andeq	r4, r0, r0, lsl #24
    300c:	andeq	r4, r0, r8, ror #29
    3010:	andeq	r4, r0, r0, asr #29
    3014:	push	{r4, r5, r6, r7, lr}
    3018:	sub	sp, sp, #12
    301c:	ldr	r6, [pc, #188]	; 30e0 <log_oom_internal@plt+0x1074>
    3020:	ldr	r2, [pc, #188]	; 30e4 <log_oom_internal@plt+0x1078>
    3024:	add	r6, pc, r6
    3028:	ldr	r3, [pc, #184]	; 30e8 <log_oom_internal@plt+0x107c>
    302c:	ldr	r7, [r6, r2]
    3030:	add	r3, pc, r3
    3034:	add	r5, sp, #8
    3038:	ldr	r0, [r3]
    303c:	ldr	r3, [r7]
    3040:	mov	r4, #0
    3044:	str	r4, [r5, #-8]!
    3048:	str	r3, [sp, #4]
    304c:	bl	1fdc <pager_open@plt>
    3050:	ldr	r1, [pc, #148]	; 30ec <log_oom_internal@plt+0x1080>
    3054:	ldr	r0, [pc, #148]	; 30f0 <log_oom_internal@plt+0x1084>
    3058:	mov	r2, r5
    305c:	add	r1, pc, r1
    3060:	add	r0, pc, r0
    3064:	bl	1dd8 <terminal_urlify_man@plt>
    3068:	cmp	r0, r4
    306c:	blt	30b4 <log_oom_internal@plt+0x1048>
    3070:	ldr	r2, [pc, #124]	; 30f4 <log_oom_internal@plt+0x1088>
    3074:	ldr	r1, [pc, #124]	; 30f8 <log_oom_internal@plt+0x108c>
    3078:	ldr	r3, [sp]
    307c:	ldr	r2, [r6, r2]
    3080:	add	r1, pc, r1
    3084:	mov	r0, #1
    3088:	ldr	r2, [r2]
    308c:	bl	2048 <__printf_chk@plt>
    3090:	ldr	r0, [sp]
    3094:	bl	1ba4 <free@plt>
    3098:	ldr	r2, [sp, #4]
    309c:	ldr	r3, [r7]
    30a0:	mov	r0, r4
    30a4:	cmp	r2, r3
    30a8:	bne	30dc <log_oom_internal@plt+0x1070>
    30ac:	add	sp, sp, #12
    30b0:	pop	{r4, r5, r6, r7, pc}
    30b4:	ldr	r3, [pc, #64]	; 30fc <log_oom_internal@plt+0x1090>
    30b8:	ldr	r1, [pc, #64]	; 3100 <log_oom_internal@plt+0x1094>
    30bc:	add	r3, pc, r3
    30c0:	mov	r0, r4
    30c4:	add	r3, r3, #16
    30c8:	ldr	r2, [pc, #52]	; 3104 <log_oom_internal@plt+0x1098>
    30cc:	add	r1, pc, r1
    30d0:	bl	206c <log_oom_internal@plt>
    30d4:	mov	r4, r0
    30d8:	b	3090 <log_oom_internal@plt+0x1024>
    30dc:	bl	1dcc <__stack_chk_fail@plt>
    30e0:	andeq	r6, r1, r4, ror #27
    30e4:			; <UNDEFINED> instruction: 0x000001bc
    30e8:	strdeq	r6, [r1], -r8
    30ec:	andeq	r4, r0, r4, asr #28
    30f0:	andeq	r4, r0, r4, asr #28
    30f4:	andeq	r0, r0, r0, ror #3
    30f8:	andeq	r4, r0, r8, asr #28
    30fc:	andeq	r4, r0, r8, lsr #21
    3100:	andeq	r4, r0, r4, ror #27
    3104:	andeq	r0, r0, r2, lsl r5
    3108:	ldr	r3, [pc, #520]	; 3318 <log_oom_internal@plt+0x12ac>
    310c:	ldr	ip, [pc, #520]	; 331c <log_oom_internal@plt+0x12b0>
    3110:	add	r3, pc, r3
    3114:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3118:	subs	r9, r2, #0
    311c:	ldr	r2, [r3, ip]
    3120:	mov	r8, r0
    3124:	mov	r0, r2
    3128:	sub	sp, sp, #52	; 0x34
    312c:	ldr	r3, [r0]
    3130:	str	r2, [sp, #28]
    3134:	mov	r2, #0
    3138:	str	r2, [sp, #32]
    313c:	str	r3, [sp, #44]	; 0x2c
    3140:	str	r2, [sp, #36]	; 0x24
    3144:	str	r2, [sp, #40]	; 0x28
    3148:	beq	32ac <log_oom_internal@plt+0x1240>
    314c:	cmp	r1, #0
    3150:	beq	32e8 <log_oom_internal@plt+0x127c>
    3154:	ldr	r3, [pc, #452]	; 3320 <log_oom_internal@plt+0x12b4>
    3158:	ldr	r2, [pc, #452]	; 3324 <log_oom_internal@plt+0x12b8>
    315c:	add	r3, pc, r3
    3160:	add	r2, pc, r2
    3164:	ldrb	r3, [r3]
    3168:	ldr	r2, [r2, #4]
    316c:	cmp	r2, #0
    3170:	movne	r3, #0
    3174:	andeq	r3, r3, #1
    3178:	cmp	r3, #0
    317c:	bne	32d8 <log_oom_internal@plt+0x126c>
    3180:	cmp	r8, #1
    3184:	addle	r7, sp, #32
    3188:	ble	3258 <log_oom_internal@plt+0x11ec>
    318c:	ldr	r3, [pc, #404]	; 3328 <log_oom_internal@plt+0x12bc>
    3190:	ldr	fp, [pc, #404]	; 332c <log_oom_internal@plt+0x12c0>
    3194:	ldr	sl, [pc, #404]	; 3330 <log_oom_internal@plt+0x12c4>
    3198:	add	r3, pc, r3
    319c:	add	fp, pc, fp
    31a0:	add	sl, pc, sl
    31a4:	str	r3, [sp, #24]
    31a8:	mov	r5, r1
    31ac:	mov	r4, #1
    31b0:	add	r7, sp, #32
    31b4:	b	31c4 <log_oom_internal@plt+0x1158>
    31b8:	add	r4, r4, #1
    31bc:	cmp	r8, r4
    31c0:	beq	3258 <log_oom_internal@plt+0x11ec>
    31c4:	ldr	r2, [pc, #360]	; 3334 <log_oom_internal@plt+0x12c8>
    31c8:	ldr	r3, [pc, #360]	; 3338 <log_oom_internal@plt+0x12cc>
    31cc:	ldr	r1, [r5, #4]!
    31d0:	add	r2, pc, r2
    31d4:	add	r3, pc, r3
    31d8:	mov	r6, #0
    31dc:	str	r1, [sp, #16]
    31e0:	str	r2, [sp, #12]
    31e4:	str	r3, [sp]
    31e8:	str	r7, [sp, #4]
    31ec:	str	r6, [sp, #8]
    31f0:	mov	r3, fp
    31f4:	mov	r2, sl
    31f8:	ldr	r1, [sp, #24]
    31fc:	mov	r0, r9
    3200:	bl	1f7c <sd_bus_call_method@plt>
    3204:	cmp	r0, #0
    3208:	bge	31b8 <log_oom_internal@plt+0x114c>
    320c:	str	r0, [sp, #24]
    3210:	mov	r0, r6
    3214:	bl	1cb8 <log_get_max_level_realm@plt>
    3218:	ldr	r3, [sp, #24]
    321c:	rsb	r1, r3, #0
    3220:	cmp	r0, #2
    3224:	uxtble	r1, r1
    3228:	rsble	r4, r1, #0
    322c:	bgt	3260 <log_oom_internal@plt+0x11f4>
    3230:	mov	r0, r7
    3234:	bl	1d18 <sd_bus_error_free@plt>
    3238:	ldr	r3, [sp, #28]
    323c:	ldr	r2, [sp, #44]	; 0x2c
    3240:	mov	r0, r4
    3244:	ldr	r3, [r3]
    3248:	cmp	r2, r3
    324c:	bne	3314 <log_oom_internal@plt+0x12a8>
    3250:	add	sp, sp, #52	; 0x34
    3254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3258:	mov	r4, #0
    325c:	b	3230 <log_oom_internal@plt+0x11c4>
    3260:	mov	r0, r7
    3264:	bl	1f40 <bus_error_message@plt>
    3268:	ldr	r2, [pc, #204]	; 333c <log_oom_internal@plt+0x12d0>
    326c:	ldr	ip, [pc, #204]	; 3340 <log_oom_internal@plt+0x12d4>
    3270:	add	r2, pc, r2
    3274:	add	r2, r2, #40	; 0x28
    3278:	ldr	r3, [sp, #24]
    327c:	str	r2, [sp]
    3280:	ldr	r2, [pc, #188]	; 3344 <log_oom_internal@plt+0x12d8>
    3284:	add	ip, pc, ip
    3288:	mov	r1, r3
    328c:	str	ip, [sp, #4]
    3290:	ldr	r3, [pc, #176]	; 3348 <log_oom_internal@plt+0x12dc>
    3294:	add	r2, pc, r2
    3298:	str	r0, [sp, #8]
    329c:	mov	r0, #3
    32a0:	bl	1fac <log_internal_realm@plt>
    32a4:	mov	r4, r0
    32a8:	b	3230 <log_oom_internal@plt+0x11c4>
    32ac:	ldr	r3, [pc, #152]	; 334c <log_oom_internal@plt+0x12e0>
    32b0:	ldr	r2, [pc, #152]	; 3350 <log_oom_internal@plt+0x12e4>
    32b4:	add	r3, pc, r3
    32b8:	ldr	r1, [pc, #148]	; 3354 <log_oom_internal@plt+0x12e8>
    32bc:	add	r3, r3, #24
    32c0:	str	r3, [sp]
    32c4:	mov	r0, r9
    32c8:	ldr	r3, [pc, #136]	; 3358 <log_oom_internal@plt+0x12ec>
    32cc:	add	r2, pc, r2
    32d0:	add	r1, pc, r1
    32d4:	bl	1fa0 <log_assert_failed_realm@plt>
    32d8:	str	r1, [sp, #24]
    32dc:	bl	1e14 <polkit_agent_open@plt>
    32e0:	ldr	r1, [sp, #24]
    32e4:	b	3180 <log_oom_internal@plt+0x1114>
    32e8:	ldr	r3, [pc, #108]	; 335c <log_oom_internal@plt+0x12f0>
    32ec:	mov	r0, r1
    32f0:	add	r3, pc, r3
    32f4:	ldr	r2, [pc, #100]	; 3360 <log_oom_internal@plt+0x12f4>
    32f8:	ldr	r1, [pc, #100]	; 3364 <log_oom_internal@plt+0x12f8>
    32fc:	add	r3, r3, #24
    3300:	str	r3, [sp]
    3304:	add	r2, pc, r2
    3308:	ldr	r3, [pc, #88]	; 3368 <log_oom_internal@plt+0x12fc>
    330c:	add	r1, pc, r1
    3310:	bl	1fa0 <log_assert_failed_realm@plt>
    3314:	bl	1dcc <__stack_chk_fail@plt>
    3318:	strdeq	r6, [r1], -r8
    331c:			; <UNDEFINED> instruction: 0x000001bc
    3320:	andeq	r6, r1, r0, lsr #29
    3324:	andeq	r6, r1, r8, asr #29
    3328:	andeq	r5, r0, r8, lsr #15
    332c:	andeq	r5, r0, ip, ror #14
    3330:	andeq	r5, r0, r8, lsl #15
    3334:	andeq	r5, r0, r8, ror #27
    3338:	andeq	r5, r0, r4, lsl #15
    333c:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    3340:	andeq	r5, r0, r4, ror #13
    3344:	andeq	r4, r0, ip, lsl ip
    3348:	andeq	r0, r0, r4, lsl #10
    334c:			; <UNDEFINED> instruction: 0x000048b0
    3350:	andeq	r4, r0, r4, ror #23
    3354:	andeq	r5, r0, ip, lsr #12
    3358:	strdeq	r0, [r0], -r4
    335c:	andeq	r4, r0, r4, ror r8
    3360:	andeq	r4, r0, ip, lsr #23
    3364:	strdeq	r5, [r0], -r4
    3368:	strdeq	r0, [r0], -r5
    336c:	ldr	r3, [pc, #452]	; 3538 <log_oom_internal@plt+0x14cc>
    3370:	ldr	ip, [pc, #452]	; 353c <log_oom_internal@plt+0x14d0>
    3374:	add	r3, pc, r3
    3378:	push	{r4, r5, r6, r7, lr}
    337c:	sub	sp, sp, #44	; 0x2c
    3380:	ldr	r5, [r3, ip]
    3384:	mov	r0, #0
    3388:	subs	r6, r2, #0
    338c:	ldr	r3, [r5]
    3390:	str	r0, [sp, #24]
    3394:	str	r0, [sp, #28]
    3398:	str	r3, [sp, #36]	; 0x24
    339c:	str	r0, [sp, #32]
    33a0:	beq	34cc <log_oom_internal@plt+0x1460>
    33a4:	cmp	r1, #0
    33a8:	beq	3508 <log_oom_internal@plt+0x149c>
    33ac:	ldr	r3, [pc, #396]	; 3540 <log_oom_internal@plt+0x14d4>
    33b0:	ldr	r2, [pc, #396]	; 3544 <log_oom_internal@plt+0x14d8>
    33b4:	add	r3, pc, r3
    33b8:	add	r2, pc, r2
    33bc:	ldrb	r3, [r3]
    33c0:	ldr	r2, [r2, #4]
    33c4:	cmp	r2, #0
    33c8:	movne	r3, #0
    33cc:	andeq	r3, r3, #1
    33d0:	cmp	r3, #0
    33d4:	bne	34f8 <log_oom_internal@plt+0x148c>
    33d8:	ldr	r0, [r1]
    33dc:	ldr	r1, [pc, #356]	; 3548 <log_oom_internal@plt+0x14dc>
    33e0:	add	r1, pc, r1
    33e4:	bl	1f4c <strcmp@plt>
    33e8:	cmp	r0, #0
    33ec:	beq	345c <log_oom_internal@plt+0x13f0>
    33f0:	ldr	r3, [pc, #340]	; 354c <log_oom_internal@plt+0x14e0>
    33f4:	add	r3, pc, r3
    33f8:	str	r3, [sp]
    33fc:	ldr	r2, [pc, #332]	; 3550 <log_oom_internal@plt+0x14e4>
    3400:	ldr	r3, [pc, #332]	; 3554 <log_oom_internal@plt+0x14e8>
    3404:	ldr	r1, [pc, #332]	; 3558 <log_oom_internal@plt+0x14ec>
    3408:	mov	r4, #0
    340c:	add	r7, sp, #24
    3410:	mov	r0, r6
    3414:	str	r4, [sp, #12]
    3418:	str	r4, [sp, #8]
    341c:	str	r7, [sp, #4]
    3420:	add	r3, pc, r3
    3424:	add	r2, pc, r2
    3428:	add	r1, pc, r1
    342c:	bl	1f7c <sd_bus_call_method@plt>
    3430:	subs	r6, r0, #0
    3434:	blt	3468 <log_oom_internal@plt+0x13fc>
    3438:	mov	r0, r7
    343c:	bl	1d18 <sd_bus_error_free@plt>
    3440:	ldr	r2, [sp, #36]	; 0x24
    3444:	ldr	r3, [r5]
    3448:	mov	r0, r4
    344c:	cmp	r2, r3
    3450:	bne	3534 <log_oom_internal@plt+0x14c8>
    3454:	add	sp, sp, #44	; 0x2c
    3458:	pop	{r4, r5, r6, r7, pc}
    345c:	ldr	r3, [pc, #248]	; 355c <log_oom_internal@plt+0x14f0>
    3460:	add	r3, pc, r3
    3464:	b	33f8 <log_oom_internal@plt+0x138c>
    3468:	mov	r0, r4
    346c:	bl	1cb8 <log_get_max_level_realm@plt>
    3470:	rsb	r1, r6, #0
    3474:	cmp	r0, #2
    3478:	uxtble	r4, r1
    347c:	rsble	r4, r4, #0
    3480:	ble	3438 <log_oom_internal@plt+0x13cc>
    3484:	mov	r0, r7
    3488:	bl	1f40 <bus_error_message@plt>
    348c:	ldr	r2, [pc, #204]	; 3560 <log_oom_internal@plt+0x14f4>
    3490:	ldr	r3, [pc, #204]	; 3564 <log_oom_internal@plt+0x14f8>
    3494:	add	r2, pc, r2
    3498:	str	r2, [sp, #4]
    349c:	add	r3, pc, r3
    34a0:	ldr	r2, [pc, #192]	; 3568 <log_oom_internal@plt+0x14fc>
    34a4:	add	r3, r3, #72	; 0x48
    34a8:	str	r3, [sp]
    34ac:	mov	r1, r6
    34b0:	ldr	r3, [pc, #180]	; 356c <log_oom_internal@plt+0x1500>
    34b4:	add	r2, pc, r2
    34b8:	str	r0, [sp, #8]
    34bc:	mov	r0, #3
    34c0:	bl	1fac <log_internal_realm@plt>
    34c4:	mov	r4, r0
    34c8:	b	3438 <log_oom_internal@plt+0x13cc>
    34cc:	ldr	r3, [pc, #156]	; 3570 <log_oom_internal@plt+0x1504>
    34d0:	ldr	r2, [pc, #156]	; 3574 <log_oom_internal@plt+0x1508>
    34d4:	add	r3, pc, r3
    34d8:	ldr	r1, [pc, #152]	; 3578 <log_oom_internal@plt+0x150c>
    34dc:	add	r3, r3, #56	; 0x38
    34e0:	str	r3, [sp]
    34e4:	mov	r0, r6
    34e8:	ldr	r3, [pc, #140]	; 357c <log_oom_internal@plt+0x1510>
    34ec:	add	r2, pc, r2
    34f0:	add	r1, pc, r1
    34f4:	bl	1fa0 <log_assert_failed_realm@plt>
    34f8:	str	r1, [sp, #20]
    34fc:	bl	1e14 <polkit_agent_open@plt>
    3500:	ldr	r1, [sp, #20]
    3504:	b	33d8 <log_oom_internal@plt+0x136c>
    3508:	ldr	r3, [pc, #112]	; 3580 <log_oom_internal@plt+0x1514>
    350c:	mov	r0, r1
    3510:	add	r3, pc, r3
    3514:	ldr	r2, [pc, #104]	; 3584 <log_oom_internal@plt+0x1518>
    3518:	ldr	r1, [pc, #104]	; 3588 <log_oom_internal@plt+0x151c>
    351c:	add	r3, r3, #56	; 0x38
    3520:	str	r3, [sp]
    3524:	add	r2, pc, r2
    3528:	ldr	r3, [pc, #92]	; 358c <log_oom_internal@plt+0x1520>
    352c:	add	r1, pc, r1
    3530:	bl	1fa0 <log_assert_failed_realm@plt>
    3534:	bl	1dcc <__stack_chk_fail@plt>
    3538:	muleq	r1, r4, sl
    353c:			; <UNDEFINED> instruction: 0x000001bc
    3540:	andeq	r6, r1, r8, asr #24
    3544:	andeq	r6, r1, r0, ror ip
    3548:	andeq	r5, r0, r8, asr #11
    354c:	andeq	r5, r0, r4, lsr #11
    3550:	andeq	r5, r0, r4, lsl #10
    3554:	andeq	r5, r0, r8, ror #9
    3558:	andeq	r5, r0, r8, lsl r5
    355c:	andeq	r5, r0, r8, lsr #10
    3560:	andeq	r5, r0, r4, lsr #10
    3564:	andeq	r4, r0, r8, asr #13
    3568:	strdeq	r4, [r0], -ip
    356c:	andeq	r0, r0, sl, ror #9
    3570:	muleq	r0, r0, r6
    3574:	andeq	r4, r0, r4, asr #19
    3578:	andeq	r5, r0, ip, lsl #8
    357c:	ldrdeq	r0, [r0], -ip
    3580:	andeq	r4, r0, r4, asr r6
    3584:	andeq	r4, r0, ip, lsl #19
    3588:	ldrdeq	r5, [r0], -r4
    358c:	ldrdeq	r0, [r0], -sp
    3590:	ldr	r3, [pc, #424]	; 3740 <log_oom_internal@plt+0x16d4>
    3594:	ldr	r0, [pc, #424]	; 3744 <log_oom_internal@plt+0x16d8>
    3598:	add	r3, pc, r3
    359c:	push	{r4, r5, r6, r7, lr}
    35a0:	sub	sp, sp, #44	; 0x2c
    35a4:	ldr	r5, [r3, r0]
    35a8:	mov	ip, #0
    35ac:	subs	r7, r2, #0
    35b0:	ldr	r3, [r5]
    35b4:	str	ip, [sp, #24]
    35b8:	str	ip, [sp, #28]
    35bc:	str	r3, [sp, #36]	; 0x24
    35c0:	str	ip, [sp, #32]
    35c4:	beq	36dc <log_oom_internal@plt+0x1670>
    35c8:	cmp	r1, #0
    35cc:	beq	3710 <log_oom_internal@plt+0x16a4>
    35d0:	ldr	r3, [pc, #368]	; 3748 <log_oom_internal@plt+0x16dc>
    35d4:	ldr	r2, [pc, #368]	; 374c <log_oom_internal@plt+0x16e0>
    35d8:	add	r3, pc, r3
    35dc:	add	r2, pc, r2
    35e0:	ldrb	r3, [r3]
    35e4:	ldr	r2, [r2, #4]
    35e8:	cmp	r2, #0
    35ec:	movne	r3, #0
    35f0:	andeq	r3, r3, #1
    35f4:	cmp	r3, #0
    35f8:	bne	3708 <log_oom_internal@plt+0x169c>
    35fc:	ldr	r2, [pc, #332]	; 3750 <log_oom_internal@plt+0x16e4>
    3600:	ldr	r3, [pc, #332]	; 3754 <log_oom_internal@plt+0x16e8>
    3604:	add	r2, pc, r2
    3608:	add	r3, pc, r3
    360c:	mov	r1, #1
    3610:	str	r2, [sp, #12]
    3614:	str	r3, [sp]
    3618:	str	r1, [sp, #16]
    361c:	ldr	r3, [pc, #308]	; 3758 <log_oom_internal@plt+0x16ec>
    3620:	ldr	r2, [pc, #308]	; 375c <log_oom_internal@plt+0x16f0>
    3624:	ldr	r1, [pc, #308]	; 3760 <log_oom_internal@plt+0x16f4>
    3628:	mov	r4, #0
    362c:	add	r6, sp, #24
    3630:	mov	r0, r7
    3634:	str	r4, [sp, #8]
    3638:	str	r6, [sp, #4]
    363c:	add	r3, pc, r3
    3640:	add	r2, pc, r2
    3644:	add	r1, pc, r1
    3648:	bl	1f7c <sd_bus_call_method@plt>
    364c:	subs	r7, r0, #0
    3650:	blt	3678 <log_oom_internal@plt+0x160c>
    3654:	mov	r0, r6
    3658:	bl	1d18 <sd_bus_error_free@plt>
    365c:	ldr	r2, [sp, #36]	; 0x24
    3660:	ldr	r3, [r5]
    3664:	mov	r0, r4
    3668:	cmp	r2, r3
    366c:	bne	373c <log_oom_internal@plt+0x16d0>
    3670:	add	sp, sp, #44	; 0x2c
    3674:	pop	{r4, r5, r6, r7, pc}
    3678:	mov	r0, r4
    367c:	bl	1cb8 <log_get_max_level_realm@plt>
    3680:	rsb	r1, r7, #0
    3684:	cmp	r0, #2
    3688:	uxtble	r4, r1
    368c:	rsble	r4, r4, #0
    3690:	ble	3654 <log_oom_internal@plt+0x15e8>
    3694:	mov	r0, r6
    3698:	bl	1f40 <bus_error_message@plt>
    369c:	ldr	r2, [pc, #192]	; 3764 <log_oom_internal@plt+0x16f8>
    36a0:	ldr	r3, [pc, #192]	; 3768 <log_oom_internal@plt+0x16fc>
    36a4:	add	r2, pc, r2
    36a8:	str	r2, [sp, #4]
    36ac:	add	r3, pc, r3
    36b0:	ldr	r2, [pc, #180]	; 376c <log_oom_internal@plt+0x1700>
    36b4:	add	r3, r3, #104	; 0x68
    36b8:	str	r3, [sp]
    36bc:	mov	r1, r7
    36c0:	ldr	r3, [pc, #168]	; 3770 <log_oom_internal@plt+0x1704>
    36c4:	add	r2, pc, r2
    36c8:	str	r0, [sp, #8]
    36cc:	mov	r0, #3
    36d0:	bl	1fac <log_internal_realm@plt>
    36d4:	mov	r4, r0
    36d8:	b	3654 <log_oom_internal@plt+0x15e8>
    36dc:	ldr	r3, [pc, #144]	; 3774 <log_oom_internal@plt+0x1708>
    36e0:	ldr	r2, [pc, #144]	; 3778 <log_oom_internal@plt+0x170c>
    36e4:	add	r3, pc, r3
    36e8:	ldr	r1, [pc, #140]	; 377c <log_oom_internal@plt+0x1710>
    36ec:	add	r3, r3, #88	; 0x58
    36f0:	str	r3, [sp]
    36f4:	mov	r0, r7
    36f8:	ldr	r3, [pc, #128]	; 3780 <log_oom_internal@plt+0x1714>
    36fc:	add	r2, pc, r2
    3700:	add	r1, pc, r1
    3704:	bl	1fa0 <log_assert_failed_realm@plt>
    3708:	bl	1e14 <polkit_agent_open@plt>
    370c:	b	35fc <log_oom_internal@plt+0x1590>
    3710:	ldr	r3, [pc, #108]	; 3784 <log_oom_internal@plt+0x1718>
    3714:	mov	r0, r1
    3718:	add	r3, pc, r3
    371c:	ldr	r2, [pc, #100]	; 3788 <log_oom_internal@plt+0x171c>
    3720:	ldr	r1, [pc, #100]	; 378c <log_oom_internal@plt+0x1720>
    3724:	add	r3, r3, #88	; 0x58
    3728:	str	r3, [sp]
    372c:	add	r2, pc, r2
    3730:	ldr	r3, [pc, #88]	; 3790 <log_oom_internal@plt+0x1724>
    3734:	add	r1, pc, r1
    3738:	bl	1fa0 <log_assert_failed_realm@plt>
    373c:	bl	1dcc <__stack_chk_fail@plt>
    3740:	andeq	r6, r1, r0, ror r8
    3744:			; <UNDEFINED> instruction: 0x000001bc
    3748:	andeq	r6, r1, r4, lsr #20
    374c:	andeq	r6, r1, ip, asr #20
    3750:	ldrdeq	r5, [r0], -r0
    3754:	ldrdeq	r5, [r0], -r0
    3758:	andeq	r5, r0, ip, asr #5
    375c:	andeq	r5, r0, r8, ror #5
    3760:	strdeq	r5, [r0], -ip
    3764:	andeq	r5, r0, r4, asr #6
    3768:			; <UNDEFINED> instruction: 0x000044b8
    376c:	andeq	r4, r0, ip, ror #15
    3770:	ldrdeq	r0, [r0], -r2
    3774:	andeq	r4, r0, r0, lsl #9
    3778:			; <UNDEFINED> instruction: 0x000047b4
    377c:	strdeq	r5, [r0], -ip
    3780:	andeq	r0, r0, r4, asr #9
    3784:	andeq	r4, r0, ip, asr #8
    3788:	andeq	r4, r0, r4, lsl #15
    378c:	andeq	r5, r0, ip, asr #3
    3790:	andeq	r0, r0, r5, asr #9
    3794:	ldr	r3, [pc, #544]	; 39bc <log_oom_internal@plt+0x1950>
    3798:	ldr	ip, [pc, #544]	; 39c0 <log_oom_internal@plt+0x1954>
    379c:	add	r3, pc, r3
    37a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    37a4:	subs	sl, r2, #0
    37a8:	ldr	r2, [r3, ip]
    37ac:	mov	r9, r0
    37b0:	mov	r0, r2
    37b4:	sub	sp, sp, #68	; 0x44
    37b8:	ldr	r3, [r0]
    37bc:	str	r2, [sp, #44]	; 0x2c
    37c0:	mov	r2, #0
    37c4:	str	r2, [sp, #48]	; 0x30
    37c8:	str	r3, [sp, #60]	; 0x3c
    37cc:	str	r2, [sp, #52]	; 0x34
    37d0:	str	r2, [sp, #56]	; 0x38
    37d4:	beq	3958 <log_oom_internal@plt+0x18ec>
    37d8:	cmp	r1, #0
    37dc:	mov	r7, r1
    37e0:	beq	398c <log_oom_internal@plt+0x1920>
    37e4:	ldr	r3, [pc, #472]	; 39c4 <log_oom_internal@plt+0x1958>
    37e8:	ldr	r2, [pc, #472]	; 39c8 <log_oom_internal@plt+0x195c>
    37ec:	add	r3, pc, r3
    37f0:	add	r2, pc, r2
    37f4:	ldrb	r3, [r3]
    37f8:	ldr	r2, [r2, #4]
    37fc:	cmp	r2, #0
    3800:	movne	r3, #0
    3804:	andeq	r3, r3, #1
    3808:	cmp	r3, #0
    380c:	bne	3984 <log_oom_internal@plt+0x1918>
    3810:	cmp	r9, #2
    3814:	addle	r3, sp, #48	; 0x30
    3818:	strle	r3, [sp, #36]	; 0x24
    381c:	ble	3904 <log_oom_internal@plt+0x1898>
    3820:	ldr	r3, [pc, #420]	; 39cc <log_oom_internal@plt+0x1960>
    3824:	ldr	fp, [pc, #420]	; 39d0 <log_oom_internal@plt+0x1964>
    3828:	add	r3, pc, r3
    382c:	ldr	r8, [pc, #416]	; 39d4 <log_oom_internal@plt+0x1968>
    3830:	str	r3, [sp, #40]	; 0x28
    3834:	add	r3, sp, #48	; 0x30
    3838:	add	fp, pc, fp
    383c:	add	r8, pc, r8
    3840:	str	r3, [sp, #36]	; 0x24
    3844:	add	r5, r7, #4
    3848:	mov	r4, #2
    384c:	b	385c <log_oom_internal@plt+0x17f0>
    3850:	add	r4, r4, #1
    3854:	cmp	r9, r4
    3858:	beq	3904 <log_oom_internal@plt+0x1898>
    385c:	ldr	r2, [pc, #372]	; 39d8 <log_oom_internal@plt+0x196c>
    3860:	ldr	r3, [pc, #372]	; 39dc <log_oom_internal@plt+0x1970>
    3864:	ldr	r0, [r7, #4]
    3868:	ldr	ip, [r5, #4]!
    386c:	ldr	lr, [sp, #36]	; 0x24
    3870:	add	r2, pc, r2
    3874:	add	r3, pc, r3
    3878:	mov	r1, #1
    387c:	mov	r6, #0
    3880:	str	r0, [sp, #16]
    3884:	str	r2, [sp, #12]
    3888:	str	r3, [sp]
    388c:	str	r1, [sp, #24]
    3890:	str	lr, [sp, #4]
    3894:	str	ip, [sp, #20]
    3898:	str	r6, [sp, #8]
    389c:	mov	r3, fp
    38a0:	ldr	r2, [sp, #40]	; 0x28
    38a4:	mov	r1, r8
    38a8:	mov	r0, sl
    38ac:	bl	1f7c <sd_bus_call_method@plt>
    38b0:	cmp	r0, #0
    38b4:	bge	3850 <log_oom_internal@plt+0x17e4>
    38b8:	str	r0, [sp, #40]	; 0x28
    38bc:	mov	r0, r6
    38c0:	bl	1cb8 <log_get_max_level_realm@plt>
    38c4:	ldr	r3, [sp, #40]	; 0x28
    38c8:	rsb	r1, r3, #0
    38cc:	cmp	r0, #2
    38d0:	uxtble	r1, r1
    38d4:	rsble	r4, r1, #0
    38d8:	bgt	390c <log_oom_internal@plt+0x18a0>
    38dc:	ldr	r0, [sp, #36]	; 0x24
    38e0:	bl	1d18 <sd_bus_error_free@plt>
    38e4:	ldr	r3, [sp, #44]	; 0x2c
    38e8:	ldr	r2, [sp, #60]	; 0x3c
    38ec:	mov	r0, r4
    38f0:	ldr	r3, [r3]
    38f4:	cmp	r2, r3
    38f8:	bne	39b8 <log_oom_internal@plt+0x194c>
    38fc:	add	sp, sp, #68	; 0x44
    3900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3904:	mov	r4, #0
    3908:	b	38dc <log_oom_internal@plt+0x1870>
    390c:	ldr	r0, [sp, #36]	; 0x24
    3910:	bl	1f40 <bus_error_message@plt>
    3914:	ldr	r2, [pc, #196]	; 39e0 <log_oom_internal@plt+0x1974>
    3918:	ldr	ip, [pc, #196]	; 39e4 <log_oom_internal@plt+0x1978>
    391c:	add	r2, pc, r2
    3920:	add	r2, r2, #128	; 0x80
    3924:	ldr	r3, [sp, #40]	; 0x28
    3928:	str	r2, [sp]
    392c:	ldr	r2, [pc, #180]	; 39e8 <log_oom_internal@plt+0x197c>
    3930:	add	ip, pc, ip
    3934:	mov	r1, r3
    3938:	str	ip, [sp, #4]
    393c:	ldr	r3, [pc, #168]	; 39ec <log_oom_internal@plt+0x1980>
    3940:	add	r2, pc, r2
    3944:	str	r0, [sp, #8]
    3948:	mov	r0, #3
    394c:	bl	1fac <log_internal_realm@plt>
    3950:	mov	r4, r0
    3954:	b	38dc <log_oom_internal@plt+0x1870>
    3958:	ldr	r3, [pc, #144]	; 39f0 <log_oom_internal@plt+0x1984>
    395c:	ldr	r2, [pc, #144]	; 39f4 <log_oom_internal@plt+0x1988>
    3960:	add	r3, pc, r3
    3964:	ldr	r1, [pc, #140]	; 39f8 <log_oom_internal@plt+0x198c>
    3968:	add	r3, r3, #120	; 0x78
    396c:	str	r3, [sp]
    3970:	mov	r0, sl
    3974:	ldr	r3, [pc, #128]	; 39fc <log_oom_internal@plt+0x1990>
    3978:	add	r2, pc, r2
    397c:	add	r1, pc, r1
    3980:	bl	1fa0 <log_assert_failed_realm@plt>
    3984:	bl	1e14 <polkit_agent_open@plt>
    3988:	b	3810 <log_oom_internal@plt+0x17a4>
    398c:	ldr	r3, [pc, #108]	; 3a00 <log_oom_internal@plt+0x1994>
    3990:	mov	r0, r1
    3994:	add	r3, pc, r3
    3998:	ldr	r2, [pc, #100]	; 3a04 <log_oom_internal@plt+0x1998>
    399c:	ldr	r1, [pc, #100]	; 3a08 <log_oom_internal@plt+0x199c>
    39a0:	add	r3, r3, #120	; 0x78
    39a4:	str	r3, [sp]
    39a8:	add	r2, pc, r2
    39ac:	ldr	r3, [pc, #88]	; 3a0c <log_oom_internal@plt+0x19a0>
    39b0:	add	r1, pc, r1
    39b4:	bl	1fa0 <log_assert_failed_realm@plt>
    39b8:	bl	1dcc <__stack_chk_fail@plt>
    39bc:	andeq	r6, r1, ip, ror #12
    39c0:			; <UNDEFINED> instruction: 0x000001bc
    39c4:	andeq	r6, r1, r0, lsl r8
    39c8:	andeq	r6, r1, r8, lsr r8
    39cc:	andeq	r5, r0, r0, lsl #2
    39d0:	ldrdeq	r5, [r0], -r0
    39d4:	andeq	r5, r0, r4, lsl #2
    39d8:	muleq	r0, r4, r1
    39dc:	muleq	r0, r4, r1
    39e0:	andeq	r4, r0, r8, asr #4
    39e4:	andeq	r5, r0, r8, ror #1
    39e8:	andeq	r4, r0, r0, ror r5
    39ec:			; <UNDEFINED> instruction: 0x000004b9
    39f0:	andeq	r4, r0, r4, lsl #4
    39f4:	andeq	r4, r0, r8, lsr r5
    39f8:	andeq	r4, r0, r0, lsl #31
    39fc:	andeq	r0, r0, r8, lsr #9
    3a00:	ldrdeq	r4, [r0], -r0
    3a04:	andeq	r4, r0, r8, lsl #10
    3a08:	andeq	r4, r0, r0, asr pc
    3a0c:	andeq	r0, r0, r9, lsr #9
    3a10:	ldr	r3, [pc, #596]	; 3c6c <log_oom_internal@plt+0x1c00>
    3a14:	ldr	ip, [pc, #596]	; 3c70 <log_oom_internal@plt+0x1c04>
    3a18:	add	r3, pc, r3
    3a1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3a20:	subs	r9, r2, #0
    3a24:	ldr	r2, [r3, ip]
    3a28:	mov	r8, r0
    3a2c:	mov	r0, r2
    3a30:	sub	sp, sp, #68	; 0x44
    3a34:	ldr	r3, [r0]
    3a38:	str	r2, [sp, #40]	; 0x28
    3a3c:	mov	r2, #0
    3a40:	str	r2, [sp, #48]	; 0x30
    3a44:	str	r3, [sp, #60]	; 0x3c
    3a48:	str	r2, [sp, #52]	; 0x34
    3a4c:	str	r2, [sp, #56]	; 0x38
    3a50:	beq	3c00 <log_oom_internal@plt+0x1b94>
    3a54:	cmp	r1, #0
    3a58:	beq	3c3c <log_oom_internal@plt+0x1bd0>
    3a5c:	ldr	r3, [pc, #528]	; 3c74 <log_oom_internal@plt+0x1c08>
    3a60:	ldr	r2, [pc, #528]	; 3c78 <log_oom_internal@plt+0x1c0c>
    3a64:	add	r3, pc, r3
    3a68:	add	r2, pc, r2
    3a6c:	ldrb	r3, [r3]
    3a70:	ldr	r2, [r2, #4]
    3a74:	cmp	r2, #0
    3a78:	movne	r3, #0
    3a7c:	andeq	r3, r3, #1
    3a80:	cmp	r3, #0
    3a84:	bne	3c2c <log_oom_internal@plt+0x1bc0>
    3a88:	ldr	r3, [pc, #492]	; 3c7c <log_oom_internal@plt+0x1c10>
    3a8c:	add	r3, pc, r3
    3a90:	ldr	r2, [r3, #8]
    3a94:	cmp	r2, #0
    3a98:	beq	3ba4 <log_oom_internal@plt+0x1b38>
    3a9c:	cmp	r8, #1
    3aa0:	addle	r3, sp, #48	; 0x30
    3aa4:	strle	r3, [sp, #36]	; 0x24
    3aa8:	ble	3b9c <log_oom_internal@plt+0x1b30>
    3aac:	ldr	fp, [pc, #460]	; 3c80 <log_oom_internal@plt+0x1c14>
    3ab0:	ldr	sl, [pc, #460]	; 3c84 <log_oom_internal@plt+0x1c18>
    3ab4:	ldr	r7, [pc, #460]	; 3c88 <log_oom_internal@plt+0x1c1c>
    3ab8:	add	r3, sp, #48	; 0x30
    3abc:	add	fp, pc, fp
    3ac0:	add	sl, pc, sl
    3ac4:	add	r7, pc, r7
    3ac8:	mov	r5, r1
    3acc:	str	r3, [sp, #36]	; 0x24
    3ad0:	mov	r4, #1
    3ad4:	b	3ae4 <log_oom_internal@plt+0x1a78>
    3ad8:	add	r4, r4, #1
    3adc:	cmp	r8, r4
    3ae0:	beq	3b9c <log_oom_internal@plt+0x1b30>
    3ae4:	ldr	r2, [pc, #416]	; 3c8c <log_oom_internal@plt+0x1c20>
    3ae8:	ldr	r3, [pc, #416]	; 3c90 <log_oom_internal@plt+0x1c24>
    3aec:	add	r2, pc, r2
    3af0:	add	r3, pc, r3
    3af4:	ldr	r0, [r2, #4]
    3af8:	ldr	ip, [r3, #8]
    3afc:	ldr	r2, [pc, #400]	; 3c94 <log_oom_internal@plt+0x1c28>
    3b00:	ldr	r3, [pc, #400]	; 3c98 <log_oom_internal@plt+0x1c2c>
    3b04:	ldr	r1, [r5, #4]!
    3b08:	ldr	lr, [sp, #36]	; 0x24
    3b0c:	add	r2, pc, r2
    3b10:	add	r3, pc, r3
    3b14:	mov	r6, #0
    3b18:	str	r0, [sp, #24]
    3b1c:	str	r1, [sp, #16]
    3b20:	str	r2, [sp, #12]
    3b24:	str	r3, [sp]
    3b28:	str	lr, [sp, #4]
    3b2c:	str	ip, [sp, #20]
    3b30:	str	r6, [sp, #8]
    3b34:	mov	r3, fp
    3b38:	mov	r2, sl
    3b3c:	mov	r1, r7
    3b40:	mov	r0, r9
    3b44:	bl	1f7c <sd_bus_call_method@plt>
    3b48:	cmp	r0, #0
    3b4c:	bge	3ad8 <log_oom_internal@plt+0x1a6c>
    3b50:	str	r0, [sp, #44]	; 0x2c
    3b54:	mov	r0, r6
    3b58:	bl	1cb8 <log_get_max_level_realm@plt>
    3b5c:	ldr	r3, [sp, #44]	; 0x2c
    3b60:	rsb	r1, r3, #0
    3b64:	cmp	r0, #2
    3b68:	uxtble	r1, r1
    3b6c:	rsble	r4, r1, #0
    3b70:	bgt	3bb4 <log_oom_internal@plt+0x1b48>
    3b74:	ldr	r0, [sp, #36]	; 0x24
    3b78:	bl	1d18 <sd_bus_error_free@plt>
    3b7c:	ldr	r3, [sp, #40]	; 0x28
    3b80:	ldr	r2, [sp, #60]	; 0x3c
    3b84:	mov	r0, r4
    3b88:	ldr	r3, [r3]
    3b8c:	cmp	r2, r3
    3b90:	bne	3c68 <log_oom_internal@plt+0x1bfc>
    3b94:	add	sp, sp, #68	; 0x44
    3b98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3b9c:	mov	r4, #0
    3ba0:	b	3b74 <log_oom_internal@plt+0x1b08>
    3ba4:	ldr	r2, [pc, #240]	; 3c9c <log_oom_internal@plt+0x1c30>
    3ba8:	add	r2, pc, r2
    3bac:	str	r2, [r3, #8]
    3bb0:	b	3a9c <log_oom_internal@plt+0x1a30>
    3bb4:	ldr	r0, [sp, #36]	; 0x24
    3bb8:	bl	1f40 <bus_error_message@plt>
    3bbc:	ldr	r2, [pc, #220]	; 3ca0 <log_oom_internal@plt+0x1c34>
    3bc0:	ldr	ip, [pc, #220]	; 3ca4 <log_oom_internal@plt+0x1c38>
    3bc4:	add	r2, pc, r2
    3bc8:	add	r2, r2, #152	; 0x98
    3bcc:	ldr	r3, [sp, #44]	; 0x2c
    3bd0:	str	r2, [sp]
    3bd4:	ldr	r2, [pc, #204]	; 3ca8 <log_oom_internal@plt+0x1c3c>
    3bd8:	add	ip, pc, ip
    3bdc:	mov	r1, r3
    3be0:	str	ip, [sp, #4]
    3be4:	ldr	r3, [pc, #192]	; 3cac <log_oom_internal@plt+0x1c40>
    3be8:	add	r2, pc, r2
    3bec:	str	r0, [sp, #8]
    3bf0:	mov	r0, #3
    3bf4:	bl	1fac <log_internal_realm@plt>
    3bf8:	mov	r4, r0
    3bfc:	b	3b74 <log_oom_internal@plt+0x1b08>
    3c00:	ldr	r3, [pc, #168]	; 3cb0 <log_oom_internal@plt+0x1c44>
    3c04:	ldr	r2, [pc, #168]	; 3cb4 <log_oom_internal@plt+0x1c48>
    3c08:	add	r3, pc, r3
    3c0c:	ldr	r1, [pc, #164]	; 3cb8 <log_oom_internal@plt+0x1c4c>
    3c10:	add	r3, r3, #136	; 0x88
    3c14:	str	r3, [sp]
    3c18:	mov	r0, r9
    3c1c:	ldr	r3, [pc, #152]	; 3cbc <log_oom_internal@plt+0x1c50>
    3c20:	add	r2, pc, r2
    3c24:	add	r1, pc, r1
    3c28:	bl	1fa0 <log_assert_failed_realm@plt>
    3c2c:	str	r1, [sp, #36]	; 0x24
    3c30:	bl	1e14 <polkit_agent_open@plt>
    3c34:	ldr	r1, [sp, #36]	; 0x24
    3c38:	b	3a88 <log_oom_internal@plt+0x1a1c>
    3c3c:	ldr	r3, [pc, #124]	; 3cc0 <log_oom_internal@plt+0x1c54>
    3c40:	mov	r0, r1
    3c44:	add	r3, pc, r3
    3c48:	ldr	r2, [pc, #116]	; 3cc4 <log_oom_internal@plt+0x1c58>
    3c4c:	ldr	r1, [pc, #116]	; 3cc8 <log_oom_internal@plt+0x1c5c>
    3c50:	add	r3, r3, #136	; 0x88
    3c54:	str	r3, [sp]
    3c58:	add	r2, pc, r2
    3c5c:	ldr	r3, [pc, #104]	; 3ccc <log_oom_internal@plt+0x1c60>
    3c60:	add	r1, pc, r1
    3c64:	bl	1fa0 <log_assert_failed_realm@plt>
    3c68:	bl	1dcc <__stack_chk_fail@plt>
    3c6c:	strdeq	r6, [r1], -r0
    3c70:			; <UNDEFINED> instruction: 0x000001bc
    3c74:	muleq	r1, r8, r5
    3c78:	andeq	r6, r1, r0, asr #11
    3c7c:	muleq	r1, ip, r5
    3c80:	andeq	r4, r0, ip, asr #28
    3c84:	andeq	r4, r0, r8, ror #28
    3c88:	andeq	r4, r0, ip, ror lr
    3c8c:	andeq	r6, r1, r0, lsl r5
    3c90:	andeq	r6, r1, r8, lsr r5
    3c94:	andeq	r4, r0, ip, lsr #30
    3c98:	andeq	r4, r0, ip, lsr #30
    3c9c:	andeq	r4, r0, ip, lsl #29
    3ca0:	andeq	r3, r0, r0, lsr #31
    3ca4:	andeq	r4, r0, r0, ror lr
    3ca8:	andeq	r4, r0, r8, asr #5
    3cac:	andeq	r0, r0, r7, lsr #8
    3cb0:	andeq	r3, r0, ip, asr pc
    3cb4:	muleq	r0, r0, r2
    3cb8:	ldrdeq	r4, [r0], -r8
    3cbc:	andeq	r0, r0, r4, lsl r4
    3cc0:	andeq	r3, r0, r0, lsr #30
    3cc4:	andeq	r4, r0, r8, asr r2
    3cc8:	andeq	r4, r0, r0, lsr #25
    3ccc:	andeq	r0, r0, r5, lsl r4
    3cd0:	ldr	r3, [pc, #720]	; 3fa8 <log_oom_internal@plt+0x1f3c>
    3cd4:	ldr	ip, [pc, #720]	; 3fac <log_oom_internal@plt+0x1f40>
    3cd8:	add	r3, pc, r3
    3cdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3ce0:	subs	r9, r2, #0
    3ce4:	ldr	r2, [r3, ip]
    3ce8:	mov	r8, r0
    3cec:	mov	r0, r2
    3cf0:	sub	sp, sp, #68	; 0x44
    3cf4:	ldr	r3, [r0]
    3cf8:	str	r2, [sp, #36]	; 0x24
    3cfc:	mov	r2, #0
    3d00:	str	r2, [sp, #48]	; 0x30
    3d04:	str	r3, [sp, #60]	; 0x3c
    3d08:	str	r2, [sp, #52]	; 0x34
    3d0c:	str	r2, [sp, #56]	; 0x38
    3d10:	beq	3f3c <log_oom_internal@plt+0x1ed0>
    3d14:	cmp	r1, #0
    3d18:	beq	3f78 <log_oom_internal@plt+0x1f0c>
    3d1c:	ldr	r3, [pc, #652]	; 3fb0 <log_oom_internal@plt+0x1f44>
    3d20:	ldr	r2, [pc, #652]	; 3fb4 <log_oom_internal@plt+0x1f48>
    3d24:	add	r3, pc, r3
    3d28:	add	r2, pc, r2
    3d2c:	ldrb	r3, [r3]
    3d30:	ldr	r2, [r2, #4]
    3d34:	cmp	r2, #0
    3d38:	movne	r3, #0
    3d3c:	andeq	r3, r3, #1
    3d40:	cmp	r3, #0
    3d44:	bne	3f68 <log_oom_internal@plt+0x1efc>
    3d48:	ldr	r3, [pc, #616]	; 3fb8 <log_oom_internal@plt+0x1f4c>
    3d4c:	add	r3, pc, r3
    3d50:	ldr	r2, [r3, #8]
    3d54:	cmp	r2, #0
    3d58:	beq	3eec <log_oom_internal@plt+0x1e80>
    3d5c:	cmp	r8, #1
    3d60:	ble	3e70 <log_oom_internal@plt+0x1e04>
    3d64:	ldr	r3, [pc, #592]	; 3fbc <log_oom_internal@plt+0x1f50>
    3d68:	ldr	fp, [pc, #592]	; 3fc0 <log_oom_internal@plt+0x1f54>
    3d6c:	add	r3, pc, r3
    3d70:	str	r3, [sp, #28]
    3d74:	ldr	r3, [pc, #584]	; 3fc4 <log_oom_internal@plt+0x1f58>
    3d78:	add	fp, pc, fp
    3d7c:	add	r3, pc, r3
    3d80:	str	r3, [sp, #32]
    3d84:	add	r5, r1, #4
    3d88:	mov	r6, #1
    3d8c:	add	sl, sp, #44	; 0x2c
    3d90:	add	r7, sp, #48	; 0x30
    3d94:	b	3dfc <log_oom_internal@plt+0x1d90>
    3d98:	ldr	r3, [pc, #552]	; 3fc8 <log_oom_internal@plt+0x1f5c>
    3d9c:	ldr	r2, [pc, #552]	; 3fcc <log_oom_internal@plt+0x1f60>
    3da0:	add	r3, pc, r3
    3da4:	ldr	r1, [sp, #44]	; 0x2c
    3da8:	ldr	r0, [r3, #4]
    3dac:	ldr	r3, [pc, #540]	; 3fd0 <log_oom_internal@plt+0x1f64>
    3db0:	add	r2, pc, r2
    3db4:	add	r3, pc, r3
    3db8:	str	r0, [sp, #20]
    3dbc:	str	r1, [sp, #16]
    3dc0:	str	r2, [sp, #12]
    3dc4:	str	r3, [sp]
    3dc8:	str	r4, [sp, #8]
    3dcc:	str	r7, [sp, #4]
    3dd0:	mov	r3, fp
    3dd4:	ldr	r2, [sp, #28]
    3dd8:	ldr	r1, [sp, #32]
    3ddc:	mov	r0, r9
    3de0:	bl	1f7c <sd_bus_call_method@plt>
    3de4:	cmp	r0, #0
    3de8:	blt	3e7c <log_oom_internal@plt+0x1e10>
    3dec:	add	r6, r6, #1
    3df0:	cmp	r8, r6
    3df4:	add	r5, r5, #4
    3df8:	beq	3e74 <log_oom_internal@plt+0x1e08>
    3dfc:	mov	r4, #0
    3e00:	str	r4, [sp, #4]
    3e04:	str	r4, [sp]
    3e08:	mov	r3, r4
    3e0c:	mov	r2, r4
    3e10:	mov	r1, sl
    3e14:	mov	r0, r5
    3e18:	bl	1c70 <get_user_creds@plt>
    3e1c:	cmp	r0, #0
    3e20:	bge	3d98 <log_oom_internal@plt+0x1d2c>
    3e24:	str	r0, [sp, #28]
    3e28:	mov	r0, r4
    3e2c:	bl	1cb8 <log_get_max_level_realm@plt>
    3e30:	ldr	r1, [sp, #28]
    3e34:	cmp	r0, #2
    3e38:	rsble	r4, r1, #0
    3e3c:	uxtble	r4, r4
    3e40:	rsble	r4, r4, #0
    3e44:	bgt	3efc <log_oom_internal@plt+0x1e90>
    3e48:	mov	r0, r7
    3e4c:	bl	1d18 <sd_bus_error_free@plt>
    3e50:	ldr	r3, [sp, #36]	; 0x24
    3e54:	ldr	r2, [sp, #60]	; 0x3c
    3e58:	mov	r0, r4
    3e5c:	ldr	r3, [r3]
    3e60:	cmp	r2, r3
    3e64:	bne	3fa4 <log_oom_internal@plt+0x1f38>
    3e68:	add	sp, sp, #68	; 0x44
    3e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3e70:	add	r7, sp, #48	; 0x30
    3e74:	mov	r4, #0
    3e78:	b	3e48 <log_oom_internal@plt+0x1ddc>
    3e7c:	str	r0, [sp, #28]
    3e80:	mov	r0, r4
    3e84:	bl	1cb8 <log_get_max_level_realm@plt>
    3e88:	ldr	r3, [sp, #28]
    3e8c:	rsb	r1, r3, #0
    3e90:	cmp	r0, #2
    3e94:	uxtble	r1, r1
    3e98:	rsble	r4, r1, #0
    3e9c:	ble	3e48 <log_oom_internal@plt+0x1ddc>
    3ea0:	mov	r0, r7
    3ea4:	bl	1f40 <bus_error_message@plt>
    3ea8:	ldr	r2, [pc, #292]	; 3fd4 <log_oom_internal@plt+0x1f68>
    3eac:	ldr	ip, [pc, #292]	; 3fd8 <log_oom_internal@plt+0x1f6c>
    3eb0:	add	r2, pc, r2
    3eb4:	add	r2, r2, #180	; 0xb4
    3eb8:	ldr	r3, [sp, #28]
    3ebc:	str	r2, [sp]
    3ec0:	ldr	r2, [pc, #276]	; 3fdc <log_oom_internal@plt+0x1f70>
    3ec4:	add	ip, pc, ip
    3ec8:	mov	r1, r3
    3ecc:	str	ip, [sp, #4]
    3ed0:	ldr	r3, [pc, #264]	; 3fe0 <log_oom_internal@plt+0x1f74>
    3ed4:	add	r2, pc, r2
    3ed8:	str	r0, [sp, #8]
    3edc:	mov	r0, #3
    3ee0:	bl	1fac <log_internal_realm@plt>
    3ee4:	mov	r4, r0
    3ee8:	b	3e48 <log_oom_internal@plt+0x1ddc>
    3eec:	ldr	r2, [pc, #240]	; 3fe4 <log_oom_internal@plt+0x1f78>
    3ef0:	add	r2, pc, r2
    3ef4:	str	r2, [r3, #8]
    3ef8:	b	3d5c <log_oom_internal@plt+0x1cf0>
    3efc:	ldr	r2, [pc, #228]	; 3fe8 <log_oom_internal@plt+0x1f7c>
    3f00:	ldr	r3, [pc, #228]	; 3fec <log_oom_internal@plt+0x1f80>
    3f04:	add	r2, pc, r2
    3f08:	ldr	r0, [r5]
    3f0c:	add	r3, pc, r3
    3f10:	str	r2, [sp, #4]
    3f14:	ldr	r2, [pc, #212]	; 3ff0 <log_oom_internal@plt+0x1f84>
    3f18:	add	r3, r3, #180	; 0xb4
    3f1c:	str	r0, [sp, #8]
    3f20:	str	r3, [sp]
    3f24:	add	r2, pc, r2
    3f28:	ldr	r3, [pc, #196]	; 3ff4 <log_oom_internal@plt+0x1f88>
    3f2c:	mov	r0, #3
    3f30:	bl	1fac <log_internal_realm@plt>
    3f34:	mov	r4, r0
    3f38:	b	3e48 <log_oom_internal@plt+0x1ddc>
    3f3c:	ldr	r3, [pc, #180]	; 3ff8 <log_oom_internal@plt+0x1f8c>
    3f40:	ldr	r2, [pc, #180]	; 3ffc <log_oom_internal@plt+0x1f90>
    3f44:	add	r3, pc, r3
    3f48:	ldr	r1, [pc, #176]	; 4000 <log_oom_internal@plt+0x1f94>
    3f4c:	add	r3, r3, #168	; 0xa8
    3f50:	str	r3, [sp]
    3f54:	mov	r0, r9
    3f58:	ldr	r3, [pc, #164]	; 4004 <log_oom_internal@plt+0x1f98>
    3f5c:	add	r2, pc, r2
    3f60:	add	r1, pc, r1
    3f64:	bl	1fa0 <log_assert_failed_realm@plt>
    3f68:	str	r1, [sp, #28]
    3f6c:	bl	1e14 <polkit_agent_open@plt>
    3f70:	ldr	r1, [sp, #28]
    3f74:	b	3d48 <log_oom_internal@plt+0x1cdc>
    3f78:	ldr	r3, [pc, #136]	; 4008 <log_oom_internal@plt+0x1f9c>
    3f7c:	mov	r0, r1
    3f80:	add	r3, pc, r3
    3f84:	ldr	r2, [pc, #128]	; 400c <log_oom_internal@plt+0x1fa0>
    3f88:	ldr	r1, [pc, #128]	; 4010 <log_oom_internal@plt+0x1fa4>
    3f8c:	add	r3, r3, #168	; 0xa8
    3f90:	str	r3, [sp]
    3f94:	add	r2, pc, r2
    3f98:	ldr	r3, [pc, #116]	; 4014 <log_oom_internal@plt+0x1fa8>
    3f9c:	add	r1, pc, r1
    3fa0:	bl	1fa0 <log_assert_failed_realm@plt>
    3fa4:	bl	1dcc <__stack_chk_fail@plt>
    3fa8:	andeq	r6, r1, r0, lsr r1
    3fac:			; <UNDEFINED> instruction: 0x000001bc
    3fb0:	ldrdeq	r6, [r1], -r8
    3fb4:	andeq	r6, r1, r0, lsl #6
    3fb8:	ldrdeq	r6, [r1], -ip
    3fbc:			; <UNDEFINED> instruction: 0x00004bbc
    3fc0:	muleq	r0, r0, fp
    3fc4:	andeq	r4, r0, r4, asr #23
    3fc8:	andeq	r6, r1, ip, asr r2
    3fcc:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    3fd0:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    3fd4:			; <UNDEFINED> instruction: 0x00003cb4
    3fd8:	ldrdeq	r4, [r0], -r0
    3fdc:	ldrdeq	r3, [r0], -ip
    3fe0:	muleq	r0, sp, r4
    3fe4:	andeq	r4, r0, r4, asr #22
    3fe8:	andeq	r4, r0, r0, ror #22
    3fec:	andeq	r3, r0, r8, asr ip
    3ff0:	andeq	r3, r0, ip, lsl #31
    3ff4:	muleq	r0, r2, r4
    3ff8:	andeq	r3, r0, r0, lsr #24
    3ffc:	andeq	r3, r0, r4, asr pc
    4000:	muleq	r0, ip, r9
    4004:	andeq	r0, r0, r5, lsl #9
    4008:	andeq	r3, r0, r4, ror #23
    400c:	andeq	r3, r0, ip, lsl pc
    4010:	andeq	r4, r0, r4, ror #18
    4014:	andeq	r0, r0, r6, lsl #9
    4018:	ldr	r3, [pc, #668]	; 42bc <log_oom_internal@plt+0x2250>
    401c:	ldr	ip, [pc, #668]	; 42c0 <log_oom_internal@plt+0x2254>
    4020:	add	r3, pc, r3
    4024:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4028:	subs	r9, r2, #0
    402c:	ldr	r2, [r3, ip]
    4030:	mov	r8, r0
    4034:	mov	r0, r2
    4038:	sub	sp, sp, #68	; 0x44
    403c:	ldr	r3, [r0]
    4040:	str	r2, [sp, #36]	; 0x24
    4044:	mov	r2, #0
    4048:	str	r2, [sp, #48]	; 0x30
    404c:	str	r3, [sp, #60]	; 0x3c
    4050:	str	r2, [sp, #52]	; 0x34
    4054:	str	r2, [sp, #56]	; 0x38
    4058:	beq	4250 <log_oom_internal@plt+0x21e4>
    405c:	cmp	r1, #0
    4060:	beq	428c <log_oom_internal@plt+0x2220>
    4064:	ldr	r3, [pc, #600]	; 42c4 <log_oom_internal@plt+0x2258>
    4068:	ldr	r2, [pc, #600]	; 42c8 <log_oom_internal@plt+0x225c>
    406c:	add	r3, pc, r3
    4070:	add	r2, pc, r2
    4074:	ldrb	r3, [r3]
    4078:	ldr	r2, [r2, #4]
    407c:	cmp	r2, #0
    4080:	movne	r3, #0
    4084:	andeq	r3, r3, #1
    4088:	cmp	r3, #0
    408c:	bne	427c <log_oom_internal@plt+0x2210>
    4090:	cmp	r8, #1
    4094:	ble	4194 <log_oom_internal@plt+0x2128>
    4098:	ldr	r3, [pc, #556]	; 42cc <log_oom_internal@plt+0x2260>
    409c:	ldr	fp, [pc, #556]	; 42d0 <log_oom_internal@plt+0x2264>
    40a0:	add	r3, pc, r3
    40a4:	str	r3, [sp, #28]
    40a8:	ldr	r3, [pc, #548]	; 42d4 <log_oom_internal@plt+0x2268>
    40ac:	add	fp, pc, fp
    40b0:	add	r3, pc, r3
    40b4:	str	r3, [sp, #32]
    40b8:	add	r5, r1, #4
    40bc:	mov	r6, #1
    40c0:	add	sl, sp, #44	; 0x2c
    40c4:	add	r7, sp, #48	; 0x30
    40c8:	b	4120 <log_oom_internal@plt+0x20b4>
    40cc:	ldr	r2, [pc, #516]	; 42d8 <log_oom_internal@plt+0x226c>
    40d0:	ldr	r3, [pc, #516]	; 42dc <log_oom_internal@plt+0x2270>
    40d4:	ldr	r1, [sp, #44]	; 0x2c
    40d8:	add	r2, pc, r2
    40dc:	add	r3, pc, r3
    40e0:	str	r1, [sp, #16]
    40e4:	str	r2, [sp, #12]
    40e8:	str	r3, [sp]
    40ec:	str	r4, [sp, #8]
    40f0:	str	r7, [sp, #4]
    40f4:	mov	r3, fp
    40f8:	ldr	r2, [sp, #28]
    40fc:	ldr	r1, [sp, #32]
    4100:	mov	r0, r9
    4104:	bl	1f7c <sd_bus_call_method@plt>
    4108:	cmp	r0, #0
    410c:	blt	41a0 <log_oom_internal@plt+0x2134>
    4110:	add	r6, r6, #1
    4114:	cmp	r8, r6
    4118:	add	r5, r5, #4
    411c:	beq	4198 <log_oom_internal@plt+0x212c>
    4120:	mov	r4, #0
    4124:	str	r4, [sp, #4]
    4128:	str	r4, [sp]
    412c:	mov	r3, r4
    4130:	mov	r2, r4
    4134:	mov	r1, sl
    4138:	mov	r0, r5
    413c:	bl	1c70 <get_user_creds@plt>
    4140:	cmp	r0, #0
    4144:	bge	40cc <log_oom_internal@plt+0x2060>
    4148:	str	r0, [sp, #28]
    414c:	mov	r0, r4
    4150:	bl	1cb8 <log_get_max_level_realm@plt>
    4154:	ldr	r1, [sp, #28]
    4158:	cmp	r0, #2
    415c:	rsble	r4, r1, #0
    4160:	uxtble	r4, r4
    4164:	rsble	r4, r4, #0
    4168:	bgt	4210 <log_oom_internal@plt+0x21a4>
    416c:	mov	r0, r7
    4170:	bl	1d18 <sd_bus_error_free@plt>
    4174:	ldr	r3, [sp, #36]	; 0x24
    4178:	ldr	r2, [sp, #60]	; 0x3c
    417c:	mov	r0, r4
    4180:	ldr	r3, [r3]
    4184:	cmp	r2, r3
    4188:	bne	42b8 <log_oom_internal@plt+0x224c>
    418c:	add	sp, sp, #68	; 0x44
    4190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4194:	add	r7, sp, #48	; 0x30
    4198:	mov	r4, #0
    419c:	b	416c <log_oom_internal@plt+0x2100>
    41a0:	str	r0, [sp, #28]
    41a4:	mov	r0, r4
    41a8:	bl	1cb8 <log_get_max_level_realm@plt>
    41ac:	ldr	r3, [sp, #28]
    41b0:	rsb	r1, r3, #0
    41b4:	cmp	r0, #2
    41b8:	uxtble	r1, r1
    41bc:	rsble	r4, r1, #0
    41c0:	ble	416c <log_oom_internal@plt+0x2100>
    41c4:	mov	r0, r7
    41c8:	bl	1f40 <bus_error_message@plt>
    41cc:	ldr	r2, [pc, #268]	; 42e0 <log_oom_internal@plt+0x2274>
    41d0:	ldr	ip, [pc, #268]	; 42e4 <log_oom_internal@plt+0x2278>
    41d4:	add	r2, pc, r2
    41d8:	add	r2, r2, #208	; 0xd0
    41dc:	ldr	r3, [sp, #28]
    41e0:	str	r2, [sp]
    41e4:	ldr	r2, [pc, #252]	; 42e8 <log_oom_internal@plt+0x227c>
    41e8:	add	ip, pc, ip
    41ec:	mov	r1, r3
    41f0:	str	ip, [sp, #4]
    41f4:	ldr	r3, [pc, #240]	; 42ec <log_oom_internal@plt+0x2280>
    41f8:	add	r2, pc, r2
    41fc:	str	r0, [sp, #8]
    4200:	mov	r0, #3
    4204:	bl	1fac <log_internal_realm@plt>
    4208:	mov	r4, r0
    420c:	b	416c <log_oom_internal@plt+0x2100>
    4210:	ldr	r2, [pc, #216]	; 42f0 <log_oom_internal@plt+0x2284>
    4214:	ldr	r3, [pc, #216]	; 42f4 <log_oom_internal@plt+0x2288>
    4218:	add	r2, pc, r2
    421c:	ldr	r0, [r5]
    4220:	add	r3, pc, r3
    4224:	str	r2, [sp, #4]
    4228:	ldr	r2, [pc, #200]	; 42f8 <log_oom_internal@plt+0x228c>
    422c:	add	r3, r3, #208	; 0xd0
    4230:	str	r0, [sp, #8]
    4234:	str	r3, [sp]
    4238:	add	r2, pc, r2
    423c:	ldr	r3, [pc, #184]	; 42fc <log_oom_internal@plt+0x2290>
    4240:	mov	r0, #3
    4244:	bl	1fac <log_internal_realm@plt>
    4248:	mov	r4, r0
    424c:	b	416c <log_oom_internal@plt+0x2100>
    4250:	ldr	r3, [pc, #168]	; 4300 <log_oom_internal@plt+0x2294>
    4254:	ldr	r2, [pc, #168]	; 4304 <log_oom_internal@plt+0x2298>
    4258:	add	r3, pc, r3
    425c:	ldr	r1, [pc, #164]	; 4308 <log_oom_internal@plt+0x229c>
    4260:	add	r3, r3, #192	; 0xc0
    4264:	str	r3, [sp]
    4268:	mov	r0, r9
    426c:	ldr	r3, [pc, #152]	; 430c <log_oom_internal@plt+0x22a0>
    4270:	add	r2, pc, r2
    4274:	add	r1, pc, r1
    4278:	bl	1fa0 <log_assert_failed_realm@plt>
    427c:	str	r1, [sp, #28]
    4280:	bl	1e14 <polkit_agent_open@plt>
    4284:	ldr	r1, [sp, #28]
    4288:	b	4090 <log_oom_internal@plt+0x2024>
    428c:	ldr	r3, [pc, #124]	; 4310 <log_oom_internal@plt+0x22a4>
    4290:	mov	r0, r1
    4294:	add	r3, pc, r3
    4298:	ldr	r2, [pc, #116]	; 4314 <log_oom_internal@plt+0x22a8>
    429c:	ldr	r1, [pc, #116]	; 4318 <log_oom_internal@plt+0x22ac>
    42a0:	add	r3, r3, #192	; 0xc0
    42a4:	str	r3, [sp]
    42a8:	add	r2, pc, r2
    42ac:	ldr	r3, [pc, #104]	; 431c <log_oom_internal@plt+0x22b0>
    42b0:	add	r1, pc, r1
    42b4:	bl	1fa0 <log_assert_failed_realm@plt>
    42b8:	bl	1dcc <__stack_chk_fail@plt>
    42bc:	andeq	r5, r1, r8, ror #27
    42c0:			; <UNDEFINED> instruction: 0x000001bc
    42c4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
    42c8:			; <UNDEFINED> instruction: 0x00015fb8
    42cc:	andeq	r4, r0, r8, lsl #17
    42d0:	andeq	r4, r0, ip, asr r8
    42d4:	muleq	r0, r0, r8
    42d8:	andeq	r4, r0, r8, asr lr
    42dc:	ldrdeq	r4, [r0], -r0
    42e0:	muleq	r0, r0, r9
    42e4:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    42e8:			; <UNDEFINED> instruction: 0x00003cb8
    42ec:	andeq	r0, r0, sl, ror r4
    42f0:	andeq	r4, r0, ip, asr #16
    42f4:	andeq	r3, r0, r4, asr #18
    42f8:	andeq	r3, r0, r8, ror ip
    42fc:	andeq	r0, r0, pc, ror #8
    4300:	andeq	r3, r0, ip, lsl #18
    4304:	andeq	r3, r0, r0, asr #24
    4308:	andeq	r4, r0, r8, lsl #13
    430c:	andeq	r0, r0, r5, ror #8
    4310:	ldrdeq	r3, [r0], -r0
    4314:	andeq	r3, r0, r8, lsl #24
    4318:	andeq	r4, r0, r0, asr r6
    431c:	andeq	r0, r0, r6, ror #8
    4320:	ldr	r3, [pc, #756]	; 461c <log_oom_internal@plt+0x25b0>
    4324:	ldr	ip, [pc, #756]	; 4620 <log_oom_internal@plt+0x25b4>
    4328:	add	r3, pc, r3
    432c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4330:	subs	fp, r2, #0
    4334:	ldr	r2, [r3, ip]
    4338:	mov	r9, r0
    433c:	mov	r0, r2
    4340:	sub	sp, sp, #84	; 0x54
    4344:	ldr	r3, [r0]
    4348:	str	r2, [sp, #44]	; 0x2c
    434c:	mov	r2, #0
    4350:	str	r2, [sp, #52]	; 0x34
    4354:	str	r3, [sp, #76]	; 0x4c
    4358:	str	r2, [sp, #56]	; 0x38
    435c:	str	r2, [sp, #60]	; 0x3c
    4360:	beq	45b8 <log_oom_internal@plt+0x254c>
    4364:	cmp	r1, #0
    4368:	mov	r4, r1
    436c:	beq	45ec <log_oom_internal@plt+0x2580>
    4370:	ldr	r3, [pc, #684]	; 4624 <log_oom_internal@plt+0x25b8>
    4374:	ldr	r2, [pc, #684]	; 4628 <log_oom_internal@plt+0x25bc>
    4378:	add	r3, pc, r3
    437c:	add	r2, pc, r2
    4380:	ldrb	r3, [r3]
    4384:	ldr	r2, [r2, #4]
    4388:	cmp	r2, #0
    438c:	movne	r3, #0
    4390:	andeq	r3, r3, #1
    4394:	cmp	r3, #0
    4398:	bne	45e4 <log_oom_internal@plt+0x2578>
    439c:	ldr	r5, [r4]
    43a0:	ldr	r1, [pc, #644]	; 462c <log_oom_internal@plt+0x25c0>
    43a4:	mov	r0, r5
    43a8:	add	r1, pc, r1
    43ac:	bl	1f4c <strcmp@plt>
    43b0:	cmp	r9, #1
    43b4:	clz	r8, r0
    43b8:	lsr	r8, r8, #5
    43bc:	bgt	43e0 <log_oom_internal@plt+0x2374>
    43c0:	ldr	r3, [pc, #616]	; 4630 <log_oom_internal@plt+0x25c4>
    43c4:	add	r4, sp, #64	; 0x40
    43c8:	add	r3, pc, r3
    43cc:	mov	r9, #2
    43d0:	str	r3, [sp, #68]	; 0x44
    43d4:	mov	r3, #0
    43d8:	str	r5, [sp, #64]	; 0x40
    43dc:	str	r3, [sp, #72]	; 0x48
    43e0:	ldr	r3, [pc, #588]	; 4634 <log_oom_internal@plt+0x25c8>
    43e4:	ldr	sl, [pc, #588]	; 4638 <log_oom_internal@plt+0x25cc>
    43e8:	add	r3, pc, r3
    43ec:	str	r3, [sp, #36]	; 0x24
    43f0:	ldr	r3, [pc, #580]	; 463c <log_oom_internal@plt+0x25d0>
    43f4:	add	sl, pc, sl
    43f8:	add	r3, pc, r3
    43fc:	str	r3, [sp, #40]	; 0x28
    4400:	add	r3, sp, #52	; 0x34
    4404:	add	r4, r4, #4
    4408:	str	r3, [sp, #32]
    440c:	mov	r5, #1
    4410:	b	44a0 <log_oom_internal@plt+0x2434>
    4414:	mov	r6, #0
    4418:	str	r6, [sp, #4]
    441c:	str	r6, [sp]
    4420:	mov	r3, r6
    4424:	mov	r2, r6
    4428:	add	r1, sp, #48	; 0x30
    442c:	mov	r0, r7
    4430:	bl	1c70 <get_user_creds@plt>
    4434:	cmp	r0, #0
    4438:	blt	4554 <log_oom_internal@plt+0x24e8>
    443c:	ldr	r3, [sp, #48]	; 0x30
    4440:	ldr	r1, [pc, #504]	; 4640 <log_oom_internal@plt+0x25d4>
    4444:	ldr	r2, [pc, #504]	; 4644 <log_oom_internal@plt+0x25d8>
    4448:	str	r3, [sp, #16]
    444c:	ldr	r3, [sp, #32]
    4450:	add	r1, pc, r1
    4454:	add	r2, pc, r2
    4458:	mov	r0, #1
    445c:	mov	r6, #0
    4460:	str	r3, [sp, #4]
    4464:	str	r1, [sp, #12]
    4468:	str	r2, [sp]
    446c:	str	r0, [sp, #24]
    4470:	str	r8, [sp, #20]
    4474:	str	r6, [sp, #8]
    4478:	ldr	r3, [sp, #36]	; 0x24
    447c:	ldr	r2, [sp, #40]	; 0x28
    4480:	mov	r1, sl
    4484:	mov	r0, fp
    4488:	bl	1f7c <sd_bus_call_method@plt>
    448c:	cmp	r0, #0
    4490:	blt	44c8 <log_oom_internal@plt+0x245c>
    4494:	add	r5, r5, #1
    4498:	cmp	r9, r5
    449c:	beq	452c <log_oom_internal@plt+0x24c0>
    44a0:	mov	r7, r4
    44a4:	ldr	r3, [r4], #4
    44a8:	cmp	r3, #0
    44ac:	beq	44bc <log_oom_internal@plt+0x2450>
    44b0:	ldrb	r3, [r3]
    44b4:	cmp	r3, #0
    44b8:	bne	4414 <log_oom_internal@plt+0x23a8>
    44bc:	mvn	r3, #0
    44c0:	str	r3, [sp, #48]	; 0x30
    44c4:	b	4440 <log_oom_internal@plt+0x23d4>
    44c8:	mov	r7, r0
    44cc:	mov	r0, r6
    44d0:	bl	1cb8 <log_get_max_level_realm@plt>
    44d4:	rsb	r1, r7, #0
    44d8:	cmp	r0, #2
    44dc:	uxtble	r6, r1
    44e0:	rsble	r6, r6, #0
    44e4:	ble	452c <log_oom_internal@plt+0x24c0>
    44e8:	ldr	r0, [sp, #32]
    44ec:	bl	1f40 <bus_error_message@plt>
    44f0:	ldr	r2, [pc, #336]	; 4648 <log_oom_internal@plt+0x25dc>
    44f4:	ldr	r3, [pc, #336]	; 464c <log_oom_internal@plt+0x25e0>
    44f8:	add	r2, pc, r2
    44fc:	str	r2, [sp, #4]
    4500:	add	r3, pc, r3
    4504:	ldr	r2, [pc, #324]	; 4650 <log_oom_internal@plt+0x25e4>
    4508:	add	r3, r3, #240	; 0xf0
    450c:	str	r3, [sp]
    4510:	mov	r1, r7
    4514:	ldr	r3, [pc, #312]	; 4654 <log_oom_internal@plt+0x25e8>
    4518:	add	r2, pc, r2
    451c:	str	r0, [sp, #8]
    4520:	mov	r0, #3
    4524:	bl	1fac <log_internal_realm@plt>
    4528:	mov	r6, r0
    452c:	ldr	r0, [sp, #32]
    4530:	bl	1d18 <sd_bus_error_free@plt>
    4534:	ldr	r3, [sp, #44]	; 0x2c
    4538:	ldr	r2, [sp, #76]	; 0x4c
    453c:	mov	r0, r6
    4540:	ldr	r3, [r3]
    4544:	cmp	r2, r3
    4548:	bne	4618 <log_oom_internal@plt+0x25ac>
    454c:	add	sp, sp, #84	; 0x54
    4550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4554:	str	r0, [sp, #36]	; 0x24
    4558:	mov	r0, r6
    455c:	bl	1cb8 <log_get_max_level_realm@plt>
    4560:	ldr	r1, [sp, #36]	; 0x24
    4564:	cmp	r0, #2
    4568:	rsble	r6, r1, #0
    456c:	uxtble	r6, r6
    4570:	rsble	r6, r6, #0
    4574:	ble	452c <log_oom_internal@plt+0x24c0>
    4578:	ldr	r2, [pc, #216]	; 4658 <log_oom_internal@plt+0x25ec>
    457c:	ldr	r3, [pc, #216]	; 465c <log_oom_internal@plt+0x25f0>
    4580:	add	r2, pc, r2
    4584:	ldr	r0, [r7]
    4588:	add	r3, pc, r3
    458c:	str	r2, [sp, #4]
    4590:	ldr	r2, [pc, #200]	; 4660 <log_oom_internal@plt+0x25f4>
    4594:	add	r3, r3, #240	; 0xf0
    4598:	str	r0, [sp, #8]
    459c:	str	r3, [sp]
    45a0:	add	r2, pc, r2
    45a4:	ldr	r3, [pc, #184]	; 4664 <log_oom_internal@plt+0x25f8>
    45a8:	mov	r0, #3
    45ac:	bl	1fac <log_internal_realm@plt>
    45b0:	mov	r6, r0
    45b4:	b	452c <log_oom_internal@plt+0x24c0>
    45b8:	ldr	r3, [pc, #168]	; 4668 <log_oom_internal@plt+0x25fc>
    45bc:	ldr	r2, [pc, #168]	; 466c <log_oom_internal@plt+0x2600>
    45c0:	add	r3, pc, r3
    45c4:	ldr	r1, [pc, #164]	; 4670 <log_oom_internal@plt+0x2604>
    45c8:	add	r3, r3, #224	; 0xe0
    45cc:	str	r3, [sp]
    45d0:	mov	r0, fp
    45d4:	ldr	r3, [pc, #152]	; 4674 <log_oom_internal@plt+0x2608>
    45d8:	add	r2, pc, r2
    45dc:	add	r1, pc, r1
    45e0:	bl	1fa0 <log_assert_failed_realm@plt>
    45e4:	bl	1e14 <polkit_agent_open@plt>
    45e8:	b	439c <log_oom_internal@plt+0x2330>
    45ec:	ldr	r3, [pc, #132]	; 4678 <log_oom_internal@plt+0x260c>
    45f0:	mov	r0, r1
    45f4:	add	r3, pc, r3
    45f8:	ldr	r2, [pc, #124]	; 467c <log_oom_internal@plt+0x2610>
    45fc:	ldr	r1, [pc, #124]	; 4680 <log_oom_internal@plt+0x2614>
    4600:	add	r3, r3, #224	; 0xe0
    4604:	str	r3, [sp]
    4608:	add	r2, pc, r2
    460c:	ldr	r3, [pc, #112]	; 4684 <log_oom_internal@plt+0x2618>
    4610:	add	r1, pc, r1
    4614:	bl	1fa0 <log_assert_failed_realm@plt>
    4618:	bl	1dcc <__stack_chk_fail@plt>
    461c:	andeq	r5, r1, r0, ror #21
    4620:			; <UNDEFINED> instruction: 0x000001bc
    4624:	andeq	r5, r1, r4, lsl #25
    4628:	andeq	r5, r1, ip, lsr #25
    462c:	andeq	r4, r0, r4, lsr r7
    4630:	andeq	r4, r0, ip, lsr #21
    4634:	andeq	r4, r0, r0, lsr #10
    4638:	andeq	r4, r0, ip, asr #10
    463c:	andeq	r4, r0, r0, lsr r5
    4640:	muleq	r0, ip, r6
    4644:	muleq	r0, ip, r6
    4648:	andeq	r4, r0, r8, lsl #12
    464c:	andeq	r3, r0, r4, ror #12
    4650:	muleq	r0, r8, r9
    4654:	andeq	r0, r0, sl, asr r4
    4658:	andeq	r4, r0, r4, ror #9
    465c:	ldrdeq	r3, [r0], -ip
    4660:	andeq	r3, r0, r0, lsl r9
    4664:	andeq	r0, r0, lr, asr #8
    4668:	andeq	r3, r0, r4, lsr #11
    466c:	ldrdeq	r3, [r0], -r8
    4670:	andeq	r4, r0, r0, lsr #6
    4674:	andeq	r0, r0, r4, lsr r4
    4678:	andeq	r3, r0, r0, ror r5
    467c:	andeq	r3, r0, r8, lsr #17
    4680:	strdeq	r4, [r0], -r0
    4684:	andeq	r0, r0, r5, lsr r4
    4688:	ldr	r3, [pc, #664]	; 4928 <log_oom_internal@plt+0x28bc>
    468c:	ldr	ip, [pc, #664]	; 492c <log_oom_internal@plt+0x28c0>
    4690:	add	r3, pc, r3
    4694:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4698:	subs	r9, r2, #0
    469c:	ldr	r2, [r3, ip]
    46a0:	mov	r8, r0
    46a4:	mov	r0, r2
    46a8:	sub	sp, sp, #68	; 0x44
    46ac:	ldr	r3, [r0]
    46b0:	str	r2, [sp, #28]
    46b4:	mov	r2, #0
    46b8:	str	r2, [sp, #36]	; 0x24
    46bc:	str	r3, [sp, #60]	; 0x3c
    46c0:	str	r2, [sp, #40]	; 0x28
    46c4:	str	r2, [sp, #44]	; 0x2c
    46c8:	beq	48b8 <log_oom_internal@plt+0x284c>
    46cc:	cmp	r1, #0
    46d0:	mov	r6, r1
    46d4:	beq	48ec <log_oom_internal@plt+0x2880>
    46d8:	ldr	r3, [pc, #592]	; 4930 <log_oom_internal@plt+0x28c4>
    46dc:	ldr	r2, [pc, #592]	; 4934 <log_oom_internal@plt+0x28c8>
    46e0:	add	r3, pc, r3
    46e4:	add	r2, pc, r2
    46e8:	ldrb	r3, [r3]
    46ec:	ldr	r2, [r2, #4]
    46f0:	cmp	r2, #0
    46f4:	movne	r3, #0
    46f8:	andeq	r3, r3, #1
    46fc:	cmp	r3, #0
    4700:	bne	48e4 <log_oom_internal@plt+0x2878>
    4704:	cmp	r8, #1
    4708:	ldr	r5, [r6]
    470c:	ble	4888 <log_oom_internal@plt+0x281c>
    4710:	ldr	r3, [pc, #544]	; 4938 <log_oom_internal@plt+0x28cc>
    4714:	ldr	sl, [pc, #544]	; 493c <log_oom_internal@plt+0x28d0>
    4718:	ldr	fp, [pc, #544]	; 4940 <log_oom_internal@plt+0x28d4>
    471c:	add	r3, pc, r3
    4720:	add	sl, pc, sl
    4724:	add	fp, pc, fp
    4728:	str	r3, [sp, #24]
    472c:	mov	r4, #1
    4730:	add	r7, sp, #36	; 0x24
    4734:	b	47b0 <log_oom_internal@plt+0x2744>
    4738:	ldr	r1, [pc, #516]	; 4944 <log_oom_internal@plt+0x28d8>
    473c:	mov	r0, r5
    4740:	add	r1, pc, r1
    4744:	bl	1f4c <strcmp@plt>
    4748:	cmp	r0, #0
    474c:	bne	487c <log_oom_internal@plt+0x2810>
    4750:	ldr	r1, [pc, #496]	; 4948 <log_oom_internal@plt+0x28dc>
    4754:	add	r1, pc, r1
    4758:	ldr	r3, [pc, #492]	; 494c <log_oom_internal@plt+0x28e0>
    475c:	ldr	r2, [r6, r4, lsl #2]
    4760:	add	r3, pc, r3
    4764:	str	r2, [sp, #16]
    4768:	stm	sp, {r1, r7}
    476c:	str	r3, [sp, #12]
    4770:	ldr	r2, [pc, #472]	; 4950 <log_oom_internal@plt+0x28e4>
    4774:	ldr	r3, [pc, #472]	; 4954 <log_oom_internal@plt+0x28e8>
    4778:	ldr	r1, [pc, #472]	; 4958 <log_oom_internal@plt+0x28ec>
    477c:	mov	r5, #0
    4780:	str	r5, [sp, #8]
    4784:	add	r3, pc, r3
    4788:	add	r2, pc, r2
    478c:	add	r1, pc, r1
    4790:	mov	r0, r9
    4794:	bl	1f7c <sd_bus_call_method@plt>
    4798:	cmp	r0, #0
    479c:	blt	47e8 <log_oom_internal@plt+0x277c>
    47a0:	add	r4, r4, #1
    47a4:	cmp	r8, r4
    47a8:	beq	4854 <log_oom_internal@plt+0x27e8>
    47ac:	ldr	r5, [r6]
    47b0:	mov	r1, sl
    47b4:	mov	r0, r5
    47b8:	bl	1f4c <strcmp@plt>
    47bc:	cmp	r0, #0
    47c0:	moveq	r1, fp
    47c4:	beq	4758 <log_oom_internal@plt+0x26ec>
    47c8:	ldr	r1, [sp, #24]
    47cc:	mov	r0, r5
    47d0:	bl	1f4c <strcmp@plt>
    47d4:	cmp	r0, #0
    47d8:	bne	4738 <log_oom_internal@plt+0x26cc>
    47dc:	ldr	r1, [pc, #376]	; 495c <log_oom_internal@plt+0x28f0>
    47e0:	add	r1, pc, r1
    47e4:	b	4758 <log_oom_internal@plt+0x26ec>
    47e8:	str	r0, [sp, #24]
    47ec:	mov	r0, r5
    47f0:	bl	1cb8 <log_get_max_level_realm@plt>
    47f4:	ldr	r3, [sp, #24]
    47f8:	rsb	r1, r3, #0
    47fc:	cmp	r0, #2
    4800:	uxtble	r5, r1
    4804:	rsble	r5, r5, #0
    4808:	ble	4854 <log_oom_internal@plt+0x27e8>
    480c:	mov	r0, r7
    4810:	bl	1f40 <bus_error_message@plt>
    4814:	ldr	r2, [pc, #324]	; 4960 <log_oom_internal@plt+0x28f4>
    4818:	ldr	ip, [pc, #324]	; 4964 <log_oom_internal@plt+0x28f8>
    481c:	add	r2, pc, r2
    4820:	add	r2, r2, #268	; 0x10c
    4824:	ldr	r3, [sp, #24]
    4828:	str	r2, [sp]
    482c:	ldr	r2, [pc, #308]	; 4968 <log_oom_internal@plt+0x28fc>
    4830:	add	ip, pc, ip
    4834:	mov	r1, r3
    4838:	str	ip, [sp, #4]
    483c:	ldr	r3, [pc, #296]	; 496c <log_oom_internal@plt+0x2900>
    4840:	add	r2, pc, r2
    4844:	str	r0, [sp, #8]
    4848:	mov	r0, #3
    484c:	bl	1fac <log_internal_realm@plt>
    4850:	mov	r5, r0
    4854:	mov	r0, r7
    4858:	bl	1d18 <sd_bus_error_free@plt>
    485c:	ldr	r3, [sp, #28]
    4860:	ldr	r2, [sp, #60]	; 0x3c
    4864:	mov	r0, r5
    4868:	ldr	r3, [r3]
    486c:	cmp	r2, r3
    4870:	bne	4924 <log_oom_internal@plt+0x28b8>
    4874:	add	sp, sp, #68	; 0x44
    4878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    487c:	ldr	r1, [pc, #236]	; 4970 <log_oom_internal@plt+0x2904>
    4880:	add	r1, pc, r1
    4884:	b	4758 <log_oom_internal@plt+0x26ec>
    4888:	ldr	r0, [pc, #228]	; 4974 <log_oom_internal@plt+0x2908>
    488c:	str	r5, [sp, #48]	; 0x30
    4890:	add	r0, pc, r0
    4894:	bl	1fe8 <getenv@plt>
    4898:	cmp	r0, #0
    489c:	beq	4918 <log_oom_internal@plt+0x28ac>
    48a0:	mov	r3, #0
    48a4:	add	r6, sp, #48	; 0x30
    48a8:	mov	r8, #2
    48ac:	str	r0, [sp, #52]	; 0x34
    48b0:	str	r3, [sp, #56]	; 0x38
    48b4:	b	4710 <log_oom_internal@plt+0x26a4>
    48b8:	ldr	r3, [pc, #184]	; 4978 <log_oom_internal@plt+0x290c>
    48bc:	ldr	r2, [pc, #184]	; 497c <log_oom_internal@plt+0x2910>
    48c0:	add	r3, pc, r3
    48c4:	ldr	r1, [pc, #180]	; 4980 <log_oom_internal@plt+0x2914>
    48c8:	add	r3, r3, #256	; 0x100
    48cc:	str	r3, [sp]
    48d0:	mov	r0, r9
    48d4:	ldr	r3, [pc, #168]	; 4984 <log_oom_internal@plt+0x2918>
    48d8:	add	r2, pc, r2
    48dc:	add	r1, pc, r1
    48e0:	bl	1fa0 <log_assert_failed_realm@plt>
    48e4:	bl	1e14 <polkit_agent_open@plt>
    48e8:	b	4704 <log_oom_internal@plt+0x2698>
    48ec:	ldr	r3, [pc, #148]	; 4988 <log_oom_internal@plt+0x291c>
    48f0:	mov	r0, r1
    48f4:	add	r3, pc, r3
    48f8:	ldr	r2, [pc, #140]	; 498c <log_oom_internal@plt+0x2920>
    48fc:	ldr	r1, [pc, #140]	; 4990 <log_oom_internal@plt+0x2924>
    4900:	add	r3, r3, #256	; 0x100
    4904:	str	r3, [sp]
    4908:	add	r2, pc, r2
    490c:	ldr	r3, [pc, #128]	; 4994 <log_oom_internal@plt+0x2928>
    4910:	add	r1, pc, r1
    4914:	bl	1fa0 <log_assert_failed_realm@plt>
    4918:	ldr	r0, [pc, #120]	; 4998 <log_oom_internal@plt+0x292c>
    491c:	add	r0, pc, r0
    4920:	b	48a0 <log_oom_internal@plt+0x2834>
    4924:	bl	1dcc <__stack_chk_fail@plt>
    4928:	andeq	r5, r1, r8, ror r7
    492c:			; <UNDEFINED> instruction: 0x000001bc
    4930:	andeq	r5, r1, ip, lsl r9
    4934:	andeq	r5, r1, r4, asr #18
    4938:	andeq	r4, r0, r0, ror #8
    493c:	andeq	r4, r0, ip, asr #8
    4940:	strdeq	r4, [r0], -r8
    4944:	andeq	r4, r0, ip, asr #8
    4948:	andeq	r4, r0, r4, ror #7
    494c:	andeq	r4, r0, r8, asr r8
    4950:	andeq	r4, r0, r0, lsr #3
    4954:	andeq	r4, r0, r4, lsl #3
    4958:			; <UNDEFINED> instruction: 0x000041b4
    495c:	andeq	r4, r0, r8, asr #6
    4960:	andeq	r3, r0, r8, asr #6
    4964:	andeq	r4, r0, r0, ror r3
    4968:	andeq	r3, r0, r0, ror r6
    496c:	andeq	r0, r0, r9, lsl #8
    4970:	andeq	r4, r0, ip, asr #5
    4974:	andeq	r4, r0, ip, asr #5
    4978:	andeq	r3, r0, r4, lsr #5
    497c:	ldrdeq	r3, [r0], -r8
    4980:	andeq	r4, r0, r0, lsr #32
    4984:	andeq	r0, r0, sl, ror #7
    4988:	andeq	r3, r0, r0, ror r2
    498c:	andeq	r3, r0, r8, lsr #11
    4990:	strdeq	r3, [r0], -r0
    4994:	andeq	r0, r0, fp, ror #7
    4998:	andeq	r4, r0, r8, asr r5
    499c:	push	{r4, r5, r6, lr}
    49a0:	subs	r6, r0, #0
    49a4:	sub	sp, sp, #16
    49a8:	beq	4a3c <log_oom_internal@plt+0x29d0>
    49ac:	cmp	r1, #0
    49b0:	mov	r4, r1
    49b4:	beq	4a64 <log_oom_internal@plt+0x29f8>
    49b8:	ldrb	r3, [r2]
    49bc:	mov	r5, r2
    49c0:	cmp	r3, #0
    49c4:	bne	4a24 <log_oom_internal@plt+0x29b8>
    49c8:	ldr	r3, [pc, #192]	; 4a90 <log_oom_internal@plt+0x2a24>
    49cc:	mov	r2, #1
    49d0:	add	r3, pc, r3
    49d4:	strb	r2, [r5]
    49d8:	ldrb	r1, [r3, #13]
    49dc:	ldrb	ip, [r3, #12]
    49e0:	ldr	r3, [r3, #16]
    49e4:	mov	r5, #0
    49e8:	str	r3, [sp]
    49ec:	stmib	sp, {r1, ip}
    49f0:	ldr	r3, [pc, #156]	; 4a94 <log_oom_internal@plt+0x2a28>
    49f4:	ldr	r1, [pc, #156]	; 4a98 <log_oom_internal@plt+0x2a2c>
    49f8:	mov	r2, r4
    49fc:	mov	r0, r6
    4a00:	str	r5, [sp, #12]
    4a04:	add	r3, pc, r3
    4a08:	add	r1, pc, r1
    4a0c:	bl	1ebc <bus_print_all_properties@plt>
    4a10:	cmp	r0, r5
    4a14:	blt	4a30 <log_oom_internal@plt+0x29c4>
    4a18:	mov	r0, r5
    4a1c:	add	sp, sp, #16
    4a20:	pop	{r4, r5, r6, pc}
    4a24:	mov	r0, #10
    4a28:	bl	1c88 <putchar@plt>
    4a2c:	b	49c8 <log_oom_internal@plt+0x295c>
    4a30:	add	sp, sp, #16
    4a34:	pop	{r4, r5, r6, lr}
    4a38:	b	1eec <bus_log_parse_error@plt>
    4a3c:	ldr	r2, [pc, #88]	; 4a9c <log_oom_internal@plt+0x2a30>
    4a40:	ldr	r1, [pc, #88]	; 4aa0 <log_oom_internal@plt+0x2a34>
    4a44:	add	r2, pc, r2
    4a48:	add	r2, r2, #280	; 0x118
    4a4c:	str	r2, [sp]
    4a50:	ldr	r2, [pc, #76]	; 4aa4 <log_oom_internal@plt+0x2a38>
    4a54:	ldr	r3, [pc, #76]	; 4aa8 <log_oom_internal@plt+0x2a3c>
    4a58:	add	r2, pc, r2
    4a5c:	add	r1, pc, r1
    4a60:	bl	1fa0 <log_assert_failed_realm@plt>
    4a64:	ldr	r3, [pc, #64]	; 4aac <log_oom_internal@plt+0x2a40>
    4a68:	mov	r0, r1
    4a6c:	add	r3, pc, r3
    4a70:	ldr	r2, [pc, #56]	; 4ab0 <log_oom_internal@plt+0x2a44>
    4a74:	ldr	r1, [pc, #56]	; 4ab4 <log_oom_internal@plt+0x2a48>
    4a78:	add	r3, r3, #280	; 0x118
    4a7c:	str	r3, [sp]
    4a80:	add	r2, pc, r2
    4a84:	ldr	r3, [pc, #44]	; 4ab8 <log_oom_internal@plt+0x2a4c>
    4a88:	add	r1, pc, r1
    4a8c:	bl	1fa0 <log_assert_failed_realm@plt>
    4a90:	andeq	r5, r1, r8, asr r6
    4a94:	andeq	r0, r0, r4, ror #3
    4a98:	andeq	r3, r0, r8, lsr pc
    4a9c:	andeq	r3, r0, r0, lsr #2
    4aa0:	andeq	r3, r0, r0, lsr #29
    4aa4:	andeq	r3, r0, r8, asr r4
    4aa8:	andeq	r0, r0, r2, lsr r3
    4aac:	strdeq	r3, [r0], -r8
    4ab0:	andeq	r3, r0, r0, lsr r4
    4ab4:	andeq	r4, r0, r8, lsr r1
    4ab8:	andeq	r0, r0, r3, lsr r3
    4abc:	ldr	r3, [pc, #260]	; 4bc8 <log_oom_internal@plt+0x2b5c>
    4ac0:	ldr	r1, [pc, #260]	; 4bcc <log_oom_internal@plt+0x2b60>
    4ac4:	add	r3, pc, r3
    4ac8:	push	{r4, r5, r6, r7, r8, lr}
    4acc:	sub	sp, sp, #16
    4ad0:	ldr	r8, [r3, r1]
    4ad4:	cmp	r0, #0
    4ad8:	ldr	r6, [sp, #40]	; 0x28
    4adc:	ldr	r3, [r8]
    4ae0:	str	r3, [sp, #12]
    4ae4:	beq	4b70 <log_oom_internal@plt+0x2b04>
    4ae8:	cmp	r2, #0
    4aec:	mov	r4, r2
    4af0:	beq	4b98 <log_oom_internal@plt+0x2b2c>
    4af4:	ldr	r5, [pc, #212]	; 4bd0 <log_oom_internal@plt+0x2b64>
    4af8:	mov	r1, #97	; 0x61
    4afc:	add	r5, pc, r5
    4b00:	mov	r2, r5
    4b04:	mov	r0, r4
    4b08:	bl	1d90 <sd_bus_message_enter_container@plt>
    4b0c:	cmp	r0, #0
    4b10:	addge	r7, sp, #8
    4b14:	bge	4b30 <log_oom_internal@plt+0x2ac4>
    4b18:	b	4b58 <log_oom_internal@plt+0x2aec>
    4b1c:	ldr	r1, [sp, #8]
    4b20:	mov	r0, r6
    4b24:	bl	1f04 <strv_extend@plt>
    4b28:	cmp	r0, #0
    4b2c:	blt	4b58 <log_oom_internal@plt+0x2aec>
    4b30:	mov	r3, #0
    4b34:	mov	r2, r7
    4b38:	mov	r1, r5
    4b3c:	mov	r0, r4
    4b40:	bl	1eb0 <sd_bus_message_read@plt>
    4b44:	cmp	r0, #0
    4b48:	bgt	4b1c <log_oom_internal@plt+0x2ab0>
    4b4c:	bne	4b58 <log_oom_internal@plt+0x2aec>
    4b50:	mov	r0, r4
    4b54:	bl	1d54 <sd_bus_message_exit_container@plt>
    4b58:	ldr	r2, [sp, #12]
    4b5c:	ldr	r3, [r8]
    4b60:	cmp	r2, r3
    4b64:	bne	4bc4 <log_oom_internal@plt+0x2b58>
    4b68:	add	sp, sp, #16
    4b6c:	pop	{r4, r5, r6, r7, r8, pc}
    4b70:	ldr	r2, [pc, #92]	; 4bd4 <log_oom_internal@plt+0x2b68>
    4b74:	ldr	r1, [pc, #92]	; 4bd8 <log_oom_internal@plt+0x2b6c>
    4b78:	add	r2, pc, r2
    4b7c:	add	r2, r2, #296	; 0x128
    4b80:	str	r2, [sp]
    4b84:	ldr	r2, [pc, #80]	; 4bdc <log_oom_internal@plt+0x2b70>
    4b88:	ldr	r3, [pc, #80]	; 4be0 <log_oom_internal@plt+0x2b74>
    4b8c:	add	r2, pc, r2
    4b90:	add	r1, pc, r1
    4b94:	bl	1fa0 <log_assert_failed_realm@plt>
    4b98:	ldr	r3, [pc, #68]	; 4be4 <log_oom_internal@plt+0x2b78>
    4b9c:	mov	r0, r2
    4ba0:	add	r3, pc, r3
    4ba4:	ldr	r2, [pc, #60]	; 4be8 <log_oom_internal@plt+0x2b7c>
    4ba8:	ldr	r1, [pc, #60]	; 4bec <log_oom_internal@plt+0x2b80>
    4bac:	add	r3, r3, #296	; 0x128
    4bb0:	str	r3, [sp]
    4bb4:	add	r2, pc, r2
    4bb8:	mov	r3, #436	; 0x1b4
    4bbc:	add	r1, pc, r1
    4bc0:	bl	1fa0 <log_assert_failed_realm@plt>
    4bc4:	bl	1dcc <__stack_chk_fail@plt>
    4bc8:	andeq	r5, r1, r4, asr #6
    4bcc:			; <UNDEFINED> instruction: 0x000001bc
    4bd0:	andeq	r4, r0, ip, asr #1
    4bd4:	andeq	r2, r0, ip, ror #31
    4bd8:	andeq	r3, r0, ip, ror #26
    4bdc:	andeq	r3, r0, r4, lsr #6
    4be0:			; <UNDEFINED> instruction: 0x000001b3
    4be4:	andeq	r2, r0, r4, asr #31
    4be8:	strdeq	r3, [r0], -ip
    4bec:	andeq	r3, r0, r4, asr #29
    4bf0:	ldr	ip, [pc, #860]	; 4f54 <log_oom_internal@plt+0x2ee8>
    4bf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4bf8:	add	ip, pc, ip
    4bfc:	ldr	lr, [pc, #852]	; 4f58 <log_oom_internal@plt+0x2eec>
    4c00:	sub	sp, sp, #60	; 0x3c
    4c04:	mov	r8, r3
    4c08:	ldr	r5, [ip, lr]
    4c0c:	subs	r6, r0, #0
    4c10:	mov	r7, r1
    4c14:	ldr	r3, [r5]
    4c18:	mov	r1, ip
    4c1c:	ldrb	r9, [sp, #96]	; 0x60
    4c20:	str	r3, [sp, #52]	; 0x34
    4c24:	beq	4d88 <log_oom_internal@plt+0x2d1c>
    4c28:	cmp	r2, #0
    4c2c:	mov	r4, r2
    4c30:	beq	4db0 <log_oom_internal@plt+0x2d44>
    4c34:	add	r2, sp, #28
    4c38:	add	r1, sp, #27
    4c3c:	mov	r0, r4
    4c40:	bl	1e2c <sd_bus_message_peek_type@plt>
    4c44:	cmp	r0, #0
    4c48:	blt	4c94 <log_oom_internal@plt+0x2c28>
    4c4c:	ldrb	sl, [sp, #27]
    4c50:	cmp	sl, #97	; 0x61
    4c54:	beq	4cac <log_oom_internal@plt+0x2c40>
    4c58:	cmp	sl, #114	; 0x72
    4c5c:	bne	4c90 <log_oom_internal@plt+0x2c24>
    4c60:	ldr	r3, [sp, #28]
    4c64:	ldrb	r3, [r3]
    4c68:	cmp	r3, #115	; 0x73
    4c6c:	beq	4ddc <log_oom_internal@plt+0x2d70>
    4c70:	cmp	r3, #117	; 0x75
    4c74:	bne	4c90 <log_oom_internal@plt+0x2c24>
    4c78:	ldr	r1, [pc, #732]	; 4f5c <log_oom_internal@plt+0x2ef0>
    4c7c:	mov	r0, r6
    4c80:	add	r1, pc, r1
    4c84:	bl	1f4c <strcmp@plt>
    4c88:	subs	r3, r0, #0
    4c8c:	beq	4e6c <log_oom_internal@plt+0x2e00>
    4c90:	mov	r0, #0
    4c94:	ldr	r2, [sp, #52]	; 0x34
    4c98:	ldr	r3, [r5]
    4c9c:	cmp	r2, r3
    4ca0:	bne	4f50 <log_oom_internal@plt+0x2ee4>
    4ca4:	add	sp, sp, #60	; 0x3c
    4ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4cac:	ldr	r3, [sp, #28]
    4cb0:	ldrb	r3, [r3]
    4cb4:	cmp	r3, #40	; 0x28
    4cb8:	bne	4c90 <log_oom_internal@plt+0x2c24>
    4cbc:	ldr	r1, [pc, #668]	; 4f60 <log_oom_internal@plt+0x2ef4>
    4cc0:	mov	r0, r6
    4cc4:	add	r1, pc, r1
    4cc8:	bl	1f4c <strcmp@plt>
    4ccc:	cmp	r0, #0
    4cd0:	bne	4c90 <log_oom_internal@plt+0x2c24>
    4cd4:	ldr	r2, [pc, #648]	; 4f64 <log_oom_internal@plt+0x2ef8>
    4cd8:	mov	r1, sl
    4cdc:	add	r2, pc, r2
    4ce0:	mov	r0, r4
    4ce4:	bl	1d90 <sd_bus_message_enter_container@plt>
    4ce8:	cmp	r0, #0
    4cec:	blt	4ee8 <log_oom_internal@plt+0x2e7c>
    4cf0:	cmp	r8, #0
    4cf4:	eor	r8, r8, #1
    4cf8:	beq	4f10 <log_oom_internal@plt+0x2ea4>
    4cfc:	ldr	r7, [pc, #612]	; 4f68 <log_oom_internal@plt+0x2efc>
    4d00:	ldr	fp, [pc, #612]	; 4f6c <log_oom_internal@plt+0x2f00>
    4d04:	ldr	sl, [pc, #612]	; 4f70 <log_oom_internal@plt+0x2f04>
    4d08:	mov	r6, #0
    4d0c:	add	r9, sp, #32
    4d10:	add	r7, pc, r7
    4d14:	add	fp, pc, fp
    4d18:	add	sl, pc, sl
    4d1c:	b	4d44 <log_oom_internal@plt+0x2cd8>
    4d20:	ldr	r1, [pc, #588]	; 4f74 <log_oom_internal@plt+0x2f08>
    4d24:	cmp	r6, #0
    4d28:	moveq	r2, fp
    4d2c:	movne	r2, sl
    4d30:	ldr	r3, [sp, #32]
    4d34:	add	r1, pc, r1
    4d38:	mov	r0, #1
    4d3c:	bl	2048 <__printf_chk@plt>
    4d40:	mov	r6, #1
    4d44:	mov	r3, #0
    4d48:	mov	r2, r9
    4d4c:	mov	r1, r7
    4d50:	mov	r0, r4
    4d54:	bl	1eb0 <sd_bus_message_read@plt>
    4d58:	subs	r3, r0, #0
    4d5c:	bgt	4d20 <log_oom_internal@plt+0x2cb4>
    4d60:	orrs	r2, r8, r6
    4d64:	bne	4efc <log_oom_internal@plt+0x2e90>
    4d68:	cmp	r3, #0
    4d6c:	bne	4ef0 <log_oom_internal@plt+0x2e84>
    4d70:	mov	r0, r4
    4d74:	bl	1d54 <sd_bus_message_exit_container@plt>
    4d78:	cmp	r0, #0
    4d7c:	blt	4ee8 <log_oom_internal@plt+0x2e7c>
    4d80:	mov	r0, #1
    4d84:	b	4c94 <log_oom_internal@plt+0x2c28>
    4d88:	ldr	r2, [pc, #488]	; 4f78 <log_oom_internal@plt+0x2f0c>
    4d8c:	ldr	r1, [pc, #488]	; 4f7c <log_oom_internal@plt+0x2f10>
    4d90:	add	r2, pc, r2
    4d94:	add	r2, r2, #320	; 0x140
    4d98:	str	r2, [sp]
    4d9c:	ldr	r2, [pc, #476]	; 4f80 <log_oom_internal@plt+0x2f14>
    4da0:	ldr	r3, [pc, #476]	; 4f84 <log_oom_internal@plt+0x2f18>
    4da4:	add	r2, pc, r2
    4da8:	add	r1, pc, r1
    4dac:	bl	1fa0 <log_assert_failed_realm@plt>
    4db0:	ldr	r3, [pc, #464]	; 4f88 <log_oom_internal@plt+0x2f1c>
    4db4:	mov	r0, r2
    4db8:	add	r3, pc, r3
    4dbc:	ldr	r2, [pc, #456]	; 4f8c <log_oom_internal@plt+0x2f20>
    4dc0:	ldr	r1, [pc, #456]	; 4f90 <log_oom_internal@plt+0x2f24>
    4dc4:	add	r3, r3, #320	; 0x140
    4dc8:	str	r3, [sp]
    4dcc:	add	r2, pc, r2
    4dd0:	mov	r3, #740	; 0x2e4
    4dd4:	add	r1, pc, r1
    4dd8:	bl	1fa0 <log_assert_failed_realm@plt>
    4ddc:	ldr	r3, [pc, #432]	; 4f94 <log_oom_internal@plt+0x2f28>
    4de0:	add	ip, sp, #36	; 0x24
    4de4:	add	r3, pc, r3
    4de8:	add	r3, r3, #8
    4dec:	ldm	r3, {r0, r1, r2, r3}
    4df0:	stm	ip, {r0, r1, r2, r3}
    4df4:	mov	r0, ip
    4df8:	mov	r1, r6
    4dfc:	bl	1b80 <strv_find@plt>
    4e00:	cmp	r0, #0
    4e04:	beq	4c90 <log_oom_internal@plt+0x2c24>
    4e08:	ldr	r1, [pc, #392]	; 4f98 <log_oom_internal@plt+0x2f2c>
    4e0c:	mov	r0, r4
    4e10:	mov	r3, #0
    4e14:	add	r2, sp, #32
    4e18:	add	r1, pc, r1
    4e1c:	bl	1eb0 <sd_bus_message_read@plt>
    4e20:	cmp	r0, #0
    4e24:	blt	4ee8 <log_oom_internal@plt+0x2e7c>
    4e28:	cmp	r9, #0
    4e2c:	ldr	r3, [sp, #32]
    4e30:	bne	4e48 <log_oom_internal@plt+0x2ddc>
    4e34:	cmp	r3, #0
    4e38:	beq	4d80 <log_oom_internal@plt+0x2d14>
    4e3c:	ldrb	r2, [r3]
    4e40:	cmp	r2, #0
    4e44:	beq	4d80 <log_oom_internal@plt+0x2d14>
    4e48:	str	r3, [sp]
    4e4c:	ldr	r3, [pc, #328]	; 4f9c <log_oom_internal@plt+0x2f30>
    4e50:	mov	r2, r8
    4e54:	mov	r1, r7
    4e58:	mov	r0, r6
    4e5c:	add	r3, pc, r3
    4e60:	bl	1fc4 <bus_print_property_value@plt>
    4e64:	mov	r0, #1
    4e68:	b	4c94 <log_oom_internal@plt+0x2c28>
    4e6c:	ldr	r1, [pc, #300]	; 4fa0 <log_oom_internal@plt+0x2f34>
    4e70:	mov	r0, r4
    4e74:	add	r2, sp, #32
    4e78:	add	r1, pc, r1
    4e7c:	bl	1eb0 <sd_bus_message_read@plt>
    4e80:	cmp	r0, #0
    4e84:	blt	4ee8 <log_oom_internal@plt+0x2e7c>
    4e88:	ldr	r0, [sp, #32]
    4e8c:	bl	1f28 <uid_is_valid@plt>
    4e90:	cmp	r0, #0
    4e94:	bne	4f28 <log_oom_internal@plt+0x2ebc>
    4e98:	bl	1cb8 <log_get_max_level_realm@plt>
    4e9c:	cmp	r0, #2
    4ea0:	mvnle	r0, #21
    4ea4:	ble	4c94 <log_oom_internal@plt+0x2c28>
    4ea8:	ldr	r2, [pc, #244]	; 4fa4 <log_oom_internal@plt+0x2f38>
    4eac:	ldr	r3, [pc, #244]	; 4fa8 <log_oom_internal@plt+0x2f3c>
    4eb0:	add	r2, pc, r2
    4eb4:	ldr	r1, [sp, #32]
    4eb8:	str	r2, [sp, #4]
    4ebc:	add	r3, pc, r3
    4ec0:	ldr	r2, [pc, #228]	; 4fac <log_oom_internal@plt+0x2f40>
    4ec4:	add	r3, r3, #336	; 0x150
    4ec8:	str	r3, [sp]
    4ecc:	str	r1, [sp, #8]
    4ed0:	mov	r3, #772	; 0x304
    4ed4:	add	r2, pc, r2
    4ed8:	mov	r1, #1073741846	; 0x40000016
    4edc:	mov	r0, #3
    4ee0:	bl	1fac <log_internal_realm@plt>
    4ee4:	b	4c94 <log_oom_internal@plt+0x2c28>
    4ee8:	bl	1eec <bus_log_parse_error@plt>
    4eec:	b	4c94 <log_oom_internal@plt+0x2c28>
    4ef0:	mov	r0, r3
    4ef4:	bl	1eec <bus_log_parse_error@plt>
    4ef8:	b	4c94 <log_oom_internal@plt+0x2c28>
    4efc:	mov	r0, #10
    4f00:	str	r3, [sp, #20]
    4f04:	bl	1c88 <putchar@plt>
    4f08:	ldr	r3, [sp, #20]
    4f0c:	b	4d68 <log_oom_internal@plt+0x2cfc>
    4f10:	ldr	r1, [pc, #152]	; 4fb0 <log_oom_internal@plt+0x2f44>
    4f14:	mov	r2, r6
    4f18:	add	r1, pc, r1
    4f1c:	mov	r0, #1
    4f20:	bl	2048 <__printf_chk@plt>
    4f24:	b	4cfc <log_oom_internal@plt+0x2c90>
    4f28:	ldr	r3, [sp, #32]
    4f2c:	mov	r2, r8
    4f30:	str	r3, [sp]
    4f34:	ldr	r3, [pc, #120]	; 4fb4 <log_oom_internal@plt+0x2f48>
    4f38:	mov	r1, r7
    4f3c:	mov	r0, r6
    4f40:	add	r3, pc, r3
    4f44:	bl	1fc4 <bus_print_property_value@plt>
    4f48:	mov	r0, #1
    4f4c:	b	4c94 <log_oom_internal@plt+0x2c28>
    4f50:	bl	1dcc <__stack_chk_fail@plt>
    4f54:	andeq	r5, r1, r0, lsl r2
    4f58:			; <UNDEFINED> instruction: 0x000001bc
    4f5c:	andeq	r3, r0, ip, lsl #28
    4f60:	andeq	r3, r0, r8, asr #25
    4f64:	andeq	r3, r0, ip, ror #29
    4f68:			; <UNDEFINED> instruction: 0x00003eb8
    4f6c:	andeq	r4, r0, r0, ror #2
    4f70:	andeq	r4, r0, r8, lsl #4
    4f74:			; <UNDEFINED> instruction: 0x00003ebc
    4f78:	ldrdeq	r2, [r0], -r4
    4f7c:	ldrdeq	r3, [r0], -r4
    4f80:	andeq	r3, r0, ip, lsl #2
    4f84:	andeq	r0, r0, r3, ror #5
    4f88:	andeq	r2, r0, ip, lsr #27
    4f8c:	andeq	r3, r0, r4, ror #1
    4f90:	andeq	r3, r0, ip, lsr #25
    4f94:	andeq	r5, r1, r8, lsl r2
    4f98:			; <UNDEFINED> instruction: 0x00003db0
    4f9c:	strdeq	r4, [r0], -ip
    4fa0:	andeq	r3, r0, r8, asr sp
    4fa4:	andeq	r3, r0, r8, lsr #26
    4fa8:	andeq	r2, r0, r8, lsr #25
    4fac:	ldrdeq	r2, [r0], -ip
    4fb0:	ldrdeq	r3, [r0], -r4
    4fb4:	andeq	r4, r0, r0
    4fb8:	ldr	r0, [r0]
    4fbc:	cmp	r0, #0
    4fc0:	bxeq	lr
    4fc4:	b	1fb8 <strv_free@plt>
    4fc8:	ldr	r3, [pc, #172]	; 507c <log_oom_internal@plt+0x3010>
    4fcc:	ldr	r1, [pc, #172]	; 5080 <log_oom_internal@plt+0x3014>
    4fd0:	add	r3, pc, r3
    4fd4:	push	{r4, r5, r6, lr}
    4fd8:	sub	sp, sp, #8
    4fdc:	ldr	r4, [r3, r1]
    4fe0:	mov	r0, r2
    4fe4:	mov	r5, r2
    4fe8:	ldr	ip, [r4]
    4fec:	mov	r2, sp
    4ff0:	mov	r1, #0
    4ff4:	ldr	r6, [sp, #24]
    4ff8:	str	ip, [sp, #4]
    4ffc:	bl	1e2c <sd_bus_message_peek_type@plt>
    5000:	cmp	r0, #0
    5004:	blt	5060 <log_oom_internal@plt+0x2ff4>
    5008:	ldr	r2, [sp]
    500c:	mov	r1, #114	; 0x72
    5010:	mov	r0, r5
    5014:	bl	1d90 <sd_bus_message_enter_container@plt>
    5018:	cmp	r0, #0
    501c:	blt	5060 <log_oom_internal@plt+0x2ff4>
    5020:	ldr	r3, [sp]
    5024:	mov	r2, r6
    5028:	mov	r0, r5
    502c:	ldrb	r1, [r3]
    5030:	bl	1f64 <sd_bus_message_read_basic@plt>
    5034:	cmp	r0, #0
    5038:	blt	5060 <log_oom_internal@plt+0x2ff4>
    503c:	ldr	r1, [sp]
    5040:	mov	r0, r5
    5044:	add	r1, r1, #1
    5048:	bl	1d78 <sd_bus_message_skip@plt>
    504c:	cmp	r0, #0
    5050:	blt	5060 <log_oom_internal@plt+0x2ff4>
    5054:	mov	r0, r5
    5058:	bl	1d54 <sd_bus_message_exit_container@plt>
    505c:	and	r0, r0, r0, asr #31
    5060:	ldr	r2, [sp, #4]
    5064:	ldr	r3, [r4]
    5068:	cmp	r2, r3
    506c:	bne	5078 <log_oom_internal@plt+0x300c>
    5070:	add	sp, sp, #8
    5074:	pop	{r4, r5, r6, pc}
    5078:	bl	1dcc <__stack_chk_fail@plt>
    507c:	andeq	r4, r1, r8, lsr lr
    5080:			; <UNDEFINED> instruction: 0x000001bc
    5084:	push	{r4, r5, r6, lr}
    5088:	subs	r5, r0, #0
    508c:	sub	sp, sp, #8
    5090:	beq	51fc <log_oom_internal@plt+0x3190>
    5094:	mov	r6, r1
    5098:	bl	1e74 <table_get_rows@plt>
    509c:	cmp	r0, #1
    50a0:	bhi	50c0 <log_oom_internal@plt+0x3054>
    50a4:	ldr	r3, [pc, #432]	; 525c <log_oom_internal@plt+0x31f0>
    50a8:	add	r3, pc, r3
    50ac:	ldrb	r0, [r3, #24]
    50b0:	cmp	r0, #0
    50b4:	bne	50fc <log_oom_internal@plt+0x3090>
    50b8:	add	sp, sp, #8
    50bc:	pop	{r4, r5, r6, pc}
    50c0:	mvn	r2, #0
    50c4:	mov	r1, #0
    50c8:	mov	r0, r5
    50cc:	bl	1d84 <table_set_sort@plt>
    50d0:	subs	r4, r0, #0
    50d4:	bge	5170 <log_oom_internal@plt+0x3104>
    50d8:	mov	r0, #0
    50dc:	bl	1cb8 <log_get_max_level_realm@plt>
    50e0:	cmp	r0, #2
    50e4:	bgt	5138 <log_oom_internal@plt+0x30cc>
    50e8:	rsb	r0, r4, #0
    50ec:	uxtb	r0, r0
    50f0:	rsb	r0, r0, #0
    50f4:	add	sp, sp, #8
    50f8:	pop	{r4, r5, r6, pc}
    50fc:	mov	r0, r5
    5100:	bl	1e74 <table_get_rows@plt>
    5104:	cmp	r0, #1
    5108:	bls	5240 <log_oom_internal@plt+0x31d4>
    510c:	mov	r0, r5
    5110:	bl	1e74 <table_get_rows@plt>
    5114:	ldr	r1, [pc, #324]	; 5260 <log_oom_internal@plt+0x31f4>
    5118:	mov	r3, r6
    511c:	add	r1, pc, r1
    5120:	sub	r2, r0, #1
    5124:	mov	r0, #1
    5128:	bl	2048 <__printf_chk@plt>
    512c:	mov	r0, #0
    5130:	add	sp, sp, #8
    5134:	pop	{r4, r5, r6, pc}
    5138:	ldr	r2, [pc, #292]	; 5264 <log_oom_internal@plt+0x31f8>
    513c:	ldr	r3, [pc, #292]	; 5268 <log_oom_internal@plt+0x31fc>
    5140:	add	r2, pc, r2
    5144:	str	r2, [sp, #4]
    5148:	add	r3, pc, r3
    514c:	ldr	r2, [pc, #280]	; 526c <log_oom_internal@plt+0x3200>
    5150:	add	r3, r3, #364	; 0x16c
    5154:	str	r3, [sp]
    5158:	mov	r1, r4
    515c:	mov	r3, #100	; 0x64
    5160:	add	r2, pc, r2
    5164:	mov	r0, #3
    5168:	bl	1fac <log_internal_realm@plt>
    516c:	b	50b8 <log_oom_internal@plt+0x304c>
    5170:	ldr	r3, [pc, #248]	; 5270 <log_oom_internal@plt+0x3204>
    5174:	mov	r0, r5
    5178:	add	r3, pc, r3
    517c:	ldrb	r1, [r3, #24]
    5180:	bl	1cd0 <table_set_header@plt>
    5184:	ldr	r3, [pc, #232]	; 5274 <log_oom_internal@plt+0x3208>
    5188:	add	r3, pc, r3
    518c:	ldr	r0, [r3, #20]
    5190:	sub	r3, r0, #9
    5194:	cmp	r3, #3
    5198:	bls	5224 <log_oom_internal@plt+0x31b8>
    519c:	mov	r1, #0
    51a0:	mov	r0, r5
    51a4:	bl	1ea4 <table_print@plt>
    51a8:	mov	r4, r0
    51ac:	cmp	r4, #0
    51b0:	bge	50a4 <log_oom_internal@plt+0x3038>
    51b4:	mov	r0, #0
    51b8:	bl	1cb8 <log_get_max_level_realm@plt>
    51bc:	cmp	r0, #2
    51c0:	ble	50e8 <log_oom_internal@plt+0x307c>
    51c4:	ldr	r2, [pc, #172]	; 5278 <log_oom_internal@plt+0x320c>
    51c8:	ldr	r3, [pc, #172]	; 527c <log_oom_internal@plt+0x3210>
    51cc:	add	r2, pc, r2
    51d0:	str	r2, [sp, #4]
    51d4:	add	r3, pc, r3
    51d8:	ldr	r2, [pc, #160]	; 5280 <log_oom_internal@plt+0x3214>
    51dc:	add	r3, r3, #364	; 0x16c
    51e0:	str	r3, [sp]
    51e4:	mov	r1, r4
    51e8:	mov	r3, #109	; 0x6d
    51ec:	add	r2, pc, r2
    51f0:	mov	r0, #3
    51f4:	bl	1fac <log_internal_realm@plt>
    51f8:	b	50b8 <log_oom_internal@plt+0x304c>
    51fc:	ldr	r2, [pc, #128]	; 5284 <log_oom_internal@plt+0x3218>
    5200:	ldr	r1, [pc, #128]	; 5288 <log_oom_internal@plt+0x321c>
    5204:	add	r2, pc, r2
    5208:	add	r2, r2, #352	; 0x160
    520c:	str	r2, [sp]
    5210:	ldr	r2, [pc, #116]	; 528c <log_oom_internal@plt+0x3220>
    5214:	mov	r3, #94	; 0x5e
    5218:	add	r2, pc, r2
    521c:	add	r1, pc, r1
    5220:	bl	1fa0 <log_assert_failed_realm@plt>
    5224:	bl	1df0 <output_mode_to_json_format_flags@plt>
    5228:	mov	r1, #0
    522c:	orr	r2, r0, #8
    5230:	mov	r0, r5
    5234:	bl	1c28 <table_print_json@plt>
    5238:	mov	r4, r0
    523c:	b	51ac <log_oom_internal@plt+0x3140>
    5240:	ldr	r1, [pc, #72]	; 5290 <log_oom_internal@plt+0x3224>
    5244:	mov	r2, r6
    5248:	add	r1, pc, r1
    524c:	mov	r0, #1
    5250:	bl	2048 <__printf_chk@plt>
    5254:	mov	r0, #0
    5258:	b	50b8 <log_oom_internal@plt+0x304c>
    525c:	andeq	r4, r1, r4, asr pc
    5260:	andeq	r3, r0, ip, lsl fp
    5264:	andeq	r3, r0, r0, asr #21
    5268:	andeq	r2, r0, ip, lsl sl
    526c:	andeq	r2, r0, r0, asr sp
    5270:	andeq	r4, r1, r4, lsl #29
    5274:	andeq	r4, r1, r0, lsr #29
    5278:	andeq	r3, r0, r0, asr sl
    527c:	muleq	r0, r0, r9
    5280:	andeq	r2, r0, r4, asr #25
    5284:	andeq	r2, r0, r0, ror #18
    5288:	ldrdeq	r3, [r0], -ip
    528c:	muleq	r0, r8, ip
    5290:	andeq	r3, r0, r4, lsl #20
    5294:	ldr	r3, [pc, #740]	; 5580 <log_oom_internal@plt+0x3514>
    5298:	ldr	r0, [pc, #740]	; 5584 <log_oom_internal@plt+0x3518>
    529c:	add	r3, pc, r3
    52a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    52a4:	sub	sp, sp, #48	; 0x30
    52a8:	ldr	r6, [r3, r0]
    52ac:	mov	r4, #0
    52b0:	subs	r5, r2, #0
    52b4:	ldr	r3, [r6]
    52b8:	str	r4, [sp, #32]
    52bc:	str	r4, [sp, #36]	; 0x24
    52c0:	str	r3, [sp, #44]	; 0x2c
    52c4:	str	r4, [sp, #40]	; 0x28
    52c8:	str	r4, [sp, #24]
    52cc:	beq	5480 <log_oom_internal@plt+0x3414>
    52d0:	cmp	r1, #0
    52d4:	beq	54ac <log_oom_internal@plt+0x3440>
    52d8:	ldr	r3, [pc, #680]	; 5588 <log_oom_internal@plt+0x351c>
    52dc:	add	r7, sp, #32
    52e0:	add	r3, pc, r3
    52e4:	ldr	r0, [r3]
    52e8:	bl	1fdc <pager_open@plt>
    52ec:	ldr	r3, [pc, #664]	; 558c <log_oom_internal@plt+0x3520>
    52f0:	ldr	r2, [pc, #664]	; 5590 <log_oom_internal@plt+0x3524>
    52f4:	add	r3, pc, r3
    52f8:	str	r3, [sp]
    52fc:	add	r3, sp, #24
    5300:	str	r3, [sp, #8]
    5304:	ldr	r1, [pc, #648]	; 5594 <log_oom_internal@plt+0x3528>
    5308:	ldr	r3, [pc, #648]	; 5598 <log_oom_internal@plt+0x352c>
    530c:	mov	r0, r5
    5310:	str	r4, [sp, #12]
    5314:	str	r7, [sp, #4]
    5318:	add	r3, pc, r3
    531c:	add	r2, pc, r2
    5320:	add	r1, pc, r1
    5324:	bl	1f7c <sd_bus_call_method@plt>
    5328:	subs	r5, r0, #0
    532c:	bge	5380 <log_oom_internal@plt+0x3314>
    5330:	mov	r0, r4
    5334:	bl	1cb8 <log_get_max_level_realm@plt>
    5338:	cmp	r0, #2
    533c:	rsble	r4, r5, #0
    5340:	uxtble	r4, r4
    5344:	rsble	r4, r4, #0
    5348:	bgt	5428 <log_oom_internal@plt+0x33bc>
    534c:	ldr	r0, [sp, #24]
    5350:	cmp	r0, #0
    5354:	beq	535c <log_oom_internal@plt+0x32f0>
    5358:	bl	1e68 <sd_bus_message_unref@plt>
    535c:	mov	r0, r7
    5360:	bl	1d18 <sd_bus_error_free@plt>
    5364:	ldr	r2, [sp, #44]	; 0x2c
    5368:	ldr	r3, [r6]
    536c:	mov	r0, r4
    5370:	cmp	r2, r3
    5374:	bne	557c <log_oom_internal@plt+0x3510>
    5378:	add	sp, sp, #48	; 0x30
    537c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    5380:	ldr	r9, [pc, #532]	; 559c <log_oom_internal@plt+0x3530>
    5384:	mov	r1, #97	; 0x61
    5388:	add	r9, pc, r9
    538c:	mov	r2, r9
    5390:	ldr	r0, [sp, #24]
    5394:	bl	1d90 <sd_bus_message_enter_container@plt>
    5398:	cmp	r0, #0
    539c:	blt	5474 <log_oom_internal@plt+0x3408>
    53a0:	ldr	r0, [pc, #504]	; 55a0 <log_oom_internal@plt+0x3534>
    53a4:	mov	r1, r4
    53a8:	add	r0, pc, r0
    53ac:	bl	1d6c <table_new_internal@plt>
    53b0:	subs	r8, r0, #0
    53b4:	beq	5558 <log_oom_internal@plt+0x34ec>
    53b8:	add	sl, sp, #28
    53bc:	mvn	r4, #0
    53c0:	b	53f8 <log_oom_internal@plt+0x338c>
    53c4:	beq	54d8 <log_oom_internal@plt+0x346c>
    53c8:	ldr	r3, [sp, #28]
    53cc:	str	r4, [sp, #16]
    53d0:	str	r4, [sp, #12]
    53d4:	str	r4, [sp, #8]
    53d8:	str	r4, [sp, #4]
    53dc:	str	r4, [sp]
    53e0:	mov	r2, #1
    53e4:	mov	r1, #0
    53e8:	mov	r0, r8
    53ec:	bl	1c1c <table_add_cell_full@plt>
    53f0:	subs	r5, r0, #0
    53f4:	blt	5500 <log_oom_internal@plt+0x3494>
    53f8:	mov	r3, #0
    53fc:	mov	r2, sl
    5400:	mov	r1, r9
    5404:	ldr	r0, [sp, #24]
    5408:	bl	1eb0 <sd_bus_message_read@plt>
    540c:	cmp	r0, #0
    5410:	bge	53c4 <log_oom_internal@plt+0x3358>
    5414:	bl	1eec <bus_log_parse_error@plt>
    5418:	mov	r4, r0
    541c:	mov	r0, r8
    5420:	bl	1e50 <table_unref@plt>
    5424:	b	534c <log_oom_internal@plt+0x32e0>
    5428:	mov	r1, r5
    542c:	mov	r0, r7
    5430:	bl	1f40 <bus_error_message@plt>
    5434:	ldr	r2, [pc, #360]	; 55a4 <log_oom_internal@plt+0x3538>
    5438:	ldr	r3, [pc, #360]	; 55a8 <log_oom_internal@plt+0x353c>
    543c:	add	r2, pc, r2
    5440:	str	r2, [sp, #4]
    5444:	add	r3, pc, r3
    5448:	ldr	r2, [pc, #348]	; 55ac <log_oom_internal@plt+0x3540>
    544c:	add	r3, r3, #388	; 0x184
    5450:	str	r3, [sp]
    5454:	mov	r1, r5
    5458:	ldr	r3, [pc, #336]	; 55b0 <log_oom_internal@plt+0x3544>
    545c:	add	r2, pc, r2
    5460:	str	r0, [sp, #8]
    5464:	mov	r0, #3
    5468:	bl	1fac <log_internal_realm@plt>
    546c:	mov	r4, r0
    5470:	b	534c <log_oom_internal@plt+0x32e0>
    5474:	bl	1eec <bus_log_parse_error@plt>
    5478:	mov	r4, r0
    547c:	b	534c <log_oom_internal@plt+0x32e0>
    5480:	ldr	r3, [pc, #300]	; 55b4 <log_oom_internal@plt+0x3548>
    5484:	ldr	r2, [pc, #300]	; 55b8 <log_oom_internal@plt+0x354c>
    5488:	add	r3, pc, r3
    548c:	ldr	r1, [pc, #296]	; 55bc <log_oom_internal@plt+0x3550>
    5490:	add	r3, r3, #376	; 0x178
    5494:	str	r3, [sp]
    5498:	mov	r0, r5
    549c:	ldr	r3, [pc, #284]	; 55c0 <log_oom_internal@plt+0x3554>
    54a0:	add	r2, pc, r2
    54a4:	add	r1, pc, r1
    54a8:	bl	1fa0 <log_assert_failed_realm@plt>
    54ac:	ldr	r3, [pc, #272]	; 55c4 <log_oom_internal@plt+0x3558>
    54b0:	mov	r0, r1
    54b4:	add	r3, pc, r3
    54b8:	ldr	r2, [pc, #264]	; 55c8 <log_oom_internal@plt+0x355c>
    54bc:	ldr	r1, [pc, #264]	; 55cc <log_oom_internal@plt+0x3560>
    54c0:	add	r3, r3, #376	; 0x178
    54c4:	str	r3, [sp]
    54c8:	add	r2, pc, r2
    54cc:	mov	r3, #268	; 0x10c
    54d0:	add	r1, pc, r1
    54d4:	bl	1fa0 <log_assert_failed_realm@plt>
    54d8:	ldr	r0, [sp, #24]
    54dc:	bl	1d54 <sd_bus_message_exit_container@plt>
    54e0:	cmp	r0, #0
    54e4:	blt	5414 <log_oom_internal@plt+0x33a8>
    54e8:	ldr	r1, [pc, #224]	; 55d0 <log_oom_internal@plt+0x3564>
    54ec:	mov	r0, r8
    54f0:	add	r1, pc, r1
    54f4:	bl	5084 <log_oom_internal@plt+0x3018>
    54f8:	mov	r4, r0
    54fc:	b	541c <log_oom_internal@plt+0x33b0>
    5500:	mov	r0, #0
    5504:	bl	1cb8 <log_get_max_level_realm@plt>
    5508:	cmp	r0, #2
    550c:	rsble	r4, r5, #0
    5510:	uxtble	r4, r4
    5514:	rsble	r4, r4, #0
    5518:	ble	541c <log_oom_internal@plt+0x33b0>
    551c:	ldr	r2, [pc, #176]	; 55d4 <log_oom_internal@plt+0x3568>
    5520:	ldr	r3, [pc, #176]	; 55d8 <log_oom_internal@plt+0x356c>
    5524:	add	r2, pc, r2
    5528:	str	r2, [sp, #4]
    552c:	add	r3, pc, r3
    5530:	ldr	r2, [pc, #164]	; 55dc <log_oom_internal@plt+0x3570>
    5534:	add	r3, r3, #388	; 0x184
    5538:	str	r3, [sp]
    553c:	mov	r1, r5
    5540:	ldr	r3, [pc, #152]	; 55e0 <log_oom_internal@plt+0x3574>
    5544:	add	r2, pc, r2
    5548:	mov	r0, #3
    554c:	bl	1fac <log_internal_realm@plt>
    5550:	mov	r4, r0
    5554:	b	541c <log_oom_internal@plt+0x33b0>
    5558:	ldr	r3, [pc, #132]	; 55e4 <log_oom_internal@plt+0x3578>
    555c:	ldr	r1, [pc, #132]	; 55e8 <log_oom_internal@plt+0x357c>
    5560:	add	r3, pc, r3
    5564:	ldr	r2, [pc, #128]	; 55ec <log_oom_internal@plt+0x3580>
    5568:	add	r3, r3, #388	; 0x184
    556c:	add	r1, pc, r1
    5570:	bl	206c <log_oom_internal@plt>
    5574:	mov	r4, r0
    5578:	b	534c <log_oom_internal@plt+0x32e0>
    557c:	bl	1dcc <__stack_chk_fail@plt>
    5580:	andeq	r4, r1, ip, ror #22
    5584:			; <UNDEFINED> instruction: 0x000001bc
    5588:	andeq	r4, r1, r8, asr #26
    558c:	andeq	r3, r0, r0, ror #18
    5590:	andeq	r3, r0, ip, lsl #12
    5594:	andeq	r3, r0, r0, lsr #12
    5598:	strdeq	r3, [r0], -r0
    559c:	andeq	r3, r0, r0, asr #16
    55a0:	andeq	r2, r0, r0, lsr #21
    55a4:	andeq	r3, r0, r4, lsr #16
    55a8:	andeq	r2, r0, r0, lsr #14
    55ac:	andeq	r2, r0, r4, asr sl
    55b0:	andeq	r0, r0, r9, lsl r1
    55b4:	ldrdeq	r2, [r0], -ip
    55b8:	andeq	r2, r0, r0, lsl sl
    55bc:	andeq	r3, r0, r8, asr r4
    55c0:	andeq	r0, r0, fp, lsl #2
    55c4:			; <UNDEFINED> instruction: 0x000026b0
    55c8:	andeq	r2, r0, r8, ror #19
    55cc:	andeq	r3, r0, r0, lsr r4
    55d0:	andeq	r3, r0, ip, lsr #15
    55d4:	andeq	r3, r0, r8, asr r7
    55d8:	andeq	r2, r0, r8, lsr r6
    55dc:	andeq	r2, r0, ip, ror #18
    55e0:	andeq	r0, r0, lr, lsr #2
    55e4:	andeq	r2, r0, r4, lsl #12
    55e8:	andeq	r2, r0, r4, asr #18
    55ec:	andeq	r0, r0, r1, lsr #2
    55f0:	ldr	r3, [pc, #760]	; 58f0 <log_oom_internal@plt+0x3884>
    55f4:	ldr	r0, [pc, #760]	; 58f4 <log_oom_internal@plt+0x3888>
    55f8:	add	r3, pc, r3
    55fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5600:	sub	sp, sp, #60	; 0x3c
    5604:	ldr	r6, [r3, r0]
    5608:	mov	r4, #0
    560c:	subs	r5, r2, #0
    5610:	ldr	r3, [r6]
    5614:	str	r4, [sp, #40]	; 0x28
    5618:	str	r4, [sp, #44]	; 0x2c
    561c:	str	r3, [sp, #52]	; 0x34
    5620:	str	r4, [sp, #48]	; 0x30
    5624:	str	r4, [sp, #28]
    5628:	beq	5810 <log_oom_internal@plt+0x37a4>
    562c:	cmp	r1, #0
    5630:	beq	583c <log_oom_internal@plt+0x37d0>
    5634:	ldr	r3, [pc, #700]	; 58f8 <log_oom_internal@plt+0x388c>
    5638:	add	r7, sp, #40	; 0x28
    563c:	add	r3, pc, r3
    5640:	ldr	r0, [r3]
    5644:	bl	1fdc <pager_open@plt>
    5648:	ldr	r3, [pc, #684]	; 58fc <log_oom_internal@plt+0x3890>
    564c:	ldr	r2, [pc, #684]	; 5900 <log_oom_internal@plt+0x3894>
    5650:	add	r3, pc, r3
    5654:	str	r3, [sp]
    5658:	add	r3, sp, #28
    565c:	str	r3, [sp, #8]
    5660:	ldr	r1, [pc, #668]	; 5904 <log_oom_internal@plt+0x3898>
    5664:	ldr	r3, [pc, #668]	; 5908 <log_oom_internal@plt+0x389c>
    5668:	mov	r0, r5
    566c:	str	r4, [sp, #12]
    5670:	str	r7, [sp, #4]
    5674:	add	r3, pc, r3
    5678:	add	r2, pc, r2
    567c:	add	r1, pc, r1
    5680:	bl	1f7c <sd_bus_call_method@plt>
    5684:	subs	r5, r0, #0
    5688:	bge	56dc <log_oom_internal@plt+0x3670>
    568c:	mov	r0, r4
    5690:	bl	1cb8 <log_get_max_level_realm@plt>
    5694:	cmp	r0, #2
    5698:	rsble	r4, r5, #0
    569c:	uxtble	r4, r4
    56a0:	rsble	r4, r4, #0
    56a4:	bgt	57b8 <log_oom_internal@plt+0x374c>
    56a8:	ldr	r0, [sp, #28]
    56ac:	cmp	r0, #0
    56b0:	beq	56b8 <log_oom_internal@plt+0x364c>
    56b4:	bl	1e68 <sd_bus_message_unref@plt>
    56b8:	mov	r0, r7
    56bc:	bl	1d18 <sd_bus_error_free@plt>
    56c0:	ldr	r2, [sp, #52]	; 0x34
    56c4:	ldr	r3, [r6]
    56c8:	mov	r0, r4
    56cc:	cmp	r2, r3
    56d0:	bne	58ec <log_oom_internal@plt+0x3880>
    56d4:	add	sp, sp, #60	; 0x3c
    56d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    56dc:	ldr	r5, [pc, #552]	; 590c <log_oom_internal@plt+0x38a0>
    56e0:	mov	r1, #97	; 0x61
    56e4:	add	r5, pc, r5
    56e8:	mov	r2, r5
    56ec:	ldr	r0, [sp, #28]
    56f0:	bl	1d90 <sd_bus_message_enter_container@plt>
    56f4:	cmp	r0, #0
    56f8:	blt	5804 <log_oom_internal@plt+0x3798>
    56fc:	ldr	r1, [pc, #524]	; 5910 <log_oom_internal@plt+0x38a4>
    5700:	ldr	r0, [pc, #524]	; 5914 <log_oom_internal@plt+0x38a8>
    5704:	mov	r2, r4
    5708:	add	r1, pc, r1
    570c:	add	r0, pc, r0
    5710:	bl	1d6c <table_new_internal@plt>
    5714:	subs	r8, r0, #0
    5718:	beq	5794 <log_oom_internal@plt+0x3728>
    571c:	mov	r2, #100	; 0x64
    5720:	mov	r1, #1
    5724:	bl	1db4 <table_set_align_percent@plt>
    5728:	add	sl, sp, #32
    572c:	add	r9, sp, #36	; 0x24
    5730:	mov	fp, #9
    5734:	b	5760 <log_oom_internal@plt+0x36f4>
    5738:	beq	5868 <log_oom_internal@plt+0x37fc>
    573c:	ldr	r3, [sp, #32]
    5740:	mov	r1, #6
    5744:	ldr	r2, [sp, #36]	; 0x24
    5748:	stm	sp, {r3, fp}
    574c:	mov	r0, r8
    5750:	mov	r3, #1
    5754:	bl	1dc0 <table_add_many_internal@plt>
    5758:	subs	r1, r0, #0
    575c:	blt	5890 <log_oom_internal@plt+0x3824>
    5760:	ldr	r0, [sp, #28]
    5764:	str	r4, [sp]
    5768:	mov	r3, sl
    576c:	mov	r2, r9
    5770:	mov	r1, r5
    5774:	bl	1eb0 <sd_bus_message_read@plt>
    5778:	cmp	r0, #0
    577c:	bge	5738 <log_oom_internal@plt+0x36cc>
    5780:	bl	1eec <bus_log_parse_error@plt>
    5784:	mov	r4, r0
    5788:	mov	r0, r8
    578c:	bl	1e50 <table_unref@plt>
    5790:	b	56a8 <log_oom_internal@plt+0x363c>
    5794:	ldr	r3, [pc, #380]	; 5918 <log_oom_internal@plt+0x38ac>
    5798:	ldr	r1, [pc, #380]	; 591c <log_oom_internal@plt+0x38b0>
    579c:	add	r3, pc, r3
    57a0:	mov	r2, #232	; 0xe8
    57a4:	add	r3, r3, #412	; 0x19c
    57a8:	add	r1, pc, r1
    57ac:	bl	206c <log_oom_internal@plt>
    57b0:	mov	r4, r0
    57b4:	b	56a8 <log_oom_internal@plt+0x363c>
    57b8:	mov	r1, r5
    57bc:	mov	r0, r7
    57c0:	bl	1f40 <bus_error_message@plt>
    57c4:	ldr	r2, [pc, #340]	; 5920 <log_oom_internal@plt+0x38b4>
    57c8:	ldr	r3, [pc, #340]	; 5924 <log_oom_internal@plt+0x38b8>
    57cc:	add	r2, pc, r2
    57d0:	str	r2, [sp, #4]
    57d4:	add	r3, pc, r3
    57d8:	ldr	r2, [pc, #328]	; 5928 <log_oom_internal@plt+0x38bc>
    57dc:	add	r3, r3, #412	; 0x19c
    57e0:	str	r3, [sp]
    57e4:	mov	r1, r5
    57e8:	mov	r3, #224	; 0xe0
    57ec:	add	r2, pc, r2
    57f0:	str	r0, [sp, #8]
    57f4:	mov	r0, #3
    57f8:	bl	1fac <log_internal_realm@plt>
    57fc:	mov	r4, r0
    5800:	b	56a8 <log_oom_internal@plt+0x363c>
    5804:	bl	1eec <bus_log_parse_error@plt>
    5808:	mov	r4, r0
    580c:	b	56a8 <log_oom_internal@plt+0x363c>
    5810:	ldr	r3, [pc, #276]	; 592c <log_oom_internal@plt+0x38c0>
    5814:	ldr	r2, [pc, #276]	; 5930 <log_oom_internal@plt+0x38c4>
    5818:	add	r3, pc, r3
    581c:	ldr	r1, [pc, #272]	; 5934 <log_oom_internal@plt+0x38c8>
    5820:	add	r3, r3, #400	; 0x190
    5824:	str	r3, [sp]
    5828:	mov	r0, r5
    582c:	mov	r3, #210	; 0xd2
    5830:	add	r2, pc, r2
    5834:	add	r1, pc, r1
    5838:	bl	1fa0 <log_assert_failed_realm@plt>
    583c:	ldr	r3, [pc, #244]	; 5938 <log_oom_internal@plt+0x38cc>
    5840:	mov	r0, r1
    5844:	add	r3, pc, r3
    5848:	ldr	r2, [pc, #236]	; 593c <log_oom_internal@plt+0x38d0>
    584c:	ldr	r1, [pc, #236]	; 5940 <log_oom_internal@plt+0x38d4>
    5850:	add	r3, r3, #400	; 0x190
    5854:	str	r3, [sp]
    5858:	add	r2, pc, r2
    585c:	mov	r3, #211	; 0xd3
    5860:	add	r1, pc, r1
    5864:	bl	1fa0 <log_assert_failed_realm@plt>
    5868:	ldr	r0, [sp, #28]
    586c:	bl	1d54 <sd_bus_message_exit_container@plt>
    5870:	cmp	r0, #0
    5874:	blt	5780 <log_oom_internal@plt+0x3714>
    5878:	ldr	r1, [pc, #196]	; 5944 <log_oom_internal@plt+0x38d8>
    587c:	mov	r0, r8
    5880:	add	r1, pc, r1
    5884:	bl	5084 <log_oom_internal@plt+0x3018>
    5888:	mov	r4, r0
    588c:	b	5788 <log_oom_internal@plt+0x371c>
    5890:	mov	r0, #0
    5894:	str	r1, [sp, #20]
    5898:	bl	1cb8 <log_get_max_level_realm@plt>
    589c:	ldr	r1, [sp, #20]
    58a0:	cmp	r0, #2
    58a4:	rsble	r4, r1, #0
    58a8:	uxtble	r4, r4
    58ac:	rsble	r4, r4, #0
    58b0:	ble	5788 <log_oom_internal@plt+0x371c>
    58b4:	ldr	r2, [pc, #140]	; 5948 <log_oom_internal@plt+0x38dc>
    58b8:	ldr	r3, [pc, #140]	; 594c <log_oom_internal@plt+0x38e0>
    58bc:	add	r2, pc, r2
    58c0:	str	r2, [sp, #4]
    58c4:	add	r3, pc, r3
    58c8:	ldr	r2, [pc, #128]	; 5950 <log_oom_internal@plt+0x38e4>
    58cc:	add	r3, r3, #412	; 0x19c
    58d0:	str	r3, [sp]
    58d4:	add	r2, pc, r2
    58d8:	mov	r3, #250	; 0xfa
    58dc:	mov	r0, #3
    58e0:	bl	1fac <log_internal_realm@plt>
    58e4:	mov	r4, r0
    58e8:	b	5788 <log_oom_internal@plt+0x371c>
    58ec:	bl	1dcc <__stack_chk_fail@plt>
    58f0:	andeq	r4, r1, r0, lsl r8
    58f4:			; <UNDEFINED> instruction: 0x000001bc
    58f8:	andeq	r4, r1, ip, ror #19
    58fc:	andeq	r3, r0, r4, asr r6
    5900:			; <UNDEFINED> instruction: 0x000032b0
    5904:	andeq	r3, r0, r4, asr #5
    5908:	muleq	r0, r4, r2
    590c:	andeq	r3, r0, r8, ror #11
    5910:	andeq	r3, r0, ip, asr #11
    5914:	ldrdeq	r3, [r0], -r0
    5918:	andeq	r2, r0, r8, asr #7
    591c:	andeq	r2, r0, r8, lsl #14
    5920:	andeq	r3, r0, r4, ror #9
    5924:	muleq	r0, r0, r3
    5928:	andeq	r2, r0, r4, asr #13
    592c:	andeq	r2, r0, ip, asr #6
    5930:	andeq	r2, r0, r0, lsl #13
    5934:	andeq	r3, r0, r8, asr #1
    5938:	andeq	r2, r0, r0, lsr #6
    593c:	andeq	r2, r0, r8, asr r6
    5940:	andeq	r3, r0, r0, lsr #1
    5944:	andeq	r3, r0, r0, ror #8
    5948:	andeq	r3, r0, r0, asr #7
    594c:	andeq	r2, r0, r0, lsr #5
    5950:	ldrdeq	r2, [r0], -ip
    5954:	ldr	r3, [pc, #1256]	; 5e44 <log_oom_internal@plt+0x3dd8>
    5958:	ldr	r0, [pc, #1256]	; 5e48 <log_oom_internal@plt+0x3ddc>
    595c:	add	r3, pc, r3
    5960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5964:	subs	r5, r2, #0
    5968:	ldr	r2, [r3, r0]
    596c:	sub	sp, sp, #132	; 0x84
    5970:	mov	r4, #0
    5974:	ldr	r3, [r2]
    5978:	str	r2, [sp, #32]
    597c:	str	r4, [sp, #100]	; 0x64
    5980:	str	r4, [sp, #104]	; 0x68
    5984:	str	r3, [sp, #124]	; 0x7c
    5988:	str	r4, [sp, #108]	; 0x6c
    598c:	str	r4, [sp, #68]	; 0x44
    5990:	beq	5d08 <log_oom_internal@plt+0x3c9c>
    5994:	cmp	r1, #0
    5998:	beq	5d34 <log_oom_internal@plt+0x3cc8>
    599c:	ldr	r3, [pc, #1192]	; 5e4c <log_oom_internal@plt+0x3de0>
    59a0:	add	r8, sp, #100	; 0x64
    59a4:	add	r3, pc, r3
    59a8:	ldr	r0, [r3]
    59ac:	bl	1fdc <pager_open@plt>
    59b0:	ldr	r3, [pc, #1176]	; 5e50 <log_oom_internal@plt+0x3de4>
    59b4:	ldr	r2, [pc, #1176]	; 5e54 <log_oom_internal@plt+0x3de8>
    59b8:	add	r3, pc, r3
    59bc:	str	r3, [sp]
    59c0:	add	r3, sp, #68	; 0x44
    59c4:	str	r3, [sp, #8]
    59c8:	ldr	r1, [pc, #1160]	; 5e58 <log_oom_internal@plt+0x3dec>
    59cc:	ldr	r3, [pc, #1160]	; 5e5c <log_oom_internal@plt+0x3df0>
    59d0:	str	r4, [sp, #12]
    59d4:	str	r8, [sp, #4]
    59d8:	add	r3, pc, r3
    59dc:	add	r2, pc, r2
    59e0:	add	r1, pc, r1
    59e4:	mov	r0, r5
    59e8:	bl	1f7c <sd_bus_call_method@plt>
    59ec:	subs	r6, r0, #0
    59f0:	bge	5a48 <log_oom_internal@plt+0x39dc>
    59f4:	mov	r0, r4
    59f8:	bl	1cb8 <log_get_max_level_realm@plt>
    59fc:	cmp	r0, #2
    5a00:	rsble	r4, r6, #0
    5a04:	uxtble	r4, r4
    5a08:	rsble	r4, r4, #0
    5a0c:	bgt	5cb0 <log_oom_internal@plt+0x3c44>
    5a10:	ldr	r0, [sp, #68]	; 0x44
    5a14:	cmp	r0, #0
    5a18:	beq	5a20 <log_oom_internal@plt+0x39b4>
    5a1c:	bl	1e68 <sd_bus_message_unref@plt>
    5a20:	mov	r0, r8
    5a24:	bl	1d18 <sd_bus_error_free@plt>
    5a28:	ldr	r3, [sp, #32]
    5a2c:	ldr	r2, [sp, #124]	; 0x7c
    5a30:	mov	r0, r4
    5a34:	ldr	r3, [r3]
    5a38:	cmp	r2, r3
    5a3c:	bne	5e40 <log_oom_internal@plt+0x3dd4>
    5a40:	add	sp, sp, #132	; 0x84
    5a44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5a48:	ldr	r6, [pc, #1040]	; 5e60 <log_oom_internal@plt+0x3df4>
    5a4c:	mov	r1, #97	; 0x61
    5a50:	add	r6, pc, r6
    5a54:	mov	r2, r6
    5a58:	ldr	r0, [sp, #68]	; 0x44
    5a5c:	bl	1d90 <sd_bus_message_enter_container@plt>
    5a60:	cmp	r0, #0
    5a64:	blt	5cfc <log_oom_internal@plt+0x3c90>
    5a68:	ldr	r3, [pc, #1012]	; 5e64 <log_oom_internal@plt+0x3df8>
    5a6c:	ldr	r2, [pc, #1012]	; 5e68 <log_oom_internal@plt+0x3dfc>
    5a70:	add	r3, pc, r3
    5a74:	ldr	r1, [pc, #1008]	; 5e6c <log_oom_internal@plt+0x3e00>
    5a78:	stm	sp, {r3, r4}
    5a7c:	ldr	r0, [pc, #1004]	; 5e70 <log_oom_internal@plt+0x3e04>
    5a80:	ldr	r3, [pc, #1004]	; 5e74 <log_oom_internal@plt+0x3e08>
    5a84:	add	r2, pc, r2
    5a88:	add	r3, pc, r3
    5a8c:	add	r1, pc, r1
    5a90:	add	r0, pc, r0
    5a94:	bl	1d6c <table_new_internal@plt>
    5a98:	subs	r9, r0, #0
    5a9c:	beq	5c30 <log_oom_internal@plt+0x3bc4>
    5aa0:	mov	r2, #100	; 0x64
    5aa4:	mov	r1, #1
    5aa8:	bl	1db4 <table_set_align_percent@plt>
    5aac:	mov	r2, #100	; 0x64
    5ab0:	mov	r1, #2
    5ab4:	mov	r0, r9
    5ab8:	bl	1db4 <table_set_align_percent@plt>
    5abc:	ldr	r3, [pc, #948]	; 5e78 <log_oom_internal@plt+0x3e0c>
    5ac0:	str	r6, [sp, #36]	; 0x24
    5ac4:	add	r3, pc, r3
    5ac8:	add	r3, r3, #440	; 0x1b8
    5acc:	str	r3, [sp, #56]	; 0x38
    5ad0:	add	r3, sp, #80	; 0x50
    5ad4:	str	r3, [sp, #40]	; 0x28
    5ad8:	add	r3, sp, #84	; 0x54
    5adc:	str	r3, [sp, #44]	; 0x2c
    5ae0:	add	r3, sp, #88	; 0x58
    5ae4:	add	fp, sp, #72	; 0x48
    5ae8:	add	sl, sp, #92	; 0x5c
    5aec:	str	r3, [sp, #48]	; 0x30
    5af0:	add	r7, sp, #112	; 0x70
    5af4:	str	r8, [sp, #60]	; 0x3c
    5af8:	b	5b78 <log_oom_internal@plt+0x3b0c>
    5afc:	mov	r0, r4
    5b00:	bl	1cb8 <log_get_max_level_realm@plt>
    5b04:	ldr	r2, [sp, #92]	; 0x5c
    5b08:	cmp	r0, #3
    5b0c:	bgt	5c60 <log_oom_internal@plt+0x3bf4>
    5b10:	ldrd	r0, [sp, #72]	; 0x48
    5b14:	ldr	ip, [sp, #88]	; 0x58
    5b18:	ldr	lr, [sp, #84]	; 0x54
    5b1c:	cmp	r1, #0
    5b20:	beq	5c54 <log_oom_internal@plt+0x3be8>
    5b24:	mov	r3, #9
    5b28:	str	r1, [sp, #24]
    5b2c:	mov	r1, #1
    5b30:	str	r0, [sp]
    5b34:	str	r3, [sp, #28]
    5b38:	str	lr, [sp, #16]
    5b3c:	str	ip, [sp, #8]
    5b40:	str	r1, [sp, #20]
    5b44:	str	r1, [sp, #12]
    5b48:	str	r1, [sp, #4]
    5b4c:	mov	r3, #6
    5b50:	mov	r0, r9
    5b54:	bl	1dc0 <table_add_many_internal@plt>
    5b58:	cmp	r0, #0
    5b5c:	blt	5dd4 <log_oom_internal@plt+0x3d68>
    5b60:	ldr	r0, [sp, #96]	; 0x60
    5b64:	cmp	r0, #0
    5b68:	beq	5b70 <log_oom_internal@plt+0x3b04>
    5b6c:	bl	1e68 <sd_bus_message_unref@plt>
    5b70:	mov	r0, r7
    5b74:	bl	1d18 <sd_bus_error_free@plt>
    5b78:	ldr	r3, [sp, #40]	; 0x28
    5b7c:	mov	r4, #0
    5b80:	str	r3, [sp, #8]
    5b84:	ldr	r3, [sp, #44]	; 0x2c
    5b88:	ldr	r0, [sp, #68]	; 0x44
    5b8c:	str	r3, [sp, #4]
    5b90:	ldr	r3, [sp, #48]	; 0x30
    5b94:	mov	r2, sl
    5b98:	str	r3, [sp]
    5b9c:	ldr	r1, [sp, #36]	; 0x24
    5ba0:	mov	r3, fp
    5ba4:	str	r4, [sp, #112]	; 0x70
    5ba8:	str	r4, [sp, #116]	; 0x74
    5bac:	str	r4, [sp, #120]	; 0x78
    5bb0:	str	r4, [sp, #96]	; 0x60
    5bb4:	str	r4, [sp, #76]	; 0x4c
    5bb8:	bl	1eb0 <sd_bus_message_read@plt>
    5bbc:	cmp	r0, r4
    5bc0:	blt	5d60 <log_oom_internal@plt+0x3cf4>
    5bc4:	beq	5d90 <log_oom_internal@plt+0x3d24>
    5bc8:	ldr	r3, [pc, #684]	; 5e7c <log_oom_internal@plt+0x3e10>
    5bcc:	add	r1, sp, #96	; 0x60
    5bd0:	add	r3, pc, r3
    5bd4:	ldr	r6, [pc, #676]	; 5e80 <log_oom_internal@plt+0x3e14>
    5bd8:	str	r1, [sp, #8]
    5bdc:	str	r3, [sp]
    5be0:	ldr	r1, [pc, #668]	; 5e84 <log_oom_internal@plt+0x3e18>
    5be4:	ldr	r3, [pc, #668]	; 5e88 <log_oom_internal@plt+0x3e1c>
    5be8:	add	r6, pc, r6
    5bec:	ldr	r2, [sp, #80]	; 0x50
    5bf0:	str	r7, [sp, #4]
    5bf4:	str	r6, [sp, #12]
    5bf8:	add	r3, pc, r3
    5bfc:	add	r1, pc, r1
    5c00:	mov	r0, r5
    5c04:	bl	1c10 <sd_bus_get_property@plt>
    5c08:	subs	r8, r0, #0
    5c0c:	blt	5afc <log_oom_internal@plt+0x3a90>
    5c10:	mov	r1, r6
    5c14:	add	r2, sp, #76	; 0x4c
    5c18:	ldr	r0, [sp, #96]	; 0x60
    5c1c:	bl	1eb0 <sd_bus_message_read@plt>
    5c20:	cmp	r0, #0
    5c24:	blt	5d60 <log_oom_internal@plt+0x3cf4>
    5c28:	ldr	r2, [sp, #92]	; 0x5c
    5c2c:	b	5b10 <log_oom_internal@plt+0x3aa4>
    5c30:	ldr	r3, [pc, #596]	; 5e8c <log_oom_internal@plt+0x3e20>
    5c34:	ldr	r1, [pc, #596]	; 5e90 <log_oom_internal@plt+0x3e24>
    5c38:	add	r3, pc, r3
    5c3c:	mov	r2, #151	; 0x97
    5c40:	add	r3, r3, #440	; 0x1b8
    5c44:	add	r1, pc, r1
    5c48:	bl	206c <log_oom_internal@plt>
    5c4c:	mov	r4, r0
    5c50:	b	5a10 <log_oom_internal@plt+0x39a4>
    5c54:	ldr	r1, [pc, #568]	; 5e94 <log_oom_internal@plt+0x3e28>
    5c58:	add	r1, pc, r1
    5c5c:	b	5b24 <log_oom_internal@plt+0x3ab8>
    5c60:	mov	r1, r8
    5c64:	mov	r0, r7
    5c68:	str	r2, [sp, #52]	; 0x34
    5c6c:	bl	1f40 <bus_error_message@plt>
    5c70:	ldr	r2, [sp, #52]	; 0x34
    5c74:	ldr	r3, [pc, #540]	; 5e98 <log_oom_internal@plt+0x3e2c>
    5c78:	str	r2, [sp, #8]
    5c7c:	ldr	r2, [sp, #56]	; 0x38
    5c80:	add	r3, pc, r3
    5c84:	str	r2, [sp]
    5c88:	ldr	r2, [pc, #524]	; 5e9c <log_oom_internal@plt+0x3e30>
    5c8c:	str	r3, [sp, #4]
    5c90:	add	r2, pc, r2
    5c94:	mov	r1, r8
    5c98:	mov	r3, #179	; 0xb3
    5c9c:	str	r0, [sp, #12]
    5ca0:	mov	r0, #4
    5ca4:	bl	1fac <log_internal_realm@plt>
    5ca8:	ldr	r2, [sp, #92]	; 0x5c
    5cac:	b	5b10 <log_oom_internal@plt+0x3aa4>
    5cb0:	mov	r1, r6
    5cb4:	mov	r0, r8
    5cb8:	bl	1f40 <bus_error_message@plt>
    5cbc:	ldr	r2, [pc, #476]	; 5ea0 <log_oom_internal@plt+0x3e34>
    5cc0:	ldr	r3, [pc, #476]	; 5ea4 <log_oom_internal@plt+0x3e38>
    5cc4:	add	r2, pc, r2
    5cc8:	str	r2, [sp, #4]
    5ccc:	add	r3, pc, r3
    5cd0:	ldr	r2, [pc, #464]	; 5ea8 <log_oom_internal@plt+0x3e3c>
    5cd4:	add	r3, r3, #440	; 0x1b8
    5cd8:	str	r3, [sp]
    5cdc:	mov	r1, r6
    5ce0:	mov	r3, #143	; 0x8f
    5ce4:	add	r2, pc, r2
    5ce8:	str	r0, [sp, #8]
    5cec:	mov	r0, #3
    5cf0:	bl	1fac <log_internal_realm@plt>
    5cf4:	mov	r4, r0
    5cf8:	b	5a10 <log_oom_internal@plt+0x39a4>
    5cfc:	bl	1eec <bus_log_parse_error@plt>
    5d00:	mov	r4, r0
    5d04:	b	5a10 <log_oom_internal@plt+0x39a4>
    5d08:	ldr	r3, [pc, #412]	; 5eac <log_oom_internal@plt+0x3e40>
    5d0c:	ldr	r2, [pc, #412]	; 5eb0 <log_oom_internal@plt+0x3e44>
    5d10:	add	r3, pc, r3
    5d14:	ldr	r1, [pc, #408]	; 5eb4 <log_oom_internal@plt+0x3e48>
    5d18:	add	r3, r3, #424	; 0x1a8
    5d1c:	str	r3, [sp]
    5d20:	mov	r0, r5
    5d24:	mov	r3, #129	; 0x81
    5d28:	add	r2, pc, r2
    5d2c:	add	r1, pc, r1
    5d30:	bl	1fa0 <log_assert_failed_realm@plt>
    5d34:	ldr	r3, [pc, #380]	; 5eb8 <log_oom_internal@plt+0x3e4c>
    5d38:	mov	r0, r1
    5d3c:	add	r3, pc, r3
    5d40:	ldr	r2, [pc, #372]	; 5ebc <log_oom_internal@plt+0x3e50>
    5d44:	ldr	r1, [pc, #372]	; 5ec0 <log_oom_internal@plt+0x3e54>
    5d48:	add	r3, r3, #424	; 0x1a8
    5d4c:	str	r3, [sp]
    5d50:	add	r2, pc, r2
    5d54:	mov	r3, #130	; 0x82
    5d58:	add	r1, pc, r1
    5d5c:	bl	1fa0 <log_assert_failed_realm@plt>
    5d60:	ldr	r8, [sp, #60]	; 0x3c
    5d64:	bl	1eec <bus_log_parse_error@plt>
    5d68:	mov	r4, r0
    5d6c:	ldr	r0, [sp, #96]	; 0x60
    5d70:	cmp	r0, #0
    5d74:	beq	5d7c <log_oom_internal@plt+0x3d10>
    5d78:	bl	1e68 <sd_bus_message_unref@plt>
    5d7c:	mov	r0, r7
    5d80:	bl	1d18 <sd_bus_error_free@plt>
    5d84:	mov	r0, r9
    5d88:	bl	1e50 <table_unref@plt>
    5d8c:	b	5a10 <log_oom_internal@plt+0x39a4>
    5d90:	ldr	r0, [sp, #96]	; 0x60
    5d94:	ldr	r8, [sp, #60]	; 0x3c
    5d98:	cmp	r0, #0
    5d9c:	beq	5da4 <log_oom_internal@plt+0x3d38>
    5da0:	bl	1e68 <sd_bus_message_unref@plt>
    5da4:	mov	r0, r7
    5da8:	bl	1d18 <sd_bus_error_free@plt>
    5dac:	ldr	r0, [sp, #68]	; 0x44
    5db0:	bl	1d54 <sd_bus_message_exit_container@plt>
    5db4:	cmp	r0, #0
    5db8:	blt	5e34 <log_oom_internal@plt+0x3dc8>
    5dbc:	ldr	r1, [pc, #256]	; 5ec4 <log_oom_internal@plt+0x3e58>
    5dc0:	mov	r0, r9
    5dc4:	add	r1, pc, r1
    5dc8:	bl	5084 <log_oom_internal@plt+0x3018>
    5dcc:	mov	r4, r0
    5dd0:	b	5d84 <log_oom_internal@plt+0x3d18>
    5dd4:	mov	r4, r0
    5dd8:	mov	r0, #0
    5ddc:	bl	1cb8 <log_get_max_level_realm@plt>
    5de0:	ldr	r8, [sp, #60]	; 0x3c
    5de4:	cmp	r0, #2
    5de8:	rsble	r4, r4, #0
    5dec:	uxtble	r4, r4
    5df0:	rsble	r4, r4, #0
    5df4:	ble	5d6c <log_oom_internal@plt+0x3d00>
    5df8:	ldr	r2, [pc, #200]	; 5ec8 <log_oom_internal@plt+0x3e5c>
    5dfc:	ldr	r3, [pc, #200]	; 5ecc <log_oom_internal@plt+0x3e60>
    5e00:	add	r2, pc, r2
    5e04:	str	r2, [sp, #4]
    5e08:	add	r3, pc, r3
    5e0c:	ldr	r2, [pc, #188]	; 5ed0 <log_oom_internal@plt+0x3e64>
    5e10:	add	r3, r3, #440	; 0x1b8
    5e14:	mov	r1, r4
    5e18:	str	r3, [sp]
    5e1c:	add	r2, pc, r2
    5e20:	mov	r3, #193	; 0xc1
    5e24:	mov	r0, #3
    5e28:	bl	1fac <log_internal_realm@plt>
    5e2c:	mov	r4, r0
    5e30:	b	5d6c <log_oom_internal@plt+0x3d00>
    5e34:	bl	1eec <bus_log_parse_error@plt>
    5e38:	mov	r4, r0
    5e3c:	b	5d84 <log_oom_internal@plt+0x3d18>
    5e40:	bl	1dcc <__stack_chk_fail@plt>
    5e44:	andeq	r4, r1, ip, lsr #9
    5e48:			; <UNDEFINED> instruction: 0x000001bc
    5e4c:	andeq	r4, r1, r4, lsl #13
    5e50:	andeq	r3, r0, r4, lsr r3
    5e54:	andeq	r2, r0, ip, asr #30
    5e58:	andeq	r2, r0, r0, ror #30
    5e5c:	andeq	r2, r0, r0, lsr pc
    5e60:	andeq	r3, r0, r8, asr #5
    5e64:			; <UNDEFINED> instruction: 0x000032b8
    5e68:	andeq	r3, r0, r0, asr r2
    5e6c:	andeq	r3, r0, r0, asr r2
    5e70:	muleq	r0, r0, r2
    5e74:	andeq	r2, r0, r0, asr #7
    5e78:	andeq	r2, r0, r0, lsr #1
    5e7c:	andeq	r3, r0, ip, ror r1
    5e80:	ldrdeq	r3, [r0], -r0
    5e84:	andeq	r2, r0, r4, asr #26
    5e88:	andeq	r3, r0, r4, lsr r1
    5e8c:	andeq	r1, r0, ip, lsr #30
    5e90:	andeq	r2, r0, ip, ror #4
    5e94:	muleq	r0, r0, r0
    5e98:	ldrdeq	r3, [r0], -r0
    5e9c:	andeq	r2, r0, r0, lsr #4
    5ea0:	andeq	r3, r0, r8, lsr r0
    5ea4:	muleq	r0, r8, lr
    5ea8:	andeq	r2, r0, ip, asr #3
    5eac:	andeq	r1, r0, r4, asr lr
    5eb0:	andeq	r2, r0, r8, lsl #3
    5eb4:	ldrdeq	r2, [r0], -r0
    5eb8:	andeq	r1, r0, r8, lsr #28
    5ebc:	andeq	r2, r0, r0, ror #2
    5ec0:	andeq	r2, r0, r8, lsr #23
    5ec4:			; <UNDEFINED> instruction: 0x00002fb4
    5ec8:	andeq	r2, r0, ip, ror lr
    5ecc:	andeq	r1, r0, ip, asr sp
    5ed0:	muleq	r0, r4, r0
    5ed4:	ldr	ip, [pc, #220]	; 5fb8 <log_oom_internal@plt+0x3f4c>
    5ed8:	push	{r4, r5, r6, r7, r8, lr}
    5edc:	add	ip, pc, ip
    5ee0:	ldr	r4, [pc, #212]	; 5fbc <log_oom_internal@plt+0x3f50>
    5ee4:	sub	sp, sp, #40	; 0x28
    5ee8:	mov	r5, r3
    5eec:	ldr	r6, [ip, r4]
    5ef0:	ldr	r3, [pc, #200]	; 5fc0 <log_oom_internal@plt+0x3f54>
    5ef4:	ldr	r4, [pc, #200]	; 5fc4 <log_oom_internal@plt+0x3f58>
    5ef8:	add	lr, sp, #40	; 0x28
    5efc:	add	r4, pc, r4
    5f00:	add	r3, pc, r3
    5f04:	mov	r7, #0
    5f08:	str	r1, [sp, #16]
    5f0c:	str	r2, [sp, #4]
    5f10:	ldr	r1, [pc, #176]	; 5fc8 <log_oom_internal@plt+0x3f5c>
    5f14:	ldr	r8, [r6]
    5f18:	ldr	r2, [pc, #172]	; 5fcc <log_oom_internal@plt+0x3f60>
    5f1c:	str	r4, [sp, #12]
    5f20:	str	r7, [lr, #-8]!
    5f24:	str	r3, [sp]
    5f28:	ldr	r3, [pc, #160]	; 5fd0 <log_oom_internal@plt+0x3f64>
    5f2c:	str	lr, [sp, #8]
    5f30:	add	r3, pc, r3
    5f34:	add	r2, pc, r2
    5f38:	add	r1, pc, r1
    5f3c:	str	r8, [sp, #36]	; 0x24
    5f40:	bl	1f7c <sd_bus_call_method@plt>
    5f44:	subs	r4, r0, #0
    5f48:	bge	5f78 <log_oom_internal@plt+0x3f0c>
    5f4c:	ldr	r0, [sp, #32]
    5f50:	cmp	r0, #0
    5f54:	beq	5f5c <log_oom_internal@plt+0x3ef0>
    5f58:	bl	1e68 <sd_bus_message_unref@plt>
    5f5c:	ldr	r2, [sp, #36]	; 0x24
    5f60:	ldr	r3, [r6]
    5f64:	mov	r0, r4
    5f68:	cmp	r2, r3
    5f6c:	bne	5fb4 <log_oom_internal@plt+0x3f48>
    5f70:	add	sp, sp, #40	; 0x28
    5f74:	pop	{r4, r5, r6, r7, r8, pc}
    5f78:	ldr	r1, [pc, #84]	; 5fd4 <log_oom_internal@plt+0x3f68>
    5f7c:	add	r2, sp, #28
    5f80:	add	r1, pc, r1
    5f84:	ldr	r0, [sp, #32]
    5f88:	bl	1eb0 <sd_bus_message_read@plt>
    5f8c:	subs	r4, r0, #0
    5f90:	blt	5f4c <log_oom_internal@plt+0x3ee0>
    5f94:	ldr	r0, [sp, #28]
    5f98:	bl	203c <strdup@plt>
    5f9c:	cmp	r0, r7
    5fa0:	str	r0, [sp, #28]
    5fa4:	strne	r0, [r5]
    5fa8:	movne	r4, r7
    5fac:	mvneq	r4, #11
    5fb0:	b	5f4c <log_oom_internal@plt+0x3ee0>
    5fb4:	bl	1dcc <__stack_chk_fail@plt>
    5fb8:	andeq	r3, r1, ip, lsr #30
    5fbc:			; <UNDEFINED> instruction: 0x000001bc
    5fc0:	andeq	r2, r0, r4, lsl #29
    5fc4:	strheq	r3, [r0], -ip
    5fc8:	andeq	r2, r0, r8, lsl #20
    5fcc:	strdeq	r2, [r0], -r4
    5fd0:	ldrdeq	r2, [r0], -r8
    5fd4:	andeq	r2, r0, r0, lsl lr
    5fd8:	ldr	r3, [pc, #64]	; 6020 <log_oom_internal@plt+0x3fb4>
    5fdc:	push	{r4, lr}
    5fe0:	add	r3, pc, r3
    5fe4:	ldrb	r2, [r3, #24]
    5fe8:	ldrb	r4, [r3, #12]
    5fec:	cmp	r2, #0
    5ff0:	beq	6008 <log_oom_internal@plt+0x3f9c>
    5ff4:	mov	r0, #8
    5ff8:	orr	r4, r4, r0
    5ffc:	bl	200c <colors_enabled@plt>
    6000:	orr	r0, r4, r0, lsl #4
    6004:	pop	{r4, pc}
    6008:	bl	1f10 <on_tty@plt>
    600c:	cmp	r0, #0
    6010:	beq	5ff4 <log_oom_internal@plt+0x3f88>
    6014:	bl	1f58 <pager_have@plt>
    6018:	lsl	r0, r0, #3
    601c:	b	5ff8 <log_oom_internal@plt+0x3f8c>
    6020:	andeq	r4, r1, r8, asr #32
    6024:	ldr	r3, [pc, #564]	; 6260 <log_oom_internal@plt+0x41f4>
    6028:	ldr	ip, [pc, #564]	; 6264 <log_oom_internal@plt+0x41f8>
    602c:	push	{r4, r5, r6, r7, r8, r9, lr}
    6030:	add	r3, pc, r3
    6034:	sub	sp, sp, #52	; 0x34
    6038:	mov	r4, #0
    603c:	str	r2, [sp, #20]
    6040:	ldr	r6, [r3, ip]
    6044:	subs	r9, r0, #0
    6048:	str	r4, [sp, #28]
    604c:	ldr	r3, [r6]
    6050:	str	r4, [sp, #32]
    6054:	str	r3, [sp, #44]	; 0x2c
    6058:	str	r4, [sp, #36]	; 0x24
    605c:	str	r4, [sp, #40]	; 0x28
    6060:	beq	6208 <log_oom_internal@plt+0x419c>
    6064:	cmp	r1, #0
    6068:	mov	r7, r1
    606c:	beq	6230 <log_oom_internal@plt+0x41c4>
    6070:	add	r2, sp, #28
    6074:	bl	1da8 <show_cgroup_get_unit_path_and_warn@plt>
    6078:	subs	r5, r0, #0
    607c:	addlt	r8, sp, #32
    6080:	blt	60a4 <log_oom_internal@plt+0x4038>
    6084:	ldr	r3, [sp, #28]
    6088:	cmp	r3, #0
    608c:	beq	609c <log_oom_internal@plt+0x4030>
    6090:	ldrb	r3, [r3]
    6094:	cmp	r3, #0
    6098:	bne	60d0 <log_oom_internal@plt+0x4064>
    609c:	add	r8, sp, #32
    60a0:	mov	r5, #0
    60a4:	mov	r0, r8
    60a8:	bl	1d18 <sd_bus_error_free@plt>
    60ac:	ldr	r0, [sp, #28]
    60b0:	bl	1ba4 <free@plt>
    60b4:	ldr	r2, [sp, #44]	; 0x2c
    60b8:	ldr	r3, [r6]
    60bc:	mov	r0, r5
    60c0:	cmp	r2, r3
    60c4:	bne	625c <log_oom_internal@plt+0x41f0>
    60c8:	add	sp, sp, #52	; 0x34
    60cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
    60d0:	bl	1ca0 <columns@plt>
    60d4:	ldr	r5, [sp, #28]
    60d8:	add	r8, sp, #32
    60dc:	cmp	r0, #18
    60e0:	subhi	r4, r0, #18
    60e4:	bl	5fd8 <log_oom_internal@plt+0x3f6c>
    60e8:	ldr	r3, [pc, #376]	; 6268 <log_oom_internal@plt+0x41fc>
    60ec:	mov	r2, r5
    60f0:	str	r4, [sp]
    60f4:	mov	r1, r7
    60f8:	str	r8, [sp, #8]
    60fc:	add	r3, pc, r3
    6100:	str	r0, [sp, #4]
    6104:	mov	r0, r9
    6108:	bl	1e8c <unit_show_processes@plt>
    610c:	cmn	r0, #53	; 0x35
    6110:	mov	r5, r0
    6114:	beq	6188 <log_oom_internal@plt+0x411c>
    6118:	cmp	r0, #0
    611c:	bge	60a0 <log_oom_internal@plt+0x4034>
    6120:	mov	r0, #0
    6124:	bl	1cb8 <log_get_max_level_realm@plt>
    6128:	cmp	r0, #2
    612c:	rsble	r5, r5, #0
    6130:	uxtble	r5, r5
    6134:	rsble	r5, r5, #0
    6138:	ble	60a4 <log_oom_internal@plt+0x4038>
    613c:	mov	r1, r5
    6140:	mov	r0, r8
    6144:	bl	1f40 <bus_error_message@plt>
    6148:	ldr	r2, [pc, #284]	; 626c <log_oom_internal@plt+0x4200>
    614c:	ldr	r3, [pc, #284]	; 6270 <log_oom_internal@plt+0x4204>
    6150:	add	r2, pc, r2
    6154:	str	r2, [sp, #4]
    6158:	add	r3, pc, r3
    615c:	ldr	r2, [pc, #272]	; 6274 <log_oom_internal@plt+0x4208>
    6160:	add	r3, r3, #476	; 0x1dc
    6164:	mov	r1, r5
    6168:	str	r3, [sp]
    616c:	add	r2, pc, r2
    6170:	ldr	r3, [pc, #256]	; 6278 <log_oom_internal@plt+0x420c>
    6174:	str	r0, [sp, #8]
    6178:	mov	r0, #3
    617c:	bl	1fac <log_internal_realm@plt>
    6180:	mov	r5, r0
    6184:	b	60a4 <log_oom_internal@plt+0x4038>
    6188:	ldr	r3, [pc, #236]	; 627c <log_oom_internal@plt+0x4210>
    618c:	add	r3, pc, r3
    6190:	ldr	r3, [r3, #4]
    6194:	cmp	r3, #1
    6198:	beq	60a0 <log_oom_internal@plt+0x4034>
    619c:	ldr	r0, [pc, #220]	; 6280 <log_oom_internal@plt+0x4214>
    61a0:	ldr	r1, [sp, #28]
    61a4:	add	r0, pc, r0
    61a8:	bl	1bf8 <cg_is_empty_recursive@plt>
    61ac:	ldr	r5, [sp, #20]
    61b0:	cmp	r0, #0
    61b4:	beq	61c0 <log_oom_internal@plt+0x4154>
    61b8:	cmp	r5, #0
    61bc:	ble	60a0 <log_oom_internal@plt+0x4034>
    61c0:	ldr	r7, [sp, #28]
    61c4:	bl	5fd8 <log_oom_internal@plt+0x3f6c>
    61c8:	add	r2, sp, #20
    61cc:	cmp	r5, #0
    61d0:	str	r2, [sp]
    61d4:	ldr	r2, [pc, #168]	; 6284 <log_oom_internal@plt+0x4218>
    61d8:	movle	r5, #0
    61dc:	movgt	r5, #1
    61e0:	str	r5, [sp, #4]
    61e4:	mov	r1, r7
    61e8:	mov	r3, r4
    61ec:	add	r2, pc, r2
    61f0:	mov	r5, #0
    61f4:	str	r0, [sp, #8]
    61f8:	ldr	r0, [pc, #136]	; 6288 <log_oom_internal@plt+0x421c>
    61fc:	add	r0, pc, r0
    6200:	bl	1ed4 <show_cgroup_and_extra@plt>
    6204:	b	60a4 <log_oom_internal@plt+0x4038>
    6208:	ldr	r2, [pc, #124]	; 628c <log_oom_internal@plt+0x4220>
    620c:	ldr	r1, [pc, #124]	; 6290 <log_oom_internal@plt+0x4224>
    6210:	add	r2, pc, r2
    6214:	add	r2, r2, #456	; 0x1c8
    6218:	str	r2, [sp]
    621c:	ldr	r2, [pc, #112]	; 6294 <log_oom_internal@plt+0x4228>
    6220:	ldr	r3, [pc, #112]	; 6298 <log_oom_internal@plt+0x422c>
    6224:	add	r2, pc, r2
    6228:	add	r1, pc, r1
    622c:	bl	1fa0 <log_assert_failed_realm@plt>
    6230:	ldr	r3, [pc, #100]	; 629c <log_oom_internal@plt+0x4230>
    6234:	mov	r0, r1
    6238:	add	r3, pc, r3
    623c:	ldr	r2, [pc, #92]	; 62a0 <log_oom_internal@plt+0x4234>
    6240:	ldr	r1, [pc, #92]	; 62a4 <log_oom_internal@plt+0x4238>
    6244:	add	r3, r3, #456	; 0x1c8
    6248:	str	r3, [sp]
    624c:	add	r2, pc, r2
    6250:	ldr	r3, [pc, #80]	; 62a8 <log_oom_internal@plt+0x423c>
    6254:	add	r1, pc, r1
    6258:	bl	1fa0 <log_assert_failed_realm@plt>
    625c:	bl	1dcc <__stack_chk_fail@plt>
    6260:	ldrdeq	r3, [r1], -r8
    6264:			; <UNDEFINED> instruction: 0x000001bc
    6268:	andeq	r2, r0, r0, lsr #25
    626c:	andeq	r2, r0, r0, ror #24
    6270:	andeq	r1, r0, ip, lsl #20
    6274:	andeq	r1, r0, r4, asr #26
    6278:	andeq	r0, r0, fp, asr r1
    627c:	muleq	r1, ip, lr
    6280:	andeq	r2, r0, r0, lsl #24
    6284:			; <UNDEFINED> instruction: 0x00002bb0
    6288:	andeq	r2, r0, r8, lsr #23
    628c:	andeq	r1, r0, r4, asr r9
    6290:	ldrdeq	r2, [r0], -r4
    6294:	andeq	r1, r0, ip, lsl #25
    6298:	andeq	r0, r0, lr, lsr r1
    629c:	andeq	r1, r0, ip, lsr #18
    62a0:	andeq	r1, r0, r4, ror #24
    62a4:	andeq	r2, r0, r0, asr #22
    62a8:	andeq	r0, r0, pc, lsr r1
    62ac:	ldr	ip, [pc, #948]	; 6668 <log_oom_internal@plt+0x45fc>
    62b0:	ldr	r3, [pc, #948]	; 666c <log_oom_internal@plt+0x4600>
    62b4:	add	ip, pc, ip
    62b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    62bc:	sub	sp, sp, #64	; 0x40
    62c0:	ldr	r8, [ip, r3]
    62c4:	add	r3, sp, #20
    62c8:	add	r5, sp, #36	; 0x24
    62cc:	ldr	lr, [r8]
    62d0:	mov	r9, r2
    62d4:	str	r3, [sp, #8]
    62d8:	mov	r2, r1
    62dc:	ldr	r3, [pc, #908]	; 6670 <log_oom_internal@plt+0x4604>
    62e0:	ldr	r1, [pc, #908]	; 6674 <log_oom_internal@plt+0x4608>
    62e4:	mov	r4, #0
    62e8:	add	r7, sp, #48	; 0x30
    62ec:	str	r4, [sp]
    62f0:	str	r5, [sp, #12]
    62f4:	str	r7, [sp, #4]
    62f8:	add	r3, pc, r3
    62fc:	add	r1, pc, r1
    6300:	str	r4, [r5, #4]
    6304:	str	r4, [r5, #8]
    6308:	str	lr, [sp, #60]	; 0x3c
    630c:	str	r4, [sp, #48]	; 0x30
    6310:	str	r4, [sp, #52]	; 0x34
    6314:	str	r4, [sp, #56]	; 0x38
    6318:	str	r4, [sp, #20]
    631c:	str	r4, [sp, #36]	; 0x24
    6320:	bl	1d60 <bus_map_all_properties@plt>
    6324:	subs	r6, r0, #0
    6328:	blt	64cc <log_oom_internal@plt+0x4460>
    632c:	ldrb	r3, [r9]
    6330:	cmp	r3, #0
    6334:	bne	6448 <log_oom_internal@plt+0x43dc>
    6338:	ldr	r0, [sp, #36]	; 0x24
    633c:	mov	r3, #1
    6340:	cmp	r0, #0
    6344:	strb	r3, [r9]
    6348:	beq	6534 <log_oom_internal@plt+0x44c8>
    634c:	bl	1c64 <puts@plt>
    6350:	ldr	r3, [sp, #44]	; 0x2c
    6354:	cmp	r3, #0
    6358:	beq	63e4 <log_oom_internal@plt+0x4378>
    635c:	ldr	r3, [r3]
    6360:	cmp	r3, #0
    6364:	beq	63e4 <log_oom_internal@plt+0x4378>
    6368:	ldr	r1, [pc, #776]	; 6678 <log_oom_internal@plt+0x460c>
    636c:	mov	r0, #1
    6370:	add	r1, pc, r1
    6374:	bl	2048 <__printf_chk@plt>
    6378:	ldr	r6, [sp, #44]	; 0x2c
    637c:	cmp	r6, #0
    6380:	beq	63dc <log_oom_internal@plt+0x4370>
    6384:	ldr	r4, [r6]
    6388:	cmp	r4, #0
    638c:	beq	63dc <log_oom_internal@plt+0x4370>
    6390:	ldr	sl, [pc, #740]	; 667c <log_oom_internal@plt+0x4610>
    6394:	ldr	r9, [pc, #740]	; 6680 <log_oom_internal@plt+0x4614>
    6398:	add	sl, pc, sl
    639c:	add	r9, pc, r9
    63a0:	add	r6, r6, #4
    63a4:	ldr	r1, [sp, #40]	; 0x28
    63a8:	mov	r0, r4
    63ac:	bl	1c34 <strcmp_ptr@plt>
    63b0:	mov	r2, r4
    63b4:	cmp	r0, #0
    63b8:	moveq	r1, r9
    63bc:	movne	r1, sl
    63c0:	mov	r0, #1
    63c4:	bl	2048 <__printf_chk@plt>
    63c8:	cmp	r6, #0
    63cc:	beq	63dc <log_oom_internal@plt+0x4370>
    63d0:	ldr	r4, [r6], #4
    63d4:	cmp	r4, #0
    63d8:	bne	63a4 <log_oom_internal@plt+0x4338>
    63dc:	mov	r0, #10
    63e0:	bl	1c88 <putchar@plt>
    63e4:	ldr	r3, [pc, #664]	; 6684 <log_oom_internal@plt+0x4618>
    63e8:	add	r3, pc, r3
    63ec:	ldr	r4, [r3, #4]
    63f0:	cmp	r4, #0
    63f4:	beq	6454 <log_oom_internal@plt+0x43e8>
    63f8:	mov	r4, #0
    63fc:	ldr	r0, [sp, #44]	; 0x2c
    6400:	bl	1fb8 <strv_free@plt>
    6404:	ldr	r0, [sp, #20]
    6408:	mov	r3, #0
    640c:	cmp	r0, r3
    6410:	str	r3, [sp, #36]	; 0x24
    6414:	str	r3, [r5, #4]
    6418:	str	r3, [r5, #8]
    641c:	beq	6424 <log_oom_internal@plt+0x43b8>
    6420:	bl	1e68 <sd_bus_message_unref@plt>
    6424:	mov	r0, r7
    6428:	bl	1d18 <sd_bus_error_free@plt>
    642c:	ldr	r2, [sp, #60]	; 0x3c
    6430:	ldr	r3, [r8]
    6434:	mov	r0, r4
    6438:	cmp	r2, r3
    643c:	bne	6664 <log_oom_internal@plt+0x45f8>
    6440:	add	sp, sp, #64	; 0x40
    6444:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6448:	mov	r0, #10
    644c:	bl	1c88 <putchar@plt>
    6450:	b	6338 <log_oom_internal@plt+0x42cc>
    6454:	bl	1ca0 <columns@plt>
    6458:	cmp	r0, #21
    645c:	mov	r9, r0
    6460:	bhi	6550 <log_oom_internal@plt+0x44e4>
    6464:	ldr	r0, [pc, #540]	; 6688 <log_oom_internal@plt+0x461c>
    6468:	add	r0, pc, r0
    646c:	bl	1c64 <puts@plt>
    6470:	ldr	r6, [sp, #36]	; 0x24
    6474:	bl	5fd8 <log_oom_internal@plt+0x3f6c>
    6478:	str	r4, [sp, #24]
    647c:	str	r4, [sp, #28]
    6480:	str	r4, [sp, #32]
    6484:	mov	sl, r0
    6488:	bl	1ca0 <columns@plt>
    648c:	mov	r9, r0
    6490:	cmp	r6, #0
    6494:	beq	6620 <log_oom_internal@plt+0x45b4>
    6498:	ldrb	r3, [r6]
    649c:	cmp	r3, #0
    64a0:	ldreq	r6, [pc, #484]	; 668c <log_oom_internal@plt+0x4620>
    64a4:	addeq	r6, pc, r6
    64a8:	add	r0, sp, #24
    64ac:	bl	1c04 <sd_device_enumerator_new@plt>
    64b0:	cmp	r0, #0
    64b4:	bge	657c <log_oom_internal@plt+0x4510>
    64b8:	ldr	r0, [sp, #24]
    64bc:	cmp	r0, #0
    64c0:	beq	63f8 <log_oom_internal@plt+0x438c>
    64c4:	bl	2000 <sd_device_enumerator_unref@plt>
    64c8:	b	63f8 <log_oom_internal@plt+0x438c>
    64cc:	mov	r0, r4
    64d0:	bl	1cb8 <log_get_max_level_realm@plt>
    64d4:	cmp	r0, #2
    64d8:	rsble	r4, r6, #0
    64dc:	uxtble	r4, r4
    64e0:	rsble	r4, r4, #0
    64e4:	ble	63fc <log_oom_internal@plt+0x4390>
    64e8:	mov	r1, r6
    64ec:	mov	r0, r7
    64f0:	bl	1f40 <bus_error_message@plt>
    64f4:	ldr	r2, [pc, #404]	; 6690 <log_oom_internal@plt+0x4624>
    64f8:	ldr	r3, [pc, #404]	; 6694 <log_oom_internal@plt+0x4628>
    64fc:	add	r2, pc, r2
    6500:	str	r2, [sp, #4]
    6504:	add	r3, pc, r3
    6508:	ldr	r2, [pc, #392]	; 6698 <log_oom_internal@plt+0x462c>
    650c:	add	r3, r3, #496	; 0x1f0
    6510:	str	r3, [sp]
    6514:	mov	r1, r6
    6518:	ldr	r3, [pc, #380]	; 669c <log_oom_internal@plt+0x4630>
    651c:	add	r2, pc, r2
    6520:	str	r0, [sp, #8]
    6524:	mov	r0, #3
    6528:	bl	1fac <log_internal_realm@plt>
    652c:	mov	r4, r0
    6530:	b	63fc <log_oom_internal@plt+0x4390>
    6534:	ldr	r0, [pc, #356]	; 66a0 <log_oom_internal@plt+0x4634>
    6538:	add	r0, pc, r0
    653c:	bl	1c64 <puts@plt>
    6540:	ldr	r3, [sp, #44]	; 0x2c
    6544:	cmp	r3, #0
    6548:	bne	635c <log_oom_internal@plt+0x42f0>
    654c:	b	63e4 <log_oom_internal@plt+0x4378>
    6550:	ldr	r0, [pc, #332]	; 66a4 <log_oom_internal@plt+0x4638>
    6554:	sub	r9, r9, #21
    6558:	add	r0, pc, r0
    655c:	bl	1c64 <puts@plt>
    6560:	ldr	r6, [sp, #36]	; 0x24
    6564:	bl	5fd8 <log_oom_internal@plt+0x3f6c>
    6568:	str	r4, [sp, #24]
    656c:	str	r4, [sp, #28]
    6570:	str	r4, [sp, #32]
    6574:	mov	sl, r0
    6578:	b	6490 <log_oom_internal@plt+0x4424>
    657c:	ldr	r0, [sp, #24]
    6580:	bl	2060 <sd_device_enumerator_allow_uninitialized@plt>
    6584:	cmp	r0, #0
    6588:	blt	64b8 <log_oom_internal@plt+0x444c>
    658c:	ldr	r1, [pc, #276]	; 66a8 <log_oom_internal@plt+0x463c>
    6590:	mov	r0, r6
    6594:	add	r1, pc, r1
    6598:	bl	1f4c <strcmp@plt>
    659c:	ldr	r3, [sp, #24]
    65a0:	cmp	r0, #0
    65a4:	movne	r1, r6
    65a8:	beq	662c <log_oom_internal@plt+0x45c0>
    65ac:	mov	r0, r3
    65b0:	bl	1cc4 <sd_device_enumerator_add_match_tag@plt>
    65b4:	cmp	r0, #0
    65b8:	blt	64b8 <log_oom_internal@plt+0x444c>
    65bc:	ldr	r0, [sp, #24]
    65c0:	bl	1d3c <device_enumerator_scan_devices@plt>
    65c4:	cmp	r0, #0
    65c8:	blt	64b8 <log_oom_internal@plt+0x444c>
    65cc:	add	r1, sp, #28
    65d0:	ldr	r0, [sp, #24]
    65d4:	bl	1d48 <device_enumerator_get_devices@plt>
    65d8:	subs	r1, r0, #0
    65dc:	beq	65ec <log_oom_internal@plt+0x4580>
    65e0:	ldr	r3, [sp, #28]
    65e4:	cmp	r3, #0
    65e8:	bne	6638 <log_oom_internal@plt+0x45cc>
    65ec:	mov	r0, #2
    65f0:	bl	1dfc <special_glyph@plt>
    65f4:	ldr	r3, [pc, #176]	; 66ac <log_oom_internal@plt+0x4640>
    65f8:	ldr	r2, [pc, #176]	; 66b0 <log_oom_internal@plt+0x4644>
    65fc:	ldr	r1, [pc, #176]	; 66b4 <log_oom_internal@plt+0x4648>
    6600:	add	r3, pc, r3
    6604:	str	r3, [sp]
    6608:	add	r2, pc, r2
    660c:	add	r1, pc, r1
    6610:	mov	r3, r0
    6614:	mov	r0, #1
    6618:	bl	2048 <__printf_chk@plt>
    661c:	b	64b8 <log_oom_internal@plt+0x444c>
    6620:	ldr	r6, [pc, #144]	; 66b8 <log_oom_internal@plt+0x464c>
    6624:	add	r6, pc, r6
    6628:	b	64a8 <log_oom_internal@plt+0x443c>
    662c:	ldr	r1, [pc, #136]	; 66bc <log_oom_internal@plt+0x4650>
    6630:	add	r1, pc, r1
    6634:	b	65ac <log_oom_internal@plt+0x4540>
    6638:	ldr	ip, [pc, #128]	; 66c0 <log_oom_internal@plt+0x4654>
    663c:	ldr	r2, [pc, #128]	; 66c4 <log_oom_internal@plt+0x4658>
    6640:	add	ip, pc, ip
    6644:	add	r2, pc, r2
    6648:	str	sl, [sp, #12]
    664c:	stm	sp, {r2, ip}
    6650:	str	r9, [sp, #8]
    6654:	mov	r0, r6
    6658:	add	r2, sp, #32
    665c:	bl	29d8 <log_oom_internal@plt+0x96c>
    6660:	b	64b8 <log_oom_internal@plt+0x444c>
    6664:	bl	1dcc <__stack_chk_fail@plt>
    6668:	andeq	r3, r1, r4, asr fp
    666c:			; <UNDEFINED> instruction: 0x000001bc
    6670:	andeq	r3, r1, ip, ror #9
    6674:	andeq	r2, r0, r4, asr #12
    6678:	andeq	r2, r0, r0, lsr #21
    667c:	muleq	r0, r8, r6
    6680:	andeq	r2, r0, r4, asr sl
    6684:	andeq	r3, r1, r0, asr #24
    6688:	muleq	r0, r0, r9
    668c:	andeq	r1, r0, r8, ror #18
    6690:	ldrdeq	r2, [r0], -r4
    6694:	andeq	r1, r0, r0, ror #12
    6698:	muleq	r0, r4, r9
    669c:			; <UNDEFINED> instruction: 0x000002b6
    66a0:			; <UNDEFINED> instruction: 0x000027b0
    66a4:	andeq	r2, r0, r0, lsr #17
    66a8:	andeq	r1, r0, r8, ror r8
    66ac:	andeq	r2, r0, r8, lsl #16
    66b0:	muleq	r0, r4, r7
    66b4:	andeq	r1, r0, ip, ror r8
    66b8:	andeq	r1, r0, r8, ror #15
    66bc:	andeq	r1, r0, r8, lsl r8
    66c0:	andeq	r2, r0, ip, asr r7
    66c4:	andeq	r2, r0, r0, asr #15
    66c8:	ldr	r3, [pc, #728]	; 69a8 <log_oom_internal@plt+0x493c>
    66cc:	ldr	ip, [pc, #728]	; 69ac <log_oom_internal@plt+0x4940>
    66d0:	add	r3, pc, r3
    66d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    66d8:	subs	r7, r2, #0
    66dc:	ldr	r2, [r3, ip]
    66e0:	mov	r9, r0
    66e4:	mov	r0, r2
    66e8:	sub	sp, sp, #76	; 0x4c
    66ec:	ldr	r3, [r0]
    66f0:	str	r2, [sp, #36]	; 0x24
    66f4:	mov	r2, #0
    66f8:	strb	r2, [sp, #47]	; 0x2f
    66fc:	str	r3, [sp, #68]	; 0x44
    6700:	beq	68e4 <log_oom_internal@plt+0x4878>
    6704:	cmp	r1, #0
    6708:	mov	r5, r1
    670c:	beq	6910 <log_oom_internal@plt+0x48a4>
    6710:	ldr	r1, [pc, #664]	; 69b0 <log_oom_internal@plt+0x4944>
    6714:	ldr	r0, [r5]
    6718:	add	r1, pc, r1
    671c:	bl	1e08 <strstr@plt>
    6720:	ldr	r3, [pc, #652]	; 69b4 <log_oom_internal@plt+0x4948>
    6724:	mov	sl, r0
    6728:	ldr	r0, [pc, r3]
    672c:	bl	1fdc <pager_open@plt>
    6730:	cmp	r9, #1
    6734:	ble	684c <log_oom_internal@plt+0x47e0>
    6738:	ldr	r3, [pc, #632]	; 69b8 <log_oom_internal@plt+0x494c>
    673c:	ldr	fp, [pc, #632]	; 69bc <log_oom_internal@plt+0x4950>
    6740:	add	r3, pc, r3
    6744:	str	r3, [sp, #24]
    6748:	ldr	r3, [pc, #624]	; 69c0 <log_oom_internal@plt+0x4954>
    674c:	add	fp, pc, fp
    6750:	add	r3, pc, r3
    6754:	str	r3, [sp, #28]
    6758:	add	r3, sp, #52	; 0x34
    675c:	mov	r6, #1
    6760:	str	r3, [sp, #32]
    6764:	add	r8, sp, #56	; 0x38
    6768:	b	67a0 <log_oom_internal@plt+0x4734>
    676c:	bl	62ac <log_oom_internal@plt+0x4240>
    6770:	ldr	r3, [sp, #52]	; 0x34
    6774:	cmp	r0, #0
    6778:	blt	6840 <log_oom_internal@plt+0x47d4>
    677c:	cmp	r3, #0
    6780:	beq	678c <log_oom_internal@plt+0x4720>
    6784:	mov	r0, r3
    6788:	bl	1e68 <sd_bus_message_unref@plt>
    678c:	add	r6, r6, #1
    6790:	mov	r0, r8
    6794:	bl	1d18 <sd_bus_error_free@plt>
    6798:	cmp	r9, r6
    679c:	beq	688c <log_oom_internal@plt+0x4820>
    67a0:	ldr	r2, [pc, #540]	; 69c4 <log_oom_internal@plt+0x4958>
    67a4:	ldr	r3, [pc, #540]	; 69c8 <log_oom_internal@plt+0x495c>
    67a8:	ldr	r1, [r5, #4]!
    67ac:	ldr	r0, [sp, #32]
    67b0:	add	r2, pc, r2
    67b4:	add	r3, pc, r3
    67b8:	mov	r4, #0
    67bc:	str	r0, [sp, #8]
    67c0:	str	r1, [sp, #16]
    67c4:	str	r2, [sp, #12]
    67c8:	str	r3, [sp]
    67cc:	str	r8, [sp, #4]
    67d0:	mov	r3, fp
    67d4:	ldr	r2, [sp, #24]
    67d8:	ldr	r1, [sp, #28]
    67dc:	mov	r0, r7
    67e0:	str	r4, [sp, #56]	; 0x38
    67e4:	str	r4, [sp, #60]	; 0x3c
    67e8:	str	r4, [sp, #64]	; 0x40
    67ec:	str	r4, [sp, #52]	; 0x34
    67f0:	str	r4, [sp, #48]	; 0x30
    67f4:	bl	1f7c <sd_bus_call_method@plt>
    67f8:	cmp	r0, #0
    67fc:	blt	6894 <log_oom_internal@plt+0x4828>
    6800:	ldr	r1, [pc, #452]	; 69cc <log_oom_internal@plt+0x4960>
    6804:	add	r2, sp, #48	; 0x30
    6808:	add	r1, pc, r1
    680c:	ldr	r0, [sp, #52]	; 0x34
    6810:	bl	1eb0 <sd_bus_message_read@plt>
    6814:	cmp	r0, #0
    6818:	blt	68d4 <log_oom_internal@plt+0x4868>
    681c:	cmp	sl, #0
    6820:	add	r2, sp, #47	; 0x2f
    6824:	mov	r0, r7
    6828:	ldr	r1, [sp, #48]	; 0x30
    682c:	bne	676c <log_oom_internal@plt+0x4700>
    6830:	bl	499c <log_oom_internal@plt+0x2930>
    6834:	ldr	r3, [sp, #52]	; 0x34
    6838:	cmp	r0, #0
    683c:	bge	677c <log_oom_internal@plt+0x4710>
    6840:	mov	r4, r0
    6844:	mov	r0, r3
    6848:	b	68bc <log_oom_internal@plt+0x4850>
    684c:	cmp	sl, #0
    6850:	mov	r0, r7
    6854:	add	r2, sp, #47	; 0x2f
    6858:	beq	693c <log_oom_internal@plt+0x48d0>
    685c:	ldr	r1, [pc, #364]	; 69d0 <log_oom_internal@plt+0x4964>
    6860:	add	r1, pc, r1
    6864:	bl	62ac <log_oom_internal@plt+0x4240>
    6868:	mov	r4, r0
    686c:	ldr	r3, [sp, #36]	; 0x24
    6870:	ldr	r2, [sp, #68]	; 0x44
    6874:	mov	r0, r4
    6878:	ldr	r3, [r3]
    687c:	cmp	r2, r3
    6880:	bne	69a4 <log_oom_internal@plt+0x4938>
    6884:	add	sp, sp, #76	; 0x4c
    6888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    688c:	mov	r4, #0
    6890:	b	686c <log_oom_internal@plt+0x4800>
    6894:	str	r0, [sp, #24]
    6898:	mov	r0, r4
    689c:	bl	1cb8 <log_get_max_level_realm@plt>
    68a0:	ldr	r3, [sp, #24]
    68a4:	cmp	r0, #2
    68a8:	bgt	6950 <log_oom_internal@plt+0x48e4>
    68ac:	rsb	r4, r3, #0
    68b0:	ldr	r0, [sp, #52]	; 0x34
    68b4:	uxtb	r4, r4
    68b8:	rsb	r4, r4, #0
    68bc:	cmp	r0, #0
    68c0:	beq	68c8 <log_oom_internal@plt+0x485c>
    68c4:	bl	1e68 <sd_bus_message_unref@plt>
    68c8:	mov	r0, r8
    68cc:	bl	1d18 <sd_bus_error_free@plt>
    68d0:	b	686c <log_oom_internal@plt+0x4800>
    68d4:	bl	1eec <bus_log_parse_error@plt>
    68d8:	mov	r4, r0
    68dc:	ldr	r0, [sp, #52]	; 0x34
    68e0:	b	68bc <log_oom_internal@plt+0x4850>
    68e4:	ldr	r3, [pc, #232]	; 69d4 <log_oom_internal@plt+0x4968>
    68e8:	ldr	r2, [pc, #232]	; 69d8 <log_oom_internal@plt+0x496c>
    68ec:	add	r3, pc, r3
    68f0:	ldr	r1, [pc, #228]	; 69dc <log_oom_internal@plt+0x4970>
    68f4:	add	r3, r3, #520	; 0x208
    68f8:	str	r3, [sp]
    68fc:	mov	r0, r7
    6900:	mov	r3, #948	; 0x3b4
    6904:	add	r2, pc, r2
    6908:	add	r1, pc, r1
    690c:	bl	1fa0 <log_assert_failed_realm@plt>
    6910:	ldr	r3, [pc, #200]	; 69e0 <log_oom_internal@plt+0x4974>
    6914:	mov	r0, r1
    6918:	add	r3, pc, r3
    691c:	ldr	r2, [pc, #192]	; 69e4 <log_oom_internal@plt+0x4978>
    6920:	ldr	r1, [pc, #192]	; 69e8 <log_oom_internal@plt+0x497c>
    6924:	add	r3, r3, #520	; 0x208
    6928:	str	r3, [sp]
    692c:	add	r2, pc, r2
    6930:	ldr	r3, [pc, #180]	; 69ec <log_oom_internal@plt+0x4980>
    6934:	add	r1, pc, r1
    6938:	bl	1fa0 <log_assert_failed_realm@plt>
    693c:	ldr	r1, [pc, #172]	; 69f0 <log_oom_internal@plt+0x4984>
    6940:	add	r1, pc, r1
    6944:	bl	499c <log_oom_internal@plt+0x2930>
    6948:	mov	r4, r0
    694c:	b	686c <log_oom_internal@plt+0x4800>
    6950:	mov	r1, r3
    6954:	mov	r0, r8
    6958:	bl	1f40 <bus_error_message@plt>
    695c:	ldr	r2, [pc, #144]	; 69f4 <log_oom_internal@plt+0x4988>
    6960:	ldr	ip, [pc, #144]	; 69f8 <log_oom_internal@plt+0x498c>
    6964:	add	r2, pc, r2
    6968:	add	r2, r2, #532	; 0x214
    696c:	ldr	r3, [sp, #24]
    6970:	str	r2, [sp]
    6974:	ldr	r2, [pc, #128]	; 69fc <log_oom_internal@plt+0x4990>
    6978:	add	ip, pc, ip
    697c:	mov	r1, r3
    6980:	str	ip, [sp, #4]
    6984:	ldr	r3, [pc, #116]	; 6a00 <log_oom_internal@plt+0x4994>
    6988:	add	r2, pc, r2
    698c:	str	r0, [sp, #8]
    6990:	mov	r0, #3
    6994:	bl	1fac <log_internal_realm@plt>
    6998:	mov	r4, r0
    699c:	ldr	r0, [sp, #52]	; 0x34
    69a0:	b	68bc <log_oom_internal@plt+0x4850>
    69a4:	bl	1dcc <__stack_chk_fail@plt>
    69a8:	andeq	r3, r1, r8, lsr r7
    69ac:			; <UNDEFINED> instruction: 0x000001bc
    69b0:	andeq	r2, r0, r8, asr fp
    69b4:	andeq	r3, r1, r0, lsl #18
    69b8:	andeq	r2, r0, r8, ror #3
    69bc:			; <UNDEFINED> instruction: 0x000021bc
    69c0:	strdeq	r2, [r0], -r0
    69c4:	andeq	r2, r0, r8, lsl #16
    69c8:	andeq	r2, r0, ip, lsl #13
    69cc:	andeq	r2, r0, r8, lsl #11
    69d0:			; <UNDEFINED> instruction: 0x000025bc
    69d4:	andeq	r1, r0, r8, ror r2
    69d8:	andeq	r1, r0, ip, lsr #11
    69dc:	strdeq	r1, [r0], -r4
    69e0:	andeq	r1, r0, ip, asr #4
    69e4:	andeq	r1, r0, r4, lsl #11
    69e8:	andeq	r1, r0, ip, asr #31
    69ec:			; <UNDEFINED> instruction: 0x000003b5
    69f0:	andeq	r1, r0, r8, ror #31
    69f4:	andeq	r1, r0, r0, lsl #4
    69f8:	ldrdeq	r2, [r0], -r0
    69fc:	andeq	r1, r0, r8, lsr #10
    6a00:	ldrdeq	r0, [r0], -r2
    6a04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6a08:	sub	sp, sp, #412	; 0x19c
    6a0c:	ldr	r6, [pc, #928]	; 6db4 <log_oom_internal@plt+0x4d48>
    6a10:	ldr	r3, [pc, #928]	; 6db8 <log_oom_internal@plt+0x4d4c>
    6a14:	add	r6, pc, r6
    6a18:	mov	r5, #0
    6a1c:	ldr	r3, [r6, r3]
    6a20:	add	r4, sp, #56	; 0x38
    6a24:	str	r3, [sp, #32]
    6a28:	ldr	r3, [r3]
    6a2c:	mov	r9, r1
    6a30:	mov	r8, r0
    6a34:	mov	r1, r5
    6a38:	mov	sl, r2
    6a3c:	mov	r0, r4
    6a40:	mov	r2, #48	; 0x30
    6a44:	str	r3, [sp, #404]	; 0x194
    6a48:	str	r5, [sp, #44]	; 0x2c
    6a4c:	str	r5, [sp, #48]	; 0x30
    6a50:	str	r5, [sp, #52]	; 0x34
    6a54:	str	r5, [sp, #40]	; 0x28
    6a58:	bl	1cac <memset@plt>
    6a5c:	add	r1, sp, #40	; 0x28
    6a60:	ldr	r3, [pc, #852]	; 6dbc <log_oom_internal@plt+0x4d50>
    6a64:	str	r1, [sp, #8]
    6a68:	ldr	r1, [pc, #848]	; 6dc0 <log_oom_internal@plt+0x4d54>
    6a6c:	mov	ip, #2
    6a70:	add	r3, pc, r3
    6a74:	add	r7, sp, #44	; 0x2c
    6a78:	mov	r2, r9
    6a7c:	str	r4, [sp, #12]
    6a80:	mov	r0, r8
    6a84:	add	r3, r3, #64	; 0x40
    6a88:	str	r7, [sp, #4]
    6a8c:	str	ip, [sp]
    6a90:	add	r1, pc, r1
    6a94:	bl	1d60 <bus_map_all_properties@plt>
    6a98:	subs	r9, r0, #0
    6a9c:	blt	6d08 <log_oom_internal@plt+0x4c9c>
    6aa0:	ldrb	r3, [sl]
    6aa4:	cmp	r3, #0
    6aa8:	bne	6cfc <log_oom_internal@plt+0x4c90>
    6aac:	ldr	r2, [sp, #64]	; 0x40
    6ab0:	mov	r0, #1
    6ab4:	cmp	r2, #0
    6ab8:	strb	r0, [sl]
    6abc:	ldr	r3, [sp, #56]	; 0x38
    6ac0:	beq	6d9c <log_oom_internal@plt+0x4d30>
    6ac4:	ldr	r1, [pc, #760]	; 6dc4 <log_oom_internal@plt+0x4d58>
    6ac8:	add	r1, pc, r1
    6acc:	bl	2048 <__printf_chk@plt>
    6ad0:	ldrd	r2, [r4, #16]
    6ad4:	mov	r1, #256	; 0x100
    6ad8:	add	r0, sp, #148	; 0x94
    6adc:	bl	1d00 <format_timestamp_relative@plt>
    6ae0:	ldrd	r2, [r4, #16]
    6ae4:	mov	r1, #38	; 0x26
    6ae8:	mov	r5, r0
    6aec:	add	r0, sp, #108	; 0x6c
    6af0:	bl	1e20 <format_timestamp@plt>
    6af4:	cmp	r5, #0
    6af8:	beq	6d7c <log_oom_internal@plt+0x4d10>
    6afc:	ldr	r1, [pc, #708]	; 6dc8 <log_oom_internal@plt+0x4d5c>
    6b00:	mov	r2, r0
    6b04:	mov	r3, r5
    6b08:	add	r1, pc, r1
    6b0c:	mov	r0, #1
    6b10:	bl	2048 <__printf_chk@plt>
    6b14:	ldr	r2, [sp, #88]	; 0x58
    6b18:	cmp	r2, #0
    6b1c:	beq	6b3c <log_oom_internal@plt+0x4ad0>
    6b20:	ldrb	r3, [r2]
    6b24:	cmp	r3, #0
    6b28:	beq	6b3c <log_oom_internal@plt+0x4ad0>
    6b2c:	ldr	r1, [pc, #664]	; 6dcc <log_oom_internal@plt+0x4d60>
    6b30:	mov	r0, #1
    6b34:	add	r1, pc, r1
    6b38:	bl	2048 <__printf_chk@plt>
    6b3c:	ldr	r3, [sp, #92]	; 0x5c
    6b40:	cmp	r3, #0
    6b44:	beq	6bec <log_oom_internal@plt+0x4b80>
    6b48:	ldr	r3, [r3]
    6b4c:	cmp	r3, #0
    6b50:	beq	6bec <log_oom_internal@plt+0x4b80>
    6b54:	ldr	r1, [pc, #628]	; 6dd0 <log_oom_internal@plt+0x4d64>
    6b58:	mov	r0, #1
    6b5c:	add	r1, pc, r1
    6b60:	bl	2048 <__printf_chk@plt>
    6b64:	ldr	r5, [sp, #92]	; 0x5c
    6b68:	cmp	r5, #0
    6b6c:	beq	6be4 <log_oom_internal@plt+0x4b78>
    6b70:	ldr	r9, [r5]
    6b74:	cmp	r9, #0
    6b78:	beq	6be4 <log_oom_internal@plt+0x4b78>
    6b7c:	ldr	r3, [pc, #592]	; 6dd4 <log_oom_internal@plt+0x4d68>
    6b80:	ldr	fp, [pc, #592]	; 6dd8 <log_oom_internal@plt+0x4d6c>
    6b84:	ldr	sl, [pc, #592]	; 6ddc <log_oom_internal@plt+0x4d70>
    6b88:	add	r3, pc, r3
    6b8c:	str	r4, [sp, #36]	; 0x24
    6b90:	add	fp, pc, fp
    6b94:	mov	r4, r9
    6b98:	add	sl, pc, sl
    6b9c:	add	r5, r5, #4
    6ba0:	mov	r9, r3
    6ba4:	ldr	r1, [sp, #96]	; 0x60
    6ba8:	mov	r0, r4
    6bac:	bl	1c34 <strcmp_ptr@plt>
    6bb0:	mov	r3, r4
    6bb4:	mov	r1, r9
    6bb8:	cmp	r0, #0
    6bbc:	movne	r2, fp
    6bc0:	moveq	r2, sl
    6bc4:	mov	r0, #1
    6bc8:	bl	2048 <__printf_chk@plt>
    6bcc:	cmp	r5, #0
    6bd0:	beq	6be0 <log_oom_internal@plt+0x4b74>
    6bd4:	ldr	r4, [r5], #4
    6bd8:	cmp	r4, #0
    6bdc:	bne	6ba4 <log_oom_internal@plt+0x4b38>
    6be0:	ldr	r4, [sp, #36]	; 0x24
    6be4:	mov	r0, #10
    6be8:	bl	1c88 <putchar@plt>
    6bec:	ldrb	r3, [sp, #60]	; 0x3c
    6bf0:	cmp	r3, #0
    6bf4:	beq	6d70 <log_oom_internal@plt+0x4d04>
    6bf8:	ldr	r2, [pc, #480]	; 6de0 <log_oom_internal@plt+0x4d74>
    6bfc:	add	r2, pc, r2
    6c00:	ldr	r1, [pc, #476]	; 6de4 <log_oom_internal@plt+0x4d78>
    6c04:	mov	r0, #1
    6c08:	add	r1, pc, r1
    6c0c:	bl	2048 <__printf_chk@plt>
    6c10:	ldr	r2, [sp, #100]	; 0x64
    6c14:	cmp	r2, #0
    6c18:	moveq	r5, r2
    6c1c:	beq	6cac <log_oom_internal@plt+0x4c40>
    6c20:	ldr	r1, [pc, #448]	; 6de8 <log_oom_internal@plt+0x4d7c>
    6c24:	mov	r0, #1
    6c28:	add	r1, pc, r1
    6c2c:	bl	2048 <__printf_chk@plt>
    6c30:	mov	r0, r8
    6c34:	mov	r2, #0
    6c38:	ldr	r1, [sp, #100]	; 0x64
    6c3c:	bl	6024 <log_oom_internal@plt+0x3fb8>
    6c40:	ldr	r1, [pc, #420]	; 6dec <log_oom_internal@plt+0x4d80>
    6c44:	ldr	r2, [pc, #420]	; 6df0 <log_oom_internal@plt+0x4d84>
    6c48:	ldr	r3, [pc, #420]	; 6df4 <log_oom_internal@plt+0x4d88>
    6c4c:	ldr	r1, [r6, r1]
    6c50:	add	r2, pc, r2
    6c54:	add	r3, pc, r3
    6c58:	ldr	r5, [r2, #20]
    6c5c:	ldr	fp, [r3, #28]
    6c60:	ldr	r6, [r1]
    6c64:	ldr	sl, [sp, #100]	; 0x64
    6c68:	ldrd	r8, [r4, #24]
    6c6c:	bl	5fd8 <log_oom_internal@plt+0x3f6c>
    6c70:	mov	r3, #0
    6c74:	mov	ip, #1
    6c78:	mov	r2, r5
    6c7c:	str	fp, [sp, #8]
    6c80:	strd	r8, [sp]
    6c84:	mov	r1, sl
    6c88:	str	r3, [sp, #28]
    6c8c:	str	r3, [sp, #12]
    6c90:	str	ip, [sp, #24]
    6c94:	str	ip, [sp, #20]
    6c98:	mov	r5, r3
    6c9c:	orr	r0, r0, #64	; 0x40
    6ca0:	str	r0, [sp, #16]
    6ca4:	mov	r0, r6
    6ca8:	bl	2030 <show_journal_by_unit@plt>
    6cac:	ldr	r0, [sp, #92]	; 0x5c
    6cb0:	bl	1fb8 <strv_free@plt>
    6cb4:	mov	r0, r4
    6cb8:	mov	r2, #48	; 0x30
    6cbc:	mov	r1, #0
    6cc0:	bl	1cac <memset@plt>
    6cc4:	ldr	r0, [sp, #40]	; 0x28
    6cc8:	cmp	r0, #0
    6ccc:	beq	6cd4 <log_oom_internal@plt+0x4c68>
    6cd0:	bl	1e68 <sd_bus_message_unref@plt>
    6cd4:	mov	r0, r7
    6cd8:	bl	1d18 <sd_bus_error_free@plt>
    6cdc:	ldr	r3, [sp, #32]
    6ce0:	ldr	r2, [sp, #404]	; 0x194
    6ce4:	mov	r0, r5
    6ce8:	ldr	r3, [r3]
    6cec:	cmp	r2, r3
    6cf0:	bne	6db0 <log_oom_internal@plt+0x4d44>
    6cf4:	add	sp, sp, #412	; 0x19c
    6cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6cfc:	mov	r0, #10
    6d00:	bl	1c88 <putchar@plt>
    6d04:	b	6aac <log_oom_internal@plt+0x4a40>
    6d08:	mov	r0, r5
    6d0c:	bl	1cb8 <log_get_max_level_realm@plt>
    6d10:	cmp	r0, #2
    6d14:	rsble	r5, r9, #0
    6d18:	uxtble	r5, r5
    6d1c:	rsble	r5, r5, #0
    6d20:	ble	6cac <log_oom_internal@plt+0x4c40>
    6d24:	mov	r1, r9
    6d28:	mov	r0, r7
    6d2c:	bl	1f40 <bus_error_message@plt>
    6d30:	ldr	r2, [pc, #192]	; 6df8 <log_oom_internal@plt+0x4d8c>
    6d34:	ldr	r3, [pc, #192]	; 6dfc <log_oom_internal@plt+0x4d90>
    6d38:	add	r2, pc, r2
    6d3c:	str	r2, [sp, #4]
    6d40:	add	r3, pc, r3
    6d44:	ldr	r2, [pc, #180]	; 6e00 <log_oom_internal@plt+0x4d94>
    6d48:	add	r3, r3, #544	; 0x220
    6d4c:	str	r3, [sp]
    6d50:	mov	r1, r9
    6d54:	mov	r3, #620	; 0x26c
    6d58:	add	r2, pc, r2
    6d5c:	str	r0, [sp, #8]
    6d60:	mov	r0, #3
    6d64:	bl	1fac <log_internal_realm@plt>
    6d68:	mov	r5, r0
    6d6c:	b	6cac <log_oom_internal@plt+0x4c40>
    6d70:	ldr	r2, [pc, #140]	; 6e04 <log_oom_internal@plt+0x4d98>
    6d74:	add	r2, pc, r2
    6d78:	b	6c00 <log_oom_internal@plt+0x4b94>
    6d7c:	cmp	r0, #0
    6d80:	beq	6b14 <log_oom_internal@plt+0x4aa8>
    6d84:	ldr	r1, [pc, #124]	; 6e08 <log_oom_internal@plt+0x4d9c>
    6d88:	mov	r2, r0
    6d8c:	add	r1, pc, r1
    6d90:	mov	r0, #1
    6d94:	bl	2048 <__printf_chk@plt>
    6d98:	b	6b14 <log_oom_internal@plt+0x4aa8>
    6d9c:	ldr	r1, [pc, #104]	; 6e0c <log_oom_internal@plt+0x4da0>
    6da0:	mov	r2, r3
    6da4:	add	r1, pc, r1
    6da8:	bl	2048 <__printf_chk@plt>
    6dac:	b	6ad0 <log_oom_internal@plt+0x4a64>
    6db0:	bl	1dcc <__stack_chk_fail@plt>
    6db4:	strdeq	r3, [r1], -r4
    6db8:			; <UNDEFINED> instruction: 0x000001bc
    6dbc:	andeq	r2, r1, r4, ror sp
    6dc0:			; <UNDEFINED> instruction: 0x00001eb0
    6dc4:	andeq	r2, r0, r4, lsr #7
    6dc8:	andeq	r2, r0, r4, ror r3
    6dcc:	muleq	r0, r4, r3
    6dd0:			; <UNDEFINED> instruction: 0x000022b4
    6dd4:	andeq	r2, r0, r8, lsl r3
    6dd8:	andeq	r2, r0, r4, ror #5
    6ddc:	andeq	r2, r0, r8, asr #5
    6de0:	andeq	r2, r0, r8, ror #4
    6de4:	andeq	r2, r0, r0, lsr #5
    6de8:	muleq	r0, r0, r2
    6dec:	ldrdeq	r0, [r0], -r4
    6df0:	ldrdeq	r3, [r1], -r8
    6df4:	andeq	r3, r1, r8, lsr #7
    6df8:	muleq	r0, r8, r0
    6dfc:	andeq	r0, r0, r4, lsr #28
    6e00:	andeq	r1, r0, r8, asr r1
    6e04:	strdeq	r2, [r0], -r4
    6e08:	andeq	r2, r0, r4, lsl #2
    6e0c:	ldrdeq	r2, [r0], -r4
    6e10:	ldr	r3, [pc, #876]	; 7184 <log_oom_internal@plt+0x5118>
    6e14:	ldr	ip, [pc, #876]	; 7188 <log_oom_internal@plt+0x511c>
    6e18:	add	r3, pc, r3
    6e1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6e20:	subs	r7, r2, #0
    6e24:	ldr	r2, [r3, ip]
    6e28:	mov	r9, r0
    6e2c:	mov	r0, r2
    6e30:	sub	sp, sp, #76	; 0x4c
    6e34:	ldr	r3, [r0]
    6e38:	str	r2, [sp, #36]	; 0x24
    6e3c:	mov	r2, #0
    6e40:	strb	r2, [sp, #43]	; 0x2b
    6e44:	str	r3, [sp, #68]	; 0x44
    6e48:	beq	7070 <log_oom_internal@plt+0x5004>
    6e4c:	cmp	r1, #0
    6e50:	mov	r5, r1
    6e54:	beq	70a8 <log_oom_internal@plt+0x503c>
    6e58:	ldr	r1, [pc, #812]	; 718c <log_oom_internal@plt+0x5120>
    6e5c:	ldr	r0, [r5]
    6e60:	add	r1, pc, r1
    6e64:	bl	1e08 <strstr@plt>
    6e68:	ldr	r3, [pc, #800]	; 7190 <log_oom_internal@plt+0x5124>
    6e6c:	mov	sl, r0
    6e70:	ldr	r0, [pc, r3]
    6e74:	bl	1fdc <pager_open@plt>
    6e78:	cmp	r9, #1
    6e7c:	ble	6fac <log_oom_internal@plt+0x4f40>
    6e80:	ldr	r3, [pc, #780]	; 7194 <log_oom_internal@plt+0x5128>
    6e84:	add	r5, r5, #4
    6e88:	add	r3, pc, r3
    6e8c:	str	r3, [sp, #24]
    6e90:	ldr	r3, [pc, #768]	; 7198 <log_oom_internal@plt+0x512c>
    6e94:	mov	r6, #1
    6e98:	add	r3, pc, r3
    6e9c:	str	r3, [sp, #28]
    6ea0:	ldr	r3, [pc, #756]	; 719c <log_oom_internal@plt+0x5130>
    6ea4:	add	fp, sp, #44	; 0x2c
    6ea8:	add	r3, pc, r3
    6eac:	str	r3, [sp, #32]
    6eb0:	add	r8, sp, #56	; 0x38
    6eb4:	b	6ef0 <log_oom_internal@plt+0x4e84>
    6eb8:	bl	6a04 <log_oom_internal@plt+0x4998>
    6ebc:	cmp	r0, #0
    6ec0:	ldr	r3, [sp, #52]	; 0x34
    6ec4:	blt	709c <log_oom_internal@plt+0x5030>
    6ec8:	cmp	r3, #0
    6ecc:	beq	6ed8 <log_oom_internal@plt+0x4e6c>
    6ed0:	mov	r0, r3
    6ed4:	bl	1e68 <sd_bus_message_unref@plt>
    6ed8:	add	r6, r6, #1
    6edc:	mov	r0, r8
    6ee0:	bl	1d18 <sd_bus_error_free@plt>
    6ee4:	cmp	r9, r6
    6ee8:	add	r5, r5, #4
    6eec:	beq	6fec <log_oom_internal@plt+0x4f80>
    6ef0:	mov	r4, #0
    6ef4:	str	r4, [sp, #4]
    6ef8:	str	r4, [sp]
    6efc:	mov	r3, r4
    6f00:	mov	r2, r4
    6f04:	mov	r1, fp
    6f08:	mov	r0, r5
    6f0c:	str	r4, [sp, #56]	; 0x38
    6f10:	str	r4, [sp, #60]	; 0x3c
    6f14:	str	r4, [sp, #64]	; 0x40
    6f18:	str	r4, [sp, #52]	; 0x34
    6f1c:	str	r4, [sp, #48]	; 0x30
    6f20:	bl	1c70 <get_user_creds@plt>
    6f24:	cmp	r0, #0
    6f28:	blt	6ff4 <log_oom_internal@plt+0x4f88>
    6f2c:	ldr	r3, [pc, #620]	; 71a0 <log_oom_internal@plt+0x5134>
    6f30:	ldr	r2, [pc, #620]	; 71a4 <log_oom_internal@plt+0x5138>
    6f34:	ldr	r1, [sp, #44]	; 0x2c
    6f38:	add	r3, pc, r3
    6f3c:	add	r2, pc, r2
    6f40:	str	r3, [sp]
    6f44:	add	r3, sp, #52	; 0x34
    6f48:	str	r1, [sp, #16]
    6f4c:	str	r2, [sp, #12]
    6f50:	str	r3, [sp, #8]
    6f54:	str	r8, [sp, #4]
    6f58:	ldr	r3, [sp, #24]
    6f5c:	ldr	r2, [sp, #28]
    6f60:	ldr	r1, [sp, #32]
    6f64:	mov	r0, r7
    6f68:	bl	1f7c <sd_bus_call_method@plt>
    6f6c:	cmp	r0, #0
    6f70:	blt	7034 <log_oom_internal@plt+0x4fc8>
    6f74:	ldr	r1, [pc, #556]	; 71a8 <log_oom_internal@plt+0x513c>
    6f78:	add	r2, sp, #48	; 0x30
    6f7c:	add	r1, pc, r1
    6f80:	ldr	r0, [sp, #52]	; 0x34
    6f84:	bl	1eb0 <sd_bus_message_read@plt>
    6f88:	cmp	r0, #0
    6f8c:	blt	7060 <log_oom_internal@plt+0x4ff4>
    6f90:	cmp	sl, #0
    6f94:	add	r2, sp, #43	; 0x2b
    6f98:	mov	r0, r7
    6f9c:	ldr	r1, [sp, #48]	; 0x30
    6fa0:	bne	6eb8 <log_oom_internal@plt+0x4e4c>
    6fa4:	bl	499c <log_oom_internal@plt+0x2930>
    6fa8:	b	6ebc <log_oom_internal@plt+0x4e50>
    6fac:	cmp	sl, #0
    6fb0:	mov	r0, r7
    6fb4:	add	r2, sp, #43	; 0x2b
    6fb8:	beq	70d4 <log_oom_internal@plt+0x5068>
    6fbc:	ldr	r1, [pc, #488]	; 71ac <log_oom_internal@plt+0x5140>
    6fc0:	add	r1, pc, r1
    6fc4:	bl	6a04 <log_oom_internal@plt+0x4998>
    6fc8:	mov	r4, r0
    6fcc:	ldr	r3, [sp, #36]	; 0x24
    6fd0:	ldr	r2, [sp, #68]	; 0x44
    6fd4:	mov	r0, r4
    6fd8:	ldr	r3, [r3]
    6fdc:	cmp	r2, r3
    6fe0:	bne	7180 <log_oom_internal@plt+0x5114>
    6fe4:	add	sp, sp, #76	; 0x4c
    6fe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6fec:	mov	r4, #0
    6ff0:	b	6fcc <log_oom_internal@plt+0x4f60>
    6ff4:	str	r0, [sp, #24]
    6ff8:	mov	r0, r4
    6ffc:	bl	1cb8 <log_get_max_level_realm@plt>
    7000:	ldr	r1, [sp, #24]
    7004:	cmp	r0, #2
    7008:	bgt	70e8 <log_oom_internal@plt+0x507c>
    700c:	rsb	r4, r1, #0
    7010:	ldr	r0, [sp, #52]	; 0x34
    7014:	uxtb	r4, r4
    7018:	rsb	r4, r4, #0
    701c:	cmp	r0, #0
    7020:	beq	7028 <log_oom_internal@plt+0x4fbc>
    7024:	bl	1e68 <sd_bus_message_unref@plt>
    7028:	mov	r0, r8
    702c:	bl	1d18 <sd_bus_error_free@plt>
    7030:	b	6fcc <log_oom_internal@plt+0x4f60>
    7034:	str	r0, [sp, #24]
    7038:	mov	r0, r4
    703c:	bl	1cb8 <log_get_max_level_realm@plt>
    7040:	ldr	r3, [sp, #24]
    7044:	cmp	r0, #2
    7048:	bgt	712c <log_oom_internal@plt+0x50c0>
    704c:	rsb	r4, r3, #0
    7050:	ldr	r0, [sp, #52]	; 0x34
    7054:	uxtb	r4, r4
    7058:	rsb	r4, r4, #0
    705c:	b	701c <log_oom_internal@plt+0x4fb0>
    7060:	bl	1eec <bus_log_parse_error@plt>
    7064:	mov	r4, r0
    7068:	ldr	r0, [sp, #52]	; 0x34
    706c:	b	701c <log_oom_internal@plt+0x4fb0>
    7070:	ldr	r3, [pc, #312]	; 71b0 <log_oom_internal@plt+0x5144>
    7074:	ldr	r2, [pc, #312]	; 71b4 <log_oom_internal@plt+0x5148>
    7078:	add	r3, pc, r3
    707c:	ldr	r1, [pc, #308]	; 71b8 <log_oom_internal@plt+0x514c>
    7080:	add	r3, r3, #568	; 0x238
    7084:	str	r3, [sp]
    7088:	mov	r0, r7
    708c:	ldr	r3, [pc, #296]	; 71bc <log_oom_internal@plt+0x5150>
    7090:	add	r2, pc, r2
    7094:	add	r1, pc, r1
    7098:	bl	1fa0 <log_assert_failed_realm@plt>
    709c:	mov	r4, r0
    70a0:	mov	r0, r3
    70a4:	b	701c <log_oom_internal@plt+0x4fb0>
    70a8:	ldr	r3, [pc, #272]	; 71c0 <log_oom_internal@plt+0x5154>
    70ac:	mov	r0, r1
    70b0:	add	r3, pc, r3
    70b4:	ldr	r2, [pc, #264]	; 71c4 <log_oom_internal@plt+0x5158>
    70b8:	ldr	r1, [pc, #264]	; 71c8 <log_oom_internal@plt+0x515c>
    70bc:	add	r3, r3, #568	; 0x238
    70c0:	str	r3, [sp]
    70c4:	add	r2, pc, r2
    70c8:	ldr	r3, [pc, #252]	; 71cc <log_oom_internal@plt+0x5160>
    70cc:	add	r1, pc, r1
    70d0:	bl	1fa0 <log_assert_failed_realm@plt>
    70d4:	ldr	r1, [pc, #244]	; 71d0 <log_oom_internal@plt+0x5164>
    70d8:	add	r1, pc, r1
    70dc:	bl	499c <log_oom_internal@plt+0x2930>
    70e0:	mov	r4, r0
    70e4:	b	6fcc <log_oom_internal@plt+0x4f60>
    70e8:	ldr	r2, [pc, #228]	; 71d4 <log_oom_internal@plt+0x5168>
    70ec:	ldr	r3, [pc, #228]	; 71d8 <log_oom_internal@plt+0x516c>
    70f0:	add	r2, pc, r2
    70f4:	ldr	r0, [r5]
    70f8:	add	r3, pc, r3
    70fc:	str	r2, [sp, #4]
    7100:	ldr	r2, [pc, #212]	; 71dc <log_oom_internal@plt+0x5170>
    7104:	add	r3, r3, #580	; 0x244
    7108:	str	r0, [sp, #8]
    710c:	str	r3, [sp]
    7110:	add	r2, pc, r2
    7114:	ldr	r3, [pc, #196]	; 71e0 <log_oom_internal@plt+0x5174>
    7118:	mov	r0, #3
    711c:	bl	1fac <log_internal_realm@plt>
    7120:	mov	r4, r0
    7124:	ldr	r0, [sp, #52]	; 0x34
    7128:	b	701c <log_oom_internal@plt+0x4fb0>
    712c:	mov	r1, r3
    7130:	mov	r0, r8
    7134:	bl	1f40 <bus_error_message@plt>
    7138:	ldr	r2, [pc, #164]	; 71e4 <log_oom_internal@plt+0x5178>
    713c:	ldr	ip, [pc, #164]	; 71e8 <log_oom_internal@plt+0x517c>
    7140:	add	r2, pc, r2
    7144:	add	r2, r2, #580	; 0x244
    7148:	ldr	r3, [sp, #24]
    714c:	str	r2, [sp]
    7150:	ldr	r2, [pc, #148]	; 71ec <log_oom_internal@plt+0x5180>
    7154:	add	ip, pc, ip
    7158:	mov	r1, r3
    715c:	str	ip, [sp, #4]
    7160:	ldr	r3, [pc, #136]	; 71f0 <log_oom_internal@plt+0x5184>
    7164:	add	r2, pc, r2
    7168:	str	r0, [sp, #8]
    716c:	mov	r0, #3
    7170:	bl	1fac <log_internal_realm@plt>
    7174:	mov	r4, r0
    7178:	ldr	r0, [sp, #52]	; 0x34
    717c:	b	701c <log_oom_internal@plt+0x4fb0>
    7180:	bl	1dcc <__stack_chk_fail@plt>
    7184:	strdeq	r2, [r1], -r0
    7188:			; <UNDEFINED> instruction: 0x000001bc
    718c:	andeq	r2, r0, r0, lsl r4
    7190:			; <UNDEFINED> instruction: 0x000131b8
    7194:	andeq	r1, r0, r0, lsl #21
    7198:	muleq	r0, r0, sl
    719c:	muleq	r0, r8, sl
    71a0:	andeq	r1, r0, r4, asr #31
    71a4:	strdeq	r1, [r0], -r4
    71a8:	andeq	r1, r0, r4, lsl lr
    71ac:	andeq	r1, r0, r8, lsl pc
    71b0:	andeq	r0, r0, ip, ror #21
    71b4:	andeq	r0, r0, r0, lsr #28
    71b8:	andeq	r1, r0, r8, ror #16
    71bc:	andeq	r0, r0, sl, ror r3
    71c0:			; <UNDEFINED> instruction: 0x00000ab4
    71c4:	andeq	r0, r0, ip, ror #27
    71c8:	andeq	r1, r0, r4, lsr r8
    71cc:	andeq	r0, r0, fp, ror r3
    71d0:	andeq	r1, r0, r0, asr r8
    71d4:	andeq	r1, r0, r4, ror r9
    71d8:	andeq	r0, r0, ip, ror #20
    71dc:	andeq	r0, r0, r0, lsr #27
    71e0:	muleq	r0, r2, r3
    71e4:	andeq	r0, r0, r4, lsr #20
    71e8:			; <UNDEFINED> instruction: 0x00001db0
    71ec:	andeq	r0, r0, ip, asr #26
    71f0:	muleq	r0, sp, r3
    71f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    71f8:	sub	sp, sp, #460	; 0x1cc
    71fc:	ldr	r8, [pc, #1336]	; 773c <log_oom_internal@plt+0x56d0>
    7200:	ldr	r3, [pc, #1336]	; 7740 <log_oom_internal@plt+0x56d4>
    7204:	add	r8, pc, r8
    7208:	mov	r4, #0
    720c:	ldr	r7, [r8, r3]
    7210:	add	r5, sp, #64	; 0x40
    7214:	mov	r9, r0
    7218:	ldr	r3, [r7]
    721c:	mov	fp, r1
    7220:	mov	r0, r5
    7224:	mov	r1, r4
    7228:	mov	sl, r2
    722c:	mov	r2, #88	; 0x58
    7230:	str	r3, [sp, #452]	; 0x1c4
    7234:	str	r4, [sp, #52]	; 0x34
    7238:	str	r4, [sp, #56]	; 0x38
    723c:	str	r4, [sp, #60]	; 0x3c
    7240:	str	r4, [sp, #44]	; 0x2c
    7244:	bl	1cac <memset@plt>
    7248:	add	r1, sp, #44	; 0x2c
    724c:	ldr	r3, [pc, #1264]	; 7744 <log_oom_internal@plt+0x56d8>
    7250:	str	r1, [sp, #8]
    7254:	ldr	r1, [pc, #1260]	; 7748 <log_oom_internal@plt+0x56dc>
    7258:	mov	ip, #2
    725c:	add	r3, pc, r3
    7260:	add	r6, sp, #52	; 0x34
    7264:	str	r5, [sp, #12]
    7268:	mov	r2, fp
    726c:	mov	r0, r9
    7270:	add	r3, r3, #224	; 0xe0
    7274:	str	r6, [sp, #4]
    7278:	str	ip, [sp]
    727c:	add	r1, pc, r1
    7280:	bl	1d60 <bus_map_all_properties@plt>
    7284:	subs	r5, r0, #0
    7288:	blt	74d4 <log_oom_internal@plt+0x5468>
    728c:	ldrb	r3, [sl]
    7290:	cmp	r3, #0
    7294:	bne	74c8 <log_oom_internal@plt+0x545c>
    7298:	ldr	r2, [sp, #64]	; 0x40
    729c:	mov	r3, #1
    72a0:	cmp	r2, #0
    72a4:	strb	r3, [sl]
    72a8:	beq	7650 <log_oom_internal@plt+0x55e4>
    72ac:	ldr	r1, [pc, #1176]	; 774c <log_oom_internal@plt+0x56e0>
    72b0:	mov	r0, #1
    72b4:	add	r1, pc, r1
    72b8:	bl	2048 <__printf_chk@plt>
    72bc:	ldr	r2, [sp, #72]	; 0x48
    72c0:	cmp	r2, #0
    72c4:	beq	765c <log_oom_internal@plt+0x55f0>
    72c8:	ldr	r1, [pc, #1152]	; 7750 <log_oom_internal@plt+0x56e4>
    72cc:	ldr	r3, [sp, #68]	; 0x44
    72d0:	add	r1, pc, r1
    72d4:	mov	r0, #1
    72d8:	bl	2048 <__printf_chk@plt>
    72dc:	add	r4, sp, #72	; 0x48
    72e0:	mov	r1, #256	; 0x100
    72e4:	ldrd	r2, [r4, #8]
    72e8:	add	r0, sp, #196	; 0xc4
    72ec:	bl	1d00 <format_timestamp_relative@plt>
    72f0:	ldrd	r2, [r4, #8]
    72f4:	mov	r1, #38	; 0x26
    72f8:	mov	r5, r0
    72fc:	add	r0, sp, #156	; 0x9c
    7300:	bl	1e20 <format_timestamp@plt>
    7304:	cmp	r5, #0
    7308:	beq	75dc <log_oom_internal@plt+0x5570>
    730c:	ldr	r1, [pc, #1088]	; 7754 <log_oom_internal@plt+0x56e8>
    7310:	mov	r2, r0
    7314:	mov	r3, r5
    7318:	add	r1, pc, r1
    731c:	mov	r0, #1
    7320:	bl	2048 <__printf_chk@plt>
    7324:	ldr	r2, [sp, #128]	; 0x80
    7328:	cmp	r2, #0
    732c:	bgt	753c <log_oom_internal@plt+0x54d0>
    7330:	ldr	r2, [sp, #100]	; 0x64
    7334:	cmp	r2, #0
    7338:	beq	736c <log_oom_internal@plt+0x5300>
    733c:	ldrb	r3, [r2]
    7340:	cmp	r3, #0
    7344:	beq	736c <log_oom_internal@plt+0x5300>
    7348:	ldr	r1, [pc, #1032]	; 7758 <log_oom_internal@plt+0x56ec>
    734c:	mov	r0, #1
    7350:	add	r1, pc, r1
    7354:	bl	2048 <__printf_chk@plt>
    7358:	ldr	r2, [sp, #96]	; 0x60
    735c:	cmp	r2, #0
    7360:	bne	7694 <log_oom_internal@plt+0x5628>
    7364:	mov	r0, #10
    7368:	bl	1c88 <putchar@plt>
    736c:	ldr	r2, [sp, #104]	; 0x68
    7370:	cmp	r2, #0
    7374:	beq	7594 <log_oom_internal@plt+0x5528>
    7378:	ldr	r1, [pc, #988]	; 775c <log_oom_internal@plt+0x56f0>
    737c:	mov	r0, #1
    7380:	add	r1, pc, r1
    7384:	bl	2048 <__printf_chk@plt>
    7388:	ldr	r3, [sp, #116]	; 0x74
    738c:	ldr	r2, [sp, #120]	; 0x78
    7390:	cmp	r3, #0
    7394:	beq	75c0 <log_oom_internal@plt+0x5554>
    7398:	cmp	r2, #0
    739c:	beq	7638 <log_oom_internal@plt+0x55cc>
    73a0:	ldr	r1, [pc, #952]	; 7760 <log_oom_internal@plt+0x56f4>
    73a4:	mov	r0, #1
    73a8:	add	r1, pc, r1
    73ac:	bl	2048 <__printf_chk@plt>
    73b0:	ldr	r2, [sp, #124]	; 0x7c
    73b4:	cmp	r2, #0
    73b8:	beq	75fc <log_oom_internal@plt+0x5590>
    73bc:	ldr	r1, [pc, #928]	; 7764 <log_oom_internal@plt+0x56f8>
    73c0:	mov	r0, #1
    73c4:	add	r1, pc, r1
    73c8:	bl	2048 <__printf_chk@plt>
    73cc:	ldr	r2, [sp, #132]	; 0x84
    73d0:	cmp	r2, #0
    73d4:	beq	73e8 <log_oom_internal@plt+0x537c>
    73d8:	ldr	r1, [pc, #904]	; 7768 <log_oom_internal@plt+0x56fc>
    73dc:	mov	r0, #1
    73e0:	add	r1, pc, r1
    73e4:	bl	2048 <__printf_chk@plt>
    73e8:	ldr	r2, [sp, #136]	; 0x88
    73ec:	cmp	r2, #0
    73f0:	beq	7404 <log_oom_internal@plt+0x5398>
    73f4:	ldr	r1, [pc, #880]	; 776c <log_oom_internal@plt+0x5700>
    73f8:	mov	r0, #1
    73fc:	add	r1, pc, r1
    7400:	bl	2048 <__printf_chk@plt>
    7404:	mov	r0, #10
    7408:	bl	1c88 <putchar@plt>
    740c:	ldr	r2, [sp, #148]	; 0x94
    7410:	cmp	r2, #0
    7414:	beq	7434 <log_oom_internal@plt+0x53c8>
    7418:	ldrb	r3, [r2]
    741c:	cmp	r3, #0
    7420:	beq	7434 <log_oom_internal@plt+0x53c8>
    7424:	ldr	r1, [pc, #836]	; 7770 <log_oom_internal@plt+0x5704>
    7428:	mov	r0, #1
    742c:	add	r1, pc, r1
    7430:	bl	2048 <__printf_chk@plt>
    7434:	ldr	r2, [sp, #140]	; 0x8c
    7438:	cmp	r2, #0
    743c:	beq	7450 <log_oom_internal@plt+0x53e4>
    7440:	ldr	r1, [pc, #812]	; 7774 <log_oom_internal@plt+0x5708>
    7444:	mov	r0, #1
    7448:	add	r1, pc, r1
    744c:	bl	2048 <__printf_chk@plt>
    7450:	ldr	r2, [sp, #144]	; 0x90
    7454:	cmp	r2, #0
    7458:	beq	7490 <log_oom_internal@plt+0x5424>
    745c:	ldr	r1, [pc, #788]	; 7778 <log_oom_internal@plt+0x570c>
    7460:	mov	r0, #1
    7464:	add	r1, pc, r1
    7468:	bl	2048 <__printf_chk@plt>
    746c:	mov	r0, r9
    7470:	ldr	r2, [sp, #128]	; 0x80
    7474:	ldr	r1, [sp, #144]	; 0x90
    7478:	bl	6024 <log_oom_internal@plt+0x3fb8>
    747c:	ldr	r3, [pc, #760]	; 777c <log_oom_internal@plt+0x5710>
    7480:	add	r3, pc, r3
    7484:	ldr	r5, [r3, #4]
    7488:	cmp	r5, #0
    748c:	beq	76a8 <log_oom_internal@plt+0x563c>
    7490:	mov	r4, #0
    7494:	ldr	r0, [sp, #44]	; 0x2c
    7498:	cmp	r0, #0
    749c:	beq	74a4 <log_oom_internal@plt+0x5438>
    74a0:	bl	1e68 <sd_bus_message_unref@plt>
    74a4:	mov	r0, r6
    74a8:	bl	1d18 <sd_bus_error_free@plt>
    74ac:	ldr	r2, [sp, #452]	; 0x1c4
    74b0:	ldr	r3, [r7]
    74b4:	mov	r0, r4
    74b8:	cmp	r2, r3
    74bc:	bne	7738 <log_oom_internal@plt+0x56cc>
    74c0:	add	sp, sp, #460	; 0x1cc
    74c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    74c8:	mov	r0, #10
    74cc:	bl	1c88 <putchar@plt>
    74d0:	b	7298 <log_oom_internal@plt+0x522c>
    74d4:	mov	r0, r4
    74d8:	bl	1cb8 <log_get_max_level_realm@plt>
    74dc:	cmp	r0, #2
    74e0:	rsble	r4, r5, #0
    74e4:	uxtble	r4, r4
    74e8:	rsble	r4, r4, #0
    74ec:	ble	7494 <log_oom_internal@plt+0x5428>
    74f0:	mov	r1, r5
    74f4:	mov	r0, r6
    74f8:	bl	1f40 <bus_error_message@plt>
    74fc:	ldr	r2, [pc, #636]	; 7780 <log_oom_internal@plt+0x5714>
    7500:	ldr	r3, [pc, #636]	; 7784 <log_oom_internal@plt+0x5718>
    7504:	add	r2, pc, r2
    7508:	str	r2, [sp, #4]
    750c:	add	r3, pc, r3
    7510:	ldr	r2, [pc, #624]	; 7788 <log_oom_internal@plt+0x571c>
    7514:	add	r3, r3, #592	; 0x250
    7518:	str	r3, [sp]
    751c:	mov	r1, r5
    7520:	mov	r3, #488	; 0x1e8
    7524:	add	r2, pc, r2
    7528:	str	r0, [sp, #8]
    752c:	mov	r0, #3
    7530:	bl	1fac <log_internal_realm@plt>
    7534:	mov	r4, r0
    7538:	b	7494 <log_oom_internal@plt+0x5428>
    753c:	ldr	r1, [pc, #584]	; 778c <log_oom_internal@plt+0x5720>
    7540:	add	r5, sp, #456	; 0x1c8
    7544:	mov	r3, #0
    7548:	add	r1, pc, r1
    754c:	mov	r0, #1
    7550:	str	r3, [r5, #-408]!	; 0xfffffe68
    7554:	bl	2048 <__printf_chk@plt>
    7558:	mov	r1, r5
    755c:	ldr	r0, [sp, #128]	; 0x80
    7560:	bl	1c94 <get_process_comm@plt>
    7564:	ldr	r2, [sp, #48]	; 0x30
    7568:	cmp	r2, #0
    756c:	beq	7580 <log_oom_internal@plt+0x5514>
    7570:	ldr	r1, [pc, #536]	; 7790 <log_oom_internal@plt+0x5724>
    7574:	mov	r0, #1
    7578:	add	r1, pc, r1
    757c:	bl	2048 <__printf_chk@plt>
    7580:	mov	r0, #10
    7584:	bl	1c88 <putchar@plt>
    7588:	ldr	r0, [sp, #48]	; 0x30
    758c:	bl	1ba4 <free@plt>
    7590:	b	7330 <log_oom_internal@plt+0x52c4>
    7594:	ldr	r2, [sp, #108]	; 0x6c
    7598:	cmp	r2, #0
    759c:	beq	7388 <log_oom_internal@plt+0x531c>
    75a0:	ldr	r1, [pc, #492]	; 7794 <log_oom_internal@plt+0x5728>
    75a4:	mov	r0, #1
    75a8:	add	r1, pc, r1
    75ac:	bl	2048 <__printf_chk@plt>
    75b0:	ldr	r3, [sp, #116]	; 0x74
    75b4:	ldr	r2, [sp, #120]	; 0x78
    75b8:	cmp	r3, #0
    75bc:	bne	7398 <log_oom_internal@plt+0x532c>
    75c0:	cmp	r2, #0
    75c4:	beq	771c <log_oom_internal@plt+0x56b0>
    75c8:	ldr	r1, [pc, #456]	; 7798 <log_oom_internal@plt+0x572c>
    75cc:	mov	r0, #1
    75d0:	add	r1, pc, r1
    75d4:	bl	2048 <__printf_chk@plt>
    75d8:	b	73b0 <log_oom_internal@plt+0x5344>
    75dc:	cmp	r0, #0
    75e0:	beq	7324 <log_oom_internal@plt+0x52b8>
    75e4:	ldr	r1, [pc, #432]	; 779c <log_oom_internal@plt+0x5730>
    75e8:	mov	r2, r0
    75ec:	add	r1, pc, r1
    75f0:	mov	r0, #1
    75f4:	bl	2048 <__printf_chk@plt>
    75f8:	b	7324 <log_oom_internal@plt+0x52b8>
    75fc:	ldr	r2, [sp, #132]	; 0x84
    7600:	cmp	r2, #0
    7604:	beq	7674 <log_oom_internal@plt+0x5608>
    7608:	ldr	r1, [pc, #400]	; 77a0 <log_oom_internal@plt+0x5734>
    760c:	mov	r0, #1
    7610:	add	r1, pc, r1
    7614:	bl	2048 <__printf_chk@plt>
    7618:	ldr	r2, [sp, #136]	; 0x88
    761c:	cmp	r2, #0
    7620:	beq	7404 <log_oom_internal@plt+0x5398>
    7624:	ldr	r1, [pc, #376]	; 77a4 <log_oom_internal@plt+0x5738>
    7628:	mov	r0, #1
    762c:	add	r1, pc, r1
    7630:	bl	2048 <__printf_chk@plt>
    7634:	b	7404 <log_oom_internal@plt+0x5398>
    7638:	ldr	r1, [pc, #360]	; 77a8 <log_oom_internal@plt+0x573c>
    763c:	mov	r2, r3
    7640:	add	r1, pc, r1
    7644:	mov	r0, #1
    7648:	bl	2048 <__printf_chk@plt>
    764c:	b	73b0 <log_oom_internal@plt+0x5344>
    7650:	ldr	r2, [pc, #340]	; 77ac <log_oom_internal@plt+0x5740>
    7654:	add	r2, pc, r2
    7658:	b	72ac <log_oom_internal@plt+0x5240>
    765c:	ldr	r1, [pc, #332]	; 77b0 <log_oom_internal@plt+0x5744>
    7660:	ldr	r2, [sp, #68]	; 0x44
    7664:	add	r1, pc, r1
    7668:	mov	r0, #1
    766c:	bl	2048 <__printf_chk@plt>
    7670:	b	72dc <log_oom_internal@plt+0x5270>
    7674:	ldr	r2, [sp, #136]	; 0x88
    7678:	cmp	r2, #0
    767c:	beq	740c <log_oom_internal@plt+0x53a0>
    7680:	ldr	r1, [pc, #300]	; 77b4 <log_oom_internal@plt+0x5748>
    7684:	mov	r0, #1
    7688:	add	r1, pc, r1
    768c:	bl	2048 <__printf_chk@plt>
    7690:	b	740c <log_oom_internal@plt+0x53a0>
    7694:	ldr	r1, [pc, #284]	; 77b8 <log_oom_internal@plt+0x574c>
    7698:	mov	r0, #1
    769c:	add	r1, pc, r1
    76a0:	bl	2048 <__printf_chk@plt>
    76a4:	b	7364 <log_oom_internal@plt+0x52f8>
    76a8:	ldr	r2, [pc, #268]	; 77bc <log_oom_internal@plt+0x5750>
    76ac:	ldr	r1, [pc, #268]	; 77c0 <log_oom_internal@plt+0x5754>
    76b0:	ldr	fp, [r3, #20]
    76b4:	add	r1, pc, r1
    76b8:	ldr	r0, [r8, r2]
    76bc:	ldr	r2, [r1, #28]
    76c0:	ldr	r1, [sp, #144]	; 0x90
    76c4:	ldrd	r8, [r4, #16]
    76c8:	str	r2, [sp, #36]	; 0x24
    76cc:	str	r1, [sp, #32]
    76d0:	ldr	sl, [r0]
    76d4:	bl	5fd8 <log_oom_internal@plt+0x3f6c>
    76d8:	ldr	r2, [sp, #36]	; 0x24
    76dc:	mov	r3, #1
    76e0:	str	r2, [sp, #8]
    76e4:	str	r3, [sp, #24]
    76e8:	str	r3, [sp, #20]
    76ec:	strd	r8, [sp]
    76f0:	mov	r2, fp
    76f4:	ldr	r1, [sp, #32]
    76f8:	str	r5, [sp, #28]
    76fc:	str	r5, [sp, #12]
    7700:	mov	r3, r5
    7704:	mov	r4, r5
    7708:	orr	r0, r0, #64	; 0x40
    770c:	str	r0, [sp, #16]
    7710:	mov	r0, sl
    7714:	bl	2030 <show_journal_by_unit@plt>
    7718:	b	7494 <log_oom_internal@plt+0x5428>
    771c:	ldrb	r3, [sp, #112]	; 0x70
    7720:	cmp	r3, #0
    7724:	beq	73b0 <log_oom_internal@plt+0x5344>
    7728:	ldr	r0, [pc, #148]	; 77c4 <log_oom_internal@plt+0x5758>
    772c:	add	r0, pc, r0
    7730:	bl	1c64 <puts@plt>
    7734:	b	73b0 <log_oom_internal@plt+0x5344>
    7738:	bl	1dcc <__stack_chk_fail@plt>
    773c:	andeq	r2, r1, r4, lsl #24
    7740:			; <UNDEFINED> instruction: 0x000001bc
    7744:	andeq	r2, r1, r8, lsl #11
    7748:	andeq	r1, r0, r4, asr #13
    774c:	andeq	r1, r0, r8, ror #24
    7750:	muleq	r0, ip, fp
    7754:	andeq	r1, r0, r4, ror #22
    7758:	andeq	r1, r0, r4, lsr #25
    775c:	andeq	r1, r0, r4, asr #23
    7760:			; <UNDEFINED> instruction: 0x00001bbc
    7764:	andeq	r1, r0, r8, ror #23
    7768:	ldrdeq	r1, [r0], -ip
    776c:	andeq	r1, r0, ip, asr #23
    7770:	ldrdeq	r1, [r0], -r8
    7774:	andeq	r1, r0, r0, lsl #21
    7778:	andeq	r1, r0, r4, asr sl
    777c:	andeq	r2, r1, r8, lsr #23
    7780:	andeq	r1, r0, ip, asr #17
    7784:	andeq	r0, r0, r8, asr r6
    7788:	andeq	r0, r0, ip, lsl #19
    778c:	ldrdeq	r1, [r0], -ip
    7790:			; <UNDEFINED> instruction: 0x000019bc
    7794:	andeq	r1, r0, ip, lsr #19
    7798:			; <UNDEFINED> instruction: 0x000019b8
    779c:	andeq	r1, r0, r4, lsr #17
    77a0:	andeq	r1, r0, r4, asr #19
    77a4:	muleq	r0, ip, r9
    77a8:	andeq	r1, r0, r8, lsr r9
    77ac:	muleq	r0, r4, r6
    77b0:	andeq	r1, r0, r4, lsl r8
    77b4:	andeq	r1, r0, ip, asr r9
    77b8:	andeq	r1, r0, r0, lsr #17
    77bc:	ldrdeq	r0, [r0], -r4
    77c0:	andeq	r2, r1, r8, asr #18
    77c4:	andeq	r1, r0, r0, ror r8
    77c8:	ldr	r3, [pc, #728]	; 7aa8 <log_oom_internal@plt+0x5a3c>
    77cc:	ldr	ip, [pc, #728]	; 7aac <log_oom_internal@plt+0x5a40>
    77d0:	add	r3, pc, r3
    77d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    77d8:	subs	r6, r2, #0
    77dc:	ldr	r2, [r3, ip]
    77e0:	sub	sp, sp, #52	; 0x34
    77e4:	mov	r5, #0
    77e8:	ldr	r3, [r2]
    77ec:	str	r2, [sp, #16]
    77f0:	strb	r5, [sp, #27]
    77f4:	str	r3, [sp, #44]	; 0x2c
    77f8:	str	r5, [sp, #32]
    77fc:	str	r5, [sp, #36]	; 0x24
    7800:	str	r5, [sp, #40]	; 0x28
    7804:	str	r5, [sp, #28]
    7808:	beq	79c4 <log_oom_internal@plt+0x5958>
    780c:	cmp	r1, #0
    7810:	mov	r4, r1
    7814:	beq	79f0 <log_oom_internal@plt+0x5984>
    7818:	ldr	r1, [pc, #656]	; 7ab0 <log_oom_internal@plt+0x5a44>
    781c:	mov	r8, r0
    7820:	add	r1, pc, r1
    7824:	ldr	r0, [r4]
    7828:	bl	1e08 <strstr@plt>
    782c:	ldr	r3, [pc, #640]	; 7ab4 <log_oom_internal@plt+0x5a48>
    7830:	mov	r9, r0
    7834:	ldr	r0, [pc, r3]
    7838:	bl	1fdc <pager_open@plt>
    783c:	cmp	r8, #1
    7840:	ble	78b4 <log_oom_internal@plt+0x5848>
    7844:	mov	r5, #1
    7848:	add	sl, sp, #28
    784c:	add	r7, sp, #32
    7850:	add	fp, sp, #27
    7854:	b	7870 <log_oom_internal@plt+0x5804>
    7858:	bl	71f4 <log_oom_internal@plt+0x5188>
    785c:	cmp	r0, #0
    7860:	blt	78ac <log_oom_internal@plt+0x5840>
    7864:	add	r5, r5, #1
    7868:	cmp	r8, r5
    786c:	beq	7948 <log_oom_internal@plt+0x58dc>
    7870:	mov	r3, sl
    7874:	mov	r2, r7
    7878:	ldr	r1, [r4, #4]!
    787c:	mov	r0, r6
    7880:	bl	5ed4 <log_oom_internal@plt+0x3e68>
    7884:	cmp	r0, #0
    7888:	blt	7950 <log_oom_internal@plt+0x58e4>
    788c:	cmp	r9, #0
    7890:	mov	r2, fp
    7894:	mov	r0, r6
    7898:	ldr	r1, [sp, #28]
    789c:	bne	7858 <log_oom_internal@plt+0x57ec>
    78a0:	bl	499c <log_oom_internal@plt+0x2930>
    78a4:	cmp	r0, #0
    78a8:	bge	7864 <log_oom_internal@plt+0x57f8>
    78ac:	mov	r3, r0
    78b0:	b	7900 <log_oom_internal@plt+0x5894>
    78b4:	cmp	r9, #0
    78b8:	beq	7a1c <log_oom_internal@plt+0x59b0>
    78bc:	ldr	r0, [pc, #500]	; 7ab8 <log_oom_internal@plt+0x5a4c>
    78c0:	add	r0, pc, r0
    78c4:	bl	1fe8 <getenv@plt>
    78c8:	subs	r1, r0, #0
    78cc:	beq	7938 <log_oom_internal@plt+0x58cc>
    78d0:	add	r7, sp, #32
    78d4:	mov	r2, r7
    78d8:	add	r3, sp, #28
    78dc:	mov	r0, r6
    78e0:	bl	5ed4 <log_oom_internal@plt+0x3e68>
    78e4:	subs	r4, r0, #0
    78e8:	ldrge	r1, [sp, #28]
    78ec:	blt	7a3c <log_oom_internal@plt+0x59d0>
    78f0:	mov	r0, r6
    78f4:	add	r2, sp, #27
    78f8:	bl	71f4 <log_oom_internal@plt+0x5188>
    78fc:	mov	r3, r0
    7900:	ldr	r0, [sp, #28]
    7904:	str	r3, [sp, #20]
    7908:	bl	1ba4 <free@plt>
    790c:	mov	r0, r7
    7910:	bl	1d18 <sd_bus_error_free@plt>
    7914:	ldr	r3, [sp, #20]
    7918:	ldr	r2, [sp, #44]	; 0x2c
    791c:	mov	r0, r3
    7920:	ldr	r3, [sp, #16]
    7924:	ldr	r3, [r3]
    7928:	cmp	r2, r3
    792c:	bne	7aa4 <log_oom_internal@plt+0x5a38>
    7930:	add	sp, sp, #52	; 0x34
    7934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7938:	ldr	r1, [pc, #380]	; 7abc <log_oom_internal@plt+0x5a50>
    793c:	add	r7, sp, #32
    7940:	add	r1, pc, r1
    7944:	b	78f0 <log_oom_internal@plt+0x5884>
    7948:	mov	r3, #0
    794c:	b	7900 <log_oom_internal@plt+0x5894>
    7950:	str	r0, [sp, #20]
    7954:	mov	r0, #0
    7958:	bl	1cb8 <log_get_max_level_realm@plt>
    795c:	ldr	r3, [sp, #20]
    7960:	cmp	r0, #2
    7964:	rsble	r3, r3, #0
    7968:	uxtble	r3, r3
    796c:	rsble	r3, r3, #0
    7970:	ble	7900 <log_oom_internal@plt+0x5894>
    7974:	mov	r1, r3
    7978:	mov	r0, r7
    797c:	bl	1f40 <bus_error_message@plt>
    7980:	ldr	r2, [pc, #312]	; 7ac0 <log_oom_internal@plt+0x5a54>
    7984:	ldr	ip, [pc, #312]	; 7ac4 <log_oom_internal@plt+0x5a58>
    7988:	add	r2, pc, r2
    798c:	add	r2, r2, #636	; 0x27c
    7990:	ldr	r3, [sp, #20]
    7994:	str	r2, [sp]
    7998:	ldr	r2, [pc, #296]	; 7ac8 <log_oom_internal@plt+0x5a5c>
    799c:	add	ip, pc, ip
    79a0:	mov	r1, r3
    79a4:	str	ip, [sp, #4]
    79a8:	ldr	r3, [pc, #284]	; 7acc <log_oom_internal@plt+0x5a60>
    79ac:	add	r2, pc, r2
    79b0:	str	r0, [sp, #8]
    79b4:	mov	r0, #3
    79b8:	bl	1fac <log_internal_realm@plt>
    79bc:	mov	r3, r0
    79c0:	b	7900 <log_oom_internal@plt+0x5894>
    79c4:	ldr	r3, [pc, #260]	; 7ad0 <log_oom_internal@plt+0x5a64>
    79c8:	ldr	r2, [pc, #260]	; 7ad4 <log_oom_internal@plt+0x5a68>
    79cc:	add	r3, pc, r3
    79d0:	ldr	r1, [pc, #256]	; 7ad8 <log_oom_internal@plt+0x5a6c>
    79d4:	add	r3, r3, #620	; 0x26c
    79d8:	str	r3, [sp]
    79dc:	mov	r0, r6
    79e0:	ldr	r3, [pc, #244]	; 7adc <log_oom_internal@plt+0x5a70>
    79e4:	add	r2, pc, r2
    79e8:	add	r1, pc, r1
    79ec:	bl	1fa0 <log_assert_failed_realm@plt>
    79f0:	ldr	r3, [pc, #232]	; 7ae0 <log_oom_internal@plt+0x5a74>
    79f4:	mov	r0, r1
    79f8:	add	r3, pc, r3
    79fc:	ldr	r2, [pc, #224]	; 7ae4 <log_oom_internal@plt+0x5a78>
    7a00:	ldr	r1, [pc, #224]	; 7ae8 <log_oom_internal@plt+0x5a7c>
    7a04:	add	r3, r3, #620	; 0x26c
    7a08:	str	r3, [sp]
    7a0c:	add	r2, pc, r2
    7a10:	ldr	r3, [pc, #212]	; 7aec <log_oom_internal@plt+0x5a80>
    7a14:	add	r1, pc, r1
    7a18:	bl	1fa0 <log_assert_failed_realm@plt>
    7a1c:	ldr	r1, [pc, #204]	; 7af0 <log_oom_internal@plt+0x5a84>
    7a20:	mov	r0, r6
    7a24:	add	r2, sp, #27
    7a28:	add	r1, pc, r1
    7a2c:	bl	499c <log_oom_internal@plt+0x2930>
    7a30:	add	r7, sp, #32
    7a34:	mov	r3, r0
    7a38:	b	7900 <log_oom_internal@plt+0x5894>
    7a3c:	mov	r0, r5
    7a40:	bl	1cb8 <log_get_max_level_realm@plt>
    7a44:	cmp	r0, #2
    7a48:	rsble	r3, r4, #0
    7a4c:	uxtble	r3, r3
    7a50:	rsble	r3, r3, #0
    7a54:	ble	7900 <log_oom_internal@plt+0x5894>
    7a58:	mov	r1, r4
    7a5c:	mov	r0, r7
    7a60:	bl	1f40 <bus_error_message@plt>
    7a64:	ldr	r2, [pc, #136]	; 7af4 <log_oom_internal@plt+0x5a88>
    7a68:	ldr	r3, [pc, #136]	; 7af8 <log_oom_internal@plt+0x5a8c>
    7a6c:	add	r2, pc, r2
    7a70:	str	r2, [sp, #4]
    7a74:	add	r3, pc, r3
    7a78:	ldr	r2, [pc, #124]	; 7afc <log_oom_internal@plt+0x5a90>
    7a7c:	add	r3, r3, #636	; 0x27c
    7a80:	str	r3, [sp]
    7a84:	mov	r1, r4
    7a88:	mov	r3, #860	; 0x35c
    7a8c:	add	r2, pc, r2
    7a90:	str	r0, [sp, #8]
    7a94:	mov	r0, #3
    7a98:	bl	1fac <log_internal_realm@plt>
    7a9c:	mov	r3, r0
    7aa0:	b	7900 <log_oom_internal@plt+0x5894>
    7aa4:	bl	1dcc <__stack_chk_fail@plt>
    7aa8:	andeq	r2, r1, r8, lsr r6
    7aac:			; <UNDEFINED> instruction: 0x000001bc
    7ab0:	andeq	r1, r0, r0, asr sl
    7ab4:	strdeq	r2, [r1], -r4
    7ab8:	muleq	r0, ip, r2
    7abc:	ldrdeq	r1, [r0], -r4
    7ac0:	ldrdeq	r0, [r0], -ip
    7ac4:	andeq	r1, r0, r0, lsr #13
    7ac8:	andeq	r0, r0, r4, lsl #10
    7acc:	andeq	r0, r0, r7, ror #6
    7ad0:	muleq	r0, r8, r1
    7ad4:	andeq	r0, r0, ip, asr #9
    7ad8:	andeq	r0, r0, r4, lsl pc
    7adc:	andeq	r0, r0, r9, asr #6
    7ae0:	andeq	r0, r0, ip, ror #2
    7ae4:	andeq	r0, r0, r4, lsr #9
    7ae8:	andeq	r0, r0, ip, ror #29
    7aec:	andeq	r0, r0, sl, asr #6
    7af0:	andeq	r0, r0, r0, lsl #30
    7af4:	ldrdeq	r1, [r0], -r0
    7af8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    7afc:	andeq	r0, r0, r4, lsr #8
    7b00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    7b04:	mov	r7, r0
    7b08:	ldr	r6, [pc, #72]	; 7b58 <log_oom_internal@plt+0x5aec>
    7b0c:	ldr	r5, [pc, #72]	; 7b5c <log_oom_internal@plt+0x5af0>
    7b10:	add	r6, pc, r6
    7b14:	add	r5, pc, r5
    7b18:	sub	r6, r6, r5
    7b1c:	mov	r8, r1
    7b20:	mov	r9, r2
    7b24:	bl	1b48 <output_mode_to_string@plt-0x20>
    7b28:	asrs	r6, r6, #2
    7b2c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    7b30:	mov	r4, #0
    7b34:	add	r4, r4, #1
    7b38:	ldr	r3, [r5], #4
    7b3c:	mov	r2, r9
    7b40:	mov	r1, r8
    7b44:	mov	r0, r7
    7b48:	blx	r3
    7b4c:	cmp	r6, r4
    7b50:	bne	7b34 <log_oom_internal@plt+0x5ac8>
    7b54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    7b58:	ldrdeq	r1, [r1], -r0
    7b5c:	andeq	r1, r1, r8, asr #25
    7b60:	bx	lr

Disassembly of section .fini:

00007b64 <.fini>:
    7b64:	push	{r3, lr}
    7b68:	pop	{r3, pc}
