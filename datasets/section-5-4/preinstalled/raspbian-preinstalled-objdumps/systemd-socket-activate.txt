
raspbian-preinstalled/systemd-socket-activate:     file format elf32-littlearm


Disassembly of section .init:

00000cfc <.init>:
 cfc:	push	{r3, lr}
 d00:	bl	2114 <log_oom_internal@plt+0x1194>
 d04:	pop	{r3, pc}

Disassembly of section .plt:

00000d08 <sd_listen_fds@plt-0x14>:
 d08:	push	{lr}		; (str lr, [sp, #-4]!)
 d0c:	ldr	lr, [pc, #4]	; d18 <sd_listen_fds@plt-0x4>
 d10:	add	lr, pc, lr
 d14:	ldr	pc, [lr, #8]!
 d18:	andeq	r3, r1, r0, ror #3

00000d1c <sd_listen_fds@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #77824	; 0x13000
 d24:	ldr	pc, [ip, #480]!	; 0x1e0

00000d28 <version@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #77824	; 0x13000
 d30:	ldr	pc, [ip, #472]!	; 0x1d8

00000d34 <free@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #77824	; 0x13000
 d3c:	ldr	pc, [ip, #464]!	; 0x1d0

00000d40 <strv_extend_strv@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #77824	; 0x13000
 d48:	ldr	pc, [ip, #456]!	; 0x1c8

00000d4c <log_open@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #77824	; 0x13000
 d54:	ldr	pc, [ip, #448]!	; 0x1c0

00000d58 <log_assert_failed_unreachable_realm@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #77824	; 0x13000
 d60:	ldr	pc, [ip, #440]!	; 0x1b8

00000d64 <accept4@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #77824	; 0x13000
 d6c:	ldr	pc, [ip, #432]!	; 0x1b0

00000d70 <make_socket_fd@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #77824	; 0x13000
 d78:	ldr	pc, [ip, #424]!	; 0x1a8

00000d7c <getpeername_pretty@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #77824	; 0x13000
 d84:	ldr	pc, [ip, #416]!	; 0x1a0

00000d88 <epoll_ctl@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #77824	; 0x13000
 d90:	ldr	pc, [ip, #408]!	; 0x198

00000d94 <log_get_max_level_realm@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #77824	; 0x13000
 d9c:	ldr	pc, [ip, #400]!	; 0x190

00000da0 <fdname_is_valid@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #77824	; 0x13000
 da8:	ldr	pc, [ip, #392]!	; 0x188

00000dac <abort@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #77824	; 0x13000
 db4:	ldr	pc, [ip, #384]!	; 0x180

00000db8 <safe_fork_full@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #77824	; 0x13000
 dc0:	ldr	pc, [ip, #376]!	; 0x178

00000dc4 <dup2@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #77824	; 0x13000
 dcc:	ldr	pc, [ip, #368]!	; 0x170

00000dd0 <log_close@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #77824	; 0x13000
 dd8:	ldr	pc, [ip, #360]!	; 0x168

00000ddc <rearrange_stdio@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #77824	; 0x13000
 de4:	ldr	pc, [ip, #352]!	; 0x160

00000de8 <waitid@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #77824	; 0x13000
 df0:	ldr	pc, [ip, #344]!	; 0x158

00000df4 <safe_close@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #77824	; 0x13000
 dfc:	ldr	pc, [ip, #336]!	; 0x150

00000e00 <__stack_chk_fail@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #77824	; 0x13000
 e08:	ldr	pc, [ip, #328]!	; 0x148

00000e0c <terminal_urlify_man@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #77824	; 0x13000
 e14:	ldr	pc, [ip, #320]!	; 0x140

00000e18 <strappend@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #77824	; 0x13000
 e20:	ldr	pc, [ip, #312]!	; 0x138

00000e24 <strv_find_prefix@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #77824	; 0x13000
 e2c:	ldr	pc, [ip, #304]!	; 0x130

00000e30 <strv_length@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #77824	; 0x13000
 e38:	ldr	pc, [ip, #296]!	; 0x128

00000e3c <__asprintf_chk@plt>:
 e3c:	add	ip, pc, #0, 12
 e40:	add	ip, ip, #77824	; 0x13000
 e44:	ldr	pc, [ip, #288]!	; 0x120

00000e48 <getpid_cached@plt>:
 e48:	add	ip, pc, #0, 12
 e4c:	add	ip, ip, #77824	; 0x13000
 e50:	ldr	pc, [ip, #280]!	; 0x118

00000e54 <getopt_long@plt>:
 e54:	add	ip, pc, #0, 12
 e58:	add	ip, ip, #77824	; 0x13000
 e5c:	ldr	pc, [ip, #272]!	; 0x110

00000e60 <epoll_create1@plt>:
 e60:	add	ip, pc, #0, 12
 e64:	add	ip, ip, #77824	; 0x13000
 e68:	ldr	pc, [ip, #264]!	; 0x108

00000e6c <sigaction@plt>:
 e6c:	add	ip, pc, #0, 12
 e70:	add	ip, ip, #77824	; 0x13000
 e74:	ldr	pc, [ip, #256]!	; 0x100

00000e78 <calloc@plt>:
 e78:	add	ip, pc, #0, 12
 e7c:	add	ip, ip, #77824	; 0x13000
 e80:	ldr	pc, [ip, #248]!	; 0xf8

00000e84 <epoll_wait@plt>:
 e84:	add	ip, pc, #0, 12
 e88:	add	ip, ip, #77824	; 0x13000
 e8c:	ldr	pc, [ip, #240]!	; 0xf0

00000e90 <strv_extend@plt>:
 e90:	add	ip, pc, #0, 12
 e94:	add	ip, ip, #77824	; 0x13000
 e98:	ldr	pc, [ip, #232]!	; 0xe8

00000e9c <fd_cloexec@plt>:
 e9c:	add	ip, pc, #0, 12
 ea0:	add	ip, ip, #77824	; 0x13000
 ea4:	ldr	pc, [ip, #224]!	; 0xe0

00000ea8 <strv_split_full@plt>:
 ea8:	add	ip, pc, #0, 12
 eac:	add	ip, ip, #77824	; 0x13000
 eb0:	ldr	pc, [ip, #216]!	; 0xd8

00000eb4 <_exit@plt>:
 eb4:	add	ip, pc, #0, 12
 eb8:	add	ip, ip, #77824	; 0x13000
 ebc:	ldr	pc, [ip, #208]!	; 0xd0

00000ec0 <log_parse_environment_realm@plt>:
 ec0:	add	ip, pc, #0, 12
 ec4:	add	ip, ip, #77824	; 0x13000
 ec8:	ldr	pc, [ip, #200]!	; 0xc8

00000ecc <__errno_location@plt>:
 ecc:	add	ip, pc, #0, 12
 ed0:	add	ip, ip, #77824	; 0x13000
 ed4:	ldr	pc, [ip, #192]!	; 0xc0

00000ed8 <close_all_fds@plt>:
 ed8:	add	ip, pc, #0, 12
 edc:	add	ip, ip, #77824	; 0x13000
 ee0:	ldr	pc, [ip, #184]!	; 0xb8

00000ee4 <log_assert_failed_realm@plt>:
 ee4:	add	ip, pc, #0, 12
 ee8:	add	ip, ip, #77824	; 0x13000
 eec:	ldr	pc, [ip, #176]!	; 0xb0

00000ef0 <log_internal_realm@plt>:
 ef0:	add	ip, pc, #0, 12
 ef4:	add	ip, ip, #77824	; 0x13000
 ef8:	ldr	pc, [ip, #168]!	; 0xa8

00000efc <strv_free@plt>:
 efc:	add	ip, pc, #0, 12
 f00:	add	ip, ip, #77824	; 0x13000
 f04:	ldr	pc, [ip, #160]!	; 0xa0

00000f08 <__libc_start_main@plt>:
 f08:	add	ip, pc, #0, 12
 f0c:	add	ip, ip, #77824	; 0x13000
 f10:	ldr	pc, [ip, #152]!	; 0x98

00000f14 <cescape@plt>:
 f14:	add	ip, pc, #0, 12
 f18:	add	ip, ip, #77824	; 0x13000
 f1c:	ldr	pc, [ip, #144]!	; 0x90

00000f20 <__gmon_start__@plt>:
 f20:	add	ip, pc, #0, 12
 f24:	add	ip, ip, #77824	; 0x13000
 f28:	ldr	pc, [ip, #136]!	; 0x88

00000f2c <strchr@plt>:
 f2c:	add	ip, pc, #0, 12
 f30:	add	ip, ip, #77824	; 0x13000
 f34:	ldr	pc, [ip, #128]!	; 0x80

00000f38 <__cxa_finalize@plt>:
 f38:	add	ip, pc, #0, 12
 f3c:	add	ip, ip, #77824	; 0x13000
 f40:	ldr	pc, [ip, #120]!	; 0x78

00000f44 <execvpe@plt>:
 f44:	add	ip, pc, #0, 12
 f48:	add	ip, ip, #77824	; 0x13000
 f4c:	ldr	pc, [ip, #112]!	; 0x70

00000f50 <strv_join_prefix@plt>:
 f50:	add	ip, pc, #0, 12
 f54:	add	ip, ip, #77824	; 0x13000
 f58:	ldr	pc, [ip, #104]!	; 0x68

00000f5c <strdup@plt>:
 f5c:	add	ip, pc, #0, 12
 f60:	add	ip, ip, #77824	; 0x13000
 f64:	ldr	pc, [ip, #96]!	; 0x60

00000f68 <__printf_chk@plt>:
 f68:	add	ip, pc, #0, 12
 f6c:	add	ip, ip, #77824	; 0x13000
 f70:	ldr	pc, [ip, #88]!	; 0x58

00000f74 <getsockname_pretty@plt>:
 f74:	add	ip, pc, #0, 12
 f78:	add	ip, ip, #77824	; 0x13000
 f7c:	ldr	pc, [ip, #80]!	; 0x50

00000f80 <log_oom_internal@plt>:
 f80:	add	ip, pc, #0, 12
 f84:	add	ip, ip, #77824	; 0x13000
 f88:	ldr	pc, [ip, #72]!	; 0x48

Disassembly of section .text:

00000f8c <.text>:
     f8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f90:	add	fp, sp, #32
     f94:	ldr	r9, [pc, #3864]	; 1eb4 <log_oom_internal@plt+0xf34>
     f98:	ldr	r3, [pc, #3864]	; 1eb8 <log_oom_internal@plt+0xf38>
     f9c:	add	r9, pc, r9
     fa0:	sub	sp, sp, #116	; 0x74
     fa4:	ldr	r3, [r9, r3]
     fa8:	mov	r5, r0
     fac:	str	r3, [fp, #-88]	; 0xffffffa8
     fb0:	ldr	r3, [r3]
     fb4:	mov	r0, #0
     fb8:	mov	sl, r1
     fbc:	str	r2, [fp, #-96]	; 0xffffffa0
     fc0:	str	r3, [fp, #-40]	; 0xffffffd8
     fc4:	bl	ec0 <log_parse_environment_realm@plt>
     fc8:	bl	d4c <log_open@plt>
     fcc:	cmp	r5, #0
     fd0:	blt	1638 <log_oom_internal@plt+0x6b8>
     fd4:	cmp	sl, #0
     fd8:	beq	1664 <log_oom_internal@plt+0x6e4>
     fdc:	ldr	r3, [pc, #3800]	; 1ebc <log_oom_internal@plt+0xf3c>
     fe0:	ldr	r6, [pc, #3800]	; 1ec0 <log_oom_internal@plt+0xf40>
     fe4:	ldr	r7, [pc, #3800]	; 1ec4 <log_oom_internal@plt+0xf44>
     fe8:	add	r3, pc, r3
     fec:	add	r3, r3, #64	; 0x40
     ff0:	add	r6, pc, r6
     ff4:	add	r7, pc, r7
     ff8:	str	r3, [fp, #-100]	; 0xffffff9c
     ffc:	add	r3, r6, #8
    1000:	str	r3, [fp, #-92]	; 0xffffffa4
    1004:	ldr	r2, [pc, #3772]	; 1ec8 <log_oom_internal@plt+0xf48>
    1008:	mov	r4, #0
    100c:	str	r4, [sp]
    1010:	mov	r3, r7
    1014:	add	r2, pc, r2
    1018:	mov	r1, sl
    101c:	mov	r0, r5
    1020:	bl	e54 <getopt_long@plt>
    1024:	cmp	r0, #0
    1028:	blt	1854 <log_oom_internal@plt+0x8d4>
    102c:	cmp	r0, #104	; 0x68
    1030:	beq	1398 <log_oom_internal@plt+0x418>
    1034:	ble	11d0 <log_oom_internal@plt+0x250>
    1038:	ldr	r3, [pc, #3724]	; 1ecc <log_oom_internal@plt+0xf4c>
    103c:	cmp	r0, r3
    1040:	beq	1314 <log_oom_internal@plt+0x394>
    1044:	bgt	120c <log_oom_internal@plt+0x28c>
    1048:	cmp	r0, #108	; 0x6c
    104c:	beq	1268 <log_oom_internal@plt+0x2e8>
    1050:	cmp	r0, #256	; 0x100
    1054:	bne	1e64 <log_oom_internal@plt+0xee4>
    1058:	bl	d28 <version@plt>
    105c:	mov	r4, r0
    1060:	cmp	r4, #0
    1064:	ble	1244 <log_oom_internal@plt+0x2c4>
    1068:	ldr	r1, [pc, #3680]	; 1ed0 <log_oom_internal@plt+0xf50>
    106c:	mov	r2, #0
    1070:	add	r1, pc, r1
    1074:	add	r1, r1, #176	; 0xb0
    1078:	mov	r0, #17
    107c:	bl	e6c <sigaction@plt>
    1080:	cmp	r0, #0
    1084:	blt	15d4 <log_oom_internal@plt+0x654>
    1088:	mov	r0, #1
    108c:	bl	d1c <sd_listen_fds@plt>
    1090:	subs	r5, r0, #0
    1094:	blt	1440 <log_oom_internal@plt+0x4c0>
    1098:	beq	1914 <log_oom_internal@plt+0x994>
    109c:	mov	r0, #0
    10a0:	bl	d94 <log_get_max_level_realm@plt>
    10a4:	cmp	r0, #5
    10a8:	bgt	1a70 <log_oom_internal@plt+0xaf0>
    10ac:	ldr	r7, [pc, #3616]	; 1ed4 <log_oom_internal@plt+0xf54>
    10b0:	mov	r8, #3
    10b4:	add	r6, r5, #2
    10b8:	add	r7, pc, r7
    10bc:	b	10d8 <log_oom_internal@plt+0x158>
    10c0:	ldrb	r1, [r7, #16]
    10c4:	mov	r0, r8
    10c8:	bl	e9c <fd_cloexec@plt>
    10cc:	cmp	r0, #0
    10d0:	blt	1584 <log_oom_internal@plt+0x604>
    10d4:	add	r8, r8, #1
    10d8:	cmp	r8, r6
    10dc:	sub	r4, r8, #3
    10e0:	ble	10c0 <log_oom_internal@plt+0x140>
    10e4:	ldr	r3, [pc, #3564]	; 1ed8 <log_oom_internal@plt+0xf58>
    10e8:	add	r3, pc, r3
    10ec:	ldr	r3, [r3, #12]
    10f0:	cmp	r3, #0
    10f4:	beq	1140 <log_oom_internal@plt+0x1c0>
    10f8:	add	r8, r5, #3
    10fc:	mov	r6, sp
    1100:	lsl	r3, r8, #2
    1104:	add	r3, r3, #10
    1108:	bic	r3, r3, #7
    110c:	sub	sp, sp, r3
    1110:	add	r5, r5, #2
    1114:	add	r7, sp, #24
    1118:	mov	r3, #0
    111c:	str	r3, [r7, r3, lsl #2]
    1120:	add	r3, r3, #1
    1124:	cmp	r5, r3
    1128:	bge	111c <log_oom_internal@plt+0x19c>
    112c:	bl	dd0 <log_close@plt>
    1130:	mov	r1, r8
    1134:	mov	r0, r7
    1138:	bl	ed8 <close_all_fds@plt>
    113c:	mov	sp, r6
    1140:	ldr	r3, [pc, #3476]	; 1edc <log_oom_internal@plt+0xf5c>
    1144:	ldr	r7, [pc, #3476]	; 1ee0 <log_oom_internal@plt+0xf60>
    1148:	add	r3, pc, r3
    114c:	ldr	r6, [pc, #3472]	; 1ee4 <log_oom_internal@plt+0xf64>
    1150:	add	r7, pc, r7
    1154:	add	r6, pc, r6
    1158:	ldr	r5, [r3, #12]
    115c:	b	1164 <log_oom_internal@plt+0x1e4>
    1160:	add	r4, r4, #1
    1164:	cmp	r5, #0
    1168:	mov	r8, r5
    116c:	beq	191c <log_oom_internal@plt+0x99c>
    1170:	ldr	r1, [r5], #4
    1174:	cmp	r1, #0
    1178:	beq	191c <log_oom_internal@plt+0x99c>
    117c:	ldrb	r3, [r7, #16]
    1180:	ldr	r2, [r6]
    1184:	mov	r0, #7
    1188:	lsl	r3, r3, #19
    118c:	bl	d70 <make_socket_fd@plt>
    1190:	cmp	r0, #0
    1194:	blt	1b88 <log_oom_internal@plt+0xc08>
    1198:	add	r3, r4, #3
    119c:	cmp	r3, r0
    11a0:	beq	1160 <log_oom_internal@plt+0x1e0>
    11a4:	ldr	r2, [pc, #3388]	; 1ee8 <log_oom_internal@plt+0xf68>
    11a8:	ldr	r1, [pc, #3388]	; 1eec <log_oom_internal@plt+0xf6c>
    11ac:	add	r2, pc, r2
    11b0:	add	r2, r2, #116	; 0x74
    11b4:	str	r2, [sp]
    11b8:	ldr	r2, [pc, #3376]	; 1ef0 <log_oom_internal@plt+0xf70>
    11bc:	mov	r3, #91	; 0x5b
    11c0:	add	r2, pc, r2
    11c4:	add	r1, pc, r1
    11c8:	mov	r0, #0
    11cc:	bl	ee4 <log_assert_failed_realm@plt>
    11d0:	cmp	r0, #69	; 0x45
    11d4:	beq	12b4 <log_oom_internal@plt+0x334>
    11d8:	ble	1238 <log_oom_internal@plt+0x2b8>
    11dc:	cmp	r0, #97	; 0x61
    11e0:	beq	1300 <log_oom_internal@plt+0x380>
    11e4:	cmp	r0, #100	; 0x64
    11e8:	bne	1e64 <log_oom_internal@plt+0xee4>
    11ec:	ldr	r3, [pc, #3328]	; 1ef4 <log_oom_internal@plt+0xf74>
    11f0:	add	r3, pc, r3
    11f4:	ldr	r2, [r3]
    11f8:	cmp	r2, #5
    11fc:	beq	1d54 <log_oom_internal@plt+0xdd4>
    1200:	mov	r2, #2
    1204:	str	r2, [r3]
    1208:	b	1004 <log_oom_internal@plt+0x84>
    120c:	ldr	r3, [pc, #3300]	; 1ef8 <log_oom_internal@plt+0xf78>
    1210:	cmp	r0, r3
    1214:	beq	13ec <log_oom_internal@plt+0x46c>
    1218:	add	r3, r3, #1
    121c:	cmp	r0, r3
    1220:	bne	1e64 <log_oom_internal@plt+0xee4>
    1224:	ldr	r3, [pc, #3280]	; 1efc <log_oom_internal@plt+0xf7c>
    1228:	mov	r2, #1
    122c:	add	r3, pc, r3
    1230:	strb	r2, [r3]
    1234:	b	1004 <log_oom_internal@plt+0x84>
    1238:	cmp	r0, #63	; 0x3f
    123c:	bne	1e64 <log_oom_internal@plt+0xee4>
    1240:	mvn	r4, #21
    1244:	adds	r0, r4, #0
    1248:	movne	r0, #1
    124c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    1250:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1254:	ldr	r3, [r3]
    1258:	cmp	r2, r3
    125c:	bne	1e90 <log_oom_internal@plt+0xf10>
    1260:	sub	sp, fp, #32
    1264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1268:	ldr	r3, [pc, #3216]	; 1f00 <log_oom_internal@plt+0xf80>
    126c:	ldr	r0, [pc, #3216]	; 1f04 <log_oom_internal@plt+0xf84>
    1270:	ldr	r3, [r9, r3]
    1274:	add	r0, pc, r0
    1278:	add	r0, r0, #12
    127c:	ldr	r1, [r3]
    1280:	bl	e90 <strv_extend@plt>
    1284:	cmp	r0, #0
    1288:	bge	1004 <log_oom_internal@plt+0x84>
    128c:	ldr	r3, [pc, #3188]	; 1f08 <log_oom_internal@plt+0xf88>
    1290:	ldr	r1, [pc, #3188]	; 1f0c <log_oom_internal@plt+0xf8c>
    1294:	add	r3, pc, r3
    1298:	mov	r0, r4
    129c:	add	r3, r3, #64	; 0x40
    12a0:	ldr	r2, [pc, #3176]	; 1f10 <log_oom_internal@plt+0xf90>
    12a4:	add	r1, pc, r1
    12a8:	bl	f80 <log_oom_internal@plt>
    12ac:	mov	r4, r0
    12b0:	b	1060 <log_oom_internal@plt+0xe0>
    12b4:	ldr	r3, [pc, #3140]	; 1f00 <log_oom_internal@plt+0xf80>
    12b8:	ldr	r0, [pc, #3156]	; 1f14 <log_oom_internal@plt+0xf94>
    12bc:	ldr	r3, [r9, r3]
    12c0:	add	r0, pc, r0
    12c4:	add	r0, r0, #4
    12c8:	ldr	r1, [r3]
    12cc:	bl	e90 <strv_extend@plt>
    12d0:	cmp	r0, #0
    12d4:	bge	1004 <log_oom_internal@plt+0x84>
    12d8:	ldr	r3, [pc, #3128]	; 1f18 <log_oom_internal@plt+0xf98>
    12dc:	ldr	r1, [pc, #3128]	; 1f1c <log_oom_internal@plt+0xf9c>
    12e0:	add	r3, pc, r3
    12e4:	mov	r0, r4
    12e8:	add	r3, r3, #64	; 0x40
    12ec:	mov	r2, #408	; 0x198
    12f0:	add	r1, pc, r1
    12f4:	bl	f80 <log_oom_internal@plt>
    12f8:	mov	r4, r0
    12fc:	b	1060 <log_oom_internal@plt+0xe0>
    1300:	ldr	r3, [pc, #3096]	; 1f20 <log_oom_internal@plt+0xfa0>
    1304:	mov	r2, #1
    1308:	add	r3, pc, r3
    130c:	strb	r2, [r3, #16]
    1310:	b	1004 <log_oom_internal@plt+0x84>
    1314:	ldr	r3, [pc, #3044]	; 1f00 <log_oom_internal@plt+0xf80>
    1318:	ldr	r1, [pc, #3076]	; 1f24 <log_oom_internal@plt+0xfa4>
    131c:	mov	r2, r4
    1320:	ldr	r3, [r9, r3]
    1324:	add	r1, pc, r1
    1328:	ldr	r0, [r3]
    132c:	bl	ea8 <strv_split_full@plt>
    1330:	subs	r8, r0, #0
    1334:	beq	1d30 <log_oom_internal@plt+0xdb0>
    1338:	ldr	r3, [pc, #3048]	; 1f28 <log_oom_internal@plt+0xfa8>
    133c:	mov	r4, r8
    1340:	add	r3, pc, r3
    1344:	str	r3, [fp, #-108]	; 0xffffff94
    1348:	str	r5, [fp, #-104]	; 0xffffff98
    134c:	b	1358 <log_oom_internal@plt+0x3d8>
    1350:	cmp	r4, #0
    1354:	beq	140c <log_oom_internal@plt+0x48c>
    1358:	ldr	r0, [r4], #4
    135c:	cmp	r0, #0
    1360:	beq	140c <log_oom_internal@plt+0x48c>
    1364:	bl	da0 <fdname_is_valid@plt>
    1368:	subs	r5, r0, #0
    136c:	bne	1350 <log_oom_internal@plt+0x3d0>
    1370:	ldr	r0, [r4, #-4]
    1374:	bl	f14 <cescape@plt>
    1378:	mov	r6, r0
    137c:	mov	r0, r5
    1380:	bl	d94 <log_get_max_level_realm@plt>
    1384:	cmp	r0, #3
    1388:	bgt	1608 <log_oom_internal@plt+0x688>
    138c:	mov	r0, r6
    1390:	bl	d34 <free@plt>
    1394:	b	1350 <log_oom_internal@plt+0x3d0>
    1398:	sub	r5, fp, #36	; 0x24
    139c:	ldr	r1, [pc, #2952]	; 1f2c <log_oom_internal@plt+0xfac>
    13a0:	ldr	r0, [pc, #2952]	; 1f30 <log_oom_internal@plt+0xfb0>
    13a4:	str	r4, [r5, #-32]!	; 0xffffffe0
    13a8:	add	r1, pc, r1
    13ac:	add	r0, pc, r0
    13b0:	mov	r2, r5
    13b4:	bl	e0c <terminal_urlify_man@plt>
    13b8:	cmp	r0, #0
    13bc:	blt	158c <log_oom_internal@plt+0x60c>
    13c0:	ldr	r2, [pc, #2924]	; 1f34 <log_oom_internal@plt+0xfb4>
    13c4:	ldr	r1, [pc, #2924]	; 1f38 <log_oom_internal@plt+0xfb8>
    13c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    13cc:	ldr	r2, [r9, r2]
    13d0:	add	r1, pc, r1
    13d4:	mov	r0, #1
    13d8:	ldr	r2, [r2]
    13dc:	bl	f68 <__printf_chk@plt>
    13e0:	ldr	r0, [fp, #-68]	; 0xffffffbc
    13e4:	bl	d34 <free@plt>
    13e8:	b	1244 <log_oom_internal@plt+0x2c4>
    13ec:	ldr	r3, [pc, #2888]	; 1f3c <log_oom_internal@plt+0xfbc>
    13f0:	add	r3, pc, r3
    13f4:	ldr	r2, [r3]
    13f8:	cmp	r2, #2
    13fc:	beq	1ce4 <log_oom_internal@plt+0xd64>
    1400:	mov	r2, #5
    1404:	str	r2, [r3]
    1408:	b	1004 <log_oom_internal@plt+0x84>
    140c:	ldr	r3, [r8]
    1410:	ldr	r5, [fp, #-104]	; 0xffffff98
    1414:	cmp	r3, #0
    1418:	movne	r1, r8
    141c:	beq	15bc <log_oom_internal@plt+0x63c>
    1420:	mov	r2, #0
    1424:	ldr	r0, [fp, #-92]	; 0xffffffa4
    1428:	bl	d40 <strv_extend_strv@plt>
    142c:	cmp	r0, #0
    1430:	blt	1dc0 <log_oom_internal@plt+0xe40>
    1434:	mov	r0, r8
    1438:	bl	efc <strv_free@plt>
    143c:	b	1004 <log_oom_internal@plt+0x84>
    1440:	mov	r0, #0
    1444:	bl	d94 <log_get_max_level_realm@plt>
    1448:	cmp	r0, #2
    144c:	bgt	1aac <log_oom_internal@plt+0xb2c>
    1450:	rsb	r4, r5, #0
    1454:	mvn	r8, #0
    1458:	uxtb	r4, r4
    145c:	rsb	r4, r4, #0
    1460:	cmp	r4, #0
    1464:	blt	1584 <log_oom_internal@plt+0x604>
    1468:	cmp	r4, #0
    146c:	beq	16e8 <log_oom_internal@plt+0x768>
    1470:	ldr	r3, [pc, #2760]	; 1f40 <log_oom_internal@plt+0xfc0>
    1474:	ldr	r2, [pc, #2760]	; 1f44 <log_oom_internal@plt+0xfc4>
    1478:	add	r3, pc, r3
    147c:	add	r3, r3, #164	; 0xa4
    1480:	str	r3, [fp, #-112]	; 0xffffff90
    1484:	ldr	r3, [pc, #2748]	; 1f48 <log_oom_internal@plt+0xfc8>
    1488:	add	r2, pc, r2
    148c:	add	r3, pc, r3
    1490:	str	r3, [fp, #-92]	; 0xffffffa4
    1494:	ldr	r3, [pc, #2736]	; 1f4c <log_oom_internal@plt+0xfcc>
    1498:	sub	r5, fp, #68	; 0x44
    149c:	add	r2, r2, #164	; 0xa4
    14a0:	add	r3, pc, r3
    14a4:	str	r2, [fp, #-116]	; 0xffffff8c
    14a8:	str	r3, [fp, #-108]	; 0xffffff94
    14ac:	str	r4, [fp, #-120]	; 0xffffff88
    14b0:	mvn	r3, #0
    14b4:	mov	r2, #1
    14b8:	mov	r1, r5
    14bc:	mov	r0, r8
    14c0:	bl	e84 <epoll_wait@plt>
    14c4:	cmp	r0, #0
    14c8:	blt	1690 <log_oom_internal@plt+0x710>
    14cc:	mov	r0, #0
    14d0:	bl	d94 <log_get_max_level_realm@plt>
    14d4:	cmp	r0, #5
    14d8:	bgt	1a30 <log_oom_internal@plt+0xab0>
    14dc:	ldr	r3, [pc, #2668]	; 1f50 <log_oom_internal@plt+0xfd0>
    14e0:	ldr	r2, [fp, #-92]	; 0xffffffa4
    14e4:	ldr	r3, [r9, r3]
    14e8:	ldrb	r6, [r2, #16]
    14ec:	ldr	r3, [r3]
    14f0:	cmp	r6, #0
    14f4:	add	r2, sl, r3, lsl #2
    14f8:	ldr	r3, [sl, r3, lsl #2]
    14fc:	str	r2, [fp, #-100]	; 0xffffff9c
    1500:	str	r3, [fp, #-104]	; 0xffffff98
    1504:	beq	1da0 <log_oom_internal@plt+0xe20>
    1508:	ldr	r7, [fp, #-60]	; 0xffffffc4
    150c:	mov	r6, #0
    1510:	mov	r0, r7
    1514:	mov	r3, r6
    1518:	mov	r2, r6
    151c:	mov	r1, r6
    1520:	str	r6, [fp, #-80]	; 0xffffffb0
    1524:	str	r6, [fp, #-76]	; 0xffffffb4
    1528:	bl	d64 <accept4@plt>
    152c:	subs	r4, r0, #0
    1530:	bge	1734 <log_oom_internal@plt+0x7b4>
    1534:	bl	ecc <__errno_location@plt>
    1538:	ldr	r1, [r0]
    153c:	mov	r0, r6
    1540:	str	r1, [fp, #-100]	; 0xffffff9c
    1544:	bl	d94 <log_get_max_level_realm@plt>
    1548:	ldr	r1, [fp, #-100]	; 0xffffff9c
    154c:	cmp	r0, #2
    1550:	bgt	1bb8 <log_oom_internal@plt+0xc38>
    1554:	eor	r6, r1, r1, asr #31
    1558:	sub	r6, r6, r1, asr #31
    155c:	uxtb	r6, r6
    1560:	rsb	r6, r6, #0
    1564:	mov	r0, r4
    1568:	bl	df4 <safe_close@plt>
    156c:	ldr	r0, [fp, #-76]	; 0xffffffb4
    1570:	bl	d34 <free@plt>
    1574:	ldr	r0, [fp, #-80]	; 0xffffffb0
    1578:	bl	d34 <free@plt>
    157c:	cmp	r6, #0
    1580:	bge	14b0 <log_oom_internal@plt+0x530>
    1584:	mov	r0, #1
    1588:	b	124c <log_oom_internal@plt+0x2cc>
    158c:	ldr	r3, [pc, #2496]	; 1f54 <log_oom_internal@plt+0xfd4>
    1590:	ldr	r1, [pc, #2496]	; 1f58 <log_oom_internal@plt+0xfd8>
    1594:	add	r3, pc, r3
    1598:	mov	r0, r4
    159c:	add	r3, r3, #56	; 0x38
    15a0:	mov	r2, #320	; 0x140
    15a4:	add	r1, pc, r1
    15a8:	bl	f80 <log_oom_internal@plt>
    15ac:	mov	r4, r0
    15b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
    15b4:	bl	d34 <free@plt>
    15b8:	b	1060 <log_oom_internal@plt+0xe0>
    15bc:	ldr	r2, [pc, #2456]	; 1f5c <log_oom_internal@plt+0xfdc>
    15c0:	str	r3, [fp, #-44]	; 0xffffffd4
    15c4:	add	r2, pc, r2
    15c8:	str	r2, [fp, #-48]	; 0xffffffd0
    15cc:	sub	r1, fp, #48	; 0x30
    15d0:	b	1420 <log_oom_internal@plt+0x4a0>
    15d4:	bl	ecc <__errno_location@plt>
    15d8:	ldr	r4, [r0]
    15dc:	mov	r0, #0
    15e0:	bl	d94 <log_get_max_level_realm@plt>
    15e4:	cmp	r0, #2
    15e8:	bgt	18dc <log_oom_internal@plt+0x95c>
    15ec:	eor	r0, r4, r4, asr #31
    15f0:	sub	r0, r0, r4, asr #31
    15f4:	uxtb	r0, r0
    15f8:	rsb	r0, r0, #0
    15fc:	cmp	r0, #0
    1600:	blt	1584 <log_oom_internal@plt+0x604>
    1604:	b	1088 <log_oom_internal@plt+0x108>
    1608:	str	r6, [sp, #8]
    160c:	ldr	r3, [pc, #2380]	; 1f60 <log_oom_internal@plt+0xfe0>
    1610:	ldr	r2, [fp, #-100]	; 0xffffff9c
    1614:	add	r3, pc, r3
    1618:	str	r3, [sp, #4]
    161c:	str	r2, [sp]
    1620:	mov	r1, r5
    1624:	ldr	r3, [pc, #2360]	; 1f64 <log_oom_internal@plt+0xfe4>
    1628:	ldr	r2, [fp, #-108]	; 0xffffff94
    162c:	mov	r0, #4
    1630:	bl	ef0 <log_internal_realm@plt>
    1634:	b	138c <log_oom_internal@plt+0x40c>
    1638:	ldr	r2, [pc, #2344]	; 1f68 <log_oom_internal@plt+0xfe8>
    163c:	ldr	r1, [pc, #2344]	; 1f6c <log_oom_internal@plt+0xfec>
    1640:	add	r2, pc, r2
    1644:	add	r2, r2, #44	; 0x2c
    1648:	str	r2, [sp]
    164c:	ldr	r2, [pc, #2332]	; 1f70 <log_oom_internal@plt+0xff0>
    1650:	ldr	r3, [pc, #2332]	; 1f74 <log_oom_internal@plt+0xff4>
    1654:	add	r2, pc, r2
    1658:	add	r1, pc, r1
    165c:	mov	r0, #0
    1660:	bl	ee4 <log_assert_failed_realm@plt>
    1664:	ldr	r3, [pc, #2316]	; 1f78 <log_oom_internal@plt+0xff8>
    1668:	ldr	r2, [pc, #2316]	; 1f7c <log_oom_internal@plt+0xffc>
    166c:	add	r3, pc, r3
    1670:	ldr	r1, [pc, #2312]	; 1f80 <log_oom_internal@plt+0x1000>
    1674:	add	r3, r3, #44	; 0x2c
    1678:	str	r3, [sp]
    167c:	mov	r0, sl
    1680:	mov	r3, #368	; 0x170
    1684:	add	r2, pc, r2
    1688:	add	r1, pc, r1
    168c:	bl	ee4 <log_assert_failed_realm@plt>
    1690:	bl	ecc <__errno_location@plt>
    1694:	ldr	r6, [r0]
    1698:	cmp	r6, #4
    169c:	beq	14b0 <log_oom_internal@plt+0x530>
    16a0:	mov	r0, #0
    16a4:	bl	d94 <log_get_max_level_realm@plt>
    16a8:	cmp	r0, #2
    16ac:	ble	1584 <log_oom_internal@plt+0x604>
    16b0:	ldr	r2, [pc, #2252]	; 1f84 <log_oom_internal@plt+0x1004>
    16b4:	ldr	r3, [pc, #2252]	; 1f88 <log_oom_internal@plt+0x1008>
    16b8:	add	r2, pc, r2
    16bc:	str	r2, [sp, #4]
    16c0:	add	r3, pc, r3
    16c4:	ldr	r2, [pc, #2240]	; 1f8c <log_oom_internal@plt+0x100c>
    16c8:	add	r3, r3, #144	; 0x90
    16cc:	str	r3, [sp]
    16d0:	mov	r1, r6
    16d4:	ldr	r3, [pc, #2228]	; 1f90 <log_oom_internal@plt+0x1010>
    16d8:	add	r2, pc, r2
    16dc:	mov	r0, #3
    16e0:	bl	ef0 <log_internal_realm@plt>
    16e4:	b	1584 <log_oom_internal@plt+0x604>
    16e8:	mov	r0, r4
    16ec:	bl	d94 <log_get_max_level_realm@plt>
    16f0:	cmp	r0, #2
    16f4:	ble	1584 <log_oom_internal@plt+0x604>
    16f8:	ldr	r2, [pc, #2196]	; 1f94 <log_oom_internal@plt+0x1014>
    16fc:	ldr	r3, [pc, #2196]	; 1f98 <log_oom_internal@plt+0x1018>
    1700:	add	r2, pc, r2
    1704:	str	r2, [sp, #4]
    1708:	add	r3, pc, r3
    170c:	ldr	r2, [pc, #2184]	; 1f9c <log_oom_internal@plt+0x101c>
    1710:	add	r3, r3, #144	; 0x90
    1714:	str	r3, [sp]
    1718:	mov	r1, r4
    171c:	ldr	r3, [pc, #2172]	; 1fa0 <log_oom_internal@plt+0x1020>
    1720:	add	r2, pc, r2
    1724:	mov	r0, #3
    1728:	bl	ef0 <log_internal_realm@plt>
    172c:	mov	r0, #1
    1730:	b	124c <log_oom_internal@plt+0x2cc>
    1734:	sub	r1, fp, #80	; 0x50
    1738:	bl	f74 <getsockname_pretty@plt>
    173c:	sub	r2, fp, #76	; 0x4c
    1740:	mov	r1, #1
    1744:	mov	r0, r4
    1748:	bl	d7c <getpeername_pretty@plt>
    174c:	mov	r0, r6
    1750:	bl	d94 <log_get_max_level_realm@plt>
    1754:	cmp	r0, #5
    1758:	ble	17b0 <log_oom_internal@plt+0x830>
    175c:	ldr	r1, [fp, #-76]	; 0xffffffb4
    1760:	cmp	r1, #0
    1764:	beq	1c54 <log_oom_internal@plt+0xcd4>
    1768:	ldr	r0, [fp, #-80]	; 0xffffffb0
    176c:	cmp	r0, #0
    1770:	beq	1c48 <log_oom_internal@plt+0xcc8>
    1774:	ldr	r2, [pc, #2088]	; 1fa4 <log_oom_internal@plt+0x1024>
    1778:	ldr	r3, [pc, #2088]	; 1fa8 <log_oom_internal@plt+0x1028>
    177c:	add	r2, pc, r2
    1780:	add	r3, pc, r3
    1784:	str	r2, [sp, #4]
    1788:	ldr	r2, [pc, #2076]	; 1fac <log_oom_internal@plt+0x102c>
    178c:	add	r3, r3, #152	; 0x98
    1790:	str	r0, [sp, #12]
    1794:	str	r1, [sp, #8]
    1798:	str	r3, [sp]
    179c:	add	r2, pc, r2
    17a0:	ldr	r3, [pc, #2056]	; 1fb0 <log_oom_internal@plt+0x1030>
    17a4:	mov	r1, #0
    17a8:	mov	r0, #6
    17ac:	bl	ef0 <log_internal_realm@plt>
    17b0:	mov	r2, #0
    17b4:	ldr	r1, [fp, #-108]	; 0xffffff94
    17b8:	ldr	r0, [fp, #-100]	; 0xffffff9c
    17bc:	bl	f50 <strv_join_prefix@plt>
    17c0:	subs	r7, r0, #0
    17c4:	beq	1c20 <log_oom_internal@plt+0xca0>
    17c8:	ldr	r0, [pc, #2020]	; 1fb4 <log_oom_internal@plt+0x1034>
    17cc:	mov	r2, #0
    17d0:	sub	r3, fp, #72	; 0x48
    17d4:	str	r3, [sp]
    17d8:	mov	r1, r2
    17dc:	ldr	r3, [pc, #2004]	; 1fb8 <log_oom_internal@plt+0x1038>
    17e0:	add	r0, pc, r0
    17e4:	bl	db8 <safe_fork_full@plt>
    17e8:	subs	r6, r0, #0
    17ec:	blt	1848 <log_oom_internal@plt+0x8c8>
    17f0:	beq	1e94 <log_oom_internal@plt+0xf14>
    17f4:	mov	r0, #0
    17f8:	bl	d94 <log_get_max_level_realm@plt>
    17fc:	cmp	r0, #5
    1800:	movle	r6, #0
    1804:	ble	1848 <log_oom_internal@plt+0x8c8>
    1808:	ldr	r2, [fp, #-72]	; 0xffffffb8
    180c:	str	r7, [sp, #12]
    1810:	str	r2, [sp, #16]
    1814:	ldr	r2, [fp, #-104]	; 0xffffff98
    1818:	ldr	r3, [pc, #1948]	; 1fbc <log_oom_internal@plt+0x103c>
    181c:	str	r2, [sp, #8]
    1820:	ldr	r2, [fp, #-116]	; 0xffffff8c
    1824:	add	r3, pc, r3
    1828:	mov	r1, #0
    182c:	strd	r2, [sp]
    1830:	ldr	r2, [pc, #1928]	; 1fc0 <log_oom_internal@plt+0x1040>
    1834:	ldr	r3, [pc, #1928]	; 1fc4 <log_oom_internal@plt+0x1044>
    1838:	add	r2, pc, r2
    183c:	mov	r0, #6
    1840:	bl	ef0 <log_internal_realm@plt>
    1844:	mov	r6, #0
    1848:	mov	r0, r7
    184c:	bl	d34 <free@plt>
    1850:	b	1564 <log_oom_internal@plt+0x5e4>
    1854:	ldr	r3, [pc, #1780]	; 1f50 <log_oom_internal@plt+0xfd0>
    1858:	ldr	r3, [r9, r3]
    185c:	ldr	r3, [r3]
    1860:	cmp	r5, r3
    1864:	beq	1b2c <log_oom_internal@plt+0xbac>
    1868:	ldr	r3, [pc, #1880]	; 1fc8 <log_oom_internal@plt+0x1048>
    186c:	add	r3, pc, r3
    1870:	ldr	r3, [r3]
    1874:	cmp	r3, #2
    1878:	bne	1068 <log_oom_internal@plt+0xe8>
    187c:	ldr	r3, [pc, #1864]	; 1fcc <log_oom_internal@plt+0x104c>
    1880:	add	r3, pc, r3
    1884:	ldrb	r3, [r3, #16]
    1888:	cmp	r3, #0
    188c:	beq	1068 <log_oom_internal@plt+0xe8>
    1890:	mov	r0, r4
    1894:	bl	d94 <log_get_max_level_realm@plt>
    1898:	cmp	r0, #2
    189c:	ble	1240 <log_oom_internal@plt+0x2c0>
    18a0:	ldr	r2, [pc, #1832]	; 1fd0 <log_oom_internal@plt+0x1050>
    18a4:	ldr	r3, [pc, #1832]	; 1fd4 <log_oom_internal@plt+0x1054>
    18a8:	add	r2, pc, r2
    18ac:	str	r2, [sp, #4]
    18b0:	add	r3, pc, r3
    18b4:	ldr	r2, [pc, #1820]	; 1fd8 <log_oom_internal@plt+0x1058>
    18b8:	add	r3, r3, #64	; 0x40
    18bc:	str	r3, [sp]
    18c0:	add	r2, pc, r2
    18c4:	mov	r3, #456	; 0x1c8
    18c8:	mov	r1, #1073741846	; 0x40000016
    18cc:	mov	r0, #3
    18d0:	bl	ef0 <log_internal_realm@plt>
    18d4:	mov	r4, r0
    18d8:	b	1060 <log_oom_internal@plt+0xe0>
    18dc:	ldr	r2, [pc, #1784]	; 1fdc <log_oom_internal@plt+0x105c>
    18e0:	ldr	r3, [pc, #1784]	; 1fe0 <log_oom_internal@plt+0x1060>
    18e4:	add	r2, pc, r2
    18e8:	str	r2, [sp, #4]
    18ec:	add	r3, pc, r3
    18f0:	ldr	r2, [pc, #1772]	; 1fe4 <log_oom_internal@plt+0x1064>
    18f4:	add	r3, r3, #76	; 0x4c
    18f8:	str	r3, [sp]
    18fc:	mov	r1, r4
    1900:	ldr	r3, [pc, #1760]	; 1fe8 <log_oom_internal@plt+0x1068>
    1904:	add	r2, pc, r2
    1908:	mov	r0, #3
    190c:	bl	ef0 <log_internal_realm@plt>
    1910:	b	15fc <log_oom_internal@plt+0x67c>
    1914:	mov	r4, r5
    1918:	b	10e4 <log_oom_internal@plt+0x164>
    191c:	ldr	r3, [pc, #1736]	; 1fec <log_oom_internal@plt+0x106c>
    1920:	add	r3, pc, r3
    1924:	ldr	r3, [r3, #12]
    1928:	cmp	r3, #0
    192c:	beq	1934 <log_oom_internal@plt+0x9b4>
    1930:	bl	d4c <log_open@plt>
    1934:	mov	r0, #524288	; 0x80000
    1938:	bl	e60 <epoll_create1@plt>
    193c:	subs	r8, r0, #0
    1940:	blt	1bf4 <log_oom_internal@plt+0xc74>
    1944:	ldr	r1, [pc, #1700]	; 1ff0 <log_oom_internal@plt+0x1070>
    1948:	ldr	r2, [pc, #1700]	; 1ff4 <log_oom_internal@plt+0x1074>
    194c:	add	r1, pc, r1
    1950:	ldr	r3, [pc, #1696]	; 1ff8 <log_oom_internal@plt+0x1078>
    1954:	str	r1, [fp, #-92]	; 0xffffffa4
    1958:	ldr	r1, [pc, #1692]	; 1ffc <log_oom_internal@plt+0x107c>
    195c:	add	r2, pc, r2
    1960:	add	r3, pc, r3
    1964:	mov	r5, #3
    1968:	add	r7, r4, #2
    196c:	add	r1, pc, r1
    1970:	add	r2, r2, #100	; 0x64
    1974:	add	r3, r3, #132	; 0x84
    1978:	str	r1, [fp, #-100]	; 0xffffff9c
    197c:	str	r2, [fp, #-104]	; 0xffffff98
    1980:	str	r3, [fp, #-108]	; 0xffffff94
    1984:	str	r4, [fp, #-112]	; 0xffffff90
    1988:	cmp	r5, r7
    198c:	bgt	1cdc <log_oom_internal@plt+0xd5c>
    1990:	sub	r1, fp, #36	; 0x24
    1994:	mov	r6, #0
    1998:	str	r6, [r1, #-36]!	; 0xffffffdc
    199c:	mov	r0, r5
    19a0:	bl	f74 <getsockname_pretty@plt>
    19a4:	mov	r0, r6
    19a8:	bl	d94 <log_get_max_level_realm@plt>
    19ac:	cmp	r0, #5
    19b0:	ble	19ec <log_oom_internal@plt+0xa6c>
    19b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    19b8:	cmp	r3, r6
    19bc:	beq	1c3c <log_oom_internal@plt+0xcbc>
    19c0:	str	r5, [sp, #12]
    19c4:	str	r3, [sp, #8]
    19c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
    19cc:	mov	r1, #0
    19d0:	str	r3, [sp, #4]
    19d4:	ldr	r3, [fp, #-104]	; 0xffffff98
    19d8:	mov	r0, #6
    19dc:	str	r3, [sp]
    19e0:	ldr	r2, [fp, #-92]	; 0xffffffa4
    19e4:	mov	r3, #106	; 0x6a
    19e8:	bl	ef0 <log_internal_realm@plt>
    19ec:	mov	ip, #1
    19f0:	mov	r6, #0
    19f4:	mov	r1, ip
    19f8:	sub	r3, fp, #68	; 0x44
    19fc:	mov	r2, r5
    1a00:	mov	r0, r8
    1a04:	str	r5, [fp, #-60]	; 0xffffffc4
    1a08:	str	r6, [fp, #-56]	; 0xffffffc8
    1a0c:	str	r6, [fp, #-64]	; 0xffffffc0
    1a10:	str	ip, [fp, #-68]	; 0xffffffbc
    1a14:	bl	d88 <epoll_ctl@plt>
    1a18:	cmp	r0, r6
    1a1c:	blt	1aec <log_oom_internal@plt+0xb6c>
    1a20:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1a24:	add	r5, r5, #1
    1a28:	bl	d34 <free@plt>
    1a2c:	b	1988 <log_oom_internal@plt+0xa08>
    1a30:	ldr	r2, [pc, #1480]	; 2000 <log_oom_internal@plt+0x1080>
    1a34:	ldr	r3, [pc, #1480]	; 2004 <log_oom_internal@plt+0x1084>
    1a38:	add	r2, pc, r2
    1a3c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1a40:	add	r3, pc, r3
    1a44:	str	r2, [sp, #4]
    1a48:	ldr	r2, [pc, #1464]	; 2008 <log_oom_internal@plt+0x1088>
    1a4c:	add	r3, r3, #144	; 0x90
    1a50:	str	r3, [sp]
    1a54:	str	r1, [sp, #8]
    1a58:	ldr	r3, [pc, #1452]	; 200c <log_oom_internal@plt+0x108c>
    1a5c:	add	r2, pc, r2
    1a60:	mov	r1, #0
    1a64:	mov	r0, #6
    1a68:	bl	ef0 <log_internal_realm@plt>
    1a6c:	b	14dc <log_oom_internal@plt+0x55c>
    1a70:	ldr	r2, [pc, #1432]	; 2010 <log_oom_internal@plt+0x1090>
    1a74:	ldr	r3, [pc, #1432]	; 2014 <log_oom_internal@plt+0x1094>
    1a78:	add	r2, pc, r2
    1a7c:	str	r2, [sp, #4]
    1a80:	add	r3, pc, r3
    1a84:	ldr	r2, [pc, #1420]	; 2018 <log_oom_internal@plt+0x1098>
    1a88:	add	r3, r3, #100	; 0x64
    1a8c:	str	r3, [sp]
    1a90:	str	r5, [sp, #8]
    1a94:	mov	r3, #57	; 0x39
    1a98:	add	r2, pc, r2
    1a9c:	mov	r1, #0
    1aa0:	mov	r0, #6
    1aa4:	bl	ef0 <log_internal_realm@plt>
    1aa8:	b	10ac <log_oom_internal@plt+0x12c>
    1aac:	ldr	r2, [pc, #1384]	; 201c <log_oom_internal@plt+0x109c>
    1ab0:	ldr	r3, [pc, #1384]	; 2020 <log_oom_internal@plt+0x10a0>
    1ab4:	add	r2, pc, r2
    1ab8:	str	r2, [sp, #4]
    1abc:	add	r3, pc, r3
    1ac0:	ldr	r2, [pc, #1372]	; 2024 <log_oom_internal@plt+0x10a4>
    1ac4:	add	r3, r3, #100	; 0x64
    1ac8:	str	r3, [sp]
    1acc:	mov	r1, r5
    1ad0:	mov	r3, #55	; 0x37
    1ad4:	add	r2, pc, r2
    1ad8:	mov	r0, #3
    1adc:	bl	ef0 <log_internal_realm@plt>
    1ae0:	mvn	r8, #0
    1ae4:	mov	r4, r0
    1ae8:	b	1460 <log_oom_internal@plt+0x4e0>
    1aec:	bl	ecc <__errno_location@plt>
    1af0:	ldr	r4, [r0]
    1af4:	mov	r0, r6
    1af8:	bl	d94 <log_get_max_level_realm@plt>
    1afc:	cmp	r0, #2
    1b00:	bgt	1c60 <log_oom_internal@plt+0xce0>
    1b04:	eor	r0, r4, r4, asr #31
    1b08:	sub	r0, r0, r4, asr #31
    1b0c:	uxtb	r0, r0
    1b10:	rsb	r0, r0, #0
    1b14:	cmp	r0, #0
    1b18:	bge	1a20 <log_oom_internal@plt+0xaa0>
    1b1c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1b20:	bl	d34 <free@plt>
    1b24:	mov	r0, #1
    1b28:	b	124c <log_oom_internal@plt+0x2cc>
    1b2c:	mov	r0, r4
    1b30:	bl	d94 <log_get_max_level_realm@plt>
    1b34:	cmp	r0, #2
    1b38:	ble	1240 <log_oom_internal@plt+0x2c0>
    1b3c:	ldr	r3, [pc, #1008]	; 1f34 <log_oom_internal@plt+0xfb4>
    1b40:	ldr	r2, [pc, #1248]	; 2028 <log_oom_internal@plt+0x10a8>
    1b44:	ldr	r1, [pc, #1248]	; 202c <log_oom_internal@plt+0x10ac>
    1b48:	ldr	r0, [r9, r3]
    1b4c:	add	r2, pc, r2
    1b50:	add	r2, r2, #64	; 0x40
    1b54:	ldr	r0, [r0]
    1b58:	str	r2, [sp]
    1b5c:	ldr	r2, [pc, #1228]	; 2030 <log_oom_internal@plt+0x10b0>
    1b60:	add	r1, pc, r1
    1b64:	str	r0, [sp, #8]
    1b68:	str	r1, [sp, #4]
    1b6c:	ldr	r3, [pc, #1216]	; 2034 <log_oom_internal@plt+0x10b4>
    1b70:	add	r2, pc, r2
    1b74:	mov	r1, #1073741846	; 0x40000016
    1b78:	mov	r0, #3
    1b7c:	bl	ef0 <log_internal_realm@plt>
    1b80:	mov	r4, r0
    1b84:	b	1060 <log_oom_internal@plt+0xe0>
    1b88:	str	r0, [fp, #-92]	; 0xffffffa4
    1b8c:	bl	d4c <log_open@plt>
    1b90:	mov	r0, #0
    1b94:	bl	d94 <log_get_max_level_realm@plt>
    1b98:	ldr	r1, [fp, #-92]	; 0xffffffa4
    1b9c:	cmp	r0, #2
    1ba0:	bgt	1c98 <log_oom_internal@plt+0xd18>
    1ba4:	rsb	r4, r1, #0
    1ba8:	mvn	r8, #0
    1bac:	uxtb	r4, r4
    1bb0:	rsb	r4, r4, #0
    1bb4:	b	1460 <log_oom_internal@plt+0x4e0>
    1bb8:	ldr	r2, [pc, #1144]	; 2038 <log_oom_internal@plt+0x10b8>
    1bbc:	ldr	r3, [pc, #1144]	; 203c <log_oom_internal@plt+0x10bc>
    1bc0:	add	r2, pc, r2
    1bc4:	str	r2, [sp, #4]
    1bc8:	add	r3, pc, r3
    1bcc:	ldr	r2, [pc, #1132]	; 2040 <log_oom_internal@plt+0x10c0>
    1bd0:	add	r3, r3, #152	; 0x98
    1bd4:	str	r3, [sp]
    1bd8:	str	r7, [sp, #8]
    1bdc:	ldr	r3, [pc, #1120]	; 2044 <log_oom_internal@plt+0x10c4>
    1be0:	add	r2, pc, r2
    1be4:	mov	r0, #3
    1be8:	bl	ef0 <log_internal_realm@plt>
    1bec:	mov	r6, r0
    1bf0:	b	1564 <log_oom_internal@plt+0x5e4>
    1bf4:	bl	ecc <__errno_location@plt>
    1bf8:	ldr	r4, [r0]
    1bfc:	mov	r0, #0
    1c00:	bl	d94 <log_get_max_level_realm@plt>
    1c04:	cmp	r0, #2
    1c08:	bgt	1dec <log_oom_internal@plt+0xe6c>
    1c0c:	cmp	r4, #0
    1c10:	rsblt	r4, r4, #0
    1c14:	uxtb	r4, r4
    1c18:	rsb	r4, r4, #0
    1c1c:	b	1460 <log_oom_internal@plt+0x4e0>
    1c20:	ldr	r1, [pc, #1056]	; 2048 <log_oom_internal@plt+0x10c8>
    1c24:	ldr	r3, [fp, #-112]	; 0xffffff90
    1c28:	mov	r2, #250	; 0xfa
    1c2c:	add	r1, pc, r1
    1c30:	bl	f80 <log_oom_internal@plt>
    1c34:	mov	r6, r0
    1c38:	b	1848 <log_oom_internal@plt+0x8c8>
    1c3c:	ldr	r3, [pc, #1032]	; 204c <log_oom_internal@plt+0x10cc>
    1c40:	add	r3, pc, r3
    1c44:	b	19c0 <log_oom_internal@plt+0xa40>
    1c48:	ldr	r0, [pc, #1024]	; 2050 <log_oom_internal@plt+0x10d0>
    1c4c:	add	r0, pc, r0
    1c50:	b	1774 <log_oom_internal@plt+0x7f4>
    1c54:	ldr	r1, [pc, #1016]	; 2054 <log_oom_internal@plt+0x10d4>
    1c58:	add	r1, pc, r1
    1c5c:	b	1768 <log_oom_internal@plt+0x7e8>
    1c60:	str	r5, [sp, #12]
    1c64:	str	r8, [sp, #8]
    1c68:	ldr	r2, [fp, #-108]	; 0xffffff94
    1c6c:	ldr	r3, [pc, #996]	; 2058 <log_oom_internal@plt+0x10d8>
    1c70:	str	r2, [sp]
    1c74:	ldr	r2, [pc, #992]	; 205c <log_oom_internal@plt+0x10dc>
    1c78:	add	r3, pc, r3
    1c7c:	str	r3, [sp, #4]
    1c80:	mov	r1, r4
    1c84:	mov	r3, #43	; 0x2b
    1c88:	add	r2, pc, r2
    1c8c:	mov	r0, #3
    1c90:	bl	ef0 <log_internal_realm@plt>
    1c94:	b	1b14 <log_oom_internal@plt+0xb94>
    1c98:	ldr	r2, [pc, #960]	; 2060 <log_oom_internal@plt+0x10e0>
    1c9c:	ldr	r3, [pc, #960]	; 2064 <log_oom_internal@plt+0x10e4>
    1ca0:	add	r2, pc, r2
    1ca4:	ldr	r0, [r8]
    1ca8:	add	r3, pc, r3
    1cac:	str	r2, [sp, #4]
    1cb0:	ldr	r2, [pc, #944]	; 2068 <log_oom_internal@plt+0x10e8>
    1cb4:	add	r3, r3, #100	; 0x64
    1cb8:	str	r0, [sp, #8]
    1cbc:	str	r3, [sp]
    1cc0:	add	r2, pc, r2
    1cc4:	mov	r3, #88	; 0x58
    1cc8:	mov	r0, #3
    1ccc:	bl	ef0 <log_internal_realm@plt>
    1cd0:	mvn	r8, #0
    1cd4:	mov	r4, r0
    1cd8:	b	1460 <log_oom_internal@plt+0x4e0>
    1cdc:	ldr	r4, [fp, #-112]	; 0xffffff90
    1ce0:	b	1468 <log_oom_internal@plt+0x4e8>
    1ce4:	mov	r0, r4
    1ce8:	bl	d94 <log_get_max_level_realm@plt>
    1cec:	cmp	r0, #2
    1cf0:	ble	1240 <log_oom_internal@plt+0x2c0>
    1cf4:	ldr	r2, [pc, #880]	; 206c <log_oom_internal@plt+0x10ec>
    1cf8:	ldr	r3, [pc, #880]	; 2070 <log_oom_internal@plt+0x10f0>
    1cfc:	add	r2, pc, r2
    1d00:	str	r2, [sp, #4]
    1d04:	add	r3, pc, r3
    1d08:	ldr	r2, [pc, #868]	; 2074 <log_oom_internal@plt+0x10f4>
    1d0c:	add	r3, r3, #64	; 0x40
    1d10:	str	r3, [sp]
    1d14:	add	r2, pc, r2
    1d18:	mov	r3, #396	; 0x18c
    1d1c:	mov	r1, #1073741846	; 0x40000016
    1d20:	mov	r0, #3
    1d24:	bl	ef0 <log_internal_realm@plt>
    1d28:	mov	r4, r0
    1d2c:	b	1060 <log_oom_internal@plt+0xe0>
    1d30:	ldr	r3, [pc, #832]	; 2078 <log_oom_internal@plt+0x10f8>
    1d34:	ldr	r1, [pc, #832]	; 207c <log_oom_internal@plt+0x10fc>
    1d38:	add	r3, pc, r3
    1d3c:	ldr	r2, [pc, #828]	; 2080 <log_oom_internal@plt+0x1100>
    1d40:	add	r3, r3, #64	; 0x40
    1d44:	add	r1, pc, r1
    1d48:	bl	f80 <log_oom_internal@plt>
    1d4c:	mov	r4, r0
    1d50:	b	1060 <log_oom_internal@plt+0xe0>
    1d54:	mov	r0, r4
    1d58:	bl	d94 <log_get_max_level_realm@plt>
    1d5c:	cmp	r0, #2
    1d60:	ble	1240 <log_oom_internal@plt+0x2c0>
    1d64:	ldr	r2, [pc, #792]	; 2084 <log_oom_internal@plt+0x1104>
    1d68:	ldr	r3, [pc, #792]	; 2088 <log_oom_internal@plt+0x1108>
    1d6c:	add	r2, pc, r2
    1d70:	str	r2, [sp, #4]
    1d74:	add	r3, pc, r3
    1d78:	ldr	r2, [pc, #780]	; 208c <log_oom_internal@plt+0x110c>
    1d7c:	add	r3, r3, #64	; 0x40
    1d80:	str	r3, [sp]
    1d84:	add	r2, pc, r2
    1d88:	mov	r3, #388	; 0x184
    1d8c:	mov	r1, #1073741846	; 0x40000016
    1d90:	mov	r0, #3
    1d94:	bl	ef0 <log_internal_realm@plt>
    1d98:	mov	r4, r0
    1d9c:	b	1060 <log_oom_internal@plt+0xe0>
    1da0:	ldr	r4, [fp, #-120]	; 0xffffff88
    1da4:	sub	r0, fp, #104	; 0x68
    1da8:	str	r4, [sp]
    1dac:	mov	r3, #3
    1db0:	ldm	r0, {r0, r1, r2}
    1db4:	bl	2384 <log_oom_internal@plt+0x1404>
    1db8:	mov	r0, r6
    1dbc:	b	124c <log_oom_internal@plt+0x2cc>
    1dc0:	mov	r4, r0
    1dc4:	mov	r0, #0
    1dc8:	bl	d94 <log_get_max_level_realm@plt>
    1dcc:	cmp	r0, #2
    1dd0:	rsble	r4, r4, #0
    1dd4:	uxtble	r4, r4
    1dd8:	rsble	r4, r4, #0
    1ddc:	bgt	1e28 <log_oom_internal@plt+0xea8>
    1de0:	mov	r0, r8
    1de4:	bl	efc <strv_free@plt>
    1de8:	b	1060 <log_oom_internal@plt+0xe0>
    1dec:	ldr	r2, [pc, #668]	; 2090 <log_oom_internal@plt+0x1110>
    1df0:	ldr	r3, [pc, #668]	; 2094 <log_oom_internal@plt+0x1114>
    1df4:	add	r2, pc, r2
    1df8:	str	r2, [sp, #4]
    1dfc:	add	r3, pc, r3
    1e00:	ldr	r2, [pc, #656]	; 2098 <log_oom_internal@plt+0x1118>
    1e04:	add	r3, r3, #100	; 0x64
    1e08:	mov	r1, r4
    1e0c:	str	r3, [sp]
    1e10:	add	r2, pc, r2
    1e14:	mov	r3, #100	; 0x64
    1e18:	mov	r0, #3
    1e1c:	bl	ef0 <log_internal_realm@plt>
    1e20:	mov	r4, r0
    1e24:	b	1460 <log_oom_internal@plt+0x4e0>
    1e28:	ldr	r2, [pc, #620]	; 209c <log_oom_internal@plt+0x111c>
    1e2c:	ldr	r3, [pc, #620]	; 20a0 <log_oom_internal@plt+0x1120>
    1e30:	add	r2, pc, r2
    1e34:	str	r2, [sp, #4]
    1e38:	add	r3, pc, r3
    1e3c:	ldr	r2, [pc, #608]	; 20a4 <log_oom_internal@plt+0x1124>
    1e40:	add	r3, r3, #64	; 0x40
    1e44:	mov	r1, r4
    1e48:	str	r3, [sp]
    1e4c:	add	r2, pc, r2
    1e50:	ldr	r3, [pc, #592]	; 20a8 <log_oom_internal@plt+0x1128>
    1e54:	mov	r0, #3
    1e58:	bl	ef0 <log_internal_realm@plt>
    1e5c:	mov	r4, r0
    1e60:	b	1de0 <log_oom_internal@plt+0xe60>
    1e64:	ldr	r2, [pc, #576]	; 20ac <log_oom_internal@plt+0x112c>
    1e68:	ldr	r1, [pc, #576]	; 20b0 <log_oom_internal@plt+0x1130>
    1e6c:	add	r2, pc, r2
    1e70:	add	r2, r2, #44	; 0x2c
    1e74:	str	r2, [sp]
    1e78:	ldr	r2, [pc, #564]	; 20b4 <log_oom_internal@plt+0x1134>
    1e7c:	ldr	r3, [pc, #564]	; 20b8 <log_oom_internal@plt+0x1138>
    1e80:	add	r2, pc, r2
    1e84:	add	r1, pc, r1
    1e88:	mov	r0, #0
    1e8c:	bl	d58 <log_assert_failed_unreachable_realm@plt>
    1e90:	bl	e00 <__stack_chk_fail@plt>
    1e94:	sub	r0, fp, #104	; 0x68
    1e98:	mov	r3, r4
    1e9c:	mov	r4, #1
    1ea0:	ldm	r0, {r0, r1, r2}
    1ea4:	str	r4, [sp]
    1ea8:	bl	2384 <log_oom_internal@plt+0x1404>
    1eac:	mov	r0, r4
    1eb0:	bl	eb4 <_exit@plt>
    1eb4:	andeq	r2, r1, r4, asr pc
    1eb8:	ldrdeq	r0, [r0], -ip
    1ebc:	strdeq	r1, [r0], -r0
    1ec0:	andeq	r3, r1, r4, lsl r0
    1ec4:			; <UNDEFINED> instruction: 0x00012cb0
    1ec8:	andeq	r2, r0, ip, lsr r3
    1ecc:	andeq	r0, r0, r1, lsl #2
    1ed0:	andeq	r2, r1, r4, lsr ip
    1ed4:	andeq	r2, r1, ip, asr #30
    1ed8:	andeq	r2, r1, ip, lsl pc
    1edc:			; <UNDEFINED> instruction: 0x00012ebc
    1ee0:			; <UNDEFINED> instruction: 0x00012eb4
    1ee4:	andeq	r2, r1, r8, lsr #29
    1ee8:	andeq	r1, r0, ip, lsr #22
    1eec:	ldrdeq	r2, [r0], -r4
    1ef0:	ldrdeq	r1, [r0], -r4
    1ef4:	andeq	r2, r1, ip, lsl #28
    1ef8:	andeq	r0, r0, r2, lsl #2
    1efc:	ldrdeq	r2, [r1], -r8
    1f00:	andeq	r0, r0, r8, ror #1
    1f04:	muleq	r1, r0, sp
    1f08:	andeq	r1, r0, r4, asr #20
    1f0c:	strdeq	r1, [r0], -r0
    1f10:	andeq	r0, r0, sp, ror r1
    1f14:	andeq	r2, r1, r4, asr #26
    1f18:	strdeq	r1, [r0], -r8
    1f1c:	andeq	r1, r0, r4, lsr #21
    1f20:	strdeq	r2, [r1], -ip
    1f24:	andeq	r1, r0, ip, ror #23
    1f28:	andeq	r1, r0, r4, asr sl
    1f2c:	andeq	r1, r0, r4, asr #23
    1f30:	andeq	r1, r0, r4, asr #23
    1f34:	strdeq	r0, [r0], -r8
    1f38:			; <UNDEFINED> instruction: 0x00001bb8
    1f3c:	andeq	r2, r1, ip, lsl #24
    1f40:	andeq	r1, r0, r0, ror #16
    1f44:	andeq	r1, r0, r0, asr r8
    1f48:	andeq	r2, r1, r8, ror fp
    1f4c:	andeq	r1, r0, r4, lsl #21
    1f50:	andeq	r0, r0, r0, ror #1
    1f54:	andeq	r1, r0, r4, asr #14
    1f58:	strdeq	r1, [r0], -r0
    1f5c:	andeq	r1, r0, r0, lsr #28
    1f60:	andeq	r1, r0, r8, ror #25
    1f64:	andeq	r0, r0, r9, lsr #3
    1f68:	muleq	r0, r8, r6
    1f6c:	andeq	r1, r0, r0, lsl #18
    1f70:	andeq	r1, r0, r0, asr #14
    1f74:	andeq	r0, r0, pc, ror #2
    1f78:	andeq	r1, r0, ip, ror #12
    1f7c:	andeq	r1, r0, r0, lsl r7
    1f80:	ldrdeq	r1, [r0], -ip
    1f84:	andeq	r1, r0, r4, lsr #29
    1f88:	andeq	r1, r0, r8, lsl r6
    1f8c:			; <UNDEFINED> instruction: 0x000016bc
    1f90:	andeq	r0, r0, sp, ror #3
    1f94:	andeq	r1, r0, ip, lsr #28
    1f98:	ldrdeq	r1, [r0], -r0
    1f9c:	andeq	r1, r0, r4, ror r6
    1fa0:	andeq	r0, r0, r2, ror #3
    1fa4:	andeq	r1, r0, r4, asr #28
    1fa8:	andeq	r1, r0, r8, asr r5
    1fac:	strdeq	r1, [r0], -r8
    1fb0:	andeq	r0, r0, r3, lsl r1
    1fb4:	strdeq	r1, [r0], -ip
    1fb8:	andeq	r0, r0, r5, lsr #4
    1fbc:	andeq	r1, r0, r4, asr #27
    1fc0:	andeq	r1, r0, ip, asr r5
    1fc4:	andeq	r0, r0, r5, lsl #2
    1fc8:	muleq	r1, r0, r7
    1fcc:	andeq	r2, r1, r4, lsl #15
    1fd0:	ldrdeq	r1, [r0], -r8
    1fd4:	andeq	r1, r0, r8, lsr #8
    1fd8:	ldrdeq	r1, [r0], -r4
    1fdc:	andeq	r1, r0, r4, lsl #22
    1fe0:	andeq	r1, r0, ip, ror #7
    1fe4:	muleq	r0, r0, r4
    1fe8:	andeq	r0, r0, r5, lsr r1
    1fec:	andeq	r2, r1, r4, ror #13
    1ff0:	andeq	r1, r0, r8, asr #8
    1ff4:	andeq	r1, r0, ip, ror r3
    1ff8:	andeq	r1, r0, r8, ror r3
    1ffc:	andeq	r1, r0, r4, ror fp
    2000:	andeq	r1, r0, ip, lsr fp
    2004:	muleq	r0, r8, r2
    2008:	andeq	r1, r0, r8, lsr r3
    200c:	strdeq	r0, [r0], -r1
    2010:	ldrdeq	r1, [r0], -r8
    2014:	andeq	r1, r0, r8, asr r2
    2018:	strdeq	r1, [r0], -ip
    201c:	andeq	r1, r0, ip, asr r9
    2020:	andeq	r1, r0, ip, lsl r2
    2024:	andeq	r1, r0, r0, asr #5
    2028:	andeq	r1, r0, ip, lsl #3
    202c:	strdeq	r1, [r0], -ip
    2030:	andeq	r1, r0, r4, lsr #4
    2034:	andeq	r0, r0, r3, asr #3
    2038:	ldrdeq	r1, [r0], -r4
    203c:	andeq	r1, r0, r0, lsl r1
    2040:			; <UNDEFINED> instruction: 0x000011b4
    2044:	andeq	r0, r0, pc, lsl #2
    2048:	andeq	r1, r0, r8, ror #2
    204c:	andeq	r1, r0, r4, lsl r3
    2050:	andeq	r1, r0, r8, lsl #6
    2054:	strdeq	r1, [r0], -ip
    2058:	andeq	r1, r0, r0, lsl #17
    205c:	andeq	r1, r0, ip, lsl #2
    2060:	andeq	r1, r0, r0, ror #15
    2064:	andeq	r1, r0, r0, lsr r0
    2068:	ldrdeq	r1, [r0], -r4
    206c:	andeq	r1, r0, ip, asr #11
    2070:	ldrdeq	r0, [r0], -r4
    2074:	andeq	r1, r0, r0, lsl #1
    2078:	andeq	r0, r0, r0, lsr #31
    207c:	andeq	r1, r0, r0, asr r0
    2080:	andeq	r0, r0, r2, lsr #3
    2084:	andeq	r1, r0, r8, lsr #10
    2088:	andeq	r0, r0, r4, ror #30
    208c:	andeq	r1, r0, r0, lsl r0
    2090:	andeq	r1, r0, r8, asr #13
    2094:	ldrdeq	r0, [r0], -ip
    2098:	andeq	r0, r0, r4, lsl #31
    209c:	strdeq	r1, [r0], -r4
    20a0:	andeq	r0, r0, r0, lsr #29
    20a4:	andeq	r0, r0, r8, asr #30
    20a8:			; <UNDEFINED> instruction: 0x000001b1
    20ac:	andeq	r0, r0, ip, ror #28
    20b0:			; <UNDEFINED> instruction: 0x000014b8
    20b4:	andeq	r0, r0, r4, lsl pc
    20b8:			; <UNDEFINED> instruction: 0x000001bd
    20bc:	mov	fp, #0
    20c0:	mov	lr, #0
    20c4:	pop	{r1}		; (ldr r1, [sp], #4)
    20c8:	mov	r2, sp
    20cc:	push	{r2}		; (str r2, [sp, #-4]!)
    20d0:	push	{r0}		; (str r0, [sp, #-4]!)
    20d4:	ldr	sl, [pc, #40]	; 2104 <log_oom_internal@plt+0x1184>
    20d8:	add	r3, pc, #36	; 0x24
    20dc:	add	sl, sl, r3
    20e0:	ldr	ip, [pc, #32]	; 2108 <log_oom_internal@plt+0x1188>
    20e4:	ldr	ip, [sl, ip]
    20e8:	push	{ip}		; (str ip, [sp, #-4]!)
    20ec:	ldr	r3, [pc, #24]	; 210c <log_oom_internal@plt+0x118c>
    20f0:	ldr	r3, [sl, r3]
    20f4:	ldr	r0, [pc, #20]	; 2110 <log_oom_internal@plt+0x1190>
    20f8:	ldr	r0, [sl, r0]
    20fc:	bl	f08 <__libc_start_main@plt>
    2100:	bl	dac <abort@plt>
    2104:	strdeq	r1, [r1], -r4
    2108:	strdeq	r0, [r0], -r4
    210c:	andeq	r0, r0, ip, ror #1
    2110:	andeq	r0, r0, r4, ror #1
    2114:	ldr	r3, [pc, #20]	; 2130 <log_oom_internal@plt+0x11b0>
    2118:	ldr	r2, [pc, #20]	; 2134 <log_oom_internal@plt+0x11b4>
    211c:	add	r3, pc, r3
    2120:	ldr	r2, [r3, r2]
    2124:	cmp	r2, #0
    2128:	bxeq	lr
    212c:	b	f20 <__gmon_start__@plt>
    2130:	ldrdeq	r1, [r1], -r4
    2134:	strdeq	r0, [r0], -ip
    2138:	ldr	r0, [pc, #44]	; 216c <log_oom_internal@plt+0x11ec>
    213c:	ldr	r3, [pc, #44]	; 2170 <log_oom_internal@plt+0x11f0>
    2140:	add	r0, pc, r0
    2144:	add	r3, pc, r3
    2148:	cmp	r3, r0
    214c:	ldr	r3, [pc, #32]	; 2174 <log_oom_internal@plt+0x11f4>
    2150:	add	r3, pc, r3
    2154:	bxeq	lr
    2158:	ldr	r2, [pc, #24]	; 2178 <log_oom_internal@plt+0x11f8>
    215c:	ldr	r3, [r3, r2]
    2160:	cmp	r3, #0
    2164:	bxeq	lr
    2168:	bx	r3
    216c:	andeq	r1, r1, r0, asr #29
    2170:			; <UNDEFINED> instruction: 0x00011ebc
    2174:	andeq	r1, r1, r0, lsr #27
    2178:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    217c:	ldr	r0, [pc, #56]	; 21bc <log_oom_internal@plt+0x123c>
    2180:	ldr	r3, [pc, #56]	; 21c0 <log_oom_internal@plt+0x1240>
    2184:	add	r0, pc, r0
    2188:	add	r3, pc, r3
    218c:	sub	r1, r3, r0
    2190:	ldr	r3, [pc, #44]	; 21c4 <log_oom_internal@plt+0x1244>
    2194:	asr	r1, r1, #2
    2198:	add	r3, pc, r3
    219c:	add	r1, r1, r1, lsr #31
    21a0:	asrs	r1, r1, #1
    21a4:	bxeq	lr
    21a8:	ldr	r2, [pc, #24]	; 21c8 <log_oom_internal@plt+0x1248>
    21ac:	ldr	r3, [r3, r2]
    21b0:	cmp	r3, #0
    21b4:	bxeq	lr
    21b8:	bx	r3
    21bc:	andeq	r1, r1, ip, ror lr
    21c0:	andeq	r1, r1, r8, ror lr
    21c4:	andeq	r1, r1, r8, asr sp
    21c8:	andeq	r0, r0, r0, lsl #2
    21cc:	ldr	r3, [pc, #76]	; 2220 <log_oom_internal@plt+0x12a0>
    21d0:	ldr	r2, [pc, #76]	; 2224 <log_oom_internal@plt+0x12a4>
    21d4:	add	r3, pc, r3
    21d8:	add	r2, pc, r2
    21dc:	ldrb	r3, [r3]
    21e0:	cmp	r3, #0
    21e4:	bxne	lr
    21e8:	ldr	r3, [pc, #56]	; 2228 <log_oom_internal@plt+0x12a8>
    21ec:	push	{r4, lr}
    21f0:	ldr	r3, [r2, r3]
    21f4:	cmp	r3, #0
    21f8:	beq	2208 <log_oom_internal@plt+0x1288>
    21fc:	ldr	r3, [pc, #40]	; 222c <log_oom_internal@plt+0x12ac>
    2200:	ldr	r0, [pc, r3]
    2204:	bl	f38 <__cxa_finalize@plt>
    2208:	bl	2138 <log_oom_internal@plt+0x11b8>
    220c:	ldr	r3, [pc, #28]	; 2230 <log_oom_internal@plt+0x12b0>
    2210:	mov	r2, #1
    2214:	add	r3, pc, r3
    2218:	strb	r2, [r3]
    221c:	pop	{r4, pc}
    2220:	andeq	r1, r1, ip, lsr #28
    2224:	andeq	r1, r1, r8, lsl sp
    2228:	andeq	r0, r0, r4, lsl #2
    222c:	strdeq	r1, [r1], -r8
    2230:	andeq	r1, r1, ip, ror #27
    2234:	b	217c <log_oom_internal@plt+0x11fc>
    2238:	ldr	r3, [pc, #288]	; 2360 <log_oom_internal@plt+0x13e0>
    223c:	ldr	r2, [pc, #288]	; 2364 <log_oom_internal@plt+0x13e4>
    2240:	add	r3, pc, r3
    2244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2248:	sub	sp, sp, #164	; 0xa4
    224c:	ldr	r3, [r3, r2]
    2250:	ldr	sl, [pc, #272]	; 2368 <log_oom_internal@plt+0x13e8>
    2254:	str	r3, [sp, #20]
    2258:	ldr	r3, [r3]
    225c:	ldr	r9, [pc, #264]	; 236c <log_oom_internal@plt+0x13ec>
    2260:	str	r3, [sp, #156]	; 0x9c
    2264:	bl	ecc <__errno_location@plt>
    2268:	ldr	r8, [pc, #256]	; 2370 <log_oom_internal@plt+0x13f0>
    226c:	add	sl, pc, sl
    2270:	add	r9, pc, r9
    2274:	add	r8, pc, r8
    2278:	add	r5, sp, #28
    227c:	ldr	fp, [r0]
    2280:	mov	r6, r0
    2284:	mov	r4, #0
    2288:	mov	r1, r4
    228c:	mov	r0, r4
    2290:	mov	r3, #5
    2294:	mov	r2, r5
    2298:	str	r4, [sp, #40]	; 0x28
    229c:	bl	de8 <waitid@plt>
    22a0:	cmp	r0, r4
    22a4:	blt	22ec <log_oom_internal@plt+0x136c>
    22a8:	ldr	r7, [sp, #40]	; 0x28
    22ac:	cmp	r7, #0
    22b0:	beq	2338 <log_oom_internal@plt+0x13b8>
    22b4:	mov	r0, r4
    22b8:	bl	d94 <log_get_max_level_realm@plt>
    22bc:	cmp	r0, #5
    22c0:	ble	2284 <log_oom_internal@plt+0x1304>
    22c4:	ldr	r2, [sp, #48]	; 0x30
    22c8:	str	r7, [sp, #8]
    22cc:	str	r2, [sp, #12]
    22d0:	strd	r8, [sp]
    22d4:	mov	r1, r4
    22d8:	ldr	r3, [pc, #148]	; 2374 <log_oom_internal@plt+0x13f4>
    22dc:	mov	r2, sl
    22e0:	mov	r0, #6
    22e4:	bl	ef0 <log_internal_realm@plt>
    22e8:	b	2284 <log_oom_internal@plt+0x1304>
    22ec:	ldr	r5, [r6]
    22f0:	cmp	r5, #10
    22f4:	beq	2338 <log_oom_internal@plt+0x13b8>
    22f8:	mov	r0, r4
    22fc:	bl	d94 <log_get_max_level_realm@plt>
    2300:	cmp	r0, #2
    2304:	ble	2338 <log_oom_internal@plt+0x13b8>
    2308:	ldr	r2, [pc, #104]	; 2378 <log_oom_internal@plt+0x13f8>
    230c:	ldr	r3, [pc, #104]	; 237c <log_oom_internal@plt+0x13fc>
    2310:	add	r2, pc, r2
    2314:	str	r2, [sp, #4]
    2318:	ldr	r2, [pc, #96]	; 2380 <log_oom_internal@plt+0x1400>
    231c:	add	r3, pc, r3
    2320:	str	r3, [sp]
    2324:	mov	r1, r5
    2328:	mov	r3, #292	; 0x124
    232c:	add	r2, pc, r2
    2330:	mov	r0, #3
    2334:	bl	ef0 <log_internal_realm@plt>
    2338:	ldr	r3, [sp, #20]
    233c:	cmp	fp, #0
    2340:	strge	fp, [r6]
    2344:	ldr	r2, [sp, #156]	; 0x9c
    2348:	ldr	r3, [r3]
    234c:	cmp	r2, r3
    2350:	bne	235c <log_oom_internal@plt+0x13dc>
    2354:	add	sp, sp, #164	; 0xa4
    2358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    235c:	bl	e00 <__stack_chk_fail@plt>
    2360:			; <UNDEFINED> instruction: 0x00011cb0
    2364:	ldrdeq	r0, [r0], -ip
    2368:	andeq	r0, r0, r8, lsr #22
    236c:	andeq	r0, r0, ip, asr fp
    2370:	andeq	r0, r0, r4, ror #20
    2374:	andeq	r0, r0, sl, lsr #2
    2378:	andeq	r0, r0, r0, lsr #21
    237c:			; <UNDEFINED> instruction: 0x000009bc
    2380:	andeq	r0, r0, r8, ror #20
    2384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2388:	sub	sp, sp, #60	; 0x3c
    238c:	ldr	ip, [pc, #2020]	; 2b78 <log_oom_internal@plt+0x1bf8>
    2390:	ldr	r5, [pc, #2020]	; 2b7c <log_oom_internal@plt+0x1bfc>
    2394:	ldr	lr, [pc, #2020]	; 2b80 <log_oom_internal@plt+0x1c00>
    2398:	add	ip, pc, ip
    239c:	add	r5, pc, r5
    23a0:	ldr	lr, [ip, lr]
    23a4:	ldrb	r4, [r5]
    23a8:	ldr	sl, [sp, #96]	; 0x60
    23ac:	str	r3, [sp, #20]
    23b0:	cmp	sl, #1
    23b4:	moveq	r4, #0
    23b8:	andne	r4, r4, #1
    23bc:	ldr	r3, [lr]
    23c0:	cmp	r4, #0
    23c4:	str	lr, [sp, #16]
    23c8:	str	r0, [sp, #28]
    23cc:	str	r1, [sp, #24]
    23d0:	str	r3, [sp, #52]	; 0x34
    23d4:	bne	25dc <log_oom_internal@plt+0x165c>
    23d8:	ldr	r6, [r5, #4]
    23dc:	mov	r8, r2
    23e0:	mov	r0, r6
    23e4:	bl	e30 <strv_length@plt>
    23e8:	mov	r1, #4
    23ec:	cmn	r0, #8
    23f0:	addne	r0, r0, #8
    23f4:	moveq	r0, #1
    23f8:	bl	e78 <calloc@plt>
    23fc:	subs	r7, r0, #0
    2400:	beq	26f0 <log_oom_internal@plt+0x1770>
    2404:	cmp	r6, #0
    2408:	beq	29f4 <log_oom_internal@plt+0x1a74>
    240c:	ldr	r9, [r6]
    2410:	cmp	r9, #0
    2414:	moveq	r4, r9
    2418:	beq	24b4 <log_oom_internal@plt+0x1534>
    241c:	ldr	fp, [pc, #1888]	; 2b84 <log_oom_internal@plt+0x1c04>
    2420:	add	r6, r6, #4
    2424:	add	fp, pc, fp
    2428:	b	2454 <log_oom_internal@plt+0x14d4>
    242c:	bl	f5c <strdup@plt>
    2430:	subs	r5, r0, #0
    2434:	beq	2728 <log_oom_internal@plt+0x17a8>
    2438:	str	r5, [r7, r4, lsl #2]
    243c:	add	r4, r4, #1
    2440:	cmp	r6, #0
    2444:	beq	24b4 <log_oom_internal@plt+0x1534>
    2448:	ldr	r9, [r6], #4
    244c:	cmp	r9, #0
    2450:	beq	24b4 <log_oom_internal@plt+0x1534>
    2454:	mov	r1, #61	; 0x3d
    2458:	mov	r0, r9
    245c:	bl	f2c <strchr@plt>
    2460:	subs	r5, r0, #0
    2464:	mov	r0, r9
    2468:	bne	242c <log_oom_internal@plt+0x14ac>
    246c:	mov	r1, fp
    2470:	bl	e18 <strappend@plt>
    2474:	subs	r9, r0, #0
    2478:	beq	2870 <log_oom_internal@plt+0x18f0>
    247c:	mov	r1, r9
    2480:	mov	r0, r8
    2484:	bl	e24 <strv_find_prefix@plt>
    2488:	cmp	r0, #0
    248c:	beq	2644 <log_oom_internal@plt+0x16c4>
    2490:	bl	f5c <strdup@plt>
    2494:	cmp	r0, #0
    2498:	str	r0, [r7, r4, lsl #2]
    249c:	beq	29ac <log_oom_internal@plt+0x1a2c>
    24a0:	mov	r0, r9
    24a4:	bl	d34 <free@plt>
    24a8:	cmp	r6, #0
    24ac:	add	r4, r4, #1
    24b0:	bne	2448 <log_oom_internal@plt+0x14c8>
    24b4:	ldr	r3, [pc, #1740]	; 2b88 <log_oom_internal@plt+0x1c08>
    24b8:	ldr	r1, [pc, #1740]	; 2b8c <log_oom_internal@plt+0x1c0c>
    24bc:	add	r3, pc, r3
    24c0:	mov	r9, r3
    24c4:	str	r3, [sp, #32]
    24c8:	ldr	r3, [pc, #1728]	; 2b90 <log_oom_internal@plt+0x1c10>
    24cc:	add	r1, pc, r1
    24d0:	ldr	r2, [pc, #1724]	; 2b94 <log_oom_internal@plt+0x1c14>
    24d4:	add	r3, pc, r3
    24d8:	str	r1, [sp, #36]	; 0x24
    24dc:	add	r6, sp, #32
    24e0:	mov	r1, r9
    24e4:	add	r2, pc, r2
    24e8:	str	r3, [sp, #44]	; 0x2c
    24ec:	mov	r3, #0
    24f0:	str	r2, [sp, #40]	; 0x28
    24f4:	str	r3, [sp, #48]	; 0x30
    24f8:	mov	r0, r8
    24fc:	bl	e24 <strv_find_prefix@plt>
    2500:	cmp	r0, #0
    2504:	beq	2520 <log_oom_internal@plt+0x15a0>
    2508:	bl	f5c <strdup@plt>
    250c:	cmp	r0, #0
    2510:	mov	r5, r0
    2514:	str	r0, [r7, r4, lsl #2]
    2518:	beq	26cc <log_oom_internal@plt+0x174c>
    251c:	add	r4, r4, #1
    2520:	ldr	r1, [r6, #4]!
    2524:	cmp	r1, #0
    2528:	bne	24f8 <log_oom_internal@plt+0x1578>
    252c:	ldr	r3, [pc, #1636]	; 2b98 <log_oom_internal@plt+0x1c18>
    2530:	mov	r9, r1
    2534:	add	r3, pc, r3
    2538:	ldrb	r5, [r3]
    253c:	cmp	r5, #0
    2540:	beq	2650 <log_oom_internal@plt+0x16d0>
    2544:	cmp	sl, #1
    2548:	bne	2a68 <log_oom_internal@plt+0x1ae8>
    254c:	ldr	r1, [sp, #20]
    2550:	mov	r2, #2
    2554:	mov	r0, r1
    2558:	bl	ddc <rearrange_stdio@plt>
    255c:	subs	r4, r0, #0
    2560:	blt	29d0 <log_oom_internal@plt+0x1a50>
    2564:	ldr	r1, [pc, #1584]	; 2b9c <log_oom_internal@plt+0x1c1c>
    2568:	mov	r2, #0
    256c:	add	r1, pc, r1
    2570:	ldr	r0, [sp, #24]
    2574:	bl	f50 <strv_join_prefix@plt>
    2578:	subs	r5, r0, #0
    257c:	beq	29fc <log_oom_internal@plt+0x1a7c>
    2580:	mov	r0, #0
    2584:	bl	d94 <log_get_max_level_realm@plt>
    2588:	cmp	r0, #5
    258c:	bgt	293c <log_oom_internal@plt+0x19bc>
    2590:	ldr	r1, [sp, #24]
    2594:	mov	r2, r7
    2598:	ldr	r0, [sp, #28]
    259c:	bl	f44 <execvpe@plt>
    25a0:	bl	ecc <__errno_location@plt>
    25a4:	ldr	r4, [r0]
    25a8:	mov	r0, #0
    25ac:	bl	d94 <log_get_max_level_realm@plt>
    25b0:	cmp	r0, #2
    25b4:	bgt	28f4 <log_oom_internal@plt+0x1974>
    25b8:	cmp	r4, #0
    25bc:	rsblt	r4, r4, #0
    25c0:	uxtb	r4, r4
    25c4:	rsb	r4, r4, #0
    25c8:	mov	r0, r5
    25cc:	bl	d34 <free@plt>
    25d0:	mov	r0, r7
    25d4:	bl	efc <strv_free@plt>
    25d8:	b	2624 <log_oom_internal@plt+0x16a4>
    25dc:	mov	r0, #0
    25e0:	bl	d94 <log_get_max_level_realm@plt>
    25e4:	cmp	r0, #2
    25e8:	ble	2a20 <log_oom_internal@plt+0x1aa0>
    25ec:	ldr	r2, [pc, #1452]	; 2ba0 <log_oom_internal@plt+0x1c20>
    25f0:	ldr	r3, [pc, #1452]	; 2ba4 <log_oom_internal@plt+0x1c24>
    25f4:	add	r2, pc, r2
    25f8:	str	r2, [sp, #4]
    25fc:	add	r3, pc, r3
    2600:	ldr	r2, [pc, #1440]	; 2ba8 <log_oom_internal@plt+0x1c28>
    2604:	add	r3, r3, #12
    2608:	str	r3, [sp]
    260c:	add	r2, pc, r2
    2610:	mov	r3, #127	; 0x7f
    2614:	mov	r1, #1073741846	; 0x40000016
    2618:	mov	r0, #3
    261c:	bl	ef0 <log_internal_realm@plt>
    2620:	mov	r4, r0
    2624:	ldr	r3, [sp, #16]
    2628:	ldr	r2, [sp, #52]	; 0x34
    262c:	mov	r0, r4
    2630:	ldr	r3, [r3]
    2634:	cmp	r2, r3
    2638:	bne	2b74 <log_oom_internal@plt+0x1bf4>
    263c:	add	sp, sp, #60	; 0x3c
    2640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2644:	mov	r0, r9
    2648:	bl	d34 <free@plt>
    264c:	b	2440 <log_oom_internal@plt+0x14c0>
    2650:	ldr	r3, [sp, #20]
    2654:	cmp	r3, #3
    2658:	beq	2754 <log_oom_internal@plt+0x17d4>
    265c:	cmp	sl, #1
    2660:	bne	2a94 <log_oom_internal@plt+0x1b14>
    2664:	mov	r1, #3
    2668:	ldr	r0, [sp, #20]
    266c:	bl	dc4 <dup2@plt>
    2670:	cmp	r0, #0
    2674:	bge	274c <log_oom_internal@plt+0x17cc>
    2678:	bl	ecc <__errno_location@plt>
    267c:	ldr	r4, [r0]
    2680:	mov	r0, r5
    2684:	bl	d94 <log_get_max_level_realm@plt>
    2688:	cmp	r0, #2
    268c:	ble	25b8 <log_oom_internal@plt+0x1638>
    2690:	ldr	r2, [pc, #1300]	; 2bac <log_oom_internal@plt+0x1c2c>
    2694:	ldr	r3, [pc, #1300]	; 2bb0 <log_oom_internal@plt+0x1c30>
    2698:	add	r2, pc, r2
    269c:	str	r2, [sp, #4]
    26a0:	add	r3, pc, r3
    26a4:	ldr	r2, [pc, #1288]	; 2bb4 <log_oom_internal@plt+0x1c34>
    26a8:	add	r3, r3, #12
    26ac:	mov	r1, r4
    26b0:	str	r3, [sp]
    26b4:	add	r2, pc, r2
    26b8:	mov	r3, #192	; 0xc0
    26bc:	mov	r0, #3
    26c0:	bl	ef0 <log_internal_realm@plt>
    26c4:	mov	r4, r0
    26c8:	b	25c8 <log_oom_internal@plt+0x1648>
    26cc:	ldr	r3, [pc, #1252]	; 2bb8 <log_oom_internal@plt+0x1c38>
    26d0:	ldr	r1, [pc, #1252]	; 2bbc <log_oom_internal@plt+0x1c3c>
    26d4:	add	r3, pc, r3
    26d8:	mov	r2, #175	; 0xaf
    26dc:	add	r3, r3, #12
    26e0:	add	r1, pc, r1
    26e4:	bl	f80 <log_oom_internal@plt>
    26e8:	mov	r4, r0
    26ec:	b	25c8 <log_oom_internal@plt+0x1648>
    26f0:	ldr	r3, [sp, #16]
    26f4:	ldr	r2, [sp, #52]	; 0x34
    26f8:	ldr	r3, [r3]
    26fc:	cmp	r2, r3
    2700:	bne	2b74 <log_oom_internal@plt+0x1bf4>
    2704:	ldr	r3, [pc, #1204]	; 2bc0 <log_oom_internal@plt+0x1c40>
    2708:	ldr	r1, [pc, #1204]	; 2bc4 <log_oom_internal@plt+0x1c44>
    270c:	add	r3, pc, r3
    2710:	mov	r2, #134	; 0x86
    2714:	add	r3, r3, #12
    2718:	add	r1, pc, r1
    271c:	add	sp, sp, #60	; 0x3c
    2720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2724:	b	f80 <log_oom_internal@plt>
    2728:	ldr	r3, [pc, #1176]	; 2bc8 <log_oom_internal@plt+0x1c48>
    272c:	ldr	r1, [pc, #1176]	; 2bcc <log_oom_internal@plt+0x1c4c>
    2730:	add	r3, pc, r3
    2734:	mov	r2, #143	; 0x8f
    2738:	add	r3, r3, #12
    273c:	add	r1, pc, r1
    2740:	bl	f80 <log_oom_internal@plt>
    2744:	mov	r4, r0
    2748:	b	25c8 <log_oom_internal@plt+0x1648>
    274c:	ldr	r0, [sp, #20]
    2750:	bl	df4 <safe_close@plt>
    2754:	lsl	r4, r4, #2
    2758:	ldr	r2, [pc, #1136]	; 2bd0 <log_oom_internal@plt+0x1c50>
    275c:	add	r5, r7, r4
    2760:	mov	r0, r5
    2764:	mov	r3, sl
    2768:	add	r2, pc, r2
    276c:	mov	r1, #1
    2770:	bl	e3c <__asprintf_chk@plt>
    2774:	cmp	r0, #0
    2778:	blt	2980 <log_oom_internal@plt+0x1a00>
    277c:	bl	e48 <getpid_cached@plt>
    2780:	add	r4, r4, #4
    2784:	ldr	r2, [pc, #1096]	; 2bd4 <log_oom_internal@plt+0x1c54>
    2788:	add	r4, r7, r4
    278c:	add	r2, pc, r2
    2790:	mov	r1, #1
    2794:	mov	r3, r0
    2798:	mov	r0, r4
    279c:	bl	e3c <__asprintf_chk@plt>
    27a0:	cmp	r0, #0
    27a4:	blt	2ac0 <log_oom_internal@plt+0x1b40>
    27a8:	ldr	r4, [pc, #1064]	; 2bd8 <log_oom_internal@plt+0x1c58>
    27ac:	add	r4, pc, r4
    27b0:	ldr	r0, [r4, #8]
    27b4:	cmp	r0, #0
    27b8:	beq	2564 <log_oom_internal@plt+0x15e4>
    27bc:	bl	e30 <strv_length@plt>
    27c0:	cmp	r0, #1
    27c4:	mov	r9, r0
    27c8:	addeq	r6, r4, #8
    27cc:	beq	28a0 <log_oom_internal@plt+0x1920>
    27d0:	cmp	sl, r0
    27d4:	beq	2824 <log_oom_internal@plt+0x18a4>
    27d8:	mov	r0, #0
    27dc:	bl	d94 <log_get_max_level_realm@plt>
    27e0:	cmp	r0, #3
    27e4:	ble	2824 <log_oom_internal@plt+0x18a4>
    27e8:	ldr	r2, [pc, #1004]	; 2bdc <log_oom_internal@plt+0x1c5c>
    27ec:	ldr	r3, [pc, #1004]	; 2be0 <log_oom_internal@plt+0x1c60>
    27f0:	add	r2, pc, r2
    27f4:	add	r3, pc, r3
    27f8:	str	r2, [sp, #4]
    27fc:	ldr	r2, [pc, #992]	; 2be4 <log_oom_internal@plt+0x1c64>
    2800:	add	r3, r3, #12
    2804:	str	r3, [sp]
    2808:	str	sl, [sp, #12]
    280c:	str	r9, [sp, #8]
    2810:	mov	r3, #219	; 0xdb
    2814:	add	r2, pc, r2
    2818:	mov	r1, #0
    281c:	mov	r0, #4
    2820:	bl	ef0 <log_internal_realm@plt>
    2824:	ldr	r3, [pc, #956]	; 2be8 <log_oom_internal@plt+0x1c68>
    2828:	ldr	r1, [pc, #956]	; 2bec <log_oom_internal@plt+0x1c6c>
    282c:	add	r3, pc, r3
    2830:	mov	r2, #0
    2834:	add	r1, pc, r1
    2838:	ldr	r0, [r3, #8]
    283c:	bl	f50 <strv_join_prefix@plt>
    2840:	subs	r6, r0, #0
    2844:	beq	2aec <log_oom_internal@plt+0x1b6c>
    2848:	ldr	r0, [pc, #928]	; 2bf0 <log_oom_internal@plt+0x1c70>
    284c:	mov	r1, r6
    2850:	add	r0, pc, r0
    2854:	bl	e18 <strappend@plt>
    2858:	subs	r3, r0, #0
    285c:	beq	2b10 <log_oom_internal@plt+0x1b90>
    2860:	str	r3, [r5, #8]
    2864:	mov	r0, r6
    2868:	bl	d34 <free@plt>
    286c:	b	2564 <log_oom_internal@plt+0x15e4>
    2870:	ldr	r3, [pc, #892]	; 2bf4 <log_oom_internal@plt+0x1c74>
    2874:	ldr	r1, [pc, #892]	; 2bf8 <log_oom_internal@plt+0x1c78>
    2878:	add	r3, pc, r3
    287c:	mov	r2, #152	; 0x98
    2880:	add	r3, r3, #12
    2884:	add	r1, pc, r1
    2888:	bl	f80 <log_oom_internal@plt>
    288c:	mov	r4, r0
    2890:	mov	r0, r9
    2894:	bl	d34 <free@plt>
    2898:	b	25c8 <log_oom_internal@plt+0x1648>
    289c:	add	r9, r9, #1
    28a0:	cmp	r9, sl
    28a4:	ldr	r3, [r4, #8]
    28a8:	beq	2824 <log_oom_internal@plt+0x18a4>
    28ac:	ldr	r1, [r3]
    28b0:	mov	r0, r6
    28b4:	bl	e90 <strv_extend@plt>
    28b8:	cmp	r0, #0
    28bc:	bge	289c <log_oom_internal@plt+0x191c>
    28c0:	mov	r8, r0
    28c4:	mov	r0, #0
    28c8:	bl	d94 <log_get_max_level_realm@plt>
    28cc:	cmp	r0, #2
    28d0:	bgt	2b34 <log_oom_internal@plt+0x1bb4>
    28d4:	rsb	r4, r8, #0
    28d8:	mov	r6, #0
    28dc:	uxtb	r4, r4
    28e0:	rsb	r4, r4, #0
    28e4:	mov	r0, r6
    28e8:	bl	d34 <free@plt>
    28ec:	mov	r5, #0
    28f0:	b	25c8 <log_oom_internal@plt+0x1648>
    28f4:	ldr	r2, [pc, #768]	; 2bfc <log_oom_internal@plt+0x1c7c>
    28f8:	ldr	r3, [pc, #768]	; 2c00 <log_oom_internal@plt+0x1c80>
    28fc:	add	r2, pc, r2
    2900:	ldr	r1, [sp, #28]
    2904:	str	r2, [sp, #4]
    2908:	add	r3, pc, r3
    290c:	ldr	r2, [pc, #752]	; 2c04 <log_oom_internal@plt+0x1c84>
    2910:	add	r3, r3, #12
    2914:	str	r1, [sp, #8]
    2918:	str	r3, [sp]
    291c:	mov	r1, r4
    2920:	str	r5, [sp, #12]
    2924:	mov	r3, #240	; 0xf0
    2928:	add	r2, pc, r2
    292c:	mov	r0, #3
    2930:	bl	ef0 <log_internal_realm@plt>
    2934:	mov	r4, r0
    2938:	b	25c8 <log_oom_internal@plt+0x1648>
    293c:	ldr	r2, [pc, #708]	; 2c08 <log_oom_internal@plt+0x1c88>
    2940:	ldr	r3, [pc, #708]	; 2c0c <log_oom_internal@plt+0x1c8c>
    2944:	add	r2, pc, r2
    2948:	ldr	r1, [sp, #28]
    294c:	str	r2, [sp, #4]
    2950:	add	r3, pc, r3
    2954:	ldr	r2, [pc, #692]	; 2c10 <log_oom_internal@plt+0x1c90>
    2958:	add	r3, r3, #12
    295c:	str	r1, [sp, #8]
    2960:	str	r3, [sp]
    2964:	str	r5, [sp, #12]
    2968:	mov	r3, #237	; 0xed
    296c:	add	r2, pc, r2
    2970:	mov	r1, #0
    2974:	mov	r0, #6
    2978:	bl	ef0 <log_internal_realm@plt>
    297c:	b	2590 <log_oom_internal@plt+0x1610>
    2980:	ldr	r3, [pc, #652]	; 2c14 <log_oom_internal@plt+0x1c94>
    2984:	ldr	r1, [pc, #652]	; 2c18 <log_oom_internal@plt+0x1c98>
    2988:	add	r3, pc, r3
    298c:	mov	r2, #199	; 0xc7
    2990:	add	r3, r3, #12
    2994:	add	r1, pc, r1
    2998:	mov	r0, #0
    299c:	bl	f80 <log_oom_internal@plt>
    29a0:	mov	r5, #0
    29a4:	mov	r4, r0
    29a8:	b	25c8 <log_oom_internal@plt+0x1648>
    29ac:	ldr	r3, [pc, #616]	; 2c1c <log_oom_internal@plt+0x1c9c>
    29b0:	ldr	r1, [pc, #616]	; 2c20 <log_oom_internal@plt+0x1ca0>
    29b4:	add	r3, pc, r3
    29b8:	mov	r2, #160	; 0xa0
    29bc:	add	r3, r3, #12
    29c0:	add	r1, pc, r1
    29c4:	bl	f80 <log_oom_internal@plt>
    29c8:	mov	r4, r0
    29cc:	b	2890 <log_oom_internal@plt+0x1910>
    29d0:	mov	r0, r9
    29d4:	bl	d94 <log_get_max_level_realm@plt>
    29d8:	cmp	r0, #2
    29dc:	bgt	2a28 <log_oom_internal@plt+0x1aa8>
    29e0:	rsb	r4, r4, #0
    29e4:	mov	r5, r9
    29e8:	uxtb	r4, r4
    29ec:	rsb	r4, r4, #0
    29f0:	b	25c8 <log_oom_internal@plt+0x1648>
    29f4:	mov	r4, r6
    29f8:	b	24b4 <log_oom_internal@plt+0x1534>
    29fc:	ldr	r3, [pc, #544]	; 2c24 <log_oom_internal@plt+0x1ca4>
    2a00:	ldr	r1, [pc, #544]	; 2c28 <log_oom_internal@plt+0x1ca8>
    2a04:	add	r3, pc, r3
    2a08:	mov	r2, #235	; 0xeb
    2a0c:	add	r3, r3, #12
    2a10:	add	r1, pc, r1
    2a14:	bl	f80 <log_oom_internal@plt>
    2a18:	mov	r4, r0
    2a1c:	b	25c8 <log_oom_internal@plt+0x1648>
    2a20:	mvn	r4, #21
    2a24:	b	2624 <log_oom_internal@plt+0x16a4>
    2a28:	ldr	r2, [pc, #508]	; 2c2c <log_oom_internal@plt+0x1cac>
    2a2c:	ldr	r3, [pc, #508]	; 2c30 <log_oom_internal@plt+0x1cb0>
    2a30:	add	r2, pc, r2
    2a34:	str	r2, [sp, #4]
    2a38:	add	r3, pc, r3
    2a3c:	ldr	r2, [pc, #496]	; 2c34 <log_oom_internal@plt+0x1cb4>
    2a40:	add	r3, r3, #12
    2a44:	mov	r1, r4
    2a48:	str	r3, [sp]
    2a4c:	add	r2, pc, r2
    2a50:	mov	r3, #185	; 0xb9
    2a54:	mov	r0, #3
    2a58:	bl	ef0 <log_internal_realm@plt>
    2a5c:	mov	r5, r9
    2a60:	mov	r4, r0
    2a64:	b	25c8 <log_oom_internal@plt+0x1648>
    2a68:	ldr	r3, [pc, #456]	; 2c38 <log_oom_internal@plt+0x1cb8>
    2a6c:	mov	r0, r1
    2a70:	add	r3, pc, r3
    2a74:	ldr	r2, [pc, #448]	; 2c3c <log_oom_internal@plt+0x1cbc>
    2a78:	ldr	r1, [pc, #448]	; 2c40 <log_oom_internal@plt+0x1cc0>
    2a7c:	add	r3, r3, #28
    2a80:	str	r3, [sp]
    2a84:	add	r2, pc, r2
    2a88:	mov	r3, #181	; 0xb5
    2a8c:	add	r1, pc, r1
    2a90:	bl	ee4 <log_assert_failed_realm@plt>
    2a94:	ldr	r3, [pc, #424]	; 2c44 <log_oom_internal@plt+0x1cc4>
    2a98:	ldr	r2, [pc, #424]	; 2c48 <log_oom_internal@plt+0x1cc8>
    2a9c:	add	r3, pc, r3
    2aa0:	ldr	r1, [pc, #420]	; 2c4c <log_oom_internal@plt+0x1ccc>
    2aa4:	add	r3, r3, #28
    2aa8:	str	r3, [sp]
    2aac:	mov	r0, r5
    2ab0:	mov	r3, #189	; 0xbd
    2ab4:	add	r2, pc, r2
    2ab8:	add	r1, pc, r1
    2abc:	bl	ee4 <log_assert_failed_realm@plt>
    2ac0:	ldr	r3, [pc, #392]	; 2c50 <log_oom_internal@plt+0x1cd0>
    2ac4:	ldr	r1, [pc, #392]	; 2c54 <log_oom_internal@plt+0x1cd4>
    2ac8:	add	r3, pc, r3
    2acc:	mov	r2, #202	; 0xca
    2ad0:	add	r3, r3, #12
    2ad4:	add	r1, pc, r1
    2ad8:	mov	r0, #0
    2adc:	bl	f80 <log_oom_internal@plt>
    2ae0:	mov	r5, #0
    2ae4:	mov	r4, r0
    2ae8:	b	25c8 <log_oom_internal@plt+0x1648>
    2aec:	ldr	r3, [pc, #356]	; 2c58 <log_oom_internal@plt+0x1cd8>
    2af0:	ldr	r1, [pc, #356]	; 2c5c <log_oom_internal@plt+0x1cdc>
    2af4:	add	r3, pc, r3
    2af8:	mov	r2, #223	; 0xdf
    2afc:	add	r3, r3, #12
    2b00:	add	r1, pc, r1
    2b04:	bl	f80 <log_oom_internal@plt>
    2b08:	mov	r4, r0
    2b0c:	b	28e4 <log_oom_internal@plt+0x1964>
    2b10:	ldr	r3, [pc, #328]	; 2c60 <log_oom_internal@plt+0x1ce0>
    2b14:	ldr	r1, [pc, #328]	; 2c64 <log_oom_internal@plt+0x1ce4>
    2b18:	add	r3, pc, r3
    2b1c:	mov	r2, #227	; 0xe3
    2b20:	add	r3, r3, #12
    2b24:	add	r1, pc, r1
    2b28:	bl	f80 <log_oom_internal@plt>
    2b2c:	mov	r4, r0
    2b30:	b	28e4 <log_oom_internal@plt+0x1964>
    2b34:	ldr	r2, [pc, #300]	; 2c68 <log_oom_internal@plt+0x1ce8>
    2b38:	ldr	r3, [pc, #300]	; 2c6c <log_oom_internal@plt+0x1cec>
    2b3c:	add	r2, pc, r2
    2b40:	str	r2, [sp, #4]
    2b44:	add	r3, pc, r3
    2b48:	ldr	r2, [pc, #288]	; 2c70 <log_oom_internal@plt+0x1cf0>
    2b4c:	add	r3, r3, #12
    2b50:	str	r3, [sp]
    2b54:	mov	r1, r8
    2b58:	mov	r3, #216	; 0xd8
    2b5c:	add	r2, pc, r2
    2b60:	mov	r0, #3
    2b64:	bl	ef0 <log_internal_realm@plt>
    2b68:	mov	r6, #0
    2b6c:	mov	r4, r0
    2b70:	b	28e4 <log_oom_internal@plt+0x1964>
    2b74:	bl	e00 <__stack_chk_fail@plt>
    2b78:	andeq	r1, r1, r8, asr fp
    2b7c:	andeq	r1, r1, r8, ror #24
    2b80:	ldrdeq	r0, [r0], -ip
    2b84:	andeq	r0, r0, r4, lsl sl
    2b88:	andeq	r0, r0, ip, lsr #18
    2b8c:	andeq	r0, r0, r8, asr r9
    2b90:	andeq	r0, r0, r0, ror #18
    2b94:	andeq	r0, r0, r8, asr #18
    2b98:	ldrdeq	r1, [r1], -r0
    2b9c:			; <UNDEFINED> instruction: 0x000009b8
    2ba0:	strdeq	r0, [r0], -ip
    2ba4:	ldrdeq	r0, [r0], -ip
    2ba8:	andeq	r0, r0, r8, lsl #15
    2bac:	ldrdeq	r0, [r0], -r8
    2bb0:	andeq	r0, r0, r8, lsr r6
    2bb4:	andeq	r0, r0, r0, ror #13
    2bb8:	andeq	r0, r0, r4, lsl #12
    2bbc:			; <UNDEFINED> instruction: 0x000006b4
    2bc0:	andeq	r0, r0, ip, asr #11
    2bc4:	andeq	r0, r0, ip, ror r6
    2bc8:	andeq	r0, r0, r8, lsr #11
    2bcc:	andeq	r0, r0, r8, asr r6
    2bd0:	andeq	r0, r0, r8, lsr #14
    2bd4:	andeq	r0, r0, r4, lsl r7
    2bd8:	andeq	r1, r1, r8, asr r8
    2bdc:	ldrdeq	r0, [r0], -ip
    2be0:	andeq	r0, r0, r4, ror #9
    2be4:	andeq	r0, r0, r0, lsl #11
    2be8:	ldrdeq	r1, [r1], -r8
    2bec:	ldrdeq	r0, [r0], -ip
    2bf0:	andeq	r0, r0, r4, asr #13
    2bf4:	andeq	r0, r0, r0, ror #8
    2bf8:	andeq	r0, r0, r0, lsl r5
    2bfc:	andeq	r0, r0, ip, lsr r6
    2c00:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2c04:	andeq	r0, r0, ip, ror #8
    2c08:	andeq	r0, r0, r4, ror #11
    2c0c:	andeq	r0, r0, r8, lsl #7
    2c10:	andeq	r0, r0, r8, lsr #8
    2c14:	andeq	r0, r0, r0, asr r3
    2c18:	andeq	r0, r0, r0, lsl #8
    2c1c:	andeq	r0, r0, r4, lsr #6
    2c20:	ldrdeq	r0, [r0], -r4
    2c24:	ldrdeq	r0, [r0], -r4
    2c28:	andeq	r0, r0, r4, lsl #7
    2c2c:	andeq	r0, r0, r8, lsl r4
    2c30:	andeq	r0, r0, r0, lsr #5
    2c34:	andeq	r0, r0, r8, asr #6
    2c38:	andeq	r0, r0, r8, ror #4
    2c3c:	andeq	r0, r0, r0, lsl r3
    2c40:			; <UNDEFINED> instruction: 0x000003b0
    2c44:	andeq	r0, r0, ip, lsr r2
    2c48:	andeq	r0, r0, r0, ror #5
    2c4c:	andeq	r0, r0, r4, lsl #7
    2c50:	andeq	r0, r0, r0, lsl r2
    2c54:	andeq	r0, r0, r0, asr #5
    2c58:	andeq	r0, r0, r4, ror #3
    2c5c:	muleq	r0, r4, r2
    2c60:	andeq	r0, r0, r0, asr #3
    2c64:	andeq	r0, r0, r0, ror r2
    2c68:	andeq	r0, r0, r4, ror r3
    2c6c:	muleq	r0, r4, r1
    2c70:	andeq	r0, r0, r8, lsr r2
    2c74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2c78:	mov	r7, r0
    2c7c:	ldr	r6, [pc, #72]	; 2ccc <log_oom_internal@plt+0x1d4c>
    2c80:	ldr	r5, [pc, #72]	; 2cd0 <log_oom_internal@plt+0x1d50>
    2c84:	add	r6, pc, r6
    2c88:	add	r5, pc, r5
    2c8c:	sub	r6, r6, r5
    2c90:	mov	r8, r1
    2c94:	mov	r9, r2
    2c98:	bl	cfc <sd_listen_fds@plt-0x20>
    2c9c:	asrs	r6, r6, #2
    2ca0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    2ca4:	mov	r4, #0
    2ca8:	add	r4, r4, #1
    2cac:	ldr	r3, [r5], #4
    2cb0:	mov	r2, r9
    2cb4:	mov	r1, r8
    2cb8:	mov	r0, r7
    2cbc:	blx	r3
    2cc0:	cmp	r6, r4
    2cc4:	bne	2ca8 <log_oom_internal@plt+0x1d28>
    2cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2ccc:	andeq	r1, r1, ip, lsl r0
    2cd0:	andeq	r1, r1, r4, lsl r0
    2cd4:	bx	lr

Disassembly of section .fini:

00002cd8 <.fini>:
    2cd8:	push	{r3, lr}
    2cdc:	pop	{r3, pc}
