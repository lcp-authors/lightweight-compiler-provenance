
raspbian-preinstalled/htop:     file format elf32-littlearm


Disassembly of section .init:

00014ec0 <_init@@Base>:
   14ec0:	push	{r3, lr}
   14ec4:	bl	15cb8 <_start@@Base+0x3c>
   14ec8:	pop	{r3, pc}

Disassembly of section .plt:

00014ecc <fdopen@plt-0x14>:
   14ecc:	push	{lr}		; (str lr, [sp, #-4]!)
   14ed0:	ldr	lr, [pc, #4]	; 14edc <_init@@Base+0x1c>
   14ed4:	add	lr, pc, lr
   14ed8:	ldr	pc, [lr, #8]!
   14edc:	strdeq	r7, [r2], -r8

00014ee0 <fdopen@plt>:
   14ee0:	add	ip, pc, #0, 12
   14ee4:	add	ip, ip, #159744	; 0x27000
   14ee8:	ldr	pc, [ip, #3832]!	; 0xef8

00014eec <calloc@plt>:
   14eec:	add	ip, pc, #0, 12
   14ef0:	add	ip, ip, #159744	; 0x27000
   14ef4:	ldr	pc, [ip, #3824]!	; 0xef0

00014ef8 <raise@plt>:
   14ef8:	add	ip, pc, #0, 12
   14efc:	add	ip, ip, #159744	; 0x27000
   14f00:	ldr	pc, [ip, #3816]!	; 0xee8

00014f04 <mousemask@plt>:
   14f04:	add	ip, pc, #0, 12
   14f08:	add	ip, ip, #159744	; 0x27000
   14f0c:	ldr	pc, [ip, #3808]!	; 0xee0

00014f10 <getpwnam@plt>:
   14f10:	add	ip, pc, #0, 12
   14f14:	add	ip, ip, #159744	; 0x27000
   14f18:	ldr	pc, [ip, #3800]!	; 0xed8

00014f1c <strcasestr@plt>:
   14f1c:	add	ip, pc, #0, 12
   14f20:	add	ip, ip, #159744	; 0x27000
   14f24:	ldr	pc, [ip, #3792]!	; 0xed0

00014f28 <endwin@plt>:
   14f28:	add	ip, pc, #0, 12
   14f2c:	add	ip, ip, #159744	; 0x27000
   14f30:	ldr	pc, [ip, #3784]!	; 0xec8

00014f34 <strcmp@plt>:
   14f34:	add	ip, pc, #0, 12
   14f38:	add	ip, ip, #159744	; 0x27000
   14f3c:	ldr	pc, [ip, #3776]!	; 0xec0

00014f40 <mouseinterval@plt>:
   14f40:	add	ip, pc, #0, 12
   14f44:	add	ip, ip, #159744	; 0x27000
   14f48:	ldr	pc, [ip, #3768]!	; 0xeb8

00014f4c <strtol@plt>:
   14f4c:	add	ip, pc, #0, 12
   14f50:	add	ip, ip, #159744	; 0x27000
   14f54:	ldr	pc, [ip, #3760]!	; 0xeb0

00014f58 <getpwuid@plt>:
   14f58:	add	ip, pc, #0, 12
   14f5c:	add	ip, ip, #159744	; 0x27000
   14f60:	ldr	pc, [ip, #3752]!	; 0xea8

00014f64 <init_pair@plt>:
   14f64:	add	ip, pc, #0, 12
   14f68:	add	ip, ip, #159744	; 0x27000
   14f6c:	ldr	pc, [ip, #3744]!	; 0xea0

00014f70 <fopen@plt>:
   14f70:	add	ip, pc, #0, 12
   14f74:	add	ip, ip, #159744	; 0x27000
   14f78:	ldr	pc, [ip, #3736]!	; 0xe98

00014f7c <read@plt>:
   14f7c:	add	ip, pc, #0, 12
   14f80:	add	ip, ip, #159744	; 0x27000
   14f84:	ldr	pc, [ip, #3728]!	; 0xe90

00014f88 <vwprintw@plt>:
   14f88:	add	ip, pc, #0, 12
   14f8c:	add	ip, ip, #159744	; 0x27000
   14f90:	ldr	pc, [ip, #3720]!	; 0xe88

00014f94 <getuid@plt>:
   14f94:	add	ip, pc, #0, 12
   14f98:	add	ip, ip, #159744	; 0x27000
   14f9c:	ldr	pc, [ip, #3712]!	; 0xe80

00014fa0 <free@plt>:
   14fa0:	add	ip, pc, #0, 12
   14fa4:	add	ip, ip, #159744	; 0x27000
   14fa8:	ldr	pc, [ip, #3704]!	; 0xe78

00014fac <beep@plt>:
   14fac:	add	ip, pc, #0, 12
   14fb0:	add	ip, ip, #159744	; 0x27000
   14fb4:	ldr	pc, [ip, #3696]!	; 0xe70

00014fb8 <fgets@plt>:
   14fb8:	add	ip, pc, #0, 12
   14fbc:	add	ip, ip, #159744	; 0x27000
   14fc0:	ldr	pc, [ip, #3688]!	; 0xe68

00014fc4 <napms@plt>:
   14fc4:	add	ip, pc, #0, 12
   14fc8:	add	ip, ip, #159744	; 0x27000
   14fcc:	ldr	pc, [ip, #3680]!	; 0xe60

00014fd0 <nodelay@plt>:
   14fd0:	add	ip, pc, #0, 12
   14fd4:	add	ip, ip, #159744	; 0x27000
   14fd8:	ldr	pc, [ip, #3672]!	; 0xe58

00014fdc <nanosleep@plt>:
   14fdc:	add	ip, pc, #0, 12
   14fe0:	add	ip, ip, #159744	; 0x27000
   14fe4:	ldr	pc, [ip, #3664]!	; 0xe50

00014fe8 <memcpy@plt>:
   14fe8:	add	ip, pc, #0, 12
   14fec:	add	ip, ip, #159744	; 0x27000
   14ff0:	ldr	pc, [ip, #3656]!	; 0xe48

00014ff4 <execlp@plt>:
   14ff4:	add	ip, pc, #0, 12
   14ff8:	add	ip, ip, #159744	; 0x27000
   14ffc:	ldr	pc, [ip, #3648]!	; 0xe40

00015000 <start_color@plt>:
   15000:	add	ip, pc, #0, 12
   15004:	add	ip, ip, #159744	; 0x27000
   15008:	ldr	pc, [ip, #3640]!	; 0xe38

0001500c <signal@plt>:
   1500c:	add	ip, pc, #0, 12
   15010:	add	ip, ip, #159744	; 0x27000
   15014:	ldr	pc, [ip, #3632]!	; 0xe30

00015018 <time@plt>:
   15018:	add	ip, pc, #0, 12
   1501c:	add	ip, ip, #159744	; 0x27000
   15020:	ldr	pc, [ip, #3624]!	; 0xe28

00015024 <select@plt>:
   15024:	add	ip, pc, #0, 12
   15028:	add	ip, ip, #159744	; 0x27000
   1502c:	ldr	pc, [ip, #3616]!	; 0xe20

00015030 <curs_set@plt>:
   15030:	add	ip, pc, #0, 12
   15034:	add	ip, ip, #159744	; 0x27000
   15038:	ldr	pc, [ip, #3608]!	; 0xe18

0001503c <nonl@plt>:
   1503c:	add	ip, pc, #0, 12
   15040:	add	ip, ip, #159744	; 0x27000
   15044:	ldr	pc, [ip, #3600]!	; 0xe10

00015048 <whline@plt>:
   15048:	add	ip, pc, #0, 12
   1504c:	add	ip, ip, #159744	; 0x27000
   15050:	ldr	pc, [ip, #3592]!	; 0xe08

00015054 <getmouse@plt>:
   15054:	add	ip, pc, #0, 12
   15058:	add	ip, ip, #159744	; 0x27000
   1505c:	ldr	pc, [ip, #3584]!	; 0xe00

00015060 <wattr_on@plt>:
   15060:	add	ip, pc, #0, 12
   15064:	add	ip, ip, #159744	; 0x27000
   15068:	ldr	pc, [ip, #3576]!	; 0xdf8

0001506c <intrflush@plt>:
   1506c:	add	ip, pc, #0, 12
   15070:	add	ip, ip, #159744	; 0x27000
   15074:	ldr	pc, [ip, #3568]!	; 0xdf0

00015078 <strdup@plt>:
   15078:	add	ip, pc, #0, 12
   1507c:	add	ip, ip, #159744	; 0x27000
   15080:	ldr	pc, [ip, #3560]!	; 0xde8

00015084 <__stack_chk_fail@plt>:
   15084:	add	ip, pc, #0, 12
   15088:	add	ip, ip, #159744	; 0x27000
   1508c:	ldr	pc, [ip, #3552]!	; 0xde0

00015090 <halfdelay@plt>:
   15090:	add	ip, pc, #0, 12
   15094:	add	ip, ip, #159744	; 0x27000
   15098:	ldr	pc, [ip, #3544]!	; 0xdd8

0001509c <sysconf@plt>:
   1509c:	add	ip, pc, #0, 12
   150a0:	add	ip, ip, #159744	; 0x27000
   150a4:	ldr	pc, [ip, #3536]!	; 0xdd0

000150a8 <unlink@plt>:
   150a8:	add	ip, pc, #0, 12
   150ac:	add	ip, ip, #159744	; 0x27000
   150b0:	ldr	pc, [ip, #3528]!	; 0xdc8

000150b4 <dup2@plt>:
   150b4:	add	ip, pc, #0, 12
   150b8:	add	ip, ip, #159744	; 0x27000
   150bc:	ldr	pc, [ip, #3520]!	; 0xdc0

000150c0 <realloc@plt>:
   150c0:	add	ip, pc, #0, 12
   150c4:	add	ip, ip, #159744	; 0x27000
   150c8:	ldr	pc, [ip, #3512]!	; 0xdb8

000150cc <getpriority@plt>:
   150cc:	add	ip, pc, #0, 12
   150d0:	add	ip, ip, #159744	; 0x27000
   150d4:	ldr	pc, [ip, #3504]!	; 0xdb0

000150d8 <__fdelt_chk@plt>:
   150d8:	add	ip, pc, #0, 12
   150dc:	add	ip, ip, #159744	; 0x27000
   150e0:	ldr	pc, [ip, #3496]!	; 0xda8

000150e4 <has_colors@plt>:
   150e4:	add	ip, pc, #0, 12
   150e8:	add	ip, ip, #159744	; 0x27000
   150ec:	ldr	pc, [ip, #3488]!	; 0xda0

000150f0 <localtime_r@plt>:
   150f0:	add	ip, pc, #0, 12
   150f4:	add	ip, ip, #159744	; 0x27000
   150f8:	ldr	pc, [ip, #3480]!	; 0xd98

000150fc <lround@plt>:
   150fc:	add	ip, pc, #0, 12
   15100:	add	ip, ip, #159744	; 0x27000
   15104:	ldr	pc, [ip, #3472]!	; 0xd90

00015108 <initscr@plt>:
   15108:	add	ip, pc, #0, 12
   1510c:	add	ip, ip, #159744	; 0x27000
   15110:	ldr	pc, [ip, #3464]!	; 0xd88

00015114 <err@plt>:
   15114:	add	ip, pc, #0, 12
   15118:	add	ip, ip, #159744	; 0x27000
   1511c:	ldr	pc, [ip, #3456]!	; 0xd80

00015120 <iswprint@plt>:
   15120:	add	ip, pc, #0, 12
   15124:	add	ip, ip, #159744	; 0x27000
   15128:	ldr	pc, [ip, #3448]!	; 0xd78

0001512c <__xstat@plt>:
   1512c:	add	ip, pc, #0, 12
   15130:	add	ip, ip, #159744	; 0x27000
   15134:	ldr	pc, [ip, #3440]!	; 0xd70

00015138 <__memcpy_chk@plt>:
   15138:	add	ip, pc, #0, 12
   1513c:	add	ip, ip, #159744	; 0x27000
   15140:	ldr	pc, [ip, #3432]!	; 0xd68

00015144 <fwrite@plt>:
   15144:	add	ip, pc, #0, 12
   15148:	add	ip, ip, #159744	; 0x27000
   1514c:	ldr	pc, [ip, #3424]!	; 0xd60

00015150 <waitpid@plt>:
   15150:	add	ip, pc, #0, 12
   15154:	add	ip, ip, #159744	; 0x27000
   15158:	ldr	pc, [ip, #3416]!	; 0xd58

0001515c <gettimeofday@plt>:
   1515c:	add	ip, pc, #0, 12
   15160:	add	ip, ip, #159744	; 0x27000
   15164:	ldr	pc, [ip, #3408]!	; 0xd50

00015168 <fread@plt>:
   15168:	add	ip, pc, #0, 12
   1516c:	add	ip, ip, #159744	; 0x27000
   15170:	ldr	pc, [ip, #3400]!	; 0xd48

00015174 <strtok_r@plt>:
   15174:	add	ip, pc, #0, 12
   15178:	add	ip, ip, #159744	; 0x27000
   1517c:	ldr	pc, [ip, #3392]!	; 0xd40

00015180 <gethostname@plt>:
   15180:	add	ip, pc, #0, 12
   15184:	add	ip, ip, #159744	; 0x27000
   15188:	ldr	pc, [ip, #3384]!	; 0xd38

0001518c <floor@plt>:
   1518c:	add	ip, pc, #0, 12
   15190:	add	ip, ip, #159744	; 0x27000
   15194:	ldr	pc, [ip, #3376]!	; 0xd30

00015198 <opendir@plt>:
   15198:	add	ip, pc, #0, 12
   1519c:	add	ip, ip, #159744	; 0x27000
   151a0:	ldr	pc, [ip, #3368]!	; 0xd28

000151a4 <__asprintf_chk@plt>:
   151a4:	add	ip, pc, #0, 12
   151a8:	add	ip, ip, #159744	; 0x27000
   151ac:	ldr	pc, [ip, #3360]!	; 0xd20

000151b0 <getenv@plt>:
   151b0:	add	ip, pc, #0, 12
   151b4:	add	ip, ip, #159744	; 0x27000
   151b8:	ldr	pc, [ip, #3352]!	; 0xd18

000151bc <setpriority@plt>:
   151bc:	add	ip, pc, #0, 12
   151c0:	add	ip, ip, #159744	; 0x27000
   151c4:	ldr	pc, [ip, #3344]!	; 0xd10

000151c8 <malloc@plt>:
   151c8:	add	ip, pc, #0, 12
   151cc:	add	ip, ip, #159744	; 0x27000
   151d0:	ldr	pc, [ip, #3336]!	; 0xd08

000151d4 <log10@plt>:
   151d4:	add	ip, pc, #0, 12
   151d8:	add	ip, ip, #159744	; 0x27000
   151dc:	ldr	pc, [ip, #3328]!	; 0xd00

000151e0 <__libc_start_main@plt>:
   151e0:	add	ip, pc, #0, 12
   151e4:	add	ip, ip, #159744	; 0x27000
   151e8:	ldr	pc, [ip, #3320]!	; 0xcf8

000151ec <strerror@plt>:
   151ec:	add	ip, pc, #0, 12
   151f0:	add	ip, ip, #159744	; 0x27000
   151f4:	ldr	pc, [ip, #3312]!	; 0xcf0

000151f8 <strftime@plt>:
   151f8:	add	ip, pc, #0, 12
   151fc:	add	ip, ip, #159744	; 0x27000
   15200:	ldr	pc, [ip, #3304]!	; 0xce8

00015204 <use_default_colors@plt>:
   15204:	add	ip, pc, #0, 12
   15208:	add	ip, ip, #159744	; 0x27000
   1520c:	ldr	pc, [ip, #3296]!	; 0xce0

00015210 <backtrace@plt>:
   15210:	add	ip, pc, #0, 12
   15214:	add	ip, ip, #159744	; 0x27000
   15218:	ldr	pc, [ip, #3288]!	; 0xcd8

0001521c <strsep@plt>:
   1521c:	add	ip, pc, #0, 12
   15220:	add	ip, ip, #159744	; 0x27000
   15224:	ldr	pc, [ip, #3280]!	; 0xcd0

00015228 <__gmon_start__@plt>:
   15228:	add	ip, pc, #0, 12
   1522c:	add	ip, ip, #159744	; 0x27000
   15230:	ldr	pc, [ip, #3272]!	; 0xcc8

00015234 <open@plt>:
   15234:	add	ip, pc, #0, 12
   15238:	add	ip, ip, #159744	; 0x27000
   1523c:	ldr	pc, [ip, #3264]!	; 0xcc0

00015240 <getopt_long@plt>:
   15240:	add	ip, pc, #0, 12
   15244:	add	ip, ip, #159744	; 0x27000
   15248:	ldr	pc, [ip, #3256]!	; 0xcb8

0001524c <kill@plt>:
   1524c:	add	ip, pc, #0, 12
   15250:	add	ip, ip, #159744	; 0x27000
   15254:	ldr	pc, [ip, #3248]!	; 0xcb0

00015258 <__ctype_b_loc@plt>:
   15258:	add	ip, pc, #0, 12
   1525c:	add	ip, ip, #159744	; 0x27000
   15260:	ldr	pc, [ip, #3240]!	; 0xca8

00015264 <exit@plt>:
   15264:	add	ip, pc, #0, 12
   15268:	add	ip, ip, #159744	; 0x27000
   1526c:	ldr	pc, [ip, #3232]!	; 0xca0

00015270 <syscall@plt>:
   15270:	add	ip, pc, #0, 12
   15274:	add	ip, ip, #159744	; 0x27000
   15278:	ldr	pc, [ip, #3224]!	; 0xc98

0001527c <feof@plt>:
   1527c:	add	ip, pc, #0, 12
   15280:	add	ip, ip, #159744	; 0x27000
   15284:	ldr	pc, [ip, #3216]!	; 0xc90

00015288 <set_escdelay@plt>:
   15288:	add	ip, pc, #0, 12
   1528c:	add	ip, ip, #159744	; 0x27000
   15290:	ldr	pc, [ip, #3208]!	; 0xc88

00015294 <strtoul@plt>:
   15294:	add	ip, pc, #0, 12
   15298:	add	ip, ip, #159744	; 0x27000
   1529c:	ldr	pc, [ip, #3200]!	; 0xc80

000152a0 <strlen@plt>:
   152a0:	add	ip, pc, #0, 12
   152a4:	add	ip, ip, #159744	; 0x27000
   152a8:	ldr	pc, [ip, #3192]!	; 0xc78

000152ac <cbreak@plt>:
   152ac:	add	ip, pc, #0, 12
   152b0:	add	ip, ip, #159744	; 0x27000
   152b4:	ldr	pc, [ip, #3184]!	; 0xc70

000152b8 <__libc_current_sigrtmax@plt>:
   152b8:	add	ip, pc, #0, 12
   152bc:	add	ip, ip, #159744	; 0x27000
   152c0:	ldr	pc, [ip, #3176]!	; 0xc68

000152c4 <strchr@plt>:
   152c4:	add	ip, pc, #0, 12
   152c8:	add	ip, ip, #159744	; 0x27000
   152cc:	ldr	pc, [ip, #3168]!	; 0xc60

000152d0 <mvprintw@plt>:
   152d0:	add	ip, pc, #0, 12
   152d4:	add	ip, ip, #159744	; 0x27000
   152d8:	ldr	pc, [ip, #3160]!	; 0xc58

000152dc <fcntl@plt>:
   152dc:	add	ip, pc, #0, 12
   152e0:	add	ip, ip, #159744	; 0x27000
   152e4:	ldr	pc, [ip, #3152]!	; 0xc50

000152e8 <__errno_location@plt>:
   152e8:	add	ip, pc, #0, 12
   152ec:	add	ip, ip, #159744	; 0x27000
   152f0:	ldr	pc, [ip, #3144]!	; 0xc48

000152f4 <keypad@plt>:
   152f4:	add	ip, pc, #0, 12
   152f8:	add	ip, ip, #159744	; 0x27000
   152fc:	ldr	pc, [ip, #3136]!	; 0xc40

00015300 <strncasecmp@plt>:
   15300:	add	ip, pc, #0, 12
   15304:	add	ip, ip, #159744	; 0x27000
   15308:	ldr	pc, [ip, #3128]!	; 0xc38

0001530c <snprintf@plt>:
   1530c:	add	ip, pc, #0, 12
   15310:	add	ip, ip, #159744	; 0x27000
   15314:	ldr	pc, [ip, #3120]!	; 0xc30

00015318 <mkdir@plt>:
   15318:	add	ip, pc, #0, 12
   1531c:	add	ip, ip, #159744	; 0x27000
   15320:	ldr	pc, [ip, #3112]!	; 0xc28

00015324 <wattr_off@plt>:
   15324:	add	ip, pc, #0, 12
   15328:	add	ip, ip, #159744	; 0x27000
   1532c:	ldr	pc, [ip, #3104]!	; 0xc20

00015330 <memset@plt>:
   15330:	add	ip, pc, #0, 12
   15334:	add	ip, ip, #159744	; 0x27000
   15338:	ldr	pc, [ip, #3096]!	; 0xc18

0001533c <strncpy@plt>:
   1533c:	add	ip, pc, #0, 12
   15340:	add	ip, ip, #159744	; 0x27000
   15344:	ldr	pc, [ip, #3088]!	; 0xc10

00015348 <wclear@plt>:
   15348:	add	ip, pc, #0, 12
   1534c:	add	ip, ip, #159744	; 0x27000
   15350:	ldr	pc, [ip, #3080]!	; 0xc08

00015354 <fscanf@plt>:
   15354:	add	ip, pc, #0, 12
   15358:	add	ip, ip, #159744	; 0x27000
   1535c:	ldr	pc, [ip, #3072]!	; 0xc00

00015360 <wmove@plt>:
   15360:	add	ip, pc, #0, 12
   15364:	add	ip, ip, #159744	; 0x27000
   15368:	ldr	pc, [ip, #3064]!	; 0xbf8

0001536c <wgetch@plt>:
   1536c:	add	ip, pc, #0, 12
   15370:	add	ip, ip, #159744	; 0x27000
   15374:	ldr	pc, [ip, #3056]!	; 0xbf0

00015378 <strtoull@plt>:
   15378:	add	ip, pc, #0, 12
   1537c:	add	ip, ip, #159744	; 0x27000
   15380:	ldr	pc, [ip, #3048]!	; 0xbe8

00015384 <wadd_wchnstr@plt>:
   15384:	add	ip, pc, #0, 12
   15388:	add	ip, ip, #159744	; 0x27000
   1538c:	ldr	pc, [ip, #3040]!	; 0xbe0

00015390 <btowc@plt>:
   15390:	add	ip, pc, #0, 12
   15394:	add	ip, ip, #159744	; 0x27000
   15398:	ldr	pc, [ip, #3032]!	; 0xbd8

0001539c <__printf_chk@plt>:
   1539c:	add	ip, pc, #0, 12
   153a0:	add	ip, ip, #159744	; 0x27000
   153a4:	ldr	pc, [ip, #3024]!	; 0xbd0

000153a8 <write@plt>:
   153a8:	add	ip, pc, #0, 12
   153ac:	add	ip, ip, #159744	; 0x27000
   153b0:	ldr	pc, [ip, #3016]!	; 0xbc8

000153b4 <fileno@plt>:
   153b4:	add	ip, pc, #0, 12
   153b8:	add	ip, ip, #159744	; 0x27000
   153bc:	ldr	pc, [ip, #3008]!	; 0xbc0

000153c0 <__fprintf_chk@plt>:
   153c0:	add	ip, pc, #0, 12
   153c4:	add	ip, ip, #159744	; 0x27000
   153c8:	ldr	pc, [ip, #3000]!	; 0xbb8

000153cc <nocbreak@plt>:
   153cc:	add	ip, pc, #0, 12
   153d0:	add	ip, ip, #159744	; 0x27000
   153d4:	ldr	pc, [ip, #2992]!	; 0xbb0

000153d8 <ceil@plt>:
   153d8:	add	ip, pc, #0, 12
   153dc:	add	ip, ip, #159744	; 0x27000
   153e0:	ldr	pc, [ip, #2984]!	; 0xba8

000153e4 <sched_setaffinity@plt>:
   153e4:	add	ip, pc, #0, 12
   153e8:	add	ip, ip, #159744	; 0x27000
   153ec:	ldr	pc, [ip, #2976]!	; 0xba0

000153f0 <access@plt>:
   153f0:	add	ip, pc, #0, 12
   153f4:	add	ip, ip, #159744	; 0x27000
   153f8:	ldr	pc, [ip, #2968]!	; 0xb98

000153fc <fclose@plt>:
   153fc:	add	ip, pc, #0, 12
   15400:	add	ip, ip, #159744	; 0x27000
   15404:	ldr	pc, [ip, #2960]!	; 0xb90

00015408 <pipe@plt>:
   15408:	add	ip, pc, #0, 12
   1540c:	add	ip, ip, #159744	; 0x27000
   15410:	ldr	pc, [ip, #2952]!	; 0xb88

00015414 <waddch@plt>:
   15414:	add	ip, pc, #0, 12
   15418:	add	ip, ip, #159744	; 0x27000
   1541c:	ldr	pc, [ip, #2944]!	; 0xb80

00015420 <setlocale@plt>:
   15420:	add	ip, pc, #0, 12
   15424:	add	ip, ip, #159744	; 0x27000
   15428:	ldr	pc, [ip, #2936]!	; 0xb78

0001542c <fork@plt>:
   1542c:	add	ip, pc, #0, 12
   15430:	add	ip, ip, #159744	; 0x27000
   15434:	ldr	pc, [ip, #2928]!	; 0xb70

00015438 <readdir@plt>:
   15438:	add	ip, pc, #0, 12
   1543c:	add	ip, ip, #159744	; 0x27000
   15440:	ldr	pc, [ip, #2920]!	; 0xb68

00015444 <strrchr@plt>:
   15444:	add	ip, pc, #0, 12
   15448:	add	ip, ip, #159744	; 0x27000
   1544c:	ldr	pc, [ip, #2912]!	; 0xb60

00015450 <nl_langinfo@plt>:
   15450:	add	ip, pc, #0, 12
   15454:	add	ip, ip, #159744	; 0x27000
   15458:	ldr	pc, [ip, #2904]!	; 0xb58

0001545c <wvline@plt>:
   1545c:	add	ip, pc, #0, 12
   15460:	add	ip, ip, #159744	; 0x27000
   15464:	ldr	pc, [ip, #2896]!	; 0xb50

00015468 <sscanf@plt>:
   15468:	add	ip, pc, #0, 12
   1546c:	add	ip, ip, #159744	; 0x27000
   15470:	ldr	pc, [ip, #2888]!	; 0xb48

00015474 <mbstowcs@plt>:
   15474:	add	ip, pc, #0, 12
   15478:	add	ip, ip, #159744	; 0x27000
   1547c:	ldr	pc, [ip, #2880]!	; 0xb40

00015480 <waddnstr@plt>:
   15480:	add	ip, pc, #0, 12
   15484:	add	ip, ip, #159744	; 0x27000
   15488:	ldr	pc, [ip, #2872]!	; 0xb38

0001548c <qsort@plt>:
   1548c:	add	ip, pc, #0, 12
   15490:	add	ip, ip, #159744	; 0x27000
   15494:	ldr	pc, [ip, #2864]!	; 0xb30

00015498 <noecho@plt>:
   15498:	add	ip, pc, #0, 12
   1549c:	add	ip, ip, #159744	; 0x27000
   154a0:	ldr	pc, [ip, #2856]!	; 0xb28

000154a4 <sched_getaffinity@plt>:
   154a4:	add	ip, pc, #0, 12
   154a8:	add	ip, ip, #159744	; 0x27000
   154ac:	ldr	pc, [ip, #2848]!	; 0xb20

000154b0 <__lxstat@plt>:
   154b0:	add	ip, pc, #0, 12
   154b4:	add	ip, ip, #159744	; 0x27000
   154b8:	ldr	pc, [ip, #2840]!	; 0xb18

000154bc <__libc_current_sigrtmin@plt>:
   154bc:	add	ip, pc, #0, 12
   154c0:	add	ip, ip, #159744	; 0x27000
   154c4:	ldr	pc, [ip, #2832]!	; 0xb10

000154c8 <wrefresh@plt>:
   154c8:	add	ip, pc, #0, 12
   154cc:	add	ip, ip, #159744	; 0x27000
   154d0:	ldr	pc, [ip, #2824]!	; 0xb08

000154d4 <define_key@plt>:
   154d4:	add	ip, pc, #0, 12
   154d8:	add	ip, ip, #159744	; 0x27000
   154dc:	ldr	pc, [ip, #2816]!	; 0xb00

000154e0 <strncmp@plt>:
   154e0:	add	ip, pc, #0, 12
   154e4:	add	ip, ip, #159744	; 0x27000
   154e8:	ldr	pc, [ip, #2808]!	; 0xaf8

000154ec <abort@plt>:
   154ec:	add	ip, pc, #0, 12
   154f0:	add	ip, ip, #159744	; 0x27000
   154f4:	ldr	pc, [ip, #2800]!	; 0xaf0

000154f8 <close@plt>:
   154f8:	add	ip, pc, #0, 12
   154fc:	add	ip, ip, #159744	; 0x27000
   15500:	ldr	pc, [ip, #2792]!	; 0xae8

00015504 <closedir@plt>:
   15504:	add	ip, pc, #0, 12
   15508:	add	ip, ip, #159744	; 0x27000
   1550c:	ldr	pc, [ip, #2784]!	; 0xae0

00015510 <__snprintf_chk@plt>:
   15510:	add	ip, pc, #0, 12
   15514:	add	ip, ip, #159744	; 0x27000
   15518:	ldr	pc, [ip, #2776]!	; 0xad8

0001551c <backtrace_symbols_fd@plt>:
   1551c:	add	ip, pc, #0, 12
   15520:	add	ip, ip, #159744	; 0x27000
   15524:	ldr	pc, [ip, #2768]!	; 0xad0

Disassembly of section .text:

00015528 <main@@Base-0x100>:
   15528:	push	{r4, lr}
   1552c:	mov	r0, #1
   15530:	bl	15030 <curs_set@plt>
   15534:	bl	14f28 <endwin@plt>
   15538:	mov	r1, #0
   1553c:	mov	r0, #1
   15540:	bl	15114 <err@plt>
   15544:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15548:	sub	sp, sp, #8
   1554c:	ldr	r7, [pc, #180]	; 15608 <backtrace_symbols_fd@plt+0xec>
   15550:	mov	r9, r0
   15554:	mov	r0, r1
   15558:	ldr	r3, [r7]
   1555c:	mov	r6, r2
   15560:	str	r3, [sp, #4]
   15564:	bl	1fbc8 <String_trim@@Base>
   15568:	mov	r2, sp
   1556c:	mov	r1, #32
   15570:	mov	r5, #0
   15574:	mov	r4, r0
   15578:	bl	1fcac <String_split@@Base>
   1557c:	mov	r8, r0
   15580:	mov	r0, r4
   15584:	bl	14fa0 <free@plt>
   15588:	ldr	r4, [r8, r5, lsl #2]
   1558c:	cmp	r4, #0
   15590:	addne	r5, r5, #1
   15594:	bne	15588 <backtrace_symbols_fd@plt+0x6c>
   15598:	mov	r3, #12
   1559c:	mov	r1, #4
   155a0:	mla	r3, r3, r6, r9
   155a4:	mov	r0, r5
   155a8:	str	r5, [r3, #4]
   155ac:	bl	23fd8 <xCalloc@@Base>
   155b0:	mov	sl, r0
   155b4:	cmp	r5, r4
   155b8:	beq	155d8 <backtrace_symbols_fd@plt+0xbc>
   155bc:	ldr	r0, [r8, r4, lsl #2]
   155c0:	mov	r2, #10
   155c4:	mov	r1, #0
   155c8:	bl	14f4c <strtol@plt>
   155cc:	str	r0, [sl, r4, lsl #2]
   155d0:	add	r4, r4, #1
   155d4:	b	155b4 <backtrace_symbols_fd@plt+0x98>
   155d8:	mov	r0, r8
   155dc:	bl	1fdc4 <String_freeArray@@Base>
   155e0:	mov	r3, #12
   155e4:	ldr	r2, [sp, #4]
   155e8:	mla	r6, r3, r6, r9
   155ec:	ldr	r3, [r7]
   155f0:	cmp	r2, r3
   155f4:	str	sl, [r6, #12]
   155f8:	beq	15600 <backtrace_symbols_fd@plt+0xe4>
   155fc:	bl	15084 <__stack_chk_fail@plt>
   15600:	add	sp, sp, #8
   15604:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15608:			; <UNDEFINED> instruction: 0x0003ccb8
   1560c:	push	{r4, lr}
   15610:	mov	r0, #1
   15614:	bl	15030 <curs_set@plt>
   15618:	bl	14f28 <endwin@plt>
   1561c:	mov	r1, #0
   15620:	mov	r0, #1
   15624:	bl	15114 <err@plt>

00015628 <main@@Base>:
   15628:	ldr	r3, [pc, #1504]	; 15c10 <main@@Base+0x5e8>
   1562c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15630:	sub	sp, sp, #68	; 0x44
   15634:	ldr	r3, [r3]
   15638:	mov	r9, r0
   1563c:	ldr	r0, [pc, #1488]	; 15c14 <main@@Base+0x5ec>
   15640:	mov	sl, r1
   15644:	str	r3, [sp, #60]	; 0x3c
   15648:	bl	151b0 <getenv@plt>
   1564c:	subs	r4, r0, #0
   15650:	beq	15b64 <main@@Base+0x53c>
   15654:	mov	r1, r4
   15658:	mov	r0, #0
   1565c:	bl	15420 <setlocale@plt>
   15660:	ldr	lr, [pc, #1456]	; 15c18 <main@@Base+0x5f0>
   15664:	ldr	r8, [pc, #1456]	; 15c1c <main@@Base+0x5f4>
   15668:	ldr	r7, [pc, #1456]	; 15c20 <main@@Base+0x5f8>
   1566c:	ldm	lr!, {r0, r1, r2, r3}
   15670:	add	ip, sp, #40	; 0x28
   15674:	ldr	fp, [pc, #1448]	; 15c24 <main@@Base+0x5fc>
   15678:	ldr	r6, [pc, #1448]	; 15c28 <main@@Base+0x600>
   1567c:	add	r5, sp, #64	; 0x40
   15680:	ldr	lr, [lr]
   15684:	mov	r4, #0
   15688:	stmia	ip!, {r0, r1, r2, r3}
   1568c:	str	r4, [r5, #-36]!	; 0xffffffdc
   15690:	str	lr, [ip]
   15694:	mov	r3, r8
   15698:	str	r5, [sp]
   1569c:	mov	r2, r7
   156a0:	mov	r1, sl
   156a4:	mov	r0, r9
   156a8:	bl	15240 <getopt_long@plt>
   156ac:	add	r3, r0, #1
   156b0:	cmp	r3, #1
   156b4:	bls	158f4 <main@@Base+0x2cc>
   156b8:	sub	r0, r0, #67	; 0x43
   156bc:	cmp	r0, #51	; 0x33
   156c0:	ldrls	pc, [pc, r0, lsl #2]
   156c4:	b	15c04 <main@@Base+0x5dc>
   156c8:	muleq	r1, r4, r8
   156cc:	andeq	r5, r1, r4, lsl #24
   156d0:	andeq	r5, r1, r4, lsl #24
   156d4:	andeq	r5, r1, r4, lsl #24
   156d8:	andeq	r5, r1, r4, lsl #24
   156dc:	andeq	r5, r1, r4, lsl #24
   156e0:	andeq	r5, r1, r4, lsl #24
   156e4:	andeq	r5, r1, r4, lsl #24
   156e8:	andeq	r5, r1, r4, lsl #24
   156ec:	andeq	r5, r1, r4, lsl #24
   156f0:	andeq	r5, r1, r4, lsl #24
   156f4:	andeq	r5, r1, r4, lsl #24
   156f8:	andeq	r5, r1, r4, lsl #24
   156fc:	andeq	r5, r1, r4, lsl #24
   15700:	andeq	r5, r1, r4, lsl #24
   15704:	andeq	r5, r1, r4, lsl #24
   15708:	andeq	r5, r1, r4, lsl #24
   1570c:	andeq	r5, r1, r4, lsl #24
   15710:	andeq	r5, r1, r4, lsl #24
   15714:	andeq	r5, r1, r4, lsl #24
   15718:	andeq	r5, r1, r4, lsl #24
   1571c:	andeq	r5, r1, r4, lsl #24
   15720:	andeq	r5, r1, r4, lsl #24
   15724:	andeq	r5, r1, r4, lsl #24
   15728:	andeq	r5, r1, r4, lsl #24
   1572c:	andeq	r5, r1, r4, lsl #24
   15730:	andeq	r5, r1, r4, lsl #24
   15734:	andeq	r5, r1, r4, lsl #24
   15738:	andeq	r5, r1, r4, lsl #24
   1573c:	andeq	r5, r1, r4, lsl #24
   15740:	andeq	r5, r1, r4, lsl #24
   15744:	andeq	r5, r1, r4, lsl #24
   15748:	andeq	r5, r1, r4, lsl #24
   1574c:	andeq	r5, r1, r0, lsr #17
   15750:	andeq	r5, r1, r4, lsl #24
   15754:	andeq	r5, r1, r4, lsl #24
   15758:	andeq	r5, r1, r4, lsl #24
   1575c:	andeq	r5, r1, r4, asr #23
   15760:	andeq	r5, r1, r4, lsl #24
   15764:	andeq	r5, r1, r4, lsl #24
   15768:	andeq	r5, r1, r4, lsl #24
   1576c:	andeq	r5, r1, r4, lsl #24
   15770:	andeq	r5, r1, r4, lsl #24
   15774:	andeq	r5, r1, r4, lsl #24
   15778:	andeq	r5, r1, r4, lsl #24
   1577c:	andeq	r5, r1, ip, lsl r8
   15780:	andeq	r5, r1, r4, lsl #24
   15784:	andeq	r5, r1, r4, lsl #24
   15788:	ldrdeq	r5, [r1], -r4
   1578c:	andeq	r5, r1, r8, asr #15
   15790:	muleq	r1, r8, r7
   15794:	andeq	r5, r1, r4, ror #23
   15798:	add	r1, sp, #44	; 0x2c
   1579c:	ldr	r0, [fp]
   157a0:	bl	236c8 <Action_setUserOnly@@Base>
   157a4:	cmp	r0, #0
   157a8:	bne	15694 <main@@Base+0x6c>
   157ac:	ldr	r0, [pc, #1144]	; 15c2c <main@@Base+0x604>
   157b0:	ldr	r3, [fp]
   157b4:	ldr	r2, [pc, #1140]	; 15c30 <main@@Base+0x608>
   157b8:	mov	r1, #1
   157bc:	ldr	r0, [r0]
   157c0:	bl	153c0 <__fprintf_chk@plt>
   157c4:	b	15694 <main@@Base+0x6c>
   157c8:	mov	r3, #1
   157cc:	strb	r3, [sp, #57]	; 0x39
   157d0:	b	15694 <main@@Base+0x6c>
   157d4:	ldr	r4, [fp]
   157d8:	ldr	r1, [pc, #1108]	; 15c34 <main@@Base+0x60c>
   157dc:	mov	r0, r4
   157e0:	bl	14f34 <strcmp@plt>
   157e4:	cmp	r0, #0
   157e8:	beq	15b80 <main@@Base+0x558>
   157ec:	mov	r0, r4
   157f0:	bl	169b8 <ColumnsPanel_fieldNameToIndex@@Base>
   157f4:	cmn	r0, #1
   157f8:	str	r0, [sp, #48]	; 0x30
   157fc:	bne	15694 <main@@Base+0x6c>
   15800:	ldr	r0, [pc, #1060]	; 15c2c <main@@Base+0x604>
   15804:	ldr	r3, [fp]
   15808:	ldr	r2, [pc, #1064]	; 15c38 <main@@Base+0x610>
   1580c:	mov	r1, #1
   15810:	ldr	r0, [r0]
   15814:	bl	153c0 <__fprintf_chk@plt>
   15818:	b	15694 <main@@Base+0x6c>
   1581c:	ldr	r0, [fp]
   15820:	bl	24034 <xStrdup@@Base>
   15824:	add	r4, sp, #32
   15828:	mov	r1, r6
   1582c:	mov	r2, r4
   15830:	str	r0, [sp, #16]
   15834:	bl	15174 <strtok_r@plt>
   15838:	ldr	r1, [sp, #40]	; 0x28
   1583c:	cmp	r1, #0
   15840:	mov	r3, r0
   15844:	beq	15b28 <main@@Base+0x500>
   15848:	cmp	r3, #0
   1584c:	beq	15888 <main@@Base+0x260>
   15850:	mov	r0, r3
   15854:	mov	r2, #10
   15858:	mov	r1, #0
   1585c:	bl	14f4c <strtol@plt>
   15860:	mov	r2, #1
   15864:	mov	r1, r0
   15868:	ldr	r0, [sp, #40]	; 0x28
   1586c:	bl	18a44 <Hashtable_put@@Base>
   15870:	mov	r2, r4
   15874:	mov	r1, r6
   15878:	mov	r0, #0
   1587c:	bl	15174 <strtok_r@plt>
   15880:	cmp	r0, #0
   15884:	bne	15854 <main@@Base+0x22c>
   15888:	ldr	r0, [sp, #16]
   1588c:	bl	14fa0 <free@plt>
   15890:	b	15694 <main@@Base+0x6c>
   15894:	mov	r3, #0
   15898:	strb	r3, [sp, #56]	; 0x38
   1589c:	b	15694 <main@@Base+0x6c>
   158a0:	add	r2, sp, #52	; 0x34
   158a4:	ldr	r1, [pc, #912]	; 15c3c <main@@Base+0x614>
   158a8:	ldr	r0, [fp]
   158ac:	bl	15468 <sscanf@plt>
   158b0:	cmp	r0, #1
   158b4:	bne	158d8 <main@@Base+0x2b0>
   158b8:	ldr	r3, [sp, #52]	; 0x34
   158bc:	cmp	r3, #0
   158c0:	strle	r0, [sp, #52]	; 0x34
   158c4:	ble	15694 <main@@Base+0x6c>
   158c8:	cmp	r3, #100	; 0x64
   158cc:	movgt	r3, #100	; 0x64
   158d0:	strgt	r3, [sp, #52]	; 0x34
   158d4:	b	15694 <main@@Base+0x6c>
   158d8:	ldr	r0, [pc, #844]	; 15c2c <main@@Base+0x604>
   158dc:	ldr	r3, [fp]
   158e0:	ldr	r2, [pc, #856]	; 15c40 <main@@Base+0x618>
   158e4:	mov	r1, #1
   158e8:	ldr	r0, [r0]
   158ec:	bl	153c0 <__fprintf_chk@plt>
   158f0:	b	15694 <main@@Base+0x6c>
   158f4:	ldrb	r3, [sp, #56]	; 0x38
   158f8:	ldr	sl, [sp, #48]	; 0x30
   158fc:	ldr	r6, [sp, #52]	; 0x34
   15900:	str	r3, [sp, #16]
   15904:	ldr	r4, [sp, #44]	; 0x2c
   15908:	ldr	r8, [sp, #40]	; 0x28
   1590c:	ldrb	fp, [sp, #57]	; 0x39
   15910:	bl	1c020 <Process_setupColumnWidths@@Base>
   15914:	bl	20af8 <UsersTable_new@@Base>
   15918:	mov	r2, r4
   1591c:	mov	r1, r8
   15920:	mov	r9, r0
   15924:	bl	272a8 <ProcessList_new@@Base>
   15928:	mov	r5, r0
   1592c:	ldr	r0, [r0, #128]	; 0x80
   15930:	bl	1f6b0 <Settings_new@@Base>
   15934:	mov	r2, #2
   15938:	mov	r4, r0
   1593c:	mov	r1, r0
   15940:	str	r0, [r5]
   15944:	mov	r0, r5
   15948:	bl	18c3c <Header_new@@Base>
   1594c:	mov	r7, r0
   15950:	bl	192a4 <Header_populateFromSettings@@Base>
   15954:	ldr	r3, [sp, #16]
   15958:	cmn	r6, #1
   1595c:	strne	r6, [r4, #40]	; 0x28
   15960:	cmp	r3, #0
   15964:	moveq	r3, #1
   15968:	streq	r3, [r4, #36]	; 0x24
   1596c:	cmp	fp, #0
   15970:	movne	r3, #1
   15974:	strbne	r3, [r4, #58]	; 0x3a
   15978:	ldr	r1, [r4, #36]	; 0x24
   1597c:	ldr	r0, [r4, #40]	; 0x28
   15980:	bl	178a8 <CRT_init@@Base>
   15984:	bl	180b4 <MainPanel_new@@Base>
   15988:	mov	r6, r0
   1598c:	mov	r1, r0
   15990:	mov	r0, r5
   15994:	bl	1d4d4 <ProcessList_setPanel@@Base>
   15998:	mov	r0, r6
   1599c:	ldrb	r1, [r4, #58]	; 0x3a
   159a0:	bl	17c28 <MainPanel_updateTreeFunctions@@Base>
   159a4:	cmp	sl, #0
   159a8:	movgt	r2, #0
   159ac:	movgt	r3, #1
   159b0:	strgt	sl, [r4, #52]	; 0x34
   159b4:	mov	r0, r6
   159b8:	strbgt	r2, [r4, #58]	; 0x3a
   159bc:	strgt	r3, [r4, #48]	; 0x30
   159c0:	bl	1b038 <Panel_getHeader@@Base>
   159c4:	mov	r1, r0
   159c8:	mov	r0, r5
   159cc:	bl	1d4dc <ProcessList_printHeader@@Base>
   159d0:	mov	r0, r6
   159d4:	add	r1, sp, #40	; 0x28
   159d8:	strd	r6, [sp, #52]	; 0x34
   159dc:	str	r4, [sp, #40]	; 0x28
   159e0:	str	r9, [sp, #44]	; 0x2c
   159e4:	str	r5, [sp, #48]	; 0x30
   159e8:	bl	18154 <MainPanel_setState@@Base>
   159ec:	mov	r3, #1
   159f0:	mov	r2, #0
   159f4:	ldr	r1, [r7, #20]
   159f8:	mov	r0, r2
   159fc:	str	r3, [sp, #12]
   15a00:	str	r3, [sp]
   15a04:	str	r4, [sp, #8]
   15a08:	mvn	r3, #0
   15a0c:	str	r7, [sp, #4]
   15a10:	bl	1e010 <ScreenManager_new@@Base>
   15a14:	mov	r1, r6
   15a18:	mvn	r2, #0
   15a1c:	add	r6, sp, #32
   15a20:	mov	sl, r0
   15a24:	bl	1e0b4 <ScreenManager_add@@Base>
   15a28:	mov	r0, r5
   15a2c:	bl	1d9cc <ProcessList_scan@@Base>
   15a30:	ldr	r3, [pc, #524]	; 15c44 <main@@Base+0x61c>
   15a34:	mov	r2, #0
   15a38:	strd	r2, [sp, #32]
   15a3c:	mov	r1, r6
   15a40:	mov	r0, r6
   15a44:	bl	14fdc <nanosleep@plt>
   15a48:	cmn	r0, #1
   15a4c:	beq	15a3c <main@@Base+0x414>
   15a50:	mov	r0, r5
   15a54:	ldr	fp, [pc, #492]	; 15c48 <main@@Base+0x620>
   15a58:	bl	1d9cc <ProcessList_scan@@Base>
   15a5c:	mov	r2, #0
   15a60:	mov	r1, r2
   15a64:	mov	r0, sl
   15a68:	bl	1e2ac <ScreenManager_run@@Base>
   15a6c:	ldr	r6, [pc, #472]	; 15c4c <main@@Base+0x624>
   15a70:	ldr	r3, [fp]
   15a74:	mov	r2, #0
   15a78:	ldr	r0, [r6]
   15a7c:	ldr	r1, [r3]
   15a80:	bl	15060 <wattr_on@plt>
   15a84:	ldr	r3, [pc, #452]	; 15c50 <main@@Base+0x628>
   15a88:	ldr	r0, [r6]
   15a8c:	mov	r2, #0
   15a90:	ldr	r1, [r3]
   15a94:	sub	r1, r1, #1
   15a98:	bl	15360 <wmove@plt>
   15a9c:	cmn	r0, #1
   15aa0:	bne	15b40 <main@@Base+0x518>
   15aa4:	ldr	r3, [fp]
   15aa8:	mov	r2, #0
   15aac:	ldr	r0, [r6]
   15ab0:	ldr	r1, [r3]
   15ab4:	bl	15324 <wattr_off@plt>
   15ab8:	ldr	r0, [r6]
   15abc:	bl	154c8 <wrefresh@plt>
   15ac0:	bl	17700 <CRT_done@@Base>
   15ac4:	ldrb	r3, [r4, #71]	; 0x47
   15ac8:	cmp	r3, #0
   15acc:	bne	15b58 <main@@Base+0x530>
   15ad0:	mov	r0, r7
   15ad4:	bl	18cc4 <Header_delete@@Base>
   15ad8:	mov	r0, r5
   15adc:	bl	27650 <ProcessList_delete@@Base>
   15ae0:	mov	r0, sl
   15ae4:	bl	1e090 <ScreenManager_delete@@Base>
   15ae8:	mov	r0, r9
   15aec:	bl	20b20 <UsersTable_delete@@Base>
   15af0:	mov	r0, r4
   15af4:	bl	1f330 <Settings_delete@@Base>
   15af8:	cmp	r8, #0
   15afc:	beq	15b08 <main@@Base+0x4e0>
   15b00:	mov	r0, r8
   15b04:	bl	189c4 <Hashtable_delete@@Base>
   15b08:	ldr	r3, [pc, #256]	; 15c10 <main@@Base+0x5e8>
   15b0c:	ldr	r2, [sp, #60]	; 0x3c
   15b10:	mov	r0, #0
   15b14:	ldr	r3, [r3]
   15b18:	cmp	r2, r3
   15b1c:	bne	15c0c <main@@Base+0x5e4>
   15b20:	add	sp, sp, #68	; 0x44
   15b24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b28:	str	r0, [sp, #20]
   15b2c:	mov	r0, #8
   15b30:	bl	18984 <Hashtable_new@@Base>
   15b34:	ldr	r3, [sp, #20]
   15b38:	str	r0, [sp, #40]	; 0x28
   15b3c:	b	15848 <main@@Base+0x220>
   15b40:	ldr	r3, [pc, #268]	; 15c54 <main@@Base+0x62c>
   15b44:	mov	r1, #32
   15b48:	ldr	r0, [r6]
   15b4c:	ldr	r2, [r3]
   15b50:	bl	15048 <whline@plt>
   15b54:	b	15aa4 <main@@Base+0x47c>
   15b58:	mov	r0, r4
   15b5c:	bl	1f374 <Settings_write@@Base>
   15b60:	b	15ad0 <main@@Base+0x4a8>
   15b64:	ldr	r0, [pc, #236]	; 15c58 <main@@Base+0x630>
   15b68:	bl	151b0 <getenv@plt>
   15b6c:	subs	r1, r0, #0
   15b70:	bne	15658 <main@@Base+0x30>
   15b74:	ldr	r1, [pc, #224]	; 15c5c <main@@Base+0x634>
   15b78:	bl	15420 <setlocale@plt>
   15b7c:	b	15660 <main@@Base+0x38>
   15b80:	ldr	r5, [pc, #216]	; 15c60 <main@@Base+0x638>
   15b84:	ldr	r6, [pc, #216]	; 15c64 <main@@Base+0x63c>
   15b88:	ldr	r7, [pc, #216]	; 15c68 <main@@Base+0x640>
   15b8c:	mov	r4, #1
   15b90:	b	15bb0 <main@@Base+0x588>
   15b94:	ldr	r2, [r6, r4, lsl #4]
   15b98:	cmp	r2, #0
   15b9c:	beq	15bac <main@@Base+0x584>
   15ba0:	mov	r1, r7
   15ba4:	mov	r0, #1
   15ba8:	bl	1539c <__printf_chk@plt>
   15bac:	add	r4, r4, #1
   15bb0:	ldr	r3, [r5]
   15bb4:	cmp	r4, r3
   15bb8:	blt	15b94 <main@@Base+0x56c>
   15bbc:	mov	r0, #0
   15bc0:	bl	15264 <exit@plt>
   15bc4:	ldr	r3, [pc, #160]	; 15c6c <main@@Base+0x644>
   15bc8:	ldr	r2, [pc, #160]	; 15c70 <main@@Base+0x648>
   15bcc:	mov	r1, #1
   15bd0:	ldr	r3, [r3]
   15bd4:	ldr	r0, [pc, #152]	; 15c74 <main@@Base+0x64c>
   15bd8:	bl	15144 <fwrite@plt>
   15bdc:	mov	r0, #0
   15be0:	bl	15264 <exit@plt>
   15be4:	ldr	r3, [pc, #128]	; 15c6c <main@@Base+0x644>
   15be8:	mov	r2, #72	; 0x48
   15bec:	mov	r1, #1
   15bf0:	ldr	r3, [r3]
   15bf4:	ldr	r0, [pc, #124]	; 15c78 <main@@Base+0x650>
   15bf8:	bl	15144 <fwrite@plt>
   15bfc:	mov	r0, #0
   15c00:	bl	15264 <exit@plt>
   15c04:	mov	r0, #1
   15c08:	bl	15264 <exit@plt>
   15c0c:	bl	15084 <__stack_chk_fail@plt>
   15c10:			; <UNDEFINED> instruction: 0x0003ccb8
   15c14:	strdeq	r9, [r2], -r8
   15c18:	andeq	r9, r2, r4, ror #13
   15c1c:	andeq	sp, r3, r0, lsr #19
   15c20:	andeq	r9, r2, r4, ror sl
   15c24:	muleq	r3, r0, r7
   15c28:	muleq	r2, r8, r3
   15c2c:	andeq	lr, r3, r8, ror r7
   15c30:	andeq	r9, r2, r8, asr sl
   15c34:	andeq	r9, r2, r4, lsl #20
   15c38:	andeq	r9, r2, ip, lsl #20
   15c3c:	andeq	r9, r2, ip, lsr #20
   15c40:	andeq	r9, r2, r4, lsr sl
   15c44:	ldrbteq	r6, [r8], #-2240	; 0xfffff740
   15c48:	muleq	r3, r8, r1
   15c4c:	andeq	lr, r3, r8, lsl #15
   15c50:	andeq	lr, r3, r0, ror r7
   15c54:	andeq	lr, r3, ip, ror r7
   15c58:	andeq	r9, r2, r4, lsl #14
   15c5c:	andeq	r9, r2, r0, lsl #20
   15c60:	andeq	sp, r3, ip, asr pc
   15c64:	strdeq	sp, [r3], -r0
   15c68:	strdeq	r9, [r2], -r4
   15c6c:	andeq	lr, r3, r4, lsl #15
   15c70:	andeq	r0, r0, fp, lsr #5
   15c74:	andeq	r9, r2, ip, lsl #14
   15c78:			; <UNDEFINED> instruction: 0x000299b8

00015c7c <_start@@Base>:
   15c7c:	mov	fp, #0
   15c80:	mov	lr, #0
   15c84:	pop	{r1}		; (ldr r1, [sp], #4)
   15c88:	mov	r2, sp
   15c8c:	push	{r2}		; (str r2, [sp, #-4]!)
   15c90:	push	{r0}		; (str r0, [sp, #-4]!)
   15c94:	ldr	ip, [pc, #16]	; 15cac <_start@@Base+0x30>
   15c98:	push	{ip}		; (str ip, [sp, #-4]!)
   15c9c:	ldr	r0, [pc, #12]	; 15cb0 <_start@@Base+0x34>
   15ca0:	ldr	r3, [pc, #12]	; 15cb4 <_start@@Base+0x38>
   15ca4:	bl	151e0 <__libc_start_main@plt>
   15ca8:	bl	154ec <abort@plt>
   15cac:	andeq	r8, r2, r8, lsr pc
   15cb0:	andeq	r5, r1, r8, lsr #12
   15cb4:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   15cb8:	ldr	r3, [pc, #20]	; 15cd4 <_start@@Base+0x58>
   15cbc:	ldr	r2, [pc, #20]	; 15cd8 <_start@@Base+0x5c>
   15cc0:	add	r3, pc, r3
   15cc4:	ldr	r2, [r3, r2]
   15cc8:	cmp	r2, #0
   15ccc:	bxeq	lr
   15cd0:	b	15228 <__gmon_start__@plt>
   15cd4:	andeq	r7, r2, ip, lsl #2
   15cd8:	andeq	r0, r0, r4, lsr #4
   15cdc:	ldr	r0, [pc, #24]	; 15cfc <_start@@Base+0x80>
   15ce0:	ldr	r3, [pc, #24]	; 15d00 <_start@@Base+0x84>
   15ce4:	cmp	r3, r0
   15ce8:	bxeq	lr
   15cec:	ldr	r3, [pc, #16]	; 15d04 <_start@@Base+0x88>
   15cf0:	cmp	r3, #0
   15cf4:	bxeq	lr
   15cf8:	bx	r3
   15cfc:	andeq	lr, r3, r0, ror r7
   15d00:	andeq	lr, r3, r0, ror r7
   15d04:	andeq	r0, r0, r0
   15d08:	ldr	r0, [pc, #36]	; 15d34 <_start@@Base+0xb8>
   15d0c:	ldr	r1, [pc, #36]	; 15d38 <_start@@Base+0xbc>
   15d10:	sub	r1, r1, r0
   15d14:	asr	r1, r1, #2
   15d18:	add	r1, r1, r1, lsr #31
   15d1c:	asrs	r1, r1, #1
   15d20:	bxeq	lr
   15d24:	ldr	r3, [pc, #16]	; 15d3c <_start@@Base+0xc0>
   15d28:	cmp	r3, #0
   15d2c:	bxeq	lr
   15d30:	bx	r3
   15d34:	andeq	lr, r3, r0, ror r7
   15d38:	andeq	lr, r3, r0, ror r7
   15d3c:	andeq	r0, r0, r0
   15d40:	push	{r4, lr}
   15d44:	ldr	r4, [pc, #24]	; 15d64 <_start@@Base+0xe8>
   15d48:	ldrb	r3, [r4]
   15d4c:	cmp	r3, #0
   15d50:	popne	{r4, pc}
   15d54:	bl	15cdc <_start@@Base+0x60>
   15d58:	mov	r3, #1
   15d5c:	strb	r3, [r4]
   15d60:	pop	{r4, pc}
   15d64:	muleq	r3, r4, r7
   15d68:	b	15d08 <_start@@Base+0x8c>
   15d6c:	push	{r4, lr}
   15d70:	mov	r4, r0
   15d74:	bl	1afe8 <Panel_done@@Base>
   15d78:	mov	r0, r4
   15d7c:	pop	{r4, lr}
   15d80:	b	14fa0 <free@plt>
   15d84:	push	{r4, r5, r6, r7, lr}
   15d88:	add	r4, r0, #8192	; 0x2000
   15d8c:	sub	sp, sp, #12
   15d90:	mov	r5, r1
   15d94:	ldr	r6, [r4, #312]	; 0x138
   15d98:	bl	1b160 <Panel_getSelected@@Base>
   15d9c:	cmp	r5, #108	; 0x6c
   15da0:	ldr	r3, [r0, #8]
   15da4:	uxtb	r2, r3
   15da8:	asr	r0, r3, #16
   15dac:	beq	15e68 <_start@@Base+0x1ec>
   15db0:	bgt	15e30 <_start@@Base+0x1b4>
   15db4:	cmp	r5, #13
   15db8:	beq	15dd0 <_start@@Base+0x154>
   15dbc:	ble	15f18 <_start@@Base+0x29c>
   15dc0:	cmp	r5, #76	; 0x4c
   15dc4:	beq	15e68 <_start@@Base+0x1ec>
   15dc8:	cmp	r5, #82	; 0x52
   15dcc:	bne	15e58 <_start@@Base+0x1dc>
   15dd0:	ldr	r1, [pc, #332]	; 15f24 <_start@@Base+0x2a8>
   15dd4:	mov	r3, #1
   15dd8:	ldr	r7, [r4, #320]	; 0x140
   15ddc:	ldr	r1, [r1, r0, lsl #2]
   15de0:	mov	r0, r6
   15de4:	bl	18f80 <Header_addMeterByClass@@Base>
   15de8:	mov	r1, #0
   15dec:	bl	1a73c <Meter_toListItem@@Base>
   15df0:	ldr	r5, [pc, #304]	; 15f28 <_start@@Base+0x2ac>
   15df4:	mov	r1, r0
   15df8:	mov	r0, r7
   15dfc:	bl	1b0d4 <Panel_add@@Base>
   15e00:	mov	r0, r7
   15e04:	bl	1b1d4 <Panel_size@@Base>
   15e08:	sub	r1, r0, #1
   15e0c:	mov	r0, r7
   15e10:	bl	1b1e0 <Panel_setSelected@@Base>
   15e14:	mov	r0, r7
   15e18:	mov	r1, #1
   15e1c:	bl	1a88c <MetersPanel_setMoving@@Base>
   15e20:	ldr	r0, [r7, #52]	; 0x34
   15e24:	mov	r1, #0
   15e28:	bl	188f8 <FunctionBar_draw@@Base>
   15e2c:	b	15ec4 <_start@@Base+0x248>
   15e30:	ldr	r3, [pc, #244]	; 15f2c <_start@@Base+0x2b0>
   15e34:	cmp	r5, r3
   15e38:	beq	15e68 <_start@@Base+0x1ec>
   15e3c:	ble	15f0c <_start@@Base+0x290>
   15e40:	ldr	r3, [pc, #232]	; 15f30 <_start@@Base+0x2b4>
   15e44:	cmp	r5, r3
   15e48:	beq	15dd0 <_start@@Base+0x154>
   15e4c:	add	r3, r3, #73	; 0x49
   15e50:	cmp	r5, r3
   15e54:	beq	15dd0 <_start@@Base+0x154>
   15e58:	mov	r5, #2
   15e5c:	mov	r0, r5
   15e60:	add	sp, sp, #12
   15e64:	pop	{r4, r5, r6, r7, pc}
   15e68:	ldr	r1, [pc, #180]	; 15f24 <_start@@Base+0x2a8>
   15e6c:	mov	r3, #0
   15e70:	ldr	r7, [r4, #316]	; 0x13c
   15e74:	ldr	r1, [r1, r0, lsl #2]
   15e78:	mov	r0, r6
   15e7c:	bl	18f80 <Header_addMeterByClass@@Base>
   15e80:	mov	r1, #0
   15e84:	bl	1a73c <Meter_toListItem@@Base>
   15e88:	mov	r5, #1
   15e8c:	mov	r1, r0
   15e90:	mov	r0, r7
   15e94:	bl	1b0d4 <Panel_add@@Base>
   15e98:	mov	r0, r7
   15e9c:	bl	1b1d4 <Panel_size@@Base>
   15ea0:	sub	r1, r0, #1
   15ea4:	mov	r0, r7
   15ea8:	bl	1b1e0 <Panel_setSelected@@Base>
   15eac:	mov	r0, r7
   15eb0:	mov	r1, r5
   15eb4:	bl	1a88c <MetersPanel_setMoving@@Base>
   15eb8:	ldr	r0, [r7, #52]	; 0x34
   15ebc:	mov	r1, #0
   15ec0:	bl	188f8 <FunctionBar_draw@@Base>
   15ec4:	ldr	r3, [r4, #308]	; 0x134
   15ec8:	mov	r2, #1
   15ecc:	mov	r0, r6
   15ed0:	strb	r2, [r3, #71]	; 0x47
   15ed4:	bl	19214 <Header_calculateHeight@@Base>
   15ed8:	mov	r0, r6
   15edc:	bl	190e4 <Header_draw@@Base>
   15ee0:	ldr	ip, [r4, #304]	; 0x130
   15ee4:	ldr	r2, [r6, #20]
   15ee8:	mov	r0, ip
   15eec:	ldr	r3, [ip, #8]
   15ef0:	ldr	r1, [ip]
   15ef4:	ldr	ip, [ip, #12]
   15ef8:	str	ip, [sp]
   15efc:	bl	1e198 <ScreenManager_resize@@Base>
   15f00:	mov	r0, r5
   15f04:	add	sp, sp, #12
   15f08:	pop	{r4, r5, r6, r7, pc}
   15f0c:	cmp	r5, #114	; 0x72
   15f10:	bne	15e58 <_start@@Base+0x1dc>
   15f14:	b	15dd0 <_start@@Base+0x154>
   15f18:	cmp	r5, #10
   15f1c:	bne	15e58 <_start@@Base+0x1dc>
   15f20:	b	15dd0 <_start@@Base+0x154>
   15f24:	andeq	sp, r3, r4, lsl pc
   15f28:	tsteq	r4, r0, lsr #32
   15f2c:	andeq	r0, r0, sp, lsl #2
   15f30:	andeq	r0, r0, lr, lsl #2

00015f34 <AvailableMetersPanel_new@@Base>:
   15f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f38:	sub	sp, sp, #76	; 0x4c
   15f3c:	ldr	r7, [pc, #416]	; 160e4 <AvailableMetersPanel_new@@Base+0x1b0>
   15f40:	mov	fp, r0
   15f44:	ldr	r0, [pc, #412]	; 160e8 <AvailableMetersPanel_new@@Base+0x1b4>
   15f48:	ldr	ip, [r7]
   15f4c:	mov	r9, r2
   15f50:	mov	r6, r3
   15f54:	str	ip, [sp, #68]	; 0x44
   15f58:	mov	sl, r1
   15f5c:	ldr	r4, [sp, #112]	; 0x70
   15f60:	ldr	r8, [sp, #116]	; 0x74
   15f64:	bl	23fb0 <xMalloc@@Base>
   15f68:	ldr	r3, [pc, #380]	; 160ec <AvailableMetersPanel_new@@Base+0x1b8>
   15f6c:	ldr	r1, [pc, #380]	; 160f0 <AvailableMetersPanel_new@@Base+0x1bc>
   15f70:	mov	r5, r0
   15f74:	str	r3, [r0]
   15f78:	ldr	r0, [pc, #372]	; 160f4 <AvailableMetersPanel_new@@Base+0x1c0>
   15f7c:	bl	185cc <FunctionBar_newEnterEsc@@Base>
   15f80:	ldr	r2, [pc, #368]	; 160f8 <AvailableMetersPanel_new@@Base+0x1c4>
   15f84:	mov	r3, #1
   15f88:	mov	r1, r3
   15f8c:	strd	r2, [sp, #4]
   15f90:	str	r3, [sp]
   15f94:	mov	r2, r3
   15f98:	str	r0, [sp, #12]
   15f9c:	mov	r0, r5
   15fa0:	bl	1aef0 <Panel_init@@Base>
   15fa4:	add	r3, r5, #8192	; 0x2000
   15fa8:	mov	r0, r5
   15fac:	str	r6, [r3, #320]	; 0x140
   15fb0:	ldr	r6, [pc, #324]	; 160fc <AvailableMetersPanel_new@@Base+0x1c8>
   15fb4:	str	fp, [r3, #308]	; 0x134
   15fb8:	str	sl, [r3, #312]	; 0x138
   15fbc:	str	r9, [r3, #316]	; 0x13c
   15fc0:	str	r4, [r3, #304]	; 0x130
   15fc4:	ldr	r1, [pc, #308]	; 16100 <AvailableMetersPanel_new@@Base+0x1cc>
   15fc8:	bl	1b048 <Panel_setHeader@@Base>
   15fcc:	ldr	r3, [r6, #4]
   15fd0:	cmp	r3, #0
   15fd4:	beq	16010 <AvailableMetersPanel_new@@Base+0xdc>
   15fd8:	add	r6, r6, #8
   15fdc:	mov	r4, #65536	; 0x10000
   15fe0:	ldr	r0, [r3, #64]	; 0x40
   15fe4:	mov	r1, r4
   15fe8:	cmp	r0, #0
   15fec:	add	r4, r4, #65536	; 0x10000
   15ff0:	ldreq	r0, [r3, #56]	; 0x38
   15ff4:	bl	193f4 <ListItem_new@@Base>
   15ff8:	mov	r1, r0
   15ffc:	mov	r0, r5
   16000:	bl	1b0d4 <Panel_add@@Base>
   16004:	ldr	r3, [r6], #4
   16008:	cmp	r3, #0
   1600c:	bne	15fe0 <AvailableMetersPanel_new@@Base+0xac>
   16010:	ldr	r6, [r8, #128]	; 0x80
   16014:	cmp	r6, #1
   16018:	ble	160ac <AvailableMetersPanel_new@@Base+0x178>
   1601c:	mov	r1, #0
   16020:	ldr	r0, [pc, #220]	; 16104 <AvailableMetersPanel_new@@Base+0x1d0>
   16024:	bl	193f4 <ListItem_new@@Base>
   16028:	ldr	r9, [pc, #216]	; 16108 <AvailableMetersPanel_new@@Base+0x1d4>
   1602c:	ldr	r8, [pc, #216]	; 1610c <AvailableMetersPanel_new@@Base+0x1d8>
   16030:	mov	r4, #1
   16034:	mov	r1, r0
   16038:	mov	r0, r5
   1603c:	bl	1b0d4 <Panel_add@@Base>
   16040:	ldr	r2, [r9, #56]	; 0x38
   16044:	mov	r3, #50	; 0x32
   16048:	str	r2, [sp, #4]
   1604c:	str	r4, [sp, #8]
   16050:	str	r8, [sp]
   16054:	mov	r1, r3
   16058:	mov	r2, #1
   1605c:	add	r0, sp, #16
   16060:	bl	15510 <__snprintf_chk@plt>
   16064:	cmp	r0, #49	; 0x31
   16068:	bhi	160c8 <AvailableMetersPanel_new@@Base+0x194>
   1606c:	mov	r1, r4
   16070:	add	r0, sp, #16
   16074:	bl	193f4 <ListItem_new@@Base>
   16078:	add	r4, r4, #1
   1607c:	mov	r1, r0
   16080:	mov	r0, r5
   16084:	bl	1b0d4 <Panel_add@@Base>
   16088:	cmp	r6, r4
   1608c:	bge	16040 <AvailableMetersPanel_new@@Base+0x10c>
   16090:	ldr	r2, [sp, #68]	; 0x44
   16094:	ldr	r3, [r7]
   16098:	mov	r0, r5
   1609c:	cmp	r2, r3
   160a0:	bne	160e0 <AvailableMetersPanel_new@@Base+0x1ac>
   160a4:	add	sp, sp, #76	; 0x4c
   160a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160ac:	mov	r1, #1
   160b0:	ldr	r0, [pc, #88]	; 16110 <AvailableMetersPanel_new@@Base+0x1dc>
   160b4:	bl	193f4 <ListItem_new@@Base>
   160b8:	mov	r1, r0
   160bc:	mov	r0, r5
   160c0:	bl	1b0d4 <Panel_add@@Base>
   160c4:	b	16090 <AvailableMetersPanel_new@@Base+0x15c>
   160c8:	mov	r0, #1
   160cc:	bl	15030 <curs_set@plt>
   160d0:	bl	14f28 <endwin@plt>
   160d4:	mov	r1, #0
   160d8:	mov	r0, #1
   160dc:	bl	15114 <err@plt>
   160e0:	bl	15084 <__stack_chk_fail@plt>
   160e4:			; <UNDEFINED> instruction: 0x0003ccb8
   160e8:	andeq	r2, r0, r4, asr #2
   160ec:	andeq	sp, r3, r8
   160f0:	andeq	r8, r2, r8, asr #30
   160f4:	andeq	r8, r2, r0, asr pc
   160f8:	andeq	sp, r3, r0, asr sl
   160fc:	andeq	sp, r3, r4, lsl pc
   16100:	andeq	r8, r2, r8, asr pc
   16104:	andeq	r8, r2, ip, ror #30
   16108:	strheq	sp, [r3], -r8
   1610c:	andeq	r8, r2, r8, ror pc
   16110:	strdeq	fp, [r2], -r8
   16114:	push	{r4, lr}
   16118:	mov	r4, r0
   1611c:	bl	1afe8 <Panel_done@@Base>
   16120:	mov	r0, r4
   16124:	pop	{r4, lr}
   16128:	b	14fa0 <free@plt>

0001612c <CategoriesPanel_makeMetersPage@@Base>:
   1612c:	push	{r4, r5, r6, r7, lr}
   16130:	add	r4, r0, #8192	; 0x2000
   16134:	sub	sp, sp, #12
   16138:	ldr	r2, [r4, #312]	; 0x138
   1613c:	ldr	r3, [r4, #304]	; 0x130
   16140:	ldr	r1, [pc, #160]	; 161e8 <CategoriesPanel_makeMetersPage@@Base+0xbc>
   16144:	ldr	r2, [r2]
   16148:	ldr	r0, [r4, #308]	; 0x134
   1614c:	ldr	r2, [r2]
   16150:	bl	1ac44 <MetersPanel_new@@Base>
   16154:	ldr	r2, [r4, #312]	; 0x138
   16158:	ldr	r3, [r4, #304]	; 0x130
   1615c:	ldr	r1, [pc, #136]	; 161ec <CategoriesPanel_makeMetersPage@@Base+0xc0>
   16160:	ldr	r2, [r2]
   16164:	ldr	r2, [r2, #4]
   16168:	mov	r6, r0
   1616c:	ldr	r0, [r4, #308]	; 0x134
   16170:	bl	1ac44 <MetersPanel_new@@Base>
   16174:	ldr	r3, [r4, #316]	; 0x13c
   16178:	add	r1, r6, #8192	; 0x2000
   1617c:	add	r2, r0, #8192	; 0x2000
   16180:	str	r0, [r1, #320]	; 0x140
   16184:	mov	r5, r0
   16188:	ldr	r1, [r4, #312]	; 0x138
   1618c:	ldr	r0, [r4, #308]	; 0x134
   16190:	str	r6, [r2, #316]	; 0x13c
   16194:	str	r3, [sp, #4]
   16198:	ldr	r3, [r4, #304]	; 0x130
   1619c:	mov	r2, r6
   161a0:	str	r3, [sp]
   161a4:	mov	r3, r5
   161a8:	bl	15f34 <AvailableMetersPanel_new@@Base>
   161ac:	mov	r1, r6
   161b0:	mov	r2, #20
   161b4:	mov	r7, r0
   161b8:	ldr	r0, [r4, #304]	; 0x130
   161bc:	bl	1e0b4 <ScreenManager_add@@Base>
   161c0:	mov	r1, r5
   161c4:	ldr	r0, [r4, #304]	; 0x130
   161c8:	mov	r2, #20
   161cc:	bl	1e0b4 <ScreenManager_add@@Base>
   161d0:	mov	r1, r7
   161d4:	ldr	r0, [r4, #304]	; 0x130
   161d8:	mvn	r2, #0
   161dc:	add	sp, sp, #12
   161e0:	pop	{r4, r5, r6, r7, lr}
   161e4:	b	1e0b4 <ScreenManager_add@@Base>
   161e8:	andeq	r8, r2, ip, lsr #31
   161ec:			; <UNDEFINED> instruction: 0x00028fb8
   161f0:	push	{r4, r5, r6, r7, r8, lr}
   161f4:	mov	r4, r1
   161f8:	mov	r8, r0
   161fc:	bl	1b1cc <Panel_getSelectedIndex@@Base>
   16200:	cmp	r4, #260	; 0x104
   16204:	mov	r7, r0
   16208:	bge	16280 <CategoriesPanel_makeMetersPage@@Base+0x154>
   1620c:	ldr	r3, [pc, #380]	; 16390 <CategoriesPanel_makeMetersPage@@Base+0x264>
   16210:	cmp	r4, r3
   16214:	bge	162e8 <CategoriesPanel_makeMetersPage@@Base+0x1bc>
   16218:	cmp	r4, #14
   1621c:	beq	162e8 <CategoriesPanel_makeMetersPage@@Base+0x1bc>
   16220:	cmp	r4, #16
   16224:	beq	162e8 <CategoriesPanel_makeMetersPage@@Base+0x1bc>
   16228:	cmn	r4, #1
   1622c:	bne	162a0 <CategoriesPanel_makeMetersPage@@Base+0x174>
   16230:	add	r5, r8, #8192	; 0x2000
   16234:	ldr	r0, [r5, #304]	; 0x130
   16238:	bl	1e0ac <ScreenManager_size@@Base>
   1623c:	cmp	r0, #1
   16240:	mov	r6, r0
   16244:	ble	16264 <CategoriesPanel_makeMetersPage@@Base+0x138>
   16248:	mov	r4, #1
   1624c:	add	r4, r4, #1
   16250:	mov	r1, #1
   16254:	ldr	r0, [r5, #304]	; 0x130
   16258:	bl	1e178 <ScreenManager_remove@@Base>
   1625c:	cmp	r6, r4
   16260:	bne	1624c <CategoriesPanel_makeMetersPage@@Base+0x120>
   16264:	cmp	r7, #3
   16268:	ldrls	pc, [pc, r7, lsl #2]
   1626c:	b	1632c <CategoriesPanel_makeMetersPage@@Base+0x200>
   16270:	andeq	r6, r1, r4, lsr r3
   16274:	andeq	r6, r1, r0, lsl r3
   16278:	andeq	r6, r1, r4, asr #6
   1627c:	andeq	r6, r1, r4, asr r3
   16280:	cmp	r4, #340	; 0x154
   16284:	bge	162e0 <CategoriesPanel_makeMetersPage@@Base+0x1b4>
   16288:	ldr	r3, [pc, #260]	; 16394 <CategoriesPanel_makeMetersPage@@Base+0x268>
   1628c:	cmp	r4, r3
   16290:	bge	162e8 <CategoriesPanel_makeMetersPage@@Base+0x1bc>
   16294:	sub	r3, r3, #76	; 0x4c
   16298:	cmp	r4, r3
   1629c:	beq	162e8 <CategoriesPanel_makeMetersPage@@Base+0x1bc>
   162a0:	cmp	r4, #254	; 0xfe
   162a4:	bgt	16308 <CategoriesPanel_makeMetersPage@@Base+0x1dc>
   162a8:	bl	15258 <__ctype_b_loc@plt>
   162ac:	lsl	r3, r4, #1
   162b0:	ldr	r2, [r0]
   162b4:	ldrh	r3, [r2, r3]
   162b8:	tst	r3, #1024	; 0x400
   162bc:	beq	16308 <CategoriesPanel_makeMetersPage@@Base+0x1dc>
   162c0:	mov	r1, r4
   162c4:	mov	r0, r8
   162c8:	bl	1ad54 <Panel_selectByTyping@@Base>
   162cc:	cmp	r0, #4
   162d0:	beq	16308 <CategoriesPanel_makeMetersPage@@Base+0x1dc>
   162d4:	cmp	r0, #1
   162d8:	beq	16230 <CategoriesPanel_makeMetersPage@@Base+0x104>
   162dc:	pop	{r4, r5, r6, r7, r8, pc}
   162e0:	cmp	r4, #360	; 0x168
   162e4:	bne	162a0 <CategoriesPanel_makeMetersPage@@Base+0x174>
   162e8:	mov	r1, r4
   162ec:	mov	r0, r8
   162f0:	bl	1b88c <Panel_onKey@@Base>
   162f4:	mov	r0, r8
   162f8:	bl	1b1cc <Panel_getSelectedIndex@@Base>
   162fc:	cmp	r7, r0
   16300:	movne	r7, r0
   16304:	bne	16230 <CategoriesPanel_makeMetersPage@@Base+0x104>
   16308:	mov	r0, #2
   1630c:	pop	{r4, r5, r6, r7, r8, pc}
   16310:	ldr	r1, [r5, #304]	; 0x130
   16314:	ldr	r0, [r5, #308]	; 0x134
   16318:	bl	18254 <DisplayOptionsPanel_new@@Base>
   1631c:	mov	r1, r0
   16320:	mvn	r2, #0
   16324:	ldr	r0, [r5, #304]	; 0x130
   16328:	bl	1e0b4 <ScreenManager_add@@Base>
   1632c:	mov	r0, #1
   16330:	pop	{r4, r5, r6, r7, r8, pc}
   16334:	mov	r0, r8
   16338:	bl	1612c <CategoriesPanel_makeMetersPage@@Base>
   1633c:	mov	r0, #1
   16340:	pop	{r4, r5, r6, r7, r8, pc}
   16344:	ldr	r1, [r5, #304]	; 0x130
   16348:	ldr	r0, [r5, #308]	; 0x134
   1634c:	bl	167e0 <ColorsPanel_new@@Base>
   16350:	b	1631c <CategoriesPanel_makeMetersPage@@Base+0x1f0>
   16354:	ldr	r0, [r5, #308]	; 0x134
   16358:	bl	168e0 <ColumnsPanel_new@@Base>
   1635c:	mov	r6, r0
   16360:	bl	211dc <AvailableColumnsPanel_new@@Base>
   16364:	mov	r1, r6
   16368:	mov	r2, #20
   1636c:	mov	r4, r0
   16370:	ldr	r0, [r5, #304]	; 0x130
   16374:	bl	1e0b4 <ScreenManager_add@@Base>
   16378:	ldr	r0, [r5, #304]	; 0x130
   1637c:	mov	r1, r4
   16380:	mvn	r2, #0
   16384:	bl	1e0b4 <ScreenManager_add@@Base>
   16388:	mov	r0, #1
   1638c:	pop	{r4, r5, r6, r7, r8, pc}
   16390:	andeq	r0, r0, r2, lsl #2
   16394:	andeq	r0, r0, r2, asr r1

00016398 <CategoriesPanel_new@@Base>:
   16398:	push	{r4, r5, r6, r7, r8, lr}
   1639c:	mov	r8, r0
   163a0:	sub	sp, sp, #16
   163a4:	mov	r0, #8512	; 0x2140
   163a8:	mov	r7, r1
   163ac:	mov	r6, r2
   163b0:	mov	r5, r3
   163b4:	bl	23fb0 <xMalloc@@Base>
   163b8:	ldr	r3, [pc, #196]	; 16484 <CategoriesPanel_new@@Base+0xec>
   163bc:	mov	r2, #0
   163c0:	mov	r1, r2
   163c4:	mov	r4, r0
   163c8:	str	r3, [r0]
   163cc:	ldr	r0, [pc, #180]	; 16488 <CategoriesPanel_new@@Base+0xf0>
   163d0:	bl	184a4 <FunctionBar_new@@Base>
   163d4:	ldr	r2, [pc, #176]	; 1648c <CategoriesPanel_new@@Base+0xf4>
   163d8:	mov	r3, #1
   163dc:	str	r3, [sp]
   163e0:	strd	r2, [sp, #4]
   163e4:	mov	r1, r3
   163e8:	mov	r2, r3
   163ec:	str	r0, [sp, #12]
   163f0:	mov	r0, r4
   163f4:	bl	1aef0 <Panel_init@@Base>
   163f8:	add	r3, r4, #8192	; 0x2000
   163fc:	mov	r0, r4
   16400:	str	r8, [r3, #304]	; 0x130
   16404:	str	r7, [r3, #308]	; 0x134
   16408:	str	r6, [r3, #312]	; 0x138
   1640c:	str	r5, [r3, #316]	; 0x13c
   16410:	ldr	r1, [pc, #120]	; 16490 <CategoriesPanel_new@@Base+0xf8>
   16414:	bl	1b048 <Panel_setHeader@@Base>
   16418:	mov	r1, #0
   1641c:	ldr	r0, [pc, #112]	; 16494 <CategoriesPanel_new@@Base+0xfc>
   16420:	bl	193f4 <ListItem_new@@Base>
   16424:	mov	r1, r0
   16428:	mov	r0, r4
   1642c:	bl	1b0d4 <Panel_add@@Base>
   16430:	mov	r1, #0
   16434:	ldr	r0, [pc, #92]	; 16498 <CategoriesPanel_new@@Base+0x100>
   16438:	bl	193f4 <ListItem_new@@Base>
   1643c:	mov	r1, r0
   16440:	mov	r0, r4
   16444:	bl	1b0d4 <Panel_add@@Base>
   16448:	mov	r1, #0
   1644c:	ldr	r0, [pc, #72]	; 1649c <CategoriesPanel_new@@Base+0x104>
   16450:	bl	193f4 <ListItem_new@@Base>
   16454:	mov	r1, r0
   16458:	mov	r0, r4
   1645c:	bl	1b0d4 <Panel_add@@Base>
   16460:	mov	r1, #0
   16464:	ldr	r0, [pc, #52]	; 164a0 <CategoriesPanel_new@@Base+0x108>
   16468:	bl	193f4 <ListItem_new@@Base>
   1646c:	mov	r1, r0
   16470:	mov	r0, r4
   16474:	bl	1b0d4 <Panel_add@@Base>
   16478:	mov	r0, r4
   1647c:	add	sp, sp, #16
   16480:	pop	{r4, r5, r6, r7, r8, pc}
   16484:	andeq	sp, r3, ip, lsl r0
   16488:	andeq	r8, r2, r0, lsl #31
   1648c:	andeq	sp, r3, r0, asr sl
   16490:	andeq	r8, r2, r8, asr #31
   16494:	ldrdeq	r8, [r2], -r0
   16498:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1649c:	andeq	r8, r2, r8, ror #31
   164a0:	strdeq	r8, [r2], -r0
   164a4:	push	{r4, lr}
   164a8:	mov	r4, r0
   164ac:	ldr	r0, [r0, #4]
   164b0:	bl	14fa0 <free@plt>
   164b4:	mov	r0, r4
   164b8:	pop	{r4, lr}
   164bc:	b	14fa0 <free@plt>
   164c0:	push	{r4, r5, r6, lr}
   164c4:	mov	r6, r0
   164c8:	ldr	r5, [pc, #108]	; 1653c <CategoriesPanel_new@@Base+0x1a4>
   164cc:	ldr	r2, [pc, #108]	; 16540 <CategoriesPanel_new@@Base+0x1a8>
   164d0:	mov	r4, r1
   164d4:	ldr	r3, [r5]
   164d8:	mov	r0, r1
   164dc:	ldr	r1, [r3, #168]	; 0xa8
   164e0:	bl	1dedc <RichString_write@@Base>
   164e4:	ldr	r3, [r6, #8]
   164e8:	mov	r0, r4
   164ec:	cmp	r3, #0
   164f0:	ldrbne	r2, [r3]
   164f4:	ldrbeq	r2, [r6, #12]
   164f8:	ldr	r3, [r5]
   164fc:	ldr	r1, [r3, #172]	; 0xac
   16500:	cmp	r2, #0
   16504:	ldrne	r2, [pc, #56]	; 16544 <CategoriesPanel_new@@Base+0x1ac>
   16508:	ldreq	r2, [pc, #56]	; 16548 <CategoriesPanel_new@@Base+0x1b0>
   1650c:	bl	1dc64 <RichString_append@@Base>
   16510:	ldr	r3, [r5]
   16514:	mov	r0, r4
   16518:	ldr	r2, [pc, #44]	; 1654c <CategoriesPanel_new@@Base+0x1b4>
   1651c:	ldr	r1, [r3, #168]	; 0xa8
   16520:	bl	1dc64 <RichString_append@@Base>
   16524:	ldr	r3, [r5]
   16528:	ldr	r2, [r6, #4]
   1652c:	mov	r0, r4
   16530:	ldr	r1, [r3, #176]	; 0xb0
   16534:	pop	{r4, r5, r6, lr}
   16538:	b	1dc64 <RichString_append@@Base>
   1653c:	muleq	r3, r8, r1
   16540:	andeq	r9, r2, r0
   16544:	andeq	r9, r2, r4, lsl #6
   16548:	ldrdeq	sl, [r2], -r0
   1654c:	andeq	r9, r2, r4

00016550 <CheckItem_newByRef@@Base>:
   16550:	push	{r4, r5, r6, lr}
   16554:	mov	r5, r0
   16558:	mov	r0, #16
   1655c:	mov	r4, r1
   16560:	bl	23fb0 <xMalloc@@Base>
   16564:	ldr	ip, [pc, #20]	; 16580 <CheckItem_newByRef@@Base+0x30>
   16568:	mov	r2, #0
   1656c:	str	r5, [r0, #4]
   16570:	str	r4, [r0, #8]
   16574:	str	ip, [r0]
   16578:	strb	r2, [r0, #12]
   1657c:	pop	{r4, r5, r6, pc}
   16580:	andeq	sp, r3, r0, lsr r0

00016584 <CheckItem_newByVal@@Base>:
   16584:	push	{r4, r5, r6, lr}
   16588:	mov	r5, r0
   1658c:	mov	r0, #16
   16590:	mov	r4, r1
   16594:	bl	23fb0 <xMalloc@@Base>
   16598:	ldr	ip, [pc, #20]	; 165b4 <CheckItem_newByVal@@Base+0x30>
   1659c:	mov	r2, #0
   165a0:	str	r5, [r0, #4]
   165a4:	strb	r4, [r0, #12]
   165a8:	str	ip, [r0]
   165ac:	str	r2, [r0, #8]
   165b0:	pop	{r4, r5, r6, pc}
   165b4:	andeq	sp, r3, r0, lsr r0

000165b8 <CheckItem_set@@Base>:
   165b8:	ldr	r3, [r0, #8]
   165bc:	cmp	r3, #0
   165c0:	strbne	r1, [r3]
   165c4:	strbeq	r1, [r0, #12]
   165c8:	bx	lr

000165cc <CheckItem_get@@Base>:
   165cc:	ldr	r3, [r0, #8]
   165d0:	cmp	r3, #0
   165d4:	ldrbne	r0, [r3]
   165d8:	ldrbeq	r0, [r0, #12]
   165dc:	bx	lr
   165e0:	push	{r4, r5, r6, r7, lr}
   165e4:	sub	sp, sp, #60	; 0x3c
   165e8:	ldr	r4, [pc, #120]	; 16668 <CheckItem_get@@Base+0x9c>
   165ec:	mov	r7, r0
   165f0:	mov	r0, #0
   165f4:	ldr	r3, [r4]
   165f8:	mov	r6, r2
   165fc:	mov	r5, r1
   16600:	str	r3, [sp, #52]	; 0x34
   16604:	bl	15018 <time@plt>
   16608:	add	r1, sp, #8
   1660c:	str	r0, [sp, #4]
   16610:	add	r0, sp, #4
   16614:	bl	150f0 <localtime_r@plt>
   16618:	ldr	lr, [r7, #32]
   1661c:	mov	r1, r6
   16620:	mov	r3, r0
   16624:	ldr	r0, [r0, #8]
   16628:	ldr	ip, [r3, #4]
   1662c:	rsb	r2, r0, r0, lsl #4
   16630:	mov	r0, r5
   16634:	add	ip, ip, r2, lsl #2
   16638:	ldr	r2, [pc, #44]	; 1666c <CheckItem_get@@Base+0xa0>
   1663c:	vmov	s15, ip
   16640:	vcvt.f64.s32	d7, s15
   16644:	vstr	d7, [lr]
   16648:	bl	151f8 <strftime@plt>
   1664c:	ldr	r2, [sp, #52]	; 0x34
   16650:	ldr	r3, [r4]
   16654:	cmp	r2, r3
   16658:	bne	16664 <CheckItem_get@@Base+0x98>
   1665c:	add	sp, sp, #60	; 0x3c
   16660:	pop	{r4, r5, r6, r7, pc}
   16664:	bl	15084 <__stack_chk_fail@plt>
   16668:			; <UNDEFINED> instruction: 0x0003ccb8
   1666c:	andeq	r9, r2, r8
   16670:	push	{r4, r5, r6, r7, r8, r9, lr}
   16674:	sub	sp, sp, #12
   16678:	mov	r4, r1
   1667c:	mov	r7, r0
   16680:	bl	1b1cc <Panel_getSelectedIndex@@Base>
   16684:	cmp	r4, #32
   16688:	mov	r8, r0
   1668c:	beq	166d4 <CheckItem_get@@Base+0x108>
   16690:	ble	166c4 <CheckItem_get@@Base+0xf8>
   16694:	ldr	r3, [pc, #280]	; 167b4 <CheckItem_get@@Base+0x1e8>
   16698:	cmp	r4, r3
   1669c:	beq	166d4 <CheckItem_get@@Base+0x108>
   166a0:	add	r3, r3, #66	; 0x42
   166a4:	cmp	r4, r3
   166a8:	beq	166d4 <CheckItem_get@@Base+0x108>
   166ac:	sub	r3, r3, #123	; 0x7b
   166b0:	cmp	r4, r3
   166b4:	beq	166d4 <CheckItem_get@@Base+0x108>
   166b8:	mov	r0, #2
   166bc:	add	sp, sp, #12
   166c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   166c4:	cmp	r4, #10
   166c8:	beq	166d4 <CheckItem_get@@Base+0x108>
   166cc:	cmp	r4, #13
   166d0:	bne	166b8 <CheckItem_get@@Base+0xec>
   166d4:	ldr	r6, [pc, #220]	; 167b8 <CheckItem_get@@Base+0x1ec>
   166d8:	ldr	r5, [pc, #220]	; 167bc <CheckItem_get@@Base+0x1f0>
   166dc:	mov	r4, #0
   166e0:	b	166e8 <CheckItem_get@@Base+0x11c>
   166e4:	ldr	r5, [r6], #4
   166e8:	mov	r1, r4
   166ec:	mov	r0, r7
   166f0:	bl	1b114 <Panel_get@@Base>
   166f4:	mov	r1, #0
   166f8:	bl	165b8 <CheckItem_set@@Base>
   166fc:	cmp	r5, #0
   16700:	add	r4, r4, #1
   16704:	bne	166e4 <CheckItem_get@@Base+0x118>
   16708:	add	r5, r7, #8192	; 0x2000
   1670c:	mov	r1, r8
   16710:	mov	r0, r7
   16714:	bl	1b114 <Panel_get@@Base>
   16718:	mov	r1, #1
   1671c:	bl	165b8 <CheckItem_set@@Base>
   16720:	ldr	r3, [r5, #304]	; 0x130
   16724:	ldr	r2, [r5, #308]	; 0x134
   16728:	mov	r4, #1
   1672c:	str	r8, [r3, #36]	; 0x24
   16730:	mov	r0, r8
   16734:	strb	r4, [r3, #71]	; 0x47
   16738:	ldr	r6, [r2, #28]
   1673c:	bl	177e0 <CRT_setColors@@Base>
   16740:	ldr	r3, [pc, #120]	; 167c0 <CheckItem_get@@Base+0x1f4>
   16744:	ldr	r8, [pc, #120]	; 167c4 <CheckItem_get@@Base+0x1f8>
   16748:	ldr	r0, [r3]
   1674c:	bl	15348 <wclear@plt>
   16750:	ldr	r3, [r5, #308]	; 0x134
   16754:	mov	r0, r6
   16758:	ldr	r3, [r3, #20]
   1675c:	ldr	r3, [r3]
   16760:	ldr	r9, [r3]
   16764:	bl	190e4 <Header_draw@@Base>
   16768:	ldr	r3, [r8]
   1676c:	add	r0, r7, #60	; 0x3c
   16770:	ldr	r1, [r3, #20]
   16774:	bl	1dc34 <RichString_setAttr@@Base>
   16778:	ldr	r3, [r8]
   1677c:	add	r0, r9, #60	; 0x3c
   16780:	ldr	r1, [r3, #24]
   16784:	bl	1dc34 <RichString_setAttr@@Base>
   16788:	ldr	ip, [r5, #308]	; 0x134
   1678c:	ldr	r2, [r6, #20]
   16790:	mov	r0, ip
   16794:	ldr	r3, [ip, #8]
   16798:	ldr	r1, [ip]
   1679c:	ldr	ip, [ip, #12]
   167a0:	str	ip, [sp]
   167a4:	bl	1e198 <ScreenManager_resize@@Base>
   167a8:	mov	r0, r4
   167ac:	add	sp, sp, #12
   167b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   167b4:	andeq	r0, r0, r7, asr r1
   167b8:	andeq	r9, r2, ip, lsr #32
   167bc:	andeq	r9, r2, r0, ror r0
   167c0:	andeq	lr, r3, r8, lsl #15
   167c4:	muleq	r3, r8, r1
   167c8:	push	{r4, lr}
   167cc:	mov	r4, r0
   167d0:	bl	1afe8 <Panel_done@@Base>
   167d4:	mov	r0, r4
   167d8:	pop	{r4, lr}
   167dc:	b	14fa0 <free@plt>

000167e0 <ColorsPanel_new@@Base>:
   167e0:	push	{r4, r5, r6, r7, r8, lr}
   167e4:	mov	r7, r0
   167e8:	sub	sp, sp, #16
   167ec:	ldr	r0, [pc, #180]	; 168a8 <ColorsPanel_new@@Base+0xc8>
   167f0:	mov	r8, r1
   167f4:	bl	23fb0 <xMalloc@@Base>
   167f8:	ldr	r3, [pc, #172]	; 168ac <ColorsPanel_new@@Base+0xcc>
   167fc:	mov	r2, #0
   16800:	mov	r1, r2
   16804:	ldr	r6, [pc, #164]	; 168b0 <ColorsPanel_new@@Base+0xd0>
   16808:	ldr	r4, [pc, #164]	; 168b4 <ColorsPanel_new@@Base+0xd4>
   1680c:	mov	r5, r0
   16810:	str	r3, [r0]
   16814:	ldr	r0, [pc, #156]	; 168b8 <ColorsPanel_new@@Base+0xd8>
   16818:	bl	184a4 <FunctionBar_new@@Base>
   1681c:	ldr	r2, [pc, #152]	; 168bc <ColorsPanel_new@@Base+0xdc>
   16820:	mov	r3, #1
   16824:	mov	r1, r3
   16828:	strd	r2, [sp, #4]
   1682c:	str	r3, [sp]
   16830:	mov	r2, r3
   16834:	str	r0, [sp, #12]
   16838:	mov	r0, r5
   1683c:	bl	1aef0 <Panel_init@@Base>
   16840:	add	r3, r5, #8192	; 0x2000
   16844:	mov	r0, r5
   16848:	str	r8, [r3, #308]	; 0x134
   1684c:	str	r7, [r3, #304]	; 0x130
   16850:	ldr	r1, [pc, #104]	; 168c0 <ColorsPanel_new@@Base+0xe0>
   16854:	bl	1b048 <Panel_setHeader@@Base>
   16858:	ldr	r0, [pc, #100]	; 168c4 <ColorsPanel_new@@Base+0xe4>
   1685c:	b	16868 <ColorsPanel_new@@Base+0x88>
   16860:	mov	r0, r4
   16864:	ldr	r4, [r6], #4
   16868:	bl	24034 <xStrdup@@Base>
   1686c:	mov	r1, #0
   16870:	bl	16584 <CheckItem_newByVal@@Base>
   16874:	mov	r1, r0
   16878:	mov	r0, r5
   1687c:	bl	1b0d4 <Panel_add@@Base>
   16880:	cmp	r4, #0
   16884:	bne	16860 <ColorsPanel_new@@Base+0x80>
   16888:	ldr	r1, [r7, #36]	; 0x24
   1688c:	mov	r0, r5
   16890:	bl	1b114 <Panel_get@@Base>
   16894:	mov	r1, #1
   16898:	bl	165b8 <CheckItem_set@@Base>
   1689c:	mov	r0, r5
   168a0:	add	sp, sp, #16
   168a4:	pop	{r4, r5, r6, r7, r8, pc}
   168a8:	andeq	r2, r0, r8, lsr r1
   168ac:	andeq	sp, r3, ip, lsl #1
   168b0:	andeq	r9, r2, ip, lsr #32
   168b4:	andeq	r9, r2, r0, ror r0
   168b8:	andeq	r9, r2, r4, asr #32
   168bc:	andeq	sp, r3, r0, lsr r0
   168c0:	andeq	r8, r2, r8, ror #31
   168c4:	andeq	r9, r2, r0, lsl #1
   168c8:	push	{r4, lr}
   168cc:	mov	r4, r0
   168d0:	bl	1afe8 <Panel_done@@Base>
   168d4:	mov	r0, r4
   168d8:	pop	{r4, lr}
   168dc:	b	14fa0 <free@plt>

000168e0 <ColumnsPanel_new@@Base>:
   168e0:	push	{r4, r5, r6, lr}
   168e4:	mov	r6, r0
   168e8:	sub	sp, sp, #16
   168ec:	ldr	r0, [pc, #172]	; 169a0 <ColumnsPanel_new@@Base+0xc0>
   168f0:	bl	23fb0 <xMalloc@@Base>
   168f4:	ldr	r3, [pc, #168]	; 169a4 <ColumnsPanel_new@@Base+0xc4>
   168f8:	mov	r2, #0
   168fc:	mov	r1, r2
   16900:	mov	r5, r0
   16904:	str	r3, [r0]
   16908:	ldr	r0, [pc, #152]	; 169a8 <ColumnsPanel_new@@Base+0xc8>
   1690c:	bl	184a4 <FunctionBar_new@@Base>
   16910:	ldr	r2, [pc, #148]	; 169ac <ColumnsPanel_new@@Base+0xcc>
   16914:	mov	r3, #1
   16918:	add	r4, r5, #8192	; 0x2000
   1691c:	strd	r2, [sp, #4]
   16920:	mov	r1, r3
   16924:	mov	r2, r3
   16928:	str	r3, [sp]
   1692c:	str	r0, [sp, #12]
   16930:	mov	r0, r5
   16934:	bl	1aef0 <Panel_init@@Base>
   16938:	mov	r3, #0
   1693c:	strb	r3, [r4, #308]	; 0x134
   16940:	str	r6, [r4, #304]	; 0x130
   16944:	mov	r0, r5
   16948:	ldr	r1, [pc, #96]	; 169b0 <ColumnsPanel_new@@Base+0xd0>
   1694c:	bl	1b048 <Panel_setHeader@@Base>
   16950:	ldr	r3, [r4, #304]	; 0x130
   16954:	ldr	r4, [r3, #28]
   16958:	ldr	r3, [r4]
   1695c:	cmp	r3, #0
   16960:	beq	16994 <ColumnsPanel_new@@Base+0xb4>
   16964:	ldr	r6, [pc, #72]	; 169b4 <ColumnsPanel_new@@Base+0xd4>
   16968:	mov	r1, r3
   1696c:	ldr	r3, [r6, r3, lsl #4]
   16970:	subs	r0, r3, #0
   16974:	beq	16988 <ColumnsPanel_new@@Base+0xa8>
   16978:	bl	193f4 <ListItem_new@@Base>
   1697c:	mov	r1, r0
   16980:	mov	r0, r5
   16984:	bl	1b0d4 <Panel_add@@Base>
   16988:	ldr	r3, [r4, #4]!
   1698c:	cmp	r3, #0
   16990:	bne	16968 <ColumnsPanel_new@@Base+0x88>
   16994:	mov	r0, r5
   16998:	add	sp, sp, #16
   1699c:	pop	{r4, r5, r6, pc}
   169a0:	andeq	r2, r0, r8, lsr r1
   169a4:	andeq	sp, r3, r0, lsr #1
   169a8:	andeq	r9, r2, r4, asr #1
   169ac:	andeq	sp, r3, r0, asr sl
   169b0:	strdeq	r9, [r2], -r0
   169b4:	strdeq	sp, [r3], -r0

000169b8 <ColumnsPanel_fieldNameToIndex@@Base>:
   169b8:	push	{r4, r5, r6, r7, r8, lr}
   169bc:	ldr	r6, [pc, #80]	; 16a14 <ColumnsPanel_fieldNameToIndex@@Base+0x5c>
   169c0:	ldr	r3, [r6]
   169c4:	cmp	r3, #0
   169c8:	ble	16a08 <ColumnsPanel_fieldNameToIndex@@Base+0x50>
   169cc:	mov	r5, r0
   169d0:	ldr	r7, [pc, #64]	; 16a18 <ColumnsPanel_fieldNameToIndex@@Base+0x60>
   169d4:	mov	r4, #1
   169d8:	b	169ec <ColumnsPanel_fieldNameToIndex@@Base+0x34>
   169dc:	ldr	r3, [r6]
   169e0:	add	r4, r4, #1
   169e4:	cmp	r3, r4
   169e8:	blt	16a08 <ColumnsPanel_fieldNameToIndex@@Base+0x50>
   169ec:	ldr	r1, [r7, r4, lsl #4]
   169f0:	mov	r0, r5
   169f4:	bl	1fc78 <String_eq@@Base>
   169f8:	cmp	r0, #0
   169fc:	beq	169dc <ColumnsPanel_fieldNameToIndex@@Base+0x24>
   16a00:	mov	r0, r4
   16a04:	pop	{r4, r5, r6, r7, r8, pc}
   16a08:	mvn	r4, #0
   16a0c:	mov	r0, r4
   16a10:	pop	{r4, r5, r6, r7, r8, pc}
   16a14:	andeq	sp, r3, ip, asr pc
   16a18:	strdeq	sp, [r3], -r0

00016a1c <ColumnsPanel_update@@Base>:
   16a1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16a20:	add	r6, r0, #8192	; 0x2000
   16a24:	mov	r7, r0
   16a28:	bl	1b1d4 <Panel_size@@Base>
   16a2c:	ldr	r8, [r6, #304]	; 0x130
   16a30:	mov	r3, #1
   16a34:	mov	r4, #0
   16a38:	strb	r3, [r8, #71]	; 0x47
   16a3c:	add	r9, r0, #1
   16a40:	mov	r5, r0
   16a44:	lsl	r9, r9, #2
   16a48:	ldr	r0, [r8, #28]
   16a4c:	mov	r1, r9
   16a50:	bl	2400c <xRealloc@@Base>
   16a54:	ldr	r3, [r6, #304]	; 0x130
   16a58:	cmp	r5, #0
   16a5c:	str	r0, [r8, #28]
   16a60:	str	r4, [r3, #32]
   16a64:	ble	16ab8 <ColumnsPanel_update@@Base+0x9c>
   16a68:	ldr	r8, [pc, #80]	; 16ac0 <ColumnsPanel_update@@Base+0xa4>
   16a6c:	mov	r1, r4
   16a70:	mov	r0, r7
   16a74:	bl	1b114 <Panel_get@@Base>
   16a78:	ldr	r2, [r6, #304]	; 0x130
   16a7c:	ldr	ip, [r2, #28]
   16a80:	ldr	r1, [r2, #32]
   16a84:	ldr	r3, [r0, #8]
   16a88:	str	r3, [ip, r4, lsl #2]
   16a8c:	add	r3, r8, r3, lsl #4
   16a90:	add	r4, r4, #1
   16a94:	ldr	r3, [r3, #12]
   16a98:	cmp	r5, r4
   16a9c:	orr	r1, r1, r3
   16aa0:	str	r1, [r2, #32]
   16aa4:	bne	16a6c <ColumnsPanel_update@@Base+0x50>
   16aa8:	add	r9, ip, r9
   16aac:	mov	r3, #0
   16ab0:	str	r3, [r9, #-4]
   16ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16ab8:	ldr	ip, [r3, #28]
   16abc:	b	16aa8 <ColumnsPanel_update@@Base+0x8c>
   16ac0:	strdeq	sp, [r3], -r0
   16ac4:	push	{r4, r5, r6, lr}
   16ac8:	mov	r4, r1
   16acc:	mov	r5, r0
   16ad0:	bl	1b1cc <Panel_getSelectedIndex@@Base>
   16ad4:	mov	r6, r0
   16ad8:	mov	r0, r5
   16adc:	bl	1b1d4 <Panel_size@@Base>
   16ae0:	ldr	r3, [pc, #432]	; 16c98 <ColumnsPanel_update@@Base+0x27c>
   16ae4:	cmp	r4, r3
   16ae8:	beq	16b94 <ColumnsPanel_update@@Base+0x178>
   16aec:	bgt	16b3c <ColumnsPanel_update@@Base+0x120>
   16af0:	cmp	r4, #45	; 0x2d
   16af4:	beq	16ba4 <ColumnsPanel_update@@Base+0x188>
   16af8:	ble	16c14 <ColumnsPanel_update@@Base+0x1f8>
   16afc:	cmp	r4, #93	; 0x5d
   16b00:	beq	16b20 <ColumnsPanel_update@@Base+0x104>
   16b04:	ldr	r3, [pc, #400]	; 16c9c <ColumnsPanel_update@@Base+0x280>
   16b08:	cmp	r4, r3
   16b0c:	bne	16bbc <ColumnsPanel_update@@Base+0x1a0>
   16b10:	add	r3, r5, #8192	; 0x2000
   16b14:	ldrb	r3, [r3, #308]	; 0x134
   16b18:	cmp	r3, #0
   16b1c:	beq	16b8c <ColumnsPanel_update@@Base+0x170>
   16b20:	sub	r0, r0, #2
   16b24:	cmp	r0, r6
   16b28:	bgt	16bc8 <ColumnsPanel_update@@Base+0x1ac>
   16b2c:	mov	r0, r5
   16b30:	bl	16a1c <ColumnsPanel_update@@Base>
   16b34:	mov	r0, #1
   16b38:	pop	{r4, r5, r6, pc}
   16b3c:	ldr	r3, [pc, #348]	; 16ca0 <ColumnsPanel_update@@Base+0x284>
   16b40:	cmp	r4, r3
   16b44:	beq	16c2c <ColumnsPanel_update@@Base+0x210>
   16b48:	bgt	16bd4 <ColumnsPanel_update@@Base+0x1b8>
   16b4c:	cmp	r4, #272	; 0x110
   16b50:	beq	16b20 <ColumnsPanel_update@@Base+0x104>
   16b54:	sub	r3, r3, #13
   16b58:	cmp	r4, r3
   16b5c:	beq	16bf8 <ColumnsPanel_update@@Base+0x1dc>
   16b60:	sub	r3, r3, #2
   16b64:	cmp	r4, r3
   16b68:	beq	16ba4 <ColumnsPanel_update@@Base+0x188>
   16b6c:	cmp	r4, #254	; 0xfe
   16b70:	bgt	16b8c <ColumnsPanel_update@@Base+0x170>
   16b74:	bl	15258 <__ctype_b_loc@plt>
   16b78:	lsl	r3, r4, #1
   16b7c:	ldr	r2, [r0]
   16b80:	ldrh	r3, [r2, r3]
   16b84:	tst	r3, #1024	; 0x400
   16b88:	bne	16c78 <ColumnsPanel_update@@Base+0x25c>
   16b8c:	mov	r0, #2
   16b90:	pop	{r4, r5, r6, pc}
   16b94:	add	r3, r5, #8192	; 0x2000
   16b98:	ldrb	r3, [r3, #308]	; 0x134
   16b9c:	cmp	r3, #0
   16ba0:	beq	16b8c <ColumnsPanel_update@@Base+0x170>
   16ba4:	sub	r0, r0, #1
   16ba8:	cmp	r0, r6
   16bac:	ble	16b2c <ColumnsPanel_update@@Base+0x110>
   16bb0:	mov	r0, r5
   16bb4:	bl	1b180 <Panel_moveSelectedUp@@Base>
   16bb8:	b	16b2c <ColumnsPanel_update@@Base+0x110>
   16bbc:	cmp	r4, #91	; 0x5b
   16bc0:	bne	16b6c <ColumnsPanel_update@@Base+0x150>
   16bc4:	b	16ba4 <ColumnsPanel_update@@Base+0x188>
   16bc8:	mov	r0, r5
   16bcc:	bl	1b1a4 <Panel_moveSelectedDown@@Base>
   16bd0:	b	16b2c <ColumnsPanel_update@@Base+0x110>
   16bd4:	ldr	r3, [pc, #200]	; 16ca4 <ColumnsPanel_update@@Base+0x288>
   16bd8:	cmp	r4, r3
   16bdc:	beq	16c2c <ColumnsPanel_update@@Base+0x210>
   16be0:	add	r3, r3, #66	; 0x42
   16be4:	cmp	r4, r3
   16be8:	beq	16c2c <ColumnsPanel_update@@Base+0x210>
   16bec:	sub	r3, r3, #79	; 0x4f
   16bf0:	cmp	r4, r3
   16bf4:	bne	16b6c <ColumnsPanel_update@@Base+0x150>
   16bf8:	sub	r0, r0, #1
   16bfc:	cmp	r0, r6
   16c00:	ble	16b2c <ColumnsPanel_update@@Base+0x110>
   16c04:	mov	r1, r6
   16c08:	mov	r0, r5
   16c0c:	bl	1b124 <Panel_remove@@Base>
   16c10:	b	16b2c <ColumnsPanel_update@@Base+0x110>
   16c14:	cmp	r4, #13
   16c18:	beq	16c2c <ColumnsPanel_update@@Base+0x210>
   16c1c:	cmp	r4, #43	; 0x2b
   16c20:	beq	16b20 <ColumnsPanel_update@@Base+0x104>
   16c24:	cmp	r4, #10
   16c28:	bne	16b6c <ColumnsPanel_update@@Base+0x150>
   16c2c:	sub	r0, r0, #1
   16c30:	cmp	r0, r6
   16c34:	ble	16b8c <ColumnsPanel_update@@Base+0x170>
   16c38:	add	r4, r5, #8192	; 0x2000
   16c3c:	ldr	r2, [pc, #100]	; 16ca8 <ColumnsPanel_update@@Base+0x28c>
   16c40:	ldrb	r3, [r4, #308]	; 0x134
   16c44:	mov	r0, r5
   16c48:	ldr	r2, [r2]
   16c4c:	eor	r3, r3, #1
   16c50:	cmp	r3, #0
   16c54:	strb	r3, [r4, #308]	; 0x134
   16c58:	ldrne	r1, [r2, #32]
   16c5c:	ldreq	r1, [r2, #28]
   16c60:	bl	1b02c <Panel_setSelectionColor@@Base>
   16c64:	mov	r0, r5
   16c68:	bl	1b160 <Panel_getSelected@@Base>
   16c6c:	ldrb	r3, [r4, #308]	; 0x134
   16c70:	strb	r3, [r0, #12]
   16c74:	b	16b2c <ColumnsPanel_update@@Base+0x110>
   16c78:	mov	r1, r4
   16c7c:	mov	r0, r5
   16c80:	bl	1ad54 <Panel_selectByTyping@@Base>
   16c84:	cmp	r0, #4
   16c88:	beq	16b8c <ColumnsPanel_update@@Base+0x170>
   16c8c:	cmp	r0, #1
   16c90:	beq	16b2c <ColumnsPanel_update@@Base+0x110>
   16c94:	pop	{r4, r5, r6, pc}
   16c98:	andeq	r0, r0, r3, lsl #2
   16c9c:	andeq	r0, r0, r2, lsl #2
   16ca0:	andeq	r0, r0, lr, lsl r1
   16ca4:	andeq	r0, r0, r7, asr r1
   16ca8:	muleq	r3, r8, r1
   16cac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16cb0:	mov	r7, r1
   16cb4:	ldr	r1, [r0, #28]
   16cb8:	ldr	ip, [r0]
   16cbc:	mov	r5, r2
   16cc0:	ldr	r2, [r1]
   16cc4:	ldr	ip, [ip, #52]	; 0x34
   16cc8:	sub	sp, sp, #20
   16ccc:	ldrb	r2, [r2, #70]	; 0x46
   16cd0:	str	r3, [sp, #8]
   16cd4:	ldrb	r3, [ip]
   16cd8:	cmp	r2, #0
   16cdc:	movne	r2, #2
   16ce0:	moveq	r2, #0
   16ce4:	str	r2, [sp]
   16ce8:	ldr	r2, [r0, #20]
   16cec:	cmp	r3, #76	; 0x4c
   16cf0:	ldr	sl, [r1, #128]	; 0x80
   16cf4:	str	r2, [sp, #4]
   16cf8:	beq	16df4 <ColumnsPanel_update@@Base+0x3d8>
   16cfc:	cmp	r3, #82	; 0x52
   16d00:	addeq	sl, sl, sl, lsr #31
   16d04:	asreq	sl, sl, #1
   16d08:	add	r3, sl, #1
   16d0c:	add	r3, r3, r3, lsr #31
   16d10:	asr	r3, r3, #1
   16d14:	cmp	r3, #0
   16d18:	str	r3, [sp, #12]
   16d1c:	ble	16d74 <ColumnsPanel_update@@Base+0x358>
   16d20:	ldr	r2, [sp, #8]
   16d24:	ldr	r1, [sp]
   16d28:	mov	r6, r5
   16d2c:	sub	r8, r2, r1
   16d30:	ldr	r2, [sp, #4]
   16d34:	add	r8, r8, r8, lsr #31
   16d38:	sub	r4, r2, #4
   16d3c:	add	fp, r4, r3, lsl #2
   16d40:	asr	r8, r8, #1
   16d44:	ldr	r2, [r4, #4]!
   16d48:	mov	r3, r8
   16d4c:	mov	r0, r2
   16d50:	ldr	r9, [r2, #4]
   16d54:	mov	r1, r7
   16d58:	mov	r2, r6
   16d5c:	blx	r9
   16d60:	ldr	r3, [r4]
   16d64:	cmp	r4, fp
   16d68:	ldr	r3, [r3, #24]
   16d6c:	add	r6, r6, r3
   16d70:	bne	16d44 <ColumnsPanel_update@@Base+0x328>
   16d74:	ldr	r2, [sp, #12]
   16d78:	cmp	r2, sl
   16d7c:	bge	16dec <ColumnsPanel_update@@Base+0x3d0>
   16d80:	ldr	r1, [sp, #8]
   16d84:	ldr	r0, [sp]
   16d88:	sub	r3, r1, #1
   16d8c:	sub	r6, r1, r0
   16d90:	add	r3, r3, r3, lsr #31
   16d94:	sub	r4, r2, #-1073741823	; 0xc0000001
   16d98:	ldr	r2, [sp, #4]
   16d9c:	add	r7, r7, r3, asr #1
   16da0:	add	r6, r6, r6, lsr #31
   16da4:	add	r7, r7, #1
   16da8:	sub	r3, r2, #4
   16dac:	add	r4, r2, r4, lsl #2
   16db0:	add	sl, r3, sl, lsl #2
   16db4:	add	r7, r7, r0, lsr #1
   16db8:	asr	r6, r6, #1
   16dbc:	ldr	r2, [r4, #4]!
   16dc0:	mov	r3, r6
   16dc4:	mov	r0, r2
   16dc8:	ldr	r8, [r2, #4]
   16dcc:	mov	r1, r7
   16dd0:	mov	r2, r5
   16dd4:	blx	r8
   16dd8:	ldr	r3, [r4]
   16ddc:	cmp	sl, r4
   16de0:	ldr	r3, [r3, #24]
   16de4:	add	r5, r5, r3
   16de8:	bne	16dbc <ColumnsPanel_update@@Base+0x3a0>
   16dec:	add	sp, sp, #20
   16df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16df4:	add	sl, sl, #1
   16df8:	add	sl, sl, sl, lsr #31
   16dfc:	asr	sl, sl, #1
   16e00:	b	16d08 <ColumnsPanel_update@@Base+0x2ec>
   16e04:	ldr	ip, [r0]
   16e08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16e0c:	mov	r5, r2
   16e10:	ldr	r2, [ip, #52]	; 0x34
   16e14:	mov	r8, r3
   16e18:	mov	r7, r1
   16e1c:	ldrb	r3, [r2]
   16e20:	ldr	r1, [r0, #28]
   16e24:	ldr	r4, [r0, #20]
   16e28:	cmp	r3, #76	; 0x4c
   16e2c:	ldr	r6, [r1, #128]	; 0x80
   16e30:	beq	16e84 <ColumnsPanel_update@@Base+0x468>
   16e34:	cmp	r3, #82	; 0x52
   16e38:	addeq	r6, r6, r6, lsr #31
   16e3c:	asreq	r6, r6, #1
   16e40:	cmp	r6, #0
   16e44:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   16e48:	sub	r4, r4, #4
   16e4c:	add	r6, r4, r6, lsl #2
   16e50:	ldr	r2, [r4, #4]!
   16e54:	mov	r3, r8
   16e58:	mov	r0, r2
   16e5c:	ldr	r9, [r2, #4]
   16e60:	mov	r1, r7
   16e64:	mov	r2, r5
   16e68:	blx	r9
   16e6c:	ldr	r3, [r4]
   16e70:	cmp	r4, r6
   16e74:	ldr	r3, [r3, #24]
   16e78:	add	r5, r5, r3
   16e7c:	bne	16e50 <ColumnsPanel_update@@Base+0x434>
   16e80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16e84:	add	r6, r6, #1
   16e88:	add	r6, r6, r6, lsr #31
   16e8c:	asr	r6, r6, #1
   16e90:	cmp	r6, #0
   16e94:	bgt	16e48 <ColumnsPanel_update@@Base+0x42c>
   16e98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16e9c:	ldr	r3, [r0]
   16ea0:	push	{r4, r5, r6, lr}
   16ea4:	ldr	r3, [r3, #52]	; 0x34
   16ea8:	ldr	r2, [r0, #28]
   16eac:	ldr	r4, [r0, #20]
   16eb0:	ldrb	r3, [r3]
   16eb4:	ldr	r5, [r2, #128]	; 0x80
   16eb8:	cmp	r3, #76	; 0x4c
   16ebc:	beq	16ef0 <ColumnsPanel_update@@Base+0x4d4>
   16ec0:	cmp	r3, #82	; 0x52
   16ec4:	addeq	r5, r5, r5, lsr #31
   16ec8:	asreq	r5, r5, #1
   16ecc:	cmp	r5, #0
   16ed0:	pople	{r4, r5, r6, pc}
   16ed4:	sub	r4, r4, #4
   16ed8:	add	r5, r4, r5, lsl #2
   16edc:	ldr	r0, [r4, #4]!
   16ee0:	bl	19924 <Meter_delete@@Base>
   16ee4:	cmp	r4, r5
   16ee8:	bne	16edc <ColumnsPanel_update@@Base+0x4c0>
   16eec:	pop	{r4, r5, r6, pc}
   16ef0:	add	r5, r5, #1
   16ef4:	add	r5, r5, r5, lsr #31
   16ef8:	asr	r5, r5, #1
   16efc:	cmp	r5, #0
   16f00:	bgt	16ed4 <ColumnsPanel_update@@Base+0x4b8>
   16f04:	pop	{r4, r5, r6, pc}
   16f08:	ldr	r3, [r0, #28]
   16f0c:	push	{r4, r5, r6, r7, lr}
   16f10:	mov	r7, r1
   16f14:	ldr	r6, [r0, #16]
   16f18:	ldr	r3, [r3, #128]	; 0x80
   16f1c:	sub	sp, sp, #20
   16f20:	cmp	r3, r6
   16f24:	mov	r5, r2
   16f28:	bge	16f4c <ColumnsPanel_update@@Base+0x530>
   16f2c:	mov	r0, r1
   16f30:	ldr	r2, [pc, #116]	; 16fac <ColumnsPanel_update@@Base+0x590>
   16f34:	mov	r1, r5
   16f38:	bl	1530c <snprintf@plt>
   16f3c:	cmp	r5, #6
   16f40:	ble	16f94 <ColumnsPanel_update@@Base+0x578>
   16f44:	add	sp, sp, #20
   16f48:	pop	{r4, r5, r6, r7, pc}
   16f4c:	mov	r2, #64	; 0x40
   16f50:	mov	r4, r0
   16f54:	mov	r1, #0
   16f58:	ldr	r0, [r0, #32]
   16f5c:	bl	15330 <memset@plt>
   16f60:	mov	r1, r6
   16f64:	mov	r0, r4
   16f68:	bl	24298 <Platform_setCPUValues@@Base>
   16f6c:	ldr	r3, [pc, #60]	; 16fb0 <ColumnsPanel_update@@Base+0x594>
   16f70:	mov	r0, r7
   16f74:	str	r3, [sp]
   16f78:	mov	r2, #1
   16f7c:	mvn	r3, #0
   16f80:	mov	r1, r5
   16f84:	vstr	d0, [sp, #8]
   16f88:	bl	15510 <__snprintf_chk@plt>
   16f8c:	cmp	r5, r0
   16f90:	bgt	16f44 <ColumnsPanel_update@@Base+0x528>
   16f94:	mov	r0, #1
   16f98:	bl	15030 <curs_set@plt>
   16f9c:	bl	14f28 <endwin@plt>
   16fa0:	mov	r1, #0
   16fa4:	mov	r0, #1
   16fa8:	bl	15114 <err@plt>
   16fac:	andeq	r9, r2, r8, lsl r1
   16fb0:	andeq	r9, r2, r0, lsr #2
   16fb4:	ldr	r2, [r0]
   16fb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16fbc:	mov	r7, r0
   16fc0:	ldr	r3, [pc, #148]	; 1705c <ColumnsPanel_update@@Base+0x640>
   16fc4:	str	r1, [r0, #12]
   16fc8:	ldr	r0, [r2, #52]	; 0x34
   16fcc:	mov	r9, r1
   16fd0:	ldr	r1, [r3, r1, lsl #2]
   16fd4:	ldrb	r3, [r0]
   16fd8:	ldr	r2, [r7, #28]
   16fdc:	ldr	r8, [r1, #8]
   16fe0:	cmp	r3, #76	; 0x4c
   16fe4:	ldr	r5, [r2, #128]	; 0x80
   16fe8:	ldr	r4, [r7, #20]
   16fec:	beq	1704c <ColumnsPanel_update@@Base+0x630>
   16ff0:	cmp	r3, #82	; 0x52
   16ff4:	addeq	r5, r5, r5, lsr #31
   16ff8:	asreq	r5, r5, #1
   16ffc:	cmp	r5, #0
   17000:	ble	17028 <ColumnsPanel_update@@Base+0x60c>
   17004:	sub	r4, r4, #4
   17008:	add	r6, r4, r5, lsl #2
   1700c:	ldr	r0, [r4, #4]!
   17010:	mov	r1, r9
   17014:	bl	1a61c <Meter_setMode@@Base>
   17018:	cmp	r4, r6
   1701c:	bne	1700c <ColumnsPanel_update@@Base+0x5f0>
   17020:	ldr	r3, [r7]
   17024:	ldr	r0, [r3, #52]	; 0x34
   17028:	mov	r1, #50	; 0x32
   1702c:	bl	152c4 <strchr@plt>
   17030:	cmp	r0, #0
   17034:	addne	r5, r5, #1
   17038:	addne	r5, r5, r5, lsr #31
   1703c:	asrne	r5, r5, #1
   17040:	mul	r5, r5, r8
   17044:	str	r5, [r7, #24]
   17048:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1704c:	add	r5, r5, #1
   17050:	add	r5, r5, r5, lsr #31
   17054:	asr	r5, r5, #1
   17058:	b	16ffc <ColumnsPanel_update@@Base+0x5e0>
   1705c:	andeq	sp, r3, r8, asr fp
   17060:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17064:	mov	r7, r0
   17068:	ldr	r3, [r0, #28]
   1706c:	ldr	r4, [r0, #20]
   17070:	cmp	r4, #0
   17074:	ldr	r6, [r3, #128]	; 0x80
   17078:	beq	17174 <ColumnsPanel_update@@Base+0x758>
   1707c:	ldr	r3, [r7]
   17080:	ldr	r0, [r3, #52]	; 0x34
   17084:	ldrb	r3, [r0]
   17088:	cmp	r3, #76	; 0x4c
   1708c:	beq	17160 <ColumnsPanel_update@@Base+0x744>
   17090:	cmp	r3, #82	; 0x52
   17094:	beq	170f4 <ColumnsPanel_update@@Base+0x6d8>
   17098:	mov	r5, #0
   1709c:	cmp	r6, #0
   170a0:	ble	17110 <ColumnsPanel_update@@Base+0x6f4>
   170a4:	sub	r4, r4, #4
   170a8:	ldr	r9, [pc, #228]	; 17194 <ColumnsPanel_update@@Base+0x778>
   170ac:	add	r5, r5, #1
   170b0:	add	r8, r4, r6, lsl #2
   170b4:	b	170d0 <ColumnsPanel_update@@Base+0x6b4>
   170b8:	ldr	r3, [r0]
   170bc:	add	r5, r5, #1
   170c0:	ldr	r3, [r3, #16]
   170c4:	blx	r3
   170c8:	cmp	r4, r8
   170cc:	beq	17154 <ColumnsPanel_update@@Base+0x738>
   170d0:	ldr	r0, [r4, #4]!
   170d4:	cmp	r0, #0
   170d8:	bne	170b8 <ColumnsPanel_update@@Base+0x69c>
   170dc:	mov	r2, r9
   170e0:	mov	r1, r5
   170e4:	ldr	r0, [r7, #28]
   170e8:	bl	1a6b4 <Meter_new@@Base>
   170ec:	str	r0, [r4]
   170f0:	b	170b8 <ColumnsPanel_update@@Base+0x69c>
   170f4:	add	r5, r6, #1
   170f8:	add	r6, r6, r6, lsr #31
   170fc:	add	r5, r5, r5, lsr #31
   17100:	asr	r6, r6, #1
   17104:	cmp	r6, #0
   17108:	asr	r5, r5, #1
   1710c:	bgt	170a4 <ColumnsPanel_update@@Base+0x688>
   17110:	ldr	r3, [r7, #12]
   17114:	mov	r1, #50	; 0x32
   17118:	cmp	r3, #0
   1711c:	moveq	r2, #1
   17120:	moveq	r3, r2
   17124:	streq	r2, [r7, #12]
   17128:	ldr	r2, [pc, #104]	; 17198 <ColumnsPanel_update@@Base+0x77c>
   1712c:	ldr	r3, [r2, r3, lsl #2]
   17130:	ldr	r4, [r3, #8]
   17134:	bl	152c4 <strchr@plt>
   17138:	cmp	r0, #0
   1713c:	addne	r6, r6, #1
   17140:	addne	r6, r6, r6, lsr #31
   17144:	asrne	r6, r6, #1
   17148:	mul	r6, r6, r4
   1714c:	str	r6, [r7, #24]
   17150:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17154:	ldr	r3, [r7]
   17158:	ldr	r0, [r3, #52]	; 0x34
   1715c:	b	17110 <ColumnsPanel_update@@Base+0x6f4>
   17160:	add	r6, r6, #1
   17164:	mov	r5, #0
   17168:	add	r6, r6, r6, lsr #31
   1716c:	asr	r6, r6, #1
   17170:	b	1709c <ColumnsPanel_update@@Base+0x680>
   17174:	mov	r0, r6
   17178:	mov	r1, #4
   1717c:	bl	23fd8 <xCalloc@@Base>
   17180:	ldr	r3, [r7, #28]
   17184:	ldr	r6, [r3, #128]	; 0x80
   17188:	mov	r4, r0
   1718c:	str	r0, [r7, #20]
   17190:	b	1707c <ColumnsPanel_update@@Base+0x660>
   17194:	strheq	sp, [r3], -r8
   17198:	andeq	sp, r3, r8, asr fp
   1719c:	ldr	r3, [r0, #28]
   171a0:	push	{r4, r5, lr}
   171a4:	mov	r4, r0
   171a8:	ldr	r5, [pc, #164]	; 17254 <ColumnsPanel_update@@Base+0x838>
   171ac:	ldr	r1, [r3, #128]	; 0x80
   171b0:	sub	sp, sp, #28
   171b4:	ldr	r2, [r0, #16]
   171b8:	ldr	r0, [r5]
   171bc:	cmp	r1, #1
   171c0:	str	r0, [sp, #20]
   171c4:	ble	1720c <ColumnsPanel_update@@Base+0x7f0>
   171c8:	ldr	r3, [r3]
   171cc:	ldr	r1, [pc, #132]	; 17258 <ColumnsPanel_update@@Base+0x83c>
   171d0:	add	r0, sp, #8
   171d4:	ldrb	r3, [r3, #56]	; 0x38
   171d8:	cmp	r3, #0
   171dc:	subne	r2, r2, #1
   171e0:	mov	r3, #10
   171e4:	stm	sp, {r1, r2}
   171e8:	mov	r1, r3
   171ec:	mov	r2, #1
   171f0:	bl	15510 <__snprintf_chk@plt>
   171f4:	cmp	r0, #9
   171f8:	bgt	1723c <ColumnsPanel_update@@Base+0x820>
   171fc:	add	r1, sp, #8
   17200:	mov	r0, r4
   17204:	bl	1a5f8 <Meter_setCaption@@Base>
   17208:	ldr	r2, [r4, #16]
   1720c:	cmp	r2, #0
   17210:	bne	17220 <ColumnsPanel_update@@Base+0x804>
   17214:	mov	r0, r4
   17218:	ldr	r1, [pc, #60]	; 1725c <ColumnsPanel_update@@Base+0x840>
   1721c:	bl	1a5f8 <Meter_setCaption@@Base>
   17220:	ldr	r2, [sp, #20]
   17224:	ldr	r3, [r5]
   17228:	cmp	r2, r3
   1722c:	bne	17238 <ColumnsPanel_update@@Base+0x81c>
   17230:	add	sp, sp, #28
   17234:	pop	{r4, r5, pc}
   17238:	bl	15084 <__stack_chk_fail@plt>
   1723c:	mov	r0, #1
   17240:	bl	15030 <curs_set@plt>
   17244:	bl	14f28 <endwin@plt>
   17248:	mov	r1, #0
   1724c:	mov	r0, #1
   17250:	bl	15114 <err@plt>
   17254:			; <UNDEFINED> instruction: 0x0003ccb8
   17258:	andeq	r9, r2, r8, lsr #2
   1725c:	andeq	r9, r2, r0, lsr r1
   17260:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17264:	mov	r5, r0
   17268:	ldr	r8, [pc, #1084]	; 176ac <ColumnsPanel_update@@Base+0xc90>
   1726c:	sub	sp, sp, #72	; 0x48
   17270:	mov	r0, r1
   17274:	ldr	r3, [r8]
   17278:	mov	r4, r1
   1727c:	str	r3, [sp, #68]	; 0x44
   17280:	bl	1dbf0 <RichString_prune@@Base>
   17284:	ldr	r3, [r5, #28]
   17288:	ldr	r2, [r5, #16]
   1728c:	ldr	r3, [r3, #128]	; 0x80
   17290:	cmp	r2, r3
   17294:	bgt	17620 <ColumnsPanel_update@@Base+0xc04>
   17298:	ldr	r3, [r5, #32]
   1729c:	ldr	r7, [pc, #1036]	; 176b0 <ColumnsPanel_update@@Base+0xc94>
   172a0:	add	r0, sp, #16
   172a4:	ldrd	sl, [r3, #8]
   172a8:	mov	r3, #50	; 0x32
   172ac:	str	r7, [sp]
   172b0:	strd	sl, [sp, #8]
   172b4:	mov	r1, r3
   172b8:	mov	r2, #1
   172bc:	bl	15510 <__snprintf_chk@plt>
   172c0:	cmp	r0, #49	; 0x31
   172c4:	bgt	17690 <ColumnsPanel_update@@Base+0xc74>
   172c8:	ldr	r6, [pc, #996]	; 176b4 <ColumnsPanel_update@@Base+0xc98>
   172cc:	ldr	r2, [pc, #996]	; 176b8 <ColumnsPanel_update@@Base+0xc9c>
   172d0:	mov	r0, r4
   172d4:	ldr	r3, [r6]
   172d8:	ldr	r1, [r3, #44]	; 0x2c
   172dc:	bl	1dc64 <RichString_append@@Base>
   172e0:	ldr	r3, [r6]
   172e4:	add	r2, sp, #16
   172e8:	mov	r0, r4
   172ec:	ldr	r1, [r3, #200]	; 0xc8
   172f0:	bl	1dc64 <RichString_append@@Base>
   172f4:	ldr	r3, [r5, #28]
   172f8:	ldr	r2, [r5, #32]
   172fc:	add	r0, sp, #16
   17300:	ldr	r3, [r3]
   17304:	ldrd	sl, [r2, #16]
   17308:	mov	r2, #1
   1730c:	ldrb	r3, [r3, #57]	; 0x39
   17310:	str	r7, [sp]
   17314:	strd	sl, [sp, #8]
   17318:	cmp	r3, #0
   1731c:	mov	r3, #50	; 0x32
   17320:	mov	r1, r3
   17324:	beq	17534 <ColumnsPanel_update@@Base+0xb18>
   17328:	bl	15510 <__snprintf_chk@plt>
   1732c:	cmp	r0, #49	; 0x31
   17330:	bgt	17690 <ColumnsPanel_update@@Base+0xc74>
   17334:	ldr	r3, [r6]
   17338:	ldr	r2, [pc, #892]	; 176bc <ColumnsPanel_update@@Base+0xca0>
   1733c:	mov	r0, r4
   17340:	ldr	r1, [r3, #44]	; 0x2c
   17344:	bl	1dc64 <RichString_append@@Base>
   17348:	ldr	r3, [r6]
   1734c:	add	r2, sp, #16
   17350:	mov	r0, r4
   17354:	ldr	r1, [r3, #204]	; 0xcc
   17358:	bl	1dc64 <RichString_append@@Base>
   1735c:	ldr	r2, [r5, #32]
   17360:	mov	r3, #50	; 0x32
   17364:	mov	r1, r3
   17368:	ldrd	sl, [r2]
   1736c:	add	r0, sp, #16
   17370:	str	r7, [sp]
   17374:	mov	r2, #1
   17378:	strd	sl, [sp, #8]
   1737c:	bl	15510 <__snprintf_chk@plt>
   17380:	cmp	r0, #49	; 0x31
   17384:	bgt	17690 <ColumnsPanel_update@@Base+0xc74>
   17388:	ldr	r3, [r6]
   1738c:	ldr	r2, [pc, #812]	; 176c0 <ColumnsPanel_update@@Base+0xca4>
   17390:	mov	r0, r4
   17394:	ldr	r1, [r3, #44]	; 0x2c
   17398:	bl	1dc64 <RichString_append@@Base>
   1739c:	ldr	r3, [r6]
   173a0:	add	r2, sp, #16
   173a4:	mov	r0, r4
   173a8:	ldr	r1, [r3, #196]	; 0xc4
   173ac:	bl	1dc64 <RichString_append@@Base>
   173b0:	ldr	r2, [r5, #32]
   173b4:	mov	r3, #50	; 0x32
   173b8:	mov	r1, r3
   173bc:	ldrd	sl, [r2, #24]
   173c0:	add	r0, sp, #16
   173c4:	str	r7, [sp]
   173c8:	mov	r2, #1
   173cc:	strd	sl, [sp, #8]
   173d0:	bl	15510 <__snprintf_chk@plt>
   173d4:	cmp	r0, #49	; 0x31
   173d8:	bgt	17690 <ColumnsPanel_update@@Base+0xc74>
   173dc:	ldr	r3, [r6]
   173e0:	ldr	r2, [pc, #732]	; 176c4 <ColumnsPanel_update@@Base+0xca8>
   173e4:	mov	r0, r4
   173e8:	ldr	r1, [r3, #44]	; 0x2c
   173ec:	bl	1dc64 <RichString_append@@Base>
   173f0:	ldr	r3, [r6]
   173f4:	add	r2, sp, #16
   173f8:	mov	r0, r4
   173fc:	ldr	r1, [r3, #212]	; 0xd4
   17400:	bl	1dc64 <RichString_append@@Base>
   17404:	ldr	r2, [r5, #32]
   17408:	mov	r3, #50	; 0x32
   1740c:	mov	r1, r3
   17410:	ldrd	sl, [r2, #32]
   17414:	add	r0, sp, #16
   17418:	str	r7, [sp]
   1741c:	mov	r2, #1
   17420:	strd	sl, [sp, #8]
   17424:	bl	15510 <__snprintf_chk@plt>
   17428:	cmp	r0, #49	; 0x31
   1742c:	bgt	17690 <ColumnsPanel_update@@Base+0xc74>
   17430:	ldr	r3, [r6]
   17434:	ldr	r2, [pc, #652]	; 176c8 <ColumnsPanel_update@@Base+0xcac>
   17438:	mov	r0, r4
   1743c:	ldr	r1, [r3, #44]	; 0x2c
   17440:	bl	1dc64 <RichString_append@@Base>
   17444:	ldr	r3, [r6]
   17448:	add	r2, sp, #16
   1744c:	mov	r0, r4
   17450:	ldr	r1, [r3, #216]	; 0xd8
   17454:	bl	1dc64 <RichString_append@@Base>
   17458:	ldr	r3, [r5, #32]
   1745c:	vldr	d7, [r3, #40]	; 0x28
   17460:	vcmp.f64	d7, #0.0
   17464:	vmrs	APSR_nzcv, fpscr
   17468:	bne	1763c <ColumnsPanel_update@@Base+0xc20>
   1746c:	vldr	d7, [r3, #48]	; 0x30
   17470:	vcmp.f64	d7, #0.0
   17474:	vmrs	APSR_nzcv, fpscr
   17478:	beq	174cc <ColumnsPanel_update@@Base+0xab0>
   1747c:	mov	r3, #50	; 0x32
   17480:	vstr	d7, [sp, #8]
   17484:	str	r7, [sp]
   17488:	mov	r1, r3
   1748c:	mov	r2, #1
   17490:	add	r0, sp, #16
   17494:	bl	15510 <__snprintf_chk@plt>
   17498:	cmp	r0, #49	; 0x31
   1749c:	bgt	17690 <ColumnsPanel_update@@Base+0xc74>
   174a0:	ldr	r3, [r6]
   174a4:	ldr	r2, [pc, #544]	; 176cc <ColumnsPanel_update@@Base+0xcb0>
   174a8:	mov	r0, r4
   174ac:	ldr	r1, [r3, #44]	; 0x2c
   174b0:	bl	1dc64 <RichString_append@@Base>
   174b4:	ldr	r3, [r6]
   174b8:	add	r2, sp, #16
   174bc:	mov	r0, r4
   174c0:	ldr	r1, [r3, #224]	; 0xe0
   174c4:	bl	1dc64 <RichString_append@@Base>
   174c8:	ldr	r3, [r5, #32]
   174cc:	ldrd	sl, [r3, #56]	; 0x38
   174d0:	mov	r3, #50	; 0x32
   174d4:	str	r7, [sp]
   174d8:	mov	r1, r3
   174dc:	strd	sl, [sp, #8]
   174e0:	mov	r2, #1
   174e4:	add	r0, sp, #16
   174e8:	bl	15510 <__snprintf_chk@plt>
   174ec:	cmp	r0, #49	; 0x31
   174f0:	bgt	17690 <ColumnsPanel_update@@Base+0xc74>
   174f4:	ldr	r3, [r6]
   174f8:	ldr	r2, [pc, #464]	; 176d0 <ColumnsPanel_update@@Base+0xcb4>
   174fc:	mov	r0, r4
   17500:	ldr	r1, [r3, #44]	; 0x2c
   17504:	bl	1dc64 <RichString_append@@Base>
   17508:	ldr	r3, [r6]
   1750c:	add	r2, sp, #16
   17510:	mov	r0, r4
   17514:	ldr	r1, [r3, #208]	; 0xd0
   17518:	bl	1dc64 <RichString_append@@Base>
   1751c:	ldr	r2, [sp, #68]	; 0x44
   17520:	ldr	r3, [r8]
   17524:	cmp	r2, r3
   17528:	bne	176a8 <ColumnsPanel_update@@Base+0xc8c>
   1752c:	add	sp, sp, #72	; 0x48
   17530:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17534:	bl	15510 <__snprintf_chk@plt>
   17538:	cmp	r0, #49	; 0x31
   1753c:	bgt	17690 <ColumnsPanel_update@@Base+0xc74>
   17540:	ldr	r3, [r6]
   17544:	ldr	r2, [pc, #392]	; 176d4 <ColumnsPanel_update@@Base+0xcb8>
   17548:	mov	r0, r4
   1754c:	ldr	r1, [r3, #44]	; 0x2c
   17550:	bl	1dc64 <RichString_append@@Base>
   17554:	ldr	r3, [r6]
   17558:	add	r2, sp, #16
   1755c:	mov	r0, r4
   17560:	ldr	r1, [r3, #204]	; 0xcc
   17564:	bl	1dc64 <RichString_append@@Base>
   17568:	ldr	r2, [r5, #32]
   1756c:	mov	r3, #50	; 0x32
   17570:	mov	r1, r3
   17574:	ldrd	sl, [r2]
   17578:	add	r0, sp, #16
   1757c:	str	r7, [sp]
   17580:	mov	r2, #1
   17584:	strd	sl, [sp, #8]
   17588:	bl	15510 <__snprintf_chk@plt>
   1758c:	cmp	r0, #49	; 0x31
   17590:	bgt	17690 <ColumnsPanel_update@@Base+0xc74>
   17594:	ldr	r3, [r6]
   17598:	ldr	r2, [pc, #312]	; 176d8 <ColumnsPanel_update@@Base+0xcbc>
   1759c:	mov	r0, r4
   175a0:	ldr	r1, [r3, #44]	; 0x2c
   175a4:	bl	1dc64 <RichString_append@@Base>
   175a8:	ldr	r3, [r6]
   175ac:	add	r2, sp, #16
   175b0:	mov	r0, r4
   175b4:	ldr	r1, [r3, #196]	; 0xc4
   175b8:	bl	1dc64 <RichString_append@@Base>
   175bc:	ldr	r3, [r5, #32]
   175c0:	vldr	d7, [r3, #24]
   175c4:	vcmp.f64	d7, #0.0
   175c8:	vmrs	APSR_nzcv, fpscr
   175cc:	beq	1751c <ColumnsPanel_update@@Base+0xb00>
   175d0:	mov	r3, #50	; 0x32
   175d4:	vstr	d7, [sp, #8]
   175d8:	str	r7, [sp]
   175dc:	mov	r1, r3
   175e0:	mov	r2, #1
   175e4:	add	r0, sp, #16
   175e8:	bl	15510 <__snprintf_chk@plt>
   175ec:	cmp	r0, #49	; 0x31
   175f0:	bgt	17690 <ColumnsPanel_update@@Base+0xc74>
   175f4:	ldr	r3, [r6]
   175f8:	mov	r0, r4
   175fc:	ldr	r2, [pc, #216]	; 176dc <ColumnsPanel_update@@Base+0xcc0>
   17600:	ldr	r1, [r3, #44]	; 0x2c
   17604:	bl	1dc64 <RichString_append@@Base>
   17608:	ldr	r3, [r6]
   1760c:	add	r2, sp, #16
   17610:	mov	r0, r4
   17614:	ldr	r1, [r3, #224]	; 0xe0
   17618:	bl	1dc64 <RichString_append@@Base>
   1761c:	b	1751c <ColumnsPanel_update@@Base+0xb00>
   17620:	ldr	r3, [pc, #140]	; 176b4 <ColumnsPanel_update@@Base+0xc98>
   17624:	mov	r0, r4
   17628:	ldr	r2, [pc, #176]	; 176e0 <ColumnsPanel_update@@Base+0xcc4>
   1762c:	ldr	r3, [r3]
   17630:	ldr	r1, [r3, #44]	; 0x2c
   17634:	bl	1dc64 <RichString_append@@Base>
   17638:	b	1751c <ColumnsPanel_update@@Base+0xb00>
   1763c:	mov	r3, #50	; 0x32
   17640:	vstr	d7, [sp, #8]
   17644:	str	r7, [sp]
   17648:	mov	r1, r3
   1764c:	mov	r2, #1
   17650:	add	r0, sp, #16
   17654:	bl	15510 <__snprintf_chk@plt>
   17658:	cmp	r0, #49	; 0x31
   1765c:	bgt	17690 <ColumnsPanel_update@@Base+0xc74>
   17660:	ldr	r3, [r6]
   17664:	ldr	r2, [pc, #120]	; 176e4 <ColumnsPanel_update@@Base+0xcc8>
   17668:	mov	r0, r4
   1766c:	ldr	r1, [r3, #44]	; 0x2c
   17670:	bl	1dc64 <RichString_append@@Base>
   17674:	ldr	r3, [r6]
   17678:	add	r2, sp, #16
   1767c:	mov	r0, r4
   17680:	ldr	r1, [r3, #220]	; 0xdc
   17684:	bl	1dc64 <RichString_append@@Base>
   17688:	ldr	r3, [r5, #32]
   1768c:	b	1746c <ColumnsPanel_update@@Base+0xa50>
   17690:	mov	r0, #1
   17694:	bl	15030 <curs_set@plt>
   17698:	bl	14f28 <endwin@plt>
   1769c:	mov	r1, #0
   176a0:	mov	r0, #1
   176a4:	bl	15114 <err@plt>
   176a8:	bl	15084 <__stack_chk_fail@plt>
   176ac:			; <UNDEFINED> instruction: 0x0003ccb8
   176b0:	andeq	r9, r2, r4, lsr r1
   176b4:	muleq	r3, r8, r1
   176b8:	andeq	ip, r2, r8, asr r6
   176bc:	andeq	r9, r2, r0, asr #2
   176c0:	andeq	r9, r2, r4, asr #2
   176c4:	andeq	r9, r2, r8, asr #2
   176c8:	andeq	r9, r2, ip, asr #2
   176cc:	andeq	r9, r2, r4, asr r1
   176d0:	andeq	r9, r2, r8, asr r1
   176d4:	andeq	r9, r2, ip, asr r1
   176d8:	andeq	r9, r2, r4, ror #2
   176dc:	andeq	r9, r2, ip, ror #2
   176e0:	andeq	r9, r2, r8, lsl r1
   176e4:	andeq	r9, r2, r0, asr r1
   176e8:	push	{r4, lr}
   176ec:	mov	r0, #1
   176f0:	bl	15030 <curs_set@plt>
   176f4:	bl	14f28 <endwin@plt>
   176f8:	mov	r0, #0
   176fc:	bl	15264 <exit@plt>

00017700 <CRT_done@@Base>:
   17700:	push	{r4, lr}
   17704:	mov	r0, #1
   17708:	bl	15030 <curs_set@plt>
   1770c:	pop	{r4, lr}
   17710:	b	14f28 <endwin@plt>

00017714 <CRT_fatalError@@Base>:
   17714:	push	{lr}		; (str lr, [sp, #-4]!)
   17718:	sub	sp, sp, #12
   1771c:	mov	r4, r0
   17720:	bl	152e8 <__errno_location@plt>
   17724:	ldr	r0, [r0]
   17728:	bl	151ec <strerror@plt>
   1772c:	mov	r5, r0
   17730:	mov	r0, #1
   17734:	bl	15030 <curs_set@plt>
   17738:	bl	14f28 <endwin@plt>
   1773c:	ldr	r2, [pc, #28]	; 17760 <CRT_fatalError@@Base+0x4c>
   17740:	str	r5, [sp]
   17744:	mov	r3, r4
   17748:	ldr	r0, [r2]
   1774c:	mov	r1, #1
   17750:	ldr	r2, [pc, #12]	; 17764 <CRT_fatalError@@Base+0x50>
   17754:	bl	153c0 <__fprintf_chk@plt>
   17758:	mov	r0, #2
   1775c:	bl	15264 <exit@plt>
   17760:	andeq	lr, r3, r8, ror r7
   17764:	strdeq	r9, [r2], -r0

00017768 <CRT_readKey@@Base>:
   17768:	push	{r4, lr}
   1776c:	bl	153cc <nocbreak@plt>
   17770:	ldr	r4, [pc, #44]	; 177a4 <CRT_readKey@@Base+0x3c>
   17774:	bl	152ac <cbreak@plt>
   17778:	mov	r1, #0
   1777c:	ldr	r0, [r4]
   17780:	bl	14fd0 <nodelay@plt>
   17784:	ldr	r0, [r4]
   17788:	bl	1536c <wgetch@plt>
   1778c:	ldr	r3, [pc, #20]	; 177a8 <CRT_readKey@@Base+0x40>
   17790:	mov	r4, r0
   17794:	ldr	r0, [r3]
   17798:	bl	15090 <halfdelay@plt>
   1779c:	mov	r0, r4
   177a0:	pop	{r4, pc}
   177a4:	andeq	lr, r3, r8, lsl #15
   177a8:	muleq	r3, r8, r7

000177ac <CRT_disableDelay@@Base>:
   177ac:	push	{r4, lr}
   177b0:	bl	153cc <nocbreak@plt>
   177b4:	bl	152ac <cbreak@plt>
   177b8:	ldr	r3, [pc, #12]	; 177cc <CRT_disableDelay@@Base+0x20>
   177bc:	mov	r1, #1
   177c0:	pop	{r4, lr}
   177c4:	ldr	r0, [r3]
   177c8:	b	14fd0 <nodelay@plt>
   177cc:	andeq	lr, r3, r8, lsl #15

000177d0 <CRT_enableDelay@@Base>:
   177d0:	ldr	r3, [pc, #4]	; 177dc <CRT_enableDelay@@Base+0xc>
   177d4:	ldr	r0, [r3]
   177d8:	b	15090 <halfdelay@plt>
   177dc:	muleq	r3, r8, r7

000177e0 <CRT_setColors@@Base>:
   177e0:	ldr	r3, [pc, #176]	; 17898 <CRT_setColors@@Base+0xb8>
   177e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   177e8:	sub	r7, r0, #5
   177ec:	mov	r9, r0
   177f0:	clz	r7, r7
   177f4:	mov	r5, #56	; 0x38
   177f8:	lsr	r7, r7, #5
   177fc:	mov	r8, #0
   17800:	str	r0, [r3, #4]
   17804:	sxth	r6, r8
   17808:	mov	r4, #0
   1780c:	cmp	r4, #0
   17810:	moveq	r3, r7
   17814:	movne	r3, #1
   17818:	cmp	r3, #0
   1781c:	movne	r2, r4
   17820:	mvneq	r2, #0
   17824:	add	r0, r5, r4
   17828:	sxth	r2, r2
   1782c:	sxth	r0, r0
   17830:	add	r4, r4, #1
   17834:	mov	r1, r6
   17838:	bl	14f64 <init_pair@plt>
   1783c:	cmp	r4, #8
   17840:	bne	1780c <CRT_setColors@@Base+0x2c>
   17844:	add	r8, r8, #1
   17848:	sub	r5, r5, #8
   1784c:	cmp	r8, #8
   17850:	uxth	r5, r5
   17854:	bne	17804 <CRT_setColors@@Base+0x24>
   17858:	ldr	r3, [pc, #60]	; 1789c <CRT_setColors@@Base+0xbc>
   1785c:	mov	r0, #21
   17860:	ldr	r3, [r3]
   17864:	cmp	r3, #9
   17868:	movlt	r1, #0
   1786c:	movge	r1, #8
   17870:	subs	r2, r9, #5
   17874:	mvnne	r2, #0
   17878:	bl	14f64 <init_pair@plt>
   1787c:	rsb	r2, r9, r9, lsl #3
   17880:	ldr	r3, [pc, #24]	; 178a0 <CRT_setColors@@Base+0xc0>
   17884:	add	r9, r9, r2, lsl #3
   17888:	ldr	r2, [pc, #20]	; 178a4 <CRT_setColors@@Base+0xc4>
   1788c:	add	r9, r3, r9, lsl #2
   17890:	str	r9, [r2]
   17894:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17898:	muleq	r3, r8, r7
   1789c:	andeq	lr, r3, r0, lsl #15
   178a0:	ldrdeq	sp, [r3], -r0
   178a4:	muleq	r3, r8, r1

000178a8 <CRT_init@@Base>:
   178a8:	push	{r4, r5, r6, r7, r8, lr}
   178ac:	sub	sp, sp, #8
   178b0:	ldr	r7, [pc, #660]	; 17b4c <CRT_init@@Base+0x2a4>
   178b4:	mov	r8, r1
   178b8:	mov	r4, r0
   178bc:	ldr	r3, [r7]
   178c0:	ldr	r6, [pc, #648]	; 17b50 <CRT_init@@Base+0x2a8>
   178c4:	str	r3, [sp, #4]
   178c8:	bl	15108 <initscr@plt>
   178cc:	bl	15498 <noecho@plt>
   178d0:	cmp	r4, #0
   178d4:	moveq	r3, #1
   178d8:	ldr	r5, [pc, #628]	; 17b54 <CRT_init@@Base+0x2ac>
   178dc:	ldr	r1, [pc, #628]	; 17b58 <CRT_init@@Base+0x2b0>
   178e0:	add	r0, r5, #1360	; 0x550
   178e4:	ldr	ip, [pc, #624]	; 17b5c <CRT_init@@Base+0x2b4>
   178e8:	add	r0, r0, #4
   178ec:	sub	r2, r5, #4
   178f0:	strne	r4, [r6]
   178f4:	str	r8, [r6, #4]
   178f8:	moveq	r4, r3
   178fc:	streq	r3, [r6]
   17900:	rsb	r3, r8, r8, lsl #3
   17904:	add	r3, r8, r3, lsl #3
   17908:	add	r3, r5, r3, lsl #2
   1790c:	str	r3, [r1]
   17910:	add	r1, r5, #224	; 0xe0
   17914:	ldr	r3, [r2, #4]!
   17918:	cmp	r3, ip
   1791c:	moveq	r3, #0
   17920:	cmp	r2, r1
   17924:	str	r3, [r0, #4]!
   17928:	bne	17914 <CRT_init@@Base+0x6c>
   1792c:	ldr	r8, [pc, #556]	; 17b60 <CRT_init@@Base+0x2b8>
   17930:	mov	r0, r4
   17934:	bl	15090 <halfdelay@plt>
   17938:	bl	1503c <nonl@plt>
   1793c:	mov	r1, #0
   17940:	ldr	r0, [r8]
   17944:	bl	1506c <intrflush@plt>
   17948:	mov	r1, #1
   1794c:	ldr	r0, [r8]
   17950:	bl	152f4 <keypad@plt>
   17954:	mov	r0, #0
   17958:	bl	14f40 <mouseinterval@plt>
   1795c:	mov	r0, #0
   17960:	bl	15030 <curs_set@plt>
   17964:	bl	150e4 <has_colors@plt>
   17968:	cmp	r0, #0
   1796c:	bne	17b40 <CRT_init@@Base+0x298>
   17970:	ldr	r0, [pc, #492]	; 17b64 <CRT_init@@Base+0x2bc>
   17974:	bl	151b0 <getenv@plt>
   17978:	ldr	r4, [pc, #488]	; 17b68 <CRT_init@@Base+0x2c0>
   1797c:	ldr	r1, [pc, #488]	; 17b6c <CRT_init@@Base+0x2c4>
   17980:	str	r0, [r4]
   17984:	bl	1fc78 <String_eq@@Base>
   17988:	ldr	r4, [r4]
   1798c:	mov	r2, #5
   17990:	ldr	r1, [pc, #472]	; 17b70 <CRT_init@@Base+0x2c8>
   17994:	cmp	r0, #0
   17998:	movne	r3, #20
   1799c:	moveq	r3, #5
   179a0:	mov	r0, r4
   179a4:	str	r3, [r5, #1652]	; 0x674
   179a8:	bl	154e0 <strncmp@plt>
   179ac:	cmp	r0, #0
   179b0:	beq	179c8 <CRT_init@@Base+0x120>
   179b4:	mov	r0, r4
   179b8:	ldr	r1, [pc, #436]	; 17b74 <CRT_init@@Base+0x2cc>
   179bc:	bl	1fc78 <String_eq@@Base>
   179c0:	cmp	r0, #0
   179c4:	beq	17a9c <CRT_init@@Base+0x1f4>
   179c8:	ldr	r1, [pc, #424]	; 17b78 <CRT_init@@Base+0x2d0>
   179cc:	ldr	r0, [pc, #424]	; 17b7c <CRT_init@@Base+0x2d4>
   179d0:	bl	154d4 <define_key@plt>
   179d4:	mov	r1, #360	; 0x168
   179d8:	ldr	r0, [pc, #416]	; 17b80 <CRT_init@@Base+0x2d8>
   179dc:	bl	154d4 <define_key@plt>
   179e0:	ldr	r1, [pc, #400]	; 17b78 <CRT_init@@Base+0x2d0>
   179e4:	ldr	r0, [pc, #408]	; 17b84 <CRT_init@@Base+0x2dc>
   179e8:	bl	154d4 <define_key@plt>
   179ec:	mov	r1, #360	; 0x168
   179f0:	ldr	r0, [pc, #400]	; 17b88 <CRT_init@@Base+0x2e0>
   179f4:	bl	154d4 <define_key@plt>
   179f8:	ldr	r1, [pc, #396]	; 17b8c <CRT_init@@Base+0x2e4>
   179fc:	ldr	r0, [pc, #396]	; 17b90 <CRT_init@@Base+0x2e8>
   17a00:	bl	154d4 <define_key@plt>
   17a04:	ldr	r1, [pc, #392]	; 17b94 <CRT_init@@Base+0x2ec>
   17a08:	ldr	r0, [pc, #392]	; 17b98 <CRT_init@@Base+0x2f0>
   17a0c:	bl	154d4 <define_key@plt>
   17a10:	ldr	r1, [pc, #388]	; 17b9c <CRT_init@@Base+0x2f4>
   17a14:	ldr	r0, [pc, #388]	; 17ba0 <CRT_init@@Base+0x2f8>
   17a18:	bl	154d4 <define_key@plt>
   17a1c:	mov	r1, #268	; 0x10c
   17a20:	ldr	r0, [pc, #380]	; 17ba4 <CRT_init@@Base+0x2fc>
   17a24:	bl	154d4 <define_key@plt>
   17a28:	ldr	r1, [pc, #348]	; 17b8c <CRT_init@@Base+0x2e4>
   17a2c:	ldr	r0, [pc, #372]	; 17ba8 <CRT_init@@Base+0x300>
   17a30:	bl	154d4 <define_key@plt>
   17a34:	ldr	r1, [pc, #344]	; 17b94 <CRT_init@@Base+0x2ec>
   17a38:	ldr	r0, [pc, #364]	; 17bac <CRT_init@@Base+0x304>
   17a3c:	bl	154d4 <define_key@plt>
   17a40:	ldr	r1, [pc, #340]	; 17b9c <CRT_init@@Base+0x2f4>
   17a44:	ldr	r0, [pc, #356]	; 17bb0 <CRT_init@@Base+0x308>
   17a48:	bl	154d4 <define_key@plt>
   17a4c:	mov	r1, #268	; 0x10c
   17a50:	ldr	r0, [pc, #348]	; 17bb4 <CRT_init@@Base+0x30c>
   17a54:	bl	154d4 <define_key@plt>
   17a58:	ldr	r1, [pc, #344]	; 17bb8 <CRT_init@@Base+0x310>
   17a5c:	ldr	r0, [pc, #344]	; 17bbc <CRT_init@@Base+0x314>
   17a60:	bl	154d4 <define_key@plt>
   17a64:	ldr	r3, [pc, #340]	; 17bc0 <CRT_init@@Base+0x318>
   17a68:	ldr	r4, [pc, #340]	; 17bc4 <CRT_init@@Base+0x31c>
   17a6c:	ldr	r3, [r3]
   17a70:	strh	r3, [sp]
   17a74:	lsr	r3, r3, #16
   17a78:	strb	r3, [sp, #2]
   17a7c:	add	r3, r4, #51	; 0x33
   17a80:	mov	r1, r4
   17a84:	mov	r0, sp
   17a88:	add	r4, r4, #1
   17a8c:	strb	r3, [sp, #1]
   17a90:	bl	154d4 <define_key@plt>
   17a94:	cmp	r4, #328	; 0x148
   17a98:	bne	17a7c <CRT_init@@Base+0x1d4>
   17a9c:	ldr	r1, [pc, #292]	; 17bc8 <CRT_init@@Base+0x320>
   17aa0:	mov	r0, #11
   17aa4:	bl	1500c <signal@plt>
   17aa8:	ldr	r1, [pc, #284]	; 17bcc <CRT_init@@Base+0x324>
   17aac:	mov	r0, #15
   17ab0:	bl	1500c <signal@plt>
   17ab4:	ldr	r1, [pc, #272]	; 17bcc <CRT_init@@Base+0x324>
   17ab8:	mov	r0, #3
   17abc:	bl	1500c <signal@plt>
   17ac0:	bl	15204 <use_default_colors@plt>
   17ac4:	bl	150e4 <has_colors@plt>
   17ac8:	cmp	r0, #0
   17acc:	moveq	r3, #1
   17ad0:	moveq	r0, r3
   17ad4:	ldrne	r0, [r6, #4]
   17ad8:	streq	r3, [r6, #4]
   17adc:	bl	177e0 <CRT_setColors@@Base>
   17ae0:	ldr	r1, [pc, #232]	; 17bd0 <CRT_init@@Base+0x328>
   17ae4:	mov	r0, #0
   17ae8:	bl	15420 <setlocale@plt>
   17aec:	mov	r0, #14
   17af0:	bl	15450 <nl_langinfo@plt>
   17af4:	ldr	r1, [pc, #216]	; 17bd4 <CRT_init@@Base+0x32c>
   17af8:	bl	14f34 <strcmp@plt>
   17afc:	mov	r1, #0
   17b00:	cmp	r0, #0
   17b04:	moveq	r3, #1
   17b08:	strbeq	r3, [r6, #8]
   17b0c:	ldrne	r3, [pc, #196]	; 17bd8 <CRT_init@@Base+0x330>
   17b10:	ldreq	r3, [pc, #196]	; 17bdc <CRT_init@@Base+0x334>
   17b14:	movne	r2, #0
   17b18:	mov	r0, #1
   17b1c:	strbne	r2, [r6, #8]
   17b20:	str	r3, [r5, #1656]	; 0x678
   17b24:	bl	14f04 <mousemask@plt>
   17b28:	ldr	r2, [sp, #4]
   17b2c:	ldr	r3, [r7]
   17b30:	cmp	r2, r3
   17b34:	bne	17b48 <CRT_init@@Base+0x2a0>
   17b38:	add	sp, sp, #8
   17b3c:	pop	{r4, r5, r6, r7, r8, pc}
   17b40:	bl	15000 <start_color@plt>
   17b44:	b	17970 <CRT_init@@Base+0xc8>
   17b48:	bl	15084 <__stack_chk_fail@plt>
   17b4c:			; <UNDEFINED> instruction: 0x0003ccb8
   17b50:	muleq	r3, r8, r7
   17b54:	ldrdeq	sp, [r3], -r0
   17b58:	muleq	r3, r8, r1
   17b5c:	eoreq	r1, r0, r0, lsl #10
   17b60:	andeq	lr, r3, r8, lsl #15
   17b64:	strdeq	r9, [r2], -r8
   17b68:	muleq	r3, ip, r1
   17b6c:	andeq	r9, r2, r0, lsl #6
   17b70:	andeq	r9, r2, r8, lsl #6
   17b74:	andeq	r9, r2, r0, ror #6
   17b78:	andeq	r0, r0, r6, lsl #2
   17b7c:	andeq	r9, r2, r0, lsl r3
   17b80:	andeq	r9, r2, r4, lsl r3
   17b84:	andeq	r9, r2, r8, lsl r3
   17b88:	andeq	r9, r2, r0, lsr #6
   17b8c:	andeq	r0, r0, r9, lsl #2
   17b90:	andeq	r9, r2, r8, lsr #6
   17b94:	andeq	r0, r0, sl, lsl #2
   17b98:	andeq	r9, r2, ip, lsr #6
   17b9c:	andeq	r0, r0, fp, lsl #2
   17ba0:	andeq	r9, r2, r0, lsr r3
   17ba4:	andeq	r9, r2, r4, lsr r3
   17ba8:	andeq	r9, r2, r8, lsr r3
   17bac:	andeq	r9, r2, r0, asr #6
   17bb0:	andeq	r9, r2, r8, asr #6
   17bb4:	andeq	r9, r2, r0, asr r3
   17bb8:	andeq	r0, r0, sl, lsl r1
   17bbc:	andeq	r9, r2, r8, asr r3
   17bc0:	andeq	r9, r2, r0, ror r3
   17bc4:	andeq	r0, r0, lr, lsr #2
   17bc8:	andeq	r7, r2, ip, lsr #20
   17bcc:	andeq	r7, r1, r8, ror #13
   17bd0:	andeq	r9, r2, r0, lsl #20
   17bd4:	andeq	r9, r2, r8, ror #6
   17bd8:	andeq	sp, r3, ip, lsl #18
   17bdc:	andeq	sp, r3, r8, lsr #18

00017be0 <MainPanel_getValue@@Base>:
   17be0:	push	{r4, lr}
   17be4:	bl	1b114 <Panel_get@@Base>
   17be8:	cmp	r0, #0
   17bec:	ldrne	r0, [r0, #28]
   17bf0:	ldreq	r0, [pc]	; 17bf8 <MainPanel_getValue@@Base+0x18>
   17bf4:	pop	{r4, pc}
   17bf8:	andeq	r9, r2, r0, lsl #20

00017bfc <MainPanel_delete@@Base>:
   17bfc:	push	{r4, r5, r6, lr}
   17c00:	add	r5, r0, #8192	; 0x2000
   17c04:	mov	r4, r0
   17c08:	bl	1afe8 <Panel_done@@Base>
   17c0c:	ldr	r0, [r5, #308]	; 0x134
   17c10:	bl	21cdc <IncSet_delete@@Base>
   17c14:	ldr	r0, [r5, #312]	; 0x138
   17c18:	bl	14fa0 <free@plt>
   17c1c:	mov	r0, r4
   17c20:	pop	{r4, r5, r6, lr}
   17c24:	b	14fa0 <free@plt>

00017c28 <MainPanel_updateTreeFunctions@@Base>:
   17c28:	cmp	r1, #0
   17c2c:	push	{r4, lr}
   17c30:	ldr	r4, [r0, #56]	; 0x38
   17c34:	bne	17c5c <MainPanel_updateTreeFunctions@@Base+0x34>
   17c38:	mov	r0, r4
   17c3c:	ldr	r2, [pc, #60]	; 17c80 <MainPanel_updateTreeFunctions@@Base+0x58>
   17c40:	ldr	r1, [pc, #60]	; 17c84 <MainPanel_updateTreeFunctions@@Base+0x5c>
   17c44:	bl	186b4 <FunctionBar_setLabel@@Base>
   17c48:	mov	r0, r4
   17c4c:	ldr	r2, [pc, #52]	; 17c88 <MainPanel_updateTreeFunctions@@Base+0x60>
   17c50:	ldr	r1, [pc, #52]	; 17c8c <MainPanel_updateTreeFunctions@@Base+0x64>
   17c54:	pop	{r4, lr}
   17c58:	b	186b4 <FunctionBar_setLabel@@Base>
   17c5c:	mov	r0, r4
   17c60:	ldr	r2, [pc, #40]	; 17c90 <MainPanel_updateTreeFunctions@@Base+0x68>
   17c64:	ldr	r1, [pc, #24]	; 17c84 <MainPanel_updateTreeFunctions@@Base+0x5c>
   17c68:	bl	186b4 <FunctionBar_setLabel@@Base>
   17c6c:	mov	r0, r4
   17c70:	ldr	r2, [pc, #28]	; 17c94 <MainPanel_updateTreeFunctions@@Base+0x6c>
   17c74:	ldr	r1, [pc, #16]	; 17c8c <MainPanel_updateTreeFunctions@@Base+0x64>
   17c78:	pop	{r4, lr}
   17c7c:	b	186b4 <FunctionBar_setLabel@@Base>
   17c80:	ldrdeq	r9, [r2], -r8
   17c84:	andeq	r0, r0, sp, lsl #2
   17c88:	andeq	r9, r2, r0, ror #7
   17c8c:	andeq	r0, r0, lr, lsl #2
   17c90:	andeq	r9, r2, r8, asr #7
   17c94:	ldrdeq	r9, [r2], -r0

00017c98 <MainPanel_pidSearch@@Base>:
   17c98:	push	{r4, r5, r6, r7, r8, lr}
   17c9c:	add	r7, r0, #8192	; 0x2000
   17ca0:	sub	r1, r1, #48	; 0x30
   17ca4:	ldr	r6, [r7, #316]	; 0x13c
   17ca8:	mov	r5, r0
   17cac:	mov	r4, #0
   17cb0:	add	r6, r1, r6
   17cb4:	b	17cd4 <MainPanel_pidSearch@@Base+0x3c>
   17cb8:	bl	1b114 <Panel_get@@Base>
   17cbc:	cmp	r0, #0
   17cc0:	beq	17cd0 <MainPanel_pidSearch@@Base+0x38>
   17cc4:	ldr	r3, [r0, #16]
   17cc8:	cmp	r3, r6
   17ccc:	beq	17d0c <MainPanel_pidSearch@@Base+0x74>
   17cd0:	add	r4, r4, #1
   17cd4:	mov	r0, r5
   17cd8:	bl	1b1d4 <Panel_size@@Base>
   17cdc:	mov	r1, r4
   17ce0:	cmp	r0, r4
   17ce4:	mov	r0, r5
   17ce8:	bgt	17cb8 <MainPanel_pidSearch@@Base+0x20>
   17cec:	add	r6, r6, r6, lsl #2
   17cf0:	ldr	r3, [pc, #36]	; 17d1c <MainPanel_pidSearch@@Base+0x84>
   17cf4:	lsl	r6, r6, #1
   17cf8:	cmp	r6, r3
   17cfc:	movgt	r3, #0
   17d00:	strle	r6, [r7, #316]	; 0x13c
   17d04:	strgt	r3, [r7, #316]	; 0x13c
   17d08:	pop	{r4, r5, r6, r7, r8, pc}
   17d0c:	mov	r1, r4
   17d10:	mov	r0, r5
   17d14:	bl	1b1e0 <Panel_setSelected@@Base>
   17d18:	b	17cec <MainPanel_pidSearch@@Base+0x54>
   17d1c:	addseq	r9, r8, r0, lsl #13
   17d20:	add	r3, r1, #9984	; 0x2700
   17d24:	add	r3, r3, #16
   17d28:	cmp	r3, #1000	; 0x3e8
   17d2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d30:	mov	r6, r0
   17d34:	sub	sp, sp, #12
   17d38:	bls	17dd4 <MainPanel_pidSearch@@Base+0x13c>
   17d3c:	cmn	r1, #1
   17d40:	mov	r4, r1
   17d44:	beq	17f2c <MainPanel_pidSearch@@Base+0x294>
   17d48:	add	r5, r0, #8192	; 0x2000
   17d4c:	ldr	r0, [r5, #308]	; 0x134
   17d50:	ldr	r3, [r0, #112]	; 0x70
   17d54:	cmp	r3, #0
   17d58:	beq	17ed8 <MainPanel_pidSearch@@Base+0x240>
   17d5c:	mov	r3, #0
   17d60:	str	r3, [sp]
   17d64:	mov	r2, r6
   17d68:	ldr	r3, [pc, #652]	; 17ffc <MainPanel_pidSearch@@Base+0x364>
   17d6c:	bl	21d00 <IncSet_handleKey@@Base>
   17d70:	cmp	r0, #0
   17d74:	beq	17f60 <MainPanel_pidSearch@@Base+0x2c8>
   17d78:	ldr	r2, [r5, #308]	; 0x134
   17d7c:	ldr	r0, [r5, #304]	; 0x130
   17d80:	ldrb	r3, [r2, #120]	; 0x78
   17d84:	ldrb	r4, [r2, #121]	; 0x79
   17d88:	cmp	r3, #0
   17d8c:	addne	r3, r2, #56	; 0x38
   17d90:	ldr	r2, [r0, #8]
   17d94:	cmp	r4, #0
   17d98:	str	r3, [r2, #32]
   17d9c:	beq	17fd8 <MainPanel_pidSearch@@Base+0x340>
   17da0:	mov	r4, #33	; 0x21
   17da4:	bl	22218 <Action_follow@@Base>
   17da8:	orr	r4, r0, r4
   17dac:	orr	fp, r4, #8
   17db0:	and	r3, r4, #32
   17db4:	and	r7, r4, #65	; 0x41
   17db8:	and	r8, r4, #1
   17dbc:	and	r9, r4, #3
   17dc0:	and	sl, r4, #4
   17dc4:	and	r4, r4, #16
   17dc8:	cmp	r3, #0
   17dcc:	beq	17e44 <MainPanel_pidSearch@@Base+0x1ac>
   17dd0:	b	17e28 <MainPanel_pidSearch@@Base+0x190>
   17dd4:	add	r5, r0, #8192	; 0x2000
   17dd8:	ldrsh	r1, [r0, #48]	; 0x30
   17ddc:	ldr	r2, [r5, #304]	; 0x130
   17de0:	add	r1, r1, r3
   17de4:	ldr	r0, [r2, #8]
   17de8:	add	r1, r1, #1
   17dec:	ldr	r7, [r2]
   17df0:	bl	1d7b8 <ProcessList_keyAt@@Base>
   17df4:	ldr	r3, [r7, #52]	; 0x34
   17df8:	cmp	r3, r0
   17dfc:	beq	17f80 <MainPanel_pidSearch@@Base+0x2e8>
   17e00:	mov	r1, r0
   17e04:	mov	r0, r7
   17e08:	bl	236ec <Action_setSortKey@@Base>
   17e0c:	mov	sl, #4
   17e10:	mov	r9, #3
   17e14:	mov	r8, #1
   17e18:	and	r7, r0, #65	; 0x41
   17e1c:	orr	r7, r7, #1
   17e20:	orr	fp, r0, #39	; 0x27
   17e24:	and	r4, r0, #16
   17e28:	ldr	r0, [r5, #304]	; 0x130
   17e2c:	ldr	r3, [r0]
   17e30:	mov	r0, r6
   17e34:	ldrb	r1, [r3, #58]	; 0x3a
   17e38:	bl	17c28 <MainPanel_updateTreeFunctions@@Base>
   17e3c:	ldr	r0, [r5, #308]	; 0x134
   17e40:	bl	220f8 <IncSet_drawBar@@Base>
   17e44:	cmp	r7, #0
   17e48:	beq	17e68 <MainPanel_pidSearch@@Base+0x1d0>
   17e4c:	ldr	r3, [r5, #304]	; 0x130
   17e50:	mov	r0, r6
   17e54:	ldr	r7, [r3, #8]
   17e58:	bl	1b038 <Panel_getHeader@@Base>
   17e5c:	mov	r1, r0
   17e60:	mov	r0, r7
   17e64:	bl	1d4dc <ProcessList_printHeader@@Base>
   17e68:	cmp	r8, #0
   17e6c:	movne	r7, #9
   17e70:	moveq	r7, #1
   17e74:	cmp	r9, #0
   17e78:	orrne	r7, r7, #16
   17e7c:	cmp	sl, #0
   17e80:	movne	r2, #1
   17e84:	ldrne	r3, [r5, #304]	; 0x130
   17e88:	ldrne	r3, [r3]
   17e8c:	strbne	r2, [r3, #71]	; 0x47
   17e90:	cmp	r4, #0
   17e94:	movne	r7, #4
   17e98:	bne	17ecc <MainPanel_pidSearch@@Base+0x234>
   17e9c:	tst	fp, #8
   17ea0:	bne	17ecc <MainPanel_pidSearch@@Base+0x234>
   17ea4:	add	r2, r6, #8192	; 0x2000
   17ea8:	ldr	r3, [pc, #336]	; 18000 <MainPanel_pidSearch@@Base+0x368>
   17eac:	ldr	r2, [r2, #304]	; 0x130
   17eb0:	mvn	r1, #0
   17eb4:	ldr	r3, [r3]
   17eb8:	ldr	r2, [r2, #8]
   17ebc:	mov	r0, r6
   17ec0:	str	r1, [r2, #24]
   17ec4:	ldr	r1, [r3, #28]
   17ec8:	bl	1b02c <Panel_setSelectionColor@@Base>
   17ecc:	mov	r0, r7
   17ed0:	add	sp, sp, #12
   17ed4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ed8:	cmp	r1, #27
   17edc:	moveq	r7, #1
   17ee0:	beq	17ecc <MainPanel_pidSearch@@Base+0x234>
   17ee4:	ldr	r3, [pc, #280]	; 18004 <MainPanel_pidSearch@@Base+0x36c>
   17ee8:	sub	r2, r1, #1
   17eec:	cmp	r2, r3
   17ef0:	bhi	17fa8 <MainPanel_pidSearch@@Base+0x310>
   17ef4:	ldr	r3, [r5, #312]	; 0x138
   17ef8:	ldr	r3, [r3, r1, lsl #2]
   17efc:	cmp	r3, #0
   17f00:	beq	17f2c <MainPanel_pidSearch@@Base+0x294>
   17f04:	ldr	r0, [r5, #304]	; 0x130
   17f08:	blx	r3
   17f0c:	mov	fp, r0
   17f10:	and	r3, r0, #32
   17f14:	and	r7, r0, #65	; 0x41
   17f18:	and	r8, r0, #1
   17f1c:	and	r9, r0, #3
   17f20:	and	sl, r0, #4
   17f24:	and	r4, r0, #16
   17f28:	b	17dc8 <MainPanel_pidSearch@@Base+0x130>
   17f2c:	bl	15258 <__ctype_b_loc@plt>
   17f30:	lsl	r3, r4, #1
   17f34:	ldr	r2, [r0]
   17f38:	ldrh	r3, [r2, r3]
   17f3c:	tst	r3, #2048	; 0x800
   17f40:	bne	17fc0 <MainPanel_pidSearch@@Base+0x328>
   17f44:	cmn	r4, #1
   17f48:	beq	17ff0 <MainPanel_pidSearch@@Base+0x358>
   17f4c:	add	r5, r6, #8192	; 0x2000
   17f50:	mov	fp, #0
   17f54:	str	fp, [r5, #316]	; 0x13c
   17f58:	mov	r7, #2
   17f5c:	b	17e9c <MainPanel_pidSearch@@Base+0x204>
   17f60:	ldr	r3, [r5, #308]	; 0x134
   17f64:	ldrb	fp, [r3, #121]	; 0x79
   17f68:	cmp	fp, #0
   17f6c:	movne	r4, r0
   17f70:	ldrne	r0, [r5, #304]	; 0x130
   17f74:	bne	17da4 <MainPanel_pidSearch@@Base+0x10c>
   17f78:	mov	r7, #1
   17f7c:	b	17e9c <MainPanel_pidSearch@@Base+0x204>
   17f80:	mov	r0, r7
   17f84:	mov	r8, #1
   17f88:	mov	r4, #0
   17f8c:	bl	1f9cc <Settings_invertSortOrder@@Base>
   17f90:	mov	sl, #4
   17f94:	strb	r4, [r7, #58]	; 0x3a
   17f98:	mov	r9, #3
   17f9c:	mov	r7, r8
   17fa0:	mov	fp, #39	; 0x27
   17fa4:	b	17e28 <MainPanel_pidSearch@@Base+0x190>
   17fa8:	bl	15258 <__ctype_b_loc@plt>
   17fac:	lsl	r3, r4, #1
   17fb0:	ldr	r2, [r0]
   17fb4:	ldrh	r3, [r2, r3]
   17fb8:	tst	r3, #2048	; 0x800
   17fbc:	beq	17f50 <MainPanel_pidSearch@@Base+0x2b8>
   17fc0:	mov	r1, r4
   17fc4:	mov	r0, r6
   17fc8:	bl	17c98 <MainPanel_pidSearch@@Base>
   17fcc:	mov	fp, #0
   17fd0:	mov	r7, #2
   17fd4:	b	17e9c <MainPanel_pidSearch@@Base+0x204>
   17fd8:	mov	r9, #1
   17fdc:	mov	sl, r4
   17fe0:	mov	r8, r9
   17fe4:	mov	r7, r9
   17fe8:	mov	fp, #33	; 0x21
   17fec:	b	17e2c <MainPanel_pidSearch@@Base+0x194>
   17ff0:	mov	fp, #8
   17ff4:	mov	r7, #2
   17ff8:	b	17e9c <MainPanel_pidSearch@@Base+0x204>
   17ffc:	andeq	r7, r1, r0, ror #23
   18000:	muleq	r3, r8, r1
   18004:	strdeq	r0, [r0], -sp

00018008 <MainPanel_selectedPid@@Base>:
   18008:	push	{r4, lr}
   1800c:	bl	1b160 <Panel_getSelected@@Base>
   18010:	cmp	r0, #0
   18014:	ldrne	r0, [r0, #16]
   18018:	mvneq	r0, #0
   1801c:	pop	{r4, pc}

00018020 <MainPanel_foreachProcess@@Base>:
   18020:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18024:	mov	r4, #0
   18028:	mov	r6, r0
   1802c:	mov	sl, r1
   18030:	mov	r9, r2
   18034:	mov	fp, r3
   18038:	mov	r8, r4
   1803c:	mov	r7, #1
   18040:	mov	r0, r6
   18044:	bl	1b1d4 <Panel_size@@Base>
   18048:	mov	r1, r4
   1804c:	cmp	r0, r4
   18050:	mov	r0, r6
   18054:	add	r4, r4, #1
   18058:	ble	18080 <MainPanel_foreachProcess@@Base+0x60>
   1805c:	bl	1b114 <Panel_get@@Base>
   18060:	mov	r1, r9
   18064:	ldrb	r5, [r0, #46]	; 0x2e
   18068:	cmp	r5, #0
   1806c:	beq	18040 <MainPanel_foreachProcess@@Base+0x20>
   18070:	blx	sl
   18074:	mov	r8, r5
   18078:	and	r7, r7, r0
   1807c:	b	18040 <MainPanel_foreachProcess@@Base+0x20>
   18080:	cmp	r8, #0
   18084:	beq	18098 <MainPanel_foreachProcess@@Base+0x78>
   18088:	cmp	fp, #0
   1808c:	strbne	r8, [fp]
   18090:	mov	r0, r7
   18094:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18098:	bl	1b160 <Panel_getSelected@@Base>
   1809c:	cmp	r0, #0
   180a0:	beq	18088 <MainPanel_foreachProcess@@Base+0x68>
   180a4:	mov	r1, r9
   180a8:	blx	sl
   180ac:	and	r7, r7, r0
   180b0:	b	18088 <MainPanel_foreachProcess@@Base+0x68>

000180b4 <MainPanel_new@@Base>:
   180b4:	push	{r4, r5, lr}
   180b8:	mov	r0, #8512	; 0x2140
   180bc:	sub	sp, sp, #20
   180c0:	bl	23fb0 <xMalloc@@Base>
   180c4:	ldr	r3, [pc, #120]	; 18144 <MainPanel_new@@Base+0x90>
   180c8:	mov	r2, #0
   180cc:	mov	r1, r2
   180d0:	mov	r4, r0
   180d4:	str	r3, [r0]
   180d8:	ldr	r0, [pc, #104]	; 18148 <MainPanel_new@@Base+0x94>
   180dc:	bl	184a4 <FunctionBar_new@@Base>
   180e0:	ldr	r1, [pc, #100]	; 1814c <MainPanel_new@@Base+0x98>
   180e4:	mov	r2, #0
   180e8:	mov	r3, #1
   180ec:	str	r3, [sp]
   180f0:	stmib	sp, {r1, r2}
   180f4:	mov	r1, r3
   180f8:	mov	r2, r3
   180fc:	add	r5, r4, #8192	; 0x2000
   18100:	str	r0, [sp, #12]
   18104:	mov	r0, r4
   18108:	bl	1aef0 <Panel_init@@Base>
   1810c:	mov	r1, #4
   18110:	ldr	r0, [pc, #56]	; 18150 <MainPanel_new@@Base+0x9c>
   18114:	bl	23fd8 <xCalloc@@Base>
   18118:	str	r0, [r5, #312]	; 0x138
   1811c:	ldr	r0, [r4, #56]	; 0x38
   18120:	bl	21c48 <IncSet_new@@Base>
   18124:	str	r0, [r5, #308]	; 0x134
   18128:	ldr	r0, [r5, #312]	; 0x138
   1812c:	bl	23708 <Action_setBindings@@Base>
   18130:	ldr	r0, [r5, #312]	; 0x138
   18134:	bl	240c4 <Platform_setBindings@@Base>
   18138:	mov	r0, r4
   1813c:	add	sp, sp, #20
   18140:	pop	{r4, r5, pc}
   18144:	andeq	sp, r3, r0, asr r9
   18148:	muleq	r2, ip, r3
   1814c:	strdeq	sp, [r3], -ip
   18150:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

00018154 <MainPanel_setState@@Base>:
   18154:	add	r0, r0, #8192	; 0x2000
   18158:	str	r1, [r0, #304]	; 0x130
   1815c:	bx	lr
   18160:	push	{r4, r5, r6, lr}
   18164:	sub	sp, sp, #8
   18168:	mov	r4, r1
   1816c:	mov	r5, r0
   18170:	bl	1b160 <Panel_getSelected@@Base>
   18174:	cmp	r4, #32
   18178:	mov	r6, r0
   1817c:	beq	181c4 <MainPanel_setState@@Base+0x70>
   18180:	ble	181b4 <MainPanel_setState@@Base+0x60>
   18184:	ldr	r3, [pc, #172]	; 18238 <MainPanel_setState@@Base+0xe4>
   18188:	cmp	r4, r3
   1818c:	beq	181c4 <MainPanel_setState@@Base+0x70>
   18190:	add	r3, r3, #66	; 0x42
   18194:	cmp	r4, r3
   18198:	beq	181c4 <MainPanel_setState@@Base+0x70>
   1819c:	sub	r3, r3, #123	; 0x7b
   181a0:	cmp	r4, r3
   181a4:	beq	181c4 <MainPanel_setState@@Base+0x70>
   181a8:	mov	r0, #2
   181ac:	add	sp, sp, #8
   181b0:	pop	{r4, r5, r6, pc}
   181b4:	cmp	r4, #10
   181b8:	beq	181c4 <MainPanel_setState@@Base+0x70>
   181bc:	cmp	r4, #13
   181c0:	bne	181a8 <MainPanel_setState@@Base+0x54>
   181c4:	mov	r0, r6
   181c8:	bl	165cc <CheckItem_get@@Base>
   181cc:	add	r4, r5, #8192	; 0x2000
   181d0:	mov	r5, #1
   181d4:	eor	r1, r0, r5
   181d8:	mov	r0, r6
   181dc:	uxtb	r1, r1
   181e0:	bl	165b8 <CheckItem_set@@Base>
   181e4:	ldr	r2, [r4, #308]	; 0x134
   181e8:	ldr	r3, [r4, #304]	; 0x130
   181ec:	ldr	r6, [r2, #28]
   181f0:	strb	r5, [r3, #71]	; 0x47
   181f4:	mov	r0, r6
   181f8:	bl	19214 <Header_calculateHeight@@Base>
   181fc:	mov	r0, r6
   18200:	bl	19064 <Header_reinit@@Base>
   18204:	mov	r0, r6
   18208:	bl	190e4 <Header_draw@@Base>
   1820c:	ldr	ip, [r4, #308]	; 0x134
   18210:	ldr	r2, [r6, #20]
   18214:	mov	r0, ip
   18218:	ldr	r3, [ip, #8]
   1821c:	ldr	r1, [ip]
   18220:	ldr	ip, [ip, #12]
   18224:	str	ip, [sp]
   18228:	bl	1e198 <ScreenManager_resize@@Base>
   1822c:	mov	r0, r5
   18230:	add	sp, sp, #8
   18234:	pop	{r4, r5, r6, pc}
   18238:	andeq	r0, r0, r7, asr r1
   1823c:	push	{r4, lr}
   18240:	mov	r4, r0
   18244:	bl	1afe8 <Panel_done@@Base>
   18248:	mov	r0, r4
   1824c:	pop	{r4, lr}
   18250:	b	14fa0 <free@plt>

00018254 <DisplayOptionsPanel_new@@Base>:
   18254:	push	{r4, r5, r6, lr}
   18258:	mov	r5, r0
   1825c:	sub	sp, sp, #16
   18260:	ldr	r0, [pc, #496]	; 18458 <DisplayOptionsPanel_new@@Base+0x204>
   18264:	mov	r6, r1
   18268:	bl	23fb0 <xMalloc@@Base>
   1826c:	ldr	r3, [pc, #488]	; 1845c <DisplayOptionsPanel_new@@Base+0x208>
   18270:	mov	r2, #0
   18274:	mov	r1, r2
   18278:	mov	r4, r0
   1827c:	str	r3, [r0]
   18280:	ldr	r0, [pc, #472]	; 18460 <DisplayOptionsPanel_new@@Base+0x20c>
   18284:	bl	184a4 <FunctionBar_new@@Base>
   18288:	ldr	r2, [pc, #468]	; 18464 <DisplayOptionsPanel_new@@Base+0x210>
   1828c:	mov	r3, #1
   18290:	str	r3, [sp]
   18294:	strd	r2, [sp, #4]
   18298:	mov	r1, r3
   1829c:	mov	r2, r3
   182a0:	str	r0, [sp, #12]
   182a4:	mov	r0, r4
   182a8:	bl	1aef0 <Panel_init@@Base>
   182ac:	add	r3, r4, #8192	; 0x2000
   182b0:	mov	r0, r4
   182b4:	str	r6, [r3, #308]	; 0x134
   182b8:	str	r5, [r3, #304]	; 0x130
   182bc:	ldr	r1, [pc, #420]	; 18468 <DisplayOptionsPanel_new@@Base+0x214>
   182c0:	bl	1b048 <Panel_setHeader@@Base>
   182c4:	ldr	r0, [pc, #416]	; 1846c <DisplayOptionsPanel_new@@Base+0x218>
   182c8:	bl	24034 <xStrdup@@Base>
   182cc:	add	r1, r5, #58	; 0x3a
   182d0:	bl	16550 <CheckItem_newByRef@@Base>
   182d4:	mov	r1, r0
   182d8:	mov	r0, r4
   182dc:	bl	1b0d4 <Panel_add@@Base>
   182e0:	ldr	r0, [pc, #392]	; 18470 <DisplayOptionsPanel_new@@Base+0x21c>
   182e4:	bl	24034 <xStrdup@@Base>
   182e8:	add	r1, r5, #61	; 0x3d
   182ec:	bl	16550 <CheckItem_newByRef@@Base>
   182f0:	mov	r1, r0
   182f4:	mov	r0, r4
   182f8:	bl	1b0d4 <Panel_add@@Base>
   182fc:	ldr	r0, [pc, #368]	; 18474 <DisplayOptionsPanel_new@@Base+0x220>
   18300:	bl	24034 <xStrdup@@Base>
   18304:	add	r1, r5, #63	; 0x3f
   18308:	bl	16550 <CheckItem_newByRef@@Base>
   1830c:	mov	r1, r0
   18310:	mov	r0, r4
   18314:	bl	1b0d4 <Panel_add@@Base>
   18318:	ldr	r0, [pc, #344]	; 18478 <DisplayOptionsPanel_new@@Base+0x224>
   1831c:	bl	24034 <xStrdup@@Base>
   18320:	add	r1, r5, #64	; 0x40
   18324:	bl	16550 <CheckItem_newByRef@@Base>
   18328:	mov	r1, r0
   1832c:	mov	r0, r4
   18330:	bl	1b0d4 <Panel_add@@Base>
   18334:	ldr	r0, [pc, #320]	; 1847c <DisplayOptionsPanel_new@@Base+0x228>
   18338:	bl	24034 <xStrdup@@Base>
   1833c:	add	r1, r5, #67	; 0x43
   18340:	bl	16550 <CheckItem_newByRef@@Base>
   18344:	mov	r1, r0
   18348:	mov	r0, r4
   1834c:	bl	1b0d4 <Panel_add@@Base>
   18350:	ldr	r0, [pc, #296]	; 18480 <DisplayOptionsPanel_new@@Base+0x22c>
   18354:	bl	24034 <xStrdup@@Base>
   18358:	add	r1, r5, #62	; 0x3e
   1835c:	bl	16550 <CheckItem_newByRef@@Base>
   18360:	mov	r1, r0
   18364:	mov	r0, r4
   18368:	bl	1b0d4 <Panel_add@@Base>
   1836c:	ldr	r0, [pc, #272]	; 18484 <DisplayOptionsPanel_new@@Base+0x230>
   18370:	bl	24034 <xStrdup@@Base>
   18374:	add	r1, r5, #59	; 0x3b
   18378:	bl	16550 <CheckItem_newByRef@@Base>
   1837c:	mov	r1, r0
   18380:	mov	r0, r4
   18384:	bl	1b0d4 <Panel_add@@Base>
   18388:	ldr	r0, [pc, #248]	; 18488 <DisplayOptionsPanel_new@@Base+0x234>
   1838c:	bl	24034 <xStrdup@@Base>
   18390:	add	r1, r5, #65	; 0x41
   18394:	bl	16550 <CheckItem_newByRef@@Base>
   18398:	mov	r1, r0
   1839c:	mov	r0, r4
   183a0:	bl	1b0d4 <Panel_add@@Base>
   183a4:	ldr	r0, [pc, #224]	; 1848c <DisplayOptionsPanel_new@@Base+0x238>
   183a8:	bl	24034 <xStrdup@@Base>
   183ac:	add	r1, r5, #66	; 0x42
   183b0:	bl	16550 <CheckItem_newByRef@@Base>
   183b4:	mov	r1, r0
   183b8:	mov	r0, r4
   183bc:	bl	1b0d4 <Panel_add@@Base>
   183c0:	ldr	r0, [pc, #200]	; 18490 <DisplayOptionsPanel_new@@Base+0x23c>
   183c4:	bl	24034 <xStrdup@@Base>
   183c8:	add	r1, r5, #70	; 0x46
   183cc:	bl	16550 <CheckItem_newByRef@@Base>
   183d0:	mov	r1, r0
   183d4:	mov	r0, r4
   183d8:	bl	1b0d4 <Panel_add@@Base>
   183dc:	ldr	r0, [pc, #176]	; 18494 <DisplayOptionsPanel_new@@Base+0x240>
   183e0:	bl	24034 <xStrdup@@Base>
   183e4:	add	r1, r5, #57	; 0x39
   183e8:	bl	16550 <CheckItem_newByRef@@Base>
   183ec:	mov	r1, r0
   183f0:	mov	r0, r4
   183f4:	bl	1b0d4 <Panel_add@@Base>
   183f8:	ldr	r0, [pc, #152]	; 18498 <DisplayOptionsPanel_new@@Base+0x244>
   183fc:	bl	24034 <xStrdup@@Base>
   18400:	add	r1, r5, #56	; 0x38
   18404:	bl	16550 <CheckItem_newByRef@@Base>
   18408:	mov	r1, r0
   1840c:	mov	r0, r4
   18410:	bl	1b0d4 <Panel_add@@Base>
   18414:	ldr	r0, [pc, #128]	; 1849c <DisplayOptionsPanel_new@@Base+0x248>
   18418:	bl	24034 <xStrdup@@Base>
   1841c:	add	r1, r5, #68	; 0x44
   18420:	bl	16550 <CheckItem_newByRef@@Base>
   18424:	mov	r1, r0
   18428:	mov	r0, r4
   1842c:	bl	1b0d4 <Panel_add@@Base>
   18430:	ldr	r0, [pc, #104]	; 184a0 <DisplayOptionsPanel_new@@Base+0x24c>
   18434:	bl	24034 <xStrdup@@Base>
   18438:	add	r1, r5, #69	; 0x45
   1843c:	bl	16550 <CheckItem_newByRef@@Base>
   18440:	mov	r1, r0
   18444:	mov	r0, r4
   18448:	bl	1b0d4 <Panel_add@@Base>
   1844c:	mov	r0, r4
   18450:	add	sp, sp, #16
   18454:	pop	{r4, r5, r6, pc}
   18458:	andeq	r2, r0, r8, lsr r1
   1845c:	andeq	sp, r3, r4, ror #18
   18460:	andeq	r9, r2, r8, lsr #8
   18464:	andeq	sp, r3, r0, lsr r0
   18468:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1846c:	andeq	r9, r2, r4, asr r4
   18470:	andeq	r9, r2, r0, ror #8
   18474:	andeq	r9, r2, r0, lsl #9
   18478:	muleq	r2, r4, r4
   1847c:			; <UNDEFINED> instruction: 0x000294b4
   18480:	ldrdeq	r9, [r2], -ip
   18484:	strdeq	r9, [r2], -r8
   18488:	andeq	r9, r2, ip, lsl #10
   1848c:	andeq	r9, r2, ip, lsr #10
   18490:	andeq	r9, r2, r8, asr r5
   18494:	andeq	r9, r2, r8, ror r5
   18498:			; <UNDEFINED> instruction: 0x000295bc
   1849c:	ldrdeq	r9, [r2], -ip
   184a0:	andeq	r9, r2, r4, lsl #12

000184a4 <FunctionBar_new@@Base>:
   184a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   184a8:	mov	r8, r0
   184ac:	mov	sl, r1
   184b0:	mov	r0, #1
   184b4:	mov	r1, #20
   184b8:	mov	r9, r2
   184bc:	bl	23fd8 <xCalloc@@Base>
   184c0:	mov	r1, #4
   184c4:	mov	r4, #0
   184c8:	mov	r5, r0
   184cc:	mov	r0, #16
   184d0:	bl	23fd8 <xCalloc@@Base>
   184d4:	cmp	r8, #0
   184d8:	ldreq	r8, [pc, #220]	; 185bc <FunctionBar_new@@Base+0x118>
   184dc:	ldrne	r3, [r8]
   184e0:	ldreq	r3, [pc, #216]	; 185c0 <FunctionBar_new@@Base+0x11c>
   184e4:	mov	r6, r8
   184e8:	str	r0, [r5, #4]
   184ec:	b	1850c <FunctionBar_new@@Base+0x68>
   184f0:	ldr	r7, [r5, #4]
   184f4:	bl	24034 <xStrdup@@Base>
   184f8:	str	r0, [r7, r4]
   184fc:	add	r4, r4, #4
   18500:	cmp	r4, #60	; 0x3c
   18504:	beq	18514 <FunctionBar_new@@Base+0x70>
   18508:	ldr	r3, [r6, #4]!
   1850c:	subs	r0, r3, #0
   18510:	bne	184f0 <FunctionBar_new@@Base+0x4c>
   18514:	cmp	sl, #0
   18518:	cmpne	r9, #0
   1851c:	bne	18544 <FunctionBar_new@@Base+0xa0>
   18520:	ldr	r0, [pc, #156]	; 185c4 <FunctionBar_new@@Base+0x120>
   18524:	ldr	r1, [pc, #156]	; 185c8 <FunctionBar_new@@Base+0x124>
   18528:	mov	r2, #1
   1852c:	mov	r3, #10
   18530:	strd	r0, [r5, #8]
   18534:	strb	r2, [r5, #16]
   18538:	str	r3, [r5]
   1853c:	mov	r0, r5
   18540:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18544:	mov	r4, #0
   18548:	mov	r1, #4
   1854c:	strb	r4, [r5, #16]
   18550:	mov	r0, #15
   18554:	bl	23fd8 <xCalloc@@Base>
   18558:	mov	r1, #4
   1855c:	sub	r8, r8, #4
   18560:	sub	sl, sl, #4
   18564:	sub	r9, r9, #4
   18568:	str	r0, [r5, #8]
   1856c:	mov	r0, #15
   18570:	bl	23fd8 <xCalloc@@Base>
   18574:	str	r0, [r5, #12]
   18578:	b	185a4 <FunctionBar_new@@Base+0x100>
   1857c:	ldr	r0, [sl, #4]!
   18580:	ldr	r6, [r5, #8]
   18584:	bl	24034 <xStrdup@@Base>
   18588:	ldr	r3, [r5, #12]
   1858c:	ldr	r2, [r9, #4]!
   18590:	str	r0, [r6, r4, lsl #2]
   18594:	str	r2, [r3, r4, lsl #2]
   18598:	add	r4, r4, #1
   1859c:	cmp	r4, #15
   185a0:	beq	185b0 <FunctionBar_new@@Base+0x10c>
   185a4:	ldr	r3, [r8, #4]!
   185a8:	cmp	r3, #0
   185ac:	bne	1857c <FunctionBar_new@@Base+0xd8>
   185b0:	str	r4, [r5]
   185b4:	mov	r0, r5
   185b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   185bc:	andeq	r9, r2, ip, lsr #12
   185c0:			; <UNDEFINED> instruction: 0x0002beb8
   185c4:	andeq	r9, r2, r8, asr r6
   185c8:	andeq	sp, r3, r8, ror r9

000185cc <FunctionBar_newEnterEsc@@Base>:
   185cc:	push	{r4, lr}
   185d0:	sub	sp, sp, #16
   185d4:	ldr	r4, [pc, #64]	; 1861c <FunctionBar_newEnterEsc@@Base+0x50>
   185d8:	ldr	r2, [pc, #64]	; 18620 <FunctionBar_newEnterEsc@@Base+0x54>
   185dc:	mov	r3, #0
   185e0:	ldr	ip, [r4]
   185e4:	str	r0, [sp]
   185e8:	str	r1, [sp, #4]
   185ec:	mov	r0, sp
   185f0:	add	r1, r2, #8
   185f4:	str	r3, [sp, #8]
   185f8:	str	ip, [sp, #12]
   185fc:	bl	184a4 <FunctionBar_new@@Base>
   18600:	ldr	r2, [sp, #12]
   18604:	ldr	r3, [r4]
   18608:	cmp	r2, r3
   1860c:	bne	18618 <FunctionBar_newEnterEsc@@Base+0x4c>
   18610:	add	sp, sp, #16
   18614:	pop	{r4, pc}
   18618:	bl	15084 <__stack_chk_fail@plt>
   1861c:			; <UNDEFINED> instruction: 0x0003ccb8
   18620:	andeq	r9, r2, r4, lsl #13

00018624 <FunctionBar_delete@@Base>:
   18624:	push	{r4, r5, r6, lr}
   18628:	mov	r5, r0
   1862c:	mov	r4, #0
   18630:	b	18640 <FunctionBar_delete@@Base+0x1c>
   18634:	bl	14fa0 <free@plt>
   18638:	cmp	r4, #60	; 0x3c
   1863c:	beq	186ac <FunctionBar_delete@@Base+0x88>
   18640:	ldr	r2, [r5, #4]
   18644:	ldr	r3, [r2, r4]
   18648:	add	r4, r4, #4
   1864c:	subs	r0, r3, #0
   18650:	bne	18634 <FunctionBar_delete@@Base+0x10>
   18654:	mov	r0, r2
   18658:	bl	14fa0 <free@plt>
   1865c:	ldrb	r4, [r5, #16]
   18660:	cmp	r4, #0
   18664:	bne	186a0 <FunctionBar_delete@@Base+0x7c>
   18668:	ldr	r3, [r5]
   1866c:	cmp	r3, #0
   18670:	ble	18690 <FunctionBar_delete@@Base+0x6c>
   18674:	ldr	r3, [r5, #8]
   18678:	ldr	r0, [r3, r4, lsl #2]
   1867c:	bl	14fa0 <free@plt>
   18680:	ldr	r3, [r5]
   18684:	add	r4, r4, #1
   18688:	cmp	r3, r4
   1868c:	bgt	18674 <FunctionBar_delete@@Base+0x50>
   18690:	ldr	r0, [r5, #8]
   18694:	bl	14fa0 <free@plt>
   18698:	ldr	r0, [r5, #12]
   1869c:	bl	14fa0 <free@plt>
   186a0:	mov	r0, r5
   186a4:	pop	{r4, r5, r6, lr}
   186a8:	b	14fa0 <free@plt>
   186ac:	ldr	r2, [r5, #4]
   186b0:	b	18654 <FunctionBar_delete@@Base+0x30>

000186b4 <FunctionBar_setLabel@@Base>:
   186b4:	push	{r4, r5, r6, lr}
   186b8:	ldr	r4, [r0]
   186bc:	cmp	r4, #0
   186c0:	pople	{r4, r5, r6, pc}
   186c4:	ldr	ip, [r0, #12]
   186c8:	ldr	r3, [ip]
   186cc:	cmp	r1, r3
   186d0:	movne	r3, #0
   186d4:	beq	1871c <FunctionBar_setLabel@@Base+0x68>
   186d8:	add	r3, r3, #1
   186dc:	cmp	r3, r4
   186e0:	popeq	{r4, r5, r6, pc}
   186e4:	ldr	lr, [ip, #4]!
   186e8:	lsl	r5, r3, #2
   186ec:	cmp	lr, r1
   186f0:	bne	186d8 <FunctionBar_setLabel@@Base+0x24>
   186f4:	ldr	r3, [r0, #4]
   186f8:	mov	r6, r2
   186fc:	mov	r4, r0
   18700:	ldr	r0, [r3, r5]
   18704:	bl	14fa0 <free@plt>
   18708:	mov	r0, r6
   1870c:	ldr	r4, [r4, #4]
   18710:	bl	24034 <xStrdup@@Base>
   18714:	str	r0, [r4, r5]
   18718:	pop	{r4, r5, r6, pc}
   1871c:	mov	r5, #0
   18720:	b	186f4 <FunctionBar_setLabel@@Base+0x40>

00018724 <FunctionBar_drawAttr@@Base>:
   18724:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18728:	mov	r6, r0
   1872c:	ldr	r7, [pc, #432]	; 188e4 <FunctionBar_drawAttr@@Base+0x1c0>
   18730:	ldr	r9, [pc, #432]	; 188e8 <FunctionBar_drawAttr@@Base+0x1c4>
   18734:	sub	sp, sp, #12
   18738:	ldr	r0, [r7]
   1873c:	mov	fp, r1
   18740:	cmp	r0, #0
   18744:	ldr	r1, [r9]
   18748:	ldrne	r3, [pc, #412]	; 188ec <FunctionBar_drawAttr@@Base+0x1c8>
   1874c:	str	r2, [sp, #4]
   18750:	sub	r1, r1, #1
   18754:	ldrne	r3, [r3]
   18758:	mov	r2, #0
   1875c:	ldrne	r3, [r3, #8]
   18760:	strne	r3, [r0, #16]
   18764:	bl	15360 <wmove@plt>
   18768:	cmn	r0, #1
   1876c:	beq	18784 <FunctionBar_drawAttr@@Base+0x60>
   18770:	ldr	r3, [pc, #376]	; 188f0 <FunctionBar_drawAttr@@Base+0x1cc>
   18774:	mov	r1, #32
   18778:	ldr	r0, [r7]
   1877c:	ldr	r2, [r3]
   18780:	bl	15048 <whline@plt>
   18784:	ldr	r3, [r6]
   18788:	cmp	r3, #0
   1878c:	movle	r4, #0
   18790:	ble	18858 <FunctionBar_drawAttr@@Base+0x134>
   18794:	mov	r5, #0
   18798:	ldr	sl, [pc, #332]	; 188ec <FunctionBar_drawAttr@@Base+0x1c8>
   1879c:	mov	r4, r5
   187a0:	ldr	r3, [r7]
   187a4:	ldr	r1, [r9]
   187a8:	subs	r0, r3, #0
   187ac:	mov	r2, r4
   187b0:	ldrne	ip, [sl]
   187b4:	sub	r1, r1, #1
   187b8:	lsl	r8, r5, #2
   187bc:	ldrne	ip, [ip, #12]
   187c0:	strne	ip, [r3, #16]
   187c4:	bl	15360 <wmove@plt>
   187c8:	mvn	r2, #0
   187cc:	cmp	r0, r2
   187d0:	beq	187e4 <FunctionBar_drawAttr@@Base+0xc0>
   187d4:	ldr	r3, [r6, #8]
   187d8:	ldr	r0, [r7]
   187dc:	ldr	r1, [r3, r5, lsl #2]
   187e0:	bl	15480 <waddnstr@plt>
   187e4:	ldr	r3, [r6, #8]
   187e8:	add	r5, r5, #1
   187ec:	ldr	r0, [r3, r8]
   187f0:	bl	152a0 <strlen@plt>
   187f4:	ldr	r3, [r7]
   187f8:	ldr	r1, [r9]
   187fc:	cmp	r3, #0
   18800:	sub	r1, r1, #1
   18804:	ldrne	ip, [sl]
   18808:	ldrne	ip, [ip, #8]
   1880c:	add	r4, r4, r0
   18810:	mov	r2, r4
   18814:	strne	ip, [r3, #16]
   18818:	mov	r0, r3
   1881c:	bl	15360 <wmove@plt>
   18820:	mvn	r2, #0
   18824:	cmp	r0, r2
   18828:	beq	1883c <FunctionBar_drawAttr@@Base+0x118>
   1882c:	ldr	r3, [r6, #4]
   18830:	ldr	r0, [r7]
   18834:	ldr	r1, [r3, r8]
   18838:	bl	15480 <waddnstr@plt>
   1883c:	ldr	r3, [r6, #4]
   18840:	ldr	r0, [r3, r8]
   18844:	bl	152a0 <strlen@plt>
   18848:	ldr	r3, [r6]
   1884c:	cmp	r3, r5
   18850:	add	r4, r4, r0
   18854:	bgt	187a0 <FunctionBar_drawAttr@@Base+0x7c>
   18858:	cmp	fp, #0
   1885c:	beq	188d8 <FunctionBar_drawAttr@@Base+0x1b4>
   18860:	ldr	r0, [r7]
   18864:	ldr	r1, [r9]
   18868:	cmp	r0, #0
   1886c:	sub	r1, r1, #1
   18870:	ldrne	r3, [sp, #4]
   18874:	mov	r2, r4
   18878:	strne	r3, [r0, #16]
   1887c:	bl	15360 <wmove@plt>
   18880:	cmn	r0, #1
   18884:	bne	188c4 <FunctionBar_drawAttr@@Base+0x1a0>
   18888:	mov	r0, fp
   1888c:	bl	152a0 <strlen@plt>
   18890:	ldr	r3, [pc, #92]	; 188f4 <FunctionBar_drawAttr@@Base+0x1d0>
   18894:	add	r4, r4, r0
   18898:	mov	r0, #1
   1889c:	str	r4, [r3]
   188a0:	bl	15030 <curs_set@plt>
   188a4:	ldr	r3, [r7]
   188a8:	cmp	r3, #0
   188ac:	ldrne	r2, [pc, #56]	; 188ec <FunctionBar_drawAttr@@Base+0x1c8>
   188b0:	ldrne	r2, [r2]
   188b4:	ldrne	r2, [r2]
   188b8:	strne	r2, [r3, #16]
   188bc:	add	sp, sp, #12
   188c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   188c4:	mvn	r2, #0
   188c8:	mov	r1, fp
   188cc:	ldr	r0, [r7]
   188d0:	bl	15480 <waddnstr@plt>
   188d4:	b	18888 <FunctionBar_drawAttr@@Base+0x164>
   188d8:	mov	r0, fp
   188dc:	bl	15030 <curs_set@plt>
   188e0:	b	188a4 <FunctionBar_drawAttr@@Base+0x180>
   188e4:	andeq	lr, r3, r8, lsl #15
   188e8:	andeq	lr, r3, r0, ror r7
   188ec:	muleq	r3, r8, r1
   188f0:	andeq	lr, r3, ip, ror r7
   188f4:	andeq	lr, r3, r4, lsr #15

000188f8 <FunctionBar_draw@@Base>:
   188f8:	ldr	r3, [pc, #8]	; 18908 <FunctionBar_draw@@Base+0x10>
   188fc:	ldr	r3, [r3]
   18900:	ldr	r2, [r3, #8]
   18904:	b	18724 <FunctionBar_drawAttr@@Base>
   18908:	muleq	r3, r8, r1

0001890c <FunctionBar_synthesizeEvent@@Base>:
   1890c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18910:	ldr	r9, [r0]
   18914:	cmp	r9, #0
   18918:	ble	1897c <FunctionBar_synthesizeEvent@@Base+0x70>
   1891c:	ldmib	r0, {r7, fp}
   18920:	mov	r4, #0
   18924:	mov	r8, r1
   18928:	mov	sl, r0
   1892c:	sub	fp, fp, #4
   18930:	sub	r7, r7, #4
   18934:	mov	r6, r4
   18938:	b	18944 <FunctionBar_synthesizeEvent@@Base+0x38>
   1893c:	cmp	r4, r9
   18940:	beq	1897c <FunctionBar_synthesizeEvent@@Base+0x70>
   18944:	ldr	r0, [fp, #4]!
   18948:	bl	152a0 <strlen@plt>
   1894c:	mov	r5, r0
   18950:	ldr	r0, [r7, #4]!
   18954:	bl	152a0 <strlen@plt>
   18958:	lsl	r3, r4, #2
   1895c:	add	r4, r4, #1
   18960:	add	r0, r5, r0
   18964:	add	r6, r0, r6
   18968:	cmp	r6, r8
   1896c:	ble	1893c <FunctionBar_synthesizeEvent@@Base+0x30>
   18970:	ldr	r2, [sl, #12]
   18974:	ldr	r0, [r2, r3]
   18978:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1897c:	mvn	r0, #0
   18980:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018984 <Hashtable_new@@Base>:
   18984:	push	{r4, r5, r6, lr}
   18988:	mov	r5, r0
   1898c:	mov	r0, #16
   18990:	mov	r6, r1
   18994:	bl	23fb0 <xMalloc@@Base>
   18998:	mov	r3, #0
   1899c:	mov	r1, #4
   189a0:	mov	r4, r0
   189a4:	str	r5, [r0]
   189a8:	mov	r0, r5
   189ac:	str	r3, [r4, #8]
   189b0:	bl	23fd8 <xCalloc@@Base>
   189b4:	strb	r6, [r4, #12]
   189b8:	str	r0, [r4, #4]
   189bc:	mov	r0, r4
   189c0:	pop	{r4, r5, r6, pc}

000189c4 <Hashtable_delete@@Base>:
   189c4:	ldr	r3, [r0]
   189c8:	push	{r4, r5, r6, r7, r8, lr}
   189cc:	cmp	r3, #0
   189d0:	mov	r6, r0
   189d4:	ldr	r0, [r0, #4]
   189d8:	ble	18a34 <Hashtable_delete@@Base+0x70>
   189dc:	mov	r7, #0
   189e0:	ldr	r4, [r0, r7, lsl #2]
   189e4:	cmp	r4, #0
   189e8:	bne	18a08 <Hashtable_delete@@Base+0x44>
   189ec:	b	18a28 <Hashtable_delete@@Base+0x64>
   189f0:	ldr	r5, [r4, #8]
   189f4:	mov	r0, r4
   189f8:	bl	14fa0 <free@plt>
   189fc:	cmp	r5, #0
   18a00:	mov	r4, r5
   18a04:	beq	18a20 <Hashtable_delete@@Base+0x5c>
   18a08:	ldrb	r3, [r6, #12]
   18a0c:	cmp	r3, #0
   18a10:	beq	189f0 <Hashtable_delete@@Base+0x2c>
   18a14:	ldr	r0, [r4, #4]
   18a18:	bl	14fa0 <free@plt>
   18a1c:	b	189f0 <Hashtable_delete@@Base+0x2c>
   18a20:	ldr	r0, [r6, #4]
   18a24:	ldr	r3, [r6]
   18a28:	add	r7, r7, #1
   18a2c:	cmp	r3, r7
   18a30:	bgt	189e0 <Hashtable_delete@@Base+0x1c>
   18a34:	bl	14fa0 <free@plt>
   18a38:	mov	r0, r6
   18a3c:	pop	{r4, r5, r6, r7, r8, lr}
   18a40:	b	14fa0 <free@plt>

00018a44 <Hashtable_put@@Base>:
   18a44:	push	{r4, r5, r6, r7, r8, lr}
   18a48:	mov	r6, r0
   18a4c:	mov	r4, r1
   18a50:	mov	r0, r1
   18a54:	ldr	r1, [r6]
   18a58:	mov	r7, r2
   18a5c:	bl	285c4 <Battery_getData@@Base+0x4b8>
   18a60:	ldr	r3, [r6, #4]
   18a64:	add	r5, r3, r1, lsl #2
   18a68:	ldr	r3, [r3, r1, lsl #2]
   18a6c:	cmp	r3, #0
   18a70:	bne	18a88 <Hashtable_put@@Base+0x44>
   18a74:	b	18ab4 <Hashtable_put@@Base+0x70>
   18a78:	add	r5, r3, #8
   18a7c:	ldr	r3, [r3, #8]
   18a80:	cmp	r3, #0
   18a84:	beq	18ab4 <Hashtable_put@@Base+0x70>
   18a88:	ldr	r2, [r3]
   18a8c:	cmp	r2, r4
   18a90:	bne	18a78 <Hashtable_put@@Base+0x34>
   18a94:	ldrb	r2, [r6, #12]
   18a98:	cmp	r2, #0
   18a9c:	beq	18aa8 <Hashtable_put@@Base+0x64>
   18aa0:	ldr	r0, [r3, #4]
   18aa4:	bl	14fa0 <free@plt>
   18aa8:	ldr	r3, [r5]
   18aac:	str	r7, [r3, #4]
   18ab0:	pop	{r4, r5, r6, r7, r8, pc}
   18ab4:	mov	r0, #12
   18ab8:	bl	23fb0 <xMalloc@@Base>
   18abc:	ldr	r3, [r6, #8]
   18ac0:	mov	r2, #0
   18ac4:	add	r3, r3, #1
   18ac8:	str	r4, [r0]
   18acc:	str	r7, [r0, #4]
   18ad0:	str	r2, [r0, #8]
   18ad4:	str	r0, [r5]
   18ad8:	str	r3, [r6, #8]
   18adc:	pop	{r4, r5, r6, r7, r8, pc}

00018ae0 <Hashtable_remove@@Base>:
   18ae0:	push	{r4, r5, r6, r7, r8, lr}
   18ae4:	mov	r5, r0
   18ae8:	mov	r4, r1
   18aec:	mov	r0, r1
   18af0:	ldr	r1, [r5]
   18af4:	bl	285c4 <Battery_getData@@Base+0x4b8>
   18af8:	ldr	r3, [r5, #4]
   18afc:	ldr	r0, [r3, r1, lsl #2]
   18b00:	add	r6, r3, r1, lsl #2
   18b04:	cmp	r0, #0
   18b08:	beq	18b7c <Hashtable_remove@@Base+0x9c>
   18b0c:	ldr	r3, [r0]
   18b10:	cmp	r4, r3
   18b14:	bne	18b2c <Hashtable_remove@@Base+0x4c>
   18b18:	b	18b84 <Hashtable_remove@@Base+0xa4>
   18b1c:	ldr	r2, [r3]
   18b20:	cmp	r2, r4
   18b24:	beq	18b44 <Hashtable_remove@@Base+0x64>
   18b28:	mov	r0, r3
   18b2c:	ldr	r3, [r0, #8]
   18b30:	cmp	r3, #0
   18b34:	bne	18b1c <Hashtable_remove@@Base+0x3c>
   18b38:	mov	r4, #0
   18b3c:	mov	r0, r4
   18b40:	pop	{r4, r5, r6, r7, r8, pc}
   18b44:	add	r6, r0, #8
   18b48:	mov	r0, r3
   18b4c:	ldmib	r3, {r4, r7}
   18b50:	bl	14fa0 <free@plt>
   18b54:	ldrb	r2, [r5, #12]
   18b58:	ldr	r3, [r5, #8]
   18b5c:	str	r7, [r6]
   18b60:	sub	r3, r3, #1
   18b64:	cmp	r2, #0
   18b68:	str	r3, [r5, #8]
   18b6c:	beq	18b3c <Hashtable_remove@@Base+0x5c>
   18b70:	mov	r0, r4
   18b74:	bl	14fa0 <free@plt>
   18b78:	b	18b38 <Hashtable_remove@@Base+0x58>
   18b7c:	mov	r4, r0
   18b80:	b	18b3c <Hashtable_remove@@Base+0x5c>
   18b84:	mov	r3, r0
   18b88:	b	18b48 <Hashtable_remove@@Base+0x68>

00018b8c <Hashtable_get@@Base>:
   18b8c:	push	{r4, r5, r6, lr}
   18b90:	mov	r5, r0
   18b94:	mov	r4, r1
   18b98:	mov	r0, r1
   18b9c:	ldr	r1, [r5]
   18ba0:	bl	285c4 <Battery_getData@@Base+0x4b8>
   18ba4:	ldr	r3, [r5, #4]
   18ba8:	ldr	r0, [r3, r1, lsl #2]
   18bac:	cmp	r0, #0
   18bb0:	popeq	{r4, r5, r6, pc}
   18bb4:	ldr	r3, [r0]
   18bb8:	cmp	r4, r3
   18bbc:	beq	18bd8 <Hashtable_get@@Base+0x4c>
   18bc0:	ldr	r0, [r0, #8]
   18bc4:	cmp	r0, #0
   18bc8:	popeq	{r4, r5, r6, pc}
   18bcc:	ldr	r3, [r0]
   18bd0:	cmp	r3, r4
   18bd4:	bne	18bc0 <Hashtable_get@@Base+0x34>
   18bd8:	ldr	r0, [r0, #4]
   18bdc:	pop	{r4, r5, r6, pc}

00018be0 <Hashtable_foreach@@Base>:
   18be0:	ldr	r3, [r0]
   18be4:	cmp	r3, #0
   18be8:	bxle	lr
   18bec:	push	{r4, r5, r6, r7, r8, lr}
   18bf0:	mov	r6, r2
   18bf4:	mov	r5, r1
   18bf8:	mov	r8, r0
   18bfc:	mov	r7, #0
   18c00:	ldr	r2, [r8, #4]
   18c04:	ldr	r4, [r2, r7, lsl #2]
   18c08:	cmp	r4, #0
   18c0c:	beq	18c2c <Hashtable_foreach@@Base+0x4c>
   18c10:	ldrd	r0, [r4]
   18c14:	mov	r2, r6
   18c18:	blx	r5
   18c1c:	ldr	r4, [r4, #8]
   18c20:	cmp	r4, #0
   18c24:	bne	18c10 <Hashtable_foreach@@Base+0x30>
   18c28:	ldr	r3, [r8]
   18c2c:	add	r7, r7, #1
   18c30:	cmp	r3, r7
   18c34:	bgt	18c00 <Hashtable_foreach@@Base+0x20>
   18c38:	pop	{r4, r5, r6, r7, r8, pc}

00018c3c <Header_new@@Base>:
   18c3c:	push	{r4, r5, r6, r7, r8, lr}
   18c40:	mov	r7, r0
   18c44:	mov	r8, r1
   18c48:	mov	r0, #1
   18c4c:	mov	r1, #24
   18c50:	mov	r4, r2
   18c54:	bl	23fd8 <xCalloc@@Base>
   18c58:	mov	r1, #4
   18c5c:	mov	r5, r0
   18c60:	mov	r0, r4
   18c64:	bl	23fd8 <xCalloc@@Base>
   18c68:	cmp	r4, #0
   18c6c:	str	r8, [r5, #4]
   18c70:	str	r7, [r5, #8]
   18c74:	str	r4, [r5, #12]
   18c78:	str	r0, [r5]
   18c7c:	ble	18cb8 <Header_new@@Base+0x7c>
   18c80:	mov	r6, r0
   18c84:	ldr	r7, [pc, #52]	; 18cc0 <Header_new@@Base+0x84>
   18c88:	mov	r4, #0
   18c8c:	b	18c94 <Header_new@@Base+0x58>
   18c90:	ldr	r6, [r5]
   18c94:	mvn	r2, #0
   18c98:	mov	r1, #1
   18c9c:	mov	r0, r7
   18ca0:	bl	20ce4 <Vector_new@@Base>
   18ca4:	ldr	r3, [r5, #12]
   18ca8:	str	r0, [r6, r4, lsl #2]
   18cac:	add	r4, r4, #1
   18cb0:	cmp	r3, r4
   18cb4:	bgt	18c90 <Header_new@@Base+0x54>
   18cb8:	mov	r0, r5
   18cbc:	pop	{r4, r5, r6, r7, r8, pc}
   18cc0:	strdeq	sp, [r3], -r0

00018cc4 <Header_delete@@Base>:
   18cc4:	ldr	r3, [r0, #12]
   18cc8:	push	{r4, r5, r6, lr}
   18ccc:	cmp	r3, #0
   18cd0:	mov	r5, r0
   18cd4:	ble	18cf8 <Header_delete@@Base+0x34>
   18cd8:	mov	r4, #0
   18cdc:	ldr	r3, [r5]
   18ce0:	ldr	r0, [r3, r4, lsl #2]
   18ce4:	bl	20d40 <Vector_delete@@Base>
   18ce8:	ldr	r3, [r5, #12]
   18cec:	add	r4, r4, #1
   18cf0:	cmp	r3, r4
   18cf4:	bgt	18cdc <Header_delete@@Base+0x18>
   18cf8:	ldr	r0, [r5]
   18cfc:	bl	14fa0 <free@plt>
   18d00:	mov	r0, r5
   18d04:	pop	{r4, r5, r6, lr}
   18d08:	b	14fa0 <free@plt>

00018d0c <Header_writeBackToSettings@@Base>:
   18d0c:	ldr	r3, [r0, #12]
   18d10:	cmp	r3, #0
   18d14:	bxle	lr
   18d18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d1c:	mov	fp, #0
   18d20:	sub	sp, sp, #36	; 0x24
   18d24:	str	r0, [sp, #28]
   18d28:	ldr	r4, [sp, #28]
   18d2c:	lsl	r3, fp, #1
   18d30:	str	r3, [sp, #24]
   18d34:	add	r8, r3, fp
   18d38:	ldr	r3, [r4, #4]
   18d3c:	add	r8, r3, r8, lsl #2
   18d40:	str	r3, [sp, #20]
   18d44:	ldr	r0, [r8, #8]
   18d48:	bl	1fdc4 <String_freeArray@@Base>
   18d4c:	ldr	r0, [r8, #12]
   18d50:	bl	14fa0 <free@plt>
   18d54:	ldr	r3, [r4]
   18d58:	mov	r1, #4
   18d5c:	ldr	sl, [r3, fp, lsl #2]
   18d60:	ldr	r9, [sl, #16]
   18d64:	add	r0, r9, #1
   18d68:	bl	23fd8 <xCalloc@@Base>
   18d6c:	mov	r1, #4
   18d70:	str	r0, [r8, #8]
   18d74:	mov	r0, r9
   18d78:	bl	23fd8 <xCalloc@@Base>
   18d7c:	cmp	r9, #0
   18d80:	str	r9, [r8, #4]
   18d84:	str	r0, [r8, #12]
   18d88:	ble	18e50 <Header_writeBackToSettings@@Base+0x144>
   18d8c:	mov	r4, #0
   18d90:	b	18df4 <Header_writeBackToSettings@@Base+0xe8>
   18d94:	str	r3, [sp, #8]
   18d98:	ldr	r1, [r5]
   18d9c:	ldr	ip, [pc, #200]	; 18e6c <Header_writeBackToSettings@@Base+0x160>
   18da0:	mvn	r3, #0
   18da4:	ldr	r1, [r1, #52]	; 0x34
   18da8:	mov	r2, #1
   18dac:	str	r1, [sp, #4]
   18db0:	str	ip, [sp]
   18db4:	mov	r1, #63	; 0x3f
   18db8:	bl	15510 <__snprintf_chk@plt>
   18dbc:	cmp	r0, #62	; 0x3e
   18dc0:	bhi	18e38 <Header_writeBackToSettings@@Base+0x12c>
   18dc4:	ldr	r3, [sp, #24]
   18dc8:	ldr	r2, [sp, #20]
   18dcc:	add	r3, r3, fp
   18dd0:	ldr	r1, [r8, #8]
   18dd4:	add	r3, r2, r3, lsl #2
   18dd8:	add	r4, r4, #1
   18ddc:	ldr	r3, [r3, #12]
   18de0:	ldr	r2, [r5, #12]
   18de4:	cmp	r9, r4
   18de8:	str	r7, [r1, r6]
   18dec:	str	r2, [r3, r6]
   18df0:	beq	18e50 <Header_writeBackToSettings@@Base+0x144>
   18df4:	ldr	r3, [sl]
   18df8:	mov	r1, #1
   18dfc:	mov	r0, #64	; 0x40
   18e00:	ldr	r5, [r3, r4, lsl #2]
   18e04:	bl	23fd8 <xCalloc@@Base>
   18e08:	lsl	r6, r4, #2
   18e0c:	ldr	r3, [r5, #16]
   18e10:	cmp	r3, #0
   18e14:	mov	r7, r0
   18e18:	bne	18d94 <Header_writeBackToSettings@@Base+0x88>
   18e1c:	ldr	r3, [r5]
   18e20:	ldr	r2, [pc, #72]	; 18e70 <Header_writeBackToSettings@@Base+0x164>
   18e24:	mov	r1, #63	; 0x3f
   18e28:	ldr	r3, [r3, #52]	; 0x34
   18e2c:	bl	1530c <snprintf@plt>
   18e30:	cmp	r0, #62	; 0x3e
   18e34:	bls	18dc4 <Header_writeBackToSettings@@Base+0xb8>
   18e38:	mov	r0, #1
   18e3c:	bl	15030 <curs_set@plt>
   18e40:	bl	14f28 <endwin@plt>
   18e44:	mov	r1, #0
   18e48:	mov	r0, #1
   18e4c:	bl	15114 <err@plt>
   18e50:	ldr	r3, [sp, #28]
   18e54:	add	fp, fp, #1
   18e58:	ldr	r3, [r3, #12]
   18e5c:	cmp	r3, fp
   18e60:	bgt	18d28 <Header_writeBackToSettings@@Base+0x1c>
   18e64:	add	sp, sp, #36	; 0x24
   18e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e6c:	andeq	r9, r2, ip, asr #13
   18e70:	strdeq	fp, [r2], -r0

00018e74 <Header_addMeterByName@@Base>:
   18e74:	push	{r4, r5, r6, r7, r8, lr}
   18e78:	sub	sp, sp, #8
   18e7c:	ldr	r6, [pc, #200]	; 18f4c <Header_addMeterByName@@Base+0xd8>
   18e80:	ldr	ip, [r0]
   18e84:	mov	r7, r0
   18e88:	ldr	r3, [r6]
   18e8c:	mov	r0, r1
   18e90:	mov	r5, r1
   18e94:	mov	r1, #40	; 0x28
   18e98:	ldr	r8, [ip, r2, lsl #2]
   18e9c:	str	r3, [sp, #4]
   18ea0:	bl	152c4 <strchr@plt>
   18ea4:	mov	r3, #0
   18ea8:	str	r3, [sp]
   18eac:	subs	r4, r0, #0
   18eb0:	beq	18ed0 <Header_addMeterByName@@Base+0x5c>
   18eb4:	mov	r2, sp
   18eb8:	ldr	r1, [pc, #144]	; 18f50 <Header_addMeterByName@@Base+0xdc>
   18ebc:	bl	15468 <sscanf@plt>
   18ec0:	mov	r3, #0
   18ec4:	strb	r3, [r4]
   18ec8:	cmp	r0, #0
   18ecc:	streq	r0, [sp]
   18ed0:	ldr	r4, [pc, #124]	; 18f54 <Header_addMeterByName@@Base+0xe0>
   18ed4:	ldr	r3, [r4]
   18ed8:	cmp	r3, #0
   18edc:	bne	18ef0 <Header_addMeterByName@@Base+0x7c>
   18ee0:	b	18f2c <Header_addMeterByName@@Base+0xb8>
   18ee4:	ldr	r3, [r4, #4]!
   18ee8:	cmp	r3, #0
   18eec:	beq	18f2c <Header_addMeterByName@@Base+0xb8>
   18ef0:	ldr	r1, [r3, #52]	; 0x34
   18ef4:	mov	r0, r5
   18ef8:	bl	1fc78 <String_eq@@Base>
   18efc:	cmp	r0, #0
   18f00:	beq	18ee4 <Header_addMeterByName@@Base+0x70>
   18f04:	ldr	r2, [r4]
   18f08:	ldr	r1, [sp]
   18f0c:	ldr	r0, [r7, #8]
   18f10:	bl	1a6b4 <Meter_new@@Base>
   18f14:	mov	r4, r0
   18f18:	mov	r1, r0
   18f1c:	mov	r0, r8
   18f20:	bl	21094 <Vector_add@@Base>
   18f24:	ldr	r0, [r4, #12]
   18f28:	b	18f30 <Header_addMeterByName@@Base+0xbc>
   18f2c:	mov	r0, #2
   18f30:	ldr	r2, [sp, #4]
   18f34:	ldr	r3, [r6]
   18f38:	cmp	r2, r3
   18f3c:	bne	18f48 <Header_addMeterByName@@Base+0xd4>
   18f40:	add	sp, sp, #8
   18f44:	pop	{r4, r5, r6, r7, r8, pc}
   18f48:	bl	15084 <__stack_chk_fail@plt>
   18f4c:			; <UNDEFINED> instruction: 0x0003ccb8
   18f50:	ldrdeq	r9, [r2], -r4
   18f54:	andeq	sp, r3, r4, lsl pc

00018f58 <Header_setMode@@Base>:
   18f58:	ldr	ip, [r0]
   18f5c:	mov	r0, r1
   18f60:	ldr	r3, [ip, r3, lsl #2]
   18f64:	ldr	ip, [r3, #16]
   18f68:	cmp	ip, r1
   18f6c:	bxle	lr
   18f70:	ldr	r3, [r3]
   18f74:	mov	r1, r2
   18f78:	ldr	r0, [r3, r0, lsl #2]
   18f7c:	b	1a61c <Meter_setMode@@Base>

00018f80 <Header_addMeterByClass@@Base>:
   18f80:	ldr	ip, [r0]
   18f84:	push	{r4, r5, r6, lr}
   18f88:	mov	lr, r2
   18f8c:	ldr	r0, [r0, #8]
   18f90:	mov	r2, r1
   18f94:	mov	r1, lr
   18f98:	ldr	r5, [ip, r3, lsl #2]
   18f9c:	bl	1a6b4 <Meter_new@@Base>
   18fa0:	mov	r4, r0
   18fa4:	mov	r1, r0
   18fa8:	mov	r0, r5
   18fac:	bl	21094 <Vector_add@@Base>
   18fb0:	mov	r0, r4
   18fb4:	pop	{r4, r5, r6, pc}

00018fb8 <Header_size@@Base>:
   18fb8:	ldr	r3, [r0]
   18fbc:	ldr	r3, [r3, r1, lsl #2]
   18fc0:	ldr	r0, [r3, #16]
   18fc4:	bx	lr

00018fc8 <Header_readMeterName@@Base>:
   18fc8:	ldr	r3, [r0]
   18fcc:	push	{r4, r5, r6, lr}
   18fd0:	sub	sp, sp, #8
   18fd4:	ldr	r3, [r3, r2, lsl #2]
   18fd8:	ldr	r3, [r3]
   18fdc:	ldr	r5, [r3, r1, lsl #2]
   18fe0:	ldr	r3, [r5]
   18fe4:	ldr	r0, [r3, #52]	; 0x34
   18fe8:	bl	152a0 <strlen@plt>
   18fec:	mov	r4, r0
   18ff0:	add	r0, r0, #100	; 0x64
   18ff4:	bl	23fb0 <xMalloc@@Base>
   18ff8:	ldr	r3, [r5]
   18ffc:	mov	r2, r4
   19000:	ldr	r1, [r3, #52]	; 0x34
   19004:	mov	r6, r0
   19008:	bl	1533c <strncpy@plt>
   1900c:	mov	r3, #0
   19010:	strb	r3, [r6, r4]
   19014:	ldr	r3, [r5, #16]
   19018:	add	r0, r6, r4
   1901c:	cmp	r3, #0
   19020:	beq	1903c <Header_readMeterName@@Base+0x74>
   19024:	ldr	r2, [pc, #28]	; 19048 <Header_readMeterName@@Base+0x80>
   19028:	mov	r1, #100	; 0x64
   1902c:	strd	r2, [sp]
   19030:	mvn	r3, #0
   19034:	mov	r2, #1
   19038:	bl	15510 <__snprintf_chk@plt>
   1903c:	mov	r0, r6
   19040:	add	sp, sp, #8
   19044:	pop	{r4, r5, r6, pc}
   19048:	ldrdeq	r9, [r2], -ip

0001904c <Header_readMeterMode@@Base>:
   1904c:	ldr	r3, [r0]
   19050:	ldr	r3, [r3, r2, lsl #2]
   19054:	ldr	r3, [r3]
   19058:	ldr	r3, [r3, r1, lsl #2]
   1905c:	ldr	r0, [r3, #12]
   19060:	bx	lr

00019064 <Header_reinit@@Base>:
   19064:	ldr	r1, [r0, #12]
   19068:	cmp	r1, #0
   1906c:	bxle	lr
   19070:	ldr	r2, [r0]
   19074:	push	{r4, r5, r6, r7, r8, lr}
   19078:	mov	r5, r0
   1907c:	mov	r7, #0
   19080:	ldr	r3, [r2, r7, lsl #2]
   19084:	lsl	r6, r7, #2
   19088:	ldr	r0, [r3, #16]
   1908c:	cmp	r0, #0
   19090:	movgt	r4, #0
   19094:	ble	190d4 <Header_reinit@@Base+0x70>
   19098:	ldr	r3, [r3]
   1909c:	ldr	r3, [r3, r4, lsl #2]
   190a0:	add	r4, r4, #1
   190a4:	mov	r0, r3
   190a8:	ldr	r3, [r3]
   190ac:	ldr	r3, [r3, #16]
   190b0:	cmp	r3, #0
   190b4:	beq	190c0 <Header_reinit@@Base+0x5c>
   190b8:	blx	r3
   190bc:	ldr	r2, [r5]
   190c0:	ldr	r3, [r2, r6]
   190c4:	ldr	r1, [r3, #16]
   190c8:	cmp	r1, r4
   190cc:	bgt	19098 <Header_reinit@@Base+0x34>
   190d0:	ldr	r1, [r5, #12]
   190d4:	add	r7, r7, #1
   190d8:	cmp	r1, r7
   190dc:	bgt	19080 <Header_reinit@@Base+0x1c>
   190e0:	pop	{r4, r5, r6, r7, r8, pc}

000190e4 <Header_draw@@Base>:
   190e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190e8:	mov	r8, r0
   190ec:	ldr	r5, [pc, #276]	; 19208 <Header_draw@@Base+0x124>
   190f0:	ldr	r6, [r8, #20]
   190f4:	ldr	r9, [r8, #16]
   190f8:	ldr	r0, [r5]
   190fc:	sub	sp, sp, #12
   19100:	cmp	r0, #0
   19104:	ldr	r7, [pc, #256]	; 1920c <Header_draw@@Base+0x128>
   19108:	ldrne	r3, [pc, #256]	; 19210 <Header_draw@@Base+0x12c>
   1910c:	ldrne	r3, [r3]
   19110:	ldrne	r3, [r3]
   19114:	strne	r3, [r0, #16]
   19118:	cmp	r6, #0
   1911c:	movgt	r4, #0
   19120:	bgt	1912c <Header_draw@@Base+0x48>
   19124:	b	1915c <Header_draw@@Base+0x78>
   19128:	ldr	r0, [r5]
   1912c:	mov	r1, r4
   19130:	mov	r2, #0
   19134:	bl	15360 <wmove@plt>
   19138:	add	r4, r4, #1
   1913c:	mov	r1, #32
   19140:	cmn	r0, #1
   19144:	beq	19154 <Header_draw@@Base+0x70>
   19148:	ldr	r2, [r7]
   1914c:	ldr	r0, [r5]
   19150:	bl	15048 <whline@plt>
   19154:	cmp	r6, r4
   19158:	bne	19128 <Header_draw@@Base+0x44>
   1915c:	ldr	r4, [r8, #12]
   19160:	ldr	r0, [r7]
   19164:	mov	r1, r4
   19168:	bl	285e4 <Battery_getData@@Base+0x4d8>
   1916c:	mul	sl, r9, r4
   19170:	cmp	r4, #0
   19174:	sub	sl, r0, sl
   19178:	ble	19200 <Header_draw@@Base+0x11c>
   1917c:	add	r3, r9, r9, lsr #31
   19180:	mov	fp, #0
   19184:	add	r2, r9, sl
   19188:	asr	r3, r3, #1
   1918c:	str	r2, [sp]
   19190:	str	r3, [sp, #4]
   19194:	ldr	r3, [r8]
   19198:	ldr	r7, [r3, fp, lsl #2]
   1919c:	ldr	r3, [r7, #16]
   191a0:	cmp	r3, #0
   191a4:	ble	191ec <Header_draw@@Base+0x108>
   191a8:	ldr	r6, [sp, #4]
   191ac:	mov	r4, #0
   191b0:	ldr	r1, [r7]
   191b4:	mov	r2, r6
   191b8:	mov	r3, sl
   191bc:	ldr	r5, [r1, r4, lsl #2]
   191c0:	mov	r1, r9
   191c4:	mov	r0, r5
   191c8:	ldr	ip, [r5, #4]
   191cc:	blx	ip
   191d0:	ldr	r2, [r7, #16]
   191d4:	add	r4, r4, #1
   191d8:	ldr	r3, [r5, #24]
   191dc:	cmp	r2, r4
   191e0:	add	r6, r6, r3
   191e4:	bgt	191b0 <Header_draw@@Base+0xcc>
   191e8:	ldr	r4, [r8, #12]
   191ec:	add	fp, fp, #1
   191f0:	ldr	r3, [sp]
   191f4:	cmp	r4, fp
   191f8:	add	r9, r9, r3
   191fc:	bgt	19194 <Header_draw@@Base+0xb0>
   19200:	add	sp, sp, #12
   19204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19208:	andeq	lr, r3, r8, lsl #15
   1920c:	andeq	lr, r3, ip, ror r7
   19210:	muleq	r3, r8, r1

00019214 <Header_calculateHeight@@Base>:
   19214:	ldr	r3, [r0, #4]
   19218:	push	{r4, r5, r6, lr}
   1921c:	mov	r6, r0
   19220:	ldrb	r3, [r3, #70]	; 0x46
   19224:	ldr	r4, [r0, #12]
   19228:	cmp	r3, #0
   1922c:	movne	r5, #2
   19230:	moveq	r5, #0
   19234:	cmp	r4, #0
   19238:	movle	r0, r5
   1923c:	ble	19298 <Header_calculateHeight@@Base+0x84>
   19240:	ldr	lr, [r6]
   19244:	mov	r0, r5
   19248:	sub	lr, lr, #4
   1924c:	add	r4, lr, r4, lsl #2
   19250:	ldr	r3, [lr, #4]!
   19254:	ldr	ip, [r3, #16]
   19258:	cmp	ip, #0
   1925c:	movle	r2, r5
   19260:	ble	19288 <Header_calculateHeight@@Base+0x74>
   19264:	ldr	r3, [r3]
   19268:	mov	r2, r5
   1926c:	sub	r3, r3, #4
   19270:	add	ip, r3, ip, lsl #2
   19274:	ldr	r1, [r3, #4]!
   19278:	cmp	ip, r3
   1927c:	ldr	r1, [r1, #24]
   19280:	add	r2, r2, r1
   19284:	bne	19274 <Header_calculateHeight@@Base+0x60>
   19288:	cmp	r0, r2
   1928c:	movlt	r0, r2
   19290:	cmp	lr, r4
   19294:	bne	19250 <Header_calculateHeight@@Base+0x3c>
   19298:	str	r0, [r6, #20]
   1929c:	str	r5, [r6, #16]
   192a0:	pop	{r4, r5, r6, pc}

000192a4 <Header_populateFromSettings@@Base>:
   192a4:	ldr	r3, [r0, #12]
   192a8:	push	{r4, r5, r6, r7, r8, lr}
   192ac:	cmp	r3, #0
   192b0:	mov	r7, r0
   192b4:	ble	19344 <Header_populateFromSettings@@Base+0xa0>
   192b8:	mov	r6, #0
   192bc:	add	r2, r6, r6, lsl #1
   192c0:	ldr	r5, [r7, #4]
   192c4:	add	r5, r5, r2, lsl #2
   192c8:	ldr	r2, [r5, #4]
   192cc:	cmp	r2, #0
   192d0:	ble	19338 <Header_populateFromSettings@@Base+0x94>
   192d4:	mov	r4, #0
   192d8:	mov	r8, r5
   192dc:	b	192f0 <Header_populateFromSettings@@Base+0x4c>
   192e0:	ldr	r3, [r5, #4]
   192e4:	add	r4, r4, #1
   192e8:	cmp	r3, r4
   192ec:	ble	19334 <Header_populateFromSettings@@Base+0x90>
   192f0:	ldr	r3, [r5, #8]
   192f4:	mov	r2, r6
   192f8:	mov	r0, r7
   192fc:	ldr	r1, [r3, r4, lsl #2]
   19300:	bl	18e74 <Header_addMeterByName@@Base>
   19304:	ldr	r3, [r8, #12]
   19308:	ldr	r2, [r3, r4, lsl #2]
   1930c:	cmp	r2, #0
   19310:	beq	192e0 <Header_populateFromSettings@@Base+0x3c>
   19314:	mov	r3, r6
   19318:	mov	r1, r4
   1931c:	mov	r0, r7
   19320:	bl	18f58 <Header_setMode@@Base>
   19324:	ldr	r3, [r5, #4]
   19328:	add	r4, r4, #1
   1932c:	cmp	r3, r4
   19330:	bgt	192f0 <Header_populateFromSettings@@Base+0x4c>
   19334:	ldr	r3, [r7, #12]
   19338:	add	r6, r6, #1
   1933c:	cmp	r3, r6
   19340:	bgt	192bc <Header_populateFromSettings@@Base+0x18>
   19344:	mov	r0, r7
   19348:	pop	{r4, r5, r6, r7, r8, lr}
   1934c:	b	19214 <Header_calculateHeight@@Base>
   19350:	push	{r4, lr}
   19354:	mov	r4, r0
   19358:	ldr	r0, [r0, #4]
   1935c:	bl	14fa0 <free@plt>
   19360:	mov	r0, r4
   19364:	pop	{r4, lr}
   19368:	b	14fa0 <free@plt>
   1936c:	ldrb	r3, [r0, #12]
   19370:	push	{r4, r5, r6, lr}
   19374:	mov	r5, r0
   19378:	cmp	r3, #0
   1937c:	mov	r4, r1
   19380:	beq	193c8 <Header_populateFromSettings@@Base+0x124>
   19384:	ldr	r3, [pc, #76]	; 193d8 <Header_populateFromSettings@@Base+0x134>
   19388:	ldr	r6, [pc, #76]	; 193dc <Header_populateFromSettings@@Base+0x138>
   1938c:	ldr	r2, [pc, #76]	; 193e0 <Header_populateFromSettings@@Base+0x13c>
   19390:	ldrb	r0, [r3]
   19394:	ldr	r1, [r6]
   19398:	ldr	r3, [pc, #68]	; 193e4 <Header_populateFromSettings@@Base+0x140>
   1939c:	cmp	r0, #0
   193a0:	ldr	r1, [r1, #4]
   193a4:	moveq	r2, r3
   193a8:	mov	r0, r4
   193ac:	bl	1dedc <RichString_write@@Base>
   193b0:	ldr	r3, [r6]
   193b4:	ldr	r2, [r5, #4]
   193b8:	mov	r0, r4
   193bc:	ldr	r1, [r3, #4]
   193c0:	pop	{r4, r5, r6, lr}
   193c4:	b	1dc64 <RichString_append@@Base>
   193c8:	mov	r0, r1
   193cc:	bl	1dbf0 <RichString_prune@@Base>
   193d0:	ldr	r6, [pc, #4]	; 193dc <Header_populateFromSettings@@Base+0x138>
   193d4:	b	193b0 <Header_populateFromSettings@@Base+0x10c>
   193d8:	andeq	lr, r3, r0, lsr #15
   193dc:	muleq	r3, r8, r1
   193e0:	andeq	r9, r2, r8, asr #21
   193e4:	ldrdeq	r9, [r2], -r0

000193e8 <ListItem_compare@@Base>:
   193e8:	ldr	r1, [r1, #4]
   193ec:	ldr	r0, [r0, #4]
   193f0:	b	14f34 <strcmp@plt>

000193f4 <ListItem_new@@Base>:
   193f4:	push	{r4, r5, r6, lr}
   193f8:	mov	r6, r0
   193fc:	mov	r0, #16
   19400:	mov	r5, r1
   19404:	bl	23fb0 <xMalloc@@Base>
   19408:	ldr	r3, [pc, #36]	; 19434 <ListItem_new@@Base+0x40>
   1940c:	mov	r4, r0
   19410:	mov	r0, r6
   19414:	str	r3, [r4]
   19418:	bl	24034 <xStrdup@@Base>
   1941c:	mov	r3, #0
   19420:	str	r5, [r4, #8]
   19424:	strb	r3, [r4, #12]
   19428:	str	r0, [r4, #4]
   1942c:	mov	r0, r4
   19430:	pop	{r4, r5, r6, pc}
   19434:	andeq	sp, r3, r0, asr sl

00019438 <ListItem_append@@Base>:
   19438:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1943c:	mov	r4, r0
   19440:	ldr	r9, [r0, #4]
   19444:	mov	r7, r1
   19448:	mov	r0, r9
   1944c:	bl	152a0 <strlen@plt>
   19450:	mov	r6, r0
   19454:	mov	r0, r7
   19458:	bl	152a0 <strlen@plt>
   1945c:	add	r5, r6, r0
   19460:	mov	r8, r0
   19464:	add	r1, r5, #1
   19468:	mov	r0, r9
   1946c:	bl	2400c <xRealloc@@Base>
   19470:	mov	r2, r8
   19474:	mov	r1, r7
   19478:	str	r0, [r4, #4]
   1947c:	add	r0, r0, r6
   19480:	bl	14fe8 <memcpy@plt>
   19484:	ldr	r3, [r4, #4]
   19488:	mov	r2, #0
   1948c:	strb	r2, [r3, r5]
   19490:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00019494 <ListItem_getRef@@Base>:
   19494:	ldr	r0, [r0, #4]
   19498:	bx	lr
   1949c:	ldr	r3, [r0, #32]
   194a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   194a4:	sub	sp, sp, #40	; 0x28
   194a8:	ldr	r8, [pc, #260]	; 195b4 <ListItem_getRef@@Base+0x120>
   194ac:	ldrd	sl, [r3]
   194b0:	ldr	r4, [pc, #256]	; 195b8 <ListItem_getRef@@Base+0x124>
   194b4:	ldr	ip, [r8]
   194b8:	mov	r3, #20
   194bc:	mov	r5, r0
   194c0:	mov	r6, r1
   194c4:	strd	sl, [sp, #8]
   194c8:	str	r4, [sp]
   194cc:	add	r0, sp, #16
   194d0:	mov	r1, r3
   194d4:	mov	r2, #1
   194d8:	str	ip, [sp, #36]	; 0x24
   194dc:	bl	15510 <__snprintf_chk@plt>
   194e0:	cmp	r0, #19
   194e4:	bgt	19598 <ListItem_getRef@@Base+0x104>
   194e8:	ldr	r7, [pc, #204]	; 195bc <ListItem_getRef@@Base+0x128>
   194ec:	add	r2, sp, #16
   194f0:	mov	r0, r6
   194f4:	ldr	r3, [r7]
   194f8:	ldr	r1, [r3, #164]	; 0xa4
   194fc:	bl	1dedc <RichString_write@@Base>
   19500:	ldr	r2, [r5, #32]
   19504:	mov	r3, #20
   19508:	mov	r1, r3
   1950c:	ldrd	sl, [r2, #8]
   19510:	add	r0, sp, #16
   19514:	str	r4, [sp]
   19518:	mov	r2, #1
   1951c:	strd	sl, [sp, #8]
   19520:	bl	15510 <__snprintf_chk@plt>
   19524:	cmp	r0, #19
   19528:	bgt	19598 <ListItem_getRef@@Base+0x104>
   1952c:	ldr	r3, [r7]
   19530:	add	r2, sp, #16
   19534:	mov	r0, r6
   19538:	ldr	r1, [r3, #160]	; 0xa0
   1953c:	bl	1dc64 <RichString_append@@Base>
   19540:	ldr	r2, [r5, #32]
   19544:	mov	r3, #20
   19548:	mov	r1, r3
   1954c:	ldrd	sl, [r2, #16]
   19550:	add	r0, sp, #16
   19554:	str	r4, [sp]
   19558:	mov	r2, #1
   1955c:	strd	sl, [sp, #8]
   19560:	bl	15510 <__snprintf_chk@plt>
   19564:	cmp	r0, #19
   19568:	bgt	19598 <ListItem_getRef@@Base+0x104>
   1956c:	ldr	r3, [r7]
   19570:	add	r2, sp, #16
   19574:	mov	r0, r6
   19578:	ldr	r1, [r3, #156]	; 0x9c
   1957c:	bl	1dc64 <RichString_append@@Base>
   19580:	ldr	r2, [sp, #36]	; 0x24
   19584:	ldr	r3, [r8]
   19588:	cmp	r2, r3
   1958c:	bne	195b0 <ListItem_getRef@@Base+0x11c>
   19590:	add	sp, sp, #40	; 0x28
   19594:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19598:	mov	r0, #1
   1959c:	bl	15030 <curs_set@plt>
   195a0:	bl	14f28 <endwin@plt>
   195a4:	mov	r1, #0
   195a8:	mov	r0, #1
   195ac:	bl	15114 <err@plt>
   195b0:	bl	15084 <__stack_chk_fail@plt>
   195b4:			; <UNDEFINED> instruction: 0x0003ccb8
   195b8:	ldrdeq	r9, [r2], -r4
   195bc:	muleq	r3, r8, r1
   195c0:	push	{r4, r5, r6, r7, lr}
   195c4:	mov	r5, r0
   195c8:	ldr	r0, [r0, #32]
   195cc:	sub	sp, sp, #36	; 0x24
   195d0:	mov	r6, r1
   195d4:	mov	r4, r2
   195d8:	add	r1, r0, #8
   195dc:	add	r2, r0, #16
   195e0:	bl	24174 <Platform_getLoadAverage@@Base>
   195e4:	ldr	ip, [r5, #32]
   195e8:	mov	r0, r6
   195ec:	ldr	lr, [pc, #60]	; 19630 <ListItem_getRef@@Base+0x19c>
   195f0:	ldrd	r6, [ip, #16]
   195f4:	mov	r1, r4
   195f8:	mvn	r3, #0
   195fc:	strd	r6, [sp, #24]
   19600:	ldrd	r6, [ip, #8]
   19604:	mov	r2, #1
   19608:	strd	r6, [sp, #16]
   1960c:	ldrd	r6, [ip]
   19610:	str	lr, [sp]
   19614:	strd	r6, [sp, #8]
   19618:	bl	15510 <__snprintf_chk@plt>
   1961c:	cmp	r4, r0
   19620:	ble	1962c <ListItem_getRef@@Base+0x198>
   19624:	add	sp, sp, #36	; 0x24
   19628:	pop	{r4, r5, r6, r7, pc}
   1962c:	bl	15528 <backtrace_symbols_fd@plt+0xc>
   19630:	ldrdeq	r9, [r2], -ip
   19634:	push	{r4, r5, r6, r7, lr}
   19638:	mov	r4, r0
   1963c:	ldr	r6, [pc, #132]	; 196c8 <ListItem_getRef@@Base+0x234>
   19640:	sub	sp, sp, #44	; 0x2c
   19644:	mov	r5, r2
   19648:	ldr	r3, [r6]
   1964c:	mov	r7, r1
   19650:	ldr	r0, [r0, #32]
   19654:	add	r2, sp, #24
   19658:	add	r1, sp, #16
   1965c:	str	r3, [sp, #36]	; 0x24
   19660:	bl	24174 <Platform_getLoadAverage@@Base>
   19664:	ldr	r3, [r4, #32]
   19668:	vldr	d6, [r4, #40]	; 0x28
   1966c:	mov	r0, r7
   19670:	vldr	d7, [r3]
   19674:	mov	r2, #1
   19678:	mov	r1, r5
   1967c:	vcmpe.f64	d7, d6
   19680:	vmrs	APSR_nzcv, fpscr
   19684:	vstrgt	d7, [r4, #40]	; 0x28
   19688:	vldrgt	d7, [r3]
   1968c:	ldr	r3, [pc, #56]	; 196cc <ListItem_getRef@@Base+0x238>
   19690:	str	r3, [sp]
   19694:	vstr	d7, [sp, #8]
   19698:	mvn	r3, #0
   1969c:	bl	15510 <__snprintf_chk@plt>
   196a0:	cmp	r5, r0
   196a4:	ble	196c0 <ListItem_getRef@@Base+0x22c>
   196a8:	ldr	r2, [sp, #36]	; 0x24
   196ac:	ldr	r3, [r6]
   196b0:	cmp	r2, r3
   196b4:	bne	196c4 <ListItem_getRef@@Base+0x230>
   196b8:	add	sp, sp, #44	; 0x2c
   196bc:	pop	{r4, r5, r6, r7, pc}
   196c0:	bl	15528 <backtrace_symbols_fd@plt+0xc>
   196c4:	bl	15084 <__stack_chk_fail@plt>
   196c8:			; <UNDEFINED> instruction: 0x0003ccb8
   196cc:	andeq	r9, r2, ip, ror #21
   196d0:	ldr	r3, [r0, #32]
   196d4:	push	{r4, r5, r6, r7, lr}
   196d8:	sub	sp, sp, #44	; 0x2c
   196dc:	ldr	r4, [pc, #108]	; 19750 <ListItem_getRef@@Base+0x2bc>
   196e0:	ldrd	r6, [r3]
   196e4:	ldr	r2, [pc, #104]	; 19754 <ListItem_getRef@@Base+0x2c0>
   196e8:	ldr	ip, [r4]
   196ec:	mov	r3, #20
   196f0:	str	r2, [sp]
   196f4:	mov	r5, r1
   196f8:	strd	r6, [sp, #8]
   196fc:	add	r0, sp, #16
   19700:	mov	r1, r3
   19704:	mov	r2, #1
   19708:	str	ip, [sp, #36]	; 0x24
   1970c:	bl	15510 <__snprintf_chk@plt>
   19710:	cmp	r0, #19
   19714:	bgt	19748 <ListItem_getRef@@Base+0x2b4>
   19718:	ldr	r3, [pc, #56]	; 19758 <ListItem_getRef@@Base+0x2c4>
   1971c:	add	r2, sp, #16
   19720:	mov	r0, r5
   19724:	ldr	r3, [r3]
   19728:	ldr	r1, [r3, #152]	; 0x98
   1972c:	bl	1dedc <RichString_write@@Base>
   19730:	ldr	r2, [sp, #36]	; 0x24
   19734:	ldr	r3, [r4]
   19738:	cmp	r2, r3
   1973c:	bne	1974c <ListItem_getRef@@Base+0x2b8>
   19740:	add	sp, sp, #44	; 0x2c
   19744:	pop	{r4, r5, r6, r7, pc}
   19748:	bl	15528 <backtrace_symbols_fd@plt+0xc>
   1974c:	bl	15084 <__stack_chk_fail@plt>
   19750:			; <UNDEFINED> instruction: 0x0003ccb8
   19754:	ldrdeq	r9, [r2], -r4
   19758:	muleq	r3, r8, r1
   1975c:	push	{r4, r5, r6, lr}
   19760:	mov	r6, r0
   19764:	mov	r5, r1
   19768:	mov	r4, r2
   1976c:	bl	244e8 <Platform_setMemoryValues@@Base>
   19770:	ldr	r3, [r6, #32]
   19774:	mov	r2, r4
   19778:	mov	r0, r5
   1977c:	vldr	d7, [r3]
   19780:	vcvt.u32.f64	s15, d7
   19784:	vmov	r1, s15
   19788:	bl	1a518 <Meter_humanUnit@@Base>
   1978c:	sub	r4, r4, r0
   19790:	cmp	r4, #0
   19794:	pople	{r4, r5, r6, pc}
   19798:	mov	r3, #47	; 0x2f
   1979c:	strb	r3, [r5, r0]
   197a0:	vldr	d7, [r6, #40]	; 0x28
   197a4:	add	r0, r5, r0
   197a8:	sub	r2, r4, #1
   197ac:	add	r0, r0, #1
   197b0:	vcvt.u32.f64	s15, d7
   197b4:	pop	{r4, r5, r6, lr}
   197b8:	vmov	r1, s15
   197bc:	b	1a518 <Meter_humanUnit@@Base>
   197c0:	push	{r4, r5, r6, r7, lr}
   197c4:	mov	r4, r1
   197c8:	ldr	r5, [pc, #312]	; 19908 <ListItem_getRef@@Base+0x474>
   197cc:	ldr	r7, [pc, #312]	; 1990c <ListItem_getRef@@Base+0x478>
   197d0:	sub	sp, sp, #60	; 0x3c
   197d4:	ldr	r2, [r5]
   197d8:	mov	r6, r0
   197dc:	ldr	r3, [r7]
   197e0:	ldr	r1, [r2, #44]	; 0x2c
   197e4:	mov	r0, r4
   197e8:	ldr	r2, [pc, #288]	; 19910 <ListItem_getRef@@Base+0x47c>
   197ec:	str	r3, [sp, #52]	; 0x34
   197f0:	bl	1dedc <RichString_write@@Base>
   197f4:	vldr	d7, [r6, #40]	; 0x28
   197f8:	mov	r2, #50	; 0x32
   197fc:	mov	r0, sp
   19800:	vcvt.u32.f64	s15, d7
   19804:	vmov	r1, s15
   19808:	bl	1a518 <Meter_humanUnit@@Base>
   1980c:	ldr	r3, [r5]
   19810:	mov	r2, sp
   19814:	mov	r0, r4
   19818:	ldr	r1, [r3, #48]	; 0x30
   1981c:	bl	1dc64 <RichString_append@@Base>
   19820:	ldr	r3, [r6, #32]
   19824:	mov	r2, #50	; 0x32
   19828:	mov	r0, sp
   1982c:	vldr	d7, [r3]
   19830:	vcvt.u32.f64	s15, d7
   19834:	vmov	r1, s15
   19838:	bl	1a518 <Meter_humanUnit@@Base>
   1983c:	ldr	r3, [r5]
   19840:	mov	r0, r4
   19844:	ldr	r2, [pc, #200]	; 19914 <ListItem_getRef@@Base+0x480>
   19848:	ldr	r1, [r3, #44]	; 0x2c
   1984c:	bl	1dc64 <RichString_append@@Base>
   19850:	ldr	r3, [r5]
   19854:	mov	r2, sp
   19858:	mov	r0, r4
   1985c:	ldr	r1, [r3, #136]	; 0x88
   19860:	bl	1dc64 <RichString_append@@Base>
   19864:	ldr	r3, [r6, #32]
   19868:	mov	r2, #50	; 0x32
   1986c:	mov	r0, sp
   19870:	vldr	d7, [r3, #8]
   19874:	vcvt.u32.f64	s15, d7
   19878:	vmov	r1, s15
   1987c:	bl	1a518 <Meter_humanUnit@@Base>
   19880:	ldr	r3, [r5]
   19884:	mov	r0, r4
   19888:	ldr	r2, [pc, #136]	; 19918 <ListItem_getRef@@Base+0x484>
   1988c:	ldr	r1, [r3, #44]	; 0x2c
   19890:	bl	1dc64 <RichString_append@@Base>
   19894:	ldr	r3, [r5]
   19898:	mov	r2, sp
   1989c:	mov	r0, r4
   198a0:	ldr	r1, [r3, #144]	; 0x90
   198a4:	bl	1dc64 <RichString_append@@Base>
   198a8:	ldr	r3, [r6, #32]
   198ac:	mov	r2, #50	; 0x32
   198b0:	mov	r0, sp
   198b4:	vldr	d7, [r3, #16]
   198b8:	vcvt.u32.f64	s15, d7
   198bc:	vmov	r1, s15
   198c0:	bl	1a518 <Meter_humanUnit@@Base>
   198c4:	ldr	r3, [r5]
   198c8:	mov	r0, r4
   198cc:	ldr	r2, [pc, #72]	; 1991c <ListItem_getRef@@Base+0x488>
   198d0:	ldr	r1, [r3, #44]	; 0x2c
   198d4:	bl	1dc64 <RichString_append@@Base>
   198d8:	ldr	r3, [r5]
   198dc:	mov	r2, sp
   198e0:	mov	r0, r4
   198e4:	ldr	r1, [r3, #148]	; 0x94
   198e8:	bl	1dc64 <RichString_append@@Base>
   198ec:	ldr	r2, [sp, #52]	; 0x34
   198f0:	ldr	r3, [r7]
   198f4:	cmp	r2, r3
   198f8:	bne	19904 <ListItem_getRef@@Base+0x470>
   198fc:	add	sp, sp, #60	; 0x3c
   19900:	pop	{r4, r5, r6, r7, pc}
   19904:	bl	15084 <__stack_chk_fail@plt>
   19908:	muleq	r3, r8, r1
   1990c:			; <UNDEFINED> instruction: 0x0003ccb8
   19910:	andeq	ip, r2, r8, asr r6
   19914:	muleq	r2, r4, fp
   19918:	muleq	r2, ip, fp
   1991c:	andeq	r9, r2, r8, lsr #23
   19920:	bx	lr

00019924 <Meter_delete@@Base>:
   19924:	push	{r4, lr}
   19928:	subs	r4, r0, #0
   1992c:	popeq	{r4, pc}
   19930:	ldr	r3, [r4]
   19934:	ldr	r3, [r3, #20]
   19938:	cmp	r3, #0
   1993c:	beq	19944 <Meter_delete@@Base+0x20>
   19940:	blx	r3
   19944:	ldr	r0, [r4, #20]
   19948:	bl	14fa0 <free@plt>
   1994c:	ldr	r0, [r4, #8]
   19950:	bl	14fa0 <free@plt>
   19954:	ldr	r0, [r4, #32]
   19958:	bl	14fa0 <free@plt>
   1995c:	mov	r0, r4
   19960:	pop	{r4, lr}
   19964:	b	14fa0 <free@plt>
   19968:	mov	r0, r1
   1996c:	b	1dbf0 <RichString_prune@@Base>
   19970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19974:	vpush	{d8}
   19978:	mov	r4, r1
   1997c:	ldr	r1, [pc, #948]	; 19d38 <Meter_delete@@Base+0x414>
   19980:	mov	sl, r0
   19984:	add	fp, sp, #40	; 0x28
   19988:	sub	sp, sp, #44	; 0x2c
   1998c:	ldr	r9, [r0, #20]
   19990:	ldr	r1, [r1]
   19994:	cmp	r9, #0
   19998:	mov	r5, r2
   1999c:	mov	r6, r3
   199a0:	str	r1, [fp, #-48]	; 0xffffffd0
   199a4:	beq	19d10 <Meter_delete@@Base+0x3ec>
   199a8:	ldr	r3, [pc, #908]	; 19d3c <Meter_delete@@Base+0x418>
   199ac:	ldr	r8, [pc, #908]	; 19d40 <Meter_delete@@Base+0x41c>
   199b0:	ldr	r7, [pc, #908]	; 19d44 <Meter_delete@@Base+0x420>
   199b4:	ldrb	r3, [r3]
   199b8:	ldr	r0, [r8]
   199bc:	mov	r1, r5
   199c0:	cmp	r3, #0
   199c4:	movne	r3, #4
   199c8:	ldrne	r2, [pc, #888]	; 19d48 <Meter_delete@@Base+0x424>
   199cc:	ldreq	r2, [pc, #888]	; 19d4c <Meter_delete@@Base+0x428>
   199d0:	moveq	r3, #2
   199d4:	cmp	r0, #0
   199d8:	strd	r2, [r7]
   199dc:	ldrne	r3, [pc, #876]	; 19d50 <Meter_delete@@Base+0x42c>
   199e0:	mov	r2, r4
   199e4:	ldrne	r3, [r3]
   199e8:	ldrne	r3, [r3, #44]	; 0x2c
   199ec:	strne	r3, [r0, #16]
   199f0:	bl	15360 <wmove@plt>
   199f4:	cmn	r0, #1
   199f8:	beq	19a0c <Meter_delete@@Base+0xe8>
   199fc:	mov	r2, #3
   19a00:	ldr	r1, [sl, #8]
   19a04:	ldr	r0, [r8]
   19a08:	bl	15480 <waddnstr@plt>
   19a0c:	mov	r1, #0
   19a10:	sub	r0, fp, #56	; 0x38
   19a14:	bl	1515c <gettimeofday@plt>
   19a18:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19a1c:	ldr	r3, [r9]
   19a20:	add	r1, r4, #3
   19a24:	cmp	r2, r3
   19a28:	str	r1, [fp, #-64]	; 0xffffffc0
   19a2c:	sub	r6, r6, #3
   19a30:	beq	19cf0 <Meter_delete@@Base+0x3cc>
   19a34:	movge	r3, #1
   19a38:	movlt	r3, #0
   19a3c:	cmp	r3, #0
   19a40:	beq	19b10 <Meter_delete@@Base+0x1ec>
   19a44:	ldr	r3, [pc, #776]	; 19d54 <Meter_delete@@Base+0x430>
   19a48:	ldr	r0, [pc, #776]	; 19d58 <Meter_delete@@Base+0x434>
   19a4c:	ldr	lr, [pc, #776]	; 19d5c <Meter_delete@@Base+0x438>
   19a50:	ldr	r3, [r3]
   19a54:	ldr	ip, [fp, #-52]	; 0xffffffcc
   19a58:	ldr	r4, [pc, #768]	; 19d60 <Meter_delete@@Base+0x43c>
   19a5c:	smull	r0, r1, r3, r0
   19a60:	strd	r0, [fp, #-76]	; 0xffffffb4
   19a64:	ldr	r1, [fp, #-72]	; 0xffffffb8
   19a68:	asr	r0, r3, #31
   19a6c:	rsb	r1, r0, r1, asr #2
   19a70:	add	r2, r1, r2
   19a74:	add	r0, r1, r1, lsl #2
   19a78:	str	r2, [r9]
   19a7c:	sub	r3, r3, r0, lsl #1
   19a80:	mla	ip, lr, r3, ip
   19a84:	add	r3, r9, #8
   19a88:	cmp	ip, r4
   19a8c:	str	ip, [r9, #4]
   19a90:	subgt	ip, ip, #999424	; 0xf4000
   19a94:	subgt	ip, ip, #576	; 0x240
   19a98:	addgt	r2, r2, #1
   19a9c:	add	r4, r9, #2048	; 0x800
   19aa0:	stmgt	r9, {r2, ip}
   19aa4:	ldrd	r0, [r3, #8]
   19aa8:	strd	r0, [r3], #8
   19aac:	cmp	r4, r3
   19ab0:	bne	19aa4 <Meter_delete@@Base+0x180>
   19ab4:	ldr	r3, [sl]
   19ab8:	str	sp, [fp, #-76]	; 0xffffffb4
   19abc:	sub	sp, sp, #256	; 0x100
   19ac0:	ldr	r3, [r3, #32]
   19ac4:	mov	r2, #255	; 0xff
   19ac8:	mov	r1, sp
   19acc:	mov	r0, sl
   19ad0:	blx	r3
   19ad4:	ldr	r3, [sl]
   19ad8:	ldrb	r2, [r3, #69]	; 0x45
   19adc:	cmp	r2, #0
   19ae0:	beq	19d08 <Meter_delete@@Base+0x3e4>
   19ae4:	ldr	r3, [sl, #32]
   19ae8:	vldr	d7, [pc, #576]	; 19d30 <Meter_delete@@Base+0x40c>
   19aec:	add	r2, r3, r2, lsl #3
   19af0:	vldmia	r3!, {d6}
   19af4:	cmp	r2, r3
   19af8:	vadd.f64	d7, d7, d6
   19afc:	bne	19af0 <Meter_delete@@Base+0x1cc>
   19b00:	vldr	d5, [sl, #40]	; 0x28
   19b04:	vdiv.f64	d6, d7, d5
   19b08:	vstr	d6, [r4]
   19b0c:	ldr	sp, [fp, #-76]	; 0xffffffb4
   19b10:	rsb	r6, r6, #129	; 0x81
   19b14:	lsls	r3, r6, #1
   19b18:	str	r3, [fp, #-68]	; 0xffffffbc
   19b1c:	bmi	19cdc <Meter_delete@@Base+0x3b8>
   19b20:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19b24:	cmp	r3, #254	; 0xfe
   19b28:	bgt	19c48 <Meter_delete@@Base+0x324>
   19b2c:	mov	r3, #0
   19b30:	ldr	r2, [fp, #-68]	; 0xffffffbc
   19b34:	add	r9, r9, r2, lsl #3
   19b38:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19b3c:	add	r3, r3, r2
   19b40:	str	r3, [fp, #-64]	; 0xffffffc0
   19b44:	add	r3, r5, #3
   19b48:	str	r3, [fp, #-76]	; 0xffffffb4
   19b4c:	ldr	r4, [r7, #4]
   19b50:	vldr	d0, [r9, #8]
   19b54:	lsl	r6, r4, #2
   19b58:	vmov	s15, r6
   19b5c:	vcvt.f64.s32	d8, s15
   19b60:	vmul.f64	d0, d8, d0
   19b64:	bl	150fc <lround@plt>
   19b68:	cmp	r0, r6
   19b6c:	movgt	r5, r6
   19b70:	ble	19c80 <Meter_delete@@Base+0x35c>
   19b74:	vldr	d0, [r9, #16]
   19b78:	vmul.f64	d0, d8, d0
   19b7c:	bl	150fc <lround@plt>
   19b80:	cmp	r0, r6
   19b84:	ble	19cb0 <Meter_delete@@Base+0x38c>
   19b88:	str	r9, [fp, #-80]	; 0xffffffb0
   19b8c:	mov	sl, #3
   19b90:	mov	r9, r7
   19b94:	mov	r1, #32
   19b98:	mov	r7, r6
   19b9c:	mov	r6, r5
   19ba0:	mul	r2, r4, sl
   19ba4:	ldr	r0, [r8]
   19ba8:	sub	r5, r6, r2
   19bac:	cmp	r5, r4
   19bb0:	sub	r2, r7, r2
   19bb4:	bicle	r5, r5, r5, asr #31
   19bb8:	movgt	r5, r4
   19bbc:	cmp	r2, r4
   19bc0:	bicle	r4, r2, r2, asr #31
   19bc4:	cmp	r0, #0
   19bc8:	ldrne	r3, [pc, #384]	; 19d50 <Meter_delete@@Base+0x42c>
   19bcc:	ldrne	r2, [r3]
   19bd0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19bd4:	ldrne	r2, [r2, r1, lsl #2]
   19bd8:	sub	r1, r3, sl
   19bdc:	strne	r2, [r0, #16]
   19be0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19be4:	bl	15360 <wmove@plt>
   19be8:	cmn	r0, #1
   19bec:	beq	19c0c <Meter_delete@@Base+0x2e8>
   19bf0:	ldm	r9, {r1, r2}
   19bf4:	ldr	r0, [r8]
   19bf8:	add	r2, r2, #1
   19bfc:	mla	r4, r5, r2, r4
   19c00:	mvn	r2, #0
   19c04:	ldr	r1, [r1, r4, lsl #2]
   19c08:	bl	15480 <waddnstr@plt>
   19c0c:	subs	sl, sl, #1
   19c10:	ldrcs	r4, [r9, #4]
   19c14:	movcs	r1, #33	; 0x21
   19c18:	bcs	19ba0 <Meter_delete@@Base+0x27c>
   19c1c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19c20:	mov	r7, r9
   19c24:	add	r3, r3, #2
   19c28:	str	r3, [fp, #-68]	; 0xffffffbc
   19c2c:	cmp	r3, #254	; 0xfe
   19c30:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19c34:	ldr	r9, [fp, #-80]	; 0xffffffb0
   19c38:	add	r3, r3, #1
   19c3c:	add	r9, r9, #16
   19c40:	str	r3, [fp, #-64]	; 0xffffffc0
   19c44:	ble	19b4c <Meter_delete@@Base+0x228>
   19c48:	ldr	r3, [r8]
   19c4c:	cmp	r3, #0
   19c50:	ldrne	r2, [pc, #248]	; 19d50 <Meter_delete@@Base+0x42c>
   19c54:	ldrne	r2, [r2]
   19c58:	ldrne	r2, [r2]
   19c5c:	strne	r2, [r3, #16]
   19c60:	ldr	r3, [pc, #208]	; 19d38 <Meter_delete@@Base+0x414>
   19c64:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19c68:	ldr	r3, [r3]
   19c6c:	cmp	r2, r3
   19c70:	bne	19d28 <Meter_delete@@Base+0x404>
   19c74:	sub	sp, fp, #40	; 0x28
   19c78:	vpop	{d8}
   19c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c80:	vldr	d0, [r9, #8]
   19c84:	vmul.f64	d0, d8, d0
   19c88:	bl	150fc <lround@plt>
   19c8c:	cmp	r0, #0
   19c90:	movle	r3, #1
   19c94:	movle	r5, r3
   19c98:	ble	19b74 <Meter_delete@@Base+0x250>
   19c9c:	vldr	d0, [r9, #8]
   19ca0:	vmul.f64	d0, d8, d0
   19ca4:	bl	150fc <lround@plt>
   19ca8:	mov	r5, r0
   19cac:	b	19b74 <Meter_delete@@Base+0x250>
   19cb0:	vldr	d0, [r9, #16]
   19cb4:	vmul.f64	d0, d8, d0
   19cb8:	bl	150fc <lround@plt>
   19cbc:	cmp	r0, #0
   19cc0:	movle	r6, #1
   19cc4:	ble	19b88 <Meter_delete@@Base+0x264>
   19cc8:	vldr	d0, [r9, #16]
   19ccc:	vmul.f64	d0, d8, d0
   19cd0:	bl	150fc <lround@plt>
   19cd4:	mov	r6, r0
   19cd8:	b	19b88 <Meter_delete@@Base+0x264>
   19cdc:	asr	r3, r3, #1
   19ce0:	mov	r2, #0
   19ce4:	rsb	r3, r3, #0
   19ce8:	str	r2, [fp, #-68]	; 0xffffffbc
   19cec:	b	19b30 <Meter_delete@@Base+0x20c>
   19cf0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19cf4:	ldr	r1, [r9, #4]
   19cf8:	cmp	r3, r1
   19cfc:	movlt	r3, #0
   19d00:	movge	r3, #1
   19d04:	b	19a3c <Meter_delete@@Base+0x118>
   19d08:	vldr	d7, [pc, #32]	; 19d30 <Meter_delete@@Base+0x40c>
   19d0c:	b	19b00 <Meter_delete@@Base+0x1dc>
   19d10:	ldr	r1, [pc, #76]	; 19d64 <Meter_delete@@Base+0x440>
   19d14:	mov	r0, #1
   19d18:	bl	23fd8 <xCalloc@@Base>
   19d1c:	mov	r9, r0
   19d20:	str	r0, [sl, #20]
   19d24:	b	199a8 <Meter_delete@@Base+0x84>
   19d28:	bl	15084 <__stack_chk_fail@plt>
   19d2c:	nop			; (mov r0, r0)
	...
   19d38:			; <UNDEFINED> instruction: 0x0003ccb8
   19d3c:	andeq	lr, r3, r0, lsr #15
   19d40:	andeq	lr, r3, r8, lsl #15
   19d44:	andeq	lr, r3, r8, lsr #15
   19d48:			; <UNDEFINED> instruction: 0x00029bbc
   19d4c:	andeq	r9, r2, r0, lsr #24
   19d50:	muleq	r3, r8, r1
   19d54:	muleq	r3, r8, r7
   19d58:	strbtvs	r6, [r6], -r7, ror #12
   19d5c:	andeq	r8, r1, r0, lsr #13
   19d60:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   19d64:	andeq	r0, r0, r8, lsl #16
   19d68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d6c:	vpush	{d8}
   19d70:	ldr	ip, [pc, #964]	; 1a13c <Meter_delete@@Base+0x818>
   19d74:	mov	r5, r1
   19d78:	mov	r6, r3
   19d7c:	add	fp, sp, #40	; 0x28
   19d80:	sub	sp, sp, #348	; 0x15c
   19d84:	ldr	lr, [r0]
   19d88:	ldr	ip, [ip]
   19d8c:	str	r2, [fp, #-352]	; 0xfffffea0
   19d90:	ldr	r4, [lr, #32]
   19d94:	sub	r1, fp, #304	; 0x130
   19d98:	mov	r2, #255	; 0xff
   19d9c:	mov	r8, r0
   19da0:	str	ip, [fp, #-48]	; 0xffffffd0
   19da4:	blx	r4
   19da8:	ldr	r7, [pc, #912]	; 1a140 <Meter_delete@@Base+0x81c>
   19dac:	mov	r2, r5
   19db0:	ldr	r1, [fp, #-352]	; 0xfffffea0
   19db4:	ldr	r0, [r7]
   19db8:	str	sp, [fp, #-368]	; 0xfffffe90
   19dbc:	cmp	r0, #0
   19dc0:	ldrne	r3, [pc, #892]	; 1a144 <Meter_delete@@Base+0x820>
   19dc4:	ldrne	r3, [r3]
   19dc8:	ldrne	r3, [r3, #44]	; 0x2c
   19dcc:	strne	r3, [r0, #16]
   19dd0:	bl	15360 <wmove@plt>
   19dd4:	cmn	r0, #1
   19dd8:	beq	19dec <Meter_delete@@Base+0x4c8>
   19ddc:	mov	r2, #3
   19de0:	ldr	r1, [r8, #8]
   19de4:	ldr	r0, [r7]
   19de8:	bl	15480 <waddnstr@plt>
   19dec:	ldr	r0, [r7]
   19df0:	add	r9, r5, #3
   19df4:	cmp	r0, #0
   19df8:	mov	r2, r9
   19dfc:	ldrne	r3, [pc, #832]	; 1a144 <Meter_delete@@Base+0x820>
   19e00:	ldr	r1, [fp, #-352]	; 0xfffffea0
   19e04:	sub	r4, r6, #5
   19e08:	ldrne	r3, [r3]
   19e0c:	ldrne	r3, [r3, #120]	; 0x78
   19e10:	strne	r3, [r0, #16]
   19e14:	bl	15360 <wmove@plt>
   19e18:	cmn	r0, #1
   19e1c:	beq	19e2c <Meter_delete@@Base+0x508>
   19e20:	mov	r1, #91	; 0x5b
   19e24:	ldr	r0, [r7]
   19e28:	bl	15414 <waddch@plt>
   19e2c:	add	r2, r9, r4
   19e30:	ldr	r1, [fp, #-352]	; 0xfffffea0
   19e34:	ldr	r0, [r7]
   19e38:	bl	15360 <wmove@plt>
   19e3c:	cmn	r0, #1
   19e40:	beq	19e50 <Meter_delete@@Base+0x52c>
   19e44:	mov	r1, #93	; 0x5d
   19e48:	ldr	r0, [r7]
   19e4c:	bl	15414 <waddch@plt>
   19e50:	sub	r6, r6, #6
   19e54:	cmp	r6, #0
   19e58:	bgt	19e98 <Meter_delete@@Base+0x574>
   19e5c:	ldr	r3, [r7]
   19e60:	cmp	r3, #0
   19e64:	ldrne	r2, [pc, #728]	; 1a144 <Meter_delete@@Base+0x820>
   19e68:	ldrne	r2, [r2]
   19e6c:	ldrne	r2, [r2]
   19e70:	strne	r2, [r3, #16]
   19e74:	ldr	r3, [pc, #704]	; 1a13c <Meter_delete@@Base+0x818>
   19e78:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19e7c:	ldr	sp, [fp, #-368]	; 0xfffffe90
   19e80:	ldr	r3, [r3]
   19e84:	cmp	r2, r3
   19e88:	bne	1a138 <Meter_delete@@Base+0x814>
   19e8c:	sub	sp, fp, #40	; 0x28
   19e90:	vpop	{d8}
   19e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e98:	add	r3, r4, #7
   19e9c:	bic	r3, r3, #7
   19ea0:	sub	sp, sp, r3
   19ea4:	ldr	r3, [pc, #668]	; 1a148 <Meter_delete@@Base+0x824>
   19ea8:	add	r2, sp, #16
   19eac:	sub	r1, fp, #304	; 0x130
   19eb0:	str	r2, [fp, #-356]	; 0xfffffe9c
   19eb4:	mov	r0, r2
   19eb8:	str	r1, [sp, #12]
   19ebc:	stm	sp, {r3, r6}
   19ec0:	mov	r1, r4
   19ec4:	str	r6, [sp, #8]
   19ec8:	mvn	r3, #0
   19ecc:	mov	r2, #1
   19ed0:	bl	15510 <__snprintf_chk@plt>
   19ed4:	cmp	r4, r0
   19ed8:	movgt	r4, #0
   19edc:	movle	r4, #1
   19ee0:	orrs	r0, r4, r0, lsr #31
   19ee4:	bne	1a120 <Meter_delete@@Base+0x7fc>
   19ee8:	ldr	r3, [r8]
   19eec:	add	r2, r5, #4
   19ef0:	str	r2, [fp, #-360]	; 0xfffffe98
   19ef4:	ldrb	r4, [r3, #69]	; 0x45
   19ef8:	cmp	r4, #0
   19efc:	beq	1a0d0 <Meter_delete@@Base+0x7ac>
   19f00:	ldr	r9, [r8, #32]
   19f04:	ldr	r3, [pc, #576]	; 1a14c <Meter_delete@@Base+0x828>
   19f08:	vldr	d8, [r8, #40]	; 0x28
   19f0c:	str	r8, [fp, #-372]	; 0xfffffe8c
   19f10:	mov	r5, r0
   19f14:	mov	r8, r4
   19f18:	mov	r4, r9
   19f1c:	mov	r9, r0
   19f20:	ldr	sl, [r3]
   19f24:	add	r3, sp, #15
   19f28:	str	r3, [fp, #-364]	; 0xfffffe94
   19f2c:	vldmia	r4!, {d7}
   19f30:	vcmpe.f64	d8, d7
   19f34:	vmrs	APSR_nzcv, fpscr
   19f38:	bmi	1a0ac <Meter_delete@@Base+0x788>
   19f3c:	vcmpe.f64	d7, #0.0
   19f40:	vmrs	APSR_nzcv, fpscr
   19f44:	bmi	1a0bc <Meter_delete@@Base+0x798>
   19f48:	vcmpe.f64	d7, #0.0
   19f4c:	vmrs	APSR_nzcv, fpscr
   19f50:	ble	1a0bc <Meter_delete@@Base+0x798>
   19f54:	vdiv.f64	d0, d7, d8
   19f58:	vmov	s15, r6
   19f5c:	vcvt.f64.s32	d7, s15
   19f60:	vmul.f64	d0, d0, d7
   19f64:	bl	153d8 <ceil@plt>
   19f68:	sub	r3, fp, #344	; 0x158
   19f6c:	vcvt.s32.f64	s15, d0
   19f70:	vmov	lr, s15
   19f74:	str	lr, [r3, r9, lsl #2]
   19f78:	add	lr, lr, r5
   19f7c:	cmp	r6, lr
   19f80:	movlt	lr, r6
   19f84:	bicge	lr, lr, lr, asr #31
   19f88:	cmp	lr, r5
   19f8c:	ble	19fcc <Meter_delete@@Base+0x6a8>
   19f90:	ldr	r2, [fp, #-356]	; 0xfffffe9c
   19f94:	sub	r3, r5, #1
   19f98:	add	r3, r2, r3
   19f9c:	ldr	r2, [fp, #-364]	; 0xfffffe94
   19fa0:	add	r5, r2, lr
   19fa4:	ldrb	r2, [r3, #1]!
   19fa8:	cmp	r2, #32
   19fac:	bne	19fc4 <Meter_delete@@Base+0x6a0>
   19fb0:	cmp	sl, #1
   19fb4:	movne	r2, #124	; 0x7c
   19fb8:	ldreq	r2, [pc, #400]	; 1a150 <Meter_delete@@Base+0x82c>
   19fbc:	ldrbeq	r2, [r9, r2]
   19fc0:	strb	r2, [r3]
   19fc4:	cmp	r3, r5
   19fc8:	bne	19fa4 <Meter_delete@@Base+0x680>
   19fcc:	add	r9, r9, #1
   19fd0:	cmp	r8, r9
   19fd4:	mov	r5, lr
   19fd8:	bne	19f2c <Meter_delete@@Base+0x608>
   19fdc:	mov	r4, r8
   19fe0:	sub	r3, fp, #344	; 0x158
   19fe4:	sxth	r4, r4
   19fe8:	ldr	r8, [fp, #-372]	; 0xfffffe8c
   19fec:	add	r3, r3, r4, lsl #2
   19ff0:	str	r3, [fp, #-364]	; 0xfffffe94
   19ff4:	mov	r4, #0
   19ff8:	mov	r3, r8
   19ffc:	ldr	sl, [pc, #320]	; 1a144 <Meter_delete@@Base+0x820>
   1a000:	mov	r8, r4
   1a004:	sub	r9, fp, #344	; 0x158
   1a008:	mov	r4, r3
   1a00c:	ldr	r0, [r7]
   1a010:	cmp	r0, #0
   1a014:	beq	1a038 <Meter_delete@@Base+0x714>
   1a018:	ldr	ip, [r4]
   1a01c:	sub	r3, fp, #344	; 0x158
   1a020:	sub	r2, r9, r3
   1a024:	ldr	ip, [ip, #48]	; 0x30
   1a028:	ldr	r1, [sl]
   1a02c:	ldr	r2, [ip, r2]
   1a030:	ldr	r2, [r1, r2, lsl #2]
   1a034:	str	r2, [r0, #16]
   1a038:	ldr	r3, [fp, #-360]	; 0xfffffe98
   1a03c:	ldr	r1, [fp, #-352]	; 0xfffffea0
   1a040:	add	r2, r3, r8
   1a044:	bl	15360 <wmove@plt>
   1a048:	ldr	r5, [r9], #4
   1a04c:	cmn	r0, #1
   1a050:	beq	1a068 <Meter_delete@@Base+0x744>
   1a054:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   1a058:	mov	r2, r5
   1a05c:	add	r1, r3, r8
   1a060:	ldr	r0, [r7]
   1a064:	bl	15480 <waddnstr@plt>
   1a068:	add	r3, r5, r8
   1a06c:	cmp	r6, r3
   1a070:	movlt	r8, r6
   1a074:	bicge	r8, r3, r3, asr #31
   1a078:	ldr	r3, [fp, #-364]	; 0xfffffe94
   1a07c:	cmp	r3, r9
   1a080:	bne	1a00c <Meter_delete@@Base+0x6e8>
   1a084:	cmp	r8, r6
   1a088:	mov	r4, r8
   1a08c:	ldr	r0, [r7]
   1a090:	blt	1a0d4 <Meter_delete@@Base+0x7b0>
   1a094:	ldr	r3, [fp, #-360]	; 0xfffffe98
   1a098:	ldr	r1, [fp, #-352]	; 0xfffffea0
   1a09c:	add	r2, r6, r3
   1a0a0:	add	r2, r2, #1
   1a0a4:	bl	15360 <wmove@plt>
   1a0a8:	b	19e5c <Meter_delete@@Base+0x538>
   1a0ac:	vmov.f64	d7, d8
   1a0b0:	vcmpe.f64	d7, #0.0
   1a0b4:	vmrs	APSR_nzcv, fpscr
   1a0b8:	bgt	19f54 <Meter_delete@@Base+0x630>
   1a0bc:	sub	r3, fp, #344	; 0x158
   1a0c0:	mov	r2, #0
   1a0c4:	mov	lr, r5
   1a0c8:	str	r2, [r3, r9, lsl #2]
   1a0cc:	b	19f7c <Meter_delete@@Base+0x658>
   1a0d0:	ldr	r0, [r7]
   1a0d4:	cmp	r0, #0
   1a0d8:	ldr	r1, [fp, #-352]	; 0xfffffea0
   1a0dc:	ldrne	r3, [pc, #96]	; 1a144 <Meter_delete@@Base+0x820>
   1a0e0:	ldrne	r3, [r3]
   1a0e4:	ldrne	r3, [r3, #124]	; 0x7c
   1a0e8:	strne	r3, [r0, #16]
   1a0ec:	ldr	r3, [fp, #-360]	; 0xfffffe98
   1a0f0:	add	r2, r3, r4
   1a0f4:	bl	15360 <wmove@plt>
   1a0f8:	cmn	r0, #1
   1a0fc:	ldreq	r0, [r7]
   1a100:	beq	1a094 <Meter_delete@@Base+0x770>
   1a104:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   1a108:	sub	r2, r6, r4
   1a10c:	add	r1, r3, r4
   1a110:	ldr	r0, [r7]
   1a114:	bl	15480 <waddnstr@plt>
   1a118:	ldr	r0, [r7]
   1a11c:	b	1a094 <Meter_delete@@Base+0x770>
   1a120:	mov	r0, #1
   1a124:	bl	15030 <curs_set@plt>
   1a128:	bl	14f28 <endwin@plt>
   1a12c:	mov	r1, #0
   1a130:	mov	r0, #1
   1a134:	bl	15114 <err@plt>
   1a138:	bl	15084 <__stack_chk_fail@plt>
   1a13c:			; <UNDEFINED> instruction: 0x0003ccb8
   1a140:	andeq	lr, r3, r8, lsl #15
   1a144:	muleq	r3, r8, r1
   1a148:	andeq	r9, r2, r0, asr #26
   1a14c:	muleq	r3, ip, r7
   1a150:	andeq	r9, r2, r4, asr #24
   1a154:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a158:	sub	sp, sp, #8704	; 0x2200
   1a15c:	ldr	r5, [pc, #552]	; 1a38c <Meter_delete@@Base+0xa68>
   1a160:	sub	sp, sp, #4
   1a164:	mov	r4, r0
   1a168:	ldr	r3, [pc, #544]	; 1a390 <Meter_delete@@Base+0xa6c>
   1a16c:	ldrb	r0, [r5]
   1a170:	str	r2, [sp, #4]
   1a174:	add	r2, sp, #8640	; 0x21c0
   1a178:	ldr	r3, [r3]
   1a17c:	cmp	r0, #0
   1a180:	add	r2, r2, #60	; 0x3c
   1a184:	ldr	sl, [pc, #520]	; 1a394 <Meter_delete@@Base+0xa70>
   1a188:	str	r3, [r2]
   1a18c:	ldrne	r3, [pc, #516]	; 1a398 <Meter_delete@@Base+0xa74>
   1a190:	ldreq	r3, [pc, #516]	; 1a39c <Meter_delete@@Base+0xa78>
   1a194:	mov	r7, r1
   1a198:	str	r3, [sl, #8]
   1a19c:	ldr	r3, [r4]
   1a1a0:	add	r1, sp, #8384	; 0x20c0
   1a1a4:	add	r1, r1, #60	; 0x3c
   1a1a8:	ldr	r3, [r3, #32]
   1a1ac:	mov	r2, #255	; 0xff
   1a1b0:	mov	r0, r4
   1a1b4:	blx	r3
   1a1b8:	ldr	r2, [pc, #480]	; 1a3a0 <Meter_delete@@Base+0xa7c>
   1a1bc:	mov	r1, #0
   1a1c0:	add	r0, sp, #12
   1a1c4:	bl	15330 <memset@plt>
   1a1c8:	ldr	r1, [r4]
   1a1cc:	add	r3, sp, #20
   1a1d0:	ldr	r2, [r1, #4]
   1a1d4:	str	r3, [sp, #16]
   1a1d8:	cmp	r2, #0
   1a1dc:	beq	1a360 <Meter_delete@@Base+0xa3c>
   1a1e0:	add	r1, sp, #12
   1a1e4:	mov	r0, r4
   1a1e8:	blx	r2
   1a1ec:	ldrb	r3, [r5]
   1a1f0:	ldr	r8, [pc, #428]	; 1a3a4 <Meter_delete@@Base+0xa80>
   1a1f4:	mov	r2, r7
   1a1f8:	cmp	r3, #0
   1a1fc:	ldr	r0, [r8]
   1a200:	ldr	r3, [sp, #4]
   1a204:	addne	r3, r3, #1
   1a208:	addeq	r3, r3, #2
   1a20c:	cmp	r0, #0
   1a210:	str	r3, [sp]
   1a214:	ldrne	r3, [pc, #396]	; 1a3a8 <Meter_delete@@Base+0xa84>
   1a218:	ldr	r1, [sp]
   1a21c:	ldrne	r3, [r3]
   1a220:	ldrne	r3, [r3, #52]	; 0x34
   1a224:	strne	r3, [r0, #16]
   1a228:	bl	15360 <wmove@plt>
   1a22c:	cmn	r0, #1
   1a230:	beq	1a244 <Meter_delete@@Base+0x920>
   1a234:	mvn	r2, #0
   1a238:	ldr	r1, [r4, #8]
   1a23c:	ldr	r0, [r8]
   1a240:	bl	15480 <waddnstr@plt>
   1a244:	ldr	r0, [r4, #8]
   1a248:	bl	152a0 <strlen@plt>
   1a24c:	ldr	r9, [sp, #12]
   1a250:	ldr	r1, [r8]
   1a254:	cmp	r9, #0
   1a258:	add	r7, r7, r0
   1a25c:	ble	1a2f0 <Meter_delete@@Base+0x9cc>
   1a260:	mov	r6, #0
   1a264:	mov	r0, r1
   1a268:	ldr	r3, [sp, #16]
   1a26c:	add	r2, r6, r6, lsl #1
   1a270:	add	r3, r3, r2, lsl #3
   1a274:	ldr	r4, [r3, #4]
   1a278:	sub	r3, r4, #48	; 0x30
   1a27c:	uxtb	r3, r3
   1a280:	cmp	r3, #9
   1a284:	bhi	1a334 <Meter_delete@@Base+0xa10>
   1a288:	uxtb	r4, r4
   1a28c:	sub	r5, r4, #48	; 0x30
   1a290:	sub	r4, r4, #-1073741806	; 0xc0000012
   1a294:	ldr	fp, [sp, #4]
   1a298:	lsl	r5, r5, #2
   1a29c:	lsl	r4, r4, #2
   1a2a0:	mov	r2, r7
   1a2a4:	mov	r1, fp
   1a2a8:	bl	15360 <wmove@plt>
   1a2ac:	cmn	r0, #1
   1a2b0:	beq	1a2c8 <Meter_delete@@Base+0x9a4>
   1a2b4:	ldr	r3, [sl, #8]
   1a2b8:	mvn	r2, #0
   1a2bc:	ldr	r0, [r8]
   1a2c0:	ldr	r1, [r3, r5]
   1a2c4:	bl	15480 <waddnstr@plt>
   1a2c8:	add	r5, r5, #40	; 0x28
   1a2cc:	cmp	r4, r5
   1a2d0:	add	fp, fp, #1
   1a2d4:	ldr	r0, [r8]
   1a2d8:	bne	1a2a0 <Meter_delete@@Base+0x97c>
   1a2dc:	add	r7, r7, #4
   1a2e0:	add	r6, r6, #1
   1a2e4:	cmp	r9, r6
   1a2e8:	bne	1a268 <Meter_delete@@Base+0x944>
   1a2ec:	mov	r1, r0
   1a2f0:	cmp	r1, #0
   1a2f4:	add	r0, sp, #12
   1a2f8:	ldrne	r3, [pc, #168]	; 1a3a8 <Meter_delete@@Base+0xa84>
   1a2fc:	ldrne	r3, [r3]
   1a300:	ldrne	r3, [r3]
   1a304:	strne	r3, [r1, #16]
   1a308:	bl	1dbf0 <RichString_prune@@Base>
   1a30c:	add	r3, sp, #8640	; 0x21c0
   1a310:	add	r3, r3, #60	; 0x3c
   1a314:	ldr	r2, [r3]
   1a318:	ldr	r3, [pc, #112]	; 1a390 <Meter_delete@@Base+0xa6c>
   1a31c:	ldr	r3, [r3]
   1a320:	cmp	r2, r3
   1a324:	bne	1a388 <Meter_delete@@Base+0xa64>
   1a328:	add	sp, sp, #8704	; 0x2200
   1a32c:	add	sp, sp, #4
   1a330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a334:	mov	r2, r7
   1a338:	ldr	r1, [sp]
   1a33c:	bl	15360 <wmove@plt>
   1a340:	cmn	r0, #1
   1a344:	beq	1a354 <Meter_delete@@Base+0xa30>
   1a348:	uxtb	r1, r4
   1a34c:	ldr	r0, [r8]
   1a350:	bl	15414 <waddch@plt>
   1a354:	ldr	r0, [r8]
   1a358:	add	r7, r7, #1
   1a35c:	b	1a2e0 <Meter_delete@@Base+0x9bc>
   1a360:	ldr	r1, [r1, #48]	; 0x30
   1a364:	ldr	r3, [pc, #60]	; 1a3a8 <Meter_delete@@Base+0xa84>
   1a368:	add	r2, sp, #8384	; 0x20c0
   1a36c:	ldr	r1, [r1]
   1a370:	ldr	r3, [r3]
   1a374:	add	r2, r2, #60	; 0x3c
   1a378:	add	r0, sp, #12
   1a37c:	ldr	r1, [r3, r1, lsl #2]
   1a380:	bl	1dedc <RichString_write@@Base>
   1a384:	b	1a1ec <Meter_delete@@Base+0x8c8>
   1a388:	bl	15084 <__stack_chk_fail@plt>
   1a38c:	andeq	lr, r3, r0, lsr #15
   1a390:			; <UNDEFINED> instruction: 0x0003ccb8
   1a394:	andeq	lr, r3, r8, lsr #15
   1a398:	andeq	r9, r2, r0, asr ip
   1a39c:	andeq	r9, r2, r8, asr #25
   1a3a0:	strdeq	r2, [r0], -r0
   1a3a4:	andeq	lr, r3, r8, lsl #15
   1a3a8:	muleq	r3, r8, r1
   1a3ac:	push	{r4, r5, r6, r7, r8, lr}
   1a3b0:	sub	sp, sp, #8640	; 0x21c0
   1a3b4:	ldr	r7, [pc, #332]	; 1a508 <Meter_delete@@Base+0xbe4>
   1a3b8:	sub	sp, sp, #56	; 0x38
   1a3bc:	ldr	r3, [r0]
   1a3c0:	mov	r8, r2
   1a3c4:	add	r2, sp, #8640	; 0x21c0
   1a3c8:	ldr	ip, [r7]
   1a3cc:	add	r2, r2, #52	; 0x34
   1a3d0:	mov	r6, r1
   1a3d4:	add	r1, sp, #8384	; 0x20c0
   1a3d8:	ldr	r3, [r3, #32]
   1a3dc:	str	ip, [r2]
   1a3e0:	add	r1, r1, #52	; 0x34
   1a3e4:	mov	r2, #255	; 0xff
   1a3e8:	mov	r4, r0
   1a3ec:	blx	r3
   1a3f0:	ldr	r5, [pc, #276]	; 1a50c <Meter_delete@@Base+0xbe8>
   1a3f4:	mov	r2, r6
   1a3f8:	mov	r1, r8
   1a3fc:	ldr	r0, [r5]
   1a400:	cmp	r0, #0
   1a404:	ldrne	r3, [pc, #260]	; 1a510 <Meter_delete@@Base+0xbec>
   1a408:	ldrne	r3, [r3]
   1a40c:	ldrne	r3, [r3, #44]	; 0x2c
   1a410:	strne	r3, [r0, #16]
   1a414:	bl	15360 <wmove@plt>
   1a418:	cmn	r0, #1
   1a41c:	beq	1a430 <Meter_delete@@Base+0xb0c>
   1a420:	mvn	r2, #0
   1a424:	ldr	r1, [r4, #8]
   1a428:	ldr	r0, [r5]
   1a42c:	bl	15480 <waddnstr@plt>
   1a430:	ldr	r0, [r4, #8]
   1a434:	bl	152a0 <strlen@plt>
   1a438:	ldr	r3, [r5]
   1a43c:	mov	r1, #0
   1a440:	cmp	r3, #0
   1a444:	ldrne	r2, [pc, #196]	; 1a510 <Meter_delete@@Base+0xbec>
   1a448:	ldrne	r2, [r2]
   1a44c:	add	r6, r0, r6
   1a450:	add	r0, sp, #4
   1a454:	ldrne	r2, [r2]
   1a458:	strne	r2, [r3, #16]
   1a45c:	ldr	r2, [pc, #176]	; 1a514 <Meter_delete@@Base+0xbf0>
   1a460:	bl	15330 <memset@plt>
   1a464:	ldr	r1, [r4]
   1a468:	add	r3, sp, #12
   1a46c:	ldr	r2, [r1, #4]
   1a470:	str	r3, [sp, #8]
   1a474:	cmp	r2, #0
   1a478:	beq	1a4dc <Meter_delete@@Base+0xbb8>
   1a47c:	mov	r0, r4
   1a480:	add	r1, sp, #4
   1a484:	blx	r2
   1a488:	mov	r2, r6
   1a48c:	mov	r1, r8
   1a490:	ldr	r0, [r5]
   1a494:	bl	15360 <wmove@plt>
   1a498:	cmn	r0, #1
   1a49c:	beq	1a4b0 <Meter_delete@@Base+0xb8c>
   1a4a0:	ldr	r1, [sp, #8]
   1a4a4:	ldr	r0, [r5]
   1a4a8:	mvn	r2, #0
   1a4ac:	bl	15384 <wadd_wchnstr@plt>
   1a4b0:	add	r0, sp, #4
   1a4b4:	bl	1dbf0 <RichString_prune@@Base>
   1a4b8:	add	r3, sp, #8640	; 0x21c0
   1a4bc:	add	r3, r3, #52	; 0x34
   1a4c0:	ldr	r2, [r3]
   1a4c4:	ldr	r3, [r7]
   1a4c8:	cmp	r2, r3
   1a4cc:	bne	1a504 <Meter_delete@@Base+0xbe0>
   1a4d0:	add	sp, sp, #8640	; 0x21c0
   1a4d4:	add	sp, sp, #56	; 0x38
   1a4d8:	pop	{r4, r5, r6, r7, r8, pc}
   1a4dc:	ldr	r1, [r1, #48]	; 0x30
   1a4e0:	ldr	r3, [pc, #40]	; 1a510 <Meter_delete@@Base+0xbec>
   1a4e4:	add	r2, sp, #8384	; 0x20c0
   1a4e8:	ldr	r1, [r1]
   1a4ec:	ldr	r3, [r3]
   1a4f0:	add	r2, r2, #52	; 0x34
   1a4f4:	add	r0, sp, #4
   1a4f8:	ldr	r1, [r3, r1, lsl #2]
   1a4fc:	bl	1dedc <RichString_write@@Base>
   1a500:	b	1a488 <Meter_delete@@Base+0xb64>
   1a504:	bl	15084 <__stack_chk_fail@plt>
   1a508:			; <UNDEFINED> instruction: 0x0003ccb8
   1a50c:	andeq	lr, r3, r8, lsl #15
   1a510:	muleq	r3, r8, r1
   1a514:	strdeq	r2, [r0], -r0

0001a518 <Meter_humanUnit@@Base>:
   1a518:	push	{r4, r5, r6, r7, lr}
   1a51c:	vpush	{d8}
   1a520:	mov	r5, r0
   1a524:	lsrs	r0, r1, #10
   1a528:	mov	r4, r1
   1a52c:	sub	sp, sp, #28
   1a530:	mov	r6, r2
   1a534:	beq	1a5d4 <Meter_humanUnit@@Base+0xbc>
   1a538:	ldr	r3, [pc, #176]	; 1a5f0 <Meter_humanUnit@@Base+0xd8>
   1a53c:	mov	r1, #1
   1a540:	b	1a550 <Meter_humanUnit@@Base+0x38>
   1a544:	ldrb	ip, [r3, #1]!
   1a548:	cmp	ip, #0
   1a54c:	beq	1a560 <Meter_humanUnit@@Base+0x48>
   1a550:	lsl	r1, r1, #10
   1a554:	cmp	r1, r0
   1a558:	mov	lr, r3
   1a55c:	bls	1a544 <Meter_humanUnit@@Base+0x2c>
   1a560:	ldrb	r7, [lr]
   1a564:	vmov	s15, r1
   1a568:	cmp	r7, #75	; 0x4b
   1a56c:	moveq	r0, #0
   1a570:	vcvt.f64.u32	d8, s15
   1a574:	beq	1a594 <Meter_humanUnit@@Base+0x7c>
   1a578:	mov	r0, r4
   1a57c:	bl	283d8 <Battery_getData@@Base+0x2cc>
   1a580:	cmp	r0, #9
   1a584:	bls	1a5e0 <Meter_humanUnit@@Base+0xc8>
   1a588:	cmp	r0, #99	; 0x63
   1a58c:	movhi	r0, #0
   1a590:	movls	r0, #1
   1a594:	vmov	s15, r4
   1a598:	ldr	r3, [pc, #84]	; 1a5f4 <Meter_humanUnit@@Base+0xdc>
   1a59c:	str	r0, [sp, #4]
   1a5a0:	str	r3, [sp]
   1a5a4:	vcvt.f64.u32	d7, s15
   1a5a8:	str	r7, [sp, #16]
   1a5ac:	mov	r1, r6
   1a5b0:	mov	r0, r5
   1a5b4:	mvn	r3, #0
   1a5b8:	mov	r2, #1
   1a5bc:	vdiv.f64	d6, d7, d8
   1a5c0:	vstr	d6, [sp, #8]
   1a5c4:	bl	15510 <__snprintf_chk@plt>
   1a5c8:	add	sp, sp, #28
   1a5cc:	vpop	{d8}
   1a5d0:	pop	{r4, r5, r6, r7, pc}
   1a5d4:	mov	r7, #75	; 0x4b
   1a5d8:	vldr	d8, [pc, #8]	; 1a5e8 <Meter_humanUnit@@Base+0xd0>
   1a5dc:	b	1a594 <Meter_humanUnit@@Base+0x7c>
   1a5e0:	mov	r0, #2
   1a5e4:	b	1a594 <Meter_humanUnit@@Base+0x7c>
   1a5e8:	andeq	r0, r0, r0
   1a5ec:	svccc	0x00f00000	; IMB
   1a5f0:	andeq	r9, r2, r9, asr #26
   1a5f4:	andeq	r9, r2, r4, asr sp

0001a5f8 <Meter_setCaption@@Base>:
   1a5f8:	push	{r4, r5, r6, lr}
   1a5fc:	mov	r5, r1
   1a600:	mov	r4, r0
   1a604:	ldr	r0, [r0, #8]
   1a608:	bl	14fa0 <free@plt>
   1a60c:	mov	r0, r5
   1a610:	bl	24034 <xStrdup@@Base>
   1a614:	str	r0, [r4, #8]
   1a618:	pop	{r4, r5, r6, pc}

0001a61c <Meter_setMode@@Base>:
   1a61c:	push	{r4, r5, r6, lr}
   1a620:	subs	r5, r1, #0
   1a624:	mov	r4, r0
   1a628:	ble	1a66c <Meter_setMode@@Base+0x50>
   1a62c:	ldr	r3, [r0, #12]
   1a630:	cmp	r3, r5
   1a634:	popeq	{r4, r5, r6, pc}
   1a638:	ldr	r3, [r4]
   1a63c:	ldr	r2, [r3, #36]	; 0x24
   1a640:	cmp	r2, #0
   1a644:	bne	1a680 <Meter_setMode@@Base+0x64>
   1a648:	ldrd	r2, [r3, #24]
   1a64c:	cmp	r2, #0
   1a650:	str	r3, [r4, #4]
   1a654:	beq	1a664 <Meter_setMode@@Base+0x48>
   1a658:	mov	r1, r5
   1a65c:	mov	r0, r4
   1a660:	blx	r2
   1a664:	str	r5, [r4, #12]
   1a668:	pop	{r4, r5, r6, pc}
   1a66c:	ldr	r3, [r4]
   1a670:	moveq	r5, #1
   1a674:	ldr	r2, [r3, #36]	; 0x24
   1a678:	cmp	r2, #0
   1a67c:	beq	1a648 <Meter_setMode@@Base+0x2c>
   1a680:	ldr	r0, [r4, #20]
   1a684:	bl	14fa0 <free@plt>
   1a688:	ldr	r3, [pc, #32]	; 1a6b0 <Meter_setMode@@Base+0x94>
   1a68c:	mov	r2, #0
   1a690:	str	r2, [r4, #20]
   1a694:	ldr	r3, [r3, r5, lsl #2]
   1a698:	ldr	r2, [r3]
   1a69c:	ldr	r3, [r3, #8]
   1a6a0:	str	r2, [r4, #4]
   1a6a4:	str	r3, [r4, #24]
   1a6a8:	str	r5, [r4, #12]
   1a6ac:	pop	{r4, r5, r6, pc}
   1a6b0:	andeq	sp, r3, r8, asr fp

0001a6b4 <Meter_new@@Base>:
   1a6b4:	push	{r4, r5, r6, r7, r8, lr}
   1a6b8:	mov	r6, r0
   1a6bc:	mov	r7, r1
   1a6c0:	mov	r0, #1
   1a6c4:	mov	r1, #48	; 0x30
   1a6c8:	mov	r5, r2
   1a6cc:	bl	23fd8 <xCalloc@@Base>
   1a6d0:	mov	r3, #1
   1a6d4:	mov	r1, #8
   1a6d8:	mov	r4, r0
   1a6dc:	str	r3, [r0, #24]
   1a6e0:	str	r7, [r0, #16]
   1a6e4:	str	r5, [r0]
   1a6e8:	str	r6, [r0, #28]
   1a6ec:	ldrb	r0, [r5, #68]	; 0x44
   1a6f0:	strb	r0, [r5, #69]	; 0x45
   1a6f4:	bl	23fd8 <xCalloc@@Base>
   1a6f8:	ldrd	r2, [r5, #40]	; 0x28
   1a6fc:	strd	r2, [r4, #40]	; 0x28
   1a700:	str	r0, [r4, #32]
   1a704:	ldr	r0, [r5, #60]	; 0x3c
   1a708:	bl	24034 <xStrdup@@Base>
   1a70c:	ldr	r3, [r4]
   1a710:	ldr	r3, [r3, #16]
   1a714:	cmp	r3, #0
   1a718:	str	r0, [r4, #8]
   1a71c:	beq	1a728 <Meter_new@@Base+0x74>
   1a720:	mov	r0, r4
   1a724:	blx	r3
   1a728:	mov	r0, r4
   1a72c:	ldr	r1, [r5, #36]	; 0x24
   1a730:	bl	1a61c <Meter_setMode@@Base>
   1a734:	mov	r0, r4
   1a738:	pop	{r4, r5, r6, r7, r8, pc}

0001a73c <Meter_toListItem@@Base>:
   1a73c:	push	{r4, r5, r6, r7, lr}
   1a740:	sub	sp, sp, #116	; 0x74
   1a744:	ldr	r6, [pc, #276]	; 1a860 <Meter_toListItem@@Base+0x124>
   1a748:	ldr	r2, [r0, #12]
   1a74c:	mov	r4, r0
   1a750:	ldr	r3, [r6]
   1a754:	cmp	r2, #0
   1a758:	mov	r7, r1
   1a75c:	str	r3, [sp, #108]	; 0x6c
   1a760:	strbeq	r2, [sp, #32]
   1a764:	bne	1a824 <Meter_toListItem@@Base+0xe8>
   1a768:	ldr	r3, [r4, #16]
   1a76c:	cmp	r3, #0
   1a770:	bgt	1a7e4 <Meter_toListItem@@Base+0xa8>
   1a774:	add	r5, sp, #112	; 0x70
   1a778:	mov	r3, #0
   1a77c:	strb	r3, [r5, #-92]!	; 0xffffffa4
   1a780:	ldr	r2, [r4]
   1a784:	add	r3, sp, #32
   1a788:	str	r3, [sp, #12]
   1a78c:	str	r5, [sp, #8]
   1a790:	ldr	r3, [pc, #204]	; 1a864 <Meter_toListItem@@Base+0x128>
   1a794:	ldr	r2, [r2, #56]	; 0x38
   1a798:	add	r0, sp, #56	; 0x38
   1a79c:	str	r2, [sp, #4]
   1a7a0:	str	r3, [sp]
   1a7a4:	mov	r2, #1
   1a7a8:	mov	r3, #51	; 0x33
   1a7ac:	mov	r1, #50	; 0x32
   1a7b0:	bl	15510 <__snprintf_chk@plt>
   1a7b4:	cmp	r0, #49	; 0x31
   1a7b8:	bhi	1a80c <Meter_toListItem@@Base+0xd0>
   1a7bc:	add	r0, sp, #56	; 0x38
   1a7c0:	mov	r1, #0
   1a7c4:	bl	193f4 <ListItem_new@@Base>
   1a7c8:	ldr	r2, [sp, #108]	; 0x6c
   1a7cc:	ldr	r3, [r6]
   1a7d0:	cmp	r2, r3
   1a7d4:	strb	r7, [r0, #12]
   1a7d8:	bne	1a85c <Meter_toListItem@@Base+0x120>
   1a7dc:	add	sp, sp, #116	; 0x74
   1a7e0:	pop	{r4, r5, r6, r7, pc}
   1a7e4:	ldr	r2, [pc, #124]	; 1a868 <Meter_toListItem@@Base+0x12c>
   1a7e8:	add	r5, sp, #20
   1a7ec:	mov	r0, r5
   1a7f0:	strd	r2, [sp]
   1a7f4:	mov	r1, #10
   1a7f8:	mov	r3, #11
   1a7fc:	mov	r2, #1
   1a800:	bl	15510 <__snprintf_chk@plt>
   1a804:	cmp	r0, #9
   1a808:	ble	1a780 <Meter_toListItem@@Base+0x44>
   1a80c:	mov	r0, #1
   1a810:	bl	15030 <curs_set@plt>
   1a814:	bl	14f28 <endwin@plt>
   1a818:	mov	r1, #0
   1a81c:	mov	r0, #1
   1a820:	bl	15114 <err@plt>
   1a824:	ldr	r1, [pc, #64]	; 1a86c <Meter_toListItem@@Base+0x130>
   1a828:	ldr	ip, [pc, #64]	; 1a870 <Meter_toListItem@@Base+0x134>
   1a82c:	mov	r3, #21
   1a830:	ldr	r0, [r1, r2, lsl #2]
   1a834:	mov	r2, #1
   1a838:	mov	r1, #20
   1a83c:	ldr	r0, [r0, #4]
   1a840:	str	ip, [sp]
   1a844:	str	r0, [sp, #4]
   1a848:	add	r0, sp, #32
   1a84c:	bl	15510 <__snprintf_chk@plt>
   1a850:	cmp	r0, #19
   1a854:	bls	1a768 <Meter_toListItem@@Base+0x2c>
   1a858:	b	1a80c <Meter_toListItem@@Base+0xd0>
   1a85c:	bl	15084 <__stack_chk_fail@plt>
   1a860:			; <UNDEFINED> instruction: 0x0003ccb8
   1a864:	andeq	r9, r2, r8, ror #26
   1a868:	andeq	r9, r2, r4, ror #26
   1a86c:	andeq	sp, r3, r8, asr fp
   1a870:	andeq	r9, r2, ip, asr sp
   1a874:	push	{r4, lr}
   1a878:	mov	r4, r0
   1a87c:	bl	1afe8 <Panel_done@@Base>
   1a880:	mov	r0, r4
   1a884:	pop	{r4, lr}
   1a888:	b	14fa0 <free@plt>

0001a88c <MetersPanel_setMoving@@Base>:
   1a88c:	add	r3, r0, #8192	; 0x2000
   1a890:	push	{r4, r5, r6, lr}
   1a894:	mov	r5, r1
   1a898:	strb	r1, [r3, #324]	; 0x144
   1a89c:	mov	r4, r0
   1a8a0:	bl	1b160 <Panel_getSelected@@Base>
   1a8a4:	ldr	r3, [pc, #84]	; 1a900 <MetersPanel_setMoving@@Base+0x74>
   1a8a8:	ldr	r3, [r3]
   1a8ac:	cmp	r0, #0
   1a8b0:	strbne	r5, [r0, #12]
   1a8b4:	cmp	r5, #0
   1a8b8:	beq	1a8e0 <MetersPanel_setMoving@@Base+0x54>
   1a8bc:	ldr	r1, [r3, #32]
   1a8c0:	mov	r0, r4
   1a8c4:	bl	1b02c <Panel_setSelectionColor@@Base>
   1a8c8:	ldr	r3, [pc, #52]	; 1a904 <MetersPanel_setMoving@@Base+0x78>
   1a8cc:	mov	r1, #0
   1a8d0:	ldr	r0, [r3]
   1a8d4:	str	r0, [r4, #52]	; 0x34
   1a8d8:	pop	{r4, r5, r6, lr}
   1a8dc:	b	188f8 <FunctionBar_draw@@Base>
   1a8e0:	mov	r0, r4
   1a8e4:	ldr	r1, [r3, #28]
   1a8e8:	bl	1b02c <Panel_setSelectionColor@@Base>
   1a8ec:	ldr	r0, [r4, #56]	; 0x38
   1a8f0:	mov	r1, #0
   1a8f4:	str	r0, [r4, #52]	; 0x34
   1a8f8:	pop	{r4, r5, r6, lr}
   1a8fc:	b	188f8 <FunctionBar_draw@@Base>
   1a900:	muleq	r3, r8, r1
   1a904:			; <UNDEFINED> instruction: 0x0003e7b4
   1a908:	push	{r4, r5, r6, r7, r8, lr}
   1a90c:	sub	sp, sp, #8
   1a910:	mov	r4, r1
   1a914:	mov	r5, r0
   1a918:	bl	1b1cc <Panel_getSelectedIndex@@Base>
   1a91c:	ldr	r3, [pc, #780]	; 1ac30 <MetersPanel_setMoving@@Base+0x3a4>
   1a920:	cmp	r4, r3
   1a924:	mov	r7, r0
   1a928:	beq	1ab50 <MetersPanel_setMoving@@Base+0x2c4>
   1a92c:	ble	1a98c <MetersPanel_setMoving@@Base+0x100>
   1a930:	ldr	r3, [pc, #764]	; 1ac34 <MetersPanel_setMoving@@Base+0x3a8>
   1a934:	cmp	r4, r3
   1a938:	beq	1ab8c <MetersPanel_setMoving@@Base+0x300>
   1a93c:	bgt	1aa0c <MetersPanel_setMoving@@Base+0x180>
   1a940:	cmp	r4, #260	; 0x104
   1a944:	beq	1ab64 <MetersPanel_setMoving@@Base+0x2d8>
   1a948:	blt	1aa88 <MetersPanel_setMoving@@Base+0x1fc>
   1a94c:	ldr	r3, [pc, #740]	; 1ac38 <MetersPanel_setMoving@@Base+0x3ac>
   1a950:	cmp	r4, r3
   1a954:	bne	1ab94 <MetersPanel_setMoving@@Base+0x308>
   1a958:	add	r4, r5, #8192	; 0x2000
   1a95c:	ldrb	r3, [r4, #324]	; 0x144
   1a960:	cmp	r3, #0
   1a964:	beq	1aa78 <MetersPanel_setMoving@@Base+0x1ec>
   1a968:	ldr	r6, [r4, #320]	; 0x140
   1a96c:	cmp	r6, #0
   1a970:	beq	1a984 <MetersPanel_setMoving@@Base+0xf8>
   1a974:	ldr	r3, [r4, #308]	; 0x134
   1a978:	ldr	r3, [r3, #16]
   1a97c:	cmp	r7, r3
   1a980:	blt	1abb8 <MetersPanel_setMoving@@Base+0x32c>
   1a984:	mov	r6, #1
   1a988:	b	1aab0 <MetersPanel_setMoving@@Base+0x224>
   1a98c:	cmp	r4, #43	; 0x2b
   1a990:	beq	1ab00 <MetersPanel_setMoving@@Base+0x274>
   1a994:	ble	1aa60 <MetersPanel_setMoving@@Base+0x1d4>
   1a998:	cmp	r4, #91	; 0x5b
   1a99c:	beq	1ab8c <MetersPanel_setMoving@@Base+0x300>
   1a9a0:	ble	1ab84 <MetersPanel_setMoving@@Base+0x2f8>
   1a9a4:	cmp	r4, #93	; 0x5d
   1a9a8:	beq	1ab00 <MetersPanel_setMoving@@Base+0x274>
   1a9ac:	cmp	r4, #116	; 0x74
   1a9b0:	bne	1aa78 <MetersPanel_setMoving@@Base+0x1ec>
   1a9b4:	add	r4, r5, #8192	; 0x2000
   1a9b8:	ldr	r3, [r4, #308]	; 0x134
   1a9bc:	ldr	r2, [r3, #16]
   1a9c0:	cmp	r2, #0
   1a9c4:	beq	1aa78 <MetersPanel_setMoving@@Base+0x1ec>
   1a9c8:	ldr	r3, [r3]
   1a9cc:	mov	r6, #1
   1a9d0:	ldr	r8, [r3, r7, lsl #2]
   1a9d4:	mov	r0, r8
   1a9d8:	ldr	r1, [r8, #12]
   1a9dc:	add	r1, r1, r6
   1a9e0:	cmp	r1, #5
   1a9e4:	moveq	r1, r6
   1a9e8:	bl	1a61c <Meter_setMode@@Base>
   1a9ec:	ldrb	r1, [r4, #324]	; 0x144
   1a9f0:	mov	r0, r8
   1a9f4:	bl	1a73c <Meter_toListItem@@Base>
   1a9f8:	mov	r1, r7
   1a9fc:	mov	r2, r0
   1aa00:	mov	r0, r5
   1aa04:	bl	1b10c <Panel_set@@Base>
   1aa08:	b	1aab0 <MetersPanel_setMoving@@Base+0x224>
   1aa0c:	ldr	r3, [pc, #552]	; 1ac3c <MetersPanel_setMoving@@Base+0x3b0>
   1aa10:	cmp	r4, r3
   1aa14:	beq	1ab20 <MetersPanel_setMoving@@Base+0x294>
   1aa18:	blt	1ab00 <MetersPanel_setMoving@@Base+0x274>
   1aa1c:	ldr	r3, [pc, #540]	; 1ac40 <MetersPanel_setMoving@@Base+0x3b4>
   1aa20:	cmp	r4, r3
   1aa24:	beq	1ab20 <MetersPanel_setMoving@@Base+0x294>
   1aa28:	add	r3, r3, #13
   1aa2c:	cmp	r4, r3
   1aa30:	bne	1aa78 <MetersPanel_setMoving@@Base+0x1ec>
   1aa34:	add	r4, r5, #8192	; 0x2000
   1aa38:	ldr	r3, [r4, #308]	; 0x134
   1aa3c:	ldr	r3, [r3, #16]
   1aa40:	cmp	r3, #0
   1aa44:	beq	1aa78 <MetersPanel_setMoving@@Base+0x1ec>
   1aa48:	ldrb	r1, [r4, #324]	; 0x144
   1aa4c:	mov	r6, #1
   1aa50:	mov	r0, r5
   1aa54:	eor	r1, r1, r6
   1aa58:	bl	1a88c <MetersPanel_setMoving@@Base>
   1aa5c:	b	1aab0 <MetersPanel_setMoving@@Base+0x224>
   1aa60:	cmp	r4, #13
   1aa64:	beq	1aa34 <MetersPanel_setMoving@@Base+0x1a8>
   1aa68:	cmp	r4, #32
   1aa6c:	beq	1a9b4 <MetersPanel_setMoving@@Base+0x128>
   1aa70:	cmp	r4, #10
   1aa74:	beq	1aa34 <MetersPanel_setMoving@@Base+0x1a8>
   1aa78:	mov	r6, #2
   1aa7c:	mov	r0, r6
   1aa80:	add	sp, sp, #8
   1aa84:	pop	{r4, r5, r6, r7, r8, pc}
   1aa88:	add	r4, r5, #8192	; 0x2000
   1aa8c:	ldrb	r3, [r4, #324]	; 0x144
   1aa90:	cmp	r3, #0
   1aa94:	beq	1aa78 <MetersPanel_setMoving@@Base+0x1ec>
   1aa98:	mov	r1, r7
   1aa9c:	ldr	r0, [r4, #308]	; 0x134
   1aaa0:	bl	20fc8 <Vector_moveUp@@Base>
   1aaa4:	mov	r0, r5
   1aaa8:	bl	1b180 <Panel_moveSelectedUp@@Base>
   1aaac:	mov	r6, #1
   1aab0:	ldr	r1, [r4, #312]	; 0x138
   1aab4:	ldr	r3, [r4, #304]	; 0x130
   1aab8:	mov	r2, #1
   1aabc:	ldr	r5, [r1, #28]
   1aac0:	strb	r2, [r3, #71]	; 0x47
   1aac4:	mov	r0, r5
   1aac8:	bl	19214 <Header_calculateHeight@@Base>
   1aacc:	mov	r0, r5
   1aad0:	bl	190e4 <Header_draw@@Base>
   1aad4:	ldr	ip, [r4, #312]	; 0x138
   1aad8:	ldr	r2, [r5, #20]
   1aadc:	mov	r0, ip
   1aae0:	ldr	r3, [ip, #8]
   1aae4:	ldr	r1, [ip]
   1aae8:	ldr	ip, [ip, #12]
   1aaec:	str	ip, [sp]
   1aaf0:	bl	1e198 <ScreenManager_resize@@Base>
   1aaf4:	mov	r0, r6
   1aaf8:	add	sp, sp, #8
   1aafc:	pop	{r4, r5, r6, r7, r8, pc}
   1ab00:	add	r4, r5, #8192	; 0x2000
   1ab04:	mov	r1, r7
   1ab08:	ldr	r0, [r4, #308]	; 0x134
   1ab0c:	bl	20ff0 <Vector_moveDown@@Base>
   1ab10:	mov	r0, r5
   1ab14:	bl	1b1a4 <Panel_moveSelectedDown@@Base>
   1ab18:	mov	r6, #1
   1ab1c:	b	1aab0 <MetersPanel_setMoving@@Base+0x224>
   1ab20:	add	r4, r5, #8192	; 0x2000
   1ab24:	ldr	r0, [r4, #308]	; 0x134
   1ab28:	ldr	r3, [r0, #16]
   1ab2c:	cmp	r3, #0
   1ab30:	beq	1aa78 <MetersPanel_setMoving@@Base+0x1ec>
   1ab34:	cmp	r3, r7
   1ab38:	bgt	1aba0 <MetersPanel_setMoving@@Base+0x314>
   1ab3c:	mov	r0, r5
   1ab40:	mov	r1, #0
   1ab44:	bl	1a88c <MetersPanel_setMoving@@Base>
   1ab48:	mov	r6, #1
   1ab4c:	b	1aab0 <MetersPanel_setMoving@@Base+0x224>
   1ab50:	add	r4, r5, #8192	; 0x2000
   1ab54:	ldrb	r3, [r4, #324]	; 0x144
   1ab58:	cmp	r3, #0
   1ab5c:	bne	1ab04 <MetersPanel_setMoving@@Base+0x278>
   1ab60:	b	1aa78 <MetersPanel_setMoving@@Base+0x1ec>
   1ab64:	add	r4, r5, #8192	; 0x2000
   1ab68:	ldrb	r3, [r4, #324]	; 0x144
   1ab6c:	cmp	r3, #0
   1ab70:	beq	1aa78 <MetersPanel_setMoving@@Base+0x1ec>
   1ab74:	ldr	r6, [r4, #316]	; 0x13c
   1ab78:	cmp	r6, #0
   1ab7c:	bne	1a974 <MetersPanel_setMoving@@Base+0xe8>
   1ab80:	b	1a984 <MetersPanel_setMoving@@Base+0xf8>
   1ab84:	cmp	r4, #45	; 0x2d
   1ab88:	bne	1aa78 <MetersPanel_setMoving@@Base+0x1ec>
   1ab8c:	add	r4, r5, #8192	; 0x2000
   1ab90:	b	1aa98 <MetersPanel_setMoving@@Base+0x20c>
   1ab94:	cmp	r4, #268	; 0x10c
   1ab98:	beq	1a9b4 <MetersPanel_setMoving@@Base+0x128>
   1ab9c:	b	1aa78 <MetersPanel_setMoving@@Base+0x1ec>
   1aba0:	mov	r1, r7
   1aba4:	bl	20f68 <Vector_remove@@Base>
   1aba8:	mov	r1, r7
   1abac:	mov	r0, r5
   1abb0:	bl	1b124 <Panel_remove@@Base>
   1abb4:	b	1ab3c <MetersPanel_setMoving@@Base+0x2b0>
   1abb8:	mov	r1, #0
   1abbc:	mov	r0, r5
   1abc0:	bl	1a88c <MetersPanel_setMoving@@Base>
   1abc4:	mov	r1, r7
   1abc8:	ldr	r0, [r4, #308]	; 0x134
   1abcc:	bl	20f24 <Vector_take@@Base>
   1abd0:	mov	r1, r7
   1abd4:	mov	r8, r0
   1abd8:	mov	r0, r5
   1abdc:	bl	1b124 <Panel_remove@@Base>
   1abe0:	add	r3, r6, #8192	; 0x2000
   1abe4:	mov	r2, r8
   1abe8:	ldr	r0, [r3, #308]	; 0x134
   1abec:	mov	r1, r7
   1abf0:	bl	20ed0 <Vector_insert@@Base>
   1abf4:	mov	r1, #0
   1abf8:	mov	r0, r8
   1abfc:	bl	1a73c <Meter_toListItem@@Base>
   1ac00:	mov	r1, r7
   1ac04:	mov	r2, r0
   1ac08:	mov	r0, r6
   1ac0c:	bl	1b0f0 <Panel_insert@@Base>
   1ac10:	mov	r0, r6
   1ac14:	mov	r1, r7
   1ac18:	bl	1b1e0 <Panel_setSelected@@Base>
   1ac1c:	mov	r0, r6
   1ac20:	mov	r1, #1
   1ac24:	bl	1a88c <MetersPanel_setMoving@@Base>
   1ac28:	mov	r6, #2
   1ac2c:	b	1aab0 <MetersPanel_setMoving@@Base+0x224>
   1ac30:	andeq	r0, r0, r2, lsl #2
   1ac34:	andeq	r0, r0, pc, lsl #2
   1ac38:	andeq	r0, r0, r5, lsl #2
   1ac3c:	andeq	r0, r0, r1, lsl r1
   1ac40:	andeq	r0, r0, sl, asr #2

0001ac44 <MetersPanel_new@@Base>:
   1ac44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac48:	mov	r8, r0
   1ac4c:	sub	sp, sp, #20
   1ac50:	ldr	r0, [pc, #228]	; 1ad3c <MetersPanel_new@@Base+0xf8>
   1ac54:	mov	r7, r3
   1ac58:	mov	r9, r1
   1ac5c:	mov	r5, r2
   1ac60:	bl	23fb0 <xMalloc@@Base>
   1ac64:	ldr	r4, [pc, #212]	; 1ad40 <MetersPanel_new@@Base+0xfc>
   1ac68:	ldr	r1, [pc, #212]	; 1ad44 <MetersPanel_new@@Base+0x100>
   1ac6c:	add	r2, r4, #20
   1ac70:	ldr	sl, [pc, #208]	; 1ad48 <MetersPanel_new@@Base+0x104>
   1ac74:	str	r4, [r0]
   1ac78:	mov	r6, r0
   1ac7c:	add	r0, r1, #20
   1ac80:	bl	184a4 <FunctionBar_new@@Base>
   1ac84:	ldr	r3, [sl]
   1ac88:	cmp	r3, #0
   1ac8c:	mov	fp, r0
   1ac90:	beq	1ad24 <MetersPanel_new@@Base+0xe0>
   1ac94:	ldr	r2, [pc, #176]	; 1ad4c <MetersPanel_new@@Base+0x108>
   1ac98:	mov	r3, #1
   1ac9c:	mov	r1, r3
   1aca0:	stmib	sp, {r2, r3, fp}
   1aca4:	mov	r0, r6
   1aca8:	mov	r2, r3
   1acac:	str	r3, [sp]
   1acb0:	bl	1aef0 <Panel_init@@Base>
   1acb4:	add	r3, r6, #8192	; 0x2000
   1acb8:	mov	r4, #0
   1acbc:	str	r8, [r3, #304]	; 0x130
   1acc0:	str	r5, [r3, #308]	; 0x134
   1acc4:	str	r7, [r3, #312]	; 0x138
   1acc8:	strb	r4, [r3, #324]	; 0x144
   1accc:	str	r4, [r3, #320]	; 0x140
   1acd0:	str	r4, [r3, #316]	; 0x13c
   1acd4:	mov	r1, r9
   1acd8:	mov	r0, r6
   1acdc:	bl	1b048 <Panel_setHeader@@Base>
   1ace0:	ldr	r3, [r5, #16]
   1ace4:	cmp	r3, r4
   1ace8:	ble	1ad18 <MetersPanel_new@@Base+0xd4>
   1acec:	ldr	r3, [r5]
   1acf0:	mov	r1, #0
   1acf4:	ldr	r0, [r3, r4, lsl #2]
   1acf8:	bl	1a73c <Meter_toListItem@@Base>
   1acfc:	add	r4, r4, #1
   1ad00:	mov	r1, r0
   1ad04:	mov	r0, r6
   1ad08:	bl	1b0d4 <Panel_add@@Base>
   1ad0c:	ldr	r3, [r5, #16]
   1ad10:	cmp	r3, r4
   1ad14:	bgt	1acec <MetersPanel_new@@Base+0xa8>
   1ad18:	mov	r0, r6
   1ad1c:	add	sp, sp, #20
   1ad20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad24:	ldr	r1, [pc, #36]	; 1ad50 <MetersPanel_new@@Base+0x10c>
   1ad28:	add	r2, r4, #40	; 0x28
   1ad2c:	add	r0, r1, #36	; 0x24
   1ad30:	bl	184a4 <FunctionBar_new@@Base>
   1ad34:	str	r0, [sl]
   1ad38:	b	1ac94 <MetersPanel_new@@Base+0x50>
   1ad3c:	andeq	r2, r0, r8, asr #2
   1ad40:	andeq	sp, r3, r8, lsr ip
   1ad44:	andeq	r9, r2, r0, lsr pc
   1ad48:			; <UNDEFINED> instruction: 0x0003e7b4
   1ad4c:	andeq	sp, r3, r0, asr sl
   1ad50:	andeq	r9, r2, ip, asr pc

0001ad54 <Panel_selectByTyping@@Base>:
   1ad54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad58:	mov	r6, r0
   1ad5c:	ldr	r3, [r0, #24]
   1ad60:	ldr	r4, [r0, #40]	; 0x28
   1ad64:	sub	sp, sp, #12
   1ad68:	cmp	r4, #0
   1ad6c:	mov	r7, r1
   1ad70:	ldr	r8, [r3, #16]
   1ad74:	beq	1ae8c <Panel_selectByTyping@@Base+0x138>
   1ad78:	sub	r3, r7, #1
   1ad7c:	cmp	r3, #253	; 0xfd
   1ad80:	bhi	1ae34 <Panel_selectByTyping@@Base+0xe0>
   1ad84:	bl	15258 <__ctype_b_loc@plt>
   1ad88:	lsl	r3, r7, #1
   1ad8c:	ldr	r2, [r0]
   1ad90:	ldrh	r3, [r2, r3]
   1ad94:	ands	r3, r3, #8
   1ad98:	beq	1ae48 <Panel_selectByTyping@@Base+0xf4>
   1ad9c:	mov	r0, r4
   1ada0:	bl	152a0 <strlen@plt>
   1ada4:	cmp	r0, #98	; 0x62
   1ada8:	mov	r9, r0
   1adac:	bls	1ae6c <Panel_selectByTyping@@Base+0x118>
   1adb0:	mov	r3, #2
   1adb4:	str	r3, [sp, #4]
   1adb8:	cmp	r8, #0
   1adbc:	ble	1ae10 <Panel_selectByTyping@@Base+0xbc>
   1adc0:	ldr	sl, [r6, #24]
   1adc4:	mov	r5, #0
   1adc8:	ldr	fp, [sl]
   1adcc:	sub	fp, fp, #4
   1add0:	ldr	r3, [fp, #4]!
   1add4:	ldr	r0, [r3, #4]
   1add8:	ldrb	r3, [r0]
   1addc:	cmp	r3, #32
   1ade0:	bne	1adf0 <Panel_selectByTyping@@Base+0x9c>
   1ade4:	ldrb	r3, [r0, #1]!
   1ade8:	cmp	r3, #32
   1adec:	beq	1ade4 <Panel_selectByTyping@@Base+0x90>
   1adf0:	mov	r2, r9
   1adf4:	mov	r1, r4
   1adf8:	bl	15300 <strncasecmp@plt>
   1adfc:	cmp	r0, #0
   1ae00:	beq	1aea4 <Panel_selectByTyping@@Base+0x150>
   1ae04:	add	r5, r5, #1
   1ae08:	cmp	r8, r5
   1ae0c:	bne	1add0 <Panel_selectByTyping@@Base+0x7c>
   1ae10:	ldr	r3, [sp, #4]
   1ae14:	strb	r7, [r4]
   1ae18:	cmp	r3, #1
   1ae1c:	mov	r3, #0
   1ae20:	strb	r3, [r4, #1]
   1ae24:	bne	1aed8 <Panel_selectByTyping@@Base+0x184>
   1ae28:	mov	r0, #1
   1ae2c:	add	sp, sp, #12
   1ae30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae34:	cmn	r7, #1
   1ae38:	bne	1ae60 <Panel_selectByTyping@@Base+0x10c>
   1ae3c:	mov	r0, #2
   1ae40:	add	sp, sp, #12
   1ae44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae48:	cmp	r7, #13
   1ae4c:	strb	r3, [r4]
   1ae50:	moveq	r0, #4
   1ae54:	bne	1ae3c <Panel_selectByTyping@@Base+0xe8>
   1ae58:	add	sp, sp, #12
   1ae5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae60:	mov	r3, #0
   1ae64:	strb	r3, [r4]
   1ae68:	b	1ae3c <Panel_selectByTyping@@Base+0xe8>
   1ae6c:	mov	r3, r4
   1ae70:	mov	r2, #0
   1ae74:	strb	r7, [r3, r9]!
   1ae78:	mov	r0, r4
   1ae7c:	strb	r2, [r3, #1]
   1ae80:	bl	152a0 <strlen@plt>
   1ae84:	mov	r9, r0
   1ae88:	b	1adb0 <Panel_selectByTyping@@Base+0x5c>
   1ae8c:	mov	r1, #1
   1ae90:	mov	r0, #100	; 0x64
   1ae94:	bl	23fd8 <xCalloc@@Base>
   1ae98:	mov	r4, r0
   1ae9c:	str	r0, [r6, #40]	; 0x28
   1aea0:	b	1ad78 <Panel_selectByTyping@@Base+0x24>
   1aea4:	ldr	r3, [sl, #16]
   1aea8:	cmp	r3, r5
   1aeac:	suble	r5, r3, #1
   1aeb0:	ldr	r3, [r6]
   1aeb4:	bicle	r5, r5, r5, asr #31
   1aeb8:	ldr	r3, [r3, #16]
   1aebc:	str	r5, [r6, #28]
   1aec0:	cmp	r3, #0
   1aec4:	beq	1ae28 <Panel_selectByTyping@@Base+0xd4>
   1aec8:	mov	r0, r6
   1aecc:	mvn	r1, #0
   1aed0:	blx	r3
   1aed4:	b	1ae28 <Panel_selectByTyping@@Base+0xd4>
   1aed8:	mov	r0, r4
   1aedc:	bl	152a0 <strlen@plt>
   1aee0:	mov	r3, #1
   1aee4:	str	r3, [sp, #4]
   1aee8:	mov	r9, r0
   1aeec:	b	1adb8 <Panel_selectByTyping@@Base+0x64>

0001aef0 <Panel_init@@Base>:
   1aef0:	push	{r4, r5, r6, lr}
   1aef4:	mov	r4, r0
   1aef8:	ldrb	ip, [sp, #24]
   1aefc:	ldr	r0, [sp, #16]
   1af00:	mov	r5, #0
   1af04:	stmib	r4, {r1, r2, r3}
   1af08:	mov	r1, ip
   1af0c:	str	r0, [r4, #16]
   1af10:	mvn	r2, #0
   1af14:	str	r5, [r4, #40]	; 0x28
   1af18:	ldr	r0, [sp, #20]
   1af1c:	ldr	r6, [sp, #28]
   1af20:	bl	20ce4 <Vector_new@@Base>
   1af24:	mov	r3, #1
   1af28:	mov	r1, r5
   1af2c:	strb	r3, [r4, #50]	; 0x32
   1af30:	ldr	r2, [pc, #64]	; 1af78 <Panel_init@@Base+0x88>
   1af34:	str	r5, [r4, #44]	; 0x2c
   1af38:	strh	r5, [r4, #48]	; 0x30
   1af3c:	str	r5, [r4, #28]
   1af40:	str	r5, [r4, #32]
   1af44:	str	r0, [r4, #24]
   1af48:	add	r0, r4, #60	; 0x3c
   1af4c:	bl	15330 <memset@plt>
   1af50:	ldr	r2, [pc, #36]	; 1af7c <Panel_init@@Base+0x8c>
   1af54:	add	r3, r4, #8192	; 0x2000
   1af58:	add	r1, r4, #68	; 0x44
   1af5c:	ldr	r2, [r2]
   1af60:	str	r6, [r4, #56]	; 0x38
   1af64:	str	r6, [r4, #52]	; 0x34
   1af68:	ldr	r2, [r2, #28]
   1af6c:	str	r1, [r4, #64]	; 0x40
   1af70:	str	r2, [r3, #300]	; 0x12c
   1af74:	pop	{r4, r5, r6, pc}
   1af78:	strdeq	r2, [r0], -r0
   1af7c:	muleq	r3, r8, r1

0001af80 <Panel_new@@Base>:
   1af80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af84:	sub	sp, sp, #20
   1af88:	mov	r9, r0
   1af8c:	ldr	r0, [pc, #76]	; 1afe0 <Panel_new@@Base+0x60>
   1af90:	mov	sl, r1
   1af94:	mov	fp, r2
   1af98:	mov	r8, r3
   1af9c:	ldrb	r6, [sp, #56]	; 0x38
   1afa0:	ldr	r5, [sp, #60]	; 0x3c
   1afa4:	ldr	r7, [sp, #64]	; 0x40
   1afa8:	bl	23fb0 <xMalloc@@Base>
   1afac:	ldr	ip, [pc, #48]	; 1afe4 <Panel_new@@Base+0x64>
   1afb0:	mov	r3, fp
   1afb4:	mov	r2, sl
   1afb8:	mov	r1, r9
   1afbc:	str	ip, [r0]
   1afc0:	str	r8, [sp]
   1afc4:	strd	r6, [sp, #8]
   1afc8:	str	r5, [sp, #4]
   1afcc:	mov	r4, r0
   1afd0:	bl	1aef0 <Panel_init@@Base>
   1afd4:	mov	r0, r4
   1afd8:	add	sp, sp, #20
   1afdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1afe0:	andeq	r2, r0, r0, lsr r1
   1afe4:	andeq	sp, r3, r4, lsl #25

0001afe8 <Panel_done@@Base>:
   1afe8:	push	{r4, lr}
   1afec:	mov	r4, r0
   1aff0:	ldr	r0, [r0, #40]	; 0x28
   1aff4:	bl	14fa0 <free@plt>
   1aff8:	ldr	r0, [r4, #24]
   1affc:	bl	20d40 <Vector_delete@@Base>
   1b000:	ldr	r0, [r4, #56]	; 0x38
   1b004:	bl	18624 <FunctionBar_delete@@Base>
   1b008:	add	r0, r4, #60	; 0x3c
   1b00c:	pop	{r4, lr}
   1b010:	b	1dbf0 <RichString_prune@@Base>

0001b014 <Panel_delete@@Base>:
   1b014:	push	{r4, lr}
   1b018:	mov	r4, r0
   1b01c:	bl	1afe8 <Panel_done@@Base>
   1b020:	mov	r0, r4
   1b024:	pop	{r4, lr}
   1b028:	b	14fa0 <free@plt>

0001b02c <Panel_setSelectionColor@@Base>:
   1b02c:	add	r0, r0, #8192	; 0x2000
   1b030:	str	r1, [r0, #300]	; 0x12c
   1b034:	bx	lr

0001b038 <Panel_getHeader@@Base>:
   1b038:	mov	r3, #1
   1b03c:	strb	r3, [r0, #50]	; 0x32
   1b040:	add	r0, r0, #60	; 0x3c
   1b044:	bx	lr

0001b048 <Panel_setHeader@@Base>:
   1b048:	ldr	r3, [pc, #36]	; 1b074 <Panel_setHeader@@Base+0x2c>
   1b04c:	push	{r4, lr}
   1b050:	mov	r2, r1
   1b054:	ldr	r3, [r3]
   1b058:	mov	r4, r0
   1b05c:	add	r0, r0, #60	; 0x3c
   1b060:	ldr	r1, [r3, #20]
   1b064:	bl	1dedc <RichString_write@@Base>
   1b068:	mov	r3, #1
   1b06c:	strb	r3, [r4, #50]	; 0x32
   1b070:	pop	{r4, pc}
   1b074:	muleq	r3, r8, r1

0001b078 <Panel_move@@Base>:
   1b078:	mov	r3, #1
   1b07c:	stmib	r0, {r1, r2}
   1b080:	strb	r3, [r0, #50]	; 0x32
   1b084:	bx	lr

0001b088 <Panel_resize@@Base>:
   1b088:	ldr	r3, [r0, #60]	; 0x3c
   1b08c:	str	r1, [r0, #12]
   1b090:	cmp	r3, #0
   1b094:	subgt	r2, r2, #1
   1b098:	mov	r3, #1
   1b09c:	str	r2, [r0, #16]
   1b0a0:	strb	r3, [r0, #50]	; 0x32
   1b0a4:	bx	lr

0001b0a8 <Panel_prune@@Base>:
   1b0a8:	push	{r4, lr}
   1b0ac:	mov	r4, r0
   1b0b0:	ldr	r0, [r0, #24]
   1b0b4:	bl	20da8 <Vector_prune@@Base>
   1b0b8:	mov	r3, #0
   1b0bc:	mov	r2, #1
   1b0c0:	strb	r2, [r4, #50]	; 0x32
   1b0c4:	str	r3, [r4, #44]	; 0x2c
   1b0c8:	str	r3, [r4, #28]
   1b0cc:	str	r3, [r4, #32]
   1b0d0:	pop	{r4, pc}

0001b0d4 <Panel_add@@Base>:
   1b0d4:	push	{r4, lr}
   1b0d8:	mov	r4, r0
   1b0dc:	ldr	r0, [r0, #24]
   1b0e0:	bl	21094 <Vector_add@@Base>
   1b0e4:	mov	r3, #1
   1b0e8:	strb	r3, [r4, #50]	; 0x32
   1b0ec:	pop	{r4, pc}

0001b0f0 <Panel_insert@@Base>:
   1b0f0:	push	{r4, lr}
   1b0f4:	mov	r4, r0
   1b0f8:	ldr	r0, [r0, #24]
   1b0fc:	bl	20ed0 <Vector_insert@@Base>
   1b100:	mov	r3, #1
   1b104:	strb	r3, [r4, #50]	; 0x32
   1b108:	pop	{r4, pc}

0001b10c <Panel_set@@Base>:
   1b10c:	ldr	r0, [r0, #24]
   1b110:	b	21020 <Vector_set@@Base>

0001b114 <Panel_get@@Base>:
   1b114:	ldr	r3, [r0, #24]
   1b118:	ldr	r3, [r3]
   1b11c:	ldr	r0, [r3, r1, lsl #2]
   1b120:	bx	lr

0001b124 <Panel_remove@@Base>:
   1b124:	push	{r4, lr}
   1b128:	mov	r3, #1
   1b12c:	mov	r4, r0
   1b130:	strb	r3, [r0, #50]	; 0x32
   1b134:	ldr	r0, [r0, #24]
   1b138:	bl	20f68 <Vector_remove@@Base>
   1b13c:	ldr	r3, [r4, #28]
   1b140:	cmp	r3, #0
   1b144:	pople	{r4, pc}
   1b148:	ldr	r2, [r4, #24]
   1b14c:	ldr	r2, [r2, #16]
   1b150:	cmp	r3, r2
   1b154:	subge	r3, r3, #1
   1b158:	strge	r3, [r4, #28]
   1b15c:	pop	{r4, pc}

0001b160 <Panel_getSelected@@Base>:
   1b160:	ldr	r3, [r0, #24]
   1b164:	ldr	r2, [r3, #16]
   1b168:	cmp	r2, #0
   1b16c:	ldrgt	r2, [r0, #28]
   1b170:	ldrgt	r3, [r3]
   1b174:	ldrgt	r0, [r3, r2, lsl #2]
   1b178:	movle	r0, #0
   1b17c:	bx	lr

0001b180 <Panel_moveSelectedUp@@Base>:
   1b180:	push	{r4, lr}
   1b184:	mov	r4, r0
   1b188:	ldrd	r0, [r0, #24]
   1b18c:	bl	20fc8 <Vector_moveUp@@Base>
   1b190:	ldr	r3, [r4, #28]
   1b194:	cmp	r3, #0
   1b198:	subgt	r3, r3, #1
   1b19c:	strgt	r3, [r4, #28]
   1b1a0:	pop	{r4, pc}

0001b1a4 <Panel_moveSelectedDown@@Base>:
   1b1a4:	push	{r4, lr}
   1b1a8:	mov	r4, r0
   1b1ac:	ldrd	r0, [r0, #24]
   1b1b0:	bl	20ff0 <Vector_moveDown@@Base>
   1b1b4:	ldrd	r2, [r4, #24]
   1b1b8:	ldr	r2, [r2, #16]
   1b1bc:	add	r3, r3, #1
   1b1c0:	cmp	r3, r2
   1b1c4:	strlt	r3, [r4, #28]
   1b1c8:	pop	{r4, pc}

0001b1cc <Panel_getSelectedIndex@@Base>:
   1b1cc:	ldr	r0, [r0, #28]
   1b1d0:	bx	lr

0001b1d4 <Panel_size@@Base>:
   1b1d4:	ldr	r3, [r0, #24]
   1b1d8:	ldr	r0, [r3, #16]
   1b1dc:	bx	lr

0001b1e0 <Panel_setSelected@@Base>:
   1b1e0:	ldr	r3, [r0, #24]
   1b1e4:	ldr	r3, [r3, #16]
   1b1e8:	cmp	r3, r1
   1b1ec:	suble	r1, r3, #1
   1b1f0:	ldr	r3, [r0]
   1b1f4:	bic	r1, r1, r1, asr #31
   1b1f8:	ldr	r3, [r3, #16]
   1b1fc:	str	r1, [r0, #28]
   1b200:	cmp	r3, #0
   1b204:	bxeq	lr
   1b208:	mvn	r1, #0
   1b20c:	bx	r3

0001b210 <Panel_draw@@Base>:
   1b210:	ldr	r2, [r0, #24]
   1b214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b218:	sub	sp, sp, #16896	; 0x4200
   1b21c:	ldr	r3, [pc, #1624]	; 1b87c <Panel_draw@@Base+0x66c>
   1b220:	sub	sp, sp, #20
   1b224:	ldr	r7, [r2, #16]
   1b228:	add	r2, sp, #16896	; 0x4200
   1b22c:	ldr	r3, [r3]
   1b230:	add	r2, r2, #12
   1b234:	str	r3, [r2]
   1b238:	ldrsh	r3, [r0, #48]	; 0x30
   1b23c:	ldr	r6, [r0, #60]	; 0x3c
   1b240:	mov	r4, r0
   1b244:	str	r3, [sp, #16]
   1b248:	ldr	r3, [r0, #8]
   1b24c:	cmp	r6, #0
   1b250:	str	r3, [sp, #8]
   1b254:	ldr	r3, [r0, #16]
   1b258:	mov	r9, r1
   1b25c:	ldr	sl, [r0, #4]
   1b260:	str	r3, [sp, #4]
   1b264:	ldrle	r8, [pc, #1556]	; 1b880 <Panel_draw@@Base+0x670>
   1b268:	ble	1b2d0 <Panel_draw@@Base+0xc0>
   1b26c:	ldr	r5, [pc, #1552]	; 1b884 <Panel_draw@@Base+0x674>
   1b270:	ldr	r8, [pc, #1544]	; 1b880 <Panel_draw@@Base+0x670>
   1b274:	cmp	r1, #0
   1b278:	ldr	r3, [r5]
   1b27c:	ldr	r0, [r8]
   1b280:	mov	r2, sl
   1b284:	ldrne	r3, [r3, #20]
   1b288:	ldreq	r3, [r3, #24]
   1b28c:	cmp	r0, #0
   1b290:	strne	r3, [r0, #16]
   1b294:	ldr	r1, [sp, #8]
   1b298:	bl	15360 <wmove@plt>
   1b29c:	cmn	r0, #1
   1b2a0:	bne	1b5dc <Panel_draw@@Base+0x3cc>
   1b2a4:	ldr	r3, [sp, #16]
   1b2a8:	ldr	r0, [r8]
   1b2ac:	cmp	r3, r6
   1b2b0:	blt	1b5fc <Panel_draw@@Base+0x3ec>
   1b2b4:	cmp	r0, #0
   1b2b8:	ldrne	r3, [r5]
   1b2bc:	ldrne	r3, [r3]
   1b2c0:	strne	r3, [r0, #16]
   1b2c4:	ldr	r3, [sp, #8]
   1b2c8:	add	r3, r3, #1
   1b2cc:	str	r3, [sp, #8]
   1b2d0:	ldr	r3, [r4, #44]	; 0x2c
   1b2d4:	cmp	r3, #0
   1b2d8:	blt	1b618 <Panel_draw@@Base+0x408>
   1b2dc:	cmp	r3, r7
   1b2e0:	bge	1b5bc <Panel_draw@@Base+0x3ac>
   1b2e4:	ldr	r6, [r4, #28]
   1b2e8:	cmp	r6, r3
   1b2ec:	bge	1b584 <Panel_draw@@Base+0x374>
   1b2f0:	ldr	r3, [sp, #4]
   1b2f4:	mov	r5, #1
   1b2f8:	add	r2, r6, r3
   1b2fc:	str	r6, [r4, #44]	; 0x2c
   1b300:	strb	r5, [r4, #50]	; 0x32
   1b304:	cmp	r9, #0
   1b308:	addne	r3, r4, #8192	; 0x2000
   1b30c:	ldreq	r3, [pc, #1392]	; 1b884 <Panel_draw@@Base+0x674>
   1b310:	ldrne	r3, [r3, #300]	; 0x12c
   1b314:	ldreq	r3, [r3]
   1b318:	ldreq	r3, [r3, #36]	; 0x24
   1b31c:	cmp	r5, #0
   1b320:	str	r3, [sp, #32]
   1b324:	beq	1b62c <Panel_draw@@Base+0x41c>
   1b328:	cmp	r7, r2
   1b32c:	movge	r3, r2
   1b330:	ldr	r2, [sp, #4]
   1b334:	movlt	r3, r7
   1b338:	cmp	r3, r6
   1b33c:	cmpgt	r2, #0
   1b340:	str	r3, [sp, #28]
   1b344:	movgt	r5, #1
   1b348:	movle	r5, #0
   1b34c:	ble	1b4f0 <Panel_draw@@Base+0x2e0>
   1b350:	ldr	r3, [sp, #16]
   1b354:	str	sl, [sp, #24]
   1b358:	lsl	r9, r6, #2
   1b35c:	add	r3, r3, r3, lsl #1
   1b360:	mov	r5, #0
   1b364:	lsl	r3, r3, #3
   1b368:	str	r3, [sp, #36]	; 0x24
   1b36c:	add	r3, sp, #8512	; 0x2140
   1b370:	add	r3, r3, #16
   1b374:	sub	r3, r3, #52	; 0x34
   1b378:	str	r3, [sp, #12]
   1b37c:	mov	sl, r8
   1b380:	b	1b3e0 <Panel_draw@@Base+0x1d0>
   1b384:	ldr	r3, [sp, #20]
   1b388:	cmp	r3, r6
   1b38c:	bne	1b3a8 <Panel_draw@@Base+0x198>
   1b390:	ldr	r3, [sl]
   1b394:	cmp	r3, #0
   1b398:	ldrne	r2, [pc, #1252]	; 1b884 <Panel_draw@@Base+0x674>
   1b39c:	ldrne	r2, [r2]
   1b3a0:	ldrne	r2, [r2]
   1b3a4:	strne	r2, [r3, #16]
   1b3a8:	ldr	r0, [sp, #12]
   1b3ac:	bl	1dbf0 <RichString_prune@@Base>
   1b3b0:	add	r5, r5, #1
   1b3b4:	ldr	r3, [sp, #4]
   1b3b8:	ldr	r2, [sp, #28]
   1b3bc:	cmp	r5, r3
   1b3c0:	add	r6, r6, #1
   1b3c4:	movge	r3, #0
   1b3c8:	movlt	r3, #1
   1b3cc:	cmp	r2, r6
   1b3d0:	movle	r3, #0
   1b3d4:	cmp	r3, #0
   1b3d8:	add	r9, r9, #4
   1b3dc:	beq	1b4e8 <Panel_draw@@Base+0x2d8>
   1b3e0:	ldr	r3, [r4, #24]
   1b3e4:	ldr	r3, [r3]
   1b3e8:	ldr	r7, [r3, r9]
   1b3ec:	cmp	r7, #0
   1b3f0:	beq	1b3b4 <Panel_draw@@Base+0x1a4>
   1b3f4:	ldr	fp, [sp, #12]
   1b3f8:	ldr	r2, [pc, #1160]	; 1b888 <Panel_draw@@Base+0x678>
   1b3fc:	mov	r1, #0
   1b400:	mov	r0, fp
   1b404:	bl	15330 <memset@plt>
   1b408:	add	r8, sp, #8704	; 0x2200
   1b40c:	ldr	r3, [r7]
   1b410:	add	r2, sp, #8512	; 0x2140
   1b414:	add	r8, r8, #16
   1b418:	add	r2, r2, #16
   1b41c:	sub	r2, r2, #44	; 0x2c
   1b420:	ldr	r3, [r3, #4]
   1b424:	mov	r0, r7
   1b428:	str	r2, [r8, #-240]	; 0xffffff10
   1b42c:	mov	r1, fp
   1b430:	blx	r3
   1b434:	ldr	r2, [sp, #16]
   1b438:	ldr	fp, [r8, #-244]	; 0xffffff0c
   1b43c:	ldr	r3, [r4, #12]
   1b440:	sub	r7, fp, r2
   1b444:	ldr	r2, [r4, #28]
   1b448:	cmp	r7, r3
   1b44c:	movge	r7, r3
   1b450:	cmp	r2, r6
   1b454:	str	r2, [sp, #20]
   1b458:	bne	1b47c <Panel_draw@@Base+0x26c>
   1b45c:	ldr	r3, [sl]
   1b460:	ldr	r1, [sp, #32]
   1b464:	cmp	r3, #0
   1b468:	ldr	r0, [sp, #12]
   1b46c:	ldrne	r2, [sp, #32]
   1b470:	strne	r2, [r3, #16]
   1b474:	bl	1dc34 <RichString_setAttr@@Base>
   1b478:	str	fp, [r4, #36]	; 0x24
   1b47c:	ldr	r3, [sp, #8]
   1b480:	ldr	r2, [sp, #24]
   1b484:	add	fp, r3, r5
   1b488:	mov	r1, fp
   1b48c:	ldr	r0, [sl]
   1b490:	bl	15360 <wmove@plt>
   1b494:	cmn	r0, #1
   1b498:	beq	1b4ac <Panel_draw@@Base+0x29c>
   1b49c:	ldr	r2, [r4, #12]
   1b4a0:	mov	r1, #32
   1b4a4:	ldr	r0, [sl]
   1b4a8:	bl	15048 <whline@plt>
   1b4ac:	cmp	r7, #0
   1b4b0:	ble	1b384 <Panel_draw@@Base+0x174>
   1b4b4:	mov	r1, fp
   1b4b8:	ldr	r2, [sp, #24]
   1b4bc:	ldr	r0, [sl]
   1b4c0:	bl	15360 <wmove@plt>
   1b4c4:	cmn	r0, #1
   1b4c8:	beq	1b384 <Panel_draw@@Base+0x174>
   1b4cc:	ldr	r1, [r8, #-240]	; 0xffffff10
   1b4d0:	ldr	r3, [sp, #36]	; 0x24
   1b4d4:	mov	r2, r7
   1b4d8:	add	r1, r1, r3
   1b4dc:	ldr	r0, [sl]
   1b4e0:	bl	15384 <wadd_wchnstr@plt>
   1b4e4:	b	1b384 <Panel_draw@@Base+0x174>
   1b4e8:	mov	r8, sl
   1b4ec:	ldr	sl, [sp, #24]
   1b4f0:	ldr	r3, [sp, #4]
   1b4f4:	cmp	r3, r5
   1b4f8:	ble	1b53c <Panel_draw@@Base+0x32c>
   1b4fc:	ldr	r2, [sp, #8]
   1b500:	add	r5, r2, r5
   1b504:	add	r6, r3, r2
   1b508:	mov	r2, sl
   1b50c:	mov	r1, r5
   1b510:	ldr	r0, [r8]
   1b514:	bl	15360 <wmove@plt>
   1b518:	cmn	r0, #1
   1b51c:	beq	1b530 <Panel_draw@@Base+0x320>
   1b520:	ldr	r2, [r4, #12]
   1b524:	mov	r1, #32
   1b528:	ldr	r0, [r8]
   1b52c:	bl	15048 <whline@plt>
   1b530:	add	r5, r5, #1
   1b534:	cmp	r6, r5
   1b538:	bne	1b508 <Panel_draw@@Base+0x2f8>
   1b53c:	mov	r3, #0
   1b540:	strb	r3, [r4, #50]	; 0x32
   1b544:	ldr	r3, [r4, #28]
   1b548:	mov	r2, #0
   1b54c:	str	r3, [r4, #32]
   1b550:	mov	r1, r2
   1b554:	ldr	r0, [r8]
   1b558:	bl	15360 <wmove@plt>
   1b55c:	add	r3, sp, #16896	; 0x4200
   1b560:	add	r3, r3, #12
   1b564:	ldr	r2, [r3]
   1b568:	ldr	r3, [pc, #780]	; 1b87c <Panel_draw@@Base+0x66c>
   1b56c:	ldr	r3, [r3]
   1b570:	cmp	r2, r3
   1b574:	bne	1b878 <Panel_draw@@Base+0x668>
   1b578:	add	sp, sp, #16896	; 0x4200
   1b57c:	add	sp, sp, #20
   1b580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b584:	ldr	r2, [sp, #4]
   1b588:	add	r2, r2, r3
   1b58c:	cmp	r6, r2
   1b590:	movge	r3, #1
   1b594:	ldrge	r2, [sp, #4]
   1b598:	movlt	r6, r3
   1b59c:	subge	r6, r6, r2
   1b5a0:	addge	r6, r6, #1
   1b5a4:	ldrblt	r5, [r4, #50]	; 0x32
   1b5a8:	addge	r2, r6, r2
   1b5ac:	movge	r5, r3
   1b5b0:	strge	r6, [r4, #44]	; 0x2c
   1b5b4:	strbge	r3, [r4, #50]	; 0x32
   1b5b8:	b	1b304 <Panel_draw@@Base+0xf4>
   1b5bc:	cmp	r7, #1
   1b5c0:	movge	r3, r7
   1b5c4:	movlt	r3, #1
   1b5c8:	sub	r3, r3, #1
   1b5cc:	mov	r2, #1
   1b5d0:	str	r3, [r4, #44]	; 0x2c
   1b5d4:	strb	r2, [r4, #50]	; 0x32
   1b5d8:	b	1b2e4 <Panel_draw@@Base+0xd4>
   1b5dc:	ldr	r2, [r4, #12]
   1b5e0:	mov	r1, #32
   1b5e4:	ldr	r0, [r8]
   1b5e8:	bl	15048 <whline@plt>
   1b5ec:	ldr	r3, [sp, #16]
   1b5f0:	ldr	r0, [r8]
   1b5f4:	cmp	r3, r6
   1b5f8:	bge	1b2b4 <Panel_draw@@Base+0xa4>
   1b5fc:	mov	r2, sl
   1b600:	ldr	r1, [sp, #8]
   1b604:	bl	15360 <wmove@plt>
   1b608:	cmn	r0, #1
   1b60c:	bne	1b7f8 <Panel_draw@@Base+0x5e8>
   1b610:	ldr	r0, [r8]
   1b614:	b	1b2b4 <Panel_draw@@Base+0xa4>
   1b618:	mov	r3, #0
   1b61c:	mov	r2, #1
   1b620:	str	r3, [r4, #44]	; 0x2c
   1b624:	strb	r2, [r4, #50]	; 0x32
   1b628:	b	1b2e4 <Panel_draw@@Base+0xd4>
   1b62c:	ldr	r3, [r4, #24]
   1b630:	ldr	r2, [r4, #32]
   1b634:	mov	r1, r5
   1b638:	ldr	r3, [r3]
   1b63c:	add	r0, sp, #44	; 0x2c
   1b640:	ldr	r7, [r3, r2, lsl #2]
   1b644:	ldr	r2, [pc, #572]	; 1b888 <Panel_draw@@Base+0x678>
   1b648:	bl	15330 <memset@plt>
   1b64c:	ldr	r2, [r7]
   1b650:	add	r3, sp, #52	; 0x34
   1b654:	mov	r0, r7
   1b658:	str	r3, [sp, #48]	; 0x30
   1b65c:	add	r1, sp, #44	; 0x2c
   1b660:	ldr	r3, [r2, #4]
   1b664:	blx	r3
   1b668:	ldr	r3, [r4, #24]
   1b66c:	ldr	r2, [r4, #28]
   1b670:	mov	r1, r5
   1b674:	ldr	r3, [r3]
   1b678:	add	r0, sp, #8448	; 0x2100
   1b67c:	add	r0, r0, #28
   1b680:	ldr	r5, [r3, r2, lsl #2]
   1b684:	ldr	r2, [pc, #508]	; 1b888 <Panel_draw@@Base+0x678>
   1b688:	add	r7, sp, #8704	; 0x2200
   1b68c:	ldr	r9, [sp, #44]	; 0x2c
   1b690:	bl	15330 <memset@plt>
   1b694:	ldr	r2, [r5]
   1b698:	add	r3, sp, #8512	; 0x2140
   1b69c:	add	r7, r7, #16
   1b6a0:	add	r3, r3, #16
   1b6a4:	sub	r3, r3, #44	; 0x2c
   1b6a8:	add	r1, sp, #8448	; 0x2100
   1b6ac:	mov	r0, r5
   1b6b0:	str	r3, [r7, #-240]	; 0xffffff10
   1b6b4:	add	r1, r1, #28
   1b6b8:	ldr	r3, [r2, #4]
   1b6bc:	blx	r3
   1b6c0:	ldr	r1, [r4, #32]
   1b6c4:	ldr	r3, [sp, #8]
   1b6c8:	ldr	r5, [r7, #-244]	; 0xffffff0c
   1b6cc:	add	r1, r3, r1
   1b6d0:	str	r5, [r4, #36]	; 0x24
   1b6d4:	sub	r1, r1, r6
   1b6d8:	mov	r2, sl
   1b6dc:	ldr	r0, [r8]
   1b6e0:	bl	15360 <wmove@plt>
   1b6e4:	cmn	r0, #1
   1b6e8:	bne	1b788 <Panel_draw@@Base+0x578>
   1b6ec:	ldr	r3, [sp, #16]
   1b6f0:	ldr	r0, [r8]
   1b6f4:	cmp	r3, r9
   1b6f8:	blt	1b7a8 <Panel_draw@@Base+0x598>
   1b6fc:	cmp	r0, #0
   1b700:	ldr	r1, [r4, #28]
   1b704:	ldrne	r3, [sp, #32]
   1b708:	mov	r2, sl
   1b70c:	strne	r3, [r0, #16]
   1b710:	ldr	r3, [sp, #8]
   1b714:	add	r1, r3, r1
   1b718:	sub	r1, r1, r6
   1b71c:	bl	15360 <wmove@plt>
   1b720:	cmn	r0, #1
   1b724:	bne	1b774 <Panel_draw@@Base+0x564>
   1b728:	add	r0, sp, #8448	; 0x2100
   1b72c:	ldr	r1, [sp, #32]
   1b730:	add	r0, r0, #28
   1b734:	bl	1dc34 <RichString_setAttr@@Base>
   1b738:	ldr	r3, [sp, #16]
   1b73c:	cmp	r3, r5
   1b740:	blt	1b828 <Panel_draw@@Base+0x618>
   1b744:	ldr	r3, [r8]
   1b748:	add	r0, sp, #8448	; 0x2100
   1b74c:	cmp	r3, #0
   1b750:	add	r0, r0, #28
   1b754:	ldrne	r2, [pc, #296]	; 1b884 <Panel_draw@@Base+0x674>
   1b758:	ldrne	r2, [r2]
   1b75c:	ldrne	r2, [r2]
   1b760:	strne	r2, [r3, #16]
   1b764:	bl	1dbf0 <RichString_prune@@Base>
   1b768:	add	r0, sp, #44	; 0x2c
   1b76c:	bl	1dbf0 <RichString_prune@@Base>
   1b770:	b	1b544 <Panel_draw@@Base+0x334>
   1b774:	ldr	r2, [r4, #12]
   1b778:	mov	r1, #32
   1b77c:	ldr	r0, [r8]
   1b780:	bl	15048 <whline@plt>
   1b784:	b	1b728 <Panel_draw@@Base+0x518>
   1b788:	ldr	r2, [r4, #12]
   1b78c:	mov	r1, #32
   1b790:	ldr	r0, [r8]
   1b794:	bl	15048 <whline@plt>
   1b798:	ldr	r3, [sp, #16]
   1b79c:	ldr	r0, [r8]
   1b7a0:	cmp	r3, r9
   1b7a4:	bge	1b6fc <Panel_draw@@Base+0x4ec>
   1b7a8:	ldr	r1, [r4, #32]
   1b7ac:	ldr	r3, [sp, #8]
   1b7b0:	mov	r2, sl
   1b7b4:	add	r1, r3, r1
   1b7b8:	sub	r1, r1, r6
   1b7bc:	bl	15360 <wmove@plt>
   1b7c0:	cmn	r0, #1
   1b7c4:	beq	1b7f0 <Panel_draw@@Base+0x5e0>
   1b7c8:	ldr	r3, [sp, #16]
   1b7cc:	ldr	r2, [r4, #12]
   1b7d0:	sub	r9, r9, r3
   1b7d4:	ldr	r1, [sp, #48]	; 0x30
   1b7d8:	add	r3, r3, r3, lsl #1
   1b7dc:	cmp	r9, r2
   1b7e0:	add	r1, r1, r3, lsl #3
   1b7e4:	movlt	r2, r9
   1b7e8:	ldr	r0, [r8]
   1b7ec:	bl	15384 <wadd_wchnstr@plt>
   1b7f0:	ldr	r0, [r8]
   1b7f4:	b	1b6fc <Panel_draw@@Base+0x4ec>
   1b7f8:	ldr	r3, [sp, #16]
   1b7fc:	ldr	r2, [r4, #12]
   1b800:	sub	r6, r6, r3
   1b804:	ldr	r1, [r4, #64]	; 0x40
   1b808:	add	r3, r3, r3, lsl #1
   1b80c:	cmp	r6, r2
   1b810:	movlt	r2, r6
   1b814:	add	r1, r1, r3, lsl #3
   1b818:	ldr	r0, [r8]
   1b81c:	bl	15384 <wadd_wchnstr@plt>
   1b820:	ldr	r0, [r8]
   1b824:	b	1b2b4 <Panel_draw@@Base+0xa4>
   1b828:	ldr	r1, [r4, #28]
   1b82c:	ldr	r3, [sp, #8]
   1b830:	mov	r2, sl
   1b834:	add	r1, r3, r1
   1b838:	sub	r1, r1, r6
   1b83c:	ldr	r0, [r8]
   1b840:	bl	15360 <wmove@plt>
   1b844:	cmn	r0, #1
   1b848:	beq	1b744 <Panel_draw@@Base+0x534>
   1b84c:	ldr	r3, [sp, #16]
   1b850:	ldr	r2, [r4, #12]
   1b854:	sub	r5, r5, r3
   1b858:	add	r1, r3, r3, lsl #1
   1b85c:	ldr	r3, [r7, #-240]	; 0xffffff10
   1b860:	cmp	r5, r2
   1b864:	add	r1, r3, r1, lsl #3
   1b868:	movlt	r2, r5
   1b86c:	ldr	r0, [r8]
   1b870:	bl	15384 <wadd_wchnstr@plt>
   1b874:	b	1b744 <Panel_draw@@Base+0x534>
   1b878:	bl	15084 <__stack_chk_fail@plt>
   1b87c:			; <UNDEFINED> instruction: 0x0003ccb8
   1b880:	andeq	lr, r3, r8, lsl #15
   1b884:	muleq	r3, r8, r1
   1b888:	strdeq	r2, [r0], -r0

0001b88c <Panel_onKey@@Base>:
   1b88c:	mov	r3, r0
   1b890:	ldr	r0, [pc, #712]	; 1bb60 <Panel_onKey@@Base+0x2d4>
   1b894:	ldr	r2, [r3, #24]
   1b898:	cmp	r1, r0
   1b89c:	push	{r4, lr}
   1b8a0:	ldr	ip, [r2, #16]
   1b8a4:	beq	1ba78 <Panel_onKey@@Base+0x1ec>
   1b8a8:	ble	1b944 <Panel_onKey@@Base+0xb8>
   1b8ac:	cmp	r1, #284	; 0x11c
   1b8b0:	beq	1bb30 <Panel_onKey@@Base+0x2a4>
   1b8b4:	ble	1b8f0 <Panel_onKey@@Base+0x64>
   1b8b8:	ldr	r2, [pc, #676]	; 1bb64 <Panel_onKey@@Base+0x2d8>
   1b8bc:	cmp	r1, r2
   1b8c0:	beq	1bb00 <Panel_onKey@@Base+0x274>
   1b8c4:	ble	1b9a4 <Panel_onKey@@Base+0x118>
   1b8c8:	ldr	r2, [pc, #664]	; 1bb68 <Panel_onKey@@Base+0x2dc>
   1b8cc:	cmp	r1, r2
   1b8d0:	beq	1ba8c <Panel_onKey@@Base+0x200>
   1b8d4:	cmp	r1, #360	; 0x168
   1b8d8:	subeq	r2, ip, #1
   1b8dc:	streq	r2, [r3, #28]
   1b8e0:	lsreq	r0, r2, #31
   1b8e4:	beq	1b920 <Panel_onKey@@Base+0x94>
   1b8e8:	mov	r0, #0
   1b8ec:	pop	{r4, pc}
   1b8f0:	cmp	r1, #260	; 0x104
   1b8f4:	beq	1b9f0 <Panel_onKey@@Base+0x164>
   1b8f8:	blt	1bac4 <Panel_onKey@@Base+0x238>
   1b8fc:	ldr	r2, [pc, #616]	; 1bb6c <Panel_onKey@@Base+0x2e0>
   1b900:	cmp	r1, r2
   1b904:	beq	1bad8 <Panel_onKey@@Base+0x24c>
   1b908:	add	r2, r2, #1
   1b90c:	cmp	r1, r2
   1b910:	moveq	r2, #0
   1b914:	moveq	r0, r2
   1b918:	streq	r2, [r3, #28]
   1b91c:	bne	1b8e8 <Panel_onKey@@Base+0x5c>
   1b920:	cmp	ip, #0
   1b924:	moveq	r0, #1
   1b928:	cmp	r0, #0
   1b92c:	beq	1ba4c <Panel_onKey@@Base+0x1c0>
   1b930:	mov	r1, #0
   1b934:	mov	r2, #1
   1b938:	str	r1, [r3, #28]
   1b93c:	strb	r2, [r3, #50]	; 0x32
   1b940:	pop	{r4, pc}
   1b944:	cmp	r1, #6
   1b948:	beq	1bad8 <Panel_onKey@@Base+0x24c>
   1b94c:	ble	1b988 <Panel_onKey@@Base+0xfc>
   1b950:	cmp	r1, #16
   1b954:	beq	1bac4 <Panel_onKey@@Base+0x238>
   1b958:	ble	1ba70 <Panel_onKey@@Base+0x1e4>
   1b95c:	cmp	r1, #36	; 0x24
   1b960:	beq	1ba24 <Panel_onKey@@Base+0x198>
   1b964:	cmp	r1, #94	; 0x5e
   1b968:	bne	1b8e8 <Panel_onKey@@Base+0x5c>
   1b96c:	ldr	r2, [r3, #28]
   1b970:	mov	lr, #0
   1b974:	mov	r1, #1
   1b978:	lsr	r0, r2, #31
   1b97c:	strh	lr, [r3, #48]	; 0x30
   1b980:	strb	r1, [r3, #50]	; 0x32
   1b984:	b	1b920 <Panel_onKey@@Base+0x94>
   1b988:	cmp	r1, #2
   1b98c:	beq	1b9f0 <Panel_onKey@@Base+0x164>
   1b990:	cmp	r1, #5
   1b994:	beq	1ba24 <Panel_onKey@@Base+0x198>
   1b998:	cmp	r1, #1
   1b99c:	bne	1b8e8 <Panel_onKey@@Base+0x5c>
   1b9a0:	b	1b96c <Panel_onKey@@Base+0xe0>
   1b9a4:	sub	r2, r2, #53	; 0x35
   1b9a8:	cmp	r1, r2
   1b9ac:	bne	1b8e8 <Panel_onKey@@Base+0x5c>
   1b9b0:	ldr	r2, [pc, #440]	; 1bb70 <Panel_onKey@@Base+0x2e4>
   1b9b4:	ldr	r1, [r3, #44]	; 0x2c
   1b9b8:	ldr	lr, [r3, #28]
   1b9bc:	ldr	r2, [r2]
   1b9c0:	ldr	r0, [r3, #16]
   1b9c4:	add	r1, r2, r1
   1b9c8:	sub	r0, ip, r0
   1b9cc:	add	r2, r2, lr
   1b9d0:	cmp	r1, r0
   1b9d4:	str	r1, [r3, #44]	; 0x2c
   1b9d8:	mov	r1, #1
   1b9dc:	strgt	r0, [r3, #44]	; 0x2c
   1b9e0:	str	r2, [r3, #28]
   1b9e4:	strb	r1, [r3, #50]	; 0x32
   1b9e8:	lsr	r0, r2, #31
   1b9ec:	b	1b920 <Panel_onKey@@Base+0x94>
   1b9f0:	ldrsh	r1, [r3, #48]	; 0x30
   1b9f4:	ldr	r2, [r3, #28]
   1b9f8:	cmp	r1, #0
   1b9fc:	lsr	r0, r2, #31
   1ba00:	ble	1b920 <Panel_onKey@@Base+0x94>
   1ba04:	ldr	lr, [pc, #360]	; 1bb74 <Panel_onKey@@Base+0x2e8>
   1ba08:	mov	r4, #1
   1ba0c:	strb	r4, [r3, #50]	; 0x32
   1ba10:	ldr	lr, [lr]
   1ba14:	cmp	lr, #0
   1ba18:	subge	r1, r1, lr
   1ba1c:	strh	r1, [r3, #48]	; 0x30
   1ba20:	b	1b920 <Panel_onKey@@Base+0x94>
   1ba24:	ldr	r0, [r3, #12]
   1ba28:	ldr	r1, [r3, #36]	; 0x24
   1ba2c:	ldr	r2, [r3, #28]
   1ba30:	sub	r1, r1, r0
   1ba34:	mov	lr, #1
   1ba38:	bic	r1, r1, r1, asr #31
   1ba3c:	lsr	r0, r2, #31
   1ba40:	strh	r1, [r3, #48]	; 0x30
   1ba44:	strb	lr, [r3, #50]	; 0x32
   1ba48:	b	1b920 <Panel_onKey@@Base+0x94>
   1ba4c:	cmp	ip, r2
   1ba50:	bgt	1ba68 <Panel_onKey@@Base+0x1dc>
   1ba54:	sub	ip, ip, #1
   1ba58:	mov	r0, #1
   1ba5c:	str	ip, [r3, #28]
   1ba60:	strb	r0, [r3, #50]	; 0x32
   1ba64:	pop	{r4, pc}
   1ba68:	mov	r0, #1
   1ba6c:	pop	{r4, pc}
   1ba70:	cmp	r1, #14
   1ba74:	bne	1b8e8 <Panel_onKey@@Base+0x5c>
   1ba78:	ldr	r2, [r3, #28]
   1ba7c:	add	r2, r2, #1
   1ba80:	str	r2, [r3, #28]
   1ba84:	lsr	r0, r2, #31
   1ba88:	b	1b920 <Panel_onKey@@Base+0x94>
   1ba8c:	ldr	r0, [r3, #16]
   1ba90:	ldr	r1, [r3, #44]	; 0x2c
   1ba94:	ldr	r2, [r3, #28]
   1ba98:	sub	r1, r1, r0
   1ba9c:	sub	r0, r0, #1
   1baa0:	orr	r1, r1, r1, asr #31
   1baa4:	sub	r2, r2, r0
   1baa8:	add	r1, r1, #1
   1baac:	mov	lr, #1
   1bab0:	str	r1, [r3, #44]	; 0x2c
   1bab4:	str	r2, [r3, #28]
   1bab8:	lsr	r0, r2, #31
   1babc:	strb	lr, [r3, #50]	; 0x32
   1bac0:	b	1b920 <Panel_onKey@@Base+0x94>
   1bac4:	ldr	r2, [r3, #28]
   1bac8:	sub	r2, r2, #1
   1bacc:	str	r2, [r3, #28]
   1bad0:	lsr	r0, r2, #31
   1bad4:	b	1b920 <Panel_onKey@@Base+0x94>
   1bad8:	ldr	r0, [pc, #148]	; 1bb74 <Panel_onKey@@Base+0x2e8>
   1badc:	ldrh	r1, [r3, #48]	; 0x30
   1bae0:	ldr	r2, [r3, #28]
   1bae4:	ldr	r0, [r0]
   1bae8:	mov	lr, #1
   1baec:	add	r1, r1, r0
   1baf0:	strh	r1, [r3, #48]	; 0x30
   1baf4:	lsr	r0, r2, #31
   1baf8:	strb	lr, [r3, #50]	; 0x32
   1bafc:	b	1b920 <Panel_onKey@@Base+0x94>
   1bb00:	ldr	r2, [r3, #16]
   1bb04:	ldr	r1, [r3, #44]	; 0x2c
   1bb08:	sub	r0, ip, r2
   1bb0c:	add	r1, r2, r1
   1bb10:	sub	r1, r1, #1
   1bb14:	cmp	r1, r0
   1bb18:	movge	r1, r0
   1bb1c:	ldr	r0, [r3, #28]
   1bb20:	sub	r2, r2, #1
   1bb24:	bic	r1, r1, r1, asr #31
   1bb28:	add	r2, r2, r0
   1bb2c:	b	1baac <Panel_onKey@@Base+0x220>
   1bb30:	ldr	r0, [pc, #56]	; 1bb70 <Panel_onKey@@Base+0x2e4>
   1bb34:	ldr	r2, [r3, #28]
   1bb38:	ldr	r1, [r3, #44]	; 0x2c
   1bb3c:	ldr	r0, [r0]
   1bb40:	mov	lr, #1
   1bb44:	sub	r2, r2, r0
   1bb48:	sub	r1, r1, r0
   1bb4c:	str	r2, [r3, #28]
   1bb50:	str	r1, [r3, #44]	; 0x2c
   1bb54:	lsr	r0, r2, #31
   1bb58:	strb	lr, [r3, #50]	; 0x32
   1bb5c:	b	1b920 <Panel_onKey@@Base+0x94>
   1bb60:	andeq	r0, r0, r2, lsl #2
   1bb64:	andeq	r0, r0, r2, asr r1
   1bb68:	andeq	r0, r0, r3, asr r1
   1bb6c:	andeq	r0, r0, r5, lsl #2
   1bb70:	andeq	sp, r3, ip, asr #18
   1bb74:	andeq	sp, r3, r4, asr #18
   1bb78:	push	{r4, r5, r6, r7, r8, r9, lr}
   1bb7c:	sub	sp, sp, #44	; 0x2c
   1bb80:	ldr	r5, [pc, #328]	; 1bcd0 <Panel_onKey@@Base+0x444>
   1bb84:	mov	r6, r0
   1bb88:	mov	r7, r1
   1bb8c:	ldr	r3, [r5]
   1bb90:	add	r1, sp, #20
   1bb94:	add	r0, sp, #24
   1bb98:	mov	r4, r2
   1bb9c:	str	r3, [sp, #36]	; 0x24
   1bba0:	bl	2810c <Battery_getData@@Base>
   1bba4:	vldr	d6, [pc, #284]	; 1bcc8 <Panel_onKey@@Base+0x43c>
   1bba8:	vldr	d7, [sp, #24]
   1bbac:	vcmp.f64	d7, d6
   1bbb0:	vmrs	APSR_nzcv, fpscr
   1bbb4:	beq	1bc80 <Panel_onKey@@Base+0x3f4>
   1bbb8:	ldr	r2, [r6, #12]
   1bbbc:	ldr	lr, [r6, #32]
   1bbc0:	cmp	r2, #2
   1bbc4:	ldr	ip, [pc, #264]	; 1bcd4 <Panel_onKey@@Base+0x448>
   1bbc8:	ldr	r2, [sp, #20]
   1bbcc:	ldr	r0, [pc, #260]	; 1bcd8 <Panel_onKey@@Base+0x44c>
   1bbd0:	ldr	r3, [pc, #260]	; 1bcdc <Panel_onKey@@Base+0x450>
   1bbd4:	ldr	r1, [pc, #260]	; 1bce0 <Panel_onKey@@Base+0x454>
   1bbd8:	vstr	d7, [lr]
   1bbdc:	moveq	r3, ip
   1bbe0:	moveq	r1, r0
   1bbe4:	cmp	r2, #1
   1bbe8:	ldrd	r8, [sp, #24]
   1bbec:	beq	1bcac <Panel_onKey@@Base+0x420>
   1bbf0:	cmp	r2, #0
   1bbf4:	beq	1bc38 <Panel_onKey@@Base+0x3ac>
   1bbf8:	ldr	r3, [pc, #228]	; 1bce4 <Panel_onKey@@Base+0x458>
   1bbfc:	strd	r8, [sp, #8]
   1bc00:	str	r3, [sp]
   1bc04:	mov	r0, r7
   1bc08:	mvn	r3, #0
   1bc0c:	mov	r2, #1
   1bc10:	mov	r1, r4
   1bc14:	bl	15510 <__snprintf_chk@plt>
   1bc18:	cmp	r4, r0
   1bc1c:	ble	1bc68 <Panel_onKey@@Base+0x3dc>
   1bc20:	ldr	r2, [sp, #36]	; 0x24
   1bc24:	ldr	r3, [r5]
   1bc28:	cmp	r2, r3
   1bc2c:	bne	1bcc0 <Panel_onKey@@Base+0x434>
   1bc30:	add	sp, sp, #44	; 0x2c
   1bc34:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1bc38:	str	r3, [sp]
   1bc3c:	mov	r0, r7
   1bc40:	mvn	r3, #0
   1bc44:	mov	r2, #1
   1bc48:	strd	r8, [sp, #8]
   1bc4c:	mov	r1, r4
   1bc50:	bl	15510 <__snprintf_chk@plt>
   1bc54:	cmp	r4, r0
   1bc58:	movgt	r4, #0
   1bc5c:	movle	r4, #1
   1bc60:	orrs	r3, r4, r0, lsr #31
   1bc64:	beq	1bc20 <Panel_onKey@@Base+0x394>
   1bc68:	mov	r0, #1
   1bc6c:	bl	15030 <curs_set@plt>
   1bc70:	bl	14f28 <endwin@plt>
   1bc74:	mov	r1, #0
   1bc78:	mov	r0, #1
   1bc7c:	bl	15114 <err@plt>
   1bc80:	ldr	r3, [r6, #32]
   1bc84:	mov	r8, #0
   1bc88:	mov	r9, #0
   1bc8c:	mov	r0, r7
   1bc90:	ldr	r2, [pc, #80]	; 1bce8 <Panel_onKey@@Base+0x45c>
   1bc94:	strd	r8, [r3]
   1bc98:	mov	r1, r4
   1bc9c:	bl	1530c <snprintf@plt>
   1bca0:	cmp	r4, #3
   1bca4:	bgt	1bc20 <Panel_onKey@@Base+0x394>
   1bca8:	b	1bc68 <Panel_onKey@@Base+0x3dc>
   1bcac:	strd	r8, [sp, #8]
   1bcb0:	str	r1, [sp]
   1bcb4:	mov	r0, r7
   1bcb8:	mvn	r3, #0
   1bcbc:	b	1bc4c <Panel_onKey@@Base+0x3c0>
   1bcc0:	bl	15084 <__stack_chk_fail@plt>
   1bcc4:	nop			; (mov r0, r0)
   1bcc8:	andeq	r0, r0, r0
   1bccc:	svclt	0x00f00000	; IMB
   1bcd0:			; <UNDEFINED> instruction: 0x0003ccb8
   1bcd4:	andeq	sl, r2, r4, lsr #32
   1bcd8:	andeq	sl, r2, r0, asr #32
   1bcdc:	andeq	sl, r2, r8, asr r0
   1bce0:	andeq	sl, r2, r4, rrx
   1bce4:	andeq	sl, r2, r4, ror r0
   1bce8:	andeq	sl, r2, r0, ror r0
   1bcec:	andeq	r0, r0, r0

0001bcf0 <Process_compare@@Base>:
   1bcf0:	ldr	r3, [r0, #4]
   1bcf4:	ldrd	r2, [r3, #48]	; 0x30
   1bcf8:	cmp	r2, #1
   1bcfc:	sub	r3, r3, #2
   1bd00:	movne	r2, r1
   1bd04:	moveq	r2, r0
   1bd08:	movne	r1, r0
   1bd0c:	cmp	r3, #50	; 0x32
   1bd10:	ldrls	pc, [pc, r3, lsl #2]
   1bd14:	b	1be04 <Process_compare@@Base+0x114>
   1bd18:	strdeq	fp, [r1], -r0
   1bd1c:	andeq	fp, r1, ip, lsl pc
   1bd20:	andeq	fp, r1, r4, lsl lr
   1bd24:	andeq	fp, r1, ip, asr pc
   1bd28:	andeq	fp, r1, ip, asr #30
   1bd2c:	andeq	fp, r1, ip, lsr pc
   1bd30:			; <UNDEFINED> instruction: 0x0001beb0
   1bd34:	andeq	fp, r1, r4, lsl #28
   1bd38:	andeq	fp, r1, r0, lsr #29
   1bd3c:	andeq	fp, r1, r4, lsl #28
   1bd40:	muleq	r1, r0, lr
   1bd44:	andeq	fp, r1, r4, lsl #28
   1bd48:	andeq	fp, r1, r4, lsl #28
   1bd4c:	andeq	fp, r1, r4, lsl #28
   1bd50:	andeq	fp, r1, r4, lsl #28
   1bd54:	andeq	fp, r1, r4, lsl #28
   1bd58:	andeq	fp, r1, r0, asr #29
   1bd5c:	strdeq	fp, [r1], -ip
   1bd60:	andeq	fp, r1, r4, lsl #28
   1bd64:	strdeq	fp, [r1], -r4
   1bd68:	andeq	fp, r1, r4, lsl #28
   1bd6c:	andeq	fp, r1, r4, lsl #28
   1bd70:	andeq	fp, r1, r4, lsl #28
   1bd74:	andeq	fp, r1, r4, lsl #28
   1bd78:	andeq	fp, r1, r4, lsl #28
   1bd7c:	andeq	fp, r1, r4, lsl #28
   1bd80:	andeq	fp, r1, r4, lsl #28
   1bd84:	andeq	fp, r1, r4, lsl #28
   1bd88:	andeq	fp, r1, r4, lsl #28
   1bd8c:	andeq	fp, r1, r4, lsl #28
   1bd90:	andeq	fp, r1, r4, lsl #28
   1bd94:	andeq	fp, r1, r4, lsl #28
   1bd98:	andeq	fp, r1, r4, lsl #28
   1bd9c:	andeq	fp, r1, r4, lsl #28
   1bda0:	andeq	fp, r1, r4, lsl #28
   1bda4:	andeq	fp, r1, r4, lsl #28
   1bda8:	andeq	fp, r1, ip, lsl #30
   1bdac:	ldrdeq	fp, [r1], -r0
   1bdb0:	andeq	fp, r1, r4, ror #27
   1bdb4:	andeq	fp, r1, r4, lsl #28
   1bdb8:	andeq	fp, r1, r4, lsl #28
   1bdbc:	andeq	fp, r1, r4, lsl #28
   1bdc0:	andeq	fp, r1, r4, lsl #28
   1bdc4:	andeq	fp, r1, r4, lsl #28
   1bdc8:	andeq	fp, r1, r0, lsl #29
   1bdcc:	andeq	fp, r1, r4, ror #28
   1bdd0:	andeq	fp, r1, r4, ror #27
   1bdd4:	andeq	fp, r1, r4, lsr lr
   1bdd8:	andeq	fp, r1, r0, ror #29
   1bddc:	andeq	fp, r1, r4, lsr #28
   1bde0:	andeq	fp, r1, r4, asr lr
   1bde4:	ldr	r0, [r1, #120]	; 0x78
   1bde8:	ldr	r3, [r2, #120]	; 0x78
   1bdec:	sub	r0, r0, r3
   1bdf0:	bx	lr
   1bdf4:	ldr	r0, [r2, #112]	; 0x70
   1bdf8:	ldr	r3, [r1, #112]	; 0x70
   1bdfc:	cmp	r0, r3
   1be00:	bne	1be0c <Process_compare@@Base+0x11c>
   1be04:	ldr	r0, [r2, #16]
   1be08:	ldr	r3, [r1, #16]
   1be0c:	sub	r0, r0, r3
   1be10:	bx	lr
   1be14:	ldr	r0, [r2, #20]
   1be18:	ldr	r3, [r1, #20]
   1be1c:	sub	r0, r0, r3
   1be20:	bx	lr
   1be24:	ldr	r0, [r2, #100]	; 0x64
   1be28:	ldr	r3, [r1, #100]	; 0x64
   1be2c:	sub	r0, r0, r3
   1be30:	bx	lr
   1be34:	ldr	r1, [r1, #88]	; 0x58
   1be38:	ldr	r0, [r2, #88]	; 0x58
   1be3c:	ldr	r3, [pc, #296]	; 1bf6c <Process_compare@@Base+0x27c>
   1be40:	cmp	r1, #0
   1be44:	moveq	r1, r3
   1be48:	cmp	r0, #0
   1be4c:	moveq	r0, r3
   1be50:	b	14f34 <strcmp@plt>
   1be54:	ldr	r0, [r2, #24]
   1be58:	ldr	r3, [r1, #24]
   1be5c:	sub	r0, r0, r3
   1be60:	bx	lr
   1be64:	vldr	s14, [r1, #80]	; 0x50
   1be68:	vldr	s15, [r2, #80]	; 0x50
   1be6c:	vcmpe.f32	s14, s15
   1be70:	vmrs	APSR_nzcv, fpscr
   1be74:	movgt	r0, #1
   1be78:	mvnle	r0, #0
   1be7c:	bx	lr
   1be80:	ldr	r0, [r2, #68]	; 0x44
   1be84:	ldr	r3, [r1, #68]	; 0x44
   1be88:	sub	r0, r0, r3
   1be8c:	bx	lr
   1be90:	ldr	r0, [r1, #132]	; 0x84
   1be94:	ldr	r3, [r2, #132]	; 0x84
   1be98:	sub	r0, r0, r3
   1be9c:	bx	lr
   1bea0:	ldr	r0, [r1, #128]	; 0x80
   1bea4:	ldr	r3, [r2, #128]	; 0x80
   1bea8:	sub	r0, r0, r3
   1beac:	bx	lr
   1beb0:	ldr	r0, [r2, #64]	; 0x40
   1beb4:	ldr	r3, [r1, #64]	; 0x40
   1beb8:	sub	r0, r0, r3
   1bebc:	bx	lr
   1bec0:	ldr	r0, [r2, #92]	; 0x5c
   1bec4:	ldr	r3, [r1, #92]	; 0x5c
   1bec8:	sub	r0, r0, r3
   1becc:	bx	lr
   1bed0:	ldr	r0, [r1, #116]	; 0x74
   1bed4:	ldr	r3, [r2, #116]	; 0x74
   1bed8:	sub	r0, r0, r3
   1bedc:	bx	lr
   1bee0:	ldr	r0, [r1, #8]
   1bee4:	ldr	r3, [r2, #8]
   1bee8:	sub	r0, r0, r3
   1beec:	bx	lr
   1bef0:	ldr	r1, [r1, #28]
   1bef4:	ldr	r0, [r2, #28]
   1bef8:	b	14f34 <strcmp@plt>
   1befc:	ldr	r0, [r2, #96]	; 0x60
   1bf00:	ldr	r3, [r1, #96]	; 0x60
   1bf04:	sub	r0, r0, r3
   1bf08:	bx	lr
   1bf0c:	ldr	r0, [r2, #76]	; 0x4c
   1bf10:	ldr	r3, [r1, #76]	; 0x4c
   1bf14:	sub	r0, r0, r3
   1bf18:	bx	lr
   1bf1c:	ldrb	r3, [r2, #45]	; 0x2d
   1bf20:	ldrb	r0, [r1, #45]	; 0x2d
   1bf24:	cmp	r3, #73	; 0x49
   1bf28:	moveq	r3, #256	; 0x100
   1bf2c:	cmp	r0, #73	; 0x49
   1bf30:	moveq	r0, #256	; 0x100
   1bf34:	sub	r0, r3, r0
   1bf38:	bx	lr
   1bf3c:	ldr	r0, [r2, #60]	; 0x3c
   1bf40:	ldr	r3, [r1, #60]	; 0x3c
   1bf44:	sub	r0, r0, r3
   1bf48:	bx	lr
   1bf4c:	ldr	r0, [r2, #56]	; 0x38
   1bf50:	ldr	r3, [r1, #56]	; 0x38
   1bf54:	sub	r0, r0, r3
   1bf58:	bx	lr
   1bf5c:	ldr	r0, [r2, #52]	; 0x34
   1bf60:	ldr	r3, [r1, #52]	; 0x34
   1bf64:	sub	r0, r0, r3
   1bf68:	bx	lr
   1bf6c:	andeq	r9, r2, r0, lsl #20

0001bf70 <Process_display@@Base>:
   1bf70:	ldr	r3, [r0, #4]
   1bf74:	push	{r4, r5, r6, lr}
   1bf78:	mov	r4, r0
   1bf7c:	ldr	r5, [r3, #28]
   1bf80:	mov	r0, r1
   1bf84:	mov	r6, r1
   1bf88:	bl	1dbf0 <RichString_prune@@Base>
   1bf8c:	ldr	r2, [r5]
   1bf90:	cmp	r2, #0
   1bf94:	beq	1bfb8 <Process_display@@Base+0x48>
   1bf98:	ldr	r3, [r4]
   1bf9c:	mov	r1, r6
   1bfa0:	mov	r0, r4
   1bfa4:	ldr	r3, [r3, #16]
   1bfa8:	blx	r3
   1bfac:	ldr	r2, [r5, #4]!
   1bfb0:	cmp	r2, #0
   1bfb4:	bne	1bf98 <Process_display@@Base+0x28>
   1bfb8:	ldr	r3, [r4, #4]
   1bfbc:	ldrb	r3, [r3, #61]	; 0x3d
   1bfc0:	cmp	r3, #0
   1bfc4:	beq	1bfdc <Process_display@@Base+0x6c>
   1bfc8:	ldr	r3, [pc, #72]	; 1c018 <Process_display@@Base+0xa8>
   1bfcc:	ldr	r2, [r4, #68]	; 0x44
   1bfd0:	ldr	r3, [r3]
   1bfd4:	cmp	r2, r3
   1bfd8:	bne	1c000 <Process_display@@Base+0x90>
   1bfdc:	ldrb	r3, [r4, #46]	; 0x2e
   1bfe0:	cmp	r3, #0
   1bfe4:	popeq	{r4, r5, r6, pc}
   1bfe8:	ldr	r3, [pc, #44]	; 1c01c <Process_display@@Base+0xac>
   1bfec:	mov	r0, r6
   1bff0:	pop	{r4, r5, r6, lr}
   1bff4:	ldr	r3, [r3]
   1bff8:	ldr	r1, [r3, #80]	; 0x50
   1bffc:	b	1dc34 <RichString_setAttr@@Base>
   1c000:	ldr	r3, [pc, #20]	; 1c01c <Process_display@@Base+0xac>
   1c004:	mov	r0, r6
   1c008:	ldr	r3, [r3]
   1c00c:	ldr	r1, [r3, #76]	; 0x4c
   1c010:	bl	1dc34 <RichString_setAttr@@Base>
   1c014:	b	1bfdc <Process_display@@Base+0x6c>
   1c018:	andeq	sp, r3, r4, ror #25
   1c01c:	muleq	r3, r8, r1

0001c020 <Process_setupColumnWidths@@Base>:
   1c020:	push	{r4, r5, r6, r7, r8, lr}
   1c024:	sub	sp, sp, #16
   1c028:	bl	24218 <Platform_getMaxPid@@Base>
   1c02c:	cmn	r0, #1
   1c030:	beq	1c0cc <Process_setupColumnWidths@@Base+0xac>
   1c034:	vmov	s15, r0
   1c038:	ldr	r4, [pc, #172]	; 1c0ec <Process_setupColumnWidths@@Base+0xcc>
   1c03c:	vcvt.f64.s32	d0, s15
   1c040:	bl	151d4 <log10@plt>
   1c044:	bl	153d8 <ceil@plt>
   1c048:	ldr	r2, [r4, #4]
   1c04c:	cmp	r2, #0
   1c050:	vcvt.s32.f64	s15, d0
   1c054:	vmov	r6, s15
   1c058:	beq	1c0b0 <Process_setupColumnWidths@@Base+0x90>
   1c05c:	ldr	r5, [pc, #140]	; 1c0f0 <Process_setupColumnWidths@@Base+0xd0>
   1c060:	ldr	r8, [pc, #140]	; 1c0f4 <Process_setupColumnWidths@@Base+0xd4>
   1c064:	ldr	r7, [pc, #140]	; 1c0f8 <Process_setupColumnWidths@@Base+0xd8>
   1c068:	str	r2, [sp, #8]
   1c06c:	str	r6, [sp, #4]
   1c070:	str	r8, [sp]
   1c074:	mvn	r3, #0
   1c078:	mov	r2, #1
   1c07c:	mov	r1, #20
   1c080:	mov	r0, r5
   1c084:	bl	15510 <__snprintf_chk@plt>
   1c088:	cmp	r0, #19
   1c08c:	bhi	1c0d4 <Process_setupColumnWidths@@Base+0xb4>
   1c090:	ldr	r3, [r4]
   1c094:	ldr	r2, [r4, #12]
   1c098:	add	r4, r4, #8
   1c09c:	add	r3, r7, r3, lsl #4
   1c0a0:	cmp	r2, #0
   1c0a4:	str	r5, [r3, #4]
   1c0a8:	add	r5, r5, #20
   1c0ac:	bne	1c068 <Process_setupColumnWidths@@Base+0x48>
   1c0b0:	ldr	r2, [pc, #68]	; 1c0fc <Process_setupColumnWidths@@Base+0xdc>
   1c0b4:	mov	r3, #20
   1c0b8:	mov	r1, r3
   1c0bc:	stm	sp, {r2, r6}
   1c0c0:	ldr	r0, [pc, #56]	; 1c100 <Process_setupColumnWidths@@Base+0xe0>
   1c0c4:	mov	r2, #1
   1c0c8:	bl	15510 <__snprintf_chk@plt>
   1c0cc:	add	sp, sp, #16
   1c0d0:	pop	{r4, r5, r6, r7, r8, pc}
   1c0d4:	mov	r0, #1
   1c0d8:	bl	15030 <curs_set@plt>
   1c0dc:	bl	14f28 <endwin@plt>
   1c0e0:	mov	r1, #0
   1c0e4:	mov	r0, #1
   1c0e8:	bl	15114 <err@plt>
   1c0ec:	andeq	sp, r3, r8, lsr #31
   1c0f0:	andeq	lr, r3, r8, asr #15
   1c0f4:	muleq	r2, r0, r0
   1c0f8:	strdeq	sp, [r3], -r0
   1c0fc:	muleq	r2, r8, r0
   1c100:	andeq	sp, r3, r8, ror #25

0001c104 <Process_humanNumber@@Base>:
   1c104:	ldr	r3, [pc, #500]	; 1c300 <Process_humanNumber@@Base+0x1fc>
   1c108:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c10c:	mov	r4, r1
   1c110:	ldr	r3, [r3]
   1c114:	ldr	r6, [pc, #488]	; 1c304 <Process_humanNumber@@Base+0x200>
   1c118:	ldr	ip, [pc, #488]	; 1c308 <Process_humanNumber@@Base+0x204>
   1c11c:	ldr	r7, [r3, #72]	; 0x48
   1c120:	ldr	r1, [r3, #40]	; 0x28
   1c124:	cmp	r2, #0
   1c128:	ldr	r8, [r3, #84]	; 0x54
   1c12c:	sub	sp, sp, #36	; 0x24
   1c130:	ldr	r3, [r6]
   1c134:	moveq	r8, r7
   1c138:	movne	r5, r1
   1c13c:	moveq	r5, r7
   1c140:	cmp	r4, ip
   1c144:	mov	r9, r0
   1c148:	str	r3, [sp, #28]
   1c14c:	bls	1c1b8 <Process_humanNumber@@Base+0xb4>
   1c150:	ldr	r3, [pc, #436]	; 1c30c <Process_humanNumber@@Base+0x208>
   1c154:	cmp	r4, r3
   1c158:	bhi	1c24c <Process_humanNumber@@Base+0x148>
   1c15c:	vmov	s15, r4
   1c160:	vldr	d6, [pc, #400]	; 1c2f8 <Process_humanNumber@@Base+0x1f4>
   1c164:	ldr	r3, [pc, #420]	; 1c310 <Process_humanNumber@@Base+0x20c>
   1c168:	mov	r2, #1
   1c16c:	vcvt.f64.s32	d7, s15
   1c170:	str	r3, [sp]
   1c174:	mov	r1, #10
   1c178:	mov	r3, #11
   1c17c:	add	r0, sp, #16
   1c180:	vmul.f64	d7, d7, d6
   1c184:	vstr	d7, [sp, #8]
   1c188:	bl	15510 <__snprintf_chk@plt>
   1c18c:	add	r2, sp, #16
   1c190:	mov	r1, r5
   1c194:	mov	r3, r0
   1c198:	mov	r0, r9
   1c19c:	bl	1dda4 <RichString_appendn@@Base>
   1c1a0:	ldr	r2, [sp, #28]
   1c1a4:	ldr	r3, [r6]
   1c1a8:	cmp	r2, r3
   1c1ac:	bne	1c2f0 <Process_humanNumber@@Base+0x1ec>
   1c1b0:	add	sp, sp, #36	; 0x24
   1c1b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c1b8:	ldr	r3, [pc, #340]	; 1c314 <Process_humanNumber@@Base+0x210>
   1c1bc:	cmp	r4, r3
   1c1c0:	bhi	1c284 <Process_humanNumber@@Base+0x180>
   1c1c4:	cmp	r4, #1000	; 0x3e8
   1c1c8:	bcc	1c2bc <Process_humanNumber@@Base+0x1b8>
   1c1cc:	ldr	r2, [pc, #324]	; 1c318 <Process_humanNumber@@Base+0x214>
   1c1d0:	ldr	r1, [pc, #324]	; 1c31c <Process_humanNumber@@Base+0x218>
   1c1d4:	add	r0, sp, #16
   1c1d8:	umull	r2, r3, r4, r2
   1c1dc:	str	r1, [sp]
   1c1e0:	mov	r2, #1
   1c1e4:	lsr	r5, r3, #6
   1c1e8:	str	r5, [sp, #4]
   1c1ec:	mov	r3, #11
   1c1f0:	mov	r1, #10
   1c1f4:	bl	15510 <__snprintf_chk@plt>
   1c1f8:	mov	r1, r8
   1c1fc:	add	r2, sp, #16
   1c200:	mov	r0, r9
   1c204:	mov	r3, #2
   1c208:	bl	1dda4 <RichString_appendn@@Base>
   1c20c:	rsb	r2, r5, r5, lsl #5
   1c210:	ldr	r3, [pc, #264]	; 1c320 <Process_humanNumber@@Base+0x21c>
   1c214:	add	r5, r5, r2, lsl #2
   1c218:	add	r0, sp, #16
   1c21c:	sub	r4, r4, r5, lsl #3
   1c220:	mov	r2, #1
   1c224:	stm	sp, {r3, r4}
   1c228:	mov	r1, #10
   1c22c:	mov	r3, #11
   1c230:	bl	15510 <__snprintf_chk@plt>
   1c234:	add	r2, sp, #16
   1c238:	mov	r1, r7
   1c23c:	mov	r0, r9
   1c240:	mov	r3, #4
   1c244:	bl	1dda4 <RichString_appendn@@Base>
   1c248:	b	1c1a0 <Process_humanNumber@@Base+0x9c>
   1c24c:	ldr	r3, [pc, #208]	; 1c324 <Process_humanNumber@@Base+0x220>
   1c250:	lsr	r4, r4, #20
   1c254:	add	r0, sp, #16
   1c258:	stm	sp, {r3, r4}
   1c25c:	mov	r2, #1
   1c260:	mov	r3, #11
   1c264:	mov	r1, #10
   1c268:	bl	15510 <__snprintf_chk@plt>
   1c26c:	add	r2, sp, #16
   1c270:	mov	r1, r5
   1c274:	mov	r0, r9
   1c278:	mov	r3, #6
   1c27c:	bl	1dda4 <RichString_appendn@@Base>
   1c280:	b	1c1a0 <Process_humanNumber@@Base+0x9c>
   1c284:	ldr	r3, [pc, #156]	; 1c328 <Process_humanNumber@@Base+0x224>
   1c288:	lsr	r4, r4, #10
   1c28c:	add	r0, sp, #16
   1c290:	stm	sp, {r3, r4}
   1c294:	mov	r2, #1
   1c298:	mov	r3, #11
   1c29c:	mov	r1, #10
   1c2a0:	bl	15510 <__snprintf_chk@plt>
   1c2a4:	add	r2, sp, #16
   1c2a8:	mov	r1, r8
   1c2ac:	mov	r0, r9
   1c2b0:	mov	r3, #6
   1c2b4:	bl	1dda4 <RichString_appendn@@Base>
   1c2b8:	b	1c1a0 <Process_humanNumber@@Base+0x9c>
   1c2bc:	ldr	r3, [pc, #104]	; 1c32c <Process_humanNumber@@Base+0x228>
   1c2c0:	add	r0, sp, #16
   1c2c4:	mov	r2, #1
   1c2c8:	stm	sp, {r3, r4}
   1c2cc:	mov	r1, #10
   1c2d0:	mov	r3, #11
   1c2d4:	bl	15510 <__snprintf_chk@plt>
   1c2d8:	add	r2, sp, #16
   1c2dc:	mov	r1, r7
   1c2e0:	mov	r3, r0
   1c2e4:	mov	r0, r9
   1c2e8:	bl	1dda4 <RichString_appendn@@Base>
   1c2ec:	b	1c1a0 <Process_humanNumber@@Base+0x9c>
   1c2f0:	bl	15084 <__stack_chk_fail@plt>
   1c2f4:	nop			; (mov r0, r0)
   1c2f8:	andeq	r0, r0, r0
   1c2fc:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   1c300:	muleq	r3, r8, r1
   1c304:			; <UNDEFINED> instruction: 0x0003ccb8
   1c308:	addseq	r9, r8, pc, ror r6
   1c30c:	ldrbeq	lr, [r5, #255]!	; 0xff
   1c310:	andeq	sl, r2, r8, lsr #1
   1c314:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   1c318:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   1c31c:	strheq	sl, [r2], -ip
   1c320:	andeq	sl, r2, r4, asr #1
   1c324:	andeq	sl, r2, r0, lsr #1
   1c328:	strheq	sl, [r2], -r4
   1c32c:	andeq	sl, r2, ip, asr #1

0001c330 <Process_colorNumber@@Base>:
   1c330:	ldr	r1, [pc, #456]	; 1c500 <Process_colorNumber@@Base+0x1d0>
   1c334:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c338:	sub	sp, sp, #44	; 0x2c
   1c33c:	ldr	r1, [r1]
   1c340:	ldrb	ip, [sp, #72]	; 0x48
   1c344:	ldr	r6, [pc, #440]	; 1c504 <Process_colorNumber@@Base+0x1d4>
   1c348:	ldr	r5, [r1, #72]	; 0x48
   1c34c:	cmp	ip, #0
   1c350:	ldr	ip, [r1, #76]	; 0x4c
   1c354:	ldr	r8, [r1, #40]	; 0x28
   1c358:	ldr	r7, [r1, #84]	; 0x54
   1c35c:	mvn	r1, #0
   1c360:	ldr	lr, [r6]
   1c364:	mov	r4, r0
   1c368:	moveq	r9, r5
   1c36c:	moveq	r7, r5
   1c370:	moveq	r8, r5
   1c374:	movne	r9, ip
   1c378:	mvn	r0, #0
   1c37c:	cmp	r3, r1
   1c380:	cmpeq	r2, r0
   1c384:	str	lr, [sp, #36]	; 0x24
   1c388:	beq	1c4ac <Process_colorNumber@@Base+0x17c>
   1c38c:	add	r1, pc, #356	; 0x164
   1c390:	ldrd	r0, [r1]
   1c394:	cmp	r3, r1
   1c398:	cmpeq	r2, r0
   1c39c:	bhi	1c430 <Process_colorNumber@@Base+0x100>
   1c3a0:	ldr	r1, [pc, #352]	; 1c508 <Process_colorNumber@@Base+0x1d8>
   1c3a4:	strd	r2, [sp, #8]
   1c3a8:	str	r1, [sp]
   1c3ac:	add	r0, sp, #20
   1c3b0:	mov	r3, #14
   1c3b4:	mov	r2, #1
   1c3b8:	mov	r1, #13
   1c3bc:	bl	15510 <__snprintf_chk@plt>
   1c3c0:	cmp	r0, #12
   1c3c4:	bne	1c4dc <Process_colorNumber@@Base+0x1ac>
   1c3c8:	add	r2, sp, #20
   1c3cc:	mov	r1, r8
   1c3d0:	mov	r3, #2
   1c3d4:	mov	r0, r4
   1c3d8:	bl	1dda4 <RichString_appendn@@Base>
   1c3dc:	mov	r1, r7
   1c3e0:	mov	r3, #3
   1c3e4:	add	r2, sp, #22
   1c3e8:	mov	r0, r4
   1c3ec:	bl	1dda4 <RichString_appendn@@Base>
   1c3f0:	mov	r1, r5
   1c3f4:	mov	r3, #3
   1c3f8:	add	r2, sp, #25
   1c3fc:	mov	r0, r4
   1c400:	bl	1dda4 <RichString_appendn@@Base>
   1c404:	mov	r1, r9
   1c408:	mov	r0, r4
   1c40c:	mov	r3, #4
   1c410:	add	r2, sp, #28
   1c414:	bl	1dda4 <RichString_appendn@@Base>
   1c418:	ldr	r2, [sp, #36]	; 0x24
   1c41c:	ldr	r3, [r6]
   1c420:	cmp	r2, r3
   1c424:	bne	1c4d8 <Process_colorNumber@@Base+0x1a8>
   1c428:	add	sp, sp, #44	; 0x2c
   1c42c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c430:	mov	r0, r2
   1c434:	mov	r1, r3
   1c438:	mov	r2, #1000	; 0x3e8
   1c43c:	mov	r3, #0
   1c440:	bl	28cb8 <Battery_getData@@Base+0xbac>
   1c444:	ldr	r3, [pc, #192]	; 1c50c <Process_colorNumber@@Base+0x1dc>
   1c448:	mov	r2, #1
   1c44c:	str	r3, [sp]
   1c450:	mov	r3, #14
   1c454:	strd	r0, [sp, #8]
   1c458:	add	r0, sp, #20
   1c45c:	mov	r1, #13
   1c460:	bl	15510 <__snprintf_chk@plt>
   1c464:	cmp	r0, #12
   1c468:	bne	1c4dc <Process_colorNumber@@Base+0x1ac>
   1c46c:	add	r2, sp, #20
   1c470:	mov	r1, r8
   1c474:	mov	r0, r4
   1c478:	mov	r3, #5
   1c47c:	bl	1dda4 <RichString_appendn@@Base>
   1c480:	mov	r1, r7
   1c484:	add	r2, sp, #25
   1c488:	mov	r0, r4
   1c48c:	mov	r3, #3
   1c490:	bl	1dda4 <RichString_appendn@@Base>
   1c494:	mov	r1, r5
   1c498:	mov	r0, r4
   1c49c:	mov	r3, #4
   1c4a0:	add	r2, sp, #28
   1c4a4:	bl	1dda4 <RichString_appendn@@Base>
   1c4a8:	b	1c418 <Process_colorNumber@@Base+0xe8>
   1c4ac:	ldr	r3, [pc, #92]	; 1c510 <Process_colorNumber@@Base+0x1e0>
   1c4b0:	add	lr, sp, #20
   1c4b4:	ldm	r3, {r0, r1, r2, r3}
   1c4b8:	stmia	lr!, {r0, r1, r2}
   1c4bc:	add	r2, sp, #20
   1c4c0:	strb	r3, [lr]
   1c4c4:	mov	r1, ip
   1c4c8:	mov	r0, r4
   1c4cc:	mov	r3, #12
   1c4d0:	bl	1dda4 <RichString_appendn@@Base>
   1c4d4:	b	1c418 <Process_colorNumber@@Base+0xe8>
   1c4d8:	bl	15084 <__stack_chk_fail@plt>
   1c4dc:	mov	r0, #1
   1c4e0:	bl	15030 <curs_set@plt>
   1c4e4:	bl	14f28 <endwin@plt>
   1c4e8:	mov	r1, #0
   1c4ec:	mov	r0, #1
   1c4f0:	bl	15114 <err@plt>
   1c4f4:	nop			; (mov r0, r0)
   1c4f8:	strpl	lr, [fp], #-1024	; 0xfffffc00
   1c4fc:	andeq	r0, r0, r2
   1c500:	muleq	r3, r8, r1
   1c504:			; <UNDEFINED> instruction: 0x0003ccb8
   1c508:	andeq	sl, r2, ip, ror #1
   1c50c:	andeq	sl, r2, r4, ror #1
   1c510:	ldrdeq	sl, [r2], -r4

0001c514 <Process_printTime@@Base>:
   1c514:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c518:	sub	sp, sp, #36	; 0x24
   1c51c:	ldr	r5, [pc, #456]	; 1c6ec <Process_printTime@@Base+0x1d8>
   1c520:	mov	r1, r3
   1c524:	mov	r4, r2
   1c528:	ldr	ip, [r5]
   1c52c:	mov	sl, r3
   1c530:	mov	r9, r0
   1c534:	mov	r3, #0
   1c538:	mov	r0, r2
   1c53c:	ldr	r2, [pc, #428]	; 1c6f0 <Process_printTime@@Base+0x1dc>
   1c540:	str	ip, [sp, #28]
   1c544:	bl	28cb8 <Battery_getData@@Base+0xbac>
   1c548:	subs	r7, r1, #0
   1c54c:	cmpeq	r0, #99	; 0x63
   1c550:	mov	r6, r0
   1c554:	bhi	1c68c <Process_printTime@@Base+0x178>
   1c558:	mov	r2, #100	; 0x64
   1c55c:	mov	r3, #0
   1c560:	mov	r1, sl
   1c564:	mov	r0, r4
   1c568:	bl	28cb8 <Battery_getData@@Base+0xbac>
   1c56c:	ldr	r2, [pc, #384]	; 1c6f4 <Process_printTime@@Base+0x1e0>
   1c570:	mov	r3, #0
   1c574:	mov	fp, r1
   1c578:	mov	r8, r0
   1c57c:	mov	r1, sl
   1c580:	mov	r0, r4
   1c584:	bl	28cb8 <Battery_getData@@Base+0xbac>
   1c588:	mov	r2, #60	; 0x3c
   1c58c:	mov	r3, #0
   1c590:	bl	28cb8 <Battery_getData@@Base+0xbac>
   1c594:	mov	r1, fp
   1c598:	mov	r0, r8
   1c59c:	mov	r3, #0
   1c5a0:	mov	sl, r2
   1c5a4:	mov	r2, #60	; 0x3c
   1c5a8:	bl	28cb8 <Battery_getData@@Base+0xbac>
   1c5ac:	orrs	r3, r6, r7
   1c5b0:	mov	fp, r2
   1c5b4:	bne	1c624 <Process_printTime@@Base+0x110>
   1c5b8:	add	r8, r8, r8, lsl #2
   1c5bc:	ldr	r2, [pc, #308]	; 1c6f8 <Process_printTime@@Base+0x1e4>
   1c5c0:	add	r3, r8, r8, lsl #2
   1c5c4:	add	r8, sp, #16
   1c5c8:	sub	r4, r4, r3, lsl #2
   1c5cc:	str	r2, [sp]
   1c5d0:	str	r4, [sp, #12]
   1c5d4:	strd	sl, [sp, #4]
   1c5d8:	mov	r0, r8
   1c5dc:	mov	r3, #11
   1c5e0:	mov	r2, #1
   1c5e4:	mov	r1, #10
   1c5e8:	bl	15510 <__snprintf_chk@plt>
   1c5ec:	cmp	r0, #9
   1c5f0:	bne	1c6d0 <Process_printTime@@Base+0x1bc>
   1c5f4:	ldr	r4, [pc, #256]	; 1c6fc <Process_printTime@@Base+0x1e8>
   1c5f8:	ldr	r3, [r4]
   1c5fc:	mov	r2, r8
   1c600:	mov	r0, r9
   1c604:	ldr	r1, [r3, #4]
   1c608:	bl	1dc64 <RichString_append@@Base>
   1c60c:	ldr	r2, [sp, #28]
   1c610:	ldr	r3, [r5]
   1c614:	cmp	r2, r3
   1c618:	bne	1c6e8 <Process_printTime@@Base+0x1d4>
   1c61c:	add	sp, sp, #36	; 0x24
   1c620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c624:	ldr	r3, [pc, #212]	; 1c700 <Process_printTime@@Base+0x1ec>
   1c628:	add	r8, sp, #16
   1c62c:	str	r3, [sp]
   1c630:	strd	r6, [sp, #8]
   1c634:	mov	r0, r8
   1c638:	mov	r3, #11
   1c63c:	mov	r2, #1
   1c640:	mov	r1, #10
   1c644:	bl	15510 <__snprintf_chk@plt>
   1c648:	cmp	r0, #9
   1c64c:	bgt	1c6d0 <Process_printTime@@Base+0x1bc>
   1c650:	ldr	r4, [pc, #164]	; 1c6fc <Process_printTime@@Base+0x1e8>
   1c654:	mov	r2, r8
   1c658:	mov	r0, r9
   1c65c:	ldr	r3, [r4]
   1c660:	ldr	r1, [r3, #40]	; 0x28
   1c664:	bl	1dc64 <RichString_append@@Base>
   1c668:	ldr	r3, [pc, #148]	; 1c704 <Process_printTime@@Base+0x1f0>
   1c66c:	strd	sl, [sp, #4]
   1c670:	str	r3, [sp]
   1c674:	mov	r2, #1
   1c678:	mov	r3, #11
   1c67c:	mov	r1, #10
   1c680:	mov	r0, r8
   1c684:	bl	15510 <__snprintf_chk@plt>
   1c688:	b	1c5f8 <Process_printTime@@Base+0xe4>
   1c68c:	ldr	r3, [pc, #116]	; 1c708 <Process_printTime@@Base+0x1f4>
   1c690:	strd	r6, [sp, #8]
   1c694:	str	r3, [sp]
   1c698:	add	r0, sp, #16
   1c69c:	mov	r3, #11
   1c6a0:	mov	r2, #1
   1c6a4:	mov	r1, #10
   1c6a8:	bl	15510 <__snprintf_chk@plt>
   1c6ac:	cmp	r0, #9
   1c6b0:	bne	1c6d0 <Process_printTime@@Base+0x1bc>
   1c6b4:	ldr	r3, [pc, #64]	; 1c6fc <Process_printTime@@Base+0x1e8>
   1c6b8:	add	r2, sp, #16
   1c6bc:	mov	r0, r9
   1c6c0:	ldr	r3, [r3]
   1c6c4:	ldr	r1, [r3, #40]	; 0x28
   1c6c8:	bl	1dc64 <RichString_append@@Base>
   1c6cc:	b	1c60c <Process_printTime@@Base+0xf8>
   1c6d0:	mov	r0, #1
   1c6d4:	bl	15030 <curs_set@plt>
   1c6d8:	bl	14f28 <endwin@plt>
   1c6dc:	mov	r1, #0
   1c6e0:	mov	r0, #1
   1c6e4:	bl	15114 <err@plt>
   1c6e8:	bl	15084 <__stack_chk_fail@plt>
   1c6ec:			; <UNDEFINED> instruction: 0x0003ccb8
   1c6f0:	andeq	r7, r5, r0, asr #28
   1c6f4:	andeq	r1, r0, r0, ror r7
   1c6f8:	andeq	sl, r2, r0, lsl r1
   1c6fc:	muleq	r3, r8, r1
   1c700:	strdeq	sl, [r2], -ip
   1c704:	andeq	sl, r2, r4, lsl #2
   1c708:	strdeq	sl, [r2], -r4

0001c70c <Process_writeField@@Base>:
   1c70c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c710:	mov	r4, r0
   1c714:	ldr	r7, [pc, #1516]	; 1cd08 <Process_writeField@@Base+0x5fc>
   1c718:	ldr	r5, [pc, #1516]	; 1cd0c <Process_writeField@@Base+0x600>
   1c71c:	ldr	r0, [r0, #4]
   1c720:	ldr	ip, [r7]
   1c724:	sub	sp, sp, #316	; 0x13c
   1c728:	ldr	lr, [r5]
   1c72c:	sub	r3, r2, #1
   1c730:	mov	r2, #0
   1c734:	strb	r2, [sp, #307]	; 0x133
   1c738:	mov	r8, r1
   1c73c:	str	lr, [sp, #308]	; 0x134
   1c740:	ldrb	r6, [r0, #66]	; 0x42
   1c744:	ldr	r9, [ip, #4]
   1c748:	cmp	r3, #51	; 0x33
   1c74c:	ldrls	pc, [pc, r3, lsl #2]
   1c750:	b	1cc78 <Process_writeField@@Base+0x56c>
   1c754:	andeq	ip, r1, ip, lsl ip
   1c758:	andeq	ip, r1, ip, lsl fp
   1c75c:	ldrdeq	ip, [r1], -r8
   1c760:	ldrdeq	ip, [r1], -r0
   1c764:	andeq	ip, r1, ip, lsr #24
   1c768:	andeq	ip, r1, r4, lsr #24
   1c76c:	andeq	ip, r1, r4, lsr ip
   1c770:	muleq	r1, r8, sl
   1c774:	andeq	ip, r1, r8, ror ip
   1c778:			; <UNDEFINED> instruction: 0x0001cab8
   1c77c:	andeq	ip, r1, r8, ror ip
   1c780:	andeq	ip, r1, r0, lsr #21
   1c784:	andeq	ip, r1, r8, ror ip
   1c788:	andeq	ip, r1, r8, ror ip
   1c78c:	andeq	ip, r1, r8, ror ip
   1c790:	andeq	ip, r1, r8, ror ip
   1c794:	andeq	ip, r1, r8, ror ip
   1c798:	andeq	ip, r1, r4, ror sl
   1c79c:	andeq	ip, r1, r4, lsr sl
   1c7a0:	andeq	ip, r1, r8, ror ip
   1c7a4:	andeq	ip, r1, r8, lsl sl
   1c7a8:	andeq	ip, r1, r8, ror ip
   1c7ac:	andeq	ip, r1, r8, ror ip
   1c7b0:	andeq	ip, r1, r8, ror ip
   1c7b4:	andeq	ip, r1, r8, ror ip
   1c7b8:	andeq	ip, r1, r8, ror ip
   1c7bc:	andeq	ip, r1, r8, ror ip
   1c7c0:	andeq	ip, r1, r8, ror ip
   1c7c4:	andeq	ip, r1, r8, ror ip
   1c7c8:	andeq	ip, r1, r8, ror ip
   1c7cc:	andeq	ip, r1, r8, ror ip
   1c7d0:	andeq	ip, r1, r8, ror ip
   1c7d4:	andeq	ip, r1, r8, ror ip
   1c7d8:	andeq	ip, r1, r8, ror ip
   1c7dc:	andeq	ip, r1, r8, ror ip
   1c7e0:	andeq	ip, r1, r8, ror ip
   1c7e4:	andeq	ip, r1, r8, ror ip
   1c7e8:	strdeq	ip, [r1], -r8
   1c7ec:	andeq	ip, r1, ip, ror #19
   1c7f0:			; <UNDEFINED> instruction: 0x0001c9b8
   1c7f4:	andeq	ip, r1, r8, ror ip
   1c7f8:	andeq	ip, r1, r8, ror ip
   1c7fc:	andeq	ip, r1, r8, ror ip
   1c800:	andeq	ip, r1, r8, ror ip
   1c804:	andeq	ip, r1, r8, ror ip
   1c808:	andeq	ip, r1, r0, lsr #19
   1c80c:	andeq	ip, r1, ip, asr #18
   1c810:	andeq	ip, r1, ip, lsl r9
   1c814:			; <UNDEFINED> instruction: 0x0001c8b8
   1c818:	andeq	ip, r1, r8, lsr #17
   1c81c:	andeq	ip, r1, ip, ror r8
   1c820:	andeq	ip, r1, r4, lsr #16
   1c824:	ldr	r2, [r4, #24]
   1c828:	ldr	r3, [pc, #1248]	; 1cd10 <Process_writeField@@Base+0x604>
   1c82c:	add	r6, sp, #52	; 0x34
   1c830:	str	r2, [sp, #4]
   1c834:	str	r3, [sp]
   1c838:	mov	r0, r6
   1c83c:	mov	r3, #256	; 0x100
   1c840:	mov	r2, #1
   1c844:	mov	r1, #255	; 0xff
   1c848:	bl	15510 <__snprintf_chk@plt>
   1c84c:	cmp	r0, #254	; 0xfe
   1c850:	bhi	1cdf8 <Process_writeField@@Base+0x6ec>
   1c854:	mov	r2, r6
   1c858:	mov	r1, r9
   1c85c:	mov	r0, r8
   1c860:	bl	1dc64 <RichString_append@@Base>
   1c864:	ldr	r2, [sp, #308]	; 0x134
   1c868:	ldr	r3, [r5]
   1c86c:	cmp	r2, r3
   1c870:	bne	1d014 <Process_writeField@@Base+0x908>
   1c874:	add	sp, sp, #316	; 0x13c
   1c878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c87c:	ldr	r2, [r4, #100]	; 0x64
   1c880:	ldr	r3, [pc, #1164]	; 1cd14 <Process_writeField@@Base+0x608>
   1c884:	add	r6, sp, #52	; 0x34
   1c888:	str	r2, [sp, #4]
   1c88c:	str	r3, [sp]
   1c890:	mov	r0, r6
   1c894:	mov	r3, #256	; 0x100
   1c898:	mov	r2, #1
   1c89c:	mov	r1, #255	; 0xff
   1c8a0:	bl	15510 <__snprintf_chk@plt>
   1c8a4:	b	1c854 <Process_writeField@@Base+0x148>
   1c8a8:	mov	r0, r1
   1c8ac:	ldrd	r2, [r4, #8]
   1c8b0:	bl	1c514 <Process_printTime@@Base>
   1c8b4:	b	1c864 <Process_writeField@@Base+0x158>
   1c8b8:	ldr	r3, [pc, #1112]	; 1cd18 <Process_writeField@@Base+0x60c>
   1c8bc:	ldr	r2, [r4, #68]	; 0x44
   1c8c0:	ldr	r3, [r3]
   1c8c4:	cmp	r2, r3
   1c8c8:	ldrne	r9, [ip, #76]	; 0x4c
   1c8cc:	ldr	r3, [r4, #88]	; 0x58
   1c8d0:	cmp	r3, #0
   1c8d4:	beq	1ce6c <Process_writeField@@Base+0x760>
   1c8d8:	ldr	r2, [pc, #1084]	; 1cd1c <Process_writeField@@Base+0x610>
   1c8dc:	add	r6, sp, #52	; 0x34
   1c8e0:	mov	r0, r6
   1c8e4:	strd	r2, [sp]
   1c8e8:	mov	r1, #255	; 0xff
   1c8ec:	mov	r3, #256	; 0x100
   1c8f0:	mov	r2, #1
   1c8f4:	bl	15510 <__snprintf_chk@plt>
   1c8f8:	cmp	r0, #254	; 0xfe
   1c8fc:	bhi	1cdf8 <Process_writeField@@Base+0x6ec>
   1c900:	ldrb	r3, [sp, #61]	; 0x3d
   1c904:	cmp	r3, #0
   1c908:	movne	r2, #32
   1c90c:	movne	r3, #0
   1c910:	strbne	r2, [sp, #61]	; 0x3d
   1c914:	strbne	r3, [sp, #62]	; 0x3e
   1c918:	b	1c854 <Process_writeField@@Base+0x148>
   1c91c:	vldr	s14, [r4, #84]	; 0x54
   1c920:	vldr	d6, [pc, #976]	; 1ccf8 <Process_writeField@@Base+0x5ec>
   1c924:	vcvt.f64.f32	d7, s14
   1c928:	vcmpe.f64	d7, d6
   1c92c:	vmrs	APSR_nzcv, fpscr
   1c930:	ble	1cdcc <Process_writeField@@Base+0x6c0>
   1c934:	ldr	r3, [pc, #996]	; 1cd20 <Process_writeField@@Base+0x614>
   1c938:	add	r6, sp, #52	; 0x34
   1c93c:	ldm	r3, {r0, r1}
   1c940:	str	r0, [sp, #52]	; 0x34
   1c944:	strh	r1, [sp, #56]	; 0x38
   1c948:	b	1c854 <Process_writeField@@Base+0x148>
   1c94c:	vldr	s15, [r4, #80]	; 0x50
   1c950:	vldr	d5, [pc, #936]	; 1cd00 <Process_writeField@@Base+0x5f4>
   1c954:	vcvt.f64.f32	d6, s15
   1c958:	vcmpe.f64	d6, d5
   1c95c:	vmrs	APSR_nzcv, fpscr
   1c960:	bgt	1ce38 <Process_writeField@@Base+0x72c>
   1c964:	vldr	d5, [pc, #908]	; 1ccf8 <Process_writeField@@Base+0x5ec>
   1c968:	vcmpe.f64	d6, d5
   1c96c:	vmrs	APSR_nzcv, fpscr
   1c970:	ble	1ce1c <Process_writeField@@Base+0x710>
   1c974:	vcvt.u32.f32	s15, s15
   1c978:	ldr	r3, [pc, #932]	; 1cd24 <Process_writeField@@Base+0x618>
   1c97c:	add	r6, sp, #52	; 0x34
   1c980:	str	r3, [sp]
   1c984:	mov	r0, r6
   1c988:	mov	r3, #256	; 0x100
   1c98c:	mov	r2, #1
   1c990:	mov	r1, #255	; 0xff
   1c994:	vstr	s15, [sp, #4]
   1c998:	bl	15510 <__snprintf_chk@plt>
   1c99c:	b	1c854 <Process_writeField@@Base+0x148>
   1c9a0:	ldr	r2, [r4, #68]	; 0x44
   1c9a4:	ldr	r3, [pc, #936]	; 1cd54 <Process_writeField@@Base+0x648>
   1c9a8:	add	r6, sp, #52	; 0x34
   1c9ac:	str	r2, [sp, #4]
   1c9b0:	str	r3, [sp]
   1c9b4:	b	1c890 <Process_writeField@@Base+0x184>
   1c9b8:	ldr	r4, [r4, #120]	; 0x78
   1c9bc:	mov	r0, #30
   1c9c0:	bl	1509c <sysconf@plt>
   1c9c4:	mov	r2, r6
   1c9c8:	add	r3, r0, #1020	; 0x3fc
   1c9cc:	cmp	r0, #0
   1c9d0:	add	r3, r3, #3
   1c9d4:	movlt	r0, r3
   1c9d8:	asr	r1, r0, #10
   1c9dc:	mov	r0, r8
   1c9e0:	mul	r1, r4, r1
   1c9e4:	bl	1c104 <Process_humanNumber@@Base>
   1c9e8:	b	1c864 <Process_writeField@@Base+0x158>
   1c9ec:	mov	r0, #30
   1c9f0:	ldr	r4, [r4, #116]	; 0x74
   1c9f4:	b	1c9c0 <Process_writeField@@Base+0x2b4>
   1c9f8:	ldrb	r2, [r0, #56]	; 0x38
   1c9fc:	ldr	r3, [r4, #76]	; 0x4c
   1ca00:	cmp	r2, #0
   1ca04:	ldr	r2, [pc, #796]	; 1cd28 <Process_writeField@@Base+0x61c>
   1ca08:	addeq	r3, r3, #1
   1ca0c:	add	r6, sp, #52	; 0x34
   1ca10:	strd	r2, [sp]
   1ca14:	b	1c890 <Process_writeField@@Base+0x184>
   1ca18:	add	r6, sp, #52	; 0x34
   1ca1c:	add	r3, r4, #104	; 0x68
   1ca20:	mov	r0, r6
   1ca24:	ldr	r2, [pc, #768]	; 1cd2c <Process_writeField@@Base+0x620>
   1ca28:	mov	r1, #255	; 0xff
   1ca2c:	bl	1530c <snprintf@plt>
   1ca30:	b	1c854 <Process_writeField@@Base+0x148>
   1ca34:	ldr	r2, [r4, #96]	; 0x60
   1ca38:	ldr	r3, [pc, #780]	; 1cd4c <Process_writeField@@Base+0x640>
   1ca3c:	add	r6, sp, #52	; 0x34
   1ca40:	str	r2, [sp, #4]
   1ca44:	str	r3, [sp]
   1ca48:	mov	r0, r6
   1ca4c:	mov	r3, #256	; 0x100
   1ca50:	mov	r2, #1
   1ca54:	mov	r1, #255	; 0xff
   1ca58:	bl	15510 <__snprintf_chk@plt>
   1ca5c:	ldr	r3, [r4, #96]	; 0x60
   1ca60:	cmp	r3, #0
   1ca64:	blt	1ce10 <Process_writeField@@Base+0x704>
   1ca68:	ldrne	r3, [r7]
   1ca6c:	ldrne	r9, [r3, #108]	; 0x6c
   1ca70:	b	1c854 <Process_writeField@@Base+0x148>
   1ca74:	ldr	r3, [r4, #92]	; 0x5c
   1ca78:	cmn	r3, #99	; 0x63
   1ca7c:	bge	1cdc4 <Process_writeField@@Base+0x6b8>
   1ca80:	ldr	r3, [pc, #680]	; 1cd30 <Process_writeField@@Base+0x624>
   1ca84:	add	r6, sp, #52	; 0x34
   1ca88:	ldm	r3, {r0, r1}
   1ca8c:	str	r0, [sp, #52]	; 0x34
   1ca90:	strb	r1, [sp, #56]	; 0x38
   1ca94:	b	1c854 <Process_writeField@@Base+0x148>
   1ca98:	ldr	r2, [r4, #64]	; 0x40
   1ca9c:	b	1c828 <Process_writeField@@Base+0x11c>
   1caa0:	ldr	r2, [r4, #132]	; 0x84
   1caa4:	mov	r0, r1
   1caa8:	str	r6, [sp]
   1caac:	mov	r3, #0
   1cab0:	bl	1c330 <Process_colorNumber@@Base>
   1cab4:	b	1c864 <Process_writeField@@Base+0x158>
   1cab8:	ldr	r2, [r4, #128]	; 0x80
   1cabc:	mov	r0, r1
   1cac0:	str	r6, [sp]
   1cac4:	mov	r3, #0
   1cac8:	bl	1c330 <Process_colorNumber@@Base>
   1cacc:	b	1c864 <Process_writeField@@Base+0x158>
   1cad0:	ldr	r2, [r4, #20]
   1cad4:	b	1c828 <Process_writeField@@Base+0x11c>
   1cad8:	ldrb	r2, [r4, #45]	; 0x2d
   1cadc:	ldr	r3, [pc, #592]	; 1cd34 <Process_writeField@@Base+0x628>
   1cae0:	add	r6, sp, #52	; 0x34
   1cae4:	str	r2, [sp, #4]
   1cae8:	str	r3, [sp]
   1caec:	mov	r0, r6
   1caf0:	mov	r3, #256	; 0x100
   1caf4:	mov	r2, #1
   1caf8:	mov	r1, #255	; 0xff
   1cafc:	bl	15510 <__snprintf_chk@plt>
   1cb00:	ldrb	r3, [r4, #45]	; 0x2d
   1cb04:	cmp	r3, #68	; 0x44
   1cb08:	beq	1ce2c <Process_writeField@@Base+0x720>
   1cb0c:	cmp	r3, #82	; 0x52
   1cb10:	ldreq	r3, [r7]
   1cb14:	ldreq	r9, [r3, #92]	; 0x5c
   1cb18:	b	1c854 <Process_writeField@@Base+0x148>
   1cb1c:	ldrb	r3, [r0, #67]	; 0x43
   1cb20:	ldr	r2, [ip, #100]	; 0x64
   1cb24:	cmp	r3, #0
   1cb28:	str	r2, [sp, #20]
   1cb2c:	bne	1ce44 <Process_writeField@@Base+0x738>
   1cb30:	ldrb	r3, [r0, #58]	; 0x3a
   1cb34:	cmp	r3, #0
   1cb38:	beq	1cc94 <Process_writeField@@Base+0x588>
   1cb3c:	ldr	r3, [r4, #36]	; 0x24
   1cb40:	cmp	r3, #0
   1cb44:	str	r3, [sp, #24]
   1cb48:	beq	1cc94 <Process_writeField@@Base+0x588>
   1cb4c:	ldr	sl, [sp, #24]
   1cb50:	mov	r3, #0
   1cb54:	cmp	sl, #0
   1cb58:	mov	r2, r3
   1cb5c:	rsblt	sl, sl, #0
   1cb60:	lsr	r1, sl, r3
   1cb64:	add	r3, r3, #1
   1cb68:	tst	r1, #1
   1cb6c:	movne	r2, r3
   1cb70:	cmp	r3, #32
   1cb74:	bne	1cb60 <Process_writeField@@Base+0x454>
   1cb78:	cmp	r2, #1
   1cb7c:	ble	1cff8 <Process_writeField@@Base+0x8ec>
   1cb80:	ldr	r3, [pc, #472]	; 1cd60 <Process_writeField@@Base+0x654>
   1cb84:	add	r6, sp, #52	; 0x34
   1cb88:	sub	r2, r2, #1
   1cb8c:	mov	r1, #255	; 0xff
   1cb90:	str	r9, [sp, #32]
   1cb94:	str	r4, [sp, #36]	; 0x24
   1cb98:	str	r8, [sp, #40]	; 0x28
   1cb9c:	mov	r4, r6
   1cba0:	str	r6, [sp, #44]	; 0x2c
   1cba4:	str	r3, [sp, #28]
   1cba8:	mov	fp, #0
   1cbac:	mov	r9, r2
   1cbb0:	mov	r8, r1
   1cbb4:	mov	r6, r3
   1cbb8:	b	1cbf8 <Process_writeField@@Base+0x4ec>
   1cbbc:	ldr	r1, [r6]
   1cbc0:	mvn	r3, #0
   1cbc4:	mov	r2, #1
   1cbc8:	ldr	r0, [r1, #4]
   1cbcc:	mov	r1, r8
   1cbd0:	str	r0, [sp, #4]
   1cbd4:	ldr	r0, [pc, #348]	; 1cd38 <Process_writeField@@Base+0x62c>
   1cbd8:	str	r0, [sp]
   1cbdc:	mov	r0, r4
   1cbe0:	bl	15510 <__snprintf_chk@plt>
   1cbe4:	add	fp, fp, #1
   1cbe8:	cmp	fp, r9
   1cbec:	add	r4, r4, r0
   1cbf0:	sub	r8, r8, r0
   1cbf4:	beq	1ce94 <Process_writeField@@Base+0x788>
   1cbf8:	asr	r3, sl, fp
   1cbfc:	tst	r3, #1
   1cc00:	bne	1cbbc <Process_writeField@@Base+0x4b0>
   1cc04:	ldr	r2, [pc, #304]	; 1cd3c <Process_writeField@@Base+0x630>
   1cc08:	mov	r1, r8
   1cc0c:	mov	r0, r4
   1cc10:	bl	1530c <snprintf@plt>
   1cc14:	mov	r0, #3
   1cc18:	b	1cbe4 <Process_writeField@@Base+0x4d8>
   1cc1c:	ldr	r2, [r4, #16]
   1cc20:	b	1c828 <Process_writeField@@Base+0x11c>
   1cc24:	ldr	r2, [r4, #56]	; 0x38
   1cc28:	b	1c828 <Process_writeField@@Base+0x11c>
   1cc2c:	ldr	r2, [r4, #52]	; 0x34
   1cc30:	b	1c828 <Process_writeField@@Base+0x11c>
   1cc34:	ldr	r1, [r4, #60]	; 0x3c
   1cc38:	ldr	r2, [pc, #256]	; 1cd40 <Process_writeField@@Base+0x634>
   1cc3c:	ldr	r0, [pc, #256]	; 1cd44 <Process_writeField@@Base+0x638>
   1cc40:	lsr	r3, r1, #12
   1cc44:	uxtb	ip, r1
   1cc48:	bic	r3, r3, #255	; 0xff
   1cc4c:	orr	r3, r3, ip
   1cc50:	and	r2, r2, r1, lsr #8
   1cc54:	add	r6, sp, #52	; 0x34
   1cc58:	strd	r2, [sp, #4]
   1cc5c:	str	r0, [sp]
   1cc60:	mov	r3, #256	; 0x100
   1cc64:	mov	r0, r6
   1cc68:	mov	r2, #1
   1cc6c:	mov	r1, #255	; 0xff
   1cc70:	bl	15510 <__snprintf_chk@plt>
   1cc74:	b	1c854 <Process_writeField@@Base+0x148>
   1cc78:	ldr	r3, [pc, #200]	; 1cd48 <Process_writeField@@Base+0x63c>
   1cc7c:	add	r6, sp, #52	; 0x34
   1cc80:	ldr	r3, [r3]
   1cc84:	strh	r3, [sp, #52]	; 0x34
   1cc88:	lsr	r3, r3, #16
   1cc8c:	strb	r3, [sp, #54]	; 0x36
   1cc90:	b	1c854 <Process_writeField@@Base+0x148>
   1cc94:	ldrb	r3, [r0, #65]	; 0x41
   1cc98:	ldr	r6, [r8]
   1cc9c:	ldr	r2, [r4, #28]
   1cca0:	cmp	r3, #0
   1cca4:	beq	1cd64 <Process_writeField@@Base+0x658>
   1cca8:	ldr	lr, [r4, #40]	; 0x28
   1ccac:	cmp	lr, #0
   1ccb0:	movle	r3, lr
   1ccb4:	movle	r7, #0
   1ccb8:	ble	1cfa0 <Process_writeField@@Base+0x894>
   1ccbc:	mov	r7, #0
   1ccc0:	mov	r3, r7
   1ccc4:	sub	ip, r2, #1
   1ccc8:	b	1ccdc <Process_writeField@@Base+0x5d0>
   1cccc:	cmp	r1, #58	; 0x3a
   1ccd0:	beq	1cd88 <Process_writeField@@Base+0x67c>
   1ccd4:	cmp	r3, lr
   1ccd8:	bge	1cf9c <Process_writeField@@Base+0x890>
   1ccdc:	ldrb	r1, [ip, #1]!
   1cce0:	add	r3, r3, #1
   1cce4:	cmp	r1, #47	; 0x2f
   1cce8:	bne	1cccc <Process_writeField@@Base+0x5c0>
   1ccec:	mov	r7, r3
   1ccf0:	b	1ccd4 <Process_writeField@@Base+0x5c8>
   1ccf4:	nop			; (mov r0, r0)
   1ccf8:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   1ccfc:			; <UNDEFINED> instruction: 0x4058f999
   1cd00:	teqcc	r3, #-872415232	; 0xcc000000
   1cd04:	addmi	r3, pc, r3, lsr pc	; <UNPREDICTABLE>
   1cd08:	muleq	r3, r8, r1
   1cd0c:			; <UNDEFINED> instruction: 0x0003ccb8
   1cd10:	andeq	sp, r3, r8, ror #25
   1cd14:	andeq	sl, r2, r8, asr r1
   1cd18:	andeq	sp, r3, r4, ror #25
   1cd1c:	andeq	sl, r2, r8, ror r1
   1cd20:	andeq	sl, r2, r8, lsr r1
   1cd24:	andeq	sl, r2, r8, lsr #2
   1cd28:	andeq	sl, r2, r4, lsl #3
   1cd2c:	strdeq	fp, [r2], -r0
   1cd30:	andeq	sl, r2, r0, ror #2
   1cd34:	andeq	sl, r2, r8, ror #2
   1cd38:	andeq	sl, r2, r0, asr #2
   1cd3c:	andeq	sl, r2, r0, lsr #32
   1cd40:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1cd44:	andeq	sl, r2, ip, ror #2
   1cd48:	andeq	sl, r2, r0, lsl #3
   1cd4c:	andeq	sl, r2, r0, asr r1
   1cd50:	andeq	sl, r2, r0, lsr r1
   1cd54:	andeq	sl, r2, r0, lsr #2
   1cd58:	andeq	sl, r2, ip, lsl #3
   1cd5c:	andeq	sl, r2, r8, asr #2
   1cd60:	andeq	sp, r3, r8, asr #18
   1cd64:	ldrb	r7, [r0, #59]	; 0x3b
   1cd68:	cmp	r7, #0
   1cd6c:	movne	r7, r3
   1cd70:	bne	1cd90 <Process_writeField@@Base+0x684>
   1cd74:	ldr	lr, [r4, #40]	; 0x28
   1cd78:	cmp	lr, #0
   1cd7c:	movle	r3, lr
   1cd80:	bgt	1ccbc <Process_writeField@@Base+0x5b0>
   1cd84:	add	r2, r2, r7
   1cd88:	sub	r7, r6, #1
   1cd8c:	add	r7, r7, r3
   1cd90:	mov	r1, r9
   1cd94:	mov	r0, r8
   1cd98:	bl	1dc64 <RichString_append@@Base>
   1cd9c:	ldr	r3, [r4, #4]
   1cda0:	ldrb	r3, [r3, #65]	; 0x41
   1cda4:	cmp	r3, #0
   1cda8:	beq	1c864 <Process_writeField@@Base+0x158>
   1cdac:	mov	r3, r7
   1cdb0:	mov	r2, r6
   1cdb4:	ldr	r1, [sp, #20]
   1cdb8:	mov	r0, r8
   1cdbc:	bl	1db40 <RichString_setAttrn@@Base>
   1cdc0:	b	1c864 <Process_writeField@@Base+0x158>
   1cdc4:	ldr	r2, [pc, #-128]	; 1cd4c <Process_writeField@@Base+0x640>
   1cdc8:	b	1ca0c <Process_writeField@@Base+0x300>
   1cdcc:	vstr	d7, [sp, #8]
   1cdd0:	ldr	r3, [pc, #-136]	; 1cd50 <Process_writeField@@Base+0x644>
   1cdd4:	add	r6, sp, #52	; 0x34
   1cdd8:	str	r3, [sp]
   1cddc:	mov	r0, r6
   1cde0:	mov	r3, #256	; 0x100
   1cde4:	mov	r2, #1
   1cde8:	mov	r1, #255	; 0xff
   1cdec:	bl	15510 <__snprintf_chk@plt>
   1cdf0:	cmp	r0, #254	; 0xfe
   1cdf4:	ble	1c854 <Process_writeField@@Base+0x148>
   1cdf8:	mov	r0, #1
   1cdfc:	bl	15030 <curs_set@plt>
   1ce00:	bl	14f28 <endwin@plt>
   1ce04:	mov	r1, #0
   1ce08:	mov	r0, #1
   1ce0c:	bl	15114 <err@plt>
   1ce10:	ldr	r3, [r7]
   1ce14:	ldr	r9, [r3, #104]	; 0x68
   1ce18:	b	1c854 <Process_writeField@@Base+0x148>
   1ce1c:	ldr	r3, [pc, #-212]	; 1cd50 <Process_writeField@@Base+0x644>
   1ce20:	add	r6, sp, #52	; 0x34
   1ce24:	vstr	d6, [sp, #8]
   1ce28:	b	1cdd8 <Process_writeField@@Base+0x6cc>
   1ce2c:	ldr	r3, [r7]
   1ce30:	ldr	r9, [r3, #96]	; 0x60
   1ce34:	b	1c854 <Process_writeField@@Base+0x148>
   1ce38:	vcvt.u32.f32	s15, s15
   1ce3c:	ldr	r3, [pc, #-240]	; 1cd54 <Process_writeField@@Base+0x648>
   1ce40:	b	1c97c <Process_writeField@@Base+0x270>
   1ce44:	mov	r0, r4
   1ce48:	bl	253f8 <Process_isThread@@Base>
   1ce4c:	cmp	r0, #0
   1ce50:	ldrne	r3, [r7]
   1ce54:	ldreq	r0, [r4, #4]
   1ce58:	ldrne	r0, [r4, #4]
   1ce5c:	ldrne	r9, [r3, #112]	; 0x70
   1ce60:	ldrne	r3, [r3, #116]	; 0x74
   1ce64:	strne	r3, [sp, #20]
   1ce68:	b	1cb30 <Process_writeField@@Base+0x424>
   1ce6c:	ldr	r3, [pc, #-284]	; 1cd58 <Process_writeField@@Base+0x64c>
   1ce70:	add	r6, sp, #52	; 0x34
   1ce74:	str	r2, [sp, #4]
   1ce78:	str	r3, [sp]
   1ce7c:	mov	r0, r6
   1ce80:	mov	r3, #256	; 0x100
   1ce84:	mov	r2, #1
   1ce88:	mov	r1, #255	; 0xff
   1ce8c:	bl	15510 <__snprintf_chk@plt>
   1ce90:	b	1c900 <Process_writeField@@Base+0x1f4>
   1ce94:	mov	ip, r4
   1ce98:	mov	r1, r8
   1ce9c:	mov	sl, r8
   1cea0:	ldr	r9, [sp, #32]
   1cea4:	ldr	r4, [sp, #36]	; 0x24
   1cea8:	ldr	r8, [sp, #40]	; 0x28
   1ceac:	ldr	r6, [sp, #44]	; 0x2c
   1ceb0:	ldr	r3, [sp, #24]
   1ceb4:	cmp	r3, #0
   1ceb8:	ldr	r3, [sp, #28]
   1cebc:	movge	r2, #8
   1cec0:	ldr	r3, [r3]
   1cec4:	bge	1cedc <Process_writeField@@Base+0x7d0>
   1cec8:	ldr	r2, [r4, #4]
   1cecc:	ldr	r2, [r2, #48]	; 0x30
   1ced0:	cmp	r2, #1
   1ced4:	movne	r2, #16
   1ced8:	moveq	r2, #12
   1cedc:	ldrb	r0, [r4, #47]	; 0x2f
   1cee0:	ldr	r2, [r3, r2]
   1cee4:	cmp	r0, #0
   1cee8:	ldrne	r0, [r3, #24]
   1ceec:	ldreq	r0, [r3, #20]
   1cef0:	ldr	r3, [pc, #-412]	; 1cd5c <Process_writeField@@Base+0x650>
   1cef4:	str	r0, [sp, #8]
   1cef8:	str	r2, [sp, #4]
   1cefc:	str	r3, [sp]
   1cf00:	mov	r0, ip
   1cf04:	mvn	r3, #0
   1cf08:	mov	r2, #1
   1cf0c:	bl	15510 <__snprintf_chk@plt>
   1cf10:	mov	r3, sl
   1cf14:	cmp	r0, sl
   1cf18:	movlt	r3, #0
   1cf1c:	movge	r3, #1
   1cf20:	orrs	sl, r3, r0, lsr #31
   1cf24:	bne	1cdf8 <Process_writeField@@Base+0x6ec>
   1cf28:	ldr	r3, [r7]
   1cf2c:	mov	r2, r6
   1cf30:	mov	r0, r8
   1cf34:	ldr	r1, [r3, #88]	; 0x58
   1cf38:	bl	1dc64 <RichString_append@@Base>
   1cf3c:	ldr	r7, [r4, #4]
   1cf40:	ldr	r6, [r8]
   1cf44:	ldr	r2, [r4, #28]
   1cf48:	ldrb	r1, [r7, #65]	; 0x41
   1cf4c:	cmp	r1, #0
   1cf50:	beq	1cfb4 <Process_writeField@@Base+0x8a8>
   1cf54:	ldr	lr, [r4, #40]	; 0x28
   1cf58:	cmp	lr, #0
   1cf5c:	movle	r3, sl
   1cf60:	ble	1cfe4 <Process_writeField@@Base+0x8d8>
   1cf64:	mov	r3, #0
   1cf68:	mov	r1, r3
   1cf6c:	sub	ip, r2, #1
   1cf70:	b	1cf84 <Process_writeField@@Base+0x878>
   1cf74:	cmp	r0, #58	; 0x3a
   1cf78:	beq	1cfd8 <Process_writeField@@Base+0x8cc>
   1cf7c:	cmp	r1, lr
   1cf80:	bge	1cfe4 <Process_writeField@@Base+0x8d8>
   1cf84:	ldrb	r0, [ip, #1]!
   1cf88:	add	r1, r1, #1
   1cf8c:	cmp	r0, #47	; 0x2f
   1cf90:	bne	1cf74 <Process_writeField@@Base+0x868>
   1cf94:	mov	r3, r1
   1cf98:	b	1cf7c <Process_writeField@@Base+0x870>
   1cf9c:	sub	r3, lr, r7
   1cfa0:	ldrb	r1, [r0, #59]	; 0x3b
   1cfa4:	cmp	r1, #0
   1cfa8:	addne	r6, r6, r7
   1cfac:	bne	1cd88 <Process_writeField@@Base+0x67c>
   1cfb0:	b	1cd84 <Process_writeField@@Base+0x678>
   1cfb4:	ldrb	r3, [r7, #59]	; 0x3b
   1cfb8:	cmp	r3, #0
   1cfbc:	movne	r7, r1
   1cfc0:	bne	1cd90 <Process_writeField@@Base+0x684>
   1cfc4:	ldr	lr, [r4, #40]	; 0x28
   1cfc8:	cmp	lr, #0
   1cfcc:	bgt	1cf64 <Process_writeField@@Base+0x858>
   1cfd0:	add	r2, r2, r3
   1cfd4:	sub	r1, lr, r3
   1cfd8:	sub	r7, r6, #1
   1cfdc:	add	r7, r7, r1
   1cfe0:	b	1cd90 <Process_writeField@@Base+0x684>
   1cfe4:	ldrb	r1, [r7, #59]	; 0x3b
   1cfe8:	cmp	r1, #0
   1cfec:	addne	r6, r6, r3
   1cff0:	bne	1cfd4 <Process_writeField@@Base+0x8c8>
   1cff4:	b	1cfd0 <Process_writeField@@Base+0x8c4>
   1cff8:	ldr	r3, [pc, #-672]	; 1cd60 <Process_writeField@@Base+0x654>
   1cffc:	mov	r1, #255	; 0xff
   1d000:	add	r6, sp, #52	; 0x34
   1d004:	str	r3, [sp, #28]
   1d008:	mov	sl, r1
   1d00c:	mov	ip, r6
   1d010:	b	1ceb0 <Process_writeField@@Base+0x7a4>
   1d014:	bl	15084 <__stack_chk_fail@plt>

0001d018 <Process_outputRate@@Base>:
   1d018:	push	{r4, r5, r6, r7, r8, r9, lr}
   1d01c:	vldr	d7, [pc, #340]	; 1d178 <Process_outputRate@@Base+0x160>
   1d020:	ldr	r7, [pc, #376]	; 1d1a0 <Process_outputRate@@Base+0x188>
   1d024:	cmp	r3, #0
   1d028:	mov	r6, r1
   1d02c:	ldr	r3, [r7]
   1d030:	vcmp.f64	d0, d7
   1d034:	sub	sp, sp, #20
   1d038:	ldr	r4, [r3, #72]	; 0x48
   1d03c:	ldr	r1, [r3, #40]	; 0x28
   1d040:	ldr	r3, [r3, #84]	; 0x54
   1d044:	moveq	r9, r4
   1d048:	movne	r9, r1
   1d04c:	moveq	r5, r4
   1d050:	movne	r5, r3
   1d054:	vmrs	APSR_nzcv, fpscr
   1d058:	mov	r8, r0
   1d05c:	beq	1d10c <Process_outputRate@@Base+0xf4>
   1d060:	vldr	d7, [pc, #280]	; 1d180 <Process_outputRate@@Base+0x168>
   1d064:	vcmpe.f64	d0, d7
   1d068:	vmrs	APSR_nzcv, fpscr
   1d06c:	bmi	1d0d0 <Process_outputRate@@Base+0xb8>
   1d070:	vldr	d7, [pc, #272]	; 1d188 <Process_outputRate@@Base+0x170>
   1d074:	vldr	d6, [pc, #276]	; 1d190 <Process_outputRate@@Base+0x178>
   1d078:	vcmpe.f64	d0, d7
   1d07c:	vmul.f64	d7, d0, d6
   1d080:	vmrs	APSR_nzcv, fpscr
   1d084:	bmi	1d16c <Process_outputRate@@Base+0x154>
   1d088:	vldr	d5, [pc, #264]	; 1d198 <Process_outputRate@@Base+0x180>
   1d08c:	vmul.f64	d7, d7, d6
   1d090:	vcmpe.f64	d0, d5
   1d094:	vmrs	APSR_nzcv, fpscr
   1d098:	bmi	1d13c <Process_outputRate@@Base+0x124>
   1d09c:	vmul.f64	d7, d7, d6
   1d0a0:	ldr	r3, [pc, #252]	; 1d1a4 <Process_outputRate@@Base+0x18c>
   1d0a4:	mov	r1, r2
   1d0a8:	str	r3, [sp]
   1d0ac:	mov	r2, #1
   1d0b0:	mvn	r3, #0
   1d0b4:	mov	r0, r6
   1d0b8:	vstr	d7, [sp, #8]
   1d0bc:	bl	15510 <__snprintf_chk@plt>
   1d0c0:	mov	r2, r6
   1d0c4:	mov	r1, r9
   1d0c8:	mov	r3, r0
   1d0cc:	b	1d0fc <Process_outputRate@@Base+0xe4>
   1d0d0:	vstr	d0, [sp, #8]
   1d0d4:	ldr	r3, [pc, #204]	; 1d1a8 <Process_outputRate@@Base+0x190>
   1d0d8:	mov	r1, r2
   1d0dc:	str	r3, [sp]
   1d0e0:	mov	r2, #1
   1d0e4:	mvn	r3, #0
   1d0e8:	mov	r0, r6
   1d0ec:	bl	15510 <__snprintf_chk@plt>
   1d0f0:	mov	r2, r6
   1d0f4:	mov	r1, r4
   1d0f8:	mov	r3, r0
   1d0fc:	mov	r0, r8
   1d100:	add	sp, sp, #20
   1d104:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1d108:	b	1dda4 <RichString_appendn@@Base>
   1d10c:	mov	r1, r2
   1d110:	mov	r0, r6
   1d114:	ldr	r2, [pc, #144]	; 1d1ac <Process_outputRate@@Base+0x194>
   1d118:	bl	1530c <snprintf@plt>
   1d11c:	ldr	r3, [r7]
   1d120:	mov	r2, r6
   1d124:	mov	r0, r8
   1d128:	ldr	r1, [r3, #76]	; 0x4c
   1d12c:	mov	r3, #12
   1d130:	add	sp, sp, #20
   1d134:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1d138:	b	1dda4 <RichString_appendn@@Base>
   1d13c:	ldr	r3, [pc, #108]	; 1d1b0 <Process_outputRate@@Base+0x198>
   1d140:	mov	r1, r2
   1d144:	str	r3, [sp]
   1d148:	mov	r2, #1
   1d14c:	mvn	r3, #0
   1d150:	vstr	d7, [sp, #8]
   1d154:	mov	r0, r6
   1d158:	bl	15510 <__snprintf_chk@plt>
   1d15c:	mov	r2, r6
   1d160:	mov	r1, r5
   1d164:	mov	r3, r0
   1d168:	b	1d0fc <Process_outputRate@@Base+0xe4>
   1d16c:	ldr	r3, [pc, #64]	; 1d1b4 <Process_outputRate@@Base+0x19c>
   1d170:	vstr	d7, [sp, #8]
   1d174:	b	1d0d8 <Process_outputRate@@Base+0xc0>
   1d178:	andeq	r0, r0, r0
   1d17c:	svclt	0x00f00000	; IMB
   1d180:	andeq	r0, r0, r0
   1d184:	addsmi	r0, r0, r0
   1d188:	andeq	r0, r0, r0
   1d18c:	teqmi	r0, r0
   1d190:	andeq	r0, r0, r0
   1d194:	svccc	0x00500000
   1d198:	andeq	r0, r0, r0
   1d19c:	bicsmi	r0, r0, r0
   1d1a0:	muleq	r3, r8, r1
   1d1a4:			; <UNDEFINED> instruction: 0x0002a1b8
   1d1a8:	muleq	r2, r4, r1
   1d1ac:	ldrdeq	sl, [r2], -r4
   1d1b0:	andeq	sl, r2, ip, lsr #3
   1d1b4:	andeq	sl, r2, r0, lsr #3

0001d1b8 <Process_done@@Base>:
   1d1b8:	ldr	r0, [r0, #28]
   1d1bc:	b	14fa0 <free@plt>

0001d1c0 <Process_init@@Base>:
   1d1c0:	push	{r4, lr}
   1d1c4:	mvn	ip, #0
   1d1c8:	ldr	r4, [pc, #52]	; 1d204 <Process_init@@Base+0x44>
   1d1cc:	mov	r2, #0
   1d1d0:	str	r1, [r0, #4]
   1d1d4:	ldr	r3, [r4]
   1d1d8:	str	ip, [r0, #40]	; 0x28
   1d1dc:	cmp	r3, ip
   1d1e0:	mov	r3, #1
   1d1e4:	strb	r2, [r0, #46]	; 0x2e
   1d1e8:	strb	r2, [r0, #44]	; 0x2c
   1d1ec:	strb	r3, [r0, #47]	; 0x2f
   1d1f0:	strb	r3, [r0, #48]	; 0x30
   1d1f4:	popne	{r4, pc}
   1d1f8:	bl	14f94 <getuid@plt>
   1d1fc:	str	r0, [r4]
   1d200:	pop	{r4, pc}
   1d204:	andeq	sp, r3, r4, ror #25

0001d208 <Process_toggleTag@@Base>:
   1d208:	ldrb	r3, [r0, #46]	; 0x2e
   1d20c:	eor	r3, r3, #1
   1d210:	strb	r3, [r0, #46]	; 0x2e
   1d214:	bx	lr

0001d218 <Process_setPriority@@Base>:
   1d218:	push	{r4, r5, r6, r7, r8, lr}
   1d21c:	mov	r4, r0
   1d220:	mov	r5, r1
   1d224:	mov	r0, #0
   1d228:	ldr	r1, [r4, #16]
   1d22c:	bl	150cc <getpriority@plt>
   1d230:	mov	r2, r5
   1d234:	ldr	r1, [r4, #16]
   1d238:	mov	r7, r0
   1d23c:	mov	r0, #0
   1d240:	bl	151bc <setpriority@plt>
   1d244:	subs	r6, r0, #0
   1d248:	bne	1d25c <Process_setPriority@@Base+0x44>
   1d24c:	ldr	r1, [r4, #16]
   1d250:	bl	150cc <getpriority@plt>
   1d254:	cmp	r0, r7
   1d258:	strne	r5, [r4, #96]	; 0x60
   1d25c:	clz	r0, r6
   1d260:	lsr	r0, r0, #5
   1d264:	pop	{r4, r5, r6, r7, r8, pc}

0001d268 <Process_changePriorityBy@@Base>:
   1d268:	ldr	r3, [r0, #96]	; 0x60
   1d26c:	add	r1, r1, r3
   1d270:	b	1d218 <Process_setPriority@@Base>

0001d274 <Process_sendSignal@@Base>:
   1d274:	ldr	r0, [r0, #16]
   1d278:	b	1524c <kill@plt>

0001d27c <Process_pidCompare@@Base>:
   1d27c:	ldr	r0, [r0, #16]
   1d280:	ldr	r3, [r1, #16]
   1d284:	sub	r0, r0, r3
   1d288:	bx	lr
   1d28c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d290:	sub	sp, sp, #28
   1d294:	mov	r6, r0
   1d298:	mov	r8, r1
   1d29c:	mov	r4, r2
   1d2a0:	mov	r1, #0
   1d2a4:	mvn	r2, #0
   1d2a8:	ldr	r0, [pc, #392]	; 1d438 <Process_pidCompare@@Base+0x1bc>
   1d2ac:	str	r3, [sp, #16]
   1d2b0:	ldr	sl, [sp, #64]	; 0x40
   1d2b4:	ldrb	r7, [sp, #68]	; 0x44
   1d2b8:	bl	20ce4 <Vector_new@@Base>
   1d2bc:	mov	r9, r0
   1d2c0:	ldr	r0, [r6, #4]
   1d2c4:	ldr	r5, [r0, #16]
   1d2c8:	subs	r5, r5, #1
   1d2cc:	bmi	1d314 <Process_pidCompare@@Base+0x98>
   1d2d0:	lsl	fp, r5, #2
   1d2d4:	b	1d2dc <Process_pidCompare@@Base+0x60>
   1d2d8:	ldr	r0, [r6, #4]
   1d2dc:	ldr	r3, [r0]
   1d2e0:	ldr	r3, [r3, fp]
   1d2e4:	sub	fp, fp, #4
   1d2e8:	ldrb	r2, [r3, #48]	; 0x30
   1d2ec:	cmp	r2, #0
   1d2f0:	beq	1d30c <Process_pidCompare@@Base+0x90>
   1d2f4:	ldr	r2, [r3, #24]
   1d2f8:	cmp	r2, r8
   1d2fc:	beq	1d40c <Process_pidCompare@@Base+0x190>
   1d300:	ldr	r1, [r3, #16]
   1d304:	cmp	r2, r1
   1d308:	beq	1d400 <Process_pidCompare@@Base+0x184>
   1d30c:	subs	r5, r5, #1
   1d310:	bcs	1d2d8 <Process_pidCompare@@Base+0x5c>
   1d314:	ldr	fp, [r9, #16]
   1d318:	cmp	fp, #0
   1d31c:	ble	1d3c8 <Process_pidCompare@@Base+0x14c>
   1d320:	mov	r8, #1
   1d324:	add	r3, r4, r8
   1d328:	str	r3, [sp, #12]
   1d32c:	ldr	r3, [sp, #16]
   1d330:	orr	r8, r3, r8, lsl r4
   1d334:	sub	r3, fp, #1
   1d338:	mov	r4, #0
   1d33c:	str	r3, [sp, #8]
   1d340:	rsb	r3, r8, #0
   1d344:	str	r3, [sp, #20]
   1d348:	ldr	r3, [r9]
   1d34c:	cmp	r7, #0
   1d350:	ldr	r0, [r6, #8]
   1d354:	ldr	r5, [r3, r4, lsl #2]
   1d358:	strbeq	r7, [r5, #48]	; 0x30
   1d35c:	cmp	sl, #1
   1d360:	beq	1d3f4 <Process_pidCompare@@Base+0x178>
   1d364:	mov	r2, r5
   1d368:	mov	r1, #0
   1d36c:	bl	20ed0 <Vector_insert@@Base>
   1d370:	ldr	r3, [sp, #8]
   1d374:	ldr	r1, [r5, #16]
   1d378:	cmp	r4, r3
   1d37c:	bge	1d424 <Process_pidCompare@@Base+0x1a8>
   1d380:	cmp	r7, #0
   1d384:	beq	1d3d8 <Process_pidCompare@@Base+0x15c>
   1d388:	mov	r3, r8
   1d38c:	ldrb	r2, [r5, #47]	; 0x2f
   1d390:	str	r2, [sp, #4]
   1d394:	str	sl, [sp]
   1d398:	ldr	r2, [sp, #12]
   1d39c:	mov	r0, r6
   1d3a0:	bl	1d28c <Process_pidCompare@@Base+0x10>
   1d3a4:	ldr	r3, [sp, #8]
   1d3a8:	cmp	r4, r3
   1d3ac:	ldreq	r3, [sp, #20]
   1d3b0:	streq	r3, [r5, #36]	; 0x24
   1d3b4:	beq	1d3bc <Process_pidCompare@@Base+0x140>
   1d3b8:	str	r8, [r5, #36]	; 0x24
   1d3bc:	add	r4, r4, #1
   1d3c0:	cmp	fp, r4
   1d3c4:	bne	1d348 <Process_pidCompare@@Base+0xcc>
   1d3c8:	mov	r0, r9
   1d3cc:	add	sp, sp, #28
   1d3d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3d4:	b	20d40 <Vector_delete@@Base>
   1d3d8:	str	r7, [sp, #4]
   1d3dc:	str	sl, [sp]
   1d3e0:	mov	r3, r8
   1d3e4:	ldr	r2, [sp, #12]
   1d3e8:	mov	r0, r6
   1d3ec:	bl	1d28c <Process_pidCompare@@Base+0x10>
   1d3f0:	b	1d3b8 <Process_pidCompare@@Base+0x13c>
   1d3f4:	mov	r1, r5
   1d3f8:	bl	21094 <Vector_add@@Base>
   1d3fc:	b	1d370 <Process_pidCompare@@Base+0xf4>
   1d400:	ldr	r3, [r3, #20]
   1d404:	cmp	r3, r8
   1d408:	bne	1d30c <Process_pidCompare@@Base+0x90>
   1d40c:	mov	r1, r5
   1d410:	bl	20f24 <Vector_take@@Base>
   1d414:	mov	r1, r0
   1d418:	mov	r0, r9
   1d41c:	bl	21094 <Vector_add@@Base>
   1d420:	b	1d30c <Process_pidCompare@@Base+0x90>
   1d424:	cmp	r7, #0
   1d428:	ldr	r3, [sp, #16]
   1d42c:	moveq	r2, r7
   1d430:	beq	1d390 <Process_pidCompare@@Base+0x114>
   1d434:	b	1d38c <Process_pidCompare@@Base+0x110>
   1d438:	strdeq	sp, [r3], -ip

0001d43c <ProcessList_init@@Base>:
   1d43c:	push	{r4, r5, r6, r7, r8, lr}
   1d440:	mov	r4, r0
   1d444:	mov	r5, r1
   1d448:	mov	r8, r2
   1d44c:	mov	r0, r1
   1d450:	mvn	r2, #0
   1d454:	mov	r1, #1
   1d458:	mov	r7, r3
   1d45c:	ldr	r6, [sp, #24]
   1d460:	bl	20ce4 <Vector_new@@Base>
   1d464:	mov	r1, #0
   1d468:	str	r0, [r4, #4]
   1d46c:	mov	r0, #140	; 0x8c
   1d470:	bl	18984 <Hashtable_new@@Base>
   1d474:	str	r8, [r4, #16]
   1d478:	str	r7, [r4, #36]	; 0x24
   1d47c:	str	r6, [r4, #28]
   1d480:	mvn	r2, #0
   1d484:	mov	r1, #1
   1d488:	str	r0, [r4, #12]
   1d48c:	mov	r0, r5
   1d490:	bl	20ce4 <Vector_new@@Base>
   1d494:	mov	r2, #0
   1d498:	mvn	r3, #0
   1d49c:	str	r2, [r4, #128]	; 0x80
   1d4a0:	str	r3, [r4, #24]
   1d4a4:	str	r0, [r4, #8]
   1d4a8:	mov	r0, r4
   1d4ac:	pop	{r4, r5, r6, r7, r8, pc}

0001d4b0 <ProcessList_done@@Base>:
   1d4b0:	push	{r4, lr}
   1d4b4:	mov	r4, r0
   1d4b8:	ldr	r0, [r0, #12]
   1d4bc:	bl	189c4 <Hashtable_delete@@Base>
   1d4c0:	ldr	r0, [r4, #4]
   1d4c4:	bl	20d40 <Vector_delete@@Base>
   1d4c8:	ldr	r0, [r4, #8]
   1d4cc:	pop	{r4, lr}
   1d4d0:	b	20d40 <Vector_delete@@Base>

0001d4d4 <ProcessList_setPanel@@Base>:
   1d4d4:	str	r1, [r0, #20]
   1d4d8:	bx	lr

0001d4dc <ProcessList_printHeader@@Base>:
   1d4dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d4e0:	mov	r5, r0
   1d4e4:	mov	r0, r1
   1d4e8:	mov	r4, r1
   1d4ec:	bl	1dbf0 <RichString_prune@@Base>
   1d4f0:	ldr	ip, [r5]
   1d4f4:	ldr	r9, [ip, #28]
   1d4f8:	ldr	r1, [r9]
   1d4fc:	cmp	r1, #0
   1d500:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d504:	ldr	r8, [pc, #96]	; 1d56c <ProcessList_printHeader@@Base+0x90>
   1d508:	ldr	r7, [pc, #96]	; 1d570 <ProcessList_printHeader@@Base+0x94>
   1d50c:	ldr	r6, [pc, #96]	; 1d574 <ProcessList_printHeader@@Base+0x98>
   1d510:	b	1d52c <ProcessList_printHeader@@Base+0x50>
   1d514:	ldr	r1, [sl, #20]
   1d518:	bl	1dc64 <RichString_append@@Base>
   1d51c:	ldr	r1, [r9, #4]!
   1d520:	cmp	r1, #0
   1d524:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d528:	ldr	ip, [r5]
   1d52c:	add	r3, r8, r1, lsl #4
   1d530:	ldrb	lr, [ip, #58]	; 0x3a
   1d534:	ldr	r3, [r3, #4]
   1d538:	mov	r0, r4
   1d53c:	cmp	r3, #0
   1d540:	moveq	r3, r6
   1d544:	cmp	lr, #0
   1d548:	ldr	sl, [r7]
   1d54c:	mov	r2, r3
   1d550:	bne	1d514 <ProcessList_printHeader@@Base+0x38>
   1d554:	ldr	ip, [ip, #52]	; 0x34
   1d558:	cmp	ip, r1
   1d55c:	bne	1d514 <ProcessList_printHeader@@Base+0x38>
   1d560:	ldr	r1, [sl, #28]
   1d564:	bl	1dc64 <RichString_append@@Base>
   1d568:	b	1d51c <ProcessList_printHeader@@Base+0x40>
   1d56c:	strdeq	sp, [r3], -r0
   1d570:	muleq	r3, r8, r1
   1d574:	andeq	sl, r2, r0, lsl #3

0001d578 <ProcessList_add@@Base>:
   1d578:	push	{r4, r5, r6, lr}
   1d57c:	mov	r5, r1
   1d580:	mov	r4, r0
   1d584:	ldr	r0, [r0, #4]
   1d588:	bl	21094 <Vector_add@@Base>
   1d58c:	mov	r2, r5
   1d590:	ldr	r0, [r4, #12]
   1d594:	ldr	r1, [r5, #16]
   1d598:	pop	{r4, r5, r6, lr}
   1d59c:	b	18a44 <Hashtable_put@@Base>

0001d5a0 <ProcessList_remove@@Base>:
   1d5a0:	push	{r4, r5, r6, lr}
   1d5a4:	mov	r4, r0
   1d5a8:	mov	r5, r1
   1d5ac:	ldr	r0, [r0, #12]
   1d5b0:	ldr	r1, [r1, #16]
   1d5b4:	bl	18ae0 <Hashtable_remove@@Base>
   1d5b8:	mov	r1, r5
   1d5bc:	ldr	r0, [r4, #4]
   1d5c0:	ldr	r2, [pc, #20]	; 1d5dc <ProcessList_remove@@Base+0x3c>
   1d5c4:	bl	210a0 <Vector_indexOf@@Base>
   1d5c8:	subs	r1, r0, #0
   1d5cc:	poplt	{r4, r5, r6, pc}
   1d5d0:	ldr	r0, [r4, #4]
   1d5d4:	pop	{r4, r5, r6, lr}
   1d5d8:	b	20f68 <Vector_remove@@Base>
   1d5dc:	andeq	sp, r1, ip, ror r2

0001d5e0 <ProcessList_get@@Base>:
   1d5e0:	ldr	r3, [r0, #4]
   1d5e4:	ldr	r3, [r3]
   1d5e8:	ldr	r0, [r3, r1, lsl #2]
   1d5ec:	bx	lr

0001d5f0 <ProcessList_size@@Base>:
   1d5f0:	ldr	r3, [r0, #4]
   1d5f4:	ldr	r0, [r3, #16]
   1d5f8:	bx	lr

0001d5fc <ProcessList_sort@@Base>:
   1d5fc:	ldr	r3, [r0]
   1d600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d604:	mov	r5, r0
   1d608:	ldrb	r2, [r3, #58]	; 0x3a
   1d60c:	sub	sp, sp, #12
   1d610:	ldr	r0, [r0, #4]
   1d614:	cmp	r2, #0
   1d618:	beq	1d7ac <ProcessList_sort@@Base+0x1b0>
   1d61c:	mov	r2, #1
   1d620:	ldr	r4, [r3, #52]	; 0x34
   1d624:	ldr	r6, [r3, #48]	; 0x30
   1d628:	str	r2, [r3, #52]	; 0x34
   1d62c:	str	r2, [r3, #48]	; 0x30
   1d630:	bl	20e04 <Vector_quickSort@@Base>
   1d634:	ldr	r3, [r5]
   1d638:	mov	r7, #0
   1d63c:	str	r4, [r3, #52]	; 0x34
   1d640:	str	r6, [r3, #48]	; 0x30
   1d644:	ldr	r0, [r5, #4]
   1d648:	ldr	r9, [r0, #16]
   1d64c:	cmp	r9, #0
   1d650:	beq	1d798 <ProcessList_sort@@Base+0x19c>
   1d654:	ble	1d64c <ProcessList_sort@@Base+0x50>
   1d658:	ldr	r4, [r0]
   1d65c:	ldr	r3, [r4]
   1d660:	ldrb	r1, [r3, #48]	; 0x30
   1d664:	cmp	r1, #0
   1d668:	beq	1d738 <ProcessList_sort@@Base+0x13c>
   1d66c:	mov	r8, r4
   1d670:	mov	r1, #0
   1d674:	ldr	lr, [r3, #24]
   1d678:	ldr	r2, [r3, #16]
   1d67c:	cmp	lr, r2
   1d680:	beq	1d784 <ProcessList_sort@@Base+0x188>
   1d684:	mov	sl, r9
   1d688:	mov	ip, #0
   1d68c:	add	r3, ip, sl
   1d690:	add	r3, r3, r3, lsr #31
   1d694:	asr	r3, r3, #1
   1d698:	mov	r2, r3
   1d69c:	ldr	fp, [r4, r3, lsl #2]
   1d6a0:	ldr	fp, [fp, #16]
   1d6a4:	cmp	fp, lr
   1d6a8:	beq	1d71c <ProcessList_sort@@Base+0x120>
   1d6ac:	bgt	1d6d0 <ProcessList_sort@@Base+0xd4>
   1d6b0:	b	1d774 <ProcessList_sort@@Base+0x178>
   1d6b4:	asr	r3, r3, #1
   1d6b8:	ldr	sl, [r4, r3, lsl #2]
   1d6bc:	ldr	sl, [sl, #16]
   1d6c0:	cmp	sl, lr
   1d6c4:	beq	1d71c <ProcessList_sort@@Base+0x120>
   1d6c8:	ble	1d770 <ProcessList_sort@@Base+0x174>
   1d6cc:	mov	r2, r3
   1d6d0:	add	r3, ip, r2
   1d6d4:	cmp	ip, r2
   1d6d8:	add	r3, r3, r3, lsr #31
   1d6dc:	blt	1d6b4 <ProcessList_sort@@Base+0xb8>
   1d6e0:	bl	20f24 <Vector_take@@Base>
   1d6e4:	mov	r4, r0
   1d6e8:	mov	r1, r0
   1d6ec:	str	r7, [r0, #36]	; 0x24
   1d6f0:	ldr	r0, [r5, #8]
   1d6f4:	bl	21094 <Vector_add@@Base>
   1d6f8:	ldrb	r2, [r4, #47]	; 0x2f
   1d6fc:	mov	r3, #0
   1d700:	ldr	r1, [r4, #16]
   1d704:	mov	r0, r5
   1d708:	str	r2, [sp, #4]
   1d70c:	str	r6, [sp]
   1d710:	mov	r2, r3
   1d714:	bl	1d28c <Process_pidCompare@@Base+0x10>
   1d718:	b	1d644 <ProcessList_sort@@Base+0x48>
   1d71c:	add	r1, r1, #1
   1d720:	cmp	r1, r9
   1d724:	beq	1d64c <ProcessList_sort@@Base+0x50>
   1d728:	ldr	r3, [r8, #4]!
   1d72c:	ldrb	r2, [r3, #48]	; 0x30
   1d730:	cmp	r2, #0
   1d734:	bne	1d674 <ProcessList_sort@@Base+0x78>
   1d738:	bl	20f24 <Vector_take@@Base>
   1d73c:	mov	r4, r0
   1d740:	mov	r1, r0
   1d744:	str	r7, [r0, #36]	; 0x24
   1d748:	ldr	r0, [r5, #8]
   1d74c:	bl	21094 <Vector_add@@Base>
   1d750:	mov	r3, #0
   1d754:	ldr	r1, [r4, #16]
   1d758:	mov	r2, r3
   1d75c:	str	r3, [sp, #4]
   1d760:	str	r6, [sp]
   1d764:	mov	r0, r5
   1d768:	bl	1d28c <Process_pidCompare@@Base+0x10>
   1d76c:	b	1d644 <ProcessList_sort@@Base+0x48>
   1d770:	mov	sl, r2
   1d774:	add	ip, r3, #1
   1d778:	cmp	ip, sl
   1d77c:	blt	1d68c <ProcessList_sort@@Base+0x90>
   1d780:	b	1d6e0 <ProcessList_sort@@Base+0xe4>
   1d784:	ldr	r3, [r3, #20]
   1d788:	cmp	lr, r3
   1d78c:	beq	1d6e0 <ProcessList_sort@@Base+0xe4>
   1d790:	mov	lr, r3
   1d794:	b	1d684 <ProcessList_sort@@Base+0x88>
   1d798:	ldr	r3, [r5, #8]
   1d79c:	str	r0, [r5, #8]
   1d7a0:	str	r3, [r5, #4]
   1d7a4:	add	sp, sp, #12
   1d7a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d7ac:	add	sp, sp, #12
   1d7b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7b4:	b	20e20 <Vector_insertionSort@@Base>

0001d7b8 <ProcessList_keyAt@@Base>:
   1d7b8:	ldr	r3, [r0]
   1d7bc:	push	{r4, r5, r6, r7, r8, lr}
   1d7c0:	ldr	r6, [r3, #28]
   1d7c4:	ldr	r5, [r6]
   1d7c8:	cmp	r5, #0
   1d7cc:	beq	1d814 <ProcessList_keyAt@@Base+0x5c>
   1d7d0:	ldr	r7, [pc, #72]	; 1d820 <ProcessList_keyAt@@Base+0x68>
   1d7d4:	mov	r8, r1
   1d7d8:	mov	r4, #0
   1d7dc:	add	r3, r7, r5, lsl #4
   1d7e0:	ldr	r0, [r3, #4]
   1d7e4:	cmp	r0, #0
   1d7e8:	moveq	r0, #2
   1d7ec:	beq	1d7f4 <ProcessList_keyAt@@Base+0x3c>
   1d7f0:	bl	152a0 <strlen@plt>
   1d7f4:	cmp	r8, r4
   1d7f8:	add	r4, r4, r0
   1d7fc:	blt	1d808 <ProcessList_keyAt@@Base+0x50>
   1d800:	cmp	r8, r4
   1d804:	ble	1d818 <ProcessList_keyAt@@Base+0x60>
   1d808:	ldr	r5, [r6, #4]!
   1d80c:	cmp	r5, #0
   1d810:	bne	1d7dc <ProcessList_keyAt@@Base+0x24>
   1d814:	mov	r5, #2
   1d818:	mov	r0, r5
   1d81c:	pop	{r4, r5, r6, r7, r8, pc}
   1d820:	strdeq	sp, [r3], -r0

0001d824 <ProcessList_expandTree@@Base>:
   1d824:	ldr	r3, [r0, #4]
   1d828:	ldr	r1, [r3, #16]
   1d82c:	cmp	r1, #0
   1d830:	bxle	lr
   1d834:	ldr	r3, [r3]
   1d838:	mov	r0, #1
   1d83c:	sub	r3, r3, #4
   1d840:	add	r1, r3, r1, lsl #2
   1d844:	ldr	r2, [r3, #4]!
   1d848:	cmp	r3, r1
   1d84c:	strb	r0, [r2, #47]	; 0x2f
   1d850:	bne	1d844 <ProcessList_expandTree@@Base+0x20>
   1d854:	bx	lr

0001d858 <ProcessList_rebuildPanel@@Base>:
   1d858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d85c:	mov	r5, r0
   1d860:	sub	sp, sp, #12
   1d864:	ldr	r0, [r0, #20]
   1d868:	ldr	r9, [r5, #32]
   1d86c:	bl	1b1cc <Panel_getSelectedIndex@@Base>
   1d870:	ldr	r3, [r5, #20]
   1d874:	ldr	r7, [r5, #24]
   1d878:	cmn	r7, #1
   1d87c:	moveq	r7, #0
   1d880:	mov	sl, r0
   1d884:	mov	r0, r3
   1d888:	ldr	r3, [r3, #44]	; 0x2c
   1d88c:	str	r3, [sp, #4]
   1d890:	bl	1b0a8 <Panel_prune@@Base>
   1d894:	ldr	r2, [r5, #4]
   1d898:	ldr	fp, [r2, #16]
   1d89c:	cmp	fp, #0
   1d8a0:	ble	1d95c <ProcessList_rebuildPanel@@Base+0x104>
   1d8a4:	mov	r4, #0
   1d8a8:	mov	r8, r4
   1d8ac:	b	1d8cc <ProcessList_rebuildPanel@@Base+0x74>
   1d8b0:	ldr	r1, [r6, #68]	; 0x44
   1d8b4:	cmp	r2, r1
   1d8b8:	beq	1d8ec <ProcessList_rebuildPanel@@Base+0x94>
   1d8bc:	add	r4, r4, #1
   1d8c0:	cmp	fp, r4
   1d8c4:	beq	1d95c <ProcessList_rebuildPanel@@Base+0x104>
   1d8c8:	ldr	r2, [r5, #4]
   1d8cc:	ldr	r2, [r2]
   1d8d0:	ldr	r6, [r2, r4, lsl #2]
   1d8d4:	ldrb	r2, [r6, #48]	; 0x30
   1d8d8:	cmp	r2, #0
   1d8dc:	beq	1d8bc <ProcessList_rebuildPanel@@Base+0x64>
   1d8e0:	ldr	r2, [r5, #28]
   1d8e4:	cmn	r2, #1
   1d8e8:	bne	1d8b0 <ProcessList_rebuildPanel@@Base+0x58>
   1d8ec:	cmp	r9, #0
   1d8f0:	beq	1d908 <ProcessList_rebuildPanel@@Base+0xb0>
   1d8f4:	mov	r1, r9
   1d8f8:	ldr	r0, [r6, #28]
   1d8fc:	bl	14f1c <strcasestr@plt>
   1d900:	cmp	r0, #0
   1d904:	beq	1d8bc <ProcessList_rebuildPanel@@Base+0x64>
   1d908:	ldr	r0, [r5, #36]	; 0x24
   1d90c:	cmp	r0, #0
   1d910:	beq	1d924 <ProcessList_rebuildPanel@@Base+0xcc>
   1d914:	ldr	r1, [r6, #24]
   1d918:	bl	18b8c <Hashtable_get@@Base>
   1d91c:	cmp	r0, #0
   1d920:	beq	1d8bc <ProcessList_rebuildPanel@@Base+0x64>
   1d924:	mov	r2, r6
   1d928:	mov	r1, r8
   1d92c:	ldr	r0, [r5, #20]
   1d930:	bl	1b10c <Panel_set@@Base>
   1d934:	ldr	r2, [r5, #24]
   1d938:	cmn	r2, #1
   1d93c:	beq	1d964 <ProcessList_rebuildPanel@@Base+0x10c>
   1d940:	ldr	r2, [r6, #16]
   1d944:	cmp	r2, r7
   1d948:	beq	1d96c <ProcessList_rebuildPanel@@Base+0x114>
   1d94c:	add	r8, r8, #1
   1d950:	add	r4, r4, #1
   1d954:	cmp	fp, r4
   1d958:	bne	1d8c8 <ProcessList_rebuildPanel@@Base+0x70>
   1d95c:	add	sp, sp, #12
   1d960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d964:	cmp	sl, r8
   1d968:	bne	1d94c <ProcessList_rebuildPanel@@Base+0xf4>
   1d96c:	mov	r1, r8
   1d970:	ldr	r0, [r5, #20]
   1d974:	bl	1b1e0 <Panel_setSelected@@Base>
   1d978:	ldr	r2, [r5, #20]
   1d97c:	ldr	r3, [sp, #4]
   1d980:	add	r8, r8, #1
   1d984:	str	r3, [r2, #44]	; 0x2c
   1d988:	b	1d950 <ProcessList_rebuildPanel@@Base+0xf8>

0001d98c <ProcessList_getProcess@@Base>:
   1d98c:	push	{r4, r5, r6, r7, r8, lr}
   1d990:	mov	r4, r0
   1d994:	ldr	r0, [r0, #12]
   1d998:	mov	r5, r2
   1d99c:	mov	r7, r3
   1d9a0:	mov	r6, r1
   1d9a4:	bl	18b8c <Hashtable_get@@Base>
   1d9a8:	cmp	r0, #0
   1d9ac:	movne	r2, #1
   1d9b0:	moveq	r2, #0
   1d9b4:	strb	r2, [r5]
   1d9b8:	popne	{r4, r5, r6, r7, r8, pc}
   1d9bc:	ldr	r0, [r4]
   1d9c0:	blx	r7
   1d9c4:	str	r6, [r0, #16]
   1d9c8:	pop	{r4, r5, r6, r7, r8, pc}

0001d9cc <ProcessList_scan@@Base>:
   1d9cc:	ldr	r3, [r0, #4]
   1d9d0:	push	{r4, r5, r6, r7, r8, lr}
   1d9d4:	mov	r6, r0
   1d9d8:	ldr	r1, [r3, #16]
   1d9dc:	cmp	r1, #0
   1d9e0:	ble	1da0c <ProcessList_scan@@Base+0x40>
   1d9e4:	ldr	r3, [r3]
   1d9e8:	mov	ip, #0
   1d9ec:	sub	r3, r3, #4
   1d9f0:	add	r1, r3, r1, lsl #2
   1d9f4:	mov	r0, #1
   1d9f8:	ldr	r2, [r3, #4]!
   1d9fc:	cmp	r1, r3
   1da00:	strb	ip, [r2, #44]	; 0x2c
   1da04:	strb	r0, [r2, #48]	; 0x30
   1da08:	bne	1d9f8 <ProcessList_scan@@Base+0x2c>
   1da0c:	mov	r7, #0
   1da10:	str	r7, [r6, #40]	; 0x28
   1da14:	str	r7, [r6, #48]	; 0x30
   1da18:	str	r7, [r6, #52]	; 0x34
   1da1c:	str	r7, [r6, #44]	; 0x2c
   1da20:	mov	r0, r6
   1da24:	bl	276ac <ProcessList_goThroughEntries@@Base>
   1da28:	ldr	r3, [r6, #4]
   1da2c:	ldr	r4, [r3, #16]
   1da30:	subs	r4, r4, #1
   1da34:	popmi	{r4, r5, r6, r7, r8, pc}
   1da38:	lsl	r5, r4, #2
   1da3c:	b	1da54 <ProcessList_scan@@Base+0x88>
   1da40:	sub	r4, r4, #1
   1da44:	cmn	r4, #1
   1da48:	sub	r5, r5, #4
   1da4c:	popeq	{r4, r5, r6, r7, r8, pc}
   1da50:	ldr	r3, [r6, #4]
   1da54:	ldr	r3, [r3]
   1da58:	ldr	r1, [r3, r5]
   1da5c:	ldrb	r3, [r1, #44]	; 0x2c
   1da60:	cmp	r3, #0
   1da64:	strbne	r7, [r1, #44]	; 0x2c
   1da68:	bne	1da40 <ProcessList_scan@@Base+0x74>
   1da6c:	mov	r0, r6
   1da70:	bl	1d5a0 <ProcessList_remove@@Base>
   1da74:	b	1da40 <ProcessList_scan@@Base+0x74>
   1da78:	ldr	r2, [r0]
   1da7c:	ldr	r3, [pc, #184]	; 1db3c <ProcessList_scan@@Base+0x170>
   1da80:	push	{r4, r5, r6, r7, r8, lr}
   1da84:	add	r4, r1, r1, lsl #1
   1da88:	cmp	r2, r3
   1da8c:	mov	r6, r0
   1da90:	mov	r7, r1
   1da94:	lsl	r4, r4, #3
   1da98:	bgt	1dad0 <ProcessList_scan@@Base+0x104>
   1da9c:	cmp	r1, r3
   1daa0:	bgt	1db18 <ProcessList_scan@@Base+0x14c>
   1daa4:	ldr	r5, [r6, #4]
   1daa8:	add	r2, r5, r4
   1daac:	mov	r3, #0
   1dab0:	str	r3, [r5, r4]
   1dab4:	str	r3, [r2, #4]
   1dab8:	str	r3, [r2, #8]
   1dabc:	str	r3, [r2, #12]
   1dac0:	str	r3, [r2, #16]
   1dac4:	str	r3, [r2, #20]
   1dac8:	str	r7, [r6]
   1dacc:	pop	{r4, r5, r6, r7, r8, pc}
   1dad0:	cmp	r1, r3
   1dad4:	ldr	r8, [r0, #4]
   1dad8:	ble	1daf4 <ProcessList_scan@@Base+0x128>
   1dadc:	mov	r0, r8
   1dae0:	add	r1, r4, #24
   1dae4:	bl	2400c <xRealloc@@Base>
   1dae8:	mov	r5, r0
   1daec:	str	r0, [r6, #4]
   1daf0:	b	1daa8 <ProcessList_scan@@Base+0xdc>
   1daf4:	add	r5, r0, #8
   1daf8:	mov	r2, r4
   1dafc:	mov	r1, r8
   1db00:	mov	r0, r5
   1db04:	bl	14fe8 <memcpy@plt>
   1db08:	mov	r0, r8
   1db0c:	bl	14fa0 <free@plt>
   1db10:	str	r5, [r6, #4]
   1db14:	b	1daa8 <ProcessList_scan@@Base+0xdc>
   1db18:	add	r0, r4, #24
   1db1c:	bl	23fb0 <xMalloc@@Base>
   1db20:	mov	r1, r6
   1db24:	ldr	r2, [r1], #8
   1db28:	add	r2, r2, r2, lsl #1
   1db2c:	lsl	r2, r2, #3
   1db30:	str	r0, [r6, #4]
   1db34:	bl	14fe8 <memcpy@plt>
   1db38:	b	1daa4 <ProcessList_scan@@Base+0xd8>
   1db3c:	andeq	r0, r0, lr, asr r1

0001db40 <RichString_setAttrn@@Base>:
   1db40:	push	{lr}		; (str lr, [sp, #-4]!)
   1db44:	add	ip, r2, r2, lsl #1
   1db48:	ldr	lr, [r0]
   1db4c:	lsl	ip, ip, #3
   1db50:	cmp	lr, r3
   1db54:	suble	r3, lr, #1
   1db58:	bicgt	r3, r3, r3, asr #31
   1db5c:	cmp	r3, r2
   1db60:	ldr	r0, [r0, #4]
   1db64:	poplt	{pc}		; (ldrlt pc, [sp], #4)
   1db68:	add	ip, ip, #24
   1db6c:	add	r0, r0, ip
   1db70:	add	r3, r3, #1
   1db74:	add	r2, r2, #1
   1db78:	cmp	r2, r3
   1db7c:	str	r1, [r0, #-24]	; 0xffffffe8
   1db80:	add	r0, r0, #24
   1db84:	bne	1db74 <RichString_setAttrn@@Base+0x34>
   1db88:	pop	{pc}		; (ldr pc, [sp], #4)

0001db8c <RichString_findChar@@Base>:
   1db8c:	push	{r4, r5, r6, lr}
   1db90:	mov	r5, r0
   1db94:	mov	r0, r1
   1db98:	mov	r4, r2
   1db9c:	bl	15390 <btowc@plt>
   1dba0:	ldm	r5, {r1, r3}
   1dba4:	add	r2, r4, r4, lsl #1
   1dba8:	cmp	r4, r1
   1dbac:	add	r3, r3, r2, lsl #3
   1dbb0:	bge	1dbe0 <RichString_findChar@@Base+0x54>
   1dbb4:	ldr	r2, [r3, #4]
   1dbb8:	cmp	r0, r2
   1dbbc:	bne	1dbd0 <RichString_findChar@@Base+0x44>
   1dbc0:	b	1dbe8 <RichString_findChar@@Base+0x5c>
   1dbc4:	ldr	r2, [r3, #4]
   1dbc8:	cmp	r2, r0
   1dbcc:	beq	1dbe8 <RichString_findChar@@Base+0x5c>
   1dbd0:	add	r4, r4, #1
   1dbd4:	cmp	r4, r1
   1dbd8:	add	r3, r3, #24
   1dbdc:	bne	1dbc4 <RichString_findChar@@Base+0x38>
   1dbe0:	mvn	r0, #0
   1dbe4:	pop	{r4, r5, r6, pc}
   1dbe8:	mov	r0, r4
   1dbec:	pop	{r4, r5, r6, pc}

0001dbf0 <RichString_prune@@Base>:
   1dbf0:	ldr	r3, [pc, #52]	; 1dc2c <RichString_prune@@Base+0x3c>
   1dbf4:	ldr	r2, [r0]
   1dbf8:	push	{r4, lr}
   1dbfc:	cmp	r2, r3
   1dc00:	mov	r4, r0
   1dc04:	ble	1dc10 <RichString_prune@@Base+0x20>
   1dc08:	ldr	r0, [r0, #4]
   1dc0c:	bl	14fa0 <free@plt>
   1dc10:	ldr	r2, [pc, #24]	; 1dc30 <RichString_prune@@Base+0x40>
   1dc14:	mov	r1, #0
   1dc18:	mov	r0, r4
   1dc1c:	bl	15330 <memset@plt>
   1dc20:	add	r3, r4, #8
   1dc24:	str	r3, [r4, #4]
   1dc28:	pop	{r4, pc}
   1dc2c:	andeq	r0, r0, lr, asr r1
   1dc30:	strdeq	r2, [r0], -r0

0001dc34 <RichString_setAttr@@Base>:
   1dc34:	ldrd	r2, [r0]
   1dc38:	sub	r0, r2, #1
   1dc3c:	add	r3, r3, #24
   1dc40:	bic	r0, r0, r0, asr #31
   1dc44:	mov	r2, #0
   1dc48:	add	r0, r0, #1
   1dc4c:	add	r2, r2, #1
   1dc50:	cmp	r2, r0
   1dc54:	str	r1, [r3, #-24]	; 0xffffffe8
   1dc58:	add	r3, r3, #24
   1dc5c:	bne	1dc4c <RichString_setAttr@@Base+0x18>
   1dc60:	bx	lr

0001dc64 <RichString_append@@Base>:
   1dc64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dc68:	add	fp, sp, #32
   1dc6c:	ldr	r8, [pc, #296]	; 1dd9c <RichString_append@@Base+0x138>
   1dc70:	sub	sp, sp, #20
   1dc74:	ldr	r3, [r8]
   1dc78:	mov	r4, r0
   1dc7c:	mov	r0, r2
   1dc80:	mov	r5, r2
   1dc84:	mov	r7, r1
   1dc88:	str	r3, [fp, #-40]	; 0xffffffd8
   1dc8c:	bl	152a0 <strlen@plt>
   1dc90:	str	sp, [fp, #-48]	; 0xffffffd0
   1dc94:	mov	r1, r5
   1dc98:	ldr	r6, [r4]
   1dc9c:	lsl	r3, r0, #2
   1dca0:	add	r3, r3, #14
   1dca4:	bic	r3, r3, #7
   1dca8:	sub	sp, sp, r3
   1dcac:	mov	r9, sp
   1dcb0:	mov	r2, r0
   1dcb4:	mov	r0, r9
   1dcb8:	bl	15474 <mbstowcs@plt>
   1dcbc:	cmp	r0, #0
   1dcc0:	blt	1dd6c <RichString_append@@Base+0x108>
   1dcc4:	ldr	r3, [pc, #212]	; 1dda0 <RichString_append@@Base+0x13c>
   1dcc8:	add	r5, r6, r0
   1dccc:	cmp	r5, r3
   1dcd0:	bgt	1dd88 <RichString_append@@Base+0x124>
   1dcd4:	ldr	r2, [r4]
   1dcd8:	cmp	r2, r3
   1dcdc:	bgt	1dd88 <RichString_append@@Base+0x124>
   1dce0:	add	r2, r5, r5, lsl #1
   1dce4:	ldr	r0, [r4, #4]
   1dce8:	lsl	r2, r2, #3
   1dcec:	add	r1, r0, r2
   1dcf0:	mov	r3, #0
   1dcf4:	str	r3, [r0, r2]
   1dcf8:	str	r3, [r1, #4]
   1dcfc:	str	r3, [r1, #8]
   1dd00:	str	r3, [r1, #12]
   1dd04:	str	r3, [r1, #16]
   1dd08:	str	r3, [r1, #20]
   1dd0c:	str	r5, [r4]
   1dd10:	cmp	r6, r5
   1dd14:	bge	1dd6c <RichString_append@@Base+0x108>
   1dd18:	add	r2, r6, r6, lsl #1
   1dd1c:	ldr	r4, [r4, #4]
   1dd20:	sub	sl, r9, r6, lsl #2
   1dd24:	bic	r7, r7, #-16777216	; 0xff000000
   1dd28:	add	r4, r4, r2, lsl #3
   1dd2c:	add	sl, sl, r5, lsl #2
   1dd30:	mov	r6, #0
   1dd34:	ldr	r5, [r9], #4
   1dd38:	add	r4, r4, #24
   1dd3c:	mov	r0, r5
   1dd40:	bl	15120 <iswprint@plt>
   1dd44:	str	r6, [r4, #-16]
   1dd48:	str	r6, [r4, #-12]
   1dd4c:	str	r6, [r4, #-8]
   1dd50:	str	r6, [r4, #-4]
   1dd54:	str	r7, [r4, #-24]	; 0xffffffe8
   1dd58:	cmp	r0, #0
   1dd5c:	moveq	r5, #63	; 0x3f
   1dd60:	cmp	r9, sl
   1dd64:	str	r5, [r4, #-20]	; 0xffffffec
   1dd68:	bne	1dd34 <RichString_append@@Base+0xd0>
   1dd6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dd70:	ldr	r3, [r8]
   1dd74:	ldr	sp, [fp, #-48]	; 0xffffffd0
   1dd78:	cmp	r2, r3
   1dd7c:	bne	1dd98 <RichString_append@@Base+0x134>
   1dd80:	sub	sp, fp, #32
   1dd84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dd88:	mov	r1, r5
   1dd8c:	mov	r0, r4
   1dd90:	bl	1da78 <ProcessList_scan@@Base+0xac>
   1dd94:	b	1dd10 <RichString_append@@Base+0xac>
   1dd98:	bl	15084 <__stack_chk_fail@plt>
   1dd9c:			; <UNDEFINED> instruction: 0x0003ccb8
   1dda0:	andeq	r0, r0, sp, asr r1

0001dda4 <RichString_appendn@@Base>:
   1dda4:	lsl	ip, r3, #2
   1dda8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ddac:	add	ip, ip, #14
   1ddb0:	add	fp, sp, #32
   1ddb4:	ldr	r8, [pc, #280]	; 1ded4 <RichString_appendn@@Base+0x130>
   1ddb8:	sub	sp, sp, #20
   1ddbc:	bic	ip, ip, #7
   1ddc0:	str	sp, [fp, #-48]	; 0xffffffd0
   1ddc4:	sub	sp, sp, ip
   1ddc8:	mov	r4, r0
   1ddcc:	ldr	ip, [r8]
   1ddd0:	mov	r0, r2
   1ddd4:	mov	r9, sp
   1ddd8:	mov	r7, r1
   1dddc:	mov	r2, r3
   1dde0:	mov	r1, r0
   1dde4:	mov	r0, r9
   1dde8:	str	ip, [fp, #-40]	; 0xffffffd8
   1ddec:	ldr	r6, [r4]
   1ddf0:	bl	15474 <mbstowcs@plt>
   1ddf4:	cmp	r0, #0
   1ddf8:	blt	1dea4 <RichString_appendn@@Base+0x100>
   1ddfc:	ldr	r3, [pc, #212]	; 1ded8 <RichString_appendn@@Base+0x134>
   1de00:	add	r5, r6, r0
   1de04:	cmp	r5, r3
   1de08:	bgt	1dec0 <RichString_appendn@@Base+0x11c>
   1de0c:	ldr	r2, [r4]
   1de10:	cmp	r2, r3
   1de14:	bgt	1dec0 <RichString_appendn@@Base+0x11c>
   1de18:	add	r2, r5, r5, lsl #1
   1de1c:	ldr	r0, [r4, #4]
   1de20:	lsl	r2, r2, #3
   1de24:	add	r1, r0, r2
   1de28:	mov	r3, #0
   1de2c:	str	r3, [r0, r2]
   1de30:	str	r3, [r1, #4]
   1de34:	str	r3, [r1, #8]
   1de38:	str	r3, [r1, #12]
   1de3c:	str	r3, [r1, #16]
   1de40:	str	r3, [r1, #20]
   1de44:	str	r5, [r4]
   1de48:	cmp	r6, r5
   1de4c:	bge	1dea4 <RichString_appendn@@Base+0x100>
   1de50:	add	r2, r6, r6, lsl #1
   1de54:	ldr	r4, [r4, #4]
   1de58:	sub	sl, r9, r6, lsl #2
   1de5c:	bic	r7, r7, #-16777216	; 0xff000000
   1de60:	add	r4, r4, r2, lsl #3
   1de64:	add	sl, sl, r5, lsl #2
   1de68:	mov	r6, #0
   1de6c:	ldr	r5, [r9], #4
   1de70:	add	r4, r4, #24
   1de74:	mov	r0, r5
   1de78:	bl	15120 <iswprint@plt>
   1de7c:	str	r6, [r4, #-16]
   1de80:	str	r6, [r4, #-12]
   1de84:	str	r6, [r4, #-8]
   1de88:	str	r6, [r4, #-4]
   1de8c:	str	r7, [r4, #-24]	; 0xffffffe8
   1de90:	cmp	r0, #0
   1de94:	moveq	r5, #63	; 0x3f
   1de98:	cmp	r9, sl
   1de9c:	str	r5, [r4, #-20]	; 0xffffffec
   1dea0:	bne	1de6c <RichString_appendn@@Base+0xc8>
   1dea4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dea8:	ldr	r3, [r8]
   1deac:	ldr	sp, [fp, #-48]	; 0xffffffd0
   1deb0:	cmp	r2, r3
   1deb4:	bne	1ded0 <RichString_appendn@@Base+0x12c>
   1deb8:	sub	sp, fp, #32
   1debc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dec0:	mov	r1, r5
   1dec4:	mov	r0, r4
   1dec8:	bl	1da78 <ProcessList_scan@@Base+0xac>
   1decc:	b	1de48 <RichString_appendn@@Base+0xa4>
   1ded0:	bl	15084 <__stack_chk_fail@plt>
   1ded4:			; <UNDEFINED> instruction: 0x0003ccb8
   1ded8:	andeq	r0, r0, sp, asr r1

0001dedc <RichString_write@@Base>:
   1dedc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dee0:	add	fp, sp, #32
   1dee4:	ldr	r9, [pc, #284]	; 1e008 <RichString_write@@Base+0x12c>
   1dee8:	sub	sp, sp, #20
   1deec:	ldr	r3, [r9]
   1def0:	mov	r4, r0
   1def4:	mov	r0, r2
   1def8:	mov	r6, r2
   1defc:	mov	r8, r1
   1df00:	str	r3, [fp, #-40]	; 0xffffffd8
   1df04:	bl	152a0 <strlen@plt>
   1df08:	str	sp, [fp, #-48]	; 0xffffffd0
   1df0c:	mov	r1, r6
   1df10:	lsl	r3, r0, #2
   1df14:	add	r3, r3, #14
   1df18:	bic	r3, r3, #7
   1df1c:	sub	sp, sp, r3
   1df20:	mov	sl, sp
   1df24:	mov	r2, r0
   1df28:	mov	r0, sl
   1df2c:	bl	15474 <mbstowcs@plt>
   1df30:	subs	r7, r0, #0
   1df34:	blt	1dfd8 <RichString_write@@Base+0xfc>
   1df38:	ldr	r3, [pc, #204]	; 1e00c <RichString_write@@Base+0x130>
   1df3c:	cmp	r7, r3
   1df40:	bgt	1dff4 <RichString_write@@Base+0x118>
   1df44:	ldr	r2, [r4]
   1df48:	cmp	r2, r3
   1df4c:	bgt	1dff4 <RichString_write@@Base+0x118>
   1df50:	add	r2, r7, r7, lsl #1
   1df54:	ldr	r0, [r4, #4]
   1df58:	lsl	r2, r2, #3
   1df5c:	add	r1, r0, r2
   1df60:	mov	r3, #0
   1df64:	str	r3, [r0, r2]
   1df68:	str	r3, [r1, #4]
   1df6c:	str	r3, [r1, #8]
   1df70:	str	r3, [r1, #12]
   1df74:	str	r3, [r1, #16]
   1df78:	str	r3, [r1, #20]
   1df7c:	str	r7, [r4]
   1df80:	cmp	r7, #0
   1df84:	beq	1dfd8 <RichString_write@@Base+0xfc>
   1df88:	add	r7, sl, r7, lsl #2
   1df8c:	ldr	r4, [r4, #4]
   1df90:	sub	r7, r7, #4
   1df94:	bic	r8, r8, #-16777216	; 0xff000000
   1df98:	sub	sl, sl, #4
   1df9c:	mov	r6, #0
   1dfa0:	ldr	r5, [sl, #4]!
   1dfa4:	add	r4, r4, #24
   1dfa8:	mov	r0, r5
   1dfac:	bl	15120 <iswprint@plt>
   1dfb0:	str	r6, [r4, #-16]
   1dfb4:	str	r6, [r4, #-12]
   1dfb8:	str	r6, [r4, #-8]
   1dfbc:	str	r6, [r4, #-4]
   1dfc0:	str	r8, [r4, #-24]	; 0xffffffe8
   1dfc4:	cmp	r0, #0
   1dfc8:	moveq	r5, #63	; 0x3f
   1dfcc:	cmp	r7, sl
   1dfd0:	str	r5, [r4, #-20]	; 0xffffffec
   1dfd4:	bne	1dfa0 <RichString_write@@Base+0xc4>
   1dfd8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dfdc:	ldr	r3, [r9]
   1dfe0:	ldr	sp, [fp, #-48]	; 0xffffffd0
   1dfe4:	cmp	r2, r3
   1dfe8:	bne	1e004 <RichString_write@@Base+0x128>
   1dfec:	sub	sp, fp, #32
   1dff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dff4:	mov	r1, r7
   1dff8:	mov	r0, r4
   1dffc:	bl	1da78 <ProcessList_scan@@Base+0xac>
   1e000:	b	1df80 <RichString_write@@Base+0xa4>
   1e004:	bl	15084 <__stack_chk_fail@plt>
   1e008:			; <UNDEFINED> instruction: 0x0003ccb8
   1e00c:	andeq	r0, r0, sp, asr r1

0001e010 <ScreenManager_new@@Base>:
   1e010:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e014:	mov	fp, r0
   1e018:	mov	r0, #40	; 0x28
   1e01c:	mov	r9, r3
   1e020:	ldrb	r5, [sp, #52]	; 0x34
   1e024:	mov	sl, r1
   1e028:	mov	r6, r2
   1e02c:	ldr	r8, [sp, #40]	; 0x28
   1e030:	ldr	r7, [sp, #44]	; 0x2c
   1e034:	bl	23fb0 <xMalloc@@Base>
   1e038:	mov	r1, r5
   1e03c:	mvn	r2, #0
   1e040:	mov	r4, r0
   1e044:	str	fp, [r0]
   1e048:	str	sl, [r0, #4]
   1e04c:	str	r6, [r0, #8]
   1e050:	str	r9, [r0, #12]
   1e054:	str	r8, [r0, #16]
   1e058:	ldr	r0, [pc, #44]	; 1e08c <ScreenManager_new@@Base+0x7c>
   1e05c:	bl	20ce4 <Vector_new@@Base>
   1e060:	ldr	r1, [sp, #48]	; 0x30
   1e064:	mov	r2, #0
   1e068:	mov	r3, #1
   1e06c:	str	r7, [r4, #28]
   1e070:	str	r1, [r4, #32]
   1e074:	strb	r5, [r4, #36]	; 0x24
   1e078:	str	r2, [r4, #24]
   1e07c:	strb	r3, [r4, #37]	; 0x25
   1e080:	str	r0, [r4, #20]
   1e084:	mov	r0, r4
   1e088:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e08c:	andeq	sp, r3, r4, lsl #25

0001e090 <ScreenManager_delete@@Base>:
   1e090:	push	{r4, lr}
   1e094:	mov	r4, r0
   1e098:	ldr	r0, [r0, #20]
   1e09c:	bl	20d40 <Vector_delete@@Base>
   1e0a0:	mov	r0, r4
   1e0a4:	pop	{r4, lr}
   1e0a8:	b	14fa0 <free@plt>

0001e0ac <ScreenManager_size@@Base>:
   1e0ac:	ldr	r0, [r0, #24]
   1e0b0:	bx	lr

0001e0b4 <ScreenManager_add@@Base>:
   1e0b4:	ldr	r3, [r0, #16]
   1e0b8:	push	{r4, r5, r6, lr}
   1e0bc:	cmp	r3, #1
   1e0c0:	mov	r4, r0
   1e0c4:	mov	r5, r1
   1e0c8:	bne	1e14c <ScreenManager_add@@Base+0x98>
   1e0cc:	ldr	r3, [r0, #24]
   1e0d0:	mov	r1, r2
   1e0d4:	cmp	r3, #0
   1e0d8:	subgt	r3, r3, #-1073741823	; 0xc0000001
   1e0dc:	ldrgt	r2, [r0, #20]
   1e0e0:	ldr	r0, [r0, #4]
   1e0e4:	movle	r6, #0
   1e0e8:	ldrgt	r2, [r2]
   1e0ec:	ldrgt	r3, [r2, r3, lsl #2]
   1e0f0:	ldrgt	r6, [r3, #4]
   1e0f4:	ldrgt	r3, [r3, #12]
   1e0f8:	addgt	r6, r6, r3
   1e0fc:	ldr	r3, [pc, #108]	; 1e170 <ScreenManager_add@@Base+0xbc>
   1e100:	addgt	r6, r6, #1
   1e104:	cmp	r1, #0
   1e108:	ldr	r2, [r3]
   1e10c:	ldr	r3, [r4, #12]
   1e110:	sub	r2, r2, r0
   1e114:	add	r2, r2, r3
   1e118:	ldrle	r3, [pc, #84]	; 1e174 <ScreenManager_add@@Base+0xc0>
   1e11c:	ldrle	r0, [r4]
   1e120:	ldrle	r1, [r3]
   1e124:	ldrle	r3, [r4, #8]
   1e128:	suble	r1, r1, r0
   1e12c:	addle	r1, r1, r3
   1e130:	suble	r1, r1, r6
   1e134:	mov	r0, r5
   1e138:	bl	1b088 <Panel_resize@@Base>
   1e13c:	mov	r1, r6
   1e140:	ldr	r2, [r4, #4]
   1e144:	mov	r0, r5
   1e148:	bl	1b078 <Panel_move@@Base>
   1e14c:	mov	r1, r5
   1e150:	ldr	r0, [r4, #20]
   1e154:	bl	21094 <Vector_add@@Base>
   1e158:	ldr	r3, [r4, #24]
   1e15c:	mov	r2, #1
   1e160:	add	r3, r3, r2
   1e164:	strb	r2, [r5, #50]	; 0x32
   1e168:	str	r3, [r4, #24]
   1e16c:	pop	{r4, r5, r6, pc}
   1e170:	andeq	lr, r3, r0, ror r7
   1e174:	andeq	lr, r3, ip, ror r7

0001e178 <ScreenManager_remove@@Base>:
   1e178:	push	{r4, lr}
   1e17c:	mov	r4, r0
   1e180:	ldr	r0, [r0, #20]
   1e184:	bl	20f68 <Vector_remove@@Base>
   1e188:	ldr	r3, [r4, #24]
   1e18c:	sub	r3, r3, #1
   1e190:	str	r3, [r4, #24]
   1e194:	pop	{r4, pc}

0001e198 <ScreenManager_resize@@Base>:
   1e198:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e19c:	sub	sp, sp, #20
   1e1a0:	ldr	ip, [r0, #16]
   1e1a4:	ldr	r9, [sp, #56]	; 0x38
   1e1a8:	cmp	ip, #1
   1e1ac:	stm	r0, {r1, r2, r3, r9}
   1e1b0:	beq	1e1bc <ScreenManager_resize@@Base+0x24>
   1e1b4:	add	sp, sp, #20
   1e1b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e1bc:	str	r3, [sp, #12]
   1e1c0:	ldr	r3, [r0, #24]
   1e1c4:	mov	r8, r2
   1e1c8:	cmp	r3, #1
   1e1cc:	str	r1, [sp, #8]
   1e1d0:	mov	r6, r0
   1e1d4:	str	r3, [sp, #4]
   1e1d8:	ble	1e298 <ScreenManager_resize@@Base+0x100>
   1e1dc:	mov	r7, #0
   1e1e0:	ldr	fp, [pc, #188]	; 1e2a4 <ScreenManager_resize@@Base+0x10c>
   1e1e4:	mov	r4, r7
   1e1e8:	sub	sl, r3, #1
   1e1ec:	ldr	r3, [r6, #20]
   1e1f0:	ldr	r2, [fp]
   1e1f4:	ldr	r3, [r3]
   1e1f8:	sub	r2, r2, r8
   1e1fc:	add	r2, r2, r9
   1e200:	ldr	r5, [r3, r7, lsl #2]
   1e204:	add	r7, r7, #1
   1e208:	mov	r0, r5
   1e20c:	ldr	r1, [r5, #12]
   1e210:	bl	1b088 <Panel_resize@@Base>
   1e214:	mov	r1, r4
   1e218:	mov	r2, r8
   1e21c:	mov	r0, r5
   1e220:	bl	1b078 <Panel_move@@Base>
   1e224:	ldr	r4, [r5, #4]
   1e228:	ldr	r3, [r5, #12]
   1e22c:	cmp	r7, sl
   1e230:	add	r4, r4, r3
   1e234:	add	r4, r4, #1
   1e238:	bne	1e1ec <ScreenManager_resize@@Base+0x54>
   1e23c:	ldr	r1, [r6, #20]
   1e240:	ldr	r3, [sp, #4]
   1e244:	ldr	r2, [pc, #92]	; 1e2a8 <ScreenManager_resize@@Base+0x110>
   1e248:	ldr	r0, [r1]
   1e24c:	sub	r3, r3, #-1073741823	; 0xc0000001
   1e250:	ldr	r1, [r2]
   1e254:	ldr	r5, [r0, r3, lsl #2]
   1e258:	ldr	r3, [sp, #8]
   1e25c:	ldr	r2, [fp]
   1e260:	sub	r1, r1, r3
   1e264:	ldr	r3, [sp, #12]
   1e268:	sub	r2, r2, r8
   1e26c:	add	r1, r1, r3
   1e270:	add	r2, r2, r9
   1e274:	sub	r1, r1, r4
   1e278:	mov	r0, r5
   1e27c:	bl	1b088 <Panel_resize@@Base>
   1e280:	mov	r2, r8
   1e284:	mov	r1, r4
   1e288:	mov	r0, r5
   1e28c:	add	sp, sp, #20
   1e290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e294:	b	1b078 <Panel_move@@Base>
   1e298:	ldr	fp, [pc, #4]	; 1e2a4 <ScreenManager_resize@@Base+0x10c>
   1e29c:	mov	r4, #0
   1e2a0:	b	1e23c <ScreenManager_resize@@Base+0xa4>
   1e2a4:	andeq	lr, r3, r0, ror r7
   1e2a8:	andeq	lr, r3, ip, ror r7

0001e2ac <ScreenManager_run@@Base>:
   1e2ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2b0:	mov	r4, r0
   1e2b4:	ldr	r0, [r0, #20]
   1e2b8:	vpush	{d8-d13}
   1e2bc:	ldr	r3, [pc, #1004]	; 1e6b0 <ScreenManager_run@@Base+0x404>
   1e2c0:	ldr	r0, [r0]
   1e2c4:	vldr	d9, [pc, #972]	; 1e698 <ScreenManager_run@@Base+0x3ec>
   1e2c8:	vldr	d11, [pc, #976]	; 1e6a0 <ScreenManager_run@@Base+0x3f4>
   1e2cc:	ldr	r9, [r0]
   1e2d0:	vldr	d10, [pc, #976]	; 1e6a8 <ScreenManager_run@@Base+0x3fc>
   1e2d4:	sub	sp, sp, #60	; 0x3c
   1e2d8:	mov	r6, #0
   1e2dc:	ldr	r3, [r3]
   1e2e0:	mov	r8, r6
   1e2e4:	mvn	r7, #0
   1e2e8:	str	r1, [sp, #24]
   1e2ec:	ldr	r0, [r9, #52]	; 0x34
   1e2f0:	mov	r1, #0
   1e2f4:	mov	sl, #1
   1e2f8:	str	r2, [sp, #28]
   1e2fc:	str	r3, [sp, #52]	; 0x34
   1e300:	bl	188f8 <FunctionBar_draw@@Base>
   1e304:	str	r6, [sp, #12]
   1e308:	str	r6, [sp, #20]
   1e30c:	str	sl, [sp, #16]
   1e310:	ldr	r3, [r4, #28]
   1e314:	cmp	r3, #0
   1e318:	beq	1e558 <ScreenManager_run@@Base+0x2ac>
   1e31c:	mov	r1, #0
   1e320:	add	r0, sp, #32
   1e324:	ldr	r5, [r3, #8]
   1e328:	bl	1515c <gettimeofday@plt>
   1e32c:	vldr	s15, [sp, #36]	; 0x24
   1e330:	ldr	r3, [sp, #12]
   1e334:	cmp	r3, #0
   1e338:	vcvt.f64.s32	d6, s15
   1e33c:	vldr	s15, [sp, #32]
   1e340:	ldr	r3, [r4, #32]
   1e344:	vcvt.f64.s32	d7, s15
   1e348:	vldr	s24, [r3, #40]	; 0x28
   1e34c:	vdiv.f64	d8, d6, d10
   1e350:	vcvt.f64.s32	d12, s24
   1e354:	vmla.f64	d8, d7, d11
   1e358:	vsub.f64	d13, d8, d9
   1e35c:	beq	1e658 <ScreenManager_run@@Base+0x3ac>
   1e360:	mov	r0, r5
   1e364:	bl	1d9cc <ProcessList_scan@@Base>
   1e368:	cmp	r6, #0
   1e36c:	beq	1e494 <ScreenManager_run@@Base+0x1e8>
   1e370:	ldr	r3, [r4, #32]
   1e374:	ldrb	r3, [r3, #58]	; 0x3a
   1e378:	cmp	r3, #0
   1e37c:	bne	1e494 <ScreenManager_run@@Base+0x1e8>
   1e380:	vcmpe.f64	d13, d12
   1e384:	mov	r3, #0
   1e388:	mov	r0, r5
   1e38c:	str	r3, [sp, #12]
   1e390:	vmrs	APSR_nzcv, fpscr
   1e394:	vmov.f64	d9, d8
   1e398:	movgt	r3, #1
   1e39c:	str	r3, [sp, #16]
   1e3a0:	bl	1d858 <ProcessList_rebuildPanel@@Base>
   1e3a4:	ldr	r0, [r4, #28]
   1e3a8:	bl	190e4 <Header_draw@@Base>
   1e3ac:	ldr	sl, [r4, #24]
   1e3b0:	cmp	sl, #0
   1e3b4:	ble	1e440 <ScreenManager_run@@Base+0x194>
   1e3b8:	mov	r5, #0
   1e3bc:	b	1e3cc <ScreenManager_run@@Base+0x120>
   1e3c0:	add	r5, r5, #1
   1e3c4:	cmp	sl, r5
   1e3c8:	beq	1e440 <ScreenManager_run@@Base+0x194>
   1e3cc:	ldr	r3, [r4, #20]
   1e3d0:	sub	r1, r5, r8
   1e3d4:	clz	r1, r1
   1e3d8:	ldr	r3, [r3]
   1e3dc:	lsr	r1, r1, #5
   1e3e0:	ldr	fp, [r3, r5, lsl #2]
   1e3e4:	mov	r0, fp
   1e3e8:	bl	1b210 <Panel_draw@@Base>
   1e3ec:	ldr	r3, [r4, #16]
   1e3f0:	cmp	r3, #1
   1e3f4:	bne	1e3c0 <ScreenManager_run@@Base+0x114>
   1e3f8:	ldr	r3, [fp, #12]
   1e3fc:	ldr	r2, [fp, #4]
   1e400:	ldr	r1, [fp, #8]
   1e404:	add	r2, r2, r3
   1e408:	ldr	r3, [pc, #676]	; 1e6b4 <ScreenManager_run@@Base+0x408>
   1e40c:	ldr	r0, [r3]
   1e410:	bl	15360 <wmove@plt>
   1e414:	cmn	r0, #1
   1e418:	beq	1e3c0 <ScreenManager_run@@Base+0x114>
   1e41c:	ldr	r3, [pc, #656]	; 1e6b4 <ScreenManager_run@@Base+0x408>
   1e420:	ldr	r2, [fp, #16]
   1e424:	mov	r1, #32
   1e428:	add	r2, r2, #1
   1e42c:	ldr	r0, [r3]
   1e430:	add	r5, r5, #1
   1e434:	bl	1545c <wvline@plt>
   1e438:	cmp	sl, r5
   1e43c:	bne	1e3cc <ScreenManager_run@@Base+0x120>
   1e440:	mov	r0, #25
   1e444:	bl	15288 <set_escdelay@plt>
   1e448:	ldr	r3, [pc, #612]	; 1e6b4 <ScreenManager_run@@Base+0x408>
   1e44c:	ldr	r0, [r3]
   1e450:	bl	1536c <wgetch@plt>
   1e454:	ldr	r3, [pc, #604]	; 1e6b8 <ScreenManager_run@@Base+0x40c>
   1e458:	cmp	r0, r3
   1e45c:	mov	r5, r0
   1e460:	beq	1e5b0 <ScreenManager_run@@Base+0x304>
   1e464:	cmn	r5, #1
   1e468:	beq	1e5cc <ScreenManager_run@@Base+0x320>
   1e46c:	sub	r3, r5, #308	; 0x134
   1e470:	sub	r3, r3, #1
   1e474:	cmp	r3, #4
   1e478:	ldrls	pc, [pc, r3, lsl #2]
   1e47c:	b	1e844 <ScreenManager_run@@Base+0x598>
   1e480:	andeq	lr, r1, r4, lsr #9
   1e484:	andeq	lr, r1, r4, asr #16
   1e488:	andeq	lr, r1, ip, ror #10
   1e48c:	andeq	lr, r1, r4, ror #10
   1e490:	andeq	lr, r1, r4, ror r5
   1e494:	mov	r0, r5
   1e498:	bl	1d5fc <ProcessList_sort@@Base>
   1e49c:	mov	r6, #1
   1e4a0:	b	1e380 <ScreenManager_run@@Base+0xd4>
   1e4a4:	mov	r7, #260	; 0x104
   1e4a8:	ldr	r3, [r9]
   1e4ac:	ldr	r3, [r3, #16]
   1e4b0:	cmp	r3, #0
   1e4b4:	beq	1e4fc <ScreenManager_run@@Base+0x250>
   1e4b8:	mov	r1, r7
   1e4bc:	mov	r0, r9
   1e4c0:	blx	r3
   1e4c4:	tst	r0, #32
   1e4c8:	and	r3, r0, #16
   1e4cc:	lsrne	r7, r0, #16
   1e4d0:	tst	r0, #8
   1e4d4:	movne	r6, #0
   1e4d8:	cmp	r3, #0
   1e4dc:	ldr	r3, [sp, #12]
   1e4e0:	movne	r6, #0
   1e4e4:	movne	r3, #1
   1e4e8:	tst	r0, #1
   1e4ec:	str	r3, [sp, #12]
   1e4f0:	bne	1e650 <ScreenManager_run@@Base+0x3a4>
   1e4f4:	tst	r0, #4
   1e4f8:	bne	1e5f8 <ScreenManager_run@@Base+0x34c>
   1e4fc:	cmp	r7, #113	; 0x71
   1e500:	beq	1e5f8 <ScreenManager_run@@Base+0x34c>
   1e504:	ble	1e57c <ScreenManager_run@@Base+0x2d0>
   1e508:	ldr	r3, [pc, #428]	; 1e6bc <ScreenManager_run@@Base+0x410>
   1e50c:	cmp	r7, r3
   1e510:	beq	1e758 <ScreenManager_run@@Base+0x4ac>
   1e514:	ble	1e7cc <ScreenManager_run@@Base+0x520>
   1e518:	ldr	r3, [pc, #416]	; 1e6c0 <ScreenManager_run@@Base+0x414>
   1e51c:	cmp	r7, r3
   1e520:	beq	1e5f8 <ScreenManager_run@@Base+0x34c>
   1e524:	add	r3, r3, #136	; 0x88
   1e528:	cmp	r7, r3
   1e52c:	bne	1e598 <ScreenManager_run@@Base+0x2ec>
   1e530:	ldr	r0, [r4, #12]
   1e534:	ldrd	r2, [r4, #4]
   1e538:	ldr	r1, [r4]
   1e53c:	str	r0, [sp]
   1e540:	mov	r0, r4
   1e544:	bl	1e198 <ScreenManager_resize@@Base>
   1e548:	ldr	r3, [r4, #28]
   1e54c:	mov	sl, #1
   1e550:	cmp	r3, #0
   1e554:	bne	1e31c <ScreenManager_run@@Base+0x70>
   1e558:	cmp	sl, #0
   1e55c:	beq	1e440 <ScreenManager_run@@Base+0x194>
   1e560:	b	1e3ac <ScreenManager_run@@Base+0x100>
   1e564:	ldr	r7, [pc, #344]	; 1e6c4 <ScreenManager_run@@Base+0x418>
   1e568:	b	1e4a8 <ScreenManager_run@@Base+0x1fc>
   1e56c:	ldr	r7, [pc, #340]	; 1e6c8 <ScreenManager_run@@Base+0x41c>
   1e570:	b	1e4a8 <ScreenManager_run@@Base+0x1fc>
   1e574:	ldr	r7, [pc, #320]	; 1e6bc <ScreenManager_run@@Base+0x410>
   1e578:	b	1e4a8 <ScreenManager_run@@Base+0x1fc>
   1e57c:	cmp	r7, #6
   1e580:	beq	1e758 <ScreenManager_run@@Base+0x4ac>
   1e584:	ble	1e630 <ScreenManager_run@@Base+0x384>
   1e588:	cmp	r7, #9
   1e58c:	beq	1e758 <ScreenManager_run@@Base+0x4ac>
   1e590:	cmp	r7, #27
   1e594:	beq	1e5f8 <ScreenManager_run@@Base+0x34c>
   1e598:	mov	r1, r7
   1e59c:	mov	r0, r9
   1e5a0:	bl	1b88c <Panel_onKey@@Base>
   1e5a4:	mov	r6, #5
   1e5a8:	mov	sl, #1
   1e5ac:	b	1e310 <ScreenManager_run@@Base+0x64>
   1e5b0:	add	r0, sp, #32
   1e5b4:	bl	15054 <getmouse@plt>
   1e5b8:	subs	sl, r0, #0
   1e5bc:	bne	1e5cc <ScreenManager_run@@Base+0x320>
   1e5c0:	ldr	r3, [sp, #48]	; 0x30
   1e5c4:	tst	r3, #1
   1e5c8:	bne	1e6d4 <ScreenManager_run@@Base+0x428>
   1e5cc:	cmn	r7, #1
   1e5d0:	sub	r6, r6, #1
   1e5d4:	bne	1e684 <ScreenManager_run@@Base+0x3d8>
   1e5d8:	ldr	sl, [sp, #16]
   1e5dc:	cmp	sl, #0
   1e5e0:	bne	1e7bc <ScreenManager_run@@Base+0x510>
   1e5e4:	ldr	r3, [sp, #20]
   1e5e8:	add	r3, r3, #1
   1e5ec:	cmp	r3, #100	; 0x64
   1e5f0:	str	r3, [sp, #20]
   1e5f4:	bne	1e310 <ScreenManager_run@@Base+0x64>
   1e5f8:	ldr	r3, [sp, #24]
   1e5fc:	ldr	r2, [sp, #52]	; 0x34
   1e600:	cmp	r3, #0
   1e604:	strne	r9, [r3]
   1e608:	ldr	r3, [sp, #28]
   1e60c:	cmp	r3, #0
   1e610:	strne	r7, [r3]
   1e614:	ldr	r3, [pc, #148]	; 1e6b0 <ScreenManager_run@@Base+0x404>
   1e618:	ldr	r3, [r3]
   1e61c:	cmp	r2, r3
   1e620:	bne	1e904 <ScreenManager_run@@Base+0x658>
   1e624:	add	sp, sp, #60	; 0x3c
   1e628:	vpop	{d8-d13}
   1e62c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e630:	cmp	r7, #2
   1e634:	bne	1e598 <ScreenManager_run@@Base+0x2ec>
   1e638:	ldr	r3, [r4, #24]
   1e63c:	cmp	r3, #1
   1e640:	ble	1e598 <ScreenManager_run@@Base+0x2ec>
   1e644:	ldrb	sl, [r4, #37]	; 0x25
   1e648:	cmp	sl, #0
   1e64c:	bne	1e7e0 <ScreenManager_run@@Base+0x534>
   1e650:	mov	sl, #1
   1e654:	b	1e310 <ScreenManager_run@@Base+0x64>
   1e658:	vcmpe.f64	d13, d12
   1e65c:	vmrs	APSR_nzcv, fpscr
   1e660:	bgt	1e360 <ScreenManager_run@@Base+0xb4>
   1e664:	vcmpe.f64	d8, d9
   1e668:	vmrs	APSR_nzcv, fpscr
   1e66c:	bmi	1e360 <ScreenManager_run@@Base+0xb4>
   1e670:	cmp	sl, #0
   1e674:	bne	1e7d8 <ScreenManager_run@@Base+0x52c>
   1e678:	ldr	r3, [sp, #12]
   1e67c:	str	r3, [sp, #16]
   1e680:	b	1e440 <ScreenManager_run@@Base+0x194>
   1e684:	mov	r3, #0
   1e688:	str	r3, [sp, #20]
   1e68c:	mov	sl, r3
   1e690:	mvn	r7, #0
   1e694:	b	1e310 <ScreenManager_run@@Base+0x64>
	...
   1e6a4:	eormi	r0, r4, r0
   1e6a8:	andeq	r0, r0, r0
   1e6ac:	rscsmi	r6, r8, r0, lsl #20
   1e6b0:			; <UNDEFINED> instruction: 0x0003ccb8
   1e6b4:	andeq	lr, r3, r8, lsl #15
   1e6b8:	muleq	r0, r9, r1
   1e6bc:	andeq	r0, r0, r5, lsl #2
   1e6c0:	andeq	r0, r0, r2, lsl r1
   1e6c4:	andeq	r0, r0, r3, lsl #2
   1e6c8:	andeq	r0, r0, r2, lsl #2
   1e6cc:	andeq	lr, r3, r0, ror r7
   1e6d0:	andeq	r0, r0, lr, lsl r1
   1e6d4:	ldr	r3, [pc, #-16]	; 1e6cc <ScreenManager_run@@Base+0x420>
   1e6d8:	ldr	lr, [sp, #40]	; 0x28
   1e6dc:	ldr	r3, [r3]
   1e6e0:	sub	r3, r3, #1
   1e6e4:	cmp	lr, r3
   1e6e8:	beq	1e870 <ScreenManager_run@@Base+0x5c4>
   1e6ec:	ldr	ip, [r4, #24]
   1e6f0:	cmp	ip, #0
   1e6f4:	ble	1e5cc <ScreenManager_run@@Base+0x320>
   1e6f8:	ldr	r3, [r4, #20]
   1e6fc:	ldr	r0, [sp, #36]	; 0x24
   1e700:	ldr	r2, [r3]
   1e704:	sub	r2, r2, #4
   1e708:	ldr	fp, [r2, #4]!
   1e70c:	ldr	r3, [fp, #4]
   1e710:	cmp	r0, r3
   1e714:	blt	1e748 <ScreenManager_run@@Base+0x49c>
   1e718:	ldr	r1, [fp, #12]
   1e71c:	add	r1, r3, r1
   1e720:	cmp	r0, r1
   1e724:	bgt	1e748 <ScreenManager_run@@Base+0x49c>
   1e728:	ldr	r1, [fp, #8]
   1e72c:	cmp	lr, r1
   1e730:	beq	1e884 <ScreenManager_run@@Base+0x5d8>
   1e734:	ble	1e748 <ScreenManager_run@@Base+0x49c>
   1e738:	ldr	r3, [fp, #16]
   1e73c:	add	r1, r1, r3
   1e740:	cmp	lr, r1
   1e744:	ble	1e894 <ScreenManager_run@@Base+0x5e8>
   1e748:	add	sl, sl, #1
   1e74c:	cmp	sl, ip
   1e750:	bne	1e708 <ScreenManager_run@@Base+0x45c>
   1e754:	b	1e5cc <ScreenManager_run@@Base+0x320>
   1e758:	ldr	r3, [r4, #24]
   1e75c:	cmp	r3, #1
   1e760:	ble	1e598 <ScreenManager_run@@Base+0x2ec>
   1e764:	ldrb	sl, [r4, #37]	; 0x25
   1e768:	cmp	sl, #0
   1e76c:	beq	1e650 <ScreenManager_run@@Base+0x3a4>
   1e770:	sub	r3, r3, #1
   1e774:	b	1e788 <ScreenManager_run@@Base+0x4dc>
   1e778:	ldr	r3, [r4, #24]
   1e77c:	sub	r3, r3, #1
   1e780:	cmp	r3, r8
   1e784:	ble	1e310 <ScreenManager_run@@Base+0x64>
   1e788:	cmp	r3, r8
   1e78c:	ldr	r3, [r4, #20]
   1e790:	addgt	r8, r8, #1
   1e794:	mov	r1, #0
   1e798:	ldr	r3, [r3]
   1e79c:	ldr	r9, [r3, r8, lsl #2]
   1e7a0:	ldr	r0, [r9, #52]	; 0x34
   1e7a4:	bl	188f8 <FunctionBar_draw@@Base>
   1e7a8:	mov	r0, r9
   1e7ac:	bl	1b1d4 <Panel_size@@Base>
   1e7b0:	cmp	r0, #0
   1e7b4:	beq	1e778 <ScreenManager_run@@Base+0x4cc>
   1e7b8:	b	1e310 <ScreenManager_run@@Base+0x64>
   1e7bc:	mov	r3, #0
   1e7c0:	str	r3, [sp, #20]
   1e7c4:	mov	sl, r3
   1e7c8:	b	1e310 <ScreenManager_run@@Base+0x64>
   1e7cc:	cmp	r7, #260	; 0x104
   1e7d0:	beq	1e638 <ScreenManager_run@@Base+0x38c>
   1e7d4:	b	1e598 <ScreenManager_run@@Base+0x2ec>
   1e7d8:	vmov.f64	d8, d9
   1e7dc:	b	1e380 <ScreenManager_run@@Base+0xd4>
   1e7e0:	cmp	r8, #0
   1e7e4:	ble	1e84c <ScreenManager_run@@Base+0x5a0>
   1e7e8:	sub	r5, r8, #1
   1e7ec:	lsl	fp, r5, #2
   1e7f0:	b	1e7fc <ScreenManager_run@@Base+0x550>
   1e7f4:	sub	fp, fp, #4
   1e7f8:	sub	r5, r5, #1
   1e7fc:	ldr	r3, [r4, #20]
   1e800:	mov	r1, #0
   1e804:	mov	r8, r5
   1e808:	ldr	r3, [r3]
   1e80c:	ldr	r9, [r3, fp]
   1e810:	ldr	r0, [r9, #52]	; 0x34
   1e814:	bl	188f8 <FunctionBar_draw@@Base>
   1e818:	mov	r0, r9
   1e81c:	bl	1b1d4 <Panel_size@@Base>
   1e820:	cmp	r5, #0
   1e824:	movle	r3, #0
   1e828:	movgt	r3, #1
   1e82c:	cmp	r0, #0
   1e830:	moveq	r0, r3
   1e834:	movne	r0, #0
   1e838:	cmp	r0, #0
   1e83c:	bne	1e7f4 <ScreenManager_run@@Base+0x548>
   1e840:	b	1e310 <ScreenManager_run@@Base+0x64>
   1e844:	mov	r7, r5
   1e848:	b	1e4a8 <ScreenManager_run@@Base+0x1fc>
   1e84c:	ldr	r3, [r4, #20]
   1e850:	mov	r1, #0
   1e854:	ldr	r3, [r3]
   1e858:	ldr	r9, [r3, r8, lsl #2]
   1e85c:	ldr	r0, [r9, #52]	; 0x34
   1e860:	bl	188f8 <FunctionBar_draw@@Base>
   1e864:	mov	r0, r9
   1e868:	bl	1b1d4 <Panel_size@@Base>
   1e86c:	b	1e310 <ScreenManager_run@@Base+0x64>
   1e870:	ldr	r1, [sp, #36]	; 0x24
   1e874:	ldr	r0, [r9, #52]	; 0x34
   1e878:	bl	1890c <FunctionBar_synthesizeEvent@@Base>
   1e87c:	mov	r5, r0
   1e880:	b	1e464 <ScreenManager_run@@Base+0x1b8>
   1e884:	sub	r0, r0, #9984	; 0x2700
   1e888:	sub	r0, r0, #16
   1e88c:	sub	r5, r0, r3
   1e890:	b	1e464 <ScreenManager_run@@Base+0x1b8>
   1e894:	cmp	fp, r9
   1e898:	beq	1e8a8 <ScreenManager_run@@Base+0x5fc>
   1e89c:	ldrb	r3, [r4, #37]	; 0x25
   1e8a0:	cmp	r3, #0
   1e8a4:	beq	1e844 <ScreenManager_run@@Base+0x598>
   1e8a8:	mov	r1, #0
   1e8ac:	ldr	r0, [fp, #52]	; 0x34
   1e8b0:	bl	188f8 <FunctionBar_draw@@Base>
   1e8b4:	mov	r0, fp
   1e8b8:	bl	1b160 <Panel_getSelected@@Base>
   1e8bc:	ldr	r2, [fp, #8]
   1e8c0:	ldr	r1, [sp, #40]	; 0x28
   1e8c4:	ldr	r3, [fp, #44]	; 0x2c
   1e8c8:	sub	r1, r1, r2
   1e8cc:	add	r1, r1, r3
   1e8d0:	sub	r1, r1, #1
   1e8d4:	mov	r8, sl
   1e8d8:	mov	r9, fp
   1e8dc:	mov	r7, r0
   1e8e0:	mov	r0, fp
   1e8e4:	bl	1b1e0 <Panel_setSelected@@Base>
   1e8e8:	mov	r0, fp
   1e8ec:	bl	1b160 <Panel_getSelected@@Base>
   1e8f0:	ldr	r3, [pc, #-552]	; 1e6d0 <ScreenManager_run@@Base+0x424>
   1e8f4:	cmp	r7, r0
   1e8f8:	movne	r7, r5
   1e8fc:	moveq	r7, r3
   1e900:	b	1e4a8 <ScreenManager_run@@Base+0x1fc>
   1e904:	bl	15084 <__stack_chk_fail@plt>
   1e908:	add	r2, r2, r2, lsl #1
   1e90c:	push	{r4, r5, r6, r7, r8, lr}
   1e910:	add	r5, r0, r2, lsl #2
   1e914:	sub	sp, sp, #8
   1e918:	ldr	r3, [r5, #4]
   1e91c:	mov	r6, r1
   1e920:	cmp	r3, #0
   1e924:	ble	1e968 <ScreenManager_run@@Base+0x6bc>
   1e928:	ldr	r3, [pc, #80]	; 1e980 <ScreenManager_run@@Base+0x6d4>
   1e92c:	ldr	r8, [pc, #80]	; 1e984 <ScreenManager_run@@Base+0x6d8>
   1e930:	ldr	r7, [pc, #80]	; 1e988 <ScreenManager_run@@Base+0x6dc>
   1e934:	mov	r4, #0
   1e938:	ldr	r1, [r5, #8]
   1e93c:	mov	r2, r8
   1e940:	ldr	r0, [r1, r4, lsl #2]
   1e944:	mov	r1, #1
   1e948:	str	r0, [sp]
   1e94c:	mov	r0, r6
   1e950:	bl	153c0 <__fprintf_chk@plt>
   1e954:	ldr	r3, [r5, #4]
   1e958:	add	r4, r4, #1
   1e95c:	cmp	r3, r4
   1e960:	mov	r3, r7
   1e964:	bgt	1e938 <ScreenManager_run@@Base+0x68c>
   1e968:	mov	r0, r6
   1e96c:	ldr	r2, [pc, #24]	; 1e98c <ScreenManager_run@@Base+0x6e0>
   1e970:	mov	r1, #1
   1e974:	add	sp, sp, #8
   1e978:	pop	{r4, r5, r6, r7, r8, lr}
   1e97c:	b	153c0 <__fprintf_chk@plt>
   1e980:	andeq	r9, r2, r0, lsl #20
   1e984:	andeq	sl, r2, r4, asr #3
   1e988:	ldrdeq	sl, [r2], -r0
   1e98c:	andeq	r9, r2, r4, asr sl
   1e990:	add	r2, r2, r2, lsl #1
   1e994:	push	{r4, r5, r6, r7, r8, r9, lr}
   1e998:	add	r5, r0, r2, lsl #2
   1e99c:	sub	sp, sp, #12
   1e9a0:	ldr	r3, [r5, #4]
   1e9a4:	mov	r6, r1
   1e9a8:	cmp	r3, #0
   1e9ac:	ble	1e9f4 <ScreenManager_run@@Base+0x748>
   1e9b0:	ldr	r3, [pc, #84]	; 1ea0c <ScreenManager_run@@Base+0x760>
   1e9b4:	ldr	r9, [pc, #84]	; 1ea10 <ScreenManager_run@@Base+0x764>
   1e9b8:	ldr	r8, [pc, #84]	; 1ea14 <ScreenManager_run@@Base+0x768>
   1e9bc:	mov	r4, #0
   1e9c0:	mov	r7, r5
   1e9c4:	ldr	r1, [r7, #12]
   1e9c8:	mov	r2, r9
   1e9cc:	ldr	r0, [r1, r4, lsl #2]
   1e9d0:	mov	r1, #1
   1e9d4:	str	r0, [sp]
   1e9d8:	mov	r0, r6
   1e9dc:	bl	153c0 <__fprintf_chk@plt>
   1e9e0:	ldr	r3, [r5, #4]
   1e9e4:	add	r4, r4, #1
   1e9e8:	cmp	r3, r4
   1e9ec:	mov	r3, r8
   1e9f0:	bgt	1e9c4 <ScreenManager_run@@Base+0x718>
   1e9f4:	mov	r0, r6
   1e9f8:	ldr	r2, [pc, #24]	; 1ea18 <ScreenManager_run@@Base+0x76c>
   1e9fc:	mov	r1, #1
   1ea00:	add	sp, sp, #12
   1ea04:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1ea08:	b	153c0 <__fprintf_chk@plt>
   1ea0c:	andeq	r9, r2, r0, lsl #20
   1ea10:	andeq	sl, r2, ip, asr #3
   1ea14:	ldrdeq	sl, [r2], -r0
   1ea18:	andeq	r9, r2, r4, asr sl
   1ea1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea20:	sub	sp, sp, #28
   1ea24:	ldr	r6, [pc, #472]	; 1ec04 <ScreenManager_run@@Base+0x958>
   1ea28:	ldr	r1, [r0, #44]	; 0x2c
   1ea2c:	mov	r3, #3
   1ea30:	cmp	r1, #4
   1ea34:	ldr	r2, [r6]
   1ea38:	mov	r1, #4
   1ea3c:	mov	r4, r0
   1ea40:	str	r3, [sp, #16]
   1ea44:	mov	r0, r1
   1ea48:	movgt	r3, #4
   1ea4c:	strgt	r3, [sp, #16]
   1ea50:	str	r2, [sp, #20]
   1ea54:	bl	23fd8 <xCalloc@@Base>
   1ea58:	mov	r1, #4
   1ea5c:	str	r0, [r4, #8]
   1ea60:	mov	r0, #3
   1ea64:	bl	23fd8 <xCalloc@@Base>
   1ea68:	ldr	r5, [sp, #16]
   1ea6c:	mov	r3, #3
   1ea70:	str	r3, [r4, #4]
   1ea74:	mov	r1, #4
   1ea78:	str	r0, [r4, #12]
   1ea7c:	add	r0, r5, #1
   1ea80:	bl	23fd8 <xCalloc@@Base>
   1ea84:	mov	r1, #4
   1ea88:	str	r0, [r4, #20]
   1ea8c:	mov	r0, r5
   1ea90:	bl	23fd8 <xCalloc@@Base>
   1ea94:	ldr	r3, [r4, #44]	; 0x2c
   1ea98:	str	r5, [r4, #16]
   1ea9c:	cmp	r3, #8
   1eaa0:	ldr	r5, [r4, #8]
   1eaa4:	str	r0, [r4, #24]
   1eaa8:	bgt	1ebc0 <ScreenManager_run@@Base+0x914>
   1eaac:	cmp	r3, #4
   1eab0:	bgt	1eb80 <ScreenManager_run@@Base+0x8d4>
   1eab4:	ldr	r0, [pc, #332]	; 1ec08 <ScreenManager_run@@Base+0x95c>
   1eab8:	bl	24034 <xStrdup@@Base>
   1eabc:	ldr	r3, [r4, #12]
   1eac0:	mov	r8, #8
   1eac4:	mov	r9, #4
   1eac8:	mov	sl, #0
   1eacc:	mov	r2, #1
   1ead0:	str	r0, [r5]
   1ead4:	str	r2, [r3]
   1ead8:	ldr	r2, [r4, #8]
   1eadc:	ldr	r0, [pc, #296]	; 1ec0c <ScreenManager_run@@Base+0x960>
   1eae0:	str	r2, [sp, #4]
   1eae4:	bl	24034 <xStrdup@@Base>
   1eae8:	ldr	r3, [r4, #12]
   1eaec:	ldr	r2, [sp, #4]
   1eaf0:	mov	r7, #1
   1eaf4:	ldr	fp, [r4, #8]
   1eaf8:	mov	r5, #2
   1eafc:	str	r0, [r2, #4]
   1eb00:	str	r7, [r3, #4]
   1eb04:	ldr	r0, [pc, #260]	; 1ec10 <ScreenManager_run@@Base+0x964>
   1eb08:	bl	24034 <xStrdup@@Base>
   1eb0c:	ldr	r3, [r4, #12]
   1eb10:	ldr	r2, [r4, #20]
   1eb14:	str	r2, [sp, #4]
   1eb18:	str	r0, [fp, #8]
   1eb1c:	str	r7, [r3, #8]
   1eb20:	ldr	r0, [pc, #236]	; 1ec14 <ScreenManager_run@@Base+0x968>
   1eb24:	bl	24034 <xStrdup@@Base>
   1eb28:	ldr	r3, [r4, #24]
   1eb2c:	ldr	r2, [sp, #4]
   1eb30:	ldr	fp, [r4, #20]
   1eb34:	str	r0, [r2, sl]
   1eb38:	str	r5, [r3, sl]
   1eb3c:	ldr	r0, [pc, #212]	; 1ec18 <ScreenManager_run@@Base+0x96c>
   1eb40:	bl	24034 <xStrdup@@Base>
   1eb44:	ldr	r3, [r4, #24]
   1eb48:	ldr	r7, [r4, #20]
   1eb4c:	str	r0, [fp, r9]
   1eb50:	str	r5, [r3, r9]
   1eb54:	ldr	r0, [pc, #192]	; 1ec1c <ScreenManager_run@@Base+0x970>
   1eb58:	bl	24034 <xStrdup@@Base>
   1eb5c:	ldr	r1, [r4, #24]
   1eb60:	ldr	r2, [sp, #20]
   1eb64:	str	r0, [r7, r8]
   1eb68:	ldr	r3, [r6]
   1eb6c:	str	r5, [r1, r8]
   1eb70:	cmp	r2, r3
   1eb74:	bne	1ec00 <ScreenManager_run@@Base+0x954>
   1eb78:	add	sp, sp, #28
   1eb7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eb80:	ldr	r0, [pc, #152]	; 1ec20 <ScreenManager_run@@Base+0x974>
   1eb84:	bl	24034 <xStrdup@@Base>
   1eb88:	ldr	r3, [r4, #12]
   1eb8c:	mov	r7, #1
   1eb90:	ldr	fp, [r4, #20]
   1eb94:	mov	r8, #12
   1eb98:	mov	r9, #8
   1eb9c:	mov	sl, #4
   1eba0:	str	r0, [r5]
   1eba4:	str	r7, [r3]
   1eba8:	ldr	r0, [pc, #116]	; 1ec24 <ScreenManager_run@@Base+0x978>
   1ebac:	bl	24034 <xStrdup@@Base>
   1ebb0:	ldr	r3, [r4, #24]
   1ebb4:	str	r0, [fp]
   1ebb8:	str	r7, [r3]
   1ebbc:	b	1ead8 <ScreenManager_run@@Base+0x82c>
   1ebc0:	ldr	r0, [pc, #96]	; 1ec28 <ScreenManager_run@@Base+0x97c>
   1ebc4:	bl	24034 <xStrdup@@Base>
   1ebc8:	ldr	r3, [r4, #12]
   1ebcc:	mov	r7, #1
   1ebd0:	ldr	fp, [r4, #20]
   1ebd4:	mov	r8, #12
   1ebd8:	mov	r9, #8
   1ebdc:	mov	sl, #4
   1ebe0:	str	r0, [r5]
   1ebe4:	str	r7, [r3]
   1ebe8:	ldr	r0, [pc, #60]	; 1ec2c <ScreenManager_run@@Base+0x980>
   1ebec:	bl	24034 <xStrdup@@Base>
   1ebf0:	ldr	r3, [r4, #24]
   1ebf4:	str	r0, [fp]
   1ebf8:	str	r7, [r3]
   1ebfc:	b	1ead8 <ScreenManager_run@@Base+0x82c>
   1ec00:	bl	15084 <__stack_chk_fail@plt>
   1ec04:			; <UNDEFINED> instruction: 0x0003ccb8
   1ec08:	andeq	r9, r2, r4, asr #5
   1ec0c:			; <UNDEFINED> instruction: 0x00029bb0
   1ec10:	ldrdeq	sl, [r2], -r4
   1ec14:	ldrdeq	sl, [r2], -ip
   1ec18:	andeq	r9, r2, r8, lsr fp
   1ec1c:	andeq	sl, r2, r4, ror #3
   1ec20:	andeq	r9, r2, r4, asr #4
   1ec24:	andeq	r9, r2, ip, lsl #4
   1ec28:	andeq	r9, r2, r0, asr #3
   1ec2c:	andeq	r9, r2, r4, ror r1
   1ec30:	ldr	r3, [pc, #1668]	; 1f2bc <ScreenManager_run@@Base+0x1010>
   1ec34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec38:	sub	sp, sp, #36	; 0x24
   1ec3c:	ldr	r3, [r3]
   1ec40:	mov	fp, r0
   1ec44:	mov	r0, r1
   1ec48:	ldr	r1, [pc, #1648]	; 1f2c0 <ScreenManager_run@@Base+0x1014>
   1ec4c:	str	r3, [sp, #28]
   1ec50:	bl	14f70 <fopen@plt>
   1ec54:	subs	r3, r0, #0
   1ec58:	str	r3, [sp, #4]
   1ec5c:	beq	1ee80 <ScreenManager_run@@Base+0xbd4>
   1ec60:	mov	r4, #0
   1ec64:	ldr	r0, [sp, #4]
   1ec68:	str	r4, [sp, #12]
   1ec6c:	bl	1ff04 <String_readLine@@Base>
   1ec70:	ldr	sl, [pc, #1612]	; 1f2c4 <ScreenManager_run@@Base+0x1018>
   1ec74:	subs	r5, r0, #0
   1ec78:	beq	1edb0 <ScreenManager_run@@Base+0xb04>
   1ec7c:	add	r2, sp, #20
   1ec80:	mov	r1, #61	; 0x3d
   1ec84:	bl	1fcac <String_split@@Base>
   1ec88:	mov	r6, r0
   1ec8c:	mov	r0, r5
   1ec90:	bl	14fa0 <free@plt>
   1ec94:	ldr	r3, [sp, #20]
   1ec98:	cmp	r3, #1
   1ec9c:	ble	1ed98 <ScreenManager_run@@Base+0xaec>
   1eca0:	ldr	r1, [pc, #1568]	; 1f2c8 <ScreenManager_run@@Base+0x101c>
   1eca4:	ldr	r0, [r6]
   1eca8:	bl	1fc78 <String_eq@@Base>
   1ecac:	subs	r5, r0, #0
   1ecb0:	beq	1ede4 <ScreenManager_run@@Base+0xb38>
   1ecb4:	ldr	r0, [r6, #4]
   1ecb8:	ldr	r7, [fp, #28]
   1ecbc:	bl	1fbc8 <String_trim@@Base>
   1ecc0:	add	r2, sp, #24
   1ecc4:	mov	r1, #32
   1ecc8:	ldr	r9, [pc, #1532]	; 1f2cc <ScreenManager_run@@Base+0x1020>
   1eccc:	mov	r4, r0
   1ecd0:	bl	1fcac <String_split@@Base>
   1ecd4:	str	r0, [sp, #8]
   1ecd8:	mov	r5, r0
   1ecdc:	mov	r0, r4
   1ece0:	bl	14fa0 <free@plt>
   1ece4:	ldr	r3, [r9]
   1ece8:	mov	r4, #0
   1ecec:	cmp	r3, r4
   1ecf0:	str	r4, [fp, #32]
   1ecf4:	ble	1ee88 <ScreenManager_run@@Base+0xbdc>
   1ecf8:	ldr	r0, [r5]
   1ecfc:	cmp	r0, r4
   1ed00:	beq	1ee88 <ScreenManager_run@@Base+0xbdc>
   1ed04:	mov	r8, r4
   1ed08:	b	1ed18 <ScreenManager_run@@Base+0xa6c>
   1ed0c:	ldr	r0, [r5, #4]!
   1ed10:	cmp	r0, #0
   1ed14:	beq	1ed84 <ScreenManager_run@@Base+0xad8>
   1ed18:	mov	r2, #10
   1ed1c:	mov	r1, #0
   1ed20:	bl	14f4c <strtol@plt>
   1ed24:	lsl	r2, r8, #2
   1ed28:	add	r1, r7, r2
   1ed2c:	add	r0, r0, #1
   1ed30:	cmp	r0, #0
   1ed34:	ldrle	r3, [r9]
   1ed38:	ble	1ed78 <ScreenManager_run@@Base+0xacc>
   1ed3c:	ldr	ip, [sl, r0, lsl #4]
   1ed40:	ldr	r3, [r9]
   1ed44:	cmp	ip, #0
   1ed48:	beq	1ed78 <ScreenManager_run@@Base+0xacc>
   1ed4c:	cmp	r0, r3
   1ed50:	bge	1ed78 <ScreenManager_run@@Base+0xacc>
   1ed54:	add	ip, sl, r0, lsl #4
   1ed58:	add	r1, r2, #4
   1ed5c:	ldr	lr, [ip, #12]
   1ed60:	ldr	ip, [fp, #32]
   1ed64:	add	r1, r7, r1
   1ed68:	add	r8, r8, #1
   1ed6c:	str	r0, [r7, r2]
   1ed70:	orr	r2, ip, lr
   1ed74:	str	r2, [fp, #32]
   1ed78:	add	r4, r4, #1
   1ed7c:	cmp	r4, r3
   1ed80:	blt	1ed0c <ScreenManager_run@@Base+0xa60>
   1ed84:	mov	r3, #0
   1ed88:	ldr	r0, [sp, #8]
   1ed8c:	str	r3, [r1]
   1ed90:	bl	1fdc4 <String_freeArray@@Base>
   1ed94:	mov	r4, #1
   1ed98:	mov	r0, r6
   1ed9c:	bl	1fdc4 <String_freeArray@@Base>
   1eda0:	ldr	r0, [sp, #4]
   1eda4:	bl	1ff04 <String_readLine@@Base>
   1eda8:	subs	r5, r0, #0
   1edac:	bne	1ec7c <ScreenManager_run@@Base+0x9d0>
   1edb0:	ldr	r0, [sp, #4]
   1edb4:	bl	153fc <fclose@plt>
   1edb8:	ldr	r3, [sp, #12]
   1edbc:	cmp	r3, #0
   1edc0:	beq	1ee74 <ScreenManager_run@@Base+0xbc8>
   1edc4:	ldr	r3, [pc, #1264]	; 1f2bc <ScreenManager_run@@Base+0x1010>
   1edc8:	ldr	r2, [sp, #28]
   1edcc:	mov	r0, r4
   1edd0:	ldr	r3, [r3]
   1edd4:	cmp	r2, r3
   1edd8:	bne	1f064 <ScreenManager_run@@Base+0xdb8>
   1eddc:	add	sp, sp, #36	; 0x24
   1ede0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ede4:	ldr	r1, [pc, #1252]	; 1f2d0 <ScreenManager_run@@Base+0x1024>
   1ede8:	ldr	r0, [r6]
   1edec:	bl	1fc78 <String_eq@@Base>
   1edf0:	subs	r7, r0, #0
   1edf4:	beq	1ee14 <ScreenManager_run@@Base+0xb68>
   1edf8:	mov	r1, r5
   1edfc:	mov	r2, #10
   1ee00:	ldr	r0, [r6, #4]
   1ee04:	bl	14f4c <strtol@plt>
   1ee08:	add	r0, r0, #1
   1ee0c:	str	r0, [fp, #52]	; 0x34
   1ee10:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1ee14:	ldr	r1, [pc, #1208]	; 1f2d4 <ScreenManager_run@@Base+0x1028>
   1ee18:	ldr	r0, [r6]
   1ee1c:	bl	1fc78 <String_eq@@Base>
   1ee20:	subs	r5, r0, #0
   1ee24:	bne	1ee5c <ScreenManager_run@@Base+0xbb0>
   1ee28:	ldr	r1, [pc, #1192]	; 1f2d8 <ScreenManager_run@@Base+0x102c>
   1ee2c:	ldr	r0, [r6]
   1ee30:	bl	1fc78 <String_eq@@Base>
   1ee34:	subs	r7, r0, #0
   1ee38:	beq	1ee90 <ScreenManager_run@@Base+0xbe4>
   1ee3c:	mov	r1, r5
   1ee40:	mov	r2, #10
   1ee44:	ldr	r0, [r6, #4]
   1ee48:	bl	14f4c <strtol@plt>
   1ee4c:	adds	r0, r0, #0
   1ee50:	movne	r0, #1
   1ee54:	strb	r0, [fp, #58]	; 0x3a
   1ee58:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1ee5c:	mov	r1, r7
   1ee60:	mov	r2, #10
   1ee64:	ldr	r0, [r6, #4]
   1ee68:	bl	14f4c <strtol@plt>
   1ee6c:	str	r0, [fp, #48]	; 0x30
   1ee70:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1ee74:	mov	r0, fp
   1ee78:	bl	1ea1c <ScreenManager_run@@Base+0x770>
   1ee7c:	b	1edc4 <ScreenManager_run@@Base+0xb18>
   1ee80:	ldr	r4, [sp, #4]
   1ee84:	b	1edc4 <ScreenManager_run@@Base+0xb18>
   1ee88:	mov	r1, r7
   1ee8c:	b	1ed84 <ScreenManager_run@@Base+0xad8>
   1ee90:	ldr	r1, [pc, #1092]	; 1f2dc <ScreenManager_run@@Base+0x1030>
   1ee94:	ldr	r0, [r6]
   1ee98:	bl	1fc78 <String_eq@@Base>
   1ee9c:	subs	r5, r0, #0
   1eea0:	bne	1eed8 <ScreenManager_run@@Base+0xc2c>
   1eea4:	ldr	r1, [pc, #1076]	; 1f2e0 <ScreenManager_run@@Base+0x1034>
   1eea8:	ldr	r0, [r6]
   1eeac:	bl	1fc78 <String_eq@@Base>
   1eeb0:	subs	r7, r0, #0
   1eeb4:	beq	1eef8 <ScreenManager_run@@Base+0xc4c>
   1eeb8:	mov	r1, r5
   1eebc:	mov	r2, #10
   1eec0:	ldr	r0, [r6, #4]
   1eec4:	bl	14f4c <strtol@plt>
   1eec8:	adds	r0, r0, #0
   1eecc:	movne	r0, #1
   1eed0:	strb	r0, [fp, #63]	; 0x3f
   1eed4:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1eed8:	mov	r1, r7
   1eedc:	mov	r2, #10
   1eee0:	ldr	r0, [r6, #4]
   1eee4:	bl	14f4c <strtol@plt>
   1eee8:	adds	r0, r0, #0
   1eeec:	movne	r0, #1
   1eef0:	strb	r0, [fp, #60]	; 0x3c
   1eef4:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1eef8:	ldr	r1, [pc, #996]	; 1f2e4 <ScreenManager_run@@Base+0x1038>
   1eefc:	ldr	r0, [r6]
   1ef00:	bl	1fc78 <String_eq@@Base>
   1ef04:	cmp	r0, #0
   1ef08:	bne	1ef40 <ScreenManager_run@@Base+0xc94>
   1ef0c:	ldr	r1, [pc, #980]	; 1f2e8 <ScreenManager_run@@Base+0x103c>
   1ef10:	ldr	r0, [r6]
   1ef14:	bl	1fc78 <String_eq@@Base>
   1ef18:	cmp	r0, #0
   1ef1c:	beq	1ef60 <ScreenManager_run@@Base+0xcb4>
   1ef20:	mov	r2, #10
   1ef24:	mov	r1, #0
   1ef28:	ldr	r0, [r6, #4]
   1ef2c:	bl	14f4c <strtol@plt>
   1ef30:	adds	r0, r0, #0
   1ef34:	movne	r0, #1
   1ef38:	strb	r0, [fp, #61]	; 0x3d
   1ef3c:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1ef40:	mov	r1, r7
   1ef44:	mov	r2, #10
   1ef48:	ldr	r0, [r6, #4]
   1ef4c:	bl	14f4c <strtol@plt>
   1ef50:	adds	r0, r0, #0
   1ef54:	movne	r0, #1
   1ef58:	strb	r0, [fp, #64]	; 0x40
   1ef5c:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1ef60:	ldr	r1, [pc, #900]	; 1f2ec <ScreenManager_run@@Base+0x1040>
   1ef64:	ldr	r0, [r6]
   1ef68:	bl	1fc78 <String_eq@@Base>
   1ef6c:	subs	r7, r0, #0
   1ef70:	beq	1ef94 <ScreenManager_run@@Base+0xce8>
   1ef74:	mov	r2, #10
   1ef78:	mov	r1, #0
   1ef7c:	ldr	r0, [r6, #4]
   1ef80:	bl	14f4c <strtol@plt>
   1ef84:	adds	r0, r0, #0
   1ef88:	movne	r0, #1
   1ef8c:	strb	r0, [fp, #62]	; 0x3e
   1ef90:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1ef94:	ldr	r1, [pc, #852]	; 1f2f0 <ScreenManager_run@@Base+0x1044>
   1ef98:	ldr	r0, [r6]
   1ef9c:	bl	1fc78 <String_eq@@Base>
   1efa0:	subs	r5, r0, #0
   1efa4:	beq	1efc8 <ScreenManager_run@@Base+0xd1c>
   1efa8:	mov	r1, r7
   1efac:	mov	r2, #10
   1efb0:	ldr	r0, [r6, #4]
   1efb4:	bl	14f4c <strtol@plt>
   1efb8:	adds	r0, r0, #0
   1efbc:	movne	r0, #1
   1efc0:	strb	r0, [fp, #59]	; 0x3b
   1efc4:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1efc8:	ldr	r1, [pc, #804]	; 1f2f4 <ScreenManager_run@@Base+0x1048>
   1efcc:	ldr	r0, [r6]
   1efd0:	bl	1fc78 <String_eq@@Base>
   1efd4:	subs	r7, r0, #0
   1efd8:	beq	1effc <ScreenManager_run@@Base+0xd50>
   1efdc:	mov	r1, r5
   1efe0:	mov	r2, #10
   1efe4:	ldr	r0, [r6, #4]
   1efe8:	bl	14f4c <strtol@plt>
   1efec:	adds	r0, r0, #0
   1eff0:	movne	r0, #1
   1eff4:	strb	r0, [fp, #65]	; 0x41
   1eff8:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1effc:	ldr	r1, [pc, #756]	; 1f2f8 <ScreenManager_run@@Base+0x104c>
   1f000:	ldr	r0, [r6]
   1f004:	bl	1fc78 <String_eq@@Base>
   1f008:	subs	r5, r0, #0
   1f00c:	beq	1f030 <ScreenManager_run@@Base+0xd84>
   1f010:	mov	r1, r7
   1f014:	mov	r2, #10
   1f018:	ldr	r0, [r6, #4]
   1f01c:	bl	14f4c <strtol@plt>
   1f020:	adds	r0, r0, #0
   1f024:	movne	r0, #1
   1f028:	strb	r0, [fp, #66]	; 0x42
   1f02c:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1f030:	ldr	r1, [pc, #708]	; 1f2fc <ScreenManager_run@@Base+0x1050>
   1f034:	ldr	r0, [r6]
   1f038:	bl	1fc78 <String_eq@@Base>
   1f03c:	subs	r7, r0, #0
   1f040:	beq	1f068 <ScreenManager_run@@Base+0xdbc>
   1f044:	mov	r1, r5
   1f048:	mov	r2, #10
   1f04c:	ldr	r0, [r6, #4]
   1f050:	bl	14f4c <strtol@plt>
   1f054:	adds	r0, r0, #0
   1f058:	movne	r0, #1
   1f05c:	strb	r0, [fp, #67]	; 0x43
   1f060:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1f064:	bl	15084 <__stack_chk_fail@plt>
   1f068:	ldr	r1, [pc, #656]	; 1f300 <ScreenManager_run@@Base+0x1054>
   1f06c:	ldr	r0, [r6]
   1f070:	bl	1fc78 <String_eq@@Base>
   1f074:	subs	r5, r0, #0
   1f078:	beq	1f09c <ScreenManager_run@@Base+0xdf0>
   1f07c:	mov	r1, r7
   1f080:	mov	r2, #10
   1f084:	ldr	r0, [r6, #4]
   1f088:	bl	14f4c <strtol@plt>
   1f08c:	adds	r0, r0, #0
   1f090:	movne	r0, #1
   1f094:	strb	r0, [fp, #70]	; 0x46
   1f098:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1f09c:	ldr	r1, [pc, #608]	; 1f304 <ScreenManager_run@@Base+0x1058>
   1f0a0:	ldr	r0, [r6]
   1f0a4:	bl	1fc78 <String_eq@@Base>
   1f0a8:	subs	r7, r0, #0
   1f0ac:	movne	r1, r5
   1f0b0:	bne	1f0cc <ScreenManager_run@@Base+0xe20>
   1f0b4:	ldr	r1, [pc, #588]	; 1f308 <ScreenManager_run@@Base+0x105c>
   1f0b8:	ldr	r0, [r6]
   1f0bc:	bl	1fc78 <String_eq@@Base>
   1f0c0:	subs	r5, r0, #0
   1f0c4:	beq	1f0e8 <ScreenManager_run@@Base+0xe3c>
   1f0c8:	mov	r1, r7
   1f0cc:	mov	r2, #10
   1f0d0:	ldr	r0, [r6, #4]
   1f0d4:	bl	14f4c <strtol@plt>
   1f0d8:	adds	r0, r0, #0
   1f0dc:	movne	r0, #1
   1f0e0:	strb	r0, [fp, #57]	; 0x39
   1f0e4:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1f0e8:	ldr	r1, [pc, #540]	; 1f30c <ScreenManager_run@@Base+0x1060>
   1f0ec:	ldr	r0, [r6]
   1f0f0:	bl	1fc78 <String_eq@@Base>
   1f0f4:	cmp	r0, #0
   1f0f8:	beq	1f11c <ScreenManager_run@@Base+0xe70>
   1f0fc:	mov	r1, r5
   1f100:	mov	r2, #10
   1f104:	ldr	r0, [r6, #4]
   1f108:	bl	14f4c <strtol@plt>
   1f10c:	adds	r0, r0, #0
   1f110:	movne	r0, #1
   1f114:	strb	r0, [fp, #56]	; 0x38
   1f118:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1f11c:	ldr	r1, [pc, #492]	; 1f310 <ScreenManager_run@@Base+0x1064>
   1f120:	ldr	r0, [r6]
   1f124:	bl	1fc78 <String_eq@@Base>
   1f128:	cmp	r0, #0
   1f12c:	beq	1f150 <ScreenManager_run@@Base+0xea4>
   1f130:	mov	r2, #10
   1f134:	mov	r1, #0
   1f138:	ldr	r0, [r6, #4]
   1f13c:	bl	14f4c <strtol@plt>
   1f140:	adds	r0, r0, #0
   1f144:	movne	r0, #1
   1f148:	strb	r0, [fp, #68]	; 0x44
   1f14c:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1f150:	ldr	r1, [pc, #444]	; 1f314 <ScreenManager_run@@Base+0x1068>
   1f154:	ldr	r0, [r6]
   1f158:	bl	1fc78 <String_eq@@Base>
   1f15c:	subs	r7, r0, #0
   1f160:	beq	1f184 <ScreenManager_run@@Base+0xed8>
   1f164:	mov	r2, #10
   1f168:	mov	r1, #0
   1f16c:	ldr	r0, [r6, #4]
   1f170:	bl	14f4c <strtol@plt>
   1f174:	adds	r0, r0, #0
   1f178:	movne	r0, #1
   1f17c:	strb	r0, [fp, #69]	; 0x45
   1f180:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1f184:	ldr	r1, [pc, #396]	; 1f318 <ScreenManager_run@@Base+0x106c>
   1f188:	ldr	r0, [r6]
   1f18c:	bl	1fc78 <String_eq@@Base>
   1f190:	subs	r5, r0, #0
   1f194:	beq	1f1b0 <ScreenManager_run@@Base+0xf04>
   1f198:	mov	r1, r7
   1f19c:	mov	r2, #10
   1f1a0:	ldr	r0, [r6, #4]
   1f1a4:	bl	14f4c <strtol@plt>
   1f1a8:	str	r0, [fp, #40]	; 0x28
   1f1ac:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1f1b0:	ldr	r1, [pc, #356]	; 1f31c <ScreenManager_run@@Base+0x1070>
   1f1b4:	ldr	r0, [r6]
   1f1b8:	bl	1fc78 <String_eq@@Base>
   1f1bc:	cmp	r0, #0
   1f1c0:	beq	1f1e4 <ScreenManager_run@@Base+0xf38>
   1f1c4:	mov	r2, #10
   1f1c8:	mov	r1, r5
   1f1cc:	ldr	r0, [r6, #4]
   1f1d0:	bl	14f4c <strtol@plt>
   1f1d4:	cmp	r0, #6
   1f1d8:	movhi	r0, r5
   1f1dc:	str	r0, [fp, #36]	; 0x24
   1f1e0:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1f1e4:	ldr	r1, [pc, #308]	; 1f320 <ScreenManager_run@@Base+0x1074>
   1f1e8:	ldr	r0, [r6]
   1f1ec:	bl	1fc78 <String_eq@@Base>
   1f1f0:	cmp	r0, #0
   1f1f4:	beq	1f22c <ScreenManager_run@@Base+0xf80>
   1f1f8:	ldr	r0, [r6, #4]
   1f1fc:	bl	1fbc8 <String_trim@@Base>
   1f200:	add	r2, sp, #24
   1f204:	mov	r1, #32
   1f208:	mov	r7, r0
   1f20c:	bl	1fcac <String_split@@Base>
   1f210:	mov	r5, r0
   1f214:	mov	r0, r7
   1f218:	bl	14fa0 <free@plt>
   1f21c:	mov	r3, #1
   1f220:	str	r3, [sp, #12]
   1f224:	str	r5, [fp, #8]
   1f228:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1f22c:	ldr	r1, [pc, #240]	; 1f324 <ScreenManager_run@@Base+0x1078>
   1f230:	ldr	r0, [r6]
   1f234:	bl	1fc78 <String_eq@@Base>
   1f238:	subs	r5, r0, #0
   1f23c:	beq	1f274 <ScreenManager_run@@Base+0xfc8>
   1f240:	ldr	r0, [r6, #4]
   1f244:	bl	1fbc8 <String_trim@@Base>
   1f248:	add	r2, sp, #24
   1f24c:	mov	r1, #32
   1f250:	mov	r7, r0
   1f254:	bl	1fcac <String_split@@Base>
   1f258:	mov	r5, r0
   1f25c:	mov	r0, r7
   1f260:	bl	14fa0 <free@plt>
   1f264:	mov	r3, #1
   1f268:	str	r3, [sp, #12]
   1f26c:	str	r5, [fp, #20]
   1f270:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1f274:	ldr	r1, [pc, #172]	; 1f328 <ScreenManager_run@@Base+0x107c>
   1f278:	ldr	r0, [r6]
   1f27c:	bl	1fc78 <String_eq@@Base>
   1f280:	cmp	r0, #0
   1f284:	movne	r2, r5
   1f288:	bne	1f2a4 <ScreenManager_run@@Base+0xff8>
   1f28c:	ldr	r1, [pc, #152]	; 1f32c <ScreenManager_run@@Base+0x1080>
   1f290:	ldr	r0, [r6]
   1f294:	bl	1fc78 <String_eq@@Base>
   1f298:	cmp	r0, #0
   1f29c:	beq	1ed98 <ScreenManager_run@@Base+0xaec>
   1f2a0:	mov	r2, #1
   1f2a4:	ldr	r1, [r6, #4]
   1f2a8:	mov	r0, fp
   1f2ac:	bl	15544 <backtrace_symbols_fd@plt+0x28>
   1f2b0:	mov	r3, #1
   1f2b4:	str	r3, [sp, #12]
   1f2b8:	b	1ed98 <ScreenManager_run@@Base+0xaec>
   1f2bc:			; <UNDEFINED> instruction: 0x0003ccb8
   1f2c0:			; <UNDEFINED> instruction: 0x0002b1b0
   1f2c4:	strdeq	sp, [r3], -r0
   1f2c8:	andeq	sl, r2, ip, ror #3
   1f2cc:	andeq	sp, r3, ip, asr pc
   1f2d0:	strdeq	sl, [r2], -r4
   1f2d4:	andeq	sl, r2, r0, lsl #4
   1f2d8:	andeq	sl, r2, r0, lsl r2
   1f2dc:	andeq	sl, r2, ip, lsl r2
   1f2e0:	andeq	sl, r2, ip, lsr #4
   1f2e4:	andeq	sl, r2, r0, asr #4
   1f2e8:	andeq	sl, r2, r8, asr r2
   1f2ec:	andeq	sl, r2, ip, ror #4
   1f2f0:	andeq	sl, r2, r0, lsl #5
   1f2f4:	muleq	r2, r4, r2
   1f2f8:	andeq	sl, r2, r8, lsr #5
   1f2fc:			; <UNDEFINED> instruction: 0x0002a2bc
   1f300:	ldrdeq	sl, [r2], -r0
   1f304:	andeq	sl, r2, r0, ror #5
   1f308:	strdeq	sl, [r2], -r4
   1f30c:	andeq	sl, r2, r8, lsl #6
   1f310:	andeq	sl, r2, ip, lsl r3
   1f314:	andeq	sl, r2, r4, lsr r3
   1f318:	andeq	r9, r2, ip, lsl #21
   1f31c:	andeq	sl, r2, r0, asr r3
   1f320:	andeq	sl, r2, r0, ror #6
   1f324:	andeq	sl, r2, ip, ror #6
   1f328:	andeq	sl, r2, ip, ror r3
   1f32c:	muleq	r2, r0, r3

0001f330 <Settings_delete@@Base>:
   1f330:	push	{r4, lr}
   1f334:	mov	r4, r0
   1f338:	ldr	r0, [r0]
   1f33c:	bl	14fa0 <free@plt>
   1f340:	ldr	r0, [r4, #28]
   1f344:	bl	14fa0 <free@plt>
   1f348:	ldr	r0, [r4, #8]
   1f34c:	bl	1fdc4 <String_freeArray@@Base>
   1f350:	ldr	r0, [r4, #12]
   1f354:	bl	14fa0 <free@plt>
   1f358:	ldr	r0, [r4, #20]
   1f35c:	bl	1fdc4 <String_freeArray@@Base>
   1f360:	ldr	r0, [r4, #24]
   1f364:	bl	14fa0 <free@plt>
   1f368:	mov	r0, r4
   1f36c:	pop	{r4, lr}
   1f370:	b	14fa0 <free@plt>

0001f374 <Settings_write@@Base>:
   1f374:	push	{r4, r5, r6, r7, r8, lr}
   1f378:	mov	r5, r0
   1f37c:	sub	sp, sp, #8
   1f380:	ldr	r1, [pc, #680]	; 1f630 <Settings_write@@Base+0x2bc>
   1f384:	ldr	r0, [r0]
   1f388:	bl	14f70 <fopen@plt>
   1f38c:	subs	r4, r0, #0
   1f390:	moveq	r0, r4
   1f394:	beq	1f628 <Settings_write@@Base+0x2b4>
   1f398:	ldr	r2, [pc, #660]	; 1f634 <Settings_write@@Base+0x2c0>
   1f39c:	mov	r1, #1
   1f3a0:	bl	153c0 <__fprintf_chk@plt>
   1f3a4:	ldr	r2, [pc, #652]	; 1f638 <Settings_write@@Base+0x2c4>
   1f3a8:	mov	r1, #1
   1f3ac:	mov	r0, r4
   1f3b0:	bl	153c0 <__fprintf_chk@plt>
   1f3b4:	ldr	r6, [r5, #28]
   1f3b8:	ldr	r2, [pc, #636]	; 1f63c <Settings_write@@Base+0x2c8>
   1f3bc:	ldr	r3, [pc, #636]	; 1f640 <Settings_write@@Base+0x2cc>
   1f3c0:	mov	r1, #1
   1f3c4:	mov	r0, r4
   1f3c8:	bl	153c0 <__fprintf_chk@plt>
   1f3cc:	ldr	r2, [r6]
   1f3d0:	cmp	r2, #0
   1f3d4:	beq	1f40c <Settings_write@@Base+0x98>
   1f3d8:	ldr	r3, [pc, #612]	; 1f644 <Settings_write@@Base+0x2d0>
   1f3dc:	ldr	r8, [pc, #612]	; 1f648 <Settings_write@@Base+0x2d4>
   1f3e0:	ldr	r7, [pc, #612]	; 1f64c <Settings_write@@Base+0x2d8>
   1f3e4:	sub	r2, r2, #1
   1f3e8:	str	r2, [sp]
   1f3ec:	mov	r1, #1
   1f3f0:	mov	r2, r8
   1f3f4:	mov	r0, r4
   1f3f8:	bl	153c0 <__fprintf_chk@plt>
   1f3fc:	ldr	r2, [r6, #4]!
   1f400:	mov	r3, r7
   1f404:	cmp	r2, #0
   1f408:	bne	1f3e4 <Settings_write@@Base+0x70>
   1f40c:	ldr	r2, [pc, #572]	; 1f650 <Settings_write@@Base+0x2dc>
   1f410:	mov	r1, #1
   1f414:	mov	r0, r4
   1f418:	bl	153c0 <__fprintf_chk@plt>
   1f41c:	ldr	r3, [r5, #52]	; 0x34
   1f420:	ldr	r2, [pc, #556]	; 1f654 <Settings_write@@Base+0x2e0>
   1f424:	sub	r3, r3, #1
   1f428:	mov	r1, #1
   1f42c:	mov	r0, r4
   1f430:	bl	153c0 <__fprintf_chk@plt>
   1f434:	ldr	r3, [r5, #48]	; 0x30
   1f438:	ldr	r2, [pc, #536]	; 1f658 <Settings_write@@Base+0x2e4>
   1f43c:	mov	r1, #1
   1f440:	mov	r0, r4
   1f444:	bl	153c0 <__fprintf_chk@plt>
   1f448:	ldrb	r3, [r5, #60]	; 0x3c
   1f44c:	ldr	r2, [pc, #520]	; 1f65c <Settings_write@@Base+0x2e8>
   1f450:	mov	r1, #1
   1f454:	mov	r0, r4
   1f458:	bl	153c0 <__fprintf_chk@plt>
   1f45c:	ldrb	r3, [r5, #63]	; 0x3f
   1f460:	ldr	r2, [pc, #504]	; 1f660 <Settings_write@@Base+0x2ec>
   1f464:	mov	r1, #1
   1f468:	mov	r0, r4
   1f46c:	bl	153c0 <__fprintf_chk@plt>
   1f470:	ldrb	r3, [r5, #64]	; 0x40
   1f474:	ldr	r2, [pc, #488]	; 1f664 <Settings_write@@Base+0x2f0>
   1f478:	mov	r1, #1
   1f47c:	mov	r0, r4
   1f480:	bl	153c0 <__fprintf_chk@plt>
   1f484:	ldrb	r3, [r5, #61]	; 0x3d
   1f488:	ldr	r2, [pc, #472]	; 1f668 <Settings_write@@Base+0x2f4>
   1f48c:	mov	r1, #1
   1f490:	mov	r0, r4
   1f494:	bl	153c0 <__fprintf_chk@plt>
   1f498:	ldrb	r3, [r5, #62]	; 0x3e
   1f49c:	ldr	r2, [pc, #456]	; 1f66c <Settings_write@@Base+0x2f8>
   1f4a0:	mov	r1, #1
   1f4a4:	mov	r0, r4
   1f4a8:	bl	153c0 <__fprintf_chk@plt>
   1f4ac:	ldrb	r3, [r5, #59]	; 0x3b
   1f4b0:	ldr	r2, [pc, #440]	; 1f670 <Settings_write@@Base+0x2fc>
   1f4b4:	mov	r1, #1
   1f4b8:	mov	r0, r4
   1f4bc:	bl	153c0 <__fprintf_chk@plt>
   1f4c0:	ldrb	r3, [r5, #65]	; 0x41
   1f4c4:	ldr	r2, [pc, #424]	; 1f674 <Settings_write@@Base+0x300>
   1f4c8:	mov	r1, #1
   1f4cc:	mov	r0, r4
   1f4d0:	bl	153c0 <__fprintf_chk@plt>
   1f4d4:	ldrb	r3, [r5, #66]	; 0x42
   1f4d8:	ldr	r2, [pc, #408]	; 1f678 <Settings_write@@Base+0x304>
   1f4dc:	mov	r1, #1
   1f4e0:	mov	r0, r4
   1f4e4:	bl	153c0 <__fprintf_chk@plt>
   1f4e8:	ldrb	r3, [r5, #67]	; 0x43
   1f4ec:	ldr	r2, [pc, #392]	; 1f67c <Settings_write@@Base+0x308>
   1f4f0:	mov	r1, #1
   1f4f4:	mov	r0, r4
   1f4f8:	bl	153c0 <__fprintf_chk@plt>
   1f4fc:	ldrb	r3, [r5, #58]	; 0x3a
   1f500:	ldr	r2, [pc, #376]	; 1f680 <Settings_write@@Base+0x30c>
   1f504:	mov	r1, #1
   1f508:	mov	r0, r4
   1f50c:	bl	153c0 <__fprintf_chk@plt>
   1f510:	ldrb	r3, [r5, #70]	; 0x46
   1f514:	ldr	r2, [pc, #360]	; 1f684 <Settings_write@@Base+0x310>
   1f518:	mov	r1, #1
   1f51c:	mov	r0, r4
   1f520:	bl	153c0 <__fprintf_chk@plt>
   1f524:	ldrb	r3, [r5, #57]	; 0x39
   1f528:	ldr	r2, [pc, #344]	; 1f688 <Settings_write@@Base+0x314>
   1f52c:	mov	r1, #1
   1f530:	mov	r0, r4
   1f534:	bl	153c0 <__fprintf_chk@plt>
   1f538:	ldrb	r3, [r5, #56]	; 0x38
   1f53c:	ldr	r2, [pc, #328]	; 1f68c <Settings_write@@Base+0x318>
   1f540:	mov	r1, #1
   1f544:	mov	r0, r4
   1f548:	bl	153c0 <__fprintf_chk@plt>
   1f54c:	ldrb	r3, [r5, #68]	; 0x44
   1f550:	ldr	r2, [pc, #312]	; 1f690 <Settings_write@@Base+0x31c>
   1f554:	mov	r1, #1
   1f558:	mov	r0, r4
   1f55c:	bl	153c0 <__fprintf_chk@plt>
   1f560:	ldrb	r3, [r5, #69]	; 0x45
   1f564:	ldr	r2, [pc, #296]	; 1f694 <Settings_write@@Base+0x320>
   1f568:	mov	r1, #1
   1f56c:	mov	r0, r4
   1f570:	bl	153c0 <__fprintf_chk@plt>
   1f574:	ldr	r3, [r5, #36]	; 0x24
   1f578:	ldr	r2, [pc, #280]	; 1f698 <Settings_write@@Base+0x324>
   1f57c:	mov	r1, #1
   1f580:	mov	r0, r4
   1f584:	bl	153c0 <__fprintf_chk@plt>
   1f588:	ldr	r3, [r5, #40]	; 0x28
   1f58c:	ldr	r2, [pc, #264]	; 1f69c <Settings_write@@Base+0x328>
   1f590:	mov	r1, #1
   1f594:	mov	r0, r4
   1f598:	bl	153c0 <__fprintf_chk@plt>
   1f59c:	ldr	r2, [pc, #252]	; 1f6a0 <Settings_write@@Base+0x32c>
   1f5a0:	mov	r1, #1
   1f5a4:	mov	r0, r4
   1f5a8:	bl	153c0 <__fprintf_chk@plt>
   1f5ac:	mov	r2, #0
   1f5b0:	mov	r1, r4
   1f5b4:	mov	r0, r5
   1f5b8:	bl	1e908 <ScreenManager_run@@Base+0x65c>
   1f5bc:	ldr	r2, [pc, #224]	; 1f6a4 <Settings_write@@Base+0x330>
   1f5c0:	mov	r1, #1
   1f5c4:	mov	r0, r4
   1f5c8:	bl	153c0 <__fprintf_chk@plt>
   1f5cc:	mov	r2, #0
   1f5d0:	mov	r1, r4
   1f5d4:	mov	r0, r5
   1f5d8:	bl	1e990 <ScreenManager_run@@Base+0x6e4>
   1f5dc:	ldr	r2, [pc, #196]	; 1f6a8 <Settings_write@@Base+0x334>
   1f5e0:	mov	r1, #1
   1f5e4:	mov	r0, r4
   1f5e8:	bl	153c0 <__fprintf_chk@plt>
   1f5ec:	mov	r2, #1
   1f5f0:	mov	r1, r4
   1f5f4:	mov	r0, r5
   1f5f8:	bl	1e908 <ScreenManager_run@@Base+0x65c>
   1f5fc:	ldr	r2, [pc, #168]	; 1f6ac <Settings_write@@Base+0x338>
   1f600:	mov	r1, #1
   1f604:	mov	r0, r4
   1f608:	bl	153c0 <__fprintf_chk@plt>
   1f60c:	mov	r0, r5
   1f610:	mov	r2, #1
   1f614:	mov	r1, r4
   1f618:	bl	1e990 <ScreenManager_run@@Base+0x6e4>
   1f61c:	mov	r0, r4
   1f620:	bl	153fc <fclose@plt>
   1f624:	mov	r0, #1
   1f628:	add	sp, sp, #8
   1f62c:	pop	{r4, r5, r6, r7, r8, pc}
   1f630:	andeq	r9, r2, ip, asr r4
   1f634:	andeq	sl, r2, r4, lsr #7
   1f638:	strdeq	sl, [r2], -ip
   1f63c:	andeq	sl, r2, ip, lsr r4
   1f640:	andeq	sl, r2, ip, ror #3
   1f644:	andeq	r9, r2, r0, lsl #20
   1f648:	andeq	sl, r2, ip, asr #3
   1f64c:	ldrdeq	sl, [r2], -r0
   1f650:	andeq	r9, r2, r4, asr sl
   1f654:	andeq	sl, r2, r0, asr #8
   1f658:	andeq	sl, r2, r0, asr r4
   1f65c:	andeq	sl, r2, r4, ror #8
   1f660:	andeq	sl, r2, r8, ror r4
   1f664:	muleq	r2, r0, r4
   1f668:	andeq	sl, r2, ip, lsr #9
   1f66c:	andeq	sl, r2, r4, asr #9
   1f670:	ldrdeq	sl, [r2], -ip
   1f674:	strdeq	sl, [r2], -r4
   1f678:	andeq	sl, r2, ip, lsl #10
   1f67c:	andeq	sl, r2, r4, lsr #10
   1f680:	andeq	sl, r2, ip, lsr r5
   1f684:	andeq	sl, r2, ip, asr #10
   1f688:	andeq	sl, r2, r0, ror #10
   1f68c:	andeq	sl, r2, r8, ror r5
   1f690:	muleq	r2, r0, r5
   1f694:	andeq	sl, r2, ip, lsr #11
   1f698:	andeq	sl, r2, ip, asr #11
   1f69c:	andeq	sl, r2, r0, ror #11
   1f6a0:	andeq	sl, r2, ip, ror #11
   1f6a4:	strdeq	sl, [r2], -ip
   1f6a8:	andeq	sl, r2, r0, lsl r6
   1f6ac:	andeq	sl, r2, r0, lsr #12

0001f6b0 <Settings_new@@Base>:
   1f6b0:	push	{r4, r5, r6, r7, r8, lr}
   1f6b4:	sub	sp, sp, #96	; 0x60
   1f6b8:	ldr	r6, [pc, #716]	; 1f98c <Settings_new@@Base+0x2dc>
   1f6bc:	mov	r7, r0
   1f6c0:	mov	r1, #72	; 0x48
   1f6c4:	ldr	r3, [r6]
   1f6c8:	mov	r0, #1
   1f6cc:	str	r3, [sp, #92]	; 0x5c
   1f6d0:	bl	23fd8 <xCalloc@@Base>
   1f6d4:	ldr	r1, [pc, #692]	; 1f990 <Settings_new@@Base+0x2e0>
   1f6d8:	mov	r5, #0
   1f6dc:	mov	r3, #1
   1f6e0:	mov	r2, #47	; 0x2f
   1f6e4:	mov	r4, r0
   1f6e8:	ldr	r0, [r1]
   1f6ec:	str	r2, [r4, #52]	; 0x34
   1f6f0:	mov	r1, #4
   1f6f4:	str	r7, [r4, #44]	; 0x2c
   1f6f8:	add	r0, r0, r3
   1f6fc:	str	r3, [r4, #48]	; 0x30
   1f700:	strb	r3, [r4, #59]	; 0x3b
   1f704:	strb	r3, [r4, #67]	; 0x43
   1f708:	strb	r5, [r4, #60]	; 0x3c
   1f70c:	strb	r5, [r4, #61]	; 0x3d
   1f710:	strb	r5, [r4, #62]	; 0x3e
   1f714:	strb	r5, [r4, #63]	; 0x3f
   1f718:	strb	r5, [r4, #64]	; 0x40
   1f71c:	strb	r5, [r4, #58]	; 0x3a
   1f720:	strb	r5, [r4, #65]	; 0x41
   1f724:	strb	r5, [r4, #66]	; 0x42
   1f728:	strb	r5, [r4, #57]	; 0x39
   1f72c:	strb	r5, [r4, #56]	; 0x38
   1f730:	strb	r5, [r4, #68]	; 0x44
   1f734:	bl	23fd8 <xCalloc@@Base>
   1f738:	ldr	r2, [pc, #596]	; 1f994 <Settings_new@@Base+0x2e4>
   1f73c:	str	r5, [r4, #32]
   1f740:	ldr	r1, [r2]
   1f744:	cmp	r1, r5
   1f748:	str	r0, [r4, #28]
   1f74c:	beq	1f77c <Settings_new@@Base+0xcc>
   1f750:	ldr	ip, [pc, #576]	; 1f998 <Settings_new@@Base+0x2e8>
   1f754:	sub	r0, r0, #4
   1f758:	str	r1, [r0, #4]!
   1f75c:	ldr	r3, [r2]
   1f760:	ldr	r1, [r2, #4]!
   1f764:	add	r3, ip, r3, lsl #4
   1f768:	cmp	r1, #0
   1f76c:	ldr	r3, [r3, #12]
   1f770:	orr	r5, r5, r3
   1f774:	bne	1f758 <Settings_new@@Base+0xa8>
   1f778:	str	r5, [r4, #32]
   1f77c:	ldr	r0, [pc, #536]	; 1f99c <Settings_new@@Base+0x2ec>
   1f780:	bl	151b0 <getenv@plt>
   1f784:	cmp	r0, #0
   1f788:	beq	1f828 <Settings_new@@Base+0x178>
   1f78c:	bl	24034 <xStrdup@@Base>
   1f790:	mov	r3, #0
   1f794:	mov	r2, #15
   1f798:	str	r3, [r4, #36]	; 0x24
   1f79c:	strb	r3, [r4, #71]	; 0x47
   1f7a0:	str	r2, [r4, #40]	; 0x28
   1f7a4:	str	r0, [r4]
   1f7a8:	mov	r1, r0
   1f7ac:	mov	r0, r4
   1f7b0:	bl	1ec30 <ScreenManager_run@@Base+0x984>
   1f7b4:	cmp	r0, #0
   1f7b8:	bne	1f80c <Settings_new@@Base+0x15c>
   1f7bc:	mov	r5, #1
   1f7c0:	ldr	r1, [pc, #472]	; 1f9a0 <Settings_new@@Base+0x2f0>
   1f7c4:	strb	r5, [r4, #71]	; 0x47
   1f7c8:	ldr	r0, [pc, #468]	; 1f9a4 <Settings_new@@Base+0x2f4>
   1f7cc:	bl	1fb74 <String_cat@@Base>
   1f7d0:	mov	r1, r0
   1f7d4:	mov	r7, r0
   1f7d8:	mov	r0, r4
   1f7dc:	bl	1ec30 <ScreenManager_run@@Base+0x984>
   1f7e0:	mov	r8, r0
   1f7e4:	mov	r0, r7
   1f7e8:	bl	14fa0 <free@plt>
   1f7ec:	cmp	r8, #0
   1f7f0:	bne	1f80c <Settings_new@@Base+0x15c>
   1f7f4:	mov	r0, r4
   1f7f8:	bl	1ea1c <ScreenManager_run@@Base+0x770>
   1f7fc:	strb	r5, [r4, #63]	; 0x3f
   1f800:	strb	r5, [r4, #66]	; 0x42
   1f804:	strb	r5, [r4, #67]	; 0x43
   1f808:	strb	r5, [r4, #70]	; 0x46
   1f80c:	ldr	r2, [sp, #92]	; 0x5c
   1f810:	ldr	r3, [r6]
   1f814:	mov	r0, r4
   1f818:	cmp	r2, r3
   1f81c:	bne	1f988 <Settings_new@@Base+0x2d8>
   1f820:	add	sp, sp, #96	; 0x60
   1f824:	pop	{r4, r5, r6, r7, r8, pc}
   1f828:	ldr	r0, [pc, #376]	; 1f9a8 <Settings_new@@Base+0x2f8>
   1f82c:	bl	151b0 <getenv@plt>
   1f830:	ldr	r5, [pc, #372]	; 1f9ac <Settings_new@@Base+0x2fc>
   1f834:	cmp	r0, #0
   1f838:	movne	r5, r0
   1f83c:	ldr	r0, [pc, #364]	; 1f9b0 <Settings_new@@Base+0x300>
   1f840:	bl	151b0 <getenv@plt>
   1f844:	subs	r8, r0, #0
   1f848:	beq	1f954 <Settings_new@@Base+0x2a4>
   1f84c:	ldr	r1, [pc, #352]	; 1f9b4 <Settings_new@@Base+0x304>
   1f850:	bl	1fb74 <String_cat@@Base>
   1f854:	str	r0, [r4]
   1f858:	mov	r0, r8
   1f85c:	bl	24034 <xStrdup@@Base>
   1f860:	ldr	r1, [pc, #336]	; 1f9b8 <Settings_new@@Base+0x308>
   1f864:	mov	r7, r0
   1f868:	mov	r0, r8
   1f86c:	bl	1fb74 <String_cat@@Base>
   1f870:	mov	r8, r0
   1f874:	mov	r0, r5
   1f878:	ldr	r1, [pc, #316]	; 1f9bc <Settings_new@@Base+0x30c>
   1f87c:	bl	1fb74 <String_cat@@Base>
   1f880:	mov	r1, #448	; 0x1c0
   1f884:	mov	r5, r0
   1f888:	mov	r0, r7
   1f88c:	bl	15318 <mkdir@plt>
   1f890:	mov	r1, #448	; 0x1c0
   1f894:	mov	r0, r8
   1f898:	bl	15318 <mkdir@plt>
   1f89c:	mov	r0, r8
   1f8a0:	bl	14fa0 <free@plt>
   1f8a4:	mov	r0, r7
   1f8a8:	bl	14fa0 <free@plt>
   1f8ac:	mov	r1, r5
   1f8b0:	mov	r2, sp
   1f8b4:	mov	r0, #3
   1f8b8:	bl	154b0 <__lxstat@plt>
   1f8bc:	cmp	r0, #0
   1f8c0:	bne	1f930 <Settings_new@@Base+0x280>
   1f8c4:	ldr	r3, [sp, #16]
   1f8c8:	and	r3, r3, #61440	; 0xf000
   1f8cc:	cmp	r3, #40960	; 0xa000
   1f8d0:	beq	1f930 <Settings_new@@Base+0x280>
   1f8d4:	mov	r3, #15
   1f8d8:	str	r0, [r4, #36]	; 0x24
   1f8dc:	strb	r0, [r4, #71]	; 0x47
   1f8e0:	str	r3, [r4, #40]	; 0x28
   1f8e4:	mov	r1, r5
   1f8e8:	mov	r0, r4
   1f8ec:	bl	1ec30 <ScreenManager_run@@Base+0x984>
   1f8f0:	cmp	r0, #0
   1f8f4:	bne	1f908 <Settings_new@@Base+0x258>
   1f8f8:	mov	r0, r5
   1f8fc:	bl	14fa0 <free@plt>
   1f900:	ldr	r0, [r4]
   1f904:	b	1f7a8 <Settings_new@@Base+0xf8>
   1f908:	mov	r0, r4
   1f90c:	bl	1f374 <Settings_write@@Base>
   1f910:	cmp	r0, #0
   1f914:	bne	1f924 <Settings_new@@Base+0x274>
   1f918:	mov	r0, r5
   1f91c:	bl	14fa0 <free@plt>
   1f920:	b	1f80c <Settings_new@@Base+0x15c>
   1f924:	mov	r0, r5
   1f928:	bl	150a8 <unlink@plt>
   1f92c:	b	1f918 <Settings_new@@Base+0x268>
   1f930:	mov	r0, r5
   1f934:	bl	14fa0 <free@plt>
   1f938:	mov	r3, #0
   1f93c:	mov	r2, #15
   1f940:	str	r3, [r4, #36]	; 0x24
   1f944:	strb	r3, [r4, #71]	; 0x47
   1f948:	str	r2, [r4, #40]	; 0x28
   1f94c:	ldr	r0, [r4]
   1f950:	b	1f7a8 <Settings_new@@Base+0xf8>
   1f954:	ldr	r1, [pc, #100]	; 1f9c0 <Settings_new@@Base+0x310>
   1f958:	mov	r0, r5
   1f95c:	bl	1fb74 <String_cat@@Base>
   1f960:	ldr	r1, [pc, #92]	; 1f9c4 <Settings_new@@Base+0x314>
   1f964:	str	r0, [r4]
   1f968:	mov	r0, r5
   1f96c:	bl	1fb74 <String_cat@@Base>
   1f970:	ldr	r1, [pc, #80]	; 1f9c8 <Settings_new@@Base+0x318>
   1f974:	mov	r7, r0
   1f978:	mov	r0, r5
   1f97c:	bl	1fb74 <String_cat@@Base>
   1f980:	mov	r8, r0
   1f984:	b	1f874 <Settings_new@@Base+0x1c4>
   1f988:	bl	15084 <__stack_chk_fail@plt>
   1f98c:			; <UNDEFINED> instruction: 0x0003ccb8
   1f990:	andeq	sp, r3, ip, asr pc
   1f994:	andeq	sp, r3, r0, ror #30
   1f998:	strdeq	sp, [r3], -r0
   1f99c:	andeq	sl, r2, r4, lsr r6
   1f9a0:	muleq	r2, r4, r6
   1f9a4:	muleq	r2, ip, r6
   1f9a8:	andeq	sl, r2, ip, lsr r6
   1f9ac:	andeq	r9, r2, r0, lsl #20
   1f9b0:	andeq	sl, r2, r4, asr #12
   1f9b4:	andeq	sl, r2, ip, asr r6
   1f9b8:	andeq	sl, r2, r0, lsl #13
   1f9bc:	andeq	sl, r2, r8, lsl #13
   1f9c0:	andeq	sl, r2, r4, asr r6
   1f9c4:	andeq	sl, r2, ip, ror #12
   1f9c8:	andeq	sl, r2, r8, ror r6

0001f9cc <Settings_invertSortOrder@@Base>:
   1f9cc:	ldr	r3, [r0, #48]	; 0x30
   1f9d0:	cmp	r3, #1
   1f9d4:	mvneq	r3, #0
   1f9d8:	movne	r3, #1
   1f9dc:	str	r3, [r0, #48]	; 0x30
   1f9e0:	bx	lr

0001f9e4 <SignalsPanel_new@@Base>:
   1f9e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f9e8:	sub	sp, sp, #20
   1f9ec:	ldr	r1, [pc, #352]	; 1fb54 <SignalsPanel_new@@Base+0x170>
   1f9f0:	ldr	r0, [pc, #352]	; 1fb58 <SignalsPanel_new@@Base+0x174>
   1f9f4:	bl	185cc <FunctionBar_newEnterEsc@@Base>
   1f9f8:	ldr	r2, [pc, #348]	; 1fb5c <SignalsPanel_new@@Base+0x178>
   1f9fc:	mov	r3, #1
   1fa00:	str	r2, [sp, #4]
   1fa04:	str	r3, [sp]
   1fa08:	mov	r2, r3
   1fa0c:	mov	r1, r3
   1fa10:	str	r0, [sp, #8]
   1fa14:	mov	r0, r3
   1fa18:	bl	1af80 <Panel_new@@Base>
   1fa1c:	ldr	r3, [pc, #316]	; 1fb60 <SignalsPanel_new@@Base+0x17c>
   1fa20:	ldr	r6, [r3]
   1fa24:	cmp	r6, #0
   1fa28:	mov	r7, r0
   1fa2c:	beq	1fb30 <SignalsPanel_new@@Base+0x14c>
   1fa30:	ldr	r9, [pc, #300]	; 1fb64 <SignalsPanel_new@@Base+0x180>
   1fa34:	mov	r5, #0
   1fa38:	mov	r4, r9
   1fa3c:	mov	r8, #15
   1fa40:	ldr	r1, [r4, #4]
   1fa44:	ldr	r0, [r9, r5, lsl #3]
   1fa48:	cmp	r1, #15
   1fa4c:	moveq	r8, r5
   1fa50:	bl	193f4 <ListItem_new@@Base>
   1fa54:	mov	r1, r5
   1fa58:	add	r5, r5, #1
   1fa5c:	add	r4, r4, #8
   1fa60:	mov	r2, r0
   1fa64:	mov	r0, r7
   1fa68:	bl	1b10c <Panel_set@@Base>
   1fa6c:	cmp	r5, r6
   1fa70:	bne	1fa40 <SignalsPanel_new@@Base+0x5c>
   1fa74:	bl	152b8 <__libc_current_sigrtmax@plt>
   1fa78:	mov	r4, r0
   1fa7c:	bl	154bc <__libc_current_sigrtmin@plt>
   1fa80:	sub	r0, r4, r0
   1fa84:	cmp	r0, #100	; 0x64
   1fa88:	bgt	1fb0c <SignalsPanel_new@@Base+0x128>
   1fa8c:	bl	154bc <__libc_current_sigrtmin@plt>
   1fa90:	ldr	r9, [pc, #208]	; 1fb68 <SignalsPanel_new@@Base+0x184>
   1fa94:	ldr	fp, [pc, #208]	; 1fb6c <SignalsPanel_new@@Base+0x188>
   1fa98:	mov	sl, r0
   1fa9c:	mov	r4, r0
   1faa0:	b	1fb00 <SignalsPanel_new@@Base+0x11c>
   1faa4:	bl	154bc <__libc_current_sigrtmin@plt>
   1faa8:	mov	r3, #16
   1faac:	str	r4, [sp, #4]
   1fab0:	str	fp, [sp]
   1fab4:	mov	r1, r3
   1fab8:	mov	r2, #1
   1fabc:	sub	r6, r4, r0
   1fac0:	str	r6, [sp, #8]
   1fac4:	ldr	r0, [pc, #156]	; 1fb68 <SignalsPanel_new@@Base+0x184>
   1fac8:	bl	15510 <__snprintf_chk@plt>
   1facc:	cmp	r0, #15
   1fad0:	bgt	1fb3c <SignalsPanel_new@@Base+0x158>
   1fad4:	mov	r1, r4
   1fad8:	cmp	r6, #0
   1fadc:	mov	r0, r9
   1fae0:	strbeq	r6, [r9, #11]
   1fae4:	bl	193f4 <ListItem_new@@Base>
   1fae8:	sub	r1, r5, sl
   1faec:	add	r1, r1, r4
   1faf0:	add	r4, r4, #1
   1faf4:	mov	r2, r0
   1faf8:	mov	r0, r7
   1fafc:	bl	1b10c <Panel_set@@Base>
   1fb00:	bl	152b8 <__libc_current_sigrtmax@plt>
   1fb04:	cmp	r0, r4
   1fb08:	bge	1faa4 <SignalsPanel_new@@Base+0xc0>
   1fb0c:	mov	r0, r7
   1fb10:	ldr	r1, [pc, #88]	; 1fb70 <SignalsPanel_new@@Base+0x18c>
   1fb14:	bl	1b048 <Panel_setHeader@@Base>
   1fb18:	mov	r0, r7
   1fb1c:	mov	r1, r8
   1fb20:	bl	1b1e0 <Panel_setSelected@@Base>
   1fb24:	mov	r0, r7
   1fb28:	add	sp, sp, #20
   1fb2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb30:	mov	r5, r6
   1fb34:	mov	r8, #15
   1fb38:	b	1fa74 <SignalsPanel_new@@Base+0x90>
   1fb3c:	mov	r0, #1
   1fb40:	bl	15030 <curs_set@plt>
   1fb44:	bl	14f28 <endwin@plt>
   1fb48:	mov	r1, #0
   1fb4c:	mov	r0, #1
   1fb50:	bl	15114 <err@plt>
   1fb54:	andeq	sl, r2, r4, lsr #13
   1fb58:	andeq	sl, r2, ip, lsr #13
   1fb5c:	andeq	sp, r3, r0, asr sl
   1fb60:	andeq	fp, r2, r4, asr #4
   1fb64:	andeq	fp, r2, r8, asr #4
   1fb68:	andeq	lr, r3, r8, asr r9
   1fb6c:	andeq	sl, r2, r4, asr #13
   1fb70:			; <UNDEFINED> instruction: 0x0002a6b4

0001fb74 <String_cat@@Base>:
   1fb74:	push	{r4, r5, r6, r7, r8, lr}
   1fb78:	mov	r6, r1
   1fb7c:	mov	r8, r0
   1fb80:	bl	152a0 <strlen@plt>
   1fb84:	mov	r4, r0
   1fb88:	mov	r0, r6
   1fb8c:	bl	152a0 <strlen@plt>
   1fb90:	mov	r7, r0
   1fb94:	add	r0, r4, r0
   1fb98:	add	r0, r0, #1
   1fb9c:	bl	23fb0 <xMalloc@@Base>
   1fba0:	mov	r2, r4
   1fba4:	mov	r1, r8
   1fba8:	mov	r5, r0
   1fbac:	bl	1533c <strncpy@plt>
   1fbb0:	add	r2, r7, #1
   1fbb4:	mov	r1, r6
   1fbb8:	add	r0, r5, r4
   1fbbc:	bl	1533c <strncpy@plt>
   1fbc0:	mov	r0, r5
   1fbc4:	pop	{r4, r5, r6, r7, r8, pc}

0001fbc8 <String_trim@@Base>:
   1fbc8:	push	{r4, r5, r6, lr}
   1fbcc:	mov	r4, r0
   1fbd0:	ldrb	r3, [r0]
   1fbd4:	sub	r2, r3, #9
   1fbd8:	cmp	r3, #32
   1fbdc:	cmpne	r2, #1
   1fbe0:	bhi	1fbf8 <String_trim@@Base+0x30>
   1fbe4:	ldrb	r3, [r4, #1]!
   1fbe8:	sub	r2, r3, #9
   1fbec:	cmp	r3, #32
   1fbf0:	cmpne	r2, #1
   1fbf4:	bls	1fbe4 <String_trim@@Base+0x1c>
   1fbf8:	mov	r0, r4
   1fbfc:	bl	152a0 <strlen@plt>
   1fc00:	cmp	r0, #0
   1fc04:	mov	r5, r0
   1fc08:	beq	1fc58 <String_trim@@Base+0x90>
   1fc0c:	sub	r3, r0, #1
   1fc10:	add	r1, r4, r3
   1fc14:	ldrb	r3, [r4, r3]
   1fc18:	sub	r2, r3, #9
   1fc1c:	cmp	r3, #32
   1fc20:	cmpne	r2, #1
   1fc24:	addhi	r0, r0, #1
   1fc28:	bls	1fc4c <String_trim@@Base+0x84>
   1fc2c:	b	1fc5c <String_trim@@Base+0x94>
   1fc30:	ldrb	r2, [r1, #-1]!
   1fc34:	mov	r5, r3
   1fc38:	sub	ip, r2, #9
   1fc3c:	cmp	r2, #32
   1fc40:	cmpne	ip, #1
   1fc44:	bhi	1fc5c <String_trim@@Base+0x94>
   1fc48:	mov	r0, r3
   1fc4c:	subs	r3, r0, #1
   1fc50:	bne	1fc30 <String_trim@@Base+0x68>
   1fc54:	mov	r5, r3
   1fc58:	mov	r0, #1
   1fc5c:	bl	23fb0 <xMalloc@@Base>
   1fc60:	mov	r2, r5
   1fc64:	mov	r1, r4
   1fc68:	bl	1533c <strncpy@plt>
   1fc6c:	mov	r2, #0
   1fc70:	strb	r2, [r0, r5]
   1fc74:	pop	{r4, r5, r6, pc}

0001fc78 <String_eq@@Base>:
   1fc78:	clz	r3, r0
   1fc7c:	clz	r2, r1
   1fc80:	lsr	r3, r3, #5
   1fc84:	lsr	r2, r2, #5
   1fc88:	orrs	ip, r3, r2
   1fc8c:	beq	1fc98 <String_eq@@Base+0x20>
   1fc90:	and	r0, r3, r2
   1fc94:	bx	lr
   1fc98:	push	{r4, lr}
   1fc9c:	bl	14f34 <strcmp@plt>
   1fca0:	clz	r0, r0
   1fca4:	lsr	r0, r0, #5
   1fca8:	pop	{r4, pc}

0001fcac <String_split@@Base>:
   1fcac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fcb0:	mov	r6, #0
   1fcb4:	sub	sp, sp, #12
   1fcb8:	mov	r5, r0
   1fcbc:	mov	fp, r1
   1fcc0:	str	r6, [r2]
   1fcc4:	mov	r1, #4
   1fcc8:	mov	r0, #10
   1fccc:	str	r2, [sp]
   1fcd0:	bl	23fd8 <xCalloc@@Base>
   1fcd4:	mov	sl, #10
   1fcd8:	mov	r9, r0
   1fcdc:	b	1fce4 <String_split@@Base+0x38>
   1fce0:	mov	r6, r7
   1fce4:	mov	r1, fp
   1fce8:	mov	r0, r5
   1fcec:	bl	152c4 <strchr@plt>
   1fcf0:	add	r7, r6, #1
   1fcf4:	lsl	r3, r6, #2
   1fcf8:	cmp	r0, #0
   1fcfc:	sub	r4, r0, r5
   1fd00:	add	r8, r4, #1
   1fd04:	mov	r0, r8
   1fd08:	beq	1fd4c <String_split@@Base+0xa0>
   1fd0c:	bl	23fb0 <xMalloc@@Base>
   1fd10:	mov	r2, r4
   1fd14:	mov	r1, r5
   1fd18:	bl	1533c <strncpy@plt>
   1fd1c:	mov	r2, #0
   1fd20:	cmp	sl, r7
   1fd24:	add	r5, r5, r8
   1fd28:	strb	r2, [r0, r4]
   1fd2c:	str	r0, [r9, r6, lsl #2]
   1fd30:	bne	1fce0 <String_split@@Base+0x34>
   1fd34:	add	sl, r6, #11
   1fd38:	mov	r0, r9
   1fd3c:	lsl	r1, sl, #2
   1fd40:	bl	2400c <xRealloc@@Base>
   1fd44:	mov	r9, r0
   1fd48:	b	1fce0 <String_split@@Base+0x34>
   1fd4c:	ldrb	r2, [r5]
   1fd50:	lsl	r4, r7, #2
   1fd54:	cmp	r2, #0
   1fd58:	beq	1fd98 <String_split@@Base+0xec>
   1fd5c:	mov	r0, r5
   1fd60:	str	r3, [sp, #4]
   1fd64:	bl	152a0 <strlen@plt>
   1fd68:	mov	r6, r7
   1fd6c:	add	r7, r0, #1
   1fd70:	mov	r0, r7
   1fd74:	bl	23fb0 <xMalloc@@Base>
   1fd78:	mov	r2, r7
   1fd7c:	mov	r1, r5
   1fd80:	mov	r8, r0
   1fd84:	bl	1533c <strncpy@plt>
   1fd88:	ldr	r3, [sp, #4]
   1fd8c:	str	r8, [r9, r3]
   1fd90:	mov	r3, r4
   1fd94:	add	r4, r4, #4
   1fd98:	mov	r1, r4
   1fd9c:	mov	r0, r9
   1fda0:	str	r3, [sp, #4]
   1fda4:	bl	2400c <xRealloc@@Base>
   1fda8:	ldr	r3, [sp, #4]
   1fdac:	mov	r1, #0
   1fdb0:	str	r1, [r0, r3]
   1fdb4:	ldr	r3, [sp]
   1fdb8:	str	r6, [r3]
   1fdbc:	add	sp, sp, #12
   1fdc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001fdc4 <String_freeArray@@Base>:
   1fdc4:	push	{r4, r5, r6, lr}
   1fdc8:	subs	r5, r0, #0
   1fdcc:	popeq	{r4, r5, r6, pc}
   1fdd0:	ldr	r0, [r5]
   1fdd4:	cmp	r0, #0
   1fdd8:	beq	1fdf0 <String_freeArray@@Base+0x2c>
   1fddc:	mov	r4, r5
   1fde0:	bl	14fa0 <free@plt>
   1fde4:	ldr	r0, [r4, #4]!
   1fde8:	cmp	r0, #0
   1fdec:	bne	1fde0 <String_freeArray@@Base+0x1c>
   1fdf0:	mov	r0, r5
   1fdf4:	pop	{r4, r5, r6, lr}
   1fdf8:	b	14fa0 <free@plt>

0001fdfc <String_getToken@@Base>:
   1fdfc:	push	{r4, r5, r6, r7, r8, lr}
   1fe00:	sub	sp, sp, #56	; 0x38
   1fe04:	ldr	r4, [pc, #244]	; 1ff00 <String_getToken@@Base+0x104>
   1fe08:	mov	r5, r1
   1fe0c:	mov	r8, r0
   1fe10:	ldr	r3, [r4]
   1fe14:	str	r3, [sp, #52]	; 0x34
   1fe18:	bl	152a0 <strlen@plt>
   1fe1c:	uxth	r0, r0
   1fe20:	cmp	r0, #0
   1fe24:	moveq	r1, r0
   1fe28:	beq	1fecc <String_getToken@@Base+0xd0>
   1fe2c:	sub	r0, r0, #1
   1fe30:	mov	r6, #0
   1fe34:	uxtah	r7, r8, r0
   1fe38:	mov	lr, r6
   1fe3c:	sub	r0, r8, #1
   1fe40:	mov	r2, r6
   1fe44:	b	1fe58 <String_getToken@@Base+0x5c>
   1fe48:	cmp	ip, #32
   1fe4c:	bne	1fe7c <String_getToken@@Base+0x80>
   1fe50:	cmp	r7, r0
   1fe54:	beq	1fecc <String_getToken@@Base+0xd0>
   1fe58:	ldrb	ip, [r0, #1]!
   1fe5c:	eor	r3, r2, #1
   1fe60:	mov	r1, r6
   1fe64:	subs	r2, ip, #32
   1fe68:	movne	r2, #1
   1fe6c:	tst	r2, r3
   1fe70:	addne	lr, lr, #1
   1fe74:	uxthne	lr, lr
   1fe78:	beq	1fe48 <String_getToken@@Base+0x4c>
   1fe7c:	subs	r3, ip, #10
   1fe80:	movne	r3, #1
   1fe84:	cmp	ip, #0
   1fe88:	moveq	r3, #0
   1fe8c:	cmp	ip, #255	; 0xff
   1fe90:	moveq	r3, #0
   1fe94:	andne	r3, r3, #1
   1fe98:	cmp	r5, lr
   1fe9c:	movne	r3, #0
   1fea0:	andeq	r3, r3, #1
   1fea4:	cmp	r3, #0
   1fea8:	beq	1fe50 <String_getToken@@Base+0x54>
   1feac:	add	r1, r6, #1
   1feb0:	add	r3, sp, #56	; 0x38
   1feb4:	add	r3, r3, r6
   1feb8:	cmp	r7, r0
   1febc:	uxth	r6, r1
   1fec0:	mov	r1, r6
   1fec4:	strb	ip, [r3, #-56]	; 0xffffffc8
   1fec8:	bne	1fe58 <String_getToken@@Base+0x5c>
   1fecc:	add	r3, sp, #56	; 0x38
   1fed0:	add	r1, r3, r1
   1fed4:	mov	r0, sp
   1fed8:	mov	r3, #0
   1fedc:	strb	r3, [r1, #-56]	; 0xffffffc8
   1fee0:	bl	24034 <xStrdup@@Base>
   1fee4:	ldr	r2, [sp, #52]	; 0x34
   1fee8:	ldr	r3, [r4]
   1feec:	cmp	r2, r3
   1fef0:	bne	1fefc <String_getToken@@Base+0x100>
   1fef4:	add	sp, sp, #56	; 0x38
   1fef8:	pop	{r4, r5, r6, r7, r8, pc}
   1fefc:	bl	15084 <__stack_chk_fail@plt>
   1ff00:			; <UNDEFINED> instruction: 0x0003ccb8

0001ff04 <String_readLine@@Base>:
   1ff04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ff08:	mov	r8, r0
   1ff0c:	ldr	r0, [pc, #144]	; 1ffa4 <String_readLine@@Base+0xa0>
   1ff10:	bl	23fb0 <xMalloc@@Base>
   1ff14:	ldr	r9, [pc, #136]	; 1ffa4 <String_readLine@@Base+0xa0>
   1ff18:	mov	r6, #1024	; 0x400
   1ff1c:	mov	r4, r0
   1ff20:	mov	r5, r0
   1ff24:	b	1ff5c <String_readLine@@Base+0x58>
   1ff28:	bl	15444 <strrchr@plt>
   1ff2c:	subs	r3, r0, #0
   1ff30:	mov	r0, r8
   1ff34:	bne	1ff94 <String_readLine@@Base+0x90>
   1ff38:	bl	1527c <feof@plt>
   1ff3c:	add	r1, r7, #1
   1ff40:	cmp	r0, #0
   1ff44:	mov	r0, r4
   1ff48:	bne	1ff8c <String_readLine@@Base+0x88>
   1ff4c:	bl	2400c <xRealloc@@Base>
   1ff50:	add	r5, r0, r6
   1ff54:	mov	r4, r0
   1ff58:	mov	r6, r7
   1ff5c:	mov	r1, r9
   1ff60:	mov	r2, r8
   1ff64:	mov	r0, r5
   1ff68:	bl	14fb8 <fgets@plt>
   1ff6c:	add	r7, r6, #1024	; 0x400
   1ff70:	mov	r1, #10
   1ff74:	subs	sl, r0, #0
   1ff78:	mov	r0, r5
   1ff7c:	bne	1ff28 <String_readLine@@Base+0x24>
   1ff80:	mov	r0, r4
   1ff84:	bl	14fa0 <free@plt>
   1ff88:	mov	r4, sl
   1ff8c:	mov	r0, r4
   1ff90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ff94:	mov	r2, #0
   1ff98:	strb	r2, [r3]
   1ff9c:	mov	r0, r4
   1ffa0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ffa4:	andeq	r0, r0, r1, lsl #8
   1ffa8:	push	{r4, r5, r6, lr}
   1ffac:	mov	r6, r0
   1ffb0:	mov	r5, r1
   1ffb4:	mov	r4, r2
   1ffb8:	bl	24540 <Platform_setSwapValues@@Base>
   1ffbc:	ldr	r3, [r6, #32]
   1ffc0:	mov	r2, r4
   1ffc4:	mov	r0, r5
   1ffc8:	vldr	d7, [r3]
   1ffcc:	vcvt.u32.f64	s15, d7
   1ffd0:	vmov	r1, s15
   1ffd4:	bl	1a518 <Meter_humanUnit@@Base>
   1ffd8:	sub	r4, r4, r0
   1ffdc:	cmp	r4, #0
   1ffe0:	pople	{r4, r5, r6, pc}
   1ffe4:	mov	r3, #47	; 0x2f
   1ffe8:	strb	r3, [r5, r0]
   1ffec:	vldr	d7, [r6, #40]	; 0x28
   1fff0:	add	r0, r5, r0
   1fff4:	sub	r2, r4, #1
   1fff8:	add	r0, r0, #1
   1fffc:	vcvt.u32.f64	s15, d7
   20000:	pop	{r4, r5, r6, lr}
   20004:	vmov	r1, s15
   20008:	b	1a518 <Meter_humanUnit@@Base>
   2000c:	push	{r4, r5, r6, r7, lr}
   20010:	mov	r4, r1
   20014:	ldr	r5, [pc, #176]	; 200cc <String_readLine@@Base+0x1c8>
   20018:	ldr	r6, [pc, #176]	; 200d0 <String_readLine@@Base+0x1cc>
   2001c:	sub	sp, sp, #60	; 0x3c
   20020:	ldr	r2, [r5]
   20024:	ldr	r3, [r6]
   20028:	mov	r7, r0
   2002c:	ldr	r1, [r2, #44]	; 0x2c
   20030:	mov	r0, r4
   20034:	ldr	r2, [pc, #152]	; 200d4 <String_readLine@@Base+0x1d0>
   20038:	str	r3, [sp, #52]	; 0x34
   2003c:	bl	1dedc <RichString_write@@Base>
   20040:	vldr	d7, [r7, #40]	; 0x28
   20044:	mov	r2, #50	; 0x32
   20048:	mov	r0, sp
   2004c:	vcvt.u32.f64	s15, d7
   20050:	vmov	r1, s15
   20054:	bl	1a518 <Meter_humanUnit@@Base>
   20058:	ldr	r3, [r5]
   2005c:	mov	r2, sp
   20060:	mov	r0, r4
   20064:	ldr	r1, [r3, #48]	; 0x30
   20068:	bl	1dc64 <RichString_append@@Base>
   2006c:	ldr	r3, [r7, #32]
   20070:	mov	r2, #50	; 0x32
   20074:	mov	r0, sp
   20078:	vldr	d7, [r3]
   2007c:	vcvt.u32.f64	s15, d7
   20080:	vmov	r1, s15
   20084:	bl	1a518 <Meter_humanUnit@@Base>
   20088:	ldr	r3, [r5]
   2008c:	mov	r0, r4
   20090:	ldr	r2, [pc, #64]	; 200d8 <String_readLine@@Base+0x1d4>
   20094:	ldr	r1, [r3, #44]	; 0x2c
   20098:	bl	1dc64 <RichString_append@@Base>
   2009c:	ldr	r3, [r5]
   200a0:	mov	r2, sp
   200a4:	mov	r0, r4
   200a8:	ldr	r1, [r3, #48]	; 0x30
   200ac:	bl	1dc64 <RichString_append@@Base>
   200b0:	ldr	r2, [sp, #52]	; 0x34
   200b4:	ldr	r3, [r6]
   200b8:	cmp	r2, r3
   200bc:	bne	200c8 <String_readLine@@Base+0x1c4>
   200c0:	add	sp, sp, #60	; 0x3c
   200c4:	pop	{r4, r5, r6, r7, pc}
   200c8:	bl	15084 <__stack_chk_fail@plt>
   200cc:	muleq	r3, r8, r1
   200d0:			; <UNDEFINED> instruction: 0x0003ccb8
   200d4:	andeq	ip, r2, r8, asr r6
   200d8:	muleq	r2, r4, fp
   200dc:	ldr	ip, [r0, #28]
   200e0:	push	{r4, r5, r6, r7, lr}
   200e4:	mov	r5, r0
   200e8:	ldr	lr, [ip, #52]	; 0x34
   200ec:	mov	r4, r2
   200f0:	ldr	r2, [r0, #32]
   200f4:	ldr	r0, [ip, #40]	; 0x28
   200f8:	ldr	r3, [ip, #128]	; 0x80
   200fc:	sub	lr, r0, lr
   20100:	ldr	r0, [ip, #48]	; 0x30
   20104:	ldr	r6, [ip, #44]	; 0x2c
   20108:	sub	lr, lr, r0
   2010c:	cmp	r3, r6
   20110:	vmov	s15, lr
   20114:	movge	r3, r6
   20118:	vldr	s11, [ip, #40]	; 0x28
   2011c:	sub	sp, sp, #20
   20120:	vcvt.f64.s32	d6, s15
   20124:	vldr	s15, [ip, #52]	; 0x34
   20128:	vcvt.f64.s32	d5, s11
   2012c:	vcvt.f64.s32	d3, s15
   20130:	vmov	s15, r0
   20134:	mov	r0, r1
   20138:	vstr	d6, [r2, #16]
   2013c:	mov	r1, r4
   20140:	vcvt.f64.s32	d4, s15
   20144:	vmov	s15, r3
   20148:	ldr	r3, [ip]
   2014c:	vstr	d3, [r2]
   20150:	vcvt.f64.s32	d7, s15
   20154:	ldrb	r3, [r3, #63]	; 0x3f
   20158:	vstr	d4, [r2, #8]
   2015c:	vstr	d7, [r2, #24]
   20160:	vldr	d6, [r5, #40]	; 0x28
   20164:	vcmpe.f64	d5, d6
   20168:	vmrs	APSR_nzcv, fpscr
   2016c:	vstrgt	d5, [r5, #40]	; 0x28
   20170:	vldrgt	d7, [r2, #24]
   20174:	cmp	r3, #0
   20178:	movne	r6, #0
   2017c:	ldrdeq	r6, [r2]
   20180:	movne	r7, #0
   20184:	vcvt.s32.f64	s14, d7
   20188:	strd	r6, [r2]
   2018c:	vldr	d6, [r5, #40]	; 0x28
   20190:	ldr	r3, [pc, #64]	; 201d8 <String_readLine@@Base+0x2d4>
   20194:	mov	r2, #1
   20198:	str	r3, [sp]
   2019c:	vcvt.s32.f64	s12, d6
   201a0:	mvn	r3, #0
   201a4:	vstr	s14, [sp, #4]
   201a8:	vstr	s12, [sp, #8]
   201ac:	bl	15510 <__snprintf_chk@plt>
   201b0:	cmp	r4, r0
   201b4:	ble	201c0 <String_readLine@@Base+0x2bc>
   201b8:	add	sp, sp, #20
   201bc:	pop	{r4, r5, r6, r7, pc}
   201c0:	mov	r0, #1
   201c4:	bl	15030 <curs_set@plt>
   201c8:	bl	14f28 <endwin@plt>
   201cc:	mov	r1, #0
   201d0:	mov	r0, #1
   201d4:	bl	15114 <err@plt>
   201d8:	ldrdeq	sl, [r2], -ip
   201dc:	ldr	r3, [r0, #32]
   201e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201e4:	mov	r6, r0
   201e8:	vldr	d7, [r3, #16]
   201ec:	ldr	r9, [pc, #456]	; 203bc <String_readLine@@Base+0x4b8>
   201f0:	ldr	r0, [r0, #28]
   201f4:	sub	sp, sp, #36	; 0x24
   201f8:	vcvt.s32.f64	s14, d7
   201fc:	ldr	r2, [r9]
   20200:	ldr	r5, [pc, #440]	; 203c0 <String_readLine@@Base+0x4bc>
   20204:	ldr	r8, [pc, #440]	; 203c4 <String_readLine@@Base+0x4c0>
   20208:	mov	r3, #20
   2020c:	ldr	r7, [r0]
   20210:	mov	r4, r1
   20214:	str	r2, [sp, #28]
   20218:	mov	r1, r3
   2021c:	vstr	s14, [sp, #4]
   20220:	mov	r2, #1
   20224:	add	r0, sp, #8
   20228:	str	r8, [sp]
   2022c:	bl	15510 <__snprintf_chk@plt>
   20230:	ldr	r3, [r5]
   20234:	add	r2, sp, #8
   20238:	mov	r0, r4
   2023c:	ldr	r1, [r3, #48]	; 0x30
   20240:	bl	1dedc <RichString_write@@Base>
   20244:	ldr	r3, [r5]
   20248:	ldrb	r2, [r7, #67]	; 0x43
   2024c:	ldr	r1, [r3, #44]	; 0x2c
   20250:	cmp	r2, #0
   20254:	ldr	sl, [r3, #48]	; 0x30
   20258:	moveq	fp, r1
   2025c:	ldrne	sl, [r3, #116]	; 0x74
   20260:	ldrne	fp, [r3, #112]	; 0x70
   20264:	ldrb	r3, [r7, #64]	; 0x40
   20268:	cmp	r3, #0
   2026c:	beq	202f0 <String_readLine@@Base+0x3ec>
   20270:	ldrb	r3, [r7, #63]	; 0x3f
   20274:	cmp	r3, #0
   20278:	beq	20358 <String_readLine@@Base+0x454>
   2027c:	ldr	r2, [pc, #324]	; 203c8 <String_readLine@@Base+0x4c4>
   20280:	mov	r0, r4
   20284:	bl	1dc64 <RichString_append@@Base>
   20288:	ldr	r2, [r6, #32]
   2028c:	mov	r3, #20
   20290:	mov	r1, r3
   20294:	vldr	d7, [r2, #24]
   20298:	add	r0, sp, #8
   2029c:	mov	r2, #1
   202a0:	str	r8, [sp]
   202a4:	vcvt.s32.f64	s14, d7
   202a8:	vstr	s14, [sp, #4]
   202ac:	bl	15510 <__snprintf_chk@plt>
   202b0:	ldr	r3, [r5]
   202b4:	add	r2, sp, #8
   202b8:	mov	r0, r4
   202bc:	ldr	r1, [r3, #64]	; 0x40
   202c0:	bl	1dc64 <RichString_append@@Base>
   202c4:	ldr	r3, [r5]
   202c8:	ldr	r2, [pc, #252]	; 203cc <String_readLine@@Base+0x4c8>
   202cc:	mov	r0, r4
   202d0:	ldr	r1, [r3, #44]	; 0x2c
   202d4:	bl	1dc64 <RichString_append@@Base>
   202d8:	ldr	r2, [sp, #28]
   202dc:	ldr	r3, [r9]
   202e0:	cmp	r2, r3
   202e4:	bne	203b8 <String_readLine@@Base+0x4b4>
   202e8:	add	sp, sp, #36	; 0x24
   202ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   202f0:	ldr	r2, [pc, #216]	; 203d0 <String_readLine@@Base+0x4cc>
   202f4:	mov	r0, r4
   202f8:	bl	1dc64 <RichString_append@@Base>
   202fc:	ldr	r2, [r6, #32]
   20300:	mov	r3, #20
   20304:	mov	r1, r3
   20308:	vldr	d7, [r2, #8]
   2030c:	add	r0, sp, #8
   20310:	mov	r2, #1
   20314:	str	r8, [sp]
   20318:	vcvt.s32.f64	s14, d7
   2031c:	vstr	s14, [sp, #4]
   20320:	bl	15510 <__snprintf_chk@plt>
   20324:	add	r2, sp, #8
   20328:	mov	r1, sl
   2032c:	mov	r0, r4
   20330:	bl	1dc64 <RichString_append@@Base>
   20334:	ldr	r2, [pc, #152]	; 203d4 <String_readLine@@Base+0x4d0>
   20338:	mov	r1, fp
   2033c:	mov	r0, r4
   20340:	bl	1dc64 <RichString_append@@Base>
   20344:	ldrb	r2, [r7, #63]	; 0x3f
   20348:	ldr	r3, [r5]
   2034c:	cmp	r2, #0
   20350:	ldr	r1, [r3, #44]	; 0x2c
   20354:	bne	2027c <String_readLine@@Base+0x378>
   20358:	ldr	r2, [pc, #112]	; 203d0 <String_readLine@@Base+0x4cc>
   2035c:	mov	r0, r4
   20360:	bl	1dc64 <RichString_append@@Base>
   20364:	ldr	r2, [r6, #32]
   20368:	mov	r3, #20
   2036c:	mov	r1, r3
   20370:	vldr	d7, [r2]
   20374:	add	r0, sp, #8
   20378:	mov	r2, #1
   2037c:	str	r8, [sp]
   20380:	vcvt.s32.f64	s14, d7
   20384:	vstr	s14, [sp, #4]
   20388:	bl	15510 <__snprintf_chk@plt>
   2038c:	mov	r1, sl
   20390:	add	r2, sp, #8
   20394:	mov	r0, r4
   20398:	bl	1dc64 <RichString_append@@Base>
   2039c:	mov	r1, fp
   203a0:	ldr	r2, [pc, #48]	; 203d8 <String_readLine@@Base+0x4d4>
   203a4:	mov	r0, r4
   203a8:	bl	1dc64 <RichString_append@@Base>
   203ac:	ldr	r3, [r5]
   203b0:	ldr	r1, [r3, #44]	; 0x2c
   203b4:	b	2027c <String_readLine@@Base+0x378>
   203b8:	bl	15084 <__stack_chk_fail@plt>
   203bc:			; <UNDEFINED> instruction: 0x0003ccb8
   203c0:	muleq	r3, r8, r1
   203c4:	andeq	sl, r2, r4, ror #13
   203c8:	strdeq	sl, [r2], -r4
   203cc:	strdeq	sl, [r2], -r8
   203d0:	andeq	sl, r2, r8, ror #13
   203d4:	andeq	sl, r2, r4, lsl #14
   203d8:	andeq	sl, r2, ip, ror #13
   203dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   203e0:	sub	sp, sp, #68	; 0x44
   203e4:	ldr	r5, [pc, #396]	; 20578 <String_readLine@@Base+0x674>
   203e8:	mov	r7, r0
   203ec:	mov	r6, r1
   203f0:	ldr	r3, [r5]
   203f4:	mov	r4, r2
   203f8:	str	r3, [sp, #60]	; 0x3c
   203fc:	bl	240d4 <Platform_getUptime@@Base>
   20400:	cmn	r0, #1
   20404:	beq	20544 <String_readLine@@Base+0x640>
   20408:	ldr	r2, [pc, #364]	; 2057c <String_readLine@@Base+0x678>
   2040c:	asr	r1, r0, #31
   20410:	ldr	ip, [pc, #360]	; 20580 <String_readLine@@Base+0x67c>
   20414:	smull	r2, r3, r0, r2
   20418:	smull	r8, r9, r0, ip
   2041c:	ldr	r2, [pc, #352]	; 20584 <String_readLine@@Base+0x680>
   20420:	add	lr, r0, r3
   20424:	add	sl, r0, r9
   20428:	rsb	lr, r1, lr, asr #16
   2042c:	rsb	sl, r1, sl, asr #5
   20430:	vmov	s15, lr
   20434:	smull	r8, r9, sl, ip
   20438:	vcvt.f64.s32	d7, s15
   2043c:	ldr	ip, [r7, #32]
   20440:	smull	r2, r3, r0, r2
   20444:	ldr	r2, [pc, #316]	; 20588 <String_readLine@@Base+0x684>
   20448:	add	r3, r0, r3
   2044c:	asr	r8, sl, #31
   20450:	vstr	d7, [ip]
   20454:	rsb	r1, r1, r3, asr #11
   20458:	add	ip, sl, r9
   2045c:	smull	r2, r3, r1, r2
   20460:	vldr	d6, [r7, #40]	; 0x28
   20464:	asr	r9, r1, #31
   20468:	vcmpe.f64	d7, d6
   2046c:	rsb	r8, r8, ip, asr #5
   20470:	rsb	r9, r9, r3, asr #2
   20474:	mov	fp, sl
   20478:	vmrs	APSR_nzcv, fpscr
   2047c:	rsb	sl, sl, sl, lsl #4
   20480:	rsb	r8, r8, r8, lsl #4
   20484:	add	r9, r9, r9, lsl #1
   20488:	vstrgt	d7, [r7, #40]	; 0x28
   2048c:	cmp	lr, #100	; 0x64
   20490:	sub	sl, r0, sl, lsl #2
   20494:	sub	r8, fp, r8, lsl #2
   20498:	sub	r9, r1, r9, lsl #3
   2049c:	bgt	2053c <String_readLine@@Base+0x638>
   204a0:	cmp	lr, #1
   204a4:	bgt	20518 <String_readLine@@Base+0x614>
   204a8:	ldreq	r3, [pc, #220]	; 2058c <String_readLine@@Base+0x688>
   204ac:	addeq	r7, sp, #28
   204b0:	addne	r7, sp, #64	; 0x40
   204b4:	ldmeq	r3, {r0, r1}
   204b8:	movne	r3, #0
   204bc:	strbne	r3, [r7, #-36]!	; 0xffffffdc
   204c0:	stmeq	r7, {r0, r1}
   204c4:	ldr	r3, [pc, #196]	; 20590 <String_readLine@@Base+0x68c>
   204c8:	mov	r1, r4
   204cc:	str	r3, [sp]
   204d0:	str	sl, [sp, #16]
   204d4:	mvn	r3, #0
   204d8:	str	r8, [sp, #12]
   204dc:	stmib	sp, {r7, r9}
   204e0:	mov	r0, r6
   204e4:	mov	r2, #1
   204e8:	bl	15510 <__snprintf_chk@plt>
   204ec:	cmp	r4, r0
   204f0:	movgt	r4, #0
   204f4:	movle	r4, #1
   204f8:	orrs	r3, r4, r0, lsr #31
   204fc:	bne	2055c <String_readLine@@Base+0x658>
   20500:	ldr	r2, [sp, #60]	; 0x3c
   20504:	ldr	r3, [r5]
   20508:	cmp	r2, r3
   2050c:	bne	20574 <String_readLine@@Base+0x670>
   20510:	add	sp, sp, #68	; 0x44
   20514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20518:	ldr	r2, [pc, #116]	; 20594 <String_readLine@@Base+0x690>
   2051c:	add	r7, sp, #28
   20520:	mov	r3, #32
   20524:	stm	sp, {r2, lr}
   20528:	mov	r0, r7
   2052c:	mov	r1, r3
   20530:	mov	r2, #1
   20534:	bl	15510 <__snprintf_chk@plt>
   20538:	b	204c4 <String_readLine@@Base+0x5c0>
   2053c:	ldr	r2, [pc, #84]	; 20598 <String_readLine@@Base+0x694>
   20540:	b	2051c <String_readLine@@Base+0x618>
   20544:	mov	r0, r6
   20548:	ldr	r2, [pc, #76]	; 2059c <String_readLine@@Base+0x698>
   2054c:	mov	r1, r4
   20550:	bl	1530c <snprintf@plt>
   20554:	cmp	r4, #9
   20558:	bgt	20500 <String_readLine@@Base+0x5fc>
   2055c:	mov	r0, #1
   20560:	bl	15030 <curs_set@plt>
   20564:	bl	14f28 <endwin@plt>
   20568:	mov	r1, #0
   2056c:	mov	r0, #1
   20570:	bl	15114 <err@plt>
   20574:	bl	15084 <__stack_chk_fail@plt>
   20578:			; <UNDEFINED> instruction: 0x0003ccb8
   2057c:	eorgt	r4, lr, #29360128	; 0x1c00000
   20580:	stmhi	r8, {r0, r3, r7, fp, pc}
   20584:			; <UNDEFINED> instruction: 0x91a2b3c5
   20588:	bcs	feacb03c <__bss_end__@@Base+0xfea8bc9c>
   2058c:	andeq	sl, r2, ip, lsr r7
   20590:	andeq	sl, r2, r4, asr #14
   20594:	andeq	sl, r2, r0, lsr r7
   20598:	andeq	sl, r2, r8, asr r7
   2059c:	andeq	sl, r2, r4, lsr #14

000205a0 <TraceScreen_delete@@Base>:
   205a0:	push	{r4, lr}
   205a4:	mov	r4, r0
   205a8:	ldr	r0, [r0, #36]	; 0x24
   205ac:	cmp	r0, #0
   205b0:	ble	205d4 <TraceScreen_delete@@Base+0x34>
   205b4:	mov	r1, #15
   205b8:	bl	1524c <kill@plt>
   205bc:	mov	r2, #0
   205c0:	mov	r1, r2
   205c4:	ldr	r0, [r4, #36]	; 0x24
   205c8:	bl	15150 <waitpid@plt>
   205cc:	ldr	r0, [r4, #40]	; 0x28
   205d0:	bl	153fc <fclose@plt>
   205d4:	bl	177d0 <CRT_enableDelay@@Base>
   205d8:	mov	r0, r4
   205dc:	bl	23aa4 <InfoScreen_done@@Base>
   205e0:	pop	{r4, lr}
   205e4:	b	14fa0 <free@plt>

000205e8 <TraceScreen_draw@@Base>:
   205e8:	push	{r4, r5, lr}
   205ec:	mov	r5, r0
   205f0:	ldr	r4, [pc, #136]	; 20680 <TraceScreen_draw@@Base+0x98>
   205f4:	mov	r2, #0
   205f8:	sub	sp, sp, #12
   205fc:	ldr	r0, [r4]
   20600:	mov	r1, r2
   20604:	cmp	r0, #0
   20608:	ldrne	r3, [pc, #116]	; 20684 <TraceScreen_draw@@Base+0x9c>
   2060c:	ldrne	r3, [r3]
   20610:	ldrne	r3, [r3, #20]
   20614:	strne	r3, [r0, #16]
   20618:	bl	15360 <wmove@plt>
   2061c:	cmn	r0, #1
   20620:	beq	20638 <TraceScreen_draw@@Base+0x50>
   20624:	ldr	r3, [pc, #92]	; 20688 <TraceScreen_draw@@Base+0xa0>
   20628:	mov	r1, #32
   2062c:	ldr	r0, [r4]
   20630:	ldr	r2, [r3]
   20634:	bl	15048 <whline@plt>
   20638:	ldr	r2, [r5, #4]
   2063c:	mov	r1, #0
   20640:	mov	r0, r1
   20644:	ldr	r3, [r2, #16]
   20648:	ldr	r2, [r2, #28]
   2064c:	str	r2, [sp]
   20650:	ldr	r2, [pc, #52]	; 2068c <TraceScreen_draw@@Base+0xa4>
   20654:	bl	152d0 <mvprintw@plt>
   20658:	ldr	r3, [r4]
   2065c:	ldr	r0, [r5, #16]
   20660:	cmp	r3, #0
   20664:	ldrne	r2, [pc, #24]	; 20684 <TraceScreen_draw@@Base+0x9c>
   20668:	ldrne	r2, [r2]
   2066c:	ldrne	r2, [r2, #4]
   20670:	strne	r2, [r3, #16]
   20674:	add	sp, sp, #12
   20678:	pop	{r4, r5, lr}
   2067c:	b	220f8 <IncSet_drawBar@@Base>
   20680:	andeq	lr, r3, r8, lsl #15
   20684:	muleq	r3, r8, r1
   20688:	andeq	lr, r3, ip, ror r7
   2068c:	andeq	sl, r2, r0, lsr #15

00020690 <TraceScreen_updateTrace@@Base>:
   20690:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20694:	sub	sp, sp, #1152	; 0x480
   20698:	ldr	r6, [pc, #440]	; 20858 <TraceScreen_updateTrace@@Base+0x1c8>
   2069c:	mov	r5, r0
   206a0:	add	r3, sp, #12
   206a4:	ldr	r1, [r6]
   206a8:	add	r2, sp, #140	; 0x8c
   206ac:	mov	r4, #0
   206b0:	str	r1, [sp, #1148]	; 0x47c
   206b4:	str	r4, [r3, #4]!
   206b8:	cmp	r2, r3
   206bc:	bne	206b4 <TraceScreen_updateTrace@@Base+0x24>
   206c0:	ldr	r0, [r5, #44]	; 0x2c
   206c4:	bl	150d8 <__fdelt_chk@plt>
   206c8:	ldr	ip, [r5, #44]	; 0x2c
   206cc:	mov	r8, #500	; 0x1f4
   206d0:	rsbs	r3, ip, #0
   206d4:	str	r8, [sp, #12]
   206d8:	add	r8, sp, #1152	; 0x480
   206dc:	and	r3, r3, #31
   206e0:	and	lr, ip, #31
   206e4:	mov	r7, #1
   206e8:	rsbpl	lr, r3, #0
   206ec:	add	r3, sp, #8
   206f0:	str	r3, [sp]
   206f4:	mov	r3, #0
   206f8:	add	r1, sp, #16
   206fc:	mov	r2, r3
   20700:	str	r4, [sp, #8]
   20704:	add	r8, r8, r0, lsl #2
   20708:	add	r0, ip, r7
   2070c:	ldr	ip, [r8, #-1136]	; 0xfffffb90
   20710:	orr	ip, ip, r7, lsl lr
   20714:	str	ip, [r8, #-1136]	; 0xfffffb90
   20718:	bl	15024 <select@plt>
   2071c:	cmp	r0, #0
   20720:	ble	20754 <TraceScreen_updateTrace@@Base+0xc4>
   20724:	ldr	r0, [r5, #44]	; 0x2c
   20728:	bl	150d8 <__fdelt_chk@plt>
   2072c:	ldr	r3, [r5, #44]	; 0x2c
   20730:	rsbs	r2, r3, #0
   20734:	and	r2, r2, #31
   20738:	and	r3, r3, #31
   2073c:	rsbpl	r3, r2, #0
   20740:	add	r2, sp, #1152	; 0x480
   20744:	add	r0, r2, r0, lsl #2
   20748:	ldr	r2, [r0, #-1136]	; 0xfffffb90
   2074c:	ands	r3, r2, r7, lsl r3
   20750:	bne	2076c <TraceScreen_updateTrace@@Base+0xdc>
   20754:	ldr	r2, [sp, #1148]	; 0x47c
   20758:	ldr	r3, [r6]
   2075c:	cmp	r2, r3
   20760:	bne	20854 <TraceScreen_updateTrace@@Base+0x1c4>
   20764:	add	sp, sp, #1152	; 0x480
   20768:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2076c:	mov	r1, r7
   20770:	add	r0, sp, #144	; 0x90
   20774:	ldr	r3, [r5, #40]	; 0x28
   20778:	mov	r2, #1000	; 0x3e8
   2077c:	bl	15168 <fread@plt>
   20780:	subs	r7, r0, #0
   20784:	beq	20754 <TraceScreen_updateTrace@@Base+0xc4>
   20788:	ldrb	r3, [r5, #24]
   2078c:	cmp	r3, #0
   20790:	beq	20754 <TraceScreen_updateTrace@@Base+0xc4>
   20794:	add	r3, sp, #1152	; 0x480
   20798:	add	r8, r3, r7
   2079c:	cmp	r7, #0
   207a0:	strb	r4, [r8, #-1008]	; 0xfffffc10
   207a4:	addle	r1, sp, #144	; 0x90
   207a8:	ble	207f8 <TraceScreen_updateTrace@@Base+0x168>
   207ac:	add	r4, sp, #144	; 0x90
   207b0:	add	sl, r4, r7
   207b4:	mov	r1, r4
   207b8:	mov	r9, #0
   207bc:	b	207c8 <TraceScreen_updateTrace@@Base+0x138>
   207c0:	cmp	r4, sl
   207c4:	beq	207f8 <TraceScreen_updateTrace@@Base+0x168>
   207c8:	ldrb	r3, [r4], #1
   207cc:	cmp	r3, #10
   207d0:	bne	207c0 <TraceScreen_updateTrace@@Base+0x130>
   207d4:	ldrb	r3, [r5, #48]	; 0x30
   207d8:	strb	r9, [r4, #-1]
   207dc:	mov	r0, r5
   207e0:	cmp	r3, #0
   207e4:	beq	20830 <TraceScreen_updateTrace@@Base+0x1a0>
   207e8:	bl	23c2c <InfoScreen_appendLine@@Base>
   207ec:	strb	r9, [r5, #48]	; 0x30
   207f0:	mov	r1, r4
   207f4:	b	207c0 <TraceScreen_updateTrace@@Base+0x130>
   207f8:	add	r3, sp, #144	; 0x90
   207fc:	add	r3, r3, r7
   20800:	cmp	r1, r3
   20804:	bcc	20838 <TraceScreen_updateTrace@@Base+0x1a8>
   20808:	ldrb	r3, [r5, #49]	; 0x31
   2080c:	cmp	r3, #0
   20810:	beq	20754 <TraceScreen_updateTrace@@Base+0xc4>
   20814:	ldr	r4, [r5, #8]
   20818:	mov	r0, r4
   2081c:	bl	1b1d4 <Panel_size@@Base>
   20820:	sub	r1, r0, #1
   20824:	mov	r0, r4
   20828:	bl	1b1e0 <Panel_setSelected@@Base>
   2082c:	b	20754 <TraceScreen_updateTrace@@Base+0xc4>
   20830:	bl	23bc0 <InfoScreen_addLine@@Base>
   20834:	b	207f0 <TraceScreen_updateTrace@@Base+0x160>
   20838:	mov	r0, r5
   2083c:	bl	23bc0 <InfoScreen_addLine@@Base>
   20840:	mov	r2, #0
   20844:	mov	r3, #1
   20848:	strb	r2, [r8, #-1008]	; 0xfffffc10
   2084c:	strb	r3, [r5, #48]	; 0x30
   20850:	b	20808 <TraceScreen_updateTrace@@Base+0x178>
   20854:	bl	15084 <__stack_chk_fail@plt>
   20858:			; <UNDEFINED> instruction: 0x0003ccb8

0002085c <TraceScreen_onKey@@Base>:
   2085c:	cmp	r1, #116	; 0x74
   20860:	push	{r4, r5, r6, lr}
   20864:	mov	r5, r0
   20868:	beq	208d4 <TraceScreen_onKey@@Base+0x78>
   2086c:	ble	20894 <TraceScreen_onKey@@Base+0x38>
   20870:	cmp	r1, #272	; 0x110
   20874:	beq	2089c <TraceScreen_onKey@@Base+0x40>
   20878:	ldr	r3, [pc, #156]	; 2091c <TraceScreen_onKey@@Base+0xc0>
   2087c:	cmp	r1, r3
   20880:	beq	208d4 <TraceScreen_onKey@@Base+0x78>
   20884:	mov	r4, #0
   20888:	strb	r4, [r5, #49]	; 0x31
   2088c:	mov	r0, r4
   20890:	pop	{r4, r5, r6, pc}
   20894:	cmp	r1, #102	; 0x66
   20898:	bne	20884 <TraceScreen_onKey@@Base+0x28>
   2089c:	ldrb	r4, [r5, #49]	; 0x31
   208a0:	eor	r4, r4, #1
   208a4:	cmp	r4, #0
   208a8:	strb	r4, [r5, #49]	; 0x31
   208ac:	moveq	r4, #1
   208b0:	beq	2088c <TraceScreen_onKey@@Base+0x30>
   208b4:	ldr	r5, [r5, #8]
   208b8:	mov	r0, r5
   208bc:	bl	1b1d4 <Panel_size@@Base>
   208c0:	sub	r1, r0, #1
   208c4:	mov	r0, r5
   208c8:	bl	1b1e0 <Panel_setSelected@@Base>
   208cc:	mov	r0, r4
   208d0:	pop	{r4, r5, r6, pc}
   208d4:	ldrb	r3, [r5, #24]
   208d8:	ldr	r1, [r5, #8]
   208dc:	ldr	r0, [pc, #60]	; 20920 <TraceScreen_onKey@@Base+0xc4>
   208e0:	eor	r3, r3, #1
   208e4:	cmp	r3, #0
   208e8:	ldr	r2, [pc, #52]	; 20924 <TraceScreen_onKey@@Base+0xc8>
   208ec:	strb	r3, [r5, #24]
   208f0:	movne	r2, r0
   208f4:	ldr	r0, [r1, #56]	; 0x38
   208f8:	ldr	r1, [pc, #28]	; 2091c <TraceScreen_onKey@@Base+0xc0>
   208fc:	bl	186b4 <FunctionBar_setLabel@@Base>
   20900:	ldr	r3, [r5]
   20904:	mov	r0, r5
   20908:	mov	r4, #1
   2090c:	ldr	r3, [r3, #20]
   20910:	blx	r3
   20914:	mov	r0, r4
   20918:	pop	{r4, r5, r6, pc}
   2091c:	andeq	r0, r0, r1, lsl r1
   20920:			; <UNDEFINED> instruction: 0x0002a7bc
   20924:	andeq	sl, r2, ip, asr #15

00020928 <TraceScreen_new@@Base>:
   20928:	push	{r4, r5, r6, lr}
   2092c:	mov	r5, r0
   20930:	sub	sp, sp, #8
   20934:	mov	r0, #52	; 0x34
   20938:	bl	23fb0 <xMalloc@@Base>
   2093c:	ldr	r1, [pc, #92]	; 209a0 <TraceScreen_new@@Base+0x78>
   20940:	ldr	r2, [pc, #92]	; 209a4 <TraceScreen_new@@Base+0x7c>
   20944:	mov	r3, #0
   20948:	mov	r4, r0
   2094c:	mov	r0, #1
   20950:	strb	r3, [r4, #48]	; 0x30
   20954:	strb	r3, [r4, #49]	; 0x31
   20958:	strb	r0, [r4, #24]
   2095c:	str	r2, [r4]
   20960:	add	r0, r1, #20
   20964:	add	r2, r2, #32
   20968:	bl	184a4 <FunctionBar_new@@Base>
   2096c:	mov	r6, r0
   20970:	bl	177ac <CRT_disableDelay@@Base>
   20974:	ldr	r3, [pc, #44]	; 209a8 <TraceScreen_new@@Base+0x80>
   20978:	ldr	ip, [pc, #44]	; 209ac <TraceScreen_new@@Base+0x84>
   2097c:	mov	r2, r6
   20980:	ldr	r3, [r3]
   20984:	mov	r1, r5
   20988:	mov	r0, r4
   2098c:	sub	r3, r3, #2
   20990:	str	ip, [sp]
   20994:	bl	239fc <InfoScreen_init@@Base>
   20998:	add	sp, sp, #8
   2099c:	pop	{r4, r5, r6, pc}
   209a0:	andeq	sl, r2, r4, ror r7
   209a4:	andeq	sp, r3, r4, lsl #28
   209a8:	andeq	lr, r3, r0, ror r7
   209ac:	andeq	r9, r2, r0, lsl #20

000209b0 <TraceScreen_forkTracer@@Base>:
   209b0:	push	{r4, r5, r6, lr}
   209b4:	sub	sp, sp, #1024	; 0x400
   209b8:	ldr	r5, [pc, #276]	; 20ad4 <TraceScreen_forkTracer@@Base+0x124>
   209bc:	mov	r4, r0
   209c0:	add	r0, r0, #28
   209c4:	ldr	r3, [r5]
   209c8:	str	r3, [sp, #1020]	; 0x3fc
   209cc:	bl	15408 <pipe@plt>
   209d0:	cmn	r0, #1
   209d4:	beq	20a78 <TraceScreen_forkTracer@@Base+0xc8>
   209d8:	bl	1542c <fork@plt>
   209dc:	cmn	r0, #1
   209e0:	mov	r6, r0
   209e4:	str	r0, [r4, #36]	; 0x24
   209e8:	beq	20a78 <TraceScreen_forkTracer@@Base+0xc8>
   209ec:	cmp	r0, #0
   209f0:	bne	20a98 <TraceScreen_forkTracer@@Base+0xe8>
   209f4:	mov	r1, #2
   209f8:	ldr	r0, [r4, #32]
   209fc:	bl	150b4 <dup2@plt>
   20a00:	mov	r2, #2048	; 0x800
   20a04:	mov	r1, #4
   20a08:	ldr	r0, [r4, #32]
   20a0c:	bl	152dc <fcntl@plt>
   20a10:	cmn	r0, #1
   20a14:	beq	20a60 <TraceScreen_forkTracer@@Base+0xb0>
   20a18:	ldr	r1, [r4, #4]
   20a1c:	ldr	r3, [pc, #180]	; 20ad8 <TraceScreen_forkTracer@@Base+0x128>
   20a20:	ldr	r2, [pc, #180]	; 20adc <TraceScreen_forkTracer@@Base+0x12c>
   20a24:	ldr	r1, [r1, #16]
   20a28:	add	r5, sp, #16
   20a2c:	str	r1, [sp, #4]
   20a30:	str	r2, [sp]
   20a34:	mov	r1, r3
   20a38:	mov	r2, #1
   20a3c:	mov	r0, r5
   20a40:	bl	15510 <__snprintf_chk@plt>
   20a44:	ldr	r3, [pc, #148]	; 20ae0 <TraceScreen_forkTracer@@Base+0x130>
   20a48:	ldr	r1, [pc, #148]	; 20ae4 <TraceScreen_forkTracer@@Base+0x134>
   20a4c:	ldr	r2, [pc, #148]	; 20ae8 <TraceScreen_forkTracer@@Base+0x138>
   20a50:	stm	sp, {r3, r5, r6}
   20a54:	mov	r0, r1
   20a58:	ldr	r3, [pc, #140]	; 20aec <TraceScreen_forkTracer@@Base+0x13c>
   20a5c:	bl	14ff4 <execlp@plt>
   20a60:	ldr	r0, [r4, #32]
   20a64:	mov	r2, #75	; 0x4b
   20a68:	ldr	r1, [pc, #128]	; 20af0 <TraceScreen_forkTracer@@Base+0x140>
   20a6c:	bl	153a8 <write@plt>
   20a70:	mov	r0, #1
   20a74:	bl	15264 <exit@plt>
   20a78:	mov	r1, #0
   20a7c:	ldr	r2, [sp, #1020]	; 0x3fc
   20a80:	ldr	r3, [r5]
   20a84:	mov	r0, r1
   20a88:	cmp	r2, r3
   20a8c:	bne	20ad0 <TraceScreen_forkTracer@@Base+0x120>
   20a90:	add	sp, sp, #1024	; 0x400
   20a94:	pop	{r4, r5, r6, pc}
   20a98:	mov	r2, #2048	; 0x800
   20a9c:	mov	r1, #4
   20aa0:	ldr	r0, [r4, #28]
   20aa4:	bl	152dc <fcntl@plt>
   20aa8:	cmn	r0, #1
   20aac:	beq	20a78 <TraceScreen_forkTracer@@Base+0xc8>
   20ab0:	ldr	r1, [pc, #60]	; 20af4 <TraceScreen_forkTracer@@Base+0x144>
   20ab4:	ldr	r0, [r4, #28]
   20ab8:	bl	14ee0 <fdopen@plt>
   20abc:	str	r0, [r4, #40]	; 0x28
   20ac0:	bl	153b4 <fileno@plt>
   20ac4:	mov	r1, #1
   20ac8:	str	r0, [r4, #44]	; 0x2c
   20acc:	b	20a7c <TraceScreen_forkTracer@@Base+0xcc>
   20ad0:	bl	15084 <__stack_chk_fail@plt>
   20ad4:			; <UNDEFINED> instruction: 0x0003ccb8
   20ad8:	andeq	r0, r0, r9, ror #7
   20adc:	andeq	sl, r2, r4, ror #13
   20ae0:	andeq	sl, r2, r4, ror #15
   20ae4:	andeq	sl, r2, r0, asr #31
   20ae8:	andeq	sl, r2, r0, ror #15
   20aec:	ldrdeq	sl, [r2], -ip
   20af0:	andeq	sl, r2, r8, ror #15
   20af4:			; <UNDEFINED> instruction: 0x0002b1b0

00020af8 <UsersTable_new@@Base>:
   20af8:	push	{r4, lr}
   20afc:	mov	r0, #4
   20b00:	bl	23fb0 <xMalloc@@Base>
   20b04:	mov	r1, #1
   20b08:	mov	r4, r0
   20b0c:	mov	r0, #20
   20b10:	bl	18984 <Hashtable_new@@Base>
   20b14:	str	r0, [r4]
   20b18:	mov	r0, r4
   20b1c:	pop	{r4, pc}

00020b20 <UsersTable_delete@@Base>:
   20b20:	push	{r4, lr}
   20b24:	mov	r4, r0
   20b28:	ldr	r0, [r0]
   20b2c:	bl	189c4 <Hashtable_delete@@Base>
   20b30:	mov	r0, r4
   20b34:	pop	{r4, lr}
   20b38:	b	14fa0 <free@plt>

00020b3c <UsersTable_getRef@@Base>:
   20b3c:	push	{r4, r5, r6, lr}
   20b40:	mov	r5, r0
   20b44:	ldr	r0, [r0]
   20b48:	mov	r6, r1
   20b4c:	bl	18b8c <Hashtable_get@@Base>
   20b50:	subs	r4, r0, #0
   20b54:	beq	20b60 <UsersTable_getRef@@Base+0x24>
   20b58:	mov	r0, r4
   20b5c:	pop	{r4, r5, r6, pc}
   20b60:	mov	r0, r6
   20b64:	bl	14f58 <getpwuid@plt>
   20b68:	cmp	r0, #0
   20b6c:	beq	20b58 <UsersTable_getRef@@Base+0x1c>
   20b70:	ldr	r0, [r0]
   20b74:	bl	24034 <xStrdup@@Base>
   20b78:	mov	r1, r6
   20b7c:	mov	r4, r0
   20b80:	mov	r2, r0
   20b84:	ldr	r0, [r5]
   20b88:	bl	18a44 <Hashtable_put@@Base>
   20b8c:	mov	r0, r4
   20b90:	pop	{r4, r5, r6, pc}

00020b94 <UsersTable_foreach@@Base>:
   20b94:	ldr	r0, [r0]
   20b98:	b	18be0 <Hashtable_foreach@@Base>
   20b9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ba0:	sub	sp, sp, #20
   20ba4:	cmp	r1, r2
   20ba8:	str	r3, [sp, #4]
   20bac:	bge	20ca0 <UsersTable_foreach@@Base+0x10c>
   20bb0:	ldr	r6, [pc, #240]	; 20ca8 <UsersTable_foreach@@Base+0x114>
   20bb4:	mov	r8, r1
   20bb8:	mov	r7, r2
   20bbc:	mov	r5, r0
   20bc0:	add	r3, r0, r2, lsl #2
   20bc4:	str	r3, [sp, #8]
   20bc8:	add	r2, r7, r8
   20bcc:	ldr	r0, [sp, #8]
   20bd0:	add	r2, r2, r2, lsr #31
   20bd4:	sub	r3, r8, #-1073741823	; 0xc0000001
   20bd8:	ldr	r1, [r0]
   20bdc:	asr	r2, r2, #1
   20be0:	add	sl, r5, r3, lsl #2
   20be4:	ldr	r9, [r5, r2, lsl #2]
   20be8:	mov	r4, r8
   20bec:	str	r1, [r5, r2, lsl #2]
   20bf0:	mov	fp, r8
   20bf4:	str	r8, [sp, #12]
   20bf8:	mov	r8, r5
   20bfc:	mov	r5, sl
   20c00:	ldr	sl, [sp, #4]
   20c04:	str	r9, [r0]
   20c08:	ldr	r3, [r6]
   20c0c:	mov	r1, r9
   20c10:	add	r3, r3, #1
   20c14:	str	r3, [r6]
   20c18:	ldr	r0, [r5, #4]!
   20c1c:	blx	sl
   20c20:	lsl	r3, r4, #2
   20c24:	add	fp, fp, #1
   20c28:	add	ip, r8, r3
   20c2c:	add	lr, r4, #1
   20c30:	cmp	r0, #0
   20c34:	bgt	20c5c <UsersTable_foreach@@Base+0xc8>
   20c38:	ldr	r0, [r8, r4, lsl #2]
   20c3c:	ldr	r1, [r5]
   20c40:	add	ip, r3, #4
   20c44:	add	r3, r4, #2
   20c48:	str	r0, [r5]
   20c4c:	add	ip, r8, ip
   20c50:	str	r1, [r8, r4, lsl #2]
   20c54:	mov	r4, lr
   20c58:	mov	lr, r3
   20c5c:	cmp	r7, fp
   20c60:	bgt	20c08 <UsersTable_foreach@@Base+0x74>
   20c64:	ldr	r9, [sp, #8]
   20c68:	ldr	r3, [ip]
   20c6c:	mov	r5, r8
   20c70:	ldr	r0, [r9]
   20c74:	ldr	r8, [sp, #12]
   20c78:	str	r0, [ip]
   20c7c:	mov	r1, r8
   20c80:	str	r3, [r9]
   20c84:	mov	r8, lr
   20c88:	sub	r2, r4, #1
   20c8c:	ldr	r3, [sp, #4]
   20c90:	mov	r0, r5
   20c94:	bl	20b9c <UsersTable_foreach@@Base+0x8>
   20c98:	cmp	r7, r8
   20c9c:	bgt	20bc8 <UsersTable_foreach@@Base+0x34>
   20ca0:	add	sp, sp, #20
   20ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20ca8:	andeq	lr, r3, r8, ror #18
   20cac:	ldr	r1, [r0, #16]
   20cb0:	ldr	r3, [r0, #8]
   20cb4:	cmp	r1, r3
   20cb8:	bxlt	lr
   20cbc:	ldr	r3, [r0, #12]
   20cc0:	push	{r4, lr}
   20cc4:	add	r1, r1, r3
   20cc8:	mov	r4, r0
   20ccc:	ldr	r0, [r0]
   20cd0:	str	r1, [r4, #8]
   20cd4:	lsl	r1, r1, #2
   20cd8:	bl	2400c <xRealloc@@Base>
   20cdc:	str	r0, [r4]
   20ce0:	pop	{r4, pc}

00020ce4 <Vector_new@@Base>:
   20ce4:	cmn	r2, #1
   20ce8:	push	{r4, r5, r6, r7, r8, lr}
   20cec:	movne	r5, r2
   20cf0:	moveq	r6, #10
   20cf4:	mov	r8, r0
   20cf8:	mov	r0, #24
   20cfc:	moveq	r5, r6
   20d00:	mov	r7, r1
   20d04:	movne	r6, r5
   20d08:	bl	23fb0 <xMalloc@@Base>
   20d0c:	mov	r1, #4
   20d10:	mov	r4, r0
   20d14:	str	r5, [r0, #12]
   20d18:	mov	r0, r6
   20d1c:	bl	23fd8 <xCalloc@@Base>
   20d20:	mov	r3, #0
   20d24:	str	r5, [r4, #8]
   20d28:	str	r8, [r4, #4]
   20d2c:	strb	r7, [r4, #20]
   20d30:	str	r3, [r4, #16]
   20d34:	str	r0, [r4]
   20d38:	mov	r0, r4
   20d3c:	pop	{r4, r5, r6, r7, r8, pc}

00020d40 <Vector_delete@@Base>:
   20d40:	ldrb	r3, [r0, #20]
   20d44:	push	{r4, r5, r6, lr}
   20d48:	mov	r5, r0
   20d4c:	cmp	r3, #0
   20d50:	ldr	r2, [r0]
   20d54:	beq	20d94 <Vector_delete@@Base+0x54>
   20d58:	ldr	r1, [r0, #16]
   20d5c:	cmp	r1, #0
   20d60:	ble	20d94 <Vector_delete@@Base+0x54>
   20d64:	mov	r4, #0
   20d68:	ldr	r3, [r2, r4, lsl #2]
   20d6c:	add	r4, r4, #1
   20d70:	subs	r0, r3, #0
   20d74:	beq	20d8c <Vector_delete@@Base+0x4c>
   20d78:	ldr	r3, [r3]
   20d7c:	ldr	r3, [r3, #8]
   20d80:	blx	r3
   20d84:	ldr	r2, [r5]
   20d88:	ldr	r1, [r5, #16]
   20d8c:	cmp	r1, r4
   20d90:	bgt	20d68 <Vector_delete@@Base+0x28>
   20d94:	mov	r0, r2
   20d98:	bl	14fa0 <free@plt>
   20d9c:	mov	r0, r5
   20da0:	pop	{r4, r5, r6, lr}
   20da4:	b	14fa0 <free@plt>

00020da8 <Vector_prune@@Base>:
   20da8:	ldrb	r3, [r0, #20]
   20dac:	push	{r4, r5, r6, lr}
   20db0:	mov	r5, r0
   20db4:	cmp	r3, #0
   20db8:	beq	20df8 <Vector_prune@@Base+0x50>
   20dbc:	ldr	r2, [r0, #16]
   20dc0:	cmp	r2, #0
   20dc4:	ble	20df8 <Vector_prune@@Base+0x50>
   20dc8:	mov	r4, #0
   20dcc:	ldr	r3, [r5]
   20dd0:	ldr	r3, [r3, r4, lsl #2]
   20dd4:	add	r4, r4, #1
   20dd8:	subs	r0, r3, #0
   20ddc:	beq	20df0 <Vector_prune@@Base+0x48>
   20de0:	ldr	r3, [r3]
   20de4:	ldr	r3, [r3, #8]
   20de8:	blx	r3
   20dec:	ldr	r2, [r5, #16]
   20df0:	cmp	r2, r4
   20df4:	bgt	20dcc <Vector_prune@@Base+0x24>
   20df8:	mov	r3, #0
   20dfc:	str	r3, [r5, #16]
   20e00:	pop	{r4, r5, r6, pc}

00020e04 <Vector_quickSort@@Base>:
   20e04:	ldr	r3, [r0, #4]
   20e08:	ldr	r2, [r0, #16]
   20e0c:	mov	r1, #0
   20e10:	ldr	r0, [r0]
   20e14:	ldr	r3, [r3, #12]
   20e18:	sub	r2, r2, #1
   20e1c:	b	20b9c <UsersTable_foreach@@Base+0x8>

00020e20 <Vector_insertionSort@@Base>:
   20e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20e24:	sub	sp, sp, #12
   20e28:	ldr	r9, [r0, #16]
   20e2c:	ldr	r3, [r0, #4]
   20e30:	ldr	r8, [r0]
   20e34:	cmp	r9, #1
   20e38:	str	r8, [sp, #4]
   20e3c:	ldr	r6, [r3, #12]
   20e40:	ble	20eac <Vector_insertionSort@@Base+0x8c>
   20e44:	ldr	sl, [pc, #128]	; 20ecc <Vector_insertionSort@@Base+0xac>
   20e48:	sub	r9, r9, #1
   20e4c:	mov	r7, #0
   20e50:	ldr	r5, [r8, #4]!
   20e54:	mov	fp, r7
   20e58:	mov	r4, r8
   20e5c:	b	20e74 <Vector_insertionSort@@Base+0x54>
   20e60:	ldr	r1, [r4, #-4]
   20e64:	cmn	fp, #1
   20e68:	str	r1, [r4]
   20e6c:	sub	r4, r4, #4
   20e70:	beq	20eb4 <Vector_insertionSort@@Base+0x94>
   20e74:	ldr	r3, [sl]
   20e78:	mov	r1, r5
   20e7c:	add	r3, r3, #1
   20e80:	ldr	r0, [r4, #-4]
   20e84:	str	r3, [sl]
   20e88:	blx	r6
   20e8c:	sub	fp, fp, #1
   20e90:	mov	r3, r4
   20e94:	cmp	r0, #0
   20e98:	bgt	20e60 <Vector_insertionSort@@Base+0x40>
   20e9c:	add	r7, r7, #1
   20ea0:	cmp	r9, r7
   20ea4:	str	r5, [r3]
   20ea8:	bne	20e50 <Vector_insertionSort@@Base+0x30>
   20eac:	add	sp, sp, #12
   20eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20eb4:	ldr	r3, [sp, #4]
   20eb8:	add	r7, r7, #1
   20ebc:	cmp	r9, r7
   20ec0:	str	r5, [r3]
   20ec4:	bne	20e50 <Vector_insertionSort@@Base+0x30>
   20ec8:	b	20eac <Vector_insertionSort@@Base+0x8c>
   20ecc:	andeq	lr, r3, r8, ror #18

00020ed0 <Vector_insert@@Base>:
   20ed0:	push	{r4, r5, r6, lr}
   20ed4:	mov	r5, r0
   20ed8:	ldr	r4, [r0, #16]
   20edc:	mov	r6, r2
   20ee0:	cmp	r1, r4
   20ee4:	movlt	r4, r1
   20ee8:	bl	20cac <UsersTable_foreach@@Base+0x118>
   20eec:	ldr	ip, [r5, #16]
   20ef0:	ldr	lr, [r5]
   20ef4:	cmp	ip, r4
   20ef8:	ble	20f14 <Vector_insert@@Base+0x44>
   20efc:	add	r3, lr, ip, lsl #2
   20f00:	add	r1, lr, r4, lsl #2
   20f04:	ldr	r0, [r3, #-4]
   20f08:	str	r0, [r3], #-4
   20f0c:	cmp	r1, r3
   20f10:	bne	20f04 <Vector_insert@@Base+0x34>
   20f14:	add	ip, ip, #1
   20f18:	str	r6, [lr, r4, lsl #2]
   20f1c:	str	ip, [r5, #16]
   20f20:	pop	{r4, r5, r6, pc}

00020f24 <Vector_take@@Base>:
   20f24:	push	{lr}		; (str lr, [sp, #-4]!)
   20f28:	mov	r2, r0
   20f2c:	ldr	lr, [r0, #16]
   20f30:	ldr	r3, [r0]
   20f34:	sub	ip, lr, #1
   20f38:	cmp	ip, r1
   20f3c:	ldr	r0, [r3, r1, lsl #2]
   20f40:	str	ip, [r2, #16]
   20f44:	add	r1, r3, r1, lsl #2
   20f48:	pople	{pc}		; (ldrle pc, [sp], #4)
   20f4c:	sub	r3, r3, #4
   20f50:	add	r3, r3, lr, lsl #2
   20f54:	ldr	r2, [r1, #4]
   20f58:	str	r2, [r1], #4
   20f5c:	cmp	r1, r3
   20f60:	bne	20f54 <Vector_take@@Base+0x30>
   20f64:	pop	{pc}		; (ldr pc, [sp], #4)

00020f68 <Vector_remove@@Base>:
   20f68:	push	{r4, lr}
   20f6c:	mov	ip, r0
   20f70:	ldr	lr, [r0, #16]
   20f74:	ldr	r3, [r0]
   20f78:	sub	r2, lr, #1
   20f7c:	cmp	r1, r2
   20f80:	ldr	r0, [r3, r1, lsl #2]
   20f84:	add	r1, r3, r1, lsl #2
   20f88:	str	r2, [ip, #16]
   20f8c:	bge	20fa8 <Vector_remove@@Base+0x40>
   20f90:	sub	r3, r3, #4
   20f94:	add	r3, r3, lr, lsl #2
   20f98:	ldr	r2, [r1, #4]
   20f9c:	str	r2, [r1], #4
   20fa0:	cmp	r1, r3
   20fa4:	bne	20f98 <Vector_remove@@Base+0x30>
   20fa8:	ldrb	r3, [ip, #20]
   20fac:	cmp	r3, #0
   20fb0:	popeq	{r4, pc}
   20fb4:	ldr	r3, [r0]
   20fb8:	ldr	r3, [r3, #8]
   20fbc:	blx	r3
   20fc0:	mov	r0, #0
   20fc4:	pop	{r4, pc}

00020fc8 <Vector_moveUp@@Base>:
   20fc8:	cmp	r1, #0
   20fcc:	bxeq	lr
   20fd0:	ldr	r2, [r0]
   20fd4:	lsl	r3, r1, #2
   20fd8:	sub	r3, r3, #4
   20fdc:	ldr	r0, [r2, r1, lsl #2]
   20fe0:	ldr	ip, [r2, r3]
   20fe4:	str	ip, [r2, r1, lsl #2]
   20fe8:	str	r0, [r2, r3]
   20fec:	bx	lr

00020ff0 <Vector_moveDown@@Base>:
   20ff0:	ldr	r3, [r0, #16]
   20ff4:	sub	r3, r3, #1
   20ff8:	cmp	r3, r1
   20ffc:	bxeq	lr
   21000:	ldr	r2, [r0]
   21004:	lsl	r3, r1, #2
   21008:	add	r3, r3, #4
   2100c:	ldr	r0, [r2, r1, lsl #2]
   21010:	ldr	ip, [r2, r3]
   21014:	str	ip, [r2, r1, lsl #2]
   21018:	str	r0, [r2, r3]
   2101c:	bx	lr

00021020 <Vector_set@@Base>:
   21020:	push	{r4, r5, r6, r7, r8, lr}
   21024:	mov	r5, r0
   21028:	mov	r4, r1
   2102c:	mov	r7, r2
   21030:	bl	20cac <UsersTable_foreach@@Base+0x118>
   21034:	ldr	r3, [r5, #16]
   21038:	lsl	r6, r4, #2
   2103c:	cmp	r3, r4
   21040:	ble	2107c <Vector_set@@Base+0x5c>
   21044:	ldrb	r3, [r5, #20]
   21048:	ldr	r2, [r5]
   2104c:	cmp	r3, #0
   21050:	add	r3, r2, r6
   21054:	beq	21074 <Vector_set@@Base+0x54>
   21058:	ldr	r3, [r2, r4, lsl #2]
   2105c:	mov	r0, r3
   21060:	ldr	r3, [r3]
   21064:	ldr	r3, [r3, #8]
   21068:	blx	r3
   2106c:	ldr	r3, [r5]
   21070:	add	r3, r3, r6
   21074:	str	r7, [r3]
   21078:	pop	{r4, r5, r6, r7, r8, pc}
   2107c:	ldr	r3, [r5]
   21080:	add	r4, r4, #1
   21084:	add	r3, r3, r6
   21088:	str	r4, [r5, #16]
   2108c:	str	r7, [r3]
   21090:	pop	{r4, r5, r6, r7, r8, pc}

00021094 <Vector_add@@Base>:
   21094:	mov	r2, r1
   21098:	ldr	r1, [r0, #16]
   2109c:	b	21020 <Vector_set@@Base>

000210a0 <Vector_indexOf@@Base>:
   210a0:	ldr	r3, [r0, #16]
   210a4:	push	{r4, r5, r6, r7, r8, lr}
   210a8:	cmp	r3, #0
   210ac:	ble	210f4 <Vector_indexOf@@Base+0x54>
   210b0:	mov	r7, r2
   210b4:	mov	r6, r1
   210b8:	mov	r5, r0
   210bc:	mov	r4, #0
   210c0:	b	210d4 <Vector_indexOf@@Base+0x34>
   210c4:	ldr	r3, [r5, #16]
   210c8:	add	r4, r4, #1
   210cc:	cmp	r3, r4
   210d0:	ble	210f4 <Vector_indexOf@@Base+0x54>
   210d4:	ldr	r3, [r5]
   210d8:	mov	r0, r6
   210dc:	ldr	r1, [r3, r4, lsl #2]
   210e0:	blx	r7
   210e4:	cmp	r0, #0
   210e8:	bne	210c4 <Vector_indexOf@@Base+0x24>
   210ec:	mov	r0, r4
   210f0:	pop	{r4, r5, r6, r7, r8, pc}
   210f4:	mvn	r4, #0
   210f8:	mov	r0, r4
   210fc:	pop	{r4, r5, r6, r7, r8, pc}
   21100:	push	{r4, r5, r6, r7, r8, lr}
   21104:	mov	r4, r1
   21108:	mov	r5, r0
   2110c:	bl	1b160 <Panel_getSelected@@Base>
   21110:	ldr	r3, [pc, #164]	; 211bc <Vector_indexOf@@Base+0x11c>
   21114:	cmp	r4, r3
   21118:	beq	21168 <Vector_indexOf@@Base+0xc8>
   2111c:	add	r3, r3, #74	; 0x4a
   21120:	cmp	r4, r3
   21124:	beq	21168 <Vector_indexOf@@Base+0xc8>
   21128:	cmp	r4, #13
   2112c:	beq	21168 <Vector_indexOf@@Base+0xc8>
   21130:	cmp	r4, #254	; 0xfe
   21134:	bgt	21160 <Vector_indexOf@@Base+0xc0>
   21138:	bl	15258 <__ctype_b_loc@plt>
   2113c:	lsl	r3, r4, #1
   21140:	ldr	r2, [r0]
   21144:	ldrh	r3, [r2, r3]
   21148:	tst	r3, #1024	; 0x400
   2114c:	beq	21160 <Vector_indexOf@@Base+0xc0>
   21150:	mov	r1, r4
   21154:	mov	r0, r5
   21158:	pop	{r4, r5, r6, r7, r8, lr}
   2115c:	b	1ad54 <Panel_selectByTyping@@Base>
   21160:	mov	r0, #2
   21164:	pop	{r4, r5, r6, r7, r8, pc}
   21168:	add	r5, r5, #8192	; 0x2000
   2116c:	ldr	r7, [r0, #8]
   21170:	ldr	r0, [r5, #304]	; 0x130
   21174:	bl	1b1cc <Panel_getSelectedIndex@@Base>
   21178:	ldr	r3, [pc, #64]	; 211c0 <Vector_indexOf@@Base+0x120>
   2117c:	mov	r1, r7
   21180:	ldr	r6, [r5, #304]	; 0x130
   21184:	mov	r4, r0
   21188:	ldr	r0, [r3, r7, lsl #4]
   2118c:	bl	193f4 <ListItem_new@@Base>
   21190:	mov	r1, r4
   21194:	mov	r2, r0
   21198:	mov	r0, r6
   2119c:	bl	1b0f0 <Panel_insert@@Base>
   211a0:	add	r1, r4, #1
   211a4:	ldr	r0, [r5, #304]	; 0x130
   211a8:	bl	1b1e0 <Panel_setSelected@@Base>
   211ac:	ldr	r0, [r5, #304]	; 0x130
   211b0:	bl	16a1c <ColumnsPanel_update@@Base>
   211b4:	mov	r0, #1
   211b8:	pop	{r4, r5, r6, r7, r8, pc}
   211bc:	andeq	r0, r0, sp, lsl #2
   211c0:	strdeq	sp, [r3], -r0
   211c4:	push	{r4, lr}
   211c8:	mov	r4, r0
   211cc:	bl	1afe8 <Panel_done@@Base>
   211d0:	mov	r0, r4
   211d4:	pop	{r4, lr}
   211d8:	b	14fa0 <free@plt>

000211dc <AvailableColumnsPanel_new@@Base>:
   211dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   211e0:	sub	sp, sp, #280	; 0x118
   211e4:	ldr	r9, [pc, #292]	; 21310 <AvailableColumnsPanel_new@@Base+0x134>
   211e8:	mov	sl, r0
   211ec:	ldr	r0, [pc, #288]	; 21314 <AvailableColumnsPanel_new@@Base+0x138>
   211f0:	ldr	r3, [r9]
   211f4:	mov	r4, #1
   211f8:	str	r3, [sp, #276]	; 0x114
   211fc:	bl	23fb0 <xMalloc@@Base>
   21200:	ldr	r3, [pc, #272]	; 21318 <AvailableColumnsPanel_new@@Base+0x13c>
   21204:	mov	r2, #0
   21208:	mov	r1, r2
   2120c:	ldr	r6, [pc, #264]	; 2131c <AvailableColumnsPanel_new@@Base+0x140>
   21210:	mov	r7, r0
   21214:	str	r3, [r0]
   21218:	ldr	r0, [pc, #256]	; 21320 <AvailableColumnsPanel_new@@Base+0x144>
   2121c:	bl	184a4 <FunctionBar_new@@Base>
   21220:	ldr	r3, [pc, #252]	; 21324 <AvailableColumnsPanel_new@@Base+0x148>
   21224:	mov	r2, r4
   21228:	mov	r1, r4
   2122c:	stmib	sp, {r3, r4}
   21230:	str	r4, [sp]
   21234:	mov	r3, r4
   21238:	str	r0, [sp, #12]
   2123c:	mov	r0, r7
   21240:	bl	1aef0 <Panel_init@@Base>
   21244:	mov	r0, r7
   21248:	ldr	r1, [pc, #216]	; 21328 <AvailableColumnsPanel_new@@Base+0x14c>
   2124c:	bl	1b048 <Panel_setHeader@@Base>
   21250:	ldr	r3, [r6]
   21254:	cmp	r3, r4
   21258:	ble	212d0 <AvailableColumnsPanel_new@@Base+0xf4>
   2125c:	ldr	r5, [pc, #200]	; 2132c <AvailableColumnsPanel_new@@Base+0x150>
   21260:	ldr	r8, [pc, #200]	; 21330 <AvailableColumnsPanel_new@@Base+0x154>
   21264:	cmp	r4, #2
   21268:	beq	212bc <AvailableColumnsPanel_new@@Base+0xe0>
   2126c:	ldr	r2, [r5, #24]
   21270:	cmp	r2, #0
   21274:	beq	212bc <AvailableColumnsPanel_new@@Base+0xe0>
   21278:	ldr	r1, [r5, #16]
   2127c:	mov	r3, #256	; 0x100
   21280:	str	r2, [sp, #8]
   21284:	str	r1, [sp, #4]
   21288:	str	r8, [sp]
   2128c:	mov	r1, r3
   21290:	mov	r2, #1
   21294:	add	r0, sp, #20
   21298:	bl	15510 <__snprintf_chk@plt>
   2129c:	cmp	r0, #255	; 0xff
   212a0:	bhi	212f4 <AvailableColumnsPanel_new@@Base+0x118>
   212a4:	mov	r1, r4
   212a8:	add	r0, sp, #20
   212ac:	bl	193f4 <ListItem_new@@Base>
   212b0:	mov	r1, r0
   212b4:	mov	r0, r7
   212b8:	bl	1b0d4 <Panel_add@@Base>
   212bc:	ldr	r3, [r6]
   212c0:	add	r4, r4, #1
   212c4:	cmp	r3, r4
   212c8:	add	r5, r5, #16
   212cc:	bgt	21264 <AvailableColumnsPanel_new@@Base+0x88>
   212d0:	ldr	r1, [sp, #276]	; 0x114
   212d4:	ldr	r2, [r9]
   212d8:	add	r3, r7, #8192	; 0x2000
   212dc:	cmp	r1, r2
   212e0:	str	sl, [r3, #304]	; 0x130
   212e4:	mov	r0, r7
   212e8:	bne	2130c <AvailableColumnsPanel_new@@Base+0x130>
   212ec:	add	sp, sp, #280	; 0x118
   212f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   212f4:	mov	r0, #1
   212f8:	bl	15030 <curs_set@plt>
   212fc:	bl	14f28 <endwin@plt>
   21300:	mov	r1, #0
   21304:	mov	r0, #1
   21308:	bl	15114 <err@plt>
   2130c:	bl	15084 <__stack_chk_fail@plt>
   21310:			; <UNDEFINED> instruction: 0x0003ccb8
   21314:	andeq	r2, r0, r4, lsr r1
   21318:	andeq	sp, r3, r8, lsr lr
   2131c:	andeq	sp, r3, ip, asr pc
   21320:	andeq	sl, r2, r0, asr r8
   21324:	andeq	sp, r3, r0, asr sl
   21328:	andeq	sl, r2, ip, ror r8
   2132c:	strdeq	sp, [r3], -r0
   21330:	muleq	r2, r0, r8
   21334:	push	{r4, r5, r6, lr}
   21338:	mov	r4, r1
   2133c:	bl	1b160 <Panel_getSelected@@Base>
   21340:	cmp	r4, #32
   21344:	mov	r5, r0
   21348:	beq	21394 <AvailableColumnsPanel_new@@Base+0x1b8>
   2134c:	ble	2137c <AvailableColumnsPanel_new@@Base+0x1a0>
   21350:	ldr	r3, [pc, #92]	; 213b4 <AvailableColumnsPanel_new@@Base+0x1d8>
   21354:	cmp	r4, r3
   21358:	beq	2138c <AvailableColumnsPanel_new@@Base+0x1b0>
   2135c:	add	r3, r3, #66	; 0x42
   21360:	cmp	r4, r3
   21364:	beq	21394 <AvailableColumnsPanel_new@@Base+0x1b8>
   21368:	sub	r3, r3, #123	; 0x7b
   2136c:	cmp	r4, r3
   21370:	beq	21394 <AvailableColumnsPanel_new@@Base+0x1b8>
   21374:	mov	r0, #2
   21378:	pop	{r4, r5, r6, pc}
   2137c:	cmp	r4, #10
   21380:	beq	2138c <AvailableColumnsPanel_new@@Base+0x1b0>
   21384:	cmp	r4, #13
   21388:	bne	21374 <AvailableColumnsPanel_new@@Base+0x198>
   2138c:	mov	r0, #4
   21390:	pop	{r4, r5, r6, pc}
   21394:	mov	r0, r5
   21398:	bl	165cc <CheckItem_get@@Base>
   2139c:	eor	r1, r0, #1
   213a0:	mov	r0, r5
   213a4:	uxtb	r1, r1
   213a8:	bl	165b8 <CheckItem_set@@Base>
   213ac:	mov	r0, #1
   213b0:	pop	{r4, r5, r6, pc}
   213b4:	andeq	r0, r0, r7, asr r1

000213b8 <AffinityPanel_new@@Base>:
   213b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   213bc:	sub	sp, sp, #36	; 0x24
   213c0:	ldr	sl, [pc, #300]	; 214f4 <AffinityPanel_new@@Base+0x13c>
   213c4:	mov	r5, r0
   213c8:	mov	r7, r1
   213cc:	ldr	r3, [sl]
   213d0:	ldr	r1, [pc, #288]	; 214f8 <AffinityPanel_new@@Base+0x140>
   213d4:	ldr	r0, [pc, #288]	; 214fc <AffinityPanel_new@@Base+0x144>
   213d8:	str	r3, [sp, #28]
   213dc:	bl	185cc <FunctionBar_newEnterEsc@@Base>
   213e0:	ldr	r2, [pc, #280]	; 21500 <AffinityPanel_new@@Base+0x148>
   213e4:	mov	r3, #1
   213e8:	mov	r1, r3
   213ec:	str	r2, [sp, #4]
   213f0:	str	r3, [sp]
   213f4:	mov	r2, r3
   213f8:	str	r0, [sp, #8]
   213fc:	mov	r0, r3
   21400:	bl	1af80 <Panel_new@@Base>
   21404:	ldr	r3, [pc, #248]	; 21504 <AffinityPanel_new@@Base+0x14c>
   21408:	ldr	r1, [pc, #248]	; 21508 <AffinityPanel_new@@Base+0x150>
   2140c:	str	r3, [r0]
   21410:	mov	r8, r0
   21414:	bl	1b048 <Panel_setHeader@@Base>
   21418:	ldr	r3, [r5, #128]	; 0x80
   2141c:	cmp	r3, #0
   21420:	ble	214bc <AffinityPanel_new@@Base+0x104>
   21424:	mov	r4, #0
   21428:	ldr	r9, [pc, #220]	; 2150c <AffinityPanel_new@@Base+0x154>
   2142c:	mov	r6, r4
   21430:	ldr	r3, [r5]
   21434:	mov	r2, #1
   21438:	mov	r1, #9
   2143c:	ldrb	r3, [r3, #56]	; 0x38
   21440:	add	r0, sp, #16
   21444:	str	r9, [sp]
   21448:	cmp	r3, #0
   2144c:	addeq	r3, r4, #1
   21450:	movne	r3, r4
   21454:	str	r3, [sp, #4]
   21458:	mov	r3, #10
   2145c:	bl	15510 <__snprintf_chk@plt>
   21460:	cmp	r0, #8
   21464:	bgt	214d8 <AffinityPanel_new@@Base+0x120>
   21468:	ldr	r3, [r7, #8]
   2146c:	cmp	r3, r6
   21470:	ble	2148c <AffinityPanel_new@@Base+0xd4>
   21474:	ldr	r3, [r7, #12]
   21478:	ldr	r3, [r3, r6, lsl #2]
   2147c:	cmp	r3, r4
   21480:	addeq	r6, r6, #1
   21484:	moveq	fp, #1
   21488:	beq	21490 <AffinityPanel_new@@Base+0xd8>
   2148c:	mov	fp, #0
   21490:	add	r0, sp, #16
   21494:	bl	24034 <xStrdup@@Base>
   21498:	mov	r1, fp
   2149c:	bl	16584 <CheckItem_newByVal@@Base>
   214a0:	add	r4, r4, #1
   214a4:	mov	r1, r0
   214a8:	mov	r0, r8
   214ac:	bl	1b0d4 <Panel_add@@Base>
   214b0:	ldr	r3, [r5, #128]	; 0x80
   214b4:	cmp	r3, r4
   214b8:	bgt	21430 <AffinityPanel_new@@Base+0x78>
   214bc:	ldr	r2, [sp, #28]
   214c0:	ldr	r3, [sl]
   214c4:	mov	r0, r8
   214c8:	cmp	r2, r3
   214cc:	bne	214f0 <AffinityPanel_new@@Base+0x138>
   214d0:	add	sp, sp, #36	; 0x24
   214d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   214d8:	mov	r0, #1
   214dc:	bl	15030 <curs_set@plt>
   214e0:	bl	14f28 <endwin@plt>
   214e4:	mov	r1, #0
   214e8:	mov	r0, #1
   214ec:	bl	15114 <err@plt>
   214f0:	bl	15084 <__stack_chk_fail@plt>
   214f4:			; <UNDEFINED> instruction: 0x0003ccb8
   214f8:	andeq	sl, r2, r4, lsr #13
   214fc:	muleq	r2, r8, r8
   21500:	andeq	sp, r3, r0, lsr r0
   21504:	andeq	sp, r3, ip, asr #28
   21508:	andeq	sl, r2, r0, lsr #17
   2150c:	andeq	sl, r2, r4, ror #13

00021510 <AffinityPanel_getAffinity@@Base>:
   21510:	push	{r4, r5, r6, r7, r8, lr}
   21514:	mov	r5, r0
   21518:	mov	r0, r1
   2151c:	bl	21a28 <Affinity_new@@Base>
   21520:	mov	r7, r0
   21524:	mov	r0, r5
   21528:	bl	1b1d4 <Panel_size@@Base>
   2152c:	subs	r6, r0, #0
   21530:	ble	21578 <AffinityPanel_getAffinity@@Base+0x68>
   21534:	mov	r4, #0
   21538:	b	21548 <AffinityPanel_getAffinity@@Base+0x38>
   2153c:	add	r4, r4, #1
   21540:	cmp	r6, r4
   21544:	beq	21578 <AffinityPanel_getAffinity@@Base+0x68>
   21548:	mov	r1, r4
   2154c:	mov	r0, r5
   21550:	bl	1b114 <Panel_get@@Base>
   21554:	bl	165cc <CheckItem_get@@Base>
   21558:	cmp	r0, #0
   2155c:	beq	2153c <AffinityPanel_getAffinity@@Base+0x2c>
   21560:	mov	r1, r4
   21564:	mov	r0, r7
   21568:	add	r4, r4, #1
   2156c:	bl	21a7c <Affinity_add@@Base>
   21570:	cmp	r6, r4
   21574:	bne	21548 <AffinityPanel_getAffinity@@Base+0x38>
   21578:	mov	r0, r7
   2157c:	pop	{r4, r5, r6, r7, r8, pc}
   21580:	mov	r0, r1
   21584:	sub	r1, r2, #1
   21588:	b	15180 <gethostname@plt>

0002158c <OpenFilesScreen_delete@@Base>:
   2158c:	push	{r4, lr}
   21590:	bl	23aa4 <InfoScreen_done@@Base>
   21594:	pop	{r4, lr}
   21598:	b	14fa0 <free@plt>

0002159c <OpenFilesScreen_draw@@Base>:
   2159c:	ldr	ip, [r0, #4]
   215a0:	ldr	r1, [pc, #8]	; 215b0 <OpenFilesScreen_draw@@Base+0x14>
   215a4:	ldr	r2, [r0, #24]
   215a8:	ldr	r3, [ip, #28]
   215ac:	b	23acc <InfoScreen_drawTitled@@Base>
   215b0:	andeq	sl, r2, r4, asr #17
   215b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   215b8:	sub	sp, sp, #1056	; 0x420
   215bc:	ldr	r6, [pc, #428]	; 21770 <OpenFilesScreen_draw@@Base+0x1d4>
   215c0:	sub	sp, sp, #12
   215c4:	ldr	r3, [pc, #424]	; 21774 <OpenFilesScreen_draw@@Base+0x1d8>
   215c8:	ldr	ip, [r6]
   215cc:	mov	r2, #1
   215d0:	str	r0, [sp, #4]
   215d4:	str	r3, [sp]
   215d8:	mov	r1, #1024	; 0x400
   215dc:	ldr	r3, [pc, #404]	; 21778 <OpenFilesScreen_draw@@Base+0x1dc>
   215e0:	add	r0, sp, #32
   215e4:	str	ip, [sp, #1060]	; 0x424
   215e8:	bl	15510 <__snprintf_chk@plt>
   215ec:	ldr	r1, [pc, #392]	; 2177c <OpenFilesScreen_draw@@Base+0x1e0>
   215f0:	mov	r0, #1
   215f4:	bl	23fd8 <xCalloc@@Base>
   215f8:	mov	r5, r0
   215fc:	add	r0, sp, #24
   21600:	bl	15408 <pipe@plt>
   21604:	cmn	r0, #1
   21608:	beq	2169c <OpenFilesScreen_draw@@Base+0x100>
   2160c:	bl	1542c <fork@plt>
   21610:	cmn	r0, #1
   21614:	mov	r8, r0
   21618:	beq	2169c <OpenFilesScreen_draw@@Base+0x100>
   2161c:	cmp	r0, #0
   21620:	beq	216c4 <OpenFilesScreen_draw@@Base+0x128>
   21624:	ldr	r0, [sp, #28]
   21628:	bl	154f8 <close@plt>
   2162c:	ldr	r1, [pc, #332]	; 21780 <OpenFilesScreen_draw@@Base+0x1e4>
   21630:	ldr	r0, [sp, #24]
   21634:	bl	14ee0 <fdopen@plt>
   21638:	mov	r7, r5
   2163c:	mov	sl, #0
   21640:	mov	r9, r0
   21644:	b	2165c <OpenFilesScreen_draw@@Base+0xc0>
   21648:	add	r0, r4, #1
   2164c:	bl	24034 <xStrdup@@Base>
   21650:	str	r0, [r7, fp, lsl #2]
   21654:	mov	r0, r4
   21658:	bl	14fa0 <free@plt>
   2165c:	mov	r0, r9
   21660:	bl	1ff04 <String_readLine@@Base>
   21664:	subs	r4, r0, #0
   21668:	beq	21730 <OpenFilesScreen_draw@@Base+0x194>
   2166c:	ldrb	fp, [r4]
   21670:	cmp	fp, #102	; 0x66
   21674:	bne	21648 <OpenFilesScreen_draw@@Base+0xac>
   21678:	ldr	r1, [pc, #260]	; 21784 <OpenFilesScreen_draw@@Base+0x1e8>
   2167c:	mov	r0, #1
   21680:	bl	23fd8 <xCalloc@@Base>
   21684:	cmp	sl, #0
   21688:	strne	r0, [sl, #1024]	; 0x400
   2168c:	streq	r0, [r5, #1028]	; 0x404
   21690:	mov	r7, r0
   21694:	mov	sl, r0
   21698:	b	21648 <OpenFilesScreen_draw@@Base+0xac>
   2169c:	mov	r3, #1
   216a0:	str	r3, [r5, #1024]	; 0x400
   216a4:	ldr	r2, [sp, #1060]	; 0x424
   216a8:	ldr	r3, [r6]
   216ac:	mov	r0, r5
   216b0:	cmp	r2, r3
   216b4:	bne	2176c <OpenFilesScreen_draw@@Base+0x1d0>
   216b8:	add	sp, sp, #1056	; 0x420
   216bc:	add	sp, sp, #12
   216c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   216c4:	ldr	r0, [sp, #24]
   216c8:	bl	154f8 <close@plt>
   216cc:	mov	r1, #1
   216d0:	ldr	r0, [sp, #28]
   216d4:	bl	150b4 <dup2@plt>
   216d8:	ldr	r0, [sp, #28]
   216dc:	bl	154f8 <close@plt>
   216e0:	mov	r1, #1
   216e4:	ldr	r0, [pc, #156]	; 21788 <OpenFilesScreen_draw@@Base+0x1ec>
   216e8:	bl	15234 <open@plt>
   216ec:	subs	r4, r0, #0
   216f0:	blt	21764 <OpenFilesScreen_draw@@Base+0x1c8>
   216f4:	mov	r1, #2
   216f8:	bl	150b4 <dup2@plt>
   216fc:	mov	r0, r4
   21700:	bl	154f8 <close@plt>
   21704:	ldr	r3, [pc, #128]	; 2178c <OpenFilesScreen_draw@@Base+0x1f0>
   21708:	ldr	r1, [pc, #128]	; 21790 <OpenFilesScreen_draw@@Base+0x1f4>
   2170c:	add	r2, sp, #32
   21710:	str	r8, [sp, #8]
   21714:	strd	r2, [sp]
   21718:	mov	r0, r1
   2171c:	ldr	r3, [pc, #112]	; 21794 <OpenFilesScreen_draw@@Base+0x1f8>
   21720:	ldr	r2, [pc, #112]	; 21798 <OpenFilesScreen_draw@@Base+0x1fc>
   21724:	bl	14ff4 <execlp@plt>
   21728:	mov	r0, #127	; 0x7f
   2172c:	bl	15264 <exit@plt>
   21730:	mov	r2, r4
   21734:	add	r1, sp, #20
   21738:	mov	r0, r8
   2173c:	bl	15150 <waitpid@plt>
   21740:	cmn	r0, #1
   21744:	beq	2169c <OpenFilesScreen_draw@@Base+0x100>
   21748:	ldr	r3, [sp, #20]
   2174c:	tst	r3, #127	; 0x7f
   21750:	bne	2169c <OpenFilesScreen_draw@@Base+0x100>
   21754:	asr	r3, r3, #8
   21758:	uxtb	r3, r3
   2175c:	str	r3, [r5, #1024]	; 0x400
   21760:	b	216a4 <OpenFilesScreen_draw@@Base+0x108>
   21764:	mov	r0, #1
   21768:	bl	15264 <exit@plt>
   2176c:	bl	15084 <__stack_chk_fail@plt>
   21770:			; <UNDEFINED> instruction: 0x0003ccb8
   21774:	andeq	sl, r2, r4, ror #13
   21778:	andeq	r0, r0, r1, lsl #8
   2177c:	andeq	r0, r0, r8, lsl #8
   21780:			; <UNDEFINED> instruction: 0x0002b1b0
   21784:	andeq	r0, r0, r4, lsl #8
   21788:	strdeq	sl, [r2], -r0
   2178c:	andeq	sl, r2, r8, lsl #18
   21790:	andeq	sl, r2, r0, lsl #18
   21794:	andeq	sl, r2, r4, ror #15
   21798:	strdeq	sl, [r2], -ip

0002179c <OpenFilesScreen_scan@@Base>:
   2179c:	ldr	r3, [pc, #512]	; 219a4 <OpenFilesScreen_scan@@Base+0x208>
   217a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   217a4:	add	fp, sp, #32
   217a8:	sub	sp, sp, #60	; 0x3c
   217ac:	ldr	r4, [r0, #8]
   217b0:	ldr	r3, [r3]
   217b4:	mov	r9, r0
   217b8:	mov	r0, r4
   217bc:	str	r3, [fp, #-40]	; 0xffffffd8
   217c0:	str	r4, [fp, #-52]	; 0xffffffcc
   217c4:	bl	1b1cc <Panel_getSelectedIndex@@Base>
   217c8:	str	r0, [fp, #-56]	; 0xffffffc8
   217cc:	mov	r0, r4
   217d0:	bl	1b0a8 <Panel_prune@@Base>
   217d4:	ldr	r0, [r9, #24]
   217d8:	bl	215b4 <OpenFilesScreen_draw@@Base+0x18>
   217dc:	ldr	r3, [r0, #1024]	; 0x400
   217e0:	str	r0, [fp, #-48]	; 0xffffffd0
   217e4:	cmp	r3, #127	; 0x7f
   217e8:	beq	21968 <OpenFilesScreen_scan@@Base+0x1cc>
   217ec:	cmp	r3, #1
   217f0:	beq	21978 <OpenFilesScreen_scan@@Base+0x1dc>
   217f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   217f8:	ldr	r4, [r3, #1028]	; 0x404
   217fc:	cmp	r4, #0
   21800:	beq	21900 <OpenFilesScreen_scan@@Base+0x164>
   21804:	ldr	r5, [pc, #412]	; 219a8 <OpenFilesScreen_scan@@Base+0x20c>
   21808:	ldr	r6, [r4, #440]	; 0x1b8
   2180c:	mov	r8, sp
   21810:	cmp	r6, #0
   21814:	moveq	r7, #48	; 0x30
   21818:	beq	21828 <OpenFilesScreen_scan@@Base+0x8c>
   2181c:	mov	r0, r6
   21820:	bl	152a0 <strlen@plt>
   21824:	add	r7, r0, #48	; 0x30
   21828:	ldr	r2, [r4, #408]	; 0x198
   2182c:	ldr	r1, [r4, #464]	; 0x1d0
   21830:	cmp	r6, #0
   21834:	ldr	r0, [r4, #272]	; 0x110
   21838:	moveq	r6, r5
   2183c:	add	lr, r7, #7
   21840:	cmp	r2, #0
   21844:	ldr	ip, [r4, #460]	; 0x1cc
   21848:	moveq	r2, r5
   2184c:	bic	lr, lr, #7
   21850:	cmp	r1, #0
   21854:	ldr	r3, [r4, #420]	; 0x1a4
   21858:	sub	sp, sp, lr
   2185c:	moveq	r1, r5
   21860:	cmp	r0, #0
   21864:	moveq	r0, r5
   21868:	cmp	ip, #0
   2186c:	moveq	ip, r5
   21870:	str	r2, [sp, #4]
   21874:	cmp	r3, #0
   21878:	ldr	r2, [pc, #300]	; 219ac <OpenFilesScreen_scan@@Base+0x210>
   2187c:	moveq	r3, r5
   21880:	add	sl, sp, #32
   21884:	str	r0, [sp, #12]
   21888:	str	r1, [sp, #8]
   2188c:	str	r2, [sp]
   21890:	str	r3, [sp, #20]
   21894:	str	r6, [sp, #24]
   21898:	str	ip, [sp, #16]
   2189c:	mov	r0, sl
   218a0:	mvn	r3, #0
   218a4:	mov	r2, #1
   218a8:	mov	r1, r7
   218ac:	bl	15510 <__snprintf_chk@plt>
   218b0:	cmp	r0, r7
   218b4:	bcs	2198c <OpenFilesScreen_scan@@Base+0x1f0>
   218b8:	mov	r1, sl
   218bc:	mov	r0, r9
   218c0:	bl	23bc0 <InfoScreen_addLine@@Base>
   218c4:	sub	r6, r4, #4
   218c8:	add	r7, r4, #1016	; 0x3f8
   218cc:	ldr	r0, [r6, #4]!
   218d0:	cmp	r0, #0
   218d4:	beq	218dc <OpenFilesScreen_scan@@Base+0x140>
   218d8:	bl	14fa0 <free@plt>
   218dc:	cmp	r7, r6
   218e0:	bne	218cc <OpenFilesScreen_scan@@Base+0x130>
   218e4:	ldr	r6, [r4, #1024]	; 0x400
   218e8:	mov	r0, r4
   218ec:	bl	14fa0 <free@plt>
   218f0:	cmp	r6, #0
   218f4:	mov	sp, r8
   218f8:	movne	r4, r6
   218fc:	bne	21808 <OpenFilesScreen_scan@@Base+0x6c>
   21900:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21904:	sub	r4, r3, #4
   21908:	add	r5, r3, #1016	; 0x3f8
   2190c:	ldr	r0, [r4, #4]!
   21910:	cmp	r0, #0
   21914:	beq	2191c <OpenFilesScreen_scan@@Base+0x180>
   21918:	bl	14fa0 <free@plt>
   2191c:	cmp	r4, r5
   21920:	bne	2190c <OpenFilesScreen_scan@@Base+0x170>
   21924:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21928:	bl	14fa0 <free@plt>
   2192c:	ldr	r0, [r9, #20]
   21930:	bl	20e20 <Vector_insertionSort@@Base>
   21934:	ldr	r4, [fp, #-52]	; 0xffffffcc
   21938:	ldr	r0, [r4, #24]
   2193c:	bl	20e20 <Vector_insertionSort@@Base>
   21940:	ldr	r1, [fp, #-56]	; 0xffffffc8
   21944:	mov	r0, r4
   21948:	bl	1b1e0 <Panel_setSelected@@Base>
   2194c:	ldr	r3, [pc, #80]	; 219a4 <OpenFilesScreen_scan@@Base+0x208>
   21950:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21954:	ldr	r3, [r3]
   21958:	cmp	r2, r3
   2195c:	bne	21988 <OpenFilesScreen_scan@@Base+0x1ec>
   21960:	sub	sp, fp, #32
   21964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21968:	ldr	r1, [pc, #64]	; 219b0 <OpenFilesScreen_scan@@Base+0x214>
   2196c:	mov	r0, r9
   21970:	bl	23bc0 <InfoScreen_addLine@@Base>
   21974:	b	21924 <OpenFilesScreen_scan@@Base+0x188>
   21978:	ldr	r1, [pc, #52]	; 219b4 <OpenFilesScreen_scan@@Base+0x218>
   2197c:	mov	r0, r9
   21980:	bl	23bc0 <InfoScreen_addLine@@Base>
   21984:	b	21924 <OpenFilesScreen_scan@@Base+0x188>
   21988:	bl	15084 <__stack_chk_fail@plt>
   2198c:	mov	r0, #1
   21990:	bl	15030 <curs_set@plt>
   21994:	bl	14f28 <endwin@plt>
   21998:	mov	r1, #0
   2199c:	mov	r0, #1
   219a0:	bl	15114 <err@plt>
   219a4:			; <UNDEFINED> instruction: 0x0003ccb8
   219a8:	andeq	r9, r2, r0, lsl #20
   219ac:	andeq	sl, r2, r4, ror r9
   219b0:	andeq	sl, r2, ip, lsl #18
   219b4:	andeq	sl, r2, r8, asr r9

000219b8 <OpenFilesScreen_new@@Base>:
   219b8:	push	{r4, r5, lr}
   219bc:	mov	r5, r0
   219c0:	sub	sp, sp, #12
   219c4:	mov	r0, #28
   219c8:	bl	23fb0 <xMalloc@@Base>
   219cc:	ldr	r3, [pc, #72]	; 21a1c <OpenFilesScreen_new@@Base+0x64>
   219d0:	mov	r4, r0
   219d4:	mov	r0, r5
   219d8:	str	r3, [r4]
   219dc:	bl	253f8 <Process_isThread@@Base>
   219e0:	ldr	r2, [pc, #56]	; 21a20 <OpenFilesScreen_new@@Base+0x68>
   219e4:	mov	r1, r5
   219e8:	cmp	r0, #0
   219ec:	mov	r0, r4
   219f0:	ldrne	r3, [r5, #24]
   219f4:	ldreq	r3, [r5, #16]
   219f8:	str	r3, [r4, #24]
   219fc:	ldr	r3, [pc, #32]	; 21a24 <OpenFilesScreen_new@@Base+0x6c>
   21a00:	ldr	r3, [r3]
   21a04:	str	r2, [sp]
   21a08:	sub	r3, r3, #3
   21a0c:	mov	r2, #0
   21a10:	bl	239fc <InfoScreen_init@@Base>
   21a14:	add	sp, sp, #12
   21a18:	pop	{r4, r5, pc}
   21a1c:	andeq	sp, r3, ip, lsr #29
   21a20:	muleq	r2, ip, r9
   21a24:	andeq	lr, r3, r0, ror r7

00021a28 <Affinity_new@@Base>:
   21a28:	push	{r4, r5, r6, lr}
   21a2c:	mov	r1, #16
   21a30:	mov	r5, r0
   21a34:	mov	r0, #1
   21a38:	bl	23fd8 <xCalloc@@Base>
   21a3c:	mov	r1, #4
   21a40:	mov	r4, r0
   21a44:	mov	r0, #8
   21a48:	str	r0, [r4, #4]
   21a4c:	bl	23fd8 <xCalloc@@Base>
   21a50:	str	r5, [r4]
   21a54:	str	r0, [r4, #12]
   21a58:	mov	r0, r4
   21a5c:	pop	{r4, r5, r6, pc}

00021a60 <Affinity_delete@@Base>:
   21a60:	push	{r4, lr}
   21a64:	mov	r4, r0
   21a68:	ldr	r0, [r0, #12]
   21a6c:	bl	14fa0 <free@plt>
   21a70:	mov	r0, r4
   21a74:	pop	{r4, lr}
   21a78:	b	14fa0 <free@plt>

00021a7c <Affinity_add@@Base>:
   21a7c:	push	{r4, r5, r6, lr}
   21a80:	mov	r5, r1
   21a84:	ldr	r3, [r0, #4]
   21a88:	ldr	r1, [r0, #8]
   21a8c:	mov	r4, r0
   21a90:	cmp	r1, r3
   21a94:	ldr	r0, [r0, #12]
   21a98:	beq	21ab0 <Affinity_add@@Base+0x34>
   21a9c:	str	r5, [r0, r1, lsl #2]
   21aa0:	ldr	r3, [r4, #8]
   21aa4:	add	r3, r3, #1
   21aa8:	str	r3, [r4, #8]
   21aac:	pop	{r4, r5, r6, pc}
   21ab0:	lsl	r3, r1, #1
   21ab4:	str	r3, [r4, #4]
   21ab8:	lsl	r1, r1, #3
   21abc:	bl	2400c <xRealloc@@Base>
   21ac0:	ldr	r1, [r4, #8]
   21ac4:	str	r0, [r4, #12]
   21ac8:	b	21a9c <Affinity_add@@Base+0x20>

00021acc <Affinity_get@@Base>:
   21acc:	push	{r4, r5, r6, r7, r8, lr}
   21ad0:	sub	sp, sp, #136	; 0x88
   21ad4:	ldr	r6, [pc, #180]	; 21b90 <Affinity_get@@Base+0xc4>
   21ad8:	mov	r5, r1
   21adc:	ldr	r0, [r0, #16]
   21ae0:	ldr	r3, [r6]
   21ae4:	add	r2, sp, #4
   21ae8:	mov	r1, #128	; 0x80
   21aec:	str	r3, [sp, #132]	; 0x84
   21af0:	bl	154a4 <sched_getaffinity@plt>
   21af4:	subs	r4, r0, #0
   21af8:	movne	r8, #0
   21afc:	bne	21b70 <Affinity_get@@Base+0xa4>
   21b00:	mov	r0, r5
   21b04:	bl	21a28 <Affinity_new@@Base>
   21b08:	mov	r8, r0
   21b0c:	ldr	r0, [r5, #128]	; 0x80
   21b10:	cmp	r0, #0
   21b14:	ble	21b70 <Affinity_get@@Base+0xa4>
   21b18:	ldr	r7, [pc, #116]	; 21b94 <Affinity_get@@Base+0xc8>
   21b1c:	b	21b2c <Affinity_get@@Base+0x60>
   21b20:	add	r4, r4, #1
   21b24:	cmp	r0, r4
   21b28:	ble	21b70 <Affinity_get@@Base+0xa4>
   21b2c:	cmp	r4, r7
   21b30:	bgt	21b20 <Affinity_get@@Base+0x54>
   21b34:	lsr	r3, r4, #5
   21b38:	add	r2, sp, #136	; 0x88
   21b3c:	add	r3, r2, r3, lsl #2
   21b40:	and	r1, r4, #31
   21b44:	ldr	r2, [r3, #-132]	; 0xffffff7c
   21b48:	lsr	r3, r2, r1
   21b4c:	tst	r3, #1
   21b50:	beq	21b20 <Affinity_get@@Base+0x54>
   21b54:	mov	r1, r4
   21b58:	mov	r0, r8
   21b5c:	bl	21a7c <Affinity_add@@Base>
   21b60:	ldr	r0, [r5, #128]	; 0x80
   21b64:	add	r4, r4, #1
   21b68:	cmp	r0, r4
   21b6c:	bgt	21b2c <Affinity_get@@Base+0x60>
   21b70:	ldr	r2, [sp, #132]	; 0x84
   21b74:	ldr	r3, [r6]
   21b78:	mov	r0, r8
   21b7c:	cmp	r2, r3
   21b80:	bne	21b8c <Affinity_get@@Base+0xc0>
   21b84:	add	sp, sp, #136	; 0x88
   21b88:	pop	{r4, r5, r6, r7, r8, pc}
   21b8c:	bl	15084 <__stack_chk_fail@plt>
   21b90:			; <UNDEFINED> instruction: 0x0003ccb8
   21b94:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

00021b98 <Affinity_set@@Base>:
   21b98:	push	{r4, r5, r6, r7, lr}
   21b9c:	sub	sp, sp, #140	; 0x8c
   21ba0:	ldr	r5, [pc, #152]	; 21c40 <Affinity_set@@Base+0xa8>
   21ba4:	mov	r7, r1
   21ba8:	add	r4, sp, #4
   21bac:	ldr	r3, [r5]
   21bb0:	mov	r6, r0
   21bb4:	mov	r2, #128	; 0x80
   21bb8:	mov	r0, r4
   21bbc:	mov	r1, #0
   21bc0:	str	r3, [sp, #132]	; 0x84
   21bc4:	bl	15330 <memset@plt>
   21bc8:	ldr	r0, [r7, #8]
   21bcc:	cmp	r0, #0
   21bd0:	ble	21c0c <Affinity_set@@Base+0x74>
   21bd4:	ldr	r2, [r7, #12]
   21bd8:	ldr	lr, [pc, #100]	; 21c44 <Affinity_set@@Base+0xac>
   21bdc:	sub	r2, r2, #4
   21be0:	add	r0, r2, r0, lsl #2
   21be4:	mov	r7, #1
   21be8:	ldr	r3, [r2, #4]!
   21bec:	cmp	r3, lr
   21bf0:	lsrls	ip, r3, #5
   21bf4:	andls	r3, r3, #31
   21bf8:	ldrls	r1, [r4, ip, lsl #2]
   21bfc:	orrls	r3, r1, r7, lsl r3
   21c00:	strls	r3, [r4, ip, lsl #2]
   21c04:	cmp	r2, r0
   21c08:	bne	21be8 <Affinity_set@@Base+0x50>
   21c0c:	mov	r2, r4
   21c10:	ldr	r0, [r6, #16]
   21c14:	mov	r1, #4
   21c18:	bl	153e4 <sched_setaffinity@plt>
   21c1c:	ldr	r2, [sp, #132]	; 0x84
   21c20:	ldr	r3, [r5]
   21c24:	cmp	r2, r3
   21c28:	clz	r0, r0
   21c2c:	lsr	r0, r0, #5
   21c30:	bne	21c3c <Affinity_set@@Base+0xa4>
   21c34:	add	sp, sp, #140	; 0x8c
   21c38:	pop	{r4, r5, r6, r7, pc}
   21c3c:	bl	15084 <__stack_chk_fail@plt>
   21c40:			; <UNDEFINED> instruction: 0x0003ccb8
   21c44:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

00021c48 <IncSet_new@@Base>:
   21c48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21c4c:	mov	r1, #124	; 0x7c
   21c50:	mov	r9, r0
   21c54:	mov	r0, #1
   21c58:	bl	23fd8 <xCalloc@@Base>
   21c5c:	ldr	r6, [pc, #112]	; 21cd4 <IncSet_new@@Base+0x8c>
   21c60:	mov	r8, #56	; 0x38
   21c64:	ldr	r7, [pc, #108]	; 21cd8 <IncSet_new@@Base+0x90>
   21c68:	mov	r2, r8
   21c6c:	mov	r1, #0
   21c70:	mov	r5, #0
   21c74:	mov	r4, r0
   21c78:	bl	15330 <memset@plt>
   21c7c:	mov	r2, r7
   21c80:	mov	r1, r6
   21c84:	add	r0, r6, #12
   21c88:	bl	184a4 <FunctionBar_new@@Base>
   21c8c:	mov	r2, r8
   21c90:	mov	r1, r5
   21c94:	strb	r5, [r4, #52]	; 0x34
   21c98:	str	r0, [r4, #48]	; 0x30
   21c9c:	add	r0, r4, r8
   21ca0:	bl	15330 <memset@plt>
   21ca4:	add	r2, r7, #12
   21ca8:	add	r1, r6, #28
   21cac:	add	r0, r6, #40	; 0x28
   21cb0:	bl	184a4 <FunctionBar_new@@Base>
   21cb4:	mov	r3, #1
   21cb8:	str	r9, [r4, #116]	; 0x74
   21cbc:	str	r5, [r4, #112]	; 0x70
   21cc0:	strb	r5, [r4, #120]	; 0x78
   21cc4:	strb	r3, [r4, #108]	; 0x6c
   21cc8:	str	r0, [r4, #104]	; 0x68
   21ccc:	mov	r0, r4
   21cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21cd4:	ldrdeq	sl, [r2], -r0
   21cd8:	andeq	sp, r3, ip, asr #29

00021cdc <IncSet_delete@@Base>:
   21cdc:	push	{r4, lr}
   21ce0:	mov	r4, r0
   21ce4:	ldr	r0, [r0, #48]	; 0x30
   21ce8:	bl	18624 <FunctionBar_delete@@Base>
   21cec:	ldr	r0, [r4, #104]	; 0x68
   21cf0:	bl	18624 <FunctionBar_delete@@Base>
   21cf4:	mov	r0, r4
   21cf8:	pop	{r4, lr}
   21cfc:	b	14fa0 <free@plt>

00021d00 <IncSet_handleKey@@Base>:
   21d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d04:	sub	sp, sp, #12
   21d08:	cmn	r1, #1
   21d0c:	ldr	sl, [sp, #48]	; 0x30
   21d10:	beq	21e04 <IncSet_handleKey@@Base+0x104>
   21d14:	mov	r6, r0
   21d18:	mov	r0, r2
   21d1c:	mov	r7, r3
   21d20:	mov	r5, r1
   21d24:	mov	r4, r2
   21d28:	ldr	r9, [r6, #112]	; 0x70
   21d2c:	bl	1b1d4 <Panel_size@@Base>
   21d30:	ldr	r3, [pc, #860]	; 22094 <IncSet_handleKey@@Base+0x394>
   21d34:	cmp	r5, r3
   21d38:	mov	r8, r0
   21d3c:	beq	21e74 <IncSet_handleKey@@Base+0x174>
   21d40:	cmp	r5, #254	; 0xfe
   21d44:	bgt	21e14 <IncSet_handleKey@@Base+0x114>
   21d48:	bl	15258 <__ctype_b_loc@plt>
   21d4c:	uxtb	r3, r5
   21d50:	lsl	r3, r3, #1
   21d54:	ldr	r2, [r0]
   21d58:	ldrh	r3, [r2, r3]
   21d5c:	tst	r3, #16384	; 0x4000
   21d60:	beq	21e14 <IncSet_handleKey@@Base+0x114>
   21d64:	ldr	r3, [r9, #44]	; 0x2c
   21d68:	adds	r2, sl, #0
   21d6c:	movne	r2, #1
   21d70:	cmp	r3, #39	; 0x27
   21d74:	str	r2, [sp, #4]
   21d78:	bgt	22010 <IncSet_handleKey@@Base+0x310>
   21d7c:	add	r2, r3, #1
   21d80:	strb	r5, [r9, r3]
   21d84:	mov	r3, #0
   21d88:	str	r2, [r9, #44]	; 0x2c
   21d8c:	strb	r3, [r9, r2]
   21d90:	ldrb	r8, [r9, #52]	; 0x34
   21d94:	cmp	r8, r3
   21d98:	beq	21f04 <IncSet_handleKey@@Base+0x204>
   21d9c:	cmp	r2, #1
   21da0:	strbeq	r2, [r6, #120]	; 0x78
   21da4:	b	21f08 <IncSet_handleKey@@Base+0x208>
   21da8:	ldr	r9, [sl, #16]
   21dac:	add	r6, r6, #56	; 0x38
   21db0:	cmp	r9, #0
   21db4:	ble	21e04 <IncSet_handleKey@@Base+0x104>
   21db8:	mov	fp, #0
   21dbc:	mov	r5, fp
   21dc0:	ldr	r3, [sl]
   21dc4:	mov	r1, r6
   21dc8:	ldr	r7, [r3, r5, lsl #2]
   21dcc:	add	r5, r5, #1
   21dd0:	ldr	r0, [r7, #4]
   21dd4:	bl	14f1c <strcasestr@plt>
   21dd8:	mov	r1, r7
   21ddc:	cmp	r0, #0
   21de0:	mov	r0, r4
   21de4:	beq	21dfc <IncSet_handleKey@@Base+0xfc>
   21de8:	bl	1b0d4 <Panel_add@@Base>
   21dec:	cmp	r8, r7
   21df0:	beq	22048 <IncSet_handleKey@@Base+0x348>
   21df4:	ldr	r9, [sl, #16]
   21df8:	add	fp, fp, #1
   21dfc:	cmp	r5, r9
   21e00:	blt	21dc0 <IncSet_handleKey@@Base+0xc0>
   21e04:	mov	r8, #1
   21e08:	mov	r0, r8
   21e0c:	add	sp, sp, #12
   21e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e14:	ldr	r8, [pc, #636]	; 22098 <IncSet_handleKey@@Base+0x398>
   21e18:	cmp	r5, #127	; 0x7f
   21e1c:	cmpne	r5, r8
   21e20:	moveq	r8, #1
   21e24:	movne	r8, #0
   21e28:	beq	21ed0 <IncSet_handleKey@@Base+0x1d0>
   21e2c:	ldr	r3, [pc, #616]	; 2209c <IncSet_handleKey@@Base+0x39c>
   21e30:	adds	r2, sl, #0
   21e34:	movne	r2, #1
   21e38:	cmp	r5, r3
   21e3c:	str	r2, [sp, #4]
   21e40:	beq	22068 <IncSet_handleKey@@Base+0x368>
   21e44:	ldrb	r8, [r9, #52]	; 0x34
   21e48:	cmp	r8, #0
   21e4c:	beq	22000 <IncSet_handleKey@@Base+0x300>
   21e50:	cmp	r5, #27
   21e54:	beq	22034 <IncSet_handleKey@@Base+0x334>
   21e58:	ldr	r3, [r4, #56]	; 0x38
   21e5c:	mov	r1, #0
   21e60:	str	r1, [r6, #112]	; 0x70
   21e64:	ldr	r0, [r6, #116]	; 0x74
   21e68:	str	r3, [r4, #52]	; 0x34
   21e6c:	bl	188f8 <FunctionBar_draw@@Base>
   21e70:	b	21f68 <IncSet_handleKey@@Base+0x268>
   21e74:	cmp	r0, #0
   21e78:	beq	21e04 <IncSet_handleKey@@Base+0x104>
   21e7c:	mov	r0, r4
   21e80:	bl	1b1cc <Panel_getSelectedIndex@@Base>
   21e84:	mov	r6, r0
   21e88:	mov	r5, r0
   21e8c:	b	21ea4 <IncSet_handleKey@@Base+0x1a4>
   21e90:	blx	r7
   21e94:	mov	r1, r9
   21e98:	bl	14f1c <strcasestr@plt>
   21e9c:	cmp	r0, #0
   21ea0:	bne	22058 <IncSet_handleKey@@Base+0x358>
   21ea4:	add	r5, r5, #1
   21ea8:	cmp	r8, r5
   21eac:	moveq	r5, #0
   21eb0:	cmp	r5, r6
   21eb4:	mov	r0, r4
   21eb8:	mov	r1, r5
   21ebc:	bne	21e90 <IncSet_handleKey@@Base+0x190>
   21ec0:	mov	r8, #0
   21ec4:	mov	r0, r8
   21ec8:	add	sp, sp, #12
   21ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21ed0:	ldr	r3, [r9, #44]	; 0x2c
   21ed4:	cmp	r3, #0
   21ed8:	ble	21ec0 <IncSet_handleKey@@Base+0x1c0>
   21edc:	sub	r3, r3, #1
   21ee0:	mov	r2, #0
   21ee4:	str	r3, [r9, #44]	; 0x2c
   21ee8:	strb	r2, [r9, r3]
   21eec:	ldrb	r8, [r9, #52]	; 0x34
   21ef0:	subs	r2, sl, r2
   21ef4:	movne	r2, #1
   21ef8:	cmp	r8, #0
   21efc:	str	r2, [sp, #4]
   21f00:	bne	22020 <IncSet_handleKey@@Base+0x320>
   21f04:	str	r8, [sp, #4]
   21f08:	mov	r0, r4
   21f0c:	bl	1b1d4 <Panel_size@@Base>
   21f10:	subs	r5, r0, #0
   21f14:	ble	21fe0 <IncSet_handleKey@@Base+0x2e0>
   21f18:	mov	fp, #0
   21f1c:	b	21f2c <IncSet_handleKey@@Base+0x22c>
   21f20:	add	fp, fp, #1
   21f24:	cmp	r5, fp
   21f28:	beq	21fe0 <IncSet_handleKey@@Base+0x2e0>
   21f2c:	mov	r1, fp
   21f30:	mov	r0, r4
   21f34:	blx	r7
   21f38:	mov	r1, r9
   21f3c:	bl	14f1c <strcasestr@plt>
   21f40:	cmp	r0, #0
   21f44:	beq	21f20 <IncSet_handleKey@@Base+0x220>
   21f48:	mov	r1, fp
   21f4c:	mov	r0, r4
   21f50:	bl	1b1e0 <Panel_setSelected@@Base>
   21f54:	mov	r1, r9
   21f58:	ldr	r0, [r9, #48]	; 0x30
   21f5c:	bl	188f8 <FunctionBar_draw@@Base>
   21f60:	mov	r3, #1
   21f64:	strb	r3, [r6, #121]	; 0x79
   21f68:	ldr	r3, [sp, #4]
   21f6c:	cmp	r3, #0
   21f70:	beq	21e08 <IncSet_handleKey@@Base+0x108>
   21f74:	mov	r0, r4
   21f78:	bl	1b160 <Panel_getSelected@@Base>
   21f7c:	mov	r8, r0
   21f80:	mov	r0, r4
   21f84:	bl	1b0a8 <Panel_prune@@Base>
   21f88:	ldrb	r5, [r6, #120]	; 0x78
   21f8c:	cmp	r5, #0
   21f90:	bne	21da8 <IncSet_handleKey@@Base+0xa8>
   21f94:	ldr	r3, [sl, #16]
   21f98:	cmp	r3, #0
   21f9c:	bgt	21fb4 <IncSet_handleKey@@Base+0x2b4>
   21fa0:	b	21e04 <IncSet_handleKey@@Base+0x104>
   21fa4:	ldr	r3, [sl, #16]
   21fa8:	add	r5, r5, #1
   21fac:	cmp	r5, r3
   21fb0:	bge	21e04 <IncSet_handleKey@@Base+0x104>
   21fb4:	ldr	r3, [sl]
   21fb8:	mov	r0, r4
   21fbc:	ldr	r6, [r3, r5, lsl #2]
   21fc0:	mov	r1, r6
   21fc4:	bl	1b0d4 <Panel_add@@Base>
   21fc8:	cmp	r8, r6
   21fcc:	bne	21fa4 <IncSet_handleKey@@Base+0x2a4>
   21fd0:	mov	r1, r5
   21fd4:	mov	r0, r4
   21fd8:	bl	1b1e0 <Panel_setSelected@@Base>
   21fdc:	b	21fa4 <IncSet_handleKey@@Base+0x2a4>
   21fe0:	ldr	r3, [pc, #184]	; 220a0 <IncSet_handleKey@@Base+0x3a0>
   21fe4:	mov	r1, r9
   21fe8:	ldr	r0, [r9, #48]	; 0x30
   21fec:	ldr	r3, [r3]
   21ff0:	ldr	r2, [r3, #16]
   21ff4:	bl	18724 <FunctionBar_drawAttr@@Base>
   21ff8:	mov	r3, #0
   21ffc:	b	21f64 <IncSet_handleKey@@Base+0x264>
   22000:	str	r8, [sp, #4]
   22004:	str	r8, [r9, #44]	; 0x2c
   22008:	strb	r8, [r9]
   2200c:	b	21e58 <IncSet_handleKey@@Base+0x158>
   22010:	mov	r3, #0
   22014:	str	r3, [sp, #4]
   22018:	mov	r8, r3
   2201c:	b	21f08 <IncSet_handleKey@@Base+0x208>
   22020:	cmp	r3, #0
   22024:	strbeq	r3, [r6, #120]	; 0x78
   22028:	streq	r3, [r9, #44]	; 0x2c
   2202c:	strbeq	r3, [r9]
   22030:	b	21f08 <IncSet_handleKey@@Base+0x208>
   22034:	mov	r3, #0
   22038:	strb	r3, [r6, #120]	; 0x78
   2203c:	str	r3, [r9, #44]	; 0x2c
   22040:	strb	r3, [r9]
   22044:	b	21e58 <IncSet_handleKey@@Base+0x158>
   22048:	mov	r1, fp
   2204c:	mov	r0, r4
   22050:	bl	1b1e0 <Panel_setSelected@@Base>
   22054:	b	21df4 <IncSet_handleKey@@Base+0xf4>
   22058:	mov	r1, r5
   2205c:	mov	r0, r4
   22060:	bl	1b1e0 <Panel_setSelected@@Base>
   22064:	b	21ec0 <IncSet_handleKey@@Base+0x1c0>
   22068:	ldr	r2, [pc, #52]	; 220a4 <IncSet_handleKey@@Base+0x3a4>
   2206c:	ldr	r1, [r4, #8]
   22070:	ldr	r3, [pc, #48]	; 220a8 <IncSet_handleKey@@Base+0x3a8>
   22074:	ldr	r2, [r2]
   22078:	mov	r0, r4
   2207c:	sub	r2, r2, r1
   22080:	sub	r2, r2, #1
   22084:	ldr	r1, [r3]
   22088:	bl	1b088 <Panel_resize@@Base>
   2208c:	str	r8, [sp, #4]
   22090:	b	21f08 <IncSet_handleKey@@Base+0x208>
   22094:	andeq	r0, r0, fp, lsl #2
   22098:	andeq	r0, r0, r7, lsl #2
   2209c:	muleq	r0, sl, r1
   220a0:	muleq	r3, r8, r1
   220a4:	andeq	lr, r3, r0, ror r7
   220a8:	andeq	lr, r3, ip, ror r7

000220ac <IncSet_getListItemValue@@Base>:
   220ac:	push	{r4, lr}
   220b0:	bl	1b114 <Panel_get@@Base>
   220b4:	cmp	r0, #0
   220b8:	ldrne	r0, [r0, #4]
   220bc:	ldreq	r0, [pc]	; 220c4 <IncSet_getListItemValue@@Base+0x18>
   220c0:	pop	{r4, pc}
   220c4:	andeq	r9, r2, r0, lsl #20

000220c8 <IncSet_activate@@Base>:
   220c8:	rsb	r1, r1, r1, lsl #3
   220cc:	push	{r4, r5, r6, lr}
   220d0:	add	r1, r0, r1, lsl #3
   220d4:	mov	r4, r0
   220d8:	str	r1, [r0, #112]	; 0x70
   220dc:	ldr	r0, [r1, #48]	; 0x30
   220e0:	mov	r5, r2
   220e4:	bl	188f8 <FunctionBar_draw@@Base>
   220e8:	ldr	r3, [r4, #112]	; 0x70
   220ec:	ldr	r3, [r3, #48]	; 0x30
   220f0:	str	r3, [r5, #52]	; 0x34
   220f4:	pop	{r4, r5, r6, pc}

000220f8 <IncSet_drawBar@@Base>:
   220f8:	ldr	r1, [r0, #112]	; 0x70
   220fc:	cmp	r1, #0
   22100:	beq	2210c <IncSet_drawBar@@Base+0x14>
   22104:	ldr	r0, [r1, #48]	; 0x30
   22108:	b	188f8 <FunctionBar_draw@@Base>
   2210c:	ldr	r0, [r0, #116]	; 0x74
   22110:	b	188f8 <FunctionBar_draw@@Base>

00022114 <IncSet_synthesizeEvent@@Base>:
   22114:	ldr	r3, [r0, #112]	; 0x70
   22118:	cmp	r3, #0
   2211c:	beq	22128 <IncSet_synthesizeEvent@@Base+0x14>
   22120:	ldr	r0, [r3, #48]	; 0x30
   22124:	b	1890c <FunctionBar_synthesizeEvent@@Base>
   22128:	ldr	r0, [r0, #116]	; 0x74
   2212c:	b	1890c <FunctionBar_synthesizeEvent@@Base>
   22130:	ldr	r3, [r0]
   22134:	mov	r1, #1
   22138:	mov	r0, #48	; 0x30
   2213c:	mov	r2, #0
   22140:	str	r0, [r3, #52]	; 0x34
   22144:	str	r1, [r3, #48]	; 0x30
   22148:	strb	r2, [r3, #58]	; 0x3a
   2214c:	mov	r0, #77	; 0x4d
   22150:	bx	lr
   22154:	ldr	r3, [r0]
   22158:	mov	r1, #1
   2215c:	mov	r0, #47	; 0x2f
   22160:	mov	r2, #0
   22164:	str	r0, [r3, #52]	; 0x34
   22168:	str	r1, [r3, #48]	; 0x30
   2216c:	strb	r2, [r3, #58]	; 0x3a
   22170:	mov	r0, #77	; 0x4d
   22174:	bx	lr
   22178:	ldr	r3, [r0]
   2217c:	mov	r1, #1
   22180:	mov	r0, #50	; 0x32
   22184:	mov	r2, #0
   22188:	str	r0, [r3, #52]	; 0x34
   2218c:	str	r1, [r3, #48]	; 0x30
   22190:	strb	r2, [r3, #58]	; 0x3a
   22194:	mov	r0, #77	; 0x4d
   22198:	bx	lr
   2219c:	ldr	r2, [r0]
   221a0:	mov	r0, #7
   221a4:	ldrb	r3, [r2, #63]	; 0x3f
   221a8:	eor	r3, r3, #1
   221ac:	strb	r3, [r2, #63]	; 0x3f
   221b0:	bx	lr
   221b4:	ldr	r2, [r0]
   221b8:	mov	r0, #7
   221bc:	ldrb	r3, [r2, #64]	; 0x40
   221c0:	eor	r3, r3, #1
   221c4:	strb	r3, [r2, #64]	; 0x40
   221c8:	strb	r3, [r2, #60]	; 0x3c
   221cc:	bx	lr
   221d0:	ldr	r2, [r0]
   221d4:	mov	r0, #5
   221d8:	ldrb	r3, [r2, #59]	; 0x3b
   221dc:	eor	r3, r3, #1
   221e0:	strb	r3, [r2, #59]	; 0x3b
   221e4:	bx	lr
   221e8:	mov	r0, #16
   221ec:	bx	lr
   221f0:	push	{r4, lr}
   221f4:	ldr	r0, [r0, #12]
   221f8:	bl	1b160 <Panel_getSelected@@Base>
   221fc:	subs	r3, r0, #0
   22200:	movne	r0, #3
   22204:	ldrbne	r2, [r3, #47]	; 0x2f
   22208:	moveq	r0, r3
   2220c:	eorne	r2, r2, #1
   22210:	strbne	r2, [r3, #47]	; 0x2f
   22214:	pop	{r4, pc}

00022218 <Action_follow@@Base>:
   22218:	push	{r4, r5, r6, lr}
   2221c:	mov	r4, r0
   22220:	ldr	r0, [r0, #12]
   22224:	ldr	r5, [r4, #8]
   22228:	bl	18008 <MainPanel_selectedPid@@Base>
   2222c:	ldr	r3, [pc, #24]	; 2224c <Action_follow@@Base+0x34>
   22230:	ldr	r3, [r3]
   22234:	str	r0, [r5, #24]
   22238:	ldr	r0, [r4, #12]
   2223c:	ldr	r1, [r3, #32]
   22240:	bl	1b02c <Panel_setSelectionColor@@Base>
   22244:	mov	r0, #8
   22248:	pop	{r4, r5, r6, pc}
   2224c:	muleq	r3, r8, r1
   22250:	ldr	r3, [pc, #16]	; 22268 <Action_follow@@Base+0x50>
   22254:	push	{r4, lr}
   22258:	ldr	r0, [r3]
   2225c:	bl	15348 <wclear@plt>
   22260:	mov	r0, #33	; 0x21
   22264:	pop	{r4, pc}
   22268:	andeq	lr, r3, r8, lsl #15
   2226c:	ldr	r3, [pc, #56]	; 222ac <Action_follow@@Base+0x94>
   22270:	push	{r4, lr}
   22274:	mov	r4, r0
   22278:	ldr	r0, [r3]
   2227c:	bl	15348 <wclear@plt>
   22280:	ldr	r0, [r4, #12]
   22284:	ldr	r2, [pc, #36]	; 222b0 <Action_follow@@Base+0x98>
   22288:	ldr	r3, [pc, #36]	; 222b4 <Action_follow@@Base+0x9c>
   2228c:	ldr	r1, [r0, #8]
   22290:	ldr	r2, [r2]
   22294:	sub	r2, r2, r1
   22298:	sub	r2, r2, #1
   2229c:	ldr	r1, [r3]
   222a0:	bl	1b088 <Panel_resize@@Base>
   222a4:	mov	r0, #32
   222a8:	pop	{r4, pc}
   222ac:	andeq	lr, r3, r8, lsl #15
   222b0:	andeq	lr, r3, r0, ror r7
   222b4:	andeq	lr, r3, ip, ror r7
   222b8:	push	{r4, lr}
   222bc:	ldr	r0, [r0, #12]
   222c0:	bl	1b160 <Panel_getSelected@@Base>
   222c4:	subs	r3, r0, #0
   222c8:	bne	222d4 <Action_follow@@Base+0xbc>
   222cc:	mov	r0, r3
   222d0:	pop	{r4, pc}
   222d4:	bl	239ac <EnvScreen_new@@Base>
   222d8:	mov	r4, r0
   222dc:	bl	23ca8 <InfoScreen_run@@Base>
   222e0:	mov	r0, r4
   222e4:	bl	238cc <EnvScreen_delete@@Base>
   222e8:	ldr	r3, [pc, #16]	; 22300 <Action_follow@@Base+0xe8>
   222ec:	ldr	r0, [r3]
   222f0:	bl	15348 <wclear@plt>
   222f4:	bl	177d0 <CRT_enableDelay@@Base>
   222f8:	mov	r0, #33	; 0x21
   222fc:	pop	{r4, pc}
   22300:	andeq	lr, r3, r8, lsl #15
   22304:	push	{r4, r5, r6, lr}
   22308:	mov	r4, #0
   2230c:	mov	r5, r0
   22310:	mov	r6, r4
   22314:	b	22324 <Action_follow@@Base+0x10c>
   22318:	ldr	r0, [r5, #12]
   2231c:	bl	1b114 <Panel_get@@Base>
   22320:	strb	r6, [r0, #46]	; 0x2e
   22324:	ldr	r0, [r5, #12]
   22328:	bl	1b1d4 <Panel_size@@Base>
   2232c:	mov	r1, r4
   22330:	cmp	r0, r4
   22334:	add	r4, r4, #1
   22338:	bgt	22318 <Action_follow@@Base+0x100>
   2233c:	mov	r0, #1
   22340:	pop	{r4, r5, r6, pc}
   22344:	push	{r4, r5, r6, r7, r8, lr}
   22348:	ldr	r4, [pc, #2232]	; 22c08 <Action_follow@@Base+0x9f0>
   2234c:	ldr	r7, [r0]
   22350:	ldr	r6, [pc, #2228]	; 22c0c <Action_follow@@Base+0x9f4>
   22354:	ldr	r0, [r4]
   22358:	bl	15348 <wclear@plt>
   2235c:	ldr	r0, [r4]
   22360:	cmp	r0, #0
   22364:	ldrne	r3, [pc, #2212]	; 22c10 <Action_follow@@Base+0x9f8>
   22368:	ldrne	r3, [r3]
   2236c:	ldrne	r3, [r3, #184]	; 0xb8
   22370:	strne	r3, [r0, #16]
   22374:	ldr	r3, [r6]
   22378:	cmp	r3, #1
   2237c:	ble	223c4 <Action_follow@@Base+0x1ac>
   22380:	ldr	r8, [pc, #2188]	; 22c14 <Action_follow@@Base+0x9fc>
   22384:	mov	r5, #0
   22388:	mov	r1, r5
   2238c:	mov	r2, #0
   22390:	bl	15360 <wmove@plt>
   22394:	add	r5, r5, #1
   22398:	mov	r1, #32
   2239c:	cmn	r0, #1
   223a0:	beq	223b0 <Action_follow@@Base+0x198>
   223a4:	ldr	r2, [r8]
   223a8:	ldr	r0, [r4]
   223ac:	bl	15048 <whline@plt>
   223b0:	ldr	r3, [r6]
   223b4:	ldr	r0, [r4]
   223b8:	sub	r3, r3, #1
   223bc:	cmp	r3, r5
   223c0:	bgt	22388 <Action_follow@@Base+0x170>
   223c4:	mov	r2, #0
   223c8:	mov	r1, r2
   223cc:	bl	15360 <wmove@plt>
   223d0:	cmn	r0, #1
   223d4:	beq	223e8 <Action_follow@@Base+0x1d0>
   223d8:	mvn	r2, #0
   223dc:	ldr	r1, [pc, #2100]	; 22c18 <Action_follow@@Base+0xa00>
   223e0:	ldr	r0, [r4]
   223e4:	bl	15480 <waddnstr@plt>
   223e8:	mov	r2, #0
   223ec:	mov	r1, #1
   223f0:	ldr	r0, [r4]
   223f4:	bl	15360 <wmove@plt>
   223f8:	cmn	r0, #1
   223fc:	beq	22410 <Action_follow@@Base+0x1f8>
   22400:	mvn	r2, #0
   22404:	ldr	r1, [pc, #2064]	; 22c1c <Action_follow@@Base+0xa04>
   22408:	ldr	r0, [r4]
   2240c:	bl	15480 <waddnstr@plt>
   22410:	ldr	r0, [r4]
   22414:	mov	r2, #0
   22418:	cmp	r0, #0
   2241c:	mov	r1, #3
   22420:	ldrne	r3, [pc, #2024]	; 22c10 <Action_follow@@Base+0x9f8>
   22424:	ldrne	r3, [r3]
   22428:	ldrne	r3, [r3, #4]
   2242c:	strne	r3, [r0, #16]
   22430:	bl	15360 <wmove@plt>
   22434:	cmn	r0, #1
   22438:	beq	2244c <Action_follow@@Base+0x234>
   2243c:	mvn	r2, #0
   22440:	ldr	r1, [pc, #2008]	; 22c20 <Action_follow@@Base+0xa08>
   22444:	ldr	r0, [r4]
   22448:	bl	15480 <waddnstr@plt>
   2244c:	ldr	r0, [r4]
   22450:	mvn	r2, #0
   22454:	cmp	r0, #0
   22458:	ldr	r1, [pc, #1988]	; 22c24 <Action_follow@@Base+0xa0c>
   2245c:	ldrne	r3, [pc, #1964]	; 22c10 <Action_follow@@Base+0x9f8>
   22460:	ldrne	r3, [r3]
   22464:	ldrne	r3, [r3, #120]	; 0x78
   22468:	strne	r3, [r0, #16]
   2246c:	bl	15480 <waddnstr@plt>
   22470:	ldrb	r3, [r7, #57]	; 0x39
   22474:	ldr	r0, [r4]
   22478:	cmp	r3, #0
   2247c:	beq	22af4 <Action_follow@@Base+0x8dc>
   22480:	cmp	r0, #0
   22484:	mvn	r2, #0
   22488:	ldrne	r3, [pc, #1920]	; 22c10 <Action_follow@@Base+0x9f8>
   2248c:	ldr	r1, [pc, #1940]	; 22c28 <Action_follow@@Base+0xa10>
   22490:	ldrne	r3, [r3]
   22494:	ldrne	r3, [r3, #196]	; 0xc4
   22498:	strne	r3, [r0, #16]
   2249c:	bl	15480 <waddnstr@plt>
   224a0:	mvn	r2, #0
   224a4:	ldr	r1, [pc, #1920]	; 22c2c <Action_follow@@Base+0xa14>
   224a8:	ldr	r0, [r4]
   224ac:	bl	15480 <waddnstr@plt>
   224b0:	ldr	r0, [r4]
   224b4:	mvn	r2, #0
   224b8:	cmp	r0, #0
   224bc:	ldr	r1, [pc, #1900]	; 22c30 <Action_follow@@Base+0xa18>
   224c0:	ldrne	r3, [pc, #1864]	; 22c10 <Action_follow@@Base+0x9f8>
   224c4:	ldrne	r3, [r3]
   224c8:	ldrne	r3, [r3, #200]	; 0xc8
   224cc:	strne	r3, [r0, #16]
   224d0:	bl	15480 <waddnstr@plt>
   224d4:	mvn	r2, #0
   224d8:	ldr	r1, [pc, #1868]	; 22c2c <Action_follow@@Base+0xa14>
   224dc:	ldr	r0, [r4]
   224e0:	bl	15480 <waddnstr@plt>
   224e4:	ldr	r0, [r4]
   224e8:	mvn	r2, #0
   224ec:	cmp	r0, #0
   224f0:	ldr	r1, [pc, #1852]	; 22c34 <Action_follow@@Base+0xa1c>
   224f4:	ldrne	r3, [pc, #1812]	; 22c10 <Action_follow@@Base+0x9f8>
   224f8:	ldrne	r3, [r3]
   224fc:	ldrne	r3, [r3, #204]	; 0xcc
   22500:	strne	r3, [r0, #16]
   22504:	bl	15480 <waddnstr@plt>
   22508:	mvn	r2, #0
   2250c:	ldr	r1, [pc, #1816]	; 22c2c <Action_follow@@Base+0xa14>
   22510:	ldr	r0, [r4]
   22514:	bl	15480 <waddnstr@plt>
   22518:	ldr	r0, [r4]
   2251c:	mvn	r2, #0
   22520:	cmp	r0, #0
   22524:	ldr	r1, [pc, #1804]	; 22c38 <Action_follow@@Base+0xa20>
   22528:	ldrne	r3, [pc, #1760]	; 22c10 <Action_follow@@Base+0x9f8>
   2252c:	ldrne	r3, [r3]
   22530:	ldrne	r3, [r3, #212]	; 0xd4
   22534:	strne	r3, [r0, #16]
   22538:	bl	15480 <waddnstr@plt>
   2253c:	mvn	r2, #0
   22540:	ldr	r1, [pc, #1764]	; 22c2c <Action_follow@@Base+0xa14>
   22544:	ldr	r0, [r4]
   22548:	bl	15480 <waddnstr@plt>
   2254c:	ldr	r0, [r4]
   22550:	mvn	r2, #0
   22554:	cmp	r0, #0
   22558:	ldr	r1, [pc, #1756]	; 22c3c <Action_follow@@Base+0xa24>
   2255c:	ldrne	r3, [pc, #1708]	; 22c10 <Action_follow@@Base+0x9f8>
   22560:	ldrne	r3, [r3]
   22564:	ldrne	r3, [r3, #216]	; 0xd8
   22568:	strne	r3, [r0, #16]
   2256c:	bl	15480 <waddnstr@plt>
   22570:	mvn	r2, #0
   22574:	ldr	r1, [pc, #1712]	; 22c2c <Action_follow@@Base+0xa14>
   22578:	ldr	r0, [r4]
   2257c:	bl	15480 <waddnstr@plt>
   22580:	ldr	r0, [r4]
   22584:	mvn	r2, #0
   22588:	cmp	r0, #0
   2258c:	ldr	r1, [pc, #1708]	; 22c40 <Action_follow@@Base+0xa28>
   22590:	ldrne	r3, [pc, #1656]	; 22c10 <Action_follow@@Base+0x9f8>
   22594:	ldrne	r3, [r3]
   22598:	ldrne	r3, [r3, #220]	; 0xdc
   2259c:	strne	r3, [r0, #16]
   225a0:	bl	15480 <waddnstr@plt>
   225a4:	mvn	r2, #0
   225a8:	ldr	r1, [pc, #1660]	; 22c2c <Action_follow@@Base+0xa14>
   225ac:	ldr	r0, [r4]
   225b0:	bl	15480 <waddnstr@plt>
   225b4:	ldr	r0, [r4]
   225b8:	mvn	r2, #0
   225bc:	cmp	r0, #0
   225c0:	ldr	r1, [pc, #1660]	; 22c44 <Action_follow@@Base+0xa2c>
   225c4:	ldrne	r3, [pc, #1604]	; 22c10 <Action_follow@@Base+0x9f8>
   225c8:	ldrne	r3, [r3]
   225cc:	ldrne	r3, [r3, #224]	; 0xe0
   225d0:	strne	r3, [r0, #16]
   225d4:	bl	15480 <waddnstr@plt>
   225d8:	mvn	r2, #0
   225dc:	ldr	r1, [pc, #1608]	; 22c2c <Action_follow@@Base+0xa14>
   225e0:	ldr	r0, [r4]
   225e4:	bl	15480 <waddnstr@plt>
   225e8:	ldr	r0, [r4]
   225ec:	mvn	r2, #0
   225f0:	cmp	r0, #0
   225f4:	ldr	r1, [pc, #1612]	; 22c48 <Action_follow@@Base+0xa30>
   225f8:	ldrne	r3, [pc, #1552]	; 22c10 <Action_follow@@Base+0x9f8>
   225fc:	ldrne	r3, [r3]
   22600:	ldrne	r3, [r3, #208]	; 0xd0
   22604:	strne	r3, [r0, #16]
   22608:	bl	15480 <waddnstr@plt>
   2260c:	ldr	r0, [r4]
   22610:	mvn	r2, #0
   22614:	cmp	r0, #0
   22618:	ldr	r1, [pc, #1580]	; 22c4c <Action_follow@@Base+0xa34>
   2261c:	ldrne	r3, [pc, #1516]	; 22c10 <Action_follow@@Base+0x9f8>
   22620:	ldrne	r3, [r3]
   22624:	ldrne	r3, [r3, #124]	; 0x7c
   22628:	strne	r3, [r0, #16]
   2262c:	bl	15480 <waddnstr@plt>
   22630:	ldr	r0, [r4]
   22634:	mvn	r2, #0
   22638:	cmp	r0, #0
   2263c:	ldr	r1, [pc, #1548]	; 22c50 <Action_follow@@Base+0xa38>
   22640:	ldrne	r3, [pc, #1480]	; 22c10 <Action_follow@@Base+0x9f8>
   22644:	ldrne	r3, [r3]
   22648:	ldrne	r3, [r3, #120]	; 0x78
   2264c:	strne	r3, [r0, #16]
   22650:	bl	15480 <waddnstr@plt>
   22654:	ldr	r0, [r4]
   22658:	mov	r2, #0
   2265c:	cmp	r0, #0
   22660:	mov	r1, #4
   22664:	ldrne	r3, [pc, #1444]	; 22c10 <Action_follow@@Base+0x9f8>
   22668:	ldrne	r3, [r3]
   2266c:	ldrne	r3, [r3, #4]
   22670:	strne	r3, [r0, #16]
   22674:	bl	15360 <wmove@plt>
   22678:	cmn	r0, #1
   2267c:	beq	22690 <Action_follow@@Base+0x478>
   22680:	mvn	r2, #0
   22684:	ldr	r1, [pc, #1480]	; 22c54 <Action_follow@@Base+0xa3c>
   22688:	ldr	r0, [r4]
   2268c:	bl	15480 <waddnstr@plt>
   22690:	ldr	r0, [r4]
   22694:	mvn	r2, #0
   22698:	cmp	r0, #0
   2269c:	ldr	r1, [pc, #1408]	; 22c24 <Action_follow@@Base+0xa0c>
   226a0:	ldrne	r3, [pc, #1384]	; 22c10 <Action_follow@@Base+0x9f8>
   226a4:	ldrne	r3, [r3]
   226a8:	ldrne	r3, [r3, #120]	; 0x78
   226ac:	strne	r3, [r0, #16]
   226b0:	bl	15480 <waddnstr@plt>
   226b4:	ldr	r0, [r4]
   226b8:	mvn	r2, #0
   226bc:	cmp	r0, #0
   226c0:	ldr	r1, [pc, #1424]	; 22c58 <Action_follow@@Base+0xa40>
   226c4:	ldrne	r3, [pc, #1348]	; 22c10 <Action_follow@@Base+0x9f8>
   226c8:	ldrne	r3, [r3]
   226cc:	ldrne	r3, [r3, #136]	; 0x88
   226d0:	strne	r3, [r0, #16]
   226d4:	bl	15480 <waddnstr@plt>
   226d8:	mvn	r2, #0
   226dc:	ldr	r1, [pc, #1352]	; 22c2c <Action_follow@@Base+0xa14>
   226e0:	ldr	r0, [r4]
   226e4:	bl	15480 <waddnstr@plt>
   226e8:	ldr	r0, [r4]
   226ec:	mvn	r2, #0
   226f0:	cmp	r0, #0
   226f4:	ldr	r1, [pc, #1376]	; 22c5c <Action_follow@@Base+0xa44>
   226f8:	ldrne	r3, [pc, #1296]	; 22c10 <Action_follow@@Base+0x9f8>
   226fc:	ldrne	r3, [r3]
   22700:	ldrne	r3, [r3, #144]	; 0x90
   22704:	strne	r3, [r0, #16]
   22708:	bl	15480 <waddnstr@plt>
   2270c:	mvn	r2, #0
   22710:	ldr	r1, [pc, #1300]	; 22c2c <Action_follow@@Base+0xa14>
   22714:	ldr	r0, [r4]
   22718:	bl	15480 <waddnstr@plt>
   2271c:	ldr	r0, [r4]
   22720:	mvn	r2, #0
   22724:	cmp	r0, #0
   22728:	ldr	r1, [pc, #1328]	; 22c60 <Action_follow@@Base+0xa48>
   2272c:	ldrne	r3, [pc, #1244]	; 22c10 <Action_follow@@Base+0x9f8>
   22730:	ldrne	r3, [r3]
   22734:	ldrne	r3, [r3, #148]	; 0x94
   22738:	strne	r3, [r0, #16]
   2273c:	bl	15480 <waddnstr@plt>
   22740:	ldr	r0, [r4]
   22744:	mvn	r2, #0
   22748:	cmp	r0, #0
   2274c:	ldr	r1, [pc, #1296]	; 22c64 <Action_follow@@Base+0xa4c>
   22750:	ldrne	r3, [pc, #1208]	; 22c10 <Action_follow@@Base+0x9f8>
   22754:	ldrne	r3, [r3]
   22758:	ldrne	r3, [r3, #124]	; 0x7c
   2275c:	strne	r3, [r0, #16]
   22760:	bl	15480 <waddnstr@plt>
   22764:	ldr	r0, [r4]
   22768:	mvn	r2, #0
   2276c:	cmp	r0, #0
   22770:	ldr	r1, [pc, #1240]	; 22c50 <Action_follow@@Base+0xa38>
   22774:	ldrne	r3, [pc, #1172]	; 22c10 <Action_follow@@Base+0x9f8>
   22778:	ldrne	r3, [r3]
   2277c:	ldrne	r3, [r3, #120]	; 0x78
   22780:	strne	r3, [r0, #16]
   22784:	bl	15480 <waddnstr@plt>
   22788:	ldr	r0, [r4]
   2278c:	mov	r2, #0
   22790:	cmp	r0, #0
   22794:	mov	r1, #5
   22798:	ldrne	r3, [pc, #1136]	; 22c10 <Action_follow@@Base+0x9f8>
   2279c:	ldrne	r3, [r3]
   227a0:	ldrne	r3, [r3, #4]
   227a4:	strne	r3, [r0, #16]
   227a8:	bl	15360 <wmove@plt>
   227ac:	cmn	r0, #1
   227b0:	beq	227c4 <Action_follow@@Base+0x5ac>
   227b4:	mvn	r2, #0
   227b8:	ldr	r1, [pc, #1192]	; 22c68 <Action_follow@@Base+0xa50>
   227bc:	ldr	r0, [r4]
   227c0:	bl	15480 <waddnstr@plt>
   227c4:	ldr	r0, [r4]
   227c8:	mvn	r2, #0
   227cc:	cmp	r0, #0
   227d0:	ldr	r1, [pc, #1100]	; 22c24 <Action_follow@@Base+0xa0c>
   227d4:	ldrne	r3, [pc, #1076]	; 22c10 <Action_follow@@Base+0x9f8>
   227d8:	ldrne	r3, [r3]
   227dc:	ldrne	r3, [r3, #120]	; 0x78
   227e0:	strne	r3, [r0, #16]
   227e4:	bl	15480 <waddnstr@plt>
   227e8:	ldr	r0, [r4]
   227ec:	mvn	r2, #0
   227f0:	cmp	r0, #0
   227f4:	ldr	r1, [pc, #1116]	; 22c58 <Action_follow@@Base+0xa40>
   227f8:	ldrne	r3, [pc, #1040]	; 22c10 <Action_follow@@Base+0x9f8>
   227fc:	ldrne	r3, [r3]
   22800:	ldrne	r3, [r3, #68]	; 0x44
   22804:	strne	r3, [r0, #16]
   22808:	bl	15480 <waddnstr@plt>
   2280c:	ldr	r0, [r4]
   22810:	mvn	r2, #0
   22814:	cmp	r0, #0
   22818:	ldr	r1, [pc, #1100]	; 22c6c <Action_follow@@Base+0xa54>
   2281c:	ldrne	r3, [pc, #1004]	; 22c10 <Action_follow@@Base+0x9f8>
   22820:	ldrne	r3, [r3]
   22824:	ldrne	r3, [r3, #124]	; 0x7c
   22828:	strne	r3, [r0, #16]
   2282c:	bl	15480 <waddnstr@plt>
   22830:	ldr	r0, [r4]
   22834:	mvn	r2, #0
   22838:	cmp	r0, #0
   2283c:	ldr	r1, [pc, #1036]	; 22c50 <Action_follow@@Base+0xa38>
   22840:	ldrne	r3, [pc, #968]	; 22c10 <Action_follow@@Base+0x9f8>
   22844:	ldrne	r3, [r3]
   22848:	ldrne	r3, [r3, #120]	; 0x78
   2284c:	strne	r3, [r0, #16]
   22850:	bl	15480 <waddnstr@plt>
   22854:	ldr	r0, [r4]
   22858:	mov	r2, #0
   2285c:	cmp	r0, #0
   22860:	mov	r1, #6
   22864:	ldrne	r3, [pc, #932]	; 22c10 <Action_follow@@Base+0x9f8>
   22868:	ldrne	r3, [r3]
   2286c:	ldrne	r3, [r3, #4]
   22870:	strne	r3, [r0, #16]
   22874:	bl	15360 <wmove@plt>
   22878:	cmn	r0, #1
   2287c:	beq	22890 <Action_follow@@Base+0x678>
   22880:	mvn	r2, #0
   22884:	ldr	r1, [pc, #996]	; 22c70 <Action_follow@@Base+0xa58>
   22888:	ldr	r0, [r4]
   2288c:	bl	15480 <waddnstr@plt>
   22890:	ldr	r3, [pc, #988]	; 22c74 <Action_follow@@Base+0xa5c>
   22894:	ldr	r0, [r4]
   22898:	ldr	r3, [r3]
   2289c:	cmp	r3, #1
   228a0:	beq	22bd8 <Action_follow@@Base+0x9c0>
   228a4:	mov	r2, #0
   228a8:	mov	r1, #8
   228ac:	bl	15360 <wmove@plt>
   228b0:	cmn	r0, #1
   228b4:	beq	228c8 <Action_follow@@Base+0x6b0>
   228b8:	mvn	r2, #0
   228bc:	ldr	r1, [pc, #948]	; 22c78 <Action_follow@@Base+0xa60>
   228c0:	ldr	r0, [r4]
   228c4:	bl	15480 <waddnstr@plt>
   228c8:	ldr	r7, [pc, #940]	; 22c7c <Action_follow@@Base+0xa64>
   228cc:	ldr	r6, [pc, #940]	; 22c80 <Action_follow@@Base+0xa68>
   228d0:	ldr	r8, [pc, #940]	; 22c84 <Action_follow@@Base+0xa6c>
   228d4:	mov	r5, #9
   228d8:	b	228e0 <Action_follow@@Base+0x6c8>
   228dc:	ldr	r6, [r7, #-8]
   228e0:	mov	r1, r5
   228e4:	mov	r2, #9
   228e8:	ldr	r0, [r4]
   228ec:	bl	15360 <wmove@plt>
   228f0:	mvn	r2, #0
   228f4:	mov	r1, r8
   228f8:	add	r7, r7, #8
   228fc:	add	r5, r5, #1
   22900:	mov	r8, r6
   22904:	cmp	r0, r2
   22908:	beq	22914 <Action_follow@@Base+0x6fc>
   2290c:	ldr	r0, [r4]
   22910:	bl	15480 <waddnstr@plt>
   22914:	cmp	r6, #0
   22918:	bne	228dc <Action_follow@@Base+0x6c4>
   2291c:	ldr	r7, [pc, #868]	; 22c88 <Action_follow@@Base+0xa70>
   22920:	mov	r5, #9
   22924:	ldr	r6, [pc, #864]	; 22c8c <Action_follow@@Base+0xa74>
   22928:	ldr	r8, [pc, #864]	; 22c90 <Action_follow@@Base+0xa78>
   2292c:	b	22934 <Action_follow@@Base+0x71c>
   22930:	ldr	r6, [r7, #-8]
   22934:	mov	r1, r5
   22938:	mov	r2, #49	; 0x31
   2293c:	ldr	r0, [r4]
   22940:	bl	15360 <wmove@plt>
   22944:	mvn	r2, #0
   22948:	mov	r1, r8
   2294c:	add	r7, r7, #8
   22950:	add	r5, r5, #1
   22954:	mov	r8, r6
   22958:	cmp	r0, r2
   2295c:	beq	22968 <Action_follow@@Base+0x750>
   22960:	ldr	r0, [r4]
   22964:	bl	15480 <waddnstr@plt>
   22968:	cmp	r6, #0
   2296c:	bne	22930 <Action_follow@@Base+0x718>
   22970:	ldr	r0, [r4]
   22974:	ldr	r6, [pc, #792]	; 22c94 <Action_follow@@Base+0xa7c>
   22978:	cmp	r0, #0
   2297c:	ldr	r7, [pc, #788]	; 22c98 <Action_follow@@Base+0xa80>
   22980:	ldrne	r3, [pc, #648]	; 22c10 <Action_follow@@Base+0x9f8>
   22984:	ldr	r8, [pc, #784]	; 22c9c <Action_follow@@Base+0xa84>
   22988:	mov	r5, #1
   2298c:	ldrne	r3, [r3]
   22990:	ldrne	r3, [r3, #184]	; 0xb8
   22994:	strne	r3, [r0, #16]
   22998:	b	229a0 <Action_follow@@Base+0x788>
   2299c:	ldr	r6, [r8, r5, lsl #3]
   229a0:	add	r1, r5, #8
   229a4:	mov	r2, #0
   229a8:	bl	15360 <wmove@plt>
   229ac:	mvn	r2, #0
   229b0:	mov	r1, r7
   229b4:	add	r5, r5, #1
   229b8:	mov	r7, r6
   229bc:	cmp	r0, r2
   229c0:	beq	229cc <Action_follow@@Base+0x7b4>
   229c4:	ldr	r0, [r4]
   229c8:	bl	15480 <waddnstr@plt>
   229cc:	cmp	r6, #0
   229d0:	ldr	r0, [r4]
   229d4:	bne	2299c <Action_follow@@Base+0x784>
   229d8:	ldr	r6, [pc, #704]	; 22ca0 <Action_follow@@Base+0xa88>
   229dc:	ldr	r7, [pc, #704]	; 22ca4 <Action_follow@@Base+0xa8c>
   229e0:	ldr	r8, [pc, #704]	; 22ca8 <Action_follow@@Base+0xa90>
   229e4:	mov	r5, #1
   229e8:	b	229f0 <Action_follow@@Base+0x7d8>
   229ec:	ldr	r6, [r8, r5, lsl #3]
   229f0:	add	r1, r5, #8
   229f4:	mov	r2, #40	; 0x28
   229f8:	bl	15360 <wmove@plt>
   229fc:	mvn	r2, #0
   22a00:	mov	r1, r7
   22a04:	add	r5, r5, #1
   22a08:	mov	r7, r6
   22a0c:	cmp	r0, r2
   22a10:	beq	22a1c <Action_follow@@Base+0x804>
   22a14:	ldr	r0, [r4]
   22a18:	bl	15480 <waddnstr@plt>
   22a1c:	cmp	r6, #0
   22a20:	ldr	r0, [r4]
   22a24:	bne	229ec <Action_follow@@Base+0x7d4>
   22a28:	cmp	r0, #0
   22a2c:	mov	r2, #32
   22a30:	ldrne	r3, [pc, #472]	; 22c10 <Action_follow@@Base+0x9f8>
   22a34:	mov	r1, #16
   22a38:	ldrne	r3, [r3]
   22a3c:	ldrne	r3, [r3, #112]	; 0x70
   22a40:	strne	r3, [r0, #16]
   22a44:	bl	15360 <wmove@plt>
   22a48:	cmn	r0, #1
   22a4c:	beq	22a60 <Action_follow@@Base+0x848>
   22a50:	mvn	r2, #0
   22a54:	ldr	r1, [pc, #592]	; 22cac <Action_follow@@Base+0xa94>
   22a58:	ldr	r0, [r4]
   22a5c:	bl	15480 <waddnstr@plt>
   22a60:	mov	r2, #26
   22a64:	mov	r1, #17
   22a68:	ldr	r0, [r4]
   22a6c:	bl	15360 <wmove@plt>
   22a70:	cmn	r0, #1
   22a74:	beq	22a88 <Action_follow@@Base+0x870>
   22a78:	mvn	r2, #0
   22a7c:	ldr	r1, [pc, #552]	; 22cac <Action_follow@@Base+0xa94>
   22a80:	ldr	r0, [r4]
   22a84:	bl	15480 <waddnstr@plt>
   22a88:	ldr	r0, [r4]
   22a8c:	mov	r2, #0
   22a90:	cmp	r0, #0
   22a94:	mov	r1, #23
   22a98:	ldrne	r3, [pc, #368]	; 22c10 <Action_follow@@Base+0x9f8>
   22a9c:	ldrne	r3, [r3]
   22aa0:	ldrne	r3, [r3, #184]	; 0xb8
   22aa4:	strne	r3, [r0, #16]
   22aa8:	bl	15360 <wmove@plt>
   22aac:	cmn	r0, #1
   22ab0:	beq	22ac4 <Action_follow@@Base+0x8ac>
   22ab4:	mvn	r2, #0
   22ab8:	ldr	r1, [pc, #496]	; 22cb0 <Action_follow@@Base+0xa98>
   22abc:	ldr	r0, [r4]
   22ac0:	bl	15480 <waddnstr@plt>
   22ac4:	ldr	r0, [r4]
   22ac8:	cmp	r0, #0
   22acc:	ldrne	r3, [pc, #316]	; 22c10 <Action_follow@@Base+0x9f8>
   22ad0:	ldrne	r3, [r3]
   22ad4:	ldrne	r3, [r3, #4]
   22ad8:	strne	r3, [r0, #16]
   22adc:	bl	154c8 <wrefresh@plt>
   22ae0:	bl	17768 <CRT_readKey@@Base>
   22ae4:	ldr	r0, [r4]
   22ae8:	bl	15348 <wclear@plt>
   22aec:	mov	r0, #35	; 0x23
   22af0:	pop	{r4, r5, r6, r7, r8, pc}
   22af4:	cmp	r0, #0
   22af8:	mvn	r2, #0
   22afc:	ldrne	r3, [pc, #268]	; 22c10 <Action_follow@@Base+0x9f8>
   22b00:	ldr	r1, [pc, #428]	; 22cb4 <Action_follow@@Base+0xa9c>
   22b04:	ldrne	r3, [r3]
   22b08:	ldrne	r3, [r3, #196]	; 0xc4
   22b0c:	strne	r3, [r0, #16]
   22b10:	bl	15480 <waddnstr@plt>
   22b14:	mvn	r2, #0
   22b18:	ldr	r1, [pc, #268]	; 22c2c <Action_follow@@Base+0xa14>
   22b1c:	ldr	r0, [r4]
   22b20:	bl	15480 <waddnstr@plt>
   22b24:	ldr	r0, [r4]
   22b28:	mvn	r2, #0
   22b2c:	cmp	r0, #0
   22b30:	ldr	r1, [pc, #248]	; 22c30 <Action_follow@@Base+0xa18>
   22b34:	ldrne	r3, [pc, #212]	; 22c10 <Action_follow@@Base+0x9f8>
   22b38:	ldrne	r3, [r3]
   22b3c:	ldrne	r3, [r3, #200]	; 0xc8
   22b40:	strne	r3, [r0, #16]
   22b44:	bl	15480 <waddnstr@plt>
   22b48:	mvn	r2, #0
   22b4c:	ldr	r1, [pc, #216]	; 22c2c <Action_follow@@Base+0xa14>
   22b50:	ldr	r0, [r4]
   22b54:	bl	15480 <waddnstr@plt>
   22b58:	ldr	r0, [r4]
   22b5c:	mvn	r2, #0
   22b60:	cmp	r0, #0
   22b64:	ldr	r1, [pc, #200]	; 22c34 <Action_follow@@Base+0xa1c>
   22b68:	ldrne	r3, [pc, #160]	; 22c10 <Action_follow@@Base+0x9f8>
   22b6c:	ldrne	r3, [r3]
   22b70:	ldrne	r3, [r3, #204]	; 0xcc
   22b74:	strne	r3, [r0, #16]
   22b78:	bl	15480 <waddnstr@plt>
   22b7c:	mvn	r2, #0
   22b80:	ldr	r1, [pc, #164]	; 22c2c <Action_follow@@Base+0xa14>
   22b84:	ldr	r0, [r4]
   22b88:	bl	15480 <waddnstr@plt>
   22b8c:	ldr	r0, [r4]
   22b90:	mvn	r2, #0
   22b94:	cmp	r0, #0
   22b98:	ldr	r1, [pc, #280]	; 22cb8 <Action_follow@@Base+0xaa0>
   22b9c:	ldrne	r3, [pc, #108]	; 22c10 <Action_follow@@Base+0x9f8>
   22ba0:	ldrne	r3, [r3]
   22ba4:	ldrne	r3, [r3, #220]	; 0xdc
   22ba8:	strne	r3, [r0, #16]
   22bac:	bl	15480 <waddnstr@plt>
   22bb0:	ldr	r0, [r4]
   22bb4:	mvn	r2, #0
   22bb8:	cmp	r0, #0
   22bbc:	ldr	r1, [pc, #248]	; 22cbc <Action_follow@@Base+0xaa4>
   22bc0:	ldrne	r3, [pc, #72]	; 22c10 <Action_follow@@Base+0x9f8>
   22bc4:	ldrne	r3, [r3]
   22bc8:	ldrne	r3, [r3, #124]	; 0x7c
   22bcc:	strne	r3, [r0, #16]
   22bd0:	bl	15480 <waddnstr@plt>
   22bd4:	b	22630 <Action_follow@@Base+0x418>
   22bd8:	mov	r2, #0
   22bdc:	mov	r1, #7
   22be0:	bl	15360 <wmove@plt>
   22be4:	cmn	r0, #1
   22be8:	bne	22bf4 <Action_follow@@Base+0x9dc>
   22bec:	ldr	r0, [r4]
   22bf0:	b	228a4 <Action_follow@@Base+0x68c>
   22bf4:	mvn	r2, #0
   22bf8:	ldr	r1, [pc, #192]	; 22cc0 <Action_follow@@Base+0xaa8>
   22bfc:	ldr	r0, [r4]
   22c00:	bl	15480 <waddnstr@plt>
   22c04:	b	22bec <Action_follow@@Base+0x9d4>
   22c08:	andeq	lr, r3, r8, lsl #15
   22c0c:	andeq	lr, r3, r0, ror r7
   22c10:	muleq	r3, r8, r1
   22c14:	andeq	lr, r3, ip, ror r7
   22c18:			; <UNDEFINED> instruction: 0x0002abb0
   22c1c:	ldrdeq	sl, [r2], -ip
   22c20:	andeq	sl, r2, r8, lsl ip
   22c24:	andeq	r9, r2, r0
   22c28:	andeq	sl, r2, r8, lsr #24
   22c2c:	andeq	sl, r2, ip, lsr #24
   22c30:	andeq	sl, r2, r0, lsr ip
   22c34:	andeq	sl, r2, r8, lsr ip
   22c38:	andeq	sl, r2, r0, asr #24
   22c3c:	andeq	sl, r2, r4, asr #24
   22c40:	andeq	sl, r2, r0, asr ip
   22c44:	andeq	sl, r2, r8, asr ip
   22c48:	andeq	sl, r2, r0, ror #24
   22c4c:	andeq	sl, r2, r8, ror #24
   22c50:	andeq	r9, r2, r0, ror #26
   22c54:	andeq	sl, r2, r4, lsr #25
   22c58:			; <UNDEFINED> instruction: 0x0002acb4
   22c5c:			; <UNDEFINED> instruction: 0x0002acbc
   22c60:	andeq	sl, r2, r4, asr #25
   22c64:	andeq	sl, r2, ip, asr #25
   22c68:	strdeq	sl, [r2], -r4
   22c6c:	andeq	sl, r2, r4, lsl #26
   22c70:	andeq	sl, r2, ip, lsr sp
   22c74:	muleq	r3, ip, r7
   22c78:	andeq	sl, r2, ip, asr #27
   22c7c:	andeq	sl, r2, r4, asr #20
   22c80:	andeq	sl, r2, r8, lsr #22
   22c84:	andeq	sl, r2, r0, asr #22
   22c88:			; <UNDEFINED> instruction: 0x0002aabc
   22c8c:	andeq	sl, r2, r4, asr fp
   22c90:	andeq	sl, r2, r4, ror fp
   22c94:	andeq	sl, r2, r0, lsl #23
   22c98:	andeq	sl, r2, ip, lsl #23
   22c9c:	andeq	sl, r2, r0, lsr sl
   22ca0:	muleq	r2, r8, fp
   22ca4:	andeq	sl, r2, r4, lsr #23
   22ca8:	andeq	sl, r2, r8, lsr #21
   22cac:	andeq	r9, r2, ip, lsl #9
   22cb0:	andeq	sl, r2, ip, lsl lr
   22cb4:	andeq	sl, r2, r0, ror ip
   22cb8:	andeq	sl, r2, r0, lsl #25
   22cbc:	andeq	sl, r2, ip, lsl #25
   22cc0:	andeq	sl, r2, r4, lsl #27
   22cc4:	push	{r4, lr}
   22cc8:	mov	r4, r0
   22ccc:	ldr	r0, [r0, #12]
   22cd0:	bl	1b160 <Panel_getSelected@@Base>
   22cd4:	cmp	r0, #0
   22cd8:	beq	22cec <Action_follow@@Base+0xad4>
   22cdc:	bl	1d208 <Process_toggleTag@@Base>
   22ce0:	ldr	r0, [r4, #12]
   22ce4:	ldr	r1, [pc, #8]	; 22cf4 <Action_follow@@Base+0xadc>
   22ce8:	bl	1b88c <Panel_onKey@@Base>
   22cec:	mov	r0, #0
   22cf0:	pop	{r4, pc}
   22cf4:	andeq	r0, r0, r2, lsl #2
   22cf8:	push	{r4, lr}
   22cfc:	ldr	r0, [r0, #12]
   22d00:	bl	1b160 <Panel_getSelected@@Base>
   22d04:	subs	r3, r0, #0
   22d08:	bne	22d14 <Action_follow@@Base+0xafc>
   22d0c:	mov	r0, r3
   22d10:	pop	{r4, pc}
   22d14:	bl	20928 <TraceScreen_new@@Base>
   22d18:	mov	r4, r0
   22d1c:	bl	209b0 <TraceScreen_forkTracer@@Base>
   22d20:	cmp	r0, #0
   22d24:	bne	22d48 <Action_follow@@Base+0xb30>
   22d28:	mov	r0, r4
   22d2c:	bl	205a0 <TraceScreen_delete@@Base>
   22d30:	ldr	r3, [pc, #28]	; 22d54 <Action_follow@@Base+0xb3c>
   22d34:	ldr	r0, [r3]
   22d38:	bl	15348 <wclear@plt>
   22d3c:	bl	177d0 <CRT_enableDelay@@Base>
   22d40:	mov	r0, #33	; 0x21
   22d44:	pop	{r4, pc}
   22d48:	mov	r0, r4
   22d4c:	bl	23ca8 <InfoScreen_run@@Base>
   22d50:	b	22d28 <Action_follow@@Base+0xb10>
   22d54:	andeq	lr, r3, r8, lsl #15
   22d58:	push	{r4, lr}
   22d5c:	ldr	r0, [r0, #12]
   22d60:	bl	1b160 <Panel_getSelected@@Base>
   22d64:	subs	r3, r0, #0
   22d68:	bne	22d74 <Action_follow@@Base+0xb5c>
   22d6c:	mov	r0, r3
   22d70:	pop	{r4, pc}
   22d74:	bl	219b8 <OpenFilesScreen_new@@Base>
   22d78:	mov	r4, r0
   22d7c:	bl	23ca8 <InfoScreen_run@@Base>
   22d80:	mov	r0, r4
   22d84:	bl	2158c <OpenFilesScreen_delete@@Base>
   22d88:	ldr	r3, [pc, #16]	; 22da0 <Action_follow@@Base+0xb88>
   22d8c:	ldr	r0, [r3]
   22d90:	bl	15348 <wclear@plt>
   22d94:	bl	177d0 <CRT_enableDelay@@Base>
   22d98:	mov	r0, #33	; 0x21
   22d9c:	pop	{r4, pc}
   22da0:	andeq	lr, r3, r8, lsl #15
   22da4:	push	{r4, r5, r6, r7, r8, r9, lr}
   22da8:	sub	sp, sp, #36	; 0x24
   22dac:	ldr	r8, [pc, #240]	; 22ea4 <Action_follow@@Base+0xc8c>
   22db0:	ldr	r5, [r0, #16]
   22db4:	ldr	r6, [r0]
   22db8:	ldr	ip, [r8]
   22dbc:	mov	r3, #1
   22dc0:	mov	r2, #0
   22dc4:	ldr	r1, [r5, #20]
   22dc8:	mov	r4, r0
   22dcc:	stmib	sp, {r5, r6}
   22dd0:	ldr	r9, [r0, #8]
   22dd4:	str	r3, [sp, #12]
   22dd8:	str	r3, [sp]
   22ddc:	mov	r0, r2
   22de0:	mvn	r3, #0
   22de4:	str	ip, [sp, #28]
   22de8:	bl	1e010 <ScreenManager_new@@Base>
   22dec:	mov	r3, r9
   22df0:	mov	r2, r5
   22df4:	mov	r1, r6
   22df8:	mov	r7, r0
   22dfc:	bl	16398 <CategoriesPanel_new@@Base>
   22e00:	mov	r2, #16
   22e04:	mov	r1, r0
   22e08:	mov	r9, r0
   22e0c:	mov	r0, r7
   22e10:	bl	1e0b4 <ScreenManager_add@@Base>
   22e14:	mov	r0, r9
   22e18:	bl	1612c <CategoriesPanel_makeMetersPage@@Base>
   22e1c:	mov	r0, r7
   22e20:	add	r2, sp, #24
   22e24:	add	r1, sp, #20
   22e28:	bl	1e2ac <ScreenManager_run@@Base>
   22e2c:	mov	r0, r7
   22e30:	bl	1e090 <ScreenManager_delete@@Base>
   22e34:	ldrb	r3, [r6, #71]	; 0x47
   22e38:	cmp	r3, #0
   22e3c:	beq	22e48 <Action_follow@@Base+0xc30>
   22e40:	mov	r0, r5
   22e44:	bl	18d0c <Header_writeBackToSettings@@Base>
   22e48:	ldr	r0, [r4, #16]
   22e4c:	bl	19214 <Header_calculateHeight@@Base>
   22e50:	mov	r1, #0
   22e54:	mov	r2, r0
   22e58:	mov	r5, r0
   22e5c:	ldr	r0, [r4, #12]
   22e60:	bl	1b078 <Panel_move@@Base>
   22e64:	ldr	r2, [pc, #60]	; 22ea8 <Action_follow@@Base+0xc90>
   22e68:	ldr	r3, [pc, #60]	; 22eac <Action_follow@@Base+0xc94>
   22e6c:	ldr	r0, [r4, #12]
   22e70:	ldr	r2, [r2]
   22e74:	ldr	r1, [r3]
   22e78:	sub	r2, r2, r5
   22e7c:	sub	r2, r2, #1
   22e80:	bl	1b088 <Panel_resize@@Base>
   22e84:	ldr	r2, [sp, #28]
   22e88:	ldr	r3, [r8]
   22e8c:	mov	r0, #97	; 0x61
   22e90:	cmp	r2, r3
   22e94:	bne	22ea0 <Action_follow@@Base+0xc88>
   22e98:	add	sp, sp, #36	; 0x24
   22e9c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   22ea0:	bl	15084 <__stack_chk_fail@plt>
   22ea4:			; <UNDEFINED> instruction: 0x0003ccb8
   22ea8:	andeq	lr, r3, r0, ror r7
   22eac:	andeq	lr, r3, ip, ror r7
   22eb0:	mov	r3, r1
   22eb4:	push	{r4, lr}
   22eb8:	mov	r1, r0
   22ebc:	mov	r0, r3
   22ec0:	mov	r4, r2
   22ec4:	bl	193f4 <ListItem_new@@Base>
   22ec8:	mov	r1, r0
   22ecc:	mov	r0, r4
   22ed0:	pop	{r4, lr}
   22ed4:	b	1b0d4 <Panel_add@@Base>
   22ed8:	push	{r4, lr}
   22edc:	sub	sp, sp, #8
   22ee0:	ldr	r4, [pc, #68]	; 22f2c <Action_follow@@Base+0xd14>
   22ee4:	ldr	r0, [r0, #12]
   22ee8:	add	r3, sp, #3
   22eec:	ldr	ip, [r4]
   22ef0:	mvn	r2, #0
   22ef4:	ldr	r1, [pc, #52]	; 22f30 <Action_follow@@Base+0xd18>
   22ef8:	str	ip, [sp, #4]
   22efc:	bl	18020 <MainPanel_foreachProcess@@Base>
   22f00:	cmp	r0, #0
   22f04:	bne	22f0c <Action_follow@@Base+0xcf4>
   22f08:	bl	14fac <beep@plt>
   22f0c:	ldr	r2, [sp, #4]
   22f10:	ldr	r3, [r4]
   22f14:	ldrb	r0, [sp, #3]
   22f18:	cmp	r2, r3
   22f1c:	bne	22f28 <Action_follow@@Base+0xd10>
   22f20:	add	sp, sp, #8
   22f24:	pop	{r4, pc}
   22f28:	bl	15084 <__stack_chk_fail@plt>
   22f2c:			; <UNDEFINED> instruction: 0x0003ccb8
   22f30:	andeq	sp, r1, r8, ror #4
   22f34:	push	{r4, lr}
   22f38:	ldr	r0, [r0]
   22f3c:	bl	1f9cc <Settings_invertSortOrder@@Base>
   22f40:	mov	r0, #5
   22f44:	pop	{r4, pc}
   22f48:	ldr	r2, [r0, #12]
   22f4c:	push	{r4, lr}
   22f50:	add	r3, r2, #8192	; 0x2000
   22f54:	mov	r1, #0
   22f58:	ldr	r0, [r3, #308]	; 0x134
   22f5c:	bl	220c8 <IncSet_activate@@Base>
   22f60:	mov	r0, #9
   22f64:	pop	{r4, pc}
   22f68:	ldr	r2, [r0, #12]
   22f6c:	push	{r4, r5, r6, lr}
   22f70:	add	r3, r2, #8192	; 0x2000
   22f74:	mov	r5, r0
   22f78:	ldr	r4, [r3, #308]	; 0x134
   22f7c:	mov	r1, #1
   22f80:	mov	r0, r4
   22f84:	bl	220c8 <IncSet_activate@@Base>
   22f88:	ldrb	r0, [r4, #120]	; 0x78
   22f8c:	ldr	r2, [r5, #8]
   22f90:	cmp	r0, #0
   22f94:	moveq	r3, r0
   22f98:	addne	r3, r4, #56	; 0x38
   22f9c:	mov	r0, #9
   22fa0:	str	r3, [r2, #32]
   22fa4:	pop	{r4, r5, r6, pc}
   22fa8:	ldr	r2, [r0]
   22fac:	push	{r4, lr}
   22fb0:	ldrb	r3, [r2, #58]	; 0x3a
   22fb4:	ldr	r0, [r0, #8]
   22fb8:	eor	r3, r3, #1
   22fbc:	cmp	r3, #0
   22fc0:	strb	r3, [r2, #58]	; 0x3a
   22fc4:	movne	r3, #1
   22fc8:	strne	r3, [r2, #48]	; 0x30
   22fcc:	bl	1d824 <ProcessList_expandTree@@Base>
   22fd0:	mov	r0, #109	; 0x6d
   22fd4:	pop	{r4, pc}
   22fd8:	push	{r4, r5, r6, lr}
   22fdc:	mov	r5, r0
   22fe0:	mov	r6, r1
   22fe4:	mov	r4, #0
   22fe8:	mov	r3, #1
   22fec:	strb	r3, [r2]
   22ff0:	mov	r0, r5
   22ff4:	bl	1b1d4 <Panel_size@@Base>
   22ff8:	mov	r1, r4
   22ffc:	cmp	r4, r0
   23000:	mov	r0, r5
   23004:	add	r4, r4, #1
   23008:	popge	{r4, r5, r6, pc}
   2300c:	bl	1b114 <Panel_get@@Base>
   23010:	ldrb	r3, [r0, #46]	; 0x2e
   23014:	cmp	r3, #0
   23018:	bne	22ff0 <Action_follow@@Base+0xdd8>
   2301c:	ldr	r3, [r0, #24]
   23020:	ldr	r1, [r0, #16]
   23024:	cmp	r3, r6
   23028:	beq	23040 <Action_follow@@Base+0xe28>
   2302c:	cmp	r3, r1
   23030:	bne	22ff0 <Action_follow@@Base+0xdd8>
   23034:	ldr	r3, [r0, #20]
   23038:	cmp	r3, r6
   2303c:	bne	22ff0 <Action_follow@@Base+0xdd8>
   23040:	add	r2, r0, #46	; 0x2e
   23044:	mov	r0, r5
   23048:	bl	22fd8 <Action_follow@@Base+0xdc0>
   2304c:	b	22ff0 <Action_follow@@Base+0xdd8>
   23050:	push	{r4, lr}
   23054:	mov	r4, r0
   23058:	ldr	r0, [r0, #12]
   2305c:	bl	1b160 <Panel_getSelected@@Base>
   23060:	subs	r3, r0, #0
   23064:	beq	23078 <Action_follow@@Base+0xe60>
   23068:	ldr	r0, [r4, #12]
   2306c:	add	r2, r3, #46	; 0x2e
   23070:	ldr	r1, [r3, #16]
   23074:	bl	22fd8 <Action_follow@@Base+0xdc0>
   23078:	mov	r0, #0
   2307c:	pop	{r4, pc}
   23080:	ldr	r3, [r0]
   23084:	ldrb	r3, [r3, #58]	; 0x3a
   23088:	cmp	r3, #0
   2308c:	bne	23098 <Action_follow@@Base+0xe80>
   23090:	mov	r0, #0
   23094:	bx	lr
   23098:	push	{r4, r5, r6, lr}
   2309c:	ldr	r5, [r0, #12]
   230a0:	mov	r0, r5
   230a4:	bl	1b160 <Panel_getSelected@@Base>
   230a8:	cmp	r0, #0
   230ac:	beq	230f8 <Action_follow@@Base+0xee0>
   230b0:	ldr	r6, [r0, #24]
   230b4:	ldr	r3, [r0, #16]
   230b8:	mov	r4, #0
   230bc:	cmp	r6, r3
   230c0:	ldreq	r6, [r0, #20]
   230c4:	b	230e0 <Action_follow@@Base+0xec8>
   230c8:	bl	1b114 <Panel_get@@Base>
   230cc:	ldr	r2, [r0, #16]
   230d0:	mov	r3, r0
   230d4:	cmp	r2, r6
   230d8:	beq	23100 <Action_follow@@Base+0xee8>
   230dc:	add	r4, r4, #1
   230e0:	mov	r0, r5
   230e4:	bl	1b1d4 <Panel_size@@Base>
   230e8:	mov	r1, r4
   230ec:	cmp	r4, r0
   230f0:	mov	r0, r5
   230f4:	blt	230c8 <Action_follow@@Base+0xeb0>
   230f8:	mov	r0, #0
   230fc:	pop	{r4, r5, r6, pc}
   23100:	mov	r2, #0
   23104:	mov	r0, r5
   23108:	mov	r1, r4
   2310c:	strb	r2, [r3, #47]	; 0x2f
   23110:	bl	1b1e0 <Panel_setSelected@@Base>
   23114:	mov	r0, #3
   23118:	pop	{r4, r5, r6, pc}
   2311c:	push	{r4, lr}
   23120:	sub	sp, sp, #8
   23124:	ldr	r4, [pc, #68]	; 23170 <Action_follow@@Base+0xf58>
   23128:	ldr	r0, [r0, #12]
   2312c:	add	r3, sp, #3
   23130:	ldr	ip, [r4]
   23134:	mov	r2, #1
   23138:	ldr	r1, [pc, #52]	; 23174 <Action_follow@@Base+0xf5c>
   2313c:	str	ip, [sp, #4]
   23140:	bl	18020 <MainPanel_foreachProcess@@Base>
   23144:	cmp	r0, #0
   23148:	bne	23150 <Action_follow@@Base+0xf38>
   2314c:	bl	14fac <beep@plt>
   23150:	ldr	r2, [sp, #4]
   23154:	ldr	r3, [r4]
   23158:	ldrb	r0, [sp, #3]
   2315c:	cmp	r2, r3
   23160:	bne	2316c <Action_follow@@Base+0xf54>
   23164:	add	sp, sp, #8
   23168:	pop	{r4, pc}
   2316c:	bl	15084 <__stack_chk_fail@plt>
   23170:			; <UNDEFINED> instruction: 0x0003ccb8
   23174:	andeq	sp, r1, r8, ror #4

00023178 <Action_pickFromVector@@Base>:
   23178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2317c:	sub	sp, sp, #36	; 0x24
   23180:	ldr	r7, [r0, #16]
   23184:	ldr	r9, [pc, #348]	; 232e8 <Action_pickFromVector@@Base+0x170>
   23188:	ldr	r4, [r0, #12]
   2318c:	ldr	lr, [r7, #20]
   23190:	ldr	r0, [r0]
   23194:	ldr	ip, [r9]
   23198:	mov	r6, #0
   2319c:	mov	r3, #1
   231a0:	ldr	sl, [r4, #8]
   231a4:	mov	fp, r2
   231a8:	mov	r8, r1
   231ac:	mov	r2, r6
   231b0:	mov	r1, lr
   231b4:	str	r0, [sp, #8]
   231b8:	str	r6, [sp, #12]
   231bc:	str	r3, [sp]
   231c0:	mov	r0, r6
   231c4:	mvn	r3, #0
   231c8:	str	r7, [sp, #4]
   231cc:	str	ip, [sp, #28]
   231d0:	bl	1e010 <ScreenManager_new@@Base>
   231d4:	sub	r2, fp, #1
   231d8:	mov	r1, r8
   231dc:	strb	r6, [r0, #37]	; 0x25
   231e0:	mov	r5, r0
   231e4:	bl	1e0b4 <ScreenManager_add@@Base>
   231e8:	mov	r1, r4
   231ec:	mov	r0, r5
   231f0:	mvn	r2, #0
   231f4:	bl	1e0b4 <ScreenManager_add@@Base>
   231f8:	mov	r0, r4
   231fc:	bl	18008 <MainPanel_selectedPid@@Base>
   23200:	ldr	r3, [r7, #8]
   23204:	ldr	fp, [r3, #24]
   23208:	cmn	fp, #1
   2320c:	mov	r6, r0
   23210:	beq	232b0 <Action_pickFromVector@@Base+0x138>
   23214:	add	r2, sp, #24
   23218:	add	r1, sp, #20
   2321c:	mov	r0, r5
   23220:	bl	1e2ac <ScreenManager_run@@Base>
   23224:	mov	r0, r5
   23228:	bl	1e090 <ScreenManager_delete@@Base>
   2322c:	mov	r2, sl
   23230:	mov	r1, #0
   23234:	mov	r0, r4
   23238:	bl	1b078 <Panel_move@@Base>
   2323c:	ldr	r2, [pc, #168]	; 232ec <Action_pickFromVector@@Base+0x174>
   23240:	ldr	r3, [pc, #168]	; 232f0 <Action_pickFromVector@@Base+0x178>
   23244:	mov	r0, r4
   23248:	ldr	r2, [r2]
   2324c:	ldr	r1, [r3]
   23250:	sub	r2, r2, sl
   23254:	sub	r2, r2, #1
   23258:	bl	1b088 <Panel_resize@@Base>
   2325c:	ldr	r3, [sp, #20]
   23260:	cmp	r3, r8
   23264:	bne	232d0 <Action_pickFromVector@@Base+0x158>
   23268:	ldr	r3, [sp, #24]
   2326c:	cmp	r3, #13
   23270:	bne	232d0 <Action_pickFromVector@@Base+0x158>
   23274:	mov	r0, r4
   23278:	bl	1b160 <Panel_getSelected@@Base>
   2327c:	cmp	r0, #0
   23280:	beq	232d8 <Action_pickFromVector@@Base+0x160>
   23284:	ldr	r3, [r0, #16]
   23288:	cmp	r3, r6
   2328c:	bne	232d8 <Action_pickFromVector@@Base+0x160>
   23290:	mov	r0, r8
   23294:	bl	1b160 <Panel_getSelected@@Base>
   23298:	ldr	r2, [sp, #28]
   2329c:	ldr	r3, [r9]
   232a0:	cmp	r2, r3
   232a4:	bne	232e4 <Action_pickFromVector@@Base+0x16c>
   232a8:	add	sp, sp, #36	; 0x24
   232ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   232b0:	str	r0, [r3, #24]
   232b4:	add	r2, sp, #24
   232b8:	add	r1, sp, #20
   232bc:	mov	r0, r5
   232c0:	bl	1e2ac <ScreenManager_run@@Base>
   232c4:	ldr	r3, [r7, #8]
   232c8:	str	fp, [r3, #24]
   232cc:	b	23224 <Action_pickFromVector@@Base+0xac>
   232d0:	mov	r0, #0
   232d4:	b	23298 <Action_pickFromVector@@Base+0x120>
   232d8:	bl	14fac <beep@plt>
   232dc:	mov	r0, #0
   232e0:	b	23298 <Action_pickFromVector@@Base+0x120>
   232e4:	bl	15084 <__stack_chk_fail@plt>
   232e8:			; <UNDEFINED> instruction: 0x0003ccb8
   232ec:	andeq	lr, r3, r0, ror r7
   232f0:	andeq	lr, r3, ip, ror r7
   232f4:	push	{r4, r5, r6, lr}
   232f8:	mov	r5, r0
   232fc:	bl	1f9e4 <SignalsPanel_new@@Base>
   23300:	mov	r2, #15
   23304:	mov	r1, r0
   23308:	mov	r4, r0
   2330c:	mov	r0, r5
   23310:	bl	23178 <Action_pickFromVector@@Base>
   23314:	subs	r6, r0, #0
   23318:	beq	23328 <Action_pickFromVector@@Base+0x1b0>
   2331c:	ldr	r3, [r6, #8]
   23320:	cmp	r3, #0
   23324:	bne	23338 <Action_pickFromVector@@Base+0x1c0>
   23328:	mov	r0, r4
   2332c:	bl	1b014 <Panel_delete@@Base>
   23330:	mov	r0, #97	; 0x61
   23334:	pop	{r4, r5, r6, pc}
   23338:	ldr	r0, [r5, #12]
   2333c:	ldr	r1, [pc, #56]	; 2337c <Action_pickFromVector@@Base+0x204>
   23340:	bl	1b048 <Panel_setHeader@@Base>
   23344:	mov	r1, #1
   23348:	ldr	r0, [r5, #12]
   2334c:	bl	1b210 <Panel_draw@@Base>
   23350:	ldr	r3, [pc, #40]	; 23380 <Action_pickFromVector@@Base+0x208>
   23354:	ldr	r0, [r3]
   23358:	bl	154c8 <wrefresh@plt>
   2335c:	ldr	r2, [r6, #8]
   23360:	ldr	r0, [r5, #12]
   23364:	mov	r3, #0
   23368:	ldr	r1, [pc, #20]	; 23384 <Action_pickFromVector@@Base+0x20c>
   2336c:	bl	18020 <MainPanel_foreachProcess@@Base>
   23370:	mov	r0, #500	; 0x1f4
   23374:	bl	14fc4 <napms@plt>
   23378:	b	23328 <Action_pickFromVector@@Base+0x1b0>
   2337c:	andeq	sl, r2, r8, lsr lr
   23380:	andeq	lr, r3, r8, lsl #15
   23384:	andeq	sp, r1, r4, ror r2
   23388:	ldr	r3, [r0, #8]
   2338c:	ldr	r3, [r3, #128]	; 0x80
   23390:	cmp	r3, #1
   23394:	beq	233cc <Action_pickFromVector@@Base+0x254>
   23398:	push	{r4, r5, r6, r7, r8, lr}
   2339c:	mov	r4, r0
   233a0:	ldr	r5, [r0, #12]
   233a4:	mov	r0, r5
   233a8:	bl	1b160 <Panel_getSelected@@Base>
   233ac:	cmp	r0, #0
   233b0:	beq	233c4 <Action_pickFromVector@@Base+0x24c>
   233b4:	ldr	r1, [r4, #8]
   233b8:	bl	21acc <Affinity_get@@Base>
   233bc:	subs	r6, r0, #0
   233c0:	bne	233d4 <Action_pickFromVector@@Base+0x25c>
   233c4:	mov	r0, #0
   233c8:	pop	{r4, r5, r6, r7, r8, pc}
   233cc:	mov	r0, #0
   233d0:	bx	lr
   233d4:	mov	r1, r6
   233d8:	ldr	r0, [r4, #8]
   233dc:	bl	213b8 <AffinityPanel_new@@Base>
   233e0:	mov	r7, r0
   233e4:	mov	r0, r6
   233e8:	bl	21a60 <Affinity_delete@@Base>
   233ec:	mov	r1, r7
   233f0:	mov	r2, #15
   233f4:	mov	r0, r4
   233f8:	bl	23178 <Action_pickFromVector@@Base>
   233fc:	cmp	r0, #0
   23400:	beq	23438 <Action_pickFromVector@@Base+0x2c0>
   23404:	ldr	r1, [r4, #8]
   23408:	mov	r0, r7
   2340c:	bl	21510 <AffinityPanel_getAffinity@@Base>
   23410:	mov	r3, #0
   23414:	ldr	r1, [pc, #52]	; 23450 <Action_pickFromVector@@Base+0x2d8>
   23418:	mov	r2, r0
   2341c:	mov	r4, r0
   23420:	mov	r0, r5
   23424:	bl	18020 <MainPanel_foreachProcess@@Base>
   23428:	cmp	r0, #0
   2342c:	beq	23448 <Action_pickFromVector@@Base+0x2d0>
   23430:	mov	r0, r4
   23434:	bl	21a60 <Affinity_delete@@Base>
   23438:	mov	r0, r7
   2343c:	bl	1b014 <Panel_delete@@Base>
   23440:	mov	r0, #97	; 0x61
   23444:	pop	{r4, r5, r6, r7, r8, pc}
   23448:	bl	14fac <beep@plt>
   2344c:	b	23430 <Action_pickFromVector@@Base+0x2b8>
   23450:	muleq	r2, r8, fp
   23454:	push	{r4, r5, r6, lr}
   23458:	mov	r5, r0
   2345c:	sub	sp, sp, #16
   23460:	ldr	r1, [pc, #208]	; 23538 <Action_pickFromVector@@Base+0x3c0>
   23464:	ldr	r0, [pc, #208]	; 2353c <Action_pickFromVector@@Base+0x3c4>
   23468:	bl	185cc <FunctionBar_newEnterEsc@@Base>
   2346c:	ldr	r1, [pc, #204]	; 23540 <Action_pickFromVector@@Base+0x3c8>
   23470:	mov	r3, #0
   23474:	mov	r2, #1
   23478:	str	r1, [sp, #4]
   2347c:	str	r2, [sp]
   23480:	mov	r1, r3
   23484:	mov	r2, r3
   23488:	str	r0, [sp, #8]
   2348c:	mov	r0, r3
   23490:	bl	1af80 <Panel_new@@Base>
   23494:	ldr	r1, [pc, #168]	; 23544 <Action_pickFromVector@@Base+0x3cc>
   23498:	mov	r4, r0
   2349c:	bl	1b048 <Panel_setHeader@@Base>
   234a0:	mov	r2, r4
   234a4:	ldr	r1, [pc, #156]	; 23548 <Action_pickFromVector@@Base+0x3d0>
   234a8:	ldr	r0, [r5, #4]
   234ac:	bl	20b94 <UsersTable_foreach@@Base>
   234b0:	ldr	r0, [r4, #24]
   234b4:	bl	20e20 <Vector_insertionSort@@Base>
   234b8:	mvn	r1, #0
   234bc:	ldr	r0, [pc, #136]	; 2354c <Action_pickFromVector@@Base+0x3d4>
   234c0:	bl	193f4 <ListItem_new@@Base>
   234c4:	mov	r1, #0
   234c8:	mov	r2, r0
   234cc:	mov	r6, r0
   234d0:	mov	r0, r4
   234d4:	bl	1b0f0 <Panel_insert@@Base>
   234d8:	mov	r1, r4
   234dc:	mov	r0, r5
   234e0:	mov	r2, #20
   234e4:	bl	23178 <Action_pickFromVector@@Base>
   234e8:	subs	r3, r0, #0
   234ec:	beq	23514 <Action_pickFromVector@@Base+0x39c>
   234f0:	cmp	r6, r3
   234f4:	beq	23528 <Action_pickFromVector@@Base+0x3b0>
   234f8:	bl	19494 <ListItem_getRef@@Base>
   234fc:	ldr	r5, [r5, #8]
   23500:	bl	14f10 <getpwnam@plt>
   23504:	cmp	r0, #0
   23508:	mvneq	r3, #0
   2350c:	ldrne	r3, [r0, #8]
   23510:	str	r3, [r5, #28]
   23514:	mov	r0, r4
   23518:	bl	1b014 <Panel_delete@@Base>
   2351c:	mov	r0, #97	; 0x61
   23520:	add	sp, sp, #16
   23524:	pop	{r4, r5, r6, pc}
   23528:	ldr	r3, [r5, #8]
   2352c:	mvn	r2, #0
   23530:	str	r2, [r3, #28]
   23534:	b	23514 <Action_pickFromVector@@Base+0x39c>
   23538:	andeq	sl, r2, r4, lsr #13
   2353c:	andeq	sl, r2, r4, asr #28
   23540:	andeq	sp, r3, r0, asr sl
   23544:	andeq	sl, r2, ip, asr #28
   23548:			; <UNDEFINED> instruction: 0x00022eb0
   2354c:	andeq	sl, r2, r0, ror #28
   23550:	push	{r4, r5, r6, r7, r8, r9, lr}
   23554:	mov	r8, r0
   23558:	sub	sp, sp, #20
   2355c:	ldr	r1, [pc, #264]	; 2366c <Action_pickFromVector@@Base+0x4f4>
   23560:	ldr	r0, [pc, #264]	; 23670 <Action_pickFromVector@@Base+0x4f8>
   23564:	bl	185cc <FunctionBar_newEnterEsc@@Base>
   23568:	ldr	r1, [pc, #260]	; 23674 <Action_pickFromVector@@Base+0x4fc>
   2356c:	mov	r3, #0
   23570:	mov	r2, #1
   23574:	str	r1, [sp, #4]
   23578:	str	r2, [sp]
   2357c:	mov	r1, r3
   23580:	mov	r2, r3
   23584:	str	r0, [sp, #8]
   23588:	mov	r0, r3
   2358c:	bl	1af80 <Panel_new@@Base>
   23590:	ldr	r1, [pc, #224]	; 23678 <Action_pickFromVector@@Base+0x500>
   23594:	mov	r7, r0
   23598:	bl	1b048 <Panel_setHeader@@Base>
   2359c:	ldr	r3, [r8]
   235a0:	ldr	r4, [r3, #28]
   235a4:	ldr	r3, [r4]
   235a8:	cmp	r3, #0
   235ac:	beq	23618 <Action_pickFromVector@@Base+0x4a0>
   235b0:	ldr	r9, [pc, #196]	; 2367c <Action_pickFromVector@@Base+0x504>
   235b4:	mov	r5, #0
   235b8:	b	235d4 <Action_pickFromVector@@Base+0x45c>
   235bc:	mov	r0, r6
   235c0:	bl	14fa0 <free@plt>
   235c4:	ldr	r3, [r4, #4]!
   235c8:	add	r5, r5, #1
   235cc:	cmp	r3, #0
   235d0:	beq	23618 <Action_pickFromVector@@Base+0x4a0>
   235d4:	ldr	r0, [r9, r3, lsl #4]
   235d8:	bl	1fbc8 <String_trim@@Base>
   235dc:	ldr	r1, [r4]
   235e0:	mov	r6, r0
   235e4:	bl	193f4 <ListItem_new@@Base>
   235e8:	mov	r1, r0
   235ec:	mov	r0, r7
   235f0:	bl	1b0d4 <Panel_add@@Base>
   235f4:	ldr	r3, [r8]
   235f8:	ldr	r2, [r4]
   235fc:	ldr	r3, [r3, #52]	; 0x34
   23600:	cmp	r2, r3
   23604:	bne	235bc <Action_pickFromVector@@Base+0x444>
   23608:	mov	r1, r5
   2360c:	mov	r0, r7
   23610:	bl	1b1e0 <Panel_setSelected@@Base>
   23614:	b	235bc <Action_pickFromVector@@Base+0x444>
   23618:	mov	r2, #15
   2361c:	mov	r1, r7
   23620:	mov	r0, r8
   23624:	bl	23178 <Action_pickFromVector@@Base>
   23628:	cmp	r0, #0
   2362c:	movne	r1, #1
   23630:	ldrne	r3, [r8]
   23634:	ldrne	r0, [r0, #8]
   23638:	movne	r2, #0
   2363c:	strne	r0, [r3, #52]	; 0x34
   23640:	strne	r1, [r3, #48]	; 0x30
   23644:	strbne	r2, [r3, #58]	; 0x3a
   23648:	ldr	r3, [r7]
   2364c:	mov	r0, r7
   23650:	movne	r4, #109	; 0x6d
   23654:	ldr	r3, [r3, #8]
   23658:	moveq	r4, #97	; 0x61
   2365c:	blx	r3
   23660:	mov	r0, r4
   23664:	add	sp, sp, #20
   23668:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2366c:	andeq	sl, r2, r4, lsr #13
   23670:	andeq	sl, r2, ip, ror #28
   23674:	andeq	sp, r3, r0, asr sl
   23678:	andeq	sl, r2, r4, ror lr
   2367c:	strdeq	sp, [r3], -r0
   23680:	b	23550 <Action_pickFromVector@@Base+0x3d8>
   23684:	ldr	r2, [r0]
   23688:	ldrb	r2, [r2, #58]	; 0x3a
   2368c:	cmp	r2, #0
   23690:	beq	236bc <Action_pickFromVector@@Base+0x544>
   23694:	push	{r4, lr}
   23698:	ldr	r0, [r0, #12]
   2369c:	bl	1b160 <Panel_getSelected@@Base>
   236a0:	subs	r3, r0, #0
   236a4:	beq	236c0 <Action_pickFromVector@@Base+0x548>
   236a8:	ldrb	r2, [r3, #47]	; 0x2f
   236ac:	mov	r0, #3
   236b0:	eor	r2, r2, #1
   236b4:	strb	r2, [r3, #47]	; 0x2f
   236b8:	pop	{r4, pc}
   236bc:	b	23550 <Action_pickFromVector@@Base+0x3d8>
   236c0:	mov	r0, r3
   236c4:	pop	{r4, pc}

000236c8 <Action_setUserOnly@@Base>:
   236c8:	push	{r4, lr}
   236cc:	mov	r4, r1
   236d0:	bl	14f10 <getpwnam@plt>
   236d4:	cmp	r0, #0
   236d8:	mvneq	r3, #0
   236dc:	ldrne	r3, [r0, #8]
   236e0:	movne	r0, #1
   236e4:	str	r3, [r4]
   236e8:	pop	{r4, pc}

000236ec <Action_setSortKey@@Base>:
   236ec:	mov	r2, #1
   236f0:	mov	r3, #0
   236f4:	str	r1, [r0, #52]	; 0x34
   236f8:	str	r2, [r0, #48]	; 0x30
   236fc:	strb	r3, [r0, #58]	; 0x3a
   23700:	mov	r0, #77	; 0x4d
   23704:	bx	lr

00023708 <Action_setBindings@@Base>:
   23708:	ldr	ip, [pc, #320]	; 23850 <Action_setBindings@@Base+0x148>
   2370c:	ldr	r1, [pc, #320]	; 23854 <Action_setBindings@@Base+0x14c>
   23710:	ldr	r3, [pc, #320]	; 23858 <Action_setBindings@@Base+0x150>
   23714:	push	{r4, r5, lr}
   23718:	ldr	r2, [pc, #316]	; 2385c <Action_setBindings@@Base+0x154>
   2371c:	ldr	lr, [pc, #316]	; 23860 <Action_setBindings@@Base+0x158>
   23720:	str	ip, [r0, #1640]	; 0x668
   23724:	str	r1, [r0, #308]	; 0x134
   23728:	ldr	ip, [pc, #308]	; 23864 <Action_setBindings@@Base+0x15c>
   2372c:	ldr	r1, [pc, #308]	; 23868 <Action_setBindings@@Base+0x160>
   23730:	str	r3, [r0, #336]	; 0x150
   23734:	ldr	r3, [pc, #304]	; 2386c <Action_setBindings@@Base+0x164>
   23738:	str	lr, [r0, #320]	; 0x140
   2373c:	str	r2, [r0, #288]	; 0x120
   23740:	ldr	lr, [pc, #296]	; 23870 <Action_setBindings@@Base+0x168>
   23744:	ldr	r2, [pc, #296]	; 23874 <Action_setBindings@@Base+0x16c>
   23748:	str	ip, [r0, #300]	; 0x12c
   2374c:	str	r1, [r0, #448]	; 0x1c0
   23750:	ldr	ip, [pc, #288]	; 23878 <Action_setBindings@@Base+0x170>
   23754:	ldr	r1, [pc, #288]	; 2387c <Action_setBindings@@Base+0x174>
   23758:	str	r3, [r0, #292]	; 0x124
   2375c:	ldr	r3, [pc, #284]	; 23880 <Action_setBindings@@Base+0x178>
   23760:	ldr	r4, [pc, #284]	; 23884 <Action_setBindings@@Base+0x17c>
   23764:	str	lr, [r0, #388]	; 0x184
   23768:	str	r2, [r0, #464]	; 0x1d0
   2376c:	ldr	lr, [pc, #276]	; 23888 <Action_setBindings@@Base+0x180>
   23770:	str	r2, [r0, #1076]	; 0x434
   23774:	str	ip, [r0, #1072]	; 0x430
   23778:	ldr	r2, [pc, #268]	; 2388c <Action_setBindings@@Base+0x184>
   2377c:	str	ip, [r0, #368]	; 0x170
   23780:	str	r1, [r0, #1068]	; 0x42c
   23784:	ldr	ip, [pc, #260]	; 23890 <Action_setBindings@@Base+0x188>
   23788:	str	r1, [r0, #188]	; 0xbc
   2378c:	str	r3, [r0, #372]	; 0x174
   23790:	ldr	r1, [pc, #252]	; 23894 <Action_setBindings@@Base+0x18c>
   23794:	str	r3, [r0, #1084]	; 0x43c
   23798:	ldr	r3, [pc, #248]	; 23898 <Action_setBindings@@Base+0x190>
   2379c:	str	r4, [r0, #364]	; 0x16c
   237a0:	str	r4, [r0, #1088]	; 0x440
   237a4:	str	lr, [r0, #1080]	; 0x438
   237a8:	str	lr, [r0, #1128]	; 0x468
   237ac:	str	r2, [r0, #240]	; 0xf0
   237b0:	str	r2, [r0, #176]	; 0xb0
   237b4:	str	r2, [r0, #248]	; 0xf8
   237b8:	str	r2, [r0, #184]	; 0xb8
   237bc:	ldr	lr, [pc, #216]	; 2389c <Action_setBindings@@Base+0x194>
   237c0:	str	ip, [r0, #1096]	; 0x448
   237c4:	str	ip, [r0, #452]	; 0x1c4
   237c8:	str	r1, [r0, #1092]	; 0x444
   237cc:	ldr	ip, [pc, #204]	; 238a0 <Action_setBindings@@Base+0x198>
   237d0:	str	r1, [r0, #428]	; 0x1ac
   237d4:	str	r3, [r0, #1144]	; 0x478
   237d8:	ldr	r1, [pc, #196]	; 238a4 <Action_setBindings@@Base+0x19c>
   237dc:	str	r3, [r0, #172]	; 0xac
   237e0:	ldr	r2, [pc, #192]	; 238a8 <Action_setBindings@@Base+0x1a0>
   237e4:	str	r3, [r0, #244]	; 0xf4
   237e8:	str	r3, [r0, #180]	; 0xb4
   237ec:	ldr	r3, [pc, #184]	; 238ac <Action_setBindings@@Base+0x1a4>
   237f0:	ldr	r5, [pc, #184]	; 238b0 <Action_setBindings@@Base+0x1a8>
   237f4:	ldr	r4, [pc, #184]	; 238b4 <Action_setBindings@@Base+0x1ac>
   237f8:	str	lr, [r0, #280]	; 0x118
   237fc:	str	ip, [r0, #432]	; 0x1b0
   23800:	ldr	lr, [pc, #176]	; 238b8 <Action_setBindings@@Base+0x1b0>
   23804:	ldr	ip, [pc, #176]	; 238bc <Action_setBindings@@Base+0x1b4>
   23808:	str	r1, [r0, #460]	; 0x1cc
   2380c:	str	r2, [r0, #128]	; 0x80
   23810:	ldr	r1, [pc, #168]	; 238c0 <Action_setBindings@@Base+0x1b8>
   23814:	ldr	r2, [pc, #168]	; 238c4 <Action_setBindings@@Base+0x1bc>
   23818:	str	r3, [r0, #48]	; 0x30
   2381c:	ldr	r3, [pc, #164]	; 238c8 <Action_setBindings@@Base+0x1c0>
   23820:	str	r5, [r0, #508]	; 0x1fc
   23824:	str	r4, [r0, #468]	; 0x1d4
   23828:	str	lr, [r0, #340]	; 0x154
   2382c:	str	ip, [r0, #396]	; 0x18c
   23830:	str	r1, [r0, #404]	; 0x194
   23834:	str	r2, [r0, #332]	; 0x14c
   23838:	str	r2, [r0, #268]	; 0x10c
   2383c:	str	r2, [r0, #1064]	; 0x428
   23840:	str	r3, [r0, #1060]	; 0x424
   23844:	str	r3, [r0, #416]	; 0x1a0
   23848:	str	r3, [r0, #252]	; 0xfc
   2384c:	pop	{r4, r5, pc}
   23850:	andeq	r2, r2, ip, ror #4
   23854:	andeq	r2, r2, r0, lsr r1
   23858:	andeq	r2, r2, r8, ror r1
   2385c:			; <UNDEFINED> instruction: 0x000221b4
   23860:	andeq	r2, r2, r4, asr r1
   23864:	muleq	r2, ip, r1
   23868:	ldrdeq	r2, [r2], -r0
   2386c:	andeq	r2, r2, r4, lsr pc
   23870:	andeq	r3, r2, r8, lsl #7
   23874:	andeq	r2, r2, r8, lsr #31
   23878:	andeq	r2, r2, r8, ror #30
   2387c:	andeq	r2, r2, r8, asr #30
   23880:	ldrdeq	r2, [r2], -r8
   23884:	andeq	r3, r2, ip, lsl r1
   23888:	andeq	r3, r2, r4, lsl #13
   2388c:	andeq	r3, r2, r0, lsl #13
   23890:	andeq	r2, r2, r8, ror #3
   23894:	strdeq	r3, [r2], -r4
   23898:	strdeq	r2, [r2], -r0
   2389c:	andeq	r2, r2, r8, lsl r2
   238a0:	andeq	r2, r2, r8, asr sp
   238a4:	strdeq	r2, [r2], -r8
   238a8:	andeq	r2, r2, r4, asr #25
   238ac:	andeq	r2, r2, r0, asr r2
   238b0:	andeq	r3, r2, r0, lsl #1
   238b4:	andeq	r3, r2, r4, asr r4
   238b8:	andeq	r2, r2, r4, lsl #6
   238bc:	andeq	r3, r2, r0, asr r0
   238c0:			; <UNDEFINED> instruction: 0x000222b8
   238c4:	andeq	r2, r2, r4, lsr #27
   238c8:	andeq	r2, r2, r4, asr #6

000238cc <EnvScreen_delete@@Base>:
   238cc:	push	{r4, lr}
   238d0:	bl	23aa4 <InfoScreen_done@@Base>
   238d4:	pop	{r4, lr}
   238d8:	b	14fa0 <free@plt>

000238dc <EnvScreen_draw@@Base>:
   238dc:	ldr	r2, [r0, #4]
   238e0:	ldr	r1, [pc, #8]	; 238f0 <EnvScreen_draw@@Base+0x14>
   238e4:	ldr	r3, [r2, #28]
   238e8:	ldr	r2, [r2, #16]
   238ec:	b	23acc <InfoScreen_drawTitled@@Base>
   238f0:	ldrdeq	fp, [r2], -r4

000238f4 <EnvScreen_scan@@Base>:
   238f4:	push	{r4, r5, r6, r7, r8, lr}
   238f8:	mov	r5, r0
   238fc:	ldr	r6, [r0, #8]
   23900:	mov	r0, r6
   23904:	bl	1b1cc <Panel_getSelectedIndex@@Base>
   23908:	cmp	r0, #0
   2390c:	movle	r8, #0
   23910:	ble	23920 <EnvScreen_scan@@Base+0x2c>
   23914:	mov	r0, r6
   23918:	bl	1b1cc <Panel_getSelectedIndex@@Base>
   2391c:	mov	r8, r0
   23920:	mov	r0, r6
   23924:	bl	1b0a8 <Panel_prune@@Base>
   23928:	ldr	r3, [r5, #4]
   2392c:	ldr	r0, [r3, #16]
   23930:	bl	2456c <Platform_getProcessEnv@@Base>
   23934:	subs	r7, r0, #0
   23938:	beq	23998 <EnvScreen_scan@@Base+0xa4>
   2393c:	ldrb	r3, [r7]
   23940:	cmp	r3, #0
   23944:	beq	23970 <EnvScreen_scan@@Base+0x7c>
   23948:	mov	r4, r7
   2394c:	mov	r1, r4
   23950:	mov	r0, r5
   23954:	bl	23bc0 <InfoScreen_addLine@@Base>
   23958:	mov	r0, r4
   2395c:	bl	152a0 <strlen@plt>
   23960:	add	r0, r0, #1
   23964:	ldrb	r3, [r4, r0]!
   23968:	cmp	r3, #0
   2396c:	bne	2394c <EnvScreen_scan@@Base+0x58>
   23970:	mov	r0, r7
   23974:	bl	14fa0 <free@plt>
   23978:	ldr	r0, [r5, #20]
   2397c:	bl	20e20 <Vector_insertionSort@@Base>
   23980:	ldr	r0, [r6, #24]
   23984:	bl	20e20 <Vector_insertionSort@@Base>
   23988:	mov	r1, r8
   2398c:	mov	r0, r6
   23990:	pop	{r4, r5, r6, r7, r8, lr}
   23994:	b	1b1e0 <Panel_setSelected@@Base>
   23998:	ldr	r1, [pc, #8]	; 239a8 <EnvScreen_scan@@Base+0xb4>
   2399c:	mov	r0, r5
   239a0:	bl	23bc0 <InfoScreen_addLine@@Base>
   239a4:	b	23978 <EnvScreen_scan@@Base+0x84>
   239a8:	strdeq	fp, [r2], -r4

000239ac <EnvScreen_new@@Base>:
   239ac:	push	{r4, lr}
   239b0:	mov	r4, r0
   239b4:	sub	sp, sp, #8
   239b8:	mov	r0, #24
   239bc:	bl	23fb0 <xMalloc@@Base>
   239c0:	ldr	r3, [pc, #40]	; 239f0 <EnvScreen_new@@Base+0x44>
   239c4:	ldr	lr, [pc, #40]	; 239f4 <EnvScreen_new@@Base+0x48>
   239c8:	ldr	ip, [pc, #40]	; 239f8 <EnvScreen_new@@Base+0x4c>
   239cc:	ldr	r3, [r3]
   239d0:	mov	r1, r4
   239d4:	sub	r3, r3, #3
   239d8:	mov	r2, #0
   239dc:	str	lr, [r0]
   239e0:	str	ip, [sp]
   239e4:	bl	239fc <InfoScreen_init@@Base>
   239e8:	add	sp, sp, #8
   239ec:	pop	{r4, pc}
   239f0:	andeq	lr, r3, r0, ror r7
   239f4:	andeq	sp, r3, r4, ror #29
   239f8:	ldrdeq	sl, [r2], -r0

000239fc <InfoScreen_init@@Base>:
   239fc:	push	{r4, r5, lr}
   23a00:	subs	r5, r2, #0
   23a04:	sub	sp, sp, #28
   23a08:	mov	r4, r0
   23a0c:	str	r1, [r0, #4]
   23a10:	beq	23a74 <InfoScreen_init@@Base+0x78>
   23a14:	ldr	r1, [pc, #120]	; 23a94 <InfoScreen_init@@Base+0x98>
   23a18:	ldr	r2, [pc, #120]	; 23a98 <InfoScreen_init@@Base+0x9c>
   23a1c:	mov	r0, #0
   23a20:	ldr	r2, [r2]
   23a24:	stm	sp, {r0, r1, r5}
   23a28:	mov	r1, #1
   23a2c:	bl	1af80 <Panel_new@@Base>
   23a30:	str	r0, [r4, #8]
   23a34:	mov	r0, r5
   23a38:	bl	21c48 <IncSet_new@@Base>
   23a3c:	ldr	r3, [r4, #8]
   23a40:	mvn	r2, #0
   23a44:	mov	r1, #1
   23a48:	ldr	r3, [r3, #24]
   23a4c:	str	r0, [r4, #16]
   23a50:	ldr	r0, [r3, #4]
   23a54:	bl	20ce4 <Vector_new@@Base>
   23a58:	ldr	r1, [sp, #40]	; 0x28
   23a5c:	str	r0, [r4, #20]
   23a60:	ldr	r0, [r4, #8]
   23a64:	bl	1b048 <Panel_setHeader@@Base>
   23a68:	mov	r0, r4
   23a6c:	add	sp, sp, #28
   23a70:	pop	{r4, r5, pc}
   23a74:	ldr	r1, [pc, #32]	; 23a9c <InfoScreen_init@@Base+0xa0>
   23a78:	ldr	r2, [pc, #32]	; 23aa0 <InfoScreen_init@@Base+0xa4>
   23a7c:	add	r0, r1, #16
   23a80:	str	r3, [sp, #20]
   23a84:	bl	184a4 <FunctionBar_new@@Base>
   23a88:	ldr	r3, [sp, #20]
   23a8c:	mov	r5, r0
   23a90:	b	23a14 <InfoScreen_init@@Base+0x18>
   23a94:	andeq	sp, r3, r0, asr sl
   23a98:	andeq	lr, r3, ip, ror r7
   23a9c:	andeq	fp, r2, r8, lsl r2
   23aa0:	andeq	sp, r3, r4, lsl #30

00023aa4 <InfoScreen_done@@Base>:
   23aa4:	push	{r4, lr}
   23aa8:	mov	r4, r0
   23aac:	ldr	r0, [r0, #8]
   23ab0:	bl	1b014 <Panel_delete@@Base>
   23ab4:	ldr	r0, [r4, #16]
   23ab8:	bl	21cdc <IncSet_delete@@Base>
   23abc:	ldr	r0, [r4, #20]
   23ac0:	bl	20d40 <Vector_delete@@Base>
   23ac4:	mov	r0, r4
   23ac8:	pop	{r4, pc}

00023acc <InfoScreen_drawTitled@@Base>:
   23acc:	push	{r1, r2, r3}
   23ad0:	push	{r4, r5, r6, r7, lr}
   23ad4:	mov	r6, r0
   23ad8:	ldr	r4, [pc, #208]	; 23bb0 <InfoScreen_drawTitled@@Base+0xe4>
   23adc:	sub	sp, sp, #8
   23ae0:	add	r3, sp, #32
   23ae4:	ldr	r0, [r4]
   23ae8:	str	r3, [sp]
   23aec:	cmp	r0, #0
   23af0:	ldr	r5, [pc, #188]	; 23bb4 <InfoScreen_drawTitled@@Base+0xe8>
   23af4:	ldrne	r3, [pc, #188]	; 23bb8 <InfoScreen_drawTitled@@Base+0xec>
   23af8:	ldr	r7, [sp, #28]
   23afc:	ldr	r2, [r5]
   23b00:	ldrne	r3, [r3]
   23b04:	str	r2, [sp, #4]
   23b08:	mov	r2, #0
   23b0c:	ldrne	r3, [r3, #44]	; 0x2c
   23b10:	mov	r1, r2
   23b14:	strne	r3, [r0, #16]
   23b18:	bl	15360 <wmove@plt>
   23b1c:	cmn	r0, #1
   23b20:	beq	23b38 <InfoScreen_drawTitled@@Base+0x6c>
   23b24:	ldr	r3, [pc, #144]	; 23bbc <InfoScreen_drawTitled@@Base+0xf0>
   23b28:	mov	r1, #32
   23b2c:	ldr	r0, [r4]
   23b30:	ldr	r2, [r3]
   23b34:	bl	15048 <whline@plt>
   23b38:	mov	r2, #0
   23b3c:	mov	r1, r2
   23b40:	ldr	r0, [r4]
   23b44:	bl	15360 <wmove@plt>
   23b48:	ldr	r2, [sp]
   23b4c:	mov	r1, r7
   23b50:	ldr	r0, [r4]
   23b54:	bl	14f88 <vwprintw@plt>
   23b58:	ldr	r3, [r4]
   23b5c:	ldr	r0, [r6, #8]
   23b60:	cmp	r3, #0
   23b64:	ldrne	r2, [pc, #76]	; 23bb8 <InfoScreen_drawTitled@@Base+0xec>
   23b68:	ldrne	r2, [r2]
   23b6c:	ldrne	r2, [r2, #4]
   23b70:	strne	r2, [r3, #16]
   23b74:	mov	r3, #1
   23b78:	strb	r3, [r0, #50]	; 0x32
   23b7c:	mov	r1, r3
   23b80:	bl	1b210 <Panel_draw@@Base>
   23b84:	ldr	r0, [r6, #16]
   23b88:	bl	220f8 <IncSet_drawBar@@Base>
   23b8c:	ldr	r2, [sp, #4]
   23b90:	ldr	r3, [r5]
   23b94:	cmp	r2, r3
   23b98:	bne	23bac <InfoScreen_drawTitled@@Base+0xe0>
   23b9c:	add	sp, sp, #8
   23ba0:	pop	{r4, r5, r6, r7, lr}
   23ba4:	add	sp, sp, #12
   23ba8:	bx	lr
   23bac:	bl	15084 <__stack_chk_fail@plt>
   23bb0:	andeq	lr, r3, r8, lsl #15
   23bb4:			; <UNDEFINED> instruction: 0x0003ccb8
   23bb8:	muleq	r3, r8, r1
   23bbc:	andeq	lr, r3, ip, ror r7

00023bc0 <InfoScreen_addLine@@Base>:
   23bc0:	push	{r4, r5, r6, lr}
   23bc4:	mov	r4, r0
   23bc8:	ldr	r6, [r0, #20]
   23bcc:	mov	r5, r1
   23bd0:	mov	r0, r1
   23bd4:	mov	r1, #0
   23bd8:	bl	193f4 <ListItem_new@@Base>
   23bdc:	mov	r1, r0
   23be0:	mov	r0, r6
   23be4:	bl	21094 <Vector_add@@Base>
   23be8:	ldr	r1, [r4, #16]
   23bec:	ldrb	r3, [r1, #120]	; 0x78
   23bf0:	cmp	r3, #0
   23bf4:	beq	23c0c <InfoScreen_addLine@@Base+0x4c>
   23bf8:	add	r1, r1, #56	; 0x38
   23bfc:	mov	r0, r5
   23c00:	bl	14f1c <strcasestr@plt>
   23c04:	cmp	r0, #0
   23c08:	popeq	{r4, r5, r6, pc}
   23c0c:	ldr	r2, [r4, #20]
   23c10:	ldr	r0, [r4, #8]
   23c14:	pop	{r4, r5, r6, lr}
   23c18:	ldr	r3, [r2, #16]
   23c1c:	ldr	r2, [r2]
   23c20:	sub	r3, r3, #-1073741823	; 0xc0000001
   23c24:	ldr	r1, [r2, r3, lsl #2]
   23c28:	b	1b0d4 <Panel_add@@Base>

00023c2c <InfoScreen_appendLine@@Base>:
   23c2c:	ldr	r2, [r0, #20]
   23c30:	push	{r4, r5, r6, r7, r8, lr}
   23c34:	mov	r4, r0
   23c38:	ldr	r3, [r2, #16]
   23c3c:	ldr	r2, [r2]
   23c40:	sub	r3, r3, #-1073741823	; 0xc0000001
   23c44:	mov	r7, r1
   23c48:	ldr	r5, [r2, r3, lsl #2]
   23c4c:	mov	r0, r5
   23c50:	bl	19438 <ListItem_append@@Base>
   23c54:	ldr	r6, [r4, #16]
   23c58:	ldrb	r3, [r6, #120]	; 0x78
   23c5c:	cmp	r3, #0
   23c60:	popeq	{r4, r5, r6, r7, r8, pc}
   23c64:	ldr	r8, [r4, #8]
   23c68:	mov	r0, r8
   23c6c:	bl	1b1d4 <Panel_size@@Base>
   23c70:	sub	r1, r0, #1
   23c74:	mov	r0, r8
   23c78:	bl	1b114 <Panel_get@@Base>
   23c7c:	cmp	r5, r0
   23c80:	popeq	{r4, r5, r6, r7, r8, pc}
   23c84:	add	r1, r6, #56	; 0x38
   23c88:	mov	r0, r7
   23c8c:	bl	14f1c <strcasestr@plt>
   23c90:	cmp	r0, #0
   23c94:	popeq	{r4, r5, r6, r7, r8, pc}
   23c98:	mov	r1, r5
   23c9c:	ldr	r0, [r4, #8]
   23ca0:	pop	{r4, r5, r6, r7, r8, lr}
   23ca4:	b	1b0d4 <Panel_add@@Base>

00023ca8 <InfoScreen_run@@Base>:
   23ca8:	ldr	r2, [pc, #732]	; 23f8c <InfoScreen_run@@Base+0x2e4>
   23cac:	ldr	r3, [r0]
   23cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23cb4:	sub	sp, sp, #44	; 0x2c
   23cb8:	ldr	r1, [r2]
   23cbc:	ldr	r2, [r3, #16]
   23cc0:	mov	r4, r0
   23cc4:	cmp	r2, #0
   23cc8:	ldr	r6, [r0, #8]
   23ccc:	str	r1, [sp, #36]	; 0x24
   23cd0:	beq	23cdc <InfoScreen_run@@Base+0x34>
   23cd4:	blx	r2
   23cd8:	ldr	r3, [r4]
   23cdc:	ldr	r3, [r3, #20]
   23ce0:	mov	r0, r4
   23ce4:	blx	r3
   23ce8:	ldr	r5, [pc, #672]	; 23f90 <InfoScreen_run@@Base+0x2e8>
   23cec:	ldr	r9, [pc, #672]	; 23f94 <InfoScreen_run@@Base+0x2ec>
   23cf0:	ldr	r7, [pc, #672]	; 23f98 <InfoScreen_run@@Base+0x2f0>
   23cf4:	ldr	sl, [pc, #672]	; 23f9c <InfoScreen_run@@Base+0x2f4>
   23cf8:	ldr	r8, [pc, #672]	; 23fa0 <InfoScreen_run@@Base+0x2f8>
   23cfc:	mov	r1, #1
   23d00:	mov	r0, r6
   23d04:	bl	1b210 <Panel_draw@@Base>
   23d08:	ldr	r3, [r4, #16]
   23d0c:	ldr	r3, [r3, #112]	; 0x70
   23d10:	cmp	r3, #0
   23d14:	beq	23d2c <InfoScreen_run@@Base+0x84>
   23d18:	ldr	r1, [r7]
   23d1c:	ldr	r2, [r9]
   23d20:	sub	r1, r1, #1
   23d24:	ldr	r0, [r5]
   23d28:	bl	15360 <wmove@plt>
   23d2c:	mov	r0, #25
   23d30:	bl	15288 <set_escdelay@plt>
   23d34:	ldr	r0, [r5]
   23d38:	bl	1536c <wgetch@plt>
   23d3c:	cmn	r0, #1
   23d40:	mov	fp, r0
   23d44:	beq	23dc0 <InfoScreen_run@@Base+0x118>
   23d48:	cmp	r0, r8
   23d4c:	beq	23e40 <InfoScreen_run@@Base+0x198>
   23d50:	ldr	r0, [r4, #16]
   23d54:	ldr	r3, [r0, #112]	; 0x70
   23d58:	cmp	r3, #0
   23d5c:	bne	23dec <InfoScreen_run@@Base+0x144>
   23d60:	cmp	fp, #113	; 0x71
   23d64:	beq	23f5c <InfoScreen_run@@Base+0x2b4>
   23d68:	ble	23e08 <InfoScreen_run@@Base+0x160>
   23d6c:	ldr	r3, [pc, #560]	; 23fa4 <InfoScreen_run@@Base+0x2fc>
   23d70:	cmp	fp, r3
   23d74:	beq	23f30 <InfoScreen_run@@Base+0x288>
   23d78:	ble	23ec8 <InfoScreen_run@@Base+0x220>
   23d7c:	ldr	r3, [pc, #548]	; 23fa8 <InfoScreen_run@@Base+0x300>
   23d80:	cmp	fp, r3
   23d84:	beq	23f5c <InfoScreen_run@@Base+0x2b4>
   23d88:	add	r3, r3, #136	; 0x88
   23d8c:	cmp	fp, r3
   23d90:	bne	23efc <InfoScreen_run@@Base+0x254>
   23d94:	ldr	r3, [pc, #528]	; 23fac <InfoScreen_run@@Base+0x304>
   23d98:	ldr	r2, [r7]
   23d9c:	mov	r0, r6
   23da0:	ldr	r1, [r3]
   23da4:	sub	r2, r2, #2
   23da8:	bl	1b088 <Panel_resize@@Base>
   23dac:	ldr	r3, [r4]
   23db0:	mov	r0, r4
   23db4:	ldr	r3, [r3, #20]
   23db8:	blx	r3
   23dbc:	b	23cfc <InfoScreen_run@@Base+0x54>
   23dc0:	ldr	r3, [r4]
   23dc4:	ldr	r3, [r3, #24]
   23dc8:	cmp	r3, #0
   23dcc:	beq	23ddc <InfoScreen_run@@Base+0x134>
   23dd0:	mov	r0, r4
   23dd4:	blx	r3
   23dd8:	b	23cfc <InfoScreen_run@@Base+0x54>
   23ddc:	ldr	r0, [r4, #16]
   23de0:	ldr	r3, [r0, #112]	; 0x70
   23de4:	cmp	r3, #0
   23de8:	beq	23cfc <InfoScreen_run@@Base+0x54>
   23dec:	ldr	r3, [r4, #20]
   23df0:	mov	r1, fp
   23df4:	str	r3, [sp]
   23df8:	mov	r2, r6
   23dfc:	mov	r3, sl
   23e00:	bl	21d00 <IncSet_handleKey@@Base>
   23e04:	b	23cfc <InfoScreen_run@@Base+0x54>
   23e08:	cmp	fp, #27
   23e0c:	beq	23f5c <InfoScreen_run@@Base+0x2b4>
   23e10:	bgt	23eec <InfoScreen_run@@Base+0x244>
   23e14:	cmn	fp, #1
   23e18:	beq	23cfc <InfoScreen_run@@Base+0x54>
   23e1c:	cmp	fp, #12
   23e20:	bne	23efc <InfoScreen_run@@Base+0x254>
   23e24:	ldr	r0, [r5]
   23e28:	bl	15348 <wclear@plt>
   23e2c:	ldr	r3, [r4]
   23e30:	mov	r0, r4
   23e34:	ldr	r3, [r3, #20]
   23e38:	blx	r3
   23e3c:	b	23cfc <InfoScreen_run@@Base+0x54>
   23e40:	add	r0, sp, #16
   23e44:	bl	15054 <getmouse@plt>
   23e48:	subs	r2, r0, #0
   23e4c:	beq	23e78 <InfoScreen_run@@Base+0x1d0>
   23e50:	ldr	r3, [r7]
   23e54:	ldr	r0, [sp, #24]
   23e58:	sub	r3, r3, #1
   23e5c:	cmp	r0, r3
   23e60:	ldr	r0, [r4, #16]
   23e64:	bne	23d54 <InfoScreen_run@@Base+0xac>
   23e68:	ldr	r1, [sp, #20]
   23e6c:	bl	22114 <IncSet_synthesizeEvent@@Base>
   23e70:	mov	fp, r0
   23e74:	b	23d50 <InfoScreen_run@@Base+0xa8>
   23e78:	ldr	r0, [sp, #24]
   23e7c:	ldr	ip, [r6, #8]
   23e80:	ldr	r3, [r7]
   23e84:	cmp	r0, ip
   23e88:	sub	r3, r3, #1
   23e8c:	blt	23e5c <InfoScreen_run@@Base+0x1b4>
   23e90:	cmp	r0, r3
   23e94:	bge	23e5c <InfoScreen_run@@Base+0x1b4>
   23e98:	ldr	r1, [r6, #44]	; 0x2c
   23e9c:	sub	r0, r0, ip
   23ea0:	add	r1, r0, r1
   23ea4:	mov	r0, r6
   23ea8:	str	r2, [sp, #12]
   23eac:	bl	1b1e0 <Panel_setSelected@@Base>
   23eb0:	ldr	r3, [r7]
   23eb4:	ldr	r2, [sp, #12]
   23eb8:	ldr	r0, [sp, #24]
   23ebc:	mov	fp, r2
   23ec0:	sub	r3, r3, #1
   23ec4:	b	23e5c <InfoScreen_run@@Base+0x1b4>
   23ec8:	sub	r3, r3, #2
   23ecc:	cmp	fp, r3
   23ed0:	beq	23f78 <InfoScreen_run@@Base+0x2d0>
   23ed4:	cmp	fp, #268	; 0x10c
   23ed8:	bne	23efc <InfoScreen_run@@Base+0x254>
   23edc:	mov	r2, r6
   23ee0:	mov	r1, #1
   23ee4:	bl	220c8 <IncSet_activate@@Base>
   23ee8:	b	23cfc <InfoScreen_run@@Base+0x54>
   23eec:	cmp	fp, #47	; 0x2f
   23ef0:	beq	23f78 <InfoScreen_run@@Base+0x2d0>
   23ef4:	cmp	fp, #92	; 0x5c
   23ef8:	beq	23edc <InfoScreen_run@@Base+0x234>
   23efc:	ldr	r3, [r4]
   23f00:	ldr	r3, [r3, #28]
   23f04:	cmp	r3, #0
   23f08:	beq	23f20 <InfoScreen_run@@Base+0x278>
   23f0c:	mov	r1, fp
   23f10:	mov	r0, r4
   23f14:	blx	r3
   23f18:	cmp	r0, #0
   23f1c:	bne	23cfc <InfoScreen_run@@Base+0x54>
   23f20:	mov	r1, fp
   23f24:	mov	r0, r6
   23f28:	bl	1b88c <Panel_onKey@@Base>
   23f2c:	b	23cfc <InfoScreen_run@@Base+0x54>
   23f30:	ldr	r0, [r5]
   23f34:	bl	15348 <wclear@plt>
   23f38:	ldr	r3, [r4]
   23f3c:	ldr	r2, [r3, #16]
   23f40:	cmp	r2, #0
   23f44:	beq	23f54 <InfoScreen_run@@Base+0x2ac>
   23f48:	mov	r0, r4
   23f4c:	blx	r2
   23f50:	ldr	r3, [r4]
   23f54:	ldr	r3, [r3, #20]
   23f58:	b	23dd0 <InfoScreen_run@@Base+0x128>
   23f5c:	ldr	r3, [pc, #40]	; 23f8c <InfoScreen_run@@Base+0x2e4>
   23f60:	ldr	r2, [sp, #36]	; 0x24
   23f64:	ldr	r3, [r3]
   23f68:	cmp	r2, r3
   23f6c:	bne	23f88 <InfoScreen_run@@Base+0x2e0>
   23f70:	add	sp, sp, #44	; 0x2c
   23f74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f78:	mov	r2, r6
   23f7c:	mov	r1, #0
   23f80:	bl	220c8 <IncSet_activate@@Base>
   23f84:	b	23cfc <InfoScreen_run@@Base+0x54>
   23f88:	bl	15084 <__stack_chk_fail@plt>
   23f8c:			; <UNDEFINED> instruction: 0x0003ccb8
   23f90:	andeq	lr, r3, r8, lsl #15
   23f94:	andeq	lr, r3, r4, lsr #15
   23f98:	andeq	lr, r3, r0, ror r7
   23f9c:	andeq	r2, r2, ip, lsr #1
   23fa0:	muleq	r0, r9, r1
   23fa4:	andeq	r0, r0, sp, lsl #2
   23fa8:	andeq	r0, r0, r2, lsl r1
   23fac:	andeq	lr, r3, ip, ror r7

00023fb0 <xMalloc@@Base>:
   23fb0:	push	{r4, lr}
   23fb4:	mov	r4, r0
   23fb8:	bl	151c8 <malloc@plt>
   23fbc:	adds	r4, r4, #0
   23fc0:	movne	r4, #1
   23fc4:	cmp	r0, #0
   23fc8:	movne	r4, #0
   23fcc:	cmp	r4, #0
   23fd0:	popeq	{r4, pc}
   23fd4:	bl	1560c <backtrace_symbols_fd@plt+0xf0>

00023fd8 <xCalloc@@Base>:
   23fd8:	push	{r4, r5, r6, lr}
   23fdc:	mov	r5, r0
   23fe0:	mov	r4, r1
   23fe4:	bl	14eec <calloc@plt>
   23fe8:	adds	r4, r4, #0
   23fec:	movne	r4, #1
   23ff0:	cmp	r5, #0
   23ff4:	moveq	r4, #0
   23ff8:	cmp	r0, #0
   23ffc:	movne	r4, #0
   24000:	cmp	r4, #0
   24004:	popeq	{r4, r5, r6, pc}
   24008:	bl	1560c <backtrace_symbols_fd@plt+0xf0>

0002400c <xRealloc@@Base>:
   2400c:	push	{r4, lr}
   24010:	mov	r4, r1
   24014:	bl	150c0 <realloc@plt>
   24018:	adds	r4, r4, #0
   2401c:	movne	r4, #1
   24020:	cmp	r0, #0
   24024:	movne	r4, #0
   24028:	cmp	r4, #0
   2402c:	popeq	{r4, pc}
   24030:	bl	1560c <backtrace_symbols_fd@plt+0xf0>

00024034 <xStrdup@@Base>:
   24034:	push	{r4, lr}
   24038:	bl	15078 <strdup@plt>
   2403c:	cmp	r0, #0
   24040:	popne	{r4, pc}
   24044:	bl	1560c <backtrace_symbols_fd@plt+0xf0>
   24048:	push	{r4, r5, r6, lr}
   2404c:	mov	r4, r0
   24050:	ldr	r5, [r0, #12]
   24054:	mov	r0, r5
   24058:	bl	1b160 <Panel_getSelected@@Base>
   2405c:	cmp	r0, #0
   24060:	popeq	{r4, r5, r6, pc}
   24064:	ldr	r0, [r0, #140]	; 0x8c
   24068:	bl	246c4 <IOPriorityPanel_new@@Base>
   2406c:	mov	r2, #21
   24070:	mov	r1, r0
   24074:	mov	r6, r0
   24078:	mov	r0, r4
   2407c:	bl	23178 <Action_pickFromVector@@Base>
   24080:	cmp	r0, #0
   24084:	beq	240b0 <xStrdup@@Base+0x7c>
   24088:	mov	r0, r6
   2408c:	bl	248ac <IOPriorityPanel_getIOPriority@@Base>
   24090:	mov	r3, #0
   24094:	ldr	r1, [pc, #36]	; 240c0 <xStrdup@@Base+0x8c>
   24098:	mov	r2, r0
   2409c:	mov	r0, r5
   240a0:	bl	18020 <MainPanel_foreachProcess@@Base>
   240a4:	cmp	r0, #0
   240a8:	bne	240b0 <xStrdup@@Base+0x7c>
   240ac:	bl	14fac <beep@plt>
   240b0:	mov	r0, r6
   240b4:	bl	1b014 <Panel_delete@@Base>
   240b8:	mov	r0, #97	; 0x61
   240bc:	pop	{r4, r5, r6, pc}
   240c0:	andeq	r5, r2, ip, lsr #7

000240c4 <Platform_setBindings@@Base>:
   240c4:	ldr	r3, [pc, #4]	; 240d0 <Platform_setBindings@@Base+0xc>
   240c8:	str	r3, [r0, #420]	; 0x1a4
   240cc:	bx	lr
   240d0:	andeq	r4, r2, r8, asr #32

000240d4 <Platform_getUptime@@Base>:
   240d4:	push	{r4, r5, r6, lr}
   240d8:	mov	r2, #0
   240dc:	ldr	r4, [pc, #128]	; 24164 <Platform_getUptime@@Base+0x90>
   240e0:	sub	sp, sp, #24
   240e4:	mov	r3, #0
   240e8:	ldr	ip, [r4]
   240ec:	ldr	r1, [pc, #116]	; 24168 <Platform_getUptime@@Base+0x94>
   240f0:	ldr	r0, [pc, #116]	; 2416c <Platform_getUptime@@Base+0x98>
   240f4:	str	ip, [sp, #20]
   240f8:	strd	r2, [sp, #8]
   240fc:	bl	14f70 <fopen@plt>
   24100:	subs	r5, r0, #0
   24104:	beq	24128 <Platform_getUptime@@Base+0x54>
   24108:	add	r2, sp, #8
   2410c:	ldr	r1, [pc, #92]	; 24170 <Platform_getUptime@@Base+0x9c>
   24110:	bl	15354 <fscanf@plt>
   24114:	mov	r6, r0
   24118:	mov	r0, r5
   2411c:	bl	153fc <fclose@plt>
   24120:	cmp	r6, #0
   24124:	ble	24154 <Platform_getUptime@@Base+0x80>
   24128:	vldr	d0, [sp, #8]
   2412c:	bl	1518c <floor@plt>
   24130:	vcvt.s32.f64	s15, d0
   24134:	vstr	s15, [sp, #4]
   24138:	ldr	r2, [sp, #20]
   2413c:	ldr	r3, [r4]
   24140:	ldr	r0, [sp, #4]
   24144:	cmp	r2, r3
   24148:	bne	24160 <Platform_getUptime@@Base+0x8c>
   2414c:	add	sp, sp, #24
   24150:	pop	{r4, r5, r6, pc}
   24154:	mov	r3, #0
   24158:	str	r3, [sp, #4]
   2415c:	b	24138 <Platform_getUptime@@Base+0x64>
   24160:	bl	15084 <__stack_chk_fail@plt>
   24164:			; <UNDEFINED> instruction: 0x0003ccb8
   24168:			; <UNDEFINED> instruction: 0x0002b1b0
   2416c:	andeq	fp, r2, r8, asr r3
   24170:	andeq	fp, r2, r8, ror #6

00024174 <Platform_getLoadAverage@@Base>:
   24174:	push	{r4, r5, r6, r7, r8, r9, lr}
   24178:	mov	r4, #0
   2417c:	ldr	r6, [pc, #132]	; 24208 <Platform_getLoadAverage@@Base+0x94>
   24180:	mov	r5, #0
   24184:	sub	sp, sp, #36	; 0x24
   24188:	ldr	r3, [r6]
   2418c:	mov	r7, r0
   24190:	strd	r4, [r0]
   24194:	mov	r8, r1
   24198:	strd	r4, [r1]
   2419c:	ldr	r0, [pc, #104]	; 2420c <Platform_getLoadAverage@@Base+0x98>
   241a0:	strd	r4, [r2]
   241a4:	ldr	r1, [pc, #100]	; 24210 <Platform_getLoadAverage@@Base+0x9c>
   241a8:	mov	r9, r2
   241ac:	str	r3, [sp, #28]
   241b0:	bl	14f70 <fopen@plt>
   241b4:	subs	r4, r0, #0
   241b8:	beq	241ec <Platform_getLoadAverage@@Base+0x78>
   241bc:	add	r1, sp, #24
   241c0:	add	ip, sp, #20
   241c4:	str	r1, [sp, #12]
   241c8:	add	r1, sp, #16
   241cc:	str	r9, [sp]
   241d0:	stmib	sp, {r1, ip}
   241d4:	mov	r3, r8
   241d8:	mov	r2, r7
   241dc:	ldr	r1, [pc, #48]	; 24214 <Platform_getLoadAverage@@Base+0xa0>
   241e0:	bl	15354 <fscanf@plt>
   241e4:	mov	r0, r4
   241e8:	bl	153fc <fclose@plt>
   241ec:	ldr	r2, [sp, #28]
   241f0:	ldr	r3, [r6]
   241f4:	cmp	r2, r3
   241f8:	bne	24204 <Platform_getLoadAverage@@Base+0x90>
   241fc:	add	sp, sp, #36	; 0x24
   24200:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24204:	bl	15084 <__stack_chk_fail@plt>
   24208:			; <UNDEFINED> instruction: 0x0003ccb8
   2420c:	andeq	fp, r2, r0, ror r3
   24210:			; <UNDEFINED> instruction: 0x0002b1b0
   24214:	andeq	fp, r2, r0, lsl #7

00024218 <Platform_getMaxPid@@Base>:
   24218:	push	{r4, r5, lr}
   2421c:	sub	sp, sp, #12
   24220:	ldr	r4, [pc, #92]	; 24284 <Platform_getMaxPid@@Base+0x6c>
   24224:	ldr	r1, [pc, #92]	; 24288 <Platform_getMaxPid@@Base+0x70>
   24228:	ldr	r0, [pc, #92]	; 2428c <Platform_getMaxPid@@Base+0x74>
   2422c:	ldr	r3, [r4]
   24230:	str	r3, [sp, #4]
   24234:	bl	14f70 <fopen@plt>
   24238:	subs	r5, r0, #0
   2423c:	beq	24278 <Platform_getMaxPid@@Base+0x60>
   24240:	ldr	r3, [pc, #72]	; 24290 <Platform_getMaxPid@@Base+0x78>
   24244:	add	r2, sp, #8
   24248:	ldr	r1, [pc, #68]	; 24294 <Platform_getMaxPid@@Base+0x7c>
   2424c:	str	r3, [r2, #-8]!
   24250:	bl	15354 <fscanf@plt>
   24254:	mov	r0, r5
   24258:	bl	153fc <fclose@plt>
   2425c:	ldr	r0, [sp]
   24260:	ldr	r2, [sp, #4]
   24264:	ldr	r3, [r4]
   24268:	cmp	r2, r3
   2426c:	bne	24280 <Platform_getMaxPid@@Base+0x68>
   24270:	add	sp, sp, #12
   24274:	pop	{r4, r5, pc}
   24278:	mvn	r0, #0
   2427c:	b	24260 <Platform_getMaxPid@@Base+0x48>
   24280:	bl	15084 <__stack_chk_fail@plt>
   24284:			; <UNDEFINED> instruction: 0x0003ccb8
   24288:			; <UNDEFINED> instruction: 0x0002b1b0
   2428c:	andeq	fp, r2, r4, lsr #7
   24290:	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
   24294:	muleq	r2, ip, r3

00024298 <Platform_setCPUValues@@Base>:
   24298:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2429c:	add	r1, r1, r1, lsl #1
   242a0:	ldr	r7, [r0, #28]
   242a4:	mov	r6, r0
   242a8:	vpush	{d8-d9}
   242ac:	ldr	r5, [r7, #136]	; 0x88
   242b0:	add	r5, r5, r1, lsl #6
   242b4:	ldrd	r0, [r5, #96]	; 0x60
   242b8:	orrs	r3, r0, r1
   242bc:	beq	24400 <Platform_setCPUValues@@Base+0x168>
   242c0:	bl	28b70 <Battery_getData@@Base+0xa64>
   242c4:	vmov	d9, r0, r1
   242c8:	ldrd	r0, [r5, #144]	; 0x90
   242cc:	bl	28b70 <Battery_getData@@Base+0xa64>
   242d0:	vldr	d8, [pc, #504]	; 244d0 <Platform_setCPUValues@@Base+0x238>
   242d4:	ldr	r4, [r6, #32]
   242d8:	vmov	d7, r0, r1
   242dc:	ldrd	r0, [r5, #104]	; 0x68
   242e0:	vdiv.f64	d7, d7, d9
   242e4:	vmul.f64	d7, d7, d8
   242e8:	vstr	d7, [r4]
   242ec:	bl	28b70 <Battery_getData@@Base+0xa64>
   242f0:	ldr	sl, [r7]
   242f4:	ldr	fp, [r6]
   242f8:	ldrd	r8, [r5, #184]	; 0xb8
   242fc:	ldrb	r3, [sl, #57]	; 0x39
   24300:	ldrd	r6, [r5, #176]	; 0xb0
   24304:	cmp	r3, #0
   24308:	vmov	d7, r0, r1
   2430c:	vdiv.f64	d7, d7, d9
   24310:	vmul.f64	d7, d7, d8
   24314:	vstr	d7, [r4, #8]
   24318:	beq	24408 <Platform_setCPUValues@@Base+0x170>
   2431c:	ldrd	r0, [r5, #112]	; 0x70
   24320:	bl	28b70 <Battery_getData@@Base+0xa64>
   24324:	vmov	d7, r0, r1
   24328:	ldrd	r0, [r5, #160]	; 0xa0
   2432c:	vdiv.f64	d7, d7, d9
   24330:	vmul.f64	d7, d7, d8
   24334:	vstr	d7, [r4, #16]
   24338:	bl	28b70 <Battery_getData@@Base+0xa64>
   2433c:	vmov	d7, r0, r1
   24340:	ldrd	r0, [r5, #168]	; 0xa8
   24344:	vdiv.f64	d7, d7, d9
   24348:	vmul.f64	d7, d7, d8
   2434c:	vstr	d7, [r4, #24]
   24350:	bl	28b70 <Battery_getData@@Base+0xa64>
   24354:	vmov	d7, r0, r1
   24358:	mov	r0, r6
   2435c:	mov	r1, r7
   24360:	vdiv.f64	d7, d7, d9
   24364:	vmul.f64	d7, d7, d8
   24368:	vstr	d7, [r4, #32]
   2436c:	bl	28b70 <Battery_getData@@Base+0xa64>
   24370:	vmov	d7, r0, r1
   24374:	mov	r0, r8
   24378:	mov	r1, r9
   2437c:	vdiv.f64	d7, d7, d9
   24380:	vmul.f64	d7, d7, d8
   24384:	vstr	d7, [r4, #40]	; 0x28
   24388:	bl	28b70 <Battery_getData@@Base+0xa64>
   2438c:	vmov	d7, r0, r1
   24390:	ldrd	r0, [r5, #152]	; 0x98
   24394:	vdiv.f64	d7, d7, d9
   24398:	vmul.f64	d7, d7, d8
   2439c:	vstr	d7, [r4, #48]	; 0x30
   243a0:	bl	28b70 <Battery_getData@@Base+0xa64>
   243a4:	mov	r3, #8
   243a8:	vmov	d7, r0, r1
   243ac:	vdiv.f64	d7, d7, d9
   243b0:	vmul.f64	d8, d7, d8
   243b4:	vstr	d8, [r4, #56]	; 0x38
   243b8:	strb	r3, [fp, #69]	; 0x45
   243bc:	ldrb	r3, [sl, #69]	; 0x45
   243c0:	cmp	r3, #0
   243c4:	beq	24498 <Platform_setCPUValues@@Base+0x200>
   243c8:	vldr	d6, [r4, #8]
   243cc:	vldr	d7, [r4]
   243d0:	vldr	d0, [r4, #16]
   243d4:	vldr	d3, [r4, #24]
   243d8:	vldr	d4, [r4, #32]
   243dc:	vadd.f64	d7, d7, d6
   243e0:	vldr	d5, [r4, #40]	; 0x28
   243e4:	vldr	d6, [r4, #48]	; 0x30
   243e8:	vadd.f64	d0, d7, d0
   243ec:	vadd.f64	d0, d0, d3
   243f0:	vadd.f64	d0, d0, d4
   243f4:	vadd.f64	d0, d0, d5
   243f8:	vadd.f64	d0, d0, d6
   243fc:	b	24460 <Platform_setCPUValues@@Base+0x1c8>
   24400:	vldr	d9, [pc, #208]	; 244d8 <Platform_setCPUValues@@Base+0x240>
   24404:	b	242c8 <Platform_setCPUValues@@Base+0x30>
   24408:	ldrd	r0, [r5, #120]	; 0x78
   2440c:	bl	28b70 <Battery_getData@@Base+0xa64>
   24410:	vmov	d7, r0, r1
   24414:	adds	r0, r8, r6
   24418:	adc	r1, r9, r7
   2441c:	vdiv.f64	d7, d7, d9
   24420:	vmul.f64	d7, d7, d8
   24424:	vstr	d7, [r4, #16]
   24428:	bl	28b70 <Battery_getData@@Base+0xa64>
   2442c:	mov	r3, #4
   24430:	vmov	d7, r0, r1
   24434:	vdiv.f64	d7, d7, d9
   24438:	vmul.f64	d8, d7, d8
   2443c:	vstr	d8, [r4, #24]
   24440:	strb	r3, [fp, #69]	; 0x45
   24444:	vldr	d0, [r4]
   24448:	vldr	d5, [r4, #8]
   2444c:	vldr	d6, [r4, #16]
   24450:	vldr	d7, [r4, #24]
   24454:	vadd.f64	d0, d0, d5
   24458:	vadd.f64	d0, d0, d6
   2445c:	vadd.f64	d0, d0, d7
   24460:	vldr	d7, [pc, #104]	; 244d0 <Platform_setCPUValues@@Base+0x238>
   24464:	vcmpe.f64	d0, d7
   24468:	vmrs	APSR_nzcv, fpscr
   2446c:	vmovgt.f64	d0, d7
   24470:	bgt	24490 <Platform_setCPUValues@@Base+0x1f8>
   24474:	vcmpe.f64	d0, #0.0
   24478:	vmrs	APSR_nzcv, fpscr
   2447c:	bmi	244c0 <Platform_setCPUValues@@Base+0x228>
   24480:	vcmp.f64	d0, d0
   24484:	vldr	d7, [pc, #84]	; 244e0 <Platform_setCPUValues@@Base+0x248>
   24488:	vmrs	APSR_nzcv, fpscr
   2448c:	vmovvs.f64	d0, d7
   24490:	vpop	{d8-d9}
   24494:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24498:	vldr	d0, [r4]
   2449c:	vldr	d4, [r4, #8]
   244a0:	vldr	d5, [r4, #16]
   244a4:	vldr	d6, [r4, #24]
   244a8:	vldr	d7, [r4, #32]
   244ac:	vadd.f64	d0, d0, d4
   244b0:	vadd.f64	d0, d0, d5
   244b4:	vadd.f64	d0, d0, d6
   244b8:	vadd.f64	d0, d0, d7
   244bc:	b	24460 <Platform_setCPUValues@@Base+0x1c8>
   244c0:	vpop	{d8-d9}
   244c4:	vldr	d0, [pc, #20]	; 244e0 <Platform_setCPUValues@@Base+0x248>
   244c8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   244cc:	nop			; (mov r0, r0)
   244d0:	andeq	r0, r0, r0
   244d4:	subsmi	r0, r9, r0
   244d8:	andeq	r0, r0, r0
   244dc:	svccc	0x00f00000	; IMB
	...

000244e8 <Platform_setMemoryValues@@Base>:
   244e8:	ldr	r3, [r0, #28]
   244ec:	push	{r4, r5, r6, r7, r8, lr}
   244f0:	mov	r7, r0
   244f4:	ldrd	r0, [r3, #56]	; 0x38
   244f8:	ldr	r4, [r3, #64]	; 0x40
   244fc:	ldr	r6, [r3, #88]	; 0x58
   24500:	ldr	r5, [r3, #96]	; 0x60
   24504:	bl	28b70 <Battery_getData@@Base+0xa64>
   24508:	vmov	s15, r6
   2450c:	add	r3, r6, r5
   24510:	sub	r4, r4, r3
   24514:	vmov	s13, r5
   24518:	vcvt.f64.s32	d5, s15
   2451c:	vmov	s15, r4
   24520:	ldr	r3, [r7, #32]
   24524:	vcvt.f64.s32	d6, s13
   24528:	vcvt.f64.s32	d7, s15
   2452c:	strd	r0, [r7, #40]	; 0x28
   24530:	vstr	d7, [r3]
   24534:	vstr	d5, [r3, #8]
   24538:	vstr	d6, [r3, #16]
   2453c:	pop	{r4, r5, r6, r7, r8, pc}

00024540 <Platform_setSwapValues@@Base>:
   24540:	push	{r4, r5, r6, lr}
   24544:	mov	r4, r0
   24548:	ldr	r5, [r0, #28]
   2454c:	ldrd	r0, [r5, #104]	; 0x68
   24550:	bl	28b70 <Battery_getData@@Base+0xa64>
   24554:	ldr	r6, [r4, #32]
   24558:	strd	r0, [r4, #40]	; 0x28
   2455c:	ldrd	r0, [r5, #112]	; 0x70
   24560:	bl	28b70 <Battery_getData@@Base+0xa64>
   24564:	strd	r0, [r6]
   24568:	pop	{r4, r5, r6, pc}

0002456c <Platform_getProcessEnv@@Base>:
   2456c:	push	{r4, r5, r6, r7, r8, lr}
   24570:	sub	sp, sp, #48	; 0x30
   24574:	ldr	r8, [pc, #312]	; 246b4 <Platform_getProcessEnv@@Base+0x148>
   24578:	ldr	r3, [pc, #312]	; 246b8 <Platform_getProcessEnv@@Base+0x14c>
   2457c:	str	r0, [sp, #4]
   24580:	ldr	ip, [r8]
   24584:	str	r3, [sp]
   24588:	mov	r2, #1
   2458c:	mov	r3, #33	; 0x21
   24590:	mov	r1, #32
   24594:	add	r0, sp, #8
   24598:	str	ip, [sp, #44]	; 0x2c
   2459c:	bl	15510 <__snprintf_chk@plt>
   245a0:	add	r0, sp, #8
   245a4:	ldr	r1, [pc, #272]	; 246bc <Platform_getProcessEnv@@Base+0x150>
   245a8:	bl	14f70 <fopen@plt>
   245ac:	subs	r7, r0, #0
   245b0:	beq	24690 <Platform_getProcessEnv@@Base+0x124>
   245b4:	mov	r0, #4096	; 0x1000
   245b8:	bl	23fb0 <xMalloc@@Base>
   245bc:	subs	r6, r0, #0
   245c0:	movne	r4, #0
   245c4:	movne	r5, #4096	; 0x1000
   245c8:	bne	245ec <Platform_getProcessEnv@@Base+0x80>
   245cc:	b	24698 <Platform_getProcessEnv@@Base+0x12c>
   245d0:	lsl	r5, r5, #1
   245d4:	mov	r0, r6
   245d8:	mov	r1, r5
   245dc:	add	r4, r4, r3
   245e0:	bl	2400c <xRealloc@@Base>
   245e4:	subs	r6, r0, #0
   245e8:	beq	24608 <Platform_getProcessEnv@@Base+0x9c>
   245ec:	mov	r3, r7
   245f0:	sub	r2, r5, r4
   245f4:	mov	r1, #1
   245f8:	add	r0, r6, r4
   245fc:	bl	15168 <fread@plt>
   24600:	subs	r3, r0, #0
   24604:	bne	245d0 <Platform_getProcessEnv@@Base+0x64>
   24608:	mov	r0, r7
   2460c:	bl	153fc <fclose@plt>
   24610:	cmp	r4, #1
   24614:	bls	24628 <Platform_getProcessEnv@@Base+0xbc>
   24618:	add	r3, r6, r4
   2461c:	ldrb	r2, [r3, #-1]
   24620:	cmp	r2, #0
   24624:	beq	24660 <Platform_getProcessEnv@@Base+0xf4>
   24628:	add	r3, r4, #2
   2462c:	cmp	r3, r5
   24630:	add	r7, r4, #1
   24634:	bcc	2467c <Platform_getProcessEnv@@Base+0x110>
   24638:	mov	r3, #0
   2463c:	strb	r3, [r6, r4]
   24640:	strb	r3, [r6, r7]
   24644:	ldr	r2, [sp, #44]	; 0x2c
   24648:	ldr	r3, [r8]
   2464c:	mov	r0, r6
   24650:	cmp	r2, r3
   24654:	bne	246b0 <Platform_getProcessEnv@@Base+0x144>
   24658:	add	sp, sp, #48	; 0x30
   2465c:	pop	{r4, r5, r6, r7, r8, pc}
   24660:	ldrb	r3, [r3, #-2]
   24664:	cmp	r3, #0
   24668:	beq	24644 <Platform_getProcessEnv@@Base+0xd8>
   2466c:	add	r3, r4, #2
   24670:	cmp	r3, r5
   24674:	add	r7, r4, #1
   24678:	bcs	24638 <Platform_getProcessEnv@@Base+0xcc>
   2467c:	add	r1, r5, #2
   24680:	mov	r0, r6
   24684:	bl	2400c <xRealloc@@Base>
   24688:	mov	r6, r0
   2468c:	b	24638 <Platform_getProcessEnv@@Base+0xcc>
   24690:	mov	r6, r7
   24694:	b	24644 <Platform_getProcessEnv@@Base+0xd8>
   24698:	mov	r0, r7
   2469c:	bl	153fc <fclose@plt>
   246a0:	mov	r7, #1
   246a4:	ldr	r1, [pc, #20]	; 246c0 <Platform_getProcessEnv@@Base+0x154>
   246a8:	mov	r4, r6
   246ac:	b	24680 <Platform_getProcessEnv@@Base+0x114>
   246b0:	bl	15084 <__stack_chk_fail@plt>
   246b4:			; <UNDEFINED> instruction: 0x0003ccb8
   246b8:	andeq	fp, r2, r0, asr #7
   246bc:			; <UNDEFINED> instruction: 0x0002b1b0
   246c0:	andeq	r1, r0, r2

000246c4 <IOPriorityPanel_new@@Base>:
   246c4:	ldr	r3, [pc, #424]	; 24874 <IOPriorityPanel_new@@Base+0x1b0>
   246c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   246cc:	sub	sp, sp, #76	; 0x4c
   246d0:	ldr	r3, [r3]
   246d4:	mov	r8, r0
   246d8:	ldr	r1, [pc, #408]	; 24878 <IOPriorityPanel_new@@Base+0x1b4>
   246dc:	ldr	r0, [pc, #408]	; 2487c <IOPriorityPanel_new@@Base+0x1b8>
   246e0:	str	r3, [sp, #68]	; 0x44
   246e4:	bl	185cc <FunctionBar_newEnterEsc@@Base>
   246e8:	ldr	r2, [pc, #400]	; 24880 <IOPriorityPanel_new@@Base+0x1bc>
   246ec:	mov	r3, #1
   246f0:	mov	r1, r3
   246f4:	str	r3, [sp]
   246f8:	str	r2, [sp, #4]
   246fc:	mov	r2, r3
   24700:	str	r0, [sp, #8]
   24704:	mov	r0, r3
   24708:	bl	1af80 <Panel_new@@Base>
   2470c:	ldr	r1, [pc, #368]	; 24884 <IOPriorityPanel_new@@Base+0x1c0>
   24710:	mov	r5, r0
   24714:	bl	1b048 <Panel_setHeader@@Base>
   24718:	mov	r1, #0
   2471c:	ldr	r0, [pc, #356]	; 24888 <IOPriorityPanel_new@@Base+0x1c4>
   24720:	bl	193f4 <ListItem_new@@Base>
   24724:	mov	r1, r0
   24728:	mov	r0, r5
   2472c:	bl	1b0d4 <Panel_add@@Base>
   24730:	cmp	r8, #0
   24734:	beq	24830 <IOPriorityPanel_new@@Base+0x16c>
   24738:	ldr	r7, [pc, #332]	; 2488c <IOPriorityPanel_new@@Base+0x1c8>
   2473c:	ldr	r6, [pc, #332]	; 24890 <IOPriorityPanel_new@@Base+0x1cc>
   24740:	ldr	r9, [pc, #332]	; 24894 <IOPriorityPanel_new@@Base+0x1d0>
   24744:	ldr	fp, [pc, #332]	; 24898 <IOPriorityPanel_new@@Base+0x1d4>
   24748:	mov	r4, #0
   2474c:	ldr	r3, [pc, #328]	; 2489c <IOPriorityPanel_new@@Base+0x1d8>
   24750:	b	2476c <IOPriorityPanel_new@@Base+0xa8>
   24754:	add	r4, r4, #1
   24758:	cmp	r4, #8
   2475c:	beq	247e0 <IOPriorityPanel_new@@Base+0x11c>
   24760:	cmp	r4, #7
   24764:	ldr	r3, [pc, #308]	; 248a0 <IOPriorityPanel_new@@Base+0x1dc>
   24768:	moveq	r3, fp
   2476c:	str	r3, [sp, #12]
   24770:	str	r4, [sp, #8]
   24774:	str	r6, [sp, #4]
   24778:	str	r9, [sp]
   2477c:	mov	r3, #50	; 0x32
   24780:	mov	r2, #1
   24784:	mov	r1, #49	; 0x31
   24788:	add	r0, sp, #16
   2478c:	bl	15510 <__snprintf_chk@plt>
   24790:	cmp	r0, #48	; 0x30
   24794:	bhi	24858 <IOPriorityPanel_new@@Base+0x194>
   24798:	ldr	sl, [r7, #-12]
   2479c:	add	r0, sp, #16
   247a0:	orr	sl, r4, sl, lsl #13
   247a4:	mov	r1, sl
   247a8:	bl	193f4 <ListItem_new@@Base>
   247ac:	mov	r1, r0
   247b0:	mov	r0, r5
   247b4:	bl	1b0d4 <Panel_add@@Base>
   247b8:	cmp	r8, sl
   247bc:	bne	24754 <IOPriorityPanel_new@@Base+0x90>
   247c0:	mov	r0, r5
   247c4:	bl	1b1d4 <Panel_size@@Base>
   247c8:	add	r4, r4, #1
   247cc:	sub	r1, r0, #1
   247d0:	mov	r0, r5
   247d4:	bl	1b1e0 <Panel_setSelected@@Base>
   247d8:	cmp	r4, #8
   247dc:	bne	24760 <IOPriorityPanel_new@@Base+0x9c>
   247e0:	ldr	r6, [r7], #8
   247e4:	cmp	r6, #0
   247e8:	bne	24748 <IOPriorityPanel_new@@Base+0x84>
   247ec:	ldr	r4, [pc, #176]	; 248a4 <IOPriorityPanel_new@@Base+0x1e0>
   247f0:	ldr	r0, [pc, #176]	; 248a8 <IOPriorityPanel_new@@Base+0x1e4>
   247f4:	mov	r1, r4
   247f8:	bl	193f4 <ListItem_new@@Base>
   247fc:	mov	r1, r0
   24800:	mov	r0, r5
   24804:	bl	1b0d4 <Panel_add@@Base>
   24808:	cmp	r8, r4
   2480c:	beq	24840 <IOPriorityPanel_new@@Base+0x17c>
   24810:	ldr	r3, [pc, #92]	; 24874 <IOPriorityPanel_new@@Base+0x1b0>
   24814:	ldr	r2, [sp, #68]	; 0x44
   24818:	mov	r0, r5
   2481c:	ldr	r3, [r3]
   24820:	cmp	r2, r3
   24824:	bne	24870 <IOPriorityPanel_new@@Base+0x1ac>
   24828:	add	sp, sp, #76	; 0x4c
   2482c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24830:	mov	r1, r8
   24834:	mov	r0, r5
   24838:	bl	1b1e0 <Panel_setSelected@@Base>
   2483c:	b	24738 <IOPriorityPanel_new@@Base+0x74>
   24840:	mov	r0, r5
   24844:	bl	1b1d4 <Panel_size@@Base>
   24848:	sub	r1, r0, #1
   2484c:	mov	r0, r5
   24850:	bl	1b1e0 <Panel_setSelected@@Base>
   24854:	b	24810 <IOPriorityPanel_new@@Base+0x14c>
   24858:	mov	r0, #1
   2485c:	bl	15030 <curs_set@plt>
   24860:	bl	14f28 <endwin@plt>
   24864:	mov	r1, #0
   24868:	mov	r0, #1
   2486c:	bl	15114 <err@plt>
   24870:	bl	15084 <__stack_chk_fail@plt>
   24874:			; <UNDEFINED> instruction: 0x0003ccb8
   24878:	andeq	sl, r2, r4, lsr #13
   2487c:	muleq	r2, r8, r8
   24880:	andeq	sp, r3, r0, asr sl
   24884:	andeq	fp, r2, r8, lsr #11
   24888:			; <UNDEFINED> instruction: 0x0002b5b8
   2488c:	andeq	fp, r2, r0, lsl #11
   24890:	andeq	fp, r2, ip, lsl #11
   24894:	ldrdeq	fp, [r2], -r0
   24898:	muleq	r2, r8, r5
   2489c:	andeq	fp, r2, r0, lsr #11
   248a0:	andeq	r9, r2, r0, lsl #20
   248a4:	andeq	r6, r0, r7
   248a8:	ldrdeq	fp, [r2], -ip

000248ac <IOPriorityPanel_getIOPriority@@Base>:
   248ac:	push	{r4, lr}
   248b0:	bl	1b160 <Panel_getSelected@@Base>
   248b4:	ldr	r0, [r0, #8]
   248b8:	pop	{r4, pc}
   248bc:	andeq	r0, r0, r0

000248c0 <Process_delete@@Base>:
   248c0:	push	{r4, lr}
   248c4:	mov	r4, r0
   248c8:	bl	1d1b8 <Process_done@@Base>
   248cc:	ldr	r0, [r4, #308]	; 0x134
   248d0:	bl	14fa0 <free@plt>
   248d4:	ldr	r0, [r4, #316]	; 0x13c
   248d8:	bl	14fa0 <free@plt>
   248dc:	mov	r0, r4
   248e0:	pop	{r4, lr}
   248e4:	b	14fa0 <free@plt>

000248e8 <LinuxProcess_compare@@Base>:
   248e8:	ldr	r3, [r0, #4]
   248ec:	push	{r4, r5, r6, lr}
   248f0:	ldr	r2, [r3, #48]	; 0x30
   248f4:	ldr	r3, [r3, #52]	; 0x34
   248f8:	cmp	r2, #1
   248fc:	sub	r3, r3, #14
   24900:	movne	ip, r0
   24904:	movne	r2, r1
   24908:	moveq	ip, r1
   2490c:	moveq	r2, r0
   24910:	cmp	r3, #101	; 0x65
   24914:	ldrls	pc, [pc, r3, lsl #2]
   24918:	b	24d54 <LinuxProcess_compare@@Base+0x46c>
   2491c:	andeq	r4, r2, r8, lsr sp
   24920:	andeq	r4, r2, ip, lsl sp
   24924:	andeq	r4, r2, r0, lsl #26
   24928:	andeq	r4, r2, r4, ror #25
   2492c:	andeq	r4, r2, r4, asr sp
   24930:	andeq	r4, r2, r4, asr sp
   24934:	andeq	r4, r2, r4, asr sp
   24938:	andeq	r4, r2, r4, asr sp
   2493c:	andeq	r4, r2, r4, asr sp
   24940:	andeq	r4, r2, r4, asr sp
   24944:	andeq	r4, r2, r4, asr sp
   24948:	andeq	r4, r2, r4, asr sp
   2494c:	andeq	r4, r2, r4, asr sp
   24950:	andeq	r4, r2, r4, asr sp
   24954:	andeq	r4, r2, r4, asr sp
   24958:	andeq	r4, r2, r4, asr sp
   2495c:	andeq	r4, r2, r4, asr sp
   24960:	andeq	r4, r2, r4, asr sp
   24964:	andeq	r4, r2, r4, asr sp
   24968:	andeq	r4, r2, r4, asr sp
   2496c:	andeq	r4, r2, r4, asr sp
   24970:	andeq	r4, r2, r4, asr sp
   24974:	andeq	r4, r2, r4, asr sp
   24978:	andeq	r4, r2, r4, asr sp
   2497c:	andeq	r4, r2, r4, asr sp
   24980:	andeq	r4, r2, r4, asr sp
   24984:	andeq	r4, r2, r4, asr sp
   24988:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   2498c:	andeq	r4, r2, r4, asr #25
   24990:			; <UNDEFINED> instruction: 0x00024cb4
   24994:	andeq	r4, r2, r4, lsr #25
   24998:	muleq	r2, r4, ip
   2499c:	andeq	r4, r2, r4, asr sp
   249a0:	andeq	r4, r2, r4, asr sp
   249a4:	andeq	r4, r2, r4, asr sp
   249a8:	andeq	r4, r2, r4, asr sp
   249ac:	andeq	r4, r2, r4, asr sp
   249b0:	andeq	r4, r2, r4, asr sp
   249b4:	andeq	r4, r2, r4, asr sp
   249b8:	andeq	r4, r2, r4, asr sp
   249bc:	andeq	r4, r2, r4, asr sp
   249c0:	andeq	r4, r2, r4, asr sp
   249c4:	andeq	r4, r2, r4, asr sp
   249c8:	andeq	r4, r2, r4, asr sp
   249cc:	andeq	r4, r2, r4, asr sp
   249d0:	andeq	r4, r2, r4, asr sp
   249d4:	andeq	r4, r2, r4, asr sp
   249d8:	andeq	r4, r2, r4, asr sp
   249dc:	andeq	r4, r2, r4, asr sp
   249e0:	andeq	r4, r2, r4, asr sp
   249e4:	andeq	r4, r2, r4, asr sp
   249e8:	andeq	r4, r2, r4, asr sp
   249ec:	andeq	r4, r2, r4, asr sp
   249f0:	andeq	r4, r2, r4, asr sp
   249f4:	andeq	r4, r2, r4, asr sp
   249f8:	andeq	r4, r2, r4, asr sp
   249fc:	andeq	r4, r2, r4, asr sp
   24a00:	andeq	r4, r2, r4, asr sp
   24a04:	andeq	r4, r2, r4, asr sp
   24a08:	andeq	r4, r2, r4, asr sp
   24a0c:	andeq	r4, r2, r4, asr sp
   24a10:	andeq	r4, r2, r4, asr sp
   24a14:	andeq	r4, r2, r4, asr sp
   24a18:	andeq	r4, r2, r4, asr sp
   24a1c:	andeq	r4, r2, r4, asr sp
   24a20:	andeq	r4, r2, r4, asr sp
   24a24:	andeq	r4, r2, r4, asr sp
   24a28:	andeq	r4, r2, r4, asr sp
   24a2c:	andeq	r4, r2, r4, asr sp
   24a30:	andeq	r4, r2, r4, asr sp
   24a34:	andeq	r4, r2, r4, asr sp
   24a38:	andeq	r4, r2, r4, asr sp
   24a3c:	andeq	r4, r2, r4, asr sp
   24a40:	andeq	r4, r2, r4, asr sp
   24a44:	andeq	r4, r2, r4, asr sp
   24a48:	andeq	r4, r2, r4, asr sp
   24a4c:	andeq	r4, r2, r4, asr sp
   24a50:	andeq	r4, r2, r4, asr sp
   24a54:	andeq	r4, r2, r4, asr sp
   24a58:	andeq	r4, r2, r4, asr sp
   24a5c:	andeq	r4, r2, r4, asr sp
   24a60:	andeq	r4, r2, r4, asr sp
   24a64:	andeq	r4, r2, r4, asr sp
   24a68:	andeq	r4, r2, r4, asr sp
   24a6c:	andeq	r4, r2, r4, asr sp
   24a70:	andeq	r4, r2, r4, asr sp
   24a74:	andeq	r4, r2, r4, lsl #25
   24a78:	andeq	r4, r2, r4, ror ip
   24a7c:	andeq	r4, r2, r4, ror #24
   24a80:	andeq	r4, r2, r8, asr #24
   24a84:	andeq	r4, r2, ip, lsr #24
   24a88:	andeq	r4, r2, r0, lsl ip
   24a8c:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24a90:	ldrdeq	r4, [r2], -r8
   24a94:			; <UNDEFINED> instruction: 0x00024bbc
   24a98:	muleq	r2, r8, fp
   24a9c:	andeq	r4, r2, ip, lsl #23
   24aa0:	andeq	r4, r2, r0, lsl #23
   24aa4:	andeq	r4, r2, r0, asr #22
   24aa8:	andeq	r4, r2, ip, lsl fp
   24aac:	andeq	r4, r2, ip, lsl #22
   24ab0:			; <UNDEFINED> instruction: 0x00024ab4
   24ab4:	ldr	r0, [r2, #140]	; 0x8c
   24ab8:	lsrs	r3, r0, #13
   24abc:	bne	24adc <LinuxProcess_compare@@Base+0x1f4>
   24ac0:	ldr	r3, [r2, #96]	; 0x60
   24ac4:	ldr	r0, [pc, #672]	; 24d6c <LinuxProcess_compare@@Base+0x484>
   24ac8:	add	r3, r3, #20
   24acc:	smull	r4, r5, r3, r0
   24ad0:	asr	r0, r3, #31
   24ad4:	rsb	r0, r0, r5, asr #1
   24ad8:	orr	r0, r0, #16384	; 0x4000
   24adc:	ldr	r3, [ip, #140]	; 0x8c
   24ae0:	lsrs	r2, r3, #13
   24ae4:	bne	24b04 <LinuxProcess_compare@@Base+0x21c>
   24ae8:	ldr	r3, [ip, #96]	; 0x60
   24aec:	ldr	r4, [pc, #632]	; 24d6c <LinuxProcess_compare@@Base+0x484>
   24af0:	add	r3, r3, #20
   24af4:	smull	r4, r5, r3, r4
   24af8:	asr	r3, r3, #31
   24afc:	rsb	r3, r3, r5, asr #1
   24b00:	orr	r3, r3, #16384	; 0x4000
   24b04:	sub	r0, r0, r3
   24b08:	pop	{r4, r5, r6, pc}
   24b0c:	ldr	r0, [ip, #312]	; 0x138
   24b10:	ldr	r3, [r2, #312]	; 0x138
   24b14:	sub	r0, r0, r3
   24b18:	pop	{r4, r5, r6, pc}
   24b1c:	ldr	r1, [ip, #308]	; 0x134
   24b20:	ldr	r0, [r2, #308]	; 0x134
   24b24:	ldr	r3, [pc, #580]	; 24d70 <LinuxProcess_compare@@Base+0x488>
   24b28:	cmp	r1, #0
   24b2c:	moveq	r1, r3
   24b30:	cmp	r0, #0
   24b34:	moveq	r0, r3
   24b38:	pop	{r4, r5, r6, lr}
   24b3c:	b	14f34 <strcmp@plt>
   24b40:	vldr	d6, [ip, #280]	; 0x118
   24b44:	vldr	d4, [ip, #288]	; 0x120
   24b48:	vldr	d7, [r2, #280]	; 0x118
   24b4c:	vldr	d5, [r2, #288]	; 0x120
   24b50:	vadd.f64	d6, d6, d4
   24b54:	vadd.f64	d7, d7, d5
   24b58:	vsub.f64	d7, d6, d7
   24b5c:	vmov	r0, r1, d7
   24b60:	bl	28d04 <Battery_getData@@Base+0xbf8>
   24b64:	mov	r4, r0
   24b68:	mov	r5, r1
   24b6c:	cmp	r4, #1
   24b70:	sbcs	r3, r5, #0
   24b74:	blt	24d5c <LinuxProcess_compare@@Base+0x474>
   24b78:	mov	r0, #1
   24b7c:	pop	{r4, r5, r6, pc}
   24b80:	vldr	d6, [ip, #288]	; 0x120
   24b84:	vldr	d7, [r2, #288]	; 0x120
   24b88:	b	24b58 <LinuxProcess_compare@@Base+0x270>
   24b8c:	vldr	d6, [ip, #280]	; 0x118
   24b90:	vldr	d7, [r2, #280]	; 0x118
   24b94:	b	24b58 <LinuxProcess_compare@@Base+0x270>
   24b98:	add	ip, ip, #256	; 0x100
   24b9c:	add	r2, r2, #256	; 0x100
   24ba0:	ldrd	r0, [ip]
   24ba4:	ldrd	r2, [r2]
   24ba8:	subs	r0, r0, r2
   24bac:	sbc	r1, r1, r3
   24bb0:	mov	r4, r0
   24bb4:	mov	r5, r1
   24bb8:	b	24b6c <LinuxProcess_compare@@Base+0x284>
   24bbc:	ldrd	r0, [ip, #248]	; 0xf8
   24bc0:	ldrd	r2, [r2, #248]	; 0xf8
   24bc4:	subs	r0, r0, r2
   24bc8:	sbc	r1, r1, r3
   24bcc:	mov	r4, r0
   24bd0:	mov	r5, r1
   24bd4:	b	24b6c <LinuxProcess_compare@@Base+0x284>
   24bd8:	ldrd	r0, [ip, #240]	; 0xf0
   24bdc:	ldrd	r2, [r2, #240]	; 0xf0
   24be0:	subs	r0, r0, r2
   24be4:	sbc	r1, r1, r3
   24be8:	mov	r4, r0
   24bec:	mov	r5, r1
   24bf0:	b	24b6c <LinuxProcess_compare@@Base+0x284>
   24bf4:	ldrd	r0, [ip, #232]	; 0xe8
   24bf8:	ldrd	r2, [r2, #232]	; 0xe8
   24bfc:	subs	r0, r0, r2
   24c00:	sbc	r1, r1, r3
   24c04:	mov	r4, r0
   24c08:	mov	r5, r1
   24c0c:	b	24b6c <LinuxProcess_compare@@Base+0x284>
   24c10:	ldrd	r0, [ip, #224]	; 0xe0
   24c14:	ldrd	r2, [r2, #224]	; 0xe0
   24c18:	subs	r0, r0, r2
   24c1c:	sbc	r1, r1, r3
   24c20:	mov	r4, r0
   24c24:	mov	r5, r1
   24c28:	b	24b6c <LinuxProcess_compare@@Base+0x284>
   24c2c:	ldrd	r0, [ip, #216]	; 0xd8
   24c30:	ldrd	r2, [r2, #216]	; 0xd8
   24c34:	subs	r0, r0, r2
   24c38:	sbc	r1, r1, r3
   24c3c:	mov	r4, r0
   24c40:	mov	r5, r1
   24c44:	b	24b6c <LinuxProcess_compare@@Base+0x284>
   24c48:	ldrd	r0, [ip, #208]	; 0xd0
   24c4c:	ldrd	r2, [r2, #208]	; 0xd0
   24c50:	subs	r0, r0, r2
   24c54:	sbc	r1, r1, r3
   24c58:	mov	r4, r0
   24c5c:	mov	r5, r1
   24c60:	b	24b6c <LinuxProcess_compare@@Base+0x284>
   24c64:	ldr	r0, [ip, #304]	; 0x130
   24c68:	ldr	r3, [r2, #304]	; 0x130
   24c6c:	sub	r0, r0, r3
   24c70:	pop	{r4, r5, r6, pc}
   24c74:	ldr	r0, [ip, #300]	; 0x12c
   24c78:	ldr	r3, [r2, #300]	; 0x12c
   24c7c:	sub	r0, r0, r3
   24c80:	pop	{r4, r5, r6, pc}
   24c84:	ldr	r0, [ip, #296]	; 0x128
   24c88:	ldr	r3, [r2, #296]	; 0x128
   24c8c:	sub	r0, r0, r3
   24c90:	pop	{r4, r5, r6, pc}
   24c94:	ldr	r0, [ip, #200]	; 0xc8
   24c98:	ldr	r3, [r2, #200]	; 0xc8
   24c9c:	sub	r0, r0, r3
   24ca0:	pop	{r4, r5, r6, pc}
   24ca4:	ldr	r0, [ip, #196]	; 0xc4
   24ca8:	ldr	r3, [r2, #196]	; 0xc4
   24cac:	sub	r0, r0, r3
   24cb0:	pop	{r4, r5, r6, pc}
   24cb4:	ldr	r0, [ip, #192]	; 0xc0
   24cb8:	ldr	r3, [r2, #192]	; 0xc0
   24cbc:	sub	r0, r0, r3
   24cc0:	pop	{r4, r5, r6, pc}
   24cc4:	ldr	r0, [ip, #188]	; 0xbc
   24cc8:	ldr	r3, [r2, #188]	; 0xbc
   24ccc:	sub	r0, r0, r3
   24cd0:	pop	{r4, r5, r6, pc}
   24cd4:	ldr	r0, [ip, #184]	; 0xb8
   24cd8:	ldr	r3, [r2, #184]	; 0xb8
   24cdc:	sub	r0, r0, r3
   24ce0:	pop	{r4, r5, r6, pc}
   24ce4:	ldrd	r0, [ip, #176]	; 0xb0
   24ce8:	ldrd	r2, [r2, #176]	; 0xb0
   24cec:	subs	r0, r0, r2
   24cf0:	sbc	r1, r1, r3
   24cf4:	mov	r4, r0
   24cf8:	mov	r5, r1
   24cfc:	b	24b6c <LinuxProcess_compare@@Base+0x284>
   24d00:	ldrd	r0, [ip, #168]	; 0xa8
   24d04:	ldrd	r2, [r2, #168]	; 0xa8
   24d08:	subs	r0, r0, r2
   24d0c:	sbc	r1, r1, r3
   24d10:	mov	r4, r0
   24d14:	mov	r5, r1
   24d18:	b	24b6c <LinuxProcess_compare@@Base+0x284>
   24d1c:	ldrd	r0, [ip, #160]	; 0xa0
   24d20:	ldrd	r2, [r2, #160]	; 0xa0
   24d24:	subs	r0, r0, r2
   24d28:	sbc	r1, r1, r3
   24d2c:	mov	r4, r0
   24d30:	mov	r5, r1
   24d34:	b	24b6c <LinuxProcess_compare@@Base+0x284>
   24d38:	ldrd	r0, [ip, #152]	; 0x98
   24d3c:	ldrd	r2, [r2, #152]	; 0x98
   24d40:	subs	r0, r0, r2
   24d44:	sbc	r1, r1, r3
   24d48:	mov	r4, r0
   24d4c:	mov	r5, r1
   24d50:	b	24b6c <LinuxProcess_compare@@Base+0x284>
   24d54:	pop	{r4, r5, r6, lr}
   24d58:	b	1bcf0 <Process_compare@@Base>
   24d5c:	orrs	r3, r4, r5
   24d60:	mvnne	r0, #0
   24d64:	moveq	r0, #0
   24d68:	pop	{r4, r5, r6, pc}
   24d6c:	strbtvs	r6, [r6], -r7, ror #12
   24d70:	andeq	r9, r2, r0, lsl #20

00024d74 <LinuxProcess_writeField@@Base>:
   24d74:	push	{r4, r5, r6, r7, r8, lr}
   24d78:	sub	sp, sp, #272	; 0x110
   24d7c:	ldr	lr, [pc, #1436]	; 25320 <LinuxProcess_writeField@@Base+0x5ac>
   24d80:	ldr	r4, [pc, #1436]	; 25324 <LinuxProcess_writeField@@Base+0x5b0>
   24d84:	ldr	r3, [r0, #4]
   24d88:	ldr	lr, [lr]
   24d8c:	ldr	r6, [r4]
   24d90:	mov	r5, #0
   24d94:	mov	ip, r0
   24d98:	sub	r0, r2, #7
   24d9c:	ldrb	r8, [r3, #66]	; 0x42
   24da0:	mov	r7, r1
   24da4:	strb	r5, [sp, #267]	; 0x10b
   24da8:	str	r6, [sp, #268]	; 0x10c
   24dac:	ldr	r5, [lr, #4]
   24db0:	cmp	r0, #108	; 0x6c
   24db4:	ldrls	pc, [pc, r0, lsl #2]
   24db8:	b	25278 <LinuxProcess_writeField@@Base+0x504>
   24dbc:	andeq	r5, r2, r8, asr r2
   24dc0:	andeq	r5, r2, r8, ror r2
   24dc4:	andeq	r5, r2, r8, ror r2
   24dc8:	andeq	r5, r2, r8, ror r2
   24dcc:	andeq	r5, r2, r0, asr #4
   24dd0:	andeq	r5, r2, r8, ror r2
   24dd4:	andeq	r5, r2, r8, lsr #4
   24dd8:	andeq	r5, r2, r8, lsl r2
   24ddc:	andeq	r5, r2, r8, lsl #4
   24de0:	strdeq	r5, [r2], -r8
   24de4:	andeq	r5, r2, r8, ror #3
   24de8:	andeq	r5, r2, r8, ror r2
   24dec:	andeq	r5, r2, r8, ror r2
   24df0:	andeq	r5, r2, r8, ror r2
   24df4:	andeq	r5, r2, r8, ror r2
   24df8:	andeq	r5, r2, r8, ror r2
   24dfc:	andeq	r5, r2, r8, ror r2
   24e00:	andeq	r5, r2, r8, ror r2
   24e04:	andeq	r5, r2, r8, ror r2
   24e08:	andeq	r5, r2, r8, ror r2
   24e0c:	andeq	r5, r2, r8, ror r2
   24e10:	andeq	r5, r2, r8, ror r2
   24e14:	andeq	r5, r2, r8, ror r2
   24e18:	andeq	r5, r2, r8, ror r2
   24e1c:	andeq	r5, r2, r8, ror r2
   24e20:	andeq	r5, r2, r8, ror r2
   24e24:	andeq	r5, r2, r8, ror r2
   24e28:	andeq	r5, r2, r8, ror r2
   24e2c:	andeq	r5, r2, r8, ror r2
   24e30:	andeq	r5, r2, r8, ror r2
   24e34:	andeq	r5, r2, r8, ror r2
   24e38:	andeq	r5, r2, r8, ror r2
   24e3c:	andeq	r5, r2, r8, ror r2
   24e40:	andeq	r5, r2, r8, ror r2
   24e44:	ldrdeq	r5, [r2], -ip
   24e48:	ldrdeq	r5, [r2], -r0
   24e4c:	andeq	r5, r2, r4, asr #3
   24e50:			; <UNDEFINED> instruction: 0x000251b8
   24e54:	andeq	r5, r2, r4, lsl #3
   24e58:	andeq	r5, r2, r8, ror r2
   24e5c:	andeq	r5, r2, r8, ror r2
   24e60:	andeq	r5, r2, r8, ror r2
   24e64:	andeq	r5, r2, r8, ror r2
   24e68:	andeq	r5, r2, r8, ror r2
   24e6c:	andeq	r5, r2, r8, ror r2
   24e70:	andeq	r5, r2, r8, ror r2
   24e74:	andeq	r5, r2, r8, ror r2
   24e78:	andeq	r5, r2, r8, ror r2
   24e7c:	andeq	r5, r2, r8, ror r2
   24e80:	andeq	r5, r2, r8, ror r2
   24e84:	andeq	r5, r2, r8, ror r2
   24e88:	andeq	r5, r2, r8, ror r2
   24e8c:	andeq	r5, r2, r8, ror r2
   24e90:	andeq	r5, r2, r8, ror r2
   24e94:	andeq	r5, r2, r8, ror r2
   24e98:	andeq	r5, r2, r8, ror r2
   24e9c:	andeq	r5, r2, r8, ror r2
   24ea0:	andeq	r5, r2, r8, ror r2
   24ea4:	andeq	r5, r2, r8, ror r2
   24ea8:	andeq	r5, r2, r8, ror r2
   24eac:	andeq	r5, r2, r8, ror r2
   24eb0:	andeq	r5, r2, r8, ror r2
   24eb4:	andeq	r5, r2, r8, ror r2
   24eb8:	andeq	r5, r2, r8, ror r2
   24ebc:	andeq	r5, r2, r8, ror r2
   24ec0:	andeq	r5, r2, r8, ror r2
   24ec4:	andeq	r5, r2, r8, ror r2
   24ec8:	andeq	r5, r2, r8, ror r2
   24ecc:	andeq	r5, r2, r8, ror r2
   24ed0:	andeq	r5, r2, r8, ror r2
   24ed4:	andeq	r5, r2, r8, ror r2
   24ed8:	andeq	r5, r2, r8, ror r2
   24edc:	andeq	r5, r2, r8, ror r2
   24ee0:	andeq	r5, r2, r8, ror r2
   24ee4:	andeq	r5, r2, r8, ror r2
   24ee8:	andeq	r5, r2, r8, ror r2
   24eec:	andeq	r5, r2, r8, ror r2
   24ef0:	andeq	r5, r2, r8, ror r2
   24ef4:	andeq	r5, r2, r8, ror r2
   24ef8:	andeq	r5, r2, r8, ror r2
   24efc:	andeq	r5, r2, r8, ror r2
   24f00:	andeq	r5, r2, r8, ror r2
   24f04:	andeq	r5, r2, r8, ror r2
   24f08:	andeq	r5, r2, r8, ror r2
   24f0c:	andeq	r5, r2, r8, ror r2
   24f10:	andeq	r5, r2, r8, ror r2
   24f14:	andeq	r5, r2, r8, ror r2
   24f18:	andeq	r5, r2, r8, ror r2
   24f1c:	andeq	r5, r2, r8, ror r2
   24f20:	andeq	r5, r2, r8, ror r2
   24f24:	andeq	r5, r2, r8, ror r2
   24f28:	andeq	r5, r2, r8, ror r2
   24f2c:	andeq	r5, r2, r8, ror r2
   24f30:	andeq	r5, r2, ip, ror #2
   24f34:	andeq	r5, r2, r4, asr r1
   24f38:	andeq	r5, r2, r8, lsr #2
   24f3c:	andeq	r5, r2, r4, lsl r1
   24f40:	andeq	r5, r2, r0, lsl #2
   24f44:	andeq	r5, r2, ip, ror #1
   24f48:	ldrdeq	r5, [r2], -r8
   24f4c:	andeq	r5, r2, r4, asr #1
   24f50:	strheq	r5, [r2], -r0
   24f54:	muleq	r2, r8, r0
   24f58:	andeq	r5, r2, ip, ror r0
   24f5c:	andeq	r5, r2, r0, rrx
   24f60:	andeq	r5, r2, r0, lsr r0
   24f64:	andeq	r5, r2, r8, lsl r0
   24f68:	ldrdeq	r4, [r2], -r0
   24f6c:	andeq	r4, r2, r0, ror pc
   24f70:	ldr	r3, [ip, #140]	; 0x8c
   24f74:	asrs	r2, r3, #13
   24f78:	beq	25284 <LinuxProcess_writeField@@Base+0x510>
   24f7c:	cmp	r2, #2
   24f80:	beq	252d0 <LinuxProcess_writeField@@Base+0x55c>
   24f84:	cmp	r2, #1
   24f88:	beq	252e8 <LinuxProcess_writeField@@Base+0x574>
   24f8c:	cmp	r2, #3
   24f90:	addeq	r6, sp, #272	; 0x110
   24f94:	ldreq	r5, [lr, #108]	; 0x6c
   24f98:	ldreq	r3, [pc, #904]	; 25328 <LinuxProcess_writeField@@Base+0x5b4>
   24f9c:	ldrne	r3, [pc, #904]	; 2532c <LinuxProcess_writeField@@Base+0x5b8>
   24fa0:	addne	r6, sp, #272	; 0x110
   24fa4:	str	r3, [r6, #-260]!	; 0xfffffefc
   24fa8:	mov	r2, r6
   24fac:	mov	r1, r5
   24fb0:	mov	r0, r7
   24fb4:	bl	1dc64 <RichString_append@@Base>
   24fb8:	ldr	r2, [sp, #268]	; 0x10c
   24fbc:	ldr	r3, [r4]
   24fc0:	cmp	r2, r3
   24fc4:	bne	25314 <LinuxProcess_writeField@@Base+0x5a0>
   24fc8:	add	sp, sp, #272	; 0x110
   24fcc:	pop	{r4, r5, r6, r7, r8, pc}
   24fd0:	ldr	r2, [ip, #312]	; 0x138
   24fd4:	ldr	r3, [pc, #852]	; 25330 <LinuxProcess_writeField@@Base+0x5bc>
   24fd8:	add	r6, sp, #12
   24fdc:	str	r2, [sp, #4]
   24fe0:	str	r3, [sp]
   24fe4:	mov	r0, r6
   24fe8:	mov	r3, #256	; 0x100
   24fec:	mov	r2, #1
   24ff0:	mov	r1, #255	; 0xff
   24ff4:	bl	15510 <__snprintf_chk@plt>
   24ff8:	cmp	r0, #254	; 0xfe
   24ffc:	bls	24fa8 <LinuxProcess_writeField@@Base+0x234>
   25000:	mov	r0, #1
   25004:	bl	15030 <curs_set@plt>
   25008:	bl	14f28 <endwin@plt>
   2500c:	mov	r1, #0
   25010:	mov	r0, #1
   25014:	bl	15114 <err@plt>
   25018:	ldr	r2, [ip, #308]	; 0x134
   2501c:	ldr	r3, [pc, #784]	; 25334 <LinuxProcess_writeField@@Base+0x5c0>
   25020:	add	r6, sp, #12
   25024:	str	r2, [sp, #4]
   25028:	str	r3, [sp]
   2502c:	b	24fe4 <LinuxProcess_writeField@@Base+0x270>
   25030:	vldr	d0, [pc, #736]	; 25318 <LinuxProcess_writeField@@Base+0x5a4>
   25034:	vldr	d7, [ip, #280]	; 0x118
   25038:	mov	r0, r1
   2503c:	mov	r3, r8
   25040:	mov	r2, #255	; 0xff
   25044:	vcmp.f64	d7, d0
   25048:	add	r1, sp, #12
   2504c:	vmrs	APSR_nzcv, fpscr
   25050:	vldrne	d0, [ip, #288]	; 0x120
   25054:	vaddne.f64	d0, d7, d0
   25058:	bl	1d018 <Process_outputRate@@Base>
   2505c:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   25060:	mov	r0, r1
   25064:	mov	r3, r8
   25068:	vldr	d0, [ip, #288]	; 0x120
   2506c:	mov	r2, #255	; 0xff
   25070:	add	r1, sp, #12
   25074:	bl	1d018 <Process_outputRate@@Base>
   25078:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   2507c:	mov	r0, r1
   25080:	mov	r3, r8
   25084:	vldr	d0, [ip, #280]	; 0x118
   25088:	mov	r2, #255	; 0xff
   2508c:	add	r1, sp, #12
   25090:	bl	1d018 <Process_outputRate@@Base>
   25094:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   25098:	add	ip, ip, #256	; 0x100
   2509c:	str	r8, [sp]
   250a0:	mov	r0, r1
   250a4:	ldrd	r2, [ip]
   250a8:	bl	1c330 <Process_colorNumber@@Base>
   250ac:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   250b0:	ldrd	r2, [ip, #248]	; 0xf8
   250b4:	mov	r0, r1
   250b8:	str	r8, [sp]
   250bc:	bl	1c330 <Process_colorNumber@@Base>
   250c0:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   250c4:	ldrd	r2, [ip, #240]	; 0xf0
   250c8:	mov	r0, r1
   250cc:	str	r8, [sp]
   250d0:	bl	1c330 <Process_colorNumber@@Base>
   250d4:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   250d8:	ldrd	r2, [ip, #232]	; 0xe8
   250dc:	mov	r0, r1
   250e0:	str	r8, [sp]
   250e4:	bl	1c330 <Process_colorNumber@@Base>
   250e8:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   250ec:	ldrd	r2, [ip, #224]	; 0xe0
   250f0:	mov	r0, r1
   250f4:	str	r8, [sp]
   250f8:	bl	1c330 <Process_colorNumber@@Base>
   250fc:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   25100:	ldrd	r2, [ip, #216]	; 0xd8
   25104:	mov	r0, r1
   25108:	str	r8, [sp]
   2510c:	bl	1c330 <Process_colorNumber@@Base>
   25110:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   25114:	ldrd	r2, [ip, #208]	; 0xd0
   25118:	mov	r0, r1
   2511c:	str	r8, [sp]
   25120:	bl	1c330 <Process_colorNumber@@Base>
   25124:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   25128:	ldr	r2, [ip, #304]	; 0x130
   2512c:	ldr	r3, [pc, #516]	; 25338 <LinuxProcess_writeField@@Base+0x5c4>
   25130:	add	r6, sp, #12
   25134:	str	r2, [sp, #4]
   25138:	str	r3, [sp]
   2513c:	mov	r0, r6
   25140:	mov	r3, #256	; 0x100
   25144:	mov	r2, #1
   25148:	mov	r1, #255	; 0xff
   2514c:	bl	15510 <__snprintf_chk@plt>
   25150:	b	24fa8 <LinuxProcess_writeField@@Base+0x234>
   25154:	ldr	r2, [ip, #300]	; 0x12c
   25158:	ldr	r3, [pc, #464]	; 25330 <LinuxProcess_writeField@@Base+0x5bc>
   2515c:	add	r6, sp, #12
   25160:	str	r2, [sp, #4]
   25164:	str	r3, [sp]
   25168:	b	24fe4 <LinuxProcess_writeField@@Base+0x270>
   2516c:	ldr	r2, [ip, #296]	; 0x128
   25170:	ldr	r3, [pc, #452]	; 2533c <LinuxProcess_writeField@@Base+0x5c8>
   25174:	add	r6, sp, #12
   25178:	str	r2, [sp, #4]
   2517c:	str	r3, [sp]
   25180:	b	2513c <LinuxProcess_writeField@@Base+0x3c8>
   25184:	ldr	r5, [ip, #200]	; 0xc8
   25188:	mov	r0, #30
   2518c:	bl	1509c <sysconf@plt>
   25190:	mov	r2, r8
   25194:	add	r3, r0, #1020	; 0x3fc
   25198:	cmp	r0, #0
   2519c:	add	r3, r3, #3
   251a0:	movlt	r0, r3
   251a4:	asr	r1, r0, #10
   251a8:	mov	r0, r7
   251ac:	mul	r1, r5, r1
   251b0:	bl	1c104 <Process_humanNumber@@Base>
   251b4:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   251b8:	mov	r0, #30
   251bc:	ldr	r5, [ip, #196]	; 0xc4
   251c0:	b	2518c <LinuxProcess_writeField@@Base+0x418>
   251c4:	mov	r0, #30
   251c8:	ldr	r5, [ip, #192]	; 0xc0
   251cc:	b	2518c <LinuxProcess_writeField@@Base+0x418>
   251d0:	mov	r0, #30
   251d4:	ldr	r5, [ip, #188]	; 0xbc
   251d8:	b	2518c <LinuxProcess_writeField@@Base+0x418>
   251dc:	mov	r0, #30
   251e0:	ldr	r5, [ip, #184]	; 0xb8
   251e4:	b	2518c <LinuxProcess_writeField@@Base+0x418>
   251e8:	mov	r0, r1
   251ec:	ldrd	r2, [ip, #176]	; 0xb0
   251f0:	bl	1c514 <Process_printTime@@Base>
   251f4:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   251f8:	mov	r0, r1
   251fc:	ldrd	r2, [ip, #168]	; 0xa8
   25200:	bl	1c514 <Process_printTime@@Base>
   25204:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   25208:	mov	r0, r1
   2520c:	ldrd	r2, [ip, #160]	; 0xa0
   25210:	bl	1c514 <Process_printTime@@Base>
   25214:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   25218:	mov	r0, r1
   2521c:	ldrd	r2, [ip, #152]	; 0x98
   25220:	bl	1c514 <Process_printTime@@Base>
   25224:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   25228:	ldr	r2, [ip, #148]	; 0x94
   2522c:	mov	r0, r1
   25230:	str	r8, [sp]
   25234:	mov	r3, #0
   25238:	bl	1c330 <Process_colorNumber@@Base>
   2523c:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   25240:	ldr	r2, [ip, #144]	; 0x90
   25244:	mov	r0, r1
   25248:	str	r8, [sp]
   2524c:	mov	r3, #0
   25250:	bl	1c330 <Process_colorNumber@@Base>
   25254:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   25258:	ldr	r3, [ip, #316]	; 0x13c
   2525c:	cmp	r3, #0
   25260:	beq	252b0 <LinuxProcess_writeField@@Base+0x53c>
   25264:	ldr	r2, [pc, #212]	; 25340 <LinuxProcess_writeField@@Base+0x5cc>
   25268:	add	r3, r3, #5
   2526c:	add	r6, sp, #12
   25270:	strd	r2, [sp]
   25274:	b	24fe4 <LinuxProcess_writeField@@Base+0x270>
   25278:	mov	r0, ip
   2527c:	bl	1c70c <Process_writeField@@Base>
   25280:	b	24fb8 <LinuxProcess_writeField@@Base+0x244>
   25284:	ldr	r3, [ip, #96]	; 0x60
   25288:	ldr	r0, [pc, #180]	; 25344 <LinuxProcess_writeField@@Base+0x5d0>
   2528c:	add	r3, r3, #20
   25290:	ldr	r2, [pc, #176]	; 25348 <LinuxProcess_writeField@@Base+0x5d4>
   25294:	smull	r0, r1, r3, r0
   25298:	str	r2, [sp]
   2529c:	asr	r3, r3, #31
   252a0:	rsb	r3, r3, r1, asr #1
   252a4:	add	r6, sp, #12
   252a8:	str	r3, [sp, #4]
   252ac:	b	2513c <LinuxProcess_writeField@@Base+0x3c8>
   252b0:	ldr	r2, [pc, #148]	; 2534c <LinuxProcess_writeField@@Base+0x5d8>
   252b4:	add	r6, sp, #12
   252b8:	mov	r3, r6
   252bc:	ldm	r2, {r0, r1, r2}
   252c0:	ldr	r5, [lr, #76]	; 0x4c
   252c4:	stmia	r3!, {r0, r1}
   252c8:	strh	r2, [r3]
   252cc:	b	24fa8 <LinuxProcess_writeField@@Base+0x234>
   252d0:	lsl	r3, r3, #19
   252d4:	ldr	r2, [pc, #108]	; 25348 <LinuxProcess_writeField@@Base+0x5d4>
   252d8:	lsr	r3, r3, #19
   252dc:	add	r6, sp, #12
   252e0:	strd	r2, [sp]
   252e4:	b	2513c <LinuxProcess_writeField@@Base+0x3c8>
   252e8:	lsl	r3, r3, #19
   252ec:	ldr	r1, [pc, #92]	; 25350 <LinuxProcess_writeField@@Base+0x5dc>
   252f0:	lsr	r3, r3, #19
   252f4:	add	r6, sp, #12
   252f8:	ldr	r5, [lr, #104]	; 0x68
   252fc:	mov	r0, r6
   25300:	stm	sp, {r1, r3}
   25304:	mov	r3, #256	; 0x100
   25308:	mov	r1, #255	; 0xff
   2530c:	bl	15510 <__snprintf_chk@plt>
   25310:	b	24fa8 <LinuxProcess_writeField@@Base+0x234>
   25314:	bl	15084 <__stack_chk_fail@plt>
   25318:	andeq	r0, r0, r0
   2531c:	svclt	0x00f00000	; IMB
   25320:	muleq	r3, r8, r1
   25324:			; <UNDEFINED> instruction: 0x0003ccb8
   25328:	eoreq	r6, r0, r9, ror #8
   2532c:	eoreq	r3, r0, pc, lsr pc
   25330:	andeq	sp, r3, r8, ror #25
   25334:	andeq	fp, r2, r4, lsl r6
   25338:	andeq	fp, r2, ip, lsl #12
   2533c:	andeq	fp, r2, r4, lsl #12
   25340:	strdeq	fp, [r2], -r0
   25344:	strbtvs	r6, [r6], -r7, ror #12
   25348:	andeq	fp, r2, ip, lsl r6
   2534c:	strdeq	fp, [r2], -r8
   25350:	andeq	fp, r2, r4, lsr #12

00025354 <LinuxProcess_new@@Base>:
   25354:	push	{r4, r5, r6, lr}
   25358:	mov	r1, #320	; 0x140
   2535c:	mov	r5, r0
   25360:	mov	r0, #1
   25364:	bl	23fd8 <xCalloc@@Base>
   25368:	ldr	r3, [pc, #20]	; 25384 <LinuxProcess_new@@Base+0x30>
   2536c:	mov	r1, r5
   25370:	mov	r4, r0
   25374:	str	r3, [r0]
   25378:	bl	1d1c0 <Process_init@@Base>
   2537c:	mov	r0, r4
   25380:	pop	{r4, r5, r6, pc}
   25384:	muleq	r3, r4, pc	; <UNPREDICTABLE>

00025388 <LinuxProcess_updateIOPriority@@Base>:
   25388:	push	{r4, lr}
   2538c:	mov	r1, #1
   25390:	mov	r4, r0
   25394:	ldr	r2, [r0, #16]
   25398:	ldr	r0, [pc, #8]	; 253a8 <LinuxProcess_updateIOPriority@@Base+0x20>
   2539c:	bl	15270 <syscall@plt>
   253a0:	str	r0, [r4, #140]	; 0x8c
   253a4:	pop	{r4, pc}
   253a8:	andeq	r0, r0, fp, lsr r1

000253ac <LinuxProcess_setIOPriority@@Base>:
   253ac:	push	{r4, r5, r6, lr}
   253b0:	mov	r4, r0
   253b4:	mov	r3, r1
   253b8:	mov	r5, r1
   253bc:	ldr	r2, [r0, #16]
   253c0:	mov	r1, #1
   253c4:	ldr	r0, [pc, #36]	; 253f0 <LinuxProcess_setIOPriority@@Base+0x44>
   253c8:	bl	15270 <syscall@plt>
   253cc:	ldr	r2, [r4, #16]
   253d0:	mov	r1, #1
   253d4:	ldr	r0, [pc, #24]	; 253f4 <LinuxProcess_setIOPriority@@Base+0x48>
   253d8:	bl	15270 <syscall@plt>
   253dc:	str	r0, [r4, #140]	; 0x8c
   253e0:	sub	r0, r5, r0
   253e4:	clz	r0, r0
   253e8:	lsr	r0, r0, #5
   253ec:	pop	{r4, r5, r6, pc}
   253f0:	andeq	r0, r0, sl, lsr r1
   253f4:	andeq	r0, r0, fp, lsr r1

000253f8 <Process_isThread@@Base>:
   253f8:	ldr	r2, [r0, #16]
   253fc:	ldr	r3, [r0, #24]
   25400:	cmp	r2, r3
   25404:	ldrbeq	r0, [r0, #136]	; 0x88
   25408:	movne	r0, #1
   2540c:	bx	lr
   25410:	ldr	r3, [r0, #4]
   25414:	ldr	r2, [r1, #4]
   25418:	cmp	r3, r2
   2541c:	ldreq	r0, [r0, #8]
   25420:	ldreq	r3, [r1, #8]
   25424:	subeq	r0, r0, r3
   25428:	subne	r0, r3, r2
   2542c:	bx	lr
   25430:	push	{r4, r5, r6, r7, r8, lr}
   25434:	mov	r8, r0
   25438:	mov	r6, r1
   2543c:	mov	r5, r2
   25440:	mov	r7, #0
   25444:	mov	r2, r5
   25448:	mov	r1, r6
   2544c:	mov	r0, r8
   25450:	bl	14f7c <read@plt>
   25454:	cmn	r0, #1
   25458:	mov	r4, r0
   2545c:	beq	25488 <Process_isThread@@Base+0x90>
   25460:	cmp	r0, #0
   25464:	subgt	r5, r5, r0
   25468:	addgt	r6, r6, r0
   2546c:	addgt	r7, r7, r0
   25470:	cmp	r0, #0
   25474:	cmpne	r5, #0
   25478:	bne	25444 <Process_isThread@@Base+0x4c>
   2547c:	mov	r4, r7
   25480:	mov	r0, r4
   25484:	pop	{r4, r5, r6, r7, r8, pc}
   25488:	bl	152e8 <__errno_location@plt>
   2548c:	ldr	r3, [r0]
   25490:	cmp	r3, #4
   25494:	beq	25444 <Process_isThread@@Base+0x4c>
   25498:	mov	r0, r4
   2549c:	pop	{r4, r5, r6, r7, r8, pc}
   254a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   254a4:	vpush	{d8}
   254a8:	ldr	r3, [pc, #1316]	; 259d4 <Process_isThread@@Base+0x5dc>
   254ac:	mov	r4, r0
   254b0:	ldr	r0, [pc, #1312]	; 259d8 <Process_isThread@@Base+0x5e0>
   254b4:	sub	sp, sp, #756	; 0x2f4
   254b8:	ldr	r3, [r3]
   254bc:	str	r1, [sp, #132]	; 0x84
   254c0:	ldr	r1, [pc, #1300]	; 259dc <Process_isThread@@Base+0x5e4>
   254c4:	str	r3, [sp, #748]	; 0x2ec
   254c8:	bl	14f70 <fopen@plt>
   254cc:	subs	r3, r0, #0
   254d0:	str	r3, [sp, #128]	; 0x80
   254d4:	beq	259cc <Process_isThread@@Base+0x5d4>
   254d8:	ldr	r3, [r4]
   254dc:	cmp	r3, #0
   254e0:	str	r3, [sp, #140]	; 0x8c
   254e4:	blt	25968 <Process_isThread@@Base+0x570>
   254e8:	mov	r9, #0
   254ec:	mov	r8, r9
   254f0:	add	r5, sp, #224	; 0xe0
   254f4:	add	r4, sp, #160	; 0xa0
   254f8:	add	r3, r3, #1
   254fc:	str	r3, [sp, #136]	; 0x88
   25500:	strd	r8, [sp, #72]	; 0x48
   25504:	mov	r6, #0
   25508:	mov	r7, #0
   2550c:	ldr	r2, [sp, #128]	; 0x80
   25510:	mov	r1, #512	; 0x200
   25514:	add	r0, sp, #232	; 0xe8
   25518:	strd	r6, [r5]
   2551c:	strd	r6, [r5, #-8]
   25520:	strd	r6, [sp, #208]	; 0xd0
   25524:	strd	r6, [sp, #200]	; 0xc8
   25528:	strd	r6, [sp, #192]	; 0xc0
   2552c:	strd	r6, [sp, #184]	; 0xb8
   25530:	bl	14fb8 <fgets@plt>
   25534:	ldr	r3, [sp, #72]	; 0x48
   25538:	cmp	r0, #0
   2553c:	strbeq	r0, [sp, #232]	; 0xe8
   25540:	cmp	r3, #0
   25544:	beq	25974 <Process_isThread@@Base+0x57c>
   25548:	add	r3, sp, #216	; 0xd8
   2554c:	str	r3, [sp, #28]
   25550:	add	r3, sp, #208	; 0xd0
   25554:	str	r3, [sp, #24]
   25558:	add	r3, sp, #200	; 0xc8
   2555c:	str	r3, [sp, #20]
   25560:	add	r3, sp, #192	; 0xc0
   25564:	str	r3, [sp, #16]
   25568:	add	r3, sp, #184	; 0xb8
   2556c:	str	r3, [sp, #12]
   25570:	add	r3, sp, #176	; 0xb0
   25574:	str	r3, [sp, #8]
   25578:	add	r3, sp, #168	; 0xa8
   2557c:	str	r3, [sp, #4]
   25580:	str	r5, [sp, #32]
   25584:	str	r4, [sp]
   25588:	add	r3, sp, #152	; 0x98
   2558c:	add	r2, sp, #148	; 0x94
   25590:	ldr	r1, [pc, #1096]	; 259e0 <Process_isThread@@Base+0x5e8>
   25594:	add	r0, sp, #232	; 0xe8
   25598:	bl	15468 <sscanf@plt>
   2559c:	ldrd	r6, [r5]
   255a0:	ldrd	r2, [r4, #-8]
   255a4:	ldrd	r0, [r4]
   255a8:	strd	r6, [sp, #88]	; 0x58
   255ac:	ldrd	r6, [sp, #176]	; 0xb0
   255b0:	ldrd	r8, [sp, #208]	; 0xd0
   255b4:	ldr	ip, [sp, #132]	; 0x84
   255b8:	strd	r6, [sp, #40]	; 0x28
   255bc:	ldrd	r6, [sp, #184]	; 0xb8
   255c0:	strd	r8, [sp, #120]	; 0x78
   255c4:	ldr	lr, [ip]
   255c8:	mov	sl, r6
   255cc:	mov	fp, r7
   255d0:	ldrd	r6, [r5, #-8]
   255d4:	strd	sl, [sp, #104]	; 0x68
   255d8:	ldr	ip, [sp, #76]	; 0x4c
   255dc:	subs	r6, r2, r6
   255e0:	sbc	r7, r3, r7
   255e4:	mov	r2, r6
   255e8:	mov	r3, r7
   255ec:	ldrd	r6, [sp, #88]	; 0x58
   255f0:	strd	r2, [sp, #80]	; 0x50
   255f4:	add	ip, lr, ip
   255f8:	subs	r6, r0, r6
   255fc:	sbc	r7, r1, r7
   25600:	mov	r0, r6
   25604:	mov	r1, r7
   25608:	adds	r2, r2, r0
   2560c:	adc	r3, r3, r1
   25610:	strd	r0, [sp, #96]	; 0x60
   25614:	ldrd	r0, [sp, #200]	; 0xc8
   25618:	ldrd	r6, [sp, #168]	; 0xa8
   2561c:	adds	r8, r8, r2
   25620:	strd	r0, [sp, #64]	; 0x40
   25624:	ldrd	r0, [sp, #40]	; 0x28
   25628:	adc	r9, r9, r3
   2562c:	strd	r6, [sp, #48]	; 0x30
   25630:	adds	r0, r0, sl
   25634:	ldrd	r6, [sp, #192]	; 0xc0
   25638:	adc	r1, r1, fp
   2563c:	mov	r2, r8
   25640:	mov	r3, r9
   25644:	ldrd	sl, [sp, #88]	; 0x58
   25648:	ldrd	r8, [r5, #-8]
   2564c:	strd	r6, [sp, #56]	; 0x38
   25650:	mov	r6, r0
   25654:	mov	r7, r1
   25658:	adds	sl, sl, r8
   2565c:	adc	fp, fp, r9
   25660:	strd	r6, [sp, #112]	; 0x70
   25664:	adds	r6, r6, r2
   25668:	adc	r7, r7, r3
   2566c:	ldrd	r8, [sp, #56]	; 0x38
   25670:	mov	r2, r6
   25674:	mov	r3, r7
   25678:	ldrd	r6, [sp, #48]	; 0x30
   2567c:	ldrd	r0, [ip, #8]
   25680:	adds	r6, r6, r8
   25684:	adc	r7, r7, r9
   25688:	adds	r8, sl, r2
   2568c:	adc	r9, fp, r3
   25690:	mov	r2, r8
   25694:	mov	r3, r9
   25698:	ldrd	r8, [sp, #64]	; 0x40
   2569c:	adds	r8, r8, r6
   256a0:	adc	r9, r9, r7
   256a4:	mov	r6, r8
   256a8:	adds	r8, r2, r8
   256ac:	mov	r7, r9
   256b0:	adc	r9, r3, r9
   256b4:	ldrd	r2, [sp, #80]	; 0x50
   256b8:	cmp	r3, r1
   256bc:	cmpeq	r2, r0
   256c0:	movls	r0, #0
   256c4:	movls	r1, #0
   256c8:	bls	256dc <Process_isThread@@Base+0x2e4>
   256cc:	subs	r2, r2, r0
   256d0:	sbc	r3, r3, r1
   256d4:	mov	r0, r2
   256d8:	mov	r1, r3
   256dc:	ldrd	r2, [ip, #48]	; 0x30
   256e0:	strd	r0, [ip, #104]	; 0x68
   256e4:	ldrd	r0, [sp, #96]	; 0x60
   256e8:	cmp	r1, r3
   256ec:	cmpeq	r0, r2
   256f0:	movls	r0, #0
   256f4:	movls	r1, #0
   256f8:	bls	25704 <Process_isThread@@Base+0x30c>
   256fc:	subs	r0, r0, r2
   25700:	sbc	r1, r1, r3
   25704:	ldrd	r2, [ip, #16]
   25708:	strd	r0, [ip, #144]	; 0x90
   2570c:	ldrd	r0, [sp, #48]	; 0x30
   25710:	cmp	r1, r3
   25714:	cmpeq	r0, r2
   25718:	movls	r0, #0
   2571c:	movls	r1, #0
   25720:	bls	2572c <Process_isThread@@Base+0x334>
   25724:	subs	r0, r0, r2
   25728:	sbc	r1, r1, r3
   2572c:	ldrd	r2, [ip, #24]
   25730:	strd	r0, [ip, #112]	; 0x70
   25734:	cmp	r7, r3
   25738:	cmpeq	r6, r2
   2573c:	movls	r0, #0
   25740:	movls	r1, #0
   25744:	bls	25750 <Process_isThread@@Base+0x358>
   25748:	subs	r0, r6, r2
   2574c:	sbc	r1, r7, r3
   25750:	ldrd	r2, [ip, #32]
   25754:	strd	r0, [ip, #120]	; 0x78
   25758:	ldrd	r0, [sp, #112]	; 0x70
   2575c:	cmp	r1, r3
   25760:	cmpeq	r0, r2
   25764:	movls	r0, #0
   25768:	movls	r1, #0
   2576c:	bls	25778 <Process_isThread@@Base+0x380>
   25770:	subs	r0, r0, r2
   25774:	sbc	r1, r1, r3
   25778:	ldrd	r2, [ip, #40]	; 0x28
   2577c:	strd	r0, [ip, #128]	; 0x80
   25780:	ldrd	r0, [sp, #40]	; 0x28
   25784:	cmp	r1, r3
   25788:	cmpeq	r0, r2
   2578c:	movls	r0, #0
   25790:	movls	r1, #0
   25794:	bls	257a0 <Process_isThread@@Base+0x3a8>
   25798:	subs	r0, r0, r2
   2579c:	sbc	r1, r1, r3
   257a0:	ldrd	r2, [ip, #56]	; 0x38
   257a4:	strd	r0, [ip, #136]	; 0x88
   257a8:	ldrd	r0, [sp, #104]	; 0x68
   257ac:	cmp	r1, r3
   257b0:	cmpeq	r0, r2
   257b4:	movls	r0, #0
   257b8:	movls	r1, #0
   257bc:	bls	257c8 <Process_isThread@@Base+0x3d0>
   257c0:	subs	r0, r0, r2
   257c4:	sbc	r1, r1, r3
   257c8:	ldrd	r2, [ip, #64]	; 0x40
   257cc:	strd	r0, [ip, #152]	; 0x98
   257d0:	ldrd	r0, [sp, #56]	; 0x38
   257d4:	cmp	r1, r3
   257d8:	cmpeq	r0, r2
   257dc:	movls	r0, #0
   257e0:	movls	r1, #0
   257e4:	bls	257f0 <Process_isThread@@Base+0x3f8>
   257e8:	subs	r0, r0, r2
   257ec:	sbc	r1, r1, r3
   257f0:	ldrd	r2, [ip, #72]	; 0x48
   257f4:	strd	r0, [ip, #160]	; 0xa0
   257f8:	ldrd	r0, [sp, #64]	; 0x40
   257fc:	cmp	r1, r3
   25800:	cmpeq	r0, r2
   25804:	movls	r0, #0
   25808:	movls	r1, #0
   2580c:	bls	25818 <Process_isThread@@Base+0x420>
   25810:	subs	r0, r0, r2
   25814:	sbc	r1, r1, r3
   25818:	ldrd	r2, [ip, #80]	; 0x50
   2581c:	strd	r0, [ip, #168]	; 0xa8
   25820:	ldrd	r0, [sp, #120]	; 0x78
   25824:	cmp	r1, r3
   25828:	cmpeq	r0, r2
   2582c:	movls	r0, #0
   25830:	movls	r1, #0
   25834:	bls	25840 <Process_isThread@@Base+0x448>
   25838:	subs	r0, r0, r2
   2583c:	sbc	r1, r1, r3
   25840:	ldrd	r2, [ip, #88]	; 0x58
   25844:	strd	r0, [ip, #176]	; 0xb0
   25848:	mov	r0, sl
   2584c:	cmp	fp, r3
   25850:	cmpeq	sl, r2
   25854:	mov	r1, fp
   25858:	movls	r0, #0
   2585c:	movls	r1, #0
   25860:	bls	2586c <Process_isThread@@Base+0x474>
   25864:	subs	r0, r0, r2
   25868:	sbc	r1, r1, r3
   2586c:	ldrd	r2, [ip]
   25870:	strd	r0, [ip, #184]	; 0xb8
   25874:	cmp	r9, r3
   25878:	cmpeq	r8, r2
   2587c:	movls	r2, #0
   25880:	movls	r3, #0
   25884:	bls	25898 <Process_isThread@@Base+0x4a0>
   25888:	subs	r0, r8, r2
   2588c:	sbc	r1, r9, r3
   25890:	mov	r2, r0
   25894:	mov	r3, r1
   25898:	strd	r2, [ip, #96]	; 0x60
   2589c:	ldrd	r2, [sp, #80]	; 0x50
   258a0:	ldr	r1, [sp, #72]	; 0x48
   258a4:	strd	r6, [ip, #24]
   258a8:	strd	r2, [ip, #8]
   258ac:	ldrd	r2, [sp, #96]	; 0x60
   258b0:	add	r0, r1, #1
   258b4:	ldr	r1, [sp, #136]	; 0x88
   258b8:	strd	r2, [ip, #48]	; 0x30
   258bc:	ldrd	r2, [sp, #48]	; 0x30
   258c0:	cmp	r0, r1
   258c4:	str	r0, [sp, #72]	; 0x48
   258c8:	strd	r2, [ip, #16]
   258cc:	ldrd	r2, [sp, #112]	; 0x70
   258d0:	strd	r2, [ip, #32]
   258d4:	ldrd	r2, [sp, #40]	; 0x28
   258d8:	strd	r2, [ip, #40]	; 0x28
   258dc:	ldrd	r2, [sp, #104]	; 0x68
   258e0:	strd	r2, [ip, #56]	; 0x38
   258e4:	ldrd	r2, [sp, #56]	; 0x38
   258e8:	strd	r2, [ip, #64]	; 0x40
   258ec:	ldrd	r2, [sp, #64]	; 0x40
   258f0:	strd	r2, [ip, #72]	; 0x48
   258f4:	ldrd	r2, [sp, #120]	; 0x78
   258f8:	strd	r2, [ip, #80]	; 0x50
   258fc:	mov	r2, sl
   25900:	mov	r3, fp
   25904:	strd	r2, [ip, #88]	; 0x58
   25908:	mov	r3, r9
   2590c:	mov	r2, r8
   25910:	strd	r2, [ip]
   25914:	ldr	r3, [sp, #76]	; 0x4c
   25918:	add	r3, r3, #192	; 0xc0
   2591c:	str	r3, [sp, #76]	; 0x4c
   25920:	bne	25504 <Process_isThread@@Base+0x10c>
   25924:	ldrd	r0, [lr, #96]	; 0x60
   25928:	bl	28b70 <Battery_getData@@Base+0xa64>
   2592c:	vldr	s15, [sp, #140]	; 0x8c
   25930:	vcvt.f64.s32	d7, s15
   25934:	vmov	d6, r0, r1
   25938:	ldr	r0, [sp, #128]	; 0x80
   2593c:	vdiv.f64	d8, d6, d7
   25940:	bl	153fc <fclose@plt>
   25944:	ldr	r3, [pc, #136]	; 259d4 <Process_isThread@@Base+0x5dc>
   25948:	ldr	r2, [sp, #748]	; 0x2ec
   2594c:	ldr	r3, [r3]
   25950:	cmp	r2, r3
   25954:	vmov.f64	d0, d8
   25958:	bne	259c8 <Process_isThread@@Base+0x5d0>
   2595c:	add	sp, sp, #756	; 0x2f4
   25960:	vpop	{d8}
   25964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25968:	ldr	r3, [sp, #132]	; 0x84
   2596c:	ldr	lr, [r3]
   25970:	b	25924 <Process_isThread@@Base+0x52c>
   25974:	add	r3, sp, #216	; 0xd8
   25978:	str	r3, [sp, #24]
   2597c:	add	r3, sp, #208	; 0xd0
   25980:	str	r3, [sp, #20]
   25984:	add	r3, sp, #200	; 0xc8
   25988:	str	r3, [sp, #16]
   2598c:	add	r3, sp, #192	; 0xc0
   25990:	str	r3, [sp, #12]
   25994:	add	r3, sp, #184	; 0xb8
   25998:	str	r3, [sp, #8]
   2599c:	add	r3, sp, #176	; 0xb0
   259a0:	str	r3, [sp, #4]
   259a4:	add	r3, sp, #168	; 0xa8
   259a8:	str	r3, [sp]
   259ac:	str	r5, [sp, #28]
   259b0:	mov	r3, r4
   259b4:	add	r2, sp, #152	; 0x98
   259b8:	ldr	r1, [pc, #36]	; 259e4 <Process_isThread@@Base+0x5ec>
   259bc:	add	r0, sp, #232	; 0xe8
   259c0:	bl	15468 <sscanf@plt>
   259c4:	b	2559c <Process_isThread@@Base+0x1a4>
   259c8:	bl	15084 <__stack_chk_fail@plt>
   259cc:	ldr	r0, [pc, #20]	; 259e8 <Process_isThread@@Base+0x5f0>
   259d0:	bl	17714 <CRT_fatalError@@Base>
   259d4:			; <UNDEFINED> instruction: 0x0003ccb8
   259d8:	andeq	ip, r2, r0, lsr #7
   259dc:			; <UNDEFINED> instruction: 0x0002b1b0
   259e0:	strdeq	ip, [r2], -r8
   259e4:	andeq	ip, r2, ip, lsr #7
   259e8:	muleq	r2, r4, r3
   259ec:	push	{r4, r5, r6, r7, r8, lr}
   259f0:	mov	r6, r0
   259f4:	ldr	r0, [r0]
   259f8:	mov	r5, r1
   259fc:	cmp	r0, #0
   25a00:	mov	r7, r2
   25a04:	mov	r4, r3
   25a08:	beq	25a18 <Process_isThread@@Base+0x620>
   25a0c:	ldr	r3, [r1]
   25a10:	cmp	r3, r4
   25a14:	bge	25a30 <Process_isThread@@Base+0x638>
   25a18:	bl	14fa0 <free@plt>
   25a1c:	mov	r0, r7
   25a20:	bl	24034 <xStrdup@@Base>
   25a24:	str	r0, [r6]
   25a28:	str	r4, [r5]
   25a2c:	pop	{r4, r5, r6, r7, r8, pc}
   25a30:	mov	r1, r2
   25a34:	add	r2, r4, #1
   25a38:	bl	1533c <strncpy@plt>
   25a3c:	str	r4, [r5]
   25a40:	pop	{r4, r5, r6, r7, r8, pc}
   25a44:	push	{r4, r5, r6, r7, lr}
   25a48:	sub	sp, sp, #4224	; 0x1080
   25a4c:	ldr	r4, [pc, #312]	; 25b8c <Process_isThread@@Base+0x794>
   25a50:	sub	sp, sp, #36	; 0x24
   25a54:	add	lr, sp, #4224	; 0x1080
   25a58:	ldr	r3, [pc, #304]	; 25b90 <Process_isThread@@Base+0x798>
   25a5c:	ldr	ip, [r4]
   25a60:	add	lr, lr, #28
   25a64:	stmib	sp, {r1, r2}
   25a68:	str	r3, [sp]
   25a6c:	mov	r6, r0
   25a70:	mov	r3, #129	; 0x81
   25a74:	add	r0, sp, #20
   25a78:	mov	r2, #1
   25a7c:	mov	r1, #128	; 0x80
   25a80:	str	ip, [lr]
   25a84:	bl	15510 <__snprintf_chk@plt>
   25a88:	cmp	r0, #127	; 0x7f
   25a8c:	bhi	25b74 <Process_isThread@@Base+0x77c>
   25a90:	add	r0, sp, #20
   25a94:	mov	r1, #0
   25a98:	bl	15234 <open@plt>
   25a9c:	cmn	r0, #1
   25aa0:	mov	r5, r0
   25aa4:	beq	25b68 <Process_isThread@@Base+0x770>
   25aa8:	add	r1, sp, #152	; 0x98
   25aac:	mov	r2, #4096	; 0x1000
   25ab0:	bl	25430 <Process_isThread@@Base+0x38>
   25ab4:	mov	r7, r0
   25ab8:	mov	r0, r5
   25abc:	bl	154f8 <close@plt>
   25ac0:	cmp	r7, #0
   25ac4:	moveq	r0, #1
   25ac8:	strbeq	r0, [r6, #136]	; 0x88
   25acc:	beq	25b44 <Process_isThread@@Base+0x74c>
   25ad0:	blt	25b68 <Process_isThread@@Base+0x770>
   25ad4:	mov	r2, #0
   25ad8:	mov	r3, r2
   25adc:	mov	ip, r2
   25ae0:	add	r0, sp, #151	; 0x97
   25ae4:	mov	lr, #32
   25ae8:	ldrb	r1, [r0, #1]!
   25aec:	cmp	r1, #10
   25af0:	cmpne	r1, #0
   25af4:	movne	r3, r2
   25af8:	bne	25b08 <Process_isThread@@Base+0x710>
   25afc:	cmp	ip, #0
   25b00:	moveq	ip, r2
   25b04:	strb	lr, [r0]
   25b08:	add	r2, r2, #1
   25b0c:	cmp	r7, r2
   25b10:	bne	25ae8 <Process_isThread@@Base+0x6f0>
   25b14:	cmp	ip, #0
   25b18:	add	r2, sp, #160	; 0xa0
   25b1c:	moveq	ip, r7
   25b20:	add	lr, r2, r3
   25b24:	str	ip, [r6, #40]	; 0x28
   25b28:	add	r0, r6, #28
   25b2c:	mov	ip, #0
   25b30:	add	r2, sp, #152	; 0x98
   25b34:	add	r1, r6, #32
   25b38:	strb	ip, [lr, #-7]
   25b3c:	bl	259ec <Process_isThread@@Base+0x5f4>
   25b40:	mov	r0, #1
   25b44:	add	r3, sp, #4224	; 0x1080
   25b48:	add	r3, r3, #28
   25b4c:	ldr	r2, [r3]
   25b50:	ldr	r3, [r4]
   25b54:	cmp	r2, r3
   25b58:	bne	25b70 <Process_isThread@@Base+0x778>
   25b5c:	add	sp, sp, #4224	; 0x1080
   25b60:	add	sp, sp, #36	; 0x24
   25b64:	pop	{r4, r5, r6, r7, pc}
   25b68:	mov	r0, #0
   25b6c:	b	25b44 <Process_isThread@@Base+0x74c>
   25b70:	bl	15084 <__stack_chk_fail@plt>
   25b74:	mov	r0, #1
   25b78:	bl	15030 <curs_set@plt>
   25b7c:	bl	14f28 <endwin@plt>
   25b80:	mov	r1, #0
   25b84:	mov	r0, #1
   25b88:	bl	15114 <err@plt>
   25b8c:			; <UNDEFINED> instruction: 0x0003ccb8
   25b90:	andeq	ip, r2, r8, asr #8
   25b94:	sub	sp, sp, #8
   25b98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25b9c:	vpush	{d8-d14}
   25ba0:	mov	r5, r0
   25ba4:	mov	r6, r3
   25ba8:	mov	fp, r2
   25bac:	sub	sp, sp, #2832	; 0xb10
   25bb0:	sub	sp, sp, #12
   25bb4:	vmov.f64	d8, d0
   25bb8:	str	r0, [sp, #24]
   25bbc:	str	r1, [sp, #28]
   25bc0:	mov	r0, r1
   25bc4:	ldr	r1, [pc, #1108]	; 26020 <Process_isThread@@Base+0xc28>
   25bc8:	str	r3, [sp, #2940]	; 0xb7c
   25bcc:	str	r3, [sp, #40]	; 0x28
   25bd0:	ldr	r1, [r1]
   25bd4:	ldr	sl, [r5]
   25bd8:	str	r1, [sp, #2836]	; 0xb14
   25bdc:	ldr	r4, [sp, #2944]	; 0xb80
   25be0:	bl	15198 <opendir@plt>
   25be4:	subs	r3, r0, #0
   25be8:	str	r3, [sp, #20]
   25bec:	beq	26800 <Process_isThread@@Base+0x1408>
   25bf0:	ldr	r0, [pc, #1032]	; 26000 <Process_isThread@@Base+0xc08>
   25bf4:	ldr	r3, [r5, #128]	; 0x80
   25bf8:	asr	r2, r4, #31
   25bfc:	smull	r0, r1, r4, r0
   25c00:	vldr	d9, [pc, #984]	; 25fe0 <Process_isThread@@Base+0xbe8>
   25c04:	vldr	d10, [pc, #988]	; 25fe8 <Process_isThread@@Base+0xbf0>
   25c08:	str	r3, [sp, #52]	; 0x34
   25c0c:	ldrb	r3, [sl, #63]	; 0x3f
   25c10:	rsb	r2, r2, r1, asr #6
   25c14:	mov	ip, #1000	; 0x3e8
   25c18:	str	r3, [sp, #44]	; 0x2c
   25c1c:	asr	r3, r2, #31
   25c20:	smlal	r2, r3, ip, r6
   25c24:	vldr	d11, [pc, #964]	; 25ff0 <Process_isThread@@Base+0xbf8>
   25c28:	vldr	d14, [pc, #968]	; 25ff8 <Process_isThread@@Base+0xc00>
   25c2c:	strd	r2, [sp, #72]	; 0x48
   25c30:	ldrb	r3, [sl, #64]	; 0x40
   25c34:	str	r3, [sp, #48]	; 0x30
   25c38:	mov	r3, fp
   25c3c:	mov	fp, sl
   25c40:	mov	sl, r3
   25c44:	ldr	r0, [sp, #20]
   25c48:	bl	15438 <readdir@plt>
   25c4c:	cmp	r0, #0
   25c50:	beq	266dc <Process_isThread@@Base+0x12e4>
   25c54:	ldrb	r2, [fp, #60]	; 0x3c
   25c58:	add	r3, r0, #11
   25c5c:	str	r3, [sp, #16]
   25c60:	cmp	r2, #0
   25c64:	ldrb	r3, [r0, #11]
   25c68:	bne	25c7c <Process_isThread@@Base+0x884>
   25c6c:	cmp	r3, #46	; 0x2e
   25c70:	addeq	r2, r0, #12
   25c74:	ldrbeq	r3, [r0, #12]
   25c78:	streq	r2, [sp, #16]
   25c7c:	sub	r3, r3, #48	; 0x30
   25c80:	cmp	r3, #9
   25c84:	bhi	25c44 <Process_isThread@@Base+0x84c>
   25c88:	mov	r2, #10
   25c8c:	mov	r1, #0
   25c90:	ldr	r0, [sp, #16]
   25c94:	bl	14f4c <strtol@plt>
   25c98:	cmp	sl, #0
   25c9c:	mov	r4, r0
   25ca0:	beq	26714 <Process_isThread@@Base+0x131c>
   25ca4:	ldr	r3, [sl, #16]
   25ca8:	cmp	r3, r0
   25cac:	cmpne	r0, #0
   25cb0:	movle	ip, #1
   25cb4:	movgt	ip, #0
   25cb8:	ble	25c44 <Process_isThread@@Base+0x84c>
   25cbc:	mov	r1, r0
   25cc0:	ldr	r3, [pc, #860]	; 26024 <Process_isThread@@Base+0xc2c>
   25cc4:	add	r2, sp, #103	; 0x67
   25cc8:	ldr	r0, [sp, #24]
   25ccc:	strb	ip, [sp, #103]	; 0x67
   25cd0:	bl	1d98c <ProcessList_getProcess@@Base>
   25cd4:	ldr	r4, [sl, #16]
   25cd8:	mov	r8, r0
   25cdc:	ldr	r2, [sp, #16]
   25ce0:	str	r4, [r8, #24]
   25ce4:	ldr	r3, [pc, #792]	; 26004 <Process_isThread@@Base+0xc0c>
   25ce8:	str	r2, [sp, #8]
   25cec:	ldr	r2, [sp, #28]
   25cf0:	str	r3, [sp]
   25cf4:	str	r2, [sp, #4]
   25cf8:	add	r0, sp, #240	; 0xf0
   25cfc:	mov	r3, #129	; 0x81
   25d00:	mov	r2, #1
   25d04:	mov	r1, #128	; 0x80
   25d08:	bl	15510 <__snprintf_chk@plt>
   25d0c:	cmp	r0, #127	; 0x7f
   25d10:	bhi	27234 <Process_isThread@@Base+0x1e3c>
   25d14:	ldr	r3, [sp, #2944]	; 0xb80
   25d18:	ldr	ip, [sp, #40]	; 0x28
   25d1c:	str	r3, [sp]
   25d20:	add	r1, sp, #240	; 0xf0
   25d24:	mov	r3, ip
   25d28:	vmov.f64	d0, d8
   25d2c:	mov	r2, r8
   25d30:	ldr	r0, [sp, #24]
   25d34:	str	ip, [sp, #2940]	; 0xb7c
   25d38:	bl	25b94 <Process_isThread@@Base+0x79c>
   25d3c:	ldr	r3, [fp, #32]
   25d40:	tst	r3, #1
   25d44:	bne	2676c <Process_isThread@@Base+0x1374>
   25d48:	ldr	r2, [sp, #16]
   25d4c:	ldr	r3, [pc, #692]	; 26008 <Process_isThread@@Base+0xc10>
   25d50:	str	r2, [sp, #8]
   25d54:	ldr	r2, [sp, #28]
   25d58:	str	r3, [sp]
   25d5c:	str	r2, [sp, #4]
   25d60:	add	r0, sp, #636	; 0x27c
   25d64:	mov	r3, #129	; 0x81
   25d68:	mov	r2, #1
   25d6c:	mov	r1, #128	; 0x80
   25d70:	bl	15510 <__snprintf_chk@plt>
   25d74:	cmp	r0, #127	; 0x7f
   25d78:	bhi	27234 <Process_isThread@@Base+0x1e3c>
   25d7c:	add	r0, sp, #636	; 0x27c
   25d80:	mov	r1, #0
   25d84:	bl	15234 <open@plt>
   25d88:	cmn	r0, #1
   25d8c:	mov	r4, r0
   25d90:	beq	266b4 <Process_isThread@@Base+0x12bc>
   25d94:	add	r1, sp, #1808	; 0x710
   25d98:	add	r1, r1, #4
   25d9c:	mov	r2, #512	; 0x200
   25da0:	bl	25430 <Process_isThread@@Base+0x38>
   25da4:	mov	r5, r0
   25da8:	mov	r0, r4
   25dac:	bl	154f8 <close@plt>
   25db0:	cmp	r5, #0
   25db4:	ble	266b4 <Process_isThread@@Base+0x12bc>
   25db8:	add	r9, sp, #2832	; 0xb10
   25dbc:	add	r9, r9, #8
   25dc0:	add	r3, sp, #1808	; 0x710
   25dc4:	add	r3, r3, #4
   25dc8:	str	r3, [r9, #-2688]!	; 0xfffff580
   25dcc:	bl	152e8 <__errno_location@plt>
   25dd0:	mov	r3, #0
   25dd4:	mov	r1, r9
   25dd8:	mov	r2, #10
   25ddc:	str	r3, [r0]
   25de0:	mov	r4, r0
   25de4:	add	r0, sp, #1808	; 0x710
   25de8:	add	r0, r0, #4
   25dec:	bl	14f4c <strtol@plt>
   25df0:	ldr	r3, [sp, #152]	; 0x98
   25df4:	mov	r1, r9
   25df8:	str	r0, [r8, #116]	; 0x74
   25dfc:	ldrb	r2, [r3]
   25e00:	cmp	r2, #32
   25e04:	addeq	r3, r3, #1
   25e08:	mov	r0, r3
   25e0c:	mov	r2, #10
   25e10:	streq	r3, [sp, #152]	; 0x98
   25e14:	bl	14f4c <strtol@plt>
   25e18:	ldr	r3, [sp, #152]	; 0x98
   25e1c:	mov	r1, r9
   25e20:	str	r0, [r8, #120]	; 0x78
   25e24:	ldrb	r2, [r3]
   25e28:	cmp	r2, #32
   25e2c:	addeq	r3, r3, #1
   25e30:	mov	r0, r3
   25e34:	mov	r2, #10
   25e38:	streq	r3, [sp, #152]	; 0x98
   25e3c:	bl	14f4c <strtol@plt>
   25e40:	ldr	r3, [sp, #152]	; 0x98
   25e44:	mov	r1, r9
   25e48:	str	r0, [r8, #184]	; 0xb8
   25e4c:	ldrb	r2, [r3]
   25e50:	cmp	r2, #32
   25e54:	addeq	r3, r3, #1
   25e58:	mov	r0, r3
   25e5c:	mov	r2, #10
   25e60:	streq	r3, [sp, #152]	; 0x98
   25e64:	bl	14f4c <strtol@plt>
   25e68:	ldr	r3, [sp, #152]	; 0x98
   25e6c:	mov	r1, r9
   25e70:	str	r0, [r8, #188]	; 0xbc
   25e74:	ldrb	r2, [r3]
   25e78:	cmp	r2, #32
   25e7c:	addeq	r3, r3, #1
   25e80:	mov	r0, r3
   25e84:	mov	r2, #10
   25e88:	streq	r3, [sp, #152]	; 0x98
   25e8c:	bl	14f4c <strtol@plt>
   25e90:	ldr	r3, [sp, #152]	; 0x98
   25e94:	mov	r1, r9
   25e98:	str	r0, [r8, #196]	; 0xc4
   25e9c:	ldrb	r2, [r3]
   25ea0:	cmp	r2, #32
   25ea4:	addeq	r3, r3, #1
   25ea8:	mov	r0, r3
   25eac:	mov	r2, #10
   25eb0:	streq	r3, [sp, #152]	; 0x98
   25eb4:	bl	14f4c <strtol@plt>
   25eb8:	ldr	r3, [sp, #152]	; 0x98
   25ebc:	mov	r1, r9
   25ec0:	str	r0, [r8, #192]	; 0xc0
   25ec4:	ldrb	r2, [r3]
   25ec8:	cmp	r2, #32
   25ecc:	addeq	r3, r3, #1
   25ed0:	mov	r0, r3
   25ed4:	mov	r2, #10
   25ed8:	streq	r3, [sp, #152]	; 0x98
   25edc:	bl	14f4c <strtol@plt>
   25ee0:	ldr	r3, [r4]
   25ee4:	cmp	r3, #0
   25ee8:	str	r0, [r8, #200]	; 0xc8
   25eec:	bne	266b4 <Process_isThread@@Base+0x12bc>
   25ef0:	ldr	r2, [sp, #44]	; 0x2c
   25ef4:	cmp	r2, #0
   25ef8:	beq	26748 <Process_isThread@@Base+0x1350>
   25efc:	ldrb	r2, [r8, #136]	; 0x88
   25f00:	cmp	r2, #0
   25f04:	beq	26748 <Process_isThread@@Base+0x1350>
   25f08:	strb	r3, [r8, #48]	; 0x30
   25f0c:	ldrd	r2, [r8, #152]	; 0x98
   25f10:	add	r0, sp, #768	; 0x300
   25f14:	mov	r1, #128	; 0x80
   25f18:	strd	r2, [sp, #56]	; 0x38
   25f1c:	ldrd	r2, [r8, #160]	; 0xa0
   25f20:	strd	r2, [sp, #64]	; 0x40
   25f24:	ldr	r3, [r8, #60]	; 0x3c
   25f28:	mov	r2, #1
   25f2c:	str	r3, [sp, #32]
   25f30:	ldr	r3, [pc, #212]	; 2600c <Process_isThread@@Base+0xc14>
   25f34:	str	r3, [sp]
   25f38:	ldr	r3, [sp, #16]
   25f3c:	str	r3, [sp, #8]
   25f40:	ldr	r3, [sp, #28]
   25f44:	str	r3, [sp, #4]
   25f48:	mov	r3, #129	; 0x81
   25f4c:	bl	15510 <__snprintf_chk@plt>
   25f50:	cmp	r0, #127	; 0x7f
   25f54:	bhi	27234 <Process_isThread@@Base+0x1e3c>
   25f58:	add	r0, sp, #768	; 0x300
   25f5c:	mov	r1, #0
   25f60:	bl	15234 <open@plt>
   25f64:	cmn	r0, #1
   25f68:	mov	r5, r0
   25f6c:	beq	266b4 <Process_isThread@@Base+0x12bc>
   25f70:	ldr	r4, [pc, #152]	; 26010 <Process_isThread@@Base+0xc18>
   25f74:	mov	r2, #2048	; 0x800
   25f78:	mov	r1, r4
   25f7c:	bl	25430 <Process_isThread@@Base+0x38>
   25f80:	str	r0, [sp, #80]	; 0x50
   25f84:	mov	r0, r5
   25f88:	bl	154f8 <close@plt>
   25f8c:	ldr	r3, [sp, #80]	; 0x50
   25f90:	cmp	r3, #0
   25f94:	ble	266b4 <Process_isThread@@Base+0x12bc>
   25f98:	mov	r2, #0
   25f9c:	mov	r1, #32
   25fa0:	mov	r0, r4
   25fa4:	mov	r6, r2
   25fa8:	strb	r2, [r4, r3]
   25fac:	bl	152c4 <strchr@plt>
   25fb0:	cmp	r0, #0
   25fb4:	beq	266b4 <Process_isThread@@Base+0x12bc>
   25fb8:	add	r3, r0, #2
   25fbc:	mov	r0, r3
   25fc0:	mov	r1, #41	; 0x29
   25fc4:	str	r3, [sp, #152]	; 0x98
   25fc8:	str	r3, [sp, #80]	; 0x50
   25fcc:	bl	15444 <strrchr@plt>
   25fd0:	subs	r5, r0, #0
   25fd4:	beq	266b4 <Process_isThread@@Base+0x12bc>
   25fd8:	b	26080 <Process_isThread@@Base+0xc88>
   25fdc:	nop			; (mov r0, r0)
   25fe0:	andeq	r0, r0, r0
   25fe4:	subsmi	r0, r9, r0
   25fe8:	andeq	r0, r0, r0
   25fec:	svccc	0x00f00000	; IMB
   25ff0:	andeq	r0, r0, r0
   25ff4:	addmi	r4, pc, r0
   25ff8:	andeq	r0, r0, r0
   25ffc:	svclt	0x00f00000	; IMB
   26000:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   26004:	andeq	ip, r2, r4, ror #8
   26008:	andeq	ip, r2, r8, asr #9
   2600c:	ldrdeq	ip, [r2], -r4
   26010:	andeq	lr, r3, r0, ror r9
   26014:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   26018:	andeq	sl, r2, ip, asr #3
   2601c:	andeq	ip, r2, r0, ror #9
   26020:			; <UNDEFINED> instruction: 0x0003ccb8
   26024:	andeq	r5, r2, r4, asr r3
   26028:	andeq	ip, r2, r0, ror r4
   2602c:	strdeq	ip, [r2], -r4
   26030:			; <UNDEFINED> instruction: 0xfffeae81
   26034:	andeq	ip, r2, r8, asr r4
   26038:	andeq	ip, r2, ip, asr r4
   2603c:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   26040:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   26044:	andeq	r9, r2, r4, asr sl
   26048:	muleq	r2, r0, r4
   2604c:	andeq	ip, r2, r8, lsr #9
   26050:	andeq	ip, r2, r4, lsl #9
   26054:			; <UNDEFINED> instruction: 0x0002c4b0
   26058:	andeq	ip, r2, r8, ror r6
   2605c:	andeq	ip, r2, r8, lsl #13
   26060:	andeq	ip, r2, r8, ror #12
   26064:			; <UNDEFINED> instruction: 0x0002b1b0
   26068:	strdeq	fp, [r2], -r0
   2606c:	andeq	r0, r0, r1, lsl #4
   26070:	andeq	r9, r2, r0, lsl #20
   26074:	andeq	ip, r2, ip, ror r4
   26078:	andeq	ip, r2, r0, lsr #9
   2607c:	andeq	ip, r2, r8, ror #9
   26080:	ldr	r3, [sp, #80]	; 0x50
   26084:	sub	r0, r5, r3
   26088:	mov	r1, r3
   2608c:	add	r3, sp, #372	; 0x174
   26090:	mov	r2, r0
   26094:	mov	r7, r0
   26098:	str	r0, [sp, #88]	; 0x58
   2609c:	mov	r0, r3
   260a0:	mov	r3, #129	; 0x81
   260a4:	bl	15138 <__memcpy_chk@plt>
   260a8:	add	ip, sp, #2832	; 0xb10
   260ac:	ldrb	r3, [r5, #2]
   260b0:	add	ip, ip, #8
   260b4:	add	r2, ip, r7
   260b8:	add	r5, r5, #4
   260bc:	strb	r6, [r2, #-2468]	; 0xfffff65c
   260c0:	mov	r0, r5
   260c4:	strb	r3, [r8, #45]	; 0x2d
   260c8:	mov	r2, #10
   260cc:	mov	r1, r9
   260d0:	str	r5, [sp, #152]	; 0x98
   260d4:	bl	14f4c <strtol@plt>
   260d8:	ldr	r3, [sp, #152]	; 0x98
   260dc:	add	ip, r4, #2064	; 0x810
   260e0:	add	r3, r3, #1
   260e4:	mov	r2, #10
   260e8:	mov	r1, r9
   260ec:	mov	r6, ip
   260f0:	str	r0, [r8, #20]
   260f4:	mov	r0, r3
   260f8:	str	r3, [sp, #152]	; 0x98
   260fc:	bl	15294 <strtoul@plt>
   26100:	ldr	r3, [sp, #152]	; 0x98
   26104:	mov	r2, #10
   26108:	add	r3, r3, #1
   2610c:	mov	r1, r9
   26110:	str	r0, [r8, #52]	; 0x34
   26114:	mov	r0, r3
   26118:	str	r3, [sp, #152]	; 0x98
   2611c:	bl	15294 <strtoul@plt>
   26120:	ldr	r3, [sp, #152]	; 0x98
   26124:	mov	r2, #10
   26128:	add	r3, r3, #1
   2612c:	mov	r1, r9
   26130:	str	r0, [r8, #56]	; 0x38
   26134:	mov	r0, r3
   26138:	str	r3, [sp, #152]	; 0x98
   2613c:	bl	15294 <strtoul@plt>
   26140:	ldr	r3, [sp, #152]	; 0x98
   26144:	mov	r2, #10
   26148:	add	r3, r3, #1
   2614c:	mov	r1, r9
   26150:	str	r0, [r8, #60]	; 0x3c
   26154:	mov	r0, r3
   26158:	str	r3, [sp, #152]	; 0x98
   2615c:	bl	14f4c <strtol@plt>
   26160:	ldr	r3, [sp, #152]	; 0x98
   26164:	mov	r2, #10
   26168:	add	r3, r3, #1
   2616c:	mov	r1, r9
   26170:	str	r0, [r8, #64]	; 0x40
   26174:	mov	r0, r3
   26178:	str	r3, [sp, #152]	; 0x98
   2617c:	bl	15294 <strtoul@plt>
   26180:	ldr	r3, [sp, #152]	; 0x98
   26184:	mov	r2, #10
   26188:	add	r3, r3, #1
   2618c:	mov	r1, r9
   26190:	str	r0, [r8, #72]	; 0x48
   26194:	mov	r0, r3
   26198:	str	r3, [sp, #152]	; 0x98
   2619c:	bl	15378 <strtoull@plt>
   261a0:	ldr	r3, [sp, #152]	; 0x98
   261a4:	mov	r2, #10
   261a8:	add	r3, r3, #1
   261ac:	mov	r1, r9
   261b0:	str	r0, [r8, #128]	; 0x80
   261b4:	mov	r0, r3
   261b8:	str	r3, [sp, #152]	; 0x98
   261bc:	bl	15378 <strtoull@plt>
   261c0:	ldr	r3, [sp, #152]	; 0x98
   261c4:	mov	r2, #10
   261c8:	add	r3, r3, #1
   261cc:	mov	r1, r9
   261d0:	str	r0, [r8, #144]	; 0x90
   261d4:	mov	r0, r3
   261d8:	str	r3, [sp, #152]	; 0x98
   261dc:	bl	15378 <strtoull@plt>
   261e0:	ldr	r3, [sp, #152]	; 0x98
   261e4:	mov	r2, #10
   261e8:	add	r3, r3, #1
   261ec:	mov	r1, r9
   261f0:	str	r0, [r8, #132]	; 0x84
   261f4:	mov	r0, r3
   261f8:	str	r3, [sp, #152]	; 0x98
   261fc:	bl	15378 <strtoull@plt>
   26200:	ldr	r3, [sp, #152]	; 0x98
   26204:	mov	r2, #10
   26208:	add	r3, r3, #1
   2620c:	mov	r1, r9
   26210:	str	r0, [r8, #148]	; 0x94
   26214:	mov	r0, r3
   26218:	str	r3, [sp, #152]	; 0x98
   2621c:	bl	15378 <strtoull@plt>
   26220:	vldr	d7, [r6, #-8]
   26224:	vcmp.f64	d7, #0.0
   26228:	vmrs	APSR_nzcv, fpscr
   2622c:	mov	r4, r0
   26230:	mov	r5, r1
   26234:	beq	26f44 <Process_isThread@@Base+0x1b4c>
   26238:	vdiv.f64	d13, d10, d7
   2623c:	bl	28b70 <Battery_getData@@Base+0xa64>
   26240:	vmov	d7, r0, r1
   26244:	vmul.f64	d7, d7, d13
   26248:	vmul.f64	d7, d7, d9
   2624c:	vmov	r0, r1, d7
   26250:	bl	28d30 <Battery_getData@@Base+0xc24>
   26254:	ldr	r3, [sp, #152]	; 0x98
   26258:	mov	r2, #10
   2625c:	add	r3, r3, #1
   26260:	strd	r0, [r8, #152]	; 0x98
   26264:	mov	r0, r3
   26268:	mov	r1, r9
   2626c:	str	r3, [sp, #152]	; 0x98
   26270:	bl	15378 <strtoull@plt>
   26274:	bl	28b70 <Battery_getData@@Base+0xa64>
   26278:	vmov	d7, r0, r1
   2627c:	vmul.f64	d7, d7, d13
   26280:	vmul.f64	d7, d7, d9
   26284:	vmov	r0, r1, d7
   26288:	bl	28d30 <Battery_getData@@Base+0xc24>
   2628c:	ldr	r3, [sp, #152]	; 0x98
   26290:	mov	r2, #10
   26294:	add	r3, r3, #1
   26298:	strd	r0, [r8, #160]	; 0xa0
   2629c:	mov	r0, r3
   262a0:	mov	r1, r9
   262a4:	str	r3, [sp, #152]	; 0x98
   262a8:	bl	15378 <strtoull@plt>
   262ac:	mov	r4, r0
   262b0:	mov	r5, r1
   262b4:	mov	r0, r4
   262b8:	mov	r1, r5
   262bc:	bl	28b70 <Battery_getData@@Base+0xa64>
   262c0:	vmov	d7, r0, r1
   262c4:	vmul.f64	d7, d7, d13
   262c8:	vmul.f64	d7, d7, d9
   262cc:	vmov	r0, r1, d7
   262d0:	bl	28d30 <Battery_getData@@Base+0xc24>
   262d4:	ldr	r3, [sp, #152]	; 0x98
   262d8:	mov	r2, #10
   262dc:	add	r3, r3, #1
   262e0:	strd	r0, [r8, #168]	; 0xa8
   262e4:	mov	r0, r3
   262e8:	mov	r1, r9
   262ec:	str	r3, [sp, #152]	; 0x98
   262f0:	bl	15378 <strtoull@plt>
   262f4:	mov	r4, r0
   262f8:	mov	r5, r1
   262fc:	mov	r0, r4
   26300:	mov	r1, r5
   26304:	bl	28b70 <Battery_getData@@Base+0xa64>
   26308:	mov	r4, #17
   2630c:	vmov	d7, r0, r1
   26310:	vmul.f64	d13, d7, d13
   26314:	vmul.f64	d7, d13, d9
   26318:	vmov	r0, r1, d7
   2631c:	bl	28d30 <Battery_getData@@Base+0xc24>
   26320:	ldr	r3, [sp, #152]	; 0x98
   26324:	mov	r2, #10
   26328:	add	r3, r3, #1
   2632c:	strd	r0, [r8, #176]	; 0xb0
   26330:	mov	r0, r3
   26334:	mov	r1, r9
   26338:	str	r3, [sp, #152]	; 0x98
   2633c:	bl	14f4c <strtol@plt>
   26340:	ldr	r3, [sp, #152]	; 0x98
   26344:	mov	r2, #10
   26348:	add	r3, r3, #1
   2634c:	mov	r1, r9
   26350:	str	r0, [r8, #92]	; 0x5c
   26354:	mov	r0, r3
   26358:	str	r3, [sp, #152]	; 0x98
   2635c:	bl	14f4c <strtol@plt>
   26360:	ldr	r3, [sp, #152]	; 0x98
   26364:	mov	r2, #10
   26368:	add	r3, r3, #1
   2636c:	mov	r1, r9
   26370:	str	r0, [r8, #96]	; 0x60
   26374:	mov	r0, r3
   26378:	str	r3, [sp, #152]	; 0x98
   2637c:	bl	14f4c <strtol@plt>
   26380:	ldr	r3, [sp, #152]	; 0x98
   26384:	ldr	r7, [sp, #16]
   26388:	add	r3, r3, #1
   2638c:	ldr	r6, [sp, #32]
   26390:	str	r0, [r8, #100]	; 0x64
   26394:	mov	r0, r3
   26398:	str	r3, [sp, #152]	; 0x98
   2639c:	mov	r1, #32
   263a0:	bl	152c4 <strchr@plt>
   263a4:	subs	r4, r4, #1
   263a8:	add	r0, r0, #1
   263ac:	str	r0, [sp, #152]	; 0x98
   263b0:	bne	2639c <Process_isThread@@Base+0xfa4>
   263b4:	mov	r2, #10
   263b8:	mov	r1, r9
   263bc:	str	r7, [sp, #16]
   263c0:	str	r6, [sp, #32]
   263c4:	bl	14f4c <strtol@plt>
   263c8:	ldr	r3, [sp, #152]	; 0x98
   263cc:	mov	r2, #10
   263d0:	add	r3, r3, #1
   263d4:	mov	r1, r9
   263d8:	str	r0, [r8, #124]	; 0x7c
   263dc:	mov	r0, r3
   263e0:	str	r3, [sp, #152]	; 0x98
   263e4:	bl	14f4c <strtol@plt>
   263e8:	ldrd	r2, [r8, #152]	; 0x98
   263ec:	ldrd	r4, [r8, #160]	; 0xa0
   263f0:	ldr	r1, [r8, #60]	; 0x3c
   263f4:	ldr	ip, [sp, #32]
   263f8:	adds	r6, r2, r4
   263fc:	adc	r7, r3, r5
   26400:	mov	r2, r6
   26404:	mov	r3, r7
   26408:	cmp	r1, ip
   2640c:	strd	r2, [r8, #8]
   26410:	str	r0, [r8, #76]	; 0x4c
   26414:	beq	2659c <Process_isThread@@Base+0x11a4>
   26418:	ldr	r4, [sp, #24]
   2641c:	ldr	r3, [r4, #140]	; 0x8c
   26420:	cmp	r3, #0
   26424:	beq	2659c <Process_isThread@@Base+0x11a4>
   26428:	ldr	r0, [r8, #316]	; 0x13c
   2642c:	bl	14fa0 <free@plt>
   26430:	ldr	r1, [r8, #60]	; 0x3c
   26434:	ldr	r0, [pc, #-1064]	; 26014 <Process_isThread@@Base+0xc1c>
   26438:	mov	r2, r1
   2643c:	lsr	r6, r1, #12
   26440:	uxtb	r3, r1
   26444:	bic	r6, r6, #255	; 0xff
   26448:	orr	r6, r6, r3
   2644c:	mov	r3, #0
   26450:	ldr	r5, [r4, #140]	; 0x8c
   26454:	strd	r2, [sp, #80]	; 0x50
   26458:	and	r3, r0, r1, lsr #8
   2645c:	mov	r7, r3
   26460:	str	r3, [sp, #92]	; 0x5c
   26464:	str	r0, [sp, #32]
   26468:	ldr	r3, [r5]
   2646c:	cmp	r3, #0
   26470:	beq	26f24 <Process_isThread@@Base+0x1b2c>
   26474:	ldr	r2, [r5, #4]
   26478:	cmp	r7, r2
   2647c:	bcc	26f24 <Process_isThread@@Base+0x1b2c>
   26480:	bhi	269e4 <Process_isThread@@Base+0x15ec>
   26484:	ldr	r4, [r5, #8]
   26488:	cmp	r6, r4
   2648c:	bcc	26f24 <Process_isThread@@Base+0x1b2c>
   26490:	ldr	r2, [r5, #12]
   26494:	cmp	r6, r2
   26498:	bhi	269e4 <Process_isThread@@Base+0x15ec>
   2649c:	sub	r4, r6, r4
   264a0:	b	26520 <Process_isThread@@Base+0x1128>
   264a4:	ldr	r0, [sp, #108]	; 0x6c
   264a8:	bl	14fa0 <free@plt>
   264ac:	ldr	r3, [r5]
   264b0:	ldr	r2, [pc, #-1184]	; 26018 <Process_isThread@@Base+0xc20>
   264b4:	mov	r1, #1
   264b8:	str	r4, [sp]
   264bc:	add	r0, sp, #108	; 0x6c
   264c0:	bl	151a4 <__asprintf_chk@plt>
   264c4:	mov	r2, r9
   264c8:	ldr	r1, [sp, #108]	; 0x6c
   264cc:	mov	r0, #3
   264d0:	bl	1512c <__xstat@plt>
   264d4:	cmp	r0, #0
   264d8:	bne	26508 <Process_isThread@@Base+0x1110>
   264dc:	ldr	r1, [r9, #32]
   264e0:	ldr	r0, [r9, #36]	; 0x24
   264e4:	ldr	r2, [sp, #32]
   264e8:	lsr	r3, r1, #8
   264ec:	orr	r3, r3, r0, lsl #24
   264f0:	and	r3, r3, r2
   264f4:	bic	r2, r0, #4080	; 0xff0
   264f8:	bic	r2, r2, #15
   264fc:	orr	r3, r2, r3
   26500:	cmp	r7, r3
   26504:	beq	2698c <Process_isThread@@Base+0x1594>
   26508:	ldr	r0, [sp, #108]	; 0x6c
   2650c:	bl	14fa0 <free@plt>
   26510:	cmp	r6, r4
   26514:	beq	269b8 <Process_isThread@@Base+0x15c0>
   26518:	ldr	r3, [r5]
   2651c:	mov	r4, r6
   26520:	ldr	r2, [pc, #-1292]	; 2601c <Process_isThread@@Base+0xc24>
   26524:	mov	r1, #1
   26528:	str	r4, [sp]
   2652c:	add	r0, sp, #108	; 0x6c
   26530:	bl	151a4 <__asprintf_chk@plt>
   26534:	mov	r2, r9
   26538:	ldr	r1, [sp, #108]	; 0x6c
   2653c:	mov	r0, #3
   26540:	bl	1512c <__xstat@plt>
   26544:	cmp	r0, #0
   26548:	bne	264a4 <Process_isThread@@Base+0x10ac>
   2654c:	ldr	r1, [r9, #32]
   26550:	ldr	r0, [r9, #36]	; 0x24
   26554:	ldr	r2, [sp, #32]
   26558:	lsr	r3, r1, #8
   2655c:	orr	r3, r3, r0, lsl #24
   26560:	and	r3, r3, r2
   26564:	bic	r2, r0, #4080	; 0xff0
   26568:	bic	r2, r2, #15
   2656c:	orr	r3, r2, r3
   26570:	cmp	r7, r3
   26574:	bne	264a4 <Process_isThread@@Base+0x10ac>
   26578:	lsr	r3, r1, #12
   2657c:	orr	r3, r3, r0, lsl #20
   26580:	bic	r3, r3, #255	; 0xff
   26584:	uxtb	r1, r1
   26588:	orr	r1, r3, r1
   2658c:	cmp	r6, r1
   26590:	bne	264a4 <Process_isThread@@Base+0x10ac>
   26594:	ldr	r0, [sp, #108]	; 0x6c
   26598:	str	r0, [r8, #316]	; 0x13c
   2659c:	ldr	r3, [fp, #32]
   265a0:	tst	r3, #256	; 0x100
   265a4:	bne	26c50 <Process_isThread@@Base+0x1858>
   265a8:	ldrd	r2, [r8, #152]	; 0x98
   265ac:	ldrd	r0, [r8, #160]	; 0xa0
   265b0:	adds	r4, r0, r2
   265b4:	adc	r5, r1, r3
   265b8:	ldrd	r0, [sp, #56]	; 0x38
   265bc:	ldrd	r2, [sp, #64]	; 0x40
   265c0:	subs	r0, r4, r0
   265c4:	sbc	r1, r5, r1
   265c8:	subs	r2, r0, r2
   265cc:	sbc	r3, r1, r3
   265d0:	mov	r0, r2
   265d4:	mov	r1, r3
   265d8:	bl	28b70 <Battery_getData@@Base+0xa64>
   265dc:	vldr	s15, [sp, #52]	; 0x34
   265e0:	vcvt.f64.s32	d6, s15
   265e4:	vmul.f64	d6, d6, d9
   265e8:	vmov	d7, r0, r1
   265ec:	vdiv.f64	d7, d7, d8
   265f0:	vmul.f64	d7, d7, d9
   265f4:	vcvt.f32.f64	s14, d7
   265f8:	vcvt.f64.f32	d5, s14
   265fc:	vcmpe.f64	d5, d6
   26600:	vmrs	APSR_nzcv, fpscr
   26604:	vcvtgt.f32.f64	s14, d6
   26608:	bgt	2661c <Process_isThread@@Base+0x1224>
   2660c:	vcmpe.f32	s14, #0.0
   26610:	mov	r3, #0
   26614:	vmrs	APSR_nzcv, fpscr
   26618:	bmi	26cd0 <Process_isThread@@Base+0x18d8>
   2661c:	vcmp.f32	s14, s14
   26620:	vstr	s14, [r8, #80]	; 0x50
   26624:	vmrs	APSR_nzcv, fpscr
   26628:	bvs	26ccc <Process_isThread@@Base+0x18d4>
   2662c:	mov	r0, #30
   26630:	ldr	r4, [r8, #120]	; 0x78
   26634:	bl	1509c <sysconf@plt>
   26638:	ldr	r2, [sp, #24]
   2663c:	cmp	r0, #0
   26640:	add	r3, r0, #1020	; 0x3fc
   26644:	add	r3, r3, #3
   26648:	movge	r3, r0
   2664c:	ldrd	r0, [r2, #56]	; 0x38
   26650:	asr	r3, r3, #10
   26654:	mul	r3, r4, r3
   26658:	vmov	s15, r3
   2665c:	vcvt.f64.s32	d12, s15
   26660:	bl	28b70 <Battery_getData@@Base+0xa64>
   26664:	ldrb	r4, [sp, #103]	; 0x67
   26668:	cmp	r4, #0
   2666c:	vmov	d7, r0, r1
   26670:	vdiv.f64	d7, d12, d7
   26674:	vmul.f64	d7, d7, d9
   26678:	vcvt.f32.f64	s14, d7
   2667c:	vstr	s14, [r8, #84]	; 0x54
   26680:	beq	26808 <Process_isThread@@Base+0x1410>
   26684:	ldrb	r3, [fp, #68]	; 0x44
   26688:	cmp	r3, #0
   2668c:	beq	26918 <Process_isThread@@Base+0x1520>
   26690:	ldrb	r3, [r8, #45]	; 0x2d
   26694:	cmp	r3, #90	; 0x5a
   26698:	beq	26918 <Process_isThread@@Base+0x1520>
   2669c:	ldr	r2, [sp, #16]
   266a0:	ldr	r1, [sp, #28]
   266a4:	mov	r0, r8
   266a8:	bl	25a44 <Process_isThread@@Base+0x64c>
   266ac:	cmp	r0, #0
   266b0:	bne	26918 <Process_isThread@@Base+0x1520>
   266b4:	ldrb	r3, [sp, #103]	; 0x67
   266b8:	cmp	r3, #0
   266bc:	beq	2673c <Process_isThread@@Base+0x1344>
   266c0:	mov	r1, r8
   266c4:	ldr	r0, [sp, #24]
   266c8:	bl	1d5a0 <ProcessList_remove@@Base>
   266cc:	ldr	r0, [sp, #20]
   266d0:	bl	15438 <readdir@plt>
   266d4:	cmp	r0, #0
   266d8:	bne	25c54 <Process_isThread@@Base+0x85c>
   266dc:	ldr	r0, [sp, #20]
   266e0:	bl	15504 <closedir@plt>
   266e4:	mov	r0, #1
   266e8:	ldr	r3, [pc, #-1744]	; 26020 <Process_isThread@@Base+0xc28>
   266ec:	ldr	r2, [sp, #2836]	; 0xb14
   266f0:	ldr	r3, [r3]
   266f4:	cmp	r2, r3
   266f8:	bne	2724c <Process_isThread@@Base+0x1e54>
   266fc:	add	sp, sp, #2832	; 0xb10
   26700:	add	sp, sp, #12
   26704:	vpop	{d8-d14}
   26708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2670c:	add	sp, sp, #8
   26710:	bx	lr
   26714:	cmp	r0, #0
   26718:	ble	25c44 <Process_isThread@@Base+0x84c>
   2671c:	ldr	r3, [pc, #-1792]	; 26024 <Process_isThread@@Base+0xc2c>
   26720:	add	r2, sp, #103	; 0x67
   26724:	mov	r1, r4
   26728:	ldr	r0, [sp, #24]
   2672c:	strb	sl, [sp, #103]	; 0x67
   26730:	bl	1d98c <ProcessList_getProcess@@Base>
   26734:	mov	r8, r0
   26738:	b	25cdc <Process_isThread@@Base+0x8e4>
   2673c:	mov	r0, r8
   26740:	bl	248c0 <Process_delete@@Base>
   26744:	b	25c44 <Process_isThread@@Base+0x84c>
   26748:	ldr	r3, [sp, #48]	; 0x30
   2674c:	cmp	r3, #0
   26750:	moveq	r3, #1
   26754:	ldrne	r3, [r8, #16]
   26758:	ldrne	r2, [r8, #24]
   2675c:	subne	r3, r3, r2
   26760:	clzne	r3, r3
   26764:	lsrne	r3, r3, #5
   26768:	b	25f08 <Process_isThread@@Base+0xb10>
   2676c:	ldr	r2, [sp, #16]
   26770:	ldr	r3, [pc, #-1872]	; 26028 <Process_isThread@@Base+0xc30>
   26774:	str	r2, [sp, #8]
   26778:	ldr	r2, [sp, #28]
   2677c:	str	r3, [sp]
   26780:	str	r2, [sp, #4]
   26784:	add	r0, sp, #504	; 0x1f8
   26788:	mov	r4, #0
   2678c:	mov	r3, #129	; 0x81
   26790:	mov	r2, #1
   26794:	mov	r1, #128	; 0x80
   26798:	strb	r4, [sp, #632]	; 0x278
   2679c:	bl	15510 <__snprintf_chk@plt>
   267a0:	cmp	r0, #127	; 0x7f
   267a4:	bhi	27234 <Process_isThread@@Base+0x1e3c>
   267a8:	add	r0, sp, #504	; 0x1f8
   267ac:	mov	r1, r4
   267b0:	bl	15234 <open@plt>
   267b4:	cmn	r0, #1
   267b8:	mov	r5, r0
   267bc:	bne	269ec <Process_isThread@@Base+0x15f4>
   267c0:	mvn	r2, #0
   267c4:	mvn	r3, #0
   267c8:	add	r1, r8, #272	; 0x110
   267cc:	add	r0, r8, #256	; 0x100
   267d0:	vstr	d14, [r8, #280]	; 0x118
   267d4:	vstr	d14, [r8, #288]	; 0x120
   267d8:	strd	r2, [r8, #208]	; 0xd0
   267dc:	strd	r2, [r8, #216]	; 0xd8
   267e0:	strd	r2, [r8, #224]	; 0xe0
   267e4:	strd	r2, [r8, #232]	; 0xe8
   267e8:	strd	r2, [r8, #240]	; 0xf0
   267ec:	strd	r2, [r8, #248]	; 0xf8
   267f0:	strd	r2, [r0]
   267f4:	strd	r2, [r1, #-8]
   267f8:	strd	r2, [r1]
   267fc:	b	25d48 <Process_isThread@@Base+0x950>
   26800:	ldr	r0, [sp, #20]
   26804:	b	266e8 <Process_isThread@@Base+0x12f0>
   26808:	ldr	r2, [sp, #16]
   2680c:	ldr	r3, [pc, #-2024]	; 2602c <Process_isThread@@Base+0xc34>
   26810:	str	r2, [sp, #8]
   26814:	ldr	r2, [sp, #28]
   26818:	str	r3, [sp]
   2681c:	str	r2, [sp, #4]
   26820:	add	r0, sp, #900	; 0x384
   26824:	mov	r3, #129	; 0x81
   26828:	mov	r2, #1
   2682c:	mov	r1, #128	; 0x80
   26830:	strb	r4, [sp, #1028]	; 0x404
   26834:	bl	15510 <__snprintf_chk@plt>
   26838:	cmp	r0, #127	; 0x7f
   2683c:	bhi	27234 <Process_isThread@@Base+0x1e3c>
   26840:	add	r1, sp, #900	; 0x384
   26844:	mov	r2, r9
   26848:	mov	r0, #3
   2684c:	bl	1512c <__xstat@plt>
   26850:	cmn	r0, #1
   26854:	beq	266b4 <Process_isThread@@Base+0x12bc>
   26858:	ldr	r3, [sp, #224]	; 0xe0
   2685c:	ldr	r2, [sp, #176]	; 0xb0
   26860:	add	r1, sp, #108	; 0x6c
   26864:	str	r2, [r8, #68]	; 0x44
   26868:	str	r3, [r8, #112]	; 0x70
   2686c:	add	r0, sp, #104	; 0x68
   26870:	str	r3, [sp, #104]	; 0x68
   26874:	bl	150f0 <localtime_r@plt>
   26878:	ldr	r3, [sp, #40]	; 0x28
   2687c:	ldr	r1, [pc, #-2132]	; 26030 <Process_isThread@@Base+0xc38>
   26880:	ldr	ip, [sp, #104]	; 0x68
   26884:	add	r1, r3, r1
   26888:	ldr	r0, [pc, #-2140]	; 26034 <Process_isThread@@Base+0xc3c>
   2688c:	cmp	r1, ip
   26890:	ldr	r2, [pc, #-2144]	; 26038 <Process_isThread@@Base+0xc40>
   26894:	add	r3, sp, #108	; 0x6c
   26898:	movle	r2, r0
   2689c:	mov	r1, #7
   268a0:	add	r0, r8, #104	; 0x68
   268a4:	bl	151f8 <strftime@plt>
   268a8:	ldr	r3, [sp, #24]
   268ac:	ldr	r1, [r8, #68]	; 0x44
   268b0:	ldr	r0, [r3, #16]
   268b4:	bl	20b3c <UsersTable_getRef@@Base>
   268b8:	ldr	r3, [fp, #32]
   268bc:	tst	r3, #512	; 0x200
   268c0:	str	r0, [r8, #88]	; 0x58
   268c4:	beq	268ec <Process_isThread@@Base+0x14f4>
   268c8:	mov	r1, #4
   268cc:	ldr	r0, [pc, #-2200]	; 2603c <Process_isThread@@Base+0xc44>
   268d0:	bl	153f0 <access@plt>
   268d4:	cmp	r0, #0
   268d8:	beq	271c8 <Process_isThread@@Base+0x1dd0>
   268dc:	ldr	r3, [r8, #16]
   268e0:	str	r4, [r8, #296]	; 0x128
   268e4:	str	r3, [r8, #300]	; 0x12c
   268e8:	ldr	r3, [fp, #32]
   268ec:	tst	r3, #1024	; 0x400
   268f0:	bne	270c8 <Process_isThread@@Base+0x1cd0>
   268f4:	ldr	r2, [sp, #16]
   268f8:	ldr	r1, [sp, #28]
   268fc:	mov	r0, r8
   26900:	bl	25a44 <Process_isThread@@Base+0x64c>
   26904:	cmp	r0, #0
   26908:	beq	266b4 <Process_isThread@@Base+0x12bc>
   2690c:	mov	r1, r8
   26910:	ldr	r0, [sp, #24]
   26914:	bl	1d578 <ProcessList_add@@Base>
   26918:	ldr	r3, [fp, #32]
   2691c:	tst	r3, #2048	; 0x800
   26920:	bne	26d6c <Process_isThread@@Base+0x1974>
   26924:	tst	r3, #4096	; 0x1000
   26928:	bne	26cd8 <Process_isThread@@Base+0x18e0>
   2692c:	ldrb	r3, [r8, #45]	; 0x2d
   26930:	cmp	r3, #90	; 0x5a
   26934:	bne	26944 <Process_isThread@@Base+0x154c>
   26938:	ldr	r3, [r8, #40]	; 0x28
   2693c:	cmp	r3, #0
   26940:	beq	270a4 <Process_isThread@@Base+0x1cac>
   26944:	mov	r0, r8
   26948:	bl	253f8 <Process_isThread@@Base>
   2694c:	cmp	r0, #0
   26950:	beq	26c98 <Process_isThread@@Base+0x18a0>
   26954:	ldrb	r3, [fp, #62]	; 0x3e
   26958:	cmp	r3, #0
   2695c:	bne	26c5c <Process_isThread@@Base+0x1864>
   26960:	ldrb	r3, [r8, #136]	; 0x88
   26964:	cmp	r3, #0
   26968:	bne	26c5c <Process_isThread@@Base+0x1864>
   2696c:	ldrb	r2, [r8, #45]	; 0x2d
   26970:	cmp	r2, #90	; 0x5a
   26974:	beq	2719c <Process_isThread@@Base+0x1da4>
   26978:	ldr	r1, [sp, #24]
   2697c:	ldr	r3, [r1, #48]	; 0x30
   26980:	add	r3, r3, #1
   26984:	str	r3, [r1, #48]	; 0x30
   26988:	b	26c9c <Process_isThread@@Base+0x18a4>
   2698c:	lsr	r3, r1, #12
   26990:	orr	r3, r3, r0, lsl #20
   26994:	bic	r3, r3, #255	; 0xff
   26998:	uxtb	r1, r1
   2699c:	orr	r1, r3, r1
   269a0:	cmp	r6, r1
   269a4:	beq	26594 <Process_isThread@@Base+0x119c>
   269a8:	ldr	r0, [sp, #108]	; 0x6c
   269ac:	bl	14fa0 <free@plt>
   269b0:	cmp	r6, r4
   269b4:	bne	26518 <Process_isThread@@Base+0x1120>
   269b8:	mov	r2, r9
   269bc:	ldr	r1, [r5]
   269c0:	mov	r0, #3
   269c4:	bl	1512c <__xstat@plt>
   269c8:	cmp	r0, #0
   269cc:	bne	269e4 <Process_isThread@@Base+0x15ec>
   269d0:	ldrd	r2, [r9, #32]
   269d4:	ldrd	r0, [sp, #80]	; 0x50
   269d8:	cmp	r1, r3
   269dc:	cmpeq	r0, r2
   269e0:	beq	26e94 <Process_isThread@@Base+0x1a9c>
   269e4:	add	r5, r5, #16
   269e8:	b	26468 <Process_isThread@@Base+0x1070>
   269ec:	add	r1, sp, #1808	; 0x710
   269f0:	add	r1, r1, #4
   269f4:	ldr	r2, [pc, #-2492]	; 26040 <Process_isThread@@Base+0xc48>
   269f8:	bl	25430 <Process_isThread@@Base+0x38>
   269fc:	mov	r6, r0
   26a00:	mov	r0, r5
   26a04:	bl	154f8 <close@plt>
   26a08:	cmp	r6, #0
   26a0c:	ble	25d48 <Process_isThread@@Base+0x950>
   26a10:	add	r3, sp, #2832	; 0xb10
   26a14:	add	r3, r3, #8
   26a18:	add	r6, r3, r6
   26a1c:	mov	r9, r3
   26a20:	strb	r4, [r6, #-1028]	; 0xfffffbfc
   26a24:	ldrd	r2, [r8, #240]	; 0xf0
   26a28:	ldr	r5, [pc, #-2540]	; 26044 <Process_isThread@@Base+0xc4c>
   26a2c:	ldr	r7, [sp, #16]
   26a30:	strd	r2, [sp, #32]
   26a34:	ldrd	r2, [r8, #248]	; 0xf8
   26a38:	strd	r2, [sp, #56]	; 0x38
   26a3c:	add	r3, sp, #1808	; 0x710
   26a40:	add	r3, r3, #4
   26a44:	str	r3, [r9, #-2688]!	; 0xfffff580
   26a48:	mov	r1, r5
   26a4c:	mov	r0, r9
   26a50:	bl	1521c <strsep@plt>
   26a54:	subs	r4, r0, #0
   26a58:	beq	26c48 <Process_isThread@@Base+0x1850>
   26a5c:	ldrb	r3, [r4]
   26a60:	sub	r3, r3, #99	; 0x63
   26a64:	cmp	r3, #20
   26a68:	ldrls	pc, [pc, r3, lsl #2]
   26a6c:	b	26a48 <Process_isThread@@Base+0x1650>
   26a70:	andeq	r6, r2, r8, lsl ip
   26a74:	andeq	r6, r2, r8, asr #20
   26a78:	andeq	r6, r2, r8, asr #20
   26a7c:	andeq	r6, r2, r8, asr #20
   26a80:	andeq	r6, r2, r8, asr #20
   26a84:	andeq	r6, r2, r8, asr #20
   26a88:	andeq	r6, r2, r8, asr #20
   26a8c:	andeq	r6, r2, r8, asr #20
   26a90:	andeq	r6, r2, r8, asr #20
   26a94:	andeq	r6, r2, r8, asr #20
   26a98:	andeq	r6, r2, r8, asr #20
   26a9c:	andeq	r6, r2, r8, asr #20
   26aa0:	andeq	r6, r2, r8, asr #20
   26aa4:	andeq	r6, r2, r8, asr #20
   26aa8:	andeq	r6, r2, r8, asr #20
   26aac:	andeq	r6, r2, ip, lsl #23
   26ab0:	andeq	r6, r2, r0, asr fp
   26ab4:	andeq	r6, r2, r8, asr #20
   26ab8:	andeq	r6, r2, r8, asr #20
   26abc:	andeq	r6, r2, r8, asr #20
   26ac0:	andeq	r6, r2, r4, asr #21
   26ac4:	ldrb	r3, [r4, #1]
   26ac8:	cmp	r3, #99	; 0x63
   26acc:	beq	26ea0 <Process_isThread@@Base+0x1aa8>
   26ad0:	ldr	r1, [pc, #-2704]	; 26048 <Process_isThread@@Base+0xc50>
   26ad4:	mov	r2, #12
   26ad8:	add	r0, r4, #1
   26adc:	bl	154e0 <strncmp@plt>
   26ae0:	subs	r1, r0, #0
   26ae4:	bne	26a48 <Process_isThread@@Base+0x1650>
   26ae8:	add	r0, r4, #13
   26aec:	mov	r2, #10
   26af0:	bl	15378 <strtoull@plt>
   26af4:	ldrd	r2, [sp, #56]	; 0x38
   26af8:	add	r4, r8, #272	; 0x110
   26afc:	subs	r2, r0, r2
   26b00:	sbc	r3, r1, r3
   26b04:	strd	r0, [r8, #248]	; 0xf8
   26b08:	mov	r0, r2
   26b0c:	mov	r1, r3
   26b10:	bl	28b70 <Battery_getData@@Base+0xa64>
   26b14:	ldrd	r2, [sp, #72]	; 0x48
   26b18:	vmov	d12, r0, r1
   26b1c:	ldrd	r0, [r4]
   26b20:	subs	r2, r2, r0
   26b24:	sbc	r3, r3, r1
   26b28:	mov	r0, r2
   26b2c:	mov	r1, r3
   26b30:	bl	28b70 <Battery_getData@@Base+0xa64>
   26b34:	ldrd	r2, [sp, #72]	; 0x48
   26b38:	vmov	d7, r0, r1
   26b3c:	vdiv.f64	d6, d7, d11
   26b40:	vdiv.f64	d7, d12, d6
   26b44:	vstr	d7, [r8, #288]	; 0x120
   26b48:	strd	r2, [r4]
   26b4c:	b	26a48 <Process_isThread@@Base+0x1650>
   26b50:	ldrb	r3, [r4, #4]
   26b54:	add	r6, r4, #1
   26b58:	cmp	r3, #114	; 0x72
   26b5c:	beq	26ef8 <Process_isThread@@Base+0x1b00>
   26b60:	ldr	r1, [pc, #-2844]	; 2604c <Process_isThread@@Base+0xc54>
   26b64:	mov	r0, r6
   26b68:	mov	r2, #6
   26b6c:	bl	154e0 <strncmp@plt>
   26b70:	subs	r1, r0, #0
   26b74:	bne	26a48 <Process_isThread@@Base+0x1650>
   26b78:	add	r0, r4, #7
   26b7c:	mov	r2, #10
   26b80:	bl	15378 <strtoull@plt>
   26b84:	strd	r0, [r8, #232]	; 0xe8
   26b88:	b	26a48 <Process_isThread@@Base+0x1650>
   26b8c:	ldrb	r3, [r4, #1]
   26b90:	cmp	r3, #99	; 0x63
   26b94:	beq	26ecc <Process_isThread@@Base+0x1ad4>
   26b98:	ldr	r1, [pc, #-2896]	; 26050 <Process_isThread@@Base+0xc58>
   26b9c:	mov	r2, #11
   26ba0:	add	r0, r4, #1
   26ba4:	bl	154e0 <strncmp@plt>
   26ba8:	subs	r1, r0, #0
   26bac:	bne	26a48 <Process_isThread@@Base+0x1650>
   26bb0:	add	r0, r4, #12
   26bb4:	mov	r2, #10
   26bb8:	bl	15378 <strtoull@plt>
   26bbc:	ldrd	r2, [sp, #32]
   26bc0:	add	r4, r8, #272	; 0x110
   26bc4:	subs	r2, r0, r2
   26bc8:	sbc	r3, r1, r3
   26bcc:	strd	r0, [r8, #240]	; 0xf0
   26bd0:	mov	r0, r2
   26bd4:	mov	r1, r3
   26bd8:	bl	28b70 <Battery_getData@@Base+0xa64>
   26bdc:	ldrd	r2, [sp, #72]	; 0x48
   26be0:	vmov	d12, r0, r1
   26be4:	ldrd	r0, [r4, #-8]
   26be8:	subs	r2, r2, r0
   26bec:	sbc	r3, r3, r1
   26bf0:	mov	r0, r2
   26bf4:	mov	r1, r3
   26bf8:	bl	28b70 <Battery_getData@@Base+0xa64>
   26bfc:	ldrd	r2, [sp, #72]	; 0x48
   26c00:	vmov	d7, r0, r1
   26c04:	vdiv.f64	d6, d7, d11
   26c08:	vdiv.f64	d7, d12, d6
   26c0c:	vstr	d7, [r8, #280]	; 0x118
   26c10:	strd	r2, [r4, #-8]
   26c14:	b	26a48 <Process_isThread@@Base+0x1650>
   26c18:	ldr	r1, [pc, #-3020]	; 26054 <Process_isThread@@Base+0xc5c>
   26c1c:	mov	r2, #22
   26c20:	add	r0, r4, #1
   26c24:	bl	154e0 <strncmp@plt>
   26c28:	subs	r1, r0, #0
   26c2c:	bne	26a48 <Process_isThread@@Base+0x1650>
   26c30:	add	r0, r4, #23
   26c34:	mov	r2, #10
   26c38:	bl	15378 <strtoull@plt>
   26c3c:	add	r3, r8, #256	; 0x100
   26c40:	strd	r0, [r3]
   26c44:	b	26a48 <Process_isThread@@Base+0x1650>
   26c48:	str	r7, [sp, #16]
   26c4c:	b	25d48 <Process_isThread@@Base+0x950>
   26c50:	mov	r0, r8
   26c54:	bl	25388 <LinuxProcess_updateIOPriority@@Base>
   26c58:	b	265a8 <Process_isThread@@Base+0x11b0>
   26c5c:	mvn	r1, #0
   26c60:	ldr	r3, [sp, #88]	; 0x58
   26c64:	add	r2, sp, #372	; 0x174
   26c68:	str	r1, [r8, #40]	; 0x28
   26c6c:	add	r0, r8, #28
   26c70:	add	r1, r8, #32
   26c74:	bl	259ec <Process_isThread@@Base+0x5f4>
   26c78:	ldrb	r3, [r8, #136]	; 0x88
   26c7c:	cmp	r3, #0
   26c80:	ldrbeq	r2, [r8, #45]	; 0x2d
   26c84:	beq	26978 <Process_isThread@@Base+0x1580>
   26c88:	ldr	r2, [sp, #24]
   26c8c:	ldr	r3, [r2, #52]	; 0x34
   26c90:	add	r3, r3, #1
   26c94:	str	r3, [r2, #52]	; 0x34
   26c98:	ldrb	r2, [r8, #45]	; 0x2d
   26c9c:	ldr	r1, [sp, #24]
   26ca0:	cmp	r2, #82	; 0x52
   26ca4:	moveq	r2, r1
   26ca8:	ldr	r3, [r1, #40]	; 0x28
   26cac:	add	r3, r3, #1
   26cb0:	str	r3, [r1, #40]	; 0x28
   26cb4:	ldreq	r3, [r2, #44]	; 0x2c
   26cb8:	addeq	r3, r3, #1
   26cbc:	streq	r3, [r2, #44]	; 0x2c
   26cc0:	mov	r3, #1
   26cc4:	strb	r3, [r8, #44]	; 0x2c
   26cc8:	b	25c44 <Process_isThread@@Base+0x84c>
   26ccc:	mov	r3, #0
   26cd0:	str	r3, [r8, #80]	; 0x50
   26cd4:	b	2662c <Process_isThread@@Base+0x1234>
   26cd8:	ldr	r2, [sp, #16]
   26cdc:	ldr	r3, [pc, #-3212]	; 26058 <Process_isThread@@Base+0xc60>
   26ce0:	str	r2, [sp, #8]
   26ce4:	ldr	r2, [sp, #28]
   26ce8:	add	r6, sp, #1296	; 0x510
   26cec:	str	r2, [sp, #4]
   26cf0:	str	r3, [sp]
   26cf4:	mov	r0, r6
   26cf8:	mov	r3, #129	; 0x81
   26cfc:	mov	r2, #1
   26d00:	mov	r1, #128	; 0x80
   26d04:	bl	15510 <__snprintf_chk@plt>
   26d08:	cmp	r0, #127	; 0x7f
   26d0c:	bhi	27234 <Process_isThread@@Base+0x1e3c>
   26d10:	mov	r0, r6
   26d14:	ldr	r1, [pc, #-3256]	; 26064 <Process_isThread@@Base+0xc6c>
   26d18:	bl	14f70 <fopen@plt>
   26d1c:	subs	r4, r0, #0
   26d20:	beq	2692c <Process_isThread@@Base+0x1534>
   26d24:	add	r0, sp, #1808	; 0x710
   26d28:	mov	r2, r4
   26d2c:	mov	r1, #512	; 0x200
   26d30:	add	r0, r0, #4
   26d34:	bl	14fb8 <fgets@plt>
   26d38:	cmp	r0, #0
   26d3c:	beq	26d60 <Process_isThread@@Base+0x1968>
   26d40:	add	r0, sp, #1808	; 0x710
   26d44:	mov	r2, r9
   26d48:	add	r0, r0, #4
   26d4c:	ldr	r1, [pc, #-3320]	; 2605c <Process_isThread@@Base+0xc64>
   26d50:	bl	15468 <sscanf@plt>
   26d54:	cmp	r0, #0
   26d58:	ldrgt	r3, [sp, #152]	; 0x98
   26d5c:	strgt	r3, [r8, #312]	; 0x138
   26d60:	mov	r0, r4
   26d64:	bl	153fc <fclose@plt>
   26d68:	b	2692c <Process_isThread@@Base+0x1534>
   26d6c:	ldr	r2, [sp, #16]
   26d70:	ldr	r3, [pc, #-3352]	; 26060 <Process_isThread@@Base+0xc68>
   26d74:	str	r2, [sp, #8]
   26d78:	ldr	r2, [sp, #28]
   26d7c:	add	r0, sp, #1152	; 0x480
   26d80:	str	r2, [sp, #4]
   26d84:	str	r3, [sp]
   26d88:	add	r0, r0, #12
   26d8c:	mov	r3, #129	; 0x81
   26d90:	mov	r2, #1
   26d94:	mov	r1, #128	; 0x80
   26d98:	bl	15510 <__snprintf_chk@plt>
   26d9c:	cmp	r0, #127	; 0x7f
   26da0:	bhi	27234 <Process_isThread@@Base+0x1e3c>
   26da4:	add	r0, sp, #1152	; 0x480
   26da8:	add	r0, r0, #12
   26dac:	ldr	r1, [pc, #-3408]	; 26064 <Process_isThread@@Base+0xc6c>
   26db0:	bl	14f70 <fopen@plt>
   26db4:	subs	r5, r0, #0
   26db8:	beq	26e80 <Process_isThread@@Base+0x1a88>
   26dbc:	add	r6, sp, #2832	; 0xb10
   26dc0:	add	r6, r6, #8
   26dc4:	mov	r3, #0
   26dc8:	strb	r3, [r6, #-1544]!	; 0xfffff9f8
   26dcc:	mov	r4, #512	; 0x200
   26dd0:	ldr	r7, [sp, #16]
   26dd4:	b	26e30 <Process_isThread@@Base+0x1a38>
   26dd8:	add	r0, sp, #1808	; 0x710
   26ddc:	mov	r2, r5
   26de0:	mov	r1, #512	; 0x200
   26de4:	add	r0, r0, #4
   26de8:	bl	14fb8 <fgets@plt>
   26dec:	cmp	r0, #0
   26df0:	beq	26e58 <Process_isThread@@Base+0x1a60>
   26df4:	add	r0, sp, #1808	; 0x710
   26df8:	mov	r1, #58	; 0x3a
   26dfc:	add	r0, r0, #4
   26e00:	bl	152c4 <strchr@plt>
   26e04:	cmp	r0, #0
   26e08:	beq	26e58 <Process_isThread@@Base+0x1a60>
   26e0c:	ldr	r3, [pc, #-3500]	; 26068 <Process_isThread@@Base+0xc70>
   26e10:	str	r0, [sp, #4]
   26e14:	str	r3, [sp]
   26e18:	mov	r1, r4
   26e1c:	ldr	r3, [pc, #-3512]	; 2606c <Process_isThread@@Base+0xc74>
   26e20:	mov	r2, #1
   26e24:	mov	r0, r6
   26e28:	bl	15510 <__snprintf_chk@plt>
   26e2c:	sub	r4, r4, r0
   26e30:	mov	r0, r5
   26e34:	bl	1527c <feof@plt>
   26e38:	cmp	r4, #0
   26e3c:	movle	r3, #0
   26e40:	movgt	r3, #1
   26e44:	cmp	r0, #0
   26e48:	moveq	r0, r3
   26e4c:	movne	r0, #0
   26e50:	cmp	r0, #0
   26e54:	bne	26dd8 <Process_isThread@@Base+0x19e0>
   26e58:	mov	r0, r5
   26e5c:	str	r7, [sp, #16]
   26e60:	bl	153fc <fclose@plt>
   26e64:	ldr	r0, [r8, #308]	; 0x134
   26e68:	bl	14fa0 <free@plt>
   26e6c:	mov	r0, r6
   26e70:	bl	24034 <xStrdup@@Base>
   26e74:	ldr	r3, [fp, #32]
   26e78:	str	r0, [r8, #308]	; 0x134
   26e7c:	b	26924 <Process_isThread@@Base+0x152c>
   26e80:	ldr	r0, [pc, #-3608]	; 26070 <Process_isThread@@Base+0xc78>
   26e84:	bl	24034 <xStrdup@@Base>
   26e88:	ldr	r3, [fp, #32]
   26e8c:	str	r0, [r8, #308]	; 0x134
   26e90:	b	26924 <Process_isThread@@Base+0x152c>
   26e94:	ldr	r0, [r5]
   26e98:	bl	15078 <strdup@plt>
   26e9c:	b	26598 <Process_isThread@@Base+0x11a0>
   26ea0:	ldr	r1, [pc, #-3636]	; 26074 <Process_isThread@@Base+0xc7c>
   26ea4:	mov	r2, #5
   26ea8:	add	r0, r4, #2
   26eac:	bl	154e0 <strncmp@plt>
   26eb0:	subs	r1, r0, #0
   26eb4:	bne	26ad0 <Process_isThread@@Base+0x16d8>
   26eb8:	add	r0, r4, #7
   26ebc:	mov	r2, #10
   26ec0:	bl	15378 <strtoull@plt>
   26ec4:	strd	r0, [r8, #216]	; 0xd8
   26ec8:	b	26a48 <Process_isThread@@Base+0x1650>
   26ecc:	ldr	r1, [pc, #-3680]	; 26074 <Process_isThread@@Base+0xc7c>
   26ed0:	mov	r2, #5
   26ed4:	add	r0, r4, #2
   26ed8:	bl	154e0 <strncmp@plt>
   26edc:	subs	r1, r0, #0
   26ee0:	bne	26b98 <Process_isThread@@Base+0x17a0>
   26ee4:	add	r0, r4, #7
   26ee8:	mov	r2, #10
   26eec:	bl	15378 <strtoull@plt>
   26ef0:	strd	r0, [r8, #208]	; 0xd0
   26ef4:	b	26a48 <Process_isThread@@Base+0x1650>
   26ef8:	ldr	r1, [pc, #-3720]	; 26078 <Process_isThread@@Base+0xc80>
   26efc:	mov	r2, #6
   26f00:	mov	r0, r6
   26f04:	bl	154e0 <strncmp@plt>
   26f08:	subs	r1, r0, #0
   26f0c:	bne	26b60 <Process_isThread@@Base+0x1768>
   26f10:	add	r0, r4, #7
   26f14:	mov	r2, #10
   26f18:	bl	15378 <strtoull@plt>
   26f1c:	strd	r0, [r8, #224]	; 0xe0
   26f20:	b	26a48 <Process_isThread@@Base+0x1650>
   26f24:	str	r6, [sp]
   26f28:	ldr	r3, [sp, #92]	; 0x5c
   26f2c:	ldr	r2, [pc, #-3768]	; 2607c <Process_isThread@@Base+0xc84>
   26f30:	mov	r1, #1
   26f34:	mov	r0, r9
   26f38:	bl	151a4 <__asprintf_chk@plt>
   26f3c:	ldr	r0, [sp, #152]	; 0x98
   26f40:	b	26598 <Process_isThread@@Base+0x11a0>
   26f44:	mov	r0, #2
   26f48:	bl	1509c <sysconf@plt>
   26f4c:	mov	r1, r5
   26f50:	vmov	s15, r0
   26f54:	mov	r0, r4
   26f58:	vcvt.f64.s32	d13, s15
   26f5c:	vstr	d13, [r6, #-8]
   26f60:	bl	28b70 <Battery_getData@@Base+0xa64>
   26f64:	vdiv.f64	d12, d10, d13
   26f68:	vmov	d7, r0, r1
   26f6c:	vmul.f64	d7, d7, d12
   26f70:	vmul.f64	d7, d7, d9
   26f74:	vmov	r0, r1, d7
   26f78:	bl	28d30 <Battery_getData@@Base+0xc24>
   26f7c:	ldr	r3, [sp, #152]	; 0x98
   26f80:	mov	r2, #10
   26f84:	add	r3, r3, #1
   26f88:	strd	r0, [r8, #152]	; 0x98
   26f8c:	mov	r0, r3
   26f90:	mov	r1, r9
   26f94:	str	r3, [sp, #152]	; 0x98
   26f98:	bl	15378 <strtoull@plt>
   26f9c:	vcmp.f64	d13, #0.0
   26fa0:	vmrs	APSR_nzcv, fpscr
   26fa4:	mov	r4, r0
   26fa8:	mov	r5, r1
   26fac:	bne	27250 <Process_isThread@@Base+0x1e58>
   26fb0:	mov	r0, #2
   26fb4:	bl	1509c <sysconf@plt>
   26fb8:	mov	r1, r5
   26fbc:	vmov	s15, r0
   26fc0:	mov	r0, r4
   26fc4:	vcvt.f64.s32	d12, s15
   26fc8:	vstr	d12, [r6, #-8]
   26fcc:	bl	28b70 <Battery_getData@@Base+0xa64>
   26fd0:	vdiv.f64	d13, d10, d12
   26fd4:	vmov	d7, r0, r1
   26fd8:	vmul.f64	d7, d7, d13
   26fdc:	vmul.f64	d7, d7, d9
   26fe0:	vmov	r0, r1, d7
   26fe4:	bl	28d30 <Battery_getData@@Base+0xc24>
   26fe8:	ldr	r3, [sp, #152]	; 0x98
   26fec:	mov	r2, #10
   26ff0:	add	r3, r3, #1
   26ff4:	strd	r0, [r8, #160]	; 0xa0
   26ff8:	mov	r0, r3
   26ffc:	mov	r1, r9
   27000:	str	r3, [sp, #152]	; 0x98
   27004:	bl	15378 <strtoull@plt>
   27008:	vcmp.f64	d12, #0.0
   2700c:	vmrs	APSR_nzcv, fpscr
   27010:	mov	r4, r0
   27014:	mov	r5, r1
   27018:	bne	262b4 <Process_isThread@@Base+0xebc>
   2701c:	mov	r0, #2
   27020:	bl	1509c <sysconf@plt>
   27024:	mov	r1, r5
   27028:	vmov	s15, r0
   2702c:	mov	r0, r4
   27030:	vcvt.f64.s32	d12, s15
   27034:	vstr	d12, [r6, #-8]
   27038:	bl	28b70 <Battery_getData@@Base+0xa64>
   2703c:	vdiv.f64	d13, d10, d12
   27040:	vmov	d7, r0, r1
   27044:	vmul.f64	d7, d7, d13
   27048:	vmul.f64	d7, d7, d9
   2704c:	vmov	r0, r1, d7
   27050:	bl	28d30 <Battery_getData@@Base+0xc24>
   27054:	ldr	r3, [sp, #152]	; 0x98
   27058:	mov	r2, #10
   2705c:	add	r3, r3, #1
   27060:	strd	r0, [r8, #168]	; 0xa8
   27064:	mov	r0, r3
   27068:	mov	r1, r9
   2706c:	str	r3, [sp, #152]	; 0x98
   27070:	bl	15378 <strtoull@plt>
   27074:	vcmp.f64	d12, #0.0
   27078:	vmrs	APSR_nzcv, fpscr
   2707c:	mov	r4, r0
   27080:	mov	r5, r1
   27084:	bne	262fc <Process_isThread@@Base+0xf04>
   27088:	mov	r0, #2
   2708c:	bl	1509c <sysconf@plt>
   27090:	vmov	s15, r0
   27094:	vcvt.f64.s32	d7, s15
   27098:	vdiv.f64	d13, d10, d7
   2709c:	vstr	d7, [r6, #-8]
   270a0:	b	262fc <Process_isThread@@Base+0xf04>
   270a4:	mvn	r1, #0
   270a8:	add	r2, sp, #372	; 0x174
   270ac:	str	r1, [r8, #40]	; 0x28
   270b0:	ldr	r3, [sp, #88]	; 0x58
   270b4:	add	r1, r8, #32
   270b8:	add	r0, r8, #28
   270bc:	bl	259ec <Process_isThread@@Base+0x5f4>
   270c0:	ldrb	r2, [r8, #45]	; 0x2d
   270c4:	b	26c9c <Process_isThread@@Base+0x18a4>
   270c8:	ldr	r2, [sp, #16]
   270cc:	ldr	r3, [pc, #444]	; 27290 <Process_isThread@@Base+0x1e98>
   270d0:	str	r2, [sp, #8]
   270d4:	ldr	r2, [sp, #28]
   270d8:	add	r0, sp, #1024	; 0x400
   270dc:	str	r2, [sp, #4]
   270e0:	str	r3, [sp]
   270e4:	add	r0, r0, #8
   270e8:	mov	r3, #129	; 0x81
   270ec:	mov	r2, #1
   270f0:	mov	r1, #128	; 0x80
   270f4:	bl	15510 <__snprintf_chk@plt>
   270f8:	cmp	r0, #127	; 0x7f
   270fc:	bhi	27234 <Process_isThread@@Base+0x1e3c>
   27100:	add	r0, sp, #1024	; 0x400
   27104:	add	r0, r0, #8
   27108:	ldr	r1, [pc, #388]	; 27294 <Process_isThread@@Base+0x1e9c>
   2710c:	bl	14f70 <fopen@plt>
   27110:	subs	r4, r0, #0
   27114:	beq	268f4 <Process_isThread@@Base+0x14fc>
   27118:	mov	r3, #0
   2711c:	str	r3, [r8, #304]	; 0x130
   27120:	ldr	r5, [pc, #368]	; 27298 <Process_isThread@@Base+0x1ea0>
   27124:	ldr	r6, [pc, #368]	; 2729c <Process_isThread@@Base+0x1ea4>
   27128:	ldr	r7, [sp, #16]
   2712c:	b	2714c <Process_isThread@@Base+0x1d54>
   27130:	add	r0, sp, #1808	; 0x710
   27134:	mov	r2, #5
   27138:	mov	r1, r5
   2713c:	add	r0, r0, #4
   27140:	bl	154e0 <strncmp@plt>
   27144:	cmp	r0, #0
   27148:	beq	27178 <Process_isThread@@Base+0x1d80>
   2714c:	add	r0, sp, #1808	; 0x710
   27150:	mov	r2, r4
   27154:	mov	r1, #512	; 0x200
   27158:	add	r0, r0, #4
   2715c:	bl	14fb8 <fgets@plt>
   27160:	cmp	r0, #0
   27164:	bne	27130 <Process_isThread@@Base+0x1d38>
   27168:	mov	r0, r4
   2716c:	str	r7, [sp, #16]
   27170:	bl	153fc <fclose@plt>
   27174:	b	268f4 <Process_isThread@@Base+0x14fc>
   27178:	add	r0, sp, #1808	; 0x710
   2717c:	mov	r2, r9
   27180:	mov	r1, r6
   27184:	add	r0, r0, #4
   27188:	bl	15468 <sscanf@plt>
   2718c:	cmp	r0, #0
   27190:	ldrgt	r3, [sp, #152]	; 0x98
   27194:	strgt	r3, [r8, #304]	; 0x130
   27198:	b	2714c <Process_isThread@@Base+0x1d54>
   2719c:	ldr	r3, [r8, #40]	; 0x28
   271a0:	cmp	r3, #0
   271a4:	beq	26c5c <Process_isThread@@Base+0x1864>
   271a8:	ldr	r1, [sp, #24]
   271ac:	ldr	r2, [r1, #48]	; 0x30
   271b0:	ldr	r3, [r1, #40]	; 0x28
   271b4:	add	r2, r2, #1
   271b8:	add	r3, r3, #1
   271bc:	str	r2, [r1, #48]	; 0x30
   271c0:	str	r3, [r1, #40]	; 0x28
   271c4:	b	26cc0 <Process_isThread@@Base+0x18c8>
   271c8:	ldr	r3, [sp, #16]
   271cc:	add	r0, sp, #1808	; 0x710
   271d0:	str	r3, [sp, #8]
   271d4:	ldr	r3, [sp, #28]
   271d8:	mov	r2, #1
   271dc:	str	r3, [sp, #4]
   271e0:	ldr	r3, [pc, #184]	; 272a0 <Process_isThread@@Base+0x1ea8>
   271e4:	mov	r1, #128	; 0x80
   271e8:	str	r3, [sp]
   271ec:	add	r0, r0, #4
   271f0:	mov	r3, #129	; 0x81
   271f4:	bl	15510 <__snprintf_chk@plt>
   271f8:	cmp	r0, #127	; 0x7f
   271fc:	bhi	27234 <Process_isThread@@Base+0x1e3c>
   27200:	add	r0, sp, #1808	; 0x710
   27204:	ldr	r1, [pc, #136]	; 27294 <Process_isThread@@Base+0x1e9c>
   27208:	add	r0, r0, #4
   2720c:	bl	14f70 <fopen@plt>
   27210:	subs	r4, r0, #0
   27214:	beq	268e8 <Process_isThread@@Base+0x14f0>
   27218:	add	r3, r8, #296	; 0x128
   2721c:	add	r2, r8, #300	; 0x12c
   27220:	ldr	r1, [pc, #124]	; 272a4 <Process_isThread@@Base+0x1eac>
   27224:	bl	15354 <fscanf@plt>
   27228:	mov	r0, r4
   2722c:	bl	153fc <fclose@plt>
   27230:	b	268e8 <Process_isThread@@Base+0x14f0>
   27234:	mov	r0, #1
   27238:	bl	15030 <curs_set@plt>
   2723c:	bl	14f28 <endwin@plt>
   27240:	mov	r1, #0
   27244:	mov	r0, #1
   27248:	bl	15114 <err@plt>
   2724c:	bl	15084 <__stack_chk_fail@plt>
   27250:	bl	28b70 <Battery_getData@@Base+0xa64>
   27254:	vmov.f64	d13, d12
   27258:	vmov	d7, r0, r1
   2725c:	vmul.f64	d12, d7, d12
   27260:	vmul.f64	d7, d12, d9
   27264:	vmov	r0, r1, d7
   27268:	bl	28d30 <Battery_getData@@Base+0xc24>
   2726c:	ldr	r3, [sp, #152]	; 0x98
   27270:	mov	r2, #10
   27274:	add	r3, r3, #1
   27278:	strd	r0, [r8, #160]	; 0xa0
   2727c:	mov	r0, r3
   27280:	mov	r1, r9
   27284:	str	r3, [sp, #152]	; 0x98
   27288:	bl	15378 <strtoull@plt>
   2728c:	b	262bc <Process_isThread@@Base+0xec4>
   27290:	andeq	ip, r2, r4, asr #12
   27294:			; <UNDEFINED> instruction: 0x0002b1b0
   27298:	andeq	ip, r2, r4, asr r6
   2729c:	andeq	ip, r2, ip, asr r6
   272a0:	ldrdeq	ip, [r2], -r4
   272a4:	andeq	ip, r2, r8, lsl #10

000272a8 <ProcessList_new@@Base>:
   272a8:	ldr	r3, [pc, #896]	; 27630 <ProcessList_new@@Base+0x388>
   272ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   272b0:	sub	sp, sp, #540	; 0x21c
   272b4:	ldr	r3, [r3]
   272b8:	mov	r4, r0
   272bc:	mov	r5, r1
   272c0:	mov	r0, #1
   272c4:	mov	r1, #144	; 0x90
   272c8:	mov	r6, r2
   272cc:	str	r3, [sp, #532]	; 0x214
   272d0:	bl	23fd8 <xCalloc@@Base>
   272d4:	mov	r3, r5
   272d8:	mov	r2, r4
   272dc:	ldr	r1, [pc, #848]	; 27634 <ProcessList_new@@Base+0x38c>
   272e0:	str	r6, [sp]
   272e4:	str	r0, [sp, #8]
   272e8:	bl	1d43c <ProcessList_init@@Base>
   272ec:	mov	r1, #0
   272f0:	ldr	r0, [pc, #832]	; 27638 <ProcessList_new@@Base+0x390>
   272f4:	bl	15234 <open@plt>
   272f8:	cmn	r0, #1
   272fc:	beq	27510 <ProcessList_new@@Base+0x268>
   27300:	mov	r4, #0
   27304:	mov	r8, r0
   27308:	mov	r5, r4
   2730c:	mov	r6, #2048	; 0x800
   27310:	b	2731c <ProcessList_new@@Base+0x74>
   27314:	add	r4, r4, r0
   27318:	add	r6, r6, #2048	; 0x800
   2731c:	mov	r0, r5
   27320:	mov	r1, r6
   27324:	bl	150c0 <realloc@plt>
   27328:	mov	r2, #2048	; 0x800
   2732c:	add	r7, r0, r4
   27330:	mov	r5, r0
   27334:	mov	r1, r7
   27338:	mov	r0, r8
   2733c:	bl	25430 <Process_isThread@@Base+0x38>
   27340:	cmp	r0, #0
   27344:	bgt	27314 <ProcessList_new@@Base+0x6c>
   27348:	mov	r6, #0
   2734c:	mov	r0, r8
   27350:	strb	r6, [r7]
   27354:	bl	154f8 <close@plt>
   27358:	cmp	r4, r6
   2735c:	beq	275d4 <ProcessList_new@@Base+0x32c>
   27360:	mov	r0, #160	; 0xa0
   27364:	bl	151c8 <malloc@plt>
   27368:	mov	r8, r6
   2736c:	mov	r4, r5
   27370:	mov	r3, #10
   27374:	str	r3, [sp, #12]
   27378:	mov	r9, r0
   2737c:	ldrb	r7, [r4]
   27380:	cmp	r7, #0
   27384:	beq	274d0 <ProcessList_new@@Base+0x228>
   27388:	mov	r0, r4
   2738c:	mov	r1, #32
   27390:	bl	152c4 <strchr@plt>
   27394:	ldrb	r3, [r0]
   27398:	mov	r4, r0
   2739c:	cmp	r3, #32
   273a0:	bne	273b0 <ProcessList_new@@Base+0x108>
   273a4:	ldrb	r3, [r4, #1]!
   273a8:	cmp	r3, #32
   273ac:	beq	273a4 <ProcessList_new@@Base+0xfc>
   273b0:	mov	r1, #32
   273b4:	mov	r0, r4
   273b8:	bl	152c4 <strchr@plt>
   273bc:	mov	fp, r0
   273c0:	mov	r7, r0
   273c4:	strb	r8, [fp], #1
   273c8:	mov	r0, r4
   273cc:	bl	15078 <strdup@plt>
   273d0:	ldrb	r3, [r7, #1]
   273d4:	add	r7, r9, r6, lsl #4
   273d8:	cmp	r3, #32
   273dc:	str	r0, [r9, r6, lsl #4]
   273e0:	bne	273f0 <ProcessList_new@@Base+0x148>
   273e4:	ldrb	r3, [fp, #1]!
   273e8:	cmp	r3, #32
   273ec:	beq	273e4 <ProcessList_new@@Base+0x13c>
   273f0:	mov	r1, #32
   273f4:	mov	r0, fp
   273f8:	bl	152c4 <strchr@plt>
   273fc:	mov	r2, #10
   27400:	mov	r1, #0
   27404:	mov	r4, r0
   27408:	mov	sl, r0
   2740c:	strb	r8, [r4], #1
   27410:	mov	r0, fp
   27414:	bl	14f4c <strtol@plt>
   27418:	ldrb	r3, [sl, #1]
   2741c:	cmp	r3, #32
   27420:	str	r0, [r7, #4]
   27424:	bne	27434 <ProcessList_new@@Base+0x18c>
   27428:	ldrb	r3, [r4, #1]!
   2742c:	cmp	r3, #32
   27430:	beq	27428 <ProcessList_new@@Base+0x180>
   27434:	sub	r2, r3, #48	; 0x30
   27438:	cmp	r2, #9
   2743c:	mov	r2, r4
   27440:	bhi	27454 <ProcessList_new@@Base+0x1ac>
   27444:	ldrb	r3, [r2, #1]!
   27448:	sub	r1, r3, #48	; 0x30
   2744c:	cmp	r1, #9
   27450:	bls	27444 <ProcessList_new@@Base+0x19c>
   27454:	cmp	r3, #45	; 0x2d
   27458:	strb	r8, [r2]
   2745c:	add	fp, r2, #1
   27460:	beq	275e0 <ProcessList_new@@Base+0x338>
   27464:	mov	r2, #10
   27468:	mov	r1, #0
   2746c:	mov	r0, r4
   27470:	bl	14f4c <strtol@plt>
   27474:	mov	r2, #10
   27478:	mov	r1, #0
   2747c:	str	r0, [r7, #8]
   27480:	mov	r0, r4
   27484:	bl	14f4c <strtol@plt>
   27488:	str	r0, [r7, #12]
   2748c:	mov	r0, fp
   27490:	mov	r1, #10
   27494:	bl	152c4 <strchr@plt>
   27498:	ldr	r3, [sp, #12]
   2749c:	add	r6, r6, #1
   274a0:	cmp	r6, r3
   274a4:	add	r4, r0, #1
   274a8:	bne	2737c <ProcessList_new@@Base+0xd4>
   274ac:	add	r3, r6, #10
   274b0:	mov	r0, r9
   274b4:	lsl	r1, r3, #4
   274b8:	str	r3, [sp, #12]
   274bc:	bl	150c0 <realloc@plt>
   274c0:	ldrb	r7, [r4]
   274c4:	cmp	r7, #0
   274c8:	mov	r9, r0
   274cc:	bne	27388 <ProcessList_new@@Base+0xe0>
   274d0:	add	r4, r6, #1
   274d4:	mov	r0, r5
   274d8:	lsl	r4, r4, #4
   274dc:	bl	14fa0 <free@plt>
   274e0:	mov	r1, r4
   274e4:	mov	r0, r9
   274e8:	bl	150c0 <realloc@plt>
   274ec:	ldr	r3, [pc, #328]	; 2763c <ProcessList_new@@Base+0x394>
   274f0:	mov	r1, r6
   274f4:	mov	r2, #16
   274f8:	add	r4, r0, r4
   274fc:	mov	r5, r0
   27500:	str	r7, [r4, #-16]
   27504:	bl	1548c <qsort@plt>
   27508:	ldr	r3, [sp, #8]
   2750c:	str	r5, [r3, #140]	; 0x8c
   27510:	ldr	r1, [pc, #296]	; 27640 <ProcessList_new@@Base+0x398>
   27514:	ldr	r0, [pc, #296]	; 27644 <ProcessList_new@@Base+0x39c>
   27518:	bl	14f70 <fopen@plt>
   2751c:	subs	r5, r0, #0
   27520:	mvnne	r4, #0
   27524:	ldrne	r6, [pc, #284]	; 27648 <ProcessList_new@@Base+0x3a0>
   27528:	beq	27628 <ProcessList_new@@Base+0x380>
   2752c:	mov	r2, r5
   27530:	mov	r1, #512	; 0x200
   27534:	add	r0, sp, #16
   27538:	bl	14fb8 <fgets@plt>
   2753c:	mov	r2, #3
   27540:	mov	r1, r6
   27544:	add	r0, sp, #16
   27548:	bl	154e0 <strncmp@plt>
   2754c:	add	r4, r4, #1
   27550:	cmp	r0, #0
   27554:	beq	2752c <ProcessList_new@@Base+0x284>
   27558:	mov	r0, r5
   2755c:	bl	153fc <fclose@plt>
   27560:	cmp	r4, #2
   27564:	ldr	r5, [sp, #8]
   27568:	movge	r3, r4
   2756c:	movlt	r3, #2
   27570:	mov	r1, #192	; 0xc0
   27574:	mov	r0, r4
   27578:	sub	r3, r3, #1
   2757c:	str	r3, [r5, #128]	; 0x80
   27580:	bl	23fd8 <xCalloc@@Base>
   27584:	cmp	r4, #0
   27588:	str	r0, [r5, #136]	; 0x88
   2758c:	beq	275b4 <ProcessList_new@@Base+0x30c>
   27590:	add	r4, r4, r4, lsl #1
   27594:	mov	r2, #1
   27598:	add	r4, r0, r4, lsl #6
   2759c:	mov	r3, #0
   275a0:	strd	r2, [r0]
   275a4:	strd	r2, [r0, #96]	; 0x60
   275a8:	add	r0, r0, #192	; 0xc0
   275ac:	cmp	r4, r0
   275b0:	bne	275a0 <ProcessList_new@@Base+0x2f8>
   275b4:	ldr	r3, [pc, #116]	; 27630 <ProcessList_new@@Base+0x388>
   275b8:	ldr	r2, [sp, #532]	; 0x214
   275bc:	ldr	r0, [sp, #8]
   275c0:	ldr	r3, [r3]
   275c4:	cmp	r2, r3
   275c8:	bne	27624 <ProcessList_new@@Base+0x37c>
   275cc:	add	sp, sp, #540	; 0x21c
   275d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   275d4:	mov	r0, r5
   275d8:	bl	14fa0 <free@plt>
   275dc:	b	27510 <ProcessList_new@@Base+0x268>
   275e0:	mov	r2, #10
   275e4:	mov	r0, r4
   275e8:	mov	r1, #0
   275ec:	bl	14f4c <strtol@plt>
   275f0:	mov	r1, #32
   275f4:	str	r0, [r7, #8]
   275f8:	mov	r0, fp
   275fc:	bl	152c4 <strchr@plt>
   27600:	mov	r2, #10
   27604:	mov	r1, #0
   27608:	mov	r4, r0
   2760c:	mov	r0, fp
   27610:	strb	r8, [r4], #1
   27614:	bl	14f4c <strtol@plt>
   27618:	mov	fp, r4
   2761c:	str	r0, [r7, #12]
   27620:	b	2748c <ProcessList_new@@Base+0x1e4>
   27624:	bl	15084 <__stack_chk_fail@plt>
   27628:	ldr	r0, [pc, #28]	; 2764c <ProcessList_new@@Base+0x3a4>
   2762c:	bl	17714 <CRT_fatalError@@Base>
   27630:			; <UNDEFINED> instruction: 0x0003ccb8
   27634:	muleq	r3, r4, pc	; <UNPREDICTABLE>
   27638:	muleq	r2, r0, r6
   2763c:	andeq	r5, r2, r0, lsl r4
   27640:			; <UNDEFINED> instruction: 0x0002b1b0
   27644:	andeq	ip, r2, r0, lsr #7
   27648:	andeq	ip, r2, r4, lsr #13
   2764c:	muleq	r2, r4, r3

00027650 <ProcessList_delete@@Base>:
   27650:	push	{r4, r5, r6, lr}
   27654:	mov	r5, r0
   27658:	bl	1d4b0 <ProcessList_done@@Base>
   2765c:	ldr	r0, [r5, #136]	; 0x88
   27660:	bl	14fa0 <free@plt>
   27664:	ldr	r3, [r5, #140]	; 0x8c
   27668:	cmp	r3, #0
   2766c:	beq	276a0 <ProcessList_delete@@Base+0x50>
   27670:	ldr	r0, [r3]
   27674:	cmp	r0, #0
   27678:	beq	27698 <ProcessList_delete@@Base+0x48>
   2767c:	mov	r4, #16
   27680:	bl	14fa0 <free@plt>
   27684:	ldr	r3, [r5, #140]	; 0x8c
   27688:	ldr	r0, [r3, r4]
   2768c:	add	r4, r4, #16
   27690:	cmp	r0, #0
   27694:	bne	27680 <ProcessList_delete@@Base+0x30>
   27698:	mov	r0, r3
   2769c:	bl	14fa0 <free@plt>
   276a0:	mov	r0, r5
   276a4:	pop	{r4, r5, r6, lr}
   276a8:	b	14fa0 <free@plt>

000276ac <ProcessList_goThroughEntries@@Base>:
   276ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   276b0:	vpush	{d8}
   276b4:	ldr	r9, [pc, #820]	; 279f0 <ProcessList_goThroughEntries@@Base+0x344>
   276b8:	mov	r8, r0
   276bc:	mov	r2, #0
   276c0:	sub	sp, sp, #172	; 0xac
   276c4:	ldr	r0, [r9]
   276c8:	mov	r3, #0
   276cc:	str	r0, [sp, #164]	; 0xa4
   276d0:	ldr	r1, [pc, #796]	; 279f4 <ProcessList_goThroughEntries@@Base+0x348>
   276d4:	ldr	r0, [pc, #796]	; 279f8 <ProcessList_goThroughEntries@@Base+0x34c>
   276d8:	strd	r2, [sp, #8]
   276dc:	strd	r2, [sp, #16]
   276e0:	strd	r2, [sp, #24]
   276e4:	bl	14f70 <fopen@plt>
   276e8:	subs	fp, r0, #0
   276ec:	beq	279e8 <ProcessList_goThroughEntries@@Base+0x33c>
   276f0:	ldr	r7, [pc, #772]	; 279fc <ProcessList_goThroughEntries@@Base+0x350>
   276f4:	ldr	r4, [pc, #772]	; 27a00 <ProcessList_goThroughEntries@@Base+0x354>
   276f8:	ldr	r6, [pc, #772]	; 27a04 <ProcessList_goThroughEntries@@Base+0x358>
   276fc:	ldr	r5, [pc, #772]	; 27a08 <ProcessList_goThroughEntries@@Base+0x35c>
   27700:	mov	r2, fp
   27704:	mov	r1, #128	; 0x80
   27708:	add	r0, sp, #36	; 0x24
   2770c:	bl	14fb8 <fgets@plt>
   27710:	subs	sl, r0, #0
   27714:	beq	27870 <ProcessList_goThroughEntries@@Base+0x1c4>
   27718:	ldrb	r3, [sp, #36]	; 0x24
   2771c:	sub	r3, r3, #66	; 0x42
   27720:	cmp	r3, #17
   27724:	ldrls	pc, [pc, r3, lsl #2]
   27728:	b	27700 <ProcessList_goThroughEntries@@Base+0x54>
   2772c:	andeq	r7, r2, r4, asr #16
   27730:	andeq	r7, r2, r8, lsl r8
   27734:	andeq	r7, r2, r0, lsl #14
   27738:	andeq	r7, r2, r0, lsl #14
   2773c:	andeq	r7, r2, r0, lsl #14
   27740:	andeq	r7, r2, r0, lsl #14
   27744:	andeq	r7, r2, r0, lsl #14
   27748:	andeq	r7, r2, r0, lsl #14
   2774c:	andeq	r7, r2, r0, lsl #14
   27750:	andeq	r7, r2, r0, lsl #14
   27754:	andeq	r7, r2, r0, lsl #14
   27758:			; <UNDEFINED> instruction: 0x000277bc
   2775c:	andeq	r7, r2, r0, lsl #14
   27760:	andeq	r7, r2, r0, lsl #14
   27764:	andeq	r7, r2, r0, lsl #14
   27768:	andeq	r7, r2, r0, lsl #14
   2776c:	andeq	r7, r2, r0, lsl #14
   27770:	andeq	r7, r2, r4, ror r7
   27774:	ldrb	r3, [sp, #37]	; 0x25
   27778:	cmp	r3, #104	; 0x68
   2777c:	beq	2799c <ProcessList_goThroughEntries@@Base+0x2f0>
   27780:	cmp	r3, #119	; 0x77
   27784:	beq	27958 <ProcessList_goThroughEntries@@Base+0x2ac>
   27788:	cmp	r3, #82	; 0x52
   2778c:	bne	27700 <ProcessList_goThroughEntries@@Base+0x54>
   27790:	mov	r2, #13
   27794:	ldr	r1, [pc, #624]	; 27a0c <ProcessList_goThroughEntries@@Base+0x360>
   27798:	add	r0, sp, #36	; 0x24
   2779c:	bl	154e0 <strncmp@plt>
   277a0:	cmp	r0, #0
   277a4:	bne	27700 <ProcessList_goThroughEntries@@Base+0x54>
   277a8:	add	r2, sp, #24
   277ac:	mov	r1, r4
   277b0:	add	r0, sp, #49	; 0x31
   277b4:	bl	15468 <sscanf@plt>
   277b8:	b	27700 <ProcessList_goThroughEntries@@Base+0x54>
   277bc:	mov	r2, #9
   277c0:	ldr	r1, [pc, #584]	; 27a10 <ProcessList_goThroughEntries@@Base+0x364>
   277c4:	add	r0, sp, #36	; 0x24
   277c8:	bl	154e0 <strncmp@plt>
   277cc:	cmp	r0, #0
   277d0:	beq	27920 <ProcessList_goThroughEntries@@Base+0x274>
   277d4:	mov	r2, #8
   277d8:	ldr	r1, [pc, #564]	; 27a14 <ProcessList_goThroughEntries@@Base+0x368>
   277dc:	add	r0, sp, #36	; 0x24
   277e0:	bl	154e0 <strncmp@plt>
   277e4:	cmp	r0, #0
   277e8:	beq	2793c <ProcessList_goThroughEntries@@Base+0x290>
   277ec:	mov	r2, #10
   277f0:	ldr	r1, [pc, #544]	; 27a18 <ProcessList_goThroughEntries@@Base+0x36c>
   277f4:	add	r0, sp, #36	; 0x24
   277f8:	bl	154e0 <strncmp@plt>
   277fc:	cmp	r0, #0
   27800:	bne	27700 <ProcessList_goThroughEntries@@Base+0x54>
   27804:	add	r2, r8, #80	; 0x50
   27808:	mov	r1, r4
   2780c:	add	r0, sp, #46	; 0x2e
   27810:	bl	15468 <sscanf@plt>
   27814:	b	27700 <ProcessList_goThroughEntries@@Base+0x54>
   27818:	mov	r2, #7
   2781c:	mov	r1, r5
   27820:	add	r0, sp, #36	; 0x24
   27824:	bl	154e0 <strncmp@plt>
   27828:	cmp	r0, #0
   2782c:	bne	27700 <ProcessList_goThroughEntries@@Base+0x54>
   27830:	add	r2, r8, #96	; 0x60
   27834:	mov	r1, r4
   27838:	add	r0, sp, #43	; 0x2b
   2783c:	bl	15468 <sscanf@plt>
   27840:	b	27700 <ProcessList_goThroughEntries@@Base+0x54>
   27844:	mov	r2, #8
   27848:	ldr	r1, [pc, #460]	; 27a1c <ProcessList_goThroughEntries@@Base+0x370>
   2784c:	add	r0, sp, #36	; 0x24
   27850:	bl	154e0 <strncmp@plt>
   27854:	cmp	r0, #0
   27858:	bne	27700 <ProcessList_goThroughEntries@@Base+0x54>
   2785c:	add	r2, r8, #88	; 0x58
   27860:	mov	r1, r4
   27864:	add	r0, sp, #44	; 0x2c
   27868:	bl	15468 <sscanf@plt>
   2786c:	b	27700 <ProcessList_goThroughEntries@@Base+0x54>
   27870:	ldrd	r6, [sp, #16]
   27874:	ldrd	r4, [sp, #24]
   27878:	ldrd	r2, [r8, #96]	; 0x60
   2787c:	mov	r0, fp
   27880:	subs	r4, r4, r6
   27884:	sbc	r5, r5, r7
   27888:	adds	r4, r4, r2
   2788c:	adc	r5, r5, r3
   27890:	ldrd	r2, [r8, #72]	; 0x48
   27894:	strd	r4, [r8, #96]	; 0x60
   27898:	ldrd	r4, [r8, #56]	; 0x38
   2789c:	ldrd	r6, [r8, #104]	; 0x68
   278a0:	subs	r4, r4, r2
   278a4:	sbc	r5, r5, r3
   278a8:	mov	r2, r4
   278ac:	mov	r3, r5
   278b0:	ldrd	r4, [sp, #8]
   278b4:	strd	r2, [r8, #64]	; 0x40
   278b8:	subs	r2, r6, r4
   278bc:	sbc	r3, r7, r5
   278c0:	strd	r2, [r8, #112]	; 0x70
   278c4:	bl	153fc <fclose@plt>
   278c8:	add	r1, r8, #136	; 0x88
   278cc:	add	r0, r8, #128	; 0x80
   278d0:	bl	254a0 <Process_isThread@@Base+0xa8>
   278d4:	mov	r1, sl
   278d8:	add	r0, sp, #24
   278dc:	vmov.f64	d8, d0
   278e0:	bl	1515c <gettimeofday@plt>
   278e4:	ldr	r3, [sp, #28]
   278e8:	mov	r2, sl
   278ec:	str	r3, [sp]
   278f0:	vmov.f64	d0, d8
   278f4:	ldr	r3, [sp, #24]
   278f8:	mov	r0, r8
   278fc:	ldr	r1, [pc, #284]	; 27a20 <ProcessList_goThroughEntries@@Base+0x374>
   27900:	bl	25b94 <Process_isThread@@Base+0x79c>
   27904:	ldr	r2, [sp, #164]	; 0xa4
   27908:	ldr	r3, [r9]
   2790c:	cmp	r2, r3
   27910:	bne	279e4 <ProcessList_goThroughEntries@@Base+0x338>
   27914:	add	sp, sp, #172	; 0xac
   27918:	vpop	{d8}
   2791c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27920:	add	r2, r8, #56	; 0x38
   27924:	mov	r1, r4
   27928:	add	r0, sp, #45	; 0x2d
   2792c:	bl	15468 <sscanf@plt>
   27930:	cmp	r0, #0
   27934:	beq	277d4 <ProcessList_goThroughEntries@@Base+0x128>
   27938:	b	27700 <ProcessList_goThroughEntries@@Base+0x54>
   2793c:	add	r2, r8, #72	; 0x48
   27940:	mov	r1, r4
   27944:	add	r0, sp, #44	; 0x2c
   27948:	bl	15468 <sscanf@plt>
   2794c:	cmp	r0, #0
   27950:	bne	27700 <ProcessList_goThroughEntries@@Base+0x54>
   27954:	b	277ec <ProcessList_goThroughEntries@@Base+0x140>
   27958:	mov	r2, #10
   2795c:	mov	r1, r6
   27960:	add	r0, sp, #36	; 0x24
   27964:	bl	154e0 <strncmp@plt>
   27968:	cmp	r0, #0
   2796c:	beq	279c8 <ProcessList_goThroughEntries@@Base+0x31c>
   27970:	mov	r2, #9
   27974:	ldr	r1, [pc, #168]	; 27a24 <ProcessList_goThroughEntries@@Base+0x378>
   27978:	add	r0, sp, #36	; 0x24
   2797c:	bl	154e0 <strncmp@plt>
   27980:	cmp	r0, #0
   27984:	bne	27700 <ProcessList_goThroughEntries@@Base+0x54>
   27988:	add	r2, sp, #8
   2798c:	mov	r1, r4
   27990:	add	r0, sp, #45	; 0x2d
   27994:	bl	15468 <sscanf@plt>
   27998:	b	27700 <ProcessList_goThroughEntries@@Base+0x54>
   2799c:	mov	r2, #6
   279a0:	mov	r1, r7
   279a4:	add	r0, sp, #36	; 0x24
   279a8:	bl	154e0 <strncmp@plt>
   279ac:	cmp	r0, #0
   279b0:	bne	27700 <ProcessList_goThroughEntries@@Base+0x54>
   279b4:	add	r2, sp, #16
   279b8:	mov	r1, r4
   279bc:	add	r0, sp, #42	; 0x2a
   279c0:	bl	15468 <sscanf@plt>
   279c4:	b	27700 <ProcessList_goThroughEntries@@Base+0x54>
   279c8:	add	r2, r8, #104	; 0x68
   279cc:	mov	r1, r4
   279d0:	add	r0, sp, #46	; 0x2e
   279d4:	bl	15468 <sscanf@plt>
   279d8:	cmp	r0, #0
   279dc:	bne	27700 <ProcessList_goThroughEntries@@Base+0x54>
   279e0:	b	27970 <ProcessList_goThroughEntries@@Base+0x2c4>
   279e4:	bl	15084 <__stack_chk_fail@plt>
   279e8:	ldr	r0, [pc, #56]	; 27a28 <ProcessList_goThroughEntries@@Base+0x37c>
   279ec:	bl	17714 <CRT_fatalError@@Base>
   279f0:			; <UNDEFINED> instruction: 0x0003ccb8
   279f4:			; <UNDEFINED> instruction: 0x0002b1b0
   279f8:			; <UNDEFINED> instruction: 0x0002c6b4
   279fc:	andeq	ip, r2, r0, lsr #14
   27a00:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   27a04:	andeq	ip, r2, r8, lsl #14
   27a08:	andeq	ip, r2, r0, lsl #14
   27a0c:	andeq	ip, r2, r8, lsr #14
   27a10:	andeq	ip, r2, r4, asr #13
   27a14:	ldrdeq	ip, [r2], -r0
   27a18:	andeq	ip, r2, r8, ror #13
   27a1c:	strdeq	ip, [r2], -r4
   27a20:	andeq	ip, r2, r8, lsr r7
   27a24:	andeq	ip, r2, r4, lsl r7
   27a28:	andeq	ip, r2, r8, lsr #13

00027a2c <CRT_handleSIGSEGV@@Base>:
   27a2c:	push	{r4, r5, r6, lr}
   27a30:	bl	17700 <CRT_done@@Base>
   27a34:	ldr	r4, [pc, #148]	; 27ad0 <CRT_handleSIGSEGV@@Base+0xa4>
   27a38:	ldr	r5, [pc, #148]	; 27ad4 <CRT_handleSIGSEGV@@Base+0xa8>
   27a3c:	ldr	r2, [pc, #148]	; 27ad8 <CRT_handleSIGSEGV@@Base+0xac>
   27a40:	mov	r1, #1
   27a44:	ldr	r0, [r4]
   27a48:	bl	153c0 <__fprintf_chk@plt>
   27a4c:	mov	r1, #128	; 0x80
   27a50:	mov	r0, r5
   27a54:	bl	15210 <backtrace@plt>
   27a58:	ldr	r2, [pc, #124]	; 27adc <CRT_handleSIGSEGV@@Base+0xb0>
   27a5c:	mov	r1, #1
   27a60:	mov	r6, r0
   27a64:	ldr	r0, [r4]
   27a68:	bl	153c0 <__fprintf_chk@plt>
   27a6c:	mov	r1, r6
   27a70:	mov	r0, r5
   27a74:	mov	r2, #2
   27a78:	bl	1551c <backtrace_symbols_fd@plt>
   27a7c:	ldr	r2, [pc, #92]	; 27ae0 <CRT_handleSIGSEGV@@Base+0xb4>
   27a80:	mov	r1, #1
   27a84:	ldr	r0, [r4]
   27a88:	bl	153c0 <__fprintf_chk@plt>
   27a8c:	ldr	r2, [pc, #80]	; 27ae4 <CRT_handleSIGSEGV@@Base+0xb8>
   27a90:	mov	r1, #1
   27a94:	ldr	r0, [r4]
   27a98:	bl	153c0 <__fprintf_chk@plt>
   27a9c:	ldr	r2, [pc, #68]	; 27ae8 <CRT_handleSIGSEGV@@Base+0xbc>
   27aa0:	mov	r1, #1
   27aa4:	ldr	r0, [r4]
   27aa8:	bl	153c0 <__fprintf_chk@plt>
   27aac:	ldr	r2, [pc, #56]	; 27aec <CRT_handleSIGSEGV@@Base+0xc0>
   27ab0:	mov	r1, #1
   27ab4:	ldr	r0, [r4]
   27ab8:	bl	153c0 <__fprintf_chk@plt>
   27abc:	ldr	r2, [pc, #44]	; 27af0 <CRT_handleSIGSEGV@@Base+0xc4>
   27ac0:	mov	r1, #1
   27ac4:	ldr	r0, [r4]
   27ac8:	bl	153c0 <__fprintf_chk@plt>
   27acc:	bl	154ec <abort@plt>
   27ad0:	andeq	lr, r3, r8, ror r7
   27ad4:	andeq	pc, r3, r0, lsr #3
   27ad8:	andeq	ip, r2, r0, asr #14
   27adc:	andeq	ip, r2, r4, lsl #15
   27ae0:	andeq	ip, r2, r0, asr #15
   27ae4:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   27ae8:	andeq	ip, r2, r0, asr r8
   27aec:	andeq	ip, r2, r0, lsl #17
   27af0:	andeq	ip, r2, r0, asr #17
   27af4:	andeq	r0, r0, r0
   27af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27afc:	sub	sp, sp, #340	; 0x154
   27b00:	ldr	lr, [pc, #516]	; 27d0c <CRT_handleSIGSEGV@@Base+0x2e0>
   27b04:	str	r0, [sp, #16]
   27b08:	str	r2, [sp, #20]
   27b0c:	mov	r5, r1
   27b10:	ldm	lr!, {r0, r1, r2, r3}
   27b14:	add	ip, sp, #280	; 0x118
   27b18:	stmia	ip!, {r0, r1, r2, r3}
   27b1c:	add	r0, sp, #280	; 0x118
   27b20:	ldr	r3, [pc, #488]	; 27d10 <CRT_handleSIGSEGV@@Base+0x2e4>
   27b24:	ldr	lr, [lr]
   27b28:	ldr	r3, [r3]
   27b2c:	str	lr, [ip]
   27b30:	str	r3, [sp, #332]	; 0x14c
   27b34:	bl	15198 <opendir@plt>
   27b38:	subs	r4, r0, #0
   27b3c:	beq	27cdc <CRT_handleSIGSEGV@@Base+0x2b0>
   27b40:	add	r8, sp, #24
   27b44:	mov	r0, r8
   27b48:	mov	r2, #256	; 0x100
   27b4c:	mov	r1, #0
   27b50:	bl	15330 <memset@plt>
   27b54:	ldr	r6, [pc, #440]	; 27d14 <CRT_handleSIGSEGV@@Base+0x2e8>
   27b58:	mov	r7, #0
   27b5c:	mov	r0, r4
   27b60:	bl	15438 <readdir@plt>
   27b64:	cmp	r0, #0
   27b68:	beq	27ccc <CRT_handleSIGSEGV@@Base+0x2a0>
   27b6c:	add	r9, r0, #11
   27b70:	mov	r0, r9
   27b74:	mov	r2, #3
   27b78:	mov	r1, r6
   27b7c:	bl	154e0 <strncmp@plt>
   27b80:	cmp	r0, #0
   27b84:	bne	27cb4 <CRT_handleSIGSEGV@@Base+0x288>
   27b88:	mov	r0, r9
   27b8c:	bl	24034 <xStrdup@@Base>
   27b90:	add	r3, sp, #336	; 0x150
   27b94:	add	r3, r3, r7, lsl #2
   27b98:	add	r7, r7, #1
   27b9c:	cmp	r7, #64	; 0x40
   27ba0:	str	r0, [r3, #-312]	; 0xfffffec8
   27ba4:	bne	27b5c <CRT_handleSIGSEGV@@Base+0x130>
   27ba8:	mov	r0, r4
   27bac:	bl	15504 <closedir@plt>
   27bb0:	mov	r6, #0
   27bb4:	mov	r9, r6
   27bb8:	ldr	r1, [sp, #16]
   27bbc:	ldr	r2, [r8, r6, lsl #2]
   27bc0:	str	r1, [sp, #12]
   27bc4:	add	r1, sp, #280	; 0x118
   27bc8:	str	r1, [sp, #4]
   27bcc:	ldr	r1, [pc, #324]	; 27d18 <CRT_handleSIGSEGV@@Base+0x2ec>
   27bd0:	mov	r3, #30
   27bd4:	str	r1, [sp]
   27bd8:	str	r2, [sp, #8]
   27bdc:	mov	r1, r3
   27be0:	mov	r2, #1
   27be4:	add	r0, sp, #300	; 0x12c
   27be8:	bl	15510 <__snprintf_chk@plt>
   27bec:	cmp	r0, #29
   27bf0:	bhi	27cf0 <CRT_handleSIGSEGV@@Base+0x2c4>
   27bf4:	ldr	r1, [pc, #288]	; 27d1c <CRT_handleSIGSEGV@@Base+0x2f0>
   27bf8:	add	r0, sp, #300	; 0x12c
   27bfc:	bl	14f70 <fopen@plt>
   27c00:	subs	r4, r0, #0
   27c04:	beq	27c80 <CRT_handleSIGSEGV@@Base+0x254>
   27c08:	mov	fp, #0
   27c0c:	mov	r0, fp
   27c10:	bl	14fa0 <free@plt>
   27c14:	mov	r0, r4
   27c18:	bl	1ff04 <String_readLine@@Base>
   27c1c:	cmp	r0, #0
   27c20:	beq	27ce4 <CRT_handleSIGSEGV@@Base+0x2b8>
   27c24:	add	fp, fp, #1
   27c28:	uxth	fp, fp
   27c2c:	cmp	r5, fp
   27c30:	bne	27c10 <CRT_handleSIGSEGV@@Base+0x1e4>
   27c34:	mov	sl, r0
   27c38:	mov	r0, r4
   27c3c:	bl	153fc <fclose@plt>
   27c40:	ldr	r1, [sp, #20]
   27c44:	mov	r0, sl
   27c48:	bl	1fdfc <String_getToken@@Base>
   27c4c:	mov	r2, #10
   27c50:	mov	r1, #0
   27c54:	add	r6, r6, #1
   27c58:	mov	r4, r0
   27c5c:	bl	14f4c <strtol@plt>
   27c60:	mov	fp, r0
   27c64:	mov	r0, r4
   27c68:	bl	14fa0 <free@plt>
   27c6c:	mov	r0, sl
   27c70:	bl	14fa0 <free@plt>
   27c74:	cmp	r6, r7
   27c78:	add	r9, r9, fp
   27c7c:	bne	27bb8 <CRT_handleSIGSEGV@@Base+0x18c>
   27c80:	add	r7, r8, r7, lsl #2
   27c84:	ldr	r0, [r8], #4
   27c88:	bl	14fa0 <free@plt>
   27c8c:	cmp	r7, r8
   27c90:	bne	27c84 <CRT_handleSIGSEGV@@Base+0x258>
   27c94:	ldr	r3, [pc, #116]	; 27d10 <CRT_handleSIGSEGV@@Base+0x2e4>
   27c98:	ldr	r2, [sp, #332]	; 0x14c
   27c9c:	mov	r0, r9
   27ca0:	ldr	r3, [r3]
   27ca4:	cmp	r2, r3
   27ca8:	bne	27d08 <CRT_handleSIGSEGV@@Base+0x2dc>
   27cac:	add	sp, sp, #340	; 0x154
   27cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27cb4:	cmp	r7, #63	; 0x3f
   27cb8:	bhi	27ba8 <CRT_handleSIGSEGV@@Base+0x17c>
   27cbc:	mov	r0, r4
   27cc0:	bl	15438 <readdir@plt>
   27cc4:	cmp	r0, #0
   27cc8:	bne	27b6c <CRT_handleSIGSEGV@@Base+0x140>
   27ccc:	mov	r0, r4
   27cd0:	bl	15504 <closedir@plt>
   27cd4:	cmp	r7, #0
   27cd8:	bne	27bb0 <CRT_handleSIGSEGV@@Base+0x184>
   27cdc:	mov	r9, #0
   27ce0:	b	27c94 <CRT_handleSIGSEGV@@Base+0x268>
   27ce4:	mov	r0, r4
   27ce8:	bl	153fc <fclose@plt>
   27cec:	b	27c80 <CRT_handleSIGSEGV@@Base+0x254>
   27cf0:	mov	r0, #1
   27cf4:	bl	15030 <curs_set@plt>
   27cf8:	bl	14f28 <endwin@plt>
   27cfc:	mov	r1, #0
   27d00:	mov	r0, #1
   27d04:	bl	15114 <err@plt>
   27d08:	bl	15084 <__stack_chk_fail@plt>
   27d0c:	strdeq	ip, [r2], -r8
   27d10:			; <UNDEFINED> instruction: 0x0003ccb8
   27d14:	andeq	ip, r2, ip, ror #17
   27d18:	strdeq	ip, [r2], -r0
   27d1c:			; <UNDEFINED> instruction: 0x0002b1b0
   27d20:	ldr	r3, [pc, #952]	; 280e0 <CRT_handleSIGSEGV@@Base+0x6b4>
   27d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27d28:	sub	sp, sp, #1104	; 0x450
   27d2c:	sub	sp, sp, #12
   27d30:	mov	r4, #0
   27d34:	mov	r5, #0
   27d38:	ldr	r3, [r3]
   27d3c:	mov	r2, #2
   27d40:	strd	r4, [r0]
   27d44:	str	r0, [sp, #16]
   27d48:	str	r2, [r1]
   27d4c:	ldr	r0, [pc, #912]	; 280e4 <CRT_handleSIGSEGV@@Base+0x6b8>
   27d50:	mov	fp, r1
   27d54:	str	r3, [sp, #1108]	; 0x454
   27d58:	bl	15198 <opendir@plt>
   27d5c:	subs	r4, r0, #0
   27d60:	beq	27e88 <CRT_handleSIGSEGV@@Base+0x45c>
   27d64:	mov	r3, #0
   27d68:	str	r3, [sp, #20]
   27d6c:	str	r3, [sp, #12]
   27d70:	mov	r0, r4
   27d74:	bl	15438 <readdir@plt>
   27d78:	cmp	r0, #0
   27d7c:	beq	27e50 <CRT_handleSIGSEGV@@Base+0x424>
   27d80:	ldrb	r3, [r0, #11]
   27d84:	add	r2, r0, #11
   27d88:	cmp	r3, #66	; 0x42
   27d8c:	beq	27ea8 <CRT_handleSIGSEGV@@Base+0x47c>
   27d90:	cmp	r3, #65	; 0x41
   27d94:	bne	27d70 <CRT_handleSIGSEGV@@Base+0x344>
   27d98:	ldr	r3, [fp]
   27d9c:	cmp	r3, #2
   27da0:	bne	27d70 <CRT_handleSIGSEGV@@Base+0x344>
   27da4:	str	r2, [sp, #4]
   27da8:	ldr	r2, [pc, #824]	; 280e8 <CRT_handleSIGSEGV@@Base+0x6bc>
   27dac:	mov	r3, #50	; 0x32
   27db0:	str	r2, [sp]
   27db4:	add	r0, sp, #32
   27db8:	mov	r1, r3
   27dbc:	mov	r2, #1
   27dc0:	bl	15510 <__snprintf_chk@plt>
   27dc4:	cmp	r0, #49	; 0x31
   27dc8:	bgt	280b4 <CRT_handleSIGSEGV@@Base+0x688>
   27dcc:	add	r0, sp, #32
   27dd0:	mov	r1, #0
   27dd4:	bl	15234 <open@plt>
   27dd8:	cmn	r0, #1
   27ddc:	mov	r5, r0
   27de0:	beq	28058 <CRT_handleSIGSEGV@@Base+0x62c>
   27de4:	add	r6, sp, #84	; 0x54
   27de8:	mov	r3, #0
   27dec:	strh	r3, [sp, #84]	; 0x54
   27df0:	mov	r2, #1
   27df4:	mov	r1, r6
   27df8:	mov	r0, r5
   27dfc:	bl	14f7c <read@plt>
   27e00:	cmn	r0, #1
   27e04:	bne	27e18 <CRT_handleSIGSEGV@@Base+0x3ec>
   27e08:	bl	152e8 <__errno_location@plt>
   27e0c:	ldr	r3, [r0]
   27e10:	cmp	r3, #4
   27e14:	beq	27df0 <CRT_handleSIGSEGV@@Base+0x3c4>
   27e18:	mov	r0, r5
   27e1c:	bl	154f8 <close@plt>
   27e20:	ldrb	r3, [sp, #84]	; 0x54
   27e24:	cmp	r3, #48	; 0x30
   27e28:	moveq	r3, #0
   27e2c:	streq	r3, [fp]
   27e30:	beq	27d70 <CRT_handleSIGSEGV@@Base+0x344>
   27e34:	cmp	r3, #49	; 0x31
   27e38:	moveq	r3, #1
   27e3c:	streq	r3, [fp]
   27e40:	mov	r0, r4
   27e44:	bl	15438 <readdir@plt>
   27e48:	cmp	r0, #0
   27e4c:	bne	27d80 <CRT_handleSIGSEGV@@Base+0x354>
   27e50:	mov	r0, r4
   27e54:	bl	15504 <closedir@plt>
   27e58:	ldr	r3, [sp, #12]
   27e5c:	cmp	r3, #0
   27e60:	ldr	r3, [sp, #16]
   27e64:	vldrne	s15, [sp, #20]
   27e68:	vldrne	d5, [pc, #608]	; 280d0 <CRT_handleSIGSEGV@@Base+0x6a4>
   27e6c:	vldrne	s13, [sp, #12]
   27e70:	vldreq	d5, [pc, #608]	; 280d8 <CRT_handleSIGSEGV@@Base+0x6ac>
   27e74:	vcvtne.f64.u32	d7, s15
   27e78:	vcvtne.f64.u32	d6, s13
   27e7c:	vmulne.f64	d7, d7, d5
   27e80:	vdivne.f64	d5, d7, d6
   27e84:	vstr	d5, [r3]
   27e88:	ldr	r3, [pc, #592]	; 280e0 <CRT_handleSIGSEGV@@Base+0x6b4>
   27e8c:	ldr	r2, [sp, #1108]	; 0x454
   27e90:	ldr	r3, [r3]
   27e94:	cmp	r2, r3
   27e98:	bne	280cc <CRT_handleSIGSEGV@@Base+0x6a0>
   27e9c:	add	sp, sp, #1104	; 0x450
   27ea0:	add	sp, sp, #12
   27ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ea8:	ldrb	r3, [r0, #12]
   27eac:	cmp	r3, #65	; 0x41
   27eb0:	bne	27d70 <CRT_handleSIGSEGV@@Base+0x344>
   27eb4:	ldrb	r3, [r0, #13]
   27eb8:	cmp	r3, #84	; 0x54
   27ebc:	bne	27d70 <CRT_handleSIGSEGV@@Base+0x344>
   27ec0:	str	r2, [sp, #4]
   27ec4:	ldr	r2, [pc, #544]	; 280ec <CRT_handleSIGSEGV@@Base+0x6c0>
   27ec8:	mov	r3, #50	; 0x32
   27ecc:	str	r2, [sp]
   27ed0:	add	r0, sp, #32
   27ed4:	mov	r1, r3
   27ed8:	mov	r2, #1
   27edc:	bl	15510 <__snprintf_chk@plt>
   27ee0:	cmp	r0, #49	; 0x31
   27ee4:	bgt	280b4 <CRT_handleSIGSEGV@@Base+0x688>
   27ee8:	add	r0, sp, #32
   27eec:	mov	r1, #0
   27ef0:	bl	15234 <open@plt>
   27ef4:	cmn	r0, #1
   27ef8:	mov	r9, r0
   27efc:	beq	28058 <CRT_handleSIGSEGV@@Base+0x62c>
   27f00:	add	r6, sp, #84	; 0x54
   27f04:	ldr	sl, [pc, #484]	; 280f0 <CRT_handleSIGSEGV@@Base+0x6c4>
   27f08:	mov	r7, r6
   27f0c:	mov	r8, #0
   27f10:	mov	r2, sl
   27f14:	mov	r1, r7
   27f18:	mov	r0, r9
   27f1c:	bl	14f7c <read@plt>
   27f20:	cmn	r0, #1
   27f24:	beq	28040 <CRT_handleSIGSEGV@@Base+0x614>
   27f28:	cmp	r0, #0
   27f2c:	subgt	sl, sl, r0
   27f30:	addgt	r7, r7, r0
   27f34:	addgt	r8, r8, r0
   27f38:	cmp	sl, #0
   27f3c:	clz	r0, r0
   27f40:	lsr	r0, r0, #5
   27f44:	moveq	r0, #1
   27f48:	cmp	r0, #0
   27f4c:	beq	27f10 <CRT_handleSIGSEGV@@Base+0x4e4>
   27f50:	mov	r5, r0
   27f54:	mov	r0, r9
   27f58:	bl	154f8 <close@plt>
   27f5c:	cmp	r8, #0
   27f60:	ble	28058 <CRT_handleSIGSEGV@@Base+0x62c>
   27f64:	add	r3, sp, #1104	; 0x450
   27f68:	add	r3, r3, #8
   27f6c:	add	r8, r3, r8
   27f70:	add	r7, sp, #1104	; 0x450
   27f74:	mov	r3, #0
   27f78:	add	r7, r7, #8
   27f7c:	strb	r3, [r8, #-1028]	; 0xfffffbfc
   27f80:	mov	r9, r3
   27f84:	mov	r8, r3
   27f88:	str	r6, [r7, #-1084]!	; 0xfffffbc4
   27f8c:	ldr	r1, [pc, #352]	; 280f4 <CRT_handleSIGSEGV@@Base+0x6c8>
   27f90:	mov	r0, r7
   27f94:	bl	1521c <strsep@plt>
   27f98:	subs	r6, r0, #0
   27f9c:	beq	27d70 <CRT_handleSIGSEGV@@Base+0x344>
   27fa0:	mov	r2, #13
   27fa4:	ldr	r1, [pc, #332]	; 280f8 <CRT_handleSIGSEGV@@Base+0x6cc>
   27fa8:	bl	154e0 <strncmp@plt>
   27fac:	cmp	r0, #0
   27fb0:	bne	27f8c <CRT_handleSIGSEGV@@Base+0x560>
   27fb4:	adds	sl, r6, #13
   27fb8:	beq	27f8c <CRT_handleSIGSEGV@@Base+0x560>
   27fbc:	mov	r2, #7
   27fc0:	ldr	r1, [pc, #308]	; 280fc <CRT_handleSIGSEGV@@Base+0x6d0>
   27fc4:	mov	r0, sl
   27fc8:	bl	154e0 <strncmp@plt>
   27fcc:	cmp	r0, #0
   27fd0:	beq	27fec <CRT_handleSIGSEGV@@Base+0x5c0>
   27fd4:	mov	r0, sl
   27fd8:	mov	r2, #7
   27fdc:	ldr	r1, [pc, #284]	; 28100 <CRT_handleSIGSEGV@@Base+0x6d4>
   27fe0:	bl	154e0 <strncmp@plt>
   27fe4:	cmp	r0, #0
   27fe8:	bne	27f8c <CRT_handleSIGSEGV@@Base+0x560>
   27fec:	cmp	r8, #0
   27ff0:	add	r6, r6, #20
   27ff4:	bne	28064 <CRT_handleSIGSEGV@@Base+0x638>
   27ff8:	mov	r2, #5
   27ffc:	ldr	r1, [pc, #256]	; 28104 <CRT_handleSIGSEGV@@Base+0x6d8>
   28000:	mov	r0, r6
   28004:	bl	154e0 <strncmp@plt>
   28008:	cmp	r0, #0
   2800c:	bne	28064 <CRT_handleSIGSEGV@@Base+0x638>
   28010:	adds	r0, r6, #5
   28014:	beq	28064 <CRT_handleSIGSEGV@@Base+0x638>
   28018:	mov	r1, r8
   2801c:	mov	r2, #10
   28020:	bl	14f4c <strtol@plt>
   28024:	ldr	r3, [sp, #12]
   28028:	cmp	r9, #0
   2802c:	add	r3, r3, r0
   28030:	str	r3, [sp, #12]
   28034:	bne	27d70 <CRT_handleSIGSEGV@@Base+0x344>
   28038:	mov	r8, r5
   2803c:	b	27f8c <CRT_handleSIGSEGV@@Base+0x560>
   28040:	bl	152e8 <__errno_location@plt>
   28044:	ldr	r3, [r0]
   28048:	cmp	r3, #4
   2804c:	beq	27f10 <CRT_handleSIGSEGV@@Base+0x4e4>
   28050:	mov	r0, r9
   28054:	bl	154f8 <close@plt>
   28058:	mov	r0, r4
   2805c:	bl	15504 <closedir@plt>
   28060:	b	27e88 <CRT_handleSIGSEGV@@Base+0x45c>
   28064:	cmp	r9, #0
   28068:	bne	27f8c <CRT_handleSIGSEGV@@Base+0x560>
   2806c:	mov	r2, #4
   28070:	ldr	r1, [pc, #144]	; 28108 <CRT_handleSIGSEGV@@Base+0x6dc>
   28074:	mov	r0, r6
   28078:	bl	154e0 <strncmp@plt>
   2807c:	cmp	r0, #0
   28080:	bne	27f8c <CRT_handleSIGSEGV@@Base+0x560>
   28084:	adds	r0, r6, #4
   28088:	beq	27f8c <CRT_handleSIGSEGV@@Base+0x560>
   2808c:	mov	r1, r9
   28090:	mov	r2, #10
   28094:	bl	14f4c <strtol@plt>
   28098:	ldr	r3, [sp, #20]
   2809c:	cmp	r8, #0
   280a0:	add	r3, r3, r0
   280a4:	str	r3, [sp, #20]
   280a8:	bne	27d70 <CRT_handleSIGSEGV@@Base+0x344>
   280ac:	mov	r9, r5
   280b0:	b	27f8c <CRT_handleSIGSEGV@@Base+0x560>
   280b4:	mov	r0, #1
   280b8:	bl	15030 <curs_set@plt>
   280bc:	bl	14f28 <endwin@plt>
   280c0:	mov	r1, #0
   280c4:	mov	r0, #1
   280c8:	bl	15114 <err@plt>
   280cc:	bl	15084 <__stack_chk_fail@plt>
   280d0:	andeq	r0, r0, r0
   280d4:	subsmi	r0, r9, r0
	...
   280e0:			; <UNDEFINED> instruction: 0x0003ccb8
   280e4:	andeq	ip, r2, ip, lsl #18
   280e8:	andeq	ip, r2, r8, ror r9
   280ec:	andeq	ip, r2, r4, lsr #18
   280f0:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   280f4:	andeq	r9, r2, r4, asr sl
   280f8:	andeq	ip, r2, r8, asr #18
   280fc:	andeq	ip, r2, r8, asr r9
   28100:	andeq	ip, r2, r0, ror #18
   28104:	andeq	ip, r2, r8, ror #18
   28108:	andeq	ip, r2, r0, ror r9

0002810c <Battery_getData@@Base>:
   2810c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28110:	sub	sp, sp, #84	; 0x54
   28114:	ldr	r5, [pc, #668]	; 283b8 <Battery_getData@@Base+0x2ac>
   28118:	mov	r7, r0
   2811c:	mov	r0, #0
   28120:	ldr	r3, [r5]
   28124:	mov	r9, r1
   28128:	str	r3, [sp, #76]	; 0x4c
   2812c:	bl	15018 <time@plt>
   28130:	ldr	r4, [pc, #644]	; 283bc <Battery_getData@@Base+0x2b0>
   28134:	ldr	r3, [r4]
   28138:	add	r3, r3, #9
   2813c:	cmp	r3, r0
   28140:	bge	281a4 <Battery_getData@@Base+0x98>
   28144:	ldr	r3, [r4, #20]
   28148:	mov	r8, r0
   2814c:	cmp	r3, #0
   28150:	beq	281b8 <Battery_getData@@Base+0xac>
   28154:	cmp	r3, #1
   28158:	beq	28314 <Battery_getData@@Base+0x208>
   2815c:	cmp	r3, #2
   28160:	beq	282f4 <Battery_getData@@Base+0x1e8>
   28164:	vldr	d7, [r7]
   28168:	vldr	d6, [pc, #560]	; 283a0 <Battery_getData@@Base+0x294>
   2816c:	ldr	r3, [r9]
   28170:	vcmpe.f64	d7, d6
   28174:	vmrs	APSR_nzcv, fpscr
   28178:	vstrgt	d6, [r7]
   2817c:	vmovgt.f64	d7, d6
   28180:	vstr	d7, [r4, #8]
   28184:	str	r3, [r4, #16]
   28188:	str	r8, [r4]
   2818c:	ldr	r2, [sp, #76]	; 0x4c
   28190:	ldr	r3, [r5]
   28194:	cmp	r2, r3
   28198:	bne	28380 <Battery_getData@@Base+0x274>
   2819c:	add	sp, sp, #84	; 0x54
   281a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   281a4:	ldrd	r0, [r4, #8]
   281a8:	ldr	r3, [r4, #16]
   281ac:	strd	r0, [r7]
   281b0:	str	r3, [r9]
   281b4:	b	2818c <Battery_getData@@Base+0x80>
   281b8:	mov	r2, #4
   281bc:	mov	r1, #3
   281c0:	ldr	r0, [pc, #504]	; 283c0 <Battery_getData@@Base+0x2b4>
   281c4:	bl	27af8 <CRT_handleSIGSEGV@@Base+0xcc>
   281c8:	subs	r6, r0, #0
   281cc:	bne	28348 <Battery_getData@@Base+0x23c>
   281d0:	vldr	d7, [pc, #464]	; 283a8 <Battery_getData@@Base+0x29c>
   281d4:	vstr	d7, [r7]
   281d8:	ldr	r0, [pc, #484]	; 283c4 <Battery_getData@@Base+0x2b8>
   281dc:	bl	15198 <opendir@plt>
   281e0:	mov	r3, #2
   281e4:	str	r3, [sp, #20]
   281e8:	subs	r6, r0, #0
   281ec:	beq	282c0 <Battery_getData@@Base+0x1b4>
   281f0:	mov	r0, r6
   281f4:	bl	15438 <readdir@plt>
   281f8:	cmp	r0, #0
   281fc:	beq	282b8 <Battery_getData@@Base+0x1ac>
   28200:	ldrb	r3, [r0, #11]
   28204:	cmp	r3, #65	; 0x41
   28208:	bne	281f0 <Battery_getData@@Base+0xe4>
   2820c:	ldr	r2, [pc, #432]	; 283c4 <Battery_getData@@Base+0x2b8>
   28210:	add	r0, r0, #11
   28214:	str	r2, [sp, #4]
   28218:	ldr	r2, [pc, #424]	; 283c8 <Battery_getData@@Base+0x2bc>
   2821c:	mov	r3, #50	; 0x32
   28220:	str	r0, [sp, #8]
   28224:	str	r2, [sp]
   28228:	mov	r1, r3
   2822c:	mov	r2, #1
   28230:	add	r0, sp, #24
   28234:	bl	15510 <__snprintf_chk@plt>
   28238:	cmp	r0, #49	; 0x31
   2823c:	bgt	28384 <Battery_getData@@Base+0x278>
   28240:	ldr	r1, [pc, #388]	; 283cc <Battery_getData@@Base+0x2c0>
   28244:	add	r0, sp, #24
   28248:	bl	14f70 <fopen@plt>
   2824c:	subs	sl, r0, #0
   28250:	beq	282e0 <Battery_getData@@Base+0x1d4>
   28254:	bl	1ff04 <String_readLine@@Base>
   28258:	mov	fp, r0
   2825c:	mov	r0, sl
   28260:	bl	153fc <fclose@plt>
   28264:	cmp	fp, #0
   28268:	beq	281f0 <Battery_getData@@Base+0xe4>
   2826c:	mov	r1, #2
   28270:	mov	r0, fp
   28274:	bl	1fdfc <String_getToken@@Base>
   28278:	mov	sl, r0
   2827c:	mov	r0, fp
   28280:	bl	14fa0 <free@plt>
   28284:	ldr	r1, [pc, #324]	; 283d0 <Battery_getData@@Base+0x2c4>
   28288:	mov	r0, sl
   2828c:	bl	14f34 <strcmp@plt>
   28290:	cmp	r0, #0
   28294:	mov	r0, sl
   28298:	beq	28338 <Battery_getData@@Base+0x22c>
   2829c:	bl	14fa0 <free@plt>
   282a0:	mov	r3, #0
   282a4:	mov	r0, r6
   282a8:	str	r3, [sp, #20]
   282ac:	bl	15438 <readdir@plt>
   282b0:	cmp	r0, #0
   282b4:	bne	28200 <Battery_getData@@Base+0xf4>
   282b8:	mov	r0, r6
   282bc:	bl	15504 <closedir@plt>
   282c0:	vldr	d7, [r7]
   282c4:	ldr	r3, [sp, #20]
   282c8:	str	r3, [r9]
   282cc:	vcmp.f64	d7, #0.0
   282d0:	vmrs	APSR_nzcv, fpscr
   282d4:	beq	2830c <Battery_getData@@Base+0x200>
   282d8:	ldr	r3, [r4, #20]
   282dc:	b	28154 <Battery_getData@@Base+0x48>
   282e0:	mov	r3, #2
   282e4:	str	r3, [sp, #20]
   282e8:	b	281f0 <Battery_getData@@Base+0xe4>
   282ec:	mov	r3, #2
   282f0:	str	r3, [r4, #20]
   282f4:	vldr	d7, [pc, #180]	; 283b0 <Battery_getData@@Base+0x2a4>
   282f8:	mov	r2, #2
   282fc:	mov	r3, r2
   28300:	vstr	d7, [r7]
   28304:	str	r2, [r9]
   28308:	b	28180 <Battery_getData@@Base+0x74>
   2830c:	mov	r3, #1
   28310:	str	r3, [r4, #20]
   28314:	mov	r1, r9
   28318:	mov	r0, r7
   2831c:	bl	27d20 <CRT_handleSIGSEGV@@Base+0x2f4>
   28320:	vldr	d7, [r7]
   28324:	vcmp.f64	d7, #0.0
   28328:	vmrs	APSR_nzcv, fpscr
   2832c:	beq	282ec <Battery_getData@@Base+0x1e0>
   28330:	ldr	r3, [r4, #20]
   28334:	b	2815c <Battery_getData@@Base+0x50>
   28338:	bl	14fa0 <free@plt>
   2833c:	mov	r3, #1
   28340:	str	r3, [sp, #20]
   28344:	b	282b8 <Battery_getData@@Base+0x1ac>
   28348:	mov	r2, #3
   2834c:	mov	r1, #5
   28350:	ldr	r0, [pc, #124]	; 283d4 <Battery_getData@@Base+0x2c8>
   28354:	bl	27af8 <CRT_handleSIGSEGV@@Base+0xcc>
   28358:	cmp	r0, #0
   2835c:	beq	281d0 <Battery_getData@@Base+0xc4>
   28360:	vmov	s15, r0
   28364:	vmov	s13, r6
   28368:	vcvt.f64.u32	d5, s15
   2836c:	vldr	d7, [pc, #44]	; 283a0 <Battery_getData@@Base+0x294>
   28370:	vcvt.f64.u32	d6, s13
   28374:	vmul.f64	d5, d5, d7
   28378:	vdiv.f64	d7, d5, d6
   2837c:	b	281d4 <Battery_getData@@Base+0xc8>
   28380:	bl	15084 <__stack_chk_fail@plt>
   28384:	mov	r0, #1
   28388:	bl	15030 <curs_set@plt>
   2838c:	bl	14f28 <endwin@plt>
   28390:	mov	r1, #0
   28394:	mov	r0, #1
   28398:	bl	15114 <err@plt>
   2839c:	nop			; (mov r0, r0)
   283a0:	andeq	r0, r0, r0
   283a4:	subsmi	r0, r9, r0
	...
   283b4:	svclt	0x00f00000	; IMB
   283b8:			; <UNDEFINED> instruction: 0x0003ccb8
   283bc:	andeq	pc, r3, r0, lsl #3
   283c0:	muleq	r2, ip, r9
   283c4:	andeq	ip, r2, ip, lsr #19
   283c8:	andeq	ip, r2, r4, asr #19
   283cc:			; <UNDEFINED> instruction: 0x0002b1b0
   283d0:	ldrdeq	ip, [r2], -r0
   283d4:	andeq	ip, r2, r4, lsr #19
   283d8:	subs	r2, r1, #1
   283dc:	bxeq	lr
   283e0:	bcc	285b8 <Battery_getData@@Base+0x4ac>
   283e4:	cmp	r0, r1
   283e8:	bls	2859c <Battery_getData@@Base+0x490>
   283ec:	tst	r1, r2
   283f0:	beq	285a8 <Battery_getData@@Base+0x49c>
   283f4:	clz	r3, r0
   283f8:	clz	r2, r1
   283fc:	sub	r3, r2, r3
   28400:	rsbs	r3, r3, #31
   28404:	addne	r3, r3, r3, lsl #1
   28408:	mov	r2, #0
   2840c:	addne	pc, pc, r3, lsl #2
   28410:	nop			; (mov r0, r0)
   28414:	cmp	r0, r1, lsl #31
   28418:	adc	r2, r2, r2
   2841c:	subcs	r0, r0, r1, lsl #31
   28420:	cmp	r0, r1, lsl #30
   28424:	adc	r2, r2, r2
   28428:	subcs	r0, r0, r1, lsl #30
   2842c:	cmp	r0, r1, lsl #29
   28430:	adc	r2, r2, r2
   28434:	subcs	r0, r0, r1, lsl #29
   28438:	cmp	r0, r1, lsl #28
   2843c:	adc	r2, r2, r2
   28440:	subcs	r0, r0, r1, lsl #28
   28444:	cmp	r0, r1, lsl #27
   28448:	adc	r2, r2, r2
   2844c:	subcs	r0, r0, r1, lsl #27
   28450:	cmp	r0, r1, lsl #26
   28454:	adc	r2, r2, r2
   28458:	subcs	r0, r0, r1, lsl #26
   2845c:	cmp	r0, r1, lsl #25
   28460:	adc	r2, r2, r2
   28464:	subcs	r0, r0, r1, lsl #25
   28468:	cmp	r0, r1, lsl #24
   2846c:	adc	r2, r2, r2
   28470:	subcs	r0, r0, r1, lsl #24
   28474:	cmp	r0, r1, lsl #23
   28478:	adc	r2, r2, r2
   2847c:	subcs	r0, r0, r1, lsl #23
   28480:	cmp	r0, r1, lsl #22
   28484:	adc	r2, r2, r2
   28488:	subcs	r0, r0, r1, lsl #22
   2848c:	cmp	r0, r1, lsl #21
   28490:	adc	r2, r2, r2
   28494:	subcs	r0, r0, r1, lsl #21
   28498:	cmp	r0, r1, lsl #20
   2849c:	adc	r2, r2, r2
   284a0:	subcs	r0, r0, r1, lsl #20
   284a4:	cmp	r0, r1, lsl #19
   284a8:	adc	r2, r2, r2
   284ac:	subcs	r0, r0, r1, lsl #19
   284b0:	cmp	r0, r1, lsl #18
   284b4:	adc	r2, r2, r2
   284b8:	subcs	r0, r0, r1, lsl #18
   284bc:	cmp	r0, r1, lsl #17
   284c0:	adc	r2, r2, r2
   284c4:	subcs	r0, r0, r1, lsl #17
   284c8:	cmp	r0, r1, lsl #16
   284cc:	adc	r2, r2, r2
   284d0:	subcs	r0, r0, r1, lsl #16
   284d4:	cmp	r0, r1, lsl #15
   284d8:	adc	r2, r2, r2
   284dc:	subcs	r0, r0, r1, lsl #15
   284e0:	cmp	r0, r1, lsl #14
   284e4:	adc	r2, r2, r2
   284e8:	subcs	r0, r0, r1, lsl #14
   284ec:	cmp	r0, r1, lsl #13
   284f0:	adc	r2, r2, r2
   284f4:	subcs	r0, r0, r1, lsl #13
   284f8:	cmp	r0, r1, lsl #12
   284fc:	adc	r2, r2, r2
   28500:	subcs	r0, r0, r1, lsl #12
   28504:	cmp	r0, r1, lsl #11
   28508:	adc	r2, r2, r2
   2850c:	subcs	r0, r0, r1, lsl #11
   28510:	cmp	r0, r1, lsl #10
   28514:	adc	r2, r2, r2
   28518:	subcs	r0, r0, r1, lsl #10
   2851c:	cmp	r0, r1, lsl #9
   28520:	adc	r2, r2, r2
   28524:	subcs	r0, r0, r1, lsl #9
   28528:	cmp	r0, r1, lsl #8
   2852c:	adc	r2, r2, r2
   28530:	subcs	r0, r0, r1, lsl #8
   28534:	cmp	r0, r1, lsl #7
   28538:	adc	r2, r2, r2
   2853c:	subcs	r0, r0, r1, lsl #7
   28540:	cmp	r0, r1, lsl #6
   28544:	adc	r2, r2, r2
   28548:	subcs	r0, r0, r1, lsl #6
   2854c:	cmp	r0, r1, lsl #5
   28550:	adc	r2, r2, r2
   28554:	subcs	r0, r0, r1, lsl #5
   28558:	cmp	r0, r1, lsl #4
   2855c:	adc	r2, r2, r2
   28560:	subcs	r0, r0, r1, lsl #4
   28564:	cmp	r0, r1, lsl #3
   28568:	adc	r2, r2, r2
   2856c:	subcs	r0, r0, r1, lsl #3
   28570:	cmp	r0, r1, lsl #2
   28574:	adc	r2, r2, r2
   28578:	subcs	r0, r0, r1, lsl #2
   2857c:	cmp	r0, r1, lsl #1
   28580:	adc	r2, r2, r2
   28584:	subcs	r0, r0, r1, lsl #1
   28588:	cmp	r0, r1
   2858c:	adc	r2, r2, r2
   28590:	subcs	r0, r0, r1
   28594:	mov	r0, r2
   28598:	bx	lr
   2859c:	moveq	r0, #1
   285a0:	movne	r0, #0
   285a4:	bx	lr
   285a8:	clz	r2, r1
   285ac:	rsb	r2, r2, #31
   285b0:	lsr	r0, r0, r2
   285b4:	bx	lr
   285b8:	cmp	r0, #0
   285bc:	mvnne	r0, #0
   285c0:	b	28cf4 <Battery_getData@@Base+0xbe8>
   285c4:	cmp	r1, #0
   285c8:	beq	285b8 <Battery_getData@@Base+0x4ac>
   285cc:	push	{r0, r1, lr}
   285d0:	bl	283d8 <Battery_getData@@Base+0x2cc>
   285d4:	pop	{r1, r2, lr}
   285d8:	mul	r3, r2, r0
   285dc:	sub	r1, r1, r3
   285e0:	bx	lr
   285e4:	cmp	r1, #0
   285e8:	beq	287f4 <Battery_getData@@Base+0x6e8>
   285ec:	eor	ip, r0, r1
   285f0:	rsbmi	r1, r1, #0
   285f4:	subs	r2, r1, #1
   285f8:	beq	287c0 <Battery_getData@@Base+0x6b4>
   285fc:	movs	r3, r0
   28600:	rsbmi	r3, r0, #0
   28604:	cmp	r3, r1
   28608:	bls	287cc <Battery_getData@@Base+0x6c0>
   2860c:	tst	r1, r2
   28610:	beq	287dc <Battery_getData@@Base+0x6d0>
   28614:	clz	r2, r3
   28618:	clz	r0, r1
   2861c:	sub	r2, r0, r2
   28620:	rsbs	r2, r2, #31
   28624:	addne	r2, r2, r2, lsl #1
   28628:	mov	r0, #0
   2862c:	addne	pc, pc, r2, lsl #2
   28630:	nop			; (mov r0, r0)
   28634:	cmp	r3, r1, lsl #31
   28638:	adc	r0, r0, r0
   2863c:	subcs	r3, r3, r1, lsl #31
   28640:	cmp	r3, r1, lsl #30
   28644:	adc	r0, r0, r0
   28648:	subcs	r3, r3, r1, lsl #30
   2864c:	cmp	r3, r1, lsl #29
   28650:	adc	r0, r0, r0
   28654:	subcs	r3, r3, r1, lsl #29
   28658:	cmp	r3, r1, lsl #28
   2865c:	adc	r0, r0, r0
   28660:	subcs	r3, r3, r1, lsl #28
   28664:	cmp	r3, r1, lsl #27
   28668:	adc	r0, r0, r0
   2866c:	subcs	r3, r3, r1, lsl #27
   28670:	cmp	r3, r1, lsl #26
   28674:	adc	r0, r0, r0
   28678:	subcs	r3, r3, r1, lsl #26
   2867c:	cmp	r3, r1, lsl #25
   28680:	adc	r0, r0, r0
   28684:	subcs	r3, r3, r1, lsl #25
   28688:	cmp	r3, r1, lsl #24
   2868c:	adc	r0, r0, r0
   28690:	subcs	r3, r3, r1, lsl #24
   28694:	cmp	r3, r1, lsl #23
   28698:	adc	r0, r0, r0
   2869c:	subcs	r3, r3, r1, lsl #23
   286a0:	cmp	r3, r1, lsl #22
   286a4:	adc	r0, r0, r0
   286a8:	subcs	r3, r3, r1, lsl #22
   286ac:	cmp	r3, r1, lsl #21
   286b0:	adc	r0, r0, r0
   286b4:	subcs	r3, r3, r1, lsl #21
   286b8:	cmp	r3, r1, lsl #20
   286bc:	adc	r0, r0, r0
   286c0:	subcs	r3, r3, r1, lsl #20
   286c4:	cmp	r3, r1, lsl #19
   286c8:	adc	r0, r0, r0
   286cc:	subcs	r3, r3, r1, lsl #19
   286d0:	cmp	r3, r1, lsl #18
   286d4:	adc	r0, r0, r0
   286d8:	subcs	r3, r3, r1, lsl #18
   286dc:	cmp	r3, r1, lsl #17
   286e0:	adc	r0, r0, r0
   286e4:	subcs	r3, r3, r1, lsl #17
   286e8:	cmp	r3, r1, lsl #16
   286ec:	adc	r0, r0, r0
   286f0:	subcs	r3, r3, r1, lsl #16
   286f4:	cmp	r3, r1, lsl #15
   286f8:	adc	r0, r0, r0
   286fc:	subcs	r3, r3, r1, lsl #15
   28700:	cmp	r3, r1, lsl #14
   28704:	adc	r0, r0, r0
   28708:	subcs	r3, r3, r1, lsl #14
   2870c:	cmp	r3, r1, lsl #13
   28710:	adc	r0, r0, r0
   28714:	subcs	r3, r3, r1, lsl #13
   28718:	cmp	r3, r1, lsl #12
   2871c:	adc	r0, r0, r0
   28720:	subcs	r3, r3, r1, lsl #12
   28724:	cmp	r3, r1, lsl #11
   28728:	adc	r0, r0, r0
   2872c:	subcs	r3, r3, r1, lsl #11
   28730:	cmp	r3, r1, lsl #10
   28734:	adc	r0, r0, r0
   28738:	subcs	r3, r3, r1, lsl #10
   2873c:	cmp	r3, r1, lsl #9
   28740:	adc	r0, r0, r0
   28744:	subcs	r3, r3, r1, lsl #9
   28748:	cmp	r3, r1, lsl #8
   2874c:	adc	r0, r0, r0
   28750:	subcs	r3, r3, r1, lsl #8
   28754:	cmp	r3, r1, lsl #7
   28758:	adc	r0, r0, r0
   2875c:	subcs	r3, r3, r1, lsl #7
   28760:	cmp	r3, r1, lsl #6
   28764:	adc	r0, r0, r0
   28768:	subcs	r3, r3, r1, lsl #6
   2876c:	cmp	r3, r1, lsl #5
   28770:	adc	r0, r0, r0
   28774:	subcs	r3, r3, r1, lsl #5
   28778:	cmp	r3, r1, lsl #4
   2877c:	adc	r0, r0, r0
   28780:	subcs	r3, r3, r1, lsl #4
   28784:	cmp	r3, r1, lsl #3
   28788:	adc	r0, r0, r0
   2878c:	subcs	r3, r3, r1, lsl #3
   28790:	cmp	r3, r1, lsl #2
   28794:	adc	r0, r0, r0
   28798:	subcs	r3, r3, r1, lsl #2
   2879c:	cmp	r3, r1, lsl #1
   287a0:	adc	r0, r0, r0
   287a4:	subcs	r3, r3, r1, lsl #1
   287a8:	cmp	r3, r1
   287ac:	adc	r0, r0, r0
   287b0:	subcs	r3, r3, r1
   287b4:	cmp	ip, #0
   287b8:	rsbmi	r0, r0, #0
   287bc:	bx	lr
   287c0:	teq	ip, r0
   287c4:	rsbmi	r0, r0, #0
   287c8:	bx	lr
   287cc:	movcc	r0, #0
   287d0:	asreq	r0, ip, #31
   287d4:	orreq	r0, r0, #1
   287d8:	bx	lr
   287dc:	clz	r2, r1
   287e0:	rsb	r2, r2, #31
   287e4:	cmp	ip, #0
   287e8:	lsr	r0, r3, r2
   287ec:	rsbmi	r0, r0, #0
   287f0:	bx	lr
   287f4:	cmp	r0, #0
   287f8:	mvngt	r0, #-2147483648	; 0x80000000
   287fc:	movlt	r0, #-2147483648	; 0x80000000
   28800:	b	28cf4 <Battery_getData@@Base+0xbe8>
   28804:	cmp	r1, #0
   28808:	beq	287f4 <Battery_getData@@Base+0x6e8>
   2880c:	push	{r0, r1, lr}
   28810:	bl	285ec <Battery_getData@@Base+0x4e0>
   28814:	pop	{r1, r2, lr}
   28818:	mul	r3, r2, r0
   2881c:	sub	r1, r1, r3
   28820:	bx	lr
   28824:	eor	r1, r1, #-2147483648	; 0x80000000
   28828:	b	28830 <Battery_getData@@Base+0x724>
   2882c:	eor	r3, r3, #-2147483648	; 0x80000000
   28830:	push	{r4, r5, lr}
   28834:	lsl	r4, r1, #1
   28838:	lsl	r5, r3, #1
   2883c:	teq	r4, r5
   28840:	teqeq	r0, r2
   28844:	orrsne	ip, r4, r0
   28848:	orrsne	ip, r5, r2
   2884c:	mvnsne	ip, r4, asr #21
   28850:	mvnsne	ip, r5, asr #21
   28854:	beq	28a40 <Battery_getData@@Base+0x934>
   28858:	lsr	r4, r4, #21
   2885c:	rsbs	r5, r4, r5, lsr #21
   28860:	rsblt	r5, r5, #0
   28864:	ble	28884 <Battery_getData@@Base+0x778>
   28868:	add	r4, r4, r5
   2886c:	eor	r2, r0, r2
   28870:	eor	r3, r1, r3
   28874:	eor	r0, r2, r0
   28878:	eor	r1, r3, r1
   2887c:	eor	r2, r0, r2
   28880:	eor	r3, r1, r3
   28884:	cmp	r5, #54	; 0x36
   28888:	pophi	{r4, r5, pc}
   2888c:	tst	r1, #-2147483648	; 0x80000000
   28890:	lsl	r1, r1, #12
   28894:	mov	ip, #1048576	; 0x100000
   28898:	orr	r1, ip, r1, lsr #12
   2889c:	beq	288a8 <Battery_getData@@Base+0x79c>
   288a0:	rsbs	r0, r0, #0
   288a4:	rsc	r1, r1, #0
   288a8:	tst	r3, #-2147483648	; 0x80000000
   288ac:	lsl	r3, r3, #12
   288b0:	orr	r3, ip, r3, lsr #12
   288b4:	beq	288c0 <Battery_getData@@Base+0x7b4>
   288b8:	rsbs	r2, r2, #0
   288bc:	rsc	r3, r3, #0
   288c0:	teq	r4, r5
   288c4:	beq	28a28 <Battery_getData@@Base+0x91c>
   288c8:	sub	r4, r4, #1
   288cc:	rsbs	lr, r5, #32
   288d0:	blt	288ec <Battery_getData@@Base+0x7e0>
   288d4:	lsl	ip, r2, lr
   288d8:	adds	r0, r0, r2, lsr r5
   288dc:	adc	r1, r1, #0
   288e0:	adds	r0, r0, r3, lsl lr
   288e4:	adcs	r1, r1, r3, asr r5
   288e8:	b	28908 <Battery_getData@@Base+0x7fc>
   288ec:	sub	r5, r5, #32
   288f0:	add	lr, lr, #32
   288f4:	cmp	r2, #1
   288f8:	lsl	ip, r3, lr
   288fc:	orrcs	ip, ip, #2
   28900:	adds	r0, r0, r3, asr r5
   28904:	adcs	r1, r1, r3, asr #31
   28908:	and	r5, r1, #-2147483648	; 0x80000000
   2890c:	bpl	2891c <Battery_getData@@Base+0x810>
   28910:	rsbs	ip, ip, #0
   28914:	rscs	r0, r0, #0
   28918:	rsc	r1, r1, #0
   2891c:	cmp	r1, #1048576	; 0x100000
   28920:	bcc	28960 <Battery_getData@@Base+0x854>
   28924:	cmp	r1, #2097152	; 0x200000
   28928:	bcc	28948 <Battery_getData@@Base+0x83c>
   2892c:	lsrs	r1, r1, #1
   28930:	rrxs	r0, r0
   28934:	rrx	ip, ip
   28938:	add	r4, r4, #1
   2893c:	lsl	r2, r4, #21
   28940:	cmn	r2, #4194304	; 0x400000
   28944:	bcs	28aa0 <Battery_getData@@Base+0x994>
   28948:	cmp	ip, #-2147483648	; 0x80000000
   2894c:	lsrseq	ip, r0, #1
   28950:	adcs	r0, r0, #0
   28954:	adc	r1, r1, r4, lsl #20
   28958:	orr	r1, r1, r5
   2895c:	pop	{r4, r5, pc}
   28960:	lsls	ip, ip, #1
   28964:	adcs	r0, r0, r0
   28968:	adc	r1, r1, r1
   2896c:	tst	r1, #1048576	; 0x100000
   28970:	sub	r4, r4, #1
   28974:	bne	28948 <Battery_getData@@Base+0x83c>
   28978:	teq	r1, #0
   2897c:	moveq	r1, r0
   28980:	moveq	r0, #0
   28984:	clz	r3, r1
   28988:	addeq	r3, r3, #32
   2898c:	sub	r3, r3, #11
   28990:	subs	r2, r3, #32
   28994:	bge	289b8 <Battery_getData@@Base+0x8ac>
   28998:	adds	r2, r2, #12
   2899c:	ble	289b4 <Battery_getData@@Base+0x8a8>
   289a0:	add	ip, r2, #20
   289a4:	rsb	r2, r2, #12
   289a8:	lsl	r0, r1, ip
   289ac:	lsr	r1, r1, r2
   289b0:	b	289c8 <Battery_getData@@Base+0x8bc>
   289b4:	add	r2, r2, #20
   289b8:	rsble	ip, r2, #32
   289bc:	lsl	r1, r1, r2
   289c0:	orrle	r1, r1, r0, lsr ip
   289c4:	lslle	r0, r0, r2
   289c8:	subs	r4, r4, r3
   289cc:	addge	r1, r1, r4, lsl #20
   289d0:	orrge	r1, r1, r5
   289d4:	popge	{r4, r5, pc}
   289d8:	mvn	r4, r4
   289dc:	subs	r4, r4, #31
   289e0:	bge	28a1c <Battery_getData@@Base+0x910>
   289e4:	adds	r4, r4, #12
   289e8:	bgt	28a04 <Battery_getData@@Base+0x8f8>
   289ec:	add	r4, r4, #20
   289f0:	rsb	r2, r4, #32
   289f4:	lsr	r0, r0, r4
   289f8:	orr	r0, r0, r1, lsl r2
   289fc:	orr	r1, r5, r1, lsr r4
   28a00:	pop	{r4, r5, pc}
   28a04:	rsb	r4, r4, #12
   28a08:	rsb	r2, r4, #32
   28a0c:	lsr	r0, r0, r2
   28a10:	orr	r0, r0, r1, lsl r4
   28a14:	mov	r1, r5
   28a18:	pop	{r4, r5, pc}
   28a1c:	lsr	r0, r1, r4
   28a20:	mov	r1, r5
   28a24:	pop	{r4, r5, pc}
   28a28:	teq	r4, #0
   28a2c:	eor	r3, r3, #1048576	; 0x100000
   28a30:	eoreq	r1, r1, #1048576	; 0x100000
   28a34:	addeq	r4, r4, #1
   28a38:	subne	r5, r5, #1
   28a3c:	b	288c8 <Battery_getData@@Base+0x7bc>
   28a40:	mvns	ip, r4, asr #21
   28a44:	mvnsne	ip, r5, asr #21
   28a48:	beq	28ab0 <Battery_getData@@Base+0x9a4>
   28a4c:	teq	r4, r5
   28a50:	teqeq	r0, r2
   28a54:	beq	28a68 <Battery_getData@@Base+0x95c>
   28a58:	orrs	ip, r4, r0
   28a5c:	moveq	r1, r3
   28a60:	moveq	r0, r2
   28a64:	pop	{r4, r5, pc}
   28a68:	teq	r1, r3
   28a6c:	movne	r1, #0
   28a70:	movne	r0, #0
   28a74:	popne	{r4, r5, pc}
   28a78:	lsrs	ip, r4, #21
   28a7c:	bne	28a90 <Battery_getData@@Base+0x984>
   28a80:	lsls	r0, r0, #1
   28a84:	adcs	r1, r1, r1
   28a88:	orrcs	r1, r1, #-2147483648	; 0x80000000
   28a8c:	pop	{r4, r5, pc}
   28a90:	adds	r4, r4, #4194304	; 0x400000
   28a94:	addcc	r1, r1, #1048576	; 0x100000
   28a98:	popcc	{r4, r5, pc}
   28a9c:	and	r5, r1, #-2147483648	; 0x80000000
   28aa0:	orr	r1, r5, #2130706432	; 0x7f000000
   28aa4:	orr	r1, r1, #15728640	; 0xf00000
   28aa8:	mov	r0, #0
   28aac:	pop	{r4, r5, pc}
   28ab0:	mvns	ip, r4, asr #21
   28ab4:	movne	r1, r3
   28ab8:	movne	r0, r2
   28abc:	mvnseq	ip, r5, asr #21
   28ac0:	movne	r3, r1
   28ac4:	movne	r2, r0
   28ac8:	orrs	r4, r0, r1, lsl #12
   28acc:	orrseq	r5, r2, r3, lsl #12
   28ad0:	teqeq	r1, r3
   28ad4:	orrne	r1, r1, #524288	; 0x80000
   28ad8:	pop	{r4, r5, pc}
   28adc:	teq	r0, #0
   28ae0:	moveq	r1, #0
   28ae4:	bxeq	lr
   28ae8:	push	{r4, r5, lr}
   28aec:	mov	r4, #1024	; 0x400
   28af0:	add	r4, r4, #50	; 0x32
   28af4:	mov	r5, #0
   28af8:	mov	r1, #0
   28afc:	b	28978 <Battery_getData@@Base+0x86c>
   28b00:	teq	r0, #0
   28b04:	moveq	r1, #0
   28b08:	bxeq	lr
   28b0c:	push	{r4, r5, lr}
   28b10:	mov	r4, #1024	; 0x400
   28b14:	add	r4, r4, #50	; 0x32
   28b18:	ands	r5, r0, #-2147483648	; 0x80000000
   28b1c:	rsbmi	r0, r0, #0
   28b20:	mov	r1, #0
   28b24:	b	28978 <Battery_getData@@Base+0x86c>
   28b28:	lsls	r2, r0, #1
   28b2c:	asr	r1, r2, #3
   28b30:	rrx	r1, r1
   28b34:	lsl	r0, r2, #28
   28b38:	andsne	r3, r2, #-16777216	; 0xff000000
   28b3c:	teqne	r3, #-16777216	; 0xff000000
   28b40:	eorne	r1, r1, #939524096	; 0x38000000
   28b44:	bxne	lr
   28b48:	bics	r2, r2, #-16777216	; 0xff000000
   28b4c:	bxeq	lr
   28b50:	teq	r3, #-16777216	; 0xff000000
   28b54:	orreq	r1, r1, #524288	; 0x80000
   28b58:	bxeq	lr
   28b5c:	push	{r4, r5, lr}
   28b60:	mov	r4, #896	; 0x380
   28b64:	and	r5, r1, #-2147483648	; 0x80000000
   28b68:	bic	r1, r1, #-2147483648	; 0x80000000
   28b6c:	b	28978 <Battery_getData@@Base+0x86c>
   28b70:	orrs	r2, r0, r1
   28b74:	bxeq	lr
   28b78:	push	{r4, r5, lr}
   28b7c:	mov	r5, #0
   28b80:	b	28ba0 <Battery_getData@@Base+0xa94>
   28b84:	orrs	r2, r0, r1
   28b88:	bxeq	lr
   28b8c:	push	{r4, r5, lr}
   28b90:	ands	r5, r1, #-2147483648	; 0x80000000
   28b94:	bpl	28ba0 <Battery_getData@@Base+0xa94>
   28b98:	rsbs	r0, r0, #0
   28b9c:	rsc	r1, r1, #0
   28ba0:	mov	r4, #1024	; 0x400
   28ba4:	add	r4, r4, #50	; 0x32
   28ba8:	lsrs	ip, r1, #22
   28bac:	beq	2891c <Battery_getData@@Base+0x810>
   28bb0:	mov	r2, #3
   28bb4:	lsrs	ip, ip, #3
   28bb8:	addne	r2, r2, #3
   28bbc:	lsrs	ip, ip, #3
   28bc0:	addne	r2, r2, #3
   28bc4:	add	r2, r2, ip, lsr #3
   28bc8:	rsb	r3, r2, #32
   28bcc:	lsl	ip, r0, r3
   28bd0:	lsr	r0, r0, r2
   28bd4:	orr	r0, r0, r1, lsl r3
   28bd8:	lsr	r1, r1, r2
   28bdc:	add	r4, r4, r2
   28be0:	b	2891c <Battery_getData@@Base+0x810>
   28be4:	cmp	r3, #0
   28be8:	cmpeq	r2, #0
   28bec:	bne	28c10 <Battery_getData@@Base+0xb04>
   28bf0:	cmp	r1, #0
   28bf4:	movlt	r1, #-2147483648	; 0x80000000
   28bf8:	movlt	r0, #0
   28bfc:	blt	28c0c <Battery_getData@@Base+0xb00>
   28c00:	cmpeq	r0, #0
   28c04:	mvnne	r1, #-2147483648	; 0x80000000
   28c08:	mvnne	r0, #0
   28c0c:	b	28cf4 <Battery_getData@@Base+0xbe8>
   28c10:	sub	sp, sp, #8
   28c14:	push	{sp, lr}
   28c18:	cmp	r1, #0
   28c1c:	blt	28c3c <Battery_getData@@Base+0xb30>
   28c20:	cmp	r3, #0
   28c24:	blt	28c70 <Battery_getData@@Base+0xb64>
   28c28:	bl	28d80 <Battery_getData@@Base+0xc74>
   28c2c:	ldr	lr, [sp, #4]
   28c30:	add	sp, sp, #8
   28c34:	pop	{r2, r3}
   28c38:	bx	lr
   28c3c:	rsbs	r0, r0, #0
   28c40:	sbc	r1, r1, r1, lsl #1
   28c44:	cmp	r3, #0
   28c48:	blt	28c94 <Battery_getData@@Base+0xb88>
   28c4c:	bl	28d80 <Battery_getData@@Base+0xc74>
   28c50:	ldr	lr, [sp, #4]
   28c54:	add	sp, sp, #8
   28c58:	pop	{r2, r3}
   28c5c:	rsbs	r0, r0, #0
   28c60:	sbc	r1, r1, r1, lsl #1
   28c64:	rsbs	r2, r2, #0
   28c68:	sbc	r3, r3, r3, lsl #1
   28c6c:	bx	lr
   28c70:	rsbs	r2, r2, #0
   28c74:	sbc	r3, r3, r3, lsl #1
   28c78:	bl	28d80 <Battery_getData@@Base+0xc74>
   28c7c:	ldr	lr, [sp, #4]
   28c80:	add	sp, sp, #8
   28c84:	pop	{r2, r3}
   28c88:	rsbs	r0, r0, #0
   28c8c:	sbc	r1, r1, r1, lsl #1
   28c90:	bx	lr
   28c94:	rsbs	r2, r2, #0
   28c98:	sbc	r3, r3, r3, lsl #1
   28c9c:	bl	28d80 <Battery_getData@@Base+0xc74>
   28ca0:	ldr	lr, [sp, #4]
   28ca4:	add	sp, sp, #8
   28ca8:	pop	{r2, r3}
   28cac:	rsbs	r2, r2, #0
   28cb0:	sbc	r3, r3, r3, lsl #1
   28cb4:	bx	lr
   28cb8:	cmp	r3, #0
   28cbc:	cmpeq	r2, #0
   28cc0:	bne	28cd8 <Battery_getData@@Base+0xbcc>
   28cc4:	cmp	r1, #0
   28cc8:	cmpeq	r0, #0
   28ccc:	mvnne	r1, #0
   28cd0:	mvnne	r0, #0
   28cd4:	b	28cf4 <Battery_getData@@Base+0xbe8>
   28cd8:	sub	sp, sp, #8
   28cdc:	push	{sp, lr}
   28ce0:	bl	28d80 <Battery_getData@@Base+0xc74>
   28ce4:	ldr	lr, [sp, #4]
   28ce8:	add	sp, sp, #8
   28cec:	pop	{r2, r3}
   28cf0:	bx	lr
   28cf4:	push	{r1, lr}
   28cf8:	mov	r0, #8
   28cfc:	bl	14ef8 <raise@plt>
   28d00:	pop	{r1, pc}
   28d04:	vmov	d7, r0, r1
   28d08:	vcmpe.f64	d7, #0.0
   28d0c:	vmrs	APSR_nzcv, fpscr
   28d10:	bmi	28d18 <Battery_getData@@Base+0xc0c>
   28d14:	b	28d30 <Battery_getData@@Base+0xc24>
   28d18:	push	{r4, lr}
   28d1c:	eor	r1, r1, #-2147483648	; 0x80000000
   28d20:	bl	28d30 <Battery_getData@@Base+0xc24>
   28d24:	rsbs	r0, r0, #0
   28d28:	rsc	r1, r1, #0
   28d2c:	pop	{r4, pc}
   28d30:	vmov	d7, r0, r1
   28d34:	vldr	d6, [pc, #52]	; 28d70 <Battery_getData@@Base+0xc64>
   28d38:	vldr	d5, [pc, #56]	; 28d78 <Battery_getData@@Base+0xc6c>
   28d3c:	push	{r4, r5}
   28d40:	mov	r4, #0
   28d44:	vmul.f64	d6, d7, d6
   28d48:	vcvt.u32.f64	s12, d6
   28d4c:	vcvt.f64.u32	d4, s12
   28d50:	vmov	r1, s12
   28d54:	vmls.f64	d7, d4, d5
   28d58:	vcvt.u32.f64	s14, d7
   28d5c:	vmov	r3, s14
   28d60:	orr	r0, r4, r3
   28d64:	pop	{r4, r5}
   28d68:	bx	lr
   28d6c:	nop			; (mov r0, r0)
   28d70:	andeq	r0, r0, r0
   28d74:	ldclcc	0, cr0, [r0]
   28d78:	andeq	r0, r0, r0
   28d7c:	mvnsmi	r0, r0
   28d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28d84:	cmp	r1, r3
   28d88:	sub	sp, sp, #12
   28d8c:	cmpeq	r0, r2
   28d90:	mov	sl, r0
   28d94:	mov	fp, r1
   28d98:	ldr	r8, [sp, #48]	; 0x30
   28d9c:	bcc	28e94 <Battery_getData@@Base+0xd88>
   28da0:	cmp	r3, #0
   28da4:	mov	r0, r2
   28da8:	mov	r1, r3
   28dac:	clzne	r2, r3
   28db0:	clzeq	r3, r0
   28db4:	addeq	r2, r3, #32
   28db8:	cmp	fp, #0
   28dbc:	clzeq	r3, sl
   28dc0:	addeq	r3, r3, #32
   28dc4:	clzne	r3, fp
   28dc8:	sub	r3, r2, r3
   28dcc:	sub	ip, r3, #32
   28dd0:	lsl	r7, r1, r3
   28dd4:	rsb	lr, r3, #32
   28dd8:	orr	r7, r7, r0, lsl ip
   28ddc:	orr	r7, r7, r0, lsr lr
   28de0:	lsl	r6, r0, r3
   28de4:	cmp	fp, r7
   28de8:	cmpeq	sl, r6
   28dec:	bcs	28eb4 <Battery_getData@@Base+0xda8>
   28df0:	mov	r0, #0
   28df4:	mov	r1, #0
   28df8:	strd	r0, [sp]
   28dfc:	cmp	r3, #0
   28e00:	beq	28ea0 <Battery_getData@@Base+0xd94>
   28e04:	lsrs	r7, r7, #1
   28e08:	rrx	r6, r6
   28e0c:	mov	r2, r3
   28e10:	b	28e34 <Battery_getData@@Base+0xd28>
   28e14:	subs	r0, sl, r6
   28e18:	sbc	r1, fp, r7
   28e1c:	adds	r4, r0, r0
   28e20:	adc	r5, r1, r1
   28e24:	adds	sl, r4, #1
   28e28:	adc	fp, r5, #0
   28e2c:	subs	r2, r2, #1
   28e30:	beq	28e50 <Battery_getData@@Base+0xd44>
   28e34:	cmp	fp, r7
   28e38:	cmpeq	sl, r6
   28e3c:	bcs	28e14 <Battery_getData@@Base+0xd08>
   28e40:	adds	sl, sl, sl
   28e44:	adc	fp, fp, fp
   28e48:	subs	r2, r2, #1
   28e4c:	bne	28e34 <Battery_getData@@Base+0xd28>
   28e50:	lsr	r2, sl, r3
   28e54:	lsr	r9, fp, r3
   28e58:	orr	r2, r2, fp, lsl lr
   28e5c:	orr	r2, r2, fp, lsr ip
   28e60:	lsl	r1, r9, r3
   28e64:	ldrd	r6, [sp]
   28e68:	orr	r1, r1, r2, lsl ip
   28e6c:	lsl	r0, r2, r3
   28e70:	adds	r6, r6, sl
   28e74:	orr	r1, r1, r2, lsr lr
   28e78:	adc	r7, r7, fp
   28e7c:	subs	r6, r6, r0
   28e80:	sbc	r7, r7, r1
   28e84:	mov	sl, r2
   28e88:	mov	fp, r9
   28e8c:	strd	r6, [sp]
   28e90:	b	28ea0 <Battery_getData@@Base+0xd94>
   28e94:	mov	r2, #0
   28e98:	mov	r3, #0
   28e9c:	strd	r2, [sp]
   28ea0:	cmp	r8, #0
   28ea4:	strdne	sl, [r8]
   28ea8:	ldrd	r0, [sp]
   28eac:	add	sp, sp, #12
   28eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28eb4:	mov	r2, #1
   28eb8:	subs	sl, sl, r6
   28ebc:	lsl	r1, r2, ip
   28ec0:	orr	r1, r1, r2, lsr lr
   28ec4:	lsl	r2, r2, r3
   28ec8:	str	r1, [sp, #4]
   28ecc:	sbc	fp, fp, r7
   28ed0:	str	r2, [sp]
   28ed4:	b	28dfc <Battery_getData@@Base+0xcf0>

00028ed8 <__libc_csu_init@@Base>:
   28ed8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   28edc:	mov	r7, r0
   28ee0:	ldr	r6, [pc, #72]	; 28f30 <__libc_csu_init@@Base+0x58>
   28ee4:	ldr	r5, [pc, #72]	; 28f34 <__libc_csu_init@@Base+0x5c>
   28ee8:	add	r6, pc, r6
   28eec:	add	r5, pc, r5
   28ef0:	sub	r6, r6, r5
   28ef4:	mov	r8, r1
   28ef8:	mov	r9, r2
   28efc:	bl	14ec0 <_init@@Base>
   28f00:	asrs	r6, r6, #2
   28f04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   28f08:	mov	r4, #0
   28f0c:	add	r4, r4, #1
   28f10:	ldr	r3, [r5], #4
   28f14:	mov	r2, r9
   28f18:	mov	r1, r8
   28f1c:	mov	r0, r7
   28f20:	blx	r3
   28f24:	cmp	r6, r4
   28f28:	bne	28f0c <__libc_csu_init@@Base+0x34>
   28f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28f30:	andeq	r3, r1, r4, asr #27
   28f34:			; <UNDEFINED> instruction: 0x00013dbc

00028f38 <__libc_csu_fini@@Base>:
   28f38:	bx	lr

Disassembly of section .fini:

00028f3c <_fini@@Base>:
   28f3c:	push	{r3, lr}
   28f40:	pop	{r3, pc}
