
raspbian-preinstalled/traceroute.db:     file format elf32-littlearm


Disassembly of section .init:

00001998 <.init>:
    1998:	push	{r3, lr}
    199c:	bl	2c64 <main@@Base+0xe74>
    19a0:	pop	{r3, pc}

Disassembly of section .plt:

000019a4 <fdopen@plt-0x14>:
    19a4:	push	{lr}		; (str lr, [sp, #-4]!)
    19a8:	ldr	lr, [pc, #4]	; 19b4 <fdopen@plt-0x4>
    19ac:	add	lr, pc, lr
    19b0:	ldr	pc, [lr, #8]!
    19b4:	andeq	fp, r1, r4, ror #9

000019b8 <fdopen@plt>:
    19b8:	add	ip, pc, #0, 12
    19bc:	add	ip, ip, #110592	; 0x1b000
    19c0:	ldr	pc, [ip, #1252]!	; 0x4e4

000019c4 <calloc@plt>:
    19c4:	add	ip, pc, #0, 12
    19c8:	add	ip, ip, #110592	; 0x1b000
    19cc:	ldr	pc, [ip, #1244]!	; 0x4dc

000019d0 <strstr@plt>:
    19d0:	add	ip, pc, #0, 12
    19d4:	add	ip, ip, #110592	; 0x1b000
    19d8:	ldr	pc, [ip, #1236]!	; 0x4d4

000019dc <raise@plt>:
    19dc:	add	ip, pc, #0, 12
    19e0:	add	ip, ip, #110592	; 0x1b000
    19e4:	ldr	pc, [ip, #1228]!	; 0x4cc

000019e8 <strcmp@plt>:
    19e8:	add	ip, pc, #0, 12
    19ec:	add	ip, ip, #110592	; 0x1b000
    19f0:	ldr	pc, [ip, #1220]!	; 0x4c4

000019f4 <__cxa_finalize@plt>:
    19f4:	add	ip, pc, #0, 12
    19f8:	add	ip, ip, #110592	; 0x1b000
    19fc:	ldr	pc, [ip, #1212]!	; 0x4bc

00001a00 <strtol@plt>:
    1a00:	add	ip, pc, #0, 12
    1a04:	add	ip, ip, #110592	; 0x1b000
    1a08:	ldr	pc, [ip, #1204]!	; 0x4b4

00001a0c <setsockopt@plt>:
    1a0c:	add	ip, pc, #0, 12
    1a10:	add	ip, ip, #110592	; 0x1b000
    1a14:	ldr	pc, [ip, #1196]!	; 0x4ac

00001a18 <times@plt>:
    1a18:	add	ip, pc, #0, 12
    1a1c:	add	ip, ip, #110592	; 0x1b000
    1a20:	ldr	pc, [ip, #1188]!	; 0x4a4

00001a24 <read@plt>:
    1a24:	add	ip, pc, #0, 12
    1a28:	add	ip, ip, #110592	; 0x1b000
    1a2c:	ldr	pc, [ip, #1180]!	; 0x49c

00001a30 <getprotobyname@plt>:
    1a30:	add	ip, pc, #0, 12
    1a34:	add	ip, ip, #110592	; 0x1b000
    1a38:	ldr	pc, [ip, #1172]!	; 0x494

00001a3c <fflush@plt>:
    1a3c:	add	ip, pc, #0, 12
    1a40:	add	ip, ip, #110592	; 0x1b000
    1a44:	ldr	pc, [ip, #1164]!	; 0x48c

00001a48 <free@plt>:
    1a48:	add	ip, pc, #0, 12
    1a4c:	add	ip, ip, #110592	; 0x1b000
    1a50:	ldr	pc, [ip, #1156]!	; 0x484

00001a54 <gai_strerror@plt>:
    1a54:	add	ip, pc, #0, 12
    1a58:	add	ip, ip, #110592	; 0x1b000
    1a5c:	ldr	pc, [ip, #1148]!	; 0x47c

00001a60 <fgets@plt>:
    1a60:	add	ip, pc, #0, 12
    1a64:	add	ip, ip, #110592	; 0x1b000
    1a68:	ldr	pc, [ip, #1140]!	; 0x474

00001a6c <memcpy@plt>:
    1a6c:	add	ip, pc, #0, 12
    1a70:	add	ip, ip, #110592	; 0x1b000
    1a74:	ldr	pc, [ip, #1132]!	; 0x46c

00001a78 <__memset_chk@plt>:
    1a78:	add	ip, pc, #0, 12
    1a7c:	add	ip, ip, #110592	; 0x1b000
    1a80:	ldr	pc, [ip, #1124]!	; 0x464

00001a84 <memcmp@plt>:
    1a84:	add	ip, pc, #0, 12
    1a88:	add	ip, ip, #110592	; 0x1b000
    1a8c:	ldr	pc, [ip, #1116]!	; 0x45c

00001a90 <uname@plt>:
    1a90:	add	ip, pc, #0, 12
    1a94:	add	ip, ip, #110592	; 0x1b000
    1a98:	ldr	pc, [ip, #1108]!	; 0x454

00001a9c <__stack_chk_fail@plt>:
    1a9c:	add	ip, pc, #0, 12
    1aa0:	add	ip, ip, #110592	; 0x1b000
    1aa4:	ldr	pc, [ip, #1100]!	; 0x44c

00001aa8 <dup2@plt>:
    1aa8:	add	ip, pc, #0, 12
    1aac:	add	ip, ip, #110592	; 0x1b000
    1ab0:	ldr	pc, [ip, #1092]!	; 0x444

00001ab4 <realloc@plt>:
    1ab4:	add	ip, pc, #0, 12
    1ab8:	add	ip, ip, #110592	; 0x1b000
    1abc:	ldr	pc, [ip, #1084]!	; 0x43c

00001ac0 <strcasecmp@plt>:
    1ac0:	add	ip, pc, #0, 12
    1ac4:	add	ip, ip, #110592	; 0x1b000
    1ac8:	ldr	pc, [ip, #1076]!	; 0x434

00001acc <perror@plt>:
    1acc:	add	ip, pc, #0, 12
    1ad0:	add	ip, ip, #110592	; 0x1b000
    1ad4:	ldr	pc, [ip, #1068]!	; 0x42c

00001ad8 <poll@plt>:
    1ad8:	add	ip, pc, #0, 12
    1adc:	add	ip, ip, #110592	; 0x1b000
    1ae0:	ldr	pc, [ip, #1060]!	; 0x424

00001ae4 <__memcpy_chk@plt>:
    1ae4:	add	ip, pc, #0, 12
    1ae8:	add	ip, ip, #110592	; 0x1b000
    1aec:	ldr	pc, [ip, #1052]!	; 0x41c

00001af0 <fwrite@plt>:
    1af0:	add	ip, pc, #0, 12
    1af4:	add	ip, ip, #110592	; 0x1b000
    1af8:	ldr	pc, [ip, #1044]!	; 0x414

00001afc <getsockopt@plt>:
    1afc:	add	ip, pc, #0, 12
    1b00:	add	ip, ip, #110592	; 0x1b000
    1b04:	ldr	pc, [ip, #1036]!	; 0x40c

00001b08 <gettimeofday@plt>:
    1b08:	add	ip, pc, #0, 12
    1b0c:	add	ip, ip, #110592	; 0x1b000
    1b10:	ldr	pc, [ip, #1028]!	; 0x404

00001b14 <getenv@plt>:
    1b14:	add	ip, pc, #0, 12
    1b18:	add	ip, ip, #110592	; 0x1b000
    1b1c:	ldr	pc, [ip, #1020]!	; 0x3fc

00001b20 <malloc@plt>:
    1b20:	add	ip, pc, #0, 12
    1b24:	add	ip, ip, #110592	; 0x1b000
    1b28:	ldr	pc, [ip, #1012]!	; 0x3f4

00001b2c <__libc_start_main@plt>:
    1b2c:	add	ip, pc, #0, 12
    1b30:	add	ip, ip, #110592	; 0x1b000
    1b34:	ldr	pc, [ip, #1004]!	; 0x3ec

00001b38 <__vfprintf_chk@plt>:
    1b38:	add	ip, pc, #0, 12
    1b3c:	add	ip, ip, #110592	; 0x1b000
    1b40:	ldr	pc, [ip, #996]!	; 0x3e4

00001b44 <__gmon_start__@plt>:
    1b44:	add	ip, pc, #0, 12
    1b48:	add	ip, ip, #110592	; 0x1b000
    1b4c:	ldr	pc, [ip, #988]!	; 0x3dc

00001b50 <open@plt>:
    1b50:	add	ip, pc, #0, 12
    1b54:	add	ip, ip, #110592	; 0x1b000
    1b58:	ldr	pc, [ip, #980]!	; 0x3d4

00001b5c <__ctype_b_loc@plt>:
    1b5c:	add	ip, pc, #0, 12
    1b60:	add	ip, ip, #110592	; 0x1b000
    1b64:	ldr	pc, [ip, #972]!	; 0x3cc

00001b68 <getpid@plt>:
    1b68:	add	ip, pc, #0, 12
    1b6c:	add	ip, ip, #110592	; 0x1b000
    1b70:	ldr	pc, [ip, #964]!	; 0x3c4

00001b74 <exit@plt>:
    1b74:	add	ip, pc, #0, 12
    1b78:	add	ip, ip, #110592	; 0x1b000
    1b7c:	ldr	pc, [ip, #956]!	; 0x3bc

00001b80 <strtoul@plt>:
    1b80:	add	ip, pc, #0, 12
    1b84:	add	ip, ip, #110592	; 0x1b000
    1b88:	ldr	pc, [ip, #948]!	; 0x3b4

00001b8c <strlen@plt>:
    1b8c:	add	ip, pc, #0, 12
    1b90:	add	ip, ip, #110592	; 0x1b000
    1b94:	ldr	pc, [ip, #940]!	; 0x3ac

00001b98 <strchr@plt>:
    1b98:	add	ip, pc, #0, 12
    1b9c:	add	ip, ip, #110592	; 0x1b000
    1ba0:	ldr	pc, [ip, #932]!	; 0x3a4

00001ba4 <srand@plt>:
    1ba4:	add	ip, pc, #0, 12
    1ba8:	add	ip, ip, #110592	; 0x1b000
    1bac:	ldr	pc, [ip, #924]!	; 0x39c

00001bb0 <fcntl@plt>:
    1bb0:	add	ip, pc, #0, 12
    1bb4:	add	ip, ip, #110592	; 0x1b000
    1bb8:	ldr	pc, [ip, #916]!	; 0x394

00001bbc <__errno_location@plt>:
    1bbc:	add	ip, pc, #0, 12
    1bc0:	add	ip, ip, #110592	; 0x1b000
    1bc4:	ldr	pc, [ip, #908]!	; 0x38c

00001bc8 <getservbyname@plt>:
    1bc8:	add	ip, pc, #0, 12
    1bcc:	add	ip, ip, #110592	; 0x1b000
    1bd0:	ldr	pc, [ip, #900]!	; 0x384

00001bd4 <snprintf@plt>:
    1bd4:	add	ip, pc, #0, 12
    1bd8:	add	ip, ip, #110592	; 0x1b000
    1bdc:	ldr	pc, [ip, #892]!	; 0x37c

00001be0 <__strdup@plt>:
    1be0:	add	ip, pc, #0, 12
    1be4:	add	ip, ip, #110592	; 0x1b000
    1be8:	ldr	pc, [ip, #884]!	; 0x374

00001bec <bind@plt>:
    1bec:	add	ip, pc, #0, 12
    1bf0:	add	ip, ip, #110592	; 0x1b000
    1bf4:	ldr	pc, [ip, #876]!	; 0x36c

00001bf8 <memset@plt>:
    1bf8:	add	ip, pc, #0, 12
    1bfc:	add	ip, ip, #110592	; 0x1b000
    1c00:	ldr	pc, [ip, #868]!	; 0x364

00001c04 <putchar@plt>:
    1c04:	add	ip, pc, #0, 12
    1c08:	add	ip, ip, #110592	; 0x1b000
    1c0c:	ldr	pc, [ip, #860]!	; 0x35c

00001c10 <strncpy@plt>:
    1c10:	add	ip, pc, #0, 12
    1c14:	add	ip, ip, #110592	; 0x1b000
    1c18:	ldr	pc, [ip, #852]!	; 0x354

00001c1c <__printf_chk@plt>:
    1c1c:	add	ip, pc, #0, 12
    1c20:	add	ip, ip, #110592	; 0x1b000
    1c24:	ldr	pc, [ip, #844]!	; 0x34c

00001c28 <strtod@plt>:
    1c28:	add	ip, pc, #0, 12
    1c2c:	add	ip, ip, #110592	; 0x1b000
    1c30:	ldr	pc, [ip, #836]!	; 0x344

00001c34 <write@plt>:
    1c34:	add	ip, pc, #0, 12
    1c38:	add	ip, ip, #110592	; 0x1b000
    1c3c:	ldr	pc, [ip, #828]!	; 0x33c

00001c40 <__fprintf_chk@plt>:
    1c40:	add	ip, pc, #0, 12
    1c44:	add	ip, ip, #110592	; 0x1b000
    1c48:	ldr	pc, [ip, #820]!	; 0x334

00001c4c <ceil@plt>:
    1c4c:	add	ip, pc, #0, 12
    1c50:	add	ip, ip, #110592	; 0x1b000
    1c54:	ldr	pc, [ip, #812]!	; 0x32c

00001c58 <rand@plt>:
    1c58:	add	ip, pc, #0, 12
    1c5c:	add	ip, ip, #110592	; 0x1b000
    1c60:	ldr	pc, [ip, #804]!	; 0x324

00001c64 <fclose@plt>:
    1c64:	add	ip, pc, #0, 12
    1c68:	add	ip, ip, #110592	; 0x1b000
    1c6c:	ldr	pc, [ip, #796]!	; 0x31c

00001c70 <sendto@plt>:
    1c70:	add	ip, pc, #0, 12
    1c74:	add	ip, ip, #110592	; 0x1b000
    1c78:	ldr	pc, [ip, #788]!	; 0x314

00001c7c <setlocale@plt>:
    1c7c:	add	ip, pc, #0, 12
    1c80:	add	ip, ip, #110592	; 0x1b000
    1c84:	ldr	pc, [ip, #780]!	; 0x30c

00001c88 <getnameinfo@plt>:
    1c88:	add	ip, pc, #0, 12
    1c8c:	add	ip, ip, #110592	; 0x1b000
    1c90:	ldr	pc, [ip, #772]!	; 0x304

00001c94 <strrchr@plt>:
    1c94:	add	ip, pc, #0, 12
    1c98:	add	ip, ip, #110592	; 0x1b000
    1c9c:	ldr	pc, [ip, #764]!	; 0x2fc

00001ca0 <fputc@plt>:
    1ca0:	add	ip, pc, #0, 12
    1ca4:	add	ip, ip, #110592	; 0x1b000
    1ca8:	ldr	pc, [ip, #756]!	; 0x2f4

00001cac <sscanf@plt>:
    1cac:	add	ip, pc, #0, 12
    1cb0:	add	ip, ip, #110592	; 0x1b000
    1cb4:	ldr	pc, [ip, #748]!	; 0x2ec

00001cb8 <getsockname@plt>:
    1cb8:	add	ip, pc, #0, 12
    1cbc:	add	ip, ip, #110592	; 0x1b000
    1cc0:	ldr	pc, [ip, #740]!	; 0x2e4

00001cc4 <recvmsg@plt>:
    1cc4:	add	ip, pc, #0, 12
    1cc8:	add	ip, ip, #110592	; 0x1b000
    1ccc:	ldr	pc, [ip, #732]!	; 0x2dc

00001cd0 <freeaddrinfo@plt>:
    1cd0:	add	ip, pc, #0, 12
    1cd4:	add	ip, ip, #110592	; 0x1b000
    1cd8:	ldr	pc, [ip, #724]!	; 0x2d4

00001cdc <getaddrinfo@plt>:
    1cdc:	add	ip, pc, #0, 12
    1ce0:	add	ip, ip, #110592	; 0x1b000
    1ce4:	ldr	pc, [ip, #716]!	; 0x2cc

00001ce8 <socket@plt>:
    1ce8:	add	ip, pc, #0, 12
    1cec:	add	ip, ip, #110592	; 0x1b000
    1cf0:	ldr	pc, [ip, #708]!	; 0x2c4

00001cf4 <fputs@plt>:
    1cf4:	add	ip, pc, #0, 12
    1cf8:	add	ip, ip, #110592	; 0x1b000
    1cfc:	ldr	pc, [ip, #700]!	; 0x2bc

00001d00 <strncmp@plt>:
    1d00:	add	ip, pc, #0, 12
    1d04:	add	ip, ip, #110592	; 0x1b000
    1d08:	ldr	pc, [ip, #692]!	; 0x2b4

00001d0c <abort@plt>:
    1d0c:	add	ip, pc, #0, 12
    1d10:	add	ip, ip, #110592	; 0x1b000
    1d14:	ldr	pc, [ip, #684]!	; 0x2ac

00001d18 <close@plt>:
    1d18:	add	ip, pc, #0, 12
    1d1c:	add	ip, ip, #110592	; 0x1b000
    1d20:	ldr	pc, [ip, #676]!	; 0x2a4

00001d24 <send@plt>:
    1d24:	add	ip, pc, #0, 12
    1d28:	add	ip, ip, #110592	; 0x1b000
    1d2c:	ldr	pc, [ip, #668]!	; 0x29c

00001d30 <connect@plt>:
    1d30:	add	ip, pc, #0, 12
    1d34:	add	ip, ip, #110592	; 0x1b000
    1d38:	ldr	pc, [ip, #660]!	; 0x294

00001d3c <__snprintf_chk@plt>:
    1d3c:	add	ip, pc, #0, 12
    1d40:	add	ip, ip, #110592	; 0x1b000
    1d44:	ldr	pc, [ip, #652]!	; 0x28c

Disassembly of section .text:

00001d48 <main@@Base-0xa8>:
    1d48:	ldr	r0, [pc, #4]	; 1d54 <__snprintf_chk@plt+0x18>
    1d4c:	add	r0, pc, r0
    1d50:	b	5640 <main@@Base+0x3850>
    1d54:	strdeq	fp, [r1], -ip
    1d58:	ldr	r0, [pc, #4]	; 1d64 <__snprintf_chk@plt+0x28>
    1d5c:	add	r0, pc, r0
    1d60:	b	5640 <main@@Base+0x3850>
    1d64:	andeq	fp, r1, r8, ror r3
    1d68:	ldr	r0, [pc, #4]	; 1d74 <__snprintf_chk@plt+0x38>
    1d6c:	add	r0, pc, r0
    1d70:	b	5640 <main@@Base+0x3850>
    1d74:	muleq	r1, r4, r3
    1d78:	ldr	r0, [pc, #4]	; 1d84 <__snprintf_chk@plt+0x48>
    1d7c:	add	r0, pc, r0
    1d80:	b	5640 <main@@Base+0x3850>
    1d84:	andeq	fp, r1, ip, lsr #12
    1d88:	ldr	r0, [pc, #4]	; 1d94 <__snprintf_chk@plt+0x58>
    1d8c:	add	r0, pc, r0
    1d90:	b	5640 <main@@Base+0x3850>
    1d94:	andeq	fp, r1, r4, asr #12
    1d98:	ldr	r0, [pc, #4]	; 1da4 <__snprintf_chk@plt+0x68>
    1d9c:	add	r0, pc, r0
    1da0:	b	5640 <main@@Base+0x3850>
    1da4:	muleq	r1, ip, r6
    1da8:	ldr	r0, [pc, #8]	; 1db8 <__snprintf_chk@plt+0x7c>
    1dac:	add	r0, pc, r0
    1db0:	add	r0, r0, #36	; 0x24
    1db4:	b	5640 <main@@Base+0x3850>
    1db8:	andeq	fp, r1, ip, lsl #13
    1dbc:	ldr	r0, [pc, #8]	; 1dcc <__snprintf_chk@plt+0x90>
    1dc0:	add	r0, pc, r0
    1dc4:	add	r0, r0, #72	; 0x48
    1dc8:	b	5640 <main@@Base+0x3850>
    1dcc:	andeq	fp, r1, r8, ror r6
    1dd0:	push	{r4, lr}
    1dd4:	mov	r0, #0
    1dd8:	bl	1a18 <times@plt>
    1ddc:	mov	r4, r0
    1de0:	bl	1b68 <getpid@plt>
    1de4:	add	r0, r4, r0
    1de8:	pop	{r4, lr}
    1dec:	b	1ba4 <srand@plt>

00001df0 <main@@Base>:
    1df0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1df4:	vpush	{d8-d14}
    1df8:	mov	r6, r1
    1dfc:	ldr	r1, [pc, #1332]	; 2338 <main@@Base+0x548>
    1e00:	mov	r7, r0
    1e04:	sub	sp, sp, #60	; 0x3c
    1e08:	add	r1, pc, r1
    1e0c:	mov	r0, #6
    1e10:	bl	1c7c <setlocale@plt>
    1e14:	ldr	r1, [pc, #1312]	; 233c <main@@Base+0x54c>
    1e18:	mov	r0, #1
    1e1c:	add	r1, pc, r1
    1e20:	bl	1c7c <setlocale@plt>
    1e24:	ldr	r4, [r6]
    1e28:	mov	r1, #47	; 0x2f
    1e2c:	mov	r0, r4
    1e30:	bl	1c94 <strrchr@plt>
    1e34:	ldr	r5, [pc, #1284]	; 2340 <main@@Base+0x550>
    1e38:	add	r5, pc, r5
    1e3c:	cmp	r0, #0
    1e40:	addne	r4, r0, #1
    1e44:	mov	r0, r4
    1e48:	bl	1b8c <strlen@plt>
    1e4c:	cmp	r0, #0
    1e50:	ble	1ebc <main@@Base+0xcc>
    1e54:	add	r0, r4, r0
    1e58:	ldrb	r3, [r0, #-1]
    1e5c:	cmp	r3, #54	; 0x36
    1e60:	beq	29f0 <main@@Base+0xc00>
    1e64:	cmp	r3, #52	; 0x34
    1e68:	beq	2a1c <main@@Base+0xc2c>
    1e6c:	ldr	r8, [pc, #1232]	; 2344 <main@@Base+0x554>
    1e70:	mov	r2, #3
    1e74:	add	r8, pc, r8
    1e78:	mov	r1, r8
    1e7c:	mov	r0, r4
    1e80:	bl	1d00 <strncmp@plt>
    1e84:	cmp	r0, #0
    1e88:	beq	2914 <main@@Base+0xb24>
    1e8c:	ldr	r1, [pc, #1204]	; 2348 <main@@Base+0x558>
    1e90:	mov	r0, r4
    1e94:	mov	r2, #7
    1e98:	add	r1, pc, r1
    1e9c:	bl	1d00 <strncmp@plt>
    1ea0:	cmp	r0, #0
    1ea4:	bne	1ebc <main@@Base+0xcc>
    1ea8:	ldr	r3, [pc, #1180]	; 234c <main@@Base+0x55c>
    1eac:	ldr	r2, [pc, #1180]	; 2350 <main@@Base+0x560>
    1eb0:	add	r3, pc, r3
    1eb4:	add	r2, pc, r2
    1eb8:	str	r2, [r3]
    1ebc:	ldr	r3, [pc, #1168]	; 2354 <main@@Base+0x564>
    1ec0:	ldr	ip, [pc, #1168]	; 2358 <main@@Base+0x568>
    1ec4:	add	r3, pc, r3
    1ec8:	mov	r1, r6
    1ecc:	mov	r0, r7
    1ed0:	add	r2, r3, #60	; 0x3c
    1ed4:	str	ip, [sp]
    1ed8:	bl	9540 <error@@Base+0x3398>
    1edc:	cmp	r0, #0
    1ee0:	blt	2c04 <main@@Base+0xe14>
    1ee4:	ldr	r4, [pc, #1136]	; 235c <main@@Base+0x56c>
    1ee8:	add	r4, pc, r4
    1eec:	ldr	r0, [r4]
    1ef0:	bl	565c <main@@Base+0x386c>
    1ef4:	ldr	r3, [pc, #1124]	; 2360 <main@@Base+0x570>
    1ef8:	add	r3, pc, r3
    1efc:	cmp	r0, #0
    1f00:	str	r0, [r3, #12]
    1f04:	beq	2bf4 <main@@Base+0xe04>
    1f08:	ldr	r3, [pc, #1108]	; 2364 <main@@Base+0x574>
    1f0c:	add	r3, pc, r3
    1f10:	ldr	r1, [r3, #40]	; 0x28
    1f14:	cmp	r1, #0
    1f18:	beq	2be8 <main@@Base+0xdf8>
    1f1c:	ldr	r2, [r3, #44]	; 0x2c
    1f20:	cmp	r1, r2
    1f24:	bhi	2be8 <main@@Base+0xdf8>
    1f28:	cmp	r2, #255	; 0xff
    1f2c:	bhi	2bdc <main@@Base+0xdec>
    1f30:	ldr	r2, [r3, #8]
    1f34:	sub	r2, r2, #1
    1f38:	cmp	r2, #9
    1f3c:	bhi	2bd0 <main@@Base+0xde0>
    1f40:	vldr	d6, [r3, #16]
    1f44:	vldr	d7, [pc, #972]	; 2318 <main@@Base+0x528>
    1f48:	vcmpe.f64	d6, d7
    1f4c:	vmrs	APSR_nzcv, fpscr
    1f50:	bmi	2ba8 <main@@Base+0xdb8>
    1f54:	vldr	d5, [r3]
    1f58:	vcmpe.f64	d5, d7
    1f5c:	vmrs	APSR_nzcv, fpscr
    1f60:	bmi	2ba8 <main@@Base+0xdb8>
    1f64:	vldr	d5, [r3, #24]
    1f68:	vcmpe.f64	d5, d7
    1f6c:	vmrs	APSR_nzcv, fpscr
    1f70:	bmi	2ba8 <main@@Base+0xdb8>
    1f74:	ldr	r1, [r3, #48]	; 0x30
    1f78:	ldr	r3, [pc, #1000]	; 2368 <main@@Base+0x578>
    1f7c:	cmp	r1, r3
    1f80:	bgt	2b9c <main@@Base+0xdac>
    1f84:	ldr	r2, [pc, #992]	; 236c <main@@Base+0x57c>
    1f88:	add	r2, pc, r2
    1f8c:	ldrh	r3, [r2, #104]	; 0x68
    1f90:	cmp	r3, #0
    1f94:	beq	1fa4 <main@@Base+0x1b4>
    1f98:	ldr	r2, [r2]
    1f9c:	cmp	r3, r2
    1fa0:	bne	2b90 <main@@Base+0xda0>
    1fa4:	ldr	r3, [pc, #964]	; 2370 <main@@Base+0x580>
    1fa8:	add	r3, pc, r3
    1fac:	vldr	d7, [r3, #232]	; 0xe8
    1fb0:	vcmpe.f64	d7, #0.0
    1fb4:	vmrs	APSR_nzcv, fpscr
    1fb8:	bmi	2b74 <main@@Base+0xd84>
    1fbc:	vldr	d6, [pc, #860]	; 2320 <main@@Base+0x530>
    1fc0:	ldr	r2, [pc, #940]	; 2374 <main@@Base+0x584>
    1fc4:	add	r2, pc, r2
    1fc8:	vcmpe.f64	d7, d6
    1fcc:	ldr	r1, [r2]
    1fd0:	vmrs	APSR_nzcv, fpscr
    1fd4:	vldrge	d5, [pc, #844]	; 2328 <main@@Base+0x538>
    1fd8:	vdivge.f64	d6, d7, d5
    1fdc:	vstrge	d6, [r3, #232]	; 0xe8
    1fe0:	cmp	r1, #10
    1fe4:	beq	2938 <main@@Base+0xb48>
    1fe8:	ldr	r2, [pc, #904]	; 2378 <main@@Base+0x588>
    1fec:	add	r2, pc, r2
    1ff0:	ldr	r3, [r2, #248]	; 0xf8
    1ff4:	cmp	r3, #0
    1ff8:	beq	2904 <main@@Base+0xb14>
    1ffc:	rev16	r3, r3
    2000:	strh	r3, [r2, #106]	; 0x6a
    2004:	strh	r1, [r2, #104]	; 0x68
    2008:	ldr	r3, [pc, #876]	; 237c <main@@Base+0x58c>
    200c:	mov	r0, #0
    2010:	add	r3, pc, r3
    2014:	mov	r1, #0
    2018:	mov	r2, #1
    201c:	strd	r0, [r3, #24]
    2020:	strd	r0, [r3]
    2024:	str	r2, [r3, #52]	; 0x34
    2028:	mov	r0, #0
    202c:	bl	6488 <error@@Base+0x2e0>
    2030:	mov	r0, #1
    2034:	bl	6488 <error@@Base+0x2e0>
    2038:	mov	r0, #2
    203c:	bl	6488 <error@@Base+0x2e0>
    2040:	bl	6508 <error@@Base+0x360>
    2044:	ldr	r2, [pc, #820]	; 2380 <main@@Base+0x590>
    2048:	add	r2, pc, r2
    204c:	ldr	r6, [r2, #12]
    2050:	ldr	r0, [r2]
    2054:	ldr	r3, [r2, #204]	; 0xcc
    2058:	ldr	r1, [r6, #32]
    205c:	cmp	r0, #2
    2060:	ldr	ip, [r2, #228]	; 0xe4
    2064:	movne	r0, #40	; 0x28
    2068:	moveq	r0, #20
    206c:	add	r3, r1, r3
    2070:	add	r3, r3, r0
    2074:	cmp	ip, #0
    2078:	str	r3, [r2, #216]	; 0xd8
    207c:	beq	28e0 <main@@Base+0xaf0>
    2080:	ldr	r1, [pc, #764]	; 2384 <main@@Base+0x594>
    2084:	mov	r0, #1
    2088:	add	r1, pc, r1
    208c:	str	r0, [r2, #212]	; 0xd4
    2090:	ldr	r2, [r1, #48]	; 0x30
    2094:	str	r0, [r1, #52]	; 0x34
    2098:	cmp	r2, #0
    209c:	ldrlt	r2, [pc, #708]	; 2368 <main@@Base+0x578>
    20a0:	strlt	r2, [r1, #48]	; 0x30
    20a4:	ldr	r2, [pc, #732]	; 2388 <main@@Base+0x598>
    20a8:	add	r2, pc, r2
    20ac:	ldr	r0, [r2, #48]	; 0x30
    20b0:	cmp	r3, r0
    20b4:	bls	2924 <main@@Base+0xb34>
    20b8:	ldr	r7, [pc, #716]	; 238c <main@@Base+0x59c>
    20bc:	ldr	r4, [pc, #716]	; 2390 <main@@Base+0x5a0>
    20c0:	add	r7, pc, r7
    20c4:	add	r4, pc, r4
    20c8:	ldr	r2, [r7, #44]	; 0x2c
    20cc:	ldr	r3, [r7, #8]
    20d0:	mov	r1, #88	; 0x58
    20d4:	mul	r3, r3, r2
    20d8:	mov	r0, r3
    20dc:	str	r3, [r4, #8]
    20e0:	bl	19c4 <calloc@plt>
    20e4:	cmp	r0, #0
    20e8:	str	r0, [r4, #4]
    20ec:	beq	2b84 <main@@Base+0xd94>
    20f0:	ldr	r3, [r6, #24]
    20f4:	cmp	r3, #0
    20f8:	beq	213c <main@@Base+0x34c>
    20fc:	ldr	r7, [r7, #32]
    2100:	cmp	r7, #1
    2104:	bls	213c <main@@Base+0x34c>
    2108:	ldr	r3, [pc, #644]	; 2394 <main@@Base+0x5a4>
    210c:	ldr	r0, [pc, r3]
    2110:	bl	1be0 <__strdup@plt>
    2114:	mov	r1, r4
    2118:	mov	r2, #768	; 0x300
    211c:	mov	r3, #0
    2120:	str	r0, [r1, #132]!	; 0x84
    2124:	str	r2, [sp]
    2128:	mov	r0, r7
    212c:	ldr	r2, [r6, #24]
    2130:	bl	9540 <error@@Base+0x3398>
    2134:	cmp	r0, #0
    2138:	blt	2c04 <main@@Base+0xe14>
    213c:	ldr	r4, [pc, #596]	; 2398 <main@@Base+0x5a8>
    2140:	add	r4, pc, r4
    2144:	add	r8, r4, #72	; 0x48
    2148:	ldr	r3, [r4, #12]
    214c:	mov	r0, r8
    2150:	add	r2, r4, #220	; 0xdc
    2154:	ldr	r3, [r3, #8]
    2158:	ldr	r1, [r4, #252]	; 0xfc
    215c:	blx	r3
    2160:	cmp	r0, #0
    2164:	blt	2b5c <main@@Base+0xd6c>
    2168:	ldr	r9, [pc, #556]	; 239c <main@@Base+0x5ac>
    216c:	mov	r3, #0
    2170:	add	r9, pc, r9
    2174:	mov	r6, #1
    2178:	ldr	ip, [r9, #40]	; 0x28
    217c:	ldr	lr, [r9, #8]
    2180:	sub	ip, ip, #1
    2184:	add	r7, r4, #16
    2188:	stmib	sp, {r3, r6}
    218c:	str	r3, [sp]
    2190:	mov	r0, r8
    2194:	mov	r2, r7
    2198:	mov	r3, #46	; 0x2e
    219c:	mov	r1, #28
    21a0:	mul	sl, lr, ip
    21a4:	ldr	r8, [r4, #8]
    21a8:	ldr	fp, [r4, #100]	; 0x64
    21ac:	bl	1c88 <getnameinfo@plt>
    21b0:	ldr	r2, [r4, #220]	; 0xdc
    21b4:	ldr	r1, [r4, #216]	; 0xd8
    21b8:	ldr	r3, [r9, #44]	; 0x2c
    21bc:	add	r1, r1, r2
    21c0:	str	r1, [sp, #4]
    21c4:	ldr	r1, [pc, #468]	; 23a0 <main@@Base+0x5b0>
    21c8:	str	r3, [sp]
    21cc:	mov	r2, fp
    21d0:	mov	r3, r7
    21d4:	add	r1, pc, r1
    21d8:	mov	r0, r6
    21dc:	bl	1c1c <__printf_chk@plt>
    21e0:	ldr	r3, [pc, #444]	; 23a4 <main@@Base+0x5b4>
    21e4:	ldr	r3, [r5, r3]
    21e8:	str	r3, [sp, #28]
    21ec:	ldr	r0, [r3]
    21f0:	bl	1a3c <fflush@plt>
    21f4:	cmp	sl, r8
    21f8:	bge	2300 <main@@Base+0x510>
    21fc:	vldr	d10, [pc, #276]	; 2318 <main@@Base+0x528>
    2200:	vldr	d12, [pc, #288]	; 2328 <main@@Base+0x538>
    2204:	vldr	d13, [pc, #292]	; 2330 <main@@Base+0x540>
    2208:	ldr	r3, [pc, #408]	; 23a8 <main@@Base+0x5b8>
    220c:	vmov.f64	d8, d10
    2210:	mov	fp, sl
    2214:	add	r3, pc, r3
    2218:	str	r3, [sp, #48]	; 0x30
    221c:	bl	59a0 <main@@Base+0x3bb0>
    2220:	ldr	r3, [pc, #388]	; 23ac <main@@Base+0x5bc>
    2224:	mov	r5, #88	; 0x58
    2228:	add	r3, pc, r3
    222c:	vmov.f64	d9, d8
    2230:	mul	r5, r5, fp
    2234:	mov	r4, fp
    2238:	mov	sl, #0
    223c:	mov	r7, r3
    2240:	vmov.f64	d11, d0
    2244:	b	2298 <main@@Base+0x4a8>
    2248:	vldr	d14, [r6, #40]	; 0x28
    224c:	vcmp.f64	d14, d8
    2250:	vmrs	APSR_nzcv, fpscr
    2254:	beq	26fc <main@@Base+0x90c>
    2258:	vcmp.f64	d9, d8
    225c:	vmrs	APSR_nzcv, fpscr
    2260:	bne	2270 <main@@Base+0x480>
    2264:	mov	r0, r6
    2268:	bl	5a88 <main@@Base+0x3c98>
    226c:	vadd.f64	d9, d0, d14
    2270:	ldr	r3, [pc, #312]	; 23b0 <main@@Base+0x5c0>
    2274:	add	sl, sl, #1
    2278:	add	r3, pc, r3
    227c:	ldr	r3, [r3, #52]	; 0x34
    2280:	cmp	sl, r3
    2284:	bcs	22ec <main@@Base+0x4fc>
    2288:	add	r4, r4, #1
    228c:	cmp	r4, r8
    2290:	add	r5, r5, #88	; 0x58
    2294:	bge	22ec <main@@Base+0x4fc>
    2298:	ldr	r3, [r7, #4]
    229c:	cmp	r4, fp
    22a0:	add	r6, r3, r5
    22a4:	ldr	r3, [r3, r5]
    22a8:	beq	2440 <main@@Base+0x650>
    22ac:	cmp	r3, #0
    22b0:	beq	2248 <main@@Base+0x458>
    22b4:	ldr	r3, [r6, #4]
    22b8:	cmp	r3, #0
    22bc:	beq	2288 <main@@Base+0x498>
    22c0:	ldr	r3, [pc, #236]	; 23b4 <main@@Base+0x5c4>
    22c4:	mov	r0, r4
    22c8:	add	r3, pc, r3
    22cc:	add	r4, r4, #1
    22d0:	ldr	r8, [r3, #8]
    22d4:	add	r5, r5, #88	; 0x58
    22d8:	mov	r1, r8
    22dc:	bl	a0d8 <error@@Base+0x3f30>
    22e0:	mla	r8, r0, r8, r8
    22e4:	cmp	r4, r8
    22e8:	blt	2298 <main@@Base+0x4a8>
    22ec:	vcmp.f64	d9, d8
    22f0:	vmrs	APSR_nzcv, fpscr
    22f4:	bne	27d4 <main@@Base+0x9e4>
    22f8:	cmp	r8, fp
    22fc:	bgt	221c <main@@Base+0x42c>
    2300:	mov	r0, #10
    2304:	bl	1c04 <putchar@plt>
    2308:	mov	r0, #0
    230c:	add	sp, sp, #60	; 0x3c
    2310:	vpop	{d8-d14}
    2314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...
    2324:	eormi	r0, r4, r0
    2328:	andeq	r0, r0, r0
    232c:	addmi	r4, pc, r0
    2330:	andeq	r0, r0, r0
    2334:	svccc	0x00f00000	; IMB
    2338:	andeq	r8, r0, r0, lsr #11
    233c:	andeq	r8, r0, r8, lsl sp
    2340:	andeq	fp, r1, r8, asr r0
    2344:	andeq	r8, r0, ip, ror #14
    2348:	andeq	r8, r0, r0, lsr #25
    234c:	andeq	fp, r1, r0, asr #22
    2350:			; <UNDEFINED> instruction: 0x000085b4
    2354:	muleq	r1, r0, r6
    2358:	andeq	r0, r1, r0, lsl r0
    235c:	andeq	fp, r1, r8, lsl #22
    2360:	andeq	ip, r1, r8, asr #12
    2364:	muleq	r1, ip, r5
    2368:	andeq	pc, r0, r8, ror #27
    236c:			; <UNDEFINED> instruction: 0x0001c5b8
    2370:	muleq	r1, r8, r5
    2374:	andeq	ip, r1, ip, ror r5
    2378:	andeq	ip, r1, r4, asr r5
    237c:	muleq	r1, r8, r4
    2380:	strdeq	ip, [r1], -r8
    2384:	andeq	fp, r1, r0, lsr #8
    2388:	andeq	fp, r1, r0, lsl #8
    238c:	andeq	fp, r1, r8, ror #7
    2390:	andeq	ip, r1, ip, ror r4
    2394:	andeq	fp, r1, r4, ror #17
    2398:	andeq	ip, r1, r0, lsl #8
    239c:	andeq	fp, r1, r8, lsr r3
    23a0:	muleq	r0, ip, sl
    23a4:	andeq	r0, r0, r8, asr r1
    23a8:	muleq	r1, r4, r2
    23ac:	andeq	ip, r1, r8, lsl r3
    23b0:	andeq	fp, r1, r0, lsr r2
    23b4:	andeq	fp, r1, r0, ror #3
    23b8:	strdeq	sl, [r1], -r8
    23bc:	strdeq	fp, [r1], -r4
    23c0:	andeq	r8, r0, ip, asr #13
    23c4:			; <UNDEFINED> instruction: 0x000096b8
    23c8:	andeq	r8, r0, ip, asr #12
    23cc:	andeq	fp, r1, ip, asr #29
    23d0:	strdeq	r8, [r0], -ip
    23d4:	andeq	r8, r0, r0, ror #11
    23d8:	andeq	fp, r1, r0, asr #28
    23dc:	andeq	sl, r1, ip, ror sp
    23e0:	andeq	fp, r1, r4, lsl #28
    23e4:	andeq	sl, r1, ip, lsr #26
    23e8:	strdeq	r8, [r0], -ip
    23ec:	andeq	r3, r0, ip, ror r4
    23f0:	strdeq	fp, [r1], -r8
    23f4:	andeq	sl, r1, r4, asr #23
    23f8:	ldrdeq	fp, [r1], -r8
    23fc:	andeq	fp, r1, r4, lsl ip
    2400:	strdeq	fp, [r1], -r4
    2404:	andeq	fp, r1, r8, asr #22
    2408:	andeq	fp, r1, ip, lsl fp
    240c:	blt	ba52a0 <__bss_end__@@Base+0xb86a90>
    2410:	strdeq	r8, [r0], -r4
    2414:	andeq	r8, r0, r4, ror #2
    2418:	strheq	r8, [r0], -r4
    241c:	andeq	r8, r0, r4, asr #1
    2420:	andeq	r8, r0, r0, ror r0
    2424:	andeq	r8, r0, r4, asr #32
    2428:	strdeq	sl, [r1], -r8
    242c:	strdeq	r7, [r0], -ip
    2430:	andeq	r7, r0, r8, asr #31
    2434:	muleq	r0, r8, pc	; <UNPREDICTABLE>
    2438:	andeq	r7, r0, r4, ror pc
    243c:	andeq	r7, r0, r4, asr #30
    2440:	cmp	r3, #0
    2444:	str	r3, [sp, #20]
    2448:	bne	276c <main@@Base+0x97c>
    244c:	vldr	d14, [r6, #40]	; 0x28
    2450:	vcmp.f64	d14, d8
    2454:	vmrs	APSR_nzcv, fpscr
    2458:	beq	26fc <main@@Base+0x90c>
    245c:	mov	r0, r6
    2460:	bl	5a88 <main@@Base+0x3c98>
    2464:	vadd.f64	d0, d14, d0
    2468:	vcmpe.f64	d11, d0
    246c:	vmrs	APSR_nzcv, fpscr
    2470:	vmovmi.f64	d9, d0
    2474:	bmi	2258 <main@@Base+0x468>
    2478:	ldr	r2, [r7, #12]
    247c:	mov	r0, r6
    2480:	ldr	r2, [r2, #20]
    2484:	blx	r2
    2488:	ldr	r2, [r6]
    248c:	ldr	r3, [sp, #20]
    2490:	cmp	r2, #0
    2494:	beq	2248 <main@@Base+0x458>
    2498:	str	r3, [sp, #36]	; 0x24
    249c:	ldr	r3, [r7, #4]
    24a0:	ldr	r0, [pc, #-156]	; 240c <main@@Base+0x61c>
    24a4:	sub	r1, r6, r3
    24a8:	ldr	r2, [pc, #-248]	; 23b8 <main@@Base+0x5c8>
    24ac:	asr	r1, r1, #3
    24b0:	add	r2, pc, r2
    24b4:	mul	r1, r0, r1
    24b8:	ldr	r2, [r2, #8]
    24bc:	mov	r0, r1
    24c0:	mov	r1, r2
    24c4:	str	r3, [sp, #20]
    24c8:	str	r2, [sp, #32]
    24cc:	str	r0, [sp, #24]
    24d0:	bl	a2c4 <error@@Base+0x411c>
    24d4:	mov	r0, #88	; 0x58
    24d8:	ldr	ip, [sp, #20]
    24dc:	ldr	r2, [sp, #32]
    24e0:	ldr	r3, [sp, #36]	; 0x24
    24e4:	mov	r9, r1
    24e8:	ldr	r1, [sp, #24]
    24ec:	sub	r1, r1, r9
    24f0:	mul	r0, r0, r1
    24f4:	add	r1, ip, r0
    24f8:	cmp	r6, r1
    24fc:	bls	2a04 <main@@Base+0xc14>
    2500:	ldr	r3, [ip, r0]
    2504:	cmp	r3, #0
    2508:	beq	25b0 <main@@Base+0x7c0>
    250c:	ldr	r3, [r1, #4]
    2510:	cmp	r3, #0
    2514:	bne	2538 <main@@Base+0x748>
    2518:	b	25b0 <main@@Base+0x7c0>
    251c:	ldr	r1, [r1, #88]	; 0x58
    2520:	cmp	r1, #0
    2524:	beq	25b0 <main@@Base+0x7c0>
    2528:	ldr	r0, [r3, #4]
    252c:	mov	r1, r3
    2530:	cmp	r0, #0
    2534:	beq	25b0 <main@@Base+0x7c0>
    2538:	add	r3, r1, #88	; 0x58
    253c:	cmp	r6, r3
    2540:	bhi	251c <main@@Base+0x72c>
    2544:	ldr	r0, [pc, #-400]	; 23bc <main@@Base+0x5cc>
    2548:	mov	lr, #88	; 0x58
    254c:	add	r0, pc, r0
    2550:	add	r3, r6, lr
    2554:	ldr	ip, [r0, #8]
    2558:	ldr	r0, [sp, #20]
    255c:	mla	ip, lr, ip, r0
    2560:	cmp	ip, r3
    2564:	bls	25b0 <main@@Base+0x7c0>
    2568:	vldr	d7, [r6, #128]	; 0x80
    256c:	vcmp.f64	d7, d8
    2570:	vmrs	APSR_nzcv, fpscr
    2574:	beq	25b0 <main@@Base+0x7c0>
    2578:	ldr	r0, [r6, #88]	; 0x58
    257c:	cmp	r0, #0
    2580:	beq	25a4 <main@@Base+0x7b4>
    2584:	b	2874 <main@@Base+0xa84>
    2588:	vldr	d7, [r3, #40]	; 0x28
    258c:	vcmp.f64	d7, d8
    2590:	vmrs	APSR_nzcv, fpscr
    2594:	beq	25b0 <main@@Base+0x7c0>
    2598:	ldr	r0, [r3]
    259c:	cmp	r0, #0
    25a0:	bne	2874 <main@@Base+0xa84>
    25a4:	add	r3, r3, #88	; 0x58
    25a8:	cmp	ip, r3
    25ac:	bhi	2588 <main@@Base+0x798>
    25b0:	mov	r1, r2
    25b4:	ldr	r0, [sp, #24]
    25b8:	bl	a0d8 <error@@Base+0x3f30>
    25bc:	cmp	r9, #0
    25c0:	add	r3, r0, #1
    25c4:	str	r3, [sp, #20]
    25c8:	beq	27a4 <main@@Base+0x9b4>
    25cc:	ldrh	r3, [r6, #8]
    25d0:	cmp	r3, #0
    25d4:	subne	r3, r6, #88	; 0x58
    25d8:	bne	2630 <main@@Base+0x840>
    25dc:	ldr	r1, [pc, #-548]	; 23c0 <main@@Base+0x5d0>
    25e0:	mov	r0, #1
    25e4:	add	r1, pc, r1
    25e8:	bl	1c1c <__printf_chk@plt>
    25ec:	vldr	d7, [r6, #48]	; 0x30
    25f0:	vcmp.f64	d7, d8
    25f4:	vmrs	APSR_nzcv, fpscr
    25f8:	bne	26d8 <main@@Base+0x8e8>
    25fc:	ldrb	r3, [r6, #72]	; 0x48
    2600:	cmp	r3, #0
    2604:	beq	261c <main@@Base+0x82c>
    2608:	ldr	r1, [pc, #-588]	; 23c4 <main@@Base+0x5d4>
    260c:	add	r2, r6, #72	; 0x48
    2610:	add	r1, pc, r1
    2614:	mov	r0, #1
    2618:	bl	1c1c <__printf_chk@plt>
    261c:	ldr	r3, [sp, #28]
    2620:	add	fp, fp, #1
    2624:	ldr	r0, [r3]
    2628:	bl	1a3c <fflush@plt>
    262c:	b	22b4 <main@@Base+0x4c4>
    2630:	ldrh	r2, [r3, #8]
    2634:	cmp	r2, #0
    2638:	bne	27f8 <main@@Base+0xa08>
    263c:	subs	r9, r9, #1
    2640:	sub	r3, r3, #88	; 0x58
    2644:	bne	2630 <main@@Base+0x840>
    2648:	add	r9, r6, #8
    264c:	mov	r0, r9
    2650:	bl	5e7c <main@@Base+0x408c>
    2654:	ldr	r2, [r6, #68]	; 0x44
    2658:	cmp	r2, #0
    265c:	beq	2670 <main@@Base+0x880>
    2660:	ldr	r1, [pc, #-672]	; 23c8 <main@@Base+0x5d8>
    2664:	mov	r0, #1
    2668:	add	r1, pc, r1
    266c:	bl	1c1c <__printf_chk@plt>
    2670:	ldr	r3, [pc, #-684]	; 23cc <main@@Base+0x5dc>
    2674:	add	r3, pc, r3
    2678:	ldr	r3, [r3, #256]	; 0x100
    267c:	cmp	r3, #0
    2680:	beq	25ec <main@@Base+0x7fc>
    2684:	ldr	r3, [r6, #56]	; 0x38
    2688:	cmp	r3, #0
    268c:	beq	25ec <main@@Base+0x7fc>
    2690:	cmp	r3, #64	; 0x40
    2694:	movle	r2, #65	; 0x41
    2698:	ble	26a8 <main@@Base+0x8b8>
    269c:	cmp	r3, #128	; 0x80
    26a0:	movgt	r2, #256	; 0x100
    26a4:	movle	r2, #129	; 0x81
    26a8:	sub	r2, r2, r3
    26ac:	ldr	r3, [sp, #20]
    26b0:	cmp	r3, r2
    26b4:	beq	25ec <main@@Base+0x7fc>
    26b8:	ldr	r1, [pc, #-752]	; 23d0 <main@@Base+0x5e0>
    26bc:	mov	r0, #1
    26c0:	add	r1, pc, r1
    26c4:	bl	1c1c <__printf_chk@plt>
    26c8:	vldr	d7, [r6, #48]	; 0x30
    26cc:	vcmp.f64	d7, d8
    26d0:	vmrs	APSR_nzcv, fpscr
    26d4:	beq	25fc <main@@Base+0x80c>
    26d8:	vldr	d6, [r6, #40]	; 0x28
    26dc:	ldr	r1, [pc, #-784]	; 23d4 <main@@Base+0x5e4>
    26e0:	mov	r0, #1
    26e4:	add	r1, pc, r1
    26e8:	vsub.f64	d7, d7, d6
    26ec:	vmul.f64	d7, d7, d12
    26f0:	vmov	r2, r3, d7
    26f4:	bl	1c1c <__printf_chk@plt>
    26f8:	b	25fc <main@@Base+0x80c>
    26fc:	ldr	r3, [pc, #-812]	; 23d8 <main@@Base+0x5e8>
    2700:	add	r3, pc, r3
    2704:	vldr	d7, [r3, #232]	; 0xe8
    2708:	vcmp.f64	d7, d8
    270c:	vmrs	APSR_nzcv, fpscr
    2710:	beq	2724 <main@@Base+0x934>
    2714:	vadd.f64	d7, d7, d10
    2718:	vcmpe.f64	d11, d7
    271c:	vmrs	APSR_nzcv, fpscr
    2720:	bmi	286c <main@@Base+0xa7c>
    2724:	ldr	r3, [pc, #-848]	; 23dc <main@@Base+0x5ec>
    2728:	mov	r0, r4
    272c:	add	r3, pc, r3
    2730:	ldr	r1, [r3, #8]
    2734:	bl	a0d8 <error@@Base+0x3f30>
    2738:	ldr	r3, [pc, #-864]	; 23e0 <main@@Base+0x5f0>
    273c:	add	r3, pc, r3
    2740:	ldr	r3, [r3, #12]
    2744:	ldr	r3, [r3, #12]
    2748:	add	r1, r0, #1
    274c:	mov	r0, r6
    2750:	blx	r3
    2754:	vldr	d14, [r6, #40]	; 0x28
    2758:	vcmp.f64	d14, d8
    275c:	vmrs	APSR_nzcv, fpscr
    2760:	beq	27c8 <main@@Base+0x9d8>
    2764:	vmov.f64	d10, d14
    2768:	b	2258 <main@@Base+0x468>
    276c:	ldr	r1, [pc, #-872]	; 240c <main@@Base+0x61c>
    2770:	asr	r2, r5, #3
    2774:	ldr	r3, [pc, #-920]	; 23e4 <main@@Base+0x5f4>
    2778:	mul	r2, r1, r2
    277c:	add	r3, pc, r3
    2780:	mov	r0, r2
    2784:	str	r2, [sp, #24]
    2788:	ldr	r2, [r3, #8]
    278c:	mov	r1, r2
    2790:	str	r2, [sp, #20]
    2794:	bl	a2c4 <error@@Base+0x411c>
    2798:	ldr	r2, [sp, #20]
    279c:	mov	r9, r1
    27a0:	b	25b0 <main@@Base+0x7c0>
    27a4:	ldr	r1, [pc, #-964]	; 23e8 <main@@Base+0x5f8>
    27a8:	mov	r2, r3
    27ac:	add	r1, pc, r1
    27b0:	mov	r0, #1
    27b4:	bl	1c1c <__printf_chk@plt>
    27b8:	ldrh	r3, [r6, #8]
    27bc:	cmp	r3, #0
    27c0:	beq	25dc <main@@Base+0x7ec>
    27c4:	b	2648 <main@@Base+0x858>
    27c8:	vcmp.f64	d9, d8
    27cc:	vmrs	APSR_nzcv, fpscr
    27d0:	beq	2b68 <main@@Base+0xd78>
    27d4:	bl	59a0 <main@@Base+0x3bb0>
    27d8:	ldr	r0, [pc, #-1012]	; 23ec <main@@Base+0x5fc>
    27dc:	add	r0, pc, r0
    27e0:	vsub.f64	d0, d9, d0
    27e4:	vcmp.f64	d0, d8
    27e8:	vmrs	APSR_nzcv, fpscr
    27ec:	vmovmi.f64	d0, d8
    27f0:	bl	57d8 <main@@Base+0x39e8>
    27f4:	b	22f8 <main@@Base+0x508>
    27f8:	add	r9, r6, #8
    27fc:	mov	r1, r9
    2800:	add	r0, r3, #8
    2804:	str	r3, [sp, #24]
    2808:	bl	71b4 <error@@Base+0x100c>
    280c:	cmp	r0, #0
    2810:	beq	264c <main@@Base+0x85c>
    2814:	ldr	r3, [sp, #24]
    2818:	ldr	r1, [r6, #68]	; 0x44
    281c:	ldr	r0, [r3, #68]	; 0x44
    2820:	cmp	r0, r1
    2824:	beq	2844 <main@@Base+0xa54>
    2828:	cmp	r0, #0
    282c:	cmpne	r1, #0
    2830:	beq	264c <main@@Base+0x85c>
    2834:	bl	19e8 <strcmp@plt>
    2838:	ldr	r3, [sp, #24]
    283c:	cmp	r0, #0
    2840:	bne	264c <main@@Base+0x85c>
    2844:	ldr	r2, [pc, #-1116]	; 23f0 <main@@Base+0x600>
    2848:	add	r2, pc, r2
    284c:	ldr	r2, [r2, #256]	; 0x100
    2850:	cmp	r2, #0
    2854:	beq	25ec <main@@Base+0x7fc>
    2858:	ldr	r2, [r3, #56]	; 0x38
    285c:	ldr	r3, [r6, #56]	; 0x38
    2860:	cmp	r2, r3
    2864:	bne	264c <main@@Base+0x85c>
    2868:	b	25ec <main@@Base+0x7fc>
    286c:	vmov.f64	d9, d7
    2870:	b	22ec <main@@Base+0x4fc>
    2874:	ldr	r0, [r3, #4]
    2878:	cmp	r0, #0
    287c:	beq	25b0 <main@@Base+0x7c0>
    2880:	ldrb	r0, [r3, #72]	; 0x48
    2884:	cmp	r0, #0
    2888:	beq	25b0 <main@@Base+0x7c0>
    288c:	cmp	r1, #0
    2890:	beq	2970 <main@@Base+0xb80>
    2894:	mov	r1, r3
    2898:	mov	r2, #88	; 0x58
    289c:	mov	r0, r6
    28a0:	str	r3, [sp, #20]
    28a4:	bl	1a6c <memcpy@plt>
    28a8:	ldr	r3, [sp, #20]
    28ac:	mov	r2, #88	; 0x58
    28b0:	mov	r0, r3
    28b4:	mov	r1, #0
    28b8:	bl	1bf8 <memset@plt>
    28bc:	ldr	r2, [r6]
    28c0:	ldr	r3, [sp, #20]
    28c4:	cmp	r2, #0
    28c8:	vstr	d13, [r3, #40]	; 0x28
    28cc:	beq	2248 <main@@Base+0x458>
    28d0:	ldr	r3, [sp, #48]	; 0x30
    28d4:	ldr	r0, [sp, #24]
    28d8:	ldr	r2, [r3, #8]
    28dc:	b	278c <main@@Base+0x99c>
    28e0:	ldr	r0, [pc, #-1268]	; 23f4 <main@@Base+0x604>
    28e4:	add	r0, pc, r0
    28e8:	ldr	r0, [r0, #48]	; 0x30
    28ec:	cmp	r0, #0
    28f0:	bge	20b0 <main@@Base+0x2c0>
    28f4:	cmp	r1, #40	; 0x28
    28f8:	rsbls	r1, r1, #40	; 0x28
    28fc:	strls	r1, [r2, #220]	; 0xdc
    2900:	b	20b8 <main@@Base+0x2c8>
    2904:	ldr	r3, [r0, #28]
    2908:	cmp	r3, #0
    290c:	bne	2008 <main@@Base+0x218>
    2910:	b	2028 <main@@Base+0x238>
    2914:	ldr	r3, [pc, #-1316]	; 23f8 <main@@Base+0x608>
    2918:	add	r3, pc, r3
    291c:	str	r8, [r3]
    2920:	b	1e8c <main@@Base+0x9c>
    2924:	ldr	r2, [pc, #-1328]	; 23fc <main@@Base+0x60c>
    2928:	sub	r3, r0, r3
    292c:	add	r2, pc, r2
    2930:	str	r3, [r2, #220]	; 0xdc
    2934:	b	20b8 <main@@Base+0x2c8>
    2938:	ldr	r3, [r2, #240]	; 0xf0
    293c:	cmp	r3, #0
    2940:	beq	2a0c <main@@Base+0xc1c>
    2944:	ldr	ip, [pc, #-1356]	; 2400 <main@@Base+0x610>
    2948:	lsl	r3, r3, #20
    294c:	add	ip, pc, ip
    2950:	and	r3, r3, #267386880	; 0xff00000
    2954:	ldr	r2, [ip, #244]	; 0xf4
    2958:	bic	r2, r2, #-16777216	; 0xff000000
    295c:	bic	r2, r2, #15728640	; 0xf00000
    2960:	orr	r3, r3, r2
    2964:	rev	r3, r3
    2968:	str	r3, [ip, #76]	; 0x4c
    296c:	b	1fe8 <main@@Base+0x1f8>
    2970:	sub	r1, r3, r6
    2974:	ldr	r0, [pc, #-1392]	; 240c <main@@Base+0x61c>
    2978:	asr	r1, r1, #3
    297c:	mla	r1, r0, r1, r9
    2980:	cmp	r2, r1
    2984:	bhi	2894 <main@@Base+0xaa4>
    2988:	ldr	r0, [sp, #20]
    298c:	sub	r1, r6, #88	; 0x58
    2990:	cmp	r0, r1
    2994:	str	r1, [sp, #44]	; 0x2c
    2998:	bhi	2a40 <main@@Base+0xc50>
    299c:	add	r0, r3, #8
    29a0:	str	r6, [sp, #36]	; 0x24
    29a4:	str	r4, [sp, #40]	; 0x28
    29a8:	str	r0, [sp, #32]
    29ac:	mov	r6, r3
    29b0:	mov	r4, r1
    29b4:	str	r2, [sp, #52]	; 0x34
    29b8:	b	29cc <main@@Base+0xbdc>
    29bc:	ldr	r3, [sp, #20]
    29c0:	sub	r4, r4, #88	; 0x58
    29c4:	cmp	r3, r4
    29c8:	bhi	2a30 <main@@Base+0xc40>
    29cc:	ldr	r1, [sp, #32]
    29d0:	add	r0, r4, #8
    29d4:	bl	71b4 <error@@Base+0x100c>
    29d8:	cmp	r0, #0
    29dc:	beq	29bc <main@@Base+0xbcc>
    29e0:	mov	r3, r6
    29e4:	ldr	r4, [sp, #40]	; 0x28
    29e8:	ldr	r6, [sp, #36]	; 0x24
    29ec:	b	2894 <main@@Base+0xaa4>
    29f0:	ldr	r3, [pc, #-1524]	; 2404 <main@@Base+0x614>
    29f4:	mov	r2, #10
    29f8:	add	r3, pc, r3
    29fc:	str	r2, [r3]
    2a00:	b	1e6c <main@@Base+0x7c>
    2a04:	mov	r1, r3
    2a08:	b	2544 <main@@Base+0x754>
    2a0c:	ldr	r2, [r2, #244]	; 0xf4
    2a10:	cmp	r2, #0
    2a14:	beq	1fe8 <main@@Base+0x1f8>
    2a18:	b	2944 <main@@Base+0xb54>
    2a1c:	ldr	r3, [pc, #-1564]	; 2408 <main@@Base+0x618>
    2a20:	mov	r2, #2
    2a24:	add	r3, pc, r3
    2a28:	str	r2, [r3]
    2a2c:	b	1e6c <main@@Base+0x7c>
    2a30:	mov	r3, r6
    2a34:	ldr	r4, [sp, #40]	; 0x28
    2a38:	ldr	r6, [sp, #36]	; 0x24
    2a3c:	ldr	r2, [sp, #52]	; 0x34
    2a40:	ldr	r1, [r3, #56]	; 0x38
    2a44:	cmp	r1, #0
    2a48:	beq	25b0 <main@@Base+0x7c0>
    2a4c:	cmp	r1, #64	; 0x40
    2a50:	movle	r0, #65	; 0x41
    2a54:	ble	2a64 <main@@Base+0xc74>
    2a58:	cmp	r1, #128	; 0x80
    2a5c:	movgt	r0, #256	; 0x100
    2a60:	movle	r0, #129	; 0x81
    2a64:	ldr	lr, [sp, #20]
    2a68:	ldr	ip, [sp, #44]	; 0x2c
    2a6c:	sub	r1, r0, r1
    2a70:	cmp	lr, ip
    2a74:	str	r1, [sp, #32]
    2a78:	bhi	2ae0 <main@@Base+0xcf0>
    2a7c:	mov	r0, #65	; 0x41
    2a80:	mov	r1, ip
    2a84:	ldr	ip, [r1]
    2a88:	cmp	ip, #0
    2a8c:	beq	2ad0 <main@@Base+0xce0>
    2a90:	ldr	ip, [r1, #4]
    2a94:	cmp	ip, #0
    2a98:	bne	2ad0 <main@@Base+0xce0>
    2a9c:	ldr	lr, [r1, #56]	; 0x38
    2aa0:	cmp	lr, #0
    2aa4:	beq	2ad0 <main@@Base+0xce0>
    2aa8:	cmp	lr, #64	; 0x40
    2aac:	movle	ip, r0
    2ab0:	ble	2ac0 <main@@Base+0xcd0>
    2ab4:	cmp	lr, #128	; 0x80
    2ab8:	movgt	ip, #256	; 0x100
    2abc:	movle	ip, #129	; 0x81
    2ac0:	sub	ip, ip, lr
    2ac4:	ldr	lr, [sp, #32]
    2ac8:	cmp	lr, ip
    2acc:	bgt	2b10 <main@@Base+0xd20>
    2ad0:	ldr	ip, [sp, #20]
    2ad4:	sub	r1, r1, #88	; 0x58
    2ad8:	cmp	ip, r1
    2adc:	bls	2a84 <main@@Base+0xc94>
    2ae0:	mov	r1, r2
    2ae4:	ldr	r0, [sp, #24]
    2ae8:	str	r3, [sp, #36]	; 0x24
    2aec:	str	r2, [sp, #20]
    2af0:	bl	a0d8 <error@@Base+0x3f30>
    2af4:	ldr	r3, [sp, #32]
    2af8:	ldr	r2, [sp, #20]
    2afc:	add	r0, r0, #1
    2b00:	cmp	r0, r3
    2b04:	ldrge	r3, [sp, #36]	; 0x24
    2b08:	bge	2894 <main@@Base+0xaa4>
    2b0c:	b	25b0 <main@@Base+0x7c0>
    2b10:	str	r3, [sp, #40]	; 0x28
    2b14:	mov	r3, r1
    2b18:	ldr	r1, [sp, #20]
    2b1c:	str	r2, [sp, #36]	; 0x24
    2b20:	sub	r0, r3, r1
    2b24:	mov	r1, r2
    2b28:	ldr	r2, [pc, #-1828]	; 240c <main@@Base+0x61c>
    2b2c:	asr	r0, r0, #3
    2b30:	sub	r3, lr, ip
    2b34:	mul	r0, r2, r0
    2b38:	str	r3, [sp, #20]
    2b3c:	bl	a0d8 <error@@Base+0x3f30>
    2b40:	ldr	r3, [sp, #20]
    2b44:	ldr	r2, [sp, #36]	; 0x24
    2b48:	add	r0, r0, #1
    2b4c:	add	r3, r0, r3
    2b50:	str	r3, [sp, #32]
    2b54:	ldr	r3, [sp, #40]	; 0x28
    2b58:	b	2ae0 <main@@Base+0xcf0>
    2b5c:	ldr	r0, [pc, #-1876]	; 2410 <main@@Base+0x620>
    2b60:	add	r0, pc, r0
    2b64:	bl	5e18 <main@@Base+0x4028>
    2b68:	ldr	r0, [pc, #-1884]	; 2414 <main@@Base+0x624>
    2b6c:	add	r0, pc, r0
    2b70:	bl	61a8 <error@@Base>
    2b74:	ldr	r0, [pc, #-1892]	; 2418 <main@@Base+0x628>
    2b78:	vmov	r2, r3, d7
    2b7c:	add	r0, pc, r0
    2b80:	bl	5e18 <main@@Base+0x4028>
    2b84:	ldr	r0, [pc, #-1904]	; 241c <main@@Base+0x62c>
    2b88:	add	r0, pc, r0
    2b8c:	bl	61a8 <error@@Base>
    2b90:	ldr	r0, [pc, #-1912]	; 2420 <main@@Base+0x630>
    2b94:	add	r0, pc, r0
    2b98:	bl	5e18 <main@@Base+0x4028>
    2b9c:	ldr	r0, [pc, #-1920]	; 2424 <main@@Base+0x634>
    2ba0:	add	r0, pc, r0
    2ba4:	bl	5e18 <main@@Base+0x4028>
    2ba8:	ldr	r1, [pc, #-1928]	; 2428 <main@@Base+0x638>
    2bac:	ldr	r0, [pc, #-1928]	; 242c <main@@Base+0x63c>
    2bb0:	add	r1, pc, r1
    2bb4:	vmov	r2, r3, d6
    2bb8:	ldrd	r6, [r1, #24]
    2bbc:	ldrd	r4, [r1]
    2bc0:	add	r0, pc, r0
    2bc4:	strd	r6, [sp, #8]
    2bc8:	strd	r4, [sp]
    2bcc:	bl	5e18 <main@@Base+0x4028>
    2bd0:	ldr	r0, [pc, #-1960]	; 2430 <main@@Base+0x640>
    2bd4:	add	r0, pc, r0
    2bd8:	bl	5e18 <main@@Base+0x4028>
    2bdc:	ldr	r0, [pc, #-1968]	; 2434 <main@@Base+0x644>
    2be0:	add	r0, pc, r0
    2be4:	bl	5e18 <main@@Base+0x4028>
    2be8:	ldr	r0, [pc, #-1976]	; 2438 <main@@Base+0x648>
    2bec:	add	r0, pc, r0
    2bf0:	bl	5e18 <main@@Base+0x4028>
    2bf4:	ldr	r0, [pc, #-1984]	; 243c <main@@Base+0x64c>
    2bf8:	ldr	r1, [r4]
    2bfc:	add	r0, pc, r0
    2c00:	bl	5e18 <main@@Base+0x4028>
    2c04:	mov	r0, #2
    2c08:	bl	1b74 <exit@plt>
    2c0c:	mov	fp, #0
    2c10:	mov	lr, #0
    2c14:	pop	{r1}		; (ldr r1, [sp], #4)
    2c18:	mov	r2, sp
    2c1c:	push	{r2}		; (str r2, [sp, #-4]!)
    2c20:	push	{r0}		; (str r0, [sp, #-4]!)
    2c24:	ldr	sl, [pc, #40]	; 2c54 <main@@Base+0xe64>
    2c28:	add	r3, pc, #36	; 0x24
    2c2c:	add	sl, sl, r3
    2c30:	ldr	ip, [pc, #32]	; 2c58 <main@@Base+0xe68>
    2c34:	ldr	ip, [sl, ip]
    2c38:	push	{ip}		; (str ip, [sp, #-4]!)
    2c3c:	ldr	r3, [pc, #24]	; 2c5c <main@@Base+0xe6c>
    2c40:	ldr	r3, [sl, r3]
    2c44:	ldr	r0, [pc, #20]	; 2c60 <main@@Base+0xe70>
    2c48:	ldr	r0, [sl, r0]
    2c4c:	bl	1b2c <__libc_start_main@plt>
    2c50:	bl	1d0c <abort@plt>
    2c54:	andeq	sl, r1, r4, asr #4
    2c58:	andeq	r0, r0, ip, lsr r1
    2c5c:	andeq	r0, r0, r4, asr r1
    2c60:	andeq	r0, r0, ip, asr r1
    2c64:	ldr	r3, [pc, #20]	; 2c80 <main@@Base+0xe90>
    2c68:	ldr	r2, [pc, #20]	; 2c84 <main@@Base+0xe94>
    2c6c:	add	r3, pc, r3
    2c70:	ldr	r2, [r3, r2]
    2c74:	cmp	r2, #0
    2c78:	bxeq	lr
    2c7c:	b	1b44 <__gmon_start__@plt>
    2c80:	andeq	sl, r1, r4, lsr #4
    2c84:	andeq	r0, r0, r0, asr r1
    2c88:	ldr	r3, [pc, #52]	; 2cc4 <main@@Base+0xed4>
    2c8c:	ldr	r0, [pc, #52]	; 2cc8 <main@@Base+0xed8>
    2c90:	add	r3, pc, r3
    2c94:	add	r0, pc, r0
    2c98:	add	r3, r3, #3
    2c9c:	sub	r3, r3, r0
    2ca0:	cmp	r3, #6
    2ca4:	ldr	r3, [pc, #32]	; 2ccc <main@@Base+0xedc>
    2ca8:	add	r3, pc, r3
    2cac:	bxls	lr
    2cb0:	ldr	r2, [pc, #24]	; 2cd0 <main@@Base+0xee0>
    2cb4:	ldr	r3, [r3, r2]
    2cb8:	cmp	r3, #0
    2cbc:	bxeq	lr
    2cc0:	bx	r3
    2cc4:	andeq	sl, r1, r4, ror #26
    2cc8:	andeq	sl, r1, r0, ror #26
    2ccc:	andeq	sl, r1, r8, ror #3
    2cd0:	andeq	r0, r0, r4, asr #2
    2cd4:	ldr	r1, [pc, #56]	; 2d14 <main@@Base+0xf24>
    2cd8:	ldr	r0, [pc, #56]	; 2d18 <main@@Base+0xf28>
    2cdc:	add	r1, pc, r1
    2ce0:	add	r0, pc, r0
    2ce4:	sub	r1, r1, r0
    2ce8:	ldr	r3, [pc, #44]	; 2d1c <main@@Base+0xf2c>
    2cec:	asr	r1, r1, #2
    2cf0:	add	r3, pc, r3
    2cf4:	add	r1, r1, r1, lsr #31
    2cf8:	asrs	r1, r1, #1
    2cfc:	bxeq	lr
    2d00:	ldr	r2, [pc, #24]	; 2d20 <main@@Base+0xf30>
    2d04:	ldr	r3, [r3, r2]
    2d08:	cmp	r3, #0
    2d0c:	bxeq	lr
    2d10:	bx	r3
    2d14:	andeq	sl, r1, r8, lsl sp
    2d18:	andeq	sl, r1, r4, lsl sp
    2d1c:	andeq	sl, r1, r0, lsr #3
    2d20:	andeq	r0, r0, r4, ror #2
    2d24:	ldr	r3, [pc, #76]	; 2d78 <main@@Base+0xf88>
    2d28:	ldr	r2, [pc, #76]	; 2d7c <main@@Base+0xf8c>
    2d2c:	add	r3, pc, r3
    2d30:	add	r2, pc, r2
    2d34:	ldrb	r3, [r3]
    2d38:	cmp	r3, #0
    2d3c:	bxne	lr
    2d40:	ldr	r3, [pc, #56]	; 2d80 <main@@Base+0xf90>
    2d44:	push	{r4, lr}
    2d48:	ldr	r3, [r2, r3]
    2d4c:	cmp	r3, #0
    2d50:	beq	2d60 <main@@Base+0xf70>
    2d54:	ldr	r3, [pc, #40]	; 2d84 <main@@Base+0xf94>
    2d58:	ldr	r0, [pc, r3]
    2d5c:	bl	19f4 <__cxa_finalize@plt>
    2d60:	bl	2c88 <main@@Base+0xe98>
    2d64:	ldr	r3, [pc, #28]	; 2d88 <main@@Base+0xf98>
    2d68:	mov	r2, #1
    2d6c:	add	r3, pc, r3
    2d70:	strb	r2, [r3]
    2d74:	pop	{r4, pc}
    2d78:	andeq	sl, r1, ip, asr #25
    2d7c:	andeq	sl, r1, r0, ror #2
    2d80:	andeq	r0, r0, r0, asr #2
    2d84:	andeq	sl, r1, r4, lsr #5
    2d88:	andeq	sl, r1, ip, lsl #25
    2d8c:	ldr	r0, [pc, #56]	; 2dcc <main@@Base+0xfdc>
    2d90:	ldr	r3, [pc, #56]	; 2dd0 <main@@Base+0xfe0>
    2d94:	add	r0, pc, r0
    2d98:	ldr	r2, [r0]
    2d9c:	add	r3, pc, r3
    2da0:	cmp	r2, #0
    2da4:	bne	2dac <main@@Base+0xfbc>
    2da8:	b	2cd4 <main@@Base+0xee4>
    2dac:	ldr	r2, [pc, #32]	; 2dd4 <main@@Base+0xfe4>
    2db0:	ldr	r3, [r3, r2]
    2db4:	cmp	r3, #0
    2db8:	beq	2da8 <main@@Base+0xfb8>
    2dbc:	push	{r4, lr}
    2dc0:	blx	r3
    2dc4:	pop	{r4, lr}
    2dc8:	b	2cd4 <main@@Base+0xee4>
    2dcc:			; <UNDEFINED> instruction: 0x00019fb0
    2dd0:	strdeq	sl, [r1], -r4
    2dd4:	andeq	r0, r0, r0, ror #2
    2dd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2ddc:	mov	r8, r0
    2de0:	ldr	r4, [pc, #1000]	; 31d0 <main@@Base+0x13e0>
    2de4:	ldr	r3, [pc, #1000]	; 31d4 <main@@Base+0x13e4>
    2de8:	ldr	r2, [pc, #1000]	; 31d8 <main@@Base+0x13e8>
    2dec:	add	r4, pc, r4
    2df0:	add	r3, pc, r3
    2df4:	add	r3, r3, #512	; 0x200
    2df8:	ldr	r6, [r4, r2]
    2dfc:	ldrh	r0, [r3]
    2e00:	sub	sp, sp, #1056	; 0x420
    2e04:	sub	sp, sp, #4
    2e08:	ldr	r3, [r6]
    2e0c:	cmp	r0, #0
    2e10:	str	r3, [sp, #1052]	; 0x41c
    2e14:	bne	2e8c <main@@Base+0x109c>
    2e18:	ldr	r0, [pc, #956]	; 31dc <main@@Base+0x13ec>
    2e1c:	add	r0, pc, r0
    2e20:	bl	1b14 <getenv@plt>
    2e24:	subs	r5, r0, #0
    2e28:	beq	3094 <main@@Base+0x12a4>
    2e2c:	ldr	r0, [pc, #940]	; 31e0 <main@@Base+0x13f0>
    2e30:	add	r0, pc, r0
    2e34:	bl	1b14 <getenv@plt>
    2e38:	subs	r7, r0, #0
    2e3c:	beq	3088 <main@@Base+0x1298>
    2e40:	add	r3, sp, #24
    2e44:	mov	r2, #0
    2e48:	mov	r1, r7
    2e4c:	mov	r0, r5
    2e50:	bl	1cdc <getaddrinfo@plt>
    2e54:	cmp	r0, #0
    2e58:	bne	30a0 <main@@Base+0x12b0>
    2e5c:	ldr	r4, [pc, #896]	; 31e4 <main@@Base+0x13f4>
    2e60:	ldr	r5, [sp, #24]
    2e64:	add	r4, pc, r4
    2e68:	add	r4, r4, #512	; 0x200
    2e6c:	ldr	r2, [r5, #16]
    2e70:	ldr	r1, [r5, #20]
    2e74:	mov	r3, #28
    2e78:	mov	r0, r4
    2e7c:	bl	1ae4 <__memcpy_chk@plt>
    2e80:	mov	r0, r5
    2e84:	bl	1cd0 <freeaddrinfo@plt>
    2e88:	ldrh	r0, [r4]
    2e8c:	mov	r2, #0
    2e90:	mov	r1, #1
    2e94:	bl	1ce8 <socket@plt>
    2e98:	subs	sl, r0, #0
    2e9c:	blt	31c0 <main@@Base+0x13d0>
    2ea0:	ldr	r4, [pc, #832]	; 31e8 <main@@Base+0x13f8>
    2ea4:	mov	r2, #28
    2ea8:	add	r4, pc, r4
    2eac:	add	r1, r4, #512	; 0x200
    2eb0:	bl	1d30 <connect@plt>
    2eb4:	cmp	r0, #0
    2eb8:	blt	2ef4 <main@@Base+0x1104>
    2ebc:	ldr	r2, [pc, #808]	; 31ec <main@@Base+0x13fc>
    2ec0:	add	r7, sp, #32
    2ec4:	add	r2, pc, r2
    2ec8:	mov	r3, #1024	; 0x400
    2ecc:	sub	r5, r7, #4
    2ed0:	str	r8, [sp, #4]
    2ed4:	str	r2, [sp]
    2ed8:	mov	r0, r5
    2edc:	mov	r1, r3
    2ee0:	mov	r2, #1
    2ee4:	bl	1d3c <__snprintf_chk@plt>
    2ee8:	cmp	r0, #1024	; 0x400
    2eec:	mov	r8, r0
    2ef0:	bcc	2f20 <main@@Base+0x1130>
    2ef4:	mov	r0, sl
    2ef8:	bl	1d18 <close@plt>
    2efc:	ldr	r0, [pc, #748]	; 31f0 <main@@Base+0x1400>
    2f00:	add	r0, pc, r0
    2f04:	ldr	r2, [sp, #1052]	; 0x41c
    2f08:	ldr	r3, [r6]
    2f0c:	cmp	r2, r3
    2f10:	bne	31cc <main@@Base+0x13dc>
    2f14:	add	sp, sp, #1056	; 0x420
    2f18:	add	sp, sp, #4
    2f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2f20:	mov	r2, r0
    2f24:	mov	r1, r5
    2f28:	mov	r0, sl
    2f2c:	bl	1c34 <write@plt>
    2f30:	cmp	r0, r8
    2f34:	blt	2ef4 <main@@Base+0x1104>
    2f38:	ldr	r1, [pc, #692]	; 31f4 <main@@Base+0x1404>
    2f3c:	mov	r0, sl
    2f40:	add	r1, pc, r1
    2f44:	bl	19b8 <fdopen@plt>
    2f48:	subs	r9, r0, #0
    2f4c:	beq	2ef4 <main@@Base+0x1104>
    2f50:	ldr	sl, [pc, #672]	; 31f8 <main@@Base+0x1408>
    2f54:	ldr	r3, [pc, #672]	; 31fc <main@@Base+0x140c>
    2f58:	add	sl, pc, sl
    2f5c:	add	r3, pc, r3
    2f60:	add	sl, sl, #508	; 0x1fc
    2f64:	mov	fp, #0
    2f68:	add	r3, r3, #508	; 0x1fc
    2f6c:	add	sl, sl, #3
    2f70:	mov	r8, fp
    2f74:	mov	r2, #42	; 0x2a
    2f78:	add	r3, r3, #3
    2f7c:	str	r3, [sp, #12]
    2f80:	strh	r2, [r4]
    2f84:	mov	r2, r9
    2f88:	mov	r1, #1024	; 0x400
    2f8c:	mov	r0, r5
    2f90:	bl	1a60 <fgets@plt>
    2f94:	cmp	r0, #0
    2f98:	beq	3104 <main@@Base+0x1314>
    2f9c:	ldr	r1, [pc, #604]	; 3200 <main@@Base+0x1410>
    2fa0:	mov	r2, #6
    2fa4:	add	r1, pc, r1
    2fa8:	mov	r0, r5
    2fac:	bl	1d00 <strncmp@plt>
    2fb0:	cmp	r0, #0
    2fb4:	beq	30d8 <main@@Base+0x12e8>
    2fb8:	ldr	r1, [pc, #580]	; 3204 <main@@Base+0x1414>
    2fbc:	mov	r2, #7
    2fc0:	add	r1, pc, r1
    2fc4:	mov	r0, r5
    2fc8:	bl	1d00 <strncmp@plt>
    2fcc:	cmp	r0, #0
    2fd0:	beq	30d8 <main@@Base+0x12e8>
    2fd4:	ldr	r1, [pc, #556]	; 3208 <main@@Base+0x1418>
    2fd8:	mov	r2, #7
    2fdc:	add	r1, pc, r1
    2fe0:	mov	r0, r5
    2fe4:	bl	1d00 <strncmp@plt>
    2fe8:	cmp	r0, #0
    2fec:	bne	2f84 <main@@Base+0x1194>
    2ff0:	bl	1b5c <__ctype_b_loc@plt>
    2ff4:	add	r2, r7, #3
    2ff8:	ldr	r0, [r0]
    2ffc:	b	3004 <main@@Base+0x1214>
    3000:	mov	r2, r3
    3004:	mov	r3, r2
    3008:	mov	r1, r2
    300c:	ldrb	ip, [r3], #1
    3010:	lsl	lr, ip, #1
    3014:	ldrh	lr, [r0, lr]
    3018:	tst	lr, #8192	; 0x2000
    301c:	bne	3000 <main@@Base+0x1210>
    3020:	cmp	ip, #0
    3024:	mov	ip, r2
    3028:	bne	3040 <main@@Base+0x1250>
    302c:	b	304c <main@@Base+0x125c>
    3030:	lsl	r3, r3, #1
    3034:	ldrh	r3, [r0, r3]
    3038:	tst	r3, #8192	; 0x2000
    303c:	bne	304c <main@@Base+0x125c>
    3040:	ldrb	r3, [ip, #1]!
    3044:	cmp	r3, #0
    3048:	bne	3030 <main@@Base+0x1240>
    304c:	mov	r3, #0
    3050:	cmp	r8, fp
    3054:	strb	r3, [ip]
    3058:	ble	3118 <main@@Base+0x1328>
    305c:	ldr	r4, [pc, #424]	; 320c <main@@Base+0x141c>
    3060:	add	r4, pc, r4
    3064:	add	r2, r4, #508	; 0x1fc
    3068:	add	r2, r2, #3
    306c:	ldrb	r3, [r1], #1
    3070:	strb	r3, [r4], #1
    3074:	cmp	r3, #0
    3078:	cmpne	r4, r2
    307c:	bcc	306c <main@@Base+0x127c>
    3080:	mov	fp, r8
    3084:	b	2f84 <main@@Base+0x1194>
    3088:	ldr	r7, [pc, #384]	; 3210 <main@@Base+0x1420>
    308c:	add	r7, pc, r7
    3090:	b	2e40 <main@@Base+0x1050>
    3094:	ldr	r5, [pc, #376]	; 3214 <main@@Base+0x1424>
    3098:	add	r5, pc, r5
    309c:	b	2e2c <main@@Base+0x103c>
    30a0:	ldr	r3, [pc, #368]	; 3218 <main@@Base+0x1428>
    30a4:	ldr	r3, [r4, r3]
    30a8:	ldr	r4, [r3]
    30ac:	bl	1a54 <gai_strerror@plt>
    30b0:	ldr	r2, [pc, #356]	; 321c <main@@Base+0x142c>
    30b4:	str	r7, [sp]
    30b8:	mov	r3, r5
    30bc:	add	r2, pc, r2
    30c0:	mov	r1, #1
    30c4:	str	r0, [sp, #4]
    30c8:	mov	r0, r4
    30cc:	bl	1c40 <__fprintf_chk@plt>
    30d0:	mov	r0, #2
    30d4:	bl	1b74 <exit@plt>
    30d8:	mov	r1, #47	; 0x2f
    30dc:	mov	r0, r5
    30e0:	bl	1b98 <strchr@plt>
    30e4:	subs	r8, r0, #0
    30e8:	beq	2f84 <main@@Base+0x1194>
    30ec:	add	r0, r8, #1
    30f0:	mov	r2, #10
    30f4:	mov	r1, #0
    30f8:	bl	1b80 <strtoul@plt>
    30fc:	mov	r8, r0
    3100:	b	2f84 <main@@Base+0x1194>
    3104:	mov	r0, r9
    3108:	bl	1c64 <fclose@plt>
    310c:	ldr	r0, [pc, #268]	; 3220 <main@@Base+0x1430>
    3110:	add	r0, pc, r0
    3114:	b	2f04 <main@@Base+0x1114>
    3118:	bne	2f84 <main@@Base+0x1194>
    311c:	ldr	r0, [pc, #256]	; 3224 <main@@Base+0x1434>
    3120:	mov	r1, r2
    3124:	add	r0, pc, r0
    3128:	str	r2, [sp, #16]
    312c:	bl	19d0 <strstr@plt>
    3130:	ldr	r2, [sp, #16]
    3134:	subs	r3, r0, #0
    3138:	str	r3, [sp, #20]
    313c:	beq	3160 <main@@Base+0x1370>
    3140:	mov	r0, r2
    3144:	bl	1b8c <strlen@plt>
    3148:	ldr	r3, [sp, #20]
    314c:	ldr	r2, [sp, #16]
    3150:	ldrb	r3, [r3, r0]
    3154:	cmp	r3, #0
    3158:	cmpne	r3, #47	; 0x2f
    315c:	beq	2f84 <main@@Base+0x1194>
    3160:	ldr	r3, [pc, #192]	; 3228 <main@@Base+0x1438>
    3164:	add	r3, pc, r3
    3168:	cmp	r4, r3
    316c:	movhi	r3, #47	; 0x2f
    3170:	strbhi	r3, [r4, #-1]
    3174:	ldr	r3, [sp, #12]
    3178:	cmp	r4, r3
    317c:	bcs	2f84 <main@@Base+0x1194>
    3180:	ldrb	r1, [r2]
    3184:	add	r3, r4, #1
    3188:	cmp	r1, #0
    318c:	strb	r1, [r4]
    3190:	bne	31a8 <main@@Base+0x13b8>
    3194:	b	31b8 <main@@Base+0x13c8>
    3198:	ldrb	r1, [r2, #1]!
    319c:	cmp	r1, #0
    31a0:	strb	r1, [r3], #1
    31a4:	beq	31b8 <main@@Base+0x13c8>
    31a8:	cmp	r3, sl
    31ac:	bne	3198 <main@@Base+0x13a8>
    31b0:	mov	r4, sl
    31b4:	b	2f84 <main@@Base+0x1194>
    31b8:	mov	r4, r3
    31bc:	b	2f84 <main@@Base+0x1194>
    31c0:	ldr	r0, [pc, #100]	; 322c <main@@Base+0x143c>
    31c4:	add	r0, pc, r0
    31c8:	bl	61a8 <error@@Base>
    31cc:	bl	1a9c <__stack_chk_fail@plt>
    31d0:	andeq	sl, r1, r4, lsr #1
    31d4:	andeq	sl, r1, ip, lsl #24
    31d8:	andeq	r0, r0, r8, asr #2
    31dc:	andeq	r7, r0, ip, asr r5
    31e0:	andeq	r7, r0, r4, asr r5
    31e4:	muleq	r1, r8, fp
    31e8:	andeq	sl, r1, r4, asr fp
    31ec:	andeq	r7, r0, r0, ror #9
    31f0:	andeq	r7, r0, r4, ror r4
    31f4:	andeq	r7, r0, r8, ror #23
    31f8:	andeq	sl, r1, r4, lsr #21
    31fc:	andeq	sl, r1, r0, lsr #21
    3200:	andeq	r7, r0, r8, lsl #8
    3204:	strdeq	r7, [r0], -r4
    3208:	andeq	r7, r0, r0, ror #7
    320c:	muleq	r1, ip, r9
    3210:	andeq	r7, r0, r0, ror #5
    3214:	andeq	r7, r0, r4, asr #5
    3218:	andeq	r0, r0, ip, asr #2
    321c:	ldrdeq	r7, [r0], -r4
    3220:	andeq	sl, r1, ip, ror #17
    3224:	ldrdeq	sl, [r1], -r8
    3228:	muleq	r1, r8, r8
    322c:	ldrdeq	r7, [r0], -r8
    3230:	lsrs	r3, r1, #1
    3234:	beq	3250 <main@@Base+0x1460>
    3238:	add	ip, r0, r3, lsl #1
    323c:	mov	r3, #0
    3240:	ldrh	r2, [r0], #2
    3244:	cmp	r0, ip
    3248:	add	r3, r3, r2
    324c:	bne	3240 <main@@Base+0x1450>
    3250:	tst	r1, #1
    3254:	ldrbne	r2, [r0]
    3258:	lslne	r2, r2, #8
    325c:	rev16ne	r2, r2
    3260:	uxtahne	r3, r3, r2
    3264:	ldr	r1, [pc, #28]	; 3288 <main@@Base+0x1498>
    3268:	and	r2, r3, r1
    326c:	add	r3, r2, r3, lsr #16
    3270:	add	r3, r3, r3, lsr #16
    3274:	mvn	r3, r3
    3278:	uxth	r0, r3
    327c:	cmp	r0, #0
    3280:	moveq	r0, r1
    3284:	bx	lr
    3288:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    328c:	ldr	r3, [pc, #964]	; 3658 <main@@Base+0x1868>
    3290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3294:	sub	sp, sp, #1120	; 0x460
    3298:	ldr	ip, [pc, #956]	; 365c <main@@Base+0x186c>
    329c:	sub	sp, sp, #4
    32a0:	add	r3, pc, r3
    32a4:	mov	r4, r1
    32a8:	str	r0, [sp, #84]	; 0x54
    32ac:	ldrb	r1, [r1]
    32b0:	ldr	r0, [r3, ip]
    32b4:	mov	r5, r2
    32b8:	and	r1, r1, #240	; 0xf0
    32bc:	ldr	r2, [r0]
    32c0:	cmp	r1, #32
    32c4:	str	r0, [sp, #80]	; 0x50
    32c8:	str	r2, [sp, #1116]	; 0x45c
    32cc:	bne	3608 <main@@Base+0x1818>
    32d0:	ldrb	r2, [r4, #3]
    32d4:	ldrb	r3, [r4, #2]
    32d8:	orrs	r3, r3, r2, lsl #8
    32dc:	bne	35f0 <main@@Base+0x1800>
    32e0:	sub	r3, r5, #4
    32e4:	str	r3, [sp, #40]	; 0x28
    32e8:	cmp	r3, #3
    32ec:	add	r3, r4, #4
    32f0:	str	r3, [sp, #36]	; 0x24
    32f4:	bls	3630 <main@@Base+0x1840>
    32f8:	ldrh	r3, [r4, #4]
    32fc:	ldr	r2, [sp, #36]	; 0x24
    3300:	rev16	r3, r3
    3304:	add	r4, r2, #4
    3308:	ldr	r2, [sp, #40]	; 0x28
    330c:	uxth	r3, r3
    3310:	cmp	r2, r3
    3314:	cmpcs	r3, #3
    3318:	str	r3, [sp, #52]	; 0x34
    331c:	bls	3608 <main@@Base+0x1818>
    3320:	sub	r3, r3, #4
    3324:	tst	r3, #3
    3328:	bne	3608 <main@@Base+0x1818>
    332c:	lsr	sl, r3, #2
    3330:	ldr	r3, [pc, #808]	; 3660 <main@@Base+0x1870>
    3334:	add	r2, sp, #96	; 0x60
    3338:	add	r3, pc, r3
    333c:	str	r3, [sp, #64]	; 0x40
    3340:	ldr	r3, [pc, #796]	; 3664 <main@@Base+0x1874>
    3344:	str	r2, [sp, #56]	; 0x38
    3348:	add	r3, pc, r3
    334c:	str	r3, [sp, #68]	; 0x44
    3350:	ldr	r3, [pc, #784]	; 3668 <main@@Base+0x1878>
    3354:	add	r2, sp, #92	; 0x5c
    3358:	add	r3, pc, r3
    335c:	str	r3, [sp, #28]
    3360:	ldr	r3, [pc, #772]	; 366c <main@@Base+0x187c>
    3364:	mov	fp, r2
    3368:	add	r3, pc, r3
    336c:	str	r3, [sp, #32]
    3370:	ldr	r3, [pc, #760]	; 3670 <main@@Base+0x1880>
    3374:	str	r2, [sp, #60]	; 0x3c
    3378:	add	r3, pc, r3
    337c:	str	r3, [sp, #72]	; 0x48
    3380:	ldr	r3, [pc, #748]	; 3674 <main@@Base+0x1884>
    3384:	add	r3, pc, r3
    3388:	str	r3, [sp, #76]	; 0x4c
    338c:	ldr	r3, [sp, #36]	; 0x24
    3390:	cmp	sl, #0
    3394:	ldrh	r5, [r3, #2]
    3398:	ldr	r3, [pc, #728]	; 3678 <main@@Base+0x1888>
    339c:	sub	r5, r5, r3
    33a0:	clz	r5, r5
    33a4:	lsr	r5, r5, #5
    33a8:	moveq	r5, #0
    33ac:	cmp	r5, #0
    33b0:	beq	3528 <main@@Base+0x1738>
    33b4:	ldr	r3, [sp, #56]	; 0x38
    33b8:	ldr	r2, [sp, #72]	; 0x48
    33bc:	add	r7, r3, #1020	; 0x3fc
    33c0:	sub	r1, r7, fp
    33c4:	mov	r0, fp
    33c8:	bl	1bd4 <snprintf@plt>
    33cc:	ldr	r2, [pc, #680]	; 367c <main@@Base+0x188c>
    33d0:	ldr	r3, [r4]
    33d4:	add	r2, pc, r2
    33d8:	str	r2, [sp, #44]	; 0x2c
    33dc:	ldr	r2, [pc, #668]	; 3680 <main@@Base+0x1890>
    33e0:	mov	r6, r7
    33e4:	add	r2, pc, r2
    33e8:	rev	r3, r3
    33ec:	mov	r5, #0
    33f0:	ldr	ip, [sp, #76]	; 0x4c
    33f4:	mvn	r9, #0
    33f8:	mov	r8, #1
    33fc:	str	r2, [sp, #48]	; 0x30
    3400:	add	fp, fp, r0
    3404:	cmp	r7, fp
    3408:	movcc	fp, r7
    340c:	sub	r1, r7, fp
    3410:	b	3424 <main@@Base+0x1634>
    3414:	ldr	r3, [r4, #4]!
    3418:	ldr	ip, [sp, #48]	; 0x30
    341c:	sub	r1, r7, fp
    3420:	rev	r3, r3
    3424:	lsr	r0, r3, #8
    3428:	lsr	r2, r3, #9
    342c:	ldr	lr, [sp, #44]	; 0x2c
    3430:	and	r0, r0, #1
    3434:	and	r2, r2, #7
    3438:	str	ip, [sp, #4]
    343c:	uxtb	ip, r3
    3440:	lsr	r3, r3, #12
    3444:	str	r0, [sp, #16]
    3448:	str	r2, [sp, #12]
    344c:	str	r3, [sp, #8]
    3450:	mov	r0, fp
    3454:	str	lr, [sp]
    3458:	str	ip, [sp, #20]
    345c:	mov	r3, r9
    3460:	mov	r2, r8
    3464:	bl	1d3c <__snprintf_chk@plt>
    3468:	add	r5, r5, #1
    346c:	add	fp, fp, r0
    3470:	cmp	fp, r6
    3474:	movcs	fp, r6
    3478:	cmp	r5, sl
    347c:	blt	3414 <main@@Base+0x1624>
    3480:	ldr	r1, [sp, #40]	; 0x28
    3484:	ldr	r2, [sp, #52]	; 0x34
    3488:	sub	r3, r1, r2
    348c:	ldr	r1, [sp, #36]	; 0x24
    3490:	str	r3, [sp, #40]	; 0x28
    3494:	cmp	r3, #3
    3498:	add	r3, r1, r2
    349c:	str	r3, [sp, #36]	; 0x24
    34a0:	bls	3630 <main@@Base+0x1840>
    34a4:	ldr	r3, [sp, #36]	; 0x24
    34a8:	ldr	r1, [sp, #40]	; 0x28
    34ac:	ldrh	r3, [r3]
    34b0:	rev16	r3, r3
    34b4:	uxth	r3, r3
    34b8:	cmp	r3, r1
    34bc:	mov	r2, r3
    34c0:	str	r3, [sp, #52]	; 0x34
    34c4:	movls	r3, #0
    34c8:	movhi	r3, #1
    34cc:	cmp	r2, #3
    34d0:	orrls	r3, r3, #1
    34d4:	cmp	r3, #0
    34d8:	bne	3608 <main@@Base+0x1818>
    34dc:	sub	sl, r2, #4
    34e0:	tst	sl, #3
    34e4:	bne	3608 <main@@Base+0x1818>
    34e8:	ldr	r3, [sp, #56]	; 0x38
    34ec:	ldr	r2, [sp, #60]	; 0x3c
    34f0:	add	r3, r3, #1020	; 0x3fc
    34f4:	cmp	fp, r3
    34f8:	movcs	r3, #0
    34fc:	movcc	r3, #1
    3500:	cmp	fp, r2
    3504:	movls	r3, #0
    3508:	cmp	r3, #0
    350c:	movne	r3, #59	; 0x3b
    3510:	strbne	r3, [fp]
    3514:	ldr	r3, [sp, #36]	; 0x24
    3518:	addne	fp, fp, #1
    351c:	lsr	sl, sl, #2
    3520:	add	r4, r3, #4
    3524:	b	338c <main@@Base+0x159c>
    3528:	ldr	r3, [sp, #36]	; 0x24
    352c:	ldr	r1, [sp, #56]	; 0x38
    3530:	mov	r0, fp
    3534:	ldrb	r2, [r3, #3]
    3538:	ldrb	r3, [r3, #2]
    353c:	add	r7, r1, #1020	; 0x3fc
    3540:	ldr	r1, [sp, #64]	; 0x40
    3544:	str	r2, [sp, #8]
    3548:	str	r1, [sp]
    354c:	str	r3, [sp, #4]
    3550:	sub	r1, r7, fp
    3554:	mvn	r3, #0
    3558:	mov	r2, #1
    355c:	bl	1d3c <__snprintf_chk@plt>
    3560:	add	fp, fp, r0
    3564:	cmp	r7, fp
    3568:	movcc	fp, r7
    356c:	cmp	sl, #0
    3570:	cmpne	fp, r7
    3574:	bcs	3480 <main@@Base+0x1690>
    3578:	sub	r1, r7, fp
    357c:	ldr	r2, [sp, #68]	; 0x44
    3580:	mvn	r9, #0
    3584:	mov	r8, #1
    3588:	mov	r6, r7
    358c:	b	3598 <main@@Base+0x17a8>
    3590:	ldr	r2, [sp, #32]
    3594:	sub	r1, r7, fp
    3598:	ldr	r3, [r4], #4
    359c:	str	r2, [sp, #4]
    35a0:	ldr	r2, [sp, #28]
    35a4:	rev	r3, r3
    35a8:	str	r2, [sp]
    35ac:	str	r3, [sp, #8]
    35b0:	mov	r0, fp
    35b4:	mov	r3, r9
    35b8:	mov	r2, r8
    35bc:	bl	1d3c <__snprintf_chk@plt>
    35c0:	add	r5, r5, #1
    35c4:	add	fp, fp, r0
    35c8:	cmp	fp, r6
    35cc:	movcs	fp, r6
    35d0:	cmp	r5, sl
    35d4:	movge	r3, #0
    35d8:	movlt	r3, #1
    35dc:	cmp	fp, r6
    35e0:	movcs	r3, #0
    35e4:	cmp	r3, #0
    35e8:	bne	3590 <main@@Base+0x17a0>
    35ec:	b	3480 <main@@Base+0x1690>
    35f0:	mov	r1, r5
    35f4:	mov	r0, r4
    35f8:	bl	3230 <main@@Base+0x1440>
    35fc:	ldr	r3, [pc, #128]	; 3684 <main@@Base+0x1894>
    3600:	cmp	r0, r3
    3604:	beq	32e0 <main@@Base+0x14f0>
    3608:	mvn	r3, #0
    360c:	ldr	r2, [sp, #80]	; 0x50
    3610:	ldr	r1, [sp, #1116]	; 0x45c
    3614:	mov	r0, r3
    3618:	ldr	r2, [r2]
    361c:	cmp	r1, r2
    3620:	bne	3654 <main@@Base+0x1864>
    3624:	add	sp, sp, #1120	; 0x460
    3628:	add	sp, sp, #4
    362c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3630:	ldr	r4, [sp, #40]	; 0x28
    3634:	cmp	r4, #0
    3638:	bne	3608 <main@@Base+0x1818>
    363c:	add	r0, sp, #92	; 0x5c
    3640:	bl	1be0 <__strdup@plt>
    3644:	ldr	r2, [sp, #84]	; 0x54
    3648:	mov	r3, r4
    364c:	str	r0, [r2]
    3650:	b	360c <main@@Base+0x181c>
    3654:	bl	1a9c <__stack_chk_fail@plt>
    3658:	strdeq	r9, [r1], -r0
    365c:	andeq	r0, r0, r8, asr #2
    3660:	strheq	r7, [r0], -r0
    3664:	andeq	r7, r0, r0, rrx
    3668:	muleq	r0, r8, r0
    366c:	ldrdeq	r7, [r0], -r0
    3670:	andeq	r7, r0, ip, asr #32
    3674:	andeq	r7, r0, r4, lsr #32
    3678:	andeq	r0, r0, r1, lsl #2
    367c:	strdeq	r6, [r0], -ip
    3680:	andeq	r6, r0, r8, ror #31
    3684:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    3688:	push	{r4, r5, r6, r7, r8, lr}
    368c:	subs	r6, r3, #0
    3690:	beq	36d4 <main@@Base+0x18e4>
    3694:	cmp	r2, #7
    3698:	mov	r4, r2
    369c:	movgt	r5, r1
    36a0:	addgt	r7, r0, #68	; 0x44
    36a4:	ble	36e0 <main@@Base+0x18f0>
    36a8:	mov	r2, r4
    36ac:	mov	r1, r5
    36b0:	mov	r0, r7
    36b4:	bl	328c <main@@Base+0x149c>
    36b8:	sub	r4, r4, r6
    36bc:	add	r5, r5, r6
    36c0:	cmp	r0, #0
    36c4:	popeq	{r4, r5, r6, r7, r8, pc}
    36c8:	cmp	r4, #7
    36cc:	bgt	36a8 <main@@Base+0x18b8>
    36d0:	pop	{r4, r5, r6, r7, r8, pc}
    36d4:	add	r0, r0, #68	; 0x44
    36d8:	pop	{r4, r5, r6, r7, r8, lr}
    36dc:	b	328c <main@@Base+0x149c>
    36e0:	pop	{r4, r5, r6, r7, r8, pc}
    36e4:	b	6be4 <error@@Base+0xa3c>
    36e8:	push	{r4, r5, r6, lr}
    36ec:	ldr	r0, [sp, #16]
    36f0:	cmp	r0, #7
    36f4:	bls	3758 <main@@Base+0x1968>
    36f8:	ldr	r0, [pc, #96]	; 3760 <main@@Base+0x1970>
    36fc:	cmp	r1, #0
    3700:	add	r0, pc, r0
    3704:	ldrhne	ip, [r3, #2]
    3708:	ldrheq	ip, [r3]
    370c:	ldrhne	r5, [r3]
    3710:	ldrheq	r5, [r3, #2]
    3714:	ldr	r3, [r0]
    3718:	cmp	ip, r3
    371c:	bne	3758 <main@@Base+0x1968>
    3720:	mov	r4, r1
    3724:	add	r0, r0, #4
    3728:	mov	r1, r2
    372c:	bl	71b4 <error@@Base+0x100c>
    3730:	cmp	r0, #0
    3734:	beq	3758 <main@@Base+0x1968>
    3738:	mov	r0, r5
    373c:	bl	688c <error@@Base+0x6e4>
    3740:	cmp	r0, #0
    3744:	beq	3758 <main@@Base+0x1968>
    3748:	cmp	r4, #0
    374c:	moveq	r3, #1
    3750:	streq	r3, [r0, #4]
    3754:	pop	{r4, r5, r6, pc}
    3758:	mov	r0, #0
    375c:	pop	{r4, r5, r6, pc}
    3760:	andeq	sl, r1, r8, lsl r5
    3764:	ldr	r3, [pc, #340]	; 38c0 <main@@Base+0x1ad0>
    3768:	ldr	r2, [pc, #340]	; 38c4 <main@@Base+0x1ad4>
    376c:	add	r3, pc, r3
    3770:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3774:	mov	r6, r1
    3778:	ldr	r7, [r3, r2]
    377c:	ldr	r4, [pc, #324]	; 38c8 <main@@Base+0x1ad8>
    3780:	sub	sp, sp, #40	; 0x28
    3784:	ldr	r1, [r7]
    3788:	add	r4, pc, r4
    378c:	mov	ip, #28
    3790:	str	r1, [sp, #36]	; 0x24
    3794:	mov	r5, r0
    3798:	mov	r2, #33	; 0x21
    379c:	ldrh	r0, [r4, #4]
    37a0:	mov	r1, #6
    37a4:	str	ip, [sp, #4]
    37a8:	bl	1ce8 <socket@plt>
    37ac:	subs	r8, r0, #0
    37b0:	blt	38b4 <main@@Base+0x1ac4>
    37b4:	bl	7204 <error@@Base+0x105c>
    37b8:	add	r2, sp, #4
    37bc:	add	r1, sp, #8
    37c0:	mov	r0, r8
    37c4:	bl	1cb8 <getsockname@plt>
    37c8:	cmp	r0, #0
    37cc:	blt	38a8 <main@@Base+0x1ab8>
    37d0:	ldr	r3, [r4, #32]
    37d4:	ldrh	r2, [sp, #10]
    37d8:	ldr	sl, [r4, #36]	; 0x24
    37dc:	strh	r2, [r3]
    37e0:	bl	5974 <main@@Base+0x3b84>
    37e4:	ldr	r9, [r4, #32]
    37e8:	mov	r3, #0
    37ec:	ldr	r1, [r4, #40]	; 0x28
    37f0:	str	r0, [sl]
    37f4:	strh	r3, [r9, #6]
    37f8:	add	r0, r4, #44	; 0x2c
    37fc:	bl	3230 <main@@Base+0x1440>
    3800:	ldr	r3, [r4, #1068]	; 0x42c
    3804:	cmp	r3, r6
    3808:	strh	r0, [r9, #6]
    380c:	beq	3828 <main@@Base+0x1a38>
    3810:	ldr	r3, [pc, #180]	; 38cc <main@@Base+0x1adc>
    3814:	mov	r1, r6
    3818:	add	r3, pc, r3
    381c:	ldr	r0, [r3]
    3820:	bl	79cc <error@@Base+0x1824>
    3824:	str	r6, [r4, #1068]	; 0x42c
    3828:	bl	59a0 <main@@Base+0x3bb0>
    382c:	ldr	r4, [pc, #156]	; 38d0 <main@@Base+0x1ae0>
    3830:	ldr	r2, [pc, #156]	; 38d4 <main@@Base+0x1ae4>
    3834:	add	r4, pc, r4
    3838:	add	r2, pc, r2
    383c:	ldr	ip, [r4, #32]
    3840:	ldr	r0, [r2]
    3844:	add	r3, r4, #4
    3848:	mov	r1, ip
    384c:	vstr	d0, [r5, #40]	; 0x28
    3850:	ldrb	r2, [ip, #4]
    3854:	lsl	r2, r2, #2
    3858:	bl	7b70 <error@@Base+0x19c8>
    385c:	cmp	r0, #0
    3860:	blt	388c <main@@Base+0x1a9c>
    3864:	ldr	r3, [r4, #32]
    3868:	ldrh	r3, [r3]
    386c:	str	r8, [r5, #60]	; 0x3c
    3870:	str	r3, [r5, #64]	; 0x40
    3874:	ldr	r2, [sp, #36]	; 0x24
    3878:	ldr	r3, [r7]
    387c:	cmp	r2, r3
    3880:	bne	38a4 <main@@Base+0x1ab4>
    3884:	add	sp, sp, #40	; 0x28
    3888:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    388c:	mov	r0, r8
    3890:	bl	1d18 <close@plt>
    3894:	mov	r2, #0
    3898:	mov	r3, #0
    389c:	strd	r2, [r5, #40]	; 0x28
    38a0:	b	3874 <main@@Base+0x1a84>
    38a4:	bl	1a9c <__stack_chk_fail@plt>
    38a8:	ldr	r0, [pc, #40]	; 38d8 <main@@Base+0x1ae8>
    38ac:	add	r0, pc, r0
    38b0:	bl	61a8 <error@@Base>
    38b4:	ldr	r0, [pc, #32]	; 38dc <main@@Base+0x1aec>
    38b8:	add	r0, pc, r0
    38bc:	bl	61a8 <error@@Base>
    38c0:	andeq	r9, r1, r4, lsr #14
    38c4:	andeq	r0, r0, r8, asr #2
    38c8:	muleq	r1, r0, r4
    38cc:	andeq	r9, r1, r8, ror #15
    38d0:	andeq	sl, r1, r4, ror #7
    38d4:	andeq	r9, r1, r8, asr #15
    38d8:	andeq	r6, r0, ip, asr #22
    38dc:	andeq	r6, r0, r4, ror #21
    38e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    38e4:	mov	lr, r0
    38e8:	ldr	r9, [pc, #612]	; 3b54 <main@@Base+0x1d64>
    38ec:	ldr	r8, [pc, #612]	; 3b58 <main@@Base+0x1d68>
    38f0:	mov	ip, r0
    38f4:	mov	r6, r1
    38f8:	mov	r5, r2
    38fc:	ldr	r4, [pc, #600]	; 3b5c <main@@Base+0x1d6c>
    3900:	ldm	lr!, {r0, r1, r2, r3}
    3904:	add	r9, pc, r9
    3908:	add	r8, pc, r8
    390c:	ldrh	r7, [ip]
    3910:	add	ip, r8, #4
    3914:	ldr	r4, [r9, r4]
    3918:	stmia	ip!, {r0, r1, r2, r3}
    391c:	sub	sp, sp, #40	; 0x28
    3920:	ldm	lr, {r0, r1, r2}
    3924:	cmp	r6, #0
    3928:	ldr	r3, [r4]
    392c:	mov	sl, #0
    3930:	strh	sl, [r8, #6]
    3934:	stm	ip, {r0, r1, r2}
    3938:	str	r3, [sp, #36]	; 0x24
    393c:	ldreq	r6, [pc, #540]	; 3b60 <main@@Base+0x1d70>
    3940:	rev16ne	r6, r6
    3944:	uxthne	r6, r6
    3948:	ldr	r8, [pc, #532]	; 3b64 <main@@Base+0x1d74>
    394c:	mov	r2, #33	; 0x21
    3950:	add	r8, pc, r8
    3954:	mov	r1, #3
    3958:	mov	r0, r7
    395c:	str	r6, [r8]
    3960:	bl	1ce8 <socket@plt>
    3964:	ldr	r6, [pc, #508]	; 3b68 <main@@Base+0x1d78>
    3968:	add	r6, pc, r6
    396c:	cmp	r0, #0
    3970:	str	r0, [r6]
    3974:	blt	3b38 <main@@Base+0x1d48>
    3978:	bl	7410 <error@@Base+0x1268>
    397c:	add	r1, r8, #4
    3980:	mov	r2, #28
    3984:	ldr	r0, [r6]
    3988:	bl	1d30 <connect@plt>
    398c:	cmp	r0, #0
    3990:	blt	3b2c <main@@Base+0x1d3c>
    3994:	mov	r3, #28
    3998:	add	r2, sp, #4
    399c:	add	r1, sp, #8
    39a0:	ldr	r0, [r6]
    39a4:	str	r3, [sp, #4]
    39a8:	bl	1cb8 <getsockname@plt>
    39ac:	cmp	r0, #0
    39b0:	blt	3b20 <main@@Base+0x1d30>
    39b4:	bl	7a5c <error@@Base+0x18b4>
    39b8:	cmp	r0, #0
    39bc:	beq	3ac0 <main@@Base+0x1cd0>
    39c0:	ldr	r6, [pc, #420]	; 3b6c <main@@Base+0x1d7c>
    39c4:	add	r6, pc, r6
    39c8:	ldr	r0, [r6]
    39cc:	bl	7900 <error@@Base+0x1758>
    39d0:	ldr	r0, [r6]
    39d4:	mov	r1, #9
    39d8:	bl	56b0 <main@@Base+0x38c0>
    39dc:	cmp	r7, #2
    39e0:	beq	3aec <main@@Base+0x1cfc>
    39e4:	add	r3, sp, #16
    39e8:	ldr	ip, [pc, #384]	; 3b70 <main@@Base+0x1d80>
    39ec:	ldm	r3, {r0, r1, r2, r3}
    39f0:	add	ip, pc, ip
    39f4:	add	lr, ip, #44	; 0x2c
    39f8:	add	r6, ip, #12
    39fc:	stm	lr, {r0, r1, r2, r3}
    3a00:	add	lr, ip, #60	; 0x3c
    3a04:	ldm	r6, {r0, r1, r2, r3}
    3a08:	add	ip, ip, #76	; 0x4c
    3a0c:	mov	r6, #16
    3a10:	str	r6, [sp, #4]
    3a14:	stm	lr, {r0, r1, r2, r3}
    3a18:	add	lr, ip, #16
    3a1c:	ldr	r1, [pc, #336]	; 3b74 <main@@Base+0x1d84>
    3a20:	ldr	r2, [pc, #336]	; 3b78 <main@@Base+0x1d88>
    3a24:	add	r1, pc, r1
    3a28:	add	r2, pc, r2
    3a2c:	ldr	r0, [r1, #4]
    3a30:	add	r3, ip, #24
    3a34:	rev	r0, r0
    3a38:	add	r1, r2, #44	; 0x2c
    3a3c:	str	r0, [ip, #20]
    3a40:	ldr	r0, [r2]
    3a44:	sub	r1, r3, r1
    3a48:	str	lr, [r2, #36]	; 0x24
    3a4c:	add	lr, ip, #4
    3a50:	str	r1, [r2, #40]	; 0x28
    3a54:	mov	r6, #8448	; 0x2100
    3a58:	strh	r0, [ip, #6]
    3a5c:	str	lr, [r2, #32]
    3a60:	mov	r0, #0
    3a64:	mov	r2, #1
    3a68:	cmp	r1, #1024	; 0x400
    3a6c:	strh	r6, [ip, #2]
    3a70:	strh	r0, [ip, #10]
    3a74:	strh	r0, [ip, #4]
    3a78:	strb	r0, [ip, #13]
    3a7c:	strh	r0, [ip, #14]
    3a80:	str	r0, [ip, #16]
    3a84:	strb	r0, [ip, #9]
    3a88:	strb	r2, [ip, #12]
    3a8c:	bhi	3b14 <main@@Base+0x1d24>
    3a90:	sub	r3, r3, lr
    3a94:	ldr	lr, [sp, #36]	; 0x24
    3a98:	ldr	r2, [r4]
    3a9c:	rev16	r1, r3
    3aa0:	cmp	lr, r2
    3aa4:	lsr	r2, r3, #2
    3aa8:	strh	r1, [ip]
    3aac:	strb	r2, [ip, #8]
    3ab0:	str	r3, [r5]
    3ab4:	bne	3b44 <main@@Base+0x1d54>
    3ab8:	add	sp, sp, #40	; 0x28
    3abc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3ac0:	ldr	r0, [r6]
    3ac4:	bl	1d18 <close@plt>
    3ac8:	mov	r2, #33	; 0x21
    3acc:	mov	r1, #3
    3ad0:	mov	r0, r7
    3ad4:	bl	1ce8 <socket@plt>
    3ad8:	cmp	r0, #0
    3adc:	str	r0, [r6]
    3ae0:	blt	3b48 <main@@Base+0x1d58>
    3ae4:	bl	7410 <error@@Base+0x1268>
    3ae8:	b	39c0 <main@@Base+0x1bd0>
    3aec:	ldr	ip, [pc, #136]	; 3b7c <main@@Base+0x1d8c>
    3af0:	ldr	r1, [sp, #12]
    3af4:	add	ip, pc, ip
    3af8:	mov	r3, #4
    3afc:	ldr	r2, [ip, #8]
    3b00:	str	r1, [ip, #44]	; 0x2c
    3b04:	str	r2, [ip, #48]	; 0x30
    3b08:	str	r3, [sp, #4]
    3b0c:	add	ip, ip, #52	; 0x34
    3b10:	b	3a18 <main@@Base+0x1c28>
    3b14:	ldr	r0, [pc, #100]	; 3b80 <main@@Base+0x1d90>
    3b18:	add	r0, pc, r0
    3b1c:	bl	61a8 <error@@Base>
    3b20:	ldr	r0, [pc, #92]	; 3b84 <main@@Base+0x1d94>
    3b24:	add	r0, pc, r0
    3b28:	bl	61a8 <error@@Base>
    3b2c:	ldr	r0, [pc, #84]	; 3b88 <main@@Base+0x1d98>
    3b30:	add	r0, pc, r0
    3b34:	bl	61a8 <error@@Base>
    3b38:	ldr	r0, [pc, #76]	; 3b8c <main@@Base+0x1d9c>
    3b3c:	add	r0, pc, r0
    3b40:	bl	6838 <error@@Base+0x690>
    3b44:	bl	1a9c <__stack_chk_fail@plt>
    3b48:	ldr	r0, [pc, #64]	; 3b90 <main@@Base+0x1da0>
    3b4c:	add	r0, pc, r0
    3b50:	bl	61a8 <error@@Base>
    3b54:	andeq	r9, r1, ip, lsl #11
    3b58:	andeq	sl, r1, r0, lsl r3
    3b5c:	andeq	r0, r0, r8, asr #2
    3b60:	andeq	r9, r0, r2, lsl #21
    3b64:	andeq	sl, r1, r8, asr #5
    3b68:	muleq	r1, r8, r6
    3b6c:	andeq	r9, r1, ip, lsr r6
    3b70:	andeq	sl, r1, r8, lsr #4
    3b74:	ldrdeq	r9, [r1], -ip
    3b78:	strdeq	sl, [r1], -r0
    3b7c:	andeq	sl, r1, r4, lsr #2
    3b80:	strdeq	r6, [r0], -r4
    3b84:	ldrdeq	r6, [r0], -r4
    3b88:	ldrdeq	r6, [r0], -r4
    3b8c:	andeq	r6, r0, r0, ror #16
    3b90:	andeq	r6, r0, r0, asr r8
    3b94:	tst	r1, #9
    3b98:	bxeq	lr
    3b9c:	ldr	r2, [pc, #12]	; 3bb0 <main@@Base+0x1dc0>
    3ba0:	lsr	r1, r1, #3
    3ba4:	and	r1, r1, #1
    3ba8:	add	r2, pc, r2
    3bac:	b	6c20 <error@@Base+0xa78>
    3bb0:			; <UNDEFINED> instruction: 0xfffffb38
    3bb4:	b	6be4 <error@@Base+0xa3c>
    3bb8:	push	{r4, r5, r6, lr}
    3bbc:	ldr	r2, [pc, #132]	; 3c48 <main@@Base+0x1e58>
    3bc0:	ldr	r0, [sp, #16]
    3bc4:	add	r2, pc, r2
    3bc8:	cmp	r0, #7
    3bcc:	ldrh	r4, [r2]
    3bd0:	bls	3c40 <main@@Base+0x1e50>
    3bd4:	ldrh	r2, [r3, #4]
    3bd8:	ldrh	r0, [r3, #6]
    3bdc:	ldrb	r5, [r3]
    3be0:	rev16	r3, r2
    3be4:	ldr	r2, [pc, #96]	; 3c4c <main@@Base+0x1e5c>
    3be8:	rev16	r0, r0
    3bec:	add	r2, pc, r2
    3bf0:	uxth	r3, r3
    3bf4:	ldrh	r2, [r2, #28]
    3bf8:	uxth	r0, r0
    3bfc:	cmp	r2, r3
    3c00:	bne	3c40 <main@@Base+0x1e50>
    3c04:	mov	r6, r1
    3c08:	bl	688c <error@@Base+0x6e4>
    3c0c:	cmp	r0, #0
    3c10:	beq	3c40 <main@@Base+0x1e50>
    3c14:	cmp	r6, #0
    3c18:	popne	{r4, r5, r6, pc}
    3c1c:	cmp	r5, #0
    3c20:	cmpeq	r4, #2
    3c24:	beq	3c34 <main@@Base+0x1e44>
    3c28:	cmp	r5, #129	; 0x81
    3c2c:	cmpeq	r4, #10
    3c30:	bne	3c40 <main@@Base+0x1e50>
    3c34:	mov	r3, #1
    3c38:	str	r3, [r0, #4]
    3c3c:	pop	{r4, r5, r6, pc}
    3c40:	mov	r0, #0
    3c44:	pop	{r4, r5, r6, pc}
    3c48:	andeq	sl, r1, r4, lsl #9
    3c4c:	andeq	sl, r1, ip, asr r4
    3c50:	push	{r4, r5, r6, r7, r8, lr}
    3c54:	mov	r5, r0
    3c58:	ldr	r4, [pc, #288]	; 3d80 <main@@Base+0x1f90>
    3c5c:	add	r4, pc, r4
    3c60:	ldr	r3, [r4, #32]
    3c64:	ldrh	r6, [r4]
    3c68:	cmp	r3, r1
    3c6c:	beq	3c84 <main@@Base+0x1e94>
    3c70:	ldr	r3, [pc, #268]	; 3d84 <main@@Base+0x1f94>
    3c74:	mov	r7, r1
    3c78:	ldr	r0, [pc, r3]
    3c7c:	bl	79cc <error@@Base+0x1824>
    3c80:	str	r7, [r4, #32]
    3c84:	cmp	r6, #2
    3c88:	beq	3d28 <main@@Base+0x1f38>
    3c8c:	cmp	r6, #10
    3c90:	beq	3ce4 <main@@Base+0x1ef4>
    3c94:	bl	59a0 <main@@Base+0x3bb0>
    3c98:	ldr	r3, [pc, #232]	; 3d88 <main@@Base+0x1f98>
    3c9c:	ldr	r4, [pc, #232]	; 3d8c <main@@Base+0x1f9c>
    3ca0:	add	r3, pc, r3
    3ca4:	add	r4, pc, r4
    3ca8:	ldr	r2, [r3, #40]	; 0x28
    3cac:	ldr	r1, [r3, #36]	; 0x24
    3cb0:	ldr	r0, [r4]
    3cb4:	ldr	r2, [r2]
    3cb8:	vstr	d0, [r5, #40]	; 0x28
    3cbc:	bl	7b70 <error@@Base+0x19c8>
    3cc0:	cmp	r0, #0
    3cc4:	movlt	r2, #0
    3cc8:	ldrhge	r3, [r4, #4]
    3ccc:	movlt	r3, #0
    3cd0:	addge	r2, r3, #1
    3cd4:	strdlt	r2, [r5, #40]	; 0x28
    3cd8:	strge	r3, [r5, #64]	; 0x40
    3cdc:	strhge	r2, [r4, #4]
    3ce0:	pop	{r4, r5, r6, r7, r8, pc}
    3ce4:	ldr	r3, [pc, #164]	; 3d90 <main@@Base+0x1fa0>
    3ce8:	ldr	r2, [pc, #164]	; 3d94 <main@@Base+0x1fa4>
    3cec:	add	r3, pc, r3
    3cf0:	add	r2, pc, r2
    3cf4:	ldrh	r1, [r3, #28]
    3cf8:	ldrh	r2, [r2, #4]
    3cfc:	ldr	r3, [r3, #36]	; 0x24
    3d00:	mov	r0, #0
    3d04:	mvn	ip, #127	; 0x7f
    3d08:	rev16	r1, r1
    3d0c:	rev16	r2, r2
    3d10:	strh	r1, [r3, #4]
    3d14:	strb	ip, [r3]
    3d18:	strh	r2, [r3, #6]
    3d1c:	strb	r0, [r3, #1]
    3d20:	strh	r0, [r3, #2]
    3d24:	b	3c94 <main@@Base+0x1ea4>
    3d28:	ldr	r3, [pc, #104]	; 3d98 <main@@Base+0x1fa8>
    3d2c:	ldr	r2, [pc, #104]	; 3d9c <main@@Base+0x1fac>
    3d30:	add	r3, pc, r3
    3d34:	add	r2, pc, r2
    3d38:	ldrh	r1, [r3, #28]
    3d3c:	ldrh	r2, [r2, #4]
    3d40:	ldr	r4, [r3, #36]	; 0x24
    3d44:	ldr	r0, [r3, #40]	; 0x28
    3d48:	mov	ip, #8
    3d4c:	rev16	r3, r2
    3d50:	rev16	r1, r1
    3d54:	mov	r2, #0
    3d58:	strh	r1, [r4, #4]
    3d5c:	strb	ip, [r4]
    3d60:	strh	r3, [r4, #6]
    3d64:	strb	r2, [r4, #1]
    3d68:	strh	r2, [r4, #2]
    3d6c:	ldr	r1, [r0]
    3d70:	mov	r0, r4
    3d74:	bl	3230 <main@@Base+0x1440>
    3d78:	strh	r0, [r4, #2]
    3d7c:	b	3c94 <main@@Base+0x1ea4>
    3d80:	andeq	sl, r1, ip, ror #7
    3d84:	strdeq	r9, [r1], -r4
    3d88:	andeq	sl, r1, r8, lsr #7
    3d8c:	andeq	r9, r1, r8, asr #7
    3d90:	andeq	sl, r1, ip, asr r3
    3d94:	andeq	r9, r1, ip, ror r3
    3d98:	andeq	sl, r1, r8, lsl r3
    3d9c:	andeq	r9, r1, r8, lsr r3
    3da0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3da4:	mov	lr, r0
    3da8:	ldr	r7, [pc, #656]	; 4040 <main@@Base+0x2250>
    3dac:	ldr	r4, [pc, #656]	; 4044 <main@@Base+0x2254>
    3db0:	mov	ip, r0
    3db4:	mov	r9, r1
    3db8:	mov	r8, r2
    3dbc:	ldr	r5, [pc, #644]	; 4048 <main@@Base+0x2258>
    3dc0:	ldm	lr!, {r0, r1, r2, r3}
    3dc4:	add	r7, pc, r7
    3dc8:	add	r4, pc, r4
    3dcc:	ldrh	r6, [ip]
    3dd0:	mov	ip, r4
    3dd4:	ldr	r5, [r7, r5]
    3dd8:	stmia	ip!, {r0, r1, r2, r3}
    3ddc:	sub	sp, sp, #40	; 0x28
    3de0:	ldm	lr, {r0, r1, r2}
    3de4:	mov	sl, #0
    3de8:	ldr	r3, [r5]
    3dec:	cmp	r9, #0
    3df0:	strh	sl, [r4, #2]
    3df4:	stm	ip, {r0, r1, r2}
    3df8:	str	r3, [sp, #36]	; 0x24
    3dfc:	ldrne	r3, [pc, #584]	; 404c <main@@Base+0x225c>
    3e00:	addne	r3, pc, r3
    3e04:	strhne	r9, [r3, #4]
    3e08:	ldr	r7, [pc, #576]	; 4050 <main@@Base+0x2260>
    3e0c:	ldr	r4, [r8]
    3e10:	add	r7, pc, r7
    3e14:	cmp	r4, #7
    3e18:	str	r8, [r7, #40]	; 0x28
    3e1c:	bhi	3e44 <main@@Base+0x2054>
    3e20:	mov	r0, #8
    3e24:	str	r0, [r8]
    3e28:	bl	1b20 <malloc@plt>
    3e2c:	cmp	r0, #0
    3e30:	str	r0, [r7, #36]	; 0x24
    3e34:	bne	3e80 <main@@Base+0x2090>
    3e38:	ldr	r0, [pc, #532]	; 4054 <main@@Base+0x2264>
    3e3c:	add	r0, pc, r0
    3e40:	bl	61a8 <error@@Base>
    3e44:	mov	r0, r4
    3e48:	bl	1b20 <malloc@plt>
    3e4c:	cmp	r0, #0
    3e50:	str	r0, [r7, #36]	; 0x24
    3e54:	beq	3e38 <main@@Base+0x2048>
    3e58:	cmp	r4, #8
    3e5c:	addne	r0, r0, #7
    3e60:	movne	r3, #8
    3e64:	beq	3e80 <main@@Base+0x2090>
    3e68:	and	r2, r3, #63	; 0x3f
    3e6c:	add	r3, r3, #1
    3e70:	add	r2, r2, #64	; 0x40
    3e74:	cmp	r3, r4
    3e78:	strb	r2, [r0, #1]!
    3e7c:	bne	3e68 <main@@Base+0x2078>
    3e80:	ldr	r4, [pc, #464]	; 4058 <main@@Base+0x2268>
    3e84:	cmp	r6, #2
    3e88:	add	r4, pc, r4
    3e8c:	movne	r7, #58	; 0x3a
    3e90:	ldr	r3, [r4, #44]	; 0x2c
    3e94:	moveq	r7, #1
    3e98:	cmp	r3, #0
    3e9c:	beq	3f70 <main@@Base+0x2180>
    3ea0:	ldr	r3, [pc, #436]	; 405c <main@@Base+0x226c>
    3ea4:	add	r3, pc, r3
    3ea8:	ldr	r3, [r3, #48]	; 0x30
    3eac:	cmp	r3, #0
    3eb0:	beq	3fa0 <main@@Base+0x21b0>
    3eb4:	ldr	r3, [pc, #420]	; 4060 <main@@Base+0x2270>
    3eb8:	ldr	r4, [pc, r3]
    3ebc:	mov	r0, r4
    3ec0:	bl	7410 <error@@Base+0x1268>
    3ec4:	bl	7a5c <error@@Base+0x18b4>
    3ec8:	cmp	r0, #0
    3ecc:	beq	3ef4 <main@@Base+0x2104>
    3ed0:	ldr	r3, [pc, #396]	; 4064 <main@@Base+0x2274>
    3ed4:	ldr	r1, [pc, #396]	; 4068 <main@@Base+0x2278>
    3ed8:	add	r3, pc, r3
    3edc:	mov	r2, #28
    3ee0:	add	r1, pc, r1
    3ee4:	ldr	r0, [r3]
    3ee8:	bl	1d30 <connect@plt>
    3eec:	cmp	r0, #0
    3ef0:	blt	4024 <main@@Base+0x2234>
    3ef4:	ldr	r6, [pc, #368]	; 406c <main@@Base+0x227c>
    3ef8:	ldr	r4, [pc, #368]	; 4070 <main@@Base+0x2280>
    3efc:	add	r6, pc, r6
    3f00:	add	r4, pc, r4
    3f04:	ldr	r0, [r6]
    3f08:	bl	7900 <error@@Base+0x1758>
    3f0c:	ldr	r3, [r4, #48]	; 0x30
    3f10:	cmp	r3, #0
    3f14:	beq	3fd0 <main@@Base+0x21e0>
    3f18:	ldr	r6, [r6]
    3f1c:	mov	r3, #28
    3f20:	mov	r0, r6
    3f24:	add	r2, sp, #4
    3f28:	add	r1, sp, #8
    3f2c:	str	r3, [sp, #4]
    3f30:	bl	1cb8 <getsockname@plt>
    3f34:	cmp	r0, #0
    3f38:	blt	4034 <main@@Base+0x2244>
    3f3c:	ldrh	r3, [sp, #10]
    3f40:	rev16	r3, r3
    3f44:	strh	r3, [r4, #28]
    3f48:	mov	r0, r6
    3f4c:	mov	r1, #9
    3f50:	bl	56b0 <main@@Base+0x38c0>
    3f54:	ldr	r2, [sp, #36]	; 0x24
    3f58:	ldr	r3, [r5]
    3f5c:	mov	r0, #0
    3f60:	cmp	r2, r3
    3f64:	bne	4030 <main@@Base+0x2240>
    3f68:	add	sp, sp, #40	; 0x28
    3f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3f70:	mov	r2, r7
    3f74:	mov	r1, #2
    3f78:	mov	r0, r6
    3f7c:	bl	1ce8 <socket@plt>
    3f80:	ldr	r3, [pc, #236]	; 4074 <main@@Base+0x2284>
    3f84:	add	r3, pc, r3
    3f88:	cmp	r0, #0
    3f8c:	str	r0, [r3]
    3f90:	bge	3ea0 <main@@Base+0x20b0>
    3f94:	ldr	r3, [r4, #48]	; 0x30
    3f98:	cmp	r3, #0
    3f9c:	bne	4018 <main@@Base+0x2228>
    3fa0:	mov	r2, r7
    3fa4:	mov	r0, r6
    3fa8:	mov	r1, #3
    3fac:	bl	1ce8 <socket@plt>
    3fb0:	subs	r4, r0, #0
    3fb4:	blt	3fe0 <main@@Base+0x21f0>
    3fb8:	ldr	r6, [pc, #184]	; 4078 <main@@Base+0x2288>
    3fbc:	add	r6, pc, r6
    3fc0:	ldr	r0, [r6]
    3fc4:	bl	1d18 <close@plt>
    3fc8:	str	r4, [r6]
    3fcc:	b	3ebc <main@@Base+0x20cc>
    3fd0:	bl	1b68 <getpid@plt>
    3fd4:	ldr	r6, [r6]
    3fd8:	strh	r0, [r4, #28]
    3fdc:	b	3f48 <main@@Base+0x2158>
    3fe0:	ldr	r3, [pc, #148]	; 407c <main@@Base+0x228c>
    3fe4:	add	r3, pc, r3
    3fe8:	ldr	r2, [r3, #44]	; 0x2c
    3fec:	cmp	r2, #0
    3ff0:	bne	400c <main@@Base+0x221c>
    3ff4:	ldr	r2, [pc, #132]	; 4080 <main@@Base+0x2290>
    3ff8:	ldr	r4, [pc, r2]
    3ffc:	cmp	r4, #0
    4000:	movge	r2, #1
    4004:	strge	r2, [r3, #48]	; 0x30
    4008:	bge	3ebc <main@@Base+0x20cc>
    400c:	ldr	r0, [pc, #112]	; 4084 <main@@Base+0x2294>
    4010:	add	r0, pc, r0
    4014:	bl	6838 <error@@Base+0x690>
    4018:	ldr	r0, [pc, #104]	; 4088 <main@@Base+0x2298>
    401c:	add	r0, pc, r0
    4020:	bl	61a8 <error@@Base>
    4024:	ldr	r0, [pc, #96]	; 408c <main@@Base+0x229c>
    4028:	add	r0, pc, r0
    402c:	bl	61a8 <error@@Base>
    4030:	bl	1a9c <__stack_chk_fail@plt>
    4034:	ldr	r0, [pc, #84]	; 4090 <main@@Base+0x22a0>
    4038:	add	r0, pc, r0
    403c:	bl	61a8 <error@@Base>
    4040:	andeq	r9, r1, ip, asr #1
    4044:	andeq	sl, r1, r0, lsl #5
    4048:	andeq	r0, r0, r8, asr #2
    404c:	andeq	r9, r1, ip, ror #4
    4050:	andeq	sl, r1, r8, lsr r2
    4054:	andeq	r6, r0, r4, lsr #12
    4058:	andeq	sl, r1, r0, asr #3
    405c:	andeq	sl, r1, r4, lsr #3
    4060:			; <UNDEFINED> instruction: 0x000191b4
    4064:	muleq	r1, r4, r1
    4068:	andeq	sl, r1, r8, ror #2
    406c:	andeq	r9, r1, r0, ror r1
    4070:	andeq	sl, r1, r8, asr #2
    4074:	andeq	r9, r1, r8, ror #1
    4078:	strheq	r9, [r1], -r0
    407c:	andeq	sl, r1, r4, rrx
    4080:	andeq	r9, r1, r4, ror r0
    4084:	andeq	r6, r0, ip, lsl #7
    4088:	andeq	r6, r0, r0, lsl #7
    408c:	ldrdeq	r6, [r0], -ip
    4090:	andeq	r6, r0, r0, asr #7
    4094:	tst	r1, #9
    4098:	bxeq	lr
    409c:	ldr	r2, [pc, #12]	; 40b0 <main@@Base+0x22c0>
    40a0:	lsr	r1, r1, #3
    40a4:	and	r1, r1, #1
    40a8:	add	r2, pc, r2
    40ac:	b	6c20 <error@@Base+0xa78>
    40b0:			; <UNDEFINED> instruction: 0xfffffb08
    40b4:	b	6be4 <error@@Base+0xa3c>
    40b8:	push	{r4, r5, r6, lr}
    40bc:	mov	r5, r1
    40c0:	ldr	r4, [pc, #60]	; 4104 <main@@Base+0x2314>
    40c4:	mov	r1, r2
    40c8:	add	r4, pc, r4
    40cc:	mov	r0, r4
    40d0:	bl	71b4 <error@@Base+0x100c>
    40d4:	cmp	r0, #0
    40d8:	beq	40fc <main@@Base+0x230c>
    40dc:	ldr	r0, [r4, #28]
    40e0:	bl	688c <error@@Base+0x6e4>
    40e4:	cmp	r0, #0
    40e8:	beq	40fc <main@@Base+0x230c>
    40ec:	cmp	r5, #0
    40f0:	moveq	r3, #1
    40f4:	streq	r3, [r0, #4]
    40f8:	pop	{r4, r5, r6, pc}
    40fc:	mov	r0, #0
    4100:	pop	{r4, r5, r6, pc}
    4104:			; <UNDEFINED> instruction: 0x00019fb4
    4108:	push	{r4, r5, r6, lr}
    410c:	mov	r5, r0
    4110:	ldr	r4, [pc, #116]	; 418c <main@@Base+0x239c>
    4114:	add	r4, pc, r4
    4118:	ldr	r3, [r4, #32]
    411c:	cmp	r3, r1
    4120:	beq	4138 <main@@Base+0x2348>
    4124:	ldr	r3, [pc, #100]	; 4190 <main@@Base+0x23a0>
    4128:	mov	r6, r1
    412c:	ldr	r0, [pc, r3]
    4130:	bl	79cc <error@@Base+0x1824>
    4134:	str	r6, [r4, #32]
    4138:	bl	59a0 <main@@Base+0x3bb0>
    413c:	ldr	r4, [pc, #80]	; 4194 <main@@Base+0x23a4>
    4140:	ldr	r2, [pc, #80]	; 4198 <main@@Base+0x23a8>
    4144:	add	r4, pc, r4
    4148:	add	r2, pc, r2
    414c:	ldr	ip, [r4, #36]	; 0x24
    4150:	mov	r3, r4
    4154:	ldr	r0, [r2]
    4158:	ldr	r1, [r4, #40]	; 0x28
    415c:	ldr	r2, [ip]
    4160:	vstr	d0, [r5, #40]	; 0x28
    4164:	bl	7b70 <error@@Base+0x19c8>
    4168:	cmp	r0, #0
    416c:	movlt	r2, #0
    4170:	ldrge	r3, [r4, #28]
    4174:	movlt	r3, #0
    4178:	addge	r3, r3, #1
    417c:	strdlt	r2, [r5, #40]	; 0x28
    4180:	strge	r3, [r4, #28]
    4184:	strge	r3, [r5, #64]	; 0x40
    4188:	pop	{r4, r5, r6, pc}
    418c:	andeq	r9, r1, r8, ror #30
    4190:	andeq	r8, r1, ip, asr #31
    4194:	andeq	r9, r1, r8, lsr pc
    4198:			; <UNDEFINED> instruction: 0x00018fb0
    419c:	push	{r4, r5, r6, r7, r8, lr}
    41a0:	mov	lr, r0
    41a4:	ldr	r5, [pc, #292]	; 42d0 <main@@Base+0x24e0>
    41a8:	mov	r4, r0
    41ac:	mov	r7, r1
    41b0:	mov	r6, r2
    41b4:	ldm	lr!, {r0, r1, r2, r3}
    41b8:	add	r5, pc, r5
    41bc:	mov	ip, r5
    41c0:	ldrh	r4, [r4]
    41c4:	stmia	ip!, {r0, r1, r2, r3}
    41c8:	cmp	r7, #0
    41cc:	ldm	lr, {r0, r1, r2}
    41d0:	mov	r3, #0
    41d4:	strh	r3, [r5, #2]
    41d8:	stm	ip, {r0, r1, r2}
    41dc:	ldrne	r3, [pc, #240]	; 42d4 <main@@Base+0x24e4>
    41e0:	addne	r3, pc, r3
    41e4:	strne	r7, [r3, #4]
    41e8:	ldr	r5, [pc, #232]	; 42d8 <main@@Base+0x24e8>
    41ec:	ldr	r0, [r6]
    41f0:	add	r5, pc, r5
    41f4:	cmp	r0, #0
    41f8:	str	r6, [r5, #36]	; 0x24
    41fc:	bne	4274 <main@@Base+0x2484>
    4200:	ldr	r5, [pc, #212]	; 42dc <main@@Base+0x24ec>
    4204:	mov	r0, r4
    4208:	add	r5, pc, r5
    420c:	mov	r1, #3
    4210:	ldr	r2, [r5, #4]
    4214:	bl	1ce8 <socket@plt>
    4218:	cmp	r0, #0
    421c:	str	r0, [r5]
    4220:	blt	42c4 <main@@Base+0x24d4>
    4224:	bl	7410 <error@@Base+0x1268>
    4228:	bl	7a5c <error@@Base+0x18b4>
    422c:	cmp	r0, #0
    4230:	beq	4250 <main@@Base+0x2460>
    4234:	ldr	r1, [pc, #164]	; 42e0 <main@@Base+0x24f0>
    4238:	ldr	r0, [r5]
    423c:	mov	r2, #28
    4240:	add	r1, pc, r1
    4244:	bl	1d30 <connect@plt>
    4248:	cmp	r0, #0
    424c:	blt	42b8 <main@@Base+0x24c8>
    4250:	ldr	r4, [pc, #140]	; 42e4 <main@@Base+0x24f4>
    4254:	add	r4, pc, r4
    4258:	ldr	r0, [r4]
    425c:	bl	7900 <error@@Base+0x1758>
    4260:	ldr	r0, [r4]
    4264:	mov	r1, #9
    4268:	bl	56b0 <main@@Base+0x38c0>
    426c:	mov	r0, #0
    4270:	pop	{r4, r5, r6, r7, r8, pc}
    4274:	bl	1b20 <malloc@plt>
    4278:	cmp	r0, #0
    427c:	str	r0, [r5, #40]	; 0x28
    4280:	beq	42ac <main@@Base+0x24bc>
    4284:	ldr	r1, [r6]
    4288:	sub	r0, r0, #1
    428c:	mov	r3, #0
    4290:	and	r2, r3, #63	; 0x3f
    4294:	add	r3, r3, #1
    4298:	add	r2, r2, #64	; 0x40
    429c:	cmp	r1, r3
    42a0:	strb	r2, [r0, #1]!
    42a4:	bhi	4290 <main@@Base+0x24a0>
    42a8:	b	4200 <main@@Base+0x2410>
    42ac:	ldr	r0, [pc, #52]	; 42e8 <main@@Base+0x24f8>
    42b0:	add	r0, pc, r0
    42b4:	bl	61a8 <error@@Base>
    42b8:	ldr	r0, [pc, #44]	; 42ec <main@@Base+0x24fc>
    42bc:	add	r0, pc, r0
    42c0:	bl	61a8 <error@@Base>
    42c4:	ldr	r0, [pc, #36]	; 42f0 <main@@Base+0x2500>
    42c8:	add	r0, pc, r0
    42cc:	bl	6838 <error@@Base+0x690>
    42d0:	andeq	r9, r1, r4, asr #29
    42d4:	andeq	r8, r1, r8, lsl pc
    42d8:	andeq	r9, r1, ip, lsl #29
    42dc:	strdeq	r8, [r1], -r0
    42e0:	andeq	r9, r1, ip, lsr lr
    42e4:	andeq	r8, r1, r4, lsr #29
    42e8:			; <UNDEFINED> instruction: 0x000061b0
    42ec:	andeq	r6, r0, r8, asr #2
    42f0:	ldrdeq	r6, [r0], -r4
    42f4:	ldr	r3, [pc, #132]	; 4380 <main@@Base+0x2590>
    42f8:	ldr	r2, [pc, #132]	; 4384 <main@@Base+0x2594>
    42fc:	add	r3, pc, r3
    4300:	push	{r4, r5, r6, lr}
    4304:	sub	sp, sp, #8
    4308:	ldr	r5, [r3, r2]
    430c:	mov	r4, r1
    4310:	mov	r0, r1
    4314:	ldr	ip, [r5]
    4318:	mov	r2, #0
    431c:	mov	r1, sp
    4320:	str	ip, [sp, #4]
    4324:	bl	1b80 <strtoul@plt>
    4328:	ldr	r6, [pc, #88]	; 4388 <main@@Base+0x2598>
    432c:	ldr	r3, [sp]
    4330:	add	r6, pc, r6
    4334:	cmp	r4, r3
    4338:	str	r0, [r6, #4]
    433c:	movne	r0, #0
    4340:	beq	435c <main@@Base+0x256c>
    4344:	ldr	r2, [sp, #4]
    4348:	ldr	r3, [r5]
    434c:	cmp	r2, r3
    4350:	bne	437c <main@@Base+0x258c>
    4354:	add	sp, sp, #8
    4358:	pop	{r4, r5, r6, pc}
    435c:	mov	r0, r4
    4360:	bl	1a30 <getprotobyname@plt>
    4364:	cmp	r0, #0
    4368:	mvneq	r0, #0
    436c:	ldrne	r3, [r0, #8]
    4370:	movne	r0, #0
    4374:	strne	r3, [r6, #4]
    4378:	b	4344 <main@@Base+0x2554>
    437c:	bl	1a9c <__stack_chk_fail@plt>
    4380:	muleq	r1, r4, fp
    4384:	andeq	r0, r0, r8, asr #2
    4388:	andeq	r8, r1, r8, asr #27
    438c:	tst	r1, #9
    4390:	bxeq	lr
    4394:	ldr	r2, [pc, #12]	; 43a8 <main@@Base+0x25b8>
    4398:	lsr	r1, r1, #3
    439c:	and	r1, r1, #1
    43a0:	add	r2, pc, r2
    43a4:	b	6c20 <error@@Base+0xa78>
    43a8:			; <UNDEFINED> instruction: 0xfffffd10
    43ac:	ldr	r2, [pc, #24]	; 43cc <main@@Base+0x25dc>
    43b0:	ldr	r3, [r0, #20]
    43b4:	add	r2, pc, r2
    43b8:	mov	r0, #0
    43bc:	ldr	r1, [r2]
    43c0:	orr	r3, r3, r1
    43c4:	str	r3, [r2]
    43c8:	bx	lr
    43cc:	strdeq	r9, [r1], -r4
    43d0:	ldr	r3, [pc, #128]	; 4458 <main@@Base+0x2668>
    43d4:	ldr	r2, [pc, #128]	; 445c <main@@Base+0x266c>
    43d8:	add	r3, pc, r3
    43dc:	push	{r4, r5, lr}
    43e0:	sub	sp, sp, #12
    43e4:	ldr	r4, [r3, r2]
    43e8:	mov	r5, r1
    43ec:	mov	r0, r1
    43f0:	ldr	ip, [r4]
    43f4:	mov	r2, #0
    43f8:	mov	r1, sp
    43fc:	str	ip, [sp, #4]
    4400:	bl	1b80 <strtoul@plt>
    4404:	ldr	r3, [sp]
    4408:	cmp	r5, r3
    440c:	beq	444c <main@@Base+0x265c>
    4410:	ldr	r1, [pc, #72]	; 4460 <main@@Base+0x2670>
    4414:	uxtb	r2, r0
    4418:	add	r1, pc, r1
    441c:	mov	r0, #0
    4420:	ldr	r3, [r1]
    4424:	bic	r3, r3, #255	; 0xff
    4428:	orr	r3, r3, #256	; 0x100
    442c:	orr	r3, r3, r2
    4430:	str	r3, [r1]
    4434:	ldr	r2, [sp, #4]
    4438:	ldr	r3, [r4]
    443c:	cmp	r2, r3
    4440:	bne	4454 <main@@Base+0x2664>
    4444:	add	sp, sp, #12
    4448:	pop	{r4, r5, pc}
    444c:	mvn	r0, #0
    4450:	b	4434 <main@@Base+0x2644>
    4454:	bl	1a9c <__stack_chk_fail@plt>
    4458:			; <UNDEFINED> instruction: 0x00018ab8
    445c:	andeq	r0, r0, r8, asr #2
    4460:	muleq	r1, r0, ip
    4464:	push	{r4, r5, r6, lr}
    4468:	mov	r4, #0
    446c:	ldr	r1, [pc, #96]	; 44d4 <main@@Base+0x26e4>
    4470:	ldr	r6, [pc, #96]	; 44d8 <main@@Base+0x26e8>
    4474:	ldr	r5, [r0, #4]
    4478:	add	r1, pc, r1
    447c:	add	r6, pc, r6
    4480:	b	4488 <main@@Base+0x2698>
    4484:	ldr	r1, [r6, r4, lsl #3]
    4488:	mov	r0, r5
    448c:	bl	19e8 <strcmp@plt>
    4490:	cmp	r0, #0
    4494:	beq	44ac <main@@Base+0x26bc>
    4498:	add	r4, r4, #1
    449c:	cmp	r4, #8
    44a0:	bne	4484 <main@@Base+0x2694>
    44a4:	mvn	r0, #0
    44a8:	pop	{r4, r5, r6, pc}
    44ac:	ldr	r3, [pc, #40]	; 44dc <main@@Base+0x26ec>
    44b0:	ldr	r2, [pc, #40]	; 44e0 <main@@Base+0x26f0>
    44b4:	add	r3, pc, r3
    44b8:	add	r2, pc, r2
    44bc:	add	r4, r3, r4, lsl #3
    44c0:	ldr	r1, [r2]
    44c4:	ldr	r3, [r4, #4]
    44c8:	orr	r3, r3, r1
    44cc:	str	r3, [r2]
    44d0:	pop	{r4, r5, r6, pc}
    44d4:	andeq	r6, r0, ip, lsl #2
    44d8:	andeq	r8, r1, ip, asr #17
    44dc:	muleq	r1, r4, r8
    44e0:	strdeq	r9, [r1], -r0
    44e4:	b	6be4 <error@@Base+0xa3c>
    44e8:	ldr	r0, [pc, #372]	; 4664 <main@@Base+0x2874>
    44ec:	ldr	ip, [pc, #372]	; 4668 <main@@Base+0x2878>
    44f0:	add	r0, pc, r0
    44f4:	push	{r4, r5, r6, r7, r8, r9, lr}
    44f8:	sub	sp, sp, #76	; 0x4c
    44fc:	ldr	r4, [r0, ip]
    4500:	ldr	lr, [sp, #104]	; 0x68
    4504:	ldr	ip, [r4]
    4508:	cmp	lr, #7
    450c:	str	ip, [sp, #68]	; 0x44
    4510:	bls	462c <main@@Base+0x283c>
    4514:	ldr	r6, [pc, #336]	; 466c <main@@Base+0x287c>
    4518:	cmp	r1, #0
    451c:	add	r6, pc, r6
    4520:	ldrhne	r0, [r3, #2]
    4524:	ldrheq	r0, [r3]
    4528:	ldrhne	r8, [r3]
    452c:	ldrheq	r8, [r3, #2]
    4530:	mov	r5, r3
    4534:	ldr	r3, [r6, #4]
    4538:	mov	r7, r1
    453c:	cmp	r0, r3
    4540:	bne	462c <main@@Base+0x283c>
    4544:	mov	r1, r2
    4548:	add	r0, r6, #8
    454c:	bl	71b4 <error@@Base+0x100c>
    4550:	cmp	r0, #0
    4554:	beq	462c <main@@Base+0x283c>
    4558:	mov	r0, r8
    455c:	bl	688c <error@@Base+0x6e4>
    4560:	subs	r8, r0, #0
    4564:	beq	462c <main@@Base+0x283c>
    4568:	cmp	r7, #0
    456c:	bne	4630 <main@@Base+0x2840>
    4570:	ldr	r3, [r6, #36]	; 0x24
    4574:	mov	r2, #1
    4578:	cmp	r3, #0
    457c:	str	r2, [r8, #4]
    4580:	beq	4630 <main@@Base+0x2840>
    4584:	ldr	r6, [pc, #228]	; 4670 <main@@Base+0x2880>
    4588:	ldrb	r7, [r5, #13]
    458c:	add	r6, pc, r6
    4590:	add	r0, sp, #4
    4594:	add	lr, r6, #12
    4598:	mov	r3, r0
    459c:	add	r6, r6, #76	; 0x4c
    45a0:	add	ip, sp, #68	; 0x44
    45a4:	mov	r9, #44	; 0x2c
    45a8:	tst	r7, r2
    45ac:	beq	4618 <main@@Base+0x2828>
    45b0:	cmp	r3, ip
    45b4:	movcs	r5, #0
    45b8:	movcc	r5, #1
    45bc:	cmp	r3, r0
    45c0:	movls	r2, #0
    45c4:	andhi	r2, r5, #1
    45c8:	cmp	r2, #0
    45cc:	beq	45e8 <main@@Base+0x27f8>
    45d0:	add	r2, r3, #1
    45d4:	cmp	r2, ip
    45d8:	strb	r9, [r3]
    45dc:	movcs	r5, #0
    45e0:	movcc	r5, #1
    45e4:	mov	r3, r2
    45e8:	ldr	r1, [lr, #-12]
    45ec:	ldrb	r2, [r1]
    45f0:	cmp	r2, #0
    45f4:	moveq	r5, #0
    45f8:	andne	r5, r5, #1
    45fc:	cmp	r5, #0
    4600:	beq	4618 <main@@Base+0x2828>
    4604:	strb	r2, [r3], #1
    4608:	ldrb	r2, [r1, #1]!
    460c:	cmp	r2, #0
    4610:	cmpne	r3, ip
    4614:	bcc	4604 <main@@Base+0x2814>
    4618:	add	lr, lr, #8
    461c:	cmp	lr, r6
    4620:	beq	464c <main@@Base+0x285c>
    4624:	ldr	r2, [lr, #-8]
    4628:	b	45a8 <main@@Base+0x27b8>
    462c:	mov	r8, #0
    4630:	ldr	r2, [sp, #68]	; 0x44
    4634:	ldr	r3, [r4]
    4638:	mov	r0, r8
    463c:	cmp	r2, r3
    4640:	bne	4660 <main@@Base+0x2870>
    4644:	add	sp, sp, #76	; 0x4c
    4648:	pop	{r4, r5, r6, r7, r8, r9, pc}
    464c:	mov	r2, #0
    4650:	strb	r2, [r3]
    4654:	bl	1be0 <__strdup@plt>
    4658:	str	r0, [r8, #68]	; 0x44
    465c:	b	4630 <main@@Base+0x2840>
    4660:	bl	1a9c <__stack_chk_fail@plt>
    4664:	andeq	r8, r1, r0, lsr #19
    4668:	andeq	r0, r0, r8, asr #2
    466c:	andeq	r9, r1, ip, lsl #23
    4670:			; <UNDEFINED> instruction: 0x000187bc
    4674:	ldr	r2, [pc, #408]	; 4814 <main@@Base+0x2a24>
    4678:	ldr	ip, [pc, #408]	; 4818 <main@@Base+0x2a28>
    467c:	add	r2, pc, r2
    4680:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4684:	mov	r8, r1
    4688:	ldr	r7, [r2, ip]
    468c:	ldr	r4, [pc, #392]	; 481c <main@@Base+0x2a2c>
    4690:	sub	sp, sp, #48	; 0x30
    4694:	ldr	r1, [r7]
    4698:	add	r4, pc, r4
    469c:	mov	r3, #28
    46a0:	str	r1, [sp, #44]	; 0x2c
    46a4:	mov	r6, r0
    46a8:	ldrh	r0, [r4, #8]
    46ac:	mov	r2, #0
    46b0:	mov	r1, #1
    46b4:	str	r3, [sp, #12]
    46b8:	bl	1ce8 <socket@plt>
    46bc:	subs	r5, r0, #0
    46c0:	blt	47f8 <main@@Base+0x2a08>
    46c4:	ldr	r3, [r4, #40]	; 0x28
    46c8:	cmp	r3, #0
    46cc:	bne	47b4 <main@@Base+0x29c4>
    46d0:	mov	r0, r5
    46d4:	bl	7204 <error@@Base+0x105c>
    46d8:	add	r2, sp, #12
    46dc:	add	r1, sp, #16
    46e0:	mov	r0, r5
    46e4:	bl	1cb8 <getsockname@plt>
    46e8:	cmp	r0, #0
    46ec:	blt	4808 <main@@Base+0x2a18>
    46f0:	ldr	r4, [pc, #296]	; 4820 <main@@Base+0x2a30>
    46f4:	ldrh	r3, [sp, #18]
    46f8:	add	r4, pc, r4
    46fc:	ldr	sl, [r4, #44]	; 0x2c
    4700:	strh	r3, [sl]
    4704:	bl	5974 <main@@Base+0x3b84>
    4708:	ldr	r9, [r4, #44]	; 0x2c
    470c:	mov	r3, #0
    4710:	ldr	r1, [r4, #48]	; 0x30
    4714:	str	r0, [sl, #4]
    4718:	strh	r3, [r9, #16]
    471c:	add	r0, r4, #52	; 0x34
    4720:	bl	3230 <main@@Base+0x1440>
    4724:	ldr	r3, [r4, #1076]	; 0x434
    4728:	cmp	r3, r8
    472c:	strh	r0, [r9, #16]
    4730:	beq	474c <main@@Base+0x295c>
    4734:	ldr	r3, [pc, #232]	; 4824 <main@@Base+0x2a34>
    4738:	mov	r1, r8
    473c:	add	r3, pc, r3
    4740:	ldr	r0, [r3]
    4744:	bl	79cc <error@@Base+0x1824>
    4748:	str	r8, [r4, #1076]	; 0x434
    474c:	bl	59a0 <main@@Base+0x3bb0>
    4750:	ldr	r4, [pc, #208]	; 4828 <main@@Base+0x2a38>
    4754:	ldr	r2, [pc, #208]	; 482c <main@@Base+0x2a3c>
    4758:	add	r4, pc, r4
    475c:	add	r2, pc, r2
    4760:	ldr	ip, [r4, #44]	; 0x2c
    4764:	ldr	r0, [r2]
    4768:	add	r3, r4, #8
    476c:	ldrb	r2, [ip, #12]
    4770:	mov	r1, ip
    4774:	lsr	r2, r2, #4
    4778:	lsl	r2, r2, #2
    477c:	vstr	d0, [r6, #40]	; 0x28
    4780:	bl	7b70 <error@@Base+0x19c8>
    4784:	cmp	r0, #0
    4788:	blt	47e0 <main@@Base+0x29f0>
    478c:	ldr	r3, [r4, #44]	; 0x2c
    4790:	ldrh	r3, [r3]
    4794:	str	r5, [r6, #60]	; 0x3c
    4798:	str	r3, [r6, #64]	; 0x40
    479c:	ldr	r2, [sp, #44]	; 0x2c
    47a0:	ldr	r3, [r7]
    47a4:	cmp	r2, r3
    47a8:	bne	4804 <main@@Base+0x2a14>
    47ac:	add	sp, sp, #48	; 0x30
    47b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    47b4:	mov	r2, #4
    47b8:	str	r2, [sp]
    47bc:	add	r3, r4, #40	; 0x28
    47c0:	mov	r2, #2
    47c4:	mov	r1, #1
    47c8:	bl	1a0c <setsockopt@plt>
    47cc:	cmp	r0, #0
    47d0:	bge	46d0 <main@@Base+0x28e0>
    47d4:	ldr	r0, [pc, #84]	; 4830 <main@@Base+0x2a40>
    47d8:	add	r0, pc, r0
    47dc:	bl	61a8 <error@@Base>
    47e0:	mov	r0, r5
    47e4:	bl	1d18 <close@plt>
    47e8:	mov	r2, #0
    47ec:	mov	r3, #0
    47f0:	strd	r2, [r6, #40]	; 0x28
    47f4:	b	479c <main@@Base+0x29ac>
    47f8:	ldr	r0, [pc, #52]	; 4834 <main@@Base+0x2a44>
    47fc:	add	r0, pc, r0
    4800:	bl	61a8 <error@@Base>
    4804:	bl	1a9c <__stack_chk_fail@plt>
    4808:	ldr	r0, [pc, #40]	; 4838 <main@@Base+0x2a48>
    480c:	add	r0, pc, r0
    4810:	bl	61a8 <error@@Base>
    4814:	andeq	r8, r1, r4, lsl r8
    4818:	andeq	r0, r0, r8, asr #2
    481c:	andeq	r9, r1, r0, lsl sl
    4820:			; <UNDEFINED> instruction: 0x000199b0
    4824:	andeq	r8, r1, r8, lsr #20
    4828:	andeq	r9, r1, r0, asr r9
    482c:	andeq	r8, r1, r8, lsl #20
    4830:			; <UNDEFINED> instruction: 0x00005db0
    4834:	andeq	r5, r0, r0, lsr #23
    4838:	andeq	r5, r0, ip, ror #23
    483c:	ldr	r3, [pc, #216]	; 491c <main@@Base+0x2b2c>
    4840:	ldr	r2, [pc, #216]	; 4920 <main@@Base+0x2b30>
    4844:	add	r3, pc, r3
    4848:	push	{r4, r5, r6, fp, lr}
    484c:	add	fp, sp, #16
    4850:	sub	sp, sp, #12
    4854:	ldr	r5, [r3, r2]
    4858:	mov	r4, r0
    485c:	ldr	r3, [r5]
    4860:	str	r3, [fp, #-24]	; 0xffffffe8
    4864:	bl	1b8c <strlen@plt>
    4868:	ldr	ip, [pc, #180]	; 4924 <main@@Base+0x2b34>
    486c:	add	ip, pc, ip
    4870:	mov	r6, r0
    4874:	add	lr, r0, #32
    4878:	ldm	ip!, {r0, r1, r2, r3}
    487c:	bic	lr, lr, #7
    4880:	sub	sp, sp, lr
    4884:	str	r0, [sp]
    4888:	str	r1, [sp, #4]
    488c:	ldm	ip!, {r0, r1}
    4890:	str	r2, [sp, #8]
    4894:	add	r2, r6, #1
    4898:	str	r0, [sp, #16]
    489c:	str	r1, [sp, #20]
    48a0:	add	r0, sp, #23
    48a4:	mov	r1, r4
    48a8:	str	r3, [sp, #12]
    48ac:	bl	1a6c <memcpy@plt>
    48b0:	mov	r2, #0
    48b4:	mov	r0, sp
    48b8:	mov	r1, r2
    48bc:	bl	1b50 <open@plt>
    48c0:	subs	r4, r0, #0
    48c4:	blt	48e8 <main@@Base+0x2af8>
    48c8:	mov	r2, #1
    48cc:	sub	r1, fp, #25
    48d0:	bl	1a24 <read@plt>
    48d4:	mov	r6, r0
    48d8:	mov	r0, r4
    48dc:	bl	1d18 <close@plt>
    48e0:	cmp	r6, #1
    48e4:	beq	4904 <main@@Base+0x2b14>
    48e8:	mov	r0, #0
    48ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    48f0:	ldr	r3, [r5]
    48f4:	cmp	r2, r3
    48f8:	bne	4918 <main@@Base+0x2b28>
    48fc:	sub	sp, fp, #16
    4900:	pop	{r4, r5, r6, fp, pc}
    4904:	ldrb	r0, [fp, #-25]	; 0xffffffe7
    4908:	sub	r0, r0, #49	; 0x31
    490c:	clz	r0, r0
    4910:	lsr	r0, r0, #5
    4914:	b	48ec <main@@Base+0x2afc>
    4918:	bl	1a9c <__stack_chk_fail@plt>
    491c:	andeq	r8, r1, ip, asr #12
    4920:	andeq	r0, r0, r8, asr #2
    4924:	andeq	r5, r0, r4, lsr sp
    4928:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    492c:	mov	lr, r0
    4930:	ldr	r9, [pc, #1276]	; 4e34 <main@@Base+0x3044>
    4934:	ldr	r8, [pc, #1276]	; 4e38 <main@@Base+0x3048>
    4938:	mov	ip, r0
    493c:	mov	r7, r1
    4940:	mov	r6, r2
    4944:	ldr	r5, [pc, #1264]	; 4e3c <main@@Base+0x304c>
    4948:	ldm	lr!, {r0, r1, r2, r3}
    494c:	add	r9, pc, r9
    4950:	add	r8, pc, r8
    4954:	ldrh	r4, [ip]
    4958:	add	ip, r8, #8
    495c:	ldr	r5, [r9, r5]
    4960:	stmia	ip!, {r0, r1, r2, r3}
    4964:	sub	sp, sp, #48	; 0x30
    4968:	ldm	lr, {r0, r1, r2}
    496c:	cmp	r7, #0
    4970:	ldr	r3, [r5]
    4974:	mov	sl, #0
    4978:	strh	sl, [r8, #10]
    497c:	stm	ip, {r0, r1, r2}
    4980:	moveq	r7, #20480	; 0x5000
    4984:	str	r3, [sp, #44]	; 0x2c
    4988:	rev16ne	r7, r7
    498c:	uxthne	r7, r7
    4990:	ldr	r8, [pc, #1192]	; 4e40 <main@@Base+0x3050>
    4994:	mov	r2, #6
    4998:	add	r8, pc, r8
    499c:	mov	r1, #3
    49a0:	mov	r0, r4
    49a4:	str	r7, [r8, #4]
    49a8:	bl	1ce8 <socket@plt>
    49ac:	ldr	r7, [pc, #1168]	; 4e44 <main@@Base+0x3054>
    49b0:	add	r7, pc, r7
    49b4:	cmp	r0, #0
    49b8:	str	r0, [r7]
    49bc:	blt	4e18 <main@@Base+0x3028>
    49c0:	bl	7410 <error@@Base+0x1268>
    49c4:	add	r1, r8, #8
    49c8:	mov	r2, #28
    49cc:	ldr	r0, [r7]
    49d0:	bl	1d30 <connect@plt>
    49d4:	cmp	r0, #0
    49d8:	blt	4e0c <main@@Base+0x301c>
    49dc:	ldr	r7, [r7]
    49e0:	add	r8, sp, #12
    49e4:	mov	r3, #28
    49e8:	mov	r0, r7
    49ec:	mov	r2, r8
    49f0:	add	r1, sp, #16
    49f4:	str	r3, [sp, #12]
    49f8:	bl	1cb8 <getsockname@plt>
    49fc:	cmp	r0, #0
    4a00:	blt	4e00 <main@@Base+0x3010>
    4a04:	cmp	r4, #2
    4a08:	moveq	r2, #14
    4a0c:	movne	r2, #24
    4a10:	movne	r1, #41	; 0x29
    4a14:	moveq	r1, #0
    4a18:	mov	ip, #4
    4a1c:	str	r8, [sp]
    4a20:	mov	r0, r7
    4a24:	add	r3, sp, #8
    4a28:	str	ip, [sp, #12]
    4a2c:	bl	1afc <getsockopt@plt>
    4a30:	cmp	r0, #0
    4a34:	blt	4cc0 <main@@Base+0x2ed0>
    4a38:	ldr	r3, [sp, #8]
    4a3c:	cmp	r3, #576	; 0x240
    4a40:	subge	r3, r3, #20
    4a44:	blt	4cc0 <main@@Base+0x2ed0>
    4a48:	cmp	r4, #2
    4a4c:	movne	r2, #40	; 0x28
    4a50:	moveq	r2, #20
    4a54:	sub	r3, r3, r2
    4a58:	str	r3, [sp, #8]
    4a5c:	bl	7a5c <error@@Base+0x18b4>
    4a60:	cmp	r0, #0
    4a64:	bne	4a98 <main@@Base+0x2ca8>
    4a68:	ldr	r7, [pc, #984]	; 4e48 <main@@Base+0x3058>
    4a6c:	add	r7, pc, r7
    4a70:	ldr	r0, [r7]
    4a74:	bl	1d18 <close@plt>
    4a78:	mov	r2, #6
    4a7c:	mov	r1, #3
    4a80:	mov	r0, r4
    4a84:	bl	1ce8 <socket@plt>
    4a88:	cmp	r0, #0
    4a8c:	str	r0, [r7]
    4a90:	blt	4e28 <main@@Base+0x3038>
    4a94:	bl	7410 <error@@Base+0x1268>
    4a98:	ldr	r7, [pc, #940]	; 4e4c <main@@Base+0x305c>
    4a9c:	add	r7, pc, r7
    4aa0:	ldr	r0, [r7]
    4aa4:	bl	7900 <error@@Base+0x1758>
    4aa8:	ldr	r0, [r7]
    4aac:	mov	r1, #9
    4ab0:	bl	56b0 <main@@Base+0x38c0>
    4ab4:	ldr	r2, [pc, #916]	; 4e50 <main@@Base+0x3060>
    4ab8:	add	r2, pc, r2
    4abc:	ldr	r3, [r2]
    4ac0:	cmp	r3, #0
    4ac4:	moveq	r3, #1
    4ac8:	streq	r3, [r2, #1080]	; 0x438
    4acc:	beq	4cc8 <main@@Base+0x2ed8>
    4ad0:	ldr	r2, [r2, #1080]	; 0x438
    4ad4:	cmp	r2, #0
    4ad8:	bne	4cc8 <main@@Base+0x2ed8>
    4adc:	lsl	r2, r3, #23
    4ae0:	lsr	r2, r2, #23
    4ae4:	cmp	r2, #0
    4ae8:	bne	4b04 <main@@Base+0x2d14>
    4aec:	tst	r3, #512	; 0x200
    4af0:	bne	4dc0 <main@@Base+0x2fd0>
    4af4:	ldr	r2, [pc, #856]	; 4e54 <main@@Base+0x3064>
    4af8:	orr	r3, r3, #2
    4afc:	add	r2, pc, r2
    4b00:	str	r3, [r2]
    4b04:	cmp	r4, #2
    4b08:	beq	4d98 <main@@Base+0x2fa8>
    4b0c:	add	r3, sp, #24
    4b10:	ldr	r4, [pc, #832]	; 4e58 <main@@Base+0x3068>
    4b14:	ldm	r3, {r0, r1, r2, r3}
    4b18:	add	r4, pc, r4
    4b1c:	add	ip, r4, #52	; 0x34
    4b20:	add	lr, r4, #16
    4b24:	stm	ip, {r0, r1, r2, r3}
    4b28:	add	ip, r4, #68	; 0x44
    4b2c:	ldm	lr, {r0, r1, r2, r3}
    4b30:	add	r4, r4, #84	; 0x54
    4b34:	mov	lr, #16
    4b38:	str	lr, [sp, #12]
    4b3c:	stm	ip, {r0, r1, r2, r3}
    4b40:	add	r0, r4, #4
    4b44:	ldr	r1, [pc, #784]	; 4e5c <main@@Base+0x306c>
    4b48:	ldrh	lr, [sp, #8]
    4b4c:	add	r1, pc, r1
    4b50:	ldrb	r3, [r4, #16]
    4b54:	ldr	r2, [r1]
    4b58:	str	r0, [r1, #44]	; 0x2c
    4b5c:	ldr	r0, [r1, #4]
    4b60:	bic	r3, r3, #240	; 0xf0
    4b64:	lsl	ip, lr, #2
    4b68:	rev16	ip, ip
    4b6c:	tst	r2, #2
    4b70:	strh	r0, [r4, #6]
    4b74:	strb	r3, [r4, #16]
    4b78:	mov	r0, #1536	; 0x600
    4b7c:	mov	r3, #0
    4b80:	strh	r3, [r4, #4]
    4b84:	str	r3, [r4, #8]
    4b88:	str	r3, [r4, #12]
    4b8c:	strh	r3, [r4, #20]
    4b90:	strh	r3, [r4, #22]
    4b94:	strh	ip, [r4, #18]
    4b98:	strb	r2, [r4, #17]
    4b9c:	strh	r0, [r4, #2]
    4ba0:	addeq	r3, r4, #24
    4ba4:	beq	4bd0 <main@@Base+0x2de0>
    4ba8:	ldr	r3, [r1, #1084]	; 0x43c
    4bac:	mov	r0, #2
    4bb0:	cmp	r3, #0
    4bb4:	uxthne	lr, r3
    4bb8:	add	r3, r4, #28
    4bbc:	mov	r1, #4
    4bc0:	rev16	lr, lr
    4bc4:	strb	r0, [r4, #24]
    4bc8:	strb	r1, [r4, #25]
    4bcc:	strh	lr, [r4, #26]
    4bd0:	tst	r2, #2048	; 0x800
    4bd4:	beq	4d6c <main@@Base+0x2f7c>
    4bd8:	tst	r2, #1024	; 0x400
    4bdc:	mov	r7, r3
    4be0:	moveq	r2, #1
    4be4:	movne	r2, #2
    4be8:	movne	r1, #4
    4bec:	strbeq	r2, [r7], #2
    4bf0:	strbne	r1, [r7], #2
    4bf4:	strb	r2, [r3, #1]
    4bf8:	mov	r2, #8
    4bfc:	mov	r3, #10
    4c00:	strb	r2, [r7]
    4c04:	strb	r3, [r7, #1]
    4c08:	bl	5974 <main@@Base+0x3b84>
    4c0c:	ldr	r8, [pc, #588]	; 4e60 <main@@Base+0x3070>
    4c10:	add	r8, pc, r8
    4c14:	ldr	r2, [r8]
    4c18:	ands	r3, r2, #16
    4c1c:	str	r0, [r7, #2]
    4c20:	bne	4de4 <main@@Base+0x2ff4>
    4c24:	str	r3, [r7, #6]
    4c28:	add	r3, r7, #10
    4c2c:	tst	r2, #4096	; 0x1000
    4c30:	beq	4c54 <main@@Base+0x2e64>
    4c34:	mov	r2, #3
    4c38:	mov	r0, #1
    4c3c:	mov	r1, #2
    4c40:	strb	r0, [r3]
    4c44:	strb	r2, [r3, #1]
    4c48:	strb	r2, [r3, #2]
    4c4c:	strb	r1, [r3, #3]
    4c50:	add	r3, r3, #4
    4c54:	ldr	r1, [pc, #520]	; 4e64 <main@@Base+0x3074>
    4c58:	add	r1, pc, r1
    4c5c:	add	r2, r1, #52	; 0x34
    4c60:	sub	r2, r3, r2
    4c64:	cmp	r2, #1024	; 0x400
    4c68:	str	r2, [r1, #48]	; 0x30
    4c6c:	bhi	4df4 <main@@Base+0x3004>
    4c70:	ldr	r1, [r1, #44]	; 0x2c
    4c74:	sub	r3, r3, r1
    4c78:	ands	r0, r3, #3
    4c7c:	str	r3, [sp, #12]
    4c80:	bne	4df4 <main@@Base+0x3004>
    4c84:	rev16	r2, r3
    4c88:	strh	r2, [r4]
    4c8c:	ldrb	ip, [r1, #12]
    4c90:	ldr	r4, [sp, #44]	; 0x2c
    4c94:	lsl	r2, r3, #2
    4c98:	ldr	lr, [r5]
    4c9c:	bic	ip, ip, #240	; 0xf0
    4ca0:	and	r2, r2, #240	; 0xf0
    4ca4:	orr	r2, r2, ip
    4ca8:	cmp	r4, lr
    4cac:	strb	r2, [r1, #12]
    4cb0:	str	r3, [r6]
    4cb4:	bne	4e24 <main@@Base+0x3034>
    4cb8:	add	sp, sp, #48	; 0x30
    4cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4cc0:	mov	r3, #556	; 0x22c
    4cc4:	b	4a48 <main@@Base+0x2c58>
    4cc8:	ldr	r0, [pc, #408]	; 4e68 <main@@Base+0x3078>
    4ccc:	add	r0, pc, r0
    4cd0:	bl	483c <main@@Base+0x2a4c>
    4cd4:	cmp	r0, #0
    4cd8:	beq	4cf0 <main@@Base+0x2f00>
    4cdc:	ldr	r2, [pc, #392]	; 4e6c <main@@Base+0x307c>
    4ce0:	add	r2, pc, r2
    4ce4:	ldr	r3, [r2]
    4ce8:	orr	r3, r3, #512	; 0x200
    4cec:	str	r3, [r2]
    4cf0:	ldr	r0, [pc, #376]	; 4e70 <main@@Base+0x3080>
    4cf4:	add	r0, pc, r0
    4cf8:	bl	483c <main@@Base+0x2a4c>
    4cfc:	cmp	r0, #0
    4d00:	beq	4d18 <main@@Base+0x2f28>
    4d04:	ldr	r2, [pc, #360]	; 4e74 <main@@Base+0x3084>
    4d08:	add	r2, pc, r2
    4d0c:	ldr	r3, [r2]
    4d10:	orr	r3, r3, #1024	; 0x400
    4d14:	str	r3, [r2]
    4d18:	ldr	r0, [pc, #344]	; 4e78 <main@@Base+0x3088>
    4d1c:	add	r0, pc, r0
    4d20:	bl	483c <main@@Base+0x2a4c>
    4d24:	cmp	r0, #0
    4d28:	beq	4d40 <main@@Base+0x2f50>
    4d2c:	ldr	r2, [pc, #328]	; 4e7c <main@@Base+0x308c>
    4d30:	add	r2, pc, r2
    4d34:	ldr	r3, [r2]
    4d38:	orr	r3, r3, #2048	; 0x800
    4d3c:	str	r3, [r2]
    4d40:	ldr	r0, [pc, #312]	; 4e80 <main@@Base+0x3090>
    4d44:	add	r0, pc, r0
    4d48:	bl	483c <main@@Base+0x2a4c>
    4d4c:	cmp	r0, #0
    4d50:	beq	4dd4 <main@@Base+0x2fe4>
    4d54:	ldr	r2, [pc, #296]	; 4e84 <main@@Base+0x3094>
    4d58:	add	r2, pc, r2
    4d5c:	ldr	r3, [r2]
    4d60:	orr	r3, r3, #4096	; 0x1000
    4d64:	str	r3, [r2]
    4d68:	b	4adc <main@@Base+0x2cec>
    4d6c:	tst	r2, #1024	; 0x400
    4d70:	beq	4c2c <main@@Base+0x2e3c>
    4d74:	mov	r1, #1
    4d78:	mov	ip, #4
    4d7c:	mov	r0, #2
    4d80:	strb	r1, [r3]
    4d84:	strb	r1, [r3, #1]
    4d88:	strb	ip, [r3, #2]
    4d8c:	strb	r0, [r3, #3]
    4d90:	add	r3, r3, ip
    4d94:	b	4c2c <main@@Base+0x2e3c>
    4d98:	ldr	r4, [pc, #232]	; 4e88 <main@@Base+0x3098>
    4d9c:	ldr	r1, [sp, #20]
    4da0:	add	r4, pc, r4
    4da4:	mov	r3, #4
    4da8:	ldr	r2, [r4, #12]
    4dac:	str	r1, [r4, #52]	; 0x34
    4db0:	str	r2, [r4, #56]	; 0x38
    4db4:	str	r3, [sp, #12]
    4db8:	add	r4, r4, #60	; 0x3c
    4dbc:	b	4b40 <main@@Base+0x2d50>
    4dc0:	ldr	r2, [pc, #196]	; 4e8c <main@@Base+0x309c>
    4dc4:	orr	r3, r3, #194	; 0xc2
    4dc8:	add	r2, pc, r2
    4dcc:	str	r3, [r2]
    4dd0:	b	4b04 <main@@Base+0x2d14>
    4dd4:	ldr	r3, [pc, #180]	; 4e90 <main@@Base+0x30a0>
    4dd8:	add	r3, pc, r3
    4ddc:	ldr	r3, [r3]
    4de0:	b	4adc <main@@Base+0x2cec>
    4de4:	bl	5974 <main@@Base+0x3b84>
    4de8:	ldr	r2, [r8]
    4dec:	mov	r3, r0
    4df0:	b	4c24 <main@@Base+0x2e34>
    4df4:	ldr	r0, [pc, #152]	; 4e94 <main@@Base+0x30a4>
    4df8:	add	r0, pc, r0
    4dfc:	bl	61a8 <error@@Base>
    4e00:	ldr	r0, [pc, #144]	; 4e98 <main@@Base+0x30a8>
    4e04:	add	r0, pc, r0
    4e08:	bl	61a8 <error@@Base>
    4e0c:	ldr	r0, [pc, #136]	; 4e9c <main@@Base+0x30ac>
    4e10:	add	r0, pc, r0
    4e14:	bl	61a8 <error@@Base>
    4e18:	ldr	r0, [pc, #128]	; 4ea0 <main@@Base+0x30b0>
    4e1c:	add	r0, pc, r0
    4e20:	bl	6838 <error@@Base+0x690>
    4e24:	bl	1a9c <__stack_chk_fail@plt>
    4e28:	ldr	r0, [pc, #116]	; 4ea4 <main@@Base+0x30b4>
    4e2c:	add	r0, pc, r0
    4e30:	bl	61a8 <error@@Base>
    4e34:	andeq	r8, r1, r4, asr #10
    4e38:	andeq	r9, r1, r8, asr r7
    4e3c:	andeq	r0, r0, r8, asr #2
    4e40:	andeq	r9, r1, r0, lsl r7
    4e44:			; <UNDEFINED> instruction: 0x000187b4
    4e48:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
    4e4c:	andeq	r8, r1, r8, asr #13
    4e50:	strdeq	r9, [r1], -r0
    4e54:	andeq	r9, r1, ip, lsr #11
    4e58:	muleq	r1, r0, r5
    4e5c:	andeq	r9, r1, ip, asr r5
    4e60:	muleq	r1, r8, r4
    4e64:	andeq	r9, r1, r0, asr r4
    4e68:	andeq	r5, r0, ip, ror #17
    4e6c:	andeq	r9, r1, r8, asr #7
    4e70:	andeq	r5, r0, r8, asr #17
    4e74:	andeq	r9, r1, r0, lsr #7
    4e78:	andeq	r5, r0, r8, lsr #17
    4e7c:	andeq	r9, r1, r8, ror r3
    4e80:	andeq	r5, r0, ip, lsl #17
    4e84:	andeq	r9, r1, r0, asr r3
    4e88:	andeq	r9, r1, r8, lsl #6
    4e8c:	andeq	r9, r1, r0, ror #5
    4e90:	ldrdeq	r9, [r1], -r0
    4e94:	andeq	r5, r0, r4, lsl r6
    4e98:	strdeq	r5, [r0], -r4
    4e9c:	strdeq	r5, [r0], -r4
    4ea0:	andeq	r5, r0, r0, lsl #11
    4ea4:	andeq	r5, r0, r0, ror r5
    4ea8:	tst	r1, #9
    4eac:	bxeq	lr
    4eb0:	ldr	r2, [pc, #12]	; 4ec4 <main@@Base+0x30d4>
    4eb4:	lsr	r1, r1, #3
    4eb8:	and	r1, r1, #1
    4ebc:	add	r2, pc, r2
    4ec0:	b	6c20 <error@@Base+0xa78>
    4ec4:			; <UNDEFINED> instruction: 0xfffff624
    4ec8:	b	6be4 <error@@Base+0xa3c>
    4ecc:	push	{r4, r5, r6, r7, r8, lr}
    4ed0:	ldr	r2, [pc, #240]	; 4fc8 <main@@Base+0x31d8>
    4ed4:	ldr	ip, [sp, #24]
    4ed8:	add	r2, pc, r2
    4edc:	cmp	ip, #7
    4ee0:	ldrh	r2, [r2]
    4ee4:	bls	4f64 <main@@Base+0x3174>
    4ee8:	cmp	r2, #2
    4eec:	ldrb	r4, [r3]
    4ef0:	beq	4f70 <main@@Base+0x3180>
    4ef4:	sub	r2, r4, #1
    4ef8:	cmp	r2, #2
    4efc:	bhi	4f64 <main@@Base+0x3174>
    4f00:	cmp	ip, #55	; 0x37
    4f04:	bls	4f64 <main@@Base+0x3174>
    4f08:	ldrb	r1, [r3, #14]
    4f0c:	ldrb	r6, [r3, #1]
    4f10:	ldr	r0, [r3, #4]
    4f14:	cmp	r1, #6
    4f18:	bne	4f64 <main@@Base+0x3174>
    4f1c:	mov	r7, r0
    4f20:	add	r0, r3, #48	; 0x30
    4f24:	ldr	r1, [pc, #160]	; 4fcc <main@@Base+0x31dc>
    4f28:	ldrh	r2, [r0, #2]
    4f2c:	add	r1, pc, r1
    4f30:	ldrh	r3, [r1, #2]
    4f34:	cmp	r2, r3
    4f38:	bne	4f64 <main@@Base+0x3174>
    4f3c:	ldrh	r0, [r0]
    4f40:	bl	688c <error@@Base+0x6e4>
    4f44:	subs	r5, r0, #0
    4f48:	beq	4f68 <main@@Base+0x3178>
    4f4c:	mov	r3, r7
    4f50:	mov	r2, r6
    4f54:	mov	r1, r4
    4f58:	bl	695c <error@@Base+0x7b4>
    4f5c:	mov	r0, r5
    4f60:	pop	{r4, r5, r6, r7, r8, pc}
    4f64:	mov	r5, #0
    4f68:	mov	r0, r5
    4f6c:	pop	{r4, r5, r6, r7, r8, pc}
    4f70:	cmp	ip, #35	; 0x23
    4f74:	movhi	r5, #0
    4f78:	movls	r5, #1
    4f7c:	and	r2, r4, #247	; 0xf7
    4f80:	cmp	r2, #3
    4f84:	orrne	r5, r5, #1
    4f88:	cmp	r5, #0
    4f8c:	bne	4f64 <main@@Base+0x3174>
    4f90:	ldrb	r0, [r3, #8]
    4f94:	and	r0, r0, #15
    4f98:	lsl	r0, r0, #2
    4f9c:	add	r2, r0, #16
    4fa0:	cmp	ip, r2
    4fa4:	bcc	4f68 <main@@Base+0x3178>
    4fa8:	ldrb	r1, [r3, #17]
    4fac:	ldrb	r6, [r3, #1]
    4fb0:	ldr	r7, [r3, #4]
    4fb4:	cmp	r1, #6
    4fb8:	bne	4f68 <main@@Base+0x3178>
    4fbc:	add	r0, r0, #8
    4fc0:	add	r0, r3, r0
    4fc4:	b	4f24 <main@@Base+0x3134>
    4fc8:	andeq	r9, r1, r0, lsl r6
    4fcc:			; <UNDEFINED> instruction: 0x000195bc
    4fd0:	ldr	r3, [pc, #248]	; 50d0 <main@@Base+0x32e0>
    4fd4:	ldr	r2, [pc, #248]	; 50d4 <main@@Base+0x32e4>
    4fd8:	add	r3, pc, r3
    4fdc:	push	{r4, r5, r6, r7, r8, r9, lr}
    4fe0:	sub	sp, sp, #44	; 0x2c
    4fe4:	ldr	r6, [r3, r2]
    4fe8:	ldr	r7, [pc, #232]	; 50d8 <main@@Base+0x32e8>
    4fec:	mov	r5, r0
    4ff0:	add	r7, pc, r7
    4ff4:	ldr	ip, [r6]
    4ff8:	ldrh	r0, [r7]
    4ffc:	mov	r9, r1
    5000:	mov	r8, #28
    5004:	mov	r2, #0
    5008:	mov	r1, #1
    500c:	str	ip, [sp, #36]	; 0x24
    5010:	str	r8, [sp, #4]
    5014:	bl	1ce8 <socket@plt>
    5018:	subs	r4, r0, #0
    501c:	blt	50b4 <main@@Base+0x32c4>
    5020:	bl	7410 <error@@Base+0x1268>
    5024:	mov	r1, r9
    5028:	mov	r0, r4
    502c:	bl	79cc <error@@Base+0x1824>
    5030:	bl	59a0 <main@@Base+0x3bb0>
    5034:	mov	r2, r8
    5038:	mov	r1, r7
    503c:	mov	r0, r4
    5040:	vstr	d0, [r5, #40]	; 0x28
    5044:	bl	1d30 <connect@plt>
    5048:	cmp	r0, #0
    504c:	blt	5098 <main@@Base+0x32a8>
    5050:	add	r2, sp, #4
    5054:	add	r1, sp, #8
    5058:	mov	r0, r4
    505c:	bl	1cb8 <getsockname@plt>
    5060:	cmp	r0, #0
    5064:	blt	50c4 <main@@Base+0x32d4>
    5068:	ldrh	r3, [sp, #10]
    506c:	str	r4, [r5, #60]	; 0x3c
    5070:	mov	r0, r4
    5074:	str	r3, [r5, #64]	; 0x40
    5078:	mov	r1, #28
    507c:	bl	56b0 <main@@Base+0x38c0>
    5080:	ldr	r2, [sp, #36]	; 0x24
    5084:	ldr	r3, [r6]
    5088:	cmp	r2, r3
    508c:	bne	50c0 <main@@Base+0x32d0>
    5090:	add	sp, sp, #44	; 0x2c
    5094:	pop	{r4, r5, r6, r7, r8, r9, pc}
    5098:	bl	1bbc <__errno_location@plt>
    509c:	ldr	r3, [r0]
    50a0:	cmp	r3, #115	; 0x73
    50a4:	beq	5050 <main@@Base+0x3260>
    50a8:	ldr	r0, [pc, #44]	; 50dc <main@@Base+0x32ec>
    50ac:	add	r0, pc, r0
    50b0:	bl	61a8 <error@@Base>
    50b4:	ldr	r0, [pc, #36]	; 50e0 <main@@Base+0x32f0>
    50b8:	add	r0, pc, r0
    50bc:	bl	61a8 <error@@Base>
    50c0:	bl	1a9c <__stack_chk_fail@plt>
    50c4:	ldr	r0, [pc, #24]	; 50e4 <main@@Base+0x32f4>
    50c8:	add	r0, pc, r0
    50cc:	bl	61a8 <error@@Base>
    50d0:			; <UNDEFINED> instruction: 0x00017eb8
    50d4:	andeq	r0, r0, r8, asr #2
    50d8:	strdeq	r9, [r1], -r8
    50dc:	andeq	r5, r0, r8, asr r3
    50e0:	andeq	r5, r0, r4, ror #5
    50e4:	andeq	r5, r0, r0, lsr r3
    50e8:	push	{r4, r5, r6, lr}
    50ec:	mov	lr, r0
    50f0:	ldr	r6, [pc, #148]	; 518c <main@@Base+0x339c>
    50f4:	mov	r5, r0
    50f8:	mov	r4, r1
    50fc:	ldm	lr!, {r0, r1, r2, r3}
    5100:	add	r6, pc, r6
    5104:	mov	ip, r6
    5108:	ldrh	r5, [r5]
    510c:	stmia	ip!, {r0, r1, r2, r3}
    5110:	cmp	r4, #0
    5114:	ldm	lr, {r0, r1, r2}
    5118:	moveq	r3, #20480	; 0x5000
    511c:	strheq	r3, [r6, #2]
    5120:	stm	ip, {r0, r1, r2}
    5124:	rev16ne	r4, r4
    5128:	strhne	r4, [r6, #2]
    512c:	cmp	r5, #2
    5130:	moveq	r2, #1
    5134:	movne	r2, #58	; 0x3a
    5138:	mov	r0, r5
    513c:	mov	r1, #3
    5140:	bl	1ce8 <socket@plt>
    5144:	ldr	r4, [pc, #68]	; 5190 <main@@Base+0x33a0>
    5148:	add	r4, pc, r4
    514c:	cmp	r0, #0
    5150:	str	r0, [r4]
    5154:	blt	5180 <main@@Base+0x3390>
    5158:	bl	7204 <error@@Base+0x105c>
    515c:	ldr	r0, [r4]
    5160:	bl	730c <error@@Base+0x1164>
    5164:	ldr	r0, [r4]
    5168:	bl	736c <error@@Base+0x11c4>
    516c:	ldr	r0, [r4]
    5170:	mov	r1, #1
    5174:	bl	56b0 <main@@Base+0x38c0>
    5178:	mov	r0, #0
    517c:	pop	{r4, r5, r6, pc}
    5180:	ldr	r0, [pc, #12]	; 5194 <main@@Base+0x33a4>
    5184:	add	r0, pc, r0
    5188:	bl	6838 <error@@Base+0x690>
    518c:	andeq	r9, r1, r8, ror #7
    5190:	andeq	r8, r1, r4, lsl #5
    5194:	andeq	r5, r0, r8, lsl r2
    5198:	ldr	r3, [pc, #184]	; 5258 <main@@Base+0x3468>
    519c:	add	r3, pc, r3
    51a0:	ldr	r3, [r3]
    51a4:	cmp	r3, r0
    51a8:	beq	5238 <main@@Base+0x3448>
    51ac:	push	{r4, r5, r6, lr}
    51b0:	mov	r4, r0
    51b4:	bl	68f4 <error@@Base+0x74c>
    51b8:	subs	r5, r0, #0
    51bc:	mov	r0, r4
    51c0:	beq	5250 <main@@Base+0x3460>
    51c4:	ldr	r1, [pc, #144]	; 525c <main@@Base+0x346c>
    51c8:	mov	r2, #28
    51cc:	add	r1, pc, r1
    51d0:	bl	1d30 <connect@plt>
    51d4:	cmp	r0, #0
    51d8:	bge	51f0 <main@@Base+0x3400>
    51dc:	bl	1bbc <__errno_location@plt>
    51e0:	ldr	r3, [r0]
    51e4:	cmp	r3, #106	; 0x6a
    51e8:	cmpne	r3, #111	; 0x6f
    51ec:	popne	{r4, r5, r6, pc}
    51f0:	ldr	ip, [pc, #104]	; 5260 <main@@Base+0x3470>
    51f4:	mov	r4, #1
    51f8:	add	ip, pc, ip
    51fc:	ldm	ip!, {r0, r1, r2, r3}
    5200:	str	r0, [r5, #8]
    5204:	str	r1, [r5, #12]
    5208:	str	r2, [r5, #16]
    520c:	str	r3, [r5, #20]
    5210:	ldm	ip!, {r0, r1, r2}
    5214:	str	r4, [r5, #4]
    5218:	str	r0, [r5, #24]
    521c:	str	r1, [r5, #28]
    5220:	str	r2, [r5, #32]
    5224:	bl	59a0 <main@@Base+0x3bb0>
    5228:	mov	r0, r5
    522c:	vstr	d0, [r5, #48]	; 0x30
    5230:	pop	{r4, r5, r6, lr}
    5234:	b	6be4 <error@@Base+0xa3c>
    5238:	tst	r1, #1
    523c:	bxeq	lr
    5240:	ldr	r2, [pc, #28]	; 5264 <main@@Base+0x3474>
    5244:	mov	r1, #0
    5248:	add	r2, pc, r2
    524c:	b	6c20 <error@@Base+0xa78>
    5250:	pop	{r4, r5, r6, lr}
    5254:	b	5770 <main@@Base+0x3980>
    5258:	andeq	r8, r1, r0, lsr r2
    525c:	andeq	r9, r1, ip, lsl r3
    5260:	strdeq	r9, [r1], -r0
    5264:			; <UNDEFINED> instruction: 0xfffffc7c
    5268:	b	6be4 <error@@Base+0xa3c>
    526c:	push	{r4, r5, r6, lr}
    5270:	mov	r5, r1
    5274:	mov	r4, r2
    5278:	bl	68f4 <error@@Base+0x74c>
    527c:	cmp	r0, #0
    5280:	popeq	{r4, r5, r6, pc}
    5284:	ldrh	r3, [r4, #2]
    5288:	ldr	r2, [r0, #64]	; 0x40
    528c:	cmp	r2, r3
    5290:	bne	52a4 <main@@Base+0x34b4>
    5294:	cmp	r5, #0
    5298:	moveq	r3, #1
    529c:	streq	r3, [r0, #4]
    52a0:	pop	{r4, r5, r6, pc}
    52a4:	mov	r0, #0
    52a8:	pop	{r4, r5, r6, pc}
    52ac:	ldr	ip, [pc, #404]	; 5448 <main@@Base+0x3658>
    52b0:	ldr	r3, [pc, #404]	; 544c <main@@Base+0x365c>
    52b4:	add	ip, pc, ip
    52b8:	push	{r4, r5, r6, r7, r8, r9, lr}
    52bc:	sub	sp, sp, #20
    52c0:	ldr	r7, [ip, r3]
    52c4:	ldr	r2, [pc, #388]	; 5450 <main@@Base+0x3660>
    52c8:	ldr	r5, [pc, #388]	; 5454 <main@@Base+0x3664>
    52cc:	add	r2, pc, r2
    52d0:	add	r5, pc, r5
    52d4:	ldr	r3, [r7]
    52d8:	mov	r6, r0
    52dc:	mov	r8, r1
    52e0:	ldr	r2, [r2]
    52e4:	ldrh	r0, [r5]
    52e8:	mov	r1, #2
    52ec:	str	r3, [sp, #12]
    52f0:	bl	1ce8 <socket@plt>
    52f4:	subs	r4, r0, #0
    52f8:	blt	5420 <main@@Base+0x3630>
    52fc:	bl	7410 <error@@Base+0x1268>
    5300:	ldr	r3, [r5, #28]
    5304:	cmp	r3, #0
    5308:	bne	53b0 <main@@Base+0x35c0>
    530c:	ldr	r5, [pc, #324]	; 5458 <main@@Base+0x3668>
    5310:	mov	r1, r8
    5314:	mov	r0, r4
    5318:	add	r5, pc, r5
    531c:	bl	79cc <error@@Base+0x1824>
    5320:	mov	r1, r5
    5324:	mov	r2, #28
    5328:	mov	r0, r4
    532c:	bl	1d30 <connect@plt>
    5330:	cmp	r0, #0
    5334:	blt	5430 <main@@Base+0x3640>
    5338:	mov	r0, r4
    533c:	bl	7900 <error@@Base+0x1758>
    5340:	bl	59a0 <main@@Base+0x3bb0>
    5344:	ldr	r2, [r5, #32]
    5348:	mov	r3, #0
    534c:	ldr	r1, [r5, #36]	; 0x24
    5350:	ldr	r2, [r2]
    5354:	mov	r0, r4
    5358:	vstr	d0, [r6, #40]	; 0x28
    535c:	bl	7b70 <error@@Base+0x19c8>
    5360:	cmp	r0, #0
    5364:	blt	5408 <main@@Base+0x3618>
    5368:	str	r4, [r6, #60]	; 0x3c
    536c:	mov	r0, r4
    5370:	mov	r1, #9
    5374:	bl	56b0 <main@@Base+0x38c0>
    5378:	ldrh	r2, [r5, #2]
    537c:	ldr	r3, [r5, #40]	; 0x28
    5380:	cmp	r3, #0
    5384:	str	r2, [r6, #64]	; 0x40
    5388:	addne	r3, r3, #1
    538c:	rev16ne	r2, r3
    5390:	strne	r3, [r5, #40]	; 0x28
    5394:	strhne	r2, [r5, #2]
    5398:	ldr	r2, [sp, #12]
    539c:	ldr	r3, [r7]
    53a0:	cmp	r2, r3
    53a4:	bne	542c <main@@Base+0x363c>
    53a8:	add	sp, sp, #20
    53ac:	pop	{r4, r5, r6, r7, r8, r9, pc}
    53b0:	mov	r9, #4
    53b4:	mov	ip, #8
    53b8:	add	r3, r5, #28
    53bc:	str	r9, [sp]
    53c0:	mov	r2, #10
    53c4:	mov	r1, #136	; 0x88
    53c8:	mov	r0, r4
    53cc:	str	ip, [sp, #8]
    53d0:	bl	1a0c <setsockopt@plt>
    53d4:	cmp	r0, #0
    53d8:	blt	543c <main@@Base+0x364c>
    53dc:	str	r9, [sp]
    53e0:	add	r3, sp, #8
    53e4:	mov	r2, #11
    53e8:	mov	r1, #136	; 0x88
    53ec:	mov	r0, r4
    53f0:	bl	1a0c <setsockopt@plt>
    53f4:	cmp	r0, #0
    53f8:	bge	530c <main@@Base+0x351c>
    53fc:	ldr	r0, [pc, #88]	; 545c <main@@Base+0x366c>
    5400:	add	r0, pc, r0
    5404:	bl	61a8 <error@@Base>
    5408:	mov	r0, r4
    540c:	bl	1d18 <close@plt>
    5410:	mov	r2, #0
    5414:	mov	r3, #0
    5418:	strd	r2, [r6, #40]	; 0x28
    541c:	b	5398 <main@@Base+0x35a8>
    5420:	ldr	r0, [pc, #56]	; 5460 <main@@Base+0x3670>
    5424:	add	r0, pc, r0
    5428:	bl	61a8 <error@@Base>
    542c:	bl	1a9c <__stack_chk_fail@plt>
    5430:	ldr	r0, [pc, #44]	; 5464 <main@@Base+0x3674>
    5434:	add	r0, pc, r0
    5438:	bl	61a8 <error@@Base>
    543c:	ldr	r0, [pc, #36]	; 5468 <main@@Base+0x3678>
    5440:	add	r0, pc, r0
    5444:	bl	61a8 <error@@Base>
    5448:	ldrdeq	r7, [r1], -ip
    544c:	andeq	r0, r0, r8, asr #2
    5450:	andeq	r8, r1, r8, lsr #2
    5454:	andeq	r9, r1, r4, lsr r2
    5458:	andeq	r9, r1, ip, ror #3
    545c:	strdeq	r5, [r0], -ip
    5460:	andeq	r4, r0, r8, ror pc
    5464:	ldrdeq	r4, [r0], -r0
    5468:	andeq	r5, r0, r8, lsr #9
    546c:	push	{r4, r5, r6, lr}
    5470:	ldr	r3, [r0]
    5474:	ldr	r5, [pc, #88]	; 54d4 <main@@Base+0x36e4>
    5478:	cmp	r3, #0
    547c:	add	r5, pc, r5
    5480:	str	r0, [r5, #32]
    5484:	popeq	{r4, r5, r6, pc}
    5488:	mov	r4, r0
    548c:	mov	r0, r3
    5490:	bl	1b20 <malloc@plt>
    5494:	cmp	r0, #0
    5498:	str	r0, [r5, #36]	; 0x24
    549c:	beq	54c8 <main@@Base+0x36d8>
    54a0:	ldr	r1, [r4]
    54a4:	sub	r0, r0, #1
    54a8:	mov	r3, #0
    54ac:	and	r2, r3, #63	; 0x3f
    54b0:	add	r3, r3, #1
    54b4:	add	r2, r2, #64	; 0x40
    54b8:	cmp	r1, r3
    54bc:	strb	r2, [r0, #1]!
    54c0:	bhi	54ac <main@@Base+0x36bc>
    54c4:	pop	{r4, r5, r6, pc}
    54c8:	ldr	r0, [pc, #8]	; 54d8 <main@@Base+0x36e8>
    54cc:	add	r0, pc, r0
    54d0:	bl	61a8 <error@@Base>
    54d4:	andeq	r9, r1, r8, lsl #1
    54d8:	muleq	r0, r4, pc	; <UNPREDICTABLE>
    54dc:	push	{r4, r5, r6, r7, r8, lr}
    54e0:	subs	r5, r1, #0
    54e4:	mov	r7, r2
    54e8:	bne	552c <main@@Base+0x373c>
    54ec:	ldr	r6, [pc, #68]	; 5538 <main@@Base+0x3748>
    54f0:	ldr	r5, [pc, #68]	; 553c <main@@Base+0x374c>
    54f4:	mov	ip, r0
    54f8:	ldr	r4, [pc, #64]	; 5540 <main@@Base+0x3750>
    54fc:	ldm	ip!, {r0, r1, r2, r3}
    5500:	add	r4, pc, r4
    5504:	mov	lr, r4
    5508:	str	r5, [r4, #40]	; 0x28
    550c:	stmia	lr!, {r0, r1, r2, r3}
    5510:	ldm	ip, {r0, r1, r2}
    5514:	strh	r6, [r4, #2]
    5518:	stm	lr, {r0, r1, r2}
    551c:	mov	r0, r7
    5520:	bl	546c <main@@Base+0x367c>
    5524:	mov	r0, #0
    5528:	pop	{r4, r5, r6, r7, r8, pc}
    552c:	rev16	r6, r5
    5530:	uxth	r6, r6
    5534:	b	54f4 <main@@Base+0x3704>
    5538:	andeq	r9, r0, r2, lsl #21
    553c:	muleq	r0, sl, r2
    5540:	andeq	r9, r1, r4
    5544:	push	{r4, r5, r6, lr}
    5548:	mov	lr, r0
    554c:	mov	r4, r1
    5550:	mov	r5, r2
    5554:	ldr	ip, [pc, #60]	; 5598 <main@@Base+0x37a8>
    5558:	ldm	lr!, {r0, r1, r2, r3}
    555c:	add	ip, pc, ip
    5560:	cmp	r4, #0
    5564:	moveq	r4, #13568	; 0x3500
    5568:	stmia	ip!, {r0, r1, r2, r3}
    556c:	ldm	lr, {r0, r1, r2}
    5570:	stm	ip, {r0, r1, r2}
    5574:	rev16ne	r4, r4
    5578:	uxthne	r4, r4
    557c:	ldr	r3, [pc, #24]	; 559c <main@@Base+0x37ac>
    5580:	mov	r0, r5
    5584:	add	r3, pc, r3
    5588:	strh	r4, [r3, #2]
    558c:	bl	546c <main@@Base+0x367c>
    5590:	mov	r0, #0
    5594:	pop	{r4, r5, r6, pc}
    5598:	andeq	r8, r1, r8, lsr #31
    559c:	andeq	r8, r1, r0, lsl #31
    55a0:	push	{r4, r5, r6, lr}
    55a4:	mov	lr, r0
    55a8:	mov	r4, r1
    55ac:	mov	r5, r2
    55b0:	ldr	ip, [pc, #92]	; 5614 <main@@Base+0x3824>
    55b4:	ldm	lr!, {r0, r1, r2, r3}
    55b8:	add	ip, pc, ip
    55bc:	cmp	r4, #0
    55c0:	moveq	r4, #13568	; 0x3500
    55c4:	stmia	ip!, {r0, r1, r2, r3}
    55c8:	ldm	lr, {r0, r1, r2}
    55cc:	stm	ip, {r0, r1, r2}
    55d0:	rev16ne	r4, r4
    55d4:	uxthne	r4, r4
    55d8:	ldr	r2, [pc, #56]	; 5618 <main@@Base+0x3828>
    55dc:	ldr	r3, [pc, #56]	; 561c <main@@Base+0x382c>
    55e0:	add	r2, pc, r2
    55e4:	add	r3, pc, r3
    55e8:	ldr	r0, [r2, #28]
    55ec:	mov	r1, #136	; 0x88
    55f0:	cmp	r0, #0
    55f4:	str	r1, [r3]
    55f8:	mov	r0, r5
    55fc:	moveq	r3, #8
    5600:	strh	r4, [r2, #2]
    5604:	streq	r3, [r2, #28]
    5608:	bl	546c <main@@Base+0x367c>
    560c:	mov	r0, #0
    5610:	pop	{r4, r5, r6, pc}
    5614:	andeq	r8, r1, ip, asr #30
    5618:	andeq	r8, r1, r4, lsr #30
    561c:	andeq	r7, r1, r0, lsl lr
    5620:	tst	r1, #9
    5624:	bxeq	lr
    5628:	ldr	r2, [pc, #12]	; 563c <main@@Base+0x384c>
    562c:	lsr	r1, r1, #3
    5630:	and	r1, r1, #1
    5634:	add	r2, pc, r2
    5638:	b	6c20 <error@@Base+0xa78>
    563c:			; <UNDEFINED> instruction: 0xfffffc30
    5640:	ldr	r3, [pc, #16]	; 5658 <main@@Base+0x3868>
    5644:	add	r3, pc, r3
    5648:	ldr	r2, [r3]
    564c:	str	r0, [r3]
    5650:	str	r2, [r0]
    5654:	bx	lr
    5658:	andeq	r8, r1, ip, ror #29
    565c:	push	{r4, r5, r6, lr}
    5660:	subs	r5, r0, #0
    5664:	beq	56a4 <main@@Base+0x38b4>
    5668:	ldr	r3, [pc, #60]	; 56ac <main@@Base+0x38bc>
    566c:	ldr	r4, [pc, r3]
    5670:	cmp	r4, #0
    5674:	bne	5688 <main@@Base+0x3898>
    5678:	b	569c <main@@Base+0x38ac>
    567c:	ldr	r4, [r4]
    5680:	cmp	r4, #0
    5684:	beq	569c <main@@Base+0x38ac>
    5688:	ldr	r1, [r4, #4]
    568c:	mov	r0, r5
    5690:	bl	1ac0 <strcasecmp@plt>
    5694:	cmp	r0, #0
    5698:	bne	567c <main@@Base+0x388c>
    569c:	mov	r0, r4
    56a0:	pop	{r4, r5, r6, pc}
    56a4:	mov	r4, r5
    56a8:	b	569c <main@@Base+0x38ac>
    56ac:	andeq	r8, r1, r4, asr #29
    56b0:	ldr	r3, [pc, #172]	; 5764 <main@@Base+0x3974>
    56b4:	push	{r4, r5, r6, r7, r8, lr}
    56b8:	add	r3, pc, r3
    56bc:	mov	r4, r0
    56c0:	ldr	ip, [r3]
    56c4:	mov	r5, r1
    56c8:	cmp	ip, #0
    56cc:	moveq	r6, ip
    56d0:	ldr	r0, [r3, #4]
    56d4:	moveq	r1, #8
    56d8:	moveq	ip, #1
    56dc:	beq	5724 <main@@Base+0x3934>
    56e0:	ldr	r3, [r0]
    56e4:	cmp	r3, #0
    56e8:	ble	5750 <main@@Base+0x3960>
    56ec:	add	r2, r0, #8
    56f0:	mov	r3, #0
    56f4:	b	570c <main@@Base+0x391c>
    56f8:	ldr	r1, [r0, r3, lsl #3]
    56fc:	mov	lr, r2
    5700:	cmp	r1, #0
    5704:	add	r2, r2, #8
    5708:	ble	5744 <main@@Base+0x3954>
    570c:	add	r3, r3, #1
    5710:	cmp	r3, ip
    5714:	mov	r6, r3
    5718:	bne	56f8 <main@@Base+0x3908>
    571c:	add	ip, ip, #1
    5720:	lsl	r1, ip, #3
    5724:	ldr	r7, [pc, #60]	; 5768 <main@@Base+0x3978>
    5728:	add	r7, pc, r7
    572c:	str	ip, [r7]
    5730:	bl	1ab4 <realloc@plt>
    5734:	cmp	r0, #0
    5738:	str	r0, [r7, #4]
    573c:	beq	5758 <main@@Base+0x3968>
    5740:	add	lr, r0, r6, lsl #3
    5744:	str	r4, [lr]
    5748:	strh	r5, [lr, #4]
    574c:	pop	{r4, r5, r6, r7, r8, pc}
    5750:	mov	lr, r0
    5754:	b	5744 <main@@Base+0x3954>
    5758:	ldr	r0, [pc, #12]	; 576c <main@@Base+0x397c>
    575c:	add	r0, pc, r0
    5760:	bl	61a8 <error@@Base>
    5764:	andeq	r8, r1, ip, ror lr
    5768:	andeq	r8, r1, ip, lsl #28
    576c:	andeq	r5, r0, ip, lsl r2
    5770:	ldr	r3, [pc, #92]	; 57d4 <main@@Base+0x39e4>
    5774:	push	{r4, lr}
    5778:	add	r3, pc, r3
    577c:	ldr	lr, [r3]
    5780:	cmp	lr, #0
    5784:	popeq	{r4, pc}
    5788:	ldr	ip, [r3, #4]
    578c:	ldr	r3, [ip]
    5790:	cmp	r0, r3
    5794:	beq	57cc <main@@Base+0x39dc>
    5798:	add	r2, ip, #8
    579c:	mov	r3, #0
    57a0:	add	r3, r3, #1
    57a4:	cmp	r3, lr
    57a8:	popeq	{r4, pc}
    57ac:	ldr	r1, [ip, r3, lsl #3]
    57b0:	mov	r4, r2
    57b4:	cmp	r1, r0
    57b8:	add	r2, r2, #8
    57bc:	bne	57a0 <main@@Base+0x39b0>
    57c0:	mvn	r3, #0
    57c4:	str	r3, [r4]
    57c8:	pop	{r4, pc}
    57cc:	mov	r4, ip
    57d0:	b	57c0 <main@@Base+0x39d0>
    57d4:			; <UNDEFINED> instruction: 0x00018dbc
    57d8:	vldr	d7, [pc, #376]	; 5958 <main@@Base+0x3b68>
    57dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    57e0:	sub	sp, sp, #12
    57e4:	mov	r5, r0
    57e8:	vmul.f64	d0, d0, d7
    57ec:	bl	1c4c <ceil@plt>
    57f0:	ldr	r3, [pc, #360]	; 5960 <main@@Base+0x3b70>
    57f4:	ldr	r8, [pc, #360]	; 5964 <main@@Base+0x3b74>
    57f8:	add	r3, pc, r3
    57fc:	ldr	r9, [pc, #356]	; 5968 <main@@Base+0x3b78>
    5800:	ldr	r2, [pc, #356]	; 596c <main@@Base+0x3b7c>
    5804:	ldr	lr, [r3]
    5808:	add	r8, pc, r8
    580c:	mvn	r4, #0
    5810:	mov	r7, #0
    5814:	add	r9, pc, r9
    5818:	add	r2, pc, r2
    581c:	str	r2, [sp, #4]
    5820:	vcvt.s32.f64	s15, d0
    5824:	vmov	fp, s15
    5828:	mov	r6, fp
    582c:	cmp	lr, #0
    5830:	beq	5914 <main@@Base+0x3b24>
    5834:	ldr	ip, [r8, #4]
    5838:	ldr	r3, [ip]
    583c:	cmp	r3, #0
    5840:	movgt	r2, r7
    5844:	bgt	585c <main@@Base+0x3a6c>
    5848:	b	593c <main@@Base+0x3b4c>
    584c:	ldr	r1, [ip, r3, lsl #3]
    5850:	cmp	r1, #0
    5854:	ble	58cc <main@@Base+0x3adc>
    5858:	mov	r2, r3
    585c:	add	r3, r2, #1
    5860:	cmp	r3, lr
    5864:	bne	584c <main@@Base+0x3a5c>
    5868:	mov	r2, r6
    586c:	mov	r1, r3
    5870:	mov	r0, ip
    5874:	bl	1ad8 <poll@plt>
    5878:	subs	fp, r0, #0
    587c:	ble	591c <main@@Base+0x3b2c>
    5880:	ldr	r3, [sp, #4]
    5884:	mov	sl, #0
    5888:	mov	r6, r7
    588c:	ldr	lr, [r3]
    5890:	cmp	sl, lr
    5894:	bcs	582c <main@@Base+0x3a3c>
    5898:	ldr	r3, [r9, #4]
    589c:	add	r2, r3, sl, lsl #3
    58a0:	ldrsh	r1, [r2, #6]
    58a4:	cmp	r1, #0
    58a8:	addeq	sl, sl, #1
    58ac:	beq	5890 <main@@Base+0x3aa0>
    58b0:	ldr	r0, [r3, sl, lsl #3]
    58b4:	blx	r5
    58b8:	subs	fp, fp, #1
    58bc:	add	sl, sl, #1
    58c0:	ldr	lr, [r9]
    58c4:	bne	5890 <main@@Base+0x3aa0>
    58c8:	b	5828 <main@@Base+0x3a38>
    58cc:	add	r2, r2, #2
    58d0:	cmp	lr, r2
    58d4:	mov	sl, r2
    58d8:	bls	5868 <main@@Base+0x3a78>
    58dc:	ldr	r0, [ip, sl, lsl #3]
    58e0:	add	r1, ip, sl, lsl #3
    58e4:	cmp	r0, #0
    58e8:	addgt	fp, ip, r3, lsl #3
    58ec:	ldmgt	r1, {r0, r1}
    58f0:	add	r2, r2, #1
    58f4:	addgt	r3, r3, #1
    58f8:	stmgt	fp, {r0, r1}
    58fc:	strgt	r4, [ip, sl, lsl #3]
    5900:	cmp	lr, r2
    5904:	mov	sl, r2
    5908:	bhi	58dc <main@@Base+0x3aec>
    590c:	cmp	r3, #0
    5910:	bne	5868 <main@@Base+0x3a78>
    5914:	add	sp, sp, #12
    5918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    591c:	beq	5914 <main@@Base+0x3b24>
    5920:	bl	1bbc <__errno_location@plt>
    5924:	ldr	r3, [r0]
    5928:	cmp	r3, #4
    592c:	beq	5914 <main@@Base+0x3b24>
    5930:	ldr	r0, [pc, #56]	; 5970 <main@@Base+0x3b80>
    5934:	add	r0, pc, r0
    5938:	bl	61a8 <error@@Base>
    593c:	cmp	lr, #1
    5940:	bls	5914 <main@@Base+0x3b24>
    5944:	mov	r2, #1
    5948:	mov	sl, r2
    594c:	mov	r3, r7
    5950:	b	58dc <main@@Base+0x3aec>
    5954:	nop			; (mov r0, r0)
    5958:	andeq	r0, r0, r0
    595c:	addmi	r4, pc, r0
    5960:	andeq	r8, r1, ip, lsr sp
    5964:	andeq	r8, r1, ip, lsr #26
    5968:	andeq	r8, r1, r0, lsr #26
    596c:	andeq	r8, r1, ip, lsl sp
    5970:	andeq	r5, r0, ip, asr #32
    5974:	push	{r4, r5, r6, lr}
    5978:	bl	1c58 <rand@plt>
    597c:	mov	r5, r0
    5980:	bl	1c58 <rand@plt>
    5984:	lsl	r4, r0, #8
    5988:	bl	1c58 <rand@plt>
    598c:	eor	r4, r4, r5, lsl #16
    5990:	eor	r4, r4, r0
    5994:	bl	1c58 <rand@plt>
    5998:	eor	r0, r4, r0, asr #8
    599c:	pop	{r4, r5, r6, pc}
    59a0:	ldr	r3, [pc, #104]	; 5a10 <main@@Base+0x3c20>
    59a4:	ldr	r2, [pc, #104]	; 5a14 <main@@Base+0x3c24>
    59a8:	add	r3, pc, r3
    59ac:	push	{r4, lr}
    59b0:	sub	sp, sp, #16
    59b4:	ldr	r4, [r3, r2]
    59b8:	mov	r1, #0
    59bc:	add	r0, sp, #4
    59c0:	ldr	r3, [r4]
    59c4:	str	r3, [sp, #12]
    59c8:	bl	1b08 <gettimeofday@plt>
    59cc:	vldr	s15, [sp, #8]
    59d0:	vldr	d5, [pc, #48]	; 5a08 <main@@Base+0x3c18>
    59d4:	ldr	r2, [sp, #12]
    59d8:	ldr	r3, [r4]
    59dc:	vcvt.f64.s32	d6, s15
    59e0:	vldr	s15, [sp, #4]
    59e4:	cmp	r2, r3
    59e8:	vcvt.f64.u32	d7, s15
    59ec:	vdiv.f64	d0, d6, d5
    59f0:	vadd.f64	d0, d0, d7
    59f4:	bne	5a00 <main@@Base+0x3c10>
    59f8:	add	sp, sp, #16
    59fc:	pop	{r4, pc}
    5a00:	bl	1a9c <__stack_chk_fail@plt>
    5a04:	nop			; (mov r0, r0)
    5a08:	andeq	r0, r0, r0
    5a0c:	smlawbmi	lr, r0, r4, r8
    5a10:	andeq	r7, r1, r8, ror #9
    5a14:	andeq	r0, r0, r8, asr #2
    5a18:	ldr	r3, [r0, #20]
    5a1c:	cmp	r3, #4
    5a20:	beq	5a44 <main@@Base+0x3c54>
    5a24:	cmp	r3, #6
    5a28:	bne	5a5c <main@@Base+0x3c6c>
    5a2c:	ldr	r3, [pc, #48]	; 5a64 <main@@Base+0x3c74>
    5a30:	mov	r2, #10
    5a34:	add	r3, pc, r3
    5a38:	mov	r0, #0
    5a3c:	str	r2, [r3]
    5a40:	bx	lr
    5a44:	ldr	r3, [pc, #28]	; 5a68 <main@@Base+0x3c78>
    5a48:	mov	r2, #2
    5a4c:	add	r3, pc, r3
    5a50:	mov	r0, #0
    5a54:	str	r2, [r3]
    5a58:	bx	lr
    5a5c:	mvn	r0, #0
    5a60:	bx	lr
    5a64:	andeq	r8, r1, ip, lsl #22
    5a68:	strdeq	r8, [r1], -r4
    5a6c:	ldr	r3, [pc, #16]	; 5a84 <main@@Base+0x3c94>
    5a70:	ldr	r2, [r0, #20]
    5a74:	add	r3, pc, r3
    5a78:	mov	r0, #0
    5a7c:	str	r2, [r3]
    5a80:	bx	lr
    5a84:	andeq	r7, r1, ip, ror pc
    5a88:	ldr	r3, [pc, #432]	; 5c40 <main@@Base+0x3e50>
    5a8c:	push	{r4, r5, r6, r7, r8, lr}
    5a90:	add	r3, pc, r3
    5a94:	vpush	{d8-d9}
    5a98:	vldr	d9, [pc, #400]	; 5c30 <main@@Base+0x3e40>
    5a9c:	vldr	d8, [r3]
    5aa0:	mov	r4, r0
    5aa4:	vcmp.f64	d8, d9
    5aa8:	vmrs	APSR_nzcv, fpscr
    5aac:	beq	5b30 <main@@Base+0x3d40>
    5ab0:	ldr	r2, [pc, #396]	; 5c44 <main@@Base+0x3e54>
    5ab4:	ldr	r6, [r3, #8]
    5ab8:	add	r2, pc, r2
    5abc:	ldr	r7, [pc, #388]	; 5c48 <main@@Base+0x3e58>
    5ac0:	ldr	r5, [r2, #4]
    5ac4:	mov	r1, r6
    5ac8:	sub	r3, r0, r5
    5acc:	asr	r3, r3, #3
    5ad0:	mul	r7, r7, r3
    5ad4:	mov	r0, r7
    5ad8:	bl	a2c4 <error@@Base+0x411c>
    5adc:	mov	r3, #88	; 0x58
    5ae0:	cmp	r6, #0
    5ae4:	sub	r1, r7, r1
    5ae8:	mul	r1, r3, r1
    5aec:	beq	5b30 <main@@Base+0x3d40>
    5af0:	add	r1, r1, r3
    5af4:	add	r3, r5, r1
    5af8:	mov	r2, #0
    5afc:	ldr	r1, [r3, #-88]	; 0xffffffa8
    5b00:	add	r2, r2, #1
    5b04:	cmp	r1, #0
    5b08:	beq	5b24 <main@@Base+0x3d34>
    5b0c:	vldr	d7, [r3, #-40]	; 0xffffffd8
    5b10:	vldr	d6, [r3, #-48]	; 0xffffffd0
    5b14:	vsub.f64	d7, d7, d6
    5b18:	vcmpe.f64	d7, d9
    5b1c:	vmrs	APSR_nzcv, fpscr
    5b20:	bgt	5bd8 <main@@Base+0x3de8>
    5b24:	cmp	r2, r6
    5b28:	add	r3, r3, #88	; 0x58
    5b2c:	bne	5afc <main@@Base+0x3d0c>
    5b30:	ldr	r3, [pc, #276]	; 5c4c <main@@Base+0x3e5c>
    5b34:	vldr	d5, [pc, #244]	; 5c30 <main@@Base+0x3e40>
    5b38:	add	r3, pc, r3
    5b3c:	vldr	d0, [r3, #24]
    5b40:	vcmp.f64	d0, d5
    5b44:	vmrs	APSR_nzcv, fpscr
    5b48:	beq	5bc4 <main@@Base+0x3dd4>
    5b4c:	ldr	r3, [pc, #252]	; 5c50 <main@@Base+0x3e60>
    5b50:	mov	r0, #88	; 0x58
    5b54:	add	r3, pc, r3
    5b58:	add	r1, r4, r0
    5b5c:	ldr	r2, [r3, #8]
    5b60:	ldr	r3, [r3, #4]
    5b64:	mla	r2, r0, r2, r3
    5b68:	cmp	r2, r1
    5b6c:	bls	5bc4 <main@@Base+0x3dd4>
    5b70:	vldr	d7, [r4, #128]	; 0x80
    5b74:	vcmp.f64	d7, d5
    5b78:	vmrs	APSR_nzcv, fpscr
    5b7c:	beq	5bc4 <main@@Base+0x3dd4>
    5b80:	add	r0, r4, #176	; 0xb0
    5b84:	b	5b98 <main@@Base+0x3da8>
    5b88:	vldr	d7, [r0, #-48]	; 0xffffffd0
    5b8c:	vcmp.f64	d7, d5
    5b90:	vmrs	APSR_nzcv, fpscr
    5b94:	beq	5bc4 <main@@Base+0x3dd4>
    5b98:	ldr	r3, [r0, #-88]	; 0xffffffa8
    5b9c:	cmp	r3, #0
    5ba0:	beq	5bb8 <main@@Base+0x3dc8>
    5ba4:	vldr	d6, [r0, #-40]	; 0xffffffd8
    5ba8:	vsub.f64	d7, d6, d7
    5bac:	vcmpe.f64	d7, d5
    5bb0:	vmrs	APSR_nzcv, fpscr
    5bb4:	bgt	5c04 <main@@Base+0x3e14>
    5bb8:	cmp	r2, r0
    5bbc:	add	r0, r0, #88	; 0x58
    5bc0:	bhi	5b88 <main@@Base+0x3d98>
    5bc4:	ldr	r3, [pc, #136]	; 5c54 <main@@Base+0x3e64>
    5bc8:	add	r3, pc, r3
    5bcc:	vldr	d0, [r3, #16]
    5bd0:	vpop	{d8-d9}
    5bd4:	pop	{r4, r5, r6, r7, r8, pc}
    5bd8:	vldr	d0, [pc, #88]	; 5c38 <main@@Base+0x3e48>
    5bdc:	ldr	r3, [pc, #116]	; 5c58 <main@@Base+0x3e68>
    5be0:	add	r3, pc, r3
    5be4:	vadd.f64	d0, d7, d0
    5be8:	vldr	d6, [r3, #16]
    5bec:	vmul.f64	d0, d8, d0
    5bf0:	vpop	{d8-d9}
    5bf4:	vcmpe.f64	d0, d6
    5bf8:	vmrs	APSR_nzcv, fpscr
    5bfc:	vmovpl.f64	d0, d6
    5c00:	pop	{r4, r5, r6, r7, r8, pc}
    5c04:	vldr	d6, [pc, #44]	; 5c38 <main@@Base+0x3e48>
    5c08:	ldr	r3, [pc, #76]	; 5c5c <main@@Base+0x3e6c>
    5c0c:	add	r3, pc, r3
    5c10:	vadd.f64	d7, d7, d6
    5c14:	vldr	d6, [r3, #16]
    5c18:	vmul.f64	d0, d0, d7
    5c1c:	vcmpe.f64	d0, d6
    5c20:	vmrs	APSR_nzcv, fpscr
    5c24:	vmovpl.f64	d0, d6
    5c28:	b	5bd0 <main@@Base+0x3de0>
    5c2c:	nop			; (mov r0, r0)
	...
    5c38:	rscsle	sl, r1, #252, 18	; 0x3f0000
    5c3c:	svccc	0x0050624d
    5c40:	andeq	r7, r1, r8, lsl sl
    5c44:	andeq	r8, r1, r8, lsl #21
    5c48:	blt	ba8adc <__bss_end__@@Base+0xb8a2cc>
    5c4c:	andeq	r7, r1, r0, ror r9
    5c50:	andeq	r8, r1, ip, ror #19
    5c54:	andeq	r7, r1, r0, ror #17
    5c58:	andeq	r7, r1, r8, asr #17
    5c5c:	muleq	r1, ip, r8
    5c60:	ldr	r3, [pc, #12]	; 5c74 <main@@Base+0x3e84>
    5c64:	add	r3, pc, r3
    5c68:	ldr	r3, [r3, #12]
    5c6c:	ldr	r3, [r3, #16]
    5c70:	bx	r3
    5c74:	ldrdeq	r8, [r1], -ip
    5c78:	ldr	r3, [pc, #232]	; 5d68 <main@@Base+0x3f78>
    5c7c:	ldr	r2, [pc, #232]	; 5d6c <main@@Base+0x3f7c>
    5c80:	add	r3, pc, r3
    5c84:	push	{r4, r5, r6, r7, r8, r9, lr}
    5c88:	mov	r8, #0
    5c8c:	ldr	r5, [r3, r2]
    5c90:	ldr	r4, [pc, #216]	; 5d70 <main@@Base+0x3f80>
    5c94:	sub	sp, sp, #12
    5c98:	add	r4, pc, r4
    5c9c:	mov	r9, #0
    5ca0:	ldr	r2, [r5]
    5ca4:	mov	r6, r1
    5ca8:	mov	r0, r1
    5cac:	mov	r1, sp
    5cb0:	str	r2, [sp, #4]
    5cb4:	strd	r8, [r4, #24]
    5cb8:	strd	r8, [r4]
    5cbc:	bl	1c28 <strtod@plt>
    5cc0:	ldr	r3, [sp]
    5cc4:	cmp	r6, r3
    5cc8:	vstr	d0, [r4, #16]
    5ccc:	beq	5d5c <main@@Base+0x3f6c>
    5cd0:	add	r6, r3, #1
    5cd4:	str	r6, [sp]
    5cd8:	ldrb	r3, [r3]
    5cdc:	cmp	r3, #0
    5ce0:	bne	5d00 <main@@Base+0x3f10>
    5ce4:	mov	r0, #0
    5ce8:	ldr	r2, [sp, #4]
    5cec:	ldr	r3, [r5]
    5cf0:	cmp	r2, r3
    5cf4:	bne	5d64 <main@@Base+0x3f74>
    5cf8:	add	sp, sp, #12
    5cfc:	pop	{r4, r5, r6, r7, r8, r9, pc}
    5d00:	mov	r1, sp
    5d04:	mov	r0, r6
    5d08:	bl	1c28 <strtod@plt>
    5d0c:	ldr	r3, [sp]
    5d10:	cmp	r6, r3
    5d14:	vstr	d0, [r4]
    5d18:	beq	5d5c <main@@Base+0x3f6c>
    5d1c:	add	r6, r3, #1
    5d20:	str	r6, [sp]
    5d24:	ldrb	r3, [r3]
    5d28:	cmp	r3, #0
    5d2c:	beq	5ce4 <main@@Base+0x3ef4>
    5d30:	mov	r1, sp
    5d34:	mov	r0, r6
    5d38:	bl	1c28 <strtod@plt>
    5d3c:	ldr	r3, [sp]
    5d40:	cmp	r6, r3
    5d44:	vstr	d0, [r4, #24]
    5d48:	beq	5d5c <main@@Base+0x3f6c>
    5d4c:	ldrb	r0, [r3]
    5d50:	adds	r0, r0, #0
    5d54:	mvnne	r0, #0
    5d58:	b	5ce8 <main@@Base+0x3ef8>
    5d5c:	mvn	r0, #0
    5d60:	b	5ce8 <main@@Base+0x3ef8>
    5d64:	bl	1a9c <__stack_chk_fail@plt>
    5d68:	andeq	r7, r1, r0, lsl r2
    5d6c:	andeq	r0, r0, r8, asr #2
    5d70:	andeq	r7, r1, r0, lsl r8
    5d74:	ldr	r3, [pc, #148]	; 5e10 <main@@Base+0x4020>
    5d78:	ldr	r2, [pc, #148]	; 5e14 <main@@Base+0x4024>
    5d7c:	add	r3, pc, r3
    5d80:	push	{r4, r5, r6, lr}
    5d84:	sub	sp, sp, #8
    5d88:	ldr	r5, [r3, r2]
    5d8c:	ldr	r6, [r0, #20]
    5d90:	mov	r4, r1
    5d94:	ldr	ip, [r5]
    5d98:	mov	r0, r1
    5d9c:	mov	r2, #0
    5da0:	mov	r1, sp
    5da4:	str	ip, [sp, #4]
    5da8:	bl	1b80 <strtoul@plt>
    5dac:	ldr	r3, [sp]
    5db0:	cmp	r4, r3
    5db4:	str	r0, [r6]
    5db8:	movne	r0, #0
    5dbc:	beq	5dd8 <main@@Base+0x3fe8>
    5dc0:	ldr	r2, [sp, #4]
    5dc4:	ldr	r3, [r5]
    5dc8:	cmp	r2, r3
    5dcc:	bne	5e0c <main@@Base+0x401c>
    5dd0:	add	sp, sp, #8
    5dd4:	pop	{r4, r5, r6, pc}
    5dd8:	mov	r0, r4
    5ddc:	mov	r1, #0
    5de0:	bl	1bc8 <getservbyname@plt>
    5de4:	cmp	r0, #0
    5de8:	beq	5e04 <main@@Base+0x4014>
    5dec:	ldr	r3, [r0, #8]
    5df0:	mov	r0, #0
    5df4:	rev16	r3, r3
    5df8:	uxth	r3, r3
    5dfc:	str	r3, [r6]
    5e00:	b	5dc0 <main@@Base+0x3fd0>
    5e04:	mvn	r0, #0
    5e08:	b	5dc0 <main@@Base+0x3fd0>
    5e0c:	bl	1a9c <__stack_chk_fail@plt>
    5e10:	andeq	r7, r1, r4, lsl r1
    5e14:	andeq	r0, r0, r8, asr #2
    5e18:	ldr	ip, [pc, #80]	; 5e70 <main@@Base+0x4080>
    5e1c:	push	{r0, r1, r2, r3}
    5e20:	add	ip, pc, ip
    5e24:	ldr	r2, [pc, #72]	; 5e74 <main@@Base+0x4084>
    5e28:	push	{lr}		; (str lr, [sp, #-4]!)
    5e2c:	sub	sp, sp, #12
    5e30:	ldr	r0, [ip, r2]
    5e34:	ldr	r1, [pc, #60]	; 5e78 <main@@Base+0x4088>
    5e38:	add	r3, sp, #20
    5e3c:	ldr	r0, [r0]
    5e40:	str	r3, [sp]
    5e44:	str	r0, [sp, #4]
    5e48:	ldr	r4, [ip, r1]
    5e4c:	ldr	r2, [sp, #16]
    5e50:	mov	r1, #1
    5e54:	ldr	r0, [r4]
    5e58:	bl	1b38 <__vfprintf_chk@plt>
    5e5c:	ldr	r1, [r4]
    5e60:	mov	r0, #10
    5e64:	bl	1ca0 <fputc@plt>
    5e68:	mov	r0, #2
    5e6c:	bl	1b74 <exit@plt>
    5e70:	andeq	r7, r1, r0, ror r0
    5e74:	andeq	r0, r0, r8, asr #2
    5e78:	andeq	r0, r0, ip, asr #2
    5e7c:	ldr	r3, [pc, #292]	; 5fa8 <main@@Base+0x41b8>
    5e80:	ldr	r2, [pc, #292]	; 5fac <main@@Base+0x41bc>
    5e84:	add	r3, pc, r3
    5e88:	push	{r4, r5, r6, r7, lr}
    5e8c:	sub	sp, sp, #1056	; 0x420
    5e90:	ldr	r4, [r3, r2]
    5e94:	ldrh	r2, [r0]
    5e98:	sub	sp, sp, #4
    5e9c:	ldr	r3, [r4]
    5ea0:	cmp	r2, #0
    5ea4:	str	r3, [sp, #1052]	; 0x41c
    5ea8:	bne	5ec8 <main@@Base+0x40d8>
    5eac:	ldr	r2, [sp, #1052]	; 0x41c
    5eb0:	ldr	r3, [r4]
    5eb4:	cmp	r2, r3
    5eb8:	bne	5fa4 <main@@Base+0x41b4>
    5ebc:	add	sp, sp, #1056	; 0x420
    5ec0:	add	sp, sp, #4
    5ec4:	pop	{r4, r5, r6, r7, pc}
    5ec8:	ldr	r6, [pc, #224]	; 5fb0 <main@@Base+0x41c0>
    5ecc:	mov	r7, #1
    5ed0:	add	r6, pc, r6
    5ed4:	add	r3, r6, #16
    5ed8:	str	r3, [sp, #20]
    5edc:	mov	r3, #0
    5ee0:	str	r3, [sp]
    5ee4:	stmib	sp, {r3, r7}
    5ee8:	add	r2, r6, #16
    5eec:	mov	r3, #46	; 0x2e
    5ef0:	mov	r1, #28
    5ef4:	mov	r5, r0
    5ef8:	bl	1c88 <getnameinfo@plt>
    5efc:	ldr	ip, [r6, #64]	; 0x40
    5f00:	cmp	ip, #0
    5f04:	bne	5f8c <main@@Base+0x419c>
    5f08:	add	r6, sp, #28
    5f0c:	mov	r3, #32
    5f10:	mov	r2, r6
    5f14:	str	r3, [sp, #8]
    5f18:	mov	r1, #28
    5f1c:	mov	r3, #1024	; 0x400
    5f20:	str	ip, [sp, #4]
    5f24:	str	ip, [sp]
    5f28:	mov	r0, r5
    5f2c:	strb	ip, [sp, #28]
    5f30:	bl	1c88 <getnameinfo@plt>
    5f34:	ldrb	r2, [sp, #28]
    5f38:	ldr	r3, [sp, #20]
    5f3c:	ldr	r1, [pc, #112]	; 5fb4 <main@@Base+0x41c4>
    5f40:	cmp	r2, #0
    5f44:	mov	r0, r7
    5f48:	movne	r2, r6
    5f4c:	moveq	r2, r3
    5f50:	add	r1, pc, r1
    5f54:	bl	1c1c <__printf_chk@plt>
    5f58:	ldr	r0, [pc, #88]	; 5fb8 <main@@Base+0x41c8>
    5f5c:	add	r0, pc, r0
    5f60:	ldr	r3, [r0, #68]	; 0x44
    5f64:	cmp	r3, #0
    5f68:	beq	5eac <main@@Base+0x40bc>
    5f6c:	add	r0, r0, #16
    5f70:	bl	2dd8 <main@@Base+0xfe8>
    5f74:	ldr	r1, [pc, #64]	; 5fbc <main@@Base+0x41cc>
    5f78:	add	r1, pc, r1
    5f7c:	mov	r2, r0
    5f80:	mov	r0, #1
    5f84:	bl	1c1c <__printf_chk@plt>
    5f88:	b	5eac <main@@Base+0x40bc>
    5f8c:	ldr	r1, [pc, #44]	; 5fc0 <main@@Base+0x41d0>
    5f90:	mov	r0, r7
    5f94:	ldr	r2, [sp, #20]
    5f98:	add	r1, pc, r1
    5f9c:	bl	1c1c <__printf_chk@plt>
    5fa0:	b	5f58 <main@@Base+0x4168>
    5fa4:	bl	1a9c <__stack_chk_fail@plt>
    5fa8:	andeq	r7, r1, ip
    5fac:	andeq	r0, r0, r8, asr #2
    5fb0:	andeq	r8, r1, r0, ror r6
    5fb4:	andeq	r4, r0, r8, lsr sl
    5fb8:	andeq	r8, r1, r4, ror #11
    5fbc:	andeq	r4, r0, ip, lsl sl
    5fc0:	andeq	r5, r0, r0, lsr sp
    5fc4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    5fc8:	sub	sp, sp, #48	; 0x30
    5fcc:	ldr	r8, [pc, #340]	; 6128 <main@@Base+0x4338>
    5fd0:	ldr	r3, [pc, #340]	; 612c <main@@Base+0x433c>
    5fd4:	add	r8, pc, r8
    5fd8:	ldr	r9, [pc, #336]	; 6130 <main@@Base+0x4340>
    5fdc:	ldr	r4, [r8, r3]
    5fe0:	mov	r7, #0
    5fe4:	add	r5, sp, #12
    5fe8:	ldr	r3, [r4]
    5fec:	add	r9, pc, r9
    5ff0:	mov	sl, r0
    5ff4:	mov	r2, #32
    5ff8:	mov	r0, r5
    5ffc:	mov	r6, r1
    6000:	mov	r1, r7
    6004:	str	r3, [sp, #44]	; 0x2c
    6008:	str	r7, [sp, #8]
    600c:	bl	1bf8 <memset@plt>
    6010:	ldr	r3, [r9]
    6014:	mov	r2, r5
    6018:	mov	ip, #64	; 0x40
    601c:	str	r3, [sp, #16]
    6020:	mov	r1, r7
    6024:	mov	r0, sl
    6028:	add	r3, sp, #8
    602c:	str	ip, [sp, #12]
    6030:	bl	1cdc <getaddrinfo@plt>
    6034:	subs	r5, r0, #0
    6038:	bne	60f0 <main@@Base+0x4300>
    603c:	ldr	r7, [sp, #8]
    6040:	cmp	r7, #0
    6044:	beq	60d8 <main@@Base+0x42e8>
    6048:	ldr	r1, [r9]
    604c:	ldr	r3, [r7, #4]
    6050:	cmp	r1, r3
    6054:	beq	60e0 <main@@Base+0x42f0>
    6058:	cmp	r3, #2
    605c:	cmpeq	r1, #0
    6060:	clz	r0, r1
    6064:	mov	r3, r7
    6068:	lsr	r0, r0, #5
    606c:	beq	609c <main@@Base+0x42ac>
    6070:	ldr	r3, [r3, #28]
    6074:	cmp	r3, #0
    6078:	beq	60e0 <main@@Base+0x42f0>
    607c:	ldr	r2, [r3, #4]
    6080:	cmp	r2, r1
    6084:	beq	609c <main@@Base+0x42ac>
    6088:	cmp	r2, #2
    608c:	movne	r2, #0
    6090:	andeq	r2, r0, #1
    6094:	cmp	r2, #0
    6098:	beq	6070 <main@@Base+0x4280>
    609c:	ldr	r2, [r3, #16]
    60a0:	cmp	r2, #28
    60a4:	bhi	60e8 <main@@Base+0x42f8>
    60a8:	ldr	r1, [r3, #20]
    60ac:	mov	r0, r6
    60b0:	bl	1a6c <memcpy@plt>
    60b4:	mov	r0, r7
    60b8:	bl	1cd0 <freeaddrinfo@plt>
    60bc:	ldr	r2, [sp, #44]	; 0x2c
    60c0:	ldr	r3, [r4]
    60c4:	mov	r0, r5
    60c8:	cmp	r2, r3
    60cc:	bne	6124 <main@@Base+0x4334>
    60d0:	add	sp, sp, #48	; 0x30
    60d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    60d8:	ldr	r3, [r7, #16]
    60dc:	udf	#0
    60e0:	mov	r3, r7
    60e4:	b	609c <main@@Base+0x42ac>
    60e8:	mvn	r5, #0
    60ec:	b	60bc <main@@Base+0x42cc>
    60f0:	ldr	r3, [pc, #60]	; 6134 <main@@Base+0x4344>
    60f4:	mvn	r5, #0
    60f8:	ldr	r3, [r8, r3]
    60fc:	ldr	r6, [r3]
    6100:	bl	1a54 <gai_strerror@plt>
    6104:	ldr	r2, [pc, #44]	; 6138 <main@@Base+0x4348>
    6108:	mov	r3, sl
    610c:	add	r2, pc, r2
    6110:	mov	r1, #1
    6114:	str	r0, [sp]
    6118:	mov	r0, r6
    611c:	bl	1c40 <__fprintf_chk@plt>
    6120:	b	60bc <main@@Base+0x42cc>
    6124:	bl	1a9c <__stack_chk_fail@plt>
    6128:			; <UNDEFINED> instruction: 0x00016ebc
    612c:	andeq	r0, r0, r8, asr #2
    6130:	andeq	r8, r1, r4, asr r5
    6134:	andeq	r0, r0, ip, asr #2
    6138:	muleq	r0, r0, r8
    613c:	push	{r4, r5, r6, lr}
    6140:	mov	r0, r1
    6144:	ldr	r4, [pc, #64]	; 618c <main@@Base+0x439c>
    6148:	mov	r5, r1
    614c:	add	r4, pc, r4
    6150:	add	r1, r4, #72	; 0x48
    6154:	bl	5fc4 <main@@Base+0x41d4>
    6158:	cmp	r0, #0
    615c:	blt	6184 <main@@Base+0x4394>
    6160:	ldr	r0, [r4]
    6164:	str	r5, [r4, #100]	; 0x64
    6168:	cmp	r0, #0
    616c:	bne	617c <main@@Base+0x438c>
    6170:	ldrh	r3, [r4, #72]	; 0x48
    6174:	str	r3, [r4]
    6178:	pop	{r4, r5, r6, pc}
    617c:	mov	r0, #0
    6180:	pop	{r4, r5, r6, pc}
    6184:	mvn	r0, #0
    6188:	pop	{r4, r5, r6, pc}
    618c:	strdeq	r8, [r1], -r4
    6190:	ldr	r3, [pc, #12]	; 61a4 <main@@Base+0x43b4>
    6194:	mov	r0, r1
    6198:	add	r3, pc, r3
    619c:	add	r1, r3, #104	; 0x68
    61a0:	b	5fc4 <main@@Base+0x41d4>
    61a4:	andeq	r8, r1, r8, lsr #7

000061a8 <error@@Base>:
    61a8:	ldr	r3, [pc, #44]	; 61dc <error@@Base+0x34>
    61ac:	ldr	r2, [pc, #44]	; 61e0 <error@@Base+0x38>
    61b0:	add	r3, pc, r3
    61b4:	push	{r4, lr}
    61b8:	mov	r4, r0
    61bc:	ldr	r2, [r3, r2]
    61c0:	mov	r0, #10
    61c4:	ldr	r1, [r2]
    61c8:	bl	1ca0 <fputc@plt>
    61cc:	mov	r0, r4
    61d0:	bl	1acc <perror@plt>
    61d4:	mov	r0, #1
    61d8:	bl	1b74 <exit@plt>
    61dc:	andeq	r6, r1, r0, ror #25
    61e0:	andeq	r0, r0, ip, asr #2
    61e4:	push	{r4, r5, r6, r7, lr}
    61e8:	sub	sp, sp, #20
    61ec:	mov	r0, r1
    61f0:	str	r1, [sp, #12]
    61f4:	mov	r5, r1
    61f8:	ldr	r1, [pc, #268]	; 630c <error@@Base+0x164>
    61fc:	ldr	r7, [pc, #268]	; 6310 <error@@Base+0x168>
    6200:	add	r1, pc, r1
    6204:	bl	19e8 <strcmp@plt>
    6208:	add	r7, pc, r7
    620c:	subs	r4, r0, #0
    6210:	beq	6284 <error@@Base+0xdc>
    6214:	ldr	r6, [pc, #248]	; 6314 <error@@Base+0x16c>
    6218:	add	r6, pc, r6
    621c:	ldr	r4, [r6, #32]
    6220:	cmp	r4, #15
    6224:	bhi	625c <error@@Base+0xb4>
    6228:	mov	r0, r5
    622c:	bl	1be0 <__strdup@plt>
    6230:	ldr	r3, [pc, #224]	; 6318 <error@@Base+0x170>
    6234:	add	r3, pc, r3
    6238:	add	r3, r3, r4, lsl #2
    623c:	cmp	r0, #0
    6240:	addne	r4, r4, #1
    6244:	str	r0, [r3, #132]	; 0x84
    6248:	strne	r4, [r6, #32]
    624c:	movne	r0, #0
    6250:	beq	62d4 <error@@Base+0x12c>
    6254:	add	sp, sp, #20
    6258:	pop	{r4, r5, r6, r7, pc}
    625c:	ldr	r3, [pc, #184]	; 631c <error@@Base+0x174>
    6260:	ldr	r0, [pc, #184]	; 6320 <error@@Base+0x178>
    6264:	mov	r2, #24
    6268:	ldr	r3, [r7, r3]
    626c:	mov	r1, #1
    6270:	add	r0, pc, r0
    6274:	ldr	r3, [r3]
    6278:	bl	1af0 <fwrite@plt>
    627c:	mvn	r0, #0
    6280:	b	6254 <error@@Base+0xac>
    6284:	ldr	r3, [pc, #152]	; 6324 <error@@Base+0x17c>
    6288:	ldr	r0, [pc, r3]
    628c:	bl	565c <main@@Base+0x386c>
    6290:	subs	r5, r0, #0
    6294:	beq	62e0 <error@@Base+0x138>
    6298:	ldr	r3, [r5, #24]
    629c:	cmp	r3, #0
    62a0:	beq	62e0 <error@@Base+0x138>
    62a4:	mov	r3, #768	; 0x300
    62a8:	str	r3, [sp]
    62ac:	add	r1, sp, #12
    62b0:	mov	r3, r4
    62b4:	mov	r2, r4
    62b8:	mov	r0, #1
    62bc:	bl	9540 <error@@Base+0x3398>
    62c0:	ldr	r1, [r5, #24]
    62c4:	mov	r0, r4
    62c8:	bl	8bfc <error@@Base+0x2a54>
    62cc:	mov	r0, #0
    62d0:	bl	1b74 <exit@plt>
    62d4:	ldr	r0, [pc, #76]	; 6328 <error@@Base+0x180>
    62d8:	add	r0, pc, r0
    62dc:	bl	61a8 <error@@Base>
    62e0:	ldr	r1, [pc, #52]	; 631c <error@@Base+0x174>
    62e4:	ldr	r3, [pc, #64]	; 632c <error@@Base+0x184>
    62e8:	ldr	r2, [pc, #64]	; 6330 <error@@Base+0x188>
    62ec:	ldr	r0, [r7, r1]
    62f0:	add	r3, pc, r3
    62f4:	add	r2, pc, r2
    62f8:	ldr	r3, [r3]
    62fc:	mov	r1, #1
    6300:	ldr	r0, [r0]
    6304:	bl	1c40 <__fprintf_chk@plt>
    6308:	b	62cc <error@@Base+0x124>
    630c:	andeq	r4, r0, r4, lsr #15
    6310:	andeq	r6, r1, r8, lsl #25
    6314:	muleq	r1, r0, r2
    6318:	andeq	r8, r1, ip, lsl #6
    631c:	andeq	r0, r0, ip, asr #2
    6320:	andeq	r4, r0, r8, asr r7
    6324:	andeq	r7, r1, r8, ror #14
    6328:	andeq	r4, r0, ip, lsl #14
    632c:	andeq	r7, r1, r0, lsl #14
    6330:			; <UNDEFINED> instruction: 0x000046b8
    6334:	ldr	r2, [pc, #136]	; 63c4 <error@@Base+0x21c>
    6338:	ldr	r3, [pc, #136]	; 63c8 <error@@Base+0x220>
    633c:	add	r2, pc, r2
    6340:	push	{r4, r5, r6, r7, lr}
    6344:	sub	sp, sp, #1040	; 0x410
    6348:	ldr	r5, [r2, r3]
    634c:	ldr	ip, [pc, #120]	; 63cc <error@@Base+0x224>
    6350:	ldr	r3, [pc, #120]	; 63d0 <error@@Base+0x228>
    6354:	sub	sp, sp, #4
    6358:	ldr	lr, [pc, #116]	; 63d4 <error@@Base+0x22c>
    635c:	add	ip, pc, ip
    6360:	add	r3, pc, r3
    6364:	ldr	r7, [r5]
    6368:	add	lr, pc, lr
    636c:	str	r3, [sp]
    6370:	add	r4, sp, #12
    6374:	mov	r3, #1024	; 0x400
    6378:	str	r1, [sp, #4]
    637c:	mov	r6, r0
    6380:	mov	r1, r3
    6384:	str	lr, [ip]
    6388:	mov	r0, r4
    638c:	mov	r2, #1
    6390:	str	r7, [sp, #1036]	; 0x40c
    6394:	bl	1d3c <__snprintf_chk@plt>
    6398:	mov	r1, r4
    639c:	mov	r0, r6
    63a0:	bl	61e4 <error@@Base+0x3c>
    63a4:	ldr	r2, [sp, #1036]	; 0x40c
    63a8:	ldr	r3, [r5]
    63ac:	cmp	r2, r3
    63b0:	bne	63c0 <error@@Base+0x218>
    63b4:	add	sp, sp, #1040	; 0x410
    63b8:	add	sp, sp, #4
    63bc:	pop	{r4, r5, r6, r7, pc}
    63c0:	bl	1a9c <__stack_chk_fail@plt>
    63c4:	andeq	r6, r1, r4, asr fp
    63c8:	andeq	r0, r0, r8, asr #2
    63cc:	muleq	r1, r4, r6
    63d0:	andeq	r4, r0, ip, lsl #13
    63d4:	andeq	r4, r0, r8, lsl #2
    63d8:	push	{r4, r5, r6, r7, r8, lr}
    63dc:	ldr	r5, [pc, #144]	; 6474 <error@@Base+0x2cc>
    63e0:	ldr	r0, [pc, #144]	; 6478 <error@@Base+0x2d0>
    63e4:	add	r5, pc, r5
    63e8:	add	r0, pc, r0
    63ec:	ldr	r3, [r5, #196]	; 0xc4
    63f0:	cmp	r3, #126	; 0x7e
    63f4:	bgt	6440 <error@@Base+0x298>
    63f8:	add	r4, r3, #1
    63fc:	mov	r8, r1
    6400:	lsl	r6, r4, #2
    6404:	ldr	r0, [r5, #200]	; 0xc8
    6408:	mov	r1, r6
    640c:	bl	1ab4 <realloc@plt>
    6410:	cmp	r0, #0
    6414:	mov	r7, r0
    6418:	str	r0, [r5, #200]	; 0xc8
    641c:	beq	6468 <error@@Base+0x2c0>
    6420:	mov	r0, r8
    6424:	str	r4, [r5, #196]	; 0xc4
    6428:	bl	1be0 <__strdup@plt>
    642c:	sub	r6, r6, #4
    6430:	mov	r3, #0
    6434:	str	r0, [r7, r6]
    6438:	mov	r0, r3
    643c:	pop	{r4, r5, r6, r7, r8, pc}
    6440:	ldr	r3, [pc, #52]	; 647c <error@@Base+0x2d4>
    6444:	mov	r2, #28
    6448:	mov	r1, #1
    644c:	ldr	r3, [r0, r3]
    6450:	ldr	r0, [pc, #40]	; 6480 <error@@Base+0x2d8>
    6454:	ldr	r3, [r3]
    6458:	add	r0, pc, r0
    645c:	bl	1af0 <fwrite@plt>
    6460:	mvn	r3, #0
    6464:	b	6438 <error@@Base+0x290>
    6468:	ldr	r0, [pc, #20]	; 6484 <error@@Base+0x2dc>
    646c:	add	r0, pc, r0
    6470:	bl	61a8 <error@@Base>
    6474:	andeq	r8, r1, ip, asr r1
    6478:	andeq	r6, r1, r8, lsr #21
    647c:	andeq	r0, r0, ip, asr #2
    6480:	andeq	r4, r0, r0, lsr #11
    6484:	strdeq	r3, [r0], -r4
    6488:	push	{r4, r5, r6, lr}
    648c:	mov	r1, #3
    6490:	mov	r4, r0
    6494:	bl	1bb0 <fcntl@plt>
    6498:	cmn	r0, #1
    649c:	popne	{r4, r5, r6, pc}
    64a0:	bl	1bbc <__errno_location@plt>
    64a4:	ldr	r3, [r0]
    64a8:	cmp	r3, #9
    64ac:	bne	64e4 <error@@Base+0x33c>
    64b0:	ldr	r0, [pc, #68]	; 64fc <error@@Base+0x354>
    64b4:	mov	r1, #0
    64b8:	add	r0, pc, r0
    64bc:	bl	1b50 <open@plt>
    64c0:	subs	r5, r0, #0
    64c4:	blt	64f0 <error@@Base+0x348>
    64c8:	cmp	r4, r5
    64cc:	popeq	{r4, r5, r6, pc}
    64d0:	mov	r1, r4
    64d4:	bl	1aa8 <dup2@plt>
    64d8:	mov	r0, r5
    64dc:	pop	{r4, r5, r6, lr}
    64e0:	b	1d18 <close@plt>
    64e4:	ldr	r0, [pc, #20]	; 6500 <error@@Base+0x358>
    64e8:	add	r0, pc, r0
    64ec:	bl	61a8 <error@@Base>
    64f0:	ldr	r0, [pc, #12]	; 6504 <error@@Base+0x35c>
    64f4:	add	r0, pc, r0
    64f8:	bl	61a8 <error@@Base>
    64fc:	andeq	r4, r0, r0, ror r5
    6500:	andeq	r4, r0, r0, lsr r5
    6504:	andeq	r4, r0, r0, asr #10
    6508:	ldr	r3, [pc, #752]	; 6800 <error@@Base+0x658>
    650c:	ldr	r2, [pc, #752]	; 6804 <error@@Base+0x65c>
    6510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6514:	add	r3, pc, r3
    6518:	ldr	r4, [pc, #744]	; 6808 <error@@Base+0x660>
    651c:	add	fp, sp, #32
    6520:	add	r4, pc, r4
    6524:	sub	sp, sp, #20
    6528:	ldr	r3, [r3, r2]
    652c:	ldr	r5, [r4, #196]	; 0xc4
    6530:	str	r3, [fp, #-48]	; 0xffffffd0
    6534:	ldr	r3, [r3]
    6538:	cmp	r5, #0
    653c:	str	r3, [fp, #-40]	; 0xffffffd8
    6540:	beq	6634 <error@@Base+0x48c>
    6544:	ldr	r1, [r4]
    6548:	cmp	r1, #10
    654c:	beq	6650 <error@@Base+0x4a8>
    6550:	cmp	r1, #2
    6554:	movne	r1, #127	; 0x7f
    6558:	moveq	r1, #8
    655c:	ldr	r2, [pc, #680]	; 680c <error@@Base+0x664>
    6560:	add	r2, pc, r2
    6564:	ldr	sl, [r2, #196]	; 0xc4
    6568:	cmp	r1, sl
    656c:	blt	67f4 <error@@Base+0x64c>
    6570:	mov	r3, #28
    6574:	cmp	sl, #0
    6578:	mul	r3, r3, sl
    657c:	add	r3, r3, #14
    6580:	bic	r3, r3, #7
    6584:	sub	sp, sp, r3
    6588:	mov	r8, sp
    658c:	ble	6608 <error@@Base+0x460>
    6590:	ldr	r3, [r2, #200]	; 0xc8
    6594:	ldr	r0, [r3]
    6598:	cmp	r0, #0
    659c:	beq	67b8 <error@@Base+0x610>
    65a0:	ldr	r7, [pc, #616]	; 6810 <error@@Base+0x668>
    65a4:	mov	r5, #0
    65a8:	add	r7, pc, r7
    65ac:	mov	r6, r5
    65b0:	mov	r4, sp
    65b4:	b	65cc <error@@Base+0x424>
    65b8:	add	r5, r5, #4
    65bc:	add	r4, r4, #28
    65c0:	ldr	r0, [r9, r5]
    65c4:	cmp	r0, #0
    65c8:	beq	67b8 <error@@Base+0x610>
    65cc:	mov	r1, r4
    65d0:	bl	5fc4 <main@@Base+0x41d4>
    65d4:	cmp	r0, #0
    65d8:	blt	67c4 <error@@Base+0x61c>
    65dc:	ldrh	r2, [r4]
    65e0:	ldr	r3, [r7]
    65e4:	cmp	r2, r3
    65e8:	bne	67d0 <error@@Base+0x628>
    65ec:	ldr	r9, [r7, #200]	; 0xc8
    65f0:	add	r6, r6, #1
    65f4:	ldr	r0, [r9, r5]
    65f8:	bl	1a48 <free@plt>
    65fc:	ldr	sl, [r7, #196]	; 0xc4
    6600:	cmp	sl, r6
    6604:	bgt	65b8 <error@@Base+0x410>
    6608:	ldr	r5, [pc, #516]	; 6814 <error@@Base+0x66c>
    660c:	mov	r4, #0
    6610:	add	r5, pc, r5
    6614:	ldr	r0, [r5, #200]	; 0xc8
    6618:	bl	1a48 <free@plt>
    661c:	ldr	r3, [r5]
    6620:	str	r4, [r5, #200]	; 0xc8
    6624:	cmp	r3, #2
    6628:	beq	6734 <error@@Base+0x58c>
    662c:	cmp	r3, #10
    6630:	beq	66b8 <error@@Base+0x510>
    6634:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6638:	ldr	r2, [fp, #-40]	; 0xffffffd8
    663c:	ldr	r3, [r3]
    6640:	cmp	r2, r3
    6644:	bne	67f0 <error@@Base+0x648>
    6648:	sub	sp, fp, #32
    664c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6650:	cmp	r5, #1
    6654:	ble	66b0 <error@@Base+0x508>
    6658:	ldr	r6, [r4, #200]	; 0xc8
    665c:	ldr	r0, [r6]
    6660:	cmp	r0, #0
    6664:	beq	66b0 <error@@Base+0x508>
    6668:	mov	r2, #0
    666c:	sub	r1, fp, #44	; 0x2c
    6670:	bl	1b80 <strtoul@plt>
    6674:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6678:	ldrb	r3, [r3]
    667c:	cmp	r3, #0
    6680:	bne	66b0 <error@@Base+0x508>
    6684:	ldr	r2, [pc, #396]	; 6818 <error@@Base+0x670>
    6688:	add	r3, r6, #4
    668c:	add	r2, pc, r2
    6690:	add	r1, r6, r5, lsl #2
    6694:	sub	r5, r5, #1
    6698:	str	r0, [r2, #36]	; 0x24
    669c:	str	r5, [r4, #196]	; 0xc4
    66a0:	ldr	r2, [r3], #4
    66a4:	cmp	r3, r1
    66a8:	str	r2, [r3, #-8]
    66ac:	bne	66a0 <error@@Base+0x4f8>
    66b0:	mov	r1, #127	; 0x7f
    66b4:	b	655c <error@@Base+0x3b4>
    66b8:	lsl	r3, sl, #4
    66bc:	add	r3, r3, #8
    66c0:	mov	r0, r3
    66c4:	str	r3, [r5, #204]	; 0xcc
    66c8:	bl	1b20 <malloc@plt>
    66cc:	cmp	r0, #0
    66d0:	str	r0, [r5, #208]	; 0xd0
    66d4:	beq	67e4 <error@@Base+0x63c>
    66d8:	ldr	r2, [pc, #316]	; 681c <error@@Base+0x674>
    66dc:	uxtb	r3, sl
    66e0:	add	r2, pc, r2
    66e4:	cmp	sl, #0
    66e8:	ldr	r1, [r2, #36]	; 0x24
    66ec:	lsl	r2, r3, #1
    66f0:	strb	r4, [r0]
    66f4:	str	r4, [r0, #4]
    66f8:	strb	r1, [r0, #2]
    66fc:	strb	r3, [r0, #3]
    6700:	strb	r2, [r0, #1]
    6704:	ble	6634 <error@@Base+0x48c>
    6708:	add	ip, r0, #8
    670c:	add	r8, r8, #8
    6710:	mov	lr, r4
    6714:	ldm	r8, {r0, r1, r2, r3}
    6718:	add	lr, lr, #1
    671c:	cmp	sl, lr
    6720:	add	r8, r8, #28
    6724:	stm	ip, {r0, r1, r2, r3}
    6728:	add	ip, ip, #16
    672c:	bne	6714 <error@@Base+0x56c>
    6730:	b	6634 <error@@Base+0x48c>
    6734:	add	r6, sl, #2
    6738:	lsl	r6, r6, #2
    673c:	mov	r0, r6
    6740:	str	r6, [r5, #204]	; 0xcc
    6744:	bl	1b20 <malloc@plt>
    6748:	cmp	r0, r4
    674c:	str	r0, [r5, #208]	; 0xd0
    6750:	beq	67e4 <error@@Base+0x63c>
    6754:	cmp	sl, #0
    6758:	ble	67dc <error@@Base+0x634>
    675c:	sub	r1, r6, #8
    6760:	add	r1, r0, r1
    6764:	mov	r3, r0
    6768:	ldr	r2, [r8, #4]
    676c:	add	r8, r8, #28
    6770:	str	r2, [r3, #4]!
    6774:	cmp	r1, r3
    6778:	bne	6768 <error@@Base+0x5c0>
    677c:	ldr	r2, [pc, #156]	; 6820 <error@@Base+0x678>
    6780:	add	lr, r0, sl, lsl #2
    6784:	add	r2, pc, r2
    6788:	lsl	r3, sl, #2
    678c:	ldr	r4, [r2, #76]	; 0x4c
    6790:	add	r3, r3, #7
    6794:	mov	ip, #1
    6798:	mvn	r1, #124	; 0x7c
    679c:	mov	r2, #4
    67a0:	str	r4, [lr, #4]
    67a4:	strb	r3, [r0, #2]
    67a8:	strb	ip, [r0]
    67ac:	strb	r1, [r0, #1]
    67b0:	strb	r2, [r0, #3]
    67b4:	b	6634 <error@@Base+0x48c>
    67b8:	ldr	r0, [pc, #100]	; 6824 <error@@Base+0x67c>
    67bc:	add	r0, pc, r0
    67c0:	bl	61a8 <error@@Base>
    67c4:	ldr	r0, [pc, #92]	; 6828 <error@@Base+0x680>
    67c8:	add	r0, pc, r0
    67cc:	bl	5e18 <main@@Base+0x4028>
    67d0:	ldr	r0, [pc, #84]	; 682c <error@@Base+0x684>
    67d4:	add	r0, pc, r0
    67d8:	bl	5e18 <main@@Base+0x4028>
    67dc:	mov	sl, r4
    67e0:	b	677c <error@@Base+0x5d4>
    67e4:	ldr	r0, [pc, #68]	; 6830 <error@@Base+0x688>
    67e8:	add	r0, pc, r0
    67ec:	bl	61a8 <error@@Base>
    67f0:	bl	1a9c <__stack_chk_fail@plt>
    67f4:	ldr	r0, [pc, #56]	; 6834 <error@@Base+0x68c>
    67f8:	add	r0, pc, r0
    67fc:	bl	5e18 <main@@Base+0x4028>
    6800:	andeq	r6, r1, ip, ror r9
    6804:	andeq	r0, r0, r8, asr #2
    6808:	andeq	r8, r1, r0, lsr #32
    680c:	andeq	r7, r1, r0, ror #31
    6810:	muleq	r1, r8, pc	; <UNPREDICTABLE>
    6814:	andeq	r7, r1, r0, lsr pc
    6818:	andeq	r6, r1, ip, lsl lr
    681c:	andeq	r6, r1, r8, asr #27
    6820:			; <UNDEFINED> instruction: 0x00017dbc
    6824:	andeq	r4, r0, r8, lsr #4
    6828:	andeq	r3, r0, r0, ror #23
    682c:	andeq	r4, r0, r0, lsr #5
    6830:	andeq	r3, r0, r8, ror ip
    6834:	andeq	r4, r0, ip, asr #4
    6838:	push	{r4, lr}
    683c:	mov	r4, r0
    6840:	bl	1bbc <__errno_location@plt>
    6844:	ldr	r3, [pc, #52]	; 6880 <error@@Base+0x6d8>
    6848:	add	r3, pc, r3
    684c:	ldr	r1, [r0]
    6850:	cmp	r1, #1
    6854:	beq	6860 <error@@Base+0x6b8>
    6858:	mov	r0, r4
    685c:	bl	61a8 <error@@Base>
    6860:	ldr	r0, [pc, #28]	; 6884 <error@@Base+0x6dc>
    6864:	mov	r2, #64	; 0x40
    6868:	ldr	r3, [r3, r0]
    686c:	ldr	r0, [pc, #20]	; 6888 <error@@Base+0x6e0>
    6870:	ldr	r3, [r3]
    6874:	add	r0, pc, r0
    6878:	bl	1af0 <fwrite@plt>
    687c:	b	6858 <error@@Base+0x6b0>
    6880:	andeq	r6, r1, r8, asr #12
    6884:	andeq	r0, r0, ip, asr #2
    6888:	andeq	r4, r0, ip, lsr #4
    688c:	push	{lr}		; (str lr, [sp, #-4]!)
    6890:	subs	lr, r0, #0
    6894:	ble	68e8 <error@@Base+0x740>
    6898:	ldr	r3, [pc, #80]	; 68f0 <error@@Base+0x748>
    689c:	add	r3, pc, r3
    68a0:	ldr	ip, [r3, #8]
    68a4:	cmp	ip, #0
    68a8:	beq	68e8 <error@@Base+0x740>
    68ac:	ldr	r0, [r3, #4]
    68b0:	ldr	r3, [r0, #64]	; 0x40
    68b4:	cmp	lr, r3
    68b8:	popeq	{pc}		; (ldreq pc, [sp], #4)
    68bc:	add	r3, r0, #88	; 0x58
    68c0:	mov	r2, #0
    68c4:	b	68d4 <error@@Base+0x72c>
    68c8:	ldr	r1, [r3, #-24]	; 0xffffffe8
    68cc:	cmp	lr, r1
    68d0:	popeq	{pc}		; (ldreq pc, [sp], #4)
    68d4:	add	r2, r2, #1
    68d8:	cmp	r2, ip
    68dc:	mov	r0, r3
    68e0:	add	r3, r3, #88	; 0x58
    68e4:	bne	68c8 <error@@Base+0x720>
    68e8:	mov	r0, #0
    68ec:	pop	{pc}		; (ldr pc, [sp], #4)
    68f0:	andeq	r7, r1, r4, lsr #25
    68f4:	push	{lr}		; (str lr, [sp, #-4]!)
    68f8:	subs	lr, r0, #0
    68fc:	ble	6950 <error@@Base+0x7a8>
    6900:	ldr	r3, [pc, #80]	; 6958 <error@@Base+0x7b0>
    6904:	add	r3, pc, r3
    6908:	ldr	ip, [r3, #8]
    690c:	cmp	ip, #0
    6910:	beq	6950 <error@@Base+0x7a8>
    6914:	ldr	r0, [r3, #4]
    6918:	ldr	r3, [r0, #60]	; 0x3c
    691c:	cmp	lr, r3
    6920:	popeq	{pc}		; (ldreq pc, [sp], #4)
    6924:	add	r3, r0, #88	; 0x58
    6928:	mov	r2, #0
    692c:	b	693c <error@@Base+0x794>
    6930:	ldr	r1, [r3, #-28]	; 0xffffffe4
    6934:	cmp	lr, r1
    6938:	popeq	{pc}		; (ldreq pc, [sp], #4)
    693c:	add	r2, r2, #1
    6940:	cmp	r2, ip
    6944:	mov	r0, r3
    6948:	add	r3, r3, #88	; 0x58
    694c:	bne	6930 <error@@Base+0x788>
    6950:	mov	r0, #0
    6954:	pop	{pc}		; (ldr pc, [sp], #4)
    6958:	andeq	r7, r1, ip, lsr ip
    695c:	push	{r4, r5, r6, r7, lr}
    6960:	mov	r4, r0
    6964:	ldr	r5, [pc, #560]	; 6b9c <error@@Base+0x9f4>
    6968:	ldr	lr, [pc, #560]	; 6ba0 <error@@Base+0x9f8>
    696c:	add	r5, pc, r5
    6970:	ldr	ip, [pc, #556]	; 6ba4 <error@@Base+0x9fc>
    6974:	mov	r0, r5
    6978:	add	ip, pc, ip
    697c:	ldr	r5, [r5, lr]
    6980:	ldr	ip, [ip]
    6984:	sub	sp, sp, #44	; 0x2c
    6988:	ldr	lr, [r5]
    698c:	cmp	ip, #2
    6990:	mov	r7, r3
    6994:	str	lr, [sp, #36]	; 0x24
    6998:	beq	69fc <error@@Base+0x854>
    699c:	cmp	ip, #10
    69a0:	beq	6a78 <error@@Base+0x8d0>
    69a4:	ldr	r0, [pc, #508]	; 6ba8 <error@@Base+0xa00>
    69a8:	add	r6, sp, #20
    69ac:	add	r0, pc, r0
    69b0:	mov	r3, #16
    69b4:	stmib	sp, {r1, r2}
    69b8:	str	r0, [sp]
    69bc:	mov	r1, r3
    69c0:	mov	r0, r6
    69c4:	mov	r2, #1
    69c8:	bl	1d3c <__snprintf_chk@plt>
    69cc:	ldrb	r3, [sp, #20]
    69d0:	cmp	r3, #0
    69d4:	movne	r1, r6
    69d8:	bne	6a60 <error@@Base+0x8b8>
    69dc:	mov	r3, #1
    69e0:	str	r3, [r4, #4]
    69e4:	ldr	r2, [sp, #36]	; 0x24
    69e8:	ldr	r3, [r5]
    69ec:	cmp	r2, r3
    69f0:	bne	6b98 <error@@Base+0x9f0>
    69f4:	add	sp, sp, #44	; 0x2c
    69f8:	pop	{r4, r5, r6, r7, pc}
    69fc:	cmp	r1, #11
    6a00:	beq	6abc <error@@Base+0x914>
    6a04:	cmp	r1, #3
    6a08:	bne	69a4 <error@@Base+0x7fc>
    6a0c:	cmp	r2, #15
    6a10:	addls	pc, pc, r2, lsl #2
    6a14:	b	6b7c <error@@Base+0x9d4>
    6a18:	b	6ae0 <error@@Base+0x938>
    6a1c:	b	6ad4 <error@@Base+0x92c>
    6a20:	b	6ac8 <error@@Base+0x920>
    6a24:	b	69dc <error@@Base+0x834>
    6a28:	b	6b10 <error@@Base+0x968>
    6a2c:	b	6b04 <error@@Base+0x95c>
    6a30:	b	6ae0 <error@@Base+0x938>
    6a34:	b	6ad4 <error@@Base+0x92c>
    6a38:	b	6ae0 <error@@Base+0x938>
    6a3c:	b	6af8 <error@@Base+0x950>
    6a40:	b	6af8 <error@@Base+0x950>
    6a44:	b	6ae0 <error@@Base+0x938>
    6a48:	b	6ad4 <error@@Base+0x92c>
    6a4c:	b	6af8 <error@@Base+0x950>
    6a50:	b	6aec <error@@Base+0x944>
    6a54:	b	6a58 <error@@Base+0x8b0>
    6a58:	ldr	r1, [pc, #332]	; 6bac <error@@Base+0xa04>
    6a5c:	add	r1, pc, r1
    6a60:	mov	r2, #16
    6a64:	add	r0, r4, #72	; 0x48
    6a68:	bl	1c10 <strncpy@plt>
    6a6c:	mov	r3, #0
    6a70:	strb	r3, [r4, #87]	; 0x57
    6a74:	b	69dc <error@@Base+0x834>
    6a78:	cmp	r1, #3
    6a7c:	beq	6abc <error@@Base+0x914>
    6a80:	cmp	r1, #1
    6a84:	beq	6b1c <error@@Base+0x974>
    6a88:	cmp	r1, #2
    6a8c:	bne	69a4 <error@@Base+0x7fc>
    6a90:	ldr	r2, [pc, #280]	; 6bb0 <error@@Base+0xa08>
    6a94:	add	r2, pc, r2
    6a98:	add	r6, sp, #20
    6a9c:	mov	r3, #16
    6aa0:	str	r7, [sp, #4]
    6aa4:	str	r2, [sp]
    6aa8:	mov	r0, r6
    6aac:	mov	r1, r3
    6ab0:	mov	r2, #1
    6ab4:	bl	1d3c <__snprintf_chk@plt>
    6ab8:	b	69cc <error@@Base+0x824>
    6abc:	cmp	r2, #0
    6ac0:	beq	69e4 <error@@Base+0x83c>
    6ac4:	b	69a4 <error@@Base+0x7fc>
    6ac8:	ldr	r1, [pc, #228]	; 6bb4 <error@@Base+0xa0c>
    6acc:	add	r1, pc, r1
    6ad0:	b	6a60 <error@@Base+0x8b8>
    6ad4:	ldr	r1, [pc, #220]	; 6bb8 <error@@Base+0xa10>
    6ad8:	add	r1, pc, r1
    6adc:	b	6a60 <error@@Base+0x8b8>
    6ae0:	ldr	r1, [pc, #212]	; 6bbc <error@@Base+0xa14>
    6ae4:	add	r1, pc, r1
    6ae8:	b	6a60 <error@@Base+0x8b8>
    6aec:	ldr	r1, [pc, #204]	; 6bc0 <error@@Base+0xa18>
    6af0:	add	r1, pc, r1
    6af4:	b	6a60 <error@@Base+0x8b8>
    6af8:	ldr	r1, [pc, #196]	; 6bc4 <error@@Base+0xa1c>
    6afc:	add	r1, pc, r1
    6b00:	b	6a60 <error@@Base+0x8b8>
    6b04:	ldr	r1, [pc, #188]	; 6bc8 <error@@Base+0xa20>
    6b08:	add	r1, pc, r1
    6b0c:	b	6a60 <error@@Base+0x8b8>
    6b10:	ldr	r2, [pc, #180]	; 6bcc <error@@Base+0xa24>
    6b14:	add	r2, pc, r2
    6b18:	b	6a98 <error@@Base+0x8f0>
    6b1c:	cmp	r2, #4
    6b20:	addls	pc, pc, r2, lsl #2
    6b24:	b	6b60 <error@@Base+0x9b8>
    6b28:	b	6b48 <error@@Base+0x9a0>
    6b2c:	b	6b54 <error@@Base+0x9ac>
    6b30:	b	6b3c <error@@Base+0x994>
    6b34:	b	6b3c <error@@Base+0x994>
    6b38:	b	69dc <error@@Base+0x834>
    6b3c:	ldr	r1, [pc, #140]	; 6bd0 <error@@Base+0xa28>
    6b40:	add	r1, pc, r1
    6b44:	b	6a60 <error@@Base+0x8b8>
    6b48:	ldr	r1, [pc, #132]	; 6bd4 <error@@Base+0xa2c>
    6b4c:	add	r1, pc, r1
    6b50:	b	6a60 <error@@Base+0x8b8>
    6b54:	ldr	r1, [pc, #124]	; 6bd8 <error@@Base+0xa30>
    6b58:	add	r1, pc, r1
    6b5c:	b	6a60 <error@@Base+0x8b8>
    6b60:	ldr	r1, [pc, #116]	; 6bdc <error@@Base+0xa34>
    6b64:	str	r2, [sp, #4]
    6b68:	add	r1, pc, r1
    6b6c:	add	r6, sp, #20
    6b70:	mov	r3, #16
    6b74:	mov	r2, r1
    6b78:	b	6aa4 <error@@Base+0x8fc>
    6b7c:	ldr	r1, [pc, #92]	; 6be0 <error@@Base+0xa38>
    6b80:	str	r2, [sp, #4]
    6b84:	add	r1, pc, r1
    6b88:	add	r6, sp, #20
    6b8c:	mov	r3, #16
    6b90:	mov	r2, r1
    6b94:	b	6aa4 <error@@Base+0x8fc>
    6b98:	bl	1a9c <__stack_chk_fail@plt>
    6b9c:	andeq	r6, r1, r4, lsr #10
    6ba0:	andeq	r0, r0, r8, asr #2
    6ba4:	andeq	r7, r1, r8, asr #23
    6ba8:	andeq	r4, r0, r4, ror #2
    6bac:	andeq	r4, r0, r0, lsr #1
    6bb0:	andeq	r4, r0, ip, rrx
    6bb4:	andeq	r4, r0, r4, lsr #32
    6bb8:	andeq	r4, r0, ip
    6bbc:	andeq	r4, r0, r4
    6bc0:	andeq	r4, r0, r8
    6bc4:	strdeq	r3, [r0], -r0
    6bc8:	andeq	r3, r0, ip, ror #31
    6bcc:	andeq	r3, r0, ip, ror #31
    6bd0:	andeq	r3, r0, r4, lsr #31
    6bd4:	muleq	r0, ip, pc	; <UNPREDICTABLE>
    6bd8:	muleq	r0, r4, pc	; <UNPREDICTABLE>
    6bdc:	andeq	r3, r0, r0, lsr #31
    6be0:	andeq	r3, r0, r4, lsl #31
    6be4:	push	{r4, lr}
    6be8:	mov	r4, r0
    6bec:	ldr	r0, [r0, #60]	; 0x3c
    6bf0:	cmp	r0, #0
    6bf4:	beq	6c0c <error@@Base+0xa64>
    6bf8:	bl	5770 <main@@Base+0x3980>
    6bfc:	ldr	r0, [r4, #60]	; 0x3c
    6c00:	bl	1d18 <close@plt>
    6c04:	mov	r3, #0
    6c08:	str	r3, [r4, #60]	; 0x3c
    6c0c:	mov	r2, #0
    6c10:	mov	r3, #1
    6c14:	str	r2, [r4, #64]	; 0x40
    6c18:	str	r3, [r4]
    6c1c:	pop	{r4, pc}
    6c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6c24:	sub	sp, sp, #2384	; 0x950
    6c28:	ldr	lr, [pc, #1232]	; 7100 <error@@Base+0xf58>
    6c2c:	ldr	r3, [pc, #1232]	; 7104 <error@@Base+0xf5c>
    6c30:	add	lr, pc, lr
    6c34:	sub	sp, sp, #4
    6c38:	ldr	r9, [lr, r3]
    6c3c:	add	ip, sp, #2384	; 0x950
    6c40:	mov	r4, #1280	; 0x500
    6c44:	add	r3, sp, #20
    6c48:	ldr	r6, [r9]
    6c4c:	str	r4, [ip, #-2368]!	; 0xfffff6c0
    6c50:	mov	r4, r2
    6c54:	mov	r2, #0
    6c58:	subs	sl, r1, #0
    6c5c:	add	r5, sp, #1104	; 0x450
    6c60:	add	r1, sp, #76	; 0x4c
    6c64:	str	r2, [r3, #24]
    6c68:	mov	r2, #28
    6c6c:	sub	ip, ip, #4
    6c70:	sub	r5, r5, #4
    6c74:	str	r6, [sp, #2380]	; 0x94c
    6c78:	str	r1, [sp, #36]	; 0x24
    6c7c:	add	r6, sp, #48	; 0x30
    6c80:	mov	r1, #1024	; 0x400
    6c84:	str	r2, [sp, #24]
    6c88:	mov	r2, #1
    6c8c:	str	ip, [sp, #28]
    6c90:	str	r5, [sp, #12]
    6c94:	str	r6, [sp, #20]
    6c98:	str	r1, [sp, #40]	; 0x28
    6c9c:	str	r2, [sp, #32]
    6ca0:	mov	r7, r0
    6ca4:	beq	6cd8 <error@@Base+0xb30>
    6ca8:	mov	r1, r3
    6cac:	mov	r2, #8192	; 0x2000
    6cb0:	bl	1cc4 <recvmsg@plt>
    6cb4:	subs	fp, r0, #0
    6cb8:	bge	6e80 <error@@Base+0xcd8>
    6cbc:	ldr	r2, [sp, #2380]	; 0x94c
    6cc0:	ldr	r3, [r9]
    6cc4:	cmp	r2, r3
    6cc8:	bne	719c <error@@Base+0xff4>
    6ccc:	add	sp, sp, #2384	; 0x950
    6cd0:	add	sp, sp, #4
    6cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6cd8:	mov	r1, r3
    6cdc:	mov	r2, sl
    6ce0:	bl	1cc4 <recvmsg@plt>
    6ce4:	subs	fp, r0, #0
    6ce8:	blt	6cbc <error@@Base+0xb14>
    6cec:	ldr	r3, [pc, #1044]	; 7108 <error@@Base+0xf60>
    6cf0:	add	r3, pc, r3
    6cf4:	ldr	r2, [r3]
    6cf8:	cmp	r2, #2
    6cfc:	beq	705c <error@@Base+0xeb4>
    6d00:	str	fp, [sp]
    6d04:	mov	r0, r7
    6d08:	mov	r3, r5
    6d0c:	mov	r2, r6
    6d10:	mov	r1, #0
    6d14:	blx	r4
    6d18:	subs	r8, r0, #0
    6d1c:	beq	6cbc <error@@Base+0xb14>
    6d20:	ldr	r1, [sp, #40]	; 0x28
    6d24:	cmp	r1, #11
    6d28:	bls	6fc0 <error@@Base+0xe18>
    6d2c:	ldr	r3, [sp, #36]	; 0x24
    6d30:	cmp	r3, #0
    6d34:	beq	7190 <error@@Base+0xfe8>
    6d38:	ldr	r2, [r3, #4]
    6d3c:	mov	r4, #0
    6d40:	cmp	r2, #1
    6d44:	vldr	d0, [pc, #932]	; 70f0 <error@@Base+0xf48>
    6d48:	vldr	d5, [pc, #936]	; 70f8 <error@@Base+0xf50>
    6d4c:	add	r1, r3, r1
    6d50:	add	r0, r3, #12
    6d54:	mov	r7, r4
    6d58:	beq	6f30 <error@@Base+0xd88>
    6d5c:	cmp	r2, #0
    6d60:	bne	6f58 <error@@Base+0xdb0>
    6d64:	ldr	r2, [r3, #8]
    6d68:	cmp	r2, #2
    6d6c:	beq	6f8c <error@@Base+0xde4>
    6d70:	cmp	r2, #11
    6d74:	beq	6f94 <error@@Base+0xdec>
    6d78:	ldr	r2, [r3]
    6d7c:	cmp	r2, #11
    6d80:	bhi	6ef4 <error@@Base+0xd4c>
    6d84:	vcmp.f64	d0, #0.0
    6d88:	vmrs	APSR_nzcv, fpscr
    6d8c:	beq	6fc8 <error@@Base+0xe20>
    6d90:	cmp	sl, #0
    6d94:	beq	6fd4 <error@@Base+0xe2c>
    6d98:	cmp	r4, #0
    6d9c:	vstr	d0, [r8, #48]	; 0x30
    6da0:	str	r7, [r8, #56]	; 0x38
    6da4:	beq	6e74 <error@@Base+0xccc>
    6da8:	ldrb	r3, [r4, #4]
    6dac:	cmp	r3, #1
    6db0:	bne	6ffc <error@@Base+0xe54>
    6db4:	ldr	r3, [r4, #8]
    6db8:	ldr	r6, [r4]
    6dbc:	cmp	r3, #0
    6dc0:	sub	r2, r6, #90	; 0x5a
    6dc4:	clz	r2, r2
    6dc8:	lsr	r2, r2, #5
    6dcc:	moveq	r2, #0
    6dd0:	cmp	r2, #0
    6dd4:	beq	71a0 <error@@Base+0xff8>
    6dd8:	ldr	r2, [pc, #812]	; 710c <error@@Base+0xf64>
    6ddc:	str	r3, [sp, #4]
    6de0:	add	r2, pc, r2
    6de4:	str	r2, [sp]
    6de8:	mvn	r3, #0
    6dec:	mov	r2, #1
    6df0:	mov	r1, #15
    6df4:	add	r0, r8, #72	; 0x48
    6df8:	bl	1d3c <__snprintf_chk@plt>
    6dfc:	mov	r3, #1
    6e00:	str	r3, [r8, #4]
    6e04:	ldr	r3, [pc, #772]	; 7110 <error@@Base+0xf68>
    6e08:	add	r3, pc, r3
    6e0c:	ldr	r2, [r3, #228]	; 0xe4
    6e10:	cmp	r2, #0
    6e14:	beq	6e28 <error@@Base+0xc80>
    6e18:	ldr	r2, [r4, #8]
    6e1c:	ldr	r1, [r3, #216]	; 0xd8
    6e20:	cmp	r2, r1
    6e24:	bcs	7094 <error@@Base+0xeec>
    6e28:	ldr	r3, [pc, #740]	; 7114 <error@@Base+0xf6c>
    6e2c:	add	r3, pc, r3
    6e30:	ldr	r2, [r3, #224]	; 0xe0
    6e34:	cmp	r2, #0
    6e38:	beq	6e74 <error@@Base+0xccc>
    6e3c:	ldr	r1, [r3, #216]	; 0xd8
    6e40:	add	r0, r1, fp
    6e44:	cmp	r0, #135	; 0x87
    6e48:	movhi	r2, #1
    6e4c:	movls	r2, #0
    6e50:	cmp	r1, #128	; 0x80
    6e54:	movhi	r2, #0
    6e58:	cmp	r2, #0
    6e5c:	beq	6e74 <error@@Base+0xccc>
    6e60:	ldr	r3, [r3]
    6e64:	cmp	r3, #2
    6e68:	beq	7178 <error@@Base+0xfd0>
    6e6c:	cmp	r3, #10
    6e70:	beq	712c <error@@Base+0xf84>
    6e74:	mov	r0, r8
    6e78:	bl	6be4 <error@@Base+0xa3c>
    6e7c:	b	6cbc <error@@Base+0xb14>
    6e80:	str	fp, [sp]
    6e84:	mov	r0, r7
    6e88:	mov	r3, r5
    6e8c:	mov	r2, r6
    6e90:	mov	r1, sl
    6e94:	blx	r4
    6e98:	subs	r8, r0, #0
    6e9c:	bne	6d20 <error@@Base+0xb78>
    6ea0:	cmp	fp, #0
    6ea4:	bne	6cbc <error@@Base+0xb14>
    6ea8:	ldr	r1, [pc, #616]	; 7118 <error@@Base+0xf70>
    6eac:	add	r1, pc, r1
    6eb0:	ldr	r3, [r1, #212]	; 0xd4
    6eb4:	cmp	r3, #0
    6eb8:	beq	6cbc <error@@Base+0xb14>
    6ebc:	ldr	r2, [pc, #600]	; 711c <error@@Base+0xf74>
    6ec0:	mov	r3, #88	; 0x58
    6ec4:	add	r2, pc, r2
    6ec8:	ldr	r1, [r1, #4]
    6ecc:	ldr	r0, [r2, #40]	; 0x28
    6ed0:	ldr	r2, [r2, #8]
    6ed4:	mul	r3, r3, r0
    6ed8:	sub	r3, r3, #88	; 0x58
    6edc:	mul	r3, r2, r3
    6ee0:	add	r8, r1, r3
    6ee4:	ldr	r3, [r1, r3]
    6ee8:	cmp	r3, #0
    6eec:	bne	6cbc <error@@Base+0xb14>
    6ef0:	b	6d20 <error@@Base+0xb78>
    6ef4:	add	r2, r2, #3
    6ef8:	bic	r2, r2, #3
    6efc:	add	r3, r3, r2
    6f00:	add	r0, r3, #12
    6f04:	cmp	r1, r0
    6f08:	bcc	6d84 <error@@Base+0xbdc>
    6f0c:	ldr	r2, [r3]
    6f10:	add	r2, r2, #3
    6f14:	bic	r2, r2, #3
    6f18:	add	r2, r3, r2
    6f1c:	cmp	r1, r2
    6f20:	bcc	6d84 <error@@Base+0xbdc>
    6f24:	ldr	r2, [r3, #4]
    6f28:	cmp	r2, #1
    6f2c:	bne	6d5c <error@@Base+0xbb4>
    6f30:	ldr	r2, [r3, #8]
    6f34:	cmp	r2, #29
    6f38:	bne	6d78 <error@@Base+0xbd0>
    6f3c:	vldr	s15, [r3, #16]
    6f40:	vldr	s13, [r3, #12]
    6f44:	vcvt.f64.s32	d7, s15
    6f48:	vcvt.f64.s32	d0, s13
    6f4c:	vdiv.f64	d6, d7, d5
    6f50:	vadd.f64	d0, d6, d0
    6f54:	b	6d78 <error@@Base+0xbd0>
    6f58:	cmp	r2, #41	; 0x29
    6f5c:	bne	6d78 <error@@Base+0xbd0>
    6f60:	ldr	r2, [r3, #8]
    6f64:	cmp	r2, #52	; 0x34
    6f68:	beq	6f8c <error@@Base+0xde4>
    6f6c:	cmp	r2, #25
    6f70:	bne	6d78 <error@@Base+0xbd0>
    6f74:	ldrb	r2, [r3, #16]
    6f78:	and	r2, r2, #253	; 0xfd
    6f7c:	cmp	r2, #1
    6f80:	bne	6cbc <error@@Base+0xb14>
    6f84:	mov	r4, r0
    6f88:	b	6d78 <error@@Base+0xbd0>
    6f8c:	ldr	r7, [r3, #12]
    6f90:	b	6d78 <error@@Base+0xbd0>
    6f94:	ldrb	r2, [r3, #16]
    6f98:	sub	ip, r2, #1
    6f9c:	cmp	ip, #1
    6fa0:	bhi	6cbc <error@@Base+0xb14>
    6fa4:	cmp	r2, #2
    6fa8:	bne	6f84 <error@@Base+0xddc>
    6fac:	ldrb	r2, [r3, #17]
    6fb0:	sub	r2, r2, #4
    6fb4:	cmp	r2, #1
    6fb8:	bhi	6f84 <error@@Base+0xddc>
    6fbc:	b	6cbc <error@@Base+0xb14>
    6fc0:	mov	r4, #0
    6fc4:	mov	r7, r4
    6fc8:	bl	59a0 <main@@Base+0x3bb0>
    6fcc:	cmp	sl, #0
    6fd0:	bne	6d98 <error@@Base+0xbf0>
    6fd4:	ldm	r6!, {r0, r1, r2, r3}
    6fd8:	str	r0, [r8, #8]
    6fdc:	str	r1, [r8, #12]
    6fe0:	str	r2, [r8, #16]
    6fe4:	str	r3, [r8, #20]
    6fe8:	ldm	r6!, {r0, r1, r2}
    6fec:	str	r0, [r8, #24]
    6ff0:	str	r1, [r8, #28]
    6ff4:	str	r2, [r8, #32]
    6ff8:	b	6d98 <error@@Base+0xbf0>
    6ffc:	mov	r2, r4
    7000:	mov	r0, r8
    7004:	ldr	lr, [r2, #16]!
    7008:	ldr	ip, [r2, #4]
    700c:	ldr	r1, [r2, #8]
    7010:	ldr	r6, [r2, #12]
    7014:	str	lr, [r8, #8]
    7018:	str	ip, [r8, #12]
    701c:	str	r1, [r8, #16]
    7020:	str	r6, [r8, #20]
    7024:	ldr	r1, [r2, #24]
    7028:	ldr	lr, [r2, #16]
    702c:	ldr	ip, [r2, #20]
    7030:	str	lr, [r8, #24]
    7034:	str	ip, [r8, #28]
    7038:	str	r1, [r8, #32]
    703c:	ldr	r3, [r4, #8]
    7040:	ldrb	r2, [r4, #6]
    7044:	ldrb	r1, [r4, #5]
    7048:	bl	695c <error@@Base+0x7b4>
    704c:	ldrb	r3, [r4, #4]
    7050:	cmp	r3, #1
    7054:	bne	6e04 <error@@Base+0xc5c>
    7058:	b	6db4 <error@@Base+0xc0c>
    705c:	ldr	r3, [r3, #12]
    7060:	ldr	r3, [r3, #32]
    7064:	cmp	r3, #0
    7068:	bne	6d00 <error@@Base+0xb58>
    706c:	cmp	fp, #19
    7070:	ble	6cbc <error@@Base+0xb14>
    7074:	ldrb	r3, [sp, #1100]	; 0x44c
    7078:	and	r3, r3, #15
    707c:	lsl	r3, r3, #2
    7080:	cmp	r3, fp
    7084:	bgt	6cbc <error@@Base+0xb14>
    7088:	add	r5, r5, r3
    708c:	sub	fp, fp, r3
    7090:	b	6d00 <error@@Base+0xb58>
    7094:	ldr	r0, [r3, #220]	; 0xdc
    7098:	add	r0, r1, r0
    709c:	cmp	r2, r0
    70a0:	bcs	6e28 <error@@Base+0xc80>
    70a4:	sub	r2, r2, r1
    70a8:	mov	r0, r8
    70ac:	str	r2, [r3, #220]	; 0xdc
    70b0:	bl	6be4 <error@@Base+0xa3c>
    70b4:	mov	r2, #88	; 0x58
    70b8:	mov	r1, #0
    70bc:	mov	r0, r8
    70c0:	bl	1bf8 <memset@plt>
    70c4:	ldr	r3, [pc, #84]	; 7120 <error@@Base+0xf78>
    70c8:	ldr	r2, [r4, #8]
    70cc:	add	r3, pc, r3
    70d0:	str	r2, [sp, #4]
    70d4:	str	r3, [sp]
    70d8:	add	r0, r8, #72	; 0x48
    70dc:	mvn	r3, #0
    70e0:	mov	r2, #1
    70e4:	mov	r1, #15
    70e8:	bl	1d3c <__snprintf_chk@plt>
    70ec:	b	6cbc <error@@Base+0xb14>
	...
    70fc:	smlawbmi	lr, r0, r4, r8
    7100:	andeq	r6, r1, r0, ror #4
    7104:	andeq	r0, r0, r8, asr #2
    7108:	andeq	r7, r1, r0, asr r8
    710c:	andeq	r3, r0, r0, lsr #26
    7110:	andeq	r7, r1, r8, lsr r7
    7114:	andeq	r7, r1, r4, lsl r7
    7118:	muleq	r1, r4, r6
    711c:	andeq	r6, r1, r4, ror #11
    7120:	andeq	r3, r0, r0, ror #20
    7124:	strdeq	r7, [r1], -ip
    7128:	andeq	r3, r0, r0, ror r9
    712c:	ldrb	r2, [r4, #5]
    7130:	and	r2, r2, #253	; 0xfd
    7134:	cmp	r2, #1
    7138:	bne	6e74 <error@@Base+0xccc>
    713c:	ldr	r2, [pc, #-32]	; 7124 <error@@Base+0xf7c>
    7140:	rsb	r1, r1, #128	; 0x80
    7144:	add	r2, pc, r2
    7148:	ldr	r2, [r2, #220]	; 0xdc
    714c:	cmp	r2, fp
    7150:	movcc	r3, #0
    7154:	bcc	7164 <error@@Base+0xfbc>
    7158:	cmp	r3, #2
    715c:	movne	r3, #8
    7160:	moveq	r3, #4
    7164:	sub	r2, fp, r1
    7168:	mov	r0, r8
    716c:	add	r1, r5, r1
    7170:	bl	3688 <main@@Base+0x1898>
    7174:	b	6e74 <error@@Base+0xccc>
    7178:	ldrb	r2, [r4, #5]
    717c:	sub	r0, r2, #11
    7180:	cmp	r2, #3
    7184:	cmpne	r0, #1
    7188:	bhi	6e74 <error@@Base+0xccc>
    718c:	b	713c <error@@Base+0xf94>
    7190:	mov	r4, r3
    7194:	mov	r7, r3
    7198:	b	6fc8 <error@@Base+0xe20>
    719c:	bl	1a9c <__stack_chk_fail@plt>
    71a0:	bl	1bbc <__errno_location@plt>
    71a4:	str	r6, [r0]
    71a8:	ldr	r0, [pc, #-136]	; 7128 <error@@Base+0xf80>
    71ac:	add	r0, pc, r0
    71b0:	bl	61a8 <error@@Base>
    71b4:	ldrh	r3, [r0]
    71b8:	cmp	r3, #0
    71bc:	beq	71cc <error@@Base+0x1024>
    71c0:	ldrh	r2, [r1]
    71c4:	cmp	r2, r3
    71c8:	beq	71d4 <error@@Base+0x102c>
    71cc:	mov	r0, #0
    71d0:	bx	lr
    71d4:	cmp	r2, #10
    71d8:	push	{r4, lr}
    71dc:	addeq	r1, r1, #8
    71e0:	addeq	r0, r0, #8
    71e4:	moveq	r2, #16
    71e8:	addne	r1, r1, #4
    71ec:	addne	r0, r0, #4
    71f0:	movne	r2, #4
    71f4:	bl	1a84 <memcmp@plt>
    71f8:	clz	r0, r0
    71fc:	lsr	r0, r0, #5
    7200:	pop	{r4, pc}
    7204:	ldr	r2, [pc, #232]	; 72f4 <error@@Base+0x114c>
    7208:	ldr	r1, [pc, #232]	; 72f8 <error@@Base+0x1150>
    720c:	add	r2, pc, r2
    7210:	ldr	r3, [pc, #228]	; 72fc <error@@Base+0x1154>
    7214:	push	{r4, r5, r6, lr}
    7218:	add	r3, pc, r3
    721c:	ldr	r5, [r2, r1]
    7220:	ldr	r6, [r3, #260]	; 0x104
    7224:	sub	sp, sp, #40	; 0x28
    7228:	ldr	r3, [r5]
    722c:	cmp	r6, #0
    7230:	mov	r4, r0
    7234:	str	r3, [sp, #36]	; 0x24
    7238:	beq	7268 <error@@Base+0x10c0>
    723c:	mov	r0, r6
    7240:	bl	1b8c <strlen@plt>
    7244:	mov	r1, #1
    7248:	mov	r3, r6
    724c:	mov	r2, #25
    7250:	add	r0, r0, r1
    7254:	str	r0, [sp]
    7258:	mov	r0, r4
    725c:	bl	1a0c <setsockopt@plt>
    7260:	cmp	r0, #0
    7264:	blt	72e8 <error@@Base+0x1140>
    7268:	ldr	r1, [pc, #144]	; 7300 <error@@Base+0x1158>
    726c:	add	r1, pc, r1
    7270:	ldrh	r3, [r1, #104]	; 0x68
    7274:	cmp	r3, #0
    7278:	addne	r1, r1, #104	; 0x68
    727c:	beq	72ac <error@@Base+0x1104>
    7280:	mov	r0, r4
    7284:	mov	r2, #28
    7288:	bl	1bec <bind@plt>
    728c:	cmp	r0, #0
    7290:	blt	72dc <error@@Base+0x1134>
    7294:	ldr	r2, [sp, #36]	; 0x24
    7298:	ldr	r3, [r5]
    729c:	cmp	r2, r3
    72a0:	bne	72d8 <error@@Base+0x1130>
    72a4:	add	sp, sp, #40	; 0x28
    72a8:	pop	{r4, r5, r6, pc}
    72ac:	ldr	r2, [r1]
    72b0:	add	r1, sp, #8
    72b4:	str	r3, [sp, #8]
    72b8:	str	r3, [r1, #4]
    72bc:	strh	r2, [sp, #8]
    72c0:	str	r3, [r1, #8]
    72c4:	str	r3, [r1, #12]
    72c8:	str	r3, [r1, #16]
    72cc:	str	r3, [r1, #20]
    72d0:	str	r3, [r1, #24]
    72d4:	b	7280 <error@@Base+0x10d8>
    72d8:	bl	1a9c <__stack_chk_fail@plt>
    72dc:	ldr	r0, [pc, #32]	; 7304 <error@@Base+0x115c>
    72e0:	add	r0, pc, r0
    72e4:	bl	61a8 <error@@Base>
    72e8:	ldr	r0, [pc, #24]	; 7308 <error@@Base+0x1160>
    72ec:	add	r0, pc, r0
    72f0:	bl	61a8 <error@@Base>
    72f4:	andeq	r5, r1, r4, lsl #25
    72f8:	andeq	r0, r0, r8, asr #2
    72fc:	andeq	r7, r1, r8, lsr #6
    7300:	ldrdeq	r7, [r1], -r4
    7304:	andeq	r3, r0, r8, lsl sl
    7308:	strdeq	r3, [r0], -r0
    730c:	ldr	ip, [pc, #80]	; 7364 <error@@Base+0x11bc>
    7310:	ldr	r2, [pc, #80]	; 7368 <error@@Base+0x11c0>
    7314:	add	ip, pc, ip
    7318:	push	{r4, lr}
    731c:	sub	sp, sp, #16
    7320:	ldr	r4, [ip, r2]
    7324:	add	r3, sp, #16
    7328:	mov	r1, #1
    732c:	ldr	lr, [r4]
    7330:	mov	r2, #4
    7334:	str	r1, [r3, #-8]!
    7338:	str	r2, [sp]
    733c:	mov	r2, #29
    7340:	str	lr, [sp, #12]
    7344:	bl	1a0c <setsockopt@plt>
    7348:	ldr	r2, [sp, #12]
    734c:	ldr	r3, [r4]
    7350:	cmp	r2, r3
    7354:	bne	7360 <error@@Base+0x11b8>
    7358:	add	sp, sp, #16
    735c:	pop	{r4, pc}
    7360:	bl	1a9c <__stack_chk_fail@plt>
    7364:	andeq	r5, r1, ip, ror fp
    7368:	andeq	r0, r0, r8, asr #2
    736c:	ldr	r3, [pc, #144]	; 7404 <error@@Base+0x125c>
    7370:	ldr	r1, [pc, #144]	; 7408 <error@@Base+0x1260>
    7374:	add	r3, pc, r3
    7378:	ldr	r2, [pc, #140]	; 740c <error@@Base+0x1264>
    737c:	push	{r4, lr}
    7380:	add	r2, pc, r2
    7384:	ldr	r4, [r3, r1]
    7388:	ldr	r2, [r2]
    738c:	sub	sp, sp, #16
    7390:	ldr	r3, [r4]
    7394:	mov	ip, #1
    7398:	cmp	r2, #2
    739c:	str	ip, [sp, #8]
    73a0:	str	r3, [sp, #12]
    73a4:	beq	73e4 <error@@Base+0x123c>
    73a8:	cmp	r2, #10
    73ac:	beq	73c8 <error@@Base+0x1220>
    73b0:	ldr	r2, [sp, #12]
    73b4:	ldr	r3, [r4]
    73b8:	cmp	r2, r3
    73bc:	bne	7400 <error@@Base+0x1258>
    73c0:	add	sp, sp, #16
    73c4:	pop	{r4, pc}
    73c8:	mov	r3, #4
    73cc:	str	r3, [sp]
    73d0:	mov	r2, #51	; 0x33
    73d4:	add	r3, sp, #8
    73d8:	mov	r1, #41	; 0x29
    73dc:	bl	1a0c <setsockopt@plt>
    73e0:	b	73b0 <error@@Base+0x1208>
    73e4:	mov	r3, #4
    73e8:	str	r3, [sp]
    73ec:	mov	r2, #12
    73f0:	add	r3, sp, #8
    73f4:	mov	r1, #0
    73f8:	bl	1a0c <setsockopt@plt>
    73fc:	b	73b0 <error@@Base+0x1208>
    7400:	bl	1a9c <__stack_chk_fail@plt>
    7404:	andeq	r5, r1, ip, lsl fp
    7408:	andeq	r0, r0, r8, asr #2
    740c:	andeq	r7, r1, r0, asr #3
    7410:	ldr	r3, [pc, #1160]	; 78a0 <error@@Base+0x16f8>
    7414:	ldr	r1, [pc, #1160]	; 78a4 <error@@Base+0x16fc>
    7418:	add	r3, pc, r3
    741c:	ldr	r2, [pc, #1156]	; 78a8 <error@@Base+0x1700>
    7420:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    7424:	add	r2, pc, r2
    7428:	ldr	r5, [r3, r1]
    742c:	ldr	r2, [r2, #264]	; 0x108
    7430:	sub	sp, sp, #56	; 0x38
    7434:	mov	ip, #0
    7438:	ldr	r3, [r5]
    743c:	cmp	r2, ip
    7440:	str	ip, [sp, #12]
    7444:	str	r3, [sp, #52]	; 0x34
    7448:	mov	r4, r0
    744c:	bne	7700 <error@@Base+0x1558>
    7450:	ldr	r3, [pc, #1108]	; 78ac <error@@Base+0x1704>
    7454:	add	r3, pc, r3
    7458:	ldr	r2, [r3, #268]	; 0x10c
    745c:	cmp	r2, #0
    7460:	bne	76d0 <error@@Base+0x1528>
    7464:	ldr	r2, [pc, #1092]	; 78b0 <error@@Base+0x1708>
    7468:	add	r2, pc, r2
    746c:	ldr	r3, [r2, #208]	; 0xd0
    7470:	cmp	r3, #0
    7474:	beq	752c <error@@Base+0x1384>
    7478:	ldr	r1, [r2, #204]	; 0xcc
    747c:	cmp	r1, #0
    7480:	beq	752c <error@@Base+0x1384>
    7484:	ldr	r2, [r2]
    7488:	cmp	r2, #2
    748c:	beq	7624 <error@@Base+0x147c>
    7490:	cmp	r2, #10
    7494:	beq	7838 <error@@Base+0x1690>
    7498:	mov	r0, r4
    749c:	bl	7204 <error@@Base+0x105c>
    74a0:	ldr	r3, [pc, #1036]	; 78b4 <error@@Base+0x170c>
    74a4:	add	r3, pc, r3
    74a8:	ldr	r2, [r3, #272]	; 0x110
    74ac:	cmp	r2, #0
    74b0:	beq	74dc <error@@Base+0x1334>
    74b4:	add	r3, sp, #56	; 0x38
    74b8:	mov	r1, #4
    74bc:	str	r2, [r3, #-44]!	; 0xffffffd4
    74c0:	mov	r0, r4
    74c4:	str	r1, [sp]
    74c8:	mov	r2, #5
    74cc:	mov	r1, #1
    74d0:	bl	1a0c <setsockopt@plt>
    74d4:	cmp	r0, #0
    74d8:	blt	7864 <error@@Base+0x16bc>
    74dc:	add	r3, sp, #56	; 0x38
    74e0:	mov	r1, #1
    74e4:	mov	r6, #4
    74e8:	str	r1, [r3, #-40]!	; 0xffffffd8
    74ec:	mov	r2, #29
    74f0:	str	r6, [sp]
    74f4:	mov	r0, r4
    74f8:	bl	1a0c <setsockopt@plt>
    74fc:	mov	r0, r4
    7500:	bl	736c <error@@Base+0x11c4>
    7504:	mov	r2, #2048	; 0x800
    7508:	mov	r1, r6
    750c:	mov	r0, r4
    7510:	bl	1bb0 <fcntl@plt>
    7514:	ldr	r2, [sp, #52]	; 0x34
    7518:	ldr	r3, [r5]
    751c:	cmp	r2, r3
    7520:	bne	7860 <error@@Base+0x16b8>
    7524:	add	sp, sp, #56	; 0x38
    7528:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    752c:	mov	r0, r4
    7530:	bl	7204 <error@@Base+0x105c>
    7534:	ldr	r3, [pc, #892]	; 78b8 <error@@Base+0x1710>
    7538:	add	r3, pc, r3
    753c:	ldr	r3, [r3]
    7540:	cmp	r3, #2
    7544:	beq	7648 <error@@Base+0x14a0>
    7548:	cmp	r3, #10
    754c:	bne	74a0 <error@@Base+0x12f8>
    7550:	ldr	r8, [pc, #868]	; 78bc <error@@Base+0x1714>
    7554:	add	r6, sp, #56	; 0x38
    7558:	add	r8, pc, r8
    755c:	mov	r7, #4
    7560:	ldr	r3, [r8, #212]	; 0xd4
    7564:	mov	r2, #23
    7568:	cmp	r3, #0
    756c:	movne	r3, #3
    7570:	str	r7, [sp]
    7574:	mov	r1, #41	; 0x29
    7578:	str	r3, [r6, #-44]!	; 0xffffffd4
    757c:	mov	r0, r4
    7580:	mov	r3, r6
    7584:	bl	1a0c <setsockopt@plt>
    7588:	cmp	r0, #0
    758c:	blt	77b8 <error@@Base+0x1610>
    7590:	ldr	r8, [pc, #808]	; 78c0 <error@@Base+0x1718>
    7594:	add	r8, pc, r8
    7598:	ldr	r7, [r8, #244]	; 0xf4
    759c:	cmp	r7, #0
    75a0:	bne	7730 <error@@Base+0x1588>
    75a4:	ldr	ip, [r8, #240]	; 0xf0
    75a8:	cmp	ip, #0
    75ac:	beq	74a0 <error@@Base+0x12f8>
    75b0:	mov	r3, #4
    75b4:	str	r3, [sp]
    75b8:	mov	r2, #67	; 0x43
    75bc:	mov	r3, r6
    75c0:	mov	r1, #41	; 0x29
    75c4:	mov	r0, r4
    75c8:	str	ip, [sp, #12]
    75cc:	bl	1a0c <setsockopt@plt>
    75d0:	cmp	r0, #0
    75d4:	blt	787c <error@@Base+0x16d4>
    75d8:	ldr	r3, [pc, #740]	; 78c4 <error@@Base+0x171c>
    75dc:	add	r3, pc, r3
    75e0:	ldr	r3, [r3, #240]	; 0xf0
    75e4:	cmp	r3, #0
    75e8:	beq	77a0 <error@@Base+0x15f8>
    75ec:	mov	r2, #4
    75f0:	str	r2, [sp]
    75f4:	mov	ip, #1
    75f8:	mov	r3, r6
    75fc:	mov	r2, #33	; 0x21
    7600:	mov	r1, #41	; 0x29
    7604:	mov	r0, r4
    7608:	str	ip, [sp, #12]
    760c:	bl	1a0c <setsockopt@plt>
    7610:	cmp	r0, #0
    7614:	bge	74a0 <error@@Base+0x12f8>
    7618:	ldr	r0, [pc, #680]	; 78c8 <error@@Base+0x1720>
    761c:	add	r0, pc, r0
    7620:	bl	61a8 <error@@Base>
    7624:	str	r1, [sp]
    7628:	mov	r2, #4
    762c:	mov	r1, #0
    7630:	mov	r0, r4
    7634:	bl	1a0c <setsockopt@plt>
    7638:	cmp	r0, #0
    763c:	blt	7894 <error@@Base+0x16ec>
    7640:	mov	r0, r4
    7644:	bl	7204 <error@@Base+0x105c>
    7648:	ldr	r8, [pc, #636]	; 78cc <error@@Base+0x1724>
    764c:	add	r6, sp, #56	; 0x38
    7650:	add	r8, pc, r8
    7654:	mov	r7, #4
    7658:	ldr	r3, [r8, #212]	; 0xd4
    765c:	mov	r2, #10
    7660:	cmp	r3, #0
    7664:	movne	r3, #3
    7668:	str	r7, [sp]
    766c:	mov	r1, #0
    7670:	str	r3, [r6, #-44]!	; 0xffffffd4
    7674:	mov	r0, r4
    7678:	mov	r3, r6
    767c:	bl	1a0c <setsockopt@plt>
    7680:	cmp	r0, #0
    7684:	blt	77f8 <error@@Base+0x1650>
    7688:	ldr	r3, [pc, #576]	; 78d0 <error@@Base+0x1728>
    768c:	add	r3, pc, r3
    7690:	ldr	ip, [r3, #240]	; 0xf0
    7694:	cmp	ip, #0
    7698:	beq	74a0 <error@@Base+0x12f8>
    769c:	mov	r2, #4
    76a0:	str	r2, [sp]
    76a4:	mov	r3, r6
    76a8:	mov	r2, #1
    76ac:	mov	r1, #0
    76b0:	mov	r0, r4
    76b4:	str	ip, [sp, #12]
    76b8:	bl	1a0c <setsockopt@plt>
    76bc:	cmp	r0, #0
    76c0:	bge	74a0 <error@@Base+0x12f8>
    76c4:	ldr	r0, [pc, #520]	; 78d4 <error@@Base+0x172c>
    76c8:	add	r0, pc, r0
    76cc:	bl	61a8 <error@@Base>
    76d0:	mov	r2, #4
    76d4:	str	r2, [sp]
    76d8:	add	r3, r3, #268	; 0x10c
    76dc:	mov	r2, #36	; 0x24
    76e0:	mov	r1, #1
    76e4:	mov	r0, r4
    76e8:	bl	1a0c <setsockopt@plt>
    76ec:	cmp	r0, #0
    76f0:	bge	7464 <error@@Base+0x12bc>
    76f4:	ldr	r0, [pc, #476]	; 78d8 <error@@Base+0x1730>
    76f8:	add	r0, pc, r0
    76fc:	bl	61a8 <error@@Base>
    7700:	add	r3, sp, #56	; 0x38
    7704:	mov	r2, #1
    7708:	mov	ip, #4
    770c:	str	r2, [r3, #-44]!	; 0xffffffd4
    7710:	mov	r1, r2
    7714:	str	ip, [sp]
    7718:	bl	1a0c <setsockopt@plt>
    771c:	cmp	r0, #0
    7720:	bge	7450 <error@@Base+0x12a8>
    7724:	ldr	r0, [pc, #432]	; 78dc <error@@Base+0x1734>
    7728:	add	r0, pc, r0
    772c:	bl	61a8 <error@@Base>
    7730:	mov	sl, #32
    7734:	add	r9, sp, #20
    7738:	mov	r2, sl
    773c:	mov	r1, #0
    7740:	mov	r0, r9
    7744:	bl	1bf8 <memset@plt>
    7748:	add	r3, r8, #80	; 0x50
    774c:	bic	r7, r7, #-16777216	; 0xff000000
    7750:	ldm	r3, {r0, r1, r2, r3}
    7754:	bic	r7, r7, #15728640	; 0xf00000
    7758:	str	sl, [sp]
    775c:	mov	lr, #1
    7760:	stm	r9, {r0, r1, r2, r3}
    7764:	mvn	ip, #0
    7768:	rev	r7, r7
    776c:	mov	r3, r9
    7770:	mov	r2, sl
    7774:	mov	r1, #41	; 0x29
    7778:	mov	r0, r4
    777c:	str	r7, [sp, #36]	; 0x24
    7780:	strh	lr, [sp, #42]	; 0x2a
    7784:	strb	ip, [sp, #41]	; 0x29
    7788:	bl	1a0c <setsockopt@plt>
    778c:	cmp	r0, #0
    7790:	blt	7870 <error@@Base+0x16c8>
    7794:	ldr	ip, [r8, #240]	; 0xf0
    7798:	cmp	ip, #0
    779c:	bne	75b0 <error@@Base+0x1408>
    77a0:	ldr	r3, [pc, #312]	; 78e0 <error@@Base+0x1738>
    77a4:	add	r3, pc, r3
    77a8:	ldr	r3, [r3, #244]	; 0xf4
    77ac:	cmp	r3, #0
    77b0:	bne	75ec <error@@Base+0x1444>
    77b4:	b	74a0 <error@@Base+0x12f8>
    77b8:	ldr	r3, [r8, #212]	; 0xd4
    77bc:	cmp	r3, #0
    77c0:	beq	77ec <error@@Base+0x1644>
    77c4:	mov	ip, #2
    77c8:	str	r7, [sp]
    77cc:	mov	r3, r6
    77d0:	mov	r2, #23
    77d4:	mov	r1, #41	; 0x29
    77d8:	mov	r0, r4
    77dc:	str	ip, [sp, #12]
    77e0:	bl	1a0c <setsockopt@plt>
    77e4:	cmp	r0, #0
    77e8:	bge	7590 <error@@Base+0x13e8>
    77ec:	ldr	r0, [pc, #240]	; 78e4 <error@@Base+0x173c>
    77f0:	add	r0, pc, r0
    77f4:	bl	61a8 <error@@Base>
    77f8:	ldr	r3, [r8, #212]	; 0xd4
    77fc:	cmp	r3, #0
    7800:	beq	782c <error@@Base+0x1684>
    7804:	mov	ip, #2
    7808:	str	r7, [sp]
    780c:	mov	r3, r6
    7810:	mov	r2, #10
    7814:	mov	r1, #0
    7818:	mov	r0, r4
    781c:	str	ip, [sp, #12]
    7820:	bl	1a0c <setsockopt@plt>
    7824:	cmp	r0, #0
    7828:	bge	7688 <error@@Base+0x14e0>
    782c:	ldr	r0, [pc, #180]	; 78e8 <error@@Base+0x1740>
    7830:	add	r0, pc, r0
    7834:	bl	61a8 <error@@Base>
    7838:	str	r1, [sp]
    783c:	mov	r2, #57	; 0x39
    7840:	mov	r1, #41	; 0x29
    7844:	mov	r0, r4
    7848:	bl	1a0c <setsockopt@plt>
    784c:	cmp	r0, #0
    7850:	blt	7888 <error@@Base+0x16e0>
    7854:	mov	r0, r4
    7858:	bl	7204 <error@@Base+0x105c>
    785c:	b	7550 <error@@Base+0x13a8>
    7860:	bl	1a9c <__stack_chk_fail@plt>
    7864:	ldr	r0, [pc, #128]	; 78ec <error@@Base+0x1744>
    7868:	add	r0, pc, r0
    786c:	bl	61a8 <error@@Base>
    7870:	ldr	r0, [pc, #120]	; 78f0 <error@@Base+0x1748>
    7874:	add	r0, pc, r0
    7878:	bl	61a8 <error@@Base>
    787c:	ldr	r0, [pc, #112]	; 78f4 <error@@Base+0x174c>
    7880:	add	r0, pc, r0
    7884:	bl	61a8 <error@@Base>
    7888:	ldr	r0, [pc, #104]	; 78f8 <error@@Base+0x1750>
    788c:	add	r0, pc, r0
    7890:	bl	61a8 <error@@Base>
    7894:	ldr	r0, [pc, #96]	; 78fc <error@@Base+0x1754>
    7898:	add	r0, pc, r0
    789c:	bl	61a8 <error@@Base>
    78a0:	andeq	r5, r1, r8, ror sl
    78a4:	andeq	r0, r0, r8, asr #2
    78a8:	andeq	r7, r1, ip, lsl r1
    78ac:	andeq	r7, r1, ip, ror #1
    78b0:	ldrdeq	r7, [r1], -r8
    78b4:	muleq	r1, ip, r0
    78b8:	andeq	r7, r1, r8
    78bc:	andeq	r6, r1, r8, ror #31
    78c0:	andeq	r6, r1, ip, lsr #31
    78c4:	andeq	r6, r1, r4, ror #30
    78c8:	andeq	r3, r0, r4, asr #15
    78cc:	strdeq	r6, [r1], -r0
    78d0:			; <UNDEFINED> instruction: 0x00016eb4
    78d4:	andeq	r3, r0, ip, lsr #13
    78d8:	andeq	r3, r0, ip, lsl r6
    78dc:	ldrdeq	r3, [r0], -r8
    78e0:	muleq	r1, ip, sp
    78e4:	muleq	r0, r8, r5
    78e8:	andeq	r3, r0, r8, lsr #10
    78ec:	muleq	r0, r8, r5
    78f0:	andeq	r3, r0, r4, lsr r5
    78f4:	andeq	r3, r0, r8, asr #10
    78f8:			; <UNDEFINED> instruction: 0x000034b4
    78fc:	muleq	r0, r0, r4
    7900:	ldr	r3, [pc, #176]	; 79b8 <error@@Base+0x1810>
    7904:	ldr	r1, [pc, #176]	; 79bc <error@@Base+0x1814>
    7908:	add	r3, pc, r3
    790c:	ldr	r2, [pc, #172]	; 79c0 <error@@Base+0x1818>
    7910:	push	{r4, lr}
    7914:	add	r2, pc, r2
    7918:	ldr	r4, [r3, r1]
    791c:	ldr	r2, [r2]
    7920:	sub	sp, sp, #16
    7924:	ldr	r3, [r4]
    7928:	mov	ip, #1
    792c:	cmp	r2, #2
    7930:	str	ip, [sp, #8]
    7934:	str	r3, [sp, #12]
    7938:	beq	7988 <error@@Base+0x17e0>
    793c:	cmp	r2, #10
    7940:	beq	795c <error@@Base+0x17b4>
    7944:	ldr	r2, [sp, #12]
    7948:	ldr	r3, [r4]
    794c:	cmp	r2, r3
    7950:	bne	79b4 <error@@Base+0x180c>
    7954:	add	sp, sp, #16
    7958:	pop	{r4, pc}
    795c:	mov	r3, #4
    7960:	str	r3, [sp]
    7964:	mov	r2, #25
    7968:	add	r3, sp, #8
    796c:	mov	r1, #41	; 0x29
    7970:	bl	1a0c <setsockopt@plt>
    7974:	cmp	r0, #0
    7978:	bge	7944 <error@@Base+0x179c>
    797c:	ldr	r0, [pc, #64]	; 79c4 <error@@Base+0x181c>
    7980:	add	r0, pc, r0
    7984:	bl	61a8 <error@@Base>
    7988:	mov	r3, #4
    798c:	str	r3, [sp]
    7990:	mov	r2, #11
    7994:	add	r3, sp, #8
    7998:	mov	r1, #0
    799c:	bl	1a0c <setsockopt@plt>
    79a0:	cmp	r0, #0
    79a4:	bge	7944 <error@@Base+0x179c>
    79a8:	ldr	r0, [pc, #24]	; 79c8 <error@@Base+0x1820>
    79ac:	add	r0, pc, r0
    79b0:	bl	61a8 <error@@Base>
    79b4:	bl	1a9c <__stack_chk_fail@plt>
    79b8:	andeq	r5, r1, r8, lsl #11
    79bc:	andeq	r0, r0, r8, asr #2
    79c0:	andeq	r6, r1, ip, lsr #24
    79c4:			; <UNDEFINED> instruction: 0x000034b0
    79c8:	andeq	r3, r0, ip, ror #8
    79cc:	ldr	r3, [pc, #124]	; 7a50 <error@@Base+0x18a8>
    79d0:	push	{lr}		; (str lr, [sp, #-4]!)
    79d4:	add	r3, pc, r3
    79d8:	sub	sp, sp, #20
    79dc:	ldr	r2, [r3]
    79e0:	str	r1, [sp, #12]
    79e4:	cmp	r2, #2
    79e8:	beq	7a28 <error@@Base+0x1880>
    79ec:	cmp	r2, #10
    79f0:	beq	79fc <error@@Base+0x1854>
    79f4:	add	sp, sp, #20
    79f8:	pop	{pc}		; (ldr pc, [sp], #4)
    79fc:	mov	r3, #4
    7a00:	str	r3, [sp]
    7a04:	mov	r2, #16
    7a08:	add	r3, sp, #12
    7a0c:	mov	r1, #41	; 0x29
    7a10:	bl	1a0c <setsockopt@plt>
    7a14:	cmp	r0, #0
    7a18:	bge	79f4 <error@@Base+0x184c>
    7a1c:	ldr	r0, [pc, #48]	; 7a54 <error@@Base+0x18ac>
    7a20:	add	r0, pc, r0
    7a24:	bl	61a8 <error@@Base>
    7a28:	mov	r3, #4
    7a2c:	str	r3, [sp]
    7a30:	mov	r1, #0
    7a34:	add	r3, sp, #12
    7a38:	bl	1a0c <setsockopt@plt>
    7a3c:	cmp	r0, #0
    7a40:	bge	79f4 <error@@Base+0x184c>
    7a44:	ldr	r0, [pc, #12]	; 7a58 <error@@Base+0x18b0>
    7a48:	add	r0, pc, r0
    7a4c:	bl	61a8 <error@@Base>
    7a50:	andeq	r6, r1, ip, ror #22
    7a54:	andeq	r3, r0, ip, lsr r4
    7a58:	andeq	r3, r0, r0, lsl #8
    7a5c:	ldr	r3, [pc, #240]	; 7b54 <error@@Base+0x19ac>
    7a60:	ldr	r2, [pc, #240]	; 7b58 <error@@Base+0x19b0>
    7a64:	add	r3, pc, r3
    7a68:	ldr	r1, [pc, #236]	; 7b5c <error@@Base+0x19b4>
    7a6c:	push	{r4, r5, r6, lr}
    7a70:	add	r1, pc, r1
    7a74:	ldr	r5, [r3, r2]
    7a78:	ldr	r0, [r1, #56]	; 0x38
    7a7c:	sub	sp, sp, #424	; 0x1a8
    7a80:	ldr	r3, [r5]
    7a84:	cmp	r0, #0
    7a88:	str	r3, [sp, #420]	; 0x1a4
    7a8c:	blt	7aa8 <error@@Base+0x1900>
    7a90:	ldr	r2, [sp, #420]	; 0x1a4
    7a94:	ldr	r3, [r5]
    7a98:	cmp	r2, r3
    7a9c:	bne	7b50 <error@@Base+0x19a8>
    7aa0:	add	sp, sp, #424	; 0x1a8
    7aa4:	pop	{r4, r5, r6, pc}
    7aa8:	ldr	r3, [pc, #176]	; 7b60 <error@@Base+0x19b8>
    7aac:	add	r3, pc, r3
    7ab0:	ldr	r3, [r3]
    7ab4:	cmp	r3, #2
    7ab8:	moveq	r0, #1
    7abc:	streq	r0, [r1, #56]	; 0x38
    7ac0:	beq	7a90 <error@@Base+0x18e8>
    7ac4:	add	r6, sp, #28
    7ac8:	mov	r4, #0
    7acc:	mov	r0, r6
    7ad0:	str	r4, [sp, #24]
    7ad4:	bl	1a90 <uname@plt>
    7ad8:	cmp	r0, r4
    7adc:	movlt	r0, r4
    7ae0:	blt	7a90 <error@@Base+0x18e8>
    7ae4:	add	r3, sp, #24
    7ae8:	ldr	r1, [pc, #116]	; 7b64 <error@@Base+0x19bc>
    7aec:	str	r3, [sp, #4]
    7af0:	add	r3, sp, #20
    7af4:	str	r3, [sp]
    7af8:	add	r0, r6, #130	; 0x82
    7afc:	add	r3, sp, #16
    7b00:	add	r2, sp, #12
    7b04:	add	r1, pc, r1
    7b08:	bl	1cac <sscanf@plt>
    7b0c:	cmp	r0, #2
    7b10:	movle	r0, r4
    7b14:	ble	7b40 <error@@Base+0x1998>
    7b18:	add	r0, sp, #12
    7b1c:	ldm	r0, {r0, r3, r4}
    7b20:	orr	r3, r3, r0, lsl #8
    7b24:	ldr	r0, [sp, #24]
    7b28:	orr	r4, r4, r3, lsl #8
    7b2c:	ldr	r3, [pc, #52]	; 7b68 <error@@Base+0x19c0>
    7b30:	orr	r0, r0, r4, lsl #8
    7b34:	cmp	r0, r3
    7b38:	movls	r0, #0
    7b3c:	movhi	r0, #1
    7b40:	ldr	r3, [pc, #36]	; 7b6c <error@@Base+0x19c4>
    7b44:	add	r3, pc, r3
    7b48:	str	r0, [r3, #56]	; 0x38
    7b4c:	b	7a90 <error@@Base+0x18e8>
    7b50:	bl	1a9c <__stack_chk_fail@plt>
    7b54:	andeq	r5, r1, ip, lsr #8
    7b58:	andeq	r0, r0, r8, asr #2
    7b5c:	andeq	r5, r1, r8, lsr sl
    7b60:	muleq	r1, r4, sl
    7b64:	andeq	r3, r0, r8, ror r3
    7b68:	andeq	r1, r6, #16711680	; 0xff0000
    7b6c:	andeq	r5, r1, r4, ror #18
    7b70:	push	{r4, r5, r6, r7, lr}
    7b74:	subs	r7, r3, #0
    7b78:	sub	sp, sp, #12
    7b7c:	mov	r4, r0
    7b80:	mov	r5, r1
    7b84:	mov	r6, r2
    7b88:	beq	7b98 <error@@Base+0x19f0>
    7b8c:	bl	7a5c <error@@Base+0x18b4>
    7b90:	subs	r3, r0, #0
    7b94:	beq	7bf8 <error@@Base+0x1a50>
    7b98:	mov	r0, r4
    7b9c:	mov	r2, r6
    7ba0:	mov	r1, r5
    7ba4:	mov	r3, #0
    7ba8:	bl	1d24 <send@plt>
    7bac:	mov	r4, r0
    7bb0:	cmp	r4, #0
    7bb4:	blt	7bc4 <error@@Base+0x1a1c>
    7bb8:	mov	r0, r4
    7bbc:	add	sp, sp, #12
    7bc0:	pop	{r4, r5, r6, r7, pc}
    7bc4:	bl	1bbc <__errno_location@plt>
    7bc8:	ldr	r3, [r0]
    7bcc:	cmp	r3, #11
    7bd0:	cmpne	r3, #105	; 0x69
    7bd4:	moveq	r2, #1
    7bd8:	movne	r2, #0
    7bdc:	beq	7bb8 <error@@Base+0x1a10>
    7be0:	cmp	r3, #90	; 0x5a
    7be4:	moveq	r4, r2
    7be8:	beq	7bb8 <error@@Base+0x1a10>
    7bec:	ldr	r0, [pc, #40]	; 7c1c <error@@Base+0x1a74>
    7bf0:	add	r0, pc, r0
    7bf4:	bl	61a8 <error@@Base>
    7bf8:	mov	ip, #28
    7bfc:	mov	r0, r4
    7c00:	str	r7, [sp]
    7c04:	mov	r2, r6
    7c08:	mov	r1, r5
    7c0c:	str	ip, [sp, #4]
    7c10:	bl	1c70 <sendto@plt>
    7c14:	mov	r4, r0
    7c18:	b	7bb0 <error@@Base+0x1a08>
    7c1c:	muleq	r0, r8, r2
    7c20:	ldr	ip, [pc, #380]	; 7da4 <error@@Base+0x1bfc>
    7c24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7c28:	add	ip, pc, ip
    7c2c:	sub	sp, sp, #12
    7c30:	ldr	r6, [ip, #8]
    7c34:	str	r1, [sp, #4]
    7c38:	mov	r9, #0
    7c3c:	ldm	r6, {r1, lr}
    7c40:	ldr	r8, [ip, #16]
    7c44:	str	r9, [sp]
    7c48:	cmp	r1, #0
    7c4c:	mov	sl, r9
    7c50:	mov	fp, r9
    7c54:	beq	7ce0 <error@@Base+0x1b38>
    7c58:	cmp	lr, #0
    7c5c:	beq	7cd0 <error@@Base+0x1b28>
    7c60:	ldr	r7, [r6, #28]
    7c64:	orr	r7, r8, r7
    7c68:	tst	r7, r3
    7c6c:	bne	7cd0 <error@@Base+0x1b28>
    7c70:	cmp	r2, #0
    7c74:	beq	7c80 <error@@Base+0x1ad8>
    7c78:	tst	r7, r2
    7c7c:	beq	7cd0 <error@@Base+0x1b28>
    7c80:	ldrb	r1, [lr]
    7c84:	ldrb	r4, [r0]
    7c88:	cmp	r1, #0
    7c8c:	beq	7d64 <error@@Base+0x1bbc>
    7c90:	cmp	r1, r4
    7c94:	moveq	ip, r0
    7c98:	beq	7cac <error@@Base+0x1b04>
    7c9c:	b	7d64 <error@@Base+0x1bbc>
    7ca0:	cmp	r1, r4
    7ca4:	mov	ip, r5
    7ca8:	bne	7cc0 <error@@Base+0x1b18>
    7cac:	ldrb	r1, [lr, #1]!
    7cb0:	add	r5, ip, #1
    7cb4:	ldrb	r4, [ip, #1]
    7cb8:	cmp	r1, #0
    7cbc:	bne	7ca0 <error@@Base+0x1af8>
    7cc0:	cmp	r4, #0
    7cc4:	beq	7d24 <error@@Base+0x1b7c>
    7cc8:	cmp	r4, #61	; 0x3d
    7ccc:	beq	7d10 <error@@Base+0x1b68>
    7cd0:	add	r6, r6, #32
    7cd4:	ldm	r6, {r1, lr}
    7cd8:	cmp	r1, #0
    7cdc:	bne	7c58 <error@@Base+0x1ab0>
    7ce0:	cmp	lr, #0
    7ce4:	bne	7c60 <error@@Base+0x1ab8>
    7ce8:	cmp	sl, #0
    7cec:	beq	7d04 <error@@Base+0x1b5c>
    7cf0:	ldr	r3, [sp]
    7cf4:	ldr	r2, [sp, #4]
    7cf8:	cmp	r3, #0
    7cfc:	cmpne	r2, #0
    7d00:	strne	r3, [r2]
    7d04:	mov	r0, sl
    7d08:	add	sp, sp, #12
    7d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7d10:	ldr	ip, [r6, #8]
    7d14:	cmp	ip, #0
    7d18:	beq	7cd0 <error@@Base+0x1b28>
    7d1c:	tst	r7, #128	; 0x80
    7d20:	bne	7cd0 <error@@Base+0x1b28>
    7d24:	cmp	r1, #0
    7d28:	beq	7d6c <error@@Base+0x1bc4>
    7d2c:	tst	r7, #8192	; 0x2000
    7d30:	beq	7cd0 <error@@Base+0x1b28>
    7d34:	sub	r1, r5, r0
    7d38:	cmp	r1, #1
    7d3c:	ble	7cd0 <error@@Base+0x1b28>
    7d40:	cmp	r9, #0
    7d44:	movne	sl, fp
    7d48:	bne	7cd0 <error@@Base+0x1b28>
    7d4c:	cmp	r4, #61	; 0x3d
    7d50:	addeq	r1, r5, #1
    7d54:	streq	r1, [sp]
    7d58:	mov	sl, r6
    7d5c:	mov	r9, #1
    7d60:	b	7cd0 <error@@Base+0x1b28>
    7d64:	mov	r5, r0
    7d68:	b	7cc0 <error@@Base+0x1b18>
    7d6c:	ldr	r2, [sp, #4]
    7d70:	adds	r3, r2, #0
    7d74:	movne	r3, #1
    7d78:	cmp	r4, #61	; 0x3d
    7d7c:	movne	r3, #0
    7d80:	cmp	r3, #0
    7d84:	moveq	sl, r6
    7d88:	beq	7d04 <error@@Base+0x1b5c>
    7d8c:	add	r5, r5, #1
    7d90:	mov	sl, r6
    7d94:	mov	r0, sl
    7d98:	str	r5, [r2]
    7d9c:	add	sp, sp, #12
    7da0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7da4:	andeq	r6, r1, ip, lsr #20
    7da8:	ldr	r3, [pc, #368]	; 7f20 <error@@Base+0x1d78>
    7dac:	ldr	ip, [pc, #368]	; 7f24 <error@@Base+0x1d7c>
    7db0:	add	r3, pc, r3
    7db4:	push	{r4, r5, r6, r7, r8, r9, lr}
    7db8:	cmp	r2, #43	; 0x2b
    7dbc:	ldr	r8, [r3, ip]
    7dc0:	ldreq	r4, [r0, #24]
    7dc4:	ldrne	r4, [r0, #16]
    7dc8:	sub	sp, sp, #92	; 0x5c
    7dcc:	ldr	r3, [r8]
    7dd0:	cmp	r4, #0
    7dd4:	mov	r5, r0
    7dd8:	mov	r9, r1
    7ddc:	str	r3, [sp, #84]	; 0x54
    7de0:	beq	7f14 <error@@Base+0x1d6c>
    7de4:	cmp	r1, #0
    7de8:	beq	7ee8 <error@@Base+0x1d40>
    7dec:	ldr	r2, [pc, #308]	; 7f28 <error@@Base+0x1d80>
    7df0:	ldr	r3, [r0, #28]
    7df4:	add	r2, pc, r2
    7df8:	ldr	r2, [r2, #16]
    7dfc:	orr	r3, r3, r2
    7e00:	tst	r3, #16384	; 0x4000
    7e04:	beq	7ee8 <error@@Base+0x1d40>
    7e08:	ldrb	r3, [r1]
    7e0c:	add	r6, sp, #4
    7e10:	mov	r7, #0
    7e14:	cmp	r3, #0
    7e18:	beq	7ee0 <error@@Base+0x1d38>
    7e1c:	cmp	r3, #32
    7e20:	cmpne	r3, #9
    7e24:	movne	r2, #1
    7e28:	moveq	r2, #0
    7e2c:	cmp	r3, #44	; 0x2c
    7e30:	moveq	r2, #0
    7e34:	andne	r2, r2, #1
    7e38:	cmp	r2, #0
    7e3c:	moveq	r0, r6
    7e40:	beq	7e94 <error@@Base+0x1cec>
    7e44:	strb	r3, [sp, #4]
    7e48:	add	r2, r9, #1
    7e4c:	add	ip, r9, #80	; 0x50
    7e50:	add	r0, sp, #5
    7e54:	b	7e64 <error@@Base+0x1cbc>
    7e58:	cmp	ip, r2
    7e5c:	strb	r3, [r0], #1
    7e60:	beq	7f0c <error@@Base+0x1d64>
    7e64:	ldrb	r3, [r2]
    7e68:	mov	r9, r2
    7e6c:	add	r2, r2, #1
    7e70:	cmp	r3, #44	; 0x2c
    7e74:	cmpne	r3, #9
    7e78:	movne	r1, #1
    7e7c:	moveq	r1, #0
    7e80:	tst	r3, #223	; 0xdf
    7e84:	moveq	r1, #0
    7e88:	andne	r1, r1, #1
    7e8c:	cmp	r1, #0
    7e90:	bne	7e58 <error@@Base+0x1cb0>
    7e94:	strb	r7, [r0]
    7e98:	mov	r1, r6
    7e9c:	mov	r0, r5
    7ea0:	blx	r4
    7ea4:	cmp	r0, #0
    7ea8:	blt	7f0c <error@@Base+0x1d64>
    7eac:	ldrb	r3, [r9]
    7eb0:	b	7eb8 <error@@Base+0x1d10>
    7eb4:	ldrb	r3, [r9, #1]!
    7eb8:	cmp	r3, #32
    7ebc:	cmpne	r3, #9
    7ec0:	moveq	r2, #1
    7ec4:	movne	r2, #0
    7ec8:	cmp	r3, #44	; 0x2c
    7ecc:	orreq	r2, r2, #1
    7ed0:	cmp	r2, #0
    7ed4:	bne	7eb4 <error@@Base+0x1d0c>
    7ed8:	cmp	r3, #0
    7edc:	bne	7e1c <error@@Base+0x1c74>
    7ee0:	mov	r0, r3
    7ee4:	b	7ef4 <error@@Base+0x1d4c>
    7ee8:	mov	r1, r9
    7eec:	mov	r0, r5
    7ef0:	blx	r4
    7ef4:	ldr	r2, [sp, #84]	; 0x54
    7ef8:	ldr	r3, [r8]
    7efc:	cmp	r2, r3
    7f00:	bne	7f1c <error@@Base+0x1d74>
    7f04:	add	sp, sp, #92	; 0x5c
    7f08:	pop	{r4, r5, r6, r7, r8, r9, pc}
    7f0c:	mvn	r0, #0
    7f10:	b	7ef4 <error@@Base+0x1d4c>
    7f14:	mov	r0, r4
    7f18:	b	7ef4 <error@@Base+0x1d4c>
    7f1c:	bl	1a9c <__stack_chk_fail@plt>
    7f20:	andeq	r5, r1, r0, ror #1
    7f24:	andeq	r0, r0, r8, asr #2
    7f28:	andeq	r6, r1, r0, ror #16
    7f2c:	push	{r0, r1, r2, r3}
    7f30:	ldr	r0, [pc, #124]	; 7fb4 <error@@Base+0x1e0c>
    7f34:	ldr	r1, [pc, #124]	; 7fb8 <error@@Base+0x1e10>
    7f38:	add	r0, pc, r0
    7f3c:	ldr	r3, [pc, #120]	; 7fbc <error@@Base+0x1e14>
    7f40:	push	{r4, r5, lr}
    7f44:	add	r3, pc, r3
    7f48:	ldr	r4, [r0, r1]
    7f4c:	ldr	r1, [r3, #16]
    7f50:	sub	sp, sp, #12
    7f54:	ldr	r3, [r4]
    7f58:	tst	r1, #1048576	; 0x100000
    7f5c:	ldr	r2, [sp, #24]
    7f60:	str	r3, [sp, #4]
    7f64:	bne	7f90 <error@@Base+0x1de8>
    7f68:	ldr	r1, [pc, #80]	; 7fc0 <error@@Base+0x1e18>
    7f6c:	add	r3, sp, #28
    7f70:	str	r3, [sp]
    7f74:	ldr	r5, [r0, r1]
    7f78:	mov	r1, #1
    7f7c:	ldr	r0, [r5]
    7f80:	bl	1b38 <__vfprintf_chk@plt>
    7f84:	ldr	r1, [r5]
    7f88:	mov	r0, #10
    7f8c:	bl	1ca0 <fputc@plt>
    7f90:	ldr	r2, [sp, #4]
    7f94:	ldr	r3, [r4]
    7f98:	cmp	r2, r3
    7f9c:	bne	7fb0 <error@@Base+0x1e08>
    7fa0:	add	sp, sp, #12
    7fa4:	pop	{r4, r5, lr}
    7fa8:	add	sp, sp, #16
    7fac:	bx	lr
    7fb0:	bl	1a9c <__stack_chk_fail@plt>
    7fb4:	andeq	r4, r1, r8, asr pc
    7fb8:	andeq	r0, r0, r8, asr #2
    7fbc:	andeq	r6, r1, r0, lsl r7
    7fc0:	andeq	r0, r0, ip, asr #2
    7fc4:	push	{r4, r5, r6, lr}
    7fc8:	mov	r5, r0
    7fcc:	ldrb	r4, [r0]
    7fd0:	sub	sp, sp, #8
    7fd4:	mov	r6, r2
    7fd8:	cmp	r4, #43	; 0x2b
    7fdc:	beq	8028 <error@@Base+0x1e80>
    7fe0:	cmp	r1, #0
    7fe4:	bne	8064 <error@@Base+0x1ebc>
    7fe8:	mov	r1, #61	; 0x3d
    7fec:	bl	1b98 <strchr@plt>
    7ff0:	ldr	r1, [pc, #156]	; 8094 <error@@Base+0x1eec>
    7ff4:	cmp	r4, #45	; 0x2d
    7ff8:	add	r1, pc, r1
    7ffc:	beq	8088 <error@@Base+0x1ee0>
    8000:	cmp	r0, #0
    8004:	beq	8048 <error@@Base+0x1ea0>
    8008:	add	r3, r0, #1
    800c:	ldr	r0, [pc, #132]	; 8098 <error@@Base+0x1ef0>
    8010:	str	r6, [sp]
    8014:	mov	r2, r5
    8018:	add	r0, pc, r0
    801c:	bl	7f2c <error@@Base+0x1d84>
    8020:	add	sp, sp, #8
    8024:	pop	{r4, r5, r6, pc}
    8028:	cmp	r1, #0
    802c:	bne	8068 <error@@Base+0x1ec0>
    8030:	mov	r1, #61	; 0x3d
    8034:	bl	1b98 <strchr@plt>
    8038:	ldr	r1, [pc, #92]	; 809c <error@@Base+0x1ef4>
    803c:	add	r1, pc, r1
    8040:	cmp	r0, #0
    8044:	bne	8008 <error@@Base+0x1e60>
    8048:	ldr	r0, [pc, #80]	; 80a0 <error@@Base+0x1ef8>
    804c:	mov	r3, r6
    8050:	mov	r2, r5
    8054:	add	r0, pc, r0
    8058:	add	sp, sp, #8
    805c:	pop	{r4, r5, r6, lr}
    8060:	b	7f2c <error@@Base+0x1d84>
    8064:	mov	r4, #45	; 0x2d
    8068:	ldr	r0, [pc, #52]	; 80a4 <error@@Base+0x1efc>
    806c:	mov	r2, r1
    8070:	mov	r3, r6
    8074:	mov	r1, r4
    8078:	add	r0, pc, r0
    807c:	add	sp, sp, #8
    8080:	pop	{r4, r5, r6, lr}
    8084:	b	7f2c <error@@Base+0x1d84>
    8088:	ldr	r1, [pc, #24]	; 80a8 <error@@Base+0x1f00>
    808c:	add	r1, pc, r1
    8090:	b	8000 <error@@Base+0x1e58>
    8094:	andeq	r3, r0, ip, asr #21
    8098:	ldrdeq	r3, [r0], -r0
    809c:	andeq	r3, r0, r0, lsl #21
    80a0:			; <UNDEFINED> instruction: 0x00003abc
    80a4:	andeq	r3, r0, r4, asr sl
    80a8:	andeq	r3, r0, r0, lsr sl
    80ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    80b0:	sub	sp, sp, #1168	; 0x490
    80b4:	ldr	sl, [pc, #580]	; 8300 <error@@Base+0x2158>
    80b8:	ldr	ip, [pc, #580]	; 8304 <error@@Base+0x215c>
    80bc:	add	sl, pc, sl
    80c0:	sub	sp, sp, #4
    80c4:	ldr	ip, [sl, ip]
    80c8:	mov	r5, r2
    80cc:	cmp	r1, #126	; 0x7e
    80d0:	ldr	r2, [ip]
    80d4:	ldr	lr, [pc, #556]	; 8308 <error@@Base+0x2160>
    80d8:	str	r2, [sp, #1164]	; 0x48c
    80dc:	movhi	r2, #126	; 0x7e
    80e0:	movhi	r1, r2
    80e4:	mov	r9, r0
    80e8:	movls	r2, r1
    80ec:	addls	r6, r1, #1
    80f0:	str	ip, [sp, #4]
    80f4:	movhi	r6, #127	; 0x7f
    80f8:	mov	ip, #10
    80fc:	cmp	r5, lr
    8100:	sub	r9, r1, r9
    8104:	mov	r4, r3
    8108:	add	r0, sp, #13
    810c:	mov	r3, #127	; 0x7f
    8110:	mov	r1, #32
    8114:	movcs	r5, lr
    8118:	ldr	r7, [sp, #1208]	; 0x4b8
    811c:	strb	ip, [sp, #12]
    8120:	bl	1a78 <__memset_chk@plt>
    8124:	add	r3, sp, #1168	; 0x490
    8128:	add	r6, r3, r6
    812c:	mov	fp, #0
    8130:	cmp	r9, #0
    8134:	add	r8, sp, #12
    8138:	strb	fp, [r6, #-1156]	; 0xfffffb7c
    813c:	ble	82e0 <error@@Base+0x2138>
    8140:	add	r6, sp, #140	; 0x8c
    8144:	mov	r2, r9
    8148:	mov	r3, #1024	; 0x400
    814c:	mov	r1, #32
    8150:	mov	r0, r6
    8154:	bl	1a78 <__memset_chk@plt>
    8158:	ldr	r3, [pc, #428]	; 830c <error@@Base+0x2164>
    815c:	add	r2, sp, #1168	; 0x490
    8160:	add	r9, r2, r9
    8164:	mov	r0, r6
    8168:	strb	fp, [r9, #-1028]	; 0xfffffbfc
    816c:	ldr	sl, [sl, r3]
    8170:	ldr	r1, [sl]
    8174:	bl	1cf4 <fputs@plt>
    8178:	ldrb	r2, [r4]
    817c:	add	fp, r6, r5
    8180:	cmp	r2, #0
    8184:	movne	r9, r6
    8188:	bne	81d8 <error@@Base+0x2030>
    818c:	b	82a4 <error@@Base+0x20fc>
    8190:	adds	r3, r7, #0
    8194:	movne	r3, #1
    8198:	cmp	r2, #37	; 0x25
    819c:	movne	r3, #0
    81a0:	cmp	r3, #0
    81a4:	beq	81c8 <error@@Base+0x2020>
    81a8:	ldrb	r3, [r4, #1]
    81ac:	cmp	r3, #37	; 0x25
    81b0:	strbeq	r3, [r9]
    81b4:	addeq	r4, r4, #2
    81b8:	addeq	r9, r9, #1
    81bc:	beq	81d4 <error@@Base+0x202c>
    81c0:	cmp	r3, #115	; 0x73
    81c4:	beq	82b4 <error@@Base+0x210c>
    81c8:	strb	r2, [r9]
    81cc:	add	r4, r4, #1
    81d0:	add	r9, r9, #1
    81d4:	ldrb	r2, [r4]
    81d8:	cmp	r2, #0
    81dc:	cmpne	r9, fp
    81e0:	movcc	r3, #1
    81e4:	movcs	r3, #0
    81e8:	bcc	8190 <error@@Base+0x1fe8>
    81ec:	cmp	r9, fp
    81f0:	strb	r3, [r9]
    81f4:	bcc	82a4 <error@@Base+0x20fc>
    81f8:	cmp	r9, r6
    81fc:	bhi	8220 <error@@Base+0x2078>
    8200:	b	822c <error@@Base+0x2084>
    8204:	ldrb	r3, [r9, #-1]
    8208:	cmp	r3, #32
    820c:	cmpne	r3, #9
    8210:	movne	r3, #1
    8214:	moveq	r3, #0
    8218:	beq	824c <error@@Base+0x20a4>
    821c:	mov	r9, r5
    8220:	sub	r5, r9, #1
    8224:	cmp	r5, r6
    8228:	bne	8204 <error@@Base+0x205c>
    822c:	ldr	r3, [sp, #4]
    8230:	ldr	r2, [sp, #1164]	; 0x48c
    8234:	ldr	r3, [r3]
    8238:	cmp	r2, r3
    823c:	bne	82fc <error@@Base+0x2154>
    8240:	add	sp, sp, #1168	; 0x490
    8244:	add	sp, sp, #4
    8248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    824c:	strb	r3, [r5]
    8250:	mov	r0, r6
    8254:	ldr	r1, [sl]
    8258:	bl	1cf4 <fputs@plt>
    825c:	ldr	r1, [sl]
    8260:	mov	r0, r8
    8264:	bl	1cf4 <fputs@plt>
    8268:	ldrb	r3, [r5, #1]
    826c:	cmp	r3, #0
    8270:	moveq	r9, r6
    8274:	beq	8290 <error@@Base+0x20e8>
    8278:	mov	r2, r9
    827c:	mov	r9, r6
    8280:	strb	r3, [r9], #1
    8284:	ldrb	r3, [r2, #1]!
    8288:	cmp	r3, #0
    828c:	bne	8280 <error@@Base+0x20d8>
    8290:	mov	r3, #0
    8294:	strb	r3, [r9]
    8298:	ldrb	r2, [r4]
    829c:	cmp	r2, #0
    82a0:	bne	81d8 <error@@Base+0x2030>
    82a4:	ldr	r1, [sl]
    82a8:	mov	r0, r6
    82ac:	bl	1cf4 <fputs@plt>
    82b0:	b	822c <error@@Base+0x2084>
    82b4:	ldrb	r3, [r7]
    82b8:	cmp	r3, #0
    82bc:	beq	82d8 <error@@Base+0x2130>
    82c0:	mov	r2, r7
    82c4:	strb	r3, [r9], #1
    82c8:	ldrb	r3, [r2, #1]!
    82cc:	cmp	r3, #0
    82d0:	cmpne	fp, r9
    82d4:	bhi	82c4 <error@@Base+0x211c>
    82d8:	add	r4, r4, #2
    82dc:	b	81d4 <error@@Base+0x202c>
    82e0:	ldr	r3, [pc, #36]	; 830c <error@@Base+0x2164>
    82e4:	mov	r0, r8
    82e8:	add	r6, sp, #140	; 0x8c
    82ec:	ldr	sl, [sl, r3]
    82f0:	ldr	r1, [sl]
    82f4:	bl	1cf4 <fputs@plt>
    82f8:	b	8178 <error@@Base+0x1fd0>
    82fc:	bl	1a9c <__stack_chk_fail@plt>
    8300:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
    8304:	andeq	r0, r0, r8, asr #2
    8308:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    830c:	andeq	r0, r0, ip, asr #2
    8310:	ldr	r3, [pc, #116]	; 838c <error@@Base+0x21e4>
    8314:	ldr	r2, [pc, #116]	; 8390 <error@@Base+0x21e8>
    8318:	add	r3, pc, r3
    831c:	push	{r4, r5, r6, lr}
    8320:	sub	sp, sp, #8
    8324:	ldr	r4, [r3, r2]
    8328:	subs	r6, r0, #0
    832c:	ldr	r3, [r4]
    8330:	str	r3, [sp, #4]
    8334:	beq	8380 <error@@Base+0x21d8>
    8338:	mov	r5, r1
    833c:	mov	r2, #0
    8340:	mov	r1, sp
    8344:	mov	r0, r5
    8348:	bl	1a00 <strtol@plt>
    834c:	ldr	r3, [sp]
    8350:	cmp	r5, r3
    8354:	str	r0, [r6]
    8358:	beq	8380 <error@@Base+0x21d8>
    835c:	ldrb	r0, [r3]
    8360:	adds	r0, r0, #0
    8364:	mvnne	r0, #0
    8368:	ldr	r2, [sp, #4]
    836c:	ldr	r3, [r4]
    8370:	cmp	r2, r3
    8374:	bne	8388 <error@@Base+0x21e0>
    8378:	add	sp, sp, #8
    837c:	pop	{r4, r5, r6, pc}
    8380:	mvn	r0, #0
    8384:	b	8368 <error@@Base+0x21c0>
    8388:	bl	1a9c <__stack_chk_fail@plt>
    838c:	andeq	r4, r1, r8, ror fp
    8390:	andeq	r0, r0, r8, asr #2
    8394:	ldr	r3, [pc, #116]	; 8410 <error@@Base+0x2268>
    8398:	ldr	r2, [pc, #116]	; 8414 <error@@Base+0x226c>
    839c:	add	r3, pc, r3
    83a0:	push	{r4, r5, r6, lr}
    83a4:	sub	sp, sp, #8
    83a8:	ldr	r4, [r3, r2]
    83ac:	subs	r6, r0, #0
    83b0:	ldr	r3, [r4]
    83b4:	str	r3, [sp, #4]
    83b8:	beq	8404 <error@@Base+0x225c>
    83bc:	mov	r5, r1
    83c0:	mov	r2, #0
    83c4:	mov	r1, sp
    83c8:	mov	r0, r5
    83cc:	bl	1b80 <strtoul@plt>
    83d0:	ldr	r3, [sp]
    83d4:	cmp	r5, r3
    83d8:	str	r0, [r6]
    83dc:	beq	8404 <error@@Base+0x225c>
    83e0:	ldrb	r0, [r3]
    83e4:	adds	r0, r0, #0
    83e8:	mvnne	r0, #0
    83ec:	ldr	r2, [sp, #4]
    83f0:	ldr	r3, [r4]
    83f4:	cmp	r2, r3
    83f8:	bne	840c <error@@Base+0x2264>
    83fc:	add	sp, sp, #8
    8400:	pop	{r4, r5, r6, pc}
    8404:	mvn	r0, #0
    8408:	b	83ec <error@@Base+0x2244>
    840c:	bl	1a9c <__stack_chk_fail@plt>
    8410:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
    8414:	andeq	r0, r0, r8, asr #2
    8418:	ldr	r3, [pc, #112]	; 8490 <error@@Base+0x22e8>
    841c:	ldr	r2, [pc, #112]	; 8494 <error@@Base+0x22ec>
    8420:	add	r3, pc, r3
    8424:	push	{r4, r5, r6, lr}
    8428:	sub	sp, sp, #8
    842c:	ldr	r4, [r3, r2]
    8430:	subs	r6, r0, #0
    8434:	ldr	r3, [r4]
    8438:	str	r3, [sp, #4]
    843c:	beq	8484 <error@@Base+0x22dc>
    8440:	mov	r5, r1
    8444:	mov	r0, r5
    8448:	mov	r1, sp
    844c:	bl	1c28 <strtod@plt>
    8450:	ldr	r3, [sp]
    8454:	cmp	r5, r3
    8458:	vstr	d0, [r6]
    845c:	beq	8484 <error@@Base+0x22dc>
    8460:	ldrb	r0, [r3]
    8464:	adds	r0, r0, #0
    8468:	mvnne	r0, #0
    846c:	ldr	r2, [sp, #4]
    8470:	ldr	r3, [r4]
    8474:	cmp	r2, r3
    8478:	bne	848c <error@@Base+0x22e4>
    847c:	add	sp, sp, #8
    8480:	pop	{r4, r5, r6, pc}
    8484:	mvn	r0, #0
    8488:	b	846c <error@@Base+0x22c4>
    848c:	bl	1a9c <__stack_chk_fail@plt>
    8490:	andeq	r4, r1, r0, ror sl
    8494:	andeq	r0, r0, r8, asr #2
    8498:	ldr	r3, [pc, #264]	; 85a8 <error@@Base+0x2400>
    849c:	ldr	r1, [r0, #24]
    84a0:	add	r3, pc, r3
    84a4:	ldr	ip, [r0, #28]
    84a8:	ldr	r2, [r3, #16]
    84ac:	cmp	r1, #0
    84b0:	push	{lr}		; (str lr, [sp, #-4]!)
    84b4:	orr	ip, ip, r2
    84b8:	beq	8598 <error@@Base+0x23f0>
    84bc:	ldr	r2, [r0, #16]
    84c0:	cmp	r2, #0
    84c4:	moveq	r2, #43	; 0x2b
    84c8:	strbeq	r2, [r3, #20]
    84cc:	ldrne	r1, [pc, #216]	; 85ac <error@@Base+0x2404>
    84d0:	addeq	r2, r3, #21
    84d4:	addne	r2, r3, #23
    84d8:	strne	r1, [r3, #20]
    84dc:	ldr	r1, [r0]
    84e0:	add	r3, r2, #1
    84e4:	ldrb	r1, [r1]
    84e8:	strb	r1, [r2]
    84ec:	ldr	r1, [r0, #8]
    84f0:	cmp	r1, #0
    84f4:	beq	8564 <error@@Base+0x23bc>
    84f8:	tst	ip, #32
    84fc:	moveq	r1, #32
    8500:	addeq	r3, r2, #2
    8504:	strbeq	r1, [r2, #1]
    8508:	ands	lr, ip, #4096	; 0x1000
    850c:	movne	r2, #91	; 0x5b
    8510:	strbne	r2, [r3]
    8514:	ldr	r1, [r0, #8]
    8518:	ldr	r0, [pc, #144]	; 85b0 <error@@Base+0x2408>
    851c:	addne	r3, r3, #1
    8520:	ldrb	r2, [r1]
    8524:	add	r0, pc, r0
    8528:	add	r0, r0, #94	; 0x5e
    852c:	cmp	r2, #0
    8530:	cmpne	r3, r0
    8534:	bcs	854c <error@@Base+0x23a4>
    8538:	strb	r2, [r3], #1
    853c:	ldrb	r2, [r1, #1]!
    8540:	cmp	r2, #0
    8544:	cmpne	r3, r0
    8548:	bcc	8538 <error@@Base+0x2390>
    854c:	tst	ip, #16384	; 0x4000
    8550:	bne	857c <error@@Base+0x23d4>
    8554:	cmp	lr, #0
    8558:	movne	r2, #93	; 0x5d
    855c:	strbne	r2, [r3]
    8560:	addne	r3, r3, #1
    8564:	ldr	r0, [pc, #72]	; 85b4 <error@@Base+0x240c>
    8568:	mov	r2, #0
    856c:	add	r0, pc, r0
    8570:	add	r0, r0, #20
    8574:	strb	r2, [r3]
    8578:	pop	{pc}		; (ldr pc, [sp], #4)
    857c:	ldr	r2, [pc, #52]	; 85b8 <error@@Base+0x2410>
    8580:	add	r2, pc, r2
    8584:	ldrb	r1, [r2, #4]
    8588:	ldr	r0, [r2]
    858c:	str	r0, [r3]
    8590:	strb	r1, [r3, #4]!
    8594:	b	8554 <error@@Base+0x23ac>
    8598:	mov	r1, #45	; 0x2d
    859c:	add	r2, r3, #21
    85a0:	strb	r1, [r3, #20]
    85a4:	b	84dc <error@@Base+0x2334>
    85a8:			; <UNDEFINED> instruction: 0x000161b4
    85ac:	eoreq	r2, sp, fp, lsr #30
    85b0:	andeq	r6, r1, r0, lsr r1
    85b4:	andeq	r6, r1, r8, ror #1
    85b8:	andeq	r3, r0, r8, lsr #11
    85bc:	ldr	r2, [pc, #452]	; 8788 <error@@Base+0x25e0>
    85c0:	ldr	ip, [r0, #28]
    85c4:	add	r2, pc, r2
    85c8:	push	{r4, lr}
    85cc:	mov	lr, r0
    85d0:	ldr	r3, [r2, #16]
    85d4:	orr	ip, ip, r3
    85d8:	tst	ip, #512	; 0x200
    85dc:	addne	r3, r2, #100	; 0x64
    85e0:	bne	861c <error@@Base+0x2474>
    85e4:	tst	ip, #2048	; 0x800
    85e8:	ldr	r3, [r0, #24]
    85ec:	bne	8700 <error@@Base+0x2558>
    85f0:	cmp	r3, #0
    85f4:	beq	8764 <error@@Base+0x25bc>
    85f8:	ldr	r3, [r0, #16]
    85fc:	cmp	r3, #0
    8600:	beq	8748 <error@@Base+0x25a0>
    8604:	ldr	r1, [pc, #384]	; 878c <error@@Base+0x25e4>
    8608:	add	r3, r2, #105	; 0x69
    860c:	add	r1, pc, r1
    8610:	ldm	r1, {r0, r1}
    8614:	str	r0, [r2, #100]	; 0x64
    8618:	strh	r1, [r2, #104]	; 0x68
    861c:	ldr	r1, [lr, #4]
    8620:	ldrb	r2, [r1]
    8624:	cmp	r2, #0
    8628:	beq	864c <error@@Base+0x24a4>
    862c:	ldr	r0, [pc, #348]	; 8790 <error@@Base+0x25e8>
    8630:	add	r0, pc, r0
    8634:	add	r0, r0, #177	; 0xb1
    8638:	strb	r2, [r3], #1
    863c:	ldrb	r2, [r1, #1]!
    8640:	cmp	r2, #0
    8644:	cmpne	r3, r0
    8648:	bcc	8638 <error@@Base+0x2490>
    864c:	ldr	r2, [lr, #8]
    8650:	cmp	r2, #0
    8654:	beq	875c <error@@Base+0x25b4>
    8658:	tst	ip, #128	; 0x80
    865c:	bne	86e0 <error@@Base+0x2538>
    8660:	ands	r4, ip, #4096	; 0x1000
    8664:	movne	r2, #91	; 0x5b
    8668:	strbne	r2, [r3]
    866c:	addne	r3, r3, #1
    8670:	add	r2, r3, #1
    8674:	mov	r1, #61	; 0x3d
    8678:	strb	r1, [r3]
    867c:	ldr	r1, [lr, #8]
    8680:	ldr	r0, [pc, #268]	; 8794 <error@@Base+0x25ec>
    8684:	ldrb	r3, [r1]
    8688:	add	r0, pc, r0
    868c:	add	r0, r0, #174	; 0xae
    8690:	cmp	r3, #0
    8694:	cmpne	r2, r0
    8698:	bcs	86b0 <error@@Base+0x2508>
    869c:	strb	r3, [r2], #1
    86a0:	ldrb	r3, [r1, #1]!
    86a4:	cmp	r3, #0
    86a8:	cmpne	r2, r0
    86ac:	bcc	869c <error@@Base+0x24f4>
    86b0:	tst	ip, #16384	; 0x4000
    86b4:	bne	872c <error@@Base+0x2584>
    86b8:	cmp	r4, #0
    86bc:	movne	r3, #93	; 0x5d
    86c0:	strbne	r3, [r2]
    86c4:	addne	r2, r2, #1
    86c8:	ldr	r0, [pc, #200]	; 8798 <error@@Base+0x25f0>
    86cc:	mov	r3, #0
    86d0:	add	r0, pc, r0
    86d4:	add	r0, r0, #100	; 0x64
    86d8:	strb	r3, [r2]
    86dc:	pop	{r4, pc}
    86e0:	mov	r2, #32
    86e4:	ands	r4, ip, #4096	; 0x1000
    86e8:	strb	r2, [r3]
    86ec:	movne	r2, #91	; 0x5b
    86f0:	strbne	r2, [r3, #1]
    86f4:	addeq	r2, r3, #1
    86f8:	addne	r2, r3, #2
    86fc:	b	867c <error@@Base+0x24d4>
    8700:	cmp	r3, #0
    8704:	beq	8778 <error@@Base+0x25d0>
    8708:	ldr	r3, [r0, #16]
    870c:	cmp	r3, #0
    8710:	moveq	r3, #43	; 0x2b
    8714:	ldrne	r1, [pc, #128]	; 879c <error@@Base+0x25f4>
    8718:	strbeq	r3, [r2, #100]	; 0x64
    871c:	addne	r3, r2, #103	; 0x67
    8720:	addeq	r3, r2, #101	; 0x65
    8724:	strne	r1, [r2, #100]	; 0x64
    8728:	b	861c <error@@Base+0x2474>
    872c:	ldr	r3, [pc, #108]	; 87a0 <error@@Base+0x25f8>
    8730:	add	r3, pc, r3
    8734:	ldrb	r1, [r3, #4]
    8738:	ldr	r0, [r3]
    873c:	str	r0, [r2]
    8740:	strb	r1, [r2, #4]!
    8744:	b	86b8 <error@@Base+0x2510>
    8748:	mov	r3, #43	; 0x2b
    874c:	strb	r3, [r2, #100]	; 0x64
    8750:	strb	r3, [r2, #101]	; 0x65
    8754:	add	r3, r2, #102	; 0x66
    8758:	b	861c <error@@Base+0x2474>
    875c:	mov	r2, r3
    8760:	b	86c8 <error@@Base+0x2520>
    8764:	mov	r3, #45	; 0x2d
    8768:	strb	r3, [r2, #100]	; 0x64
    876c:	strb	r3, [r2, #101]	; 0x65
    8770:	add	r3, r2, #102	; 0x66
    8774:	b	861c <error@@Base+0x2474>
    8778:	mov	r3, #45	; 0x2d
    877c:	strb	r3, [r2, #100]	; 0x64
    8780:	add	r3, r2, #101	; 0x65
    8784:	b	861c <error@@Base+0x2474>
    8788:	muleq	r1, r0, r0
    878c:	andeq	r3, r0, r4, lsr #10
    8790:	andeq	r6, r1, r4, lsr #32
    8794:	andeq	r5, r1, ip, asr #31
    8798:	andeq	r5, r1, r4, lsl #31
    879c:	eoreq	r2, sp, fp, lsr #30
    87a0:	strdeq	r3, [r0], -r8
    87a4:	ldr	r3, [pc, #256]	; 88ac <error@@Base+0x2704>
    87a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    87ac:	add	r3, pc, r3
    87b0:	subs	r8, r1, #0
    87b4:	mov	r2, #0
    87b8:	strb	r2, [r3, #180]	; 0xb4
    87bc:	strne	r2, [r8]
    87c0:	cmp	r0, #0
    87c4:	mov	r9, r0
    87c8:	beq	889c <error@@Base+0x26f4>
    87cc:	ldr	r4, [pc, #220]	; 88b0 <error@@Base+0x2708>
    87d0:	ldr	r6, [pc, #220]	; 88b4 <error@@Base+0x270c>
    87d4:	ldr	r5, [pc, #220]	; 88b8 <error@@Base+0x2710>
    87d8:	ldr	r3, [r9]
    87dc:	ldr	r7, [pc, #216]	; 88bc <error@@Base+0x2714>
    87e0:	add	r4, pc, r4
    87e4:	add	r6, pc, r6
    87e8:	add	r5, pc, r5
    87ec:	cmp	r3, #0
    87f0:	add	r4, r4, #180	; 0xb4
    87f4:	add	r6, r6, #432	; 0x1b0
    87f8:	add	r5, r5, #432	; 0x1b0
    87fc:	mov	sl, #0
    8800:	add	r7, pc, r7
    8804:	beq	8868 <error@@Base+0x26c0>
    8808:	ldr	r3, [r9, #28]
    880c:	tst	r3, #4
    8810:	beq	8858 <error@@Base+0x26b0>
    8814:	mov	r0, r9
    8818:	bl	8498 <error@@Base+0x22f0>
    881c:	mov	r2, r0
    8820:	cmp	sl, #0
    8824:	ldrne	r0, [r7]
    8828:	strne	r0, [r4], #3
    882c:	ldrb	r3, [r2]
    8830:	cmp	r3, #0
    8834:	cmpne	r4, r6
    8838:	bcs	8854 <error@@Base+0x26ac>
    883c:	mov	r0, r2
    8840:	strb	r3, [r4], #1
    8844:	ldrb	r3, [r0, #1]!
    8848:	cmp	r3, #0
    884c:	cmpne	r4, r5
    8850:	bcc	8840 <error@@Base+0x2698>
    8854:	add	sl, sl, #1
    8858:	add	r9, r9, #32
    885c:	ldr	r3, [r9]
    8860:	cmp	r3, #0
    8864:	bne	8808 <error@@Base+0x2660>
    8868:	ldr	r3, [r9, #4]
    886c:	cmp	r3, #0
    8870:	beq	8890 <error@@Base+0x26e8>
    8874:	ldr	r3, [r9, #28]
    8878:	tst	r3, #4
    887c:	beq	8858 <error@@Base+0x26b0>
    8880:	mov	r0, r9
    8884:	bl	85bc <error@@Base+0x2414>
    8888:	mov	r2, r0
    888c:	b	8820 <error@@Base+0x2678>
    8890:	cmp	r8, #0
    8894:	strb	r3, [r4]
    8898:	strne	sl, [r8]
    889c:	ldr	r0, [pc, #28]	; 88c0 <error@@Base+0x2718>
    88a0:	add	r0, pc, r0
    88a4:	add	r0, r0, #180	; 0xb4
    88a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    88ac:	andeq	r5, r1, r8, lsr #29
    88b0:	andeq	r5, r1, r4, ror lr
    88b4:	andeq	r5, r1, r0, ror lr
    88b8:	andeq	r5, r1, ip, ror #28
    88bc:	andeq	r3, r0, r8, lsr r3
    88c0:			; <UNDEFINED> instruction: 0x00015db4
    88c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    88c8:	mov	lr, r0
    88cc:	sub	sp, sp, #48	; 0x30
    88d0:	mov	r8, r1
    88d4:	mov	r6, r0
    88d8:	mov	r7, r2
    88dc:	ldr	r4, [pc, #188]	; 89a0 <error@@Base+0x27f8>
    88e0:	ldm	lr!, {r0, r1, r2, r3}
    88e4:	add	r5, sp, #12
    88e8:	ldr	r9, [pc, #180]	; 89a4 <error@@Base+0x27fc>
    88ec:	add	r4, pc, r4
    88f0:	mov	ip, r5
    88f4:	ldr	r4, [r4, r9]
    88f8:	stmia	ip!, {r0, r1, r2, r3}
    88fc:	ldr	r9, [pc, #164]	; 89a8 <error@@Base+0x2800>
    8900:	ldm	lr, {r0, r1, r2, r3}
    8904:	add	r9, pc, r9
    8908:	ldr	lr, [r4]
    890c:	stm	ip, {r0, r1, r2, r3}
    8910:	mov	r1, #0
    8914:	ldr	r0, [r9, #8]
    8918:	str	lr, [sp, #44]	; 0x2c
    891c:	bl	87a4 <error@@Base+0x25fc>
    8920:	mov	r3, #0
    8924:	cmp	r8, #0
    8928:	str	r3, [sp, #20]
    892c:	mov	sl, r0
    8930:	mov	r0, r5
    8934:	beq	8974 <error@@Base+0x27cc>
    8938:	bl	8498 <error@@Base+0x22f0>
    893c:	ldr	r1, [pc, #104]	; 89ac <error@@Base+0x2804>
    8940:	add	r1, pc, r1
    8944:	mov	r2, r0
    8948:	ldr	r0, [pc, #96]	; 89b0 <error@@Base+0x2808>
    894c:	mov	r3, r7
    8950:	str	sl, [sp]
    8954:	add	r0, pc, r0
    8958:	bl	7f2c <error@@Base+0x1d84>
    895c:	ldr	r2, [sp, #44]	; 0x2c
    8960:	ldr	r3, [r4]
    8964:	cmp	r2, r3
    8968:	bne	899c <error@@Base+0x27f4>
    896c:	add	sp, sp, #48	; 0x30
    8970:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8974:	bl	85bc <error@@Base+0x2414>
    8978:	ldr	r3, [r6, #28]
    897c:	ldr	r2, [r9, #16]
    8980:	ldr	r1, [pc, #44]	; 89b4 <error@@Base+0x280c>
    8984:	orr	r3, r3, r2
    8988:	tst	r3, #512	; 0x200
    898c:	add	r1, pc, r1
    8990:	ldrne	r1, [pc, #32]	; 89b8 <error@@Base+0x2810>
    8994:	addne	r1, pc, r1
    8998:	b	8944 <error@@Base+0x279c>
    899c:	bl	1a9c <__stack_chk_fail@plt>
    89a0:	andeq	r4, r1, r4, lsr #11
    89a4:	andeq	r0, r0, r8, asr #2
    89a8:	andeq	r5, r1, r0, asr sp
    89ac:	strdeq	r3, [r0], -ip
    89b0:	strdeq	r3, [r0], -r8
    89b4:			; <UNDEFINED> instruction: 0x000031b0
    89b8:			; <UNDEFINED> instruction: 0x000031b0
    89bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    89c0:	mov	lr, r0
    89c4:	ldr	r4, [pc, #240]	; 8abc <error@@Base+0x2914>
    89c8:	sub	sp, sp, #48	; 0x30
    89cc:	mov	sl, r1
    89d0:	mov	r6, r0
    89d4:	mov	r8, r2
    89d8:	mov	r7, r3
    89dc:	ldr	r5, [pc, #220]	; 8ac0 <error@@Base+0x2918>
    89e0:	ldm	lr!, {r0, r1, r2, r3}
    89e4:	add	r4, pc, r4
    89e8:	add	r9, sp, #12
    89ec:	mov	ip, r9
    89f0:	ldr	r5, [r4, r5]
    89f4:	stmia	ip!, {r0, r1, r2, r3}
    89f8:	cmp	sl, #0
    89fc:	ldm	lr, {r0, r1, r2, r3}
    8a00:	mov	sl, #0
    8a04:	ldr	lr, [r5]
    8a08:	str	sl, [sp, #20]
    8a0c:	stm	ip, {r0, r1, r2, r3}
    8a10:	mov	r0, r9
    8a14:	str	lr, [sp, #44]	; 0x2c
    8a18:	beq	8a64 <error@@Base+0x28bc>
    8a1c:	bl	8498 <error@@Base+0x22f0>
    8a20:	ldr	r2, [pc, #156]	; 8ac4 <error@@Base+0x291c>
    8a24:	add	r2, pc, r2
    8a28:	ldr	r3, [r6, #8]
    8a2c:	cmp	r3, #0
    8a30:	beq	8aa0 <error@@Base+0x28f8>
    8a34:	mov	r1, r0
    8a38:	ldr	r0, [pc, #136]	; 8ac8 <error@@Base+0x2920>
    8a3c:	str	r7, [sp]
    8a40:	mov	r3, r8
    8a44:	add	r0, pc, r0
    8a48:	bl	7f2c <error@@Base+0x1d84>
    8a4c:	ldr	r2, [sp, #44]	; 0x2c
    8a50:	ldr	r3, [r5]
    8a54:	cmp	r2, r3
    8a58:	bne	8ab8 <error@@Base+0x2910>
    8a5c:	add	sp, sp, #48	; 0x30
    8a60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8a64:	bl	85bc <error@@Base+0x2414>
    8a68:	ldr	r2, [pc, #92]	; 8acc <error@@Base+0x2924>
    8a6c:	ldr	r3, [r6, #28]
    8a70:	add	r2, pc, r2
    8a74:	ldr	r2, [r2, #16]
    8a78:	orr	r3, r3, r2
    8a7c:	ldr	r2, [pc, #76]	; 8ad0 <error@@Base+0x2928>
    8a80:	tst	r3, #512	; 0x200
    8a84:	add	r2, pc, r2
    8a88:	beq	8a28 <error@@Base+0x2880>
    8a8c:	ldr	r3, [r6, #8]
    8a90:	ldr	r2, [pc, #60]	; 8ad4 <error@@Base+0x292c>
    8a94:	cmp	r3, #0
    8a98:	add	r2, pc, r2
    8a9c:	bne	8a34 <error@@Base+0x288c>
    8aa0:	mov	r1, r0
    8aa4:	ldr	r0, [pc, #44]	; 8ad8 <error@@Base+0x2930>
    8aa8:	mov	r3, r7
    8aac:	add	r0, pc, r0
    8ab0:	bl	7f2c <error@@Base+0x1d84>
    8ab4:	b	8a4c <error@@Base+0x28a4>
    8ab8:	bl	1a9c <__stack_chk_fail@plt>
    8abc:	andeq	r4, r1, ip, lsr #9
    8ac0:	andeq	r0, r0, r8, asr #2
    8ac4:	muleq	r0, r8, r0
    8ac8:	andeq	r3, r0, r4, asr #2
    8acc:	andeq	r5, r1, r4, ror #23
    8ad0:	andeq	r3, r0, r8, lsr r0
    8ad4:	andeq	r3, r0, ip, lsr #32
    8ad8:	andeq	r3, r0, ip, lsl #2
    8adc:	push	{r4, r5, r6, r7, r8, r9, lr}
    8ae0:	mov	lr, r0
    8ae4:	ldr	r4, [pc, #244]	; 8be0 <error@@Base+0x2a38>
    8ae8:	sub	sp, sp, #132	; 0x84
    8aec:	mov	r9, r1
    8af0:	mov	r6, r0
    8af4:	mov	r7, r2
    8af8:	ldr	r5, [pc, #228]	; 8be4 <error@@Base+0x2a3c>
    8afc:	ldm	lr!, {r0, r1, r2, r3}
    8b00:	add	r4, pc, r4
    8b04:	add	r8, sp, #12
    8b08:	mov	ip, r8
    8b0c:	ldr	r5, [r4, r5]
    8b10:	stmia	ip!, {r0, r1, r2, r3}
    8b14:	cmp	r9, #0
    8b18:	ldm	lr, {r0, r1, r2, r3}
    8b1c:	mov	r9, #0
    8b20:	ldr	lr, [r5]
    8b24:	str	r9, [sp, #20]
    8b28:	stm	ip, {r0, r1, r2, r3}
    8b2c:	mov	r0, r8
    8b30:	str	lr, [sp, #124]	; 0x7c
    8b34:	beq	8b90 <error@@Base+0x29e8>
    8b38:	bl	8498 <error@@Base+0x22f0>
    8b3c:	add	r4, sp, #44	; 0x2c
    8b40:	mov	r2, #80	; 0x50
    8b44:	mov	r1, r0
    8b48:	mov	r0, r4
    8b4c:	bl	1c10 <strncpy@plt>
    8b50:	mov	r0, r6
    8b54:	bl	8498 <error@@Base+0x22f0>
    8b58:	ldr	r1, [pc, #136]	; 8be8 <error@@Base+0x2a40>
    8b5c:	add	r1, pc, r1
    8b60:	str	r0, [sp]
    8b64:	ldr	r0, [pc, #128]	; 8bec <error@@Base+0x2a44>
    8b68:	mov	r3, r7
    8b6c:	mov	r2, r4
    8b70:	add	r0, pc, r0
    8b74:	bl	7f2c <error@@Base+0x1d84>
    8b78:	ldr	r2, [sp, #124]	; 0x7c
    8b7c:	ldr	r3, [r5]
    8b80:	cmp	r2, r3
    8b84:	bne	8bdc <error@@Base+0x2a34>
    8b88:	add	sp, sp, #132	; 0x84
    8b8c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    8b90:	bl	85bc <error@@Base+0x2414>
    8b94:	add	r4, sp, #44	; 0x2c
    8b98:	mov	r2, #80	; 0x50
    8b9c:	mov	r1, r0
    8ba0:	mov	r0, r4
    8ba4:	bl	1c10 <strncpy@plt>
    8ba8:	mov	r0, r6
    8bac:	bl	85bc <error@@Base+0x2414>
    8bb0:	ldr	r2, [pc, #56]	; 8bf0 <error@@Base+0x2a48>
    8bb4:	ldr	r3, [r6, #28]
    8bb8:	add	r2, pc, r2
    8bbc:	ldr	r1, [pc, #48]	; 8bf4 <error@@Base+0x2a4c>
    8bc0:	ldr	r2, [r2, #16]
    8bc4:	add	r1, pc, r1
    8bc8:	orr	r3, r3, r2
    8bcc:	tst	r3, #512	; 0x200
    8bd0:	ldrne	r1, [pc, #32]	; 8bf8 <error@@Base+0x2a50>
    8bd4:	addne	r1, pc, r1
    8bd8:	b	8b60 <error@@Base+0x29b8>
    8bdc:	bl	1a9c <__stack_chk_fail@plt>
    8be0:	muleq	r1, r0, r3
    8be4:	andeq	r0, r0, r8, asr #2
    8be8:	andeq	r2, r0, r0, ror #31
    8bec:	andeq	r3, r0, r8, rrx
    8bf0:	muleq	r1, ip, sl
    8bf4:	andeq	r2, r0, r8, ror pc
    8bf8:	andeq	r2, r0, r0, ror pc
    8bfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8c00:	sub	sp, sp, #36	; 0x24
    8c04:	ldr	r7, [pc, #500]	; 8e00 <error@@Base+0x2c58>
    8c08:	ldr	r2, [pc, #500]	; 8e04 <error@@Base+0x2c5c>
    8c0c:	add	r7, pc, r7
    8c10:	mov	ip, #0
    8c14:	ldr	r2, [r7, r2]
    8c18:	subs	r3, r0, #0
    8c1c:	str	r2, [sp, #20]
    8c20:	ldr	r2, [r2]
    8c24:	str	r1, [sp, #16]
    8c28:	str	ip, [sp, #24]
    8c2c:	str	r2, [sp, #28]
    8c30:	beq	8c50 <error@@Base+0x2aa8>
    8c34:	ldr	r1, [pc, #460]	; 8e08 <error@@Base+0x2c60>
    8c38:	ldr	r2, [pc, #460]	; 8e0c <error@@Base+0x2c64>
    8c3c:	ldr	r0, [r7, r1]
    8c40:	add	r2, pc, r2
    8c44:	mov	r1, #1
    8c48:	ldr	r0, [r0]
    8c4c:	bl	1c40 <__fprintf_chk@plt>
    8c50:	ldr	r3, [sp, #16]
    8c54:	cmp	r3, #0
    8c58:	beq	8da0 <error@@Base+0x2bf8>
    8c5c:	mov	r4, r3
    8c60:	ldr	r3, [pc, #424]	; 8e10 <error@@Base+0x2c68>
    8c64:	ldr	r9, [pc, #424]	; 8e14 <error@@Base+0x2c6c>
    8c68:	add	r3, pc, r3
    8c6c:	str	r3, [sp, #12]
    8c70:	ldr	r3, [pc, #416]	; 8e18 <error@@Base+0x2c70>
    8c74:	mov	r8, #1
    8c78:	add	r3, pc, r3
    8c7c:	str	r3, [sp, #8]
    8c80:	add	r9, pc, r9
    8c84:	mov	fp, #50	; 0x32
    8c88:	b	8cfc <error@@Base+0x2b54>
    8c8c:	cmp	r3, #0
    8c90:	ldr	r3, [pc, #368]	; 8e08 <error@@Base+0x2c60>
    8c94:	mov	r0, r4
    8c98:	ldr	r5, [r7, r3]
    8c9c:	ldr	r6, [r5]
    8ca0:	beq	8d40 <error@@Base+0x2b98>
    8ca4:	bl	8498 <error@@Base+0x22f0>
    8ca8:	mov	sl, r0
    8cac:	mov	r0, r4
    8cb0:	bl	85bc <error@@Base+0x2414>
    8cb4:	mov	r3, sl
    8cb8:	mov	r2, r9
    8cbc:	mov	r1, r8
    8cc0:	str	r0, [sp]
    8cc4:	mov	r0, r6
    8cc8:	bl	1c40 <__fprintf_chk@plt>
    8ccc:	ldr	r3, [r4, #12]
    8cd0:	cmp	r3, #0
    8cd4:	beq	8cec <error@@Base+0x2b44>
    8cd8:	ldr	r2, [r4, #8]
    8cdc:	mov	r1, #30
    8ce0:	str	r2, [sp]
    8ce4:	mov	r2, fp
    8ce8:	bl	80ac <error@@Base+0x1f04>
    8cec:	ldr	r1, [r5]
    8cf0:	mov	r0, #10
    8cf4:	bl	1ca0 <fputc@plt>
    8cf8:	add	r4, r4, #32
    8cfc:	ldr	r3, [r4]
    8d00:	cmp	r3, #0
    8d04:	ldr	r3, [r4, #4]
    8d08:	bne	8c8c <error@@Base+0x2ae4>
    8d0c:	cmp	r3, #0
    8d10:	beq	8d5c <error@@Base+0x2bb4>
    8d14:	ldr	r3, [pc, #236]	; 8e08 <error@@Base+0x2c60>
    8d18:	mov	r0, r4
    8d1c:	ldr	r5, [r7, r3]
    8d20:	ldr	r6, [r5]
    8d24:	bl	85bc <error@@Base+0x2414>
    8d28:	ldr	r2, [sp, #12]
    8d2c:	mov	r1, r8
    8d30:	mov	r3, r0
    8d34:	mov	r0, r6
    8d38:	bl	1c40 <__fprintf_chk@plt>
    8d3c:	b	8ccc <error@@Base+0x2b24>
    8d40:	bl	8498 <error@@Base+0x22f0>
    8d44:	ldr	r2, [sp, #8]
    8d48:	mov	r1, r8
    8d4c:	mov	r3, r0
    8d50:	mov	r0, r6
    8d54:	bl	1c40 <__fprintf_chk@plt>
    8d58:	b	8ccc <error@@Base+0x2b24>
    8d5c:	ldr	r4, [sp, #16]
    8d60:	add	r1, sp, #24
    8d64:	mov	r0, r4
    8d68:	bl	87a4 <error@@Base+0x25fc>
    8d6c:	ldr	r1, [sp, #24]
    8d70:	cmp	r1, #0
    8d74:	ble	8da0 <error@@Base+0x2bf8>
    8d78:	cmp	r1, #1
    8d7c:	beq	8dbc <error@@Base+0x2c14>
    8d80:	ldr	r1, [pc, #128]	; 8e08 <error@@Base+0x2c60>
    8d84:	mov	r3, r0
    8d88:	ldr	r2, [pc, #140]	; 8e1c <error@@Base+0x2c74>
    8d8c:	ldr	r0, [r7, r1]
    8d90:	add	r2, pc, r2
    8d94:	mov	r1, #1
    8d98:	ldr	r0, [r0]
    8d9c:	bl	1c40 <__fprintf_chk@plt>
    8da0:	ldr	r3, [sp, #20]
    8da4:	ldr	r2, [sp, #28]
    8da8:	ldr	r3, [r3]
    8dac:	cmp	r2, r3
    8db0:	bne	8dfc <error@@Base+0x2c54>
    8db4:	add	sp, sp, #36	; 0x24
    8db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8dbc:	ldr	r3, [pc, #92]	; 8e20 <error@@Base+0x2c78>
    8dc0:	add	r3, pc, r3
    8dc4:	ldr	r2, [r3, #16]
    8dc8:	tst	r2, #524288	; 0x80000
    8dcc:	beq	8da0 <error@@Base+0x2bf8>
    8dd0:	ldr	r3, [r3, #8]
    8dd4:	cmp	r4, r3
    8dd8:	bne	8da0 <error@@Base+0x2bf8>
    8ddc:	ldr	r2, [pc, #36]	; 8e08 <error@@Base+0x2c60>
    8de0:	mov	r3, r0
    8de4:	ldr	r0, [r7, r2]
    8de8:	ldr	r2, [pc, #52]	; 8e24 <error@@Base+0x2c7c>
    8dec:	ldr	r0, [r0]
    8df0:	add	r2, pc, r2
    8df4:	bl	1c40 <__fprintf_chk@plt>
    8df8:	b	8da0 <error@@Base+0x2bf8>
    8dfc:	bl	1a9c <__stack_chk_fail@plt>
    8e00:	andeq	r4, r1, r4, lsl #5
    8e04:	andeq	r0, r0, r8, asr #2
    8e08:	andeq	r0, r0, ip, asr #2
    8e0c:	andeq	r3, r0, r0, lsr #3
    8e10:	andeq	r3, r0, r0, lsr r0
    8e14:	andeq	r2, r0, r8, lsl #31
    8e18:	andeq	r3, r0, r0, lsr #32
    8e1c:	andeq	r2, r0, r4, lsr #29
    8e20:	muleq	r1, r4, r8
    8e24:	andeq	r2, r0, r4, lsr #28
    8e28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8e2c:	subs	r4, r1, #0
    8e30:	ldr	r6, [pc, #332]	; 8f84 <error@@Base+0x2ddc>
    8e34:	sub	sp, sp, #12
    8e38:	add	r6, pc, r6
    8e3c:	beq	8f68 <error@@Base+0x2dc0>
    8e40:	cmp	r0, #0
    8e44:	mov	r3, r0
    8e48:	beq	8e68 <error@@Base+0x2cc0>
    8e4c:	ldr	r1, [pc, #308]	; 8f88 <error@@Base+0x2de0>
    8e50:	ldr	r2, [pc, #308]	; 8f8c <error@@Base+0x2de4>
    8e54:	ldr	r5, [r6, r1]
    8e58:	add	r2, pc, r2
    8e5c:	mov	r1, #1
    8e60:	ldr	r0, [r5]
    8e64:	bl	1c40 <__fprintf_chk@plt>
    8e68:	ldr	r3, [r4]
    8e6c:	cmp	r3, #0
    8e70:	beq	8f68 <error@@Base+0x2dc0>
    8e74:	ldr	r2, [pc, #268]	; 8f88 <error@@Base+0x2de0>
    8e78:	ldr	r8, [pc, #272]	; 8f90 <error@@Base+0x2de8>
    8e7c:	ldr	fp, [pc, #272]	; 8f94 <error@@Base+0x2dec>
    8e80:	ldr	sl, [pc, #272]	; 8f98 <error@@Base+0x2df0>
    8e84:	ldr	r9, [pc, #272]	; 8f9c <error@@Base+0x2df4>
    8e88:	ldr	r7, [pc, #272]	; 8fa0 <error@@Base+0x2df8>
    8e8c:	ldr	r5, [r6, r2]
    8e90:	add	r8, pc, r8
    8e94:	add	fp, pc, fp
    8e98:	add	sl, pc, sl
    8e9c:	add	r9, pc, r9
    8ea0:	add	r7, pc, r7
    8ea4:	add	r4, r4, #20
    8ea8:	mov	r6, #1
    8eac:	b	8f20 <error@@Base+0x2d78>
    8eb0:	tst	r2, #1
    8eb4:	bne	8f40 <error@@Base+0x2d98>
    8eb8:	tst	r2, #4
    8ebc:	bne	8f54 <error@@Base+0x2dac>
    8ec0:	ldr	r2, [r4]
    8ec4:	cmp	r2, #0
    8ec8:	beq	8ed8 <error@@Base+0x2d30>
    8ecc:	ldr	r2, [r4, #16]
    8ed0:	tst	r2, #4
    8ed4:	bne	8f70 <error@@Base+0x2dc8>
    8ed8:	mov	r2, r8
    8edc:	mov	r1, r6
    8ee0:	ldr	r0, [r5]
    8ee4:	bl	1c40 <__fprintf_chk@plt>
    8ee8:	ldr	r3, [r4, #-16]
    8eec:	cmp	r3, #0
    8ef0:	beq	8f08 <error@@Base+0x2d60>
    8ef4:	ldr	r2, [r4, #-20]	; 0xffffffec
    8ef8:	mov	r1, #20
    8efc:	str	r2, [sp]
    8f00:	mov	r2, #60	; 0x3c
    8f04:	bl	80ac <error@@Base+0x1f04>
    8f08:	ldr	r1, [r5]
    8f0c:	mov	r0, #10
    8f10:	bl	1ca0 <fputc@plt>
    8f14:	ldr	r3, [r4], #20
    8f18:	cmp	r3, #0
    8f1c:	beq	8f68 <error@@Base+0x2dc0>
    8f20:	ldr	r2, [r4, #-4]
    8f24:	tst	r2, #2
    8f28:	beq	8eb0 <error@@Base+0x2d08>
    8f2c:	mov	r2, r7
    8f30:	mov	r1, r6
    8f34:	ldr	r0, [r5]
    8f38:	bl	1c40 <__fprintf_chk@plt>
    8f3c:	b	8ee8 <error@@Base+0x2d40>
    8f40:	mov	r2, r9
    8f44:	mov	r1, r6
    8f48:	ldr	r0, [r5]
    8f4c:	bl	1c40 <__fprintf_chk@plt>
    8f50:	b	8ee8 <error@@Base+0x2d40>
    8f54:	mov	r2, sl
    8f58:	mov	r1, r6
    8f5c:	ldr	r0, [r5]
    8f60:	bl	1c40 <__fprintf_chk@plt>
    8f64:	b	8ee8 <error@@Base+0x2d40>
    8f68:	add	sp, sp, #12
    8f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8f70:	mov	r2, fp
    8f74:	mov	r1, r6
    8f78:	ldr	r0, [r5]
    8f7c:	bl	1c40 <__fprintf_chk@plt>
    8f80:	b	8ee8 <error@@Base+0x2d40>
    8f84:	andeq	r4, r1, r8, asr r0
    8f88:	andeq	r0, r0, ip, asr #2
    8f8c:	andeq	r2, r0, r8, lsl #31
    8f90:	andeq	r2, r0, r4, lsl #28
    8f94:	strdeq	r2, [r0], -r4
    8f98:	andeq	r2, r0, r4, ror #27
    8f9c:	ldrdeq	r2, [r0], -r0
    8fa0:	andeq	r2, r0, r0, asr #27
    8fa4:	ldr	ip, [pc, #1212]	; 9468 <error@@Base+0x32c0>
    8fa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8fac:	add	ip, pc, ip
    8fb0:	ldr	lr, [pc, #1204]	; 946c <error@@Base+0x32c4>
    8fb4:	subs	r7, r1, #0
    8fb8:	sub	sp, sp, #804	; 0x324
    8fbc:	ldr	r1, [ip, lr]
    8fc0:	mov	r6, r3
    8fc4:	str	r1, [sp, #20]
    8fc8:	ldr	r3, [r1]
    8fcc:	mov	r4, r2
    8fd0:	str	r3, [sp, #796]	; 0x31c
    8fd4:	beq	9394 <error@@Base+0x31ec>
    8fd8:	cmp	r0, #0
    8fdc:	beq	93d0 <error@@Base+0x3228>
    8fe0:	ldr	r1, [pc, #1160]	; 9470 <error@@Base+0x32c8>
    8fe4:	ldr	r2, [pc, #1160]	; 9474 <error@@Base+0x32cc>
    8fe8:	mov	r3, r0
    8fec:	ldr	r5, [ip, r1]
    8ff0:	add	r2, pc, r2
    8ff4:	mov	r1, #1
    8ff8:	ldr	r0, [r5]
    8ffc:	str	r7, [sp]
    9000:	bl	1c40 <__fprintf_chk@plt>
    9004:	cmp	r4, #0
    9008:	beq	913c <error@@Base+0x2f94>
    900c:	add	r1, sp, #800	; 0x320
    9010:	mov	r3, #0
    9014:	str	r3, [r1, #-776]!	; 0xfffffcf8
    9018:	mov	r0, r4
    901c:	bl	87a4 <error@@Base+0x25fc>
    9020:	ldr	r1, [sp, #24]
    9024:	cmp	r1, #0
    9028:	ble	9064 <error@@Base+0x2ebc>
    902c:	ldr	r2, [pc, #1092]	; 9478 <error@@Base+0x32d0>
    9030:	add	r2, pc, r2
    9034:	ldr	r3, [r2, #16]
    9038:	tst	r3, #524288	; 0x80000
    903c:	beq	904c <error@@Base+0x2ea4>
    9040:	ldr	r3, [r2, #8]
    9044:	cmp	r4, r3
    9048:	beq	93f4 <error@@Base+0x324c>
    904c:	ldr	r2, [pc, #1064]	; 947c <error@@Base+0x32d4>
    9050:	mov	r3, r0
    9054:	add	r2, pc, r2
    9058:	mov	r1, #1
    905c:	ldr	r0, [r5]
    9060:	bl	1c40 <__fprintf_chk@plt>
    9064:	add	r8, sp, #284	; 0x11c
    9068:	add	r3, sp, #28
    906c:	add	r2, r8, #255	; 0xff
    9070:	add	sl, sp, #540	; 0x21c
    9074:	add	lr, sp, #792	; 0x318
    9078:	str	r2, [sp, #12]
    907c:	mov	r7, sl
    9080:	mov	r9, r8
    9084:	mov	ip, r3
    9088:	add	fp, r3, #255	; 0xff
    908c:	add	r2, r4, #32
    9090:	add	lr, lr, #3
    9094:	b	90a8 <error@@Base+0x2f00>
    9098:	ldr	r0, [r2, #-24]	; 0xffffffe8
    909c:	cmp	r0, #0
    90a0:	beq	92cc <error@@Base+0x3124>
    90a4:	add	r2, r2, #32
    90a8:	ldr	r1, [r2, #-32]	; 0xffffffe0
    90ac:	cmp	r1, #0
    90b0:	bne	9098 <error@@Base+0x2ef0>
    90b4:	ldr	r0, [r2, #-28]	; 0xffffffe4
    90b8:	cmp	r0, #0
    90bc:	bne	90a4 <error@@Base+0x2efc>
    90c0:	cmp	ip, r3
    90c4:	bhi	9378 <error@@Base+0x31d0>
    90c8:	cmp	r9, r8
    90cc:	bhi	9354 <error@@Base+0x31ac>
    90d0:	cmp	r7, sl
    90d4:	bhi	9330 <error@@Base+0x3188>
    90d8:	ldr	r8, [pc, #928]	; 9480 <error@@Base+0x32d8>
    90dc:	ldr	r9, [pc, #928]	; 9484 <error@@Base+0x32dc>
    90e0:	add	r8, pc, r8
    90e4:	mov	r7, #1
    90e8:	add	r9, pc, r9
    90ec:	b	90f4 <error@@Base+0x2f4c>
    90f0:	add	r4, r4, #32
    90f4:	ldr	r3, [r4]
    90f8:	cmp	r3, #0
    90fc:	beq	9290 <error@@Base+0x30e8>
    9100:	ldr	r3, [r4, #28]
    9104:	tst	r3, #5
    9108:	bne	90f0 <error@@Base+0x2f48>
    910c:	ldr	r3, [r4, #8]
    9110:	cmp	r3, #0
    9114:	beq	90f0 <error@@Base+0x2f48>
    9118:	mov	r0, r4
    911c:	ldr	sl, [r5]
    9120:	bl	8498 <error@@Base+0x22f0>
    9124:	mov	r2, r8
    9128:	mov	r1, r7
    912c:	mov	r3, r0
    9130:	mov	r0, sl
    9134:	bl	1c40 <__fprintf_chk@plt>
    9138:	b	90f0 <error@@Base+0x2f48>
    913c:	cmp	r6, #0
    9140:	beq	9220 <error@@Base+0x3078>
    9144:	ldr	r3, [r6]
    9148:	cmp	r3, #0
    914c:	beq	9220 <error@@Base+0x3078>
    9150:	ldr	r2, [pc, #816]	; 9488 <error@@Base+0x32e0>
    9154:	ldr	fp, [pc, #816]	; 948c <error@@Base+0x32e4>
    9158:	add	r2, pc, r2
    915c:	ldr	r8, [pc, #812]	; 9490 <error@@Base+0x32e8>
    9160:	str	r2, [sp, #12]
    9164:	ldr	r2, [pc, #808]	; 9494 <error@@Base+0x32ec>
    9168:	add	fp, pc, fp
    916c:	add	r8, pc, r8
    9170:	add	r6, r6, #20
    9174:	mov	r4, #0
    9178:	mov	r7, #1
    917c:	mov	r9, #32
    9180:	add	r2, pc, r2
    9184:	str	r2, [sp, #16]
    9188:	ldr	r2, [r6, #-4]
    918c:	tst	r2, #2
    9190:	beq	9248 <error@@Base+0x30a0>
    9194:	cmp	r4, #0
    9198:	beq	91c8 <error@@Base+0x3020>
    919c:	ldr	r1, [r5]
    91a0:	mov	r0, r9
    91a4:	bl	1ca0 <fputc@plt>
    91a8:	sub	sl, r4, #1
    91ac:	mov	r4, #93	; 0x5d
    91b0:	sub	sl, sl, #1
    91b4:	ldr	r1, [r5]
    91b8:	mov	r0, r4
    91bc:	bl	1ca0 <fputc@plt>
    91c0:	cmn	sl, #1
    91c4:	bne	91b0 <error@@Base+0x3008>
    91c8:	ldr	r3, [r6, #-20]	; 0xffffffec
    91cc:	mov	r2, r8
    91d0:	mov	r1, r7
    91d4:	ldr	r0, [r5]
    91d8:	bl	1c40 <__fprintf_chk@plt>
    91dc:	mov	r4, #0
    91e0:	ldr	r3, [r6], #20
    91e4:	cmp	r3, #0
    91e8:	bne	9188 <error@@Base+0x2fe0>
    91ec:	cmp	r4, #0
    91f0:	beq	9220 <error@@Base+0x3078>
    91f4:	ldr	r1, [r5]
    91f8:	mov	r0, #32
    91fc:	bl	1ca0 <fputc@plt>
    9200:	sub	r4, r4, #1
    9204:	mov	r6, #93	; 0x5d
    9208:	sub	r4, r4, #1
    920c:	ldr	r1, [r5]
    9210:	mov	r0, r6
    9214:	bl	1ca0 <fputc@plt>
    9218:	cmn	r4, #1
    921c:	bne	9208 <error@@Base+0x3060>
    9220:	ldr	r1, [r5]
    9224:	mov	r0, #10
    9228:	bl	1ca0 <fputc@plt>
    922c:	ldr	r3, [sp, #20]
    9230:	ldr	r2, [sp, #796]	; 0x31c
    9234:	ldr	r3, [r3]
    9238:	cmp	r2, r3
    923c:	bne	9464 <error@@Base+0x32bc>
    9240:	add	sp, sp, #804	; 0x324
    9244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9248:	tst	r2, #1
    924c:	bne	927c <error@@Base+0x30d4>
    9250:	tst	r2, #4
    9254:	movne	r1, r7
    9258:	ldrne	r2, [sp, #12]
    925c:	ldrne	r0, [r5]
    9260:	moveq	r2, fp
    9264:	moveq	r1, r7
    9268:	ldreq	r0, [r5]
    926c:	subne	r4, r4, #1
    9270:	bl	1c40 <__fprintf_chk@plt>
    9274:	add	r4, r4, #1
    9278:	b	91e0 <error@@Base+0x3038>
    927c:	ldr	r2, [sp, #16]
    9280:	mov	r1, r7
    9284:	ldr	r0, [r5]
    9288:	bl	1c40 <__fprintf_chk@plt>
    928c:	b	9274 <error@@Base+0x30cc>
    9290:	ldr	r3, [r4, #4]
    9294:	cmp	r3, #0
    9298:	beq	913c <error@@Base+0x2f94>
    929c:	ldr	r3, [r4, #28]
    92a0:	tst	r3, #5
    92a4:	bne	90f0 <error@@Base+0x2f48>
    92a8:	mov	r0, r4
    92ac:	ldr	sl, [r5]
    92b0:	bl	85bc <error@@Base+0x2414>
    92b4:	mov	r2, r9
    92b8:	mov	r1, r7
    92bc:	mov	r3, r0
    92c0:	mov	r0, sl
    92c4:	bl	1c40 <__fprintf_chk@plt>
    92c8:	b	90f0 <error@@Base+0x2f48>
    92cc:	ldr	r0, [r2, #-4]
    92d0:	tst	r0, #4
    92d4:	bne	90a4 <error@@Base+0x2efc>
    92d8:	ldr	r0, [r2, #-8]
    92dc:	cmp	r0, #0
    92e0:	beq	9304 <error@@Base+0x315c>
    92e4:	ldr	r0, [r2, #-16]
    92e8:	cmp	r0, #0
    92ec:	beq	9318 <error@@Base+0x3170>
    92f0:	cmp	r7, lr
    92f4:	ldrbcc	r1, [r1]
    92f8:	addcc	r7, r7, #1
    92fc:	strbcc	r1, [r7, #-1]
    9300:	b	90a4 <error@@Base+0x2efc>
    9304:	cmp	ip, fp
    9308:	ldrbcc	r1, [r1]
    930c:	strbcc	r1, [ip]
    9310:	addcc	ip, ip, #1
    9314:	b	90a4 <error@@Base+0x2efc>
    9318:	ldr	r0, [sp, #12]
    931c:	cmp	r9, r0
    9320:	ldrbcc	r1, [r1]
    9324:	addcc	r9, r9, #1
    9328:	strbcc	r1, [r9, #-1]
    932c:	b	90a4 <error@@Base+0x2efc>
    9330:	ldr	r2, [pc, #352]	; 9498 <error@@Base+0x32f0>
    9334:	mov	r0, #0
    9338:	strb	r0, [r7]
    933c:	mov	r3, sl
    9340:	add	r2, pc, r2
    9344:	mov	r1, #1
    9348:	ldr	r0, [r5]
    934c:	bl	1c40 <__fprintf_chk@plt>
    9350:	b	90d8 <error@@Base+0x2f30>
    9354:	ldr	r2, [pc, #320]	; 949c <error@@Base+0x32f4>
    9358:	mov	r0, #0
    935c:	strb	r0, [r9]
    9360:	mov	r3, r8
    9364:	add	r2, pc, r2
    9368:	mov	r1, #1
    936c:	ldr	r0, [r5]
    9370:	bl	1c40 <__fprintf_chk@plt>
    9374:	b	90d0 <error@@Base+0x2f28>
    9378:	ldr	r2, [pc, #288]	; 94a0 <error@@Base+0x32f8>
    937c:	strb	r0, [ip]
    9380:	add	r2, pc, r2
    9384:	mov	r1, #1
    9388:	ldr	r0, [r5]
    938c:	bl	1c40 <__fprintf_chk@plt>
    9390:	b	90c8 <error@@Base+0x2f20>
    9394:	ldr	r3, [pc, #264]	; 94a4 <error@@Base+0x32fc>
    9398:	add	r3, pc, r3
    939c:	ldr	r3, [r3, #4]
    93a0:	cmp	r3, #0
    93a4:	beq	9458 <error@@Base+0x32b0>
    93a8:	cmp	r0, #0
    93ac:	ldr	r7, [r3]
    93b0:	beq	942c <error@@Base+0x3284>
    93b4:	cmp	r7, #0
    93b8:	bne	8fe0 <error@@Base+0x2e38>
    93bc:	ldr	r3, [pc, #172]	; 9470 <error@@Base+0x32c8>
    93c0:	ldr	r5, [ip, r3]
    93c4:	ldr	r1, [r5]
    93c8:	bl	1cf4 <fputs@plt>
    93cc:	b	9004 <error@@Base+0x2e5c>
    93d0:	ldr	r1, [pc, #152]	; 9470 <error@@Base+0x32c8>
    93d4:	ldr	r2, [pc, #204]	; 94a8 <error@@Base+0x3300>
    93d8:	mov	r3, r7
    93dc:	ldr	r5, [ip, r1]
    93e0:	add	r2, pc, r2
    93e4:	mov	r1, #1
    93e8:	ldr	r0, [r5]
    93ec:	bl	1c40 <__fprintf_chk@plt>
    93f0:	b	9004 <error@@Base+0x2e5c>
    93f4:	cmp	r1, #1
    93f8:	mov	r3, r0
    93fc:	beq	9418 <error@@Base+0x3270>
    9400:	ldr	r2, [pc, #164]	; 94ac <error@@Base+0x3304>
    9404:	mov	r1, #1
    9408:	add	r2, pc, r2
    940c:	ldr	r0, [r5]
    9410:	bl	1c40 <__fprintf_chk@plt>
    9414:	b	9064 <error@@Base+0x2ebc>
    9418:	ldr	r2, [pc, #144]	; 94b0 <error@@Base+0x3308>
    941c:	ldr	r0, [r5]
    9420:	add	r2, pc, r2
    9424:	bl	1c40 <__fprintf_chk@plt>
    9428:	b	9064 <error@@Base+0x2ebc>
    942c:	cmp	r7, #0
    9430:	bne	93d0 <error@@Base+0x3228>
    9434:	ldr	r3, [pc, #52]	; 9470 <error@@Base+0x32c8>
    9438:	ldr	r0, [pc, #116]	; 94b4 <error@@Base+0x330c>
    943c:	mov	r2, #21
    9440:	ldr	r5, [ip, r3]
    9444:	mov	r1, #1
    9448:	add	r0, pc, r0
    944c:	ldr	r3, [r5]
    9450:	bl	1af0 <fwrite@plt>
    9454:	b	9004 <error@@Base+0x2e5c>
    9458:	cmp	r0, #0
    945c:	bne	93bc <error@@Base+0x3214>
    9460:	b	9434 <error@@Base+0x328c>
    9464:	bl	1a9c <__stack_chk_fail@plt>
    9468:	andeq	r3, r1, r4, ror #29
    946c:	andeq	r0, r0, r8, asr #2
    9470:	andeq	r0, r0, ip, asr #2
    9474:	ldrdeq	r2, [r0], -r4
    9478:	andeq	r5, r1, r4, lsr #12
    947c:	andeq	r2, r0, r0, lsl #25
    9480:	strdeq	r2, [r0], -r4
    9484:	andeq	r2, r0, ip, ror #23
    9488:	andeq	r2, r0, r0, ror fp
    948c:	andeq	r2, r0, r4, lsr #23
    9490:	andeq	r2, r0, ip, asr fp
    9494:	andeq	r2, r0, r0, lsl #23
    9498:			; <UNDEFINED> instruction: 0x000029b4
    949c:	andeq	r2, r0, r4, lsl #19
    94a0:	andeq	r2, r0, ip, asr r9
    94a4:			; <UNDEFINED> instruction: 0x000152bc
    94a8:	andeq	r2, r0, r0, asr #17
    94ac:	andeq	r2, r0, r4, asr #17
    94b0:	andeq	r2, r0, r8, lsr #17
    94b4:	andeq	r2, r0, r4, ror #16
    94b8:	push	{r4, lr}
    94bc:	ldr	r4, [pc, #104]	; 952c <error@@Base+0x3384>
    94c0:	add	r4, pc, r4
    94c4:	ldr	r3, [r4]
    94c8:	cmp	r3, #0
    94cc:	beq	9524 <error@@Base+0x337c>
    94d0:	ldmib	r4, {r1, r2, r3}
    94d4:	ldr	r0, [pc, #84]	; 9530 <error@@Base+0x3388>
    94d8:	ldr	r1, [r1]
    94dc:	add	r0, pc, r0
    94e0:	bl	8fa4 <error@@Base+0x2dfc>
    94e4:	ldr	r1, [r4, #8]
    94e8:	cmp	r1, #0
    94ec:	beq	94fc <error@@Base+0x3354>
    94f0:	ldr	r0, [pc, #60]	; 9534 <error@@Base+0x338c>
    94f4:	add	r0, pc, r0
    94f8:	bl	8bfc <error@@Base+0x2a54>
    94fc:	ldr	r3, [pc, #52]	; 9538 <error@@Base+0x3390>
    9500:	add	r3, pc, r3
    9504:	ldr	r1, [r3, #12]
    9508:	cmp	r1, #0
    950c:	beq	951c <error@@Base+0x3374>
    9510:	ldr	r0, [pc, #36]	; 953c <error@@Base+0x3394>
    9514:	add	r0, pc, r0
    9518:	bl	8e28 <error@@Base+0x2c80>
    951c:	mov	r0, #0
    9520:	pop	{r4, pc}
    9524:	mvn	r0, #0
    9528:	pop	{r4, pc}
    952c:	muleq	r1, r4, r1
    9530:	andeq	r2, r0, r8, lsr r8
    9534:	andeq	r2, r0, r8, lsr #16
    9538:	andeq	r5, r1, r4, asr r1
    953c:	andeq	r2, r0, r4, lsl r8
    9540:	ldr	ip, [pc, #2604]	; 9f74 <error@@Base+0x3dcc>
    9544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9548:	add	ip, pc, ip
    954c:	ldr	lr, [pc, #2596]	; 9f78 <error@@Base+0x3dd0>
    9550:	sub	sp, sp, #588	; 0x24c
    9554:	mov	r6, r2
    9558:	str	r0, [sp, #16]
    955c:	ldr	lr, [ip, lr]
    9560:	ldr	r0, [pc, #2580]	; 9f7c <error@@Base+0x3dd4>
    9564:	str	r3, [sp, #24]
    9568:	ldr	r2, [lr]
    956c:	add	r0, pc, r0
    9570:	mov	fp, r1
    9574:	str	r2, [sp, #580]	; 0x244
    9578:	str	lr, [sp, #52]	; 0x34
    957c:	bl	1b14 <getenv@plt>
    9580:	ldr	r2, [sp, #16]
    9584:	cmp	r0, #0
    9588:	movne	r3, #1
    958c:	ldreq	r3, [sp, #624]	; 0x270
    9590:	lsreq	r3, r3, #17
    9594:	andeq	r3, r3, #1
    9598:	str	r3, [sp, #20]
    959c:	ldr	r3, [pc, #2524]	; 9f80 <error@@Base+0x3dd8>
    95a0:	cmp	r2, #1
    95a4:	add	r3, pc, r3
    95a8:	stm	r3, {r2, fp}
    95ac:	ldr	r2, [sp, #24]
    95b0:	str	r6, [r3, #8]
    95b4:	str	r2, [r3, #12]
    95b8:	ldr	r2, [sp, #624]	; 0x270
    95bc:	str	r2, [r3, #16]
    95c0:	ble	9afc <error@@Base+0x3954>
    95c4:	ldr	r1, [sp, #24]
    95c8:	cmp	r1, #0
    95cc:	beq	9bb0 <error@@Base+0x3a08>
    95d0:	ldr	r3, [r1]
    95d4:	cmp	r3, #0
    95d8:	beq	9db0 <error@@Base+0x3c08>
    95dc:	mov	r2, #0
    95e0:	mov	r4, r2
    95e4:	mov	lr, r2
    95e8:	mov	r9, r2
    95ec:	mov	r3, r1
    95f0:	mov	r0, #1
    95f4:	mov	ip, #2
    95f8:	b	9630 <error@@Base+0x3488>
    95fc:	cmp	r2, #0
    9600:	addeq	lr, lr, #1
    9604:	beq	9620 <error@@Base+0x3478>
    9608:	cmp	r2, #1
    960c:	addeq	r4, r4, #1
    9610:	moveq	r2, ip
    9614:	beq	9620 <error@@Base+0x3478>
    9618:	cmp	r2, #2
    961c:	addeq	r4, r4, #1
    9620:	ldr	r1, [r3, #20]!
    9624:	add	r9, r9, #1
    9628:	cmp	r1, #0
    962c:	beq	9678 <error@@Base+0x34d0>
    9630:	ldr	r1, [r3, #16]
    9634:	tst	r1, #2
    9638:	bne	95fc <error@@Base+0x3454>
    963c:	cmp	r2, #0
    9640:	beq	9664 <error@@Base+0x34bc>
    9644:	cmp	r2, #2
    9648:	bne	9620 <error@@Base+0x3478>
    964c:	ldr	r0, [pc, #2352]	; 9f84 <error@@Base+0x3ddc>
    9650:	add	r0, pc, r0
    9654:	bl	7f2c <error@@Base+0x1d84>
    9658:	mvn	r3, #0
    965c:	str	r3, [sp, #12]
    9660:	b	97bc <error@@Base+0x3614>
    9664:	ldr	r1, [r3, #20]!
    9668:	mov	r2, r0
    966c:	cmp	r1, #0
    9670:	add	r9, r9, #1
    9674:	bne	9630 <error@@Base+0x3488>
    9678:	str	lr, [sp, #36]	; 0x24
    967c:	str	r4, [sp, #56]	; 0x38
    9680:	cmp	r6, #0
    9684:	beq	9bc8 <error@@Base+0x3a20>
    9688:	add	r3, r6, #32
    968c:	ldr	r4, [sp, #624]	; 0x270
    9690:	mov	r5, #0
    9694:	b	96b0 <error@@Base+0x3508>
    9698:	ldr	r2, [r3, #-8]
    969c:	ldr	r1, [r3, #-4]
    96a0:	cmp	r2, #0
    96a4:	orr	r4, r4, r1
    96a8:	movne	r5, #1
    96ac:	add	r3, r3, #32
    96b0:	ldr	r2, [r3, #-32]	; 0xffffffe0
    96b4:	cmp	r2, #0
    96b8:	bne	9698 <error@@Base+0x34f0>
    96bc:	ldr	r2, [r3, #-28]	; 0xffffffe4
    96c0:	cmp	r2, #0
    96c4:	bne	9698 <error@@Base+0x34f0>
    96c8:	ldr	r3, [sp, #16]
    96cc:	cmp	r3, #1
    96d0:	lsr	r3, r4, #2
    96d4:	and	r3, r3, #1
    96d8:	str	r3, [sp, #32]
    96dc:	ble	9ea8 <error@@Base+0x3d00>
    96e0:	str	r9, [sp, #60]	; 0x3c
    96e4:	ldr	r9, [sp, #624]	; 0x270
    96e8:	mov	r3, #0
    96ec:	mov	r8, #1
    96f0:	str	r3, [sp, #12]
    96f4:	add	r3, sp, #64	; 0x40
    96f8:	str	r3, [sp, #44]	; 0x2c
    96fc:	str	r4, [sp, #28]
    9700:	str	r5, [sp, #48]	; 0x30
    9704:	mov	r3, #0
    9708:	cmp	r6, #0
    970c:	str	r3, [sp, #64]	; 0x40
    9710:	add	sl, fp, r8, lsl #2
    9714:	ldr	r7, [fp, r8, lsl #2]
    9718:	beq	998c <error@@Base+0x37e4>
    971c:	ldrb	r5, [r7]
    9720:	cmp	r5, #43	; 0x2b
    9724:	beq	9a34 <error@@Base+0x388c>
    9728:	cmp	r5, #45	; 0x2d
    972c:	beq	9a40 <error@@Base+0x3898>
    9730:	ldr	r3, [sp, #28]
    9734:	tst	r3, #256	; 0x100
    9738:	bne	9a68 <error@@Base+0x38c0>
    973c:	ldr	r3, [sp, #12]
    9740:	cmp	r3, #0
    9744:	bne	998c <error@@Base+0x37e4>
    9748:	tst	r9, #262144	; 0x40000
    974c:	beq	998c <error@@Base+0x37e4>
    9750:	ldr	r3, [sp, #28]
    9754:	bic	r9, r9, #262144	; 0x40000
    9758:	mov	r4, r7
    975c:	mov	r5, #45	; 0x2d
    9760:	bic	r3, r3, #262144	; 0x40000
    9764:	str	r3, [sp, #28]
    9768:	mov	r3, #0
    976c:	str	r3, [sp, #64]	; 0x40
    9770:	ldrb	r1, [r4]
    9774:	ldr	r7, [sp, #32]
    9778:	mov	sl, r6
    977c:	b	9790 <error@@Base+0x35e8>
    9780:	ldrb	r3, [r3]
    9784:	cmp	r3, r1
    9788:	beq	97dc <error@@Base+0x3634>
    978c:	add	sl, sl, #32
    9790:	ldr	r3, [sl]
    9794:	cmp	r3, #0
    9798:	bne	9780 <error@@Base+0x35d8>
    979c:	ldr	r3, [sl, #4]
    97a0:	cmp	r3, #0
    97a4:	bne	978c <error@@Base+0x35e4>
    97a8:	ldr	r0, [fp, r8, lsl #2]
    97ac:	mov	r2, r8
    97b0:	bl	7fc4 <error@@Base+0x1e1c>
    97b4:	mvn	r3, #0
    97b8:	str	r3, [sp, #12]
    97bc:	ldr	r3, [sp, #52]	; 0x34
    97c0:	ldr	r2, [sp, #580]	; 0x244
    97c4:	ldr	r0, [sp, #12]
    97c8:	ldr	r3, [r3]
    97cc:	cmp	r2, r3
    97d0:	bne	9f70 <error@@Base+0x3dc8>
    97d4:	add	sp, sp, #588	; 0x24c
    97d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    97dc:	cmp	r5, #43	; 0x2b
    97e0:	beq	99f0 <error@@Base+0x3848>
    97e4:	cmp	r5, #45	; 0x2d
    97e8:	beq	9a00 <error@@Base+0x3858>
    97ec:	ldr	r2, [sl, #28]
    97f0:	tst	r2, #4
    97f4:	beq	9804 <error@@Base+0x365c>
    97f8:	cmp	r7, #0
    97fc:	beq	9c64 <error@@Base+0x3abc>
    9800:	mov	r7, #0
    9804:	ldr	r0, [sl, #8]
    9808:	cmp	r0, #0
    980c:	ldreq	r1, [sp, #64]	; 0x40
    9810:	beq	986c <error@@Base+0x36c4>
    9814:	ldrb	r0, [r4, #1]
    9818:	orr	r2, r9, r2
    981c:	cmp	r0, #0
    9820:	bne	993c <error@@Base+0x3794>
    9824:	ldr	r3, [sp, #20]
    9828:	cmp	r3, #0
    982c:	beq	9848 <error@@Base+0x36a0>
    9830:	ldr	r0, [fp, r8, lsl #2]
    9834:	cmp	r4, r0
    9838:	beq	9848 <error@@Base+0x36a0>
    983c:	ldrb	r0, [r4, #-1]
    9840:	cmp	r0, r5
    9844:	bne	9c34 <error@@Base+0x3a8c>
    9848:	ldr	r3, [sp, #16]
    984c:	add	r0, r8, #1
    9850:	cmp	r3, r0
    9854:	ble	99d8 <error@@Base+0x3830>
    9858:	tst	r2, #32
    985c:	bne	99d8 <error@@Base+0x3830>
    9860:	ldr	r1, [fp, r0, lsl #2]
    9864:	mov	r8, r0
    9868:	str	r1, [sp, #64]	; 0x40
    986c:	mov	r2, r5
    9870:	mov	r0, sl
    9874:	bl	7da8 <error@@Base+0x1c00>
    9878:	cmp	r0, #0
    987c:	blt	9bec <error@@Base+0x3a44>
    9880:	ldr	r2, [sl, #28]
    9884:	tst	r2, #2
    9888:	bne	9af4 <error@@Base+0x394c>
    988c:	ldr	r2, [sp, #64]	; 0x40
    9890:	cmp	r2, #0
    9894:	bne	98a8 <error@@Base+0x3700>
    9898:	ldrb	r1, [r4, #1]
    989c:	add	r4, r4, #1
    98a0:	cmp	r1, #0
    98a4:	bne	9778 <error@@Base+0x35d0>
    98a8:	ldr	r3, [sp, #16]
    98ac:	add	r8, r8, #1
    98b0:	cmp	r3, r8
    98b4:	str	r7, [sp, #32]
    98b8:	bgt	9704 <error@@Base+0x355c>
    98bc:	str	r9, [sp, #624]	; 0x270
    98c0:	ldr	r9, [sp, #60]	; 0x3c
    98c4:	ldr	r2, [sp, #624]	; 0x270
    98c8:	ldr	r3, [sp, #32]
    98cc:	ands	r3, r3, r2, lsr #19
    98d0:	bne	9f38 <error@@Base+0x3d90>
    98d4:	ldr	r1, [sp, #36]	; 0x24
    98d8:	ldr	r2, [sp, #56]	; 0x38
    98dc:	ldr	r3, [sp, #12]
    98e0:	add	r2, r1, r2
    98e4:	cmp	r2, r3
    98e8:	ble	9c74 <error@@Base+0x3acc>
    98ec:	cmp	r1, r3
    98f0:	bgt	990c <error@@Base+0x3764>
    98f4:	ldr	r1, [sp, #36]	; 0x24
    98f8:	ldr	r3, [sp, #12]
    98fc:	sub	r3, r3, r1
    9900:	ldr	r1, [sp, #56]	; 0x38
    9904:	sub	r9, r9, r1
    9908:	add	r3, r3, r9
    990c:	ldr	r1, [sp, #24]
    9910:	add	r3, r3, r3, lsl #2
    9914:	sub	r2, r2, #1
    9918:	add	r3, r1, r3, lsl #2
    991c:	ldr	r1, [sp, #12]
    9920:	cmp	r2, r1
    9924:	ldr	r1, [r3]
    9928:	beq	9e78 <error@@Base+0x3cd0>
    992c:	ldr	r0, [pc, #1620]	; 9f88 <error@@Base+0x3de0>
    9930:	add	r0, pc, r0
    9934:	bl	7f2c <error@@Base+0x1d84>
    9938:	b	97b4 <error@@Base+0x360c>
    993c:	ldr	r0, [fp, r8, lsl #2]
    9940:	cmp	r4, r0
    9944:	beq	9a1c <error@@Base+0x3874>
    9948:	ldrb	r0, [r4, #-1]
    994c:	cmp	r0, r5
    9950:	beq	9a1c <error@@Base+0x3874>
    9954:	bic	r2, r2, #4064	; 0xfe0
    9958:	bic	r2, r2, #15
    995c:	lsl	r2, r2, #19
    9960:	lsr	r2, r2, #19
    9964:	cmp	r2, #4096	; 0x1000
    9968:	bne	9c34 <error@@Base+0x3a8c>
    996c:	mov	r1, #0
    9970:	str	r1, [sp, #64]	; 0x40
    9974:	b	986c <error@@Base+0x36c4>
    9978:	ldrb	r3, [r7, #2]
    997c:	cmp	r3, r5
    9980:	beq	998c <error@@Base+0x37e4>
    9984:	tst	r9, #2560	; 0xa00
    9988:	beq	9b64 <error@@Base+0x39bc>
    998c:	ldr	r3, [sp, #24]
    9990:	cmp	r3, #0
    9994:	beq	9e90 <error@@Base+0x3ce8>
    9998:	cmp	r8, #255	; 0xff
    999c:	bgt	99b8 <error@@Base+0x3810>
    99a0:	ldr	r2, [sp, #12]
    99a4:	add	r1, sp, #584	; 0x248
    99a8:	add	r3, r1, r2
    99ac:	strb	r8, [r3, #-516]	; 0xfffffdfc
    99b0:	add	r3, r2, #1
    99b4:	str	r3, [sp, #12]
    99b8:	ldr	r3, [sp, #20]
    99bc:	cmp	r3, #0
    99c0:	movne	r6, #0
    99c4:	ldr	r3, [sp, #16]
    99c8:	add	r8, r8, #1
    99cc:	cmp	r3, r8
    99d0:	bgt	9704 <error@@Base+0x355c>
    99d4:	b	98bc <error@@Base+0x3714>
    99d8:	tst	r2, #4096	; 0x1000
    99dc:	beq	9c34 <error@@Base+0x3a8c>
    99e0:	mov	r3, #0
    99e4:	str	r3, [sp, #64]	; 0x40
    99e8:	mov	r1, r3
    99ec:	b	986c <error@@Base+0x36c4>
    99f0:	ldr	r2, [sl, #24]
    99f4:	cmp	r2, #0
    99f8:	bne	97ec <error@@Base+0x3644>
    99fc:	b	97a8 <error@@Base+0x3600>
    9a00:	ldr	r2, [sl, #16]
    9a04:	cmp	r2, #0
    9a08:	bne	97ec <error@@Base+0x3644>
    9a0c:	ldr	r2, [sl, #24]
    9a10:	cmp	r2, #0
    9a14:	bne	97a8 <error@@Base+0x3600>
    9a18:	b	97ec <error@@Base+0x3644>
    9a1c:	tst	r2, #16
    9a20:	beq	9954 <error@@Base+0x37ac>
    9a24:	add	r1, r4, #1
    9a28:	str	r1, [sp, #64]	; 0x40
    9a2c:	mov	r4, r1
    9a30:	b	986c <error@@Base+0x36c4>
    9a34:	ldr	r3, [sp, #48]	; 0x30
    9a38:	cmp	r3, #0
    9a3c:	beq	9730 <error@@Base+0x3588>
    9a40:	ldrb	r3, [r7, #1]
    9a44:	cmp	r3, r5
    9a48:	beq	9978 <error@@Base+0x37d0>
    9a4c:	ldr	r2, [sp, #28]
    9a50:	add	r4, r7, #1
    9a54:	tst	r2, #1024	; 0x400
    9a58:	bne	9b10 <error@@Base+0x3968>
    9a5c:	cmp	r3, #0
    9a60:	beq	998c <error@@Base+0x37e4>
    9a64:	b	9768 <error@@Base+0x35c0>
    9a68:	mov	r3, #0
    9a6c:	mov	r2, #256	; 0x100
    9a70:	ldr	r1, [sp, #44]	; 0x2c
    9a74:	mov	r0, r7
    9a78:	bl	7c20 <error@@Base+0x1a78>
    9a7c:	subs	r3, r0, #0
    9a80:	beq	973c <error@@Base+0x3594>
    9a84:	ldr	r2, [r3, #16]
    9a88:	cmp	r2, #0
    9a8c:	beq	9ba0 <error@@Base+0x39f8>
    9a90:	mov	r5, #45	; 0x2d
    9a94:	ldr	r2, [r3, #28]
    9a98:	tst	r2, #4
    9a9c:	beq	9ab4 <error@@Base+0x390c>
    9aa0:	ldr	r1, [sp, #32]
    9aa4:	cmp	r1, #0
    9aa8:	beq	9ec8 <error@@Base+0x3d20>
    9aac:	mov	r1, #0
    9ab0:	str	r1, [sp, #32]
    9ab4:	ldr	r1, [r3, #8]
    9ab8:	cmp	r1, #0
    9abc:	ldr	r1, [sp, #64]	; 0x40
    9ac0:	beq	9acc <error@@Base+0x3924>
    9ac4:	cmp	r1, #0
    9ac8:	beq	9c08 <error@@Base+0x3a60>
    9acc:	mov	r0, r3
    9ad0:	mov	r2, r5
    9ad4:	str	r3, [sp, #40]	; 0x28
    9ad8:	bl	7da8 <error@@Base+0x1c00>
    9adc:	ldr	r3, [sp, #40]	; 0x28
    9ae0:	cmp	r0, #0
    9ae4:	blt	9eb0 <error@@Base+0x3d08>
    9ae8:	ldr	r3, [r3, #28]
    9aec:	tst	r3, #2
    9af0:	beq	99c4 <error@@Base+0x381c>
    9af4:	mov	r0, #0
    9af8:	bl	1b74 <exit@plt>
    9afc:	tst	r2, #65536	; 0x10000
    9b00:	beq	95c4 <error@@Base+0x341c>
    9b04:	bl	94b8 <error@@Base+0x3310>
    9b08:	mov	r0, #0
    9b0c:	bl	1b74 <exit@plt>
    9b10:	mov	r3, #0
    9b14:	mov	r2, #1024	; 0x400
    9b18:	ldr	r1, [sp, #44]	; 0x2c
    9b1c:	mov	r0, r4
    9b20:	bl	7c20 <error@@Base+0x1a78>
    9b24:	subs	r3, r0, #0
    9b28:	beq	9dc0 <error@@Base+0x3c18>
    9b2c:	cmp	r5, #43	; 0x2b
    9b30:	beq	9b44 <error@@Base+0x399c>
    9b34:	cmp	r5, #45	; 0x2d
    9b38:	movne	r5, #44	; 0x2c
    9b3c:	bne	9a94 <error@@Base+0x38ec>
    9b40:	b	9a84 <error@@Base+0x38dc>
    9b44:	ldr	r2, [r3, #24]
    9b48:	cmp	r2, #0
    9b4c:	bne	9a94 <error@@Base+0x38ec>
    9b50:	mov	r2, r8
    9b54:	ldr	r0, [sl]
    9b58:	mov	r1, #0
    9b5c:	bl	7fc4 <error@@Base+0x1e1c>
    9b60:	b	97b4 <error@@Base+0x360c>
    9b64:	mov	r3, #2560	; 0xa00
    9b68:	mov	r2, #0
    9b6c:	ldr	r1, [sp, #44]	; 0x2c
    9b70:	add	r0, r7, #2
    9b74:	bl	7c20 <error@@Base+0x1a78>
    9b78:	subs	r3, r0, #0
    9b7c:	bne	9b2c <error@@Base+0x3984>
    9b80:	ldrb	r1, [r7, #2]
    9b84:	cmp	r1, #0
    9b88:	cmpeq	r5, #45	; 0x2d
    9b8c:	moveq	r1, #1
    9b90:	movne	r1, #0
    9b94:	bne	9f60 <error@@Base+0x3db8>
    9b98:	mov	r6, r3
    9b9c:	b	99c4 <error@@Base+0x381c>
    9ba0:	ldr	r2, [r3, #24]
    9ba4:	cmp	r2, #0
    9ba8:	bne	9b50 <error@@Base+0x39a8>
    9bac:	b	9a90 <error@@Base+0x38e8>
    9bb0:	ldr	r3, [sp, #24]
    9bb4:	cmp	r6, #0
    9bb8:	str	r3, [sp, #56]	; 0x38
    9bbc:	str	r3, [sp, #36]	; 0x24
    9bc0:	mov	r9, r3
    9bc4:	bne	9688 <error@@Base+0x34e0>
    9bc8:	ldr	r3, [sp, #16]
    9bcc:	cmp	r3, #1
    9bd0:	strle	r6, [sp, #12]
    9bd4:	mov	r3, r6
    9bd8:	ble	98d4 <error@@Base+0x372c>
    9bdc:	mov	r5, r3
    9be0:	str	r3, [sp, #32]
    9be4:	mov	r4, r3
    9be8:	b	96e0 <error@@Base+0x3538>
    9bec:	ldr	r2, [sl]
    9bf0:	mov	r3, r8
    9bf4:	mov	r0, sl
    9bf8:	ldrb	r1, [r2]
    9bfc:	ldr	r2, [sp, #64]	; 0x40
    9c00:	bl	89bc <error@@Base+0x2814>
    9c04:	b	97b4 <error@@Base+0x360c>
    9c08:	ldr	ip, [sp, #16]
    9c0c:	add	r0, r8, #1
    9c10:	cmp	ip, r0
    9c14:	orr	r2, r2, r9
    9c18:	ble	9c44 <error@@Base+0x3a9c>
    9c1c:	tst	r2, #64	; 0x40
    9c20:	beq	9c44 <error@@Base+0x3a9c>
    9c24:	ldr	r1, [sl, #4]
    9c28:	mov	r8, r0
    9c2c:	str	r1, [sp, #64]	; 0x40
    9c30:	b	9acc <error@@Base+0x3924>
    9c34:	mov	r2, r8
    9c38:	mov	r0, sl
    9c3c:	bl	8adc <error@@Base+0x2934>
    9c40:	b	97b4 <error@@Base+0x360c>
    9c44:	ands	r2, r2, #4096	; 0x1000
    9c48:	bne	9acc <error@@Base+0x3924>
    9c4c:	mov	r0, r3
    9c50:	mov	r3, r2
    9c54:	mov	r1, r3
    9c58:	mov	r2, r8
    9c5c:	bl	8adc <error@@Base+0x2934>
    9c60:	b	97b4 <error@@Base+0x360c>
    9c64:	mov	r2, r8
    9c68:	mov	r0, sl
    9c6c:	bl	88c4 <error@@Base+0x271c>
    9c70:	b	97b4 <error@@Base+0x360c>
    9c74:	ldr	r3, [sp, #12]
    9c78:	cmp	r3, #0
    9c7c:	beq	97bc <error@@Base+0x3614>
    9c80:	ldr	r3, [sp, #36]	; 0x24
    9c84:	cmp	r3, #0
    9c88:	beq	9cac <error@@Base+0x3b04>
    9c8c:	add	r2, sp, #320	; 0x140
    9c90:	ldr	r1, [sp, #36]	; 0x24
    9c94:	add	r2, r2, #3
    9c98:	mov	r3, #0
    9c9c:	strb	r3, [r2, #1]!
    9ca0:	add	r3, r3, #1
    9ca4:	cmp	r1, r3
    9ca8:	bne	9c9c <error@@Base+0x3af4>
    9cac:	ldr	r3, [sp, #12]
    9cb0:	ldr	r2, [sp, #56]	; 0x38
    9cb4:	sub	r0, r3, r2
    9cb8:	cmp	r0, r3
    9cbc:	sub	r9, r9, r2
    9cc0:	bge	9cf0 <error@@Base+0x3b48>
    9cc4:	ldr	r2, [sp, #12]
    9cc8:	sub	r3, r0, #1
    9ccc:	add	r1, r2, r9
    9cd0:	add	r2, sp, #324	; 0x144
    9cd4:	add	r2, r2, r3
    9cd8:	sub	r1, r1, r0
    9cdc:	mov	r3, r9
    9ce0:	strb	r3, [r2, #1]!
    9ce4:	add	r3, r3, #1
    9ce8:	cmp	r3, r1
    9cec:	bne	9ce0 <error@@Base+0x3b38>
    9cf0:	cmp	r0, r9
    9cf4:	ldr	r2, [sp, #36]	; 0x24
    9cf8:	movge	r3, r9
    9cfc:	movlt	r3, r0
    9d00:	cmp	r2, r3
    9d04:	movge	r3, r2
    9d08:	bge	9d64 <error@@Base+0x3bbc>
    9d0c:	ldr	r1, [sp, #36]	; 0x24
    9d10:	add	r2, sp, #324	; 0x144
    9d14:	sub	r3, r1, #1
    9d18:	ldr	lr, [sp, #24]
    9d1c:	add	r2, r2, r3
    9d20:	mov	ip, r1
    9d24:	add	r3, ip, ip, lsl #2
    9d28:	add	r1, r1, #1
    9d2c:	add	r3, lr, r3, lsl #2
    9d30:	strb	ip, [r2, #1]!
    9d34:	ldr	r3, [r3, #16]
    9d38:	tst	r3, #1
    9d3c:	addeq	ip, ip, #1
    9d40:	cmp	r0, r1
    9d44:	movle	r3, #0
    9d48:	movgt	r3, #1
    9d4c:	cmp	ip, r9
    9d50:	movge	r3, #0
    9d54:	cmp	r3, #0
    9d58:	bne	9d24 <error@@Base+0x3b7c>
    9d5c:	mov	r3, ip
    9d60:	str	r1, [sp, #36]	; 0x24
    9d64:	ldr	r2, [sp, #36]	; 0x24
    9d68:	cmp	r0, r2
    9d6c:	bgt	9ee4 <error@@Base+0x3d3c>
    9d70:	cmp	r9, r3
    9d74:	ble	9dc8 <error@@Base+0x3c20>
    9d78:	add	r1, r3, r3, lsl #2
    9d7c:	ldr	r2, [sp, #24]
    9d80:	lsl	r1, r1, #2
    9d84:	add	r0, r2, r1
    9d88:	ldr	r2, [r0, #16]
    9d8c:	and	r2, r2, #5
    9d90:	cmp	r2, #4
    9d94:	bne	9dc8 <error@@Base+0x3c20>
    9d98:	cmp	r3, #0
    9d9c:	bne	9f08 <error@@Base+0x3d60>
    9da0:	ldr	r0, [pc, #484]	; 9f8c <error@@Base+0x3de4>
    9da4:	add	r0, pc, r0
    9da8:	bl	7f2c <error@@Base+0x1d84>
    9dac:	b	97b4 <error@@Base+0x360c>
    9db0:	str	r3, [sp, #56]	; 0x38
    9db4:	str	r3, [sp, #36]	; 0x24
    9db8:	mov	r9, r3
    9dbc:	b	9680 <error@@Base+0x34d8>
    9dc0:	ldrb	r3, [r7, #1]
    9dc4:	b	9a5c <error@@Base+0x38b4>
    9dc8:	ldr	r2, [sp, #36]	; 0x24
    9dcc:	add	r1, sp, #584	; 0x248
    9dd0:	sub	r2, r2, #1
    9dd4:	add	r2, r1, r2
    9dd8:	ldrb	r1, [r2, #-260]	; 0xfffffefc
    9ddc:	cmp	r1, r3
    9de0:	beq	9e68 <error@@Base+0x3cc0>
    9de4:	add	r7, sp, #320	; 0x140
    9de8:	add	r7, r7, #3
    9dec:	mov	r5, #0
    9df0:	add	r8, sp, #68	; 0x44
    9df4:	ldr	sl, [sp, #24]
    9df8:	b	9e0c <error@@Base+0x3c64>
    9dfc:	ldr	r3, [sp, #12]
    9e00:	add	r5, r5, #1
    9e04:	cmp	r5, r3
    9e08:	beq	9ed8 <error@@Base+0x3d30>
    9e0c:	ldrb	r4, [r7, #1]!
    9e10:	add	r4, r4, r4, lsl #2
    9e14:	add	r4, sl, r4, lsl #2
    9e18:	ldr	r3, [r4, #8]
    9e1c:	cmp	r3, #0
    9e20:	beq	9dfc <error@@Base+0x3c54>
    9e24:	ldrb	r9, [r5, r8]
    9e28:	mov	r2, r5
    9e2c:	mov	r0, r4
    9e30:	sxth	r6, r9
    9e34:	ldr	r1, [fp, r6, lsl #2]
    9e38:	blx	r3
    9e3c:	add	r6, fp, r6, lsl #2
    9e40:	cmp	r0, #0
    9e44:	bge	9dfc <error@@Base+0x3c54>
    9e48:	ldr	r0, [pc, #320]	; 9f90 <error@@Base+0x3de8>
    9e4c:	ldr	r2, [r6]
    9e50:	ldr	r1, [r4]
    9e54:	add	r3, r5, #1
    9e58:	str	r9, [sp]
    9e5c:	add	r0, pc, r0
    9e60:	bl	7f2c <error@@Base+0x1d84>
    9e64:	b	97b4 <error@@Base+0x360c>
    9e68:	add	r3, r3, #1
    9e6c:	cmp	r9, r3
    9e70:	strbgt	r3, [r2, #-260]	; 0xfffffefc
    9e74:	b	9de4 <error@@Base+0x3c3c>
    9e78:	ldr	r0, [pc, #276]	; 9f94 <error@@Base+0x3dec>
    9e7c:	add	r0, pc, r0
    9e80:	bl	7f2c <error@@Base+0x1d84>
    9e84:	mvn	r3, #0
    9e88:	str	r3, [sp, #12]
    9e8c:	b	97bc <error@@Base+0x3614>
    9e90:	ldr	r0, [pc, #256]	; 9f98 <error@@Base+0x3df0>
    9e94:	mov	r2, r8
    9e98:	ldr	r1, [sl]
    9e9c:	add	r0, pc, r0
    9ea0:	bl	7f2c <error@@Base+0x1d84>
    9ea4:	b	97b4 <error@@Base+0x360c>
    9ea8:	str	r2, [sp, #12]
    9eac:	b	98c4 <error@@Base+0x371c>
    9eb0:	mov	r0, r3
    9eb4:	ldr	r2, [sp, #64]	; 0x40
    9eb8:	mov	r3, r8
    9ebc:	mov	r1, #0
    9ec0:	bl	89bc <error@@Base+0x2814>
    9ec4:	b	97b4 <error@@Base+0x360c>
    9ec8:	mov	r2, r8
    9ecc:	mov	r0, r3
    9ed0:	bl	88c4 <error@@Base+0x271c>
    9ed4:	b	97b4 <error@@Base+0x360c>
    9ed8:	mov	r3, #0
    9edc:	str	r3, [sp, #12]
    9ee0:	b	97bc <error@@Base+0x3614>
    9ee4:	add	r1, sp, #584	; 0x248
    9ee8:	add	r3, r1, r2
    9eec:	ldr	r0, [pc, #168]	; 9f9c <error@@Base+0x3df4>
    9ef0:	ldrb	r3, [r3, #-516]	; 0xfffffdfc
    9ef4:	add	r2, r2, #1
    9ef8:	add	r0, pc, r0
    9efc:	ldr	r1, [fp, r3, lsl #2]
    9f00:	bl	7f2c <error@@Base+0x1d84>
    9f04:	b	97b4 <error@@Base+0x360c>
    9f08:	ldr	r2, [sp, #36]	; 0x24
    9f0c:	add	r3, sp, #584	; 0x248
    9f10:	add	r3, r3, r2
    9f14:	ldr	r2, [r0, #-20]	; 0xffffffec
    9f18:	ldr	r0, [sp, #24]
    9f1c:	ldrb	r3, [r3, #-517]	; 0xfffffdfb
    9f20:	ldr	r1, [r0, r1]
    9f24:	ldr	r0, [pc, #116]	; 9fa0 <error@@Base+0x3df8>
    9f28:	ldr	r3, [fp, r3, lsl #2]
    9f2c:	add	r0, pc, r0
    9f30:	bl	7f2c <error@@Base+0x1d84>
    9f34:	b	97b4 <error@@Base+0x360c>
    9f38:	mov	r1, #0
    9f3c:	mov	r0, r6
    9f40:	bl	87a4 <error@@Base+0x25fc>
    9f44:	mov	r1, r0
    9f48:	ldr	r0, [pc, #84]	; 9fa4 <error@@Base+0x3dfc>
    9f4c:	add	r0, pc, r0
    9f50:	bl	7f2c <error@@Base+0x1d84>
    9f54:	mvn	r3, #0
    9f58:	str	r3, [sp, #12]
    9f5c:	b	97bc <error@@Base+0x3614>
    9f60:	mov	r2, r8
    9f64:	ldr	r0, [sl]
    9f68:	bl	7fc4 <error@@Base+0x1e1c>
    9f6c:	b	97b4 <error@@Base+0x360c>
    9f70:	bl	1a9c <__stack_chk_fail@plt>
    9f74:	andeq	r3, r1, r8, asr #18
    9f78:	andeq	r0, r0, r8, asr #2
    9f7c:	andeq	r2, r0, r8, asr #15
    9f80:	strheq	r5, [r1], -r0
    9f84:	strdeq	r2, [r0], -r4
    9f88:	ldrdeq	r2, [r0], -r4
    9f8c:	strheq	r2, [r0], -r4
    9f90:	andeq	r2, r0, r4, lsl #1
    9f94:	andeq	r1, r0, r8, ror #30
    9f98:	strdeq	r1, [r0], -r4
    9f9c:	andeq	r1, r0, r8, lsr pc
    9fa0:	andeq	r1, r0, ip, ror pc
    9fa4:	andeq	r1, r0, r0, ror lr
    9fa8:	ldr	r3, [r0, #20]
    9fac:	ldr	r0, [pc, #56]	; 9fec <error@@Base+0x3e44>
    9fb0:	cmp	r3, #0
    9fb4:	add	r0, pc, r0
    9fb8:	beq	9fe4 <error@@Base+0x3e3c>
    9fbc:	ldr	r1, [pc, #44]	; 9ff0 <error@@Base+0x3e48>
    9fc0:	push	{r4, lr}
    9fc4:	ldr	r0, [r0, r1]
    9fc8:	ldr	r2, [pc, #36]	; 9ff4 <error@@Base+0x3e4c>
    9fcc:	mov	r1, #1
    9fd0:	add	r2, pc, r2
    9fd4:	ldr	r0, [r0]
    9fd8:	bl	1c40 <__fprintf_chk@plt>
    9fdc:	mov	r0, #0
    9fe0:	pop	{r4, pc}
    9fe4:	mvn	r0, #0
    9fe8:	bx	lr
    9fec:	ldrdeq	r2, [r1], -ip
    9ff0:	andeq	r0, r0, ip, asr #2
    9ff4:	andeq	r1, r0, r0, lsl lr
    9ff8:	ldr	r3, [r0, #20]
    9ffc:	cmp	r3, #0
    a000:	movne	r2, #1
    a004:	movne	r0, #0
    a008:	strne	r2, [r3]
    a00c:	mvneq	r0, #0
    a010:	bx	lr
    a014:	ldr	r3, [r0, #20]
    a018:	cmp	r3, #0
    a01c:	movne	r0, #0
    a020:	strne	r0, [r3]
    a024:	mvneq	r0, #0
    a028:	bx	lr
    a02c:	ldr	r3, [r0, #20]
    a030:	cmp	r3, #0
    a034:	movne	r0, #0
    a038:	strne	r1, [r3]
    a03c:	mvneq	r0, #0
    a040:	bx	lr
    a044:	ldr	r3, [r0, #12]
    a048:	cmp	r3, #0
    a04c:	movne	r0, #0
    a050:	strne	r1, [r3]
    a054:	mvneq	r0, #0
    a058:	bx	lr
    a05c:	ldr	r0, [r0, #20]
    a060:	b	8310 <error@@Base+0x2168>
    a064:	ldr	r0, [r0, #20]
    a068:	b	8394 <error@@Base+0x21ec>
    a06c:	ldr	r0, [r0, #20]
    a070:	b	8418 <error@@Base+0x2270>
    a074:	ldr	r0, [r0, #12]
    a078:	b	8310 <error@@Base+0x2168>
    a07c:	ldr	r0, [r0, #12]
    a080:	b	8394 <error@@Base+0x21ec>
    a084:	ldr	r0, [r0, #12]
    a088:	b	8418 <error@@Base+0x2270>
    a08c:	ldr	r3, [r0, #20]
    a090:	cmp	r3, #0
    a094:	beq	a0b0 <error@@Base+0x3f08>
    a098:	ldr	r2, [r0, #8]
    a09c:	cmp	r2, #0
    a0a0:	beq	a0ac <error@@Base+0x3f04>
    a0a4:	mov	r0, r1
    a0a8:	bx	r3
    a0ac:	bx	r3
    a0b0:	mvn	r0, #0
    a0b4:	bx	lr
    a0b8:	ldr	r3, [r0, #12]
    a0bc:	mov	r0, r1
    a0c0:	cmp	r3, #0
    a0c4:	beq	a0d0 <error@@Base+0x3f28>
    a0c8:	mov	r1, r2
    a0cc:	bx	r3
    a0d0:	mvn	r0, #0
    a0d4:	bx	lr
    a0d8:	subs	r2, r1, #1
    a0dc:	bxeq	lr
    a0e0:	bcc	a2b8 <error@@Base+0x4110>
    a0e4:	cmp	r0, r1
    a0e8:	bls	a29c <error@@Base+0x40f4>
    a0ec:	tst	r1, r2
    a0f0:	beq	a2a8 <error@@Base+0x4100>
    a0f4:	clz	r3, r0
    a0f8:	clz	r2, r1
    a0fc:	sub	r3, r2, r3
    a100:	rsbs	r3, r3, #31
    a104:	addne	r3, r3, r3, lsl #1
    a108:	mov	r2, #0
    a10c:	addne	pc, pc, r3, lsl #2
    a110:	nop			; (mov r0, r0)
    a114:	cmp	r0, r1, lsl #31
    a118:	adc	r2, r2, r2
    a11c:	subcs	r0, r0, r1, lsl #31
    a120:	cmp	r0, r1, lsl #30
    a124:	adc	r2, r2, r2
    a128:	subcs	r0, r0, r1, lsl #30
    a12c:	cmp	r0, r1, lsl #29
    a130:	adc	r2, r2, r2
    a134:	subcs	r0, r0, r1, lsl #29
    a138:	cmp	r0, r1, lsl #28
    a13c:	adc	r2, r2, r2
    a140:	subcs	r0, r0, r1, lsl #28
    a144:	cmp	r0, r1, lsl #27
    a148:	adc	r2, r2, r2
    a14c:	subcs	r0, r0, r1, lsl #27
    a150:	cmp	r0, r1, lsl #26
    a154:	adc	r2, r2, r2
    a158:	subcs	r0, r0, r1, lsl #26
    a15c:	cmp	r0, r1, lsl #25
    a160:	adc	r2, r2, r2
    a164:	subcs	r0, r0, r1, lsl #25
    a168:	cmp	r0, r1, lsl #24
    a16c:	adc	r2, r2, r2
    a170:	subcs	r0, r0, r1, lsl #24
    a174:	cmp	r0, r1, lsl #23
    a178:	adc	r2, r2, r2
    a17c:	subcs	r0, r0, r1, lsl #23
    a180:	cmp	r0, r1, lsl #22
    a184:	adc	r2, r2, r2
    a188:	subcs	r0, r0, r1, lsl #22
    a18c:	cmp	r0, r1, lsl #21
    a190:	adc	r2, r2, r2
    a194:	subcs	r0, r0, r1, lsl #21
    a198:	cmp	r0, r1, lsl #20
    a19c:	adc	r2, r2, r2
    a1a0:	subcs	r0, r0, r1, lsl #20
    a1a4:	cmp	r0, r1, lsl #19
    a1a8:	adc	r2, r2, r2
    a1ac:	subcs	r0, r0, r1, lsl #19
    a1b0:	cmp	r0, r1, lsl #18
    a1b4:	adc	r2, r2, r2
    a1b8:	subcs	r0, r0, r1, lsl #18
    a1bc:	cmp	r0, r1, lsl #17
    a1c0:	adc	r2, r2, r2
    a1c4:	subcs	r0, r0, r1, lsl #17
    a1c8:	cmp	r0, r1, lsl #16
    a1cc:	adc	r2, r2, r2
    a1d0:	subcs	r0, r0, r1, lsl #16
    a1d4:	cmp	r0, r1, lsl #15
    a1d8:	adc	r2, r2, r2
    a1dc:	subcs	r0, r0, r1, lsl #15
    a1e0:	cmp	r0, r1, lsl #14
    a1e4:	adc	r2, r2, r2
    a1e8:	subcs	r0, r0, r1, lsl #14
    a1ec:	cmp	r0, r1, lsl #13
    a1f0:	adc	r2, r2, r2
    a1f4:	subcs	r0, r0, r1, lsl #13
    a1f8:	cmp	r0, r1, lsl #12
    a1fc:	adc	r2, r2, r2
    a200:	subcs	r0, r0, r1, lsl #12
    a204:	cmp	r0, r1, lsl #11
    a208:	adc	r2, r2, r2
    a20c:	subcs	r0, r0, r1, lsl #11
    a210:	cmp	r0, r1, lsl #10
    a214:	adc	r2, r2, r2
    a218:	subcs	r0, r0, r1, lsl #10
    a21c:	cmp	r0, r1, lsl #9
    a220:	adc	r2, r2, r2
    a224:	subcs	r0, r0, r1, lsl #9
    a228:	cmp	r0, r1, lsl #8
    a22c:	adc	r2, r2, r2
    a230:	subcs	r0, r0, r1, lsl #8
    a234:	cmp	r0, r1, lsl #7
    a238:	adc	r2, r2, r2
    a23c:	subcs	r0, r0, r1, lsl #7
    a240:	cmp	r0, r1, lsl #6
    a244:	adc	r2, r2, r2
    a248:	subcs	r0, r0, r1, lsl #6
    a24c:	cmp	r0, r1, lsl #5
    a250:	adc	r2, r2, r2
    a254:	subcs	r0, r0, r1, lsl #5
    a258:	cmp	r0, r1, lsl #4
    a25c:	adc	r2, r2, r2
    a260:	subcs	r0, r0, r1, lsl #4
    a264:	cmp	r0, r1, lsl #3
    a268:	adc	r2, r2, r2
    a26c:	subcs	r0, r0, r1, lsl #3
    a270:	cmp	r0, r1, lsl #2
    a274:	adc	r2, r2, r2
    a278:	subcs	r0, r0, r1, lsl #2
    a27c:	cmp	r0, r1, lsl #1
    a280:	adc	r2, r2, r2
    a284:	subcs	r0, r0, r1, lsl #1
    a288:	cmp	r0, r1
    a28c:	adc	r2, r2, r2
    a290:	subcs	r0, r0, r1
    a294:	mov	r0, r2
    a298:	bx	lr
    a29c:	moveq	r0, #1
    a2a0:	movne	r0, #0
    a2a4:	bx	lr
    a2a8:	clz	r2, r1
    a2ac:	rsb	r2, r2, #31
    a2b0:	lsr	r0, r0, r2
    a2b4:	bx	lr
    a2b8:	cmp	r0, #0
    a2bc:	mvnne	r0, #0
    a2c0:	b	a2e4 <error@@Base+0x413c>
    a2c4:	cmp	r1, #0
    a2c8:	beq	a2b8 <error@@Base+0x4110>
    a2cc:	push	{r0, r1, lr}
    a2d0:	bl	a0d8 <error@@Base+0x3f30>
    a2d4:	pop	{r1, r2, lr}
    a2d8:	mul	r3, r2, r0
    a2dc:	sub	r1, r1, r3
    a2e0:	bx	lr
    a2e4:	push	{r1, lr}
    a2e8:	mov	r0, #8
    a2ec:	bl	19dc <raise@plt>
    a2f0:	pop	{r1, pc}

0000a2f4 <__libc_csu_init@@Base>:
    a2f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    a2f8:	mov	r7, r0
    a2fc:	ldr	r6, [pc, #72]	; a34c <__libc_csu_init@@Base+0x58>
    a300:	ldr	r5, [pc, #72]	; a350 <__libc_csu_init@@Base+0x5c>
    a304:	add	r6, pc, r6
    a308:	add	r5, pc, r5
    a30c:	rsb	r6, r5, r6
    a310:	mov	r8, r1
    a314:	mov	r9, r2
    a318:	bl	1998 <fdopen@plt-0x20>
    a31c:	asrs	r6, r6, #2
    a320:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    a324:	mov	r4, #0
    a328:	add	r4, r4, #1
    a32c:	ldr	r3, [r5], #4
    a330:	mov	r2, r9
    a334:	mov	r1, r8
    a338:	mov	r0, r7
    a33c:	blx	r3
    a340:	cmp	r4, r6
    a344:	bne	a328 <__libc_csu_init@@Base+0x34>
    a348:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    a34c:	andeq	r2, r1, ip, lsr sl
    a350:	andeq	r2, r1, r0, lsl sl

0000a354 <__libc_csu_fini@@Base>:
    a354:	bx	lr

Disassembly of section .fini:

0000a358 <.fini>:
    a358:	push	{r3, lr}
    a35c:	pop	{r3, pc}
