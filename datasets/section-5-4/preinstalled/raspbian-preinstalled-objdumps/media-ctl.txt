
raspbian-preinstalled/media-ctl:     file format elf32-littlearm


Disassembly of section .init:

00010b70 <.init>:
   10b70:	push	{r3, lr}
   10b74:	bl	115e8 <close@plt+0x848>
   10b78:	pop	{r3, pc}

Disassembly of section .plt:

00010b7c <calloc@plt-0x14>:
   10b7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b80:	ldr	lr, [pc, #4]	; 10b8c <calloc@plt-0x4>
   10b84:	add	lr, pc, lr
   10b88:	ldr	pc, [lr, #8]!
   10b8c:			; <UNDEFINED> instruction: 0x000183b0

00010b90 <calloc@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #24, 20	; 0x18000
   10b98:	ldr	pc, [ip, #944]!	; 0x3b0

00010b9c <strstr@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #24, 20	; 0x18000
   10ba4:	ldr	pc, [ip, #936]!	; 0x3a8

00010ba8 <raise@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #24, 20	; 0x18000
   10bb0:	ldr	pc, [ip, #928]!	; 0x3a0

00010bb4 <strcmp@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #24, 20	; 0x18000
   10bbc:	ldr	pc, [ip, #920]!	; 0x398

00010bc0 <free@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #24, 20	; 0x18000
   10bc8:	ldr	pc, [ip, #912]!	; 0x390

00010bcc <fgets@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #24, 20	; 0x18000
   10bd4:	ldr	pc, [ip, #904]!	; 0x388

00010bd8 <strndup@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #24, 20	; 0x18000
   10be0:	ldr	pc, [ip, #896]!	; 0x380

00010be4 <memcpy@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #24, 20	; 0x18000
   10bec:	ldr	pc, [ip, #888]!	; 0x378

00010bf0 <udev_device_new_from_devnum@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #24, 20	; 0x18000
   10bf8:	ldr	pc, [ip, #880]!	; 0x370

00010bfc <udev_device_get_devnode@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #24, 20	; 0x18000
   10c04:	ldr	pc, [ip, #872]!	; 0x368

00010c08 <strdup@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #24, 20	; 0x18000
   10c10:	ldr	pc, [ip, #864]!	; 0x360

00010c14 <__stack_chk_fail@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #24, 20	; 0x18000
   10c1c:	ldr	pc, [ip, #856]!	; 0x358

00010c20 <realloc@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #24, 20	; 0x18000
   10c28:	ldr	pc, [ip, #848]!	; 0x350

00010c2c <strcasecmp@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #24, 20	; 0x18000
   10c34:	ldr	pc, [ip, #840]!	; 0x348

00010c38 <__xstat@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #24, 20	; 0x18000
   10c40:	ldr	pc, [ip, #832]!	; 0x340

00010c44 <readlink@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #24, 20	; 0x18000
   10c4c:	ldr	pc, [ip, #824]!	; 0x338

00010c50 <fwrite@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #24, 20	; 0x18000
   10c58:	ldr	pc, [ip, #816]!	; 0x330

00010c5c <ioctl@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #24, 20	; 0x18000
   10c64:	ldr	pc, [ip, #808]!	; 0x328

00010c68 <udev_new@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #24, 20	; 0x18000
   10c70:	ldr	pc, [ip, #800]!	; 0x320

00010c74 <__strcpy_chk@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #24, 20	; 0x18000
   10c7c:	ldr	pc, [ip, #792]!	; 0x318

00010c80 <puts@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #24, 20	; 0x18000
   10c88:	ldr	pc, [ip, #784]!	; 0x310

00010c8c <malloc@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #24, 20	; 0x18000
   10c94:	ldr	pc, [ip, #776]!	; 0x308

00010c98 <__libc_start_main@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #24, 20	; 0x18000
   10ca0:	ldr	pc, [ip, #768]!	; 0x300

00010ca4 <strerror@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #24, 20	; 0x18000
   10cac:	ldr	pc, [ip, #760]!	; 0x2f8

00010cb0 <__gmon_start__@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #24, 20	; 0x18000
   10cb8:	ldr	pc, [ip, #752]!	; 0x2f0

00010cbc <open@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #24, 20	; 0x18000
   10cc4:	ldr	pc, [ip, #744]!	; 0x2e8

00010cc8 <getopt_long@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #24, 20	; 0x18000
   10cd0:	ldr	pc, [ip, #736]!	; 0x2e0

00010cd4 <__ctype_b_loc@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #24, 20	; 0x18000
   10cdc:	ldr	pc, [ip, #728]!	; 0x2d8

00010ce0 <exit@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #24, 20	; 0x18000
   10ce8:	ldr	pc, [ip, #720]!	; 0x2d0

00010cec <udev_unref@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #24, 20	; 0x18000
   10cf4:	ldr	pc, [ip, #712]!	; 0x2c8

00010cf8 <strtoul@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #24, 20	; 0x18000
   10d00:	ldr	pc, [ip, #704]!	; 0x2c0

00010d04 <strlen@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #24, 20	; 0x18000
   10d0c:	ldr	pc, [ip, #696]!	; 0x2b8

00010d10 <strchr@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #24, 20	; 0x18000
   10d18:	ldr	pc, [ip, #688]!	; 0x2b0

00010d1c <fprintf@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #24, 20	; 0x18000
   10d24:	ldr	pc, [ip, #680]!	; 0x2a8

00010d28 <__errno_location@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #24, 20	; 0x18000
   10d30:	ldr	pc, [ip, #672]!	; 0x2a0

00010d34 <__sprintf_chk@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #24, 20	; 0x18000
   10d3c:	ldr	pc, [ip, #664]!	; 0x298

00010d40 <memset@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #24, 20	; 0x18000
   10d48:	ldr	pc, [ip, #656]!	; 0x290

00010d4c <putchar@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #24, 20	; 0x18000
   10d54:	ldr	pc, [ip, #648]!	; 0x288

00010d58 <strncpy@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #24, 20	; 0x18000
   10d60:	ldr	pc, [ip, #640]!	; 0x280

00010d64 <__printf_chk@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #24, 20	; 0x18000
   10d6c:	ldr	pc, [ip, #632]!	; 0x278

00010d70 <strrchr@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #24, 20	; 0x18000
   10d78:	ldr	pc, [ip, #624]!	; 0x270

00010d7c <udev_device_unref@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #24, 20	; 0x18000
   10d84:	ldr	pc, [ip, #616]!	; 0x268

00010d88 <strncmp@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #24, 20	; 0x18000
   10d90:	ldr	pc, [ip, #608]!	; 0x260

00010d94 <abort@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #24, 20	; 0x18000
   10d9c:	ldr	pc, [ip, #600]!	; 0x258

00010da0 <close@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #24, 20	; 0x18000
   10da8:	ldr	pc, [ip, #592]!	; 0x250

Disassembly of section .text:

00010dac <.text>:
   10dac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10db0:	sub	sp, sp, #220	; 0xdc
   10db4:	ldr	fp, [pc, #1884]	; 11518 <close@plt+0x778>
   10db8:	ldr	r3, [fp]
   10dbc:	str	r3, [sp, #212]	; 0xd4
   10dc0:	bl	123e8 <close@plt+0x1648>
   10dc4:	cmp	r0, #0
   10dc8:	movne	r0, #1
   10dcc:	beq	10de8 <close@plt+0x48>
   10dd0:	ldr	r2, [sp, #212]	; 0xd4
   10dd4:	ldr	r3, [fp]
   10dd8:	cmp	r2, r3
   10ddc:	bne	11514 <close@plt+0x774>
   10de0:	add	sp, sp, #220	; 0xdc
   10de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10de8:	ldr	sl, [pc, #1836]	; 1151c <close@plt+0x77c>
   10dec:	ldr	r0, [sl]
   10df0:	bl	136a8 <close@plt+0x2908>
   10df4:	subs	r8, r0, #0
   10df8:	beq	11410 <close@plt+0x670>
   10dfc:	ldrb	r3, [sl, #4]
   10e00:	tst	r3, #16
   10e04:	bne	11304 <close@plt+0x564>
   10e08:	mov	r0, r8
   10e0c:	bl	12e64 <close@plt+0x20c4>
   10e10:	subs	r4, r0, #0
   10e14:	blt	113c8 <close@plt+0x628>
   10e18:	ldrb	r3, [sl, #4]
   10e1c:	tst	r3, #2
   10e20:	bne	11318 <close@plt+0x578>
   10e24:	ldr	r5, [sl, #8]
   10e28:	cmp	r5, #0
   10e2c:	beq	10e44 <close@plt+0xa4>
   10e30:	mov	r1, r5
   10e34:	mov	r0, r8
   10e38:	bl	12a3c <close@plt+0x1c9c>
   10e3c:	subs	r5, r0, #0
   10e40:	beq	113e0 <close@plt+0x640>
   10e44:	ldr	r1, [sl, #20]
   10e48:	cmp	r1, #0
   10e4c:	beq	10e6c <close@plt+0xcc>
   10e50:	mov	r2, #0
   10e54:	mov	r0, r8
   10e58:	bl	13ae8 <close@plt+0x2d48>
   10e5c:	cmp	r0, #0
   10e60:	beq	1142c <close@plt+0x68c>
   10e64:	ldrd	r0, [r0]
   10e68:	bl	11738 <close@plt+0x998>
   10e6c:	ldr	r1, [sl, #24]
   10e70:	cmp	r1, #0
   10e74:	beq	10e94 <close@plt+0xf4>
   10e78:	mov	r2, #0
   10e7c:	mov	r0, r8
   10e80:	bl	13ae8 <close@plt+0x2d48>
   10e84:	cmp	r0, #0
   10e88:	beq	1145c <close@plt+0x6bc>
   10e8c:	ldr	r0, [r0]
   10e90:	bl	11ba0 <close@plt+0xe00>
   10e94:	ldr	r1, [sl, #28]
   10e98:	cmp	r1, #0
   10e9c:	beq	10edc <close@plt+0x13c>
   10ea0:	mov	r2, #0
   10ea4:	mov	r0, r8
   10ea8:	bl	13ae8 <close@plt+0x2d48>
   10eac:	subs	r6, r0, #0
   10eb0:	beq	1128c <close@plt+0x4ec>
   10eb4:	add	r1, sp, #48	; 0x30
   10eb8:	ldr	r0, [r6]
   10ebc:	bl	149fc <close@plt+0x3c5c>
   10ec0:	subs	r4, r0, #0
   10ec4:	blt	11440 <close@plt+0x6a0>
   10ec8:	add	r1, sp, #48	; 0x30
   10ecc:	ldr	r0, [r6]
   10ed0:	bl	14ad4 <close@plt+0x3d34>
   10ed4:	subs	r4, r0, #0
   10ed8:	blt	113f4 <close@plt+0x654>
   10edc:	ldrb	r3, [sl, #4]
   10ee0:	tst	r3, #4
   10ee4:	bne	10fe0 <close@plt+0x240>
   10ee8:	tst	r3, #2
   10eec:	beq	11398 <close@plt+0x5f8>
   10ef0:	cmp	r5, #0
   10ef4:	beq	11494 <close@plt+0x6f4>
   10ef8:	mov	r0, r5
   10efc:	bl	11c6c <close@plt+0xecc>
   10f00:	ldrb	r3, [sl, #4]
   10f04:	tst	r3, #8
   10f08:	beq	10f24 <close@plt+0x184>
   10f0c:	tst	r3, #16
   10f10:	bne	11420 <close@plt+0x680>
   10f14:	mov	r0, r8
   10f18:	bl	12da4 <close@plt+0x2004>
   10f1c:	subs	r4, r0, #0
   10f20:	bne	11470 <close@plt+0x6d0>
   10f24:	ldr	r1, [sl, #16]
   10f28:	cmp	r1, #0
   10f2c:	beq	10f40 <close@plt+0x1a0>
   10f30:	mov	r0, r8
   10f34:	bl	13f90 <close@plt+0x31f0>
   10f38:	subs	r4, r0, #0
   10f3c:	bne	114cc <close@plt+0x72c>
   10f40:	ldr	r1, [sl, #12]
   10f44:	cmp	r1, #0
   10f48:	beq	10f5c <close@plt+0x1bc>
   10f4c:	mov	r0, r8
   10f50:	bl	151a4 <close@plt+0x4404>
   10f54:	subs	r4, r0, #0
   10f58:	bne	114f0 <close@plt+0x750>
   10f5c:	ldrb	r0, [sl, #4]
   10f60:	ands	r0, r0, #1
   10f64:	moveq	r4, r0
   10f68:	beq	1129c <close@plt+0x4fc>
   10f6c:	ldr	r6, [pc, #1452]	; 11520 <close@plt+0x780>
   10f70:	ldr	r5, [pc, #1452]	; 11524 <close@plt+0x784>
   10f74:	ldr	r7, [pc, #1452]	; 11528 <close@plt+0x788>
   10f78:	mov	r0, r5
   10f7c:	bl	10c80 <puts@plt>
   10f80:	ldr	r2, [r6]
   10f84:	mov	r1, #32
   10f88:	add	r0, sp, #180	; 0xb4
   10f8c:	bl	10bcc <fgets@plt>
   10f90:	cmp	r0, #0
   10f94:	beq	11390 <close@plt+0x5f0>
   10f98:	ldrb	r3, [sp, #180]	; 0xb4
   10f9c:	cmp	r3, #10
   10fa0:	beq	11390 <close@plt+0x5f0>
   10fa4:	add	r2, sp, #44	; 0x2c
   10fa8:	add	r1, sp, #180	; 0xb4
   10fac:	mov	r0, r8
   10fb0:	bl	13d88 <close@plt+0x2fe8>
   10fb4:	cmp	r0, #0
   10fb8:	beq	10f78 <close@plt+0x1d8>
   10fbc:	rsb	r4, r0, #0
   10fc0:	mov	r0, r4
   10fc4:	bl	10ca4 <strerror@plt>
   10fc8:	mov	r3, r4
   10fcc:	mov	r1, r7
   10fd0:	mov	r2, r0
   10fd4:	mov	r0, #1
   10fd8:	bl	10d64 <__printf_chk@plt>
   10fdc:	b	10f78 <close@plt+0x1d8>
   10fe0:	mov	r0, r8
   10fe4:	bl	12b10 <close@plt+0x1d70>
   10fe8:	str	r0, [sp, #32]
   10fec:	ldr	r0, [pc, #1336]	; 1152c <close@plt+0x78c>
   10ff0:	bl	10c80 <puts@plt>
   10ff4:	ldr	r0, [pc, #1332]	; 11530 <close@plt+0x790>
   10ff8:	bl	10c80 <puts@plt>
   10ffc:	mov	r3, #0
   11000:	str	r3, [sp, #24]
   11004:	str	r8, [sp, #36]	; 0x24
   11008:	ldr	r3, [sp, #32]
   1100c:	ldr	r2, [sp, #24]
   11010:	cmp	r3, r2
   11014:	beq	113b8 <close@plt+0x618>
   11018:	ldr	r1, [sp, #24]
   1101c:	ldr	r0, [sp, #36]	; 0x24
   11020:	bl	12b18 <close@plt+0x1d78>
   11024:	mov	r4, r0
   11028:	bl	12be8 <close@plt+0x1e48>
   1102c:	mov	r6, r0
   11030:	mov	r0, r4
   11034:	bl	12b78 <close@plt+0x1dd8>
   11038:	mov	r8, r0
   1103c:	mov	r0, r4
   11040:	bl	12b54 <close@plt+0x1db4>
   11044:	str	r0, [sp, #28]
   11048:	mov	r0, r4
   1104c:	bl	12be8 <close@plt+0x1e48>
   11050:	ldr	r3, [pc, #1244]	; 11534 <close@plt+0x794>
   11054:	cmp	r8, #0
   11058:	moveq	r8, r3
   1105c:	ldr	r3, [r0, #36]	; 0x24
   11060:	and	r3, r3, #16711680	; 0xff0000
   11064:	cmp	r3, #65536	; 0x10000
   11068:	beq	112c0 <close@plt+0x520>
   1106c:	cmp	r3, #131072	; 0x20000
   11070:	bne	1126c <close@plt+0x4cc>
   11074:	ldr	r2, [r6]
   11078:	ldr	r1, [pc, #1208]	; 11538 <close@plt+0x798>
   1107c:	mov	r0, #1
   11080:	bl	10d64 <__printf_chk@plt>
   11084:	ldrh	r3, [r6, #52]	; 0x34
   11088:	cmp	r3, #0
   1108c:	beq	110ec <close@plt+0x34c>
   11090:	mov	r7, #0
   11094:	ldr	r9, [pc, #1184]	; 1153c <close@plt+0x79c>
   11098:	mov	r5, r7
   1109c:	mov	r1, r5
   110a0:	mov	r0, r4
   110a4:	bl	12b38 <close@plt+0x1d98>
   110a8:	ldr	r3, [r0, #8]
   110ac:	tst	r3, #1
   110b0:	beq	110dc <close@plt+0x33c>
   110b4:	ldr	r1, [pc, #1144]	; 11534 <close@plt+0x794>
   110b8:	cmp	r7, #0
   110bc:	ldr	r2, [pc, #1148]	; 11540 <close@plt+0x7a0>
   110c0:	str	r5, [sp]
   110c4:	moveq	r2, r1
   110c8:	mov	r3, r5
   110cc:	mov	r1, r9
   110d0:	mov	r0, #1
   110d4:	bl	10d64 <__printf_chk@plt>
   110d8:	add	r7, r7, #1
   110dc:	ldrh	r3, [r6, #52]	; 0x34
   110e0:	add	r5, r5, #1
   110e4:	cmp	r5, r3
   110e8:	bcc	1109c <close@plt+0x2fc>
   110ec:	add	r2, r6, #4
   110f0:	ldr	r1, [pc, #1100]	; 11544 <close@plt+0x7a4>
   110f4:	mov	r0, #1
   110f8:	bl	10d64 <__printf_chk@plt>
   110fc:	mov	r2, r8
   11100:	ldr	r1, [pc, #1088]	; 11548 <close@plt+0x7a8>
   11104:	mov	r0, #1
   11108:	bl	10d64 <__printf_chk@plt>
   1110c:	ldr	r1, [pc, #1080]	; 1154c <close@plt+0x7ac>
   11110:	mov	r0, #1
   11114:	bl	10d64 <__printf_chk@plt>
   11118:	ldrh	r3, [r6, #52]	; 0x34
   1111c:	cmp	r3, #0
   11120:	beq	11180 <close@plt+0x3e0>
   11124:	mov	r7, #0
   11128:	ldr	r8, [pc, #1036]	; 1153c <close@plt+0x79c>
   1112c:	mov	r5, r7
   11130:	mov	r1, r5
   11134:	mov	r0, r4
   11138:	bl	12b38 <close@plt+0x1d98>
   1113c:	ldr	r3, [r0, #8]
   11140:	tst	r3, #2
   11144:	beq	11170 <close@plt+0x3d0>
   11148:	ldr	r1, [pc, #996]	; 11534 <close@plt+0x794>
   1114c:	cmp	r7, #0
   11150:	ldr	r2, [pc, #1000]	; 11540 <close@plt+0x7a0>
   11154:	str	r5, [sp]
   11158:	moveq	r2, r1
   1115c:	mov	r3, r5
   11160:	mov	r1, r8
   11164:	mov	r0, #1
   11168:	bl	10d64 <__printf_chk@plt>
   1116c:	add	r7, r7, #1
   11170:	ldrh	r3, [r6, #52]	; 0x34
   11174:	add	r5, r5, #1
   11178:	cmp	r5, r3
   1117c:	bcc	11130 <close@plt+0x390>
   11180:	ldr	r0, [pc, #968]	; 11550 <close@plt+0x7b0>
   11184:	bl	10c80 <puts@plt>
   11188:	ldr	r3, [sp, #28]
   1118c:	cmp	r3, #0
   11190:	beq	1126c <close@plt+0x4cc>
   11194:	ldr	r9, [pc, #952]	; 11554 <close@plt+0x7b4>
   11198:	mov	r5, #0
   1119c:	b	111b0 <close@plt+0x410>
   111a0:	ldr	r3, [sp, #28]
   111a4:	add	r5, r5, #1
   111a8:	cmp	r3, r5
   111ac:	beq	1126c <close@plt+0x4cc>
   111b0:	mov	r1, r5
   111b4:	mov	r0, r4
   111b8:	bl	12b5c <close@plt+0x1dbc>
   111bc:	ldr	r8, [r0]
   111c0:	mov	r6, r0
   111c4:	ldr	r2, [r8]
   111c8:	cmp	r4, r2
   111cc:	bne	111a0 <close@plt+0x400>
   111d0:	mov	r0, r4
   111d4:	ldr	r7, [r6, #4]
   111d8:	bl	12be8 <close@plt+0x1e48>
   111dc:	ldr	r1, [pc, #884]	; 11558 <close@plt+0x7b8>
   111e0:	ldr	r2, [r0]
   111e4:	mov	r0, #1
   111e8:	bl	10d64 <__printf_chk@plt>
   111ec:	ldr	r0, [r8]
   111f0:	bl	12be8 <close@plt+0x1e48>
   111f4:	ldr	r2, [r0, #36]	; 0x24
   111f8:	and	r2, r2, #16711680	; 0xff0000
   111fc:	cmp	r2, #131072	; 0x20000
   11200:	beq	112f0 <close@plt+0x550>
   11204:	mov	r1, r9
   11208:	mov	r0, #1
   1120c:	bl	10d64 <__printf_chk@plt>
   11210:	ldr	r0, [r7]
   11214:	bl	12be8 <close@plt+0x1e48>
   11218:	ldr	r1, [pc, #828]	; 1155c <close@plt+0x7bc>
   1121c:	ldr	r2, [r0]
   11220:	mov	r0, #1
   11224:	bl	10d64 <__printf_chk@plt>
   11228:	ldr	r0, [r7]
   1122c:	bl	12be8 <close@plt+0x1e48>
   11230:	ldr	r3, [r0, #36]	; 0x24
   11234:	and	r3, r3, #16711680	; 0xff0000
   11238:	cmp	r3, #131072	; 0x20000
   1123c:	beq	112dc <close@plt+0x53c>
   11240:	ldr	r3, [r6, #12]
   11244:	tst	r3, #2
   11248:	bne	1127c <close@plt+0x4dc>
   1124c:	tst	r3, #1
   11250:	beq	112b0 <close@plt+0x510>
   11254:	mov	r0, #10
   11258:	bl	10d4c <putchar@plt>
   1125c:	ldr	r3, [sp, #28]
   11260:	add	r5, r5, #1
   11264:	cmp	r3, r5
   11268:	bne	111b0 <close@plt+0x410>
   1126c:	ldr	r3, [sp, #24]
   11270:	add	r3, r3, #1
   11274:	str	r3, [sp, #24]
   11278:	b	11008 <close@plt+0x268>
   1127c:	ldr	r1, [pc, #732]	; 11560 <close@plt+0x7c0>
   11280:	mov	r0, #1
   11284:	bl	10d64 <__printf_chk@plt>
   11288:	b	11254 <close@plt+0x4b4>
   1128c:	ldr	r2, [sl, #28]
   11290:	ldr	r1, [pc, #716]	; 11564 <close@plt+0x7c4>
   11294:	mov	r0, #1
   11298:	bl	10d64 <__printf_chk@plt>
   1129c:	mov	r0, r8
   112a0:	bl	1361c <close@plt+0x287c>
   112a4:	adds	r0, r4, #0
   112a8:	movne	r0, #1
   112ac:	b	10dd0 <close@plt+0x30>
   112b0:	ldr	r1, [pc, #688]	; 11568 <close@plt+0x7c8>
   112b4:	mov	r0, #1
   112b8:	bl	10d64 <__printf_chk@plt>
   112bc:	b	11254 <close@plt+0x4b4>
   112c0:	str	r8, [sp]
   112c4:	add	r3, r6, #4
   112c8:	ldr	r2, [r6]
   112cc:	ldr	r1, [pc, #664]	; 1156c <close@plt+0x7cc>
   112d0:	mov	r0, #1
   112d4:	bl	10d64 <__printf_chk@plt>
   112d8:	b	11188 <close@plt+0x3e8>
   112dc:	ldr	r2, [r7, #4]
   112e0:	ldr	r1, [pc, #648]	; 11570 <close@plt+0x7d0>
   112e4:	mov	r0, #1
   112e8:	bl	10d64 <__printf_chk@plt>
   112ec:	b	11240 <close@plt+0x4a0>
   112f0:	ldr	r2, [r8, #4]
   112f4:	ldr	r1, [pc, #628]	; 11570 <close@plt+0x7d0>
   112f8:	mov	r0, #1
   112fc:	bl	10d64 <__printf_chk@plt>
   11300:	b	11204 <close@plt+0x464>
   11304:	ldr	r3, [pc, #616]	; 11574 <close@plt+0x7d4>
   11308:	ldr	r1, [pc, #616]	; 11578 <close@plt+0x7d8>
   1130c:	ldr	r2, [r3]
   11310:	bl	135c0 <close@plt+0x2820>
   11314:	b	10e08 <close@plt+0x68>
   11318:	mov	r0, r8
   1131c:	bl	12bd8 <close@plt+0x1e38>
   11320:	ldr	r1, [pc, #596]	; 1157c <close@plt+0x7dc>
   11324:	mov	r5, r0
   11328:	ldrb	r3, [r0, #121]	; 0x79
   1132c:	ldrb	r2, [r0, #122]	; 0x7a
   11330:	ldrb	r0, [r0, #120]	; 0x78
   11334:	str	r0, [sp]
   11338:	mov	r0, #1
   1133c:	bl	10d64 <__printf_chk@plt>
   11340:	ldr	r3, [r5, #128]	; 0x80
   11344:	add	r0, r5, #48	; 0x30
   11348:	add	ip, r5, #88	; 0x58
   1134c:	lsr	r1, r3, #8
   11350:	lsr	r2, r3, #16
   11354:	uxtb	r1, r1
   11358:	uxtb	r2, r2
   1135c:	uxtb	r3, r3
   11360:	str	r1, [sp, #16]
   11364:	str	r3, [sp, #20]
   11368:	str	r2, [sp, #12]
   1136c:	ldr	r2, [r5, #124]	; 0x7c
   11370:	add	r3, r5, #16
   11374:	str	r2, [sp, #8]
   11378:	stm	sp, {r0, ip}
   1137c:	mov	r2, r5
   11380:	ldr	r1, [pc, #504]	; 11580 <close@plt+0x7e0>
   11384:	mov	r0, #1
   11388:	bl	10d64 <__printf_chk@plt>
   1138c:	b	10e24 <close@plt+0x84>
   11390:	mov	r4, #0
   11394:	b	1129c <close@plt+0x4fc>
   11398:	cmp	r5, #0
   1139c:	beq	10f00 <close@plt+0x160>
   113a0:	mov	r0, r5
   113a4:	bl	12b78 <close@plt+0x1dd8>
   113a8:	cmp	r0, #0
   113ac:	beq	10f00 <close@plt+0x160>
   113b0:	bl	10c80 <puts@plt>
   113b4:	b	10f00 <close@plt+0x160>
   113b8:	ldr	r0, [pc, #452]	; 11584 <close@plt+0x7e4>
   113bc:	ldr	r8, [sp, #36]	; 0x24
   113c0:	bl	10c80 <puts@plt>
   113c4:	b	10f00 <close@plt+0x160>
   113c8:	ldr	r2, [sl]
   113cc:	mov	r3, r4
   113d0:	ldr	r1, [pc, #432]	; 11588 <close@plt+0x7e8>
   113d4:	mov	r0, #1
   113d8:	bl	10d64 <__printf_chk@plt>
   113dc:	b	1129c <close@plt+0x4fc>
   113e0:	ldr	r2, [sl, #8]
   113e4:	ldr	r1, [pc, #416]	; 1158c <close@plt+0x7ec>
   113e8:	mov	r0, #1
   113ec:	bl	10d64 <__printf_chk@plt>
   113f0:	b	1129c <close@plt+0x4fc>
   113f4:	rsb	r0, r4, #0
   113f8:	bl	10ca4 <strerror@plt>
   113fc:	ldr	r1, [pc, #396]	; 11590 <close@plt+0x7f0>
   11400:	mov	r2, r0
   11404:	mov	r0, #1
   11408:	bl	10d64 <__printf_chk@plt>
   1140c:	b	1129c <close@plt+0x4fc>
   11410:	ldr	r0, [pc, #380]	; 11594 <close@plt+0x7f4>
   11414:	bl	10c80 <puts@plt>
   11418:	mvn	r4, #0
   1141c:	b	112a4 <close@plt+0x504>
   11420:	ldr	r0, [pc, #368]	; 11598 <close@plt+0x7f8>
   11424:	bl	10c80 <puts@plt>
   11428:	b	10f14 <close@plt+0x174>
   1142c:	ldr	r2, [sl, #20]
   11430:	ldr	r1, [pc, #300]	; 11564 <close@plt+0x7c4>
   11434:	mov	r0, #1
   11438:	bl	10d64 <__printf_chk@plt>
   1143c:	b	1129c <close@plt+0x4fc>
   11440:	rsb	r0, r4, #0
   11444:	bl	10ca4 <strerror@plt>
   11448:	ldr	r1, [pc, #332]	; 1159c <close@plt+0x7fc>
   1144c:	mov	r2, r0
   11450:	mov	r0, #1
   11454:	bl	10d64 <__printf_chk@plt>
   11458:	b	1129c <close@plt+0x4fc>
   1145c:	ldr	r2, [sl, #24]
   11460:	ldr	r1, [pc, #252]	; 11564 <close@plt+0x7c4>
   11464:	mov	r0, #1
   11468:	bl	10d64 <__printf_chk@plt>
   1146c:	b	1129c <close@plt+0x4fc>
   11470:	rsb	r5, r4, #0
   11474:	mov	r0, r5
   11478:	bl	10ca4 <strerror@plt>
   1147c:	mov	r3, r5
   11480:	ldr	r1, [pc, #280]	; 115a0 <close@plt+0x800>
   11484:	mov	r2, r0
   11488:	mov	r0, #1
   1148c:	bl	10d64 <__printf_chk@plt>
   11490:	b	1129c <close@plt+0x4fc>
   11494:	mov	r0, r8
   11498:	bl	12b10 <close@plt+0x1d70>
   1149c:	mov	r4, r0
   114a0:	ldr	r0, [pc, #252]	; 115a4 <close@plt+0x804>
   114a4:	bl	10c80 <puts@plt>
   114a8:	b	114c0 <close@plt+0x720>
   114ac:	mov	r1, r5
   114b0:	mov	r0, r8
   114b4:	bl	12b18 <close@plt+0x1d78>
   114b8:	bl	11c6c <close@plt+0xecc>
   114bc:	add	r5, r5, #1
   114c0:	cmp	r4, r5
   114c4:	bne	114ac <close@plt+0x70c>
   114c8:	b	10f00 <close@plt+0x160>
   114cc:	rsb	r5, r4, #0
   114d0:	mov	r0, r5
   114d4:	bl	10ca4 <strerror@plt>
   114d8:	mov	r3, r5
   114dc:	ldr	r1, [pc, #68]	; 11528 <close@plt+0x788>
   114e0:	mov	r2, r0
   114e4:	mov	r0, #1
   114e8:	bl	10d64 <__printf_chk@plt>
   114ec:	b	1129c <close@plt+0x4fc>
   114f0:	rsb	r5, r4, #0
   114f4:	mov	r0, r5
   114f8:	bl	10ca4 <strerror@plt>
   114fc:	mov	r3, r5
   11500:	ldr	r1, [pc, #160]	; 115a8 <close@plt+0x808>
   11504:	mov	r2, r0
   11508:	mov	r0, #1
   1150c:	bl	10d64 <__printf_chk@plt>
   11510:	b	1129c <close@plt+0x4fc>
   11514:	bl	10c14 <__stack_chk_fail@plt>
   11518:	andeq	r8, r2, r0, lsr lr
   1151c:	andeq	r9, r2, r8
   11520:	andeq	r9, r2, r0, asr #2
   11524:	andeq	r6, r1, r0, lsr #12
   11528:	ldrdeq	r6, [r1], -ip
   1152c:	andeq	r6, r1, r8, ror r4
   11530:	andeq	r6, r1, r8, lsl #9
   11534:	andeq	r6, r1, r0, lsr r3
   11538:	ldrdeq	r6, [r1], -r8
   1153c:	andeq	r6, r1, ip, ror #9
   11540:	strdeq	r6, [r1], -r0
   11544:	strdeq	r6, [r1], -ip
   11548:	andeq	r6, r1, r4, lsl #10
   1154c:	andeq	r6, r1, ip, lsl #10
   11550:	andeq	r6, r1, r4, lsl r5
   11554:	andeq	r6, r1, r8, asr r5
   11558:	andeq	r6, r1, r8, asr #10
   1155c:	andeq	r6, r1, r0, ror #10
   11560:	andeq	r6, r1, r8, ror #10
   11564:	andeq	r6, r1, r4, lsr #8
   11568:	andeq	r6, r1, r8, ror r5
   1156c:	muleq	r1, r4, r4
   11570:	andeq	r6, r1, r0, asr r5
   11574:	andeq	r9, r2, r4, asr #2
   11578:	andeq	r0, r1, ip, lsl sp
   1157c:	andeq	r6, r1, r4, lsr r3
   11580:	andeq	r6, r1, ip, asr r3
   11584:	andeq	r6, r1, r8, lsl #11
   11588:	andeq	r6, r1, r4, lsl r3
   1158c:	andeq	r6, r1, ip, lsl #8
   11590:	andeq	r6, r1, r8, asr r4
   11594:	strdeq	r6, [r1], -r4
   11598:	muleq	r1, ip, r5
   1159c:	andeq	r6, r1, r8, lsr r4
   115a0:			; <UNDEFINED> instruction: 0x000165bc
   115a4:	andeq	r6, r1, ip, lsl #11
   115a8:	strdeq	r6, [r1], -ip
   115ac:	mov	fp, #0
   115b0:	mov	lr, #0
   115b4:	pop	{r1}		; (ldr r1, [sp], #4)
   115b8:	mov	r2, sp
   115bc:	push	{r2}		; (str r2, [sp, #-4]!)
   115c0:	push	{r0}		; (str r0, [sp, #-4]!)
   115c4:	ldr	ip, [pc, #16]	; 115dc <close@plt+0x83c>
   115c8:	push	{ip}		; (str ip, [sp, #-4]!)
   115cc:	ldr	r0, [pc, #12]	; 115e0 <close@plt+0x840>
   115d0:	ldr	r3, [pc, #12]	; 115e4 <close@plt+0x844>
   115d4:	bl	10c98 <__libc_start_main@plt>
   115d8:	bl	10d94 <abort@plt>
   115dc:	andeq	r5, r1, ip, ror pc
   115e0:	andeq	r0, r1, ip, lsr #27
   115e4:	andeq	r5, r1, ip, lsl pc
   115e8:	ldr	r3, [pc, #20]	; 11604 <close@plt+0x864>
   115ec:	ldr	r2, [pc, #20]	; 11608 <close@plt+0x868>
   115f0:	add	r3, pc, r3
   115f4:	ldr	r2, [r3, r2]
   115f8:	cmp	r2, #0
   115fc:	bxeq	lr
   11600:	b	10cb0 <__gmon_start__@plt>
   11604:	andeq	r7, r1, r4, asr #18
   11608:	andeq	r0, r0, r0, asr #1
   1160c:	ldr	r0, [pc, #24]	; 1162c <close@plt+0x88c>
   11610:	ldr	r3, [pc, #24]	; 11630 <close@plt+0x890>
   11614:	cmp	r3, r0
   11618:	bxeq	lr
   1161c:	ldr	r3, [pc, #16]	; 11634 <close@plt+0x894>
   11620:	cmp	r3, #0
   11624:	bxeq	lr
   11628:	bx	r3
   1162c:	andeq	r9, r2, r8, lsr r1
   11630:	andeq	r9, r2, r8, lsr r1
   11634:	andeq	r0, r0, r0
   11638:	ldr	r0, [pc, #36]	; 11664 <close@plt+0x8c4>
   1163c:	ldr	r1, [pc, #36]	; 11668 <close@plt+0x8c8>
   11640:	sub	r1, r1, r0
   11644:	asr	r1, r1, #2
   11648:	add	r1, r1, r1, lsr #31
   1164c:	asrs	r1, r1, #1
   11650:	bxeq	lr
   11654:	ldr	r3, [pc, #16]	; 1166c <close@plt+0x8cc>
   11658:	cmp	r3, #0
   1165c:	bxeq	lr
   11660:	bx	r3
   11664:	andeq	r9, r2, r8, lsr r1
   11668:	andeq	r9, r2, r8, lsr r1
   1166c:	andeq	r0, r0, r0
   11670:	push	{r4, lr}
   11674:	ldr	r4, [pc, #24]	; 11694 <close@plt+0x8f4>
   11678:	ldrb	r3, [r4]
   1167c:	cmp	r3, #0
   11680:	popne	{r4, pc}
   11684:	bl	1160c <close@plt+0x86c>
   11688:	mov	r3, #1
   1168c:	strb	r3, [r4]
   11690:	pop	{r4, pc}
   11694:	andeq	r9, r2, ip, asr #2
   11698:	b	11638 <close@plt+0x898>
   1169c:	push	{r4, r5, r6, r7, r8, lr}
   116a0:	add	r4, r0, #4
   116a4:	mov	r5, r2
   116a8:	ldr	r7, [pc, #128]	; 11730 <close@plt+0x990>
   116ac:	add	r6, r4, r1, lsl #3
   116b0:	mov	r2, #1
   116b4:	b	116e0 <close@plt+0x940>
   116b8:	ldr	r2, [r4]
   116bc:	mov	r1, r7
   116c0:	mov	r0, #1
   116c4:	bl	10d64 <__printf_chk@plt>
   116c8:	ldr	r3, [r4, #-4]
   116cc:	mov	r2, #0
   116d0:	bic	r5, r5, r3
   116d4:	add	r4, r4, #8
   116d8:	cmp	r4, r6
   116dc:	beq	11700 <close@plt+0x960>
   116e0:	ldr	r3, [r4, #-4]
   116e4:	tst	r5, r3
   116e8:	beq	116d4 <close@plt+0x934>
   116ec:	cmp	r2, #0
   116f0:	bne	116b8 <close@plt+0x918>
   116f4:	mov	r0, #44	; 0x2c
   116f8:	bl	10d4c <putchar@plt>
   116fc:	b	116b8 <close@plt+0x918>
   11700:	cmp	r5, #0
   11704:	popeq	{r4, r5, r6, r7, r8, pc}
   11708:	cmp	r2, #0
   1170c:	beq	11724 <close@plt+0x984>
   11710:	mov	r2, r5
   11714:	ldr	r1, [pc, #24]	; 11734 <close@plt+0x994>
   11718:	mov	r0, #1
   1171c:	pop	{r4, r5, r6, r7, r8, lr}
   11720:	b	10d64 <__printf_chk@plt>
   11724:	mov	r0, #44	; 0x2c
   11728:	bl	10d4c <putchar@plt>
   1172c:	b	11710 <close@plt+0x970>
   11730:	andeq	r6, r1, r0, lsl #10
   11734:	andeq	r6, r1, r8, rrx
   11738:	push	{r4, r5, r6, r7, lr}
   1173c:	sub	sp, sp, #92	; 0x5c
   11740:	ldr	r5, [pc, #680]	; 119f0 <close@plt+0xc50>
   11744:	mov	ip, #0
   11748:	mov	r2, r1
   1174c:	ldr	lr, [r5]
   11750:	mov	r4, r1
   11754:	mov	r3, #1
   11758:	add	r1, sp, #36	; 0x24
   1175c:	str	lr, [sp, #84]	; 0x54
   11760:	str	ip, [sp, #12]
   11764:	str	ip, [sp, #16]
   11768:	mov	r6, r0
   1176c:	bl	142dc <close@plt+0x353c>
   11770:	cmp	r0, #0
   11774:	beq	11790 <close@plt+0x9f0>
   11778:	ldr	r2, [sp, #84]	; 0x54
   1177c:	ldr	r3, [r5]
   11780:	cmp	r2, r3
   11784:	bne	119ec <close@plt+0xc4c>
   11788:	add	sp, sp, #92	; 0x5c
   1178c:	pop	{r4, r5, r6, r7, pc}
   11790:	mov	r2, r4
   11794:	add	r1, sp, #12
   11798:	mov	r0, r6
   1179c:	bl	14b34 <close@plt+0x3d94>
   117a0:	adds	r3, r0, #25
   117a4:	movne	r3, #1
   117a8:	adds	r2, r0, #22
   117ac:	movne	r2, #1
   117b0:	cmp	r0, #0
   117b4:	moveq	r3, #0
   117b8:	tst	r2, r3
   117bc:	bne	11778 <close@plt+0x9d8>
   117c0:	ldr	r0, [sp, #44]	; 0x2c
   117c4:	bl	14d74 <close@plt+0x3fd4>
   117c8:	ldr	r2, [sp, #40]	; 0x28
   117cc:	ldr	r3, [sp, #36]	; 0x24
   117d0:	str	r2, [sp]
   117d4:	ldr	r1, [pc, #536]	; 119f4 <close@plt+0xc54>
   117d8:	mov	r2, r0
   117dc:	mov	r0, #1
   117e0:	bl	10d64 <__printf_chk@plt>
   117e4:	ldrd	r2, [sp, #12]
   117e8:	orrs	r1, r2, r3
   117ec:	bne	118a4 <close@plt+0xb04>
   117f0:	ldr	r0, [sp, #48]	; 0x30
   117f4:	cmp	r0, #0
   117f8:	bne	118bc <close@plt+0xb1c>
   117fc:	ldr	r0, [sp, #52]	; 0x34
   11800:	cmp	r0, #0
   11804:	bne	118dc <close@plt+0xb3c>
   11808:	mov	r7, #1
   1180c:	add	r1, sp, #20
   11810:	str	r7, [sp]
   11814:	mov	r3, #2
   11818:	mov	r2, r4
   1181c:	mov	r0, r6
   11820:	bl	14618 <close@plt+0x3878>
   11824:	cmp	r0, #0
   11828:	beq	11998 <close@plt+0xbf8>
   1182c:	mov	r7, #1
   11830:	str	r7, [sp]
   11834:	mov	r3, #0
   11838:	mov	r2, r4
   1183c:	add	r1, sp, #20
   11840:	mov	r0, r6
   11844:	bl	14618 <close@plt+0x3878>
   11848:	cmp	r0, #0
   1184c:	beq	11974 <close@plt+0xbd4>
   11850:	mov	r7, #1
   11854:	str	r7, [sp]
   11858:	ldr	r3, [pc, #408]	; 119f8 <close@plt+0xc58>
   1185c:	mov	r2, r4
   11860:	add	r1, sp, #20
   11864:	mov	r0, r6
   11868:	bl	14618 <close@plt+0x3878>
   1186c:	cmp	r0, #0
   11870:	beq	11950 <close@plt+0xbb0>
   11874:	mov	r7, #1
   11878:	mov	r2, r4
   1187c:	add	r1, sp, #20
   11880:	mov	r0, r6
   11884:	str	r7, [sp]
   11888:	mov	r3, #256	; 0x100
   1188c:	bl	14618 <close@plt+0x3878>
   11890:	cmp	r0, #0
   11894:	beq	1192c <close@plt+0xb8c>
   11898:	ldr	r0, [pc, #348]	; 119fc <close@plt+0xc5c>
   1189c:	bl	10c80 <puts@plt>
   118a0:	b	11778 <close@plt+0x9d8>
   118a4:	ldr	r1, [pc, #340]	; 11a00 <close@plt+0xc60>
   118a8:	mov	r0, #1
   118ac:	bl	10d64 <__printf_chk@plt>
   118b0:	ldr	r0, [sp, #48]	; 0x30
   118b4:	cmp	r0, #0
   118b8:	beq	117fc <close@plt+0xa5c>
   118bc:	bl	14e28 <close@plt+0x4088>
   118c0:	ldr	r1, [pc, #316]	; 11a04 <close@plt+0xc64>
   118c4:	mov	r2, r0
   118c8:	mov	r0, #1
   118cc:	bl	10d64 <__printf_chk@plt>
   118d0:	ldr	r0, [sp, #52]	; 0x34
   118d4:	cmp	r0, #0
   118d8:	beq	11808 <close@plt+0xa68>
   118dc:	bl	14ed8 <close@plt+0x4138>
   118e0:	ldr	r1, [pc, #288]	; 11a08 <close@plt+0xc68>
   118e4:	mov	r2, r0
   118e8:	mov	r0, #1
   118ec:	bl	10d64 <__printf_chk@plt>
   118f0:	ldrh	r0, [sp, #60]	; 0x3c
   118f4:	cmp	r0, #0
   118f8:	bne	119d4 <close@plt+0xc34>
   118fc:	ldrh	r0, [sp, #56]	; 0x38
   11900:	cmp	r0, #0
   11904:	bne	119bc <close@plt+0xc1c>
   11908:	ldrh	r0, [sp, #58]	; 0x3a
   1190c:	cmp	r0, #0
   11910:	beq	11808 <close@plt+0xa68>
   11914:	bl	150e8 <close@plt+0x4348>
   11918:	ldr	r1, [pc, #236]	; 11a0c <close@plt+0xc6c>
   1191c:	mov	r2, r0
   11920:	mov	r0, #1
   11924:	bl	10d64 <__printf_chk@plt>
   11928:	b	11808 <close@plt+0xa68>
   1192c:	ldr	r2, [sp, #32]
   11930:	ldr	r3, [sp, #28]
   11934:	str	r2, [sp, #4]
   11938:	str	r3, [sp]
   1193c:	mov	r0, r7
   11940:	ldrd	r2, [sp, #20]
   11944:	ldr	r1, [pc, #196]	; 11a10 <close@plt+0xc70>
   11948:	bl	10d64 <__printf_chk@plt>
   1194c:	b	11898 <close@plt+0xaf8>
   11950:	ldr	r2, [sp, #32]
   11954:	ldr	r3, [sp, #28]
   11958:	str	r2, [sp, #4]
   1195c:	str	r3, [sp]
   11960:	mov	r0, r7
   11964:	ldrd	r2, [sp, #20]
   11968:	ldr	r1, [pc, #164]	; 11a14 <close@plt+0xc74>
   1196c:	bl	10d64 <__printf_chk@plt>
   11970:	b	11874 <close@plt+0xad4>
   11974:	ldr	r2, [sp, #32]
   11978:	ldr	r3, [sp, #28]
   1197c:	str	r2, [sp, #4]
   11980:	str	r3, [sp]
   11984:	mov	r0, r7
   11988:	ldrd	r2, [sp, #20]
   1198c:	ldr	r1, [pc, #132]	; 11a18 <close@plt+0xc78>
   11990:	bl	10d64 <__printf_chk@plt>
   11994:	b	11850 <close@plt+0xab0>
   11998:	ldr	r2, [sp, #32]
   1199c:	ldr	r3, [sp, #28]
   119a0:	str	r2, [sp, #4]
   119a4:	str	r3, [sp]
   119a8:	mov	r0, r7
   119ac:	ldrd	r2, [sp, #20]
   119b0:	ldr	r1, [pc, #100]	; 11a1c <close@plt+0xc7c>
   119b4:	bl	10d64 <__printf_chk@plt>
   119b8:	b	1182c <close@plt+0xa8c>
   119bc:	bl	15038 <close@plt+0x4298>
   119c0:	ldr	r1, [pc, #88]	; 11a20 <close@plt+0xc80>
   119c4:	mov	r2, r0
   119c8:	mov	r0, #1
   119cc:	bl	10d64 <__printf_chk@plt>
   119d0:	b	11908 <close@plt+0xb68>
   119d4:	bl	14f88 <close@plt+0x41e8>
   119d8:	ldr	r1, [pc, #68]	; 11a24 <close@plt+0xc84>
   119dc:	mov	r2, r0
   119e0:	mov	r0, #1
   119e4:	bl	10d64 <__printf_chk@plt>
   119e8:	b	118fc <close@plt+0xb5c>
   119ec:	bl	10c14 <__stack_chk_fail@plt>
   119f0:	andeq	r8, r2, r0, lsr lr
   119f4:	andeq	r6, r1, r0, ror r0
   119f8:	andeq	r0, r0, r2, lsl #2
   119fc:	andeq	r6, r1, r4, ror r5
   11a00:	andeq	r6, r1, r0, lsl #1
   11a04:	andeq	r6, r1, r8, lsl #1
   11a08:	muleq	r1, r4, r0
   11a0c:	strheq	r6, [r1], -ip
   11a10:	andeq	r6, r1, ip, lsr #2
   11a14:	andeq	r6, r1, r8, lsl #2
   11a18:	strdeq	r6, [r1], -r0
   11a1c:	ldrdeq	r6, [r1], -r0
   11a20:	strheq	r6, [r1], -r0
   11a24:	andeq	r6, r1, r4, lsr #1
   11a28:	ldr	r3, [r0]
   11a2c:	push	{r4, r5, r6, r7, r8, r9, lr}
   11a30:	cmp	r3, #0
   11a34:	sub	sp, sp, #28
   11a38:	mov	r4, r0
   11a3c:	mov	r5, r1
   11a40:	ldreq	r3, [pc, #296]	; 11b70 <close@plt+0xdd0>
   11a44:	bne	11b50 <close@plt+0xdb0>
   11a48:	mov	r2, r5
   11a4c:	ldr	r1, [pc, #288]	; 11b74 <close@plt+0xdd4>
   11a50:	mov	r0, #1
   11a54:	bl	10d64 <__printf_chk@plt>
   11a58:	ldr	r3, [r4]
   11a5c:	cmp	r3, #0
   11a60:	bne	11b40 <close@plt+0xda0>
   11a64:	ldr	r6, [r4, #8]
   11a68:	ldr	r5, [r4, #40]	; 0x28
   11a6c:	ldr	r2, [r4, #44]	; 0x2c
   11a70:	ldr	r1, [r4, #48]	; 0x30
   11a74:	add	r5, r6, r5
   11a78:	add	r5, r5, r2
   11a7c:	ldr	r7, [r4, #4]
   11a80:	ldr	r2, [r4, #52]	; 0x34
   11a84:	ldr	r8, [r4, #28]
   11a88:	add	r5, r5, r1
   11a8c:	ldr	r0, [r4, #32]
   11a90:	ldr	ip, [r4, #56]	; 0x38
   11a94:	add	r5, r5, r2
   11a98:	ldr	r1, [r4, #60]	; 0x3c
   11a9c:	ldr	r2, [r4, #36]	; 0x24
   11aa0:	add	r8, r7, r8
   11aa4:	add	r8, r8, r0
   11aa8:	add	r5, r5, ip
   11aac:	add	r5, r5, r1
   11ab0:	add	r8, r8, r2
   11ab4:	ldr	r0, [r4, #12]
   11ab8:	mul	r2, r5, r8
   11abc:	ldr	r1, [pc, #180]	; 11b78 <close@plt+0xdd8>
   11ac0:	cmp	r0, #0
   11ac4:	ldr	r9, [pc, #176]	; 11b7c <close@plt+0xddc>
   11ac8:	moveq	r9, r1
   11acc:	cmp	r2, #0
   11ad0:	moveq	r0, #0
   11ad4:	moveq	r1, #0
   11ad8:	beq	11ae4 <close@plt+0xd44>
   11adc:	ldrd	r0, [r4, #20]
   11ae0:	bl	15da8 <close@plt+0x5008>
   11ae4:	mov	r3, r6
   11ae8:	strd	r0, [sp, #8]
   11aec:	mov	r2, r7
   11af0:	ldr	r1, [pc, #136]	; 11b80 <close@plt+0xde0>
   11af4:	str	r5, [sp, #20]
   11af8:	str	r8, [sp, #16]
   11afc:	str	r9, [sp]
   11b00:	mov	r0, #1
   11b04:	bl	10d64 <__printf_chk@plt>
   11b08:	ldr	r1, [pc, #116]	; 11b84 <close@plt+0xde4>
   11b0c:	mov	r0, #1
   11b10:	bl	10d64 <__printf_chk@plt>
   11b14:	ldr	r2, [r4, #64]	; 0x40
   11b18:	mov	r1, #5
   11b1c:	ldr	r0, [pc, #100]	; 11b88 <close@plt+0xde8>
   11b20:	bl	1169c <close@plt+0x8fc>
   11b24:	ldr	r1, [pc, #96]	; 11b8c <close@plt+0xdec>
   11b28:	mov	r0, #1
   11b2c:	bl	10d64 <__printf_chk@plt>
   11b30:	ldr	r2, [r4, #68]	; 0x44
   11b34:	mov	r1, #10
   11b38:	ldr	r0, [pc, #80]	; 11b90 <close@plt+0xdf0>
   11b3c:	bl	1169c <close@plt+0x8fc>
   11b40:	ldr	r0, [pc, #76]	; 11b94 <close@plt+0xdf4>
   11b44:	add	sp, sp, #28
   11b48:	pop	{r4, r5, r6, r7, r8, r9, lr}
   11b4c:	b	10c80 <puts@plt>
   11b50:	str	r3, [sp]
   11b54:	mov	r2, #20
   11b58:	ldr	r3, [pc, #56]	; 11b98 <close@plt+0xdf8>
   11b5c:	mov	r1, #1
   11b60:	ldr	r0, [pc, #52]	; 11b9c <close@plt+0xdfc>
   11b64:	bl	10d34 <__sprintf_chk@plt>
   11b68:	ldr	r3, [pc, #44]	; 11b9c <close@plt+0xdfc>
   11b6c:	b	11a48 <close@plt+0xca8>
   11b70:	andeq	r6, r1, r8, asr #2
   11b74:	andeq	r6, r1, ip, ror #2
   11b78:	andeq	r6, r1, r8, asr r1
   11b7c:	andeq	r6, r1, r4, asr r1
   11b80:	andeq	r6, r1, r8, ror r1
   11b84:	muleq	r1, r0, r1
   11b88:	andeq	r5, r1, ip, lsl #31
   11b8c:	muleq	r1, r8, r1
   11b90:			; <UNDEFINED> instruction: 0x00015fb4
   11b94:	andeq	r6, r1, r4, ror r5
   11b98:	andeq	r6, r1, ip, asr r1
   11b9c:	andeq	r9, r2, r0, asr r1
   11ba0:	push	{r4, r5, lr}
   11ba4:	sub	sp, sp, #140	; 0x8c
   11ba8:	ldr	r4, [pc, #164]	; 11c54 <close@plt+0xeb4>
   11bac:	mov	r1, sp
   11bb0:	mov	r5, r0
   11bb4:	ldr	r3, [r4]
   11bb8:	str	r3, [sp, #132]	; 0x84
   11bbc:	bl	149fc <close@plt+0x3c5c>
   11bc0:	cmn	r0, #37	; 0x25
   11bc4:	beq	11c44 <close@plt+0xea4>
   11bc8:	ble	11c14 <close@plt+0xe74>
   11bcc:	cmn	r0, #34	; 0x22
   11bd0:	beq	11c38 <close@plt+0xe98>
   11bd4:	cmp	r0, #0
   11bd8:	bne	11bfc <close@plt+0xe5c>
   11bdc:	ldr	r1, [pc, #116]	; 11c58 <close@plt+0xeb8>
   11be0:	mov	r0, sp
   11be4:	bl	11a28 <close@plt+0xc88>
   11be8:	mov	r0, r5
   11bec:	mov	r1, sp
   11bf0:	bl	14a68 <close@plt+0x3cc8>
   11bf4:	cmp	r0, #0
   11bf8:	beq	11c28 <close@plt+0xe88>
   11bfc:	ldr	r2, [sp, #132]	; 0x84
   11c00:	ldr	r3, [r4]
   11c04:	cmp	r2, r3
   11c08:	bne	11c50 <close@plt+0xeb0>
   11c0c:	add	sp, sp, #140	; 0x8c
   11c10:	pop	{r4, r5, pc}
   11c14:	cmn	r0, #67	; 0x43
   11c18:	bne	11bfc <close@plt+0xe5c>
   11c1c:	ldr	r0, [pc, #56]	; 11c5c <close@plt+0xebc>
   11c20:	bl	10c80 <puts@plt>
   11c24:	b	11be8 <close@plt+0xe48>
   11c28:	mov	r0, sp
   11c2c:	ldr	r1, [pc, #44]	; 11c60 <close@plt+0xec0>
   11c30:	bl	11a28 <close@plt+0xc88>
   11c34:	b	11bfc <close@plt+0xe5c>
   11c38:	ldr	r0, [pc, #36]	; 11c64 <close@plt+0xec4>
   11c3c:	bl	10c80 <puts@plt>
   11c40:	b	11be8 <close@plt+0xe48>
   11c44:	ldr	r0, [pc, #28]	; 11c68 <close@plt+0xec8>
   11c48:	bl	10c80 <puts@plt>
   11c4c:	b	11be8 <close@plt+0xe48>
   11c50:	bl	10c14 <__stack_chk_fail@plt>
   11c54:	andeq	r8, r2, r0, lsr lr
   11c58:	andeq	r6, r1, ip, ror #3
   11c5c:	andeq	r6, r1, r0, lsr #3
   11c60:	strdeq	r6, [r1], -r4
   11c64:	ldrdeq	r6, [r1], -r0
   11c68:			; <UNDEFINED> instruction: 0x000161b8
   11c6c:	ldr	r3, [pc, #988]	; 12050 <close@plt+0x12b0>
   11c70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c74:	sub	sp, sp, #188	; 0xbc
   11c78:	ldr	r3, [r3]
   11c7c:	mov	r5, r0
   11c80:	str	r3, [sp, #180]	; 0xb4
   11c84:	bl	12be8 <close@plt+0x1e48>
   11c88:	mov	r9, r0
   11c8c:	str	r0, [sp, #28]
   11c90:	mov	r0, r5
   11c94:	bl	12b78 <close@plt+0x1dd8>
   11c98:	mov	r7, r9
   11c9c:	mov	r4, r0
   11ca0:	mov	r0, r5
   11ca4:	bl	12b54 <close@plt+0x1db4>
   11ca8:	ldr	r2, [r7], #4
   11cac:	ldr	r1, [pc, #928]	; 12054 <close@plt+0x12b4>
   11cb0:	mov	r8, r0
   11cb4:	mov	r0, #1
   11cb8:	bl	10d64 <__printf_chk@plt>
   11cbc:	ldrh	r3, [r9, #52]	; 0x34
   11cc0:	ldr	r1, [pc, #912]	; 12058 <close@plt+0x12b8>
   11cc4:	mov	r2, r7
   11cc8:	cmp	r3, #1
   11ccc:	movhi	ip, r1
   11cd0:	str	r8, [sp, #4]
   11cd4:	mov	r6, r0
   11cd8:	ldr	r0, [pc, #892]	; 1205c <close@plt+0x12bc>
   11cdc:	movls	ip, r0
   11ce0:	cmp	r8, #1
   11ce4:	movls	r1, r0
   11ce8:	str	r1, [sp, #8]
   11cec:	str	ip, [sp]
   11cf0:	ldr	r1, [pc, #872]	; 12060 <close@plt+0x12c0>
   11cf4:	mov	r0, #1
   11cf8:	bl	10d64 <__printf_chk@plt>
   11cfc:	ldr	r3, [r9, #36]	; 0x24
   11d00:	and	r2, r3, #16711680	; 0xff0000
   11d04:	cmp	r2, #65536	; 0x10000
   11d08:	beq	12040 <close@plt+0x12a0>
   11d0c:	cmp	r2, #131072	; 0x20000
   11d10:	beq	11ff4 <close@plt+0x1254>
   11d14:	cmp	r2, #65536	; 0x10000
   11d18:	uxth	r3, r3
   11d1c:	beq	12014 <close@plt+0x1274>
   11d20:	cmp	r2, #131072	; 0x20000
   11d24:	ldr	r2, [pc, #824]	; 12064 <close@plt+0x12c4>
   11d28:	movne	r1, r2
   11d2c:	beq	11ffc <close@plt+0x125c>
   11d30:	ldr	r3, [sp, #28]
   11d34:	ldr	r0, [r3, #44]	; 0x2c
   11d38:	str	r1, [sp, #4]
   11d3c:	str	r0, [sp, #8]
   11d40:	str	r2, [sp]
   11d44:	mov	r3, #32
   11d48:	mov	r2, r6
   11d4c:	ldr	r1, [pc, #788]	; 12068 <close@plt+0x12c8>
   11d50:	mov	r0, #1
   11d54:	bl	10d64 <__printf_chk@plt>
   11d58:	cmp	r4, #0
   11d5c:	beq	11d78 <close@plt+0xfd8>
   11d60:	str	r4, [sp]
   11d64:	mov	r2, r6
   11d68:	mov	r3, #32
   11d6c:	ldr	r1, [pc, #760]	; 1206c <close@plt+0x12cc>
   11d70:	mov	r0, #1
   11d74:	bl	10d64 <__printf_chk@plt>
   11d78:	ldr	r3, [sp, #28]
   11d7c:	ldrh	r3, [r3, #52]	; 0x34
   11d80:	cmp	r3, #0
   11d84:	movne	r7, #0
   11d88:	beq	11e94 <close@plt+0x10f4>
   11d8c:	mov	r1, r7
   11d90:	mov	r0, r5
   11d94:	bl	12b38 <close@plt+0x1d98>
   11d98:	ldr	r3, [r0, #8]
   11d9c:	mov	r4, r0
   11da0:	tst	r3, #1
   11da4:	bne	1200c <close@plt+0x126c>
   11da8:	ldr	r2, [pc, #704]	; 12070 <close@plt+0x12d0>
   11dac:	tst	r3, #2
   11db0:	ldr	r3, [pc, #684]	; 12064 <close@plt+0x12c4>
   11db4:	movne	r3, r2
   11db8:	mov	r2, r7
   11dbc:	ldr	r1, [pc, #688]	; 12074 <close@plt+0x12d4>
   11dc0:	mov	r0, #1
   11dc4:	bl	10d64 <__printf_chk@plt>
   11dc8:	mov	r0, r5
   11dcc:	bl	12be8 <close@plt+0x1e48>
   11dd0:	ldr	r3, [r0, #36]	; 0x24
   11dd4:	and	r3, r3, #16711680	; 0xff0000
   11dd8:	cmp	r3, #131072	; 0x20000
   11ddc:	beq	11ee8 <close@plt+0x1148>
   11de0:	cmp	r8, #0
   11de4:	beq	11e80 <close@plt+0x10e0>
   11de8:	ldr	r9, [pc, #648]	; 12078 <close@plt+0x12d8>
   11dec:	ldr	sl, [pc, #648]	; 1207c <close@plt+0x12dc>
   11df0:	mov	r4, #0
   11df4:	b	11e04 <close@plt+0x1064>
   11df8:	add	r4, r4, #1
   11dfc:	cmp	r8, r4
   11e00:	beq	11e80 <close@plt+0x10e0>
   11e04:	mov	r1, r4
   11e08:	mov	r0, r5
   11e0c:	bl	12b5c <close@plt+0x1dbc>
   11e10:	ldm	r0, {r3, fp}
   11e14:	mov	r6, r0
   11e18:	ldr	r0, [r3]
   11e1c:	cmp	r5, r0
   11e20:	ldrne	r2, [fp]
   11e24:	beq	11eb8 <close@plt+0x1118>
   11e28:	cmp	r5, r2
   11e2c:	bne	11df8 <close@plt+0x1058>
   11e30:	ldr	r2, [fp, #4]
   11e34:	cmp	r2, r7
   11e38:	bne	11df8 <close@plt+0x1058>
   11e3c:	str	r3, [sp, #24]
   11e40:	bl	12be8 <close@plt+0x1e48>
   11e44:	ldr	r3, [sp, #24]
   11e48:	mov	r1, sl
   11e4c:	ldr	r3, [r3, #4]
   11e50:	add	r2, r0, #4
   11e54:	mov	r0, #1
   11e58:	bl	10d64 <__printf_chk@plt>
   11e5c:	ldr	r2, [r6, #12]
   11e60:	mov	r1, #3
   11e64:	mov	r0, r9
   11e68:	bl	1169c <close@plt+0x8fc>
   11e6c:	add	r4, r4, #1
   11e70:	ldr	r0, [pc, #520]	; 12080 <close@plt+0x12e0>
   11e74:	bl	10c80 <puts@plt>
   11e78:	cmp	r8, r4
   11e7c:	bne	11e04 <close@plt+0x1064>
   11e80:	ldr	r3, [sp, #28]
   11e84:	add	r7, r7, #1
   11e88:	ldrh	r3, [r3, #52]	; 0x34
   11e8c:	cmp	r7, r3
   11e90:	bcc	11d8c <close@plt+0xfec>
   11e94:	mov	r0, #10
   11e98:	bl	10d4c <putchar@plt>
   11e9c:	ldr	r3, [pc, #428]	; 12050 <close@plt+0x12b0>
   11ea0:	ldr	r2, [sp, #180]	; 0xb4
   11ea4:	ldr	r3, [r3]
   11ea8:	cmp	r2, r3
   11eac:	bne	1204c <close@plt+0x12ac>
   11eb0:	add	sp, sp, #188	; 0xbc
   11eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11eb8:	ldr	r1, [r3, #4]
   11ebc:	ldr	r2, [fp]
   11ec0:	cmp	r1, r7
   11ec4:	bne	11e28 <close@plt+0x1088>
   11ec8:	mov	r0, r2
   11ecc:	bl	12be8 <close@plt+0x1e48>
   11ed0:	ldr	r3, [fp, #4]
   11ed4:	ldr	r1, [pc, #424]	; 12084 <close@plt+0x12e4>
   11ed8:	add	r2, r0, #4
   11edc:	mov	r0, #1
   11ee0:	bl	10d64 <__printf_chk@plt>
   11ee4:	b	11e5c <close@plt+0x10bc>
   11ee8:	ldr	r1, [r4, #4]
   11eec:	mov	r0, r5
   11ef0:	bl	11738 <close@plt+0x998>
   11ef4:	ldr	r3, [r4, #4]
   11ef8:	add	r1, sp, #36	; 0x24
   11efc:	mov	r0, r5
   11f00:	str	r3, [sp, #40]	; 0x28
   11f04:	bl	14988 <close@plt+0x3be8>
   11f08:	cmp	r0, #0
   11f0c:	bne	11f40 <close@plt+0x11a0>
   11f10:	ldr	r3, [sp, #36]	; 0x24
   11f14:	cmp	r3, #0
   11f18:	ldreq	r2, [pc, #360]	; 12088 <close@plt+0x12e8>
   11f1c:	bne	11fd4 <close@plt+0x1234>
   11f20:	ldr	r1, [pc, #356]	; 1208c <close@plt+0x12ec>
   11f24:	mov	r0, #1
   11f28:	bl	10d64 <__printf_chk@plt>
   11f2c:	ldr	r3, [sp, #36]	; 0x24
   11f30:	cmp	r3, #0
   11f34:	beq	11f58 <close@plt+0x11b8>
   11f38:	ldr	r0, [pc, #320]	; 12080 <close@plt+0x12e0>
   11f3c:	bl	10c80 <puts@plt>
   11f40:	ldr	r3, [r4, #8]
   11f44:	tst	r3, #2
   11f48:	beq	11de0 <close@plt+0x1040>
   11f4c:	mov	r0, r5
   11f50:	bl	11ba0 <close@plt+0xe00>
   11f54:	b	11de0 <close@plt+0x1040>
   11f58:	ldr	r3, [sp, #76]	; 0x4c
   11f5c:	ldr	r2, [sp, #68]	; 0x44
   11f60:	str	r3, [sp, #16]
   11f64:	ldr	r3, [sp, #72]	; 0x48
   11f68:	ldr	ip, [sp, #80]	; 0x50
   11f6c:	ldr	r0, [sp, #64]	; 0x40
   11f70:	ldr	r1, [sp, #56]	; 0x38
   11f74:	str	ip, [sp, #20]
   11f78:	strd	r2, [sp]
   11f7c:	str	r0, [sp, #12]
   11f80:	ldr	r3, [sp, #60]	; 0x3c
   11f84:	ldr	r2, [sp, #52]	; 0x34
   11f88:	str	r1, [sp, #8]
   11f8c:	mov	r0, #1
   11f90:	ldr	r1, [pc, #248]	; 12090 <close@plt+0x12f0>
   11f94:	bl	10d64 <__printf_chk@plt>
   11f98:	ldr	r1, [pc, #244]	; 12094 <close@plt+0x12f4>
   11f9c:	mov	r0, #1
   11fa0:	bl	10d64 <__printf_chk@plt>
   11fa4:	ldr	r2, [sp, #84]	; 0x54
   11fa8:	mov	r1, #5
   11fac:	ldr	r0, [pc, #228]	; 12098 <close@plt+0x12f8>
   11fb0:	bl	1169c <close@plt+0x8fc>
   11fb4:	ldr	r1, [pc, #224]	; 1209c <close@plt+0x12fc>
   11fb8:	mov	r0, #1
   11fbc:	bl	10d64 <__printf_chk@plt>
   11fc0:	ldr	r2, [sp, #88]	; 0x58
   11fc4:	mov	r1, #4
   11fc8:	ldr	r0, [pc, #208]	; 120a0 <close@plt+0x1300>
   11fcc:	bl	1169c <close@plt+0x8fc>
   11fd0:	b	11f38 <close@plt+0x1198>
   11fd4:	str	r3, [sp]
   11fd8:	mov	r2, #20
   11fdc:	ldr	r3, [pc, #192]	; 120a4 <close@plt+0x1304>
   11fe0:	mov	r1, #1
   11fe4:	ldr	r0, [pc, #188]	; 120a8 <close@plt+0x1308>
   11fe8:	bl	10d34 <__sprintf_chk@plt>
   11fec:	ldr	r2, [pc, #180]	; 120a8 <close@plt+0x1308>
   11ff0:	b	11f20 <close@plt+0x1180>
   11ff4:	ldr	r2, [pc, #176]	; 120ac <close@plt+0x130c>
   11ff8:	uxth	r3, r3
   11ffc:	cmp	r3, #5
   12000:	bls	12030 <close@plt+0x1290>
   12004:	ldr	r1, [pc, #88]	; 12064 <close@plt+0x12c4>
   12008:	b	11d30 <close@plt+0xf90>
   1200c:	ldr	r3, [pc, #156]	; 120b0 <close@plt+0x1310>
   12010:	b	11db8 <close@plt+0x1018>
   12014:	ldr	r2, [pc, #72]	; 12064 <close@plt+0x12c4>
   12018:	cmp	r3, #4
   1201c:	bhi	12004 <close@plt+0x1264>
   12020:	ldr	r1, [pc, #112]	; 12098 <close@plt+0x12f8>
   12024:	add	r3, r1, r3, lsl #2
   12028:	ldr	r1, [r3, #120]	; 0x78
   1202c:	b	11d30 <close@plt+0xf90>
   12030:	ldr	r1, [pc, #96]	; 12098 <close@plt+0x12f8>
   12034:	add	r3, r1, r3, lsl #2
   12038:	ldr	r1, [r3, #140]	; 0x8c
   1203c:	b	11d30 <close@plt+0xf90>
   12040:	uxth	r3, r3
   12044:	ldr	r2, [pc, #104]	; 120b4 <close@plt+0x1314>
   12048:	b	12018 <close@plt+0x1278>
   1204c:	bl	10c14 <__stack_chk_fail@plt>
   12050:	andeq	r8, r2, r0, lsr lr
   12054:	andeq	r6, r1, r8, lsr #4
   12058:	muleq	r1, r0, r0
   1205c:	andeq	r6, r1, r0, lsr r3
   12060:	andeq	r6, r1, r8, lsr r2
   12064:	andeq	r6, r1, r4, lsl #4
   12068:	andeq	r6, r1, r4, asr r2
   1206c:	andeq	r6, r1, r4, ror r2
   12070:	andeq	r6, r1, r0, lsr #4
   12074:	andeq	r6, r1, ip, lsl #5
   12078:	andeq	r6, r1, r0, asr r0
   1207c:	andeq	r6, r1, r0, ror #5
   12080:	andeq	r6, r1, r4, ror r5
   12084:	ldrdeq	r6, [r1], -r0
   12088:	andeq	r6, r1, r8, asr #2
   1208c:	muleq	r1, r8, r2
   12090:	andeq	r6, r1, r8, lsr #5
   12094:	muleq	r1, r0, r1
   12098:	andeq	r5, r1, ip, lsl #31
   1209c:	andeq	r6, r1, r8, asr #5
   120a0:	andeq	r6, r1, r0, lsr r0
   120a4:	andeq	r6, r1, ip, asr r1
   120a8:	andeq	r9, r2, r0, asr r1
   120ac:	andeq	r6, r1, ip, lsl #4
   120b0:	andeq	r6, r1, r8, lsl r2
   120b4:	strdeq	r6, [r1], -ip
   120b8:	push	{r4, r5, r6, lr}
   120bc:	mov	r2, r0
   120c0:	ldr	r1, [pc, #600]	; 12320 <close@plt+0x1580>
   120c4:	mov	r0, #1
   120c8:	bl	10d64 <__printf_chk@plt>
   120cc:	ldr	r2, [pc, #592]	; 12324 <close@plt+0x1584>
   120d0:	ldr	r1, [pc, #592]	; 12328 <close@plt+0x1588>
   120d4:	mov	r0, #1
   120d8:	bl	10d64 <__printf_chk@plt>
   120dc:	ldr	r0, [pc, #584]	; 1232c <close@plt+0x158c>
   120e0:	bl	10c80 <puts@plt>
   120e4:	ldr	r0, [pc, #580]	; 12330 <close@plt+0x1590>
   120e8:	bl	10c80 <puts@plt>
   120ec:	ldr	r0, [pc, #576]	; 12334 <close@plt+0x1594>
   120f0:	bl	10c80 <puts@plt>
   120f4:	ldr	r0, [pc, #572]	; 12338 <close@plt+0x1598>
   120f8:	bl	10c80 <puts@plt>
   120fc:	ldr	r0, [pc, #568]	; 1233c <close@plt+0x159c>
   12100:	bl	10c80 <puts@plt>
   12104:	ldr	r0, [pc, #564]	; 12340 <close@plt+0x15a0>
   12108:	bl	10c80 <puts@plt>
   1210c:	ldr	r0, [pc, #560]	; 12344 <close@plt+0x15a4>
   12110:	bl	10c80 <puts@plt>
   12114:	ldr	r0, [pc, #556]	; 12348 <close@plt+0x15a8>
   12118:	bl	10c80 <puts@plt>
   1211c:	ldr	r0, [pc, #552]	; 1234c <close@plt+0x15ac>
   12120:	bl	10c80 <puts@plt>
   12124:	ldr	r0, [pc, #548]	; 12350 <close@plt+0x15b0>
   12128:	bl	10c80 <puts@plt>
   1212c:	ldr	r0, [pc, #544]	; 12354 <close@plt+0x15b4>
   12130:	bl	10c80 <puts@plt>
   12134:	ldr	r0, [pc, #540]	; 12358 <close@plt+0x15b8>
   12138:	bl	10c80 <puts@plt>
   1213c:	ldr	r0, [pc, #536]	; 1235c <close@plt+0x15bc>
   12140:	bl	10c80 <puts@plt>
   12144:	ldr	r0, [pc, #532]	; 12360 <close@plt+0x15c0>
   12148:	bl	10c80 <puts@plt>
   1214c:	ldr	r0, [pc, #528]	; 12364 <close@plt+0x15c4>
   12150:	bl	10c80 <puts@plt>
   12154:	mov	r0, #10
   12158:	bl	10d4c <putchar@plt>
   1215c:	ldr	r0, [pc, #516]	; 12368 <close@plt+0x15c8>
   12160:	bl	10c80 <puts@plt>
   12164:	ldr	r0, [pc, #512]	; 1236c <close@plt+0x15cc>
   12168:	bl	10c80 <puts@plt>
   1216c:	ldr	r0, [pc, #508]	; 12370 <close@plt+0x15d0>
   12170:	bl	10c80 <puts@plt>
   12174:	ldr	r0, [pc, #504]	; 12374 <close@plt+0x15d4>
   12178:	bl	10c80 <puts@plt>
   1217c:	ldr	r0, [pc, #500]	; 12378 <close@plt+0x15d8>
   12180:	bl	10c80 <puts@plt>
   12184:	mov	r0, #10
   12188:	bl	10d4c <putchar@plt>
   1218c:	ldr	r0, [pc, #488]	; 1237c <close@plt+0x15dc>
   12190:	bl	10c80 <puts@plt>
   12194:	ldr	r0, [pc, #484]	; 12380 <close@plt+0x15e0>
   12198:	bl	10c80 <puts@plt>
   1219c:	ldr	r0, [pc, #480]	; 12384 <close@plt+0x15e4>
   121a0:	bl	10c80 <puts@plt>
   121a4:	ldr	r0, [pc, #476]	; 12388 <close@plt+0x15e8>
   121a8:	bl	10c80 <puts@plt>
   121ac:	ldr	r0, [pc, #472]	; 1238c <close@plt+0x15ec>
   121b0:	bl	10c80 <puts@plt>
   121b4:	ldr	r0, [pc, #468]	; 12390 <close@plt+0x15f0>
   121b8:	bl	10c80 <puts@plt>
   121bc:	ldr	r0, [pc, #464]	; 12394 <close@plt+0x15f4>
   121c0:	bl	10c80 <puts@plt>
   121c4:	ldr	r0, [pc, #460]	; 12398 <close@plt+0x15f8>
   121c8:	bl	10c80 <puts@plt>
   121cc:	ldr	r0, [pc, #456]	; 1239c <close@plt+0x15fc>
   121d0:	bl	10c80 <puts@plt>
   121d4:	ldr	r0, [pc, #452]	; 123a0 <close@plt+0x1600>
   121d8:	bl	10c80 <puts@plt>
   121dc:	mov	r0, #10
   121e0:	bl	10d4c <putchar@plt>
   121e4:	ldr	r0, [pc, #440]	; 123a4 <close@plt+0x1604>
   121e8:	bl	10c80 <puts@plt>
   121ec:	ldr	r0, [pc, #436]	; 123a8 <close@plt+0x1608>
   121f0:	bl	10c80 <puts@plt>
   121f4:	mov	r0, #10
   121f8:	bl	10d4c <putchar@plt>
   121fc:	ldr	r0, [pc, #424]	; 123ac <close@plt+0x160c>
   12200:	bl	10c80 <puts@plt>
   12204:	ldr	r0, [pc, #420]	; 123b0 <close@plt+0x1610>
   12208:	bl	10c80 <puts@plt>
   1220c:	ldr	r0, [pc, #416]	; 123b4 <close@plt+0x1614>
   12210:	bl	10c80 <puts@plt>
   12214:	ldr	r0, [pc, #412]	; 123b8 <close@plt+0x1618>
   12218:	bl	10c80 <puts@plt>
   1221c:	ldr	r0, [pc, #408]	; 123bc <close@plt+0x161c>
   12220:	bl	10c80 <puts@plt>
   12224:	ldr	r0, [pc, #404]	; 123c0 <close@plt+0x1620>
   12228:	bl	10c80 <puts@plt>
   1222c:	ldr	r0, [pc, #400]	; 123c4 <close@plt+0x1624>
   12230:	bl	10c80 <puts@plt>
   12234:	ldr	r0, [pc, #396]	; 123c8 <close@plt+0x1628>
   12238:	bl	10c80 <puts@plt>
   1223c:	ldr	r0, [pc, #392]	; 123cc <close@plt+0x162c>
   12240:	bl	10c80 <puts@plt>
   12244:	ldr	r0, [pc, #388]	; 123d0 <close@plt+0x1630>
   12248:	bl	10c80 <puts@plt>
   1224c:	ldr	r0, [pc, #384]	; 123d4 <close@plt+0x1634>
   12250:	bl	10c80 <puts@plt>
   12254:	ldr	r5, [pc, #380]	; 123d8 <close@plt+0x1638>
   12258:	mov	r4, #0
   1225c:	mov	r0, r4
   12260:	bl	14e28 <close@plt+0x4088>
   12264:	add	r4, r4, #1
   12268:	mov	r1, r5
   1226c:	mov	r2, r0
   12270:	mov	r0, #1
   12274:	bl	10d64 <__printf_chk@plt>
   12278:	cmp	r4, #10
   1227c:	bne	1225c <close@plt+0x14bc>
   12280:	ldr	r0, [pc, #340]	; 123dc <close@plt+0x163c>
   12284:	bl	10c80 <puts@plt>
   12288:	ldr	r5, [pc, #328]	; 123d8 <close@plt+0x1638>
   1228c:	mov	r4, #0
   12290:	mov	r0, r4
   12294:	bl	14ed8 <close@plt+0x4138>
   12298:	add	r4, r4, #1
   1229c:	mov	r1, r5
   122a0:	mov	r2, r0
   122a4:	mov	r0, #1
   122a8:	bl	10d64 <__printf_chk@plt>
   122ac:	cmp	r4, #13
   122b0:	bne	12290 <close@plt+0x14f0>
   122b4:	ldr	r0, [pc, #292]	; 123e0 <close@plt+0x1640>
   122b8:	bl	10c80 <puts@plt>
   122bc:	ldr	r5, [pc, #276]	; 123d8 <close@plt+0x1638>
   122c0:	mov	r4, #0
   122c4:	mov	r0, r4
   122c8:	bl	14f88 <close@plt+0x41e8>
   122cc:	add	r4, r4, #1
   122d0:	mov	r1, r5
   122d4:	mov	r2, r0
   122d8:	mov	r0, #1
   122dc:	bl	10d64 <__printf_chk@plt>
   122e0:	cmp	r4, #8
   122e4:	bne	122c4 <close@plt+0x1524>
   122e8:	ldr	r0, [pc, #244]	; 123e4 <close@plt+0x1644>
   122ec:	bl	10c80 <puts@plt>
   122f0:	ldr	r5, [pc, #224]	; 123d8 <close@plt+0x1638>
   122f4:	mov	r4, #0
   122f8:	mov	r0, r4
   122fc:	bl	150e8 <close@plt+0x4348>
   12300:	add	r4, r4, #1
   12304:	mov	r1, r5
   12308:	mov	r2, r0
   1230c:	mov	r0, #1
   12310:	bl	10d64 <__printf_chk@plt>
   12314:	cmp	r4, #3
   12318:	bne	122f8 <close@plt+0x1558>
   1231c:	pop	{r4, r5, r6, pc}
   12320:	andeq	r6, r1, r4, lsl #15
   12324:	muleq	r1, r4, r7
   12328:	andeq	r6, r1, r0, lsr #15
   1232c:	ldrdeq	r6, [r1], -r4
   12330:	andeq	r6, r1, r0, lsr #16
   12334:	andeq	r6, r1, r0, ror #16
   12338:	muleq	r1, ip, r8
   1233c:	andeq	r6, r1, ip, ror #17
   12340:	andeq	r6, r1, r4, lsr #18
   12344:	andeq	r6, r1, ip, asr #18
   12348:	andeq	r6, r1, ip, ror r9
   1234c:	andeq	r6, r1, r0, asr #19
   12350:	andeq	r6, r1, ip, lsl #20
   12354:	andeq	r6, r1, ip, asr #20
   12358:	andeq	r6, r1, ip, ror sl
   1235c:	andeq	r6, r1, r4, lsr #21
   12360:	andeq	r6, r1, r0, ror #21
   12364:	andeq	r6, r1, ip, lsl #22
   12368:	andeq	r6, r1, r8, lsr #22
   1236c:	andeq	r6, r1, ip, asr #22
   12370:	andeq	r6, r1, r4, ror fp
   12374:	andeq	r6, r1, r4, lsr #23
   12378:	ldrdeq	r6, [r1], -r0
   1237c:	andeq	r6, r1, r0, lsl ip
   12380:	andeq	r6, r1, r4, asr #24
   12384:	andeq	r6, r1, r0, lsl #25
   12388:			; <UNDEFINED> instruction: 0x00016cbc
   1238c:	strdeq	r6, [r1], -r0
   12390:	andeq	r6, r1, r8, asr sp
   12394:			; <UNDEFINED> instruction: 0x00016db0
   12398:	andeq	r6, r1, r8, ror #27
   1239c:	andeq	r6, r1, r0, lsl lr
   123a0:	andeq	r6, r1, ip, lsr lr
   123a4:	andeq	r6, r1, r0, ror lr
   123a8:	andeq	r6, r1, r4, lsr #29
   123ac:	andeq	r6, r1, ip, asr #29
   123b0:	andeq	r6, r1, r4, ror #29
   123b4:	andeq	r6, r1, r0, lsl pc
   123b8:	andeq	r6, r1, r8, lsr pc
   123bc:	andeq	r6, r1, r0, ror #30
   123c0:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   123c4:			; <UNDEFINED> instruction: 0x00016fb8
   123c8:	andeq	r6, r1, r0, ror #31
   123cc:	andeq	r7, r1, r8
   123d0:	andeq	r7, r1, r4, lsr r0
   123d4:	andeq	r7, r1, r0, rrx
   123d8:	andeq	r7, r1, r8, lsl #1
   123dc:	andeq	r7, r1, r0, lsr #1
   123e0:	andeq	r7, r1, r8, asr #1
   123e4:	strdeq	r7, [r1], -r0
   123e8:	ldr	r3, [pc, #644]	; 12674 <close@plt+0x18d4>
   123ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123f0:	sub	sp, sp, #20
   123f4:	ldr	r3, [r3]
   123f8:	cmp	r0, #1
   123fc:	mov	r5, r0
   12400:	mov	r7, r1
   12404:	str	r3, [sp, #12]
   12408:	beq	12660 <close@plt+0x18c0>
   1240c:	ldr	r6, [pc, #612]	; 12678 <close@plt+0x18d8>
   12410:	ldr	r9, [pc, #612]	; 1267c <close@plt+0x18dc>
   12414:	ldr	sl, [pc, #612]	; 12680 <close@plt+0x18e0>
   12418:	ldr	fp, [pc, #612]	; 12684 <close@plt+0x18e4>
   1241c:	add	r8, r6, #32
   12420:	mov	r4, #0
   12424:	str	r4, [sp]
   12428:	mov	r3, r8
   1242c:	mov	r2, r9
   12430:	mov	r1, r7
   12434:	mov	r0, r5
   12438:	bl	10cc8 <getopt_long@plt>
   1243c:	cmn	r0, #1
   12440:	beq	12658 <close@plt+0x18b8>
   12444:	cmp	r0, #112	; 0x70
   12448:	beq	12548 <close@plt+0x17a8>
   1244c:	bgt	1247c <close@plt+0x16dc>
   12450:	cmp	r0, #102	; 0x66
   12454:	beq	1252c <close@plt+0x178c>
   12458:	bgt	124e0 <close@plt+0x1740>
   1245c:	cmp	r0, #100	; 0x64
   12460:	beq	12574 <close@plt+0x17d4>
   12464:	bgt	125b8 <close@plt+0x1818>
   12468:	cmp	r0, #86	; 0x56
   1246c:	bne	124a0 <close@plt+0x1700>
   12470:	ldr	r3, [fp]
   12474:	str	r3, [r6, #12]
   12478:	b	12420 <close@plt+0x1680>
   1247c:	cmp	r0, sl
   12480:	beq	12568 <close@plt+0x17c8>
   12484:	bgt	12508 <close@plt+0x1768>
   12488:	cmp	r0, #118	; 0x76
   1248c:	beq	12558 <close@plt+0x17b8>
   12490:	cmp	r0, #256	; 0x100
   12494:	beq	125a8 <close@plt+0x1808>
   12498:	cmp	r0, #114	; 0x72
   1249c:	beq	1258c <close@plt+0x17ec>
   124a0:	mov	r2, r0
   124a4:	ldr	r1, [pc, #476]	; 12688 <close@plt+0x18e8>
   124a8:	mov	r0, #1
   124ac:	bl	10d64 <__printf_chk@plt>
   124b0:	ldr	r2, [r7]
   124b4:	ldr	r1, [pc, #464]	; 1268c <close@plt+0x18ec>
   124b8:	mov	r0, #1
   124bc:	bl	10d64 <__printf_chk@plt>
   124c0:	mov	r0, #1
   124c4:	ldr	r3, [pc, #424]	; 12674 <close@plt+0x18d4>
   124c8:	ldr	r2, [sp, #12]
   124cc:	ldr	r3, [r3]
   124d0:	cmp	r2, r3
   124d4:	bne	12670 <close@plt+0x18d0>
   124d8:	add	sp, sp, #20
   124dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124e0:	cmp	r0, #105	; 0x69
   124e4:	beq	12648 <close@plt+0x18a8>
   124e8:	cmp	r0, #108	; 0x6c
   124ec:	beq	1259c <close@plt+0x17fc>
   124f0:	cmp	r0, #104	; 0x68
   124f4:	bne	124a0 <close@plt+0x1700>
   124f8:	ldr	r0, [r7]
   124fc:	bl	120b8 <close@plt+0x1318>
   12500:	mov	r0, r4
   12504:	bl	10ce0 <exit@plt>
   12508:	ldr	r3, [pc, #384]	; 12690 <close@plt+0x18f0>
   1250c:	cmp	r0, r3
   12510:	beq	125c4 <close@plt+0x1824>
   12514:	blt	12580 <close@plt+0x17e0>
   12518:	cmp	r0, #260	; 0x104
   1251c:	bne	124a0 <close@plt+0x1700>
   12520:	ldr	r3, [fp]
   12524:	str	r3, [r6, #24]
   12528:	b	12420 <close@plt+0x1680>
   1252c:	ldr	r3, [pc, #352]	; 12694 <close@plt+0x18f4>
   12530:	mov	r2, #66	; 0x42
   12534:	mov	r1, #1
   12538:	ldr	r3, [r3]
   1253c:	ldr	r0, [pc, #340]	; 12698 <close@plt+0x18f8>
   12540:	bl	10c50 <fwrite@plt>
   12544:	b	12470 <close@plt+0x16d0>
   12548:	ldrb	r3, [r6, #4]
   1254c:	orr	r3, r3, #2
   12550:	strb	r3, [r6, #4]
   12554:	b	12420 <close@plt+0x1680>
   12558:	ldrb	r3, [r6, #4]
   1255c:	orr	r3, r3, #16
   12560:	strb	r3, [r6, #4]
   12564:	b	12420 <close@plt+0x1680>
   12568:	ldr	r3, [fp]
   1256c:	str	r3, [r6, #20]
   12570:	b	12420 <close@plt+0x1680>
   12574:	ldr	r3, [fp]
   12578:	str	r3, [r6]
   1257c:	b	12420 <close@plt+0x1680>
   12580:	ldr	r3, [fp]
   12584:	str	r3, [r6, #28]
   12588:	b	12420 <close@plt+0x1680>
   1258c:	ldrb	r3, [r6, #4]
   12590:	orr	r3, r3, #8
   12594:	strb	r3, [r6, #4]
   12598:	b	12420 <close@plt+0x1680>
   1259c:	ldr	r3, [fp]
   125a0:	str	r3, [r6, #16]
   125a4:	b	12420 <close@plt+0x1680>
   125a8:	ldrb	r3, [r6, #4]
   125ac:	orr	r3, r3, #4
   125b0:	strb	r3, [r6, #4]
   125b4:	b	12420 <close@plt+0x1680>
   125b8:	ldr	r3, [fp]
   125bc:	str	r3, [r6, #8]
   125c0:	b	12420 <close@plt+0x1680>
   125c4:	add	r0, sp, #8
   125c8:	bl	15d94 <close@plt+0x4ff4>
   125cc:	ldr	r3, [sp, #8]
   125d0:	cmp	r3, #0
   125d4:	sub	r3, r3, #1
   125d8:	str	r3, [sp, #8]
   125dc:	beq	12640 <close@plt+0x18a0>
   125e0:	ldr	r6, [pc, #180]	; 1269c <close@plt+0x18fc>
   125e4:	sub	r4, r0, #4
   125e8:	mov	r7, #32
   125ec:	b	12620 <close@plt+0x1880>
   125f0:	bic	r3, r0, r0, asr #31
   125f4:	str	r1, [sp, #4]
   125f8:	str	r7, [sp]
   125fc:	mov	r2, r5
   12600:	mov	r1, r6
   12604:	mov	r0, #1
   12608:	bl	10d64 <__printf_chk@plt>
   1260c:	ldr	r3, [sp, #8]
   12610:	cmp	r3, #0
   12614:	sub	r3, r3, #1
   12618:	str	r3, [sp, #8]
   1261c:	beq	12640 <close@plt+0x18a0>
   12620:	ldr	r0, [r4, #4]!
   12624:	bl	14d74 <close@plt+0x3fd4>
   12628:	mov	r5, r0
   1262c:	bl	10d04 <strlen@plt>
   12630:	ldr	r1, [r4]
   12634:	cmp	r1, #0
   12638:	rsb	r0, r0, #30
   1263c:	bne	125f0 <close@plt+0x1850>
   12640:	mov	r0, #0
   12644:	bl	10ce0 <exit@plt>
   12648:	ldrb	r3, [r6, #4]
   1264c:	orr	r3, r3, #1
   12650:	strb	r3, [r6, #4]
   12654:	b	12420 <close@plt+0x1680>
   12658:	mov	r0, r4
   1265c:	b	124c4 <close@plt+0x1724>
   12660:	ldr	r0, [r1]
   12664:	bl	120b8 <close@plt+0x1318>
   12668:	mov	r0, r5
   1266c:	b	124c4 <close@plt+0x1724>
   12670:	bl	10c14 <__stack_chk_fail@plt>
   12674:	andeq	r8, r2, r0, lsr lr
   12678:	andeq	r9, r2, r8
   1267c:	muleq	r1, r8, r1
   12680:	andeq	r0, r0, r1, lsl #2
   12684:	andeq	r9, r2, r8, asr #2
   12688:	andeq	r7, r1, ip, ror #2
   1268c:	andeq	r7, r1, r0, lsl #3
   12690:	andeq	r0, r0, r3, lsl #2
   12694:	andeq	r9, r2, r8, lsr r1
   12698:	andeq	r7, r1, r8, lsl r1
   1269c:	andeq	r7, r1, ip, asr r1
   126a0:	push	{r0, r1, r2, r3}
   126a4:	add	sp, sp, #16
   126a8:	bx	lr
   126ac:	ldr	r2, [r0, #272]	; 0x110
   126b0:	push	{r4, r5, r6, lr}
   126b4:	mov	r4, r0
   126b8:	ldr	r5, [r0, #268]	; 0x10c
   126bc:	ldr	r0, [r0, #264]	; 0x108
   126c0:	cmp	r2, r5
   126c4:	lslcc	ip, r2, #3
   126c8:	bcs	126e0 <close@plt+0x1940>
   126cc:	sub	ip, ip, r2
   126d0:	add	r2, r2, #1
   126d4:	add	r0, r0, ip, lsl #2
   126d8:	str	r2, [r4, #272]	; 0x110
   126dc:	pop	{r4, r5, r6, pc}
   126e0:	rsb	r1, r5, r5, lsl #3
   126e4:	lsl	r5, r5, #1
   126e8:	lsl	r1, r1, #3
   126ec:	bl	10c20 <realloc@plt>
   126f0:	cmp	r0, #0
   126f4:	popeq	{r4, r5, r6, pc}
   126f8:	ldr	r2, [r4, #272]	; 0x110
   126fc:	cmp	r2, #0
   12700:	lslne	ip, r2, #3
   12704:	subne	lr, ip, r2
   12708:	movne	r3, r0
   1270c:	addne	lr, r0, lr, lsl #2
   12710:	beq	12734 <close@plt+0x1994>
   12714:	ldr	r1, [r3, #8]
   12718:	str	r3, [r1, #8]
   1271c:	add	r3, r3, #28
   12720:	cmp	r3, lr
   12724:	bne	12714 <close@plt+0x1974>
   12728:	str	r5, [r4, #268]	; 0x10c
   1272c:	str	r0, [r4, #264]	; 0x108
   12730:	b	126cc <close@plt+0x192c>
   12734:	mov	ip, r2
   12738:	b	12728 <close@plt+0x1988>
   1273c:	push	{r4, r5, r6, r7, lr}
   12740:	sub	sp, sp, #1184	; 0x4a0
   12744:	ldr	r6, [pc, #444]	; 12908 <close@plt+0x1b68>
   12748:	sub	sp, sp, #12
   1274c:	ldr	r2, [r0, #80]	; 0x50
   12750:	ldr	r3, [r0, #76]	; 0x4c
   12754:	ldr	ip, [r6]
   12758:	str	r2, [sp, #4]
   1275c:	str	r3, [sp]
   12760:	mov	r2, #32
   12764:	ldr	r3, [pc, #416]	; 1290c <close@plt+0x1b6c>
   12768:	mov	r1, #1
   1276c:	mov	r5, r0
   12770:	add	r0, sp, #132	; 0x84
   12774:	str	ip, [sp, #1188]	; 0x4a4
   12778:	bl	10d34 <__sprintf_chk@plt>
   1277c:	add	r0, sp, #132	; 0x84
   12780:	add	r1, sp, #164	; 0xa4
   12784:	ldr	r2, [pc, #388]	; 12910 <close@plt+0x1b70>
   12788:	bl	10c44 <readlink@plt>
   1278c:	cmp	r0, #0
   12790:	blt	12898 <close@plt+0x1af8>
   12794:	add	r3, sp, #1184	; 0x4a0
   12798:	add	r3, r3, #8
   1279c:	add	r3, r3, r0
   127a0:	mov	r2, #0
   127a4:	add	r0, sp, #164	; 0xa4
   127a8:	mov	r1, #47	; 0x2f
   127ac:	strb	r2, [r3, #-1028]	; 0xfffffbfc
   127b0:	bl	10d70 <strrchr@plt>
   127b4:	subs	r4, r0, #0
   127b8:	beq	128fc <close@plt+0x1b5c>
   127bc:	add	r7, r4, #1
   127c0:	ldr	r3, [pc, #332]	; 12914 <close@plt+0x1b74>
   127c4:	mov	r2, #32
   127c8:	mov	r1, #1
   127cc:	str	r7, [sp]
   127d0:	add	r0, sp, #100	; 0x64
   127d4:	bl	10d34 <__sprintf_chk@plt>
   127d8:	mov	r0, r7
   127dc:	ldr	r1, [pc, #308]	; 12918 <close@plt+0x1b78>
   127e0:	bl	10b9c <strstr@plt>
   127e4:	cmp	r0, #0
   127e8:	beq	128e0 <close@plt+0x1b40>
   127ec:	mov	r0, r7
   127f0:	mov	r2, #3
   127f4:	ldr	r1, [pc, #284]	; 12918 <close@plt+0x1b78>
   127f8:	bl	10d88 <strncmp@plt>
   127fc:	cmp	r0, #0
   12800:	bne	128fc <close@plt+0x1b5c>
   12804:	add	r4, r4, #4
   12808:	mov	r0, r4
   1280c:	mov	r1, #46	; 0x2e
   12810:	bl	10d10 <strchr@plt>
   12814:	cmp	r0, #0
   12818:	beq	128fc <close@plt+0x1b5c>
   1281c:	mov	r3, #47	; 0x2f
   12820:	strb	r3, [r0]
   12824:	mov	r2, #32
   12828:	ldr	r3, [pc, #236]	; 1291c <close@plt+0x1b7c>
   1282c:	str	r4, [sp]
   12830:	mov	r1, #1
   12834:	add	r0, sp, #100	; 0x64
   12838:	bl	10d34 <__sprintf_chk@plt>
   1283c:	add	r2, sp, #8
   12840:	add	r1, sp, #100	; 0x64
   12844:	mov	r0, #3
   12848:	bl	10c38 <__xstat@plt>
   1284c:	cmp	r0, #0
   12850:	blt	12898 <close@plt+0x1af8>
   12854:	ldr	r2, [sp, #40]	; 0x28
   12858:	ldr	r1, [sp, #44]	; 0x2c
   1285c:	ldr	r0, [r5, #76]	; 0x4c
   12860:	bic	r3, r1, #4080	; 0xff0
   12864:	lsl	ip, r2, #12
   12868:	bic	r3, r3, #15
   1286c:	orr	r3, r3, ip, lsr #20
   12870:	cmp	r0, r3
   12874:	beq	128a8 <close@plt+0x1b08>
   12878:	mov	r0, #0
   1287c:	ldr	r2, [sp, #1188]	; 0x4a4
   12880:	ldr	r3, [r6]
   12884:	cmp	r2, r3
   12888:	bne	12904 <close@plt+0x1b64>
   1288c:	add	sp, sp, #1184	; 0x4a0
   12890:	add	sp, sp, #12
   12894:	pop	{r4, r5, r6, r7, pc}
   12898:	bl	10d28 <__errno_location@plt>
   1289c:	ldr	r0, [r0]
   128a0:	rsb	r0, r0, #0
   128a4:	b	1287c <close@plt+0x1adc>
   128a8:	lsr	r3, r2, #12
   128ac:	orr	r3, r3, r1, lsl #20
   128b0:	bic	r3, r3, #255	; 0xff
   128b4:	uxtb	r2, r2
   128b8:	ldr	r1, [r5, #80]	; 0x50
   128bc:	orr	r2, r3, r2
   128c0:	cmp	r1, r2
   128c4:	bne	12878 <close@plt+0x1ad8>
   128c8:	add	r1, sp, #100	; 0x64
   128cc:	add	r0, r5, #276	; 0x114
   128d0:	mov	r2, #32
   128d4:	bl	10c74 <__strcpy_chk@plt>
   128d8:	mov	r0, #0
   128dc:	b	1287c <close@plt+0x1adc>
   128e0:	str	r7, [sp]
   128e4:	ldr	r3, [pc, #40]	; 12914 <close@plt+0x1b74>
   128e8:	mov	r2, #32
   128ec:	mov	r1, #1
   128f0:	add	r0, sp, #100	; 0x64
   128f4:	bl	10d34 <__sprintf_chk@plt>
   128f8:	b	1283c <close@plt+0x1a9c>
   128fc:	mvn	r0, #21
   12900:	b	1287c <close@plt+0x1adc>
   12904:	bl	10c14 <__stack_chk_fail@plt>
   12908:	andeq	r8, r2, r0, lsr lr
   1290c:			; <UNDEFINED> instruction: 0x000172bc
   12910:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   12914:	ldrdeq	r7, [r1], -r0
   12918:	ldrdeq	r7, [r1], -r8
   1291c:	ldrdeq	r7, [r1], -ip
   12920:	push	{r4, lr}
   12924:	mov	r1, #300	; 0x12c
   12928:	mov	r0, #1
   1292c:	bl	10b90 <calloc@plt>
   12930:	cmp	r0, #0
   12934:	popeq	{r4, pc}
   12938:	ldr	ip, [pc, #24]	; 12958 <close@plt+0x1bb8>
   1293c:	mvn	r1, #0
   12940:	mov	r2, #1
   12944:	mov	r3, #0
   12948:	str	ip, [r0, #276]	; 0x114
   1294c:	stm	r0, {r1, r2}
   12950:	str	r3, [r0, #280]	; 0x118
   12954:	pop	{r4, pc}
   12958:	andeq	r2, r1, r0, lsr #13
   1295c:	ldr	r3, [r0]
   12960:	push	{r4, r5, r6, lr}
   12964:	cmn	r3, #1
   12968:	bne	1299c <close@plt+0x1bfc>
   1296c:	mov	r4, r0
   12970:	ldr	r3, [r0, #276]	; 0x114
   12974:	ldr	r2, [r0, #8]
   12978:	ldr	r1, [pc, #84]	; 129d4 <close@plt+0x1c34>
   1297c:	ldr	r0, [r0, #280]	; 0x118
   12980:	blx	r3
   12984:	mov	r1, #2
   12988:	ldr	r0, [r4, #8]
   1298c:	bl	10cbc <open@plt>
   12990:	cmp	r0, #0
   12994:	str	r0, [r4]
   12998:	blt	129a8 <close@plt+0x1c08>
   1299c:	mov	r4, #0
   129a0:	mov	r0, r4
   129a4:	pop	{r4, r5, r6, pc}
   129a8:	bl	10d28 <__errno_location@plt>
   129ac:	ldr	r5, [r4, #276]	; 0x114
   129b0:	ldr	r3, [r4, #8]
   129b4:	ldr	r2, [pc, #28]	; 129d8 <close@plt+0x1c38>
   129b8:	ldr	r1, [pc, #28]	; 129dc <close@plt+0x1c3c>
   129bc:	ldr	ip, [r0]
   129c0:	ldr	r0, [r4, #280]	; 0x118
   129c4:	rsb	r4, ip, #0
   129c8:	blx	r5
   129cc:	mov	r0, r4
   129d0:	pop	{r4, r5, r6, pc}
   129d4:	strdeq	r7, [r1], -r0
   129d8:	andeq	r7, r1, r0, asr r2
   129dc:	andeq	r7, r1, ip, lsl #6
   129e0:	ldr	ip, [r0, #8]
   129e4:	ands	ip, ip, #1
   129e8:	beq	12a2c <close@plt+0x1c8c>
   129ec:	ldr	r3, [r0]
   129f0:	ldr	ip, [r3, #272]	; 0x110
   129f4:	cmp	ip, #0
   129f8:	beq	12a2c <close@plt+0x1c8c>
   129fc:	ldr	r3, [r3, #264]	; 0x108
   12a00:	mov	r2, #0
   12a04:	ldr	r1, [r3, #12]
   12a08:	add	r2, r2, #1
   12a0c:	tst	r1, #1
   12a10:	beq	12a20 <close@plt+0x1c80>
   12a14:	ldr	r1, [r3, #4]
   12a18:	cmp	r1, r0
   12a1c:	beq	12a34 <close@plt+0x1c94>
   12a20:	cmp	r2, ip
   12a24:	add	r3, r3, #28
   12a28:	bne	12a04 <close@plt+0x1c64>
   12a2c:	mov	r0, #0
   12a30:	bx	lr
   12a34:	ldr	r0, [r3]
   12a38:	bx	lr
   12a3c:	push	{r4, r5, r6, r7, r8, lr}
   12a40:	ldr	r7, [r0, #272]	; 0x110
   12a44:	cmp	r7, #0
   12a48:	beq	12a98 <close@plt+0x1cf8>
   12a4c:	mov	r6, r1
   12a50:	ldr	r3, [r0, #268]	; 0x10c
   12a54:	mov	r5, #0
   12a58:	b	12a64 <close@plt+0x1cc4>
   12a5c:	cmp	r7, r5
   12a60:	beq	12a8c <close@plt+0x1cec>
   12a64:	add	r0, r3, #8
   12a68:	mov	r1, r6
   12a6c:	mov	r4, r3
   12a70:	bl	10bb4 <strcmp@plt>
   12a74:	add	r5, r5, #1
   12a78:	add	r3, r4, #312	; 0x138
   12a7c:	cmp	r0, #0
   12a80:	bne	12a5c <close@plt+0x1cbc>
   12a84:	mov	r0, r4
   12a88:	pop	{r4, r5, r6, r7, r8, pc}
   12a8c:	mov	r4, #0
   12a90:	mov	r0, r4
   12a94:	pop	{r4, r5, r6, r7, r8, pc}
   12a98:	mov	r4, r7
   12a9c:	b	12a84 <close@plt+0x1ce4>
   12aa0:	push	{r4, r5, lr}
   12aa4:	ldr	lr, [r0, #272]	; 0x110
   12aa8:	cmp	lr, #0
   12aac:	beq	12b08 <close@plt+0x1d68>
   12ab0:	bic	r4, r1, #-2147483648	; 0x80000000
   12ab4:	ldr	r3, [r0, #268]	; 0x10c
   12ab8:	mov	r2, #0
   12abc:	lsr	r5, r1, #31
   12ac0:	b	12ad8 <close@plt+0x1d38>
   12ac4:	cmp	ip, #0
   12ac8:	popne	{r4, r5, pc}
   12acc:	cmp	r2, lr
   12ad0:	add	r3, r3, #312	; 0x138
   12ad4:	beq	12b08 <close@plt+0x1d68>
   12ad8:	ldr	r0, [r3, #4]
   12adc:	add	r2, r2, #1
   12ae0:	cmp	r0, r4
   12ae4:	movls	ip, #0
   12ae8:	andhi	ip, r5, #1
   12aec:	mov	r0, r3
   12af0:	bne	12ac4 <close@plt+0x1d24>
   12af4:	cmp	r1, #0
   12af8:	popge	{r4, r5, pc}
   12afc:	cmp	r2, lr
   12b00:	add	r3, r3, #312	; 0x138
   12b04:	bne	12ad8 <close@plt+0x1d38>
   12b08:	mov	r0, #0
   12b0c:	pop	{r4, r5, pc}
   12b10:	ldr	r0, [r0, #272]	; 0x110
   12b14:	bx	lr
   12b18:	ldr	r3, [r0, #272]	; 0x110
   12b1c:	cmp	r3, r1
   12b20:	addhi	r3, r1, r1, lsl #2
   12b24:	ldrhi	r0, [r0, #268]	; 0x10c
   12b28:	rsbhi	r1, r1, r3, lsl #3
   12b2c:	addhi	r0, r0, r1, lsl #3
   12b30:	movls	r0, #0
   12b34:	bx	lr
   12b38:	ldrh	r3, [r0, #56]	; 0x38
   12b3c:	cmp	r3, r1
   12b40:	addhi	r1, r1, r1, lsl #1
   12b44:	ldrhi	r0, [r0, #260]	; 0x104
   12b48:	addhi	r0, r0, r1, lsl #3
   12b4c:	movls	r0, #0
   12b50:	bx	lr
   12b54:	ldr	r0, [r0, #272]	; 0x110
   12b58:	bx	lr
   12b5c:	ldr	r3, [r0, #272]	; 0x110
   12b60:	cmp	r3, r1
   12b64:	rsbhi	r1, r1, r1, lsl #3
   12b68:	ldrhi	r0, [r0, #264]	; 0x108
   12b6c:	addhi	r0, r0, r1, lsl #2
   12b70:	movls	r0, #0
   12b74:	bx	lr
   12b78:	ldrb	r3, [r0, #276]	; 0x114
   12b7c:	cmp	r3, #0
   12b80:	addne	r0, r0, #276	; 0x114
   12b84:	moveq	r0, r3
   12b88:	bx	lr
   12b8c:	sub	r1, r1, #65536	; 0x10000
   12b90:	sub	r1, r1, #1
   12b94:	cmp	r1, #3
   12b98:	ldrls	pc, [pc, r1, lsl #2]
   12b9c:	b	12bd0 <close@plt+0x1e30>
   12ba0:	andeq	r2, r1, r8, asr #23
   12ba4:	andeq	r2, r1, r0, asr #23
   12ba8:			; <UNDEFINED> instruction: 0x00012bb8
   12bac:			; <UNDEFINED> instruction: 0x00012bb0
   12bb0:	ldr	r0, [r0, #296]	; 0x128
   12bb4:	bx	lr
   12bb8:	ldr	r0, [r0, #292]	; 0x124
   12bbc:	bx	lr
   12bc0:	ldr	r0, [r0, #288]	; 0x120
   12bc4:	bx	lr
   12bc8:	ldr	r0, [r0, #284]	; 0x11c
   12bcc:	bx	lr
   12bd0:	mov	r0, #0
   12bd4:	bx	lr
   12bd8:	add	r0, r0, #12
   12bdc:	bx	lr
   12be0:	ldr	r0, [r0, #8]
   12be4:	bx	lr
   12be8:	add	r0, r0, #4
   12bec:	bx	lr
   12bf0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bf4:	sub	sp, sp, #56	; 0x38
   12bf8:	ldr	r7, [pc, #400]	; 12d90 <close@plt+0x1ff0>
   12bfc:	mov	r6, r0
   12c00:	mov	r5, r1
   12c04:	ldr	ip, [r7]
   12c08:	mov	r1, #0
   12c0c:	mov	r8, r2
   12c10:	mov	r0, sp
   12c14:	mov	r2, #52	; 0x34
   12c18:	mov	r9, r3
   12c1c:	str	ip, [sp, #52]	; 0x34
   12c20:	bl	10d40 <memset@plt>
   12c24:	mov	r0, r6
   12c28:	bl	1295c <close@plt+0x1bbc>
   12c2c:	subs	sl, r0, #0
   12c30:	blt	12d08 <close@plt+0x1f68>
   12c34:	ldr	r3, [r5]
   12c38:	ldr	ip, [r3, #272]	; 0x110
   12c3c:	cmp	ip, #0
   12c40:	beq	12d70 <close@plt+0x1fd0>
   12c44:	ldr	r4, [r3, #264]	; 0x108
   12c48:	mov	r2, #0
   12c4c:	b	12c60 <close@plt+0x1ec0>
   12c50:	add	r2, r2, #1
   12c54:	cmp	ip, r2
   12c58:	add	r4, r4, #28
   12c5c:	beq	12d70 <close@plt+0x1fd0>
   12c60:	ldr	r1, [r4]
   12c64:	ldr	r0, [r1]
   12c68:	cmp	r3, r0
   12c6c:	bne	12c50 <close@plt+0x1eb0>
   12c70:	ldr	r0, [r1, #4]
   12c74:	ldr	r1, [r5, #4]
   12c78:	cmp	r0, r1
   12c7c:	bne	12c50 <close@plt+0x1eb0>
   12c80:	ldr	lr, [r4, #4]
   12c84:	ldr	sl, [r8]
   12c88:	ldr	r1, [lr]
   12c8c:	cmp	r1, sl
   12c90:	bne	12c50 <close@plt+0x1eb0>
   12c94:	ldr	lr, [lr, #4]
   12c98:	ldr	sl, [r8, #4]
   12c9c:	cmp	lr, sl
   12ca0:	bne	12c50 <close@plt+0x1eb0>
   12ca4:	ldr	r2, [r4, #12]
   12ca8:	ldr	r1, [r1, #4]
   12cac:	ldr	r5, [r3, #4]
   12cb0:	and	r3, r2, #2
   12cb4:	orr	r9, r3, r9
   12cb8:	mov	ip, #2
   12cbc:	mov	r3, #1
   12cc0:	str	r1, [sp, #20]
   12cc4:	strh	r0, [sp, #4]
   12cc8:	mov	r2, sp
   12ccc:	ldr	r1, [pc, #192]	; 12d94 <close@plt+0x1ff4>
   12cd0:	ldr	r0, [r6]
   12cd4:	str	r5, [sp]
   12cd8:	strh	lr, [sp, #24]
   12cdc:	str	r9, [sp, #40]	; 0x28
   12ce0:	str	ip, [sp, #8]
   12ce4:	str	r3, [sp, #28]
   12ce8:	bl	10c5c <ioctl@plt>
   12cec:	cmn	r0, #1
   12cf0:	beq	12d3c <close@plt+0x1f9c>
   12cf4:	ldr	r2, [r4, #8]
   12cf8:	ldr	r3, [sp, #40]	; 0x28
   12cfc:	mov	sl, #0
   12d00:	str	r3, [r4, #12]
   12d04:	str	r3, [r2, #12]
   12d08:	ldr	r0, [r6]
   12d0c:	cmn	r0, #1
   12d10:	beq	12d20 <close@plt+0x1f80>
   12d14:	bl	10da0 <close@plt>
   12d18:	mvn	r3, #0
   12d1c:	str	r3, [r6]
   12d20:	ldr	r2, [sp, #52]	; 0x34
   12d24:	ldr	r3, [r7]
   12d28:	mov	r0, sl
   12d2c:	cmp	r2, r3
   12d30:	bne	12d8c <close@plt+0x1fec>
   12d34:	add	sp, sp, #56	; 0x38
   12d38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d3c:	bl	10d28 <__errno_location@plt>
   12d40:	ldr	r5, [r6, #280]	; 0x118
   12d44:	ldr	r4, [r6, #276]	; 0x114
   12d48:	ldr	sl, [r0]
   12d4c:	mov	r0, sl
   12d50:	bl	10ca4 <strerror@plt>
   12d54:	ldr	r2, [pc, #60]	; 12d98 <close@plt+0x1ff8>
   12d58:	ldr	r1, [pc, #60]	; 12d9c <close@plt+0x1ffc>
   12d5c:	rsb	sl, sl, #0
   12d60:	mov	r3, r0
   12d64:	mov	r0, r5
   12d68:	blx	r4
   12d6c:	b	12d08 <close@plt+0x1f68>
   12d70:	ldr	r3, [r6, #276]	; 0x114
   12d74:	ldr	r2, [pc, #28]	; 12d98 <close@plt+0x1ff8>
   12d78:	ldr	r1, [pc, #32]	; 12da0 <close@plt+0x2000>
   12d7c:	ldr	r0, [r6, #280]	; 0x118
   12d80:	blx	r3
   12d84:	mvn	sl, #1
   12d88:	b	12d08 <close@plt+0x1f68>
   12d8c:	bl	10c14 <__stack_chk_fail@plt>
   12d90:	andeq	r8, r2, r0, lsr lr
   12d94:	eorsgt	r7, r4, r3, lsl #24
   12d98:	andeq	r7, r1, r4, ror #4
   12d9c:	andeq	r7, r1, r0, asr #6
   12da0:	andeq	r7, r1, ip, lsr #6
   12da4:	ldr	r3, [r0, #272]	; 0x110
   12da8:	cmp	r3, #0
   12dac:	beq	12e5c <close@plt+0x20bc>
   12db0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12db4:	mov	r8, #0
   12db8:	mov	r7, r0
   12dbc:	mov	r9, r8
   12dc0:	ldr	r6, [r7, #268]	; 0x10c
   12dc4:	add	r6, r6, r8
   12dc8:	ldr	r0, [r6, #272]	; 0x110
   12dcc:	cmp	r0, #0
   12dd0:	beq	12e44 <close@plt+0x20a4>
   12dd4:	mov	r4, #0
   12dd8:	mov	r5, r4
   12ddc:	b	12df0 <close@plt+0x2050>
   12de0:	add	r5, r5, #1
   12de4:	cmp	r0, r5
   12de8:	add	r4, r4, #28
   12dec:	bls	12e40 <close@plt+0x20a0>
   12df0:	ldr	r2, [r6, #264]	; 0x108
   12df4:	add	ip, r2, r4
   12df8:	ldr	r3, [ip, #12]
   12dfc:	tst	r3, #2
   12e00:	bne	12de0 <close@plt+0x2040>
   12e04:	ldr	r1, [r2, r4]
   12e08:	ldr	r2, [r1]
   12e0c:	cmp	r2, r6
   12e10:	bne	12de0 <close@plt+0x2040>
   12e14:	bic	r3, r3, #1
   12e18:	ldr	r2, [ip, #4]
   12e1c:	mov	r0, r7
   12e20:	bl	12bf0 <close@plt+0x1e50>
   12e24:	cmp	r0, #0
   12e28:	poplt	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e2c:	ldr	r0, [r6, #272]	; 0x110
   12e30:	add	r5, r5, #1
   12e34:	cmp	r0, r5
   12e38:	add	r4, r4, #28
   12e3c:	bhi	12df0 <close@plt+0x2050>
   12e40:	ldr	r3, [r7, #272]	; 0x110
   12e44:	add	r9, r9, #1
   12e48:	cmp	r3, r9
   12e4c:	add	r8, r8, #312	; 0x138
   12e50:	bhi	12dc0 <close@plt+0x2020>
   12e54:	mov	r0, #0
   12e58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e5c:	mov	r0, #0
   12e60:	bx	lr
   12e64:	ldr	r3, [pc, #1800]	; 13574 <close@plt+0x27d4>
   12e68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e6c:	sub	sp, sp, #76	; 0x4c
   12e70:	ldr	r4, [r0, #268]	; 0x10c
   12e74:	ldr	r3, [r3]
   12e78:	cmp	r4, #0
   12e7c:	str	r3, [sp, #68]	; 0x44
   12e80:	movne	r3, #0
   12e84:	strne	r3, [sp, #20]
   12e88:	beq	12eac <close@plt+0x210c>
   12e8c:	ldr	r3, [pc, #1760]	; 13574 <close@plt+0x27d4>
   12e90:	ldr	r2, [sp, #68]	; 0x44
   12e94:	ldr	r0, [sp, #20]
   12e98:	ldr	r3, [r3]
   12e9c:	cmp	r2, r3
   12ea0:	bne	13558 <close@plt+0x27b8>
   12ea4:	add	sp, sp, #76	; 0x4c
   12ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12eac:	mov	fp, r0
   12eb0:	bl	1295c <close@plt+0x1bbc>
   12eb4:	subs	r3, r0, #0
   12eb8:	str	r3, [sp, #20]
   12ebc:	blt	12e8c <close@plt+0x20ec>
   12ec0:	add	r3, fp, #12
   12ec4:	mov	r1, r4
   12ec8:	mov	r0, r3
   12ecc:	mov	r2, #256	; 0x100
   12ed0:	bl	10d40 <memset@plt>
   12ed4:	ldr	r1, [pc, #1692]	; 13578 <close@plt+0x27d8>
   12ed8:	mov	r2, r0
   12edc:	ldr	r0, [fp]
   12ee0:	bl	10c5c <ioctl@plt>
   12ee4:	cmp	r0, #0
   12ee8:	blt	134f0 <close@plt+0x2750>
   12eec:	ldr	r3, [fp, #276]	; 0x114
   12ef0:	ldr	r1, [pc, #1668]	; 1357c <close@plt+0x27dc>
   12ef4:	ldr	r0, [fp, #280]	; 0x118
   12ef8:	blx	r3
   12efc:	bl	10c68 <udev_new@plt>
   12f00:	subs	r9, r0, #0
   12f04:	beq	13544 <close@plt+0x27a4>
   12f08:	ldr	r1, [fp, #272]	; 0x110
   12f0c:	ldr	sl, [pc, #1644]	; 13580 <close@plt+0x27e0>
   12f10:	mov	r6, #0
   12f14:	add	r1, r1, #1
   12f18:	ldr	r0, [fp, #268]	; 0x10c
   12f1c:	add	r3, r1, r1, lsl #2
   12f20:	orr	r6, r6, #-2147483648	; 0x80000000
   12f24:	rsb	r1, r1, r3, lsl #3
   12f28:	lsl	r1, r1, #3
   12f2c:	bl	10c20 <realloc@plt>
   12f30:	ldr	r7, [fp, #272]	; 0x110
   12f34:	mov	r2, #312	; 0x138
   12f38:	mov	r1, #0
   12f3c:	add	r3, r7, r7, lsl #2
   12f40:	rsb	r7, r7, r3, lsl #3
   12f44:	add	r4, r0, r7, lsl #3
   12f48:	mov	r8, r0
   12f4c:	str	r0, [fp, #268]	; 0x10c
   12f50:	mov	r0, r4
   12f54:	bl	10d40 <memset@plt>
   12f58:	mov	r2, r4
   12f5c:	mvn	r3, #0
   12f60:	str	r3, [r4, #308]	; 0x134
   12f64:	ldr	r0, [fp]
   12f68:	str	r6, [r2, #4]!
   12f6c:	mov	r1, sl
   12f70:	str	fp, [r8, r7, lsl #3]
   12f74:	bl	10c5c <ioctl@plt>
   12f78:	cmp	r0, #0
   12f7c:	blt	13194 <close@plt+0x23f4>
   12f80:	ldrh	r3, [r4, #56]	; 0x38
   12f84:	ldrh	r5, [r4, #58]	; 0x3a
   12f88:	add	r0, r3, r3, lsl #1
   12f8c:	add	r5, r5, r3
   12f90:	str	r5, [r4, #268]	; 0x10c
   12f94:	lsl	r0, r0, #3
   12f98:	bl	10c8c <malloc@plt>
   12f9c:	rsb	r5, r5, r5, lsl #3
   12fa0:	mov	r6, r0
   12fa4:	str	r0, [r4, #260]	; 0x104
   12fa8:	lsl	r0, r5, #2
   12fac:	bl	10c8c <malloc@plt>
   12fb0:	cmp	r6, #0
   12fb4:	cmpne	r0, #0
   12fb8:	str	r0, [r4, #264]	; 0x108
   12fbc:	beq	13124 <close@plt+0x2384>
   12fc0:	ldr	r3, [r4, #48]	; 0x30
   12fc4:	ldr	r1, [fp, #272]	; 0x110
   12fc8:	tst	r3, #1
   12fcc:	add	r1, r1, #1
   12fd0:	str	r1, [fp, #272]	; 0x110
   12fd4:	ldr	r3, [r4, #40]	; 0x28
   12fd8:	beq	130e8 <close@plt+0x2348>
   12fdc:	sub	r2, r3, #65536	; 0x10000
   12fe0:	sub	r2, r2, #1
   12fe4:	cmp	r2, #3
   12fe8:	ldrls	pc, [pc, r2, lsl #2]
   12fec:	b	130e8 <close@plt+0x2348>
   12ff0:	andeq	r3, r1, r0, ror #1
   12ff4:	ldrdeq	r3, [r1], -r8
   12ff8:	ldrdeq	r3, [r1], -r0
   12ffc:	andeq	r3, r1, r0
   13000:	str	r4, [fp, #296]	; 0x128
   13004:	ldr	r0, [r4, #76]	; 0x4c
   13008:	cmp	r0, #0
   1300c:	bne	1301c <close@plt+0x227c>
   13010:	ldr	r3, [r4, #80]	; 0x50
   13014:	cmp	r3, #0
   13018:	beq	130c8 <close@plt+0x2328>
   1301c:	cmp	r9, #0
   13020:	beq	13104 <close@plt+0x2364>
   13024:	ldr	r6, [r4, #80]	; 0x50
   13028:	ldr	r3, [pc, #1364]	; 13584 <close@plt+0x27e4>
   1302c:	ldr	r5, [pc, #1364]	; 13588 <close@plt+0x27e8>
   13030:	and	r2, r3, r0, lsl #8
   13034:	uxtb	ip, r6
   13038:	ldr	r3, [pc, #1356]	; 1358c <close@plt+0x27ec>
   1303c:	orr	ip, ip, r2
   13040:	and	r5, r5, r6, lsl #12
   13044:	orr	r5, r5, ip
   13048:	and	r0, r0, r3
   1304c:	orr	r6, r0, r6, lsr #20
   13050:	lsr	r1, r5, #12
   13054:	ldr	r0, [r8, r7, lsl #3]
   13058:	orr	r1, r1, r6, lsl #20
   1305c:	and	r2, r6, r3
   13060:	bic	r1, r1, #255	; 0xff
   13064:	uxtb	r3, r5
   13068:	orr	r2, r2, ip, lsr #8
   1306c:	orr	r3, r1, r3
   13070:	ldr	r7, [r0, #276]	; 0x114
   13074:	ldr	r1, [pc, #1300]	; 13590 <close@plt+0x27f0>
   13078:	ldr	r0, [r0, #280]	; 0x118
   1307c:	blx	r7
   13080:	mov	r2, r5
   13084:	mov	r3, r6
   13088:	mov	r1, #99	; 0x63
   1308c:	mov	r0, r9
   13090:	bl	10bf0 <udev_device_new_from_devnum@plt>
   13094:	mov	r6, #0
   13098:	subs	r5, r0, #0
   1309c:	beq	13100 <close@plt+0x2360>
   130a0:	bl	10bfc <udev_device_get_devnode@plt>
   130a4:	subs	r1, r0, #0
   130a8:	beq	13114 <close@plt+0x2374>
   130ac:	mov	r2, #32
   130b0:	add	r0, r4, #276	; 0x114
   130b4:	bl	10d58 <strncpy@plt>
   130b8:	strb	r6, [r4, #307]	; 0x133
   130bc:	mov	r0, r5
   130c0:	bl	10d7c <udev_device_unref@plt>
   130c4:	ldr	r1, [fp, #272]	; 0x110
   130c8:	ldr	r6, [r4, #4]
   130cc:	b	12f14 <close@plt+0x2174>
   130d0:	str	r4, [fp, #292]	; 0x124
   130d4:	b	13004 <close@plt+0x2264>
   130d8:	str	r4, [fp, #288]	; 0x120
   130dc:	b	13004 <close@plt+0x2264>
   130e0:	str	r4, [fp, #284]	; 0x11c
   130e4:	b	13004 <close@plt+0x2264>
   130e8:	and	r3, r3, #16711680	; 0xff0000
   130ec:	sub	r3, r3, #65536	; 0x10000
   130f0:	bic	r3, r3, #65536	; 0x10000
   130f4:	cmp	r3, #0
   130f8:	bne	130c8 <close@plt+0x2328>
   130fc:	b	13004 <close@plt+0x2264>
   13100:	bl	10d7c <udev_device_unref@plt>
   13104:	mov	r0, r4
   13108:	bl	1273c <close@plt+0x199c>
   1310c:	ldr	r1, [fp, #272]	; 0x110
   13110:	b	130c8 <close@plt+0x2328>
   13114:	mov	r0, r5
   13118:	bl	10d7c <udev_device_unref@plt>
   1311c:	ldr	r1, [fp, #272]	; 0x110
   13120:	b	130c8 <close@plt+0x2328>
   13124:	cmp	r9, #0
   13128:	mvneq	r3, #11
   1312c:	moveq	r4, #12
   13130:	streq	r3, [sp, #20]
   13134:	beq	1314c <close@plt+0x23ac>
   13138:	mov	r0, r9
   1313c:	mov	r4, #12
   13140:	bl	10cec <udev_unref@plt>
   13144:	mvn	r3, #11
   13148:	str	r3, [sp, #20]
   1314c:	mov	r0, r4
   13150:	ldr	r5, [fp, #280]	; 0x118
   13154:	ldr	r6, [fp, #8]
   13158:	ldr	r4, [fp, #276]	; 0x114
   1315c:	bl	10ca4 <strerror@plt>
   13160:	mov	r3, r6
   13164:	ldr	r2, [pc, #1064]	; 13594 <close@plt+0x27f4>
   13168:	ldr	r1, [pc, #1064]	; 13598 <close@plt+0x27f8>
   1316c:	str	r0, [sp]
   13170:	mov	r0, r5
   13174:	blx	r4
   13178:	ldr	r0, [fp]
   1317c:	cmn	r0, #1
   13180:	beq	12e8c <close@plt+0x20ec>
   13184:	bl	10da0 <close@plt>
   13188:	mvn	r3, #0
   1318c:	str	r3, [fp]
   13190:	b	12e8c <close@plt+0x20ec>
   13194:	bl	10d28 <__errno_location@plt>
   13198:	ldr	r4, [r0]
   1319c:	str	r0, [sp, #36]	; 0x24
   131a0:	cmp	r4, #22
   131a4:	beq	13530 <close@plt+0x2790>
   131a8:	cmp	r9, #0
   131ac:	bne	13568 <close@plt+0x27c8>
   131b0:	cmp	r4, #0
   131b4:	bgt	1355c <close@plt+0x27bc>
   131b8:	ldr	r3, [fp, #276]	; 0x114
   131bc:	ldr	r2, [fp, #272]	; 0x110
   131c0:	ldr	r1, [pc, #980]	; 1359c <close@plt+0x27fc>
   131c4:	ldr	r0, [fp, #280]	; 0x118
   131c8:	blx	r3
   131cc:	ldr	r3, [fp, #276]	; 0x114
   131d0:	ldr	r1, [pc, #968]	; 135a0 <close@plt+0x2800>
   131d4:	ldr	r0, [fp, #280]	; 0x118
   131d8:	blx	r3
   131dc:	ldr	r3, [fp, #272]	; 0x110
   131e0:	cmp	r3, #0
   131e4:	beq	13438 <close@plt+0x2698>
   131e8:	mov	r3, #0
   131ec:	str	r3, [sp, #24]
   131f0:	str	r3, [sp, #20]
   131f4:	mov	r3, #1
   131f8:	str	r3, [sp, #28]
   131fc:	ldr	r3, [sp, #24]
   13200:	ldr	r4, [fp, #268]	; 0x10c
   13204:	mov	r2, #0
   13208:	add	r4, r4, r3
   1320c:	mov	r1, #20
   13210:	ldr	r3, [r4, #4]
   13214:	ldrh	r0, [r4, #56]	; 0x38
   13218:	str	r2, [sp, #52]	; 0x34
   1321c:	str	r2, [sp, #56]	; 0x38
   13220:	str	r2, [sp, #60]	; 0x3c
   13224:	str	r2, [sp, #64]	; 0x40
   13228:	str	r3, [sp, #40]	; 0x28
   1322c:	bl	10b90 <calloc@plt>
   13230:	mov	r1, #52	; 0x34
   13234:	str	r0, [sp, #44]	; 0x2c
   13238:	ldrh	r0, [r4, #58]	; 0x3a
   1323c:	bl	10b90 <calloc@plt>
   13240:	add	r2, sp, #40	; 0x28
   13244:	ldr	r1, [pc, #856]	; 135a4 <close@plt+0x2804>
   13248:	str	r0, [sp, #48]	; 0x30
   1324c:	ldr	r0, [fp]
   13250:	bl	10c5c <ioctl@plt>
   13254:	cmp	r0, #0
   13258:	blt	1348c <close@plt+0x26ec>
   1325c:	ldrh	r3, [r4, #56]	; 0x38
   13260:	cmp	r3, #0
   13264:	beq	1329c <close@plt+0x24fc>
   13268:	add	r2, r3, r3, lsl #1
   1326c:	ldr	r3, [r4, #260]	; 0x104
   13270:	ldr	r1, [sp, #44]	; 0x2c
   13274:	add	r2, r3, r2, lsl #3
   13278:	ldrh	r0, [r1, #4]
   1327c:	add	r3, r3, #24
   13280:	str	r4, [r3, #-24]	; 0xffffffe8
   13284:	str	r0, [r3, #-20]	; 0xffffffec
   13288:	ldr	r0, [r1, #8]
   1328c:	add	r1, r1, #20
   13290:	str	r0, [r3, #-16]
   13294:	cmp	r2, r3
   13298:	bne	13278 <close@plt+0x24d8>
   1329c:	ldrh	r3, [r4, #58]	; 0x3a
   132a0:	cmp	r3, #0
   132a4:	movne	r8, #0
   132a8:	movne	sl, r8
   132ac:	strne	r4, [sp, #32]
   132b0:	beq	133f8 <close@plt+0x2658>
   132b4:	ldr	r3, [sp, #48]	; 0x30
   132b8:	ldr	r0, [fp, #272]	; 0x110
   132bc:	add	r4, r3, r8
   132c0:	ldr	r2, [r3, r8]
   132c4:	cmp	r0, #0
   132c8:	bic	r7, r2, #-2147483648	; 0x80000000
   132cc:	ldr	r3, [r4, #20]
   132d0:	beq	13444 <close@plt+0x26a4>
   132d4:	ldr	r5, [fp, #268]	; 0x10c
   132d8:	mov	ip, #0
   132dc:	mov	r1, r5
   132e0:	lsr	lr, r2, #31
   132e4:	b	13308 <close@plt+0x2568>
   132e8:	movcs	r9, #0
   132ec:	andcc	r9, lr, #1
   132f0:	cmp	r9, #0
   132f4:	bne	13320 <close@plt+0x2580>
   132f8:	add	ip, ip, #1
   132fc:	cmp	ip, r0
   13300:	add	r1, r1, #312	; 0x138
   13304:	beq	13480 <close@plt+0x26e0>
   13308:	ldr	r9, [r1, #4]
   1330c:	mov	r6, r1
   13310:	cmp	r7, r9
   13314:	bne	132e8 <close@plt+0x2548>
   13318:	cmp	r2, #0
   1331c:	blt	132f8 <close@plt+0x2558>
   13320:	bic	ip, r3, #-2147483648	; 0x80000000
   13324:	mov	r1, #0
   13328:	lsr	lr, r3, #31
   1332c:	b	13350 <close@plt+0x25b0>
   13330:	movls	r7, #0
   13334:	andhi	r7, lr, #1
   13338:	cmp	r7, #0
   1333c:	bne	13364 <close@plt+0x25c4>
   13340:	add	r1, r1, #1
   13344:	cmp	r1, r0
   13348:	add	r5, r5, #312	; 0x138
   1334c:	beq	13444 <close@plt+0x26a4>
   13350:	ldr	r7, [r5, #4]
   13354:	cmp	r7, ip
   13358:	bne	13330 <close@plt+0x2590>
   1335c:	cmp	r3, #0
   13360:	blt	13340 <close@plt+0x25a0>
   13364:	cmp	r6, #0
   13368:	beq	13444 <close@plt+0x26a4>
   1336c:	mov	r0, r6
   13370:	bl	126ac <close@plt+0x190c>
   13374:	ldrh	r2, [r4, #4]
   13378:	ldrh	r3, [r4, #24]
   1337c:	ldr	r1, [r5, #260]	; 0x104
   13380:	add	r2, r2, r2, lsl #1
   13384:	add	r3, r3, r3, lsl #1
   13388:	add	r3, r1, r3, lsl #3
   1338c:	ldr	r1, [r4, #40]	; 0x28
   13390:	mov	r7, r0
   13394:	ldr	r0, [r6, #260]	; 0x104
   13398:	str	r1, [r7, #12]
   1339c:	add	r2, r0, r2, lsl #3
   133a0:	mov	r0, r5
   133a4:	strd	r2, [r7]
   133a8:	bl	126ac <close@plt+0x190c>
   133ac:	ldrh	r2, [r4, #4]
   133b0:	ldrh	r3, [r4, #24]
   133b4:	ldr	ip, [r6, #260]	; 0x104
   133b8:	ldr	r1, [r5, #260]	; 0x104
   133bc:	add	r2, r2, r2, lsl #1
   133c0:	add	r3, r3, r3, lsl #1
   133c4:	ldr	lr, [r4, #40]	; 0x28
   133c8:	add	r2, ip, r2, lsl #3
   133cc:	add	r3, r1, r3, lsl #3
   133d0:	str	lr, [r0, #12]
   133d4:	strd	r2, [r0]
   133d8:	str	r0, [r7, #8]
   133dc:	str	r7, [r0, #8]
   133e0:	ldr	r3, [sp, #32]
   133e4:	add	sl, sl, #1
   133e8:	add	r8, r8, #52	; 0x34
   133ec:	ldrh	r3, [r3, #58]	; 0x3a
   133f0:	cmp	sl, r3
   133f4:	bcc	132b4 <close@plt+0x2514>
   133f8:	ldr	r0, [sp, #44]	; 0x2c
   133fc:	bl	10bc0 <free@plt>
   13400:	ldr	r0, [sp, #48]	; 0x30
   13404:	bl	10bc0 <free@plt>
   13408:	ldr	r2, [sp, #28]
   1340c:	ldr	r3, [fp, #272]	; 0x110
   13410:	add	r2, r2, #1
   13414:	cmp	r2, r3
   13418:	ldr	r3, [sp, #24]
   1341c:	str	r2, [sp, #28]
   13420:	add	r3, r3, #312	; 0x138
   13424:	str	r3, [sp, #24]
   13428:	bls	131fc <close@plt+0x245c>
   1342c:	ldr	r3, [sp, #20]
   13430:	cmp	r3, #0
   13434:	blt	134d4 <close@plt+0x2734>
   13438:	mov	r3, #0
   1343c:	str	r3, [sp, #20]
   13440:	b	13178 <close@plt+0x23d8>
   13444:	ldrh	r1, [r4, #24]
   13448:	str	r3, [sp, #8]
   1344c:	ldr	r5, [fp, #276]	; 0x114
   13450:	str	r1, [sp, #12]
   13454:	ldrh	r1, [r4, #4]
   13458:	str	r2, [sp]
   1345c:	mov	r3, sl
   13460:	str	r1, [sp, #4]
   13464:	ldr	r2, [sp, #28]
   13468:	ldr	r1, [pc, #312]	; 135a8 <close@plt+0x2808>
   1346c:	ldr	r0, [fp, #280]	; 0x118
   13470:	blx	r5
   13474:	mvn	r3, #21
   13478:	str	r3, [sp, #20]
   1347c:	b	133e0 <close@plt+0x2640>
   13480:	bic	ip, r3, #-2147483648	; 0x80000000
   13484:	mov	r6, #0
   13488:	b	13324 <close@plt+0x2584>
   1348c:	ldr	r3, [sp, #36]	; 0x24
   13490:	ldr	r5, [fp, #280]	; 0x118
   13494:	ldr	r4, [fp, #276]	; 0x114
   13498:	ldr	r3, [r3]
   1349c:	mov	r0, r3
   134a0:	rsb	r3, r3, #0
   134a4:	str	r3, [sp, #20]
   134a8:	bl	10ca4 <strerror@plt>
   134ac:	ldr	r2, [pc, #248]	; 135ac <close@plt+0x280c>
   134b0:	ldr	r1, [pc, #248]	; 135b0 <close@plt+0x2810>
   134b4:	mov	r3, r0
   134b8:	mov	r0, r5
   134bc:	blx	r4
   134c0:	ldr	r0, [sp, #44]	; 0x2c
   134c4:	bl	10bc0 <free@plt>
   134c8:	ldr	r0, [sp, #48]	; 0x30
   134cc:	bl	10bc0 <free@plt>
   134d0:	b	1342c <close@plt+0x268c>
   134d4:	ldr	r4, [fp, #276]	; 0x114
   134d8:	ldr	r3, [fp, #8]
   134dc:	ldr	r2, [pc, #176]	; 13594 <close@plt+0x27f4>
   134e0:	ldr	r1, [pc, #204]	; 135b4 <close@plt+0x2814>
   134e4:	ldr	r0, [fp, #280]	; 0x118
   134e8:	blx	r4
   134ec:	b	13178 <close@plt+0x23d8>
   134f0:	bl	10d28 <__errno_location@plt>
   134f4:	ldr	r5, [fp, #280]	; 0x118
   134f8:	ldr	r6, [fp, #8]
   134fc:	ldr	r4, [fp, #276]	; 0x114
   13500:	ldr	r2, [r0]
   13504:	rsb	r3, r2, #0
   13508:	mov	r0, r2
   1350c:	str	r3, [sp, #20]
   13510:	bl	10ca4 <strerror@plt>
   13514:	mov	r3, r6
   13518:	ldr	r2, [pc, #116]	; 13594 <close@plt+0x27f4>
   1351c:	ldr	r1, [pc, #148]	; 135b8 <close@plt+0x2818>
   13520:	str	r0, [sp]
   13524:	mov	r0, r5
   13528:	blx	r4
   1352c:	b	13178 <close@plt+0x23d8>
   13530:	cmp	r9, #0
   13534:	beq	131b8 <close@plt+0x2418>
   13538:	mov	r0, r9
   1353c:	bl	10cec <udev_unref@plt>
   13540:	b	131b8 <close@plt+0x2418>
   13544:	ldr	r3, [fp, #276]	; 0x114
   13548:	ldr	r1, [pc, #108]	; 135bc <close@plt+0x281c>
   1354c:	ldr	r0, [fp, #280]	; 0x118
   13550:	blx	r3
   13554:	b	12f08 <close@plt+0x2168>
   13558:	bl	10c14 <__stack_chk_fail@plt>
   1355c:	rsb	r3, r4, #0
   13560:	str	r3, [sp, #20]
   13564:	b	1314c <close@plt+0x23ac>
   13568:	mov	r0, r9
   1356c:	bl	10cec <udev_unref@plt>
   13570:	b	131b0 <close@plt+0x2410>
   13574:	andeq	r8, r2, r0, lsr lr
   13578:	tstgt	r0, r0, lsl #24
   1357c:	andeq	r7, r1, r4, lsr #7
   13580:	tstgt	r0, r1, lsl #24
   13584:	andeq	pc, pc, r0, lsl #30
   13588:			; <UNDEFINED> instruction: 0xfff00000	; IMB
   1358c:			; <UNDEFINED> instruction: 0xfffff000
   13590:	ldrdeq	r7, [r1], -r4
   13594:	andeq	r7, r1, r8, ror r2
   13598:	strdeq	r7, [r1], -r0
   1359c:	andeq	r7, r1, r8, lsr #8
   135a0:	andeq	r7, r1, ip, lsr r4
   135a4:	andsgt	r7, ip, r2, lsl #24
   135a8:	andeq	r7, r1, r8, lsl #9
   135ac:	muleq	r1, r0, r2
   135b0:	andeq	r7, r1, r8, asr r4
   135b4:	andeq	r7, r1, r4, asr #9
   135b8:	andeq	r7, r1, r0, ror #6
   135bc:			; <UNDEFINED> instruction: 0x000173bc
   135c0:	cmp	r1, #0
   135c4:	strne	r1, [r0, #276]	; 0x114
   135c8:	ldreq	r3, [pc, #12]	; 135dc <close@plt+0x283c>
   135cc:	strne	r2, [r0, #280]	; 0x118
   135d0:	streq	r1, [r0, #280]	; 0x118
   135d4:	streq	r3, [r0, #276]	; 0x114
   135d8:	bx	lr
   135dc:	andeq	r2, r1, r0, lsr #13
   135e0:	push	{r4, r5, r6, lr}
   135e4:	mov	r5, r0
   135e8:	bl	12920 <close@plt+0x1b80>
   135ec:	subs	r4, r0, #0
   135f0:	beq	13604 <close@plt+0x2864>
   135f4:	mov	r1, r5
   135f8:	mov	r2, #256	; 0x100
   135fc:	add	r0, r4, #12
   13600:	bl	10be4 <memcpy@plt>
   13604:	mov	r0, r4
   13608:	pop	{r4, r5, r6, pc}
   1360c:	ldr	r3, [r0, #4]
   13610:	add	r3, r3, #1
   13614:	str	r3, [r0, #4]
   13618:	bx	lr
   1361c:	ldr	r3, [r0, #4]
   13620:	sub	r3, r3, #1
   13624:	cmp	r3, #0
   13628:	str	r3, [r0, #4]
   1362c:	bxgt	lr
   13630:	ldr	r3, [r0, #272]	; 0x110
   13634:	push	{r4, r5, r6, r7, r8, lr}
   13638:	cmp	r3, #0
   1363c:	mov	r5, r0
   13640:	beq	1368c <close@plt+0x28ec>
   13644:	mov	r6, #0
   13648:	mov	r7, r6
   1364c:	ldr	r4, [r5, #268]	; 0x10c
   13650:	add	r7, r7, #1
   13654:	add	r4, r4, r6
   13658:	add	r6, r6, #312	; 0x138
   1365c:	ldr	r0, [r4, #260]	; 0x104
   13660:	bl	10bc0 <free@plt>
   13664:	ldr	r0, [r4, #264]	; 0x108
   13668:	bl	10bc0 <free@plt>
   1366c:	ldr	r3, [r4, #308]	; 0x134
   13670:	cmn	r3, #1
   13674:	mov	r0, r3
   13678:	beq	13680 <close@plt+0x28e0>
   1367c:	bl	10da0 <close@plt>
   13680:	ldr	r3, [r5, #272]	; 0x110
   13684:	cmp	r3, r7
   13688:	bhi	1364c <close@plt+0x28ac>
   1368c:	ldr	r0, [r5, #268]	; 0x10c
   13690:	bl	10bc0 <free@plt>
   13694:	ldr	r0, [r5, #8]
   13698:	bl	10bc0 <free@plt>
   1369c:	mov	r0, r5
   136a0:	pop	{r4, r5, r6, r7, r8, lr}
   136a4:	b	10bc0 <free@plt>
   136a8:	push	{r4, r5, r6, lr}
   136ac:	mov	r5, r0
   136b0:	bl	12920 <close@plt+0x1b80>
   136b4:	subs	r4, r0, #0
   136b8:	beq	136d4 <close@plt+0x2934>
   136bc:	mov	r0, r5
   136c0:	bl	10c08 <strdup@plt>
   136c4:	cmp	r0, #0
   136c8:	mov	r5, r0
   136cc:	str	r0, [r4, #8]
   136d0:	beq	136dc <close@plt+0x293c>
   136d4:	mov	r0, r4
   136d8:	pop	{r4, r5, r6, pc}
   136dc:	mov	r0, r4
   136e0:	bl	1361c <close@plt+0x287c>
   136e4:	mov	r4, r5
   136e8:	b	136d4 <close@plt+0x2934>
   136ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136f0:	mov	r6, r1
   136f4:	ldr	r1, [r0, #272]	; 0x110
   136f8:	mov	r5, r0
   136fc:	add	r1, r1, #1
   13700:	ldr	r0, [r0, #268]	; 0x10c
   13704:	add	r3, r1, r1, lsl #2
   13708:	mov	r7, r2
   1370c:	rsb	r1, r1, r3, lsl #3
   13710:	lsl	r1, r1, #3
   13714:	bl	10c20 <realloc@plt>
   13718:	subs	r8, r0, #0
   1371c:	beq	13860 <close@plt+0x2ac0>
   13720:	ldr	r3, [r5, #272]	; 0x110
   13724:	mov	r2, #312	; 0x138
   13728:	add	r3, r3, #1
   1372c:	str	r3, [r5, #272]	; 0x110
   13730:	add	r4, r3, r3, lsl #2
   13734:	mov	r1, #0
   13738:	rsb	r4, r3, r4, lsl #3
   1373c:	str	r8, [r5, #268]	; 0x10c
   13740:	lsl	r4, r4, #3
   13744:	sub	r4, r4, #312	; 0x138
   13748:	add	r9, r8, r4
   1374c:	mov	r0, r9
   13750:	bl	10d40 <memset@plt>
   13754:	mvn	r3, #0
   13758:	str	r3, [r9, #308]	; 0x134
   1375c:	mov	r1, r7
   13760:	str	r5, [r8, r4]
   13764:	mov	r2, #32
   13768:	add	r0, r9, #276	; 0x114
   1376c:	bl	10d58 <strncpy@plt>
   13770:	mov	r3, #0
   13774:	strb	r3, [r9, #307]	; 0x133
   13778:	mov	lr, r6
   1377c:	ldr	r4, [r6, #36]	; 0x24
   13780:	str	r3, [r9, #4]
   13784:	str	r4, [r9, #40]	; 0x28
   13788:	str	r3, [r9, #48]	; 0x30
   1378c:	ldr	r0, [lr, #4]!
   13790:	add	ip, r9, #8
   13794:	sub	r4, r4, #65536	; 0x10000
   13798:	ldr	r1, [lr, #4]
   1379c:	ldr	r2, [lr, #8]
   137a0:	ldr	r3, [lr, #12]
   137a4:	sub	r4, r4, #1
   137a8:	stmia	ip!, {r0, r1, r2, r3}
   137ac:	ldr	r0, [lr, #16]
   137b0:	ldr	r1, [lr, #20]
   137b4:	ldr	r2, [lr, #24]
   137b8:	ldr	r3, [lr, #28]
   137bc:	stmia	ip!, {r0, r1, r2, r3}
   137c0:	cmp	r4, #3
   137c4:	ldrls	pc, [pc, r4, lsl #2]
   137c8:	b	13868 <close@plt+0x2ac8>
   137cc:	strdeq	r3, [r1], -ip
   137d0:	andeq	r3, r1, r0, lsr r8
   137d4:	andeq	r3, r1, r8, asr #16
   137d8:	ldrdeq	r3, [r1], -ip
   137dc:	ldr	r3, [r6, #72]	; 0x48
   137e0:	add	r5, r5, #296	; 0x128
   137e4:	str	r3, [r9, #76]	; 0x4c
   137e8:	ldr	r3, [r6, #44]	; 0x2c
   137ec:	tst	r3, #1
   137f0:	bne	1381c <close@plt+0x2a7c>
   137f4:	mov	r0, #0
   137f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137fc:	add	r2, r6, #72	; 0x48
   13800:	add	r3, r9, #76	; 0x4c
   13804:	ldm	r2, {r0, r1}
   13808:	add	r5, r5, #284	; 0x11c
   1380c:	stm	r3, {r0, r1}
   13810:	ldr	r3, [r6, #44]	; 0x2c
   13814:	tst	r3, #1
   13818:	beq	137f4 <close@plt+0x2a54>
   1381c:	mov	r3, #1
   13820:	str	r3, [r9, #48]	; 0x30
   13824:	mov	r0, #0
   13828:	str	r9, [r5]
   1382c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13830:	add	r2, r6, #72	; 0x48
   13834:	add	r3, r9, #76	; 0x4c
   13838:	ldm	r2, {r0, r1}
   1383c:	add	r5, r5, #288	; 0x120
   13840:	stm	r3, {r0, r1}
   13844:	b	137e8 <close@plt+0x2a48>
   13848:	add	r2, r6, #72	; 0x48
   1384c:	add	r3, r9, #76	; 0x4c
   13850:	ldm	r2, {r0, r1, r2}
   13854:	add	r5, r5, #292	; 0x124
   13858:	stm	r3, {r0, r1, r2}
   1385c:	b	137e8 <close@plt+0x2a48>
   13860:	mvn	r0, #11
   13864:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13868:	ldr	r3, [r6, #44]	; 0x2c
   1386c:	tst	r3, #1
   13870:	movne	r3, #1
   13874:	strne	r3, [r9, #48]	; 0x30
   13878:	b	137f4 <close@plt+0x2a54>
   1387c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13880:	sub	sp, sp, #20
   13884:	ldr	r6, [pc, #588]	; 13ad8 <close@plt+0x2d38>
   13888:	subs	r8, r2, #0
   1388c:	mov	r7, r0
   13890:	ldr	r3, [r6]
   13894:	mov	r4, r1
   13898:	str	r3, [sp, #12]
   1389c:	addeq	r8, sp, #8
   138a0:	bl	10cd4 <__ctype_b_loc@plt>
   138a4:	ldr	r5, [r0]
   138a8:	mov	sl, r0
   138ac:	mov	r9, r4
   138b0:	ldrb	r2, [r4], #1
   138b4:	lsl	r3, r2, #1
   138b8:	ldrh	r3, [r5, r3]
   138bc:	ands	r3, r3, #8192	; 0x2000
   138c0:	bne	138ac <close@plt+0x2b0c>
   138c4:	cmp	r2, #39	; 0x27
   138c8:	cmpne	r2, #34	; 0x22
   138cc:	moveq	fp, #1
   138d0:	movne	fp, #0
   138d4:	bne	13974 <close@plt+0x2bd4>
   138d8:	ldrb	r2, [r9, #1]
   138dc:	str	r4, [sp, #8]
   138e0:	subs	r1, r2, #34	; 0x22
   138e4:	movne	r1, #1
   138e8:	cmp	r2, #0
   138ec:	cmpne	r2, #34	; 0x22
   138f0:	beq	13a7c <close@plt+0x2cdc>
   138f4:	cmp	r2, #39	; 0x27
   138f8:	beq	13a84 <close@plt+0x2ce4>
   138fc:	mov	sl, r4
   13900:	b	1390c <close@plt+0x2b6c>
   13904:	cmp	r2, #39	; 0x27
   13908:	beq	139e8 <close@plt+0x2c48>
   1390c:	ldrb	r2, [sl, #1]!
   13910:	subs	r1, r2, #34	; 0x22
   13914:	movne	r1, #1
   13918:	cmp	r2, #0
   1391c:	cmpne	r2, #34	; 0x22
   13920:	bne	13904 <close@plt+0x2b64>
   13924:	str	sl, [sp, #8]
   13928:	cmp	r2, #39	; 0x27
   1392c:	moveq	r2, #0
   13930:	andne	r2, r1, #1
   13934:	cmp	r2, #0
   13938:	beq	13a6c <close@plt+0x2ccc>
   1393c:	ldr	r3, [r7, #276]	; 0x114
   13940:	ldr	r0, [r7, #280]	; 0x118
   13944:	ldr	r1, [pc, #400]	; 13adc <close@plt+0x2d3c>
   13948:	blx	r3
   1394c:	mov	fp, #0
   13950:	ldr	r3, [sp, #8]
   13954:	str	r3, [r8]
   13958:	ldr	r2, [sp, #12]
   1395c:	ldr	r3, [r6]
   13960:	mov	r0, fp
   13964:	cmp	r2, r3
   13968:	bne	13ad4 <close@plt+0x2d34>
   1396c:	add	sp, sp, #20
   13970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13974:	mov	r2, #10
   13978:	add	r1, sp, #8
   1397c:	mov	r0, r9
   13980:	bl	10cf8 <strtoul@plt>
   13984:	ldr	ip, [r7, #272]	; 0x110
   13988:	cmp	ip, #0
   1398c:	bic	lr, r0, #-2147483648	; 0x80000000
   13990:	beq	13ab4 <close@plt+0x2d14>
   13994:	ldr	r3, [r7, #268]	; 0x10c
   13998:	mov	r2, fp
   1399c:	lsr	r4, r0, #31
   139a0:	b	139c4 <close@plt+0x2c24>
   139a4:	movcs	r1, #0
   139a8:	andcc	r1, r4, #1
   139ac:	cmp	r1, #0
   139b0:	bne	139dc <close@plt+0x2c3c>
   139b4:	add	r2, r2, #1
   139b8:	cmp	r2, ip
   139bc:	add	r3, r3, #312	; 0x138
   139c0:	beq	13ab4 <close@plt+0x2d14>
   139c4:	ldr	r1, [r3, #4]
   139c8:	mov	fp, r3
   139cc:	cmp	lr, r1
   139d0:	bne	139a4 <close@plt+0x2c04>
   139d4:	cmp	r0, #0
   139d8:	blt	139b4 <close@plt+0x2c14>
   139dc:	ldr	r5, [sl]
   139e0:	ldr	sl, [sp, #8]
   139e4:	b	13a3c <close@plt+0x2c9c>
   139e8:	sub	r9, sl, r9
   139ec:	sub	r9, r9, #1
   139f0:	mov	r1, r9
   139f4:	str	sl, [sp, #8]
   139f8:	mov	r0, r4
   139fc:	bl	10bd8 <strndup@plt>
   13a00:	subs	r3, r0, #0
   13a04:	moveq	fp, r3
   13a08:	beq	13958 <close@plt+0x2bb8>
   13a0c:	mov	r1, r3
   13a10:	mov	r0, r7
   13a14:	str	r3, [sp, #4]
   13a18:	bl	12a3c <close@plt+0x1c9c>
   13a1c:	ldr	r3, [sp, #4]
   13a20:	mov	fp, r0
   13a24:	mov	r0, r3
   13a28:	bl	10bc0 <free@plt>
   13a2c:	cmp	fp, #0
   13a30:	addne	sl, sl, #1
   13a34:	strne	sl, [sp, #8]
   13a38:	beq	13a94 <close@plt+0x2cf4>
   13a3c:	ldrb	r3, [sl]
   13a40:	lsl	r3, r3, #1
   13a44:	ldrh	r3, [r5, r3]
   13a48:	tst	r3, #8192	; 0x2000
   13a4c:	beq	13a64 <close@plt+0x2cc4>
   13a50:	ldrb	r3, [sl, #1]!
   13a54:	lsl	r3, r3, #1
   13a58:	ldrh	r3, [r5, r3]
   13a5c:	tst	r3, #8192	; 0x2000
   13a60:	bne	13a50 <close@plt+0x2cb0>
   13a64:	str	sl, [r8]
   13a68:	b	13958 <close@plt+0x2bb8>
   13a6c:	sub	r9, sl, r9
   13a70:	sub	r9, r9, #1
   13a74:	mov	r1, r9
   13a78:	b	139f8 <close@plt+0x2c58>
   13a7c:	mov	sl, r4
   13a80:	b	13928 <close@plt+0x2b88>
   13a84:	mov	r1, r3
   13a88:	mov	r9, r3
   13a8c:	mov	sl, r4
   13a90:	b	139f8 <close@plt+0x2c58>
   13a94:	mov	r2, r9
   13a98:	ldr	r5, [r7, #276]	; 0x114
   13a9c:	ldr	r0, [r7, #280]	; 0x118
   13aa0:	mov	r3, r4
   13aa4:	ldr	r1, [pc, #52]	; 13ae0 <close@plt+0x2d40>
   13aa8:	blx	r5
   13aac:	str	r4, [r8]
   13ab0:	b	13958 <close@plt+0x2bb8>
   13ab4:	mov	r2, r0
   13ab8:	ldr	r3, [r7, #276]	; 0x114
   13abc:	ldr	r0, [r7, #280]	; 0x118
   13ac0:	ldr	r1, [pc, #28]	; 13ae4 <close@plt+0x2d44>
   13ac4:	blx	r3
   13ac8:	mov	fp, #0
   13acc:	str	r9, [r8]
   13ad0:	b	13958 <close@plt+0x2bb8>
   13ad4:	bl	10c14 <__stack_chk_fail@plt>
   13ad8:	andeq	r8, r2, r0, lsr lr
   13adc:	strdeq	r7, [r1], -ip
   13ae0:	andeq	r7, r1, r4, lsl r5
   13ae4:	andeq	r7, r1, ip, lsr #10
   13ae8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13aec:	sub	sp, sp, #20
   13af0:	ldr	r7, [pc, #304]	; 13c28 <close@plt+0x2e88>
   13af4:	add	r8, sp, #8
   13af8:	subs	sl, r2, #0
   13afc:	ldr	r3, [r7]
   13b00:	mov	r2, r8
   13b04:	moveq	sl, r8
   13b08:	str	r3, [sp, #12]
   13b0c:	mov	r9, r0
   13b10:	bl	1387c <close@plt+0x2adc>
   13b14:	subs	r6, r0, #0
   13b18:	ldreq	r3, [sp, #8]
   13b1c:	streq	r3, [sl]
   13b20:	beq	13bbc <close@plt+0x2e1c>
   13b24:	ldr	r4, [sp, #8]
   13b28:	ldrb	r2, [r4]
   13b2c:	cmp	r2, #58	; 0x3a
   13b30:	bne	13bd8 <close@plt+0x2e38>
   13b34:	bl	10cd4 <__ctype_b_loc@plt>
   13b38:	add	r2, r4, #1
   13b3c:	ldr	r1, [r0]
   13b40:	mov	fp, r0
   13b44:	mov	r5, r2
   13b48:	add	r2, r2, #1
   13b4c:	ldrb	r3, [r5]
   13b50:	lsl	r3, r3, #1
   13b54:	ldrh	r4, [r1, r3]
   13b58:	ands	r4, r4, #8192	; 0x2000
   13b5c:	bne	13b44 <close@plt+0x2da4>
   13b60:	mov	r1, r8
   13b64:	mov	r2, #10
   13b68:	mov	r0, r5
   13b6c:	bl	10cf8 <strtoul@plt>
   13b70:	ldrh	r3, [r6, #56]	; 0x38
   13b74:	cmp	r3, r0
   13b78:	bls	13bf8 <close@plt+0x2e58>
   13b7c:	ldr	r1, [sp, #8]
   13b80:	ldr	ip, [fp]
   13b84:	ldrb	r3, [r1]
   13b88:	lsl	r3, r3, #1
   13b8c:	ldrh	r3, [ip, r3]
   13b90:	tst	r3, #8192	; 0x2000
   13b94:	beq	13bac <close@plt+0x2e0c>
   13b98:	ldrb	r3, [r1, #1]!
   13b9c:	lsl	r3, r3, #1
   13ba0:	ldrh	r3, [ip, r3]
   13ba4:	tst	r3, #8192	; 0x2000
   13ba8:	bne	13b98 <close@plt+0x2df8>
   13bac:	ldr	r6, [r6, #260]	; 0x104
   13bb0:	add	r0, r0, r0, lsl #1
   13bb4:	str	r1, [sl]
   13bb8:	add	r6, r6, r0, lsl #3
   13bbc:	ldr	r2, [sp, #12]
   13bc0:	ldr	r3, [r7]
   13bc4:	mov	r0, r6
   13bc8:	cmp	r2, r3
   13bcc:	bne	13c24 <close@plt+0x2e84>
   13bd0:	add	sp, sp, #20
   13bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bd8:	ldr	r3, [r9, #276]	; 0x114
   13bdc:	ldr	r0, [r9, #280]	; 0x118
   13be0:	ldr	r1, [pc, #68]	; 13c2c <close@plt+0x2e8c>
   13be4:	blx	r3
   13be8:	ldr	r3, [sp, #8]
   13bec:	mov	r6, #0
   13bf0:	str	r3, [sl]
   13bf4:	b	13bbc <close@plt+0x2e1c>
   13bf8:	sub	r3, r3, #1
   13bfc:	str	r3, [sp]
   13c00:	mov	r2, r0
   13c04:	add	r3, r6, #8
   13c08:	ldr	r8, [r9, #276]	; 0x114
   13c0c:	ldr	r0, [r9, #280]	; 0x118
   13c10:	ldr	r1, [pc, #24]	; 13c30 <close@plt+0x2e90>
   13c14:	blx	r8
   13c18:	mov	r6, r4
   13c1c:	str	r5, [sl]
   13c20:	b	13bbc <close@plt+0x2e1c>
   13c24:	bl	10c14 <__stack_chk_fail@plt>
   13c28:	andeq	r8, r2, r0, lsr lr
   13c2c:	andeq	r7, r1, r0, asr #10
   13c30:	andeq	r7, r1, r0, asr r5
   13c34:	push	{r4, r5, r6, r7, r8, lr}
   13c38:	sub	sp, sp, #16
   13c3c:	ldr	r5, [pc, #312]	; 13d7c <close@plt+0x2fdc>
   13c40:	mov	r8, r2
   13c44:	add	r2, sp, #8
   13c48:	ldr	r3, [r5]
   13c4c:	mov	r6, r0
   13c50:	str	r3, [sp, #12]
   13c54:	bl	13ae8 <close@plt+0x2d48>
   13c58:	subs	r4, r0, #0
   13c5c:	beq	13d58 <close@plt+0x2fb8>
   13c60:	ldr	r1, [sp, #8]
   13c64:	ldrb	r3, [r1]
   13c68:	cmp	r3, #45	; 0x2d
   13c6c:	bne	13d28 <close@plt+0x2f88>
   13c70:	ldrb	r3, [r1, #1]
   13c74:	cmp	r3, #62	; 0x3e
   13c78:	bne	13d28 <close@plt+0x2f88>
   13c7c:	add	r2, sp, #8
   13c80:	add	r1, r1, #2
   13c84:	mov	r0, r6
   13c88:	bl	13ae8 <close@plt+0x2d48>
   13c8c:	subs	r7, r0, #0
   13c90:	beq	13d68 <close@plt+0x2fc8>
   13c94:	ldr	r2, [r4]
   13c98:	ldr	r3, [sp, #8]
   13c9c:	ldr	lr, [r2, #272]	; 0x110
   13ca0:	str	r3, [r8]
   13ca4:	cmp	lr, #0
   13ca8:	beq	13cf4 <close@plt+0x2f54>
   13cac:	ldr	r3, [r2, #264]	; 0x108
   13cb0:	mov	r1, #0
   13cb4:	b	13cc8 <close@plt+0x2f28>
   13cb8:	add	r1, r1, #1
   13cbc:	cmp	r1, lr
   13cc0:	add	r3, r3, #28
   13cc4:	beq	13cf4 <close@plt+0x2f54>
   13cc8:	ldr	ip, [r3]
   13ccc:	mov	r0, r3
   13cd0:	cmp	ip, r4
   13cd4:	bne	13cb8 <close@plt+0x2f18>
   13cd8:	ldr	ip, [r3, #4]
   13cdc:	cmp	ip, r7
   13ce0:	beq	13d40 <close@plt+0x2fa0>
   13ce4:	add	r1, r1, #1
   13ce8:	cmp	r1, lr
   13cec:	add	r3, r3, #28
   13cf0:	bne	13cc8 <close@plt+0x2f28>
   13cf4:	ldr	r1, [r7, #4]
   13cf8:	ldr	r3, [r4, #4]
   13cfc:	str	r1, [sp, #4]
   13d00:	ldr	r1, [r7]
   13d04:	add	r2, r2, #8
   13d08:	add	r1, r1, #8
   13d0c:	str	r1, [sp]
   13d10:	ldr	r1, [pc, #104]	; 13d80 <close@plt+0x2fe0>
   13d14:	ldr	r0, [r6, #280]	; 0x118
   13d18:	ldr	r4, [r6, #276]	; 0x114
   13d1c:	blx	r4
   13d20:	mov	r0, #0
   13d24:	b	13d40 <close@plt+0x2fa0>
   13d28:	str	r1, [r8]
   13d2c:	ldr	r3, [r6, #276]	; 0x114
   13d30:	ldr	r0, [r6, #280]	; 0x118
   13d34:	ldr	r1, [pc, #72]	; 13d84 <close@plt+0x2fe4>
   13d38:	blx	r3
   13d3c:	mov	r0, #0
   13d40:	ldr	r2, [sp, #12]
   13d44:	ldr	r3, [r5]
   13d48:	cmp	r2, r3
   13d4c:	bne	13d78 <close@plt+0x2fd8>
   13d50:	add	sp, sp, #16
   13d54:	pop	{r4, r5, r6, r7, r8, pc}
   13d58:	ldr	r3, [sp, #8]
   13d5c:	mov	r0, r4
   13d60:	str	r3, [r8]
   13d64:	b	13d40 <close@plt+0x2fa0>
   13d68:	ldr	r3, [sp, #8]
   13d6c:	mov	r0, r7
   13d70:	str	r3, [r8]
   13d74:	b	13d40 <close@plt+0x2fa0>
   13d78:	bl	10c14 <__stack_chk_fail@plt>
   13d7c:	andeq	r8, r2, r0, lsr lr
   13d80:	muleq	r1, r8, r5
   13d84:	andeq	r7, r1, r8, lsl #11
   13d88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d8c:	sub	sp, sp, #24
   13d90:	ldr	r6, [pc, #352]	; 13ef8 <close@plt+0x3158>
   13d94:	mov	r8, r2
   13d98:	add	r2, sp, #16
   13d9c:	ldr	r3, [r6]
   13da0:	mov	r5, r0
   13da4:	str	r3, [sp, #20]
   13da8:	bl	13c34 <close@plt+0x2e94>
   13dac:	subs	r4, r0, #0
   13db0:	beq	13ed0 <close@plt+0x3130>
   13db4:	ldr	r7, [sp, #16]
   13db8:	mov	r0, r7
   13dbc:	ldrb	r3, [r0], #1
   13dc0:	cmp	r3, #91	; 0x5b
   13dc4:	bne	13e9c <close@plt+0x30fc>
   13dc8:	add	r1, sp, #16
   13dcc:	mov	r2, #10
   13dd0:	bl	10cf8 <strtoul@plt>
   13dd4:	mov	r7, r0
   13dd8:	bl	10cd4 <__ctype_b_loc@plt>
   13ddc:	ldr	sl, [sp, #16]
   13de0:	ldr	r1, [r0]
   13de4:	b	13dec <close@plt+0x304c>
   13de8:	mov	sl, r3
   13dec:	mov	r3, sl
   13df0:	ldrb	r2, [r3], #1
   13df4:	lsl	r0, r2, #1
   13df8:	ldrh	r0, [r1, r0]
   13dfc:	tst	r0, #8192	; 0x2000
   13e00:	bne	13de8 <close@plt+0x3048>
   13e04:	cmp	r2, #93	; 0x5d
   13e08:	ldr	r9, [r5, #276]	; 0x114
   13e0c:	bne	13eb8 <close@plt+0x3118>
   13e10:	ldrb	r2, [sl, #1]
   13e14:	lsl	r2, r2, #1
   13e18:	ldrh	r2, [r1, r2]
   13e1c:	tst	r2, #8192	; 0x2000
   13e20:	beq	13e38 <close@plt+0x3098>
   13e24:	ldrb	r2, [r3, #1]!
   13e28:	lsl	r2, r2, #1
   13e2c:	ldrh	r2, [r1, r2]
   13e30:	tst	r2, #8192	; 0x2000
   13e34:	bne	13e24 <close@plt+0x3084>
   13e38:	ldr	r2, [r4]
   13e3c:	ldr	r1, [r4, #4]
   13e40:	str	r3, [r8]
   13e44:	ldr	ip, [r2]
   13e48:	ldr	r3, [r2, #4]
   13e4c:	ldr	r0, [r5, #280]	; 0x118
   13e50:	ldr	r2, [ip, #4]
   13e54:	str	r7, [sp, #8]
   13e58:	ldr	ip, [r1, #4]
   13e5c:	str	ip, [sp, #4]
   13e60:	ldr	ip, [r1]
   13e64:	ldr	r1, [pc, #144]	; 13efc <close@plt+0x315c>
   13e68:	ldr	ip, [ip, #4]
   13e6c:	str	ip, [sp]
   13e70:	blx	r9
   13e74:	mov	r3, r7
   13e78:	mov	r0, r5
   13e7c:	ldm	r4, {r1, r2}
   13e80:	bl	12bf0 <close@plt+0x1e50>
   13e84:	ldr	r2, [sp, #20]
   13e88:	ldr	r3, [r6]
   13e8c:	cmp	r2, r3
   13e90:	bne	13ef4 <close@plt+0x3154>
   13e94:	add	sp, sp, #24
   13e98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e9c:	ldr	r0, [r5, #280]	; 0x118
   13ea0:	ldr	r3, [r5, #276]	; 0x114
   13ea4:	ldr	r1, [pc, #84]	; 13f00 <close@plt+0x3160>
   13ea8:	blx	r3
   13eac:	str	r7, [r8]
   13eb0:	mvn	r0, #21
   13eb4:	b	13e84 <close@plt+0x30e4>
   13eb8:	ldr	r0, [r5, #280]	; 0x118
   13ebc:	ldr	r1, [pc, #64]	; 13f04 <close@plt+0x3164>
   13ec0:	blx	r9
   13ec4:	str	sl, [r8]
   13ec8:	mvn	r0, #21
   13ecc:	b	13e84 <close@plt+0x30e4>
   13ed0:	ldr	r3, [r5, #276]	; 0x114
   13ed4:	ldr	r0, [r5, #280]	; 0x118
   13ed8:	ldr	r2, [pc, #40]	; 13f08 <close@plt+0x3168>
   13edc:	ldr	r1, [pc, #40]	; 13f0c <close@plt+0x316c>
   13ee0:	blx	r3
   13ee4:	ldr	r3, [sp, #16]
   13ee8:	mvn	r0, #21
   13eec:	str	r3, [r8]
   13ef0:	b	13e84 <close@plt+0x30e4>
   13ef4:	bl	10c14 <__stack_chk_fail@plt>
   13ef8:	andeq	r8, r2, r0, lsr lr
   13efc:	andeq	r7, r1, r4, lsr r6
   13f00:	ldrdeq	r7, [r1], -ip
   13f04:	andeq	r7, r1, r8, lsl #12
   13f08:	andeq	r7, r1, r4, lsr #5
   13f0c:	andeq	r7, r1, r0, asr #11
   13f10:	sub	r2, r2, r1
   13f14:	push	{r4, r5, r6, lr}
   13f18:	adds	r4, r2, #1
   13f1c:	mov	r6, r1
   13f20:	mov	r5, r0
   13f24:	movmi	r4, #0
   13f28:	bmi	13f3c <close@plt+0x319c>
   13f2c:	mov	r0, r1
   13f30:	bl	10d04 <strlen@plt>
   13f34:	cmp	r4, r0
   13f38:	movcs	r4, r0
   13f3c:	ldr	r3, [r5, #276]	; 0x114
   13f40:	ldr	r0, [r5, #280]	; 0x118
   13f44:	ldr	r1, [pc, #52]	; 13f80 <close@plt+0x31e0>
   13f48:	blx	r3
   13f4c:	mov	r2, r6
   13f50:	ldr	r3, [r5, #276]	; 0x114
   13f54:	ldr	r0, [r5, #280]	; 0x118
   13f58:	ldr	r1, [pc, #36]	; 13f84 <close@plt+0x31e4>
   13f5c:	blx	r3
   13f60:	ldr	lr, [r5, #276]	; 0x114
   13f64:	mov	r2, r4
   13f68:	ldr	r0, [r5, #280]	; 0x118
   13f6c:	mov	ip, lr
   13f70:	ldr	r3, [pc, #16]	; 13f88 <close@plt+0x31e8>
   13f74:	ldr	r1, [pc, #16]	; 13f8c <close@plt+0x31ec>
   13f78:	pop	{r4, r5, r6, lr}
   13f7c:	bx	ip
   13f80:	andeq	r6, r1, r8, lsl #8
   13f84:	muleq	r1, r8, r0
   13f88:	andeq	r7, r1, ip, asr r6
   13f8c:	andeq	r7, r1, r0, ror #12
   13f90:	push	{r4, r5, r6, r7, lr}
   13f94:	sub	sp, sp, #12
   13f98:	ldr	r7, [pc, #120]	; 14018 <close@plt+0x3278>
   13f9c:	mov	r5, r0
   13fa0:	mov	r4, r1
   13fa4:	ldr	r3, [r7]
   13fa8:	str	r3, [sp, #4]
   13fac:	b	13fc0 <close@plt+0x3220>
   13fb0:	ldr	r4, [sp]
   13fb4:	ldrb	r3, [r4], #1
   13fb8:	cmp	r3, #44	; 0x2c
   13fbc:	bne	14004 <close@plt+0x3264>
   13fc0:	mov	r2, sp
   13fc4:	mov	r1, r4
   13fc8:	mov	r0, r5
   13fcc:	bl	13d88 <close@plt+0x2fe8>
   13fd0:	subs	r6, r0, #0
   13fd4:	bge	13fb0 <close@plt+0x3210>
   13fd8:	mov	r1, r4
   13fdc:	mov	r0, r5
   13fe0:	ldr	r2, [sp]
   13fe4:	bl	13f10 <close@plt+0x3170>
   13fe8:	ldr	r2, [sp, #4]
   13fec:	ldr	r3, [r7]
   13ff0:	mov	r0, r6
   13ff4:	cmp	r2, r3
   13ff8:	bne	14014 <close@plt+0x3274>
   13ffc:	add	sp, sp, #12
   14000:	pop	{r4, r5, r6, r7, pc}
   14004:	cmp	r3, #0
   14008:	mvnne	r6, #21
   1400c:	moveq	r6, #0
   14010:	b	13fe8 <close@plt+0x3248>
   14014:	bl	10c14 <__stack_chk_fail@plt>
   14018:	andeq	r8, r2, r0, lsr lr
   1401c:	mov	ip, r3
   14020:	push	{r4, r5, r6, r7, r8, lr}
   14024:	mov	r8, r0
   14028:	ldr	r5, [pc, #392]	; 141b8 <close@plt+0x3418>
   1402c:	ldrb	lr, [ip], #1
   14030:	sub	sp, sp, #16
   14034:	ldr	r0, [r5]
   14038:	cmp	lr, #40	; 0x28
   1403c:	mov	r7, r1
   14040:	str	r0, [sp, #12]
   14044:	ldr	r6, [sp, #40]	; 0x28
   14048:	bne	1410c <close@plt+0x336c>
   1404c:	mov	r4, r2
   14050:	mov	r0, ip
   14054:	mov	r2, #10
   14058:	add	r1, sp, #8
   1405c:	bl	10cf8 <strtoul@plt>
   14060:	ldr	r3, [sp, #8]
   14064:	str	r0, [r4]
   14068:	ldrb	r2, [r3]
   1406c:	cmp	r2, #44	; 0x2c
   14070:	bne	14130 <close@plt+0x3390>
   14074:	add	r0, r3, #1
   14078:	mov	r2, #10
   1407c:	add	r1, sp, #8
   14080:	bl	10cf8 <strtoul@plt>
   14084:	ldr	r3, [sp, #8]
   14088:	add	r2, r3, #1
   1408c:	str	r2, [sp, #8]
   14090:	str	r0, [r4, #4]
   14094:	ldrb	r2, [r3]
   14098:	cmp	r2, #41	; 0x29
   1409c:	bne	14190 <close@plt+0x33f0>
   140a0:	ldrb	r2, [r3, #1]
   140a4:	cmp	r2, #47	; 0x2f
   140a8:	bne	14150 <close@plt+0x33b0>
   140ac:	add	r0, r3, #2
   140b0:	mov	r2, #10
   140b4:	add	r1, sp, #8
   140b8:	bl	10cf8 <strtoul@plt>
   140bc:	ldr	r3, [sp, #8]
   140c0:	str	r0, [r4, #8]
   140c4:	ldrb	r2, [r3]
   140c8:	cmp	r2, #120	; 0x78
   140cc:	bne	14170 <close@plt+0x33d0>
   140d0:	add	r1, sp, #8
   140d4:	add	r0, r3, #1
   140d8:	mov	r2, #10
   140dc:	bl	10cf8 <strtoul@plt>
   140e0:	ldr	r3, [sp, #8]
   140e4:	mov	r1, #0
   140e8:	str	r0, [r4, #12]
   140ec:	str	r3, [r6]
   140f0:	ldr	r2, [sp, #12]
   140f4:	ldr	r3, [r5]
   140f8:	mov	r0, r1
   140fc:	cmp	r2, r3
   14100:	bne	141b4 <close@plt+0x3414>
   14104:	add	sp, sp, #16
   14108:	pop	{r4, r5, r6, r7, r8, pc}
   1410c:	ldr	r0, [r1]
   14110:	ldr	r2, [r8]
   14114:	ldr	r1, [pc, #160]	; 141bc <close@plt+0x341c>
   14118:	str	r3, [sp, #4]
   1411c:	blx	r2
   14120:	ldr	r3, [sp, #4]
   14124:	mvn	r1, #21
   14128:	str	r3, [r6]
   1412c:	b	140f0 <close@plt+0x3350>
   14130:	ldr	r3, [r8]
   14134:	ldr	r1, [pc, #132]	; 141c0 <close@plt+0x3420>
   14138:	ldr	r0, [r7]
   1413c:	blx	r3
   14140:	ldr	r3, [sp, #8]
   14144:	mvn	r1, #21
   14148:	str	r3, [r6]
   1414c:	b	140f0 <close@plt+0x3350>
   14150:	ldr	r3, [r8]
   14154:	ldr	r1, [pc, #104]	; 141c4 <close@plt+0x3424>
   14158:	ldr	r0, [r7]
   1415c:	blx	r3
   14160:	ldr	r3, [sp, #8]
   14164:	mvn	r1, #21
   14168:	str	r3, [r6]
   1416c:	b	140f0 <close@plt+0x3350>
   14170:	ldr	r3, [r8]
   14174:	ldr	r1, [pc, #76]	; 141c8 <close@plt+0x3428>
   14178:	ldr	r0, [r7]
   1417c:	blx	r3
   14180:	ldr	r3, [sp, #8]
   14184:	mvn	r1, #21
   14188:	str	r3, [r6]
   1418c:	b	140f0 <close@plt+0x3350>
   14190:	ldr	r3, [r8]
   14194:	ldr	r1, [pc, #48]	; 141cc <close@plt+0x342c>
   14198:	ldr	r0, [r7]
   1419c:	blx	r3
   141a0:	ldr	r3, [sp, #8]
   141a4:	mvn	r1, #21
   141a8:	sub	r3, r3, #1
   141ac:	str	r3, [r6]
   141b0:	b	140f0 <close@plt+0x3350>
   141b4:	bl	10c14 <__stack_chk_fail@plt>
   141b8:	andeq	r8, r2, r0, lsr lr
   141bc:	andeq	r7, r1, r8, lsr #27
   141c0:			; <UNDEFINED> instruction: 0x00017db8
   141c4:	ldrdeq	r7, [r1], -r8
   141c8:	andeq	r7, r1, r8, ror #27
   141cc:	andeq	r7, r1, r8, asr #27
   141d0:	push	{r4, r5, r6, r7, r8, lr}
   141d4:	mov	r5, r1
   141d8:	mov	r7, r0
   141dc:	bl	10d04 <strlen@plt>
   141e0:	ldr	r4, [r5]
   141e4:	mov	r1, r4
   141e8:	mov	r6, r0
   141ec:	mov	r2, r6
   141f0:	mov	r0, r7
   141f4:	bl	10d88 <strncmp@plt>
   141f8:	cmp	r0, #0
   141fc:	bne	14238 <close@plt+0x3498>
   14200:	add	r4, r4, r6
   14204:	str	r4, [r5]
   14208:	bl	10cd4 <__ctype_b_loc@plt>
   1420c:	mov	r2, r4
   14210:	ldr	r1, [r0]
   14214:	b	1421c <close@plt+0x347c>
   14218:	str	r2, [r5]
   1421c:	ldrb	r3, [r2], #1
   14220:	lsl	r3, r3, #1
   14224:	ldrh	r3, [r1, r3]
   14228:	tst	r3, #8192	; 0x2000
   1422c:	bne	14218 <close@plt+0x3478>
   14230:	mov	r0, #1
   14234:	pop	{r4, r5, r6, r7, r8, pc}
   14238:	mov	r0, #0
   1423c:	pop	{r4, r5, r6, r7, r8, pc}
   14240:	push	{r4, r5, r6, lr}
   14244:	add	r5, r0, #276	; 0x114
   14248:	mov	r4, r0
   1424c:	mov	r1, #2
   14250:	mov	r0, r5
   14254:	bl	10cbc <open@plt>
   14258:	cmn	r0, #1
   1425c:	str	r0, [r4, #308]	; 0x134
   14260:	movne	r4, #0
   14264:	beq	14270 <close@plt+0x34d0>
   14268:	mov	r0, r4
   1426c:	pop	{r4, r5, r6, pc}
   14270:	bl	10d28 <__errno_location@plt>
   14274:	ldr	ip, [r4]
   14278:	mov	r3, r5
   1427c:	ldr	r2, [pc, #28]	; 142a0 <close@plt+0x3500>
   14280:	ldr	r5, [ip, #276]	; 0x114
   14284:	ldr	r1, [pc, #24]	; 142a4 <close@plt+0x3504>
   14288:	ldr	r4, [r0]
   1428c:	ldr	r0, [ip, #280]	; 0x118
   14290:	rsb	r4, r4, #0
   14294:	blx	r5
   14298:	mov	r0, r4
   1429c:	pop	{r4, r5, r6, pc}
   142a0:	andeq	r7, r1, r8, ror #12
   142a4:	strdeq	r7, [r1], -r8
   142a8:	ldr	r3, [r0, #308]	; 0x134
   142ac:	cmn	r3, #1
   142b0:	beq	142bc <close@plt+0x351c>
   142b4:	mov	r0, #0
   142b8:	bx	lr
   142bc:	b	14240 <close@plt+0x34a0>
   142c0:	push	{r4, lr}
   142c4:	mov	r4, r0
   142c8:	ldr	r0, [r0, #308]	; 0x134
   142cc:	bl	10da0 <close@plt>
   142d0:	mvn	r3, #0
   142d4:	str	r3, [r4, #308]	; 0x134
   142d8:	pop	{r4, pc}
   142dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   142e0:	mov	r4, r1
   142e4:	ldr	r6, [pc, #180]	; 143a0 <close@plt+0x3600>
   142e8:	ldr	r5, [r0, #308]	; 0x134
   142ec:	sub	sp, sp, #100	; 0x64
   142f0:	ldr	r1, [r6]
   142f4:	cmn	r5, #1
   142f8:	mov	r9, r2
   142fc:	mov	r8, r3
   14300:	str	r1, [sp, #92]	; 0x5c
   14304:	beq	14374 <close@plt+0x35d4>
   14308:	mov	r2, #80	; 0x50
   1430c:	mov	r1, #0
   14310:	add	r0, sp, #12
   14314:	bl	10d40 <memset@plt>
   14318:	mov	r0, r5
   1431c:	add	r2, sp, #4
   14320:	ldr	r1, [pc, #124]	; 143a4 <close@plt+0x3604>
   14324:	strd	r8, [sp, #4]
   14328:	bl	10c5c <ioctl@plt>
   1432c:	cmp	r0, #0
   14330:	blt	1438c <close@plt+0x35ec>
   14334:	add	ip, sp, #12
   14338:	mov	lr, r4
   1433c:	ldm	ip!, {r0, r1, r2, r3}
   14340:	mov	r5, #0
   14344:	stmia	lr!, {r0, r1, r2, r3}
   14348:	ldm	ip!, {r0, r1, r2, r3}
   1434c:	stmia	lr!, {r0, r1, r2, r3}
   14350:	ldm	ip, {r0, r1, r2, r3}
   14354:	stm	lr, {r0, r1, r2, r3}
   14358:	mov	r0, r5
   1435c:	ldr	r2, [sp, #92]	; 0x5c
   14360:	ldr	r3, [r6]
   14364:	cmp	r2, r3
   14368:	bne	1439c <close@plt+0x35fc>
   1436c:	add	sp, sp, #100	; 0x64
   14370:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14374:	mov	r7, r0
   14378:	bl	14240 <close@plt+0x34a0>
   1437c:	subs	r5, r0, #0
   14380:	blt	14358 <close@plt+0x35b8>
   14384:	ldr	r5, [r7, #308]	; 0x134
   14388:	b	14308 <close@plt+0x3568>
   1438c:	bl	10d28 <__errno_location@plt>
   14390:	ldr	r5, [r0]
   14394:	rsb	r5, r5, #0
   14398:	b	14358 <close@plt+0x35b8>
   1439c:	bl	10c14 <__stack_chk_fail@plt>
   143a0:	andeq	r8, r2, r0, lsr lr
   143a4:	subsgt	r5, r8, r4, lsl #12
   143a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   143ac:	mov	r4, r1
   143b0:	ldr	r6, [pc, #212]	; 1448c <close@plt+0x36ec>
   143b4:	ldr	r5, [r0, #308]	; 0x134
   143b8:	sub	sp, sp, #100	; 0x64
   143bc:	ldr	r1, [r6]
   143c0:	cmn	r5, #1
   143c4:	mov	r8, r2
   143c8:	mov	r7, r3
   143cc:	str	r1, [sp, #92]	; 0x5c
   143d0:	beq	14460 <close@plt+0x36c0>
   143d4:	mov	r2, #32
   143d8:	mov	r1, #0
   143dc:	add	r0, sp, #60	; 0x3c
   143e0:	bl	10d40 <memset@plt>
   143e4:	mov	lr, r4
   143e8:	add	ip, sp, #12
   143ec:	ldm	lr!, {r0, r1, r2, r3}
   143f0:	stmib	sp, {r7, r8}
   143f4:	stmia	ip!, {r0, r1, r2, r3}
   143f8:	ldm	lr!, {r0, r1, r2, r3}
   143fc:	stmia	ip!, {r0, r1, r2, r3}
   14400:	ldm	lr, {r0, r1, r2, r3}
   14404:	stm	ip, {r0, r1, r2, r3}
   14408:	mov	r0, r5
   1440c:	add	r2, sp, #4
   14410:	ldr	r1, [pc, #120]	; 14490 <close@plt+0x36f0>
   14414:	bl	10c5c <ioctl@plt>
   14418:	cmp	r0, #0
   1441c:	blt	14478 <close@plt+0x36d8>
   14420:	add	lr, sp, #12
   14424:	mov	ip, r4
   14428:	ldm	lr!, {r0, r1, r2, r3}
   1442c:	mov	r5, #0
   14430:	stmia	ip!, {r0, r1, r2, r3}
   14434:	ldm	lr!, {r0, r1, r2, r3}
   14438:	stmia	ip!, {r0, r1, r2, r3}
   1443c:	ldm	lr, {r0, r1, r2, r3}
   14440:	stm	ip, {r0, r1, r2, r3}
   14444:	mov	r0, r5
   14448:	ldr	r2, [sp, #92]	; 0x5c
   1444c:	ldr	r3, [r6]
   14450:	cmp	r2, r3
   14454:	bne	14488 <close@plt+0x36e8>
   14458:	add	sp, sp, #100	; 0x64
   1445c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14460:	mov	r9, r0
   14464:	bl	14240 <close@plt+0x34a0>
   14468:	subs	r5, r0, #0
   1446c:	blt	14444 <close@plt+0x36a4>
   14470:	ldr	r5, [r9, #308]	; 0x134
   14474:	b	143d4 <close@plt+0x3634>
   14478:	bl	10d28 <__errno_location@plt>
   1447c:	ldr	r5, [r0]
   14480:	rsb	r5, r5, #0
   14484:	b	14444 <close@plt+0x36a4>
   14488:	bl	10c14 <__stack_chk_fail@plt>
   1448c:	andeq	r8, r2, r0, lsr lr
   14490:	subsgt	r5, r8, r5, lsl #12
   14494:	ldr	r3, [r2]
   14498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1449c:	cmp	r3, #0
   144a0:	sub	sp, sp, #20
   144a4:	moveq	fp, r3
   144a8:	beq	145b4 <close@plt+0x3814>
   144ac:	ldr	fp, [r2, #4]
   144b0:	cmp	fp, #0
   144b4:	beq	145b4 <close@plt+0x3814>
   144b8:	ldr	sl, [r0]
   144bc:	ldr	r4, [r2, #8]
   144c0:	ldr	lr, [pc, #308]	; 145fc <close@plt+0x385c>
   144c4:	ldr	r7, [sl]
   144c8:	ldr	r5, [pc, #304]	; 14600 <close@plt+0x3860>
   144cc:	mov	ip, #0
   144d0:	ldr	r6, [r7, #276]	; 0x114
   144d4:	ldr	r9, [r7, #280]	; 0x118
   144d8:	b	144f0 <close@plt+0x3750>
   144dc:	add	ip, ip, #1
   144e0:	cmp	ip, #135	; 0x87
   144e4:	add	lr, r5, ip, lsl #3
   144e8:	beq	145c0 <close@plt+0x3820>
   144ec:	ldr	lr, [lr, #4]
   144f0:	cmp	r4, lr
   144f4:	bne	144dc <close@plt+0x373c>
   144f8:	ldr	lr, [pc, #260]	; 14604 <close@plt+0x3864>
   144fc:	add	ip, lr, ip, lsl #3
   14500:	ldr	ip, [ip, #20]
   14504:	mov	r8, r1
   14508:	ldr	r1, [r1]
   1450c:	mov	r7, r0
   14510:	add	sl, sl, #8
   14514:	mov	r4, r2
   14518:	str	fp, [sp]
   1451c:	mov	r2, ip
   14520:	mov	r0, r9
   14524:	str	r1, [sp, #8]
   14528:	str	sl, [sp, #4]
   1452c:	ldr	r1, [pc, #212]	; 14608 <close@plt+0x3868>
   14530:	blx	r6
   14534:	mov	r3, #1
   14538:	ldr	r2, [r8]
   1453c:	mov	r1, r4
   14540:	ldr	r0, [r7]
   14544:	bl	143a8 <close@plt+0x3608>
   14548:	ldr	r3, [r7]
   1454c:	subs	fp, r0, #0
   14550:	blt	145c8 <close@plt+0x3828>
   14554:	ldr	r2, [r3]
   14558:	ldr	ip, [r4, #8]
   1455c:	ldr	r1, [pc, #152]	; 145fc <close@plt+0x385c>
   14560:	ldr	lr, [pc, #152]	; 14600 <close@plt+0x3860>
   14564:	mov	r3, #0
   14568:	ldr	r5, [r2, #276]	; 0x114
   1456c:	ldr	r0, [r2, #280]	; 0x118
   14570:	b	14588 <close@plt+0x37e8>
   14574:	add	r3, r3, #1
   14578:	cmp	r3, #135	; 0x87
   1457c:	add	r1, lr, r3, lsl #3
   14580:	beq	145f4 <close@plt+0x3854>
   14584:	ldr	r1, [r1, #4]
   14588:	cmp	ip, r1
   1458c:	bne	14574 <close@plt+0x37d4>
   14590:	ldr	r2, [pc, #108]	; 14604 <close@plt+0x3864>
   14594:	add	r3, r2, r3, lsl #3
   14598:	ldr	r2, [r3, #20]
   1459c:	ldr	r3, [r4, #4]
   145a0:	ldr	r1, [pc, #100]	; 1460c <close@plt+0x386c>
   145a4:	str	r3, [sp]
   145a8:	ldr	r3, [r4]
   145ac:	blx	r5
   145b0:	mov	fp, #0
   145b4:	mov	r0, fp
   145b8:	add	sp, sp, #20
   145bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145c0:	ldr	ip, [pc, #72]	; 14610 <close@plt+0x3870>
   145c4:	b	14504 <close@plt+0x3764>
   145c8:	ldr	r3, [r3]
   145cc:	rsb	r0, fp, #0
   145d0:	ldr	r6, [r3, #280]	; 0x118
   145d4:	ldr	r4, [r3, #276]	; 0x114
   145d8:	bl	10ca4 <strerror@plt>
   145dc:	mov	r3, fp
   145e0:	ldr	r1, [pc, #44]	; 14614 <close@plt+0x3874>
   145e4:	mov	r2, r0
   145e8:	mov	r0, r6
   145ec:	blx	r4
   145f0:	b	145b4 <close@plt+0x3814>
   145f4:	ldr	r2, [pc, #20]	; 14610 <close@plt+0x3870>
   145f8:	b	1459c <close@plt+0x37fc>
   145fc:	andeq	r1, r0, r6, lsl r0
   14600:	andeq	r7, r1, ip, ror r6
   14604:	andeq	r7, r1, r8, ror #12
   14608:	andeq	r7, r1, ip, lsr #28
   1460c:	andeq	r7, r1, r8, ror lr
   14610:	andeq	r7, r1, r4, lsr #28
   14614:	andeq	r7, r1, r8, asr lr
   14618:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1461c:	mov	r7, r1
   14620:	ldr	r6, [pc, #272]	; 14738 <close@plt+0x3998>
   14624:	ldr	r5, [r0, #308]	; 0x134
   14628:	sub	sp, sp, #76	; 0x4c
   1462c:	ldr	r1, [r6]
   14630:	cmn	r5, #1
   14634:	mov	r8, r0
   14638:	mov	sl, r2
   1463c:	mov	r4, r3
   14640:	str	r1, [sp, #68]	; 0x44
   14644:	ldr	r9, [sp, #112]	; 0x70
   14648:	beq	146dc <close@plt+0x393c>
   1464c:	mov	r2, #52	; 0x34
   14650:	mov	r1, #0
   14654:	add	r0, sp, #16
   14658:	bl	10d40 <memset@plt>
   1465c:	mov	r0, r5
   14660:	add	r2, sp, #4
   14664:	ldr	r1, [pc, #208]	; 1473c <close@plt+0x399c>
   14668:	str	sl, [sp, #8]
   1466c:	str	r4, [sp, #12]
   14670:	str	r9, [sp, #4]
   14674:	bl	10c5c <ioctl@plt>
   14678:	cmp	r0, #0
   1467c:	bge	146c8 <close@plt+0x3928>
   14680:	bl	10d28 <__errno_location@plt>
   14684:	ldr	r3, [r0]
   14688:	mov	r5, r0
   1468c:	subs	ip, r3, #25
   14690:	movne	ip, #1
   14694:	cmp	r4, #0
   14698:	moveq	r4, ip
   1469c:	movne	r4, #1
   146a0:	cmp	r4, #0
   146a4:	rsbne	ip, r3, #0
   146a8:	beq	146f0 <close@plt+0x3950>
   146ac:	ldr	r2, [sp, #68]	; 0x44
   146b0:	ldr	r3, [r6]
   146b4:	mov	r0, ip
   146b8:	cmp	r2, r3
   146bc:	bne	14734 <close@plt+0x3994>
   146c0:	add	sp, sp, #76	; 0x4c
   146c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146c8:	add	r3, sp, #20
   146cc:	mov	ip, #0
   146d0:	ldm	r3, {r0, r1, r2, r3}
   146d4:	stm	r7, {r0, r1, r2, r3}
   146d8:	b	146ac <close@plt+0x390c>
   146dc:	bl	14240 <close@plt+0x34a0>
   146e0:	subs	ip, r0, #0
   146e4:	blt	146ac <close@plt+0x390c>
   146e8:	ldr	r5, [r8, #308]	; 0x134
   146ec:	b	1464c <close@plt+0x38ac>
   146f0:	add	fp, sp, #12
   146f4:	mov	r2, #48	; 0x30
   146f8:	mov	r1, r4
   146fc:	mov	r0, fp
   14700:	bl	10d40 <memset@plt>
   14704:	add	r2, sp, #4
   14708:	ldr	r1, [pc, #48]	; 14740 <close@plt+0x39a0>
   1470c:	ldr	r0, [r8, #308]	; 0x134
   14710:	stmib	sp, {r9, sl}
   14714:	bl	10c5c <ioctl@plt>
   14718:	cmp	r0, #0
   1471c:	movge	ip, r4
   14720:	ldmge	fp, {r0, r1, r2, r3}
   14724:	ldrlt	ip, [r5]
   14728:	stmge	r7, {r0, r1, r2, r3}
   1472c:	rsblt	ip, ip, #0
   14730:	b	146ac <close@plt+0x390c>
   14734:	bl	10c14 <__stack_chk_fail@plt>
   14738:	andeq	r8, r2, r0, lsr lr
   1473c:	subgt	r5, r0, sp, lsr r6
   14740:	eorsgt	r5, r8, fp, lsr r6
   14744:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14748:	mov	r4, r1
   1474c:	ldr	r6, [pc, #284]	; 14870 <close@plt+0x3ad0>
   14750:	ldr	fp, [r0, #308]	; 0x134
   14754:	sub	sp, sp, #76	; 0x4c
   14758:	ldr	r1, [r6]
   1475c:	cmn	fp, #1
   14760:	mov	r7, r0
   14764:	mov	r9, r2
   14768:	mov	sl, r3
   1476c:	str	r1, [sp, #68]	; 0x44
   14770:	ldr	r8, [sp, #112]	; 0x70
   14774:	beq	14810 <close@plt+0x3a70>
   14778:	mov	r2, #52	; 0x34
   1477c:	mov	r1, #0
   14780:	add	r0, sp, #16
   14784:	bl	10d40 <memset@plt>
   14788:	ldm	r4, {r0, r1, r2, r3}
   1478c:	add	r5, sp, #20
   14790:	str	r9, [sp, #8]
   14794:	str	sl, [sp, #12]
   14798:	stm	r5, {r0, r1, r2, r3}
   1479c:	mov	r0, fp
   147a0:	add	r2, sp, #4
   147a4:	ldr	r1, [pc, #200]	; 14874 <close@plt+0x3ad4>
   147a8:	str	r8, [sp, #4]
   147ac:	bl	10c5c <ioctl@plt>
   147b0:	cmp	r0, #0
   147b4:	bge	14800 <close@plt+0x3a60>
   147b8:	bl	10d28 <__errno_location@plt>
   147bc:	ldr	r3, [r0]
   147c0:	mov	fp, r0
   147c4:	subs	ip, r3, #25
   147c8:	movne	ip, #1
   147cc:	cmp	sl, #0
   147d0:	movne	r5, #1
   147d4:	moveq	r5, ip
   147d8:	cmp	r5, #0
   147dc:	rsbne	r5, r3, #0
   147e0:	beq	14824 <close@plt+0x3a84>
   147e4:	ldr	r2, [sp, #68]	; 0x44
   147e8:	ldr	r3, [r6]
   147ec:	mov	r0, r5
   147f0:	cmp	r2, r3
   147f4:	bne	1486c <close@plt+0x3acc>
   147f8:	add	sp, sp, #76	; 0x4c
   147fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14800:	ldm	r5, {r0, r1, r2, r3}
   14804:	mov	r5, #0
   14808:	stm	r4, {r0, r1, r2, r3}
   1480c:	b	147e4 <close@plt+0x3a44>
   14810:	bl	14240 <close@plt+0x34a0>
   14814:	subs	r5, r0, #0
   14818:	blt	147e4 <close@plt+0x3a44>
   1481c:	ldr	fp, [r7, #308]	; 0x134
   14820:	b	14778 <close@plt+0x39d8>
   14824:	mov	r1, r5
   14828:	mov	r2, #32
   1482c:	add	r0, sp, #28
   14830:	bl	10d40 <memset@plt>
   14834:	ldm	r4, {r0, r1, r2, r3}
   14838:	add	sl, sp, #12
   1483c:	strd	r8, [sp, #4]
   14840:	stm	sl, {r0, r1, r2, r3}
   14844:	add	r2, sp, #4
   14848:	ldr	r1, [pc, #40]	; 14878 <close@plt+0x3ad8>
   1484c:	ldr	r0, [r7, #308]	; 0x134
   14850:	bl	10c5c <ioctl@plt>
   14854:	cmp	r0, #0
   14858:	ldmge	sl, {r0, r1, r2, r3}
   1485c:	ldrlt	ip, [fp]
   14860:	stmge	r4, {r0, r1, r2, r3}
   14864:	rsblt	r5, ip, #0
   14868:	b	147e4 <close@plt+0x3a44>
   1486c:	bl	10c14 <__stack_chk_fail@plt>
   14870:	andeq	r8, r2, r0, lsr lr
   14874:	subgt	r5, r0, lr, lsr r6
   14878:	eorsgt	r5, r8, ip, lsr r6
   1487c:	ldr	ip, [r3]
   14880:	push	{r4, r5, r6, r7, r8, r9, lr}
   14884:	cmn	ip, #1
   14888:	sub	sp, sp, #28
   1488c:	beq	14940 <close@plt+0x3ba0>
   14890:	ldr	lr, [r3, #4]
   14894:	cmn	lr, #1
   14898:	beq	14940 <close@plt+0x3ba0>
   1489c:	mov	r6, r1
   148a0:	ldr	r1, [r0]
   148a4:	mov	r4, r3
   148a8:	mov	r3, ip
   148ac:	ldr	ip, [r1], #8
   148b0:	ldr	r9, [r6]
   148b4:	ldr	r8, [r4, #12]
   148b8:	mov	r5, r0
   148bc:	ldr	r0, [ip, #280]	; 0x118
   148c0:	str	lr, [sp]
   148c4:	str	r1, [sp, #12]
   148c8:	ldr	r1, [r4, #8]
   148cc:	str	r9, [sp, #16]
   148d0:	mov	r7, r2
   148d4:	stmib	sp, {r1, r8}
   148d8:	ldr	r1, [pc, #156]	; 1497c <close@plt+0x3bdc>
   148dc:	ldr	r8, [ip, #276]	; 0x114
   148e0:	blx	r8
   148e4:	mov	r1, #1
   148e8:	ldr	r2, [r6]
   148ec:	mov	r3, r7
   148f0:	str	r1, [sp]
   148f4:	mov	r1, r4
   148f8:	ldr	r0, [r5]
   148fc:	bl	14744 <close@plt+0x39a4>
   14900:	ldr	r3, [r5]
   14904:	subs	r6, r0, #0
   14908:	blt	14950 <close@plt+0x3bb0>
   1490c:	ldr	ip, [r3]
   14910:	ldr	r1, [r4, #8]
   14914:	ldr	lr, [r4, #12]
   14918:	ldrd	r2, [r4]
   1491c:	ldr	r0, [ip, #280]	; 0x118
   14920:	stm	sp, {r1, lr}
   14924:	ldr	r1, [pc, #84]	; 14980 <close@plt+0x3be0>
   14928:	ldr	r4, [ip, #276]	; 0x114
   1492c:	blx	r4
   14930:	mov	r6, #0
   14934:	mov	r0, r6
   14938:	add	sp, sp, #28
   1493c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14940:	mov	r6, #0
   14944:	mov	r0, r6
   14948:	add	sp, sp, #28
   1494c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14950:	ldr	r3, [r3]
   14954:	rsb	r0, r6, #0
   14958:	ldr	r5, [r3, #280]	; 0x118
   1495c:	ldr	r4, [r3, #276]	; 0x114
   14960:	bl	10ca4 <strerror@plt>
   14964:	mov	r3, r6
   14968:	ldr	r1, [pc, #20]	; 14984 <close@plt+0x3be4>
   1496c:	mov	r2, r0
   14970:	mov	r0, r5
   14974:	blx	r4
   14978:	b	14934 <close@plt+0x3b94>
   1497c:	muleq	r1, r0, lr
   14980:	andeq	r7, r1, r4, lsl #30
   14984:	ldrdeq	r7, [r1], -r8
   14988:	ldr	r3, [r0, #308]	; 0x134
   1498c:	push	{r4, r5, r6, lr}
   14990:	cmn	r3, #1
   14994:	mov	r5, r0
   14998:	mov	r4, r1
   1499c:	ldr	r6, [r1, #4]
   149a0:	beq	149d8 <close@plt+0x3c38>
   149a4:	mov	r2, #144	; 0x90
   149a8:	mov	r1, #0
   149ac:	mov	r0, r4
   149b0:	bl	10d40 <memset@plt>
   149b4:	str	r6, [r4, #4]
   149b8:	mov	r2, r4
   149bc:	ldr	r0, [r5, #308]	; 0x134
   149c0:	ldr	r1, [pc, #48]	; 149f8 <close@plt+0x3c58>
   149c4:	bl	10c5c <ioctl@plt>
   149c8:	cmp	r0, #0
   149cc:	blt	149e8 <close@plt+0x3c48>
   149d0:	mov	r0, #0
   149d4:	pop	{r4, r5, r6, pc}
   149d8:	bl	14240 <close@plt+0x34a0>
   149dc:	cmp	r0, #0
   149e0:	bge	149a4 <close@plt+0x3c04>
   149e4:	pop	{r4, r5, r6, pc}
   149e8:	bl	10d28 <__errno_location@plt>
   149ec:	ldr	r0, [r0]
   149f0:	rsb	r0, r0, #0
   149f4:	pop	{r4, r5, r6, pc}
   149f8:	addsgt	r5, r0, r4, ror #12
   149fc:	ldr	r3, [r0, #308]	; 0x134
   14a00:	push	{r4, r5, r6, lr}
   14a04:	cmn	r3, #1
   14a08:	mov	r4, r0
   14a0c:	mov	r5, r1
   14a10:	beq	14a44 <close@plt+0x3ca4>
   14a14:	mov	r2, #132	; 0x84
   14a18:	mov	r1, #0
   14a1c:	mov	r0, r5
   14a20:	bl	10d40 <memset@plt>
   14a24:	mov	r2, r5
   14a28:	ldr	r0, [r4, #308]	; 0x134
   14a2c:	ldr	r1, [pc, #48]	; 14a64 <close@plt+0x3cc4>
   14a30:	bl	10c5c <ioctl@plt>
   14a34:	cmp	r0, #0
   14a38:	blt	14a54 <close@plt+0x3cb4>
   14a3c:	mov	r0, #0
   14a40:	pop	{r4, r5, r6, pc}
   14a44:	bl	14240 <close@plt+0x34a0>
   14a48:	cmp	r0, #0
   14a4c:	bge	14a14 <close@plt+0x3c74>
   14a50:	pop	{r4, r5, r6, pc}
   14a54:	bl	10d28 <__errno_location@plt>
   14a58:	ldr	r0, [r0]
   14a5c:	rsb	r0, r0, #0
   14a60:	pop	{r4, r5, r6, pc}
   14a64:	addhi	r5, r4, r3, ror #12
   14a68:	ldr	r3, [r0, #308]	; 0x134
   14a6c:	push	{r4, r5, r6, lr}
   14a70:	cmn	r3, #1
   14a74:	mov	r4, r0
   14a78:	mov	r5, r1
   14a7c:	beq	14ab0 <close@plt+0x3d10>
   14a80:	mov	r2, #132	; 0x84
   14a84:	mov	r1, #0
   14a88:	mov	r0, r5
   14a8c:	bl	10d40 <memset@plt>
   14a90:	mov	r2, r5
   14a94:	ldr	r0, [r4, #308]	; 0x134
   14a98:	ldr	r1, [pc, #48]	; 14ad0 <close@plt+0x3d30>
   14a9c:	bl	10c5c <ioctl@plt>
   14aa0:	cmp	r0, #0
   14aa4:	blt	14ac0 <close@plt+0x3d20>
   14aa8:	mov	r0, #0
   14aac:	pop	{r4, r5, r6, pc}
   14ab0:	bl	14240 <close@plt+0x34a0>
   14ab4:	cmp	r0, #0
   14ab8:	bge	14a80 <close@plt+0x3ce0>
   14abc:	pop	{r4, r5, r6, pc}
   14ac0:	bl	10d28 <__errno_location@plt>
   14ac4:	ldr	r0, [r0]
   14ac8:	rsb	r0, r0, #0
   14acc:	pop	{r4, r5, r6, pc}
   14ad0:	addgt	r5, r4, r8, asr r6
   14ad4:	ldr	r3, [r0, #308]	; 0x134
   14ad8:	push	{r4, r5, r6, lr}
   14adc:	cmn	r3, #1
   14ae0:	mov	r5, r1
   14ae4:	beq	14b08 <close@plt+0x3d68>
   14ae8:	mov	r2, r5
   14aec:	mov	r0, r3
   14af0:	ldr	r1, [pc, #56]	; 14b30 <close@plt+0x3d90>
   14af4:	bl	10c5c <ioctl@plt>
   14af8:	cmp	r0, #0
   14afc:	blt	14b20 <close@plt+0x3d80>
   14b00:	mov	r0, #0
   14b04:	pop	{r4, r5, r6, pc}
   14b08:	mov	r4, r0
   14b0c:	bl	14240 <close@plt+0x34a0>
   14b10:	cmp	r0, #0
   14b14:	poplt	{r4, r5, r6, pc}
   14b18:	ldr	r3, [r4, #308]	; 0x134
   14b1c:	b	14ae8 <close@plt+0x3d48>
   14b20:	bl	10d28 <__errno_location@plt>
   14b24:	ldr	r0, [r0]
   14b28:	rsb	r0, r0, #0
   14b2c:	pop	{r4, r5, r6, pc}
   14b30:	addgt	r5, r4, r7, asr r6
   14b34:	push	{r4, r5, r6, r7, r8, lr}
   14b38:	sub	sp, sp, #56	; 0x38
   14b3c:	ldr	r6, [pc, #156]	; 14be0 <close@plt+0x3e40>
   14b40:	ldr	r5, [r0, #308]	; 0x134
   14b44:	mov	r7, r1
   14b48:	ldr	r3, [r6]
   14b4c:	cmn	r5, #1
   14b50:	mov	r8, r2
   14b54:	str	r3, [sp, #52]	; 0x34
   14b58:	beq	14bb4 <close@plt+0x3e14>
   14b5c:	add	r4, sp, #8
   14b60:	mov	r2, #44	; 0x2c
   14b64:	mov	r1, #0
   14b68:	mov	r0, r4
   14b6c:	bl	10d40 <memset@plt>
   14b70:	mov	r0, r5
   14b74:	add	r2, sp, #4
   14b78:	ldr	r1, [pc, #100]	; 14be4 <close@plt+0x3e44>
   14b7c:	str	r8, [sp, #4]
   14b80:	bl	10c5c <ioctl@plt>
   14b84:	cmp	r0, #0
   14b88:	blt	14bcc <close@plt+0x3e2c>
   14b8c:	ldm	r4, {r0, r1}
   14b90:	mov	r3, #0
   14b94:	stm	r7, {r0, r1}
   14b98:	ldr	r1, [sp, #52]	; 0x34
   14b9c:	ldr	r2, [r6]
   14ba0:	mov	r0, r3
   14ba4:	cmp	r1, r2
   14ba8:	bne	14bdc <close@plt+0x3e3c>
   14bac:	add	sp, sp, #56	; 0x38
   14bb0:	pop	{r4, r5, r6, r7, r8, pc}
   14bb4:	mov	r4, r0
   14bb8:	bl	14240 <close@plt+0x34a0>
   14bbc:	subs	r3, r0, #0
   14bc0:	blt	14b98 <close@plt+0x3df8>
   14bc4:	ldr	r5, [r4, #308]	; 0x134
   14bc8:	b	14b5c <close@plt+0x3dbc>
   14bcc:	bl	10d28 <__errno_location@plt>
   14bd0:	ldr	r3, [r0]
   14bd4:	rsb	r3, r3, #0
   14bd8:	b	14b98 <close@plt+0x3df8>
   14bdc:	bl	10c14 <__stack_chk_fail@plt>
   14be0:	andeq	r8, r2, r0, lsr lr
   14be4:	eorsgt	r5, r0, r5, lsl r6
   14be8:	push	{r4, r5, r6, r7, r8, lr}
   14bec:	sub	sp, sp, #56	; 0x38
   14bf0:	ldr	r7, [pc, #164]	; 14c9c <close@plt+0x3efc>
   14bf4:	ldr	r6, [r0, #308]	; 0x134
   14bf8:	mov	r4, r1
   14bfc:	ldr	r3, [r7]
   14c00:	cmn	r6, #1
   14c04:	mov	r8, r2
   14c08:	str	r3, [sp, #52]	; 0x34
   14c0c:	beq	14c70 <close@plt+0x3ed0>
   14c10:	mov	r2, #36	; 0x24
   14c14:	mov	r1, #0
   14c18:	add	r0, sp, #16
   14c1c:	bl	10d40 <memset@plt>
   14c20:	ldm	r4, {r0, r1}
   14c24:	add	r5, sp, #8
   14c28:	add	r2, sp, #4
   14c2c:	stm	r5, {r0, r1}
   14c30:	mov	r0, r6
   14c34:	ldr	r1, [pc, #100]	; 14ca0 <close@plt+0x3f00>
   14c38:	str	r8, [sp, #4]
   14c3c:	bl	10c5c <ioctl@plt>
   14c40:	cmp	r0, #0
   14c44:	blt	14c88 <close@plt+0x3ee8>
   14c48:	ldm	r5, {r0, r1}
   14c4c:	mov	r3, #0
   14c50:	stm	r4, {r0, r1}
   14c54:	ldr	r1, [sp, #52]	; 0x34
   14c58:	ldr	r2, [r7]
   14c5c:	mov	r0, r3
   14c60:	cmp	r1, r2
   14c64:	bne	14c98 <close@plt+0x3ef8>
   14c68:	add	sp, sp, #56	; 0x38
   14c6c:	pop	{r4, r5, r6, r7, r8, pc}
   14c70:	mov	r5, r0
   14c74:	bl	14240 <close@plt+0x34a0>
   14c78:	subs	r3, r0, #0
   14c7c:	blt	14c54 <close@plt+0x3eb4>
   14c80:	ldr	r6, [r5, #308]	; 0x134
   14c84:	b	14c10 <close@plt+0x3e70>
   14c88:	bl	10d28 <__errno_location@plt>
   14c8c:	ldr	r3, [r0]
   14c90:	rsb	r3, r3, #0
   14c94:	b	14c54 <close@plt+0x3eb4>
   14c98:	bl	10c14 <__stack_chk_fail@plt>
   14c9c:	andeq	r8, r2, r0, lsr lr
   14ca0:	eorsgt	r5, r0, r6, lsl r6
   14ca4:	ldr	r3, [r2]
   14ca8:	push	{r4, r5, r6, r7, lr}
   14cac:	cmp	r3, #0
   14cb0:	sub	sp, sp, #12
   14cb4:	moveq	r5, r3
   14cb8:	beq	14d2c <close@plt+0x3f8c>
   14cbc:	ldr	ip, [r0]
   14cc0:	mov	r5, r1
   14cc4:	mov	r4, r2
   14cc8:	ldr	lr, [ip], #8
   14ccc:	ldr	r1, [r1]
   14cd0:	mov	r6, r0
   14cd4:	mov	r2, r3
   14cd8:	ldr	r0, [lr, #280]	; 0x118
   14cdc:	ldr	r3, [r4, #4]
   14ce0:	str	ip, [sp]
   14ce4:	str	r1, [sp, #4]
   14ce8:	ldr	r1, [pc, #120]	; 14d68 <close@plt+0x3fc8>
   14cec:	ldr	r7, [lr, #276]	; 0x114
   14cf0:	blx	r7
   14cf4:	ldr	r2, [r5]
   14cf8:	mov	r1, r4
   14cfc:	ldr	r0, [r6]
   14d00:	bl	14be8 <close@plt+0x3e48>
   14d04:	subs	r5, r0, #0
   14d08:	blt	14d38 <close@plt+0x3f98>
   14d0c:	ldr	r1, [r6]
   14d10:	ldrd	r2, [r4]
   14d14:	mov	r5, #0
   14d18:	ldr	r0, [r1]
   14d1c:	ldr	r1, [pc, #72]	; 14d6c <close@plt+0x3fcc>
   14d20:	ldr	r4, [r0, #276]	; 0x114
   14d24:	ldr	r0, [r0, #280]	; 0x118
   14d28:	blx	r4
   14d2c:	mov	r0, r5
   14d30:	add	sp, sp, #12
   14d34:	pop	{r4, r5, r6, r7, pc}
   14d38:	ldr	r3, [r6]
   14d3c:	rsb	r0, r5, #0
   14d40:	ldr	r3, [r3]
   14d44:	ldr	r6, [r3, #280]	; 0x118
   14d48:	ldr	r4, [r3, #276]	; 0x114
   14d4c:	bl	10ca4 <strerror@plt>
   14d50:	mov	r3, r5
   14d54:	ldr	r1, [pc, #20]	; 14d70 <close@plt+0x3fd0>
   14d58:	mov	r2, r0
   14d5c:	mov	r0, r6
   14d60:	blx	r4
   14d64:	b	14d2c <close@plt+0x3f8c>
   14d68:	andeq	r7, r1, ip, lsr #30
   14d6c:	andeq	r7, r1, r4, lsl #31
   14d70:	andeq	r7, r1, ip, asr pc
   14d74:	ldr	r2, [pc, #60]	; 14db8 <close@plt+0x4018>
   14d78:	ldr	r1, [pc, #60]	; 14dbc <close@plt+0x401c>
   14d7c:	mov	r3, #0
   14d80:	b	14d98 <close@plt+0x3ff8>
   14d84:	add	r3, r3, #1
   14d88:	cmp	r3, #135	; 0x87
   14d8c:	add	r2, r1, r3, lsl #3
   14d90:	beq	14db0 <close@plt+0x4010>
   14d94:	ldr	r2, [r2, #4]
   14d98:	cmp	r2, r0
   14d9c:	bne	14d84 <close@plt+0x3fe4>
   14da0:	ldr	r2, [pc, #24]	; 14dc0 <close@plt+0x4020>
   14da4:	add	r3, r2, r3, lsl #3
   14da8:	ldr	r0, [r3, #20]
   14dac:	bx	lr
   14db0:	ldr	r0, [pc, #12]	; 14dc4 <close@plt+0x4024>
   14db4:	bx	lr
   14db8:	andeq	r1, r0, r6, lsl r0
   14dbc:	andeq	r7, r1, ip, ror r6
   14dc0:	andeq	r7, r1, r8, ror #12
   14dc4:	andeq	r7, r1, r4, lsr #28
   14dc8:	push	{r4, r5, r6, lr}
   14dcc:	mov	r5, r0
   14dd0:	ldr	r3, [pc, #68]	; 14e1c <close@plt+0x407c>
   14dd4:	ldr	r6, [pc, #68]	; 14e20 <close@plt+0x4080>
   14dd8:	mov	r4, #0
   14ddc:	b	14df0 <close@plt+0x4050>
   14de0:	add	r4, r4, #1
   14de4:	cmp	r4, #135	; 0x87
   14de8:	beq	14e14 <close@plt+0x4074>
   14dec:	ldr	r3, [r6, r4, lsl #3]
   14df0:	mov	r0, r3
   14df4:	mov	r1, r5
   14df8:	bl	10bb4 <strcmp@plt>
   14dfc:	cmp	r0, #0
   14e00:	bne	14de0 <close@plt+0x4040>
   14e04:	ldr	r3, [pc, #24]	; 14e24 <close@plt+0x4084>
   14e08:	add	r4, r3, r4, lsl #3
   14e0c:	ldr	r0, [r4, #24]
   14e10:	pop	{r4, r5, r6, pc}
   14e14:	mvn	r0, #0
   14e18:	pop	{r4, r5, r6, pc}
   14e1c:	andeq	r7, r1, r0, lsr #31
   14e20:	andeq	r7, r1, ip, ror r6
   14e24:	andeq	r7, r1, r8, ror #12
   14e28:	mov	r2, #0
   14e2c:	ldr	r1, [pc, #56]	; 14e6c <close@plt+0x40cc>
   14e30:	mov	r3, r2
   14e34:	b	14e3c <close@plt+0x409c>
   14e38:	ldr	r2, [r2, #4]
   14e3c:	cmp	r2, r0
   14e40:	beq	14e5c <close@plt+0x40bc>
   14e44:	add	r3, r3, #1
   14e48:	cmp	r3, #10
   14e4c:	add	r2, r1, r3, lsl #3
   14e50:	bne	14e38 <close@plt+0x4098>
   14e54:	ldr	r0, [pc, #20]	; 14e70 <close@plt+0x40d0>
   14e58:	bx	lr
   14e5c:	ldr	r2, [pc, #16]	; 14e74 <close@plt+0x40d4>
   14e60:	add	r3, r2, r3, lsl #3
   14e64:	ldr	r0, [r3, #1100]	; 0x44c
   14e68:	bx	lr
   14e6c:			; <UNDEFINED> instruction: 0x00017ab4
   14e70:	andeq	r7, r1, r4, lsr #28
   14e74:	andeq	r7, r1, r8, ror #12
   14e78:	push	{r4, r5, r6, lr}
   14e7c:	mov	r5, r0
   14e80:	ldr	r3, [pc, #68]	; 14ecc <close@plt+0x412c>
   14e84:	ldr	r6, [pc, #68]	; 14ed0 <close@plt+0x4130>
   14e88:	mov	r4, #0
   14e8c:	b	14e94 <close@plt+0x40f4>
   14e90:	ldr	r3, [r6, r4, lsl #3]
   14e94:	mov	r0, r3
   14e98:	mov	r1, r5
   14e9c:	bl	10c2c <strcasecmp@plt>
   14ea0:	cmp	r0, #0
   14ea4:	beq	14ebc <close@plt+0x411c>
   14ea8:	add	r4, r4, #1
   14eac:	cmp	r4, #10
   14eb0:	bne	14e90 <close@plt+0x40f0>
   14eb4:	mvn	r0, #0
   14eb8:	pop	{r4, r5, r6, pc}
   14ebc:	ldr	r3, [pc, #16]	; 14ed4 <close@plt+0x4134>
   14ec0:	add	r4, r3, r4, lsl #3
   14ec4:	ldr	r0, [r4, #1104]	; 0x450
   14ec8:	pop	{r4, r5, r6, pc}
   14ecc:	andeq	r7, r1, ip, lsr #31
   14ed0:			; <UNDEFINED> instruction: 0x00017ab4
   14ed4:	andeq	r7, r1, r8, ror #12
   14ed8:	mov	r2, #0
   14edc:	ldr	r1, [pc, #56]	; 14f1c <close@plt+0x417c>
   14ee0:	mov	r3, r2
   14ee4:	b	14eec <close@plt+0x414c>
   14ee8:	ldr	r2, [r2, #4]
   14eec:	cmp	r2, r0
   14ef0:	beq	14f0c <close@plt+0x416c>
   14ef4:	add	r3, r3, #1
   14ef8:	cmp	r3, #11
   14efc:	add	r2, r1, r3, lsl #3
   14f00:	bne	14ee8 <close@plt+0x4148>
   14f04:	ldr	r0, [pc, #20]	; 14f20 <close@plt+0x4180>
   14f08:	bx	lr
   14f0c:	ldr	r2, [pc, #16]	; 14f24 <close@plt+0x4184>
   14f10:	add	r3, r2, r3, lsl #3
   14f14:	ldr	r0, [r3, #1180]	; 0x49c
   14f18:	bx	lr
   14f1c:	andeq	r7, r1, r4, lsl #22
   14f20:	andeq	r7, r1, r4, lsr #28
   14f24:	andeq	r7, r1, r8, ror #12
   14f28:	push	{r4, r5, r6, lr}
   14f2c:	mov	r5, r0
   14f30:	ldr	r3, [pc, #68]	; 14f7c <close@plt+0x41dc>
   14f34:	ldr	r6, [pc, #68]	; 14f80 <close@plt+0x41e0>
   14f38:	mov	r4, #0
   14f3c:	b	14f44 <close@plt+0x41a4>
   14f40:	ldr	r3, [r6, r4, lsl #3]
   14f44:	mov	r0, r3
   14f48:	mov	r1, r5
   14f4c:	bl	10c2c <strcasecmp@plt>
   14f50:	cmp	r0, #0
   14f54:	beq	14f6c <close@plt+0x41cc>
   14f58:	add	r4, r4, #1
   14f5c:	cmp	r4, #11
   14f60:	bne	14f40 <close@plt+0x41a0>
   14f64:	mvn	r0, #0
   14f68:	pop	{r4, r5, r6, pc}
   14f6c:	ldr	r3, [pc, #16]	; 14f84 <close@plt+0x41e4>
   14f70:	add	r4, r3, r4, lsl #3
   14f74:	ldr	r0, [r4, #1184]	; 0x4a0
   14f78:	pop	{r4, r5, r6, pc}
   14f7c:			; <UNDEFINED> instruction: 0x00017fb0
   14f80:	andeq	r7, r1, r4, lsl #22
   14f84:	andeq	r7, r1, r8, ror #12
   14f88:	mov	r2, #0
   14f8c:	ldr	r1, [pc, #56]	; 14fcc <close@plt+0x422c>
   14f90:	mov	r3, r2
   14f94:	b	14f9c <close@plt+0x41fc>
   14f98:	ldr	r2, [r2, #4]
   14f9c:	cmp	r2, r0
   14fa0:	beq	14fbc <close@plt+0x421c>
   14fa4:	add	r3, r3, #1
   14fa8:	cmp	r3, #8
   14fac:	add	r2, r1, r3, lsl #3
   14fb0:	bne	14f98 <close@plt+0x41f8>
   14fb4:	ldr	r0, [pc, #20]	; 14fd0 <close@plt+0x4230>
   14fb8:	bx	lr
   14fbc:	ldr	r2, [pc, #16]	; 14fd4 <close@plt+0x4234>
   14fc0:	add	r3, r2, r3, lsl #3
   14fc4:	ldr	r0, [r3, #1268]	; 0x4f4
   14fc8:	bx	lr
   14fcc:	andeq	r7, r1, ip, asr fp
   14fd0:	andeq	r7, r1, r4, lsr #28
   14fd4:	andeq	r7, r1, r8, ror #12
   14fd8:	push	{r4, r5, r6, lr}
   14fdc:	mov	r5, r0
   14fe0:	ldr	r3, [pc, #68]	; 1502c <close@plt+0x428c>
   14fe4:	ldr	r6, [pc, #68]	; 15030 <close@plt+0x4290>
   14fe8:	mov	r4, #0
   14fec:	b	14ff4 <close@plt+0x4254>
   14ff0:	ldr	r3, [r6, r4, lsl #3]
   14ff4:	mov	r0, r3
   14ff8:	mov	r1, r5
   14ffc:	bl	10c2c <strcasecmp@plt>
   15000:	cmp	r0, #0
   15004:	beq	1501c <close@plt+0x427c>
   15008:	add	r4, r4, #1
   1500c:	cmp	r4, #8
   15010:	bne	14ff0 <close@plt+0x4250>
   15014:	mvn	r0, #0
   15018:	pop	{r4, r5, r6, pc}
   1501c:	ldr	r3, [pc, #16]	; 15034 <close@plt+0x4294>
   15020:	add	r4, r3, r4, lsl #3
   15024:	ldr	r0, [r4, #1272]	; 0x4f8
   15028:	pop	{r4, r5, r6, pc}
   1502c:			; <UNDEFINED> instruction: 0x00017fb0
   15030:	andeq	r7, r1, ip, asr fp
   15034:	andeq	r7, r1, r8, ror #12
   15038:	mov	r2, #0
   1503c:	ldr	r1, [pc, #56]	; 1507c <close@plt+0x42dc>
   15040:	mov	r3, r2
   15044:	b	1504c <close@plt+0x42ac>
   15048:	ldr	r2, [r2, #4]
   1504c:	cmp	r2, r0
   15050:	beq	1506c <close@plt+0x42cc>
   15054:	add	r3, r3, #1
   15058:	cmp	r3, #8
   1505c:	add	r2, r1, r3, lsl #3
   15060:	bne	15048 <close@plt+0x42a8>
   15064:	ldr	r0, [pc, #20]	; 15080 <close@plt+0x42e0>
   15068:	bx	lr
   1506c:	ldr	r2, [pc, #16]	; 15084 <close@plt+0x42e4>
   15070:	add	r3, r2, r3, lsl #3
   15074:	ldr	r0, [r3, #1332]	; 0x534
   15078:	bx	lr
   1507c:	muleq	r1, ip, fp
   15080:	andeq	r7, r1, r4, lsr #28
   15084:	andeq	r7, r1, r8, ror #12
   15088:	push	{r4, r5, r6, lr}
   1508c:	mov	r5, r0
   15090:	ldr	r3, [pc, #68]	; 150dc <close@plt+0x433c>
   15094:	ldr	r6, [pc, #68]	; 150e0 <close@plt+0x4340>
   15098:	mov	r4, #0
   1509c:	b	150a4 <close@plt+0x4304>
   150a0:	ldr	r3, [r6, r4, lsl #3]
   150a4:	mov	r0, r3
   150a8:	mov	r1, r5
   150ac:	bl	10c2c <strcasecmp@plt>
   150b0:	cmp	r0, #0
   150b4:	beq	150cc <close@plt+0x432c>
   150b8:	add	r4, r4, #1
   150bc:	cmp	r4, #8
   150c0:	bne	150a0 <close@plt+0x4300>
   150c4:	mvn	r0, #0
   150c8:	pop	{r4, r5, r6, pc}
   150cc:	ldr	r3, [pc, #16]	; 150e4 <close@plt+0x4344>
   150d0:	add	r4, r3, r4, lsl #3
   150d4:	ldr	r0, [r4, #1336]	; 0x538
   150d8:	pop	{r4, r5, r6, pc}
   150dc:			; <UNDEFINED> instruction: 0x00017fb0
   150e0:	muleq	r1, ip, fp
   150e4:	andeq	r7, r1, r8, ror #12
   150e8:	cmp	r0, #0
   150ec:	beq	15110 <close@plt+0x4370>
   150f0:	cmp	r0, #1
   150f4:	beq	15118 <close@plt+0x4378>
   150f8:	ldr	r3, [pc, #32]	; 15120 <close@plt+0x4380>
   150fc:	ldr	r2, [pc, #32]	; 15124 <close@plt+0x4384>
   15100:	cmp	r0, #2
   15104:	movne	r0, r3
   15108:	moveq	r0, r2
   1510c:	bx	lr
   15110:	ldr	r0, [pc, #16]	; 15128 <close@plt+0x4388>
   15114:	bx	lr
   15118:	ldr	r0, [pc, #12]	; 1512c <close@plt+0x438c>
   1511c:	bx	lr
   15120:	andeq	r7, r1, r4, lsr #28
   15124:	andeq	r7, r1, r4, asr #31
   15128:			; <UNDEFINED> instruction: 0x00017fb0
   1512c:			; <UNDEFINED> instruction: 0x00017fb8
   15130:	push	{r4, lr}
   15134:	mov	r1, r0
   15138:	mov	r4, r0
   1513c:	ldr	r0, [pc, #80]	; 15194 <close@plt+0x43f4>
   15140:	bl	10c2c <strcasecmp@plt>
   15144:	cmp	r0, #0
   15148:	beq	15184 <close@plt+0x43e4>
   1514c:	mov	r1, r4
   15150:	ldr	r0, [pc, #64]	; 15198 <close@plt+0x43f8>
   15154:	bl	10c2c <strcasecmp@plt>
   15158:	cmp	r0, #0
   1515c:	beq	15180 <close@plt+0x43e0>
   15160:	mov	r1, r4
   15164:	ldr	r0, [pc, #48]	; 1519c <close@plt+0x43fc>
   15168:	bl	10c2c <strcasecmp@plt>
   1516c:	cmp	r0, #0
   15170:	moveq	r0, #2
   15174:	beq	15184 <close@plt+0x43e4>
   15178:	mvn	r0, #0
   1517c:	pop	{r4, pc}
   15180:	mov	r0, #1
   15184:	ldr	r3, [pc, #20]	; 151a0 <close@plt+0x4400>
   15188:	add	r0, r3, r0, lsl #3
   1518c:	ldr	r0, [r0, #1400]	; 0x578
   15190:	pop	{r4, pc}
   15194:			; <UNDEFINED> instruction: 0x00017fb0
   15198:			; <UNDEFINED> instruction: 0x00017fb8
   1519c:	andeq	r7, r1, r4, asr #31
   151a0:	andeq	r7, r1, r8, ror #12
   151a4:	ldr	r3, [pc, #2964]	; 15d40 <close@plt+0x4fa0>
   151a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151ac:	sub	sp, sp, #180	; 0xb4
   151b0:	ldr	r3, [r3]
   151b4:	str	r0, [sp, #12]
   151b8:	mov	r6, r1
   151bc:	str	r3, [sp, #172]	; 0xac
   151c0:	bl	10cd4 <__ctype_b_loc@plt>
   151c4:	ldr	r5, [r0]
   151c8:	mov	r9, r0
   151cc:	mov	r2, #48	; 0x30
   151d0:	mov	r1, #0
   151d4:	add	r0, sp, #76	; 0x4c
   151d8:	bl	10d40 <memset@plt>
   151dc:	ldr	r3, [pc, #2912]	; 15d44 <close@plt+0x4fa4>
   151e0:	mov	ip, #0
   151e4:	add	r3, r3, #12
   151e8:	str	ip, [sp, #36]	; 0x24
   151ec:	ldm	r3, {r0, r1, r2, r3}
   151f0:	add	lr, sp, #60	; 0x3c
   151f4:	str	ip, [sp, #40]	; 0x28
   151f8:	add	ip, sp, #44	; 0x2c
   151fc:	str	r6, [sp, #24]
   15200:	stm	ip, {r0, r1, r2, r3}
   15204:	add	r3, sp, #44	; 0x2c
   15208:	mov	ip, r6
   1520c:	ldm	r3, {r0, r1, r2, r3}
   15210:	stm	lr, {r0, r1, r2, r3}
   15214:	b	1521c <close@plt+0x447c>
   15218:	str	ip, [sp, #24]
   1521c:	mov	r1, ip
   15220:	add	ip, ip, #1
   15224:	ldrb	r3, [r1]
   15228:	lsl	r3, r3, #1
   1522c:	ldrh	r3, [r5, r3]
   15230:	tst	r3, #8192	; 0x2000
   15234:	bne	15218 <close@plt+0x4478>
   15238:	add	r2, sp, #28
   1523c:	ldr	r0, [sp, #12]
   15240:	bl	13ae8 <close@plt+0x2d48>
   15244:	subs	r7, r0, #0
   15248:	beq	154cc <close@plt+0x472c>
   1524c:	ldr	r3, [sp, #28]
   15250:	ldr	r5, [r9]
   15254:	b	1525c <close@plt+0x44bc>
   15258:	add	r3, r3, #1
   1525c:	str	r3, [sp, #24]
   15260:	ldrb	r2, [r3]
   15264:	lsl	r2, r2, #1
   15268:	ldrh	r2, [r5, r2]
   1526c:	tst	r2, #8192	; 0x2000
   15270:	bne	15258 <close@plt+0x44b8>
   15274:	add	r4, r3, #1
   15278:	str	r4, [sp, #24]
   1527c:	ldrb	r2, [r3]
   15280:	cmp	r2, #91	; 0x5b
   15284:	bne	15690 <close@plt+0x48f0>
   15288:	ldrb	r3, [r3, #1]
   1528c:	mov	r8, #1
   15290:	lsl	r3, r3, r8
   15294:	ldrh	r3, [r5, r3]
   15298:	and	r3, r3, #8192	; 0x2000
   1529c:	cmp	r3, #0
   152a0:	bne	15498 <close@plt+0x46f8>
   152a4:	add	r1, sp, #24
   152a8:	ldr	r0, [pc, #2712]	; 15d48 <close@plt+0x4fa8>
   152ac:	bl	141d0 <close@plt+0x3430>
   152b0:	cmp	r0, #0
   152b4:	bne	15514 <close@plt+0x4774>
   152b8:	cmp	r8, #0
   152bc:	beq	152dc <close@plt+0x453c>
   152c0:	ldr	r8, [sp, #24]
   152c4:	ldr	r2, [r9]
   152c8:	ldrb	r3, [r8]
   152cc:	lsl	r3, r3, #1
   152d0:	ldrh	r3, [r2, r3]
   152d4:	tst	r3, #256	; 0x100
   152d8:	bne	153a0 <close@plt+0x4600>
   152dc:	add	r1, sp, #24
   152e0:	ldr	r0, [pc, #2660]	; 15d4c <close@plt+0x4fac>
   152e4:	bl	141d0 <close@plt+0x3430>
   152e8:	subs	r8, r0, #0
   152ec:	bne	1552c <close@plt+0x478c>
   152f0:	add	r1, sp, #24
   152f4:	ldr	r0, [pc, #2644]	; 15d50 <close@plt+0x4fb0>
   152f8:	bl	141d0 <close@plt+0x3430>
   152fc:	cmp	r0, #0
   15300:	bne	155e0 <close@plt+0x4840>
   15304:	add	r1, sp, #24
   15308:	ldr	r0, [pc, #2628]	; 15d54 <close@plt+0x4fb4>
   1530c:	bl	141d0 <close@plt+0x3430>
   15310:	subs	r8, r0, #0
   15314:	bne	156b0 <close@plt+0x4910>
   15318:	add	r1, sp, #24
   1531c:	ldr	r0, [pc, #2612]	; 15d58 <close@plt+0x4fb8>
   15320:	bl	141d0 <close@plt+0x3430>
   15324:	cmp	r0, #0
   15328:	bne	15758 <close@plt+0x49b8>
   1532c:	add	r1, sp, #24
   15330:	ldr	r0, [pc, #2596]	; 15d5c <close@plt+0x4fbc>
   15334:	bl	141d0 <close@plt+0x3430>
   15338:	subs	r8, r0, #0
   1533c:	bne	15818 <close@plt+0x4a78>
   15340:	add	r1, sp, #24
   15344:	ldr	r0, [pc, #2580]	; 15d60 <close@plt+0x4fc0>
   15348:	bl	141d0 <close@plt+0x3430>
   1534c:	ldr	r3, [sp, #24]
   15350:	cmp	r0, #0
   15354:	bne	15364 <close@plt+0x45c4>
   15358:	ldrb	r2, [r3]
   1535c:	cmp	r2, #40	; 0x28
   15360:	bne	158e4 <close@plt+0x4b44>
   15364:	ldr	r0, [sp, #12]
   15368:	add	r2, sp, #28
   1536c:	str	r2, [sp]
   15370:	add	r1, r0, #280	; 0x118
   15374:	add	r2, sp, #44	; 0x2c
   15378:	add	r0, r0, #276	; 0x114
   1537c:	bl	1401c <close@plt+0x327c>
   15380:	cmp	r0, #0
   15384:	blt	154cc <close@plt+0x472c>
   15388:	ldr	r4, [sp, #28]
   1538c:	ldr	r5, [r9]
   15390:	b	15678 <close@plt+0x48d8>
   15394:	ldrb	r3, [r8, #1]!
   15398:	lsl	r3, r3, #1
   1539c:	ldrh	r3, [r2, r3]
   153a0:	tst	r3, #8192	; 0x2000
   153a4:	bne	15394 <close@plt+0x45f4>
   153a8:	str	r8, [sp, #32]
   153ac:	ldrb	r1, [r8]
   153b0:	and	r3, r1, #223	; 0xdf
   153b4:	cmp	r1, #47	; 0x2f
   153b8:	cmpne	r3, #0
   153bc:	movne	r1, #1
   153c0:	moveq	r1, #0
   153c4:	beq	1574c <close@plt+0x49ac>
   153c8:	mov	r5, r8
   153cc:	add	r5, r5, #1
   153d0:	str	r5, [sp, #32]
   153d4:	ldrb	r3, [r5]
   153d8:	and	r2, r3, #223	; 0xdf
   153dc:	cmp	r3, #47	; 0x2f
   153e0:	cmpne	r2, #0
   153e4:	bne	153cc <close@plt+0x462c>
   153e8:	sub	r4, r5, r8
   153ec:	mov	r1, r4
   153f0:	mov	r0, r8
   153f4:	bl	10bd8 <strndup@plt>
   153f8:	subs	fp, r0, #0
   153fc:	beq	154cc <close@plt+0x472c>
   15400:	bl	14dc8 <close@plt+0x4028>
   15404:	mov	sl, r0
   15408:	mov	r0, fp
   1540c:	bl	10bc0 <free@plt>
   15410:	cmn	sl, #1
   15414:	beq	15a7c <close@plt+0x4cdc>
   15418:	add	r0, r5, #1
   1541c:	add	r1, sp, #32
   15420:	mov	r2, #10
   15424:	bl	10cf8 <strtoul@plt>
   15428:	mov	r5, r0
   1542c:	ldr	r0, [sp, #32]
   15430:	ldrb	r3, [r0]
   15434:	cmp	r3, #120	; 0x78
   15438:	bne	154b8 <close@plt+0x4718>
   1543c:	add	r1, sp, #32
   15440:	mov	r2, #10
   15444:	add	r0, r0, #1
   15448:	bl	10cf8 <strtoul@plt>
   1544c:	ldr	r4, [sp, #32]
   15450:	mov	r2, #36	; 0x24
   15454:	mov	r1, #0
   15458:	str	r4, [sp, #28]
   1545c:	mov	r8, r0
   15460:	add	r0, sp, #88	; 0x58
   15464:	bl	10d40 <memset@plt>
   15468:	str	r8, [sp, #80]	; 0x50
   1546c:	str	r5, [sp, #76]	; 0x4c
   15470:	str	r4, [sp, #24]
   15474:	str	sl, [sp, #84]	; 0x54
   15478:	ldrb	r3, [r4]
   1547c:	ldr	r5, [r9]
   15480:	mov	r8, #0
   15484:	lsl	r3, r3, #1
   15488:	ldrh	r3, [r5, r3]
   1548c:	and	r3, r3, #8192	; 0x2000
   15490:	cmp	r3, #0
   15494:	beq	152a4 <close@plt+0x4504>
   15498:	add	r2, r4, #1
   1549c:	str	r2, [sp, #24]
   154a0:	ldrb	r3, [r4, #1]
   154a4:	mov	r4, r2
   154a8:	lsl	r3, r3, #1
   154ac:	ldrh	r3, [r5, r3]
   154b0:	and	r3, r3, #8192	; 0x2000
   154b4:	b	1529c <close@plt+0x44fc>
   154b8:	ldr	r2, [sp, #12]
   154bc:	ldr	r1, [pc, #2208]	; 15d64 <close@plt+0x4fc4>
   154c0:	ldr	r3, [r2, #276]	; 0x114
   154c4:	ldr	r0, [r2, #280]	; 0x118
   154c8:	blx	r3
   154cc:	ldr	sl, [sp, #28]
   154d0:	ldr	r4, [sp, #12]
   154d4:	mov	r2, sl
   154d8:	mov	r1, r6
   154dc:	mov	r0, r4
   154e0:	bl	13f10 <close@plt+0x3170>
   154e4:	ldr	r0, [r4, #280]	; 0x118
   154e8:	ldr	r3, [r4, #276]	; 0x114
   154ec:	ldr	r1, [pc, #2164]	; 15d68 <close@plt+0x4fc8>
   154f0:	blx	r3
   154f4:	mvn	r0, #21
   154f8:	ldr	r3, [pc, #2112]	; 15d40 <close@plt+0x4fa0>
   154fc:	ldr	r2, [sp, #172]	; 0xac
   15500:	ldr	r3, [r3]
   15504:	cmp	r2, r3
   15508:	bne	15d3c <close@plt+0x4f9c>
   1550c:	add	sp, sp, #180	; 0xb4
   15510:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15514:	ldr	r8, [sp, #24]
   15518:	ldr	r2, [r9]
   1551c:	ldrb	r3, [r8]
   15520:	lsl	r3, r3, #1
   15524:	ldrh	r3, [r2, r3]
   15528:	b	153a0 <close@plt+0x4600>
   1552c:	ldr	fp, [sp, #24]
   15530:	ldr	r5, [r9]
   15534:	str	fp, [sp, #28]
   15538:	ldrb	r3, [fp]
   1553c:	lsl	r2, r3, #1
   15540:	ldrh	r1, [r5, r2]
   15544:	lsr	r1, r1, #10
   15548:	and	r1, r1, #1
   1554c:	cmp	r3, #45	; 0x2d
   15550:	orreq	r1, r1, #1
   15554:	cmp	r1, #0
   15558:	beq	15a08 <close@plt+0x4c68>
   1555c:	mov	r4, fp
   15560:	add	r4, r4, #1
   15564:	str	r4, [sp, #28]
   15568:	ldrb	r2, [r4]
   1556c:	lsl	r3, r2, #1
   15570:	ldrh	r3, [r5, r3]
   15574:	lsr	r3, r3, #10
   15578:	cmp	r2, #45	; 0x2d
   1557c:	orreq	r3, r3, #1
   15580:	tst	r3, #1
   15584:	bne	15560 <close@plt+0x47c0>
   15588:	sub	r8, r4, fp
   1558c:	mov	r1, r8
   15590:	mov	r0, fp
   15594:	bl	10bd8 <strndup@plt>
   15598:	subs	r3, r0, #0
   1559c:	str	r3, [sp, #16]
   155a0:	beq	15a14 <close@plt+0x4c74>
   155a4:	bl	14e78 <close@plt+0x40d8>
   155a8:	ldr	r3, [sp, #16]
   155ac:	mov	sl, r0
   155b0:	mov	r0, r3
   155b4:	bl	10bc0 <free@plt>
   155b8:	cmn	sl, #1
   155bc:	beq	157f4 <close@plt+0x4a54>
   155c0:	str	sl, [sp, #88]	; 0x58
   155c4:	str	r4, [sp, #24]
   155c8:	ldrb	r3, [r4]
   155cc:	mov	r8, #0
   155d0:	lsl	r3, r3, #1
   155d4:	ldrh	r3, [r5, r3]
   155d8:	and	r3, r3, #8192	; 0x2000
   155dc:	b	1529c <close@plt+0x44fc>
   155e0:	ldr	fp, [sp, #24]
   155e4:	ldr	r5, [r9]
   155e8:	str	fp, [sp, #28]
   155ec:	ldrb	r2, [fp]
   155f0:	mov	r4, fp
   155f4:	lsl	r3, r2, #1
   155f8:	ldrh	r3, [r5, r3]
   155fc:	lsr	r3, r3, #3
   15600:	cmp	r2, #45	; 0x2d
   15604:	orreq	r3, r3, #1
   15608:	tst	r3, #1
   1560c:	beq	15a70 <close@plt+0x4cd0>
   15610:	add	r4, r4, #1
   15614:	str	r4, [sp, #28]
   15618:	ldrb	r2, [r4]
   1561c:	lsl	r3, r2, #1
   15620:	ldrh	r3, [r5, r3]
   15624:	lsr	r3, r3, #3
   15628:	cmp	r2, #45	; 0x2d
   1562c:	orreq	r3, r3, #1
   15630:	tst	r3, #1
   15634:	bne	15610 <close@plt+0x4870>
   15638:	sub	sl, r4, fp
   1563c:	mov	r1, sl
   15640:	mov	r0, fp
   15644:	bl	10bd8 <strndup@plt>
   15648:	subs	r2, r0, #0
   1564c:	str	r2, [sp, #16]
   15650:	beq	15a14 <close@plt+0x4c74>
   15654:	bl	14f28 <close@plt+0x4188>
   15658:	ldr	r2, [sp, #16]
   1565c:	str	r0, [sp, #20]
   15660:	mov	r0, r2
   15664:	bl	10bc0 <free@plt>
   15668:	ldr	r3, [sp, #20]
   1566c:	cmn	r3, #1
   15670:	beq	158b4 <close@plt+0x4b14>
   15674:	str	r3, [sp, #92]	; 0x5c
   15678:	str	r4, [sp, #24]
   1567c:	ldrb	r3, [r4]
   15680:	lsl	r3, r3, #1
   15684:	ldrh	r3, [r5, r3]
   15688:	and	r3, r3, #8192	; 0x2000
   1568c:	b	1529c <close@plt+0x44fc>
   15690:	ldr	r2, [sp, #12]
   15694:	ldr	r1, [pc, #1744]	; 15d6c <close@plt+0x4fcc>
   15698:	ldr	r3, [r2, #276]	; 0x114
   1569c:	ldr	r0, [r2, #280]	; 0x118
   156a0:	blx	r3
   156a4:	ldr	r3, [sp, #24]
   156a8:	sub	sl, r3, #1
   156ac:	b	154d0 <close@plt+0x4730>
   156b0:	ldr	fp, [sp, #24]
   156b4:	ldr	r5, [r9]
   156b8:	str	fp, [sp, #28]
   156bc:	ldrb	r3, [fp]
   156c0:	lsl	r2, r3, #1
   156c4:	ldrh	r1, [r5, r2]
   156c8:	lsr	r1, r1, #3
   156cc:	and	r1, r1, #1
   156d0:	cmp	r3, #45	; 0x2d
   156d4:	orreq	r1, r1, #1
   156d8:	cmp	r1, #0
   156dc:	beq	15a9c <close@plt+0x4cfc>
   156e0:	mov	r4, fp
   156e4:	add	r4, r4, #1
   156e8:	str	r4, [sp, #28]
   156ec:	ldrb	r2, [r4]
   156f0:	lsl	r3, r2, #1
   156f4:	ldrh	r3, [r5, r3]
   156f8:	lsr	r3, r3, #3
   156fc:	cmp	r2, #45	; 0x2d
   15700:	orreq	r3, r3, #1
   15704:	tst	r3, #1
   15708:	bne	156e4 <close@plt+0x4944>
   1570c:	sub	r8, r4, fp
   15710:	mov	r1, r8
   15714:	mov	r0, fp
   15718:	bl	10bd8 <strndup@plt>
   1571c:	subs	r3, r0, #0
   15720:	str	r3, [sp, #16]
   15724:	beq	15a14 <close@plt+0x4c74>
   15728:	bl	14fd8 <close@plt+0x4238>
   1572c:	ldr	r3, [sp, #16]
   15730:	mov	sl, r0
   15734:	mov	r0, r3
   15738:	bl	10bc0 <free@plt>
   1573c:	cmn	sl, #1
   15740:	beq	159e4 <close@plt+0x4c44>
   15744:	strh	sl, [sp, #100]	; 0x64
   15748:	b	155c4 <close@plt+0x4824>
   1574c:	mov	r4, r1
   15750:	mov	r5, r8
   15754:	b	153f0 <close@plt+0x4650>
   15758:	ldr	fp, [sp, #24]
   1575c:	ldr	r5, [r9]
   15760:	str	fp, [sp, #28]
   15764:	ldrb	r2, [fp]
   15768:	mov	r4, fp
   1576c:	lsl	r3, r2, #1
   15770:	ldrh	r3, [r5, r3]
   15774:	lsr	r3, r3, #3
   15778:	cmp	r2, #45	; 0x2d
   1577c:	orreq	r3, r3, #1
   15780:	tst	r3, #1
   15784:	beq	15aa8 <close@plt+0x4d08>
   15788:	add	r4, r4, #1
   1578c:	str	r4, [sp, #28]
   15790:	ldrb	r2, [r4]
   15794:	lsl	r3, r2, #1
   15798:	ldrh	r3, [r5, r3]
   1579c:	lsr	r3, r3, #3
   157a0:	cmp	r2, #45	; 0x2d
   157a4:	orreq	r3, r3, #1
   157a8:	tst	r3, #1
   157ac:	bne	15788 <close@plt+0x49e8>
   157b0:	sub	sl, r4, fp
   157b4:	mov	r1, sl
   157b8:	mov	r0, fp
   157bc:	bl	10bd8 <strndup@plt>
   157c0:	subs	r2, r0, #0
   157c4:	str	r2, [sp, #20]
   157c8:	beq	15a14 <close@plt+0x4c74>
   157cc:	bl	15088 <close@plt+0x42e8>
   157d0:	ldr	r2, [sp, #20]
   157d4:	str	r0, [sp, #16]
   157d8:	mov	r0, r2
   157dc:	bl	10bc0 <free@plt>
   157e0:	ldr	r3, [sp, #16]
   157e4:	cmn	r3, #1
   157e8:	beq	15a40 <close@plt+0x4ca0>
   157ec:	strh	r3, [sp, #96]	; 0x60
   157f0:	b	15678 <close@plt+0x48d8>
   157f4:	ldr	r0, [sp, #12]
   157f8:	mov	r3, fp
   157fc:	mov	r2, r8
   15800:	ldr	r4, [r0, #276]	; 0x114
   15804:	ldr	r1, [pc, #1380]	; 15d70 <close@plt+0x4fd0>
   15808:	ldr	r0, [r0, #280]	; 0x118
   1580c:	blx	r4
   15810:	ldr	sl, [sp, #24]
   15814:	b	154d0 <close@plt+0x4730>
   15818:	ldr	fp, [sp, #24]
   1581c:	ldr	r5, [r9]
   15820:	str	fp, [sp, #28]
   15824:	ldrb	r3, [fp]
   15828:	lsl	r2, r3, #1
   1582c:	ldrh	r1, [r5, r2]
   15830:	lsr	r1, r1, #3
   15834:	and	r1, r1, #1
   15838:	cmp	r3, #45	; 0x2d
   1583c:	orreq	r1, r1, #1
   15840:	cmp	r1, #0
   15844:	beq	15b24 <close@plt+0x4d84>
   15848:	mov	r4, fp
   1584c:	add	r4, r4, #1
   15850:	str	r4, [sp, #28]
   15854:	ldrb	r2, [r4]
   15858:	lsl	r3, r2, #1
   1585c:	ldrh	r3, [r5, r3]
   15860:	lsr	r3, r3, #3
   15864:	cmp	r2, #45	; 0x2d
   15868:	orreq	r3, r3, #1
   1586c:	tst	r3, #1
   15870:	bne	1584c <close@plt+0x4aac>
   15874:	sub	r8, r4, fp
   15878:	mov	r1, r8
   1587c:	mov	r0, fp
   15880:	bl	10bd8 <strndup@plt>
   15884:	subs	r3, r0, #0
   15888:	str	r3, [sp, #16]
   1588c:	beq	15a14 <close@plt+0x4c74>
   15890:	bl	15130 <close@plt+0x4390>
   15894:	ldr	r3, [sp, #16]
   15898:	mov	sl, r0
   1589c:	mov	r0, r3
   158a0:	bl	10bc0 <free@plt>
   158a4:	cmn	sl, #1
   158a8:	beq	15a1c <close@plt+0x4c7c>
   158ac:	strh	sl, [sp, #98]	; 0x62
   158b0:	b	155c4 <close@plt+0x4824>
   158b4:	ldr	r0, [sp, #12]
   158b8:	mov	r3, sl
   158bc:	mov	sl, fp
   158c0:	mov	fp, r3
   158c4:	ldr	r4, [r0, #276]	; 0x114
   158c8:	mov	r3, sl
   158cc:	mov	r2, fp
   158d0:	ldr	r1, [pc, #1180]	; 15d74 <close@plt+0x4fd4>
   158d4:	ldr	r0, [r0, #280]	; 0x118
   158d8:	blx	r4
   158dc:	ldr	sl, [sp, #24]
   158e0:	b	154d0 <close@plt+0x4730>
   158e4:	add	r1, sp, #24
   158e8:	ldr	r0, [pc, #1160]	; 15d78 <close@plt+0x4fd8>
   158ec:	bl	141d0 <close@plt+0x3430>
   158f0:	subs	r8, r0, #0
   158f4:	bne	15ab4 <close@plt+0x4d14>
   158f8:	ldr	r4, [sp, #24]
   158fc:	ldrb	r3, [r4]
   15900:	cmp	r3, #64	; 0x40
   15904:	bne	15b30 <close@plt+0x4d90>
   15908:	add	r0, r4, #1
   1590c:	str	r0, [sp, #24]
   15910:	ldrb	r3, [r4, #1]
   15914:	ldr	r2, [r9]
   15918:	lsl	r3, r3, #1
   1591c:	ldrh	r3, [r2, r3]
   15920:	tst	r3, #8192	; 0x2000
   15924:	beq	1593c <close@plt+0x4b9c>
   15928:	ldrb	r3, [r0, #1]!
   1592c:	lsl	r3, r3, #1
   15930:	ldrh	r3, [r2, r3]
   15934:	tst	r3, #8192	; 0x2000
   15938:	bne	15928 <close@plt+0x4b88>
   1593c:	add	r1, sp, #32
   15940:	mov	r2, #10
   15944:	bl	10cf8 <strtoul@plt>
   15948:	ldr	fp, [sp, #32]
   1594c:	ldr	r2, [r9]
   15950:	str	r0, [sp, #36]	; 0x24
   15954:	ldrb	r3, [fp]
   15958:	lsl	r1, r3, #1
   1595c:	ldrh	r1, [r2, r1]
   15960:	tst	r1, #8192	; 0x2000
   15964:	beq	1597c <close@plt+0x4bdc>
   15968:	ldrb	r3, [fp, #1]!
   1596c:	lsl	r1, r3, #1
   15970:	ldrh	r1, [r2, r1]
   15974:	tst	r1, #8192	; 0x2000
   15978:	bne	15968 <close@plt+0x4bc8>
   1597c:	cmp	r3, #47	; 0x2f
   15980:	add	r0, fp, #1
   15984:	bne	15cfc <close@plt+0x4f5c>
   15988:	ldrb	r3, [fp, #1]
   1598c:	lsl	r3, r3, #1
   15990:	ldrh	r3, [r2, r3]
   15994:	tst	r3, #8192	; 0x2000
   15998:	beq	159b0 <close@plt+0x4c10>
   1599c:	ldrb	r3, [r0, #1]!
   159a0:	lsl	r3, r3, #1
   159a4:	ldrh	r3, [r2, r3]
   159a8:	tst	r3, #8192	; 0x2000
   159ac:	bne	1599c <close@plt+0x4bfc>
   159b0:	add	r1, sp, #32
   159b4:	mov	r2, #10
   159b8:	bl	10cf8 <strtoul@plt>
   159bc:	ldr	r4, [sp, #32]
   159c0:	ldr	r5, [r9]
   159c4:	str	r4, [sp, #28]
   159c8:	str	r4, [sp, #24]
   159cc:	str	r0, [sp, #40]	; 0x28
   159d0:	ldrb	r3, [r4]
   159d4:	lsl	r3, r3, #1
   159d8:	ldrh	r3, [r5, r3]
   159dc:	and	r3, r3, #8192	; 0x2000
   159e0:	b	1529c <close@plt+0x44fc>
   159e4:	ldr	r0, [sp, #12]
   159e8:	mov	r3, fp
   159ec:	mov	r2, r8
   159f0:	ldr	r4, [r0, #276]	; 0x114
   159f4:	ldr	r1, [pc, #896]	; 15d7c <close@plt+0x4fdc>
   159f8:	ldr	r0, [r0, #280]	; 0x118
   159fc:	blx	r4
   15a00:	ldr	sl, [sp, #24]
   15a04:	b	154d0 <close@plt+0x4730>
   15a08:	mov	r8, r1
   15a0c:	mov	r4, fp
   15a10:	b	15590 <close@plt+0x47f0>
   15a14:	mov	sl, fp
   15a18:	b	154d0 <close@plt+0x4730>
   15a1c:	ldr	r0, [sp, #12]
   15a20:	mov	r3, fp
   15a24:	mov	r2, r8
   15a28:	ldr	r4, [r0, #276]	; 0x114
   15a2c:	ldr	r1, [pc, #844]	; 15d80 <close@plt+0x4fe0>
   15a30:	ldr	r0, [r0, #280]	; 0x118
   15a34:	blx	r4
   15a38:	ldr	sl, [sp, #24]
   15a3c:	b	154d0 <close@plt+0x4730>
   15a40:	ldr	r0, [sp, #12]
   15a44:	mov	r3, sl
   15a48:	mov	sl, fp
   15a4c:	mov	fp, r3
   15a50:	ldr	r4, [r0, #276]	; 0x114
   15a54:	mov	r3, sl
   15a58:	mov	r2, fp
   15a5c:	ldr	r1, [pc, #800]	; 15d84 <close@plt+0x4fe4>
   15a60:	ldr	r0, [r0, #280]	; 0x118
   15a64:	blx	r4
   15a68:	ldr	sl, [sp, #24]
   15a6c:	b	154d0 <close@plt+0x4730>
   15a70:	mov	r1, r8
   15a74:	mov	sl, r8
   15a78:	b	15640 <close@plt+0x48a0>
   15a7c:	ldr	r0, [sp, #12]
   15a80:	mov	r2, r4
   15a84:	mov	r3, r8
   15a88:	ldr	r4, [r0, #276]	; 0x114
   15a8c:	ldr	r1, [pc, #756]	; 15d88 <close@plt+0x4fe8>
   15a90:	ldr	r0, [r0, #280]	; 0x118
   15a94:	blx	r4
   15a98:	b	154cc <close@plt+0x472c>
   15a9c:	mov	r8, r1
   15aa0:	mov	r4, fp
   15aa4:	b	15714 <close@plt+0x4974>
   15aa8:	mov	r1, r8
   15aac:	mov	sl, r8
   15ab0:	b	157b8 <close@plt+0x4a18>
   15ab4:	ldr	r0, [sp, #12]
   15ab8:	add	r3, sp, #28
   15abc:	str	r3, [sp]
   15ac0:	add	r1, r0, #280	; 0x118
   15ac4:	ldr	r3, [sp, #24]
   15ac8:	add	r2, sp, #60	; 0x3c
   15acc:	add	r0, r0, #276	; 0x114
   15ad0:	bl	1401c <close@plt+0x327c>
   15ad4:	cmp	r0, #0
   15ad8:	blt	154cc <close@plt+0x472c>
   15adc:	ldr	r4, [sp, #28]
   15ae0:	ldr	r5, [r9]
   15ae4:	str	r4, [sp, #24]
   15ae8:	ldrb	r3, [r4]
   15aec:	lsl	r3, r3, #1
   15af0:	ldrh	r3, [r5, r3]
   15af4:	ands	r3, r3, #8192	; 0x2000
   15af8:	beq	15d18 <close@plt+0x4f78>
   15afc:	add	r4, r4, #1
   15b00:	str	r4, [sp, #24]
   15b04:	ldrb	r3, [r4]
   15b08:	lsl	r3, r3, #1
   15b0c:	ldrh	r3, [r5, r3]
   15b10:	and	r3, r3, #8192	; 0x2000
   15b14:	uxth	r8, r3
   15b18:	cmp	r8, #0
   15b1c:	bne	15afc <close@plt+0x4d5c>
   15b20:	b	1529c <close@plt+0x44fc>
   15b24:	mov	r8, r1
   15b28:	mov	r4, fp
   15b2c:	b	1587c <close@plt+0x4adc>
   15b30:	cmp	r3, #93	; 0x5d
   15b34:	bne	15d20 <close@plt+0x4f80>
   15b38:	ldr	r3, [r7, #8]
   15b3c:	add	r5, r7, #4
   15b40:	tst	r3, #1
   15b44:	beq	15b60 <close@plt+0x4dc0>
   15b48:	add	r2, sp, #76	; 0x4c
   15b4c:	mov	r1, r5
   15b50:	mov	r0, r7
   15b54:	bl	14494 <close@plt+0x36f4>
   15b58:	cmp	r0, #0
   15b5c:	blt	154f8 <close@plt+0x4758>
   15b60:	add	r3, sp, #44	; 0x2c
   15b64:	mov	r2, #0
   15b68:	mov	r1, r5
   15b6c:	mov	r0, r7
   15b70:	bl	1487c <close@plt+0x3adc>
   15b74:	cmp	r0, #0
   15b78:	blt	154f8 <close@plt+0x4758>
   15b7c:	add	r3, sp, #60	; 0x3c
   15b80:	mov	r2, #256	; 0x100
   15b84:	mov	r1, r5
   15b88:	mov	r0, r7
   15b8c:	bl	1487c <close@plt+0x3adc>
   15b90:	cmp	r0, #0
   15b94:	blt	154f8 <close@plt+0x4758>
   15b98:	ldr	r3, [r7, #8]
   15b9c:	tst	r3, #2
   15ba0:	beq	15bbc <close@plt+0x4e1c>
   15ba4:	add	r2, sp, #76	; 0x4c
   15ba8:	mov	r1, r5
   15bac:	mov	r0, r7
   15bb0:	bl	14494 <close@plt+0x36f4>
   15bb4:	cmp	r0, #0
   15bb8:	blt	154f8 <close@plt+0x4758>
   15bbc:	mov	r1, r5
   15bc0:	add	r2, sp, #36	; 0x24
   15bc4:	mov	r0, r7
   15bc8:	bl	14ca4 <close@plt+0x3f04>
   15bcc:	cmp	r0, #0
   15bd0:	blt	154f8 <close@plt+0x4758>
   15bd4:	ldr	r3, [r7, #8]
   15bd8:	tst	r3, #2
   15bdc:	beq	15cb0 <close@plt+0x4f10>
   15be0:	ldr	r1, [r7]
   15be4:	ldr	r3, [r1, #272]	; 0x110
   15be8:	cmp	r3, #0
   15bec:	movne	r5, #0
   15bf0:	bne	15c08 <close@plt+0x4e68>
   15bf4:	b	15cb0 <close@plt+0x4f10>
   15bf8:	ldr	r3, [r1, #272]	; 0x110
   15bfc:	add	r5, r5, #1
   15c00:	cmp	r5, r3
   15c04:	bcs	15cb0 <close@plt+0x4f10>
   15c08:	rsb	r2, r5, r5, lsl #3
   15c0c:	ldr	r3, [r1, #264]	; 0x108
   15c10:	add	r6, r3, r2, lsl #2
   15c14:	ldr	r0, [r6, #12]
   15c18:	tst	r0, #1
   15c1c:	beq	15bf8 <close@plt+0x4e58>
   15c20:	ldr	r3, [r3, r2, lsl #2]
   15c24:	cmp	r3, r7
   15c28:	bne	15bf8 <close@plt+0x4e58>
   15c2c:	ldr	r8, [r6, #4]
   15c30:	ldr	r3, [r8]
   15c34:	ldr	r3, [r3, #40]	; 0x28
   15c38:	cmp	r3, #131072	; 0x20000
   15c3c:	bne	15bf8 <close@plt+0x4e58>
   15c40:	add	lr, sp, #76	; 0x4c
   15c44:	add	ip, sp, #124	; 0x7c
   15c48:	ldm	lr!, {r0, r1, r2, r3}
   15c4c:	stmia	ip!, {r0, r1, r2, r3}
   15c50:	ldm	lr!, {r0, r1, r2, r3}
   15c54:	stmia	ip!, {r0, r1, r2, r3}
   15c58:	ldm	lr, {r0, r1, r2, r3}
   15c5c:	stm	ip, {r0, r1, r2, r3}
   15c60:	add	r2, sp, #124	; 0x7c
   15c64:	add	r1, r8, #4
   15c68:	mov	r0, r8
   15c6c:	bl	14494 <close@plt+0x36f4>
   15c70:	ldr	r0, [r6, #4]
   15c74:	add	r2, sp, #36	; 0x24
   15c78:	add	r1, r0, #4
   15c7c:	bl	14ca4 <close@plt+0x3f04>
   15c80:	adds	r3, r0, #22
   15c84:	movne	r3, #1
   15c88:	adds	r2, r0, #25
   15c8c:	and	r3, r3, r0, lsr #31
   15c90:	movne	r2, #1
   15c94:	tst	r2, r3
   15c98:	bne	154f8 <close@plt+0x4758>
   15c9c:	ldr	r1, [r7]
   15ca0:	add	r5, r5, #1
   15ca4:	ldr	r3, [r1, #272]	; 0x110
   15ca8:	cmp	r5, r3
   15cac:	bcc	15c08 <close@plt+0x4e68>
   15cb0:	ldrb	r3, [r4, #1]
   15cb4:	ldr	r5, [r9]
   15cb8:	add	r6, r4, #1
   15cbc:	lsl	r2, r3, #1
   15cc0:	ldrh	r2, [r5, r2]
   15cc4:	tst	r2, #8192	; 0x2000
   15cc8:	beq	15ce0 <close@plt+0x4f40>
   15ccc:	ldrb	r3, [r6, #1]!
   15cd0:	lsl	r2, r3, #1
   15cd4:	ldrh	r2, [r5, r2]
   15cd8:	tst	r2, #8192	; 0x2000
   15cdc:	bne	15ccc <close@plt+0x4f2c>
   15ce0:	cmp	r3, #44	; 0x2c
   15ce4:	add	r6, r6, #1
   15ce8:	beq	151cc <close@plt+0x442c>
   15cec:	cmp	r3, #0
   15cf0:	mvnne	r0, #21
   15cf4:	moveq	r0, #0
   15cf8:	b	154f8 <close@plt+0x4758>
   15cfc:	ldr	r3, [sp, #12]
   15d00:	ldr	r1, [pc, #132]	; 15d8c <close@plt+0x4fec>
   15d04:	mov	sl, fp
   15d08:	ldr	r2, [r3, #276]	; 0x114
   15d0c:	ldr	r0, [r3, #280]	; 0x118
   15d10:	blx	r2
   15d14:	b	154d0 <close@plt+0x4730>
   15d18:	mov	r8, #0
   15d1c:	b	1529c <close@plt+0x44fc>
   15d20:	ldr	r2, [sp, #12]
   15d24:	ldr	r1, [pc, #100]	; 15d90 <close@plt+0x4ff0>
   15d28:	ldr	r3, [r2, #276]	; 0x114
   15d2c:	ldr	r0, [r2, #280]	; 0x118
   15d30:	blx	r3
   15d34:	ldr	sl, [sp, #24]
   15d38:	b	154d0 <close@plt+0x4730>
   15d3c:	bl	10c14 <__stack_chk_fail@plt>
   15d40:	andeq	r8, r2, r0, lsr lr
   15d44:	andeq	r7, r1, r8, ror #23
   15d48:	andeq	r7, r1, r0, ror #31
   15d4c:	andeq	r8, r1, r4
   15d50:	andeq	r8, r1, r8, lsr #32
   15d54:	andeq	r8, r1, r4, asr r0
   15d58:	andeq	r8, r1, r4, lsl #1
   15d5c:	strheq	r8, [r1], -r0
   15d60:	andeq	r8, r1, r4, ror #1
   15d64:	andeq	r7, r1, r8, ror #27
   15d68:	andeq	r8, r1, r8, lsl #2
   15d6c:	ldrdeq	r7, [r1], -r0
   15d70:	andeq	r8, r1, ip
   15d74:	andeq	r8, r1, r4, lsr r0
   15d78:	andeq	r8, r1, ip, ror #1
   15d7c:	andeq	r8, r1, ip, asr r0
   15d80:	andeq	r8, r1, r0, asr #1
   15d84:	andeq	r8, r1, ip, lsl #1
   15d88:	andeq	r7, r1, r8, ror #31
   15d8c:	ldrdeq	r7, [r1], -r8
   15d90:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   15d94:	mov	r3, #105	; 0x69
   15d98:	str	r3, [r0]
   15d9c:	ldr	r0, [pc]	; 15da4 <close@plt+0x5004>
   15da0:	bx	lr
   15da4:	andeq	r7, r1, r4, lsl #24
   15da8:	cmp	r3, #0
   15dac:	cmpeq	r2, #0
   15db0:	bne	15dc8 <close@plt+0x5028>
   15db4:	cmp	r1, #0
   15db8:	cmpeq	r0, #0
   15dbc:	mvnne	r1, #0
   15dc0:	mvnne	r0, #0
   15dc4:	b	15de4 <close@plt+0x5044>
   15dc8:	sub	sp, sp, #8
   15dcc:	push	{sp, lr}
   15dd0:	bl	15df4 <close@plt+0x5054>
   15dd4:	ldr	lr, [sp, #4]
   15dd8:	add	sp, sp, #8
   15ddc:	pop	{r2, r3}
   15de0:	bx	lr
   15de4:	push	{r1, lr}
   15de8:	mov	r0, #8
   15dec:	bl	10ba8 <raise@plt>
   15df0:	pop	{r1, pc}
   15df4:	cmp	r1, r3
   15df8:	cmpeq	r0, r2
   15dfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e00:	mov	r4, r0
   15e04:	movcc	r0, #0
   15e08:	mov	r5, r1
   15e0c:	ldr	lr, [sp, #36]	; 0x24
   15e10:	movcc	r1, r0
   15e14:	bcc	15f10 <close@plt+0x5170>
   15e18:	cmp	r3, #0
   15e1c:	clzeq	ip, r2
   15e20:	clzne	ip, r3
   15e24:	addeq	ip, ip, #32
   15e28:	cmp	r5, #0
   15e2c:	clzeq	r1, r4
   15e30:	addeq	r1, r1, #32
   15e34:	clzne	r1, r5
   15e38:	sub	ip, ip, r1
   15e3c:	sub	sl, ip, #32
   15e40:	lsl	r9, r3, ip
   15e44:	rsb	fp, ip, #32
   15e48:	orr	r9, r9, r2, lsl sl
   15e4c:	orr	r9, r9, r2, lsr fp
   15e50:	lsl	r8, r2, ip
   15e54:	cmp	r5, r9
   15e58:	cmpeq	r4, r8
   15e5c:	movcc	r0, #0
   15e60:	movcc	r1, r0
   15e64:	bcc	15e80 <close@plt+0x50e0>
   15e68:	mov	r0, #1
   15e6c:	subs	r4, r4, r8
   15e70:	lsl	r1, r0, sl
   15e74:	orr	r1, r1, r0, lsr fp
   15e78:	lsl	r0, r0, ip
   15e7c:	sbc	r5, r5, r9
   15e80:	cmp	ip, #0
   15e84:	beq	15f10 <close@plt+0x5170>
   15e88:	lsr	r6, r8, #1
   15e8c:	orr	r6, r6, r9, lsl #31
   15e90:	lsr	r7, r9, #1
   15e94:	mov	r2, ip
   15e98:	b	15ebc <close@plt+0x511c>
   15e9c:	subs	r3, r4, r6
   15ea0:	sbc	r8, r5, r7
   15ea4:	adds	r3, r3, r3
   15ea8:	adc	r8, r8, r8
   15eac:	adds	r4, r3, #1
   15eb0:	adc	r5, r8, #0
   15eb4:	subs	r2, r2, #1
   15eb8:	beq	15ed8 <close@plt+0x5138>
   15ebc:	cmp	r5, r7
   15ec0:	cmpeq	r4, r6
   15ec4:	bcs	15e9c <close@plt+0x50fc>
   15ec8:	adds	r4, r4, r4
   15ecc:	adc	r5, r5, r5
   15ed0:	subs	r2, r2, #1
   15ed4:	bne	15ebc <close@plt+0x511c>
   15ed8:	lsr	r3, r4, ip
   15edc:	orr	r3, r3, r5, lsl fp
   15ee0:	lsr	r2, r5, ip
   15ee4:	orr	r3, r3, r5, lsr sl
   15ee8:	adds	r0, r0, r4
   15eec:	mov	r4, r3
   15ef0:	lsl	r3, r2, ip
   15ef4:	orr	r3, r3, r4, lsl sl
   15ef8:	lsl	ip, r4, ip
   15efc:	orr	r3, r3, r4, lsr fp
   15f00:	adc	r1, r1, r5
   15f04:	subs	r0, r0, ip
   15f08:	mov	r5, r2
   15f0c:	sbc	r1, r1, r3
   15f10:	cmp	lr, #0
   15f14:	strdne	r4, [lr]
   15f18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15f20:	mov	r7, r0
   15f24:	ldr	r6, [pc, #72]	; 15f74 <close@plt+0x51d4>
   15f28:	ldr	r5, [pc, #72]	; 15f78 <close@plt+0x51d8>
   15f2c:	add	r6, pc, r6
   15f30:	add	r5, pc, r5
   15f34:	sub	r6, r6, r5
   15f38:	mov	r8, r1
   15f3c:	mov	r9, r2
   15f40:	bl	10b70 <calloc@plt-0x20>
   15f44:	asrs	r6, r6, #2
   15f48:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15f4c:	mov	r4, #0
   15f50:	add	r4, r4, #1
   15f54:	ldr	r3, [r5], #4
   15f58:	mov	r2, r9
   15f5c:	mov	r1, r8
   15f60:	mov	r0, r7
   15f64:	blx	r3
   15f68:	cmp	r6, r4
   15f6c:	bne	15f50 <close@plt+0x51b0>
   15f70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15f74:	strdeq	r2, [r1], -r8
   15f78:	strdeq	r2, [r1], -r0
   15f7c:	bx	lr

Disassembly of section .fini:

00015f80 <.fini>:
   15f80:	push	{r3, lr}
   15f84:	pop	{r3, pc}
