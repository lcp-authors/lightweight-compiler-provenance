
raspbian-preinstalled/logname:     file format elf32-littlearm


Disassembly of section .init:

00010b84 <.init>:
   10b84:	push	{r3, lr}
   10b88:	bl	10f4c <abort@plt+0x198>
   10b8c:	pop	{r3, pc}

Disassembly of section .plt:

00010b90 <calloc@plt-0x14>:
   10b90:	push	{lr}		; (str lr, [sp, #-4]!)
   10b94:	ldr	lr, [pc, #4]	; 10ba0 <calloc@plt-0x4>
   10b98:	add	lr, pc, lr
   10b9c:	ldr	pc, [lr, #8]!
   10ba0:	andeq	r4, r1, r0, ror #8

00010ba4 <calloc@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #20, 20	; 0x14000
   10bac:	ldr	pc, [ip, #1120]!	; 0x460

00010bb0 <fputs_unlocked@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1112]!	; 0x458

00010bbc <raise@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1104]!	; 0x450

00010bc8 <strcmp@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1096]!	; 0x448

00010bd4 <getlogin@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1088]!	; 0x440

00010be0 <fflush@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1080]!	; 0x438

00010bec <free@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1072]!	; 0x430

00010bf8 <_exit@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1064]!	; 0x428

00010c04 <memcpy@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1056]!	; 0x420

00010c10 <mbsinit@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1048]!	; 0x418

00010c1c <memcmp@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1040]!	; 0x410

00010c28 <dcgettext@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1032]!	; 0x408

00010c34 <__stack_chk_fail@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1024]!	; 0x400

00010c40 <realloc@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c4c <textdomain@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c58 <iswprint@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c64 <fwrite@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #992]!	; 0x3e0

00010c70 <lseek64@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #984]!	; 0x3d8

00010c7c <__ctype_get_mb_cur_max@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #976]!	; 0x3d0

00010c88 <__fpending@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #968]!	; 0x3c8

00010c94 <mbrtowc@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #960]!	; 0x3c0

00010ca0 <error@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #952]!	; 0x3b8

00010cac <puts@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #944]!	; 0x3b0

00010cb8 <malloc@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #936]!	; 0x3a8

00010cc4 <__libc_start_main@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #928]!	; 0x3a0

00010cd0 <__freading@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #920]!	; 0x398

00010cdc <__gmon_start__@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #912]!	; 0x390

00010ce8 <getopt_long@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #904]!	; 0x388

00010cf4 <__ctype_b_loc@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #896]!	; 0x380

00010d00 <exit@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #888]!	; 0x378

00010d0c <strlen@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #880]!	; 0x370

00010d18 <__errno_location@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #872]!	; 0x368

00010d24 <__cxa_atexit@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #864]!	; 0x360

00010d30 <memset@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #856]!	; 0x358

00010d3c <__printf_chk@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #848]!	; 0x350

00010d48 <fileno@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #840]!	; 0x348

00010d54 <__fprintf_chk@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #832]!	; 0x340

00010d60 <fclose@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #824]!	; 0x338

00010d6c <fseeko64@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #816]!	; 0x330

00010d78 <setlocale@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #808]!	; 0x328

00010d84 <strrchr@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #800]!	; 0x320

00010d90 <nl_langinfo@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #20, 20	; 0x14000
   10d98:	ldr	pc, [ip, #792]!	; 0x318

00010d9c <bindtextdomain@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #20, 20	; 0x14000
   10da4:	ldr	pc, [ip, #784]!	; 0x310

00010da8 <strncmp@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #776]!	; 0x308

00010db4 <abort@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #768]!	; 0x300

Disassembly of section .text:

00010dc0 <.text>:
   10dc0:	push	{r4, r5, r6, r7, lr}
   10dc4:	mov	r6, r0
   10dc8:	sub	sp, sp, #20
   10dcc:	ldr	r0, [r1]
   10dd0:	mov	r4, r1
   10dd4:	bl	114b8 <abort@plt+0x704>
   10dd8:	ldr	r1, [pc, #252]	; 10edc <abort@plt+0x128>
   10ddc:	mov	r0, #6
   10de0:	bl	10d78 <setlocale@plt>
   10de4:	ldr	r1, [pc, #244]	; 10ee0 <abort@plt+0x12c>
   10de8:	ldr	r0, [pc, #244]	; 10ee4 <abort@plt+0x130>
   10dec:	bl	10d9c <bindtextdomain@plt>
   10df0:	ldr	r0, [pc, #236]	; 10ee4 <abort@plt+0x130>
   10df4:	bl	10c4c <textdomain@plt>
   10df8:	ldr	r0, [pc, #232]	; 10ee8 <abort@plt+0x134>
   10dfc:	bl	144a8 <abort@plt+0x36f4>
   10e00:	ldr	r1, [pc, #228]	; 10eec <abort@plt+0x138>
   10e04:	ldr	r2, [pc, #228]	; 10ef0 <abort@plt+0x13c>
   10e08:	ldr	r3, [pc, #228]	; 10ef4 <abort@plt+0x140>
   10e0c:	ldr	r1, [r1]
   10e10:	mov	r5, #0
   10e14:	str	r1, [sp]
   10e18:	mov	r0, r6
   10e1c:	mov	r1, r4
   10e20:	str	r2, [sp, #8]
   10e24:	str	r3, [sp, #4]
   10e28:	ldr	r2, [pc, #200]	; 10ef8 <abort@plt+0x144>
   10e2c:	ldr	r3, [pc, #200]	; 10efc <abort@plt+0x148>
   10e30:	str	r5, [sp, #12]
   10e34:	bl	113d8 <abort@plt+0x624>
   10e38:	str	r5, [sp]
   10e3c:	mov	r1, r4
   10e40:	mov	r0, r6
   10e44:	ldr	r3, [pc, #180]	; 10f00 <abort@plt+0x14c>
   10e48:	ldr	r2, [pc, #140]	; 10edc <abort@plt+0x128>
   10e4c:	bl	10ce8 <getopt_long@plt>
   10e50:	cmn	r0, #1
   10e54:	bne	10eb8 <abort@plt+0x104>
   10e58:	ldr	r7, [pc, #164]	; 10f04 <abort@plt+0x150>
   10e5c:	ldr	r3, [r7]
   10e60:	cmp	r3, r6
   10e64:	blt	10e84 <abort@plt+0xd0>
   10e68:	bl	10bd4 <getlogin@plt>
   10e6c:	subs	r4, r0, #0
   10e70:	beq	10ec0 <abort@plt+0x10c>
   10e74:	bl	10cac <puts@plt>
   10e78:	mov	r0, r5
   10e7c:	add	sp, sp, #20
   10e80:	pop	{r4, r5, r6, r7, pc}
   10e84:	mov	r2, #5
   10e88:	ldr	r1, [pc, #120]	; 10f08 <abort@plt+0x154>
   10e8c:	mov	r0, r5
   10e90:	bl	10c28 <dcgettext@plt>
   10e94:	ldr	r3, [r7]
   10e98:	mov	r6, r0
   10e9c:	ldr	r0, [r4, r3, lsl #2]
   10ea0:	bl	1371c <abort@plt+0x2968>
   10ea4:	mov	r2, r6
   10ea8:	mov	r1, r5
   10eac:	mov	r3, r0
   10eb0:	mov	r0, r5
   10eb4:	bl	10ca0 <error@plt>
   10eb8:	mov	r0, #1
   10ebc:	bl	11000 <abort@plt+0x24c>
   10ec0:	mov	r2, #5
   10ec4:	ldr	r1, [pc, #64]	; 10f0c <abort@plt+0x158>
   10ec8:	bl	10c28 <dcgettext@plt>
   10ecc:	mov	r1, r4
   10ed0:	mov	r2, r0
   10ed4:	mov	r0, #1
   10ed8:	bl	10ca0 <error@plt>
   10edc:	andeq	r4, r1, ip, ror #23
   10ee0:	ldrdeq	r4, [r1], -r8
   10ee4:	andeq	r4, r1, ip, lsr #12
   10ee8:	andeq	r1, r1, r0, lsl #6
   10eec:	andeq	r5, r2, ip, asr #1
   10ef0:	andeq	r4, r1, ip, ror #13
   10ef4:	andeq	r1, r1, r0
   10ef8:	andeq	r4, r1, r4, lsl r5
   10efc:	andeq	r4, r1, r8, lsr #12
   10f00:	andeq	r4, r1, r4, lsl #10
   10f04:	andeq	r5, r2, r0, lsr #2
   10f08:	strdeq	r4, [r1], -ip
   10f0c:	andeq	r4, r1, r0, lsl r7
   10f10:	mov	fp, #0
   10f14:	mov	lr, #0
   10f18:	pop	{r1}		; (ldr r1, [sp], #4)
   10f1c:	mov	r2, sp
   10f20:	push	{r2}		; (str r2, [sp, #-4]!)
   10f24:	push	{r0}		; (str r0, [sp, #-4]!)
   10f28:	ldr	ip, [pc, #16]	; 10f40 <abort@plt+0x18c>
   10f2c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f30:	ldr	r0, [pc, #12]	; 10f44 <abort@plt+0x190>
   10f34:	ldr	r3, [pc, #12]	; 10f48 <abort@plt+0x194>
   10f38:	bl	10cc4 <__libc_start_main@plt>
   10f3c:	bl	10db4 <abort@plt>
   10f40:	andeq	r4, r1, r4, lsr #9
   10f44:	andeq	r0, r1, r0, asr #27
   10f48:	andeq	r4, r1, r4, asr #8
   10f4c:	ldr	r3, [pc, #20]	; 10f68 <abort@plt+0x1b4>
   10f50:	ldr	r2, [pc, #20]	; 10f6c <abort@plt+0x1b8>
   10f54:	add	r3, pc, r3
   10f58:	ldr	r2, [r3, r2]
   10f5c:	cmp	r2, #0
   10f60:	bxeq	lr
   10f64:	b	10cdc <__gmon_start__@plt>
   10f68:	andeq	r4, r1, r4, lsr #1
   10f6c:	andeq	r0, r0, r0, asr #1
   10f70:	ldr	r0, [pc, #24]	; 10f90 <abort@plt+0x1dc>
   10f74:	ldr	r3, [pc, #24]	; 10f94 <abort@plt+0x1e0>
   10f78:	cmp	r3, r0
   10f7c:	bxeq	lr
   10f80:	ldr	r3, [pc, #16]	; 10f98 <abort@plt+0x1e4>
   10f84:	cmp	r3, #0
   10f88:	bxeq	lr
   10f8c:	bx	r3
   10f90:	andeq	r5, r2, r4, lsl r1
   10f94:	andeq	r5, r2, r4, lsl r1
   10f98:	andeq	r0, r0, r0
   10f9c:	ldr	r0, [pc, #36]	; 10fc8 <abort@plt+0x214>
   10fa0:	ldr	r1, [pc, #36]	; 10fcc <abort@plt+0x218>
   10fa4:	sub	r1, r1, r0
   10fa8:	asr	r1, r1, #2
   10fac:	add	r1, r1, r1, lsr #31
   10fb0:	asrs	r1, r1, #1
   10fb4:	bxeq	lr
   10fb8:	ldr	r3, [pc, #16]	; 10fd0 <abort@plt+0x21c>
   10fbc:	cmp	r3, #0
   10fc0:	bxeq	lr
   10fc4:	bx	r3
   10fc8:	andeq	r5, r2, r4, lsl r1
   10fcc:	andeq	r5, r2, r4, lsl r1
   10fd0:	andeq	r0, r0, r0
   10fd4:	push	{r4, lr}
   10fd8:	ldr	r4, [pc, #24]	; 10ff8 <abort@plt+0x244>
   10fdc:	ldrb	r3, [r4]
   10fe0:	cmp	r3, #0
   10fe4:	popne	{r4, pc}
   10fe8:	bl	10f70 <abort@plt+0x1bc>
   10fec:	mov	r3, #1
   10ff0:	strb	r3, [r4]
   10ff4:	pop	{r4, pc}
   10ff8:	andeq	r5, r2, r4, lsr r1
   10ffc:	b	10f9c <abort@plt+0x1e8>
   11000:	ldr	r3, [pc, #648]	; 11290 <abort@plt+0x4dc>
   11004:	push	{r7, lr}
   11008:	sub	sp, sp, #64	; 0x40
   1100c:	ldr	r3, [r3]
   11010:	subs	r6, r0, #0
   11014:	str	r3, [sp, #60]	; 0x3c
   11018:	beq	11054 <abort@plt+0x2a0>
   1101c:	ldr	r3, [pc, #624]	; 11294 <abort@plt+0x4e0>
   11020:	mov	r2, #5
   11024:	ldr	r1, [pc, #620]	; 11298 <abort@plt+0x4e4>
   11028:	mov	r0, #0
   1102c:	ldr	r4, [r3]
   11030:	bl	10c28 <dcgettext@plt>
   11034:	ldr	r3, [pc, #608]	; 1129c <abort@plt+0x4e8>
   11038:	mov	r1, #1
   1103c:	ldr	r3, [r3]
   11040:	mov	r2, r0
   11044:	mov	r0, r4
   11048:	bl	10d54 <__fprintf_chk@plt>
   1104c:	mov	r0, r6
   11050:	bl	10d00 <exit@plt>
   11054:	mov	r2, #5
   11058:	ldr	r1, [pc, #576]	; 112a0 <abort@plt+0x4ec>
   1105c:	bl	10c28 <dcgettext@plt>
   11060:	ldr	r3, [pc, #564]	; 1129c <abort@plt+0x4e8>
   11064:	ldr	r4, [pc, #568]	; 112a4 <abort@plt+0x4f0>
   11068:	ldr	r2, [r3]
   1106c:	mov	r1, r0
   11070:	mov	r0, #1
   11074:	bl	10d3c <__printf_chk@plt>
   11078:	mov	r2, #5
   1107c:	ldr	r1, [pc, #548]	; 112a8 <abort@plt+0x4f4>
   11080:	mov	r0, r6
   11084:	bl	10c28 <dcgettext@plt>
   11088:	ldr	r1, [r4]
   1108c:	bl	10bb0 <fputs_unlocked@plt>
   11090:	mov	r2, #5
   11094:	ldr	r1, [pc, #528]	; 112ac <abort@plt+0x4f8>
   11098:	mov	r0, r6
   1109c:	bl	10c28 <dcgettext@plt>
   110a0:	ldr	r1, [r4]
   110a4:	bl	10bb0 <fputs_unlocked@plt>
   110a8:	mov	r2, #5
   110ac:	ldr	r1, [pc, #508]	; 112b0 <abort@plt+0x4fc>
   110b0:	mov	r0, r6
   110b4:	bl	10c28 <dcgettext@plt>
   110b8:	ldr	r1, [r4]
   110bc:	bl	10bb0 <fputs_unlocked@plt>
   110c0:	ldr	lr, [pc, #492]	; 112b4 <abort@plt+0x500>
   110c4:	add	ip, sp, #4
   110c8:	ldm	lr!, {r0, r1, r2, r3}
   110cc:	stmia	ip!, {r0, r1, r2, r3}
   110d0:	ldm	lr!, {r0, r1, r2, r3}
   110d4:	ldr	r5, [sp, #4]
   110d8:	stmia	ip!, {r0, r1, r2, r3}
   110dc:	cmp	r5, #0
   110e0:	ldm	lr!, {r0, r1, r2, r3}
   110e4:	addeq	r4, sp, #4
   110e8:	stmia	ip!, {r0, r1, r2, r3}
   110ec:	ldm	lr, {r0, r1}
   110f0:	stm	ip, {r0, r1}
   110f4:	beq	11124 <abort@plt+0x370>
   110f8:	ldr	r7, [pc, #440]	; 112b8 <abort@plt+0x504>
   110fc:	add	r4, sp, #4
   11100:	b	11110 <abort@plt+0x35c>
   11104:	ldr	r5, [r4, #8]!
   11108:	cmp	r5, #0
   1110c:	beq	11124 <abort@plt+0x370>
   11110:	mov	r1, r5
   11114:	mov	r0, r7
   11118:	bl	10bc8 <strcmp@plt>
   1111c:	cmp	r0, #0
   11120:	bne	11104 <abort@plt+0x350>
   11124:	ldr	r4, [r4, #4]
   11128:	mov	r2, #5
   1112c:	cmp	r4, #0
   11130:	ldr	r1, [pc, #388]	; 112bc <abort@plt+0x508>
   11134:	beq	111dc <abort@plt+0x428>
   11138:	mov	r0, #0
   1113c:	bl	10c28 <dcgettext@plt>
   11140:	ldr	r3, [pc, #376]	; 112c0 <abort@plt+0x50c>
   11144:	ldr	r2, [pc, #376]	; 112c4 <abort@plt+0x510>
   11148:	mov	r1, r0
   1114c:	mov	r0, #1
   11150:	bl	10d3c <__printf_chk@plt>
   11154:	mov	r1, #0
   11158:	mov	r0, #5
   1115c:	bl	10d78 <setlocale@plt>
   11160:	cmp	r0, #0
   11164:	ldreq	r5, [pc, #332]	; 112b8 <abort@plt+0x504>
   11168:	beq	11184 <abort@plt+0x3d0>
   1116c:	mov	r2, #3
   11170:	ldr	r1, [pc, #336]	; 112c8 <abort@plt+0x514>
   11174:	bl	10da8 <strncmp@plt>
   11178:	ldr	r5, [pc, #312]	; 112b8 <abort@plt+0x504>
   1117c:	cmp	r0, #0
   11180:	bne	1126c <abort@plt+0x4b8>
   11184:	mov	r2, #5
   11188:	ldr	r1, [pc, #316]	; 112cc <abort@plt+0x518>
   1118c:	mov	r0, #0
   11190:	bl	10c28 <dcgettext@plt>
   11194:	ldr	r3, [pc, #284]	; 112b8 <abort@plt+0x504>
   11198:	ldr	r2, [pc, #288]	; 112c0 <abort@plt+0x50c>
   1119c:	mov	r1, r0
   111a0:	mov	r0, #1
   111a4:	bl	10d3c <__printf_chk@plt>
   111a8:	mov	r2, #5
   111ac:	ldr	r1, [pc, #284]	; 112d0 <abort@plt+0x51c>
   111b0:	mov	r0, #0
   111b4:	bl	10c28 <dcgettext@plt>
   111b8:	ldr	r2, [pc, #276]	; 112d4 <abort@plt+0x520>
   111bc:	cmp	r4, r5
   111c0:	ldr	r3, [pc, #272]	; 112d8 <abort@plt+0x524>
   111c4:	movne	r3, r2
   111c8:	mov	r1, r0
   111cc:	mov	r2, r4
   111d0:	mov	r0, #1
   111d4:	bl	10d3c <__printf_chk@plt>
   111d8:	b	1104c <abort@plt+0x298>
   111dc:	mov	r0, r4
   111e0:	bl	10c28 <dcgettext@plt>
   111e4:	ldr	r3, [pc, #212]	; 112c0 <abort@plt+0x50c>
   111e8:	ldr	r2, [pc, #212]	; 112c4 <abort@plt+0x510>
   111ec:	mov	r1, r0
   111f0:	mov	r0, #1
   111f4:	bl	10d3c <__printf_chk@plt>
   111f8:	mov	r1, r4
   111fc:	mov	r0, #5
   11200:	bl	10d78 <setlocale@plt>
   11204:	cmp	r0, #0
   11208:	beq	11220 <abort@plt+0x46c>
   1120c:	mov	r2, #3
   11210:	ldr	r1, [pc, #176]	; 112c8 <abort@plt+0x514>
   11214:	bl	10da8 <strncmp@plt>
   11218:	cmp	r0, #0
   1121c:	bne	11264 <abort@plt+0x4b0>
   11220:	mov	r2, #5
   11224:	ldr	r1, [pc, #160]	; 112cc <abort@plt+0x518>
   11228:	mov	r0, #0
   1122c:	bl	10c28 <dcgettext@plt>
   11230:	ldr	r3, [pc, #128]	; 112b8 <abort@plt+0x504>
   11234:	ldr	r2, [pc, #132]	; 112c0 <abort@plt+0x50c>
   11238:	mov	r4, r3
   1123c:	mov	r1, r0
   11240:	mov	r0, #1
   11244:	bl	10d3c <__printf_chk@plt>
   11248:	ldr	r1, [pc, #128]	; 112d0 <abort@plt+0x51c>
   1124c:	mov	r2, #5
   11250:	mov	r0, #0
   11254:	bl	10c28 <dcgettext@plt>
   11258:	ldr	r3, [pc, #120]	; 112d8 <abort@plt+0x524>
   1125c:	mov	r1, r0
   11260:	b	111cc <abort@plt+0x418>
   11264:	ldr	r5, [pc, #76]	; 112b8 <abort@plt+0x504>
   11268:	mov	r4, r5
   1126c:	mov	r2, #5
   11270:	ldr	r1, [pc, #100]	; 112dc <abort@plt+0x528>
   11274:	mov	r0, #0
   11278:	bl	10c28 <dcgettext@plt>
   1127c:	ldr	r2, [pc, #52]	; 112b8 <abort@plt+0x504>
   11280:	mov	r1, r0
   11284:	mov	r0, #1
   11288:	bl	10d3c <__printf_chk@plt>
   1128c:	b	11184 <abort@plt+0x3d0>
   11290:	andeq	r4, r2, r8, lsl #30
   11294:	andeq	r5, r2, r8, lsr #2
   11298:	andeq	r4, r1, ip, lsl r5
   1129c:	andeq	r5, r2, r0, asr #2
   112a0:	andeq	r4, r1, r4, asr #10
   112a4:	andeq	r5, r2, ip, lsr #2
   112a8:	andeq	r4, r1, r8, asr r5
   112ac:	andeq	r4, r1, r0, lsl #11
   112b0:			; <UNDEFINED> instruction: 0x000145b0
   112b4:	andeq	r4, r1, ip, asr #9
   112b8:	andeq	r4, r1, r4, lsl r5
   112bc:	andeq	r4, r1, r8, ror #11
   112c0:	andeq	r4, r1, r0, lsl #12
   112c4:	andeq	r4, r1, r8, lsr #12
   112c8:	andeq	r4, r1, r8, lsr r6
   112cc:	andeq	r4, r1, r4, lsl #13
   112d0:	andeq	r4, r1, r4, lsr #13
   112d4:	andeq	r4, r1, ip, ror #23
   112d8:	andeq	r4, r1, r8, lsr #14
   112dc:	andeq	r4, r1, ip, lsr r6
   112e0:	ldr	r3, [pc, #4]	; 112ec <abort@plt+0x538>
   112e4:	str	r0, [r3]
   112e8:	bx	lr
   112ec:	andeq	r5, r2, r8, lsr r1
   112f0:	ldr	r3, [pc, #4]	; 112fc <abort@plt+0x548>
   112f4:	strb	r0, [r3, #4]
   112f8:	bx	lr
   112fc:	andeq	r5, r2, r8, lsr r1
   11300:	ldr	r3, [pc, #180]	; 113bc <abort@plt+0x608>
   11304:	push	{r4, r5, r6, lr}
   11308:	sub	sp, sp, #8
   1130c:	ldr	r0, [r3]
   11310:	bl	13f94 <abort@plt+0x31e0>
   11314:	cmp	r0, #0
   11318:	beq	11340 <abort@plt+0x58c>
   1131c:	bl	10d18 <__errno_location@plt>
   11320:	ldr	r5, [pc, #152]	; 113c0 <abort@plt+0x60c>
   11324:	ldrb	r3, [r5, #4]
   11328:	cmp	r3, #0
   1132c:	mov	r4, r0
   11330:	beq	1135c <abort@plt+0x5a8>
   11334:	ldr	r3, [r0]
   11338:	cmp	r3, #32
   1133c:	bne	1135c <abort@plt+0x5a8>
   11340:	ldr	r3, [pc, #124]	; 113c4 <abort@plt+0x610>
   11344:	ldr	r0, [r3]
   11348:	bl	13f94 <abort@plt+0x31e0>
   1134c:	cmp	r0, #0
   11350:	bne	1139c <abort@plt+0x5e8>
   11354:	add	sp, sp, #8
   11358:	pop	{r4, r5, r6, pc}
   1135c:	mov	r2, #5
   11360:	ldr	r1, [pc, #96]	; 113c8 <abort@plt+0x614>
   11364:	mov	r0, #0
   11368:	bl	10c28 <dcgettext@plt>
   1136c:	mov	r6, r0
   11370:	ldr	r0, [r5]
   11374:	cmp	r0, #0
   11378:	beq	113a8 <abort@plt+0x5f4>
   1137c:	ldr	r4, [r4]
   11380:	bl	1353c <abort@plt+0x2788>
   11384:	mov	r1, r4
   11388:	str	r6, [sp]
   1138c:	ldr	r2, [pc, #56]	; 113cc <abort@plt+0x618>
   11390:	mov	r3, r0
   11394:	mov	r0, #0
   11398:	bl	10ca0 <error@plt>
   1139c:	ldr	r3, [pc, #44]	; 113d0 <abort@plt+0x61c>
   113a0:	ldr	r0, [r3]
   113a4:	bl	10bf8 <_exit@plt>
   113a8:	mov	r3, r6
   113ac:	ldr	r1, [r4]
   113b0:	ldr	r2, [pc, #28]	; 113d4 <abort@plt+0x620>
   113b4:	bl	10ca0 <error@plt>
   113b8:	b	1139c <abort@plt+0x5e8>
   113bc:	andeq	r5, r2, ip, lsr #2
   113c0:	andeq	r5, r2, r8, lsr r1
   113c4:	andeq	r5, r2, r8, lsr #2
   113c8:	muleq	r1, r4, r7
   113cc:	andeq	r4, r1, r0, lsr #15
   113d0:	ldrdeq	r5, [r2], -r0
   113d4:	andeq	r4, r1, r4, lsr #15
   113d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113dc:	sub	sp, sp, #20
   113e0:	ldr	r5, [pc, #184]	; 114a0 <abort@plt+0x6ec>
   113e4:	ldr	r4, [pc, #184]	; 114a4 <abort@plt+0x6f0>
   113e8:	mov	r6, #0
   113ec:	ldr	ip, [r5]
   113f0:	cmp	r0, #2
   113f4:	ldr	r7, [r4]
   113f8:	str	ip, [sp, #12]
   113fc:	ldr	sl, [sp, #56]	; 0x38
   11400:	str	r6, [r4]
   11404:	ldr	fp, [sp, #60]	; 0x3c
   11408:	beq	11434 <abort@plt+0x680>
   1140c:	ldr	r0, [sp, #12]
   11410:	ldr	r3, [pc, #144]	; 114a8 <abort@plt+0x6f4>
   11414:	ldr	r1, [r5]
   11418:	mov	r2, #0
   1141c:	cmp	r0, r1
   11420:	str	r7, [r4]
   11424:	str	r2, [r3]
   11428:	bne	1149c <abort@plt+0x6e8>
   1142c:	add	sp, sp, #20
   11430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11434:	mov	r8, r2
   11438:	mov	r9, r3
   1143c:	str	r6, [sp]
   11440:	ldr	r3, [pc, #100]	; 114ac <abort@plt+0x6f8>
   11444:	ldr	r2, [pc, #100]	; 114b0 <abort@plt+0x6fc>
   11448:	bl	10ce8 <getopt_long@plt>
   1144c:	cmn	r0, #1
   11450:	beq	1140c <abort@plt+0x658>
   11454:	cmp	r0, #104	; 0x68
   11458:	beq	11490 <abort@plt+0x6dc>
   1145c:	cmp	r0, #118	; 0x76
   11460:	bne	1140c <abort@plt+0x658>
   11464:	ldr	r0, [pc, #72]	; 114b4 <abort@plt+0x700>
   11468:	add	ip, sp, #64	; 0x40
   1146c:	mov	r3, sl
   11470:	ldr	r0, [r0]
   11474:	mov	r2, r9
   11478:	mov	r1, r8
   1147c:	str	ip, [sp]
   11480:	str	ip, [sp, #8]
   11484:	bl	13b1c <abort@plt+0x2d68>
   11488:	mov	r0, r6
   1148c:	bl	10d00 <exit@plt>
   11490:	mov	r0, r6
   11494:	blx	fp
   11498:	b	1140c <abort@plt+0x658>
   1149c:	bl	10c34 <__stack_chk_fail@plt>
   114a0:	andeq	r4, r2, r8, lsl #30
   114a4:	andeq	r5, r2, r0, lsr r1
   114a8:	andeq	r5, r2, r0, lsr #2
   114ac:	andeq	r4, r1, r8, lsr #15
   114b0:	ldrdeq	r4, [r1], -r8
   114b4:	andeq	r5, r2, ip, lsr #2
   114b8:	push	{r4, r5, r6, lr}
   114bc:	subs	r4, r0, #0
   114c0:	beq	11534 <abort@plt+0x780>
   114c4:	mov	r1, #47	; 0x2f
   114c8:	bl	10d84 <strrchr@plt>
   114cc:	subs	r5, r0, #0
   114d0:	beq	11520 <abort@plt+0x76c>
   114d4:	add	r6, r5, #1
   114d8:	sub	r3, r6, r4
   114dc:	cmp	r3, #6
   114e0:	ble	11520 <abort@plt+0x76c>
   114e4:	mov	r2, #7
   114e8:	ldr	r1, [pc, #96]	; 11550 <abort@plt+0x79c>
   114ec:	sub	r0, r5, #6
   114f0:	bl	10da8 <strncmp@plt>
   114f4:	cmp	r0, #0
   114f8:	bne	11520 <abort@plt+0x76c>
   114fc:	mov	r2, #3
   11500:	ldr	r1, [pc, #76]	; 11554 <abort@plt+0x7a0>
   11504:	mov	r0, r6
   11508:	bl	10da8 <strncmp@plt>
   1150c:	cmp	r0, #0
   11510:	movne	r4, r6
   11514:	ldreq	r3, [pc, #60]	; 11558 <abort@plt+0x7a4>
   11518:	addeq	r4, r5, #4
   1151c:	streq	r4, [r3]
   11520:	ldr	r2, [pc, #52]	; 1155c <abort@plt+0x7a8>
   11524:	ldr	r3, [pc, #52]	; 11560 <abort@plt+0x7ac>
   11528:	str	r4, [r2]
   1152c:	str	r4, [r3]
   11530:	pop	{r4, r5, r6, pc}
   11534:	ldr	r3, [pc, #40]	; 11564 <abort@plt+0x7b0>
   11538:	mov	r2, #55	; 0x37
   1153c:	mov	r1, #1
   11540:	ldr	r3, [r3]
   11544:	ldr	r0, [pc, #28]	; 11568 <abort@plt+0x7b4>
   11548:	bl	10c64 <fwrite@plt>
   1154c:	bl	10db4 <abort@plt>
   11550:	andeq	r4, r1, r4, lsr #16
   11554:	andeq	r4, r1, ip, lsr #16
   11558:	andeq	r5, r2, r8, lsl r1
   1155c:	andeq	r5, r2, r0, asr #2
   11560:	andeq	r5, r2, ip, lsl r1
   11564:	andeq	r5, r2, r8, lsr #2
   11568:	andeq	r4, r1, ip, ror #15
   1156c:	push	{r4, lr}
   11570:	mov	r2, #48	; 0x30
   11574:	mov	r4, r1
   11578:	mov	r1, #0
   1157c:	bl	10d30 <memset@plt>
   11580:	cmp	r4, #10
   11584:	beq	11590 <abort@plt+0x7dc>
   11588:	str	r4, [r0]
   1158c:	pop	{r4, pc}
   11590:	bl	10db4 <abort@plt>
   11594:	push	{r4, r5, r6, lr}
   11598:	mov	r2, #5
   1159c:	mov	r5, r0
   115a0:	mov	r6, r1
   115a4:	mov	r1, r0
   115a8:	mov	r0, #0
   115ac:	bl	10c28 <dcgettext@plt>
   115b0:	cmp	r5, r0
   115b4:	mov	r4, r0
   115b8:	beq	115c4 <abort@plt+0x810>
   115bc:	mov	r0, r4
   115c0:	pop	{r4, r5, r6, pc}
   115c4:	bl	14054 <abort@plt+0x32a0>
   115c8:	ldrb	r3, [r0]
   115cc:	bic	r3, r3, #32
   115d0:	cmp	r3, #85	; 0x55
   115d4:	bne	11634 <abort@plt+0x880>
   115d8:	ldrb	r3, [r0, #1]
   115dc:	bic	r3, r3, #32
   115e0:	cmp	r3, #84	; 0x54
   115e4:	bne	116ac <abort@plt+0x8f8>
   115e8:	ldrb	r3, [r0, #2]
   115ec:	bic	r3, r3, #32
   115f0:	cmp	r3, #70	; 0x46
   115f4:	bne	116ac <abort@plt+0x8f8>
   115f8:	ldrb	r3, [r0, #3]
   115fc:	cmp	r3, #45	; 0x2d
   11600:	bne	116ac <abort@plt+0x8f8>
   11604:	ldrb	r3, [r0, #4]
   11608:	cmp	r3, #56	; 0x38
   1160c:	bne	116ac <abort@plt+0x8f8>
   11610:	ldrb	r3, [r0, #5]
   11614:	cmp	r3, #0
   11618:	bne	116ac <abort@plt+0x8f8>
   1161c:	ldrb	r2, [r4]
   11620:	ldr	r3, [pc, #156]	; 116c4 <abort@plt+0x910>
   11624:	ldr	r4, [pc, #156]	; 116c8 <abort@plt+0x914>
   11628:	cmp	r2, #96	; 0x60
   1162c:	movne	r4, r3
   11630:	b	115bc <abort@plt+0x808>
   11634:	cmp	r3, #71	; 0x47
   11638:	bne	116ac <abort@plt+0x8f8>
   1163c:	ldrb	r3, [r0, #1]
   11640:	bic	r3, r3, #32
   11644:	cmp	r3, #66	; 0x42
   11648:	bne	116ac <abort@plt+0x8f8>
   1164c:	ldrb	r3, [r0, #2]
   11650:	cmp	r3, #49	; 0x31
   11654:	bne	116ac <abort@plt+0x8f8>
   11658:	ldrb	r3, [r0, #3]
   1165c:	cmp	r3, #56	; 0x38
   11660:	bne	116ac <abort@plt+0x8f8>
   11664:	ldrb	r3, [r0, #4]
   11668:	cmp	r3, #48	; 0x30
   1166c:	bne	116ac <abort@plt+0x8f8>
   11670:	ldrb	r3, [r0, #5]
   11674:	cmp	r3, #51	; 0x33
   11678:	bne	116ac <abort@plt+0x8f8>
   1167c:	ldrb	r3, [r0, #6]
   11680:	cmp	r3, #48	; 0x30
   11684:	bne	116ac <abort@plt+0x8f8>
   11688:	ldrb	r3, [r0, #7]
   1168c:	cmp	r3, #0
   11690:	bne	116ac <abort@plt+0x8f8>
   11694:	ldrb	r2, [r4]
   11698:	ldr	r3, [pc, #44]	; 116cc <abort@plt+0x918>
   1169c:	ldr	r4, [pc, #44]	; 116d0 <abort@plt+0x91c>
   116a0:	cmp	r2, #96	; 0x60
   116a4:	movne	r4, r3
   116a8:	b	115bc <abort@plt+0x808>
   116ac:	ldr	r3, [pc, #32]	; 116d4 <abort@plt+0x920>
   116b0:	ldr	r4, [pc, #32]	; 116d8 <abort@plt+0x924>
   116b4:	cmp	r6, #9
   116b8:	movne	r4, r3
   116bc:	mov	r0, r4
   116c0:	pop	{r4, r5, r6, pc}
   116c4:	andeq	r4, r1, r8, lsl #17
   116c8:	muleq	r1, r4, r8
   116cc:	andeq	r4, r1, ip, lsl #17
   116d0:	muleq	r1, r0, r8
   116d4:	muleq	r1, r8, r8
   116d8:	andeq	r4, r1, r4, lsl #17
   116dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116e0:	sub	sp, sp, #124	; 0x7c
   116e4:	ldr	ip, [pc, #3576]	; 124e4 <abort@plt+0x1730>
   116e8:	str	r3, [sp, #24]
   116ec:	ldr	r3, [sp, #168]	; 0xa8
   116f0:	ldr	ip, [ip]
   116f4:	str	r3, [sp, #56]	; 0x38
   116f8:	ldr	r3, [sp, #172]	; 0xac
   116fc:	ldr	r8, [sp, #160]	; 0xa0
   11700:	str	r3, [sp, #80]	; 0x50
   11704:	ldr	r3, [sp, #176]	; 0xb0
   11708:	mov	fp, r0
   1170c:	str	r3, [sp, #76]	; 0x4c
   11710:	mov	sl, r1
   11714:	str	r2, [sp, #36]	; 0x24
   11718:	str	ip, [sp, #116]	; 0x74
   1171c:	bl	10c7c <__ctype_get_mb_cur_max@plt>
   11720:	ldr	r3, [sp, #164]	; 0xa4
   11724:	ands	r4, r3, #2
   11728:	movne	r3, #1
   1172c:	moveq	r3, #0
   11730:	str	r3, [sp, #32]
   11734:	str	r0, [sp, #64]	; 0x40
   11738:	cmp	r8, #10
   1173c:	ldrls	pc, [pc, r8, lsl #2]
   11740:	b	12ef0 <abort@plt+0x213c>
   11744:	andeq	r1, r1, r8, lsr fp
   11748:	ldrdeq	r1, [r1], -r0
   1174c:	ldrdeq	r2, [r1], -r0
   11750:	strdeq	r1, [r1], -r0
   11754:	andeq	r1, r1, r4, lsr #21
   11758:	andeq	r1, r1, ip, ror #21
   1175c:	andeq	r1, r1, r8, ror #22
   11760:	andeq	r1, r1, r0, lsr #23
   11764:	andeq	r1, r1, r0, ror r7
   11768:	andeq	r1, r1, r0, ror r7
   1176c:	andeq	r1, r1, r0, ror r7
   11770:	cmp	r8, #10
   11774:	beq	11798 <abort@plt+0x9e4>
   11778:	mov	r1, r8
   1177c:	ldr	r0, [pc, #3428]	; 124e8 <abort@plt+0x1734>
   11780:	bl	11594 <abort@plt+0x7e0>
   11784:	mov	r1, r8
   11788:	str	r0, [sp, #80]	; 0x50
   1178c:	ldr	r0, [pc, #3420]	; 124f0 <abort@plt+0x173c>
   11790:	bl	11594 <abort@plt+0x7e0>
   11794:	str	r0, [sp, #76]	; 0x4c
   11798:	cmp	r4, #0
   1179c:	movne	r4, #0
   117a0:	beq	12bb0 <abort@plt+0x1dfc>
   117a4:	ldr	r7, [sp, #76]	; 0x4c
   117a8:	mov	r5, #0
   117ac:	mov	r6, #1
   117b0:	mov	r0, r7
   117b4:	str	r6, [sp, #40]	; 0x28
   117b8:	str	r5, [sp, #68]	; 0x44
   117bc:	bl	10d0c <strlen@plt>
   117c0:	str	r6, [sp, #28]
   117c4:	str	r5, [sp, #44]	; 0x2c
   117c8:	str	r5, [sp, #72]	; 0x48
   117cc:	str	r7, [sp, #60]	; 0x3c
   117d0:	str	r0, [sp, #52]	; 0x34
   117d4:	str	r8, [sp, #160]	; 0xa0
   117d8:	mov	r8, fp
   117dc:	ldr	fp, [sp, #160]	; 0xa0
   117e0:	mov	r9, #0
   117e4:	ldr	r3, [sp, #24]
   117e8:	cmn	r3, #1
   117ec:	beq	11d54 <abort@plt+0xfa0>
   117f0:	ldr	r3, [sp, #24]
   117f4:	subs	r6, r3, r9
   117f8:	movne	r6, #1
   117fc:	cmp	r6, #0
   11800:	beq	11d6c <abort@plt+0xfb8>
   11804:	ldr	r7, [sp, #28]
   11808:	ldr	r0, [sp, #36]	; 0x24
   1180c:	cmp	fp, #2
   11810:	moveq	r7, #0
   11814:	andne	r7, r7, #1
   11818:	add	r3, r0, r9
   1181c:	cmp	r7, #0
   11820:	str	r3, [sp, #48]	; 0x30
   11824:	beq	12210 <abort@plt+0x145c>
   11828:	ldr	r2, [sp, #52]	; 0x34
   1182c:	cmp	r2, #0
   11830:	beq	124f4 <abort@plt+0x1740>
   11834:	ldr	r1, [sp, #24]
   11838:	cmp	r2, #1
   1183c:	mov	r3, r2
   11840:	movls	r3, #0
   11844:	movhi	r3, #1
   11848:	cmn	r1, #1
   1184c:	movne	r3, #0
   11850:	cmp	r3, #0
   11854:	add	r5, r9, r2
   11858:	beq	11864 <abort@plt+0xab0>
   1185c:	bl	10d0c <strlen@plt>
   11860:	str	r0, [sp, #24]
   11864:	ldr	r3, [sp, #24]
   11868:	cmp	r5, r3
   1186c:	bhi	124f4 <abort@plt+0x1740>
   11870:	ldr	r2, [sp, #52]	; 0x34
   11874:	ldr	r1, [sp, #60]	; 0x3c
   11878:	ldr	r0, [sp, #48]	; 0x30
   1187c:	bl	10c1c <memcmp@plt>
   11880:	cmp	r0, #0
   11884:	bne	124f4 <abort@plt+0x1740>
   11888:	ldr	r3, [sp, #32]
   1188c:	cmp	r3, #0
   11890:	bne	12db0 <abort@plt+0x1ffc>
   11894:	ldr	r3, [sp, #48]	; 0x30
   11898:	ldrb	r5, [r3]
   1189c:	cmp	r5, #126	; 0x7e
   118a0:	ldrls	pc, [pc, r5, lsl #2]
   118a4:	b	12174 <abort@plt+0x13c0>
   118a8:	andeq	r2, r1, r0, rrx
   118ac:	andeq	r2, r1, r4, ror r1
   118b0:	andeq	r2, r1, r4, ror r1
   118b4:	andeq	r2, r1, r4, ror r1
   118b8:	andeq	r2, r1, r4, ror r1
   118bc:	andeq	r2, r1, r4, ror r1
   118c0:	andeq	r2, r1, r4, ror r1
   118c4:	andeq	r2, r1, ip, lsr #2
   118c8:	andeq	r2, r1, ip, lsl r1
   118cc:	andeq	r2, r1, ip, lsl r0
   118d0:	andeq	r1, r1, r4, ror #31
   118d4:	andeq	r2, r1, ip, lsr r0
   118d8:	andeq	r2, r1, r4, lsr #32
   118dc:	andeq	r1, r1, r4, asr pc
   118e0:	andeq	r2, r1, r4, ror r1
   118e4:	andeq	r2, r1, r4, ror r1
   118e8:	andeq	r2, r1, r4, ror r1
   118ec:	andeq	r2, r1, r4, ror r1
   118f0:	andeq	r2, r1, r4, ror r1
   118f4:	andeq	r2, r1, r4, ror r1
   118f8:	andeq	r2, r1, r4, ror r1
   118fc:	andeq	r2, r1, r4, ror r1
   11900:	andeq	r2, r1, r4, ror r1
   11904:	andeq	r2, r1, r4, ror r1
   11908:	andeq	r2, r1, r4, ror r1
   1190c:	andeq	r2, r1, r4, ror r1
   11910:	andeq	r2, r1, r4, ror r1
   11914:	andeq	r2, r1, r4, ror r1
   11918:	andeq	r2, r1, r4, ror r1
   1191c:	andeq	r2, r1, r4, ror r1
   11920:	andeq	r2, r1, r4, ror r1
   11924:	andeq	r2, r1, r4, ror r1
   11928:	andeq	r2, r1, r4, lsr r1
   1192c:	andeq	r2, r1, r8, asr #32
   11930:	andeq	r2, r1, r8, asr #32
   11934:	andeq	r2, r1, ip, asr #2
   11938:	andeq	r2, r1, r8, asr #32
   1193c:	andeq	r2, r1, r8, ror #2
   11940:	andeq	r2, r1, r8, asr #32
   11944:	andeq	r1, r1, r8, lsl #29
   11948:	andeq	r2, r1, r8, asr #32
   1194c:	andeq	r2, r1, r8, asr #32
   11950:	andeq	r2, r1, r8, asr #32
   11954:	andeq	r2, r1, r8, ror #2
   11958:	andeq	r2, r1, r8, ror #2
   1195c:	andeq	r2, r1, r8, ror #2
   11960:	andeq	r2, r1, r8, ror #2
   11964:	andeq	r2, r1, r8, ror #2
   11968:	andeq	r2, r1, r8, ror #2
   1196c:	andeq	r2, r1, r8, ror #2
   11970:	andeq	r2, r1, r8, ror #2
   11974:	andeq	r2, r1, r8, ror #2
   11978:	andeq	r2, r1, r8, ror #2
   1197c:	andeq	r2, r1, r8, ror #2
   11980:	andeq	r2, r1, r8, ror #2
   11984:	andeq	r2, r1, r8, ror #2
   11988:	andeq	r2, r1, r8, ror #2
   1198c:	andeq	r2, r1, r8, ror #2
   11990:	andeq	r2, r1, r8, ror #2
   11994:	andeq	r2, r1, r8, asr #32
   11998:	andeq	r2, r1, r8, asr #32
   1199c:	andeq	r2, r1, r8, asr #32
   119a0:	andeq	r2, r1, r8, asr #32
   119a4:	andeq	r1, r1, ip, asr lr
   119a8:	andeq	r2, r1, r4, ror r1
   119ac:	andeq	r2, r1, r8, ror #2
   119b0:	andeq	r2, r1, r8, ror #2
   119b4:	andeq	r2, r1, r8, ror #2
   119b8:	andeq	r2, r1, r8, ror #2
   119bc:	andeq	r2, r1, r8, ror #2
   119c0:	andeq	r2, r1, r8, ror #2
   119c4:	andeq	r2, r1, r8, ror #2
   119c8:	andeq	r2, r1, r8, ror #2
   119cc:	andeq	r2, r1, r8, ror #2
   119d0:	andeq	r2, r1, r8, ror #2
   119d4:	andeq	r2, r1, r8, ror #2
   119d8:	andeq	r2, r1, r8, ror #2
   119dc:	andeq	r2, r1, r8, ror #2
   119e0:	andeq	r2, r1, r8, ror #2
   119e4:	andeq	r2, r1, r8, ror #2
   119e8:	andeq	r2, r1, r8, ror #2
   119ec:	andeq	r2, r1, r8, ror #2
   119f0:	andeq	r2, r1, r8, ror #2
   119f4:	andeq	r2, r1, r8, ror #2
   119f8:	andeq	r2, r1, r8, ror #2
   119fc:	andeq	r2, r1, r8, ror #2
   11a00:	andeq	r2, r1, r8, ror #2
   11a04:	andeq	r2, r1, r8, ror #2
   11a08:	andeq	r2, r1, r8, ror #2
   11a0c:	andeq	r2, r1, r8, ror #2
   11a10:	andeq	r2, r1, r8, ror #2
   11a14:	andeq	r2, r1, r8, asr #32
   11a18:	andeq	r1, r1, r4, lsl lr
   11a1c:	andeq	r2, r1, r8, ror #2
   11a20:	andeq	r2, r1, r8, asr #32
   11a24:	andeq	r2, r1, r8, ror #2
   11a28:	andeq	r2, r1, r8, asr #32
   11a2c:	andeq	r2, r1, r8, ror #2
   11a30:	andeq	r2, r1, r8, ror #2
   11a34:	andeq	r2, r1, r8, ror #2
   11a38:	andeq	r2, r1, r8, ror #2
   11a3c:	andeq	r2, r1, r8, ror #2
   11a40:	andeq	r2, r1, r8, ror #2
   11a44:	andeq	r2, r1, r8, ror #2
   11a48:	andeq	r2, r1, r8, ror #2
   11a4c:	andeq	r2, r1, r8, ror #2
   11a50:	andeq	r2, r1, r8, ror #2
   11a54:	andeq	r2, r1, r8, ror #2
   11a58:	andeq	r2, r1, r8, ror #2
   11a5c:	andeq	r2, r1, r8, ror #2
   11a60:	andeq	r2, r1, r8, ror #2
   11a64:	andeq	r2, r1, r8, ror #2
   11a68:	andeq	r2, r1, r8, ror #2
   11a6c:	andeq	r2, r1, r8, ror #2
   11a70:	andeq	r2, r1, r8, ror #2
   11a74:	andeq	r2, r1, r8, ror #2
   11a78:	andeq	r2, r1, r8, ror #2
   11a7c:	andeq	r2, r1, r8, ror #2
   11a80:	andeq	r2, r1, r8, ror #2
   11a84:	andeq	r2, r1, r8, ror #2
   11a88:	andeq	r2, r1, r8, ror #2
   11a8c:	andeq	r2, r1, r8, ror #2
   11a90:	andeq	r2, r1, r8, ror #2
   11a94:	andeq	r1, r1, ip, lsr #24
   11a98:	andeq	r2, r1, r8, asr #32
   11a9c:	andeq	r1, r1, ip, lsr #24
   11aa0:	andeq	r2, r1, ip, asr #2
   11aa4:	cmp	r4, #0
   11aa8:	moveq	r3, #1
   11aac:	streq	r3, [sp, #28]
   11ab0:	beq	121dc <abort@plt+0x1428>
   11ab4:	mov	r3, #0
   11ab8:	mov	r4, r3
   11abc:	mov	r2, #1
   11ac0:	str	r2, [sp, #40]	; 0x28
   11ac4:	str	r3, [sp, #68]	; 0x44
   11ac8:	str	r2, [sp, #32]
   11acc:	str	r2, [sp, #52]	; 0x34
   11ad0:	ldr	r3, [pc, #2584]	; 124f0 <abort@plt+0x173c>
   11ad4:	str	r4, [sp, #44]	; 0x2c
   11ad8:	str	r4, [sp, #72]	; 0x48
   11adc:	str	r4, [sp, #28]
   11ae0:	str	r3, [sp, #60]	; 0x3c
   11ae4:	mov	r8, #2
   11ae8:	b	117d4 <abort@plt+0xa20>
   11aec:	cmp	r4, #0
   11af0:	bne	12d7c <abort@plt+0x1fc8>
   11af4:	cmp	sl, #0
   11af8:	beq	12b3c <abort@plt+0x1d88>
   11afc:	mov	r3, #34	; 0x22
   11b00:	strb	r3, [fp]
   11b04:	ldr	r3, [pc, #2528]	; 124ec <abort@plt+0x1738>
   11b08:	mov	r1, r4
   11b0c:	mov	r2, #1
   11b10:	str	r4, [sp, #68]	; 0x44
   11b14:	str	r2, [sp, #40]	; 0x28
   11b18:	mov	r4, r2
   11b1c:	str	r1, [sp, #44]	; 0x2c
   11b20:	str	r1, [sp, #72]	; 0x48
   11b24:	str	r1, [sp, #32]
   11b28:	str	r2, [sp, #28]
   11b2c:	str	r2, [sp, #52]	; 0x34
   11b30:	str	r3, [sp, #60]	; 0x3c
   11b34:	b	117d4 <abort@plt+0xa20>
   11b38:	mov	r3, #0
   11b3c:	str	r3, [sp, #68]	; 0x44
   11b40:	str	r3, [sp, #44]	; 0x2c
   11b44:	str	r3, [sp, #32]
   11b48:	str	r3, [sp, #28]
   11b4c:	str	r3, [sp, #60]	; 0x3c
   11b50:	mov	r3, #1
   11b54:	str	r8, [sp, #72]	; 0x48
   11b58:	str	r8, [sp, #52]	; 0x34
   11b5c:	mov	r4, r8
   11b60:	str	r3, [sp, #40]	; 0x28
   11b64:	b	117d4 <abort@plt+0xa20>
   11b68:	mov	r3, #1
   11b6c:	str	r3, [sp, #40]	; 0x28
   11b70:	str	r3, [sp, #32]
   11b74:	str	r3, [sp, #28]
   11b78:	str	r3, [sp, #52]	; 0x34
   11b7c:	ldr	r3, [pc, #2408]	; 124ec <abort@plt+0x1738>
   11b80:	mov	r2, #0
   11b84:	mov	r4, r2
   11b88:	str	r2, [sp, #68]	; 0x44
   11b8c:	str	r2, [sp, #44]	; 0x2c
   11b90:	str	r2, [sp, #72]	; 0x48
   11b94:	str	r3, [sp, #60]	; 0x3c
   11b98:	mov	r8, #5
   11b9c:	b	117d4 <abort@plt+0xa20>
   11ba0:	mov	r3, #0
   11ba4:	mov	r2, #1
   11ba8:	str	r2, [sp, #40]	; 0x28
   11bac:	mov	r4, r3
   11bb0:	str	r3, [sp, #68]	; 0x44
   11bb4:	str	r2, [sp, #28]
   11bb8:	str	r3, [sp, #44]	; 0x2c
   11bbc:	str	r3, [sp, #72]	; 0x48
   11bc0:	str	r3, [sp, #32]
   11bc4:	str	r3, [sp, #52]	; 0x34
   11bc8:	str	r3, [sp, #60]	; 0x3c
   11bcc:	b	117d4 <abort@plt+0xa20>
   11bd0:	mov	r2, #1
   11bd4:	mov	r3, #0
   11bd8:	str	r2, [sp, #40]	; 0x28
   11bdc:	mov	r4, r3
   11be0:	str	r3, [sp, #68]	; 0x44
   11be4:	str	r8, [sp, #52]	; 0x34
   11be8:	str	r2, [sp, #32]
   11bec:	b	11ad0 <abort@plt+0xd1c>
   11bf0:	mov	r3, #1
   11bf4:	str	r3, [sp, #40]	; 0x28
   11bf8:	str	r3, [sp, #32]
   11bfc:	str	r3, [sp, #28]
   11c00:	str	r3, [sp, #52]	; 0x34
   11c04:	ldr	r3, [pc, #2276]	; 124f0 <abort@plt+0x173c>
   11c08:	mov	r2, #0
   11c0c:	mov	r4, r2
   11c10:	str	r2, [sp, #68]	; 0x44
   11c14:	str	r2, [sp, #44]	; 0x2c
   11c18:	str	r2, [sp, #72]	; 0x48
   11c1c:	str	r3, [sp, #60]	; 0x3c
   11c20:	mov	r8, #2
   11c24:	b	117d4 <abort@plt+0xa20>
   11c28:	mov	r7, #0
   11c2c:	ldr	r3, [sp, #24]
   11c30:	cmn	r3, #1
   11c34:	beq	12770 <abort@plt+0x19bc>
   11c38:	ldr	r3, [sp, #24]
   11c3c:	subs	r3, r3, #1
   11c40:	movne	r3, #1
   11c44:	cmp	r3, #0
   11c48:	sub	r2, fp, #2
   11c4c:	clz	r2, r2
   11c50:	lsr	r2, r2, #5
   11c54:	bne	11e50 <abort@plt+0x109c>
   11c58:	cmp	r9, #0
   11c5c:	bne	11e50 <abort@plt+0x109c>
   11c60:	ldr	r3, [sp, #32]
   11c64:	tst	r3, r2
   11c68:	bne	11f70 <abort@plt+0x11bc>
   11c6c:	ldr	r3, [sp, #28]
   11c70:	eor	r3, r3, #1
   11c74:	orr	r3, r2, r3
   11c78:	ldr	r2, [sp, #32]
   11c7c:	eor	r3, r3, #1
   11c80:	orrs	r3, r2, r3
   11c84:	beq	11cb4 <abort@plt+0xf00>
   11c88:	mov	r3, #0
   11c8c:	ldr	r1, [sp, #56]	; 0x38
   11c90:	cmp	r1, #0
   11c94:	beq	11cb4 <abort@plt+0xf00>
   11c98:	lsr	r2, r5, #5
   11c9c:	and	r0, r5, #31
   11ca0:	uxtb	r2, r2
   11ca4:	ldr	r1, [r1, r2, lsl #2]
   11ca8:	lsr	r2, r1, r0
   11cac:	tst	r2, #1
   11cb0:	bne	11cbc <abort@plt+0xf08>
   11cb4:	cmp	r7, #0
   11cb8:	beq	11f0c <abort@plt+0x1158>
   11cbc:	sub	r2, fp, #2
   11cc0:	clz	r2, r2
   11cc4:	lsr	r2, r2, #5
   11cc8:	ldr	r3, [sp, #32]
   11ccc:	cmp	r3, #0
   11cd0:	bne	11ffc <abort@plt+0x1248>
   11cd4:	ldr	r3, [sp, #44]	; 0x2c
   11cd8:	eor	r3, r3, #1
   11cdc:	ands	r3, r2, r3
   11ce0:	beq	11d18 <abort@plt+0xf64>
   11ce4:	cmp	sl, r4
   11ce8:	movhi	r2, #39	; 0x27
   11cec:	strbhi	r2, [r8, r4]
   11cf0:	add	r2, r4, #1
   11cf4:	cmp	r2, sl
   11cf8:	movcc	r1, #36	; 0x24
   11cfc:	strbcc	r1, [r8, r2]
   11d00:	add	r2, r4, #2
   11d04:	cmp	r2, sl
   11d08:	add	r4, r4, #3
   11d0c:	movcc	r1, #39	; 0x27
   11d10:	strbcc	r1, [r8, r2]
   11d14:	str	r3, [sp, #44]	; 0x2c
   11d18:	cmp	r4, sl
   11d1c:	movcc	r3, #92	; 0x5c
   11d20:	strbcc	r3, [r8, r4]
   11d24:	add	r9, r9, #1
   11d28:	add	r4, r4, #1
   11d2c:	cmp	r4, sl
   11d30:	ldr	r3, [sp, #40]	; 0x28
   11d34:	strbcc	r5, [r8, r4]
   11d38:	cmp	r6, #0
   11d3c:	moveq	r3, #0
   11d40:	str	r3, [sp, #40]	; 0x28
   11d44:	ldr	r3, [sp, #24]
   11d48:	add	r4, r4, #1
   11d4c:	cmn	r3, #1
   11d50:	bne	117f0 <abort@plt+0xa3c>
   11d54:	ldr	r3, [sp, #36]	; 0x24
   11d58:	ldrb	r6, [r3, r9]
   11d5c:	adds	r6, r6, #0
   11d60:	movne	r6, #1
   11d64:	cmp	r6, #0
   11d68:	bne	11804 <abort@plt+0xa50>
   11d6c:	str	fp, [sp, #160]	; 0xa0
   11d70:	mov	fp, r8
   11d74:	ldr	r8, [sp, #160]	; 0xa0
   11d78:	ldr	r1, [sp, #32]
   11d7c:	cmp	r4, #0
   11d80:	sub	r2, r8, #2
   11d84:	clz	r2, r2
   11d88:	lsr	r2, r2, #5
   11d8c:	andeq	r3, r2, r1
   11d90:	movne	r3, #0
   11d94:	cmp	r3, #0
   11d98:	bne	12e84 <abort@plt+0x20d0>
   11d9c:	eor	r3, r1, #1
   11da0:	ands	r2, r2, r3
   11da4:	beq	12dc0 <abort@plt+0x200c>
   11da8:	ldr	r3, [sp, #68]	; 0x44
   11dac:	cmp	r3, #0
   11db0:	beq	12dc4 <abort@plt+0x2010>
   11db4:	ldr	r3, [sp, #40]	; 0x28
   11db8:	cmp	r3, #0
   11dbc:	bne	12e40 <abort@plt+0x208c>
   11dc0:	ldr	r3, [sp, #72]	; 0x48
   11dc4:	adds	r3, r3, #0
   11dc8:	movne	r3, #1
   11dcc:	cmp	sl, #0
   11dd0:	movne	r3, #0
   11dd4:	cmp	r3, #0
   11dd8:	ldreq	r2, [sp, #68]	; 0x44
   11ddc:	beq	12dc4 <abort@plt+0x2010>
   11de0:	ldr	sl, [sp, #72]	; 0x48
   11de4:	str	r3, [sp, #68]	; 0x44
   11de8:	ldr	r3, [pc, #1792]	; 124f0 <abort@plt+0x173c>
   11dec:	mov	r2, #39	; 0x27
   11df0:	mov	r4, #1
   11df4:	str	r3, [sp, #60]	; 0x3c
   11df8:	mov	r3, #0
   11dfc:	strb	r2, [fp]
   11e00:	str	r4, [sp, #52]	; 0x34
   11e04:	mov	r8, #2
   11e08:	str	r3, [sp, #32]
   11e0c:	b	117d4 <abort@plt+0xa20>
   11e10:	mov	r7, #0
   11e14:	cmp	fp, #2
   11e18:	beq	12750 <abort@plt+0x199c>
   11e1c:	ldr	r3, [sp, #52]	; 0x34
   11e20:	ldr	r2, [sp, #28]
   11e24:	ldr	r1, [sp, #32]
   11e28:	cmp	r3, #0
   11e2c:	andne	r2, r2, r1
   11e30:	moveq	r2, #0
   11e34:	cmp	r2, #0
   11e38:	moveq	r5, #92	; 0x5c
   11e3c:	moveq	r3, r5
   11e40:	bne	1275c <abort@plt+0x19a8>
   11e44:	ldr	r1, [sp, #28]
   11e48:	cmp	r1, #0
   11e4c:	bne	12ecc <abort@plt+0x2118>
   11e50:	mov	r6, #0
   11e54:	b	11c6c <abort@plt+0xeb8>
   11e58:	mov	r7, #0
   11e5c:	cmp	fp, #2
   11e60:	beq	127c0 <abort@plt+0x1a0c>
   11e64:	cmp	fp, #5
   11e68:	beq	12784 <abort@plt+0x19d0>
   11e6c:	sub	r2, fp, #2
   11e70:	mov	r6, #0
   11e74:	clz	r2, r2
   11e78:	mov	r5, #63	; 0x3f
   11e7c:	lsr	r2, r2, #5
   11e80:	b	11c6c <abort@plt+0xeb8>
   11e84:	mov	r7, #0
   11e88:	cmp	fp, #2
   11e8c:	strne	r6, [sp, #68]	; 0x44
   11e90:	movne	r2, #0
   11e94:	movne	r5, #39	; 0x27
   11e98:	bne	11c6c <abort@plt+0xeb8>
   11e9c:	ldr	r3, [sp, #32]
   11ea0:	cmp	r3, #0
   11ea4:	bne	12ba0 <abort@plt+0x1dec>
   11ea8:	cmp	sl, #0
   11eac:	ldr	r3, [sp, #72]	; 0x48
   11eb0:	clz	r3, r3
   11eb4:	lsr	r3, r3, #5
   11eb8:	moveq	r3, #0
   11ebc:	cmp	r3, #0
   11ec0:	bne	12ad4 <abort@plt+0x1d20>
   11ec4:	cmp	sl, r4
   11ec8:	movhi	r3, #39	; 0x27
   11ecc:	strbhi	r3, [r8, r4]
   11ed0:	add	r3, r4, #1
   11ed4:	cmp	sl, r3
   11ed8:	movhi	r2, #92	; 0x5c
   11edc:	strbhi	r2, [r8, r3]
   11ee0:	add	r3, r4, #2
   11ee4:	cmp	sl, r3
   11ee8:	movhi	r2, #39	; 0x27
   11eec:	strbhi	r2, [r8, r3]
   11ef0:	mov	r3, #0
   11ef4:	cmp	r7, #0
   11ef8:	add	r4, r4, #3
   11efc:	str	r3, [sp, #44]	; 0x2c
   11f00:	str	r6, [sp, #68]	; 0x44
   11f04:	mov	r5, #39	; 0x27
   11f08:	bne	11cbc <abort@plt+0xf08>
   11f0c:	ldr	r2, [sp, #44]	; 0x2c
   11f10:	eor	r3, r3, #1
   11f14:	and	r3, r3, r2
   11f18:	add	r9, r9, #1
   11f1c:	uxtb	r3, r3
   11f20:	cmp	r3, #0
   11f24:	beq	11d2c <abort@plt+0xf78>
   11f28:	cmp	sl, r4
   11f2c:	movhi	r3, #39	; 0x27
   11f30:	strbhi	r3, [r8, r4]
   11f34:	add	r3, r4, #1
   11f38:	cmp	sl, r3
   11f3c:	movhi	r2, #39	; 0x27
   11f40:	strbhi	r2, [r8, r3]
   11f44:	mov	r3, #0
   11f48:	add	r4, r4, #2
   11f4c:	str	r3, [sp, #44]	; 0x2c
   11f50:	b	11d2c <abort@plt+0xf78>
   11f54:	mov	r3, #114	; 0x72
   11f58:	ldr	r1, [sp, #32]
   11f5c:	sub	r2, fp, #2
   11f60:	clz	r2, r2
   11f64:	lsr	r2, r2, #5
   11f68:	tst	r2, r1
   11f6c:	beq	11e44 <abort@plt+0x1090>
   11f70:	mov	fp, r8
   11f74:	mov	r8, #2
   11f78:	ldr	r3, [sp, #28]
   11f7c:	cmp	r3, #0
   11f80:	movne	r8, #4
   11f84:	ldr	r3, [sp, #164]	; 0xa4
   11f88:	mov	ip, #0
   11f8c:	bic	r3, r3, #2
   11f90:	str	r3, [sp, #4]
   11f94:	ldr	r3, [sp, #76]	; 0x4c
   11f98:	str	r8, [sp]
   11f9c:	str	r3, [sp, #16]
   11fa0:	ldr	r3, [sp, #80]	; 0x50
   11fa4:	ldr	r2, [sp, #36]	; 0x24
   11fa8:	str	r3, [sp, #12]
   11fac:	mov	r1, sl
   11fb0:	ldr	r3, [sp, #24]
   11fb4:	mov	r0, fp
   11fb8:	str	ip, [sp, #8]
   11fbc:	bl	116dc <abort@plt+0x928>
   11fc0:	mov	r4, r0
   11fc4:	ldr	r3, [pc, #1304]	; 124e4 <abort@plt+0x1730>
   11fc8:	ldr	r2, [sp, #116]	; 0x74
   11fcc:	mov	r0, r4
   11fd0:	ldr	r3, [r3]
   11fd4:	cmp	r2, r3
   11fd8:	bne	12ec8 <abort@plt+0x2114>
   11fdc:	add	sp, sp, #124	; 0x7c
   11fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fe4:	mov	r5, #110	; 0x6e
   11fe8:	ldr	r3, [sp, #32]
   11fec:	mov	r2, #0
   11ff0:	cmp	r3, #0
   11ff4:	mov	r6, r2
   11ff8:	beq	11cd4 <abort@plt+0xf20>
   11ffc:	str	fp, [sp, #160]	; 0xa0
   12000:	mov	fp, r8
   12004:	ldr	r8, [sp, #160]	; 0xa0
   12008:	mov	r3, r2
   1200c:	ldr	r2, [sp, #28]
   12010:	and	r2, r2, r3
   12014:	str	r2, [sp, #28]
   12018:	b	11f78 <abort@plt+0x11c4>
   1201c:	mov	r5, #116	; 0x74
   12020:	b	11fe8 <abort@plt+0x1234>
   12024:	mov	r5, #102	; 0x66
   12028:	ldr	r3, [sp, #32]
   1202c:	cmp	r3, #0
   12030:	bne	12bdc <abort@plt+0x1e28>
   12034:	mov	r6, #0
   12038:	b	11d18 <abort@plt+0xf64>
   1203c:	mov	r5, #118	; 0x76
   12040:	b	12028 <abort@plt+0x1274>
   12044:	mov	r7, #0
   12048:	mov	r6, #0
   1204c:	b	11c88 <abort@plt+0xed4>
   12050:	ldr	r3, [sp, #32]
   12054:	cmp	r3, #0
   12058:	bne	12e20 <abort@plt+0x206c>
   1205c:	mov	r7, r3
   12060:	ldr	r3, [sp, #44]	; 0x2c
   12064:	sub	r2, fp, #2
   12068:	eor	r3, r3, #1
   1206c:	clz	r2, r2
   12070:	lsr	r2, r2, #5
   12074:	ands	r3, r2, r3
   12078:	beq	12ac0 <abort@plt+0x1d0c>
   1207c:	cmp	sl, r4
   12080:	movhi	r1, #39	; 0x27
   12084:	strbhi	r1, [r8, r4]
   12088:	add	r1, r4, #1
   1208c:	cmp	sl, r1
   12090:	movhi	r0, #36	; 0x24
   12094:	strbhi	r0, [r8, r1]
   12098:	add	r1, r4, #2
   1209c:	cmp	sl, r1
   120a0:	movhi	r0, #39	; 0x27
   120a4:	strbhi	r0, [r8, r1]
   120a8:	add	r1, r4, #3
   120ac:	cmp	sl, r1
   120b0:	bls	12b20 <abort@plt+0x1d6c>
   120b4:	mov	r4, r1
   120b8:	mov	r1, #92	; 0x5c
   120bc:	strb	r1, [r8, r4]
   120c0:	mov	r1, r4
   120c4:	str	r3, [sp, #44]	; 0x2c
   120c8:	cmp	fp, #2
   120cc:	add	r4, r4, #1
   120d0:	beq	12b68 <abort@plt+0x1db4>
   120d4:	ldr	r0, [sp, #24]
   120d8:	add	r3, r9, #1
   120dc:	cmp	r3, r0
   120e0:	bcs	120f8 <abort@plt+0x1344>
   120e4:	ldr	r0, [sp, #36]	; 0x24
   120e8:	ldrb	r3, [r0, r3]
   120ec:	sub	r3, r3, #48	; 0x30
   120f0:	cmp	r3, #9
   120f4:	bls	12b78 <abort@plt+0x1dc4>
   120f8:	mov	r5, #48	; 0x30
   120fc:	ldr	r3, [sp, #28]
   12100:	eor	r3, r3, #1
   12104:	orrs	r2, r2, r3
   12108:	mov	r3, r6
   1210c:	moveq	r6, r2
   12110:	beq	11c8c <abort@plt+0xed8>
   12114:	mov	r6, #0
   12118:	b	11cb4 <abort@plt+0xf00>
   1211c:	mov	r2, #0
   12120:	mov	r6, r2
   12124:	mov	r5, #98	; 0x62
   12128:	b	11cd4 <abort@plt+0xf20>
   1212c:	mov	r5, #97	; 0x61
   12130:	b	12034 <abort@plt+0x1280>
   12134:	mov	r3, r7
   12138:	mov	r6, r7
   1213c:	mov	r2, #0
   12140:	mov	r7, r3
   12144:	mov	r5, #32
   12148:	b	11c6c <abort@plt+0xeb8>
   1214c:	cmp	r9, #0
   12150:	mov	r3, r7
   12154:	bne	1271c <abort@plt+0x1968>
   12158:	mov	r6, r7
   1215c:	mov	r2, r9
   12160:	mov	r7, r3
   12164:	b	11c6c <abort@plt+0xeb8>
   12168:	mov	r6, r7
   1216c:	b	11c88 <abort@plt+0xed4>
   12170:	mov	r7, #0
   12174:	ldr	r3, [sp, #64]	; 0x40
   12178:	cmp	r3, #1
   1217c:	bne	127d8 <abort@plt+0x1a24>
   12180:	bl	10cf4 <__ctype_b_loc@plt>
   12184:	ldr	r2, [sp, #64]	; 0x40
   12188:	sxth	r3, r5
   1218c:	mov	ip, r2
   12190:	lsl	r3, r3, #1
   12194:	ldr	r2, [r0]
   12198:	ldrh	r3, [r2, r3]
   1219c:	and	r3, r3, #16384	; 0x4000
   121a0:	cmp	r3, #0
   121a4:	ldr	r3, [sp, #28]
   121a8:	movne	r6, #1
   121ac:	moveq	r6, #0
   121b0:	movne	r2, #0
   121b4:	andeq	r2, r3, #1
   121b8:	cmp	r2, #0
   121bc:	bne	12ae8 <abort@plt+0x1d34>
   121c0:	sub	r2, fp, #2
   121c4:	clz	r2, r2
   121c8:	lsr	r2, r2, #5
   121cc:	b	11c6c <abort@plt+0xeb8>
   121d0:	cmp	r4, #0
   121d4:	bne	12e94 <abort@plt+0x20e0>
   121d8:	str	r4, [sp, #28]
   121dc:	cmp	sl, #0
   121e0:	bne	12ed8 <abort@plt+0x2124>
   121e4:	ldr	r3, [pc, #772]	; 124f0 <abort@plt+0x173c>
   121e8:	mov	r4, #1
   121ec:	str	r4, [sp, #40]	; 0x28
   121f0:	str	r3, [sp, #60]	; 0x3c
   121f4:	str	r4, [sp, #52]	; 0x34
   121f8:	str	sl, [sp, #72]	; 0x48
   121fc:	str	sl, [sp, #68]	; 0x44
   12200:	str	sl, [sp, #44]	; 0x2c
   12204:	str	sl, [sp, #32]
   12208:	mov	r8, #2
   1220c:	b	117d4 <abort@plt+0xa20>
   12210:	ldr	r3, [sp, #36]	; 0x24
   12214:	ldrb	r5, [r3, r9]
   12218:	cmp	r5, #126	; 0x7e
   1221c:	ldrls	pc, [pc, r5, lsl #2]
   12220:	b	12174 <abort@plt+0x13c0>
   12224:	andeq	r2, r1, r8, asr r4
   12228:	andeq	r2, r1, r4, ror r1
   1222c:	andeq	r2, r1, r4, ror r1
   12230:	andeq	r2, r1, r4, ror r1
   12234:	andeq	r2, r1, r4, ror r1
   12238:	andeq	r2, r1, r4, ror r1
   1223c:	andeq	r2, r1, r4, ror r1
   12240:	andeq	r2, r1, r4, asr #8
   12244:	andeq	r2, r1, r0, lsr r4
   12248:	andeq	r2, r1, r8, lsr #8
   1224c:	andeq	r2, r1, r0, lsr #8
   12250:	ldrdeq	r2, [r1], -r0
   12254:			; <UNDEFINED> instruction: 0x000124bc
   12258:	andeq	r1, r1, r4, asr pc
   1225c:	andeq	r2, r1, r4, ror r1
   12260:	andeq	r2, r1, r4, ror r1
   12264:	andeq	r2, r1, r4, ror r1
   12268:	andeq	r2, r1, r4, ror r1
   1226c:	andeq	r2, r1, r4, ror r1
   12270:	andeq	r2, r1, r4, ror r1
   12274:	andeq	r2, r1, r4, ror r1
   12278:	andeq	r2, r1, r4, ror r1
   1227c:	andeq	r2, r1, r4, ror r1
   12280:	andeq	r2, r1, r4, ror r1
   12284:	andeq	r2, r1, r4, ror r1
   12288:	andeq	r2, r1, r4, ror r1
   1228c:	andeq	r2, r1, r4, ror r1
   12290:	andeq	r2, r1, r4, ror r1
   12294:	andeq	r2, r1, r4, ror r1
   12298:	andeq	r2, r1, r4, ror r1
   1229c:	andeq	r2, r1, r4, ror r1
   122a0:	andeq	r2, r1, r4, ror r1
   122a4:	andeq	r2, r1, ip, lsr #9
   122a8:	muleq	r1, r8, r4
   122ac:	muleq	r1, r8, r4
   122b0:	andeq	r2, r1, r8, lsl #9
   122b4:	muleq	r1, r8, r4
   122b8:	andeq	r2, r1, r0, asr #3
   122bc:	muleq	r1, r8, r4
   122c0:	andeq	r1, r1, r8, lsl #29
   122c4:	muleq	r1, r8, r4
   122c8:	muleq	r1, r8, r4
   122cc:	muleq	r1, r8, r4
   122d0:	andeq	r2, r1, r0, asr #3
   122d4:	andeq	r2, r1, r0, asr #3
   122d8:	andeq	r2, r1, r0, asr #3
   122dc:	andeq	r2, r1, r0, asr #3
   122e0:	andeq	r2, r1, r0, asr #3
   122e4:	andeq	r2, r1, r0, asr #3
   122e8:	andeq	r2, r1, r0, asr #3
   122ec:	andeq	r2, r1, r0, asr #3
   122f0:	andeq	r2, r1, r0, asr #3
   122f4:	andeq	r2, r1, r0, asr #3
   122f8:	andeq	r2, r1, r0, asr #3
   122fc:	andeq	r2, r1, r0, asr #3
   12300:	andeq	r2, r1, r0, asr #3
   12304:	andeq	r2, r1, r0, asr #3
   12308:	andeq	r2, r1, r0, asr #3
   1230c:	andeq	r2, r1, r0, asr #3
   12310:	muleq	r1, r8, r4
   12314:	muleq	r1, r8, r4
   12318:	muleq	r1, r8, r4
   1231c:	muleq	r1, r8, r4
   12320:	andeq	r1, r1, ip, asr lr
   12324:	andeq	r2, r1, r4, ror r1
   12328:	andeq	r2, r1, r0, asr #3
   1232c:	andeq	r2, r1, r0, asr #3
   12330:	andeq	r2, r1, r0, asr #3
   12334:	andeq	r2, r1, r0, asr #3
   12338:	andeq	r2, r1, r0, asr #3
   1233c:	andeq	r2, r1, r0, asr #3
   12340:	andeq	r2, r1, r0, asr #3
   12344:	andeq	r2, r1, r0, asr #3
   12348:	andeq	r2, r1, r0, asr #3
   1234c:	andeq	r2, r1, r0, asr #3
   12350:	andeq	r2, r1, r0, asr #3
   12354:	andeq	r2, r1, r0, asr #3
   12358:	andeq	r2, r1, r0, asr #3
   1235c:	andeq	r2, r1, r0, asr #3
   12360:	andeq	r2, r1, r0, asr #3
   12364:	andeq	r2, r1, r0, asr #3
   12368:	andeq	r2, r1, r0, asr #3
   1236c:	andeq	r2, r1, r0, asr #3
   12370:	andeq	r2, r1, r0, asr #3
   12374:	andeq	r2, r1, r0, asr #3
   12378:	andeq	r2, r1, r0, asr #3
   1237c:	andeq	r2, r1, r0, asr #3
   12380:	andeq	r2, r1, r0, asr #3
   12384:	andeq	r2, r1, r0, asr #3
   12388:	andeq	r2, r1, r0, asr #3
   1238c:	andeq	r2, r1, r0, asr #3
   12390:	muleq	r1, r8, r4
   12394:	andeq	r1, r1, r4, lsl lr
   12398:	andeq	r2, r1, r0, asr #3
   1239c:	muleq	r1, r8, r4
   123a0:	andeq	r2, r1, r0, asr #3
   123a4:	muleq	r1, r8, r4
   123a8:	andeq	r2, r1, r0, asr #3
   123ac:	andeq	r2, r1, r0, asr #3
   123b0:	andeq	r2, r1, r0, asr #3
   123b4:	andeq	r2, r1, r0, asr #3
   123b8:	andeq	r2, r1, r0, asr #3
   123bc:	andeq	r2, r1, r0, asr #3
   123c0:	andeq	r2, r1, r0, asr #3
   123c4:	andeq	r2, r1, r0, asr #3
   123c8:	andeq	r2, r1, r0, asr #3
   123cc:	andeq	r2, r1, r0, asr #3
   123d0:	andeq	r2, r1, r0, asr #3
   123d4:	andeq	r2, r1, r0, asr #3
   123d8:	andeq	r2, r1, r0, asr #3
   123dc:	andeq	r2, r1, r0, asr #3
   123e0:	andeq	r2, r1, r0, asr #3
   123e4:	andeq	r2, r1, r0, asr #3
   123e8:	andeq	r2, r1, r0, asr #3
   123ec:	andeq	r2, r1, r0, asr #3
   123f0:	andeq	r2, r1, r0, asr #3
   123f4:	andeq	r2, r1, r0, asr #3
   123f8:	andeq	r2, r1, r0, asr #3
   123fc:	andeq	r2, r1, r0, asr #3
   12400:	andeq	r2, r1, r0, asr #3
   12404:	andeq	r2, r1, r0, asr #3
   12408:	andeq	r2, r1, r0, asr #3
   1240c:	andeq	r2, r1, r0, asr #3
   12410:	andeq	r1, r1, ip, lsr #24
   12414:	muleq	r1, r8, r4
   12418:	andeq	r1, r1, ip, lsr #24
   1241c:	andeq	r2, r1, r8, lsl #9
   12420:	mov	r3, #110	; 0x6e
   12424:	b	11f58 <abort@plt+0x11a4>
   12428:	mov	r3, #116	; 0x74
   1242c:	b	11f58 <abort@plt+0x11a4>
   12430:	sub	r2, fp, #2
   12434:	mov	r3, #98	; 0x62
   12438:	clz	r2, r2
   1243c:	lsr	r2, r2, #5
   12440:	b	11e44 <abort@plt+0x1090>
   12444:	sub	r2, fp, #2
   12448:	mov	r3, #97	; 0x61
   1244c:	clz	r2, r2
   12450:	lsr	r2, r2, #5
   12454:	b	11e44 <abort@plt+0x1090>
   12458:	ldr	r3, [sp, #28]
   1245c:	cmp	r3, #0
   12460:	bne	12050 <abort@plt+0x129c>
   12464:	ldr	r3, [sp, #164]	; 0xa4
   12468:	tst	r3, #1
   1246c:	bne	12ae0 <abort@plt+0x1d2c>
   12470:	ldr	r6, [sp, #28]
   12474:	sub	r2, fp, #2
   12478:	mov	r7, r6
   1247c:	clz	r2, r2
   12480:	lsr	r2, r2, #5
   12484:	b	11c6c <abort@plt+0xeb8>
   12488:	sub	r2, fp, #2
   1248c:	clz	r2, r2
   12490:	lsr	r2, r2, #5
   12494:	b	11c58 <abort@plt+0xea4>
   12498:	sub	r2, fp, #2
   1249c:	mov	r6, #0
   124a0:	clz	r2, r2
   124a4:	lsr	r2, r2, #5
   124a8:	b	11c60 <abort@plt+0xeac>
   124ac:	sub	r2, fp, #2
   124b0:	clz	r2, r2
   124b4:	lsr	r2, r2, #5
   124b8:	b	11c60 <abort@plt+0xeac>
   124bc:	sub	r2, fp, #2
   124c0:	mov	r3, #102	; 0x66
   124c4:	clz	r2, r2
   124c8:	lsr	r2, r2, #5
   124cc:	b	11e44 <abort@plt+0x1090>
   124d0:	sub	r2, fp, #2
   124d4:	mov	r3, #118	; 0x76
   124d8:	clz	r2, r2
   124dc:	lsr	r2, r2, #5
   124e0:	b	11e44 <abort@plt+0x1090>
   124e4:	andeq	r4, r2, r8, lsl #30
   124e8:	muleq	r1, ip, r8
   124ec:	andeq	r4, r1, r4, lsl #17
   124f0:	muleq	r1, r8, r8
   124f4:	ldr	r3, [sp, #48]	; 0x30
   124f8:	ldrb	r5, [r3]
   124fc:	cmp	r5, #126	; 0x7e
   12500:	ldrls	pc, [pc, r5, lsl #2]
   12504:	b	12170 <abort@plt+0x13bc>
   12508:	andeq	r2, r1, r0, asr r0
   1250c:	andeq	r2, r1, r0, ror r1
   12510:	andeq	r2, r1, r0, ror r1
   12514:	andeq	r2, r1, r0, ror r1
   12518:	andeq	r2, r1, r0, ror r1
   1251c:	andeq	r2, r1, r0, ror r1
   12520:	andeq	r2, r1, r0, ror r1
   12524:	andeq	r2, r1, r8, asr #14
   12528:	andeq	r2, r1, r0, asr #14
   1252c:	andeq	r2, r1, ip, lsl r0
   12530:	andeq	r1, r1, r4, ror #31
   12534:	andeq	r2, r1, ip, lsr r0
   12538:	andeq	r2, r1, r4, lsr #32
   1253c:	andeq	r2, r1, r4, lsr r7
   12540:	andeq	r2, r1, r0, ror r1
   12544:	andeq	r2, r1, r0, ror r1
   12548:	andeq	r2, r1, r0, ror r1
   1254c:	andeq	r2, r1, r0, ror r1
   12550:	andeq	r2, r1, r0, ror r1
   12554:	andeq	r2, r1, r0, ror r1
   12558:	andeq	r2, r1, r0, ror r1
   1255c:	andeq	r2, r1, r0, ror r1
   12560:	andeq	r2, r1, r0, ror r1
   12564:	andeq	r2, r1, r0, ror r1
   12568:	andeq	r2, r1, r0, ror r1
   1256c:	andeq	r2, r1, r0, ror r1
   12570:	andeq	r2, r1, r0, ror r1
   12574:	andeq	r2, r1, r0, ror r1
   12578:	andeq	r2, r1, r0, ror r1
   1257c:	andeq	r2, r1, r0, ror r1
   12580:	andeq	r2, r1, r0, ror r1
   12584:	andeq	r2, r1, r0, ror r1
   12588:	andeq	r2, r1, ip, lsr #14
   1258c:	andeq	r2, r1, r4, asr #32
   12590:	andeq	r2, r1, r4, asr #32
   12594:	andeq	r2, r1, r0, lsl r7
   12598:	andeq	r2, r1, r4, asr #32
   1259c:	andeq	r2, r1, r4, lsl #14
   125a0:	andeq	r2, r1, r4, asr #32
   125a4:	andeq	r1, r1, r4, lsl #29
   125a8:	andeq	r2, r1, r4, asr #32
   125ac:	andeq	r2, r1, r4, asr #32
   125b0:	andeq	r2, r1, r4, asr #32
   125b4:	andeq	r2, r1, r4, lsl #14
   125b8:	andeq	r2, r1, r4, lsl #14
   125bc:	andeq	r2, r1, r4, lsl #14
   125c0:	andeq	r2, r1, r4, lsl #14
   125c4:	andeq	r2, r1, r4, lsl #14
   125c8:	andeq	r2, r1, r4, lsl #14
   125cc:	andeq	r2, r1, r4, lsl #14
   125d0:	andeq	r2, r1, r4, lsl #14
   125d4:	andeq	r2, r1, r4, lsl #14
   125d8:	andeq	r2, r1, r4, lsl #14
   125dc:	andeq	r2, r1, r4, lsl #14
   125e0:	andeq	r2, r1, r4, lsl #14
   125e4:	andeq	r2, r1, r4, lsl #14
   125e8:	andeq	r2, r1, r4, lsl #14
   125ec:	andeq	r2, r1, r4, lsl #14
   125f0:	andeq	r2, r1, r4, lsl #14
   125f4:	andeq	r2, r1, r4, asr #32
   125f8:	andeq	r2, r1, r4, asr #32
   125fc:	andeq	r2, r1, r4, asr #32
   12600:	andeq	r2, r1, r4, asr #32
   12604:	andeq	r1, r1, r8, asr lr
   12608:	andeq	r2, r1, r0, ror r1
   1260c:	andeq	r2, r1, r4, lsl #14
   12610:	andeq	r2, r1, r4, lsl #14
   12614:	andeq	r2, r1, r4, lsl #14
   12618:	andeq	r2, r1, r4, lsl #14
   1261c:	andeq	r2, r1, r4, lsl #14
   12620:	andeq	r2, r1, r4, lsl #14
   12624:	andeq	r2, r1, r4, lsl #14
   12628:	andeq	r2, r1, r4, lsl #14
   1262c:	andeq	r2, r1, r4, lsl #14
   12630:	andeq	r2, r1, r4, lsl #14
   12634:	andeq	r2, r1, r4, lsl #14
   12638:	andeq	r2, r1, r4, lsl #14
   1263c:	andeq	r2, r1, r4, lsl #14
   12640:	andeq	r2, r1, r4, lsl #14
   12644:	andeq	r2, r1, r4, lsl #14
   12648:	andeq	r2, r1, r4, lsl #14
   1264c:	andeq	r2, r1, r4, lsl #14
   12650:	andeq	r2, r1, r4, lsl #14
   12654:	andeq	r2, r1, r4, lsl #14
   12658:	andeq	r2, r1, r4, lsl #14
   1265c:	andeq	r2, r1, r4, lsl #14
   12660:	andeq	r2, r1, r4, lsl #14
   12664:	andeq	r2, r1, r4, lsl #14
   12668:	andeq	r2, r1, r4, lsl #14
   1266c:	andeq	r2, r1, r4, lsl #14
   12670:	andeq	r2, r1, r4, lsl #14
   12674:	andeq	r2, r1, r4, asr #32
   12678:	andeq	r1, r1, r0, lsl lr
   1267c:	andeq	r2, r1, r4, lsl #14
   12680:	andeq	r2, r1, r4, asr #32
   12684:	andeq	r2, r1, r4, lsl #14
   12688:	andeq	r2, r1, r4, asr #32
   1268c:	andeq	r2, r1, r4, lsl #14
   12690:	andeq	r2, r1, r4, lsl #14
   12694:	andeq	r2, r1, r4, lsl #14
   12698:	andeq	r2, r1, r4, lsl #14
   1269c:	andeq	r2, r1, r4, lsl #14
   126a0:	andeq	r2, r1, r4, lsl #14
   126a4:	andeq	r2, r1, r4, lsl #14
   126a8:	andeq	r2, r1, r4, lsl #14
   126ac:	andeq	r2, r1, r4, lsl #14
   126b0:	andeq	r2, r1, r4, lsl #14
   126b4:	andeq	r2, r1, r4, lsl #14
   126b8:	andeq	r2, r1, r4, lsl #14
   126bc:	andeq	r2, r1, r4, lsl #14
   126c0:	andeq	r2, r1, r4, lsl #14
   126c4:	andeq	r2, r1, r4, lsl #14
   126c8:	andeq	r2, r1, r4, lsl #14
   126cc:	andeq	r2, r1, r4, lsl #14
   126d0:	andeq	r2, r1, r4, lsl #14
   126d4:	andeq	r2, r1, r4, lsl #14
   126d8:	andeq	r2, r1, r4, lsl #14
   126dc:	andeq	r2, r1, r4, lsl #14
   126e0:	andeq	r2, r1, r4, lsl #14
   126e4:	andeq	r2, r1, r4, lsl #14
   126e8:	andeq	r2, r1, r4, lsl #14
   126ec:	andeq	r2, r1, r4, lsl #14
   126f0:	andeq	r2, r1, r4, lsl #14
   126f4:	andeq	r1, r1, r8, lsr #24
   126f8:	andeq	r2, r1, r4, asr #32
   126fc:	andeq	r1, r1, r8, lsr #24
   12700:	andeq	r2, r1, r0, lsl r7
   12704:	mov	r6, r7
   12708:	mov	r7, #0
   1270c:	b	11c88 <abort@plt+0xed4>
   12710:	cmp	r9, #0
   12714:	mov	r3, #0
   12718:	beq	12158 <abort@plt+0x13a4>
   1271c:	mov	r6, #0
   12720:	mov	r7, r3
   12724:	mov	r3, r6
   12728:	b	11c8c <abort@plt+0xed8>
   1272c:	mov	r3, #0
   12730:	b	12138 <abort@plt+0x1384>
   12734:	mov	r7, #0
   12738:	mov	r3, #114	; 0x72
   1273c:	b	11f58 <abort@plt+0x11a4>
   12740:	mov	r5, #98	; 0x62
   12744:	b	11fe8 <abort@plt+0x1234>
   12748:	mov	r5, #97	; 0x61
   1274c:	b	12028 <abort@plt+0x1274>
   12750:	ldr	r3, [sp, #32]
   12754:	cmp	r3, #0
   12758:	bne	12ba0 <abort@plt+0x1dec>
   1275c:	add	r9, r9, #1
   12760:	ldr	r3, [sp, #44]	; 0x2c
   12764:	mov	r6, #0
   12768:	mov	r5, #92	; 0x5c
   1276c:	b	11f20 <abort@plt+0x116c>
   12770:	ldr	r3, [sp, #36]	; 0x24
   12774:	ldrb	r3, [r3, #1]
   12778:	adds	r3, r3, #0
   1277c:	movne	r3, #1
   12780:	b	11c44 <abort@plt+0xe90>
   12784:	ldr	r3, [sp, #164]	; 0xa4
   12788:	ands	r3, r3, #4
   1278c:	beq	127b0 <abort@plt+0x19fc>
   12790:	ldr	r2, [sp, #24]
   12794:	add	r3, r9, #2
   12798:	cmp	r3, r2
   1279c:	bcs	127b0 <abort@plt+0x19fc>
   127a0:	ldr	r2, [sp, #48]	; 0x30
   127a4:	ldrb	r5, [r2, #1]
   127a8:	cmp	r5, #63	; 0x3f
   127ac:	beq	12c14 <abort@plt+0x1e60>
   127b0:	mov	r2, #0
   127b4:	mov	r6, r2
   127b8:	mov	r5, #63	; 0x3f
   127bc:	b	11c6c <abort@plt+0xeb8>
   127c0:	ldr	r3, [sp, #32]
   127c4:	cmp	r3, #0
   127c8:	bne	12ba0 <abort@plt+0x1dec>
   127cc:	mov	r6, r3
   127d0:	mov	r5, #63	; 0x3f
   127d4:	b	11cb4 <abort@plt+0xf00>
   127d8:	ldr	r3, [sp, #24]
   127dc:	cmn	r3, #1
   127e0:	mov	r3, #0
   127e4:	str	r3, [sp, #108]	; 0x6c
   127e8:	str	r3, [sp, #112]	; 0x70
   127ec:	bne	127fc <abort@plt+0x1a48>
   127f0:	ldr	r0, [sp, #36]	; 0x24
   127f4:	bl	10d0c <strlen@plt>
   127f8:	str	r0, [sp, #24]
   127fc:	mov	r3, #0
   12800:	str	sl, [sp, #88]	; 0x58
   12804:	ldr	sl, [sp, #36]	; 0x24
   12808:	str	r5, [sp, #92]	; 0x5c
   1280c:	mov	r5, r3
   12810:	str	r7, [sp, #96]	; 0x60
   12814:	str	r4, [sp, #100]	; 0x64
   12818:	str	r8, [sp, #84]	; 0x54
   1281c:	ldr	r3, [sp, #24]
   12820:	add	r4, r9, r5
   12824:	add	r7, sl, r4
   12828:	sub	r2, r3, r4
   1282c:	mov	r1, r7
   12830:	add	r3, sp, #108	; 0x6c
   12834:	add	r0, sp, #104	; 0x68
   12838:	bl	13f14 <abort@plt+0x3160>
   1283c:	subs	r8, r0, #0
   12840:	beq	12890 <abort@plt+0x1adc>
   12844:	cmn	r8, #1
   12848:	beq	12bf0 <abort@plt+0x1e3c>
   1284c:	cmn	r8, #2
   12850:	beq	12d10 <abort@plt+0x1f5c>
   12854:	ldr	r3, [sp, #32]
   12858:	cmp	fp, #2
   1285c:	movne	r3, #0
   12860:	andeq	r3, r3, #1
   12864:	cmp	r3, #0
   12868:	bne	129f0 <abort@plt+0x1c3c>
   1286c:	ldr	r0, [sp, #104]	; 0x68
   12870:	bl	10c58 <iswprint@plt>
   12874:	add	r5, r5, r8
   12878:	cmp	r0, #0
   1287c:	add	r0, sp, #108	; 0x6c
   12880:	moveq	r6, #0
   12884:	bl	10c10 <mbsinit@plt>
   12888:	cmp	r0, #0
   1288c:	beq	1281c <abort@plt+0x1a68>
   12890:	ldr	r3, [sp, #28]
   12894:	mov	ip, r5
   12898:	eor	r2, r6, #1
   1289c:	ldr	r5, [sp, #92]	; 0x5c
   128a0:	ldr	r7, [sp, #96]	; 0x60
   128a4:	ldr	r4, [sp, #100]	; 0x64
   128a8:	ldr	r8, [sp, #84]	; 0x54
   128ac:	ldr	sl, [sp, #88]	; 0x58
   128b0:	and	r2, r2, r3
   128b4:	cmp	ip, #1
   128b8:	bls	121b8 <abort@plt+0x1404>
   128bc:	add	r1, ip, r9
   128c0:	ldr	lr, [sp, #48]	; 0x30
   128c4:	mov	r0, #0
   128c8:	str	r6, [sp, #48]	; 0x30
   128cc:	mov	ip, #39	; 0x27
   128d0:	ldr	r6, [sp, #44]	; 0x2c
   128d4:	b	1298c <abort@plt+0x1bd8>
   128d8:	ldr	r0, [sp, #32]
   128dc:	sub	r3, fp, #2
   128e0:	cmp	r0, #0
   128e4:	clz	r3, r3
   128e8:	lsr	r3, r3, #5
   128ec:	bne	12af4 <abort@plt+0x1d40>
   128f0:	eor	r0, r6, #1
   128f4:	ands	r3, r3, r0
   128f8:	beq	12928 <abort@plt+0x1b74>
   128fc:	add	r0, r4, #1
   12900:	cmp	sl, r4
   12904:	strbhi	ip, [r8, r4]
   12908:	cmp	sl, r0
   1290c:	movhi	r6, #36	; 0x24
   12910:	strbhi	r6, [r8, r0]
   12914:	add	r0, r4, #2
   12918:	mov	r6, r3
   1291c:	add	r4, r4, #3
   12920:	cmp	sl, r0
   12924:	strbhi	ip, [r8, r0]
   12928:	cmp	sl, r4
   1292c:	movhi	r3, #92	; 0x5c
   12930:	strbhi	r3, [r8, r4]
   12934:	add	r3, r4, #1
   12938:	cmp	sl, r3
   1293c:	lsrhi	r0, r5, #6
   12940:	addhi	r0, r0, #48	; 0x30
   12944:	strbhi	r0, [r8, r3]
   12948:	add	r0, r4, #2
   1294c:	cmp	sl, r0
   12950:	lsrhi	r3, r5, #3
   12954:	andhi	r3, r3, #7
   12958:	addhi	r3, r3, #48	; 0x30
   1295c:	add	r9, r9, #1
   12960:	strbhi	r3, [r8, r0]
   12964:	and	r5, r5, #7
   12968:	cmp	r9, r1
   1296c:	add	r5, r5, #48	; 0x30
   12970:	add	r4, r4, #3
   12974:	bcs	12b14 <abort@plt+0x1d60>
   12978:	mov	r0, r2
   1297c:	cmp	sl, r4
   12980:	strbhi	r5, [r8, r4]
   12984:	ldrb	r5, [lr, #1]!
   12988:	add	r4, r4, #1
   1298c:	cmp	r2, #0
   12990:	bne	128d8 <abort@plt+0x1b24>
   12994:	eor	r3, r0, #1
   12998:	and	r3, r3, r6
   1299c:	cmp	r7, #0
   129a0:	uxtb	r3, r3
   129a4:	beq	129b8 <abort@plt+0x1c04>
   129a8:	cmp	sl, r4
   129ac:	movhi	r7, #92	; 0x5c
   129b0:	strbhi	r7, [r8, r4]
   129b4:	add	r4, r4, #1
   129b8:	add	r9, r9, #1
   129bc:	cmp	r9, r1
   129c0:	bcs	12b08 <abort@plt+0x1d54>
   129c4:	cmp	r3, #0
   129c8:	beq	12b34 <abort@plt+0x1d80>
   129cc:	cmp	sl, r4
   129d0:	add	r3, r4, #1
   129d4:	strbhi	ip, [r8, r4]
   129d8:	mov	r7, #0
   129dc:	cmp	sl, r3
   129e0:	strbhi	ip, [r8, r3]
   129e4:	add	r4, r4, #2
   129e8:	mov	r6, r7
   129ec:	b	1297c <abort@plt+0x1bc8>
   129f0:	cmp	r8, #1
   129f4:	beq	1286c <abort@plt+0x1ab8>
   129f8:	add	r1, r4, #1
   129fc:	add	r3, sl, r8
   12a00:	add	r1, sl, r1
   12a04:	add	r4, r3, r4
   12a08:	ldrb	r3, [r1], #1
   12a0c:	sub	r3, r3, #91	; 0x5b
   12a10:	cmp	r3, #33	; 0x21
   12a14:	ldrls	pc, [pc, r3, lsl #2]
   12a18:	b	12aa4 <abort@plt+0x1cf0>
   12a1c:			; <UNDEFINED> instruction: 0x00012ab0
   12a20:			; <UNDEFINED> instruction: 0x00012ab0
   12a24:	andeq	r2, r1, r4, lsr #21
   12a28:			; <UNDEFINED> instruction: 0x00012ab0
   12a2c:	andeq	r2, r1, r4, lsr #21
   12a30:			; <UNDEFINED> instruction: 0x00012ab0
   12a34:	andeq	r2, r1, r4, lsr #21
   12a38:	andeq	r2, r1, r4, lsr #21
   12a3c:	andeq	r2, r1, r4, lsr #21
   12a40:	andeq	r2, r1, r4, lsr #21
   12a44:	andeq	r2, r1, r4, lsr #21
   12a48:	andeq	r2, r1, r4, lsr #21
   12a4c:	andeq	r2, r1, r4, lsr #21
   12a50:	andeq	r2, r1, r4, lsr #21
   12a54:	andeq	r2, r1, r4, lsr #21
   12a58:	andeq	r2, r1, r4, lsr #21
   12a5c:	andeq	r2, r1, r4, lsr #21
   12a60:	andeq	r2, r1, r4, lsr #21
   12a64:	andeq	r2, r1, r4, lsr #21
   12a68:	andeq	r2, r1, r4, lsr #21
   12a6c:	andeq	r2, r1, r4, lsr #21
   12a70:	andeq	r2, r1, r4, lsr #21
   12a74:	andeq	r2, r1, r4, lsr #21
   12a78:	andeq	r2, r1, r4, lsr #21
   12a7c:	andeq	r2, r1, r4, lsr #21
   12a80:	andeq	r2, r1, r4, lsr #21
   12a84:	andeq	r2, r1, r4, lsr #21
   12a88:	andeq	r2, r1, r4, lsr #21
   12a8c:	andeq	r2, r1, r4, lsr #21
   12a90:	andeq	r2, r1, r4, lsr #21
   12a94:	andeq	r2, r1, r4, lsr #21
   12a98:	andeq	r2, r1, r4, lsr #21
   12a9c:	andeq	r2, r1, r4, lsr #21
   12aa0:			; <UNDEFINED> instruction: 0x00012ab0
   12aa4:	cmp	r4, r1
   12aa8:	bne	12a08 <abort@plt+0x1c54>
   12aac:	b	1286c <abort@plt+0x1ab8>
   12ab0:	ldr	fp, [sp, #84]	; 0x54
   12ab4:	ldr	sl, [sp, #88]	; 0x58
   12ab8:	mov	r8, #2
   12abc:	b	11f78 <abort@plt+0x11c4>
   12ac0:	cmp	sl, r4
   12ac4:	movls	r1, r4
   12ac8:	bls	120c8 <abort@plt+0x1314>
   12acc:	ldr	r3, [sp, #44]	; 0x2c
   12ad0:	b	120b8 <abort@plt+0x1304>
   12ad4:	str	sl, [sp, #72]	; 0x48
   12ad8:	ldr	sl, [sp, #32]
   12adc:	b	11ef0 <abort@plt+0x113c>
   12ae0:	add	r9, r9, #1
   12ae4:	b	117e4 <abort@plt+0xa30>
   12ae8:	ldr	r2, [sp, #28]
   12aec:	mov	r6, #0
   12af0:	b	128bc <abort@plt+0x1b08>
   12af4:	str	fp, [sp, #160]	; 0xa0
   12af8:	str	r3, [sp, #28]
   12afc:	mov	fp, r8
   12b00:	ldr	r8, [sp, #160]	; 0xa0
   12b04:	b	11f78 <abort@plt+0x11c4>
   12b08:	str	r6, [sp, #44]	; 0x2c
   12b0c:	ldr	r6, [sp, #48]	; 0x30
   12b10:	b	11f20 <abort@plt+0x116c>
   12b14:	str	r6, [sp, #44]	; 0x2c
   12b18:	ldr	r6, [sp, #48]	; 0x30
   12b1c:	b	11d2c <abort@plt+0xf78>
   12b20:	add	r4, r4, #4
   12b24:	str	r3, [sp, #44]	; 0x2c
   12b28:	mov	r6, #0
   12b2c:	mov	r5, #48	; 0x30
   12b30:	b	11cb4 <abort@plt+0xf00>
   12b34:	mov	r7, r3
   12b38:	b	1297c <abort@plt+0x1bc8>
   12b3c:	ldr	r3, [pc, #-1624]	; 124ec <abort@plt+0x1738>
   12b40:	mov	r4, #1
   12b44:	str	r4, [sp, #40]	; 0x28
   12b48:	str	r4, [sp, #28]
   12b4c:	str	r4, [sp, #52]	; 0x34
   12b50:	str	sl, [sp, #72]	; 0x48
   12b54:	str	sl, [sp, #68]	; 0x44
   12b58:	str	sl, [sp, #44]	; 0x2c
   12b5c:	str	sl, [sp, #32]
   12b60:	str	r3, [sp, #60]	; 0x3c
   12b64:	b	117d4 <abort@plt+0xa20>
   12b68:	mov	r3, r6
   12b6c:	mov	r5, #48	; 0x30
   12b70:	mov	r6, #0
   12b74:	b	11cb4 <abort@plt+0xf00>
   12b78:	cmp	sl, r4
   12b7c:	movhi	r3, #48	; 0x30
   12b80:	strbhi	r3, [r8, r4]
   12b84:	add	r3, r1, #2
   12b88:	cmp	sl, r3
   12b8c:	movhi	r0, #48	; 0x30
   12b90:	strbhi	r0, [r8, r3]
   12b94:	add	r4, r1, #3
   12b98:	mov	r5, #48	; 0x30
   12b9c:	b	120fc <abort@plt+0x1348>
   12ba0:	str	fp, [sp, #160]	; 0xa0
   12ba4:	mov	fp, r8
   12ba8:	ldr	r8, [sp, #160]	; 0xa0
   12bac:	b	11f78 <abort@plt+0x11c4>
   12bb0:	ldr	r2, [sp, #80]	; 0x50
   12bb4:	ldrb	r3, [r2]
   12bb8:	cmp	r3, #0
   12bbc:	beq	117a4 <abort@plt+0x9f0>
   12bc0:	cmp	sl, r4
   12bc4:	strbhi	r3, [fp, r4]
   12bc8:	ldrb	r3, [r2, #1]!
   12bcc:	add	r4, r4, #1
   12bd0:	cmp	r3, #0
   12bd4:	bne	12bc0 <abort@plt+0x1e0c>
   12bd8:	b	117a4 <abort@plt+0x9f0>
   12bdc:	str	fp, [sp, #160]	; 0xa0
   12be0:	mov	r3, #0
   12be4:	mov	fp, r8
   12be8:	ldr	r8, [sp, #160]	; 0xa0
   12bec:	b	1200c <abort@plt+0x1258>
   12bf0:	mov	ip, r5
   12bf4:	ldr	r7, [sp, #96]	; 0x60
   12bf8:	ldr	r5, [sp, #92]	; 0x5c
   12bfc:	ldr	r4, [sp, #100]	; 0x64
   12c00:	ldr	r8, [sp, #84]	; 0x54
   12c04:	ldr	sl, [sp, #88]	; 0x58
   12c08:	ldr	r2, [sp, #28]
   12c0c:	mov	r6, #0
   12c10:	b	128b4 <abort@plt+0x1b00>
   12c14:	ldr	r2, [sp, #36]	; 0x24
   12c18:	ldrb	r1, [r2, r3]
   12c1c:	sub	r2, r1, #33	; 0x21
   12c20:	cmp	r2, #29
   12c24:	ldrls	pc, [pc, r2, lsl #2]
   12c28:	b	12d04 <abort@plt+0x1f50>
   12c2c:	andeq	r2, r1, r4, lsr #25
   12c30:	andeq	r2, r1, r4, lsl #26
   12c34:	andeq	r2, r1, r4, lsl #26
   12c38:	andeq	r2, r1, r4, lsl #26
   12c3c:	andeq	r2, r1, r4, lsl #26
   12c40:	andeq	r2, r1, r4, lsl #26
   12c44:	andeq	r2, r1, r4, lsr #25
   12c48:	andeq	r2, r1, r4, lsr #25
   12c4c:	andeq	r2, r1, r4, lsr #25
   12c50:	andeq	r2, r1, r4, lsl #26
   12c54:	andeq	r2, r1, r4, lsl #26
   12c58:	andeq	r2, r1, r4, lsl #26
   12c5c:	andeq	r2, r1, r4, lsr #25
   12c60:	andeq	r2, r1, r4, lsl #26
   12c64:	andeq	r2, r1, r4, lsr #25
   12c68:	andeq	r2, r1, r4, lsl #26
   12c6c:	andeq	r2, r1, r4, lsl #26
   12c70:	andeq	r2, r1, r4, lsl #26
   12c74:	andeq	r2, r1, r4, lsl #26
   12c78:	andeq	r2, r1, r4, lsl #26
   12c7c:	andeq	r2, r1, r4, lsl #26
   12c80:	andeq	r2, r1, r4, lsl #26
   12c84:	andeq	r2, r1, r4, lsl #26
   12c88:	andeq	r2, r1, r4, lsl #26
   12c8c:	andeq	r2, r1, r4, lsl #26
   12c90:	andeq	r2, r1, r4, lsl #26
   12c94:	andeq	r2, r1, r4, lsl #26
   12c98:	andeq	r2, r1, r4, lsr #25
   12c9c:	andeq	r2, r1, r4, lsr #25
   12ca0:	andeq	r2, r1, r4, lsr #25
   12ca4:	ldr	r2, [sp, #32]
   12ca8:	cmp	r2, #0
   12cac:	bne	12db0 <abort@plt+0x1ffc>
   12cb0:	cmp	sl, r4
   12cb4:	movhi	r2, #63	; 0x3f
   12cb8:	strbhi	r2, [r8, r4]
   12cbc:	add	r2, r4, #1
   12cc0:	cmp	sl, r2
   12cc4:	movhi	r0, #34	; 0x22
   12cc8:	strbhi	r0, [r8, r2]
   12ccc:	add	r2, r4, #2
   12cd0:	cmp	sl, r2
   12cd4:	movhi	r0, #34	; 0x22
   12cd8:	strbhi	r0, [r8, r2]
   12cdc:	add	r2, r4, #3
   12ce0:	cmp	sl, r2
   12ce4:	movhi	r0, #63	; 0x3f
   12ce8:	strbhi	r0, [r8, r2]
   12cec:	mov	r2, #0
   12cf0:	add	r4, r4, #4
   12cf4:	mov	r5, r1
   12cf8:	mov	r9, r3
   12cfc:	mov	r6, r2
   12d00:	b	120fc <abort@plt+0x1348>
   12d04:	mov	r2, #0
   12d08:	mov	r6, r2
   12d0c:	b	11c6c <abort@plt+0xeb8>
   12d10:	ldr	r0, [sp, #24]
   12d14:	mov	r1, r4
   12d18:	cmp	r1, r0
   12d1c:	mov	r2, r7
   12d20:	mov	r3, r5
   12d24:	mov	ip, r5
   12d28:	ldr	r7, [sp, #96]	; 0x60
   12d2c:	ldr	r5, [sp, #92]	; 0x5c
   12d30:	ldr	r4, [sp, #100]	; 0x64
   12d34:	ldr	r8, [sp, #84]	; 0x54
   12d38:	ldr	sl, [sp, #88]	; 0x58
   12d3c:	bcs	12d70 <abort@plt+0x1fbc>
   12d40:	ldrb	r6, [r2]
   12d44:	cmp	r6, #0
   12d48:	bne	12d5c <abort@plt+0x1fa8>
   12d4c:	b	12e8c <abort@plt+0x20d8>
   12d50:	ldrb	r6, [r2, #1]!
   12d54:	cmp	r6, #0
   12d58:	beq	12e14 <abort@plt+0x2060>
   12d5c:	add	r3, r3, #1
   12d60:	add	r1, r9, r3
   12d64:	cmp	r1, r0
   12d68:	bcc	12d50 <abort@plt+0x1f9c>
   12d6c:	mov	ip, r3
   12d70:	ldr	r2, [sp, #28]
   12d74:	mov	r6, #0
   12d78:	b	128b4 <abort@plt+0x1b00>
   12d7c:	mov	r3, #1
   12d80:	str	r3, [sp, #40]	; 0x28
   12d84:	str	r3, [sp, #32]
   12d88:	str	r3, [sp, #28]
   12d8c:	str	r3, [sp, #52]	; 0x34
   12d90:	ldr	r3, [pc, #-2220]	; 124ec <abort@plt+0x1738>
   12d94:	mov	r2, #0
   12d98:	str	r2, [sp, #68]	; 0x44
   12d9c:	str	r2, [sp, #44]	; 0x2c
   12da0:	str	r2, [sp, #72]	; 0x48
   12da4:	mov	r4, r2
   12da8:	str	r3, [sp, #60]	; 0x3c
   12dac:	b	117d4 <abort@plt+0xa20>
   12db0:	str	fp, [sp, #160]	; 0xa0
   12db4:	mov	fp, r8
   12db8:	ldr	r8, [sp, #160]	; 0xa0
   12dbc:	b	11f84 <abort@plt+0x11d0>
   12dc0:	mov	r2, r3
   12dc4:	ldr	r3, [sp, #60]	; 0x3c
   12dc8:	cmp	r3, #0
   12dcc:	moveq	r2, #0
   12dd0:	andne	r2, r2, #1
   12dd4:	cmp	r2, #0
   12dd8:	beq	12e04 <abort@plt+0x2050>
   12ddc:	mov	r2, r3
   12de0:	ldrb	r3, [r3]
   12de4:	cmp	r3, #0
   12de8:	beq	12e04 <abort@plt+0x2050>
   12dec:	cmp	sl, r4
   12df0:	strbhi	r3, [fp, r4]
   12df4:	ldrb	r3, [r2, #1]!
   12df8:	add	r4, r4, #1
   12dfc:	cmp	r3, #0
   12e00:	bne	12dec <abort@plt+0x2038>
   12e04:	cmp	sl, r4
   12e08:	movhi	r3, #0
   12e0c:	strbhi	r3, [fp, r4]
   12e10:	b	11fc4 <abort@plt+0x1210>
   12e14:	mov	ip, r3
   12e18:	ldr	r2, [sp, #28]
   12e1c:	b	128b4 <abort@plt+0x1b00>
   12e20:	str	fp, [sp, #160]	; 0xa0
   12e24:	mov	fp, r8
   12e28:	ldr	r8, [sp, #160]	; 0xa0
   12e2c:	sub	r3, r8, #2
   12e30:	clz	r3, r3
   12e34:	lsr	r3, r3, #5
   12e38:	str	r3, [sp, #28]
   12e3c:	b	11f78 <abort@plt+0x11c4>
   12e40:	ldr	r3, [sp, #76]	; 0x4c
   12e44:	mov	ip, #5
   12e48:	str	r3, [sp, #16]
   12e4c:	ldr	r3, [sp, #80]	; 0x50
   12e50:	ldr	r2, [sp, #36]	; 0x24
   12e54:	str	r3, [sp, #12]
   12e58:	ldr	r3, [sp, #56]	; 0x38
   12e5c:	ldr	r1, [sp, #72]	; 0x48
   12e60:	str	r3, [sp, #8]
   12e64:	ldr	r3, [sp, #164]	; 0xa4
   12e68:	mov	r0, fp
   12e6c:	str	r3, [sp, #4]
   12e70:	str	ip, [sp]
   12e74:	ldr	r3, [sp, #24]
   12e78:	bl	116dc <abort@plt+0x928>
   12e7c:	mov	r4, r0
   12e80:	b	11fc4 <abort@plt+0x1210>
   12e84:	mov	r8, #2
   12e88:	b	11f78 <abort@plt+0x11c4>
   12e8c:	ldr	r2, [sp, #28]
   12e90:	b	128b4 <abort@plt+0x1b00>
   12e94:	mov	r3, #0
   12e98:	str	r3, [sp, #68]	; 0x44
   12e9c:	str	r3, [sp, #44]	; 0x2c
   12ea0:	str	r3, [sp, #72]	; 0x48
   12ea4:	str	r3, [sp, #28]
   12ea8:	mov	r4, r3
   12eac:	ldr	r3, [pc, #-2500]	; 124f0 <abort@plt+0x173c>
   12eb0:	mov	r2, #1
   12eb4:	str	r2, [sp, #40]	; 0x28
   12eb8:	str	r2, [sp, #32]
   12ebc:	str	r2, [sp, #52]	; 0x34
   12ec0:	str	r3, [sp, #60]	; 0x3c
   12ec4:	b	117d4 <abort@plt+0xa20>
   12ec8:	bl	10c34 <__stack_chk_fail@plt>
   12ecc:	mov	r5, r3
   12ed0:	mov	r6, #0
   12ed4:	b	11cc8 <abort@plt+0xf14>
   12ed8:	mov	r3, #0
   12edc:	mov	r2, #1
   12ee0:	str	r3, [sp, #44]	; 0x2c
   12ee4:	str	r3, [sp, #72]	; 0x48
   12ee8:	str	r2, [sp, #40]	; 0x28
   12eec:	b	11de4 <abort@plt+0x1030>
   12ef0:	bl	10db4 <abort@plt>
   12ef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ef8:	sub	sp, sp, #44	; 0x2c
   12efc:	mov	r6, r0
   12f00:	mov	r4, r3
   12f04:	mov	sl, r1
   12f08:	mov	fp, r2
   12f0c:	bl	10d18 <__errno_location@plt>
   12f10:	ldr	r7, [pc, #364]	; 13084 <abort@plt+0x22d0>
   12f14:	cmp	r6, #0
   12f18:	ldr	r5, [r7]
   12f1c:	ldr	r3, [r0]
   12f20:	str	r3, [sp, #24]
   12f24:	blt	13080 <abort@plt+0x22cc>
   12f28:	ldr	r3, [r7, #4]
   12f2c:	mov	r8, r0
   12f30:	cmp	r3, r6
   12f34:	bgt	12f80 <abort@plt+0x21cc>
   12f38:	cmn	r6, #-268435454	; 0xf0000002
   12f3c:	bgt	1307c <abort@plt+0x22c8>
   12f40:	add	r9, r6, #1
   12f44:	add	r3, r7, #8
   12f48:	cmp	r5, r3
   12f4c:	lsl	r1, r9, #3
   12f50:	beq	1305c <abort@plt+0x22a8>
   12f54:	mov	r0, r5
   12f58:	bl	13ce8 <abort@plt+0x2f34>
   12f5c:	mov	r5, r0
   12f60:	str	r0, [r7]
   12f64:	ldr	r0, [r7, #4]
   12f68:	mov	r1, #0
   12f6c:	sub	r2, r9, r0
   12f70:	add	r0, r5, r0, lsl #3
   12f74:	lsl	r2, r2, #3
   12f78:	bl	10d30 <memset@plt>
   12f7c:	str	r9, [r7, #4]
   12f80:	add	r3, r5, r6, lsl #3
   12f84:	ldr	r1, [r4, #4]
   12f88:	ldr	r7, [r3, #4]
   12f8c:	ldr	r9, [r5, r6, lsl #3]
   12f90:	ldr	r2, [r4, #40]	; 0x28
   12f94:	ldr	ip, [r4, #44]	; 0x2c
   12f98:	str	r3, [sp, #28]
   12f9c:	ldr	r3, [r4]
   12fa0:	orr	r1, r1, #1
   12fa4:	add	lr, r4, #8
   12fa8:	str	r1, [sp, #36]	; 0x24
   12fac:	str	r1, [sp, #4]
   12fb0:	str	r2, [sp, #12]
   12fb4:	str	r3, [sp]
   12fb8:	mov	r0, r7
   12fbc:	mov	r1, r9
   12fc0:	str	ip, [sp, #16]
   12fc4:	str	lr, [sp, #8]
   12fc8:	mov	r3, fp
   12fcc:	mov	r2, sl
   12fd0:	str	lr, [sp, #32]
   12fd4:	bl	116dc <abort@plt+0x928>
   12fd8:	cmp	r9, r0
   12fdc:	bhi	13048 <abort@plt+0x2294>
   12fe0:	ldr	r3, [pc, #160]	; 13088 <abort@plt+0x22d4>
   12fe4:	add	r9, r0, #1
   12fe8:	cmp	r7, r3
   12fec:	str	r9, [r5, r6, lsl #3]
   12ff0:	beq	12ffc <abort@plt+0x2248>
   12ff4:	mov	r0, r7
   12ff8:	bl	10bec <free@plt>
   12ffc:	mov	r0, r9
   13000:	bl	13c8c <abort@plt+0x2ed8>
   13004:	ldr	lr, [sp, #28]
   13008:	ldr	ip, [r4, #44]	; 0x2c
   1300c:	ldr	r5, [r4, #40]	; 0x28
   13010:	mov	r3, fp
   13014:	mov	r2, sl
   13018:	mov	r1, r9
   1301c:	str	r0, [lr, #4]
   13020:	ldr	lr, [r4]
   13024:	ldr	r4, [sp, #32]
   13028:	str	ip, [sp, #16]
   1302c:	str	r4, [sp, #8]
   13030:	ldr	r4, [sp, #36]	; 0x24
   13034:	str	r5, [sp, #12]
   13038:	str	r4, [sp, #4]
   1303c:	str	lr, [sp]
   13040:	mov	r7, r0
   13044:	bl	116dc <abort@plt+0x928>
   13048:	ldr	r3, [sp, #24]
   1304c:	mov	r0, r7
   13050:	str	r3, [r8]
   13054:	add	sp, sp, #44	; 0x2c
   13058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1305c:	mov	r0, #0
   13060:	bl	13ce8 <abort@plt+0x2f34>
   13064:	ldr	r3, [pc, #32]	; 1308c <abort@plt+0x22d8>
   13068:	mov	r5, r0
   1306c:	ldm	r3, {r0, r1}
   13070:	str	r5, [r7]
   13074:	stm	r5, {r0, r1}
   13078:	b	12f64 <abort@plt+0x21b0>
   1307c:	bl	13ed4 <abort@plt+0x3120>
   13080:	bl	10db4 <abort@plt>
   13084:	ldrdeq	r5, [r2], -r4
   13088:	andeq	r5, r2, r4, asr #2
   1308c:	ldrdeq	r5, [r2], -ip
   13090:	push	{r4, r5, r6, lr}
   13094:	mov	r5, r0
   13098:	bl	10d18 <__errno_location@plt>
   1309c:	cmp	r5, #0
   130a0:	mov	r1, #48	; 0x30
   130a4:	mov	r4, r0
   130a8:	ldr	r0, [pc, #16]	; 130c0 <abort@plt+0x230c>
   130ac:	ldr	r6, [r4]
   130b0:	movne	r0, r5
   130b4:	bl	13e94 <abort@plt+0x30e0>
   130b8:	str	r6, [r4]
   130bc:	pop	{r4, r5, r6, pc}
   130c0:	andeq	r5, r2, r4, asr #4
   130c4:	ldr	r3, [pc, #12]	; 130d8 <abort@plt+0x2324>
   130c8:	cmp	r0, #0
   130cc:	moveq	r0, r3
   130d0:	ldr	r0, [r0]
   130d4:	bx	lr
   130d8:	andeq	r5, r2, r4, asr #4
   130dc:	ldr	r3, [pc, #12]	; 130f0 <abort@plt+0x233c>
   130e0:	cmp	r0, #0
   130e4:	moveq	r0, r3
   130e8:	str	r1, [r0]
   130ec:	bx	lr
   130f0:	andeq	r5, r2, r4, asr #4
   130f4:	ldr	r3, [pc, #52]	; 13130 <abort@plt+0x237c>
   130f8:	cmp	r0, #0
   130fc:	moveq	r0, r3
   13100:	add	r3, r0, #8
   13104:	push	{lr}		; (str lr, [sp, #-4]!)
   13108:	lsr	lr, r1, #5
   1310c:	and	r1, r1, #31
   13110:	ldr	ip, [r3, lr, lsl #2]
   13114:	lsr	r0, ip, r1
   13118:	eor	r2, r2, r0
   1311c:	and	r2, r2, #1
   13120:	and	r0, r0, #1
   13124:	eor	r1, ip, r2, lsl r1
   13128:	str	r1, [r3, lr, lsl #2]
   1312c:	pop	{pc}		; (ldr pc, [sp], #4)
   13130:	andeq	r5, r2, r4, asr #4
   13134:	ldr	r3, [pc, #16]	; 1314c <abort@plt+0x2398>
   13138:	cmp	r0, #0
   1313c:	movne	r3, r0
   13140:	ldr	r0, [r3, #4]
   13144:	str	r1, [r3, #4]
   13148:	bx	lr
   1314c:	andeq	r5, r2, r4, asr #4
   13150:	ldr	r3, [pc, #44]	; 13184 <abort@plt+0x23d0>
   13154:	cmp	r0, #0
   13158:	moveq	r0, r3
   1315c:	mov	ip, #10
   13160:	cmp	r2, #0
   13164:	cmpne	r1, #0
   13168:	str	ip, [r0]
   1316c:	beq	1317c <abort@plt+0x23c8>
   13170:	str	r1, [r0, #40]	; 0x28
   13174:	str	r2, [r0, #44]	; 0x2c
   13178:	bx	lr
   1317c:	push	{r4, lr}
   13180:	bl	10db4 <abort@plt>
   13184:	andeq	r5, r2, r4, asr #4
   13188:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1318c:	sub	sp, sp, #24
   13190:	ldr	ip, [pc, #108]	; 13204 <abort@plt+0x2450>
   13194:	ldr	r4, [sp, #56]	; 0x38
   13198:	mov	r9, r2
   1319c:	cmp	r4, #0
   131a0:	moveq	r4, ip
   131a4:	mov	sl, r3
   131a8:	mov	r7, r0
   131ac:	mov	r8, r1
   131b0:	bl	10d18 <__errno_location@plt>
   131b4:	ldr	r3, [r4, #44]	; 0x2c
   131b8:	mov	r1, r8
   131bc:	ldr	r6, [r0]
   131c0:	str	r3, [sp, #16]
   131c4:	ldr	r2, [r4, #40]	; 0x28
   131c8:	add	r3, r4, #8
   131cc:	str	r3, [sp, #8]
   131d0:	str	r2, [sp, #12]
   131d4:	ldr	r2, [r4, #4]
   131d8:	mov	r5, r0
   131dc:	str	r2, [sp, #4]
   131e0:	ldr	ip, [r4]
   131e4:	mov	r3, sl
   131e8:	mov	r2, r9
   131ec:	mov	r0, r7
   131f0:	str	ip, [sp]
   131f4:	bl	116dc <abort@plt+0x928>
   131f8:	str	r6, [r5]
   131fc:	add	sp, sp, #24
   13200:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13204:	andeq	r5, r2, r4, asr #4
   13208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1320c:	cmp	r3, #0
   13210:	sub	sp, sp, #44	; 0x2c
   13214:	ldr	r4, [pc, #192]	; 132dc <abort@plt+0x2528>
   13218:	mov	r6, r2
   1321c:	movne	r4, r3
   13220:	mov	r9, r1
   13224:	mov	r8, r0
   13228:	bl	10d18 <__errno_location@plt>
   1322c:	ldr	r3, [r4, #44]	; 0x2c
   13230:	ldr	r5, [r4, #4]
   13234:	add	sl, r4, #8
   13238:	cmp	r6, #0
   1323c:	orreq	r5, r5, #1
   13240:	mov	r1, #0
   13244:	ldr	r2, [r0]
   13248:	str	r3, [sp, #16]
   1324c:	ldr	r3, [r4, #40]	; 0x28
   13250:	stmib	sp, {r5, sl}
   13254:	str	r3, [sp, #12]
   13258:	ldr	r3, [r4]
   1325c:	mov	r7, r0
   13260:	str	r2, [sp, #28]
   13264:	str	r3, [sp]
   13268:	mov	r2, r8
   1326c:	mov	r3, r9
   13270:	mov	r0, r1
   13274:	bl	116dc <abort@plt+0x928>
   13278:	add	r1, r0, #1
   1327c:	mov	fp, r0
   13280:	mov	r0, r1
   13284:	str	r1, [sp, #36]	; 0x24
   13288:	bl	13c8c <abort@plt+0x2ed8>
   1328c:	ldr	r3, [r4, #44]	; 0x2c
   13290:	mov	r2, r8
   13294:	str	r3, [sp, #16]
   13298:	ldr	r3, [r4, #40]	; 0x28
   1329c:	str	r5, [sp, #4]
   132a0:	str	r3, [sp, #12]
   132a4:	str	sl, [sp, #8]
   132a8:	ldr	ip, [r4]
   132ac:	ldr	r1, [sp, #36]	; 0x24
   132b0:	mov	r3, r9
   132b4:	str	ip, [sp]
   132b8:	str	r0, [sp, #32]
   132bc:	bl	116dc <abort@plt+0x928>
   132c0:	ldr	r2, [sp, #28]
   132c4:	cmp	r6, #0
   132c8:	str	r2, [r7]
   132cc:	ldr	r0, [sp, #32]
   132d0:	strne	fp, [r6]
   132d4:	add	sp, sp, #44	; 0x2c
   132d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132dc:	andeq	r5, r2, r4, asr #4
   132e0:	mov	r3, r2
   132e4:	mov	r2, #0
   132e8:	b	13208 <abort@plt+0x2454>
   132ec:	push	{r4, r5, r6, r7, r8, lr}
   132f0:	ldr	r6, [pc, #112]	; 13368 <abort@plt+0x25b4>
   132f4:	ldr	r3, [r6, #4]
   132f8:	ldr	r7, [r6]
   132fc:	cmp	r3, #1
   13300:	ble	13324 <abort@plt+0x2570>
   13304:	sub	r5, r7, #8
   13308:	add	r5, r5, r3, lsl #3
   1330c:	mov	r4, r7
   13310:	ldr	r0, [r4, #12]
   13314:	add	r4, r4, #8
   13318:	bl	10bec <free@plt>
   1331c:	cmp	r4, r5
   13320:	bne	13310 <abort@plt+0x255c>
   13324:	ldr	r0, [r7, #4]
   13328:	ldr	r4, [pc, #60]	; 1336c <abort@plt+0x25b8>
   1332c:	cmp	r0, r4
   13330:	beq	13344 <abort@plt+0x2590>
   13334:	bl	10bec <free@plt>
   13338:	mov	r3, #256	; 0x100
   1333c:	str	r4, [r6, #12]
   13340:	str	r3, [r6, #8]
   13344:	ldr	r4, [pc, #36]	; 13370 <abort@plt+0x25bc>
   13348:	cmp	r7, r4
   1334c:	beq	1335c <abort@plt+0x25a8>
   13350:	mov	r0, r7
   13354:	bl	10bec <free@plt>
   13358:	str	r4, [r6]
   1335c:	mov	r3, #1
   13360:	str	r3, [r6, #4]
   13364:	pop	{r4, r5, r6, r7, r8, pc}
   13368:	ldrdeq	r5, [r2], -r4
   1336c:	andeq	r5, r2, r4, asr #2
   13370:	ldrdeq	r5, [r2], -ip
   13374:	ldr	r3, [pc, #4]	; 13380 <abort@plt+0x25cc>
   13378:	mvn	r2, #0
   1337c:	b	12ef4 <abort@plt+0x2140>
   13380:	andeq	r5, r2, r4, asr #4
   13384:	ldr	r3, [pc]	; 1338c <abort@plt+0x25d8>
   13388:	b	12ef4 <abort@plt+0x2140>
   1338c:	andeq	r5, r2, r4, asr #4
   13390:	mov	r1, r0
   13394:	ldr	r3, [pc, #8]	; 133a4 <abort@plt+0x25f0>
   13398:	mvn	r2, #0
   1339c:	mov	r0, #0
   133a0:	b	12ef4 <abort@plt+0x2140>
   133a4:	andeq	r5, r2, r4, asr #4
   133a8:	mov	r2, r1
   133ac:	ldr	r3, [pc, #8]	; 133bc <abort@plt+0x2608>
   133b0:	mov	r1, r0
   133b4:	mov	r0, #0
   133b8:	b	12ef4 <abort@plt+0x2140>
   133bc:	andeq	r5, r2, r4, asr #4
   133c0:	push	{r4, r5, r6, lr}
   133c4:	sub	sp, sp, #56	; 0x38
   133c8:	ldr	r4, [pc, #68]	; 13414 <abort@plt+0x2660>
   133cc:	mov	r6, r2
   133d0:	mov	r5, r0
   133d4:	ldr	r3, [r4]
   133d8:	add	r0, sp, #4
   133dc:	str	r3, [sp, #52]	; 0x34
   133e0:	bl	1156c <abort@plt+0x7b8>
   133e4:	add	r3, sp, #4
   133e8:	mvn	r2, #0
   133ec:	mov	r1, r6
   133f0:	mov	r0, r5
   133f4:	bl	12ef4 <abort@plt+0x2140>
   133f8:	ldr	r2, [sp, #52]	; 0x34
   133fc:	ldr	r3, [r4]
   13400:	cmp	r2, r3
   13404:	bne	13410 <abort@plt+0x265c>
   13408:	add	sp, sp, #56	; 0x38
   1340c:	pop	{r4, r5, r6, pc}
   13410:	bl	10c34 <__stack_chk_fail@plt>
   13414:	andeq	r4, r2, r8, lsl #30
   13418:	push	{r4, r5, r6, r7, lr}
   1341c:	sub	sp, sp, #60	; 0x3c
   13420:	ldr	r4, [pc, #72]	; 13470 <abort@plt+0x26bc>
   13424:	mov	r6, r2
   13428:	mov	r7, r3
   1342c:	ldr	ip, [r4]
   13430:	mov	r5, r0
   13434:	add	r0, sp, #4
   13438:	str	ip, [sp, #52]	; 0x34
   1343c:	bl	1156c <abort@plt+0x7b8>
   13440:	add	r3, sp, #4
   13444:	mov	r2, r7
   13448:	mov	r1, r6
   1344c:	mov	r0, r5
   13450:	bl	12ef4 <abort@plt+0x2140>
   13454:	ldr	r2, [sp, #52]	; 0x34
   13458:	ldr	r3, [r4]
   1345c:	cmp	r2, r3
   13460:	bne	1346c <abort@plt+0x26b8>
   13464:	add	sp, sp, #60	; 0x3c
   13468:	pop	{r4, r5, r6, r7, pc}
   1346c:	bl	10c34 <__stack_chk_fail@plt>
   13470:	andeq	r4, r2, r8, lsl #30
   13474:	mov	r2, r1
   13478:	mov	r1, r0
   1347c:	mov	r0, #0
   13480:	b	133c0 <abort@plt+0x260c>
   13484:	mov	r3, r2
   13488:	mov	r2, r1
   1348c:	mov	r1, r0
   13490:	mov	r0, #0
   13494:	b	13418 <abort@plt+0x2664>
   13498:	push	{r4, r5, r6, r7, r8, r9, lr}
   1349c:	mov	r4, r2
   134a0:	ldr	lr, [pc, #128]	; 13528 <abort@plt+0x2774>
   134a4:	mov	r8, r0
   134a8:	mov	r9, r1
   134ac:	ldm	lr!, {r0, r1, r2, r3}
   134b0:	sub	sp, sp, #60	; 0x3c
   134b4:	add	ip, sp, #4
   134b8:	lsr	r6, r4, #5
   134bc:	stmia	ip!, {r0, r1, r2, r3}
   134c0:	add	r7, sp, #12
   134c4:	ldm	lr!, {r0, r1, r2, r3}
   134c8:	and	r4, r4, #31
   134cc:	ldr	r5, [pc, #88]	; 1352c <abort@plt+0x2778>
   134d0:	stmia	ip!, {r0, r1, r2, r3}
   134d4:	ldm	lr, {r0, r1, r2, r3}
   134d8:	stm	ip, {r0, r1, r2, r3}
   134dc:	mov	r2, r9
   134e0:	ldr	r3, [r7, r6, lsl #2]
   134e4:	ldr	ip, [r5]
   134e8:	mov	r1, r8
   134ec:	mvn	r0, r3, lsr r4
   134f0:	and	r0, r0, #1
   134f4:	str	ip, [sp, #52]	; 0x34
   134f8:	eor	r4, r3, r0, lsl r4
   134fc:	add	r3, sp, #4
   13500:	mov	r0, #0
   13504:	str	r4, [r7, r6, lsl #2]
   13508:	bl	12ef4 <abort@plt+0x2140>
   1350c:	ldr	r2, [sp, #52]	; 0x34
   13510:	ldr	r3, [r5]
   13514:	cmp	r2, r3
   13518:	bne	13524 <abort@plt+0x2770>
   1351c:	add	sp, sp, #60	; 0x3c
   13520:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13524:	bl	10c34 <__stack_chk_fail@plt>
   13528:	andeq	r5, r2, r4, asr #4
   1352c:	andeq	r4, r2, r8, lsl #30
   13530:	mov	r2, r1
   13534:	mvn	r1, #0
   13538:	b	13498 <abort@plt+0x26e4>
   1353c:	mov	r2, #58	; 0x3a
   13540:	mvn	r1, #0
   13544:	b	13498 <abort@plt+0x26e4>
   13548:	mov	r2, #58	; 0x3a
   1354c:	b	13498 <abort@plt+0x26e4>
   13550:	push	{r4, r5, r6, r7, r8, lr}
   13554:	sub	sp, sp, #104	; 0x68
   13558:	ldr	r5, [pc, #120]	; 135d8 <abort@plt+0x2824>
   1355c:	mov	r6, r0
   13560:	mov	r0, sp
   13564:	ldr	r3, [r5]
   13568:	mov	r7, r2
   1356c:	str	r3, [sp, #100]	; 0x64
   13570:	bl	1156c <abort@plt+0x7b8>
   13574:	mov	ip, sp
   13578:	add	lr, sp, #52	; 0x34
   1357c:	ldm	ip!, {r0, r1, r2, r3}
   13580:	stmia	lr!, {r0, r1, r2, r3}
   13584:	ldm	ip!, {r0, r1, r2, r3}
   13588:	ldr	r8, [sp, #64]	; 0x40
   1358c:	stmia	lr!, {r0, r1, r2, r3}
   13590:	mvn	r4, r8
   13594:	ldm	ip, {r0, r1, r2, r3}
   13598:	and	ip, r4, #67108864	; 0x4000000
   1359c:	eor	ip, ip, r8
   135a0:	str	ip, [sp, #64]	; 0x40
   135a4:	stm	lr, {r0, r1, r2, r3}
   135a8:	add	r3, sp, #52	; 0x34
   135ac:	mvn	r2, #0
   135b0:	mov	r1, r7
   135b4:	mov	r0, r6
   135b8:	bl	12ef4 <abort@plt+0x2140>
   135bc:	ldr	r2, [sp, #100]	; 0x64
   135c0:	ldr	r3, [r5]
   135c4:	cmp	r2, r3
   135c8:	bne	135d4 <abort@plt+0x2820>
   135cc:	add	sp, sp, #104	; 0x68
   135d0:	pop	{r4, r5, r6, r7, r8, pc}
   135d4:	bl	10c34 <__stack_chk_fail@plt>
   135d8:	andeq	r4, r2, r8, lsl #30
   135dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   135e0:	mov	r6, r1
   135e4:	ldr	lr, [pc, #132]	; 13670 <abort@plt+0x28bc>
   135e8:	mov	r5, r2
   135ec:	mov	r8, r0
   135f0:	mov	r9, r3
   135f4:	ldm	lr!, {r0, r1, r2, r3}
   135f8:	sub	sp, sp, #60	; 0x3c
   135fc:	add	ip, sp, #4
   13600:	ldr	r4, [pc, #108]	; 13674 <abort@plt+0x28c0>
   13604:	stmia	ip!, {r0, r1, r2, r3}
   13608:	mov	r7, #10
   1360c:	ldm	lr!, {r0, r1, r2, r3}
   13610:	cmp	r5, #0
   13614:	cmpne	r6, #0
   13618:	str	r7, [sp, #4]
   1361c:	stmia	ip!, {r0, r1, r2, r3}
   13620:	ldm	lr, {r0, r1, r2, r3}
   13624:	ldr	lr, [r4]
   13628:	stm	ip, {r0, r1, r2, r3}
   1362c:	str	lr, [sp, #52]	; 0x34
   13630:	beq	1366c <abort@plt+0x28b8>
   13634:	add	r3, sp, #4
   13638:	ldr	r2, [sp, #88]	; 0x58
   1363c:	mov	r1, r9
   13640:	mov	r0, r8
   13644:	str	r6, [sp, #44]	; 0x2c
   13648:	str	r5, [sp, #48]	; 0x30
   1364c:	bl	12ef4 <abort@plt+0x2140>
   13650:	ldr	r2, [sp, #52]	; 0x34
   13654:	ldr	r3, [r4]
   13658:	cmp	r2, r3
   1365c:	bne	13668 <abort@plt+0x28b4>
   13660:	add	sp, sp, #60	; 0x3c
   13664:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13668:	bl	10c34 <__stack_chk_fail@plt>
   1366c:	bl	10db4 <abort@plt>
   13670:	andeq	r5, r2, r4, asr #4
   13674:	andeq	r4, r2, r8, lsl #30
   13678:	push	{lr}		; (str lr, [sp, #-4]!)
   1367c:	sub	sp, sp, #12
   13680:	mvn	ip, #0
   13684:	str	ip, [sp]
   13688:	bl	135dc <abort@plt+0x2828>
   1368c:	add	sp, sp, #12
   13690:	pop	{pc}		; (ldr pc, [sp], #4)
   13694:	push	{lr}		; (str lr, [sp, #-4]!)
   13698:	sub	sp, sp, #12
   1369c:	mvn	ip, #0
   136a0:	mov	r3, r2
   136a4:	str	ip, [sp]
   136a8:	mov	r2, r1
   136ac:	mov	r1, r0
   136b0:	mov	r0, #0
   136b4:	bl	135dc <abort@plt+0x2828>
   136b8:	add	sp, sp, #12
   136bc:	pop	{pc}		; (ldr pc, [sp], #4)
   136c0:	push	{lr}		; (str lr, [sp, #-4]!)
   136c4:	sub	sp, sp, #12
   136c8:	str	r3, [sp]
   136cc:	mov	r3, r2
   136d0:	mov	r2, r1
   136d4:	mov	r1, r0
   136d8:	mov	r0, #0
   136dc:	bl	135dc <abort@plt+0x2828>
   136e0:	add	sp, sp, #12
   136e4:	pop	{pc}		; (ldr pc, [sp], #4)
   136e8:	ldr	r3, [pc]	; 136f0 <abort@plt+0x293c>
   136ec:	b	12ef4 <abort@plt+0x2140>
   136f0:	andeq	r5, r2, r4, ror #1
   136f4:	mov	r2, r1
   136f8:	ldr	r3, [pc, #8]	; 13708 <abort@plt+0x2954>
   136fc:	mov	r1, r0
   13700:	mov	r0, #0
   13704:	b	12ef4 <abort@plt+0x2140>
   13708:	andeq	r5, r2, r4, ror #1
   1370c:	ldr	r3, [pc, #4]	; 13718 <abort@plt+0x2964>
   13710:	mvn	r2, #0
   13714:	b	12ef4 <abort@plt+0x2140>
   13718:	andeq	r5, r2, r4, ror #1
   1371c:	mov	r1, r0
   13720:	ldr	r3, [pc, #8]	; 13730 <abort@plt+0x297c>
   13724:	mvn	r2, #0
   13728:	mov	r0, #0
   1372c:	b	12ef4 <abort@plt+0x2140>
   13730:	andeq	r5, r2, r4, ror #1
   13734:	push	{r4, r5, r6, lr}
   13738:	sub	sp, sp, #32
   1373c:	cmp	r1, #0
   13740:	mov	r5, r0
   13744:	ldr	r4, [sp, #48]	; 0x30
   13748:	ldr	r6, [sp, #52]	; 0x34
   1374c:	beq	137dc <abort@plt+0x2a28>
   13750:	strd	r2, [sp]
   13754:	mov	r3, r1
   13758:	ldr	r2, [pc, #828]	; 13a9c <abort@plt+0x2ce8>
   1375c:	mov	r1, #1
   13760:	bl	10d54 <__fprintf_chk@plt>
   13764:	mov	r2, #5
   13768:	ldr	r1, [pc, #816]	; 13aa0 <abort@plt+0x2cec>
   1376c:	mov	r0, #0
   13770:	bl	10c28 <dcgettext@plt>
   13774:	ldr	r3, [pc, #808]	; 13aa4 <abort@plt+0x2cf0>
   13778:	ldr	r2, [pc, #808]	; 13aa8 <abort@plt+0x2cf4>
   1377c:	str	r3, [sp]
   13780:	mov	r1, #1
   13784:	mov	r3, r0
   13788:	mov	r0, r5
   1378c:	bl	10d54 <__fprintf_chk@plt>
   13790:	ldr	r1, [pc, #788]	; 13aac <abort@plt+0x2cf8>
   13794:	mov	r2, #5
   13798:	mov	r0, #0
   1379c:	bl	10c28 <dcgettext@plt>
   137a0:	mov	r1, r5
   137a4:	bl	10bb0 <fputs_unlocked@plt>
   137a8:	cmp	r6, #9
   137ac:	ldrls	pc, [pc, r6, lsl #2]
   137b0:	b	13a8c <abort@plt+0x2cd8>
   137b4:	muleq	r1, r8, sl
   137b8:	andeq	r3, r1, r0, ror #16
   137bc:	andeq	r3, r1, ip, lsl #17
   137c0:	andeq	r3, r1, r0, asr #17
   137c4:	strdeq	r3, [r1], -ip
   137c8:	andeq	r3, r1, ip, lsr r9
   137cc:	andeq	r3, r1, r4, lsl #19
   137d0:	ldrdeq	r3, [r1], -r4
   137d4:	andeq	r3, r1, ip, lsr #20
   137d8:	strdeq	r3, [r1], -r4
   137dc:	str	r3, [sp]
   137e0:	mov	r1, #1
   137e4:	mov	r3, r2
   137e8:	ldr	r2, [pc, #704]	; 13ab0 <abort@plt+0x2cfc>
   137ec:	bl	10d54 <__fprintf_chk@plt>
   137f0:	b	13764 <abort@plt+0x29b0>
   137f4:	ldr	r1, [pc, #696]	; 13ab4 <abort@plt+0x2d00>
   137f8:	mov	r2, #5
   137fc:	mov	r0, #0
   13800:	bl	10c28 <dcgettext@plt>
   13804:	ldr	r2, [r4, #32]
   13808:	ldr	r3, [r4, #28]
   1380c:	ldr	r1, [r4, #24]
   13810:	str	r2, [sp, #28]
   13814:	ldr	r2, [r4, #20]
   13818:	str	r3, [sp, #24]
   1381c:	ldr	r3, [r4, #16]
   13820:	str	r1, [sp, #20]
   13824:	ldr	r1, [r4, #12]
   13828:	str	r2, [sp, #16]
   1382c:	ldr	r2, [r4, #8]
   13830:	str	r3, [sp, #12]
   13834:	ldr	r3, [r4, #4]
   13838:	str	r1, [sp, #8]
   1383c:	str	r2, [sp, #4]
   13840:	str	r3, [sp]
   13844:	mov	r1, #1
   13848:	ldr	r3, [r4]
   1384c:	mov	r2, r0
   13850:	mov	r0, r5
   13854:	bl	10d54 <__fprintf_chk@plt>
   13858:	add	sp, sp, #32
   1385c:	pop	{r4, r5, r6, pc}
   13860:	mov	r2, #5
   13864:	ldr	r1, [pc, #588]	; 13ab8 <abort@plt+0x2d04>
   13868:	mov	r0, #0
   1386c:	bl	10c28 <dcgettext@plt>
   13870:	ldr	r3, [r4]
   13874:	mov	r1, #1
   13878:	mov	r2, r0
   1387c:	mov	r0, r5
   13880:	add	sp, sp, #32
   13884:	pop	{r4, r5, r6, lr}
   13888:	b	10d54 <__fprintf_chk@plt>
   1388c:	mov	r2, #5
   13890:	ldr	r1, [pc, #548]	; 13abc <abort@plt+0x2d08>
   13894:	mov	r0, #0
   13898:	bl	10c28 <dcgettext@plt>
   1389c:	ldr	r2, [r4, #4]
   138a0:	ldr	r3, [r4]
   138a4:	mov	r1, #1
   138a8:	str	r2, [sp, #48]	; 0x30
   138ac:	mov	r2, r0
   138b0:	mov	r0, r5
   138b4:	add	sp, sp, #32
   138b8:	pop	{r4, r5, r6, lr}
   138bc:	b	10d54 <__fprintf_chk@plt>
   138c0:	mov	r2, #5
   138c4:	ldr	r1, [pc, #500]	; 13ac0 <abort@plt+0x2d0c>
   138c8:	mov	r0, #0
   138cc:	bl	10c28 <dcgettext@plt>
   138d0:	ldr	r2, [r4, #8]
   138d4:	ldr	r3, [r4, #4]
   138d8:	mov	r1, #1
   138dc:	str	r2, [sp, #52]	; 0x34
   138e0:	str	r3, [sp, #48]	; 0x30
   138e4:	ldr	r3, [r4]
   138e8:	mov	r2, r0
   138ec:	mov	r0, r5
   138f0:	add	sp, sp, #32
   138f4:	pop	{r4, r5, r6, lr}
   138f8:	b	10d54 <__fprintf_chk@plt>
   138fc:	mov	r2, #5
   13900:	ldr	r1, [pc, #444]	; 13ac4 <abort@plt+0x2d10>
   13904:	mov	r0, #0
   13908:	bl	10c28 <dcgettext@plt>
   1390c:	ldr	r1, [r4, #12]
   13910:	ldr	r2, [r4, #8]
   13914:	ldr	r3, [r4, #4]
   13918:	str	r1, [sp, #8]
   1391c:	str	r2, [sp, #4]
   13920:	str	r3, [sp]
   13924:	mov	r1, #1
   13928:	ldr	r3, [r4]
   1392c:	mov	r2, r0
   13930:	mov	r0, r5
   13934:	bl	10d54 <__fprintf_chk@plt>
   13938:	b	13858 <abort@plt+0x2aa4>
   1393c:	mov	r2, #5
   13940:	ldr	r1, [pc, #384]	; 13ac8 <abort@plt+0x2d14>
   13944:	mov	r0, #0
   13948:	bl	10c28 <dcgettext@plt>
   1394c:	ldr	r3, [r4, #16]
   13950:	ldr	r1, [r4, #12]
   13954:	ldr	r2, [r4, #8]
   13958:	str	r3, [sp, #12]
   1395c:	ldr	r3, [r4, #4]
   13960:	str	r1, [sp, #8]
   13964:	str	r2, [sp, #4]
   13968:	str	r3, [sp]
   1396c:	mov	r1, #1
   13970:	ldr	r3, [r4]
   13974:	mov	r2, r0
   13978:	mov	r0, r5
   1397c:	bl	10d54 <__fprintf_chk@plt>
   13980:	b	13858 <abort@plt+0x2aa4>
   13984:	mov	r2, #5
   13988:	ldr	r1, [pc, #316]	; 13acc <abort@plt+0x2d18>
   1398c:	mov	r0, #0
   13990:	bl	10c28 <dcgettext@plt>
   13994:	ldr	r2, [r4, #20]
   13998:	ldr	r3, [r4, #16]
   1399c:	ldr	r1, [r4, #12]
   139a0:	str	r2, [sp, #16]
   139a4:	ldr	r2, [r4, #8]
   139a8:	str	r3, [sp, #12]
   139ac:	ldr	r3, [r4, #4]
   139b0:	str	r1, [sp, #8]
   139b4:	str	r2, [sp, #4]
   139b8:	str	r3, [sp]
   139bc:	mov	r1, #1
   139c0:	ldr	r3, [r4]
   139c4:	mov	r2, r0
   139c8:	mov	r0, r5
   139cc:	bl	10d54 <__fprintf_chk@plt>
   139d0:	b	13858 <abort@plt+0x2aa4>
   139d4:	mov	r2, #5
   139d8:	ldr	r1, [pc, #240]	; 13ad0 <abort@plt+0x2d1c>
   139dc:	mov	r0, #0
   139e0:	bl	10c28 <dcgettext@plt>
   139e4:	ldr	r1, [r4, #24]
   139e8:	ldr	r2, [r4, #20]
   139ec:	ldr	r3, [r4, #16]
   139f0:	str	r1, [sp, #20]
   139f4:	ldr	r1, [r4, #12]
   139f8:	str	r2, [sp, #16]
   139fc:	ldr	r2, [r4, #8]
   13a00:	str	r3, [sp, #12]
   13a04:	ldr	r3, [r4, #4]
   13a08:	str	r1, [sp, #8]
   13a0c:	str	r2, [sp, #4]
   13a10:	str	r3, [sp]
   13a14:	mov	r1, #1
   13a18:	ldr	r3, [r4]
   13a1c:	mov	r2, r0
   13a20:	mov	r0, r5
   13a24:	bl	10d54 <__fprintf_chk@plt>
   13a28:	b	13858 <abort@plt+0x2aa4>
   13a2c:	mov	r2, #5
   13a30:	ldr	r1, [pc, #156]	; 13ad4 <abort@plt+0x2d20>
   13a34:	mov	r0, #0
   13a38:	bl	10c28 <dcgettext@plt>
   13a3c:	ldr	r3, [r4, #28]
   13a40:	ldr	r1, [r4, #24]
   13a44:	ldr	r2, [r4, #20]
   13a48:	str	r3, [sp, #24]
   13a4c:	ldr	r3, [r4, #16]
   13a50:	str	r1, [sp, #20]
   13a54:	ldr	r1, [r4, #12]
   13a58:	str	r2, [sp, #16]
   13a5c:	ldr	r2, [r4, #8]
   13a60:	str	r3, [sp, #12]
   13a64:	ldr	r3, [r4, #4]
   13a68:	str	r1, [sp, #8]
   13a6c:	str	r2, [sp, #4]
   13a70:	str	r3, [sp]
   13a74:	mov	r1, #1
   13a78:	ldr	r3, [r4]
   13a7c:	mov	r2, r0
   13a80:	mov	r0, r5
   13a84:	bl	10d54 <__fprintf_chk@plt>
   13a88:	b	13858 <abort@plt+0x2aa4>
   13a8c:	mov	r2, #5
   13a90:	ldr	r1, [pc, #64]	; 13ad8 <abort@plt+0x2d24>
   13a94:	b	137fc <abort@plt+0x2a48>
   13a98:	bl	10db4 <abort@plt>
   13a9c:	andeq	r4, r1, r8, lsl #18
   13aa0:	andeq	r4, r1, ip, lsl r9
   13aa4:	andeq	r0, r0, r2, ror #15
   13aa8:	strdeq	r4, [r1], -r0
   13aac:	andeq	r4, r1, r0, lsr #18
   13ab0:	andeq	r4, r1, r4, lsl r9
   13ab4:	strdeq	r4, [r1], -r8
   13ab8:	andeq	r4, r1, ip, ror #19
   13abc:	strdeq	r4, [r1], -ip
   13ac0:	andeq	r4, r1, r4, lsl sl
   13ac4:	andeq	r4, r1, r0, lsr sl
   13ac8:	andeq	r4, r1, r0, asr sl
   13acc:	andeq	r4, r1, r4, ror sl
   13ad0:	muleq	r1, ip, sl
   13ad4:	andeq	r4, r1, r8, asr #21
   13ad8:	andeq	r4, r1, ip, lsr #22
   13adc:	push	{r4, r5, lr}
   13ae0:	sub	sp, sp, #12
   13ae4:	ldr	r5, [sp, #24]
   13ae8:	ldr	ip, [r5]
   13aec:	cmp	ip, #0
   13af0:	beq	13b0c <abort@plt+0x2d58>
   13af4:	mov	lr, r5
   13af8:	mov	ip, #0
   13afc:	ldr	r4, [lr, #4]!
   13b00:	add	ip, ip, #1
   13b04:	cmp	r4, #0
   13b08:	bne	13afc <abort@plt+0x2d48>
   13b0c:	stm	sp, {r5, ip}
   13b10:	bl	13734 <abort@plt+0x2980>
   13b14:	add	sp, sp, #12
   13b18:	pop	{r4, r5, pc}
   13b1c:	push	{r4, r5, r6, lr}
   13b20:	sub	sp, sp, #56	; 0x38
   13b24:	ldr	r6, [pc, #88]	; 13b84 <abort@plt+0x2dd0>
   13b28:	ldr	r5, [sp, #72]	; 0x48
   13b2c:	add	r4, sp, #8
   13b30:	ldr	ip, [r6]
   13b34:	str	ip, [sp, #52]	; 0x34
   13b38:	mov	ip, #0
   13b3c:	ldr	lr, [r5], #4
   13b40:	cmp	lr, #0
   13b44:	str	lr, [r4, #4]!
   13b48:	beq	13b58 <abort@plt+0x2da4>
   13b4c:	add	ip, ip, #1
   13b50:	cmp	ip, #10
   13b54:	bne	13b3c <abort@plt+0x2d88>
   13b58:	add	lr, sp, #12
   13b5c:	str	ip, [sp, #4]
   13b60:	str	lr, [sp]
   13b64:	bl	13734 <abort@plt+0x2980>
   13b68:	ldr	r2, [sp, #52]	; 0x34
   13b6c:	ldr	r3, [r6]
   13b70:	cmp	r2, r3
   13b74:	bne	13b80 <abort@plt+0x2dcc>
   13b78:	add	sp, sp, #56	; 0x38
   13b7c:	pop	{r4, r5, r6, pc}
   13b80:	bl	10c34 <__stack_chk_fail@plt>
   13b84:	andeq	r4, r2, r8, lsl #30
   13b88:	push	{r3}		; (str r3, [sp, #-4]!)
   13b8c:	mov	ip, #0
   13b90:	push	{r4, r5, r6, lr}
   13b94:	sub	sp, sp, #60	; 0x3c
   13b98:	ldr	r6, [pc, #100]	; 13c04 <abort@plt+0x2e50>
   13b9c:	add	r5, sp, #8
   13ba0:	add	r4, sp, #80	; 0x50
   13ba4:	ldr	r3, [r6]
   13ba8:	str	r4, [sp, #8]
   13bac:	str	r3, [sp, #52]	; 0x34
   13bb0:	ldr	r3, [sp, #76]	; 0x4c
   13bb4:	ldr	lr, [r4], #4
   13bb8:	cmp	lr, #0
   13bbc:	str	lr, [r5, #4]!
   13bc0:	beq	13bd0 <abort@plt+0x2e1c>
   13bc4:	add	ip, ip, #1
   13bc8:	cmp	ip, #10
   13bcc:	bne	13bb4 <abort@plt+0x2e00>
   13bd0:	add	lr, sp, #12
   13bd4:	str	ip, [sp, #4]
   13bd8:	str	lr, [sp]
   13bdc:	bl	13734 <abort@plt+0x2980>
   13be0:	ldr	r2, [sp, #52]	; 0x34
   13be4:	ldr	r3, [r6]
   13be8:	cmp	r2, r3
   13bec:	bne	13c00 <abort@plt+0x2e4c>
   13bf0:	add	sp, sp, #60	; 0x3c
   13bf4:	pop	{r4, r5, r6, lr}
   13bf8:	add	sp, sp, #4
   13bfc:	bx	lr
   13c00:	bl	10c34 <__stack_chk_fail@plt>
   13c04:	andeq	r4, r2, r8, lsl #30
   13c08:	push	{r4, lr}
   13c0c:	mov	r2, #5
   13c10:	ldr	r1, [pc, #88]	; 13c70 <abort@plt+0x2ebc>
   13c14:	mov	r0, #0
   13c18:	bl	10c28 <dcgettext@plt>
   13c1c:	ldr	r2, [pc, #80]	; 13c74 <abort@plt+0x2ec0>
   13c20:	mov	r1, r0
   13c24:	mov	r0, #1
   13c28:	bl	10d3c <__printf_chk@plt>
   13c2c:	mov	r2, #5
   13c30:	ldr	r1, [pc, #64]	; 13c78 <abort@plt+0x2ec4>
   13c34:	mov	r0, #0
   13c38:	bl	10c28 <dcgettext@plt>
   13c3c:	ldr	r3, [pc, #56]	; 13c7c <abort@plt+0x2ec8>
   13c40:	ldr	r2, [pc, #56]	; 13c80 <abort@plt+0x2ecc>
   13c44:	mov	r1, r0
   13c48:	mov	r0, #1
   13c4c:	bl	10d3c <__printf_chk@plt>
   13c50:	ldr	r1, [pc, #44]	; 13c84 <abort@plt+0x2ed0>
   13c54:	mov	r2, #5
   13c58:	mov	r0, #0
   13c5c:	bl	10c28 <dcgettext@plt>
   13c60:	ldr	r3, [pc, #32]	; 13c88 <abort@plt+0x2ed4>
   13c64:	pop	{r4, lr}
   13c68:	ldr	r1, [r3]
   13c6c:	b	10bb0 <fputs_unlocked@plt>
   13c70:	andeq	r4, r1, r8, ror #22
   13c74:	andeq	r4, r1, r0, lsl #23
   13c78:	muleq	r1, r8, fp
   13c7c:	andeq	r4, r1, r0, lsl #12
   13c80:	andeq	r4, r1, r8, lsr #12
   13c84:	andeq	r4, r1, ip, lsr #23
   13c88:	andeq	r5, r2, ip, lsr #2
   13c8c:	push	{r4, lr}
   13c90:	mov	r4, r0
   13c94:	bl	10cb8 <malloc@plt>
   13c98:	adds	r4, r4, #0
   13c9c:	movne	r4, #1
   13ca0:	cmp	r0, #0
   13ca4:	movne	r4, #0
   13ca8:	cmp	r4, #0
   13cac:	popeq	{r4, pc}
   13cb0:	bl	13ed4 <abort@plt+0x3120>
   13cb4:	push	{r4, r5, r6, lr}
   13cb8:	umull	r4, r5, r0, r1
   13cbc:	adds	r3, r5, #0
   13cc0:	movne	r3, #1
   13cc4:	cmp	r4, #0
   13cc8:	blt	13ce0 <abort@plt+0x2f2c>
   13ccc:	cmp	r3, #0
   13cd0:	bne	13ce0 <abort@plt+0x2f2c>
   13cd4:	mul	r0, r1, r0
   13cd8:	pop	{r4, r5, r6, lr}
   13cdc:	b	13c8c <abort@plt+0x2ed8>
   13ce0:	bl	13ed4 <abort@plt+0x3120>
   13ce4:	b	13c8c <abort@plt+0x2ed8>
   13ce8:	adds	r3, r0, #0
   13cec:	movne	r3, #1
   13cf0:	cmp	r1, #0
   13cf4:	movne	r3, #0
   13cf8:	cmp	r3, #0
   13cfc:	push	{r4, lr}
   13d00:	bne	13d28 <abort@plt+0x2f74>
   13d04:	mov	r4, r1
   13d08:	bl	10c40 <realloc@plt>
   13d0c:	adds	r4, r4, #0
   13d10:	movne	r4, #1
   13d14:	cmp	r0, #0
   13d18:	movne	r4, #0
   13d1c:	cmp	r4, #0
   13d20:	popeq	{r4, pc}
   13d24:	bl	13ed4 <abort@plt+0x3120>
   13d28:	bl	10bec <free@plt>
   13d2c:	mov	r0, #0
   13d30:	pop	{r4, pc}
   13d34:	push	{r4, r5, r6, lr}
   13d38:	umull	r4, r5, r1, r2
   13d3c:	adds	r3, r5, #0
   13d40:	movne	r3, #1
   13d44:	cmp	r4, #0
   13d48:	blt	13d60 <abort@plt+0x2fac>
   13d4c:	cmp	r3, #0
   13d50:	bne	13d60 <abort@plt+0x2fac>
   13d54:	mul	r1, r2, r1
   13d58:	pop	{r4, r5, r6, lr}
   13d5c:	b	13ce8 <abort@plt+0x2f34>
   13d60:	bl	13ed4 <abort@plt+0x3120>
   13d64:	push	{r4, r5, r6, r7, r8, lr}
   13d68:	subs	r7, r0, #0
   13d6c:	mov	r6, r1
   13d70:	mov	r5, r2
   13d74:	ldr	r4, [r1]
   13d78:	beq	13dac <abort@plt+0x2ff8>
   13d7c:	mov	r1, r2
   13d80:	ldr	r0, [pc, #104]	; 13df0 <abort@plt+0x303c>
   13d84:	bl	14228 <abort@plt+0x3474>
   13d88:	cmp	r0, r4
   13d8c:	bls	13dd0 <abort@plt+0x301c>
   13d90:	add	r3, r4, #1
   13d94:	add	r4, r3, r4, lsr #1
   13d98:	str	r4, [r6]
   13d9c:	mul	r1, r5, r4
   13da0:	mov	r0, r7
   13da4:	pop	{r4, r5, r6, r7, r8, lr}
   13da8:	b	13ce8 <abort@plt+0x2f34>
   13dac:	cmp	r4, #0
   13db0:	beq	13dd4 <abort@plt+0x3020>
   13db4:	umull	r0, r1, r4, r5
   13db8:	adds	r3, r1, #0
   13dbc:	movne	r3, #1
   13dc0:	cmp	r0, #0
   13dc4:	blt	13dd0 <abort@plt+0x301c>
   13dc8:	cmp	r3, #0
   13dcc:	beq	13d98 <abort@plt+0x2fe4>
   13dd0:	bl	13ed4 <abort@plt+0x3120>
   13dd4:	mov	r1, r2
   13dd8:	mov	r0, #64	; 0x40
   13ddc:	bl	14228 <abort@plt+0x3474>
   13de0:	cmp	r5, #64	; 0x40
   13de4:	movls	r4, r0
   13de8:	addhi	r4, r0, #1
   13dec:	b	13db4 <abort@plt+0x3000>
   13df0:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   13df4:	cmp	r0, #0
   13df8:	ldr	r3, [r1]
   13dfc:	beq	13e20 <abort@plt+0x306c>
   13e00:	ldr	r2, [pc, #60]	; 13e44 <abort@plt+0x3090>
   13e04:	cmp	r3, r2
   13e08:	bhi	13e3c <abort@plt+0x3088>
   13e0c:	add	r2, r3, #1
   13e10:	add	r3, r2, r3, lsr #1
   13e14:	str	r3, [r1]
   13e18:	mov	r1, r3
   13e1c:	b	13ce8 <abort@plt+0x2f34>
   13e20:	cmp	r3, #0
   13e24:	bne	13e38 <abort@plt+0x3084>
   13e28:	mov	r3, #64	; 0x40
   13e2c:	str	r3, [r1]
   13e30:	mov	r1, r3
   13e34:	b	13ce8 <abort@plt+0x2f34>
   13e38:	bge	13e14 <abort@plt+0x3060>
   13e3c:	push	{r4, lr}
   13e40:	bl	13ed4 <abort@plt+0x3120>
   13e44:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   13e48:	push	{r4, lr}
   13e4c:	mov	r4, r0
   13e50:	bl	13c8c <abort@plt+0x2ed8>
   13e54:	mov	r2, r4
   13e58:	mov	r1, #0
   13e5c:	pop	{r4, lr}
   13e60:	b	10d30 <memset@plt>
   13e64:	push	{r4, r5, r6, lr}
   13e68:	umull	r4, r5, r0, r1
   13e6c:	adds	r3, r5, #0
   13e70:	movne	r3, #1
   13e74:	cmp	r4, #0
   13e78:	blt	13e90 <abort@plt+0x30dc>
   13e7c:	cmp	r3, #0
   13e80:	bne	13e90 <abort@plt+0x30dc>
   13e84:	bl	10ba4 <calloc@plt>
   13e88:	cmp	r0, #0
   13e8c:	popne	{r4, r5, r6, pc}
   13e90:	bl	13ed4 <abort@plt+0x3120>
   13e94:	push	{r4, r5, r6, lr}
   13e98:	mov	r4, r1
   13e9c:	mov	r5, r0
   13ea0:	mov	r0, r1
   13ea4:	bl	13c8c <abort@plt+0x2ed8>
   13ea8:	mov	r2, r4
   13eac:	mov	r1, r5
   13eb0:	pop	{r4, r5, r6, lr}
   13eb4:	b	10c04 <memcpy@plt>
   13eb8:	push	{r4, lr}
   13ebc:	mov	r4, r0
   13ec0:	bl	10d0c <strlen@plt>
   13ec4:	add	r1, r0, #1
   13ec8:	mov	r0, r4
   13ecc:	pop	{r4, lr}
   13ed0:	b	13e94 <abort@plt+0x30e0>
   13ed4:	ldr	r3, [pc, #44]	; 13f08 <abort@plt+0x3154>
   13ed8:	push	{r4, lr}
   13edc:	mov	r2, #5
   13ee0:	ldr	r1, [pc, #36]	; 13f0c <abort@plt+0x3158>
   13ee4:	mov	r0, #0
   13ee8:	ldr	r4, [r3]
   13eec:	bl	10c28 <dcgettext@plt>
   13ef0:	ldr	r2, [pc, #24]	; 13f10 <abort@plt+0x315c>
   13ef4:	mov	r1, #0
   13ef8:	mov	r3, r0
   13efc:	mov	r0, r4
   13f00:	bl	10ca0 <error@plt>
   13f04:	bl	10db4 <abort@plt>
   13f08:	ldrdeq	r5, [r2], -r0
   13f0c:	andeq	r4, r1, r0, lsr #24
   13f10:	andeq	r4, r1, r4, lsr #15
   13f14:	push	{r4, r5, r6, r7, r8, lr}
   13f18:	subs	r7, r0, #0
   13f1c:	ldr	r5, [pc, #108]	; 13f90 <abort@plt+0x31dc>
   13f20:	sub	sp, sp, #8
   13f24:	mov	r8, r1
   13f28:	ldr	r1, [r5]
   13f2c:	moveq	r7, sp
   13f30:	str	r1, [sp, #4]
   13f34:	mov	r0, r7
   13f38:	mov	r1, r8
   13f3c:	mov	r6, r2
   13f40:	bl	10c94 <mbrtowc@plt>
   13f44:	cmp	r6, #0
   13f48:	cmnne	r0, #3
   13f4c:	mov	r4, r0
   13f50:	bhi	13f70 <abort@plt+0x31bc>
   13f54:	ldr	r2, [sp, #4]
   13f58:	ldr	r3, [r5]
   13f5c:	mov	r0, r4
   13f60:	cmp	r2, r3
   13f64:	bne	13f8c <abort@plt+0x31d8>
   13f68:	add	sp, sp, #8
   13f6c:	pop	{r4, r5, r6, r7, r8, pc}
   13f70:	mov	r0, #0
   13f74:	bl	14008 <abort@plt+0x3254>
   13f78:	cmp	r0, #0
   13f7c:	moveq	r4, #1
   13f80:	ldrbeq	r3, [r8]
   13f84:	streq	r3, [r7]
   13f88:	b	13f54 <abort@plt+0x31a0>
   13f8c:	bl	10c34 <__stack_chk_fail@plt>
   13f90:	andeq	r4, r2, r8, lsl #30
   13f94:	push	{r4, r5, r6, lr}
   13f98:	mov	r4, r0
   13f9c:	bl	10c88 <__fpending@plt>
   13fa0:	ldr	r5, [r4]
   13fa4:	and	r5, r5, #32
   13fa8:	mov	r6, r0
   13fac:	mov	r0, r4
   13fb0:	bl	14088 <abort@plt+0x32d4>
   13fb4:	cmp	r5, #0
   13fb8:	mov	r4, r0
   13fbc:	bne	13fe8 <abort@plt+0x3234>
   13fc0:	cmp	r0, #0
   13fc4:	beq	13fe0 <abort@plt+0x322c>
   13fc8:	cmp	r6, #0
   13fcc:	bne	14000 <abort@plt+0x324c>
   13fd0:	bl	10d18 <__errno_location@plt>
   13fd4:	ldr	r4, [r0]
   13fd8:	subs	r4, r4, #9
   13fdc:	mvnne	r4, #0
   13fe0:	mov	r0, r4
   13fe4:	pop	{r4, r5, r6, pc}
   13fe8:	cmp	r0, #0
   13fec:	bne	14000 <abort@plt+0x324c>
   13ff0:	bl	10d18 <__errno_location@plt>
   13ff4:	str	r4, [r0]
   13ff8:	mvn	r4, #0
   13ffc:	b	13fe0 <abort@plt+0x322c>
   14000:	mvn	r4, #0
   14004:	b	13fe0 <abort@plt+0x322c>
   14008:	push	{r4, lr}
   1400c:	mov	r1, #0
   14010:	bl	10d78 <setlocale@plt>
   14014:	subs	r4, r0, #0
   14018:	beq	14044 <abort@plt+0x3290>
   1401c:	ldr	r1, [pc, #40]	; 1404c <abort@plt+0x3298>
   14020:	bl	10bc8 <strcmp@plt>
   14024:	cmp	r0, #0
   14028:	popeq	{r4, pc}
   1402c:	mov	r0, r4
   14030:	ldr	r1, [pc, #24]	; 14050 <abort@plt+0x329c>
   14034:	bl	10bc8 <strcmp@plt>
   14038:	adds	r0, r0, #0
   1403c:	movne	r0, #1
   14040:	pop	{r4, pc}
   14044:	mov	r0, #1
   14048:	pop	{r4, pc}
   1404c:	andeq	r4, r1, r4, lsr ip
   14050:	andeq	r4, r1, r8, lsr ip
   14054:	push	{r4, lr}
   14058:	mov	r0, #14
   1405c:	bl	10d90 <nl_langinfo@plt>
   14060:	cmp	r0, #0
   14064:	beq	1407c <abort@plt+0x32c8>
   14068:	ldrb	r2, [r0]
   1406c:	ldr	r3, [pc, #16]	; 14084 <abort@plt+0x32d0>
   14070:	cmp	r2, #0
   14074:	moveq	r0, r3
   14078:	pop	{r4, pc}
   1407c:	ldr	r0, [pc]	; 14084 <abort@plt+0x32d0>
   14080:	pop	{r4, pc}
   14084:	andeq	r4, r1, r0, asr #24
   14088:	push	{r4, r5, lr}
   1408c:	sub	sp, sp, #12
   14090:	mov	r4, r0
   14094:	bl	10d48 <fileno@plt>
   14098:	cmp	r0, #0
   1409c:	mov	r0, r4
   140a0:	blt	1411c <abort@plt+0x3368>
   140a4:	bl	10cd0 <__freading@plt>
   140a8:	cmp	r0, #0
   140ac:	bne	140e8 <abort@plt+0x3334>
   140b0:	mov	r0, r4
   140b4:	bl	14128 <abort@plt+0x3374>
   140b8:	cmp	r0, #0
   140bc:	beq	14118 <abort@plt+0x3364>
   140c0:	bl	10d18 <__errno_location@plt>
   140c4:	mov	r5, r0
   140c8:	mov	r0, r4
   140cc:	ldr	r4, [r5]
   140d0:	bl	10d60 <fclose@plt>
   140d4:	cmp	r4, #0
   140d8:	mvnne	r0, #0
   140dc:	strne	r4, [r5]
   140e0:	add	sp, sp, #12
   140e4:	pop	{r4, r5, pc}
   140e8:	mov	r0, r4
   140ec:	bl	10d48 <fileno@plt>
   140f0:	mov	r3, #1
   140f4:	str	r3, [sp]
   140f8:	mov	r2, #0
   140fc:	mov	r3, #0
   14100:	bl	10c70 <lseek64@plt>
   14104:	mvn	r3, #0
   14108:	mvn	r2, #0
   1410c:	cmp	r1, r3
   14110:	cmpeq	r0, r2
   14114:	bne	140b0 <abort@plt+0x32fc>
   14118:	mov	r0, r4
   1411c:	add	sp, sp, #12
   14120:	pop	{r4, r5, lr}
   14124:	b	10d60 <fclose@plt>
   14128:	push	{r4, lr}
   1412c:	subs	r4, r0, #0
   14130:	sub	sp, sp, #8
   14134:	beq	14150 <abort@plt+0x339c>
   14138:	bl	10cd0 <__freading@plt>
   1413c:	cmp	r0, #0
   14140:	beq	14150 <abort@plt+0x339c>
   14144:	ldr	r3, [r4]
   14148:	tst	r3, #256	; 0x100
   1414c:	bne	14160 <abort@plt+0x33ac>
   14150:	mov	r0, r4
   14154:	add	sp, sp, #8
   14158:	pop	{r4, lr}
   1415c:	b	10be0 <fflush@plt>
   14160:	mov	r3, #1
   14164:	str	r3, [sp]
   14168:	mov	r2, #0
   1416c:	mov	r3, #0
   14170:	mov	r0, r4
   14174:	bl	14188 <abort@plt+0x33d4>
   14178:	mov	r0, r4
   1417c:	add	sp, sp, #8
   14180:	pop	{r4, lr}
   14184:	b	10be0 <fflush@plt>
   14188:	push	{r4, r5, r6, r7, r8, lr}
   1418c:	sub	sp, sp, #8
   14190:	ldmib	r0, {ip, lr}
   14194:	mov	r4, r0
   14198:	ldr	r5, [sp, #32]
   1419c:	cmp	lr, ip
   141a0:	beq	141b8 <abort@plt+0x3404>
   141a4:	str	r5, [sp, #32]
   141a8:	mov	r0, r4
   141ac:	add	sp, sp, #8
   141b0:	pop	{r4, r5, r6, r7, r8, lr}
   141b4:	b	10d6c <fseeko64@plt>
   141b8:	ldr	lr, [r0, #20]
   141bc:	ldr	ip, [r0, #16]
   141c0:	cmp	lr, ip
   141c4:	bne	141a4 <abort@plt+0x33f0>
   141c8:	ldr	r8, [r0, #36]	; 0x24
   141cc:	cmp	r8, #0
   141d0:	bne	141a4 <abort@plt+0x33f0>
   141d4:	mov	r6, r2
   141d8:	mov	r7, r3
   141dc:	bl	10d48 <fileno@plt>
   141e0:	mov	r2, r6
   141e4:	mov	r3, r7
   141e8:	str	r5, [sp]
   141ec:	bl	10c70 <lseek64@plt>
   141f0:	mvn	r3, #0
   141f4:	mvn	r2, #0
   141f8:	cmp	r1, r3
   141fc:	cmpeq	r0, r2
   14200:	beq	14220 <abort@plt+0x346c>
   14204:	ldr	r3, [r4]
   14208:	strd	r0, [r4, #80]	; 0x50
   1420c:	mov	r0, r8
   14210:	bic	r3, r3, #16
   14214:	str	r3, [r4]
   14218:	add	sp, sp, #8
   1421c:	pop	{r4, r5, r6, r7, r8, pc}
   14220:	mvn	r0, #0
   14224:	b	14218 <abort@plt+0x3464>
   14228:	subs	r2, r1, #1
   1422c:	bxeq	lr
   14230:	bcc	14408 <abort@plt+0x3654>
   14234:	cmp	r0, r1
   14238:	bls	143ec <abort@plt+0x3638>
   1423c:	tst	r1, r2
   14240:	beq	143f8 <abort@plt+0x3644>
   14244:	clz	r3, r0
   14248:	clz	r2, r1
   1424c:	sub	r3, r2, r3
   14250:	rsbs	r3, r3, #31
   14254:	addne	r3, r3, r3, lsl #1
   14258:	mov	r2, #0
   1425c:	addne	pc, pc, r3, lsl #2
   14260:	nop			; (mov r0, r0)
   14264:	cmp	r0, r1, lsl #31
   14268:	adc	r2, r2, r2
   1426c:	subcs	r0, r0, r1, lsl #31
   14270:	cmp	r0, r1, lsl #30
   14274:	adc	r2, r2, r2
   14278:	subcs	r0, r0, r1, lsl #30
   1427c:	cmp	r0, r1, lsl #29
   14280:	adc	r2, r2, r2
   14284:	subcs	r0, r0, r1, lsl #29
   14288:	cmp	r0, r1, lsl #28
   1428c:	adc	r2, r2, r2
   14290:	subcs	r0, r0, r1, lsl #28
   14294:	cmp	r0, r1, lsl #27
   14298:	adc	r2, r2, r2
   1429c:	subcs	r0, r0, r1, lsl #27
   142a0:	cmp	r0, r1, lsl #26
   142a4:	adc	r2, r2, r2
   142a8:	subcs	r0, r0, r1, lsl #26
   142ac:	cmp	r0, r1, lsl #25
   142b0:	adc	r2, r2, r2
   142b4:	subcs	r0, r0, r1, lsl #25
   142b8:	cmp	r0, r1, lsl #24
   142bc:	adc	r2, r2, r2
   142c0:	subcs	r0, r0, r1, lsl #24
   142c4:	cmp	r0, r1, lsl #23
   142c8:	adc	r2, r2, r2
   142cc:	subcs	r0, r0, r1, lsl #23
   142d0:	cmp	r0, r1, lsl #22
   142d4:	adc	r2, r2, r2
   142d8:	subcs	r0, r0, r1, lsl #22
   142dc:	cmp	r0, r1, lsl #21
   142e0:	adc	r2, r2, r2
   142e4:	subcs	r0, r0, r1, lsl #21
   142e8:	cmp	r0, r1, lsl #20
   142ec:	adc	r2, r2, r2
   142f0:	subcs	r0, r0, r1, lsl #20
   142f4:	cmp	r0, r1, lsl #19
   142f8:	adc	r2, r2, r2
   142fc:	subcs	r0, r0, r1, lsl #19
   14300:	cmp	r0, r1, lsl #18
   14304:	adc	r2, r2, r2
   14308:	subcs	r0, r0, r1, lsl #18
   1430c:	cmp	r0, r1, lsl #17
   14310:	adc	r2, r2, r2
   14314:	subcs	r0, r0, r1, lsl #17
   14318:	cmp	r0, r1, lsl #16
   1431c:	adc	r2, r2, r2
   14320:	subcs	r0, r0, r1, lsl #16
   14324:	cmp	r0, r1, lsl #15
   14328:	adc	r2, r2, r2
   1432c:	subcs	r0, r0, r1, lsl #15
   14330:	cmp	r0, r1, lsl #14
   14334:	adc	r2, r2, r2
   14338:	subcs	r0, r0, r1, lsl #14
   1433c:	cmp	r0, r1, lsl #13
   14340:	adc	r2, r2, r2
   14344:	subcs	r0, r0, r1, lsl #13
   14348:	cmp	r0, r1, lsl #12
   1434c:	adc	r2, r2, r2
   14350:	subcs	r0, r0, r1, lsl #12
   14354:	cmp	r0, r1, lsl #11
   14358:	adc	r2, r2, r2
   1435c:	subcs	r0, r0, r1, lsl #11
   14360:	cmp	r0, r1, lsl #10
   14364:	adc	r2, r2, r2
   14368:	subcs	r0, r0, r1, lsl #10
   1436c:	cmp	r0, r1, lsl #9
   14370:	adc	r2, r2, r2
   14374:	subcs	r0, r0, r1, lsl #9
   14378:	cmp	r0, r1, lsl #8
   1437c:	adc	r2, r2, r2
   14380:	subcs	r0, r0, r1, lsl #8
   14384:	cmp	r0, r1, lsl #7
   14388:	adc	r2, r2, r2
   1438c:	subcs	r0, r0, r1, lsl #7
   14390:	cmp	r0, r1, lsl #6
   14394:	adc	r2, r2, r2
   14398:	subcs	r0, r0, r1, lsl #6
   1439c:	cmp	r0, r1, lsl #5
   143a0:	adc	r2, r2, r2
   143a4:	subcs	r0, r0, r1, lsl #5
   143a8:	cmp	r0, r1, lsl #4
   143ac:	adc	r2, r2, r2
   143b0:	subcs	r0, r0, r1, lsl #4
   143b4:	cmp	r0, r1, lsl #3
   143b8:	adc	r2, r2, r2
   143bc:	subcs	r0, r0, r1, lsl #3
   143c0:	cmp	r0, r1, lsl #2
   143c4:	adc	r2, r2, r2
   143c8:	subcs	r0, r0, r1, lsl #2
   143cc:	cmp	r0, r1, lsl #1
   143d0:	adc	r2, r2, r2
   143d4:	subcs	r0, r0, r1, lsl #1
   143d8:	cmp	r0, r1
   143dc:	adc	r2, r2, r2
   143e0:	subcs	r0, r0, r1
   143e4:	mov	r0, r2
   143e8:	bx	lr
   143ec:	moveq	r0, #1
   143f0:	movne	r0, #0
   143f4:	bx	lr
   143f8:	clz	r2, r1
   143fc:	rsb	r2, r2, #31
   14400:	lsr	r0, r0, r2
   14404:	bx	lr
   14408:	cmp	r0, #0
   1440c:	mvnne	r0, #0
   14410:	b	14434 <abort@plt+0x3680>
   14414:	cmp	r1, #0
   14418:	beq	14408 <abort@plt+0x3654>
   1441c:	push	{r0, r1, lr}
   14420:	bl	14228 <abort@plt+0x3474>
   14424:	pop	{r1, r2, lr}
   14428:	mul	r3, r2, r0
   1442c:	sub	r1, r1, r3
   14430:	bx	lr
   14434:	push	{r1, lr}
   14438:	mov	r0, #8
   1443c:	bl	10bbc <raise@plt>
   14440:	pop	{r1, pc}
   14444:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14448:	mov	r7, r0
   1444c:	ldr	r6, [pc, #72]	; 1449c <abort@plt+0x36e8>
   14450:	ldr	r5, [pc, #72]	; 144a0 <abort@plt+0x36ec>
   14454:	add	r6, pc, r6
   14458:	add	r5, pc, r5
   1445c:	sub	r6, r6, r5
   14460:	mov	r8, r1
   14464:	mov	r9, r2
   14468:	bl	10b84 <calloc@plt-0x20>
   1446c:	asrs	r6, r6, #2
   14470:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14474:	mov	r4, #0
   14478:	add	r4, r4, #1
   1447c:	ldr	r3, [r5], #4
   14480:	mov	r2, r9
   14484:	mov	r1, r8
   14488:	mov	r0, r7
   1448c:	blx	r3
   14490:	cmp	r6, r4
   14494:	bne	14478 <abort@plt+0x36c4>
   14498:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1449c:	andeq	r0, r1, r8, lsr #21
   144a0:	andeq	r0, r1, r0, lsr #21
   144a4:	bx	lr
   144a8:	ldr	r3, [pc, #12]	; 144bc <abort@plt+0x3708>
   144ac:	mov	r1, #0
   144b0:	add	r3, pc, r3
   144b4:	ldr	r2, [r3]
   144b8:	b	10d24 <__cxa_atexit@plt>
   144bc:	andeq	r0, r1, r0, lsl ip

Disassembly of section .fini:

000144c0 <.fini>:
   144c0:	push	{r3, lr}
   144c4:	pop	{r3, pc}
