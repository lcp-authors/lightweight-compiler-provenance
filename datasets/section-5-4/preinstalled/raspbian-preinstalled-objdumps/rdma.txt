
raspbian-preinstalled/rdma:     file format elf32-littlearm


Disassembly of section .init:

00011b4c <.init>:
   11b4c:	push	{r3, lr}
   11b50:	bl	125a8 <mount@plt+0x448>
   11b54:	pop	{r3, pc}

Disassembly of section .plt:

00011b58 <calloc@plt-0x14>:
   11b58:	push	{lr}		; (str lr, [sp, #-4]!)
   11b5c:	ldr	lr, [pc, #4]	; 11b68 <calloc@plt-0x4>
   11b60:	add	lr, pc, lr
   11b64:	ldr	pc, [lr, #8]!
   11b68:	muleq	r2, r8, r4

00011b6c <calloc@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #135168	; 0x21000
   11b74:	ldr	pc, [ip, #1176]!	; 0x498

00011b78 <strstr@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #135168	; 0x21000
   11b80:	ldr	pc, [ip, #1168]!	; 0x490

00011b84 <mnl_nlmsg_put_header@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #135168	; 0x21000
   11b8c:	ldr	pc, [ip, #1160]!	; 0x488

00011b90 <__getdelim@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #135168	; 0x21000
   11b98:	ldr	pc, [ip, #1152]!	; 0x480

00011b9c <strcmp@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #135168	; 0x21000
   11ba4:	ldr	pc, [ip, #1144]!	; 0x478

00011ba8 <strtol@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #135168	; 0x21000
   11bb0:	ldr	pc, [ip, #1136]!	; 0x470

00011bb4 <basename@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #135168	; 0x21000
   11bbc:	ldr	pc, [ip, #1128]!	; 0x468

00011bc0 <setsockopt@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #135168	; 0x21000
   11bc8:	ldr	pc, [ip, #1120]!	; 0x460

00011bcc <strcspn@plt>:
   11bcc:	add	ip, pc, #0, 12
   11bd0:	add	ip, ip, #135168	; 0x21000
   11bd4:	ldr	pc, [ip, #1112]!	; 0x458

00011bd8 <fflush@plt>:
   11bd8:	add	ip, pc, #0, 12
   11bdc:	add	ip, ip, #135168	; 0x21000
   11be0:	ldr	pc, [ip, #1104]!	; 0x450

00011be4 <if_indextoname@plt>:
   11be4:	add	ip, pc, #0, 12
   11be8:	add	ip, ip, #135168	; 0x21000
   11bec:	ldr	pc, [ip, #1096]!	; 0x448

00011bf0 <getuid@plt>:
   11bf0:	add	ip, pc, #0, 12
   11bf4:	add	ip, ip, #135168	; 0x21000
   11bf8:	ldr	pc, [ip, #1088]!	; 0x440

00011bfc <mnl_socket_sendto@plt>:
   11bfc:	add	ip, pc, #0, 12
   11c00:	add	ip, ip, #135168	; 0x21000
   11c04:	ldr	pc, [ip, #1080]!	; 0x438

00011c08 <strchrnul@plt>:
   11c08:	add	ip, pc, #0, 12
   11c0c:	add	ip, ip, #135168	; 0x21000
   11c10:	ldr	pc, [ip, #1072]!	; 0x430

00011c14 <free@plt>:
   11c14:	add	ip, pc, #0, 12
   11c18:	add	ip, ip, #135168	; 0x21000
   11c1c:	ldr	pc, [ip, #1064]!	; 0x428

00011c20 <unshare@plt>:
   11c20:	add	ip, pc, #0, 12
   11c24:	add	ip, ip, #135168	; 0x21000
   11c28:	ldr	pc, [ip, #1056]!	; 0x420

00011c2c <fgets@plt>:
   11c2c:	add	ip, pc, #0, 12
   11c30:	add	ip, ip, #135168	; 0x21000
   11c34:	ldr	pc, [ip, #1048]!	; 0x418

00011c38 <inet_pton@plt>:
   11c38:	add	ip, pc, #0, 12
   11c3c:	add	ip, ip, #135168	; 0x21000
   11c40:	ldr	pc, [ip, #1040]!	; 0x410

00011c44 <memcpy@plt>:
   11c44:	add	ip, pc, #0, 12
   11c48:	add	ip, ip, #135168	; 0x21000
   11c4c:	ldr	pc, [ip, #1032]!	; 0x408

00011c50 <time@plt>:
   11c50:	add	ip, pc, #0, 12
   11c54:	add	ip, ip, #135168	; 0x21000
   11c58:	ldr	pc, [ip, #1024]!	; 0x400

00011c5c <sendmsg@plt>:
   11c5c:	add	ip, pc, #0, 12
   11c60:	add	ip, ip, #135168	; 0x21000
   11c64:	ldr	pc, [ip, #1016]!	; 0x3f8

00011c68 <ftell@plt>:
   11c68:	add	ip, pc, #0, 12
   11c6c:	add	ip, ip, #135168	; 0x21000
   11c70:	ldr	pc, [ip, #1008]!	; 0x3f0

00011c74 <memcmp@plt>:
   11c74:	add	ip, pc, #0, 12
   11c78:	add	ip, ip, #135168	; 0x21000
   11c7c:	ldr	pc, [ip, #1000]!	; 0x3e8

00011c80 <mnl_attr_parse@plt>:
   11c80:	add	ip, pc, #0, 12
   11c84:	add	ip, ip, #135168	; 0x21000
   11c88:	ldr	pc, [ip, #992]!	; 0x3e0

00011c8c <gethostbyaddr@plt>:
   11c8c:	add	ip, pc, #0, 12
   11c90:	add	ip, ip, #135168	; 0x21000
   11c94:	ldr	pc, [ip, #984]!	; 0x3d8

00011c98 <strdup@plt>:
   11c98:	add	ip, pc, #0, 12
   11c9c:	add	ip, ip, #135168	; 0x21000
   11ca0:	ldr	pc, [ip, #976]!	; 0x3d0

00011ca4 <__stack_chk_fail@plt>:
   11ca4:	add	ip, pc, #0, 12
   11ca8:	add	ip, ip, #135168	; 0x21000
   11cac:	ldr	pc, [ip, #968]!	; 0x3c8

00011cb0 <mnl_attr_get_u64@plt>:
   11cb0:	add	ip, pc, #0, 12
   11cb4:	add	ip, ip, #135168	; 0x21000
   11cb8:	ldr	pc, [ip, #960]!	; 0x3c0

00011cbc <mnl_attr_put_u32@plt>:
   11cbc:	add	ip, pc, #0, 12
   11cc0:	add	ip, ip, #135168	; 0x21000
   11cc4:	ldr	pc, [ip, #952]!	; 0x3b8

00011cc8 <sysconf@plt>:
   11cc8:	add	ip, pc, #0, 12
   11ccc:	add	ip, ip, #135168	; 0x21000
   11cd0:	ldr	pc, [ip, #944]!	; 0x3b0

00011cd4 <realloc@plt>:
   11cd4:	add	ip, pc, #0, 12
   11cd8:	add	ip, ip, #135168	; 0x21000
   11cdc:	ldr	pc, [ip, #936]!	; 0x3a8

00011ce0 <mnl_socket_bind@plt>:
   11ce0:	add	ip, pc, #0, 12
   11ce4:	add	ip, ip, #135168	; 0x21000
   11ce8:	ldr	pc, [ip, #928]!	; 0x3a0

00011cec <setns@plt>:
   11cec:	add	ip, pc, #0, 12
   11cf0:	add	ip, ip, #135168	; 0x21000
   11cf4:	ldr	pc, [ip, #920]!	; 0x398

00011cf8 <strcasecmp@plt>:
   11cf8:	add	ip, pc, #0, 12
   11cfc:	add	ip, ip, #135168	; 0x21000
   11d00:	ldr	pc, [ip, #912]!	; 0x390

00011d04 <geteuid@plt>:
   11d04:	add	ip, pc, #0, 12
   11d08:	add	ip, ip, #135168	; 0x21000
   11d0c:	ldr	pc, [ip, #904]!	; 0x388

00011d10 <perror@plt>:
   11d10:	add	ip, pc, #0, 12
   11d14:	add	ip, ip, #135168	; 0x21000
   11d18:	ldr	pc, [ip, #896]!	; 0x380

00011d1c <mnl_socket_open@plt>:
   11d1c:	add	ip, pc, #0, 12
   11d20:	add	ip, ip, #135168	; 0x21000
   11d24:	ldr	pc, [ip, #888]!	; 0x378

00011d28 <__memcpy_chk@plt>:
   11d28:	add	ip, pc, #0, 12
   11d2c:	add	ip, ip, #135168	; 0x21000
   11d30:	ldr	pc, [ip, #880]!	; 0x370

00011d34 <sethostent@plt>:
   11d34:	add	ip, pc, #0, 12
   11d38:	add	ip, ip, #135168	; 0x21000
   11d3c:	ldr	pc, [ip, #872]!	; 0x368

00011d40 <fwrite@plt>:
   11d40:	add	ip, pc, #0, 12
   11d44:	add	ip, ip, #135168	; 0x21000
   11d48:	ldr	pc, [ip, #864]!	; 0x360

00011d4c <strcat@plt>:
   11d4c:	add	ip, pc, #0, 12
   11d50:	add	ip, ip, #135168	; 0x21000
   11d54:	ldr	pc, [ip, #856]!	; 0x358

00011d58 <asctime@plt>:
   11d58:	add	ip, pc, #0, 12
   11d5c:	add	ip, ip, #135168	; 0x21000
   11d60:	ldr	pc, [ip, #848]!	; 0x350

00011d64 <strtoll@plt>:
   11d64:	add	ip, pc, #0, 12
   11d68:	add	ip, ip, #135168	; 0x21000
   11d6c:	ldr	pc, [ip, #840]!	; 0x348

00011d70 <strcpy@plt>:
   11d70:	add	ip, pc, #0, 12
   11d74:	add	ip, ip, #135168	; 0x21000
   11d78:	ldr	pc, [ip, #832]!	; 0x340

00011d7c <gettimeofday@plt>:
   11d7c:	add	ip, pc, #0, 12
   11d80:	add	ip, ip, #135168	; 0x21000
   11d84:	ldr	pc, [ip, #824]!	; 0x338

00011d88 <fread@plt>:
   11d88:	add	ip, pc, #0, 12
   11d8c:	add	ip, ip, #135168	; 0x21000
   11d90:	ldr	pc, [ip, #816]!	; 0x330

00011d94 <cap_get_flag@plt>:
   11d94:	add	ip, pc, #0, 12
   11d98:	add	ip, ip, #135168	; 0x21000
   11d9c:	ldr	pc, [ip, #808]!	; 0x328

00011da0 <opendir@plt>:
   11da0:	add	ip, pc, #0, 12
   11da4:	add	ip, ip, #135168	; 0x21000
   11da8:	ldr	pc, [ip, #800]!	; 0x320

00011dac <umount2@plt>:
   11dac:	add	ip, pc, #0, 12
   11db0:	add	ip, ip, #135168	; 0x21000
   11db4:	ldr	pc, [ip, #792]!	; 0x318

00011db8 <open64@plt>:
   11db8:	add	ip, pc, #0, 12
   11dbc:	add	ip, ip, #135168	; 0x21000
   11dc0:	ldr	pc, [ip, #784]!	; 0x310

00011dc4 <__asprintf_chk@plt>:
   11dc4:	add	ip, pc, #0, 12
   11dc8:	add	ip, ip, #135168	; 0x21000
   11dcc:	ldr	pc, [ip, #776]!	; 0x308

00011dd0 <getenv@plt>:
   11dd0:	add	ip, pc, #0, 12
   11dd4:	add	ip, ip, #135168	; 0x21000
   11dd8:	ldr	pc, [ip, #768]!	; 0x300

00011ddc <mnl_attr_next@plt>:
   11ddc:	add	ip, pc, #0, 12
   11de0:	add	ip, ip, #135168	; 0x21000
   11de4:	ldr	pc, [ip, #760]!	; 0x2f8

00011de8 <cap_set_proc@plt>:
   11de8:	add	ip, pc, #0, 12
   11dec:	add	ip, ip, #135168	; 0x21000
   11df0:	ldr	pc, [ip, #752]!	; 0x2f0

00011df4 <malloc@plt>:
   11df4:	add	ip, pc, #0, 12
   11df8:	add	ip, ip, #135168	; 0x21000
   11dfc:	ldr	pc, [ip, #744]!	; 0x2e8

00011e00 <__libc_start_main@plt>:
   11e00:	add	ip, pc, #0, 12
   11e04:	add	ip, ip, #135168	; 0x21000
   11e08:	ldr	pc, [ip, #736]!	; 0x2e0

00011e0c <strerror@plt>:
   11e0c:	add	ip, pc, #0, 12
   11e10:	add	ip, ip, #135168	; 0x21000
   11e14:	ldr	pc, [ip, #728]!	; 0x2d8

00011e18 <strftime@plt>:
   11e18:	add	ip, pc, #0, 12
   11e1c:	add	ip, ip, #135168	; 0x21000
   11e20:	ldr	pc, [ip, #720]!	; 0x2d0

00011e24 <__vfprintf_chk@plt>:
   11e24:	add	ip, pc, #0, 12
   11e28:	add	ip, ip, #135168	; 0x21000
   11e2c:	ldr	pc, [ip, #712]!	; 0x2c8

00011e30 <localtime@plt>:
   11e30:	add	ip, pc, #0, 12
   11e34:	add	ip, ip, #135168	; 0x21000
   11e38:	ldr	pc, [ip, #704]!	; 0x2c0

00011e3c <__ctype_tolower_loc@plt>:
   11e3c:	add	ip, pc, #0, 12
   11e40:	add	ip, ip, #135168	; 0x21000
   11e44:	ldr	pc, [ip, #696]!	; 0x2b8

00011e48 <__gmon_start__@plt>:
   11e48:	add	ip, pc, #0, 12
   11e4c:	add	ip, ip, #135168	; 0x21000
   11e50:	ldr	pc, [ip, #688]!	; 0x2b0

00011e54 <freopen64@plt>:
   11e54:	add	ip, pc, #0, 12
   11e58:	add	ip, ip, #135168	; 0x21000
   11e5c:	ldr	pc, [ip, #680]!	; 0x2a8

00011e60 <mnl_cb_run@plt>:
   11e60:	add	ip, pc, #0, 12
   11e64:	add	ip, ip, #135168	; 0x21000
   11e68:	ldr	pc, [ip, #672]!	; 0x2a0

00011e6c <getopt_long@plt>:
   11e6c:	add	ip, pc, #0, 12
   11e70:	add	ip, ip, #135168	; 0x21000
   11e74:	ldr	pc, [ip, #664]!	; 0x298

00011e78 <__ctype_b_loc@plt>:
   11e78:	add	ip, pc, #0, 12
   11e7c:	add	ip, ip, #135168	; 0x21000
   11e80:	ldr	pc, [ip, #656]!	; 0x290

00011e84 <exit@plt>:
   11e84:	add	ip, pc, #0, 12
   11e88:	add	ip, ip, #135168	; 0x21000
   11e8c:	ldr	pc, [ip, #648]!	; 0x288

00011e90 <strtoul@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #135168	; 0x21000
   11e98:	ldr	pc, [ip, #640]!	; 0x280

00011e9c <strlen@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #135168	; 0x21000
   11ea4:	ldr	pc, [ip, #632]!	; 0x278

00011ea8 <strchr@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #135168	; 0x21000
   11eb0:	ldr	pc, [ip, #624]!	; 0x270

00011eb4 <mnl_socket_get_portid@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #135168	; 0x21000
   11ebc:	ldr	pc, [ip, #616]!	; 0x268

00011ec0 <__errno_location@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #135168	; 0x21000
   11ec8:	ldr	pc, [ip, #608]!	; 0x260

00011ecc <cap_get_proc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #135168	; 0x21000
   11ed4:	ldr	pc, [ip, #600]!	; 0x258

00011ed8 <__sprintf_chk@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #135168	; 0x21000
   11ee0:	ldr	pc, [ip, #592]!	; 0x250

00011ee4 <snprintf@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #135168	; 0x21000
   11eec:	ldr	pc, [ip, #584]!	; 0x248

00011ef0 <bind@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #135168	; 0x21000
   11ef8:	ldr	pc, [ip, #576]!	; 0x240

00011efc <memset@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #135168	; 0x21000
   11f04:	ldr	pc, [ip, #568]!	; 0x238

00011f08 <putchar@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #135168	; 0x21000
   11f10:	ldr	pc, [ip, #560]!	; 0x230

00011f14 <strncpy@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #135168	; 0x21000
   11f1c:	ldr	pc, [ip, #552]!	; 0x228

00011f20 <fscanf@plt>:
   11f20:	add	ip, pc, #0, 12
   11f24:	add	ip, ip, #135168	; 0x21000
   11f28:	ldr	pc, [ip, #544]!	; 0x220

00011f2c <strtoull@plt>:
   11f2c:	add	ip, pc, #0, 12
   11f30:	add	ip, ip, #135168	; 0x21000
   11f34:	ldr	pc, [ip, #536]!	; 0x218

00011f38 <mnl_attr_validate@plt>:
   11f38:	add	ip, pc, #0, 12
   11f3c:	add	ip, ip, #135168	; 0x21000
   11f40:	ldr	pc, [ip, #528]!	; 0x210

00011f44 <__printf_chk@plt>:
   11f44:	add	ip, pc, #0, 12
   11f48:	add	ip, ip, #135168	; 0x21000
   11f4c:	ldr	pc, [ip, #520]!	; 0x208

00011f50 <statvfs64@plt>:
   11f50:	add	ip, pc, #0, 12
   11f54:	add	ip, ip, #135168	; 0x21000
   11f58:	ldr	pc, [ip, #512]!	; 0x200

00011f5c <strtod@plt>:
   11f5c:	add	ip, pc, #0, 12
   11f60:	add	ip, ip, #135168	; 0x21000
   11f64:	ldr	pc, [ip, #504]!	; 0x1f8

00011f68 <fileno@plt>:
   11f68:	add	ip, pc, #0, 12
   11f6c:	add	ip, ip, #135168	; 0x21000
   11f70:	ldr	pc, [ip, #496]!	; 0x1f0

00011f74 <__fprintf_chk@plt>:
   11f74:	add	ip, pc, #0, 12
   11f78:	add	ip, ip, #135168	; 0x21000
   11f7c:	ldr	pc, [ip, #488]!	; 0x1e8

00011f80 <mnl_attr_get_str@plt>:
   11f80:	add	ip, pc, #0, 12
   11f84:	add	ip, ip, #135168	; 0x21000
   11f88:	ldr	pc, [ip, #480]!	; 0x1e0

00011f8c <mnl_attr_type_valid@plt>:
   11f8c:	add	ip, pc, #0, 12
   11f90:	add	ip, ip, #135168	; 0x21000
   11f94:	ldr	pc, [ip, #472]!	; 0x1d8

00011f98 <fclose@plt>:
   11f98:	add	ip, pc, #0, 12
   11f9c:	add	ip, ip, #135168	; 0x21000
   11fa0:	ldr	pc, [ip, #464]!	; 0x1d0

00011fa4 <mnl_attr_get_type@plt>:
   11fa4:	add	ip, pc, #0, 12
   11fa8:	add	ip, ip, #135168	; 0x21000
   11fac:	ldr	pc, [ip, #456]!	; 0x1c8

00011fb0 <mnl_nlmsg_get_payload_len@plt>:
   11fb0:	add	ip, pc, #0, 12
   11fb4:	add	ip, ip, #135168	; 0x21000
   11fb8:	ldr	pc, [ip, #448]!	; 0x1c0

00011fbc <__fread_chk@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #135168	; 0x21000
   11fc4:	ldr	pc, [ip, #440]!	; 0x1b8

00011fc8 <strtok@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #135168	; 0x21000
   11fd0:	ldr	pc, [ip, #432]!	; 0x1b0

00011fd4 <mnl_attr_get_payload@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #135168	; 0x21000
   11fdc:	ldr	pc, [ip, #424]!	; 0x1a8

00011fe0 <mnl_attr_parse_nested@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #135168	; 0x21000
   11fe8:	ldr	pc, [ip, #416]!	; 0x1a0

00011fec <mnl_socket_recvfrom@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #135168	; 0x21000
   11ff4:	ldr	pc, [ip, #408]!	; 0x198

00011ff8 <strrchr@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #135168	; 0x21000
   12000:	ldr	pc, [ip, #400]!	; 0x190

00012004 <mnl_socket_close@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #135168	; 0x21000
   1200c:	ldr	pc, [ip, #392]!	; 0x188

00012010 <cap_clear@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #135168	; 0x21000
   12018:	ldr	pc, [ip, #384]!	; 0x180

0001201c <fputc@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #135168	; 0x21000
   12024:	ldr	pc, [ip, #376]!	; 0x178

00012028 <mnl_nlmsg_get_payload@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #135168	; 0x21000
   12030:	ldr	pc, [ip, #368]!	; 0x170

00012034 <sscanf@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #135168	; 0x21000
   1203c:	ldr	pc, [ip, #360]!	; 0x168

00012040 <readdir64@plt>:
   12040:	add	ip, pc, #0, 12
   12044:	add	ip, ip, #135168	; 0x21000
   12048:	ldr	pc, [ip, #352]!	; 0x160

0001204c <cap_free@plt>:
   1204c:	add	ip, pc, #0, 12
   12050:	add	ip, ip, #135168	; 0x21000
   12054:	ldr	pc, [ip, #344]!	; 0x158

00012058 <mnl_attr_get_u32@plt>:
   12058:	add	ip, pc, #0, 12
   1205c:	add	ip, ip, #135168	; 0x21000
   12060:	ldr	pc, [ip, #336]!	; 0x150

00012064 <putc@plt>:
   12064:	add	ip, pc, #0, 12
   12068:	add	ip, ip, #135168	; 0x21000
   1206c:	ldr	pc, [ip, #328]!	; 0x148

00012070 <getsockname@plt>:
   12070:	add	ip, pc, #0, 12
   12074:	add	ip, ip, #135168	; 0x21000
   12078:	ldr	pc, [ip, #320]!	; 0x140

0001207c <recvmsg@plt>:
   1207c:	add	ip, pc, #0, 12
   12080:	add	ip, ip, #135168	; 0x21000
   12084:	ldr	pc, [ip, #312]!	; 0x138

00012088 <fopen64@plt>:
   12088:	add	ip, pc, #0, 12
   1208c:	add	ip, ip, #135168	; 0x21000
   12090:	ldr	pc, [ip, #304]!	; 0x130

00012094 <inet_ntop@plt>:
   12094:	add	ip, pc, #0, 12
   12098:	add	ip, ip, #135168	; 0x21000
   1209c:	ldr	pc, [ip, #296]!	; 0x128

000120a0 <socket@plt>:
   120a0:	add	ip, pc, #0, 12
   120a4:	add	ip, ip, #135168	; 0x21000
   120a8:	ldr	pc, [ip, #288]!	; 0x120

000120ac <mnl_attr_ok@plt>:
   120ac:	add	ip, pc, #0, 12
   120b0:	add	ip, ip, #135168	; 0x21000
   120b4:	ldr	pc, [ip, #280]!	; 0x118

000120b8 <mnl_attr_get_u8@plt>:
   120b8:	add	ip, pc, #0, 12
   120bc:	add	ip, ip, #135168	; 0x21000
   120c0:	ldr	pc, [ip, #272]!	; 0x110

000120c4 <if_nametoindex@plt>:
   120c4:	add	ip, pc, #0, 12
   120c8:	add	ip, ip, #135168	; 0x21000
   120cc:	ldr	pc, [ip, #264]!	; 0x108

000120d0 <isatty@plt>:
   120d0:	add	ip, pc, #0, 12
   120d4:	add	ip, ip, #135168	; 0x21000
   120d8:	ldr	pc, [ip, #256]!	; 0x100

000120dc <fputs@plt>:
   120dc:	add	ip, pc, #0, 12
   120e0:	add	ip, ip, #135168	; 0x21000
   120e4:	ldr	pc, [ip, #248]!	; 0xf8

000120e8 <strncmp@plt>:
   120e8:	add	ip, pc, #0, 12
   120ec:	add	ip, ip, #135168	; 0x21000
   120f0:	ldr	pc, [ip, #240]!	; 0xf0

000120f4 <abort@plt>:
   120f4:	add	ip, pc, #0, 12
   120f8:	add	ip, ip, #135168	; 0x21000
   120fc:	ldr	pc, [ip, #232]!	; 0xe8

00012100 <mnl_attr_get_payload_len@plt>:
   12100:	add	ip, pc, #0, 12
   12104:	add	ip, ip, #135168	; 0x21000
   12108:	ldr	pc, [ip, #224]!	; 0xe0

0001210c <recv@plt>:
   1210c:	add	ip, pc, #0, 12
   12110:	add	ip, ip, #135168	; 0x21000
   12114:	ldr	pc, [ip, #216]!	; 0xd8

00012118 <close@plt>:
   12118:	add	ip, pc, #0, 12
   1211c:	add	ip, ip, #135168	; 0x21000
   12120:	ldr	pc, [ip, #208]!	; 0xd0

00012124 <send@plt>:
   12124:	add	ip, pc, #0, 12
   12128:	add	ip, ip, #135168	; 0x21000
   1212c:	ldr	pc, [ip, #200]!	; 0xc8

00012130 <closedir@plt>:
   12130:	add	ip, pc, #0, 12
   12134:	add	ip, ip, #135168	; 0x21000
   12138:	ldr	pc, [ip, #192]!	; 0xc0

0001213c <__snprintf_chk@plt>:
   1213c:	add	ip, pc, #0, 12
   12140:	add	ip, ip, #135168	; 0x21000
   12144:	ldr	pc, [ip, #184]!	; 0xb8

00012148 <strspn@plt>:
   12148:	add	ip, pc, #0, 12
   1214c:	add	ip, ip, #135168	; 0x21000
   12150:	ldr	pc, [ip, #176]!	; 0xb0

00012154 <__assert_fail@plt>:
   12154:	add	ip, pc, #0, 12
   12158:	add	ip, ip, #135168	; 0x21000
   1215c:	ldr	pc, [ip, #168]!	; 0xa8

00012160 <mount@plt>:
   12160:	add	ip, pc, #0, 12
   12164:	add	ip, ip, #135168	; 0x21000
   12168:	ldr	pc, [ip, #160]!	; 0xa0

Disassembly of section .text:

00012170 <.text>:
   12170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12174:	mov	r5, r1
   12178:	ldr	r9, [pc, #940]	; 1252c <mount@plt+0x3cc>
   1217c:	sub	sp, sp, #100	; 0x64
   12180:	mov	r1, #0
   12184:	ldr	r3, [r9]
   12188:	mov	r2, #60	; 0x3c
   1218c:	mov	r6, r0
   12190:	add	r0, sp, #32
   12194:	mov	r4, r1
   12198:	str	r3, [sp, #92]	; 0x5c
   1219c:	bl	11efc <memset@plt>
   121a0:	ldr	r0, [r5]
   121a4:	bl	11bb4 <basename@plt>
   121a8:	ldr	r8, [pc, #896]	; 12530 <mount@plt+0x3d0>
   121ac:	ldr	r7, [pc, #896]	; 12534 <mount@plt+0x3d4>
   121b0:	mov	fp, r4
   121b4:	str	r4, [sp, #12]
   121b8:	str	r4, [sp, #8]
   121bc:	str	r4, [sp, #16]
   121c0:	str	r4, [sp, #20]
   121c4:	mov	sl, r0
   121c8:	mov	r3, #0
   121cc:	str	r3, [sp]
   121d0:	mov	r2, r7
   121d4:	mov	r3, r8
   121d8:	mov	r1, r5
   121dc:	mov	r0, r6
   121e0:	bl	11e6c <getopt_long@plt>
   121e4:	cmp	r0, #0
   121e8:	blt	123cc <mount@plt+0x26c>
   121ec:	sub	r0, r0, #58	; 0x3a
   121f0:	cmp	r0, #54	; 0x36
   121f4:	ldrls	pc, [pc, r0, lsl #2]
   121f8:	b	12390 <mount@plt+0x230>
   121fc:	andeq	r2, r1, ip, ror #6
   12200:	muleq	r1, r0, r3
   12204:	muleq	r1, r0, r3
   12208:	muleq	r1, r0, r3
   1220c:	muleq	r1, r0, r3
   12210:	muleq	r1, r0, r3
   12214:	muleq	r1, r0, r3
   12218:	muleq	r1, r0, r3
   1221c:	muleq	r1, r0, r3
   12220:	muleq	r1, r0, r3
   12224:	muleq	r1, r0, r3
   12228:	muleq	r1, r0, r3
   1222c:	muleq	r1, r0, r3
   12230:	muleq	r1, r0, r3
   12234:	muleq	r1, r0, r3
   12238:	muleq	r1, r0, r3
   1223c:	muleq	r1, r0, r3
   12240:	muleq	r1, r0, r3
   12244:	muleq	r1, r0, r3
   12248:	muleq	r1, r0, r3
   1224c:	muleq	r1, r0, r3
   12250:	muleq	r1, r0, r3
   12254:	muleq	r1, r0, r3
   12258:	muleq	r1, r0, r3
   1225c:	muleq	r1, r0, r3
   12260:	muleq	r1, r0, r3
   12264:	muleq	r1, r0, r3
   12268:	muleq	r1, r0, r3
   1226c:	andeq	r2, r1, r0, asr r3
   12270:	muleq	r1, r0, r3
   12274:	muleq	r1, r0, r3
   12278:	muleq	r1, r0, r3
   1227c:	muleq	r1, r0, r3
   12280:	muleq	r1, r0, r3
   12284:	muleq	r1, r0, r3
   12288:	muleq	r1, r0, r3
   1228c:	muleq	r1, r0, r3
   12290:	muleq	r1, r0, r3
   12294:	muleq	r1, r0, r3
   12298:	muleq	r1, r0, r3
   1229c:	andeq	r2, r1, r0, asr #6
   122a0:	muleq	r1, r0, r3
   122a4:	andeq	r2, r1, r0, lsr r3
   122a8:	muleq	r1, r0, r3
   122ac:	andeq	r2, r1, r8, lsr #6
   122b0:	muleq	r1, r0, r3
   122b4:	strdeq	r2, [r1], -r0
   122b8:	muleq	r1, r0, r3
   122bc:	andeq	r2, r1, r4, ror #5
   122c0:	muleq	r1, r0, r3
   122c4:	muleq	r1, r0, r3
   122c8:	muleq	r1, r0, r3
   122cc:	muleq	r1, r0, r3
   122d0:	muleq	r1, r0, r3
   122d4:	ldrdeq	r2, [r1], -r8
   122d8:	mov	r3, #1
   122dc:	str	r3, [sp, #8]
   122e0:	b	121c8 <mount@plt+0x68>
   122e4:	mov	r3, #1
   122e8:	str	r3, [sp, #12]
   122ec:	b	121c8 <mount@plt+0x68>
   122f0:	ldr	r2, [pc, #576]	; 12538 <mount@plt+0x3d8>
   122f4:	str	sl, [sp]
   122f8:	mov	r3, sl
   122fc:	ldr	r0, [r2]
   12300:	mov	r1, #1
   12304:	ldr	r2, [pc, #560]	; 1253c <mount@plt+0x3dc>
   12308:	bl	11f74 <__fprintf_chk@plt>
   1230c:	mov	r0, #0
   12310:	ldr	r2, [sp, #92]	; 0x5c
   12314:	ldr	r3, [r9]
   12318:	cmp	r2, r3
   1231c:	bne	12508 <mount@plt+0x3a8>
   12320:	add	sp, sp, #100	; 0x64
   12324:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12328:	mov	r4, #1
   1232c:	b	121c8 <mount@plt+0x68>
   12330:	cmp	fp, #0
   12334:	moveq	fp, #1
   12338:	strne	fp, [sp, #20]
   1233c:	b	121c8 <mount@plt+0x68>
   12340:	ldr	r3, [pc, #504]	; 12540 <mount@plt+0x3e0>
   12344:	ldr	r3, [r3]
   12348:	str	r3, [sp, #16]
   1234c:	b	121c8 <mount@plt+0x68>
   12350:	mov	r2, sl
   12354:	ldr	r3, [pc, #488]	; 12544 <mount@plt+0x3e4>
   12358:	ldr	r1, [pc, #488]	; 12548 <mount@plt+0x3e8>
   1235c:	mov	r0, #1
   12360:	bl	11f44 <__printf_chk@plt>
   12364:	mov	r0, #0
   12368:	b	12310 <mount@plt+0x1b0>
   1236c:	ldr	r1, [pc, #472]	; 1254c <mount@plt+0x3ec>
   12370:	ldr	r3, [pc, #472]	; 12550 <mount@plt+0x3f0>
   12374:	ldr	r2, [pc, #472]	; 12554 <mount@plt+0x3f4>
   12378:	ldr	r0, [r1]
   1237c:	ldr	r3, [r3]
   12380:	mov	r1, #1
   12384:	bl	11f74 <__fprintf_chk@plt>
   12388:	mov	r0, #1
   1238c:	b	12310 <mount@plt+0x1b0>
   12390:	ldr	r3, [pc, #436]	; 1254c <mount@plt+0x3ec>
   12394:	mov	r2, #16
   12398:	mov	r1, #1
   1239c:	ldr	r3, [r3]
   123a0:	ldr	r0, [pc, #432]	; 12558 <mount@plt+0x3f8>
   123a4:	bl	11d40 <fwrite@plt>
   123a8:	ldr	r2, [pc, #392]	; 12538 <mount@plt+0x3d8>
   123ac:	str	sl, [sp]
   123b0:	mov	r3, sl
   123b4:	ldr	r0, [r2]
   123b8:	mov	r1, #1
   123bc:	ldr	r2, [pc, #376]	; 1253c <mount@plt+0x3dc>
   123c0:	bl	11f74 <__fprintf_chk@plt>
   123c4:	mov	r0, #1
   123c8:	b	12310 <mount@plt+0x1b0>
   123cc:	ldr	r0, [sp, #12]
   123d0:	ldr	r3, [sp, #20]
   123d4:	ldr	r1, [pc, #384]	; 1255c <mount@plt+0x3fc>
   123d8:	cmp	r0, #0
   123dc:	strb	r0, [sp, #80]	; 0x50
   123e0:	ldr	r0, [sp, #8]
   123e4:	add	r2, sp, #48	; 0x30
   123e8:	strb	r3, [sp, #45]	; 0x2d
   123ec:	add	r3, sp, #84	; 0x54
   123f0:	strb	fp, [sp, #44]	; 0x2c
   123f4:	strb	r0, [sp, #81]	; 0x51
   123f8:	str	sl, [sp, #40]	; 0x28
   123fc:	ldr	r8, [r1]
   12400:	str	r2, [sp, #48]	; 0x30
   12404:	str	r2, [sp, #52]	; 0x34
   12408:	str	r3, [sp, #84]	; 0x54
   1240c:	str	r3, [sp, #88]	; 0x58
   12410:	beq	12434 <mount@plt+0x2d4>
   12414:	ldr	r3, [pc, #284]	; 12538 <mount@plt+0x3d8>
   12418:	ldr	r0, [r3]
   1241c:	bl	1b47c <mount@plt+0x931c>
   12420:	cmp	r0, #0
   12424:	str	r0, [sp, #76]	; 0x4c
   12428:	beq	1250c <mount@plt+0x3ac>
   1242c:	ldrb	r1, [sp, #81]	; 0x51
   12430:	bl	1b510 <mount@plt+0x93b0>
   12434:	mov	r0, #30
   12438:	bl	11cc8 <sysconf@plt>
   1243c:	cmp	r0, #8192	; 0x2000
   12440:	movge	r0, #8192	; 0x2000
   12444:	blt	124e4 <mount@plt+0x384>
   12448:	bl	11df4 <malloc@plt>
   1244c:	cmp	r0, #0
   12450:	str	r0, [sp, #72]	; 0x48
   12454:	mvneq	r7, #11
   12458:	beq	124b8 <mount@plt+0x358>
   1245c:	ldr	r3, [pc, #252]	; 12560 <mount@plt+0x400>
   12460:	add	r2, sp, #28
   12464:	mov	r1, #1
   12468:	add	r0, sp, #32
   1246c:	bl	131d4 <mount@plt+0x1074>
   12470:	add	r0, sp, #32
   12474:	bl	13218 <mount@plt+0x10b8>
   12478:	subs	r7, r0, #0
   1247c:	bne	124b8 <mount@plt+0x358>
   12480:	add	r2, sp, #32
   12484:	ldr	r3, [sp, #28]
   12488:	ldr	r1, [pc, #212]	; 12564 <mount@plt+0x404>
   1248c:	mov	r0, r2
   12490:	bl	132e4 <mount@plt+0x1184>
   12494:	subs	r7, r0, #0
   12498:	bne	124b8 <mount@plt+0x358>
   1249c:	ldr	r1, [sp, #16]
   124a0:	cmp	r1, #0
   124a4:	beq	124f0 <mount@plt+0x390>
   124a8:	mov	r2, r4
   124ac:	add	r0, sp, #32
   124b0:	bl	12764 <mount@plt+0x604>
   124b4:	mov	r7, r0
   124b8:	ldrb	r3, [sp, #80]	; 0x50
   124bc:	cmp	r3, #0
   124c0:	bne	124d8 <mount@plt+0x378>
   124c4:	add	r0, sp, #32
   124c8:	bl	12fd8 <mount@plt+0xe78>
   124cc:	adds	r0, r7, #0
   124d0:	movne	r0, #1
   124d4:	b	12310 <mount@plt+0x1b0>
   124d8:	add	r0, sp, #76	; 0x4c
   124dc:	bl	1b4a4 <mount@plt+0x9344>
   124e0:	b	124c4 <mount@plt+0x364>
   124e4:	mov	r0, #30
   124e8:	bl	11cc8 <sysconf@plt>
   124ec:	b	12448 <mount@plt+0x2e8>
   124f0:	add	r2, r5, r8, lsl #2
   124f4:	sub	r1, r6, r8
   124f8:	add	r0, sp, #32
   124fc:	bl	12694 <mount@plt+0x534>
   12500:	mov	r7, r0
   12504:	b	124b8 <mount@plt+0x358>
   12508:	bl	11ca4 <__stack_chk_fail@plt>
   1250c:	ldr	r3, [pc, #56]	; 1254c <mount@plt+0x3ec>
   12510:	mov	r2, #29
   12514:	mov	r1, #1
   12518:	ldr	r3, [r3]
   1251c:	ldr	r0, [pc, #68]	; 12568 <mount@plt+0x408>
   12520:	bl	11d40 <fwrite@plt>
   12524:	mvn	r7, #11
   12528:	b	124b8 <mount@plt+0x358>
   1252c:	andeq	r2, r3, r8, ror #29
   12530:	andeq	pc, r1, r8, lsr #21
   12534:			; <UNDEFINED> instruction: 0x0001fcb0
   12538:	andeq	r3, r3, r4, ror #4
   1253c:	andeq	pc, r1, r8, lsr #22
   12540:	andeq	r3, r3, r8, ror #4
   12544:	andeq	pc, r1, r0, lsr #21
   12548:	andeq	pc, r1, ip, asr ip	; <UNPREDICTABLE>
   1254c:	andeq	r3, r3, r8, asr r2
   12550:	andeq	r3, r3, r0, asr r2
   12554:	andeq	pc, r1, r8, ror ip	; <UNPREDICTABLE>
   12558:	muleq	r1, ip, ip
   1255c:	andeq	r3, r3, r8, asr #4
   12560:	andeq	r0, r0, r5, lsl #6
   12564:			; <UNDEFINED> instruction: 0x00012eb0
   12568:			; <UNDEFINED> instruction: 0x0001fcbc
   1256c:	mov	fp, #0
   12570:	mov	lr, #0
   12574:	pop	{r1}		; (ldr r1, [sp], #4)
   12578:	mov	r2, sp
   1257c:	push	{r2}		; (str r2, [sp, #-4]!)
   12580:	push	{r0}		; (str r0, [sp, #-4]!)
   12584:	ldr	ip, [pc, #16]	; 1259c <mount@plt+0x43c>
   12588:	push	{ip}		; (str ip, [sp, #-4]!)
   1258c:	ldr	r0, [pc, #12]	; 125a0 <mount@plt+0x440>
   12590:	ldr	r3, [pc, #12]	; 125a4 <mount@plt+0x444>
   12594:	bl	11e00 <__libc_start_main@plt>
   12598:	bl	120f4 <abort@plt>
   1259c:	muleq	r1, r0, sl
   125a0:	andeq	r2, r1, r0, ror r1
   125a4:	andeq	pc, r1, r0, lsr sl	; <UNPREDICTABLE>
   125a8:	ldr	r3, [pc, #20]	; 125c4 <mount@plt+0x464>
   125ac:	ldr	r2, [pc, #20]	; 125c8 <mount@plt+0x468>
   125b0:	add	r3, pc, r3
   125b4:	ldr	r2, [r3, r2]
   125b8:	cmp	r2, #0
   125bc:	bxeq	lr
   125c0:	b	11e48 <__gmon_start__@plt>
   125c4:	andeq	r0, r2, r8, asr #20
   125c8:	andeq	r0, r0, r4, lsr #4
   125cc:	ldr	r0, [pc, #24]	; 125ec <mount@plt+0x48c>
   125d0:	ldr	r3, [pc, #24]	; 125f0 <mount@plt+0x490>
   125d4:	cmp	r3, r0
   125d8:	bxeq	lr
   125dc:	ldr	r3, [pc, #16]	; 125f4 <mount@plt+0x494>
   125e0:	cmp	r3, #0
   125e4:	bxeq	lr
   125e8:	bx	r3
   125ec:	andeq	r3, r3, r8, asr #4
   125f0:	andeq	r3, r3, r8, asr #4
   125f4:	andeq	r0, r0, r0
   125f8:	ldr	r0, [pc, #36]	; 12624 <mount@plt+0x4c4>
   125fc:	ldr	r1, [pc, #36]	; 12628 <mount@plt+0x4c8>
   12600:	sub	r1, r1, r0
   12604:	asr	r1, r1, #2
   12608:	add	r1, r1, r1, lsr #31
   1260c:	asrs	r1, r1, #1
   12610:	bxeq	lr
   12614:	ldr	r3, [pc, #16]	; 1262c <mount@plt+0x4cc>
   12618:	cmp	r3, #0
   1261c:	bxeq	lr
   12620:	bx	r3
   12624:	andeq	r3, r3, r8, asr #4
   12628:	andeq	r3, r3, r8, asr #4
   1262c:	andeq	r0, r0, r0
   12630:	push	{r4, lr}
   12634:	ldr	r4, [pc, #24]	; 12654 <mount@plt+0x4f4>
   12638:	ldrb	r3, [r4]
   1263c:	cmp	r3, #0
   12640:	popne	{r4, pc}
   12644:	bl	125cc <mount@plt+0x46c>
   12648:	mov	r3, #1
   1264c:	strb	r3, [r4]
   12650:	pop	{r4, pc}
   12654:	andeq	r3, r3, ip, ror #4
   12658:	b	125f8 <mount@plt+0x498>
   1265c:	ldr	r1, [pc, #40]	; 1268c <mount@plt+0x52c>
   12660:	push	{lr}		; (str lr, [sp, #-4]!)
   12664:	sub	sp, sp, #12
   12668:	ldr	r3, [r0, #8]
   1266c:	ldr	r2, [pc, #28]	; 12690 <mount@plt+0x530>
   12670:	str	r3, [sp]
   12674:	ldr	r0, [r1]
   12678:	mov	r1, #1
   1267c:	bl	11f74 <__fprintf_chk@plt>
   12680:	mov	r0, #0
   12684:	add	sp, sp, #12
   12688:	pop	{pc}		; (ldr pc, [sp], #4)
   1268c:	andeq	r3, r3, r4, ror #4
   12690:	andeq	pc, r1, r8, lsr #22
   12694:	push	{r4, r5, r6, r7, r8, r9, lr}
   12698:	sub	sp, sp, #60	; 0x3c
   1269c:	ldr	r5, [pc, #152]	; 1273c <mount@plt+0x5dc>
   126a0:	mov	r4, r0
   126a4:	mov	r6, r1
   126a8:	ldr	r3, [r5]
   126ac:	mov	r9, r2
   126b0:	mov	r1, #0
   126b4:	mov	r2, #48	; 0x30
   126b8:	add	r0, sp, #4
   126bc:	str	r3, [sp, #52]	; 0x34
   126c0:	bl	11efc <memset@plt>
   126c4:	ldr	r3, [pc, #116]	; 12740 <mount@plt+0x5e0>
   126c8:	ldr	r2, [pc, #116]	; 12744 <mount@plt+0x5e4>
   126cc:	str	r6, [r4]
   126d0:	ldr	lr, [pc, #112]	; 12748 <mount@plt+0x5e8>
   126d4:	str	r3, [sp, #8]
   126d8:	str	r3, [sp, #16]
   126dc:	ldr	ip, [pc, #104]	; 1274c <mount@plt+0x5ec>
   126e0:	ldr	r3, [pc, #104]	; 12750 <mount@plt+0x5f0>
   126e4:	ldr	r8, [pc, #104]	; 12754 <mount@plt+0x5f4>
   126e8:	ldr	r7, [pc, #104]	; 12758 <mount@plt+0x5f8>
   126ec:	ldr	r6, [pc, #104]	; 1275c <mount@plt+0x5fc>
   126f0:	str	r2, [sp, #20]
   126f4:	str	r9, [r4, #4]
   126f8:	ldr	r2, [pc, #96]	; 12760 <mount@plt+0x600>
   126fc:	add	r1, sp, #4
   12700:	mov	r0, r4
   12704:	str	r3, [sp, #40]	; 0x28
   12708:	str	r8, [sp, #12]
   1270c:	str	r7, [sp, #24]
   12710:	str	r6, [sp, #28]
   12714:	str	lr, [sp, #32]
   12718:	str	ip, [sp, #36]	; 0x24
   1271c:	bl	13128 <mount@plt+0xfc8>
   12720:	ldr	r2, [sp, #52]	; 0x34
   12724:	ldr	r3, [r5]
   12728:	cmp	r2, r3
   1272c:	bne	12738 <mount@plt+0x5d8>
   12730:	add	sp, sp, #60	; 0x3c
   12734:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12738:	bl	11ca4 <__stack_chk_fail@plt>
   1273c:	andeq	r2, r3, r8, ror #29
   12740:	andeq	r2, r1, ip, asr r6
   12744:	andeq	pc, r1, r0, lsl #24
   12748:	andeq	r4, r1, ip, lsr r9
   1274c:	andeq	pc, r1, r4, lsl #24
   12750:	andeq	r6, r1, r0, lsl sp
   12754:	strdeq	pc, [r1], -r8
   12758:	andeq	r4, r1, ip, lsr r1
   1275c:	andeq	r2, r2, r0, lsl #5
   12760:	andeq	pc, r1, r0, lsl ip	; <UNPREDICTABLE>
   12764:	ldr	r3, [pc, #328]	; 128b4 <mount@plt+0x754>
   12768:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1276c:	sub	sp, sp, #2064	; 0x810
   12770:	sub	sp, sp, #12
   12774:	subs	r8, r1, #0
   12778:	ldr	r1, [r3]
   1277c:	mov	r3, #0
   12780:	mov	r6, r0
   12784:	mov	r9, r2
   12788:	str	r1, [sp, #2068]	; 0x814
   1278c:	str	r3, [sp, #12]
   12790:	str	r3, [sp, #16]
   12794:	ldreq	r4, [pc, #284]	; 128b8 <mount@plt+0x758>
   12798:	beq	127b4 <mount@plt+0x654>
   1279c:	ldr	r1, [pc, #280]	; 128bc <mount@plt+0x75c>
   127a0:	mov	r0, r8
   127a4:	bl	11b9c <strcmp@plt>
   127a8:	ldr	r4, [pc, #264]	; 128b8 <mount@plt+0x758>
   127ac:	cmp	r0, #0
   127b0:	bne	12860 <mount@plt+0x700>
   127b4:	mov	r3, #0
   127b8:	ldr	r7, [pc, #256]	; 128c0 <mount@plt+0x760>
   127bc:	ldr	fp, [pc, #256]	; 128c4 <mount@plt+0x764>
   127c0:	ldr	sl, [pc, #256]	; 128c8 <mount@plt+0x768>
   127c4:	mov	r5, r3
   127c8:	str	r3, [r7]
   127cc:	ldr	r2, [r4]
   127d0:	add	r1, sp, #16
   127d4:	add	r0, sp, #12
   127d8:	bl	19520 <mount@plt+0x73c0>
   127dc:	cmn	r0, #1
   127e0:	beq	12834 <mount@plt+0x6d4>
   127e4:	add	r1, sp, #20
   127e8:	mov	r2, #512	; 0x200
   127ec:	ldr	r0, [sp, #12]
   127f0:	bl	19720 <mount@plt+0x75c0>
   127f4:	subs	r1, r0, #0
   127f8:	beq	127cc <mount@plt+0x66c>
   127fc:	add	r2, sp, #20
   12800:	mov	r0, r6
   12804:	bl	12694 <mount@plt+0x534>
   12808:	subs	r5, r0, #0
   1280c:	beq	127cc <mount@plt+0x66c>
   12810:	ldr	r2, [r7]
   12814:	mov	r3, r8
   12818:	str	r2, [sp]
   1281c:	mov	r1, #1
   12820:	mov	r2, sl
   12824:	ldr	r0, [fp]
   12828:	bl	11f74 <__fprintf_chk@plt>
   1282c:	cmp	r9, #0
   12830:	bne	127cc <mount@plt+0x66c>
   12834:	ldr	r0, [sp, #12]
   12838:	bl	11c14 <free@plt>
   1283c:	ldr	r3, [pc, #112]	; 128b4 <mount@plt+0x754>
   12840:	ldr	r2, [sp, #2068]	; 0x814
   12844:	mov	r0, r5
   12848:	ldr	r3, [r3]
   1284c:	cmp	r2, r3
   12850:	bne	128b0 <mount@plt+0x750>
   12854:	add	sp, sp, #2064	; 0x810
   12858:	add	sp, sp, #12
   1285c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12860:	ldr	r1, [pc, #100]	; 128cc <mount@plt+0x76c>
   12864:	mov	r0, r8
   12868:	ldr	r2, [r4]
   1286c:	bl	11e54 <freopen64@plt>
   12870:	cmp	r0, #0
   12874:	bne	127b4 <mount@plt+0x654>
   12878:	ldr	r3, [pc, #68]	; 128c4 <mount@plt+0x764>
   1287c:	ldr	r5, [r3]
   12880:	bl	11ec0 <__errno_location@plt>
   12884:	mov	r4, r0
   12888:	ldr	r0, [r0]
   1288c:	bl	11e0c <strerror@plt>
   12890:	mov	r3, r8
   12894:	ldr	r2, [pc, #52]	; 128d0 <mount@plt+0x770>
   12898:	mov	r1, #1
   1289c:	str	r0, [sp]
   128a0:	mov	r0, r5
   128a4:	bl	11f74 <__fprintf_chk@plt>
   128a8:	ldr	r5, [r4]
   128ac:	b	1283c <mount@plt+0x6dc>
   128b0:	bl	11ca4 <__stack_chk_fail@plt>
   128b4:	andeq	r2, r3, r8, ror #29
   128b8:	andeq	r3, r3, r0, ror #4
   128bc:	andeq	pc, r1, r8, lsl ip	; <UNPREDICTABLE>
   128c0:	andeq	r5, r3, r8, lsr #17
   128c4:	andeq	r3, r3, r8, asr r2
   128c8:	andeq	pc, r1, r4, asr #24
   128cc:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   128d0:	andeq	pc, r1, ip, lsl ip	; <UNPREDICTABLE>
   128d4:	push	{r4, r5, r6, lr}
   128d8:	mov	r4, r1
   128dc:	mov	r6, r0
   128e0:	bl	11e9c <strlen@plt>
   128e4:	mov	r5, r0
   128e8:	mov	r0, r4
   128ec:	bl	11e9c <strlen@plt>
   128f0:	cmp	r5, r0
   128f4:	bhi	1290c <mount@plt+0x7ac>
   128f8:	mov	r2, r5
   128fc:	mov	r1, r4
   12900:	mov	r0, r6
   12904:	pop	{r4, r5, r6, lr}
   12908:	b	120e8 <strncmp@plt>
   1290c:	mvn	r0, #0
   12910:	pop	{r4, r5, r6, pc}
   12914:	push	{r4, r5, r6, lr}
   12918:	mov	r6, r1
   1291c:	mov	r1, #59	; 0x3b
   12920:	mov	r4, r0
   12924:	bl	11f8c <mnl_attr_type_valid@plt>
   12928:	cmp	r0, #0
   1292c:	blt	12960 <mount@plt+0x800>
   12930:	mov	r0, r4
   12934:	bl	11fa4 <mnl_attr_get_type@plt>
   12938:	ldr	r3, [pc, #48]	; 12970 <mount@plt+0x810>
   1293c:	mov	r5, r0
   12940:	mov	r0, r4
   12944:	ldr	r1, [r3, r5, lsl #2]
   12948:	bl	11f38 <mnl_attr_validate@plt>
   1294c:	cmp	r0, #0
   12950:	blt	12968 <mount@plt+0x808>
   12954:	str	r4, [r6, r5, lsl #2]
   12958:	mov	r0, #1
   1295c:	pop	{r4, r5, r6, pc}
   12960:	mov	r0, #1
   12964:	pop	{r4, r5, r6, pc}
   12968:	mvn	r0, #0
   1296c:	pop	{r4, r5, r6, pc}
   12970:	andeq	pc, r1, ip, lsl #26
   12974:	ldrb	r3, [r1]
   12978:	push	{r4, lr}
   1297c:	mov	r4, r1
   12980:	cmp	r3, #0
   12984:	beq	129b4 <mount@plt+0x854>
   12988:	bl	1b6b8 <mount@plt+0x9558>
   1298c:	ldrb	r3, [r4]
   12990:	cmp	r3, #0
   12994:	popne	{r4, pc}
   12998:	ldr	r3, [pc, #40]	; 129c8 <mount@plt+0x868>
   1299c:	mov	r2, #4
   129a0:	mov	r1, #1
   129a4:	ldr	r3, [r3]
   129a8:	ldr	r0, [pc, #28]	; 129cc <mount@plt+0x86c>
   129ac:	pop	{r4, lr}
   129b0:	b	11d40 <fwrite@plt>
   129b4:	ldr	r3, [pc, #12]	; 129c8 <mount@plt+0x868>
   129b8:	mov	r0, #10
   129bc:	ldr	r1, [r3]
   129c0:	bl	1201c <fputc@plt>
   129c4:	b	1298c <mount@plt+0x82c>
   129c8:	andeq	r3, r3, r4, ror #4
   129cc:	strdeq	pc, [r1], -ip
   129d0:	ldr	r0, [r0]
   129d4:	bx	lr
   129d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129dc:	sub	sp, sp, #44	; 0x2c
   129e0:	subs	r3, r1, #0
   129e4:	str	r3, [sp, #8]
   129e8:	ldr	r3, [pc, #580]	; 12c34 <mount@plt+0xad4>
   129ec:	ldr	r3, [r3]
   129f0:	str	r3, [sp, #36]	; 0x24
   129f4:	beq	12b8c <mount@plt+0xa2c>
   129f8:	ldr	r9, [r0]
   129fc:	mov	r6, r0
   12a00:	cmp	r9, #0
   12a04:	beq	12b8c <mount@plt+0xa2c>
   12a08:	cmp	r9, #1
   12a0c:	beq	12c0c <mount@plt+0xaac>
   12a10:	ands	r9, r9, #1
   12a14:	bne	12bec <mount@plt+0xa8c>
   12a18:	ldr	r3, [sp, #8]
   12a1c:	mov	r8, r9
   12a20:	add	r3, r3, #512	; 0x200
   12a24:	str	r3, [sp, #12]
   12a28:	ldr	r3, [pc, #520]	; 12c38 <mount@plt+0xad8>
   12a2c:	ldr	lr, [r6, #4]
   12a30:	add	ip, sp, #20
   12a34:	ldm	r3, {r0, r1, r2, r3}
   12a38:	ldr	r7, [lr, r9]!
   12a3c:	ldr	sl, [lr, #4]
   12a40:	stmia	ip!, {r0, r1, r2}
   12a44:	mov	r1, #16
   12a48:	mov	r0, #1
   12a4c:	strb	r3, [ip]
   12a50:	bl	11b6c <calloc@plt>
   12a54:	subs	r4, r0, #0
   12a58:	beq	12be4 <mount@plt+0xa84>
   12a5c:	ldr	fp, [sp, #8]
   12a60:	b	12a84 <mount@plt+0x924>
   12a64:	mov	r0, r7
   12a68:	bl	128d4 <mount@plt+0x774>
   12a6c:	cmp	r0, #0
   12a70:	beq	12ad0 <mount@plt+0x970>
   12a74:	ldr	r3, [sp, #12]
   12a78:	add	fp, fp, #8
   12a7c:	cmp	fp, r3
   12a80:	beq	12a90 <mount@plt+0x930>
   12a84:	ldr	r1, [fp]
   12a88:	cmp	r1, #0
   12a8c:	bne	12a64 <mount@plt+0x904>
   12a90:	ldr	r1, [pc, #420]	; 12c3c <mount@plt+0xadc>
   12a94:	mov	r3, r7
   12a98:	ldr	r2, [pc, #416]	; 12c40 <mount@plt+0xae0>
   12a9c:	ldr	r0, [r1]
   12aa0:	mov	r1, #1
   12aa4:	bl	11f74 <__fprintf_chk@plt>
   12aa8:	mov	r0, r4
   12aac:	bl	11c14 <free@plt>
   12ab0:	mvn	r0, #21
   12ab4:	ldr	r3, [pc, #376]	; 12c34 <mount@plt+0xad4>
   12ab8:	ldr	r2, [sp, #36]	; 0x24
   12abc:	ldr	r3, [r3]
   12ac0:	cmp	r2, r3
   12ac4:	bne	12c30 <mount@plt+0xad0>
   12ac8:	add	sp, sp, #44	; 0x2c
   12acc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ad0:	ldrb	r3, [fp, #4]
   12ad4:	mov	r5, r0
   12ad8:	cmp	r3, #0
   12adc:	beq	12b00 <mount@plt+0x9a0>
   12ae0:	add	r1, sp, #20
   12ae4:	mov	r0, sl
   12ae8:	bl	12148 <strspn@plt>
   12aec:	mov	fp, r0
   12af0:	mov	r0, sl
   12af4:	bl	11e9c <strlen@plt>
   12af8:	cmp	fp, r0
   12afc:	bne	12b94 <mount@plt+0xa34>
   12b00:	mov	r0, r7
   12b04:	bl	11c98 <strdup@plt>
   12b08:	mov	fp, r0
   12b0c:	str	r0, [r4, #8]
   12b10:	mov	r0, sl
   12b14:	bl	11c98 <strdup@plt>
   12b18:	cmp	fp, #0
   12b1c:	mov	r7, r0
   12b20:	str	r0, [r4, #12]
   12b24:	beq	12bc4 <mount@plt+0xa64>
   12b28:	cmp	r0, #0
   12b2c:	bne	12b50 <mount@plt+0x9f0>
   12b30:	b	12bc4 <mount@plt+0xa64>
   12b34:	bl	11e3c <__ctype_tolower_loc@plt>
   12b38:	ldrb	r2, [r7, r5]
   12b3c:	ldr	r3, [r0]
   12b40:	ldr	r3, [r3, r2, lsl #2]
   12b44:	strb	r3, [r7, r5]
   12b48:	ldr	r7, [r4, #12]
   12b4c:	add	r5, r5, #1
   12b50:	mov	r0, r7
   12b54:	bl	11e9c <strlen@plt>
   12b58:	cmp	r0, r5
   12b5c:	bhi	12b34 <mount@plt+0x9d4>
   12b60:	ldr	r2, [r6]
   12b64:	ldr	r3, [r6, #56]	; 0x38
   12b68:	add	r8, r8, #2
   12b6c:	cmp	r8, r2
   12b70:	add	r2, r6, #52	; 0x34
   12b74:	str	r3, [r4, #4]
   12b78:	str	r4, [r6, #56]	; 0x38
   12b7c:	str	r2, [r4]
   12b80:	add	r9, r9, #8
   12b84:	str	r4, [r3]
   12b88:	bne	12a28 <mount@plt+0x8c8>
   12b8c:	mov	r0, #0
   12b90:	b	12ab4 <mount@plt+0x954>
   12b94:	ldr	r2, [pc, #160]	; 12c3c <mount@plt+0xadc>
   12b98:	add	r3, sp, #20
   12b9c:	str	r3, [sp]
   12ba0:	mov	r1, #1
   12ba4:	mov	r3, r7
   12ba8:	ldr	r0, [r2]
   12bac:	ldr	r2, [pc, #144]	; 12c44 <mount@plt+0xae4>
   12bb0:	bl	11f74 <__fprintf_chk@plt>
   12bb4:	mov	r0, r4
   12bb8:	bl	11c14 <free@plt>
   12bbc:	mvn	r0, #21
   12bc0:	b	12ab4 <mount@plt+0x954>
   12bc4:	mov	r0, r7
   12bc8:	str	fp, [sp, #8]
   12bcc:	bl	11c14 <free@plt>
   12bd0:	ldr	r3, [sp, #8]
   12bd4:	mov	r0, r3
   12bd8:	bl	11c14 <free@plt>
   12bdc:	mov	r0, r4
   12be0:	bl	11c14 <free@plt>
   12be4:	mvn	r0, #11
   12be8:	b	12ab4 <mount@plt+0x954>
   12bec:	ldr	r3, [pc, #72]	; 12c3c <mount@plt+0xadc>
   12bf0:	mov	r2, #36	; 0x24
   12bf4:	mov	r1, #1
   12bf8:	ldr	r3, [r3]
   12bfc:	ldr	r0, [pc, #68]	; 12c48 <mount@plt+0xae8>
   12c00:	bl	11d40 <fwrite@plt>
   12c04:	mvn	r0, #21
   12c08:	b	12ab4 <mount@plt+0x954>
   12c0c:	ldr	r3, [r0, #4]
   12c10:	ldr	r2, [pc, #36]	; 12c3c <mount@plt+0xadc>
   12c14:	mov	r1, r9
   12c18:	ldr	r3, [r3]
   12c1c:	ldr	r0, [r2]
   12c20:	ldr	r2, [pc, #36]	; 12c4c <mount@plt+0xaec>
   12c24:	bl	11f74 <__fprintf_chk@plt>
   12c28:	mvn	r0, #21
   12c2c:	b	12ab4 <mount@plt+0x954>
   12c30:	bl	11ca4 <__stack_chk_fail@plt>
   12c34:	andeq	r2, r3, r8, ror #29
   12c38:	andeq	pc, r1, r8, lsr #29
   12c3c:	andeq	r3, r3, r8, asr r2
   12c40:	andeq	pc, r1, r8, lsl #29
   12c44:	andeq	pc, r1, r0, ror #28
   12c48:	andeq	pc, r1, r8, lsr lr	; <UNPREDICTABLE>
   12c4c:	andeq	pc, r1, r4, lsl #28
   12c50:	push	{r4, r5, r6, lr}
   12c54:	mov	r5, r0
   12c58:	ldr	r4, [r5, #52]!	; 0x34
   12c5c:	cmp	r4, r5
   12c60:	beq	12c94 <mount@plt+0xb34>
   12c64:	mov	r6, r1
   12c68:	b	12c78 <mount@plt+0xb18>
   12c6c:	ldr	r4, [r4]
   12c70:	cmp	r4, r5
   12c74:	beq	12c94 <mount@plt+0xb34>
   12c78:	mov	r1, r6
   12c7c:	ldr	r0, [r4, #8]
   12c80:	bl	128d4 <mount@plt+0x774>
   12c84:	cmp	r0, #0
   12c88:	bne	12c6c <mount@plt+0xb0c>
   12c8c:	mov	r0, #1
   12c90:	pop	{r4, r5, r6, pc}
   12c94:	mov	r0, #0
   12c98:	pop	{r4, r5, r6, pc}
   12c9c:	push	{r4, r5, r6, r7, r8, lr}
   12ca0:	mov	r5, r0
   12ca4:	ldr	r4, [r5, #52]!	; 0x34
   12ca8:	cmp	r4, r5
   12cac:	beq	12d4c <mount@plt+0xbec>
   12cb0:	mov	r7, r1
   12cb4:	mov	r6, r2
   12cb8:	b	12cc8 <mount@plt+0xb68>
   12cbc:	ldr	r4, [r4]
   12cc0:	cmp	r4, r5
   12cc4:	beq	12d4c <mount@plt+0xbec>
   12cc8:	mov	r1, r7
   12ccc:	ldr	r0, [r4, #8]
   12cd0:	bl	128d4 <mount@plt+0x774>
   12cd4:	cmp	r0, #0
   12cd8:	bne	12cbc <mount@plt+0xb5c>
   12cdc:	ldr	r0, [r4, #12]
   12ce0:	bl	11c98 <strdup@plt>
   12ce4:	subs	r8, r0, #0
   12ce8:	beq	12d6c <mount@plt+0xc0c>
   12cec:	ldr	r1, [pc, #152]	; 12d8c <mount@plt+0xc2c>
   12cf0:	bl	11fc8 <strtok@plt>
   12cf4:	subs	r4, r0, #0
   12cf8:	beq	12d44 <mount@plt+0xbe4>
   12cfc:	ldr	r7, [pc, #136]	; 12d8c <mount@plt+0xc2c>
   12d00:	mov	r0, r4
   12d04:	bl	11e9c <strlen@plt>
   12d08:	mov	r5, r0
   12d0c:	mov	r0, r6
   12d10:	bl	11e9c <strlen@plt>
   12d14:	mov	r1, r6
   12d18:	cmp	r5, r0
   12d1c:	mov	r0, r4
   12d20:	bne	12d30 <mount@plt+0xbd0>
   12d24:	bl	11cf8 <strcasecmp@plt>
   12d28:	cmp	r0, #0
   12d2c:	beq	12d64 <mount@plt+0xc04>
   12d30:	mov	r1, r7
   12d34:	mov	r0, #0
   12d38:	bl	11fc8 <strtok@plt>
   12d3c:	subs	r4, r0, #0
   12d40:	bne	12d00 <mount@plt+0xba0>
   12d44:	mov	r4, #1
   12d48:	b	12d54 <mount@plt+0xbf4>
   12d4c:	mov	r8, #0
   12d50:	mov	r4, r8
   12d54:	mov	r0, r8
   12d58:	bl	11c14 <free@plt>
   12d5c:	mov	r0, r4
   12d60:	pop	{r4, r5, r6, r7, r8, pc}
   12d64:	mov	r4, r0
   12d68:	b	12d54 <mount@plt+0xbf4>
   12d6c:	ldr	r3, [pc, #28]	; 12d90 <mount@plt+0xc30>
   12d70:	mov	r2, #56	; 0x38
   12d74:	mov	r1, #1
   12d78:	ldr	r3, [r3]
   12d7c:	ldr	r0, [pc, #16]	; 12d94 <mount@plt+0xc34>
   12d80:	bl	11d40 <fwrite@plt>
   12d84:	mov	r4, #1
   12d88:	b	12d5c <mount@plt+0xbfc>
   12d8c:	strdeq	pc, [r1], -r4
   12d90:	andeq	r3, r3, r8, asr r2
   12d94:			; <UNDEFINED> instruction: 0x0001feb8
   12d98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d9c:	mov	r6, r0
   12da0:	ldr	r8, [pc, #260]	; 12eac <mount@plt+0xd4c>
   12da4:	ldr	r5, [r6, #52]!	; 0x34
   12da8:	sub	sp, sp, #8
   12dac:	ldr	r3, [r8]
   12db0:	cmp	r6, r5
   12db4:	str	r3, [sp, #4]
   12db8:	movne	r9, r1
   12dbc:	movne	r7, r2
   12dc0:	bne	12dd4 <mount@plt+0xc74>
   12dc4:	b	12e48 <mount@plt+0xce8>
   12dc8:	ldr	r5, [r5]
   12dcc:	cmp	r5, r6
   12dd0:	beq	12e48 <mount@plt+0xce8>
   12dd4:	ldr	r4, [r5, #12]
   12dd8:	mov	r1, r9
   12ddc:	ldr	r0, [r5, #8]
   12de0:	str	r4, [sp]
   12de4:	bl	128d4 <mount@plt+0x774>
   12de8:	cmp	r0, #0
   12dec:	bne	12dc8 <mount@plt+0xc68>
   12df0:	mov	r5, r0
   12df4:	mov	r9, r0
   12df8:	mov	r6, r0
   12dfc:	ldrb	sl, [r4]
   12e00:	cmp	sl, #0
   12e04:	beq	12e40 <mount@plt+0xce0>
   12e08:	bl	11e78 <__ctype_b_loc@plt>
   12e0c:	lsl	r3, sl, #1
   12e10:	ldr	r2, [r0]
   12e14:	ldrh	r3, [r2, r3]
   12e18:	tst	r3, #2048	; 0x800
   12e1c:	bne	12e64 <mount@plt+0xd04>
   12e20:	add	r4, r4, #1
   12e24:	cmp	sl, #45	; 0x2d
   12e28:	str	r4, [sp]
   12e2c:	ldrb	sl, [r4]
   12e30:	moveq	r6, r9
   12e34:	moveq	r5, #1
   12e38:	cmp	sl, #0
   12e3c:	bne	12e08 <mount@plt+0xca8>
   12e40:	mov	r0, #1
   12e44:	b	12e4c <mount@plt+0xcec>
   12e48:	mov	r0, #0
   12e4c:	ldr	r2, [sp, #4]
   12e50:	ldr	r3, [r8]
   12e54:	cmp	r2, r3
   12e58:	bne	12ea8 <mount@plt+0xd48>
   12e5c:	add	sp, sp, #8
   12e60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e64:	mov	r0, r4
   12e68:	mov	r2, #10
   12e6c:	mov	r1, sp
   12e70:	bl	11ba8 <strtol@plt>
   12e74:	cmp	r0, r7
   12e78:	mov	r9, r0
   12e7c:	beq	12e48 <mount@plt+0xce8>
   12e80:	cmp	r6, r7
   12e84:	movcs	r5, #0
   12e88:	andcc	r5, r5, #1
   12e8c:	cmp	r0, r7
   12e90:	movls	r5, #0
   12e94:	andhi	r5, r5, #1
   12e98:	cmp	r5, #0
   12e9c:	bne	12e48 <mount@plt+0xce8>
   12ea0:	ldr	r4, [sp]
   12ea4:	b	12dfc <mount@plt+0xc9c>
   12ea8:	bl	11ca4 <__stack_chk_fail@plt>
   12eac:	andeq	r2, r3, r8, ror #29
   12eb0:	push	{r4, r5, r6, r7, lr}
   12eb4:	sub	sp, sp, #252	; 0xfc
   12eb8:	ldr	r5, [pc, #264]	; 12fc8 <mount@plt+0xe68>
   12ebc:	mov	r4, r0
   12ec0:	mov	r2, #240	; 0xf0
   12ec4:	ldr	r3, [r5]
   12ec8:	mov	r6, r1
   12ecc:	add	r0, sp, #4
   12ed0:	mov	r1, #0
   12ed4:	str	r3, [sp, #244]	; 0xf4
   12ed8:	bl	11efc <memset@plt>
   12edc:	add	r3, sp, #4
   12ee0:	mov	r0, r4
   12ee4:	ldr	r2, [pc, #224]	; 12fcc <mount@plt+0xe6c>
   12ee8:	mov	r1, #0
   12eec:	bl	11c80 <mnl_attr_parse@plt>
   12ef0:	ldr	r0, [sp, #12]
   12ef4:	cmp	r0, #0
   12ef8:	beq	12f94 <mount@plt+0xe34>
   12efc:	ldr	r3, [sp, #8]
   12f00:	cmp	r3, #0
   12f04:	beq	12f94 <mount@plt+0xe34>
   12f08:	ldr	r3, [sp, #16]
   12f0c:	cmp	r3, #0
   12f10:	beq	12f7c <mount@plt+0xe1c>
   12f14:	bl	11f80 <mnl_attr_get_str@plt>
   12f18:	mov	r1, #20
   12f1c:	mov	r7, r0
   12f20:	mov	r0, #1
   12f24:	bl	11b6c <calloc@plt>
   12f28:	subs	r4, r0, #0
   12f2c:	beq	12f94 <mount@plt+0xe34>
   12f30:	mov	r0, r7
   12f34:	bl	11c98 <strdup@plt>
   12f38:	cmp	r0, #0
   12f3c:	str	r0, [r4, #8]
   12f40:	beq	12fb4 <mount@plt+0xe54>
   12f44:	ldr	r3, [r6, #20]
   12f48:	add	r2, r6, #16
   12f4c:	str	r3, [r4, #4]
   12f50:	str	r2, [r4]
   12f54:	str	r4, [r6, #20]
   12f58:	ldr	r0, [sp, #16]
   12f5c:	str	r4, [r3]
   12f60:	bl	12058 <mnl_attr_get_u32@plt>
   12f64:	str	r0, [r4, #12]
   12f68:	ldr	r0, [sp, #8]
   12f6c:	bl	12058 <mnl_attr_get_u32@plt>
   12f70:	mov	r1, #1
   12f74:	str	r0, [r4, #16]
   12f78:	b	12f98 <mount@plt+0xe38>
   12f7c:	ldr	r3, [pc, #76]	; 12fd0 <mount@plt+0xe70>
   12f80:	mov	r2, #39	; 0x27
   12f84:	mov	r1, #1
   12f88:	ldr	r3, [r3]
   12f8c:	ldr	r0, [pc, #64]	; 12fd4 <mount@plt+0xe74>
   12f90:	bl	11d40 <fwrite@plt>
   12f94:	mvn	r1, #0
   12f98:	ldr	r2, [sp, #244]	; 0xf4
   12f9c:	ldr	r3, [r5]
   12fa0:	mov	r0, r1
   12fa4:	cmp	r2, r3
   12fa8:	bne	12fc4 <mount@plt+0xe64>
   12fac:	add	sp, sp, #252	; 0xfc
   12fb0:	pop	{r4, r5, r6, r7, pc}
   12fb4:	mov	r0, r4
   12fb8:	bl	11c14 <free@plt>
   12fbc:	mvn	r1, #0
   12fc0:	b	12f98 <mount@plt+0xe38>
   12fc4:	bl	11ca4 <__stack_chk_fail@plt>
   12fc8:	andeq	r2, r3, r8, ror #29
   12fcc:	andeq	r2, r1, r4, lsl r9
   12fd0:	andeq	r3, r3, r8, asr r2
   12fd4:	strdeq	pc, [r1], -r8
   12fd8:	push	{r4, r5, r6, r7, r8, lr}
   12fdc:	subs	r4, r0, #0
   12fe0:	popeq	{r4, r5, r6, r7, r8, pc}
   12fe4:	mov	r8, r4
   12fe8:	ldr	r0, [r4, #40]	; 0x28
   12fec:	bl	11c14 <free@plt>
   12ff0:	ldr	r6, [r8, #16]!
   12ff4:	cmp	r6, r8
   12ff8:	ldr	r5, [r6]
   12ffc:	movne	r7, r5
   13000:	beq	13034 <mount@plt+0xed4>
   13004:	ldr	r3, [r6, #4]
   13008:	ldr	r0, [r6, #8]
   1300c:	str	r3, [r5, #4]
   13010:	str	r5, [r3]
   13014:	bl	11c14 <free@plt>
   13018:	mov	r0, r6
   1301c:	bl	11c14 <free@plt>
   13020:	ldr	r5, [r5]
   13024:	cmp	r7, r8
   13028:	mov	r6, r7
   1302c:	mov	r7, r5
   13030:	bne	13004 <mount@plt+0xea4>
   13034:	ldr	r5, [r4, #52]!	; 0x34
   13038:	cmp	r5, r4
   1303c:	ldr	r6, [r5]
   13040:	popeq	{r4, r5, r6, r7, r8, pc}
   13044:	mov	r7, r6
   13048:	ldr	r3, [r5, #4]
   1304c:	ldr	r0, [r5, #8]
   13050:	str	r3, [r6, #4]
   13054:	str	r6, [r3]
   13058:	bl	11c14 <free@plt>
   1305c:	ldr	r0, [r5, #12]
   13060:	bl	11c14 <free@plt>
   13064:	mov	r0, r5
   13068:	bl	11c14 <free@plt>
   1306c:	ldr	r6, [r6]
   13070:	cmp	r7, r4
   13074:	mov	r5, r7
   13078:	mov	r7, r6
   1307c:	bne	13048 <mount@plt+0xee8>
   13080:	pop	{r4, r5, r6, r7, r8, pc}
   13084:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13088:	ldr	r4, [r0]
   1308c:	cmp	r4, #0
   13090:	beq	130f0 <mount@plt+0xf90>
   13094:	mov	r7, r0
   13098:	ldr	r5, [r0, #4]
   1309c:	ldr	r9, [pc, #116]	; 13118 <mount@plt+0xfb8>
   130a0:	ldr	r8, [pc, #116]	; 1311c <mount@plt+0xfbc>
   130a4:	b	130c0 <mount@plt+0xf60>
   130a8:	bl	128d4 <mount@plt+0x774>
   130ac:	cmp	r0, #0
   130b0:	beq	130e4 <mount@plt+0xf84>
   130b4:	cmp	r4, #0
   130b8:	strd	r4, [r7]
   130bc:	beq	130f0 <mount@plt+0xf90>
   130c0:	ldr	r6, [r5], #4
   130c4:	mov	r1, r9
   130c8:	mov	r0, r6
   130cc:	bl	128d4 <mount@plt+0x774>
   130d0:	sub	r4, r4, #1
   130d4:	mov	r1, r8
   130d8:	cmp	r0, #0
   130dc:	mov	r0, r6
   130e0:	bne	130a8 <mount@plt+0xf48>
   130e4:	cmp	r4, #0
   130e8:	strd	r4, [r7]
   130ec:	beq	130f8 <mount@plt+0xf98>
   130f0:	mov	r0, #0
   130f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   130f8:	ldr	r3, [pc, #32]	; 13120 <mount@plt+0xfc0>
   130fc:	mov	r2, #28
   13100:	mov	r1, #1
   13104:	ldr	r3, [r3]
   13108:	ldr	r0, [pc, #20]	; 13124 <mount@plt+0xfc4>
   1310c:	bl	11d40 <fwrite@plt>
   13110:	mvn	r0, #21
   13114:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13118:	andeq	pc, r1, r0, lsl #24
   1311c:	andeq	r2, r2, r0, lsl #5
   13120:	andeq	r3, r3, r8, asr r2
   13124:	andeq	pc, r1, r0, lsr #30
   13128:	push	{r4, r5, r6, r7, r8, r9, lr}
   1312c:	sub	sp, sp, #12
   13130:	ldr	r6, [r0]
   13134:	cmp	r6, #0
   13138:	ldreq	r3, [r1, #4]
   1313c:	beq	13198 <mount@plt+0x1038>
   13140:	mov	r4, r1
   13144:	ldr	r8, [r0, #4]
   13148:	ldr	r1, [r1, #8]
   1314c:	mov	r5, r0
   13150:	cmp	r1, #0
   13154:	mov	r7, r2
   13158:	add	r4, r4, #8
   1315c:	ldr	r9, [r8]
   13160:	bne	13174 <mount@plt+0x1014>
   13164:	b	131a4 <mount@plt+0x1044>
   13168:	ldr	r1, [r4, #8]!
   1316c:	cmp	r1, #0
   13170:	beq	131a4 <mount@plt+0x1044>
   13174:	mov	r0, r9
   13178:	bl	128d4 <mount@plt+0x774>
   1317c:	cmp	r0, #0
   13180:	bne	13168 <mount@plt+0x1008>
   13184:	ldr	r3, [r4, #4]
   13188:	sub	r6, r6, #1
   1318c:	add	r8, r8, #4
   13190:	mov	r0, r5
   13194:	stm	r5, {r6, r8}
   13198:	add	sp, sp, #12
   1319c:	pop	{r4, r5, r6, r7, r8, r9, lr}
   131a0:	bx	r3
   131a4:	ldr	r2, [pc, #32]	; 131cc <mount@plt+0x106c>
   131a8:	str	r9, [sp]
   131ac:	mov	r3, r7
   131b0:	ldr	r0, [r2]
   131b4:	mov	r1, #1
   131b8:	ldr	r2, [pc, #16]	; 131d0 <mount@plt+0x1070>
   131bc:	bl	11f74 <__fprintf_chk@plt>
   131c0:	mov	r0, #0
   131c4:	add	sp, sp, #12
   131c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   131cc:	andeq	r3, r3, r8, asr r2
   131d0:	andeq	pc, r1, r0, asr #30
   131d4:	push	{r4, r5, r6, r7, r8, lr}
   131d8:	mov	r5, r0
   131dc:	mov	r0, #0
   131e0:	mov	r6, r2
   131e4:	mov	r4, r1
   131e8:	mov	r7, r3
   131ec:	bl	11c50 <time@plt>
   131f0:	add	r4, r4, #5120	; 0x1400
   131f4:	str	r0, [r6]
   131f8:	ldr	r0, [r5, #40]	; 0x28
   131fc:	bl	11b84 <mnl_nlmsg_put_header@plt>
   13200:	ldr	r2, [r6]
   13204:	str	r0, [r5, #36]	; 0x24
   13208:	strh	r7, [r0, #6]
   1320c:	str	r2, [r0, #8]
   13210:	strh	r4, [r0, #4]
   13214:	pop	{r4, r5, r6, r7, r8, pc}
   13218:	push	{r4, r5, r6, lr}
   1321c:	mov	r4, r0
   13220:	mov	r0, #20
   13224:	bl	11d1c <mnl_socket_open@plt>
   13228:	subs	r3, r0, #0
   1322c:	str	r0, [r4, #32]
   13230:	beq	132b4 <mount@plt+0x1154>
   13234:	mov	r2, #0
   13238:	mov	r1, r2
   1323c:	bl	11ce0 <mnl_socket_bind@plt>
   13240:	subs	r5, r0, #0
   13244:	blt	13270 <mount@plt+0x1110>
   13248:	ldr	r3, [r4, #36]	; 0x24
   1324c:	ldr	r0, [r4, #32]
   13250:	mov	r1, r3
   13254:	ldr	r2, [r3]
   13258:	bl	11bfc <mnl_socket_sendto@plt>
   1325c:	subs	r5, r0, #0
   13260:	movge	r5, #0
   13264:	blt	13298 <mount@plt+0x1138>
   13268:	mov	r0, r5
   1326c:	pop	{r4, r5, r6, pc}
   13270:	ldr	r1, [pc, #92]	; 132d4 <mount@plt+0x1174>
   13274:	mov	r3, r5
   13278:	ldr	r2, [pc, #88]	; 132d8 <mount@plt+0x1178>
   1327c:	ldr	r0, [r1]
   13280:	mov	r1, #1
   13284:	bl	11f74 <__fprintf_chk@plt>
   13288:	ldr	r0, [r4, #32]
   1328c:	bl	12004 <mnl_socket_close@plt>
   13290:	mov	r0, r5
   13294:	pop	{r4, r5, r6, pc}
   13298:	ldr	r1, [pc, #52]	; 132d4 <mount@plt+0x1174>
   1329c:	mov	r3, r5
   132a0:	ldr	r2, [pc, #52]	; 132dc <mount@plt+0x117c>
   132a4:	ldr	r0, [r1]
   132a8:	mov	r1, #1
   132ac:	bl	11f74 <__fprintf_chk@plt>
   132b0:	b	13288 <mount@plt+0x1128>
   132b4:	ldr	r3, [pc, #24]	; 132d4 <mount@plt+0x1174>
   132b8:	mov	r2, #35	; 0x23
   132bc:	mov	r1, #1
   132c0:	ldr	r3, [r3]
   132c4:	ldr	r0, [pc, #20]	; 132e0 <mount@plt+0x1180>
   132c8:	bl	11d40 <fwrite@plt>
   132cc:	mvn	r5, #18
   132d0:	b	13268 <mount@plt+0x1108>
   132d4:	andeq	r3, r3, r8, asr r2
   132d8:	andeq	pc, r1, r8, ror pc	; <UNPREDICTABLE>
   132dc:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   132e0:	andeq	pc, r1, r4, asr pc	; <UNPREDICTABLE>
   132e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132e8:	mov	r8, r1
   132ec:	ldr	r1, [pc, #196]	; 133b8 <mount@plt+0x1258>
   132f0:	add	fp, sp, #32
   132f4:	sub	sp, sp, #28
   132f8:	ldr	r1, [r1]
   132fc:	mov	r5, r0
   13300:	mov	r0, #30
   13304:	mov	r9, r2
   13308:	mov	sl, r3
   1330c:	str	r1, [fp, #-40]	; 0xffffffd8
   13310:	bl	11cc8 <sysconf@plt>
   13314:	cmp	r0, #8192	; 0x2000
   13318:	movge	r6, #8192	; 0x2000
   1331c:	blt	133a4 <mount@plt+0x1244>
   13320:	add	r3, r6, #7
   13324:	bic	r3, r3, #7
   13328:	sub	sp, sp, r3
   1332c:	ldr	r0, [r5, #32]
   13330:	bl	11eb4 <mnl_socket_get_portid@plt>
   13334:	add	r4, sp, #8
   13338:	mov	r7, r0
   1333c:	b	1335c <mount@plt+0x11fc>
   13340:	strd	r8, [sp]
   13344:	mov	r3, r7
   13348:	mov	r2, sl
   1334c:	mov	r0, r4
   13350:	bl	11e60 <mnl_cb_run@plt>
   13354:	subs	r1, r0, #0
   13358:	ble	13374 <mount@plt+0x1214>
   1335c:	mov	r1, r4
   13360:	mov	r2, r6
   13364:	ldr	r0, [r5, #32]
   13368:	bl	11fec <mnl_socket_recvfrom@plt>
   1336c:	subs	r1, r0, #0
   13370:	bgt	13340 <mount@plt+0x11e0>
   13374:	ldr	r0, [r5, #32]
   13378:	str	r1, [fp, #-48]	; 0xffffffd0
   1337c:	bl	12004 <mnl_socket_close@plt>
   13380:	ldr	r3, [pc, #48]	; 133b8 <mount@plt+0x1258>
   13384:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13388:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1338c:	ldr	r3, [r3]
   13390:	mov	r0, r1
   13394:	cmp	r2, r3
   13398:	bne	133b4 <mount@plt+0x1254>
   1339c:	sub	sp, fp, #32
   133a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133a4:	mov	r0, #30
   133a8:	bl	11cc8 <sysconf@plt>
   133ac:	mov	r6, r0
   133b0:	b	13320 <mount@plt+0x11c0>
   133b4:	bl	11ca4 <__stack_chk_fail@plt>
   133b8:	andeq	r2, r3, r8, ror #29
   133bc:	push	{r4, r5, r6, lr}
   133c0:	ldr	r4, [r0]
   133c4:	cmp	r4, #0
   133c8:	beq	13424 <mount@plt+0x12c4>
   133cc:	ldr	r3, [r0, #4]
   133d0:	mov	r5, r0
   133d4:	mov	r4, r1
   133d8:	ldr	r0, [r3]
   133dc:	bl	11c98 <strdup@plt>
   133e0:	cmp	r4, #0
   133e4:	mov	r6, r0
   133e8:	bne	1342c <mount@plt+0x12cc>
   133ec:	ldr	r4, [r5, #16]!
   133f0:	cmp	r5, r4
   133f4:	bne	13408 <mount@plt+0x12a8>
   133f8:	b	13444 <mount@plt+0x12e4>
   133fc:	ldr	r4, [r4]
   13400:	cmp	r4, r5
   13404:	beq	13444 <mount@plt+0x12e4>
   13408:	ldr	r1, [r4, #8]
   1340c:	mov	r0, r6
   13410:	bl	11b9c <strcmp@plt>
   13414:	cmp	r0, #0
   13418:	bne	133fc <mount@plt+0x129c>
   1341c:	mov	r0, r6
   13420:	bl	11c14 <free@plt>
   13424:	mov	r0, r4
   13428:	pop	{r4, r5, r6, pc}
   1342c:	mov	r1, #47	; 0x2f
   13430:	bl	11ff8 <strrchr@plt>
   13434:	cmp	r0, #0
   13438:	movne	r3, #0
   1343c:	strbne	r3, [r0]
   13440:	b	133ec <mount@plt+0x128c>
   13444:	mov	r4, #0
   13448:	b	1341c <mount@plt+0x12bc>
   1344c:	ldrb	r3, [r0, #48]	; 0x30
   13450:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13454:	mov	r5, r0
   13458:	cmp	r3, #0
   1345c:	mov	r7, r1
   13460:	mov	r8, r2
   13464:	bne	135a0 <mount@plt+0x1440>
   13468:	ldr	r3, [r5]
   1346c:	cmp	r3, #0
   13470:	bne	1350c <mount@plt+0x13ac>
   13474:	mov	r9, r5
   13478:	ldr	r6, [r9, #16]!
   1347c:	cmp	r9, r6
   13480:	beq	134ec <mount@plt+0x138c>
   13484:	ldr	r3, [r6, #12]
   13488:	ldr	r2, [r6, #16]
   1348c:	add	r3, r3, #1
   13490:	cmp	r3, r8
   13494:	str	r2, [r5, #24]
   13498:	movhi	r4, r8
   1349c:	bhi	134b4 <mount@plt+0x1354>
   134a0:	b	134e0 <mount@plt+0x1380>
   134a4:	ldr	r3, [r6, #12]
   134a8:	add	r3, r3, #1
   134ac:	cmp	r4, r3
   134b0:	bcs	134e0 <mount@plt+0x1380>
   134b4:	str	r4, [r5, #28]
   134b8:	mov	r0, r5
   134bc:	blx	r7
   134c0:	add	r4, r4, #1
   134c4:	subs	sl, r0, #0
   134c8:	beq	134a4 <mount@plt+0x1344>
   134cc:	ldrb	r3, [r5, #48]	; 0x30
   134d0:	cmp	r3, #0
   134d4:	bne	134fc <mount@plt+0x139c>
   134d8:	mov	r0, sl
   134dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   134e0:	ldr	r6, [r6]
   134e4:	cmp	r6, r9
   134e8:	bne	13484 <mount@plt+0x1324>
   134ec:	ldrb	r3, [r5, #48]	; 0x30
   134f0:	mov	sl, #0
   134f4:	cmp	r3, #0
   134f8:	beq	134d8 <mount@plt+0x1378>
   134fc:	ldr	r0, [r5, #44]	; 0x2c
   13500:	bl	1b6b8 <mount@plt+0x9558>
   13504:	mov	r0, sl
   13508:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1350c:	mov	r1, #1
   13510:	mov	r0, r5
   13514:	bl	133bc <mount@plt+0x125c>
   13518:	ldr	r6, [r5]
   1351c:	mov	r1, #47	; 0x2f
   13520:	cmp	r6, #0
   13524:	ldrne	r3, [r5, #4]
   13528:	mov	r4, r0
   1352c:	ldrne	r0, [r3]
   13530:	moveq	r0, r6
   13534:	bl	11ea8 <strchr@plt>
   13538:	subs	sl, r0, #0
   1353c:	beq	13630 <mount@plt+0x14d0>
   13540:	ldrb	r9, [sl, #1]
   13544:	cmp	r9, #45	; 0x2d
   13548:	beq	135ac <mount@plt+0x144c>
   1354c:	bl	11e78 <__ctype_b_loc@plt>
   13550:	lsl	r3, r9, #1
   13554:	ldr	r2, [r0]
   13558:	ldrh	r3, [r2, r3]
   1355c:	tst	r3, #2048	; 0x800
   13560:	moveq	r8, #1
   13564:	bne	13644 <mount@plt+0x14e4>
   13568:	cmp	r9, #0
   1356c:	bne	13580 <mount@plt+0x1420>
   13570:	cmp	r4, #0
   13574:	movne	r0, r9
   13578:	ldrne	r6, [r5]
   1357c:	bne	135c0 <mount@plt+0x1460>
   13580:	ldr	r3, [pc, #256]	; 13688 <mount@plt+0x1528>
   13584:	mov	r2, #18
   13588:	mov	r1, #1
   1358c:	ldr	r3, [r3]
   13590:	ldr	r0, [pc, #244]	; 1368c <mount@plt+0x152c>
   13594:	bl	11d40 <fwrite@plt>
   13598:	mvn	sl, #1
   1359c:	b	134cc <mount@plt+0x136c>
   135a0:	ldr	r0, [r0, #44]	; 0x2c
   135a4:	bl	1b68c <mount@plt+0x952c>
   135a8:	b	13468 <mount@plt+0x1308>
   135ac:	cmp	r4, #0
   135b0:	orreq	r8, r8, #1
   135b4:	cmp	r8, #0
   135b8:	bne	13580 <mount@plt+0x1420>
   135bc:	mov	r0, r8
   135c0:	cmp	r6, #0
   135c4:	subne	r6, r6, #1
   135c8:	ldrne	r3, [r5, #4]
   135cc:	strne	r6, [r5]
   135d0:	addne	r3, r3, #4
   135d4:	strne	r3, [r5, #4]
   135d8:	ldr	r3, [r4, #12]
   135dc:	ldr	r2, [r4, #16]
   135e0:	add	r3, r3, #1
   135e4:	cmp	r3, r0
   135e8:	str	r2, [r5, #24]
   135ec:	str	r0, [r5, #28]
   135f0:	bhi	1361c <mount@plt+0x14bc>
   135f4:	b	134ec <mount@plt+0x138c>
   135f8:	cmp	r8, #0
   135fc:	beq	134ec <mount@plt+0x138c>
   13600:	ldr	r3, [r5, #28]
   13604:	ldr	r2, [r4, #12]
   13608:	add	r3, r3, #1
   1360c:	add	r2, r2, #1
   13610:	cmp	r3, r2
   13614:	str	r3, [r5, #28]
   13618:	bcs	134ec <mount@plt+0x138c>
   1361c:	mov	r0, r5
   13620:	blx	r7
   13624:	subs	sl, r0, #0
   13628:	beq	135f8 <mount@plt+0x1498>
   1362c:	b	134cc <mount@plt+0x136c>
   13630:	cmp	r4, #0
   13634:	beq	13580 <mount@plt+0x1420>
   13638:	mov	r0, sl
   1363c:	mov	r8, #1
   13640:	b	135c0 <mount@plt+0x1460>
   13644:	mov	r2, #10
   13648:	mov	r1, #0
   1364c:	add	r0, sl, #1
   13650:	bl	11ba8 <strtol@plt>
   13654:	cmp	r0, #0
   13658:	beq	1367c <mount@plt+0x151c>
   1365c:	cmp	r4, #0
   13660:	beq	13580 <mount@plt+0x1420>
   13664:	ldr	r3, [r4, #12]
   13668:	cmp	r3, r0
   1366c:	bcc	13580 <mount@plt+0x1420>
   13670:	ldr	r6, [r5]
   13674:	mov	r8, #0
   13678:	b	135c0 <mount@plt+0x1460>
   1367c:	ldrb	r9, [sl, #1]
   13680:	mov	r8, r0
   13684:	b	13568 <mount@plt+0x1408>
   13688:	andeq	r3, r3, r8, asr r2
   1368c:	andeq	pc, r1, r4, asr #31
   13690:	ldrb	r3, [r0, #48]	; 0x30
   13694:	push	{r4, r5, r6, r7, r8, lr}
   13698:	mov	r5, r0
   1369c:	cmp	r3, #0
   136a0:	mov	r8, r1
   136a4:	bne	13768 <mount@plt+0x1608>
   136a8:	ldr	r3, [r5]
   136ac:	cmp	r3, #0
   136b0:	bne	13720 <mount@plt+0x15c0>
   136b4:	mov	r6, r5
   136b8:	ldr	r4, [r6, #16]!
   136bc:	cmp	r4, r6
   136c0:	bne	136d4 <mount@plt+0x1574>
   136c4:	b	13700 <mount@plt+0x15a0>
   136c8:	ldr	r4, [r4]
   136cc:	cmp	r4, r6
   136d0:	beq	13700 <mount@plt+0x15a0>
   136d4:	ldr	r3, [r4, #16]
   136d8:	mov	r0, r5
   136dc:	str	r3, [r5, #24]
   136e0:	blx	r8
   136e4:	subs	r7, r0, #0
   136e8:	beq	136c8 <mount@plt+0x1568>
   136ec:	ldrb	r3, [r5, #48]	; 0x30
   136f0:	cmp	r3, #0
   136f4:	bne	13710 <mount@plt+0x15b0>
   136f8:	mov	r0, r7
   136fc:	pop	{r4, r5, r6, r7, r8, pc}
   13700:	ldrb	r3, [r5, #48]	; 0x30
   13704:	mov	r7, #0
   13708:	cmp	r3, #0
   1370c:	beq	136f8 <mount@plt+0x1598>
   13710:	ldr	r0, [r5, #44]	; 0x2c
   13714:	bl	1b6b8 <mount@plt+0x9558>
   13718:	mov	r0, r7
   1371c:	pop	{r4, r5, r6, r7, r8, pc}
   13720:	mov	r1, #0
   13724:	mov	r0, r5
   13728:	bl	133bc <mount@plt+0x125c>
   1372c:	cmp	r0, #0
   13730:	beq	13774 <mount@plt+0x1614>
   13734:	ldr	r2, [r5]
   13738:	cmp	r2, #0
   1373c:	subne	r2, r2, #1
   13740:	ldrne	r1, [r5, #4]
   13744:	strne	r2, [r5]
   13748:	ldr	r3, [r0, #16]
   1374c:	addne	r1, r1, #4
   13750:	strne	r1, [r5, #4]
   13754:	mov	r0, r5
   13758:	str	r3, [r5, #24]
   1375c:	blx	r8
   13760:	mov	r7, r0
   13764:	b	136ec <mount@plt+0x158c>
   13768:	ldr	r0, [r0, #44]	; 0x2c
   1376c:	bl	1b68c <mount@plt+0x952c>
   13770:	b	136a8 <mount@plt+0x1548>
   13774:	ldr	r2, [r5]
   13778:	ldr	r3, [pc, #40]	; 137a8 <mount@plt+0x1648>
   1377c:	cmp	r2, #0
   13780:	mov	r1, #1
   13784:	ldr	r2, [r3]
   13788:	ldrne	r3, [r5, #4]
   1378c:	mvn	r7, #1
   13790:	ldrne	r0, [r3]
   13794:	mov	r3, r0
   13798:	mov	r0, r2
   1379c:	ldr	r2, [pc, #8]	; 137ac <mount@plt+0x164c>
   137a0:	bl	11f74 <__fprintf_chk@plt>
   137a4:	b	136ec <mount@plt+0x158c>
   137a8:	andeq	r3, r3, r8, asr r2
   137ac:	ldrdeq	pc, [r1], -r8
   137b0:	ldrb	r3, [r0, #48]	; 0x30
   137b4:	cmp	r3, #0
   137b8:	beq	137c4 <mount@plt+0x1664>
   137bc:	ldr	r0, [r0, #44]	; 0x2c
   137c0:	b	1b6b8 <mount@plt+0x9558>
   137c4:	ldr	r3, [pc, #8]	; 137d4 <mount@plt+0x1674>
   137c8:	mov	r0, #10
   137cc:	ldr	r1, [r3]
   137d0:	b	1201c <fputc@plt>
   137d4:	andeq	r3, r3, r4, ror #4
   137d8:	ldrb	r3, [r0, #13]
   137dc:	eor	r3, r3, #1
   137e0:	cmp	r1, #0
   137e4:	orreq	r3, r3, #1
   137e8:	cmp	r3, #0
   137ec:	bxne	lr
   137f0:	ldrb	r3, [r0, #49]	; 0x31
   137f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137f8:	mov	r7, r1
   137fc:	cmp	r3, #0
   13800:	sub	sp, sp, #12
   13804:	mov	r8, r0
   13808:	bne	13aa0 <mount@plt+0x1940>
   1380c:	mov	r0, r7
   13810:	bl	11fd4 <mnl_attr_get_payload@plt>
   13814:	mov	r5, #0
   13818:	ldr	sl, [pc, #720]	; 13af0 <mount@plt+0x1990>
   1381c:	mov	r6, r5
   13820:	mov	r9, r5
   13824:	mov	r4, r0
   13828:	mov	r0, r7
   1382c:	bl	11fd4 <mnl_attr_get_payload@plt>
   13830:	mov	fp, r0
   13834:	mov	r0, r7
   13838:	bl	12100 <mnl_attr_get_payload_len@plt>
   1383c:	add	r1, fp, r0
   13840:	sub	r1, r1, r4
   13844:	mov	r0, r4
   13848:	bl	120ac <mnl_attr_ok@plt>
   1384c:	cmp	r0, #0
   13850:	beq	13a24 <mount@plt+0x18c4>
   13854:	cmp	r5, #80	; 0x50
   13858:	ble	13868 <mount@plt+0x1708>
   1385c:	ldrb	r5, [r8, #49]	; 0x31
   13860:	cmp	r5, #0
   13864:	bne	13a58 <mount@plt+0x18f8>
   13868:	mov	r1, #60	; 0x3c
   1386c:	mov	r0, r4
   13870:	bl	11f8c <mnl_attr_type_valid@plt>
   13874:	cmp	r0, #0
   13878:	blt	13a24 <mount@plt+0x18c4>
   1387c:	mov	r0, r4
   13880:	bl	11fa4 <mnl_attr_get_type@plt>
   13884:	ldr	fp, [sl, r0, lsl #2]
   13888:	mov	r0, r4
   1388c:	mov	r1, fp
   13890:	bl	11f38 <mnl_attr_validate@plt>
   13894:	cmp	r0, #0
   13898:	blt	13a24 <mount@plt+0x18c4>
   1389c:	cmp	r6, #0
   138a0:	beq	13a2c <mount@plt+0x18cc>
   138a4:	cmp	fp, #1
   138a8:	beq	13a48 <mount@plt+0x18e8>
   138ac:	mov	r0, r6
   138b0:	bl	11f80 <mnl_attr_get_str@plt>
   138b4:	ldrh	r2, [r4, #2]
   138b8:	bic	r2, r2, #49152	; 0xc000
   138bc:	sub	r2, r2, #54	; 0x36
   138c0:	mov	r6, r0
   138c4:	cmp	r2, #5
   138c8:	ldrls	pc, [pc, r2, lsl #2]
   138cc:	b	13a24 <mount@plt+0x18c4>
   138d0:	strdeq	r3, [r1], -ip
   138d4:	andeq	r3, r1, r4, lsr #20
   138d8:	andeq	r3, r1, r4, lsr #19
   138dc:	andeq	r3, r1, r8, ror #18
   138e0:	andeq	r3, r1, r4, lsr #18
   138e4:	andeq	r3, r1, r8, ror #17
   138e8:	mov	r0, r4
   138ec:	bl	11cb0 <mnl_attr_get_u64@plt>
   138f0:	ldrb	r3, [r8, #48]	; 0x30
   138f4:	cmp	r3, #0
   138f8:	bne	13a8c <mount@plt+0x192c>
   138fc:	cmp	r9, #0
   13900:	bne	13940 <mount@plt+0x17e0>
   13904:	strd	r0, [sp]
   13908:	ldr	r0, [pc, #484]	; 13af4 <mount@plt+0x1994>
   1390c:	mov	r3, r6
   13910:	ldr	r2, [pc, #480]	; 13af8 <mount@plt+0x1998>
   13914:	mov	r1, #1
   13918:	ldr	r0, [r0]
   1391c:	bl	11f74 <__fprintf_chk@plt>
   13920:	b	139e4 <mount@plt+0x1884>
   13924:	mov	r0, r4
   13928:	bl	11cb0 <mnl_attr_get_u64@plt>
   1392c:	ldrb	r3, [r8, #48]	; 0x30
   13930:	cmp	r3, #0
   13934:	bne	13a8c <mount@plt+0x192c>
   13938:	cmp	r9, #0
   1393c:	beq	13ab0 <mount@plt+0x1950>
   13940:	cmp	r9, #1
   13944:	bne	13a24 <mount@plt+0x18c4>
   13948:	strd	r0, [sp]
   1394c:	ldr	r0, [pc, #416]	; 13af4 <mount@plt+0x1994>
   13950:	mov	r3, r6
   13954:	mov	r1, r9
   13958:	ldr	r2, [pc, #412]	; 13afc <mount@plt+0x199c>
   1395c:	ldr	r0, [r0]
   13960:	bl	11f74 <__fprintf_chk@plt>
   13964:	b	139e4 <mount@plt+0x1884>
   13968:	mov	r0, r4
   1396c:	bl	12058 <mnl_attr_get_u32@plt>
   13970:	ldrb	r3, [r8, #48]	; 0x30
   13974:	cmp	r3, #0
   13978:	bne	13a8c <mount@plt+0x192c>
   1397c:	cmp	r9, #0
   13980:	bne	139c0 <mount@plt+0x1860>
   13984:	str	r0, [sp]
   13988:	ldr	r0, [pc, #356]	; 13af4 <mount@plt+0x1994>
   1398c:	mov	r3, r6
   13990:	ldr	r2, [pc, #360]	; 13b00 <mount@plt+0x19a0>
   13994:	mov	r1, #1
   13998:	ldr	r0, [r0]
   1399c:	bl	11f74 <__fprintf_chk@plt>
   139a0:	b	139e4 <mount@plt+0x1884>
   139a4:	mov	r0, r4
   139a8:	bl	12058 <mnl_attr_get_u32@plt>
   139ac:	ldrb	r3, [r8, #48]	; 0x30
   139b0:	cmp	r3, #0
   139b4:	bne	13a8c <mount@plt+0x192c>
   139b8:	cmp	r9, #0
   139bc:	beq	13ad0 <mount@plt+0x1970>
   139c0:	cmp	r9, #1
   139c4:	bne	13a24 <mount@plt+0x18c4>
   139c8:	str	r0, [sp]
   139cc:	ldr	r0, [pc, #288]	; 13af4 <mount@plt+0x1994>
   139d0:	mov	r3, r6
   139d4:	mov	r1, r9
   139d8:	ldr	r2, [pc, #292]	; 13b04 <mount@plt+0x19a4>
   139dc:	ldr	r0, [r0]
   139e0:	bl	11f74 <__fprintf_chk@plt>
   139e4:	cmp	r0, #0
   139e8:	blt	13a24 <mount@plt+0x18c4>
   139ec:	add	r5, r5, r0
   139f0:	mov	r6, #0
   139f4:	mov	r9, r6
   139f8:	b	13a38 <mount@plt+0x18d8>
   139fc:	mov	r0, r4
   13a00:	bl	11f80 <mnl_attr_get_str@plt>
   13a04:	ldrb	r3, [r8, #48]	; 0x30
   13a08:	cmp	r3, #0
   13a0c:	beq	13a6c <mount@plt+0x190c>
   13a10:	mov	r2, r0
   13a14:	mov	r1, r6
   13a18:	ldr	r0, [r8, #44]	; 0x2c
   13a1c:	bl	1b838 <mount@plt+0x96d8>
   13a20:	b	139f0 <mount@plt+0x1890>
   13a24:	add	sp, sp, #12
   13a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a2c:	cmp	fp, #10
   13a30:	bne	13a24 <mount@plt+0x18c4>
   13a34:	mov	r6, r4
   13a38:	mov	r0, r4
   13a3c:	bl	11ddc <mnl_attr_next@plt>
   13a40:	mov	r4, r0
   13a44:	b	13828 <mount@plt+0x16c8>
   13a48:	mov	r0, r4
   13a4c:	bl	120b8 <mnl_attr_get_u8@plt>
   13a50:	mov	r9, r0
   13a54:	b	13a38 <mount@plt+0x18d8>
   13a58:	add	r1, r8, #48	; 0x30
   13a5c:	ldr	r0, [r8, #44]	; 0x2c
   13a60:	bl	12974 <mount@plt+0x814>
   13a64:	mov	r5, #0
   13a68:	b	13868 <mount@plt+0x1708>
   13a6c:	str	r0, [sp]
   13a70:	ldr	r0, [pc, #124]	; 13af4 <mount@plt+0x1994>
   13a74:	mov	r3, r6
   13a78:	ldr	r2, [pc, #136]	; 13b08 <mount@plt+0x19a8>
   13a7c:	mov	r1, #1
   13a80:	ldr	r0, [r0]
   13a84:	bl	11f74 <__fprintf_chk@plt>
   13a88:	b	139e4 <mount@plt+0x1884>
   13a8c:	mov	r2, r0
   13a90:	mov	r1, r6
   13a94:	ldr	r0, [r8, #44]	; 0x2c
   13a98:	bl	1b978 <mount@plt+0x9818>
   13a9c:	b	139f0 <mount@plt+0x1890>
   13aa0:	add	r1, r0, #48	; 0x30
   13aa4:	ldr	r0, [r0, #44]	; 0x2c
   13aa8:	bl	12974 <mount@plt+0x814>
   13aac:	b	1380c <mount@plt+0x16ac>
   13ab0:	strd	r0, [sp]
   13ab4:	ldr	r0, [pc, #56]	; 13af4 <mount@plt+0x1994>
   13ab8:	mov	r3, r6
   13abc:	ldr	r2, [pc, #72]	; 13b0c <mount@plt+0x19ac>
   13ac0:	mov	r1, #1
   13ac4:	ldr	r0, [r0]
   13ac8:	bl	11f74 <__fprintf_chk@plt>
   13acc:	b	139e4 <mount@plt+0x1884>
   13ad0:	str	r0, [sp]
   13ad4:	ldr	r0, [pc, #24]	; 13af4 <mount@plt+0x1994>
   13ad8:	mov	r3, r6
   13adc:	ldr	r2, [pc, #44]	; 13b10 <mount@plt+0x19b0>
   13ae0:	mov	r1, #1
   13ae4:	ldr	r0, [r0]
   13ae8:	bl	11f74 <__fprintf_chk@plt>
   13aec:	b	139e4 <mount@plt+0x1884>
   13af0:	andeq	pc, r1, ip, lsl #26
   13af4:	andeq	r3, r3, r4, ror #4
   13af8:	andeq	r0, r2, ip, lsr #32
   13afc:	andeq	r0, r2, r0, lsr #32
   13b00:	andeq	r0, r2, ip
   13b04:	andeq	r0, r2, r0
   13b08:	strdeq	pc, [r1], -r0
   13b0c:	andeq	r0, r2, r4, lsl r0
   13b10:	strdeq	pc, [r1], -r8
   13b14:	push	{r4, lr}
   13b18:	sub	sp, sp, #24
   13b1c:	ldr	r4, [pc, #68]	; 13b68 <mount@plt+0x1a08>
   13b20:	ldr	ip, [pc, #68]	; 13b6c <mount@plt+0x1a0c>
   13b24:	ldr	r2, [pc, #68]	; 13b70 <mount@plt+0x1a10>
   13b28:	ldr	r3, [r4]
   13b2c:	add	r1, sp, #4
   13b30:	str	r3, [sp, #20]
   13b34:	mov	r3, #0
   13b38:	str	r3, [sp, #12]
   13b3c:	str	r3, [sp, #4]
   13b40:	str	r3, [sp, #16]
   13b44:	str	ip, [sp, #8]
   13b48:	bl	13128 <mount@plt+0xfc8>
   13b4c:	ldr	r2, [sp, #20]
   13b50:	ldr	r3, [r4]
   13b54:	cmp	r2, r3
   13b58:	bne	13b64 <mount@plt+0x1a04>
   13b5c:	add	sp, sp, #24
   13b60:	pop	{r4, pc}
   13b64:	bl	11ca4 <__stack_chk_fail@plt>
   13b68:	andeq	r2, r3, r8, ror #29
   13b6c:	andeq	r3, r1, ip, lsr #23
   13b70:	andeq	r0, r2, r8, ror #1
   13b74:	ldr	r1, [pc, #28]	; 13b98 <mount@plt+0x1a38>
   13b78:	ldr	r3, [r0, #8]
   13b7c:	push	{r4, lr}
   13b80:	ldr	r2, [pc, #20]	; 13b9c <mount@plt+0x1a3c>
   13b84:	ldr	r0, [r1]
   13b88:	mov	r1, #1
   13b8c:	bl	11f74 <__fprintf_chk@plt>
   13b90:	mov	r0, #0
   13b94:	pop	{r4, pc}
   13b98:	andeq	r3, r3, r4, ror #4
   13b9c:	strdeq	r0, [r2], -r4
   13ba0:	ldr	r1, [pc]	; 13ba8 <mount@plt+0x1a48>
   13ba4:	b	13690 <mount@plt+0x1530>
   13ba8:	andeq	r3, r1, r4, lsl fp
   13bac:	push	{r4, r5, r6, lr}
   13bb0:	mov	r4, r0
   13bb4:	ldr	r5, [pc, #160]	; 13c5c <mount@plt+0x1afc>
   13bb8:	sub	sp, sp, #8
   13bbc:	mov	r3, #5
   13bc0:	ldr	ip, [r5]
   13bc4:	mov	r2, sp
   13bc8:	mov	r1, #1
   13bcc:	str	ip, [sp, #4]
   13bd0:	bl	131d4 <mount@plt+0x1074>
   13bd4:	ldr	r2, [r4, #24]
   13bd8:	ldr	r0, [r4, #36]	; 0x24
   13bdc:	mov	r1, #1
   13be0:	bl	11cbc <mnl_attr_put_u32@plt>
   13be4:	mov	r0, r4
   13be8:	bl	13218 <mount@plt+0x10b8>
   13bec:	subs	r6, r0, #0
   13bf0:	bne	13c24 <mount@plt+0x1ac4>
   13bf4:	ldrb	r3, [r4, #48]	; 0x30
   13bf8:	cmp	r3, #0
   13bfc:	bne	13c4c <mount@plt+0x1aec>
   13c00:	ldr	r3, [sp]
   13c04:	mov	r2, r4
   13c08:	ldr	r1, [pc, #80]	; 13c60 <mount@plt+0x1b00>
   13c0c:	mov	r0, r4
   13c10:	bl	132e4 <mount@plt+0x1184>
   13c14:	ldrb	r3, [r4, #48]	; 0x30
   13c18:	cmp	r3, #0
   13c1c:	mov	r6, r0
   13c20:	bne	13c40 <mount@plt+0x1ae0>
   13c24:	ldr	r2, [sp, #4]
   13c28:	ldr	r3, [r5]
   13c2c:	mov	r0, r6
   13c30:	cmp	r2, r3
   13c34:	bne	13c58 <mount@plt+0x1af8>
   13c38:	add	sp, sp, #8
   13c3c:	pop	{r4, r5, r6, pc}
   13c40:	ldr	r0, [r4, #44]	; 0x2c
   13c44:	bl	1b638 <mount@plt+0x94d8>
   13c48:	b	13c24 <mount@plt+0x1ac4>
   13c4c:	ldr	r0, [r4, #44]	; 0x2c
   13c50:	bl	1b630 <mount@plt+0x94d0>
   13c54:	b	13c00 <mount@plt+0x1aa0>
   13c58:	bl	11ca4 <__stack_chk_fail@plt>
   13c5c:	andeq	r2, r3, r8, ror #29
   13c60:	andeq	r3, r1, r4, ror #24
   13c64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c68:	sub	sp, sp, #308	; 0x134
   13c6c:	ldr	sl, [pc, #1132]	; 140e0 <mount@plt+0x1f80>
   13c70:	mov	r4, r0
   13c74:	mov	r2, #240	; 0xf0
   13c78:	ldr	r3, [sl]
   13c7c:	mov	r6, r1
   13c80:	add	r0, sp, #28
   13c84:	mov	r1, #0
   13c88:	str	r3, [sp, #300]	; 0x12c
   13c8c:	bl	11efc <memset@plt>
   13c90:	add	r3, sp, #28
   13c94:	mov	r0, r4
   13c98:	ldr	r2, [pc, #1092]	; 140e4 <mount@plt+0x1f84>
   13c9c:	mov	r1, #0
   13ca0:	bl	11c80 <mnl_attr_parse@plt>
   13ca4:	ldr	r0, [sp, #32]
   13ca8:	cmp	r0, #0
   13cac:	beq	13e80 <mount@plt+0x1d20>
   13cb0:	ldr	r3, [sp, #36]	; 0x24
   13cb4:	cmp	r3, #0
   13cb8:	beq	13e80 <mount@plt+0x1d20>
   13cbc:	bl	12058 <mnl_attr_get_u32@plt>
   13cc0:	mov	r4, r0
   13cc4:	ldr	r0, [sp, #36]	; 0x24
   13cc8:	bl	11f80 <mnl_attr_get_str@plt>
   13ccc:	ldrb	r1, [r6, #48]	; 0x30
   13cd0:	cmp	r1, #0
   13cd4:	mov	r5, r0
   13cd8:	bne	13e5c <mount@plt+0x1cfc>
   13cdc:	ldr	r2, [pc, #1028]	; 140e8 <mount@plt+0x1f88>
   13ce0:	str	r0, [sp]
   13ce4:	mov	r3, r4
   13ce8:	ldr	r0, [r2]
   13cec:	mov	r1, #1
   13cf0:	ldr	r2, [pc, #1012]	; 140ec <mount@plt+0x1f8c>
   13cf4:	bl	11f74 <__fprintf_chk@plt>
   13cf8:	ldr	r0, [sp, #84]	; 0x54
   13cfc:	cmp	r0, #0
   13d00:	beq	13d34 <mount@plt+0x1bd4>
   13d04:	bl	120b8 <mnl_attr_get_u8@plt>
   13d08:	ldrb	r1, [r6, #48]	; 0x30
   13d0c:	cmp	r0, #6
   13d10:	ldrls	r3, [pc, #984]	; 140f0 <mount@plt+0x1f90>
   13d14:	ldrhi	r3, [pc, #984]	; 140f4 <mount@plt+0x1f94>
   13d18:	ldrls	r3, [r3, r0, lsl #2]
   13d1c:	cmp	r1, #0
   13d20:	beq	13ffc <mount@plt+0x1e9c>
   13d24:	mov	r2, r3
   13d28:	ldr	r1, [pc, #968]	; 140f8 <mount@plt+0x1f98>
   13d2c:	ldr	r0, [r6, #44]	; 0x2c
   13d30:	bl	1b838 <mount@plt+0x96d8>
   13d34:	ldr	r0, [sp, #48]	; 0x30
   13d38:	cmp	r0, #0
   13d3c:	beq	13d60 <mount@plt+0x1c00>
   13d40:	bl	11f80 <mnl_attr_get_str@plt>
   13d44:	ldrb	r3, [r6, #48]	; 0x30
   13d48:	cmp	r3, #0
   13d4c:	beq	13fe0 <mount@plt+0x1e80>
   13d50:	mov	r2, r0
   13d54:	ldr	r1, [pc, #928]	; 140fc <mount@plt+0x1f9c>
   13d58:	ldr	r0, [r6, #44]	; 0x2c
   13d5c:	bl	1b838 <mount@plt+0x96d8>
   13d60:	ldr	r0, [sp, #52]	; 0x34
   13d64:	cmp	r0, #0
   13d68:	beq	13dc4 <mount@plt+0x1c64>
   13d6c:	bl	11cb0 <mnl_attr_get_u64@plt>
   13d70:	ldr	r2, [pc, #904]	; 14100 <mount@plt+0x1fa0>
   13d74:	str	r2, [sp]
   13d78:	mov	r2, #1
   13d7c:	uxth	r3, r0
   13d80:	uxth	ip, r1
   13d84:	lsr	r1, r1, #16
   13d88:	lsr	r0, r0, #16
   13d8c:	str	r3, [sp, #16]
   13d90:	mov	r3, #32
   13d94:	str	r0, [sp, #12]
   13d98:	stmib	sp, {r1, ip}
   13d9c:	add	r0, sp, #268	; 0x10c
   13da0:	mov	r1, r3
   13da4:	bl	1213c <__snprintf_chk@plt>
   13da8:	ldrb	r3, [r6, #48]	; 0x30
   13dac:	cmp	r3, #0
   13db0:	beq	13fc4 <mount@plt+0x1e64>
   13db4:	add	r2, sp, #268	; 0x10c
   13db8:	ldr	r1, [pc, #836]	; 14104 <mount@plt+0x1fa4>
   13dbc:	ldr	r0, [r6, #44]	; 0x2c
   13dc0:	bl	1b838 <mount@plt+0x96d8>
   13dc4:	ldr	r0, [sp, #56]	; 0x38
   13dc8:	cmp	r0, #0
   13dcc:	beq	13e28 <mount@plt+0x1cc8>
   13dd0:	bl	11cb0 <mnl_attr_get_u64@plt>
   13dd4:	ldr	r2, [pc, #804]	; 14100 <mount@plt+0x1fa0>
   13dd8:	str	r2, [sp]
   13ddc:	mov	r2, #1
   13de0:	uxth	r3, r0
   13de4:	uxth	ip, r1
   13de8:	lsr	r1, r1, #16
   13dec:	lsr	r0, r0, #16
   13df0:	str	r3, [sp, #16]
   13df4:	mov	r3, #32
   13df8:	str	r0, [sp, #12]
   13dfc:	stmib	sp, {r1, ip}
   13e00:	add	r0, sp, #268	; 0x10c
   13e04:	mov	r1, r3
   13e08:	bl	1213c <__snprintf_chk@plt>
   13e0c:	ldrb	r3, [r6, #48]	; 0x30
   13e10:	cmp	r3, #0
   13e14:	beq	13e88 <mount@plt+0x1d28>
   13e18:	add	r2, sp, #268	; 0x10c
   13e1c:	ldr	r1, [pc, #740]	; 14108 <mount@plt+0x1fa8>
   13e20:	ldr	r0, [r6, #44]	; 0x2c
   13e24:	bl	1b838 <mount@plt+0x96d8>
   13e28:	ldrb	r3, [r6, #12]
   13e2c:	cmp	r3, #0
   13e30:	bne	13eac <mount@plt+0x1d4c>
   13e34:	ldrb	r3, [r6, #48]	; 0x30
   13e38:	cmp	r3, #0
   13e3c:	movne	r0, #1
   13e40:	beq	14014 <mount@plt+0x1eb4>
   13e44:	ldr	r2, [sp, #300]	; 0x12c
   13e48:	ldr	r3, [sl]
   13e4c:	cmp	r2, r3
   13e50:	bne	140dc <mount@plt+0x1f7c>
   13e54:	add	sp, sp, #308	; 0x134
   13e58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e5c:	mov	r2, r4
   13e60:	ldr	r0, [r6, #44]	; 0x2c
   13e64:	ldr	r1, [pc, #672]	; 1410c <mount@plt+0x1fac>
   13e68:	bl	1b8a0 <mount@plt+0x9740>
   13e6c:	mov	r2, r5
   13e70:	ldr	r1, [pc, #664]	; 14110 <mount@plt+0x1fb0>
   13e74:	ldr	r0, [r6, #44]	; 0x2c
   13e78:	bl	1b838 <mount@plt+0x96d8>
   13e7c:	b	13cf8 <mount@plt+0x1b98>
   13e80:	mvn	r0, #0
   13e84:	b	13e44 <mount@plt+0x1ce4>
   13e88:	ldr	r1, [pc, #600]	; 140e8 <mount@plt+0x1f88>
   13e8c:	add	r3, sp, #268	; 0x10c
   13e90:	ldr	r2, [pc, #636]	; 14114 <mount@plt+0x1fb4>
   13e94:	ldr	r0, [r1]
   13e98:	mov	r1, #1
   13e9c:	bl	11f74 <__fprintf_chk@plt>
   13ea0:	ldrb	r3, [r6, #12]
   13ea4:	cmp	r3, #0
   13ea8:	beq	13e34 <mount@plt+0x1cd4>
   13eac:	ldr	r0, [sp, #44]	; 0x2c
   13eb0:	cmp	r0, #0
   13eb4:	beq	13e34 <mount@plt+0x1cd4>
   13eb8:	bl	11cb0 <mnl_attr_get_u64@plt>
   13ebc:	ldrb	r3, [r6, #48]	; 0x30
   13ec0:	cmp	r3, #0
   13ec4:	mov	r4, r0
   13ec8:	mov	r5, r1
   13ecc:	beq	140b0 <mount@plt+0x1f50>
   13ed0:	ldr	r0, [r6, #44]	; 0x2c
   13ed4:	ldr	r1, [pc, #572]	; 14118 <mount@plt+0x1fb8>
   13ed8:	bl	1b518 <mount@plt+0x93b8>
   13edc:	ldr	r0, [r6, #44]	; 0x2c
   13ee0:	bl	1b68c <mount@plt+0x952c>
   13ee4:	orrs	r3, r4, r5
   13ee8:	ldrb	r1, [r6, #48]	; 0x30
   13eec:	beq	13fb0 <mount@plt+0x1e50>
   13ef0:	mov	r7, #1
   13ef4:	mov	fp, #0
   13ef8:	b	13f48 <mount@plt+0x1de8>
   13efc:	cmp	r3, #31
   13f00:	ldr	r0, [r6, #44]	; 0x2c
   13f04:	bhi	14054 <mount@plt+0x1ef4>
   13f08:	ldr	r3, [pc, #524]	; 1411c <mount@plt+0x1fbc>
   13f0c:	add	r3, r3, r7, lsl #2
   13f10:	ldr	r1, [r3, #-4]
   13f14:	ldr	r3, [pc, #516]	; 14120 <mount@plt+0x1fc0>
   13f18:	cmp	r1, #0
   13f1c:	moveq	r1, r3
   13f20:	bl	1b720 <mount@plt+0x95c0>
   13f24:	ldrb	r1, [r6, #48]	; 0x30
   13f28:	lsr	r3, r4, #1
   13f2c:	orr	r3, r3, r5, lsl #31
   13f30:	lsr	r2, r5, #1
   13f34:	mov	r4, r3
   13f38:	mov	r5, r2
   13f3c:	orrs	r3, r4, r5
   13f40:	beq	13fb0 <mount@plt+0x1e50>
   13f44:	add	r7, r7, #1
   13f48:	and	r8, r4, #1
   13f4c:	mov	r9, fp
   13f50:	orrs	r3, r8, r9
   13f54:	beq	13f28 <mount@plt+0x1dc8>
   13f58:	cmp	r1, #0
   13f5c:	sub	r3, r7, #1
   13f60:	bne	13efc <mount@plt+0x1d9c>
   13f64:	cmp	r3, #31
   13f68:	ldr	r3, [pc, #376]	; 140e8 <mount@plt+0x1f88>
   13f6c:	ldr	r1, [r3]
   13f70:	bhi	1402c <mount@plt+0x1ecc>
   13f74:	ldr	r3, [pc, #416]	; 1411c <mount@plt+0x1fbc>
   13f78:	add	r3, r3, r7, lsl #2
   13f7c:	ldr	r0, [r3, #-4]
   13f80:	ldr	r3, [pc, #408]	; 14120 <mount@plt+0x1fc0>
   13f84:	cmp	r0, #0
   13f88:	moveq	r0, r3
   13f8c:	bl	120dc <fputs@plt>
   13f90:	lsr	r3, r4, #1
   13f94:	orr	r3, r3, r5, lsl #31
   13f98:	lsr	r2, r5, #1
   13f9c:	mov	r4, r3
   13fa0:	mov	r5, r2
   13fa4:	orrs	r3, r4, r5
   13fa8:	bne	1407c <mount@plt+0x1f1c>
   13fac:	ldrb	r1, [r6, #48]	; 0x30
   13fb0:	cmp	r1, #0
   13fb4:	beq	1409c <mount@plt+0x1f3c>
   13fb8:	ldr	r0, [r6, #44]	; 0x2c
   13fbc:	bl	1b6b8 <mount@plt+0x9558>
   13fc0:	b	13e34 <mount@plt+0x1cd4>
   13fc4:	ldr	r1, [pc, #284]	; 140e8 <mount@plt+0x1f88>
   13fc8:	add	r3, sp, #268	; 0x10c
   13fcc:	ldr	r2, [pc, #336]	; 14124 <mount@plt+0x1fc4>
   13fd0:	ldr	r0, [r1]
   13fd4:	mov	r1, #1
   13fd8:	bl	11f74 <__fprintf_chk@plt>
   13fdc:	b	13dc4 <mount@plt+0x1c64>
   13fe0:	ldr	r1, [pc, #256]	; 140e8 <mount@plt+0x1f88>
   13fe4:	mov	r3, r0
   13fe8:	ldr	r2, [pc, #312]	; 14128 <mount@plt+0x1fc8>
   13fec:	ldr	r0, [r1]
   13ff0:	mov	r1, #1
   13ff4:	bl	11f74 <__fprintf_chk@plt>
   13ff8:	b	13d60 <mount@plt+0x1c00>
   13ffc:	ldr	r1, [pc, #228]	; 140e8 <mount@plt+0x1f88>
   14000:	ldr	r2, [pc, #292]	; 1412c <mount@plt+0x1fcc>
   14004:	ldr	r0, [r1]
   14008:	mov	r1, #1
   1400c:	bl	11f74 <__fprintf_chk@plt>
   14010:	b	13d34 <mount@plt+0x1bd4>
   14014:	ldr	r3, [pc, #204]	; 140e8 <mount@plt+0x1f88>
   14018:	mov	r0, #10
   1401c:	ldr	r1, [r3]
   14020:	bl	1201c <fputc@plt>
   14024:	mov	r0, #1
   14028:	b	13e44 <mount@plt+0x1ce4>
   1402c:	sub	r3, r7, #33	; 0x21
   14030:	cmp	r3, #4
   14034:	bhi	140cc <mount@plt+0x1f6c>
   14038:	ldr	r3, [pc, #240]	; 14130 <mount@plt+0x1fd0>
   1403c:	add	r3, r3, r7, lsl #2
   14040:	ldr	r0, [r3, #-132]	; 0xffffff7c
   14044:	ldr	r3, [pc, #212]	; 14120 <mount@plt+0x1fc0>
   14048:	cmp	r0, #0
   1404c:	moveq	r0, r3
   14050:	b	13f8c <mount@plt+0x1e2c>
   14054:	sub	r3, r7, #33	; 0x21
   14058:	cmp	r3, #4
   1405c:	bhi	140d4 <mount@plt+0x1f74>
   14060:	ldr	r3, [pc, #200]	; 14130 <mount@plt+0x1fd0>
   14064:	add	r3, r3, r7, lsl #2
   14068:	ldr	r1, [r3, #-132]	; 0xffffff7c
   1406c:	ldr	r3, [pc, #172]	; 14120 <mount@plt+0x1fc0>
   14070:	cmp	r1, #0
   14074:	moveq	r1, r3
   14078:	b	13f20 <mount@plt+0x1dc0>
   1407c:	ldr	r3, [pc, #100]	; 140e8 <mount@plt+0x1f88>
   14080:	mov	r1, #1
   14084:	mov	r2, #2
   14088:	ldr	r3, [r3]
   1408c:	ldr	r0, [pc, #160]	; 14134 <mount@plt+0x1fd4>
   14090:	bl	11d40 <fwrite@plt>
   14094:	ldrb	r1, [r6, #48]	; 0x30
   14098:	b	13f44 <mount@plt+0x1de4>
   1409c:	ldr	r3, [pc, #68]	; 140e8 <mount@plt+0x1f88>
   140a0:	mov	r0, #62	; 0x3e
   140a4:	ldr	r1, [r3]
   140a8:	bl	1201c <fputc@plt>
   140ac:	b	13e34 <mount@plt+0x1cd4>
   140b0:	ldr	r3, [pc, #48]	; 140e8 <mount@plt+0x1f88>
   140b4:	mov	r2, #12
   140b8:	mov	r1, #1
   140bc:	ldr	r3, [r3]
   140c0:	ldr	r0, [pc, #112]	; 14138 <mount@plt+0x1fd8>
   140c4:	bl	11d40 <fwrite@plt>
   140c8:	b	13ee4 <mount@plt+0x1d84>
   140cc:	ldr	r0, [pc, #76]	; 14120 <mount@plt+0x1fc0>
   140d0:	b	13f8c <mount@plt+0x1e2c>
   140d4:	ldr	r1, [pc, #68]	; 14120 <mount@plt+0x1fc0>
   140d8:	b	13f20 <mount@plt+0x1dc0>
   140dc:	bl	11ca4 <__stack_chk_fail@plt>
   140e0:	andeq	r2, r3, r8, ror #29
   140e4:	andeq	r2, r1, r4, lsl r9
   140e8:	andeq	r3, r3, r4, ror #4
   140ec:	andeq	r0, r2, r0, lsr r1
   140f0:	andeq	r0, r2, r8, lsr r0
   140f4:	andeq	r0, r2, r0, lsl r1
   140f8:	andeq	r0, r2, ip, lsr r1
   140fc:	andeq	r0, r2, r8, asr r1
   14100:	andeq	r0, r2, r4, ror #2
   14104:	andeq	r0, r2, r8, ror r1
   14108:	muleq	r2, r4, r1
   1410c:	andeq	r0, r2, r0, lsr #2
   14110:	andeq	r0, r2, r8, lsr #2
   14114:	andeq	r0, r2, r4, lsr #3
   14118:			; <UNDEFINED> instruction: 0x000201b8
   1411c:	andeq	r0, r2, r4, asr r0
   14120:	andeq	r0, r2, r8, lsl r1
   14124:	andeq	r0, r2, r4, lsl #3
   14128:	andeq	r0, r2, ip, asr r1
   1412c:	andeq	r0, r2, r8, asr #2
   14130:	ldrdeq	r0, [r2], -r4
   14134:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   14138:	andeq	r0, r2, r0, asr #3
   1413c:	push	{r4, r5, lr}
   14140:	sub	sp, sp, #52	; 0x34
   14144:	ldr	r4, [pc, #116]	; 141c0 <mount@plt+0x2060>
   14148:	mov	r5, r0
   1414c:	mov	r2, #40	; 0x28
   14150:	ldr	r3, [r4]
   14154:	mov	r1, #0
   14158:	add	r0, sp, #4
   1415c:	str	r3, [sp, #44]	; 0x2c
   14160:	bl	11efc <memset@plt>
   14164:	ldr	r3, [pc, #88]	; 141c4 <mount@plt+0x2064>
   14168:	ldr	r2, [pc, #88]	; 141c8 <mount@plt+0x2068>
   1416c:	ldr	lr, [pc, #88]	; 141cc <mount@plt+0x206c>
   14170:	ldr	ip, [pc, #88]	; 141d0 <mount@plt+0x2070>
   14174:	str	r3, [sp, #8]
   14178:	str	r3, [sp, #16]
   1417c:	str	r3, [sp, #24]
   14180:	ldr	r3, [pc, #76]	; 141d4 <mount@plt+0x2074>
   14184:	str	r2, [sp, #12]
   14188:	add	r1, sp, #4
   1418c:	ldr	r2, [pc, #68]	; 141d8 <mount@plt+0x2078>
   14190:	mov	r0, r5
   14194:	str	r3, [sp, #32]
   14198:	str	lr, [sp, #20]
   1419c:	str	ip, [sp, #28]
   141a0:	bl	13128 <mount@plt+0xfc8>
   141a4:	ldr	r2, [sp, #44]	; 0x2c
   141a8:	ldr	r3, [r4]
   141ac:	cmp	r2, r3
   141b0:	bne	141bc <mount@plt+0x205c>
   141b4:	add	sp, sp, #52	; 0x34
   141b8:	pop	{r4, r5, pc}
   141bc:	bl	11ca4 <__stack_chk_fail@plt>
   141c0:	andeq	r2, r3, r8, ror #29
   141c4:	andeq	r3, r1, r0, lsr #23
   141c8:	ldrdeq	r0, [r2], -r4
   141cc:	ldrdeq	r0, [r2], -ip
   141d0:	strdeq	pc, [r1], -r8
   141d4:	andeq	r3, r1, r4, ror fp
   141d8:	andeq	r0, r2, r4, ror #3
   141dc:	push	{r4, lr}
   141e0:	sub	sp, sp, #24
   141e4:	ldr	r4, [pc, #84]	; 14240 <mount@plt+0x20e0>
   141e8:	ldr	r3, [r0, #28]
   141ec:	ldr	r1, [pc, #80]	; 14244 <mount@plt+0x20e4>
   141f0:	ldr	r2, [r4]
   141f4:	cmp	r3, #0
   141f8:	str	r2, [sp, #20]
   141fc:	mov	r2, #0
   14200:	str	r2, [sp, #12]
   14204:	str	r2, [sp, #4]
   14208:	str	r2, [sp, #16]
   1420c:	str	r1, [sp, #8]
   14210:	moveq	r0, r3
   14214:	beq	14224 <mount@plt+0x20c4>
   14218:	add	r1, sp, #4
   1421c:	ldr	r2, [pc, #36]	; 14248 <mount@plt+0x20e8>
   14220:	bl	13128 <mount@plt+0xfc8>
   14224:	ldr	r2, [sp, #20]
   14228:	ldr	r3, [r4]
   1422c:	cmp	r2, r3
   14230:	bne	1423c <mount@plt+0x20dc>
   14234:	add	sp, sp, #24
   14238:	pop	{r4, pc}
   1423c:	bl	11ca4 <__stack_chk_fail@plt>
   14240:	andeq	r2, r3, r8, ror #29
   14244:	andeq	r4, r1, r8, lsl #5
   14248:	andeq	r0, r2, r8, ror #1
   1424c:	ldr	r1, [pc, #28]	; 14270 <mount@plt+0x2110>
   14250:	ldr	r3, [r0, #8]
   14254:	push	{r4, lr}
   14258:	ldr	r2, [pc, #20]	; 14274 <mount@plt+0x2114>
   1425c:	ldr	r0, [r1]
   14260:	mov	r1, #1
   14264:	bl	11f74 <__fprintf_chk@plt>
   14268:	mov	r0, #0
   1426c:	pop	{r4, pc}
   14270:	andeq	r3, r3, r4, ror #4
   14274:	andeq	r0, r2, r4, lsr r5
   14278:	mov	r2, #1
   1427c:	ldr	r1, [pc]	; 14284 <mount@plt+0x2124>
   14280:	b	1344c <mount@plt+0x12ec>
   14284:	ldrdeq	r4, [r1], -ip
   14288:	push	{r4, r5, r6, lr}
   1428c:	mov	r3, #5
   14290:	ldr	r5, [pc, #176]	; 14348 <mount@plt+0x21e8>
   14294:	sub	sp, sp, #8
   14298:	mov	r4, r0
   1429c:	ldr	ip, [r5]
   142a0:	mov	r1, r3
   142a4:	mov	r2, sp
   142a8:	str	ip, [sp, #4]
   142ac:	bl	131d4 <mount@plt+0x1074>
   142b0:	ldr	r2, [r4, #24]
   142b4:	ldr	r0, [r4, #36]	; 0x24
   142b8:	mov	r1, #1
   142bc:	bl	11cbc <mnl_attr_put_u32@plt>
   142c0:	ldr	r2, [r4, #28]
   142c4:	ldr	r0, [r4, #36]	; 0x24
   142c8:	mov	r1, #3
   142cc:	bl	11cbc <mnl_attr_put_u32@plt>
   142d0:	mov	r0, r4
   142d4:	bl	13218 <mount@plt+0x10b8>
   142d8:	subs	r6, r0, #0
   142dc:	bne	14310 <mount@plt+0x21b0>
   142e0:	ldrb	r3, [r4, #48]	; 0x30
   142e4:	cmp	r3, #0
   142e8:	bne	14338 <mount@plt+0x21d8>
   142ec:	ldr	r3, [sp]
   142f0:	mov	r2, r4
   142f4:	ldr	r1, [pc, #80]	; 1434c <mount@plt+0x21ec>
   142f8:	mov	r0, r4
   142fc:	bl	132e4 <mount@plt+0x1184>
   14300:	ldrb	r3, [r4, #48]	; 0x30
   14304:	cmp	r3, #0
   14308:	mov	r6, r0
   1430c:	bne	1432c <mount@plt+0x21cc>
   14310:	ldr	r2, [sp, #4]
   14314:	ldr	r3, [r5]
   14318:	mov	r0, r6
   1431c:	cmp	r2, r3
   14320:	bne	14344 <mount@plt+0x21e4>
   14324:	add	sp, sp, #8
   14328:	pop	{r4, r5, r6, pc}
   1432c:	ldr	r0, [r4, #44]	; 0x2c
   14330:	bl	1b638 <mount@plt+0x94d8>
   14334:	b	14310 <mount@plt+0x21b0>
   14338:	ldr	r0, [r4, #44]	; 0x2c
   1433c:	bl	1b630 <mount@plt+0x94d0>
   14340:	b	142ec <mount@plt+0x218c>
   14344:	bl	11ca4 <__stack_chk_fail@plt>
   14348:	andeq	r2, r3, r8, ror #29
   1434c:	andeq	r4, r1, r0, asr r3
   14350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14354:	sub	sp, sp, #340	; 0x154
   14358:	ldr	r5, [pc, #1368]	; 148b8 <mount@plt+0x2758>
   1435c:	mov	r6, r0
   14360:	mov	r2, #240	; 0xf0
   14364:	ldr	r3, [r5]
   14368:	mov	r4, r1
   1436c:	add	r0, sp, #28
   14370:	mov	r1, #0
   14374:	str	r3, [sp, #332]	; 0x14c
   14378:	bl	11efc <memset@plt>
   1437c:	add	r3, sp, #28
   14380:	mov	r0, r6
   14384:	ldr	r2, [pc, #1328]	; 148bc <mount@plt+0x275c>
   14388:	mov	r1, #0
   1438c:	bl	11c80 <mnl_attr_parse@plt>
   14390:	ldr	r0, [sp, #32]
   14394:	cmp	r0, #0
   14398:	beq	14660 <mount@plt+0x2500>
   1439c:	ldr	r3, [sp, #36]	; 0x24
   143a0:	cmp	r3, #0
   143a4:	beq	14660 <mount@plt+0x2500>
   143a8:	ldr	r3, [sp, #40]	; 0x28
   143ac:	cmp	r3, #0
   143b0:	beq	14844 <mount@plt+0x26e4>
   143b4:	bl	12058 <mnl_attr_get_u32@plt>
   143b8:	mov	r7, r0
   143bc:	ldr	r0, [sp, #40]	; 0x28
   143c0:	bl	12058 <mnl_attr_get_u32@plt>
   143c4:	mov	r6, r0
   143c8:	ldr	r0, [sp, #36]	; 0x24
   143cc:	bl	11f80 <mnl_attr_get_str@plt>
   143d0:	ldr	r2, [pc, #1256]	; 148c0 <mount@plt+0x2760>
   143d4:	mov	r3, #32
   143d8:	str	r2, [sp]
   143dc:	mov	r1, r3
   143e0:	str	r6, [sp, #8]
   143e4:	mov	r2, #1
   143e8:	str	r0, [sp, #4]
   143ec:	add	r0, sp, #268	; 0x10c
   143f0:	bl	1213c <__snprintf_chk@plt>
   143f4:	ldrb	r3, [r4, #48]	; 0x30
   143f8:	cmp	r3, #0
   143fc:	bne	1462c <mount@plt+0x24cc>
   14400:	ldr	r2, [pc, #1212]	; 148c4 <mount@plt+0x2764>
   14404:	add	r3, sp, #268	; 0x10c
   14408:	str	r3, [sp, #4]
   1440c:	str	r6, [sp]
   14410:	mov	r3, r7
   14414:	ldr	r0, [r2]
   14418:	mov	r1, #1
   1441c:	ldr	r2, [pc, #1188]	; 148c8 <mount@plt+0x2768>
   14420:	bl	11f74 <__fprintf_chk@plt>
   14424:	ldr	r0, [sp, #60]	; 0x3c
   14428:	cmp	r0, #0
   1442c:	beq	14488 <mount@plt+0x2328>
   14430:	bl	11cb0 <mnl_attr_get_u64@plt>
   14434:	ldr	r2, [pc, #1168]	; 148cc <mount@plt+0x276c>
   14438:	str	r2, [sp]
   1443c:	mov	r2, #1
   14440:	uxth	r3, r0
   14444:	uxth	ip, r1
   14448:	lsr	r1, r1, #16
   1444c:	lsr	r0, r0, #16
   14450:	str	r3, [sp, #16]
   14454:	mov	r3, #32
   14458:	str	r0, [sp, #12]
   1445c:	stmib	sp, {r1, ip}
   14460:	add	r0, sp, #300	; 0x12c
   14464:	mov	r1, r3
   14468:	bl	1213c <__snprintf_chk@plt>
   1446c:	ldrb	r3, [r4, #48]	; 0x30
   14470:	cmp	r3, #0
   14474:	beq	14718 <mount@plt+0x25b8>
   14478:	add	r2, sp, #300	; 0x12c
   1447c:	ldr	r1, [pc, #1100]	; 148d0 <mount@plt+0x2770>
   14480:	ldr	r0, [r4, #44]	; 0x2c
   14484:	bl	1b838 <mount@plt+0x96d8>
   14488:	ldr	r0, [sp, #64]	; 0x40
   1448c:	cmp	r0, #0
   14490:	beq	144b4 <mount@plt+0x2354>
   14494:	bl	12058 <mnl_attr_get_u32@plt>
   14498:	ldrb	r1, [r4, #48]	; 0x30
   1449c:	cmp	r1, #0
   144a0:	beq	146fc <mount@plt+0x259c>
   144a4:	mov	r2, r0
   144a8:	ldr	r1, [pc, #1060]	; 148d4 <mount@plt+0x2774>
   144ac:	ldr	r0, [r4, #44]	; 0x2c
   144b0:	bl	1b8a0 <mount@plt+0x9740>
   144b4:	ldr	r0, [sp, #68]	; 0x44
   144b8:	cmp	r0, #0
   144bc:	beq	144e0 <mount@plt+0x2380>
   144c0:	bl	12058 <mnl_attr_get_u32@plt>
   144c4:	ldrb	r1, [r4, #48]	; 0x30
   144c8:	cmp	r1, #0
   144cc:	beq	146e0 <mount@plt+0x2580>
   144d0:	mov	r2, r0
   144d4:	ldr	r1, [pc, #1020]	; 148d8 <mount@plt+0x2778>
   144d8:	ldr	r0, [r4, #44]	; 0x2c
   144dc:	bl	1b8a0 <mount@plt+0x9740>
   144e0:	ldr	r0, [sp, #72]	; 0x48
   144e4:	cmp	r0, #0
   144e8:	beq	1450c <mount@plt+0x23ac>
   144ec:	bl	120b8 <mnl_attr_get_u8@plt>
   144f0:	ldrb	r1, [r4, #48]	; 0x30
   144f4:	cmp	r1, #0
   144f8:	beq	146c4 <mount@plt+0x2564>
   144fc:	mov	r2, r0
   14500:	ldr	r1, [pc, #980]	; 148dc <mount@plt+0x277c>
   14504:	ldr	r0, [r4, #44]	; 0x2c
   14508:	bl	1b8a0 <mount@plt+0x9740>
   1450c:	ldr	r0, [sp, #76]	; 0x4c
   14510:	cmp	r0, #0
   14514:	beq	14548 <mount@plt+0x23e8>
   14518:	bl	120b8 <mnl_attr_get_u8@plt>
   1451c:	ldrb	r3, [r4, #48]	; 0x30
   14520:	cmp	r3, #0
   14524:	beq	14698 <mount@plt+0x2538>
   14528:	cmp	r0, #5
   1452c:	ldr	r3, [r4, #44]	; 0x2c
   14530:	ldrls	r2, [pc, #936]	; 148e0 <mount@plt+0x2780>
   14534:	ldrhi	r2, [pc, #936]	; 148e4 <mount@plt+0x2784>
   14538:	ldr	r1, [pc, #936]	; 148e8 <mount@plt+0x2788>
   1453c:	ldrls	r2, [r2, r0, lsl #2]
   14540:	mov	r0, r3
   14544:	bl	1b838 <mount@plt+0x96d8>
   14548:	ldr	r0, [sp, #80]	; 0x50
   1454c:	cmp	r0, #0
   14550:	beq	14588 <mount@plt+0x2428>
   14554:	bl	120b8 <mnl_attr_get_u8@plt>
   14558:	ldrb	r3, [r4, #48]	; 0x30
   1455c:	cmp	r3, #0
   14560:	beq	14668 <mount@plt+0x2508>
   14564:	cmp	r0, #11
   14568:	ldr	r3, [r4, #44]	; 0x2c
   1456c:	ldrls	r2, [pc, #876]	; 148e0 <mount@plt+0x2780>
   14570:	ldrhi	r2, [pc, #876]	; 148e4 <mount@plt+0x2784>
   14574:	addls	r0, r2, r0, lsl #2
   14578:	ldr	r1, [pc, #876]	; 148ec <mount@plt+0x278c>
   1457c:	ldrls	r2, [r0, #24]
   14580:	mov	r0, r3
   14584:	bl	1b838 <mount@plt+0x96d8>
   14588:	ldr	r0, [sp, #232]	; 0xe8
   1458c:	cmp	r0, #0
   14590:	beq	145f8 <mount@plt+0x2498>
   14594:	ldr	r3, [sp, #228]	; 0xe4
   14598:	cmp	r3, #0
   1459c:	beq	145f8 <mount@plt+0x2498>
   145a0:	bl	11f80 <mnl_attr_get_str@plt>
   145a4:	mov	r6, r0
   145a8:	ldr	r0, [sp, #228]	; 0xe4
   145ac:	bl	12058 <mnl_attr_get_u32@plt>
   145b0:	ldrb	r3, [r4, #48]	; 0x30
   145b4:	cmp	r3, #0
   145b8:	mov	r7, r0
   145bc:	bne	14734 <mount@plt+0x25d4>
   145c0:	ldr	sl, [pc, #764]	; 148c4 <mount@plt+0x2764>
   145c4:	mov	r3, r6
   145c8:	ldr	r2, [pc, #800]	; 148f0 <mount@plt+0x2790>
   145cc:	ldr	r0, [sl]
   145d0:	mov	r1, #1
   145d4:	bl	11f74 <__fprintf_chk@plt>
   145d8:	ldrb	r3, [r4, #12]
   145dc:	cmp	r3, #0
   145e0:	beq	14604 <mount@plt+0x24a4>
   145e4:	mov	r3, r7
   145e8:	ldr	r0, [sl]
   145ec:	ldr	r2, [pc, #768]	; 148f4 <mount@plt+0x2794>
   145f0:	mov	r1, #1
   145f4:	bl	11f74 <__fprintf_chk@plt>
   145f8:	ldrb	r3, [r4, #12]
   145fc:	cmp	r3, #0
   14600:	bne	14760 <mount@plt+0x2600>
   14604:	ldrb	r3, [r4, #48]	; 0x30
   14608:	cmp	r3, #0
   1460c:	movne	r0, #1
   14610:	beq	1482c <mount@plt+0x26cc>
   14614:	ldr	r2, [sp, #332]	; 0x14c
   14618:	ldr	r3, [r5]
   1461c:	cmp	r2, r3
   14620:	bne	148b4 <mount@plt+0x2754>
   14624:	add	sp, sp, #340	; 0x154
   14628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1462c:	mov	r2, r7
   14630:	ldr	r0, [r4, #44]	; 0x2c
   14634:	ldr	r1, [pc, #700]	; 148f8 <mount@plt+0x2798>
   14638:	bl	1b8a0 <mount@plt+0x9740>
   1463c:	mov	r2, r6
   14640:	ldr	r0, [r4, #44]	; 0x2c
   14644:	ldr	r1, [pc, #688]	; 148fc <mount@plt+0x279c>
   14648:	bl	1b8a0 <mount@plt+0x9740>
   1464c:	add	r2, sp, #268	; 0x10c
   14650:	ldr	r1, [pc, #680]	; 14900 <mount@plt+0x27a0>
   14654:	ldr	r0, [r4, #44]	; 0x2c
   14658:	bl	1b838 <mount@plt+0x96d8>
   1465c:	b	14424 <mount@plt+0x22c4>
   14660:	mvn	r0, #0
   14664:	b	14614 <mount@plt+0x24b4>
   14668:	ldr	r3, [pc, #596]	; 148c4 <mount@plt+0x2764>
   1466c:	cmp	r0, #11
   14670:	mov	r1, #1
   14674:	ldr	r2, [r3]
   14678:	ldrls	r3, [pc, #608]	; 148e0 <mount@plt+0x2780>
   1467c:	ldrhi	r3, [pc, #608]	; 148e4 <mount@plt+0x2784>
   14680:	addls	r0, r3, r0, lsl #2
   14684:	ldrls	r3, [r0, #24]
   14688:	mov	r0, r2
   1468c:	ldr	r2, [pc, #624]	; 14904 <mount@plt+0x27a4>
   14690:	bl	11f74 <__fprintf_chk@plt>
   14694:	b	14588 <mount@plt+0x2428>
   14698:	ldr	r3, [pc, #548]	; 148c4 <mount@plt+0x2764>
   1469c:	cmp	r0, #5
   146a0:	mov	r1, #1
   146a4:	ldr	r2, [r3]
   146a8:	ldrls	r3, [pc, #560]	; 148e0 <mount@plt+0x2780>
   146ac:	ldrhi	r3, [pc, #560]	; 148e4 <mount@plt+0x2784>
   146b0:	ldrls	r3, [r3, r0, lsl #2]
   146b4:	mov	r0, r2
   146b8:	ldr	r2, [pc, #584]	; 14908 <mount@plt+0x27a8>
   146bc:	bl	11f74 <__fprintf_chk@plt>
   146c0:	b	14548 <mount@plt+0x23e8>
   146c4:	ldr	r1, [pc, #504]	; 148c4 <mount@plt+0x2764>
   146c8:	mov	r3, r0
   146cc:	ldr	r2, [pc, #568]	; 1490c <mount@plt+0x27ac>
   146d0:	ldr	r0, [r1]
   146d4:	mov	r1, #1
   146d8:	bl	11f74 <__fprintf_chk@plt>
   146dc:	b	1450c <mount@plt+0x23ac>
   146e0:	ldr	r1, [pc, #476]	; 148c4 <mount@plt+0x2764>
   146e4:	mov	r3, r0
   146e8:	ldr	r2, [pc, #544]	; 14910 <mount@plt+0x27b0>
   146ec:	ldr	r0, [r1]
   146f0:	mov	r1, #1
   146f4:	bl	11f74 <__fprintf_chk@plt>
   146f8:	b	144e0 <mount@plt+0x2380>
   146fc:	ldr	r1, [pc, #448]	; 148c4 <mount@plt+0x2764>
   14700:	mov	r3, r0
   14704:	ldr	r2, [pc, #520]	; 14914 <mount@plt+0x27b4>
   14708:	ldr	r0, [r1]
   1470c:	mov	r1, #1
   14710:	bl	11f74 <__fprintf_chk@plt>
   14714:	b	144b4 <mount@plt+0x2354>
   14718:	ldr	r1, [pc, #420]	; 148c4 <mount@plt+0x2764>
   1471c:	add	r3, sp, #300	; 0x12c
   14720:	ldr	r2, [pc, #496]	; 14918 <mount@plt+0x27b8>
   14724:	ldr	r0, [r1]
   14728:	mov	r1, #1
   1472c:	bl	11f74 <__fprintf_chk@plt>
   14730:	b	14488 <mount@plt+0x2328>
   14734:	mov	r2, r6
   14738:	ldr	r1, [pc, #476]	; 1491c <mount@plt+0x27bc>
   1473c:	ldr	r0, [r4, #44]	; 0x2c
   14740:	bl	1b838 <mount@plt+0x96d8>
   14744:	mov	r2, r7
   14748:	ldr	r1, [pc, #464]	; 14920 <mount@plt+0x27c0>
   1474c:	ldr	r0, [r4, #44]	; 0x2c
   14750:	bl	1b8a0 <mount@plt+0x9740>
   14754:	ldrb	r3, [r4, #12]
   14758:	cmp	r3, #0
   1475c:	beq	14604 <mount@plt+0x24a4>
   14760:	ldr	r0, [sp, #44]	; 0x2c
   14764:	cmp	r0, #0
   14768:	beq	14604 <mount@plt+0x24a4>
   1476c:	bl	11cb0 <mnl_attr_get_u64@plt>
   14770:	ldrb	r3, [r4, #48]	; 0x30
   14774:	cmp	r3, #0
   14778:	mov	r6, r0
   1477c:	mov	r7, r1
   14780:	beq	14884 <mount@plt+0x2724>
   14784:	ldr	r0, [r4, #44]	; 0x2c
   14788:	ldr	r1, [pc, #404]	; 14924 <mount@plt+0x27c4>
   1478c:	bl	1b518 <mount@plt+0x93b8>
   14790:	ldr	r0, [r4, #44]	; 0x2c
   14794:	bl	1b68c <mount@plt+0x952c>
   14798:	orrs	r3, r6, r7
   1479c:	ldrb	r1, [r4, #48]	; 0x30
   147a0:	beq	14818 <mount@plt+0x26b8>
   147a4:	ldr	fp, [pc, #380]	; 14928 <mount@plt+0x27c8>
   147a8:	mov	sl, #1
   147ac:	b	147c8 <mount@plt+0x2668>
   147b0:	ldr	r0, [r4, #44]	; 0x2c
   147b4:	bl	1b720 <mount@plt+0x95c0>
   147b8:	ldrb	r1, [r4, #48]	; 0x30
   147bc:	orrs	r3, r6, r7
   147c0:	beq	14818 <mount@plt+0x26b8>
   147c4:	add	sl, sl, #1
   147c8:	and	r8, r6, #1
   147cc:	lsr	r3, r6, #1
   147d0:	mov	r9, #0
   147d4:	orr	r3, r3, r7, lsl #31
   147d8:	orrs	r2, r8, r9
   147dc:	lsr	r2, r7, #1
   147e0:	mov	r6, r3
   147e4:	mov	r7, r2
   147e8:	beq	147bc <mount@plt+0x265c>
   147ec:	add	r3, fp, sl, lsl #2
   147f0:	cmp	r1, r9
   147f4:	ldr	r1, [r3, #-4]
   147f8:	bne	147b0 <mount@plt+0x2650>
   147fc:	ldr	r3, [pc, #192]	; 148c4 <mount@plt+0x2764>
   14800:	mov	r0, r1
   14804:	ldr	r1, [r3]
   14808:	bl	120dc <fputs@plt>
   1480c:	orrs	r3, r6, r7
   14810:	bne	14864 <mount@plt+0x2704>
   14814:	ldrb	r1, [r4, #48]	; 0x30
   14818:	cmp	r1, #0
   1481c:	beq	148a0 <mount@plt+0x2740>
   14820:	ldr	r0, [r4, #44]	; 0x2c
   14824:	bl	1b6b8 <mount@plt+0x9558>
   14828:	b	14604 <mount@plt+0x24a4>
   1482c:	ldr	r3, [pc, #144]	; 148c4 <mount@plt+0x2764>
   14830:	mov	r0, #10
   14834:	ldr	r1, [r3]
   14838:	bl	1201c <fputc@plt>
   1483c:	mov	r0, #1
   14840:	b	14614 <mount@plt+0x24b4>
   14844:	ldr	r3, [pc, #224]	; 1492c <mount@plt+0x27cc>
   14848:	mov	r2, #39	; 0x27
   1484c:	mov	r1, #1
   14850:	ldr	r3, [r3]
   14854:	ldr	r0, [pc, #212]	; 14930 <mount@plt+0x27d0>
   14858:	bl	11d40 <fwrite@plt>
   1485c:	mvn	r0, #0
   14860:	b	14614 <mount@plt+0x24b4>
   14864:	ldr	r3, [pc, #88]	; 148c4 <mount@plt+0x2764>
   14868:	mov	r1, #1
   1486c:	mov	r2, #2
   14870:	ldr	r3, [r3]
   14874:	ldr	r0, [pc, #184]	; 14934 <mount@plt+0x27d4>
   14878:	bl	11d40 <fwrite@plt>
   1487c:	ldrb	r1, [r4, #48]	; 0x30
   14880:	b	147c4 <mount@plt+0x2664>
   14884:	ldr	r3, [pc, #56]	; 148c4 <mount@plt+0x2764>
   14888:	mov	r2, #12
   1488c:	mov	r1, #1
   14890:	ldr	r3, [r3]
   14894:	ldr	r0, [pc, #156]	; 14938 <mount@plt+0x27d8>
   14898:	bl	11d40 <fwrite@plt>
   1489c:	b	14798 <mount@plt+0x2638>
   148a0:	ldr	r3, [pc, #28]	; 148c4 <mount@plt+0x2764>
   148a4:	mov	r0, #62	; 0x3e
   148a8:	ldr	r1, [r3]
   148ac:	bl	1201c <fputc@plt>
   148b0:	b	14604 <mount@plt+0x24a4>
   148b4:	bl	11ca4 <__stack_chk_fail@plt>
   148b8:	andeq	r2, r3, r8, ror #29
   148bc:	andeq	r2, r1, r4, lsl r9
   148c0:	andeq	r0, r2, ip, asr r5
   148c4:	andeq	r3, r3, r4, ror #4
   148c8:	andeq	r0, r2, r4, ror #10
   148cc:	andeq	r0, r2, r4, ror #2
   148d0:	andeq	r0, r2, r0, ror r5
   148d4:	muleq	r2, r4, r5
   148d8:	andeq	r0, r2, r0, lsr #11
   148dc:			; <UNDEFINED> instruction: 0x000205b4
   148e0:	andeq	r0, r2, ip, ror #8
   148e4:	andeq	r0, r2, r8, lsl r1
   148e8:	andeq	r0, r2, r0, asr #11
   148ec:	ldrdeq	r0, [r2], -r4
   148f0:	andeq	r0, r2, r0, lsl r6
   148f4:	andeq	r0, r2, ip, lsl r6
   148f8:	andeq	r0, r2, r0, lsr #2
   148fc:	andeq	r1, r2, r4, ror #14
   14900:	andeq	r0, r2, r8, lsr #2
   14904:	andeq	r0, r2, r4, ror #11
   14908:	andeq	r0, r2, r8, asr #11
   1490c:			; <UNDEFINED> instruction: 0x000205b8
   14910:	andeq	r0, r2, r8, lsr #11
   14914:	muleq	r2, r8, r5
   14918:	andeq	r0, r2, r0, lsl #11
   1491c:	strdeq	r0, [r2], -r8
   14920:	andeq	r0, r2, r0, lsl #12
   14924:			; <UNDEFINED> instruction: 0x000201b8
   14928:			; <UNDEFINED> instruction: 0x000204b4
   1492c:	andeq	r3, r3, r8, asr r2
   14930:	strdeq	pc, [r1], -r8
   14934:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   14938:	andeq	r0, r2, r0, asr #3
   1493c:	push	{r4, r5, lr}
   14940:	sub	sp, sp, #52	; 0x34
   14944:	ldr	r4, [pc, #116]	; 149c0 <mount@plt+0x2860>
   14948:	mov	r5, r0
   1494c:	mov	r2, #40	; 0x28
   14950:	ldr	r3, [r4]
   14954:	mov	r1, #0
   14958:	add	r0, sp, #4
   1495c:	str	r3, [sp, #44]	; 0x2c
   14960:	bl	11efc <memset@plt>
   14964:	ldr	r3, [pc, #88]	; 149c4 <mount@plt+0x2864>
   14968:	ldr	r2, [pc, #88]	; 149c8 <mount@plt+0x2868>
   1496c:	ldr	lr, [pc, #88]	; 149cc <mount@plt+0x286c>
   14970:	ldr	ip, [pc, #88]	; 149d0 <mount@plt+0x2870>
   14974:	str	r3, [sp, #8]
   14978:	str	r3, [sp, #16]
   1497c:	str	r3, [sp, #24]
   14980:	ldr	r3, [pc, #76]	; 149d4 <mount@plt+0x2874>
   14984:	str	r2, [sp, #12]
   14988:	add	r1, sp, #4
   1498c:	ldr	r2, [pc, #68]	; 149d8 <mount@plt+0x2878>
   14990:	mov	r0, r5
   14994:	str	r3, [sp, #32]
   14998:	str	lr, [sp, #20]
   1499c:	str	ip, [sp, #28]
   149a0:	bl	13128 <mount@plt+0xfc8>
   149a4:	ldr	r2, [sp, #44]	; 0x2c
   149a8:	ldr	r3, [r4]
   149ac:	cmp	r2, r3
   149b0:	bne	149bc <mount@plt+0x285c>
   149b4:	add	sp, sp, #52	; 0x34
   149b8:	pop	{r4, r5, pc}
   149bc:	bl	11ca4 <__stack_chk_fail@plt>
   149c0:	andeq	r2, r3, r8, ror #29
   149c4:	andeq	r4, r1, r8, ror r2
   149c8:	ldrdeq	r0, [r2], -r4
   149cc:	ldrdeq	r0, [r2], -ip
   149d0:	strdeq	pc, [r1], -r8
   149d4:	andeq	r4, r1, ip, asr #4
   149d8:	andeq	r0, r2, r0, lsr r6
   149dc:	push	{r4, lr}
   149e0:	mov	r1, #1
   149e4:	ldr	r4, [pc, #260]	; 14af0 <mount@plt+0x2990>
   149e8:	ldr	r3, [r0, #8]
   149ec:	ldr	r2, [pc, #256]	; 14af4 <mount@plt+0x2994>
   149f0:	ldr	r0, [r4]
   149f4:	bl	11f74 <__fprintf_chk@plt>
   149f8:	ldr	r3, [r4]
   149fc:	mov	r2, #30
   14a00:	mov	r1, #1
   14a04:	ldr	r0, [pc, #236]	; 14af8 <mount@plt+0x2998>
   14a08:	bl	11d40 <fwrite@plt>
   14a0c:	ldr	r3, [r4]
   14a10:	mov	r2, #44	; 0x2c
   14a14:	mov	r1, #1
   14a18:	ldr	r0, [pc, #220]	; 14afc <mount@plt+0x299c>
   14a1c:	bl	11d40 <fwrite@plt>
   14a20:	ldr	r3, [r4]
   14a24:	mov	r2, #43	; 0x2b
   14a28:	mov	r1, #1
   14a2c:	ldr	r0, [pc, #204]	; 14b00 <mount@plt+0x29a0>
   14a30:	bl	11d40 <fwrite@plt>
   14a34:	ldr	r3, [r4]
   14a38:	mov	r2, #70	; 0x46
   14a3c:	mov	r1, #1
   14a40:	ldr	r0, [pc, #188]	; 14b04 <mount@plt+0x29a4>
   14a44:	bl	11d40 <fwrite@plt>
   14a48:	ldr	r3, [r4]
   14a4c:	mov	r2, #46	; 0x2e
   14a50:	mov	r1, #1
   14a54:	ldr	r0, [pc, #172]	; 14b08 <mount@plt+0x29a8>
   14a58:	bl	11d40 <fwrite@plt>
   14a5c:	ldr	r3, [r4]
   14a60:	mov	r2, #73	; 0x49
   14a64:	mov	r1, #1
   14a68:	ldr	r0, [pc, #156]	; 14b0c <mount@plt+0x29ac>
   14a6c:	bl	11d40 <fwrite@plt>
   14a70:	ldr	r3, [r4]
   14a74:	mov	r2, #43	; 0x2b
   14a78:	mov	r1, #1
   14a7c:	ldr	r0, [pc, #140]	; 14b10 <mount@plt+0x29b0>
   14a80:	bl	11d40 <fwrite@plt>
   14a84:	ldr	r3, [r4]
   14a88:	mov	r2, #70	; 0x46
   14a8c:	mov	r1, #1
   14a90:	ldr	r0, [pc, #124]	; 14b14 <mount@plt+0x29b4>
   14a94:	bl	11d40 <fwrite@plt>
   14a98:	ldr	r3, [r4]
   14a9c:	mov	r2, #37	; 0x25
   14aa0:	mov	r1, #1
   14aa4:	ldr	r0, [pc, #108]	; 14b18 <mount@plt+0x29b8>
   14aa8:	bl	11d40 <fwrite@plt>
   14aac:	ldr	r3, [r4]
   14ab0:	mov	r2, #64	; 0x40
   14ab4:	mov	r1, #1
   14ab8:	ldr	r0, [pc, #92]	; 14b1c <mount@plt+0x29bc>
   14abc:	bl	11d40 <fwrite@plt>
   14ac0:	ldr	r3, [r4]
   14ac4:	mov	r2, #37	; 0x25
   14ac8:	mov	r1, #1
   14acc:	ldr	r0, [pc, #76]	; 14b20 <mount@plt+0x29c0>
   14ad0:	bl	11d40 <fwrite@plt>
   14ad4:	ldr	r3, [r4]
   14ad8:	mov	r2, #64	; 0x40
   14adc:	mov	r1, #1
   14ae0:	ldr	r0, [pc, #60]	; 14b24 <mount@plt+0x29c4>
   14ae4:	bl	11d40 <fwrite@plt>
   14ae8:	mov	r0, #0
   14aec:	pop	{r4, pc}
   14af0:	andeq	r3, r3, r4, ror #4
   14af4:	andeq	r1, r2, ip, ror #5
   14af8:	andeq	r1, r2, r0, lsl #6
   14afc:	andeq	r1, r2, r0, lsr #6
   14b00:	andeq	r1, r2, r0, asr r3
   14b04:	andeq	r1, r2, ip, ror r3
   14b08:	andeq	r1, r2, r4, asr #7
   14b0c:	strdeq	r1, [r2], -r4
   14b10:	andeq	r1, r2, r0, asr #8
   14b14:	andeq	r1, r2, ip, ror #8
   14b18:			; <UNDEFINED> instruction: 0x000214b4
   14b1c:	ldrdeq	r1, [r2], -ip
   14b20:	andeq	r1, r2, r0, lsr #10
   14b24:	andeq	r1, r2, r8, asr #10
   14b28:	push	{r4, r5, r6, r7, lr}
   14b2c:	cmp	r1, #9
   14b30:	ldr	r5, [pc, #196]	; 14bfc <mount@plt+0x2a9c>
   14b34:	sub	sp, sp, #12
   14b38:	mov	r4, r0
   14b3c:	ldr	ip, [r5]
   14b40:	ldr	r3, [pc, #184]	; 14c00 <mount@plt+0x2aa0>
   14b44:	mov	r7, r2
   14b48:	moveq	r3, #5
   14b4c:	mov	r2, sp
   14b50:	str	ip, [sp, #4]
   14b54:	bl	131d4 <mount@plt+0x1074>
   14b58:	ldr	r2, [r4, #24]
   14b5c:	ldr	r0, [r4, #36]	; 0x24
   14b60:	mov	r1, #1
   14b64:	bl	11cbc <mnl_attr_put_u32@plt>
   14b68:	ldr	r2, [r4, #28]
   14b6c:	cmp	r2, #0
   14b70:	bne	14be8 <mount@plt+0x2a88>
   14b74:	mov	r0, r4
   14b78:	bl	13218 <mount@plt+0x10b8>
   14b7c:	subs	r6, r0, #0
   14b80:	bne	14bb4 <mount@plt+0x2a54>
   14b84:	ldrb	r3, [r4, #48]	; 0x30
   14b88:	cmp	r3, #0
   14b8c:	bne	14bdc <mount@plt+0x2a7c>
   14b90:	ldr	r3, [sp]
   14b94:	mov	r1, r7
   14b98:	mov	r2, r4
   14b9c:	mov	r0, r4
   14ba0:	bl	132e4 <mount@plt+0x1184>
   14ba4:	ldrb	r3, [r4, #48]	; 0x30
   14ba8:	cmp	r3, #0
   14bac:	mov	r6, r0
   14bb0:	bne	14bd0 <mount@plt+0x2a70>
   14bb4:	ldr	r2, [sp, #4]
   14bb8:	ldr	r3, [r5]
   14bbc:	mov	r0, r6
   14bc0:	cmp	r2, r3
   14bc4:	bne	14bf8 <mount@plt+0x2a98>
   14bc8:	add	sp, sp, #12
   14bcc:	pop	{r4, r5, r6, r7, pc}
   14bd0:	ldr	r0, [r4, #44]	; 0x2c
   14bd4:	bl	1b638 <mount@plt+0x94d8>
   14bd8:	b	14bb4 <mount@plt+0x2a54>
   14bdc:	ldr	r0, [r4, #44]	; 0x2c
   14be0:	bl	1b630 <mount@plt+0x94d0>
   14be4:	b	14b90 <mount@plt+0x2a30>
   14be8:	mov	r1, #3
   14bec:	ldr	r0, [r4, #36]	; 0x24
   14bf0:	bl	11cbc <mnl_attr_put_u32@plt>
   14bf4:	b	14b74 <mount@plt+0x2a14>
   14bf8:	bl	11ca4 <__stack_chk_fail@plt>
   14bfc:	andeq	r2, r3, r8, ror #29
   14c00:	andeq	r0, r0, r5, lsl #6
   14c04:	ldr	r2, [pc, #4]	; 14c10 <mount@plt+0x2ab0>
   14c08:	mov	r1, #9
   14c0c:	b	14b28 <mount@plt+0x29c8>
   14c10:	andeq	r5, r1, r0, asr #21
   14c14:	ldr	r2, [pc, #4]	; 14c20 <mount@plt+0x2ac0>
   14c18:	mov	r1, #14
   14c1c:	b	14b28 <mount@plt+0x29c8>
   14c20:	andeq	r6, r1, r8, lsl #6
   14c24:	ldr	r2, [pc, #4]	; 14c30 <mount@plt+0x2ad0>
   14c28:	mov	r1, #13
   14c2c:	b	14b28 <mount@plt+0x29c8>
   14c30:	andeq	r5, r1, r4, lsr #28
   14c34:	ldr	r2, [pc, #4]	; 14c40 <mount@plt+0x2ae0>
   14c38:	mov	r1, #12
   14c3c:	b	14b28 <mount@plt+0x29c8>
   14c40:	ldrdeq	r4, [r1], -r0
   14c44:	ldr	r2, [pc, #4]	; 14c50 <mount@plt+0x2af0>
   14c48:	mov	r1, #11
   14c4c:	b	14b28 <mount@plt+0x29c8>
   14c50:	andeq	r6, r1, r0, lsr #12
   14c54:	ldr	r2, [pc, #4]	; 14c60 <mount@plt+0x2b00>
   14c58:	mov	r1, #10
   14c5c:	b	14b28 <mount@plt+0x29c8>
   14c60:	andeq	r5, r1, r4, lsr #8
   14c64:	push	{r4, r5, lr}
   14c68:	sub	sp, sp, #12
   14c6c:	ldr	r4, [pc, #140]	; 14d00 <mount@plt+0x2ba0>
   14c70:	mov	r3, r0
   14c74:	ldr	r2, [pc, #136]	; 14d04 <mount@plt+0x2ba4>
   14c78:	ldr	ip, [r4]
   14c7c:	mov	r0, sp
   14c80:	mov	r1, #1
   14c84:	str	ip, [sp, #4]
   14c88:	bl	11dc4 <__asprintf_chk@plt>
   14c8c:	cmp	r0, #0
   14c90:	blt	14cf4 <mount@plt+0x2b94>
   14c94:	ldr	r1, [pc, #108]	; 14d08 <mount@plt+0x2ba8>
   14c98:	ldr	r0, [sp]
   14c9c:	bl	12088 <fopen64@plt>
   14ca0:	mov	r5, r0
   14ca4:	ldr	r0, [sp]
   14ca8:	bl	11c14 <free@plt>
   14cac:	cmp	r5, #0
   14cb0:	beq	14cf4 <mount@plt+0x2b94>
   14cb4:	mov	r2, sp
   14cb8:	ldr	r1, [pc, #76]	; 14d0c <mount@plt+0x2bac>
   14cbc:	mov	r0, r5
   14cc0:	bl	11f20 <fscanf@plt>
   14cc4:	cmp	r0, #1
   14cc8:	movne	r3, #0
   14ccc:	mov	r0, r5
   14cd0:	strne	r3, [sp]
   14cd4:	bl	11f98 <fclose@plt>
   14cd8:	ldr	r0, [sp]
   14cdc:	ldr	r2, [sp, #4]
   14ce0:	ldr	r3, [r4]
   14ce4:	cmp	r2, r3
   14ce8:	bne	14cfc <mount@plt+0x2b9c>
   14cec:	add	sp, sp, #12
   14cf0:	pop	{r4, r5, pc}
   14cf4:	mov	r0, #0
   14cf8:	b	14cdc <mount@plt+0x2b7c>
   14cfc:	bl	11ca4 <__stack_chk_fail@plt>
   14d00:	andeq	r2, r3, r8, ror #29
   14d04:	andeq	r1, r2, ip, lsl #11
   14d08:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   14d0c:	muleq	r2, ip, r5
   14d10:	push	{r4, r5, r6, lr}
   14d14:	mov	r5, r1
   14d18:	mov	r6, r2
   14d1c:	bl	11fd4 <mnl_attr_get_payload@plt>
   14d20:	mov	r4, r0
   14d24:	ldrh	r0, [r0]
   14d28:	cmp	r0, #2
   14d2c:	beq	14d64 <mount@plt+0x2c04>
   14d30:	cmp	r0, #10
   14d34:	bne	14d7c <mount@plt+0x2c1c>
   14d38:	mov	r2, r5
   14d3c:	mov	r3, #46	; 0x2e
   14d40:	add	r1, r4, #8
   14d44:	bl	12094 <inet_ntop@plt>
   14d48:	cmp	r0, #0
   14d4c:	beq	14d7c <mount@plt+0x2c1c>
   14d50:	ldrh	r3, [r4, #2]
   14d54:	mov	r0, #0
   14d58:	rev16	r3, r3
   14d5c:	strh	r3, [r6]
   14d60:	pop	{r4, r5, r6, pc}
   14d64:	mov	r2, r5
   14d68:	mov	r3, #46	; 0x2e
   14d6c:	add	r1, r4, #4
   14d70:	bl	12094 <inet_ntop@plt>
   14d74:	cmp	r0, #0
   14d78:	bne	14d50 <mount@plt+0x2bf0>
   14d7c:	mvn	r0, #21
   14d80:	pop	{r4, r5, r6, pc}
   14d84:	push	{r4, r5, lr}
   14d88:	sub	sp, sp, #68	; 0x44
   14d8c:	ldr	r5, [pc, #204]	; 14e60 <mount@plt+0x2d00>
   14d90:	mov	r4, r0
   14d94:	mov	r2, #56	; 0x38
   14d98:	ldr	r3, [r5]
   14d9c:	mov	r1, #0
   14da0:	add	r0, sp, #4
   14da4:	str	r3, [sp, #60]	; 0x3c
   14da8:	bl	11efc <memset@plt>
   14dac:	ldr	r2, [pc, #176]	; 14e64 <mount@plt+0x2d04>
   14db0:	ldr	r3, [pc, #176]	; 14e68 <mount@plt+0x2d08>
   14db4:	str	r2, [sp, #8]
   14db8:	str	r3, [sp, #12]
   14dbc:	ldr	r2, [pc, #168]	; 14e6c <mount@plt+0x2d0c>
   14dc0:	ldr	r3, [pc, #168]	; 14e70 <mount@plt+0x2d10>
   14dc4:	ldr	r1, [pc, #168]	; 14e74 <mount@plt+0x2d14>
   14dc8:	str	r2, [sp, #20]
   14dcc:	str	r3, [sp, #24]
   14dd0:	ldr	r2, [pc, #160]	; 14e78 <mount@plt+0x2d18>
   14dd4:	ldr	r3, [pc, #160]	; 14e7c <mount@plt+0x2d1c>
   14dd8:	str	r1, [sp, #16]
   14ddc:	ldr	r1, [pc, #156]	; 14e80 <mount@plt+0x2d20>
   14de0:	str	r2, [sp, #32]
   14de4:	str	r3, [sp, #36]	; 0x24
   14de8:	ldr	r2, [pc, #148]	; 14e84 <mount@plt+0x2d24>
   14dec:	ldr	r3, [pc, #148]	; 14e88 <mount@plt+0x2d28>
   14df0:	str	r1, [sp, #28]
   14df4:	ldr	r1, [pc, #144]	; 14e8c <mount@plt+0x2d2c>
   14df8:	mov	r0, r4
   14dfc:	str	r1, [sp, #40]	; 0x28
   14e00:	strd	r2, [sp, #44]	; 0x2c
   14e04:	bl	129d0 <mount@plt+0x870>
   14e08:	cmp	r0, #1
   14e0c:	beq	14e38 <mount@plt+0x2cd8>
   14e10:	add	r1, sp, #4
   14e14:	mov	r0, r4
   14e18:	ldr	r2, [pc, #112]	; 14e90 <mount@plt+0x2d30>
   14e1c:	bl	13128 <mount@plt+0xfc8>
   14e20:	ldr	r2, [sp, #60]	; 0x3c
   14e24:	ldr	r3, [r5]
   14e28:	cmp	r2, r3
   14e2c:	bne	14e5c <mount@plt+0x2cfc>
   14e30:	add	sp, sp, #68	; 0x44
   14e34:	pop	{r4, r5, pc}
   14e38:	mov	r1, #0
   14e3c:	mov	r0, r4
   14e40:	bl	133bc <mount@plt+0x125c>
   14e44:	cmp	r0, #0
   14e48:	beq	14e10 <mount@plt+0x2cb0>
   14e4c:	mov	r0, r4
   14e50:	ldr	r1, [pc, #60]	; 14e94 <mount@plt+0x2d34>
   14e54:	bl	13690 <mount@plt+0x1530>
   14e58:	b	14e20 <mount@plt+0x2cc0>
   14e5c:	bl	11ca4 <__stack_chk_fail@plt>
   14e60:	andeq	r2, r3, r8, ror #29
   14e64:	andeq	r5, r1, r8, ror #25
   14e68:	andeq	r1, r2, r4, lsr #11
   14e6c:	andeq	r1, r2, r8, lsr #11
   14e70:	andeq	r6, r1, r4, asr #3
   14e74:	andeq	r6, r1, r8, lsl #4
   14e78:	muleq	r1, r4, sp
   14e7c:			; <UNDEFINED> instruction: 0x000215b4
   14e80:			; <UNDEFINED> instruction: 0x000215b0
   14e84:			; <UNDEFINED> instruction: 0x000215b8
   14e88:	andeq	r5, r1, r4, lsl sp
   14e8c:	andeq	r5, r1, r4, asr sp
   14e90:	andeq	r0, r2, r8, ror #1
   14e94:	andeq	r4, r1, r4, lsl #24
   14e98:	ldr	r1, [pc, #16]	; 14eb0 <mount@plt+0x2d50>
   14e9c:	mov	r3, r0
   14ea0:	ldr	r2, [pc, #12]	; 14eb4 <mount@plt+0x2d54>
   14ea4:	ldr	r0, [r1]
   14ea8:	mov	r1, #1
   14eac:	b	11f74 <__fprintf_chk@plt>
   14eb0:	andeq	r3, r3, r4, ror #4
   14eb4:			; <UNDEFINED> instruction: 0x000215bc
   14eb8:	cmp	r1, #0
   14ebc:	beq	14eec <mount@plt+0x2d8c>
   14ec0:	push	{r4, r5, r6, lr}
   14ec4:	mov	r4, r0
   14ec8:	mov	r5, r3
   14ecc:	ldr	r1, [pc, #44]	; 14f00 <mount@plt+0x2da0>
   14ed0:	ldr	r0, [r0]
   14ed4:	bl	1b8a0 <mount@plt+0x9740>
   14ed8:	mov	r2, r5
   14edc:	ldr	r0, [r4]
   14ee0:	ldr	r1, [pc, #28]	; 14f04 <mount@plt+0x2da4>
   14ee4:	pop	{r4, r5, r6, lr}
   14ee8:	b	1b838 <mount@plt+0x96d8>
   14eec:	ldr	r0, [pc, #20]	; 14f08 <mount@plt+0x2da8>
   14ef0:	ldr	r2, [pc, #20]	; 14f0c <mount@plt+0x2dac>
   14ef4:	mov	r1, #1
   14ef8:	ldr	r0, [r0]
   14efc:	b	11f74 <__fprintf_chk@plt>
   14f00:	andeq	r0, r2, r0, lsr #2
   14f04:	andeq	r0, r2, r8, lsr #2
   14f08:	andeq	r3, r3, r4, ror #4
   14f0c:	andeq	r1, r2, r4, asr #11
   14f10:	push	{r4, r5, lr}
   14f14:	cmp	r1, #0
   14f18:	ldr	r4, [pc, #152]	; 14fb8 <mount@plt+0x2e58>
   14f1c:	sub	sp, sp, #36	; 0x24
   14f20:	ldr	r1, [r4]
   14f24:	str	r1, [sp, #28]
   14f28:	bne	14fa8 <mount@plt+0x2e48>
   14f2c:	ldr	r3, [r3, #112]	; 0x70
   14f30:	mov	ip, r2
   14f34:	cmp	r3, #0
   14f38:	beq	14f84 <mount@plt+0x2e24>
   14f3c:	add	r5, sp, #8
   14f40:	mov	r3, r2
   14f44:	mov	r0, r5
   14f48:	ldr	r2, [pc, #108]	; 14fbc <mount@plt+0x2e5c>
   14f4c:	mov	r1, #18
   14f50:	bl	11ee4 <snprintf@plt>
   14f54:	ldr	r1, [pc, #100]	; 14fc0 <mount@plt+0x2e60>
   14f58:	mov	r3, r5
   14f5c:	ldr	r2, [pc, #96]	; 14fc4 <mount@plt+0x2e64>
   14f60:	ldr	r0, [r1]
   14f64:	mov	r1, #1
   14f68:	bl	11f74 <__fprintf_chk@plt>
   14f6c:	ldr	r2, [sp, #28]
   14f70:	ldr	r3, [r4]
   14f74:	cmp	r2, r3
   14f78:	bne	14fb4 <mount@plt+0x2e54>
   14f7c:	add	sp, sp, #36	; 0x24
   14f80:	pop	{r4, r5, pc}
   14f84:	ldr	r2, [pc, #60]	; 14fc8 <mount@plt+0x2e68>
   14f88:	add	r5, sp, #8
   14f8c:	mov	r3, #18
   14f90:	stm	sp, {r2, ip}
   14f94:	mov	r0, r5
   14f98:	mov	r1, r3
   14f9c:	mov	r2, #1
   14fa0:	bl	1213c <__snprintf_chk@plt>
   14fa4:	b	14f54 <mount@plt+0x2df4>
   14fa8:	ldr	r1, [pc, #28]	; 14fcc <mount@plt+0x2e6c>
   14fac:	bl	1b838 <mount@plt+0x96d8>
   14fb0:	b	14f6c <mount@plt+0x2e0c>
   14fb4:	bl	11ca4 <__stack_chk_fail@plt>
   14fb8:	andeq	r2, r3, r8, ror #29
   14fbc:	andeq	r2, r2, r8, ror #4
   14fc0:	andeq	r3, r3, r4, ror #4
   14fc4:	ldrdeq	r1, [r2], -ip
   14fc8:	ldrdeq	r1, [r2], -r4
   14fcc:	andeq	r1, r2, ip, asr #11
   14fd0:	ldr	r3, [pc, #888]	; 15350 <mount@plt+0x31f0>
   14fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fd8:	sub	sp, sp, #516	; 0x204
   14fdc:	ldr	r3, [r3]
   14fe0:	mov	r5, r0
   14fe4:	mov	r2, #240	; 0xf0
   14fe8:	mov	r4, r1
   14fec:	add	r0, sp, #28
   14ff0:	mov	r1, #0
   14ff4:	str	r3, [sp, #508]	; 0x1fc
   14ff8:	bl	11efc <memset@plt>
   14ffc:	add	r3, sp, #28
   15000:	mov	r0, r5
   15004:	ldr	r2, [pc, #840]	; 15354 <mount@plt+0x31f4>
   15008:	mov	r1, #0
   1500c:	bl	11c80 <mnl_attr_parse@plt>
   15010:	ldr	r3, [sp, #32]
   15014:	cmp	r3, #0
   15018:	beq	15290 <mount@plt+0x3130>
   1501c:	ldr	r0, [sp, #36]	; 0x24
   15020:	cmp	r0, #0
   15024:	beq	15290 <mount@plt+0x3130>
   15028:	ldr	r3, [sp, #168]	; 0xa8
   1502c:	cmp	r3, #0
   15030:	beq	15290 <mount@plt+0x3130>
   15034:	bl	11f80 <mnl_attr_get_str@plt>
   15038:	str	r0, [sp, #16]
   1503c:	ldr	r0, [sp, #32]
   15040:	bl	12058 <mnl_attr_get_u32@plt>
   15044:	ldr	fp, [sp, #168]	; 0xa8
   15048:	str	r0, [sp, #20]
   1504c:	mov	r0, fp
   15050:	bl	11fd4 <mnl_attr_get_payload@plt>
   15054:	mov	r5, r0
   15058:	b	1520c <mount@plt+0x30ac>
   1505c:	bl	12058 <mnl_attr_get_u32@plt>
   15060:	mov	sl, r0
   15064:	ldr	r0, [sp, #420]	; 0x1a4
   15068:	bl	11cb0 <mnl_attr_get_u64@plt>
   1506c:	str	r1, [sp, #12]
   15070:	mov	r2, r0
   15074:	mov	r8, r0
   15078:	ldr	r1, [pc, #728]	; 15358 <mount@plt+0x31f8>
   1507c:	mov	r0, r4
   15080:	bl	12d98 <mount@plt+0xc38>
   15084:	cmp	r0, #0
   15088:	bne	15200 <mount@plt+0x30a0>
   1508c:	ldr	r0, [sp, #424]	; 0x1a8
   15090:	cmp	r0, #0
   15094:	beq	152b0 <mount@plt+0x3150>
   15098:	bl	120b8 <mnl_attr_get_u8@plt>
   1509c:	ldr	r1, [pc, #696]	; 1535c <mount@plt+0x31fc>
   150a0:	cmp	r0, #2
   150a4:	mov	r6, r0
   150a8:	ldrls	r3, [pc, #688]	; 15360 <mount@plt+0x3200>
   150ac:	ldrhi	r2, [pc, #688]	; 15364 <mount@plt+0x3204>
   150b0:	ldrls	r2, [r3, r0, lsl #2]
   150b4:	mov	r0, r4
   150b8:	bl	12c9c <mount@plt+0xb3c>
   150bc:	cmp	r0, #0
   150c0:	bne	15200 <mount@plt+0x30a0>
   150c4:	ldr	r7, [sp, #380]	; 0x17c
   150c8:	cmp	r7, #0
   150cc:	moveq	r9, r7
   150d0:	beq	150e8 <mount@plt+0x2f88>
   150d4:	mov	r0, r7
   150d8:	bl	12058 <mnl_attr_get_u32@plt>
   150dc:	mov	r9, r0
   150e0:	bl	14c64 <mount@plt+0x2b04>
   150e4:	mov	r7, r0
   150e8:	mov	r2, r9
   150ec:	ldr	r1, [pc, #628]	; 15368 <mount@plt+0x3208>
   150f0:	mov	r0, r4
   150f4:	bl	12d98 <mount@plt+0xc38>
   150f8:	cmp	r0, #0
   150fc:	bne	15314 <mount@plt+0x31b4>
   15100:	ldr	r0, [sp, #384]	; 0x180
   15104:	cmp	r0, #0
   15108:	beq	15114 <mount@plt+0x2fb4>
   1510c:	bl	11f80 <mnl_attr_get_str@plt>
   15110:	mov	r7, r0
   15114:	ldrb	r1, [r4, #48]	; 0x30
   15118:	cmp	r1, #0
   1511c:	bne	15304 <mount@plt+0x31a4>
   15120:	ldr	r3, [sp, #16]
   15124:	ldr	r2, [sp, #20]
   15128:	add	r0, r4, #44	; 0x2c
   1512c:	bl	14eb8 <mount@plt+0x2d58>
   15130:	ldrb	r3, [r4, #48]	; 0x30
   15134:	cmp	r3, #0
   15138:	beq	152e8 <mount@plt+0x3188>
   1513c:	mov	r2, sl
   15140:	ldr	r1, [pc, #548]	; 1536c <mount@plt+0x320c>
   15144:	ldr	r0, [r4, #44]	; 0x2c
   15148:	bl	1b8a0 <mount@plt+0x9740>
   1514c:	ldrb	r3, [r4, #48]	; 0x30
   15150:	cmp	r3, #0
   15154:	beq	152c4 <mount@plt+0x3164>
   15158:	mov	r2, r8
   1515c:	ldr	r1, [pc, #500]	; 15358 <mount@plt+0x31f8>
   15160:	ldr	r0, [r4, #44]	; 0x2c
   15164:	bl	1b8a0 <mount@plt+0x9740>
   15168:	ldr	r3, [sp, #424]	; 0x1a8
   1516c:	ldr	r0, [r4, #44]	; 0x2c
   15170:	cmp	r3, #0
   15174:	ldrb	r3, [r4, #48]	; 0x30
   15178:	beq	151b0 <mount@plt+0x3050>
   1517c:	cmp	r3, #0
   15180:	bne	15320 <mount@plt+0x31c0>
   15184:	ldr	r3, [pc, #484]	; 15370 <mount@plt+0x3210>
   15188:	cmp	r6, #2
   1518c:	ldr	r2, [pc, #480]	; 15374 <mount@plt+0x3214>
   15190:	ldr	r0, [r3]
   15194:	ldrls	r3, [pc, #452]	; 15360 <mount@plt+0x3200>
   15198:	ldrhi	r3, [pc, #452]	; 15364 <mount@plt+0x3204>
   1519c:	mov	r1, #1
   151a0:	ldrls	r3, [r3, r6, lsl #2]
   151a4:	bl	11f74 <__fprintf_chk@plt>
   151a8:	ldrb	r3, [r4, #48]	; 0x30
   151ac:	ldr	r0, [r4, #44]	; 0x2c
   151b0:	cmp	r3, #0
   151b4:	beq	152b8 <mount@plt+0x3158>
   151b8:	mov	r2, r9
   151bc:	ldr	r1, [pc, #420]	; 15368 <mount@plt+0x3208>
   151c0:	bl	1b8a0 <mount@plt+0x9740>
   151c4:	add	r3, sp, #268	; 0x10c
   151c8:	mov	r2, r7
   151cc:	ldrb	r1, [r4, #48]	; 0x30
   151d0:	ldr	r0, [r4, #44]	; 0x2c
   151d4:	bl	14f10 <mount@plt+0x2db0>
   151d8:	ldr	r3, [sp, #380]	; 0x17c
   151dc:	cmp	r3, #0
   151e0:	beq	151ec <mount@plt+0x308c>
   151e4:	mov	r0, r7
   151e8:	bl	11c14 <free@plt>
   151ec:	mov	r0, r4
   151f0:	ldr	r1, [sp, #476]	; 0x1dc
   151f4:	bl	137d8 <mount@plt+0x1678>
   151f8:	mov	r0, r4
   151fc:	bl	137b0 <mount@plt+0x1650>
   15200:	mov	r0, r5
   15204:	bl	11ddc <mnl_attr_next@plt>
   15208:	mov	r5, r0
   1520c:	mov	r0, fp
   15210:	bl	11fd4 <mnl_attr_get_payload@plt>
   15214:	mov	r6, r0
   15218:	mov	r0, fp
   1521c:	bl	12100 <mnl_attr_get_payload_len@plt>
   15220:	add	r1, r6, r0
   15224:	sub	r1, r1, r5
   15228:	mov	r0, r5
   1522c:	bl	120ac <mnl_attr_ok@plt>
   15230:	cmp	r0, #0
   15234:	beq	15344 <mount@plt+0x31e4>
   15238:	mov	r2, #240	; 0xf0
   1523c:	mov	r1, #0
   15240:	add	r0, sp, #268	; 0x10c
   15244:	bl	11efc <memset@plt>
   15248:	add	r2, sp, #268	; 0x10c
   1524c:	ldr	r1, [pc, #256]	; 15354 <mount@plt+0x31f4>
   15250:	mov	r0, r5
   15254:	bl	11fe0 <mnl_attr_parse_nested@plt>
   15258:	cmp	r0, #1
   1525c:	bne	15290 <mount@plt+0x3130>
   15260:	ldr	r0, [sp, #416]	; 0x1a0
   15264:	cmp	r0, #0
   15268:	beq	15290 <mount@plt+0x3130>
   1526c:	ldr	r3, [sp, #420]	; 0x1a4
   15270:	cmp	r3, #0
   15274:	beq	15290 <mount@plt+0x3130>
   15278:	ldr	r3, [sp, #380]	; 0x17c
   1527c:	cmp	r3, #0
   15280:	bne	1505c <mount@plt+0x2efc>
   15284:	ldr	r3, [sp, #384]	; 0x180
   15288:	cmp	r3, #0
   1528c:	bne	1505c <mount@plt+0x2efc>
   15290:	mvn	r0, #0
   15294:	ldr	r3, [pc, #180]	; 15350 <mount@plt+0x31f0>
   15298:	ldr	r2, [sp, #508]	; 0x1fc
   1529c:	ldr	r3, [r3]
   152a0:	cmp	r2, r3
   152a4:	bne	1534c <mount@plt+0x31ec>
   152a8:	add	sp, sp, #516	; 0x204
   152ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152b0:	mov	r6, r0
   152b4:	b	150c4 <mount@plt+0x2f64>
   152b8:	mov	r0, r9
   152bc:	bl	14e98 <mount@plt+0x2d38>
   152c0:	b	151c4 <mount@plt+0x3064>
   152c4:	ldr	r3, [sp, #12]
   152c8:	str	r8, [sp]
   152cc:	str	r3, [sp, #4]
   152d0:	ldr	r3, [pc, #152]	; 15370 <mount@plt+0x3210>
   152d4:	ldr	r2, [pc, #156]	; 15378 <mount@plt+0x3218>
   152d8:	mov	r1, #1
   152dc:	ldr	r0, [r3]
   152e0:	bl	11f74 <__fprintf_chk@plt>
   152e4:	b	15168 <mount@plt+0x3008>
   152e8:	ldr	r0, [pc, #128]	; 15370 <mount@plt+0x3210>
   152ec:	mov	r3, sl
   152f0:	ldr	r2, [pc, #132]	; 1537c <mount@plt+0x321c>
   152f4:	mov	r1, #1
   152f8:	ldr	r0, [r0]
   152fc:	bl	11f74 <__fprintf_chk@plt>
   15300:	b	1514c <mount@plt+0x2fec>
   15304:	ldr	r0, [r4, #44]	; 0x2c
   15308:	bl	1b68c <mount@plt+0x952c>
   1530c:	ldrb	r1, [r4, #48]	; 0x30
   15310:	b	15120 <mount@plt+0x2fc0>
   15314:	mov	r0, r7
   15318:	bl	11c14 <free@plt>
   1531c:	b	15200 <mount@plt+0x30a0>
   15320:	cmp	r6, #2
   15324:	ldr	r1, [pc, #48]	; 1535c <mount@plt+0x31fc>
   15328:	ldrls	r3, [pc, #48]	; 15360 <mount@plt+0x3200>
   1532c:	ldrhi	r2, [pc, #48]	; 15364 <mount@plt+0x3204>
   15330:	ldrls	r2, [r3, r6, lsl #2]
   15334:	bl	1b838 <mount@plt+0x96d8>
   15338:	ldr	r0, [r4, #44]	; 0x2c
   1533c:	ldrb	r3, [r4, #48]	; 0x30
   15340:	b	151b0 <mount@plt+0x3050>
   15344:	mov	r0, #1
   15348:	b	15294 <mount@plt+0x3134>
   1534c:	bl	11ca4 <__stack_chk_fail@plt>
   15350:	andeq	r2, r3, r8, ror #29
   15354:	andeq	r2, r1, r4, lsl r9
   15358:	andeq	r1, r2, r8, ror #11
   1535c:	strdeq	r1, [r2], -r0
   15360:	andeq	r0, r2, r0, ror #16
   15364:	andeq	r0, r2, r8, lsl r1
   15368:	strdeq	r1, [r2], -ip
   1536c:	andeq	r1, r2, r0, lsl #12
   15370:	andeq	r3, r3, r4, ror #4
   15374:	andeq	r1, r2, r8, lsl r6
   15378:	andeq	r1, r2, ip, lsl #12
   1537c:	andeq	r1, r2, r4, lsl #12
   15380:	push	{r4, r5, r6, r7, r8, lr}
   15384:	cmp	r1, #0
   15388:	ldr	r7, [sp, #24]
   1538c:	ldr	r5, [sp, #28]
   15390:	bne	153c8 <mount@plt+0x3268>
   15394:	ldr	r1, [r5, #12]
   15398:	ldr	r2, [pc, #108]	; 1540c <mount@plt+0x32ac>
   1539c:	cmp	r1, #0
   153a0:	ldr	r0, [r2]
   153a4:	beq	153b8 <mount@plt+0x3258>
   153a8:	ldr	r2, [pc, #96]	; 15410 <mount@plt+0x32b0>
   153ac:	mov	r1, #1
   153b0:	pop	{r4, r5, r6, r7, r8, lr}
   153b4:	b	11f74 <__fprintf_chk@plt>
   153b8:	ldr	r2, [pc, #84]	; 15414 <mount@plt+0x32b4>
   153bc:	mov	r1, #1
   153c0:	pop	{r4, r5, r6, r7, r8, lr}
   153c4:	b	11f74 <__fprintf_chk@plt>
   153c8:	mov	r4, r0
   153cc:	ldr	r1, [pc, #68]	; 15418 <mount@plt+0x32b8>
   153d0:	ldr	r0, [r0]
   153d4:	mov	r6, r3
   153d8:	bl	1b8a0 <mount@plt+0x9740>
   153dc:	ldr	r3, [r5, #12]
   153e0:	cmp	r3, #0
   153e4:	beq	153f8 <mount@plt+0x3298>
   153e8:	mov	r2, r7
   153ec:	ldr	r1, [pc, #40]	; 1541c <mount@plt+0x32bc>
   153f0:	ldr	r0, [r4]
   153f4:	bl	1b8a0 <mount@plt+0x9740>
   153f8:	mov	r2, r6
   153fc:	ldr	r0, [r4]
   15400:	ldr	r1, [pc, #24]	; 15420 <mount@plt+0x32c0>
   15404:	pop	{r4, r5, r6, r7, r8, lr}
   15408:	b	1b838 <mount@plt+0x96d8>
   1540c:	andeq	r3, r3, r4, ror #4
   15410:	andeq	r1, r2, r8, lsr #12
   15414:	andeq	r1, r2, r4, lsr r6
   15418:	andeq	r0, r2, r0, lsr #2
   1541c:	andeq	r1, r2, r4, ror #14
   15420:	andeq	r0, r2, r8, lsr #2
   15424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15428:	sub	sp, sp, #540	; 0x21c
   1542c:	ldr	fp, [pc, #1596]	; 15a70 <mount@plt+0x3910>
   15430:	mov	r4, r0
   15434:	mov	r2, #240	; 0xf0
   15438:	ldr	r3, [fp]
   1543c:	mov	sl, r1
   15440:	add	r0, sp, #52	; 0x34
   15444:	mov	r1, #0
   15448:	str	r3, [sp, #532]	; 0x214
   1544c:	bl	11efc <memset@plt>
   15450:	add	r3, sp, #52	; 0x34
   15454:	mov	r0, r4
   15458:	ldr	r2, [pc, #1556]	; 15a74 <mount@plt+0x3914>
   1545c:	mov	r1, #0
   15460:	bl	11c80 <mnl_attr_parse@plt>
   15464:	ldr	r3, [sp, #56]	; 0x38
   15468:	cmp	r3, #0
   1546c:	beq	158c4 <mount@plt+0x3764>
   15470:	ldr	r0, [sp, #60]	; 0x3c
   15474:	cmp	r0, #0
   15478:	beq	158c4 <mount@plt+0x3764>
   1547c:	ldr	r3, [sp, #128]	; 0x80
   15480:	cmp	r3, #0
   15484:	beq	158c4 <mount@plt+0x3764>
   15488:	bl	11f80 <mnl_attr_get_str@plt>
   1548c:	ldr	r7, [pc, #1504]	; 15a74 <mount@plt+0x3914>
   15490:	str	r0, [sp, #16]
   15494:	ldr	r0, [sp, #56]	; 0x38
   15498:	bl	12058 <mnl_attr_get_u32@plt>
   1549c:	ldr	r9, [sp, #128]	; 0x80
   154a0:	str	r0, [sp, #20]
   154a4:	mov	r0, r9
   154a8:	bl	11fd4 <mnl_attr_get_payload@plt>
   154ac:	mov	r8, r0
   154b0:	b	154c0 <mount@plt+0x3360>
   154b4:	mov	r0, r8
   154b8:	bl	11ddc <mnl_attr_next@plt>
   154bc:	mov	r8, r0
   154c0:	mov	r0, r9
   154c4:	bl	11fd4 <mnl_attr_get_payload@plt>
   154c8:	mov	r4, r0
   154cc:	mov	r0, r9
   154d0:	bl	12100 <mnl_attr_get_payload_len@plt>
   154d4:	add	r1, r4, r0
   154d8:	sub	r1, r1, r8
   154dc:	mov	r0, r8
   154e0:	bl	120ac <mnl_attr_ok@plt>
   154e4:	cmp	r0, #0
   154e8:	beq	15938 <mount@plt+0x37d8>
   154ec:	mov	r2, #240	; 0xf0
   154f0:	mov	r1, #0
   154f4:	add	r0, sp, #292	; 0x124
   154f8:	bl	11efc <memset@plt>
   154fc:	add	r2, sp, #292	; 0x124
   15500:	mov	r1, r7
   15504:	mov	r0, r8
   15508:	bl	11fe0 <mnl_attr_parse_nested@plt>
   1550c:	cmp	r0, #1
   15510:	bne	158c4 <mount@plt+0x3764>
   15514:	ldr	r3, [sp, #376]	; 0x178
   15518:	cmp	r3, #0
   1551c:	beq	158c4 <mount@plt+0x3764>
   15520:	ldr	r3, [sp, #388]	; 0x184
   15524:	cmp	r3, #0
   15528:	beq	158c4 <mount@plt+0x3764>
   1552c:	ldr	r3, [sp, #396]	; 0x18c
   15530:	cmp	r3, #0
   15534:	beq	158c4 <mount@plt+0x3764>
   15538:	ldr	r3, [sp, #400]	; 0x190
   1553c:	cmp	r3, #0
   15540:	beq	158c4 <mount@plt+0x3764>
   15544:	ldr	r3, [sp, #404]	; 0x194
   15548:	cmp	r3, #0
   1554c:	beq	158b8 <mount@plt+0x3758>
   15550:	ldr	r0, [sp, #304]	; 0x130
   15554:	cmp	r0, #0
   15558:	moveq	r4, r0
   1555c:	beq	15568 <mount@plt+0x3408>
   15560:	bl	12058 <mnl_attr_get_u32@plt>
   15564:	mov	r4, r0
   15568:	ldr	r3, [sl, #28]
   1556c:	cmp	r3, r4
   15570:	bne	154b4 <mount@plt+0x3354>
   15574:	ldr	r0, [sp, #376]	; 0x178
   15578:	bl	12058 <mnl_attr_get_u32@plt>
   1557c:	ldr	r1, [pc, #1268]	; 15a78 <mount@plt+0x3918>
   15580:	mov	r2, r0
   15584:	mov	r5, r0
   15588:	mov	r0, sl
   1558c:	bl	12d98 <mount@plt+0xc38>
   15590:	cmp	r0, #0
   15594:	bne	154b4 <mount@plt+0x3354>
   15598:	ldr	r0, [sp, #380]	; 0x17c
   1559c:	cmp	r0, #0
   155a0:	beq	158e0 <mount@plt+0x3780>
   155a4:	bl	12058 <mnl_attr_get_u32@plt>
   155a8:	ldr	r1, [pc, #1228]	; 15a7c <mount@plt+0x391c>
   155ac:	mov	r2, r0
   155b0:	mov	r6, r0
   155b4:	mov	r0, sl
   155b8:	bl	12d98 <mount@plt+0xc38>
   155bc:	cmp	r0, #0
   155c0:	bne	154b4 <mount@plt+0x3354>
   155c4:	ldr	r0, [sp, #384]	; 0x180
   155c8:	cmp	r0, #0
   155cc:	beq	15900 <mount@plt+0x37a0>
   155d0:	bl	12058 <mnl_attr_get_u32@plt>
   155d4:	ldr	r1, [pc, #1188]	; 15a80 <mount@plt+0x3920>
   155d8:	mov	r2, r0
   155dc:	str	r0, [sp, #12]
   155e0:	mov	r0, sl
   155e4:	bl	12d98 <mount@plt+0xc38>
   155e8:	cmp	r0, #0
   155ec:	bne	154b4 <mount@plt+0x3354>
   155f0:	ldr	r0, [sp, #388]	; 0x184
   155f4:	bl	12058 <mnl_attr_get_u32@plt>
   155f8:	ldr	r1, [pc, #1156]	; 15a84 <mount@plt+0x3924>
   155fc:	mov	r2, r0
   15600:	str	r0, [sp, #24]
   15604:	mov	r0, sl
   15608:	bl	12d98 <mount@plt+0xc38>
   1560c:	cmp	r0, #0
   15610:	bne	154b4 <mount@plt+0x3354>
   15614:	ldr	r0, [sp, #392]	; 0x188
   15618:	cmp	r0, #0
   1561c:	beq	1591c <mount@plt+0x37bc>
   15620:	bl	120b8 <mnl_attr_get_u8@plt>
   15624:	ldr	r1, [pc, #1116]	; 15a88 <mount@plt+0x3928>
   15628:	cmp	r0, #2
   1562c:	mov	r3, r0
   15630:	movls	r2, r0
   15634:	ldrls	r3, [pc, #1104]	; 15a8c <mount@plt+0x392c>
   15638:	str	r0, [sp, #32]
   1563c:	addls	r3, r3, r2, lsl #2
   15640:	ldrhi	r2, [pc, #1096]	; 15a90 <mount@plt+0x3930>
   15644:	ldrls	r2, [r3, #12]
   15648:	mov	r0, sl
   1564c:	bl	12c9c <mount@plt+0xb3c>
   15650:	cmp	r0, #0
   15654:	bne	154b4 <mount@plt+0x3354>
   15658:	ldr	r0, [sp, #396]	; 0x18c
   1565c:	bl	120b8 <mnl_attr_get_u8@plt>
   15660:	ldr	r1, [pc, #1068]	; 15a94 <mount@plt+0x3934>
   15664:	cmp	r0, #10
   15668:	ldrls	r3, [pc, #1052]	; 15a8c <mount@plt+0x392c>
   1566c:	ldrhi	r3, [pc, #1052]	; 15a90 <mount@plt+0x3930>
   15670:	addls	r3, r3, r0, lsl #2
   15674:	mov	r0, sl
   15678:	ldrls	r3, [r3, #24]
   1567c:	str	r3, [sp, #28]
   15680:	ldr	r2, [sp, #28]
   15684:	bl	12c9c <mount@plt+0xb3c>
   15688:	cmp	r0, #0
   1568c:	bne	154b4 <mount@plt+0x3354>
   15690:	ldr	r0, [sp, #400]	; 0x190
   15694:	bl	120b8 <mnl_attr_get_u8@plt>
   15698:	ldr	r1, [pc, #1016]	; 15a98 <mount@plt+0x3938>
   1569c:	cmp	r0, #6
   156a0:	mov	r3, r0
   156a4:	movls	r2, r0
   156a8:	ldrls	r3, [pc, #988]	; 15a8c <mount@plt+0x392c>
   156ac:	str	r0, [sp, #40]	; 0x28
   156b0:	addls	r3, r3, r2, lsl #2
   156b4:	ldrhi	r2, [pc, #980]	; 15a90 <mount@plt+0x3930>
   156b8:	ldrls	r2, [r3, #68]	; 0x44
   156bc:	mov	r0, sl
   156c0:	bl	12c9c <mount@plt+0xb3c>
   156c4:	cmp	r0, #0
   156c8:	bne	154b4 <mount@plt+0x3354>
   156cc:	ldr	r0, [sp, #404]	; 0x194
   156d0:	cmp	r0, #0
   156d4:	str	r0, [sp, #36]	; 0x24
   156d8:	beq	15940 <mount@plt+0x37e0>
   156dc:	bl	12058 <mnl_attr_get_u32@plt>
   156e0:	str	r0, [sp, #44]	; 0x2c
   156e4:	bl	14c64 <mount@plt+0x2b04>
   156e8:	str	r0, [sp, #36]	; 0x24
   156ec:	ldr	r2, [sp, #44]	; 0x2c
   156f0:	ldr	r1, [pc, #932]	; 15a9c <mount@plt+0x393c>
   156f4:	mov	r0, sl
   156f8:	bl	12d98 <mount@plt+0xc38>
   156fc:	cmp	r0, #0
   15700:	bne	15a60 <mount@plt+0x3900>
   15704:	ldr	r0, [sp, #408]	; 0x198
   15708:	cmp	r0, #0
   1570c:	beq	15718 <mount@plt+0x35b8>
   15710:	bl	11f80 <mnl_attr_get_str@plt>
   15714:	str	r0, [sp, #36]	; 0x24
   15718:	ldrb	r1, [sl, #48]	; 0x30
   1571c:	cmp	r1, #0
   15720:	bne	15a50 <mount@plt+0x38f0>
   15724:	add	r3, sp, #292	; 0x124
   15728:	str	r3, [sp, #4]
   1572c:	str	r4, [sp]
   15730:	ldr	r3, [sp, #16]
   15734:	ldr	r2, [sp, #20]
   15738:	add	r0, sl, #44	; 0x2c
   1573c:	bl	15380 <mount@plt+0x3220>
   15740:	ldrb	r3, [sl, #48]	; 0x30
   15744:	cmp	r3, #0
   15748:	beq	159c0 <mount@plt+0x3860>
   1574c:	mov	r2, r5
   15750:	ldr	r1, [pc, #800]	; 15a78 <mount@plt+0x3918>
   15754:	ldr	r0, [sl, #44]	; 0x2c
   15758:	bl	1b8a0 <mount@plt+0x9740>
   1575c:	ldr	r2, [sp, #380]	; 0x17c
   15760:	ldrb	r3, [sl, #48]	; 0x30
   15764:	cmp	r2, #0
   15768:	beq	15788 <mount@plt+0x3628>
   1576c:	cmp	r3, #0
   15770:	beq	15a30 <mount@plt+0x38d0>
   15774:	mov	r2, r6
   15778:	ldr	r1, [pc, #764]	; 15a7c <mount@plt+0x391c>
   1577c:	ldr	r0, [sl, #44]	; 0x2c
   15780:	bl	1b8a0 <mount@plt+0x9740>
   15784:	ldrb	r3, [sl, #48]	; 0x30
   15788:	cmp	r3, #0
   1578c:	beq	159a4 <mount@plt+0x3844>
   15790:	ldr	r2, [sp, #28]
   15794:	ldr	r1, [pc, #760]	; 15a94 <mount@plt+0x3934>
   15798:	ldr	r0, [sl, #44]	; 0x2c
   1579c:	bl	1b838 <mount@plt+0x96d8>
   157a0:	ldrb	r3, [sl, #48]	; 0x30
   157a4:	cmp	r3, #0
   157a8:	beq	15974 <mount@plt+0x3814>
   157ac:	ldr	r3, [sp, #40]	; 0x28
   157b0:	ldr	r1, [pc, #736]	; 15a98 <mount@plt+0x3938>
   157b4:	cmp	r3, #6
   157b8:	ldr	r0, [sl, #44]	; 0x2c
   157bc:	ldrls	r2, [sp, #40]	; 0x28
   157c0:	ldrls	r3, [pc, #708]	; 15a8c <mount@plt+0x392c>
   157c4:	ldrhi	r2, [pc, #708]	; 15a90 <mount@plt+0x3930>
   157c8:	addls	r3, r3, r2, lsl #2
   157cc:	ldrls	r2, [r3, #68]	; 0x44
   157d0:	bl	1b838 <mount@plt+0x96d8>
   157d4:	ldr	r2, [sp, #384]	; 0x180
   157d8:	ldrb	r3, [sl, #48]	; 0x30
   157dc:	cmp	r2, #0
   157e0:	beq	15800 <mount@plt+0x36a0>
   157e4:	cmp	r3, #0
   157e8:	beq	159dc <mount@plt+0x387c>
   157ec:	ldr	r2, [sp, #12]
   157f0:	ldr	r1, [pc, #648]	; 15a80 <mount@plt+0x3920>
   157f4:	ldr	r0, [sl, #44]	; 0x2c
   157f8:	bl	1b8a0 <mount@plt+0x9740>
   157fc:	ldrb	r3, [sl, #48]	; 0x30
   15800:	cmp	r3, #0
   15804:	beq	15958 <mount@plt+0x37f8>
   15808:	ldr	r2, [sp, #24]
   1580c:	ldr	r1, [pc, #624]	; 15a84 <mount@plt+0x3924>
   15810:	ldr	r0, [sl, #44]	; 0x2c
   15814:	bl	1b8a0 <mount@plt+0x9740>
   15818:	ldr	r2, [sp, #392]	; 0x188
   1581c:	ldrb	r3, [sl, #48]	; 0x30
   15820:	cmp	r2, #0
   15824:	beq	1585c <mount@plt+0x36fc>
   15828:	cmp	r3, #0
   1582c:	beq	159fc <mount@plt+0x389c>
   15830:	ldr	r3, [sp, #32]
   15834:	ldr	r0, [sl, #44]	; 0x2c
   15838:	cmp	r3, #2
   1583c:	ldr	r1, [pc, #580]	; 15a88 <mount@plt+0x3928>
   15840:	ldrls	r2, [sp, #32]
   15844:	ldrls	r3, [pc, #576]	; 15a8c <mount@plt+0x392c>
   15848:	ldrhi	r2, [pc, #576]	; 15a90 <mount@plt+0x3930>
   1584c:	addls	r3, r3, r2, lsl #2
   15850:	ldrls	r2, [r3, #12]
   15854:	bl	1b838 <mount@plt+0x96d8>
   15858:	ldrb	r3, [sl, #48]	; 0x30
   1585c:	cmp	r3, #0
   15860:	beq	1594c <mount@plt+0x37ec>
   15864:	ldr	r2, [sp, #44]	; 0x2c
   15868:	ldr	r1, [pc, #556]	; 15a9c <mount@plt+0x393c>
   1586c:	ldr	r0, [sl, #44]	; 0x2c
   15870:	bl	1b8a0 <mount@plt+0x9740>
   15874:	ldr	r4, [sp, #36]	; 0x24
   15878:	add	r3, sp, #292	; 0x124
   1587c:	mov	r2, r4
   15880:	ldrb	r1, [sl, #48]	; 0x30
   15884:	ldr	r0, [sl, #44]	; 0x2c
   15888:	bl	14f10 <mount@plt+0x2db0>
   1588c:	ldr	r3, [sp, #404]	; 0x194
   15890:	cmp	r3, #0
   15894:	beq	158a0 <mount@plt+0x3740>
   15898:	mov	r0, r4
   1589c:	bl	11c14 <free@plt>
   158a0:	mov	r0, sl
   158a4:	ldr	r1, [sp, #500]	; 0x1f4
   158a8:	bl	137d8 <mount@plt+0x1678>
   158ac:	mov	r0, sl
   158b0:	bl	137b0 <mount@plt+0x1650>
   158b4:	b	154b4 <mount@plt+0x3354>
   158b8:	ldr	r3, [sp, #408]	; 0x198
   158bc:	cmp	r3, #0
   158c0:	bne	15550 <mount@plt+0x33f0>
   158c4:	mvn	r0, #0
   158c8:	ldr	r2, [sp, #532]	; 0x214
   158cc:	ldr	r3, [fp]
   158d0:	cmp	r2, r3
   158d4:	bne	15a6c <mount@plt+0x390c>
   158d8:	add	sp, sp, #540	; 0x21c
   158dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158e0:	ldr	r1, [pc, #404]	; 15a7c <mount@plt+0x391c>
   158e4:	mov	r0, sl
   158e8:	bl	12c50 <mount@plt+0xaf0>
   158ec:	subs	r6, r0, #0
   158f0:	bne	154b4 <mount@plt+0x3354>
   158f4:	ldr	r0, [sp, #384]	; 0x180
   158f8:	cmp	r0, #0
   158fc:	bne	155d0 <mount@plt+0x3470>
   15900:	ldr	r1, [pc, #376]	; 15a80 <mount@plt+0x3920>
   15904:	mov	r0, sl
   15908:	bl	12c50 <mount@plt+0xaf0>
   1590c:	cmp	r0, #0
   15910:	bne	154b4 <mount@plt+0x3354>
   15914:	str	r0, [sp, #12]
   15918:	b	155f0 <mount@plt+0x3490>
   1591c:	ldr	r1, [pc, #356]	; 15a88 <mount@plt+0x3928>
   15920:	mov	r0, sl
   15924:	bl	12c50 <mount@plt+0xaf0>
   15928:	cmp	r0, #0
   1592c:	bne	154b4 <mount@plt+0x3354>
   15930:	str	r0, [sp, #32]
   15934:	b	15658 <mount@plt+0x34f8>
   15938:	mov	r0, #1
   1593c:	b	158c8 <mount@plt+0x3768>
   15940:	ldr	r3, [sp, #36]	; 0x24
   15944:	str	r3, [sp, #44]	; 0x2c
   15948:	b	156ec <mount@plt+0x358c>
   1594c:	ldr	r0, [sp, #44]	; 0x2c
   15950:	bl	14e98 <mount@plt+0x2d38>
   15954:	b	15874 <mount@plt+0x3714>
   15958:	ldr	r1, [pc, #320]	; 15aa0 <mount@plt+0x3940>
   1595c:	ldr	r3, [sp, #24]
   15960:	ldr	r2, [pc, #316]	; 15aa4 <mount@plt+0x3944>
   15964:	ldr	r0, [r1]
   15968:	mov	r1, #1
   1596c:	bl	11f74 <__fprintf_chk@plt>
   15970:	b	15818 <mount@plt+0x36b8>
   15974:	ldr	r2, [sp, #40]	; 0x28
   15978:	ldr	r3, [pc, #288]	; 15aa0 <mount@plt+0x3940>
   1597c:	cmp	r2, #6
   15980:	mov	r1, #1
   15984:	ldr	r0, [r3]
   15988:	ldrls	r3, [pc, #252]	; 15a8c <mount@plt+0x392c>
   1598c:	ldrhi	r3, [pc, #252]	; 15a90 <mount@plt+0x3930>
   15990:	addls	r3, r3, r2, lsl #2
   15994:	ldr	r2, [pc, #268]	; 15aa8 <mount@plt+0x3948>
   15998:	ldrls	r3, [r3, #68]	; 0x44
   1599c:	bl	11f74 <__fprintf_chk@plt>
   159a0:	b	157d4 <mount@plt+0x3674>
   159a4:	ldr	r1, [pc, #244]	; 15aa0 <mount@plt+0x3940>
   159a8:	ldr	r3, [sp, #28]
   159ac:	ldr	r2, [pc, #248]	; 15aac <mount@plt+0x394c>
   159b0:	ldr	r0, [r1]
   159b4:	mov	r1, #1
   159b8:	bl	11f74 <__fprintf_chk@plt>
   159bc:	b	157a0 <mount@plt+0x3640>
   159c0:	ldr	r1, [pc, #216]	; 15aa0 <mount@plt+0x3940>
   159c4:	mov	r3, r5
   159c8:	ldr	r2, [pc, #224]	; 15ab0 <mount@plt+0x3950>
   159cc:	ldr	r0, [r1]
   159d0:	mov	r1, #1
   159d4:	bl	11f74 <__fprintf_chk@plt>
   159d8:	b	1575c <mount@plt+0x35fc>
   159dc:	ldr	r1, [pc, #188]	; 15aa0 <mount@plt+0x3940>
   159e0:	ldr	r3, [sp, #12]
   159e4:	ldr	r2, [pc, #200]	; 15ab4 <mount@plt+0x3954>
   159e8:	ldr	r0, [r1]
   159ec:	mov	r1, #1
   159f0:	bl	11f74 <__fprintf_chk@plt>
   159f4:	ldrb	r3, [sl, #48]	; 0x30
   159f8:	b	15800 <mount@plt+0x36a0>
   159fc:	ldr	r2, [sp, #32]
   15a00:	ldr	r3, [pc, #152]	; 15aa0 <mount@plt+0x3940>
   15a04:	cmp	r2, #2
   15a08:	mov	r1, #1
   15a0c:	ldr	r0, [r3]
   15a10:	ldrls	r3, [pc, #116]	; 15a8c <mount@plt+0x392c>
   15a14:	ldrhi	r3, [pc, #116]	; 15a90 <mount@plt+0x3930>
   15a18:	addls	r3, r3, r2, lsl #2
   15a1c:	ldr	r2, [pc, #148]	; 15ab8 <mount@plt+0x3958>
   15a20:	ldrls	r3, [r3, #12]
   15a24:	bl	11f74 <__fprintf_chk@plt>
   15a28:	ldrb	r3, [sl, #48]	; 0x30
   15a2c:	b	1585c <mount@plt+0x36fc>
   15a30:	ldr	r1, [pc, #104]	; 15aa0 <mount@plt+0x3940>
   15a34:	mov	r3, r6
   15a38:	ldr	r2, [pc, #124]	; 15abc <mount@plt+0x395c>
   15a3c:	ldr	r0, [r1]
   15a40:	mov	r1, #1
   15a44:	bl	11f74 <__fprintf_chk@plt>
   15a48:	ldrb	r3, [sl, #48]	; 0x30
   15a4c:	b	15788 <mount@plt+0x3628>
   15a50:	ldr	r0, [sl, #44]	; 0x2c
   15a54:	bl	1b68c <mount@plt+0x952c>
   15a58:	ldrb	r1, [sl, #48]	; 0x30
   15a5c:	b	15724 <mount@plt+0x35c4>
   15a60:	ldr	r0, [sp, #36]	; 0x24
   15a64:	bl	11c14 <free@plt>
   15a68:	b	154b4 <mount@plt+0x3354>
   15a6c:	bl	11ca4 <__stack_chk_fail@plt>
   15a70:	andeq	r2, r3, r8, ror #29
   15a74:	andeq	r2, r1, r4, lsl r9
   15a78:	andeq	r1, r2, r0, asr #12
   15a7c:	andeq	r1, r2, r8, asr #12
   15a80:	andeq	r1, r2, r0, asr r6
   15a84:	andeq	r1, r2, r8, asr r6
   15a88:	andeq	r1, r2, r0, ror #12
   15a8c:	andeq	r0, r2, r0, ror #16
   15a90:	andeq	r0, r2, r8, lsl r1
   15a94:	andeq	r1, r2, ip, asr #17
   15a98:	andeq	r0, r2, r0, asr #11
   15a9c:	strdeq	r1, [r2], -ip
   15aa0:	andeq	r3, r3, r4, ror #4
   15aa4:	andeq	r1, r2, r0, lsr #13
   15aa8:	andeq	r0, r2, r8, asr #11
   15aac:	andeq	r1, r2, r8, lsl #13
   15ab0:	andeq	r1, r2, r0, ror r6
   15ab4:	muleq	r2, r4, r6
   15ab8:	andeq	r1, r2, ip, lsr #13
   15abc:	andeq	r1, r2, ip, ror r6
   15ac0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ac4:	sub	sp, sp, #540	; 0x21c
   15ac8:	ldr	r6, [pc, #504]	; 15cc8 <mount@plt+0x3b68>
   15acc:	mov	r4, r0
   15ad0:	mov	r2, #240	; 0xf0
   15ad4:	ldr	r3, [r6]
   15ad8:	mov	r5, r1
   15adc:	add	r0, sp, #20
   15ae0:	mov	r1, #0
   15ae4:	str	r3, [sp, #532]	; 0x214
   15ae8:	bl	11efc <memset@plt>
   15aec:	add	r3, sp, #20
   15af0:	mov	r0, r4
   15af4:	ldr	r2, [pc, #464]	; 15ccc <mount@plt+0x3b6c>
   15af8:	mov	r1, #0
   15afc:	bl	11c80 <mnl_attr_parse@plt>
   15b00:	ldr	r0, [sp, #24]
   15b04:	cmp	r0, #0
   15b08:	beq	15c60 <mount@plt+0x3b00>
   15b0c:	ldr	r3, [sp, #28]
   15b10:	cmp	r3, #0
   15b14:	beq	15c60 <mount@plt+0x3b00>
   15b18:	ldr	r3, [sp, #80]	; 0x50
   15b1c:	cmp	r3, #0
   15b20:	beq	15c60 <mount@plt+0x3b00>
   15b24:	bl	12058 <mnl_attr_get_u32@plt>
   15b28:	mov	r4, r0
   15b2c:	ldr	r0, [sp, #28]
   15b30:	bl	11f80 <mnl_attr_get_str@plt>
   15b34:	ldrb	r1, [r5, #48]	; 0x30
   15b38:	cmp	r1, #0
   15b3c:	mov	r7, r0
   15b40:	beq	15ca4 <mount@plt+0x3b44>
   15b44:	mov	r2, r4
   15b48:	ldr	r1, [pc, #384]	; 15cd0 <mount@plt+0x3b70>
   15b4c:	ldr	r0, [r5, #44]	; 0x2c
   15b50:	bl	1b8a0 <mount@plt+0x9740>
   15b54:	mov	r2, r7
   15b58:	ldr	r1, [pc, #372]	; 15cd4 <mount@plt+0x3b74>
   15b5c:	ldr	r0, [r5, #44]	; 0x2c
   15b60:	bl	1b838 <mount@plt+0x96d8>
   15b64:	ldr	r7, [sp, #80]	; 0x50
   15b68:	ldr	fp, [pc, #348]	; 15ccc <mount@plt+0x3b6c>
   15b6c:	mov	r0, r7
   15b70:	bl	11fd4 <mnl_attr_get_payload@plt>
   15b74:	mov	r4, r0
   15b78:	b	15bac <mount@plt+0x3a4c>
   15b7c:	ldr	r2, [pc, #340]	; 15cd8 <mount@plt+0x3b78>
   15b80:	mov	r1, #32
   15b84:	add	r0, sp, #500	; 0x1f4
   15b88:	bl	11ee4 <snprintf@plt>
   15b8c:	mov	r2, r8
   15b90:	mov	r3, r9
   15b94:	add	r1, sp, #500	; 0x1f4
   15b98:	ldr	r0, [r5, #44]	; 0x2c
   15b9c:	bl	1b950 <mount@plt+0x97f0>
   15ba0:	mov	r0, r4
   15ba4:	bl	11ddc <mnl_attr_next@plt>
   15ba8:	mov	r4, r0
   15bac:	mov	r0, r7
   15bb0:	bl	11fd4 <mnl_attr_get_payload@plt>
   15bb4:	mov	r8, r0
   15bb8:	mov	r0, r7
   15bbc:	bl	12100 <mnl_attr_get_payload_len@plt>
   15bc0:	add	r1, r8, r0
   15bc4:	sub	r1, r1, r4
   15bc8:	mov	r0, r4
   15bcc:	bl	120ac <mnl_attr_ok@plt>
   15bd0:	cmp	r0, #0
   15bd4:	beq	15c7c <mount@plt+0x3b1c>
   15bd8:	mov	r2, #240	; 0xf0
   15bdc:	mov	r1, #0
   15be0:	add	r0, sp, #260	; 0x104
   15be4:	bl	11efc <memset@plt>
   15be8:	add	r2, sp, #260	; 0x104
   15bec:	mov	r1, fp
   15bf0:	mov	r0, r4
   15bf4:	bl	11fe0 <mnl_attr_parse_nested@plt>
   15bf8:	cmp	r0, #1
   15bfc:	mov	sl, r0
   15c00:	bne	15c7c <mount@plt+0x3b1c>
   15c04:	ldr	r0, [sp, #328]	; 0x148
   15c08:	cmp	r0, #0
   15c0c:	beq	15c7c <mount@plt+0x3b1c>
   15c10:	ldr	r3, [sp, #332]	; 0x14c
   15c14:	cmp	r3, #0
   15c18:	beq	15c7c <mount@plt+0x3b1c>
   15c1c:	bl	11f80 <mnl_attr_get_str@plt>
   15c20:	str	r0, [sp, #12]
   15c24:	ldr	r0, [sp, #332]	; 0x14c
   15c28:	bl	11cb0 <mnl_attr_get_u64@plt>
   15c2c:	ldrb	r2, [r5, #48]	; 0x30
   15c30:	ldr	r3, [sp, #12]
   15c34:	cmp	r2, #0
   15c38:	mov	r8, r0
   15c3c:	mov	r9, r1
   15c40:	bne	15b7c <mount@plt+0x3a1c>
   15c44:	ldr	r0, [pc, #144]	; 15cdc <mount@plt+0x3b7c>
   15c48:	strd	r8, [sp]
   15c4c:	mov	r1, sl
   15c50:	ldr	r2, [pc, #136]	; 15ce0 <mount@plt+0x3b80>
   15c54:	ldr	r0, [r0]
   15c58:	bl	11f74 <__fprintf_chk@plt>
   15c5c:	b	15ba0 <mount@plt+0x3a40>
   15c60:	mvn	r0, #0
   15c64:	ldr	r2, [sp, #532]	; 0x214
   15c68:	ldr	r3, [r6]
   15c6c:	cmp	r2, r3
   15c70:	bne	15cc4 <mount@plt+0x3b64>
   15c74:	add	sp, sp, #540	; 0x21c
   15c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c7c:	ldrb	r3, [r5, #48]	; 0x30
   15c80:	cmp	r3, #0
   15c84:	movne	r0, #1
   15c88:	bne	15c64 <mount@plt+0x3b04>
   15c8c:	ldr	r3, [pc, #72]	; 15cdc <mount@plt+0x3b7c>
   15c90:	mov	r0, #10
   15c94:	ldr	r1, [r3]
   15c98:	bl	1201c <fputc@plt>
   15c9c:	mov	r0, #1
   15ca0:	b	15c64 <mount@plt+0x3b04>
   15ca4:	ldr	r2, [pc, #48]	; 15cdc <mount@plt+0x3b7c>
   15ca8:	str	r0, [sp]
   15cac:	mov	r3, r4
   15cb0:	ldr	r0, [r2]
   15cb4:	mov	r1, #1
   15cb8:	ldr	r2, [pc, #36]	; 15ce4 <mount@plt+0x3b84>
   15cbc:	bl	11f74 <__fprintf_chk@plt>
   15cc0:	b	15b64 <mount@plt+0x3a04>
   15cc4:	bl	11ca4 <__stack_chk_fail@plt>
   15cc8:	andeq	r2, r3, r8, ror #29
   15ccc:	andeq	r2, r1, r4, lsl r9
   15cd0:	andeq	r0, r2, r0, lsr #2
   15cd4:	andeq	r0, r2, r8, lsr #2
   15cd8:	andeq	r2, r2, r8, ror #4
   15cdc:	andeq	r3, r3, r4, ror #4
   15ce0:	andeq	r0, r2, r4, lsl r0
   15ce4:	andeq	r0, r2, r0, lsr r1
   15ce8:	push	{r4, lr}
   15cec:	mov	r1, #0
   15cf0:	mov	r4, r0
   15cf4:	bl	129d8 <mount@plt+0x878>
   15cf8:	cmp	r0, #0
   15cfc:	popne	{r4, pc}
   15d00:	mov	r0, r4
   15d04:	ldr	r1, [pc, #4]	; 15d10 <mount@plt+0x3bb0>
   15d08:	pop	{r4, lr}
   15d0c:	b	13690 <mount@plt+0x1530>
   15d10:	andeq	r4, r1, r4, lsl #24
   15d14:	push	{r4, lr}
   15d18:	mov	r4, r0
   15d1c:	ldr	r1, [pc, #40]	; 15d4c <mount@plt+0x3bec>
   15d20:	bl	129d8 <mount@plt+0x878>
   15d24:	cmp	r0, #0
   15d28:	popne	{r4, pc}
   15d2c:	mov	r0, r4
   15d30:	bl	13084 <mount@plt+0xf24>
   15d34:	cmp	r0, #0
   15d38:	popne	{r4, pc}
   15d3c:	mov	r0, r4
   15d40:	ldr	r1, [pc, #8]	; 15d50 <mount@plt+0x3bf0>
   15d44:	pop	{r4, lr}
   15d48:	b	13690 <mount@plt+0x1530>
   15d4c:	andeq	r0, r2, r0, asr #17
   15d50:	andeq	r4, r1, r4, lsl ip
   15d54:	push	{r4, lr}
   15d58:	mov	r4, r0
   15d5c:	ldr	r1, [pc, #40]	; 15d8c <mount@plt+0x3c2c>
   15d60:	bl	129d8 <mount@plt+0x878>
   15d64:	cmp	r0, #0
   15d68:	popne	{r4, pc}
   15d6c:	mov	r0, r4
   15d70:	bl	13084 <mount@plt+0xf24>
   15d74:	cmp	r0, #0
   15d78:	popne	{r4, pc}
   15d7c:	mov	r0, r4
   15d80:	ldr	r1, [pc, #8]	; 15d90 <mount@plt+0x3c30>
   15d84:	pop	{r4, lr}
   15d88:	b	13690 <mount@plt+0x1530>
   15d8c:	andeq	r0, r2, r0, asr #21
   15d90:	andeq	r4, r1, r4, lsr #24
   15d94:	push	{r4, lr}
   15d98:	mov	r4, r0
   15d9c:	ldr	r1, [pc, #40]	; 15dcc <mount@plt+0x3c6c>
   15da0:	bl	129d8 <mount@plt+0x878>
   15da4:	cmp	r0, #0
   15da8:	popne	{r4, pc}
   15dac:	mov	r0, r4
   15db0:	bl	13084 <mount@plt+0xf24>
   15db4:	cmp	r0, #0
   15db8:	popne	{r4, pc}
   15dbc:	mov	r0, r4
   15dc0:	ldr	r1, [pc, #8]	; 15dd0 <mount@plt+0x3c70>
   15dc4:	pop	{r4, lr}
   15dc8:	b	13690 <mount@plt+0x1530>
   15dcc:	andeq	r0, r2, r0, asr #25
   15dd0:	andeq	r4, r1, r4, lsr ip
   15dd4:	cmp	r1, #0
   15dd8:	mov	r1, r2
   15ddc:	beq	15dec <mount@plt+0x3c8c>
   15de0:	mov	r2, r3
   15de4:	mov	r3, #0
   15de8:	b	1b8e8 <mount@plt+0x9788>
   15dec:	mov	r2, r3
   15df0:	mov	r3, r1
   15df4:	ldr	r1, [pc, #32]	; 15e1c <mount@plt+0x3cbc>
   15df8:	push	{lr}		; (str lr, [sp, #-4]!)
   15dfc:	sub	sp, sp, #12
   15e00:	str	r2, [sp]
   15e04:	ldr	r2, [pc, #20]	; 15e20 <mount@plt+0x3cc0>
   15e08:	ldr	r0, [r1]
   15e0c:	mov	r1, #1
   15e10:	bl	11f74 <__fprintf_chk@plt>
   15e14:	add	sp, sp, #12
   15e18:	pop	{pc}		; (ldr pc, [sp], #4)
   15e1c:	andeq	r3, r3, r4, ror #4
   15e20:	andeq	r0, r2, r0
   15e24:	ldr	r3, [pc, #880]	; 1619c <mount@plt+0x403c>
   15e28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e2c:	sub	sp, sp, #524	; 0x20c
   15e30:	ldr	r3, [r3]
   15e34:	mov	r4, r0
   15e38:	mov	r2, #240	; 0xf0
   15e3c:	mov	r5, r1
   15e40:	add	r0, sp, #36	; 0x24
   15e44:	mov	r1, #0
   15e48:	str	r3, [sp, #516]	; 0x204
   15e4c:	bl	11efc <memset@plt>
   15e50:	add	r3, sp, #36	; 0x24
   15e54:	mov	r0, r4
   15e58:	ldr	r2, [pc, #832]	; 161a0 <mount@plt+0x4040>
   15e5c:	mov	r1, #0
   15e60:	bl	11c80 <mnl_attr_parse@plt>
   15e64:	ldr	r3, [sp, #40]	; 0x28
   15e68:	cmp	r3, #0
   15e6c:	beq	16100 <mount@plt+0x3fa0>
   15e70:	ldr	r0, [sp, #44]	; 0x2c
   15e74:	cmp	r0, #0
   15e78:	beq	16100 <mount@plt+0x3fa0>
   15e7c:	ldr	r3, [sp, #196]	; 0xc4
   15e80:	cmp	r3, #0
   15e84:	beq	16100 <mount@plt+0x3fa0>
   15e88:	bl	11f80 <mnl_attr_get_str@plt>
   15e8c:	ldr	fp, [pc, #784]	; 161a4 <mount@plt+0x4044>
   15e90:	str	r0, [sp, #24]
   15e94:	ldr	r0, [sp, #40]	; 0x28
   15e98:	bl	12058 <mnl_attr_get_u32@plt>
   15e9c:	ldr	r9, [sp, #196]	; 0xc4
   15ea0:	mov	r6, r9
   15ea4:	str	r0, [sp, #28]
   15ea8:	mov	r0, r9
   15eac:	bl	11fd4 <mnl_attr_get_payload@plt>
   15eb0:	mov	r8, r0
   15eb4:	b	1603c <mount@plt+0x3edc>
   15eb8:	bl	11cb0 <mnl_attr_get_u64@plt>
   15ebc:	strd	r0, [sp, #8]
   15ec0:	ldr	r0, [sp, #456]	; 0x1c8
   15ec4:	bl	11cb0 <mnl_attr_get_u64@plt>
   15ec8:	str	r1, [sp, #20]
   15ecc:	mov	r2, r0
   15ed0:	mov	r9, r0
   15ed4:	mov	r1, fp
   15ed8:	mov	r0, r5
   15edc:	bl	12d98 <mount@plt+0xc38>
   15ee0:	cmp	r0, #0
   15ee4:	bne	16030 <mount@plt+0x3ed0>
   15ee8:	ldr	r7, [sp, #388]	; 0x184
   15eec:	cmp	r7, #0
   15ef0:	moveq	sl, r7
   15ef4:	beq	15f0c <mount@plt+0x3dac>
   15ef8:	mov	r0, r7
   15efc:	bl	12058 <mnl_attr_get_u32@plt>
   15f00:	mov	sl, r0
   15f04:	bl	14c64 <mount@plt+0x2b04>
   15f08:	mov	r7, r0
   15f0c:	mov	r2, sl
   15f10:	ldr	r1, [pc, #656]	; 161a8 <mount@plt+0x4048>
   15f14:	mov	r0, r5
   15f18:	bl	12d98 <mount@plt+0xc38>
   15f1c:	cmp	r0, #0
   15f20:	bne	16184 <mount@plt+0x4024>
   15f24:	ldr	r0, [sp, #392]	; 0x188
   15f28:	cmp	r0, #0
   15f2c:	beq	15f38 <mount@plt+0x3dd8>
   15f30:	bl	11f80 <mnl_attr_get_str@plt>
   15f34:	mov	r7, r0
   15f38:	ldrb	r1, [r5, #48]	; 0x30
   15f3c:	cmp	r1, #0
   15f40:	bne	16150 <mount@plt+0x3ff0>
   15f44:	ldr	r3, [sp, #24]
   15f48:	ldr	r2, [sp, #28]
   15f4c:	add	r0, r5, #44	; 0x2c
   15f50:	bl	14eb8 <mount@plt+0x2d58>
   15f54:	ldr	r3, [sp, #444]	; 0x1bc
   15f58:	cmp	r3, #0
   15f5c:	beq	15f74 <mount@plt+0x3e14>
   15f60:	ldr	r3, [sp, #16]
   15f64:	ldr	r2, [pc, #576]	; 161ac <mount@plt+0x404c>
   15f68:	ldrb	r1, [r5, #48]	; 0x30
   15f6c:	ldr	r0, [r5, #44]	; 0x2c
   15f70:	bl	15dd4 <mount@plt+0x3c74>
   15f74:	ldr	r3, [sp, #448]	; 0x1c0
   15f78:	ldr	r0, [r5, #44]	; 0x2c
   15f7c:	cmp	r3, #0
   15f80:	ldrb	r1, [r5, #48]	; 0x30
   15f84:	beq	15f9c <mount@plt+0x3e3c>
   15f88:	mov	r3, r4
   15f8c:	ldr	r2, [pc, #540]	; 161b0 <mount@plt+0x4050>
   15f90:	bl	15dd4 <mount@plt+0x3c74>
   15f94:	ldrb	r1, [r5, #48]	; 0x30
   15f98:	ldr	r0, [r5, #44]	; 0x2c
   15f9c:	ldr	r3, [sp, #452]	; 0x1c4
   15fa0:	cmp	r3, #0
   15fa4:	beq	15fc4 <mount@plt+0x3e64>
   15fa8:	cmp	r1, #0
   15fac:	ldrd	r2, [sp, #8]
   15fb0:	beq	16160 <mount@plt+0x4000>
   15fb4:	ldr	r1, [pc, #504]	; 161b4 <mount@plt+0x4054>
   15fb8:	bl	1b8e8 <mount@plt+0x9788>
   15fbc:	ldrb	r1, [r5, #48]	; 0x30
   15fc0:	ldr	r0, [r5, #44]	; 0x2c
   15fc4:	cmp	r1, #0
   15fc8:	beq	1612c <mount@plt+0x3fcc>
   15fcc:	mov	r2, r9
   15fd0:	mov	r1, fp
   15fd4:	bl	1b8a0 <mount@plt+0x9740>
   15fd8:	ldrb	r3, [r5, #48]	; 0x30
   15fdc:	cmp	r3, #0
   15fe0:	beq	16120 <mount@plt+0x3fc0>
   15fe4:	mov	r2, sl
   15fe8:	ldr	r1, [pc, #440]	; 161a8 <mount@plt+0x4048>
   15fec:	ldr	r0, [r5, #44]	; 0x2c
   15ff0:	bl	1b8a0 <mount@plt+0x9740>
   15ff4:	add	r3, sp, #276	; 0x114
   15ff8:	mov	r2, r7
   15ffc:	ldrb	r1, [r5, #48]	; 0x30
   16000:	ldr	r0, [r5, #44]	; 0x2c
   16004:	bl	14f10 <mount@plt+0x2db0>
   16008:	ldr	r3, [sp, #388]	; 0x184
   1600c:	cmp	r3, #0
   16010:	beq	1601c <mount@plt+0x3ebc>
   16014:	mov	r0, r7
   16018:	bl	11c14 <free@plt>
   1601c:	mov	r0, r5
   16020:	ldr	r1, [sp, #484]	; 0x1e4
   16024:	bl	137d8 <mount@plt+0x1678>
   16028:	mov	r0, r5
   1602c:	bl	137b0 <mount@plt+0x1650>
   16030:	mov	r0, r8
   16034:	bl	11ddc <mnl_attr_next@plt>
   16038:	mov	r8, r0
   1603c:	mov	r0, r6
   16040:	bl	11fd4 <mnl_attr_get_payload@plt>
   16044:	mov	r4, r0
   16048:	mov	r0, r6
   1604c:	bl	12100 <mnl_attr_get_payload_len@plt>
   16050:	add	r1, r4, r0
   16054:	sub	r1, r1, r8
   16058:	mov	r0, r8
   1605c:	bl	120ac <mnl_attr_ok@plt>
   16060:	cmp	r0, #0
   16064:	beq	16190 <mount@plt+0x4030>
   16068:	mov	r2, #240	; 0xf0
   1606c:	mov	r1, #0
   16070:	add	r0, sp, #276	; 0x114
   16074:	bl	11efc <memset@plt>
   16078:	add	r2, sp, #276	; 0x114
   1607c:	ldr	r1, [pc, #284]	; 161a0 <mount@plt+0x4040>
   16080:	mov	r0, r8
   16084:	bl	11fe0 <mnl_attr_parse_nested@plt>
   16088:	cmp	r0, #1
   1608c:	bne	16100 <mount@plt+0x3fa0>
   16090:	ldr	r3, [sp, #456]	; 0x1c8
   16094:	cmp	r3, #0
   16098:	beq	16100 <mount@plt+0x3fa0>
   1609c:	ldr	r3, [sp, #388]	; 0x184
   160a0:	cmp	r3, #0
   160a4:	beq	160f4 <mount@plt+0x3f94>
   160a8:	ldr	r0, [sp, #444]	; 0x1bc
   160ac:	cmp	r0, #0
   160b0:	streq	r0, [sp, #16]
   160b4:	beq	160c0 <mount@plt+0x3f60>
   160b8:	bl	12058 <mnl_attr_get_u32@plt>
   160bc:	str	r0, [sp, #16]
   160c0:	ldr	r0, [sp, #448]	; 0x1c0
   160c4:	cmp	r0, #0
   160c8:	moveq	r4, r0
   160cc:	beq	160d8 <mount@plt+0x3f78>
   160d0:	bl	12058 <mnl_attr_get_u32@plt>
   160d4:	mov	r4, r0
   160d8:	ldr	r0, [sp, #452]	; 0x1c4
   160dc:	cmp	r0, #0
   160e0:	bne	15eb8 <mount@plt+0x3d58>
   160e4:	mov	r2, #0
   160e8:	mov	r3, #0
   160ec:	strd	r2, [sp, #8]
   160f0:	b	15ec0 <mount@plt+0x3d60>
   160f4:	ldr	r3, [sp, #392]	; 0x188
   160f8:	cmp	r3, #0
   160fc:	bne	160a8 <mount@plt+0x3f48>
   16100:	mvn	r0, #0
   16104:	ldr	r3, [pc, #144]	; 1619c <mount@plt+0x403c>
   16108:	ldr	r2, [sp, #516]	; 0x204
   1610c:	ldr	r3, [r3]
   16110:	cmp	r2, r3
   16114:	bne	16198 <mount@plt+0x4038>
   16118:	add	sp, sp, #524	; 0x20c
   1611c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16120:	mov	r0, sl
   16124:	bl	14e98 <mount@plt+0x2d38>
   16128:	b	15ff4 <mount@plt+0x3e94>
   1612c:	ldr	r3, [sp, #20]
   16130:	str	r9, [sp]
   16134:	str	r3, [sp, #4]
   16138:	ldr	r3, [pc, #120]	; 161b8 <mount@plt+0x4058>
   1613c:	ldr	r2, [pc, #120]	; 161bc <mount@plt+0x405c>
   16140:	mov	r1, #1
   16144:	ldr	r0, [r3]
   16148:	bl	11f74 <__fprintf_chk@plt>
   1614c:	b	15fd8 <mount@plt+0x3e78>
   16150:	ldr	r0, [r5, #44]	; 0x2c
   16154:	bl	1b68c <mount@plt+0x952c>
   16158:	ldrb	r1, [r5, #48]	; 0x30
   1615c:	b	15f44 <mount@plt+0x3de4>
   16160:	strd	r2, [sp]
   16164:	ldr	r3, [pc, #76]	; 161b8 <mount@plt+0x4058>
   16168:	mov	r1, #1
   1616c:	ldr	r2, [pc, #76]	; 161c0 <mount@plt+0x4060>
   16170:	ldr	r0, [r3]
   16174:	bl	11f74 <__fprintf_chk@plt>
   16178:	ldrb	r1, [r5, #48]	; 0x30
   1617c:	ldr	r0, [r5, #44]	; 0x2c
   16180:	b	15fc4 <mount@plt+0x3e64>
   16184:	mov	r0, r7
   16188:	bl	11c14 <free@plt>
   1618c:	b	16030 <mount@plt+0x3ed0>
   16190:	mov	r0, #1
   16194:	b	16104 <mount@plt+0x3fa4>
   16198:	bl	11ca4 <__stack_chk_fail@plt>
   1619c:	andeq	r2, r3, r8, ror #29
   161a0:	andeq	r2, r1, r4, lsl r9
   161a4:	andeq	r1, r2, r0, asr #13
   161a8:	strdeq	r1, [r2], -ip
   161ac:	andeq	r1, r2, r8, asr #13
   161b0:	ldrdeq	r1, [r2], -r0
   161b4:	ldrdeq	r1, [r2], -r8
   161b8:	andeq	r3, r3, r4, ror #4
   161bc:	strdeq	r1, [r2], -r0
   161c0:	andeq	r1, r2, r0, ror #13
   161c4:	push	{r4, lr}
   161c8:	mov	r4, r0
   161cc:	ldr	r1, [pc, #44]	; 16200 <mount@plt+0x40a0>
   161d0:	bl	129d8 <mount@plt+0x878>
   161d4:	cmp	r0, #0
   161d8:	popne	{r4, pc}
   161dc:	mov	r0, r4
   161e0:	bl	13084 <mount@plt+0xf24>
   161e4:	cmp	r0, #0
   161e8:	popne	{r4, pc}
   161ec:	mov	r2, r0
   161f0:	ldr	r1, [pc, #12]	; 16204 <mount@plt+0x40a4>
   161f4:	mov	r0, r4
   161f8:	pop	{r4, lr}
   161fc:	b	1344c <mount@plt+0x12ec>
   16200:	andeq	r0, r2, r0, asr #29
   16204:	andeq	r4, r1, r4, asr #24
   16208:	push	{r4, lr}
   1620c:	mov	r4, r0
   16210:	ldr	r1, [pc, #44]	; 16244 <mount@plt+0x40e4>
   16214:	bl	129d8 <mount@plt+0x878>
   16218:	cmp	r0, #0
   1621c:	popne	{r4, pc}
   16220:	mov	r0, r4
   16224:	bl	13084 <mount@plt+0xf24>
   16228:	cmp	r0, #0
   1622c:	popne	{r4, pc}
   16230:	mov	r2, r0
   16234:	ldr	r1, [pc, #12]	; 16248 <mount@plt+0x40e8>
   16238:	mov	r0, r4
   1623c:	pop	{r4, lr}
   16240:	b	1344c <mount@plt+0x12ec>
   16244:	andeq	r1, r2, r0, asr #1
   16248:	andeq	r4, r1, r4, asr ip
   1624c:	push	{r4, r5, r6, r7, r8, fp, lr}
   16250:	mov	r6, r0
   16254:	ldr	r4, [pc, #156]	; 162f8 <mount@plt+0x4198>
   16258:	add	fp, sp, #24
   1625c:	sub	sp, sp, #28
   16260:	ldr	r0, [r4]
   16264:	cmp	r1, #0
   16268:	mov	r5, r2
   1626c:	mov	r1, r3
   16270:	str	r0, [fp, #-32]	; 0xffffffe0
   16274:	ldrh	ip, [fp, #4]
   16278:	bne	162b0 <mount@plt+0x4150>
   1627c:	ldr	r0, [pc, #120]	; 162fc <mount@plt+0x419c>
   16280:	mov	r3, r2
   16284:	ldr	r2, [pc, #116]	; 16300 <mount@plt+0x41a0>
   16288:	ldr	r0, [r0]
   1628c:	stm	sp, {r1, ip}
   16290:	mov	r1, #1
   16294:	bl	11f74 <__fprintf_chk@plt>
   16298:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1629c:	ldr	r3, [r4]
   162a0:	cmp	r2, r3
   162a4:	bne	162f4 <mount@plt+0x4194>
   162a8:	sub	sp, fp, #24
   162ac:	pop	{r4, r5, r6, r7, r8, fp, pc}
   162b0:	mov	r8, sp
   162b4:	ldr	r2, [pc, #72]	; 16304 <mount@plt+0x41a4>
   162b8:	sub	sp, sp, #56	; 0x38
   162bc:	add	r7, sp, #16
   162c0:	mov	r3, #52	; 0x34
   162c4:	stmib	sp, {r1, ip}
   162c8:	str	r2, [sp]
   162cc:	mov	r1, r3
   162d0:	mov	r2, #1
   162d4:	mov	r0, r7
   162d8:	bl	1213c <__snprintf_chk@plt>
   162dc:	mov	r2, r7
   162e0:	mov	r1, r5
   162e4:	ldr	r0, [r6]
   162e8:	bl	1b838 <mount@plt+0x96d8>
   162ec:	mov	sp, r8
   162f0:	b	16298 <mount@plt+0x4138>
   162f4:	bl	11ca4 <__stack_chk_fail@plt>
   162f8:	andeq	r2, r3, r8, ror #29
   162fc:	andeq	r3, r3, r4, ror #4
   16300:	andeq	r1, r2, r4, lsl #14
   16304:	strdeq	r1, [r2], -ip
   16308:	ldr	r3, [pc, #752]	; 16600 <mount@plt+0x44a0>
   1630c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16310:	sub	sp, sp, #516	; 0x204
   16314:	ldr	r3, [r3]
   16318:	mov	r5, r0
   1631c:	mov	r2, #240	; 0xf0
   16320:	mov	r4, r1
   16324:	add	r0, sp, #28
   16328:	mov	r1, #0
   1632c:	str	r3, [sp, #508]	; 0x1fc
   16330:	bl	11efc <memset@plt>
   16334:	add	r3, sp, #28
   16338:	mov	r0, r5
   1633c:	ldr	r2, [pc, #704]	; 16604 <mount@plt+0x44a4>
   16340:	mov	r1, #0
   16344:	bl	11c80 <mnl_attr_parse@plt>
   16348:	ldr	r3, [sp, #32]
   1634c:	cmp	r3, #0
   16350:	beq	16594 <mount@plt+0x4434>
   16354:	ldr	r0, [sp, #36]	; 0x24
   16358:	cmp	r0, #0
   1635c:	beq	16594 <mount@plt+0x4434>
   16360:	ldr	r3, [sp, #212]	; 0xd4
   16364:	cmp	r3, #0
   16368:	beq	16594 <mount@plt+0x4434>
   1636c:	bl	11f80 <mnl_attr_get_str@plt>
   16370:	ldr	r8, [pc, #656]	; 16608 <mount@plt+0x44a8>
   16374:	str	r0, [sp, #16]
   16378:	ldr	r0, [sp, #32]
   1637c:	bl	12058 <mnl_attr_get_u32@plt>
   16380:	ldr	fp, [sp, #212]	; 0xd4
   16384:	str	r0, [sp, #20]
   16388:	mov	r0, fp
   1638c:	bl	11fd4 <mnl_attr_get_payload@plt>
   16390:	mov	r5, r0
   16394:	b	1651c <mount@plt+0x43bc>
   16398:	ldr	r6, [sp, #460]	; 0x1cc
   1639c:	cmp	r6, #0
   163a0:	beq	163b4 <mount@plt+0x4254>
   163a4:	mov	r0, r6
   163a8:	bl	12058 <mnl_attr_get_u32@plt>
   163ac:	mov	r6, r0
   163b0:	ldr	r0, [sp, #420]	; 0x1a4
   163b4:	bl	11cb0 <mnl_attr_get_u64@plt>
   163b8:	str	r1, [sp, #8]
   163bc:	mov	r2, r0
   163c0:	mov	r9, r0
   163c4:	mov	r1, r8
   163c8:	mov	r0, r4
   163cc:	bl	12d98 <mount@plt+0xc38>
   163d0:	cmp	r0, #0
   163d4:	bne	16510 <mount@plt+0x43b0>
   163d8:	ldr	r0, [sp, #464]	; 0x1d0
   163dc:	cmp	r0, #0
   163e0:	streq	r0, [sp, #12]
   163e4:	beq	163f0 <mount@plt+0x4290>
   163e8:	bl	12058 <mnl_attr_get_u32@plt>
   163ec:	str	r0, [sp, #12]
   163f0:	ldr	r7, [sp, #380]	; 0x17c
   163f4:	cmp	r7, #0
   163f8:	moveq	sl, r7
   163fc:	beq	16414 <mount@plt+0x42b4>
   16400:	mov	r0, r7
   16404:	bl	12058 <mnl_attr_get_u32@plt>
   16408:	mov	sl, r0
   1640c:	bl	14c64 <mount@plt+0x2b04>
   16410:	mov	r7, r0
   16414:	mov	r2, sl
   16418:	ldr	r1, [pc, #492]	; 1660c <mount@plt+0x44ac>
   1641c:	mov	r0, r4
   16420:	bl	12d98 <mount@plt+0xc38>
   16424:	cmp	r0, #0
   16428:	bne	16510 <mount@plt+0x43b0>
   1642c:	ldr	r0, [sp, #384]	; 0x180
   16430:	cmp	r0, #0
   16434:	beq	16440 <mount@plt+0x42e0>
   16438:	bl	11f80 <mnl_attr_get_str@plt>
   1643c:	mov	r7, r0
   16440:	ldrb	r1, [r4, #48]	; 0x30
   16444:	cmp	r1, #0
   16448:	bne	165e4 <mount@plt+0x4484>
   1644c:	ldr	r3, [sp, #16]
   16450:	ldr	r2, [sp, #20]
   16454:	add	r0, r4, #44	; 0x2c
   16458:	bl	14eb8 <mount@plt+0x2d58>
   1645c:	ldr	r3, [sp, #460]	; 0x1cc
   16460:	cmp	r3, #0
   16464:	beq	1647c <mount@plt+0x431c>
   16468:	mov	r3, r6
   1646c:	ldr	r2, [pc, #412]	; 16610 <mount@plt+0x44b0>
   16470:	ldrb	r1, [r4, #48]	; 0x30
   16474:	ldr	r0, [r4, #44]	; 0x2c
   16478:	bl	15dd4 <mount@plt+0x3c74>
   1647c:	ldrb	r3, [r4, #48]	; 0x30
   16480:	cmp	r3, #0
   16484:	beq	165c0 <mount@plt+0x4460>
   16488:	mov	r2, r9
   1648c:	mov	r1, r8
   16490:	ldr	r0, [r4, #44]	; 0x2c
   16494:	bl	1b8a0 <mount@plt+0x9740>
   16498:	ldr	r3, [sp, #464]	; 0x1d0
   1649c:	ldr	r0, [r4, #44]	; 0x2c
   164a0:	cmp	r3, #0
   164a4:	ldrb	r1, [r4, #48]	; 0x30
   164a8:	beq	164c0 <mount@plt+0x4360>
   164ac:	ldr	r3, [sp, #12]
   164b0:	ldr	r2, [pc, #348]	; 16614 <mount@plt+0x44b4>
   164b4:	bl	15dd4 <mount@plt+0x3c74>
   164b8:	ldrb	r1, [r4, #48]	; 0x30
   164bc:	ldr	r0, [r4, #44]	; 0x2c
   164c0:	cmp	r1, #0
   164c4:	beq	165b4 <mount@plt+0x4454>
   164c8:	mov	r2, sl
   164cc:	ldr	r1, [pc, #312]	; 1660c <mount@plt+0x44ac>
   164d0:	bl	1b8a0 <mount@plt+0x9740>
   164d4:	add	r3, sp, #268	; 0x10c
   164d8:	mov	r2, r7
   164dc:	ldrb	r1, [r4, #48]	; 0x30
   164e0:	ldr	r0, [r4, #44]	; 0x2c
   164e4:	bl	14f10 <mount@plt+0x2db0>
   164e8:	ldr	r3, [sp, #380]	; 0x17c
   164ec:	cmp	r3, #0
   164f0:	beq	164fc <mount@plt+0x439c>
   164f4:	mov	r0, r7
   164f8:	bl	11c14 <free@plt>
   164fc:	mov	r0, r4
   16500:	ldr	r1, [sp, #476]	; 0x1dc
   16504:	bl	137d8 <mount@plt+0x1678>
   16508:	mov	r0, r4
   1650c:	bl	137b0 <mount@plt+0x1650>
   16510:	mov	r0, r5
   16514:	bl	11ddc <mnl_attr_next@plt>
   16518:	mov	r5, r0
   1651c:	mov	r0, fp
   16520:	bl	11fd4 <mnl_attr_get_payload@plt>
   16524:	mov	r6, r0
   16528:	mov	r0, fp
   1652c:	bl	12100 <mnl_attr_get_payload_len@plt>
   16530:	add	r1, r6, r0
   16534:	sub	r1, r1, r5
   16538:	mov	r0, r5
   1653c:	bl	120ac <mnl_attr_ok@plt>
   16540:	cmp	r0, #0
   16544:	beq	165f4 <mount@plt+0x4494>
   16548:	mov	r2, #240	; 0xf0
   1654c:	mov	r1, #0
   16550:	add	r0, sp, #268	; 0x10c
   16554:	bl	11efc <memset@plt>
   16558:	add	r2, sp, #268	; 0x10c
   1655c:	ldr	r1, [pc, #160]	; 16604 <mount@plt+0x44a4>
   16560:	mov	r0, r5
   16564:	bl	11fe0 <mnl_attr_parse_nested@plt>
   16568:	cmp	r0, #1
   1656c:	bne	16594 <mount@plt+0x4434>
   16570:	ldr	r0, [sp, #420]	; 0x1a4
   16574:	cmp	r0, #0
   16578:	beq	16594 <mount@plt+0x4434>
   1657c:	ldr	r3, [sp, #380]	; 0x17c
   16580:	cmp	r3, #0
   16584:	bne	16398 <mount@plt+0x4238>
   16588:	ldr	r3, [sp, #384]	; 0x180
   1658c:	cmp	r3, #0
   16590:	bne	16398 <mount@plt+0x4238>
   16594:	mvn	r0, #0
   16598:	ldr	r3, [pc, #96]	; 16600 <mount@plt+0x44a0>
   1659c:	ldr	r2, [sp, #508]	; 0x1fc
   165a0:	ldr	r3, [r3]
   165a4:	cmp	r2, r3
   165a8:	bne	165fc <mount@plt+0x449c>
   165ac:	add	sp, sp, #516	; 0x204
   165b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165b4:	mov	r0, sl
   165b8:	bl	14e98 <mount@plt+0x2d38>
   165bc:	b	164d4 <mount@plt+0x4374>
   165c0:	ldr	r3, [sp, #8]
   165c4:	str	r9, [sp]
   165c8:	str	r3, [sp, #4]
   165cc:	ldr	r3, [pc, #68]	; 16618 <mount@plt+0x44b8>
   165d0:	ldr	r2, [pc, #68]	; 1661c <mount@plt+0x44bc>
   165d4:	mov	r1, #1
   165d8:	ldr	r0, [r3]
   165dc:	bl	11f74 <__fprintf_chk@plt>
   165e0:	b	16498 <mount@plt+0x4338>
   165e4:	ldr	r0, [r4, #44]	; 0x2c
   165e8:	bl	1b68c <mount@plt+0x952c>
   165ec:	ldrb	r1, [r4, #48]	; 0x30
   165f0:	b	1644c <mount@plt+0x42ec>
   165f4:	mov	r0, #1
   165f8:	b	16598 <mount@plt+0x4438>
   165fc:	bl	11ca4 <__stack_chk_fail@plt>
   16600:	andeq	r2, r3, r8, ror #29
   16604:	andeq	r2, r1, r4, lsl r9
   16608:	andeq	r1, r2, r8, ror #11
   1660c:	strdeq	r1, [r2], -ip
   16610:	andeq	r1, r2, r0, lsl r7
   16614:	andeq	r1, r2, r0, lsr #14
   16618:	andeq	r3, r3, r4, ror #4
   1661c:	andeq	r1, r2, ip, lsl #12
   16620:	ldr	r3, [pc, #1668]	; 16cac <mount@plt+0x4b4c>
   16624:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16628:	sub	sp, sp, #620	; 0x26c
   1662c:	ldr	r3, [r3]
   16630:	mov	r4, r0
   16634:	mov	r2, #240	; 0xf0
   16638:	mov	r9, r1
   1663c:	add	r0, sp, #36	; 0x24
   16640:	mov	r1, #0
   16644:	str	r3, [sp, #612]	; 0x264
   16648:	bl	11efc <memset@plt>
   1664c:	add	r3, sp, #36	; 0x24
   16650:	mov	r0, r4
   16654:	ldr	r2, [pc, #1620]	; 16cb0 <mount@plt+0x4b50>
   16658:	mov	r1, #0
   1665c:	bl	11c80 <mnl_attr_parse@plt>
   16660:	ldr	r3, [sp, #40]	; 0x28
   16664:	cmp	r3, #0
   16668:	beq	16908 <mount@plt+0x47a8>
   1666c:	ldr	r0, [sp, #44]	; 0x2c
   16670:	cmp	r0, #0
   16674:	beq	16908 <mount@plt+0x47a8>
   16678:	ldr	r3, [sp, #156]	; 0x9c
   1667c:	cmp	r3, #0
   16680:	beq	16908 <mount@plt+0x47a8>
   16684:	bl	11f80 <mnl_attr_get_str@plt>
   16688:	ldr	r8, [pc, #1568]	; 16cb0 <mount@plt+0x4b50>
   1668c:	str	r0, [sp, #24]
   16690:	ldr	r0, [sp, #40]	; 0x28
   16694:	bl	12058 <mnl_attr_get_u32@plt>
   16698:	ldr	sl, [sp, #156]	; 0x9c
   1669c:	str	r0, [sp, #20]
   166a0:	mov	r0, sl
   166a4:	bl	11fd4 <mnl_attr_get_payload@plt>
   166a8:	mov	fp, r0
   166ac:	mov	r0, sl
   166b0:	bl	11fd4 <mnl_attr_get_payload@plt>
   166b4:	mov	r4, r0
   166b8:	mov	r0, sl
   166bc:	bl	12100 <mnl_attr_get_payload_len@plt>
   166c0:	add	r1, r4, r0
   166c4:	sub	r1, r1, fp
   166c8:	mov	r0, fp
   166cc:	bl	120ac <mnl_attr_ok@plt>
   166d0:	cmp	r0, #0
   166d4:	beq	16b84 <mount@plt+0x4a24>
   166d8:	mov	r2, #240	; 0xf0
   166dc:	mov	r1, #0
   166e0:	add	r0, sp, #276	; 0x114
   166e4:	bl	11efc <memset@plt>
   166e8:	add	r2, sp, #276	; 0x114
   166ec:	mov	r1, r8
   166f0:	mov	r0, fp
   166f4:	bl	11fe0 <mnl_attr_parse_nested@plt>
   166f8:	cmp	r0, #1
   166fc:	bne	16b8c <mount@plt+0x4a2c>
   16700:	ldr	r3, [sp, #384]	; 0x180
   16704:	cmp	r3, #0
   16708:	beq	16908 <mount@plt+0x47a8>
   1670c:	ldr	r3, [sp, #404]	; 0x194
   16710:	cmp	r3, #0
   16714:	beq	16908 <mount@plt+0x47a8>
   16718:	ldr	r3, [sp, #388]	; 0x184
   1671c:	cmp	r3, #0
   16720:	beq	168fc <mount@plt+0x479c>
   16724:	ldr	r0, [sp, #288]	; 0x120
   16728:	cmp	r0, #0
   1672c:	beq	168a8 <mount@plt+0x4748>
   16730:	bl	12058 <mnl_attr_get_u32@plt>
   16734:	subs	r7, r0, #0
   16738:	beq	168a8 <mount@plt+0x4748>
   1673c:	ldr	r3, [r9, #28]
   16740:	cmp	r3, r7
   16744:	bne	16898 <mount@plt+0x4738>
   16748:	ldr	r0, [sp, #360]	; 0x168
   1674c:	cmp	r0, #0
   16750:	beq	168b8 <mount@plt+0x4758>
   16754:	bl	12058 <mnl_attr_get_u32@plt>
   16758:	ldr	r1, [pc, #1364]	; 16cb4 <mount@plt+0x4b54>
   1675c:	mov	r2, r0
   16760:	mov	r4, r0
   16764:	mov	r0, r9
   16768:	bl	12d98 <mount@plt+0xc38>
   1676c:	cmp	r0, #0
   16770:	bne	16898 <mount@plt+0x4738>
   16774:	ldr	r0, [sp, #380]	; 0x17c
   16778:	cmp	r0, #0
   1677c:	beq	168c8 <mount@plt+0x4768>
   16780:	bl	120b8 <mnl_attr_get_u8@plt>
   16784:	ldr	r1, [pc, #1324]	; 16cb8 <mount@plt+0x4b58>
   16788:	cmp	r0, #10
   1678c:	mov	r5, r0
   16790:	ldrls	r3, [pc, #1316]	; 16cbc <mount@plt+0x4b5c>
   16794:	ldrhi	r2, [pc, #1316]	; 16cc0 <mount@plt+0x4b60>
   16798:	addls	r3, r3, r0, lsl #2
   1679c:	mov	r0, r9
   167a0:	ldrls	r2, [r3, #24]
   167a4:	bl	12c9c <mount@plt+0xb3c>
   167a8:	cmp	r0, #0
   167ac:	bne	16898 <mount@plt+0x4738>
   167b0:	ldr	r0, [sp, #404]	; 0x194
   167b4:	bl	12058 <mnl_attr_get_u32@plt>
   167b8:	ldr	r3, [pc, #1284]	; 16cc4 <mount@plt+0x4b64>
   167bc:	cmp	r0, r3
   167c0:	mov	r6, r0
   167c4:	beq	16928 <mount@plt+0x47c8>
   167c8:	bls	168e8 <mount@plt+0x4788>
   167cc:	ldr	r3, [pc, #1268]	; 16cc8 <mount@plt+0x4b68>
   167d0:	cmp	r0, r3
   167d4:	bne	168d0 <mount@plt+0x4770>
   167d8:	ldr	r2, [pc, #1260]	; 16ccc <mount@plt+0x4b6c>
   167dc:	ldr	r1, [pc, #1260]	; 16cd0 <mount@plt+0x4b70>
   167e0:	mov	r0, r9
   167e4:	bl	12c9c <mount@plt+0xb3c>
   167e8:	cmp	r0, #0
   167ec:	bne	16898 <mount@plt+0x4738>
   167f0:	ldr	r0, [sp, #384]	; 0x180
   167f4:	bl	120b8 <mnl_attr_get_u8@plt>
   167f8:	ldr	r1, [pc, #1236]	; 16cd4 <mount@plt+0x4b74>
   167fc:	cmp	r0, #10
   16800:	ldrls	r3, [pc, #1204]	; 16cbc <mount@plt+0x4b5c>
   16804:	ldrhi	r3, [pc, #1204]	; 16cc0 <mount@plt+0x4b60>
   16808:	addls	r0, r3, r0, lsl #2
   1680c:	ldrls	r3, [r0, #2656]	; 0xa60
   16810:	mov	r0, r9
   16814:	str	r3, [sp, #8]
   16818:	ldr	r2, [sp, #8]
   1681c:	bl	12c9c <mount@plt+0xb3c>
   16820:	cmp	r0, #0
   16824:	bne	16898 <mount@plt+0x4738>
   16828:	ldr	r0, [sp, #408]	; 0x198
   1682c:	cmp	r0, #0
   16830:	beq	16878 <mount@plt+0x4718>
   16834:	add	r2, sp, #32
   16838:	add	r1, sp, #516	; 0x204
   1683c:	bl	14d10 <mount@plt+0x2bb0>
   16840:	cmp	r0, #0
   16844:	bne	16898 <mount@plt+0x4738>
   16848:	add	r2, sp, #516	; 0x204
   1684c:	ldr	r1, [pc, #1156]	; 16cd8 <mount@plt+0x4b78>
   16850:	mov	r0, r9
   16854:	bl	12c9c <mount@plt+0xb3c>
   16858:	cmp	r0, #0
   1685c:	bne	16898 <mount@plt+0x4738>
   16860:	ldrh	r2, [sp, #32]
   16864:	ldr	r1, [pc, #1136]	; 16cdc <mount@plt+0x4b7c>
   16868:	mov	r0, r9
   1686c:	bl	12d98 <mount@plt+0xc38>
   16870:	cmp	r0, #0
   16874:	bne	16898 <mount@plt+0x4738>
   16878:	ldr	r0, [sp, #412]	; 0x19c
   1687c:	cmp	r0, #0
   16880:	beq	16960 <mount@plt+0x4800>
   16884:	add	r2, sp, #34	; 0x22
   16888:	add	r1, sp, #564	; 0x234
   1688c:	bl	14d10 <mount@plt+0x2bb0>
   16890:	cmp	r0, #0
   16894:	beq	16930 <mount@plt+0x47d0>
   16898:	mov	r0, fp
   1689c:	bl	11ddc <mnl_attr_next@plt>
   168a0:	mov	fp, r0
   168a4:	b	166ac <mount@plt+0x454c>
   168a8:	ldr	r0, [sp, #360]	; 0x168
   168ac:	mov	r7, #0
   168b0:	cmp	r0, #0
   168b4:	bne	16754 <mount@plt+0x45f4>
   168b8:	mov	r4, r0
   168bc:	ldr	r0, [sp, #380]	; 0x17c
   168c0:	cmp	r0, #0
   168c4:	bne	16780 <mount@plt+0x4620>
   168c8:	mov	r5, r0
   168cc:	b	167b0 <mount@plt+0x4650>
   168d0:	ldr	r1, [pc, #1032]	; 16ce0 <mount@plt+0x4b80>
   168d4:	ldr	r3, [pc, #1032]	; 16ce4 <mount@plt+0x4b84>
   168d8:	cmp	r0, r1
   168dc:	ldr	r2, [pc, #1028]	; 16ce8 <mount@plt+0x4b88>
   168e0:	movne	r2, r3
   168e4:	b	167dc <mount@plt+0x467c>
   168e8:	ldr	r3, [pc, #1012]	; 16ce4 <mount@plt+0x4b84>
   168ec:	cmp	r0, #2
   168f0:	ldr	r2, [pc, #1008]	; 16ce8 <mount@plt+0x4b88>
   168f4:	movne	r2, r3
   168f8:	b	167dc <mount@plt+0x467c>
   168fc:	ldr	r3, [sp, #392]	; 0x188
   16900:	cmp	r3, #0
   16904:	bne	16724 <mount@plt+0x45c4>
   16908:	mvn	r0, #0
   1690c:	ldr	r3, [pc, #920]	; 16cac <mount@plt+0x4b4c>
   16910:	ldr	r2, [sp, #612]	; 0x264
   16914:	ldr	r3, [r3]
   16918:	cmp	r2, r3
   1691c:	bne	16ca8 <mount@plt+0x4b48>
   16920:	add	sp, sp, #620	; 0x26c
   16924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16928:	ldr	r2, [pc, #956]	; 16cec <mount@plt+0x4b8c>
   1692c:	b	167dc <mount@plt+0x467c>
   16930:	add	r2, sp, #564	; 0x234
   16934:	ldr	r1, [pc, #948]	; 16cf0 <mount@plt+0x4b90>
   16938:	mov	r0, r9
   1693c:	bl	12c9c <mount@plt+0xb3c>
   16940:	cmp	r0, #0
   16944:	bne	16898 <mount@plt+0x4738>
   16948:	ldrh	r2, [sp, #34]	; 0x22
   1694c:	ldr	r1, [pc, #928]	; 16cf4 <mount@plt+0x4b94>
   16950:	mov	r0, r9
   16954:	bl	12d98 <mount@plt+0xc38>
   16958:	cmp	r0, #0
   1695c:	bne	16898 <mount@plt+0x4738>
   16960:	ldr	r3, [sp, #388]	; 0x184
   16964:	cmp	r3, #0
   16968:	str	r3, [sp, #12]
   1696c:	streq	r3, [sp, #16]
   16970:	beq	16988 <mount@plt+0x4828>
   16974:	ldr	r0, [sp, #12]
   16978:	bl	12058 <mnl_attr_get_u32@plt>
   1697c:	str	r0, [sp, #16]
   16980:	bl	14c64 <mount@plt+0x2b04>
   16984:	str	r0, [sp, #12]
   16988:	ldr	r2, [sp, #16]
   1698c:	ldr	r1, [pc, #868]	; 16cf8 <mount@plt+0x4b98>
   16990:	mov	r0, r9
   16994:	bl	12d98 <mount@plt+0xc38>
   16998:	cmp	r0, #0
   1699c:	bne	16c44 <mount@plt+0x4ae4>
   169a0:	ldr	r0, [sp, #392]	; 0x188
   169a4:	cmp	r0, #0
   169a8:	beq	169b4 <mount@plt+0x4854>
   169ac:	bl	11f80 <mnl_attr_get_str@plt>
   169b0:	str	r0, [sp, #12]
   169b4:	ldrb	r1, [r9, #48]	; 0x30
   169b8:	cmp	r1, #0
   169bc:	bne	16c88 <mount@plt+0x4b28>
   169c0:	add	r3, r9, #44	; 0x2c
   169c4:	add	r2, sp, #276	; 0x114
   169c8:	str	r3, [sp, #28]
   169cc:	str	r2, [sp, #4]
   169d0:	mov	r0, r3
   169d4:	str	r7, [sp]
   169d8:	ldrd	r2, [sp, #20]
   169dc:	bl	15380 <mount@plt+0x3220>
   169e0:	ldr	r3, [sp, #360]	; 0x168
   169e4:	cmp	r3, #0
   169e8:	beq	16a08 <mount@plt+0x48a8>
   169ec:	ldrb	r3, [r9, #48]	; 0x30
   169f0:	cmp	r3, #0
   169f4:	beq	16ba0 <mount@plt+0x4a40>
   169f8:	mov	r2, r4
   169fc:	ldr	r1, [pc, #688]	; 16cb4 <mount@plt+0x4b54>
   16a00:	ldr	r0, [r9, #44]	; 0x2c
   16a04:	bl	1b8a0 <mount@plt+0x9740>
   16a08:	ldr	r3, [sp, #380]	; 0x17c
   16a0c:	ldr	r0, [r9, #44]	; 0x2c
   16a10:	cmp	r3, #0
   16a14:	ldrb	r3, [r9, #48]	; 0x30
   16a18:	beq	16a48 <mount@plt+0x48e8>
   16a1c:	cmp	r3, #0
   16a20:	beq	16bc4 <mount@plt+0x4a64>
   16a24:	cmp	r5, #10
   16a28:	ldr	r1, [pc, #648]	; 16cb8 <mount@plt+0x4b58>
   16a2c:	ldrls	r3, [pc, #648]	; 16cbc <mount@plt+0x4b5c>
   16a30:	ldrhi	r2, [pc, #648]	; 16cc0 <mount@plt+0x4b60>
   16a34:	addls	r5, r3, r5, lsl #2
   16a38:	ldrls	r2, [r5, #24]
   16a3c:	bl	1b838 <mount@plt+0x96d8>
   16a40:	ldrb	r3, [r9, #48]	; 0x30
   16a44:	ldr	r0, [r9, #44]	; 0x2c
   16a48:	cmp	r3, #0
   16a4c:	bne	16bfc <mount@plt+0x4a9c>
   16a50:	ldr	r1, [pc, #676]	; 16cfc <mount@plt+0x4b9c>
   16a54:	ldr	r3, [sp, #8]
   16a58:	ldr	r2, [pc, #672]	; 16d00 <mount@plt+0x4ba0>
   16a5c:	ldr	r0, [r1]
   16a60:	mov	r1, #1
   16a64:	bl	11f74 <__fprintf_chk@plt>
   16a68:	ldrb	r3, [r9, #48]	; 0x30
   16a6c:	cmp	r3, #0
   16a70:	bne	16c14 <mount@plt+0x4ab4>
   16a74:	ldr	r3, [pc, #640]	; 16cfc <mount@plt+0x4b9c>
   16a78:	ldr	r2, [pc, #580]	; 16cc4 <mount@plt+0x4b64>
   16a7c:	cmp	r6, r2
   16a80:	ldr	r0, [r3]
   16a84:	beq	16c98 <mount@plt+0x4b38>
   16a88:	bls	16b70 <mount@plt+0x4a10>
   16a8c:	ldr	r3, [pc, #564]	; 16cc8 <mount@plt+0x4b68>
   16a90:	cmp	r6, r3
   16a94:	beq	16bbc <mount@plt+0x4a5c>
   16a98:	ldr	r1, [pc, #576]	; 16ce0 <mount@plt+0x4b80>
   16a9c:	ldr	r2, [pc, #580]	; 16ce8 <mount@plt+0x4b88>
   16aa0:	cmp	r6, r1
   16aa4:	ldr	r3, [pc, #568]	; 16ce4 <mount@plt+0x4b84>
   16aa8:	moveq	r3, r2
   16aac:	ldr	r2, [pc, #592]	; 16d04 <mount@plt+0x4ba4>
   16ab0:	mov	r1, #1
   16ab4:	bl	11f74 <__fprintf_chk@plt>
   16ab8:	ldrb	r3, [r9, #48]	; 0x30
   16abc:	cmp	r3, #0
   16ac0:	beq	16b94 <mount@plt+0x4a34>
   16ac4:	ldr	r2, [sp, #16]
   16ac8:	ldr	r1, [pc, #552]	; 16cf8 <mount@plt+0x4b98>
   16acc:	ldr	r0, [r9, #44]	; 0x2c
   16ad0:	bl	1b8a0 <mount@plt+0x9740>
   16ad4:	add	r3, sp, #276	; 0x114
   16ad8:	ldr	r2, [sp, #12]
   16adc:	ldrb	r1, [r9, #48]	; 0x30
   16ae0:	ldr	r0, [r9, #44]	; 0x2c
   16ae4:	bl	14f10 <mount@plt+0x2db0>
   16ae8:	ldr	r3, [sp, #408]	; 0x198
   16aec:	cmp	r3, #0
   16af0:	beq	16b10 <mount@plt+0x49b0>
   16af4:	ldrh	r0, [sp, #32]
   16af8:	ldrb	r1, [r9, #48]	; 0x30
   16afc:	add	r3, sp, #516	; 0x204
   16b00:	str	r0, [sp]
   16b04:	ldr	r2, [pc, #460]	; 16cd8 <mount@plt+0x4b78>
   16b08:	ldr	r0, [sp, #28]
   16b0c:	bl	1624c <mount@plt+0x40ec>
   16b10:	ldr	r3, [sp, #412]	; 0x19c
   16b14:	cmp	r3, #0
   16b18:	beq	16b38 <mount@plt+0x49d8>
   16b1c:	ldrh	r2, [sp, #34]	; 0x22
   16b20:	ldr	r0, [sp, #28]
   16b24:	add	r3, sp, #564	; 0x234
   16b28:	str	r2, [sp]
   16b2c:	ldr	r2, [pc, #444]	; 16cf0 <mount@plt+0x4b90>
   16b30:	ldrb	r1, [r9, #48]	; 0x30
   16b34:	bl	1624c <mount@plt+0x40ec>
   16b38:	ldr	r3, [sp, #388]	; 0x184
   16b3c:	cmp	r3, #0
   16b40:	beq	16b4c <mount@plt+0x49ec>
   16b44:	ldr	r0, [sp, #12]
   16b48:	bl	11c14 <free@plt>
   16b4c:	ldr	r1, [sp, #484]	; 0x1e4
   16b50:	mov	r0, r9
   16b54:	bl	137d8 <mount@plt+0x1678>
   16b58:	mov	r0, r9
   16b5c:	bl	137b0 <mount@plt+0x1650>
   16b60:	mov	r0, fp
   16b64:	bl	11ddc <mnl_attr_next@plt>
   16b68:	mov	fp, r0
   16b6c:	b	166ac <mount@plt+0x454c>
   16b70:	ldr	r2, [pc, #368]	; 16ce8 <mount@plt+0x4b88>
   16b74:	cmp	r6, #2
   16b78:	ldr	r3, [pc, #356]	; 16ce4 <mount@plt+0x4b84>
   16b7c:	moveq	r3, r2
   16b80:	b	16aac <mount@plt+0x494c>
   16b84:	mov	r0, #1
   16b88:	b	1690c <mount@plt+0x47ac>
   16b8c:	mvn	r0, #21
   16b90:	b	1690c <mount@plt+0x47ac>
   16b94:	ldr	r0, [sp, #16]
   16b98:	bl	14e98 <mount@plt+0x2d38>
   16b9c:	b	16ad4 <mount@plt+0x4974>
   16ba0:	ldr	r1, [pc, #340]	; 16cfc <mount@plt+0x4b9c>
   16ba4:	mov	r3, r4
   16ba8:	ldr	r2, [pc, #344]	; 16d08 <mount@plt+0x4ba8>
   16bac:	ldr	r0, [r1]
   16bb0:	mov	r1, #1
   16bb4:	bl	11f74 <__fprintf_chk@plt>
   16bb8:	b	16a08 <mount@plt+0x48a8>
   16bbc:	ldr	r3, [pc, #264]	; 16ccc <mount@plt+0x4b6c>
   16bc0:	b	16aac <mount@plt+0x494c>
   16bc4:	ldr	r3, [pc, #304]	; 16cfc <mount@plt+0x4b9c>
   16bc8:	cmp	r5, #10
   16bcc:	ldr	r2, [pc, #312]	; 16d0c <mount@plt+0x4bac>
   16bd0:	ldr	r0, [r3]
   16bd4:	ldrls	r3, [pc, #224]	; 16cbc <mount@plt+0x4b5c>
   16bd8:	ldrhi	r3, [pc, #224]	; 16cc0 <mount@plt+0x4b60>
   16bdc:	addls	r5, r3, r5, lsl #2
   16be0:	mov	r1, #1
   16be4:	ldrls	r3, [r5, #24]
   16be8:	bl	11f74 <__fprintf_chk@plt>
   16bec:	ldrb	r3, [r9, #48]	; 0x30
   16bf0:	ldr	r0, [r9, #44]	; 0x2c
   16bf4:	cmp	r3, #0
   16bf8:	beq	16a50 <mount@plt+0x48f0>
   16bfc:	ldr	r2, [sp, #8]
   16c00:	ldr	r1, [pc, #204]	; 16cd4 <mount@plt+0x4b74>
   16c04:	bl	1b838 <mount@plt+0x96d8>
   16c08:	ldrb	r3, [r9, #48]	; 0x30
   16c0c:	cmp	r3, #0
   16c10:	beq	16a74 <mount@plt+0x4914>
   16c14:	ldr	r3, [pc, #168]	; 16cc4 <mount@plt+0x4b64>
   16c18:	cmp	r6, r3
   16c1c:	beq	16ca0 <mount@plt+0x4b40>
   16c20:	bls	16c74 <mount@plt+0x4b14>
   16c24:	ldr	r3, [pc, #156]	; 16cc8 <mount@plt+0x4b68>
   16c28:	cmp	r6, r3
   16c2c:	bne	16c5c <mount@plt+0x4afc>
   16c30:	ldr	r2, [pc, #148]	; 16ccc <mount@plt+0x4b6c>
   16c34:	ldr	r1, [pc, #148]	; 16cd0 <mount@plt+0x4b70>
   16c38:	ldr	r0, [r9, #44]	; 0x2c
   16c3c:	bl	1b838 <mount@plt+0x96d8>
   16c40:	b	16ab8 <mount@plt+0x4958>
   16c44:	ldr	r0, [sp, #12]
   16c48:	bl	11c14 <free@plt>
   16c4c:	mov	r0, fp
   16c50:	bl	11ddc <mnl_attr_next@plt>
   16c54:	mov	fp, r0
   16c58:	b	166ac <mount@plt+0x454c>
   16c5c:	ldr	r1, [pc, #124]	; 16ce0 <mount@plt+0x4b80>
   16c60:	ldr	r3, [pc, #124]	; 16ce4 <mount@plt+0x4b84>
   16c64:	cmp	r6, r1
   16c68:	ldr	r2, [pc, #120]	; 16ce8 <mount@plt+0x4b88>
   16c6c:	movne	r2, r3
   16c70:	b	16c34 <mount@plt+0x4ad4>
   16c74:	ldr	r3, [pc, #104]	; 16ce4 <mount@plt+0x4b84>
   16c78:	cmp	r6, #2
   16c7c:	ldr	r2, [pc, #100]	; 16ce8 <mount@plt+0x4b88>
   16c80:	movne	r2, r3
   16c84:	b	16c34 <mount@plt+0x4ad4>
   16c88:	ldr	r0, [r9, #44]	; 0x2c
   16c8c:	bl	1b68c <mount@plt+0x952c>
   16c90:	ldrb	r1, [r9, #48]	; 0x30
   16c94:	b	169c0 <mount@plt+0x4860>
   16c98:	ldr	r3, [pc, #76]	; 16cec <mount@plt+0x4b8c>
   16c9c:	b	16aac <mount@plt+0x494c>
   16ca0:	ldr	r2, [pc, #68]	; 16cec <mount@plt+0x4b8c>
   16ca4:	b	16c34 <mount@plt+0x4ad4>
   16ca8:	bl	11ca4 <__stack_chk_fail@plt>
   16cac:	andeq	r2, r3, r8, ror #29
   16cb0:	andeq	r2, r1, r4, lsl r9
   16cb4:	andeq	r1, r2, r0, asr #12
   16cb8:	andeq	r1, r2, r8, asr #14
   16cbc:	andeq	r0, r2, r0, ror #16
   16cc0:	andeq	r0, r2, r8, lsl r1
   16cc4:	andeq	r0, r0, r6, lsl #2
   16cc8:	andeq	r0, r0, r1, lsl r1
   16ccc:	andeq	r1, r2, r0, asr #14
   16cd0:	andeq	r1, r2, r0, asr r7
   16cd4:	andeq	r0, r2, r0, asr #11
   16cd8:	andeq	r1, r2, r4, asr r7
   16cdc:	andeq	r1, r2, r0, ror #14
   16ce0:	andeq	r0, r0, pc, lsr r1
   16ce4:	andeq	r1, r2, r4, lsr r7
   16ce8:	andeq	r1, r2, r8, lsr r7
   16cec:	andeq	r1, r2, r4, asr #14
   16cf0:	andeq	r1, r2, ip, ror #14
   16cf4:	andeq	r1, r2, r8, ror r7
   16cf8:	strdeq	r1, [r2], -ip
   16cfc:	andeq	r3, r3, r4, ror #4
   16d00:	andeq	r0, r2, r8, asr #11
   16d04:	muleq	r2, r0, r7
   16d08:	andeq	r1, r2, r0, ror r6
   16d0c:	andeq	r1, r2, r4, lsl #15
   16d10:	push	{r4, r5, lr}
   16d14:	sub	sp, sp, #52	; 0x34
   16d18:	ldr	r4, [pc, #116]	; 16d94 <mount@plt+0x4c34>
   16d1c:	mov	r5, r0
   16d20:	mov	r2, #40	; 0x28
   16d24:	ldr	r3, [r4]
   16d28:	mov	r1, #0
   16d2c:	add	r0, sp, #4
   16d30:	str	r3, [sp, #44]	; 0x2c
   16d34:	bl	11efc <memset@plt>
   16d38:	ldr	r3, [pc, #88]	; 16d98 <mount@plt+0x4c38>
   16d3c:	ldr	r2, [pc, #88]	; 16d9c <mount@plt+0x4c3c>
   16d40:	ldr	lr, [pc, #88]	; 16da0 <mount@plt+0x4c40>
   16d44:	ldr	ip, [pc, #88]	; 16da4 <mount@plt+0x4c44>
   16d48:	str	r3, [sp, #8]
   16d4c:	str	r3, [sp, #16]
   16d50:	str	r3, [sp, #24]
   16d54:	ldr	r3, [pc, #76]	; 16da8 <mount@plt+0x4c48>
   16d58:	str	r2, [sp, #12]
   16d5c:	add	r1, sp, #4
   16d60:	ldr	r2, [pc, #68]	; 16dac <mount@plt+0x4c4c>
   16d64:	mov	r0, r5
   16d68:	str	r3, [sp, #32]
   16d6c:	str	lr, [sp, #20]
   16d70:	str	ip, [sp, #28]
   16d74:	bl	13128 <mount@plt+0xfc8>
   16d78:	ldr	r2, [sp, #44]	; 0x2c
   16d7c:	ldr	r3, [r4]
   16d80:	cmp	r2, r3
   16d84:	bne	16d90 <mount@plt+0x4c30>
   16d88:	add	sp, sp, #52	; 0x34
   16d8c:	pop	{r4, r5, pc}
   16d90:	bl	11ca4 <__stack_chk_fail@plt>
   16d94:	andeq	r2, r3, r8, ror #29
   16d98:	andeq	r4, r1, r4, lsl #27
   16d9c:	ldrdeq	r0, [r2], -r4
   16da0:	ldrdeq	r0, [r2], -ip
   16da4:	strdeq	pc, [r1], -r8
   16da8:	ldrdeq	r4, [r1], -ip
   16dac:	muleq	r2, r8, r7
   16db0:	push	{r4, r5, r6, lr}
   16db4:	mov	r4, r1
   16db8:	mov	r5, r0
   16dbc:	bl	1ac60 <mount@plt+0x8b00>
   16dc0:	cmp	r0, #0
   16dc4:	bne	16ddc <mount@plt+0x4c7c>
   16dc8:	mov	r0, r5
   16dcc:	ldr	r3, [r4]
   16dd0:	ldr	r1, [r4, #4]
   16dd4:	pop	{r4, r5, r6, lr}
   16dd8:	bx	r3
   16ddc:	mvn	r0, #0
   16de0:	pop	{r4, r5, r6, pc}
   16de4:	push	{r4, r5, r6, lr}
   16de8:	mov	r5, r1
   16dec:	ldr	r1, [pc, #32]	; 16e14 <mount@plt+0x4cb4>
   16df0:	mov	r4, r0
   16df4:	mov	r2, r0
   16df8:	add	r1, pc, r1
   16dfc:	mov	r0, #1
   16e00:	bl	11f44 <__printf_chk@plt>
   16e04:	mov	r1, r5
   16e08:	mov	r0, r4
   16e0c:	pop	{r4, r5, r6, lr}
   16e10:	b	16db0 <mount@plt+0x4c50>
   16e14:	andeq	sl, r0, r8, asr fp
   16e18:	ldrh	r3, [r0, #6]
   16e1c:	cmp	r3, #2
   16e20:	beq	16e6c <mount@plt+0x4d0c>
   16e24:	cmp	r3, #10
   16e28:	bxne	lr
   16e2c:	ldr	r2, [r0, #8]
   16e30:	ldrh	r3, [r0]
   16e34:	cmp	r2, #0
   16e38:	bne	16e54 <mount@plt+0x4cf4>
   16e3c:	ldr	r2, [r0, #12]
   16e40:	cmp	r2, #0
   16e44:	bne	16e54 <mount@plt+0x4cf4>
   16e48:	ldr	r2, [r0, #16]
   16e4c:	cmp	r2, #0
   16e50:	beq	16e94 <mount@plt+0x4d34>
   16e54:	ldrb	r2, [r0, #8]
   16e58:	cmp	r2, #255	; 0xff
   16e5c:	beq	16e88 <mount@plt+0x4d28>
   16e60:	orr	r3, r3, #2
   16e64:	strh	r3, [r0]
   16e68:	bx	lr
   16e6c:	ldr	r2, [r0, #8]
   16e70:	ldrh	r3, [r0]
   16e74:	cmp	r2, #0
   16e78:	beq	16ea0 <mount@plt+0x4d40>
   16e7c:	and	r2, r2, #240	; 0xf0
   16e80:	cmp	r2, #224	; 0xe0
   16e84:	bne	16e60 <mount@plt+0x4d00>
   16e88:	orr	r3, r3, #10
   16e8c:	strh	r3, [r0]
   16e90:	bx	lr
   16e94:	ldr	r2, [r0, #20]
   16e98:	cmp	r2, #0
   16e9c:	bne	16e54 <mount@plt+0x4cf4>
   16ea0:	orr	r3, r3, #6
   16ea4:	strh	r3, [r0]
   16ea8:	bx	lr
   16eac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16eb0:	sub	sp, sp, #232	; 0xe8
   16eb4:	ldr	r5, [pc, #544]	; 170dc <mount@plt+0x4f7c>
   16eb8:	ldr	r3, [pc, #544]	; 170e0 <mount@plt+0x4f80>
   16ebc:	add	r5, pc, r5
   16ec0:	ldr	ip, [pc, #540]	; 170e4 <mount@plt+0x4f84>
   16ec4:	ldr	r8, [r5, r3]
   16ec8:	add	ip, pc, ip
   16ecc:	mov	r3, #128	; 0x80
   16ed0:	ldr	lr, [r8]
   16ed4:	add	r6, sp, #100	; 0x64
   16ed8:	strd	r0, [sp, #4]
   16edc:	mov	r7, r1
   16ee0:	mov	r9, r2
   16ee4:	str	ip, [sp]
   16ee8:	mov	r0, r6
   16eec:	mov	r1, r3
   16ef0:	mov	r2, #1
   16ef4:	str	lr, [sp, #228]	; 0xe4
   16ef8:	bl	1213c <__snprintf_chk@plt>
   16efc:	sub	r0, r0, #1
   16f00:	cmp	r0, #126	; 0x7e
   16f04:	bhi	1701c <mount@plt+0x4ebc>
   16f08:	ldr	r1, [pc, #472]	; 170e8 <mount@plt+0x4f88>
   16f0c:	mov	r0, r6
   16f10:	add	r1, pc, r1
   16f14:	bl	12088 <fopen64@plt>
   16f18:	subs	sl, r0, #0
   16f1c:	beq	1706c <mount@plt+0x4f0c>
   16f20:	add	r4, sp, #20
   16f24:	mov	r0, r4
   16f28:	mov	r2, sl
   16f2c:	mov	r1, #80	; 0x50
   16f30:	bl	11c2c <fgets@plt>
   16f34:	cmp	r0, #0
   16f38:	beq	170a8 <mount@plt+0x4f48>
   16f3c:	mov	r1, #10
   16f40:	mov	r0, r4
   16f44:	bl	11ea8 <strchr@plt>
   16f48:	cmp	r0, #0
   16f4c:	movne	r3, #0
   16f50:	strbne	r3, [r0]
   16f54:	mov	r0, sl
   16f58:	bl	11f98 <fclose@plt>
   16f5c:	mov	r2, #0
   16f60:	add	r1, sp, #16
   16f64:	mov	r0, r4
   16f68:	bl	11ba8 <strtol@plt>
   16f6c:	ldr	r2, [sp, #16]
   16f70:	sub	r3, r2, r4
   16f74:	ldrb	r2, [r2]
   16f78:	clz	r3, r3
   16f7c:	lsr	r3, r3, #5
   16f80:	cmp	r2, #0
   16f84:	movne	r3, #1
   16f88:	cmp	r3, #0
   16f8c:	mov	r7, r0
   16f90:	bne	17044 <mount@plt+0x4ee4>
   16f94:	sub	r3, r0, #-2147483647	; 0x80000001
   16f98:	cmn	r3, #3
   16f9c:	bhi	16fc0 <mount@plt+0x4e60>
   16fa0:	mov	r0, #0
   16fa4:	str	r7, [r9]
   16fa8:	ldr	r2, [sp, #228]	; 0xe4
   16fac:	ldr	r3, [r8]
   16fb0:	cmp	r2, r3
   16fb4:	bne	170d8 <mount@plt+0x4f78>
   16fb8:	add	sp, sp, #232	; 0xe8
   16fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16fc0:	bl	11ec0 <__errno_location@plt>
   16fc4:	ldr	r0, [r0]
   16fc8:	cmp	r0, #34	; 0x22
   16fcc:	bne	16fa0 <mount@plt+0x4e40>
   16fd0:	ldr	r3, [pc, #276]	; 170ec <mount@plt+0x4f8c>
   16fd4:	ldr	r4, [r5, r3]
   16fd8:	ldr	r5, [r4]
   16fdc:	bl	11e0c <strerror@plt>
   16fe0:	ldr	r2, [pc, #264]	; 170f0 <mount@plt+0x4f90>
   16fe4:	mov	r3, r6
   16fe8:	add	r2, pc, r2
   16fec:	mov	r1, #1
   16ff0:	str	r0, [sp]
   16ff4:	mov	r0, r5
   16ff8:	bl	11f74 <__fprintf_chk@plt>
   16ffc:	ldr	r2, [pc, #240]	; 170f4 <mount@plt+0x4f94>
   17000:	mov	r3, r6
   17004:	ldr	r0, [r4]
   17008:	add	r2, pc, r2
   1700c:	mov	r1, #1
   17010:	bl	11f74 <__fprintf_chk@plt>
   17014:	mvn	r0, #0
   17018:	b	16fa8 <mount@plt+0x4e48>
   1701c:	ldr	r3, [pc, #200]	; 170ec <mount@plt+0x4f8c>
   17020:	ldr	r0, [pc, #208]	; 170f8 <mount@plt+0x4f98>
   17024:	mov	r2, #38	; 0x26
   17028:	ldr	r3, [r5, r3]
   1702c:	mov	r1, #1
   17030:	add	r0, pc, r0
   17034:	ldr	r3, [r3]
   17038:	bl	11d40 <fwrite@plt>
   1703c:	mvn	r0, #0
   17040:	b	16fa8 <mount@plt+0x4e48>
   17044:	ldr	r1, [pc, #160]	; 170ec <mount@plt+0x4f8c>
   17048:	mov	r3, r4
   1704c:	ldr	r2, [pc, #168]	; 170fc <mount@plt+0x4f9c>
   17050:	ldr	r4, [r5, r1]
   17054:	add	r2, pc, r2
   17058:	mov	r1, #1
   1705c:	ldr	r0, [r4]
   17060:	str	r6, [sp]
   17064:	bl	11f74 <__fprintf_chk@plt>
   17068:	b	16ffc <mount@plt+0x4e9c>
   1706c:	ldr	r3, [pc, #120]	; 170ec <mount@plt+0x4f8c>
   17070:	ldr	r3, [r5, r3]
   17074:	ldr	r4, [r3]
   17078:	bl	11ec0 <__errno_location@plt>
   1707c:	ldr	r0, [r0]
   17080:	bl	11e0c <strerror@plt>
   17084:	ldr	r2, [pc, #116]	; 17100 <mount@plt+0x4fa0>
   17088:	mov	r3, r6
   1708c:	add	r2, pc, r2
   17090:	mov	r1, #1
   17094:	str	r0, [sp]
   17098:	mov	r0, r4
   1709c:	bl	11f74 <__fprintf_chk@plt>
   170a0:	mvn	r0, #0
   170a4:	b	16fa8 <mount@plt+0x4e48>
   170a8:	ldr	r1, [pc, #60]	; 170ec <mount@plt+0x4f8c>
   170ac:	ldr	r2, [pc, #80]	; 17104 <mount@plt+0x4fa4>
   170b0:	mov	r3, r7
   170b4:	ldr	r4, [r5, r1]
   170b8:	add	r2, pc, r2
   170bc:	mov	r1, #1
   170c0:	ldr	r0, [r4]
   170c4:	str	r6, [sp]
   170c8:	bl	11f74 <__fprintf_chk@plt>
   170cc:	mov	r0, sl
   170d0:	bl	11f98 <fclose@plt>
   170d4:	b	16ffc <mount@plt+0x4e9c>
   170d8:	bl	11ca4 <__stack_chk_fail@plt>
   170dc:	andeq	ip, r1, ip, lsr r1
   170e0:	andeq	r0, r0, ip, lsl #4
   170e4:	muleq	r0, r4, sl
   170e8:	ldrdeq	r9, [r0], -r8
   170ec:	andeq	r0, r0, r8, lsl r2
   170f0:	andeq	sl, r0, ip, lsl sl
   170f4:	andeq	sl, r0, ip, lsl #20
   170f8:	andeq	sl, r0, r4, asr #18
   170fc:	andeq	sl, r0, r8, lsl #19
   17100:	andeq	sl, r0, r0, lsl r9
   17104:	strdeq	sl, [r0], -r4
   17108:	ldr	r3, [pc, #168]	; 171b8 <mount@plt+0x5058>
   1710c:	ldr	r2, [pc, #168]	; 171bc <mount@plt+0x505c>
   17110:	add	r3, pc, r3
   17114:	push	{r4, r5, lr}
   17118:	sub	sp, sp, #12
   1711c:	ldr	r4, [r3, r2]
   17120:	mov	r5, r0
   17124:	mov	r0, r1
   17128:	ldr	r2, [r4]
   1712c:	mov	r1, sp
   17130:	str	r2, [sp, #4]
   17134:	bl	11f5c <strtod@plt>
   17138:	vldr	d6, [pc, #104]	; 171a8 <mount@plt+0x5048>
   1713c:	vldr	d7, [pc, #108]	; 171b0 <mount@plt+0x5050>
   17140:	vdiv.f64	d0, d0, d6
   17144:	vcmp.f64	d0, d7
   17148:	vstr	d0, [r5]
   1714c:	vmrs	APSR_nzcv, fpscr
   17150:	moveq	r0, #1
   17154:	beq	1716c <mount@plt+0x500c>
   17158:	ldr	r0, [sp]
   1715c:	ldrb	r3, [r0]
   17160:	cmp	r3, #0
   17164:	moveq	r0, r3
   17168:	bne	17184 <mount@plt+0x5024>
   1716c:	ldr	r2, [sp, #4]
   17170:	ldr	r3, [r4]
   17174:	cmp	r2, r3
   17178:	bne	171a0 <mount@plt+0x5040>
   1717c:	add	sp, sp, #12
   17180:	pop	{r4, r5, pc}
   17184:	ldr	r1, [pc, #52]	; 171c0 <mount@plt+0x5060>
   17188:	add	r1, pc, r1
   1718c:	bl	11b9c <strcmp@plt>
   17190:	adds	r0, r0, #0
   17194:	movne	r0, #1
   17198:	rsb	r0, r0, #0
   1719c:	b	1716c <mount@plt+0x500c>
   171a0:	bl	11ca4 <__stack_chk_fail@plt>
   171a4:	nop			; (mov r0, r0)
   171a8:	andeq	r0, r0, r0
   171ac:	subsmi	r0, r9, r0
   171b0:	andeq	r0, r0, r0
   171b4:	svcvc	0x00f00000	; IMB
   171b8:	andeq	fp, r1, r8, ror #29
   171bc:	andeq	r0, r0, ip, lsl #4
   171c0:	andeq	sl, r0, r0, lsr #17
   171c4:	sub	r3, r0, #65	; 0x41
   171c8:	cmp	r3, #5
   171cc:	bls	171f8 <mount@plt+0x5098>
   171d0:	sub	r3, r0, #97	; 0x61
   171d4:	cmp	r3, #5
   171d8:	bls	171f0 <mount@plt+0x5090>
   171dc:	sub	r0, r0, #48	; 0x30
   171e0:	uxtb	r3, r0
   171e4:	cmp	r3, #9
   171e8:	mvnhi	r0, #0
   171ec:	bx	lr
   171f0:	sub	r0, r0, #87	; 0x57
   171f4:	bx	lr
   171f8:	sub	r0, r0, #55	; 0x37
   171fc:	bx	lr
   17200:	ldr	r3, [pc, #164]	; 172ac <mount@plt+0x514c>
   17204:	ldr	ip, [pc, #164]	; 172b0 <mount@plt+0x5150>
   17208:	add	r3, pc, r3
   1720c:	push	{r4, r5, r6, r7, lr}
   17210:	sub	sp, sp, #12
   17214:	ldr	r5, [r3, ip]
   17218:	subs	r4, r1, #0
   1721c:	ldr	r3, [r5]
   17220:	str	r3, [sp, #4]
   17224:	beq	172a0 <mount@plt+0x5140>
   17228:	ldrb	r3, [r4]
   1722c:	cmp	r3, #0
   17230:	beq	172a0 <mount@plt+0x5140>
   17234:	mov	r6, r0
   17238:	mov	r1, sp
   1723c:	mov	r0, r4
   17240:	bl	11ba8 <strtol@plt>
   17244:	ldr	r3, [sp]
   17248:	cmp	r3, #0
   1724c:	cmpne	r3, r4
   17250:	mov	r7, r0
   17254:	beq	172a0 <mount@plt+0x5140>
   17258:	ldrb	r3, [r3]
   1725c:	cmp	r3, #0
   17260:	bne	172a0 <mount@plt+0x5140>
   17264:	sub	r3, r0, #-2147483647	; 0x80000001
   17268:	cmn	r3, #3
   1726c:	bhi	17290 <mount@plt+0x5130>
   17270:	mov	r0, #0
   17274:	str	r7, [r6]
   17278:	ldr	r2, [sp, #4]
   1727c:	ldr	r3, [r5]
   17280:	cmp	r2, r3
   17284:	bne	172a8 <mount@plt+0x5148>
   17288:	add	sp, sp, #12
   1728c:	pop	{r4, r5, r6, r7, pc}
   17290:	bl	11ec0 <__errno_location@plt>
   17294:	ldr	r3, [r0]
   17298:	cmp	r3, #34	; 0x22
   1729c:	bne	17270 <mount@plt+0x5110>
   172a0:	mvn	r0, #0
   172a4:	b	17278 <mount@plt+0x5118>
   172a8:	bl	11ca4 <__stack_chk_fail@plt>
   172ac:	strdeq	fp, [r1], -r0
   172b0:	andeq	r0, r0, ip, lsl #4
   172b4:	rev	r3, r0
   172b8:	rsb	r0, r3, #0
   172bc:	bics	r0, r0, r3
   172c0:	bne	172e4 <mount@plt+0x5184>
   172c4:	cmp	r3, #0
   172c8:	beq	172dc <mount@plt+0x517c>
   172cc:	lsls	r3, r3, #1
   172d0:	add	r0, r0, #1
   172d4:	bne	172cc <mount@plt+0x516c>
   172d8:	bx	lr
   172dc:	mov	r0, r3
   172e0:	bx	lr
   172e4:	mvn	r0, #0
   172e8:	bx	lr
   172ec:	ldr	r3, [pc, #160]	; 17394 <mount@plt+0x5234>
   172f0:	ldr	ip, [pc, #160]	; 17398 <mount@plt+0x5238>
   172f4:	add	r3, pc, r3
   172f8:	push	{r4, r5, r6, r7, lr}
   172fc:	sub	sp, sp, #12
   17300:	ldr	r5, [r3, ip]
   17304:	subs	r4, r1, #0
   17308:	ldr	r3, [r5]
   1730c:	str	r3, [sp, #4]
   17310:	beq	17388 <mount@plt+0x5228>
   17314:	ldrb	r3, [r4]
   17318:	cmp	r3, #0
   1731c:	beq	17388 <mount@plt+0x5228>
   17320:	mov	r6, r0
   17324:	mov	r1, sp
   17328:	mov	r0, r4
   1732c:	bl	11e90 <strtoul@plt>
   17330:	ldr	r3, [sp]
   17334:	cmp	r3, #0
   17338:	cmpne	r3, r4
   1733c:	mov	r7, r0
   17340:	beq	17388 <mount@plt+0x5228>
   17344:	ldrb	r3, [r3]
   17348:	cmp	r3, #0
   1734c:	bne	17388 <mount@plt+0x5228>
   17350:	cmn	r0, #1
   17354:	beq	17378 <mount@plt+0x5218>
   17358:	mov	r0, #0
   1735c:	str	r7, [r6]
   17360:	ldr	r2, [sp, #4]
   17364:	ldr	r3, [r5]
   17368:	cmp	r2, r3
   1736c:	bne	17390 <mount@plt+0x5230>
   17370:	add	sp, sp, #12
   17374:	pop	{r4, r5, r6, r7, pc}
   17378:	bl	11ec0 <__errno_location@plt>
   1737c:	ldr	r3, [r0]
   17380:	cmp	r3, #34	; 0x22
   17384:	bne	17358 <mount@plt+0x51f8>
   17388:	mvn	r0, #0
   1738c:	b	17360 <mount@plt+0x5200>
   17390:	bl	11ca4 <__stack_chk_fail@plt>
   17394:	andeq	fp, r1, r4, lsl #26
   17398:	andeq	r0, r0, ip, lsl #4
   1739c:	push	{r4, r5, r6, r7, r8, r9, lr}
   173a0:	vpush	{d8}
   173a4:	ldr	r3, [pc, #496]	; 1759c <mount@plt+0x543c>
   173a8:	ldr	ip, [pc, #496]	; 175a0 <mount@plt+0x5440>
   173ac:	add	r3, pc, r3
   173b0:	sub	sp, sp, #12
   173b4:	ldr	r8, [r3, ip]
   173b8:	mov	r6, r1
   173bc:	mov	r7, r0
   173c0:	ldr	r3, [r8]
   173c4:	mov	r0, r1
   173c8:	mov	r1, #46	; 0x2e
   173cc:	mov	r9, r2
   173d0:	str	r3, [sp, #4]
   173d4:	bl	11ea8 <strchr@plt>
   173d8:	mov	r1, sp
   173dc:	subs	r2, r0, #0
   173e0:	mov	r0, r6
   173e4:	beq	174fc <mount@plt+0x539c>
   173e8:	bl	11f5c <strtod@plt>
   173ec:	vcmpe.f64	d0, #0.0
   173f0:	vmov.f64	d8, d0
   173f4:	vmrs	APSR_nzcv, fpscr
   173f8:	bmi	174dc <mount@plt+0x537c>
   173fc:	ldr	r5, [sp]
   17400:	cmp	r5, r6
   17404:	cmpne	r5, #0
   17408:	beq	174dc <mount@plt+0x537c>
   1740c:	vldr	d7, [pc, #372]	; 17588 <mount@plt+0x5428>
   17410:	vcmp.f64	d0, d7
   17414:	vmrs	APSR_nzcv, fpscr
   17418:	bne	17534 <mount@plt+0x53d4>
   1741c:	bl	11ec0 <__errno_location@plt>
   17420:	ldr	r3, [r0]
   17424:	cmp	r3, #34	; 0x22
   17428:	beq	174dc <mount@plt+0x537c>
   1742c:	mov	r3, #1
   17430:	str	r3, [r9]
   17434:	ldrb	r3, [r5]
   17438:	cmp	r3, #0
   1743c:	vldreq	s15, [pc, #340]	; 17598 <mount@plt+0x5438>
   17440:	beq	17564 <mount@plt+0x5404>
   17444:	ldr	r1, [pc, #344]	; 175a4 <mount@plt+0x5444>
   17448:	mov	r3, #0
   1744c:	str	r3, [r9]
   17450:	add	r1, pc, r1
   17454:	mov	r0, r5
   17458:	bl	11cf8 <strcasecmp@plt>
   1745c:	cmp	r0, #0
   17460:	beq	17578 <mount@plt+0x5418>
   17464:	ldr	r1, [pc, #316]	; 175a8 <mount@plt+0x5448>
   17468:	mov	r0, r5
   1746c:	add	r1, pc, r1
   17470:	bl	11cf8 <strcasecmp@plt>
   17474:	cmp	r0, #0
   17478:	beq	17578 <mount@plt+0x5418>
   1747c:	ldr	r1, [pc, #296]	; 175ac <mount@plt+0x544c>
   17480:	mov	r0, r5
   17484:	add	r1, pc, r1
   17488:	bl	11cf8 <strcasecmp@plt>
   1748c:	cmp	r0, #0
   17490:	beq	17578 <mount@plt+0x5418>
   17494:	ldr	r1, [pc, #276]	; 175b0 <mount@plt+0x5450>
   17498:	mov	r0, r5
   1749c:	add	r1, pc, r1
   174a0:	bl	11cf8 <strcasecmp@plt>
   174a4:	cmp	r0, #0
   174a8:	beq	17548 <mount@plt+0x53e8>
   174ac:	ldr	r1, [pc, #256]	; 175b4 <mount@plt+0x5454>
   174b0:	mov	r0, r5
   174b4:	add	r1, pc, r1
   174b8:	bl	11cf8 <strcasecmp@plt>
   174bc:	cmp	r0, #0
   174c0:	beq	17548 <mount@plt+0x53e8>
   174c4:	ldr	r1, [pc, #236]	; 175b8 <mount@plt+0x5458>
   174c8:	mov	r0, r5
   174cc:	add	r1, pc, r1
   174d0:	bl	11cf8 <strcasecmp@plt>
   174d4:	cmp	r0, #0
   174d8:	beq	17548 <mount@plt+0x53e8>
   174dc:	mvn	r0, #0
   174e0:	ldr	r2, [sp, #4]
   174e4:	ldr	r3, [r8]
   174e8:	cmp	r2, r3
   174ec:	bne	17584 <mount@plt+0x5424>
   174f0:	add	sp, sp, #12
   174f4:	vpop	{d8}
   174f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   174fc:	bl	11e90 <strtoul@plt>
   17500:	ldr	r5, [sp]
   17504:	cmp	r5, #0
   17508:	cmpne	r5, r6
   1750c:	mov	r4, r0
   17510:	beq	174dc <mount@plt+0x537c>
   17514:	cmn	r0, #1
   17518:	bne	1752c <mount@plt+0x53cc>
   1751c:	bl	11ec0 <__errno_location@plt>
   17520:	ldr	r3, [r0]
   17524:	cmp	r3, #34	; 0x22
   17528:	beq	174dc <mount@plt+0x537c>
   1752c:	vmov	s15, r4
   17530:	vcvt.f64.u32	d8, s15
   17534:	mov	r3, #1
   17538:	str	r3, [r9]
   1753c:	ldrb	r3, [r5]
   17540:	cmp	r3, #0
   17544:	bne	17444 <mount@plt+0x52e4>
   17548:	vcvt.u32.f64	s15, d8
   1754c:	vcvt.f64.u32	d6, s15
   17550:	vcmpe.f64	d6, d8
   17554:	vmrs	APSR_nzcv, fpscr
   17558:	vstrpl	s15, [r7]
   1755c:	movpl	r0, #0
   17560:	bpl	174e0 <mount@plt+0x5380>
   17564:	vmov	r3, s15
   17568:	mov	r0, #0
   1756c:	add	r3, r3, #1
   17570:	str	r3, [r7]
   17574:	b	174e0 <mount@plt+0x5380>
   17578:	vldr	d7, [pc, #16]	; 17590 <mount@plt+0x5430>
   1757c:	vmul.f64	d8, d8, d7
   17580:	b	17548 <mount@plt+0x53e8>
   17584:	bl	11ca4 <__stack_chk_fail@plt>
   17588:	andeq	r0, r0, r0
   1758c:	svcvc	0x00f00000	; IMB
   17590:	andeq	r0, r0, r0
   17594:	addmi	r4, pc, r0
   17598:			; <UNDEFINED> instruction: 0xffffffff
   1759c:	andeq	fp, r1, ip, asr #24
   175a0:	andeq	r0, r0, ip, lsl #4
   175a4:	andeq	sl, r0, r0, asr #11
   175a8:	andeq	sl, r0, r0, asr #11
   175ac:	andeq	sl, r0, ip, lsr #11
   175b0:	andeq	sl, r0, r0, ror r9
   175b4:	andeq	sl, r0, r4, lsl #11
   175b8:	andeq	sl, r0, r4, ror r5
   175bc:	ldr	r3, [pc, #176]	; 17674 <mount@plt+0x5514>
   175c0:	ldr	ip, [pc, #176]	; 17678 <mount@plt+0x5518>
   175c4:	add	r3, pc, r3
   175c8:	push	{r4, r5, r6, r8, r9, lr}
   175cc:	sub	sp, sp, #8
   175d0:	ldr	r5, [r3, ip]
   175d4:	subs	r4, r1, #0
   175d8:	ldr	r3, [r5]
   175dc:	str	r3, [sp, #4]
   175e0:	beq	17668 <mount@plt+0x5508>
   175e4:	ldrb	r3, [r4]
   175e8:	cmp	r3, #0
   175ec:	beq	17668 <mount@plt+0x5508>
   175f0:	mov	r6, r0
   175f4:	mov	r1, sp
   175f8:	mov	r0, r4
   175fc:	bl	11f2c <strtoull@plt>
   17600:	ldr	r3, [sp]
   17604:	cmp	r3, #0
   17608:	cmpne	r3, r4
   1760c:	mov	r8, r0
   17610:	mov	r9, r1
   17614:	beq	17668 <mount@plt+0x5508>
   17618:	ldrb	r3, [r3]
   1761c:	cmp	r3, #0
   17620:	bne	17668 <mount@plt+0x5508>
   17624:	mvn	r3, #0
   17628:	mvn	r2, #0
   1762c:	cmp	r1, r3
   17630:	cmpeq	r0, r2
   17634:	beq	17658 <mount@plt+0x54f8>
   17638:	mov	r0, #0
   1763c:	strd	r8, [r6]
   17640:	ldr	r2, [sp, #4]
   17644:	ldr	r3, [r5]
   17648:	cmp	r2, r3
   1764c:	bne	17670 <mount@plt+0x5510>
   17650:	add	sp, sp, #8
   17654:	pop	{r4, r5, r6, r8, r9, pc}
   17658:	bl	11ec0 <__errno_location@plt>
   1765c:	ldr	r3, [r0]
   17660:	cmp	r3, #34	; 0x22
   17664:	bne	17638 <mount@plt+0x54d8>
   17668:	mvn	r0, #0
   1766c:	b	17640 <mount@plt+0x54e0>
   17670:	bl	11ca4 <__stack_chk_fail@plt>
   17674:	andeq	fp, r1, r4, lsr sl
   17678:	andeq	r0, r0, ip, lsl #4
   1767c:	b	172ec <mount@plt+0x518c>
   17680:	ldr	r3, [pc, #152]	; 17720 <mount@plt+0x55c0>
   17684:	ldr	ip, [pc, #152]	; 17724 <mount@plt+0x55c4>
   17688:	add	r3, pc, r3
   1768c:	push	{r4, r5, r6, lr}
   17690:	sub	sp, sp, #8
   17694:	ldr	r6, [r3, ip]
   17698:	subs	r5, r1, #0
   1769c:	ldr	r3, [r6]
   176a0:	str	r3, [sp, #4]
   176a4:	beq	17714 <mount@plt+0x55b4>
   176a8:	ldrb	r3, [r5]
   176ac:	cmp	r3, #0
   176b0:	beq	17714 <mount@plt+0x55b4>
   176b4:	mov	r4, r0
   176b8:	mov	r1, sp
   176bc:	mov	r0, r5
   176c0:	bl	11e90 <strtoul@plt>
   176c4:	ldr	r2, [sp]
   176c8:	cmp	r0, #65536	; 0x10000
   176cc:	movcc	r3, #0
   176d0:	movcs	r3, #1
   176d4:	cmp	r2, #0
   176d8:	cmpne	r2, r5
   176dc:	beq	17714 <mount@plt+0x55b4>
   176e0:	ldrb	r2, [r2]
   176e4:	cmp	r2, #0
   176e8:	movne	r3, #1
   176ec:	cmp	r3, #0
   176f0:	bne	17714 <mount@plt+0x55b4>
   176f4:	strh	r0, [r4]
   176f8:	ldr	r1, [sp, #4]
   176fc:	ldr	r2, [r6]
   17700:	mov	r0, r3
   17704:	cmp	r1, r2
   17708:	bne	1771c <mount@plt+0x55bc>
   1770c:	add	sp, sp, #8
   17710:	pop	{r4, r5, r6, pc}
   17714:	mvn	r3, #0
   17718:	b	176f8 <mount@plt+0x5598>
   1771c:	bl	11ca4 <__stack_chk_fail@plt>
   17720:	andeq	fp, r1, r0, ror r9
   17724:	andeq	r0, r0, ip, lsl #4
   17728:	ldr	r3, [pc, #152]	; 177c8 <mount@plt+0x5668>
   1772c:	ldr	ip, [pc, #152]	; 177cc <mount@plt+0x566c>
   17730:	add	r3, pc, r3
   17734:	push	{r4, r5, r6, lr}
   17738:	sub	sp, sp, #8
   1773c:	ldr	r6, [r3, ip]
   17740:	subs	r5, r1, #0
   17744:	ldr	r3, [r6]
   17748:	str	r3, [sp, #4]
   1774c:	beq	177bc <mount@plt+0x565c>
   17750:	ldrb	r3, [r5]
   17754:	cmp	r3, #0
   17758:	beq	177bc <mount@plt+0x565c>
   1775c:	mov	r4, r0
   17760:	mov	r1, sp
   17764:	mov	r0, r5
   17768:	bl	11e90 <strtoul@plt>
   1776c:	ldr	r2, [sp]
   17770:	cmp	r0, #255	; 0xff
   17774:	movls	r3, #0
   17778:	movhi	r3, #1
   1777c:	cmp	r2, #0
   17780:	cmpne	r2, r5
   17784:	beq	177bc <mount@plt+0x565c>
   17788:	ldrb	r2, [r2]
   1778c:	cmp	r2, #0
   17790:	movne	r3, #1
   17794:	cmp	r3, #0
   17798:	bne	177bc <mount@plt+0x565c>
   1779c:	strb	r0, [r4]
   177a0:	ldr	r1, [sp, #4]
   177a4:	ldr	r2, [r6]
   177a8:	mov	r0, r3
   177ac:	cmp	r1, r2
   177b0:	bne	177c4 <mount@plt+0x5664>
   177b4:	add	sp, sp, #8
   177b8:	pop	{r4, r5, r6, pc}
   177bc:	mvn	r3, #0
   177c0:	b	177a0 <mount@plt+0x5640>
   177c4:	bl	11ca4 <__stack_chk_fail@plt>
   177c8:	andeq	fp, r1, r8, asr #17
   177cc:	andeq	r0, r0, ip, lsl #4
   177d0:	ldr	r3, [pc, #160]	; 17878 <mount@plt+0x5718>
   177d4:	ldr	ip, [pc, #160]	; 1787c <mount@plt+0x571c>
   177d8:	add	r3, pc, r3
   177dc:	push	{r4, r5, r6, r7, lr}
   177e0:	sub	sp, sp, #12
   177e4:	ldr	r6, [r3, ip]
   177e8:	mov	r4, r1
   177ec:	mov	r5, r0
   177f0:	ldr	r3, [r6]
   177f4:	mov	r7, r2
   177f8:	str	r3, [sp, #4]
   177fc:	bl	11ec0 <__errno_location@plt>
   17800:	mov	r3, #0
   17804:	cmp	r4, #0
   17808:	str	r3, [r0]
   1780c:	beq	1786c <mount@plt+0x570c>
   17810:	ldrb	r3, [r4]
   17814:	cmp	r3, #0
   17818:	beq	1786c <mount@plt+0x570c>
   1781c:	mov	r2, r7
   17820:	mov	r1, sp
   17824:	mov	r0, r4
   17828:	bl	11d64 <strtoll@plt>
   1782c:	ldr	r3, [sp]
   17830:	cmp	r3, r4
   17834:	cmpne	r3, #0
   17838:	beq	1786c <mount@plt+0x570c>
   1783c:	ldrb	r3, [r3]
   17840:	cmp	r3, #0
   17844:	bne	1786c <mount@plt+0x570c>
   17848:	asr	r1, r0, #31
   1784c:	strd	r0, [r5]
   17850:	ldr	r1, [sp, #4]
   17854:	ldr	r2, [r6]
   17858:	mov	r0, r3
   1785c:	cmp	r1, r2
   17860:	bne	17874 <mount@plt+0x5714>
   17864:	add	sp, sp, #12
   17868:	pop	{r4, r5, r6, r7, pc}
   1786c:	mvn	r3, #0
   17870:	b	17850 <mount@plt+0x56f0>
   17874:	bl	11ca4 <__stack_chk_fail@plt>
   17878:	andeq	fp, r1, r0, lsr #16
   1787c:	andeq	r0, r0, ip, lsl #4
   17880:	ldr	r3, [pc, #188]	; 17944 <mount@plt+0x57e4>
   17884:	ldr	ip, [pc, #188]	; 17948 <mount@plt+0x57e8>
   17888:	add	r3, pc, r3
   1788c:	push	{r4, r5, r6, r7, r8, lr}
   17890:	sub	sp, sp, #8
   17894:	ldr	r5, [r3, ip]
   17898:	mov	r4, r1
   1789c:	mov	r6, r0
   178a0:	ldr	r3, [r5]
   178a4:	mov	r8, r2
   178a8:	str	r3, [sp, #4]
   178ac:	bl	11ec0 <__errno_location@plt>
   178b0:	mov	r3, #0
   178b4:	cmp	r4, #0
   178b8:	str	r3, [r0]
   178bc:	beq	17938 <mount@plt+0x57d8>
   178c0:	ldrb	r3, [r4]
   178c4:	cmp	r3, #0
   178c8:	beq	17938 <mount@plt+0x57d8>
   178cc:	mov	r2, r8
   178d0:	mov	r7, r0
   178d4:	mov	r1, sp
   178d8:	mov	r0, r4
   178dc:	bl	11ba8 <strtol@plt>
   178e0:	ldr	r3, [sp]
   178e4:	cmp	r3, #0
   178e8:	cmpne	r3, r4
   178ec:	mov	r2, r0
   178f0:	beq	17938 <mount@plt+0x57d8>
   178f4:	ldrb	r3, [r3]
   178f8:	cmp	r3, #0
   178fc:	bne	17938 <mount@plt+0x57d8>
   17900:	sub	r3, r0, #-2147483647	; 0x80000001
   17904:	cmn	r3, #3
   17908:	bhi	1792c <mount@plt+0x57cc>
   1790c:	mov	r0, #0
   17910:	str	r2, [r6]
   17914:	ldr	r2, [sp, #4]
   17918:	ldr	r3, [r5]
   1791c:	cmp	r2, r3
   17920:	bne	17940 <mount@plt+0x57e0>
   17924:	add	sp, sp, #8
   17928:	pop	{r4, r5, r6, r7, r8, pc}
   1792c:	ldr	r3, [r7]
   17930:	cmp	r3, #34	; 0x22
   17934:	bne	1790c <mount@plt+0x57ac>
   17938:	mvn	r0, #0
   1793c:	b	17914 <mount@plt+0x57b4>
   17940:	bl	11ca4 <__stack_chk_fail@plt>
   17944:	andeq	fp, r1, r0, ror r7
   17948:	andeq	r0, r0, ip, lsl #4
   1794c:	ldr	r3, [pc, #88]	; 179ac <mount@plt+0x584c>
   17950:	ldr	ip, [pc, #88]	; 179b0 <mount@plt+0x5850>
   17954:	add	r3, pc, r3
   17958:	push	{r4, r5, lr}
   1795c:	sub	sp, sp, #20
   17960:	ldr	r4, [r3, ip]
   17964:	mov	r5, r0
   17968:	mov	r0, sp
   1796c:	ldr	r3, [r4]
   17970:	str	r3, [sp, #12]
   17974:	bl	175bc <mount@plt+0x545c>
   17978:	cmp	r0, #0
   1797c:	ldrdeq	r2, [sp]
   17980:	reveq	r2, r2
   17984:	reveq	r3, r3
   17988:	streq	r2, [r5, #4]
   1798c:	streq	r3, [r5]
   17990:	ldr	r2, [sp, #12]
   17994:	ldr	r3, [r4]
   17998:	cmp	r2, r3
   1799c:	bne	179a8 <mount@plt+0x5848>
   179a0:	add	sp, sp, #20
   179a4:	pop	{r4, r5, pc}
   179a8:	bl	11ca4 <__stack_chk_fail@plt>
   179ac:	andeq	fp, r1, r4, lsr #13
   179b0:	andeq	r0, r0, ip, lsl #4
   179b4:	ldr	r3, [pc, #80]	; 17a0c <mount@plt+0x58ac>
   179b8:	ldr	ip, [pc, #80]	; 17a10 <mount@plt+0x58b0>
   179bc:	add	r3, pc, r3
   179c0:	push	{r4, r5, lr}
   179c4:	sub	sp, sp, #12
   179c8:	ldr	r4, [r3, ip]
   179cc:	mov	r5, r0
   179d0:	mov	r0, sp
   179d4:	ldr	r3, [r4]
   179d8:	str	r3, [sp, #4]
   179dc:	bl	1767c <mount@plt+0x551c>
   179e0:	ldr	r2, [sp, #4]
   179e4:	cmp	r0, #0
   179e8:	ldreq	r3, [sp]
   179ec:	reveq	r3, r3
   179f0:	streq	r3, [r5]
   179f4:	ldr	r3, [r4]
   179f8:	cmp	r2, r3
   179fc:	bne	17a08 <mount@plt+0x58a8>
   17a00:	add	sp, sp, #12
   17a04:	pop	{r4, r5, pc}
   17a08:	bl	11ca4 <__stack_chk_fail@plt>
   17a0c:	andeq	fp, r1, ip, lsr r6
   17a10:	andeq	r0, r0, ip, lsl #4
   17a14:	ldr	r3, [pc, #80]	; 17a6c <mount@plt+0x590c>
   17a18:	ldr	ip, [pc, #80]	; 17a70 <mount@plt+0x5910>
   17a1c:	add	r3, pc, r3
   17a20:	push	{r4, r5, lr}
   17a24:	sub	sp, sp, #12
   17a28:	ldr	r4, [r3, ip]
   17a2c:	mov	r5, r0
   17a30:	add	r0, sp, #2
   17a34:	ldr	r3, [r4]
   17a38:	str	r3, [sp, #4]
   17a3c:	bl	17680 <mount@plt+0x5520>
   17a40:	cmp	r0, #0
   17a44:	ldrheq	r3, [sp, #2]
   17a48:	rev16eq	r3, r3
   17a4c:	strheq	r3, [r5]
   17a50:	ldr	r2, [sp, #4]
   17a54:	ldr	r3, [r4]
   17a58:	cmp	r2, r3
   17a5c:	bne	17a68 <mount@plt+0x5908>
   17a60:	add	sp, sp, #12
   17a64:	pop	{r4, r5, pc}
   17a68:	bl	11ca4 <__stack_chk_fail@plt>
   17a6c:	ldrdeq	fp, [r1], -ip
   17a70:	andeq	r0, r0, ip, lsl #4
   17a74:	ldr	r3, [pc, #188]	; 17b38 <mount@plt+0x59d8>
   17a78:	ldr	r2, [pc, #188]	; 17b3c <mount@plt+0x59dc>
   17a7c:	add	r3, pc, r3
   17a80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17a84:	sub	sp, sp, #24
   17a88:	ldr	r7, [r3, r2]
   17a8c:	ldr	r5, [pc, #172]	; 17b40 <mount@plt+0x59e0>
   17a90:	mov	r8, r0
   17a94:	ldr	r3, [r7]
   17a98:	mov	sl, r1
   17a9c:	add	r9, sp, #8
   17aa0:	mov	r4, #0
   17aa4:	add	r6, sp, #4
   17aa8:	str	r3, [sp, #20]
   17aac:	mov	r2, #16
   17ab0:	mov	r1, r6
   17ab4:	mov	r0, sl
   17ab8:	bl	11e90 <strtoul@plt>
   17abc:	cmp	r0, r5
   17ac0:	bhi	17b08 <mount@plt+0x59a8>
   17ac4:	ldr	r2, [sp, #4]
   17ac8:	cmp	r2, sl
   17acc:	beq	17b08 <mount@plt+0x59a8>
   17ad0:	ldrb	r1, [r2]
   17ad4:	rev16	r0, r0
   17ad8:	strh	r0, [r9], #2
   17adc:	cmp	r1, #0
   17ae0:	beq	17b24 <mount@plt+0x59c4>
   17ae4:	sub	r3, r4, #3
   17ae8:	clz	r3, r3
   17aec:	lsr	r3, r3, #5
   17af0:	cmp	r1, #58	; 0x3a
   17af4:	orrne	r3, r3, #1
   17af8:	cmp	r3, #0
   17afc:	addeq	sl, r2, #1
   17b00:	addeq	r4, r4, #1
   17b04:	beq	17aac <mount@plt+0x594c>
   17b08:	mvn	r0, #0
   17b0c:	ldr	r2, [sp, #20]
   17b10:	ldr	r3, [r7]
   17b14:	cmp	r2, r3
   17b18:	bne	17b34 <mount@plt+0x59d4>
   17b1c:	add	sp, sp, #24
   17b20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b24:	ldrd	r2, [sp, #8]
   17b28:	mov	r0, #1
   17b2c:	strd	r2, [r8]
   17b30:	b	17b0c <mount@plt+0x59ac>
   17b34:	bl	11ca4 <__stack_chk_fail@plt>
   17b38:	andeq	fp, r1, ip, ror r5
   17b3c:	andeq	r0, r0, ip, lsl #4
   17b40:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   17b44:	sub	r0, r0, #2
   17b48:	cmp	r0, #26
   17b4c:	bhi	17b60 <mount@plt+0x5a00>
   17b50:	ldr	r3, [pc, #16]	; 17b68 <mount@plt+0x5a08>
   17b54:	add	r3, pc, r3
   17b58:	ldr	r0, [r3, r0, lsl #2]
   17b5c:	bx	lr
   17b60:	mov	r0, #0
   17b64:	bx	lr
   17b68:	andeq	r9, r0, r8, lsl #27
   17b6c:	ldr	r3, [pc, #744]	; 17e5c <mount@plt+0x5cfc>
   17b70:	ldr	ip, [pc, #744]	; 17e60 <mount@plt+0x5d00>
   17b74:	add	r3, pc, r3
   17b78:	push	{r4, r5, r6, r7, r8, lr}
   17b7c:	sub	sp, sp, #32
   17b80:	ldr	r7, [r3, ip]
   17b84:	mov	r6, r1
   17b88:	mov	r5, r2
   17b8c:	ldr	ip, [r7]
   17b90:	mov	r2, #264	; 0x108
   17b94:	mov	r1, #0
   17b98:	str	ip, [sp, #28]
   17b9c:	mov	r4, r0
   17ba0:	bl	11efc <memset@plt>
   17ba4:	ldr	r1, [pc, #696]	; 17e64 <mount@plt+0x5d04>
   17ba8:	mov	r0, r6
   17bac:	add	r1, pc, r1
   17bb0:	bl	11b9c <strcmp@plt>
   17bb4:	cmp	r0, #0
   17bb8:	bne	17c20 <mount@plt+0x5ac0>
   17bbc:	bic	r3, r5, #16
   17bc0:	cmp	r3, #12
   17bc4:	beq	17ccc <mount@plt+0x5b6c>
   17bc8:	strh	r5, [r4, #6]
   17bcc:	uxth	r0, r5
   17bd0:	bl	17b44 <mount@plt+0x59e4>
   17bd4:	ldrh	r3, [r4]
   17bd8:	orr	r3, r3, #1
   17bdc:	strh	r3, [r4]
   17be0:	add	r2, r0, #7
   17be4:	cmp	r0, #0
   17be8:	movlt	r0, r2
   17bec:	mvn	r2, #1
   17bf0:	asr	r0, r0, #3
   17bf4:	strh	r0, [r4, #2]
   17bf8:	strh	r2, [r4, #4]
   17bfc:	mov	r0, r4
   17c00:	bl	16e18 <mount@plt+0x4cb8>
   17c04:	mov	r0, #0
   17c08:	ldr	r2, [sp, #28]
   17c0c:	ldr	r3, [r7]
   17c10:	cmp	r2, r3
   17c14:	bne	17e50 <mount@plt+0x5cf0>
   17c18:	add	sp, sp, #32
   17c1c:	pop	{r4, r5, r6, r7, r8, pc}
   17c20:	ldr	r1, [pc, #576]	; 17e68 <mount@plt+0x5d08>
   17c24:	mov	r0, r6
   17c28:	add	r1, pc, r1
   17c2c:	bl	11b9c <strcmp@plt>
   17c30:	cmp	r0, #0
   17c34:	beq	17ca8 <mount@plt+0x5b48>
   17c38:	ldr	r1, [pc, #556]	; 17e6c <mount@plt+0x5d0c>
   17c3c:	mov	r0, r6
   17c40:	add	r1, pc, r1
   17c44:	bl	11b9c <strcmp@plt>
   17c48:	cmp	r0, #0
   17c4c:	beq	17ca8 <mount@plt+0x5b48>
   17c50:	cmp	r5, #17
   17c54:	beq	17d5c <mount@plt+0x5bfc>
   17c58:	mov	r1, #58	; 0x3a
   17c5c:	mov	r0, r6
   17c60:	bl	11ea8 <strchr@plt>
   17c64:	cmp	r0, #0
   17c68:	beq	17cd4 <mount@plt+0x5b74>
   17c6c:	mov	r0, #10
   17c70:	cmp	r5, #0
   17c74:	cmpne	r5, #10
   17c78:	strh	r0, [r4, #6]
   17c7c:	bne	17ccc <mount@plt+0x5b6c>
   17c80:	mov	r1, r6
   17c84:	add	r2, r4, #8
   17c88:	bl	11c38 <inet_pton@plt>
   17c8c:	cmp	r0, #0
   17c90:	ble	17ccc <mount@plt+0x5b6c>
   17c94:	mov	r2, #16
   17c98:	mvn	r3, #0
   17c9c:	strh	r2, [r4, #2]
   17ca0:	strh	r3, [r4, #4]
   17ca4:	b	17bfc <mount@plt+0x5a9c>
   17ca8:	bic	r3, r5, #16
   17cac:	cmp	r3, #12
   17cb0:	beq	17ccc <mount@plt+0x5b6c>
   17cb4:	mov	r2, #0
   17cb8:	mvn	r3, #1
   17cbc:	strh	r5, [r4, #6]
   17cc0:	strh	r2, [r4, #2]
   17cc4:	strh	r3, [r4, #4]
   17cc8:	b	17bfc <mount@plt+0x5a9c>
   17ccc:	mvn	r0, #0
   17cd0:	b	17c08 <mount@plt+0x5aa8>
   17cd4:	cmp	r5, #12
   17cd8:	beq	17da0 <mount@plt+0x5c40>
   17cdc:	cmp	r5, #28
   17ce0:	beq	17dd8 <mount@plt+0x5c78>
   17ce4:	bics	r3, r5, #2
   17ce8:	mov	r3, #2
   17cec:	strh	r3, [r4, #6]
   17cf0:	bne	17ccc <mount@plt+0x5b6c>
   17cf4:	add	r5, r4, #7
   17cf8:	mov	r8, sp
   17cfc:	mov	r2, #0
   17d00:	mov	r1, r8
   17d04:	mov	r0, r6
   17d08:	bl	11e90 <strtoul@plt>
   17d0c:	cmp	r0, #255	; 0xff
   17d10:	bhi	17ccc <mount@plt+0x5b6c>
   17d14:	ldr	r2, [sp]
   17d18:	cmp	r2, r6
   17d1c:	beq	17ccc <mount@plt+0x5b6c>
   17d20:	strb	r0, [r5, #1]
   17d24:	ldrb	r3, [r2]
   17d28:	add	r1, r5, #1
   17d2c:	cmp	r3, #0
   17d30:	beq	17d8c <mount@plt+0x5c2c>
   17d34:	subs	r3, r3, #46	; 0x2e
   17d38:	movne	r3, #1
   17d3c:	sub	r5, r5, #10
   17d40:	cmp	r4, r5
   17d44:	orreq	r3, r3, #1
   17d48:	cmp	r3, #0
   17d4c:	bne	17ccc <mount@plt+0x5b6c>
   17d50:	add	r6, r2, #1
   17d54:	mov	r5, r1
   17d58:	b	17cfc <mount@plt+0x5b9c>
   17d5c:	mov	r2, r6
   17d60:	mov	r1, #256	; 0x100
   17d64:	add	r0, r4, #8
   17d68:	bl	1aaa8 <mount@plt+0x8948>
   17d6c:	cmp	r0, #0
   17d70:	blt	17ccc <mount@plt+0x5b6c>
   17d74:	uxth	r0, r0
   17d78:	strh	r0, [r4, #2]
   17d7c:	lsl	r0, r0, #3
   17d80:	strh	r0, [r4, #4]
   17d84:	strh	r5, [r4, #6]
   17d88:	b	17bfc <mount@plt+0x5a9c>
   17d8c:	mov	r2, #4
   17d90:	mvn	r3, #0
   17d94:	strh	r2, [r4, #2]
   17d98:	strh	r3, [r4, #4]
   17d9c:	b	17bfc <mount@plt+0x5a9c>
   17da0:	strh	r5, [r4, #6]
   17da4:	mov	r1, r6
   17da8:	mov	r0, r5
   17dac:	add	r2, sp, #4
   17db0:	bl	1ca04 <mount@plt+0xa8a4>
   17db4:	cmp	r0, #0
   17db8:	ble	17ccc <mount@plt+0x5b6c>
   17dbc:	ldrh	r1, [sp, #6]
   17dc0:	mov	r2, #2
   17dc4:	mvn	r3, #0
   17dc8:	strh	r1, [r4, #8]
   17dcc:	strh	r2, [r4, #2]
   17dd0:	strh	r3, [r4, #4]
   17dd4:	b	17bfc <mount@plt+0x5a9c>
   17dd8:	add	r8, r4, #8
   17ddc:	strh	r5, [r4, #6]
   17de0:	mov	r1, r6
   17de4:	mov	r0, r5
   17de8:	mov	r2, r8
   17dec:	mov	r3, #256	; 0x100
   17df0:	bl	1ccfc <mount@plt+0xab9c>
   17df4:	cmp	r0, #0
   17df8:	ble	17ccc <mount@plt+0x5b6c>
   17dfc:	ldr	r3, [r4, #8]
   17e00:	mov	r2, #4
   17e04:	rev	r3, r3
   17e08:	tst	r3, #256	; 0x100
   17e0c:	mov	r3, #20
   17e10:	strh	r2, [r4, #2]
   17e14:	strh	r3, [r4, #4]
   17e18:	bne	17e54 <mount@plt+0x5cf4>
   17e1c:	mov	r1, r8
   17e20:	mov	r2, #1
   17e24:	b	17e30 <mount@plt+0x5cd0>
   17e28:	cmp	r2, #64	; 0x40
   17e2c:	beq	17bfc <mount@plt+0x5a9c>
   17e30:	ldr	r3, [r1, #4]!
   17e34:	add	r2, r2, #1
   17e38:	rev	r3, r3
   17e3c:	tst	r3, #256	; 0x100
   17e40:	beq	17e28 <mount@plt+0x5cc8>
   17e44:	lsl	r2, r2, #2
   17e48:	strh	r2, [r4, #2]
   17e4c:	b	17bfc <mount@plt+0x5a9c>
   17e50:	bl	11ca4 <__stack_chk_fail@plt>
   17e54:	mov	r2, #1
   17e58:	b	17e44 <mount@plt+0x5ce4>
   17e5c:	andeq	fp, r1, r4, lsl #9
   17e60:	andeq	r0, r0, ip, lsl #4
   17e64:	muleq	r0, ip, lr
   17e68:	andeq	r9, r0, r8, lsr #28
   17e6c:	andeq	r9, r0, r4, lsl lr
   17e70:	ldr	r3, [pc, #148]	; 17f0c <mount@plt+0x5dac>
   17e74:	ldr	ip, [pc, #148]	; 17f10 <mount@plt+0x5db0>
   17e78:	add	r3, pc, r3
   17e7c:	push	{r4, r5, r6, r7, r8, lr}
   17e80:	sub	sp, sp, #272	; 0x110
   17e84:	ldr	r4, [r3, ip]
   17e88:	mov	r2, #0
   17e8c:	mov	r7, r0
   17e90:	ldr	r3, [r4]
   17e94:	mov	r6, r1
   17e98:	str	r3, [sp, #268]	; 0x10c
   17e9c:	bl	172ec <mount@plt+0x518c>
   17ea0:	subs	r5, r0, #0
   17ea4:	bne	17ec4 <mount@plt+0x5d64>
   17ea8:	ldr	r2, [sp, #268]	; 0x10c
   17eac:	ldr	r3, [r4]
   17eb0:	mov	r0, r5
   17eb4:	cmp	r2, r3
   17eb8:	bne	17f08 <mount@plt+0x5da8>
   17ebc:	add	sp, sp, #272	; 0x110
   17ec0:	pop	{r4, r5, r6, r7, r8, pc}
   17ec4:	add	r8, sp, #4
   17ec8:	mov	r1, r6
   17ecc:	mov	r0, r8
   17ed0:	mov	r2, #2
   17ed4:	bl	17b6c <mount@plt+0x5a0c>
   17ed8:	subs	r5, r0, #0
   17edc:	bne	17f00 <mount@plt+0x5da0>
   17ee0:	ldrh	r3, [r8, #6]
   17ee4:	cmp	r3, #2
   17ee8:	bne	17f00 <mount@plt+0x5da0>
   17eec:	ldr	r0, [sp, #12]
   17ef0:	bl	172b4 <mount@plt+0x5154>
   17ef4:	cmp	r0, #0
   17ef8:	strge	r0, [r7]
   17efc:	bge	17ea8 <mount@plt+0x5d48>
   17f00:	mvn	r5, #0
   17f04:	b	17ea8 <mount@plt+0x5d48>
   17f08:	bl	11ca4 <__stack_chk_fail@plt>
   17f0c:	andeq	fp, r1, r0, lsl #3
   17f10:	andeq	r0, r0, ip, lsl #4
   17f14:	ldr	r3, [pc, #288]	; 1803c <mount@plt+0x5edc>
   17f18:	ldr	ip, [pc, #288]	; 18040 <mount@plt+0x5ee0>
   17f1c:	add	r3, pc, r3
   17f20:	push	{r4, r5, r6, r7, r8, lr}
   17f24:	sub	sp, sp, #8
   17f28:	ldr	r5, [r3, ip]
   17f2c:	mov	r6, r1
   17f30:	mov	r4, r0
   17f34:	ldr	r3, [r5]
   17f38:	mov	r0, r1
   17f3c:	mov	r1, #47	; 0x2f
   17f40:	mov	r8, r2
   17f44:	str	r3, [sp, #4]
   17f48:	bl	11ea8 <strchr@plt>
   17f4c:	subs	r7, r0, #0
   17f50:	beq	17ff0 <mount@plt+0x5e90>
   17f54:	mov	r3, #0
   17f58:	mov	r1, r6
   17f5c:	strb	r3, [r7]
   17f60:	mov	r2, r8
   17f64:	mov	r0, r4
   17f68:	bl	17b6c <mount@plt+0x5a0c>
   17f6c:	mov	r3, #47	; 0x2f
   17f70:	strb	r3, [r7]
   17f74:	subs	r6, r0, #0
   17f78:	beq	17f98 <mount@plt+0x5e38>
   17f7c:	ldr	r2, [sp, #4]
   17f80:	ldr	r3, [r5]
   17f84:	mov	r0, r6
   17f88:	cmp	r2, r3
   17f8c:	bne	18038 <mount@plt+0x5ed8>
   17f90:	add	sp, sp, #8
   17f94:	pop	{r4, r5, r6, r7, r8, pc}
   17f98:	ldrh	r0, [r4, #6]
   17f9c:	bl	17b44 <mount@plt+0x59e4>
   17fa0:	ldrsh	r3, [r4, #4]
   17fa4:	cmn	r3, #2
   17fa8:	mov	r6, r0
   17fac:	beq	18030 <mount@plt+0x5ed0>
   17fb0:	add	r1, r7, #1
   17fb4:	mov	r0, sp
   17fb8:	bl	17e70 <mount@plt+0x5d10>
   17fbc:	cmp	r0, #0
   17fc0:	bne	18030 <mount@plt+0x5ed0>
   17fc4:	ldr	r0, [sp]
   17fc8:	cmp	r0, r6
   17fcc:	bhi	18030 <mount@plt+0x5ed0>
   17fd0:	sxth	r0, r0
   17fd4:	mov	r3, #1
   17fd8:	ldrh	r2, [r4]
   17fdc:	strh	r0, [r4, #4]
   17fe0:	mov	r6, #0
   17fe4:	orr	r3, r3, r2
   17fe8:	strh	r3, [r4]
   17fec:	b	17f7c <mount@plt+0x5e1c>
   17ff0:	mov	r1, r6
   17ff4:	mov	r2, r8
   17ff8:	mov	r0, r4
   17ffc:	bl	17b6c <mount@plt+0x5a0c>
   18000:	subs	r6, r0, #0
   18004:	bne	17f7c <mount@plt+0x5e1c>
   18008:	ldrh	r0, [r4, #6]
   1800c:	bl	17b44 <mount@plt+0x59e4>
   18010:	ldrsh	r3, [r4, #4]
   18014:	cmn	r3, #2
   18018:	sxthne	r0, r0
   1801c:	movne	r3, r6
   18020:	bne	17fd8 <mount@plt+0x5e78>
   18024:	mov	r0, r6
   18028:	mov	r3, r6
   1802c:	b	17fd8 <mount@plt+0x5e78>
   18030:	mvn	r6, #0
   18034:	b	17f7c <mount@plt+0x5e1c>
   18038:	bl	11ca4 <__stack_chk_fail@plt>
   1803c:	ldrdeq	fp, [r1], -ip
   18040:	andeq	r0, r0, ip, lsl #4
   18044:	mov	ip, r1
   18048:	push	{r4, r5, r6, lr}
   1804c:	ldrh	r3, [ip], #4
   18050:	sub	r3, r3, #6
   18054:	cmp	r3, #14
   18058:	addls	pc, pc, r3, lsl #2
   1805c:	b	18160 <mount@plt+0x6000>
   18060:	b	18144 <mount@plt+0x5fe4>
   18064:	b	18160 <mount@plt+0x6000>
   18068:	b	18128 <mount@plt+0x5fc8>
   1806c:	b	18160 <mount@plt+0x6000>
   18070:	b	18160 <mount@plt+0x6000>
   18074:	b	18160 <mount@plt+0x6000>
   18078:	b	18160 <mount@plt+0x6000>
   1807c:	b	18160 <mount@plt+0x6000>
   18080:	b	180fc <mount@plt+0x5f9c>
   18084:	b	18160 <mount@plt+0x6000>
   18088:	b	18160 <mount@plt+0x6000>
   1808c:	b	18160 <mount@plt+0x6000>
   18090:	b	18160 <mount@plt+0x6000>
   18094:	b	18160 <mount@plt+0x6000>
   18098:	b	1809c <mount@plt+0x5f3c>
   1809c:	mov	r1, #10
   180a0:	mov	r3, #16
   180a4:	strh	r1, [r0, #6]
   180a8:	strh	r3, [r0, #2]
   180ac:	ldr	r5, [ip]
   180b0:	ldr	r4, [ip, #4]
   180b4:	ldr	lr, [ip, #8]
   180b8:	ldr	r1, [ip, #12]
   180bc:	str	r5, [r0, #8]
   180c0:	str	r4, [r0, #12]
   180c4:	str	lr, [r0, #16]
   180c8:	str	r1, [r0, #20]
   180cc:	cmp	r2, #0
   180d0:	beq	180e0 <mount@plt+0x5f80>
   180d4:	ldrh	r3, [r0, #6]
   180d8:	cmp	r3, r2
   180dc:	bne	18168 <mount@plt+0x6008>
   180e0:	mov	r1, #0
   180e4:	mvn	r3, #0
   180e8:	strh	r3, [r0, #4]
   180ec:	strh	r1, [r0]
   180f0:	bl	16e18 <mount@plt+0x4cb8>
   180f4:	mov	r0, r1
   180f8:	pop	{r4, r5, r6, pc}
   180fc:	mov	r1, #4
   18100:	mov	r3, #10
   18104:	strh	r1, [r0, #6]
   18108:	strh	r3, [r0, #2]
   1810c:	ldr	r1, [ip, #4]
   18110:	ldr	lr, [ip]
   18114:	str	r1, [r0, #12]
   18118:	str	lr, [r0, #8]
   1811c:	ldrh	r1, [ip, #8]
   18120:	strh	r1, [r0, #16]
   18124:	b	180cc <mount@plt+0x5f6c>
   18128:	mov	r3, #4
   1812c:	mov	ip, #2
   18130:	strh	ip, [r0, #6]
   18134:	strh	r3, [r0, #2]
   18138:	ldr	r3, [r1, #4]
   1813c:	str	r3, [r0, #8]
   18140:	b	180cc <mount@plt+0x5f6c>
   18144:	mov	r3, #2
   18148:	mov	ip, #12
   1814c:	strh	ip, [r0, #6]
   18150:	strh	r3, [r0, #2]
   18154:	ldrh	r3, [r1, #4]
   18158:	strh	r3, [r0, #8]
   1815c:	b	180cc <mount@plt+0x5f6c>
   18160:	mvn	r0, #0
   18164:	pop	{r4, r5, r6, pc}
   18168:	mvn	r0, #1
   1816c:	pop	{r4, r5, r6, pc}
   18170:	push	{r4, r5, r6, lr}
   18174:	sub	sp, sp, #272	; 0x110
   18178:	ldr	r4, [pc, #116]	; 181f4 <mount@plt+0x6094>
   1817c:	ldr	r2, [pc, #116]	; 181f8 <mount@plt+0x6098>
   18180:	add	r4, pc, r4
   18184:	mov	r1, r0
   18188:	ldr	r5, [r4, r2]
   1818c:	mov	r6, r0
   18190:	mov	r2, #2
   18194:	ldr	r3, [r5]
   18198:	add	r0, sp, #4
   1819c:	str	r3, [sp, #268]	; 0x10c
   181a0:	bl	17b6c <mount@plt+0x5a0c>
   181a4:	cmp	r0, #0
   181a8:	bne	181c8 <mount@plt+0x6068>
   181ac:	ldr	r2, [sp, #268]	; 0x10c
   181b0:	ldr	r3, [r5]
   181b4:	ldr	r0, [sp, #12]
   181b8:	cmp	r2, r3
   181bc:	bne	181f0 <mount@plt+0x6090>
   181c0:	add	sp, sp, #272	; 0x110
   181c4:	pop	{r4, r5, r6, pc}
   181c8:	ldr	r1, [pc, #44]	; 181fc <mount@plt+0x609c>
   181cc:	ldr	r2, [pc, #44]	; 18200 <mount@plt+0x60a0>
   181d0:	mov	r3, r6
   181d4:	ldr	r0, [r4, r1]
   181d8:	add	r2, pc, r2
   181dc:	mov	r1, #1
   181e0:	ldr	r0, [r0]
   181e4:	bl	11f74 <__fprintf_chk@plt>
   181e8:	mov	r0, #1
   181ec:	bl	11e84 <exit@plt>
   181f0:	bl	11ca4 <__stack_chk_fail@plt>
   181f4:	andeq	sl, r1, r8, ror lr
   181f8:	andeq	r0, r0, ip, lsl #4
   181fc:	andeq	r0, r0, r8, lsl r2
   18200:	andeq	r9, r0, r0, lsl #17
   18204:	ldr	r3, [pc, #44]	; 18238 <mount@plt+0x60d8>
   18208:	ldr	r0, [pc, #44]	; 1823c <mount@plt+0x60dc>
   1820c:	add	r3, pc, r3
   18210:	push	{r4, lr}
   18214:	mov	r2, #48	; 0x30
   18218:	ldr	ip, [r3, r0]
   1821c:	ldr	r0, [pc, #28]	; 18240 <mount@plt+0x60e0>
   18220:	mov	r1, #1
   18224:	add	r0, pc, r0
   18228:	ldr	r3, [ip]
   1822c:	bl	11d40 <fwrite@plt>
   18230:	mvn	r0, #0
   18234:	bl	11e84 <exit@plt>
   18238:	andeq	sl, r1, ip, ror #27
   1823c:	andeq	r0, r0, r8, lsl r2
   18240:	andeq	r9, r0, r8, ror #16
   18244:	ldr	r1, [pc, #48]	; 1827c <mount@plt+0x611c>
   18248:	ldr	ip, [pc, #48]	; 18280 <mount@plt+0x6120>
   1824c:	add	r1, pc, r1
   18250:	push	{r4, lr}
   18254:	mov	r3, r0
   18258:	ldr	ip, [r1, ip]
   1825c:	ldr	r2, [pc, #32]	; 18284 <mount@plt+0x6124>
   18260:	mov	r0, r1
   18264:	add	r2, pc, r2
   18268:	mov	r1, #1
   1826c:	ldr	r0, [ip]
   18270:	bl	11f74 <__fprintf_chk@plt>
   18274:	mvn	r0, #0
   18278:	bl	11e84 <exit@plt>
   1827c:	andeq	sl, r1, ip, lsr #27
   18280:	andeq	r0, r0, r8, lsl r2
   18284:	andeq	r9, r0, ip, asr r8
   18288:	ldr	ip, [pc, #52]	; 182c4 <mount@plt+0x6164>
   1828c:	push	{lr}		; (str lr, [sp, #-4]!)
   18290:	add	ip, pc, ip
   18294:	ldr	lr, [pc, #44]	; 182c8 <mount@plt+0x6168>
   18298:	sub	sp, sp, #12
   1829c:	ldr	r2, [pc, #40]	; 182cc <mount@plt+0x616c>
   182a0:	ldr	lr, [ip, lr]
   182a4:	mov	r3, r1
   182a8:	str	r0, [sp]
   182ac:	add	r2, pc, r2
   182b0:	mov	r1, #1
   182b4:	ldr	r0, [lr]
   182b8:	bl	11f74 <__fprintf_chk@plt>
   182bc:	mvn	r0, #0
   182c0:	bl	11e84 <exit@plt>
   182c4:	andeq	sl, r1, r8, ror #26
   182c8:	andeq	r0, r0, r8, lsl r2
   182cc:	andeq	r9, r0, r8, lsr r8
   182d0:	ldr	ip, [pc, #52]	; 1830c <mount@plt+0x61ac>
   182d4:	push	{lr}		; (str lr, [sp, #-4]!)
   182d8:	add	ip, pc, ip
   182dc:	ldr	lr, [pc, #44]	; 18310 <mount@plt+0x61b0>
   182e0:	mov	r3, r0
   182e4:	sub	sp, sp, #12
   182e8:	ldr	r0, [ip, lr]
   182ec:	ldr	r2, [pc, #32]	; 18314 <mount@plt+0x61b4>
   182f0:	str	r1, [sp]
   182f4:	add	r2, pc, r2
   182f8:	mov	r1, #1
   182fc:	ldr	r0, [r0]
   18300:	bl	11f74 <__fprintf_chk@plt>
   18304:	mvn	r0, #0
   18308:	bl	11e84 <exit@plt>
   1830c:	andeq	sl, r1, r0, lsr #26
   18310:	andeq	r0, r0, r8, lsl r2
   18314:	andeq	r9, r0, r4, lsl r8
   18318:	ldr	ip, [pc, #52]	; 18354 <mount@plt+0x61f4>
   1831c:	push	{lr}		; (str lr, [sp, #-4]!)
   18320:	add	ip, pc, ip
   18324:	ldr	lr, [pc, #44]	; 18358 <mount@plt+0x61f8>
   18328:	mov	r3, r0
   1832c:	sub	sp, sp, #12
   18330:	ldr	r0, [ip, lr]
   18334:	ldr	r2, [pc, #32]	; 1835c <mount@plt+0x61fc>
   18338:	str	r1, [sp]
   1833c:	add	r2, pc, r2
   18340:	mov	r1, #1
   18344:	ldr	r0, [r0]
   18348:	bl	11f74 <__fprintf_chk@plt>
   1834c:	mvn	r0, #0
   18350:	bl	11e84 <exit@plt>
   18354:	ldrdeq	sl, [r1], -r8
   18358:	andeq	r0, r0, r8, lsl r2
   1835c:	andeq	r9, r0, r0, lsl #16
   18360:	ldr	r1, [pc, #48]	; 18398 <mount@plt+0x6238>
   18364:	ldr	ip, [pc, #48]	; 1839c <mount@plt+0x623c>
   18368:	add	r1, pc, r1
   1836c:	push	{r4, lr}
   18370:	mov	r3, r0
   18374:	ldr	ip, [r1, ip]
   18378:	ldr	r2, [pc, #32]	; 183a0 <mount@plt+0x6240>
   1837c:	mov	r0, r1
   18380:	add	r2, pc, r2
   18384:	mov	r1, #1
   18388:	ldr	r0, [ip]
   1838c:	bl	11f74 <__fprintf_chk@plt>
   18390:	mvn	r0, #0
   18394:	pop	{r4, pc}
   18398:	muleq	r1, r0, ip
   1839c:	andeq	r0, r0, r8, lsl r2
   183a0:	strdeq	r9, [r0], -r4
   183a4:	push	{r4, r5, r6, lr}
   183a8:	ldrb	r4, [r0]
   183ac:	cmp	r4, #0
   183b0:	beq	183fc <mount@plt+0x629c>
   183b4:	mov	r5, r0
   183b8:	bl	11e9c <strlen@plt>
   183bc:	cmp	r0, #15
   183c0:	bhi	183fc <mount@plt+0x629c>
   183c4:	cmp	r4, #47	; 0x2f
   183c8:	beq	183fc <mount@plt+0x629c>
   183cc:	bl	11e78 <__ctype_b_loc@plt>
   183d0:	ldr	r2, [r0]
   183d4:	b	183ec <mount@plt+0x628c>
   183d8:	ldrb	r4, [r5, #1]!
   183dc:	cmp	r4, #0
   183e0:	beq	18404 <mount@plt+0x62a4>
   183e4:	cmp	r4, #47	; 0x2f
   183e8:	beq	183fc <mount@plt+0x629c>
   183ec:	lsl	r4, r4, #1
   183f0:	ldrh	r3, [r2, r4]
   183f4:	tst	r3, #8192	; 0x2000
   183f8:	beq	183d8 <mount@plt+0x6278>
   183fc:	mvn	r0, #0
   18400:	pop	{r4, r5, r6, pc}
   18404:	mov	r0, r4
   18408:	pop	{r4, r5, r6, pc}
   1840c:	push	{r4, r5, r6, lr}
   18410:	mov	r6, r0
   18414:	mov	r0, r1
   18418:	mov	r4, r1
   1841c:	bl	183a4 <mount@plt+0x6244>
   18420:	subs	r5, r0, #0
   18424:	beq	18430 <mount@plt+0x62d0>
   18428:	mov	r0, r5
   1842c:	pop	{r4, r5, r6, pc}
   18430:	mov	r1, r4
   18434:	mov	r0, r6
   18438:	mov	r2, #16
   1843c:	bl	11f14 <strncpy@plt>
   18440:	mov	r0, r5
   18444:	pop	{r4, r5, r6, pc}
   18448:	push	{r4, lr}
   1844c:	mov	r4, r0
   18450:	ldr	r0, [pc, #84]	; 184ac <mount@plt+0x634c>
   18454:	cmp	r1, #0
   18458:	add	r0, pc, r0
   1845c:	addne	r4, r1, #4
   18460:	beq	1847c <mount@plt+0x631c>
   18464:	mov	r0, r4
   18468:	bl	183a4 <mount@plt+0x6244>
   1846c:	cmp	r0, #0
   18470:	moveq	r0, r4
   18474:	movne	r0, #0
   18478:	pop	{r4, pc}
   1847c:	ldr	r1, [pc, #44]	; 184b0 <mount@plt+0x6350>
   18480:	ldr	r2, [pc, #44]	; 184b4 <mount@plt+0x6354>
   18484:	mov	r3, r4
   18488:	ldr	r0, [r0, r1]
   1848c:	add	r2, pc, r2
   18490:	mov	r1, #1
   18494:	ldr	r0, [r0]
   18498:	bl	11f74 <__fprintf_chk@plt>
   1849c:	mov	r0, r4
   184a0:	bl	1a628 <mount@plt+0x84c8>
   184a4:	mov	r4, r0
   184a8:	b	18464 <mount@plt+0x6304>
   184ac:	andeq	sl, r1, r0, lsr #23
   184b0:	andeq	r0, r0, r8, lsl r2
   184b4:	andeq	r9, r0, r4, lsl #14
   184b8:	push	{r4, r5, r6, lr}
   184bc:	mov	r4, r1
   184c0:	mov	r6, r0
   184c4:	bl	11e9c <strlen@plt>
   184c8:	mov	r5, r0
   184cc:	mov	r0, r4
   184d0:	bl	11e9c <strlen@plt>
   184d4:	cmp	r5, r0
   184d8:	bhi	184f0 <mount@plt+0x6390>
   184dc:	mov	r2, r5
   184e0:	mov	r1, r6
   184e4:	mov	r0, r4
   184e8:	pop	{r4, r5, r6, lr}
   184ec:	b	11c74 <memcmp@plt>
   184f0:	mvn	r0, #0
   184f4:	pop	{r4, r5, r6, pc}
   184f8:	push	{r4, r5, r6, r7, r8, lr}
   184fc:	asrs	r5, r2, #5
   18500:	add	r7, r0, #8
   18504:	add	r6, r1, #8
   18508:	and	r4, r2, #31
   1850c:	beq	1852c <mount@plt+0x63cc>
   18510:	lsl	r2, r5, #2
   18514:	mov	r1, r6
   18518:	mov	r0, r7
   1851c:	bl	11c74 <memcmp@plt>
   18520:	cmp	r0, #0
   18524:	mvnne	r4, #0
   18528:	bne	1855c <mount@plt+0x63fc>
   1852c:	cmp	r4, #0
   18530:	beq	1855c <mount@plt+0x63fc>
   18534:	rsb	r2, r4, #32
   18538:	mvn	r4, #0
   1853c:	ldr	r3, [r7, r5, lsl #2]
   18540:	lsl	r2, r4, r2
   18544:	ldr	r1, [r6, r5, lsl #2]
   18548:	rev	r2, r2
   1854c:	eor	r3, r3, r1
   18550:	tst	r3, r2
   18554:	movne	r4, #1
   18558:	moveq	r4, #0
   1855c:	mov	r0, r4
   18560:	pop	{r4, r5, r6, r7, r8, pc}
   18564:	ldr	r3, [pc, #140]	; 185f8 <mount@plt+0x6498>
   18568:	ldr	ip, [pc, #140]	; 185fc <mount@plt+0x649c>
   1856c:	add	r3, pc, r3
   18570:	push	{r4, r5, r6, lr}
   18574:	sub	sp, sp, #272	; 0x110
   18578:	ldr	r4, [r3, ip]
   1857c:	subs	r2, r1, #0
   18580:	ldr	r3, [r4]
   18584:	str	r3, [sp, #268]	; 0x10c
   18588:	beq	185d0 <mount@plt+0x6470>
   1858c:	ldrh	r2, [r0, #6]
   18590:	mov	r5, r0
   18594:	cmp	r2, #0
   18598:	beq	185d0 <mount@plt+0x6470>
   1859c:	ldrsh	r3, [r0, #4]
   185a0:	cmp	r3, #0
   185a4:	ble	185d0 <mount@plt+0x6470>
   185a8:	add	r6, sp, #4
   185ac:	mov	r0, r6
   185b0:	bl	18044 <mount@plt+0x5ee4>
   185b4:	cmp	r0, #0
   185b8:	bne	185ec <mount@plt+0x648c>
   185bc:	mov	r0, r6
   185c0:	ldrsh	r2, [r5, #4]
   185c4:	mov	r1, r5
   185c8:	bl	184f8 <mount@plt+0x6398>
   185cc:	b	185d4 <mount@plt+0x6474>
   185d0:	mov	r0, #0
   185d4:	ldr	r2, [sp, #268]	; 0x10c
   185d8:	ldr	r3, [r4]
   185dc:	cmp	r2, r3
   185e0:	bne	185f4 <mount@plt+0x6494>
   185e4:	add	sp, sp, #272	; 0x110
   185e8:	pop	{r4, r5, r6, pc}
   185ec:	mvn	r0, #0
   185f0:	b	185d4 <mount@plt+0x6474>
   185f4:	bl	11ca4 <__stack_chk_fail@plt>
   185f8:	andeq	sl, r1, ip, lsl #21
   185fc:	andeq	r0, r0, ip, lsl #4
   18600:	ldr	r3, [pc, #412]	; 187a4 <mount@plt+0x6644>
   18604:	ldr	r2, [pc, #412]	; 187a8 <mount@plt+0x6648>
   18608:	add	r3, pc, r3
   1860c:	push	{r4, r5, r6, lr}
   18610:	sub	sp, sp, #1040	; 0x410
   18614:	ldr	r4, [r3, r2]
   18618:	ldr	r5, [pc, #396]	; 187ac <mount@plt+0x664c>
   1861c:	sub	sp, sp, #8
   18620:	add	r5, pc, r5
   18624:	ldr	r3, [r4]
   18628:	mov	r0, r5
   1862c:	str	r3, [sp, #1044]	; 0x414
   18630:	bl	11dd0 <getenv@plt>
   18634:	cmp	r0, #0
   18638:	beq	186a4 <mount@plt+0x6544>
   1863c:	mov	r0, r5
   18640:	bl	11dd0 <getenv@plt>
   18644:	mov	r2, #10
   18648:	mov	r1, #0
   1864c:	bl	11ba8 <strtol@plt>
   18650:	subs	r5, r0, #0
   18654:	beq	1869c <mount@plt+0x653c>
   18658:	ldr	r2, [sp, #1044]	; 0x414
   1865c:	ldr	r3, [r4]
   18660:	mov	r0, r5
   18664:	cmp	r2, r3
   18668:	bne	187a0 <mount@plt+0x6640>
   1866c:	add	sp, sp, #1040	; 0x410
   18670:	add	sp, sp, #8
   18674:	pop	{r4, r5, r6, pc}
   18678:	ldr	r3, [pc, #304]	; 187b0 <mount@plt+0x6650>
   1867c:	ldr	r2, [sp, #12]
   18680:	cmp	r2, r3
   18684:	bne	18718 <mount@plt+0x65b8>
   18688:	ldr	r5, [sp, #16]
   1868c:	mov	r0, r6
   18690:	bl	11f98 <fclose@plt>
   18694:	cmp	r5, #0
   18698:	bne	18658 <mount@plt+0x64f8>
   1869c:	mov	r5, #100	; 0x64
   186a0:	b	18658 <mount@plt+0x64f8>
   186a4:	ldr	r5, [pc, #264]	; 187b4 <mount@plt+0x6654>
   186a8:	add	r5, pc, r5
   186ac:	mov	r0, r5
   186b0:	bl	11dd0 <getenv@plt>
   186b4:	cmp	r0, #0
   186b8:	beq	18728 <mount@plt+0x65c8>
   186bc:	mov	r0, r5
   186c0:	bl	11dd0 <getenv@plt>
   186c4:	add	r5, sp, #24
   186c8:	ldr	r2, [pc, #232]	; 187b8 <mount@plt+0x6658>
   186cc:	sub	r6, r5, #4
   186d0:	add	r2, pc, r2
   186d4:	ldr	r1, [pc, #224]	; 187bc <mount@plt+0x665c>
   186d8:	mov	r3, r0
   186dc:	mov	r0, r6
   186e0:	bl	11ee4 <snprintf@plt>
   186e4:	ldr	r1, [pc, #212]	; 187c0 <mount@plt+0x6660>
   186e8:	mov	r0, r6
   186ec:	add	r1, pc, r1
   186f0:	bl	12088 <fopen64@plt>
   186f4:	subs	r6, r0, #0
   186f8:	beq	1869c <mount@plt+0x653c>
   186fc:	ldr	r1, [pc, #192]	; 187c4 <mount@plt+0x6664>
   18700:	sub	r3, r5, #8
   18704:	sub	r2, r5, #12
   18708:	add	r1, pc, r1
   1870c:	bl	11f20 <fscanf@plt>
   18710:	cmp	r0, #2
   18714:	beq	18678 <mount@plt+0x6518>
   18718:	mov	r0, r6
   1871c:	bl	11f98 <fclose@plt>
   18720:	mov	r5, #100	; 0x64
   18724:	b	18658 <mount@plt+0x64f8>
   18728:	ldr	r5, [pc, #152]	; 187c8 <mount@plt+0x6668>
   1872c:	add	r5, pc, r5
   18730:	mov	r0, r5
   18734:	bl	11dd0 <getenv@plt>
   18738:	cmp	r0, #0
   1873c:	beq	18778 <mount@plt+0x6618>
   18740:	mov	r0, r5
   18744:	bl	11dd0 <getenv@plt>
   18748:	ldr	r3, [pc, #124]	; 187cc <mount@plt+0x666c>
   1874c:	add	r5, sp, #24
   18750:	add	r3, pc, r3
   18754:	sub	r6, r5, #4
   18758:	str	r3, [sp]
   1875c:	mov	r2, #1
   18760:	mov	r3, #1024	; 0x400
   18764:	ldr	r1, [pc, #80]	; 187bc <mount@plt+0x665c>
   18768:	str	r0, [sp, #4]
   1876c:	mov	r0, r6
   18770:	bl	1213c <__snprintf_chk@plt>
   18774:	b	186e4 <mount@plt+0x6584>
   18778:	ldr	lr, [pc, #80]	; 187d0 <mount@plt+0x6670>
   1877c:	add	r6, sp, #20
   18780:	add	lr, pc, lr
   18784:	mov	ip, r6
   18788:	ldm	lr!, {r0, r1, r2, r3}
   1878c:	add	r5, sp, #24
   18790:	ldr	lr, [lr]
   18794:	stmia	ip!, {r0, r1, r2, r3}
   18798:	strb	lr, [ip]
   1879c:	b	186e4 <mount@plt+0x6584>
   187a0:	bl	11ca4 <__stack_chk_fail@plt>
   187a4:	strdeq	sl, [r1], -r0
   187a8:	andeq	r0, r0, ip, lsl #4
   187ac:	muleq	r0, ip, r5
   187b0:	andeq	r4, pc, r0, asr #4
   187b4:	andeq	r9, r0, r8, lsl r5
   187b8:	muleq	r0, r0, fp
   187bc:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   187c0:	strdeq	r7, [r0], -ip
   187c4:	strdeq	r9, [r0], -r8
   187c8:	andeq	r9, r0, r4, lsr #9
   187cc:	andeq	r9, r0, ip, lsl #9
   187d0:	andeq	r9, r0, ip, ror #8
   187d4:	mov	r0, #2
   187d8:	b	11cc8 <sysconf@plt>
   187dc:	ldr	ip, [pc, #416]	; 18984 <mount@plt+0x6824>
   187e0:	push	{r4, r5, lr}
   187e4:	add	ip, pc, ip
   187e8:	ldr	lr, [pc, #408]	; 18988 <mount@plt+0x6828>
   187ec:	sub	sp, sp, #44	; 0x2c
   187f0:	mov	r5, r2
   187f4:	ldr	r4, [ip, lr]
   187f8:	sub	lr, r0, #2
   187fc:	ldr	ip, [r4]
   18800:	str	ip, [sp, #36]	; 0x24
   18804:	cmp	lr, #26
   18808:	addls	pc, pc, lr, lsl #2
   1880c:	b	18954 <mount@plt+0x67f4>
   18810:	b	188a8 <mount@plt+0x6748>
   18814:	b	18954 <mount@plt+0x67f4>
   18818:	b	188bc <mount@plt+0x675c>
   1881c:	b	18954 <mount@plt+0x67f4>
   18820:	b	18954 <mount@plt+0x67f4>
   18824:	b	188d4 <mount@plt+0x6774>
   18828:	b	18954 <mount@plt+0x67f4>
   1882c:	b	18954 <mount@plt+0x67f4>
   18830:	b	188a8 <mount@plt+0x6748>
   18834:	b	18954 <mount@plt+0x67f4>
   18838:	b	188fc <mount@plt+0x679c>
   1883c:	b	18954 <mount@plt+0x67f4>
   18840:	b	18954 <mount@plt+0x67f4>
   18844:	b	18954 <mount@plt+0x67f4>
   18848:	b	18954 <mount@plt+0x67f4>
   1884c:	b	1893c <mount@plt+0x67dc>
   18850:	b	18954 <mount@plt+0x67f4>
   18854:	b	18954 <mount@plt+0x67f4>
   18858:	b	18954 <mount@plt+0x67f4>
   1885c:	b	18954 <mount@plt+0x67f4>
   18860:	b	18954 <mount@plt+0x67f4>
   18864:	b	18954 <mount@plt+0x67f4>
   18868:	b	18954 <mount@plt+0x67f4>
   1886c:	b	18954 <mount@plt+0x67f4>
   18870:	b	18954 <mount@plt+0x67f4>
   18874:	b	18954 <mount@plt+0x67f4>
   18878:	b	1887c <mount@plt+0x671c>
   1887c:	mov	r2, r3
   18880:	mov	r1, r5
   18884:	ldr	r3, [sp, #56]	; 0x38
   18888:	mov	r0, #28
   1888c:	bl	1cc34 <mount@plt+0xaad4>
   18890:	ldr	r2, [sp, #36]	; 0x24
   18894:	ldr	r3, [r4]
   18898:	cmp	r2, r3
   1889c:	bne	18980 <mount@plt+0x6820>
   188a0:	add	sp, sp, #44	; 0x2c
   188a4:	pop	{r4, r5, pc}
   188a8:	mov	r2, r3
   188ac:	mov	r1, r5
   188b0:	ldr	r3, [sp, #56]	; 0x38
   188b4:	bl	12094 <inet_ntop@plt>
   188b8:	b	18890 <mount@plt+0x6730>
   188bc:	mov	r2, r3
   188c0:	mov	r1, r5
   188c4:	ldr	r3, [sp, #56]	; 0x38
   188c8:	mov	r0, #4
   188cc:	bl	1cb18 <mount@plt+0xa9b8>
   188d0:	b	18890 <mount@plt+0x6730>
   188d4:	ldrh	r0, [r2]
   188d8:	cmp	r0, #2
   188dc:	beq	1896c <mount@plt+0x680c>
   188e0:	cmp	r0, #10
   188e4:	bne	18960 <mount@plt+0x6800>
   188e8:	mov	r2, r3
   188ec:	add	r1, r5, #8
   188f0:	ldr	r3, [sp, #56]	; 0x38
   188f4:	bl	12094 <inet_ntop@plt>
   188f8:	b	18890 <mount@plt+0x6730>
   188fc:	ldrh	r1, [r2]
   18900:	mov	r0, #0
   18904:	mov	r2, r3
   18908:	mov	ip, #2
   1890c:	strh	r1, [sp, #14]
   18910:	str	r0, [sp, #20]
   18914:	str	r0, [sp, #16]
   18918:	str	r0, [sp, #24]
   1891c:	str	r0, [sp, #28]
   18920:	strh	r0, [sp, #32]
   18924:	ldr	r3, [sp, #56]	; 0x38
   18928:	add	r1, sp, #12
   1892c:	mov	r0, #12
   18930:	strh	ip, [sp, #12]
   18934:	bl	1c810 <mount@plt+0xa6b0>
   18938:	b	18890 <mount@plt+0x6730>
   1893c:	ldr	r2, [sp, #56]	; 0x38
   18940:	mov	r0, r5
   18944:	str	r2, [sp]
   18948:	ldr	r2, [pc, #60]	; 1898c <mount@plt+0x682c>
   1894c:	bl	1a978 <mount@plt+0x8818>
   18950:	b	18890 <mount@plt+0x6730>
   18954:	ldr	r0, [pc, #52]	; 18990 <mount@plt+0x6830>
   18958:	add	r0, pc, r0
   1895c:	b	18890 <mount@plt+0x6730>
   18960:	ldr	r0, [pc, #44]	; 18994 <mount@plt+0x6834>
   18964:	add	r0, pc, r0
   18968:	b	18890 <mount@plt+0x6730>
   1896c:	mov	r2, r3
   18970:	add	r1, r5, #4
   18974:	ldr	r3, [sp, #56]	; 0x38
   18978:	bl	12094 <inet_ntop@plt>
   1897c:	b	18890 <mount@plt+0x6730>
   18980:	bl	11ca4 <__stack_chk_fail@plt>
   18984:	andeq	sl, r1, r4, lsl r8
   18988:	andeq	r0, r0, ip, lsl #4
   1898c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   18990:			; <UNDEFINED> instruction: 0x000092bc
   18994:			; <UNDEFINED> instruction: 0x000092b0
   18998:	push	{lr}		; (str lr, [sp, #-4]!)
   1899c:	sub	sp, sp, #12
   189a0:	mov	r3, #256	; 0x100
   189a4:	str	r3, [sp]
   189a8:	ldr	r3, [pc, #12]	; 189bc <mount@plt+0x685c>
   189ac:	add	r3, pc, r3
   189b0:	bl	187dc <mount@plt+0x667c>
   189b4:	add	sp, sp, #12
   189b8:	pop	{pc}		; (ldr pc, [sp], #4)
   189bc:			; <UNDEFINED> instruction: 0x0001a8bc
   189c0:	ldr	r1, [pc, #220]	; 18aa4 <mount@plt+0x6944>
   189c4:	push	{r4, lr}
   189c8:	add	r1, pc, r1
   189cc:	mov	r4, r0
   189d0:	bl	11b9c <strcmp@plt>
   189d4:	cmp	r0, #0
   189d8:	beq	18a7c <mount@plt+0x691c>
   189dc:	ldr	r1, [pc, #196]	; 18aa8 <mount@plt+0x6948>
   189e0:	mov	r0, r4
   189e4:	add	r1, pc, r1
   189e8:	bl	11b9c <strcmp@plt>
   189ec:	cmp	r0, #0
   189f0:	beq	18a74 <mount@plt+0x6914>
   189f4:	ldr	r1, [pc, #176]	; 18aac <mount@plt+0x694c>
   189f8:	mov	r0, r4
   189fc:	add	r1, pc, r1
   18a00:	bl	11b9c <strcmp@plt>
   18a04:	cmp	r0, #0
   18a08:	beq	18a8c <mount@plt+0x692c>
   18a0c:	ldr	r1, [pc, #156]	; 18ab0 <mount@plt+0x6950>
   18a10:	mov	r0, r4
   18a14:	add	r1, pc, r1
   18a18:	bl	11b9c <strcmp@plt>
   18a1c:	cmp	r0, #0
   18a20:	beq	18a84 <mount@plt+0x6924>
   18a24:	ldr	r1, [pc, #136]	; 18ab4 <mount@plt+0x6954>
   18a28:	mov	r0, r4
   18a2c:	add	r1, pc, r1
   18a30:	bl	11b9c <strcmp@plt>
   18a34:	cmp	r0, #0
   18a38:	beq	18a94 <mount@plt+0x6934>
   18a3c:	ldr	r1, [pc, #116]	; 18ab8 <mount@plt+0x6958>
   18a40:	mov	r0, r4
   18a44:	add	r1, pc, r1
   18a48:	bl	11b9c <strcmp@plt>
   18a4c:	cmp	r0, #0
   18a50:	beq	18a9c <mount@plt+0x693c>
   18a54:	ldr	r1, [pc, #96]	; 18abc <mount@plt+0x695c>
   18a58:	mov	r0, r4
   18a5c:	add	r1, pc, r1
   18a60:	bl	11b9c <strcmp@plt>
   18a64:	cmp	r0, #0
   18a68:	movne	r0, #0
   18a6c:	moveq	r0, #7
   18a70:	pop	{r4, pc}
   18a74:	mov	r0, #10
   18a78:	pop	{r4, pc}
   18a7c:	mov	r0, #2
   18a80:	pop	{r4, pc}
   18a84:	mov	r0, #17
   18a88:	pop	{r4, pc}
   18a8c:	mov	r0, #12
   18a90:	pop	{r4, pc}
   18a94:	mov	r0, #4
   18a98:	pop	{r4, pc}
   18a9c:	mov	r0, #28
   18aa0:	pop	{r4, pc}
   18aa4:	andeq	r9, r0, r0, asr r2
   18aa8:	andeq	r9, r0, ip, lsr r2
   18aac:	andeq	r9, r0, ip, lsr #4
   18ab0:	andeq	r9, r0, r4, ror #16
   18ab4:	andeq	r9, r0, r4, lsl #4
   18ab8:	strdeq	r9, [r0], -r0
   18abc:	andeq	r9, r0, r0, ror #3
   18ac0:	cmp	r0, #2
   18ac4:	beq	18b04 <mount@plt+0x69a4>
   18ac8:	cmp	r0, #10
   18acc:	beq	18b28 <mount@plt+0x69c8>
   18ad0:	cmp	r0, #12
   18ad4:	beq	18b10 <mount@plt+0x69b0>
   18ad8:	cmp	r0, #17
   18adc:	beq	18b34 <mount@plt+0x69d4>
   18ae0:	cmp	r0, #4
   18ae4:	beq	18b40 <mount@plt+0x69e0>
   18ae8:	cmp	r0, #28
   18aec:	beq	18b4c <mount@plt+0x69ec>
   18af0:	cmp	r0, #7
   18af4:	beq	18b1c <mount@plt+0x69bc>
   18af8:	ldr	r0, [pc, #88]	; 18b58 <mount@plt+0x69f8>
   18afc:	add	r0, pc, r0
   18b00:	bx	lr
   18b04:	ldr	r0, [pc, #80]	; 18b5c <mount@plt+0x69fc>
   18b08:	add	r0, pc, r0
   18b0c:	bx	lr
   18b10:	ldr	r0, [pc, #72]	; 18b60 <mount@plt+0x6a00>
   18b14:	add	r0, pc, r0
   18b18:	bx	lr
   18b1c:	ldr	r0, [pc, #64]	; 18b64 <mount@plt+0x6a04>
   18b20:	add	r0, pc, r0
   18b24:	bx	lr
   18b28:	ldr	r0, [pc, #56]	; 18b68 <mount@plt+0x6a08>
   18b2c:	add	r0, pc, r0
   18b30:	bx	lr
   18b34:	ldr	r0, [pc, #48]	; 18b6c <mount@plt+0x6a0c>
   18b38:	add	r0, pc, r0
   18b3c:	bx	lr
   18b40:	ldr	r0, [pc, #40]	; 18b70 <mount@plt+0x6a10>
   18b44:	add	r0, pc, r0
   18b48:	bx	lr
   18b4c:	ldr	r0, [pc, #32]	; 18b74 <mount@plt+0x6a14>
   18b50:	add	r0, pc, r0
   18b54:	bx	lr
   18b58:	andeq	r9, r0, r8, lsl r1
   18b5c:	andeq	r9, r0, r0, lsl r1
   18b60:	andeq	r9, r0, r4, lsl r1
   18b64:	andeq	r9, r0, ip, lsl r1
   18b68:	strdeq	r9, [r0], -r4
   18b6c:	andeq	r9, r0, r0, asr #14
   18b70:	andeq	r9, r0, ip, ror #1
   18b74:	andeq	r9, r0, r4, ror #1
   18b78:	push	{r4, r5, r6, lr}
   18b7c:	sub	sp, sp, #8
   18b80:	mov	r5, r1
   18b84:	mov	r4, r2
   18b88:	bl	17b6c <mount@plt+0x5a0c>
   18b8c:	ldr	r3, [pc, #92]	; 18bf0 <mount@plt+0x6a90>
   18b90:	add	r3, pc, r3
   18b94:	cmp	r0, #0
   18b98:	bne	18ba4 <mount@plt+0x6a44>
   18b9c:	add	sp, sp, #8
   18ba0:	pop	{r4, r5, r6, pc}
   18ba4:	ldr	r2, [pc, #72]	; 18bf4 <mount@plt+0x6a94>
   18ba8:	cmp	r4, #0
   18bac:	ldr	r3, [r3, r2]
   18bb0:	ldr	r6, [r3]
   18bb4:	beq	18be4 <mount@plt+0x6a84>
   18bb8:	mov	r0, r4
   18bbc:	bl	18ac0 <mount@plt+0x6960>
   18bc0:	mov	r3, r0
   18bc4:	ldr	r2, [pc, #44]	; 18bf8 <mount@plt+0x6a98>
   18bc8:	str	r5, [sp]
   18bcc:	mov	r0, r6
   18bd0:	add	r2, pc, r2
   18bd4:	mov	r1, #1
   18bd8:	bl	11f74 <__fprintf_chk@plt>
   18bdc:	mov	r0, #1
   18be0:	bl	11e84 <exit@plt>
   18be4:	ldr	r3, [pc, #16]	; 18bfc <mount@plt+0x6a9c>
   18be8:	add	r3, pc, r3
   18bec:	b	18bc4 <mount@plt+0x6a64>
   18bf0:	andeq	sl, r1, r8, ror #8
   18bf4:	andeq	r0, r0, r8, lsl r2
   18bf8:	andeq	r9, r0, r0, lsl #1
   18bfc:	andeq	r9, r0, ip, asr r0
   18c00:	push	{r4, r5, r6, lr}
   18c04:	cmp	r2, #17
   18c08:	ldr	r5, [pc, #152]	; 18ca8 <mount@plt+0x6b48>
   18c0c:	sub	sp, sp, #8
   18c10:	add	r5, pc, r5
   18c14:	mov	r6, r1
   18c18:	beq	18c34 <mount@plt+0x6ad4>
   18c1c:	mov	r4, r2
   18c20:	bl	17f14 <mount@plt+0x5db4>
   18c24:	cmp	r0, #0
   18c28:	bne	18c5c <mount@plt+0x6afc>
   18c2c:	add	sp, sp, #8
   18c30:	pop	{r4, r5, r6, pc}
   18c34:	ldr	r1, [pc, #112]	; 18cac <mount@plt+0x6b4c>
   18c38:	ldr	r2, [pc, #112]	; 18cb0 <mount@plt+0x6b50>
   18c3c:	mov	r3, r6
   18c40:	ldr	r0, [r5, r1]
   18c44:	add	r2, pc, r2
   18c48:	mov	r1, #1
   18c4c:	ldr	r0, [r0]
   18c50:	bl	11f74 <__fprintf_chk@plt>
   18c54:	mov	r0, #1
   18c58:	bl	11e84 <exit@plt>
   18c5c:	ldr	r3, [pc, #72]	; 18cac <mount@plt+0x6b4c>
   18c60:	cmp	r4, #0
   18c64:	ldr	r3, [r5, r3]
   18c68:	ldr	r5, [r3]
   18c6c:	beq	18c9c <mount@plt+0x6b3c>
   18c70:	mov	r0, r4
   18c74:	bl	18ac0 <mount@plt+0x6960>
   18c78:	mov	r3, r0
   18c7c:	ldr	r2, [pc, #48]	; 18cb4 <mount@plt+0x6b54>
   18c80:	str	r6, [sp]
   18c84:	mov	r0, r5
   18c88:	add	r2, pc, r2
   18c8c:	mov	r1, #1
   18c90:	bl	11f74 <__fprintf_chk@plt>
   18c94:	mov	r0, #1
   18c98:	bl	11e84 <exit@plt>
   18c9c:	ldr	r3, [pc, #20]	; 18cb8 <mount@plt+0x6b58>
   18ca0:	add	r3, pc, r3
   18ca4:	b	18c7c <mount@plt+0x6b1c>
   18ca8:	andeq	sl, r1, r8, ror #7
   18cac:	andeq	r0, r0, r8, lsl r2
   18cb0:	andeq	r9, r0, r0, asr #32
   18cb4:	andeq	r9, r0, r4, asr #32
   18cb8:	andeq	r8, r0, r4, lsr #31
   18cbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18cc0:	mov	r6, r2
   18cc4:	ldr	r5, [pc, #520]	; 18ed4 <mount@plt+0x6d74>
   18cc8:	ldr	ip, [pc, #520]	; 18ed8 <mount@plt+0x6d78>
   18ccc:	add	r5, pc, r5
   18cd0:	mov	r8, r3
   18cd4:	ldr	r2, [r5, ip]
   18cd8:	sub	sp, sp, #28
   18cdc:	mov	r4, r1
   18ce0:	ldr	r3, [r2]
   18ce4:	mov	r7, r0
   18ce8:	cmp	r3, #0
   18cec:	ldr	r9, [sp, #64]	; 0x40
   18cf0:	beq	18dc4 <mount@plt+0x6c64>
   18cf4:	cmp	r1, #0
   18cf8:	ble	18da8 <mount@plt+0x6c48>
   18cfc:	cmp	r7, #10
   18d00:	beq	18e8c <mount@plt+0x6d2c>
   18d04:	sub	r3, r4, #4
   18d08:	add	r3, r6, r3
   18d0c:	mov	fp, r7
   18d10:	str	r4, [sp, #4]
   18d14:	str	r4, [sp, #8]
   18d18:	str	r6, [sp]
   18d1c:	ldr	r1, [r3]
   18d20:	ldr	r3, [pc, #436]	; 18edc <mount@plt+0x6d7c>
   18d24:	ldr	r2, [pc, #436]	; 18ee0 <mount@plt+0x6d80>
   18d28:	umull	r0, r3, r3, r1
   18d2c:	add	r2, pc, r2
   18d30:	lsr	r3, r3, #8
   18d34:	add	r3, r3, r3, lsl #8
   18d38:	sub	r3, r1, r3
   18d3c:	lsl	r1, r3, #2
   18d40:	add	r3, r2, r1
   18d44:	str	r1, [sp, #20]
   18d48:	ldr	r3, [r3, #256]	; 0x100
   18d4c:	cmp	r3, #0
   18d50:	str	r3, [sp, #16]
   18d54:	beq	18de8 <mount@plt+0x6c88>
   18d58:	str	r5, [sp, #12]
   18d5c:	mov	sl, r3
   18d60:	ldr	r5, [sp, #8]
   18d64:	b	18d74 <mount@plt+0x6c14>
   18d68:	ldr	sl, [sl]
   18d6c:	cmp	sl, #0
   18d70:	beq	18de4 <mount@plt+0x6c84>
   18d74:	ldrh	r2, [sl, #14]
   18d78:	cmp	r2, fp
   18d7c:	bne	18d68 <mount@plt+0x6c08>
   18d80:	ldrh	r2, [sl, #10]
   18d84:	cmp	r5, r2
   18d88:	bne	18d68 <mount@plt+0x6c08>
   18d8c:	ldm	sp, {r1, r2}
   18d90:	add	r0, sl, #16
   18d94:	bl	11c74 <memcmp@plt>
   18d98:	cmp	r0, #0
   18d9c:	bne	18d68 <mount@plt+0x6c08>
   18da0:	ldr	r0, [sl, #4]
   18da4:	b	18e7c <mount@plt+0x6d1c>
   18da8:	bl	17b44 <mount@plt+0x59e4>
   18dac:	cmp	r0, #0
   18db0:	add	r4, r0, #7
   18db4:	movge	r4, r0
   18db8:	cmp	r0, #7
   18dbc:	asr	r4, r4, #3
   18dc0:	bgt	18cfc <mount@plt+0x6b9c>
   18dc4:	str	r9, [sp, #64]	; 0x40
   18dc8:	mov	r3, r8
   18dcc:	mov	r2, r6
   18dd0:	mov	r1, r4
   18dd4:	mov	r0, r7
   18dd8:	add	sp, sp, #28
   18ddc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18de0:	b	187dc <mount@plt+0x667c>
   18de4:	ldr	r5, [sp, #12]
   18de8:	mov	r0, #272	; 0x110
   18dec:	bl	11df4 <malloc@plt>
   18df0:	subs	sl, r0, #0
   18df4:	beq	18dc4 <mount@plt+0x6c64>
   18df8:	ldr	r2, [sp, #8]
   18dfc:	mov	r3, #0
   18e00:	strh	r2, [sl, #10]
   18e04:	str	r3, [sl, #4]
   18e08:	ldm	sp, {r1, r2}
   18e0c:	mov	r3, #256	; 0x100
   18e10:	strh	fp, [sl, #14]
   18e14:	add	r0, sl, #16
   18e18:	bl	11d28 <__memcpy_chk@plt>
   18e1c:	ldr	r2, [pc, #192]	; 18ee4 <mount@plt+0x6d84>
   18e20:	ldr	r3, [sp, #16]
   18e24:	add	r2, pc, r2
   18e28:	str	r3, [sl]
   18e2c:	ldr	r0, [r2, #1284]	; 0x504
   18e30:	ldr	r3, [sp, #20]
   18e34:	add	r0, r0, #1
   18e38:	add	r3, r2, r3
   18e3c:	cmp	r0, #1
   18e40:	str	sl, [r3, #256]	; 0x100
   18e44:	str	r0, [r2, #1284]	; 0x504
   18e48:	beq	18ecc <mount@plt+0x6d6c>
   18e4c:	ldr	r3, [pc, #148]	; 18ee8 <mount@plt+0x6d88>
   18e50:	ldr	r3, [r5, r3]
   18e54:	ldr	r0, [r3]
   18e58:	bl	11bd8 <fflush@plt>
   18e5c:	mov	r2, fp
   18e60:	ldrd	r0, [sp]
   18e64:	bl	11c8c <gethostbyaddr@plt>
   18e68:	cmp	r0, #0
   18e6c:	beq	18da0 <mount@plt+0x6c40>
   18e70:	ldr	r0, [r0]
   18e74:	bl	11c98 <strdup@plt>
   18e78:	str	r0, [sl, #4]
   18e7c:	cmp	r0, #0
   18e80:	beq	18dc4 <mount@plt+0x6c64>
   18e84:	add	sp, sp, #28
   18e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e8c:	ldr	r3, [r6]
   18e90:	cmp	r3, #0
   18e94:	bne	18d04 <mount@plt+0x6ba4>
   18e98:	ldr	r3, [r6, #4]
   18e9c:	cmp	r3, #0
   18ea0:	bne	18d04 <mount@plt+0x6ba4>
   18ea4:	ldr	r3, [r6, #8]
   18ea8:	cmn	r3, #65536	; 0x10000
   18eac:	bne	18d04 <mount@plt+0x6ba4>
   18eb0:	mov	r2, #4
   18eb4:	add	r3, r6, #12
   18eb8:	str	r3, [sp]
   18ebc:	str	r2, [sp, #4]
   18ec0:	str	r2, [sp, #8]
   18ec4:	mov	fp, #2
   18ec8:	b	18d1c <mount@plt+0x6bbc>
   18ecc:	bl	11d34 <sethostent@plt>
   18ed0:	b	18e4c <mount@plt+0x6cec>
   18ed4:	andeq	sl, r1, ip, lsr #6
   18ed8:	andeq	r0, r0, r4, lsr r2
   18edc:			; <UNDEFINED> instruction: 0xff00ff01
   18ee0:	andeq	sl, r1, ip, lsr r5
   18ee4:	andeq	sl, r1, r4, asr #8
   18ee8:	andeq	r0, r0, ip, lsr #4
   18eec:	ldr	r3, [pc, #36]	; 18f18 <mount@plt+0x6db8>
   18ef0:	push	{lr}		; (str lr, [sp, #-4]!)
   18ef4:	add	r3, pc, r3
   18ef8:	sub	sp, sp, #12
   18efc:	mov	ip, #256	; 0x100
   18f00:	add	r3, r3, #1280	; 0x500
   18f04:	add	r3, r3, #8
   18f08:	str	ip, [sp]
   18f0c:	bl	18cbc <mount@plt+0x6b5c>
   18f10:	add	sp, sp, #12
   18f14:	pop	{pc}		; (ldr pc, [sp], #4)
   18f18:	andeq	sl, r1, r4, ror r3
   18f1c:	cmp	r1, #0
   18f20:	cmpgt	r3, #2
   18f24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18f28:	mov	sl, r2
   18f2c:	sub	sp, sp, #8
   18f30:	ble	18f9c <mount@plt+0x6e3c>
   18f34:	ldr	r9, [pc, #108]	; 18fa8 <mount@plt+0x6e48>
   18f38:	mov	r7, r0
   18f3c:	mov	r8, r1
   18f40:	add	r9, pc, r9
   18f44:	add	r6, r2, r3
   18f48:	sub	r4, r0, #1
   18f4c:	mov	r5, r2
   18f50:	ldrb	r1, [r4, #1]
   18f54:	mov	r3, r9
   18f58:	mvn	r2, #0
   18f5c:	str	r1, [sp]
   18f60:	mov	r0, r5
   18f64:	mov	r1, #1
   18f68:	add	r5, r5, #2
   18f6c:	bl	11ed8 <__sprintf_chk@plt>
   18f70:	sub	r2, r6, r5
   18f74:	cmp	r2, #2
   18f78:	add	r3, r4, #2
   18f7c:	movgt	r2, #0
   18f80:	movle	r2, #1
   18f84:	sub	r3, r3, r7
   18f88:	cmp	r3, r8
   18f8c:	orrge	r2, r2, #1
   18f90:	cmp	r2, #0
   18f94:	add	r4, r4, #1
   18f98:	beq	18f50 <mount@plt+0x6df0>
   18f9c:	mov	r0, sl
   18fa0:	add	sp, sp, #8
   18fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18fa8:			; <UNDEFINED> instruction: 0x00008dbc
   18fac:	ldr	ip, [pc, #268]	; 190c0 <mount@plt+0x6f60>
   18fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18fb4:	add	ip, pc, ip
   18fb8:	ldr	lr, [pc, #260]	; 190c4 <mount@plt+0x6f64>
   18fbc:	mov	sl, r1
   18fc0:	sub	sp, sp, #36	; 0x24
   18fc4:	ldr	r1, [ip, lr]
   18fc8:	mov	r9, r2
   18fcc:	mov	r4, r0
   18fd0:	stmib	sp, {r1, r3}
   18fd4:	ldr	r3, [r1]
   18fd8:	mov	r2, ip
   18fdc:	str	r3, [sp, #28]
   18fe0:	bl	11e9c <strlen@plt>
   18fe4:	ands	r5, r0, #1
   18fe8:	bne	1907c <mount@plt+0x6f1c>
   18fec:	cmp	r9, #0
   18ff0:	str	r9, [sp, #12]
   18ff4:	beq	190a0 <mount@plt+0x6f40>
   18ff8:	sub	r8, sl, #1
   18ffc:	add	r7, sp, #24
   19000:	mov	r6, r5
   19004:	b	19034 <mount@plt+0x6ed4>
   19008:	ldr	r3, [sp, #20]
   1900c:	ldrb	r3, [r3]
   19010:	cmp	r3, #0
   19014:	bne	1907c <mount@plt+0x6f1c>
   19018:	add	r5, r5, #1
   1901c:	cmp	r5, r9
   19020:	strb	r0, [r8, #1]!
   19024:	add	r4, r4, #2
   19028:	beq	190a0 <mount@plt+0x6f40>
   1902c:	mov	r0, r4
   19030:	bl	11e9c <strlen@plt>
   19034:	cmp	r0, #1
   19038:	bls	1909c <mount@plt+0x6f3c>
   1903c:	mov	r2, #2
   19040:	mov	r1, r4
   19044:	mov	r0, r7
   19048:	bl	11f14 <strncpy@plt>
   1904c:	strb	r6, [sp, #26]
   19050:	bl	11ec0 <__errno_location@plt>
   19054:	mov	r2, #16
   19058:	add	r1, sp, #20
   1905c:	mov	fp, r0
   19060:	str	r6, [r0]
   19064:	mov	r0, r7
   19068:	bl	11e90 <strtoul@plt>
   1906c:	ldr	r3, [fp]
   19070:	cmp	r0, #255	; 0xff
   19074:	cmpls	r3, #0
   19078:	beq	19008 <mount@plt+0x6ea8>
   1907c:	mov	r0, #0
   19080:	ldr	r3, [sp, #4]
   19084:	ldr	r2, [sp, #28]
   19088:	ldr	r3, [r3]
   1908c:	cmp	r2, r3
   19090:	bne	190bc <mount@plt+0x6f5c>
   19094:	add	sp, sp, #36	; 0x24
   19098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1909c:	str	r5, [sp, #12]
   190a0:	ldr	r3, [sp, #8]
   190a4:	cmp	r3, #0
   190a8:	moveq	r0, sl
   190ac:	ldrne	r2, [sp, #12]
   190b0:	movne	r0, sl
   190b4:	strne	r2, [r3]
   190b8:	b	19080 <mount@plt+0x6f20>
   190bc:	bl	11ca4 <__stack_chk_fail@plt>
   190c0:	andeq	sl, r1, r4, asr #32
   190c4:	andeq	r0, r0, ip, lsl #4
   190c8:	push	{r4, r5, r6, lr}
   190cc:	subs	r6, r2, #0
   190d0:	ble	1912c <mount@plt+0x6fcc>
   190d4:	mov	r4, r0
   190d8:	add	r6, r0, r6, lsl #1
   190dc:	sub	r5, r1, #1
   190e0:	b	19114 <mount@plt+0x6fb4>
   190e4:	lsl	r0, r0, #4
   190e8:	strb	r0, [r5, #1]
   190ec:	ldrb	r0, [r4, #1]
   190f0:	bl	171c4 <mount@plt+0x5064>
   190f4:	add	r4, r4, #2
   190f8:	cmp	r0, #0
   190fc:	blt	19124 <mount@plt+0x6fc4>
   19100:	ldrb	r3, [r5, #1]!
   19104:	cmp	r4, r6
   19108:	orr	r3, r3, r0
   1910c:	strb	r3, [r5]
   19110:	beq	1912c <mount@plt+0x6fcc>
   19114:	ldrb	r0, [r4]
   19118:	bl	171c4 <mount@plt+0x5064>
   1911c:	cmp	r0, #0
   19120:	bge	190e4 <mount@plt+0x6f84>
   19124:	mvn	r0, #0
   19128:	pop	{r4, r5, r6, pc}
   1912c:	mov	r0, #0
   19130:	pop	{r4, r5, r6, pc}
   19134:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19138:	rev16	ip, r0
   1913c:	ldr	sl, [pc, #144]	; 191d4 <mount@plt+0x7074>
   19140:	ldr	r8, [pc, #144]	; 191d8 <mount@plt+0x7078>
   19144:	sub	sp, sp, #24
   19148:	mov	r7, r3
   1914c:	add	sl, pc, sl
   19150:	add	r8, pc, r8
   19154:	mov	r6, r2
   19158:	uxth	r3, ip
   1915c:	add	r5, sp, #16
   19160:	add	r9, sp, #22
   19164:	mov	r4, #0
   19168:	strd	r0, [sp, #16]
   1916c:	stmib	sp, {r3, sl}
   19170:	sub	r1, r7, r4
   19174:	mvn	r3, #0
   19178:	add	r0, r6, r4
   1917c:	str	r8, [sp]
   19180:	mov	r2, #1
   19184:	bl	1213c <__snprintf_chk@plt>
   19188:	ldrh	r3, [r5, #2]!
   1918c:	rev16	r3, r3
   19190:	cmp	r9, r5
   19194:	uxth	r3, r3
   19198:	add	r4, r4, r0
   1919c:	bne	1916c <mount@plt+0x700c>
   191a0:	ldr	r2, [pc, #52]	; 191dc <mount@plt+0x707c>
   191a4:	str	r3, [sp, #4]
   191a8:	add	r2, pc, r2
   191ac:	str	r2, [sp, #8]
   191b0:	str	r8, [sp]
   191b4:	sub	r1, r7, r4
   191b8:	add	r0, r6, r4
   191bc:	mvn	r3, #0
   191c0:	mov	r2, #1
   191c4:	bl	1213c <__snprintf_chk@plt>
   191c8:	add	r0, r0, r4
   191cc:	add	sp, sp, #24
   191d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   191d4:	andeq	r6, r0, r4, ror #22
   191d8:			; <UNDEFINED> instruction: 0x00008bb4
   191dc:	andeq	r9, r0, ip, ror #2
   191e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   191e4:	subs	r6, r1, #0
   191e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   191ec:	mov	r5, r0
   191f0:	mov	r7, r2
   191f4:	bl	11e78 <__ctype_b_loc@plt>
   191f8:	ldr	r9, [pc, #116]	; 19274 <mount@plt+0x7114>
   191fc:	add	r6, r5, r6
   19200:	add	r9, pc, r9
   19204:	sub	r6, r6, #1
   19208:	sub	r5, r5, #1
   1920c:	mov	r8, r0
   19210:	b	1922c <mount@plt+0x70cc>
   19214:	mov	r2, r4
   19218:	mov	r1, r9
   1921c:	mov	r0, #1
   19220:	bl	11f44 <__printf_chk@plt>
   19224:	cmp	r6, r5
   19228:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1922c:	ldrb	r4, [r5, #1]!
   19230:	ldr	ip, [r8]
   19234:	mov	r0, r7
   19238:	subs	r3, r4, #92	; 0x5c
   1923c:	lsl	r2, r4, #1
   19240:	movne	r3, #1
   19244:	ldrh	ip, [ip, r2]
   19248:	mov	r1, r4
   1924c:	ands	r3, r3, ip, lsr #14
   19250:	beq	19214 <mount@plt+0x70b4>
   19254:	bl	11ea8 <strchr@plt>
   19258:	cmp	r0, #0
   1925c:	bne	19214 <mount@plt+0x70b4>
   19260:	mov	r0, r4
   19264:	bl	11f08 <putchar@plt>
   19268:	cmp	r6, r5
   1926c:	bne	1922c <mount@plt+0x70cc>
   19270:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19274:	andeq	r8, r0, ip, lsl #22
   19278:	push	{r4, r5, r6, r7, lr}
   1927c:	sub	sp, sp, #68	; 0x44
   19280:	ldr	r4, [pc, #212]	; 1935c <mount@plt+0x71fc>
   19284:	ldr	r3, [pc, #212]	; 19360 <mount@plt+0x7200>
   19288:	add	r4, pc, r4
   1928c:	add	r5, sp, #12
   19290:	ldr	r6, [r4, r3]
   19294:	mov	r1, #0
   19298:	mov	r7, r0
   1929c:	ldr	r3, [r6]
   192a0:	mov	r0, r5
   192a4:	str	r3, [sp, #60]	; 0x3c
   192a8:	bl	11d7c <gettimeofday@plt>
   192ac:	mov	r0, r5
   192b0:	bl	11e30 <localtime@plt>
   192b4:	ldr	r2, [pc, #168]	; 19364 <mount@plt+0x7204>
   192b8:	ldr	r2, [r4, r2]
   192bc:	ldr	r5, [r2]
   192c0:	cmp	r5, #0
   192c4:	beq	19320 <mount@plt+0x71c0>
   192c8:	ldr	r2, [pc, #152]	; 19368 <mount@plt+0x7208>
   192cc:	add	r4, sp, #20
   192d0:	mov	r3, r0
   192d4:	add	r2, pc, r2
   192d8:	mov	r1, #40	; 0x28
   192dc:	mov	r0, r4
   192e0:	bl	11e18 <strftime@plt>
   192e4:	ldr	r2, [sp, #16]
   192e8:	mov	r3, r4
   192ec:	str	r2, [sp]
   192f0:	ldr	r2, [pc, #116]	; 1936c <mount@plt+0x720c>
   192f4:	mov	r0, r7
   192f8:	add	r2, pc, r2
   192fc:	mov	r1, #1
   19300:	bl	11f74 <__fprintf_chk@plt>
   19304:	ldr	r2, [sp, #60]	; 0x3c
   19308:	ldr	r3, [r6]
   1930c:	mov	r0, #0
   19310:	cmp	r2, r3
   19314:	bne	19358 <mount@plt+0x71f8>
   19318:	add	sp, sp, #68	; 0x44
   1931c:	pop	{r4, r5, r6, r7, pc}
   19320:	bl	11d58 <asctime@plt>
   19324:	mov	r4, r0
   19328:	bl	11e9c <strlen@plt>
   1932c:	mov	r3, r4
   19330:	ldr	r2, [pc, #56]	; 19370 <mount@plt+0x7210>
   19334:	mov	r1, #1
   19338:	add	r2, pc, r2
   1933c:	add	r4, r4, r0
   19340:	mov	r0, r7
   19344:	strb	r5, [r4, #-1]
   19348:	ldr	ip, [sp, #16]
   1934c:	str	ip, [sp]
   19350:	bl	11f74 <__fprintf_chk@plt>
   19354:	b	19304 <mount@plt+0x71a4>
   19358:	bl	11ca4 <__stack_chk_fail@plt>
   1935c:	andeq	r9, r1, r0, ror sp
   19360:	andeq	r0, r0, ip, lsl #4
   19364:	andeq	r0, r0, r0, lsr #4
   19368:	andeq	r8, r0, r0, asr #20
   1936c:	andeq	r8, r0, r0, lsr sl
   19370:	strdeq	r8, [r0], -ip
   19374:	ldr	r3, [pc, #388]	; 19500 <mount@plt+0x73a0>
   19378:	ldr	ip, [pc, #388]	; 19504 <mount@plt+0x73a4>
   1937c:	add	r3, pc, r3
   19380:	push	{r4, r5, r6, r7, r8, r9, lr}
   19384:	mov	r7, r0
   19388:	ldr	r5, [r3, ip]
   1938c:	ldr	r0, [r2, #20]
   19390:	sub	sp, sp, #92	; 0x5c
   19394:	ldr	r3, [r5]
   19398:	cmp	r0, #0
   1939c:	mov	r6, r1
   193a0:	str	r3, [sp, #84]	; 0x54
   193a4:	moveq	r4, r0
   193a8:	beq	19408 <mount@plt+0x72a8>
   193ac:	ldr	r8, [r0, #4]
   193b0:	cmp	r8, #0
   193b4:	beq	19440 <mount@plt+0x72e0>
   193b8:	ldr	r4, [r2, #148]	; 0x94
   193bc:	cmp	r4, #0
   193c0:	beq	194a0 <mount@plt+0x7340>
   193c4:	bl	1baa0 <mount@plt+0x9940>
   193c8:	subs	r4, r0, #0
   193cc:	bne	19458 <mount@plt+0x72f8>
   193d0:	mov	r0, r8
   193d4:	bl	1a628 <mount@plt+0x84c8>
   193d8:	mov	r9, r0
   193dc:	cmp	r9, #0
   193e0:	beq	19408 <mount@plt+0x72a8>
   193e4:	ldr	r2, [pc, #284]	; 19508 <mount@plt+0x73a8>
   193e8:	mov	r3, #64	; 0x40
   193ec:	add	r2, pc, r2
   193f0:	add	r0, sp, #20
   193f4:	stm	sp, {r2, r6, r9}
   193f8:	mov	r1, r3
   193fc:	mov	r2, #1
   19400:	mov	r6, r0
   19404:	bl	1213c <__snprintf_chk@plt>
   19408:	ldr	r2, [pc, #252]	; 1950c <mount@plt+0x73ac>
   1940c:	mov	r3, r7
   19410:	add	r2, pc, r2
   19414:	mov	r0, #4
   19418:	str	r6, [sp]
   1941c:	mov	r1, #0
   19420:	bl	1c080 <mount@plt+0x9f20>
   19424:	ldr	r2, [sp, #84]	; 0x54
   19428:	ldr	r3, [r5]
   1942c:	mov	r0, r4
   19430:	cmp	r2, r3
   19434:	bne	194fc <mount@plt+0x739c>
   19438:	add	sp, sp, #92	; 0x5c
   1943c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19440:	bl	1baa0 <mount@plt+0x9940>
   19444:	subs	r4, r0, #0
   19448:	bne	1947c <mount@plt+0x731c>
   1944c:	ldr	r9, [pc, #188]	; 19510 <mount@plt+0x73b0>
   19450:	add	r9, pc, r9
   19454:	b	193e4 <mount@plt+0x7284>
   19458:	ldr	r2, [pc, #180]	; 19514 <mount@plt+0x73b4>
   1945c:	str	r8, [sp]
   19460:	mov	r3, #0
   19464:	add	r2, pc, r2
   19468:	mov	r1, #6
   1946c:	mov	r0, #2
   19470:	bl	1bbd8 <mount@plt+0x9a78>
   19474:	mov	r4, #0
   19478:	b	19408 <mount@plt+0x72a8>
   1947c:	ldr	r2, [pc, #148]	; 19518 <mount@plt+0x73b8>
   19480:	str	r8, [sp]
   19484:	mov	r3, r8
   19488:	add	r2, pc, r2
   1948c:	mov	r1, #6
   19490:	mov	r0, #2
   19494:	mov	r4, r8
   19498:	bl	1c3d8 <mount@plt+0xa278>
   1949c:	b	19408 <mount@plt+0x72a8>
   194a0:	mov	r0, r8
   194a4:	bl	1a670 <mount@plt+0x8510>
   194a8:	mov	r9, r0
   194ac:	bl	1baa0 <mount@plt+0x9940>
   194b0:	cmp	r0, #0
   194b4:	bne	194cc <mount@plt+0x736c>
   194b8:	mov	r0, r8
   194bc:	bl	1a78c <mount@plt+0x862c>
   194c0:	mvn	r0, r0
   194c4:	and	r4, r0, #1
   194c8:	b	193dc <mount@plt+0x727c>
   194cc:	ldr	r2, [pc, #72]	; 1951c <mount@plt+0x73bc>
   194d0:	mov	r3, r4
   194d4:	add	r2, pc, r2
   194d8:	mov	r1, #6
   194dc:	mov	r0, #2
   194e0:	str	r9, [sp]
   194e4:	bl	1c080 <mount@plt+0x9f20>
   194e8:	mov	r0, r8
   194ec:	bl	1a78c <mount@plt+0x862c>
   194f0:	mvn	r0, r0
   194f4:	and	r4, r0, #1
   194f8:	b	19408 <mount@plt+0x72a8>
   194fc:	bl	11ca4 <__stack_chk_fail@plt>
   19500:	andeq	r9, r1, ip, ror ip
   19504:	andeq	r0, r0, ip, lsl #4
   19508:	andeq	r8, r0, r4, ror r9
   1950c:	andeq	r6, r0, r0, lsl sp
   19510:	strdeq	r8, [r0], -ip
   19514:	strdeq	r8, [r0], -r0
   19518:	strdeq	r8, [r0], -r0
   1951c:	andeq	r8, r0, r4, lsr #27
   19520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19524:	sub	sp, sp, #44	; 0x2c
   19528:	ldr	r4, [pc, #468]	; 19704 <mount@plt+0x75a4>
   1952c:	ldr	ip, [pc, #468]	; 19708 <mount@plt+0x75a8>
   19530:	add	r4, pc, r4
   19534:	str	r4, [sp, #20]
   19538:	mov	r3, r2
   1953c:	str	r2, [sp]
   19540:	ldr	r2, [r4, ip]
   19544:	mov	r7, r0
   19548:	mov	ip, r2
   1954c:	str	r2, [sp, #16]
   19550:	ldr	ip, [ip]
   19554:	mov	r2, #10
   19558:	str	r1, [sp, #4]
   1955c:	str	ip, [sp, #36]	; 0x24
   19560:	bl	11b90 <__getdelim@plt>
   19564:	mov	r2, r4
   19568:	subs	r9, r0, #0
   1956c:	blt	19680 <mount@plt+0x7520>
   19570:	ldr	r3, [pc, #404]	; 1970c <mount@plt+0x75ac>
   19574:	ldr	r4, [r7]
   19578:	mov	r1, #35	; 0x23
   1957c:	ldr	r8, [r2, r3]
   19580:	mov	r0, r4
   19584:	mov	r5, #0
   19588:	ldr	r3, [r8]
   1958c:	add	r3, r3, #1
   19590:	str	r3, [r8]
   19594:	bl	11ea8 <strchr@plt>
   19598:	cmp	r0, #0
   1959c:	movne	r3, #0
   195a0:	strbne	r3, [r0]
   195a4:	ldr	r3, [pc, #356]	; 19710 <mount@plt+0x75b0>
   195a8:	ldrne	r4, [r7]
   195ac:	add	r3, pc, r3
   195b0:	str	r3, [sp, #8]
   195b4:	add	r3, sp, #32
   195b8:	str	r3, [sp, #12]
   195bc:	mov	r0, r4
   195c0:	b	19670 <mount@plt+0x7510>
   195c4:	ldr	r3, [sp]
   195c8:	mov	r2, #10
   195cc:	ldr	r1, [sp, #12]
   195d0:	add	r0, sp, #28
   195d4:	str	r5, [sp, #28]
   195d8:	str	r5, [sp, #32]
   195dc:	bl	11b90 <__getdelim@plt>
   195e0:	subs	r4, r0, #0
   195e4:	blt	196a0 <mount@plt+0x7540>
   195e8:	ldr	r3, [r8]
   195ec:	mov	r1, #35	; 0x23
   195f0:	add	r3, r3, #1
   195f4:	str	r3, [r8]
   195f8:	strb	r5, [r6]
   195fc:	ldr	r6, [sp, #28]
   19600:	mov	r0, r6
   19604:	bl	11ea8 <strchr@plt>
   19608:	cmp	r0, #0
   1960c:	strbne	r5, [r0]
   19610:	ldr	fp, [r7]
   19614:	ldrne	r6, [sp, #28]
   19618:	mov	r0, fp
   1961c:	bl	11e9c <strlen@plt>
   19620:	mov	sl, r0
   19624:	mov	r0, r6
   19628:	bl	11e9c <strlen@plt>
   1962c:	ldr	r3, [sp, #4]
   19630:	add	r1, sl, r0
   19634:	add	r1, r1, #1
   19638:	str	r1, [r3]
   1963c:	mov	r0, fp
   19640:	bl	11cd4 <realloc@plt>
   19644:	cmp	r0, #0
   19648:	mov	r6, r0
   1964c:	str	r0, [r7]
   19650:	beq	196cc <mount@plt+0x756c>
   19654:	ldr	r1, [sp, #28]
   19658:	bl	11d4c <strcat@plt>
   1965c:	ldr	r0, [sp, #28]
   19660:	sub	r4, r4, #2
   19664:	bl	11c14 <free@plt>
   19668:	ldr	r0, [r7]
   1966c:	add	r9, r9, r4
   19670:	ldr	r1, [sp, #8]
   19674:	bl	11b78 <strstr@plt>
   19678:	subs	r6, r0, #0
   1967c:	bne	195c4 <mount@plt+0x7464>
   19680:	ldr	r3, [sp, #16]
   19684:	ldr	r2, [sp, #36]	; 0x24
   19688:	mov	r0, r9
   1968c:	ldr	r3, [r3]
   19690:	cmp	r2, r3
   19694:	bne	19700 <mount@plt+0x75a0>
   19698:	add	sp, sp, #44	; 0x2c
   1969c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196a0:	ldr	r0, [sp, #20]
   196a4:	ldr	r3, [pc, #104]	; 19714 <mount@plt+0x75b4>
   196a8:	mov	r2, #26
   196ac:	mov	r1, #1
   196b0:	ldr	r3, [r0, r3]
   196b4:	ldr	r0, [pc, #92]	; 19718 <mount@plt+0x75b8>
   196b8:	mov	r9, r4
   196bc:	ldr	r3, [r3]
   196c0:	add	r0, pc, r0
   196c4:	bl	11d40 <fwrite@plt>
   196c8:	b	19680 <mount@plt+0x7520>
   196cc:	ldr	r0, [sp, #20]
   196d0:	ldr	r3, [pc, #60]	; 19714 <mount@plt+0x75b4>
   196d4:	mov	r2, #14
   196d8:	mov	r1, #1
   196dc:	ldr	r3, [r0, r3]
   196e0:	ldr	r0, [pc, #52]	; 1971c <mount@plt+0x75bc>
   196e4:	mvn	r9, #0
   196e8:	ldr	r3, [r3]
   196ec:	add	r0, pc, r0
   196f0:	bl	11d40 <fwrite@plt>
   196f4:	ldr	r3, [sp, #4]
   196f8:	str	r6, [r3]
   196fc:	b	19680 <mount@plt+0x7520>
   19700:	bl	11ca4 <__stack_chk_fail@plt>
   19704:	andeq	r9, r1, r8, asr #21
   19708:	andeq	r0, r0, ip, lsl #4
   1970c:	andeq	r0, r0, r0, lsl r2
   19710:	andeq	r8, r0, r8, ror #15
   19714:	andeq	r0, r0, r8, lsl r2
   19718:	andeq	r8, r0, r8, lsr #13
   1971c:	muleq	r0, r8, r6
   19720:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19724:	mov	sl, r1
   19728:	ldrb	r3, [r0]
   1972c:	ldr	r1, [pc, #296]	; 1985c <mount@plt+0x76fc>
   19730:	sub	sp, sp, #12
   19734:	add	r1, pc, r1
   19738:	cmp	r3, #0
   1973c:	str	r1, [sp, #4]
   19740:	beq	197fc <mount@plt+0x769c>
   19744:	ldr	r6, [pc, #276]	; 19860 <mount@plt+0x7700>
   19748:	mov	fp, #0
   1974c:	add	r6, pc, r6
   19750:	mov	r4, r0
   19754:	sub	r7, r2, #1
   19758:	add	r6, r6, #108	; 0x6c
   1975c:	mov	r9, fp
   19760:	sub	r8, sl, #4
   19764:	b	19790 <mount@plt+0x7630>
   19768:	add	r0, r5, #1
   1976c:	str	r0, [r8, fp, lsl #2]
   19770:	bl	11ea8 <strchr@plt>
   19774:	subs	r2, r0, #0
   19778:	beq	19830 <mount@plt+0x76d0>
   1977c:	mov	r4, r2
   19780:	strb	r9, [r4], #1
   19784:	ldrb	r2, [r2, #1]
   19788:	cmp	r2, #0
   1978c:	beq	197e4 <mount@plt+0x7684>
   19790:	mov	r1, r6
   19794:	mov	r0, r4
   19798:	bl	12148 <strspn@plt>
   1979c:	ldrb	r1, [r4, r0]
   197a0:	add	r5, r4, r0
   197a4:	cmp	r1, #0
   197a8:	beq	197e4 <mount@plt+0x7684>
   197ac:	cmp	r7, fp
   197b0:	ble	19804 <mount@plt+0x76a4>
   197b4:	cmp	r1, #34	; 0x22
   197b8:	cmpne	r1, #39	; 0x27
   197bc:	add	fp, fp, #1
   197c0:	beq	19768 <mount@plt+0x7608>
   197c4:	mov	r1, r6
   197c8:	str	r5, [r8, fp, lsl #2]
   197cc:	mov	r0, r5
   197d0:	bl	11bcc <strcspn@plt>
   197d4:	ldrb	r1, [r5, r0]
   197d8:	add	r2, r5, r0
   197dc:	cmp	r1, #0
   197e0:	bne	1977c <mount@plt+0x761c>
   197e4:	add	sl, sl, fp, lsl #2
   197e8:	mov	r2, #0
   197ec:	mov	r0, fp
   197f0:	str	r2, [sl]
   197f4:	add	sp, sp, #12
   197f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   197fc:	mov	fp, r3
   19800:	b	197e8 <mount@plt+0x7688>
   19804:	ldr	r0, [sp, #4]
   19808:	ldr	r3, [pc, #84]	; 19864 <mount@plt+0x7704>
   1980c:	mov	r2, #30
   19810:	mov	r1, #1
   19814:	ldr	r3, [r0, r3]
   19818:	ldr	r0, [pc, #72]	; 19868 <mount@plt+0x7708>
   1981c:	ldr	r3, [r3]
   19820:	add	r0, pc, r0
   19824:	bl	11d40 <fwrite@plt>
   19828:	mov	r0, #1
   1982c:	bl	11e84 <exit@plt>
   19830:	ldr	r0, [sp, #4]
   19834:	ldr	r3, [pc, #40]	; 19864 <mount@plt+0x7704>
   19838:	mov	r2, #27
   1983c:	mov	r1, #1
   19840:	ldr	r3, [r0, r3]
   19844:	ldr	r0, [pc, #32]	; 1986c <mount@plt+0x770c>
   19848:	ldr	r3, [r3]
   1984c:	add	r0, pc, r0
   19850:	bl	11d40 <fwrite@plt>
   19854:	mov	r0, #1
   19858:	bl	11e84 <exit@plt>
   1985c:	andeq	r9, r1, r4, asr #17
   19860:	muleq	r0, r0, r1
   19864:	andeq	r0, r0, r8, lsl r2
   19868:	andeq	r8, r0, r8, ror r5
   1986c:	andeq	r8, r0, ip, ror #10
   19870:	ldr	r3, [pc, #128]	; 198f8 <mount@plt+0x7798>
   19874:	ldr	r2, [pc, #128]	; 198fc <mount@plt+0x779c>
   19878:	add	r3, pc, r3
   1987c:	push	{r4, r5, r6, r7, lr}
   19880:	sub	sp, sp, #20
   19884:	ldr	r5, [r3, r2]
   19888:	ldr	ip, [r1, #16]
   1988c:	mov	r6, r0
   19890:	ldr	r2, [r5]
   19894:	add	r0, sp, #8
   19898:	ldr	r7, [r1, #20]
   1989c:	str	ip, [sp, #8]
   198a0:	str	r2, [sp, #12]
   198a4:	bl	11e30 <localtime@plt>
   198a8:	bl	11d58 <asctime@plt>
   198ac:	mov	r4, r0
   198b0:	bl	11e9c <strlen@plt>
   198b4:	mov	r3, r4
   198b8:	ldr	r2, [pc, #64]	; 19900 <mount@plt+0x77a0>
   198bc:	mov	ip, #0
   198c0:	add	r2, pc, r2
   198c4:	mov	r1, #1
   198c8:	add	r4, r4, r0
   198cc:	mov	r0, r6
   198d0:	strb	ip, [r4, #-1]
   198d4:	str	r7, [sp]
   198d8:	bl	11f74 <__fprintf_chk@plt>
   198dc:	ldr	r2, [sp, #12]
   198e0:	ldr	r3, [r5]
   198e4:	cmp	r2, r3
   198e8:	bne	198f4 <mount@plt+0x7794>
   198ec:	add	sp, sp, #20
   198f0:	pop	{r4, r5, r6, r7, pc}
   198f4:	bl	11ca4 <__stack_chk_fail@plt>
   198f8:	andeq	r9, r1, r0, lsl #15
   198fc:	andeq	r0, r0, ip, lsl #4
   19900:	andeq	r8, r0, r4, lsl r5
   19904:	ldr	r3, [pc, #96]	; 1996c <mount@plt+0x780c>
   19908:	ldr	ip, [pc, #96]	; 19970 <mount@plt+0x7810>
   1990c:	add	r3, pc, r3
   19910:	push	{r4, lr}
   19914:	sub	sp, sp, #16
   19918:	ldr	r4, [r3, ip]
   1991c:	cmp	r2, #0
   19920:	strd	r0, [sp, #4]
   19924:	ldr	r3, [r4]
   19928:	add	r1, sp, #4
   1992c:	str	r3, [sp, #12]
   19930:	bne	19958 <mount@plt+0x77f8>
   19934:	ldr	r0, [pc, #56]	; 19974 <mount@plt+0x7814>
   19938:	add	r0, pc, r0
   1993c:	bl	1b190 <mount@plt+0x9030>
   19940:	ldr	r2, [sp, #12]
   19944:	ldr	r3, [r4]
   19948:	cmp	r2, r3
   1994c:	bne	19968 <mount@plt+0x7808>
   19950:	add	sp, sp, #16
   19954:	pop	{r4, pc}
   19958:	ldr	r0, [pc, #24]	; 19978 <mount@plt+0x7818>
   1995c:	add	r0, pc, r0
   19960:	bl	1b190 <mount@plt+0x9030>
   19964:	b	19940 <mount@plt+0x77e0>
   19968:	bl	11ca4 <__stack_chk_fail@plt>
   1996c:	andeq	r9, r1, ip, ror #13
   19970:	andeq	r0, r0, ip, lsl #4
   19974:			; <UNDEFINED> instruction: 0xffffd470
   19978:			; <UNDEFINED> instruction: 0xffffd480
   1997c:	push	{r4, lr}
   19980:	sub	sp, sp, #8
   19984:	ldr	r3, [pc, #36]	; 199b0 <mount@plt+0x7850>
   19988:	mov	r4, r1
   1998c:	str	r0, [sp]
   19990:	add	r3, pc, r3
   19994:	mov	r0, r1
   19998:	mvn	r2, #0
   1999c:	mov	r1, #1
   199a0:	bl	11ed8 <__sprintf_chk@plt>
   199a4:	mov	r0, r4
   199a8:	add	sp, sp, #8
   199ac:	pop	{r4, pc}
   199b0:	andeq	r8, r0, ip, asr r4
   199b4:	ldr	r3, [pc, #212]	; 19a90 <mount@plt+0x7930>
   199b8:	ldr	r2, [pc, #212]	; 19a94 <mount@plt+0x7934>
   199bc:	add	r3, pc, r3
   199c0:	push	{r4, r5, r6, r7, r8, lr}
   199c4:	sub	sp, sp, #8
   199c8:	ldr	r6, [r3, r2]
   199cc:	mov	r7, r0
   199d0:	mov	r0, r1
   199d4:	ldr	r3, [r6]
   199d8:	mov	r4, r1
   199dc:	str	r3, [sp, #4]
   199e0:	bl	11e9c <strlen@plt>
   199e4:	cmp	r0, #23
   199e8:	bne	19a70 <mount@plt+0x7910>
   199ec:	mov	r3, r4
   199f0:	add	r0, r4, #21
   199f4:	ldrb	r2, [r3, #2]
   199f8:	cmp	r2, #58	; 0x3a
   199fc:	bne	19a70 <mount@plt+0x7910>
   19a00:	add	r3, r3, #3
   19a04:	cmp	r3, r0
   19a08:	bne	199f4 <mount@plt+0x7894>
   19a0c:	mov	r2, #0
   19a10:	mov	r3, #0
   19a14:	add	r4, r4, #2
   19a18:	mov	r5, #56	; 0x38
   19a1c:	mov	r8, sp
   19a20:	strd	r2, [r7]
   19a24:	mov	r2, #16
   19a28:	mov	r1, r8
   19a2c:	sub	r0, r4, #2
   19a30:	bl	11e90 <strtoul@plt>
   19a34:	ldr	r3, [sp]
   19a38:	cmp	r0, #255	; 0xff
   19a3c:	cmpls	r3, r4
   19a40:	movne	r3, #1
   19a44:	moveq	r3, #0
   19a48:	bne	19a70 <mount@plt+0x7910>
   19a4c:	ldr	r2, [r7]
   19a50:	add	r4, r4, #3
   19a54:	orr	r0, r2, r0, lsl r5
   19a58:	sub	r5, r5, #8
   19a5c:	cmn	r5, #8
   19a60:	str	r0, [r7]
   19a64:	bne	19a24 <mount@plt+0x78c4>
   19a68:	mov	r0, r3
   19a6c:	b	19a74 <mount@plt+0x7914>
   19a70:	mvn	r0, #0
   19a74:	ldr	r2, [sp, #4]
   19a78:	ldr	r3, [r6]
   19a7c:	cmp	r2, r3
   19a80:	bne	19a8c <mount@plt+0x792c>
   19a84:	add	sp, sp, #8
   19a88:	pop	{r4, r5, r6, r7, r8, pc}
   19a8c:	bl	11ca4 <__stack_chk_fail@plt>
   19a90:	andeq	r9, r1, ip, lsr r6
   19a94:	andeq	r0, r0, ip, lsl #4
   19a98:	cmp	r0, #5
   19a9c:	bne	19ab0 <mount@plt+0x7950>
   19aa0:	cmp	r1, #128	; 0x80
   19aa4:	beq	19ab8 <mount@plt+0x7958>
   19aa8:	cmp	r1, #129	; 0x81
   19aac:	moveq	r1, #10
   19ab0:	mov	r0, r1
   19ab4:	bx	lr
   19ab8:	mov	r1, #2
   19abc:	b	19ab0 <mount@plt+0x7950>
   19ac0:	ldr	r3, [pc, #412]	; 19c64 <mount@plt+0x7b04>
   19ac4:	ldr	r2, [pc, #412]	; 19c68 <mount@plt+0x7b08>
   19ac8:	add	r3, pc, r3
   19acc:	push	{r4, r5, r6, r7, r8, lr}
   19ad0:	sub	sp, sp, #1296	; 0x510
   19ad4:	ldr	r6, [r3, r2]
   19ad8:	ldr	r3, [r1, #92]	; 0x5c
   19adc:	mov	r4, r0
   19ae0:	ldr	r2, [r6]
   19ae4:	cmp	r3, #0
   19ae8:	str	r2, [sp, #1292]	; 0x50c
   19aec:	beq	19b58 <mount@plt+0x79f8>
   19af0:	ldrh	r5, [r3], #4
   19af4:	sub	r5, r5, #4
   19af8:	cmp	r5, #191	; 0xbf
   19afc:	bgt	19b30 <mount@plt+0x79d0>
   19b00:	rsb	r2, r5, #192	; 0xc0
   19b04:	mov	r1, #0
   19b08:	add	r0, r0, r5
   19b0c:	str	r3, [sp, #4]
   19b10:	bl	11efc <memset@plt>
   19b14:	ldr	r3, [sp, #4]
   19b18:	mov	r2, r5
   19b1c:	mov	r1, r3
   19b20:	mov	r0, r4
   19b24:	bl	11c44 <memcpy@plt>
   19b28:	mov	r0, #192	; 0xc0
   19b2c:	b	19b40 <mount@plt+0x79e0>
   19b30:	mov	r1, r3
   19b34:	mov	r2, #192	; 0xc0
   19b38:	bl	11c44 <memcpy@plt>
   19b3c:	mov	r0, #192	; 0xc0
   19b40:	ldr	r2, [sp, #1292]	; 0x50c
   19b44:	ldr	r3, [r6]
   19b48:	cmp	r2, r3
   19b4c:	bne	19c38 <mount@plt+0x7ad8>
   19b50:	add	sp, sp, #1296	; 0x510
   19b54:	pop	{r4, r5, r6, r7, r8, pc}
   19b58:	ldr	r7, [r1, #28]
   19b5c:	cmp	r7, #0
   19b60:	beq	19bb0 <mount@plt+0x7a50>
   19b64:	ldrh	r8, [r7], #4
   19b68:	sub	r8, r8, #4
   19b6c:	cmp	r8, #95	; 0x5f
   19b70:	ble	19c3c <mount@plt+0x7adc>
   19b74:	add	r5, sp, #8
   19b78:	mov	r1, r7
   19b7c:	mov	r0, r5
   19b80:	mov	r2, #96	; 0x60
   19b84:	bl	11c44 <memcpy@plt>
   19b88:	mov	r0, r5
   19b8c:	add	r1, r4, #192	; 0xc0
   19b90:	mov	r2, #0
   19b94:	ldr	r3, [r0], #4
   19b98:	str	r3, [r4], #8
   19b9c:	cmp	r4, r1
   19ba0:	str	r2, [r4, #-4]
   19ba4:	bne	19b94 <mount@plt+0x7a34>
   19ba8:	mov	r0, #96	; 0x60
   19bac:	b	19b40 <mount@plt+0x79e0>
   19bb0:	ldr	r2, [r1, #48]	; 0x30
   19bb4:	cmp	r2, #0
   19bb8:	beq	19c30 <mount@plt+0x7ad0>
   19bbc:	ldrh	r3, [r2], #4
   19bc0:	mov	r1, #296	; 0x128
   19bc4:	add	r0, sp, #104	; 0x68
   19bc8:	sub	r3, r3, #4
   19bcc:	bl	1f4a8 <mount@plt+0xd348>
   19bd0:	ldr	r5, [sp, #116]	; 0x74
   19bd4:	cmp	r5, #0
   19bd8:	beq	19b28 <mount@plt+0x79c8>
   19bdc:	mov	r2, #192	; 0xc0
   19be0:	mov	r1, r7
   19be4:	mov	r0, r4
   19be8:	bl	11efc <memset@plt>
   19bec:	ldrd	r2, [r5, #12]
   19bf0:	strd	r2, [r4]
   19bf4:	ldrd	r2, [r5, #20]
   19bf8:	strd	r2, [r4, #16]
   19bfc:	ldrd	r2, [r5, #44]	; 0x2c
   19c00:	strd	r2, [r4, #8]
   19c04:	ldrd	r2, [r5, #52]	; 0x34
   19c08:	strd	r2, [r4, #24]
   19c0c:	ldrd	r2, [r5, #108]	; 0x6c
   19c10:	strd	r2, [r4, #32]
   19c14:	ldrd	r2, [r5, #116]	; 0x74
   19c18:	strd	r2, [r4, #40]	; 0x28
   19c1c:	ldrd	r2, [r5, #188]	; 0xbc
   19c20:	strd	r2, [r4, #64]	; 0x40
   19c24:	ldrd	r2, [r5, #252]	; 0xfc
   19c28:	strd	r2, [r4, #104]	; 0x68
   19c2c:	b	19b28 <mount@plt+0x79c8>
   19c30:	mvn	r0, #0
   19c34:	b	19b40 <mount@plt+0x79e0>
   19c38:	bl	11ca4 <__stack_chk_fail@plt>
   19c3c:	add	r5, sp, #8
   19c40:	mov	r1, r3
   19c44:	rsb	r2, r8, #96	; 0x60
   19c48:	add	r0, r5, r8
   19c4c:	bl	11efc <memset@plt>
   19c50:	mov	r2, r8
   19c54:	mov	r1, r7
   19c58:	mov	r0, r5
   19c5c:	bl	11c44 <memcpy@plt>
   19c60:	b	19b88 <mount@plt+0x7a28>
   19c64:	andeq	r9, r1, r0, lsr r5
   19c68:	andeq	r0, r0, ip, lsl #4
   19c6c:	push	{r4, r5, r6, r7, r8, lr}
   19c70:	mov	r7, r0
   19c74:	mov	r0, r1
   19c78:	mov	r4, r2
   19c7c:	mov	r6, r1
   19c80:	bl	11e9c <strlen@plt>
   19c84:	cmp	r4, #0
   19c88:	mov	r5, r0
   19c8c:	bne	19c98 <mount@plt+0x7b38>
   19c90:	mov	r0, r5
   19c94:	pop	{r4, r5, r6, r7, r8, pc}
   19c98:	sub	r4, r4, #1
   19c9c:	cmp	r4, r0
   19ca0:	movcs	r4, r0
   19ca4:	mov	r1, r6
   19ca8:	mov	r2, r4
   19cac:	mov	r0, r7
   19cb0:	bl	11c44 <memcpy@plt>
   19cb4:	mov	r3, #0
   19cb8:	strb	r3, [r7, r4]
   19cbc:	mov	r0, r5
   19cc0:	pop	{r4, r5, r6, r7, r8, pc}
   19cc4:	push	{r4, r5, r6, r7, r8, lr}
   19cc8:	mov	r5, r2
   19ccc:	mov	r6, r1
   19cd0:	mov	r7, r0
   19cd4:	bl	11e9c <strlen@plt>
   19cd8:	cmp	r0, r5
   19cdc:	mov	r4, r0
   19ce0:	bcc	19cf4 <mount@plt+0x7b94>
   19ce4:	mov	r0, r6
   19ce8:	bl	11e9c <strlen@plt>
   19cec:	add	r0, r0, r4
   19cf0:	pop	{r4, r5, r6, r7, r8, pc}
   19cf4:	sub	r2, r5, r0
   19cf8:	mov	r1, r6
   19cfc:	add	r0, r7, r0
   19d00:	bl	19c6c <mount@plt+0x7b0c>
   19d04:	add	r0, r0, r4
   19d08:	pop	{r4, r5, r6, r7, r8, pc}
   19d0c:	ldr	r3, [pc, #176]	; 19dc4 <mount@plt+0x7c64>
   19d10:	ldr	r2, [pc, #176]	; 19dc8 <mount@plt+0x7c68>
   19d14:	add	r3, pc, r3
   19d18:	push	{r4, r5, lr}
   19d1c:	sub	sp, sp, #12
   19d20:	ldr	r4, [r3, r2]
   19d24:	ldr	r3, [r4]
   19d28:	str	r3, [sp, #4]
   19d2c:	bl	11bf0 <getuid@plt>
   19d30:	cmp	r0, #0
   19d34:	bne	19d50 <mount@plt+0x7bf0>
   19d38:	ldr	r2, [sp, #4]
   19d3c:	ldr	r3, [r4]
   19d40:	cmp	r2, r3
   19d44:	bne	19db8 <mount@plt+0x7c58>
   19d48:	add	sp, sp, #12
   19d4c:	pop	{r4, r5, pc}
   19d50:	bl	11d04 <geteuid@plt>
   19d54:	cmp	r0, #0
   19d58:	beq	19d38 <mount@plt+0x7bd8>
   19d5c:	bl	11ecc <cap_get_proc@plt>
   19d60:	subs	r5, r0, #0
   19d64:	beq	19dbc <mount@plt+0x7c5c>
   19d68:	mov	r3, sp
   19d6c:	mov	r2, #2
   19d70:	mov	r1, #12
   19d74:	bl	11d94 <cap_get_flag@plt>
   19d78:	cmp	r0, #0
   19d7c:	bne	19dbc <mount@plt+0x7c5c>
   19d80:	ldr	r3, [sp]
   19d84:	cmp	r3, #0
   19d88:	bne	19dac <mount@plt+0x7c4c>
   19d8c:	mov	r0, r5
   19d90:	bl	12010 <cap_clear@plt>
   19d94:	cmp	r0, #0
   19d98:	bne	19dbc <mount@plt+0x7c5c>
   19d9c:	mov	r0, r5
   19da0:	bl	11de8 <cap_set_proc@plt>
   19da4:	cmp	r0, #0
   19da8:	bne	19dbc <mount@plt+0x7c5c>
   19dac:	mov	r0, r5
   19db0:	bl	1204c <cap_free@plt>
   19db4:	b	19d38 <mount@plt+0x7bd8>
   19db8:	bl	11ca4 <__stack_chk_fail@plt>
   19dbc:	mov	r0, #1
   19dc0:	bl	11e84 <exit@plt>
   19dc4:	andeq	r9, r1, r4, ror #5
   19dc8:	andeq	r0, r0, ip, lsl #4
   19dcc:	push	{r4, r5, r6, r7, lr}
   19dd0:	vpush	{d8}
   19dd4:	ldr	r3, [pc, #380]	; 19f58 <mount@plt+0x7df8>
   19dd8:	ldr	r2, [pc, #380]	; 19f5c <mount@plt+0x7dfc>
   19ddc:	add	r3, pc, r3
   19de0:	sub	sp, sp, #12
   19de4:	ldr	r5, [r3, r2]
   19de8:	mov	r7, r1
   19dec:	mov	r6, r0
   19df0:	ldr	r3, [r5]
   19df4:	mov	r0, r1
   19df8:	mov	r1, sp
   19dfc:	str	r3, [sp, #4]
   19e00:	bl	11f5c <strtod@plt>
   19e04:	ldr	r4, [sp]
   19e08:	cmp	r4, r7
   19e0c:	beq	19f20 <mount@plt+0x7dc0>
   19e10:	ldrb	r3, [r4]
   19e14:	vmov.f64	d8, d0
   19e18:	cmp	r3, #0
   19e1c:	bne	19e48 <mount@plt+0x7ce8>
   19e20:	vcvt.u32.f64	s16, d8
   19e24:	mov	r0, #0
   19e28:	vstr	s16, [r6]
   19e2c:	ldr	r2, [sp, #4]
   19e30:	ldr	r3, [r5]
   19e34:	cmp	r2, r3
   19e38:	bne	19f40 <mount@plt+0x7de0>
   19e3c:	add	sp, sp, #12
   19e40:	vpop	{d8}
   19e44:	pop	{r4, r5, r6, r7, pc}
   19e48:	ldr	r1, [pc, #272]	; 19f60 <mount@plt+0x7e00>
   19e4c:	mov	r0, r4
   19e50:	add	r1, pc, r1
   19e54:	bl	11cf8 <strcasecmp@plt>
   19e58:	cmp	r0, #0
   19e5c:	beq	19f28 <mount@plt+0x7dc8>
   19e60:	ldr	r1, [pc, #252]	; 19f64 <mount@plt+0x7e04>
   19e64:	mov	r0, r4
   19e68:	add	r1, pc, r1
   19e6c:	bl	11cf8 <strcasecmp@plt>
   19e70:	cmp	r0, #0
   19e74:	beq	19f28 <mount@plt+0x7dc8>
   19e78:	ldr	r1, [pc, #232]	; 19f68 <mount@plt+0x7e08>
   19e7c:	mov	r0, r4
   19e80:	add	r1, pc, r1
   19e84:	bl	11cf8 <strcasecmp@plt>
   19e88:	cmp	r0, #0
   19e8c:	beq	19f28 <mount@plt+0x7dc8>
   19e90:	ldr	r1, [pc, #212]	; 19f6c <mount@plt+0x7e0c>
   19e94:	mov	r0, r4
   19e98:	add	r1, pc, r1
   19e9c:	bl	11cf8 <strcasecmp@plt>
   19ea0:	cmp	r0, #0
   19ea4:	beq	19f34 <mount@plt+0x7dd4>
   19ea8:	ldr	r1, [pc, #192]	; 19f70 <mount@plt+0x7e10>
   19eac:	mov	r0, r4
   19eb0:	add	r1, pc, r1
   19eb4:	bl	11cf8 <strcasecmp@plt>
   19eb8:	cmp	r0, #0
   19ebc:	beq	19f34 <mount@plt+0x7dd4>
   19ec0:	ldr	r1, [pc, #172]	; 19f74 <mount@plt+0x7e14>
   19ec4:	mov	r0, r4
   19ec8:	add	r1, pc, r1
   19ecc:	bl	11cf8 <strcasecmp@plt>
   19ed0:	cmp	r0, #0
   19ed4:	beq	19f34 <mount@plt+0x7dd4>
   19ed8:	ldr	r1, [pc, #152]	; 19f78 <mount@plt+0x7e18>
   19edc:	mov	r0, r4
   19ee0:	add	r1, pc, r1
   19ee4:	bl	11cf8 <strcasecmp@plt>
   19ee8:	cmp	r0, #0
   19eec:	beq	19e20 <mount@plt+0x7cc0>
   19ef0:	ldr	r1, [pc, #132]	; 19f7c <mount@plt+0x7e1c>
   19ef4:	mov	r0, r4
   19ef8:	add	r1, pc, r1
   19efc:	bl	11cf8 <strcasecmp@plt>
   19f00:	cmp	r0, #0
   19f04:	beq	19e20 <mount@plt+0x7cc0>
   19f08:	ldr	r1, [pc, #112]	; 19f80 <mount@plt+0x7e20>
   19f0c:	mov	r0, r4
   19f10:	add	r1, pc, r1
   19f14:	bl	11cf8 <strcasecmp@plt>
   19f18:	cmp	r0, #0
   19f1c:	beq	19e20 <mount@plt+0x7cc0>
   19f20:	mvn	r0, #0
   19f24:	b	19e2c <mount@plt+0x7ccc>
   19f28:	vldr	d7, [pc, #24]	; 19f48 <mount@plt+0x7de8>
   19f2c:	vmul.f64	d8, d8, d7
   19f30:	b	19e20 <mount@plt+0x7cc0>
   19f34:	vldr	d7, [pc, #20]	; 19f50 <mount@plt+0x7df0>
   19f38:	vmul.f64	d8, d8, d7
   19f3c:	b	19e20 <mount@plt+0x7cc0>
   19f40:	bl	11ca4 <__stack_chk_fail@plt>
   19f44:	nop			; (mov r0, r0)
   19f48:	andeq	r0, r0, r0
   19f4c:	smlawbmi	lr, r0, r4, r8
   19f50:	andeq	r0, r0, r0
   19f54:	addmi	r4, pc, r0
   19f58:	andeq	r9, r1, ip, lsl r2
   19f5c:	andeq	r0, r0, ip, lsl #4
   19f60:	andeq	r7, r0, r0, asr #23
   19f64:	andeq	r7, r0, r4, asr #23
   19f68:			; <UNDEFINED> instruction: 0x00007bb0
   19f6c:	andeq	r7, r0, r4, ror pc
   19f70:	andeq	r7, r0, r8, lsl #23
   19f74:	andeq	r7, r0, r8, ror fp
   19f78:	andeq	r7, r0, ip, asr pc
   19f7c:	strdeq	r7, [r0], -r8
   19f80:	andeq	r7, r0, r8, ror #29
   19f84:	vmov	s15, r0
   19f88:	ldr	r3, [pc, #168]	; 1a038 <mount@plt+0x7ed8>
   19f8c:	push	{r4, lr}
   19f90:	cmp	r0, r3
   19f94:	sub	sp, sp, #16
   19f98:	mov	r4, r1
   19f9c:	vcvt.f64.u32	d7, s15
   19fa0:	bhi	1a014 <mount@plt+0x7eb4>
   19fa4:	cmp	r0, #1000	; 0x3e8
   19fa8:	bcc	19fe4 <mount@plt+0x7e84>
   19fac:	ldr	r2, [pc, #136]	; 1a03c <mount@plt+0x7edc>
   19fb0:	vldr	d5, [pc, #112]	; 1a028 <mount@plt+0x7ec8>
   19fb4:	add	r2, pc, r2
   19fb8:	vdiv.f64	d6, d7, d5
   19fbc:	str	r2, [sp]
   19fc0:	mvn	r3, #0
   19fc4:	mov	r2, #1
   19fc8:	mov	r1, #63	; 0x3f
   19fcc:	mov	r0, r4
   19fd0:	vstr	d6, [sp, #8]
   19fd4:	bl	1213c <__snprintf_chk@plt>
   19fd8:	mov	r0, r4
   19fdc:	add	sp, sp, #16
   19fe0:	pop	{r4, pc}
   19fe4:	ldr	r3, [pc, #84]	; 1a040 <mount@plt+0x7ee0>
   19fe8:	str	r0, [sp, #4]
   19fec:	add	r3, pc, r3
   19ff0:	str	r3, [sp]
   19ff4:	mov	r2, #1
   19ff8:	mvn	r3, #0
   19ffc:	mov	r1, #63	; 0x3f
   1a000:	mov	r0, r4
   1a004:	bl	1213c <__snprintf_chk@plt>
   1a008:	mov	r0, r4
   1a00c:	add	sp, sp, #16
   1a010:	pop	{r4, pc}
   1a014:	ldr	r2, [pc, #40]	; 1a044 <mount@plt+0x7ee4>
   1a018:	vldr	d5, [pc, #16]	; 1a030 <mount@plt+0x7ed0>
   1a01c:	add	r2, pc, r2
   1a020:	b	19fb8 <mount@plt+0x7e58>
   1a024:	nop			; (mov r0, r0)
   1a028:	andeq	r0, r0, r0
   1a02c:	addmi	r4, pc, r0
   1a030:	andeq	r0, r0, r0
   1a034:	smlawbmi	lr, r0, r4, r8
   1a038:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   1a03c:	andeq	r7, r0, r4, asr lr
   1a040:	andeq	r7, r0, r4, lsr #28
   1a044:	andeq	r7, r0, r4, ror #27
   1a048:	push	{r4, r5, r6, r7, lr}
   1a04c:	vpush	{d8}
   1a050:	ldr	r3, [pc, #480]	; 1a238 <mount@plt+0x80d8>
   1a054:	ldr	r2, [pc, #480]	; 1a23c <mount@plt+0x80dc>
   1a058:	add	r3, pc, r3
   1a05c:	sub	sp, sp, #12
   1a060:	ldr	r5, [r3, r2]
   1a064:	mov	r6, r1
   1a068:	mov	r7, r0
   1a06c:	ldr	r3, [r5]
   1a070:	mov	r0, r1
   1a074:	mov	r1, sp
   1a078:	str	r3, [sp, #4]
   1a07c:	bl	11f5c <strtod@plt>
   1a080:	ldr	r4, [sp]
   1a084:	cmp	r4, r6
   1a088:	beq	1a1ec <mount@plt+0x808c>
   1a08c:	ldrb	r3, [r4]
   1a090:	vmov.f64	d8, d0
   1a094:	cmp	r3, #0
   1a098:	bne	1a0cc <mount@plt+0x7f6c>
   1a09c:	vmov	r0, r1, d8
   1a0a0:	bl	1f9c4 <mount@plt+0xd864>
   1a0a4:	mov	ip, #0
   1a0a8:	strd	r0, [r7]
   1a0ac:	ldr	r2, [sp, #4]
   1a0b0:	ldr	r3, [r5]
   1a0b4:	mov	r0, ip
   1a0b8:	cmp	r2, r3
   1a0bc:	bne	1a218 <mount@plt+0x80b8>
   1a0c0:	add	sp, sp, #12
   1a0c4:	vpop	{d8}
   1a0c8:	pop	{r4, r5, r6, r7, pc}
   1a0cc:	ldr	r1, [pc, #364]	; 1a240 <mount@plt+0x80e0>
   1a0d0:	mov	r0, r4
   1a0d4:	add	r1, pc, r1
   1a0d8:	bl	11cf8 <strcasecmp@plt>
   1a0dc:	cmp	r0, #0
   1a0e0:	beq	1a1f4 <mount@plt+0x8094>
   1a0e4:	ldr	r1, [pc, #344]	; 1a244 <mount@plt+0x80e4>
   1a0e8:	mov	r0, r4
   1a0ec:	add	r1, pc, r1
   1a0f0:	bl	11cf8 <strcasecmp@plt>
   1a0f4:	cmp	r0, #0
   1a0f8:	beq	1a1f4 <mount@plt+0x8094>
   1a0fc:	ldr	r1, [pc, #324]	; 1a248 <mount@plt+0x80e8>
   1a100:	mov	r0, r4
   1a104:	add	r1, pc, r1
   1a108:	bl	11cf8 <strcasecmp@plt>
   1a10c:	cmp	r0, #0
   1a110:	beq	1a1f4 <mount@plt+0x8094>
   1a114:	ldr	r1, [pc, #304]	; 1a24c <mount@plt+0x80ec>
   1a118:	mov	r0, r4
   1a11c:	add	r1, pc, r1
   1a120:	bl	11cf8 <strcasecmp@plt>
   1a124:	cmp	r0, #0
   1a128:	beq	1a200 <mount@plt+0x80a0>
   1a12c:	ldr	r1, [pc, #284]	; 1a250 <mount@plt+0x80f0>
   1a130:	mov	r0, r4
   1a134:	add	r1, pc, r1
   1a138:	bl	11cf8 <strcasecmp@plt>
   1a13c:	cmp	r0, #0
   1a140:	beq	1a200 <mount@plt+0x80a0>
   1a144:	ldr	r1, [pc, #264]	; 1a254 <mount@plt+0x80f4>
   1a148:	mov	r0, r4
   1a14c:	add	r1, pc, r1
   1a150:	bl	11cf8 <strcasecmp@plt>
   1a154:	cmp	r0, #0
   1a158:	beq	1a200 <mount@plt+0x80a0>
   1a15c:	ldr	r1, [pc, #244]	; 1a258 <mount@plt+0x80f8>
   1a160:	mov	r0, r4
   1a164:	add	r1, pc, r1
   1a168:	bl	11cf8 <strcasecmp@plt>
   1a16c:	cmp	r0, #0
   1a170:	beq	1a20c <mount@plt+0x80ac>
   1a174:	ldr	r1, [pc, #224]	; 1a25c <mount@plt+0x80fc>
   1a178:	mov	r0, r4
   1a17c:	add	r1, pc, r1
   1a180:	bl	11cf8 <strcasecmp@plt>
   1a184:	cmp	r0, #0
   1a188:	beq	1a20c <mount@plt+0x80ac>
   1a18c:	ldr	r1, [pc, #204]	; 1a260 <mount@plt+0x8100>
   1a190:	mov	r0, r4
   1a194:	add	r1, pc, r1
   1a198:	bl	11cf8 <strcasecmp@plt>
   1a19c:	cmp	r0, #0
   1a1a0:	beq	1a20c <mount@plt+0x80ac>
   1a1a4:	ldr	r1, [pc, #184]	; 1a264 <mount@plt+0x8104>
   1a1a8:	mov	r0, r4
   1a1ac:	add	r1, pc, r1
   1a1b0:	bl	11cf8 <strcasecmp@plt>
   1a1b4:	cmp	r0, #0
   1a1b8:	beq	1a09c <mount@plt+0x7f3c>
   1a1bc:	ldr	r1, [pc, #164]	; 1a268 <mount@plt+0x8108>
   1a1c0:	mov	r0, r4
   1a1c4:	add	r1, pc, r1
   1a1c8:	bl	11cf8 <strcasecmp@plt>
   1a1cc:	cmp	r0, #0
   1a1d0:	beq	1a09c <mount@plt+0x7f3c>
   1a1d4:	ldr	r1, [pc, #144]	; 1a26c <mount@plt+0x810c>
   1a1d8:	mov	r0, r4
   1a1dc:	add	r1, pc, r1
   1a1e0:	bl	11cf8 <strcasecmp@plt>
   1a1e4:	cmp	r0, #0
   1a1e8:	beq	1a09c <mount@plt+0x7f3c>
   1a1ec:	mvn	ip, #0
   1a1f0:	b	1a0ac <mount@plt+0x7f4c>
   1a1f4:	vldr	d7, [pc, #36]	; 1a220 <mount@plt+0x80c0>
   1a1f8:	vmul.f64	d8, d8, d7
   1a1fc:	b	1a09c <mount@plt+0x7f3c>
   1a200:	vldr	d7, [pc, #32]	; 1a228 <mount@plt+0x80c8>
   1a204:	vmul.f64	d8, d8, d7
   1a208:	b	1a09c <mount@plt+0x7f3c>
   1a20c:	vldr	d7, [pc, #28]	; 1a230 <mount@plt+0x80d0>
   1a210:	vmul.f64	d8, d8, d7
   1a214:	b	1a09c <mount@plt+0x7f3c>
   1a218:	bl	11ca4 <__stack_chk_fail@plt>
   1a21c:	nop			; (mov r0, r0)
   1a220:	andeq	r0, r0, r0
   1a224:	bicmi	ip, sp, r5, ror #26
   1a228:	andeq	r0, r0, r0
   1a22c:	smlawbmi	lr, r0, r4, r8
   1a230:	andeq	r0, r0, r0
   1a234:	addmi	r4, pc, r0
   1a238:	andeq	r8, r1, r0, lsr #31
   1a23c:	andeq	r0, r0, ip, lsl #4
   1a240:	andeq	r7, r0, ip, lsr r9
   1a244:	andeq	r7, r0, r0, asr #18
   1a248:	andeq	r7, r0, ip, lsr #18
   1a24c:	strdeq	r7, [r0], -r0
   1a250:	andeq	r7, r0, r4, lsl #18
   1a254:	strdeq	r7, [r0], -r4
   1a258:	ldrdeq	r7, [r0], -r8
   1a25c:	andeq	r7, r0, r4, ror ip
   1a260:	andeq	r7, r0, r4, ror #24
   1a264:	muleq	r0, r8, ip
   1a268:	andeq	r7, r0, r4, asr ip
   1a26c:	andeq	r7, r0, r4, asr #24
   1a270:	push	{r4, r5, r6, lr}
   1a274:	sub	sp, sp, #16
   1a278:	mov	r6, r2
   1a27c:	mov	r4, r0
   1a280:	mov	r5, r1
   1a284:	bl	1f964 <mount@plt+0xd804>
   1a288:	add	r3, pc, #184	; 0xb8
   1a28c:	ldrd	r2, [r3]
   1a290:	cmp	r2, r4
   1a294:	sbcs	r3, r3, r5
   1a298:	vmov	d7, r0, r1
   1a29c:	blt	1a308 <mount@plt+0x81a8>
   1a2a0:	add	r3, pc, #168	; 0xa8
   1a2a4:	ldrd	r2, [r3]
   1a2a8:	cmp	r2, r4
   1a2ac:	sbcs	r3, r3, r5
   1a2b0:	blt	1a2f8 <mount@plt+0x8198>
   1a2b4:	cmp	r4, #1000	; 0x3e8
   1a2b8:	sbcs	r3, r5, #0
   1a2bc:	blt	1a318 <mount@plt+0x81b8>
   1a2c0:	ldr	r2, [pc, #168]	; 1a370 <mount@plt+0x8210>
   1a2c4:	vldr	d5, [pc, #140]	; 1a358 <mount@plt+0x81f8>
   1a2c8:	add	r2, pc, r2
   1a2cc:	vdiv.f64	d6, d7, d5
   1a2d0:	str	r2, [sp]
   1a2d4:	mvn	r3, #0
   1a2d8:	mov	r2, #1
   1a2dc:	mov	r1, #63	; 0x3f
   1a2e0:	mov	r0, r6
   1a2e4:	vstr	d6, [sp, #8]
   1a2e8:	bl	1213c <__snprintf_chk@plt>
   1a2ec:	mov	r0, r6
   1a2f0:	add	sp, sp, #16
   1a2f4:	pop	{r4, r5, r6, pc}
   1a2f8:	ldr	r2, [pc, #116]	; 1a374 <mount@plt+0x8214>
   1a2fc:	vldr	d5, [pc, #92]	; 1a360 <mount@plt+0x8200>
   1a300:	add	r2, pc, r2
   1a304:	b	1a2cc <mount@plt+0x816c>
   1a308:	ldr	r2, [pc, #104]	; 1a378 <mount@plt+0x8218>
   1a30c:	vldr	d5, [pc, #84]	; 1a368 <mount@plt+0x8208>
   1a310:	add	r2, pc, r2
   1a314:	b	1a2cc <mount@plt+0x816c>
   1a318:	ldr	r3, [pc, #92]	; 1a37c <mount@plt+0x821c>
   1a31c:	strd	r4, [sp, #8]
   1a320:	add	r3, pc, r3
   1a324:	str	r3, [sp]
   1a328:	mov	r2, #1
   1a32c:	mvn	r3, #0
   1a330:	mov	r1, #63	; 0x3f
   1a334:	mov	r0, r6
   1a338:	bl	1213c <__snprintf_chk@plt>
   1a33c:	mov	r0, r6
   1a340:	add	sp, sp, #16
   1a344:	pop	{r4, r5, r6, pc}
   1a348:	blcc	fe6ccb4c <optarg@@GLIBC_2.4+0xfe6998e4>
   1a34c:	andeq	r0, r0, r0
   1a350:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
	...
   1a35c:	addmi	r4, pc, r0
   1a360:	andeq	r0, r0, r0
   1a364:	smlawbmi	lr, r0, r4, r8
   1a368:	andeq	r0, r0, r0
   1a36c:	bicmi	ip, sp, r5, ror #26
   1a370:	andeq	r7, r0, r0, ror fp
   1a374:	andeq	r7, r0, r0, lsr fp
   1a378:	andeq	r7, r0, r8, lsl fp
   1a37c:	andeq	r7, r0, r0, lsr #22
   1a380:	ldrb	r3, [r0]
   1a384:	ldr	r2, [pc, #32]	; 1a3ac <mount@plt+0x824c>
   1a388:	cmp	r3, #0
   1a38c:	beq	1a3a4 <mount@plt+0x8244>
   1a390:	add	r1, r3, r2, lsl #5
   1a394:	ldrb	r3, [r0, #1]!
   1a398:	add	r2, r2, r1
   1a39c:	cmp	r3, #0
   1a3a0:	bne	1a390 <mount@plt+0x8230>
   1a3a4:	mov	r0, r2
   1a3a8:	bx	lr
   1a3ac:	andeq	r1, r0, r5, lsl #10
   1a3b0:	ldr	r3, [pc, #588]	; 1a604 <mount@plt+0x84a4>
   1a3b4:	ldr	r2, [pc, #588]	; 1a608 <mount@plt+0x84a8>
   1a3b8:	add	r3, pc, r3
   1a3bc:	push	{r4, r5, r6, r7, r8, lr}
   1a3c0:	mov	r5, r0
   1a3c4:	ldr	r6, [r3, r2]
   1a3c8:	ldrh	r0, [r0, #4]
   1a3cc:	sub	sp, sp, #216	; 0xd8
   1a3d0:	ldr	r3, [r6]
   1a3d4:	sub	r2, r0, #16
   1a3d8:	cmp	r2, #1
   1a3dc:	str	r3, [sp, #212]	; 0xd4
   1a3e0:	bhi	1a464 <mount@plt+0x8304>
   1a3e4:	ldr	r3, [r5]
   1a3e8:	cmp	r3, #31
   1a3ec:	bls	1a5f8 <mount@plt+0x8498>
   1a3f0:	ldr	r1, [r5, #20]
   1a3f4:	ldr	r2, [pc, #528]	; 1a60c <mount@plt+0x84ac>
   1a3f8:	lsl	ip, r1, #22
   1a3fc:	add	r2, pc, r2
   1a400:	lsr	ip, ip, #22
   1a404:	ldr	r4, [r2, ip, lsl #2]
   1a408:	cmp	r4, #0
   1a40c:	bne	1a420 <mount@plt+0x82c0>
   1a410:	b	1a480 <mount@plt+0x8320>
   1a414:	ldr	r4, [r4]
   1a418:	cmp	r4, #0
   1a41c:	beq	1a480 <mount@plt+0x8320>
   1a420:	ldr	r2, [r4, #20]
   1a424:	cmp	r1, r2
   1a428:	bne	1a414 <mount@plt+0x82b4>
   1a42c:	cmp	r0, #17
   1a430:	bne	1a560 <mount@plt+0x8400>
   1a434:	ldr	r3, [r4, #8]
   1a438:	ldr	r2, [r4, #12]
   1a43c:	cmp	r3, #0
   1a440:	mov	r0, r4
   1a444:	str	r3, [r2]
   1a448:	strne	r2, [r3, #4]
   1a44c:	ldr	r3, [r4]
   1a450:	ldr	r2, [r4, #4]
   1a454:	cmp	r3, #0
   1a458:	str	r3, [r2]
   1a45c:	strne	r2, [r3, #4]
   1a460:	bl	11c14 <free@plt>
   1a464:	mov	r0, #0
   1a468:	ldr	r2, [sp, #212]	; 0xd4
   1a46c:	ldr	r3, [r6]
   1a470:	cmp	r2, r3
   1a474:	bne	1a600 <mount@plt+0x84a0>
   1a478:	add	sp, sp, #216	; 0xd8
   1a47c:	pop	{r4, r5, r6, r7, r8, pc}
   1a480:	cmp	r0, #17
   1a484:	beq	1a464 <mount@plt+0x8304>
   1a488:	sub	r3, r3, #32
   1a48c:	add	r2, r5, #32
   1a490:	mov	r1, #51	; 0x33
   1a494:	add	r0, sp, #4
   1a498:	bl	1f4a8 <mount@plt+0xd348>
   1a49c:	ldr	r0, [sp, #16]
   1a4a0:	adds	r4, r0, #4
   1a4a4:	beq	1a464 <mount@plt+0x8304>
   1a4a8:	mov	r0, r4
   1a4ac:	bl	11e9c <strlen@plt>
   1a4b0:	add	r0, r0, #29
   1a4b4:	bl	11df4 <malloc@plt>
   1a4b8:	subs	r7, r0, #0
   1a4bc:	beq	1a464 <mount@plt+0x8304>
   1a4c0:	ldr	r8, [r5, #20]
   1a4c4:	mov	r1, r4
   1a4c8:	str	r8, [r7, #20]
   1a4cc:	add	r0, r7, #26
   1a4d0:	bl	11d70 <strcpy@plt>
   1a4d4:	lsl	r3, r8, #22
   1a4d8:	ldr	r2, [pc, #304]	; 1a610 <mount@plt+0x84b0>
   1a4dc:	lsr	r3, r3, #22
   1a4e0:	add	r2, pc, r2
   1a4e4:	ldrh	r0, [r5, #18]
   1a4e8:	ldr	r2, [r2, r3, lsl #2]
   1a4ec:	ldr	r1, [r5, #24]
   1a4f0:	cmp	r2, #0
   1a4f4:	str	r2, [r7]
   1a4f8:	strh	r0, [r7, #24]
   1a4fc:	str	r1, [r7, #16]
   1a500:	strne	r7, [r2, #4]
   1a504:	ldr	r2, [pc, #264]	; 1a614 <mount@plt+0x84b4>
   1a508:	mov	r0, r4
   1a50c:	add	r2, pc, r2
   1a510:	add	r1, r2, r3, lsl #2
   1a514:	str	r7, [r2, r3, lsl #2]
   1a518:	str	r1, [r7, #4]
   1a51c:	bl	1a380 <mount@plt+0x8220>
   1a520:	ldr	r2, [pc, #240]	; 1a618 <mount@plt+0x84b8>
   1a524:	add	r1, r7, #8
   1a528:	add	r2, pc, r2
   1a52c:	lsl	r3, r0, #22
   1a530:	mov	r0, #0
   1a534:	lsr	r3, r3, #22
   1a538:	ldr	r2, [r2, r3, lsl #2]
   1a53c:	cmp	r2, #0
   1a540:	str	r2, [r7, #8]
   1a544:	strne	r1, [r2, #4]
   1a548:	ldr	r2, [pc, #204]	; 1a61c <mount@plt+0x84bc>
   1a54c:	add	r2, pc, r2
   1a550:	add	ip, r2, r3, lsl #2
   1a554:	str	r1, [r2, r3, lsl #2]
   1a558:	str	ip, [r7, #12]
   1a55c:	b	1a468 <mount@plt+0x8308>
   1a560:	sub	r3, r3, #32
   1a564:	add	r2, r5, #32
   1a568:	mov	r1, #51	; 0x33
   1a56c:	add	r0, sp, #4
   1a570:	bl	1f4a8 <mount@plt+0xd348>
   1a574:	ldr	r7, [sp, #16]
   1a578:	adds	r7, r7, #4
   1a57c:	beq	1a464 <mount@plt+0x8304>
   1a580:	mov	r1, r7
   1a584:	add	r0, r4, #26
   1a588:	bl	11b9c <strcmp@plt>
   1a58c:	cmp	r0, #0
   1a590:	beq	1a5e8 <mount@plt+0x8488>
   1a594:	ldr	r3, [r4, #8]
   1a598:	ldr	r2, [r4, #12]
   1a59c:	cmp	r3, #0
   1a5a0:	mov	r0, r7
   1a5a4:	str	r3, [r2]
   1a5a8:	strne	r2, [r3, #4]
   1a5ac:	bl	1a380 <mount@plt+0x8220>
   1a5b0:	ldr	r3, [pc, #104]	; 1a620 <mount@plt+0x84c0>
   1a5b4:	add	r2, r4, #8
   1a5b8:	add	r3, pc, r3
   1a5bc:	lsl	r0, r0, #22
   1a5c0:	lsr	r0, r0, #22
   1a5c4:	ldr	r3, [r3, r0, lsl #2]
   1a5c8:	cmp	r3, #0
   1a5cc:	str	r3, [r4, #8]
   1a5d0:	strne	r2, [r3, #4]
   1a5d4:	ldr	r3, [pc, #72]	; 1a624 <mount@plt+0x84c4>
   1a5d8:	add	r3, pc, r3
   1a5dc:	add	r1, r3, r0, lsl #2
   1a5e0:	str	r2, [r3, r0, lsl #2]
   1a5e4:	str	r1, [r4, #12]
   1a5e8:	ldr	r3, [r5, #24]
   1a5ec:	mov	r0, #0
   1a5f0:	str	r3, [r4, #16]
   1a5f4:	b	1a468 <mount@plt+0x8308>
   1a5f8:	mvn	r0, #0
   1a5fc:	b	1a468 <mount@plt+0x8308>
   1a600:	bl	11ca4 <__stack_chk_fail@plt>
   1a604:	andeq	r8, r1, r0, asr #24
   1a608:	andeq	r0, r0, ip, lsl #4
   1a60c:	muleq	r1, r8, r4
   1a610:			; <UNDEFINED> instruction: 0x0001a3b4
   1a614:	andeq	sl, r1, r8, lsl #7
   1a618:	andeq	r9, r1, ip, ror #6
   1a61c:	andeq	r9, r1, r8, asr #6
   1a620:	ldrdeq	r9, [r1], -ip
   1a624:			; <UNDEFINED> instruction: 0x000192bc
   1a628:	push	{r4, lr}
   1a62c:	sub	sp, sp, #8
   1a630:	ldr	r4, [pc, #48]	; 1a668 <mount@plt+0x8508>
   1a634:	ldr	r2, [pc, #48]	; 1a66c <mount@plt+0x850c>
   1a638:	add	r4, pc, r4
   1a63c:	mov	r3, #16
   1a640:	add	r2, pc, r2
   1a644:	str	r0, [sp, #4]
   1a648:	str	r2, [sp]
   1a64c:	mov	r0, r4
   1a650:	mov	r1, r3
   1a654:	mov	r2, #1
   1a658:	bl	1213c <__snprintf_chk@plt>
   1a65c:	mov	r0, r4
   1a660:	add	sp, sp, #8
   1a664:	pop	{r4, pc}
   1a668:	andeq	r9, r1, r8, lsr r2
   1a66c:	andeq	r7, r0, r8, lsl #16
   1a670:	push	{r4, r5, lr}
   1a674:	subs	r5, r0, #0
   1a678:	sub	sp, sp, #12
   1a67c:	beq	1a6c4 <mount@plt+0x8564>
   1a680:	lsl	r2, r5, #22
   1a684:	ldr	r3, [pc, #156]	; 1a728 <mount@plt+0x85c8>
   1a688:	lsr	r2, r2, #22
   1a68c:	add	r3, pc, r3
   1a690:	ldr	r3, [r3, r2, lsl #2]
   1a694:	cmp	r3, #0
   1a698:	bne	1a6ac <mount@plt+0x854c>
   1a69c:	b	1a6d4 <mount@plt+0x8574>
   1a6a0:	ldr	r3, [r3]
   1a6a4:	cmp	r3, #0
   1a6a8:	beq	1a6d4 <mount@plt+0x8574>
   1a6ac:	ldr	r2, [r3, #20]
   1a6b0:	cmp	r5, r2
   1a6b4:	bne	1a6a0 <mount@plt+0x8540>
   1a6b8:	add	r0, r3, #26
   1a6bc:	add	sp, sp, #12
   1a6c0:	pop	{r4, r5, pc}
   1a6c4:	ldr	r0, [pc, #96]	; 1a72c <mount@plt+0x85cc>
   1a6c8:	add	r0, pc, r0
   1a6cc:	add	sp, sp, #12
   1a6d0:	pop	{r4, r5, pc}
   1a6d4:	ldr	r4, [pc, #84]	; 1a730 <mount@plt+0x85d0>
   1a6d8:	mov	r0, r5
   1a6dc:	add	r4, pc, r4
   1a6e0:	add	r4, r4, #16
   1a6e4:	mov	r1, r4
   1a6e8:	bl	11be4 <if_indextoname@plt>
   1a6ec:	cmp	r0, #0
   1a6f0:	beq	1a700 <mount@plt+0x85a0>
   1a6f4:	mov	r0, r4
   1a6f8:	add	sp, sp, #12
   1a6fc:	pop	{r4, r5, pc}
   1a700:	ldr	r2, [pc, #44]	; 1a734 <mount@plt+0x85d4>
   1a704:	mov	r3, #16
   1a708:	add	r2, pc, r2
   1a70c:	mov	r1, r3
   1a710:	stm	sp, {r2, r5}
   1a714:	mov	r0, r4
   1a718:	mov	r2, #1
   1a71c:	bl	1213c <__snprintf_chk@plt>
   1a720:	mov	r0, r4
   1a724:	b	1a6bc <mount@plt+0x855c>
   1a728:	andeq	sl, r1, r8, lsl #4
   1a72c:	andeq	r7, r0, r8, lsl #15
   1a730:	muleq	r1, r4, r1
   1a734:	andeq	r7, r0, r0, asr #14
   1a738:	cmp	r0, #0
   1a73c:	beq	1a780 <mount@plt+0x8620>
   1a740:	lsl	r2, r0, #22
   1a744:	ldr	r3, [pc, #60]	; 1a788 <mount@plt+0x8628>
   1a748:	lsr	r2, r2, #22
   1a74c:	add	r3, pc, r3
   1a750:	ldr	r3, [r3, r2, lsl #2]
   1a754:	cmp	r3, #0
   1a758:	bne	1a76c <mount@plt+0x860c>
   1a75c:	b	1a780 <mount@plt+0x8620>
   1a760:	ldr	r3, [r3]
   1a764:	cmp	r3, #0
   1a768:	beq	1a780 <mount@plt+0x8620>
   1a76c:	ldr	r2, [r3, #20]
   1a770:	cmp	r0, r2
   1a774:	bne	1a760 <mount@plt+0x8600>
   1a778:	ldrh	r0, [r3, #24]
   1a77c:	bx	lr
   1a780:	mvn	r0, #0
   1a784:	bx	lr
   1a788:	andeq	sl, r1, r8, asr #2
   1a78c:	cmp	r0, #0
   1a790:	bxeq	lr
   1a794:	lsl	r2, r0, #22
   1a798:	ldr	r3, [pc, #60]	; 1a7dc <mount@plt+0x867c>
   1a79c:	lsr	r2, r2, #22
   1a7a0:	add	r3, pc, r3
   1a7a4:	ldr	r3, [r3, r2, lsl #2]
   1a7a8:	cmp	r3, #0
   1a7ac:	bne	1a7c0 <mount@plt+0x8660>
   1a7b0:	b	1a7d4 <mount@plt+0x8674>
   1a7b4:	ldr	r3, [r3]
   1a7b8:	cmp	r3, #0
   1a7bc:	beq	1a7d4 <mount@plt+0x8674>
   1a7c0:	ldr	r2, [r3, #20]
   1a7c4:	cmp	r0, r2
   1a7c8:	bne	1a7b4 <mount@plt+0x8654>
   1a7cc:	ldr	r0, [r3, #16]
   1a7d0:	bx	lr
   1a7d4:	mvn	r0, #0
   1a7d8:	bx	lr
   1a7dc:	strdeq	sl, [r1], -r4
   1a7e0:	ldr	r3, [pc, #204]	; 1a8b4 <mount@plt+0x8754>
   1a7e4:	ldr	r2, [pc, #204]	; 1a8b8 <mount@plt+0x8758>
   1a7e8:	add	r3, pc, r3
   1a7ec:	push	{r4, r5, r6, lr}
   1a7f0:	sub	sp, sp, #8
   1a7f4:	ldr	r5, [r3, r2]
   1a7f8:	subs	r6, r0, #0
   1a7fc:	moveq	r4, r6
   1a800:	ldr	r3, [r5]
   1a804:	str	r3, [sp, #4]
   1a808:	beq	1a864 <mount@plt+0x8704>
   1a80c:	bl	1a380 <mount@plt+0x8220>
   1a810:	ldr	r3, [pc, #164]	; 1a8bc <mount@plt+0x875c>
   1a814:	add	r3, pc, r3
   1a818:	lsl	r0, r0, #22
   1a81c:	lsr	r0, r0, #22
   1a820:	ldr	r4, [r3, r0, lsl #2]
   1a824:	cmp	r4, #0
   1a828:	bne	1a83c <mount@plt+0x86dc>
   1a82c:	b	1a880 <mount@plt+0x8720>
   1a830:	ldr	r4, [r4]
   1a834:	cmp	r4, #0
   1a838:	beq	1a880 <mount@plt+0x8720>
   1a83c:	mov	r2, #16
   1a840:	mov	r1, r6
   1a844:	add	r0, r4, #18
   1a848:	bl	120e8 <strncmp@plt>
   1a84c:	sub	r3, r4, #8
   1a850:	cmp	r0, #0
   1a854:	bne	1a830 <mount@plt+0x86d0>
   1a858:	cmp	r3, #0
   1a85c:	beq	1a880 <mount@plt+0x8720>
   1a860:	ldr	r4, [r4, #12]
   1a864:	ldr	r2, [sp, #4]
   1a868:	ldr	r3, [r5]
   1a86c:	mov	r0, r4
   1a870:	cmp	r2, r3
   1a874:	bne	1a8b0 <mount@plt+0x8750>
   1a878:	add	sp, sp, #8
   1a87c:	pop	{r4, r5, r6, pc}
   1a880:	mov	r0, r6
   1a884:	bl	120c4 <if_nametoindex@plt>
   1a888:	subs	r4, r0, #0
   1a88c:	bne	1a864 <mount@plt+0x8704>
   1a890:	ldr	r1, [pc, #40]	; 1a8c0 <mount@plt+0x8760>
   1a894:	mov	r0, r6
   1a898:	mov	r2, sp
   1a89c:	add	r1, pc, r1
   1a8a0:	bl	12034 <sscanf@plt>
   1a8a4:	cmp	r0, #1
   1a8a8:	ldreq	r4, [sp]
   1a8ac:	b	1a864 <mount@plt+0x8704>
   1a8b0:	bl	11ca4 <__stack_chk_fail@plt>
   1a8b4:	andeq	r8, r1, r0, lsl r8
   1a8b8:	andeq	r0, r0, ip, lsl #4
   1a8bc:	andeq	r9, r1, r0, lsl #1
   1a8c0:	andeq	r7, r0, ip, lsr #11
   1a8c4:	push	{r4, r5, r6, r7, r8, lr}
   1a8c8:	ldr	r6, [pc, #144]	; 1a960 <mount@plt+0x8800>
   1a8cc:	ldr	r5, [pc, #144]	; 1a964 <mount@plt+0x8804>
   1a8d0:	add	r6, pc, r6
   1a8d4:	add	r5, pc, r5
   1a8d8:	ldr	r4, [r6, #32]
   1a8dc:	cmp	r4, #0
   1a8e0:	popne	{r4, r5, r6, r7, r8, pc}
   1a8e4:	mov	r1, r4
   1a8e8:	mov	r7, r0
   1a8ec:	bl	1dec0 <mount@plt+0xbd60>
   1a8f0:	cmp	r0, #0
   1a8f4:	blt	1a924 <mount@plt+0x87c4>
   1a8f8:	ldr	r2, [pc, #104]	; 1a968 <mount@plt+0x8808>
   1a8fc:	mov	r0, r7
   1a900:	mov	r3, r4
   1a904:	ldr	r1, [r5, r2]
   1a908:	mov	r2, r4
   1a90c:	bl	1e318 <mount@plt+0xc1b8>
   1a910:	cmp	r0, #0
   1a914:	blt	1a938 <mount@plt+0x87d8>
   1a918:	mov	r3, #1
   1a91c:	str	r3, [r6, #32]
   1a920:	pop	{r4, r5, r6, r7, r8, pc}
   1a924:	ldr	r0, [pc, #64]	; 1a96c <mount@plt+0x880c>
   1a928:	add	r0, pc, r0
   1a92c:	bl	11d10 <perror@plt>
   1a930:	mov	r0, #1
   1a934:	bl	11e84 <exit@plt>
   1a938:	ldr	r3, [pc, #48]	; 1a970 <mount@plt+0x8810>
   1a93c:	ldr	r0, [pc, #48]	; 1a974 <mount@plt+0x8814>
   1a940:	mov	r2, #16
   1a944:	ldr	r3, [r5, r3]
   1a948:	mov	r1, #1
   1a94c:	add	r0, pc, r0
   1a950:	ldr	r3, [r3]
   1a954:	bl	11d40 <fwrite@plt>
   1a958:	mov	r0, #1
   1a95c:	bl	11e84 <exit@plt>
   1a960:	andeq	r8, r1, r0, lsr #31
   1a964:	andeq	r8, r1, r4, lsr #14
   1a968:	andeq	r0, r0, r4, lsl r2
   1a96c:	andeq	r7, r0, ip, lsr #10
   1a970:	andeq	r0, r0, r8, lsl r2
   1a974:	andeq	r7, r0, r4, lsr #10
   1a978:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a97c:	sub	sp, sp, #8
   1a980:	cmp	r1, #4
   1a984:	mov	r8, r3
   1a988:	ldr	r6, [sp, #40]	; 0x28
   1a98c:	beq	1aa50 <mount@plt+0x88f0>
   1a990:	cmp	r1, #16
   1a994:	bne	1a9ac <mount@plt+0x884c>
   1a998:	ldr	ip, [pc, #244]	; 1aa94 <mount@plt+0x8934>
   1a99c:	ldr	r3, [pc, #244]	; 1aa98 <mount@plt+0x8938>
   1a9a0:	cmp	r2, r3
   1a9a4:	cmpne	r2, ip
   1a9a8:	beq	1aa80 <mount@plt+0x8920>
   1a9ac:	mov	r7, r1
   1a9b0:	ldr	r2, [pc, #228]	; 1aa9c <mount@plt+0x893c>
   1a9b4:	ldrb	r1, [r0]
   1a9b8:	add	r2, pc, r2
   1a9bc:	str	r2, [sp]
   1a9c0:	str	r1, [sp, #4]
   1a9c4:	mov	r9, r0
   1a9c8:	mvn	r3, #0
   1a9cc:	mov	r2, #1
   1a9d0:	mov	r1, r6
   1a9d4:	mov	r0, r8
   1a9d8:	bl	1213c <__snprintf_chk@plt>
   1a9dc:	cmp	r6, #2
   1a9e0:	cmpgt	r7, #1
   1a9e4:	ble	1aa44 <mount@plt+0x88e4>
   1a9e8:	ldr	sl, [pc, #176]	; 1aaa0 <mount@plt+0x8940>
   1a9ec:	mov	r4, r9
   1a9f0:	add	sl, pc, sl
   1a9f4:	mov	r5, #2
   1a9f8:	ldrb	r2, [r4, #1]
   1a9fc:	mvn	r3, #0
   1aa00:	sub	r1, r6, r5
   1aa04:	str	r2, [sp, #4]
   1aa08:	add	r0, r8, r5
   1aa0c:	str	sl, [sp]
   1aa10:	mov	r2, #1
   1aa14:	bl	1213c <__snprintf_chk@plt>
   1aa18:	add	ip, r4, #2
   1aa1c:	sub	ip, ip, r9
   1aa20:	cmp	ip, r7
   1aa24:	add	r5, r5, #3
   1aa28:	movge	r3, #0
   1aa2c:	movlt	r3, #1
   1aa30:	cmp	r6, r5
   1aa34:	movle	r3, #0
   1aa38:	add	r4, r4, #1
   1aa3c:	cmp	r3, #0
   1aa40:	bne	1a9f8 <mount@plt+0x8898>
   1aa44:	mov	r0, r8
   1aa48:	add	sp, sp, #8
   1aa4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1aa50:	ldr	r3, [pc, #76]	; 1aaa4 <mount@plt+0x8944>
   1aa54:	bic	ip, r2, #8
   1aa58:	cmp	r2, r3
   1aa5c:	cmpne	ip, #768	; 0x300
   1aa60:	bne	1a9ac <mount@plt+0x884c>
   1aa64:	mov	r1, r0
   1aa68:	mov	r3, r6
   1aa6c:	mov	r2, r8
   1aa70:	mov	r0, #2
   1aa74:	add	sp, sp, #8
   1aa78:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1aa7c:	b	12094 <inet_ntop@plt>
   1aa80:	mov	r1, r0
   1aa84:	mov	r3, r6
   1aa88:	mov	r2, r8
   1aa8c:	mov	r0, #10
   1aa90:	b	1aa74 <mount@plt+0x8914>
   1aa94:	andeq	r0, r0, r1, lsl #6
   1aa98:	andeq	r0, r0, r7, lsr r3
   1aa9c:	andeq	r7, r0, r4, asr #6
   1aaa0:	muleq	r0, r4, r4
   1aaa4:	andeq	r0, r0, sl, lsl #6
   1aaa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aaac:	sub	sp, sp, #284	; 0x11c
   1aab0:	ldr	fp, [pc, #396]	; 1ac44 <mount@plt+0x8ae4>
   1aab4:	ldr	r3, [pc, #396]	; 1ac48 <mount@plt+0x8ae8>
   1aab8:	add	fp, pc, fp
   1aabc:	mov	r7, r0
   1aac0:	ldr	r3, [fp, r3]
   1aac4:	mov	r6, r1
   1aac8:	str	r3, [sp, #4]
   1aacc:	ldr	r3, [r3]
   1aad0:	mov	r0, r2
   1aad4:	mov	r1, #46	; 0x2e
   1aad8:	mov	r5, r2
   1aadc:	str	r3, [sp, #276]	; 0x114
   1aae0:	bl	11ea8 <strchr@plt>
   1aae4:	subs	r8, r0, #0
   1aae8:	beq	1ab2c <mount@plt+0x89cc>
   1aaec:	mov	r2, #2
   1aaf0:	mov	r1, r5
   1aaf4:	add	r0, sp, #12
   1aaf8:	bl	17b6c <mount@plt+0x5a0c>
   1aafc:	cmp	r0, #0
   1ab00:	bne	1abd4 <mount@plt+0x8a74>
   1ab04:	cmp	r6, #3
   1ab08:	bgt	1abfc <mount@plt+0x8a9c>
   1ab0c:	mvn	r0, #0
   1ab10:	ldr	r3, [sp, #4]
   1ab14:	ldr	r2, [sp, #276]	; 0x114
   1ab18:	ldr	r3, [r3]
   1ab1c:	cmp	r2, r3
   1ab20:	bne	1ac40 <mount@plt+0x8ae0>
   1ab24:	add	sp, sp, #284	; 0x11c
   1ab28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab2c:	cmp	r6, #0
   1ab30:	ble	1ac38 <mount@plt+0x8ad8>
   1ab34:	ldr	r9, [pc, #272]	; 1ac4c <mount@plt+0x8aec>
   1ab38:	sub	r4, r7, #1
   1ab3c:	str	r8, [sp]
   1ab40:	add	r6, r4, r6
   1ab44:	add	sl, sp, #8
   1ab48:	add	r9, pc, r9
   1ab4c:	b	1ab80 <mount@plt+0x8a20>
   1ab50:	ldr	r3, [sp, #8]
   1ab54:	cmp	r3, #255	; 0xff
   1ab58:	bhi	1ac0c <mount@plt+0x8aac>
   1ab5c:	add	r0, r4, #2
   1ab60:	cmp	r8, #0
   1ab64:	strb	r3, [r4, #1]
   1ab68:	sub	r0, r0, r7
   1ab6c:	add	r4, r4, #1
   1ab70:	beq	1ab10 <mount@plt+0x89b0>
   1ab74:	cmp	r4, r6
   1ab78:	mov	r5, r8
   1ab7c:	beq	1ac30 <mount@plt+0x8ad0>
   1ab80:	mov	r1, #58	; 0x3a
   1ab84:	mov	r0, r5
   1ab88:	bl	11ea8 <strchr@plt>
   1ab8c:	mov	r2, sl
   1ab90:	mov	r1, r9
   1ab94:	subs	r8, r0, #0
   1ab98:	mov	r0, r5
   1ab9c:	ldrne	r3, [sp]
   1aba0:	strbne	r3, [r8], #1
   1aba4:	bl	12034 <sscanf@plt>
   1aba8:	cmp	r0, #1
   1abac:	beq	1ab50 <mount@plt+0x89f0>
   1abb0:	ldr	r1, [pc, #152]	; 1ac50 <mount@plt+0x8af0>
   1abb4:	ldr	r2, [pc, #152]	; 1ac54 <mount@plt+0x8af4>
   1abb8:	mov	r3, r5
   1abbc:	ldr	r0, [fp, r1]
   1abc0:	add	r2, pc, r2
   1abc4:	mov	r1, #1
   1abc8:	ldr	r0, [r0]
   1abcc:	bl	11f74 <__fprintf_chk@plt>
   1abd0:	b	1ab0c <mount@plt+0x89ac>
   1abd4:	ldr	r1, [pc, #116]	; 1ac50 <mount@plt+0x8af0>
   1abd8:	ldr	r2, [pc, #120]	; 1ac58 <mount@plt+0x8af8>
   1abdc:	mov	r3, r5
   1abe0:	ldr	r0, [fp, r1]
   1abe4:	add	r2, pc, r2
   1abe8:	mov	r1, #1
   1abec:	ldr	r0, [r0]
   1abf0:	bl	11f74 <__fprintf_chk@plt>
   1abf4:	mvn	r0, #0
   1abf8:	b	1ab10 <mount@plt+0x89b0>
   1abfc:	ldr	r3, [sp, #20]
   1ac00:	mov	r0, #4
   1ac04:	str	r3, [r7]
   1ac08:	b	1ab10 <mount@plt+0x89b0>
   1ac0c:	ldr	r2, [pc, #60]	; 1ac50 <mount@plt+0x8af0>
   1ac10:	mov	r1, r0
   1ac14:	mov	r3, r5
   1ac18:	ldr	r0, [fp, r2]
   1ac1c:	ldr	r2, [pc, #56]	; 1ac5c <mount@plt+0x8afc>
   1ac20:	ldr	r0, [r0]
   1ac24:	add	r2, pc, r2
   1ac28:	bl	11f74 <__fprintf_chk@plt>
   1ac2c:	b	1ab0c <mount@plt+0x89ac>
   1ac30:	add	r0, r0, #1
   1ac34:	b	1ab10 <mount@plt+0x89b0>
   1ac38:	mov	r0, #1
   1ac3c:	b	1ab10 <mount@plt+0x89b0>
   1ac40:	bl	11ca4 <__stack_chk_fail@plt>
   1ac44:	andeq	r8, r1, r0, asr #10
   1ac48:	andeq	r0, r0, ip, lsl #4
   1ac4c:	andeq	r7, r0, r0, ror #6
   1ac50:	andeq	r0, r0, r8, lsl r2
   1ac54:	andeq	r7, r0, ip, asr #5
   1ac58:	andeq	r7, r0, r8, lsr #5
   1ac5c:	andeq	r7, r0, r8, ror #4
   1ac60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac64:	sub	sp, sp, #12672	; 0x3180
   1ac68:	ldr	r5, [pc, #1028]	; 1b074 <mount@plt+0x8f14>
   1ac6c:	ldr	r3, [pc, #1028]	; 1b078 <mount@plt+0x8f18>
   1ac70:	add	r5, pc, r5
   1ac74:	sub	sp, sp, #20
   1ac78:	ldr	r3, [r5, r3]
   1ac7c:	add	lr, sp, #12672	; 0x3180
   1ac80:	ldr	r1, [pc, #1012]	; 1b07c <mount@plt+0x8f1c>
   1ac84:	ldr	r2, [pc, #1012]	; 1b080 <mount@plt+0x8f20>
   1ac88:	ldr	ip, [r3]
   1ac8c:	add	lr, lr, #12
   1ac90:	add	r6, sp, #400	; 0x190
   1ac94:	sub	r7, r6, #4
   1ac98:	add	r1, pc, r1
   1ac9c:	str	r3, [sp, #20]
   1aca0:	add	r2, pc, r2
   1aca4:	mov	r3, #4096	; 0x1000
   1aca8:	str	r0, [sp, #8]
   1acac:	str	r1, [sp, #4]
   1acb0:	str	r2, [sp]
   1acb4:	mov	r1, r3
   1acb8:	mov	r2, #1
   1acbc:	str	ip, [lr]
   1acc0:	mov	r4, r0
   1acc4:	mov	r0, r7
   1acc8:	bl	1213c <__snprintf_chk@plt>
   1accc:	mov	r0, r7
   1acd0:	mov	r1, #524288	; 0x80000
   1acd4:	bl	11db8 <open64@plt>
   1acd8:	subs	r7, r0, #0
   1acdc:	blt	1af80 <mount@plt+0x8e20>
   1ace0:	mov	r1, #1073741824	; 0x40000000
   1ace4:	bl	11cec <setns@plt>
   1ace8:	cmp	r0, #0
   1acec:	blt	1afbc <mount@plt+0x8e5c>
   1acf0:	mov	r0, r7
   1acf4:	bl	12118 <close@plt>
   1acf8:	mov	r0, #131072	; 0x20000
   1acfc:	bl	11c20 <unshare@plt>
   1ad00:	cmp	r0, #0
   1ad04:	blt	1b000 <mount@plt+0x8ea0>
   1ad08:	ldr	r2, [pc, #884]	; 1b084 <mount@plt+0x8f24>
   1ad0c:	ldr	r1, [pc, #884]	; 1b088 <mount@plt+0x8f28>
   1ad10:	ldr	r0, [pc, #884]	; 1b08c <mount@plt+0x8f2c>
   1ad14:	mov	r3, #0
   1ad18:	str	r3, [sp]
   1ad1c:	add	r2, pc, r2
   1ad20:	mov	r3, #540672	; 0x84000
   1ad24:	add	r1, pc, r1
   1ad28:	add	r0, pc, r0
   1ad2c:	bl	12160 <mount@plt>
   1ad30:	subs	r9, r0, #0
   1ad34:	bne	1af48 <mount@plt+0x8de8>
   1ad38:	ldr	r7, [pc, #848]	; 1b090 <mount@plt+0x8f30>
   1ad3c:	mov	r1, #2
   1ad40:	add	r7, pc, r7
   1ad44:	mov	r0, r7
   1ad48:	bl	11dac <umount2@plt>
   1ad4c:	cmp	r0, #0
   1ad50:	blt	1af28 <mount@plt+0x8dc8>
   1ad54:	mov	r3, #0
   1ad58:	mov	r2, #0
   1ad5c:	str	r2, [sp]
   1ad60:	ldr	r1, [pc, #812]	; 1b094 <mount@plt+0x8f34>
   1ad64:	ldr	r2, [pc, #812]	; 1b098 <mount@plt+0x8f38>
   1ad68:	add	r1, pc, r1
   1ad6c:	add	r2, pc, r2
   1ad70:	mov	r0, r4
   1ad74:	bl	12160 <mount@plt>
   1ad78:	cmp	r0, #0
   1ad7c:	blt	1b038 <mount@plt+0x8ed8>
   1ad80:	mov	r0, r4
   1ad84:	bl	11e9c <strlen@plt>
   1ad88:	cmp	r0, #254	; 0xfe
   1ad8c:	bls	1adbc <mount@plt+0x8c5c>
   1ad90:	add	r3, sp, #12672	; 0x3180
   1ad94:	add	r3, r3, #12
   1ad98:	ldr	r2, [r3]
   1ad9c:	ldr	r3, [sp, #20]
   1ada0:	mov	r0, r9
   1ada4:	ldr	r3, [r3]
   1ada8:	cmp	r2, r3
   1adac:	bne	1b070 <mount@plt+0x8f10>
   1adb0:	add	sp, sp, #12672	; 0x3180
   1adb4:	add	sp, sp, #20
   1adb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1adbc:	ldr	r1, [pc, #728]	; 1b09c <mount@plt+0x8f3c>
   1adc0:	ldr	r2, [pc, #728]	; 1b0a0 <mount@plt+0x8f40>
   1adc4:	ldr	r3, [pc, #728]	; 1b0a4 <mount@plt+0x8f44>
   1adc8:	add	r1, pc, r1
   1adcc:	add	r2, pc, r2
   1add0:	add	r8, sp, #128	; 0x80
   1add4:	stmib	sp, {r1, r4}
   1add8:	str	r2, [sp]
   1addc:	mov	r1, r3
   1ade0:	mov	r2, #1
   1ade4:	mov	r0, r8
   1ade8:	bl	1213c <__snprintf_chk@plt>
   1adec:	mov	r0, r8
   1adf0:	bl	11da0 <opendir@plt>
   1adf4:	subs	sl, r0, #0
   1adf8:	beq	1ad90 <mount@plt+0x8c30>
   1adfc:	ldr	r3, [pc, #676]	; 1b0a8 <mount@plt+0x8f48>
   1ae00:	ldr	fp, [pc, #676]	; 1b0ac <mount@plt+0x8f4c>
   1ae04:	add	r3, pc, r3
   1ae08:	str	r3, [sp, #24]
   1ae0c:	ldr	r3, [pc, #668]	; 1b0b0 <mount@plt+0x8f50>
   1ae10:	add	fp, pc, fp
   1ae14:	add	r3, pc, r3
   1ae18:	str	r3, [sp, #28]
   1ae1c:	mov	r0, sl
   1ae20:	bl	12040 <readdir64@plt>
   1ae24:	cmp	r0, #0
   1ae28:	beq	1af1c <mount@plt+0x8dbc>
   1ae2c:	add	r4, r0, #19
   1ae30:	mov	r0, r4
   1ae34:	mov	r1, fp
   1ae38:	bl	11b9c <strcmp@plt>
   1ae3c:	cmp	r0, #0
   1ae40:	beq	1ae1c <mount@plt+0x8cbc>
   1ae44:	ldr	r1, [sp, #24]
   1ae48:	mov	r0, r4
   1ae4c:	bl	11b9c <strcmp@plt>
   1ae50:	cmp	r0, #0
   1ae54:	beq	1ae1c <mount@plt+0x8cbc>
   1ae58:	ldr	r2, [sp, #28]
   1ae5c:	add	r6, sp, #4480	; 0x1180
   1ae60:	mov	r3, #4096	; 0x1000
   1ae64:	add	r6, r6, #12
   1ae68:	mov	r1, r3
   1ae6c:	str	r2, [sp]
   1ae70:	str	r4, [sp, #8]
   1ae74:	mov	r2, #1
   1ae78:	str	r8, [sp, #4]
   1ae7c:	mov	r0, r6
   1ae80:	bl	1213c <__snprintf_chk@plt>
   1ae84:	ldr	r2, [pc, #552]	; 1b0b4 <mount@plt+0x8f54>
   1ae88:	add	r7, sp, #8576	; 0x2180
   1ae8c:	add	r2, pc, r2
   1ae90:	mov	r3, #4096	; 0x1000
   1ae94:	add	r7, r7, #12
   1ae98:	mov	r1, r3
   1ae9c:	stm	sp, {r2, r4}
   1aea0:	mov	r0, r7
   1aea4:	mov	r2, #1
   1aea8:	bl	1213c <__snprintf_chk@plt>
   1aeac:	ldr	r2, [pc, #516]	; 1b0b8 <mount@plt+0x8f58>
   1aeb0:	mov	r3, #0
   1aeb4:	str	r3, [sp]
   1aeb8:	mov	r1, r7
   1aebc:	mov	r0, r6
   1aec0:	mov	r3, #4096	; 0x1000
   1aec4:	add	r2, pc, r2
   1aec8:	bl	12160 <mount@plt>
   1aecc:	cmp	r0, #0
   1aed0:	bge	1ae1c <mount@plt+0x8cbc>
   1aed4:	ldr	r3, [pc, #480]	; 1b0bc <mount@plt+0x8f5c>
   1aed8:	ldr	r3, [r5, r3]
   1aedc:	ldr	r4, [r3]
   1aee0:	bl	11ec0 <__errno_location@plt>
   1aee4:	ldr	r0, [r0]
   1aee8:	bl	11e0c <strerror@plt>
   1aeec:	ldr	r2, [pc, #460]	; 1b0c0 <mount@plt+0x8f60>
   1aef0:	mov	r3, r6
   1aef4:	add	r2, pc, r2
   1aef8:	mov	r1, #1
   1aefc:	str	r7, [sp]
   1af00:	str	r0, [sp, #4]
   1af04:	mov	r0, r4
   1af08:	bl	11f74 <__fprintf_chk@plt>
   1af0c:	mov	r0, sl
   1af10:	bl	12040 <readdir64@plt>
   1af14:	cmp	r0, #0
   1af18:	bne	1ae2c <mount@plt+0x8ccc>
   1af1c:	mov	r0, sl
   1af20:	bl	12130 <closedir@plt>
   1af24:	b	1ad90 <mount@plt+0x8c30>
   1af28:	mov	r0, r7
   1af2c:	add	r1, sp, #32
   1af30:	bl	11f50 <statvfs64@plt>
   1af34:	cmp	r0, #0
   1af38:	bne	1ad54 <mount@plt+0x8bf4>
   1af3c:	ldr	r3, [r6, #-304]	; 0xfffffed0
   1af40:	and	r3, r3, #1
   1af44:	b	1ad58 <mount@plt+0x8bf8>
   1af48:	ldr	r3, [pc, #364]	; 1b0bc <mount@plt+0x8f5c>
   1af4c:	mvn	r9, #0
   1af50:	ldr	r3, [r5, r3]
   1af54:	ldr	r4, [r3]
   1af58:	bl	11ec0 <__errno_location@plt>
   1af5c:	ldr	r0, [r0]
   1af60:	bl	11e0c <strerror@plt>
   1af64:	ldr	r2, [pc, #344]	; 1b0c4 <mount@plt+0x8f64>
   1af68:	mov	r1, #1
   1af6c:	add	r2, pc, r2
   1af70:	mov	r3, r0
   1af74:	mov	r0, r4
   1af78:	bl	11f74 <__fprintf_chk@plt>
   1af7c:	b	1ad90 <mount@plt+0x8c30>
   1af80:	ldr	r3, [pc, #308]	; 1b0bc <mount@plt+0x8f5c>
   1af84:	mvn	r9, #0
   1af88:	ldr	r3, [r5, r3]
   1af8c:	ldr	r5, [r3]
   1af90:	bl	11ec0 <__errno_location@plt>
   1af94:	ldr	r0, [r0]
   1af98:	bl	11e0c <strerror@plt>
   1af9c:	ldr	r2, [pc, #292]	; 1b0c8 <mount@plt+0x8f68>
   1afa0:	mov	r3, r4
   1afa4:	add	r2, pc, r2
   1afa8:	mov	r1, #1
   1afac:	str	r0, [sp]
   1afb0:	mov	r0, r5
   1afb4:	bl	11f74 <__fprintf_chk@plt>
   1afb8:	b	1ad90 <mount@plt+0x8c30>
   1afbc:	ldr	r3, [pc, #248]	; 1b0bc <mount@plt+0x8f5c>
   1afc0:	mvn	r9, #0
   1afc4:	ldr	r3, [r5, r3]
   1afc8:	ldr	r5, [r3]
   1afcc:	bl	11ec0 <__errno_location@plt>
   1afd0:	ldr	r0, [r0]
   1afd4:	bl	11e0c <strerror@plt>
   1afd8:	ldr	r2, [pc, #236]	; 1b0cc <mount@plt+0x8f6c>
   1afdc:	mov	r3, r4
   1afe0:	add	r2, pc, r2
   1afe4:	mov	r1, #1
   1afe8:	str	r0, [sp]
   1afec:	mov	r0, r5
   1aff0:	bl	11f74 <__fprintf_chk@plt>
   1aff4:	mov	r0, r7
   1aff8:	bl	12118 <close@plt>
   1affc:	b	1ad90 <mount@plt+0x8c30>
   1b000:	ldr	r3, [pc, #180]	; 1b0bc <mount@plt+0x8f5c>
   1b004:	mvn	r9, #0
   1b008:	ldr	r3, [r5, r3]
   1b00c:	ldr	r4, [r3]
   1b010:	bl	11ec0 <__errno_location@plt>
   1b014:	ldr	r0, [r0]
   1b018:	bl	11e0c <strerror@plt>
   1b01c:	ldr	r2, [pc, #172]	; 1b0d0 <mount@plt+0x8f70>
   1b020:	mov	r1, #1
   1b024:	add	r2, pc, r2
   1b028:	mov	r3, r0
   1b02c:	mov	r0, r4
   1b030:	bl	11f74 <__fprintf_chk@plt>
   1b034:	b	1ad90 <mount@plt+0x8c30>
   1b038:	ldr	r3, [pc, #124]	; 1b0bc <mount@plt+0x8f5c>
   1b03c:	mvn	r9, #0
   1b040:	ldr	r3, [r5, r3]
   1b044:	ldr	r4, [r3]
   1b048:	bl	11ec0 <__errno_location@plt>
   1b04c:	ldr	r0, [r0]
   1b050:	bl	11e0c <strerror@plt>
   1b054:	ldr	r2, [pc, #120]	; 1b0d4 <mount@plt+0x8f74>
   1b058:	mov	r1, #1
   1b05c:	add	r2, pc, r2
   1b060:	mov	r3, r0
   1b064:	mov	r0, r4
   1b068:	bl	11f74 <__fprintf_chk@plt>
   1b06c:	b	1ad90 <mount@plt+0x8c30>
   1b070:	bl	11ca4 <__stack_chk_fail@plt>
   1b074:	andeq	r8, r1, r8, lsl #7
   1b078:	andeq	r0, r0, ip, lsl #4
   1b07c:	andeq	r7, r0, r4, lsl r2
   1b080:	andeq	r7, r0, ip, lsl r2
   1b084:	andeq	r7, r0, r4, lsl r2
   1b088:	andeq	r7, r0, r4, lsl r2
   1b08c:	andeq	r7, r0, ip, ror #11
   1b090:	andeq	r7, r0, r0, lsr #4
   1b094:	strdeq	r7, [r0], -r8
   1b098:	strdeq	r7, [r0], -ip
   1b09c:	andeq	r7, r0, r4, asr #3
   1b0a0:	strdeq	r7, [r0], -r0
   1b0a4:	andeq	r0, r0, sl, lsl #2
   1b0a8:	muleq	r0, r8, r1
   1b0ac:	andeq	r7, r0, r8, lsl #3
   1b0b0:	andeq	r7, r0, r8, lsr #1
   1b0b4:	andeq	r7, r0, r4, lsl r1
   1b0b8:	andeq	r7, r0, ip, rrx
   1b0bc:	andeq	r0, r0, r8, lsl r2
   1b0c0:	strheq	r7, [r0], -r4
   1b0c4:	ldrdeq	r6, [r0], -r0
   1b0c8:	andeq	r6, r0, r0, lsr #30
   1b0cc:	andeq	r6, r0, ip, lsl #30
   1b0d0:	strdeq	r6, [r0], -r8
   1b0d4:	andeq	r6, r0, r4, lsl pc
   1b0d8:	ldr	r3, [pc, #160]	; 1b180 <mount@plt+0x9020>
   1b0dc:	ldr	r2, [pc, #160]	; 1b184 <mount@plt+0x9024>
   1b0e0:	add	r3, pc, r3
   1b0e4:	push	{r4, r5, lr}
   1b0e8:	sub	sp, sp, #4096	; 0x1000
   1b0ec:	ldr	r4, [r3, r2]
   1b0f0:	sub	sp, sp, #28
   1b0f4:	add	r2, sp, #4096	; 0x1000
   1b0f8:	add	r2, r2, #20
   1b0fc:	ldr	r3, [r4]
   1b100:	mov	r1, #47	; 0x2f
   1b104:	mov	r5, r0
   1b108:	str	r3, [r2]
   1b10c:	bl	11ea8 <strchr@plt>
   1b110:	cmp	r0, #0
   1b114:	beq	1b148 <mount@plt+0x8fe8>
   1b118:	mov	r0, r5
   1b11c:	mov	r1, #0
   1b120:	bl	11db8 <open64@plt>
   1b124:	add	r3, sp, #4096	; 0x1000
   1b128:	add	r3, r3, #20
   1b12c:	ldr	r2, [r3]
   1b130:	ldr	r3, [r4]
   1b134:	cmp	r2, r3
   1b138:	bne	1b17c <mount@plt+0x901c>
   1b13c:	add	sp, sp, #4096	; 0x1000
   1b140:	add	sp, sp, #28
   1b144:	pop	{r4, r5, pc}
   1b148:	ldr	r1, [pc, #56]	; 1b188 <mount@plt+0x9028>
   1b14c:	ldr	r2, [pc, #56]	; 1b18c <mount@plt+0x902c>
   1b150:	add	r1, pc, r1
   1b154:	add	r2, pc, r2
   1b158:	stmib	sp, {r1, r5}
   1b15c:	mov	r3, #4096	; 0x1000
   1b160:	add	r5, sp, #20
   1b164:	str	r2, [sp]
   1b168:	mov	r0, r5
   1b16c:	mov	r1, r3
   1b170:	mov	r2, #1
   1b174:	bl	1213c <__snprintf_chk@plt>
   1b178:	b	1b118 <mount@plt+0x8fb8>
   1b17c:	bl	11ca4 <__stack_chk_fail@plt>
   1b180:	andeq	r7, r1, r8, lsl pc
   1b184:	andeq	r0, r0, ip, lsl #4
   1b188:	andeq	r6, r0, ip, asr sp
   1b18c:	andeq	r6, r0, r8, ror #26
   1b190:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b194:	mov	r9, r0
   1b198:	ldr	r0, [pc, #136]	; 1b228 <mount@plt+0x90c8>
   1b19c:	mov	r8, r1
   1b1a0:	add	r0, pc, r0
   1b1a4:	bl	11da0 <opendir@plt>
   1b1a8:	subs	r5, r0, #0
   1b1ac:	beq	1b220 <mount@plt+0x90c0>
   1b1b0:	ldr	r6, [pc, #116]	; 1b22c <mount@plt+0x90cc>
   1b1b4:	ldr	r7, [pc, #116]	; 1b230 <mount@plt+0x90d0>
   1b1b8:	add	r6, pc, r6
   1b1bc:	add	r7, pc, r7
   1b1c0:	mov	r0, r5
   1b1c4:	bl	12040 <readdir64@plt>
   1b1c8:	mov	r1, r6
   1b1cc:	cmp	r0, #0
   1b1d0:	add	r4, r0, #19
   1b1d4:	mov	r0, r4
   1b1d8:	beq	1b210 <mount@plt+0x90b0>
   1b1dc:	bl	11b9c <strcmp@plt>
   1b1e0:	mov	r1, r7
   1b1e4:	cmp	r0, #0
   1b1e8:	mov	r0, r4
   1b1ec:	beq	1b1c0 <mount@plt+0x9060>
   1b1f0:	bl	11b9c <strcmp@plt>
   1b1f4:	mov	r1, r8
   1b1f8:	cmp	r0, #0
   1b1fc:	mov	r0, r4
   1b200:	beq	1b1c0 <mount@plt+0x9060>
   1b204:	blx	r9
   1b208:	cmp	r0, #0
   1b20c:	beq	1b1c0 <mount@plt+0x9060>
   1b210:	mov	r0, r5
   1b214:	bl	12130 <closedir@plt>
   1b218:	mov	r0, #0
   1b21c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b220:	mvn	r0, #0
   1b224:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b228:	andeq	r6, r0, ip, lsl #26
   1b22c:	andeq	r6, r0, r0, ror #27
   1b230:	andeq	r6, r0, r0, ror #27
   1b234:	push	{r4, r5, r6, lr}
   1b238:	mov	r4, r0
   1b23c:	ldrb	r0, [r0, #9]
   1b240:	mov	r5, r1
   1b244:	ldr	r1, [r4]
   1b248:	cmp	r0, #0
   1b24c:	bne	1b278 <mount@plt+0x9118>
   1b250:	mov	r3, #44	; 0x2c
   1b254:	strb	r3, [r4, #9]
   1b258:	mov	r0, r5
   1b25c:	bl	12064 <putc@plt>
   1b260:	ldr	r3, [r4, #4]
   1b264:	mov	r2, #0
   1b268:	add	r3, r3, #1
   1b26c:	str	r3, [r4, #4]
   1b270:	strb	r2, [r4, #9]
   1b274:	pop	{r4, r5, r6, pc}
   1b278:	bl	12064 <putc@plt>
   1b27c:	ldr	r1, [r4]
   1b280:	b	1b250 <mount@plt+0x90f0>
   1b284:	push	{r4, r5, r6, lr}
   1b288:	mov	r5, r0
   1b28c:	mov	r0, #10
   1b290:	ldr	r1, [r5]
   1b294:	bl	12064 <putc@plt>
   1b298:	ldr	r3, [r5, #4]
   1b29c:	cmp	r3, #0
   1b2a0:	popeq	{r4, r5, r6, pc}
   1b2a4:	ldr	r6, [pc, #44]	; 1b2d8 <mount@plt+0x9178>
   1b2a8:	mov	r4, #0
   1b2ac:	add	r6, pc, r6
   1b2b0:	ldr	r3, [r5]
   1b2b4:	mov	r2, #4
   1b2b8:	mov	r1, #1
   1b2bc:	mov	r0, r6
   1b2c0:	bl	11d40 <fwrite@plt>
   1b2c4:	ldr	r3, [r5, #4]
   1b2c8:	add	r4, r4, #1
   1b2cc:	cmp	r4, r3
   1b2d0:	bcc	1b2b0 <mount@plt+0x9150>
   1b2d4:	pop	{r4, r5, r6, pc}
   1b2d8:	andeq	r4, r0, r8, asr #22
   1b2dc:	ldr	r3, [pc, #28]	; 1b300 <mount@plt+0x91a0>
   1b2e0:	ldr	r1, [pc, #28]	; 1b304 <mount@plt+0x91a4>
   1b2e4:	ldr	r0, [pc, #28]	; 1b308 <mount@plt+0x91a8>
   1b2e8:	push	{r4, lr}
   1b2ec:	add	r3, pc, r3
   1b2f0:	mov	r2, #133	; 0x85
   1b2f4:	add	r1, pc, r1
   1b2f8:	add	r0, pc, r0
   1b2fc:	bl	12154 <__assert_fail@plt>
   1b300:	ldrdeq	r6, [r0], -r8
   1b304:	andeq	r6, r0, ip, ror #25
   1b308:	strdeq	r6, [r0], -r8
   1b30c:	push	{r4, r5, r6, r7, r8, lr}
   1b310:	mov	r5, r0
   1b314:	mov	r4, r1
   1b318:	mov	r0, #34	; 0x22
   1b31c:	ldr	r1, [r5]
   1b320:	bl	12064 <putc@plt>
   1b324:	ldrb	r0, [r4]
   1b328:	cmp	r0, #0
   1b32c:	beq	1b3b4 <mount@plt+0x9254>
   1b330:	ldr	r8, [pc, #296]	; 1b460 <mount@plt+0x9300>
   1b334:	ldr	r6, [pc, #296]	; 1b464 <mount@plt+0x9304>
   1b338:	ldr	r7, [pc, #296]	; 1b468 <mount@plt+0x9308>
   1b33c:	add	r8, pc, r8
   1b340:	add	r6, pc, r6
   1b344:	add	r7, pc, r7
   1b348:	b	1b370 <mount@plt+0x9210>
   1b34c:	cmp	r0, #92	; 0x5c
   1b350:	bne	1b3fc <mount@plt+0x929c>
   1b354:	mov	r2, #2
   1b358:	mov	r1, #1
   1b35c:	mov	r0, r6
   1b360:	bl	11d40 <fwrite@plt>
   1b364:	ldrb	r0, [r4, #1]!
   1b368:	cmp	r0, #0
   1b36c:	beq	1b3b4 <mount@plt+0x9254>
   1b370:	cmp	r0, #12
   1b374:	ldr	r3, [r5]
   1b378:	beq	1b44c <mount@plt+0x92ec>
   1b37c:	bls	1b3e4 <mount@plt+0x9284>
   1b380:	cmp	r0, #34	; 0x22
   1b384:	beq	1b438 <mount@plt+0x92d8>
   1b388:	bls	1b3c4 <mount@plt+0x9264>
   1b38c:	cmp	r0, #39	; 0x27
   1b390:	bne	1b34c <mount@plt+0x91ec>
   1b394:	ldr	r0, [pc, #208]	; 1b46c <mount@plt+0x930c>
   1b398:	mov	r2, #2
   1b39c:	mov	r1, #1
   1b3a0:	add	r0, pc, r0
   1b3a4:	bl	11d40 <fwrite@plt>
   1b3a8:	ldrb	r0, [r4, #1]!
   1b3ac:	cmp	r0, #0
   1b3b0:	bne	1b370 <mount@plt+0x9210>
   1b3b4:	ldr	r1, [r5]
   1b3b8:	mov	r0, #34	; 0x22
   1b3bc:	pop	{r4, r5, r6, r7, r8, lr}
   1b3c0:	b	12064 <putc@plt>
   1b3c4:	cmp	r0, #13
   1b3c8:	bne	1b3fc <mount@plt+0x929c>
   1b3cc:	ldr	r0, [pc, #156]	; 1b470 <mount@plt+0x9310>
   1b3d0:	mov	r2, #2
   1b3d4:	mov	r1, #1
   1b3d8:	add	r0, pc, r0
   1b3dc:	bl	11d40 <fwrite@plt>
   1b3e0:	b	1b364 <mount@plt+0x9204>
   1b3e4:	cmp	r0, #9
   1b3e8:	beq	1b420 <mount@plt+0x92c0>
   1b3ec:	cmp	r0, #10
   1b3f0:	beq	1b354 <mount@plt+0x91f4>
   1b3f4:	cmp	r0, #8
   1b3f8:	beq	1b408 <mount@plt+0x92a8>
   1b3fc:	mov	r1, r3
   1b400:	bl	12064 <putc@plt>
   1b404:	b	1b364 <mount@plt+0x9204>
   1b408:	ldr	r0, [pc, #100]	; 1b474 <mount@plt+0x9314>
   1b40c:	mov	r2, #2
   1b410:	mov	r1, #1
   1b414:	add	r0, pc, r0
   1b418:	bl	11d40 <fwrite@plt>
   1b41c:	b	1b364 <mount@plt+0x9204>
   1b420:	ldr	r0, [pc, #80]	; 1b478 <mount@plt+0x9318>
   1b424:	mov	r2, #2
   1b428:	mov	r1, #1
   1b42c:	add	r0, pc, r0
   1b430:	bl	11d40 <fwrite@plt>
   1b434:	b	1b364 <mount@plt+0x9204>
   1b438:	mov	r2, #2
   1b43c:	mov	r1, #1
   1b440:	mov	r0, r7
   1b444:	bl	11d40 <fwrite@plt>
   1b448:	b	1b364 <mount@plt+0x9204>
   1b44c:	mov	r2, #2
   1b450:	mov	r1, #1
   1b454:	mov	r0, r8
   1b458:	bl	11d40 <fwrite@plt>
   1b45c:	b	1b364 <mount@plt+0x9204>
   1b460:	andeq	r6, r0, ip, asr #25
   1b464:	ldrdeq	r6, [r0], -r0
   1b468:	ldrdeq	r6, [r0], -r0
   1b46c:	andeq	r6, r0, r8, ror ip
   1b470:	andeq	r6, r0, ip, lsr #24
   1b474:	strdeq	r6, [r0], -r8
   1b478:	ldrdeq	r6, [r0], -r4
   1b47c:	push	{r4, lr}
   1b480:	mov	r4, r0
   1b484:	mov	r0, #12
   1b488:	bl	11df4 <malloc@plt>
   1b48c:	cmp	r0, #0
   1b490:	movne	r3, #0
   1b494:	strne	r4, [r0]
   1b498:	strne	r3, [r0, #4]
   1b49c:	strhne	r3, [r0, #8]
   1b4a0:	pop	{r4, pc}
   1b4a4:	push	{r4, r5, r6, lr}
   1b4a8:	ldr	r4, [r0]
   1b4ac:	ldr	r6, [r4, #4]
   1b4b0:	cmp	r6, #0
   1b4b4:	bne	1b4e0 <mount@plt+0x9380>
   1b4b8:	ldr	r1, [r4]
   1b4bc:	mov	r5, r0
   1b4c0:	mov	r0, #10
   1b4c4:	bl	1201c <fputc@plt>
   1b4c8:	ldr	r0, [r4]
   1b4cc:	bl	11bd8 <fflush@plt>
   1b4d0:	mov	r0, r4
   1b4d4:	bl	11c14 <free@plt>
   1b4d8:	str	r6, [r5]
   1b4dc:	pop	{r4, r5, r6, pc}
   1b4e0:	ldr	r3, [pc, #28]	; 1b504 <mount@plt+0x93a4>
   1b4e4:	ldr	r1, [pc, #28]	; 1b508 <mount@plt+0x93a8>
   1b4e8:	ldr	r0, [pc, #28]	; 1b50c <mount@plt+0x93ac>
   1b4ec:	add	r3, pc, r3
   1b4f0:	mov	r2, #110	; 0x6e
   1b4f4:	add	r3, r3, #12
   1b4f8:	add	r1, pc, r1
   1b4fc:	add	r0, pc, r0
   1b500:	bl	12154 <__assert_fail@plt>
   1b504:	ldrdeq	r6, [r0], -r8
   1b508:	andeq	r6, r0, r8, ror #21
   1b50c:	andeq	r6, r0, r0, lsr #22
   1b510:	strb	r1, [r0, #8]
   1b514:	bx	lr
   1b518:	push	{r4, r5, r6, lr}
   1b51c:	mov	r4, r0
   1b520:	ldrb	r0, [r0, #9]
   1b524:	mov	r5, r1
   1b528:	cmp	r0, #0
   1b52c:	bne	1b588 <mount@plt+0x9428>
   1b530:	ldrb	r3, [r4, #8]
   1b534:	mov	r2, #44	; 0x2c
   1b538:	strb	r2, [r4, #9]
   1b53c:	cmp	r3, #0
   1b540:	beq	1b54c <mount@plt+0x93ec>
   1b544:	mov	r0, r4
   1b548:	bl	1b284 <mount@plt+0x9124>
   1b54c:	mov	r3, #0
   1b550:	strb	r3, [r4, #9]
   1b554:	mov	r1, r5
   1b558:	mov	r0, r4
   1b55c:	bl	1b30c <mount@plt+0x91ac>
   1b560:	ldr	r1, [r4]
   1b564:	mov	r0, #58	; 0x3a
   1b568:	bl	12064 <putc@plt>
   1b56c:	ldrb	r3, [r4, #8]
   1b570:	cmp	r3, #0
   1b574:	popeq	{r4, r5, r6, pc}
   1b578:	ldr	r1, [r4]
   1b57c:	mov	r0, #32
   1b580:	pop	{r4, r5, r6, lr}
   1b584:	b	12064 <putc@plt>
   1b588:	ldr	r1, [r4]
   1b58c:	bl	12064 <putc@plt>
   1b590:	b	1b530 <mount@plt+0x93d0>
   1b594:	push	{r1, r2, r3}
   1b598:	ldr	r3, [pc, #136]	; 1b628 <mount@plt+0x94c8>
   1b59c:	ldr	r2, [pc, #136]	; 1b62c <mount@plt+0x94cc>
   1b5a0:	add	r3, pc, r3
   1b5a4:	push	{r4, r5, r6, lr}
   1b5a8:	sub	sp, sp, #12
   1b5ac:	ldr	r5, [r3, r2]
   1b5b0:	ldrb	ip, [r0, #9]
   1b5b4:	add	r1, sp, #32
   1b5b8:	ldr	r3, [r5]
   1b5bc:	cmp	ip, #0
   1b5c0:	mov	r4, r0
   1b5c4:	str	r1, [sp]
   1b5c8:	str	r3, [sp, #4]
   1b5cc:	ldr	r0, [r0]
   1b5d0:	ldr	r6, [sp, #28]
   1b5d4:	bne	1b610 <mount@plt+0x94b0>
   1b5d8:	mov	r3, #44	; 0x2c
   1b5dc:	mov	r2, r6
   1b5e0:	strb	r3, [r4, #9]
   1b5e4:	mov	r1, #1
   1b5e8:	ldr	r3, [sp]
   1b5ec:	bl	11e24 <__vfprintf_chk@plt>
   1b5f0:	ldr	r2, [sp, #4]
   1b5f4:	ldr	r3, [r5]
   1b5f8:	cmp	r2, r3
   1b5fc:	bne	1b624 <mount@plt+0x94c4>
   1b600:	add	sp, sp, #12
   1b604:	pop	{r4, r5, r6, lr}
   1b608:	add	sp, sp, #12
   1b60c:	bx	lr
   1b610:	mov	r1, r0
   1b614:	mov	r0, ip
   1b618:	bl	12064 <putc@plt>
   1b61c:	ldr	r0, [r4]
   1b620:	b	1b5d8 <mount@plt+0x9478>
   1b624:	bl	11ca4 <__stack_chk_fail@plt>
   1b628:	andeq	r7, r1, r8, asr sl
   1b62c:	andeq	r0, r0, ip, lsl #4
   1b630:	mov	r1, #123	; 0x7b
   1b634:	b	1b234 <mount@plt+0x90d4>
   1b638:	ldr	r3, [r0, #4]
   1b63c:	push	{r4, lr}
   1b640:	cmp	r3, #0
   1b644:	beq	1b688 <mount@plt+0x9528>
   1b648:	ldrb	r2, [r0, #9]
   1b64c:	sub	r3, r3, #1
   1b650:	mov	r4, r0
   1b654:	cmp	r2, #0
   1b658:	str	r3, [r0, #4]
   1b65c:	beq	1b670 <mount@plt+0x9510>
   1b660:	ldrb	r3, [r0, #8]
   1b664:	cmp	r3, #0
   1b668:	beq	1b670 <mount@plt+0x9510>
   1b66c:	bl	1b284 <mount@plt+0x9124>
   1b670:	ldr	r1, [r4]
   1b674:	mov	r0, #125	; 0x7d
   1b678:	bl	12064 <putc@plt>
   1b67c:	mov	r3, #44	; 0x2c
   1b680:	strb	r3, [r4, #9]
   1b684:	pop	{r4, pc}
   1b688:	bl	1b2dc <mount@plt+0x917c>
   1b68c:	push	{r4, lr}
   1b690:	mov	r4, r0
   1b694:	mov	r1, #91	; 0x5b
   1b698:	bl	1b234 <mount@plt+0x90d4>
   1b69c:	ldrb	r3, [r4, #8]
   1b6a0:	cmp	r3, #0
   1b6a4:	popeq	{r4, pc}
   1b6a8:	ldr	r1, [r4]
   1b6ac:	mov	r0, #32
   1b6b0:	pop	{r4, lr}
   1b6b4:	b	12064 <putc@plt>
   1b6b8:	ldrb	r3, [r0, #8]
   1b6bc:	push	{r4, lr}
   1b6c0:	mov	r4, r0
   1b6c4:	cmp	r3, #0
   1b6c8:	beq	1b6d8 <mount@plt+0x9578>
   1b6cc:	ldrb	r3, [r0, #9]
   1b6d0:	cmp	r3, #0
   1b6d4:	bne	1b70c <mount@plt+0x95ac>
   1b6d8:	ldr	r3, [r4, #4]
   1b6dc:	mov	r2, #0
   1b6e0:	cmp	r3, r2
   1b6e4:	strb	r2, [r4, #9]
   1b6e8:	beq	1b71c <mount@plt+0x95bc>
   1b6ec:	sub	r3, r3, #1
   1b6f0:	str	r3, [r4, #4]
   1b6f4:	ldr	r1, [r4]
   1b6f8:	mov	r0, #93	; 0x5d
   1b6fc:	bl	12064 <putc@plt>
   1b700:	mov	r3, #44	; 0x2c
   1b704:	strb	r3, [r4, #9]
   1b708:	pop	{r4, pc}
   1b70c:	ldr	r1, [r0]
   1b710:	mov	r0, #32
   1b714:	bl	12064 <putc@plt>
   1b718:	b	1b6d8 <mount@plt+0x9578>
   1b71c:	bl	1b2dc <mount@plt+0x917c>
   1b720:	push	{r4, r5, r6, lr}
   1b724:	mov	r4, r0
   1b728:	ldrb	r0, [r0, #9]
   1b72c:	mov	r5, r1
   1b730:	cmp	r0, #0
   1b734:	bne	1b750 <mount@plt+0x95f0>
   1b738:	mov	r3, #44	; 0x2c
   1b73c:	mov	r1, r5
   1b740:	strb	r3, [r4, #9]
   1b744:	mov	r0, r4
   1b748:	pop	{r4, r5, r6, lr}
   1b74c:	b	1b30c <mount@plt+0x91ac>
   1b750:	ldr	r1, [r4]
   1b754:	bl	12064 <putc@plt>
   1b758:	b	1b738 <mount@plt+0x95d8>
   1b75c:	cmp	r1, #0
   1b760:	bne	1b778 <mount@plt+0x9618>
   1b764:	ldr	r2, [pc, #24]	; 1b784 <mount@plt+0x9624>
   1b768:	add	r2, pc, r2
   1b76c:	ldr	r1, [pc, #20]	; 1b788 <mount@plt+0x9628>
   1b770:	add	r1, pc, r1
   1b774:	b	1b594 <mount@plt+0x9434>
   1b778:	ldr	r2, [pc, #12]	; 1b78c <mount@plt+0x962c>
   1b77c:	add	r2, pc, r2
   1b780:	b	1b76c <mount@plt+0x960c>
   1b784:	ldrdeq	r6, [r0], -r0
   1b788:	strdeq	r6, [r0], -r0
   1b78c:			; <UNDEFINED> instruction: 0x000068b4
   1b790:	ldr	r1, [pc, #4]	; 1b79c <mount@plt+0x963c>
   1b794:	add	r1, pc, r1
   1b798:	b	1b594 <mount@plt+0x9434>
   1b79c:	andeq	r6, r0, ip, lsr #17
   1b7a0:	ldr	r1, [pc, #8]	; 1b7b0 <mount@plt+0x9650>
   1b7a4:	vmov	r2, r3, d0
   1b7a8:	add	r1, pc, r1
   1b7ac:	b	1b594 <mount@plt+0x9434>
   1b7b0:	andeq	r6, r0, r0, lsr #17
   1b7b4:	mov	r2, r1
   1b7b8:	ldr	r1, [pc, #4]	; 1b7c4 <mount@plt+0x9664>
   1b7bc:	add	r1, pc, r1
   1b7c0:	b	1b594 <mount@plt+0x9434>
   1b7c4:	muleq	r0, r0, r8
   1b7c8:	mov	r2, r1
   1b7cc:	ldr	r1, [pc, #4]	; 1b7d8 <mount@plt+0x9678>
   1b7d0:	add	r1, pc, r1
   1b7d4:	b	1b594 <mount@plt+0x9434>
   1b7d8:	andeq	r6, r0, r0, lsl #17
   1b7dc:	ldr	r1, [pc, #4]	; 1b7e8 <mount@plt+0x9688>
   1b7e0:	add	r1, pc, r1
   1b7e4:	b	1b594 <mount@plt+0x9434>
   1b7e8:	andeq	r6, r0, r4, ror r8
   1b7ec:	ldr	r1, [pc, #4]	; 1b7f8 <mount@plt+0x9698>
   1b7f0:	add	r1, pc, r1
   1b7f4:	b	1b594 <mount@plt+0x9434>
   1b7f8:	andeq	r6, r0, ip, ror #16
   1b7fc:	mov	r2, r1
   1b800:	ldr	r1, [pc, #4]	; 1b80c <mount@plt+0x96ac>
   1b804:	add	r1, pc, r1
   1b808:	b	1b594 <mount@plt+0x9434>
   1b80c:	andeq	r6, r0, r0, ror #16
   1b810:	b	1b7dc <mount@plt+0x967c>
   1b814:	mov	r2, r1
   1b818:	ldr	r1, [pc, #4]	; 1b824 <mount@plt+0x96c4>
   1b81c:	add	r1, pc, r1
   1b820:	b	1b594 <mount@plt+0x9434>
   1b824:	ldrdeq	r6, [r0], -r0
   1b828:	ldr	r1, [pc, #4]	; 1b834 <mount@plt+0x96d4>
   1b82c:	add	r1, pc, r1
   1b830:	b	1b594 <mount@plt+0x9434>
   1b834:	andeq	r6, r0, ip, lsr r8
   1b838:	push	{r4, r5, r6, lr}
   1b83c:	mov	r5, r2
   1b840:	mov	r4, r0
   1b844:	bl	1b518 <mount@plt+0x93b8>
   1b848:	mov	r1, r5
   1b84c:	mov	r0, r4
   1b850:	pop	{r4, r5, r6, lr}
   1b854:	b	1b720 <mount@plt+0x95c0>
   1b858:	push	{r4, r5, r6, lr}
   1b85c:	mov	r5, r2
   1b860:	mov	r4, r0
   1b864:	bl	1b518 <mount@plt+0x93b8>
   1b868:	mov	r1, r5
   1b86c:	mov	r0, r4
   1b870:	pop	{r4, r5, r6, lr}
   1b874:	b	1b75c <mount@plt+0x95fc>
   1b878:	push	{r4, lr}
   1b87c:	vpush	{d8}
   1b880:	vmov.f64	d8, d0
   1b884:	mov	r4, r0
   1b888:	bl	1b518 <mount@plt+0x93b8>
   1b88c:	mov	r0, r4
   1b890:	vmov.f64	d0, d8
   1b894:	vpop	{d8}
   1b898:	pop	{r4, lr}
   1b89c:	b	1b7a0 <mount@plt+0x9640>
   1b8a0:	push	{r4, r5, r6, lr}
   1b8a4:	mov	r5, r2
   1b8a8:	mov	r4, r0
   1b8ac:	bl	1b518 <mount@plt+0x93b8>
   1b8b0:	mov	r1, r5
   1b8b4:	mov	r0, r4
   1b8b8:	pop	{r4, r5, r6, lr}
   1b8bc:	b	1b7c8 <mount@plt+0x9668>
   1b8c0:	push	{r4, r6, r7, lr}
   1b8c4:	mov	r6, r2
   1b8c8:	mov	r7, r3
   1b8cc:	mov	r4, r0
   1b8d0:	bl	1b518 <mount@plt+0x93b8>
   1b8d4:	mov	r2, r6
   1b8d8:	mov	r3, r7
   1b8dc:	mov	r0, r4
   1b8e0:	pop	{r4, r6, r7, lr}
   1b8e4:	b	1b7dc <mount@plt+0x967c>
   1b8e8:	push	{r4, r6, r7, lr}
   1b8ec:	mov	r6, r2
   1b8f0:	mov	r7, r3
   1b8f4:	mov	r4, r0
   1b8f8:	bl	1b518 <mount@plt+0x93b8>
   1b8fc:	mov	r2, r6
   1b900:	mov	r3, r7
   1b904:	mov	r0, r4
   1b908:	pop	{r4, r6, r7, lr}
   1b90c:	b	1b7ec <mount@plt+0x968c>
   1b910:	push	{r4, r5, r6, lr}
   1b914:	mov	r5, r2
   1b918:	mov	r4, r0
   1b91c:	bl	1b518 <mount@plt+0x93b8>
   1b920:	mov	r1, r5
   1b924:	mov	r0, r4
   1b928:	pop	{r4, r5, r6, lr}
   1b92c:	b	1b7b4 <mount@plt+0x9654>
   1b930:	push	{r4, r5, r6, lr}
   1b934:	mov	r5, r2
   1b938:	mov	r4, r0
   1b93c:	bl	1b518 <mount@plt+0x93b8>
   1b940:	mov	r1, r5
   1b944:	mov	r0, r4
   1b948:	pop	{r4, r5, r6, lr}
   1b94c:	b	1b7fc <mount@plt+0x969c>
   1b950:	push	{r4, r6, r7, lr}
   1b954:	mov	r6, r2
   1b958:	mov	r7, r3
   1b95c:	mov	r4, r0
   1b960:	bl	1b518 <mount@plt+0x93b8>
   1b964:	mov	r2, r6
   1b968:	mov	r3, r7
   1b96c:	mov	r0, r4
   1b970:	pop	{r4, r6, r7, lr}
   1b974:	b	1b810 <mount@plt+0x96b0>
   1b978:	push	{r4, r5, r6, lr}
   1b97c:	mov	r5, r2
   1b980:	mov	r4, r0
   1b984:	bl	1b518 <mount@plt+0x93b8>
   1b988:	mov	r1, r5
   1b98c:	mov	r0, r4
   1b990:	pop	{r4, r5, r6, lr}
   1b994:	b	1b814 <mount@plt+0x96b4>
   1b998:	push	{r4, r6, r7, lr}
   1b99c:	mov	r6, r2
   1b9a0:	mov	r7, r3
   1b9a4:	mov	r4, r0
   1b9a8:	bl	1b518 <mount@plt+0x93b8>
   1b9ac:	mov	r2, r6
   1b9b0:	mov	r3, r7
   1b9b4:	mov	r0, r4
   1b9b8:	pop	{r4, r6, r7, lr}
   1b9bc:	b	1b828 <mount@plt+0x96c8>
   1b9c0:	push	{r4, lr}
   1b9c4:	mov	r4, r0
   1b9c8:	bl	1b518 <mount@plt+0x93b8>
   1b9cc:	mov	r0, r4
   1b9d0:	pop	{r4, lr}
   1b9d4:	b	1b790 <mount@plt+0x9630>
   1b9d8:	push	{r4, r5, r6, lr}
   1b9dc:	cmp	r0, #0
   1b9e0:	ldr	r4, [pc, #120]	; 1ba60 <mount@plt+0x9900>
   1b9e4:	add	r4, pc, r4
   1b9e8:	popeq	{r4, r5, r6, pc}
   1b9ec:	ldr	r3, [pc, #112]	; 1ba64 <mount@plt+0x9904>
   1b9f0:	ldr	r5, [pc, #112]	; 1ba68 <mount@plt+0x9908>
   1b9f4:	ldr	r3, [r4, r3]
   1b9f8:	add	r5, pc, r5
   1b9fc:	ldr	r0, [r3]
   1ba00:	bl	1b47c <mount@plt+0x931c>
   1ba04:	cmp	r0, #0
   1ba08:	mov	r3, r0
   1ba0c:	str	r0, [r5]
   1ba10:	beq	1ba4c <mount@plt+0x98ec>
   1ba14:	ldr	r2, [pc, #80]	; 1ba6c <mount@plt+0x990c>
   1ba18:	ldr	r2, [r4, r2]
   1ba1c:	ldr	r2, [r2]
   1ba20:	cmp	r2, #0
   1ba24:	bne	1ba34 <mount@plt+0x98d4>
   1ba28:	mov	r0, r3
   1ba2c:	pop	{r4, r5, r6, lr}
   1ba30:	b	1b68c <mount@plt+0x952c>
   1ba34:	mov	r1, #1
   1ba38:	bl	1b510 <mount@plt+0x93b0>
   1ba3c:	ldr	r3, [r5]
   1ba40:	pop	{r4, r5, r6, lr}
   1ba44:	mov	r0, r3
   1ba48:	b	1b68c <mount@plt+0x952c>
   1ba4c:	ldr	r0, [pc, #28]	; 1ba70 <mount@plt+0x9910>
   1ba50:	add	r0, pc, r0
   1ba54:	bl	11d10 <perror@plt>
   1ba58:	mov	r0, #1
   1ba5c:	bl	11e84 <exit@plt>
   1ba60:	andeq	r7, r1, r4, lsl r6
   1ba64:	andeq	r0, r0, ip, lsr #4
   1ba68:	muleq	r1, ip, lr
   1ba6c:	andeq	r0, r0, r0, lsr r2
   1ba70:	andeq	r6, r0, r0, lsr #12
   1ba74:	push	{r4, lr}
   1ba78:	ldr	r4, [pc, #28]	; 1ba9c <mount@plt+0x993c>
   1ba7c:	add	r4, pc, r4
   1ba80:	ldr	r0, [r4]
   1ba84:	cmp	r0, #0
   1ba88:	popeq	{r4, pc}
   1ba8c:	bl	1b6b8 <mount@plt+0x9558>
   1ba90:	mov	r0, r4
   1ba94:	pop	{r4, lr}
   1ba98:	b	1b4a4 <mount@plt+0x9344>
   1ba9c:	andeq	r9, r1, r8, lsl lr
   1baa0:	ldr	r3, [pc, #12]	; 1bab4 <mount@plt+0x9954>
   1baa4:	ldr	r0, [pc, r3]
   1baa8:	adds	r0, r0, #0
   1baac:	movne	r0, #1
   1bab0:	bx	lr
   1bab4:	strdeq	r9, [r1], -r0
   1bab8:	ldr	r3, [pc, #4]	; 1bac4 <mount@plt+0x9964>
   1babc:	ldr	r0, [pc, r3]
   1bac0:	bx	lr
   1bac4:	ldrdeq	r9, [r1], -r8
   1bac8:	push	{r4, lr}
   1bacc:	mov	r1, r0
   1bad0:	ldr	r4, [pc, #36]	; 1bafc <mount@plt+0x999c>
   1bad4:	add	r4, pc, r4
   1bad8:	ldr	r0, [r4]
   1badc:	cmp	r0, #0
   1bae0:	popeq	{r4, pc}
   1bae4:	cmp	r1, #0
   1bae8:	beq	1baf4 <mount@plt+0x9994>
   1baec:	bl	1b518 <mount@plt+0x93b8>
   1baf0:	ldr	r0, [r4]
   1baf4:	pop	{r4, lr}
   1baf8:	b	1b630 <mount@plt+0x94d0>
   1bafc:	andeq	r9, r1, r0, asr #27
   1bb00:	ldr	r3, [pc, #12]	; 1bb14 <mount@plt+0x99b4>
   1bb04:	ldr	r0, [pc, r3]
   1bb08:	cmp	r0, #0
   1bb0c:	bxeq	lr
   1bb10:	b	1b638 <mount@plt+0x94d8>
   1bb14:	muleq	r1, r0, sp
   1bb18:	push	{r4, lr}
   1bb1c:	tst	r0, #6
   1bb20:	ldr	r4, [pc, #88]	; 1bb80 <mount@plt+0x9a20>
   1bb24:	mov	r2, r1
   1bb28:	add	r4, pc, r4
   1bb2c:	ldr	r3, [r4]
   1bb30:	beq	1bb5c <mount@plt+0x99fc>
   1bb34:	cmp	r3, #0
   1bb38:	beq	1bb64 <mount@plt+0x9a04>
   1bb3c:	cmp	r1, #0
   1bb40:	beq	1bb50 <mount@plt+0x99f0>
   1bb44:	mov	r0, r3
   1bb48:	bl	1b518 <mount@plt+0x93b8>
   1bb4c:	ldr	r3, [r4]
   1bb50:	mov	r0, r3
   1bb54:	pop	{r4, lr}
   1bb58:	b	1b68c <mount@plt+0x952c>
   1bb5c:	cmp	r3, #0
   1bb60:	popne	{r4, pc}
   1bb64:	tst	r0, #5
   1bb68:	popeq	{r4, pc}
   1bb6c:	ldr	r1, [pc, #16]	; 1bb84 <mount@plt+0x9a24>
   1bb70:	mov	r0, #1
   1bb74:	add	r1, pc, r1
   1bb78:	pop	{r4, lr}
   1bb7c:	b	11f44 <__printf_chk@plt>
   1bb80:	andeq	r9, r1, ip, ror #26
   1bb84:	andeq	r6, r0, ip, ror #13
   1bb88:	ldr	r3, [pc, #64]	; 1bbd0 <mount@plt+0x9a70>
   1bb8c:	tst	r0, #6
   1bb90:	add	r3, pc, r3
   1bb94:	ldr	r3, [r3]
   1bb98:	beq	1bbac <mount@plt+0x9a4c>
   1bb9c:	cmp	r3, #0
   1bba0:	beq	1bbb4 <mount@plt+0x9a54>
   1bba4:	mov	r0, r3
   1bba8:	b	1b6b8 <mount@plt+0x9558>
   1bbac:	cmp	r3, #0
   1bbb0:	bxne	lr
   1bbb4:	tst	r0, #5
   1bbb8:	bxeq	lr
   1bbbc:	mov	r2, r1
   1bbc0:	ldr	r1, [pc, #12]	; 1bbd4 <mount@plt+0x9a74>
   1bbc4:	mov	r0, #1
   1bbc8:	add	r1, pc, r1
   1bbcc:	b	11f44 <__printf_chk@plt>
   1bbd0:	andeq	r9, r1, r4, lsl #26
   1bbd4:	muleq	r0, r8, r6
   1bbd8:	ldr	ip, [pc, #128]	; 1bc60 <mount@plt+0x9b00>
   1bbdc:	push	{r4, r5, lr}
   1bbe0:	add	ip, pc, ip
   1bbe4:	ldr	lr, [pc, #120]	; 1bc64 <mount@plt+0x9b04>
   1bbe8:	tst	r0, #6
   1bbec:	mov	r4, r2
   1bbf0:	mov	r5, r3
   1bbf4:	ldr	ip, [ip]
   1bbf8:	add	lr, pc, lr
   1bbfc:	ldr	r2, [sp, #12]
   1bc00:	beq	1bc24 <mount@plt+0x9ac4>
   1bc04:	cmp	ip, #0
   1bc08:	beq	1bc2c <mount@plt+0x9acc>
   1bc0c:	cmp	r4, #0
   1bc10:	beq	1bc50 <mount@plt+0x9af0>
   1bc14:	mov	r1, r4
   1bc18:	mov	r0, ip
   1bc1c:	pop	{r4, r5, lr}
   1bc20:	b	1b978 <mount@plt+0x9818>
   1bc24:	cmp	ip, #0
   1bc28:	popne	{r4, r5, pc}
   1bc2c:	tst	r0, #5
   1bc30:	popeq	{r4, r5, pc}
   1bc34:	ldr	r0, [pc, #44]	; 1bc68 <mount@plt+0x9b08>
   1bc38:	mov	r3, r2
   1bc3c:	mov	r2, r5
   1bc40:	ldr	r0, [lr, r0]
   1bc44:	pop	{r4, r5, lr}
   1bc48:	ldr	r0, [r0]
   1bc4c:	b	1c6b0 <mount@plt+0xa550>
   1bc50:	mov	r1, r2
   1bc54:	mov	r0, ip
   1bc58:	pop	{r4, r5, lr}
   1bc5c:	b	1b814 <mount@plt+0x96b4>
   1bc60:			; <UNDEFINED> instruction: 0x00019cb4
   1bc64:	andeq	r7, r1, r0, lsl #8
   1bc68:	andeq	r0, r0, ip, lsr #4
   1bc6c:	ldr	ip, [pc, #128]	; 1bcf4 <mount@plt+0x9b94>
   1bc70:	push	{r4, r6, r7, lr}
   1bc74:	add	ip, pc, ip
   1bc78:	ldr	lr, [pc, #120]	; 1bcf8 <mount@plt+0x9b98>
   1bc7c:	tst	r0, #6
   1bc80:	ldr	ip, [ip]
   1bc84:	add	lr, pc, lr
   1bc88:	ldrd	r6, [sp, #16]
   1bc8c:	beq	1bcbc <mount@plt+0x9b5c>
   1bc90:	cmp	ip, #0
   1bc94:	beq	1bcc4 <mount@plt+0x9b64>
   1bc98:	mov	r4, r2
   1bc9c:	cmp	r4, #0
   1bca0:	mov	r2, r6
   1bca4:	mov	r3, r7
   1bca8:	beq	1bce8 <mount@plt+0x9b88>
   1bcac:	mov	r1, r4
   1bcb0:	mov	r0, ip
   1bcb4:	pop	{r4, r6, r7, lr}
   1bcb8:	b	1b998 <mount@plt+0x9838>
   1bcbc:	cmp	ip, #0
   1bcc0:	popne	{r4, r6, r7, pc}
   1bcc4:	tst	r0, #5
   1bcc8:	popeq	{r4, r6, r7, pc}
   1bccc:	ldr	r0, [pc, #40]	; 1bcfc <mount@plt+0x9b9c>
   1bcd0:	mov	r2, r3
   1bcd4:	ldr	r3, [lr, r0]
   1bcd8:	strd	r6, [sp, #16]
   1bcdc:	pop	{r4, r6, r7, lr}
   1bce0:	ldr	r0, [r3]
   1bce4:	b	1c6b0 <mount@plt+0xa550>
   1bce8:	mov	r0, ip
   1bcec:	pop	{r4, r6, r7, lr}
   1bcf0:	b	1b828 <mount@plt+0x96c8>
   1bcf4:	andeq	r9, r1, r0, lsr #24
   1bcf8:	andeq	r7, r1, r4, ror r3
   1bcfc:	andeq	r0, r0, ip, lsr #4
   1bd00:	ldr	ip, [pc, #128]	; 1bd88 <mount@plt+0x9c28>
   1bd04:	push	{r4, r5, lr}
   1bd08:	add	ip, pc, ip
   1bd0c:	ldr	lr, [pc, #120]	; 1bd8c <mount@plt+0x9c2c>
   1bd10:	tst	r0, #6
   1bd14:	mov	r4, r2
   1bd18:	mov	r5, r3
   1bd1c:	ldr	ip, [ip]
   1bd20:	add	lr, pc, lr
   1bd24:	ldrh	r2, [sp, #12]
   1bd28:	beq	1bd4c <mount@plt+0x9bec>
   1bd2c:	cmp	ip, #0
   1bd30:	beq	1bd54 <mount@plt+0x9bf4>
   1bd34:	cmp	r4, #0
   1bd38:	beq	1bd78 <mount@plt+0x9c18>
   1bd3c:	mov	r1, r4
   1bd40:	mov	r0, ip
   1bd44:	pop	{r4, r5, lr}
   1bd48:	b	1b910 <mount@plt+0x97b0>
   1bd4c:	cmp	ip, #0
   1bd50:	popne	{r4, r5, pc}
   1bd54:	tst	r0, #5
   1bd58:	popeq	{r4, r5, pc}
   1bd5c:	ldr	r0, [pc, #44]	; 1bd90 <mount@plt+0x9c30>
   1bd60:	mov	r3, r2
   1bd64:	mov	r2, r5
   1bd68:	ldr	r0, [lr, r0]
   1bd6c:	pop	{r4, r5, lr}
   1bd70:	ldr	r0, [r0]
   1bd74:	b	1c6b0 <mount@plt+0xa550>
   1bd78:	mov	r1, r2
   1bd7c:	mov	r0, ip
   1bd80:	pop	{r4, r5, lr}
   1bd84:	b	1b7b4 <mount@plt+0x9654>
   1bd88:	andeq	r9, r1, ip, lsl #23
   1bd8c:	ldrdeq	r7, [r1], -r8
   1bd90:	andeq	r0, r0, ip, lsr #4
   1bd94:	ldr	ip, [pc, #128]	; 1be1c <mount@plt+0x9cbc>
   1bd98:	push	{r4, r5, lr}
   1bd9c:	add	ip, pc, ip
   1bda0:	ldr	lr, [pc, #120]	; 1be20 <mount@plt+0x9cc0>
   1bda4:	tst	r0, #6
   1bda8:	mov	r4, r2
   1bdac:	mov	r5, r3
   1bdb0:	ldr	ip, [ip]
   1bdb4:	add	lr, pc, lr
   1bdb8:	ldr	r2, [sp, #12]
   1bdbc:	beq	1bde0 <mount@plt+0x9c80>
   1bdc0:	cmp	ip, #0
   1bdc4:	beq	1bde8 <mount@plt+0x9c88>
   1bdc8:	cmp	r4, #0
   1bdcc:	beq	1be0c <mount@plt+0x9cac>
   1bdd0:	mov	r1, r4
   1bdd4:	mov	r0, ip
   1bdd8:	pop	{r4, r5, lr}
   1bddc:	b	1b8a0 <mount@plt+0x9740>
   1bde0:	cmp	ip, #0
   1bde4:	popne	{r4, r5, pc}
   1bde8:	tst	r0, #5
   1bdec:	popeq	{r4, r5, pc}
   1bdf0:	ldr	r0, [pc, #44]	; 1be24 <mount@plt+0x9cc4>
   1bdf4:	mov	r3, r2
   1bdf8:	mov	r2, r5
   1bdfc:	ldr	r0, [lr, r0]
   1be00:	pop	{r4, r5, lr}
   1be04:	ldr	r0, [r0]
   1be08:	b	1c6b0 <mount@plt+0xa550>
   1be0c:	mov	r1, r2
   1be10:	mov	r0, ip
   1be14:	pop	{r4, r5, lr}
   1be18:	b	1b7c8 <mount@plt+0x9668>
   1be1c:	strdeq	r9, [r1], -r8
   1be20:	andeq	r7, r1, r4, asr #4
   1be24:	andeq	r0, r0, ip, lsr #4
   1be28:	ldr	ip, [pc, #128]	; 1beb0 <mount@plt+0x9d50>
   1be2c:	push	{r4, r6, r7, lr}
   1be30:	add	ip, pc, ip
   1be34:	ldr	lr, [pc, #120]	; 1beb4 <mount@plt+0x9d54>
   1be38:	tst	r0, #6
   1be3c:	ldr	ip, [ip]
   1be40:	add	lr, pc, lr
   1be44:	ldrd	r6, [sp, #16]
   1be48:	beq	1be78 <mount@plt+0x9d18>
   1be4c:	cmp	ip, #0
   1be50:	beq	1be80 <mount@plt+0x9d20>
   1be54:	mov	r4, r2
   1be58:	cmp	r4, #0
   1be5c:	mov	r2, r6
   1be60:	mov	r3, r7
   1be64:	beq	1bea4 <mount@plt+0x9d44>
   1be68:	mov	r1, r4
   1be6c:	mov	r0, ip
   1be70:	pop	{r4, r6, r7, lr}
   1be74:	b	1b8c0 <mount@plt+0x9760>
   1be78:	cmp	ip, #0
   1be7c:	popne	{r4, r6, r7, pc}
   1be80:	tst	r0, #5
   1be84:	popeq	{r4, r6, r7, pc}
   1be88:	ldr	r0, [pc, #40]	; 1beb8 <mount@plt+0x9d58>
   1be8c:	mov	r2, r3
   1be90:	ldr	r3, [lr, r0]
   1be94:	strd	r6, [sp, #16]
   1be98:	pop	{r4, r6, r7, lr}
   1be9c:	ldr	r0, [r3]
   1bea0:	b	1c6b0 <mount@plt+0xa550>
   1bea4:	mov	r0, ip
   1bea8:	pop	{r4, r6, r7, lr}
   1beac:	b	1b7dc <mount@plt+0x967c>
   1beb0:	andeq	r9, r1, r4, ror #20
   1beb4:			; <UNDEFINED> instruction: 0x000171b8
   1beb8:	andeq	r0, r0, ip, lsr #4
   1bebc:	ldr	ip, [pc, #128]	; 1bf44 <mount@plt+0x9de4>
   1bec0:	push	{r4, r5, lr}
   1bec4:	add	ip, pc, ip
   1bec8:	ldr	lr, [pc, #120]	; 1bf48 <mount@plt+0x9de8>
   1becc:	tst	r0, #6
   1bed0:	mov	r4, r2
   1bed4:	mov	r5, r3
   1bed8:	ldr	ip, [ip]
   1bedc:	add	lr, pc, lr
   1bee0:	ldr	r2, [sp, #12]
   1bee4:	beq	1bf08 <mount@plt+0x9da8>
   1bee8:	cmp	ip, #0
   1beec:	beq	1bf10 <mount@plt+0x9db0>
   1bef0:	cmp	r4, #0
   1bef4:	beq	1bf34 <mount@plt+0x9dd4>
   1bef8:	mov	r1, r4
   1befc:	mov	r0, ip
   1bf00:	pop	{r4, r5, lr}
   1bf04:	b	1b930 <mount@plt+0x97d0>
   1bf08:	cmp	ip, #0
   1bf0c:	popne	{r4, r5, pc}
   1bf10:	tst	r0, #5
   1bf14:	popeq	{r4, r5, pc}
   1bf18:	ldr	r0, [pc, #44]	; 1bf4c <mount@plt+0x9dec>
   1bf1c:	mov	r3, r2
   1bf20:	mov	r2, r5
   1bf24:	ldr	r0, [lr, r0]
   1bf28:	pop	{r4, r5, lr}
   1bf2c:	ldr	r0, [r0]
   1bf30:	b	1c6b0 <mount@plt+0xa550>
   1bf34:	mov	r1, r2
   1bf38:	mov	r0, ip
   1bf3c:	pop	{r4, r5, lr}
   1bf40:	b	1b7fc <mount@plt+0x969c>
   1bf44:	ldrdeq	r9, [r1], -r0
   1bf48:	andeq	r7, r1, ip, lsl r1
   1bf4c:	andeq	r0, r0, ip, lsr #4
   1bf50:	ldr	ip, [pc, #128]	; 1bfd8 <mount@plt+0x9e78>
   1bf54:	push	{r4, r6, r7, lr}
   1bf58:	add	ip, pc, ip
   1bf5c:	ldr	lr, [pc, #120]	; 1bfdc <mount@plt+0x9e7c>
   1bf60:	tst	r0, #6
   1bf64:	ldr	ip, [ip]
   1bf68:	add	lr, pc, lr
   1bf6c:	ldrd	r6, [sp, #16]
   1bf70:	beq	1bfa0 <mount@plt+0x9e40>
   1bf74:	cmp	ip, #0
   1bf78:	beq	1bfa8 <mount@plt+0x9e48>
   1bf7c:	mov	r4, r2
   1bf80:	cmp	r4, #0
   1bf84:	mov	r2, r6
   1bf88:	mov	r3, r7
   1bf8c:	beq	1bfcc <mount@plt+0x9e6c>
   1bf90:	mov	r1, r4
   1bf94:	mov	r0, ip
   1bf98:	pop	{r4, r6, r7, lr}
   1bf9c:	b	1b950 <mount@plt+0x97f0>
   1bfa0:	cmp	ip, #0
   1bfa4:	popne	{r4, r6, r7, pc}
   1bfa8:	tst	r0, #5
   1bfac:	popeq	{r4, r6, r7, pc}
   1bfb0:	ldr	r0, [pc, #40]	; 1bfe0 <mount@plt+0x9e80>
   1bfb4:	mov	r2, r3
   1bfb8:	ldr	r3, [lr, r0]
   1bfbc:	strd	r6, [sp, #16]
   1bfc0:	pop	{r4, r6, r7, lr}
   1bfc4:	ldr	r0, [r3]
   1bfc8:	b	1c6b0 <mount@plt+0xa550>
   1bfcc:	mov	r0, ip
   1bfd0:	pop	{r4, r6, r7, lr}
   1bfd4:	b	1b810 <mount@plt+0x96b0>
   1bfd8:	andeq	r9, r1, ip, lsr r9
   1bfdc:	muleq	r1, r0, r0
   1bfe0:	andeq	r0, r0, ip, lsr #4
   1bfe4:	ldr	ip, [pc, #136]	; 1c074 <mount@plt+0x9f14>
   1bfe8:	push	{r4, r5, lr}
   1bfec:	add	ip, pc, ip
   1bff0:	ldr	lr, [pc, #128]	; 1c078 <mount@plt+0x9f18>
   1bff4:	tst	r0, #6
   1bff8:	sub	sp, sp, #12
   1bffc:	ldr	ip, [ip]
   1c000:	add	lr, pc, lr
   1c004:	vmov.f64	d7, d0
   1c008:	beq	1c030 <mount@plt+0x9ed0>
   1c00c:	cmp	ip, #0
   1c010:	beq	1c040 <mount@plt+0x9ee0>
   1c014:	cmp	r2, #0
   1c018:	beq	1c064 <mount@plt+0x9f04>
   1c01c:	mov	r1, r2
   1c020:	mov	r0, ip
   1c024:	add	sp, sp, #12
   1c028:	pop	{r4, r5, lr}
   1c02c:	b	1b878 <mount@plt+0x9718>
   1c030:	cmp	ip, #0
   1c034:	beq	1c040 <mount@plt+0x9ee0>
   1c038:	add	sp, sp, #12
   1c03c:	pop	{r4, r5, pc}
   1c040:	tst	r0, #5
   1c044:	beq	1c038 <mount@plt+0x9ed8>
   1c048:	mov	r2, r3
   1c04c:	ldr	r3, [pc, #40]	; 1c07c <mount@plt+0x9f1c>
   1c050:	ldr	r3, [lr, r3]
   1c054:	vstr	d7, [sp]
   1c058:	ldr	r0, [r3]
   1c05c:	bl	1c6b0 <mount@plt+0xa550>
   1c060:	b	1c038 <mount@plt+0x9ed8>
   1c064:	mov	r0, ip
   1c068:	add	sp, sp, #12
   1c06c:	pop	{r4, r5, lr}
   1c070:	b	1b7a0 <mount@plt+0x9640>
   1c074:	andeq	r9, r1, r8, lsr #17
   1c078:	strdeq	r6, [r1], -r8
   1c07c:	andeq	r0, r0, ip, lsr #4
   1c080:	ldr	ip, [pc, #180]	; 1c13c <mount@plt+0x9fdc>
   1c084:	push	{r4, lr}
   1c088:	add	ip, pc, ip
   1c08c:	ldr	lr, [pc, #172]	; 1c140 <mount@plt+0x9fe0>
   1c090:	tst	r0, #6
   1c094:	mov	r4, r2
   1c098:	ldr	ip, [ip]
   1c09c:	mov	r2, r3
   1c0a0:	add	lr, pc, lr
   1c0a4:	ldr	r3, [sp, #8]
   1c0a8:	beq	1c0f4 <mount@plt+0x9f94>
   1c0ac:	cmp	ip, #0
   1c0b0:	beq	1c0fc <mount@plt+0x9f9c>
   1c0b4:	cmp	r4, #0
   1c0b8:	clz	r0, r3
   1c0bc:	lsr	r0, r0, #5
   1c0c0:	moveq	r0, #0
   1c0c4:	cmp	r0, #0
   1c0c8:	bne	1c12c <mount@plt+0x9fcc>
   1c0cc:	adds	r2, r3, #0
   1c0d0:	movne	r2, #1
   1c0d4:	cmp	r4, #0
   1c0d8:	movne	r2, #0
   1c0dc:	cmp	r2, #0
   1c0e0:	beq	1c118 <mount@plt+0x9fb8>
   1c0e4:	mov	r1, r3
   1c0e8:	mov	r0, ip
   1c0ec:	pop	{r4, lr}
   1c0f0:	b	1b720 <mount@plt+0x95c0>
   1c0f4:	cmp	ip, #0
   1c0f8:	popne	{r4, pc}
   1c0fc:	tst	r0, #5
   1c100:	popeq	{r4, pc}
   1c104:	ldr	r0, [pc, #56]	; 1c144 <mount@plt+0x9fe4>
   1c108:	ldr	r0, [lr, r0]
   1c10c:	pop	{r4, lr}
   1c110:	ldr	r0, [r0]
   1c114:	b	1c6b0 <mount@plt+0xa550>
   1c118:	mov	r1, r4
   1c11c:	mov	r2, r3
   1c120:	mov	r0, ip
   1c124:	pop	{r4, lr}
   1c128:	b	1b838 <mount@plt+0x96d8>
   1c12c:	mov	r1, r4
   1c130:	mov	r0, ip
   1c134:	pop	{r4, lr}
   1c138:	b	1b518 <mount@plt+0x93b8>
   1c13c:	andeq	r9, r1, ip, lsl #16
   1c140:	andeq	r6, r1, r8, asr pc
   1c144:	andeq	r0, r0, ip, lsr #4
   1c148:	ldr	ip, [pc, #152]	; 1c1e8 <mount@plt+0xa088>
   1c14c:	push	{r4, lr}
   1c150:	add	ip, pc, ip
   1c154:	mov	r4, r3
   1c158:	ldr	r3, [ip]
   1c15c:	ldr	ip, [pc, #136]	; 1c1ec <mount@plt+0xa08c>
   1c160:	tst	r0, #6
   1c164:	mov	lr, r2
   1c168:	add	ip, pc, ip
   1c16c:	ldrb	r2, [sp, #8]
   1c170:	beq	1c194 <mount@plt+0xa034>
   1c174:	cmp	r3, #0
   1c178:	beq	1c19c <mount@plt+0xa03c>
   1c17c:	cmp	lr, #0
   1c180:	beq	1c1cc <mount@plt+0xa06c>
   1c184:	mov	r1, lr
   1c188:	mov	r0, r3
   1c18c:	pop	{r4, lr}
   1c190:	b	1b858 <mount@plt+0x96f8>
   1c194:	cmp	r3, #0
   1c198:	popne	{r4, pc}
   1c19c:	tst	r0, #5
   1c1a0:	popeq	{r4, pc}
   1c1a4:	ldr	r3, [pc, #68]	; 1c1f0 <mount@plt+0xa090>
   1c1a8:	cmp	r2, #0
   1c1ac:	ldr	r3, [ip, r3]
   1c1b0:	ldr	r0, [r3]
   1c1b4:	bne	1c1dc <mount@plt+0xa07c>
   1c1b8:	ldr	r3, [pc, #52]	; 1c1f4 <mount@plt+0xa094>
   1c1bc:	add	r3, pc, r3
   1c1c0:	mov	r2, r4
   1c1c4:	pop	{r4, lr}
   1c1c8:	b	1c6b0 <mount@plt+0xa550>
   1c1cc:	mov	r1, r2
   1c1d0:	mov	r0, r3
   1c1d4:	pop	{r4, lr}
   1c1d8:	b	1b75c <mount@plt+0x95fc>
   1c1dc:	ldr	r3, [pc, #20]	; 1c1f8 <mount@plt+0xa098>
   1c1e0:	add	r3, pc, r3
   1c1e4:	b	1c1c0 <mount@plt+0xa060>
   1c1e8:	andeq	r9, r1, r4, asr #14
   1c1ec:	muleq	r1, r0, lr
   1c1f0:	andeq	r0, r0, ip, lsr #4
   1c1f4:	andeq	r5, r0, ip, ror lr
   1c1f8:	andeq	r5, r0, r0, asr lr
   1c1fc:	push	{r4, r5, r6, r7, lr}
   1c200:	sub	sp, sp, #92	; 0x5c
   1c204:	ldr	lr, [pc, #196]	; 1c2d0 <mount@plt+0xa170>
   1c208:	ldr	ip, [pc, #196]	; 1c2d4 <mount@plt+0xa174>
   1c20c:	add	lr, pc, lr
   1c210:	tst	r0, #6
   1c214:	ldr	r4, [lr, ip]
   1c218:	ldr	ip, [pc, #184]	; 1c2d8 <mount@plt+0xa178>
   1c21c:	add	ip, pc, ip
   1c220:	ldr	r5, [r4]
   1c224:	ldr	ip, [ip]
   1c228:	str	r5, [sp, #84]	; 0x54
   1c22c:	beq	1c284 <mount@plt+0xa124>
   1c230:	cmp	ip, #0
   1c234:	beq	1c2a4 <mount@plt+0xa144>
   1c238:	ldrd	r0, [sp, #112]	; 0x70
   1c23c:	mov	r6, r2
   1c240:	ldr	r2, [pc, #148]	; 1c2dc <mount@plt+0xa17c>
   1c244:	mov	r3, #64	; 0x40
   1c248:	add	r5, sp, #20
   1c24c:	add	r2, pc, r2
   1c250:	strd	r0, [sp, #8]
   1c254:	str	r2, [sp]
   1c258:	mov	r1, r3
   1c25c:	mov	r0, r5
   1c260:	mov	r2, #1
   1c264:	bl	1213c <__snprintf_chk@plt>
   1c268:	str	r5, [sp]
   1c26c:	mov	r2, r6
   1c270:	mov	r3, #0
   1c274:	mov	r1, #6
   1c278:	mov	r0, #2
   1c27c:	bl	1c080 <mount@plt+0x9f20>
   1c280:	b	1c28c <mount@plt+0xa12c>
   1c284:	cmp	ip, #0
   1c288:	beq	1c2a4 <mount@plt+0xa144>
   1c28c:	ldr	r2, [sp, #84]	; 0x54
   1c290:	ldr	r3, [r4]
   1c294:	cmp	r2, r3
   1c298:	bne	1c2cc <mount@plt+0xa16c>
   1c29c:	add	sp, sp, #92	; 0x5c
   1c2a0:	pop	{r4, r5, r6, r7, pc}
   1c2a4:	tst	r0, #5
   1c2a8:	beq	1c28c <mount@plt+0xa12c>
   1c2ac:	ldr	r0, [pc, #44]	; 1c2e0 <mount@plt+0xa180>
   1c2b0:	mov	r2, r3
   1c2b4:	ldrd	r6, [sp, #112]	; 0x70
   1c2b8:	ldr	r3, [lr, r0]
   1c2bc:	strd	r6, [sp]
   1c2c0:	ldr	r0, [r3]
   1c2c4:	bl	1c6b0 <mount@plt+0xa550>
   1c2c8:	b	1c28c <mount@plt+0xa12c>
   1c2cc:	bl	11ca4 <__stack_chk_fail@plt>
   1c2d0:	andeq	r6, r1, ip, ror #27
   1c2d4:	andeq	r0, r0, ip, lsl #4
   1c2d8:	andeq	r9, r1, r8, ror r6
   1c2dc:	andeq	r5, r0, r0, lsr lr
   1c2e0:	andeq	r0, r0, ip, lsr #4
   1c2e4:	push	{r4, r5, r6, r7, lr}
   1c2e8:	sub	sp, sp, #84	; 0x54
   1c2ec:	ldr	lr, [pc, #208]	; 1c3c4 <mount@plt+0xa264>
   1c2f0:	ldr	ip, [pc, #208]	; 1c3c8 <mount@plt+0xa268>
   1c2f4:	add	lr, pc, lr
   1c2f8:	ldr	r5, [pc, #204]	; 1c3cc <mount@plt+0xa26c>
   1c2fc:	ldr	r4, [lr, ip]
   1c300:	add	r5, pc, r5
   1c304:	tst	r0, #6
   1c308:	ldr	ip, [r4]
   1c30c:	str	ip, [sp, #76]	; 0x4c
   1c310:	ldr	ip, [r5]
   1c314:	beq	1c36c <mount@plt+0xa20c>
   1c318:	cmp	ip, #0
   1c31c:	beq	1c38c <mount@plt+0xa22c>
   1c320:	mov	r6, r2
   1c324:	ldr	r2, [pc, #164]	; 1c3d0 <mount@plt+0xa270>
   1c328:	ldr	r1, [sp, #104]	; 0x68
   1c32c:	add	r2, pc, r2
   1c330:	mov	r3, #64	; 0x40
   1c334:	add	r7, sp, #12
   1c338:	str	r1, [sp, #4]
   1c33c:	str	r2, [sp]
   1c340:	mov	r0, r7
   1c344:	mov	r1, r3
   1c348:	mov	r2, #1
   1c34c:	bl	1213c <__snprintf_chk@plt>
   1c350:	cmp	r6, #0
   1c354:	beq	1c3b0 <mount@plt+0xa250>
   1c358:	mov	r2, r7
   1c35c:	mov	r1, r6
   1c360:	ldr	r0, [r5]
   1c364:	bl	1b838 <mount@plt+0x96d8>
   1c368:	b	1c374 <mount@plt+0xa214>
   1c36c:	cmp	ip, #0
   1c370:	beq	1c38c <mount@plt+0xa22c>
   1c374:	ldr	r2, [sp, #76]	; 0x4c
   1c378:	ldr	r3, [r4]
   1c37c:	cmp	r2, r3
   1c380:	bne	1c3c0 <mount@plt+0xa260>
   1c384:	add	sp, sp, #84	; 0x54
   1c388:	pop	{r4, r5, r6, r7, pc}
   1c38c:	tst	r0, #5
   1c390:	beq	1c374 <mount@plt+0xa214>
   1c394:	ldr	r0, [pc, #56]	; 1c3d4 <mount@plt+0xa274>
   1c398:	mov	r2, r3
   1c39c:	ldr	r3, [sp, #104]	; 0x68
   1c3a0:	ldr	r0, [lr, r0]
   1c3a4:	ldr	r0, [r0]
   1c3a8:	bl	1c6b0 <mount@plt+0xa550>
   1c3ac:	b	1c374 <mount@plt+0xa214>
   1c3b0:	mov	r1, r7
   1c3b4:	ldr	r0, [r5]
   1c3b8:	bl	1b720 <mount@plt+0x95c0>
   1c3bc:	b	1c374 <mount@plt+0xa214>
   1c3c0:	bl	11ca4 <__stack_chk_fail@plt>
   1c3c4:	andeq	r6, r1, r4, lsl #26
   1c3c8:	andeq	r0, r0, ip, lsl #4
   1c3cc:	muleq	r1, r4, r5
   1c3d0:	andeq	r5, r0, ip, ror fp
   1c3d4:	andeq	r0, r0, ip, lsr #4
   1c3d8:	ldr	ip, [pc, #116]	; 1c454 <mount@plt+0xa2f4>
   1c3dc:	push	{r4, lr}
   1c3e0:	add	ip, pc, ip
   1c3e4:	ldr	lr, [pc, #108]	; 1c458 <mount@plt+0xa2f8>
   1c3e8:	tst	r0, #6
   1c3ec:	mov	r4, r3
   1c3f0:	ldr	ip, [ip]
   1c3f4:	add	lr, pc, lr
   1c3f8:	ldr	r3, [sp, #8]
   1c3fc:	beq	1c420 <mount@plt+0xa2c0>
   1c400:	cmp	ip, #0
   1c404:	beq	1c428 <mount@plt+0xa2c8>
   1c408:	cmp	r2, #0
   1c40c:	beq	1c448 <mount@plt+0xa2e8>
   1c410:	mov	r1, r2
   1c414:	mov	r0, ip
   1c418:	pop	{r4, lr}
   1c41c:	b	1b9c0 <mount@plt+0x9860>
   1c420:	cmp	ip, #0
   1c424:	popne	{r4, pc}
   1c428:	tst	r0, #5
   1c42c:	popeq	{r4, pc}
   1c430:	ldr	r0, [pc, #36]	; 1c45c <mount@plt+0xa2fc>
   1c434:	mov	r2, r4
   1c438:	ldr	r0, [lr, r0]
   1c43c:	pop	{r4, lr}
   1c440:	ldr	r0, [r0]
   1c444:	b	1c6b0 <mount@plt+0xa550>
   1c448:	mov	r0, ip
   1c44c:	pop	{r4, lr}
   1c450:	b	1b790 <mount@plt+0x9630>
   1c454:			; <UNDEFINED> instruction: 0x000194b4
   1c458:	andeq	r6, r1, r4, lsl #24
   1c45c:	andeq	r0, r0, ip, lsr #4
   1c460:	ldr	r3, [pc, #48]	; 1c498 <mount@plt+0xa338>
   1c464:	ldr	r2, [pc, #48]	; 1c49c <mount@plt+0xa33c>
   1c468:	add	r3, pc, r3
   1c46c:	add	r2, pc, r2
   1c470:	ldr	r3, [r3]
   1c474:	cmp	r3, #0
   1c478:	bxne	lr
   1c47c:	ldr	r3, [pc, #28]	; 1c4a0 <mount@plt+0xa340>
   1c480:	ldr	r1, [pc, #28]	; 1c4a4 <mount@plt+0xa344>
   1c484:	mov	r0, #1
   1c488:	ldr	r3, [r2, r3]
   1c48c:	add	r1, pc, r1
   1c490:	ldr	r2, [r3]
   1c494:	b	11f44 <__printf_chk@plt>
   1c498:	andeq	r9, r1, ip, lsr #8
   1c49c:	andeq	r6, r1, ip, lsl #23
   1c4a0:	andeq	r0, r0, r8, lsr #4
   1c4a4:	ldrdeq	r5, [r0], -r4
   1c4a8:	cmp	r1, #0
   1c4ac:	clz	r3, r0
   1c4b0:	lsr	r3, r3, #5
   1c4b4:	moveq	r1, r3
   1c4b8:	movne	r1, #1
   1c4bc:	ldr	r3, [pc, #168]	; 1c56c <mount@plt+0xa40c>
   1c4c0:	cmp	r1, #0
   1c4c4:	add	r3, pc, r3
   1c4c8:	bne	1c564 <mount@plt+0xa404>
   1c4cc:	cmp	r0, #2
   1c4d0:	push	{r4, r5, r6, lr}
   1c4d4:	beq	1c4fc <mount@plt+0xa39c>
   1c4d8:	ldr	r2, [pc, #144]	; 1c570 <mount@plt+0xa410>
   1c4dc:	ldr	r3, [r3, r2]
   1c4e0:	ldr	r0, [r3]
   1c4e4:	bl	11f68 <fileno@plt>
   1c4e8:	bl	120d0 <isatty@plt>
   1c4ec:	cmp	r0, #0
   1c4f0:	bne	1c4fc <mount@plt+0xa39c>
   1c4f4:	mov	r0, #0
   1c4f8:	pop	{r4, r5, r6, pc}
   1c4fc:	ldr	r5, [pc, #112]	; 1c574 <mount@plt+0xa414>
   1c500:	ldr	r0, [pc, #112]	; 1c578 <mount@plt+0xa418>
   1c504:	add	r5, pc, r5
   1c508:	mov	r4, #1
   1c50c:	add	r0, pc, r0
   1c510:	str	r4, [r5]
   1c514:	bl	11dd0 <getenv@plt>
   1c518:	cmp	r0, #0
   1c51c:	beq	1c55c <mount@plt+0xa3fc>
   1c520:	mov	r1, #59	; 0x3b
   1c524:	bl	11ff8 <strrchr@plt>
   1c528:	subs	r1, r0, #0
   1c52c:	beq	1c55c <mount@plt+0xa3fc>
   1c530:	ldrb	r2, [r1, #1]
   1c534:	sub	r3, r2, #48	; 0x30
   1c538:	cmp	r2, #56	; 0x38
   1c53c:	cmpne	r3, #6
   1c540:	movls	r0, #1
   1c544:	movhi	r0, #0
   1c548:	bhi	1c55c <mount@plt+0xa3fc>
   1c54c:	ldrb	r3, [r1, #2]
   1c550:	cmp	r3, #0
   1c554:	streq	r4, [r5, #4]
   1c558:	pop	{r4, r5, r6, pc}
   1c55c:	mov	r0, r4
   1c560:	pop	{r4, r5, r6, pc}
   1c564:	mov	r0, #0
   1c568:	bx	lr
   1c56c:	andeq	r6, r1, r4, lsr fp
   1c570:	andeq	r0, r0, ip, lsr #4
   1c574:	muleq	r1, r4, r3
   1c578:			; <UNDEFINED> instruction: 0x00005bb0
   1c57c:	ldr	r3, [pc, #276]	; 1c698 <mount@plt+0xa538>
   1c580:	ldr	r2, [pc, #276]	; 1c69c <mount@plt+0xa53c>
   1c584:	add	r3, pc, r3
   1c588:	push	{r4, r5, r6, r7, fp, lr}
   1c58c:	add	fp, sp, #20
   1c590:	sub	sp, sp, #8
   1c594:	ldr	r6, [r3, r2]
   1c598:	subs	r5, r1, #0
   1c59c:	ldr	r3, [r6]
   1c5a0:	str	r3, [fp, #-24]	; 0xffffffe8
   1c5a4:	beq	1c668 <mount@plt+0xa508>
   1c5a8:	mov	r4, r0
   1c5ac:	bl	11e9c <strlen@plt>
   1c5b0:	mov	r1, r4
   1c5b4:	add	r3, r0, #8
   1c5b8:	bic	r3, r3, #7
   1c5bc:	sub	sp, sp, r3
   1c5c0:	add	r2, r0, #1
   1c5c4:	mov	r0, sp
   1c5c8:	bl	11c44 <memcpy@plt>
   1c5cc:	mov	r1, #61	; 0x3d
   1c5d0:	mov	r7, r0
   1c5d4:	bl	11c08 <strchrnul@plt>
   1c5d8:	ldr	r1, [pc, #192]	; 1c6a0 <mount@plt+0xa540>
   1c5dc:	add	r1, pc, r1
   1c5e0:	ldrb	r3, [r0]
   1c5e4:	mov	r4, r0
   1c5e8:	mov	r0, r7
   1c5ec:	cmp	r3, #0
   1c5f0:	movne	r3, #0
   1c5f4:	strbne	r3, [r4], #1
   1c5f8:	bl	184b8 <mount@plt+0x6358>
   1c5fc:	cmp	r0, #0
   1c600:	bne	1c668 <mount@plt+0xa508>
   1c604:	ldrb	r3, [r4]
   1c608:	cmp	r3, #0
   1c60c:	beq	1c684 <mount@plt+0xa524>
   1c610:	ldr	r1, [pc, #140]	; 1c6a4 <mount@plt+0xa544>
   1c614:	mov	r0, r4
   1c618:	add	r1, pc, r1
   1c61c:	bl	11b9c <strcmp@plt>
   1c620:	cmp	r0, #0
   1c624:	beq	1c684 <mount@plt+0xa524>
   1c628:	ldr	r1, [pc, #120]	; 1c6a8 <mount@plt+0xa548>
   1c62c:	mov	r0, r4
   1c630:	add	r1, pc, r1
   1c634:	bl	11b9c <strcmp@plt>
   1c638:	cmp	r0, #0
   1c63c:	moveq	r0, #1
   1c640:	streq	r0, [r5]
   1c644:	beq	1c66c <mount@plt+0xa50c>
   1c648:	ldr	r1, [pc, #92]	; 1c6ac <mount@plt+0xa54c>
   1c64c:	mov	r0, r4
   1c650:	add	r1, pc, r1
   1c654:	bl	11b9c <strcmp@plt>
   1c658:	subs	r3, r0, #0
   1c65c:	moveq	r0, #1
   1c660:	streq	r3, [r5]
   1c664:	beq	1c66c <mount@plt+0xa50c>
   1c668:	mov	r0, #0
   1c66c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c670:	ldr	r3, [r6]
   1c674:	cmp	r2, r3
   1c678:	bne	1c694 <mount@plt+0xa534>
   1c67c:	sub	sp, fp, #20
   1c680:	pop	{r4, r5, r6, r7, fp, pc}
   1c684:	mov	r3, #2
   1c688:	str	r3, [r5]
   1c68c:	mov	r0, #1
   1c690:	b	1c66c <mount@plt+0xa50c>
   1c694:	bl	11ca4 <__stack_chk_fail@plt>
   1c698:	andeq	r6, r1, r4, ror sl
   1c69c:	andeq	r0, r0, ip, lsl #4
   1c6a0:	andeq	r5, r0, ip, ror #21
   1c6a4:			; <UNDEFINED> instruction: 0x00005ab8
   1c6a8:	andeq	r5, r0, r8, lsr #21
   1c6ac:	muleq	r0, r0, sl
   1c6b0:	push	{r2, r3}
   1c6b4:	ldr	r2, [pc, #252]	; 1c7b8 <mount@plt+0xa658>
   1c6b8:	ldr	r3, [pc, #252]	; 1c7bc <mount@plt+0xa65c>
   1c6bc:	add	r2, pc, r2
   1c6c0:	ldr	ip, [pc, #248]	; 1c7c0 <mount@plt+0xa660>
   1c6c4:	push	{r4, r5, r6, r7, r8, lr}
   1c6c8:	add	ip, pc, ip
   1c6cc:	ldr	r6, [r2, r3]
   1c6d0:	ldr	r4, [ip]
   1c6d4:	sub	sp, sp, #8
   1c6d8:	ldr	lr, [r6]
   1c6dc:	add	r3, sp, #36	; 0x24
   1c6e0:	cmp	r1, #6
   1c6e4:	cmpne	r4, #0
   1c6e8:	str	lr, [sp, #4]
   1c6ec:	str	r3, [sp]
   1c6f0:	ldr	r8, [sp, #32]
   1c6f4:	beq	1c7a4 <mount@plt+0xa644>
   1c6f8:	ldr	r3, [ip, #4]
   1c6fc:	mov	r7, r0
   1c700:	cmp	r3, #0
   1c704:	bne	1c794 <mount@plt+0xa634>
   1c708:	ldr	r3, [pc, #180]	; 1c7c4 <mount@plt+0xa664>
   1c70c:	add	r3, pc, r3
   1c710:	add	r1, r3, r1, lsl #2
   1c714:	ldr	r2, [r1, #28]
   1c718:	ldr	r3, [pc, #168]	; 1c7c8 <mount@plt+0xa668>
   1c71c:	ldr	r5, [pc, #168]	; 1c7cc <mount@plt+0xa66c>
   1c720:	add	r3, pc, r3
   1c724:	add	r5, pc, r5
   1c728:	ldr	r3, [r3, r2, lsl #2]
   1c72c:	mov	r1, #1
   1c730:	mov	r2, r5
   1c734:	mov	r0, r7
   1c738:	bl	11f74 <__fprintf_chk@plt>
   1c73c:	mov	r2, r8
   1c740:	ldr	r3, [sp]
   1c744:	mov	r1, #1
   1c748:	mov	r4, r0
   1c74c:	mov	r0, r7
   1c750:	bl	11e24 <__vfprintf_chk@plt>
   1c754:	ldr	r3, [pc, #116]	; 1c7d0 <mount@plt+0xa670>
   1c758:	mov	r2, r5
   1c75c:	add	r3, pc, r3
   1c760:	mov	r1, #1
   1c764:	add	r4, r0, r4
   1c768:	mov	r0, r7
   1c76c:	bl	11f74 <__fprintf_chk@plt>
   1c770:	add	r0, r4, r0
   1c774:	ldr	r2, [sp, #4]
   1c778:	ldr	r3, [r6]
   1c77c:	cmp	r2, r3
   1c780:	bne	1c7b4 <mount@plt+0xa654>
   1c784:	add	sp, sp, #8
   1c788:	pop	{r4, r5, r6, r7, r8, lr}
   1c78c:	add	sp, sp, #8
   1c790:	bx	lr
   1c794:	ldr	r3, [pc, #56]	; 1c7d4 <mount@plt+0xa674>
   1c798:	add	r3, pc, r3
   1c79c:	ldr	r2, [r3, r1, lsl #2]
   1c7a0:	b	1c718 <mount@plt+0xa5b8>
   1c7a4:	mov	r2, r8
   1c7a8:	mov	r1, #1
   1c7ac:	bl	11e24 <__vfprintf_chk@plt>
   1c7b0:	b	1c774 <mount@plt+0xa614>
   1c7b4:	bl	11ca4 <__stack_chk_fail@plt>
   1c7b8:	andeq	r6, r1, ip, lsr r9
   1c7bc:	andeq	r0, r0, ip, lsl #4
   1c7c0:	ldrdeq	r9, [r1], -r0
   1c7c4:	andeq	r5, r0, r8, ror r9
   1c7c8:	andeq	r6, r1, r0, lsl #15
   1c7cc:	andeq	r5, r0, ip, lsr fp
   1c7d0:	andeq	r5, r0, ip, lsl #19
   1c7d4:	andeq	r5, r0, ip, ror #17
   1c7d8:	cmp	r0, #2
   1c7dc:	bxeq	lr
   1c7e0:	cmp	r0, #10
   1c7e4:	moveq	r0, #3
   1c7e8:	movne	r0, #6
   1c7ec:	bx	lr
   1c7f0:	cmp	r0, #2
   1c7f4:	beq	1c808 <mount@plt+0xa6a8>
   1c7f8:	cmp	r0, #6
   1c7fc:	moveq	r0, #4
   1c800:	movne	r0, #6
   1c804:	bx	lr
   1c808:	mov	r0, #5
   1c80c:	bx	lr
   1c810:	push	{r4, r5, r6, r7, r8, lr}
   1c814:	mov	r5, r0
   1c818:	mov	r6, r3
   1c81c:	mov	r7, r1
   1c820:	mov	r4, r2
   1c824:	bl	11ec0 <__errno_location@plt>
   1c828:	cmp	r5, #12
   1c82c:	movne	r3, #97	; 0x61
   1c830:	strne	r3, [r0]
   1c834:	beq	1c840 <mount@plt+0xa6e0>
   1c838:	mov	r0, #0
   1c83c:	pop	{r4, r5, r6, r7, r8, pc}
   1c840:	ldrh	r3, [r7]
   1c844:	mov	r2, #0
   1c848:	str	r2, [r0]
   1c84c:	cmp	r3, #2
   1c850:	bne	1c838 <mount@plt+0xa6d8>
   1c854:	cmp	r6, r2
   1c858:	beq	1c978 <mount@plt+0xa818>
   1c85c:	ldrh	ip, [r7, #2]
   1c860:	lsr	r1, ip, #10
   1c864:	cmp	r1, #9
   1c868:	bls	1c980 <mount@plt+0xa820>
   1c86c:	ldr	r2, [pc, #388]	; 1c9f8 <mount@plt+0xa898>
   1c870:	cmp	r6, #1
   1c874:	umull	r0, r2, r2, r1
   1c878:	lsr	r2, r2, #3
   1c87c:	add	r0, r2, #48	; 0x30
   1c880:	strb	r0, [r4]
   1c884:	beq	1c978 <mount@plt+0xa818>
   1c888:	add	r2, r2, r2, lsl #2
   1c88c:	mov	r0, #1
   1c890:	sub	r1, r1, r2, lsl #1
   1c894:	add	r2, r4, #1
   1c898:	uxth	r1, r1
   1c89c:	add	r1, r1, #48	; 0x30
   1c8a0:	cmp	r6, r3
   1c8a4:	strb	r1, [r2]
   1c8a8:	beq	1c978 <mount@plt+0xa818>
   1c8ac:	add	r2, r0, #2
   1c8b0:	mov	r1, #46	; 0x2e
   1c8b4:	cmp	r6, r2
   1c8b8:	add	lr, r4, r2
   1c8bc:	strb	r1, [r4, r3]
   1c8c0:	beq	1c978 <mount@plt+0xa818>
   1c8c4:	lsl	r3, ip, #22
   1c8c8:	lsr	r3, r3, #22
   1c8cc:	cmp	r3, #1000	; 0x3e8
   1c8d0:	bcs	1c990 <mount@plt+0xa830>
   1c8d4:	cmp	r3, #99	; 0x63
   1c8d8:	bls	1c9dc <mount@plt+0xa87c>
   1c8dc:	ldr	r1, [pc, #280]	; 1c9fc <mount@plt+0xa89c>
   1c8e0:	umull	r0, r1, r1, r3
   1c8e4:	lsr	r1, r1, #5
   1c8e8:	uxth	r1, r1
   1c8ec:	add	r2, r2, #1
   1c8f0:	add	r1, r1, #48	; 0x30
   1c8f4:	cmp	r6, r2
   1c8f8:	strb	r1, [lr]
   1c8fc:	beq	1c978 <mount@plt+0xa818>
   1c900:	ldr	r1, [pc, #244]	; 1c9fc <mount@plt+0xa89c>
   1c904:	ldr	r0, [pc, #236]	; 1c9f8 <mount@plt+0xa898>
   1c908:	add	lr, r4, r2
   1c90c:	umull	ip, r1, r1, r3
   1c910:	lsr	r1, r1, #5
   1c914:	add	r1, r1, r1, lsl #2
   1c918:	add	r1, r1, r1, lsl #2
   1c91c:	sub	r3, r3, r1, lsl #2
   1c920:	uxth	r3, r3
   1c924:	umull	r0, r1, r0, r3
   1c928:	lsr	r1, r1, #3
   1c92c:	uxth	r1, r1
   1c930:	add	r2, r2, #1
   1c934:	add	r1, r1, #48	; 0x30
   1c938:	cmp	r6, r2
   1c93c:	strb	r1, [lr]
   1c940:	beq	1c978 <mount@plt+0xa818>
   1c944:	ldr	r1, [pc, #172]	; 1c9f8 <mount@plt+0xa898>
   1c948:	add	lr, r4, r2
   1c94c:	umull	r0, r1, r1, r3
   1c950:	lsr	r1, r1, #3
   1c954:	add	r1, r1, r1, lsl #2
   1c958:	sub	r3, r3, r1, lsl #1
   1c95c:	uxth	r3, r3
   1c960:	add	r2, r2, #1
   1c964:	add	r3, r3, #48	; 0x30
   1c968:	cmp	r6, r2
   1c96c:	strb	r3, [lr]
   1c970:	movne	r3, #0
   1c974:	strbne	r3, [r4, r2]
   1c978:	mov	r0, r4
   1c97c:	pop	{r4, r5, r6, r7, r8, pc}
   1c980:	mov	r0, r2
   1c984:	mov	r3, #1
   1c988:	mov	r2, r4
   1c98c:	b	1c89c <mount@plt+0xa73c>
   1c990:	add	r2, r0, #3
   1c994:	mov	r1, #49	; 0x31
   1c998:	cmp	r6, r2
   1c99c:	strb	r1, [lr]
   1c9a0:	beq	1c978 <mount@plt+0xa818>
   1c9a4:	ldr	r0, [pc, #84]	; 1ca00 <mount@plt+0xa8a0>
   1c9a8:	ldr	r1, [pc, #76]	; 1c9fc <mount@plt+0xa89c>
   1c9ac:	add	lr, r4, r2
   1c9b0:	umull	ip, r0, r0, r3
   1c9b4:	lsr	r0, r0, #6
   1c9b8:	lsl	ip, r0, #5
   1c9bc:	sub	ip, ip, r0
   1c9c0:	add	r0, r0, ip, lsl #2
   1c9c4:	sub	r3, r3, r0, lsl #3
   1c9c8:	uxth	r3, r3
   1c9cc:	umull	r0, r1, r1, r3
   1c9d0:	lsr	r1, r1, #5
   1c9d4:	uxth	r1, r1
   1c9d8:	b	1c8ec <mount@plt+0xa78c>
   1c9dc:	cmp	r3, #9
   1c9e0:	bls	1c960 <mount@plt+0xa800>
   1c9e4:	ldr	r1, [pc, #12]	; 1c9f8 <mount@plt+0xa898>
   1c9e8:	umull	r0, r1, r1, r3
   1c9ec:	lsr	r1, r1, #3
   1c9f0:	uxth	r1, r1
   1c9f4:	b	1c930 <mount@plt+0xa7d0>
   1c9f8:	stclgt	12, cr12, [ip], {205}	; 0xcd
   1c9fc:	mvnpl	r8, pc, lsl r5
   1ca00:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   1ca04:	push	{r4, r5, r6, lr}
   1ca08:	mov	r6, r0
   1ca0c:	mov	r5, r1
   1ca10:	mov	r4, r2
   1ca14:	bl	11ec0 <__errno_location@plt>
   1ca18:	cmp	r6, #12
   1ca1c:	bne	1cb08 <mount@plt+0xa9a8>
   1ca20:	mov	ip, r5
   1ca24:	mov	r2, #0
   1ca28:	str	r2, [r0]
   1ca2c:	ldrb	r3, [ip], #1
   1ca30:	cmp	r3, r2
   1ca34:	beq	1ca84 <mount@plt+0xa924>
   1ca38:	sub	r3, r3, #48	; 0x30
   1ca3c:	cmp	r3, #9
   1ca40:	bhi	1ca80 <mount@plt+0xa920>
   1ca44:	mov	r0, r2
   1ca48:	b	1ca58 <mount@plt+0xa8f8>
   1ca4c:	cmp	r3, #9
   1ca50:	bhi	1ca78 <mount@plt+0xa918>
   1ca54:	mov	r0, lr
   1ca58:	ldrb	r1, [ip], #1
   1ca5c:	add	r2, r2, r2, lsl #2
   1ca60:	add	lr, r0, #1
   1ca64:	add	r2, r3, r2, lsl #1
   1ca68:	cmp	r1, #0
   1ca6c:	sub	r3, r1, #48	; 0x30
   1ca70:	uxth	r2, r2
   1ca74:	bne	1ca4c <mount@plt+0xa8ec>
   1ca78:	cmp	r2, #63	; 0x3f
   1ca7c:	bls	1ca8c <mount@plt+0xa92c>
   1ca80:	mov	r3, #0
   1ca84:	mov	r0, r3
   1ca88:	pop	{r4, r5, r6, pc}
   1ca8c:	ldrb	r3, [r5, lr]
   1ca90:	cmp	r3, #46	; 0x2e
   1ca94:	bne	1ca80 <mount@plt+0xa920>
   1ca98:	add	r0, r0, #2
   1ca9c:	add	ip, r5, r0
   1caa0:	ldrb	r3, [r5, r0]
   1caa4:	add	ip, ip, #1
   1caa8:	cmp	r3, #0
   1caac:	beq	1ca84 <mount@plt+0xa924>
   1cab0:	sub	r3, r3, #48	; 0x30
   1cab4:	cmp	r3, #9
   1cab8:	bhi	1ca80 <mount@plt+0xa920>
   1cabc:	mov	r1, #0
   1cac0:	b	1cacc <mount@plt+0xa96c>
   1cac4:	cmp	r3, #9
   1cac8:	bhi	1cae8 <mount@plt+0xa988>
   1cacc:	ldrb	r0, [ip], #1
   1cad0:	add	r1, r1, r1, lsl #2
   1cad4:	add	r1, r3, r1, lsl #1
   1cad8:	cmp	r0, #0
   1cadc:	sub	r3, r0, #48	; 0x30
   1cae0:	uxth	r1, r1
   1cae4:	bne	1cac4 <mount@plt+0xa964>
   1cae8:	cmp	r1, #1024	; 0x400
   1caec:	bcs	1ca80 <mount@plt+0xa920>
   1caf0:	mov	r3, #2
   1caf4:	orr	r2, r1, r2, lsl #10
   1caf8:	strh	r3, [r4]
   1cafc:	strh	r2, [r4, #2]
   1cb00:	mov	r3, #1
   1cb04:	b	1ca84 <mount@plt+0xa924>
   1cb08:	mov	r2, #97	; 0x61
   1cb0c:	mvn	r3, #0
   1cb10:	str	r2, [r0]
   1cb14:	b	1ca84 <mount@plt+0xa924>
   1cb18:	push	{r4, r5, r6, r7, r8, lr}
   1cb1c:	mov	r7, r0
   1cb20:	mov	r5, r1
   1cb24:	mov	r4, r2
   1cb28:	mov	r6, r3
   1cb2c:	bl	11ec0 <__errno_location@plt>
   1cb30:	cmp	r7, #4
   1cb34:	beq	1cb48 <mount@plt+0xa9e8>
   1cb38:	mov	r3, #97	; 0x61
   1cb3c:	str	r3, [r0]
   1cb40:	mov	r0, #0
   1cb44:	pop	{r4, r5, r6, r7, r8, pc}
   1cb48:	mov	r2, #0
   1cb4c:	cmp	r6, #0
   1cb50:	str	r2, [r0]
   1cb54:	beq	1cbac <mount@plt+0xaa4c>
   1cb58:	ldr	ip, [r5]
   1cb5c:	sub	r1, r4, #1
   1cb60:	rev	ip, ip
   1cb64:	lsr	ip, ip, #28
   1cb68:	and	ip, ip, #15
   1cb6c:	add	r2, r2, #1
   1cb70:	cmp	ip, #9
   1cb74:	uxtb	ip, ip
   1cb78:	add	r3, ip, #48	; 0x30
   1cb7c:	addhi	r3, ip, #55	; 0x37
   1cb80:	rsb	ip, r2, r2, lsl #30
   1cb84:	cmp	r2, #8
   1cb88:	lsl	ip, ip, #2
   1cb8c:	strb	r3, [r1, #1]!
   1cb90:	add	r3, ip, #28
   1cb94:	beq	1cbb4 <mount@plt+0xaa54>
   1cb98:	ldr	ip, [r5]
   1cb9c:	cmp	r6, r2
   1cba0:	rev	ip, ip
   1cba4:	lsr	ip, ip, r3
   1cba8:	bne	1cb68 <mount@plt+0xaa08>
   1cbac:	mov	r0, r4
   1cbb0:	pop	{r4, r5, r6, r7, r8, pc}
   1cbb4:	cmp	r6, #8
   1cbb8:	beq	1cbac <mount@plt+0xaa4c>
   1cbbc:	add	r5, r5, #4
   1cbc0:	mov	r2, #9
   1cbc4:	add	r0, r4, #1
   1cbc8:	mov	r3, #46	; 0x2e
   1cbcc:	strb	r3, [r4, #8]
   1cbd0:	ldrb	r3, [r5], #1
   1cbd4:	cmp	r6, r2
   1cbd8:	lsr	r3, r3, #4
   1cbdc:	beq	1cbac <mount@plt+0xaa4c>
   1cbe0:	cmp	r3, #9
   1cbe4:	uxtb	r3, r3
   1cbe8:	add	r1, r3, #48	; 0x30
   1cbec:	addhi	r1, r3, #55	; 0x37
   1cbf0:	add	r3, r2, #1
   1cbf4:	cmp	r6, r3
   1cbf8:	strb	r1, [r4, r2]
   1cbfc:	beq	1cbac <mount@plt+0xaa4c>
   1cc00:	ldrb	r3, [r5, #-1]
   1cc04:	and	r3, r3, #15
   1cc08:	cmp	r3, #9
   1cc0c:	add	r1, r3, #48	; 0x30
   1cc10:	addhi	r1, r3, #55	; 0x37
   1cc14:	strb	r1, [r0, r2]
   1cc18:	add	r2, r2, #2
   1cc1c:	cmp	r2, #21
   1cc20:	bne	1cbd0 <mount@plt+0xaa70>
   1cc24:	cmp	r6, #21
   1cc28:	movne	r3, #0
   1cc2c:	strbne	r3, [r4, #21]
   1cc30:	b	1cbac <mount@plt+0xaa4c>
   1cc34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cc38:	sub	sp, sp, #8
   1cc3c:	mov	r5, r0
   1cc40:	mov	r7, r1
   1cc44:	mov	r8, r2
   1cc48:	mov	r4, r3
   1cc4c:	bl	11ec0 <__errno_location@plt>
   1cc50:	cmp	r5, #28
   1cc54:	mov	r9, r0
   1cc58:	beq	1cc70 <mount@plt+0xab10>
   1cc5c:	mov	r3, #97	; 0x61
   1cc60:	str	r3, [r0]
   1cc64:	mov	r0, #0
   1cc68:	add	sp, sp, #8
   1cc6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cc70:	ldr	sl, [pc, #128]	; 1ccf8 <mount@plt+0xab98>
   1cc74:	mov	r3, #0
   1cc78:	add	sl, pc, sl
   1cc7c:	sub	r7, r7, #4
   1cc80:	mov	r5, r8
   1cc84:	str	r3, [r0]
   1cc88:	b	1cca4 <mount@plt+0xab44>
   1cc8c:	tst	r6, #256	; 0x100
   1cc90:	bne	1ccec <mount@plt+0xab8c>
   1cc94:	subs	r4, r4, r0
   1cc98:	add	r5, r5, r0
   1cc9c:	subne	r4, r4, #1
   1cca0:	strbne	r3, [r5], #1
   1cca4:	ldr	r6, [r7, #4]!
   1cca8:	mvn	r3, #0
   1ccac:	rev	r6, r6
   1ccb0:	str	sl, [sp]
   1ccb4:	lsr	r2, r6, #12
   1ccb8:	str	r2, [sp, #4]
   1ccbc:	mov	r1, r4
   1ccc0:	mov	r2, #1
   1ccc4:	mov	r0, r5
   1ccc8:	bl	1213c <__snprintf_chk@plt>
   1cccc:	mov	r3, #47	; 0x2f
   1ccd0:	cmp	r4, r0
   1ccd4:	bhi	1cc8c <mount@plt+0xab2c>
   1ccd8:	mvn	r3, #6
   1ccdc:	mov	r0, #0
   1cce0:	str	r3, [r9]
   1cce4:	add	sp, sp, #8
   1cce8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ccec:	mov	r0, r8
   1ccf0:	add	sp, sp, #8
   1ccf4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ccf8:	ldrdeq	r5, [r0], -r8
   1ccfc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cd00:	lsr	r5, r3, #2
   1cd04:	ldr	r6, [pc, #268]	; 1ce18 <mount@plt+0xacb8>
   1cd08:	ldr	ip, [pc, #268]	; 1ce1c <mount@plt+0xacbc>
   1cd0c:	add	r6, pc, r6
   1cd10:	sub	sp, sp, #8
   1cd14:	ldr	r7, [r6, ip]
   1cd18:	mov	r8, r0
   1cd1c:	mov	sl, r1
   1cd20:	ldr	r3, [r7]
   1cd24:	mov	r4, r2
   1cd28:	str	r3, [sp, #4]
   1cd2c:	bl	11ec0 <__errno_location@plt>
   1cd30:	cmp	r8, #28
   1cd34:	bne	1ce04 <mount@plt+0xaca4>
   1cd38:	cmp	r5, #0
   1cd3c:	mov	r3, #0
   1cd40:	str	r3, [r0]
   1cd44:	ldrne	r8, [pc, #212]	; 1ce20 <mount@plt+0xacc0>
   1cd48:	addne	r5, r4, r5, lsl #2
   1cd4c:	movne	r9, sp
   1cd50:	bne	1cd90 <mount@plt+0xac30>
   1cd54:	b	1cdcc <mount@plt+0xac6c>
   1cd58:	ldr	r3, [sp]
   1cd5c:	cmp	r3, sl
   1cd60:	beq	1cdac <mount@plt+0xac4c>
   1cd64:	lsl	r0, r0, #12
   1cd68:	rev	r0, r0
   1cd6c:	str	r0, [r4], #4
   1cd70:	ldrb	r2, [r3]
   1cd74:	cmp	r2, #0
   1cd78:	beq	1cdf4 <mount@plt+0xac94>
   1cd7c:	cmp	r2, #47	; 0x2f
   1cd80:	bne	1cdac <mount@plt+0xac4c>
   1cd84:	cmp	r4, r5
   1cd88:	add	sl, r3, #1
   1cd8c:	beq	1cdcc <mount@plt+0xac6c>
   1cd90:	mov	r1, r9
   1cd94:	mov	r2, #0
   1cd98:	mov	r0, sl
   1cd9c:	bl	11e90 <strtoul@plt>
   1cda0:	mov	r1, r4
   1cda4:	cmp	r0, r8
   1cda8:	bls	1cd58 <mount@plt+0xabf8>
   1cdac:	mov	r1, #0
   1cdb0:	ldr	r2, [sp, #4]
   1cdb4:	ldr	r3, [r7]
   1cdb8:	mov	r0, r1
   1cdbc:	cmp	r2, r3
   1cdc0:	bne	1ce14 <mount@plt+0xacb4>
   1cdc4:	add	sp, sp, #8
   1cdc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cdcc:	ldr	r3, [pc, #80]	; 1ce24 <mount@plt+0xacc4>
   1cdd0:	ldr	r0, [pc, #80]	; 1ce28 <mount@plt+0xacc8>
   1cdd4:	mov	r1, #1
   1cdd8:	ldr	r3, [r6, r3]
   1cddc:	mov	r2, #24
   1cde0:	add	r0, pc, r0
   1cde4:	ldr	r3, [r3]
   1cde8:	bl	11d40 <fwrite@plt>
   1cdec:	mov	r1, #0
   1cdf0:	b	1cdb0 <mount@plt+0xac50>
   1cdf4:	orr	r0, r0, #65536	; 0x10000
   1cdf8:	str	r0, [r1]
   1cdfc:	mov	r1, #1
   1ce00:	b	1cdb0 <mount@plt+0xac50>
   1ce04:	mov	r3, #97	; 0x61
   1ce08:	mvn	r1, #0
   1ce0c:	str	r3, [r0]
   1ce10:	b	1cdb0 <mount@plt+0xac50>
   1ce14:	bl	11ca4 <__stack_chk_fail@plt>
   1ce18:	andeq	r6, r1, ip, ror #5
   1ce1c:	andeq	r0, r0, ip, lsl #4
   1ce20:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   1ce24:	andeq	r0, r0, r8, lsl r2
   1ce28:	andeq	r5, r0, r0, lsl #7
   1ce2c:	push	{r4, r5, r6, r7, r8, lr}
   1ce30:	mov	r7, r1
   1ce34:	mov	r1, #3
   1ce38:	mov	r4, r0
   1ce3c:	bl	11f8c <mnl_attr_type_valid@plt>
   1ce40:	ldr	r5, [pc, #140]	; 1ced4 <mount@plt+0xad74>
   1ce44:	add	r5, pc, r5
   1ce48:	cmp	r0, #0
   1ce4c:	blt	1ce84 <mount@plt+0xad24>
   1ce50:	mov	r0, r4
   1ce54:	bl	11fa4 <mnl_attr_get_type@plt>
   1ce58:	ldr	r2, [pc, #120]	; 1ced8 <mount@plt+0xad78>
   1ce5c:	add	r2, pc, r2
   1ce60:	mov	r6, r0
   1ce64:	mov	r0, r4
   1ce68:	ldr	r1, [r2, r6, lsl #2]
   1ce6c:	bl	11f38 <mnl_attr_validate@plt>
   1ce70:	cmp	r0, #0
   1ce74:	blt	1ceac <mount@plt+0xad4c>
   1ce78:	mov	r0, #1
   1ce7c:	str	r4, [r7, r6, lsl #2]
   1ce80:	pop	{r4, r5, r6, r7, r8, pc}
   1ce84:	ldr	r3, [pc, #80]	; 1cedc <mount@plt+0xad7c>
   1ce88:	ldr	r0, [pc, #80]	; 1cee0 <mount@plt+0xad80>
   1ce8c:	mov	r2, #25
   1ce90:	ldr	r3, [r5, r3]
   1ce94:	mov	r1, #1
   1ce98:	add	r0, pc, r0
   1ce9c:	ldr	r3, [r3]
   1cea0:	bl	11d40 <fwrite@plt>
   1cea4:	mvn	r0, #0
   1cea8:	pop	{r4, r5, r6, r7, r8, pc}
   1ceac:	ldr	r1, [pc, #40]	; 1cedc <mount@plt+0xad7c>
   1ceb0:	ldr	r2, [pc, #44]	; 1cee4 <mount@plt+0xad84>
   1ceb4:	mov	r3, r6
   1ceb8:	ldr	r0, [r5, r1]
   1cebc:	add	r2, pc, r2
   1cec0:	mov	r1, #1
   1cec4:	ldr	r0, [r0]
   1cec8:	bl	11f74 <__fprintf_chk@plt>
   1cecc:	mvn	r0, #0
   1ced0:	pop	{r4, r5, r6, r7, r8, pc}
   1ced4:			; <UNDEFINED> instruction: 0x000161b4
   1ced8:	andeq	r5, r0, r0, lsr #6
   1cedc:	andeq	r0, r0, r8, lsl r2
   1cee0:	strdeq	r5, [r0], -r4
   1cee4:	andeq	r5, r0, ip, ror #5
   1cee8:	push	{r4, r5, r6, r7, r8, lr}
   1ceec:	mov	r7, r0
   1cef0:	ldr	r8, [pc, #180]	; 1cfac <mount@plt+0xae4c>
   1cef4:	sub	sp, sp, #8
   1cef8:	mov	r6, r1
   1cefc:	mov	r5, r2
   1cf00:	add	r8, pc, r8
   1cf04:	b	1cf20 <mount@plt+0xadc0>
   1cf08:	bl	11ec0 <__errno_location@plt>
   1cf0c:	mov	r4, r0
   1cf10:	ldr	r0, [r0]
   1cf14:	cmp	r0, #11
   1cf18:	cmpne	r0, #4
   1cf1c:	bne	1cf44 <mount@plt+0xade4>
   1cf20:	mov	r2, r5
   1cf24:	mov	r1, r6
   1cf28:	mov	r0, r7
   1cf2c:	bl	1207c <recvmsg@plt>
   1cf30:	cmp	r0, #0
   1cf34:	blt	1cf08 <mount@plt+0xada8>
   1cf38:	beq	1cf84 <mount@plt+0xae24>
   1cf3c:	add	sp, sp, #8
   1cf40:	pop	{r4, r5, r6, r7, r8, pc}
   1cf44:	ldr	r3, [pc, #100]	; 1cfb0 <mount@plt+0xae50>
   1cf48:	ldr	r3, [r8, r3]
   1cf4c:	ldr	r5, [r3]
   1cf50:	bl	11e0c <strerror@plt>
   1cf54:	ldr	r3, [r4]
   1cf58:	ldr	r2, [pc, #84]	; 1cfb4 <mount@plt+0xae54>
   1cf5c:	str	r3, [sp]
   1cf60:	add	r2, pc, r2
   1cf64:	mov	r1, #1
   1cf68:	mov	r3, r0
   1cf6c:	mov	r0, r5
   1cf70:	bl	11f74 <__fprintf_chk@plt>
   1cf74:	ldr	r0, [r4]
   1cf78:	rsb	r0, r0, #0
   1cf7c:	add	sp, sp, #8
   1cf80:	pop	{r4, r5, r6, r7, r8, pc}
   1cf84:	ldr	r3, [pc, #36]	; 1cfb0 <mount@plt+0xae50>
   1cf88:	ldr	r0, [pc, #40]	; 1cfb8 <mount@plt+0xae58>
   1cf8c:	mov	r2, #15
   1cf90:	ldr	r3, [r8, r3]
   1cf94:	mov	r1, #1
   1cf98:	add	r0, pc, r0
   1cf9c:	ldr	r3, [r3]
   1cfa0:	bl	11d40 <fwrite@plt>
   1cfa4:	mvn	r0, #60	; 0x3c
   1cfa8:	b	1cf3c <mount@plt+0xaddc>
   1cfac:	strdeq	r6, [r1], -r8
   1cfb0:	andeq	r0, r0, r8, lsl r2
   1cfb4:	andeq	r5, r0, r0, lsl #5
   1cfb8:	andeq	r5, r0, r8, lsr r2
   1cfbc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cfc0:	mov	r5, #0
   1cfc4:	ldr	r4, [r1, #8]
   1cfc8:	mov	fp, r2
   1cfcc:	mov	r2, #34	; 0x22
   1cfd0:	str	r5, [r4]
   1cfd4:	str	r5, [r4, #4]
   1cfd8:	mov	r7, r1
   1cfdc:	mov	sl, r0
   1cfe0:	bl	1cee8 <mount@plt+0xad88>
   1cfe4:	ldr	r8, [pc, #116]	; 1d060 <mount@plt+0xaf00>
   1cfe8:	add	r8, pc, r8
   1cfec:	subs	r6, r0, #0
   1cff0:	blt	1d024 <mount@plt+0xaec4>
   1cff4:	bl	11df4 <malloc@plt>
   1cff8:	subs	r9, r0, #0
   1cffc:	beq	1d038 <mount@plt+0xaed8>
   1d000:	str	r6, [r4, #4]
   1d004:	str	r9, [r4]
   1d008:	mov	r2, r5
   1d00c:	mov	r1, r7
   1d010:	mov	r0, sl
   1d014:	bl	1cee8 <mount@plt+0xad88>
   1d018:	subs	r6, r0, #0
   1d01c:	strge	r9, [fp]
   1d020:	blt	1d02c <mount@plt+0xaecc>
   1d024:	mov	r0, r6
   1d028:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d02c:	mov	r0, r9
   1d030:	bl	11c14 <free@plt>
   1d034:	b	1d024 <mount@plt+0xaec4>
   1d038:	ldr	r3, [pc, #36]	; 1d064 <mount@plt+0xaf04>
   1d03c:	ldr	r0, [pc, #36]	; 1d068 <mount@plt+0xaf08>
   1d040:	mov	r2, #32
   1d044:	ldr	r3, [r8, r3]
   1d048:	mov	r1, #1
   1d04c:	add	r0, pc, r0
   1d050:	ldr	r3, [r3]
   1d054:	mvn	r6, #11
   1d058:	bl	11d40 <fwrite@plt>
   1d05c:	b	1d024 <mount@plt+0xaec4>
   1d060:	andeq	r6, r1, r0, lsl r0
   1d064:	andeq	r0, r0, r8, lsl r2
   1d068:			; <UNDEFINED> instruction: 0x000051b4
   1d06c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d070:	sub	sp, sp, #32
   1d074:	ldr	r5, [pc, #448]	; 1d23c <mount@plt+0xb0dc>
   1d078:	ldr	r3, [pc, #448]	; 1d240 <mount@plt+0xb0e0>
   1d07c:	add	r5, pc, r5
   1d080:	add	r4, sp, #12
   1d084:	ldr	r6, [r5, r3]
   1d088:	mov	r7, r0
   1d08c:	mov	r2, #0
   1d090:	ldr	r3, [r6]
   1d094:	mov	r8, r1
   1d098:	str	r3, [sp, #28]
   1d09c:	str	r2, [r4, #4]
   1d0a0:	str	r2, [sp, #12]
   1d0a4:	str	r2, [r4, #8]
   1d0a8:	str	r2, [r4, #12]
   1d0ac:	bl	12028 <mnl_nlmsg_get_payload@plt>
   1d0b0:	ldrh	r3, [r7, #6]
   1d0b4:	tst	r3, #512	; 0x200
   1d0b8:	beq	1d0e8 <mount@plt+0xaf88>
   1d0bc:	tst	r3, #256	; 0x100
   1d0c0:	mov	sl, r0
   1d0c4:	movne	r1, #20
   1d0c8:	beq	1d168 <mount@plt+0xb008>
   1d0cc:	ldr	r2, [pc, #368]	; 1d244 <mount@plt+0xb0e4>
   1d0d0:	mov	r3, r4
   1d0d4:	add	r2, pc, r2
   1d0d8:	mov	r0, r7
   1d0dc:	bl	11c80 <mnl_attr_parse@plt>
   1d0e0:	cmp	r0, #1
   1d0e4:	beq	1d104 <mount@plt+0xafa4>
   1d0e8:	mov	r0, #0
   1d0ec:	ldr	r2, [sp, #28]
   1d0f0:	ldr	r3, [r6]
   1d0f4:	cmp	r2, r3
   1d0f8:	bne	1d238 <mount@plt+0xb0d8>
   1d0fc:	add	sp, sp, #32
   1d100:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d104:	ldr	r9, [sp, #16]
   1d108:	cmp	r9, #0
   1d10c:	beq	1d11c <mount@plt+0xafbc>
   1d110:	mov	r0, r9
   1d114:	bl	11f80 <mnl_attr_get_str@plt>
   1d118:	mov	r9, r0
   1d11c:	ldr	r2, [sp, #20]
   1d120:	cmp	r2, #0
   1d124:	moveq	r1, r2
   1d128:	beq	1d154 <mount@plt+0xaff4>
   1d12c:	mov	r0, r2
   1d130:	bl	12058 <mnl_attr_get_u32@plt>
   1d134:	ldr	r3, [r7]
   1d138:	cmp	r3, r0
   1d13c:	mov	r1, r0
   1d140:	bcc	1d200 <mount@plt+0xb0a0>
   1d144:	ldrh	r3, [r7, #6]
   1d148:	tst	r3, #256	; 0x100
   1d14c:	addeq	r2, sl, #4
   1d150:	movne	r2, #0
   1d154:	cmp	r8, #0
   1d158:	beq	1d178 <mount@plt+0xb018>
   1d15c:	mov	r0, r9
   1d160:	blx	r8
   1d164:	b	1d0ec <mount@plt+0xaf8c>
   1d168:	add	r0, r0, #4
   1d16c:	bl	11fb0 <mnl_nlmsg_get_payload_len@plt>
   1d170:	add	r1, r0, #20
   1d174:	b	1d0cc <mount@plt+0xaf6c>
   1d178:	cmp	r9, #0
   1d17c:	beq	1d0e8 <mount@plt+0xaf88>
   1d180:	ldrb	r3, [r9]
   1d184:	cmp	r3, #0
   1d188:	beq	1d0e8 <mount@plt+0xaf88>
   1d18c:	ldr	r3, [pc, #180]	; 1d248 <mount@plt+0xb0e8>
   1d190:	ldr	r2, [sl]
   1d194:	ldr	r5, [r5, r3]
   1d198:	cmp	r2, #0
   1d19c:	movne	r4, #1
   1d1a0:	moveq	r4, #0
   1d1a4:	ldr	r0, [r5]
   1d1a8:	beq	1d22c <mount@plt+0xb0cc>
   1d1ac:	ldr	r3, [pc, #152]	; 1d24c <mount@plt+0xb0ec>
   1d1b0:	add	r3, pc, r3
   1d1b4:	ldr	r2, [pc, #148]	; 1d250 <mount@plt+0xb0f0>
   1d1b8:	mov	r1, #1
   1d1bc:	add	r2, pc, r2
   1d1c0:	str	r9, [sp]
   1d1c4:	bl	11f74 <__fprintf_chk@plt>
   1d1c8:	mov	r0, r9
   1d1cc:	bl	11e9c <strlen@plt>
   1d1d0:	add	r0, r9, r0
   1d1d4:	ldrb	r3, [r0, #-1]
   1d1d8:	cmp	r3, #46	; 0x2e
   1d1dc:	beq	1d1ec <mount@plt+0xb08c>
   1d1e0:	ldr	r1, [r5]
   1d1e4:	mov	r0, #46	; 0x2e
   1d1e8:	bl	1201c <fputc@plt>
   1d1ec:	ldr	r1, [r5]
   1d1f0:	mov	r0, #10
   1d1f4:	bl	1201c <fputc@plt>
   1d1f8:	mov	r0, r4
   1d1fc:	b	1d0ec <mount@plt+0xaf8c>
   1d200:	ldr	r3, [pc, #64]	; 1d248 <mount@plt+0xb0e8>
   1d204:	ldr	r0, [pc, #72]	; 1d254 <mount@plt+0xb0f4>
   1d208:	mov	r2, #38	; 0x26
   1d20c:	ldr	r3, [r5, r3]
   1d210:	mov	r1, #1
   1d214:	add	r0, pc, r0
   1d218:	ldr	r3, [r3]
   1d21c:	bl	11d40 <fwrite@plt>
   1d220:	mov	r1, #0
   1d224:	mov	r2, r1
   1d228:	b	1d154 <mount@plt+0xaff4>
   1d22c:	ldr	r3, [pc, #36]	; 1d258 <mount@plt+0xb0f8>
   1d230:	add	r3, pc, r3
   1d234:	b	1d1b4 <mount@plt+0xb054>
   1d238:	bl	11ca4 <__stack_chk_fail@plt>
   1d23c:	andeq	r5, r1, ip, ror pc
   1d240:	andeq	r0, r0, ip, lsl #4
   1d244:			; <UNDEFINED> instruction: 0xfffffd50
   1d248:	andeq	r0, r0, r8, lsl r2
   1d24c:	andeq	r5, r0, ip, ror r0
   1d250:	andeq	r5, r0, r0, lsr #1
   1d254:	andeq	r5, r0, r0, lsr #32
   1d258:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1d25c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d260:	sub	sp, sp, #100	; 0x64
   1d264:	ldr	fp, [pc, #1012]	; 1d660 <mount@plt+0xb500>
   1d268:	ldr	ip, [pc, #1012]	; 1d664 <mount@plt+0xb504>
   1d26c:	add	fp, pc, fp
   1d270:	str	r2, [sp, #12]
   1d274:	ldr	lr, [fp, ip]
   1d278:	mov	r9, r3
   1d27c:	mov	r3, #0
   1d280:	str	r3, [sp, #58]	; 0x3a
   1d284:	str	r3, [sp, #54]	; 0x36
   1d288:	strh	r3, [sp, #62]	; 0x3e
   1d28c:	str	r3, [sp, #80]	; 0x50
   1d290:	str	r3, [sp, #84]	; 0x54
   1d294:	str	r3, [sp, #88]	; 0x58
   1d298:	add	r3, sp, #52	; 0x34
   1d29c:	subs	ip, r2, #0
   1d2a0:	str	r3, [sp, #64]	; 0x40
   1d2a4:	ldr	r2, [lr]
   1d2a8:	ldrb	r3, [sp, #136]	; 0x88
   1d2ac:	mov	r7, r0
   1d2b0:	str	r2, [sp, #92]	; 0x5c
   1d2b4:	mov	r0, #16
   1d2b8:	mov	r2, #12
   1d2bc:	str	lr, [sp, #28]
   1d2c0:	str	r1, [sp, #72]	; 0x48
   1d2c4:	str	ip, [sp, #76]	; 0x4c
   1d2c8:	strh	r0, [sp, #52]	; 0x34
   1d2cc:	str	r2, [sp, #68]	; 0x44
   1d2d0:	str	r3, [sp, #36]	; 0x24
   1d2d4:	beq	1d55c <mount@plt+0xb3fc>
   1d2d8:	ldr	r3, [r7, #28]
   1d2dc:	add	r8, ip, r3
   1d2e0:	rsb	r2, r3, r3, lsl #29
   1d2e4:	add	r1, r1, r2, lsl #3
   1d2e8:	ldr	r2, [r1, r3, lsl #3]
   1d2ec:	cmp	r9, #0
   1d2f0:	add	r3, r3, #1
   1d2f4:	ldrheq	r0, [r2, #6]
   1d2f8:	str	r3, [r2, #8]
   1d2fc:	orreq	r0, r0, #4
   1d300:	strheq	r0, [r2, #6]
   1d304:	cmp	r3, r8
   1d308:	bne	1d2e8 <mount@plt+0xb188>
   1d30c:	str	r8, [r7, #28]
   1d310:	add	r3, sp, #64	; 0x40
   1d314:	mov	r1, r3
   1d318:	mov	r2, #0
   1d31c:	ldr	r0, [r7]
   1d320:	str	r3, [sp, #24]
   1d324:	bl	11c5c <sendmsg@plt>
   1d328:	cmp	r0, #0
   1d32c:	blt	1d5f4 <mount@plt+0xb494>
   1d330:	add	r3, sp, #44	; 0x2c
   1d334:	str	r3, [sp, #72]	; 0x48
   1d338:	mov	r3, #0
   1d33c:	str	r3, [sp, #8]
   1d340:	add	r3, sp, #40	; 0x28
   1d344:	str	r3, [sp, #20]
   1d348:	ldr	r3, [pc, #792]	; 1d668 <mount@plt+0xb508>
   1d34c:	mov	r2, #1
   1d350:	add	r3, pc, r3
   1d354:	str	r3, [sp, #4]
   1d358:	ldr	r3, [pc, #780]	; 1d66c <mount@plt+0xb50c>
   1d35c:	str	r2, [sp, #76]	; 0x4c
   1d360:	add	r3, pc, r3
   1d364:	str	r3, [sp, #32]
   1d368:	ldr	r2, [sp, #20]
   1d36c:	ldr	r1, [sp, #24]
   1d370:	ldr	r0, [r7]
   1d374:	bl	1cfbc <mount@plt+0xae5c>
   1d378:	ldr	r3, [sp, #8]
   1d37c:	add	r3, r3, #1
   1d380:	str	r3, [sp, #16]
   1d384:	subs	r6, r0, #0
   1d388:	blt	1d4cc <mount@plt+0xb36c>
   1d38c:	ldr	r3, [sp, #68]	; 0x44
   1d390:	cmp	r3, #12
   1d394:	bne	1d64c <mount@plt+0xb4ec>
   1d398:	ldr	r3, [sp, #12]
   1d39c:	ldr	r5, [sp, #40]	; 0x28
   1d3a0:	sub	sl, r8, r3
   1d3a4:	b	1d434 <mount@plt+0xb2d4>
   1d3a8:	ldr	r4, [r5]
   1d3ac:	cmp	r4, r6
   1d3b0:	sub	r3, r4, #16
   1d3b4:	movle	r2, #0
   1d3b8:	movgt	r2, #1
   1d3bc:	orrs	r2, r2, r3, lsr #31
   1d3c0:	bne	1d4ec <mount@plt+0xb38c>
   1d3c4:	ldr	r2, [sp, #56]	; 0x38
   1d3c8:	cmp	r2, #0
   1d3cc:	bne	1d424 <mount@plt+0xb2c4>
   1d3d0:	ldr	r0, [r5, #12]
   1d3d4:	ldr	r1, [r7, #8]
   1d3d8:	cmp	r0, r1
   1d3dc:	bne	1d424 <mount@plt+0xb2c4>
   1d3e0:	ldr	r1, [r5, #8]
   1d3e4:	cmp	r1, r8
   1d3e8:	bhi	1d424 <mount@plt+0xb2c4>
   1d3ec:	cmp	r1, sl
   1d3f0:	bcc	1d424 <mount@plt+0xb2c4>
   1d3f4:	ldrh	r1, [r5, #4]
   1d3f8:	cmp	r1, #2
   1d3fc:	beq	1d464 <mount@plt+0xb304>
   1d400:	cmp	r9, #0
   1d404:	bne	1d54c <mount@plt+0xb3ec>
   1d408:	ldr	r3, [pc, #608]	; 1d670 <mount@plt+0xb510>
   1d40c:	mov	r2, #20
   1d410:	mov	r1, #1
   1d414:	ldr	r3, [fp, r3]
   1d418:	ldr	r0, [sp, #4]
   1d41c:	ldr	r3, [r3]
   1d420:	bl	11d40 <fwrite@plt>
   1d424:	add	r4, r4, #3
   1d428:	bic	r4, r4, #3
   1d42c:	sub	r6, r6, r4
   1d430:	add	r5, r5, r4
   1d434:	cmp	r6, #15
   1d438:	bhi	1d3a8 <mount@plt+0xb248>
   1d43c:	ldr	r0, [sp, #40]	; 0x28
   1d440:	bl	11c14 <free@plt>
   1d444:	ldr	r3, [sp, #88]	; 0x58
   1d448:	tst	r3, #32
   1d44c:	bne	1d52c <mount@plt+0xb3cc>
   1d450:	cmp	r6, #0
   1d454:	bne	1d624 <mount@plt+0xb4c4>
   1d458:	ldr	r3, [sp, #16]
   1d45c:	str	r3, [sp, #8]
   1d460:	b	1d368 <mount@plt+0xb208>
   1d464:	cmp	r3, #19
   1d468:	ldr	r6, [r5, #16]
   1d46c:	bls	1d5c4 <mount@plt+0xb464>
   1d470:	cmp	r6, #0
   1d474:	beq	1d564 <mount@plt+0xb404>
   1d478:	bl	11ec0 <__errno_location@plt>
   1d47c:	rsb	r3, r6, #0
   1d480:	ldr	r2, [sp, #36]	; 0x24
   1d484:	str	r3, [r0]
   1d488:	ldr	r3, [r7, #36]	; 0x24
   1d48c:	cmp	r3, #4
   1d490:	moveq	r2, #0
   1d494:	andne	r2, r2, #1
   1d498:	cmp	r2, #0
   1d49c:	bne	1d57c <mount@plt+0xb41c>
   1d4a0:	ldr	r0, [sp, #40]	; 0x28
   1d4a4:	cmp	r9, #0
   1d4a8:	strne	r0, [r9]
   1d4ac:	beq	1d574 <mount@plt+0xb414>
   1d4b0:	ldr	r3, [sp, #12]
   1d4b4:	ldr	r2, [sp, #16]
   1d4b8:	cmp	r3, r2
   1d4bc:	bhi	1d458 <mount@plt+0xb2f8>
   1d4c0:	cmp	r6, #0
   1d4c4:	ldrne	r3, [sp, #8]
   1d4c8:	mvnne	r6, r3
   1d4cc:	ldr	r3, [sp, #28]
   1d4d0:	ldr	r2, [sp, #92]	; 0x5c
   1d4d4:	mov	r0, r6
   1d4d8:	ldr	r3, [r3]
   1d4dc:	cmp	r2, r3
   1d4e0:	bne	1d65c <mount@plt+0xb4fc>
   1d4e4:	add	sp, sp, #100	; 0x64
   1d4e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d4ec:	ldr	r3, [pc, #380]	; 1d670 <mount@plt+0xb510>
   1d4f0:	ldr	r2, [sp, #88]	; 0x58
   1d4f4:	ldr	r3, [fp, r3]
   1d4f8:	tst	r2, #32
   1d4fc:	ldr	r0, [r3]
   1d500:	beq	1d608 <mount@plt+0xb4a8>
   1d504:	mov	r3, r0
   1d508:	ldr	r0, [pc, #356]	; 1d674 <mount@plt+0xb514>
   1d50c:	mov	r2, #18
   1d510:	mov	r1, #1
   1d514:	add	r0, pc, r0
   1d518:	bl	11d40 <fwrite@plt>
   1d51c:	ldr	r0, [sp, #40]	; 0x28
   1d520:	bl	11c14 <free@plt>
   1d524:	mvn	r6, #0
   1d528:	b	1d4cc <mount@plt+0xb36c>
   1d52c:	ldr	r3, [pc, #316]	; 1d670 <mount@plt+0xb510>
   1d530:	mov	r2, #18
   1d534:	mov	r1, #1
   1d538:	ldr	r3, [fp, r3]
   1d53c:	ldr	r0, [sp, #32]
   1d540:	ldr	r3, [r3]
   1d544:	bl	11d40 <fwrite@plt>
   1d548:	b	1d458 <mount@plt+0xb2f8>
   1d54c:	ldr	r3, [sp, #40]	; 0x28
   1d550:	mov	r6, r2
   1d554:	str	r3, [r9]
   1d558:	b	1d4cc <mount@plt+0xb36c>
   1d55c:	ldr	r8, [sp, #12]
   1d560:	b	1d310 <mount@plt+0xb1b0>
   1d564:	mov	r0, r5
   1d568:	mov	r1, r6
   1d56c:	bl	1d06c <mount@plt+0xaf0c>
   1d570:	b	1d4a0 <mount@plt+0xb340>
   1d574:	bl	11c14 <free@plt>
   1d578:	b	1d4b0 <mount@plt+0xb350>
   1d57c:	mov	r1, #0
   1d580:	mov	r0, r5
   1d584:	bl	1d06c <mount@plt+0xaf0c>
   1d588:	cmp	r0, #0
   1d58c:	bne	1d4a0 <mount@plt+0xb340>
   1d590:	ldr	r3, [pc, #216]	; 1d670 <mount@plt+0xb510>
   1d594:	ldr	r0, [r5, #16]
   1d598:	ldr	r3, [fp, r3]
   1d59c:	rsb	r0, r0, #0
   1d5a0:	ldr	r4, [r3]
   1d5a4:	bl	11e0c <strerror@plt>
   1d5a8:	ldr	r2, [pc, #200]	; 1d678 <mount@plt+0xb518>
   1d5ac:	mov	r1, #1
   1d5b0:	add	r2, pc, r2
   1d5b4:	mov	r3, r0
   1d5b8:	mov	r0, r4
   1d5bc:	bl	11f74 <__fprintf_chk@plt>
   1d5c0:	b	1d4a0 <mount@plt+0xb340>
   1d5c4:	ldr	r3, [pc, #164]	; 1d670 <mount@plt+0xb510>
   1d5c8:	ldr	r0, [pc, #172]	; 1d67c <mount@plt+0xb51c>
   1d5cc:	mov	r2, #16
   1d5d0:	ldr	r3, [fp, r3]
   1d5d4:	mov	r1, #1
   1d5d8:	add	r0, pc, r0
   1d5dc:	ldr	r3, [r3]
   1d5e0:	bl	11d40 <fwrite@plt>
   1d5e4:	ldr	r0, [sp, #40]	; 0x28
   1d5e8:	mvn	r6, #0
   1d5ec:	bl	11c14 <free@plt>
   1d5f0:	b	1d4cc <mount@plt+0xb36c>
   1d5f4:	ldr	r0, [pc, #132]	; 1d680 <mount@plt+0xb520>
   1d5f8:	mvn	r6, #0
   1d5fc:	add	r0, pc, r0
   1d600:	bl	11d10 <perror@plt>
   1d604:	b	1d4cc <mount@plt+0xb36c>
   1d608:	ldr	r2, [pc, #116]	; 1d684 <mount@plt+0xb524>
   1d60c:	mov	r3, r4
   1d610:	add	r2, pc, r2
   1d614:	mov	r1, #1
   1d618:	bl	11f74 <__fprintf_chk@plt>
   1d61c:	mov	r0, #1
   1d620:	bl	11e84 <exit@plt>
   1d624:	ldr	r2, [pc, #92]	; 1d688 <mount@plt+0xb528>
   1d628:	ldr	r1, [pc, #64]	; 1d670 <mount@plt+0xb510>
   1d62c:	mov	r3, r6
   1d630:	add	r2, pc, r2
   1d634:	ldr	r0, [fp, r1]
   1d638:	mov	r1, #1
   1d63c:	ldr	r0, [r0]
   1d640:	bl	11f74 <__fprintf_chk@plt>
   1d644:	mov	r0, #1
   1d648:	bl	11e84 <exit@plt>
   1d64c:	ldr	r2, [pc, #56]	; 1d68c <mount@plt+0xb52c>
   1d650:	ldr	r1, [pc, #24]	; 1d670 <mount@plt+0xb510>
   1d654:	add	r2, pc, r2
   1d658:	b	1d634 <mount@plt+0xb4d4>
   1d65c:	bl	11ca4 <__stack_chk_fail@plt>
   1d660:	andeq	r5, r1, ip, lsl #27
   1d664:	andeq	r0, r0, ip, lsl #4
   1d668:			; <UNDEFINED> instruction: 0x00004fb0
   1d66c:			; <UNDEFINED> instruction: 0x00004fb8
   1d670:	andeq	r0, r0, r8, lsl r2
   1d674:	andeq	r4, r0, ip, lsl #27
   1d678:	andeq	r4, r0, r8, lsr sp
   1d67c:	strdeq	r4, [r0], -ip
   1d680:	andeq	r4, r0, r8, ror #24
   1d684:	andeq	r4, r0, r4, lsr #25
   1d688:	strdeq	r4, [r0], -ip
   1d68c:	andeq	r4, r0, ip, lsr #24
   1d690:	ldr	r3, [r0]
   1d694:	cmp	r3, #0
   1d698:	bxlt	lr
   1d69c:	push	{r4, lr}
   1d6a0:	mov	r4, r0
   1d6a4:	mov	r0, r3
   1d6a8:	bl	12118 <close@plt>
   1d6ac:	mvn	r3, #0
   1d6b0:	str	r3, [r4]
   1d6b4:	pop	{r4, pc}
   1d6b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d6bc:	mov	r9, r1
   1d6c0:	ldr	r7, [pc, #504]	; 1d8c0 <mount@plt+0xb760>
   1d6c4:	ldr	r3, [pc, #504]	; 1d8c4 <mount@plt+0xb764>
   1d6c8:	add	r7, pc, r7
   1d6cc:	sub	sp, sp, #24
   1d6d0:	ldr	sl, [r7, r3]
   1d6d4:	mov	r4, r0
   1d6d8:	mov	r5, r2
   1d6dc:	ldr	r1, [sl]
   1d6e0:	mov	r3, #32768	; 0x8000
   1d6e4:	mov	r2, #48	; 0x30
   1d6e8:	str	r1, [sp, #20]
   1d6ec:	mov	r8, #1
   1d6f0:	mov	r1, #0
   1d6f4:	str	r3, [sp, #12]
   1d6f8:	str	r8, [sp, #16]
   1d6fc:	bl	11efc <memset@plt>
   1d700:	str	r5, [r4, #36]	; 0x24
   1d704:	mov	r2, r5
   1d708:	ldr	r1, [pc, #440]	; 1d8c8 <mount@plt+0xb768>
   1d70c:	mov	r0, #16
   1d710:	bl	120a0 <socket@plt>
   1d714:	cmp	r0, #0
   1d718:	str	r0, [r4]
   1d71c:	blt	1d858 <mount@plt+0xb6f8>
   1d720:	mov	r5, #4
   1d724:	str	r5, [sp]
   1d728:	add	r3, sp, #12
   1d72c:	mov	r2, #7
   1d730:	mov	r1, r8
   1d734:	bl	11bc0 <setsockopt@plt>
   1d738:	cmp	r0, #0
   1d73c:	blt	1d880 <mount@plt+0xb720>
   1d740:	ldr	r3, [pc, #388]	; 1d8cc <mount@plt+0xb76c>
   1d744:	ldr	r0, [r4]
   1d748:	mov	r2, #8
   1d74c:	ldr	r3, [r7, r3]
   1d750:	mov	r1, r8
   1d754:	str	r5, [sp]
   1d758:	bl	11bc0 <setsockopt@plt>
   1d75c:	cmp	r0, #0
   1d760:	blt	1d86c <mount@plt+0xb70c>
   1d764:	mov	r6, r4
   1d768:	str	r5, [sp]
   1d76c:	add	r3, sp, #16
   1d770:	ldr	r0, [r6], #4
   1d774:	mov	r2, #11
   1d778:	ldr	r1, [pc, #336]	; 1d8d0 <mount@plt+0xb770>
   1d77c:	bl	11bc0 <setsockopt@plt>
   1d780:	mov	r5, #0
   1d784:	mov	ip, #16
   1d788:	str	r5, [r4, #6]
   1d78c:	mov	r1, r6
   1d790:	strh	r5, [r4, #10]
   1d794:	mov	r2, #12
   1d798:	str	r9, [r4, #12]
   1d79c:	ldr	r0, [r4]
   1d7a0:	strh	ip, [r4, #4]
   1d7a4:	bl	11ef0 <bind@plt>
   1d7a8:	cmp	r0, r5
   1d7ac:	blt	1d894 <mount@plt+0xb734>
   1d7b0:	mov	r3, #12
   1d7b4:	mov	r1, r6
   1d7b8:	add	r2, sp, #8
   1d7bc:	ldr	r0, [r4]
   1d7c0:	str	r3, [sp, #8]
   1d7c4:	bl	12070 <getsockname@plt>
   1d7c8:	cmp	r0, #0
   1d7cc:	blt	1d8a8 <mount@plt+0xb748>
   1d7d0:	ldr	r3, [sp, #8]
   1d7d4:	cmp	r3, #12
   1d7d8:	bne	1d834 <mount@plt+0xb6d4>
   1d7dc:	ldrh	r3, [r4, #4]
   1d7e0:	cmp	r3, #16
   1d7e4:	bne	1d810 <mount@plt+0xb6b0>
   1d7e8:	mov	r0, r5
   1d7ec:	bl	11c50 <time@plt>
   1d7f0:	str	r0, [r4, #28]
   1d7f4:	ldr	r2, [sp, #20]
   1d7f8:	ldr	r3, [sl]
   1d7fc:	mov	r0, r5
   1d800:	cmp	r2, r3
   1d804:	bne	1d8bc <mount@plt+0xb75c>
   1d808:	add	sp, sp, #24
   1d80c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d810:	ldr	r2, [pc, #188]	; 1d8d4 <mount@plt+0xb774>
   1d814:	mov	r1, r8
   1d818:	mvn	r5, #0
   1d81c:	ldr	r0, [r7, r2]
   1d820:	ldr	r2, [pc, #176]	; 1d8d8 <mount@plt+0xb778>
   1d824:	ldr	r0, [r0]
   1d828:	add	r2, pc, r2
   1d82c:	bl	11f74 <__fprintf_chk@plt>
   1d830:	b	1d7f4 <mount@plt+0xb694>
   1d834:	ldr	r2, [pc, #152]	; 1d8d4 <mount@plt+0xb774>
   1d838:	mov	r1, r8
   1d83c:	mvn	r5, #0
   1d840:	ldr	r0, [r7, r2]
   1d844:	ldr	r2, [pc, #144]	; 1d8dc <mount@plt+0xb77c>
   1d848:	ldr	r0, [r0]
   1d84c:	add	r2, pc, r2
   1d850:	bl	11f74 <__fprintf_chk@plt>
   1d854:	b	1d7f4 <mount@plt+0xb694>
   1d858:	ldr	r0, [pc, #128]	; 1d8e0 <mount@plt+0xb780>
   1d85c:	mvn	r5, #0
   1d860:	add	r0, pc, r0
   1d864:	bl	11d10 <perror@plt>
   1d868:	b	1d7f4 <mount@plt+0xb694>
   1d86c:	ldr	r0, [pc, #112]	; 1d8e4 <mount@plt+0xb784>
   1d870:	mvn	r5, #0
   1d874:	add	r0, pc, r0
   1d878:	bl	11d10 <perror@plt>
   1d87c:	b	1d7f4 <mount@plt+0xb694>
   1d880:	ldr	r0, [pc, #96]	; 1d8e8 <mount@plt+0xb788>
   1d884:	mvn	r5, #0
   1d888:	add	r0, pc, r0
   1d88c:	bl	11d10 <perror@plt>
   1d890:	b	1d7f4 <mount@plt+0xb694>
   1d894:	ldr	r0, [pc, #80]	; 1d8ec <mount@plt+0xb78c>
   1d898:	mvn	r5, #0
   1d89c:	add	r0, pc, r0
   1d8a0:	bl	11d10 <perror@plt>
   1d8a4:	b	1d7f4 <mount@plt+0xb694>
   1d8a8:	ldr	r0, [pc, #64]	; 1d8f0 <mount@plt+0xb790>
   1d8ac:	mvn	r5, #0
   1d8b0:	add	r0, pc, r0
   1d8b4:	bl	11d10 <perror@plt>
   1d8b8:	b	1d7f4 <mount@plt+0xb694>
   1d8bc:	bl	11ca4 <__stack_chk_fail@plt>
   1d8c0:	andeq	r5, r1, r0, lsr r9
   1d8c4:	andeq	r0, r0, ip, lsl #4
   1d8c8:	andeq	r0, r8, r3
   1d8cc:	andeq	r0, r0, ip, lsl r2
   1d8d0:	andeq	r0, r0, lr, lsl #2
   1d8d4:	andeq	r0, r0, r8, lsl r2
   1d8d8:	muleq	r0, ip, fp
   1d8dc:	andeq	r4, r0, ip, asr fp
   1d8e0:	andeq	r4, r0, r4, ror #21
   1d8e4:	strdeq	r4, [r0], -r8
   1d8e8:	ldrdeq	r4, [r0], -r8
   1d8ec:	ldrdeq	r4, [r0], -ip
   1d8f0:	andeq	r4, r0, r4, ror #21
   1d8f4:	mov	r2, #0
   1d8f8:	b	1d6b8 <mount@plt+0xb558>
   1d8fc:	ldr	r3, [pc, #124]	; 1d980 <mount@plt+0xb820>
   1d900:	ldr	r2, [pc, #124]	; 1d984 <mount@plt+0xb824>
   1d904:	add	r3, pc, r3
   1d908:	push	{r4, lr}
   1d90c:	sub	sp, sp, #32
   1d910:	ldr	r4, [r3, r2]
   1d914:	ldr	r2, [r0, #28]
   1d918:	mov	r3, #0
   1d91c:	ldr	lr, [r4]
   1d920:	add	r2, r2, #1
   1d924:	str	r3, [sp, #20]
   1d928:	str	lr, [sp, #28]
   1d92c:	strb	r1, [sp, #20]
   1d930:	ldr	lr, [pc, #80]	; 1d988 <mount@plt+0xb828>
   1d934:	mov	r1, #24
   1d938:	str	r2, [r0, #28]
   1d93c:	str	r2, [r0, #32]
   1d940:	str	r2, [sp, #12]
   1d944:	str	r1, [sp, #4]
   1d948:	mov	r2, r1
   1d94c:	ldr	r0, [r0]
   1d950:	add	r1, sp, #4
   1d954:	str	r3, [sp, #16]
   1d958:	str	r3, [sp, #24]
   1d95c:	str	lr, [sp, #8]
   1d960:	bl	12124 <send@plt>
   1d964:	ldr	r2, [sp, #28]
   1d968:	ldr	r3, [r4]
   1d96c:	cmp	r2, r3
   1d970:	bne	1d97c <mount@plt+0xb81c>
   1d974:	add	sp, sp, #32
   1d978:	pop	{r4, pc}
   1d97c:	bl	11ca4 <__stack_chk_fail@plt>
   1d980:	strdeq	r5, [r1], -r4
   1d984:	andeq	r0, r0, ip, lsl #4
   1d988:	movweq	r0, #4118	; 0x1016
   1d98c:	ldr	r3, [pc, #128]	; 1da14 <mount@plt+0xb8b4>
   1d990:	ldr	r2, [pc, #128]	; 1da18 <mount@plt+0xb8b8>
   1d994:	add	r3, pc, r3
   1d998:	push	{r4, lr}
   1d99c:	sub	sp, sp, #32
   1d9a0:	ldr	r4, [r3, r2]
   1d9a4:	ldr	ip, [r0, #28]
   1d9a8:	mov	r3, #0
   1d9ac:	add	ip, ip, #1
   1d9b0:	str	ip, [r0, #28]
   1d9b4:	str	ip, [r0, #32]
   1d9b8:	str	r3, [sp, #16]
   1d9bc:	ldr	lr, [r4]
   1d9c0:	strb	r1, [sp, #16]
   1d9c4:	str	ip, [sp, #8]
   1d9c8:	mov	r1, #28
   1d9cc:	ldr	ip, [pc, #72]	; 1da1c <mount@plt+0xb8bc>
   1d9d0:	mov	r2, r1
   1d9d4:	str	r1, [sp]
   1d9d8:	ldr	r0, [r0]
   1d9dc:	mov	r1, sp
   1d9e0:	str	r3, [sp, #12]
   1d9e4:	str	r3, [sp, #20]
   1d9e8:	str	r3, [sp, #24]
   1d9ec:	str	lr, [sp, #28]
   1d9f0:	str	ip, [sp, #4]
   1d9f4:	bl	12124 <send@plt>
   1d9f8:	ldr	r2, [sp, #28]
   1d9fc:	ldr	r3, [r4]
   1da00:	cmp	r2, r3
   1da04:	bne	1da10 <mount@plt+0xb8b0>
   1da08:	add	sp, sp, #32
   1da0c:	pop	{r4, pc}
   1da10:	bl	11ca4 <__stack_chk_fail@plt>
   1da14:	andeq	r5, r1, r4, ror #12
   1da18:	andeq	r0, r0, ip, lsl #4
   1da1c:	movweq	r0, #4170	; 0x104a
   1da20:	ldr	r3, [pc, #128]	; 1daa8 <mount@plt+0xb948>
   1da24:	ldr	r2, [pc, #128]	; 1daac <mount@plt+0xb94c>
   1da28:	add	r3, pc, r3
   1da2c:	push	{r4, lr}
   1da30:	sub	sp, sp, #32
   1da34:	ldr	r4, [r3, r2]
   1da38:	ldr	ip, [r0, #28]
   1da3c:	mov	r3, #0
   1da40:	add	ip, ip, #1
   1da44:	str	ip, [r0, #28]
   1da48:	str	ip, [r0, #32]
   1da4c:	str	r3, [sp, #16]
   1da50:	ldr	lr, [r4]
   1da54:	strb	r1, [sp, #16]
   1da58:	str	ip, [sp, #8]
   1da5c:	mov	r1, #28
   1da60:	ldr	ip, [pc, #72]	; 1dab0 <mount@plt+0xb950>
   1da64:	mov	r2, r1
   1da68:	str	r1, [sp]
   1da6c:	ldr	r0, [r0]
   1da70:	mov	r1, sp
   1da74:	str	r3, [sp, #12]
   1da78:	str	r3, [sp, #20]
   1da7c:	str	r3, [sp, #24]
   1da80:	str	lr, [sp, #28]
   1da84:	str	ip, [sp, #4]
   1da88:	bl	12124 <send@plt>
   1da8c:	ldr	r2, [sp, #28]
   1da90:	ldr	r3, [r4]
   1da94:	cmp	r2, r3
   1da98:	bne	1daa4 <mount@plt+0xb944>
   1da9c:	add	sp, sp, #32
   1daa0:	pop	{r4, pc}
   1daa4:	bl	11ca4 <__stack_chk_fail@plt>
   1daa8:	ldrdeq	r5, [r1], -r0
   1daac:	andeq	r0, r0, ip, lsl #4
   1dab0:	movweq	r0, #4122	; 0x101a
   1dab4:	ldr	r3, [pc, #128]	; 1db3c <mount@plt+0xb9dc>
   1dab8:	ldr	r2, [pc, #128]	; 1db40 <mount@plt+0xb9e0>
   1dabc:	add	r3, pc, r3
   1dac0:	push	{r4, lr}
   1dac4:	sub	sp, sp, #32
   1dac8:	ldr	r4, [r3, r2]
   1dacc:	ldr	ip, [r0, #28]
   1dad0:	mov	r3, #0
   1dad4:	add	ip, ip, #1
   1dad8:	str	ip, [r0, #28]
   1dadc:	str	ip, [r0, #32]
   1dae0:	str	r3, [sp, #16]
   1dae4:	ldr	lr, [r4]
   1dae8:	strb	r1, [sp, #16]
   1daec:	str	ip, [sp, #8]
   1daf0:	mov	r1, #28
   1daf4:	ldr	ip, [pc, #72]	; 1db44 <mount@plt+0xb9e4>
   1daf8:	mov	r2, r1
   1dafc:	str	r1, [sp]
   1db00:	ldr	r0, [r0]
   1db04:	mov	r1, sp
   1db08:	str	r3, [sp, #12]
   1db0c:	str	r3, [sp, #20]
   1db10:	str	r3, [sp, #24]
   1db14:	str	lr, [sp, #28]
   1db18:	str	ip, [sp, #4]
   1db1c:	bl	12124 <send@plt>
   1db20:	ldr	r2, [sp, #28]
   1db24:	ldr	r3, [r4]
   1db28:	cmp	r2, r3
   1db2c:	bne	1db38 <mount@plt+0xb9d8>
   1db30:	add	sp, sp, #32
   1db34:	pop	{r4, pc}
   1db38:	bl	11ca4 <__stack_chk_fail@plt>
   1db3c:	andeq	r5, r1, ip, lsr r5
   1db40:	andeq	r0, r0, ip, lsl #4
   1db44:	movweq	r0, #4130	; 0x1022
   1db48:	ldr	r3, [pc, #128]	; 1dbd0 <mount@plt+0xba70>
   1db4c:	ldr	r2, [pc, #128]	; 1dbd4 <mount@plt+0xba74>
   1db50:	add	r3, pc, r3
   1db54:	push	{r4, lr}
   1db58:	sub	sp, sp, #32
   1db5c:	ldr	r4, [r3, r2]
   1db60:	ldr	ip, [r0, #28]
   1db64:	mov	r3, #0
   1db68:	add	ip, ip, #1
   1db6c:	str	ip, [r0, #28]
   1db70:	str	ip, [r0, #32]
   1db74:	str	r3, [sp, #16]
   1db78:	ldr	lr, [r4]
   1db7c:	strb	r1, [sp, #16]
   1db80:	str	ip, [sp, #8]
   1db84:	mov	r1, #28
   1db88:	ldr	ip, [pc, #72]	; 1dbd8 <mount@plt+0xba78>
   1db8c:	mov	r2, r1
   1db90:	str	r1, [sp]
   1db94:	ldr	r0, [r0]
   1db98:	mov	r1, sp
   1db9c:	str	r3, [sp, #12]
   1dba0:	str	r3, [sp, #20]
   1dba4:	str	r3, [sp, #24]
   1dba8:	str	lr, [sp, #28]
   1dbac:	str	ip, [sp, #4]
   1dbb0:	bl	12124 <send@plt>
   1dbb4:	ldr	r2, [sp, #28]
   1dbb8:	ldr	r3, [r4]
   1dbbc:	cmp	r2, r3
   1dbc0:	bne	1dbcc <mount@plt+0xba6c>
   1dbc4:	add	sp, sp, #32
   1dbc8:	pop	{r4, pc}
   1dbcc:	bl	11ca4 <__stack_chk_fail@plt>
   1dbd0:	andeq	r5, r1, r8, lsr #9
   1dbd4:	andeq	r0, r0, ip, lsl #4
   1dbd8:	movweq	r0, #4126	; 0x101e
   1dbdc:	ldr	r2, [pc, #124]	; 1dc60 <mount@plt+0xbb00>
   1dbe0:	ldr	r3, [pc, #124]	; 1dc64 <mount@plt+0xbb04>
   1dbe4:	add	r2, pc, r2
   1dbe8:	push	{r4, lr}
   1dbec:	sub	sp, sp, #24
   1dbf0:	ldr	r4, [r2, r3]
   1dbf4:	ldr	r3, [r0, #28]
   1dbf8:	mov	r2, #0
   1dbfc:	add	r3, r3, #1
   1dc00:	str	r2, [sp, #16]
   1dc04:	ldr	lr, [r4]
   1dc08:	strb	r1, [sp, #16]
   1dc0c:	ldr	ip, [pc, #84]	; 1dc68 <mount@plt+0xbb08>
   1dc10:	mov	r1, #20
   1dc14:	str	r3, [r0, #28]
   1dc18:	str	r3, [r0, #32]
   1dc1c:	str	r3, [sp, #8]
   1dc20:	str	r2, [sp, #12]
   1dc24:	mov	r3, r2
   1dc28:	str	r1, [sp]
   1dc2c:	mov	r2, r1
   1dc30:	ldr	r0, [r0]
   1dc34:	mov	r1, sp
   1dc38:	str	lr, [sp, #20]
   1dc3c:	str	ip, [sp, #4]
   1dc40:	bl	12124 <send@plt>
   1dc44:	ldr	r2, [sp, #20]
   1dc48:	ldr	r3, [r4]
   1dc4c:	cmp	r2, r3
   1dc50:	bne	1dc5c <mount@plt+0xbafc>
   1dc54:	add	sp, sp, #24
   1dc58:	pop	{r4, pc}
   1dc5c:	bl	11ca4 <__stack_chk_fail@plt>
   1dc60:	andeq	r5, r1, r4, lsl r4
   1dc64:	andeq	r0, r0, ip, lsl #4
   1dc68:	movweq	r0, #4162	; 0x1042
   1dc6c:	ldr	r3, [pc, #124]	; 1dcf0 <mount@plt+0xbb90>
   1dc70:	ldr	r2, [pc, #124]	; 1dcf4 <mount@plt+0xbb94>
   1dc74:	add	r3, pc, r3
   1dc78:	push	{r4, lr}
   1dc7c:	sub	sp, sp, #32
   1dc80:	ldr	r4, [r3, r2]
   1dc84:	ldr	r2, [r0, #28]
   1dc88:	mov	r3, #0
   1dc8c:	ldr	lr, [r4]
   1dc90:	add	r2, r2, #1
   1dc94:	str	r3, [sp, #20]
   1dc98:	str	lr, [sp, #28]
   1dc9c:	strb	r1, [sp, #20]
   1dca0:	ldr	lr, [pc, #80]	; 1dcf8 <mount@plt+0xbb98>
   1dca4:	mov	r1, #24
   1dca8:	str	r2, [r0, #28]
   1dcac:	str	r2, [r0, #32]
   1dcb0:	str	r2, [sp, #12]
   1dcb4:	str	r1, [sp, #4]
   1dcb8:	mov	r2, r1
   1dcbc:	ldr	r0, [r0]
   1dcc0:	add	r1, sp, #4
   1dcc4:	str	r3, [sp, #16]
   1dcc8:	str	r3, [sp, #24]
   1dccc:	str	lr, [sp, #8]
   1dcd0:	bl	12124 <send@plt>
   1dcd4:	ldr	r2, [sp, #28]
   1dcd8:	ldr	r3, [r4]
   1dcdc:	cmp	r2, r3
   1dce0:	bne	1dcec <mount@plt+0xbb8c>
   1dce4:	add	sp, sp, #32
   1dce8:	pop	{r4, pc}
   1dcec:	bl	11ca4 <__stack_chk_fail@plt>
   1dcf0:	andeq	r5, r1, r4, lsl #7
   1dcf4:	andeq	r0, r0, ip, lsl #4
   1dcf8:	movweq	r0, #4182	; 0x1056
   1dcfc:	ldr	r2, [pc, #124]	; 1dd80 <mount@plt+0xbc20>
   1dd00:	ldr	r3, [pc, #124]	; 1dd84 <mount@plt+0xbc24>
   1dd04:	add	r2, pc, r2
   1dd08:	push	{r4, lr}
   1dd0c:	sub	sp, sp, #24
   1dd10:	ldr	r4, [r2, r3]
   1dd14:	ldr	r3, [r0, #28]
   1dd18:	mov	r2, #0
   1dd1c:	add	r3, r3, #1
   1dd20:	str	r2, [sp, #16]
   1dd24:	ldr	lr, [r4]
   1dd28:	strb	r1, [sp, #16]
   1dd2c:	ldr	ip, [pc, #84]	; 1dd88 <mount@plt+0xbc28>
   1dd30:	mov	r1, #20
   1dd34:	str	r3, [r0, #28]
   1dd38:	str	r3, [r0, #32]
   1dd3c:	str	r3, [sp, #8]
   1dd40:	str	r2, [sp, #12]
   1dd44:	mov	r3, r2
   1dd48:	str	r1, [sp]
   1dd4c:	mov	r2, r1
   1dd50:	ldr	r0, [r0]
   1dd54:	mov	r1, sp
   1dd58:	str	lr, [sp, #20]
   1dd5c:	str	ip, [sp, #4]
   1dd60:	bl	12124 <send@plt>
   1dd64:	ldr	r2, [sp, #20]
   1dd68:	ldr	r3, [r4]
   1dd6c:	cmp	r2, r3
   1dd70:	bne	1dd7c <mount@plt+0xbc1c>
   1dd74:	add	sp, sp, #24
   1dd78:	pop	{r4, pc}
   1dd7c:	bl	11ca4 <__stack_chk_fail@plt>
   1dd80:	strdeq	r5, [r1], -r4
   1dd84:	andeq	r0, r0, ip, lsl #4
   1dd88:	movweq	r0, #4178	; 0x1052
   1dd8c:	ldr	r2, [pc, #124]	; 1de10 <mount@plt+0xbcb0>
   1dd90:	ldr	r3, [pc, #124]	; 1de14 <mount@plt+0xbcb4>
   1dd94:	add	r2, pc, r2
   1dd98:	push	{r4, lr}
   1dd9c:	sub	sp, sp, #24
   1dda0:	ldr	r4, [r2, r3]
   1dda4:	ldr	r3, [r0, #28]
   1dda8:	mov	r2, #0
   1ddac:	add	r3, r3, #1
   1ddb0:	str	r2, [sp, #16]
   1ddb4:	ldr	lr, [r4]
   1ddb8:	strb	r1, [sp, #16]
   1ddbc:	ldr	ip, [pc, #84]	; 1de18 <mount@plt+0xbcb8>
   1ddc0:	mov	r1, #20
   1ddc4:	str	r3, [r0, #28]
   1ddc8:	str	r3, [r0, #32]
   1ddcc:	str	r3, [sp, #8]
   1ddd0:	str	r2, [sp, #12]
   1ddd4:	mov	r3, r2
   1ddd8:	str	r1, [sp]
   1dddc:	mov	r2, r1
   1dde0:	ldr	r0, [r0]
   1dde4:	mov	r1, sp
   1dde8:	str	lr, [sp, #20]
   1ddec:	str	ip, [sp, #4]
   1ddf0:	bl	12124 <send@plt>
   1ddf4:	ldr	r2, [sp, #20]
   1ddf8:	ldr	r3, [r4]
   1ddfc:	cmp	r2, r3
   1de00:	bne	1de0c <mount@plt+0xbcac>
   1de04:	add	sp, sp, #24
   1de08:	pop	{r4, pc}
   1de0c:	bl	11ca4 <__stack_chk_fail@plt>
   1de10:	andeq	r5, r1, r4, ror #4
   1de14:	andeq	r0, r0, ip, lsl #4
   1de18:	movweq	r0, #4186	; 0x105a
   1de1c:	ldr	r3, [pc, #140]	; 1deb0 <mount@plt+0xbd50>
   1de20:	ldr	ip, [pc, #140]	; 1deb4 <mount@plt+0xbd54>
   1de24:	add	r3, pc, r3
   1de28:	push	{r4, lr}
   1de2c:	sub	sp, sp, #48	; 0x30
   1de30:	ldr	r4, [r3, ip]
   1de34:	ldr	lr, [r0, #28]
   1de38:	str	r2, [sp, #40]	; 0x28
   1de3c:	ldr	r3, [r4]
   1de40:	add	lr, lr, #1
   1de44:	str	r3, [sp, #44]	; 0x2c
   1de48:	mov	r3, #0
   1de4c:	str	r3, [sp, #20]
   1de50:	strb	r1, [sp, #20]
   1de54:	ldr	r1, [pc, #92]	; 1deb8 <mount@plt+0xbd58>
   1de58:	str	lr, [r0, #28]
   1de5c:	str	lr, [r0, #32]
   1de60:	str	lr, [sp, #12]
   1de64:	ldr	lr, [pc, #80]	; 1debc <mount@plt+0xbd5c>
   1de68:	mov	r2, #40	; 0x28
   1de6c:	str	r1, [sp, #8]
   1de70:	ldr	r0, [r0]
   1de74:	add	r1, sp, #4
   1de78:	str	r3, [sp, #16]
   1de7c:	str	r3, [sp, #24]
   1de80:	str	r3, [sp, #28]
   1de84:	str	r3, [sp, #32]
   1de88:	str	r2, [sp, #4]
   1de8c:	str	lr, [sp, #36]	; 0x24
   1de90:	bl	12124 <send@plt>
   1de94:	ldr	r2, [sp, #44]	; 0x2c
   1de98:	ldr	r3, [r4]
   1de9c:	cmp	r2, r3
   1dea0:	bne	1deac <mount@plt+0xbd4c>
   1dea4:	add	sp, sp, #48	; 0x30
   1dea8:	pop	{r4, pc}
   1deac:	bl	11ca4 <__stack_chk_fail@plt>
   1deb0:	ldrdeq	r5, [r1], -r4
   1deb4:	andeq	r0, r0, ip, lsl #4
   1deb8:	movweq	r0, #4114	; 0x1012
   1debc:	andseq	r0, sp, r8
   1dec0:	mov	r2, #1
   1dec4:	b	1de1c <mount@plt+0xbcbc>
   1dec8:	ldr	r3, [pc, #188]	; 1df8c <mount@plt+0xbe2c>
   1decc:	ldr	ip, [pc, #188]	; 1df90 <mount@plt+0xbe30>
   1ded0:	add	r3, pc, r3
   1ded4:	push	{r4, r5, r6, r7, r8, lr}
   1ded8:	sub	sp, sp, #1056	; 0x420
   1dedc:	ldr	r6, [r3, ip]
   1dee0:	sub	sp, sp, #8
   1dee4:	mov	r4, r0
   1dee8:	ldr	ip, [r6]
   1deec:	add	r5, sp, #4
   1def0:	mov	r8, r1
   1def4:	mov	r7, r2
   1def8:	mov	r1, #0
   1defc:	mov	r2, #1056	; 0x420
   1df00:	mov	r0, r5
   1df04:	str	ip, [sp, #1060]	; 0x424
   1df08:	bl	11efc <memset@plt>
   1df0c:	ldr	r3, [r4, #28]
   1df10:	ldr	r1, [pc, #124]	; 1df94 <mount@plt+0xbe34>
   1df14:	add	r3, r3, #1
   1df18:	mov	r2, #32
   1df1c:	cmp	r7, #0
   1df20:	strb	r8, [sp, #20]
   1df24:	str	r3, [r4, #28]
   1df28:	str	r3, [r4, #32]
   1df2c:	str	r3, [sp, #12]
   1df30:	str	r1, [sp, #8]
   1df34:	str	r2, [sp, #4]
   1df38:	beq	1df80 <mount@plt+0xbe20>
   1df3c:	mov	r1, #1056	; 0x420
   1df40:	mov	r0, r5
   1df44:	blx	r7
   1df48:	cmp	r0, #0
   1df4c:	bne	1df64 <mount@plt+0xbe04>
   1df50:	mov	r3, r0
   1df54:	mov	r1, r5
   1df58:	ldr	r0, [r4]
   1df5c:	ldr	r2, [sp, #4]
   1df60:	bl	12124 <send@plt>
   1df64:	ldr	r2, [sp, #1060]	; 0x424
   1df68:	ldr	r3, [r6]
   1df6c:	cmp	r2, r3
   1df70:	bne	1df88 <mount@plt+0xbe28>
   1df74:	add	sp, sp, #1056	; 0x420
   1df78:	add	sp, sp, #8
   1df7c:	pop	{r4, r5, r6, r7, r8, pc}
   1df80:	mvn	r0, #21
   1df84:	b	1df64 <mount@plt+0xbe04>
   1df88:	bl	11ca4 <__stack_chk_fail@plt>
   1df8c:	andeq	r5, r1, r8, lsr #2
   1df90:	andeq	r0, r0, ip, lsl #4
   1df94:	movweq	r0, #4114	; 0x1012
   1df98:	ldr	r3, [pc, #128]	; 1e020 <mount@plt+0xbec0>
   1df9c:	ldr	ip, [pc, #128]	; 1e024 <mount@plt+0xbec4>
   1dfa0:	add	r3, pc, r3
   1dfa4:	push	{r4, lr}
   1dfa8:	sub	sp, sp, #32
   1dfac:	ldr	r4, [r3, ip]
   1dfb0:	ldr	r3, [r0, #28]
   1dfb4:	str	r2, [sp, #24]
   1dfb8:	add	r2, r3, #1
   1dfbc:	mov	r3, #0
   1dfc0:	str	r3, [sp, #16]
   1dfc4:	ldr	ip, [r4]
   1dfc8:	strb	r1, [sp, #16]
   1dfcc:	ldr	lr, [pc, #84]	; 1e028 <mount@plt+0xbec8>
   1dfd0:	mov	r1, #28
   1dfd4:	str	r2, [r0, #28]
   1dfd8:	str	r2, [r0, #32]
   1dfdc:	str	r2, [sp, #8]
   1dfe0:	str	r1, [sp]
   1dfe4:	mov	r2, r1
   1dfe8:	ldr	r0, [r0]
   1dfec:	mov	r1, sp
   1dff0:	str	r3, [sp, #12]
   1dff4:	str	r3, [sp, #20]
   1dff8:	str	ip, [sp, #28]
   1dffc:	str	lr, [sp, #4]
   1e000:	bl	12124 <send@plt>
   1e004:	ldr	r2, [sp, #28]
   1e008:	ldr	r3, [r4]
   1e00c:	cmp	r2, r3
   1e010:	bne	1e01c <mount@plt+0xbebc>
   1e014:	add	sp, sp, #32
   1e018:	pop	{r4, pc}
   1e01c:	bl	11ca4 <__stack_chk_fail@plt>
   1e020:	andeq	r5, r1, r8, asr r0
   1e024:	andeq	r0, r0, ip, lsl #4
   1e028:	movweq	r0, #4190	; 0x105e
   1e02c:	ldr	r0, [r0]
   1e030:	mov	r3, #0
   1e034:	b	12124 <send@plt>
   1e038:	push	{r4, r5, r6, r7, lr}
   1e03c:	sub	sp, sp, #1024	; 0x400
   1e040:	ldr	r5, [pc, #288]	; 1e168 <mount@plt+0xc008>
   1e044:	ldr	ip, [pc, #288]	; 1e16c <mount@plt+0xc00c>
   1e048:	add	r5, pc, r5
   1e04c:	sub	sp, sp, #12
   1e050:	ldr	r6, [r5, ip]
   1e054:	mov	r3, #0
   1e058:	mov	r7, r0
   1e05c:	ldr	ip, [r6]
   1e060:	ldr	r0, [r0]
   1e064:	str	ip, [sp, #1028]	; 0x404
   1e068:	bl	12124 <send@plt>
   1e06c:	subs	r3, r0, #0
   1e070:	blt	1e0e8 <mount@plt+0xbf88>
   1e074:	add	r4, sp, #4
   1e078:	ldr	r0, [r7]
   1e07c:	mov	r1, r4
   1e080:	mov	r3, #66	; 0x42
   1e084:	mov	r2, #1024	; 0x400
   1e088:	bl	1210c <recv@plt>
   1e08c:	cmp	r0, #0
   1e090:	blt	1e108 <mount@plt+0xbfa8>
   1e094:	cmp	r0, #15
   1e098:	ble	1e0e4 <mount@plt+0xbf84>
   1e09c:	ldr	r3, [sp, #4]
   1e0a0:	cmp	r3, #15
   1e0a4:	bhi	1e0dc <mount@plt+0xbf7c>
   1e0a8:	b	1e0e4 <mount@plt+0xbf84>
   1e0ac:	ldrh	r2, [r4, #4]
   1e0b0:	cmp	r2, #2
   1e0b4:	beq	1e11c <mount@plt+0xbfbc>
   1e0b8:	add	r3, r3, #3
   1e0bc:	bic	r3, r3, #3
   1e0c0:	sub	r0, r0, r3
   1e0c4:	cmp	r0, #15
   1e0c8:	add	r4, r4, r3
   1e0cc:	ble	1e0e4 <mount@plt+0xbf84>
   1e0d0:	ldr	r3, [r4]
   1e0d4:	cmp	r3, #15
   1e0d8:	bls	1e0e4 <mount@plt+0xbf84>
   1e0dc:	cmp	r0, r3
   1e0e0:	bcs	1e0ac <mount@plt+0xbf4c>
   1e0e4:	mov	r3, #0
   1e0e8:	ldr	r1, [sp, #1028]	; 0x404
   1e0ec:	ldr	r2, [r6]
   1e0f0:	mov	r0, r3
   1e0f4:	cmp	r1, r2
   1e0f8:	bne	1e164 <mount@plt+0xc004>
   1e0fc:	add	sp, sp, #1024	; 0x400
   1e100:	add	sp, sp, #12
   1e104:	pop	{r4, r5, r6, r7, pc}
   1e108:	bl	11ec0 <__errno_location@plt>
   1e10c:	ldr	r3, [r0]
   1e110:	subs	r3, r3, #11
   1e114:	mvnne	r3, #0
   1e118:	b	1e0e8 <mount@plt+0xbf88>
   1e11c:	cmp	r3, #35	; 0x23
   1e120:	bls	1e13c <mount@plt+0xbfdc>
   1e124:	bl	11ec0 <__errno_location@plt>
   1e128:	ldr	r2, [r4, #16]
   1e12c:	mvn	r3, #0
   1e130:	rsb	r2, r2, #0
   1e134:	str	r2, [r0]
   1e138:	b	1e0e8 <mount@plt+0xbf88>
   1e13c:	ldr	r3, [pc, #44]	; 1e170 <mount@plt+0xc010>
   1e140:	ldr	r0, [pc, #44]	; 1e174 <mount@plt+0xc014>
   1e144:	mov	r2, #16
   1e148:	ldr	r3, [r5, r3]
   1e14c:	mov	r1, #1
   1e150:	add	r0, pc, r0
   1e154:	ldr	r3, [r3]
   1e158:	bl	11d40 <fwrite@plt>
   1e15c:	mvn	r3, #0
   1e160:	b	1e0e8 <mount@plt+0xbf88>
   1e164:	bl	11ca4 <__stack_chk_fail@plt>
   1e168:			; <UNDEFINED> instruction: 0x00014fb0
   1e16c:	andeq	r0, r0, ip, lsl #4
   1e170:	andeq	r0, r0, r8, lsl r2
   1e174:	andeq	r4, r0, r4, lsl #3
   1e178:	push	{r4, r5, lr}
   1e17c:	sub	sp, sp, #84	; 0x54
   1e180:	ldr	r5, [pc, #192]	; 1e248 <mount@plt+0xc0e8>
   1e184:	ldr	ip, [pc, #192]	; 1e24c <mount@plt+0xc0ec>
   1e188:	add	r5, pc, r5
   1e18c:	ldr	lr, [r0, #28]
   1e190:	ldr	r4, [r5, ip]
   1e194:	strh	r1, [sp, #20]
   1e198:	str	r3, [sp, #72]	; 0x48
   1e19c:	ldr	r1, [r4]
   1e1a0:	add	r3, r3, #16
   1e1a4:	str	r1, [sp, #76]	; 0x4c
   1e1a8:	mov	r1, #16
   1e1ac:	str	r3, [sp, #16]
   1e1b0:	add	r3, sp, r1
   1e1b4:	mov	ip, #0
   1e1b8:	add	lr, lr, #1
   1e1bc:	str	r3, [sp, #60]	; 0x3c
   1e1c0:	add	r3, sp, #4
   1e1c4:	ldr	r5, [pc, #132]	; 1e250 <mount@plt+0xc0f0>
   1e1c8:	str	lr, [r0, #28]
   1e1cc:	str	lr, [r0, #32]
   1e1d0:	str	r2, [sp, #68]	; 0x44
   1e1d4:	str	lr, [sp, #24]
   1e1d8:	mov	r2, ip
   1e1dc:	str	ip, [sp, #28]
   1e1e0:	str	ip, [sp, #6]
   1e1e4:	str	ip, [sp, #48]	; 0x30
   1e1e8:	str	ip, [sp, #10]
   1e1ec:	strh	ip, [sp, #14]
   1e1f0:	str	ip, [sp, #52]	; 0x34
   1e1f4:	str	ip, [sp, #56]	; 0x38
   1e1f8:	mov	lr, #12
   1e1fc:	strh	r1, [sp, #4]
   1e200:	str	r1, [sp, #64]	; 0x40
   1e204:	mov	ip, #2
   1e208:	str	r3, [sp, #32]
   1e20c:	ldr	r0, [r0]
   1e210:	add	r3, sp, #60	; 0x3c
   1e214:	add	r1, sp, #32
   1e218:	str	r3, [sp, #40]	; 0x28
   1e21c:	strh	r5, [sp, #22]
   1e220:	str	lr, [sp, #36]	; 0x24
   1e224:	str	ip, [sp, #44]	; 0x2c
   1e228:	bl	11c5c <sendmsg@plt>
   1e22c:	ldr	r2, [sp, #76]	; 0x4c
   1e230:	ldr	r3, [r4]
   1e234:	cmp	r2, r3
   1e238:	bne	1e244 <mount@plt+0xc0e4>
   1e23c:	add	sp, sp, #84	; 0x54
   1e240:	pop	{r4, r5, pc}
   1e244:	bl	11ca4 <__stack_chk_fail@plt>
   1e248:	andeq	r4, r1, r0, ror lr
   1e24c:	andeq	r0, r0, ip, lsl #4
   1e250:	andeq	r0, r0, r1, lsl #6
   1e254:	ldr	r3, [pc, #176]	; 1e30c <mount@plt+0xc1ac>
   1e258:	ldr	r2, [pc, #176]	; 1e310 <mount@plt+0xc1b0>
   1e25c:	add	r3, pc, r3
   1e260:	ldr	ip, [pc, #172]	; 1e314 <mount@plt+0xc1b4>
   1e264:	push	{r4, lr}
   1e268:	sub	sp, sp, #56	; 0x38
   1e26c:	ldr	r4, [r3, r2]
   1e270:	ldr	r2, [r0, #28]
   1e274:	strh	ip, [r1, #6]
   1e278:	ldr	ip, [r1]
   1e27c:	mov	r3, #0
   1e280:	add	r2, r2, #1
   1e284:	str	r3, [r1, #12]
   1e288:	str	r2, [r0, #28]
   1e28c:	str	r2, [r0, #32]
   1e290:	ldr	r0, [r0]
   1e294:	str	r2, [r1, #8]
   1e298:	ldr	r2, [r4]
   1e29c:	stmib	sp, {r1, ip}
   1e2a0:	mov	r1, #12
   1e2a4:	str	r3, [sp, #14]
   1e2a8:	str	r3, [sp, #40]	; 0x28
   1e2ac:	str	r2, [sp, #52]	; 0x34
   1e2b0:	str	r3, [sp, #18]
   1e2b4:	mov	r2, r3
   1e2b8:	strh	r3, [sp, #22]
   1e2bc:	mov	ip, #16
   1e2c0:	str	r3, [sp, #44]	; 0x2c
   1e2c4:	str	r3, [sp, #48]	; 0x30
   1e2c8:	add	r3, sp, r1
   1e2cc:	strh	ip, [sp, #12]
   1e2d0:	str	r3, [sp, #24]
   1e2d4:	mov	ip, #1
   1e2d8:	add	r3, sp, #4
   1e2dc:	str	r1, [sp, #28]
   1e2e0:	add	r1, sp, #24
   1e2e4:	str	r3, [sp, #32]
   1e2e8:	str	ip, [sp, #36]	; 0x24
   1e2ec:	bl	11c5c <sendmsg@plt>
   1e2f0:	ldr	r2, [sp, #52]	; 0x34
   1e2f4:	ldr	r3, [r4]
   1e2f8:	cmp	r2, r3
   1e2fc:	bne	1e308 <mount@plt+0xc1a8>
   1e300:	add	sp, sp, #56	; 0x38
   1e304:	pop	{r4, pc}
   1e308:	bl	11ca4 <__stack_chk_fail@plt>
   1e30c:	muleq	r1, ip, sp
   1e310:	andeq	r0, r0, ip, lsl #4
   1e314:	andeq	r0, r0, r1, lsl #6
   1e318:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e31c:	sub	sp, sp, #116	; 0x74
   1e320:	ldr	fp, [pc, #1076]	; 1e75c <mount@plt+0xc5fc>
   1e324:	ldr	r4, [pc, #1076]	; 1e760 <mount@plt+0xc600>
   1e328:	ldr	lr, [pc, #1076]	; 1e764 <mount@plt+0xc604>
   1e32c:	add	fp, pc, fp
   1e330:	add	r4, pc, r4
   1e334:	str	r4, [sp, #28]
   1e338:	ldr	lr, [fp, lr]
   1e33c:	strh	r3, [sp, #92]	; 0x5c
   1e340:	add	r3, sp, #32
   1e344:	str	r3, [sp, #12]
   1e348:	add	r3, sp, #56	; 0x38
   1e34c:	str	r3, [sp, #8]
   1e350:	add	r3, sp, #44	; 0x2c
   1e354:	str	r3, [sp, #56]	; 0x38
   1e358:	mov	r3, #12
   1e35c:	str	r2, [sp, #88]	; 0x58
   1e360:	str	r3, [sp, #60]	; 0x3c
   1e364:	ldr	r2, [lr]
   1e368:	add	r3, sp, #36	; 0x24
   1e36c:	mov	r5, r0
   1e370:	mov	r9, r1
   1e374:	mov	ip, #0
   1e378:	str	r3, [sp, #64]	; 0x40
   1e37c:	mov	r3, #1
   1e380:	str	lr, [sp, #16]
   1e384:	str	ip, [sp, #4]
   1e388:	str	r1, [sp, #84]	; 0x54
   1e38c:	str	r2, [sp, #108]	; 0x6c
   1e390:	str	ip, [sp, #96]	; 0x60
   1e394:	str	ip, [sp, #100]	; 0x64
   1e398:	strh	ip, [sp, #104]	; 0x68
   1e39c:	str	ip, [sp, #72]	; 0x48
   1e3a0:	str	ip, [sp, #76]	; 0x4c
   1e3a4:	str	ip, [sp, #80]	; 0x50
   1e3a8:	str	r3, [sp, #68]	; 0x44
   1e3ac:	ldr	r2, [sp, #12]
   1e3b0:	ldr	r1, [sp, #8]
   1e3b4:	ldr	r0, [r5]
   1e3b8:	bl	1cfbc <mount@plt+0xae5c>
   1e3bc:	subs	r7, r0, #0
   1e3c0:	blt	1e6e4 <mount@plt+0xc584>
   1e3c4:	ldr	r3, [r5, #40]	; 0x28
   1e3c8:	ldr	r4, [sp, #32]
   1e3cc:	cmp	r3, #0
   1e3d0:	beq	1e3ec <mount@plt+0xc28c>
   1e3d4:	add	r2, r7, #3
   1e3d8:	mov	r0, r4
   1e3dc:	bic	r2, r2, #3
   1e3e0:	mov	r1, #1
   1e3e4:	bl	11d40 <fwrite@plt>
   1e3e8:	ldr	r4, [sp, #32]
   1e3ec:	cmp	r9, #0
   1e3f0:	beq	1e6b0 <mount@plt+0xc550>
   1e3f4:	mov	r3, #0
   1e3f8:	cmp	r7, #15
   1e3fc:	add	r6, sp, #84	; 0x54
   1e400:	mov	r8, r9
   1e404:	str	r3, [sp, #20]
   1e408:	str	r9, [sp, #24]
   1e40c:	ble	1e510 <mount@plt+0xc3b0>
   1e410:	ldr	r0, [r4]
   1e414:	cmp	r0, #15
   1e418:	bls	1e510 <mount@plt+0xc3b0>
   1e41c:	cmp	r0, r7
   1e420:	mov	r9, r7
   1e424:	bhi	1e510 <mount@plt+0xc3b0>
   1e428:	ldrsh	sl, [r6, #8]
   1e42c:	mvn	sl, sl
   1e430:	b	1e468 <mount@plt+0xc308>
   1e434:	ldr	r3, [r4]
   1e438:	add	r3, r3, #3
   1e43c:	bic	r3, r3, #3
   1e440:	sub	r2, r9, r3
   1e444:	cmp	r2, #15
   1e448:	add	r4, r4, r3
   1e44c:	mov	r9, r2
   1e450:	ble	1e4f4 <mount@plt+0xc394>
   1e454:	ldr	r0, [r4]
   1e458:	cmp	r0, #15
   1e45c:	bls	1e4f4 <mount@plt+0xc394>
   1e460:	cmp	r2, r0
   1e464:	bcc	1e4f4 <mount@plt+0xc394>
   1e468:	ldrh	r3, [r4, #6]
   1e46c:	ldr	r1, [sp, #48]	; 0x30
   1e470:	and	r3, r3, sl
   1e474:	cmp	r1, #0
   1e478:	strh	r3, [r4, #6]
   1e47c:	bne	1e434 <mount@plt+0xc2d4>
   1e480:	ldr	ip, [r4, #12]
   1e484:	ldr	r2, [r5, #8]
   1e488:	cmp	ip, r2
   1e48c:	bne	1e434 <mount@plt+0xc2d4>
   1e490:	ldr	ip, [r4, #8]
   1e494:	ldr	r2, [r5, #32]
   1e498:	cmp	ip, r2
   1e49c:	bne	1e434 <mount@plt+0xc2d4>
   1e4a0:	ldrh	r2, [r4, #4]
   1e4a4:	tst	r3, #16
   1e4a8:	ldr	r3, [sp, #4]
   1e4ac:	movne	r3, #1
   1e4b0:	cmp	r2, #3
   1e4b4:	str	r3, [sp, #4]
   1e4b8:	beq	1e578 <mount@plt+0xc418>
   1e4bc:	cmp	r2, #2
   1e4c0:	beq	1e5c0 <mount@plt+0xc460>
   1e4c4:	ldr	r3, [r5, #40]	; 0x28
   1e4c8:	cmp	r3, #0
   1e4cc:	bne	1e434 <mount@plt+0xc2d4>
   1e4d0:	ldr	r1, [r6, #4]
   1e4d4:	mov	r0, r4
   1e4d8:	blx	r8
   1e4dc:	cmp	r0, #0
   1e4e0:	bge	1e434 <mount@plt+0xc2d4>
   1e4e4:	mov	sl, r0
   1e4e8:	ldr	r0, [sp, #32]
   1e4ec:	bl	11c14 <free@plt>
   1e4f0:	b	1e5fc <mount@plt+0xc49c>
   1e4f4:	ldr	r8, [r6, #12]
   1e4f8:	ldr	r4, [sp, #32]
   1e4fc:	cmp	r8, #0
   1e500:	beq	1e520 <mount@plt+0xc3c0>
   1e504:	cmp	r7, #15
   1e508:	add	r6, r6, #12
   1e50c:	bgt	1e410 <mount@plt+0xc2b0>
   1e510:	ldr	r8, [r6, #12]
   1e514:	mov	r2, r7
   1e518:	cmp	r8, #0
   1e51c:	bne	1e504 <mount@plt+0xc3a4>
   1e520:	mov	r0, r4
   1e524:	mov	r6, r2
   1e528:	ldr	r9, [sp, #24]
   1e52c:	bl	11c14 <free@plt>
   1e530:	ldr	r3, [sp, #20]
   1e534:	cmp	r3, #0
   1e538:	bne	1e750 <mount@plt+0xc5f0>
   1e53c:	ldr	r3, [sp, #80]	; 0x50
   1e540:	tst	r3, #32
   1e544:	bne	1e6c4 <mount@plt+0xc564>
   1e548:	cmp	r6, #0
   1e54c:	mov	r3, r6
   1e550:	beq	1e3ac <mount@plt+0xc24c>
   1e554:	ldr	r1, [pc, #524]	; 1e768 <mount@plt+0xc608>
   1e558:	ldr	r2, [pc, #524]	; 1e76c <mount@plt+0xc60c>
   1e55c:	ldr	r0, [fp, r1]
   1e560:	add	r2, pc, r2
   1e564:	mov	r1, #1
   1e568:	ldr	r0, [r0]
   1e56c:	bl	11f74 <__fprintf_chk@plt>
   1e570:	mov	r0, #1
   1e574:	bl	11e84 <exit@plt>
   1e578:	cmp	r0, #19
   1e57c:	ldr	r8, [r4, #16]
   1e580:	bls	1e72c <mount@plt+0xc5cc>
   1e584:	cmp	r8, #0
   1e588:	bge	1e61c <mount@plt+0xc4bc>
   1e58c:	bl	11ec0 <__errno_location@plt>
   1e590:	rsb	r8, r8, #0
   1e594:	cmp	r8, #90	; 0x5a
   1e598:	str	r8, [r0]
   1e59c:	beq	1e68c <mount@plt+0xc52c>
   1e5a0:	cmp	r8, #95	; 0x5f
   1e5a4:	beq	1e5f0 <mount@plt+0xc490>
   1e5a8:	cmp	r8, #2
   1e5ac:	beq	1e5f0 <mount@plt+0xc490>
   1e5b0:	ldr	r0, [pc, #440]	; 1e770 <mount@plt+0xc610>
   1e5b4:	add	r0, pc, r0
   1e5b8:	bl	11d10 <perror@plt>
   1e5bc:	b	1e5f0 <mount@plt+0xc490>
   1e5c0:	cmp	r0, #35	; 0x23
   1e5c4:	bls	1e640 <mount@plt+0xc4e0>
   1e5c8:	bl	11ec0 <__errno_location@plt>
   1e5cc:	ldr	r3, [r4, #16]
   1e5d0:	rsb	r2, r3, #0
   1e5d4:	str	r2, [r0]
   1e5d8:	ldr	r2, [r5, #36]	; 0x24
   1e5dc:	cmp	r2, #4
   1e5e0:	beq	1e664 <mount@plt+0xc504>
   1e5e4:	ldr	r3, [r5, #44]	; 0x2c
   1e5e8:	tst	r3, #2
   1e5ec:	beq	1e67c <mount@plt+0xc51c>
   1e5f0:	ldr	r0, [sp, #32]
   1e5f4:	bl	11c14 <free@plt>
   1e5f8:	mvn	sl, #0
   1e5fc:	ldr	r3, [sp, #16]
   1e600:	ldr	r2, [sp, #108]	; 0x6c
   1e604:	mov	r0, sl
   1e608:	ldr	r3, [r3]
   1e60c:	cmp	r2, r3
   1e610:	bne	1e758 <mount@plt+0xc5f8>
   1e614:	add	sp, sp, #116	; 0x74
   1e618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e61c:	mov	r0, r4
   1e620:	bl	1d06c <mount@plt+0xaf0c>
   1e624:	ldr	r8, [r6, #12]
   1e628:	cmp	r8, #0
   1e62c:	beq	1e6ec <mount@plt+0xc58c>
   1e630:	mov	r3, #1
   1e634:	ldr	r4, [sp, #32]
   1e638:	str	r3, [sp, #20]
   1e63c:	b	1e504 <mount@plt+0xc3a4>
   1e640:	ldr	r3, [pc, #288]	; 1e768 <mount@plt+0xc608>
   1e644:	ldr	r0, [pc, #296]	; 1e774 <mount@plt+0xc614>
   1e648:	mov	r2, #16
   1e64c:	ldr	r3, [fp, r3]
   1e650:	mov	r1, #1
   1e654:	add	r0, pc, r0
   1e658:	ldr	r3, [r3]
   1e65c:	bl	11d40 <fwrite@plt>
   1e660:	b	1e5f0 <mount@plt+0xc490>
   1e664:	cmn	r3, #2
   1e668:	cmnne	r3, #95	; 0x5f
   1e66c:	beq	1e5f0 <mount@plt+0xc490>
   1e670:	ldr	r3, [r5, #44]	; 0x2c
   1e674:	tst	r3, #2
   1e678:	bne	1e5f0 <mount@plt+0xc490>
   1e67c:	ldr	r0, [pc, #244]	; 1e778 <mount@plt+0xc618>
   1e680:	add	r0, pc, r0
   1e684:	bl	11d10 <perror@plt>
   1e688:	b	1e5f0 <mount@plt+0xc490>
   1e68c:	ldr	r3, [pc, #212]	; 1e768 <mount@plt+0xc608>
   1e690:	ldr	r0, [pc, #228]	; 1e77c <mount@plt+0xc61c>
   1e694:	mov	r2, #36	; 0x24
   1e698:	ldr	r3, [fp, r3]
   1e69c:	mov	r1, #1
   1e6a0:	add	r0, pc, r0
   1e6a4:	ldr	r3, [r3]
   1e6a8:	bl	11d40 <fwrite@plt>
   1e6ac:	b	1e5f0 <mount@plt+0xc490>
   1e6b0:	mov	r0, r4
   1e6b4:	bl	11c14 <free@plt>
   1e6b8:	ldr	r3, [sp, #80]	; 0x50
   1e6bc:	tst	r3, #32
   1e6c0:	beq	1e3ac <mount@plt+0xc24c>
   1e6c4:	ldr	r3, [pc, #156]	; 1e768 <mount@plt+0xc608>
   1e6c8:	mov	r2, #18
   1e6cc:	mov	r1, #1
   1e6d0:	ldr	r3, [fp, r3]
   1e6d4:	ldr	r0, [sp, #28]
   1e6d8:	ldr	r3, [r3]
   1e6dc:	bl	11d40 <fwrite@plt>
   1e6e0:	b	1e3ac <mount@plt+0xc24c>
   1e6e4:	mov	sl, r7
   1e6e8:	b	1e5fc <mount@plt+0xc49c>
   1e6ec:	ldr	r0, [sp, #32]
   1e6f0:	bl	11c14 <free@plt>
   1e6f4:	ldr	sl, [sp, #4]
   1e6f8:	ldr	r3, [sp, #4]
   1e6fc:	cmp	r3, #0
   1e700:	beq	1e5fc <mount@plt+0xc49c>
   1e704:	ldr	r3, [pc, #92]	; 1e768 <mount@plt+0xc608>
   1e708:	ldr	r0, [pc, #112]	; 1e780 <mount@plt+0xc620>
   1e70c:	mov	r2, #46	; 0x2e
   1e710:	ldr	r3, [fp, r3]
   1e714:	mov	r1, #1
   1e718:	add	r0, pc, r0
   1e71c:	ldr	r3, [r3]
   1e720:	mov	sl, #0
   1e724:	bl	11d40 <fwrite@plt>
   1e728:	b	1e5fc <mount@plt+0xc49c>
   1e72c:	ldr	r3, [pc, #52]	; 1e768 <mount@plt+0xc608>
   1e730:	ldr	r0, [pc, #76]	; 1e784 <mount@plt+0xc624>
   1e734:	mov	r2, #15
   1e738:	ldr	r3, [fp, r3]
   1e73c:	mov	r1, #1
   1e740:	add	r0, pc, r0
   1e744:	ldr	r3, [r3]
   1e748:	bl	11d40 <fwrite@plt>
   1e74c:	b	1e5f0 <mount@plt+0xc490>
   1e750:	ldr	sl, [sp, #4]
   1e754:	b	1e6f8 <mount@plt+0xc598>
   1e758:	bl	11ca4 <__stack_chk_fail@plt>
   1e75c:	andeq	r4, r1, ip, asr #25
   1e760:	andeq	r3, r0, r8, ror #31
   1e764:	andeq	r0, r0, ip, lsl #4
   1e768:	andeq	r0, r0, r8, lsl r2
   1e76c:	andeq	r3, r0, ip, asr #27
   1e770:	andeq	r3, r0, r4, ror #28
   1e774:	andeq	r3, r0, r0, lsl #25
   1e778:	muleq	r0, r8, sp
   1e77c:	andeq	r3, r0, r0, asr sp
   1e780:	andeq	r3, r0, r4, lsl sp
   1e784:	andeq	r3, r0, r0, lsr #25
   1e788:	ldr	ip, [pc, #88]	; 1e7e8 <mount@plt+0xc688>
   1e78c:	push	{r4, lr}
   1e790:	add	ip, pc, ip
   1e794:	ldr	lr, [pc, #80]	; 1e7ec <mount@plt+0xc68c>
   1e798:	sub	sp, sp, #24
   1e79c:	mov	r3, r2
   1e7a0:	ldr	r4, [ip, lr]
   1e7a4:	mov	r2, ip
   1e7a8:	mov	r2, #1
   1e7ac:	ldr	lr, [r1]
   1e7b0:	str	r2, [sp]
   1e7b4:	ldr	ip, [r4]
   1e7b8:	str	r1, [sp, #12]
   1e7bc:	add	r1, sp, #12
   1e7c0:	str	lr, [sp, #16]
   1e7c4:	str	ip, [sp, #20]
   1e7c8:	bl	1d25c <mount@plt+0xb0fc>
   1e7cc:	ldr	r2, [sp, #20]
   1e7d0:	ldr	r3, [r4]
   1e7d4:	cmp	r2, r3
   1e7d8:	bne	1e7e4 <mount@plt+0xc684>
   1e7dc:	add	sp, sp, #24
   1e7e0:	pop	{r4, pc}
   1e7e4:	bl	11ca4 <__stack_chk_fail@plt>
   1e7e8:	andeq	r4, r1, r8, ror #16
   1e7ec:	andeq	r0, r0, ip, lsl #4
   1e7f0:	push	{lr}		; (str lr, [sp, #-4]!)
   1e7f4:	sub	sp, sp, #12
   1e7f8:	mov	ip, #1
   1e7fc:	str	ip, [sp]
   1e800:	bl	1d25c <mount@plt+0xb0fc>
   1e804:	add	sp, sp, #12
   1e808:	pop	{pc}		; (ldr pc, [sp], #4)
   1e80c:	ldr	ip, [pc, #92]	; 1e870 <mount@plt+0xc710>
   1e810:	push	{r4, lr}
   1e814:	add	ip, pc, ip
   1e818:	ldr	lr, [pc, #84]	; 1e874 <mount@plt+0xc714>
   1e81c:	sub	sp, sp, #24
   1e820:	mov	r3, r2
   1e824:	ldr	r4, [ip, lr]
   1e828:	mov	r2, ip
   1e82c:	mov	r2, #0
   1e830:	ldr	lr, [r1]
   1e834:	str	r2, [sp]
   1e838:	ldr	ip, [r4]
   1e83c:	str	r1, [sp, #12]
   1e840:	mov	r2, #1
   1e844:	add	r1, sp, #12
   1e848:	str	lr, [sp, #16]
   1e84c:	str	ip, [sp, #20]
   1e850:	bl	1d25c <mount@plt+0xb0fc>
   1e854:	ldr	r2, [sp, #20]
   1e858:	ldr	r3, [r4]
   1e85c:	cmp	r2, r3
   1e860:	bne	1e86c <mount@plt+0xc70c>
   1e864:	add	sp, sp, #24
   1e868:	pop	{r4, pc}
   1e86c:	bl	11ca4 <__stack_chk_fail@plt>
   1e870:	andeq	r4, r1, r4, ror #15
   1e874:	andeq	r0, r0, ip, lsl #4
   1e878:	ldr	r2, [pc, #136]	; 1e908 <mount@plt+0xc7a8>
   1e87c:	ldr	r3, [pc, #136]	; 1e90c <mount@plt+0xc7ac>
   1e880:	add	r2, pc, r2
   1e884:	push	{r4, r5, lr}
   1e888:	sub	sp, sp, #20
   1e88c:	ldr	r5, [r2, r3]
   1e890:	mov	r1, #4
   1e894:	mov	r4, r0
   1e898:	ldr	r0, [r0]
   1e89c:	str	r1, [sp]
   1e8a0:	ldr	r1, [r5]
   1e8a4:	mov	ip, #1
   1e8a8:	str	r1, [sp, #12]
   1e8ac:	add	r3, sp, #8
   1e8b0:	ldr	r1, [pc, #88]	; 1e910 <mount@plt+0xc7b0>
   1e8b4:	mov	r2, #8
   1e8b8:	str	ip, [sp, #8]
   1e8bc:	bl	11bc0 <setsockopt@plt>
   1e8c0:	cmp	r0, #0
   1e8c4:	blt	1e8f0 <mount@plt+0xc790>
   1e8c8:	ldr	r3, [r4, #44]	; 0x2c
   1e8cc:	mov	r0, #0
   1e8d0:	orr	r3, r3, #1
   1e8d4:	str	r3, [r4, #44]	; 0x2c
   1e8d8:	ldr	r2, [sp, #12]
   1e8dc:	ldr	r3, [r5]
   1e8e0:	cmp	r2, r3
   1e8e4:	bne	1e904 <mount@plt+0xc7a4>
   1e8e8:	add	sp, sp, #20
   1e8ec:	pop	{r4, r5, pc}
   1e8f0:	ldr	r0, [pc, #28]	; 1e914 <mount@plt+0xc7b4>
   1e8f4:	add	r0, pc, r0
   1e8f8:	bl	11d10 <perror@plt>
   1e8fc:	mvn	r0, #0
   1e900:	b	1e8d8 <mount@plt+0xc778>
   1e904:	bl	11ca4 <__stack_chk_fail@plt>
   1e908:	andeq	r4, r1, r8, ror r7
   1e90c:	andeq	r0, r0, ip, lsl #4
   1e910:	andeq	r0, r0, lr, lsl #2
   1e914:	andeq	r3, r0, r8, ror #22
   1e918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e91c:	sub	sp, sp, #24576	; 0x6000
   1e920:	ldr	lr, [pc, #928]	; 1ecc8 <mount@plt+0xcb68>
   1e924:	ldr	r3, [pc, #928]	; 1eccc <mount@plt+0xcb6c>
   1e928:	sub	sp, sp, #92	; 0x5c
   1e92c:	add	lr, pc, lr
   1e930:	str	lr, [sp, #16]
   1e934:	ldr	r3, [lr, r3]
   1e938:	mov	r9, r2
   1e93c:	add	r2, sp, #24576	; 0x6000
   1e940:	add	r2, r2, #84	; 0x54
   1e944:	str	r3, [sp, #28]
   1e948:	ldr	r3, [r3]
   1e94c:	add	r6, sp, #88	; 0x58
   1e950:	str	r3, [r2]
   1e954:	mov	r3, #16
   1e958:	strh	r3, [r6, #-44]	; 0xffffffd4
   1e95c:	sub	r3, r6, #44	; 0x2c
   1e960:	str	r3, [r6, #-32]	; 0xffffffe0
   1e964:	mov	r3, #12
   1e968:	mov	sl, r0
   1e96c:	str	r3, [r6, #-28]	; 0xffffffe4
   1e970:	ldr	r0, [r0, #44]	; 0x2c
   1e974:	sub	r3, r6, #52	; 0x34
   1e978:	str	r3, [r6, #-24]	; 0xffffffe8
   1e97c:	mov	r3, #1
   1e980:	tst	r0, #1
   1e984:	str	r3, [r6, #-20]	; 0xffffffec
   1e988:	mov	r3, #0
   1e98c:	str	r3, [r6, #-16]
   1e990:	str	r3, [r6, #-12]
   1e994:	str	r3, [r6, #-38]	; 0xffffffda
   1e998:	strh	r3, [r6, #-34]	; 0xffffffde
   1e99c:	str	r3, [r6, #-42]	; 0xffffffd6
   1e9a0:	str	r3, [r6, #-8]
   1e9a4:	subne	r3, r6, #4
   1e9a8:	strne	r3, [r6, #-16]
   1e9ac:	add	r3, sp, #8256	; 0x2040
   1e9b0:	movne	r2, #8192	; 0x2000
   1e9b4:	add	r3, r3, #24
   1e9b8:	mov	r8, r1
   1e9bc:	strne	r2, [r6, #-12]
   1e9c0:	str	r3, [sp, #20]
   1e9c4:	add	r2, sp, #56	; 0x38
   1e9c8:	sub	r3, r3, #4
   1e9cc:	str	r2, [sp, #12]
   1e9d0:	str	r3, [sp, #24]
   1e9d4:	str	r3, [r6, #-52]	; 0xffffffcc
   1e9d8:	mov	r3, #16384	; 0x4000
   1e9dc:	mov	r2, #0
   1e9e0:	ldr	r1, [sp, #12]
   1e9e4:	ldr	r0, [sl]
   1e9e8:	str	r3, [r6, #-48]	; 0xffffffd0
   1e9ec:	bl	1207c <recvmsg@plt>
   1e9f0:	subs	r5, r0, #0
   1e9f4:	bge	1ea7c <mount@plt+0xc91c>
   1e9f8:	bl	11ec0 <__errno_location@plt>
   1e9fc:	mov	r4, r0
   1ea00:	ldr	r0, [r0]
   1ea04:	cmp	r0, #11
   1ea08:	cmpne	r0, #4
   1ea0c:	beq	1e9d8 <mount@plt+0xc878>
   1ea10:	ldr	r2, [sp, #16]
   1ea14:	ldr	r3, [pc, #692]	; 1ecd0 <mount@plt+0xcb70>
   1ea18:	ldr	r3, [r2, r3]
   1ea1c:	ldr	r5, [r3]
   1ea20:	bl	11e0c <strerror@plt>
   1ea24:	ldr	r3, [r4]
   1ea28:	ldr	r2, [pc, #676]	; 1ecd4 <mount@plt+0xcb74>
   1ea2c:	str	r3, [sp]
   1ea30:	add	r2, pc, r2
   1ea34:	mov	r1, #1
   1ea38:	mov	r3, r0
   1ea3c:	mov	r0, r5
   1ea40:	bl	11f74 <__fprintf_chk@plt>
   1ea44:	ldr	r3, [r4]
   1ea48:	cmp	r3, #105	; 0x69
   1ea4c:	beq	1e9d8 <mount@plt+0xc878>
   1ea50:	mvn	r0, #0
   1ea54:	add	r3, sp, #24576	; 0x6000
   1ea58:	add	r3, r3, #84	; 0x54
   1ea5c:	ldr	r2, [r3]
   1ea60:	ldr	r3, [sp, #28]
   1ea64:	ldr	r3, [r3]
   1ea68:	cmp	r2, r3
   1ea6c:	bne	1ec80 <mount@plt+0xcb20>
   1ea70:	add	sp, sp, #24576	; 0x6000
   1ea74:	add	sp, sp, #92	; 0x5c
   1ea78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea7c:	beq	1ec58 <mount@plt+0xcaf8>
   1ea80:	ldr	r3, [r6, #-28]	; 0xffffffe4
   1ea84:	cmp	r3, #12
   1ea88:	bne	1eca0 <mount@plt+0xcb40>
   1ea8c:	ldr	r3, [sl, #44]	; 0x2c
   1ea90:	tst	r3, #1
   1ea94:	bne	1eb80 <mount@plt+0xca20>
   1ea98:	cmp	r5, #15
   1ea9c:	ble	1ec24 <mount@plt+0xcac4>
   1eaa0:	ldr	r3, [sp, #20]
   1eaa4:	ldr	r4, [r3, #-4]
   1eaa8:	cmp	r5, r4
   1eaac:	sub	r2, r4, #16
   1eab0:	movge	r3, #0
   1eab4:	movlt	r3, #1
   1eab8:	orrs	r3, r3, r2, lsr #31
   1eabc:	bne	1eb1c <mount@plt+0xc9bc>
   1eac0:	ldr	fp, [sp, #24]
   1eac4:	add	r7, sp, #32
   1eac8:	b	1eb00 <mount@plt+0xc9a0>
   1eacc:	add	r4, r4, #3
   1ead0:	bic	r4, r4, #3
   1ead4:	sub	r5, r5, r4
   1ead8:	cmp	r5, #15
   1eadc:	add	fp, fp, r4
   1eae0:	bls	1eb58 <mount@plt+0xc9f8>
   1eae4:	ldr	r4, [fp]
   1eae8:	cmp	r4, r5
   1eaec:	sub	r2, r4, #16
   1eaf0:	movle	r3, #0
   1eaf4:	movgt	r3, #1
   1eaf8:	orrs	r3, r3, r2, lsr #31
   1eafc:	bne	1eb1c <mount@plt+0xc9bc>
   1eb00:	mov	r2, r9
   1eb04:	mov	r1, fp
   1eb08:	mov	r0, r7
   1eb0c:	blx	r8
   1eb10:	cmp	r0, #0
   1eb14:	bge	1eacc <mount@plt+0xc96c>
   1eb18:	b	1ea54 <mount@plt+0xc8f4>
   1eb1c:	ldr	r3, [pc, #428]	; 1ecd0 <mount@plt+0xcb70>
   1eb20:	ldr	r1, [sp, #16]
   1eb24:	ldr	r2, [r6, #-8]
   1eb28:	ldr	r3, [r1, r3]
   1eb2c:	tst	r2, #32
   1eb30:	ldr	r0, [r3]
   1eb34:	beq	1ec84 <mount@plt+0xcb24>
   1eb38:	mov	r3, r0
   1eb3c:	ldr	r0, [pc, #404]	; 1ecd8 <mount@plt+0xcb78>
   1eb40:	mov	r2, #18
   1eb44:	mov	r1, #1
   1eb48:	add	r0, pc, r0
   1eb4c:	bl	11d40 <fwrite@plt>
   1eb50:	mvn	r0, #0
   1eb54:	b	1ea54 <mount@plt+0xc8f4>
   1eb58:	ldr	r3, [r6, #-8]
   1eb5c:	tst	r3, #32
   1eb60:	bne	1ec30 <mount@plt+0xcad0>
   1eb64:	cmp	r5, #0
   1eb68:	beq	1e9d8 <mount@plt+0xc878>
   1eb6c:	ldr	r2, [pc, #360]	; 1ecdc <mount@plt+0xcb7c>
   1eb70:	ldr	r1, [pc, #344]	; 1ecd0 <mount@plt+0xcb70>
   1eb74:	mov	r3, r5
   1eb78:	add	r2, pc, r2
   1eb7c:	b	1ecac <mount@plt+0xcb4c>
   1eb80:	ldr	r0, [r6, #-12]
   1eb84:	mvn	ip, #0
   1eb88:	cmp	r0, #11
   1eb8c:	str	ip, [r6, #-56]	; 0xffffffc8
   1eb90:	bls	1ea98 <mount@plt+0xc938>
   1eb94:	ldr	r3, [r6, #-16]
   1eb98:	cmp	r3, #0
   1eb9c:	beq	1ea98 <mount@plt+0xc938>
   1eba0:	mov	r2, r3
   1eba4:	ldr	r3, [r3]
   1eba8:	add	r0, r2, r0
   1ebac:	mov	lr, #0
   1ebb0:	ldr	r1, [r2, #4]
   1ebb4:	ldr	r4, [pc, #292]	; 1ece0 <mount@plt+0xcb80>
   1ebb8:	cmp	r1, r4
   1ebbc:	beq	1ec04 <mount@plt+0xcaa4>
   1ebc0:	cmp	r3, #11
   1ebc4:	bls	1ebf8 <mount@plt+0xca98>
   1ebc8:	add	r3, r3, #3
   1ebcc:	bic	r3, r3, #3
   1ebd0:	add	r2, r2, r3
   1ebd4:	add	r3, r2, #12
   1ebd8:	cmp	r0, r3
   1ebdc:	bcc	1ebf8 <mount@plt+0xca98>
   1ebe0:	ldr	r3, [r2]
   1ebe4:	add	r1, r3, #3
   1ebe8:	bic	r1, r1, #3
   1ebec:	add	r1, r2, r1
   1ebf0:	cmp	r0, r1
   1ebf4:	bcs	1ebb0 <mount@plt+0xca50>
   1ebf8:	cmp	lr, #0
   1ebfc:	strne	ip, [r6, #-56]	; 0xffffffc8
   1ec00:	b	1ea98 <mount@plt+0xc938>
   1ec04:	ldr	r1, [r2, #8]
   1ec08:	cmp	r1, #8
   1ec0c:	bne	1ebc0 <mount@plt+0xca60>
   1ec10:	cmp	r3, #16
   1ec14:	bne	1ebc0 <mount@plt+0xca60>
   1ec18:	ldr	ip, [r2, #12]
   1ec1c:	mov	lr, #1
   1ec20:	b	1ebc8 <mount@plt+0xca68>
   1ec24:	ldr	r3, [r6, #-8]
   1ec28:	tst	r3, #32
   1ec2c:	beq	1eb6c <mount@plt+0xca0c>
   1ec30:	ldr	r0, [sp, #16]
   1ec34:	ldr	r3, [pc, #148]	; 1ecd0 <mount@plt+0xcb70>
   1ec38:	mov	r2, #18
   1ec3c:	mov	r1, #1
   1ec40:	ldr	r3, [r0, r3]
   1ec44:	ldr	r0, [pc, #152]	; 1ece4 <mount@plt+0xcb84>
   1ec48:	ldr	r3, [r3]
   1ec4c:	add	r0, pc, r0
   1ec50:	bl	11d40 <fwrite@plt>
   1ec54:	b	1e9d8 <mount@plt+0xc878>
   1ec58:	ldr	r0, [sp, #16]
   1ec5c:	ldr	r3, [pc, #108]	; 1ecd0 <mount@plt+0xcb70>
   1ec60:	mov	r2, #15
   1ec64:	mov	r1, #1
   1ec68:	ldr	r3, [r0, r3]
   1ec6c:	ldr	r0, [pc, #116]	; 1ece8 <mount@plt+0xcb88>
   1ec70:	ldr	r3, [r3]
   1ec74:	add	r0, pc, r0
   1ec78:	bl	11d40 <fwrite@plt>
   1ec7c:	b	1ea50 <mount@plt+0xc8f0>
   1ec80:	bl	11ca4 <__stack_chk_fail@plt>
   1ec84:	ldr	r2, [pc, #96]	; 1ecec <mount@plt+0xcb8c>
   1ec88:	mov	r3, r4
   1ec8c:	add	r2, pc, r2
   1ec90:	mov	r1, #1
   1ec94:	bl	11f74 <__fprintf_chk@plt>
   1ec98:	mov	r0, #1
   1ec9c:	bl	11e84 <exit@plt>
   1eca0:	ldr	r2, [pc, #72]	; 1ecf0 <mount@plt+0xcb90>
   1eca4:	ldr	r1, [pc, #36]	; 1ecd0 <mount@plt+0xcb70>
   1eca8:	add	r2, pc, r2
   1ecac:	ldr	r0, [sp, #16]
   1ecb0:	ldr	r0, [r0, r1]
   1ecb4:	mov	r1, #1
   1ecb8:	ldr	r0, [r0]
   1ecbc:	bl	11f74 <__fprintf_chk@plt>
   1ecc0:	mov	r0, #1
   1ecc4:	bl	11e84 <exit@plt>
   1ecc8:	andeq	r4, r1, ip, asr #13
   1eccc:	andeq	r0, r0, ip, lsl #4
   1ecd0:	andeq	r0, r0, r8, lsl r2
   1ecd4:			; <UNDEFINED> instruction: 0x000037b0
   1ecd8:	andeq	r3, r0, r8, asr r7
   1ecdc:			; <UNDEFINED> instruction: 0x000037b4
   1ece0:	andeq	r0, r0, lr, lsl #2
   1ece4:	andeq	r3, r0, ip, asr #13
   1ece8:	andeq	r3, r0, ip, asr r5
   1ecec:	andeq	r3, r0, r8, lsr #12
   1ecf0:	andeq	r3, r0, ip, asr #15
   1ecf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ecf8:	sub	sp, sp, #16384	; 0x4000
   1ecfc:	ldr	fp, [pc, #352]	; 1ee64 <mount@plt+0xcd04>
   1ed00:	ldr	r3, [pc, #352]	; 1ee68 <mount@plt+0xcd08>
   1ed04:	add	fp, pc, fp
   1ed08:	sub	sp, sp, #28
   1ed0c:	ldr	r3, [fp, r3]
   1ed10:	mov	r9, r2
   1ed14:	ldr	r8, [pc, #336]	; 1ee6c <mount@plt+0xcd0c>
   1ed18:	add	r2, sp, #16384	; 0x4000
   1ed1c:	str	r3, [sp, #8]
   1ed20:	add	r2, r2, #20
   1ed24:	ldr	r3, [r3]
   1ed28:	mov	r5, r0
   1ed2c:	mov	sl, r1
   1ed30:	add	r7, sp, #24
   1ed34:	add	r6, sp, #20
   1ed38:	str	r3, [r2]
   1ed3c:	mov	r3, r5
   1ed40:	mov	r2, #16
   1ed44:	mov	r1, #1
   1ed48:	mov	r0, r6
   1ed4c:	bl	11d88 <fread@plt>
   1ed50:	cmp	r0, #0
   1ed54:	blt	1edd8 <mount@plt+0xcc78>
   1ed58:	beq	1edb0 <mount@plt+0xcc50>
   1ed5c:	ldr	r3, [r7, #-4]
   1ed60:	sub	r4, r3, #16
   1ed64:	cmp	r4, r8
   1ed68:	bhi	1edfc <mount@plt+0xcc9c>
   1ed6c:	sub	r3, r3, #13
   1ed70:	bic	r3, r3, #3
   1ed74:	str	r5, [sp]
   1ed78:	mov	r2, #1
   1ed7c:	mov	r1, r8
   1ed80:	add	r0, r7, #12
   1ed84:	bl	11fbc <__fread_chk@plt>
   1ed88:	cmp	r0, #0
   1ed8c:	blt	1ede8 <mount@plt+0xcc88>
   1ed90:	cmp	r4, r0
   1ed94:	bgt	1ee38 <mount@plt+0xccd8>
   1ed98:	mov	r2, r9
   1ed9c:	mov	r1, r6
   1eda0:	mov	r0, #0
   1eda4:	blx	sl
   1eda8:	cmp	r0, #0
   1edac:	bge	1ed3c <mount@plt+0xcbdc>
   1edb0:	add	r3, sp, #16384	; 0x4000
   1edb4:	add	r3, r3, #20
   1edb8:	ldr	r2, [r3]
   1edbc:	ldr	r3, [sp, #8]
   1edc0:	ldr	r3, [r3]
   1edc4:	cmp	r2, r3
   1edc8:	bne	1ee60 <mount@plt+0xcd00>
   1edcc:	add	sp, sp, #16384	; 0x4000
   1edd0:	add	sp, sp, #28
   1edd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1edd8:	bl	11ec0 <__errno_location@plt>
   1eddc:	ldr	r3, [r0]
   1ede0:	cmp	r3, #4
   1ede4:	beq	1ed3c <mount@plt+0xcbdc>
   1ede8:	ldr	r0, [pc, #128]	; 1ee70 <mount@plt+0xcd10>
   1edec:	add	r0, pc, r0
   1edf0:	bl	11d10 <perror@plt>
   1edf4:	mvn	r0, #0
   1edf8:	b	1edb0 <mount@plt+0xcc50>
   1edfc:	ldr	r2, [pc, #112]	; 1ee74 <mount@plt+0xcd14>
   1ee00:	str	r3, [sp, #12]
   1ee04:	mov	r0, r5
   1ee08:	ldr	r2, [fp, r2]
   1ee0c:	ldr	r4, [r2]
   1ee10:	bl	11c68 <ftell@plt>
   1ee14:	ldr	r2, [pc, #92]	; 1ee78 <mount@plt+0xcd18>
   1ee18:	ldr	r3, [sp, #12]
   1ee1c:	add	r2, pc, r2
   1ee20:	mov	r1, #1
   1ee24:	str	r0, [sp]
   1ee28:	mov	r0, r4
   1ee2c:	bl	11f74 <__fprintf_chk@plt>
   1ee30:	mvn	r0, #0
   1ee34:	b	1edb0 <mount@plt+0xcc50>
   1ee38:	ldr	r3, [pc, #52]	; 1ee74 <mount@plt+0xcd14>
   1ee3c:	ldr	r0, [pc, #56]	; 1ee7c <mount@plt+0xcd1c>
   1ee40:	mov	r2, #34	; 0x22
   1ee44:	ldr	r3, [fp, r3]
   1ee48:	mov	r1, #1
   1ee4c:	add	r0, pc, r0
   1ee50:	ldr	r3, [r3]
   1ee54:	bl	11d40 <fwrite@plt>
   1ee58:	mvn	r0, #0
   1ee5c:	b	1edb0 <mount@plt+0xcc50>
   1ee60:	bl	11ca4 <__stack_chk_fail@plt>
   1ee64:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1ee68:	andeq	r0, r0, ip, lsl #4
   1ee6c:	strdeq	r3, [r0], -r0
   1ee70:	andeq	r3, r0, r8, lsr #13
   1ee74:	andeq	r0, r0, r8, lsl r2
   1ee78:	muleq	r0, r0, r6
   1ee7c:	andeq	r3, r0, r4, lsl #13
   1ee80:	push	{r4, r5, r6, r7, r8, lr}
   1ee84:	mov	r4, r0
   1ee88:	ldr	ip, [r0]
   1ee8c:	ldr	r6, [sp, #24]
   1ee90:	add	ip, ip, #3
   1ee94:	add	r5, r6, #7
   1ee98:	bic	ip, ip, #3
   1ee9c:	bic	r5, r5, #3
   1eea0:	add	lr, ip, r5
   1eea4:	ldr	r0, [pc, #120]	; 1ef24 <mount@plt+0xcdc4>
   1eea8:	cmp	lr, r1
   1eeac:	add	r0, pc, r0
   1eeb0:	bhi	1eefc <mount@plt+0xcd9c>
   1eeb4:	add	r0, r4, ip
   1eeb8:	add	r7, r6, #4
   1eebc:	cmp	r6, #0
   1eec0:	strh	r2, [r0, #2]
   1eec4:	strh	r7, [r4, ip]
   1eec8:	bne	1eed8 <mount@plt+0xcd78>
   1eecc:	mov	r0, #0
   1eed0:	str	lr, [r4]
   1eed4:	pop	{r4, r5, r6, r7, r8, pc}
   1eed8:	mov	r2, r6
   1eedc:	mov	r1, r3
   1eee0:	add	r0, r0, #4
   1eee4:	bl	11c44 <memcpy@plt>
   1eee8:	ldr	lr, [r4]
   1eeec:	add	lr, lr, #3
   1eef0:	bic	lr, lr, #3
   1eef4:	add	lr, lr, r5
   1eef8:	b	1eecc <mount@plt+0xcd6c>
   1eefc:	ldr	ip, [pc, #36]	; 1ef28 <mount@plt+0xcdc8>
   1ef00:	ldr	r2, [pc, #36]	; 1ef2c <mount@plt+0xcdcc>
   1ef04:	mov	r3, r1
   1ef08:	ldr	r0, [r0, ip]
   1ef0c:	add	r2, pc, r2
   1ef10:	mov	r1, #1
   1ef14:	ldr	r0, [r0]
   1ef18:	bl	11f74 <__fprintf_chk@plt>
   1ef1c:	mvn	r0, #0
   1ef20:	pop	{r4, r5, r6, r7, r8, pc}
   1ef24:	andeq	r4, r1, ip, asr #2
   1ef28:	andeq	r0, r0, r8, lsl r2
   1ef2c:	andeq	r3, r0, r8, ror #11
   1ef30:	push	{lr}		; (str lr, [sp, #-4]!)
   1ef34:	sub	sp, sp, #12
   1ef38:	mov	r3, #0
   1ef3c:	str	r3, [sp]
   1ef40:	bl	1ee80 <mount@plt+0xcd20>
   1ef44:	add	sp, sp, #12
   1ef48:	pop	{pc}		; (ldr pc, [sp], #4)
   1ef4c:	push	{lr}		; (str lr, [sp, #-4]!)
   1ef50:	sub	sp, sp, #20
   1ef54:	mov	ip, #1
   1ef58:	strb	r3, [sp, #15]
   1ef5c:	str	ip, [sp]
   1ef60:	add	r3, sp, #15
   1ef64:	bl	1ee80 <mount@plt+0xcd20>
   1ef68:	add	sp, sp, #20
   1ef6c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ef70:	push	{lr}		; (str lr, [sp, #-4]!)
   1ef74:	sub	sp, sp, #20
   1ef78:	mov	ip, #2
   1ef7c:	strh	r3, [sp, #14]
   1ef80:	str	ip, [sp]
   1ef84:	add	r3, sp, #14
   1ef88:	bl	1ee80 <mount@plt+0xcd20>
   1ef8c:	add	sp, sp, #20
   1ef90:	pop	{pc}		; (ldr pc, [sp], #4)
   1ef94:	push	{lr}		; (str lr, [sp, #-4]!)
   1ef98:	sub	sp, sp, #20
   1ef9c:	mov	ip, #4
   1efa0:	str	r3, [sp, #12]
   1efa4:	str	ip, [sp]
   1efa8:	add	r3, sp, #12
   1efac:	bl	1ee80 <mount@plt+0xcd20>
   1efb0:	add	sp, sp, #20
   1efb4:	pop	{pc}		; (ldr pc, [sp], #4)
   1efb8:	push	{lr}		; (str lr, [sp, #-4]!)
   1efbc:	sub	sp, sp, #12
   1efc0:	mov	r3, #8
   1efc4:	str	r3, [sp]
   1efc8:	add	r3, sp, #16
   1efcc:	bl	1ee80 <mount@plt+0xcd20>
   1efd0:	add	sp, sp, #12
   1efd4:	pop	{pc}		; (ldr pc, [sp], #4)
   1efd8:	push	{r4, r5, r6, r7, lr}
   1efdc:	mov	r5, r0
   1efe0:	sub	sp, sp, #12
   1efe4:	mov	r0, r3
   1efe8:	mov	r4, r3
   1efec:	mov	r6, r1
   1eff0:	mov	r7, r2
   1eff4:	bl	11e9c <strlen@plt>
   1eff8:	mov	r3, r4
   1effc:	mov	r2, r7
   1f000:	mov	r1, r6
   1f004:	add	r0, r0, #1
   1f008:	str	r0, [sp]
   1f00c:	mov	r0, r5
   1f010:	bl	1ee80 <mount@plt+0xcd20>
   1f014:	add	sp, sp, #12
   1f018:	pop	{r4, r5, r6, r7, pc}
   1f01c:	push	{r4, r5, r6, lr}
   1f020:	mov	r4, r0
   1f024:	ldr	r0, [r0]
   1f028:	mov	r6, r3
   1f02c:	add	r0, r0, #3
   1f030:	add	r3, r3, #3
   1f034:	bic	r0, r0, #3
   1f038:	bic	r5, r3, #3
   1f03c:	add	r3, r0, r5
   1f040:	ldr	ip, [pc, #124]	; 1f0c4 <mount@plt+0xcf64>
   1f044:	cmp	r3, r1
   1f048:	add	ip, pc, ip
   1f04c:	bhi	1f09c <mount@plt+0xcf3c>
   1f050:	mov	r1, r2
   1f054:	add	r0, r4, r0
   1f058:	mov	r2, r6
   1f05c:	bl	11c44 <memcpy@plt>
   1f060:	ldr	r0, [r4]
   1f064:	sub	r2, r5, r6
   1f068:	add	r0, r0, #3
   1f06c:	bic	r0, r0, #3
   1f070:	add	r0, r0, r6
   1f074:	add	r0, r4, r0
   1f078:	mov	r1, #0
   1f07c:	bl	11efc <memset@plt>
   1f080:	ldr	r3, [r4]
   1f084:	mov	r0, #0
   1f088:	add	r3, r3, #3
   1f08c:	bic	r3, r3, #3
   1f090:	add	r3, r3, r5
   1f094:	str	r3, [r4]
   1f098:	pop	{r4, r5, r6, pc}
   1f09c:	ldr	r0, [pc, #36]	; 1f0c8 <mount@plt+0xcf68>
   1f0a0:	ldr	r2, [pc, #36]	; 1f0cc <mount@plt+0xcf6c>
   1f0a4:	mov	r3, r1
   1f0a8:	ldr	r0, [ip, r0]
   1f0ac:	add	r2, pc, r2
   1f0b0:	mov	r1, #1
   1f0b4:	ldr	r0, [r0]
   1f0b8:	bl	11f74 <__fprintf_chk@plt>
   1f0bc:	mvn	r0, #0
   1f0c0:	pop	{r4, r5, r6, pc}
   1f0c4:			; <UNDEFINED> instruction: 0x00013fb0
   1f0c8:	andeq	r0, r0, r8, lsl r2
   1f0cc:	andeq	r3, r0, r8, ror r4
   1f0d0:	ldr	ip, [r0]
   1f0d4:	push	{r4, lr}
   1f0d8:	sub	sp, sp, #8
   1f0dc:	mov	r3, #0
   1f0e0:	add	ip, ip, #3
   1f0e4:	bic	ip, ip, #3
   1f0e8:	str	r3, [sp]
   1f0ec:	add	r4, r0, ip
   1f0f0:	bl	1ee80 <mount@plt+0xcd20>
   1f0f4:	mov	r0, r4
   1f0f8:	add	sp, sp, #8
   1f0fc:	pop	{r4, pc}
   1f100:	mov	r3, r0
   1f104:	ldr	r0, [r0]
   1f108:	add	r2, r0, #3
   1f10c:	bic	r2, r2, #3
   1f110:	add	r3, r3, r2
   1f114:	sub	r3, r3, r1
   1f118:	strh	r3, [r1]
   1f11c:	bx	lr
   1f120:	push	{r4, r5, r6, r7, lr}
   1f124:	sub	sp, sp, #12
   1f128:	ldr	r4, [r0]
   1f12c:	ldr	ip, [sp, #32]
   1f130:	add	r4, r4, #3
   1f134:	mov	r5, r0
   1f138:	str	ip, [sp]
   1f13c:	mov	r6, r1
   1f140:	mov	r7, r2
   1f144:	bic	r4, r4, #3
   1f148:	add	r4, r0, r4
   1f14c:	bl	1ee80 <mount@plt+0xcd20>
   1f150:	mov	r2, r7
   1f154:	mov	r1, r6
   1f158:	mov	r0, r5
   1f15c:	bl	1f0d0 <mount@plt+0xcf70>
   1f160:	mov	r0, r4
   1f164:	add	sp, sp, #12
   1f168:	pop	{r4, r5, r6, r7, pc}
   1f16c:	ldr	r3, [r0]
   1f170:	ldrh	r2, [r1]
   1f174:	add	r3, r3, #3
   1f178:	bic	r3, r3, #3
   1f17c:	add	r3, r0, r3
   1f180:	add	r2, r2, #3
   1f184:	push	{r4, lr}
   1f188:	sub	r3, r3, r1
   1f18c:	mov	r4, r0
   1f190:	bic	r2, r2, #3
   1f194:	strh	r3, [r1]
   1f198:	add	r1, r1, r2
   1f19c:	bl	1f100 <mount@plt+0xcfa0>
   1f1a0:	ldr	r0, [r4]
   1f1a4:	pop	{r4, pc}
   1f1a8:	ldrh	ip, [r0]
   1f1ac:	push	{r4, lr}
   1f1b0:	add	ip, ip, #3
   1f1b4:	bic	ip, ip, #3
   1f1b8:	add	lr, ip, #8
   1f1bc:	cmp	lr, r1
   1f1c0:	ldr	lr, [pc, #96]	; 1f228 <mount@plt+0xd0c8>
   1f1c4:	add	lr, pc, lr
   1f1c8:	bhi	1f200 <mount@plt+0xd0a0>
   1f1cc:	add	r1, r0, ip
   1f1d0:	mov	lr, #8
   1f1d4:	strh	r2, [r1, #2]
   1f1d8:	strh	lr, [r0, ip]
   1f1dc:	str	r3, [r1, #4]
   1f1e0:	ldrh	r3, [r0]
   1f1e4:	mov	r2, #0
   1f1e8:	add	r3, r3, #3
   1f1ec:	bic	r3, r3, #3
   1f1f0:	add	r3, r3, lr
   1f1f4:	strh	r3, [r0]
   1f1f8:	mov	r0, r2
   1f1fc:	pop	{r4, pc}
   1f200:	mov	r3, r1
   1f204:	ldr	r1, [pc, #32]	; 1f22c <mount@plt+0xd0cc>
   1f208:	ldr	r2, [pc, #32]	; 1f230 <mount@plt+0xd0d0>
   1f20c:	ldr	r0, [lr, r1]
   1f210:	add	r2, pc, r2
   1f214:	mov	r1, #1
   1f218:	ldr	r0, [r0]
   1f21c:	bl	11f74 <__fprintf_chk@plt>
   1f220:	mvn	r2, #0
   1f224:	b	1f1f8 <mount@plt+0xd098>
   1f228:	andeq	r3, r1, r4, lsr lr
   1f22c:	andeq	r0, r0, r8, lsl r2
   1f230:	andeq	r3, r0, r4, asr #6
   1f234:	push	{r4, r5, r6, lr}
   1f238:	mov	r5, r0
   1f23c:	ldrh	ip, [r0]
   1f240:	ldr	lr, [sp, #16]
   1f244:	add	ip, ip, #3
   1f248:	add	r0, lr, #7
   1f24c:	bic	r0, r0, #3
   1f250:	bic	ip, ip, #3
   1f254:	add	r0, r0, ip
   1f258:	cmp	r0, r1
   1f25c:	ldr	r0, [pc, #128]	; 1f2e4 <mount@plt+0xd184>
   1f260:	add	r0, pc, r0
   1f264:	bhi	1f2bc <mount@plt+0xd15c>
   1f268:	add	r4, lr, #4
   1f26c:	add	r0, r5, ip
   1f270:	uxth	r4, r4
   1f274:	cmp	lr, #0
   1f278:	strh	r2, [r0, #2]
   1f27c:	strh	r4, [r5, ip]
   1f280:	bne	1f2a8 <mount@plt+0xd148>
   1f284:	ldrh	r3, [r5]
   1f288:	add	r4, r4, #3
   1f28c:	bic	r4, r4, #3
   1f290:	add	r3, r3, #3
   1f294:	bic	r3, r3, #3
   1f298:	add	r4, r3, r4
   1f29c:	mov	r0, #0
   1f2a0:	strh	r4, [r5]
   1f2a4:	pop	{r4, r5, r6, pc}
   1f2a8:	mov	r2, lr
   1f2ac:	mov	r1, r3
   1f2b0:	add	r0, r0, #4
   1f2b4:	bl	11c44 <memcpy@plt>
   1f2b8:	b	1f284 <mount@plt+0xd124>
   1f2bc:	ldr	ip, [pc, #36]	; 1f2e8 <mount@plt+0xd188>
   1f2c0:	ldr	r2, [pc, #36]	; 1f2ec <mount@plt+0xd18c>
   1f2c4:	mov	r3, r1
   1f2c8:	ldr	r0, [r0, ip]
   1f2cc:	add	r2, pc, r2
   1f2d0:	mov	r1, #1
   1f2d4:	ldr	r0, [r0]
   1f2d8:	bl	11f74 <__fprintf_chk@plt>
   1f2dc:	mvn	r0, #0
   1f2e0:	pop	{r4, r5, r6, pc}
   1f2e4:	muleq	r1, r8, sp
   1f2e8:	andeq	r0, r0, r8, lsl r2
   1f2ec:	andeq	r3, r0, r0, asr #5
   1f2f0:	push	{lr}		; (str lr, [sp, #-4]!)
   1f2f4:	sub	sp, sp, #20
   1f2f8:	mov	ip, #1
   1f2fc:	strb	r3, [sp, #15]
   1f300:	str	ip, [sp]
   1f304:	add	r3, sp, #15
   1f308:	bl	1f234 <mount@plt+0xd0d4>
   1f30c:	add	sp, sp, #20
   1f310:	pop	{pc}		; (ldr pc, [sp], #4)
   1f314:	push	{lr}		; (str lr, [sp, #-4]!)
   1f318:	sub	sp, sp, #20
   1f31c:	mov	ip, #2
   1f320:	strh	r3, [sp, #14]
   1f324:	str	ip, [sp]
   1f328:	add	r3, sp, #14
   1f32c:	bl	1f234 <mount@plt+0xd0d4>
   1f330:	add	sp, sp, #20
   1f334:	pop	{pc}		; (ldr pc, [sp], #4)
   1f338:	push	{lr}		; (str lr, [sp, #-4]!)
   1f33c:	sub	sp, sp, #12
   1f340:	mov	r3, #8
   1f344:	str	r3, [sp]
   1f348:	add	r3, sp, #16
   1f34c:	bl	1f234 <mount@plt+0xd0d4>
   1f350:	add	sp, sp, #12
   1f354:	pop	{pc}		; (ldr pc, [sp], #4)
   1f358:	ldrh	ip, [r0]
   1f35c:	push	{r4, lr}
   1f360:	sub	sp, sp, #8
   1f364:	mov	r3, #0
   1f368:	add	ip, ip, #3
   1f36c:	bic	ip, ip, #3
   1f370:	str	r3, [sp]
   1f374:	add	r4, r0, ip
   1f378:	bl	1f234 <mount@plt+0xd0d4>
   1f37c:	mov	r0, r4
   1f380:	add	sp, sp, #8
   1f384:	pop	{r4, pc}
   1f388:	ldrh	r3, [r0]
   1f38c:	add	r3, r3, #3
   1f390:	bic	r3, r3, #3
   1f394:	add	r3, r0, r3
   1f398:	sub	r3, r3, r1
   1f39c:	strh	r3, [r1]
   1f3a0:	ldrh	r0, [r0]
   1f3a4:	bx	lr
   1f3a8:	push	{r4, r5, r6, r7, lr}
   1f3ac:	mov	r6, r1
   1f3b0:	add	r1, r1, #1
   1f3b4:	sub	sp, sp, #12
   1f3b8:	mov	r5, r2
   1f3bc:	lsl	r2, r1, #2
   1f3c0:	mov	r1, #0
   1f3c4:	mov	r4, r3
   1f3c8:	ldrh	r7, [sp, #32]
   1f3cc:	bl	11efc <memset@plt>
   1f3d0:	ldr	ip, [pc, #196]	; 1f49c <mount@plt+0xd33c>
   1f3d4:	cmp	r4, #3
   1f3d8:	add	ip, pc, ip
   1f3dc:	ble	1f454 <mount@plt+0xd2f4>
   1f3e0:	ldrh	r2, [r5]
   1f3e4:	cmp	r2, #3
   1f3e8:	mov	lr, r2
   1f3ec:	bls	1f46c <mount@plt+0xd30c>
   1f3f0:	cmp	r4, r2
   1f3f4:	blt	1f46c <mount@plt+0xd30c>
   1f3f8:	mov	r3, r0
   1f3fc:	mvn	r0, r7
   1f400:	sxth	r0, r0
   1f404:	b	1f420 <mount@plt+0xd2c0>
   1f408:	ldrh	r2, [r5]
   1f40c:	cmp	r2, #3
   1f410:	mov	lr, r2
   1f414:	bls	1f46c <mount@plt+0xd30c>
   1f418:	cmp	r4, r2
   1f41c:	blt	1f46c <mount@plt+0xd30c>
   1f420:	ldrh	r1, [r5, #2]
   1f424:	add	r2, r2, #3
   1f428:	bic	r2, r2, #3
   1f42c:	and	r1, r1, r0
   1f430:	cmp	r1, r6
   1f434:	sub	r4, r4, r2
   1f438:	bgt	1f448 <mount@plt+0xd2e8>
   1f43c:	ldr	lr, [r3, r1, lsl #2]
   1f440:	cmp	lr, #0
   1f444:	streq	r5, [r3, r1, lsl #2]
   1f448:	cmp	r4, #3
   1f44c:	add	r5, r5, r2
   1f450:	bgt	1f408 <mount@plt+0xd2a8>
   1f454:	cmp	r4, #0
   1f458:	bne	1f468 <mount@plt+0xd308>
   1f45c:	mov	r0, #0
   1f460:	add	sp, sp, #12
   1f464:	pop	{r4, r5, r6, r7, pc}
   1f468:	ldrh	lr, [r5]
   1f46c:	ldr	r1, [pc, #44]	; 1f4a0 <mount@plt+0xd340>
   1f470:	ldr	r2, [pc, #44]	; 1f4a4 <mount@plt+0xd344>
   1f474:	mov	r3, r4
   1f478:	ldr	r0, [ip, r1]
   1f47c:	add	r2, pc, r2
   1f480:	str	lr, [sp]
   1f484:	mov	r1, #1
   1f488:	ldr	r0, [r0]
   1f48c:	bl	11f74 <__fprintf_chk@plt>
   1f490:	mov	r0, #0
   1f494:	add	sp, sp, #12
   1f498:	pop	{r4, r5, r6, r7, pc}
   1f49c:	andeq	r3, r1, r0, lsr #24
   1f4a0:	andeq	r0, r0, r8, lsl r2
   1f4a4:	andeq	r3, r0, r8, asr #2
   1f4a8:	push	{lr}		; (str lr, [sp, #-4]!)
   1f4ac:	sub	sp, sp, #12
   1f4b0:	mov	ip, #0
   1f4b4:	str	ip, [sp]
   1f4b8:	bl	1f3a8 <mount@plt+0xd248>
   1f4bc:	add	sp, sp, #12
   1f4c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1f4c4:	push	{r4, lr}
   1f4c8:	cmp	r2, #3
   1f4cc:	ldr	r4, [pc, #192]	; 1f594 <mount@plt+0xd434>
   1f4d0:	sub	sp, sp, #8
   1f4d4:	add	r4, pc, r4
   1f4d8:	ble	1f540 <mount@plt+0xd3e0>
   1f4dc:	ldrh	ip, [r1]
   1f4e0:	cmp	ip, #3
   1f4e4:	mov	lr, ip
   1f4e8:	bls	1f558 <mount@plt+0xd3f8>
   1f4ec:	cmp	r2, ip
   1f4f0:	blt	1f558 <mount@plt+0xd3f8>
   1f4f4:	ldrh	r3, [r1, #2]
   1f4f8:	cmp	r0, r3
   1f4fc:	bne	1f528 <mount@plt+0xd3c8>
   1f500:	b	1f588 <mount@plt+0xd428>
   1f504:	ldrh	ip, [r1]
   1f508:	cmp	ip, #3
   1f50c:	mov	lr, ip
   1f510:	bls	1f558 <mount@plt+0xd3f8>
   1f514:	cmp	r2, ip
   1f518:	blt	1f558 <mount@plt+0xd3f8>
   1f51c:	ldrh	r3, [r1, #2]
   1f520:	cmp	r3, r0
   1f524:	beq	1f588 <mount@plt+0xd428>
   1f528:	add	ip, ip, #3
   1f52c:	bic	ip, ip, #3
   1f530:	sub	r2, r2, ip
   1f534:	cmp	r2, #3
   1f538:	add	r1, r1, ip
   1f53c:	bgt	1f504 <mount@plt+0xd3a4>
   1f540:	cmp	r2, #0
   1f544:	moveq	r0, r2
   1f548:	bne	1f554 <mount@plt+0xd3f4>
   1f54c:	add	sp, sp, #8
   1f550:	pop	{r4, pc}
   1f554:	ldrh	lr, [r1]
   1f558:	ldr	r1, [pc, #56]	; 1f598 <mount@plt+0xd438>
   1f55c:	mov	r3, r2
   1f560:	ldr	r2, [pc, #52]	; 1f59c <mount@plt+0xd43c>
   1f564:	ldr	r0, [r4, r1]
   1f568:	add	r2, pc, r2
   1f56c:	str	lr, [sp]
   1f570:	mov	r1, #1
   1f574:	ldr	r0, [r0]
   1f578:	bl	11f74 <__fprintf_chk@plt>
   1f57c:	mov	r0, #0
   1f580:	add	sp, sp, #8
   1f584:	pop	{r4, pc}
   1f588:	mov	r0, r1
   1f58c:	add	sp, sp, #8
   1f590:	pop	{r4, pc}
   1f594:	andeq	r3, r1, r4, lsr #22
   1f598:	andeq	r0, r0, r8, lsl r2
   1f59c:	andeq	r3, r0, ip, asr r0
   1f5a0:	push	{r4, lr}
   1f5a4:	ldrh	lr, [r2]
   1f5a8:	sub	lr, lr, #4
   1f5ac:	cmp	lr, r3
   1f5b0:	bcc	1f5fc <mount@plt+0xd49c>
   1f5b4:	add	ip, r3, #3
   1f5b8:	bic	ip, ip, #3
   1f5bc:	add	ip, ip, #4
   1f5c0:	cmp	lr, ip
   1f5c4:	bcs	1f5e4 <mount@plt+0xd484>
   1f5c8:	add	r2, r1, #1
   1f5cc:	mov	r4, r1
   1f5d0:	lsl	r2, r2, #2
   1f5d4:	mov	r1, #0
   1f5d8:	bl	11efc <memset@plt>
   1f5dc:	mov	r0, #0
   1f5e0:	pop	{r4, pc}
   1f5e4:	ldrh	r3, [r2, ip]
   1f5e8:	add	r2, r2, ip
   1f5ec:	add	r2, r2, #4
   1f5f0:	sub	r3, r3, #4
   1f5f4:	pop	{r4, lr}
   1f5f8:	b	1f4a8 <mount@plt+0xd348>
   1f5fc:	mvn	r0, #0
   1f600:	pop	{r4, pc}
   1f604:	eor	r1, r1, #-2147483648	; 0x80000000
   1f608:	b	1f610 <mount@plt+0xd4b0>
   1f60c:	eor	r3, r3, #-2147483648	; 0x80000000
   1f610:	push	{r4, r5, lr}
   1f614:	lsl	r4, r1, #1
   1f618:	lsl	r5, r3, #1
   1f61c:	teq	r4, r5
   1f620:	teqeq	r0, r2
   1f624:	orrsne	ip, r4, r0
   1f628:	orrsne	ip, r5, r2
   1f62c:	mvnsne	ip, r4, asr #21
   1f630:	mvnsne	ip, r5, asr #21
   1f634:	beq	1f820 <mount@plt+0xd6c0>
   1f638:	lsr	r4, r4, #21
   1f63c:	rsbs	r5, r4, r5, lsr #21
   1f640:	rsblt	r5, r5, #0
   1f644:	ble	1f664 <mount@plt+0xd504>
   1f648:	add	r4, r4, r5
   1f64c:	eor	r2, r0, r2
   1f650:	eor	r3, r1, r3
   1f654:	eor	r0, r2, r0
   1f658:	eor	r1, r3, r1
   1f65c:	eor	r2, r0, r2
   1f660:	eor	r3, r1, r3
   1f664:	cmp	r5, #54	; 0x36
   1f668:	pophi	{r4, r5, pc}
   1f66c:	tst	r1, #-2147483648	; 0x80000000
   1f670:	lsl	r1, r1, #12
   1f674:	mov	ip, #1048576	; 0x100000
   1f678:	orr	r1, ip, r1, lsr #12
   1f67c:	beq	1f688 <mount@plt+0xd528>
   1f680:	rsbs	r0, r0, #0
   1f684:	rsc	r1, r1, #0
   1f688:	tst	r3, #-2147483648	; 0x80000000
   1f68c:	lsl	r3, r3, #12
   1f690:	orr	r3, ip, r3, lsr #12
   1f694:	beq	1f6a0 <mount@plt+0xd540>
   1f698:	rsbs	r2, r2, #0
   1f69c:	rsc	r3, r3, #0
   1f6a0:	teq	r4, r5
   1f6a4:	beq	1f808 <mount@plt+0xd6a8>
   1f6a8:	sub	r4, r4, #1
   1f6ac:	rsbs	lr, r5, #32
   1f6b0:	blt	1f6cc <mount@plt+0xd56c>
   1f6b4:	lsl	ip, r2, lr
   1f6b8:	adds	r0, r0, r2, lsr r5
   1f6bc:	adc	r1, r1, #0
   1f6c0:	adds	r0, r0, r3, lsl lr
   1f6c4:	adcs	r1, r1, r3, asr r5
   1f6c8:	b	1f6e8 <mount@plt+0xd588>
   1f6cc:	sub	r5, r5, #32
   1f6d0:	add	lr, lr, #32
   1f6d4:	cmp	r2, #1
   1f6d8:	lsl	ip, r3, lr
   1f6dc:	orrcs	ip, ip, #2
   1f6e0:	adds	r0, r0, r3, asr r5
   1f6e4:	adcs	r1, r1, r3, asr #31
   1f6e8:	and	r5, r1, #-2147483648	; 0x80000000
   1f6ec:	bpl	1f6fc <mount@plt+0xd59c>
   1f6f0:	rsbs	ip, ip, #0
   1f6f4:	rscs	r0, r0, #0
   1f6f8:	rsc	r1, r1, #0
   1f6fc:	cmp	r1, #1048576	; 0x100000
   1f700:	bcc	1f740 <mount@plt+0xd5e0>
   1f704:	cmp	r1, #2097152	; 0x200000
   1f708:	bcc	1f728 <mount@plt+0xd5c8>
   1f70c:	lsrs	r1, r1, #1
   1f710:	rrxs	r0, r0
   1f714:	rrx	ip, ip
   1f718:	add	r4, r4, #1
   1f71c:	lsl	r2, r4, #21
   1f720:	cmn	r2, #4194304	; 0x400000
   1f724:	bcs	1f880 <mount@plt+0xd720>
   1f728:	cmp	ip, #-2147483648	; 0x80000000
   1f72c:	lsrseq	ip, r0, #1
   1f730:	adcs	r0, r0, #0
   1f734:	adc	r1, r1, r4, lsl #20
   1f738:	orr	r1, r1, r5
   1f73c:	pop	{r4, r5, pc}
   1f740:	lsls	ip, ip, #1
   1f744:	adcs	r0, r0, r0
   1f748:	adc	r1, r1, r1
   1f74c:	tst	r1, #1048576	; 0x100000
   1f750:	sub	r4, r4, #1
   1f754:	bne	1f728 <mount@plt+0xd5c8>
   1f758:	teq	r1, #0
   1f75c:	moveq	r1, r0
   1f760:	moveq	r0, #0
   1f764:	clz	r3, r1
   1f768:	addeq	r3, r3, #32
   1f76c:	sub	r3, r3, #11
   1f770:	subs	r2, r3, #32
   1f774:	bge	1f798 <mount@plt+0xd638>
   1f778:	adds	r2, r2, #12
   1f77c:	ble	1f794 <mount@plt+0xd634>
   1f780:	add	ip, r2, #20
   1f784:	rsb	r2, r2, #12
   1f788:	lsl	r0, r1, ip
   1f78c:	lsr	r1, r1, r2
   1f790:	b	1f7a8 <mount@plt+0xd648>
   1f794:	add	r2, r2, #20
   1f798:	rsble	ip, r2, #32
   1f79c:	lsl	r1, r1, r2
   1f7a0:	orrle	r1, r1, r0, lsr ip
   1f7a4:	lslle	r0, r0, r2
   1f7a8:	subs	r4, r4, r3
   1f7ac:	addge	r1, r1, r4, lsl #20
   1f7b0:	orrge	r1, r1, r5
   1f7b4:	popge	{r4, r5, pc}
   1f7b8:	mvn	r4, r4
   1f7bc:	subs	r4, r4, #31
   1f7c0:	bge	1f7fc <mount@plt+0xd69c>
   1f7c4:	adds	r4, r4, #12
   1f7c8:	bgt	1f7e4 <mount@plt+0xd684>
   1f7cc:	add	r4, r4, #20
   1f7d0:	rsb	r2, r4, #32
   1f7d4:	lsr	r0, r0, r4
   1f7d8:	orr	r0, r0, r1, lsl r2
   1f7dc:	orr	r1, r5, r1, lsr r4
   1f7e0:	pop	{r4, r5, pc}
   1f7e4:	rsb	r4, r4, #12
   1f7e8:	rsb	r2, r4, #32
   1f7ec:	lsr	r0, r0, r2
   1f7f0:	orr	r0, r0, r1, lsl r4
   1f7f4:	mov	r1, r5
   1f7f8:	pop	{r4, r5, pc}
   1f7fc:	lsr	r0, r1, r4
   1f800:	mov	r1, r5
   1f804:	pop	{r4, r5, pc}
   1f808:	teq	r4, #0
   1f80c:	eor	r3, r3, #1048576	; 0x100000
   1f810:	eoreq	r1, r1, #1048576	; 0x100000
   1f814:	addeq	r4, r4, #1
   1f818:	subne	r5, r5, #1
   1f81c:	b	1f6a8 <mount@plt+0xd548>
   1f820:	mvns	ip, r4, asr #21
   1f824:	mvnsne	ip, r5, asr #21
   1f828:	beq	1f890 <mount@plt+0xd730>
   1f82c:	teq	r4, r5
   1f830:	teqeq	r0, r2
   1f834:	beq	1f848 <mount@plt+0xd6e8>
   1f838:	orrs	ip, r4, r0
   1f83c:	moveq	r1, r3
   1f840:	moveq	r0, r2
   1f844:	pop	{r4, r5, pc}
   1f848:	teq	r1, r3
   1f84c:	movne	r1, #0
   1f850:	movne	r0, #0
   1f854:	popne	{r4, r5, pc}
   1f858:	lsrs	ip, r4, #21
   1f85c:	bne	1f870 <mount@plt+0xd710>
   1f860:	lsls	r0, r0, #1
   1f864:	adcs	r1, r1, r1
   1f868:	orrcs	r1, r1, #-2147483648	; 0x80000000
   1f86c:	pop	{r4, r5, pc}
   1f870:	adds	r4, r4, #4194304	; 0x400000
   1f874:	addcc	r1, r1, #1048576	; 0x100000
   1f878:	popcc	{r4, r5, pc}
   1f87c:	and	r5, r1, #-2147483648	; 0x80000000
   1f880:	orr	r1, r5, #2130706432	; 0x7f000000
   1f884:	orr	r1, r1, #15728640	; 0xf00000
   1f888:	mov	r0, #0
   1f88c:	pop	{r4, r5, pc}
   1f890:	mvns	ip, r4, asr #21
   1f894:	movne	r1, r3
   1f898:	movne	r0, r2
   1f89c:	mvnseq	ip, r5, asr #21
   1f8a0:	movne	r3, r1
   1f8a4:	movne	r2, r0
   1f8a8:	orrs	r4, r0, r1, lsl #12
   1f8ac:	orrseq	r5, r2, r3, lsl #12
   1f8b0:	teqeq	r1, r3
   1f8b4:	orrne	r1, r1, #524288	; 0x80000
   1f8b8:	pop	{r4, r5, pc}
   1f8bc:	teq	r0, #0
   1f8c0:	moveq	r1, #0
   1f8c4:	bxeq	lr
   1f8c8:	push	{r4, r5, lr}
   1f8cc:	mov	r4, #1024	; 0x400
   1f8d0:	add	r4, r4, #50	; 0x32
   1f8d4:	mov	r5, #0
   1f8d8:	mov	r1, #0
   1f8dc:	b	1f758 <mount@plt+0xd5f8>
   1f8e0:	teq	r0, #0
   1f8e4:	moveq	r1, #0
   1f8e8:	bxeq	lr
   1f8ec:	push	{r4, r5, lr}
   1f8f0:	mov	r4, #1024	; 0x400
   1f8f4:	add	r4, r4, #50	; 0x32
   1f8f8:	ands	r5, r0, #-2147483648	; 0x80000000
   1f8fc:	rsbmi	r0, r0, #0
   1f900:	mov	r1, #0
   1f904:	b	1f758 <mount@plt+0xd5f8>
   1f908:	lsls	r2, r0, #1
   1f90c:	asr	r1, r2, #3
   1f910:	rrx	r1, r1
   1f914:	lsl	r0, r2, #28
   1f918:	andsne	r3, r2, #-16777216	; 0xff000000
   1f91c:	teqne	r3, #-16777216	; 0xff000000
   1f920:	eorne	r1, r1, #939524096	; 0x38000000
   1f924:	bxne	lr
   1f928:	bics	r2, r2, #-16777216	; 0xff000000
   1f92c:	bxeq	lr
   1f930:	teq	r3, #-16777216	; 0xff000000
   1f934:	orreq	r1, r1, #524288	; 0x80000
   1f938:	bxeq	lr
   1f93c:	push	{r4, r5, lr}
   1f940:	mov	r4, #896	; 0x380
   1f944:	and	r5, r1, #-2147483648	; 0x80000000
   1f948:	bic	r1, r1, #-2147483648	; 0x80000000
   1f94c:	b	1f758 <mount@plt+0xd5f8>
   1f950:	orrs	r2, r0, r1
   1f954:	bxeq	lr
   1f958:	push	{r4, r5, lr}
   1f95c:	mov	r5, #0
   1f960:	b	1f980 <mount@plt+0xd820>
   1f964:	orrs	r2, r0, r1
   1f968:	bxeq	lr
   1f96c:	push	{r4, r5, lr}
   1f970:	ands	r5, r1, #-2147483648	; 0x80000000
   1f974:	bpl	1f980 <mount@plt+0xd820>
   1f978:	rsbs	r0, r0, #0
   1f97c:	rsc	r1, r1, #0
   1f980:	mov	r4, #1024	; 0x400
   1f984:	add	r4, r4, #50	; 0x32
   1f988:	lsrs	ip, r1, #22
   1f98c:	beq	1f6fc <mount@plt+0xd59c>
   1f990:	mov	r2, #3
   1f994:	lsrs	ip, ip, #3
   1f998:	addne	r2, r2, #3
   1f99c:	lsrs	ip, ip, #3
   1f9a0:	addne	r2, r2, #3
   1f9a4:	add	r2, r2, ip, lsr #3
   1f9a8:	rsb	r3, r2, #32
   1f9ac:	lsl	ip, r0, r3
   1f9b0:	lsr	r0, r0, r2
   1f9b4:	orr	r0, r0, r1, lsl r3
   1f9b8:	lsr	r1, r1, r2
   1f9bc:	add	r4, r4, r2
   1f9c0:	b	1f6fc <mount@plt+0xd59c>
   1f9c4:	vmov	d7, r0, r1
   1f9c8:	vcmpe.f64	d7, #0.0
   1f9cc:	vmrs	APSR_nzcv, fpscr
   1f9d0:	bmi	1f9d8 <mount@plt+0xd878>
   1f9d4:	b	1f9f0 <mount@plt+0xd890>
   1f9d8:	push	{r4, lr}
   1f9dc:	eor	r1, r1, #-2147483648	; 0x80000000
   1f9e0:	bl	1f9f0 <mount@plt+0xd890>
   1f9e4:	rsbs	r0, r0, #0
   1f9e8:	rsc	r1, r1, #0
   1f9ec:	pop	{r4, pc}
   1f9f0:	vmov	d6, r0, r1
   1f9f4:	vldr	d7, [pc, #36]	; 1fa20 <mount@plt+0xd8c0>
   1f9f8:	vldr	d5, [pc, #40]	; 1fa28 <mount@plt+0xd8c8>
   1f9fc:	vmul.f64	d7, d6, d7
   1fa00:	vcvt.u32.f64	s14, d7
   1fa04:	vcvt.f64.u32	d4, s14
   1fa08:	vmov	r1, s14
   1fa0c:	vmls.f64	d6, d4, d5
   1fa10:	vcvt.u32.f64	s15, d6
   1fa14:	vmov	r0, s15
   1fa18:	bx	lr
   1fa1c:	nop			; (mov r0, r0)
   1fa20:	andeq	r0, r0, r0
   1fa24:	ldclcc	0, cr0, [r0]
   1fa28:	andeq	r0, r0, r0
   1fa2c:	mvnsmi	r0, r0
   1fa30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fa34:	mov	r7, r0
   1fa38:	ldr	r6, [pc, #72]	; 1fa88 <mount@plt+0xd928>
   1fa3c:	ldr	r5, [pc, #72]	; 1fa8c <mount@plt+0xd92c>
   1fa40:	add	r6, pc, r6
   1fa44:	add	r5, pc, r5
   1fa48:	sub	r6, r6, r5
   1fa4c:	mov	r8, r1
   1fa50:	mov	r9, r2
   1fa54:	bl	11b4c <calloc@plt-0x20>
   1fa58:	asrs	r6, r6, #2
   1fa5c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fa60:	mov	r4, #0
   1fa64:	add	r4, r4, #1
   1fa68:	ldr	r3, [r5], #4
   1fa6c:	mov	r2, r9
   1fa70:	mov	r1, r8
   1fa74:	mov	r0, r7
   1fa78:	blx	r3
   1fa7c:	cmp	r6, r4
   1fa80:	bne	1fa64 <mount@plt+0xd904>
   1fa84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fa88:	andeq	r3, r1, ip, asr r4
   1fa8c:	andeq	r3, r1, r4, asr r4
   1fa90:	bx	lr

Disassembly of section .fini:

0001fa94 <.fini>:
   1fa94:	push	{r3, lr}
   1fa98:	pop	{r3, pc}
