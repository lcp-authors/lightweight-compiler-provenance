
raspbian-preinstalled/lzmainfo:     file format elf32-littlearm


Disassembly of section .init:

00010824 <.init>:
   10824:	push	{r3, lr}
   10828:	bl	10c34 <abort@plt+0x2e8>
   1082c:	pop	{r3, pc}

Disassembly of section .plt:

00010830 <strcmp@plt-0x14>:
   10830:	push	{lr}		; (str lr, [sp, #-4]!)
   10834:	ldr	lr, [pc, #4]	; 10840 <strcmp@plt-0x4>
   10838:	add	lr, pc, lr
   1083c:	ldr	pc, [lr, #8]!
   10840:	andeq	r1, r1, r0, asr #15

00010844 <strcmp@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #1984]!	; 0x7c0

00010850 <free@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #69632	; 0x11000
   10858:	ldr	pc, [ip, #1976]!	; 0x7b8

0001085c <ferror@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #69632	; 0x11000
   10864:	ldr	pc, [ip, #1968]!	; 0x7b0

00010868 <dcgettext@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #69632	; 0x11000
   10870:	ldr	pc, [ip, #1960]!	; 0x7a8

00010874 <__stack_chk_fail@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #69632	; 0x11000
   1087c:	ldr	pc, [ip, #1952]!	; 0x7a0

00010880 <textdomain@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #69632	; 0x11000
   10888:	ldr	pc, [ip, #1944]!	; 0x798

0001088c <fread@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #69632	; 0x11000
   10894:	ldr	pc, [ip, #1936]!	; 0x790

00010898 <puts@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #69632	; 0x11000
   108a0:	ldr	pc, [ip, #1928]!	; 0x788

000108a4 <__libc_start_main@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1920]!	; 0x780

000108b0 <strerror@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1912]!	; 0x778

000108bc <__gmon_start__@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1904]!	; 0x770

000108c8 <getopt_long@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1896]!	; 0x768

000108d4 <exit@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1888]!	; 0x760

000108e0 <lzma_properties_decode@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1880]!	; 0x758

000108ec <__errno_location@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1872]!	; 0x750

000108f8 <putchar@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1864]!	; 0x748

00010904 <__printf_chk@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1856]!	; 0x740

00010910 <__fprintf_chk@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1848]!	; 0x738

0001091c <fclose@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1840]!	; 0x730

00010928 <setlocale@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1832]!	; 0x728

00010934 <fopen64@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #69632	; 0x11000
   1093c:	ldr	pc, [ip, #1824]!	; 0x720

00010940 <bindtextdomain@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #69632	; 0x11000
   10948:	ldr	pc, [ip, #1816]!	; 0x718

0001094c <abort@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #69632	; 0x11000
   10954:	ldr	pc, [ip, #1808]!	; 0x710

Disassembly of section .text:

00010958 <.text>:
   10958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1095c:	mov	r7, r0
   10960:	sub	sp, sp, #20
   10964:	mov	r0, r1
   10968:	mov	r5, r1
   1096c:	bl	10fb8 <abort@plt+0x66c>
   10970:	ldr	r1, [pc, #560]	; 10ba8 <abort@plt+0x25c>
   10974:	mov	r0, #6
   10978:	bl	10928 <setlocale@plt>
   1097c:	ldr	r1, [pc, #552]	; 10bac <abort@plt+0x260>
   10980:	ldr	r0, [pc, #552]	; 10bb0 <abort@plt+0x264>
   10984:	bl	10940 <bindtextdomain@plt>
   10988:	mov	r4, #0
   1098c:	ldr	r0, [pc, #540]	; 10bb0 <abort@plt+0x264>
   10990:	bl	10880 <textdomain@plt>
   10994:	mov	r1, r5
   10998:	mov	r0, r7
   1099c:	str	r4, [sp]
   109a0:	ldr	r3, [pc, #524]	; 10bb4 <abort@plt+0x268>
   109a4:	ldr	r2, [pc, #508]	; 10ba8 <abort@plt+0x25c>
   109a8:	bl	108c8 <getopt_long@plt>
   109ac:	cmn	r0, #1
   109b0:	beq	10a80 <abort@plt+0x134>
   109b4:	cmp	r0, r4
   109b8:	mov	r6, r0
   109bc:	beq	109e8 <abort@plt+0x9c>
   109c0:	cmp	r0, #1
   109c4:	beq	109d0 <abort@plt+0x84>
   109c8:	mov	r0, #1
   109cc:	bl	108d4 <exit@plt>
   109d0:	ldr	r0, [pc, #480]	; 10bb8 <abort@plt+0x26c>
   109d4:	bl	10898 <puts@plt>
   109d8:	mov	r2, r6
   109dc:	mov	r1, r6
   109e0:	mov	r0, r4
   109e4:	bl	10fcc <abort@plt+0x680>
   109e8:	mov	r2, #5
   109ec:	ldr	r1, [pc, #456]	; 10bbc <abort@plt+0x270>
   109f0:	bl	10868 <dcgettext@plt>
   109f4:	ldr	r3, [pc, #452]	; 10bc0 <abort@plt+0x274>
   109f8:	ldr	r2, [r3]
   109fc:	mov	r1, r0
   10a00:	mov	r0, #1
   10a04:	bl	10904 <__printf_chk@plt>
   10a08:	mov	r2, #5
   10a0c:	ldr	r1, [pc, #432]	; 10bc4 <abort@plt+0x278>
   10a10:	mov	r0, r6
   10a14:	bl	10868 <dcgettext@plt>
   10a18:	mov	r1, r0
   10a1c:	mov	r0, #1
   10a20:	bl	10904 <__printf_chk@plt>
   10a24:	mov	r0, #10
   10a28:	bl	108f8 <putchar@plt>
   10a2c:	mov	r2, #5
   10a30:	ldr	r1, [pc, #400]	; 10bc8 <abort@plt+0x27c>
   10a34:	mov	r0, r6
   10a38:	bl	10868 <dcgettext@plt>
   10a3c:	ldr	r2, [pc, #392]	; 10bcc <abort@plt+0x280>
   10a40:	mov	r1, r0
   10a44:	mov	r0, #1
   10a48:	bl	10904 <__printf_chk@plt>
   10a4c:	mov	r2, #5
   10a50:	ldr	r1, [pc, #376]	; 10bd0 <abort@plt+0x284>
   10a54:	mov	r0, r6
   10a58:	bl	10868 <dcgettext@plt>
   10a5c:	ldr	r2, [pc, #368]	; 10bd4 <abort@plt+0x288>
   10a60:	ldr	r3, [pc, #368]	; 10bd8 <abort@plt+0x28c>
   10a64:	mov	r1, r0
   10a68:	mov	r0, #1
   10a6c:	bl	10904 <__printf_chk@plt>
   10a70:	mov	r2, #1
   10a74:	mov	r0, r6
   10a78:	mov	r1, r2
   10a7c:	bl	10fcc <abort@plt+0x680>
   10a80:	ldr	r6, [pc, #340]	; 10bdc <abort@plt+0x290>
   10a84:	ldr	r3, [r6]
   10a88:	cmp	r3, r7
   10a8c:	beq	10b2c <abort@plt+0x1e0>
   10a90:	mov	r0, #10
   10a94:	bl	108f8 <putchar@plt>
   10a98:	ldr	r8, [pc, #320]	; 10be0 <abort@plt+0x294>
   10a9c:	ldr	r3, [r6]
   10aa0:	ldr	sl, [pc, #316]	; 10be4 <abort@plt+0x298>
   10aa4:	ldr	r9, [pc, #316]	; 10be8 <abort@plt+0x29c>
   10aa8:	b	10ad4 <abort@plt+0x188>
   10aac:	ldr	r1, [r9]
   10ab0:	ldr	r0, [pc, #308]	; 10bec <abort@plt+0x2a0>
   10ab4:	bl	10ce8 <abort@plt+0x39c>
   10ab8:	cmp	r0, #0
   10abc:	movne	r4, #1
   10ac0:	ldr	r3, [r6]
   10ac4:	add	r3, r3, #1
   10ac8:	cmp	r3, r7
   10acc:	str	r3, [r6]
   10ad0:	bge	10b44 <abort@plt+0x1f8>
   10ad4:	ldr	fp, [r5, r3, lsl #2]
   10ad8:	mov	r1, r8
   10adc:	mov	r0, fp
   10ae0:	bl	10844 <strcmp@plt>
   10ae4:	cmp	r0, #0
   10ae8:	beq	10aac <abort@plt+0x160>
   10aec:	mov	r0, fp
   10af0:	mov	r1, sl
   10af4:	bl	10934 <fopen64@plt>
   10af8:	subs	fp, r0, #0
   10afc:	beq	10b54 <abort@plt+0x208>
   10b00:	ldr	r3, [r6]
   10b04:	mov	r1, fp
   10b08:	ldr	r0, [r5, r3, lsl #2]
   10b0c:	bl	10ce8 <abort@plt+0x39c>
   10b10:	cmp	r0, #0
   10b14:	mov	r0, #10
   10b18:	movne	r4, #1
   10b1c:	bl	108f8 <putchar@plt>
   10b20:	mov	r0, fp
   10b24:	bl	1091c <fclose@plt>
   10b28:	b	10ac0 <abort@plt+0x174>
   10b2c:	ldr	r3, [pc, #180]	; 10be8 <abort@plt+0x29c>
   10b30:	ldr	r0, [pc, #180]	; 10bec <abort@plt+0x2a0>
   10b34:	ldr	r1, [r3]
   10b38:	bl	10ce8 <abort@plt+0x39c>
   10b3c:	adds	r4, r0, #0
   10b40:	movne	r4, #1
   10b44:	mov	r2, #1
   10b48:	mov	r0, r4
   10b4c:	mov	r1, r2
   10b50:	bl	10fcc <abort@plt+0x680>
   10b54:	ldr	r3, [pc, #148]	; 10bf0 <abort@plt+0x2a4>
   10b58:	ldr	r2, [r6]
   10b5c:	mov	r4, #1
   10b60:	ldr	fp, [r3]
   10b64:	ldr	r3, [pc, #84]	; 10bc0 <abort@plt+0x274>
   10b68:	ldr	r2, [r5, r2, lsl #2]
   10b6c:	ldr	r3, [r3]
   10b70:	str	r2, [sp, #8]
   10b74:	str	r3, [sp, #12]
   10b78:	bl	108ec <__errno_location@plt>
   10b7c:	ldr	r0, [r0]
   10b80:	bl	108b0 <strerror@plt>
   10b84:	ldr	r2, [sp, #8]
   10b88:	ldr	r3, [sp, #12]
   10b8c:	str	r2, [sp]
   10b90:	mov	r1, r4
   10b94:	ldr	r2, [pc, #88]	; 10bf4 <abort@plt+0x2a8>
   10b98:	str	r0, [sp, #4]
   10b9c:	mov	r0, fp
   10ba0:	bl	10910 <__fprintf_chk@plt>
   10ba4:	b	10ac0 <abort@plt+0x174>
   10ba8:	andeq	r1, r1, r0, asr #3
   10bac:	andeq	r1, r1, r0, lsr #5
   10bb0:			; <UNDEFINED> instruction: 0x000112b4
   10bb4:	andeq	r1, r1, r4, lsr r1
   10bb8:	ldrdeq	r1, [r1], -r0
   10bbc:			; <UNDEFINED> instruction: 0x000112b8
   10bc0:	andeq	r2, r2, r8, ror r0
   10bc4:	andeq	r1, r1, r4, lsl r3
   10bc8:	andeq	r1, r1, ip, asr #6
   10bcc:	andeq	r1, r1, ip, ror r3
   10bd0:	muleq	r1, r8, r3
   10bd4:	andeq	r1, r1, r4, asr #7
   10bd8:	andeq	r1, r1, ip, lsr #7
   10bdc:	andeq	r2, r2, r0, lsl #1
   10be0:	strdeq	r1, [r1], -r4
   10be4:	andeq	r1, r1, r0, lsl r3
   10be8:	muleq	r2, r0, r0
   10bec:	andeq	r1, r1, ip, ror #7
   10bf0:	andeq	r2, r2, r8, lsl #1
   10bf4:	andeq	r1, r1, ip, lsl #3
   10bf8:	mov	fp, #0
   10bfc:	mov	lr, #0
   10c00:	pop	{r1}		; (ldr r1, [sp], #4)
   10c04:	mov	r2, sp
   10c08:	push	{r2}		; (str r2, [sp, #-4]!)
   10c0c:	push	{r0}		; (str r0, [sp, #-4]!)
   10c10:	ldr	ip, [pc, #16]	; 10c28 <abort@plt+0x2dc>
   10c14:	push	{ip}		; (str ip, [sp, #-4]!)
   10c18:	ldr	r0, [pc, #12]	; 10c2c <abort@plt+0x2e0>
   10c1c:	ldr	r3, [pc, #12]	; 10c30 <abort@plt+0x2e4>
   10c20:	bl	108a4 <__libc_start_main@plt>
   10c24:	bl	1094c <abort@plt>
   10c28:	andeq	r1, r1, r4, lsr #2
   10c2c:	andeq	r0, r1, r8, asr r9
   10c30:	andeq	r1, r1, r4, asr #1
   10c34:	ldr	r3, [pc, #20]	; 10c50 <abort@plt+0x304>
   10c38:	ldr	r2, [pc, #20]	; 10c54 <abort@plt+0x308>
   10c3c:	add	r3, pc, r3
   10c40:	ldr	r2, [r3, r2]
   10c44:	cmp	r2, #0
   10c48:	bxeq	lr
   10c4c:	b	108bc <__gmon_start__@plt>
   10c50:			; <UNDEFINED> instruction: 0x000113bc
   10c54:	andeq	r0, r0, r8, rrx
   10c58:	ldr	r0, [pc, #24]	; 10c78 <abort@plt+0x32c>
   10c5c:	ldr	r3, [pc, #24]	; 10c7c <abort@plt+0x330>
   10c60:	cmp	r3, r0
   10c64:	bxeq	lr
   10c68:	ldr	r3, [pc, #16]	; 10c80 <abort@plt+0x334>
   10c6c:	cmp	r3, #0
   10c70:	bxeq	lr
   10c74:	bx	r3
   10c78:	andeq	r2, r2, r4, ror r0
   10c7c:	andeq	r2, r2, r4, ror r0
   10c80:	andeq	r0, r0, r0
   10c84:	ldr	r0, [pc, #36]	; 10cb0 <abort@plt+0x364>
   10c88:	ldr	r1, [pc, #36]	; 10cb4 <abort@plt+0x368>
   10c8c:	sub	r1, r1, r0
   10c90:	asr	r1, r1, #2
   10c94:	add	r1, r1, r1, lsr #31
   10c98:	asrs	r1, r1, #1
   10c9c:	bxeq	lr
   10ca0:	ldr	r3, [pc, #16]	; 10cb8 <abort@plt+0x36c>
   10ca4:	cmp	r3, #0
   10ca8:	bxeq	lr
   10cac:	bx	r3
   10cb0:	andeq	r2, r2, r4, ror r0
   10cb4:	andeq	r2, r2, r4, ror r0
   10cb8:	andeq	r0, r0, r0
   10cbc:	push	{r4, lr}
   10cc0:	ldr	r4, [pc, #24]	; 10ce0 <abort@plt+0x394>
   10cc4:	ldrb	r3, [r4]
   10cc8:	cmp	r3, #0
   10ccc:	popne	{r4, pc}
   10cd0:	bl	10c58 <abort@plt+0x30c>
   10cd4:	mov	r3, #1
   10cd8:	strb	r3, [r4]
   10cdc:	pop	{r4, pc}
   10ce0:	muleq	r2, r8, r0
   10ce4:	b	10c84 <abort@plt+0x338>
   10ce8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10cec:	sub	sp, sp, #56	; 0x38
   10cf0:	ldr	r6, [pc, #652]	; 10f84 <abort@plt+0x638>
   10cf4:	mov	r3, r1
   10cf8:	mov	r7, r1
   10cfc:	ldr	ip, [r6]
   10d00:	mov	r8, r0
   10d04:	mov	r2, #13
   10d08:	add	r0, sp, #36	; 0x24
   10d0c:	mov	r1, #1
   10d10:	str	ip, [sp, #52]	; 0x34
   10d14:	bl	1088c <fread@plt>
   10d18:	cmp	r0, #13
   10d1c:	beq	10d94 <abort@plt+0x448>
   10d20:	ldr	r2, [pc, #608]	; 10f88 <abort@plt+0x63c>
   10d24:	ldr	r3, [pc, #608]	; 10f8c <abort@plt+0x640>
   10d28:	mov	r0, r7
   10d2c:	ldr	r4, [r2]
   10d30:	ldr	r5, [r3]
   10d34:	bl	1085c <ferror@plt>
   10d38:	cmp	r0, #0
   10d3c:	bne	10d84 <abort@plt+0x438>
   10d40:	mov	r2, #5
   10d44:	ldr	r1, [pc, #580]	; 10f90 <abort@plt+0x644>
   10d48:	bl	10868 <dcgettext@plt>
   10d4c:	str	r0, [sp, #4]
   10d50:	str	r8, [sp]
   10d54:	mov	r3, r5
   10d58:	mov	r0, r4
   10d5c:	ldr	r2, [pc, #560]	; 10f94 <abort@plt+0x648>
   10d60:	mov	r1, #1
   10d64:	bl	10910 <__fprintf_chk@plt>
   10d68:	mov	r0, #1
   10d6c:	ldr	r2, [sp, #52]	; 0x34
   10d70:	ldr	r3, [r6]
   10d74:	cmp	r2, r3
   10d78:	bne	10f64 <abort@plt+0x618>
   10d7c:	add	sp, sp, #56	; 0x38
   10d80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10d84:	bl	108ec <__errno_location@plt>
   10d88:	ldr	r0, [r0]
   10d8c:	bl	108b0 <strerror@plt>
   10d90:	b	10d4c <abort@plt+0x400>
   10d94:	mov	r4, #0
   10d98:	mov	sl, #1
   10d9c:	mov	fp, #1073741824	; 0x40000000
   10da0:	add	r2, sp, #36	; 0x24
   10da4:	mov	r1, r4
   10da8:	mov	r3, #5
   10dac:	add	r0, sp, #16
   10db0:	str	r4, [sp, #28]
   10db4:	str	r4, [sp, #24]
   10db8:	strd	sl, [sp, #16]
   10dbc:	bl	108e0 <lzma_properties_decode@plt>
   10dc0:	cmp	r0, #5
   10dc4:	beq	10f68 <abort@plt+0x61c>
   10dc8:	cmp	r0, #8
   10dcc:	bne	10e14 <abort@plt+0x4c8>
   10dd0:	ldr	ip, [pc, #432]	; 10f88 <abort@plt+0x63c>
   10dd4:	ldr	r3, [pc, #432]	; 10f8c <abort@plt+0x640>
   10dd8:	mov	r0, r4
   10ddc:	mov	r2, #5
   10de0:	ldr	r1, [pc, #432]	; 10f98 <abort@plt+0x64c>
   10de4:	ldr	r4, [ip]
   10de8:	ldr	r5, [r3]
   10dec:	bl	10868 <dcgettext@plt>
   10df0:	mov	r3, r5
   10df4:	str	r8, [sp]
   10df8:	ldr	r2, [pc, #404]	; 10f94 <abort@plt+0x648>
   10dfc:	mov	r1, #1
   10e00:	str	r0, [sp, #4]
   10e04:	mov	r0, r4
   10e08:	bl	10910 <__fprintf_chk@plt>
   10e0c:	mov	r0, #1
   10e10:	b	10d6c <abort@plt+0x420>
   10e14:	cmp	r0, r4
   10e18:	beq	10e5c <abort@plt+0x510>
   10e1c:	ldr	ip, [pc, #356]	; 10f88 <abort@plt+0x63c>
   10e20:	ldr	r3, [pc, #356]	; 10f8c <abort@plt+0x640>
   10e24:	mov	r0, r4
   10e28:	mov	r2, #5
   10e2c:	ldr	r1, [pc, #360]	; 10f9c <abort@plt+0x650>
   10e30:	ldr	r4, [ip]
   10e34:	ldr	r5, [r3]
   10e38:	bl	10868 <dcgettext@plt>
   10e3c:	str	r0, [sp]
   10e40:	mov	r3, r5
   10e44:	ldr	r2, [pc, #340]	; 10fa0 <abort@plt+0x654>
   10e48:	mov	r1, #1
   10e4c:	mov	r0, r4
   10e50:	bl	10910 <__fprintf_chk@plt>
   10e54:	mov	r0, #1
   10e58:	bl	108d4 <exit@plt>
   10e5c:	add	r1, sp, #40	; 0x28
   10e60:	mov	r4, #0
   10e64:	mov	r5, #0
   10e68:	ldrb	sl, [r1, #1]!
   10e6c:	sub	r3, r0, #32
   10e70:	rsb	ip, r0, #32
   10e74:	lsl	r3, sl, r3
   10e78:	orr	r3, r3, sl, lsr ip
   10e7c:	orr	r2, r4, sl, lsl r0
   10e80:	add	r0, r0, #8
   10e84:	orr	r3, r3, r5
   10e88:	cmp	r0, #64	; 0x40
   10e8c:	mov	r4, r2
   10e90:	mov	r5, r3
   10e94:	bne	10e68 <abort@plt+0x51c>
   10e98:	ldr	r3, [pc, #260]	; 10fa4 <abort@plt+0x658>
   10e9c:	ldr	r3, [r3]
   10ea0:	cmp	r3, r7
   10ea4:	beq	10eb0 <abort@plt+0x564>
   10ea8:	mov	r0, r8
   10eac:	bl	10898 <puts@plt>
   10eb0:	ldr	r1, [pc, #240]	; 10fa8 <abort@plt+0x65c>
   10eb4:	mov	r0, #1
   10eb8:	bl	10904 <__printf_chk@plt>
   10ebc:	mvn	r3, #0
   10ec0:	mvn	r2, #0
   10ec4:	cmp	r5, r3
   10ec8:	cmpeq	r4, r2
   10ecc:	beq	10f54 <abort@plt+0x608>
   10ed0:	adds	r2, r4, #524288	; 0x80000
   10ed4:	adc	r3, r5, #0
   10ed8:	lsr	r2, r2, #20
   10edc:	orr	r2, r2, r3, lsl #12
   10ee0:	strd	r4, [sp]
   10ee4:	lsr	r3, r3, #20
   10ee8:	ldr	r1, [pc, #188]	; 10fac <abort@plt+0x660>
   10eec:	mov	r0, #1
   10ef0:	bl	10904 <__printf_chk@plt>
   10ef4:	ldr	r4, [sp, #24]
   10ef8:	mov	r3, #0
   10efc:	ldr	r1, [r4]
   10f00:	add	r2, r1, #524288	; 0x80000
   10f04:	cmp	r1, #1
   10f08:	lsr	r2, r2, #20
   10f0c:	bls	10f20 <abort@plt+0x5d4>
   10f10:	lsr	r1, r1, #1
   10f14:	cmp	r1, #1
   10f18:	add	r3, r3, #1
   10f1c:	bne	10f10 <abort@plt+0x5c4>
   10f20:	ldr	r1, [r4, #20]
   10f24:	str	r1, [sp, #8]
   10f28:	ldr	r1, [r4, #16]
   10f2c:	str	r1, [sp, #4]
   10f30:	ldr	r0, [r4, #12]
   10f34:	ldr	r1, [pc, #116]	; 10fb0 <abort@plt+0x664>
   10f38:	str	r0, [sp]
   10f3c:	mov	r0, #1
   10f40:	bl	10904 <__printf_chk@plt>
   10f44:	mov	r0, r4
   10f48:	bl	10850 <free@plt>
   10f4c:	mov	r0, #0
   10f50:	b	10d6c <abort@plt+0x420>
   10f54:	ldr	r1, [pc, #88]	; 10fb4 <abort@plt+0x668>
   10f58:	mov	r0, #1
   10f5c:	bl	10904 <__printf_chk@plt>
   10f60:	b	10ef4 <abort@plt+0x5a8>
   10f64:	bl	10874 <__stack_chk_fail@plt>
   10f68:	ldr	r2, [pc, #24]	; 10f88 <abort@plt+0x63c>
   10f6c:	ldr	r3, [pc, #24]	; 10f8c <abort@plt+0x640>
   10f70:	mov	r0, #12
   10f74:	ldr	r4, [r2]
   10f78:	ldr	r5, [r3]
   10f7c:	bl	108b0 <strerror@plt>
   10f80:	b	10e3c <abort@plt+0x4f0>
   10f84:	strdeq	r1, [r2], -r8
   10f88:	andeq	r2, r2, r8, lsl #1
   10f8c:	andeq	r2, r2, r8, ror r0
   10f90:	andeq	r1, r1, r4, ror #2
   10f94:	andeq	r1, r1, ip, lsl #3
   10f98:	muleq	r1, r8, r1
   10f9c:	andeq	r1, r1, ip, lsr #3
   10fa0:	muleq	r1, r0, r1
   10fa4:	muleq	r2, r0, r0
   10fa8:	andeq	r1, r1, r4, asr #3
   10fac:	andeq	r1, r1, ip, ror #3
   10fb0:	andeq	r1, r1, r4, lsl #4
   10fb4:	andeq	r1, r1, r4, ror #3
   10fb8:	ldr	r3, [pc, #8]	; 10fc8 <abort@plt+0x67c>
   10fbc:	ldr	r2, [r0]
   10fc0:	str	r2, [r3]
   10fc4:	bx	lr
   10fc8:	andeq	r2, r2, r8, ror r0
   10fcc:	cmp	r0, r1
   10fd0:	push	{r7, lr}
   10fd4:	mov	r4, r1
   10fd8:	sub	sp, sp, #8
   10fdc:	bne	10fe8 <abort@plt+0x69c>
   10fe0:	mov	r0, r4
   10fe4:	bl	108d4 <exit@plt>
   10fe8:	ldr	r6, [pc, #188]	; 110ac <abort@plt+0x760>
   10fec:	mov	r5, r0
   10ff0:	mov	r7, r2
   10ff4:	ldr	r0, [r6]
   10ff8:	bl	1085c <ferror@plt>
   10ffc:	mov	r8, r0
   11000:	ldr	r0, [r6]
   11004:	bl	1091c <fclose@plt>
   11008:	orrs	r3, r8, r0
   1100c:	mov	r6, r0
   11010:	beq	11078 <abort@plt+0x72c>
   11014:	cmp	r7, #0
   11018:	beq	10fe0 <abort@plt+0x694>
   1101c:	ldr	ip, [pc, #140]	; 110b0 <abort@plt+0x764>
   11020:	ldr	r3, [pc, #140]	; 110b4 <abort@plt+0x768>
   11024:	mov	r2, #5
   11028:	ldr	r1, [pc, #136]	; 110b8 <abort@plt+0x76c>
   1102c:	mov	r0, #0
   11030:	ldr	r5, [ip]
   11034:	ldr	r7, [r3]
   11038:	bl	10868 <dcgettext@plt>
   1103c:	cmp	r6, #0
   11040:	mov	r8, r0
   11044:	bne	1109c <abort@plt+0x750>
   11048:	mov	r0, r6
   1104c:	mov	r2, #5
   11050:	ldr	r1, [pc, #100]	; 110bc <abort@plt+0x770>
   11054:	bl	10868 <dcgettext@plt>
   11058:	str	r0, [sp, #4]
   1105c:	str	r8, [sp]
   11060:	mov	r3, r7
   11064:	mov	r0, r5
   11068:	ldr	r2, [pc, #80]	; 110c0 <abort@plt+0x774>
   1106c:	mov	r1, #1
   11070:	bl	10910 <__fprintf_chk@plt>
   11074:	b	10fe0 <abort@plt+0x694>
   11078:	ldr	r6, [pc, #48]	; 110b0 <abort@plt+0x764>
   1107c:	ldr	r0, [r6]
   11080:	bl	1085c <ferror@plt>
   11084:	mov	r7, r0
   11088:	ldr	r0, [r6]
   1108c:	bl	1091c <fclose@plt>
   11090:	orrs	r3, r7, r0
   11094:	moveq	r4, r5
   11098:	b	10fe0 <abort@plt+0x694>
   1109c:	bl	108ec <__errno_location@plt>
   110a0:	ldr	r0, [r0]
   110a4:	bl	108b0 <strerror@plt>
   110a8:	b	11058 <abort@plt+0x70c>
   110ac:	muleq	r2, r4, r0
   110b0:	andeq	r2, r2, r8, lsl #1
   110b4:	andeq	r2, r2, r8, ror r0
   110b8:	andeq	r1, r1, r8, lsl #8
   110bc:	andeq	r1, r1, ip, lsr #8
   110c0:	andeq	r1, r1, ip, lsl #3
   110c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110c8:	mov	r7, r0
   110cc:	ldr	r6, [pc, #72]	; 1111c <abort@plt+0x7d0>
   110d0:	ldr	r5, [pc, #72]	; 11120 <abort@plt+0x7d4>
   110d4:	add	r6, pc, r6
   110d8:	add	r5, pc, r5
   110dc:	sub	r6, r6, r5
   110e0:	mov	r8, r1
   110e4:	mov	r9, r2
   110e8:	bl	10824 <strcmp@plt-0x20>
   110ec:	asrs	r6, r6, #2
   110f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   110f4:	mov	r4, #0
   110f8:	add	r4, r4, #1
   110fc:	ldr	r3, [r5], #4
   11100:	mov	r2, r9
   11104:	mov	r1, r8
   11108:	mov	r0, r7
   1110c:	blx	r3
   11110:	cmp	r6, r4
   11114:	bne	110f8 <abort@plt+0x7ac>
   11118:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1111c:	andeq	r0, r1, r8, lsl lr
   11120:	andeq	r0, r1, r0, lsl lr
   11124:	bx	lr

Disassembly of section .fini:

00011128 <.fini>:
   11128:	push	{r3, lr}
   1112c:	pop	{r3, pc}
