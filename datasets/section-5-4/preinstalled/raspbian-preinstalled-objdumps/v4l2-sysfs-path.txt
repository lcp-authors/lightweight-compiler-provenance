
raspbian-preinstalled/v4l2-sysfs-path:     file format elf32-littlearm


Disassembly of section .init:

00010860 <.init>:
   10860:	push	{r3, lr}
   10864:	bl	10bf4 <__snprintf_chk@plt+0x1f4>
   10868:	pop	{r3, pc}

Disassembly of section .plt:

0001086c <calloc@plt-0x14>:
   1086c:	push	{lr}		; (str lr, [sp, #-4]!)
   10870:	ldr	lr, [pc, #4]	; 1087c <calloc@plt-0x4>
   10874:	add	lr, pc, lr
   10878:	ldr	pc, [lr, #8]!
   1087c:	strdeq	r2, [r1], -r0

00010880 <calloc@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #73728	; 0x12000
   10888:	ldr	pc, [ip, #1776]!	; 0x6f0

0001088c <strstr@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #73728	; 0x12000
   10894:	ldr	pc, [ip, #1768]!	; 0x6e8

00010898 <strcmp@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #73728	; 0x12000
   108a0:	ldr	pc, [ip, #1760]!	; 0x6e0

000108a4 <strtol@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #73728	; 0x12000
   108ac:	ldr	pc, [ip, #1752]!	; 0x6d8

000108b0 <fopen@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #73728	; 0x12000
   108b8:	ldr	pc, [ip, #1744]!	; 0x6d0

000108bc <free@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #73728	; 0x12000
   108c4:	ldr	pc, [ip, #1736]!	; 0x6c8

000108c8 <fgets@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #73728	; 0x12000
   108d0:	ldr	pc, [ip, #1728]!	; 0x6c0

000108d4 <strdup@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #73728	; 0x12000
   108dc:	ldr	pc, [ip, #1720]!	; 0x6b8

000108e0 <__stack_chk_fail@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #73728	; 0x12000
   108e8:	ldr	pc, [ip, #1712]!	; 0x6b0

000108ec <realloc@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #73728	; 0x12000
   108f4:	ldr	pc, [ip, #1704]!	; 0x6a8

000108f8 <perror@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #73728	; 0x12000
   10900:	ldr	pc, [ip, #1696]!	; 0x6a0

00010904 <fwrite@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #73728	; 0x12000
   1090c:	ldr	pc, [ip, #1688]!	; 0x698

00010910 <__realpath_chk@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #73728	; 0x12000
   10918:	ldr	pc, [ip, #1680]!	; 0x690

0001091c <opendir@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #73728	; 0x12000
   10924:	ldr	pc, [ip, #1672]!	; 0x688

00010928 <__libc_start_main@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #73728	; 0x12000
   10930:	ldr	pc, [ip, #1664]!	; 0x680

00010934 <__fxstat@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #73728	; 0x12000
   1093c:	ldr	pc, [ip, #1656]!	; 0x678

00010940 <__gmon_start__@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #73728	; 0x12000
   10948:	ldr	pc, [ip, #1648]!	; 0x670

0001094c <strlen@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #73728	; 0x12000
   10954:	ldr	pc, [ip, #1640]!	; 0x668

00010958 <strchr@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #73728	; 0x12000
   10960:	ldr	pc, [ip, #1632]!	; 0x660

00010964 <__sprintf_chk@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #73728	; 0x12000
   1096c:	ldr	pc, [ip, #1624]!	; 0x658

00010970 <putchar@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #73728	; 0x12000
   10978:	ldr	pc, [ip, #1616]!	; 0x650

0001097c <argp_parse@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #73728	; 0x12000
   10984:	ldr	pc, [ip, #1608]!	; 0x648

00010988 <__printf_chk@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #73728	; 0x12000
   10990:	ldr	pc, [ip, #1600]!	; 0x640

00010994 <fclose@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #73728	; 0x12000
   1099c:	ldr	pc, [ip, #1592]!	; 0x638

000109a0 <strtok@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #73728	; 0x12000
   109a8:	ldr	pc, [ip, #1584]!	; 0x630

000109ac <readdir@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #73728	; 0x12000
   109b4:	ldr	pc, [ip, #1576]!	; 0x628

000109b8 <strrchr@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #73728	; 0x12000
   109c0:	ldr	pc, [ip, #1568]!	; 0x620

000109c4 <sscanf@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #73728	; 0x12000
   109cc:	ldr	pc, [ip, #1560]!	; 0x618

000109d0 <qsort@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #73728	; 0x12000
   109d8:	ldr	pc, [ip, #1552]!	; 0x610

000109dc <strncmp@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #73728	; 0x12000
   109e4:	ldr	pc, [ip, #1544]!	; 0x608

000109e8 <abort@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #73728	; 0x12000
   109f0:	ldr	pc, [ip, #1536]!	; 0x600

000109f4 <closedir@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #73728	; 0x12000
   109fc:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a00 <__snprintf_chk@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #73728	; 0x12000
   10a08:	ldr	pc, [ip, #1520]!	; 0x5f0

Disassembly of section .text:

00010a0c <.text>:
   10a0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a10:	sub	sp, sp, #12
   10a14:	mov	r3, #0
   10a18:	mov	r2, r1
   10a1c:	str	r3, [sp, #4]
   10a20:	mov	r1, r0
   10a24:	str	r3, [sp]
   10a28:	ldr	r0, [pc, #364]	; 10b9c <__snprintf_chk@plt+0x19c>
   10a2c:	bl	1097c <argp_parse@plt>
   10a30:	bl	11598 <__snprintf_chk@plt+0xb98>
   10a34:	ldr	r3, [pc, #356]	; 10ba0 <__snprintf_chk@plt+0x1a0>
   10a38:	ldr	r7, [r3]
   10a3c:	cmp	r7, #0
   10a40:	mov	r8, r0
   10a44:	bne	10b94 <__snprintf_chk@plt+0x194>
   10a48:	ldr	fp, [pc, #340]	; 10ba4 <__snprintf_chk@plt+0x1a4>
   10a4c:	ldr	sl, [pc, #340]	; 10ba8 <__snprintf_chk@plt+0x1a8>
   10a50:	ldr	r2, [pc, #340]	; 10bac <__snprintf_chk@plt+0x1ac>
   10a54:	mov	r3, #0
   10a58:	mov	r1, r7
   10a5c:	str	r2, [sp]
   10a60:	mov	r0, r8
   10a64:	mov	r2, r3
   10a68:	bl	1191c <__snprintf_chk@plt+0xf1c>
   10a6c:	subs	r7, r0, #0
   10a70:	beq	10b14 <__snprintf_chk@plt+0x114>
   10a74:	mov	r2, r7
   10a78:	ldr	r1, [pc, #304]	; 10bb0 <__snprintf_chk@plt+0x1b0>
   10a7c:	mov	r0, #1
   10a80:	bl	10988 <__printf_chk@plt>
   10a84:	mov	r4, #0
   10a88:	mov	r9, r4
   10a8c:	mov	r6, #1
   10a90:	mov	r5, #0
   10a94:	mov	r1, r5
   10a98:	str	r9, [sp]
   10a9c:	mov	r3, r7
   10aa0:	mov	r2, r4
   10aa4:	mov	r0, r8
   10aa8:	bl	1191c <__snprintf_chk@plt+0xf1c>
   10aac:	subs	r5, r0, #0
   10ab0:	beq	10af0 <__snprintf_chk@plt+0xf0>
   10ab4:	cmp	r6, #0
   10ab8:	bne	10ad4 <__snprintf_chk@plt+0xd4>
   10abc:	mov	r2, r5
   10ac0:	mov	r1, sl
   10ac4:	mov	r0, #1
   10ac8:	bl	10988 <__printf_chk@plt>
   10acc:	mov	r6, #0
   10ad0:	b	10a94 <__snprintf_chk@plt+0x94>
   10ad4:	mov	r0, r4
   10ad8:	bl	11698 <__snprintf_chk@plt+0xc98>
   10adc:	mov	r1, fp
   10ae0:	mov	r2, r0
   10ae4:	mov	r0, #1
   10ae8:	bl	10988 <__printf_chk@plt>
   10aec:	b	10abc <__snprintf_chk@plt+0xbc>
   10af0:	cmp	r6, #0
   10af4:	beq	10b08 <__snprintf_chk@plt+0x108>
   10af8:	add	r4, r4, #1
   10afc:	cmp	r4, #205	; 0xcd
   10b00:	bne	10a8c <__snprintf_chk@plt+0x8c>
   10b04:	b	10a50 <__snprintf_chk@plt+0x50>
   10b08:	mov	r0, #10
   10b0c:	bl	10970 <putchar@plt>
   10b10:	b	10af8 <__snprintf_chk@plt+0xf8>
   10b14:	ldr	r6, [pc, #152]	; 10bb4 <__snprintf_chk@plt+0x1b4>
   10b18:	ldr	r5, [pc, #136]	; 10ba8 <__snprintf_chk@plt+0x1a8>
   10b1c:	mov	r4, #1
   10b20:	mov	r1, r7
   10b24:	mov	r3, #0
   10b28:	mov	r2, #202	; 0xca
   10b2c:	mov	r0, r8
   10b30:	bl	11d0c <__snprintf_chk@plt+0x130c>
   10b34:	subs	r7, r0, #0
   10b38:	beq	10b6c <__snprintf_chk@plt+0x16c>
   10b3c:	cmp	r4, #0
   10b40:	bne	10b5c <__snprintf_chk@plt+0x15c>
   10b44:	mov	r2, r7
   10b48:	mov	r1, r5
   10b4c:	mov	r0, #1
   10b50:	bl	10988 <__printf_chk@plt>
   10b54:	mov	r4, #0
   10b58:	b	10b20 <__snprintf_chk@plt+0x120>
   10b5c:	mov	r1, r6
   10b60:	mov	r0, #1
   10b64:	bl	10988 <__printf_chk@plt>
   10b68:	b	10b44 <__snprintf_chk@plt+0x144>
   10b6c:	cmp	r4, #0
   10b70:	beq	10b88 <__snprintf_chk@plt+0x188>
   10b74:	mov	r0, r8
   10b78:	bl	11544 <__snprintf_chk@plt+0xb44>
   10b7c:	mov	r0, #0
   10b80:	add	sp, sp, #12
   10b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b88:	mov	r0, #10
   10b8c:	bl	10970 <putchar@plt>
   10b90:	b	10b74 <__snprintf_chk@plt+0x174>
   10b94:	bl	1185c <__snprintf_chk@plt+0xe5c>
   10b98:	b	10b74 <__snprintf_chk@plt+0x174>
   10b9c:	andeq	r3, r2, r8
   10ba0:	andeq	r3, r2, r8, lsr r0
   10ba4:	andeq	r1, r1, r0, lsl pc
   10ba8:	andeq	r1, r1, r8, lsl pc
   10bac:	strdeq	pc, [r0], -lr
   10bb0:	strdeq	r1, [r1], -ip
   10bb4:	andeq	r1, r1, ip, lsl pc
   10bb8:	mov	fp, #0
   10bbc:	mov	lr, #0
   10bc0:	pop	{r1}		; (ldr r1, [sp], #4)
   10bc4:	mov	r2, sp
   10bc8:	push	{r2}		; (str r2, [sp, #-4]!)
   10bcc:	push	{r0}		; (str r0, [sp, #-4]!)
   10bd0:	ldr	ip, [pc, #16]	; 10be8 <__snprintf_chk@plt+0x1e8>
   10bd4:	push	{ip}		; (str ip, [sp, #-4]!)
   10bd8:	ldr	r0, [pc, #12]	; 10bec <__snprintf_chk@plt+0x1ec>
   10bdc:	ldr	r3, [pc, #12]	; 10bf0 <__snprintf_chk@plt+0x1f0>
   10be0:	bl	10928 <__libc_start_main@plt>
   10be4:	bl	109e8 <abort@plt>
   10be8:			; <UNDEFINED> instruction: 0x00011ebc
   10bec:	andeq	r0, r1, ip, lsl #20
   10bf0:	andeq	r1, r1, ip, asr lr
   10bf4:	ldr	r3, [pc, #20]	; 10c10 <__snprintf_chk@plt+0x210>
   10bf8:	ldr	r2, [pc, #20]	; 10c14 <__snprintf_chk@plt+0x214>
   10bfc:	add	r3, pc, r3
   10c00:	ldr	r2, [r3, r2]
   10c04:	cmp	r2, #0
   10c08:	bxeq	lr
   10c0c:	b	10940 <__gmon_start__@plt>
   10c10:	andeq	r2, r1, r8, ror #6
   10c14:	muleq	r0, r0, r0
   10c18:	ldr	r0, [pc, #24]	; 10c38 <__snprintf_chk@plt+0x238>
   10c1c:	ldr	r3, [pc, #24]	; 10c3c <__snprintf_chk@plt+0x23c>
   10c20:	cmp	r3, r0
   10c24:	bxeq	lr
   10c28:	ldr	r3, [pc, #16]	; 10c40 <__snprintf_chk@plt+0x240>
   10c2c:	cmp	r3, #0
   10c30:	bxeq	lr
   10c34:	bx	r3
   10c38:	andeq	r3, r2, ip, lsr #32
   10c3c:	andeq	r3, r2, ip, lsr #32
   10c40:	andeq	r0, r0, r0
   10c44:	ldr	r0, [pc, #36]	; 10c70 <__snprintf_chk@plt+0x270>
   10c48:	ldr	r1, [pc, #36]	; 10c74 <__snprintf_chk@plt+0x274>
   10c4c:	sub	r1, r1, r0
   10c50:	asr	r1, r1, #2
   10c54:	add	r1, r1, r1, lsr #31
   10c58:	asrs	r1, r1, #1
   10c5c:	bxeq	lr
   10c60:	ldr	r3, [pc, #16]	; 10c78 <__snprintf_chk@plt+0x278>
   10c64:	cmp	r3, #0
   10c68:	bxeq	lr
   10c6c:	bx	r3
   10c70:	andeq	r3, r2, ip, lsr #32
   10c74:	andeq	r3, r2, ip, lsr #32
   10c78:	andeq	r0, r0, r0
   10c7c:	push	{r4, lr}
   10c80:	ldr	r4, [pc, #24]	; 10ca0 <__snprintf_chk@plt+0x2a0>
   10c84:	ldrb	r3, [r4]
   10c88:	cmp	r3, #0
   10c8c:	popne	{r4, pc}
   10c90:	bl	10c18 <__snprintf_chk@plt+0x218>
   10c94:	mov	r3, #1
   10c98:	strb	r3, [r4]
   10c9c:	pop	{r4, pc}
   10ca0:	andeq	r3, r2, r4, lsr r0
   10ca4:	b	10c44 <__snprintf_chk@plt+0x244>
   10ca8:	cmp	r0, #100	; 0x64
   10cac:	moveq	r0, #0
   10cb0:	ldreq	r2, [pc, #16]	; 10cc8 <__snprintf_chk@plt+0x2c8>
   10cb4:	movne	r0, #7
   10cb8:	ldreq	r3, [r2]
   10cbc:	addeq	r3, r3, #1
   10cc0:	streq	r3, [r2]
   10cc4:	bx	lr
   10cc8:	andeq	r3, r2, r8, lsr r0
   10ccc:	push	{r4, r5, r6, lr}
   10cd0:	mov	r5, r0
   10cd4:	ldr	r4, [r0, #4]
   10cd8:	ldr	r1, [pc, #248]	; 10dd8 <__snprintf_chk@plt+0x3d8>
   10cdc:	mov	r0, r4
   10ce0:	bl	1088c <strstr@plt>
   10ce4:	ldr	r1, [pc, #240]	; 10ddc <__snprintf_chk@plt+0x3dc>
   10ce8:	cmp	r0, #0
   10cec:	movne	r3, #100	; 0x64
   10cf0:	strne	r3, [r5, #8]
   10cf4:	mov	r0, r4
   10cf8:	bl	1088c <strstr@plt>
   10cfc:	ldr	r1, [pc, #220]	; 10de0 <__snprintf_chk@plt+0x3e0>
   10d00:	cmp	r0, #0
   10d04:	movne	r3, #101	; 0x65
   10d08:	strne	r3, [r5, #8]
   10d0c:	mov	r0, r4
   10d10:	bl	1088c <strstr@plt>
   10d14:	ldr	r1, [pc, #200]	; 10de4 <__snprintf_chk@plt+0x3e4>
   10d18:	cmp	r0, #0
   10d1c:	movne	r3, #102	; 0x66
   10d20:	strne	r3, [r5, #8]
   10d24:	mov	r0, r4
   10d28:	bl	1088c <strstr@plt>
   10d2c:	cmp	r0, #0
   10d30:	beq	10d44 <__snprintf_chk@plt+0x344>
   10d34:	mov	r3, #103	; 0x67
   10d38:	str	r3, [r5, #8]
   10d3c:	mov	r0, #0
   10d40:	pop	{r4, r5, r6, pc}
   10d44:	ldr	r1, [pc, #156]	; 10de8 <__snprintf_chk@plt+0x3e8>
   10d48:	mov	r0, r4
   10d4c:	bl	1088c <strstr@plt>
   10d50:	cmp	r0, #0
   10d54:	beq	10d68 <__snprintf_chk@plt+0x368>
   10d58:	mov	r3, #104	; 0x68
   10d5c:	str	r3, [r5, #8]
   10d60:	mov	r0, #0
   10d64:	pop	{r4, r5, r6, pc}
   10d68:	ldr	r1, [pc, #124]	; 10dec <__snprintf_chk@plt+0x3ec>
   10d6c:	mov	r0, r4
   10d70:	bl	1088c <strstr@plt>
   10d74:	cmp	r0, #0
   10d78:	movne	r3, #105	; 0x69
   10d7c:	strne	r3, [r5, #8]
   10d80:	bne	10d3c <__snprintf_chk@plt+0x33c>
   10d84:	ldr	r1, [pc, #100]	; 10df0 <__snprintf_chk@plt+0x3f0>
   10d88:	mov	r0, r4
   10d8c:	bl	1088c <strstr@plt>
   10d90:	cmp	r0, #0
   10d94:	movne	r3, #107	; 0x6b
   10d98:	strne	r3, [r5, #8]
   10d9c:	bne	10d3c <__snprintf_chk@plt+0x33c>
   10da0:	ldr	r1, [pc, #76]	; 10df4 <__snprintf_chk@plt+0x3f4>
   10da4:	mov	r0, r4
   10da8:	bl	1088c <strstr@plt>
   10dac:	cmp	r0, #0
   10db0:	movne	r3, #106	; 0x6a
   10db4:	strne	r3, [r5, #8]
   10db8:	bne	10d3c <__snprintf_chk@plt+0x33c>
   10dbc:	mov	r0, r4
   10dc0:	ldr	r1, [pc, #48]	; 10df8 <__snprintf_chk@plt+0x3f8>
   10dc4:	bl	1088c <strstr@plt>
   10dc8:	cmp	r0, #0
   10dcc:	movne	r3, #108	; 0x6c
   10dd0:	strne	r3, [r5, #8]
   10dd4:	b	10d3c <__snprintf_chk@plt+0x33c>
   10dd8:	andeq	r2, r1, r0, ror #1
   10ddc:	andeq	r2, r1, ip, ror #1
   10de0:	strdeq	r2, [r1], -r8
   10de4:	andeq	r2, r1, r0, lsl #2
   10de8:	andeq	r2, r1, r0, lsl r1
   10dec:	andeq	r2, r1, ip, lsl r1
   10df0:	andeq	r2, r1, r4, lsr #2
   10df4:			; <UNDEFINED> instruction: 0x00011fb4
   10df8:			; <UNDEFINED> instruction: 0x00011fb8
   10dfc:	push	{r4, r5, r6, lr}
   10e00:	mov	r4, r0
   10e04:	ldr	r5, [r0, #4]
   10e08:	ldr	r1, [pc, #120]	; 10e88 <__snprintf_chk@plt+0x488>
   10e0c:	mov	r0, r5
   10e10:	bl	1088c <strstr@plt>
   10e14:	cmp	r0, #0
   10e18:	beq	10e2c <__snprintf_chk@plt+0x42c>
   10e1c:	mov	r3, #0
   10e20:	str	r3, [r4, #8]
   10e24:	mov	r0, #0
   10e28:	pop	{r4, r5, r6, pc}
   10e2c:	ldr	r1, [pc, #88]	; 10e8c <__snprintf_chk@plt+0x48c>
   10e30:	mov	r0, r5
   10e34:	bl	1088c <strstr@plt>
   10e38:	cmp	r0, #0
   10e3c:	beq	10e50 <__snprintf_chk@plt+0x450>
   10e40:	mov	r3, #1
   10e44:	str	r3, [r4, #8]
   10e48:	mov	r0, #0
   10e4c:	pop	{r4, r5, r6, pc}
   10e50:	ldr	r1, [pc, #56]	; 10e90 <__snprintf_chk@plt+0x490>
   10e54:	mov	r0, r5
   10e58:	bl	1088c <strstr@plt>
   10e5c:	cmp	r0, #0
   10e60:	movne	r3, #2
   10e64:	strne	r3, [r4, #8]
   10e68:	bne	10e24 <__snprintf_chk@plt+0x424>
   10e6c:	mov	r0, r5
   10e70:	ldr	r1, [pc, #28]	; 10e94 <__snprintf_chk@plt+0x494>
   10e74:	bl	1088c <strstr@plt>
   10e78:	cmp	r0, #0
   10e7c:	movne	r3, #3
   10e80:	strne	r3, [r4, #8]
   10e84:	b	10e24 <__snprintf_chk@plt+0x424>
   10e88:	andeq	r2, r1, r0, ror #1
   10e8c:			; <UNDEFINED> instruction: 0x00011fbc
   10e90:	andeq	r1, r1, r0, asr #31
   10e94:	andeq	r1, r1, r8, asr #31
   10e98:	push	{r4, r5, r6, lr}
   10e9c:	sub	sp, sp, #96	; 0x60
   10ea0:	ldr	r6, [pc, #472]	; 11080 <__snprintf_chk@plt+0x680>
   10ea4:	ldr	r5, [r0, #4]
   10ea8:	ldr	r3, [pc, #468]	; 11084 <__snprintf_chk@plt+0x684>
   10eac:	ldr	r2, [r6]
   10eb0:	mov	r4, r0
   10eb4:	ldr	r1, [pc, #460]	; 11088 <__snprintf_chk@plt+0x688>
   10eb8:	mov	r0, r5
   10ebc:	str	r3, [sp, #20]
   10ec0:	str	r3, [sp, #24]
   10ec4:	str	r2, [sp, #92]	; 0x5c
   10ec8:	bl	1088c <strstr@plt>
   10ecc:	cmp	r0, #0
   10ed0:	movne	r3, #205	; 0xcd
   10ed4:	strne	r3, [r4, #8]
   10ed8:	beq	10ef8 <__snprintf_chk@plt+0x4f8>
   10edc:	ldr	r2, [sp, #92]	; 0x5c
   10ee0:	ldr	r3, [r6]
   10ee4:	mov	r0, #0
   10ee8:	cmp	r2, r3
   10eec:	bne	1107c <__snprintf_chk@plt+0x67c>
   10ef0:	add	sp, sp, #96	; 0x60
   10ef4:	pop	{r4, r5, r6, pc}
   10ef8:	ldr	r1, [pc, #396]	; 1108c <__snprintf_chk@plt+0x68c>
   10efc:	mov	r0, r5
   10f00:	bl	1088c <strstr@plt>
   10f04:	cmp	r0, #0
   10f08:	movne	r3, #206	; 0xce
   10f0c:	strne	r3, [r4, #8]
   10f10:	bne	10edc <__snprintf_chk@plt+0x4dc>
   10f14:	ldr	r1, [pc, #372]	; 11090 <__snprintf_chk@plt+0x690>
   10f18:	mov	r0, r5
   10f1c:	bl	1088c <strstr@plt>
   10f20:	cmp	r0, #0
   10f24:	beq	10f98 <__snprintf_chk@plt+0x598>
   10f28:	mov	r0, r5
   10f2c:	add	r2, sp, #20
   10f30:	ldr	r1, [pc, #348]	; 11094 <__snprintf_chk@plt+0x694>
   10f34:	bl	109c4 <sscanf@plt>
   10f38:	mov	r3, #200	; 0xc8
   10f3c:	str	r3, [r4, #8]
   10f40:	ldr	r2, [sp, #20]
   10f44:	ldr	r3, [pc, #312]	; 11084 <__snprintf_chk@plt+0x684>
   10f48:	cmp	r2, r3
   10f4c:	beq	10edc <__snprintf_chk@plt+0x4dc>
   10f50:	ldr	r1, [sp, #24]
   10f54:	cmp	r1, r3
   10f58:	beq	10fcc <__snprintf_chk@plt+0x5cc>
   10f5c:	ldr	r0, [pc, #308]	; 11098 <__snprintf_chk@plt+0x698>
   10f60:	add	r5, sp, #28
   10f64:	mov	r3, #64	; 0x40
   10f68:	stm	sp, {r0, r2}
   10f6c:	str	r1, [sp, #8]
   10f70:	mov	r0, r5
   10f74:	mov	r1, r3
   10f78:	mov	r2, #1
   10f7c:	bl	10a00 <__snprintf_chk@plt>
   10f80:	ldr	r0, [r4, #4]
   10f84:	bl	108bc <free@plt>
   10f88:	mov	r0, r5
   10f8c:	bl	108d4 <strdup@plt>
   10f90:	str	r0, [r4, #4]
   10f94:	b	10edc <__snprintf_chk@plt+0x4dc>
   10f98:	ldr	r1, [pc, #252]	; 1109c <__snprintf_chk@plt+0x69c>
   10f9c:	mov	r0, r5
   10fa0:	bl	1088c <strstr@plt>
   10fa4:	cmp	r0, #0
   10fa8:	beq	10ff0 <__snprintf_chk@plt+0x5f0>
   10fac:	add	r3, sp, #24
   10fb0:	mov	r0, r5
   10fb4:	add	r2, sp, #20
   10fb8:	ldr	r1, [pc, #224]	; 110a0 <__snprintf_chk@plt+0x6a0>
   10fbc:	bl	109c4 <sscanf@plt>
   10fc0:	mov	r3, #204	; 0xcc
   10fc4:	str	r3, [r4, #8]
   10fc8:	b	10f40 <__snprintf_chk@plt+0x540>
   10fcc:	ldr	r1, [pc, #208]	; 110a4 <__snprintf_chk@plt+0x6a4>
   10fd0:	add	r5, sp, #28
   10fd4:	mov	r3, #64	; 0x40
   10fd8:	stm	sp, {r1, r2}
   10fdc:	mov	r0, r5
   10fe0:	mov	r1, r3
   10fe4:	mov	r2, #1
   10fe8:	bl	10a00 <__snprintf_chk@plt>
   10fec:	b	10f80 <__snprintf_chk@plt+0x580>
   10ff0:	ldr	r1, [pc, #176]	; 110a8 <__snprintf_chk@plt+0x6a8>
   10ff4:	mov	r0, r5
   10ff8:	bl	1088c <strstr@plt>
   10ffc:	cmp	r0, #0
   11000:	beq	11020 <__snprintf_chk@plt+0x620>
   11004:	mov	r0, r5
   11008:	add	r2, sp, #20
   1100c:	ldr	r1, [pc, #152]	; 110ac <__snprintf_chk@plt+0x6ac>
   11010:	bl	109c4 <sscanf@plt>
   11014:	mov	r3, #203	; 0xcb
   11018:	str	r3, [r4, #8]
   1101c:	b	10f40 <__snprintf_chk@plt+0x540>
   11020:	ldr	r1, [pc, #136]	; 110b0 <__snprintf_chk@plt+0x6b0>
   11024:	mov	r0, r5
   11028:	bl	1088c <strstr@plt>
   1102c:	cmp	r0, #0
   11030:	beq	10edc <__snprintf_chk@plt+0x4dc>
   11034:	add	r3, sp, #24
   11038:	mov	r0, r5
   1103c:	add	r2, sp, #20
   11040:	ldr	r1, [pc, #108]	; 110b4 <__snprintf_chk@plt+0x6b4>
   11044:	bl	109c4 <sscanf@plt>
   11048:	ldr	r5, [r4, #4]
   1104c:	mov	r0, r5
   11050:	bl	1094c <strlen@plt>
   11054:	add	r0, r5, r0
   11058:	ldrb	r3, [r0, #-1]
   1105c:	cmp	r3, #112	; 0x70
   11060:	moveq	r3, #202	; 0xca
   11064:	streq	r3, [r4, #8]
   11068:	beq	10f40 <__snprintf_chk@plt+0x540>
   1106c:	cmp	r3, #99	; 0x63
   11070:	moveq	r3, #201	; 0xc9
   11074:	streq	r3, [r4, #8]
   11078:	b	10f40 <__snprintf_chk@plt+0x540>
   1107c:	bl	108e0 <__stack_chk_fail@plt>
   11080:	andeq	r2, r2, r8, ror #28
   11084:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   11088:	ldrdeq	r1, [r1], -r4
   1108c:	ldrdeq	r1, [r1], -ip
   11090:	andeq	r1, r1, r0, ror #31
   11094:	andeq	r1, r1, r8, ror #31
   11098:	andeq	r2, r1, ip, lsr #32
   1109c:	strdeq	r1, [r1], -r0
   110a0:	strdeq	r1, [r1], -r4
   110a4:	andeq	r2, r1, r4, lsr #32
   110a8:	andeq	r2, r1, r0
   110ac:	andeq	r2, r1, r8
   110b0:	andeq	r2, r1, r4, lsl r0
   110b4:	andeq	r2, r1, r8, lsl r0
   110b8:	push	{r4, r5, r6, lr}
   110bc:	mov	r4, r0
   110c0:	mov	r5, r1
   110c4:	ldr	r0, [r0]
   110c8:	ldr	r1, [r1]
   110cc:	bl	10898 <strcmp@plt>
   110d0:	cmp	r0, #0
   110d4:	popne	{r4, r5, r6, pc}
   110d8:	ldr	r0, [r4, #8]
   110dc:	ldr	r3, [r5, #8]
   110e0:	subs	r0, r0, r3
   110e4:	popne	{r4, r5, r6, pc}
   110e8:	ldr	r1, [r5, #4]
   110ec:	ldr	r0, [r4, #4]
   110f0:	pop	{r4, r5, r6, lr}
   110f4:	b	10898 <strcmp@plt>
   110f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110fc:	sub	sp, sp, #17664	; 0x4500
   11100:	sub	sp, sp, #116	; 0x74
   11104:	ldr	lr, [pc, #1008]	; 114fc <__snprintf_chk@plt+0xafc>
   11108:	str	r3, [sp, #28]
   1110c:	ldr	r3, [pc, #1004]	; 11500 <__snprintf_chk@plt+0xb00>
   11110:	add	fp, sp, #1120	; 0x460
   11114:	str	r0, [sp, #20]
   11118:	ldr	ip, [r3]
   1111c:	str	lr, [sp]
   11120:	add	lr, sp, #17664	; 0x4500
   11124:	add	lr, lr, #108	; 0x6c
   11128:	mov	r3, #4096	; 0x1000
   1112c:	str	r0, [sp, #4]
   11130:	str	r1, [sp, #24]
   11134:	str	ip, [lr]
   11138:	mov	r1, r3
   1113c:	mov	sl, r2
   11140:	mov	r0, fp
   11144:	mov	r2, #1
   11148:	bl	10a00 <__snprintf_chk@plt>
   1114c:	mov	r0, fp
   11150:	bl	1091c <opendir@plt>
   11154:	subs	r3, r0, #0
   11158:	str	r3, [sp, #16]
   1115c:	beq	114e8 <__snprintf_chk@plt+0xae8>
   11160:	bl	109ac <readdir@plt>
   11164:	cmp	r0, #0
   11168:	beq	11388 <__snprintf_chk@plt+0x988>
   1116c:	ldrb	r3, [r0, #11]
   11170:	cmp	r3, #46	; 0x2e
   11174:	beq	11378 <__snprintf_chk@plt+0x978>
   11178:	ldr	r2, [pc, #900]	; 11504 <__snprintf_chk@plt+0xb04>
   1117c:	mov	r3, #4352	; 0x1100
   11180:	add	r4, r0, #11
   11184:	add	r0, sp, #13376	; 0x3440
   11188:	mov	r1, r3
   1118c:	str	r2, [sp]
   11190:	str	r4, [sp, #8]
   11194:	mov	r2, #1
   11198:	str	fp, [sp, #4]
   1119c:	add	r0, r0, #44	; 0x2c
   111a0:	bl	10a00 <__snprintf_chk@plt>
   111a4:	add	r0, sp, #13376	; 0x3440
   111a8:	add	r1, sp, #5184	; 0x1440
   111ac:	add	r0, r0, #44	; 0x2c
   111b0:	add	r1, r1, #32
   111b4:	mov	r2, #4096	; 0x1000
   111b8:	bl	10910 <__realpath_chk@plt>
   111bc:	cmp	r0, #0
   111c0:	beq	11378 <__snprintf_chk@plt+0x978>
   111c4:	add	r0, sp, #5184	; 0x1440
   111c8:	ldr	r1, [sp, #20]
   111cc:	add	r0, r0, #32
   111d0:	bl	1088c <strstr@plt>
   111d4:	cmp	r0, #0
   111d8:	beq	11378 <__snprintf_chk@plt+0x978>
   111dc:	mov	r3, #0
   111e0:	strb	r3, [r0, #-1]
   111e4:	add	r0, sp, #5184	; 0x1440
   111e8:	ldr	r1, [pc, #792]	; 11508 <__snprintf_chk@plt+0xb08>
   111ec:	add	r0, r0, #32
   111f0:	bl	10898 <strcmp@plt>
   111f4:	cmp	r0, #0
   111f8:	bne	113d4 <__snprintf_chk@plt+0x9d4>
   111fc:	ldr	ip, [pc, #776]	; 1150c <__snprintf_chk@plt+0xb0c>
   11200:	add	r0, sp, #36	; 0x24
   11204:	ldr	r3, [pc, #772]	; 11510 <__snprintf_chk@plt+0xb10>
   11208:	ldr	r2, [ip]
   1120c:	mov	r5, r0
   11210:	add	r1, r2, #1
   11214:	str	r2, [sp]
   11218:	str	r1, [ip]
   1121c:	mov	r2, #60	; 0x3c
   11220:	mov	r1, #1
   11224:	bl	10964 <__sprintf_chk@plt>
   11228:	ldr	r1, [sl]
   1122c:	ldr	r7, [sp, #24]
   11230:	add	r1, r1, #1
   11234:	add	r1, r1, r1, lsl #1
   11238:	ldr	r0, [r7]
   1123c:	lsl	r1, r1, #3
   11240:	bl	108ec <realloc@plt>
   11244:	cmp	r0, #0
   11248:	mov	r6, r0
   1124c:	str	r0, [r7]
   11250:	beq	114f0 <__snprintf_chk@plt+0xaf0>
   11254:	ldr	r2, [sl]
   11258:	ldr	r1, [pc, #692]	; 11514 <__snprintf_chk@plt+0xb14>
   1125c:	mov	r0, r5
   11260:	add	r7, r2, r2, lsl #1
   11264:	mov	r3, #0
   11268:	add	r5, r6, r7, lsl #3
   1126c:	add	r2, r2, #1
   11270:	str	r2, [sl]
   11274:	str	r3, [r6, r7, lsl #3]
   11278:	str	r3, [r5, #4]
   1127c:	str	r3, [r5, #12]
   11280:	str	r3, [r5, #16]
   11284:	str	r3, [r5, #20]
   11288:	str	r1, [r5, #8]
   1128c:	bl	108d4 <strdup@plt>
   11290:	str	r0, [r6, r7, lsl #3]
   11294:	mov	r0, r4
   11298:	bl	108d4 <strdup@plt>
   1129c:	ldr	r3, [pc, #628]	; 11518 <__snprintf_chk@plt+0xb18>
   112a0:	ldr	r2, [pc, #628]	; 1151c <__snprintf_chk@plt+0xb1c>
   112a4:	mov	r1, r3
   112a8:	str	r0, [r5, #4]
   112ac:	str	r0, [sp, #8]
   112b0:	add	r0, sp, #9280	; 0x2440
   112b4:	str	r2, [sp]
   112b8:	str	fp, [sp, #4]
   112bc:	mov	r2, #1
   112c0:	add	r0, r0, #32
   112c4:	bl	10a00 <__snprintf_chk@plt>
   112c8:	add	r0, sp, #9280	; 0x2440
   112cc:	ldr	r1, [pc, #588]	; 11520 <__snprintf_chk@plt+0xb20>
   112d0:	add	r0, r0, #32
   112d4:	bl	108b0 <fopen@plt>
   112d8:	subs	r8, r0, #0
   112dc:	beq	1136c <__snprintf_chk@plt+0x96c>
   112e0:	ldr	r9, [pc, #572]	; 11524 <__snprintf_chk@plt+0xb24>
   112e4:	add	r6, sp, #96	; 0x60
   112e8:	mov	r2, r8
   112ec:	mov	r1, #1024	; 0x400
   112f0:	mov	r0, r6
   112f4:	bl	108c8 <fgets@plt>
   112f8:	cmp	r0, #0
   112fc:	beq	11364 <__snprintf_chk@plt+0x964>
   11300:	ldr	r1, [pc, #544]	; 11528 <__snprintf_chk@plt+0xb28>
   11304:	mov	r0, r6
   11308:	bl	109a0 <strtok@plt>
   1130c:	subs	r4, r0, #0
   11310:	beq	112e8 <__snprintf_chk@plt+0x8e8>
   11314:	ldr	r1, [pc, #528]	; 1152c <__snprintf_chk@plt+0xb2c>
   11318:	mov	r0, #0
   1131c:	bl	109a0 <strtok@plt>
   11320:	subs	r7, r0, #0
   11324:	beq	112e8 <__snprintf_chk@plt+0x8e8>
   11328:	mov	r1, r9
   1132c:	mov	r0, r4
   11330:	bl	10898 <strcmp@plt>
   11334:	subs	r1, r0, #0
   11338:	beq	113c0 <__snprintf_chk@plt+0x9c0>
   1133c:	ldr	r1, [pc, #492]	; 11530 <__snprintf_chk@plt+0xb30>
   11340:	mov	r0, r4
   11344:	bl	10898 <strcmp@plt>
   11348:	subs	r1, r0, #0
   1134c:	bne	112e8 <__snprintf_chk@plt+0x8e8>
   11350:	mov	r0, r7
   11354:	mov	r2, #10
   11358:	bl	108a4 <strtol@plt>
   1135c:	str	r0, [r5, #20]
   11360:	b	112e8 <__snprintf_chk@plt+0x8e8>
   11364:	mov	r0, r8
   11368:	bl	10994 <fclose@plt>
   1136c:	mov	r0, r5
   11370:	ldr	r3, [sp, #28]
   11374:	blx	r3
   11378:	ldr	r0, [sp, #16]
   1137c:	bl	109ac <readdir@plt>
   11380:	cmp	r0, #0
   11384:	bne	1116c <__snprintf_chk@plt+0x76c>
   11388:	mov	r4, #0
   1138c:	ldr	r0, [sp, #16]
   11390:	bl	109f4 <closedir@plt>
   11394:	add	r3, sp, #17664	; 0x4500
   11398:	add	r3, r3, #108	; 0x6c
   1139c:	ldr	r2, [r3]
   113a0:	ldr	r3, [pc, #344]	; 11500 <__snprintf_chk@plt+0xb00>
   113a4:	mov	r0, r4
   113a8:	ldr	r3, [r3]
   113ac:	cmp	r2, r3
   113b0:	bne	114f8 <__snprintf_chk@plt+0xaf8>
   113b4:	add	sp, sp, #17664	; 0x4500
   113b8:	add	sp, sp, #116	; 0x74
   113bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113c0:	mov	r0, r7
   113c4:	mov	r2, #10
   113c8:	bl	108a4 <strtol@plt>
   113cc:	str	r0, [r5, #16]
   113d0:	b	112e8 <__snprintf_chk@plt+0x8e8>
   113d4:	ldr	r3, [pc, #344]	; 11534 <__snprintf_chk@plt+0xb34>
   113d8:	ldr	r2, [pc, #344]	; 11538 <__snprintf_chk@plt+0xb38>
   113dc:	add	r1, sp, #5184	; 0x1440
   113e0:	add	r1, r1, #32
   113e4:	add	r0, sp, #9280	; 0x2440
   113e8:	str	r1, [sp, #4]
   113ec:	str	r2, [sp]
   113f0:	mov	r1, r3
   113f4:	mov	r2, #1
   113f8:	add	r0, r0, #32
   113fc:	bl	10a00 <__snprintf_chk@plt>
   11400:	add	r0, sp, #9280	; 0x2440
   11404:	ldr	r1, [pc, #276]	; 11520 <__snprintf_chk@plt+0xb20>
   11408:	add	r0, r0, #32
   1140c:	bl	108b0 <fopen@plt>
   11410:	subs	r5, r0, #0
   11414:	beq	1146c <__snprintf_chk@plt+0xa6c>
   11418:	add	r6, sp, #96	; 0x60
   1141c:	mov	r0, r6
   11420:	mov	r2, r5
   11424:	mov	r1, #1024	; 0x400
   11428:	bl	108c8 <fgets@plt>
   1142c:	cmp	r0, #0
   11430:	beq	1146c <__snprintf_chk@plt+0xa6c>
   11434:	mov	r0, r5
   11438:	bl	10994 <fclose@plt>
   1143c:	mov	r2, #3
   11440:	ldr	r1, [pc, #244]	; 1153c <__snprintf_chk@plt+0xb3c>
   11444:	mov	r0, r6
   11448:	bl	109dc <strncmp@plt>
   1144c:	subs	r7, r0, #0
   11450:	beq	114c0 <__snprintf_chk@plt+0xac0>
   11454:	mov	r0, r6
   11458:	mov	r2, #3
   1145c:	ldr	r1, [pc, #220]	; 11540 <__snprintf_chk@plt+0xb40>
   11460:	bl	109dc <strncmp@plt>
   11464:	cmp	r0, #0
   11468:	beq	1147c <__snprintf_chk@plt+0xa7c>
   1146c:	add	r3, sp, #5184	; 0x1440
   11470:	add	r3, r3, #48	; 0x30
   11474:	sub	r5, r3, #3
   11478:	b	11228 <__snprintf_chk@plt+0x828>
   1147c:	add	r3, sp, #5184	; 0x1440
   11480:	add	r3, r3, #48	; 0x30
   11484:	mov	r1, #47	; 0x2f
   11488:	sub	r0, r3, #3
   1148c:	bl	109b8 <strrchr@plt>
   11490:	subs	r6, r0, #0
   11494:	beq	11378 <__snprintf_chk@plt+0x978>
   11498:	mov	r1, #58	; 0x3a
   1149c:	bl	10958 <strchr@plt>
   114a0:	cmp	r0, #0
   114a4:	beq	1146c <__snprintf_chk@plt+0xa6c>
   114a8:	add	r2, sp, #5184	; 0x1440
   114ac:	mov	r3, #0
   114b0:	add	r2, r2, #48	; 0x30
   114b4:	sub	r5, r2, #3
   114b8:	strb	r3, [r6]
   114bc:	b	11228 <__snprintf_chk@plt+0x828>
   114c0:	add	r3, sp, #5184	; 0x1440
   114c4:	add	r3, r3, #48	; 0x30
   114c8:	sub	r5, r3, #3
   114cc:	mov	r0, r5
   114d0:	mov	r1, #46	; 0x2e
   114d4:	bl	109b8 <strrchr@plt>
   114d8:	cmp	r0, #0
   114dc:	strbne	r7, [r0]
   114e0:	bne	11228 <__snprintf_chk@plt+0x828>
   114e4:	b	11378 <__snprintf_chk@plt+0x978>
   114e8:	ldr	r4, [sp, #16]
   114ec:	b	11394 <__snprintf_chk@plt+0x994>
   114f0:	mvn	r4, #1
   114f4:	b	1138c <__snprintf_chk@plt+0x98c>
   114f8:	bl	108e0 <__stack_chk_fail@plt>
   114fc:	andeq	r2, r1, r8, lsr r0
   11500:	andeq	r2, r2, r8, ror #28
   11504:	andeq	r2, r1, r8, asr #32
   11508:	andeq	r2, r1, r0, asr r0
   1150c:	andeq	r3, r2, ip, lsr r0
   11510:	andeq	r2, r1, r8, rrx
   11514:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   11518:	andeq	r1, r0, r8
   1151c:	andeq	r2, r1, r8, lsl #1
   11520:	ldrdeq	r1, [r1], -r8
   11524:	muleq	r1, ip, r0
   11528:	muleq	r1, r8, r0
   1152c:	andeq	r2, r1, r0, lsl #4
   11530:	andeq	r2, r1, r4, lsr #1
   11534:	andeq	r1, r0, r9
   11538:	andeq	r2, r1, r4, ror r0
   1153c:	andeq	r2, r1, r0, lsl #1
   11540:	andeq	r2, r1, r4, lsl #1
   11544:	push	{r4, r5, r6, lr}
   11548:	mov	r6, r0
   1154c:	ldm	r0, {r0, r3}
   11550:	cmp	r3, #0
   11554:	beq	11588 <__snprintf_chk@plt+0xb88>
   11558:	add	r4, r0, #24
   1155c:	mov	r5, #0
   11560:	ldr	r0, [r4, #-20]	; 0xffffffec
   11564:	bl	108bc <free@plt>
   11568:	ldr	r0, [r4, #-24]	; 0xffffffe8
   1156c:	bl	108bc <free@plt>
   11570:	ldr	r3, [r6, #4]
   11574:	add	r5, r5, #1
   11578:	cmp	r3, r5
   1157c:	add	r4, r4, #24
   11580:	bhi	11560 <__snprintf_chk@plt+0xb60>
   11584:	ldr	r0, [r6]
   11588:	bl	108bc <free@plt>
   1158c:	mov	r0, r6
   11590:	pop	{r4, r5, r6, lr}
   11594:	b	108bc <free@plt>
   11598:	push	{r4, r5, r6, r7, lr}
   1159c:	sub	sp, sp, #12
   115a0:	ldr	r6, [pc, #208]	; 11678 <__snprintf_chk@plt+0xc78>
   115a4:	mov	r7, #0
   115a8:	mov	r1, #8
   115ac:	ldr	r3, [r6]
   115b0:	mov	r0, #1
   115b4:	str	r3, [sp, #4]
   115b8:	str	r7, [sp]
   115bc:	bl	10880 <calloc@plt>
   115c0:	subs	r4, r0, #0
   115c4:	beq	11658 <__snprintf_chk@plt+0xc58>
   115c8:	mov	r5, r4
   115cc:	mov	r1, sp
   115d0:	str	r7, [r5, #4]!
   115d4:	ldr	r3, [pc, #160]	; 1167c <__snprintf_chk@plt+0xc7c>
   115d8:	mov	r2, r5
   115dc:	ldr	r0, [pc, #156]	; 11680 <__snprintf_chk@plt+0xc80>
   115e0:	bl	110f8 <__snprintf_chk@plt+0x6f8>
   115e4:	cmp	r0, r7
   115e8:	bne	1164c <__snprintf_chk@plt+0xc4c>
   115ec:	ldr	r3, [pc, #144]	; 11684 <__snprintf_chk@plt+0xc84>
   115f0:	mov	r2, r5
   115f4:	mov	r1, sp
   115f8:	ldr	r0, [pc, #136]	; 11688 <__snprintf_chk@plt+0xc88>
   115fc:	bl	110f8 <__snprintf_chk@plt+0x6f8>
   11600:	cmp	r0, r7
   11604:	bne	1164c <__snprintf_chk@plt+0xc4c>
   11608:	mov	r2, r5
   1160c:	mov	r1, sp
   11610:	ldr	r3, [pc, #116]	; 1168c <__snprintf_chk@plt+0xc8c>
   11614:	ldr	r0, [pc, #116]	; 11690 <__snprintf_chk@plt+0xc90>
   11618:	bl	110f8 <__snprintf_chk@plt+0x6f8>
   1161c:	cmp	r0, r7
   11620:	bne	1164c <__snprintf_chk@plt+0xc4c>
   11624:	ldr	r0, [sp]
   11628:	cmp	r0, r7
   1162c:	beq	1164c <__snprintf_chk@plt+0xc4c>
   11630:	ldr	r3, [pc, #92]	; 11694 <__snprintf_chk@plt+0xc94>
   11634:	mov	r2, #24
   11638:	ldr	r1, [r4, #4]
   1163c:	bl	109d0 <qsort@plt>
   11640:	ldr	r3, [sp]
   11644:	str	r3, [r4]
   11648:	b	11658 <__snprintf_chk@plt+0xc58>
   1164c:	mov	r0, r4
   11650:	bl	11544 <__snprintf_chk@plt+0xb44>
   11654:	mov	r4, #0
   11658:	ldr	r2, [sp, #4]
   1165c:	ldr	r3, [r6]
   11660:	mov	r0, r4
   11664:	cmp	r2, r3
   11668:	bne	11674 <__snprintf_chk@plt+0xc74>
   1166c:	add	sp, sp, #12
   11670:	pop	{r4, r5, r6, r7, pc}
   11674:	bl	108e0 <__stack_chk_fail@plt>
   11678:	andeq	r2, r2, r8, ror #28
   1167c:	strdeq	r0, [r1], -ip
   11680:	andeq	r2, r1, ip, lsr #1
   11684:	muleq	r1, r8, lr
   11688:	strheq	r2, [r1], -r8
   1168c:	andeq	r0, r1, ip, asr #25
   11690:	andeq	r2, r1, r0, asr #1
   11694:	strheq	r1, [r1], -r8
   11698:	cmp	r0, #105	; 0x69
   1169c:	beq	11800 <__snprintf_chk@plt+0xe00>
   116a0:	bls	116dc <__snprintf_chk@plt+0xcdc>
   116a4:	cmp	r0, #201	; 0xc9
   116a8:	beq	117f8 <__snprintf_chk@plt+0xdf8>
   116ac:	bls	11738 <__snprintf_chk@plt+0xd38>
   116b0:	cmp	r0, #204	; 0xcc
   116b4:	beq	117e8 <__snprintf_chk@plt+0xde8>
   116b8:	bhi	11718 <__snprintf_chk@plt+0xd18>
   116bc:	cmp	r0, #202	; 0xca
   116c0:	beq	11790 <__snprintf_chk@plt+0xd90>
   116c4:	ldr	r2, [pc, #316]	; 11808 <__snprintf_chk@plt+0xe08>
   116c8:	ldr	r3, [pc, #316]	; 1180c <__snprintf_chk@plt+0xe0c>
   116cc:	cmp	r0, #203	; 0xcb
   116d0:	moveq	r0, r2
   116d4:	movne	r0, r3
   116d8:	bx	lr
   116dc:	cmp	r0, #100	; 0x64
   116e0:	beq	117f0 <__snprintf_chk@plt+0xdf0>
   116e4:	bhi	11764 <__snprintf_chk@plt+0xd64>
   116e8:	cmp	r0, #1
   116ec:	beq	117e0 <__snprintf_chk@plt+0xde0>
   116f0:	cmp	r0, #0
   116f4:	beq	117c0 <__snprintf_chk@plt+0xdc0>
   116f8:	cmp	r0, #2
   116fc:	beq	117b0 <__snprintf_chk@plt+0xdb0>
   11700:	ldr	r2, [pc, #264]	; 11810 <__snprintf_chk@plt+0xe10>
   11704:	ldr	r3, [pc, #256]	; 1180c <__snprintf_chk@plt+0xe0c>
   11708:	cmp	r0, #3
   1170c:	moveq	r0, r2
   11710:	movne	r0, r3
   11714:	bx	lr
   11718:	cmp	r0, #205	; 0xcd
   1171c:	beq	11798 <__snprintf_chk@plt+0xd98>
   11720:	ldr	r2, [pc, #236]	; 11814 <__snprintf_chk@plt+0xe14>
   11724:	ldr	r3, [pc, #224]	; 1180c <__snprintf_chk@plt+0xe0c>
   11728:	cmp	r0, #206	; 0xce
   1172c:	moveq	r0, r2
   11730:	movne	r0, r3
   11734:	bx	lr
   11738:	cmp	r0, #107	; 0x6b
   1173c:	beq	117d8 <__snprintf_chk@plt+0xdd8>
   11740:	bcc	117b8 <__snprintf_chk@plt+0xdb8>
   11744:	cmp	r0, #108	; 0x6c
   11748:	beq	117a8 <__snprintf_chk@plt+0xda8>
   1174c:	ldr	r2, [pc, #196]	; 11818 <__snprintf_chk@plt+0xe18>
   11750:	ldr	r3, [pc, #180]	; 1180c <__snprintf_chk@plt+0xe0c>
   11754:	cmp	r0, #200	; 0xc8
   11758:	moveq	r0, r2
   1175c:	movne	r0, r3
   11760:	bx	lr
   11764:	cmp	r0, #102	; 0x66
   11768:	beq	117d0 <__snprintf_chk@plt+0xdd0>
   1176c:	bcc	117c8 <__snprintf_chk@plt+0xdc8>
   11770:	cmp	r0, #103	; 0x67
   11774:	beq	117a0 <__snprintf_chk@plt+0xda0>
   11778:	ldr	r2, [pc, #156]	; 1181c <__snprintf_chk@plt+0xe1c>
   1177c:	ldr	r3, [pc, #136]	; 1180c <__snprintf_chk@plt+0xe0c>
   11780:	cmp	r0, #104	; 0x68
   11784:	moveq	r0, r2
   11788:	movne	r0, r3
   1178c:	bx	lr
   11790:	ldr	r0, [pc, #136]	; 11820 <__snprintf_chk@plt+0xe20>
   11794:	bx	lr
   11798:	ldr	r0, [pc, #132]	; 11824 <__snprintf_chk@plt+0xe24>
   1179c:	bx	lr
   117a0:	ldr	r0, [pc, #128]	; 11828 <__snprintf_chk@plt+0xe28>
   117a4:	bx	lr
   117a8:	ldr	r0, [pc, #124]	; 1182c <__snprintf_chk@plt+0xe2c>
   117ac:	bx	lr
   117b0:	ldr	r0, [pc, #120]	; 11830 <__snprintf_chk@plt+0xe30>
   117b4:	bx	lr
   117b8:	ldr	r0, [pc, #116]	; 11834 <__snprintf_chk@plt+0xe34>
   117bc:	bx	lr
   117c0:	ldr	r0, [pc, #112]	; 11838 <__snprintf_chk@plt+0xe38>
   117c4:	bx	lr
   117c8:	ldr	r0, [pc, #108]	; 1183c <__snprintf_chk@plt+0xe3c>
   117cc:	bx	lr
   117d0:	ldr	r0, [pc, #104]	; 11840 <__snprintf_chk@plt+0xe40>
   117d4:	bx	lr
   117d8:	ldr	r0, [pc, #100]	; 11844 <__snprintf_chk@plt+0xe44>
   117dc:	bx	lr
   117e0:	ldr	r0, [pc, #96]	; 11848 <__snprintf_chk@plt+0xe48>
   117e4:	bx	lr
   117e8:	ldr	r0, [pc, #92]	; 1184c <__snprintf_chk@plt+0xe4c>
   117ec:	bx	lr
   117f0:	ldr	r0, [pc, #88]	; 11850 <__snprintf_chk@plt+0xe50>
   117f4:	bx	lr
   117f8:	ldr	r0, [pc, #84]	; 11854 <__snprintf_chk@plt+0xe54>
   117fc:	bx	lr
   11800:	ldr	r0, [pc, #80]	; 11858 <__snprintf_chk@plt+0xe58>
   11804:	bx	lr
   11808:	andeq	r2, r1, ip, ror #2
   1180c:	andeq	r2, r1, r4, asr #1
   11810:	andeq	r2, r1, ip, asr #1
   11814:	muleq	r1, r0, r1
   11818:	andeq	r2, r1, r8, asr #2
   1181c:	andeq	r2, r1, ip, lsl #2
   11820:	andeq	r2, r1, r0, ror #2
   11824:	andeq	r2, r1, r4, lsl #3
   11828:	strdeq	r2, [r1], -ip
   1182c:	andeq	r2, r1, r0, asr #2
   11830:	andeq	r1, r1, r0, asr #31
   11834:	andeq	r2, r1, r8, lsr #2
   11838:	andeq	r2, r1, r0, ror #1
   1183c:	andeq	r2, r1, r8, ror #1
   11840:	strdeq	r2, [r1], -r4
   11844:	andeq	r2, r1, r0, lsr #2
   11848:			; <UNDEFINED> instruction: 0x00011fbc
   1184c:	andeq	r2, r1, r4, ror r1
   11850:	ldrdeq	r2, [r1], -ip
   11854:	andeq	r2, r1, r4, asr r1
   11858:	andeq	r2, r1, r8, lsl r1
   1185c:	ldr	r3, [r0, #4]
   11860:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11864:	cmp	r3, #0
   11868:	sub	sp, sp, #8
   1186c:	ldr	r4, [r0]
   11870:	beq	11900 <__snprintf_chk@plt+0xf00>
   11874:	mov	r7, r0
   11878:	ldr	r8, [pc, #144]	; 11910 <__snprintf_chk@plt+0xf10>
   1187c:	ldr	sl, [pc, #144]	; 11914 <__snprintf_chk@plt+0xf14>
   11880:	ldr	r9, [pc, #144]	; 11918 <__snprintf_chk@plt+0xf18>
   11884:	add	r4, r4, #24
   11888:	mov	r5, #0
   1188c:	b	118cc <__snprintf_chk@plt+0xecc>
   11890:	ldr	r0, [r4, #-16]
   11894:	bl	11698 <__snprintf_chk@plt+0xc98>
   11898:	ldr	r3, [r4, #-4]
   1189c:	ldr	r2, [r4, #-20]	; 0xffffffec
   118a0:	str	r3, [sp, #4]
   118a4:	ldr	r3, [r4, #-8]
   118a8:	mov	r1, r9
   118ac:	str	r3, [sp]
   118b0:	add	r4, r4, #24
   118b4:	mov	r3, r0
   118b8:	mov	r0, #1
   118bc:	bl	10988 <__printf_chk@plt>
   118c0:	ldr	r3, [r7, #4]
   118c4:	cmp	r3, r5
   118c8:	bls	11900 <__snprintf_chk@plt+0xf00>
   118cc:	ldr	r6, [r4, #-24]	; 0xffffffe8
   118d0:	mov	r0, r8
   118d4:	mov	r1, r6
   118d8:	bl	10898 <strcmp@plt>
   118dc:	add	r5, r5, #1
   118e0:	cmp	r0, #0
   118e4:	beq	11890 <__snprintf_chk@plt+0xe90>
   118e8:	mov	r2, r6
   118ec:	mov	r1, sl
   118f0:	mov	r0, #1
   118f4:	bl	10988 <__printf_chk@plt>
   118f8:	ldr	r8, [r4, #-24]	; 0xffffffe8
   118fc:	b	11890 <__snprintf_chk@plt+0xe90>
   11900:	mov	r0, #10
   11904:	add	sp, sp, #8
   11908:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1190c:	b	10970 <putchar@plt>
   11910:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11914:	andeq	r2, r1, r0, lsr #3
   11918:			; <UNDEFINED> instruction: 0x000121b0
   1191c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11920:	sub	sp, sp, #12
   11924:	ldr	ip, [pc, #460]	; 11af8 <__snprintf_chk@plt+0x10f8>
   11928:	ldr	r9, [sp, #48]	; 0x30
   1192c:	mov	r5, r0
   11930:	cmp	r9, ip
   11934:	mov	r7, r1
   11938:	mov	r8, r2
   1193c:	ldr	r4, [r0]
   11940:	beq	11a58 <__snprintf_chk@plt+0x1058>
   11944:	mov	fp, r3
   11948:	ldrb	r3, [r3]
   1194c:	cmp	r3, #0
   11950:	beq	11a58 <__snprintf_chk@plt+0x1058>
   11954:	mov	r0, fp
   11958:	mov	r1, #47	; 0x2f
   1195c:	bl	109b8 <strrchr@plt>
   11960:	ldr	r6, [r5, #4]
   11964:	cmp	r0, #0
   11968:	addne	fp, r0, #1
   1196c:	cmp	r6, #0
   11970:	beq	11a4c <__snprintf_chk@plt+0x104c>
   11974:	mov	sl, #0
   11978:	mov	r5, sl
   1197c:	b	11998 <__snprintf_chk@plt+0xf98>
   11980:	cmp	r3, r9
   11984:	beq	11ac4 <__snprintf_chk@plt+0x10c4>
   11988:	add	r5, r5, #1
   1198c:	cmp	r6, r5
   11990:	add	r4, r4, #24
   11994:	beq	11a4c <__snprintf_chk@plt+0x104c>
   11998:	cmp	r7, #0
   1199c:	ldr	r3, [r4, #8]
   119a0:	bne	11980 <__snprintf_chk@plt+0xf80>
   119a4:	cmp	r3, r9
   119a8:	bne	11988 <__snprintf_chk@plt+0xf88>
   119ac:	ldr	r3, [r4, #4]
   119b0:	mov	r1, r3
   119b4:	mov	r0, fp
   119b8:	bl	10898 <strcmp@plt>
   119bc:	cmp	r0, #0
   119c0:	bne	11988 <__snprintf_chk@plt+0xf88>
   119c4:	add	r5, r5, #1
   119c8:	cmp	r5, r6
   119cc:	ldr	fp, [r4], #24
   119d0:	bcc	119f4 <__snprintf_chk@plt+0xff4>
   119d4:	b	11a50 <__snprintf_chk@plt+0x1050>
   119d8:	cmp	sl, #1
   119dc:	bne	119e8 <__snprintf_chk@plt+0xfe8>
   119e0:	cmp	r8, r3
   119e4:	beq	11ab0 <__snprintf_chk@plt+0x10b0>
   119e8:	cmp	r5, r6
   119ec:	add	r4, r4, #24
   119f0:	bcs	11a4c <__snprintf_chk@plt+0x104c>
   119f4:	ldr	r1, [r4]
   119f8:	mov	r0, fp
   119fc:	bl	10898 <strcmp@plt>
   11a00:	add	r5, r5, #1
   11a04:	cmp	r0, #0
   11a08:	bne	11a4c <__snprintf_chk@plt+0x104c>
   11a0c:	cmp	r7, #0
   11a10:	ldr	r3, [r4, #8]
   11a14:	beq	119e0 <__snprintf_chk@plt+0xfe0>
   11a18:	cmp	r9, r3
   11a1c:	bne	119d8 <__snprintf_chk@plt+0xfd8>
   11a20:	mov	r1, r7
   11a24:	ldr	r0, [r4, #4]
   11a28:	str	r3, [sp, #4]
   11a2c:	bl	10898 <strcmp@plt>
   11a30:	ldr	r3, [sp, #4]
   11a34:	cmp	r0, #0
   11a38:	bne	119d8 <__snprintf_chk@plt+0xfd8>
   11a3c:	cmp	r5, r6
   11a40:	mov	sl, #1
   11a44:	add	r4, r4, #24
   11a48:	bcc	119f4 <__snprintf_chk@plt+0xff4>
   11a4c:	mov	r0, #0
   11a50:	add	sp, sp, #12
   11a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a58:	ldr	r6, [r5, #4]
   11a5c:	cmp	r6, #0
   11a60:	movne	r9, #0
   11a64:	movne	r5, r9
   11a68:	bne	11a94 <__snprintf_chk@plt+0x1094>
   11a6c:	b	11a4c <__snprintf_chk@plt+0x104c>
   11a70:	ldr	r0, [r4, #4]
   11a74:	bl	10898 <strcmp@plt>
   11a78:	cmp	r0, #0
   11a7c:	beq	11abc <__snprintf_chk@plt+0x10bc>
   11a80:	cmp	r9, #1
   11a84:	beq	11aa4 <__snprintf_chk@plt+0x10a4>
   11a88:	cmp	r6, r5
   11a8c:	add	r4, r4, #24
   11a90:	beq	11a4c <__snprintf_chk@plt+0x104c>
   11a94:	cmp	r7, #0
   11a98:	mov	r1, r7
   11a9c:	add	r5, r5, #1
   11aa0:	bne	11a70 <__snprintf_chk@plt+0x1070>
   11aa4:	ldr	r3, [r4, #8]
   11aa8:	cmp	r3, r8
   11aac:	bne	11a88 <__snprintf_chk@plt+0x1088>
   11ab0:	ldr	r0, [r4, #4]
   11ab4:	add	sp, sp, #12
   11ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11abc:	mov	r9, #1
   11ac0:	b	11a88 <__snprintf_chk@plt+0x1088>
   11ac4:	ldr	r3, [r4, #4]
   11ac8:	mov	r1, r7
   11acc:	mov	r0, r3
   11ad0:	str	r3, [sp, #4]
   11ad4:	bl	10898 <strcmp@plt>
   11ad8:	ldr	r3, [sp, #4]
   11adc:	cmp	r0, #0
   11ae0:	beq	11af0 <__snprintf_chk@plt+0x10f0>
   11ae4:	cmp	sl, #1
   11ae8:	beq	119b0 <__snprintf_chk@plt+0xfb0>
   11aec:	b	11988 <__snprintf_chk@plt+0xf88>
   11af0:	mov	sl, #1
   11af4:	b	11988 <__snprintf_chk@plt+0xf88>
   11af8:	strdeq	pc, [r0], -lr
   11afc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b00:	mov	r6, r1
   11b04:	ldr	r1, [pc, #496]	; 11cfc <__snprintf_chk@plt+0x12fc>
   11b08:	sub	sp, sp, #116	; 0x74
   11b0c:	mov	r5, r0
   11b10:	ldr	ip, [r1]
   11b14:	str	r2, [sp, #8]
   11b18:	mov	r1, r3
   11b1c:	add	r2, sp, #16
   11b20:	mov	r0, #3
   11b24:	str	ip, [sp, #108]	; 0x6c
   11b28:	ldr	r4, [r5]
   11b2c:	ldr	r7, [sp, #152]	; 0x98
   11b30:	bl	10934 <__fxstat@plt>
   11b34:	subs	r9, r0, #0
   11b38:	bne	11ce8 <__snprintf_chk@plt+0x12e8>
   11b3c:	ldr	r3, [sp, #32]
   11b40:	and	r3, r3, #61440	; 0xf000
   11b44:	cmp	r3, #8192	; 0x2000
   11b48:	bne	11cc8 <__snprintf_chk@plt+0x12c8>
   11b4c:	ldr	r2, [sp, #48]	; 0x30
   11b50:	ldr	r8, [sp, #52]	; 0x34
   11b54:	ldr	fp, [r5, #4]
   11b58:	lsr	sl, r2, #12
   11b5c:	orr	sl, sl, r8, lsl #20
   11b60:	lsl	r1, r2, #12
   11b64:	bic	r8, r8, #4080	; 0xff0
   11b68:	bic	sl, sl, #255	; 0xff
   11b6c:	uxtb	r2, r2
   11b70:	bic	r8, r8, #15
   11b74:	orr	r2, sl, r2
   11b78:	cmp	fp, #0
   11b7c:	str	r2, [sp, #12]
   11b80:	orr	r8, r8, r1, lsr #20
   11b84:	beq	11c74 <__snprintf_chk@plt+0x1274>
   11b88:	mov	r5, r9
   11b8c:	b	11ba8 <__snprintf_chk@plt+0x11a8>
   11b90:	cmp	r3, r7
   11b94:	beq	11c94 <__snprintf_chk@plt+0x1294>
   11b98:	add	r5, r5, #1
   11b9c:	cmp	fp, r5
   11ba0:	add	r4, r4, #24
   11ba4:	beq	11c74 <__snprintf_chk@plt+0x1274>
   11ba8:	cmp	r6, #0
   11bac:	ldr	r3, [r4, #8]
   11bb0:	bne	11b90 <__snprintf_chk@plt+0x1190>
   11bb4:	cmp	r3, r7
   11bb8:	bne	11b98 <__snprintf_chk@plt+0x1198>
   11bbc:	ldr	r3, [r4, #16]
   11bc0:	cmp	r3, r8
   11bc4:	bne	11b98 <__snprintf_chk@plt+0x1198>
   11bc8:	ldr	r3, [r4, #20]
   11bcc:	cmp	r3, r2
   11bd0:	bne	11b98 <__snprintf_chk@plt+0x1198>
   11bd4:	add	r5, r5, #1
   11bd8:	mov	sl, r4
   11bdc:	cmp	r5, fp
   11be0:	ldr	r4, [sl], #24
   11be4:	bcs	11c74 <__snprintf_chk@plt+0x1274>
   11be8:	str	r8, [sp, #4]
   11bec:	mov	r8, r5
   11bf0:	ldr	r5, [sp, #8]
   11bf4:	b	11c18 <__snprintf_chk@plt+0x1218>
   11bf8:	cmp	r9, #1
   11bfc:	bne	11c08 <__snprintf_chk@plt+0x1208>
   11c00:	cmp	r2, r5
   11c04:	beq	11cc0 <__snprintf_chk@plt+0x12c0>
   11c08:	add	r8, r8, #1
   11c0c:	cmp	r8, fp
   11c10:	add	sl, sl, #24
   11c14:	bcs	11c74 <__snprintf_chk@plt+0x1274>
   11c18:	ldr	r1, [sl]
   11c1c:	mov	r0, r4
   11c20:	bl	10898 <strcmp@plt>
   11c24:	cmp	r0, #0
   11c28:	bne	11c74 <__snprintf_chk@plt+0x1274>
   11c2c:	cmp	r6, #0
   11c30:	ldr	r2, [sl, #8]
   11c34:	beq	11c00 <__snprintf_chk@plt+0x1200>
   11c38:	cmp	r2, r7
   11c3c:	bne	11bf8 <__snprintf_chk@plt+0x11f8>
   11c40:	ldr	r1, [sl, #16]
   11c44:	ldr	r3, [sp, #4]
   11c48:	cmp	r1, r3
   11c4c:	bne	11bf8 <__snprintf_chk@plt+0x11f8>
   11c50:	ldr	r1, [sl, #20]
   11c54:	ldr	r3, [sp, #12]
   11c58:	cmp	r1, r3
   11c5c:	bne	11bf8 <__snprintf_chk@plt+0x11f8>
   11c60:	add	r8, r8, #1
   11c64:	cmp	r8, fp
   11c68:	mov	r9, #1
   11c6c:	add	sl, sl, #24
   11c70:	bcc	11c18 <__snprintf_chk@plt+0x1218>
   11c74:	mov	r0, #0
   11c78:	ldr	r3, [pc, #124]	; 11cfc <__snprintf_chk@plt+0x12fc>
   11c7c:	ldr	r2, [sp, #108]	; 0x6c
   11c80:	ldr	r3, [r3]
   11c84:	cmp	r2, r3
   11c88:	bne	11cf8 <__snprintf_chk@plt+0x12f8>
   11c8c:	add	sp, sp, #116	; 0x74
   11c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c94:	ldr	r3, [r4, #16]
   11c98:	cmp	r3, r8
   11c9c:	bne	11b98 <__snprintf_chk@plt+0x1198>
   11ca0:	ldr	r3, [r4, #20]
   11ca4:	cmp	r3, r2
   11ca8:	beq	11cb8 <__snprintf_chk@plt+0x12b8>
   11cac:	cmp	r9, #1
   11cb0:	beq	11bcc <__snprintf_chk@plt+0x11cc>
   11cb4:	b	11b98 <__snprintf_chk@plt+0x1198>
   11cb8:	mov	r9, #1
   11cbc:	b	11b98 <__snprintf_chk@plt+0x1198>
   11cc0:	ldr	r0, [sl, #4]
   11cc4:	b	11c78 <__snprintf_chk@plt+0x1278>
   11cc8:	ldr	r3, [pc, #48]	; 11d00 <__snprintf_chk@plt+0x1300>
   11ccc:	mov	r2, #37	; 0x25
   11cd0:	mov	r1, #1
   11cd4:	ldr	r3, [r3]
   11cd8:	ldr	r0, [pc, #36]	; 11d04 <__snprintf_chk@plt+0x1304>
   11cdc:	bl	10904 <fwrite@plt>
   11ce0:	mov	r0, r9
   11ce4:	b	11c78 <__snprintf_chk@plt+0x1278>
   11ce8:	ldr	r0, [pc, #24]	; 11d08 <__snprintf_chk@plt+0x1308>
   11cec:	bl	108f8 <perror@plt>
   11cf0:	mov	r0, #0
   11cf4:	b	11c78 <__snprintf_chk@plt+0x1278>
   11cf8:	bl	108e0 <__stack_chk_fail@plt>
   11cfc:	andeq	r2, r2, r8, ror #28
   11d00:	andeq	r3, r2, r0, lsr r0
   11d04:	ldrdeq	r2, [r1], -ip
   11d08:	andeq	r2, r1, r4, asr #3
   11d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d10:	sub	sp, sp, #20
   11d14:	ldr	r8, [r0, #4]
   11d18:	ldr	r4, [r0]
   11d1c:	cmp	r8, #0
   11d20:	beq	11e50 <__snprintf_chk@plt+0x1450>
   11d24:	mov	r7, #0
   11d28:	str	r3, [sp, #8]
   11d2c:	str	r2, [sp, #12]
   11d30:	mov	r5, r1
   11d34:	ldr	r9, [pc, #284]	; 11e58 <__snprintf_chk@plt+0x1458>
   11d38:	add	r4, r4, #24
   11d3c:	str	r7, [sp, #4]
   11d40:	mov	r6, r7
   11d44:	mov	fp, r7
   11d48:	b	11d7c <__snprintf_chk@plt+0x137c>
   11d4c:	mov	r1, r5
   11d50:	ldr	r0, [r4, #-20]	; 0xffffffec
   11d54:	bl	10898 <strcmp@plt>
   11d58:	cmp	r0, #0
   11d5c:	beq	11e34 <__snprintf_chk@plt+0x1434>
   11d60:	ldr	r3, [sp, #4]
   11d64:	cmp	r3, #1
   11d68:	beq	11d84 <__snprintf_chk@plt+0x1384>
   11d6c:	add	fp, fp, #1
   11d70:	cmp	fp, r8
   11d74:	add	r4, r4, #24
   11d78:	beq	11df4 <__snprintf_chk@plt+0x13f4>
   11d7c:	cmp	r5, #0
   11d80:	bne	11d4c <__snprintf_chk@plt+0x134c>
   11d84:	ldr	sl, [r4, #-24]	; 0xffffffe8
   11d88:	mov	r0, r9
   11d8c:	mov	r1, sl
   11d90:	bl	10898 <strcmp@plt>
   11d94:	cmp	r0, #0
   11d98:	beq	11e08 <__snprintf_chk@plt+0x1408>
   11d9c:	cmp	r7, #0
   11da0:	eorne	r6, r6, #1
   11da4:	moveq	r6, #0
   11da8:	cmp	r6, #0
   11dac:	bne	11dfc <__snprintf_chk@plt+0x13fc>
   11db0:	ldr	r1, [r4, #-16]
   11db4:	ldr	r3, [sp, #8]
   11db8:	cmp	r3, r1
   11dbc:	beq	11e40 <__snprintf_chk@plt+0x1440>
   11dc0:	ldr	r3, [sp, #12]
   11dc4:	cmp	r3, r1
   11dc8:	movne	r7, #0
   11dcc:	movne	r9, sl
   11dd0:	movne	r6, r7
   11dd4:	bne	11d6c <__snprintf_chk@plt+0x136c>
   11dd8:	add	fp, fp, #1
   11ddc:	cmp	fp, r8
   11de0:	ldr	r7, [r4, #-20]	; 0xffffffec
   11de4:	mov	r9, sl
   11de8:	mov	r6, #0
   11dec:	add	r4, r4, #24
   11df0:	bne	11d7c <__snprintf_chk@plt+0x137c>
   11df4:	cmp	r6, #0
   11df8:	movne	r7, #0
   11dfc:	mov	r0, r7
   11e00:	add	sp, sp, #20
   11e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e08:	ldr	r1, [r4, #-16]
   11e0c:	ldr	r3, [sp, #8]
   11e10:	cmp	r1, r3
   11e14:	beq	11e48 <__snprintf_chk@plt+0x1448>
   11e18:	cmp	r7, #0
   11e1c:	eoreq	r2, r6, #1
   11e20:	movne	r2, #0
   11e24:	cmp	r2, #0
   11e28:	beq	11d6c <__snprintf_chk@plt+0x136c>
   11e2c:	mov	sl, r9
   11e30:	b	11dc0 <__snprintf_chk@plt+0x13c0>
   11e34:	mov	r3, #1
   11e38:	str	r3, [sp, #4]
   11e3c:	b	11d6c <__snprintf_chk@plt+0x136c>
   11e40:	mov	r9, sl
   11e44:	mov	r7, r6
   11e48:	mov	r6, #1
   11e4c:	b	11d6c <__snprintf_chk@plt+0x136c>
   11e50:	mov	r7, r8
   11e54:	b	11dfc <__snprintf_chk@plt+0x13fc>
   11e58:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11e5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e60:	mov	r7, r0
   11e64:	ldr	r6, [pc, #72]	; 11eb4 <__snprintf_chk@plt+0x14b4>
   11e68:	ldr	r5, [pc, #72]	; 11eb8 <__snprintf_chk@plt+0x14b8>
   11e6c:	add	r6, pc, r6
   11e70:	add	r5, pc, r5
   11e74:	sub	r6, r6, r5
   11e78:	mov	r8, r1
   11e7c:	mov	r9, r2
   11e80:	bl	10860 <calloc@plt-0x20>
   11e84:	asrs	r6, r6, #2
   11e88:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e8c:	mov	r4, #0
   11e90:	add	r4, r4, #1
   11e94:	ldr	r3, [r5], #4
   11e98:	mov	r2, r9
   11e9c:	mov	r1, r8
   11ea0:	mov	r0, r7
   11ea4:	blx	r3
   11ea8:	cmp	r6, r4
   11eac:	bne	11e90 <__snprintf_chk@plt+0x1490>
   11eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11eb4:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11eb8:	andeq	r0, r1, r8, ror #31
   11ebc:	bx	lr

Disassembly of section .fini:

00011ec0 <.fini>:
   11ec0:	push	{r3, lr}
   11ec4:	pop	{r3, pc}
