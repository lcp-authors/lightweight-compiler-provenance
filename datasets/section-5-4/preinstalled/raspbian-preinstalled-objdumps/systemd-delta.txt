
raspbian-preinstalled/systemd-delta:     file format elf32-littlearm


Disassembly of section .init:

00000f94 <.init>:
 f94:	push	{r3, lr}
 f98:	bl	1b60 <log_oom_internal@plt+0x8a0>
 f9c:	pop	{r3, pc}

Disassembly of section .plt:

00000fa0 <path_is_absolute@plt-0x14>:
     fa0:	push	{lr}		; (str lr, [sp, #-4]!)
     fa4:	ldr	lr, [pc, #4]	; fb0 <path_is_absolute@plt-0x4>
     fa8:	add	lr, pc, lr
     fac:	ldr	pc, [lr, #8]!
     fb0:	strdeq	r2, [r1], -ip

00000fb4 <path_is_absolute@plt>:
     fb4:	add	ip, pc, #0, 12
     fb8:	add	ip, ip, #73728	; 0x12000
     fbc:	ldr	pc, [ip, #3836]!	; 0xefc

00000fc0 <get_files_in_directory@plt>:
     fc0:	add	ip, pc, #0, 12
     fc4:	add	ip, ip, #73728	; 0x12000
     fc8:	ldr	pc, [ip, #3828]!	; 0xef4

00000fcc <version@plt>:
     fcc:	add	ip, pc, #0, 12
     fd0:	add	ip, ip, #73728	; 0x12000
     fd4:	ldr	pc, [ip, #3820]!	; 0xeec

00000fd8 <path_startswith@plt>:
     fd8:	add	ip, pc, #0, 12
     fdc:	add	ip, ip, #73728	; 0x12000
     fe0:	ldr	pc, [ip, #3812]!	; 0xee4

00000fe4 <dirent_is_file@plt>:
     fe4:	add	ip, pc, #0, 12
     fe8:	add	ip, ip, #73728	; 0x12000
     fec:	ldr	pc, [ip, #3804]!	; 0xedc

00000ff0 <free@plt>:
     ff0:	add	ip, pc, #0, 12
     ff4:	add	ip, ip, #73728	; 0x12000
     ff8:	ldr	pc, [ip, #3796]!	; 0xed4

00000ffc <log_open@plt>:
     ffc:	add	ip, pc, #0, 12
    1000:	add	ip, ip, #73728	; 0x12000
    1004:	ldr	pc, [ip, #3788]!	; 0xecc

00001008 <log_assert_failed_unreachable_realm@plt>:
    1008:	add	ip, pc, #0, 12
    100c:	add	ip, ip, #73728	; 0x12000
    1010:	ldr	pc, [ip, #3780]!	; 0xec4

00001014 <split@plt>:
    1014:	add	ip, pc, #0, 12
    1018:	add	ip, ip, #73728	; 0x12000
    101c:	ldr	pc, [ip, #3772]!	; 0xebc

00001020 <strncmp@plt>:
    1020:	add	ip, pc, #0, 12
    1024:	add	ip, ip, #73728	; 0x12000
    1028:	ldr	pc, [ip, #3764]!	; 0xeb4

0000102c <internal_hashmap_iterate@plt>:
    102c:	add	ip, pc, #0, 12
    1030:	add	ip, ip, #73728	; 0x12000
    1034:	ldr	pc, [ip, #3756]!	; 0xeac

00001038 <closedir@plt>:
    1038:	add	ip, pc, #0, 12
    103c:	add	ip, ip, #73728	; 0x12000
    1040:	ldr	pc, [ip, #3748]!	; 0xea4

00001044 <ask_password_agent_close@plt>:
    1044:	add	ip, pc, #0, 12
    1048:	add	ip, ip, #73728	; 0x12000
    104c:	ldr	pc, [ip, #3740]!	; 0xe9c

00001050 <polkit_agent_close@plt>:
    1050:	add	ip, pc, #0, 12
    1054:	add	ip, ip, #73728	; 0x12000
    1058:	ldr	pc, [ip, #3732]!	; 0xe94

0000105c <mac_selinux_finish@plt>:
    105c:	add	ip, pc, #0, 12
    1060:	add	ip, ip, #73728	; 0x12000
    1064:	ldr	pc, [ip, #3724]!	; 0xe8c

00001068 <stpcpy@plt>:
    1068:	add	ip, pc, #0, 12
    106c:	add	ip, ip, #73728	; 0x12000
    1070:	ldr	pc, [ip, #3716]!	; 0xe84

00001074 <wait_for_terminate_and_check@plt>:
    1074:	add	ip, pc, #0, 12
    1078:	add	ip, ip, #73728	; 0x12000
    107c:	ldr	pc, [ip, #3708]!	; 0xe7c

00001080 <readdir64@plt>:
    1080:	add	ip, pc, #0, 12
    1084:	add	ip, ip, #73728	; 0x12000
    1088:	ldr	pc, [ip, #3700]!	; 0xe74

0000108c <strv_sort@plt>:
    108c:	add	ip, pc, #0, 12
    1090:	add	ip, ip, #73728	; 0x12000
    1094:	ldr	pc, [ip, #3692]!	; 0xe6c

00001098 <strspn@plt>:
    1098:	add	ip, pc, #0, 12
    109c:	add	ip, ip, #73728	; 0x12000
    10a0:	ldr	pc, [ip, #3684]!	; 0xe64

000010a4 <opendir@plt>:
    10a4:	add	ip, pc, #0, 12
    10a8:	add	ip, ip, #73728	; 0x12000
    10ac:	ldr	pc, [ip, #3676]!	; 0xe5c

000010b0 <path_equal@plt>:
    10b0:	add	ip, pc, #0, 12
    10b4:	add	ip, ip, #73728	; 0x12000
    10b8:	ldr	pc, [ip, #3668]!	; 0xe54

000010bc <endswith@plt>:
    10bc:	add	ip, pc, #0, 12
    10c0:	add	ip, ip, #73728	; 0x12000
    10c4:	ldr	pc, [ip, #3660]!	; 0xe4c

000010c8 <log_get_max_level_realm@plt>:
    10c8:	add	ip, pc, #0, 12
    10cc:	add	ip, ip, #73728	; 0x12000
    10d0:	ldr	pc, [ip, #3652]!	; 0xe44

000010d4 <path_simplify@plt>:
    10d4:	add	ip, pc, #0, 12
    10d8:	add	ip, ip, #73728	; 0x12000
    10dc:	ldr	pc, [ip, #3644]!	; 0xe3c

000010e0 <greedy_realloc0@plt>:
    10e0:	add	ip, pc, #0, 12
    10e4:	add	ip, ip, #73728	; 0x12000
    10e8:	ldr	pc, [ip, #3636]!	; 0xe34

000010ec <null_or_empty_path@plt>:
    10ec:	add	ip, pc, #0, 12
    10f0:	add	ip, ip, #73728	; 0x12000
    10f4:	ldr	pc, [ip, #3628]!	; 0xe2c

000010f8 <abort@plt>:
    10f8:	add	ip, pc, #0, 12
    10fc:	add	ip, ip, #73728	; 0x12000
    1100:	ldr	pc, [ip, #3620]!	; 0xe24

00001104 <safe_fork_full@plt>:
    1104:	add	ip, pc, #0, 12
    1108:	add	ip, ip, #73728	; 0x12000
    110c:	ldr	pc, [ip, #3612]!	; 0xe1c

00001110 <internal_hashmap_remove@plt>:
    1110:	add	ip, pc, #0, 12
    1114:	add	ip, ip, #73728	; 0x12000
    1118:	ldr	pc, [ip, #3604]!	; 0xe14

0000111c <nulstr_contains@plt>:
    111c:	add	ip, pc, #0, 12
    1120:	add	ip, ip, #73728	; 0x12000
    1124:	ldr	pc, [ip, #3596]!	; 0xe0c

00001128 <readlink_malloc@plt>:
    1128:	add	ip, pc, #0, 12
    112c:	add	ip, ip, #73728	; 0x12000
    1130:	ldr	pc, [ip, #3588]!	; 0xe04

00001134 <__stack_chk_fail@plt>:
    1134:	add	ip, pc, #0, 12
    1138:	add	ip, ip, #73728	; 0x12000
    113c:	ldr	pc, [ip, #3580]!	; 0xdfc

00001140 <terminal_urlify_man@plt>:
    1140:	add	ip, pc, #0, 12
    1144:	add	ip, ip, #73728	; 0x12000
    1148:	ldr	pc, [ip, #3572]!	; 0xdf4

0000114c <internal_hashmap_free@plt>:
    114c:	add	ip, pc, #0, 12
    1150:	add	ip, ip, #73728	; 0x12000
    1154:	ldr	pc, [ip, #3564]!	; 0xdec

00001158 <putc@plt>:
    1158:	add	ip, pc, #0, 12
    115c:	add	ip, ip, #73728	; 0x12000
    1160:	ldr	pc, [ip, #3556]!	; 0xde4

00001164 <special_glyph@plt>:
    1164:	add	ip, pc, #0, 12
    1168:	add	ip, ip, #73728	; 0x12000
    116c:	ldr	pc, [ip, #3548]!	; 0xddc

00001170 <strstr@plt>:
    1170:	add	ip, pc, #0, 12
    1174:	add	ip, ip, #73728	; 0x12000
    1178:	ldr	pc, [ip, #3540]!	; 0xdd4

0000117c <parse_boolean@plt>:
    117c:	add	ip, pc, #0, 12
    1180:	add	ip, ip, #73728	; 0x12000
    1184:	ldr	pc, [ip, #3532]!	; 0xdcc

00001188 <dirent_ensure_type@plt>:
    1188:	add	ip, pc, #0, 12
    118c:	add	ip, ip, #73728	; 0x12000
    1190:	ldr	pc, [ip, #3524]!	; 0xdc4

00001194 <basename@plt>:
    1194:	add	ip, pc, #0, 12
    1198:	add	ip, ip, #73728	; 0x12000
    119c:	ldr	pc, [ip, #3516]!	; 0xdbc

000011a0 <getopt_long@plt>:
    11a0:	add	ip, pc, #0, 12
    11a4:	add	ip, ip, #73728	; 0x12000
    11a8:	ldr	pc, [ip, #3508]!	; 0xdb4

000011ac <pager_close@plt>:
    11ac:	add	ip, pc, #0, 12
    11b0:	add	ip, ip, #73728	; 0x12000
    11b4:	ldr	pc, [ip, #3500]!	; 0xdac

000011b8 <execlp@plt>:
    11b8:	add	ip, pc, #0, 12
    11bc:	add	ip, ip, #73728	; 0x12000
    11c0:	ldr	pc, [ip, #3492]!	; 0xda4

000011c4 <strjoin_real@plt>:
    11c4:	add	ip, pc, #0, 12
    11c8:	add	ip, ip, #73728	; 0x12000
    11cc:	ldr	pc, [ip, #3484]!	; 0xd9c

000011d0 <chase_symlinks@plt>:
    11d0:	add	ip, pc, #0, 12
    11d4:	add	ip, ip, #73728	; 0x12000
    11d8:	ldr	pc, [ip, #3476]!	; 0xd94

000011dc <strlen@plt>:
    11dc:	add	ip, pc, #0, 12
    11e0:	add	ip, ip, #73728	; 0x12000
    11e4:	ldr	pc, [ip, #3468]!	; 0xd8c

000011e8 <internal_hashmap_get@plt>:
    11e8:	add	ip, pc, #0, 12
    11ec:	add	ip, ip, #73728	; 0x12000
    11f0:	ldr	pc, [ip, #3460]!	; 0xd84

000011f4 <internal_ordered_hashmap_new@plt>:
    11f4:	add	ip, pc, #0, 12
    11f8:	add	ip, ip, #73728	; 0x12000
    11fc:	ldr	pc, [ip, #3452]!	; 0xd7c

00001200 <_exit@plt>:
    1200:	add	ip, pc, #0, 12
    1204:	add	ip, ip, #73728	; 0x12000
    1208:	ldr	pc, [ip, #3444]!	; 0xd74

0000120c <log_parse_environment_realm@plt>:
    120c:	add	ip, pc, #0, 12
    1210:	add	ip, ip, #73728	; 0x12000
    1214:	ldr	pc, [ip, #3436]!	; 0xd6c

00001218 <__errno_location@plt>:
    1218:	add	ip, pc, #0, 12
    121c:	add	ip, ip, #73728	; 0x12000
    1220:	ldr	pc, [ip, #3428]!	; 0xd64

00001224 <fflush@plt>:
    1224:	add	ip, pc, #0, 12
    1228:	add	ip, ip, #73728	; 0x12000
    122c:	ldr	pc, [ip, #3420]!	; 0xd5c

00001230 <log_assert_failed_realm@plt>:
    1230:	add	ip, pc, #0, 12
    1234:	add	ip, ip, #73728	; 0x12000
    1238:	ldr	pc, [ip, #3412]!	; 0xd54

0000123c <log_internal_realm@plt>:
    123c:	add	ip, pc, #0, 12
    1240:	add	ip, ip, #73728	; 0x12000
    1244:	ldr	pc, [ip, #3404]!	; 0xd4c

00001248 <strrchr@plt>:
    1248:	add	ip, pc, #0, 12
    124c:	add	ip, ip, #73728	; 0x12000
    1250:	ldr	pc, [ip, #3396]!	; 0xd44

00001254 <strv_free@plt>:
    1254:	add	ip, pc, #0, 12
    1258:	add	ip, ip, #73728	; 0x12000
    125c:	ldr	pc, [ip, #3388]!	; 0xd3c

00001260 <pager_open@plt>:
    1260:	add	ip, pc, #0, 12
    1264:	add	ip, ip, #73728	; 0x12000
    1268:	ldr	pc, [ip, #3380]!	; 0xd34

0000126c <__libc_start_main@plt>:
    126c:	add	ip, pc, #0, 12
    1270:	add	ip, ip, #73728	; 0x12000
    1274:	ldr	pc, [ip, #3372]!	; 0xd2c

00001278 <colors_enabled@plt>:
    1278:	add	ip, pc, #0, 12
    127c:	add	ip, ip, #73728	; 0x12000
    1280:	ldr	pc, [ip, #3364]!	; 0xd24

00001284 <__gmon_start__@plt>:
    1284:	add	ip, pc, #0, 12
    1288:	add	ip, ip, #73728	; 0x12000
    128c:	ldr	pc, [ip, #3356]!	; 0xd1c

00001290 <__cxa_finalize@plt>:
    1290:	add	ip, pc, #0, 12
    1294:	add	ip, ip, #73728	; 0x12000
    1298:	ldr	pc, [ip, #3348]!	; 0xd14

0000129c <strdup@plt>:
    129c:	add	ip, pc, #0, 12
    12a0:	add	ip, ip, #73728	; 0x12000
    12a4:	ldr	pc, [ip, #3340]!	; 0xd0c

000012a8 <__printf_chk@plt>:
    12a8:	add	ip, pc, #0, 12
    12ac:	add	ip, ip, #73728	; 0x12000
    12b0:	ldr	pc, [ip, #3332]!	; 0xd04

000012b4 <hashmap_put@plt>:
    12b4:	add	ip, pc, #0, 12
    12b8:	add	ip, ip, #73728	; 0x12000
    12bc:	ldr	pc, [ip, #3324]!	; 0xcfc

000012c0 <log_oom_internal@plt>:
    12c0:	add	ip, pc, #0, 12
    12c4:	add	ip, ip, #73728	; 0x12000
    12c8:	ldr	pc, [ip, #3316]!	; 0xcf4

Disassembly of section .text:

000012cc <.text>:
    12cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    12d0:	sub	sp, sp, #68	; 0x44
    12d4:	ldr	fp, [pc, #1824]	; 19fc <log_oom_internal@plt+0x73c>
    12d8:	ldr	r3, [pc, #1824]	; 1a00 <log_oom_internal@plt+0x740>
    12dc:	add	fp, pc, fp
    12e0:	str	r0, [sp, #20]
    12e4:	ldr	r3, [fp, r3]
    12e8:	mov	r4, r0
    12ec:	str	r3, [sp, #32]
    12f0:	ldr	r3, [r3]
    12f4:	mov	r0, #0
    12f8:	mov	sl, r1
    12fc:	str	r3, [sp, #60]	; 0x3c
    1300:	bl	120c <log_parse_environment_realm@plt>
    1304:	bl	ffc <log_open@plt>
    1308:	cmp	r4, #0
    130c:	ble	18f4 <log_oom_internal@plt+0x634>
    1310:	cmp	sl, #0
    1314:	beq	1920 <log_oom_internal@plt+0x660>
    1318:	ldr	r3, [pc, #1764]	; 1a04 <log_oom_internal@plt+0x744>
    131c:	add	r3, pc, r3
    1320:	str	r3, [sp, #24]
    1324:	ldr	r3, [pc, #1756]	; 1a08 <log_oom_internal@plt+0x748>
    1328:	add	r3, pc, r3
    132c:	str	r3, [sp, #28]
    1330:	ldr	r3, [pc, #1748]	; 1a0c <log_oom_internal@plt+0x74c>
    1334:	add	r3, pc, r3
    1338:	str	r3, [sp, #40]	; 0x28
    133c:	ldr	r3, [pc, #1740]	; 1a10 <log_oom_internal@plt+0x750>
    1340:	add	r3, pc, r3
    1344:	str	r3, [sp, #36]	; 0x24
    1348:	mov	r6, #0
    134c:	str	r6, [sp]
    1350:	ldr	r3, [sp, #24]
    1354:	ldr	r2, [sp, #28]
    1358:	mov	r1, sl
    135c:	ldr	r0, [sp, #20]
    1360:	bl	11a0 <getopt_long@plt>
    1364:	cmp	r0, #0
    1368:	blt	194c <log_oom_internal@plt+0x68c>
    136c:	cmp	r0, #116	; 0x74
    1370:	beq	16b8 <log_oom_internal@plt+0x3f8>
    1374:	ble	13c4 <log_oom_internal@plt+0x104>
    1378:	ldr	r3, [pc, #1684]	; 1a14 <log_oom_internal@plt+0x754>
    137c:	cmp	r0, r3
    1380:	beq	1688 <log_oom_internal@plt+0x3c8>
    1384:	add	r3, r3, #1
    1388:	cmp	r0, r3
    138c:	beq	1494 <log_oom_internal@plt+0x1d4>
    1390:	cmp	r0, #256	; 0x100
    1394:	beq	162c <log_oom_internal@plt+0x36c>
    1398:	ldr	r2, [pc, #1656]	; 1a18 <log_oom_internal@plt+0x758>
    139c:	ldr	r1, [pc, #1656]	; 1a1c <log_oom_internal@plt+0x75c>
    13a0:	add	r2, pc, r2
    13a4:	add	r2, r2, #376	; 0x178
    13a8:	str	r2, [sp]
    13ac:	ldr	r2, [pc, #1644]	; 1a20 <log_oom_internal@plt+0x760>
    13b0:	ldr	r3, [pc, #1644]	; 1a24 <log_oom_internal@plt+0x764>
    13b4:	add	r2, pc, r2
    13b8:	add	r1, pc, r1
    13bc:	mov	r0, #0
    13c0:	bl	1008 <log_assert_failed_unreachable_realm@plt>
    13c4:	cmp	r0, #63	; 0x3f
    13c8:	beq	1424 <log_oom_internal@plt+0x164>
    13cc:	cmp	r0, #104	; 0x68
    13d0:	bne	1398 <log_oom_internal@plt+0xd8>
    13d4:	add	r2, sp, #64	; 0x40
    13d8:	ldr	r1, [pc, #1608]	; 1a28 <log_oom_internal@plt+0x768>
    13dc:	ldr	r0, [pc, #1608]	; 1a2c <log_oom_internal@plt+0x76c>
    13e0:	add	r1, pc, r1
    13e4:	str	r6, [r2, #-8]!
    13e8:	add	r0, pc, r0
    13ec:	bl	1140 <terminal_urlify_man@plt>
    13f0:	cmp	r0, #0
    13f4:	blt	1850 <log_oom_internal@plt+0x590>
    13f8:	ldr	r2, [pc, #1584]	; 1a30 <log_oom_internal@plt+0x770>
    13fc:	ldr	r1, [pc, #1584]	; 1a34 <log_oom_internal@plt+0x774>
    1400:	ldr	r3, [sp, #56]	; 0x38
    1404:	ldr	r2, [fp, r2]
    1408:	add	r1, pc, r1
    140c:	mov	r0, #1
    1410:	ldr	r2, [r2]
    1414:	bl	12a8 <__printf_chk@plt>
    1418:	ldr	r0, [sp, #56]	; 0x38
    141c:	bl	ff0 <free@plt>
    1420:	b	1428 <log_oom_internal@plt+0x168>
    1424:	mvn	r6, #21
    1428:	ldr	r3, [pc, #1544]	; 1a38 <log_oom_internal@plt+0x778>
    142c:	ldr	r4, [fp, r3]
    1430:	cmp	r4, #0
    1434:	beq	1464 <log_oom_internal@plt+0x1a4>
    1438:	ldr	r3, [pc, #1532]	; 1a3c <log_oom_internal@plt+0x77c>
    143c:	add	r4, r4, #3
    1440:	bic	r4, r4, #3
    1444:	ldr	r5, [fp, r3]
    1448:	cmp	r4, r5
    144c:	bcs	1464 <log_oom_internal@plt+0x1a4>
    1450:	ldm	r4, {r0, r3}
    1454:	add	r4, r4, #8
    1458:	blx	r3
    145c:	cmp	r4, r5
    1460:	bcc	1450 <log_oom_internal@plt+0x190>
    1464:	bl	1044 <ask_password_agent_close@plt>
    1468:	bl	1050 <polkit_agent_close@plt>
    146c:	bl	105c <mac_selinux_finish@plt>
    1470:	bl	11ac <pager_close@plt>
    1474:	ldr	r3, [sp, #32]
    1478:	ldr	r2, [sp, #60]	; 0x3c
    147c:	lsr	r0, r6, #31
    1480:	ldr	r3, [r3]
    1484:	cmp	r2, r3
    1488:	bne	19f8 <log_oom_internal@plt+0x738>
    148c:	add	sp, sp, #68	; 0x44
    1490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1494:	bl	fcc <version@plt>
    1498:	mov	r6, r0
    149c:	cmp	r6, #0
    14a0:	ble	1428 <log_oom_internal@plt+0x168>
    14a4:	ldr	r3, [pc, #1428]	; 1a40 <log_oom_internal@plt+0x780>
    14a8:	add	r3, pc, r3
    14ac:	ldr	r2, [r3]
    14b0:	cmp	r2, #0
    14b4:	moveq	r2, #47	; 0x2f
    14b8:	streq	r2, [r3]
    14bc:	ldr	r3, [pc, #1408]	; 1a44 <log_oom_internal@plt+0x784>
    14c0:	add	r3, pc, r3
    14c4:	ldr	r2, [r3]
    14c8:	cmp	r2, #0
    14cc:	blt	1894 <log_oom_internal@plt+0x5d4>
    14d0:	bne	1820 <log_oom_internal@plt+0x560>
    14d4:	ldr	r3, [pc, #1388]	; 1a48 <log_oom_internal@plt+0x788>
    14d8:	add	r3, pc, r3
    14dc:	ldr	r0, [r3, #4]
    14e0:	bl	1260 <pager_open@plt>
    14e4:	ldr	r3, [pc, #1376]	; 1a4c <log_oom_internal@plt+0x78c>
    14e8:	ldr	r2, [sp, #20]
    14ec:	ldr	r3, [fp, r3]
    14f0:	ldr	r8, [r3]
    14f4:	cmp	r2, r8
    14f8:	ble	18b0 <log_oom_internal@plt+0x5f0>
    14fc:	sub	r7, r8, #-1073741823	; 0xc0000001
    1500:	ldr	r3, [pc, #1352]	; 1a50 <log_oom_internal@plt+0x790>
    1504:	ldr	r1, [pc, #1352]	; 1a54 <log_oom_internal@plt+0x794>
    1508:	add	r3, pc, r3
    150c:	add	r7, sl, r7, lsl #2
    1510:	mov	r9, #0
    1514:	mov	sl, r2
    1518:	add	r1, pc, r1
    151c:	add	r3, r3, #428	; 0x1ac
    1520:	str	r1, [sp, #20]
    1524:	str	r3, [sp, #24]
    1528:	str	fp, [sp, #28]
    152c:	ldr	r0, [r7, #4]!
    1530:	mov	r1, #0
    1534:	bl	10d4 <path_simplify@plt>
    1538:	ldr	r5, [r7]
    153c:	cmp	r5, #0
    1540:	beq	18c8 <log_oom_internal@plt+0x608>
    1544:	mov	r0, r5
    1548:	bl	fb4 <path_is_absolute@plt>
    154c:	subs	r1, r0, #0
    1550:	beq	1644 <log_oom_internal@plt+0x384>
    1554:	ldr	fp, [pc, #1276]	; 1a58 <log_oom_internal@plt+0x798>
    1558:	mov	r4, #4
    155c:	add	fp, pc, fp
    1560:	b	157c <log_oom_internal@plt+0x2bc>
    1564:	ldrb	r3, [fp]
    1568:	cmp	r3, #0
    156c:	beq	15a8 <log_oom_internal@plt+0x2e8>
    1570:	mov	r0, fp
    1574:	bl	11dc <strlen@plt>
    1578:	mov	r4, r0
    157c:	mov	r2, r4
    1580:	mov	r1, fp
    1584:	mov	r0, r5
    1588:	bl	1020 <strncmp@plt>
    158c:	cmp	r0, #0
    1590:	bne	159c <log_oom_internal@plt+0x2dc>
    1594:	adds	r2, r5, r4
    1598:	bne	1650 <log_oom_internal@plt+0x390>
    159c:	add	r4, r4, #1
    15a0:	adds	fp, fp, r4
    15a4:	bne	1564 <log_oom_internal@plt+0x2a4>
    15a8:	mov	r0, #0
    15ac:	bl	10c8 <log_get_max_level_realm@plt>
    15b0:	cmp	r0, #2
    15b4:	ble	1954 <log_oom_internal@plt+0x694>
    15b8:	ldr	r3, [pc, #1180]	; 1a5c <log_oom_internal@plt+0x79c>
    15bc:	ldr	r2, [sp, #24]
    15c0:	add	r3, pc, r3
    15c4:	str	r5, [sp, #8]
    15c8:	strd	r2, [sp]
    15cc:	mov	r1, #1073741846	; 0x40000016
    15d0:	ldr	r3, [pc, #1160]	; 1a60 <log_oom_internal@plt+0x7a0>
    15d4:	ldr	r2, [sp, #20]
    15d8:	mov	r0, #3
    15dc:	bl	123c <log_internal_realm@plt>
    15e0:	cmp	r0, #0
    15e4:	addge	r9, r9, r0
    15e8:	movlt	r6, r0
    15ec:	add	r8, r8, #1
    15f0:	cmp	sl, r8
    15f4:	bne	152c <log_oom_internal@plt+0x26c>
    15f8:	cmp	r6, #0
    15fc:	ldr	fp, [sp, #28]
    1600:	blt	1428 <log_oom_internal@plt+0x168>
    1604:	cmp	r9, #0
    1608:	bne	1838 <log_oom_internal@plt+0x578>
    160c:	ldr	r2, [pc, #1104]	; 1a64 <log_oom_internal@plt+0x7a4>
    1610:	add	r2, pc, r2
    1614:	ldr	r1, [pc, #1100]	; 1a68 <log_oom_internal@plt+0x7a8>
    1618:	mov	r3, r9
    161c:	add	r1, pc, r1
    1620:	mov	r0, #1
    1624:	bl	12a8 <__printf_chk@plt>
    1628:	b	1428 <log_oom_internal@plt+0x168>
    162c:	ldr	r2, [pc, #1080]	; 1a6c <log_oom_internal@plt+0x7ac>
    1630:	add	r2, pc, r2
    1634:	ldr	r3, [r2, #4]
    1638:	orr	r3, r3, #1
    163c:	str	r3, [r2, #4]
    1640:	b	1348 <log_oom_internal@plt+0x88>
    1644:	mov	r0, r5
    1648:	bl	1f84 <log_oom_internal@plt+0xcc4>
    164c:	b	15e0 <log_oom_internal@plt+0x320>
    1650:	ldr	r1, [pc, #1048]	; 1a70 <log_oom_internal@plt+0x7b0>
    1654:	mov	r0, r2
    1658:	add	r1, pc, r1
    165c:	str	r2, [sp, #36]	; 0x24
    1660:	bl	1098 <strspn@plt>
    1664:	ldr	r2, [sp, #36]	; 0x24
    1668:	add	ip, r2, r0
    166c:	ldrb	r2, [r2, r0]
    1670:	cmp	r2, #0
    1674:	beq	1844 <log_oom_internal@plt+0x584>
    1678:	mov	r1, fp
    167c:	mov	r0, ip
    1680:	bl	1f84 <log_oom_internal@plt+0xcc4>
    1684:	b	15e0 <log_oom_internal@plt+0x320>
    1688:	ldr	r3, [pc, #996]	; 1a74 <log_oom_internal@plt+0x7b4>
    168c:	ldr	r3, [fp, r3]
    1690:	ldr	r0, [r3]
    1694:	cmp	r0, #0
    1698:	beq	1880 <log_oom_internal@plt+0x5c0>
    169c:	bl	117c <parse_boolean@plt>
    16a0:	cmp	r0, #0
    16a4:	blt	19ac <log_oom_internal@plt+0x6ec>
    16a8:	ldr	r3, [pc, #968]	; 1a78 <log_oom_internal@plt+0x7b8>
    16ac:	add	r3, pc, r3
    16b0:	str	r0, [r3]
    16b4:	b	1348 <log_oom_internal@plt+0x88>
    16b8:	ldr	r3, [pc, #948]	; 1a74 <log_oom_internal@plt+0x7b4>
    16bc:	ldr	ip, [pc, #952]	; 1a7c <log_oom_internal@plt+0x7bc>
    16c0:	add	r8, sp, #56	; 0x38
    16c4:	ldr	r2, [fp, r3]
    16c8:	add	ip, pc, ip
    16cc:	add	r7, sp, #52	; 0x34
    16d0:	ldr	lr, [r2]
    16d4:	ldr	r2, [pc, #932]	; 1a80 <log_oom_internal@plt+0x7c0>
    16d8:	mov	r3, r6
    16dc:	mov	r1, r8
    16e0:	mov	r0, r7
    16e4:	add	r2, pc, r2
    16e8:	str	lr, [sp, #52]	; 0x34
    16ec:	ldr	r6, [ip]
    16f0:	bl	1014 <split@plt>
    16f4:	subs	r4, r0, #0
    16f8:	beq	1808 <log_oom_internal@plt+0x548>
    16fc:	ldr	r9, [pc, #896]	; 1a84 <log_oom_internal@plt+0x7c4>
    1700:	str	sl, [sp, #44]	; 0x2c
    1704:	ldr	sl, [sp, #40]	; 0x28
    1708:	add	r9, pc, r9
    170c:	ldr	r5, [sp, #56]	; 0x38
    1710:	mov	r1, r4
    1714:	mov	r2, r5
    1718:	mov	r0, r9
    171c:	bl	1020 <strncmp@plt>
    1720:	cmp	r0, #0
    1724:	orreq	r6, r6, #1
    1728:	beq	17e4 <log_oom_internal@plt+0x524>
    172c:	mov	r2, r5
    1730:	mov	r1, r4
    1734:	mov	r0, sl
    1738:	bl	1020 <strncmp@plt>
    173c:	cmp	r0, #0
    1740:	orreq	r6, r6, #2
    1744:	beq	17e4 <log_oom_internal@plt+0x524>
    1748:	mov	r2, r5
    174c:	mov	r1, r4
    1750:	ldr	r0, [sp, #36]	; 0x24
    1754:	bl	1020 <strncmp@plt>
    1758:	cmp	r0, #0
    175c:	orreq	r6, r6, #4
    1760:	beq	17e4 <log_oom_internal@plt+0x524>
    1764:	ldr	r0, [pc, #796]	; 1a88 <log_oom_internal@plt+0x7c8>
    1768:	mov	r2, r5
    176c:	mov	r1, r4
    1770:	add	r0, pc, r0
    1774:	bl	1020 <strncmp@plt>
    1778:	cmp	r0, #0
    177c:	orreq	r6, r6, #8
    1780:	beq	17e4 <log_oom_internal@plt+0x524>
    1784:	ldr	r0, [pc, #768]	; 1a8c <log_oom_internal@plt+0x7cc>
    1788:	mov	r2, r5
    178c:	mov	r1, r4
    1790:	add	r0, pc, r0
    1794:	bl	1020 <strncmp@plt>
    1798:	cmp	r0, #0
    179c:	orreq	r6, r6, #16
    17a0:	beq	17e4 <log_oom_internal@plt+0x524>
    17a4:	ldr	r0, [pc, #740]	; 1a90 <log_oom_internal@plt+0x7d0>
    17a8:	mov	r2, r5
    17ac:	mov	r1, r4
    17b0:	add	r0, pc, r0
    17b4:	bl	1020 <strncmp@plt>
    17b8:	cmp	r0, #0
    17bc:	orreq	r6, r6, #32
    17c0:	beq	17e4 <log_oom_internal@plt+0x524>
    17c4:	ldr	r0, [pc, #712]	; 1a94 <log_oom_internal@plt+0x7d4>
    17c8:	mov	r2, r5
    17cc:	mov	r1, r4
    17d0:	add	r0, pc, r0
    17d4:	bl	1020 <strncmp@plt>
    17d8:	cmp	r0, #0
    17dc:	bne	195c <log_oom_internal@plt+0x69c>
    17e0:	orr	r6, r6, #47	; 0x2f
    17e4:	ldr	r2, [pc, #684]	; 1a98 <log_oom_internal@plt+0x7d8>
    17e8:	mov	r3, #0
    17ec:	add	r2, pc, r2
    17f0:	mov	r1, r8
    17f4:	mov	r0, r7
    17f8:	bl	1014 <split@plt>
    17fc:	subs	r4, r0, #0
    1800:	bne	170c <log_oom_internal@plt+0x44c>
    1804:	ldr	sl, [sp, #44]	; 0x2c
    1808:	cmp	r6, #0
    180c:	blt	1960 <log_oom_internal@plt+0x6a0>
    1810:	ldr	r3, [pc, #644]	; 1a9c <log_oom_internal@plt+0x7dc>
    1814:	add	r3, pc, r3
    1818:	str	r6, [r3]
    181c:	b	1348 <log_oom_internal@plt+0x88>
    1820:	ldr	r2, [pc, #632]	; 1aa0 <log_oom_internal@plt+0x7e0>
    1824:	add	r2, pc, r2
    1828:	ldr	r3, [r2]
    182c:	orr	r3, r3, #8
    1830:	str	r3, [r2]
    1834:	b	14d4 <log_oom_internal@plt+0x214>
    1838:	ldr	r2, [pc, #612]	; 1aa4 <log_oom_internal@plt+0x7e4>
    183c:	add	r2, pc, r2
    1840:	b	1614 <log_oom_internal@plt+0x354>
    1844:	mov	r0, r5
    1848:	bl	34e4 <log_oom_internal@plt+0x2224>
    184c:	b	15e0 <log_oom_internal@plt+0x320>
    1850:	ldr	r3, [pc, #592]	; 1aa8 <log_oom_internal@plt+0x7e8>
    1854:	ldr	r1, [pc, #592]	; 1aac <log_oom_internal@plt+0x7ec>
    1858:	add	r3, pc, r3
    185c:	mov	r0, r6
    1860:	add	r3, r3, #388	; 0x184
    1864:	ldr	r2, [pc, #580]	; 1ab0 <log_oom_internal@plt+0x7f0>
    1868:	add	r1, pc, r1
    186c:	bl	12c0 <log_oom_internal@plt>
    1870:	mov	r6, r0
    1874:	ldr	r0, [sp, #56]	; 0x38
    1878:	bl	ff0 <free@plt>
    187c:	b	149c <log_oom_internal@plt+0x1dc>
    1880:	ldr	r3, [pc, #556]	; 1ab4 <log_oom_internal@plt+0x7f4>
    1884:	mov	r2, #1
    1888:	add	r3, pc, r3
    188c:	str	r2, [r3]
    1890:	b	1348 <log_oom_internal@plt+0x88>
    1894:	ldr	r2, [pc, #540]	; 1ab8 <log_oom_internal@plt+0x7f8>
    1898:	add	r2, pc, r2
    189c:	ldr	r2, [r2]
    18a0:	lsr	r2, r2, #3
    18a4:	and	r2, r2, #1
    18a8:	str	r2, [r3]
    18ac:	b	14d4 <log_oom_internal@plt+0x214>
    18b0:	mov	r0, #0
    18b4:	bl	34e4 <log_oom_internal@plt+0x2224>
    18b8:	subs	r9, r0, #0
    18bc:	bge	1604 <log_oom_internal@plt+0x344>
    18c0:	mov	r6, r9
    18c4:	b	1428 <log_oom_internal@plt+0x168>
    18c8:	ldr	r3, [pc, #492]	; 1abc <log_oom_internal@plt+0x7fc>
    18cc:	ldr	r2, [pc, #492]	; 1ac0 <log_oom_internal@plt+0x800>
    18d0:	add	r3, pc, r3
    18d4:	ldr	r1, [pc, #488]	; 1ac4 <log_oom_internal@plt+0x804>
    18d8:	add	r3, r3, #408	; 0x198
    18dc:	str	r3, [sp]
    18e0:	mov	r0, r5
    18e4:	ldr	r3, [pc, #476]	; 1ac8 <log_oom_internal@plt+0x808>
    18e8:	add	r2, pc, r2
    18ec:	add	r1, pc, r1
    18f0:	bl	1230 <log_assert_failed_realm@plt>
    18f4:	ldr	r2, [pc, #464]	; 1acc <log_oom_internal@plt+0x80c>
    18f8:	ldr	r1, [pc, #464]	; 1ad0 <log_oom_internal@plt+0x810>
    18fc:	add	r2, pc, r2
    1900:	add	r2, r2, #376	; 0x178
    1904:	str	r2, [sp]
    1908:	ldr	r2, [pc, #452]	; 1ad4 <log_oom_internal@plt+0x814>
    190c:	ldr	r3, [pc, #452]	; 1ad8 <log_oom_internal@plt+0x818>
    1910:	add	r2, pc, r2
    1914:	add	r1, pc, r1
    1918:	mov	r0, #0
    191c:	bl	1230 <log_assert_failed_realm@plt>
    1920:	ldr	r3, [pc, #436]	; 1adc <log_oom_internal@plt+0x81c>
    1924:	ldr	r2, [pc, #436]	; 1ae0 <log_oom_internal@plt+0x820>
    1928:	add	r3, pc, r3
    192c:	ldr	r1, [pc, #432]	; 1ae4 <log_oom_internal@plt+0x824>
    1930:	add	r3, r3, #376	; 0x178
    1934:	str	r3, [sp]
    1938:	mov	r0, sl
    193c:	mov	r3, #588	; 0x24c
    1940:	add	r2, pc, r2
    1944:	add	r1, pc, r1
    1948:	bl	1230 <log_assert_failed_realm@plt>
    194c:	mov	r6, #1
    1950:	b	14a4 <log_oom_internal@plt+0x1e4>
    1954:	mvn	r6, #21
    1958:	b	15ec <log_oom_internal@plt+0x32c>
    195c:	ldr	sl, [sp, #44]	; 0x2c
    1960:	mov	r0, #0
    1964:	bl	10c8 <log_get_max_level_realm@plt>
    1968:	cmp	r0, #2
    196c:	ble	1424 <log_oom_internal@plt+0x164>
    1970:	ldr	r2, [pc, #368]	; 1ae8 <log_oom_internal@plt+0x828>
    1974:	ldr	r3, [pc, #368]	; 1aec <log_oom_internal@plt+0x82c>
    1978:	add	r2, pc, r2
    197c:	str	r2, [sp, #4]
    1980:	add	r3, pc, r3
    1984:	ldr	r2, [pc, #356]	; 1af0 <log_oom_internal@plt+0x830>
    1988:	add	r3, r3, #396	; 0x18c
    198c:	str	r3, [sp]
    1990:	add	r2, pc, r2
    1994:	ldr	r3, [pc, #344]	; 1af4 <log_oom_internal@plt+0x834>
    1998:	mov	r1, #1073741846	; 0x40000016
    199c:	mov	r0, #3
    19a0:	bl	123c <log_internal_realm@plt>
    19a4:	mov	r6, r0
    19a8:	b	149c <log_oom_internal@plt+0x1dc>
    19ac:	mov	r0, r6
    19b0:	bl	10c8 <log_get_max_level_realm@plt>
    19b4:	cmp	r0, #2
    19b8:	ble	1424 <log_oom_internal@plt+0x164>
    19bc:	ldr	r2, [pc, #308]	; 1af8 <log_oom_internal@plt+0x838>
    19c0:	ldr	r3, [pc, #308]	; 1afc <log_oom_internal@plt+0x83c>
    19c4:	add	r2, pc, r2
    19c8:	str	r2, [sp, #4]
    19cc:	add	r3, pc, r3
    19d0:	ldr	r2, [pc, #296]	; 1b00 <log_oom_internal@plt+0x840>
    19d4:	add	r3, r3, #396	; 0x18c
    19d8:	str	r3, [sp]
    19dc:	add	r2, pc, r2
    19e0:	ldr	r3, [pc, #284]	; 1b04 <log_oom_internal@plt+0x844>
    19e4:	mov	r1, #1073741846	; 0x40000016
    19e8:	mov	r0, #3
    19ec:	bl	123c <log_internal_realm@plt>
    19f0:	mov	r6, r0
    19f4:	b	149c <log_oom_internal@plt+0x1dc>
    19f8:	bl	1134 <__stack_chk_fail@plt>
    19fc:	andeq	r2, r1, r8, asr #23
    1a00:	andeq	r0, r0, ip, lsl r1
    1a04:	andeq	r2, r1, r8, lsl sl
    1a08:	ldrdeq	r2, [r0], -r8
    1a0c:	andeq	r2, r0, r4, lsr r8
    1a10:	andeq	r2, r0, r4, lsr r8
    1a14:	andeq	r0, r0, r1, lsl #2
    1a18:	andeq	r2, r0, r4, lsl r2
    1a1c:	andeq	r2, r0, r4, lsr r8
    1a20:	andeq	r2, r0, r4, asr #7
    1a24:	andeq	r0, r0, r9, ror r2
    1a28:	strdeq	r2, [r0], -r8
    1a2c:	strdeq	r2, [r0], -ip
    1a30:	andeq	r0, r0, r4, asr #2
    1a34:	andeq	r2, r0, ip, ror #11
    1a38:	andeq	r0, r0, ip, lsr #2
    1a3c:	andeq	r0, r0, r0, lsr r1
    1a40:	andeq	r2, r1, ip, asr fp
    1a44:	andeq	r2, r1, ip, lsr fp
    1a48:	andeq	r2, r1, ip, lsr #22
    1a4c:	andeq	r0, r0, r0, lsr #2
    1a50:	andeq	r2, r0, ip, lsr #1
    1a54:	andeq	r2, r0, r0, ror #4
    1a58:	andeq	r2, r0, r8, asr r0
    1a5c:	andeq	r2, r0, r8, asr #12
    1a60:	andeq	r0, r0, r5, lsl #4
    1a64:	strdeq	r2, [r0], -ip
    1a68:	andeq	r2, r0, r0, lsl r6
    1a6c:	ldrdeq	r2, [r1], -r4
    1a70:	andeq	r2, r0, ip, lsl r1
    1a74:	andeq	r0, r0, r8, lsr #2
    1a78:	andeq	r2, r1, r0, asr r9
    1a7c:	andeq	r2, r1, ip, lsr r9
    1a80:	andeq	r2, r0, r8, ror r4
    1a84:	andeq	r2, r0, r8, asr r4
    1a88:	andeq	r2, r0, r0, lsl r4
    1a8c:	strdeq	r2, [r0], -ip
    1a90:	andeq	r2, r0, r8, ror #7
    1a94:	ldrdeq	r2, [r0], -r4
    1a98:	andeq	r2, r0, r0, ror r3
    1a9c:	strdeq	r2, [r1], -r0
    1aa0:	andeq	r2, r1, r0, ror #15
    1aa4:	andeq	r2, r0, ip, lsl r3
    1aa8:	andeq	r1, r0, ip, asr sp
    1aac:	andeq	r1, r0, r0, lsl pc
    1ab0:	andeq	r0, r0, lr, lsl #4
    1ab4:	andeq	r2, r1, r4, ror r7
    1ab8:	andeq	r2, r1, ip, ror #14
    1abc:	andeq	r1, r0, r4, ror #25
    1ac0:	muleq	r0, r0, lr
    1ac4:	andeq	r2, r0, r8, lsl r3
    1ac8:	strdeq	r0, [r0], -r1
    1acc:			; <UNDEFINED> instruction: 0x00001cb8
    1ad0:	strheq	r2, [r0], -ip
    1ad4:	andeq	r1, r0, r8, ror #28
    1ad8:	andeq	r0, r0, fp, asr #4
    1adc:	andeq	r1, r0, ip, lsl #25
    1ae0:	andeq	r1, r0, r8, lsr lr
    1ae4:	muleq	r0, r8, r0
    1ae8:	andeq	r2, r0, r4, lsr r2
    1aec:	andeq	r1, r0, r4, lsr ip
    1af0:	andeq	r1, r0, r8, ror #27
    1af4:	andeq	r0, r0, r1, ror #4
    1af8:	andeq	r2, r0, r8, lsl #4
    1afc:	andeq	r1, r0, r8, ror #23
    1b00:	muleq	r0, ip, sp
    1b04:	andeq	r0, r0, pc, ror #4
    1b08:	mov	fp, #0
    1b0c:	mov	lr, #0
    1b10:	pop	{r1}		; (ldr r1, [sp], #4)
    1b14:	mov	r2, sp
    1b18:	push	{r2}		; (str r2, [sp, #-4]!)
    1b1c:	push	{r0}		; (str r0, [sp, #-4]!)
    1b20:	ldr	sl, [pc, #40]	; 1b50 <log_oom_internal@plt+0x890>
    1b24:	add	r3, pc, #36	; 0x24
    1b28:	add	sl, sl, r3
    1b2c:	ldr	ip, [pc, #32]	; 1b54 <log_oom_internal@plt+0x894>
    1b30:	ldr	ip, [sl, ip]
    1b34:	push	{ip}		; (str ip, [sp, #-4]!)
    1b38:	ldr	r3, [pc, #24]	; 1b58 <log_oom_internal@plt+0x898>
    1b3c:	ldr	r3, [sl, r3]
    1b40:	ldr	r0, [pc, #20]	; 1b5c <log_oom_internal@plt+0x89c>
    1b44:	ldr	r0, [sl, r0]
    1b48:	bl	126c <__libc_start_main@plt>
    1b4c:	bl	10f8 <abort@plt>
    1b50:	andeq	r2, r1, ip, asr r3
    1b54:	andeq	r0, r0, r0, asr #2
    1b58:	andeq	r0, r0, r4, lsr r1
    1b5c:	andeq	r0, r0, r4, lsr #2
    1b60:	ldr	r3, [pc, #20]	; 1b7c <log_oom_internal@plt+0x8bc>
    1b64:	ldr	r2, [pc, #20]	; 1b80 <log_oom_internal@plt+0x8c0>
    1b68:	add	r3, pc, r3
    1b6c:	ldr	r2, [r3, r2]
    1b70:	cmp	r2, #0
    1b74:	bxeq	lr
    1b78:	b	1284 <__gmon_start__@plt>
    1b7c:	andeq	r2, r1, ip, lsr r3
    1b80:	andeq	r0, r0, r8, asr #2
    1b84:	ldr	r0, [pc, #44]	; 1bb8 <log_oom_internal@plt+0x8f8>
    1b88:	ldr	r3, [pc, #44]	; 1bbc <log_oom_internal@plt+0x8fc>
    1b8c:	add	r0, pc, r0
    1b90:	add	r3, pc, r3
    1b94:	cmp	r3, r0
    1b98:	ldr	r3, [pc, #32]	; 1bc0 <log_oom_internal@plt+0x900>
    1b9c:	add	r3, pc, r3
    1ba0:	bxeq	lr
    1ba4:	ldr	r2, [pc, #24]	; 1bc4 <log_oom_internal@plt+0x904>
    1ba8:	ldr	r3, [r3, r2]
    1bac:	cmp	r3, #0
    1bb0:	bxeq	lr
    1bb4:	bx	r3
    1bb8:	andeq	r2, r1, r4, ror r4
    1bbc:	andeq	r2, r1, r0, ror r4
    1bc0:	andeq	r2, r1, r8, lsl #6
    1bc4:	andeq	r0, r0, ip, lsr r1
    1bc8:	ldr	r0, [pc, #56]	; 1c08 <log_oom_internal@plt+0x948>
    1bcc:	ldr	r3, [pc, #56]	; 1c0c <log_oom_internal@plt+0x94c>
    1bd0:	add	r0, pc, r0
    1bd4:	add	r3, pc, r3
    1bd8:	sub	r1, r3, r0
    1bdc:	ldr	r3, [pc, #44]	; 1c10 <log_oom_internal@plt+0x950>
    1be0:	asr	r1, r1, #2
    1be4:	add	r3, pc, r3
    1be8:	add	r1, r1, r1, lsr #31
    1bec:	asrs	r1, r1, #1
    1bf0:	bxeq	lr
    1bf4:	ldr	r2, [pc, #24]	; 1c14 <log_oom_internal@plt+0x954>
    1bf8:	ldr	r3, [r3, r2]
    1bfc:	cmp	r3, #0
    1c00:	bxeq	lr
    1c04:	bx	r3
    1c08:	andeq	r2, r1, r0, lsr r4
    1c0c:	andeq	r2, r1, ip, lsr #8
    1c10:	andeq	r2, r1, r0, asr #5
    1c14:	andeq	r0, r0, ip, asr #2
    1c18:	ldr	r3, [pc, #76]	; 1c6c <log_oom_internal@plt+0x9ac>
    1c1c:	ldr	r2, [pc, #76]	; 1c70 <log_oom_internal@plt+0x9b0>
    1c20:	add	r3, pc, r3
    1c24:	add	r2, pc, r2
    1c28:	ldrb	r3, [r3]
    1c2c:	cmp	r3, #0
    1c30:	bxne	lr
    1c34:	ldr	r3, [pc, #56]	; 1c74 <log_oom_internal@plt+0x9b4>
    1c38:	push	{r4, lr}
    1c3c:	ldr	r3, [r2, r3]
    1c40:	cmp	r3, #0
    1c44:	beq	1c54 <log_oom_internal@plt+0x994>
    1c48:	ldr	r3, [pc, #40]	; 1c78 <log_oom_internal@plt+0x9b8>
    1c4c:	ldr	r0, [pc, r3]
    1c50:	bl	1290 <__cxa_finalize@plt>
    1c54:	bl	1b84 <log_oom_internal@plt+0x8c4>
    1c58:	ldr	r3, [pc, #28]	; 1c7c <log_oom_internal@plt+0x9bc>
    1c5c:	mov	r2, #1
    1c60:	add	r3, pc, r3
    1c64:	strb	r2, [r3]
    1c68:	pop	{r4, pc}
    1c6c:	andeq	r2, r1, r0, ror #7
    1c70:	andeq	r2, r1, r0, lsl #5
    1c74:	andeq	r0, r0, r0, asr r1
    1c78:	andeq	r2, r1, ip, lsr #7
    1c7c:	andeq	r2, r1, r0, lsr #7
    1c80:	b	1bc8 <log_oom_internal@plt+0x908>
    1c84:	ldr	r3, [pc, #696]	; 1f44 <log_oom_internal@plt+0xc84>
    1c88:	ldr	ip, [pc, #696]	; 1f48 <log_oom_internal@plt+0xc88>
    1c8c:	add	r3, pc, r3
    1c90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1c94:	add	fp, sp, #32
    1c98:	sub	sp, sp, #52	; 0x34
    1c9c:	ldr	ip, [r3, ip]
    1ca0:	ldr	r2, [pc, #676]	; 1f4c <log_oom_internal@plt+0xc8c>
    1ca4:	mov	r8, r1
    1ca8:	ldr	r1, [ip]
    1cac:	mov	lr, #0
    1cb0:	add	r2, pc, r2
    1cb4:	cmp	r0, #0
    1cb8:	str	ip, [fp, #-68]	; 0xffffffbc
    1cbc:	mov	r7, r0
    1cc0:	mov	r5, lr
    1cc4:	str	r0, [fp, #-52]	; 0xffffffcc
    1cc8:	str	r8, [fp, #-44]	; 0xffffffd4
    1ccc:	str	r1, [fp, #-40]	; 0xffffffd8
    1cd0:	str	lr, [fp, #-56]	; 0xffffffc8
    1cd4:	mov	r4, lr
    1cd8:	str	r2, [fp, #-48]	; 0xffffffd0
    1cdc:	sub	r6, fp, #52	; 0x34
    1ce0:	beq	1d04 <log_oom_internal@plt+0xa44>
    1ce4:	bl	11dc <strlen@plt>
    1ce8:	add	r5, r5, #1
    1cec:	cmp	r5, #3
    1cf0:	add	r4, r4, r0
    1cf4:	beq	1d04 <log_oom_internal@plt+0xa44>
    1cf8:	ldr	r0, [r6, r5, lsl #2]
    1cfc:	cmp	r0, #0
    1d00:	bne	1ce4 <log_oom_internal@plt+0xa24>
    1d04:	add	r3, r4, #1
    1d08:	cmp	r3, #4194304	; 0x400000
    1d0c:	bhi	1ed0 <log_oom_internal@plt+0xc10>
    1d10:	add	r4, r4, #15
    1d14:	bic	r4, r4, #7
    1d18:	sub	sp, sp, r4
    1d1c:	add	r6, sp, #16
    1d20:	cmp	r7, #0
    1d24:	mov	r0, r6
    1d28:	mov	r4, #0
    1d2c:	sub	r5, fp, #52	; 0x34
    1d30:	beq	1d54 <log_oom_internal@plt+0xa94>
    1d34:	mov	r1, r7
    1d38:	add	r4, r4, #1
    1d3c:	bl	1068 <stpcpy@plt>
    1d40:	cmp	r4, #3
    1d44:	beq	1d54 <log_oom_internal@plt+0xa94>
    1d48:	ldr	r7, [r5, r4, lsl #2]
    1d4c:	cmp	r7, #0
    1d50:	bne	1d34 <log_oom_internal@plt+0xa74>
    1d54:	mov	r5, #0
    1d58:	strb	r5, [r0]
    1d5c:	mov	r2, r5
    1d60:	mov	r1, r5
    1d64:	sub	r3, fp, #56	; 0x38
    1d68:	mov	r0, r6
    1d6c:	bl	11d0 <chase_symlinks@plt>
    1d70:	ldr	sl, [fp, #-56]	; 0xffffffc8
    1d74:	cmp	r0, r5
    1d78:	blt	1e74 <log_oom_internal@plt+0xbb4>
    1d7c:	ldr	r3, [pc, #460]	; 1f50 <log_oom_internal@plt+0xc90>
    1d80:	ldr	r4, [pc, #460]	; 1f54 <log_oom_internal@plt+0xc94>
    1d84:	add	r3, pc, r3
    1d88:	add	r4, pc, r4
    1d8c:	str	r3, [fp, #-64]	; 0xffffffc0
    1d90:	sub	r7, fp, #52	; 0x34
    1d94:	b	1db8 <log_oom_internal@plt+0xaf8>
    1d98:	mov	r0, r4
    1d9c:	bl	11dc <strlen@plt>
    1da0:	add	r0, r0, #1
    1da4:	adds	r4, r4, r0
    1da8:	beq	1e9c <log_oom_internal@plt+0xbdc>
    1dac:	ldrb	r5, [r4]
    1db0:	cmp	r5, #0
    1db4:	beq	1e74 <log_oom_internal@plt+0xbb4>
    1db8:	mov	r1, r4
    1dbc:	mov	r0, r6
    1dc0:	bl	fd8 <path_startswith@plt>
    1dc4:	subs	r5, r0, #0
    1dc8:	bne	1d98 <log_oom_internal@plt+0xad8>
    1dcc:	ldr	r3, [fp, #-64]	; 0xffffffc0
    1dd0:	mov	r9, r5
    1dd4:	mov	r0, r4
    1dd8:	str	r4, [fp, #-52]	; 0xffffffcc
    1ddc:	str	r3, [fp, #-48]	; 0xffffffd0
    1de0:	str	r8, [fp, #-44]	; 0xffffffd4
    1de4:	bl	11dc <strlen@plt>
    1de8:	add	r5, r5, #1
    1dec:	cmp	r5, #3
    1df0:	add	r9, r9, r0
    1df4:	beq	1e04 <log_oom_internal@plt+0xb44>
    1df8:	ldr	r0, [r7, r5, lsl #2]
    1dfc:	cmp	r0, #0
    1e00:	bne	1de4 <log_oom_internal@plt+0xb24>
    1e04:	add	r3, r9, #1
    1e08:	cmp	r3, #4194304	; 0x400000
    1e0c:	bhi	1ea4 <log_oom_internal@plt+0xbe4>
    1e10:	add	r9, r9, #15
    1e14:	bic	r9, r9, #7
    1e18:	sub	sp, sp, r9
    1e1c:	add	r5, sp, #16
    1e20:	mov	r0, r5
    1e24:	mov	r1, r4
    1e28:	mov	r9, #0
    1e2c:	add	r9, r9, #1
    1e30:	bl	1068 <stpcpy@plt>
    1e34:	cmp	r9, #3
    1e38:	beq	1e48 <log_oom_internal@plt+0xb88>
    1e3c:	ldr	r1, [r7, r9, lsl #2]
    1e40:	cmp	r1, #0
    1e44:	bne	1e2c <log_oom_internal@plt+0xb6c>
    1e48:	mov	r9, #0
    1e4c:	mov	r1, r5
    1e50:	strb	r9, [r0]
    1e54:	mov	r0, sl
    1e58:	bl	10b0 <path_equal@plt>
    1e5c:	subs	r5, r0, #0
    1e60:	beq	1d98 <log_oom_internal@plt+0xad8>
    1e64:	mov	r0, r9
    1e68:	bl	10c8 <log_get_max_level_realm@plt>
    1e6c:	cmp	r0, #6
    1e70:	bgt	1efc <log_oom_internal@plt+0xc3c>
    1e74:	mov	r0, sl
    1e78:	bl	ff0 <free@plt>
    1e7c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1e80:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1e84:	mov	r0, r5
    1e88:	ldr	r3, [r3]
    1e8c:	cmp	r2, r3
    1e90:	bne	1f40 <log_oom_internal@plt+0xc80>
    1e94:	sub	sp, fp, #32
    1e98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e9c:	mov	r5, r4
    1ea0:	b	1e74 <log_oom_internal@plt+0xbb4>
    1ea4:	ldr	r2, [pc, #172]	; 1f58 <log_oom_internal@plt+0xc98>
    1ea8:	ldr	r1, [pc, #172]	; 1f5c <log_oom_internal@plt+0xc9c>
    1eac:	add	r2, pc, r2
    1eb0:	add	r2, r2, #68	; 0x44
    1eb4:	str	r2, [sp]
    1eb8:	ldr	r2, [pc, #160]	; 1f60 <log_oom_internal@plt+0xca0>
    1ebc:	ldr	r3, [pc, #160]	; 1f64 <log_oom_internal@plt+0xca4>
    1ec0:	add	r2, pc, r2
    1ec4:	add	r1, pc, r1
    1ec8:	mov	r0, #0
    1ecc:	bl	1230 <log_assert_failed_realm@plt>
    1ed0:	ldr	r2, [pc, #144]	; 1f68 <log_oom_internal@plt+0xca8>
    1ed4:	ldr	r1, [pc, #144]	; 1f6c <log_oom_internal@plt+0xcac>
    1ed8:	add	r2, pc, r2
    1edc:	add	r2, r2, #68	; 0x44
    1ee0:	str	r2, [sp]
    1ee4:	ldr	r2, [pc, #132]	; 1f70 <log_oom_internal@plt+0xcb0>
    1ee8:	mov	r3, #380	; 0x17c
    1eec:	add	r2, pc, r2
    1ef0:	add	r1, pc, r1
    1ef4:	mov	r0, #0
    1ef8:	bl	1230 <log_assert_failed_realm@plt>
    1efc:	ldr	r2, [pc, #112]	; 1f74 <log_oom_internal@plt+0xcb4>
    1f00:	ldr	r3, [pc, #112]	; 1f78 <log_oom_internal@plt+0xcb8>
    1f04:	add	r2, pc, r2
    1f08:	str	r2, [sp, #4]
    1f0c:	add	r3, pc, r3
    1f10:	ldr	r2, [pc, #100]	; 1f7c <log_oom_internal@plt+0xcbc>
    1f14:	add	r3, r3, #88	; 0x58
    1f18:	str	sl, [sp, #12]
    1f1c:	str	r3, [sp]
    1f20:	str	r6, [sp, #8]
    1f24:	mov	r1, r9
    1f28:	ldr	r3, [pc, #80]	; 1f80 <log_oom_internal@plt+0xcc0>
    1f2c:	add	r2, pc, r2
    1f30:	mov	r0, #7
    1f34:	bl	123c <log_internal_realm@plt>
    1f38:	ldr	sl, [fp, #-56]	; 0xffffffc8
    1f3c:	b	1e74 <log_oom_internal@plt+0xbb4>
    1f40:	bl	1134 <__stack_chk_fail@plt>
    1f44:	andeq	r2, r1, r8, lsl r2
    1f48:	andeq	r0, r0, ip, lsl r1
    1f4c:	andeq	r1, r0, r4, asr #21
    1f50:	strdeq	r1, [r0], -r0
    1f54:	andeq	r1, r0, ip, lsr #16
    1f58:	andeq	r1, r0, r8, lsl #14
    1f5c:	andeq	r1, r0, ip, asr #17
    1f60:			; <UNDEFINED> instruction: 0x000018b8
    1f64:	andeq	r0, r0, r5, lsl #3
    1f68:	ldrdeq	r1, [r0], -ip
    1f6c:	andeq	r1, r0, r0, lsr #17
    1f70:	andeq	r1, r0, ip, lsl #17
    1f74:	andeq	r1, r0, ip, lsr #17
    1f78:	andeq	r1, r0, r8, lsr #13
    1f7c:	andeq	r1, r0, ip, asr #16
    1f80:	andeq	r0, r0, r6, lsl #3
    1f84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f88:	sub	sp, sp, #164	; 0xa4
    1f8c:	ldr	sl, [pc, #3984]	; 2f24 <log_oom_internal@plt+0x1c64>
    1f90:	ldr	r3, [pc, #3984]	; 2f28 <log_oom_internal@plt+0x1c68>
    1f94:	add	sl, pc, sl
    1f98:	subs	r7, r0, #0
    1f9c:	ldr	r3, [sl, r3]
    1fa0:	str	r3, [sp, #52]	; 0x34
    1fa4:	ldr	r3, [r3]
    1fa8:	str	r3, [sp, #156]	; 0x9c
    1fac:	beq	2638 <log_oom_internal@plt+0x1378>
    1fb0:	ldrb	r3, [r7]
    1fb4:	mov	fp, r1
    1fb8:	cmp	r3, #47	; 0x2f
    1fbc:	bne	1fc8 <log_oom_internal@plt+0xd08>
    1fc0:	cmn	r7, #1
    1fc4:	bne	2670 <log_oom_internal@plt+0x13b0>
    1fc8:	ldr	r1, [pc, #3932]	; 2f2c <log_oom_internal@plt+0x1c6c>
    1fcc:	mov	r0, r7
    1fd0:	add	r1, pc, r1
    1fd4:	bl	1170 <strstr@plt>
    1fd8:	cmp	r0, #0
    1fdc:	bne	2954 <log_oom_internal@plt+0x1694>
    1fe0:	ldr	r8, [pc, #3912]	; 2f30 <log_oom_internal@plt+0x1c70>
    1fe4:	mov	r1, r7
    1fe8:	add	r8, pc, r8
    1fec:	add	r0, r8, #124	; 0x7c
    1ff0:	bl	111c <nulstr_contains@plt>
    1ff4:	ldr	r3, [pc, #3896]	; 2f34 <log_oom_internal@plt+0x1c74>
    1ff8:	str	r0, [sp, #48]	; 0x30
    1ffc:	ldr	r3, [sl, r3]
    2000:	mov	r0, r3
    2004:	mov	r4, r3
    2008:	str	r3, [sp, #56]	; 0x38
    200c:	bl	11f4 <internal_ordered_hashmap_new@plt>
    2010:	mov	r6, r0
    2014:	str	r0, [sp, #32]
    2018:	mov	r0, r4
    201c:	bl	11f4 <internal_ordered_hashmap_new@plt>
    2020:	mov	r5, r0
    2024:	str	r0, [sp, #44]	; 0x2c
    2028:	mov	r0, r4
    202c:	bl	11f4 <internal_ordered_hashmap_new@plt>
    2030:	cmp	r6, #0
    2034:	clz	r3, r5
    2038:	lsr	r3, r3, #5
    203c:	moveq	r3, #1
    2040:	cmp	r0, #0
    2044:	moveq	r3, #1
    2048:	cmp	r3, #0
    204c:	mov	r9, r0
    2050:	beq	212c <log_oom_internal@plt+0xe6c>
    2054:	mvn	r0, #11
    2058:	mov	r1, #0
    205c:	add	r4, sp, #148	; 0x94
    2060:	add	r3, sp, #112	; 0x70
    2064:	strd	r0, [sp, #36]	; 0x24
    2068:	str	r3, [sp, #48]	; 0x30
    206c:	ldr	r3, [pc, #3780]	; 2f38 <log_oom_internal@plt+0x1c78>
    2070:	mov	r1, #0
    2074:	ldr	r0, [sp, #32]
    2078:	ldr	r5, [sl, r3]
    207c:	add	r6, sp, #116	; 0x74
    2080:	mov	r2, r5
    2084:	bl	114c <internal_hashmap_free@plt>
    2088:	mov	r2, r5
    208c:	ldr	r0, [sp, #44]	; 0x2c
    2090:	mov	r1, #0
    2094:	bl	114c <internal_hashmap_free@plt>
    2098:	mvn	r2, #1
    209c:	mov	r3, #0
    20a0:	ldr	r7, [sp, #48]	; 0x30
    20a4:	strd	r2, [sp, #148]	; 0x94
    20a8:	b	20d8 <log_oom_internal@plt+0xe18>
    20ac:	ldr	r1, [sp, #112]	; 0x70
    20b0:	mov	r0, r9
    20b4:	bl	1110 <internal_hashmap_remove@plt>
    20b8:	mov	r2, r5
    20bc:	mov	r1, #0
    20c0:	bl	114c <internal_hashmap_free@plt>
    20c4:	ldr	r1, [sp, #112]	; 0x70
    20c8:	mov	r0, r9
    20cc:	bl	1110 <internal_hashmap_remove@plt>
    20d0:	ldr	r0, [sp, #112]	; 0x70
    20d4:	bl	ff0 <free@plt>
    20d8:	mov	r3, r7
    20dc:	mov	r2, r6
    20e0:	mov	r1, r4
    20e4:	mov	r0, r9
    20e8:	bl	102c <internal_hashmap_iterate@plt>
    20ec:	cmp	r0, #0
    20f0:	bne	20ac <log_oom_internal@plt+0xdec>
    20f4:	mov	r2, r0
    20f8:	mov	r1, r2
    20fc:	mov	r0, r9
    2100:	bl	114c <internal_hashmap_free@plt>
    2104:	ldr	r3, [sp, #52]	; 0x34
    2108:	ldrd	r0, [sp, #36]	; 0x24
    210c:	ldr	r2, [sp, #156]	; 0x9c
    2110:	ldr	r3, [r3]
    2114:	cmp	r0, #0
    2118:	movge	r0, r1
    211c:	cmp	r2, r3
    2120:	bne	3414 <log_oom_internal@plt+0x2154>
    2124:	add	sp, sp, #164	; 0xa4
    2128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    212c:	ldr	r1, [pc, #3592]	; 2f3c <log_oom_internal@plt+0x1c7c>
    2130:	ldr	r2, [pc, #3592]	; 2f40 <log_oom_internal@plt+0x1c80>
    2134:	add	r1, pc, r1
    2138:	add	r2, pc, r2
    213c:	str	r3, [sp, #36]	; 0x24
    2140:	mov	r9, r7
    2144:	add	r3, r1, #156	; 0x9c
    2148:	str	r3, [sp, #84]	; 0x54
    214c:	add	r3, r2, #156	; 0x9c
    2150:	str	r3, [sp, #88]	; 0x58
    2154:	str	r0, [sp, #60]	; 0x3c
    2158:	strd	sl, [sp, #68]	; 0x44
    215c:	mov	r1, r9
    2160:	mov	r0, r8
    2164:	bl	1c84 <log_oom_internal@plt+0x9c4>
    2168:	subs	r4, r0, #0
    216c:	bne	2374 <log_oom_internal@plt+0x10b4>
    2170:	ldr	r1, [pc, #3532]	; 2f44 <log_oom_internal@plt+0x1c84>
    2174:	mov	r3, r4
    2178:	mov	r2, r9
    217c:	add	r1, pc, r1
    2180:	mov	r0, r8
    2184:	bl	11c4 <strjoin_real@plt>
    2188:	subs	r3, r0, #0
    218c:	str	r3, [sp, #40]	; 0x28
    2190:	beq	2e48 <log_oom_internal@plt+0x1b88>
    2194:	mov	r0, r4
    2198:	str	r4, [sp, #128]	; 0x80
    219c:	str	r4, [sp, #132]	; 0x84
    21a0:	str	r4, [sp, #136]	; 0x88
    21a4:	str	r4, [sp, #140]	; 0x8c
    21a8:	bl	10c8 <log_get_max_level_realm@plt>
    21ac:	cmp	r0, #6
    21b0:	bgt	25f8 <log_oom_internal@plt+0x1338>
    21b4:	ldr	r0, [sp, #40]	; 0x28
    21b8:	bl	10a4 <opendir@plt>
    21bc:	mov	r6, r0
    21c0:	bl	1218 <__errno_location@plt>
    21c4:	cmp	r6, #0
    21c8:	mov	r7, r0
    21cc:	beq	22fc <log_oom_internal@plt+0x103c>
    21d0:	mov	r5, #0
    21d4:	str	r5, [r0]
    21d8:	mov	r0, r6
    21dc:	bl	1080 <readdir64@plt>
    21e0:	subs	r4, r0, #0
    21e4:	beq	26a0 <log_oom_internal@plt+0x13e0>
    21e8:	ldr	r3, [pc, #3416]	; 2f48 <log_oom_internal@plt+0x1c88>
    21ec:	str	r8, [sp, #92]	; 0x5c
    21f0:	add	r3, pc, r3
    21f4:	str	r3, [sp, #64]	; 0x40
    21f8:	add	r3, sp, #140	; 0x8c
    21fc:	str	r3, [sp, #76]	; 0x4c
    2200:	add	r3, sp, #132	; 0x84
    2204:	str	r3, [sp, #80]	; 0x50
    2208:	mov	r8, r5
    220c:	ldr	fp, [sp, #48]	; 0x30
    2210:	str	r9, [sp, #96]	; 0x60
    2214:	b	2280 <log_oom_internal@plt+0xfc0>
    2218:	mov	r0, r4
    221c:	bl	fe4 <dirent_is_file@plt>
    2220:	cmp	r0, #0
    2224:	beq	2268 <log_oom_internal@plt+0xfa8>
    2228:	mov	r3, #4
    222c:	add	r2, r5, #2
    2230:	add	r1, sp, #136	; 0x88
    2234:	add	r0, sp, #128	; 0x80
    2238:	bl	10e0 <greedy_realloc0@plt>
    223c:	cmp	r0, #0
    2240:	beq	2660 <log_oom_internal@plt+0x13a0>
    2244:	add	r0, r4, #19
    2248:	ldr	r4, [sp, #128]	; 0x80
    224c:	bl	129c <strdup@plt>
    2250:	str	r0, [r4, r5, lsl #2]
    2254:	ldr	r3, [sp, #128]	; 0x80
    2258:	ldr	r3, [r3, r5, lsl #2]
    225c:	cmp	r3, #0
    2260:	beq	2660 <log_oom_internal@plt+0x13a0>
    2264:	add	r5, r5, #1
    2268:	mov	r3, #0
    226c:	str	r3, [r7]
    2270:	mov	r0, r6
    2274:	bl	1080 <readdir64@plt>
    2278:	subs	r4, r0, #0
    227c:	beq	269c <log_oom_internal@plt+0x13dc>
    2280:	mov	r1, r4
    2284:	mov	r0, r6
    2288:	bl	1188 <dirent_ensure_type@plt>
    228c:	cmp	fp, #0
    2290:	beq	2218 <log_oom_internal@plt+0xf58>
    2294:	ldrb	r9, [r4, #18]
    2298:	cmp	r9, #4
    229c:	bne	2218 <log_oom_internal@plt+0xf58>
    22a0:	add	sl, r4, #19
    22a4:	mov	r0, sl
    22a8:	ldr	r1, [sp, #64]	; 0x40
    22ac:	bl	10bc <endswith@plt>
    22b0:	cmp	r0, #0
    22b4:	beq	2218 <log_oom_internal@plt+0xf58>
    22b8:	mov	r3, r9
    22bc:	add	r2, r8, #2
    22c0:	ldr	r1, [sp, #76]	; 0x4c
    22c4:	ldr	r0, [sp, #80]	; 0x50
    22c8:	bl	10e0 <greedy_realloc0@plt>
    22cc:	cmp	r0, #0
    22d0:	beq	2660 <log_oom_internal@plt+0x13a0>
    22d4:	mov	r0, sl
    22d8:	ldr	sl, [sp, #132]	; 0x84
    22dc:	bl	129c <strdup@plt>
    22e0:	str	r0, [sl, r8, lsl #2]
    22e4:	ldr	r0, [sp, #132]	; 0x84
    22e8:	ldr	r3, [r0, r8, lsl #2]
    22ec:	cmp	r3, #0
    22f0:	beq	32bc <log_oom_internal@plt+0x1ffc>
    22f4:	add	r8, r8, #1
    22f8:	b	2218 <log_oom_internal@plt+0xf58>
    22fc:	ldr	r4, [r0]
    2300:	cmp	r4, #2
    2304:	beq	2988 <log_oom_internal@plt+0x16c8>
    2308:	mov	r0, r6
    230c:	bl	10c8 <log_get_max_level_realm@plt>
    2310:	cmp	r0, #2
    2314:	bgt	2b18 <log_oom_internal@plt+0x1858>
    2318:	eor	r3, r4, r4, asr #31
    231c:	sub	r3, r3, r4, asr #31
    2320:	ldr	r0, [sp, #132]	; 0x84
    2324:	uxtb	r3, r3
    2328:	rsb	sl, r3, #0
    232c:	cmp	r0, #0
    2330:	beq	2338 <log_oom_internal@plt+0x1078>
    2334:	bl	1254 <strv_free@plt>
    2338:	ldr	r4, [sp, #128]	; 0x80
    233c:	cmp	r4, #0
    2340:	beq	234c <log_oom_internal@plt+0x108c>
    2344:	mov	r0, r4
    2348:	bl	1254 <strv_free@plt>
    234c:	cmp	r6, #0
    2350:	beq	235c <log_oom_internal@plt+0x109c>
    2354:	mov	r0, r6
    2358:	bl	1038 <closedir@plt>
    235c:	ldr	r2, [sp, #36]	; 0x24
    2360:	ldr	r0, [sp, #40]	; 0x28
    2364:	subs	r3, r2, #0
    2368:	moveq	r3, sl
    236c:	str	r3, [sp, #36]	; 0x24
    2370:	bl	ff0 <free@plt>
    2374:	mov	r0, r8
    2378:	bl	11dc <strlen@plt>
    237c:	add	r0, r0, #1
    2380:	adds	r8, r8, r0
    2384:	beq	2394 <log_oom_internal@plt+0x10d4>
    2388:	ldrb	r3, [r8]
    238c:	cmp	r3, #0
    2390:	bne	215c <log_oom_internal@plt+0xe9c>
    2394:	mov	r3, #0
    2398:	mvn	r2, #1
    239c:	str	r3, [sp, #40]	; 0x28
    23a0:	strd	r2, [sp, #148]	; 0x94
    23a4:	add	r3, sp, #112	; 0x70
    23a8:	str	r3, [sp, #48]	; 0x30
    23ac:	add	r3, sp, #120	; 0x78
    23b0:	str	r3, [sp, #56]	; 0x38
    23b4:	ldr	r3, [pc, #2960]	; 2f4c <log_oom_internal@plt+0x1c8c>
    23b8:	ldrd	sl, [sp, #68]	; 0x44
    23bc:	add	r3, pc, r3
    23c0:	str	r3, [sp, #80]	; 0x50
    23c4:	ldr	r3, [pc, #2948]	; 2f50 <log_oom_internal@plt+0x1c90>
    23c8:	ldr	r9, [sp, #60]	; 0x3c
    23cc:	add	r3, pc, r3
    23d0:	ldr	r7, [pc, #2940]	; 2f54 <log_oom_internal@plt+0x1c94>
    23d4:	add	r4, sp, #148	; 0x94
    23d8:	str	r3, [sp, #84]	; 0x54
    23dc:	ldr	r3, [pc, #2932]	; 2f58 <log_oom_internal@plt+0x1c98>
    23e0:	str	sl, [sp, #76]	; 0x4c
    23e4:	add	r7, pc, r7
    23e8:	mov	sl, r9
    23ec:	mov	r9, r4
    23f0:	add	r3, pc, r3
    23f4:	str	r3, [sp, #64]	; 0x40
    23f8:	ldr	r3, [sp, #48]	; 0x30
    23fc:	ldr	r2, [sp, #56]	; 0x38
    2400:	mov	r1, r9
    2404:	ldr	r0, [sp, #32]
    2408:	bl	102c <internal_hashmap_iterate@plt>
    240c:	cmp	r0, #0
    2410:	beq	2a24 <log_oom_internal@plt+0x1764>
    2414:	ldr	r1, [sp, #112]	; 0x70
    2418:	ldr	r0, [sp, #44]	; 0x2c
    241c:	bl	11e8 <internal_hashmap_get@plt>
    2420:	cmp	r0, #0
    2424:	mov	r5, r0
    2428:	str	r0, [sp, #124]	; 0x7c
    242c:	beq	2994 <log_oom_internal@plt+0x16d4>
    2430:	cmp	fp, #0
    2434:	beq	2464 <log_oom_internal@plt+0x11a4>
    2438:	mov	r0, fp
    243c:	bl	11dc <strlen@plt>
    2440:	mov	r1, fp
    2444:	mov	r2, r0
    2448:	mov	r4, r0
    244c:	mov	r0, r5
    2450:	bl	1020 <strncmp@plt>
    2454:	cmp	r0, #0
    2458:	bne	2490 <log_oom_internal@plt+0x11d0>
    245c:	cmn	r5, r4
    2460:	beq	2490 <log_oom_internal@plt+0x11d0>
    2464:	ldr	r8, [sp, #120]	; 0x78
    2468:	mov	r0, r5
    246c:	mov	r1, r8
    2470:	bl	10b0 <path_equal@plt>
    2474:	subs	r4, r0, #0
    2478:	beq	25bc <log_oom_internal@plt+0x12fc>
    247c:	ldr	r3, [pc, #2776]	; 2f5c <log_oom_internal@plt+0x1c9c>
    2480:	add	r3, pc, r3
    2484:	ldr	r3, [r3]
    2488:	tst	r3, #16
    248c:	bne	293c <log_oom_internal@plt+0x167c>
    2490:	ldr	r1, [sp, #112]	; 0x70
    2494:	mov	r0, sl
    2498:	bl	11e8 <internal_hashmap_get@plt>
    249c:	cmp	r0, #0
    24a0:	str	r0, [sp, #116]	; 0x74
    24a4:	beq	23f8 <log_oom_internal@plt+0x1138>
    24a8:	mov	r3, #0
    24ac:	mvn	r2, #1
    24b0:	add	r6, sp, #140	; 0x8c
    24b4:	strd	r2, [sp, #140]	; 0x8c
    24b8:	ldr	r3, [pc, #2720]	; 2f60 <log_oom_internal@plt+0x1ca0>
    24bc:	add	r5, sp, #124	; 0x7c
    24c0:	add	r3, pc, r3
    24c4:	str	r3, [sp, #60]	; 0x3c
    24c8:	str	sl, [sp, #68]	; 0x44
    24cc:	str	r9, [sp, #72]	; 0x48
    24d0:	b	24d8 <log_oom_internal@plt+0x1218>
    24d4:	ldr	r0, [sp, #116]	; 0x74
    24d8:	mov	r3, #0
    24dc:	mov	r2, r5
    24e0:	mov	r1, r6
    24e4:	bl	102c <internal_hashmap_iterate@plt>
    24e8:	cmp	r0, #0
    24ec:	beq	2598 <log_oom_internal@plt+0x12d8>
    24f0:	cmp	fp, #0
    24f4:	ldr	r4, [sp, #124]	; 0x7c
    24f8:	beq	2528 <log_oom_internal@plt+0x1268>
    24fc:	mov	r0, fp
    2500:	bl	11dc <strlen@plt>
    2504:	mov	r1, fp
    2508:	mov	r2, r0
    250c:	mov	r8, r0
    2510:	mov	r0, r4
    2514:	bl	1020 <strncmp@plt>
    2518:	cmp	r0, #0
    251c:	bne	24d4 <log_oom_internal@plt+0x1214>
    2520:	cmn	r4, r8
    2524:	beq	24d4 <log_oom_internal@plt+0x1214>
    2528:	ldr	r3, [r7]
    252c:	tst	r3, #32
    2530:	beq	24d4 <log_oom_internal@plt+0x1214>
    2534:	ldr	sl, [sp, #120]	; 0x78
    2538:	bl	1278 <colors_enabled@plt>
    253c:	cmp	r0, #0
    2540:	beq	25b0 <log_oom_internal@plt+0x12f0>
    2544:	ldr	r8, [pc, #2584]	; 2f64 <log_oom_internal@plt+0x1ca4>
    2548:	add	r8, pc, r8
    254c:	bl	1278 <colors_enabled@plt>
    2550:	cmp	r0, #0
    2554:	beq	25a4 <log_oom_internal@plt+0x12e4>
    2558:	ldr	r9, [pc, #2568]	; 2f68 <log_oom_internal@plt+0x1ca8>
    255c:	add	r9, pc, r9
    2560:	mov	r0, #7
    2564:	bl	1164 <special_glyph@plt>
    2568:	ldr	ip, [sp, #40]	; 0x28
    256c:	str	r4, [sp, #12]
    2570:	add	ip, ip, #1
    2574:	stm	sp, {r9, sl}
    2578:	mov	r2, r8
    257c:	ldr	r3, [sp, #64]	; 0x40
    2580:	ldr	r1, [sp, #60]	; 0x3c
    2584:	str	ip, [sp, #40]	; 0x28
    2588:	str	r0, [sp, #8]
    258c:	mov	r0, #1
    2590:	bl	12a8 <__printf_chk@plt>
    2594:	b	24d4 <log_oom_internal@plt+0x1214>
    2598:	ldr	sl, [sp, #68]	; 0x44
    259c:	ldr	r9, [sp, #72]	; 0x48
    25a0:	b	23f8 <log_oom_internal@plt+0x1138>
    25a4:	ldr	r9, [pc, #2496]	; 2f6c <log_oom_internal@plt+0x1cac>
    25a8:	add	r9, pc, r9
    25ac:	b	2560 <log_oom_internal@plt+0x12a0>
    25b0:	ldr	r8, [pc, #2488]	; 2f70 <log_oom_internal@plt+0x1cb0>
    25b4:	add	r8, pc, r8
    25b8:	b	254c <log_oom_internal@plt+0x128c>
    25bc:	cmp	r8, #0
    25c0:	str	r4, [sp, #128]	; 0x80
    25c4:	beq	3204 <log_oom_internal@plt+0x1f44>
    25c8:	mov	r0, r8
    25cc:	bl	10ec <null_or_empty_path@plt>
    25d0:	cmp	r0, #0
    25d4:	ble	2a34 <log_oom_internal@plt+0x1774>
    25d8:	ldr	r3, [pc, #2452]	; 2f74 <log_oom_internal@plt+0x1cb4>
    25dc:	add	r3, pc, r3
    25e0:	ldr	r3, [r3]
    25e4:	tst	r3, #1
    25e8:	bne	29bc <log_oom_internal@plt+0x16fc>
    25ec:	ldr	r0, [sp, #128]	; 0x80
    25f0:	bl	ff0 <free@plt>
    25f4:	b	2490 <log_oom_internal@plt+0x11d0>
    25f8:	ldr	r2, [pc, #2424]	; 2f78 <log_oom_internal@plt+0x1cb8>
    25fc:	ldr	r3, [pc, #2424]	; 2f7c <log_oom_internal@plt+0x1cbc>
    2600:	add	r2, pc, r2
    2604:	ldr	r1, [sp, #40]	; 0x28
    2608:	str	r2, [sp, #4]
    260c:	add	r3, pc, r3
    2610:	ldr	r2, [pc, #2408]	; 2f80 <log_oom_internal@plt+0x1cc0>
    2614:	add	r3, r3, #156	; 0x9c
    2618:	str	r1, [sp, #8]
    261c:	str	r3, [sp]
    2620:	mov	r1, r4
    2624:	ldr	r3, [pc, #2392]	; 2f84 <log_oom_internal@plt+0x1cc4>
    2628:	add	r2, pc, r2
    262c:	mov	r0, #7
    2630:	bl	123c <log_internal_realm@plt>
    2634:	b	21b4 <log_oom_internal@plt+0xef4>
    2638:	ldr	r2, [pc, #2376]	; 2f88 <log_oom_internal@plt+0x1cc8>
    263c:	ldr	r1, [pc, #2376]	; 2f8c <log_oom_internal@plt+0x1ccc>
    2640:	add	r2, pc, r2
    2644:	add	r2, r2, #108	; 0x6c
    2648:	str	r2, [sp]
    264c:	ldr	r2, [pc, #2364]	; 2f90 <log_oom_internal@plt+0x1cd0>
    2650:	ldr	r3, [pc, #2364]	; 2f94 <log_oom_internal@plt+0x1cd4>
    2654:	add	r2, pc, r2
    2658:	add	r1, pc, r1
    265c:	bl	1230 <log_assert_failed_realm@plt>
    2660:	ldrd	r8, [sp, #92]	; 0x5c
    2664:	ldr	r0, [sp, #132]	; 0x84
    2668:	mvn	sl, #11
    266c:	b	232c <log_oom_internal@plt+0x106c>
    2670:	ldr	r2, [pc, #2336]	; 2f98 <log_oom_internal@plt+0x1cd8>
    2674:	ldr	r1, [pc, #2336]	; 2f9c <log_oom_internal@plt+0x1cdc>
    2678:	add	r2, pc, r2
    267c:	add	r2, r2, #108	; 0x6c
    2680:	str	r2, [sp]
    2684:	ldr	r2, [pc, #2324]	; 2fa0 <log_oom_internal@plt+0x1ce0>
    2688:	ldr	r3, [pc, #2324]	; 2fa4 <log_oom_internal@plt+0x1ce4>
    268c:	add	r2, pc, r2
    2690:	add	r1, pc, r1
    2694:	mov	r0, #0
    2698:	bl	1230 <log_assert_failed_realm@plt>
    269c:	ldrd	r8, [sp, #92]	; 0x5c
    26a0:	ldr	r3, [r7]
    26a4:	ldr	r0, [sp, #132]	; 0x84
    26a8:	cmp	r3, #0
    26ac:	rsbgt	sl, r3, #0
    26b0:	bgt	232c <log_oom_internal@plt+0x106c>
    26b4:	bl	108c <strv_sort@plt>
    26b8:	ldr	r0, [sp, #128]	; 0x80
    26bc:	bl	108c <strv_sort@plt>
    26c0:	ldr	r3, [sp, #132]	; 0x84
    26c4:	cmp	r3, #0
    26c8:	beq	2818 <log_oom_internal@plt+0x1558>
    26cc:	ldr	r4, [r3]
    26d0:	cmp	r4, #0
    26d4:	beq	33fc <log_oom_internal@plt+0x213c>
    26d8:	ldr	r1, [pc, #2248]	; 2fa8 <log_oom_internal@plt+0x1ce8>
    26dc:	ldr	r2, [pc, #2248]	; 2fac <log_oom_internal@plt+0x1cec>
    26e0:	add	r3, r3, #4
    26e4:	add	r1, pc, r1
    26e8:	str	r9, [sp, #108]	; 0x6c
    26ec:	ldr	sl, [sp, #40]	; 0x28
    26f0:	ldr	r9, [sp, #44]	; 0x2c
    26f4:	add	r2, pc, r2
    26f8:	str	r3, [sp, #76]	; 0x4c
    26fc:	add	r3, r1, #188	; 0xbc
    2700:	str	r3, [sp, #96]	; 0x60
    2704:	add	r3, r2, #188	; 0xbc
    2708:	str	r3, [sp, #92]	; 0x5c
    270c:	str	r8, [sp, #100]	; 0x64
    2710:	str	r6, [sp, #104]	; 0x68
    2714:	ldr	r6, [pc, #2196]	; 2fb0 <log_oom_internal@plt+0x1cf0>
    2718:	mov	r2, #0
    271c:	add	r6, pc, r6
    2720:	mov	r1, r6
    2724:	mov	r0, r4
    2728:	str	r2, [sp, #148]	; 0x94
    272c:	str	r2, [sp, #64]	; 0x40
    2730:	bl	10bc <endswith@plt>
    2734:	ldr	r2, [sp, #64]	; 0x40
    2738:	subs	r5, r0, #0
    273c:	bne	32c8 <log_oom_internal@plt+0x2008>
    2740:	mov	r1, r6
    2744:	mov	r3, r5
    2748:	mov	r2, r4
    274c:	mov	r0, sl
    2750:	bl	11c4 <strjoin_real@plt>
    2754:	subs	r8, r0, #0
    2758:	beq	2de4 <log_oom_internal@plt+0x1b24>
    275c:	mov	r0, r5
    2760:	bl	10c8 <log_get_max_level_realm@plt>
    2764:	cmp	r0, #6
    2768:	bgt	2e54 <log_oom_internal@plt+0x1b94>
    276c:	mov	r0, r4
    2770:	bl	129c <strdup@plt>
    2774:	subs	r7, r0, #0
    2778:	beq	2de4 <log_oom_internal@plt+0x1b24>
    277c:	mov	r1, #46	; 0x2e
    2780:	bl	1248 <strrchr@plt>
    2784:	cmp	r0, #0
    2788:	beq	33f0 <log_oom_internal@plt+0x2130>
    278c:	mov	r5, #0
    2790:	strb	r5, [r0]
    2794:	add	r1, sp, #148	; 0x94
    2798:	mov	r0, r8
    279c:	bl	fc0 <get_files_in_directory@plt>
    27a0:	subs	r4, r0, #0
    27a4:	bge	2b60 <log_oom_internal@plt+0x18a0>
    27a8:	mov	r0, r5
    27ac:	bl	10c8 <log_get_max_level_realm@plt>
    27b0:	cmp	r0, #2
    27b4:	bgt	3240 <log_oom_internal@plt+0x1f80>
    27b8:	rsb	r3, r4, #0
    27bc:	uxtb	r3, r3
    27c0:	rsb	r3, r3, #0
    27c4:	mov	r4, r3
    27c8:	ldr	r0, [sp, #148]	; 0x94
    27cc:	cmp	r0, #0
    27d0:	beq	27d8 <log_oom_internal@plt+0x1518>
    27d4:	bl	1254 <strv_free@plt>
    27d8:	mov	r0, r8
    27dc:	bl	ff0 <free@plt>
    27e0:	mov	r0, r7
    27e4:	bl	ff0 <free@plt>
    27e8:	cmp	r4, #0
    27ec:	blt	34cc <log_oom_internal@plt+0x220c>
    27f0:	ldr	r3, [sp, #76]	; 0x4c
    27f4:	cmp	r3, #0
    27f8:	beq	280c <log_oom_internal@plt+0x154c>
    27fc:	ldr	r4, [r3], #4
    2800:	cmp	r4, #0
    2804:	str	r3, [sp, #76]	; 0x4c
    2808:	bne	2714 <log_oom_internal@plt+0x1454>
    280c:	ldr	r8, [sp, #100]	; 0x64
    2810:	ldr	r6, [sp, #104]	; 0x68
    2814:	ldr	r9, [sp, #108]	; 0x6c
    2818:	ldr	r4, [sp, #128]	; 0x80
    281c:	cmp	r4, #0
    2820:	beq	3418 <log_oom_internal@plt+0x2158>
    2824:	ldr	r2, [r4]
    2828:	cmp	r2, #0
    282c:	beq	3430 <log_oom_internal@plt+0x2170>
    2830:	ldr	r3, [pc, #1916]	; 2fb4 <log_oom_internal@plt+0x1cf4>
    2834:	ldr	r7, [pc, #1916]	; 2fb8 <log_oom_internal@plt+0x1cf8>
    2838:	add	r3, pc, r3
    283c:	str	r8, [sp, #76]	; 0x4c
    2840:	add	r7, pc, r7
    2844:	str	r3, [sp, #64]	; 0x40
    2848:	add	r4, r4, #4
    284c:	ldr	fp, [sp, #40]	; 0x28
    2850:	ldr	sl, [sp, #32]
    2854:	ldr	r8, [sp, #44]	; 0x2c
    2858:	str	r6, [sp, #80]	; 0x50
    285c:	b	28c4 <log_oom_internal@plt+0x1604>
    2860:	cmn	r0, #17
    2864:	bne	33b8 <log_oom_internal@plt+0x20f8>
    2868:	mov	r0, #0
    286c:	bl	10c8 <log_get_max_level_realm@plt>
    2870:	cmp	r0, #6
    2874:	bgt	2ed8 <log_oom_internal@plt+0x1c18>
    2878:	mov	r0, r5
    287c:	bl	1194 <basename@plt>
    2880:	mov	r1, r0
    2884:	mov	r0, r8
    2888:	bl	1110 <internal_hashmap_remove@plt>
    288c:	bl	ff0 <free@plt>
    2890:	mov	r0, r5
    2894:	bl	1194 <basename@plt>
    2898:	mov	r2, r5
    289c:	mov	r1, r0
    28a0:	mov	r0, r8
    28a4:	bl	12b4 <hashmap_put@plt>
    28a8:	cmp	r0, #0
    28ac:	blt	33b8 <log_oom_internal@plt+0x20f8>
    28b0:	cmp	r4, #0
    28b4:	beq	2980 <log_oom_internal@plt+0x16c0>
    28b8:	ldr	r2, [r4], #4
    28bc:	cmp	r2, #0
    28c0:	beq	2980 <log_oom_internal@plt+0x16c0>
    28c4:	mov	r3, #0
    28c8:	mov	r1, r7
    28cc:	mov	r0, fp
    28d0:	bl	11c4 <strjoin_real@plt>
    28d4:	subs	r5, r0, #0
    28d8:	beq	291c <log_oom_internal@plt+0x165c>
    28dc:	mov	r0, #0
    28e0:	bl	10c8 <log_get_max_level_realm@plt>
    28e4:	cmp	r0, #6
    28e8:	bgt	2e90 <log_oom_internal@plt+0x1bd0>
    28ec:	mov	r0, r5
    28f0:	bl	1194 <basename@plt>
    28f4:	mov	r2, r5
    28f8:	mov	r1, r0
    28fc:	mov	r0, sl
    2900:	bl	12b4 <hashmap_put@plt>
    2904:	cmp	r0, #0
    2908:	blt	2860 <log_oom_internal@plt+0x15a0>
    290c:	mov	r0, r5
    2910:	bl	129c <strdup@plt>
    2914:	subs	r5, r0, #0
    2918:	bne	2868 <log_oom_internal@plt+0x15a8>
    291c:	ldr	r8, [sp, #76]	; 0x4c
    2920:	ldr	r6, [sp, #80]	; 0x50
    2924:	mov	r5, #0
    2928:	mvn	sl, #11
    292c:	mov	r0, r5
    2930:	bl	ff0 <free@plt>
    2934:	ldr	r0, [sp, #132]	; 0x84
    2938:	b	232c <log_oom_internal@plt+0x106c>
    293c:	ldr	r1, [pc, #1656]	; 2fbc <log_oom_internal@plt+0x1cfc>
    2940:	mov	r2, r8
    2944:	add	r1, pc, r1
    2948:	mov	r0, #1
    294c:	bl	12a8 <__printf_chk@plt>
    2950:	b	2490 <log_oom_internal@plt+0x11d0>
    2954:	ldr	r2, [pc, #1636]	; 2fc0 <log_oom_internal@plt+0x1d00>
    2958:	ldr	r1, [pc, #1636]	; 2fc4 <log_oom_internal@plt+0x1d04>
    295c:	add	r2, pc, r2
    2960:	add	r2, r2, #108	; 0x6c
    2964:	str	r2, [sp]
    2968:	ldr	r2, [pc, #1624]	; 2fc8 <log_oom_internal@plt+0x1d08>
    296c:	ldr	r3, [pc, #1624]	; 2fcc <log_oom_internal@plt+0x1d0c>
    2970:	add	r2, pc, r2
    2974:	add	r1, pc, r1
    2978:	mov	r0, #0
    297c:	bl	1230 <log_assert_failed_realm@plt>
    2980:	ldr	r8, [sp, #76]	; 0x4c
    2984:	ldr	r6, [sp, #80]	; 0x50
    2988:	ldr	r0, [sp, #132]	; 0x84
    298c:	mov	sl, #0
    2990:	b	232c <log_oom_internal@plt+0x106c>
    2994:	ldr	r2, [pc, #1588]	; 2fd0 <log_oom_internal@plt+0x1d10>
    2998:	ldr	r1, [pc, #1588]	; 2fd4 <log_oom_internal@plt+0x1d14>
    299c:	add	r2, pc, r2
    29a0:	add	r2, r2, #108	; 0x6c
    29a4:	str	r2, [sp]
    29a8:	ldr	r2, [pc, #1576]	; 2fd8 <log_oom_internal@plt+0x1d18>
    29ac:	mov	r3, #444	; 0x1bc
    29b0:	add	r2, pc, r2
    29b4:	add	r1, pc, r1
    29b8:	bl	1230 <log_assert_failed_realm@plt>
    29bc:	bl	1278 <colors_enabled@plt>
    29c0:	cmp	r0, #0
    29c4:	beq	328c <log_oom_internal@plt+0x1fcc>
    29c8:	ldr	r6, [pc, #1548]	; 2fdc <log_oom_internal@plt+0x1d1c>
    29cc:	add	r6, pc, r6
    29d0:	bl	1278 <colors_enabled@plt>
    29d4:	cmp	r0, #0
    29d8:	beq	3280 <log_oom_internal@plt+0x1fc0>
    29dc:	ldr	r4, [pc, #1532]	; 2fe0 <log_oom_internal@plt+0x1d20>
    29e0:	add	r4, pc, r4
    29e4:	mov	r0, #7
    29e8:	bl	1164 <special_glyph@plt>
    29ec:	ldr	r3, [pc, #1520]	; 2fe4 <log_oom_internal@plt+0x1d24>
    29f0:	ldr	r1, [pc, #1520]	; 2fe8 <log_oom_internal@plt+0x1d28>
    29f4:	mov	r2, r6
    29f8:	add	r3, pc, r3
    29fc:	add	r1, pc, r1
    2a00:	str	r5, [sp, #12]
    2a04:	stm	sp, {r4, r8}
    2a08:	ldr	ip, [sp, #40]	; 0x28
    2a0c:	str	r0, [sp, #8]
    2a10:	add	ip, ip, #1
    2a14:	mov	r0, #1
    2a18:	str	ip, [sp, #40]	; 0x28
    2a1c:	bl	12a8 <__printf_chk@plt>
    2a20:	b	25ec <log_oom_internal@plt+0x132c>
    2a24:	mov	r4, r9
    2a28:	mov	r9, sl
    2a2c:	ldr	sl, [sp, #76]	; 0x4c
    2a30:	b	206c <log_oom_internal@plt+0xdac>
    2a34:	add	r1, sp, #128	; 0x80
    2a38:	mov	r0, r8
    2a3c:	bl	1128 <readlink_malloc@plt>
    2a40:	cmp	r0, #0
    2a44:	blt	3160 <log_oom_internal@plt+0x1ea0>
    2a48:	ldr	r0, [sp, #128]	; 0x80
    2a4c:	add	r3, sp, #132	; 0x84
    2a50:	mov	r2, #32
    2a54:	mov	r1, r4
    2a58:	str	r4, [sp, #132]	; 0x84
    2a5c:	str	r4, [sp, #136]	; 0x88
    2a60:	bl	11d0 <chase_symlinks@plt>
    2a64:	cmp	r0, #0
    2a68:	blt	30ec <log_oom_internal@plt+0x1e2c>
    2a6c:	mov	r1, r4
    2a70:	add	r3, sp, #136	; 0x88
    2a74:	mov	r2, #32
    2a78:	mov	r0, r5
    2a7c:	bl	11d0 <chase_symlinks@plt>
    2a80:	cmp	r0, #0
    2a84:	blt	30ec <log_oom_internal@plt+0x1e2c>
    2a88:	ldr	r4, [sp, #136]	; 0x88
    2a8c:	ldr	r0, [sp, #132]	; 0x84
    2a90:	mov	r1, r4
    2a94:	bl	10b0 <path_equal@plt>
    2a98:	mov	r6, r0
    2a9c:	mov	r0, r4
    2aa0:	bl	ff0 <free@plt>
    2aa4:	ldr	r0, [sp, #132]	; 0x84
    2aa8:	bl	ff0 <free@plt>
    2aac:	ldr	r3, [pc, #1336]	; 2fec <log_oom_internal@plt+0x1d2c>
    2ab0:	cmp	r6, #0
    2ab4:	add	r3, pc, r3
    2ab8:	ldr	r3, [r3]
    2abc:	beq	30fc <log_oom_internal@plt+0x1e3c>
    2ac0:	tst	r3, #2
    2ac4:	beq	25ec <log_oom_internal@plt+0x132c>
    2ac8:	bl	1278 <colors_enabled@plt>
    2acc:	cmp	r0, #0
    2ad0:	beq	3394 <log_oom_internal@plt+0x20d4>
    2ad4:	ldr	r4, [pc, #1300]	; 2ff0 <log_oom_internal@plt+0x1d30>
    2ad8:	add	r4, pc, r4
    2adc:	bl	1278 <colors_enabled@plt>
    2ae0:	cmp	r0, #0
    2ae4:	beq	3388 <log_oom_internal@plt+0x20c8>
    2ae8:	ldr	r6, [pc, #1284]	; 2ff4 <log_oom_internal@plt+0x1d34>
    2aec:	add	r6, pc, r6
    2af0:	mov	r0, #7
    2af4:	bl	1164 <special_glyph@plt>
    2af8:	ldr	r3, [pc, #1272]	; 2ff8 <log_oom_internal@plt+0x1d38>
    2afc:	ldr	r1, [pc, #1272]	; 2ffc <log_oom_internal@plt+0x1d3c>
    2b00:	str	r5, [sp, #12]
    2b04:	stm	sp, {r6, r8}
    2b08:	mov	r2, r4
    2b0c:	add	r3, pc, r3
    2b10:	add	r1, pc, r1
    2b14:	b	2a08 <log_oom_internal@plt+0x1748>
    2b18:	ldr	r2, [pc, #1248]	; 3000 <log_oom_internal@plt+0x1d40>
    2b1c:	ldr	r3, [pc, #1248]	; 3004 <log_oom_internal@plt+0x1d44>
    2b20:	add	r2, pc, r2
    2b24:	ldr	r1, [sp, #40]	; 0x28
    2b28:	str	r2, [sp, #4]
    2b2c:	add	r3, pc, r3
    2b30:	ldr	r2, [pc, #1232]	; 3008 <log_oom_internal@plt+0x1d48>
    2b34:	add	r3, r3, #156	; 0x9c
    2b38:	str	r1, [sp, #8]
    2b3c:	str	r3, [sp]
    2b40:	mov	r1, r4
    2b44:	ldr	r3, [pc, #1216]	; 300c <log_oom_internal@plt+0x1d4c>
    2b48:	add	r2, pc, r2
    2b4c:	mov	r0, #3
    2b50:	bl	123c <log_internal_realm@plt>
    2b54:	mov	sl, r0
    2b58:	ldr	r0, [sp, #132]	; 0x84
    2b5c:	b	232c <log_oom_internal@plt+0x106c>
    2b60:	ldr	r0, [sp, #148]	; 0x94
    2b64:	bl	108c <strv_sort@plt>
    2b68:	ldr	r0, [sp, #148]	; 0x94
    2b6c:	cmp	r0, #0
    2b70:	beq	322c <log_oom_internal@plt+0x1f6c>
    2b74:	ldr	r4, [r0]
    2b78:	cmp	r4, #0
    2b7c:	beq	27d4 <log_oom_internal@plt+0x1514>
    2b80:	ldr	r3, [pc, #1160]	; 3010 <log_oom_internal@plt+0x1d50>
    2b84:	ldr	fp, [pc, #1160]	; 3014 <log_oom_internal@plt+0x1d54>
    2b88:	add	r3, pc, r3
    2b8c:	add	fp, pc, fp
    2b90:	str	r3, [sp, #64]	; 0x40
    2b94:	add	r6, r0, #4
    2b98:	b	2c44 <log_oom_internal@plt+0x1984>
    2b9c:	cmn	r3, #17
    2ba0:	bne	32f4 <log_oom_internal@plt+0x2034>
    2ba4:	mov	r0, #0
    2ba8:	bl	10c8 <log_get_max_level_realm@plt>
    2bac:	cmp	r0, #6
    2bb0:	bgt	2d1c <log_oom_internal@plt+0x1a5c>
    2bb4:	mov	r1, r4
    2bb8:	mov	r0, r9
    2bbc:	bl	1110 <internal_hashmap_remove@plt>
    2bc0:	bl	ff0 <free@plt>
    2bc4:	mov	r2, r5
    2bc8:	mov	r1, r4
    2bcc:	mov	r0, r9
    2bd0:	bl	12b4 <hashmap_put@plt>
    2bd4:	subs	r3, r0, #0
    2bd8:	blt	32f4 <log_oom_internal@plt+0x2034>
    2bdc:	mov	r1, r7
    2be0:	ldr	r0, [sp, #60]	; 0x3c
    2be4:	bl	11e8 <internal_hashmap_get@plt>
    2be8:	subs	r4, r0, #0
    2bec:	beq	2db4 <log_oom_internal@plt+0x1af4>
    2bf0:	mov	r0, r5
    2bf4:	bl	129c <strdup@plt>
    2bf8:	subs	r5, r0, #0
    2bfc:	beq	32b0 <log_oom_internal@plt+0x1ff0>
    2c00:	mov	r0, #0
    2c04:	bl	10c8 <log_get_max_level_realm@plt>
    2c08:	cmp	r0, #6
    2c0c:	bgt	2d5c <log_oom_internal@plt+0x1a9c>
    2c10:	mov	r0, r5
    2c14:	bl	1194 <basename@plt>
    2c18:	mov	r2, r5
    2c1c:	mov	r1, r0
    2c20:	mov	r0, r4
    2c24:	bl	12b4 <hashmap_put@plt>
    2c28:	subs	r3, r0, #0
    2c2c:	blt	2e28 <log_oom_internal@plt+0x1b68>
    2c30:	cmp	r6, #0
    2c34:	beq	3298 <log_oom_internal@plt+0x1fd8>
    2c38:	ldr	r4, [r6], #4
    2c3c:	cmp	r4, #0
    2c40:	beq	3298 <log_oom_internal@plt+0x1fd8>
    2c44:	mov	r1, fp
    2c48:	mov	r0, r4
    2c4c:	bl	10bc <endswith@plt>
    2c50:	cmp	r0, #0
    2c54:	beq	2c30 <log_oom_internal@plt+0x1970>
    2c58:	mov	r2, r4
    2c5c:	mov	r3, #0
    2c60:	ldr	r1, [sp, #64]	; 0x40
    2c64:	mov	r0, r8
    2c68:	bl	11c4 <strjoin_real@plt>
    2c6c:	subs	r5, r0, #0
    2c70:	beq	32b0 <log_oom_internal@plt+0x1ff0>
    2c74:	mov	r0, sl
    2c78:	bl	11dc <strlen@plt>
    2c7c:	add	r4, r0, #1
    2c80:	mov	r0, #0
    2c84:	bl	10c8 <log_get_max_level_realm@plt>
    2c88:	add	r4, r5, r4
    2c8c:	cmp	r0, #6
    2c90:	bgt	2cd0 <log_oom_internal@plt+0x1a10>
    2c94:	mov	r2, r5
    2c98:	mov	r1, r4
    2c9c:	ldr	r0, [sp, #32]
    2ca0:	bl	12b4 <hashmap_put@plt>
    2ca4:	subs	r3, r0, #0
    2ca8:	blt	2b9c <log_oom_internal@plt+0x18dc>
    2cac:	mov	r0, r5
    2cb0:	bl	129c <strdup@plt>
    2cb4:	subs	r5, r0, #0
    2cb8:	beq	32b0 <log_oom_internal@plt+0x1ff0>
    2cbc:	mov	r0, sl
    2cc0:	bl	11dc <strlen@plt>
    2cc4:	add	r0, r0, #1
    2cc8:	add	r4, r5, r0
    2ccc:	b	2ba4 <log_oom_internal@plt+0x18e4>
    2cd0:	mov	r0, #7
    2cd4:	bl	1164 <special_glyph@plt>
    2cd8:	ldr	r2, [pc, #824]	; 3018 <log_oom_internal@plt+0x1d58>
    2cdc:	ldr	r3, [pc, #824]	; 301c <log_oom_internal@plt+0x1d5c>
    2ce0:	add	r2, pc, r2
    2ce4:	str	r2, [sp, #4]
    2ce8:	add	r3, pc, r3
    2cec:	ldr	r2, [pc, #812]	; 3020 <log_oom_internal@plt+0x1d60>
    2cf0:	add	r3, r3, #188	; 0xbc
    2cf4:	str	r3, [sp]
    2cf8:	str	r5, [sp, #16]
    2cfc:	str	r4, [sp, #8]
    2d00:	mov	r3, #238	; 0xee
    2d04:	add	r2, pc, r2
    2d08:	mov	r1, #0
    2d0c:	str	r0, [sp, #12]
    2d10:	mov	r0, #7
    2d14:	bl	123c <log_internal_realm@plt>
    2d18:	b	2c94 <log_oom_internal@plt+0x19d4>
    2d1c:	mov	r0, #7
    2d20:	bl	1164 <special_glyph@plt>
    2d24:	ldr	r3, [pc, #760]	; 3024 <log_oom_internal@plt+0x1d64>
    2d28:	ldr	r2, [sp, #92]	; 0x5c
    2d2c:	add	r3, pc, r3
    2d30:	str	r5, [sp, #16]
    2d34:	strd	r2, [sp]
    2d38:	ldr	r2, [pc, #744]	; 3028 <log_oom_internal@plt+0x1d68>
    2d3c:	str	r4, [sp, #8]
    2d40:	mov	r3, #250	; 0xfa
    2d44:	add	r2, pc, r2
    2d48:	mov	r1, #0
    2d4c:	str	r0, [sp, #12]
    2d50:	mov	r0, #7
    2d54:	bl	123c <log_internal_realm@plt>
    2d58:	b	2bb4 <log_oom_internal@plt+0x18f4>
    2d5c:	mov	r0, #7
    2d60:	bl	1164 <special_glyph@plt>
    2d64:	str	r0, [sp, #80]	; 0x50
    2d68:	mov	r0, r5
    2d6c:	bl	1194 <basename@plt>
    2d70:	ldr	r2, [sp, #80]	; 0x50
    2d74:	ldr	r3, [pc, #688]	; 302c <log_oom_internal@plt+0x1d6c>
    2d78:	str	r2, [sp, #20]
    2d7c:	str	r2, [sp, #12]
    2d80:	ldr	r2, [sp, #96]	; 0x60
    2d84:	add	r3, pc, r3
    2d88:	str	r5, [sp, #24]
    2d8c:	strd	r2, [sp]
    2d90:	ldr	r2, [pc, #664]	; 3030 <log_oom_internal@plt+0x1d70>
    2d94:	str	r7, [sp, #8]
    2d98:	ldr	r3, [pc, #660]	; 3034 <log_oom_internal@plt+0x1d74>
    2d9c:	add	r2, pc, r2
    2da0:	mov	r1, #0
    2da4:	str	r0, [sp, #16]
    2da8:	mov	r0, #7
    2dac:	bl	123c <log_internal_realm@plt>
    2db0:	b	2c10 <log_oom_internal@plt+0x1950>
    2db4:	ldr	r0, [sp, #56]	; 0x38
    2db8:	bl	11f4 <internal_ordered_hashmap_new@plt>
    2dbc:	subs	r4, r0, #0
    2dc0:	beq	32b0 <log_oom_internal@plt+0x1ff0>
    2dc4:	mov	r1, r7
    2dc8:	mov	r2, r4
    2dcc:	ldr	r0, [sp, #60]	; 0x3c
    2dd0:	bl	12b4 <hashmap_put@plt>
    2dd4:	mov	r0, r7
    2dd8:	bl	129c <strdup@plt>
    2ddc:	subs	r7, r0, #0
    2de0:	bne	2bf0 <log_oom_internal@plt+0x1930>
    2de4:	mvn	r3, #11
    2de8:	mov	r7, #0
    2dec:	mov	r4, r3
    2df0:	ldr	r0, [sp, #148]	; 0x94
    2df4:	cmp	r0, #0
    2df8:	bne	27d4 <log_oom_internal@plt+0x1514>
    2dfc:	mov	r3, r8
    2e00:	mov	r0, r3
    2e04:	ldr	r6, [sp, #104]	; 0x68
    2e08:	ldr	r8, [sp, #100]	; 0x64
    2e0c:	ldr	r9, [sp, #108]	; 0x6c
    2e10:	bl	ff0 <free@plt>
    2e14:	mov	r0, r7
    2e18:	bl	ff0 <free@plt>
    2e1c:	mov	sl, r4
    2e20:	ldr	r0, [sp, #132]	; 0x84
    2e24:	b	232c <log_oom_internal@plt+0x106c>
    2e28:	mov	r0, r5
    2e2c:	str	r3, [sp, #80]	; 0x50
    2e30:	bl	ff0 <free@plt>
    2e34:	ldr	r3, [sp, #80]	; 0x50
    2e38:	cmn	r3, #17
    2e3c:	beq	2c30 <log_oom_internal@plt+0x1970>
    2e40:	mov	r4, r3
    2e44:	b	2df0 <log_oom_internal@plt+0x1b30>
    2e48:	ldr	r9, [sp, #60]	; 0x3c
    2e4c:	ldr	sl, [sp, #68]	; 0x44
    2e50:	b	2054 <log_oom_internal@plt+0xd94>
    2e54:	ldr	r2, [pc, #476]	; 3038 <log_oom_internal@plt+0x1d78>
    2e58:	ldr	r3, [pc, #476]	; 303c <log_oom_internal@plt+0x1d7c>
    2e5c:	add	r2, pc, r2
    2e60:	str	r2, [sp, #4]
    2e64:	add	r3, pc, r3
    2e68:	ldr	r2, [pc, #464]	; 3040 <log_oom_internal@plt+0x1d80>
    2e6c:	add	r3, r3, #188	; 0xbc
    2e70:	str	r3, [sp]
    2e74:	str	r8, [sp, #8]
    2e78:	mov	r1, r5
    2e7c:	mov	r3, #207	; 0xcf
    2e80:	add	r2, pc, r2
    2e84:	mov	r0, #7
    2e88:	bl	123c <log_internal_realm@plt>
    2e8c:	b	276c <log_oom_internal@plt+0x14ac>
    2e90:	mov	r0, r5
    2e94:	bl	1194 <basename@plt>
    2e98:	mov	r6, r0
    2e9c:	mov	r0, #7
    2ea0:	bl	1164 <special_glyph@plt>
    2ea4:	ldr	r3, [pc, #408]	; 3044 <log_oom_internal@plt+0x1d84>
    2ea8:	ldr	r2, [sp, #84]	; 0x54
    2eac:	add	r3, pc, r3
    2eb0:	str	r6, [sp, #8]
    2eb4:	strd	r2, [sp]
    2eb8:	str	r5, [sp, #16]
    2ebc:	ldr	r3, [pc, #388]	; 3048 <log_oom_internal@plt+0x1d88>
    2ec0:	ldr	r2, [sp, #64]	; 0x40
    2ec4:	mov	r1, #0
    2ec8:	str	r0, [sp, #12]
    2ecc:	mov	r0, #7
    2ed0:	bl	123c <log_internal_realm@plt>
    2ed4:	b	28ec <log_oom_internal@plt+0x162c>
    2ed8:	mov	r0, r5
    2edc:	bl	1194 <basename@plt>
    2ee0:	mov	r6, r0
    2ee4:	mov	r0, #7
    2ee8:	bl	1164 <special_glyph@plt>
    2eec:	ldr	r3, [pc, #344]	; 304c <log_oom_internal@plt+0x1d8c>
    2ef0:	ldr	r2, [sp, #88]	; 0x58
    2ef4:	add	r3, pc, r3
    2ef8:	str	r6, [sp, #8]
    2efc:	strd	r2, [sp]
    2f00:	ldr	r2, [pc, #328]	; 3050 <log_oom_internal@plt+0x1d90>
    2f04:	str	r5, [sp, #16]
    2f08:	ldr	r3, [pc, #324]	; 3054 <log_oom_internal@plt+0x1d94>
    2f0c:	add	r2, pc, r2
    2f10:	mov	r1, #0
    2f14:	str	r0, [sp, #12]
    2f18:	mov	r0, #7
    2f1c:	bl	123c <log_internal_realm@plt>
    2f20:	b	2878 <log_oom_internal@plt+0x15b8>
    2f24:	andeq	r1, r1, r0, lsl pc
    2f28:	andeq	r0, r0, ip, lsl r1
    2f2c:	andeq	r1, r0, r0, asr r8
    2f30:	andeq	r1, r0, ip, asr #11
    2f34:	andeq	r0, r0, r8, lsl r1
    2f38:	andeq	r0, r0, r4, lsl r1
    2f3c:	andeq	r1, r0, r0, lsl #9
    2f40:	andeq	r1, r0, ip, ror r4
    2f44:	strdeq	r1, [r0], -r8
    2f48:	andeq	r1, r0, r4, ror r6
    2f4c:	andeq	r1, r1, r8, asr #24
    2f50:			; <UNDEFINED> instruction: 0x000015b0
    2f54:	andeq	r1, r1, r0, lsr #24
    2f58:	andeq	r1, r0, r0, asr #11
    2f5c:	andeq	r1, r1, r4, lsl #23
    2f60:	strdeq	r1, [r0], -ip
    2f64:	andeq	r1, r0, r8, lsr #5
    2f68:	andeq	r1, r0, r0, lsl #5
    2f6c:	andeq	r1, r0, r4, ror #6
    2f70:	andeq	r1, r0, r8, asr r3
    2f74:	andeq	r1, r1, r8, lsr #20
    2f78:	andeq	r1, r0, ip, lsr r2
    2f7c:	andeq	r0, r0, r8, lsr #31
    2f80:	andeq	r1, r0, r0, asr r1
    2f84:	andeq	r0, r0, pc, lsr #2
    2f88:	andeq	r0, r0, r4, ror pc
    2f8c:	andeq	r1, r0, r4, lsr #3
    2f90:	andeq	r1, r0, r4, lsr #2
    2f94:	muleq	r0, r9, r1
    2f98:	andeq	r0, r0, ip, lsr pc
    2f9c:	andeq	r1, r0, r4, ror r1
    2fa0:	andeq	r1, r0, ip, ror #1
    2fa4:	muleq	r0, sl, r1
    2fa8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2fac:	andeq	r0, r0, r0, asr #29
    2fb0:	andeq	r1, r0, r8, asr r0
    2fb4:	andeq	r0, r0, r0, asr #30
    2fb8:	andeq	r0, r0, r4, lsr pc
    2fbc:			; <UNDEFINED> instruction: 0x00000fb8
    2fc0:	andeq	r0, r0, r8, asr ip
    2fc4:			; <UNDEFINED> instruction: 0x00000eb0
    2fc8:	andeq	r0, r0, r8, lsl #28
    2fcc:	muleq	r0, fp, r1
    2fd0:	andeq	r0, r0, r8, lsl ip
    2fd4:	andeq	r0, r0, r4, asr #30
    2fd8:	andeq	r0, r0, r8, asr #27
    2fdc:	andeq	r0, r0, r4, lsl #28
    2fe0:	strdeq	r0, [r0], -ip
    2fe4:	andeq	r0, r0, ip, lsl pc
    2fe8:	andeq	r0, r0, r4, lsr #30
    2fec:	andeq	r1, r1, r0, asr r5
    2ff0:	andeq	r0, r0, ip, lsl #26
    2ff4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2ff8:	andeq	r0, r0, ip, lsr #28
    2ffc:	andeq	r0, r0, r8, lsr lr
    3000:	andeq	r0, r0, ip, lsr #26
    3004:	andeq	r0, r0, r8, lsl #21
    3008:	andeq	r0, r0, r0, lsr ip
    300c:	andeq	r0, r0, r6, lsr r1
    3010:	andeq	r0, r0, ip, ror #23
    3014:	andeq	r0, r0, r0, lsl sp
    3018:	andeq	r0, r0, r4, asr #23
    301c:	andeq	r0, r0, ip, asr #17
    3020:	andeq	r0, r0, r4, ror sl
    3024:	muleq	r0, r0, fp
    3028:	andeq	r0, r0, r4, lsr sl
    302c:	andeq	r0, r0, r4, asr fp
    3030:	ldrdeq	r0, [r0], -ip
    3034:	andeq	r0, r0, r2, lsl r1
    3038:	andeq	r0, r0, r0, ror #19
    303c:	andeq	r0, r0, r0, asr r7
    3040:	strdeq	r0, [r0], -r8
    3044:	strdeq	r0, [r0], -r8
    3048:	andeq	r0, r0, r2, ror #2
    304c:	andeq	r0, r0, r8, asr #19
    3050:	andeq	r0, r0, ip, ror #16
    3054:	andeq	r0, r0, fp, ror #2
    3058:	andeq	r0, r1, r4, lsl #30
    305c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3060:	andeq	r0, r0, r8, lsr #13
    3064:	andeq	r0, r0, r8, lsl #16
    3068:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    306c:	andeq	r0, r1, r8, lsl #29
    3070:	andeq	r0, r0, r8, lsr r1
    3074:	andeq	r0, r0, r7, lsr #4
    3078:			; <UNDEFINED> instruction: 0x000007b4
    307c:	andeq	r0, r0, r8, lsr #7
    3080:	andeq	r0, r0, ip, ror #13
    3084:	andeq	r0, r0, r8, asr r5
    3088:	andeq	r0, r0, r8, lsr r6
    308c:	andeq	r0, r0, r4, ror #6
    3090:	andeq	r0, r0, ip, lsl #10
    3094:	andeq	r0, r0, r8, lsl #13
    3098:	andeq	r0, r0, ip, ror r6
    309c:	andeq	r0, r0, r4, ror #5
    30a0:	muleq	r0, r4, r4
    30a4:	andeq	r0, r0, ip, ror r5
    30a8:	ldrdeq	r0, [r0], -ip
    30ac:			; <UNDEFINED> instruction: 0x000004b4
    30b0:	andeq	r0, r0, r0, lsr r6
    30b4:	strdeq	r0, [r0], -ip
    30b8:	muleq	r1, ip, ip
    30bc:	andeq	r0, r0, r0, lsl #11
    30c0:	andeq	r0, r0, r4, ror r5
    30c4:	andeq	r0, r0, r8, ror #10
    30c8:	andeq	r0, r0, ip, asr r5
    30cc:	andeq	r0, r0, r0, asr #10
    30d0:	andeq	r0, r0, r4, lsr r5
    30d4:	andeq	r0, r0, r8, lsr r5
    30d8:	andeq	r0, r0, r8, lsr #10
    30dc:	andeq	r0, r0, r8, lsr #10
    30e0:	strdeq	r0, [r0], -ip
    30e4:	andeq	r0, r0, r8, lsl r1
    30e8:	andeq	r0, r0, r0, asr #5
    30ec:	ldr	r0, [sp, #136]	; 0x88
    30f0:	bl	ff0 <free@plt>
    30f4:	ldr	r0, [sp, #132]	; 0x84
    30f8:	bl	ff0 <free@plt>
    30fc:	ldr	r3, [pc, #-172]	; 3058 <log_oom_internal@plt+0x1d98>
    3100:	add	r3, pc, r3
    3104:	ldr	r3, [r3]
    3108:	tst	r3, #4
    310c:	beq	25ec <log_oom_internal@plt+0x132c>
    3110:	bl	1278 <colors_enabled@plt>
    3114:	cmp	r0, #0
    3118:	beq	33d4 <log_oom_internal@plt+0x2114>
    311c:	ldr	r4, [pc, #-200]	; 305c <log_oom_internal@plt+0x1d9c>
    3120:	add	r4, pc, r4
    3124:	bl	1278 <colors_enabled@plt>
    3128:	cmp	r0, #0
    312c:	beq	33c8 <log_oom_internal@plt+0x2108>
    3130:	ldr	r6, [pc, #-216]	; 3060 <log_oom_internal@plt+0x1da0>
    3134:	add	r6, pc, r6
    3138:	mov	r0, #7
    313c:	bl	1164 <special_glyph@plt>
    3140:	ldr	r3, [pc, #-228]	; 3064 <log_oom_internal@plt+0x1da4>
    3144:	ldr	r1, [pc, #-228]	; 3068 <log_oom_internal@plt+0x1da8>
    3148:	str	r5, [sp, #12]
    314c:	stm	sp, {r6, r8}
    3150:	mov	r2, r4
    3154:	add	r3, pc, r3
    3158:	add	r1, pc, r1
    315c:	b	2a08 <log_oom_internal@plt+0x1748>
    3160:	ldr	r3, [sp, #80]	; 0x50
    3164:	ldr	r3, [r3]
    3168:	tst	r3, #8
    316c:	bne	3304 <log_oom_internal@plt+0x2044>
    3170:	ldr	r3, [pc, #-268]	; 306c <log_oom_internal@plt+0x1dac>
    3174:	add	r3, pc, r3
    3178:	ldr	r3, [r3]
    317c:	cmp	r3, #0
    3180:	beq	25ec <log_oom_internal@plt+0x132c>
    3184:	ldr	r3, [pc, #-284]	; 3070 <log_oom_internal@plt+0x1db0>
    3188:	ldr	r2, [sp, #76]	; 0x4c
    318c:	mov	r0, #10
    3190:	ldr	r6, [r2, r3]
    3194:	ldr	r1, [r6]
    3198:	bl	1158 <putc@plt>
    319c:	ldr	r0, [r6]
    31a0:	bl	1224 <fflush@plt>
    31a4:	mov	r2, #0
    31a8:	add	r3, sp, #136	; 0x88
    31ac:	str	r3, [sp]
    31b0:	mov	r1, r2
    31b4:	ldr	r3, [pc, #-328]	; 3074 <log_oom_internal@plt+0x1db4>
    31b8:	ldr	r0, [sp, #84]	; 0x54
    31bc:	bl	1104 <safe_fork_full@plt>
    31c0:	subs	r4, r0, #0
    31c4:	blt	33e0 <log_oom_internal@plt+0x2120>
    31c8:	beq	3448 <log_oom_internal@plt+0x2188>
    31cc:	ldr	r0, [pc, #-348]	; 3078 <log_oom_internal@plt+0x1db8>
    31d0:	mov	r2, #1
    31d4:	ldr	r1, [sp, #136]	; 0x88
    31d8:	add	r0, pc, r0
    31dc:	bl	1074 <wait_for_terminate_and_check@plt>
    31e0:	ldr	r1, [r6]
    31e4:	mov	r0, #10
    31e8:	bl	1158 <putc@plt>
    31ec:	ldr	r0, [sp, #128]	; 0x80
    31f0:	bl	ff0 <free@plt>
    31f4:	ldr	r3, [sp, #40]	; 0x28
    31f8:	add	r3, r3, r4
    31fc:	str	r3, [sp, #40]	; 0x28
    3200:	b	2490 <log_oom_internal@plt+0x11d0>
    3204:	ldr	r2, [pc, #-400]	; 307c <log_oom_internal@plt+0x1dbc>
    3208:	ldr	r1, [pc, #-400]	; 3080 <log_oom_internal@plt+0x1dc0>
    320c:	add	r2, pc, r2
    3210:	add	r2, r2, #204	; 0xcc
    3214:	str	r2, [sp]
    3218:	ldr	r2, [pc, #-412]	; 3084 <log_oom_internal@plt+0x1dc4>
    321c:	mov	r3, #150	; 0x96
    3220:	add	r2, pc, r2
    3224:	add	r1, pc, r1
    3228:	bl	1230 <log_assert_failed_realm@plt>
    322c:	mov	r0, r8
    3230:	bl	ff0 <free@plt>
    3234:	mov	r0, r7
    3238:	bl	ff0 <free@plt>
    323c:	b	27f0 <log_oom_internal@plt+0x1530>
    3240:	ldr	r2, [pc, #-448]	; 3088 <log_oom_internal@plt+0x1dc8>
    3244:	ldr	r3, [pc, #-448]	; 308c <log_oom_internal@plt+0x1dcc>
    3248:	add	r2, pc, r2
    324c:	str	r2, [sp, #4]
    3250:	add	r3, pc, r3
    3254:	ldr	r2, [pc, #-460]	; 3090 <log_oom_internal@plt+0x1dd0>
    3258:	add	r3, r3, #188	; 0xbc
    325c:	mov	r1, r4
    3260:	str	r3, [sp]
    3264:	str	r8, [sp, #8]
    3268:	mov	r3, #220	; 0xdc
    326c:	add	r2, pc, r2
    3270:	mov	r0, #3
    3274:	bl	123c <log_internal_realm@plt>
    3278:	mov	r4, r0
    327c:	b	27c8 <log_oom_internal@plt+0x1508>
    3280:	ldr	r4, [pc, #-500]	; 3094 <log_oom_internal@plt+0x1dd4>
    3284:	add	r4, pc, r4
    3288:	b	29e4 <log_oom_internal@plt+0x1724>
    328c:	ldr	r6, [pc, #-508]	; 3098 <log_oom_internal@plt+0x1dd8>
    3290:	add	r6, pc, r6
    3294:	b	29d0 <log_oom_internal@plt+0x1710>
    3298:	ldr	r0, [sp, #148]	; 0x94
    329c:	cmp	r0, #0
    32a0:	beq	322c <log_oom_internal@plt+0x1f6c>
    32a4:	mov	r3, #0
    32a8:	mov	r4, r3
    32ac:	b	27d4 <log_oom_internal@plt+0x1514>
    32b0:	mvn	r3, #11
    32b4:	mov	r4, r3
    32b8:	b	2df0 <log_oom_internal@plt+0x1b30>
    32bc:	ldrd	r8, [sp, #92]	; 0x5c
    32c0:	mvn	sl, #11
    32c4:	b	232c <log_oom_internal@plt+0x106c>
    32c8:	ldr	r3, [pc, #-564]	; 309c <log_oom_internal@plt+0x1ddc>
    32cc:	mov	r0, r2
    32d0:	add	r3, pc, r3
    32d4:	ldr	r2, [pc, #-572]	; 30a0 <log_oom_internal@plt+0x1de0>
    32d8:	ldr	r1, [pc, #-572]	; 30a4 <log_oom_internal@plt+0x1de4>
    32dc:	add	r3, r3, #172	; 0xac
    32e0:	str	r3, [sp]
    32e4:	add	r2, pc, r2
    32e8:	mov	r3, #201	; 0xc9
    32ec:	add	r1, pc, r1
    32f0:	bl	1230 <log_assert_failed_realm@plt>
    32f4:	mov	r0, r5
    32f8:	mov	r4, r3
    32fc:	bl	ff0 <free@plt>
    3300:	b	2df0 <log_oom_internal@plt+0x1b30>
    3304:	bl	1278 <colors_enabled@plt>
    3308:	cmp	r0, #0
    330c:	beq	33ac <log_oom_internal@plt+0x20ec>
    3310:	ldr	r4, [pc, #-624]	; 30a8 <log_oom_internal@plt+0x1de8>
    3314:	add	r4, pc, r4
    3318:	bl	1278 <colors_enabled@plt>
    331c:	cmp	r0, #0
    3320:	beq	33a0 <log_oom_internal@plt+0x20e0>
    3324:	ldr	r6, [pc, #-640]	; 30ac <log_oom_internal@plt+0x1dec>
    3328:	add	r6, pc, r6
    332c:	mov	r0, #7
    3330:	bl	1164 <special_glyph@plt>
    3334:	ldr	r3, [pc, #-652]	; 30b0 <log_oom_internal@plt+0x1df0>
    3338:	ldr	r1, [pc, #-652]	; 30b4 <log_oom_internal@plt+0x1df4>
    333c:	add	r3, pc, r3
    3340:	str	r5, [sp, #12]
    3344:	stm	sp, {r6, r8}
    3348:	mov	r2, r4
    334c:	add	r1, pc, r1
    3350:	str	r0, [sp, #8]
    3354:	mov	r0, #1
    3358:	bl	12a8 <__printf_chk@plt>
    335c:	ldr	r3, [pc, #-684]	; 30b8 <log_oom_internal@plt+0x1df8>
    3360:	add	r3, pc, r3
    3364:	ldr	r3, [r3]
    3368:	cmp	r3, #0
    336c:	bne	3184 <log_oom_internal@plt+0x1ec4>
    3370:	ldr	r3, [sp, #40]	; 0x28
    3374:	ldr	r0, [sp, #128]	; 0x80
    3378:	add	r3, r3, #1
    337c:	str	r3, [sp, #40]	; 0x28
    3380:	bl	ff0 <free@plt>
    3384:	b	2490 <log_oom_internal@plt+0x11d0>
    3388:	ldr	r6, [pc, #-724]	; 30bc <log_oom_internal@plt+0x1dfc>
    338c:	add	r6, pc, r6
    3390:	b	2af0 <log_oom_internal@plt+0x1830>
    3394:	ldr	r4, [pc, #-732]	; 30c0 <log_oom_internal@plt+0x1e00>
    3398:	add	r4, pc, r4
    339c:	b	2adc <log_oom_internal@plt+0x181c>
    33a0:	ldr	r6, [pc, #-740]	; 30c4 <log_oom_internal@plt+0x1e04>
    33a4:	add	r6, pc, r6
    33a8:	b	332c <log_oom_internal@plt+0x206c>
    33ac:	ldr	r4, [pc, #-748]	; 30c8 <log_oom_internal@plt+0x1e08>
    33b0:	add	r4, pc, r4
    33b4:	b	3318 <log_oom_internal@plt+0x2058>
    33b8:	mov	sl, r0
    33bc:	ldr	r8, [sp, #76]	; 0x4c
    33c0:	ldr	r6, [sp, #80]	; 0x50
    33c4:	b	292c <log_oom_internal@plt+0x166c>
    33c8:	ldr	r6, [pc, #-772]	; 30cc <log_oom_internal@plt+0x1e0c>
    33cc:	add	r6, pc, r6
    33d0:	b	3138 <log_oom_internal@plt+0x1e78>
    33d4:	ldr	r4, [pc, #-780]	; 30d0 <log_oom_internal@plt+0x1e10>
    33d8:	add	r4, pc, r4
    33dc:	b	3124 <log_oom_internal@plt+0x1e64>
    33e0:	ldr	r0, [sp, #128]	; 0x80
    33e4:	str	r4, [sp, #36]	; 0x24
    33e8:	bl	ff0 <free@plt>
    33ec:	b	2490 <log_oom_internal@plt+0x11d0>
    33f0:	mvn	r3, #21
    33f4:	mov	r4, r3
    33f8:	b	2df0 <log_oom_internal@plt+0x1b30>
    33fc:	ldr	r4, [sp, #128]	; 0x80
    3400:	cmp	r4, #0
    3404:	bne	2824 <log_oom_internal@plt+0x1564>
    3408:	mov	r0, r3
    340c:	mov	sl, r4
    3410:	b	2334 <log_oom_internal@plt+0x1074>
    3414:	bl	1134 <__stack_chk_fail@plt>
    3418:	ldr	r0, [sp, #132]	; 0x84
    341c:	cmp	r0, #0
    3420:	moveq	sl, r0
    3424:	beq	2354 <log_oom_internal@plt+0x1094>
    3428:	mov	sl, r4
    342c:	b	2334 <log_oom_internal@plt+0x1074>
    3430:	ldr	r0, [sp, #132]	; 0x84
    3434:	cmp	r0, #0
    3438:	moveq	sl, r0
    343c:	beq	2344 <log_oom_internal@plt+0x1084>
    3440:	mov	sl, r2
    3444:	b	2334 <log_oom_internal@plt+0x1074>
    3448:	ldr	r1, [pc, #-892]	; 30d4 <log_oom_internal@plt+0x1e14>
    344c:	ldr	r3, [pc, #-892]	; 30d8 <log_oom_internal@plt+0x1e18>
    3450:	ldr	r2, [pc, #-892]	; 30dc <log_oom_internal@plt+0x1e1c>
    3454:	add	r1, pc, r1
    3458:	mov	r0, r1
    345c:	add	r3, pc, r3
    3460:	add	r2, pc, r2
    3464:	str	r4, [sp, #8]
    3468:	stm	sp, {r5, r8}
    346c:	bl	11b8 <execlp@plt>
    3470:	bl	ffc <log_open@plt>
    3474:	bl	1218 <__errno_location@plt>
    3478:	mov	r6, r4
    347c:	ldr	r4, [r0]
    3480:	mov	r0, r6
    3484:	bl	10c8 <log_get_max_level_realm@plt>
    3488:	cmp	r0, #2
    348c:	ble	34c4 <log_oom_internal@plt+0x2204>
    3490:	ldr	r2, [pc, #-952]	; 30e0 <log_oom_internal@plt+0x1e20>
    3494:	ldr	r3, [pc, #-952]	; 30e4 <log_oom_internal@plt+0x1e24>
    3498:	add	r2, pc, r2
    349c:	add	r3, pc, r3
    34a0:	str	r2, [sp, #4]
    34a4:	ldr	r2, [pc, #-964]	; 30e8 <log_oom_internal@plt+0x1e28>
    34a8:	add	r3, r3, #220	; 0xdc
    34ac:	str	r3, [sp]
    34b0:	mov	r1, r4
    34b4:	mov	r3, #178	; 0xb2
    34b8:	add	r2, pc, r2
    34bc:	mov	r0, #3
    34c0:	bl	123c <log_internal_realm@plt>
    34c4:	mov	r0, #1
    34c8:	bl	1200 <_exit@plt>
    34cc:	mov	sl, r4
    34d0:	ldr	r8, [sp, #100]	; 0x64
    34d4:	ldr	r6, [sp, #104]	; 0x68
    34d8:	ldr	r9, [sp, #108]	; 0x6c
    34dc:	ldr	r0, [sp, #132]	; 0x84
    34e0:	b	232c <log_oom_internal@plt+0x106c>
    34e4:	push	{r4, r5, r6, lr}
    34e8:	mov	r6, r0
    34ec:	ldr	r4, [pc, #88]	; 354c <log_oom_internal@plt+0x228c>
    34f0:	mov	r5, #0
    34f4:	add	r4, pc, r4
    34f8:	add	r4, r4, #236	; 0xec
    34fc:	b	350c <log_oom_internal@plt+0x224c>
    3500:	ldrb	r3, [r4]
    3504:	cmp	r3, #0
    3508:	beq	3538 <log_oom_internal@plt+0x2278>
    350c:	mov	r1, r6
    3510:	mov	r0, r4
    3514:	bl	1f84 <log_oom_internal@plt+0xcc4>
    3518:	subs	r3, r0, #0
    351c:	add	r5, r5, r3
    3520:	mov	r0, r4
    3524:	blt	3540 <log_oom_internal@plt+0x2280>
    3528:	bl	11dc <strlen@plt>
    352c:	add	r0, r0, #1
    3530:	adds	r4, r4, r0
    3534:	bne	3500 <log_oom_internal@plt+0x2240>
    3538:	mov	r0, r5
    353c:	pop	{r4, r5, r6, pc}
    3540:	mov	r5, r3
    3544:	mov	r0, r5
    3548:	pop	{r4, r5, r6, pc}
    354c:	andeq	r0, r0, r0, asr #1
    3550:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3554:	mov	r7, r0
    3558:	ldr	r6, [pc, #72]	; 35a8 <log_oom_internal@plt+0x22e8>
    355c:	ldr	r5, [pc, #72]	; 35ac <log_oom_internal@plt+0x22ec>
    3560:	add	r6, pc, r6
    3564:	add	r5, pc, r5
    3568:	sub	r6, r6, r5
    356c:	mov	r8, r1
    3570:	mov	r9, r2
    3574:	bl	f94 <path_is_absolute@plt-0x20>
    3578:	asrs	r6, r6, #2
    357c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    3580:	mov	r4, #0
    3584:	add	r4, r4, #1
    3588:	ldr	r3, [r5], #4
    358c:	mov	r2, r9
    3590:	mov	r1, r8
    3594:	mov	r0, r7
    3598:	blx	r3
    359c:	cmp	r6, r4
    35a0:	bne	3584 <log_oom_internal@plt+0x22c4>
    35a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    35a8:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    35ac:	andeq	r0, r1, r8, asr #15
    35b0:	bx	lr

Disassembly of section .fini:

000035b4 <.fini>:
    35b4:	push	{r3, lr}
    35b8:	pop	{r3, pc}
