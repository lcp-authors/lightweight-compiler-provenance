
raspbian-preinstalled/lsattr:     file format elf32-littlearm


Disassembly of section .init:

00010884 <.init>:
   10884:	push	{r3, lr}
   10888:	bl	10ca4 <set_com_err_gettext@plt+0x2a4>
   1088c:	pop	{r3, pc}

Disassembly of section .plt:

00010890 <strcmp@plt-0x14>:
   10890:	push	{lr}		; (str lr, [sp, #-4]!)
   10894:	ldr	lr, [pc, #4]	; 108a0 <strcmp@plt-0x4>
   10898:	add	lr, pc, lr
   1089c:	ldr	pc, [lr, #8]!
   108a0:	ldrdeq	r1, [r1], -r4

000108a4 <strcmp@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1748]!	; 0x6d4

000108b0 <free@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1740]!	; 0x6cc

000108bc <fgetversion@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1732]!	; 0x6c4

000108c8 <fgetproject@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1724]!	; 0x6bc

000108d4 <fgetflags@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1716]!	; 0x6b4

000108e0 <dcgettext@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1708]!	; 0x6ac

000108ec <__stack_chk_fail@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1700]!	; 0x6a4

000108f8 <textdomain@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1692]!	; 0x69c

00010904 <com_err@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1684]!	; 0x694

00010910 <perror@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1676]!	; 0x68c

0001091c <malloc@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1668]!	; 0x684

00010928 <__libc_start_main@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1660]!	; 0x67c

00010934 <__gmon_start__@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #69632	; 0x11000
   1093c:	ldr	pc, [ip, #1652]!	; 0x674

00010940 <print_flags@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #69632	; 0x11000
   10948:	ldr	pc, [ip, #1644]!	; 0x66c

0001094c <exit@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #69632	; 0x11000
   10954:	ldr	pc, [ip, #1636]!	; 0x664

00010958 <gettext@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #69632	; 0x11000
   10960:	ldr	pc, [ip, #1628]!	; 0x65c

00010964 <strlen@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #69632	; 0x11000
   1096c:	ldr	pc, [ip, #1620]!	; 0x654

00010970 <getopt@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #69632	; 0x11000
   10978:	ldr	pc, [ip, #1612]!	; 0x64c

0001097c <__errno_location@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #69632	; 0x11000
   10984:	ldr	pc, [ip, #1604]!	; 0x644

00010988 <__sprintf_chk@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #69632	; 0x11000
   10990:	ldr	pc, [ip, #1596]!	; 0x63c

00010994 <putchar@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #69632	; 0x11000
   1099c:	ldr	pc, [ip, #1588]!	; 0x634

000109a0 <__printf_chk@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #69632	; 0x11000
   109a8:	ldr	pc, [ip, #1580]!	; 0x62c

000109ac <__fprintf_chk@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #69632	; 0x11000
   109b4:	ldr	pc, [ip, #1572]!	; 0x624

000109b8 <setlocale@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #69632	; 0x11000
   109c0:	ldr	pc, [ip, #1564]!	; 0x61c

000109c4 <iterate_on_dir@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #69632	; 0x11000
   109cc:	ldr	pc, [ip, #1556]!	; 0x614

000109d0 <fputc@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #69632	; 0x11000
   109d8:	ldr	pc, [ip, #1548]!	; 0x60c

000109dc <bindtextdomain@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #69632	; 0x11000
   109e4:	ldr	pc, [ip, #1540]!	; 0x604

000109e8 <abort@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #69632	; 0x11000
   109f0:	ldr	pc, [ip, #1532]!	; 0x5fc

000109f4 <__lxstat64@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #69632	; 0x11000
   109fc:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a00 <set_com_err_gettext@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #69632	; 0x11000
   10a08:	ldr	pc, [ip, #1516]!	; 0x5ec

Disassembly of section .text:

00010a0c <.text>:
   10a0c:	push	{r4, r5, r6, r7, r8, lr}
   10a10:	mov	r5, r0
   10a14:	sub	sp, sp, #8
   10a18:	mov	r4, r1
   10a1c:	mov	r0, #5
   10a20:	ldr	r1, [pc, #520]	; 10c30 <set_com_err_gettext@plt+0x230>
   10a24:	bl	109b8 <setlocale@plt>
   10a28:	ldr	r1, [pc, #512]	; 10c30 <set_com_err_gettext@plt+0x230>
   10a2c:	mov	r0, #0
   10a30:	bl	109b8 <setlocale@plt>
   10a34:	ldr	r1, [pc, #504]	; 10c34 <set_com_err_gettext@plt+0x234>
   10a38:	ldr	r0, [pc, #504]	; 10c38 <set_com_err_gettext@plt+0x238>
   10a3c:	bl	109dc <bindtextdomain@plt>
   10a40:	ldr	r0, [pc, #496]	; 10c38 <set_com_err_gettext@plt+0x238>
   10a44:	bl	108f8 <textdomain@plt>
   10a48:	ldr	r0, [pc, #492]	; 10c3c <set_com_err_gettext@plt+0x23c>
   10a4c:	bl	10a00 <set_com_err_gettext@plt>
   10a50:	cmp	r5, #0
   10a54:	beq	10a68 <set_com_err_gettext@plt+0x68>
   10a58:	ldr	r3, [r4]
   10a5c:	cmp	r3, #0
   10a60:	ldrne	r2, [pc, #472]	; 10c40 <set_com_err_gettext@plt+0x240>
   10a64:	strne	r3, [r2]
   10a68:	ldr	r6, [pc, #468]	; 10c44 <set_com_err_gettext@plt+0x244>
   10a6c:	ldr	r8, [pc, #468]	; 10c48 <set_com_err_gettext@plt+0x248>
   10a70:	mov	r7, #1
   10a74:	mov	r2, r6
   10a78:	mov	r1, r4
   10a7c:	mov	r0, r5
   10a80:	bl	10970 <getopt@plt>
   10a84:	cmn	r0, #1
   10a88:	beq	10ba0 <set_com_err_gettext@plt+0x1a0>
   10a8c:	sub	r0, r0, #82	; 0x52
   10a90:	cmp	r0, #36	; 0x24
   10a94:	ldrls	pc, [pc, r0, lsl #2]
   10a98:	b	10b68 <set_com_err_gettext@plt+0x168>
   10a9c:	andeq	r0, r1, r0, ror #22
   10aa0:	andeq	r0, r1, r8, ror #22
   10aa4:	andeq	r0, r1, r8, ror #22
   10aa8:	andeq	r0, r1, r8, ror #22
   10aac:	andeq	r0, r1, r8, asr fp
   10ab0:	andeq	r0, r1, r8, ror #22
   10ab4:	andeq	r0, r1, r8, ror #22
   10ab8:	andeq	r0, r1, r8, ror #22
   10abc:	andeq	r0, r1, r8, ror #22
   10ac0:	andeq	r0, r1, r8, ror #22
   10ac4:	andeq	r0, r1, r8, ror #22
   10ac8:	andeq	r0, r1, r8, ror #22
   10acc:	andeq	r0, r1, r8, ror #22
   10ad0:	andeq	r0, r1, r8, ror #22
   10ad4:	andeq	r0, r1, r8, ror #22
   10ad8:	andeq	r0, r1, r0, asr fp
   10adc:	andeq	r0, r1, r8, ror #22
   10ae0:	andeq	r0, r1, r8, ror #22
   10ae4:	andeq	r0, r1, r8, asr #22
   10ae8:	andeq	r0, r1, r8, ror #22
   10aec:	andeq	r0, r1, r8, ror #22
   10af0:	andeq	r0, r1, r8, ror #22
   10af4:	andeq	r0, r1, r8, ror #22
   10af8:	andeq	r0, r1, r8, ror #22
   10afc:	andeq	r0, r1, r8, ror #22
   10b00:	andeq	r0, r1, r8, ror #22
   10b04:	andeq	r0, r1, r0, asr #22
   10b08:	andeq	r0, r1, r8, ror #22
   10b0c:	andeq	r0, r1, r8, ror #22
   10b10:	andeq	r0, r1, r8, ror #22
   10b14:	andeq	r0, r1, r8, lsr fp
   10b18:	andeq	r0, r1, r8, ror #22
   10b1c:	andeq	r0, r1, r8, ror #22
   10b20:	andeq	r0, r1, r8, ror #22
   10b24:	andeq	r0, r1, r8, ror #22
   10b28:	andeq	r0, r1, r8, ror #22
   10b2c:	andeq	r0, r1, r0, lsr fp
   10b30:	str	r7, [r8, #4]
   10b34:	b	10a74 <set_com_err_gettext@plt+0x74>
   10b38:	str	r7, [r8]
   10b3c:	b	10a74 <set_com_err_gettext@plt+0x74>
   10b40:	str	r7, [r8, #8]
   10b44:	b	10a74 <set_com_err_gettext@plt+0x74>
   10b48:	str	r7, [r8, #20]
   10b4c:	b	10a74 <set_com_err_gettext@plt+0x74>
   10b50:	str	r7, [r8, #12]
   10b54:	b	10a74 <set_com_err_gettext@plt+0x74>
   10b58:	str	r7, [r8, #24]
   10b5c:	b	10a74 <set_com_err_gettext@plt+0x74>
   10b60:	str	r7, [r8, #16]
   10b64:	b	10a74 <set_com_err_gettext@plt+0x74>
   10b68:	ldr	r3, [pc, #220]	; 10c4c <set_com_err_gettext@plt+0x24c>
   10b6c:	mov	r2, #5
   10b70:	ldr	r1, [pc, #216]	; 10c50 <set_com_err_gettext@plt+0x250>
   10b74:	mov	r0, #0
   10b78:	ldr	r4, [r3]
   10b7c:	bl	108e0 <dcgettext@plt>
   10b80:	ldr	r3, [pc, #184]	; 10c40 <set_com_err_gettext@plt+0x240>
   10b84:	mov	r1, #1
   10b88:	ldr	r3, [r3]
   10b8c:	mov	r2, r0
   10b90:	mov	r0, r4
   10b94:	bl	109ac <__fprintf_chk@plt>
   10b98:	mov	r0, #1
   10b9c:	bl	1094c <exit@plt>
   10ba0:	ldr	r3, [pc, #160]	; 10c48 <set_com_err_gettext@plt+0x248>
   10ba4:	ldr	r3, [r3, #24]
   10ba8:	cmp	r3, #0
   10bac:	bne	10bf4 <set_com_err_gettext@plt+0x1f4>
   10bb0:	ldr	r3, [pc, #156]	; 10c54 <set_com_err_gettext@plt+0x254>
   10bb4:	ldr	r3, [r3]
   10bb8:	cmp	r3, r5
   10bbc:	bge	10c18 <set_com_err_gettext@plt+0x218>
   10bc0:	sub	r2, r3, #-1073741823	; 0xc0000001
   10bc4:	sub	r3, r4, #4
   10bc8:	add	r5, r3, r5, lsl #2
   10bcc:	add	r4, r4, r2, lsl #2
   10bd0:	mov	r6, #0
   10bd4:	ldr	r0, [r4, #4]!
   10bd8:	bl	110ac <set_com_err_gettext@plt+0x6ac>
   10bdc:	cmp	r0, #0
   10be0:	movne	r6, #1
   10be4:	cmp	r5, r4
   10be8:	bne	10bd4 <set_com_err_gettext@plt+0x1d4>
   10bec:	mov	r0, r6
   10bf0:	bl	1094c <exit@plt>
   10bf4:	ldr	r1, [pc, #80]	; 10c4c <set_com_err_gettext@plt+0x24c>
   10bf8:	ldr	r2, [pc, #88]	; 10c58 <set_com_err_gettext@plt+0x258>
   10bfc:	ldr	r3, [pc, #88]	; 10c5c <set_com_err_gettext@plt+0x25c>
   10c00:	ldr	r0, [r1]
   10c04:	str	r2, [sp]
   10c08:	mov	r1, #1
   10c0c:	ldr	r2, [pc, #76]	; 10c60 <set_com_err_gettext@plt+0x260>
   10c10:	bl	109ac <__fprintf_chk@plt>
   10c14:	b	10bb0 <set_com_err_gettext@plt+0x1b0>
   10c18:	ldr	r0, [pc, #68]	; 10c64 <set_com_err_gettext@plt+0x264>
   10c1c:	bl	110ac <set_com_err_gettext@plt+0x6ac>
   10c20:	cmn	r0, #1
   10c24:	movne	r6, #0
   10c28:	moveq	r6, #1
   10c2c:	b	10bec <set_com_err_gettext@plt+0x1ec>
   10c30:	andeq	r1, r1, r4, ror #5
   10c34:	andeq	r1, r1, r4, lsr #5
   10c38:			; <UNDEFINED> instruction: 0x000112b8
   10c3c:	andeq	r0, r1, r8, asr r9
   10c40:	andeq	r2, r2, r8
   10c44:	andeq	r1, r1, r8, ror #5
   10c48:	andeq	r2, r2, r4, lsr #32
   10c4c:	andeq	r2, r2, r8, lsl r0
   10c50:	andeq	r1, r1, r4, asr #5
   10c54:	andeq	r2, r2, r0, lsl r0
   10c58:	andeq	r1, r1, r8, lsl #6
   10c5c:	strdeq	r1, [r1], -r0
   10c60:	strdeq	r1, [r1], -r8
   10c64:	andeq	r1, r1, ip, ror r2
   10c68:	mov	fp, #0
   10c6c:	mov	lr, #0
   10c70:	pop	{r1}		; (ldr r1, [sp], #4)
   10c74:	mov	r2, sp
   10c78:	push	{r2}		; (str r2, [sp, #-4]!)
   10c7c:	push	{r0}		; (str r0, [sp, #-4]!)
   10c80:	ldr	ip, [pc, #16]	; 10c98 <set_com_err_gettext@plt+0x298>
   10c84:	push	{ip}		; (str ip, [sp, #-4]!)
   10c88:	ldr	r0, [pc, #12]	; 10c9c <set_com_err_gettext@plt+0x29c>
   10c8c:	ldr	r3, [pc, #12]	; 10ca0 <set_com_err_gettext@plt+0x2a0>
   10c90:	bl	10928 <__libc_start_main@plt>
   10c94:	bl	109e8 <abort@plt>
   10c98:	andeq	r1, r1, r8, ror #3
   10c9c:	andeq	r0, r1, ip, lsl #20
   10ca0:	andeq	r1, r1, r8, lsl #3
   10ca4:	ldr	r3, [pc, #20]	; 10cc0 <set_com_err_gettext@plt+0x2c0>
   10ca8:	ldr	r2, [pc, #20]	; 10cc4 <set_com_err_gettext@plt+0x2c4>
   10cac:	add	r3, pc, r3
   10cb0:	ldr	r2, [r3, r2]
   10cb4:	cmp	r2, #0
   10cb8:	bxeq	lr
   10cbc:	b	10934 <__gmon_start__@plt>
   10cc0:	andeq	r1, r1, r0, asr #5
   10cc4:	andeq	r0, r0, r4, lsl #1
   10cc8:	ldr	r0, [pc, #24]	; 10ce8 <set_com_err_gettext@plt+0x2e8>
   10ccc:	ldr	r3, [pc, #24]	; 10cec <set_com_err_gettext@plt+0x2ec>
   10cd0:	cmp	r3, r0
   10cd4:	bxeq	lr
   10cd8:	ldr	r3, [pc, #16]	; 10cf0 <set_com_err_gettext@plt+0x2f0>
   10cdc:	cmp	r3, #0
   10ce0:	bxeq	lr
   10ce4:	bx	r3
   10ce8:	andeq	r2, r2, ip
   10cec:	andeq	r2, r2, ip
   10cf0:	andeq	r0, r0, r0
   10cf4:	ldr	r0, [pc, #36]	; 10d20 <set_com_err_gettext@plt+0x320>
   10cf8:	ldr	r1, [pc, #36]	; 10d24 <set_com_err_gettext@plt+0x324>
   10cfc:	sub	r1, r1, r0
   10d00:	asr	r1, r1, #2
   10d04:	add	r1, r1, r1, lsr #31
   10d08:	asrs	r1, r1, #1
   10d0c:	bxeq	lr
   10d10:	ldr	r3, [pc, #16]	; 10d28 <set_com_err_gettext@plt+0x328>
   10d14:	cmp	r3, #0
   10d18:	bxeq	lr
   10d1c:	bx	r3
   10d20:	andeq	r2, r2, ip
   10d24:	andeq	r2, r2, ip
   10d28:	andeq	r0, r0, r0
   10d2c:	push	{r4, lr}
   10d30:	ldr	r4, [pc, #24]	; 10d50 <set_com_err_gettext@plt+0x350>
   10d34:	ldrb	r3, [r4]
   10d38:	cmp	r3, #0
   10d3c:	popne	{r4, pc}
   10d40:	bl	10cc8 <set_com_err_gettext@plt+0x2c8>
   10d44:	mov	r3, #1
   10d48:	strb	r3, [r4]
   10d4c:	pop	{r4, pc}
   10d50:	andeq	r2, r2, r0, lsr #32
   10d54:	b	10cf4 <set_com_err_gettext@plt+0x2f4>
   10d58:	push	{r4, r5, r6, r7, r8, lr}
   10d5c:	sub	sp, sp, #16
   10d60:	ldr	r6, [pc, #388]	; 10eec <set_com_err_gettext@plt+0x4ec>
   10d64:	mov	r1, sp
   10d68:	mov	r7, r0
   10d6c:	ldr	r3, [r6]
   10d70:	str	r3, [sp, #12]
   10d74:	bl	108d4 <fgetflags@plt>
   10d78:	cmn	r0, #1
   10d7c:	beq	10e7c <set_com_err_gettext@plt+0x47c>
   10d80:	ldr	r5, [pc, #360]	; 10ef0 <set_com_err_gettext@plt+0x4f0>
   10d84:	ldr	r3, [r5]
   10d88:	cmp	r3, #0
   10d8c:	bne	10e1c <set_com_err_gettext@plt+0x41c>
   10d90:	ldr	r3, [r5, #4]
   10d94:	cmp	r3, #0
   10d98:	bne	10e50 <set_com_err_gettext@plt+0x450>
   10d9c:	ldr	r2, [r5, #8]
   10da0:	ands	r4, r2, #1
   10da4:	bne	10de4 <set_com_err_gettext@plt+0x3e4>
   10da8:	ldr	r3, [pc, #324]	; 10ef4 <set_com_err_gettext@plt+0x4f4>
   10dac:	ldr	r1, [sp]
   10db0:	ldr	r0, [r3]
   10db4:	bl	10940 <print_flags@plt>
   10db8:	mov	r2, r7
   10dbc:	ldr	r1, [pc, #308]	; 10ef8 <set_com_err_gettext@plt+0x4f8>
   10dc0:	mov	r0, #1
   10dc4:	bl	109a0 <__printf_chk@plt>
   10dc8:	ldr	r2, [sp, #12]
   10dcc:	ldr	r3, [r6]
   10dd0:	mov	r0, r4
   10dd4:	cmp	r2, r3
   10dd8:	bne	10ee8 <set_com_err_gettext@plt+0x4e8>
   10ddc:	add	sp, sp, #16
   10de0:	pop	{r4, r5, r6, r7, r8, pc}
   10de4:	ldr	r4, [pc, #264]	; 10ef4 <set_com_err_gettext@plt+0x4f4>
   10de8:	mov	r2, r7
   10dec:	ldr	r1, [pc, #264]	; 10efc <set_com_err_gettext@plt+0x4fc>
   10df0:	mov	r0, #1
   10df4:	bl	109a0 <__printf_chk@plt>
   10df8:	ldr	r0, [r4]
   10dfc:	ldr	r2, [r5, #8]
   10e00:	ldr	r1, [sp]
   10e04:	bl	10940 <print_flags@plt>
   10e08:	ldr	r1, [r4]
   10e0c:	mov	r0, #10
   10e10:	bl	109d0 <fputc@plt>
   10e14:	mov	r4, #0
   10e18:	b	10dc8 <set_com_err_gettext@plt+0x3c8>
   10e1c:	add	r1, sp, #8
   10e20:	mov	r0, r7
   10e24:	bl	108c8 <fgetproject@plt>
   10e28:	cmn	r0, #1
   10e2c:	mov	r4, r0
   10e30:	beq	10eb8 <set_com_err_gettext@plt+0x4b8>
   10e34:	ldr	r2, [sp, #8]
   10e38:	ldr	r1, [pc, #192]	; 10f00 <set_com_err_gettext@plt+0x500>
   10e3c:	mov	r0, #1
   10e40:	bl	109a0 <__printf_chk@plt>
   10e44:	ldr	r3, [r5, #4]
   10e48:	cmp	r3, #0
   10e4c:	beq	10d9c <set_com_err_gettext@plt+0x39c>
   10e50:	add	r1, sp, #4
   10e54:	mov	r0, r7
   10e58:	bl	108bc <fgetversion@plt>
   10e5c:	cmn	r0, #1
   10e60:	mov	r4, r0
   10e64:	beq	10ed0 <set_com_err_gettext@plt+0x4d0>
   10e68:	ldr	r2, [sp, #4]
   10e6c:	ldr	r1, [pc, #144]	; 10f04 <set_com_err_gettext@plt+0x504>
   10e70:	mov	r0, #1
   10e74:	bl	109a0 <__printf_chk@plt>
   10e78:	b	10d9c <set_com_err_gettext@plt+0x39c>
   10e7c:	ldr	r3, [pc, #132]	; 10f08 <set_com_err_gettext@plt+0x508>
   10e80:	mov	r4, r0
   10e84:	ldr	r5, [r3]
   10e88:	bl	1097c <__errno_location@plt>
   10e8c:	ldr	r1, [pc, #120]	; 10f0c <set_com_err_gettext@plt+0x50c>
   10e90:	mov	r2, #5
   10e94:	ldr	r8, [r0]
   10e98:	mov	r0, #0
   10e9c:	bl	108e0 <dcgettext@plt>
   10ea0:	mov	r3, r7
   10ea4:	mov	r1, r8
   10ea8:	mov	r2, r0
   10eac:	mov	r0, r5
   10eb0:	bl	10904 <com_err@plt>
   10eb4:	b	10dc8 <set_com_err_gettext@plt+0x3c8>
   10eb8:	ldr	r3, [pc, #72]	; 10f08 <set_com_err_gettext@plt+0x508>
   10ebc:	ldr	r5, [r3]
   10ec0:	bl	1097c <__errno_location@plt>
   10ec4:	mov	r2, #5
   10ec8:	ldr	r1, [pc, #64]	; 10f10 <set_com_err_gettext@plt+0x510>
   10ecc:	b	10e94 <set_com_err_gettext@plt+0x494>
   10ed0:	ldr	r3, [pc, #48]	; 10f08 <set_com_err_gettext@plt+0x508>
   10ed4:	ldr	r5, [r3]
   10ed8:	bl	1097c <__errno_location@plt>
   10edc:	mov	r2, #5
   10ee0:	ldr	r1, [pc, #44]	; 10f14 <set_com_err_gettext@plt+0x514>
   10ee4:	b	10e94 <set_com_err_gettext@plt+0x494>
   10ee8:	bl	108ec <__stack_chk_fail@plt>
   10eec:	andeq	r1, r2, r8, asr lr
   10ef0:	andeq	r2, r2, r4, lsr #32
   10ef4:	andeq	r2, r2, ip, lsl r0
   10ef8:	andeq	r1, r1, r4, ror #4
   10efc:	andeq	r1, r1, ip, asr r2
   10f00:	andeq	r1, r1, r0, lsr r2
   10f04:	andeq	r1, r1, r4, asr r2
   10f08:	andeq	r2, r2, r8
   10f0c:	strdeq	r1, [r1], -r8
   10f10:	andeq	r1, r1, r4, lsl r2
   10f14:	andeq	r1, r1, r8, lsr r2
   10f18:	push	{r4, r5, r6, r7, r8, r9, lr}
   10f1c:	sub	sp, sp, #124	; 0x7c
   10f20:	ldr	r7, [pc, #356]	; 1108c <set_com_err_gettext@plt+0x68c>
   10f24:	add	r6, r1, #11
   10f28:	mov	r8, r1
   10f2c:	ldr	r3, [r7]
   10f30:	mov	r9, r0
   10f34:	str	r3, [sp, #116]	; 0x74
   10f38:	bl	10964 <strlen@plt>
   10f3c:	mov	r4, r0
   10f40:	mov	r0, r6
   10f44:	bl	10964 <strlen@plt>
   10f48:	add	r0, r4, r0
   10f4c:	add	r0, r0, #2
   10f50:	bl	1091c <malloc@plt>
   10f54:	cmp	r4, #0
   10f58:	mov	r5, r0
   10f5c:	beq	10f70 <set_com_err_gettext@plt+0x570>
   10f60:	add	r4, r9, r4
   10f64:	ldrb	r3, [r4, #-1]
   10f68:	cmp	r3, #47	; 0x2f
   10f6c:	beq	1106c <set_com_err_gettext@plt+0x66c>
   10f70:	str	r6, [sp, #4]
   10f74:	str	r9, [sp]
   10f78:	ldr	r3, [pc, #272]	; 11090 <set_com_err_gettext@plt+0x690>
   10f7c:	mvn	r2, #0
   10f80:	mov	r1, #1
   10f84:	mov	r0, r5
   10f88:	bl	10988 <__sprintf_chk@plt>
   10f8c:	add	r2, sp, #8
   10f90:	mov	r1, r5
   10f94:	mov	r0, #3
   10f98:	bl	109f4 <__lxstat64@plt>
   10f9c:	cmn	r0, #1
   10fa0:	beq	11060 <set_com_err_gettext@plt+0x660>
   10fa4:	ldrb	r3, [r8, #11]
   10fa8:	cmp	r3, #46	; 0x2e
   10fac:	bne	10fe4 <set_com_err_gettext@plt+0x5e4>
   10fb0:	ldr	r3, [pc, #220]	; 11094 <set_com_err_gettext@plt+0x694>
   10fb4:	ldr	r3, [r3, #12]
   10fb8:	cmp	r3, #0
   10fbc:	bne	10fe4 <set_com_err_gettext@plt+0x5e4>
   10fc0:	mov	r0, r5
   10fc4:	bl	108b0 <free@plt>
   10fc8:	ldr	r2, [sp, #116]	; 0x74
   10fcc:	ldr	r3, [r7]
   10fd0:	mov	r0, #0
   10fd4:	cmp	r2, r3
   10fd8:	bne	11088 <set_com_err_gettext@plt+0x688>
   10fdc:	add	sp, sp, #124	; 0x7c
   10fe0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10fe4:	mov	r0, r5
   10fe8:	bl	10d58 <set_com_err_gettext@plt+0x358>
   10fec:	ldr	r3, [sp, #24]
   10ff0:	and	r3, r3, #61440	; 0xf000
   10ff4:	cmp	r3, #16384	; 0x4000
   10ff8:	bne	10fc0 <set_com_err_gettext@plt+0x5c0>
   10ffc:	ldr	r3, [pc, #144]	; 11094 <set_com_err_gettext@plt+0x694>
   11000:	ldr	r3, [r3, #16]
   11004:	cmp	r3, #0
   11008:	beq	10fc0 <set_com_err_gettext@plt+0x5c0>
   1100c:	ldr	r1, [pc, #132]	; 11098 <set_com_err_gettext@plt+0x698>
   11010:	mov	r0, r6
   11014:	bl	108a4 <strcmp@plt>
   11018:	cmp	r0, #0
   1101c:	beq	10fc0 <set_com_err_gettext@plt+0x5c0>
   11020:	mov	r0, r6
   11024:	ldr	r1, [pc, #112]	; 1109c <set_com_err_gettext@plt+0x69c>
   11028:	bl	108a4 <strcmp@plt>
   1102c:	cmp	r0, #0
   11030:	beq	10fc0 <set_com_err_gettext@plt+0x5c0>
   11034:	mov	r2, r5
   11038:	ldr	r1, [pc, #96]	; 110a0 <set_com_err_gettext@plt+0x6a0>
   1103c:	mov	r0, #1
   11040:	bl	109a0 <__printf_chk@plt>
   11044:	mov	r2, #0
   11048:	ldr	r1, [pc, #84]	; 110a4 <set_com_err_gettext@plt+0x6a4>
   1104c:	mov	r0, r5
   11050:	bl	109c4 <iterate_on_dir@plt>
   11054:	mov	r0, #10
   11058:	bl	10994 <putchar@plt>
   1105c:	b	10fc0 <set_com_err_gettext@plt+0x5c0>
   11060:	mov	r0, r5
   11064:	bl	10910 <perror@plt>
   11068:	b	10fc0 <set_com_err_gettext@plt+0x5c0>
   1106c:	str	r6, [sp, #4]
   11070:	str	r9, [sp]
   11074:	ldr	r3, [pc, #44]	; 110a8 <set_com_err_gettext@plt+0x6a8>
   11078:	mvn	r2, #0
   1107c:	mov	r1, #1
   11080:	bl	10988 <__sprintf_chk@plt>
   11084:	b	10f8c <set_com_err_gettext@plt+0x58c>
   11088:	bl	108ec <__stack_chk_fail@plt>
   1108c:	andeq	r1, r2, r8, asr lr
   11090:	andeq	r1, r1, r4, ror r2
   11094:	andeq	r2, r2, r4, lsr #32
   11098:	andeq	r1, r1, ip, ror r2
   1109c:	andeq	r1, r1, r0, lsl #5
   110a0:	andeq	r1, r1, r4, lsl #5
   110a4:	andeq	r0, r1, r8, lsl pc
   110a8:	andeq	r1, r1, ip, ror #4
   110ac:	push	{r4, r5, r6, r7, r8, lr}
   110b0:	sub	sp, sp, #112	; 0x70
   110b4:	ldr	r5, [pc, #184]	; 11174 <set_com_err_gettext@plt+0x774>
   110b8:	mov	r1, r0
   110bc:	mov	r6, r0
   110c0:	ldr	r3, [r5]
   110c4:	mov	r2, sp
   110c8:	mov	r0, #3
   110cc:	str	r3, [sp, #108]	; 0x6c
   110d0:	bl	109f4 <__lxstat64@plt>
   110d4:	cmn	r0, #1
   110d8:	beq	11134 <set_com_err_gettext@plt+0x734>
   110dc:	ldr	r2, [sp, #16]
   110e0:	mov	r0, r6
   110e4:	and	r2, r2, #61440	; 0xf000
   110e8:	cmp	r2, #16384	; 0x4000
   110ec:	bne	11100 <set_com_err_gettext@plt+0x700>
   110f0:	ldr	r3, [pc, #128]	; 11178 <set_com_err_gettext@plt+0x778>
   110f4:	ldr	r2, [r3, #20]
   110f8:	cmp	r2, #0
   110fc:	beq	11124 <set_com_err_gettext@plt+0x724>
   11100:	bl	10d58 <set_com_err_gettext@plt+0x358>
   11104:	mov	r4, r0
   11108:	ldr	r2, [sp, #108]	; 0x6c
   1110c:	ldr	r3, [r5]
   11110:	mov	r0, r4
   11114:	cmp	r2, r3
   11118:	bne	11170 <set_com_err_gettext@plt+0x770>
   1111c:	add	sp, sp, #112	; 0x70
   11120:	pop	{r4, r5, r6, r7, r8, pc}
   11124:	ldr	r1, [pc, #80]	; 1117c <set_com_err_gettext@plt+0x77c>
   11128:	bl	109c4 <iterate_on_dir@plt>
   1112c:	mov	r4, r0
   11130:	b	11108 <set_com_err_gettext@plt+0x708>
   11134:	ldr	r3, [pc, #68]	; 11180 <set_com_err_gettext@plt+0x780>
   11138:	mov	r4, r0
   1113c:	ldr	r7, [r3]
   11140:	bl	1097c <__errno_location@plt>
   11144:	mov	r2, #5
   11148:	ldr	r1, [pc, #52]	; 11184 <set_com_err_gettext@plt+0x784>
   1114c:	ldr	r8, [r0]
   11150:	mov	r0, #0
   11154:	bl	108e0 <dcgettext@plt>
   11158:	mov	r3, r6
   1115c:	mov	r1, r8
   11160:	mov	r2, r0
   11164:	mov	r0, r7
   11168:	bl	10904 <com_err@plt>
   1116c:	b	11108 <set_com_err_gettext@plt+0x708>
   11170:	bl	108ec <__stack_chk_fail@plt>
   11174:	andeq	r1, r2, r8, asr lr
   11178:	andeq	r2, r2, r4, lsr #32
   1117c:	andeq	r0, r1, r8, lsl pc
   11180:	andeq	r2, r2, r8
   11184:	andeq	r1, r1, ip, lsl #5
   11188:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1118c:	mov	r7, r0
   11190:	ldr	r6, [pc, #72]	; 111e0 <set_com_err_gettext@plt+0x7e0>
   11194:	ldr	r5, [pc, #72]	; 111e4 <set_com_err_gettext@plt+0x7e4>
   11198:	add	r6, pc, r6
   1119c:	add	r5, pc, r5
   111a0:	sub	r6, r6, r5
   111a4:	mov	r8, r1
   111a8:	mov	r9, r2
   111ac:	bl	10884 <strcmp@plt-0x20>
   111b0:	asrs	r6, r6, #2
   111b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   111b8:	mov	r4, #0
   111bc:	add	r4, r4, #1
   111c0:	ldr	r3, [r5], #4
   111c4:	mov	r2, r9
   111c8:	mov	r1, r8
   111cc:	mov	r0, r7
   111d0:	blx	r3
   111d4:	cmp	r6, r4
   111d8:	bne	111bc <set_com_err_gettext@plt+0x7bc>
   111dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   111e0:			; <UNDEFINED> instruction: 0x00010cb4
   111e4:	andeq	r0, r1, ip, lsr #25
   111e8:	bx	lr

Disassembly of section .fini:

000111ec <.fini>:
   111ec:	push	{r3, lr}
   111f0:	pop	{r3, pc}
