
raspbian-preinstalled/btattach:     file format elf32-littlearm


Disassembly of section .init:

00010c64 <.init>:
   10c64:	push	{r3, lr}
   10c68:	bl	11520 <__snprintf_chk@plt+0x650>
   10c6c:	pop	{r3, pc}

Disassembly of section .plt:

00010c70 <cfmakeraw@plt-0x14>:
   10c70:	push	{lr}		; (str lr, [sp, #-4]!)
   10c74:	ldr	lr, [pc, #4]	; 10c80 <cfmakeraw@plt-0x4>
   10c78:	add	lr, pc, lr
   10c7c:	ldr	pc, [lr, #8]!
   10c80:	muleq	r1, ip, r2

00010c84 <cfmakeraw@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #24, 20	; 0x18000
   10c8c:	ldr	pc, [ip, #668]!	; 0x29c

00010c90 <strcmp@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #24, 20	; 0x18000
   10c98:	ldr	pc, [ip, #660]!	; 0x294

00010c9c <strtol@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #24, 20	; 0x18000
   10ca4:	ldr	pc, [ip, #652]!	; 0x28c

00010ca8 <setsockopt@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #24, 20	; 0x18000
   10cb0:	ldr	pc, [ip, #644]!	; 0x284

00010cb4 <read@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #24, 20	; 0x18000
   10cbc:	ldr	pc, [ip, #636]!	; 0x27c

00010cc0 <tcflush@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #24, 20	; 0x18000
   10cc8:	ldr	pc, [ip, #628]!	; 0x274

00010ccc <sigprocmask@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #24, 20	; 0x18000
   10cd4:	ldr	pc, [ip, #620]!	; 0x26c

00010cd8 <free@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #24, 20	; 0x18000
   10ce0:	ldr	pc, [ip, #612]!	; 0x264

00010ce4 <__vsnprintf_chk@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #24, 20	; 0x18000
   10cec:	ldr	pc, [ip, #604]!	; 0x25c

00010cf0 <memcpy@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #24, 20	; 0x18000
   10cf8:	ldr	pc, [ip, #596]!	; 0x254

00010cfc <strdup@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #24, 20	; 0x18000
   10d04:	ldr	pc, [ip, #588]!	; 0x24c

00010d08 <__stack_chk_fail@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #24, 20	; 0x18000
   10d10:	ldr	pc, [ip, #580]!	; 0x244

00010d14 <strcasecmp@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #24, 20	; 0x18000
   10d1c:	ldr	pc, [ip, #572]!	; 0x23c

00010d20 <perror@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #24, 20	; 0x18000
   10d28:	ldr	pc, [ip, #564]!	; 0x234

00010d2c <signalfd@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #24, 20	; 0x18000
   10d34:	ldr	pc, [ip, #556]!	; 0x22c

00010d38 <fwrite@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #24, 20	; 0x18000
   10d40:	ldr	pc, [ip, #548]!	; 0x224

00010d44 <ioctl@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #24, 20	; 0x18000
   10d4c:	ldr	pc, [ip, #540]!	; 0x21c

00010d50 <usleep@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #24, 20	; 0x18000
   10d58:	ldr	pc, [ip, #532]!	; 0x214

00010d5c <tcsetattr@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #24, 20	; 0x18000
   10d64:	ldr	pc, [ip, #524]!	; 0x20c

00010d68 <puts@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #24, 20	; 0x18000
   10d70:	ldr	pc, [ip, #516]!	; 0x204

00010d74 <malloc@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #24, 20	; 0x18000
   10d7c:	ldr	pc, [ip, #508]!	; 0x1fc

00010d80 <sigaddset@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #24, 20	; 0x18000
   10d88:	ldr	pc, [ip, #500]!	; 0x1f4

00010d8c <__libc_start_main@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #24, 20	; 0x18000
   10d94:	ldr	pc, [ip, #492]!	; 0x1ec

00010d98 <epoll_ctl@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #24, 20	; 0x18000
   10da0:	ldr	pc, [ip, #484]!	; 0x1e4

00010da4 <__gmon_start__@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #24, 20	; 0x18000
   10dac:	ldr	pc, [ip, #476]!	; 0x1dc

00010db0 <open@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #24, 20	; 0x18000
   10db8:	ldr	pc, [ip, #468]!	; 0x1d4

00010dbc <timerfd_create@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #24, 20	; 0x18000
   10dc4:	ldr	pc, [ip, #460]!	; 0x1cc

00010dc8 <getopt_long@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #24, 20	; 0x18000
   10dd0:	ldr	pc, [ip, #452]!	; 0x1c4

00010dd4 <__ctype_b_loc@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #24, 20	; 0x18000
   10ddc:	ldr	pc, [ip, #444]!	; 0x1bc

00010de0 <strlen@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #24, 20	; 0x18000
   10de8:	ldr	pc, [ip, #436]!	; 0x1b4

00010dec <strchr@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #24, 20	; 0x18000
   10df4:	ldr	pc, [ip, #428]!	; 0x1ac

00010df8 <__errno_location@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #24, 20	; 0x18000
   10e00:	ldr	pc, [ip, #420]!	; 0x1a4

00010e04 <strncasecmp@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #24, 20	; 0x18000
   10e0c:	ldr	pc, [ip, #412]!	; 0x19c

00010e10 <bind@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #24, 20	; 0x18000
   10e18:	ldr	pc, [ip, #404]!	; 0x194

00010e1c <memset@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #24, 20	; 0x18000
   10e24:	ldr	pc, [ip, #396]!	; 0x18c

00010e28 <__printf_chk@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #24, 20	; 0x18000
   10e30:	ldr	pc, [ip, #388]!	; 0x184

00010e34 <__fprintf_chk@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #24, 20	; 0x18000
   10e3c:	ldr	pc, [ip, #380]!	; 0x17c

00010e40 <writev@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #24, 20	; 0x18000
   10e48:	ldr	pc, [ip, #372]!	; 0x174

00010e4c <shutdown@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #24, 20	; 0x18000
   10e54:	ldr	pc, [ip, #364]!	; 0x16c

00010e58 <epoll_wait@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #24, 20	; 0x18000
   10e60:	ldr	pc, [ip, #356]!	; 0x164

00010e64 <sigemptyset@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #24, 20	; 0x18000
   10e6c:	ldr	pc, [ip, #348]!	; 0x15c

00010e70 <sscanf@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #24, 20	; 0x18000
   10e78:	ldr	pc, [ip, #340]!	; 0x154

00010e7c <timerfd_settime@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #24, 20	; 0x18000
   10e84:	ldr	pc, [ip, #332]!	; 0x14c

00010e88 <socket@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #24, 20	; 0x18000
   10e90:	ldr	pc, [ip, #324]!	; 0x144

00010e94 <__lxstat@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #24, 20	; 0x18000
   10e9c:	ldr	pc, [ip, #316]!	; 0x13c

00010ea0 <strncmp@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #24, 20	; 0x18000
   10ea8:	ldr	pc, [ip, #308]!	; 0x134

00010eac <abort@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #24, 20	; 0x18000
   10eb4:	ldr	pc, [ip, #300]!	; 0x12c

00010eb8 <epoll_create1@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #24, 20	; 0x18000
   10ec0:	ldr	pc, [ip, #292]!	; 0x124

00010ec4 <close@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #24, 20	; 0x18000
   10ecc:	ldr	pc, [ip, #284]!	; 0x11c

00010ed0 <__snprintf_chk@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #24, 20	; 0x18000
   10ed8:	ldr	pc, [ip, #276]!	; 0x114

Disassembly of section .text:

00010edc <.text>:
   10edc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ee0:	sub	sp, sp, #164	; 0xa4
   10ee4:	ldr	fp, [pc, #1356]	; 11438 <__snprintf_chk@plt+0x568>
   10ee8:	ldr	sl, [pc, #1356]	; 1143c <__snprintf_chk@plt+0x56c>
   10eec:	ldr	r8, [pc, #1356]	; 11440 <__snprintf_chk@plt+0x570>
   10ef0:	ldr	r3, [fp]
   10ef4:	ldr	r7, [pc, #1352]	; 11444 <__snprintf_chk@plt+0x574>
   10ef8:	mov	r6, r0
   10efc:	mov	r9, r1
   10f00:	mov	r5, #0
   10f04:	str	r3, [sp, #156]	; 0x9c
   10f08:	mov	r3, #1
   10f0c:	str	r5, [sp, #8]
   10f10:	str	r5, [sp, #16]
   10f14:	str	r5, [sp, #20]
   10f18:	str	r3, [sp, #12]
   10f1c:	mov	r4, #0
   10f20:	str	r4, [sp]
   10f24:	mov	r3, r8
   10f28:	mov	r2, r7
   10f2c:	mov	r1, r9
   10f30:	mov	r0, r6
   10f34:	bl	10dc8 <getopt_long@plt>
   10f38:	cmp	r0, #0
   10f3c:	blt	111f8 <__snprintf_chk@plt+0x328>
   10f40:	sub	r0, r0, #65	; 0x41
   10f44:	cmp	r0, #53	; 0x35
   10f48:	ldrls	pc, [pc, r0, lsl #2]
   10f4c:	b	1129c <__snprintf_chk@plt+0x3cc>
   10f50:	andeq	r1, r1, r4, asr #32
   10f54:	andeq	r1, r1, r4, lsr r0
   10f58:	muleq	r1, ip, r2
   10f5c:	muleq	r1, ip, r2
   10f60:	muleq	r1, ip, r2
   10f64:	muleq	r1, ip, r2
   10f68:	muleq	r1, ip, r2
   10f6c:	muleq	r1, ip, r2
   10f70:	muleq	r1, ip, r2
   10f74:	muleq	r1, ip, r2
   10f78:	muleq	r1, ip, r2
   10f7c:	muleq	r1, ip, r2
   10f80:	muleq	r1, ip, r2
   10f84:	andeq	r1, r1, r8, lsr #32
   10f88:	muleq	r1, ip, r2
   10f8c:	andeq	r1, r1, r8, lsl #2
   10f90:	muleq	r1, ip, r2
   10f94:	andeq	r1, r1, r0, lsl #2
   10f98:	muleq	r1, r8, r0
   10f9c:	muleq	r1, ip, r2
   10fa0:	muleq	r1, ip, r2
   10fa4:	muleq	r1, ip, r2
   10fa8:	muleq	r1, ip, r2
   10fac:	muleq	r1, ip, r2
   10fb0:	muleq	r1, ip, r2
   10fb4:	muleq	r1, ip, r2
   10fb8:	muleq	r1, ip, r2
   10fbc:	muleq	r1, ip, r2
   10fc0:	muleq	r1, ip, r2
   10fc4:	muleq	r1, ip, r2
   10fc8:	muleq	r1, ip, r2
   10fcc:	muleq	r1, ip, r2
   10fd0:	muleq	r1, ip, r2
   10fd4:	muleq	r1, ip, r2
   10fd8:	muleq	r1, ip, r2
   10fdc:	muleq	r1, ip, r2
   10fe0:	muleq	r1, ip, r2
   10fe4:	muleq	r1, ip, r2
   10fe8:	muleq	r1, ip, r2
   10fec:	andeq	r1, r1, r8, ror r0
   10ff0:	muleq	r1, ip, r2
   10ff4:	muleq	r1, ip, r2
   10ff8:	muleq	r1, ip, r2
   10ffc:	muleq	r1, ip, r2
   11000:	muleq	r1, ip, r2
   11004:	muleq	r1, ip, r2
   11008:	muleq	r1, ip, r2
   1100c:	muleq	r1, ip, r2
   11010:	muleq	r1, ip, r2
   11014:	muleq	r1, ip, r2
   11018:	muleq	r1, ip, r2
   1101c:	muleq	r1, ip, r2
   11020:	muleq	r1, ip, r2
   11024:	andeq	r1, r1, r4, asr r0
   11028:	mov	r3, #0
   1102c:	str	r3, [sp, #12]
   11030:	b	10f1c <__snprintf_chk@plt+0x4c>
   11034:	ldr	r3, [pc, #1036]	; 11448 <__snprintf_chk@plt+0x578>
   11038:	ldr	r3, [r3]
   1103c:	str	r3, [sp, #20]
   11040:	b	10f1c <__snprintf_chk@plt+0x4c>
   11044:	ldr	r3, [pc, #1020]	; 11448 <__snprintf_chk@plt+0x578>
   11048:	ldr	r3, [r3]
   1104c:	str	r3, [sp, #16]
   11050:	b	10f1c <__snprintf_chk@plt+0x4c>
   11054:	ldr	r0, [pc, #1008]	; 1144c <__snprintf_chk@plt+0x57c>
   11058:	bl	10d68 <puts@plt>
   1105c:	mov	r0, #0
   11060:	ldr	r2, [sp, #156]	; 0x9c
   11064:	ldr	r3, [fp]
   11068:	cmp	r2, r3
   1106c:	bne	11434 <__snprintf_chk@plt+0x564>
   11070:	add	sp, sp, #164	; 0xa4
   11074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11078:	ldr	r0, [pc, #976]	; 11450 <__snprintf_chk@plt+0x580>
   1107c:	bl	10d68 <puts@plt>
   11080:	ldr	r0, [pc, #972]	; 11454 <__snprintf_chk@plt+0x584>
   11084:	bl	10d68 <puts@plt>
   11088:	ldr	r0, [pc, #968]	; 11458 <__snprintf_chk@plt+0x588>
   1108c:	bl	10d68 <puts@plt>
   11090:	mov	r0, #0
   11094:	b	11060 <__snprintf_chk@plt+0x190>
   11098:	ldr	r3, [pc, #936]	; 11448 <__snprintf_chk@plt+0x578>
   1109c:	mov	r2, #10
   110a0:	mov	r1, #0
   110a4:	ldr	r0, [r3]
   110a8:	bl	10c9c <strtol@plt>
   110ac:	ldr	r3, [pc, #936]	; 1145c <__snprintf_chk@plt+0x58c>
   110b0:	cmp	r0, r3
   110b4:	beq	113cc <__snprintf_chk@plt+0x4fc>
   110b8:	ble	11148 <__snprintf_chk@plt+0x278>
   110bc:	ldr	r3, [pc, #924]	; 11460 <__snprintf_chk@plt+0x590>
   110c0:	cmp	r0, r3
   110c4:	beq	113c4 <__snprintf_chk@plt+0x4f4>
   110c8:	bgt	11118 <__snprintf_chk@plt+0x248>
   110cc:	ldr	r3, [pc, #912]	; 11464 <__snprintf_chk@plt+0x594>
   110d0:	cmp	r0, r3
   110d4:	beq	112d4 <__snprintf_chk@plt+0x404>
   110d8:	ble	111d0 <__snprintf_chk@plt+0x300>
   110dc:	ldr	r3, [pc, #900]	; 11468 <__snprintf_chk@plt+0x598>
   110e0:	cmp	r0, r3
   110e4:	beq	112b4 <__snprintf_chk@plt+0x3e4>
   110e8:	add	r3, r3, #344064	; 0x54000
   110ec:	add	r3, r3, #3936	; 0xf60
   110f0:	cmp	r0, r3
   110f4:	bne	11198 <__snprintf_chk@plt+0x2c8>
   110f8:	ldr	sl, [pc, #876]	; 1146c <__snprintf_chk@plt+0x59c>
   110fc:	b	10f1c <__snprintf_chk@plt+0x4c>
   11100:	mov	r5, #1
   11104:	b	10f1c <__snprintf_chk@plt+0x4c>
   11108:	ldr	r3, [pc, #824]	; 11448 <__snprintf_chk@plt+0x578>
   1110c:	ldr	r3, [r3]
   11110:	str	r3, [sp, #8]
   11114:	b	10f1c <__snprintf_chk@plt+0x4c>
   11118:	ldr	r3, [pc, #848]	; 11470 <__snprintf_chk@plt+0x5a0>
   1111c:	cmp	r0, r3
   11120:	beq	112dc <__snprintf_chk@plt+0x40c>
   11124:	ble	111e0 <__snprintf_chk@plt+0x310>
   11128:	ldr	r3, [pc, #836]	; 11474 <__snprintf_chk@plt+0x5a4>
   1112c:	cmp	r0, r3
   11130:	beq	112a4 <__snprintf_chk@plt+0x3d4>
   11134:	ldr	r3, [pc, #828]	; 11478 <__snprintf_chk@plt+0x5a8>
   11138:	cmp	r0, r3
   1113c:	bne	11198 <__snprintf_chk@plt+0x2c8>
   11140:	ldr	sl, [pc, #820]	; 1147c <__snprintf_chk@plt+0x5ac>
   11144:	b	10f1c <__snprintf_chk@plt+0x4c>
   11148:	cmp	r0, #57600	; 0xe100
   1114c:	beq	1130c <__snprintf_chk@plt+0x43c>
   11150:	ble	11180 <__snprintf_chk@plt+0x2b0>
   11154:	cmp	r0, #230400	; 0x38400
   11158:	beq	112e4 <__snprintf_chk@plt+0x414>
   1115c:	ble	111bc <__snprintf_chk@plt+0x2ec>
   11160:	ldr	r3, [pc, #792]	; 11480 <__snprintf_chk@plt+0x5b0>
   11164:	cmp	r0, r3
   11168:	beq	112ac <__snprintf_chk@plt+0x3dc>
   1116c:	ldr	r3, [pc, #784]	; 11484 <__snprintf_chk@plt+0x5b4>
   11170:	cmp	r0, r3
   11174:	bne	11198 <__snprintf_chk@plt+0x2c8>
   11178:	ldr	sl, [pc, #776]	; 11488 <__snprintf_chk@plt+0x5b8>
   1117c:	b	10f1c <__snprintf_chk@plt+0x4c>
   11180:	cmp	r0, #19200	; 0x4b00
   11184:	beq	112cc <__snprintf_chk@plt+0x3fc>
   11188:	cmp	r0, #38400	; 0x9600
   1118c:	beq	112c4 <__snprintf_chk@plt+0x3f4>
   11190:	cmp	r0, #9600	; 0x2580
   11194:	beq	112bc <__snprintf_chk@plt+0x3ec>
   11198:	ldr	r1, [pc, #748]	; 1148c <__snprintf_chk@plt+0x5bc>
   1119c:	ldr	r3, [pc, #676]	; 11448 <__snprintf_chk@plt+0x578>
   111a0:	ldr	r2, [pc, #744]	; 11490 <__snprintf_chk@plt+0x5c0>
   111a4:	ldr	r0, [r1]
   111a8:	ldr	r3, [r3]
   111ac:	mov	r1, #1
   111b0:	bl	10e34 <__fprintf_chk@plt>
   111b4:	mov	r0, #1
   111b8:	b	11060 <__snprintf_chk@plt+0x190>
   111bc:	ldr	r3, [pc, #720]	; 11494 <__snprintf_chk@plt+0x5c4>
   111c0:	cmp	r0, r3
   111c4:	bne	11198 <__snprintf_chk@plt+0x2c8>
   111c8:	ldr	sl, [pc, #620]	; 1143c <__snprintf_chk@plt+0x56c>
   111cc:	b	10f1c <__snprintf_chk@plt+0x4c>
   111d0:	cmp	r0, #921600	; 0xe1000
   111d4:	bne	11198 <__snprintf_chk@plt+0x2c8>
   111d8:	ldr	sl, [pc, #696]	; 11498 <__snprintf_chk@plt+0x5c8>
   111dc:	b	10f1c <__snprintf_chk@plt+0x4c>
   111e0:	sub	r3, r3, #499712	; 0x7a000
   111e4:	sub	r3, r3, #288	; 0x120
   111e8:	cmp	r0, r3
   111ec:	bne	11198 <__snprintf_chk@plt+0x2c8>
   111f0:	ldr	sl, [pc, #676]	; 1149c <__snprintf_chk@plt+0x5cc>
   111f4:	b	10f1c <__snprintf_chk@plt+0x4c>
   111f8:	ldr	r3, [pc, #672]	; 114a0 <__snprintf_chk@plt+0x5d0>
   111fc:	ldr	r3, [r3]
   11200:	sub	r6, r6, r3
   11204:	cmp	r6, #0
   11208:	bgt	112ec <__snprintf_chk@plt+0x41c>
   1120c:	bl	1290c <__snprintf_chk@plt+0x1a3c>
   11210:	add	r0, sp, #28
   11214:	bl	10e64 <sigemptyset@plt>
   11218:	mov	r1, #2
   1121c:	add	r0, sp, #28
   11220:	bl	10d80 <sigaddset@plt>
   11224:	mov	r1, #15
   11228:	add	r0, sp, #28
   1122c:	bl	10d80 <sigaddset@plt>
   11230:	mov	r3, r4
   11234:	mov	r2, r4
   11238:	add	r0, sp, #28
   1123c:	ldr	r1, [pc, #608]	; 114a4 <__snprintf_chk@plt+0x5d4>
   11240:	bl	13094 <__snprintf_chk@plt+0x21c4>
   11244:	ldr	r3, [sp, #8]
   11248:	cmp	r3, #0
   1124c:	moveq	r4, r3
   11250:	beq	1131c <__snprintf_chk@plt+0x44c>
   11254:	ldr	r6, [pc, #484]	; 11440 <__snprintf_chk@plt+0x570>
   11258:	ldr	r8, [sp, #8]
   1125c:	add	r7, r6, #128	; 0x80
   11260:	b	11278 <__snprintf_chk@plt+0x3a8>
   11264:	mov	r1, r8
   11268:	bl	10c90 <strcmp@plt>
   1126c:	cmp	r0, #0
   11270:	beq	11314 <__snprintf_chk@plt+0x444>
   11274:	add	r4, r4, #1
   11278:	ldr	r0, [r7, r4, lsl #3]
   1127c:	cmp	r0, #0
   11280:	bne	11264 <__snprintf_chk@plt+0x394>
   11284:	ldr	r3, [pc, #512]	; 1148c <__snprintf_chk@plt+0x5bc>
   11288:	mov	r2, #17
   1128c:	mov	r1, #1
   11290:	ldr	r3, [r3]
   11294:	ldr	r0, [pc, #524]	; 114a8 <__snprintf_chk@plt+0x5d8>
   11298:	bl	10d38 <fwrite@plt>
   1129c:	mov	r0, #1
   112a0:	b	11060 <__snprintf_chk@plt+0x190>
   112a4:	ldr	sl, [pc, #512]	; 114ac <__snprintf_chk@plt+0x5dc>
   112a8:	b	10f1c <__snprintf_chk@plt+0x4c>
   112ac:	ldr	sl, [pc, #508]	; 114b0 <__snprintf_chk@plt+0x5e0>
   112b0:	b	10f1c <__snprintf_chk@plt+0x4c>
   112b4:	ldr	sl, [pc, #504]	; 114b4 <__snprintf_chk@plt+0x5e4>
   112b8:	b	10f1c <__snprintf_chk@plt+0x4c>
   112bc:	mov	sl, #13
   112c0:	b	10f1c <__snprintf_chk@plt+0x4c>
   112c4:	mov	sl, #15
   112c8:	b	10f1c <__snprintf_chk@plt+0x4c>
   112cc:	mov	sl, #14
   112d0:	b	10f1c <__snprintf_chk@plt+0x4c>
   112d4:	ldr	sl, [pc, #476]	; 114b8 <__snprintf_chk@plt+0x5e8>
   112d8:	b	10f1c <__snprintf_chk@plt+0x4c>
   112dc:	ldr	sl, [pc, #472]	; 114bc <__snprintf_chk@plt+0x5ec>
   112e0:	b	10f1c <__snprintf_chk@plt+0x4c>
   112e4:	ldr	sl, [pc, #468]	; 114c0 <__snprintf_chk@plt+0x5f0>
   112e8:	b	10f1c <__snprintf_chk@plt+0x4c>
   112ec:	ldr	r3, [pc, #408]	; 1148c <__snprintf_chk@plt+0x5bc>
   112f0:	mov	r2, #32
   112f4:	mov	r1, #1
   112f8:	ldr	r3, [r3]
   112fc:	ldr	r0, [pc, #448]	; 114c4 <__snprintf_chk@plt+0x5f4>
   11300:	bl	10d38 <fwrite@plt>
   11304:	mov	r0, #1
   11308:	b	11060 <__snprintf_chk@plt+0x190>
   1130c:	ldr	sl, [pc, #436]	; 114c8 <__snprintf_chk@plt+0x5f8>
   11310:	b	10f1c <__snprintf_chk@plt+0x4c>
   11314:	add	r4, r6, r4, lsl #3
   11318:	ldr	r4, [r4, #132]	; 0x84
   1131c:	ldr	r6, [sp, #20]
   11320:	cmp	r6, #0
   11324:	beq	11364 <__snprintf_chk@plt+0x494>
   11328:	mov	r2, r6
   1132c:	ldr	r1, [pc, #408]	; 114cc <__snprintf_chk@plt+0x5fc>
   11330:	mov	r0, #1
   11334:	bl	10e28 <__printf_chk@plt>
   11338:	cmp	r5, #0
   1133c:	moveq	r3, #2
   11340:	movne	r3, #1
   11344:	mov	r0, r6
   11348:	mov	r2, sl
   1134c:	mov	r1, r4
   11350:	str	r3, [sp]
   11354:	ldr	r3, [sp, #12]
   11358:	bl	11634 <__snprintf_chk@plt+0x764>
   1135c:	cmp	r0, #0
   11360:	bge	1140c <__snprintf_chk@plt+0x53c>
   11364:	ldr	r3, [sp, #16]
   11368:	cmp	r3, #0
   1136c:	movne	r6, #0
   11370:	beq	113d4 <__snprintf_chk@plt+0x504>
   11374:	ldr	r7, [sp, #16]
   11378:	ldr	r1, [pc, #336]	; 114d0 <__snprintf_chk@plt+0x600>
   1137c:	mov	r2, r7
   11380:	mov	r0, #1
   11384:	bl	10e28 <__printf_chk@plt>
   11388:	cmp	r5, #0
   1138c:	moveq	ip, #6
   11390:	movne	ip, #1
   11394:	ldr	r3, [sp, #12]
   11398:	mov	r2, sl
   1139c:	mov	r1, r4
   113a0:	mov	r0, r7
   113a4:	str	ip, [sp]
   113a8:	bl	11634 <__snprintf_chk@plt+0x764>
   113ac:	cmp	r0, #0
   113b0:	bge	113f4 <__snprintf_chk@plt+0x524>
   113b4:	cmp	r6, #0
   113b8:	beq	113d4 <__snprintf_chk@plt+0x504>
   113bc:	bl	12c5c <__snprintf_chk@plt+0x1d8c>
   113c0:	b	11060 <__snprintf_chk@plt+0x190>
   113c4:	ldr	sl, [pc, #264]	; 114d4 <__snprintf_chk@plt+0x604>
   113c8:	b	10f1c <__snprintf_chk@plt+0x4c>
   113cc:	ldr	sl, [pc, #260]	; 114d8 <__snprintf_chk@plt+0x608>
   113d0:	b	10f1c <__snprintf_chk@plt+0x4c>
   113d4:	ldr	r3, [pc, #176]	; 1148c <__snprintf_chk@plt+0x5bc>
   113d8:	mov	r2, #23
   113dc:	mov	r1, #1
   113e0:	ldr	r3, [r3]
   113e4:	ldr	r0, [pc, #240]	; 114dc <__snprintf_chk@plt+0x60c>
   113e8:	bl	10d38 <fwrite@plt>
   113ec:	mov	r0, #1
   113f0:	b	11060 <__snprintf_chk@plt+0x190>
   113f4:	mov	r3, #0
   113f8:	str	r3, [sp]
   113fc:	mov	r1, r3
   11400:	ldr	r2, [pc, #216]	; 114e0 <__snprintf_chk@plt+0x610>
   11404:	bl	12a30 <__snprintf_chk@plt+0x1b60>
   11408:	b	113bc <__snprintf_chk@plt+0x4ec>
   1140c:	mov	r3, #0
   11410:	str	r3, [sp]
   11414:	mov	r1, r3
   11418:	ldr	r2, [pc, #192]	; 114e0 <__snprintf_chk@plt+0x610>
   1141c:	bl	12a30 <__snprintf_chk@plt+0x1b60>
   11420:	ldr	r3, [sp, #16]
   11424:	cmp	r3, #0
   11428:	movne	r6, #1
   1142c:	beq	113bc <__snprintf_chk@plt+0x4ec>
   11430:	b	11374 <__snprintf_chk@plt+0x4a4>
   11434:	bl	10d08 <__stack_chk_fail@plt>
   11438:	andeq	r8, r2, r0, lsl lr
   1143c:	andeq	r1, r0, r2
   11440:	andeq	r3, r1, r4, lsl lr
   11444:	andeq	r4, r1, r8, ror r0
   11448:	andeq	r9, r2, r8, lsl r0
   1144c:	muleq	r1, ip, r0
   11450:	andeq	r4, r1, r4, lsr #1
   11454:	ldrdeq	r4, [r1], -r0
   11458:	andeq	r4, r1, r4, ror #1
   1145c:	andeq	ip, r8, r0, lsl #20
   11460:	andseq	r8, lr, r0, lsl #9
   11464:	andeq	r4, pc, r0, asr #4
   11468:	andseq	r9, r1, r0, lsl #8
   1146c:	andeq	r1, r0, sl
   11470:	eoreq	ip, sp, r0, asr #13
   11474:	eorseq	r6, r5, r0, ror #15
   11478:	eorseq	r0, sp, r0, lsl #18
   1147c:	andeq	r1, r0, pc
   11480:	andeq	r0, r7, r0, lsl #16
   11484:	andeq	sl, r7, r0, lsr #2
   11488:	andeq	r1, r0, r5
   1148c:	andeq	r9, r2, r0, lsl r0
   11490:	andeq	r4, r1, r8, lsl #1
   11494:	andeq	ip, r1, r0, lsl #4
   11498:	andeq	r1, r0, r7
   1149c:	andeq	r1, r0, ip
   114a0:	andeq	r9, r2, r8
   114a4:	strdeq	r1, [r1], -ip
   114a8:	andeq	r4, r1, r8, lsl #5
   114ac:	andeq	r1, r0, lr
   114b0:	andeq	r1, r0, r4
   114b4:	andeq	r1, r0, r9
   114b8:	andeq	r1, r0, r8
   114bc:	andeq	r1, r0, sp
   114c0:	andeq	r1, r0, r3
   114c4:	andeq	r4, r1, r8, lsl #4
   114c8:	andeq	r1, r0, r1
   114cc:	andeq	r4, r1, ip, lsr #4
   114d0:	andeq	r4, r1, r0, asr r2
   114d4:	andeq	r1, r0, fp
   114d8:	andeq	r1, r0, r6
   114dc:	andeq	r4, r1, r0, ror r2
   114e0:	strdeq	r1, [r1], -r0
   114e4:	mov	fp, #0
   114e8:	mov	lr, #0
   114ec:	pop	{r1}		; (ldr r1, [sp], #4)
   114f0:	mov	r2, sp
   114f4:	push	{r2}		; (str r2, [sp, #-4]!)
   114f8:	push	{r0}		; (str r0, [sp, #-4]!)
   114fc:	ldr	ip, [pc, #16]	; 11514 <__snprintf_chk@plt+0x644>
   11500:	push	{ip}		; (str ip, [sp, #-4]!)
   11504:	ldr	r0, [pc, #12]	; 11518 <__snprintf_chk@plt+0x648>
   11508:	ldr	r3, [pc, #12]	; 1151c <__snprintf_chk@plt+0x64c>
   1150c:	bl	10d8c <__libc_start_main@plt>
   11510:	bl	10eac <abort@plt>
   11514:	andeq	r3, r1, r4, lsl #28
   11518:	ldrdeq	r0, [r1], -ip
   1151c:	andeq	r3, r1, r4, lsr #27
   11520:	ldr	r3, [pc, #20]	; 1153c <__snprintf_chk@plt+0x66c>
   11524:	ldr	r2, [pc, #20]	; 11540 <__snprintf_chk@plt+0x670>
   11528:	add	r3, pc, r3
   1152c:	ldr	r2, [r3, r2]
   11530:	cmp	r2, #0
   11534:	bxeq	lr
   11538:	b	10da4 <__gmon_start__@plt>
   1153c:	andeq	r7, r1, ip, ror #19
   11540:	ldrdeq	r0, [r0], -ip
   11544:	ldr	r0, [pc, #24]	; 11564 <__snprintf_chk@plt+0x694>
   11548:	ldr	r3, [pc, #24]	; 11568 <__snprintf_chk@plt+0x698>
   1154c:	cmp	r3, r0
   11550:	bxeq	lr
   11554:	ldr	r3, [pc, #16]	; 1156c <__snprintf_chk@plt+0x69c>
   11558:	cmp	r3, #0
   1155c:	bxeq	lr
   11560:	bx	r3
   11564:	andeq	r9, r2, r8
   11568:	andeq	r9, r2, r8
   1156c:	andeq	r0, r0, r0
   11570:	ldr	r0, [pc, #36]	; 1159c <__snprintf_chk@plt+0x6cc>
   11574:	ldr	r1, [pc, #36]	; 115a0 <__snprintf_chk@plt+0x6d0>
   11578:	sub	r1, r1, r0
   1157c:	asr	r1, r1, #2
   11580:	add	r1, r1, r1, lsr #31
   11584:	asrs	r1, r1, #1
   11588:	bxeq	lr
   1158c:	ldr	r3, [pc, #16]	; 115a4 <__snprintf_chk@plt+0x6d4>
   11590:	cmp	r3, #0
   11594:	bxeq	lr
   11598:	bx	r3
   1159c:	andeq	r9, r2, r8
   115a0:	andeq	r9, r2, r8
   115a4:	andeq	r0, r0, r0
   115a8:	push	{r4, lr}
   115ac:	ldr	r4, [pc, #24]	; 115cc <__snprintf_chk@plt+0x6fc>
   115b0:	ldrb	r3, [r4]
   115b4:	cmp	r3, #0
   115b8:	popne	{r4, pc}
   115bc:	bl	11544 <__snprintf_chk@plt+0x674>
   115c0:	mov	r3, #1
   115c4:	strb	r3, [r4]
   115c8:	pop	{r4, pc}
   115cc:	andeq	r9, r2, ip, lsl r0
   115d0:	b	11570 <__snprintf_chk@plt+0x6a0>
   115d4:	ldrb	r2, [r0, #6]
   115d8:	ldrb	r3, [r0, #5]
   115dc:	ldr	r1, [pc, #8]	; 115ec <__snprintf_chk@plt+0x71c>
   115e0:	mov	r0, #1
   115e4:	orr	r2, r3, r2, lsl #8
   115e8:	b	10e28 <__printf_chk@plt>
   115ec:	strdeq	r3, [r1], -ip
   115f0:	ldr	r0, [pc]	; 115f8 <__snprintf_chk@plt+0x728>
   115f4:	b	10d68 <puts@plt>
   115f8:	andeq	r3, r1, r0, lsl pc
   115fc:	cmp	r0, #2
   11600:	beq	1160c <__snprintf_chk@plt+0x73c>
   11604:	cmp	r0, #15
   11608:	bxne	lr
   1160c:	push	{r4, lr}
   11610:	ldr	r4, [pc, #24]	; 11630 <__snprintf_chk@plt+0x760>
   11614:	ldrb	r3, [r4]
   11618:	cmp	r3, #0
   1161c:	popne	{r4, pc}
   11620:	bl	12954 <__snprintf_chk@plt+0x1a84>
   11624:	mov	r3, #1
   11628:	strb	r3, [r4]
   1162c:	pop	{r4, pc}
   11630:	andeq	r9, r2, sp, lsl r0
   11634:	push	{r4, r5, r6, r7, r8, r9, lr}
   11638:	sub	sp, sp, #92	; 0x5c
   1163c:	ldr	r7, [pc, #616]	; 118ac <__snprintf_chk@plt+0x9dc>
   11640:	mov	ip, #15
   11644:	mov	r6, r1
   11648:	ldr	lr, [r7]
   1164c:	ldr	r1, [pc, #604]	; 118b0 <__snprintf_chk@plt+0x9e0>
   11650:	mov	r5, r2
   11654:	mov	r9, r3
   11658:	str	lr, [sp, #84]	; 0x54
   1165c:	str	ip, [sp, #20]
   11660:	ldr	r8, [sp, #120]	; 0x78
   11664:	bl	10db0 <open@plt>
   11668:	subs	r4, r0, #0
   1166c:	blt	11808 <__snprintf_chk@plt+0x938>
   11670:	mov	r1, #2
   11674:	bl	10cc0 <tcflush@plt>
   11678:	cmp	r0, #0
   1167c:	blt	117f0 <__snprintf_chk@plt+0x920>
   11680:	add	r2, sp, #16
   11684:	ldr	r1, [pc, #552]	; 118b4 <__snprintf_chk@plt+0x9e4>
   11688:	mov	r0, r4
   1168c:	bl	10d44 <ioctl@plt>
   11690:	cmp	r0, #0
   11694:	blt	11830 <__snprintf_chk@plt+0x960>
   11698:	mov	r2, #60	; 0x3c
   1169c:	mov	r1, #0
   116a0:	add	r0, sp, #24
   116a4:	bl	10e1c <memset@plt>
   116a8:	add	r0, sp, #24
   116ac:	bl	10c84 <cfmakeraw@plt>
   116b0:	ldr	r3, [sp, #32]
   116b4:	cmp	r9, #0
   116b8:	orr	r5, r5, r3
   116bc:	orrne	r5, r5, #-2147483648	; 0x80000000
   116c0:	orr	r5, r5, #2176	; 0x880
   116c4:	add	r2, sp, #24
   116c8:	mov	r1, #0
   116cc:	mov	r0, r4
   116d0:	str	r5, [sp, #32]
   116d4:	bl	10d5c <tcsetattr@plt>
   116d8:	cmp	r0, #0
   116dc:	blt	11890 <__snprintf_chk@plt+0x9c0>
   116e0:	add	r2, sp, #20
   116e4:	ldr	r1, [pc, #460]	; 118b8 <__snprintf_chk@plt+0x9e8>
   116e8:	mov	r0, r4
   116ec:	bl	10d44 <ioctl@plt>
   116f0:	cmp	r0, #0
   116f4:	blt	11878 <__snprintf_chk@plt+0x9a8>
   116f8:	ldrd	r2, [sp, #16]
   116fc:	ldr	r1, [pc, #440]	; 118bc <__snprintf_chk@plt+0x9ec>
   11700:	mov	r0, #1
   11704:	bl	10e28 <__printf_chk@plt>
   11708:	mov	r2, r8
   1170c:	ldr	r1, [pc, #428]	; 118c0 <__snprintf_chk@plt+0x9f0>
   11710:	mov	r0, r4
   11714:	bl	10d44 <ioctl@plt>
   11718:	cmp	r0, #0
   1171c:	blt	11860 <__snprintf_chk@plt+0x990>
   11720:	mov	r2, r6
   11724:	ldr	r1, [pc, #408]	; 118c4 <__snprintf_chk@plt+0x9f4>
   11728:	mov	r0, r4
   1172c:	bl	10d44 <ioctl@plt>
   11730:	cmp	r0, #0
   11734:	blt	11848 <__snprintf_chk@plt+0x978>
   11738:	ldr	r1, [pc, #392]	; 118c8 <__snprintf_chk@plt+0x9f8>
   1173c:	mov	r0, r4
   11740:	bl	10d44 <ioctl@plt>
   11744:	subs	r6, r0, #0
   11748:	blt	11818 <__snprintf_chk@plt+0x948>
   1174c:	mov	r2, r6
   11750:	ldr	r1, [pc, #372]	; 118cc <__snprintf_chk@plt+0x9fc>
   11754:	mov	r0, #1
   11758:	bl	10e28 <__printf_chk@plt>
   1175c:	tst	r8, #1
   11760:	beq	117b4 <__snprintf_chk@plt+0x8e4>
   11764:	ldr	r8, [pc, #356]	; 118d0 <__snprintf_chk@plt+0xa00>
   11768:	uxth	r6, r6
   1176c:	mov	r5, #6
   11770:	mov	r0, r6
   11774:	bl	11ef0 <__snprintf_chk@plt+0x1020>
   11778:	subs	r2, r0, #0
   1177c:	bne	117d0 <__snprintf_chk@plt+0x900>
   11780:	mov	r0, r8
   11784:	bl	10d50 <usleep@plt>
   11788:	subs	r5, r5, #1
   1178c:	bne	11770 <__snprintf_chk@plt+0x8a0>
   11790:	ldr	r3, [pc, #316]	; 118d4 <__snprintf_chk@plt+0xa04>
   11794:	mov	r2, #32
   11798:	mov	r1, #1
   1179c:	ldr	r3, [r3]
   117a0:	ldr	r0, [pc, #304]	; 118d8 <__snprintf_chk@plt+0xa08>
   117a4:	bl	10d38 <fwrite@plt>
   117a8:	mov	r0, r4
   117ac:	bl	10ec4 <close@plt>
   117b0:	mvn	r4, #0
   117b4:	ldr	r2, [sp, #84]	; 0x54
   117b8:	ldr	r3, [r7]
   117bc:	mov	r0, r4
   117c0:	cmp	r2, r3
   117c4:	bne	118a8 <__snprintf_chk@plt+0x9d8>
   117c8:	add	sp, sp, #92	; 0x5c
   117cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   117d0:	ldr	ip, [pc, #260]	; 118dc <__snprintf_chk@plt+0xa0c>
   117d4:	ldr	r1, [pc, #260]	; 118e0 <__snprintf_chk@plt+0xa10>
   117d8:	mov	r3, #0
   117dc:	stm	sp, {r1, r2, ip}
   117e0:	mov	r2, r3
   117e4:	ldr	r1, [pc, #248]	; 118e4 <__snprintf_chk@plt+0xa14>
   117e8:	bl	12000 <__snprintf_chk@plt+0x1130>
   117ec:	b	117b4 <__snprintf_chk@plt+0x8e4>
   117f0:	ldr	r0, [pc, #240]	; 118e8 <__snprintf_chk@plt+0xa18>
   117f4:	bl	10d20 <perror@plt>
   117f8:	mov	r0, r4
   117fc:	bl	10ec4 <close@plt>
   11800:	mvn	r4, #0
   11804:	b	117b4 <__snprintf_chk@plt+0x8e4>
   11808:	ldr	r0, [pc, #220]	; 118ec <__snprintf_chk@plt+0xa1c>
   1180c:	bl	10d20 <perror@plt>
   11810:	mvn	r4, #0
   11814:	b	117b4 <__snprintf_chk@plt+0x8e4>
   11818:	ldr	r0, [pc, #208]	; 118f0 <__snprintf_chk@plt+0xa20>
   1181c:	bl	10d20 <perror@plt>
   11820:	mov	r0, r4
   11824:	bl	10ec4 <close@plt>
   11828:	mvn	r4, #0
   1182c:	b	117b4 <__snprintf_chk@plt+0x8e4>
   11830:	ldr	r0, [pc, #188]	; 118f4 <__snprintf_chk@plt+0xa24>
   11834:	bl	10d20 <perror@plt>
   11838:	mov	r0, r4
   1183c:	bl	10ec4 <close@plt>
   11840:	mvn	r4, #0
   11844:	b	117b4 <__snprintf_chk@plt+0x8e4>
   11848:	ldr	r0, [pc, #168]	; 118f8 <__snprintf_chk@plt+0xa28>
   1184c:	bl	10d20 <perror@plt>
   11850:	mov	r0, r4
   11854:	bl	10ec4 <close@plt>
   11858:	mvn	r4, #0
   1185c:	b	117b4 <__snprintf_chk@plt+0x8e4>
   11860:	ldr	r0, [pc, #148]	; 118fc <__snprintf_chk@plt+0xa2c>
   11864:	bl	10d20 <perror@plt>
   11868:	mov	r0, r4
   1186c:	bl	10ec4 <close@plt>
   11870:	mvn	r4, #0
   11874:	b	117b4 <__snprintf_chk@plt+0x8e4>
   11878:	ldr	r0, [pc, #128]	; 11900 <__snprintf_chk@plt+0xa30>
   1187c:	bl	10d20 <perror@plt>
   11880:	mov	r0, r4
   11884:	bl	10ec4 <close@plt>
   11888:	mvn	r4, #0
   1188c:	b	117b4 <__snprintf_chk@plt+0x8e4>
   11890:	ldr	r0, [pc, #108]	; 11904 <__snprintf_chk@plt+0xa34>
   11894:	bl	10d20 <perror@plt>
   11898:	mov	r0, r4
   1189c:	bl	10ec4 <close@plt>
   118a0:	mvn	r4, #0
   118a4:	b	117b4 <__snprintf_chk@plt+0x8e4>
   118a8:	bl	10d08 <__stack_chk_fail@plt>
   118ac:	andeq	r8, r2, r0, lsl lr
   118b0:	andeq	r0, r0, r2, lsl #2
   118b4:	andeq	r5, r0, r4, lsr #8
   118b8:	andeq	r5, r0, r3, lsr #8
   118bc:	andeq	r3, r1, ip, asr #31
   118c0:	andmi	r5, r4, fp, asr #11
   118c4:	andmi	r5, r4, r8, asr #11
   118c8:	andhi	r5, r4, sl, asr #11
   118cc:	andeq	r4, r1, r8, lsr r0
   118d0:	muleq	r3, r0, r0
   118d4:	andeq	r9, r2, r0, lsl r0
   118d8:	andeq	r4, r1, r4, asr r0
   118dc:	andeq	r1, r1, r4, ror #28
   118e0:	ldrdeq	r1, [r1], -r4
   118e4:	andeq	r1, r0, r1
   118e8:	andeq	r3, r1, r4, asr #30
   118ec:	andeq	r3, r1, r8, lsr #30
   118f0:	andeq	r4, r1, r0, lsr #32
   118f4:	andeq	r3, r1, r0, ror #30
   118f8:	andeq	r4, r1, r8
   118fc:	strdeq	r3, [r1], -r4
   11900:	andeq	r3, r1, r8, lsr #31
   11904:	andeq	r3, r1, r4, lsl #31
   11908:	ldrh	r0, [r0, #4]
   1190c:	uxth	r1, r1
   11910:	sub	r0, r1, r0
   11914:	clz	r0, r0
   11918:	lsr	r0, r0, #5
   1191c:	bx	lr
   11920:	ldr	r0, [r0]
   11924:	sub	r0, r1, r0
   11928:	clz	r0, r0
   1192c:	lsr	r0, r0, #5
   11930:	bx	lr
   11934:	ldr	r0, [r0]
   11938:	sub	r0, r1, r0
   1193c:	clz	r0, r0
   11940:	lsr	r0, r0, #5
   11944:	bx	lr
   11948:	ldr	r3, [r0, #20]
   1194c:	push	{r4, lr}
   11950:	cmp	r3, #0
   11954:	mov	r4, r0
   11958:	beq	11964 <__snprintf_chk@plt+0xa94>
   1195c:	ldr	r0, [r0, #24]
   11960:	blx	r3
   11964:	ldr	r0, [r4, #8]
   11968:	bl	10cd8 <free@plt>
   1196c:	mov	r0, r4
   11970:	pop	{r4, lr}
   11974:	b	10cd8 <free@plt>
   11978:	ldr	r3, [r0, #12]
   1197c:	push	{r4, lr}
   11980:	cmp	r3, #0
   11984:	mov	r4, r0
   11988:	beq	11994 <__snprintf_chk@plt+0xac4>
   1198c:	ldr	r0, [r0, #16]
   11990:	blx	r3
   11994:	mov	r0, r4
   11998:	pop	{r4, lr}
   1199c:	b	10cd8 <free@plt>
   119a0:	ldr	r3, [pc, #148]	; 11a3c <__snprintf_chk@plt+0xb6c>
   119a4:	ldr	r2, [pc, #148]	; 11a40 <__snprintf_chk@plt+0xb70>
   119a8:	add	r3, pc, r3
   119ac:	push	{r4, r5, r6, r7, lr}
   119b0:	sub	sp, sp, #20
   119b4:	ldr	r4, [r3, r2]
   119b8:	mov	r7, r0
   119bc:	mov	r6, r1
   119c0:	ldr	ip, [r4]
   119c4:	mov	r2, #1
   119c8:	ldr	r1, [pc, #116]	; 11a44 <__snprintf_chk@plt+0xb74>
   119cc:	mov	r0, #31
   119d0:	str	ip, [sp, #12]
   119d4:	bl	10e88 <socket@plt>
   119d8:	subs	r5, r0, #0
   119dc:	blt	11a20 <__snprintf_chk@plt+0xb50>
   119e0:	mov	r3, #31
   119e4:	mov	r2, #6
   119e8:	add	r1, sp, #4
   119ec:	strh	r7, [sp, #6]
   119f0:	strh	r6, [sp, #8]
   119f4:	strh	r3, [sp, #4]
   119f8:	bl	10e10 <bind@plt>
   119fc:	cmp	r0, #0
   11a00:	blt	11a28 <__snprintf_chk@plt+0xb58>
   11a04:	ldr	r2, [sp, #12]
   11a08:	ldr	r3, [r4]
   11a0c:	mov	r0, r5
   11a10:	cmp	r2, r3
   11a14:	bne	11a38 <__snprintf_chk@plt+0xb68>
   11a18:	add	sp, sp, #20
   11a1c:	pop	{r4, r5, r6, r7, pc}
   11a20:	mvn	r5, #0
   11a24:	b	11a04 <__snprintf_chk@plt+0xb34>
   11a28:	mov	r0, r5
   11a2c:	bl	10ec4 <close@plt>
   11a30:	mvn	r5, #0
   11a34:	b	11a04 <__snprintf_chk@plt+0xb34>
   11a38:	bl	10d08 <__stack_chk_fail@plt>
   11a3c:	andeq	r7, r1, ip, ror #10
   11a40:	ldrdeq	r0, [r0], -r4
   11a44:	andeq	r0, r8, r3, lsl #16
   11a48:	mov	r3, r1
   11a4c:	ldrb	r1, [r0, #4]
   11a50:	ldrb	r2, [r3]
   11a54:	cmp	r1, r2
   11a58:	bxne	lr
   11a5c:	push	{lr}		; (str lr, [sp, #-4]!)
   11a60:	ldr	lr, [r0, #8]
   11a64:	ldr	r2, [r0, #16]
   11a68:	ldrb	r1, [r3, #1]
   11a6c:	add	r0, r3, #2
   11a70:	mov	r3, lr
   11a74:	pop	{lr}		; (ldr lr, [sp], #4)
   11a78:	bx	r3
   11a7c:	ldrb	r3, [r0, #9]
   11a80:	cmp	r3, #0
   11a84:	bxne	lr
   11a88:	ldrb	r3, [r0, #10]
   11a8c:	cmp	r3, #0
   11a90:	bxeq	lr
   11a94:	push	{r4, lr}
   11a98:	mov	r4, r0
   11a9c:	ldr	r0, [r0, #20]
   11aa0:	bl	136ac <__snprintf_chk@plt+0x27dc>
   11aa4:	subs	r3, r0, #0
   11aa8:	popne	{r4, pc}
   11aac:	ldr	r1, [pc, #28]	; 11ad0 <__snprintf_chk@plt+0xc00>
   11ab0:	mov	r2, r4
   11ab4:	add	r1, pc, r1
   11ab8:	ldr	r0, [r4, #4]
   11abc:	bl	126a8 <__snprintf_chk@plt+0x17d8>
   11ac0:	cmp	r0, #0
   11ac4:	movne	r3, #1
   11ac8:	strbne	r3, [r4, #9]
   11acc:	pop	{r4, pc}
   11ad0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11ad4:	cmp	r1, #0
   11ad8:	push	{r4, r5, r6, r7, r8, lr}
   11adc:	mov	r4, r0
   11ae0:	bne	11af0 <__snprintf_chk@plt+0xc20>
   11ae4:	mov	r0, r4
   11ae8:	pop	{r4, r5, r6, r7, r8, lr}
   11aec:	b	11a7c <__snprintf_chk@plt+0xbac>
   11af0:	mov	r6, r2
   11af4:	mov	r2, r1
   11af8:	ldr	r1, [pc, #68]	; 11b44 <__snprintf_chk@plt+0xc74>
   11afc:	ldr	r0, [r0, #24]
   11b00:	add	r1, pc, r1
   11b04:	mov	r7, r3
   11b08:	bl	134f4 <__snprintf_chk@plt+0x2624>
   11b0c:	subs	r5, r0, #0
   11b10:	popeq	{r4, r5, r6, r7, r8, pc}
   11b14:	ldr	r3, [r5, #16]
   11b18:	cmp	r3, #0
   11b1c:	beq	11b30 <__snprintf_chk@plt+0xc60>
   11b20:	uxtb	r1, r7
   11b24:	mov	r0, r6
   11b28:	ldr	r2, [r5, #24]
   11b2c:	blx	r3
   11b30:	mov	r0, r5
   11b34:	bl	11948 <__snprintf_chk@plt+0xa78>
   11b38:	mov	r0, r4
   11b3c:	pop	{r4, r5, r6, r7, r8, lr}
   11b40:	b	11a7c <__snprintf_chk@plt+0xbac>
   11b44:			; <UNDEFINED> instruction: 0xfffffe00
   11b48:	ldr	r3, [pc, #304]	; 11c80 <__snprintf_chk@plt+0xdb0>
   11b4c:	ldr	r2, [pc, #304]	; 11c84 <__snprintf_chk@plt+0xdb4>
   11b50:	add	r3, pc, r3
   11b54:	push	{r4, r5, r6, lr}
   11b58:	sub	sp, sp, #520	; 0x208
   11b5c:	ldr	r4, [r3, r2]
   11b60:	ldr	r0, [r1, #4]
   11b64:	mov	r5, r1
   11b68:	ldr	r3, [r4]
   11b6c:	str	r3, [sp, #516]	; 0x204
   11b70:	bl	125fc <__snprintf_chk@plt+0x172c>
   11b74:	cmp	r0, #0
   11b78:	blt	11b88 <__snprintf_chk@plt+0xcb8>
   11b7c:	ldrb	r3, [r5, #8]
   11b80:	cmp	r3, #0
   11b84:	beq	11ba4 <__snprintf_chk@plt+0xcd4>
   11b88:	mov	r0, #0
   11b8c:	ldr	r2, [sp, #516]	; 0x204
   11b90:	ldr	r3, [r4]
   11b94:	cmp	r2, r3
   11b98:	bne	11c7c <__snprintf_chk@plt+0xdac>
   11b9c:	add	sp, sp, #520	; 0x208
   11ba0:	pop	{r4, r5, r6, pc}
   11ba4:	add	r6, sp, #4
   11ba8:	mov	r1, r6
   11bac:	mov	r2, #512	; 0x200
   11bb0:	bl	10cb4 <read@plt>
   11bb4:	cmp	r0, #0
   11bb8:	blt	11b88 <__snprintf_chk@plt+0xcb8>
   11bbc:	beq	11bcc <__snprintf_chk@plt+0xcfc>
   11bc0:	ldrb	r3, [sp, #4]
   11bc4:	cmp	r3, #4
   11bc8:	beq	11bd4 <__snprintf_chk@plt+0xd04>
   11bcc:	mov	r0, #1
   11bd0:	b	11b8c <__snprintf_chk@plt+0xcbc>
   11bd4:	cmp	r0, #2
   11bd8:	ble	11bcc <__snprintf_chk@plt+0xcfc>
   11bdc:	ldrb	r2, [sp, #6]
   11be0:	sub	r3, r0, #3
   11be4:	cmp	r3, r2
   11be8:	bne	11bcc <__snprintf_chk@plt+0xcfc>
   11bec:	ldrb	r2, [sp, #5]
   11bf0:	cmp	r2, #14
   11bf4:	beq	11c1c <__snprintf_chk@plt+0xd4c>
   11bf8:	cmp	r2, #15
   11bfc:	beq	11c48 <__snprintf_chk@plt+0xd78>
   11c00:	ldr	r1, [pc, #128]	; 11c88 <__snprintf_chk@plt+0xdb8>
   11c04:	ldr	r0, [r5, #28]
   11c08:	add	r2, r6, #1
   11c0c:	add	r1, pc, r1
   11c10:	bl	13364 <__snprintf_chk@plt+0x2494>
   11c14:	mov	r0, #1
   11c18:	b	11b8c <__snprintf_chk@plt+0xcbc>
   11c1c:	cmp	r3, #2
   11c20:	bls	11bcc <__snprintf_chk@plt+0xcfc>
   11c24:	ldrb	r2, [sp, #7]
   11c28:	sub	r3, r0, #6
   11c2c:	ldrh	r1, [r6, #4]
   11c30:	mov	r0, r5
   11c34:	strb	r2, [r5, #10]
   11c38:	add	r2, r6, #6
   11c3c:	bl	11ad4 <__snprintf_chk@plt+0xc04>
   11c40:	mov	r0, #1
   11c44:	b	11b8c <__snprintf_chk@plt+0xcbc>
   11c48:	cmp	r3, #3
   11c4c:	bls	11bcc <__snprintf_chk@plt+0xcfc>
   11c50:	ldr	r1, [r6, #4]
   11c54:	ldrb	r3, [sp, #8]
   11c58:	mov	r0, r5
   11c5c:	lsr	r1, r1, #8
   11c60:	strb	r3, [r5, #10]
   11c64:	add	r2, r6, #3
   11c68:	uxth	r1, r1
   11c6c:	mov	r3, #1
   11c70:	bl	11ad4 <__snprintf_chk@plt+0xc04>
   11c74:	mov	r0, #1
   11c78:	b	11b8c <__snprintf_chk@plt+0xcbc>
   11c7c:	bl	10d08 <__stack_chk_fail@plt>
   11c80:	andeq	r7, r1, r4, asr #7
   11c84:	ldrdeq	r0, [r0], -r4
   11c88:			; <UNDEFINED> instruction: 0xfffffe34
   11c8c:	ldr	r3, [pc, #204]	; 11d60 <__snprintf_chk@plt+0xe90>
   11c90:	ldr	r2, [pc, #204]	; 11d64 <__snprintf_chk@plt+0xe94>
   11c94:	add	r3, pc, r3
   11c98:	push	{r4, r5, r6, lr}
   11c9c:	sub	sp, sp, #40	; 0x28
   11ca0:	ldr	r6, [r3, r2]
   11ca4:	ldr	r0, [r1, #20]
   11ca8:	mov	r4, r1
   11cac:	ldr	r3, [r6]
   11cb0:	str	r3, [sp, #36]	; 0x24
   11cb4:	bl	132e4 <__snprintf_chk@plt+0x2414>
   11cb8:	subs	r5, r0, #0
   11cbc:	beq	11d3c <__snprintf_chk@plt+0xe6c>
   11cc0:	ldrb	r2, [r4, #10]
   11cc4:	mov	r3, #1
   11cc8:	strb	r3, [sp, #7]
   11ccc:	cmp	r2, #0
   11cd0:	ldr	ip, [r5, #8]
   11cd4:	ldrh	r2, [r5, #4]
   11cd8:	ldrb	r1, [r5, #12]
   11cdc:	ldr	r0, [r4, #4]
   11ce0:	beq	11d30 <__snprintf_chk@plt+0xe60>
   11ce4:	cmp	r1, #0
   11ce8:	strh	r2, [sp, #8]
   11cec:	str	r3, [sp, #16]
   11cf0:	mov	r2, #3
   11cf4:	add	r3, sp, #7
   11cf8:	strne	r1, [sp, #32]
   11cfc:	strb	r1, [sp, #10]
   11d00:	str	r3, [sp, #12]
   11d04:	str	r2, [sp, #24]
   11d08:	add	r3, sp, #8
   11d0c:	moveq	r2, #2
   11d10:	add	r1, sp, #12
   11d14:	str	r3, [sp, #20]
   11d18:	strne	ip, [sp, #28]
   11d1c:	bl	127c0 <__snprintf_chk@plt+0x18f0>
   11d20:	cmp	r0, #0
   11d24:	ldrbge	r3, [r4, #10]
   11d28:	subge	r3, r3, #1
   11d2c:	strbge	r3, [r4, #10]
   11d30:	mov	r1, r5
   11d34:	ldr	r0, [r4, #24]
   11d38:	bl	131c8 <__snprintf_chk@plt+0x22f8>
   11d3c:	ldr	r2, [sp, #36]	; 0x24
   11d40:	ldr	r3, [r6]
   11d44:	mov	r0, #0
   11d48:	cmp	r2, r3
   11d4c:	strb	r0, [r4, #9]
   11d50:	bne	11d5c <__snprintf_chk@plt+0xe8c>
   11d54:	add	sp, sp, #40	; 0x28
   11d58:	pop	{r4, r5, r6, pc}
   11d5c:	bl	10d08 <__stack_chk_fail@plt>
   11d60:	andeq	r7, r1, r0, lsl #5
   11d64:	ldrdeq	r0, [r0], -r4
   11d68:	cmp	r0, #0
   11d6c:	bxeq	lr
   11d70:	mcr	15, 0, r0, cr7, cr10, {5}
   11d74:	ldrex	r3, [r0]
   11d78:	add	r3, r3, #1
   11d7c:	strex	r2, r3, [r0]
   11d80:	cmp	r2, #0
   11d84:	bne	11d74 <__snprintf_chk@plt+0xea4>
   11d88:	mcr	15, 0, r0, cr7, cr10, {5}
   11d8c:	bx	lr
   11d90:	push	{r4, r5, r6, lr}
   11d94:	subs	r5, r0, #0
   11d98:	blt	11e54 <__snprintf_chk@plt+0xf84>
   11d9c:	mov	r0, #32
   11da0:	bl	136c4 <__snprintf_chk@plt+0x27f4>
   11da4:	mov	r2, #32
   11da8:	mov	r1, #0
   11dac:	mov	r4, r0
   11db0:	bl	10e1c <memset@plt>
   11db4:	mov	r0, r5
   11db8:	bl	12528 <__snprintf_chk@plt+0x1658>
   11dbc:	cmp	r0, #0
   11dc0:	str	r0, [r4, #4]
   11dc4:	beq	11e4c <__snprintf_chk@plt+0xf7c>
   11dc8:	mov	r3, #1
   11dcc:	strh	r3, [r4, #8]
   11dd0:	strb	r3, [r4, #10]
   11dd4:	str	r3, [r4, #12]
   11dd8:	str	r3, [r4, #16]
   11ddc:	bl	13184 <__snprintf_chk@plt+0x22b4>
   11de0:	str	r0, [r4, #20]
   11de4:	bl	13184 <__snprintf_chk@plt+0x22b4>
   11de8:	str	r0, [r4, #24]
   11dec:	bl	13184 <__snprintf_chk@plt+0x22b4>
   11df0:	ldr	r1, [pc, #100]	; 11e5c <__snprintf_chk@plt+0xf8c>
   11df4:	mov	r3, #0
   11df8:	mov	r2, r4
   11dfc:	add	r1, pc, r1
   11e00:	str	r0, [r4, #28]
   11e04:	ldr	r0, [r4, #4]
   11e08:	bl	1261c <__snprintf_chk@plt+0x174c>
   11e0c:	subs	r5, r0, #0
   11e10:	beq	11e20 <__snprintf_chk@plt+0xf50>
   11e14:	mov	r0, r4
   11e18:	pop	{r4, r5, r6, lr}
   11e1c:	b	11d68 <__snprintf_chk@plt+0xe98>
   11e20:	mov	r1, r5
   11e24:	ldr	r0, [r4, #28]
   11e28:	bl	13668 <__snprintf_chk@plt+0x2798>
   11e2c:	mov	r1, r5
   11e30:	ldr	r0, [r4, #24]
   11e34:	bl	13668 <__snprintf_chk@plt+0x2798>
   11e38:	ldr	r0, [r4, #20]
   11e3c:	mov	r1, r5
   11e40:	bl	13668 <__snprintf_chk@plt+0x2798>
   11e44:	ldr	r0, [r4, #4]
   11e48:	bl	125cc <__snprintf_chk@plt+0x16fc>
   11e4c:	mov	r0, r4
   11e50:	bl	10cd8 <free@plt>
   11e54:	mov	r0, #0
   11e58:	pop	{r4, r5, r6, pc}
   11e5c:			; <UNDEFINED> instruction: 0xfffffd44
   11e60:	b	11d90 <__snprintf_chk@plt+0xec0>
   11e64:	push	{r4, r5, r6, lr}
   11e68:	subs	r4, r0, #0
   11e6c:	popeq	{r4, r5, r6, pc}
   11e70:	mcr	15, 0, r0, cr7, cr10, {5}
   11e74:	ldrex	r3, [r4]
   11e78:	sub	r3, r3, #1
   11e7c:	strex	r2, r3, [r4]
   11e80:	cmp	r2, #0
   11e84:	bne	11e74 <__snprintf_chk@plt+0xfa4>
   11e88:	cmp	r3, #0
   11e8c:	mcr	15, 0, r0, cr7, cr10, {5}
   11e90:	popne	{r4, r5, r6, pc}
   11e94:	ldr	r5, [pc, #60]	; 11ed8 <__snprintf_chk@plt+0x1008>
   11e98:	ldr	r1, [pc, #60]	; 11edc <__snprintf_chk@plt+0x100c>
   11e9c:	add	r5, pc, r5
   11ea0:	ldr	r0, [r4, #28]
   11ea4:	add	r1, pc, r1
   11ea8:	bl	13668 <__snprintf_chk@plt+0x2798>
   11eac:	mov	r1, r5
   11eb0:	ldr	r0, [r4, #20]
   11eb4:	bl	13668 <__snprintf_chk@plt+0x2798>
   11eb8:	mov	r1, r5
   11ebc:	ldr	r0, [r4, #24]
   11ec0:	bl	13668 <__snprintf_chk@plt+0x2798>
   11ec4:	ldr	r0, [r4, #4]
   11ec8:	bl	125cc <__snprintf_chk@plt+0x16fc>
   11ecc:	mov	r0, r4
   11ed0:	pop	{r4, r5, r6, lr}
   11ed4:	b	10cd8 <free@plt>
   11ed8:			; <UNDEFINED> instruction: 0xfffffaa4
   11edc:			; <UNDEFINED> instruction: 0xfffffacc
   11ee0:	subs	r3, r0, #0
   11ee4:	bxeq	lr
   11ee8:	ldr	r0, [r3, #4]
   11eec:	b	1260c <__snprintf_chk@plt+0x173c>
   11ef0:	push	{r4, r5, r6, lr}
   11ef4:	mov	r1, #1
   11ef8:	bl	119a0 <__snprintf_chk@plt+0xad0>
   11efc:	subs	r5, r0, #0
   11f00:	movlt	r4, #0
   11f04:	blt	11f24 <__snprintf_chk@plt+0x1054>
   11f08:	bl	11d90 <__snprintf_chk@plt+0xec0>
   11f0c:	subs	r4, r0, #0
   11f10:	beq	11f2c <__snprintf_chk@plt+0x105c>
   11f14:	mov	r3, #0
   11f18:	strb	r3, [r4, #8]
   11f1c:	mov	r1, #1
   11f20:	bl	11ee0 <__snprintf_chk@plt+0x1010>
   11f24:	mov	r0, r4
   11f28:	pop	{r4, r5, r6, pc}
   11f2c:	mov	r0, r5
   11f30:	bl	10ec4 <close@plt>
   11f34:	b	11f24 <__snprintf_chk@plt+0x1054>
   11f38:	ldr	r3, [pc, #184]	; 11ff8 <__snprintf_chk@plt+0x1128>
   11f3c:	ldr	r2, [pc, #184]	; 11ffc <__snprintf_chk@plt+0x112c>
   11f40:	add	r3, pc, r3
   11f44:	push	{r4, r5, r6, r7, lr}
   11f48:	sub	sp, sp, #36	; 0x24
   11f4c:	ldr	r5, [r3, r2]
   11f50:	mov	r1, #0
   11f54:	ldr	r3, [r5]
   11f58:	str	r3, [sp, #28]
   11f5c:	bl	119a0 <__snprintf_chk@plt+0xad0>
   11f60:	subs	r7, r0, #0
   11f64:	movlt	r6, #0
   11f68:	blt	11fc0 <__snprintf_chk@plt+0x10f0>
   11f6c:	mov	r4, #0
   11f70:	mov	r2, #16
   11f74:	mvn	ip, #0
   11f78:	str	r2, [sp]
   11f7c:	str	r2, [sp, #12]
   11f80:	mov	r1, r4
   11f84:	add	r3, sp, #12
   11f88:	mov	r2, #2
   11f8c:	str	r4, [sp, #24]
   11f90:	str	ip, [sp, #16]
   11f94:	str	ip, [sp, #20]
   11f98:	bl	10ca8 <setsockopt@plt>
   11f9c:	cmp	r0, r4
   11fa0:	mov	r0, r7
   11fa4:	blt	11fdc <__snprintf_chk@plt+0x110c>
   11fa8:	bl	11d90 <__snprintf_chk@plt+0xec0>
   11fac:	subs	r6, r0, #0
   11fb0:	beq	11fe8 <__snprintf_chk@plt+0x1118>
   11fb4:	strb	r4, [r6, #8]
   11fb8:	mov	r1, #1
   11fbc:	bl	11ee0 <__snprintf_chk@plt+0x1010>
   11fc0:	ldr	r2, [sp, #28]
   11fc4:	ldr	r3, [r5]
   11fc8:	mov	r0, r6
   11fcc:	cmp	r2, r3
   11fd0:	bne	11ff4 <__snprintf_chk@plt+0x1124>
   11fd4:	add	sp, sp, #36	; 0x24
   11fd8:	pop	{r4, r5, r6, r7, pc}
   11fdc:	bl	10ec4 <close@plt>
   11fe0:	mov	r6, r4
   11fe4:	b	11fc0 <__snprintf_chk@plt+0x10f0>
   11fe8:	mov	r0, r7
   11fec:	bl	10ec4 <close@plt>
   11ff0:	b	11fc0 <__snprintf_chk@plt+0x10f0>
   11ff4:	bl	10d08 <__stack_chk_fail@plt>
   11ff8:	ldrdeq	r6, [r1], -r4
   11ffc:	ldrdeq	r0, [r0], -r4
   12000:	push	{r4, r5, r6, r7, r8, lr}
   12004:	subs	r5, r0, #0
   12008:	beq	120ec <__snprintf_chk@plt+0x121c>
   1200c:	mov	r0, #28
   12010:	mov	r6, r3
   12014:	mov	r7, r1
   12018:	mov	r8, r2
   1201c:	bl	136c4 <__snprintf_chk@plt+0x27f4>
   12020:	cmp	r6, #0
   12024:	mov	r4, r0
   12028:	mov	r0, #0
   1202c:	str	r0, [r4, #4]
   12030:	str	r0, [r4, #12]
   12034:	strh	r7, [r4, #4]
   12038:	str	r0, [r4]
   1203c:	str	r0, [r4, #8]
   12040:	str	r0, [r4, #16]
   12044:	str	r0, [r4, #20]
   12048:	str	r0, [r4, #24]
   1204c:	strb	r6, [r4, #12]
   12050:	bne	120ac <__snprintf_chk@plt+0x11dc>
   12054:	ldr	r3, [r5, #12]
   12058:	mov	r1, r4
   1205c:	cmp	r3, #0
   12060:	addne	r2, r3, #1
   12064:	moveq	r3, #1
   12068:	moveq	r2, #2
   1206c:	str	r2, [r5, #12]
   12070:	str	r3, [r4]
   12074:	ldr	r3, [sp, #24]
   12078:	ldr	r0, [r5, #20]
   1207c:	str	r3, [r4, #16]
   12080:	ldr	r3, [sp, #32]
   12084:	str	r3, [r4, #20]
   12088:	ldr	r3, [sp, #28]
   1208c:	str	r3, [r4, #24]
   12090:	bl	131c8 <__snprintf_chk@plt+0x22f8>
   12094:	subs	r6, r0, #0
   12098:	beq	120d4 <__snprintf_chk@plt+0x1204>
   1209c:	mov	r0, r5
   120a0:	bl	11a7c <__snprintf_chk@plt+0xbac>
   120a4:	ldr	r0, [r4]
   120a8:	pop	{r4, r5, r6, r7, r8, pc}
   120ac:	mov	r0, r6
   120b0:	bl	10d74 <malloc@plt>
   120b4:	cmp	r0, #0
   120b8:	mov	r7, r0
   120bc:	str	r0, [r4, #8]
   120c0:	beq	120f4 <__snprintf_chk@plt+0x1224>
   120c4:	mov	r2, r6
   120c8:	mov	r1, r8
   120cc:	bl	10cf0 <memcpy@plt>
   120d0:	b	12054 <__snprintf_chk@plt+0x1184>
   120d4:	ldr	r0, [r4, #8]
   120d8:	bl	10cd8 <free@plt>
   120dc:	mov	r0, r4
   120e0:	bl	10cd8 <free@plt>
   120e4:	mov	r0, r6
   120e8:	pop	{r4, r5, r6, r7, r8, pc}
   120ec:	mov	r0, r5
   120f0:	pop	{r4, r5, r6, r7, r8, pc}
   120f4:	mov	r0, r4
   120f8:	bl	10cd8 <free@plt>
   120fc:	mov	r0, r7
   12100:	pop	{r4, r5, r6, r7, r8, pc}
   12104:	cmp	r1, #0
   12108:	cmpne	r0, #0
   1210c:	bne	12118 <__snprintf_chk@plt+0x1248>
   12110:	mov	r0, #0
   12114:	bx	lr
   12118:	push	{r4, r5, r6, lr}
   1211c:	mov	r2, r1
   12120:	ldr	r6, [pc, #80]	; 12178 <__snprintf_chk@plt+0x12a8>
   12124:	mov	r5, r1
   12128:	add	r6, pc, r6
   1212c:	mov	r4, r0
   12130:	mov	r1, r6
   12134:	ldr	r0, [r0, #20]
   12138:	bl	134f4 <__snprintf_chk@plt+0x2624>
   1213c:	cmp	r0, #0
   12140:	beq	12158 <__snprintf_chk@plt+0x1288>
   12144:	bl	11948 <__snprintf_chk@plt+0xa78>
   12148:	mov	r0, r4
   1214c:	bl	11a7c <__snprintf_chk@plt+0xbac>
   12150:	mov	r0, #1
   12154:	pop	{r4, r5, r6, pc}
   12158:	mov	r2, r5
   1215c:	mov	r1, r6
   12160:	ldr	r0, [r4, #24]
   12164:	bl	134f4 <__snprintf_chk@plt+0x2624>
   12168:	cmp	r0, #0
   1216c:	bne	12144 <__snprintf_chk@plt+0x1274>
   12170:	mov	r0, #0
   12174:	pop	{r4, r5, r6, pc}
   12178:			; <UNDEFINED> instruction: 0xfffff7f0
   1217c:	push	{r4, r5, r6, lr}
   12180:	subs	r4, r0, #0
   12184:	beq	121ec <__snprintf_chk@plt+0x131c>
   12188:	ldrb	r3, [r4, #9]
   1218c:	cmp	r3, #0
   12190:	bne	121cc <__snprintf_chk@plt+0x12fc>
   12194:	ldr	r5, [pc, #88]	; 121f4 <__snprintf_chk@plt+0x1324>
   12198:	mov	r2, #0
   1219c:	add	r5, pc, r5
   121a0:	mov	r3, r5
   121a4:	mov	r1, r2
   121a8:	ldr	r0, [r4, #20]
   121ac:	bl	135a0 <__snprintf_chk@plt+0x26d0>
   121b0:	mov	r2, #0
   121b4:	mov	r3, r5
   121b8:	ldr	r0, [r4, #24]
   121bc:	mov	r1, r2
   121c0:	bl	135a0 <__snprintf_chk@plt+0x26d0>
   121c4:	mov	r0, #1
   121c8:	pop	{r4, r5, r6, pc}
   121cc:	mov	r3, #0
   121d0:	mov	r2, r3
   121d4:	mov	r1, r3
   121d8:	ldr	r0, [r4, #4]
   121dc:	bl	126a8 <__snprintf_chk@plt+0x17d8>
   121e0:	mov	r3, #0
   121e4:	strb	r3, [r4, #9]
   121e8:	b	12194 <__snprintf_chk@plt+0x12c4>
   121ec:	mov	r0, r4
   121f0:	pop	{r4, r5, r6, pc}
   121f4:			; <UNDEFINED> instruction: 0xfffff7a4
   121f8:	push	{r4, r5, r6, r7, r8, lr}
   121fc:	subs	r5, r0, #0
   12200:	beq	12280 <__snprintf_chk@plt+0x13b0>
   12204:	mov	r0, #20
   12208:	mov	r7, r2
   1220c:	mov	r6, r3
   12210:	mov	r8, r1
   12214:	bl	136c4 <__snprintf_chk@plt+0x27f4>
   12218:	mov	r4, r0
   1221c:	mov	r0, #0
   12220:	str	r0, [r4, #4]
   12224:	str	r0, [r4]
   12228:	str	r0, [r4, #8]
   1222c:	str	r0, [r4, #12]
   12230:	str	r0, [r4, #16]
   12234:	strb	r8, [r4, #4]
   12238:	ldr	r3, [r5, #16]
   1223c:	mov	r1, r4
   12240:	cmp	r3, r0
   12244:	addne	r2, r3, #1
   12248:	moveq	r3, #1
   1224c:	moveq	r2, #2
   12250:	str	r2, [r5, #16]
   12254:	ldr	r0, [r5, #28]
   12258:	str	r3, [r4]
   1225c:	ldr	r3, [sp, #24]
   12260:	str	r7, [r4, #8]
   12264:	str	r3, [r4, #12]
   12268:	str	r6, [r4, #16]
   1226c:	bl	131c8 <__snprintf_chk@plt+0x22f8>
   12270:	subs	r5, r0, #0
   12274:	beq	12288 <__snprintf_chk@plt+0x13b8>
   12278:	ldr	r0, [r4]
   1227c:	pop	{r4, r5, r6, r7, r8, pc}
   12280:	mov	r0, r5
   12284:	pop	{r4, r5, r6, r7, r8, pc}
   12288:	mov	r0, r4
   1228c:	bl	10cd8 <free@plt>
   12290:	mov	r0, r5
   12294:	pop	{r4, r5, r6, r7, r8, pc}
   12298:	cmp	r1, #0
   1229c:	cmpne	r0, #0
   122a0:	bne	122ac <__snprintf_chk@plt+0x13dc>
   122a4:	mov	r0, #0
   122a8:	bx	lr
   122ac:	mov	r2, r1
   122b0:	ldr	r1, [pc, #64]	; 122f8 <__snprintf_chk@plt+0x1428>
   122b4:	push	{r4, lr}
   122b8:	add	r1, pc, r1
   122bc:	ldr	r0, [r0, #28]
   122c0:	bl	134f4 <__snprintf_chk@plt+0x2624>
   122c4:	subs	r4, r0, #0
   122c8:	beq	122f0 <__snprintf_chk@plt+0x1420>
   122cc:	ldr	r3, [r4, #12]
   122d0:	cmp	r3, #0
   122d4:	beq	122e0 <__snprintf_chk@plt+0x1410>
   122d8:	ldr	r0, [r4, #16]
   122dc:	blx	r3
   122e0:	mov	r0, r4
   122e4:	bl	10cd8 <free@plt>
   122e8:	mov	r0, #1
   122ec:	pop	{r4, pc}
   122f0:	mov	r0, #0
   122f4:	pop	{r4, pc}
   122f8:			; <UNDEFINED> instruction: 0xfffff674
   122fc:	ldr	r3, [r0, #32]
   12300:	push	{r4, lr}
   12304:	cmp	r3, #0
   12308:	mov	r4, r0
   1230c:	beq	12318 <__snprintf_chk@plt+0x1448>
   12310:	ldr	r0, [r0, #36]	; 0x24
   12314:	blx	r3
   12318:	ldr	r3, [r4, #20]
   1231c:	cmp	r3, #0
   12320:	beq	1232c <__snprintf_chk@plt+0x145c>
   12324:	ldr	r0, [r4, #24]
   12328:	blx	r3
   1232c:	ldr	r3, [r4, #44]	; 0x2c
   12330:	cmp	r3, #0
   12334:	beq	12340 <__snprintf_chk@plt+0x1470>
   12338:	ldr	r0, [r4, #48]	; 0x30
   1233c:	blx	r3
   12340:	ldrb	r3, [r4, #12]
   12344:	cmp	r3, #0
   12348:	bne	12358 <__snprintf_chk@plt+0x1488>
   1234c:	mvn	r3, #0
   12350:	str	r3, [r4, #4]
   12354:	pop	{r4, pc}
   12358:	ldr	r0, [r4, #4]
   1235c:	bl	10ec4 <close@plt>
   12360:	b	1234c <__snprintf_chk@plt+0x147c>
   12364:	mov	r3, r0
   12368:	mcr	15, 0, r0, cr7, cr10, {5}
   1236c:	ldrex	r2, [r3]
   12370:	sub	r2, r2, #1
   12374:	strex	r1, r2, [r3]
   12378:	cmp	r1, #0
   1237c:	bne	1236c <__snprintf_chk@plt+0x149c>
   12380:	cmp	r2, #0
   12384:	mcr	15, 0, r0, cr7, cr10, {5}
   12388:	bxne	lr
   1238c:	b	10cd8 <free@plt>
   12390:	push	{r4, r5, r6, lr}
   12394:	subs	r4, r2, #0
   12398:	mov	r5, r1
   1239c:	beq	123bc <__snprintf_chk@plt+0x14ec>
   123a0:	mcr	15, 0, r0, cr7, cr10, {5}
   123a4:	ldrex	r3, [r4]
   123a8:	add	r3, r3, #1
   123ac:	strex	r2, r3, [r4]
   123b0:	cmp	r2, #0
   123b4:	bne	123a4 <__snprintf_chk@plt+0x14d4>
   123b8:	mcr	15, 0, r0, cr7, cr10, {5}
   123bc:	ldr	r3, [pc, #352]	; 12524 <__snprintf_chk@plt+0x1654>
   123c0:	tst	r5, r3
   123c4:	beq	1242c <__snprintf_chk@plt+0x155c>
   123c8:	ldr	r2, [r4, #40]	; 0x28
   123cc:	mov	r3, #0
   123d0:	cmp	r2, r3
   123d4:	str	r3, [r4, #16]
   123d8:	str	r3, [r4, #28]
   123dc:	beq	12510 <__snprintf_chk@plt+0x1640>
   123e0:	ldr	r1, [r4, #48]	; 0x30
   123e4:	mov	r0, r4
   123e8:	blx	r2
   123ec:	cmp	r0, #0
   123f0:	bne	1242c <__snprintf_chk@plt+0x155c>
   123f4:	ldr	r3, [r4, #44]	; 0x2c
   123f8:	cmp	r3, #0
   123fc:	beq	12408 <__snprintf_chk@plt+0x1538>
   12400:	ldr	r0, [r4, #48]	; 0x30
   12404:	blx	r3
   12408:	ldr	r1, [r4, #8]
   1240c:	mov	r3, #0
   12410:	bic	r1, r1, #8192	; 0x2000
   12414:	str	r1, [r4, #8]
   12418:	str	r3, [r4, #40]	; 0x28
   1241c:	str	r3, [r4, #44]	; 0x2c
   12420:	str	r3, [r4, #48]	; 0x30
   12424:	ldr	r0, [r4, #4]
   12428:	bl	12b30 <__snprintf_chk@plt+0x1c60>
   1242c:	tst	r5, #1
   12430:	and	r5, r5, #4
   12434:	beq	124fc <__snprintf_chk@plt+0x162c>
   12438:	ldr	r3, [r4, #16]
   1243c:	cmp	r3, #0
   12440:	beq	12490 <__snprintf_chk@plt+0x15c0>
   12444:	ldr	r1, [r4, #24]
   12448:	mov	r0, r4
   1244c:	blx	r3
   12450:	cmp	r0, #0
   12454:	bne	12490 <__snprintf_chk@plt+0x15c0>
   12458:	ldr	r3, [r4, #20]
   1245c:	cmp	r3, #0
   12460:	beq	1246c <__snprintf_chk@plt+0x159c>
   12464:	ldr	r0, [r4, #24]
   12468:	blx	r3
   1246c:	ldr	r1, [r4, #8]
   12470:	mov	r3, #0
   12474:	bic	r1, r1, #1
   12478:	str	r1, [r4, #8]
   1247c:	str	r3, [r4, #16]
   12480:	str	r3, [r4, #20]
   12484:	str	r3, [r4, #24]
   12488:	ldr	r0, [r4, #4]
   1248c:	bl	12b30 <__snprintf_chk@plt+0x1c60>
   12490:	cmp	r5, #0
   12494:	beq	124f0 <__snprintf_chk@plt+0x1620>
   12498:	ldr	r3, [r4, #28]
   1249c:	cmp	r3, #0
   124a0:	beq	124f0 <__snprintf_chk@plt+0x1620>
   124a4:	ldr	r1, [r4, #36]	; 0x24
   124a8:	mov	r0, r4
   124ac:	blx	r3
   124b0:	cmp	r0, #0
   124b4:	bne	124f0 <__snprintf_chk@plt+0x1620>
   124b8:	ldr	r3, [r4, #32]
   124bc:	cmp	r3, #0
   124c0:	beq	124cc <__snprintf_chk@plt+0x15fc>
   124c4:	ldr	r0, [r4, #36]	; 0x24
   124c8:	blx	r3
   124cc:	ldr	r1, [r4, #8]
   124d0:	mov	r3, #0
   124d4:	bic	r1, r1, #4
   124d8:	str	r1, [r4, #8]
   124dc:	str	r3, [r4, #28]
   124e0:	str	r3, [r4, #32]
   124e4:	str	r3, [r4, #36]	; 0x24
   124e8:	ldr	r0, [r4, #4]
   124ec:	bl	12b30 <__snprintf_chk@plt+0x1c60>
   124f0:	mov	r0, r4
   124f4:	pop	{r4, r5, r6, lr}
   124f8:	b	12364 <__snprintf_chk@plt+0x1494>
   124fc:	cmp	r5, #0
   12500:	bne	12498 <__snprintf_chk@plt+0x15c8>
   12504:	cmp	r4, #0
   12508:	popeq	{r4, r5, r6, pc}
   1250c:	b	124f0 <__snprintf_chk@plt+0x1620>
   12510:	ldr	r0, [r4, #4]
   12514:	bl	12be0 <__snprintf_chk@plt+0x1d10>
   12518:	mov	r0, r4
   1251c:	pop	{r4, r5, r6, lr}
   12520:	b	12364 <__snprintf_chk@plt+0x1494>
   12524:	andeq	r2, r0, r8, lsl r0
   12528:	push	{r4, r5, r6, lr}
   1252c:	subs	r5, r0, #0
   12530:	sub	sp, sp, #8
   12534:	movlt	r4, #0
   12538:	blt	125a8 <__snprintf_chk@plt+0x16d8>
   1253c:	mov	r0, #52	; 0x34
   12540:	bl	136c4 <__snprintf_chk@plt+0x27f4>
   12544:	mov	r2, #52	; 0x34
   12548:	mov	r1, #0
   1254c:	mov	r6, #0
   12550:	mov	r4, r0
   12554:	bl	10e1c <memset@plt>
   12558:	ldr	r2, [pc, #100]	; 125c4 <__snprintf_chk@plt+0x16f4>
   1255c:	str	r5, [r4, #4]
   12560:	add	r2, pc, r2
   12564:	strb	r6, [r4, #12]
   12568:	str	r2, [sp]
   1256c:	ldr	r2, [pc, #84]	; 125c8 <__snprintf_chk@plt+0x16f8>
   12570:	mov	r0, r5
   12574:	mov	r3, r4
   12578:	mov	r1, r6
   1257c:	add	r2, pc, r2
   12580:	bl	12a30 <__snprintf_chk@plt+0x1b60>
   12584:	cmp	r0, r6
   12588:	blt	125b4 <__snprintf_chk@plt+0x16e4>
   1258c:	mcr	15, 0, r0, cr7, cr10, {5}
   12590:	ldrex	r3, [r4]
   12594:	add	r3, r3, #1
   12598:	strex	r2, r3, [r4]
   1259c:	cmp	r2, #0
   125a0:	bne	12590 <__snprintf_chk@plt+0x16c0>
   125a4:	mcr	15, 0, r0, cr7, cr10, {5}
   125a8:	mov	r0, r4
   125ac:	add	sp, sp, #8
   125b0:	pop	{r4, r5, r6, pc}
   125b4:	mov	r0, r4
   125b8:	bl	10cd8 <free@plt>
   125bc:	mov	r4, r6
   125c0:	b	125a8 <__snprintf_chk@plt+0x16d8>
   125c4:			; <UNDEFINED> instruction: 0xfffffd94
   125c8:			; <UNDEFINED> instruction: 0xfffffe0c
   125cc:	push	{r4, lr}
   125d0:	subs	r4, r0, #0
   125d4:	popeq	{r4, pc}
   125d8:	mov	r3, #0
   125dc:	str	r3, [r4, #16]
   125e0:	str	r3, [r4, #28]
   125e4:	str	r3, [r4, #40]	; 0x28
   125e8:	ldr	r0, [r4, #4]
   125ec:	bl	12be0 <__snprintf_chk@plt+0x1d10>
   125f0:	mov	r0, r4
   125f4:	pop	{r4, lr}
   125f8:	b	12364 <__snprintf_chk@plt+0x1494>
   125fc:	cmp	r0, #0
   12600:	ldrne	r0, [r0, #4]
   12604:	mvneq	r0, #106	; 0x6a
   12608:	bx	lr
   1260c:	cmp	r0, #0
   12610:	strbne	r1, [r0, #12]
   12614:	movne	r0, #1
   12618:	bx	lr
   1261c:	push	{r4, r5, r6, r7, r8, lr}
   12620:	subs	r4, r0, #0
   12624:	beq	12698 <__snprintf_chk@plt+0x17c8>
   12628:	ldr	r0, [r4, #4]
   1262c:	cmp	r0, #0
   12630:	blt	12698 <__snprintf_chk@plt+0x17c8>
   12634:	mov	r7, r3
   12638:	ldr	r3, [r4, #20]
   1263c:	mov	r6, r2
   12640:	cmp	r3, #0
   12644:	mov	r5, r1
   12648:	beq	12654 <__snprintf_chk@plt+0x1784>
   1264c:	ldr	r0, [r4, #24]
   12650:	blx	r3
   12654:	ldr	r3, [r4, #8]
   12658:	cmp	r5, #0
   1265c:	orrne	r8, r3, #1
   12660:	biceq	r8, r3, #1
   12664:	cmp	r8, r3
   12668:	str	r5, [r4, #16]
   1266c:	str	r7, [r4, #20]
   12670:	str	r6, [r4, #24]
   12674:	beq	126a0 <__snprintf_chk@plt+0x17d0>
   12678:	mov	r1, r8
   1267c:	ldr	r0, [r4, #4]
   12680:	bl	12b30 <__snprintf_chk@plt+0x1c60>
   12684:	cmp	r0, #0
   12688:	blt	12698 <__snprintf_chk@plt+0x17c8>
   1268c:	str	r8, [r4, #8]
   12690:	mov	r0, #1
   12694:	pop	{r4, r5, r6, r7, r8, pc}
   12698:	mov	r0, #0
   1269c:	pop	{r4, r5, r6, r7, r8, pc}
   126a0:	mov	r0, #1
   126a4:	pop	{r4, r5, r6, r7, r8, pc}
   126a8:	push	{r4, r5, r6, r7, r8, lr}
   126ac:	subs	r4, r0, #0
   126b0:	beq	12724 <__snprintf_chk@plt+0x1854>
   126b4:	ldr	r0, [r4, #4]
   126b8:	cmp	r0, #0
   126bc:	blt	12724 <__snprintf_chk@plt+0x1854>
   126c0:	mov	r7, r3
   126c4:	ldr	r3, [r4, #32]
   126c8:	mov	r6, r2
   126cc:	cmp	r3, #0
   126d0:	mov	r5, r1
   126d4:	beq	126e0 <__snprintf_chk@plt+0x1810>
   126d8:	ldr	r0, [r4, #36]	; 0x24
   126dc:	blx	r3
   126e0:	ldr	r3, [r4, #8]
   126e4:	cmp	r5, #0
   126e8:	orrne	r8, r3, #4
   126ec:	biceq	r8, r3, #4
   126f0:	cmp	r8, r3
   126f4:	str	r5, [r4, #28]
   126f8:	str	r7, [r4, #32]
   126fc:	str	r6, [r4, #36]	; 0x24
   12700:	beq	1272c <__snprintf_chk@plt+0x185c>
   12704:	mov	r1, r8
   12708:	ldr	r0, [r4, #4]
   1270c:	bl	12b30 <__snprintf_chk@plt+0x1c60>
   12710:	cmp	r0, #0
   12714:	blt	12724 <__snprintf_chk@plt+0x1854>
   12718:	str	r8, [r4, #8]
   1271c:	mov	r0, #1
   12720:	pop	{r4, r5, r6, r7, r8, pc}
   12724:	mov	r0, #0
   12728:	pop	{r4, r5, r6, r7, r8, pc}
   1272c:	mov	r0, #1
   12730:	pop	{r4, r5, r6, r7, r8, pc}
   12734:	push	{r4, r5, r6, r7, r8, lr}
   12738:	subs	r4, r0, #0
   1273c:	beq	127b0 <__snprintf_chk@plt+0x18e0>
   12740:	ldr	r0, [r4, #4]
   12744:	cmp	r0, #0
   12748:	blt	127b0 <__snprintf_chk@plt+0x18e0>
   1274c:	mov	r7, r3
   12750:	ldr	r3, [r4, #44]	; 0x2c
   12754:	mov	r6, r2
   12758:	cmp	r3, #0
   1275c:	mov	r5, r1
   12760:	beq	1276c <__snprintf_chk@plt+0x189c>
   12764:	ldr	r0, [r4, #48]	; 0x30
   12768:	blx	r3
   1276c:	ldr	r3, [r4, #8]
   12770:	cmp	r5, #0
   12774:	orrne	r8, r3, #8192	; 0x2000
   12778:	biceq	r8, r3, #8192	; 0x2000
   1277c:	cmp	r8, r3
   12780:	str	r5, [r4, #40]	; 0x28
   12784:	str	r7, [r4, #44]	; 0x2c
   12788:	str	r6, [r4, #48]	; 0x30
   1278c:	beq	127b8 <__snprintf_chk@plt+0x18e8>
   12790:	mov	r1, r8
   12794:	ldr	r0, [r4, #4]
   12798:	bl	12b30 <__snprintf_chk@plt+0x1c60>
   1279c:	cmp	r0, #0
   127a0:	blt	127b0 <__snprintf_chk@plt+0x18e0>
   127a4:	str	r8, [r4, #8]
   127a8:	mov	r0, #1
   127ac:	pop	{r4, r5, r6, r7, r8, pc}
   127b0:	mov	r0, #0
   127b4:	pop	{r4, r5, r6, r7, r8, pc}
   127b8:	mov	r0, #1
   127bc:	pop	{r4, r5, r6, r7, r8, pc}
   127c0:	push	{r4, r5, r6, lr}
   127c4:	subs	r4, r0, #0
   127c8:	beq	12814 <__snprintf_chk@plt+0x1944>
   127cc:	ldr	r0, [r4, #4]
   127d0:	mov	r6, r2
   127d4:	cmp	r0, #0
   127d8:	mov	r5, r1
   127dc:	bge	127e8 <__snprintf_chk@plt+0x1918>
   127e0:	b	12814 <__snprintf_chk@plt+0x1944>
   127e4:	ldr	r0, [r4, #4]
   127e8:	mov	r2, r6
   127ec:	mov	r1, r5
   127f0:	bl	10e40 <writev@plt>
   127f4:	cmp	r0, #0
   127f8:	popge	{r4, r5, r6, pc}
   127fc:	bl	10df8 <__errno_location@plt>
   12800:	ldr	r3, [r0]
   12804:	cmp	r3, #4
   12808:	beq	127e4 <__snprintf_chk@plt+0x1914>
   1280c:	rsb	r0, r3, #0
   12810:	pop	{r4, r5, r6, pc}
   12814:	mvn	r0, #106	; 0x6a
   12818:	pop	{r4, r5, r6, pc}
   1281c:	cmp	r0, #0
   12820:	bxeq	lr
   12824:	ldr	r0, [r0, #4]
   12828:	cmp	r0, #0
   1282c:	blt	12848 <__snprintf_chk@plt+0x1978>
   12830:	push	{r4, lr}
   12834:	mov	r1, #2
   12838:	bl	10e4c <shutdown@plt>
   1283c:	clz	r0, r0
   12840:	lsr	r0, r0, #5
   12844:	pop	{r4, pc}
   12848:	mov	r0, #0
   1284c:	bx	lr
   12850:	push	{r4, lr}
   12854:	mov	r4, r0
   12858:	ldr	r0, [r0]
   1285c:	bl	10ec4 <close@plt>
   12860:	ldr	r3, [r4, #8]
   12864:	mvn	r2, #0
   12868:	cmp	r3, #0
   1286c:	str	r2, [r4]
   12870:	beq	1287c <__snprintf_chk@plt+0x19ac>
   12874:	ldr	r0, [r4, #12]
   12878:	blx	r3
   1287c:	mov	r0, r4
   12880:	pop	{r4, lr}
   12884:	b	10cd8 <free@plt>
   12888:	ldr	r3, [pc, #116]	; 12904 <__snprintf_chk@plt+0x1a34>
   1288c:	ldr	r0, [pc, #116]	; 12908 <__snprintf_chk@plt+0x1a38>
   12890:	add	r3, pc, r3
   12894:	push	{r4, r5, lr}
   12898:	sub	sp, sp, #20
   1289c:	ldr	r4, [r3, r0]
   128a0:	tst	r1, #24
   128a4:	ldr	r3, [r4]
   128a8:	str	r3, [sp, #12]
   128ac:	beq	128c8 <__snprintf_chk@plt+0x19f8>
   128b0:	ldr	r2, [sp, #12]
   128b4:	ldr	r3, [r4]
   128b8:	cmp	r2, r3
   128bc:	bne	12900 <__snprintf_chk@plt+0x1a30>
   128c0:	add	sp, sp, #20
   128c4:	pop	{r4, r5, pc}
   128c8:	mov	r5, r2
   128cc:	mov	r1, sp
   128d0:	mov	r2, #8
   128d4:	ldr	r0, [r5]
   128d8:	bl	10cb4 <read@plt>
   128dc:	cmp	r0, #8
   128e0:	bne	128b0 <__snprintf_chk@plt+0x19e0>
   128e4:	ldr	r3, [r5, #4]
   128e8:	cmp	r3, #0
   128ec:	beq	128b0 <__snprintf_chk@plt+0x19e0>
   128f0:	ldr	r1, [r5, #12]
   128f4:	ldr	r0, [r5]
   128f8:	blx	r3
   128fc:	b	128b0 <__snprintf_chk@plt+0x19e0>
   12900:	bl	10d08 <__stack_chk_fail@plt>
   12904:	andeq	r6, r1, r4, lsl #13
   12908:	ldrdeq	r0, [r0], -r4
   1290c:	push	{r4, lr}
   12910:	mov	r0, #524288	; 0x80000
   12914:	bl	10eb8 <epoll_create1@plt>
   12918:	ldr	ip, [pc, #44]	; 1294c <__snprintf_chk@plt+0x1a7c>
   1291c:	mov	r2, #0
   12920:	add	ip, pc, ip
   12924:	mov	r3, ip
   12928:	add	r1, ip, #512	; 0x200
   1292c:	str	r0, [ip]
   12930:	str	r2, [r3, #4]!
   12934:	cmp	r3, r1
   12938:	bne	12930 <__snprintf_chk@plt+0x1a60>
   1293c:	ldr	r3, [pc, #12]	; 12950 <__snprintf_chk@plt+0x1a80>
   12940:	add	r3, pc, r3
   12944:	str	r2, [r3, #516]	; 0x204
   12948:	pop	{r4, pc}
   1294c:	strdeq	r6, [r1], -r8
   12950:	ldrdeq	r6, [r1], -r8
   12954:	ldr	r3, [pc, #12]	; 12968 <__snprintf_chk@plt+0x1a98>
   12958:	mov	r2, #1
   1295c:	add	r3, pc, r3
   12960:	str	r2, [r3, #516]	; 0x204
   12964:	bx	lr
   12968:			; <UNDEFINED> instruction: 0x000166bc
   1296c:	ldr	r3, [pc, #120]	; 129ec <__snprintf_chk@plt+0x1b1c>
   12970:	ldr	ip, [pc, #120]	; 129f0 <__snprintf_chk@plt+0x1b20>
   12974:	add	r3, pc, r3
   12978:	push	{r4, r5, lr}
   1297c:	sub	sp, sp, #140	; 0x8c
   12980:	ldr	r4, [r3, ip]
   12984:	tst	r1, #24
   12988:	ldr	r3, [r4]
   1298c:	str	r3, [sp, #132]	; 0x84
   12990:	bne	129e0 <__snprintf_chk@plt+0x1b10>
   12994:	mov	r5, r2
   12998:	mov	r1, sp
   1299c:	mov	r2, #128	; 0x80
   129a0:	bl	10cb4 <read@plt>
   129a4:	cmp	r0, #128	; 0x80
   129a8:	beq	129c4 <__snprintf_chk@plt+0x1af4>
   129ac:	ldr	r2, [sp, #132]	; 0x84
   129b0:	ldr	r3, [r4]
   129b4:	cmp	r2, r3
   129b8:	bne	129e8 <__snprintf_chk@plt+0x1b18>
   129bc:	add	sp, sp, #140	; 0x8c
   129c0:	pop	{r4, r5, pc}
   129c4:	ldr	r3, [r5, #132]	; 0x84
   129c8:	cmp	r3, #0
   129cc:	beq	129ac <__snprintf_chk@plt+0x1adc>
   129d0:	ldr	r1, [r5, #140]	; 0x8c
   129d4:	ldr	r0, [sp]
   129d8:	blx	r3
   129dc:	b	129ac <__snprintf_chk@plt+0x1adc>
   129e0:	bl	12954 <__snprintf_chk@plt+0x1a84>
   129e4:	b	129ac <__snprintf_chk@plt+0x1adc>
   129e8:	bl	10d08 <__stack_chk_fail@plt>
   129ec:	andeq	r6, r1, r0, lsr #11
   129f0:	ldrdeq	r0, [r0], -r4
   129f4:	ldr	r3, [pc, #20]	; 12a10 <__snprintf_chk@plt+0x1b40>
   129f8:	mov	r1, #0
   129fc:	add	r3, pc, r3
   12a00:	mov	r2, #1
   12a04:	str	r1, [r3, #520]	; 0x208
   12a08:	str	r2, [r3, #516]	; 0x204
   12a0c:	bx	lr
   12a10:	andeq	r6, r1, ip, lsl r6
   12a14:	ldr	r3, [pc, #16]	; 12a2c <__snprintf_chk@plt+0x1b5c>
   12a18:	mov	r2, #1
   12a1c:	add	r3, pc, r3
   12a20:	str	r2, [r3, #520]	; 0x208
   12a24:	str	r2, [r3, #516]	; 0x204
   12a28:	bx	lr
   12a2c:	strdeq	r6, [r1], -ip
   12a30:	ldr	ip, [pc, #236]	; 12b24 <__snprintf_chk@plt+0x1c54>
   12a34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a38:	add	ip, pc, ip
   12a3c:	ldr	lr, [pc, #228]	; 12b28 <__snprintf_chk@plt+0x1c58>
   12a40:	mov	r7, r0
   12a44:	mov	r0, ip
   12a48:	ldr	ip, [ip, lr]
   12a4c:	sub	sp, sp, #36	; 0x24
   12a50:	clz	r4, r2
   12a54:	lsr	r4, r4, #5
   12a58:	str	ip, [sp, #4]
   12a5c:	cmp	r7, #127	; 0x7f
   12a60:	orrhi	r4, r4, #1
   12a64:	ldr	ip, [ip]
   12a68:	cmp	r4, #0
   12a6c:	str	ip, [sp, #28]
   12a70:	ldr	fp, [sp, #72]	; 0x48
   12a74:	bne	12b10 <__snprintf_chk@plt+0x1c40>
   12a78:	mov	r0, #20
   12a7c:	mov	r9, r1
   12a80:	mov	sl, r3
   12a84:	mov	r8, r2
   12a88:	bl	10d74 <malloc@plt>
   12a8c:	subs	r5, r0, #0
   12a90:	beq	12b18 <__snprintf_chk@plt+0x1c48>
   12a94:	ldr	r6, [pc, #144]	; 12b2c <__snprintf_chk@plt+0x1c5c>
   12a98:	stm	r5, {r7, r9}
   12a9c:	add	r6, pc, r6
   12aa0:	str	r8, [r5, #8]
   12aa4:	ldr	r0, [r6]
   12aa8:	str	fp, [r5, #12]
   12aac:	str	sl, [r5, #16]
   12ab0:	add	r3, sp, #8
   12ab4:	mov	r2, r7
   12ab8:	mov	r1, #1
   12abc:	str	r9, [sp, #8]
   12ac0:	str	r4, [sp, #12]
   12ac4:	str	r4, [sp, #20]
   12ac8:	str	r5, [sp, #16]
   12acc:	bl	10d98 <epoll_ctl@plt>
   12ad0:	subs	r9, r0, #0
   12ad4:	addge	r6, r6, r7, lsl #2
   12ad8:	movge	r9, r4
   12adc:	strge	r5, [r6, #4]
   12ae0:	blt	12b04 <__snprintf_chk@plt+0x1c34>
   12ae4:	ldr	r3, [sp, #4]
   12ae8:	ldr	r2, [sp, #28]
   12aec:	mov	r0, r9
   12af0:	ldr	r3, [r3]
   12af4:	cmp	r2, r3
   12af8:	bne	12b20 <__snprintf_chk@plt+0x1c50>
   12afc:	add	sp, sp, #36	; 0x24
   12b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b04:	mov	r0, r5
   12b08:	bl	10cd8 <free@plt>
   12b0c:	b	12ae4 <__snprintf_chk@plt+0x1c14>
   12b10:	mvn	r9, #21
   12b14:	b	12ae4 <__snprintf_chk@plt+0x1c14>
   12b18:	mvn	r9, #11
   12b1c:	b	12ae4 <__snprintf_chk@plt+0x1c14>
   12b20:	bl	10d08 <__stack_chk_fail@plt>
   12b24:	ldrdeq	r6, [r1], -ip
   12b28:	ldrdeq	r0, [r0], -r4
   12b2c:	andeq	r6, r1, ip, ror r5
   12b30:	ldr	r3, [pc, #156]	; 12bd4 <__snprintf_chk@plt+0x1d04>
   12b34:	ldr	r2, [pc, #156]	; 12bd8 <__snprintf_chk@plt+0x1d08>
   12b38:	add	r3, pc, r3
   12b3c:	push	{r4, r5, r6, r7, lr}
   12b40:	sub	sp, sp, #28
   12b44:	ldr	r6, [r3, r2]
   12b48:	cmp	r0, #127	; 0x7f
   12b4c:	ldr	r3, [r6]
   12b50:	str	r3, [sp, #20]
   12b54:	bhi	12bc0 <__snprintf_chk@plt+0x1cf0>
   12b58:	ldr	r3, [pc, #124]	; 12bdc <__snprintf_chk@plt+0x1d0c>
   12b5c:	add	r3, pc, r3
   12b60:	add	r0, r3, r0, lsl #2
   12b64:	ldr	r4, [r0, #4]
   12b68:	cmp	r4, #0
   12b6c:	beq	12bc8 <__snprintf_chk@plt+0x1cf8>
   12b70:	mov	r5, #0
   12b74:	mov	r7, r1
   12b78:	ldr	r0, [r3]
   12b7c:	str	r5, [sp, #12]
   12b80:	str	r5, [sp, #4]
   12b84:	mov	r3, sp
   12b88:	ldr	r2, [r4]
   12b8c:	mov	r1, #3
   12b90:	str	r7, [sp]
   12b94:	str	r4, [sp, #8]
   12b98:	bl	10d98 <epoll_ctl@plt>
   12b9c:	cmp	r0, #0
   12ba0:	movge	r0, r5
   12ba4:	strge	r7, [r4, #4]
   12ba8:	ldr	r2, [sp, #20]
   12bac:	ldr	r3, [r6]
   12bb0:	cmp	r2, r3
   12bb4:	bne	12bd0 <__snprintf_chk@plt+0x1d00>
   12bb8:	add	sp, sp, #28
   12bbc:	pop	{r4, r5, r6, r7, pc}
   12bc0:	mvn	r0, #21
   12bc4:	b	12ba8 <__snprintf_chk@plt+0x1cd8>
   12bc8:	mvn	r0, #5
   12bcc:	b	12ba8 <__snprintf_chk@plt+0x1cd8>
   12bd0:	bl	10d08 <__stack_chk_fail@plt>
   12bd4:	ldrdeq	r6, [r1], -ip
   12bd8:	ldrdeq	r0, [r0], -r4
   12bdc:			; <UNDEFINED> instruction: 0x000164bc
   12be0:	cmp	r0, #127	; 0x7f
   12be4:	push	{r4, r5, r6, lr}
   12be8:	bhi	12c48 <__snprintf_chk@plt+0x1d78>
   12bec:	ldr	r3, [pc, #100]	; 12c58 <__snprintf_chk@plt+0x1d88>
   12bf0:	add	r3, pc, r3
   12bf4:	add	r1, r3, r0, lsl #2
   12bf8:	ldr	r4, [r1, #4]
   12bfc:	cmp	r4, #0
   12c00:	beq	12c50 <__snprintf_chk@plt+0x1d80>
   12c04:	mov	ip, #0
   12c08:	ldr	r0, [r3]
   12c0c:	ldr	r2, [r4]
   12c10:	mov	r3, ip
   12c14:	str	ip, [r1, #4]
   12c18:	mov	r1, #2
   12c1c:	bl	10d98 <epoll_ctl@plt>
   12c20:	ldr	r3, [r4, #12]
   12c24:	cmp	r3, #0
   12c28:	mov	r5, r0
   12c2c:	beq	12c38 <__snprintf_chk@plt+0x1d68>
   12c30:	ldr	r0, [r4, #16]
   12c34:	blx	r3
   12c38:	mov	r0, r4
   12c3c:	bl	10cd8 <free@plt>
   12c40:	mov	r0, r5
   12c44:	pop	{r4, r5, r6, pc}
   12c48:	mvn	r5, #21
   12c4c:	b	12c40 <__snprintf_chk@plt+0x1d70>
   12c50:	mvn	r5, #5
   12c54:	b	12c40 <__snprintf_chk@plt+0x1d70>
   12c58:	andeq	r6, r1, r8, lsr #8
   12c5c:	ldr	r3, [pc, #484]	; 12e48 <__snprintf_chk@plt+0x1f78>
   12c60:	ldr	r2, [pc, #484]	; 12e4c <__snprintf_chk@plt+0x1f7c>
   12c64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12c68:	add	r3, pc, r3
   12c6c:	ldr	r5, [pc, #476]	; 12e50 <__snprintf_chk@plt+0x1f80>
   12c70:	ldr	r8, [r3, r2]
   12c74:	add	r5, pc, r5
   12c78:	sub	sp, sp, #176	; 0xb0
   12c7c:	ldr	r4, [r5, #524]	; 0x20c
   12c80:	ldr	r3, [r8]
   12c84:	cmp	r4, #0
   12c88:	str	r3, [sp, #172]	; 0xac
   12c8c:	beq	12cec <__snprintf_chk@plt+0x1e1c>
   12c90:	mov	r2, #0
   12c94:	add	r6, r4, #4
   12c98:	mov	r1, r6
   12c9c:	mov	r0, r2
   12ca0:	bl	10ccc <sigprocmask@plt>
   12ca4:	cmp	r0, #0
   12ca8:	blt	12e3c <__snprintf_chk@plt+0x1f6c>
   12cac:	mov	r1, r6
   12cb0:	ldr	r2, [pc, #412]	; 12e54 <__snprintf_chk@plt+0x1f84>
   12cb4:	mvn	r0, #0
   12cb8:	bl	10d2c <signalfd@plt>
   12cbc:	cmp	r0, #0
   12cc0:	str	r0, [r4]
   12cc4:	blt	12e3c <__snprintf_chk@plt+0x1f6c>
   12cc8:	mov	r2, #0
   12ccc:	str	r2, [sp]
   12cd0:	ldr	r2, [pc, #384]	; 12e58 <__snprintf_chk@plt+0x1f88>
   12cd4:	mov	r3, r4
   12cd8:	add	r2, pc, r2
   12cdc:	mov	r1, #1
   12ce0:	bl	12a30 <__snprintf_chk@plt+0x1b60>
   12ce4:	cmp	r0, #0
   12ce8:	blt	12e30 <__snprintf_chk@plt+0x1f60>
   12cec:	ldr	r7, [pc, #360]	; 12e5c <__snprintf_chk@plt+0x1f8c>
   12cf0:	add	r9, sp, #8
   12cf4:	add	r7, pc, r7
   12cf8:	ldr	r3, [r7, #516]	; 0x204
   12cfc:	cmp	r3, #0
   12d00:	bne	12d58 <__snprintf_chk@plt+0x1e88>
   12d04:	mvn	r3, #0
   12d08:	mov	r2, #10
   12d0c:	mov	r1, r9
   12d10:	ldr	r0, [r7]
   12d14:	bl	10e58 <epoll_wait@plt>
   12d18:	cmp	r0, #0
   12d1c:	blt	12cf8 <__snprintf_chk@plt+0x1e28>
   12d20:	beq	12cf8 <__snprintf_chk@plt+0x1e28>
   12d24:	add	r6, r9, r0, lsl #4
   12d28:	mov	r4, r9
   12d2c:	ldr	r3, [r4, #8]
   12d30:	ldr	r1, [r4], #16
   12d34:	ldr	r5, [r3, #8]
   12d38:	ldr	r2, [r3, #16]
   12d3c:	ldr	r0, [r3]
   12d40:	blx	r5
   12d44:	cmp	r4, r6
   12d48:	bne	12d2c <__snprintf_chk@plt+0x1e5c>
   12d4c:	ldr	r3, [r7, #516]	; 0x204
   12d50:	cmp	r3, #0
   12d54:	beq	12d04 <__snprintf_chk@plt+0x1e34>
   12d58:	ldr	r3, [r7, #524]	; 0x20c
   12d5c:	cmp	r3, #0
   12d60:	beq	12d90 <__snprintf_chk@plt+0x1ec0>
   12d64:	ldr	r0, [r3]
   12d68:	bl	12be0 <__snprintf_chk@plt+0x1d10>
   12d6c:	ldr	r3, [r7, #524]	; 0x20c
   12d70:	ldr	r0, [r3]
   12d74:	bl	10ec4 <close@plt>
   12d78:	ldr	r2, [r7, #524]	; 0x20c
   12d7c:	ldr	r3, [r2, #136]	; 0x88
   12d80:	cmp	r3, #0
   12d84:	beq	12d90 <__snprintf_chk@plt+0x1ec0>
   12d88:	ldr	r0, [r2, #140]	; 0x8c
   12d8c:	blx	r3
   12d90:	ldr	r3, [pc, #200]	; 12e60 <__snprintf_chk@plt+0x1f90>
   12d94:	ldr	sl, [pc, #200]	; 12e64 <__snprintf_chk@plt+0x1f94>
   12d98:	add	r3, pc, r3
   12d9c:	add	sl, pc, sl
   12da0:	ldr	r9, [r3]
   12da4:	mov	r4, r3
   12da8:	add	r7, r3, #512	; 0x200
   12dac:	mov	r6, #0
   12db0:	ldr	r5, [r4, #4]!
   12db4:	cmp	r5, #0
   12db8:	str	r6, [r4]
   12dbc:	beq	12df4 <__snprintf_chk@plt+0x1f24>
   12dc0:	mov	r3, #0
   12dc4:	ldr	r2, [r5]
   12dc8:	mov	r1, #2
   12dcc:	mov	r0, r9
   12dd0:	bl	10d98 <epoll_ctl@plt>
   12dd4:	ldr	r3, [r5, #12]
   12dd8:	cmp	r3, #0
   12ddc:	beq	12dec <__snprintf_chk@plt+0x1f1c>
   12de0:	ldr	r0, [r5, #16]
   12de4:	blx	r3
   12de8:	ldr	r9, [sl]
   12dec:	mov	r0, r5
   12df0:	bl	10cd8 <free@plt>
   12df4:	cmp	r7, r4
   12df8:	bne	12db0 <__snprintf_chk@plt+0x1ee0>
   12dfc:	mov	r0, r9
   12e00:	bl	10ec4 <close@plt>
   12e04:	ldr	r3, [pc, #92]	; 12e68 <__snprintf_chk@plt+0x1f98>
   12e08:	mov	r2, #0
   12e0c:	add	r3, pc, r3
   12e10:	ldr	r0, [r3, #520]	; 0x208
   12e14:	str	r2, [r3]
   12e18:	ldr	r2, [sp, #172]	; 0xac
   12e1c:	ldr	r3, [r8]
   12e20:	cmp	r2, r3
   12e24:	bne	12e44 <__snprintf_chk@plt+0x1f74>
   12e28:	add	sp, sp, #176	; 0xb0
   12e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e30:	ldr	r3, [r5, #524]	; 0x20c
   12e34:	ldr	r0, [r3]
   12e38:	bl	10ec4 <close@plt>
   12e3c:	mov	r0, #1
   12e40:	b	12e18 <__snprintf_chk@plt+0x1f48>
   12e44:	bl	10d08 <__stack_chk_fail@plt>
   12e48:	andeq	r6, r1, ip, lsr #5
   12e4c:	ldrdeq	r0, [r0], -r4
   12e50:	andeq	r6, r1, r4, lsr #7
   12e54:	andeq	r0, r8, r0, lsl #16
   12e58:			; <UNDEFINED> instruction: 0xfffffc8c
   12e5c:	andeq	r6, r1, r4, lsr #6
   12e60:	andeq	r6, r1, r0, lsl #5
   12e64:	andeq	r6, r1, ip, ror r2
   12e68:	andeq	r6, r1, ip, lsl #4
   12e6c:	ldr	ip, [pc, #320]	; 12fb4 <__snprintf_chk@plt+0x20e4>
   12e70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e74:	add	ip, pc, ip
   12e78:	ldr	lr, [pc, #312]	; 12fb8 <__snprintf_chk@plt+0x20e8>
   12e7c:	sub	sp, sp, #32
   12e80:	subs	r8, r1, #0
   12e84:	ldr	r6, [ip, lr]
   12e88:	mov	r5, r0
   12e8c:	mov	r0, ip
   12e90:	ldr	r1, [r6]
   12e94:	str	r1, [sp, #28]
   12e98:	beq	12f88 <__snprintf_chk@plt+0x20b8>
   12e9c:	mov	r0, #16
   12ea0:	mov	r9, r2
   12ea4:	mov	sl, r3
   12ea8:	bl	10d74 <malloc@plt>
   12eac:	subs	r4, r0, #0
   12eb0:	beq	12f90 <__snprintf_chk@plt+0x20c0>
   12eb4:	mov	r7, #0
   12eb8:	stmib	r4, {r8, sl}
   12ebc:	str	r9, [r4, #12]
   12ec0:	str	r7, [r4]
   12ec4:	ldr	r1, [pc, #240]	; 12fbc <__snprintf_chk@plt+0x20ec>
   12ec8:	mov	r0, #1
   12ecc:	bl	10dbc <timerfd_create@plt>
   12ed0:	cmp	r0, r7
   12ed4:	mov	r2, r0
   12ed8:	str	r0, [r4]
   12edc:	blt	12fa0 <__snprintf_chk@plt+0x20d0>
   12ee0:	cmp	r5, #0
   12ee4:	bne	12f30 <__snprintf_chk@plt+0x2060>
   12ee8:	ldr	r3, [pc, #208]	; 12fc0 <__snprintf_chk@plt+0x20f0>
   12eec:	mov	r0, r2
   12ef0:	ldr	r2, [pc, #204]	; 12fc4 <__snprintf_chk@plt+0x20f4>
   12ef4:	add	r3, pc, r3
   12ef8:	str	r3, [sp]
   12efc:	add	r2, pc, r2
   12f00:	mov	r3, r4
   12f04:	mov	r1, #1073741825	; 0x40000001
   12f08:	bl	12a30 <__snprintf_chk@plt+0x1b60>
   12f0c:	cmp	r0, #0
   12f10:	ldr	r0, [r4]
   12f14:	blt	12f9c <__snprintf_chk@plt+0x20cc>
   12f18:	ldr	r2, [sp, #28]
   12f1c:	ldr	r3, [r6]
   12f20:	cmp	r2, r3
   12f24:	bne	12fb0 <__snprintf_chk@plt+0x20e0>
   12f28:	add	sp, sp, #32
   12f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f30:	ldr	r1, [pc, #144]	; 12fc8 <__snprintf_chk@plt+0x20f8>
   12f34:	add	r2, sp, #12
   12f38:	str	r7, [sp, #12]
   12f3c:	umull	r3, r1, r1, r5
   12f40:	str	r7, [r2, #4]
   12f44:	lsr	r1, r1, #6
   12f48:	str	r1, [sp, #20]
   12f4c:	rsb	r3, r1, r1, lsl #5
   12f50:	add	r1, r1, r3, lsl #2
   12f54:	mov	r3, r7
   12f58:	sub	r5, r5, r1, lsl #3
   12f5c:	mov	r1, r7
   12f60:	rsb	ip, r5, r5, lsl #5
   12f64:	rsb	ip, ip, ip, lsl #6
   12f68:	add	r5, r5, ip, lsl #3
   12f6c:	lsl	r5, r5, #6
   12f70:	str	r5, [sp, #24]
   12f74:	bl	10e7c <timerfd_settime@plt>
   12f78:	cmp	r0, #0
   12f7c:	blt	12f98 <__snprintf_chk@plt+0x20c8>
   12f80:	ldr	r2, [r4]
   12f84:	b	12ee8 <__snprintf_chk@plt+0x2018>
   12f88:	mvn	r0, #21
   12f8c:	b	12f18 <__snprintf_chk@plt+0x2048>
   12f90:	mvn	r0, #11
   12f94:	b	12f18 <__snprintf_chk@plt+0x2048>
   12f98:	ldr	r0, [r4]
   12f9c:	bl	10ec4 <close@plt>
   12fa0:	mov	r0, r4
   12fa4:	bl	10cd8 <free@plt>
   12fa8:	mvn	r0, #4
   12fac:	b	12f18 <__snprintf_chk@plt+0x2048>
   12fb0:	bl	10d08 <__stack_chk_fail@plt>
   12fb4:	andeq	r6, r1, r0, lsr #1
   12fb8:	ldrdeq	r0, [r0], -r4
   12fbc:	andeq	r0, r8, r0, lsl #16
   12fc0:			; <UNDEFINED> instruction: 0xfffff954
   12fc4:			; <UNDEFINED> instruction: 0xfffff984
   12fc8:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   12fcc:	ldr	r3, [pc, #176]	; 13084 <__snprintf_chk@plt+0x21b4>
   12fd0:	ldr	r2, [pc, #176]	; 13088 <__snprintf_chk@plt+0x21b8>
   12fd4:	add	r3, pc, r3
   12fd8:	push	{r4, r5, lr}
   12fdc:	sub	sp, sp, #28
   12fe0:	ldr	r4, [r3, r2]
   12fe4:	cmp	r1, #0
   12fe8:	mov	r5, r0
   12fec:	ldr	r3, [r4]
   12ff0:	str	r3, [sp, #20]
   12ff4:	beq	13048 <__snprintf_chk@plt+0x2178>
   12ff8:	ldr	r3, [pc, #140]	; 1308c <__snprintf_chk@plt+0x21bc>
   12ffc:	umull	r2, r3, r3, r1
   13000:	lsr	r3, r3, #6
   13004:	str	r3, [sp, #12]
   13008:	rsb	r2, r3, r3, lsl #5
   1300c:	add	r2, r3, r2, lsl #2
   13010:	mov	r3, #0
   13014:	sub	r1, r1, r2, lsl #3
   13018:	add	r2, sp, #4
   1301c:	rsb	ip, r1, r1, lsl #5
   13020:	str	r3, [r2, #4]
   13024:	rsb	ip, ip, ip, lsl #6
   13028:	str	r3, [sp, #4]
   1302c:	add	r1, r1, ip, lsl #3
   13030:	lsl	ip, r1, #6
   13034:	mov	r1, r3
   13038:	str	ip, [sp, #16]
   1303c:	bl	10e7c <timerfd_settime@plt>
   13040:	cmp	r0, #0
   13044:	blt	13078 <__snprintf_chk@plt+0x21a8>
   13048:	mov	r0, r5
   1304c:	mov	r1, #1073741825	; 0x40000001
   13050:	bl	12b30 <__snprintf_chk@plt+0x1c60>
   13054:	cmp	r0, #0
   13058:	blt	13078 <__snprintf_chk@plt+0x21a8>
   1305c:	mov	r0, #0
   13060:	ldr	r2, [sp, #20]
   13064:	ldr	r3, [r4]
   13068:	cmp	r2, r3
   1306c:	bne	13080 <__snprintf_chk@plt+0x21b0>
   13070:	add	sp, sp, #28
   13074:	pop	{r4, r5, pc}
   13078:	mvn	r0, #4
   1307c:	b	13060 <__snprintf_chk@plt+0x2190>
   13080:	bl	10d08 <__stack_chk_fail@plt>
   13084:	andeq	r5, r1, r0, asr #30
   13088:	ldrdeq	r0, [r0], -r4
   1308c:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   13090:	b	12be0 <__snprintf_chk@plt+0x1d10>
   13094:	cmp	r0, #0
   13098:	clz	ip, r1
   1309c:	lsr	ip, ip, #5
   130a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   130a4:	movne	r6, ip
   130a8:	moveq	r6, #1
   130ac:	cmp	r6, #0
   130b0:	bne	13114 <__snprintf_chk@plt+0x2244>
   130b4:	mov	r7, r0
   130b8:	mov	r0, #144	; 0x90
   130bc:	mov	r5, r1
   130c0:	mov	r8, r3
   130c4:	mov	r9, r2
   130c8:	bl	10d74 <malloc@plt>
   130cc:	subs	r4, r0, #0
   130d0:	beq	1311c <__snprintf_chk@plt+0x224c>
   130d4:	str	r5, [r4, #132]	; 0x84
   130d8:	ldr	r5, [pc, #68]	; 13124 <__snprintf_chk@plt+0x2254>
   130dc:	mov	r0, r4
   130e0:	mvn	r3, #0
   130e4:	add	r5, pc, r5
   130e8:	str	r8, [r4, #136]	; 0x88
   130ec:	str	r9, [r4, #140]	; 0x8c
   130f0:	mov	r1, r7
   130f4:	str	r3, [r0], #4
   130f8:	mov	r2, #128	; 0x80
   130fc:	bl	10cf0 <memcpy@plt>
   13100:	ldr	r0, [r5, #524]	; 0x20c
   13104:	bl	10cd8 <free@plt>
   13108:	str	r4, [r5, #524]	; 0x20c
   1310c:	mov	r0, r6
   13110:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13114:	mvn	r0, #21
   13118:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1311c:	mvn	r0, #11
   13120:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13124:	andeq	r5, r1, r4, lsr pc
   13128:	sub	r0, r1, r0
   1312c:	clz	r0, r0
   13130:	lsr	r0, r0, #5
   13134:	bx	lr
   13138:	push	{r4, lr}
   1313c:	mov	r4, r0
   13140:	mov	r0, #8
   13144:	bl	136c4 <__snprintf_chk@plt+0x27f4>
   13148:	mov	r2, #0
   1314c:	str	r4, [r0]
   13150:	str	r2, [r0, #4]
   13154:	pop	{r4, pc}
   13158:	mov	r3, r0
   1315c:	mcr	15, 0, r0, cr7, cr10, {5}
   13160:	ldrex	r2, [r3]
   13164:	sub	r2, r2, #1
   13168:	strex	r1, r2, [r3]
   1316c:	cmp	r1, #0
   13170:	bne	13160 <__snprintf_chk@plt+0x2290>
   13174:	cmp	r2, #0
   13178:	mcr	15, 0, r0, cr7, cr10, {5}
   1317c:	bxne	lr
   13180:	b	10cd8 <free@plt>
   13184:	push	{r4, lr}
   13188:	mov	r0, #16
   1318c:	bl	136c4 <__snprintf_chk@plt+0x27f4>
   13190:	mov	r2, #0
   13194:	mov	r3, r0
   13198:	str	r2, [r0]
   1319c:	str	r2, [r0, #4]
   131a0:	str	r2, [r0, #8]
   131a4:	str	r2, [r0, #12]
   131a8:	mcr	15, 0, r0, cr7, cr10, {5}
   131ac:	ldrex	r2, [r3]
   131b0:	add	r2, r2, #1
   131b4:	strex	r1, r2, [r3]
   131b8:	cmp	r1, #0
   131bc:	bne	131ac <__snprintf_chk@plt+0x22dc>
   131c0:	mcr	15, 0, r0, cr7, cr10, {5}
   131c4:	pop	{r4, pc}
   131c8:	push	{r4, lr}
   131cc:	subs	r4, r0, #0
   131d0:	beq	1320c <__snprintf_chk@plt+0x233c>
   131d4:	mov	r0, r1
   131d8:	bl	13138 <__snprintf_chk@plt+0x2268>
   131dc:	ldr	r3, [r4, #8]
   131e0:	cmp	r3, #0
   131e4:	strne	r0, [r3, #4]
   131e8:	ldr	r3, [r4, #4]
   131ec:	str	r0, [r4, #8]
   131f0:	cmp	r3, #0
   131f4:	ldr	r3, [r4, #12]
   131f8:	streq	r0, [r4, #4]
   131fc:	mov	r0, #1
   13200:	add	r3, r3, r0
   13204:	str	r3, [r4, #12]
   13208:	pop	{r4, pc}
   1320c:	mov	r0, r4
   13210:	pop	{r4, pc}
   13214:	push	{r4, lr}
   13218:	subs	r4, r0, #0
   1321c:	beq	13254 <__snprintf_chk@plt+0x2384>
   13220:	mov	r0, r1
   13224:	bl	13138 <__snprintf_chk@plt+0x2268>
   13228:	ldr	r2, [r4, #8]
   1322c:	ldr	r3, [r4, #4]
   13230:	cmp	r2, #0
   13234:	str	r3, [r0, #4]
   13238:	ldr	r3, [r4, #12]
   1323c:	str	r0, [r4, #4]
   13240:	streq	r0, [r4, #8]
   13244:	mov	r0, #1
   13248:	add	r3, r3, r0
   1324c:	str	r3, [r4, #12]
   13250:	pop	{r4, pc}
   13254:	mov	r0, r4
   13258:	pop	{r4, pc}
   1325c:	push	{r4, r5, r6, lr}
   13260:	subs	r5, r0, #0
   13264:	beq	132dc <__snprintf_chk@plt+0x240c>
   13268:	ldr	r4, [r5, #4]
   1326c:	cmp	r4, #0
   13270:	beq	1329c <__snprintf_chk@plt+0x23cc>
   13274:	ldr	r3, [r4]
   13278:	cmp	r1, r3
   1327c:	bne	13290 <__snprintf_chk@plt+0x23c0>
   13280:	b	132a4 <__snprintf_chk@plt+0x23d4>
   13284:	ldr	r3, [r4]
   13288:	cmp	r3, r1
   1328c:	beq	132a4 <__snprintf_chk@plt+0x23d4>
   13290:	ldr	r4, [r4, #4]
   13294:	cmp	r4, #0
   13298:	bne	13284 <__snprintf_chk@plt+0x23b4>
   1329c:	mov	r0, r4
   132a0:	pop	{r4, r5, r6, pc}
   132a4:	mov	r0, r2
   132a8:	bl	13138 <__snprintf_chk@plt+0x2268>
   132ac:	ldr	r3, [r4, #4]
   132b0:	cmp	r3, #0
   132b4:	str	r3, [r0, #4]
   132b8:	beq	132d4 <__snprintf_chk@plt+0x2404>
   132bc:	ldr	r3, [r5, #12]
   132c0:	str	r0, [r4, #4]
   132c4:	add	r3, r3, #1
   132c8:	str	r3, [r5, #12]
   132cc:	mov	r0, #1
   132d0:	pop	{r4, r5, r6, pc}
   132d4:	str	r0, [r5, #8]
   132d8:	b	132bc <__snprintf_chk@plt+0x23ec>
   132dc:	mov	r0, r5
   132e0:	pop	{r4, r5, r6, pc}
   132e4:	push	{r4, r5, r6, lr}
   132e8:	subs	r4, r0, #0
   132ec:	beq	1332c <__snprintf_chk@plt+0x245c>
   132f0:	ldr	r5, [r4, #4]
   132f4:	cmp	r5, #0
   132f8:	beq	13324 <__snprintf_chk@plt+0x2454>
   132fc:	ldr	r2, [r5, #4]
   13300:	mov	r0, r5
   13304:	cmp	r2, #0
   13308:	str	r2, [r4, #4]
   1330c:	streq	r2, [r4, #8]
   13310:	ldr	r5, [r5]
   13314:	bl	10cd8 <free@plt>
   13318:	ldr	r3, [r4, #12]
   1331c:	sub	r3, r3, #1
   13320:	str	r3, [r4, #12]
   13324:	mov	r0, r5
   13328:	pop	{r4, r5, r6, pc}
   1332c:	mov	r5, r4
   13330:	b	13324 <__snprintf_chk@plt+0x2454>
   13334:	cmp	r0, #0
   13338:	bxeq	lr
   1333c:	ldr	r0, [r0, #4]
   13340:	cmp	r0, #0
   13344:	ldrne	r0, [r0]
   13348:	bx	lr
   1334c:	cmp	r0, #0
   13350:	bxeq	lr
   13354:	ldr	r0, [r0, #8]
   13358:	cmp	r0, #0
   1335c:	ldrne	r0, [r0]
   13360:	bx	lr
   13364:	cmp	r1, #0
   13368:	cmpne	r0, #0
   1336c:	bxeq	lr
   13370:	ldr	r3, [r0, #4]
   13374:	cmp	r3, #0
   13378:	bxeq	lr
   1337c:	push	{r4, r5, r6, r7, r8, lr}
   13380:	mov	r7, r1
   13384:	mov	r4, r0
   13388:	mov	r6, r2
   1338c:	mcr	15, 0, r0, cr7, cr10, {5}
   13390:	ldrex	r2, [r4]
   13394:	add	r2, r2, #1
   13398:	strex	r1, r2, [r4]
   1339c:	cmp	r1, #0
   133a0:	bne	13390 <__snprintf_chk@plt+0x24c0>
   133a4:	mcr	15, 0, r0, cr7, cr10, {5}
   133a8:	ldr	r0, [r4, #4]
   133ac:	mov	r1, r6
   133b0:	cmp	r0, #0
   133b4:	beq	133d4 <__snprintf_chk@plt+0x2504>
   133b8:	ldr	r0, [r4]
   133bc:	cmp	r0, #1
   133c0:	ble	133d4 <__snprintf_chk@plt+0x2504>
   133c4:	ldm	r3, {r0, r5}
   133c8:	blx	r7
   133cc:	subs	r3, r5, #0
   133d0:	bne	133a8 <__snprintf_chk@plt+0x24d8>
   133d4:	mov	r0, r4
   133d8:	pop	{r4, r5, r6, r7, r8, lr}
   133dc:	b	13158 <__snprintf_chk@plt+0x2288>
   133e0:	cmp	r0, #0
   133e4:	beq	13448 <__snprintf_chk@plt+0x2578>
   133e8:	cmp	r1, #0
   133ec:	push	{r4, r5, r6, lr}
   133f0:	mov	r5, r1
   133f4:	mov	r6, r2
   133f8:	beq	1343c <__snprintf_chk@plt+0x256c>
   133fc:	ldr	r4, [r0, #4]
   13400:	cmp	r4, #0
   13404:	bne	13418 <__snprintf_chk@plt+0x2548>
   13408:	b	13434 <__snprintf_chk@plt+0x2564>
   1340c:	ldr	r4, [r4, #4]
   13410:	cmp	r4, #0
   13414:	beq	13434 <__snprintf_chk@plt+0x2564>
   13418:	mov	r1, r6
   1341c:	ldr	r0, [r4]
   13420:	blx	r5
   13424:	cmp	r0, #0
   13428:	beq	1340c <__snprintf_chk@plt+0x253c>
   1342c:	ldr	r0, [r4]
   13430:	pop	{r4, r5, r6, pc}
   13434:	mov	r0, #0
   13438:	pop	{r4, r5, r6, pc}
   1343c:	ldr	r5, [pc, #12]	; 13450 <__snprintf_chk@plt+0x2580>
   13440:	add	r5, pc, r5
   13444:	b	133fc <__snprintf_chk@plt+0x252c>
   13448:	mov	r0, #0
   1344c:	bx	lr
   13450:			; <UNDEFINED> instruction: 0xfffffce0
   13454:	push	{r4, lr}
   13458:	subs	r4, r0, #0
   1345c:	beq	134e4 <__snprintf_chk@plt+0x2614>
   13460:	ldr	r2, [r4, #4]
   13464:	cmp	r2, #0
   13468:	beq	134ec <__snprintf_chk@plt+0x261c>
   1346c:	ldr	ip, [r2]
   13470:	ldr	r0, [r2, #4]
   13474:	cmp	r1, ip
   13478:	beq	134d0 <__snprintf_chk@plt+0x2600>
   1347c:	cmp	r0, #0
   13480:	popeq	{r4, pc}
   13484:	ldr	lr, [r0]
   13488:	ldr	ip, [r0, #4]
   1348c:	cmp	lr, r1
   13490:	beq	134a8 <__snprintf_chk@plt+0x25d8>
   13494:	mov	r2, r0
   13498:	mov	r0, ip
   1349c:	cmp	r0, #0
   134a0:	bne	13484 <__snprintf_chk@plt+0x25b4>
   134a4:	pop	{r4, pc}
   134a8:	str	ip, [r2, #4]
   134ac:	ldr	r1, [r0, #4]
   134b0:	cmp	r1, #0
   134b4:	streq	r2, [r4, #8]
   134b8:	bl	10cd8 <free@plt>
   134bc:	ldr	r3, [r4, #12]
   134c0:	mov	r0, #1
   134c4:	sub	r3, r3, #1
   134c8:	str	r3, [r4, #12]
   134cc:	pop	{r4, pc}
   134d0:	str	r0, [r4, #4]
   134d4:	mov	r1, r0
   134d8:	mov	r0, r2
   134dc:	mov	r2, #0
   134e0:	b	134b0 <__snprintf_chk@plt+0x25e0>
   134e4:	mov	r0, r4
   134e8:	pop	{r4, pc}
   134ec:	mov	r0, r2
   134f0:	pop	{r4, pc}
   134f4:	push	{r4, r5, r6, r7, r8, lr}
   134f8:	subs	r8, r0, #0
   134fc:	beq	13584 <__snprintf_chk@plt+0x26b4>
   13500:	cmp	r1, #0
   13504:	mov	r5, r1
   13508:	mov	r7, r2
   1350c:	beq	13590 <__snprintf_chk@plt+0x26c0>
   13510:	ldr	r4, [r8, #4]
   13514:	cmp	r4, #0
   13518:	beq	13584 <__snprintf_chk@plt+0x26b4>
   1351c:	mov	r6, #0
   13520:	b	13534 <__snprintf_chk@plt+0x2664>
   13524:	ldr	r3, [r4, #4]
   13528:	mov	r6, r4
   1352c:	subs	r4, r3, #0
   13530:	beq	13584 <__snprintf_chk@plt+0x26b4>
   13534:	mov	r1, r7
   13538:	ldr	r0, [r4]
   1353c:	blx	r5
   13540:	cmp	r0, #0
   13544:	beq	13524 <__snprintf_chk@plt+0x2654>
   13548:	ldr	r3, [r4, #4]
   1354c:	cmp	r6, #0
   13550:	strne	r3, [r6, #4]
   13554:	ldrne	r3, [r4, #4]
   13558:	streq	r3, [r8, #4]
   1355c:	cmp	r3, #0
   13560:	mov	r0, r4
   13564:	streq	r6, [r8, #8]
   13568:	ldr	r4, [r4]
   1356c:	bl	10cd8 <free@plt>
   13570:	ldr	r3, [r8, #12]
   13574:	mov	r0, r4
   13578:	sub	r3, r3, #1
   1357c:	str	r3, [r8, #12]
   13580:	pop	{r4, r5, r6, r7, r8, pc}
   13584:	mov	r4, #0
   13588:	mov	r0, r4
   1358c:	pop	{r4, r5, r6, r7, r8, pc}
   13590:	ldr	r5, [pc, #4]	; 1359c <__snprintf_chk@plt+0x26cc>
   13594:	add	r5, pc, r5
   13598:	b	13510 <__snprintf_chk@plt+0x2640>
   1359c:			; <UNDEFINED> instruction: 0xfffffb8c
   135a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   135a4:	subs	r4, r0, #0
   135a8:	beq	1365c <__snprintf_chk@plt+0x278c>
   135ac:	cmp	r1, #0
   135b0:	mov	r6, r3
   135b4:	mov	r9, r2
   135b8:	mov	r8, r1
   135bc:	ldr	r7, [r4, #4]
   135c0:	beq	13614 <__snprintf_chk@plt+0x2744>
   135c4:	cmp	r7, #0
   135c8:	beq	1365c <__snprintf_chk@plt+0x278c>
   135cc:	ldr	r7, [r4, #12]
   135d0:	mov	r5, #0
   135d4:	b	135f0 <__snprintf_chk@plt+0x2720>
   135d8:	cmp	r6, #0
   135dc:	moveq	r7, r3
   135e0:	beq	135ec <__snprintf_chk@plt+0x271c>
   135e4:	blx	r6
   135e8:	ldr	r7, [r4, #12]
   135ec:	add	r5, r5, #1
   135f0:	mov	r2, r9
   135f4:	mov	r1, r8
   135f8:	mov	r0, r4
   135fc:	bl	134f4 <__snprintf_chk@plt+0x2624>
   13600:	ldr	r3, [r4, #12]
   13604:	cmp	r3, r7
   13608:	bne	135d8 <__snprintf_chk@plt+0x2708>
   1360c:	mov	r0, r5
   13610:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13614:	cmp	r7, #0
   13618:	str	r1, [r4, #4]
   1361c:	str	r1, [r4, #8]
   13620:	str	r1, [r4, #12]
   13624:	beq	1365c <__snprintf_chk@plt+0x278c>
   13628:	mov	r5, r1
   1362c:	cmp	r6, #0
   13630:	ldr	r4, [r7, #4]
   13634:	beq	13640 <__snprintf_chk@plt+0x2770>
   13638:	ldr	r0, [r7]
   1363c:	blx	r6
   13640:	mov	r0, r7
   13644:	bl	10cd8 <free@plt>
   13648:	subs	r7, r4, #0
   1364c:	add	r5, r5, #1
   13650:	bne	1362c <__snprintf_chk@plt+0x275c>
   13654:	mov	r0, r5
   13658:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1365c:	mov	r5, #0
   13660:	mov	r0, r5
   13664:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13668:	subs	r2, r0, #0
   1366c:	bxeq	lr
   13670:	push	{r4, lr}
   13674:	mov	r4, r2
   13678:	mov	r2, #0
   1367c:	mov	r3, r1
   13680:	mov	r1, r2
   13684:	bl	135a0 <__snprintf_chk@plt+0x26d0>
   13688:	mov	r0, r4
   1368c:	pop	{r4, lr}
   13690:	b	13158 <__snprintf_chk@plt+0x2288>
   13694:	cmp	r0, #0
   13698:	ldrne	r0, [r0, #4]
   1369c:	bx	lr
   136a0:	cmp	r0, #0
   136a4:	ldrne	r0, [r0, #12]
   136a8:	bx	lr
   136ac:	cmp	r0, #0
   136b0:	ldrne	r0, [r0, #12]
   136b4:	clzne	r0, r0
   136b8:	lsrne	r0, r0, #5
   136bc:	moveq	r0, #1
   136c0:	bx	lr
   136c4:	push	{r4, r5, r6, lr}
   136c8:	subs	r3, r0, #0
   136cc:	ldr	r5, [pc, #64]	; 13714 <__snprintf_chk@plt+0x2844>
   136d0:	add	r5, pc, r5
   136d4:	beq	1370c <__snprintf_chk@plt+0x283c>
   136d8:	mov	r4, r3
   136dc:	bl	10d74 <malloc@plt>
   136e0:	cmp	r0, #0
   136e4:	popne	{r4, r5, r6, pc}
   136e8:	ldr	r1, [pc, #40]	; 13718 <__snprintf_chk@plt+0x2848>
   136ec:	ldr	r2, [pc, #40]	; 1371c <__snprintf_chk@plt+0x284c>
   136f0:	mov	r3, r4
   136f4:	ldr	r0, [r5, r1]
   136f8:	add	r2, pc, r2
   136fc:	mov	r1, #1
   13700:	ldr	r0, [r0]
   13704:	bl	10e34 <__fprintf_chk@plt>
   13708:	bl	10eac <abort@plt>
   1370c:	mov	r0, r3
   13710:	pop	{r4, r5, r6, pc}
   13714:	andeq	r5, r1, r4, asr #16
   13718:	ldrdeq	r0, [r0], -r8
   1371c:	andeq	r0, r0, r8, lsr ip
   13720:	push	{r2, r3}
   13724:	ldr	r3, [pc, #132]	; 137b0 <__snprintf_chk@plt+0x28e0>
   13728:	ldr	r2, [pc, #132]	; 137b4 <__snprintf_chk@plt+0x28e4>
   1372c:	add	r3, pc, r3
   13730:	push	{r4, r5, r6, r7, lr}
   13734:	sub	sp, sp, #100	; 0x64
   13738:	ldr	r4, [r3, r2]
   1373c:	ldr	ip, [sp, #120]	; 0x78
   13740:	ldr	r3, [r4]
   13744:	cmp	ip, #0
   13748:	cmpne	r0, #0
   1374c:	str	r3, [sp, #92]	; 0x5c
   13750:	beq	1378c <__snprintf_chk@plt+0x28bc>
   13754:	add	lr, sp, #124	; 0x7c
   13758:	mov	r3, #78	; 0x4e
   1375c:	add	r5, sp, #12
   13760:	mov	r6, r1
   13764:	mov	r7, r0
   13768:	mov	r1, r3
   1376c:	stm	sp, {ip, lr}
   13770:	mov	r0, r5
   13774:	mov	r2, #1
   13778:	str	lr, [sp, #8]
   1377c:	bl	10ce4 <__vsnprintf_chk@plt>
   13780:	mov	r1, r6
   13784:	mov	r0, r5
   13788:	blx	r7
   1378c:	ldr	r2, [sp, #92]	; 0x5c
   13790:	ldr	r3, [r4]
   13794:	cmp	r2, r3
   13798:	bne	137ac <__snprintf_chk@plt+0x28dc>
   1379c:	add	sp, sp, #100	; 0x64
   137a0:	pop	{r4, r5, r6, r7, lr}
   137a4:	add	sp, sp, #8
   137a8:	bx	lr
   137ac:	bl	10d08 <__stack_chk_fail@plt>
   137b0:	andeq	r5, r1, r8, ror #15
   137b4:	ldrdeq	r0, [r0], -r4
   137b8:	ldr	ip, [pc, #356]	; 13924 <__snprintf_chk@plt+0x2a54>
   137bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137c0:	add	ip, pc, ip
   137c4:	ldr	lr, [pc, #348]	; 13928 <__snprintf_chk@plt+0x2a58>
   137c8:	sub	sp, sp, #92	; 0x5c
   137cc:	cmp	r3, #0
   137d0:	ldr	lr, [ip, lr]
   137d4:	clz	r4, r2
   137d8:	str	lr, [sp, #12]
   137dc:	lsr	r4, r4, #5
   137e0:	ldr	lr, [lr]
   137e4:	moveq	r4, #1
   137e8:	cmp	r4, #0
   137ec:	str	lr, [sp, #84]	; 0x54
   137f0:	str	r3, [sp, #4]
   137f4:	ldr	sl, [sp, #128]	; 0x80
   137f8:	bne	13904 <__snprintf_chk@plt+0x2a34>
   137fc:	mov	r9, r2
   13800:	strb	r0, [sp, #16]
   13804:	sub	r7, r1, #1
   13808:	bl	10dd4 <__ctype_b_loc@plt>
   1380c:	ldr	r8, [pc, #280]	; 1392c <__snprintf_chk@plt+0x2a5c>
   13810:	add	r3, sp, #16
   13814:	str	r3, [sp, #8]
   13818:	mov	r3, r9
   1381c:	add	r8, pc, r8
   13820:	mov	r5, r4
   13824:	mov	r6, #32
   13828:	mov	fp, r3
   1382c:	mov	r9, r0
   13830:	ldrb	r1, [r7, #1]!
   13834:	add	r0, r5, r5, lsl #1
   13838:	add	r3, sp, #88	; 0x58
   1383c:	and	lr, r1, #15
   13840:	ldrb	ip, [r8, r1, lsr #4]
   13844:	ldrb	lr, [r8, lr]
   13848:	add	r0, r3, r0
   1384c:	ldr	r3, [r9]
   13850:	strb	r6, [r0, #-71]	; 0xffffffb9
   13854:	strb	lr, [r0, #-69]	; 0xffffffbb
   13858:	strb	ip, [r0, #-70]	; 0xffffffba
   1385c:	lsl	r0, r1, #1
   13860:	add	r4, r4, #1
   13864:	ldrh	ip, [r3, r0]
   13868:	add	r3, sp, #88	; 0x58
   1386c:	add	r0, r3, r5
   13870:	tst	ip, #16384	; 0x4000
   13874:	moveq	r1, #46	; 0x2e
   13878:	ands	r5, r4, #15
   1387c:	strb	r1, [r0, #-21]	; 0xffffffeb
   13880:	bne	138a4 <__snprintf_chk@plt+0x29d4>
   13884:	strb	r6, [sp, #65]	; 0x41
   13888:	strb	r6, [sp, #66]	; 0x42
   1388c:	strb	r5, [sp, #83]	; 0x53
   13890:	mov	r1, sl
   13894:	ldr	r0, [sp, #8]
   13898:	ldr	r3, [sp, #4]
   1389c:	blx	r3
   138a0:	strb	r6, [sp, #16]
   138a4:	cmp	r4, fp
   138a8:	bcc	13830 <__snprintf_chk@plt+0x2960>
   138ac:	cmp	r5, #0
   138b0:	beq	13904 <__snprintf_chk@plt+0x2a34>
   138b4:	add	r0, sp, #16
   138b8:	add	r3, r5, r5, lsl #1
   138bc:	add	r5, r5, #50	; 0x32
   138c0:	add	r3, r0, r3
   138c4:	add	r5, r0, r5
   138c8:	add	r1, sp, #64	; 0x40
   138cc:	mov	r2, #32
   138d0:	strb	r2, [r3, #1]
   138d4:	strb	r2, [r3, #2]
   138d8:	strb	r2, [r3, #3]!
   138dc:	cmp	r1, r3
   138e0:	strb	r2, [r5, #1]!
   138e4:	bne	138d0 <__snprintf_chk@plt+0x2a00>
   138e8:	mov	r3, #0
   138ec:	strb	r3, [sp, #83]	; 0x53
   138f0:	strb	r2, [sp, #65]	; 0x41
   138f4:	strb	r2, [sp, #66]	; 0x42
   138f8:	mov	r1, sl
   138fc:	ldr	r3, [sp, #4]
   13900:	blx	r3
   13904:	ldr	r3, [sp, #12]
   13908:	ldr	r2, [sp, #84]	; 0x54
   1390c:	ldr	r3, [r3]
   13910:	cmp	r2, r3
   13914:	bne	13920 <__snprintf_chk@plt+0x2a50>
   13918:	add	sp, sp, #92	; 0x5c
   1391c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13920:	bl	10d08 <__stack_chk_fail@plt>
   13924:	andeq	r5, r1, r4, asr r7
   13928:	ldrdeq	r0, [r0], -r4
   1392c:	andeq	r0, r0, r0, lsl #22
   13930:	ldr	r2, [pc, #172]	; 139e4 <__snprintf_chk@plt+0x2b14>
   13934:	ldr	r3, [pc, #172]	; 139e8 <__snprintf_chk@plt+0x2b18>
   13938:	add	r2, pc, r2
   1393c:	push	{r4, r5, r6, lr}
   13940:	sub	sp, sp, #4160	; 0x1040
   13944:	ldr	r4, [r2, r3]
   13948:	ldr	ip, [pc, #156]	; 139ec <__snprintf_chk@plt+0x2b1c>
   1394c:	sub	sp, sp, #48	; 0x30
   13950:	add	ip, pc, ip
   13954:	str	r1, [sp, #8]
   13958:	ldr	lr, [r4]
   1395c:	str	ip, [sp]
   13960:	add	ip, sp, #4160	; 0x1040
   13964:	add	ip, ip, #44	; 0x2c
   13968:	mov	r3, #4096	; 0x1000
   1396c:	add	r6, sp, #108	; 0x6c
   13970:	str	r0, [sp, #4]
   13974:	mov	r1, r3
   13978:	str	lr, [ip]
   1397c:	mov	r0, r6
   13980:	mov	r2, #1
   13984:	bl	10ed0 <__snprintf_chk@plt>
   13988:	mov	r1, r6
   1398c:	add	r2, sp, #16
   13990:	mov	r0, #3
   13994:	bl	10e94 <__lxstat@plt>
   13998:	cmp	r0, #0
   1399c:	movne	r0, #0
   139a0:	bne	139bc <__snprintf_chk@plt+0x2aec>
   139a4:	add	r5, sp, #112	; 0x70
   139a8:	ldr	r3, [r5, #-80]	; 0xffffffb0
   139ac:	and	r3, r3, #61440	; 0xf000
   139b0:	cmp	r3, #16384	; 0x4000
   139b4:	movne	r0, #0
   139b8:	moveq	r0, #4
   139bc:	add	r3, sp, #4160	; 0x1040
   139c0:	add	r3, r3, #44	; 0x2c
   139c4:	ldr	r2, [r3]
   139c8:	ldr	r3, [r4]
   139cc:	cmp	r2, r3
   139d0:	bne	139e0 <__snprintf_chk@plt+0x2b10>
   139d4:	add	sp, sp, #4160	; 0x1040
   139d8:	add	sp, sp, #48	; 0x30
   139dc:	pop	{r4, r5, r6, pc}
   139e0:	bl	10d08 <__stack_chk_fail@plt>
   139e4:	ldrdeq	r5, [r1], -ip
   139e8:	ldrdeq	r0, [r0], -r4
   139ec:	andeq	r0, r0, r0, lsl #20
   139f0:	ldr	ip, [r0]
   139f4:	push	{lr}		; (str lr, [sp, #-4]!)
   139f8:	add	r3, ip, #1
   139fc:	bic	r3, r3, ip
   13a00:	clz	r3, r3
   13a04:	rsb	r3, r3, #31
   13a08:	add	r2, r3, #1
   13a0c:	ands	r2, r2, #255	; 0xff
   13a10:	moveq	lr, #1
   13a14:	movne	lr, #0
   13a18:	cmp	r2, r1
   13a1c:	movls	r1, lr
   13a20:	orrhi	r1, lr, #1
   13a24:	cmp	r1, #0
   13a28:	moveq	r1, #1
   13a2c:	movne	r2, #0
   13a30:	orreq	r3, ip, r1, lsl r3
   13a34:	streq	r3, [r0]
   13a38:	mov	r0, r2
   13a3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13a40:	cmp	r1, #0
   13a44:	subne	r1, r1, #1
   13a48:	ldrne	r3, [r0]
   13a4c:	movne	r2, #1
   13a50:	bicne	r1, r3, r2, lsl r1
   13a54:	strne	r1, [r0]
   13a58:	bx	lr
   13a5c:	cmp	r0, #1
   13a60:	beq	13a9c <__snprintf_chk@plt+0x2bcc>
   13a64:	ldr	r3, [pc, #60]	; 13aa8 <__snprintf_chk@plt+0x2bd8>
   13a68:	ldr	r2, [pc, #60]	; 13aac <__snprintf_chk@plt+0x2bdc>
   13a6c:	add	r3, pc, r3
   13a70:	add	r2, pc, r2
   13a74:	ldrh	r1, [r3, #8]!
   13a78:	cmp	r1, r0
   13a7c:	beq	13a94 <__snprintf_chk@plt+0x2bc4>
   13a80:	ldr	r2, [r3, #12]
   13a84:	cmp	r2, #0
   13a88:	bne	13a74 <__snprintf_chk@plt+0x2ba4>
   13a8c:	ldr	r2, [pc, #28]	; 13ab0 <__snprintf_chk@plt+0x2be0>
   13a90:	add	r2, pc, r2
   13a94:	mov	r0, r2
   13a98:	bx	lr
   13a9c:	ldr	r2, [pc, #16]	; 13ab4 <__snprintf_chk@plt+0x2be4>
   13aa0:	add	r2, pc, r2
   13aa4:	b	13a94 <__snprintf_chk@plt+0x2bc4>
   13aa8:	andeq	r4, r1, ip, lsl #3
   13aac:	andeq	r0, r0, r8, ror #17
   13ab0:	ldrdeq	r0, [r0], -r4
   13ab4:	andeq	r0, r0, r0, asr #17
   13ab8:	lsr	r3, r0, #16
   13abc:	lsl	r3, r3, #16
   13ac0:	cmp	r3, #0
   13ac4:	beq	13ad4 <__snprintf_chk@plt+0x2c04>
   13ac8:	ldr	r0, [pc, #12]	; 13adc <__snprintf_chk@plt+0x2c0c>
   13acc:	add	r0, pc, r0
   13ad0:	bx	lr
   13ad4:	uxth	r0, r0
   13ad8:	b	13a5c <__snprintf_chk@plt+0x2b8c>
   13adc:	muleq	r0, r8, r8
   13ae0:	ldr	r3, [pc, #312]	; 13c20 <__snprintf_chk@plt+0x2d50>
   13ae4:	ldr	r2, [pc, #312]	; 13c24 <__snprintf_chk@plt+0x2d54>
   13ae8:	add	r3, pc, r3
   13aec:	push	{r4, r5, r6, r7, lr}
   13af0:	sub	sp, sp, #20
   13af4:	ldr	r7, [r3, r2]
   13af8:	subs	r6, r0, #0
   13afc:	ldr	r3, [r7]
   13b00:	str	r3, [sp, #12]
   13b04:	beq	13ba8 <__snprintf_chk@plt+0x2cd8>
   13b08:	bl	10de0 <strlen@plt>
   13b0c:	cmp	r0, #35	; 0x23
   13b10:	bls	13b74 <__snprintf_chk@plt+0x2ca4>
   13b14:	cmp	r0, #36	; 0x24
   13b18:	bne	13ba8 <__snprintf_chk@plt+0x2cd8>
   13b1c:	ldr	r4, [pc, #260]	; 13c28 <__snprintf_chk@plt+0x2d58>
   13b20:	ldr	r0, [pc, #260]	; 13c2c <__snprintf_chk@plt+0x2d5c>
   13b24:	ldr	r5, [pc, #260]	; 13c30 <__snprintf_chk@plt+0x2d60>
   13b28:	add	r4, pc, r4
   13b2c:	add	r0, pc, r0
   13b30:	add	r5, pc, r5
   13b34:	b	13b48 <__snprintf_chk@plt+0x2c78>
   13b38:	ldr	r5, [r4, #12]
   13b3c:	cmp	r5, #0
   13b40:	beq	13bb0 <__snprintf_chk@plt+0x2ce0>
   13b44:	ldr	r0, [r4, #8]!
   13b48:	mov	r1, r6
   13b4c:	bl	10d14 <strcasecmp@plt>
   13b50:	cmp	r0, #0
   13b54:	bne	13b38 <__snprintf_chk@plt+0x2c68>
   13b58:	ldr	r2, [sp, #12]
   13b5c:	ldr	r3, [r7]
   13b60:	mov	r0, r5
   13b64:	cmp	r2, r3
   13b68:	bne	13c1c <__snprintf_chk@plt+0x2d4c>
   13b6c:	add	sp, sp, #20
   13b70:	pop	{r4, r5, r6, r7, pc}
   13b74:	mov	r4, #0
   13b78:	mov	r0, r6
   13b7c:	mov	r2, r4
   13b80:	add	r1, sp, #8
   13b84:	str	r4, [sp, #8]
   13b88:	bl	10c9c <strtol@plt>
   13b8c:	ldr	r5, [sp, #8]
   13b90:	cmp	r5, r4
   13b94:	str	r0, [sp, #4]
   13b98:	beq	13b58 <__snprintf_chk@plt+0x2c88>
   13b9c:	ldrb	r2, [r5]
   13ba0:	cmp	r2, r4
   13ba4:	beq	13bd8 <__snprintf_chk@plt+0x2d08>
   13ba8:	mov	r5, #0
   13bac:	b	13b58 <__snprintf_chk@plt+0x2c88>
   13bb0:	ldr	r1, [pc, #124]	; 13c34 <__snprintf_chk@plt+0x2d64>
   13bb4:	mov	r2, #28
   13bb8:	add	r1, pc, r1
   13bbc:	add	r0, r6, #8
   13bc0:	bl	10e04 <strncasecmp@plt>
   13bc4:	cmp	r0, #0
   13bc8:	beq	13bf0 <__snprintf_chk@plt+0x2d20>
   13bcc:	ldr	r5, [pc, #100]	; 13c38 <__snprintf_chk@plt+0x2d68>
   13bd0:	add	r5, pc, r5
   13bd4:	b	13b58 <__snprintf_chk@plt+0x2c88>
   13bd8:	cmp	r0, #65536	; 0x10000
   13bdc:	bcs	13c10 <__snprintf_chk@plt+0x2d40>
   13be0:	uxth	r0, r0
   13be4:	bl	13a5c <__snprintf_chk@plt+0x2b8c>
   13be8:	mov	r5, r0
   13bec:	b	13b58 <__snprintf_chk@plt+0x2c88>
   13bf0:	ldr	r1, [pc, #68]	; 13c3c <__snprintf_chk@plt+0x2d6c>
   13bf4:	mov	r0, r6
   13bf8:	add	r2, sp, #4
   13bfc:	add	r1, pc, r1
   13c00:	bl	10e70 <sscanf@plt>
   13c04:	cmp	r0, #1
   13c08:	bne	13ba8 <__snprintf_chk@plt+0x2cd8>
   13c0c:	ldr	r0, [sp, #4]
   13c10:	bl	13ab8 <__snprintf_chk@plt+0x2be8>
   13c14:	mov	r5, r0
   13c18:	b	13b58 <__snprintf_chk@plt+0x2c88>
   13c1c:	bl	10d08 <__stack_chk_fail@plt>
   13c20:	andeq	r5, r1, ip, lsr #8
   13c24:	ldrdeq	r0, [r0], -r4
   13c28:	andeq	r3, r1, r8, asr #27
   13c2c:	andeq	r0, r0, r0, asr #16
   13c30:	andeq	r0, r0, r4, ror #16
   13c34:	andeq	r0, r0, r0, lsl r8
   13c38:	andeq	r0, r0, r4, ror #15
   13c3c:	andeq	r0, r0, r8, asr #15
   13c40:	ldr	r3, [pc, #116]	; 13cbc <__snprintf_chk@plt+0x2dec>
   13c44:	ldr	ip, [pc, #116]	; 13cc0 <__snprintf_chk@plt+0x2df0>
   13c48:	mov	r2, #0
   13c4c:	add	r3, pc, r3
   13c50:	push	{r4, lr}
   13c54:	add	ip, pc, ip
   13c58:	add	r3, r3, #352	; 0x160
   13c5c:	mov	r4, r2
   13c60:	mov	r1, r2
   13c64:	b	13c7c <__snprintf_chk@plt+0x2dac>
   13c68:	ldr	ip, [r3, #12]
   13c6c:	add	r1, r1, #1
   13c70:	cmp	ip, #0
   13c74:	beq	13ca4 <__snprintf_chk@plt+0x2dd4>
   13c78:	ldrh	r2, [r3, #8]!
   13c7c:	ldrb	lr, [r3, #2]
   13c80:	cmp	lr, #0
   13c84:	beq	13c94 <__snprintf_chk@plt+0x2dc4>
   13c88:	cmp	r2, r0
   13c8c:	bhi	13ca4 <__snprintf_chk@plt+0x2dd4>
   13c90:	mov	r4, r1
   13c94:	cmp	r2, r0
   13c98:	bne	13c68 <__snprintf_chk@plt+0x2d98>
   13c9c:	mov	r0, ip
   13ca0:	pop	{r4, pc}
   13ca4:	ldr	r3, [pc, #24]	; 13cc4 <__snprintf_chk@plt+0x2df4>
   13ca8:	add	r3, pc, r3
   13cac:	add	r4, r3, r4, lsl #3
   13cb0:	ldr	ip, [r4, #356]	; 0x164
   13cb4:	mov	r0, ip
   13cb8:	pop	{r4, pc}
   13cbc:	andeq	r3, r1, r4, lsr #25
   13cc0:	andeq	r0, r0, r0, lsl r7
   13cc4:	andeq	r3, r1, r8, asr #24
   13cc8:	push	{r4, r5, r6, r7, r8, lr}
   13ccc:	subs	r7, r0, #0
   13cd0:	beq	13d24 <__snprintf_chk@plt+0x2e54>
   13cd4:	mov	r6, r1
   13cd8:	mov	r5, r2
   13cdc:	bl	10cfc <strdup@plt>
   13ce0:	ldrb	r3, [r0]
   13ce4:	mov	r7, r0
   13ce8:	cmp	r3, #0
   13cec:	beq	13d24 <__snprintf_chk@plt+0x2e54>
   13cf0:	ldrb	r4, [r6]
   13cf4:	cmp	r4, #0
   13cf8:	beq	13d24 <__snprintf_chk@plt+0x2e54>
   13cfc:	mov	r0, r7
   13d00:	b	13d08 <__snprintf_chk@plt+0x2e38>
   13d04:	strb	r5, [r0]
   13d08:	mov	r1, r4
   13d0c:	bl	10dec <strchr@plt>
   13d10:	cmp	r0, #0
   13d14:	bne	13d04 <__snprintf_chk@plt+0x2e34>
   13d18:	ldrb	r4, [r6, #1]!
   13d1c:	cmp	r4, #0
   13d20:	bne	13cfc <__snprintf_chk@plt+0x2e2c>
   13d24:	mov	r0, r7
   13d28:	pop	{r4, r5, r6, r7, r8, pc}
   13d2c:	cmp	r1, #0
   13d30:	cmpne	r0, #0
   13d34:	beq	13d94 <__snprintf_chk@plt+0x2ec4>
   13d38:	ldrb	r3, [r0]
   13d3c:	ldrb	r2, [r1]
   13d40:	cmp	r3, #0
   13d44:	beq	13d8c <__snprintf_chk@plt+0x2ebc>
   13d48:	cmp	r2, #0
   13d4c:	beq	13d94 <__snprintf_chk@plt+0x2ec4>
   13d50:	push	{r4, r5, r6, lr}
   13d54:	mov	r5, r1
   13d58:	mov	r4, r0
   13d5c:	bl	10de0 <strlen@plt>
   13d60:	mov	r6, r0
   13d64:	mov	r0, r5
   13d68:	bl	10de0 <strlen@plt>
   13d6c:	cmp	r6, r0
   13d70:	mov	r2, r0
   13d74:	blt	13d9c <__snprintf_chk@plt+0x2ecc>
   13d78:	sub	r0, r6, r0
   13d7c:	add	r0, r4, r0
   13d80:	mov	r1, r5
   13d84:	pop	{r4, r5, r6, lr}
   13d88:	b	10ea0 <strncmp@plt>
   13d8c:	cmp	r2, #0
   13d90:	beq	13d50 <__snprintf_chk@plt+0x2e80>
   13d94:	mvn	r0, #0
   13d98:	bx	lr
   13d9c:	mvn	r0, #0
   13da0:	pop	{r4, r5, r6, pc}
   13da4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13da8:	mov	r7, r0
   13dac:	ldr	r6, [pc, #72]	; 13dfc <__snprintf_chk@plt+0x2f2c>
   13db0:	ldr	r5, [pc, #72]	; 13e00 <__snprintf_chk@plt+0x2f30>
   13db4:	add	r6, pc, r6
   13db8:	add	r5, pc, r5
   13dbc:	sub	r6, r6, r5
   13dc0:	mov	r8, r1
   13dc4:	mov	r9, r2
   13dc8:	bl	10c64 <cfmakeraw@plt-0x20>
   13dcc:	asrs	r6, r6, #2
   13dd0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13dd4:	mov	r4, #0
   13dd8:	add	r4, r4, #1
   13ddc:	ldr	r3, [r5], #4
   13de0:	mov	r2, r9
   13de4:	mov	r1, r8
   13de8:	mov	r0, r7
   13dec:	blx	r3
   13df0:	cmp	r6, r4
   13df4:	bne	13dd8 <__snprintf_chk@plt+0x2f08>
   13df8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13dfc:	andeq	r3, r1, r8, lsr fp
   13e00:	andeq	r3, r1, r0, lsr fp
   13e04:	bx	lr

Disassembly of section .fini:

00013e08 <.fini>:
   13e08:	push	{r3, lr}
   13e0c:	pop	{r3, pc}
