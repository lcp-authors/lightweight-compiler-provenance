
raspbian-preinstalled/setlogcons:     file format elf32-littlearm


Disassembly of section .init:

00010608 <.init>:
   10608:	push	{r3, lr}
   1060c:	bl	1085c <close@plt+0x150>
   10610:	pop	{r3, pc}

Disassembly of section .plt:

00010614 <strtol@plt-0x14>:
   10614:	push	{lr}		; (str lr, [sp, #-4]!)
   10618:	ldr	lr, [pc, #4]	; 10624 <strtol@plt-0x4>
   1061c:	add	lr, pc, lr
   10620:	ldr	pc, [lr, #8]!
   10624:	ldrdeq	r1, [r1], -ip

00010628 <strtol@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #69632	; 0x11000
   10630:	ldr	pc, [ip, #2524]!	; 0x9dc

00010634 <dcgettext@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #69632	; 0x11000
   1063c:	ldr	pc, [ip, #2516]!	; 0x9d4

00010640 <__stack_chk_fail@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #69632	; 0x11000
   10648:	ldr	pc, [ip, #2508]!	; 0x9cc

0001064c <textdomain@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #69632	; 0x11000
   10654:	ldr	pc, [ip, #2500]!	; 0x9c4

00010658 <perror@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #69632	; 0x11000
   10660:	ldr	pc, [ip, #2492]!	; 0x9bc

00010664 <ioctl@plt>:
   10664:	add	ip, pc, #0, 12
   10668:	add	ip, ip, #69632	; 0x11000
   1066c:	ldr	pc, [ip, #2484]!	; 0x9b4

00010670 <malloc@plt>:
   10670:	add	ip, pc, #0, 12
   10674:	add	ip, ip, #69632	; 0x11000
   10678:	ldr	pc, [ip, #2476]!	; 0x9ac

0001067c <__libc_start_main@plt>:
   1067c:	add	ip, pc, #0, 12
   10680:	add	ip, ip, #69632	; 0x11000
   10684:	ldr	pc, [ip, #2468]!	; 0x9a4

00010688 <strerror@plt>:
   10688:	add	ip, pc, #0, 12
   1068c:	add	ip, ip, #69632	; 0x11000
   10690:	ldr	pc, [ip, #2460]!	; 0x99c

00010694 <__vfprintf_chk@plt>:
   10694:	add	ip, pc, #0, 12
   10698:	add	ip, ip, #69632	; 0x11000
   1069c:	ldr	pc, [ip, #2452]!	; 0x994

000106a0 <__gmon_start__@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #69632	; 0x11000
   106a8:	ldr	pc, [ip, #2444]!	; 0x98c

000106ac <open@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #69632	; 0x11000
   106b4:	ldr	pc, [ip, #2436]!	; 0x984

000106b8 <exit@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #69632	; 0x11000
   106c0:	ldr	pc, [ip, #2428]!	; 0x97c

000106c4 <__errno_location@plt>:
   106c4:	add	ip, pc, #0, 12
   106c8:	add	ip, ip, #69632	; 0x11000
   106cc:	ldr	pc, [ip, #2420]!	; 0x974

000106d0 <__fprintf_chk@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #69632	; 0x11000
   106d8:	ldr	pc, [ip, #2412]!	; 0x96c

000106dc <setlocale@plt>:
   106dc:	add	ip, pc, #0, 12
   106e0:	add	ip, ip, #69632	; 0x11000
   106e4:	ldr	pc, [ip, #2404]!	; 0x964

000106e8 <bindtextdomain@plt>:
   106e8:	add	ip, pc, #0, 12
   106ec:	add	ip, ip, #69632	; 0x11000
   106f0:	ldr	pc, [ip, #2396]!	; 0x95c

000106f4 <isatty@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #69632	; 0x11000
   106fc:	ldr	pc, [ip, #2388]!	; 0x954

00010700 <abort@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #69632	; 0x11000
   10708:	ldr	pc, [ip, #2380]!	; 0x94c

0001070c <close@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #69632	; 0x11000
   10714:	ldr	pc, [ip, #2372]!	; 0x944

Disassembly of section .text:

00010718 <.text>:
   10718:	push	{r4, r5, r6, lr}
   1071c:	sub	sp, sp, #8
   10720:	ldr	r4, [pc, #220]	; 10804 <close@plt+0xf8>
   10724:	mov	r5, r0
   10728:	mov	r6, r1
   1072c:	ldr	r3, [r4]
   10730:	ldr	r1, [pc, #208]	; 10808 <close@plt+0xfc>
   10734:	mov	r0, #6
   10738:	str	r3, [sp, #4]
   1073c:	bl	106dc <setlocale@plt>
   10740:	ldr	r1, [pc, #196]	; 1080c <close@plt+0x100>
   10744:	ldr	r0, [pc, #196]	; 10810 <close@plt+0x104>
   10748:	bl	106e8 <bindtextdomain@plt>
   1074c:	ldr	r0, [pc, #188]	; 10810 <close@plt+0x104>
   10750:	bl	1064c <textdomain@plt>
   10754:	cmp	r5, #2
   10758:	movne	r6, #0
   1075c:	beq	107e8 <close@plt+0xdc>
   10760:	mov	r0, #0
   10764:	bl	109d4 <close@plt+0x2c8>
   10768:	subs	r5, r0, #0
   1076c:	blt	107c4 <close@plt+0xb8>
   10770:	mov	r3, #11
   10774:	mov	r0, r5
   10778:	mov	r2, sp
   1077c:	ldr	r1, [pc, #144]	; 10814 <close@plt+0x108>
   10780:	strb	r6, [sp, #1]
   10784:	strb	r3, [sp]
   10788:	bl	10664 <ioctl@plt>
   1078c:	cmp	r0, #0
   10790:	beq	107a8 <close@plt+0x9c>
   10794:	bl	106c4 <__errno_location@plt>
   10798:	ldr	r2, [pc, #120]	; 10818 <close@plt+0x10c>
   1079c:	ldr	r1, [r0]
   107a0:	mov	r0, #1
   107a4:	bl	10b98 <close@plt+0x48c>
   107a8:	ldr	r2, [sp, #4]
   107ac:	ldr	r3, [r4]
   107b0:	mov	r0, #0
   107b4:	cmp	r2, r3
   107b8:	bne	10800 <close@plt+0xf4>
   107bc:	add	sp, sp, #8
   107c0:	pop	{r4, r5, r6, pc}
   107c4:	mov	r2, #5
   107c8:	ldr	r1, [pc, #76]	; 1081c <close@plt+0x110>
   107cc:	mov	r0, #0
   107d0:	bl	10634 <dcgettext@plt>
   107d4:	mov	r1, #0
   107d8:	mov	r2, r0
   107dc:	mov	r0, #1
   107e0:	bl	10b98 <close@plt+0x48c>
   107e4:	b	10770 <close@plt+0x64>
   107e8:	ldr	r0, [r6, #4]
   107ec:	mov	r2, #10
   107f0:	mov	r1, #0
   107f4:	bl	10628 <strtol@plt>
   107f8:	uxtb	r6, r0
   107fc:	b	10760 <close@plt+0x54>
   10800:	bl	10640 <__stack_chk_fail@plt>
   10804:	andeq	r1, r2, r8, lsl #30
   10808:	andeq	r1, r1, r0, lsl #3
   1080c:	andeq	r0, r1, ip, asr #31
   10810:	andeq	r0, r1, r0, ror #31
   10814:	andeq	r5, r0, ip, lsl r4
   10818:	andeq	r1, r1, ip, lsl r0
   1081c:	andeq	r0, r1, r4, ror #31
   10820:	mov	fp, #0
   10824:	mov	lr, #0
   10828:	pop	{r1}		; (ldr r1, [sp], #4)
   1082c:	mov	r2, sp
   10830:	push	{r2}		; (str r2, [sp, #-4]!)
   10834:	push	{r0}		; (str r0, [sp, #-4]!)
   10838:	ldr	ip, [pc, #16]	; 10850 <close@plt+0x144>
   1083c:	push	{ip}		; (str ip, [sp, #-4]!)
   10840:	ldr	r0, [pc, #12]	; 10854 <close@plt+0x148>
   10844:	ldr	r3, [pc, #12]	; 10858 <close@plt+0x14c>
   10848:	bl	1067c <__libc_start_main@plt>
   1084c:	bl	10700 <abort@plt>
   10850:			; <UNDEFINED> instruction: 0x00010fbc
   10854:	andeq	r0, r1, r8, lsl r7
   10858:	andeq	r0, r1, ip, asr pc
   1085c:	ldr	r3, [pc, #20]	; 10878 <close@plt+0x16c>
   10860:	ldr	r2, [pc, #20]	; 1087c <close@plt+0x170>
   10864:	add	r3, pc, r3
   10868:	ldr	r2, [r3, r2]
   1086c:	cmp	r2, #0
   10870:	bxeq	lr
   10874:	b	106a0 <__gmon_start__@plt>
   10878:	muleq	r1, r4, r7
   1087c:	andeq	r0, r0, ip, asr r0
   10880:	ldr	r0, [pc, #24]	; 108a0 <close@plt+0x194>
   10884:	ldr	r3, [pc, #24]	; 108a4 <close@plt+0x198>
   10888:	cmp	r3, r0
   1088c:	bxeq	lr
   10890:	ldr	r3, [pc, #16]	; 108a8 <close@plt+0x19c>
   10894:	cmp	r3, #0
   10898:	bxeq	lr
   1089c:	bx	r3
   108a0:	andeq	r2, r2, r8, rrx
   108a4:	andeq	r2, r2, r8, rrx
   108a8:	andeq	r0, r0, r0
   108ac:	ldr	r0, [pc, #36]	; 108d8 <close@plt+0x1cc>
   108b0:	ldr	r1, [pc, #36]	; 108dc <close@plt+0x1d0>
   108b4:	sub	r1, r1, r0
   108b8:	asr	r1, r1, #2
   108bc:	add	r1, r1, r1, lsr #31
   108c0:	asrs	r1, r1, #1
   108c4:	bxeq	lr
   108c8:	ldr	r3, [pc, #16]	; 108e0 <close@plt+0x1d4>
   108cc:	cmp	r3, #0
   108d0:	bxeq	lr
   108d4:	bx	r3
   108d8:	andeq	r2, r2, r8, rrx
   108dc:	andeq	r2, r2, r8, rrx
   108e0:	andeq	r0, r0, r0
   108e4:	push	{r4, lr}
   108e8:	ldr	r4, [pc, #24]	; 10908 <close@plt+0x1fc>
   108ec:	ldrb	r3, [r4]
   108f0:	cmp	r3, #0
   108f4:	popne	{r4, pc}
   108f8:	bl	10880 <close@plt+0x174>
   108fc:	mov	r3, #1
   10900:	strb	r3, [r4]
   10904:	pop	{r4, pc}
   10908:	andeq	r2, r2, ip, rrx
   1090c:	b	108ac <close@plt+0x1a0>
   10910:	push	{r4, lr}
   10914:	mov	r1, #2
   10918:	mov	r4, r0
   1091c:	bl	106ac <open@plt>
   10920:	cmp	r0, #0
   10924:	popge	{r4, pc}
   10928:	mov	r1, #1
   1092c:	mov	r0, r4
   10930:	bl	106ac <open@plt>
   10934:	cmp	r0, #0
   10938:	popge	{r4, pc}
   1093c:	mov	r0, r4
   10940:	mov	r1, #0
   10944:	bl	106ac <open@plt>
   10948:	orr	r0, r0, r0, asr #31
   1094c:	pop	{r4, pc}
   10950:	push	{r4, r5, lr}
   10954:	sub	sp, sp, #12
   10958:	ldr	r4, [pc, #108]	; 109cc <close@plt+0x2c0>
   1095c:	mov	r3, #0
   10960:	strb	r3, [sp, #3]
   10964:	ldr	r3, [r4]
   10968:	mov	r5, r0
   1096c:	str	r3, [sp, #4]
   10970:	bl	106f4 <isatty@plt>
   10974:	cmp	r0, #0
   10978:	bne	10998 <close@plt+0x28c>
   1097c:	mov	r0, #0
   10980:	ldr	r2, [sp, #4]
   10984:	ldr	r3, [r4]
   10988:	cmp	r2, r3
   1098c:	bne	109c8 <close@plt+0x2bc>
   10990:	add	sp, sp, #12
   10994:	pop	{r4, r5, pc}
   10998:	mov	r0, r5
   1099c:	add	r2, sp, #3
   109a0:	ldr	r1, [pc, #40]	; 109d0 <close@plt+0x2c4>
   109a4:	bl	10664 <ioctl@plt>
   109a8:	cmp	r0, #0
   109ac:	bne	1097c <close@plt+0x270>
   109b0:	ldrb	r0, [sp, #3]
   109b4:	sub	r0, r0, #1
   109b8:	cmp	r0, #1
   109bc:	movhi	r0, #0
   109c0:	movls	r0, #1
   109c4:	b	10980 <close@plt+0x274>
   109c8:	bl	10640 <__stack_chk_fail@plt>
   109cc:	andeq	r1, r2, r8, lsl #30
   109d0:	andeq	r4, r0, r3, lsr fp
   109d4:	push	{r4, r5, r6, lr}
   109d8:	subs	r5, r0, #0
   109dc:	beq	10a00 <close@plt+0x2f4>
   109e0:	bl	10910 <close@plt+0x204>
   109e4:	subs	r4, r0, #0
   109e8:	blt	10a98 <close@plt+0x38c>
   109ec:	bl	10950 <close@plt+0x244>
   109f0:	cmp	r0, #0
   109f4:	beq	10a90 <close@plt+0x384>
   109f8:	mov	r0, r4
   109fc:	pop	{r4, r5, r6, pc}
   10a00:	ldr	r5, [pc, #196]	; 10acc <close@plt+0x3c0>
   10a04:	ldr	r0, [pc, #196]	; 10ad0 <close@plt+0x3c4>
   10a08:	b	10a18 <close@plt+0x30c>
   10a0c:	ldr	r0, [r5], #4
   10a10:	cmp	r0, #0
   10a14:	beq	10a44 <close@plt+0x338>
   10a18:	bl	10910 <close@plt+0x204>
   10a1c:	subs	r4, r0, #0
   10a20:	blt	10a0c <close@plt+0x300>
   10a24:	bl	10950 <close@plt+0x244>
   10a28:	cmp	r0, #0
   10a2c:	bne	109f8 <close@plt+0x2ec>
   10a30:	mov	r0, r4
   10a34:	bl	1070c <close@plt>
   10a38:	ldr	r0, [r5], #4
   10a3c:	cmp	r0, #0
   10a40:	bne	10a18 <close@plt+0x30c>
   10a44:	mov	r4, r0
   10a48:	mov	r0, r4
   10a4c:	bl	10950 <close@plt+0x244>
   10a50:	cmp	r0, #0
   10a54:	bne	109f8 <close@plt+0x2ec>
   10a58:	add	r4, r4, #1
   10a5c:	cmp	r4, #3
   10a60:	bne	10a48 <close@plt+0x33c>
   10a64:	ldr	r3, [pc, #104]	; 10ad4 <close@plt+0x3c8>
   10a68:	mov	r2, #5
   10a6c:	ldr	r1, [pc, #100]	; 10ad8 <close@plt+0x3cc>
   10a70:	ldr	r4, [r3]
   10a74:	bl	10634 <dcgettext@plt>
   10a78:	mov	r1, #1
   10a7c:	mov	r2, r0
   10a80:	mov	r0, r4
   10a84:	bl	106d0 <__fprintf_chk@plt>
   10a88:	mov	r0, #1
   10a8c:	bl	106b8 <exit@plt>
   10a90:	mov	r0, r4
   10a94:	bl	1070c <close@plt>
   10a98:	ldr	r3, [pc, #52]	; 10ad4 <close@plt+0x3c8>
   10a9c:	mov	r2, #5
   10aa0:	ldr	r1, [pc, #52]	; 10adc <close@plt+0x3d0>
   10aa4:	mov	r0, #0
   10aa8:	ldr	r4, [r3]
   10aac:	bl	10634 <dcgettext@plt>
   10ab0:	mov	r3, r5
   10ab4:	mov	r1, #1
   10ab8:	mov	r2, r0
   10abc:	mov	r0, r4
   10ac0:	bl	106d0 <__fprintf_chk@plt>
   10ac4:	mov	r0, #1
   10ac8:	bl	106b8 <exit@plt>
   10acc:	andeq	r1, r1, ip, lsr #32
   10ad0:	andeq	r1, r1, r4, asr #32
   10ad4:	andeq	r2, r2, r8, rrx
   10ad8:	andeq	r1, r1, r8, rrx
   10adc:	andeq	r1, r1, r4, asr r0
   10ae0:	push	{r1, r2, r3}
   10ae4:	push	{r4, r5, r6, r7, lr}
   10ae8:	sub	sp, sp, #8
   10aec:	ldr	r5, [pc, #144]	; 10b84 <close@plt+0x478>
   10af0:	ldr	r4, [pc, #144]	; 10b88 <close@plt+0x47c>
   10af4:	ldr	r3, [pc, #144]	; 10b8c <close@plt+0x480>
   10af8:	ldr	r1, [r5]
   10afc:	ldr	r7, [sp, #28]
   10b00:	add	ip, sp, #32
   10b04:	mov	r6, r0
   10b08:	ldr	r3, [r3]
   10b0c:	ldr	r2, [pc, #124]	; 10b90 <close@plt+0x484>
   10b10:	str	r1, [sp, #4]
   10b14:	ldr	r0, [r4]
   10b18:	mov	r1, #1
   10b1c:	str	ip, [sp]
   10b20:	bl	106d0 <__fprintf_chk@plt>
   10b24:	mov	r2, r7
   10b28:	ldr	r0, [r4]
   10b2c:	ldr	r3, [sp]
   10b30:	mov	r1, #1
   10b34:	bl	10694 <__vfprintf_chk@plt>
   10b38:	cmp	r6, #0
   10b3c:	ble	10b60 <close@plt+0x454>
   10b40:	mov	r0, r6
   10b44:	ldr	r4, [r4]
   10b48:	bl	10688 <strerror@plt>
   10b4c:	ldr	r2, [pc, #64]	; 10b94 <close@plt+0x488>
   10b50:	mov	r1, #1
   10b54:	mov	r3, r0
   10b58:	mov	r0, r4
   10b5c:	bl	106d0 <__fprintf_chk@plt>
   10b60:	ldr	r2, [sp, #4]
   10b64:	ldr	r3, [r5]
   10b68:	cmp	r2, r3
   10b6c:	bne	10b80 <close@plt+0x474>
   10b70:	add	sp, sp, #8
   10b74:	pop	{r4, r5, r6, r7, lr}
   10b78:	add	sp, sp, #12
   10b7c:	bx	lr
   10b80:	bl	10640 <__stack_chk_fail@plt>
   10b84:	andeq	r1, r2, r8, lsl #30
   10b88:	andeq	r2, r2, r8, rrx
   10b8c:	andeq	r2, r2, r0, ror r0
   10b90:	andeq	r1, r1, r4, ror #1
   10b94:	andeq	r1, r1, ip, ror #1
   10b98:	push	{r2, r3}
   10b9c:	mov	r5, r1
   10ba0:	ldr	r2, [pc, #124]	; 10c24 <close@plt+0x518>
   10ba4:	push	{r7, lr}
   10ba8:	sub	sp, sp, #8
   10bac:	ldr	r4, [pc, #116]	; 10c28 <close@plt+0x51c>
   10bb0:	ldr	r3, [pc, #116]	; 10c2c <close@plt+0x520>
   10bb4:	ldr	lr, [r2]
   10bb8:	ldr	r7, [sp, #16]
   10bbc:	add	ip, sp, #20
   10bc0:	ldr	r3, [r3]
   10bc4:	ldr	r2, [pc, #100]	; 10c30 <close@plt+0x524>
   10bc8:	mov	r1, #1
   10bcc:	mov	r6, r0
   10bd0:	ldr	r0, [r4]
   10bd4:	str	lr, [sp, #4]
   10bd8:	str	ip, [sp]
   10bdc:	bl	106d0 <__fprintf_chk@plt>
   10be0:	mov	r2, r7
   10be4:	ldr	r0, [r4]
   10be8:	ldr	r3, [sp]
   10bec:	mov	r1, #1
   10bf0:	bl	10694 <__vfprintf_chk@plt>
   10bf4:	cmp	r5, #0
   10bf8:	ble	10c1c <close@plt+0x510>
   10bfc:	mov	r0, r5
   10c00:	ldr	r4, [r4]
   10c04:	bl	10688 <strerror@plt>
   10c08:	ldr	r2, [pc, #36]	; 10c34 <close@plt+0x528>
   10c0c:	mov	r1, #1
   10c10:	mov	r3, r0
   10c14:	mov	r0, r4
   10c18:	bl	106d0 <__fprintf_chk@plt>
   10c1c:	mov	r0, r6
   10c20:	bl	106b8 <exit@plt>
   10c24:	andeq	r1, r2, r8, lsl #30
   10c28:	andeq	r2, r2, r8, rrx
   10c2c:	andeq	r2, r2, r0, ror r0
   10c30:	andeq	r1, r1, r4, ror #1
   10c34:	andeq	r1, r1, ip, ror #1
   10c38:	push	{r4, lr}
   10c3c:	mov	r2, r1
   10c40:	ldr	r1, [pc, #24]	; 10c60 <close@plt+0x554>
   10c44:	bl	10664 <ioctl@plt>
   10c48:	cmp	r0, #0
   10c4c:	popeq	{r4, pc}
   10c50:	ldr	r0, [pc, #12]	; 10c64 <close@plt+0x558>
   10c54:	bl	10658 <perror@plt>
   10c58:	mvn	r0, #0
   10c5c:	pop	{r4, pc}
   10c60:	andeq	r4, r0, r0, asr #22
   10c64:	strdeq	r1, [r1], -r4
   10c68:	push	{r4, lr}
   10c6c:	mov	r2, r1
   10c70:	ldr	r1, [pc, #24]	; 10c90 <close@plt+0x584>
   10c74:	bl	10664 <ioctl@plt>
   10c78:	cmp	r0, #0
   10c7c:	popeq	{r4, pc}
   10c80:	ldr	r0, [pc, #12]	; 10c94 <close@plt+0x588>
   10c84:	bl	10658 <perror@plt>
   10c88:	mvn	r0, #0
   10c8c:	pop	{r4, pc}
   10c90:	andeq	r4, r0, r1, asr #22
   10c94:	andeq	r1, r1, r0, lsl #2
   10c98:	push	{r4, lr}
   10c9c:	mov	r2, r1
   10ca0:	ldr	r1, [pc, #24]	; 10cc0 <close@plt+0x5b4>
   10ca4:	bl	10664 <ioctl@plt>
   10ca8:	cmp	r0, #0
   10cac:	popeq	{r4, pc}
   10cb0:	ldr	r0, [pc, #12]	; 10cc4 <close@plt+0x5b8>
   10cb4:	bl	10658 <perror@plt>
   10cb8:	mvn	r0, #0
   10cbc:	pop	{r4, pc}
   10cc0:	andeq	r4, r0, r9, ror #22
   10cc4:	andeq	r1, r1, ip, lsl #2
   10cc8:	push	{r4, lr}
   10ccc:	mov	r2, r1
   10cd0:	ldr	r1, [pc, #24]	; 10cf0 <close@plt+0x5e4>
   10cd4:	bl	10664 <ioctl@plt>
   10cd8:	cmp	r0, #0
   10cdc:	popeq	{r4, pc}
   10ce0:	ldr	r0, [pc, #12]	; 10cf4 <close@plt+0x5e8>
   10ce4:	bl	10658 <perror@plt>
   10ce8:	mvn	r0, #0
   10cec:	pop	{r4, pc}
   10cf0:	andeq	r4, r0, sl, ror #22
   10cf4:	andeq	r1, r1, ip, lsl r1
   10cf8:	push	{r4, r5, r6, r7, r8, lr}
   10cfc:	sub	sp, sp, #24
   10d00:	ldr	r5, [pc, #308]	; 10e3c <close@plt+0x730>
   10d04:	add	r4, sp, #12
   10d08:	mov	r3, #0
   10d0c:	ldr	ip, [r5]
   10d10:	mov	r6, r1
   10d14:	mov	r2, r4
   10d18:	ldr	r1, [pc, #288]	; 10e40 <close@plt+0x734>
   10d1c:	str	ip, [sp, #20]
   10d20:	strh	r3, [sp, #12]
   10d24:	str	r3, [sp, #16]
   10d28:	mov	r8, r0
   10d2c:	bl	10664 <ioctl@plt>
   10d30:	cmp	r0, #0
   10d34:	beq	10dbc <close@plt+0x6b0>
   10d38:	bl	106c4 <__errno_location@plt>
   10d3c:	ldr	r3, [r0]
   10d40:	cmp	r3, #12
   10d44:	bne	10de4 <close@plt+0x6d8>
   10d48:	ldrh	r7, [sp, #12]
   10d4c:	cmp	r7, #0
   10d50:	beq	10de4 <close@plt+0x6d8>
   10d54:	lsl	r0, r7, #2
   10d58:	bl	10670 <malloc@plt>
   10d5c:	cmp	r0, #0
   10d60:	str	r0, [sp, #16]
   10d64:	beq	10e04 <close@plt+0x6f8>
   10d68:	mov	r0, r8
   10d6c:	mov	r2, r4
   10d70:	ldr	r1, [pc, #200]	; 10e40 <close@plt+0x734>
   10d74:	bl	10664 <ioctl@plt>
   10d78:	cmp	r0, #0
   10d7c:	bne	10df4 <close@plt+0x6e8>
   10d80:	ldrh	r3, [sp, #12]
   10d84:	cmp	r3, r7
   10d88:	beq	10dbc <close@plt+0x6b0>
   10d8c:	ldr	r3, [pc, #176]	; 10e44 <close@plt+0x738>
   10d90:	mov	r2, #5
   10d94:	ldr	r1, [pc, #172]	; 10e48 <close@plt+0x73c>
   10d98:	ldr	r8, [r3]
   10d9c:	bl	10634 <dcgettext@plt>
   10da0:	ldrh	r2, [sp, #12]
   10da4:	mov	r3, r7
   10da8:	mov	r1, #1
   10dac:	str	r2, [sp]
   10db0:	mov	r2, r0
   10db4:	mov	r0, r8
   10db8:	bl	106d0 <__fprintf_chk@plt>
   10dbc:	ldm	r4, {r0, r1}
   10dc0:	mov	ip, #0
   10dc4:	stm	r6, {r0, r1}
   10dc8:	ldr	r2, [sp, #20]
   10dcc:	ldr	r3, [r5]
   10dd0:	mov	r0, ip
   10dd4:	cmp	r2, r3
   10dd8:	bne	10e38 <close@plt+0x72c>
   10ddc:	add	sp, sp, #24
   10de0:	pop	{r4, r5, r6, r7, r8, pc}
   10de4:	ldr	r0, [pc, #96]	; 10e4c <close@plt+0x740>
   10de8:	bl	10658 <perror@plt>
   10dec:	mvn	ip, #0
   10df0:	b	10dc8 <close@plt+0x6bc>
   10df4:	ldr	r0, [pc, #84]	; 10e50 <close@plt+0x744>
   10df8:	bl	10658 <perror@plt>
   10dfc:	mvn	ip, #0
   10e00:	b	10dc8 <close@plt+0x6bc>
   10e04:	ldr	r3, [pc, #56]	; 10e44 <close@plt+0x738>
   10e08:	mov	r2, #5
   10e0c:	ldr	r1, [pc, #64]	; 10e54 <close@plt+0x748>
   10e10:	ldr	r4, [r3]
   10e14:	bl	10634 <dcgettext@plt>
   10e18:	ldr	r3, [pc, #56]	; 10e58 <close@plt+0x74c>
   10e1c:	mov	r1, #1
   10e20:	ldr	r3, [r3]
   10e24:	mov	r2, r0
   10e28:	mov	r0, r4
   10e2c:	bl	106d0 <__fprintf_chk@plt>
   10e30:	mvn	ip, #0
   10e34:	b	10dc8 <close@plt+0x6bc>
   10e38:	bl	10640 <__stack_chk_fail@plt>
   10e3c:	andeq	r1, r2, r8, lsl #30
   10e40:	andeq	r4, r0, r6, ror #22
   10e44:	andeq	r2, r2, r8, rrx
   10e48:	andeq	r1, r1, ip, asr r1
   10e4c:	andeq	r1, r1, ip, lsr #2
   10e50:	andeq	r1, r1, r0, asr r1
   10e54:	andeq	r1, r1, ip, lsr r1
   10e58:	andeq	r2, r2, r0, ror r0
   10e5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e60:	sub	sp, sp, #16
   10e64:	ldr	r9, [pc, #220]	; 10f48 <close@plt+0x83c>
   10e68:	cmp	r1, #0
   10e6c:	mov	r4, r0
   10e70:	ldr	r3, [r9]
   10e74:	mov	r5, r2
   10e78:	str	r3, [sp, #12]
   10e7c:	beq	10f34 <close@plt+0x828>
   10e80:	ldrh	r3, [r1, #4]
   10e84:	ldr	r0, [r1]
   10e88:	add	r6, sp, #4
   10e8c:	str	r0, [sp, #4]
   10e90:	strh	r3, [r6, #4]
   10e94:	ldr	r7, [pc, #176]	; 10f4c <close@plt+0x840>
   10e98:	ldr	r8, [pc, #176]	; 10f50 <close@plt+0x844>
   10e9c:	b	10ee4 <close@plt+0x7d8>
   10ea0:	cmp	r5, #0
   10ea4:	beq	10f08 <close@plt+0x7fc>
   10ea8:	mov	r2, r5
   10eac:	mov	r1, r8
   10eb0:	mov	r0, r4
   10eb4:	bl	10664 <ioctl@plt>
   10eb8:	cmp	r0, #0
   10ebc:	beq	10f08 <close@plt+0x7fc>
   10ec0:	bl	106c4 <__errno_location@plt>
   10ec4:	ldr	r3, [r0]
   10ec8:	cmp	r3, #12
   10ecc:	bne	10f24 <close@plt+0x818>
   10ed0:	ldrh	r3, [sp, #8]
   10ed4:	cmp	r3, #99	; 0x63
   10ed8:	bhi	10f24 <close@plt+0x818>
   10edc:	add	r3, r3, #1
   10ee0:	strh	r3, [sp, #8]
   10ee4:	mov	r2, r6
   10ee8:	mov	r1, r7
   10eec:	mov	r0, r4
   10ef0:	bl	10664 <ioctl@plt>
   10ef4:	subs	sl, r0, #0
   10ef8:	beq	10ea0 <close@plt+0x794>
   10efc:	ldr	r0, [pc, #80]	; 10f54 <close@plt+0x848>
   10f00:	bl	10658 <perror@plt>
   10f04:	mvn	sl, #0
   10f08:	ldr	r2, [sp, #12]
   10f0c:	ldr	r3, [r9]
   10f10:	mov	r0, sl
   10f14:	cmp	r2, r3
   10f18:	bne	10f44 <close@plt+0x838>
   10f1c:	add	sp, sp, #16
   10f20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f24:	ldr	r0, [pc, #44]	; 10f58 <close@plt+0x84c>
   10f28:	bl	10658 <perror@plt>
   10f2c:	mvn	sl, #0
   10f30:	b	10f08 <close@plt+0x7fc>
   10f34:	str	r1, [sp, #4]
   10f38:	strh	r1, [sp, #8]
   10f3c:	add	r6, sp, #4
   10f40:	b	10e94 <close@plt+0x788>
   10f44:	bl	10640 <__stack_chk_fail@plt>
   10f48:	andeq	r1, r2, r8, lsl #30
   10f4c:	andeq	r4, r0, r8, ror #22
   10f50:	andeq	r4, r0, r7, ror #22
   10f54:	andeq	r1, r1, r4, lsl #3
   10f58:	muleq	r1, r4, r1
   10f5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f60:	mov	r7, r0
   10f64:	ldr	r6, [pc, #72]	; 10fb4 <close@plt+0x8a8>
   10f68:	ldr	r5, [pc, #72]	; 10fb8 <close@plt+0x8ac>
   10f6c:	add	r6, pc, r6
   10f70:	add	r5, pc, r5
   10f74:	sub	r6, r6, r5
   10f78:	mov	r8, r1
   10f7c:	mov	r9, r2
   10f80:	bl	10608 <strtol@plt-0x20>
   10f84:	asrs	r6, r6, #2
   10f88:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f8c:	mov	r4, #0
   10f90:	add	r4, r4, #1
   10f94:	ldr	r3, [r5], #4
   10f98:	mov	r2, r9
   10f9c:	mov	r1, r8
   10fa0:	mov	r0, r7
   10fa4:	blx	r3
   10fa8:	cmp	r6, r4
   10fac:	bne	10f90 <close@plt+0x884>
   10fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10fb4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   10fb8:	andeq	r0, r1, r8, lsl #31
   10fbc:	bx	lr

Disassembly of section .fini:

00010fc0 <.fini>:
   10fc0:	push	{r3, lr}
   10fc4:	pop	{r3, pc}
