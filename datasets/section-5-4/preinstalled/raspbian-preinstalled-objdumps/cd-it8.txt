
raspbian-preinstalled/cd-it8:     file format elf32-littlearm


Disassembly of section .init:

00011198 <.init>:
   11198:	push	{r3, lr}
   1119c:	bl	11c30 <g_slice_alloc0@plt+0x724>
   111a0:	pop	{r3, pc}

Disassembly of section .plt:

000111a4 <g_free@plt-0x14>:
   111a4:	push	{lr}		; (str lr, [sp, #-4]!)
   111a8:	ldr	lr, [pc, #4]	; 111b4 <g_free@plt-0x4>
   111ac:	add	lr, pc, lr
   111b0:	ldr	pc, [lr, #8]!
   111b4:	andeq	r1, r1, r8, lsl sp

000111b8 <g_free@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #69632	; 0x11000
   111c0:	ldr	pc, [ip, #3352]!	; 0xd18

000111c4 <cd_color_xyz_set@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #69632	; 0x11000
   111cc:	ldr	pc, [ip, #3344]!	; 0xd10

000111d0 <abort@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #69632	; 0x11000
   111d8:	ldr	pc, [ip, #3336]!	; 0xd08

000111dc <g_strsplit_set@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #69632	; 0x11000
   111e4:	ldr	pc, [ip, #3328]!	; 0xd00

000111e8 <__libc_start_main@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #69632	; 0x11000
   111f0:	ldr	pc, [ip, #3320]!	; 0xcf8

000111f4 <g_path_get_basename@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #69632	; 0x11000
   111fc:	ldr	pc, [ip, #3312]!	; 0xcf0

00011200 <g_ptr_array_new_with_free_func@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #69632	; 0x11000
   11208:	ldr	pc, [ip, #3304]!	; 0xce8

0001120c <g_print@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #69632	; 0x11000
   11214:	ldr	pc, [ip, #3296]!	; 0xce0

00011218 <g_option_context_free@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #69632	; 0x11000
   11220:	ldr	pc, [ip, #3288]!	; 0xcd8

00011224 <__gmon_start__@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #69632	; 0x11000
   1122c:	ldr	pc, [ip, #3280]!	; 0xcd0

00011230 <g_object_unref@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #69632	; 0x11000
   11238:	ldr	pc, [ip, #3272]!	; 0xcc8

0001123c <cd_spectrum_free@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #69632	; 0x11000
   11244:	ldr	pc, [ip, #3264]!	; 0xcc0

00011248 <cd_spectrum_set_norm@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #69632	; 0x11000
   11250:	ldr	pc, [ip, #3256]!	; 0xcb8

00011254 <cd_it8_set_title@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #69632	; 0x11000
   1125c:	ldr	pc, [ip, #3248]!	; 0xcb0

00011260 <g_strrstr@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #69632	; 0x11000
   11268:	ldr	pc, [ip, #3240]!	; 0xca8

0001126c <g_strcmp0@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #69632	; 0x11000
   11274:	ldr	pc, [ip, #3232]!	; 0xca0

00011278 <g_strdup@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #69632	; 0x11000
   11280:	ldr	pc, [ip, #3224]!	; 0xc98

00011284 <cd_spectrum_add_value@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #69632	; 0x11000
   1128c:	ldr	pc, [ip, #3216]!	; 0xc90

00011290 <cd_spectrum_set_end@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #69632	; 0x11000
   11298:	ldr	pc, [ip, #3208]!	; 0xc88

0001129c <g_printerr@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #69632	; 0x11000
   112a4:	ldr	pc, [ip, #3200]!	; 0xc80

000112a8 <memset@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #69632	; 0x11000
   112b0:	ldr	pc, [ip, #3192]!	; 0xc78

000112b4 <cd_it8_save_to_file@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #69632	; 0x11000
   112bc:	ldr	pc, [ip, #3184]!	; 0xc70

000112c0 <g_option_context_add_main_entries@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #69632	; 0x11000
   112c8:	ldr	pc, [ip, #3176]!	; 0xc68

000112cc <g_string_new@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #69632	; 0x11000
   112d4:	ldr	pc, [ip, #3168]!	; 0xc60

000112d8 <bindtextdomain@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #69632	; 0x11000
   112e0:	ldr	pc, [ip, #3160]!	; 0xc58

000112e4 <g_strv_length@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #69632	; 0x11000
   112ec:	ldr	pc, [ip, #3152]!	; 0xc50

000112f0 <g_ptr_array_add@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #69632	; 0x11000
   112f8:	ldr	pc, [ip, #3144]!	; 0xc48

000112fc <bind_textdomain_codeset@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #69632	; 0x11000
   11304:	ldr	pc, [ip, #3136]!	; 0xc40

00011308 <g_string_set_size@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #69632	; 0x11000
   11310:	ldr	pc, [ip, #3128]!	; 0xc38

00011314 <dcgettext@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #69632	; 0x11000
   1131c:	ldr	pc, [ip, #3120]!	; 0xc30

00011320 <cd_it8_new_with_kind@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #69632	; 0x11000
   11328:	ldr	pc, [ip, #3112]!	; 0xc28

0001132c <g_strdup_printf@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #69632	; 0x11000
   11334:	ldr	pc, [ip, #3104]!	; 0xc20

00011338 <g_string_free@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #69632	; 0x11000
   11340:	ldr	pc, [ip, #3096]!	; 0xc18

00011344 <cd_it8_new@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #69632	; 0x11000
   1134c:	ldr	pc, [ip, #3088]!	; 0xc10

00011350 <g_option_context_set_summary@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #69632	; 0x11000
   11358:	ldr	pc, [ip, #3080]!	; 0xc08

0001135c <cd_spectrum_set_start@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #69632	; 0x11000
   11364:	ldr	pc, [ip, #3072]!	; 0xc00

00011368 <strlen@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #69632	; 0x11000
   11370:	ldr	pc, [ip, #3064]!	; 0xbf8

00011374 <cd_spectrum_sized_new@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #69632	; 0x11000
   1137c:	ldr	pc, [ip, #3056]!	; 0xbf0

00011380 <g_option_context_parse@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #69632	; 0x11000
   11388:	ldr	pc, [ip, #3048]!	; 0xbe8

0001138c <setlocale@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #69632	; 0x11000
   11394:	ldr	pc, [ip, #3040]!	; 0xbe0

00011398 <g_return_if_fail_warning@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #69632	; 0x11000
   113a0:	ldr	pc, [ip, #3032]!	; 0xbd8

000113a4 <strtol@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #69632	; 0x11000
   113ac:	ldr	pc, [ip, #3024]!	; 0xbd0

000113b0 <cd_it8_set_originator@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #69632	; 0x11000
   113b8:	ldr	pc, [ip, #3016]!	; 0xbc8

000113bc <g_error_matches@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #69632	; 0x11000
   113c4:	ldr	pc, [ip, #3008]!	; 0xbc0

000113c8 <cd_spectrum_set_id@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #69632	; 0x11000
   113d0:	ldr	pc, [ip, #3000]!	; 0xbb8

000113d4 <cd_it8_add_option@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #69632	; 0x11000
   113dc:	ldr	pc, [ip, #2992]!	; 0xbb0

000113e0 <cd_it8_set_enable_created@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #69632	; 0x11000
   113e8:	ldr	pc, [ip, #2984]!	; 0xba8

000113ec <g_set_application_name@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #69632	; 0x11000
   113f4:	ldr	pc, [ip, #2976]!	; 0xba0

000113f8 <g_setenv@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #69632	; 0x11000
   11400:	ldr	pc, [ip, #2968]!	; 0xb98

00011404 <__stack_chk_fail@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #69632	; 0x11000
   1140c:	ldr	pc, [ip, #2960]!	; 0xb90

00011410 <g_ptr_array_sort@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #69632	; 0x11000
   11418:	ldr	pc, [ip, #2952]!	; 0xb88

0001141c <g_strsplit@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #69632	; 0x11000
   11424:	ldr	pc, [ip, #2944]!	; 0xb80

00011428 <g_log_set_handler@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #69632	; 0x11000
   11430:	ldr	pc, [ip, #2936]!	; 0xb78

00011434 <g_malloc0@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #69632	; 0x11000
   1143c:	ldr	pc, [ip, #2928]!	; 0xb70

00011440 <cd_it8_utils_calculate_ccmx@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #69632	; 0x11000
   11448:	ldr	pc, [ip, #2920]!	; 0xb68

0001144c <g_set_error_literal@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #69632	; 0x11000
   11454:	ldr	pc, [ip, #2912]!	; 0xb60

00011458 <g_string_insert_c@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #69632	; 0x11000
   11460:	ldr	pc, [ip, #2904]!	; 0xb58

00011464 <cd_it8_add_spectrum@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #69632	; 0x11000
   1146c:	ldr	pc, [ip, #2896]!	; 0xb50

00011470 <g_file_get_contents@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #69632	; 0x11000
   11478:	ldr	pc, [ip, #2888]!	; 0xb48

0001147c <textdomain@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #69632	; 0x11000
   11484:	ldr	pc, [ip, #2880]!	; 0xb40

00011488 <g_option_context_new@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #69632	; 0x11000
   11490:	ldr	pc, [ip, #2872]!	; 0xb38

00011494 <g_strtod@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #69632	; 0x11000
   1149c:	ldr	pc, [ip, #2864]!	; 0xb30

000114a0 <g_error_free@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #69632	; 0x11000
   114a8:	ldr	pc, [ip, #2856]!	; 0xb28

000114ac <g_strfreev@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #69632	; 0x11000
   114b4:	ldr	pc, [ip, #2848]!	; 0xb20

000114b8 <g_ptr_array_unref@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #69632	; 0x11000
   114c0:	ldr	pc, [ip, #2840]!	; 0xb18

000114c4 <g_file_new_for_path@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #69632	; 0x11000
   114cc:	ldr	pc, [ip, #2832]!	; 0xb10

000114d0 <g_option_context_get_help@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #69632	; 0x11000
   114d8:	ldr	pc, [ip, #2824]!	; 0xb08

000114dc <cd_it8_load_from_file@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #69632	; 0x11000
   114e4:	ldr	pc, [ip, #2816]!	; 0xb00

000114e8 <g_slice_free1@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #69632	; 0x11000
   114f0:	ldr	pc, [ip, #2808]!	; 0xaf8

000114f4 <g_string_append@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #69632	; 0x11000
   114fc:	ldr	pc, [ip, #2800]!	; 0xaf0

00011500 <g_string_append_printf@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #69632	; 0x11000
   11508:	ldr	pc, [ip, #2792]!	; 0xae8

0001150c <g_slice_alloc0@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #69632	; 0x11000
   11514:	ldr	pc, [ip, #2784]!	; 0xae0

Disassembly of section .text:

00011518 <.text>:
   11518:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1151c:	sub	sp, sp, #132	; 0x84
   11520:	ldr	sl, [pc, #1596]	; 11b64 <g_slice_alloc0@plt+0x658>
   11524:	mov	r6, #0
   11528:	str	r0, [sp, #20]
   1152c:	ldr	r3, [sl]
   11530:	str	r1, [sp, #16]
   11534:	mov	r2, #80	; 0x50
   11538:	mov	r1, r6
   1153c:	add	r0, sp, #44	; 0x2c
   11540:	str	r3, [sp, #124]	; 0x7c
   11544:	str	r6, [sp, #28]
   11548:	str	r6, [sp, #32]
   1154c:	str	r6, [sp, #36]	; 0x24
   11550:	bl	112a8 <memset@plt>
   11554:	ldr	lr, [pc, #1548]	; 11b68 <g_slice_alloc0@plt+0x65c>
   11558:	mov	ip, #118	; 0x76
   1155c:	add	r3, sp, #28
   11560:	mov	r2, #5
   11564:	ldr	r1, [pc, #1536]	; 11b6c <g_slice_alloc0@plt+0x660>
   11568:	mov	r0, r6
   1156c:	str	lr, [sp, #40]	; 0x28
   11570:	strb	ip, [sp, #44]	; 0x2c
   11574:	str	r3, [sp, #56]	; 0x38
   11578:	bl	11314 <dcgettext@plt>
   1157c:	ldr	lr, [pc, #1516]	; 11b70 <g_slice_alloc0@plt+0x664>
   11580:	mov	ip, #100	; 0x64
   11584:	add	r3, sp, #32
   11588:	mov	r2, #5
   1158c:	ldr	r1, [pc, #1504]	; 11b74 <g_slice_alloc0@plt+0x668>
   11590:	str	lr, [sp, #68]	; 0x44
   11594:	strb	ip, [sp, #72]	; 0x48
   11598:	str	r3, [sp, #84]	; 0x54
   1159c:	str	r0, [sp, #60]	; 0x3c
   115a0:	mov	r0, r6
   115a4:	bl	11314 <dcgettext@plt>
   115a8:	ldr	r1, [pc, #1480]	; 11b78 <g_slice_alloc0@plt+0x66c>
   115ac:	str	r0, [sp, #88]	; 0x58
   115b0:	mov	r0, #6
   115b4:	bl	1138c <setlocale@plt>
   115b8:	ldr	r1, [pc, #1468]	; 11b7c <g_slice_alloc0@plt+0x670>
   115bc:	ldr	r0, [pc, #1468]	; 11b80 <g_slice_alloc0@plt+0x674>
   115c0:	bl	112d8 <bindtextdomain@plt>
   115c4:	ldr	r1, [pc, #1464]	; 11b84 <g_slice_alloc0@plt+0x678>
   115c8:	ldr	r0, [pc, #1456]	; 11b80 <g_slice_alloc0@plt+0x674>
   115cc:	bl	112fc <bind_textdomain_codeset@plt>
   115d0:	ldr	r0, [pc, #1448]	; 11b80 <g_slice_alloc0@plt+0x674>
   115d4:	bl	1147c <textdomain@plt>
   115d8:	mov	r0, #12
   115dc:	bl	11434 <g_malloc0@plt>
   115e0:	ldr	r3, [sp, #32]
   115e4:	mov	r5, r0
   115e8:	ldr	r0, [pc, #1432]	; 11b88 <g_slice_alloc0@plt+0x67c>
   115ec:	str	r3, [r5, #8]
   115f0:	bl	11200 <g_ptr_array_new_with_free_func@plt>
   115f4:	mov	r2, #5
   115f8:	ldr	r1, [pc, #1420]	; 11b8c <g_slice_alloc0@plt+0x680>
   115fc:	mov	r4, r0
   11600:	str	r4, [r5, #4]
   11604:	mov	r0, r6
   11608:	bl	11314 <dcgettext@plt>
   1160c:	ldr	r3, [pc, #1404]	; 11b90 <g_slice_alloc0@plt+0x684>
   11610:	ldr	r2, [pc, #1404]	; 11b94 <g_slice_alloc0@plt+0x688>
   11614:	str	r3, [sp]
   11618:	ldr	r1, [pc, #1400]	; 11b98 <g_slice_alloc0@plt+0x68c>
   1161c:	mov	r3, r0
   11620:	mov	r0, r4
   11624:	bl	126f8 <g_slice_alloc0@plt+0x11ec>
   11628:	mov	r2, #5
   1162c:	ldr	r1, [pc, #1384]	; 11b9c <g_slice_alloc0@plt+0x690>
   11630:	mov	r0, r6
   11634:	ldr	r4, [r5, #4]
   11638:	bl	11314 <dcgettext@plt>
   1163c:	ldr	r3, [pc, #1372]	; 11ba0 <g_slice_alloc0@plt+0x694>
   11640:	ldr	r2, [pc, #1372]	; 11ba4 <g_slice_alloc0@plt+0x698>
   11644:	str	r3, [sp]
   11648:	ldr	r1, [pc, #1368]	; 11ba8 <g_slice_alloc0@plt+0x69c>
   1164c:	mov	r3, r0
   11650:	mov	r0, r4
   11654:	bl	126f8 <g_slice_alloc0@plt+0x11ec>
   11658:	mov	r2, #5
   1165c:	ldr	r1, [pc, #1352]	; 11bac <g_slice_alloc0@plt+0x6a0>
   11660:	mov	r0, r6
   11664:	ldr	r4, [r5, #4]
   11668:	bl	11314 <dcgettext@plt>
   1166c:	ldr	r3, [pc, #1340]	; 11bb0 <g_slice_alloc0@plt+0x6a4>
   11670:	ldr	r2, [pc, #1340]	; 11bb4 <g_slice_alloc0@plt+0x6a8>
   11674:	str	r3, [sp]
   11678:	ldr	r1, [pc, #1336]	; 11bb8 <g_slice_alloc0@plt+0x6ac>
   1167c:	mov	r3, r0
   11680:	mov	r0, r4
   11684:	bl	126f8 <g_slice_alloc0@plt+0x11ec>
   11688:	ldr	r1, [pc, #1324]	; 11bbc <g_slice_alloc0@plt+0x6b0>
   1168c:	ldr	r0, [r5, #4]
   11690:	bl	11410 <g_ptr_array_sort@plt>
   11694:	mov	r0, r6
   11698:	bl	11488 <g_option_context_new@plt>
   1169c:	ldr	r9, [r5, #4]
   116a0:	str	r0, [r5]
   116a4:	ldr	r0, [pc, #1228]	; 11b78 <g_slice_alloc0@plt+0x66c>
   116a8:	bl	112cc <g_string_new@plt>
   116ac:	ldr	r3, [r9, #4]
   116b0:	cmp	r3, r6
   116b4:	movne	fp, #32
   116b8:	strne	r5, [sp, #12]
   116bc:	mov	r4, r0
   116c0:	beq	117e0 <g_slice_alloc0@plt+0x2d4>
   116c4:	ldr	r3, [r9]
   116c8:	ldr	r1, [pc, #1264]	; 11bc0 <g_slice_alloc0@plt+0x6b4>
   116cc:	mov	r0, r4
   116d0:	ldr	r8, [r3, r6, lsl #2]
   116d4:	bl	114f4 <g_string_append@plt>
   116d8:	mov	r0, r4
   116dc:	ldr	r1, [r8]
   116e0:	bl	114f4 <g_string_append@plt>
   116e4:	ldr	r0, [r8]
   116e8:	bl	11368 <strlen@plt>
   116ec:	ldr	r3, [r8, #4]
   116f0:	cmp	r3, #0
   116f4:	mov	r7, r0
   116f8:	addeq	r7, r0, #2
   116fc:	beq	11728 <g_slice_alloc0@plt+0x21c>
   11700:	ldr	r1, [pc, #1212]	; 11bc4 <g_slice_alloc0@plt+0x6b8>
   11704:	mov	r0, r4
   11708:	bl	114f4 <g_string_append@plt>
   1170c:	ldr	r1, [r8, #4]
   11710:	mov	r0, r4
   11714:	bl	114f4 <g_string_append@plt>
   11718:	ldr	r0, [r8, #4]
   1171c:	bl	11368 <strlen@plt>
   11720:	add	r7, r7, #3
   11724:	add	r7, r7, r0
   11728:	cmp	r7, #34	; 0x22
   1172c:	ldr	r2, [r4, #4]
   11730:	ldr	r1, [r4, #8]
   11734:	bhi	11928 <g_slice_alloc0@plt+0x41c>
   11738:	mov	r5, #0
   1173c:	b	11768 <g_slice_alloc0@plt+0x25c>
   11740:	ldr	r1, [r4]
   11744:	str	r3, [r4, #4]
   11748:	add	r7, r7, #1
   1174c:	strb	fp, [r1, r2]
   11750:	ldrd	r2, [r4]
   11754:	cmp	r7, #36	; 0x24
   11758:	strb	r5, [r2, r3]
   1175c:	beq	11790 <g_slice_alloc0@plt+0x284>
   11760:	ldr	r2, [r4, #4]
   11764:	ldr	r1, [r4, #8]
   11768:	add	r3, r2, #1
   1176c:	cmp	r3, r1
   11770:	bcc	11740 <g_slice_alloc0@plt+0x234>
   11774:	mov	r2, #32
   11778:	mvn	r1, #0
   1177c:	mov	r0, r4
   11780:	add	r7, r7, #1
   11784:	bl	11458 <g_string_insert_c@plt>
   11788:	cmp	r7, #36	; 0x24
   1178c:	bne	11760 <g_slice_alloc0@plt+0x254>
   11790:	ldr	r1, [r8, #8]
   11794:	mov	r0, r4
   11798:	bl	114f4 <g_string_append@plt>
   1179c:	ldr	r3, [r4, #4]
   117a0:	ldr	r1, [r4, #8]
   117a4:	add	r2, r3, #1
   117a8:	cmp	r2, r1
   117ac:	bcs	119f0 <g_slice_alloc0@plt+0x4e4>
   117b0:	ldr	r1, [r4]
   117b4:	mov	r0, #10
   117b8:	str	r2, [r4, #4]
   117bc:	strb	r0, [r1, r3]
   117c0:	ldrd	r2, [r4]
   117c4:	mov	r1, #0
   117c8:	add	r6, r6, #1
   117cc:	strb	r1, [r2, r3]
   117d0:	ldr	r3, [r9, #4]
   117d4:	cmp	r6, r3
   117d8:	bcc	116c4 <g_slice_alloc0@plt+0x1b8>
   117dc:	ldr	r5, [sp, #12]
   117e0:	ldr	r1, [r4, #4]
   117e4:	cmp	r1, #0
   117e8:	bne	11b10 <g_slice_alloc0@plt+0x604>
   117ec:	mov	r1, #0
   117f0:	mov	r0, r4
   117f4:	bl	11338 <g_string_free@plt>
   117f8:	mov	r1, r0
   117fc:	mov	r6, r0
   11800:	ldr	r0, [r5]
   11804:	bl	11350 <g_option_context_set_summary@plt>
   11808:	mov	r2, #5
   1180c:	ldr	r1, [pc, #948]	; 11bc8 <g_slice_alloc0@plt+0x6bc>
   11810:	mov	r0, #0
   11814:	bl	11314 <dcgettext@plt>
   11818:	bl	113ec <g_set_application_name@plt>
   1181c:	mov	r2, #0
   11820:	add	r1, sp, #40	; 0x28
   11824:	ldr	r0, [r5]
   11828:	bl	112c0 <g_option_context_add_main_entries@plt>
   1182c:	add	r3, sp, #36	; 0x24
   11830:	add	r2, sp, #16
   11834:	add	r1, sp, #20
   11838:	ldr	r0, [r5]
   1183c:	bl	11380 <g_option_context_parse@plt>
   11840:	cmp	r0, #0
   11844:	beq	11b20 <g_slice_alloc0@plt+0x614>
   11848:	ldr	r3, [sp, #28]
   1184c:	cmp	r3, #0
   11850:	bne	11a18 <g_slice_alloc0@plt+0x50c>
   11854:	ldr	r2, [pc, #880]	; 11bcc <g_slice_alloc0@plt+0x6c0>
   11858:	mov	r1, #128	; 0x80
   1185c:	ldr	r0, [pc, #876]	; 11bd0 <g_slice_alloc0@plt+0x6c4>
   11860:	bl	11428 <g_log_set_handler@plt>
   11864:	ldr	r3, [r5, #4]
   11868:	ldr	r8, [sp, #16]
   1186c:	ldr	r2, [r3, #4]
   11870:	ldr	r9, [r8, #4]
   11874:	cmp	r2, #0
   11878:	movne	r4, #0
   1187c:	bne	11898 <g_slice_alloc0@plt+0x38c>
   11880:	b	11a2c <g_slice_alloc0@plt+0x520>
   11884:	ldr	r3, [r5, #4]
   11888:	add	r4, r4, #1
   1188c:	ldr	r2, [r3, #4]
   11890:	cmp	r4, r2
   11894:	bcs	11a2c <g_slice_alloc0@plt+0x520>
   11898:	ldr	r3, [r3]
   1189c:	mov	r1, r9
   118a0:	ldr	r7, [r3, r4, lsl #2]
   118a4:	ldr	r0, [r7]
   118a8:	bl	1126c <g_strcmp0@plt>
   118ac:	cmp	r0, #0
   118b0:	bne	11884 <g_slice_alloc0@plt+0x378>
   118b4:	mov	fp, r0
   118b8:	ldr	r3, [r7, #12]
   118bc:	add	r2, sp, #36	; 0x24
   118c0:	add	r1, r8, #8
   118c4:	mov	r0, r5
   118c8:	blx	r3
   118cc:	cmp	r0, #0
   118d0:	beq	11ac8 <g_slice_alloc0@plt+0x5bc>
   118d4:	ldr	r0, [r5, #4]
   118d8:	cmp	r0, #0
   118dc:	beq	118e4 <g_slice_alloc0@plt+0x3d8>
   118e0:	bl	114b8 <g_ptr_array_unref@plt>
   118e4:	ldr	r0, [r5]
   118e8:	bl	11218 <g_option_context_free@plt>
   118ec:	mov	r0, r5
   118f0:	bl	111b8 <g_free@plt>
   118f4:	mov	r0, r6
   118f8:	bl	111b8 <g_free@plt>
   118fc:	ldr	r0, [sp, #36]	; 0x24
   11900:	cmp	r0, #0
   11904:	beq	1190c <g_slice_alloc0@plt+0x400>
   11908:	bl	114a0 <g_error_free@plt>
   1190c:	ldr	r2, [sp, #124]	; 0x7c
   11910:	ldr	r3, [sl]
   11914:	mov	r0, fp
   11918:	cmp	r2, r3
   1191c:	bne	11b60 <g_slice_alloc0@plt+0x654>
   11920:	add	sp, sp, #132	; 0x84
   11924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11928:	add	r3, r2, #1
   1192c:	cmp	r1, r3
   11930:	bls	11a04 <g_slice_alloc0@plt+0x4f8>
   11934:	ldr	r1, [r4]
   11938:	mov	r0, #10
   1193c:	str	r3, [r4, #4]
   11940:	strb	r0, [r1, r2]
   11944:	ldrd	r2, [r4]
   11948:	mov	r1, #0
   1194c:	strb	r1, [r2, r3]
   11950:	mov	r7, #36	; 0x24
   11954:	mov	r5, #0
   11958:	b	11978 <g_slice_alloc0@plt+0x46c>
   1195c:	ldr	r1, [r4]
   11960:	str	r2, [r4, #4]
   11964:	subs	r7, r7, #1
   11968:	strb	fp, [r1, r3]
   1196c:	ldrd	r2, [r4]
   11970:	strb	r5, [r2, r3]
   11974:	beq	119a4 <g_slice_alloc0@plt+0x498>
   11978:	ldr	r3, [r4, #4]
   1197c:	ldr	r1, [r4, #8]
   11980:	add	r2, r3, #1
   11984:	cmp	r2, r1
   11988:	bcc	1195c <g_slice_alloc0@plt+0x450>
   1198c:	mov	r2, #32
   11990:	mvn	r1, #0
   11994:	mov	r0, r4
   11998:	bl	11458 <g_string_insert_c@plt>
   1199c:	subs	r7, r7, #1
   119a0:	bne	11978 <g_slice_alloc0@plt+0x46c>
   119a4:	ldr	r1, [r8, #8]
   119a8:	mov	r0, r4
   119ac:	bl	114f4 <g_string_append@plt>
   119b0:	ldr	r3, [r4, #4]
   119b4:	ldr	r1, [r4, #8]
   119b8:	add	r2, r3, #1
   119bc:	cmp	r2, r1
   119c0:	bcs	119f0 <g_slice_alloc0@plt+0x4e4>
   119c4:	ldr	r1, [r4]
   119c8:	mov	r0, #10
   119cc:	str	r2, [r4, #4]
   119d0:	strb	r0, [r1, r3]
   119d4:	ldrd	r2, [r4]
   119d8:	strb	r7, [r2, r3]
   119dc:	ldr	r3, [r9, #4]
   119e0:	add	r6, r6, #1
   119e4:	cmp	r6, r3
   119e8:	bcc	116c4 <g_slice_alloc0@plt+0x1b8>
   119ec:	b	117dc <g_slice_alloc0@plt+0x2d0>
   119f0:	mov	r2, #10
   119f4:	mvn	r1, #0
   119f8:	mov	r0, r4
   119fc:	bl	11458 <g_string_insert_c@plt>
   11a00:	b	119dc <g_slice_alloc0@plt+0x4d0>
   11a04:	mov	r2, #10
   11a08:	mvn	r1, #0
   11a0c:	mov	r0, r4
   11a10:	bl	11458 <g_string_insert_c@plt>
   11a14:	b	11950 <g_slice_alloc0@plt+0x444>
   11a18:	mov	r2, #0
   11a1c:	ldr	r1, [pc, #432]	; 11bd4 <g_slice_alloc0@plt+0x6c8>
   11a20:	ldr	r0, [pc, #432]	; 11bd8 <g_slice_alloc0@plt+0x6cc>
   11a24:	bl	113f8 <g_setenv@plt>
   11a28:	b	11864 <g_slice_alloc0@plt+0x358>
   11a2c:	ldr	r0, [pc, #324]	; 11b78 <g_slice_alloc0@plt+0x66c>
   11a30:	bl	112cc <g_string_new@plt>
   11a34:	mov	r2, #5
   11a38:	ldr	r1, [pc, #412]	; 11bdc <g_slice_alloc0@plt+0x6d0>
   11a3c:	mov	r7, r0
   11a40:	mov	r0, #0
   11a44:	bl	11314 <dcgettext@plt>
   11a48:	ldr	r1, [pc, #400]	; 11be0 <g_slice_alloc0@plt+0x6d4>
   11a4c:	mov	r2, r0
   11a50:	mov	r0, r7
   11a54:	bl	11500 <g_string_append_printf@plt>
   11a58:	ldr	r3, [r5, #4]
   11a5c:	ldr	r2, [r3, #4]
   11a60:	cmp	r2, #0
   11a64:	beq	11aa8 <g_slice_alloc0@plt+0x59c>
   11a68:	ldr	r9, [pc, #264]	; 11b78 <g_slice_alloc0@plt+0x66c>
   11a6c:	ldr	r8, [pc, #368]	; 11be4 <g_slice_alloc0@plt+0x6d8>
   11a70:	mov	r4, #0
   11a74:	ldr	r3, [r3]
   11a78:	mov	r1, r8
   11a7c:	mov	r0, r7
   11a80:	ldr	r2, [r3, r4, lsl #2]
   11a84:	add	r4, r4, #1
   11a88:	ldrd	r2, [r2]
   11a8c:	cmp	r3, #0
   11a90:	moveq	r3, r9
   11a94:	bl	11500 <g_string_append_printf@plt>
   11a98:	ldr	r3, [r5, #4]
   11a9c:	ldr	r2, [r3, #4]
   11aa0:	cmp	r4, r2
   11aa4:	bcc	11a74 <g_slice_alloc0@plt+0x568>
   11aa8:	mov	r2, #1
   11aac:	add	r0, sp, #36	; 0x24
   11ab0:	mov	r1, r2
   11ab4:	ldr	r3, [r7]
   11ab8:	bl	1144c <g_set_error_literal@plt>
   11abc:	mov	r0, r7
   11ac0:	mov	r1, #1
   11ac4:	bl	11338 <g_string_free@plt>
   11ac8:	mov	r2, #1
   11acc:	mov	r1, r2
   11ad0:	ldr	r0, [sp, #36]	; 0x24
   11ad4:	bl	113bc <g_error_matches@plt>
   11ad8:	cmp	r0, #0
   11adc:	beq	11b48 <g_slice_alloc0@plt+0x63c>
   11ae0:	mov	r2, #0
   11ae4:	mov	r1, #1
   11ae8:	ldr	r0, [r5]
   11aec:	bl	114d0 <g_option_context_get_help@plt>
   11af0:	mov	fp, #1
   11af4:	mov	r1, r0
   11af8:	mov	r4, r0
   11afc:	ldr	r0, [pc, #228]	; 11be8 <g_slice_alloc0@plt+0x6dc>
   11b00:	bl	1120c <g_print@plt>
   11b04:	mov	r0, r4
   11b08:	bl	111b8 <g_free@plt>
   11b0c:	b	118d4 <g_slice_alloc0@plt+0x3c8>
   11b10:	sub	r1, r1, #1
   11b14:	mov	r0, r4
   11b18:	bl	11308 <g_string_set_size@plt>
   11b1c:	b	117ec <g_slice_alloc0@plt+0x2e0>
   11b20:	mov	r2, #5
   11b24:	ldr	r1, [pc, #192]	; 11bec <g_slice_alloc0@plt+0x6e0>
   11b28:	bl	11314 <dcgettext@plt>
   11b2c:	ldr	r3, [sp, #36]	; 0x24
   11b30:	mov	fp, #1
   11b34:	ldr	r2, [r3, #8]
   11b38:	mov	r1, r0
   11b3c:	ldr	r0, [pc, #172]	; 11bf0 <g_slice_alloc0@plt+0x6e4>
   11b40:	bl	1120c <g_print@plt>
   11b44:	b	118d4 <g_slice_alloc0@plt+0x3c8>
   11b48:	ldr	r3, [sp, #36]	; 0x24
   11b4c:	ldr	r0, [pc, #140]	; 11be0 <g_slice_alloc0@plt+0x6d4>
   11b50:	mov	fp, #1
   11b54:	ldr	r1, [r3, #8]
   11b58:	bl	1120c <g_print@plt>
   11b5c:	b	118d4 <g_slice_alloc0@plt+0x3c8>
   11b60:	bl	11404 <__stack_chk_fail@plt>
   11b64:	andeq	r2, r2, r0, lsr #27
   11b68:	andeq	r2, r1, r0, lsr #19
   11b6c:	andeq	r2, r1, r8, lsr #19
   11b70:	andeq	r2, r1, ip, asr #19
   11b74:	andeq	r2, r1, r0, ror #19
   11b78:			; <UNDEFINED> instruction: 0x000128bc
   11b7c:	andeq	r2, r1, r4, lsl #20
   11b80:	andeq	r2, r1, r4, lsl sl
   11b84:	andeq	r2, r1, ip, lsl sl
   11b88:	andeq	r1, r1, ip, ror #25
   11b8c:	andeq	r2, r1, r4, lsr #20
   11b90:	andeq	r2, r1, r4, lsl #5
   11b94:	andeq	r2, r1, r0, asr #20
   11b98:	andeq	r2, r1, r0, ror #20
   11b9c:	andeq	r2, r1, ip, ror #20
   11ba0:	andeq	r1, r1, ip, lsl pc
   11ba4:	andeq	r2, r1, ip, lsl #21
   11ba8:	andeq	r2, r1, ip, lsr #21
   11bac:			; <UNDEFINED> instruction: 0x00012ab8
   11bb0:	andeq	r1, r1, ip, lsr #26
   11bb4:	andeq	r2, r1, ip, ror #21
   11bb8:	andeq	r2, r1, ip, lsl fp
   11bbc:	andeq	r1, r1, r8, lsl sp
   11bc0:	andeq	r2, r1, ip, lsr #22
   11bc4:	andeq	r2, r1, r0, lsr fp
   11bc8:	andeq	r2, r1, r4, lsr fp
   11bcc:	andeq	r1, r1, r8, ror #25
   11bd0:	andeq	r2, r1, ip, lsl #19
   11bd4:	andeq	r2, r1, ip, ror #22
   11bd8:	andeq	r2, r1, r0, ror fp
   11bdc:	andeq	r2, r1, r0, lsl #23
   11be0:	andeq	r2, r1, r8, ror #22
   11be4:	andeq	r2, r1, r8, lsr #23
   11be8:	andeq	r2, r1, r0, lsl #18
   11bec:	andeq	r2, r1, r8, asr #22
   11bf0:	andeq	r2, r1, r4, ror #22
   11bf4:	mov	fp, #0
   11bf8:	mov	lr, #0
   11bfc:	pop	{r1}		; (ldr r1, [sp], #4)
   11c00:	mov	r2, sp
   11c04:	push	{r2}		; (str r2, [sp, #-4]!)
   11c08:	push	{r0}		; (str r0, [sp, #-4]!)
   11c0c:	ldr	ip, [pc, #16]	; 11c24 <g_slice_alloc0@plt+0x718>
   11c10:	push	{ip}		; (str ip, [sp, #-4]!)
   11c14:	ldr	r0, [pc, #12]	; 11c28 <g_slice_alloc0@plt+0x71c>
   11c18:	ldr	r3, [pc, #12]	; 11c2c <g_slice_alloc0@plt+0x720>
   11c1c:	bl	111e8 <__libc_start_main@plt>
   11c20:	bl	111d0 <abort@plt>
   11c24:	andeq	r2, r1, ip, asr r8
   11c28:	andeq	r1, r1, r8, lsl r5
   11c2c:	strdeq	r2, [r1], -ip
   11c30:	ldr	r3, [pc, #20]	; 11c4c <g_slice_alloc0@plt+0x740>
   11c34:	ldr	r2, [pc, #20]	; 11c50 <g_slice_alloc0@plt+0x744>
   11c38:	add	r3, pc, r3
   11c3c:	ldr	r2, [r3, r2]
   11c40:	cmp	r2, #0
   11c44:	bxeq	lr
   11c48:	b	11224 <__gmon_start__@plt>
   11c4c:	andeq	r1, r1, ip, lsl #5
   11c50:	andeq	r0, r0, ip, lsr #2
   11c54:	ldr	r0, [pc, #24]	; 11c74 <g_slice_alloc0@plt+0x768>
   11c58:	ldr	r3, [pc, #24]	; 11c78 <g_slice_alloc0@plt+0x76c>
   11c5c:	cmp	r3, r0
   11c60:	bxeq	lr
   11c64:	ldr	r3, [pc, #16]	; 11c7c <g_slice_alloc0@plt+0x770>
   11c68:	cmp	r3, #0
   11c6c:	bxeq	lr
   11c70:	bx	r3
   11c74:	andeq	r3, r2, r8
   11c78:	andeq	r3, r2, r8
   11c7c:	andeq	r0, r0, r0
   11c80:	ldr	r0, [pc, #36]	; 11cac <g_slice_alloc0@plt+0x7a0>
   11c84:	ldr	r1, [pc, #36]	; 11cb0 <g_slice_alloc0@plt+0x7a4>
   11c88:	sub	r1, r1, r0
   11c8c:	asr	r1, r1, #2
   11c90:	add	r1, r1, r1, lsr #31
   11c94:	asrs	r1, r1, #1
   11c98:	bxeq	lr
   11c9c:	ldr	r3, [pc, #16]	; 11cb4 <g_slice_alloc0@plt+0x7a8>
   11ca0:	cmp	r3, #0
   11ca4:	bxeq	lr
   11ca8:	bx	r3
   11cac:	andeq	r3, r2, r8
   11cb0:	andeq	r3, r2, r8
   11cb4:	andeq	r0, r0, r0
   11cb8:	push	{r4, lr}
   11cbc:	ldr	r4, [pc, #24]	; 11cdc <g_slice_alloc0@plt+0x7d0>
   11cc0:	ldrb	r3, [r4]
   11cc4:	cmp	r3, #0
   11cc8:	popne	{r4, pc}
   11ccc:	bl	11c54 <g_slice_alloc0@plt+0x748>
   11cd0:	mov	r3, #1
   11cd4:	strb	r3, [r4]
   11cd8:	pop	{r4, pc}
   11cdc:	andeq	r3, r2, r8
   11ce0:	b	11c80 <g_slice_alloc0@plt+0x774>
   11ce4:	andeq	r0, r0, r0
   11ce8:	bx	lr
   11cec:	push	{r4, lr}
   11cf0:	mov	r4, r0
   11cf4:	ldr	r0, [r0]
   11cf8:	bl	111b8 <g_free@plt>
   11cfc:	ldr	r0, [r4, #4]
   11d00:	bl	111b8 <g_free@plt>
   11d04:	ldr	r0, [r4, #8]
   11d08:	bl	111b8 <g_free@plt>
   11d0c:	mov	r0, r4
   11d10:	pop	{r4, lr}
   11d14:	b	111b8 <g_free@plt>
   11d18:	ldr	r2, [r1]
   11d1c:	ldr	r3, [r0]
   11d20:	ldr	r1, [r2]
   11d24:	ldr	r0, [r3]
   11d28:	b	1126c <g_strcmp0@plt>
   11d2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d30:	mov	r0, r1
   11d34:	sub	sp, sp, #12
   11d38:	mov	r5, r1
   11d3c:	mov	r6, r2
   11d40:	bl	112e4 <g_strv_length@plt>
   11d44:	cmp	r0, #3
   11d48:	beq	11d7c <g_slice_alloc0@plt+0x870>
   11d4c:	mov	r2, #0
   11d50:	mov	r0, r6
   11d54:	ldr	r3, [pc, #424]	; 11f04 <g_slice_alloc0@plt+0x9f8>
   11d58:	mov	r1, #1
   11d5c:	mov	r4, r2
   11d60:	bl	1144c <g_set_error_literal@plt>
   11d64:	mov	sl, r4
   11d68:	mov	r0, sl
   11d6c:	bl	111b8 <g_free@plt>
   11d70:	mov	r0, r4
   11d74:	add	sp, sp, #12
   11d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d7c:	mov	sl, r0
   11d80:	bl	11344 <cd_it8_new@plt>
   11d84:	mov	r7, r0
   11d88:	ldr	r0, [r5]
   11d8c:	bl	114c4 <g_file_new_for_path@plt>
   11d90:	mov	r2, r6
   11d94:	mov	r1, r0
   11d98:	mov	r8, r0
   11d9c:	mov	r0, r7
   11da0:	bl	114dc <cd_it8_load_from_file@plt>
   11da4:	subs	r4, r0, #0
   11da8:	beq	11e48 <g_slice_alloc0@plt+0x93c>
   11dac:	bl	11344 <cd_it8_new@plt>
   11db0:	mov	r9, r0
   11db4:	ldr	r0, [r5, #4]
   11db8:	bl	114c4 <g_file_new_for_path@plt>
   11dbc:	mov	r2, r6
   11dc0:	mov	r1, r0
   11dc4:	str	r0, [sp, #4]
   11dc8:	mov	r0, r9
   11dcc:	bl	114dc <cd_it8_load_from_file@plt>
   11dd0:	subs	r4, r0, #0
   11dd4:	bne	11e74 <g_slice_alloc0@plt+0x968>
   11dd8:	mov	r5, r4
   11ddc:	mov	fp, r4
   11de0:	mov	sl, r4
   11de4:	cmp	r8, #0
   11de8:	beq	11df4 <g_slice_alloc0@plt+0x8e8>
   11dec:	mov	r0, r8
   11df0:	bl	11230 <g_object_unref@plt>
   11df4:	ldr	r0, [sp, #4]
   11df8:	cmp	r0, #0
   11dfc:	beq	11e04 <g_slice_alloc0@plt+0x8f8>
   11e00:	bl	11230 <g_object_unref@plt>
   11e04:	cmp	r5, #0
   11e08:	beq	11e14 <g_slice_alloc0@plt+0x908>
   11e0c:	mov	r0, r5
   11e10:	bl	11230 <g_object_unref@plt>
   11e14:	cmp	r7, #0
   11e18:	beq	11e24 <g_slice_alloc0@plt+0x918>
   11e1c:	mov	r0, r7
   11e20:	bl	11230 <g_object_unref@plt>
   11e24:	cmp	r9, #0
   11e28:	beq	11e34 <g_slice_alloc0@plt+0x928>
   11e2c:	mov	r0, r9
   11e30:	bl	11230 <g_object_unref@plt>
   11e34:	cmp	fp, #0
   11e38:	beq	11d68 <g_slice_alloc0@plt+0x85c>
   11e3c:	mov	r0, fp
   11e40:	bl	11230 <g_object_unref@plt>
   11e44:	b	11d68 <g_slice_alloc0@plt+0x85c>
   11e48:	cmp	r8, #0
   11e4c:	beq	11e58 <g_slice_alloc0@plt+0x94c>
   11e50:	mov	r0, r8
   11e54:	bl	11230 <g_object_unref@plt>
   11e58:	cmp	r7, #0
   11e5c:	movne	r9, #0
   11e60:	movne	fp, r9
   11e64:	movne	sl, r9
   11e68:	bne	11e1c <g_slice_alloc0@plt+0x910>
   11e6c:	mov	sl, r7
   11e70:	b	11d68 <g_slice_alloc0@plt+0x85c>
   11e74:	mov	r0, sl
   11e78:	bl	11320 <cd_it8_new_with_kind@plt>
   11e7c:	mov	r3, r6
   11e80:	mov	r1, r9
   11e84:	mov	r2, r0
   11e88:	mov	fp, r0
   11e8c:	mov	r0, r7
   11e90:	bl	11440 <cd_it8_utils_calculate_ccmx@plt>
   11e94:	subs	r4, r0, #0
   11e98:	moveq	r5, r4
   11e9c:	moveq	sl, r4
   11ea0:	beq	11de4 <g_slice_alloc0@plt+0x8d8>
   11ea4:	ldr	r0, [r5, #8]
   11ea8:	bl	111f4 <g_path_get_basename@plt>
   11eac:	ldr	r1, [pc, #84]	; 11f08 <g_slice_alloc0@plt+0x9fc>
   11eb0:	mov	sl, r0
   11eb4:	bl	11260 <g_strrstr@plt>
   11eb8:	ldr	r1, [pc, #76]	; 11f0c <g_slice_alloc0@plt+0xa00>
   11ebc:	cmp	r0, #0
   11ec0:	movne	r3, #0
   11ec4:	strbne	r3, [r0]
   11ec8:	mov	r0, fp
   11ecc:	bl	113d4 <cd_it8_add_option@plt>
   11ed0:	mov	r1, sl
   11ed4:	mov	r0, fp
   11ed8:	bl	11254 <cd_it8_set_title@plt>
   11edc:	ldr	r0, [r5, #8]
   11ee0:	bl	114c4 <g_file_new_for_path@plt>
   11ee4:	mov	r2, r6
   11ee8:	mov	r1, r0
   11eec:	mov	r5, r0
   11ef0:	mov	r0, fp
   11ef4:	bl	112b4 <cd_it8_save_to_file@plt>
   11ef8:	adds	r4, r0, #0
   11efc:	movne	r4, #1
   11f00:	b	11de4 <g_slice_alloc0@plt+0x8d8>
   11f04:	andeq	r2, r1, r8, ror r8
   11f08:	andeq	r2, r1, ip, lsr #17
   11f0c:			; <UNDEFINED> instruction: 0x000128b0
   11f10:	mov	r1, r0
   11f14:	mov	r0, #32
   11f18:	b	114e8 <g_slice_free1@plt>
   11f1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f20:	vpush	{d8-d9}
   11f24:	ldr	r8, [pc, #820]	; 12260 <g_slice_alloc0@plt+0xd54>
   11f28:	mov	r4, #0
   11f2c:	mov	r9, r2
   11f30:	sub	sp, sp, #28
   11f34:	ldr	r3, [r8]
   11f38:	str	r0, [sp]
   11f3c:	mov	r0, r1
   11f40:	mov	r6, r1
   11f44:	str	r3, [sp, #20]
   11f48:	str	r4, [sp, #16]
   11f4c:	bl	112e4 <g_strv_length@plt>
   11f50:	subs	r2, r0, #0
   11f54:	beq	1220c <g_slice_alloc0@plt+0xd00>
   11f58:	mov	r3, r9
   11f5c:	mov	r2, r4
   11f60:	add	r1, sp, #16
   11f64:	ldr	r0, [r6, #4]
   11f68:	bl	11470 <g_file_get_contents@plt>
   11f6c:	cmp	r0, #0
   11f70:	bne	11fac <g_slice_alloc0@plt+0xaa0>
   11f74:	mov	r7, #0
   11f78:	mov	r6, r7
   11f7c:	mov	r0, r7
   11f80:	bl	111b8 <g_free@plt>
   11f84:	ldr	r0, [sp, #16]
   11f88:	bl	111b8 <g_free@plt>
   11f8c:	ldr	r2, [sp, #20]
   11f90:	ldr	r3, [r8]
   11f94:	mov	r0, r6
   11f98:	cmp	r2, r3
   11f9c:	bne	12248 <g_slice_alloc0@plt+0xd3c>
   11fa0:	add	sp, sp, #28
   11fa4:	vpop	{d8-d9}
   11fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fac:	ldr	r0, [pc, #688]	; 12264 <g_slice_alloc0@plt+0xd58>
   11fb0:	bl	11200 <g_ptr_array_new_with_free_func@plt>
   11fb4:	mvn	r2, #0
   11fb8:	ldr	r1, [pc, #680]	; 12268 <g_slice_alloc0@plt+0xd5c>
   11fbc:	mov	r5, r0
   11fc0:	ldr	r0, [sp, #16]
   11fc4:	bl	1141c <g_strsplit@plt>
   11fc8:	mov	r1, r4
   11fcc:	mov	fp, r0
   11fd0:	str	r0, [sp, #4]
   11fd4:	ldr	r0, [r6, #8]
   11fd8:	bl	11494 <g_strtod@plt>
   11fdc:	ldr	r0, [fp]
   11fe0:	cmp	r0, #0
   11fe4:	vmov.f64	d8, d0
   11fe8:	beq	12074 <g_slice_alloc0@plt+0xb68>
   11fec:	str	r6, [sp, #8]
   11ff0:	vldr	d9, [pc, #600]	; 12250 <g_slice_alloc0@plt+0xd44>
   11ff4:	ldr	sl, [pc, #624]	; 1226c <g_slice_alloc0@plt+0xd60>
   11ff8:	mov	r6, fp
   11ffc:	str	r9, [sp, #12]
   12000:	b	12010 <g_slice_alloc0@plt+0xb04>
   12004:	ldr	r0, [r6, #4]!
   12008:	cmp	r0, #0
   1200c:	beq	1206c <g_slice_alloc0@plt+0xb60>
   12010:	ldrb	r4, [r0]
   12014:	cmp	r4, #0
   12018:	cmpne	r4, #35	; 0x23
   1201c:	moveq	r4, #1
   12020:	movne	r4, #0
   12024:	beq	12004 <g_slice_alloc0@plt+0xaf8>
   12028:	mvn	r2, #0
   1202c:	mov	r1, sl
   12030:	bl	111dc <g_strsplit_set@plt>
   12034:	mov	r7, r0
   12038:	bl	112e4 <g_strv_length@plt>
   1203c:	cmp	r0, #2
   12040:	beq	121b8 <g_slice_alloc0@plt+0xcac>
   12044:	ldr	r1, [r6]
   12048:	ldr	r0, [pc, #544]	; 12270 <g_slice_alloc0@plt+0xd64>
   1204c:	bl	1129c <g_printerr@plt>
   12050:	cmp	r7, #0
   12054:	beq	12004 <g_slice_alloc0@plt+0xaf8>
   12058:	mov	r0, r7
   1205c:	bl	114ac <g_strfreev@plt>
   12060:	ldr	r0, [r6, #4]!
   12064:	cmp	r0, #0
   12068:	bne	12010 <g_slice_alloc0@plt+0xb04>
   1206c:	ldr	r6, [sp, #8]
   12070:	ldr	r9, [sp, #12]
   12074:	ldr	r0, [r5, #4]
   12078:	cmp	r0, #2
   1207c:	bls	12220 <g_slice_alloc0@plt+0xd14>
   12080:	bl	11374 <cd_spectrum_sized_new@plt>
   12084:	vldr	d0, [pc, #460]	; 12258 <g_slice_alloc0@plt+0xd4c>
   12088:	mov	r4, r0
   1208c:	bl	11248 <cd_spectrum_set_norm@plt>
   12090:	ldr	r3, [r5]
   12094:	mov	r0, r4
   12098:	ldr	r3, [r3]
   1209c:	vldr	s0, [r3]
   120a0:	vcvt.f64.u32	d0, s0
   120a4:	bl	1135c <cd_spectrum_set_start@plt>
   120a8:	ldrd	r2, [r5]
   120ac:	mov	r0, r4
   120b0:	sub	r3, r3, #-1073741823	; 0xc0000001
   120b4:	ldr	r3, [r2, r3, lsl #2]
   120b8:	vldr	s0, [r3]
   120bc:	vcvt.f64.u32	d0, s0
   120c0:	bl	11290 <cd_spectrum_set_end@plt>
   120c4:	ldr	r3, [r5, #4]
   120c8:	cmp	r3, #0
   120cc:	beq	120f8 <g_slice_alloc0@plt+0xbec>
   120d0:	mov	r7, #0
   120d4:	ldr	r3, [r5]
   120d8:	mov	r0, r4
   120dc:	ldr	r3, [r3, r7, lsl #2]
   120e0:	add	r7, r7, #1
   120e4:	vldr	d0, [r3, #8]
   120e8:	bl	11284 <cd_spectrum_add_value@plt>
   120ec:	ldr	r3, [r5, #4]
   120f0:	cmp	r3, r7
   120f4:	bhi	120d4 <g_slice_alloc0@plt+0xbc8>
   120f8:	mov	r0, #6
   120fc:	bl	11320 <cd_it8_new_with_kind@plt>
   12100:	mov	r1, r4
   12104:	mov	fp, r0
   12108:	bl	11464 <cd_it8_add_spectrum@plt>
   1210c:	ldr	r1, [pc, #352]	; 12274 <g_slice_alloc0@plt+0xd68>
   12110:	mov	r0, fp
   12114:	bl	113b0 <cd_it8_set_originator@plt>
   12118:	ldr	r0, [r6, #4]
   1211c:	bl	111f4 <g_path_get_basename@plt>
   12120:	ldr	r1, [pc, #336]	; 12278 <g_slice_alloc0@plt+0xd6c>
   12124:	mov	r7, r0
   12128:	bl	11260 <g_strrstr@plt>
   1212c:	mov	r1, r7
   12130:	cmp	r0, #0
   12134:	movne	r3, #0
   12138:	strbne	r3, [r0]
   1213c:	mov	r0, fp
   12140:	bl	11254 <cd_it8_set_title@plt>
   12144:	ldr	r3, [sp]
   12148:	mov	r0, fp
   1214c:	ldr	r1, [r3, #8]
   12150:	bl	113e0 <cd_it8_set_enable_created@plt>
   12154:	ldr	r0, [r6]
   12158:	bl	114c4 <g_file_new_for_path@plt>
   1215c:	mov	r2, r9
   12160:	mov	r1, r0
   12164:	mov	sl, r0
   12168:	mov	r0, fp
   1216c:	bl	112b4 <cd_it8_save_to_file@plt>
   12170:	mov	r6, r0
   12174:	mov	r0, r5
   12178:	bl	114b8 <g_ptr_array_unref@plt>
   1217c:	cmp	sl, #0
   12180:	beq	1218c <g_slice_alloc0@plt+0xc80>
   12184:	mov	r0, sl
   12188:	bl	11230 <g_object_unref@plt>
   1218c:	cmp	r4, #0
   12190:	beq	1219c <g_slice_alloc0@plt+0xc90>
   12194:	mov	r0, r4
   12198:	bl	1123c <cd_spectrum_free@plt>
   1219c:	cmp	fp, #0
   121a0:	beq	121ac <g_slice_alloc0@plt+0xca0>
   121a4:	mov	r0, fp
   121a8:	bl	11230 <g_object_unref@plt>
   121ac:	ldr	r0, [sp, #4]
   121b0:	bl	114ac <g_strfreev@plt>
   121b4:	b	11f7c <g_slice_alloc0@plt+0xa70>
   121b8:	mov	r0, #32
   121bc:	bl	1150c <g_slice_alloc0@plt>
   121c0:	mov	r2, #10
   121c4:	mov	r1, r4
   121c8:	mov	fp, r0
   121cc:	ldr	r0, [r7]
   121d0:	bl	113a4 <strtol@plt>
   121d4:	mov	r9, fp
   121d8:	mov	r1, r4
   121dc:	str	r0, [r9], #8
   121e0:	ldr	r0, [r7, #4]
   121e4:	bl	11494 <g_strtod@plt>
   121e8:	mov	r0, r9
   121ec:	vmov.f64	d2, d9
   121f0:	vldr	d1, [pc, #88]	; 12250 <g_slice_alloc0@plt+0xd44>
   121f4:	vdiv.f64	d0, d0, d8
   121f8:	bl	111c4 <cd_color_xyz_set@plt>
   121fc:	mov	r1, fp
   12200:	mov	r0, r5
   12204:	bl	112f0 <g_ptr_array_add@plt>
   12208:	b	12058 <g_slice_alloc0@plt+0xb4c>
   1220c:	mov	r0, r9
   12210:	ldr	r3, [pc, #100]	; 1227c <g_slice_alloc0@plt+0xd70>
   12214:	mov	r1, #1
   12218:	bl	1144c <g_set_error_literal@plt>
   1221c:	b	11f74 <g_slice_alloc0@plt+0xa68>
   12220:	mov	r0, r9
   12224:	ldr	r3, [pc, #84]	; 12280 <g_slice_alloc0@plt+0xd74>
   12228:	mov	r2, #0
   1222c:	mov	r1, #1
   12230:	bl	1144c <g_set_error_literal@plt>
   12234:	mov	r7, #0
   12238:	mov	r0, r5
   1223c:	bl	114b8 <g_ptr_array_unref@plt>
   12240:	mov	r6, r7
   12244:	b	121ac <g_slice_alloc0@plt+0xca0>
   12248:	bl	11404 <__stack_chk_fail@plt>
   1224c:	nop			; (mov r0, r0)
	...
   1225c:	svccc	0x00f00000	; IMB
   12260:	andeq	r2, r2, r0, lsr #27
   12264:	andeq	r1, r1, r0, lsl pc
   12268:			; <UNDEFINED> instruction: 0x00012bb0
   1226c:	andeq	r2, r1, r8, ror #17
   12270:	andeq	r2, r1, ip, ror #17
   12274:	andeq	r2, r1, r4, lsr #18
   12278:	andeq	r2, r1, ip, lsr #18
   1227c:	andeq	r2, r1, r0, asr #17
   12280:	andeq	r2, r1, r4, lsl #18
   12284:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12288:	vpush	{d8-d10}
   1228c:	ldr	r3, [pc, #1076]	; 126c8 <g_slice_alloc0@plt+0x11bc>
   12290:	mov	r4, #0
   12294:	mov	r5, r1
   12298:	sub	sp, sp, #44	; 0x2c
   1229c:	ldr	r3, [r3]
   122a0:	str	r0, [sp, #4]
   122a4:	mov	r0, r1
   122a8:	mov	r6, r2
   122ac:	str	r2, [sp]
   122b0:	str	r3, [sp, #36]	; 0x24
   122b4:	str	r4, [sp, #24]
   122b8:	str	r4, [sp, #28]
   122bc:	str	r4, [sp, #32]
   122c0:	str	r4, [sp, #20]
   122c4:	bl	112e4 <g_strv_length@plt>
   122c8:	cmp	r0, #3
   122cc:	beq	12320 <g_slice_alloc0@plt+0xe14>
   122d0:	mov	r2, r4
   122d4:	mov	r0, r6
   122d8:	ldr	r3, [pc, #1004]	; 126cc <g_slice_alloc0@plt+0x11c0>
   122dc:	mov	r1, #1
   122e0:	bl	1144c <g_set_error_literal@plt>
   122e4:	mov	r5, #0
   122e8:	mov	sl, r5
   122ec:	mov	r0, sl
   122f0:	bl	111b8 <g_free@plt>
   122f4:	ldr	r0, [sp, #20]
   122f8:	bl	111b8 <g_free@plt>
   122fc:	ldr	r3, [pc, #964]	; 126c8 <g_slice_alloc0@plt+0x11bc>
   12300:	ldr	r2, [sp, #36]	; 0x24
   12304:	mov	r0, r5
   12308:	ldr	r3, [r3]
   1230c:	cmp	r2, r3
   12310:	bne	126b8 <g_slice_alloc0@plt+0x11ac>
   12314:	add	sp, sp, #44	; 0x2c
   12318:	vpop	{d8-d10}
   1231c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12320:	ldr	r3, [sp]
   12324:	mov	r2, r4
   12328:	add	r1, sp, #20
   1232c:	ldr	r0, [r5, #4]
   12330:	bl	11470 <g_file_get_contents@plt>
   12334:	cmp	r0, #0
   12338:	beq	122e4 <g_slice_alloc0@plt+0xdd8>
   1233c:	mov	r1, r4
   12340:	ldr	r0, [r5, #8]
   12344:	bl	11494 <g_strtod@plt>
   12348:	ldr	r0, [pc, #896]	; 126d0 <g_slice_alloc0@plt+0x11c4>
   1234c:	vmov.f64	d8, d0
   12350:	bl	11200 <g_ptr_array_new_with_free_func@plt>
   12354:	mvn	r2, #0
   12358:	ldr	r1, [pc, #884]	; 126d4 <g_slice_alloc0@plt+0x11c8>
   1235c:	mov	r4, r0
   12360:	ldr	r0, [sp, #20]
   12364:	bl	1141c <g_strsplit@plt>
   12368:	str	r0, [sp, #8]
   1236c:	ldr	r0, [r0]
   12370:	cmp	r0, #0
   12374:	beq	12400 <g_slice_alloc0@plt+0xef4>
   12378:	ldr	sl, [pc, #856]	; 126d8 <g_slice_alloc0@plt+0x11cc>
   1237c:	ldr	fp, [pc, #856]	; 126dc <g_slice_alloc0@plt+0x11d0>
   12380:	ldr	r9, [sp, #8]
   12384:	str	r5, [sp, #12]
   12388:	b	12398 <g_slice_alloc0@plt+0xe8c>
   1238c:	ldr	r0, [r9, #4]!
   12390:	cmp	r0, #0
   12394:	beq	123fc <g_slice_alloc0@plt+0xef0>
   12398:	ldrb	r3, [r0]
   1239c:	cmp	r3, #0
   123a0:	sub	r6, r3, #35	; 0x23
   123a4:	clz	r6, r6
   123a8:	lsr	r6, r6, #5
   123ac:	moveq	r6, #1
   123b0:	cmp	r6, #0
   123b4:	bne	1238c <g_slice_alloc0@plt+0xe80>
   123b8:	mvn	r2, #0
   123bc:	mov	r1, sl
   123c0:	bl	111dc <g_strsplit_set@plt>
   123c4:	mov	r7, r0
   123c8:	bl	112e4 <g_strv_length@plt>
   123cc:	cmp	r0, #4
   123d0:	beq	12438 <g_slice_alloc0@plt+0xf2c>
   123d4:	ldr	r1, [r9]
   123d8:	mov	r0, fp
   123dc:	bl	1129c <g_printerr@plt>
   123e0:	cmp	r7, #0
   123e4:	beq	1238c <g_slice_alloc0@plt+0xe80>
   123e8:	mov	r0, r7
   123ec:	bl	114ac <g_strfreev@plt>
   123f0:	ldr	r0, [r9, #4]!
   123f4:	cmp	r0, #0
   123f8:	bne	12398 <g_slice_alloc0@plt+0xe8c>
   123fc:	ldr	r5, [sp, #12]
   12400:	ldr	r0, [r4, #4]
   12404:	cmp	r0, #2
   12408:	bls	12688 <g_slice_alloc0@plt+0x117c>
   1240c:	vldr	d8, [pc, #684]	; 126c0 <g_slice_alloc0@plt+0x11b4>
   12410:	add	r6, sp, #24
   12414:	add	fp, sp, #36	; 0x24
   12418:	bl	11374 <cd_spectrum_sized_new@plt>
   1241c:	vmov.f64	d0, d8
   12420:	str	r0, [r6], #4
   12424:	bl	11248 <cd_spectrum_set_norm@plt>
   12428:	cmp	fp, r6
   1242c:	beq	124b4 <g_slice_alloc0@plt+0xfa8>
   12430:	ldr	r0, [r4, #4]
   12434:	b	12418 <g_slice_alloc0@plt+0xf0c>
   12438:	mov	r0, #32
   1243c:	bl	1150c <g_slice_alloc0@plt>
   12440:	mov	r2, #10
   12444:	mov	r1, r6
   12448:	mov	r8, r0
   1244c:	ldr	r0, [r7]
   12450:	bl	113a4 <strtol@plt>
   12454:	mov	r5, r8
   12458:	mov	r1, r6
   1245c:	str	r0, [r5], #8
   12460:	ldr	r0, [r7, #4]
   12464:	bl	11494 <g_strtod@plt>
   12468:	mov	r1, r6
   1246c:	ldr	r0, [r7, #8]
   12470:	vdiv.f64	d9, d0, d8
   12474:	bl	11494 <g_strtod@plt>
   12478:	mov	r1, r6
   1247c:	ldr	r0, [r7, #12]
   12480:	vdiv.f64	d10, d0, d8
   12484:	bl	11494 <g_strtod@plt>
   12488:	mov	r0, r5
   1248c:	vdiv.f64	d2, d0, d8
   12490:	vmov.f64	d1, d10
   12494:	vmov.f64	d0, d9
   12498:	bl	111c4 <cd_color_xyz_set@plt>
   1249c:	mov	r0, r4
   124a0:	mov	r1, r8
   124a4:	bl	112f0 <g_ptr_array_add@plt>
   124a8:	mov	r0, r7
   124ac:	bl	114ac <g_strfreev@plt>
   124b0:	b	123f0 <g_slice_alloc0@plt+0xee4>
   124b4:	ldr	r6, [sp, #24]
   124b8:	ldr	r1, [pc, #544]	; 126e0 <g_slice_alloc0@plt+0x11d4>
   124bc:	mov	r0, r6
   124c0:	bl	113c8 <cd_spectrum_set_id@plt>
   124c4:	ldr	r8, [sp, #28]
   124c8:	ldr	r1, [pc, #532]	; 126e4 <g_slice_alloc0@plt+0x11d8>
   124cc:	mov	r0, r8
   124d0:	bl	113c8 <cd_spectrum_set_id@plt>
   124d4:	ldr	r7, [sp, #32]
   124d8:	ldr	r1, [pc, #520]	; 126e8 <g_slice_alloc0@plt+0x11dc>
   124dc:	mov	r0, r7
   124e0:	bl	113c8 <cd_spectrum_set_id@plt>
   124e4:	ldr	r3, [r4]
   124e8:	add	sl, sp, #28
   124ec:	str	r4, [sp, #12]
   124f0:	ldr	r3, [r3]
   124f4:	mov	r0, r6
   124f8:	mov	r9, sl
   124fc:	mov	r4, r3
   12500:	vldr	s15, [r4]
   12504:	vcvt.f64.u32	d0, s15
   12508:	bl	1135c <cd_spectrum_set_start@plt>
   1250c:	cmp	fp, r9
   12510:	ldrne	r0, [r9], #4
   12514:	bne	12500 <g_slice_alloc0@plt+0xff4>
   12518:	ldr	r4, [sp, #12]
   1251c:	mov	r0, r6
   12520:	ldrd	r2, [r4]
   12524:	sub	r3, r3, #-1073741823	; 0xc0000001
   12528:	ldr	fp, [r2, r3, lsl #2]
   1252c:	vldr	s15, [fp]
   12530:	vcvt.f64.u32	d0, s15
   12534:	bl	11290 <cd_spectrum_set_end@plt>
   12538:	cmp	sl, r9
   1253c:	ldrne	r0, [sl], #4
   12540:	bne	1252c <g_slice_alloc0@plt+0x1020>
   12544:	ldr	r3, [r4, #4]
   12548:	cmp	r3, #0
   1254c:	movne	r9, #0
   12550:	beq	12590 <g_slice_alloc0@plt+0x1084>
   12554:	ldr	r3, [r4]
   12558:	mov	r0, r6
   1255c:	ldr	sl, [r3, r9, lsl #2]
   12560:	add	r9, r9, #1
   12564:	vldr	d0, [sl, #8]
   12568:	bl	11284 <cd_spectrum_add_value@plt>
   1256c:	vldr	d0, [sl, #16]
   12570:	mov	r0, r8
   12574:	bl	11284 <cd_spectrum_add_value@plt>
   12578:	vldr	d0, [sl, #24]
   1257c:	mov	r0, r7
   12580:	bl	11284 <cd_spectrum_add_value@plt>
   12584:	ldr	r3, [r4, #4]
   12588:	cmp	r3, r9
   1258c:	bhi	12554 <g_slice_alloc0@plt+0x1048>
   12590:	mov	r0, #7
   12594:	bl	11320 <cd_it8_new_with_kind@plt>
   12598:	mov	r1, r6
   1259c:	mov	r9, r0
   125a0:	bl	11464 <cd_it8_add_spectrum@plt>
   125a4:	mov	r1, r8
   125a8:	mov	r0, r9
   125ac:	bl	11464 <cd_it8_add_spectrum@plt>
   125b0:	mov	r1, r7
   125b4:	mov	r0, r9
   125b8:	bl	11464 <cd_it8_add_spectrum@plt>
   125bc:	ldr	r1, [pc, #296]	; 126ec <g_slice_alloc0@plt+0x11e0>
   125c0:	mov	r0, r9
   125c4:	bl	113b0 <cd_it8_set_originator@plt>
   125c8:	ldr	r0, [r5, #4]
   125cc:	bl	111f4 <g_path_get_basename@plt>
   125d0:	ldr	r1, [pc, #280]	; 126f0 <g_slice_alloc0@plt+0x11e4>
   125d4:	mov	sl, r0
   125d8:	bl	11260 <g_strrstr@plt>
   125dc:	mov	r1, sl
   125e0:	cmp	r0, #0
   125e4:	movne	r3, #0
   125e8:	strbne	r3, [r0]
   125ec:	mov	r0, r9
   125f0:	bl	11254 <cd_it8_set_title@plt>
   125f4:	ldr	r3, [sp, #4]
   125f8:	mov	r0, r9
   125fc:	ldr	r1, [r3, #8]
   12600:	bl	113e0 <cd_it8_set_enable_created@plt>
   12604:	ldr	r0, [r5]
   12608:	bl	114c4 <g_file_new_for_path@plt>
   1260c:	ldr	r2, [sp]
   12610:	mov	r1, r0
   12614:	mov	fp, r0
   12618:	mov	r0, r9
   1261c:	bl	112b4 <cd_it8_save_to_file@plt>
   12620:	cmp	r6, #0
   12624:	mov	r5, r0
   12628:	beq	12634 <g_slice_alloc0@plt+0x1128>
   1262c:	mov	r0, r6
   12630:	bl	1123c <cd_spectrum_free@plt>
   12634:	cmp	r8, #0
   12638:	beq	12644 <g_slice_alloc0@plt+0x1138>
   1263c:	mov	r0, r8
   12640:	bl	1123c <cd_spectrum_free@plt>
   12644:	cmp	r7, #0
   12648:	beq	12654 <g_slice_alloc0@plt+0x1148>
   1264c:	mov	r0, r7
   12650:	bl	1123c <cd_spectrum_free@plt>
   12654:	ldr	r0, [sp, #8]
   12658:	bl	114ac <g_strfreev@plt>
   1265c:	mov	r0, r4
   12660:	bl	114b8 <g_ptr_array_unref@plt>
   12664:	cmp	fp, #0
   12668:	beq	12674 <g_slice_alloc0@plt+0x1168>
   1266c:	mov	r0, fp
   12670:	bl	11230 <g_object_unref@plt>
   12674:	cmp	r9, #0
   12678:	beq	122ec <g_slice_alloc0@plt+0xde0>
   1267c:	mov	r0, r9
   12680:	bl	11230 <g_object_unref@plt>
   12684:	b	122ec <g_slice_alloc0@plt+0xde0>
   12688:	ldr	r3, [pc, #100]	; 126f4 <g_slice_alloc0@plt+0x11e8>
   1268c:	mov	r2, #0
   12690:	mov	r1, #1
   12694:	ldr	r0, [sp]
   12698:	bl	1144c <g_set_error_literal@plt>
   1269c:	ldr	r0, [sp, #8]
   126a0:	bl	114ac <g_strfreev@plt>
   126a4:	mov	r5, #0
   126a8:	mov	r0, r4
   126ac:	bl	114b8 <g_ptr_array_unref@plt>
   126b0:	mov	sl, r5
   126b4:	b	122ec <g_slice_alloc0@plt+0xde0>
   126b8:	bl	11404 <__stack_chk_fail@plt>
   126bc:	nop			; (mov r0, r0)
   126c0:	andeq	r0, r0, r0
   126c4:	svccc	0x00f00000	; IMB
   126c8:	andeq	r2, r2, r0, lsr #27
   126cc:	andeq	r2, r1, r4, lsr r9
   126d0:	andeq	r1, r1, r0, lsl pc
   126d4:			; <UNDEFINED> instruction: 0x00012bb0
   126d8:	andeq	r2, r1, r8, ror #17
   126dc:	andeq	r2, r1, ip, ror #17
   126e0:	andeq	r2, r1, ip, ror #18
   126e4:	andeq	r2, r1, r0, ror r9
   126e8:	andeq	r2, r1, r4, ror r9
   126ec:	andeq	r2, r1, r4, lsr #18
   126f0:	andeq	r2, r1, ip, lsr #18
   126f4:	andeq	r2, r1, r4, lsl #18
   126f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126fc:	sub	sp, sp, #12
   12700:	subs	fp, r3, #0
   12704:	ldr	r8, [sp, #48]	; 0x30
   12708:	beq	127d0 <g_slice_alloc0@plt+0x12c4>
   1270c:	mov	r7, r2
   12710:	mov	r6, r0
   12714:	mvn	r2, #0
   12718:	mov	r0, r1
   1271c:	ldr	r1, [pc, #196]	; 127e8 <g_slice_alloc0@plt+0x12dc>
   12720:	str	fp, [sp, #4]
   12724:	bl	1141c <g_strsplit@plt>
   12728:	ldr	r3, [r0]
   1272c:	mov	sl, r0
   12730:	cmp	r3, #0
   12734:	beq	127c0 <g_slice_alloc0@plt+0x12b4>
   12738:	ldr	r9, [pc, #172]	; 127ec <g_slice_alloc0@plt+0x12e0>
   1273c:	mov	r5, r0
   12740:	mov	r4, #0
   12744:	b	12780 <g_slice_alloc0@plt+0x1274>
   12748:	ldr	r0, [sp, #4]
   1274c:	bl	11278 <g_strdup@plt>
   12750:	str	r0, [fp, #8]
   12754:	mov	r0, r7
   12758:	bl	11278 <g_strdup@plt>
   1275c:	mov	r1, fp
   12760:	str	r8, [fp, #12]
   12764:	add	r4, r4, #1
   12768:	str	r0, [fp, #4]
   1276c:	mov	r0, r6
   12770:	bl	112f0 <g_ptr_array_add@plt>
   12774:	ldr	r3, [r5, #4]!
   12778:	cmp	r3, #0
   1277c:	beq	127c0 <g_slice_alloc0@plt+0x12b4>
   12780:	mov	r0, #16
   12784:	bl	11434 <g_malloc0@plt>
   12788:	mov	fp, r0
   1278c:	ldr	r0, [r5]
   12790:	bl	11278 <g_strdup@plt>
   12794:	cmp	r4, #0
   12798:	mov	r2, #5
   1279c:	mov	r1, r9
   127a0:	str	r0, [fp]
   127a4:	mov	r0, #0
   127a8:	beq	12748 <g_slice_alloc0@plt+0x123c>
   127ac:	bl	11314 <dcgettext@plt>
   127b0:	ldr	r1, [sl]
   127b4:	bl	1132c <g_strdup_printf@plt>
   127b8:	str	r0, [fp, #8]
   127bc:	b	12754 <g_slice_alloc0@plt+0x1248>
   127c0:	mov	r0, sl
   127c4:	add	sp, sp, #12
   127c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127cc:	b	114ac <g_strfreev@plt>
   127d0:	ldr	r2, [pc, #24]	; 127f0 <g_slice_alloc0@plt+0x12e4>
   127d4:	ldr	r1, [pc, #24]	; 127f4 <g_slice_alloc0@plt+0x12e8>
   127d8:	ldr	r0, [pc, #24]	; 127f8 <g_slice_alloc0@plt+0x12ec>
   127dc:	add	sp, sp, #12
   127e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127e4:	b	11398 <g_return_if_fail_warning@plt>
   127e8:	muleq	r1, r0, r9
   127ec:	muleq	r1, r4, r9
   127f0:	andeq	r2, r1, r8, ror r9
   127f4:	andeq	r2, r1, ip, ror #16
   127f8:	andeq	r2, r1, ip, lsl #19
   127fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12800:	mov	r7, r0
   12804:	ldr	r6, [pc, #72]	; 12854 <g_slice_alloc0@plt+0x1348>
   12808:	ldr	r5, [pc, #72]	; 12858 <g_slice_alloc0@plt+0x134c>
   1280c:	add	r6, pc, r6
   12810:	add	r5, pc, r5
   12814:	sub	r6, r6, r5
   12818:	mov	r8, r1
   1281c:	mov	r9, r2
   12820:	bl	11198 <g_free@plt-0x20>
   12824:	asrs	r6, r6, #2
   12828:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1282c:	mov	r4, #0
   12830:	add	r4, r4, #1
   12834:	ldr	r3, [r5], #4
   12838:	mov	r2, r9
   1283c:	mov	r1, r8
   12840:	mov	r0, r7
   12844:	blx	r3
   12848:	cmp	r6, r4
   1284c:	bne	12830 <g_slice_alloc0@plt+0x1324>
   12850:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12854:	andeq	r0, r1, r8, lsl #11
   12858:	andeq	r0, r1, r0, lsl #11
   1285c:	bx	lr

Disassembly of section .fini:

00012860 <.fini>:
   12860:	push	{r3, lr}
   12864:	pop	{r3, pc}
