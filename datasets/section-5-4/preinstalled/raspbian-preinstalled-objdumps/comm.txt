
raspbian-preinstalled/comm:     file format elf32-littlearm


Disassembly of section .init:

00010cb0 <.init>:
   10cb0:	push	{r3, lr}
   10cb4:	bl	117dc <close@plt+0x8b4>
   10cb8:	pop	{r3, pc}

Disassembly of section .plt:

00010cbc <fdopen@plt-0x14>:
   10cbc:	push	{lr}		; (str lr, [sp, #-4]!)
   10cc0:	ldr	lr, [pc, #4]	; 10ccc <fdopen@plt-0x4>
   10cc4:	add	lr, pc, lr
   10cc8:	ldr	pc, [lr, #8]!
   10ccc:	andeq	r6, r1, r4, lsr r3

00010cd0 <fdopen@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #90112	; 0x16000
   10cd8:	ldr	pc, [ip, #820]!	; 0x334

00010cdc <calloc@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #90112	; 0x16000
   10ce4:	ldr	pc, [ip, #812]!	; 0x32c

00010ce8 <fputs_unlocked@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #90112	; 0x16000
   10cf0:	ldr	pc, [ip, #804]!	; 0x324

00010cf4 <raise@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #90112	; 0x16000
   10cfc:	ldr	pc, [ip, #796]!	; 0x31c

00010d00 <strcmp@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #90112	; 0x16000
   10d08:	ldr	pc, [ip, #788]!	; 0x314

00010d0c <posix_fadvise64@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #90112	; 0x16000
   10d14:	ldr	pc, [ip, #780]!	; 0x30c

00010d18 <fflush@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #90112	; 0x16000
   10d20:	ldr	pc, [ip, #772]!	; 0x304

00010d24 <free@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #90112	; 0x16000
   10d2c:	ldr	pc, [ip, #764]!	; 0x2fc

00010d30 <_exit@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #90112	; 0x16000
   10d38:	ldr	pc, [ip, #756]!	; 0x2f4

00010d3c <memcpy@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #90112	; 0x16000
   10d44:	ldr	pc, [ip, #748]!	; 0x2ec

00010d48 <mbsinit@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #90112	; 0x16000
   10d50:	ldr	pc, [ip, #740]!	; 0x2e4

00010d54 <fwrite_unlocked@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #90112	; 0x16000
   10d5c:	ldr	pc, [ip, #732]!	; 0x2dc

00010d60 <memcmp@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #90112	; 0x16000
   10d68:	ldr	pc, [ip, #724]!	; 0x2d4

00010d6c <dcgettext@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #90112	; 0x16000
   10d74:	ldr	pc, [ip, #716]!	; 0x2cc

00010d78 <__stack_chk_fail@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #90112	; 0x16000
   10d80:	ldr	pc, [ip, #708]!	; 0x2c4

00010d84 <realloc@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #90112	; 0x16000
   10d8c:	ldr	pc, [ip, #700]!	; 0x2bc

00010d90 <textdomain@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #90112	; 0x16000
   10d98:	ldr	pc, [ip, #692]!	; 0x2b4

00010d9c <iswprint@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #90112	; 0x16000
   10da4:	ldr	pc, [ip, #684]!	; 0x2ac

00010da8 <fwrite@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #90112	; 0x16000
   10db0:	ldr	pc, [ip, #676]!	; 0x2a4

00010db4 <lseek64@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #90112	; 0x16000
   10dbc:	ldr	pc, [ip, #668]!	; 0x29c

00010dc0 <__ctype_get_mb_cur_max@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #90112	; 0x16000
   10dc8:	ldr	pc, [ip, #660]!	; 0x294

00010dcc <__fpending@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #90112	; 0x16000
   10dd4:	ldr	pc, [ip, #652]!	; 0x28c

00010dd8 <mbrtowc@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #90112	; 0x16000
   10de0:	ldr	pc, [ip, #644]!	; 0x284

00010de4 <error@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #90112	; 0x16000
   10dec:	ldr	pc, [ip, #636]!	; 0x27c

00010df0 <strcoll@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #90112	; 0x16000
   10df8:	ldr	pc, [ip, #628]!	; 0x274

00010dfc <malloc@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #90112	; 0x16000
   10e04:	ldr	pc, [ip, #620]!	; 0x26c

00010e08 <__libc_start_main@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #90112	; 0x16000
   10e10:	ldr	pc, [ip, #612]!	; 0x264

00010e14 <__freading@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #90112	; 0x16000
   10e1c:	ldr	pc, [ip, #604]!	; 0x25c

00010e20 <__gmon_start__@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #90112	; 0x16000
   10e28:	ldr	pc, [ip, #596]!	; 0x254

00010e2c <getopt_long@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #90112	; 0x16000
   10e34:	ldr	pc, [ip, #588]!	; 0x24c

00010e38 <__ctype_b_loc@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #90112	; 0x16000
   10e40:	ldr	pc, [ip, #580]!	; 0x244

00010e44 <exit@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #90112	; 0x16000
   10e4c:	ldr	pc, [ip, #572]!	; 0x23c

00010e50 <strlen@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #90112	; 0x16000
   10e58:	ldr	pc, [ip, #564]!	; 0x234

00010e5c <__errno_location@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #90112	; 0x16000
   10e64:	ldr	pc, [ip, #556]!	; 0x22c

00010e68 <__cxa_atexit@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #90112	; 0x16000
   10e70:	ldr	pc, [ip, #548]!	; 0x224

00010e74 <memset@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #90112	; 0x16000
   10e7c:	ldr	pc, [ip, #540]!	; 0x21c

00010e80 <__printf_chk@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #90112	; 0x16000
   10e88:	ldr	pc, [ip, #532]!	; 0x214

00010e8c <fileno@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #90112	; 0x16000
   10e94:	ldr	pc, [ip, #524]!	; 0x20c

00010e98 <__fprintf_chk@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #90112	; 0x16000
   10ea0:	ldr	pc, [ip, #516]!	; 0x204

00010ea4 <fclose@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #90112	; 0x16000
   10eac:	ldr	pc, [ip, #508]!	; 0x1fc

00010eb0 <fseeko64@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #90112	; 0x16000
   10eb8:	ldr	pc, [ip, #500]!	; 0x1f4

00010ebc <fcntl64@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #90112	; 0x16000
   10ec4:	ldr	pc, [ip, #492]!	; 0x1ec

00010ec8 <__uflow@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #90112	; 0x16000
   10ed0:	ldr	pc, [ip, #484]!	; 0x1e4

00010ed4 <setlocale@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #90112	; 0x16000
   10edc:	ldr	pc, [ip, #476]!	; 0x1dc

00010ee0 <strrchr@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #90112	; 0x16000
   10ee8:	ldr	pc, [ip, #468]!	; 0x1d4

00010eec <nl_langinfo@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #90112	; 0x16000
   10ef4:	ldr	pc, [ip, #460]!	; 0x1cc

00010ef8 <fopen64@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #90112	; 0x16000
   10f00:	ldr	pc, [ip, #452]!	; 0x1c4

00010f04 <bindtextdomain@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #90112	; 0x16000
   10f0c:	ldr	pc, [ip, #444]!	; 0x1bc

00010f10 <strncmp@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #90112	; 0x16000
   10f18:	ldr	pc, [ip, #436]!	; 0x1b4

00010f1c <abort@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #90112	; 0x16000
   10f24:	ldr	pc, [ip, #428]!	; 0x1ac

00010f28 <close@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #90112	; 0x16000
   10f30:	ldr	pc, [ip, #420]!	; 0x1a4

Disassembly of section .text:

00010f34 <.text>:
   10f34:	ldr	r3, [pc, #2032]	; 1172c <close@plt+0x804>
   10f38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f3c:	sub	sp, sp, #324	; 0x144
   10f40:	ldr	r3, [r3]
   10f44:	mov	r6, r0
   10f48:	ldr	r0, [r1]
   10f4c:	str	r3, [sp, #316]	; 0x13c
   10f50:	mov	r5, r1
   10f54:	bl	121e4 <close@plt+0x12bc>
   10f58:	ldr	r1, [pc, #2000]	; 11730 <close@plt+0x808>
   10f5c:	mov	r0, #6
   10f60:	bl	10ed4 <setlocale@plt>
   10f64:	ldr	r1, [pc, #1992]	; 11734 <close@plt+0x80c>
   10f68:	ldr	r0, [pc, #1992]	; 11738 <close@plt+0x810>
   10f6c:	bl	10f04 <bindtextdomain@plt>
   10f70:	ldr	r0, [pc, #1984]	; 11738 <close@plt+0x810>
   10f74:	bl	10d90 <textdomain@plt>
   10f78:	mov	r0, #3
   10f7c:	bl	11fd8 <close@plt+0x10b0>
   10f80:	ldr	r7, [pc, #1972]	; 1173c <close@plt+0x814>
   10f84:	ldr	r9, [pc, #1972]	; 11740 <close@plt+0x818>
   10f88:	ldr	r8, [pc, #1972]	; 11744 <close@plt+0x81c>
   10f8c:	ldr	sl, [pc, #1972]	; 11748 <close@plt+0x820>
   10f90:	strb	r0, [r7, #14]
   10f94:	ldr	r0, [pc, #1968]	; 1174c <close@plt+0x824>
   10f98:	bl	15738 <close@plt+0x4810>
   10f9c:	mov	r3, #1
   10fa0:	strb	r3, [r7]
   10fa4:	strb	r3, [r7, #1]
   10fa8:	strb	r3, [r7, #8]
   10fac:	mov	r3, #0
   10fb0:	strb	r3, [r7, #20]
   10fb4:	strh	r3, [r7, #12]
   10fb8:	str	r3, [r7, #16]
   10fbc:	strb	r3, [r7, #21]
   10fc0:	mov	r4, #0
   10fc4:	str	r4, [sp]
   10fc8:	mov	r3, r9
   10fcc:	mov	r2, r8
   10fd0:	mov	r1, r5
   10fd4:	mov	r0, r6
   10fd8:	bl	10e2c <getopt_long@plt>
   10fdc:	cmn	r0, #1
   10fe0:	beq	11120 <close@plt+0x1f8>
   10fe4:	cmp	r0, #51	; 0x33
   10fe8:	beq	1110c <close@plt+0x1e4>
   10fec:	ble	11014 <close@plt+0xec>
   10ff0:	ldr	r3, [pc, #1880]	; 11750 <close@plt+0x828>
   10ff4:	cmp	r0, r3
   10ff8:	beq	11114 <close@plt+0x1ec>
   10ffc:	bgt	11044 <close@plt+0x11c>
   11000:	cmp	r0, #122	; 0x7a
   11004:	bne	11030 <close@plt+0x108>
   11008:	ldr	fp, [pc, #1860]	; 11754 <close@plt+0x82c>
   1100c:	strb	r4, [fp, #4]
   11010:	b	10fc0 <close@plt+0x98>
   11014:	cmn	r0, #2
   11018:	beq	11610 <close@plt+0x6e8>
   1101c:	ble	110cc <close@plt+0x1a4>
   11020:	cmp	r0, #49	; 0x31
   11024:	bne	110bc <close@plt+0x194>
   11028:	strb	r4, [r7]
   1102c:	b	10fc0 <close@plt+0x98>
   11030:	cmp	r0, #256	; 0x100
   11034:	bne	11650 <close@plt+0x728>
   11038:	mov	r3, #1
   1103c:	str	r3, [r7, #16]
   11040:	b	10fc0 <close@plt+0x98>
   11044:	ldr	r3, [pc, #1804]	; 11758 <close@plt+0x830>
   11048:	cmp	r0, r3
   1104c:	bne	110a4 <close@plt+0x17c>
   11050:	ldr	r2, [r7, #4]
   11054:	ldr	r3, [sl]
   11058:	cmp	r2, #0
   1105c:	ldr	fp, [pc, #1776]	; 11754 <close@plt+0x82c>
   11060:	beq	11080 <close@plt+0x158>
   11064:	mov	r1, r3
   11068:	ldr	r0, [fp]
   1106c:	str	r3, [sp, #28]
   11070:	bl	10d00 <strcmp@plt>
   11074:	ldr	r3, [sp, #28]
   11078:	cmp	r0, #0
   1107c:	bne	116b8 <close@plt+0x790>
   11080:	ldrb	r2, [r3]
   11084:	str	r3, [fp]
   11088:	cmp	r2, #0
   1108c:	moveq	r0, #1
   11090:	beq	1109c <close@plt+0x174>
   11094:	mov	r0, r3
   11098:	bl	10e50 <strlen@plt>
   1109c:	str	r0, [r7, #4]
   110a0:	b	10fc0 <close@plt+0x98>
   110a4:	add	r3, r3, #1
   110a8:	cmp	r0, r3
   110ac:	bne	11650 <close@plt+0x728>
   110b0:	mov	r3, #1
   110b4:	strb	r3, [r7, #21]
   110b8:	b	10fc0 <close@plt+0x98>
   110bc:	cmp	r0, #50	; 0x32
   110c0:	bne	11650 <close@plt+0x728>
   110c4:	strb	r4, [r7, #1]
   110c8:	b	10fc0 <close@plt+0x98>
   110cc:	cmn	r0, #3
   110d0:	bne	11650 <close@plt+0x728>
   110d4:	ldr	r3, [pc, #1664]	; 1175c <close@plt+0x834>
   110d8:	ldr	r0, [pc, #1664]	; 11760 <close@plt+0x838>
   110dc:	ldr	r1, [pc, #1664]	; 11764 <close@plt+0x83c>
   110e0:	ldr	r2, [pc, #1664]	; 11768 <close@plt+0x840>
   110e4:	str	r4, [sp, #8]
   110e8:	ldr	r0, [r0]
   110ec:	ldr	r3, [r3]
   110f0:	str	r1, [sp, #4]
   110f4:	str	r2, [sp]
   110f8:	ldr	r1, [pc, #1644]	; 1176c <close@plt+0x844>
   110fc:	ldr	r2, [pc, #1644]	; 11770 <close@plt+0x848>
   11100:	bl	148c0 <close@plt+0x3998>
   11104:	mov	r0, r4
   11108:	bl	10e44 <exit@plt>
   1110c:	strb	r4, [r7, #8]
   11110:	b	10fc0 <close@plt+0x98>
   11114:	mov	r3, #2
   11118:	str	r3, [r7, #16]
   1111c:	b	10fc0 <close@plt+0x98>
   11120:	ldr	r3, [r7, #4]
   11124:	cmp	r3, r4
   11128:	ldr	r4, [pc, #1604]	; 11774 <close@plt+0x84c>
   1112c:	moveq	r3, #1
   11130:	streq	r3, [r7, #4]
   11134:	ldr	r3, [r4]
   11138:	sub	r2, r6, r3
   1113c:	cmp	r2, #1
   11140:	ble	116d8 <close@plt+0x7b0>
   11144:	cmp	r2, #2
   11148:	bne	11618 <close@plt+0x6f0>
   1114c:	add	r3, r5, r3, lsl #2
   11150:	ldr	r8, [pc, #1568]	; 11778 <close@plt+0x850>
   11154:	mov	r6, r3
   11158:	add	r5, sp, #92	; 0x5c
   1115c:	add	r4, sp, #196	; 0xc4
   11160:	mov	sl, #0
   11164:	str	r3, [sp, #64]	; 0x40
   11168:	lsl	r3, sl, #4
   1116c:	add	r2, sp, #116	; 0x74
   11170:	add	r9, r2, r3
   11174:	sub	fp, r4, #48	; 0x30
   11178:	str	r3, [sp, #28]
   1117c:	mov	r0, fp
   11180:	bl	12088 <close@plt+0x1160>
   11184:	str	fp, [r9], #4
   11188:	add	fp, fp, #12
   1118c:	cmp	fp, r4
   11190:	bne	1117c <close@plt+0x254>
   11194:	str	r6, [sp, #32]
   11198:	ldr	fp, [r6], #4
   1119c:	mov	r3, #0
   111a0:	mov	r0, fp
   111a4:	str	r3, [r5]
   111a8:	str	r3, [r5, #4]
   111ac:	str	r3, [r5, #8]
   111b0:	mov	r1, r8
   111b4:	bl	10d00 <strcmp@plt>
   111b8:	cmp	r0, #0
   111bc:	ldreq	r3, [pc, #1464]	; 1177c <close@plt+0x854>
   111c0:	ldreq	fp, [r3]
   111c4:	bne	11580 <close@plt+0x658>
   111c8:	add	r3, sp, #84	; 0x54
   111cc:	cmp	fp, #0
   111d0:	str	fp, [r3, sl, lsl #2]
   111d4:	beq	11688 <close@plt+0x760>
   111d8:	ldr	r3, [pc, #1396]	; 11754 <close@plt+0x82c>
   111dc:	mov	r1, #2
   111e0:	mov	r0, fp
   111e4:	str	r3, [sp, #48]	; 0x30
   111e8:	bl	11f0c <close@plt+0xfe4>
   111ec:	ldr	r1, [sp, #28]
   111f0:	ldr	r3, [pc, #1372]	; 11754 <close@plt+0x82c>
   111f4:	add	r2, sp, #320	; 0x140
   111f8:	add	r9, r2, r1
   111fc:	ldrb	r2, [r3, #4]
   11200:	ldr	r0, [r9, #-204]	; 0xffffff34
   11204:	mov	r1, fp
   11208:	bl	1209c <close@plt+0x1174>
   1120c:	ldr	r3, [fp]
   11210:	add	r2, sp, #76	; 0x4c
   11214:	ands	r3, r3, #32
   11218:	str	r0, [r2, sl, lsl #2]
   1121c:	bne	11688 <close@plt+0x760>
   11220:	cmp	sl, #1
   11224:	add	r5, r5, #12
   11228:	add	r4, r4, #48	; 0x30
   1122c:	movne	sl, #1
   11230:	bne	11168 <close@plt+0x240>
   11234:	str	r3, [sp, #68]	; 0x44
   11238:	mov	r3, #0
   1123c:	mov	r2, r3
   11240:	mov	fp, sl
   11244:	str	sl, [sp, #60]	; 0x3c
   11248:	str	r3, [sp, #52]	; 0x34
   1124c:	str	r3, [sp, #56]	; 0x38
   11250:	str	r3, [sp, #32]
   11254:	strd	r2, [sp, #36]	; 0x24
   11258:	str	r3, [sp, #44]	; 0x2c
   1125c:	ldr	r5, [sp, #76]	; 0x4c
   11260:	ldr	r4, [sp, #80]	; 0x50
   11264:	cmp	r5, #0
   11268:	beq	1146c <close@plt+0x544>
   1126c:	mov	r3, #0
   11270:	cmp	r4, #0
   11274:	strh	r3, [sp, #72]	; 0x48
   11278:	beq	114f0 <close@plt+0x5c8>
   1127c:	ldrb	r3, [r7, #14]
   11280:	ldr	r0, [r5, #8]
   11284:	ldr	r6, [r5, #4]
   11288:	cmp	r3, #0
   1128c:	ldr	r1, [r4, #8]
   11290:	ldr	r8, [r4, #4]
   11294:	bne	11500 <close@plt+0x5d8>
   11298:	cmp	r8, r6
   1129c:	movcc	r2, r8
   112a0:	movcs	r2, r6
   112a4:	sub	r2, r2, #1
   112a8:	bl	10d60 <memcmp@plt>
   112ac:	ldr	r3, [pc, #1196]	; 11760 <close@plt+0x838>
   112b0:	ldr	r2, [r3]
   112b4:	cmp	r0, #0
   112b8:	bne	114b8 <close@plt+0x590>
   112bc:	cmp	r8, r6
   112c0:	bhi	1151c <close@plt+0x5f4>
   112c4:	movne	r0, #1
   112c8:	moveq	r0, #0
   112cc:	cmp	r0, #0
   112d0:	bne	114b8 <close@plt+0x590>
   112d4:	ldr	r3, [sp, #52]	; 0x34
   112d8:	ldr	ip, [sp, #56]	; 0x38
   112dc:	adds	r3, r3, #1
   112e0:	str	r3, [sp, #52]	; 0x34
   112e4:	adc	ip, ip, #0
   112e8:	mov	r3, #3
   112ec:	add	r1, r4, #8
   112f0:	add	r0, r4, #4
   112f4:	str	ip, [sp, #56]	; 0x38
   112f8:	bl	11890 <close@plt+0x968>
   112fc:	strb	fp, [sp, #73]	; 0x49
   11300:	mov	r3, #1
   11304:	strb	fp, [sp, #72]	; 0x48
   11308:	cmp	r3, #0
   1130c:	add	r6, sp, #72	; 0x48
   11310:	add	r4, sp, #92	; 0x5c
   11314:	mov	r5, #0
   11318:	bne	1133c <close@plt+0x414>
   1131c:	cmp	r5, #1
   11320:	add	r6, r6, #1
   11324:	add	r4, r4, #12
   11328:	beq	1125c <close@plt+0x334>
   1132c:	ldrb	r3, [r6]
   11330:	mov	r5, #1
   11334:	cmp	r3, #0
   11338:	beq	1131c <close@plt+0x3f4>
   1133c:	ldr	r9, [r4]
   11340:	lsl	r3, r5, #2
   11344:	add	ip, r9, #1
   11348:	and	ip, ip, #3
   1134c:	add	r2, r3, ip
   11350:	str	r3, [sp, #28]
   11354:	add	r3, sp, #84	; 0x54
   11358:	ldr	r8, [r4, #4]
   1135c:	ldr	sl, [r3, r5, lsl #2]
   11360:	add	r3, sp, #320	; 0x140
   11364:	add	r2, r3, r2, lsl #2
   11368:	ldr	r3, [sp, #48]	; 0x30
   1136c:	ldr	r0, [r2, #-204]	; 0xffffff34
   11370:	mov	r1, sl
   11374:	ldrb	r2, [r3, #4]
   11378:	str	ip, [r4]
   1137c:	str	r9, [r4, #4]
   11380:	str	r8, [r4, #8]
   11384:	bl	1209c <close@plt+0x1174>
   11388:	add	r3, sp, #76	; 0x4c
   1138c:	cmp	r0, #0
   11390:	str	r0, [r3, r5, lsl #2]
   11394:	mov	r2, r0
   11398:	ldr	r3, [sp, #28]
   1139c:	beq	11400 <close@plt+0x4d8>
   113a0:	ldr	r1, [r7, #16]
   113a4:	cmp	r1, #2
   113a8:	beq	113ec <close@plt+0x4c4>
   113ac:	cmp	r1, #1
   113b0:	beq	113c0 <close@plt+0x498>
   113b4:	ldrb	r1, [r7, #20]
   113b8:	cmp	r1, #0
   113bc:	beq	113ec <close@plt+0x4c4>
   113c0:	add	r9, r3, r9
   113c4:	add	r1, sp, #320	; 0x140
   113c8:	add	r9, r1, r9, lsl #2
   113cc:	add	r3, r5, #1
   113d0:	str	r3, [sp]
   113d4:	ldr	r0, [r9, #-204]	; 0xffffff34
   113d8:	add	r3, r2, #8
   113dc:	add	r1, r0, #8
   113e0:	add	r2, r2, #4
   113e4:	add	r0, r0, #4
   113e8:	bl	11974 <close@plt+0xa4c>
   113ec:	ldr	r3, [sl]
   113f0:	ands	r3, r3, #32
   113f4:	bne	11658 <close@plt+0x730>
   113f8:	strb	r3, [r6]
   113fc:	b	1131c <close@plt+0x3f4>
   11400:	add	r8, r3, r8
   11404:	add	r2, sp, #320	; 0x140
   11408:	add	r8, r2, r8, lsl #2
   1140c:	ldr	r0, [r8, #-204]	; 0xffffff34
   11410:	ldr	r2, [r0, #8]
   11414:	cmp	r2, #0
   11418:	beq	113ec <close@plt+0x4c4>
   1141c:	ldr	r2, [r7, #16]
   11420:	cmp	r2, #2
   11424:	beq	113ec <close@plt+0x4c4>
   11428:	cmp	r2, #1
   1142c:	beq	1143c <close@plt+0x514>
   11430:	ldrb	r2, [r7, #20]
   11434:	cmp	r2, #0
   11438:	beq	113ec <close@plt+0x4c4>
   1143c:	add	r9, r3, r9
   11440:	add	r2, sp, #320	; 0x140
   11444:	add	r9, r2, r9, lsl #2
   11448:	add	r3, r5, #1
   1144c:	str	r3, [sp]
   11450:	ldr	r2, [r9, #-204]	; 0xffffff34
   11454:	add	r1, r0, #8
   11458:	add	r3, r2, #8
   1145c:	add	r0, r0, #4
   11460:	add	r2, r2, #4
   11464:	bl	11974 <close@plt+0xa4c>
   11468:	b	113ec <close@plt+0x4c4>
   1146c:	cmp	r4, #0
   11470:	beq	11524 <close@plt+0x5fc>
   11474:	ldr	r3, [pc, #740]	; 11760 <close@plt+0x838>
   11478:	strb	r5, [sp, #72]	; 0x48
   1147c:	strb	fp, [r7, #20]
   11480:	ldr	r2, [r3]
   11484:	ldr	r3, [sp, #32]
   11488:	ldr	ip, [sp, #36]	; 0x24
   1148c:	adds	r3, r3, #1
   11490:	str	r3, [sp, #32]
   11494:	adc	ip, ip, #0
   11498:	mov	r3, #2
   1149c:	add	r1, r4, #8
   114a0:	add	r0, r4, #4
   114a4:	str	ip, [sp, #36]	; 0x24
   114a8:	bl	11890 <close@plt+0x968>
   114ac:	strb	fp, [sp, #73]	; 0x49
   114b0:	mov	r3, #0
   114b4:	b	11308 <close@plt+0x3e0>
   114b8:	cmp	r0, #0
   114bc:	strb	fp, [r7, #20]
   114c0:	bgt	11484 <close@plt+0x55c>
   114c4:	ldr	r3, [sp, #40]	; 0x28
   114c8:	ldr	ip, [sp, #44]	; 0x2c
   114cc:	adds	r3, r3, #1
   114d0:	str	r3, [sp, #40]	; 0x28
   114d4:	adc	ip, ip, #0
   114d8:	mov	r3, #1
   114dc:	add	r1, r5, #8
   114e0:	add	r0, r5, #4
   114e4:	str	ip, [sp, #44]	; 0x2c
   114e8:	bl	11890 <close@plt+0x968>
   114ec:	b	11300 <close@plt+0x3d8>
   114f0:	ldr	r3, [pc, #616]	; 11760 <close@plt+0x838>
   114f4:	strb	fp, [r7, #20]
   114f8:	ldr	r2, [r3]
   114fc:	b	114c4 <close@plt+0x59c>
   11500:	mov	r2, r1
   11504:	sub	r3, r8, #1
   11508:	sub	r1, r6, #1
   1150c:	bl	14d18 <close@plt+0x3df0>
   11510:	ldr	r3, [pc, #584]	; 11760 <close@plt+0x838>
   11514:	ldr	r2, [r3]
   11518:	b	112cc <close@plt+0x3a4>
   1151c:	strb	fp, [r7, #20]
   11520:	b	114c4 <close@plt+0x59c>
   11524:	ldr	r0, [sp, #84]	; 0x54
   11528:	bl	14dd4 <close@plt+0x3eac>
   1152c:	cmp	r0, #0
   11530:	bne	116a0 <close@plt+0x778>
   11534:	ldr	r0, [sp, #88]	; 0x58
   11538:	bl	14dd4 <close@plt+0x3eac>
   1153c:	subs	r5, r0, #0
   11540:	bne	11698 <close@plt+0x770>
   11544:	ldrb	r3, [r7, #21]
   11548:	cmp	r3, #0
   1154c:	bne	11594 <close@plt+0x66c>
   11550:	ldrb	r3, [r7, #12]
   11554:	cmp	r3, #0
   11558:	ldrbeq	r3, [r7, #13]
   1155c:	streq	r3, [sp, #60]	; 0x3c
   11560:	ldr	r3, [pc, #452]	; 1172c <close@plt+0x804>
   11564:	ldr	r2, [sp, #316]	; 0x13c
   11568:	ldr	r0, [sp, #60]	; 0x3c
   1156c:	ldr	r3, [r3]
   11570:	cmp	r2, r3
   11574:	bne	116b4 <close@plt+0x78c>
   11578:	add	sp, sp, #324	; 0x144
   1157c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11580:	mov	r0, fp
   11584:	ldr	r1, [pc, #500]	; 11780 <close@plt+0x858>
   11588:	bl	11f40 <close@plt+0x1018>
   1158c:	mov	fp, r0
   11590:	b	111c8 <close@plt+0x2a0>
   11594:	ldrd	r0, [sp, #40]	; 0x28
   11598:	add	r2, sp, #244	; 0xf4
   1159c:	bl	12024 <close@plt+0x10fc>
   115a0:	ldr	fp, [sp, #48]	; 0x30
   115a4:	add	r2, sp, #268	; 0x10c
   115a8:	ldr	r6, [fp]
   115ac:	mov	r4, r0
   115b0:	ldrd	r0, [sp, #32]
   115b4:	bl	12024 <close@plt+0x10fc>
   115b8:	add	r2, sp, #292	; 0x124
   115bc:	ldr	r9, [fp]
   115c0:	mov	r8, r0
   115c4:	ldrd	r0, [sp, #52]	; 0x34
   115c8:	bl	12024 <close@plt+0x10fc>
   115cc:	mov	r2, #5
   115d0:	ldr	r1, [pc, #428]	; 11784 <close@plt+0x85c>
   115d4:	mov	sl, r0
   115d8:	mov	r0, r5
   115dc:	ldr	r5, [fp]
   115e0:	bl	10d6c <dcgettext@plt>
   115e4:	ldrb	r1, [fp, #4]
   115e8:	mov	r3, r6
   115ec:	str	r5, [sp, #12]
   115f0:	str	r1, [sp, #20]
   115f4:	stm	sp, {r8, r9, sl}
   115f8:	mov	r2, r4
   115fc:	ldr	r1, [pc, #388]	; 11788 <close@plt+0x860>
   11600:	str	r0, [sp, #16]
   11604:	mov	r0, #1
   11608:	bl	10e80 <__printf_chk@plt>
   1160c:	b	11550 <close@plt+0x628>
   11610:	mov	r0, r4
   11614:	bl	11a28 <close@plt+0xb00>
   11618:	mov	r2, #5
   1161c:	ldr	r1, [pc, #360]	; 1178c <close@plt+0x864>
   11620:	mov	r0, #0
   11624:	bl	10d6c <dcgettext@plt>
   11628:	ldr	r3, [r4]
   1162c:	add	r3, r3, #2
   11630:	mov	r6, r0
   11634:	ldr	r0, [r5, r3, lsl #2]
   11638:	bl	14448 <close@plt+0x3520>
   1163c:	mov	r2, r6
   11640:	mov	r3, r0
   11644:	mov	r1, #0
   11648:	mov	r0, r1
   1164c:	bl	10de4 <error@plt>
   11650:	mov	r0, #1
   11654:	bl	11a28 <close@plt+0xb00>
   11658:	bl	10e5c <__errno_location@plt>
   1165c:	ldr	r3, [sp, #64]	; 0x40
   11660:	ldr	r2, [r3, r5, lsl #2]
   11664:	ldr	r4, [r0]
   11668:	mov	r1, #3
   1166c:	mov	r0, #0
   11670:	bl	1427c <close@plt+0x3354>
   11674:	mov	r1, r4
   11678:	ldr	r2, [pc, #272]	; 11790 <close@plt+0x868>
   1167c:	mov	r3, r0
   11680:	mov	r0, #1
   11684:	bl	10de4 <error@plt>
   11688:	bl	10e5c <__errno_location@plt>
   1168c:	ldr	r3, [sp, #32]
   11690:	ldr	r2, [r3]
   11694:	b	11664 <close@plt+0x73c>
   11698:	mov	r3, #1
   1169c:	str	r3, [sp, #68]	; 0x44
   116a0:	bl	10e5c <__errno_location@plt>
   116a4:	ldr	r3, [sp, #64]	; 0x40
   116a8:	ldr	r2, [sp, #68]	; 0x44
   116ac:	ldr	r2, [r3, r2, lsl #2]
   116b0:	b	11664 <close@plt+0x73c>
   116b4:	bl	10d78 <__stack_chk_fail@plt>
   116b8:	mov	r2, #5
   116bc:	ldr	r1, [pc, #208]	; 11794 <close@plt+0x86c>
   116c0:	mov	r0, r4
   116c4:	bl	10d6c <dcgettext@plt>
   116c8:	mov	r1, r4
   116cc:	mov	r2, r0
   116d0:	mov	r0, #1
   116d4:	bl	10de4 <error@plt>
   116d8:	cmp	r3, r6
   116dc:	mov	r2, #5
   116e0:	blt	11704 <close@plt+0x7dc>
   116e4:	ldr	r1, [pc, #172]	; 11798 <close@plt+0x870>
   116e8:	mov	r0, #0
   116ec:	bl	10d6c <dcgettext@plt>
   116f0:	mov	r1, #0
   116f4:	mov	r2, r0
   116f8:	mov	r0, r1
   116fc:	bl	10de4 <error@plt>
   11700:	b	11650 <close@plt+0x728>
   11704:	ldr	r1, [pc, #144]	; 1179c <close@plt+0x874>
   11708:	mov	r0, #0
   1170c:	bl	10d6c <dcgettext@plt>
   11710:	sub	r6, r6, #-1073741823	; 0xc0000001
   11714:	mov	r4, r0
   11718:	ldr	r0, [r5, r6, lsl #2]
   1171c:	bl	14448 <close@plt+0x3520>
   11720:	mov	r2, r4
   11724:	mov	r3, r0
   11728:	b	11644 <close@plt+0x71c>
   1172c:	andeq	r6, r2, r8, lsl #30
   11730:			; <UNDEFINED> instruction: 0x000159b4
   11734:	andeq	r5, r1, ip, lsl #28
   11738:	andeq	r5, r1, r0, ror #26
   1173c:	andeq	r7, r2, r0, ror #2
   11740:	muleq	r1, r4, r7
   11744:	andeq	r5, r1, ip, ror #28
   11748:	andeq	r7, r2, r8, asr r1
   1174c:	andeq	r1, r1, r0, lsr lr
   11750:	andeq	r0, r0, r1, lsl #2
   11754:	andeq	r7, r2, r4, ror #1
   11758:	andeq	r0, r0, r2, lsl #2
   1175c:	andeq	r7, r2, ip, ror #1
   11760:	andeq	r7, r2, r4, asr r1
   11764:	andeq	r5, r1, r8, asr #28
   11768:	andeq	r5, r1, r8, asr lr
   1176c:	andeq	r5, r1, r4, lsr r8
   11770:	andeq	r5, r1, ip, asr sp
   11774:	andeq	r7, r2, r0, asr #2
   11778:			; <UNDEFINED> instruction: 0x00015eb4
   1177c:	andeq	r7, r2, r0, asr r1
   11780:	andeq	r5, r1, r8, asr pc
   11784:			; <UNDEFINED> instruction: 0x00015eb8
   11788:	andeq	r5, r1, r0, asr #29
   1178c:	andeq	r5, r1, r0, lsr #29
   11790:	andeq	r5, r1, ip, lsr #31
   11794:	andeq	r5, r1, r0, lsr #28
   11798:	andeq	r5, r1, r4, ror lr
   1179c:	andeq	r5, r1, r4, lsl #29
   117a0:	mov	fp, #0
   117a4:	mov	lr, #0
   117a8:	pop	{r1}		; (ldr r1, [sp], #4)
   117ac:	mov	r2, sp
   117b0:	push	{r2}		; (str r2, [sp, #-4]!)
   117b4:	push	{r0}		; (str r0, [sp, #-4]!)
   117b8:	ldr	ip, [pc, #16]	; 117d0 <close@plt+0x8a8>
   117bc:	push	{ip}		; (str ip, [sp, #-4]!)
   117c0:	ldr	r0, [pc, #12]	; 117d4 <close@plt+0x8ac>
   117c4:	ldr	r3, [pc, #12]	; 117d8 <close@plt+0x8b0>
   117c8:	bl	10e08 <__libc_start_main@plt>
   117cc:	bl	10f1c <abort@plt>
   117d0:	andeq	r5, r1, r4, lsr r7
   117d4:	andeq	r0, r1, r4, lsr pc
   117d8:	ldrdeq	r5, [r1], -r4
   117dc:	ldr	r3, [pc, #20]	; 117f8 <close@plt+0x8d0>
   117e0:	ldr	r2, [pc, #20]	; 117fc <close@plt+0x8d4>
   117e4:	add	r3, pc, r3
   117e8:	ldr	r2, [r3, r2]
   117ec:	cmp	r2, #0
   117f0:	bxeq	lr
   117f4:	b	10e20 <__gmon_start__@plt>
   117f8:	andeq	r5, r1, r4, lsl r8
   117fc:	ldrdeq	r0, [r0], -r8
   11800:	ldr	r0, [pc, #24]	; 11820 <close@plt+0x8f8>
   11804:	ldr	r3, [pc, #24]	; 11824 <close@plt+0x8fc>
   11808:	cmp	r3, r0
   1180c:	bxeq	lr
   11810:	ldr	r3, [pc, #16]	; 11828 <close@plt+0x900>
   11814:	cmp	r3, #0
   11818:	bxeq	lr
   1181c:	bx	r3
   11820:	andeq	r7, r2, r4, lsr r1
   11824:	andeq	r7, r2, r4, lsr r1
   11828:	andeq	r0, r0, r0
   1182c:	ldr	r0, [pc, #36]	; 11858 <close@plt+0x930>
   11830:	ldr	r1, [pc, #36]	; 1185c <close@plt+0x934>
   11834:	sub	r1, r1, r0
   11838:	asr	r1, r1, #2
   1183c:	add	r1, r1, r1, lsr #31
   11840:	asrs	r1, r1, #1
   11844:	bxeq	lr
   11848:	ldr	r3, [pc, #16]	; 11860 <close@plt+0x938>
   1184c:	cmp	r3, #0
   11850:	bxeq	lr
   11854:	bx	r3
   11858:	andeq	r7, r2, r4, lsr r1
   1185c:	andeq	r7, r2, r4, lsr r1
   11860:	andeq	r0, r0, r0
   11864:	push	{r4, lr}
   11868:	ldr	r4, [pc, #24]	; 11888 <close@plt+0x960>
   1186c:	ldrb	r3, [r4]
   11870:	cmp	r3, #0
   11874:	popne	{r4, pc}
   11878:	bl	11800 <close@plt+0x8d8>
   1187c:	mov	r3, #1
   11880:	strb	r3, [r4]
   11884:	pop	{r4, pc}
   11888:	andeq	r7, r2, ip, asr r1
   1188c:	b	1182c <close@plt+0x904>
   11890:	cmp	r3, #2
   11894:	push	{r4, r5, r6, r7, r8, lr}
   11898:	mov	r6, r0
   1189c:	mov	r5, r1
   118a0:	mov	r4, r2
   118a4:	beq	118d8 <close@plt+0x9b0>
   118a8:	cmp	r3, #3
   118ac:	beq	11910 <close@plt+0x9e8>
   118b0:	ldr	r3, [pc, #180]	; 1196c <close@plt+0xa44>
   118b4:	ldrb	r3, [r3]
   118b8:	cmp	r3, #0
   118bc:	popeq	{r4, r5, r6, r7, r8, pc}
   118c0:	mov	r3, r4
   118c4:	ldr	r2, [r6]
   118c8:	ldr	r0, [r5]
   118cc:	mov	r1, #1
   118d0:	pop	{r4, r5, r6, r7, r8, lr}
   118d4:	b	10d54 <fwrite_unlocked@plt>
   118d8:	ldr	r3, [pc, #140]	; 1196c <close@plt+0xa44>
   118dc:	ldrb	r2, [r3, #1]
   118e0:	cmp	r2, #0
   118e4:	popeq	{r4, r5, r6, r7, r8, pc}
   118e8:	ldrb	r2, [r3]
   118ec:	cmp	r2, #0
   118f0:	beq	118c0 <close@plt+0x998>
   118f4:	ldr	r1, [pc, #116]	; 11970 <close@plt+0xa48>
   118f8:	ldr	r2, [r3, #4]
   118fc:	mov	r3, r4
   11900:	ldr	r0, [r1]
   11904:	mov	r1, #1
   11908:	bl	10d54 <fwrite_unlocked@plt>
   1190c:	b	118c0 <close@plt+0x998>
   11910:	ldr	r7, [pc, #84]	; 1196c <close@plt+0xa44>
   11914:	ldrb	r3, [r7, #8]
   11918:	cmp	r3, #0
   1191c:	popeq	{r4, r5, r6, r7, r8, pc}
   11920:	ldrb	r3, [r7]
   11924:	cmp	r3, #0
   11928:	beq	11944 <close@plt+0xa1c>
   1192c:	ldr	r1, [pc, #60]	; 11970 <close@plt+0xa48>
   11930:	mov	r3, r2
   11934:	ldr	r2, [r7, #4]
   11938:	ldr	r0, [r1]
   1193c:	mov	r1, #1
   11940:	bl	10d54 <fwrite_unlocked@plt>
   11944:	ldrb	r3, [r7, #1]
   11948:	cmp	r3, #0
   1194c:	beq	118c0 <close@plt+0x998>
   11950:	ldr	r1, [pc, #24]	; 11970 <close@plt+0xa48>
   11954:	ldr	r2, [r7, #4]
   11958:	mov	r3, r4
   1195c:	ldr	r0, [r1]
   11960:	mov	r1, #1
   11964:	bl	10d54 <fwrite_unlocked@plt>
   11968:	b	118c0 <close@plt+0x998>
   1196c:	andeq	r7, r2, r0, ror #2
   11970:	andeq	r7, r2, r4, ror #1
   11974:	push	{r4, r5, r6, r7, r8, lr}
   11978:	ldr	r6, [sp, #24]
   1197c:	ldr	r4, [pc, #156]	; 11a20 <close@plt+0xaf8>
   11980:	sub	r5, r6, #1
   11984:	add	ip, r4, r5
   11988:	ldrb	ip, [ip, #12]
   1198c:	cmp	ip, #0
   11990:	popne	{r4, r5, r6, r7, r8, pc}
   11994:	mov	lr, r3
   11998:	ldrb	r3, [r4, #14]
   1199c:	mov	ip, r1
   119a0:	ldr	r2, [r2]
   119a4:	ldr	r1, [r0]
   119a8:	cmp	r3, #0
   119ac:	sub	r1, r1, #1
   119b0:	sub	r3, r2, #1
   119b4:	ldr	r0, [ip]
   119b8:	ldr	r2, [lr]
   119bc:	bne	11a10 <close@plt+0xae8>
   119c0:	bl	121a0 <close@plt+0x1278>
   119c4:	cmp	r0, #0
   119c8:	pople	{r4, r5, r6, r7, r8, pc}
   119cc:	mov	r2, #5
   119d0:	ldr	r1, [pc, #76]	; 11a24 <close@plt+0xafc>
   119d4:	mov	r0, #0
   119d8:	ldr	r7, [r4, #16]
   119dc:	bl	10d6c <dcgettext@plt>
   119e0:	sub	r7, r7, #1
   119e4:	clz	r7, r7
   119e8:	lsr	r7, r7, #5
   119ec:	mov	r3, r6
   119f0:	mov	r1, #0
   119f4:	add	r4, r4, r5
   119f8:	mov	r2, r0
   119fc:	mov	r0, r7
   11a00:	bl	10de4 <error@plt>
   11a04:	mov	r3, #1
   11a08:	strb	r3, [r4, #12]
   11a0c:	pop	{r4, r5, r6, r7, r8, pc}
   11a10:	bl	14d18 <close@plt+0x3df0>
   11a14:	cmp	r0, #0
   11a18:	pople	{r4, r5, r6, r7, r8, pc}
   11a1c:	b	119cc <close@plt+0xaa4>
   11a20:	andeq	r7, r2, r0, ror #2
   11a24:	andeq	r5, r1, r4, lsl r8
   11a28:	ldr	r3, [pc, #876]	; 11d9c <close@plt+0xe74>
   11a2c:	push	{r7, lr}
   11a30:	sub	sp, sp, #64	; 0x40
   11a34:	ldr	r3, [r3]
   11a38:	subs	r4, r0, #0
   11a3c:	str	r3, [sp, #60]	; 0x3c
   11a40:	beq	11a7c <close@plt+0xb54>
   11a44:	ldr	r3, [pc, #852]	; 11da0 <close@plt+0xe78>
   11a48:	mov	r2, #5
   11a4c:	ldr	r1, [pc, #848]	; 11da4 <close@plt+0xe7c>
   11a50:	mov	r0, #0
   11a54:	ldr	r5, [r3]
   11a58:	bl	10d6c <dcgettext@plt>
   11a5c:	ldr	r3, [pc, #836]	; 11da8 <close@plt+0xe80>
   11a60:	mov	r1, #1
   11a64:	ldr	r3, [r3]
   11a68:	mov	r2, r0
   11a6c:	mov	r0, r5
   11a70:	bl	10e98 <__fprintf_chk@plt>
   11a74:	mov	r0, r4
   11a78:	bl	10e44 <exit@plt>
   11a7c:	mov	r2, #5
   11a80:	ldr	r1, [pc, #804]	; 11dac <close@plt+0xe84>
   11a84:	bl	10d6c <dcgettext@plt>
   11a88:	ldr	r6, [pc, #792]	; 11da8 <close@plt+0xe80>
   11a8c:	ldr	r5, [pc, #796]	; 11db0 <close@plt+0xe88>
   11a90:	ldr	r2, [r6]
   11a94:	mov	r1, r0
   11a98:	mov	r0, #1
   11a9c:	bl	10e80 <__printf_chk@plt>
   11aa0:	mov	r2, #5
   11aa4:	ldr	r1, [pc, #776]	; 11db4 <close@plt+0xe8c>
   11aa8:	mov	r0, r4
   11aac:	bl	10d6c <dcgettext@plt>
   11ab0:	ldr	r1, [r5]
   11ab4:	bl	10ce8 <fputs_unlocked@plt>
   11ab8:	mov	r2, #5
   11abc:	ldr	r1, [pc, #756]	; 11db8 <close@plt+0xe90>
   11ac0:	mov	r0, r4
   11ac4:	bl	10d6c <dcgettext@plt>
   11ac8:	ldr	r1, [r5]
   11acc:	bl	10ce8 <fputs_unlocked@plt>
   11ad0:	mov	r2, #5
   11ad4:	ldr	r1, [pc, #736]	; 11dbc <close@plt+0xe94>
   11ad8:	mov	r0, r4
   11adc:	bl	10d6c <dcgettext@plt>
   11ae0:	ldr	r1, [r5]
   11ae4:	bl	10ce8 <fputs_unlocked@plt>
   11ae8:	mov	r2, #5
   11aec:	ldr	r1, [pc, #716]	; 11dc0 <close@plt+0xe98>
   11af0:	mov	r0, r4
   11af4:	bl	10d6c <dcgettext@plt>
   11af8:	ldr	r1, [r5]
   11afc:	bl	10ce8 <fputs_unlocked@plt>
   11b00:	mov	r2, #5
   11b04:	ldr	r1, [pc, #696]	; 11dc4 <close@plt+0xe9c>
   11b08:	mov	r0, r4
   11b0c:	bl	10d6c <dcgettext@plt>
   11b10:	ldr	r1, [r5]
   11b14:	bl	10ce8 <fputs_unlocked@plt>
   11b18:	mov	r2, #5
   11b1c:	ldr	r1, [pc, #676]	; 11dc8 <close@plt+0xea0>
   11b20:	mov	r0, r4
   11b24:	bl	10d6c <dcgettext@plt>
   11b28:	ldr	r1, [r5]
   11b2c:	bl	10ce8 <fputs_unlocked@plt>
   11b30:	mov	r2, #5
   11b34:	ldr	r1, [pc, #656]	; 11dcc <close@plt+0xea4>
   11b38:	mov	r0, r4
   11b3c:	bl	10d6c <dcgettext@plt>
   11b40:	ldr	r1, [r5]
   11b44:	bl	10ce8 <fputs_unlocked@plt>
   11b48:	mov	r2, #5
   11b4c:	ldr	r1, [pc, #636]	; 11dd0 <close@plt+0xea8>
   11b50:	mov	r0, r4
   11b54:	bl	10d6c <dcgettext@plt>
   11b58:	ldr	r1, [r5]
   11b5c:	bl	10ce8 <fputs_unlocked@plt>
   11b60:	mov	r2, #5
   11b64:	ldr	r1, [pc, #616]	; 11dd4 <close@plt+0xeac>
   11b68:	mov	r0, r4
   11b6c:	bl	10d6c <dcgettext@plt>
   11b70:	ldr	r1, [r5]
   11b74:	bl	10ce8 <fputs_unlocked@plt>
   11b78:	mov	r2, #5
   11b7c:	ldr	r1, [pc, #596]	; 11dd8 <close@plt+0xeb0>
   11b80:	mov	r0, r4
   11b84:	bl	10d6c <dcgettext@plt>
   11b88:	ldr	r1, [r5]
   11b8c:	bl	10ce8 <fputs_unlocked@plt>
   11b90:	mov	r2, #5
   11b94:	ldr	r1, [pc, #576]	; 11ddc <close@plt+0xeb4>
   11b98:	mov	r0, r4
   11b9c:	bl	10d6c <dcgettext@plt>
   11ba0:	ldr	r1, [r5]
   11ba4:	bl	10ce8 <fputs_unlocked@plt>
   11ba8:	mov	r2, #5
   11bac:	ldr	r1, [pc, #556]	; 11de0 <close@plt+0xeb8>
   11bb0:	mov	r0, r4
   11bb4:	bl	10d6c <dcgettext@plt>
   11bb8:	ldr	r3, [r6]
   11bbc:	mov	r2, r3
   11bc0:	mov	r1, r0
   11bc4:	mov	r0, #1
   11bc8:	bl	10e80 <__printf_chk@plt>
   11bcc:	ldr	lr, [pc, #528]	; 11de4 <close@plt+0xebc>
   11bd0:	add	ip, sp, #4
   11bd4:	ldm	lr!, {r0, r1, r2, r3}
   11bd8:	stmia	ip!, {r0, r1, r2, r3}
   11bdc:	ldm	lr!, {r0, r1, r2, r3}
   11be0:	ldr	r6, [sp, #4]
   11be4:	stmia	ip!, {r0, r1, r2, r3}
   11be8:	cmp	r6, #0
   11bec:	ldm	lr!, {r0, r1, r2, r3}
   11bf0:	addeq	r5, sp, #4
   11bf4:	stmia	ip!, {r0, r1, r2, r3}
   11bf8:	ldm	lr, {r0, r1}
   11bfc:	stm	ip, {r0, r1}
   11c00:	beq	11c30 <close@plt+0xd08>
   11c04:	ldr	r7, [pc, #476]	; 11de8 <close@plt+0xec0>
   11c08:	add	r5, sp, #4
   11c0c:	b	11c1c <close@plt+0xcf4>
   11c10:	ldr	r6, [r5, #8]!
   11c14:	cmp	r6, #0
   11c18:	beq	11c30 <close@plt+0xd08>
   11c1c:	mov	r1, r6
   11c20:	mov	r0, r7
   11c24:	bl	10d00 <strcmp@plt>
   11c28:	cmp	r0, #0
   11c2c:	bne	11c10 <close@plt+0xce8>
   11c30:	ldr	r5, [r5, #4]
   11c34:	mov	r2, #5
   11c38:	cmp	r5, #0
   11c3c:	ldr	r1, [pc, #424]	; 11dec <close@plt+0xec4>
   11c40:	beq	11ce8 <close@plt+0xdc0>
   11c44:	mov	r0, #0
   11c48:	bl	10d6c <dcgettext@plt>
   11c4c:	ldr	r3, [pc, #412]	; 11df0 <close@plt+0xec8>
   11c50:	ldr	r2, [pc, #412]	; 11df4 <close@plt+0xecc>
   11c54:	mov	r1, r0
   11c58:	mov	r0, #1
   11c5c:	bl	10e80 <__printf_chk@plt>
   11c60:	mov	r1, #0
   11c64:	mov	r0, #5
   11c68:	bl	10ed4 <setlocale@plt>
   11c6c:	cmp	r0, #0
   11c70:	ldreq	r6, [pc, #368]	; 11de8 <close@plt+0xec0>
   11c74:	beq	11c90 <close@plt+0xd68>
   11c78:	mov	r2, #3
   11c7c:	ldr	r1, [pc, #372]	; 11df8 <close@plt+0xed0>
   11c80:	bl	10f10 <strncmp@plt>
   11c84:	ldr	r6, [pc, #348]	; 11de8 <close@plt+0xec0>
   11c88:	cmp	r0, #0
   11c8c:	bne	11d78 <close@plt+0xe50>
   11c90:	mov	r2, #5
   11c94:	ldr	r1, [pc, #352]	; 11dfc <close@plt+0xed4>
   11c98:	mov	r0, #0
   11c9c:	bl	10d6c <dcgettext@plt>
   11ca0:	ldr	r3, [pc, #320]	; 11de8 <close@plt+0xec0>
   11ca4:	ldr	r2, [pc, #324]	; 11df0 <close@plt+0xec8>
   11ca8:	mov	r1, r0
   11cac:	mov	r0, #1
   11cb0:	bl	10e80 <__printf_chk@plt>
   11cb4:	mov	r2, #5
   11cb8:	ldr	r1, [pc, #320]	; 11e00 <close@plt+0xed8>
   11cbc:	mov	r0, #0
   11cc0:	bl	10d6c <dcgettext@plt>
   11cc4:	ldr	r2, [pc, #312]	; 11e04 <close@plt+0xedc>
   11cc8:	cmp	r5, r6
   11ccc:	ldr	r3, [pc, #308]	; 11e08 <close@plt+0xee0>
   11cd0:	movne	r3, r2
   11cd4:	mov	r1, r0
   11cd8:	mov	r2, r5
   11cdc:	mov	r0, #1
   11ce0:	bl	10e80 <__printf_chk@plt>
   11ce4:	b	11a74 <close@plt+0xb4c>
   11ce8:	mov	r0, r5
   11cec:	bl	10d6c <dcgettext@plt>
   11cf0:	ldr	r3, [pc, #248]	; 11df0 <close@plt+0xec8>
   11cf4:	ldr	r2, [pc, #248]	; 11df4 <close@plt+0xecc>
   11cf8:	mov	r1, r0
   11cfc:	mov	r0, #1
   11d00:	bl	10e80 <__printf_chk@plt>
   11d04:	mov	r1, r5
   11d08:	mov	r0, #5
   11d0c:	bl	10ed4 <setlocale@plt>
   11d10:	cmp	r0, #0
   11d14:	beq	11d2c <close@plt+0xe04>
   11d18:	mov	r2, #3
   11d1c:	ldr	r1, [pc, #212]	; 11df8 <close@plt+0xed0>
   11d20:	bl	10f10 <strncmp@plt>
   11d24:	cmp	r0, #0
   11d28:	bne	11d70 <close@plt+0xe48>
   11d2c:	mov	r2, #5
   11d30:	ldr	r1, [pc, #196]	; 11dfc <close@plt+0xed4>
   11d34:	mov	r0, #0
   11d38:	bl	10d6c <dcgettext@plt>
   11d3c:	ldr	r3, [pc, #164]	; 11de8 <close@plt+0xec0>
   11d40:	ldr	r2, [pc, #168]	; 11df0 <close@plt+0xec8>
   11d44:	mov	r5, r3
   11d48:	mov	r1, r0
   11d4c:	mov	r0, #1
   11d50:	bl	10e80 <__printf_chk@plt>
   11d54:	ldr	r1, [pc, #164]	; 11e00 <close@plt+0xed8>
   11d58:	mov	r2, #5
   11d5c:	mov	r0, #0
   11d60:	bl	10d6c <dcgettext@plt>
   11d64:	ldr	r3, [pc, #156]	; 11e08 <close@plt+0xee0>
   11d68:	mov	r1, r0
   11d6c:	b	11cd8 <close@plt+0xdb0>
   11d70:	ldr	r6, [pc, #112]	; 11de8 <close@plt+0xec0>
   11d74:	mov	r5, r6
   11d78:	mov	r2, #5
   11d7c:	ldr	r1, [pc, #136]	; 11e0c <close@plt+0xee4>
   11d80:	mov	r0, #0
   11d84:	bl	10d6c <dcgettext@plt>
   11d88:	ldr	r2, [pc, #88]	; 11de8 <close@plt+0xec0>
   11d8c:	mov	r1, r0
   11d90:	mov	r0, #1
   11d94:	bl	10e80 <__printf_chk@plt>
   11d98:	b	11c90 <close@plt+0xd68>
   11d9c:	andeq	r6, r2, r8, lsl #30
   11da0:	andeq	r7, r2, r8, asr #2
   11da4:	andeq	r5, r1, ip, lsr r8
   11da8:	andeq	r7, r2, r0, lsl #3
   11dac:	andeq	r5, r1, r4, ror #16
   11db0:	andeq	r7, r2, r4, asr r1
   11db4:	andeq	r5, r1, r8, lsl #17
   11db8:			; <UNDEFINED> instruction: 0x000158bc
   11dbc:	strdeq	r5, [r1], -r8
   11dc0:			; <UNDEFINED> instruction: 0x000159b8
   11dc4:	andeq	r5, r1, r8, ror sl
   11dc8:	andeq	r5, r1, r8, lsr fp
   11dcc:	andeq	r5, r1, r0, ror fp
   11dd0:	muleq	r1, r8, fp
   11dd4:	ldrdeq	r5, [r1], -r8
   11dd8:	andeq	r5, r1, r8, lsl #24
   11ddc:	andeq	r5, r1, r0, asr #24
   11de0:	andeq	r5, r1, r0, lsl #25
   11de4:	andeq	r5, r1, ip, asr r7
   11de8:	andeq	r5, r1, r4, lsr r8
   11dec:	andeq	r5, r1, ip, lsl sp
   11df0:	andeq	r5, r1, r4, lsr sp
   11df4:	andeq	r5, r1, ip, asr sp
   11df8:	andeq	r5, r1, ip, ror #26
   11dfc:			; <UNDEFINED> instruction: 0x00015db8
   11e00:	ldrdeq	r5, [r1], -r8
   11e04:			; <UNDEFINED> instruction: 0x000159b4
   11e08:	ldrdeq	r5, [r1], -ip
   11e0c:	andeq	r5, r1, r0, ror sp
   11e10:	ldr	r3, [pc, #4]	; 11e1c <close@plt+0xef4>
   11e14:	str	r0, [r3]
   11e18:	bx	lr
   11e1c:	andeq	r7, r2, r8, ror r1
   11e20:	ldr	r3, [pc, #4]	; 11e2c <close@plt+0xf04>
   11e24:	strb	r0, [r3, #4]
   11e28:	bx	lr
   11e2c:	andeq	r7, r2, r8, ror r1
   11e30:	ldr	r3, [pc, #180]	; 11eec <close@plt+0xfc4>
   11e34:	push	{r4, r5, r6, lr}
   11e38:	sub	sp, sp, #8
   11e3c:	ldr	r0, [r3]
   11e40:	bl	15140 <close@plt+0x4218>
   11e44:	cmp	r0, #0
   11e48:	beq	11e70 <close@plt+0xf48>
   11e4c:	bl	10e5c <__errno_location@plt>
   11e50:	ldr	r5, [pc, #152]	; 11ef0 <close@plt+0xfc8>
   11e54:	ldrb	r3, [r5, #4]
   11e58:	cmp	r3, #0
   11e5c:	mov	r4, r0
   11e60:	beq	11e8c <close@plt+0xf64>
   11e64:	ldr	r3, [r0]
   11e68:	cmp	r3, #32
   11e6c:	bne	11e8c <close@plt+0xf64>
   11e70:	ldr	r3, [pc, #124]	; 11ef4 <close@plt+0xfcc>
   11e74:	ldr	r0, [r3]
   11e78:	bl	15140 <close@plt+0x4218>
   11e7c:	cmp	r0, #0
   11e80:	bne	11ecc <close@plt+0xfa4>
   11e84:	add	sp, sp, #8
   11e88:	pop	{r4, r5, r6, pc}
   11e8c:	mov	r2, #5
   11e90:	ldr	r1, [pc, #96]	; 11ef8 <close@plt+0xfd0>
   11e94:	mov	r0, #0
   11e98:	bl	10d6c <dcgettext@plt>
   11e9c:	mov	r6, r0
   11ea0:	ldr	r0, [r5]
   11ea4:	cmp	r0, #0
   11ea8:	beq	11ed8 <close@plt+0xfb0>
   11eac:	ldr	r4, [r4]
   11eb0:	bl	14268 <close@plt+0x3340>
   11eb4:	mov	r1, r4
   11eb8:	str	r6, [sp]
   11ebc:	ldr	r2, [pc, #56]	; 11efc <close@plt+0xfd4>
   11ec0:	mov	r3, r0
   11ec4:	mov	r0, #0
   11ec8:	bl	10de4 <error@plt>
   11ecc:	ldr	r3, [pc, #44]	; 11f00 <close@plt+0xfd8>
   11ed0:	ldr	r0, [r3]
   11ed4:	bl	10d30 <_exit@plt>
   11ed8:	mov	r3, r6
   11edc:	ldr	r1, [r4]
   11ee0:	ldr	r2, [pc, #28]	; 11f04 <close@plt+0xfdc>
   11ee4:	bl	10de4 <error@plt>
   11ee8:	b	11ecc <close@plt+0xfa4>
   11eec:	andeq	r7, r2, r4, asr r1
   11ef0:	andeq	r7, r2, r8, ror r1
   11ef4:	andeq	r7, r2, r8, asr #2
   11ef8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11efc:	andeq	r5, r1, r8, lsr #31
   11f00:	strdeq	r7, [r2], -r0
   11f04:	andeq	r5, r1, ip, lsr #31
   11f08:	b	10d0c <posix_fadvise64@plt>
   11f0c:	cmp	r0, #0
   11f10:	bxeq	lr
   11f14:	push	{r4, lr}
   11f18:	sub	sp, sp, #16
   11f1c:	mov	r4, r1
   11f20:	bl	10e8c <fileno@plt>
   11f24:	mov	r2, #0
   11f28:	mov	r3, #0
   11f2c:	str	r4, [sp, #8]
   11f30:	strd	r2, [sp]
   11f34:	bl	10d0c <posix_fadvise64@plt>
   11f38:	add	sp, sp, #16
   11f3c:	pop	{r4, pc}
   11f40:	push	{r4, r5, r6, lr}
   11f44:	mov	r5, r1
   11f48:	bl	10ef8 <fopen64@plt>
   11f4c:	subs	r4, r0, #0
   11f50:	beq	11f60 <close@plt+0x1038>
   11f54:	bl	10e8c <fileno@plt>
   11f58:	cmp	r0, #2
   11f5c:	bls	11f68 <close@plt+0x1040>
   11f60:	mov	r0, r4
   11f64:	pop	{r4, r5, r6, pc}
   11f68:	bl	14460 <close@plt+0x3538>
   11f6c:	subs	r6, r0, #0
   11f70:	blt	11fb8 <close@plt+0x1090>
   11f74:	mov	r0, r4
   11f78:	bl	14dd4 <close@plt+0x3eac>
   11f7c:	cmp	r0, #0
   11f80:	bne	11f98 <close@plt+0x1070>
   11f84:	mov	r1, r5
   11f88:	mov	r0, r6
   11f8c:	bl	10cd0 <fdopen@plt>
   11f90:	subs	r4, r0, #0
   11f94:	bne	11f60 <close@plt+0x1038>
   11f98:	bl	10e5c <__errno_location@plt>
   11f9c:	mov	r4, #0
   11fa0:	mov	r5, r0
   11fa4:	mov	r0, r6
   11fa8:	ldr	r6, [r5]
   11fac:	bl	10f28 <close@plt>
   11fb0:	str	r6, [r5]
   11fb4:	b	11f60 <close@plt+0x1038>
   11fb8:	bl	10e5c <__errno_location@plt>
   11fbc:	mov	r5, r0
   11fc0:	mov	r0, r4
   11fc4:	ldr	r6, [r5]
   11fc8:	mov	r4, #0
   11fcc:	bl	14dd4 <close@plt+0x3eac>
   11fd0:	str	r6, [r5]
   11fd4:	b	11f60 <close@plt+0x1038>
   11fd8:	push	{r4, lr}
   11fdc:	mov	r1, #0
   11fe0:	bl	10ed4 <setlocale@plt>
   11fe4:	subs	r4, r0, #0
   11fe8:	beq	12014 <close@plt+0x10ec>
   11fec:	ldr	r1, [pc, #40]	; 1201c <close@plt+0x10f4>
   11ff0:	bl	10d00 <strcmp@plt>
   11ff4:	cmp	r0, #0
   11ff8:	popeq	{r4, pc}
   11ffc:	mov	r0, r4
   12000:	ldr	r1, [pc, #24]	; 12020 <close@plt+0x10f8>
   12004:	bl	10d00 <strcmp@plt>
   12008:	adds	r0, r0, #0
   1200c:	movne	r0, #1
   12010:	pop	{r4, pc}
   12014:	mov	r0, #1
   12018:	pop	{r4, pc}
   1201c:			; <UNDEFINED> instruction: 0x00015fb0
   12020:			; <UNDEFINED> instruction: 0x00015fb4
   12024:	push	{r4, r5, r6, lr}
   12028:	mov	r4, r0
   1202c:	mov	r5, r1
   12030:	add	r6, r2, #20
   12034:	mov	r3, #0
   12038:	strb	r3, [r2, #20]
   1203c:	mov	r0, r4
   12040:	mov	r1, r5
   12044:	mov	r2, #10
   12048:	mov	r3, #0
   1204c:	bl	15560 <close@plt+0x4638>
   12050:	mov	r0, r4
   12054:	mov	r1, r5
   12058:	mov	r3, #0
   1205c:	add	r2, r2, #48	; 0x30
   12060:	strb	r2, [r6, #-1]!
   12064:	mov	r2, #10
   12068:	bl	15560 <close@plt+0x4638>
   1206c:	cmp	r5, #0
   12070:	cmpeq	r4, #9
   12074:	mov	r5, r1
   12078:	mov	r4, r0
   1207c:	bhi	1203c <close@plt+0x1114>
   12080:	mov	r0, r6
   12084:	pop	{r4, r5, r6, pc}
   12088:	mov	r3, #0
   1208c:	str	r3, [r0]
   12090:	str	r3, [r0, #4]
   12094:	str	r3, [r0, #8]
   12098:	bx	lr
   1209c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120a0:	ldr	r3, [r1]
   120a4:	ldr	r9, [r0, #8]
   120a8:	ldr	fp, [r0]
   120ac:	tst	r3, #16
   120b0:	add	fp, r9, fp
   120b4:	bne	12180 <close@plt+0x1258>
   120b8:	mov	r8, r2
   120bc:	mov	r7, r0
   120c0:	mov	sl, r1
   120c4:	mov	r4, r9
   120c8:	b	120f0 <close@plt+0x11c8>
   120cc:	add	r2, r3, #1
   120d0:	str	r2, [sl, #4]
   120d4:	ldrb	r5, [r3]
   120d8:	mov	r6, r5
   120dc:	cmp	r4, fp
   120e0:	beq	12144 <close@plt+0x121c>
   120e4:	cmp	r6, r8
   120e8:	strb	r5, [r4], #1
   120ec:	beq	12170 <close@plt+0x1248>
   120f0:	ldr	r3, [sl, #4]
   120f4:	ldr	r2, [sl, #8]
   120f8:	cmp	r3, r2
   120fc:	bcc	120cc <close@plt+0x11a4>
   12100:	mov	r0, sl
   12104:	bl	10ec8 <__uflow@plt>
   12108:	cmn	r0, #1
   1210c:	mov	r6, r0
   12110:	bne	12188 <close@plt+0x1260>
   12114:	cmp	r9, r4
   12118:	beq	12180 <close@plt+0x1258>
   1211c:	ldr	r3, [sl]
   12120:	tst	r3, #32
   12124:	bne	12180 <close@plt+0x1258>
   12128:	ldrb	r3, [r4, #-1]
   1212c:	cmp	r3, r8
   12130:	beq	12170 <close@plt+0x1248>
   12134:	cmp	r4, fp
   12138:	mov	r6, r8
   1213c:	bne	1216c <close@plt+0x1244>
   12140:	mov	r5, r8
   12144:	mov	r0, r9
   12148:	mov	r1, r7
   1214c:	ldr	r4, [r7]
   12150:	bl	14b2c <close@plt+0x3c04>
   12154:	ldr	fp, [r7]
   12158:	mov	r9, r0
   1215c:	add	r4, r0, r4
   12160:	str	r0, [r7, #8]
   12164:	add	fp, r0, fp
   12168:	b	120e4 <close@plt+0x11bc>
   1216c:	strb	r8, [r4], #1
   12170:	sub	r4, r4, r9
   12174:	str	r4, [r7, #4]
   12178:	mov	r0, r7
   1217c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12180:	mov	r0, #0
   12184:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12188:	uxtb	r5, r0
   1218c:	b	120dc <close@plt+0x11b4>
   12190:	mov	r2, #10
   12194:	b	1209c <close@plt+0x1174>
   12198:	ldr	r0, [r0, #8]
   1219c:	b	10d24 <free@plt>
   121a0:	cmp	r1, r3
   121a4:	push	{r4, r5, r6, lr}
   121a8:	mov	r5, r1
   121ac:	mov	r1, r2
   121b0:	movcc	r2, r5
   121b4:	movcs	r2, r3
   121b8:	mov	r4, r3
   121bc:	bl	10d60 <memcmp@plt>
   121c0:	cmp	r0, #0
   121c4:	popne	{r4, r5, r6, pc}
   121c8:	cmp	r5, r4
   121cc:	bcc	121dc <close@plt+0x12b4>
   121d0:	movhi	r0, #1
   121d4:	movls	r0, #0
   121d8:	pop	{r4, r5, r6, pc}
   121dc:	mvn	r0, #0
   121e0:	pop	{r4, r5, r6, pc}
   121e4:	push	{r4, r5, r6, lr}
   121e8:	subs	r4, r0, #0
   121ec:	beq	12260 <close@plt+0x1338>
   121f0:	mov	r1, #47	; 0x2f
   121f4:	bl	10ee0 <strrchr@plt>
   121f8:	subs	r5, r0, #0
   121fc:	beq	1224c <close@plt+0x1324>
   12200:	add	r6, r5, #1
   12204:	sub	r3, r6, r4
   12208:	cmp	r3, #6
   1220c:	ble	1224c <close@plt+0x1324>
   12210:	mov	r2, #7
   12214:	ldr	r1, [pc, #96]	; 1227c <close@plt+0x1354>
   12218:	sub	r0, r5, #6
   1221c:	bl	10f10 <strncmp@plt>
   12220:	cmp	r0, #0
   12224:	bne	1224c <close@plt+0x1324>
   12228:	mov	r2, #3
   1222c:	ldr	r1, [pc, #76]	; 12280 <close@plt+0x1358>
   12230:	mov	r0, r6
   12234:	bl	10f10 <strncmp@plt>
   12238:	cmp	r0, #0
   1223c:	movne	r4, r6
   12240:	ldreq	r3, [pc, #60]	; 12284 <close@plt+0x135c>
   12244:	addeq	r4, r5, #4
   12248:	streq	r4, [r3]
   1224c:	ldr	r2, [pc, #52]	; 12288 <close@plt+0x1360>
   12250:	ldr	r3, [pc, #52]	; 1228c <close@plt+0x1364>
   12254:	str	r4, [r2]
   12258:	str	r4, [r3]
   1225c:	pop	{r4, r5, r6, pc}
   12260:	ldr	r3, [pc, #40]	; 12290 <close@plt+0x1368>
   12264:	mov	r2, #55	; 0x37
   12268:	mov	r1, #1
   1226c:	ldr	r3, [r3]
   12270:	ldr	r0, [pc, #28]	; 12294 <close@plt+0x136c>
   12274:	bl	10da8 <fwrite@plt>
   12278:	bl	10f1c <abort@plt>
   1227c:	strdeq	r5, [r1], -r4
   12280:	strdeq	r5, [r1], -ip
   12284:	andeq	r7, r2, r8, lsr r1
   12288:	andeq	r7, r2, r0, lsl #3
   1228c:	andeq	r7, r2, ip, lsr r1
   12290:	andeq	r7, r2, r8, asr #2
   12294:			; <UNDEFINED> instruction: 0x00015fbc
   12298:	push	{r4, lr}
   1229c:	mov	r2, #48	; 0x30
   122a0:	mov	r4, r1
   122a4:	mov	r1, #0
   122a8:	bl	10e74 <memset@plt>
   122ac:	cmp	r4, #10
   122b0:	beq	122bc <close@plt+0x1394>
   122b4:	str	r4, [r0]
   122b8:	pop	{r4, pc}
   122bc:	bl	10f1c <abort@plt>
   122c0:	push	{r4, r5, r6, lr}
   122c4:	mov	r2, #5
   122c8:	mov	r5, r0
   122cc:	mov	r6, r1
   122d0:	mov	r1, r0
   122d4:	mov	r0, #0
   122d8:	bl	10d6c <dcgettext@plt>
   122dc:	cmp	r5, r0
   122e0:	mov	r4, r0
   122e4:	beq	122f0 <close@plt+0x13c8>
   122e8:	mov	r0, r4
   122ec:	pop	{r4, r5, r6, pc}
   122f0:	bl	151b4 <close@plt+0x428c>
   122f4:	ldrb	r3, [r0]
   122f8:	bic	r3, r3, #32
   122fc:	cmp	r3, #85	; 0x55
   12300:	bne	12360 <close@plt+0x1438>
   12304:	ldrb	r3, [r0, #1]
   12308:	bic	r3, r3, #32
   1230c:	cmp	r3, #84	; 0x54
   12310:	bne	123d8 <close@plt+0x14b0>
   12314:	ldrb	r3, [r0, #2]
   12318:	bic	r3, r3, #32
   1231c:	cmp	r3, #70	; 0x46
   12320:	bne	123d8 <close@plt+0x14b0>
   12324:	ldrb	r3, [r0, #3]
   12328:	cmp	r3, #45	; 0x2d
   1232c:	bne	123d8 <close@plt+0x14b0>
   12330:	ldrb	r3, [r0, #4]
   12334:	cmp	r3, #56	; 0x38
   12338:	bne	123d8 <close@plt+0x14b0>
   1233c:	ldrb	r3, [r0, #5]
   12340:	cmp	r3, #0
   12344:	bne	123d8 <close@plt+0x14b0>
   12348:	ldrb	r2, [r4]
   1234c:	ldr	r3, [pc, #156]	; 123f0 <close@plt+0x14c8>
   12350:	ldr	r4, [pc, #156]	; 123f4 <close@plt+0x14cc>
   12354:	cmp	r2, #96	; 0x60
   12358:	movne	r4, r3
   1235c:	b	122e8 <close@plt+0x13c0>
   12360:	cmp	r3, #71	; 0x47
   12364:	bne	123d8 <close@plt+0x14b0>
   12368:	ldrb	r3, [r0, #1]
   1236c:	bic	r3, r3, #32
   12370:	cmp	r3, #66	; 0x42
   12374:	bne	123d8 <close@plt+0x14b0>
   12378:	ldrb	r3, [r0, #2]
   1237c:	cmp	r3, #49	; 0x31
   12380:	bne	123d8 <close@plt+0x14b0>
   12384:	ldrb	r3, [r0, #3]
   12388:	cmp	r3, #56	; 0x38
   1238c:	bne	123d8 <close@plt+0x14b0>
   12390:	ldrb	r3, [r0, #4]
   12394:	cmp	r3, #48	; 0x30
   12398:	bne	123d8 <close@plt+0x14b0>
   1239c:	ldrb	r3, [r0, #5]
   123a0:	cmp	r3, #51	; 0x33
   123a4:	bne	123d8 <close@plt+0x14b0>
   123a8:	ldrb	r3, [r0, #6]
   123ac:	cmp	r3, #48	; 0x30
   123b0:	bne	123d8 <close@plt+0x14b0>
   123b4:	ldrb	r3, [r0, #7]
   123b8:	cmp	r3, #0
   123bc:	bne	123d8 <close@plt+0x14b0>
   123c0:	ldrb	r2, [r4]
   123c4:	ldr	r3, [pc, #44]	; 123f8 <close@plt+0x14d0>
   123c8:	ldr	r4, [pc, #44]	; 123fc <close@plt+0x14d4>
   123cc:	cmp	r2, #96	; 0x60
   123d0:	movne	r4, r3
   123d4:	b	122e8 <close@plt+0x13c0>
   123d8:	ldr	r3, [pc, #32]	; 12400 <close@plt+0x14d8>
   123dc:	ldr	r4, [pc, #32]	; 12404 <close@plt+0x14dc>
   123e0:	cmp	r6, #9
   123e4:	movne	r4, r3
   123e8:	mov	r0, r4
   123ec:	pop	{r4, r5, r6, pc}
   123f0:	andeq	r6, r1, r8, asr r0
   123f4:	andeq	r6, r1, r4, rrx
   123f8:	andeq	r6, r1, ip, asr r0
   123fc:	andeq	r6, r1, r0, rrx
   12400:	andeq	r6, r1, r8, rrx
   12404:	andeq	r6, r1, r4, asr r0
   12408:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1240c:	sub	sp, sp, #124	; 0x7c
   12410:	ldr	ip, [pc, #3576]	; 13210 <close@plt+0x22e8>
   12414:	str	r3, [sp, #24]
   12418:	ldr	r3, [sp, #168]	; 0xa8
   1241c:	ldr	ip, [ip]
   12420:	str	r3, [sp, #56]	; 0x38
   12424:	ldr	r3, [sp, #172]	; 0xac
   12428:	ldr	r8, [sp, #160]	; 0xa0
   1242c:	str	r3, [sp, #80]	; 0x50
   12430:	ldr	r3, [sp, #176]	; 0xb0
   12434:	mov	fp, r0
   12438:	str	r3, [sp, #76]	; 0x4c
   1243c:	mov	sl, r1
   12440:	str	r2, [sp, #36]	; 0x24
   12444:	str	ip, [sp, #116]	; 0x74
   12448:	bl	10dc0 <__ctype_get_mb_cur_max@plt>
   1244c:	ldr	r3, [sp, #164]	; 0xa4
   12450:	ands	r4, r3, #2
   12454:	movne	r3, #1
   12458:	moveq	r3, #0
   1245c:	str	r3, [sp, #32]
   12460:	str	r0, [sp, #64]	; 0x40
   12464:	cmp	r8, #10
   12468:	ldrls	pc, [pc, r8, lsl #2]
   1246c:	b	13c1c <close@plt+0x2cf4>
   12470:	andeq	r2, r1, r4, ror #16
   12474:	strdeq	r2, [r1], -ip
   12478:	strdeq	r2, [r1], -ip
   1247c:	andeq	r2, r1, ip, lsl r9
   12480:	ldrdeq	r2, [r1], -r0
   12484:	andeq	r2, r1, r8, lsl r8
   12488:	muleq	r1, r4, r8
   1248c:	andeq	r2, r1, ip, asr #17
   12490:	muleq	r1, ip, r4
   12494:	muleq	r1, ip, r4
   12498:	muleq	r1, ip, r4
   1249c:	cmp	r8, #10
   124a0:	beq	124c4 <close@plt+0x159c>
   124a4:	mov	r1, r8
   124a8:	ldr	r0, [pc, #3428]	; 13214 <close@plt+0x22ec>
   124ac:	bl	122c0 <close@plt+0x1398>
   124b0:	mov	r1, r8
   124b4:	str	r0, [sp, #80]	; 0x50
   124b8:	ldr	r0, [pc, #3420]	; 1321c <close@plt+0x22f4>
   124bc:	bl	122c0 <close@plt+0x1398>
   124c0:	str	r0, [sp, #76]	; 0x4c
   124c4:	cmp	r4, #0
   124c8:	movne	r4, #0
   124cc:	beq	138dc <close@plt+0x29b4>
   124d0:	ldr	r7, [sp, #76]	; 0x4c
   124d4:	mov	r5, #0
   124d8:	mov	r6, #1
   124dc:	mov	r0, r7
   124e0:	str	r6, [sp, #40]	; 0x28
   124e4:	str	r5, [sp, #68]	; 0x44
   124e8:	bl	10e50 <strlen@plt>
   124ec:	str	r6, [sp, #28]
   124f0:	str	r5, [sp, #44]	; 0x2c
   124f4:	str	r5, [sp, #72]	; 0x48
   124f8:	str	r7, [sp, #60]	; 0x3c
   124fc:	str	r0, [sp, #52]	; 0x34
   12500:	str	r8, [sp, #160]	; 0xa0
   12504:	mov	r8, fp
   12508:	ldr	fp, [sp, #160]	; 0xa0
   1250c:	mov	r9, #0
   12510:	ldr	r3, [sp, #24]
   12514:	cmn	r3, #1
   12518:	beq	12a80 <close@plt+0x1b58>
   1251c:	ldr	r3, [sp, #24]
   12520:	subs	r6, r3, r9
   12524:	movne	r6, #1
   12528:	cmp	r6, #0
   1252c:	beq	12a98 <close@plt+0x1b70>
   12530:	ldr	r7, [sp, #28]
   12534:	ldr	r0, [sp, #36]	; 0x24
   12538:	cmp	fp, #2
   1253c:	moveq	r7, #0
   12540:	andne	r7, r7, #1
   12544:	add	r3, r0, r9
   12548:	cmp	r7, #0
   1254c:	str	r3, [sp, #48]	; 0x30
   12550:	beq	12f3c <close@plt+0x2014>
   12554:	ldr	r2, [sp, #52]	; 0x34
   12558:	cmp	r2, #0
   1255c:	beq	13220 <close@plt+0x22f8>
   12560:	ldr	r1, [sp, #24]
   12564:	cmp	r2, #1
   12568:	mov	r3, r2
   1256c:	movls	r3, #0
   12570:	movhi	r3, #1
   12574:	cmn	r1, #1
   12578:	movne	r3, #0
   1257c:	cmp	r3, #0
   12580:	add	r5, r9, r2
   12584:	beq	12590 <close@plt+0x1668>
   12588:	bl	10e50 <strlen@plt>
   1258c:	str	r0, [sp, #24]
   12590:	ldr	r3, [sp, #24]
   12594:	cmp	r5, r3
   12598:	bhi	13220 <close@plt+0x22f8>
   1259c:	ldr	r2, [sp, #52]	; 0x34
   125a0:	ldr	r1, [sp, #60]	; 0x3c
   125a4:	ldr	r0, [sp, #48]	; 0x30
   125a8:	bl	10d60 <memcmp@plt>
   125ac:	cmp	r0, #0
   125b0:	bne	13220 <close@plt+0x22f8>
   125b4:	ldr	r3, [sp, #32]
   125b8:	cmp	r3, #0
   125bc:	bne	13adc <close@plt+0x2bb4>
   125c0:	ldr	r3, [sp, #48]	; 0x30
   125c4:	ldrb	r5, [r3]
   125c8:	cmp	r5, #126	; 0x7e
   125cc:	ldrls	pc, [pc, r5, lsl #2]
   125d0:	b	12ea0 <close@plt+0x1f78>
   125d4:	andeq	r2, r1, ip, lsl #27
   125d8:	andeq	r2, r1, r0, lsr #29
   125dc:	andeq	r2, r1, r0, lsr #29
   125e0:	andeq	r2, r1, r0, lsr #29
   125e4:	andeq	r2, r1, r0, lsr #29
   125e8:	andeq	r2, r1, r0, lsr #29
   125ec:	andeq	r2, r1, r0, lsr #29
   125f0:	andeq	r2, r1, r8, asr lr
   125f4:	andeq	r2, r1, r8, asr #28
   125f8:	andeq	r2, r1, r8, asr #26
   125fc:	andeq	r2, r1, r0, lsl sp
   12600:	andeq	r2, r1, r8, ror #26
   12604:	andeq	r2, r1, r0, asr sp
   12608:	andeq	r2, r1, r0, lsl #25
   1260c:	andeq	r2, r1, r0, lsr #29
   12610:	andeq	r2, r1, r0, lsr #29
   12614:	andeq	r2, r1, r0, lsr #29
   12618:	andeq	r2, r1, r0, lsr #29
   1261c:	andeq	r2, r1, r0, lsr #29
   12620:	andeq	r2, r1, r0, lsr #29
   12624:	andeq	r2, r1, r0, lsr #29
   12628:	andeq	r2, r1, r0, lsr #29
   1262c:	andeq	r2, r1, r0, lsr #29
   12630:	andeq	r2, r1, r0, lsr #29
   12634:	andeq	r2, r1, r0, lsr #29
   12638:	andeq	r2, r1, r0, lsr #29
   1263c:	andeq	r2, r1, r0, lsr #29
   12640:	andeq	r2, r1, r0, lsr #29
   12644:	andeq	r2, r1, r0, lsr #29
   12648:	andeq	r2, r1, r0, lsr #29
   1264c:	andeq	r2, r1, r0, lsr #29
   12650:	andeq	r2, r1, r0, lsr #29
   12654:	andeq	r2, r1, r0, ror #28
   12658:	andeq	r2, r1, r4, ror sp
   1265c:	andeq	r2, r1, r4, ror sp
   12660:	andeq	r2, r1, r8, ror lr
   12664:	andeq	r2, r1, r4, ror sp
   12668:	muleq	r1, r4, lr
   1266c:	andeq	r2, r1, r4, ror sp
   12670:			; <UNDEFINED> instruction: 0x00012bb4
   12674:	andeq	r2, r1, r4, ror sp
   12678:	andeq	r2, r1, r4, ror sp
   1267c:	andeq	r2, r1, r4, ror sp
   12680:	muleq	r1, r4, lr
   12684:	muleq	r1, r4, lr
   12688:	muleq	r1, r4, lr
   1268c:	muleq	r1, r4, lr
   12690:	muleq	r1, r4, lr
   12694:	muleq	r1, r4, lr
   12698:	muleq	r1, r4, lr
   1269c:	muleq	r1, r4, lr
   126a0:	muleq	r1, r4, lr
   126a4:	muleq	r1, r4, lr
   126a8:	muleq	r1, r4, lr
   126ac:	muleq	r1, r4, lr
   126b0:	muleq	r1, r4, lr
   126b4:	muleq	r1, r4, lr
   126b8:	muleq	r1, r4, lr
   126bc:	muleq	r1, r4, lr
   126c0:	andeq	r2, r1, r4, ror sp
   126c4:	andeq	r2, r1, r4, ror sp
   126c8:	andeq	r2, r1, r4, ror sp
   126cc:	andeq	r2, r1, r4, ror sp
   126d0:	andeq	r2, r1, r8, lsl #23
   126d4:	andeq	r2, r1, r0, lsr #29
   126d8:	muleq	r1, r4, lr
   126dc:	muleq	r1, r4, lr
   126e0:	muleq	r1, r4, lr
   126e4:	muleq	r1, r4, lr
   126e8:	muleq	r1, r4, lr
   126ec:	muleq	r1, r4, lr
   126f0:	muleq	r1, r4, lr
   126f4:	muleq	r1, r4, lr
   126f8:	muleq	r1, r4, lr
   126fc:	muleq	r1, r4, lr
   12700:	muleq	r1, r4, lr
   12704:	muleq	r1, r4, lr
   12708:	muleq	r1, r4, lr
   1270c:	muleq	r1, r4, lr
   12710:	muleq	r1, r4, lr
   12714:	muleq	r1, r4, lr
   12718:	muleq	r1, r4, lr
   1271c:	muleq	r1, r4, lr
   12720:	muleq	r1, r4, lr
   12724:	muleq	r1, r4, lr
   12728:	muleq	r1, r4, lr
   1272c:	muleq	r1, r4, lr
   12730:	muleq	r1, r4, lr
   12734:	muleq	r1, r4, lr
   12738:	muleq	r1, r4, lr
   1273c:	muleq	r1, r4, lr
   12740:	andeq	r2, r1, r4, ror sp
   12744:	andeq	r2, r1, r0, asr #22
   12748:	muleq	r1, r4, lr
   1274c:	andeq	r2, r1, r4, ror sp
   12750:	muleq	r1, r4, lr
   12754:	andeq	r2, r1, r4, ror sp
   12758:	muleq	r1, r4, lr
   1275c:	muleq	r1, r4, lr
   12760:	muleq	r1, r4, lr
   12764:	muleq	r1, r4, lr
   12768:	muleq	r1, r4, lr
   1276c:	muleq	r1, r4, lr
   12770:	muleq	r1, r4, lr
   12774:	muleq	r1, r4, lr
   12778:	muleq	r1, r4, lr
   1277c:	muleq	r1, r4, lr
   12780:	muleq	r1, r4, lr
   12784:	muleq	r1, r4, lr
   12788:	muleq	r1, r4, lr
   1278c:	muleq	r1, r4, lr
   12790:	muleq	r1, r4, lr
   12794:	muleq	r1, r4, lr
   12798:	muleq	r1, r4, lr
   1279c:	muleq	r1, r4, lr
   127a0:	muleq	r1, r4, lr
   127a4:	muleq	r1, r4, lr
   127a8:	muleq	r1, r4, lr
   127ac:	muleq	r1, r4, lr
   127b0:	muleq	r1, r4, lr
   127b4:	muleq	r1, r4, lr
   127b8:	muleq	r1, r4, lr
   127bc:	muleq	r1, r4, lr
   127c0:	andeq	r2, r1, r8, asr r9
   127c4:	andeq	r2, r1, r4, ror sp
   127c8:	andeq	r2, r1, r8, asr r9
   127cc:	andeq	r2, r1, r8, ror lr
   127d0:	cmp	r4, #0
   127d4:	moveq	r3, #1
   127d8:	streq	r3, [sp, #28]
   127dc:	beq	12f08 <close@plt+0x1fe0>
   127e0:	mov	r3, #0
   127e4:	mov	r4, r3
   127e8:	mov	r2, #1
   127ec:	str	r2, [sp, #40]	; 0x28
   127f0:	str	r3, [sp, #68]	; 0x44
   127f4:	str	r2, [sp, #32]
   127f8:	str	r2, [sp, #52]	; 0x34
   127fc:	ldr	r3, [pc, #2584]	; 1321c <close@plt+0x22f4>
   12800:	str	r4, [sp, #44]	; 0x2c
   12804:	str	r4, [sp, #72]	; 0x48
   12808:	str	r4, [sp, #28]
   1280c:	str	r3, [sp, #60]	; 0x3c
   12810:	mov	r8, #2
   12814:	b	12500 <close@plt+0x15d8>
   12818:	cmp	r4, #0
   1281c:	bne	13aa8 <close@plt+0x2b80>
   12820:	cmp	sl, #0
   12824:	beq	13868 <close@plt+0x2940>
   12828:	mov	r3, #34	; 0x22
   1282c:	strb	r3, [fp]
   12830:	ldr	r3, [pc, #2528]	; 13218 <close@plt+0x22f0>
   12834:	mov	r1, r4
   12838:	mov	r2, #1
   1283c:	str	r4, [sp, #68]	; 0x44
   12840:	str	r2, [sp, #40]	; 0x28
   12844:	mov	r4, r2
   12848:	str	r1, [sp, #44]	; 0x2c
   1284c:	str	r1, [sp, #72]	; 0x48
   12850:	str	r1, [sp, #32]
   12854:	str	r2, [sp, #28]
   12858:	str	r2, [sp, #52]	; 0x34
   1285c:	str	r3, [sp, #60]	; 0x3c
   12860:	b	12500 <close@plt+0x15d8>
   12864:	mov	r3, #0
   12868:	str	r3, [sp, #68]	; 0x44
   1286c:	str	r3, [sp, #44]	; 0x2c
   12870:	str	r3, [sp, #32]
   12874:	str	r3, [sp, #28]
   12878:	str	r3, [sp, #60]	; 0x3c
   1287c:	mov	r3, #1
   12880:	str	r8, [sp, #72]	; 0x48
   12884:	str	r8, [sp, #52]	; 0x34
   12888:	mov	r4, r8
   1288c:	str	r3, [sp, #40]	; 0x28
   12890:	b	12500 <close@plt+0x15d8>
   12894:	mov	r3, #1
   12898:	str	r3, [sp, #40]	; 0x28
   1289c:	str	r3, [sp, #32]
   128a0:	str	r3, [sp, #28]
   128a4:	str	r3, [sp, #52]	; 0x34
   128a8:	ldr	r3, [pc, #2408]	; 13218 <close@plt+0x22f0>
   128ac:	mov	r2, #0
   128b0:	mov	r4, r2
   128b4:	str	r2, [sp, #68]	; 0x44
   128b8:	str	r2, [sp, #44]	; 0x2c
   128bc:	str	r2, [sp, #72]	; 0x48
   128c0:	str	r3, [sp, #60]	; 0x3c
   128c4:	mov	r8, #5
   128c8:	b	12500 <close@plt+0x15d8>
   128cc:	mov	r3, #0
   128d0:	mov	r2, #1
   128d4:	str	r2, [sp, #40]	; 0x28
   128d8:	mov	r4, r3
   128dc:	str	r3, [sp, #68]	; 0x44
   128e0:	str	r2, [sp, #28]
   128e4:	str	r3, [sp, #44]	; 0x2c
   128e8:	str	r3, [sp, #72]	; 0x48
   128ec:	str	r3, [sp, #32]
   128f0:	str	r3, [sp, #52]	; 0x34
   128f4:	str	r3, [sp, #60]	; 0x3c
   128f8:	b	12500 <close@plt+0x15d8>
   128fc:	mov	r2, #1
   12900:	mov	r3, #0
   12904:	str	r2, [sp, #40]	; 0x28
   12908:	mov	r4, r3
   1290c:	str	r3, [sp, #68]	; 0x44
   12910:	str	r8, [sp, #52]	; 0x34
   12914:	str	r2, [sp, #32]
   12918:	b	127fc <close@plt+0x18d4>
   1291c:	mov	r3, #1
   12920:	str	r3, [sp, #40]	; 0x28
   12924:	str	r3, [sp, #32]
   12928:	str	r3, [sp, #28]
   1292c:	str	r3, [sp, #52]	; 0x34
   12930:	ldr	r3, [pc, #2276]	; 1321c <close@plt+0x22f4>
   12934:	mov	r2, #0
   12938:	mov	r4, r2
   1293c:	str	r2, [sp, #68]	; 0x44
   12940:	str	r2, [sp, #44]	; 0x2c
   12944:	str	r2, [sp, #72]	; 0x48
   12948:	str	r3, [sp, #60]	; 0x3c
   1294c:	mov	r8, #2
   12950:	b	12500 <close@plt+0x15d8>
   12954:	mov	r7, #0
   12958:	ldr	r3, [sp, #24]
   1295c:	cmn	r3, #1
   12960:	beq	1349c <close@plt+0x2574>
   12964:	ldr	r3, [sp, #24]
   12968:	subs	r3, r3, #1
   1296c:	movne	r3, #1
   12970:	cmp	r3, #0
   12974:	sub	r2, fp, #2
   12978:	clz	r2, r2
   1297c:	lsr	r2, r2, #5
   12980:	bne	12b7c <close@plt+0x1c54>
   12984:	cmp	r9, #0
   12988:	bne	12b7c <close@plt+0x1c54>
   1298c:	ldr	r3, [sp, #32]
   12990:	tst	r3, r2
   12994:	bne	12c9c <close@plt+0x1d74>
   12998:	ldr	r3, [sp, #28]
   1299c:	eor	r3, r3, #1
   129a0:	orr	r3, r2, r3
   129a4:	ldr	r2, [sp, #32]
   129a8:	eor	r3, r3, #1
   129ac:	orrs	r3, r2, r3
   129b0:	beq	129e0 <close@plt+0x1ab8>
   129b4:	mov	r3, #0
   129b8:	ldr	r1, [sp, #56]	; 0x38
   129bc:	cmp	r1, #0
   129c0:	beq	129e0 <close@plt+0x1ab8>
   129c4:	lsr	r2, r5, #5
   129c8:	and	r0, r5, #31
   129cc:	uxtb	r2, r2
   129d0:	ldr	r1, [r1, r2, lsl #2]
   129d4:	lsr	r2, r1, r0
   129d8:	tst	r2, #1
   129dc:	bne	129e8 <close@plt+0x1ac0>
   129e0:	cmp	r7, #0
   129e4:	beq	12c38 <close@plt+0x1d10>
   129e8:	sub	r2, fp, #2
   129ec:	clz	r2, r2
   129f0:	lsr	r2, r2, #5
   129f4:	ldr	r3, [sp, #32]
   129f8:	cmp	r3, #0
   129fc:	bne	12d28 <close@plt+0x1e00>
   12a00:	ldr	r3, [sp, #44]	; 0x2c
   12a04:	eor	r3, r3, #1
   12a08:	ands	r3, r2, r3
   12a0c:	beq	12a44 <close@plt+0x1b1c>
   12a10:	cmp	sl, r4
   12a14:	movhi	r2, #39	; 0x27
   12a18:	strbhi	r2, [r8, r4]
   12a1c:	add	r2, r4, #1
   12a20:	cmp	r2, sl
   12a24:	movcc	r1, #36	; 0x24
   12a28:	strbcc	r1, [r8, r2]
   12a2c:	add	r2, r4, #2
   12a30:	cmp	r2, sl
   12a34:	add	r4, r4, #3
   12a38:	movcc	r1, #39	; 0x27
   12a3c:	strbcc	r1, [r8, r2]
   12a40:	str	r3, [sp, #44]	; 0x2c
   12a44:	cmp	r4, sl
   12a48:	movcc	r3, #92	; 0x5c
   12a4c:	strbcc	r3, [r8, r4]
   12a50:	add	r9, r9, #1
   12a54:	add	r4, r4, #1
   12a58:	cmp	r4, sl
   12a5c:	ldr	r3, [sp, #40]	; 0x28
   12a60:	strbcc	r5, [r8, r4]
   12a64:	cmp	r6, #0
   12a68:	moveq	r3, #0
   12a6c:	str	r3, [sp, #40]	; 0x28
   12a70:	ldr	r3, [sp, #24]
   12a74:	add	r4, r4, #1
   12a78:	cmn	r3, #1
   12a7c:	bne	1251c <close@plt+0x15f4>
   12a80:	ldr	r3, [sp, #36]	; 0x24
   12a84:	ldrb	r6, [r3, r9]
   12a88:	adds	r6, r6, #0
   12a8c:	movne	r6, #1
   12a90:	cmp	r6, #0
   12a94:	bne	12530 <close@plt+0x1608>
   12a98:	str	fp, [sp, #160]	; 0xa0
   12a9c:	mov	fp, r8
   12aa0:	ldr	r8, [sp, #160]	; 0xa0
   12aa4:	ldr	r1, [sp, #32]
   12aa8:	cmp	r4, #0
   12aac:	sub	r2, r8, #2
   12ab0:	clz	r2, r2
   12ab4:	lsr	r2, r2, #5
   12ab8:	andeq	r3, r2, r1
   12abc:	movne	r3, #0
   12ac0:	cmp	r3, #0
   12ac4:	bne	13bb0 <close@plt+0x2c88>
   12ac8:	eor	r3, r1, #1
   12acc:	ands	r2, r2, r3
   12ad0:	beq	13aec <close@plt+0x2bc4>
   12ad4:	ldr	r3, [sp, #68]	; 0x44
   12ad8:	cmp	r3, #0
   12adc:	beq	13af0 <close@plt+0x2bc8>
   12ae0:	ldr	r3, [sp, #40]	; 0x28
   12ae4:	cmp	r3, #0
   12ae8:	bne	13b6c <close@plt+0x2c44>
   12aec:	ldr	r3, [sp, #72]	; 0x48
   12af0:	adds	r3, r3, #0
   12af4:	movne	r3, #1
   12af8:	cmp	sl, #0
   12afc:	movne	r3, #0
   12b00:	cmp	r3, #0
   12b04:	ldreq	r2, [sp, #68]	; 0x44
   12b08:	beq	13af0 <close@plt+0x2bc8>
   12b0c:	ldr	sl, [sp, #72]	; 0x48
   12b10:	str	r3, [sp, #68]	; 0x44
   12b14:	ldr	r3, [pc, #1792]	; 1321c <close@plt+0x22f4>
   12b18:	mov	r2, #39	; 0x27
   12b1c:	mov	r4, #1
   12b20:	str	r3, [sp, #60]	; 0x3c
   12b24:	mov	r3, #0
   12b28:	strb	r2, [fp]
   12b2c:	str	r4, [sp, #52]	; 0x34
   12b30:	mov	r8, #2
   12b34:	str	r3, [sp, #32]
   12b38:	b	12500 <close@plt+0x15d8>
   12b3c:	mov	r7, #0
   12b40:	cmp	fp, #2
   12b44:	beq	1347c <close@plt+0x2554>
   12b48:	ldr	r3, [sp, #52]	; 0x34
   12b4c:	ldr	r2, [sp, #28]
   12b50:	ldr	r1, [sp, #32]
   12b54:	cmp	r3, #0
   12b58:	andne	r2, r2, r1
   12b5c:	moveq	r2, #0
   12b60:	cmp	r2, #0
   12b64:	moveq	r5, #92	; 0x5c
   12b68:	moveq	r3, r5
   12b6c:	bne	13488 <close@plt+0x2560>
   12b70:	ldr	r1, [sp, #28]
   12b74:	cmp	r1, #0
   12b78:	bne	13bf8 <close@plt+0x2cd0>
   12b7c:	mov	r6, #0
   12b80:	b	12998 <close@plt+0x1a70>
   12b84:	mov	r7, #0
   12b88:	cmp	fp, #2
   12b8c:	beq	134ec <close@plt+0x25c4>
   12b90:	cmp	fp, #5
   12b94:	beq	134b0 <close@plt+0x2588>
   12b98:	sub	r2, fp, #2
   12b9c:	mov	r6, #0
   12ba0:	clz	r2, r2
   12ba4:	mov	r5, #63	; 0x3f
   12ba8:	lsr	r2, r2, #5
   12bac:	b	12998 <close@plt+0x1a70>
   12bb0:	mov	r7, #0
   12bb4:	cmp	fp, #2
   12bb8:	strne	r6, [sp, #68]	; 0x44
   12bbc:	movne	r2, #0
   12bc0:	movne	r5, #39	; 0x27
   12bc4:	bne	12998 <close@plt+0x1a70>
   12bc8:	ldr	r3, [sp, #32]
   12bcc:	cmp	r3, #0
   12bd0:	bne	138cc <close@plt+0x29a4>
   12bd4:	cmp	sl, #0
   12bd8:	ldr	r3, [sp, #72]	; 0x48
   12bdc:	clz	r3, r3
   12be0:	lsr	r3, r3, #5
   12be4:	moveq	r3, #0
   12be8:	cmp	r3, #0
   12bec:	bne	13800 <close@plt+0x28d8>
   12bf0:	cmp	sl, r4
   12bf4:	movhi	r3, #39	; 0x27
   12bf8:	strbhi	r3, [r8, r4]
   12bfc:	add	r3, r4, #1
   12c00:	cmp	sl, r3
   12c04:	movhi	r2, #92	; 0x5c
   12c08:	strbhi	r2, [r8, r3]
   12c0c:	add	r3, r4, #2
   12c10:	cmp	sl, r3
   12c14:	movhi	r2, #39	; 0x27
   12c18:	strbhi	r2, [r8, r3]
   12c1c:	mov	r3, #0
   12c20:	cmp	r7, #0
   12c24:	add	r4, r4, #3
   12c28:	str	r3, [sp, #44]	; 0x2c
   12c2c:	str	r6, [sp, #68]	; 0x44
   12c30:	mov	r5, #39	; 0x27
   12c34:	bne	129e8 <close@plt+0x1ac0>
   12c38:	ldr	r2, [sp, #44]	; 0x2c
   12c3c:	eor	r3, r3, #1
   12c40:	and	r3, r3, r2
   12c44:	add	r9, r9, #1
   12c48:	uxtb	r3, r3
   12c4c:	cmp	r3, #0
   12c50:	beq	12a58 <close@plt+0x1b30>
   12c54:	cmp	sl, r4
   12c58:	movhi	r3, #39	; 0x27
   12c5c:	strbhi	r3, [r8, r4]
   12c60:	add	r3, r4, #1
   12c64:	cmp	sl, r3
   12c68:	movhi	r2, #39	; 0x27
   12c6c:	strbhi	r2, [r8, r3]
   12c70:	mov	r3, #0
   12c74:	add	r4, r4, #2
   12c78:	str	r3, [sp, #44]	; 0x2c
   12c7c:	b	12a58 <close@plt+0x1b30>
   12c80:	mov	r3, #114	; 0x72
   12c84:	ldr	r1, [sp, #32]
   12c88:	sub	r2, fp, #2
   12c8c:	clz	r2, r2
   12c90:	lsr	r2, r2, #5
   12c94:	tst	r2, r1
   12c98:	beq	12b70 <close@plt+0x1c48>
   12c9c:	mov	fp, r8
   12ca0:	mov	r8, #2
   12ca4:	ldr	r3, [sp, #28]
   12ca8:	cmp	r3, #0
   12cac:	movne	r8, #4
   12cb0:	ldr	r3, [sp, #164]	; 0xa4
   12cb4:	mov	ip, #0
   12cb8:	bic	r3, r3, #2
   12cbc:	str	r3, [sp, #4]
   12cc0:	ldr	r3, [sp, #76]	; 0x4c
   12cc4:	str	r8, [sp]
   12cc8:	str	r3, [sp, #16]
   12ccc:	ldr	r3, [sp, #80]	; 0x50
   12cd0:	ldr	r2, [sp, #36]	; 0x24
   12cd4:	str	r3, [sp, #12]
   12cd8:	mov	r1, sl
   12cdc:	ldr	r3, [sp, #24]
   12ce0:	mov	r0, fp
   12ce4:	str	ip, [sp, #8]
   12ce8:	bl	12408 <close@plt+0x14e0>
   12cec:	mov	r4, r0
   12cf0:	ldr	r3, [pc, #1304]	; 13210 <close@plt+0x22e8>
   12cf4:	ldr	r2, [sp, #116]	; 0x74
   12cf8:	mov	r0, r4
   12cfc:	ldr	r3, [r3]
   12d00:	cmp	r2, r3
   12d04:	bne	13bf4 <close@plt+0x2ccc>
   12d08:	add	sp, sp, #124	; 0x7c
   12d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d10:	mov	r5, #110	; 0x6e
   12d14:	ldr	r3, [sp, #32]
   12d18:	mov	r2, #0
   12d1c:	cmp	r3, #0
   12d20:	mov	r6, r2
   12d24:	beq	12a00 <close@plt+0x1ad8>
   12d28:	str	fp, [sp, #160]	; 0xa0
   12d2c:	mov	fp, r8
   12d30:	ldr	r8, [sp, #160]	; 0xa0
   12d34:	mov	r3, r2
   12d38:	ldr	r2, [sp, #28]
   12d3c:	and	r2, r2, r3
   12d40:	str	r2, [sp, #28]
   12d44:	b	12ca4 <close@plt+0x1d7c>
   12d48:	mov	r5, #116	; 0x74
   12d4c:	b	12d14 <close@plt+0x1dec>
   12d50:	mov	r5, #102	; 0x66
   12d54:	ldr	r3, [sp, #32]
   12d58:	cmp	r3, #0
   12d5c:	bne	13908 <close@plt+0x29e0>
   12d60:	mov	r6, #0
   12d64:	b	12a44 <close@plt+0x1b1c>
   12d68:	mov	r5, #118	; 0x76
   12d6c:	b	12d54 <close@plt+0x1e2c>
   12d70:	mov	r7, #0
   12d74:	mov	r6, #0
   12d78:	b	129b4 <close@plt+0x1a8c>
   12d7c:	ldr	r3, [sp, #32]
   12d80:	cmp	r3, #0
   12d84:	bne	13b4c <close@plt+0x2c24>
   12d88:	mov	r7, r3
   12d8c:	ldr	r3, [sp, #44]	; 0x2c
   12d90:	sub	r2, fp, #2
   12d94:	eor	r3, r3, #1
   12d98:	clz	r2, r2
   12d9c:	lsr	r2, r2, #5
   12da0:	ands	r3, r2, r3
   12da4:	beq	137ec <close@plt+0x28c4>
   12da8:	cmp	sl, r4
   12dac:	movhi	r1, #39	; 0x27
   12db0:	strbhi	r1, [r8, r4]
   12db4:	add	r1, r4, #1
   12db8:	cmp	sl, r1
   12dbc:	movhi	r0, #36	; 0x24
   12dc0:	strbhi	r0, [r8, r1]
   12dc4:	add	r1, r4, #2
   12dc8:	cmp	sl, r1
   12dcc:	movhi	r0, #39	; 0x27
   12dd0:	strbhi	r0, [r8, r1]
   12dd4:	add	r1, r4, #3
   12dd8:	cmp	sl, r1
   12ddc:	bls	1384c <close@plt+0x2924>
   12de0:	mov	r4, r1
   12de4:	mov	r1, #92	; 0x5c
   12de8:	strb	r1, [r8, r4]
   12dec:	mov	r1, r4
   12df0:	str	r3, [sp, #44]	; 0x2c
   12df4:	cmp	fp, #2
   12df8:	add	r4, r4, #1
   12dfc:	beq	13894 <close@plt+0x296c>
   12e00:	ldr	r0, [sp, #24]
   12e04:	add	r3, r9, #1
   12e08:	cmp	r3, r0
   12e0c:	bcs	12e24 <close@plt+0x1efc>
   12e10:	ldr	r0, [sp, #36]	; 0x24
   12e14:	ldrb	r3, [r0, r3]
   12e18:	sub	r3, r3, #48	; 0x30
   12e1c:	cmp	r3, #9
   12e20:	bls	138a4 <close@plt+0x297c>
   12e24:	mov	r5, #48	; 0x30
   12e28:	ldr	r3, [sp, #28]
   12e2c:	eor	r3, r3, #1
   12e30:	orrs	r2, r2, r3
   12e34:	mov	r3, r6
   12e38:	moveq	r6, r2
   12e3c:	beq	129b8 <close@plt+0x1a90>
   12e40:	mov	r6, #0
   12e44:	b	129e0 <close@plt+0x1ab8>
   12e48:	mov	r2, #0
   12e4c:	mov	r6, r2
   12e50:	mov	r5, #98	; 0x62
   12e54:	b	12a00 <close@plt+0x1ad8>
   12e58:	mov	r5, #97	; 0x61
   12e5c:	b	12d60 <close@plt+0x1e38>
   12e60:	mov	r3, r7
   12e64:	mov	r6, r7
   12e68:	mov	r2, #0
   12e6c:	mov	r7, r3
   12e70:	mov	r5, #32
   12e74:	b	12998 <close@plt+0x1a70>
   12e78:	cmp	r9, #0
   12e7c:	mov	r3, r7
   12e80:	bne	13448 <close@plt+0x2520>
   12e84:	mov	r6, r7
   12e88:	mov	r2, r9
   12e8c:	mov	r7, r3
   12e90:	b	12998 <close@plt+0x1a70>
   12e94:	mov	r6, r7
   12e98:	b	129b4 <close@plt+0x1a8c>
   12e9c:	mov	r7, #0
   12ea0:	ldr	r3, [sp, #64]	; 0x40
   12ea4:	cmp	r3, #1
   12ea8:	bne	13504 <close@plt+0x25dc>
   12eac:	bl	10e38 <__ctype_b_loc@plt>
   12eb0:	ldr	r2, [sp, #64]	; 0x40
   12eb4:	sxth	r3, r5
   12eb8:	mov	ip, r2
   12ebc:	lsl	r3, r3, #1
   12ec0:	ldr	r2, [r0]
   12ec4:	ldrh	r3, [r2, r3]
   12ec8:	and	r3, r3, #16384	; 0x4000
   12ecc:	cmp	r3, #0
   12ed0:	ldr	r3, [sp, #28]
   12ed4:	movne	r6, #1
   12ed8:	moveq	r6, #0
   12edc:	movne	r2, #0
   12ee0:	andeq	r2, r3, #1
   12ee4:	cmp	r2, #0
   12ee8:	bne	13814 <close@plt+0x28ec>
   12eec:	sub	r2, fp, #2
   12ef0:	clz	r2, r2
   12ef4:	lsr	r2, r2, #5
   12ef8:	b	12998 <close@plt+0x1a70>
   12efc:	cmp	r4, #0
   12f00:	bne	13bc0 <close@plt+0x2c98>
   12f04:	str	r4, [sp, #28]
   12f08:	cmp	sl, #0
   12f0c:	bne	13c04 <close@plt+0x2cdc>
   12f10:	ldr	r3, [pc, #772]	; 1321c <close@plt+0x22f4>
   12f14:	mov	r4, #1
   12f18:	str	r4, [sp, #40]	; 0x28
   12f1c:	str	r3, [sp, #60]	; 0x3c
   12f20:	str	r4, [sp, #52]	; 0x34
   12f24:	str	sl, [sp, #72]	; 0x48
   12f28:	str	sl, [sp, #68]	; 0x44
   12f2c:	str	sl, [sp, #44]	; 0x2c
   12f30:	str	sl, [sp, #32]
   12f34:	mov	r8, #2
   12f38:	b	12500 <close@plt+0x15d8>
   12f3c:	ldr	r3, [sp, #36]	; 0x24
   12f40:	ldrb	r5, [r3, r9]
   12f44:	cmp	r5, #126	; 0x7e
   12f48:	ldrls	pc, [pc, r5, lsl #2]
   12f4c:	b	12ea0 <close@plt+0x1f78>
   12f50:	andeq	r3, r1, r4, lsl #3
   12f54:	andeq	r2, r1, r0, lsr #29
   12f58:	andeq	r2, r1, r0, lsr #29
   12f5c:	andeq	r2, r1, r0, lsr #29
   12f60:	andeq	r2, r1, r0, lsr #29
   12f64:	andeq	r2, r1, r0, lsr #29
   12f68:	andeq	r2, r1, r0, lsr #29
   12f6c:	andeq	r3, r1, r0, ror r1
   12f70:	andeq	r3, r1, ip, asr r1
   12f74:	andeq	r3, r1, r4, asr r1
   12f78:	andeq	r3, r1, ip, asr #2
   12f7c:	strdeq	r3, [r1], -ip
   12f80:	andeq	r3, r1, r8, ror #3
   12f84:	andeq	r2, r1, r0, lsl #25
   12f88:	andeq	r2, r1, r0, lsr #29
   12f8c:	andeq	r2, r1, r0, lsr #29
   12f90:	andeq	r2, r1, r0, lsr #29
   12f94:	andeq	r2, r1, r0, lsr #29
   12f98:	andeq	r2, r1, r0, lsr #29
   12f9c:	andeq	r2, r1, r0, lsr #29
   12fa0:	andeq	r2, r1, r0, lsr #29
   12fa4:	andeq	r2, r1, r0, lsr #29
   12fa8:	andeq	r2, r1, r0, lsr #29
   12fac:	andeq	r2, r1, r0, lsr #29
   12fb0:	andeq	r2, r1, r0, lsr #29
   12fb4:	andeq	r2, r1, r0, lsr #29
   12fb8:	andeq	r2, r1, r0, lsr #29
   12fbc:	andeq	r2, r1, r0, lsr #29
   12fc0:	andeq	r2, r1, r0, lsr #29
   12fc4:	andeq	r2, r1, r0, lsr #29
   12fc8:	andeq	r2, r1, r0, lsr #29
   12fcc:	andeq	r2, r1, r0, lsr #29
   12fd0:	ldrdeq	r3, [r1], -r8
   12fd4:	andeq	r3, r1, r4, asr #3
   12fd8:	andeq	r3, r1, r4, asr #3
   12fdc:			; <UNDEFINED> instruction: 0x000131b4
   12fe0:	andeq	r3, r1, r4, asr #3
   12fe4:	andeq	r2, r1, ip, ror #29
   12fe8:	andeq	r3, r1, r4, asr #3
   12fec:			; <UNDEFINED> instruction: 0x00012bb4
   12ff0:	andeq	r3, r1, r4, asr #3
   12ff4:	andeq	r3, r1, r4, asr #3
   12ff8:	andeq	r3, r1, r4, asr #3
   12ffc:	andeq	r2, r1, ip, ror #29
   13000:	andeq	r2, r1, ip, ror #29
   13004:	andeq	r2, r1, ip, ror #29
   13008:	andeq	r2, r1, ip, ror #29
   1300c:	andeq	r2, r1, ip, ror #29
   13010:	andeq	r2, r1, ip, ror #29
   13014:	andeq	r2, r1, ip, ror #29
   13018:	andeq	r2, r1, ip, ror #29
   1301c:	andeq	r2, r1, ip, ror #29
   13020:	andeq	r2, r1, ip, ror #29
   13024:	andeq	r2, r1, ip, ror #29
   13028:	andeq	r2, r1, ip, ror #29
   1302c:	andeq	r2, r1, ip, ror #29
   13030:	andeq	r2, r1, ip, ror #29
   13034:	andeq	r2, r1, ip, ror #29
   13038:	andeq	r2, r1, ip, ror #29
   1303c:	andeq	r3, r1, r4, asr #3
   13040:	andeq	r3, r1, r4, asr #3
   13044:	andeq	r3, r1, r4, asr #3
   13048:	andeq	r3, r1, r4, asr #3
   1304c:	andeq	r2, r1, r8, lsl #23
   13050:	andeq	r2, r1, r0, lsr #29
   13054:	andeq	r2, r1, ip, ror #29
   13058:	andeq	r2, r1, ip, ror #29
   1305c:	andeq	r2, r1, ip, ror #29
   13060:	andeq	r2, r1, ip, ror #29
   13064:	andeq	r2, r1, ip, ror #29
   13068:	andeq	r2, r1, ip, ror #29
   1306c:	andeq	r2, r1, ip, ror #29
   13070:	andeq	r2, r1, ip, ror #29
   13074:	andeq	r2, r1, ip, ror #29
   13078:	andeq	r2, r1, ip, ror #29
   1307c:	andeq	r2, r1, ip, ror #29
   13080:	andeq	r2, r1, ip, ror #29
   13084:	andeq	r2, r1, ip, ror #29
   13088:	andeq	r2, r1, ip, ror #29
   1308c:	andeq	r2, r1, ip, ror #29
   13090:	andeq	r2, r1, ip, ror #29
   13094:	andeq	r2, r1, ip, ror #29
   13098:	andeq	r2, r1, ip, ror #29
   1309c:	andeq	r2, r1, ip, ror #29
   130a0:	andeq	r2, r1, ip, ror #29
   130a4:	andeq	r2, r1, ip, ror #29
   130a8:	andeq	r2, r1, ip, ror #29
   130ac:	andeq	r2, r1, ip, ror #29
   130b0:	andeq	r2, r1, ip, ror #29
   130b4:	andeq	r2, r1, ip, ror #29
   130b8:	andeq	r2, r1, ip, ror #29
   130bc:	andeq	r3, r1, r4, asr #3
   130c0:	andeq	r2, r1, r0, asr #22
   130c4:	andeq	r2, r1, ip, ror #29
   130c8:	andeq	r3, r1, r4, asr #3
   130cc:	andeq	r2, r1, ip, ror #29
   130d0:	andeq	r3, r1, r4, asr #3
   130d4:	andeq	r2, r1, ip, ror #29
   130d8:	andeq	r2, r1, ip, ror #29
   130dc:	andeq	r2, r1, ip, ror #29
   130e0:	andeq	r2, r1, ip, ror #29
   130e4:	andeq	r2, r1, ip, ror #29
   130e8:	andeq	r2, r1, ip, ror #29
   130ec:	andeq	r2, r1, ip, ror #29
   130f0:	andeq	r2, r1, ip, ror #29
   130f4:	andeq	r2, r1, ip, ror #29
   130f8:	andeq	r2, r1, ip, ror #29
   130fc:	andeq	r2, r1, ip, ror #29
   13100:	andeq	r2, r1, ip, ror #29
   13104:	andeq	r2, r1, ip, ror #29
   13108:	andeq	r2, r1, ip, ror #29
   1310c:	andeq	r2, r1, ip, ror #29
   13110:	andeq	r2, r1, ip, ror #29
   13114:	andeq	r2, r1, ip, ror #29
   13118:	andeq	r2, r1, ip, ror #29
   1311c:	andeq	r2, r1, ip, ror #29
   13120:	andeq	r2, r1, ip, ror #29
   13124:	andeq	r2, r1, ip, ror #29
   13128:	andeq	r2, r1, ip, ror #29
   1312c:	andeq	r2, r1, ip, ror #29
   13130:	andeq	r2, r1, ip, ror #29
   13134:	andeq	r2, r1, ip, ror #29
   13138:	andeq	r2, r1, ip, ror #29
   1313c:	andeq	r2, r1, r8, asr r9
   13140:	andeq	r3, r1, r4, asr #3
   13144:	andeq	r2, r1, r8, asr r9
   13148:			; <UNDEFINED> instruction: 0x000131b4
   1314c:	mov	r3, #110	; 0x6e
   13150:	b	12c84 <close@plt+0x1d5c>
   13154:	mov	r3, #116	; 0x74
   13158:	b	12c84 <close@plt+0x1d5c>
   1315c:	sub	r2, fp, #2
   13160:	mov	r3, #98	; 0x62
   13164:	clz	r2, r2
   13168:	lsr	r2, r2, #5
   1316c:	b	12b70 <close@plt+0x1c48>
   13170:	sub	r2, fp, #2
   13174:	mov	r3, #97	; 0x61
   13178:	clz	r2, r2
   1317c:	lsr	r2, r2, #5
   13180:	b	12b70 <close@plt+0x1c48>
   13184:	ldr	r3, [sp, #28]
   13188:	cmp	r3, #0
   1318c:	bne	12d7c <close@plt+0x1e54>
   13190:	ldr	r3, [sp, #164]	; 0xa4
   13194:	tst	r3, #1
   13198:	bne	1380c <close@plt+0x28e4>
   1319c:	ldr	r6, [sp, #28]
   131a0:	sub	r2, fp, #2
   131a4:	mov	r7, r6
   131a8:	clz	r2, r2
   131ac:	lsr	r2, r2, #5
   131b0:	b	12998 <close@plt+0x1a70>
   131b4:	sub	r2, fp, #2
   131b8:	clz	r2, r2
   131bc:	lsr	r2, r2, #5
   131c0:	b	12984 <close@plt+0x1a5c>
   131c4:	sub	r2, fp, #2
   131c8:	mov	r6, #0
   131cc:	clz	r2, r2
   131d0:	lsr	r2, r2, #5
   131d4:	b	1298c <close@plt+0x1a64>
   131d8:	sub	r2, fp, #2
   131dc:	clz	r2, r2
   131e0:	lsr	r2, r2, #5
   131e4:	b	1298c <close@plt+0x1a64>
   131e8:	sub	r2, fp, #2
   131ec:	mov	r3, #102	; 0x66
   131f0:	clz	r2, r2
   131f4:	lsr	r2, r2, #5
   131f8:	b	12b70 <close@plt+0x1c48>
   131fc:	sub	r2, fp, #2
   13200:	mov	r3, #118	; 0x76
   13204:	clz	r2, r2
   13208:	lsr	r2, r2, #5
   1320c:	b	12b70 <close@plt+0x1c48>
   13210:	andeq	r6, r2, r8, lsl #30
   13214:	andeq	r6, r1, ip, rrx
   13218:	andeq	r6, r1, r4, asr r0
   1321c:	andeq	r6, r1, r8, rrx
   13220:	ldr	r3, [sp, #48]	; 0x30
   13224:	ldrb	r5, [r3]
   13228:	cmp	r5, #126	; 0x7e
   1322c:	ldrls	pc, [pc, r5, lsl #2]
   13230:	b	12e9c <close@plt+0x1f74>
   13234:	andeq	r2, r1, ip, ror sp
   13238:	muleq	r1, ip, lr
   1323c:	muleq	r1, ip, lr
   13240:	muleq	r1, ip, lr
   13244:	muleq	r1, ip, lr
   13248:	muleq	r1, ip, lr
   1324c:	muleq	r1, ip, lr
   13250:	andeq	r3, r1, r4, ror r4
   13254:	andeq	r3, r1, ip, ror #8
   13258:	andeq	r2, r1, r8, asr #26
   1325c:	andeq	r2, r1, r0, lsl sp
   13260:	andeq	r2, r1, r8, ror #26
   13264:	andeq	r2, r1, r0, asr sp
   13268:	andeq	r3, r1, r0, ror #8
   1326c:	muleq	r1, ip, lr
   13270:	muleq	r1, ip, lr
   13274:	muleq	r1, ip, lr
   13278:	muleq	r1, ip, lr
   1327c:	muleq	r1, ip, lr
   13280:	muleq	r1, ip, lr
   13284:	muleq	r1, ip, lr
   13288:	muleq	r1, ip, lr
   1328c:	muleq	r1, ip, lr
   13290:	muleq	r1, ip, lr
   13294:	muleq	r1, ip, lr
   13298:	muleq	r1, ip, lr
   1329c:	muleq	r1, ip, lr
   132a0:	muleq	r1, ip, lr
   132a4:	muleq	r1, ip, lr
   132a8:	muleq	r1, ip, lr
   132ac:	muleq	r1, ip, lr
   132b0:	muleq	r1, ip, lr
   132b4:	andeq	r3, r1, r8, asr r4
   132b8:	andeq	r2, r1, r0, ror sp
   132bc:	andeq	r2, r1, r0, ror sp
   132c0:	andeq	r3, r1, ip, lsr r4
   132c4:	andeq	r2, r1, r0, ror sp
   132c8:	andeq	r3, r1, r0, lsr r4
   132cc:	andeq	r2, r1, r0, ror sp
   132d0:			; <UNDEFINED> instruction: 0x00012bb0
   132d4:	andeq	r2, r1, r0, ror sp
   132d8:	andeq	r2, r1, r0, ror sp
   132dc:	andeq	r2, r1, r0, ror sp
   132e0:	andeq	r3, r1, r0, lsr r4
   132e4:	andeq	r3, r1, r0, lsr r4
   132e8:	andeq	r3, r1, r0, lsr r4
   132ec:	andeq	r3, r1, r0, lsr r4
   132f0:	andeq	r3, r1, r0, lsr r4
   132f4:	andeq	r3, r1, r0, lsr r4
   132f8:	andeq	r3, r1, r0, lsr r4
   132fc:	andeq	r3, r1, r0, lsr r4
   13300:	andeq	r3, r1, r0, lsr r4
   13304:	andeq	r3, r1, r0, lsr r4
   13308:	andeq	r3, r1, r0, lsr r4
   1330c:	andeq	r3, r1, r0, lsr r4
   13310:	andeq	r3, r1, r0, lsr r4
   13314:	andeq	r3, r1, r0, lsr r4
   13318:	andeq	r3, r1, r0, lsr r4
   1331c:	andeq	r3, r1, r0, lsr r4
   13320:	andeq	r2, r1, r0, ror sp
   13324:	andeq	r2, r1, r0, ror sp
   13328:	andeq	r2, r1, r0, ror sp
   1332c:	andeq	r2, r1, r0, ror sp
   13330:	andeq	r2, r1, r4, lsl #23
   13334:	muleq	r1, ip, lr
   13338:	andeq	r3, r1, r0, lsr r4
   1333c:	andeq	r3, r1, r0, lsr r4
   13340:	andeq	r3, r1, r0, lsr r4
   13344:	andeq	r3, r1, r0, lsr r4
   13348:	andeq	r3, r1, r0, lsr r4
   1334c:	andeq	r3, r1, r0, lsr r4
   13350:	andeq	r3, r1, r0, lsr r4
   13354:	andeq	r3, r1, r0, lsr r4
   13358:	andeq	r3, r1, r0, lsr r4
   1335c:	andeq	r3, r1, r0, lsr r4
   13360:	andeq	r3, r1, r0, lsr r4
   13364:	andeq	r3, r1, r0, lsr r4
   13368:	andeq	r3, r1, r0, lsr r4
   1336c:	andeq	r3, r1, r0, lsr r4
   13370:	andeq	r3, r1, r0, lsr r4
   13374:	andeq	r3, r1, r0, lsr r4
   13378:	andeq	r3, r1, r0, lsr r4
   1337c:	andeq	r3, r1, r0, lsr r4
   13380:	andeq	r3, r1, r0, lsr r4
   13384:	andeq	r3, r1, r0, lsr r4
   13388:	andeq	r3, r1, r0, lsr r4
   1338c:	andeq	r3, r1, r0, lsr r4
   13390:	andeq	r3, r1, r0, lsr r4
   13394:	andeq	r3, r1, r0, lsr r4
   13398:	andeq	r3, r1, r0, lsr r4
   1339c:	andeq	r3, r1, r0, lsr r4
   133a0:	andeq	r2, r1, r0, ror sp
   133a4:	andeq	r2, r1, ip, lsr fp
   133a8:	andeq	r3, r1, r0, lsr r4
   133ac:	andeq	r2, r1, r0, ror sp
   133b0:	andeq	r3, r1, r0, lsr r4
   133b4:	andeq	r2, r1, r0, ror sp
   133b8:	andeq	r3, r1, r0, lsr r4
   133bc:	andeq	r3, r1, r0, lsr r4
   133c0:	andeq	r3, r1, r0, lsr r4
   133c4:	andeq	r3, r1, r0, lsr r4
   133c8:	andeq	r3, r1, r0, lsr r4
   133cc:	andeq	r3, r1, r0, lsr r4
   133d0:	andeq	r3, r1, r0, lsr r4
   133d4:	andeq	r3, r1, r0, lsr r4
   133d8:	andeq	r3, r1, r0, lsr r4
   133dc:	andeq	r3, r1, r0, lsr r4
   133e0:	andeq	r3, r1, r0, lsr r4
   133e4:	andeq	r3, r1, r0, lsr r4
   133e8:	andeq	r3, r1, r0, lsr r4
   133ec:	andeq	r3, r1, r0, lsr r4
   133f0:	andeq	r3, r1, r0, lsr r4
   133f4:	andeq	r3, r1, r0, lsr r4
   133f8:	andeq	r3, r1, r0, lsr r4
   133fc:	andeq	r3, r1, r0, lsr r4
   13400:	andeq	r3, r1, r0, lsr r4
   13404:	andeq	r3, r1, r0, lsr r4
   13408:	andeq	r3, r1, r0, lsr r4
   1340c:	andeq	r3, r1, r0, lsr r4
   13410:	andeq	r3, r1, r0, lsr r4
   13414:	andeq	r3, r1, r0, lsr r4
   13418:	andeq	r3, r1, r0, lsr r4
   1341c:	andeq	r3, r1, r0, lsr r4
   13420:	andeq	r2, r1, r4, asr r9
   13424:	andeq	r2, r1, r0, ror sp
   13428:	andeq	r2, r1, r4, asr r9
   1342c:	andeq	r3, r1, ip, lsr r4
   13430:	mov	r6, r7
   13434:	mov	r7, #0
   13438:	b	129b4 <close@plt+0x1a8c>
   1343c:	cmp	r9, #0
   13440:	mov	r3, #0
   13444:	beq	12e84 <close@plt+0x1f5c>
   13448:	mov	r6, #0
   1344c:	mov	r7, r3
   13450:	mov	r3, r6
   13454:	b	129b8 <close@plt+0x1a90>
   13458:	mov	r3, #0
   1345c:	b	12e64 <close@plt+0x1f3c>
   13460:	mov	r7, #0
   13464:	mov	r3, #114	; 0x72
   13468:	b	12c84 <close@plt+0x1d5c>
   1346c:	mov	r5, #98	; 0x62
   13470:	b	12d14 <close@plt+0x1dec>
   13474:	mov	r5, #97	; 0x61
   13478:	b	12d54 <close@plt+0x1e2c>
   1347c:	ldr	r3, [sp, #32]
   13480:	cmp	r3, #0
   13484:	bne	138cc <close@plt+0x29a4>
   13488:	add	r9, r9, #1
   1348c:	ldr	r3, [sp, #44]	; 0x2c
   13490:	mov	r6, #0
   13494:	mov	r5, #92	; 0x5c
   13498:	b	12c4c <close@plt+0x1d24>
   1349c:	ldr	r3, [sp, #36]	; 0x24
   134a0:	ldrb	r3, [r3, #1]
   134a4:	adds	r3, r3, #0
   134a8:	movne	r3, #1
   134ac:	b	12970 <close@plt+0x1a48>
   134b0:	ldr	r3, [sp, #164]	; 0xa4
   134b4:	ands	r3, r3, #4
   134b8:	beq	134dc <close@plt+0x25b4>
   134bc:	ldr	r2, [sp, #24]
   134c0:	add	r3, r9, #2
   134c4:	cmp	r3, r2
   134c8:	bcs	134dc <close@plt+0x25b4>
   134cc:	ldr	r2, [sp, #48]	; 0x30
   134d0:	ldrb	r5, [r2, #1]
   134d4:	cmp	r5, #63	; 0x3f
   134d8:	beq	13940 <close@plt+0x2a18>
   134dc:	mov	r2, #0
   134e0:	mov	r6, r2
   134e4:	mov	r5, #63	; 0x3f
   134e8:	b	12998 <close@plt+0x1a70>
   134ec:	ldr	r3, [sp, #32]
   134f0:	cmp	r3, #0
   134f4:	bne	138cc <close@plt+0x29a4>
   134f8:	mov	r6, r3
   134fc:	mov	r5, #63	; 0x3f
   13500:	b	129e0 <close@plt+0x1ab8>
   13504:	ldr	r3, [sp, #24]
   13508:	cmn	r3, #1
   1350c:	mov	r3, #0
   13510:	str	r3, [sp, #108]	; 0x6c
   13514:	str	r3, [sp, #112]	; 0x70
   13518:	bne	13528 <close@plt+0x2600>
   1351c:	ldr	r0, [sp, #36]	; 0x24
   13520:	bl	10e50 <strlen@plt>
   13524:	str	r0, [sp, #24]
   13528:	mov	r3, #0
   1352c:	str	sl, [sp, #88]	; 0x58
   13530:	ldr	sl, [sp, #36]	; 0x24
   13534:	str	r5, [sp, #92]	; 0x5c
   13538:	mov	r5, r3
   1353c:	str	r7, [sp, #96]	; 0x60
   13540:	str	r4, [sp, #100]	; 0x64
   13544:	str	r8, [sp, #84]	; 0x54
   13548:	ldr	r3, [sp, #24]
   1354c:	add	r4, r9, r5
   13550:	add	r7, sl, r4
   13554:	sub	r2, r3, r4
   13558:	mov	r1, r7
   1355c:	add	r3, sp, #108	; 0x6c
   13560:	add	r0, sp, #104	; 0x68
   13564:	bl	150c0 <close@plt+0x4198>
   13568:	subs	r8, r0, #0
   1356c:	beq	135bc <close@plt+0x2694>
   13570:	cmn	r8, #1
   13574:	beq	1391c <close@plt+0x29f4>
   13578:	cmn	r8, #2
   1357c:	beq	13a3c <close@plt+0x2b14>
   13580:	ldr	r3, [sp, #32]
   13584:	cmp	fp, #2
   13588:	movne	r3, #0
   1358c:	andeq	r3, r3, #1
   13590:	cmp	r3, #0
   13594:	bne	1371c <close@plt+0x27f4>
   13598:	ldr	r0, [sp, #104]	; 0x68
   1359c:	bl	10d9c <iswprint@plt>
   135a0:	add	r5, r5, r8
   135a4:	cmp	r0, #0
   135a8:	add	r0, sp, #108	; 0x6c
   135ac:	moveq	r6, #0
   135b0:	bl	10d48 <mbsinit@plt>
   135b4:	cmp	r0, #0
   135b8:	beq	13548 <close@plt+0x2620>
   135bc:	ldr	r3, [sp, #28]
   135c0:	mov	ip, r5
   135c4:	eor	r2, r6, #1
   135c8:	ldr	r5, [sp, #92]	; 0x5c
   135cc:	ldr	r7, [sp, #96]	; 0x60
   135d0:	ldr	r4, [sp, #100]	; 0x64
   135d4:	ldr	r8, [sp, #84]	; 0x54
   135d8:	ldr	sl, [sp, #88]	; 0x58
   135dc:	and	r2, r2, r3
   135e0:	cmp	ip, #1
   135e4:	bls	12ee4 <close@plt+0x1fbc>
   135e8:	add	r1, ip, r9
   135ec:	ldr	lr, [sp, #48]	; 0x30
   135f0:	mov	r0, #0
   135f4:	str	r6, [sp, #48]	; 0x30
   135f8:	mov	ip, #39	; 0x27
   135fc:	ldr	r6, [sp, #44]	; 0x2c
   13600:	b	136b8 <close@plt+0x2790>
   13604:	ldr	r0, [sp, #32]
   13608:	sub	r3, fp, #2
   1360c:	cmp	r0, #0
   13610:	clz	r3, r3
   13614:	lsr	r3, r3, #5
   13618:	bne	13820 <close@plt+0x28f8>
   1361c:	eor	r0, r6, #1
   13620:	ands	r3, r3, r0
   13624:	beq	13654 <close@plt+0x272c>
   13628:	add	r0, r4, #1
   1362c:	cmp	sl, r4
   13630:	strbhi	ip, [r8, r4]
   13634:	cmp	sl, r0
   13638:	movhi	r6, #36	; 0x24
   1363c:	strbhi	r6, [r8, r0]
   13640:	add	r0, r4, #2
   13644:	mov	r6, r3
   13648:	add	r4, r4, #3
   1364c:	cmp	sl, r0
   13650:	strbhi	ip, [r8, r0]
   13654:	cmp	sl, r4
   13658:	movhi	r3, #92	; 0x5c
   1365c:	strbhi	r3, [r8, r4]
   13660:	add	r3, r4, #1
   13664:	cmp	sl, r3
   13668:	lsrhi	r0, r5, #6
   1366c:	addhi	r0, r0, #48	; 0x30
   13670:	strbhi	r0, [r8, r3]
   13674:	add	r0, r4, #2
   13678:	cmp	sl, r0
   1367c:	lsrhi	r3, r5, #3
   13680:	andhi	r3, r3, #7
   13684:	addhi	r3, r3, #48	; 0x30
   13688:	add	r9, r9, #1
   1368c:	strbhi	r3, [r8, r0]
   13690:	and	r5, r5, #7
   13694:	cmp	r9, r1
   13698:	add	r5, r5, #48	; 0x30
   1369c:	add	r4, r4, #3
   136a0:	bcs	13840 <close@plt+0x2918>
   136a4:	mov	r0, r2
   136a8:	cmp	sl, r4
   136ac:	strbhi	r5, [r8, r4]
   136b0:	ldrb	r5, [lr, #1]!
   136b4:	add	r4, r4, #1
   136b8:	cmp	r2, #0
   136bc:	bne	13604 <close@plt+0x26dc>
   136c0:	eor	r3, r0, #1
   136c4:	and	r3, r3, r6
   136c8:	cmp	r7, #0
   136cc:	uxtb	r3, r3
   136d0:	beq	136e4 <close@plt+0x27bc>
   136d4:	cmp	sl, r4
   136d8:	movhi	r7, #92	; 0x5c
   136dc:	strbhi	r7, [r8, r4]
   136e0:	add	r4, r4, #1
   136e4:	add	r9, r9, #1
   136e8:	cmp	r9, r1
   136ec:	bcs	13834 <close@plt+0x290c>
   136f0:	cmp	r3, #0
   136f4:	beq	13860 <close@plt+0x2938>
   136f8:	cmp	sl, r4
   136fc:	add	r3, r4, #1
   13700:	strbhi	ip, [r8, r4]
   13704:	mov	r7, #0
   13708:	cmp	sl, r3
   1370c:	strbhi	ip, [r8, r3]
   13710:	add	r4, r4, #2
   13714:	mov	r6, r7
   13718:	b	136a8 <close@plt+0x2780>
   1371c:	cmp	r8, #1
   13720:	beq	13598 <close@plt+0x2670>
   13724:	add	r1, r4, #1
   13728:	add	r3, sl, r8
   1372c:	add	r1, sl, r1
   13730:	add	r4, r3, r4
   13734:	ldrb	r3, [r1], #1
   13738:	sub	r3, r3, #91	; 0x5b
   1373c:	cmp	r3, #33	; 0x21
   13740:	ldrls	pc, [pc, r3, lsl #2]
   13744:	b	137d0 <close@plt+0x28a8>
   13748:	ldrdeq	r3, [r1], -ip
   1374c:	ldrdeq	r3, [r1], -ip
   13750:	ldrdeq	r3, [r1], -r0
   13754:	ldrdeq	r3, [r1], -ip
   13758:	ldrdeq	r3, [r1], -r0
   1375c:	ldrdeq	r3, [r1], -ip
   13760:	ldrdeq	r3, [r1], -r0
   13764:	ldrdeq	r3, [r1], -r0
   13768:	ldrdeq	r3, [r1], -r0
   1376c:	ldrdeq	r3, [r1], -r0
   13770:	ldrdeq	r3, [r1], -r0
   13774:	ldrdeq	r3, [r1], -r0
   13778:	ldrdeq	r3, [r1], -r0
   1377c:	ldrdeq	r3, [r1], -r0
   13780:	ldrdeq	r3, [r1], -r0
   13784:	ldrdeq	r3, [r1], -r0
   13788:	ldrdeq	r3, [r1], -r0
   1378c:	ldrdeq	r3, [r1], -r0
   13790:	ldrdeq	r3, [r1], -r0
   13794:	ldrdeq	r3, [r1], -r0
   13798:	ldrdeq	r3, [r1], -r0
   1379c:	ldrdeq	r3, [r1], -r0
   137a0:	ldrdeq	r3, [r1], -r0
   137a4:	ldrdeq	r3, [r1], -r0
   137a8:	ldrdeq	r3, [r1], -r0
   137ac:	ldrdeq	r3, [r1], -r0
   137b0:	ldrdeq	r3, [r1], -r0
   137b4:	ldrdeq	r3, [r1], -r0
   137b8:	ldrdeq	r3, [r1], -r0
   137bc:	ldrdeq	r3, [r1], -r0
   137c0:	ldrdeq	r3, [r1], -r0
   137c4:	ldrdeq	r3, [r1], -r0
   137c8:	ldrdeq	r3, [r1], -r0
   137cc:	ldrdeq	r3, [r1], -ip
   137d0:	cmp	r4, r1
   137d4:	bne	13734 <close@plt+0x280c>
   137d8:	b	13598 <close@plt+0x2670>
   137dc:	ldr	fp, [sp, #84]	; 0x54
   137e0:	ldr	sl, [sp, #88]	; 0x58
   137e4:	mov	r8, #2
   137e8:	b	12ca4 <close@plt+0x1d7c>
   137ec:	cmp	sl, r4
   137f0:	movls	r1, r4
   137f4:	bls	12df4 <close@plt+0x1ecc>
   137f8:	ldr	r3, [sp, #44]	; 0x2c
   137fc:	b	12de4 <close@plt+0x1ebc>
   13800:	str	sl, [sp, #72]	; 0x48
   13804:	ldr	sl, [sp, #32]
   13808:	b	12c1c <close@plt+0x1cf4>
   1380c:	add	r9, r9, #1
   13810:	b	12510 <close@plt+0x15e8>
   13814:	ldr	r2, [sp, #28]
   13818:	mov	r6, #0
   1381c:	b	135e8 <close@plt+0x26c0>
   13820:	str	fp, [sp, #160]	; 0xa0
   13824:	str	r3, [sp, #28]
   13828:	mov	fp, r8
   1382c:	ldr	r8, [sp, #160]	; 0xa0
   13830:	b	12ca4 <close@plt+0x1d7c>
   13834:	str	r6, [sp, #44]	; 0x2c
   13838:	ldr	r6, [sp, #48]	; 0x30
   1383c:	b	12c4c <close@plt+0x1d24>
   13840:	str	r6, [sp, #44]	; 0x2c
   13844:	ldr	r6, [sp, #48]	; 0x30
   13848:	b	12a58 <close@plt+0x1b30>
   1384c:	add	r4, r4, #4
   13850:	str	r3, [sp, #44]	; 0x2c
   13854:	mov	r6, #0
   13858:	mov	r5, #48	; 0x30
   1385c:	b	129e0 <close@plt+0x1ab8>
   13860:	mov	r7, r3
   13864:	b	136a8 <close@plt+0x2780>
   13868:	ldr	r3, [pc, #-1624]	; 13218 <close@plt+0x22f0>
   1386c:	mov	r4, #1
   13870:	str	r4, [sp, #40]	; 0x28
   13874:	str	r4, [sp, #28]
   13878:	str	r4, [sp, #52]	; 0x34
   1387c:	str	sl, [sp, #72]	; 0x48
   13880:	str	sl, [sp, #68]	; 0x44
   13884:	str	sl, [sp, #44]	; 0x2c
   13888:	str	sl, [sp, #32]
   1388c:	str	r3, [sp, #60]	; 0x3c
   13890:	b	12500 <close@plt+0x15d8>
   13894:	mov	r3, r6
   13898:	mov	r5, #48	; 0x30
   1389c:	mov	r6, #0
   138a0:	b	129e0 <close@plt+0x1ab8>
   138a4:	cmp	sl, r4
   138a8:	movhi	r3, #48	; 0x30
   138ac:	strbhi	r3, [r8, r4]
   138b0:	add	r3, r1, #2
   138b4:	cmp	sl, r3
   138b8:	movhi	r0, #48	; 0x30
   138bc:	strbhi	r0, [r8, r3]
   138c0:	add	r4, r1, #3
   138c4:	mov	r5, #48	; 0x30
   138c8:	b	12e28 <close@plt+0x1f00>
   138cc:	str	fp, [sp, #160]	; 0xa0
   138d0:	mov	fp, r8
   138d4:	ldr	r8, [sp, #160]	; 0xa0
   138d8:	b	12ca4 <close@plt+0x1d7c>
   138dc:	ldr	r2, [sp, #80]	; 0x50
   138e0:	ldrb	r3, [r2]
   138e4:	cmp	r3, #0
   138e8:	beq	124d0 <close@plt+0x15a8>
   138ec:	cmp	sl, r4
   138f0:	strbhi	r3, [fp, r4]
   138f4:	ldrb	r3, [r2, #1]!
   138f8:	add	r4, r4, #1
   138fc:	cmp	r3, #0
   13900:	bne	138ec <close@plt+0x29c4>
   13904:	b	124d0 <close@plt+0x15a8>
   13908:	str	fp, [sp, #160]	; 0xa0
   1390c:	mov	r3, #0
   13910:	mov	fp, r8
   13914:	ldr	r8, [sp, #160]	; 0xa0
   13918:	b	12d38 <close@plt+0x1e10>
   1391c:	mov	ip, r5
   13920:	ldr	r7, [sp, #96]	; 0x60
   13924:	ldr	r5, [sp, #92]	; 0x5c
   13928:	ldr	r4, [sp, #100]	; 0x64
   1392c:	ldr	r8, [sp, #84]	; 0x54
   13930:	ldr	sl, [sp, #88]	; 0x58
   13934:	ldr	r2, [sp, #28]
   13938:	mov	r6, #0
   1393c:	b	135e0 <close@plt+0x26b8>
   13940:	ldr	r2, [sp, #36]	; 0x24
   13944:	ldrb	r1, [r2, r3]
   13948:	sub	r2, r1, #33	; 0x21
   1394c:	cmp	r2, #29
   13950:	ldrls	pc, [pc, r2, lsl #2]
   13954:	b	13a30 <close@plt+0x2b08>
   13958:	ldrdeq	r3, [r1], -r0
   1395c:	andeq	r3, r1, r0, lsr sl
   13960:	andeq	r3, r1, r0, lsr sl
   13964:	andeq	r3, r1, r0, lsr sl
   13968:	andeq	r3, r1, r0, lsr sl
   1396c:	andeq	r3, r1, r0, lsr sl
   13970:	ldrdeq	r3, [r1], -r0
   13974:	ldrdeq	r3, [r1], -r0
   13978:	ldrdeq	r3, [r1], -r0
   1397c:	andeq	r3, r1, r0, lsr sl
   13980:	andeq	r3, r1, r0, lsr sl
   13984:	andeq	r3, r1, r0, lsr sl
   13988:	ldrdeq	r3, [r1], -r0
   1398c:	andeq	r3, r1, r0, lsr sl
   13990:	ldrdeq	r3, [r1], -r0
   13994:	andeq	r3, r1, r0, lsr sl
   13998:	andeq	r3, r1, r0, lsr sl
   1399c:	andeq	r3, r1, r0, lsr sl
   139a0:	andeq	r3, r1, r0, lsr sl
   139a4:	andeq	r3, r1, r0, lsr sl
   139a8:	andeq	r3, r1, r0, lsr sl
   139ac:	andeq	r3, r1, r0, lsr sl
   139b0:	andeq	r3, r1, r0, lsr sl
   139b4:	andeq	r3, r1, r0, lsr sl
   139b8:	andeq	r3, r1, r0, lsr sl
   139bc:	andeq	r3, r1, r0, lsr sl
   139c0:	andeq	r3, r1, r0, lsr sl
   139c4:	ldrdeq	r3, [r1], -r0
   139c8:	ldrdeq	r3, [r1], -r0
   139cc:	ldrdeq	r3, [r1], -r0
   139d0:	ldr	r2, [sp, #32]
   139d4:	cmp	r2, #0
   139d8:	bne	13adc <close@plt+0x2bb4>
   139dc:	cmp	sl, r4
   139e0:	movhi	r2, #63	; 0x3f
   139e4:	strbhi	r2, [r8, r4]
   139e8:	add	r2, r4, #1
   139ec:	cmp	sl, r2
   139f0:	movhi	r0, #34	; 0x22
   139f4:	strbhi	r0, [r8, r2]
   139f8:	add	r2, r4, #2
   139fc:	cmp	sl, r2
   13a00:	movhi	r0, #34	; 0x22
   13a04:	strbhi	r0, [r8, r2]
   13a08:	add	r2, r4, #3
   13a0c:	cmp	sl, r2
   13a10:	movhi	r0, #63	; 0x3f
   13a14:	strbhi	r0, [r8, r2]
   13a18:	mov	r2, #0
   13a1c:	add	r4, r4, #4
   13a20:	mov	r5, r1
   13a24:	mov	r9, r3
   13a28:	mov	r6, r2
   13a2c:	b	12e28 <close@plt+0x1f00>
   13a30:	mov	r2, #0
   13a34:	mov	r6, r2
   13a38:	b	12998 <close@plt+0x1a70>
   13a3c:	ldr	r0, [sp, #24]
   13a40:	mov	r1, r4
   13a44:	cmp	r1, r0
   13a48:	mov	r2, r7
   13a4c:	mov	r3, r5
   13a50:	mov	ip, r5
   13a54:	ldr	r7, [sp, #96]	; 0x60
   13a58:	ldr	r5, [sp, #92]	; 0x5c
   13a5c:	ldr	r4, [sp, #100]	; 0x64
   13a60:	ldr	r8, [sp, #84]	; 0x54
   13a64:	ldr	sl, [sp, #88]	; 0x58
   13a68:	bcs	13a9c <close@plt+0x2b74>
   13a6c:	ldrb	r6, [r2]
   13a70:	cmp	r6, #0
   13a74:	bne	13a88 <close@plt+0x2b60>
   13a78:	b	13bb8 <close@plt+0x2c90>
   13a7c:	ldrb	r6, [r2, #1]!
   13a80:	cmp	r6, #0
   13a84:	beq	13b40 <close@plt+0x2c18>
   13a88:	add	r3, r3, #1
   13a8c:	add	r1, r9, r3
   13a90:	cmp	r1, r0
   13a94:	bcc	13a7c <close@plt+0x2b54>
   13a98:	mov	ip, r3
   13a9c:	ldr	r2, [sp, #28]
   13aa0:	mov	r6, #0
   13aa4:	b	135e0 <close@plt+0x26b8>
   13aa8:	mov	r3, #1
   13aac:	str	r3, [sp, #40]	; 0x28
   13ab0:	str	r3, [sp, #32]
   13ab4:	str	r3, [sp, #28]
   13ab8:	str	r3, [sp, #52]	; 0x34
   13abc:	ldr	r3, [pc, #-2220]	; 13218 <close@plt+0x22f0>
   13ac0:	mov	r2, #0
   13ac4:	str	r2, [sp, #68]	; 0x44
   13ac8:	str	r2, [sp, #44]	; 0x2c
   13acc:	str	r2, [sp, #72]	; 0x48
   13ad0:	mov	r4, r2
   13ad4:	str	r3, [sp, #60]	; 0x3c
   13ad8:	b	12500 <close@plt+0x15d8>
   13adc:	str	fp, [sp, #160]	; 0xa0
   13ae0:	mov	fp, r8
   13ae4:	ldr	r8, [sp, #160]	; 0xa0
   13ae8:	b	12cb0 <close@plt+0x1d88>
   13aec:	mov	r2, r3
   13af0:	ldr	r3, [sp, #60]	; 0x3c
   13af4:	cmp	r3, #0
   13af8:	moveq	r2, #0
   13afc:	andne	r2, r2, #1
   13b00:	cmp	r2, #0
   13b04:	beq	13b30 <close@plt+0x2c08>
   13b08:	mov	r2, r3
   13b0c:	ldrb	r3, [r3]
   13b10:	cmp	r3, #0
   13b14:	beq	13b30 <close@plt+0x2c08>
   13b18:	cmp	sl, r4
   13b1c:	strbhi	r3, [fp, r4]
   13b20:	ldrb	r3, [r2, #1]!
   13b24:	add	r4, r4, #1
   13b28:	cmp	r3, #0
   13b2c:	bne	13b18 <close@plt+0x2bf0>
   13b30:	cmp	sl, r4
   13b34:	movhi	r3, #0
   13b38:	strbhi	r3, [fp, r4]
   13b3c:	b	12cf0 <close@plt+0x1dc8>
   13b40:	mov	ip, r3
   13b44:	ldr	r2, [sp, #28]
   13b48:	b	135e0 <close@plt+0x26b8>
   13b4c:	str	fp, [sp, #160]	; 0xa0
   13b50:	mov	fp, r8
   13b54:	ldr	r8, [sp, #160]	; 0xa0
   13b58:	sub	r3, r8, #2
   13b5c:	clz	r3, r3
   13b60:	lsr	r3, r3, #5
   13b64:	str	r3, [sp, #28]
   13b68:	b	12ca4 <close@plt+0x1d7c>
   13b6c:	ldr	r3, [sp, #76]	; 0x4c
   13b70:	mov	ip, #5
   13b74:	str	r3, [sp, #16]
   13b78:	ldr	r3, [sp, #80]	; 0x50
   13b7c:	ldr	r2, [sp, #36]	; 0x24
   13b80:	str	r3, [sp, #12]
   13b84:	ldr	r3, [sp, #56]	; 0x38
   13b88:	ldr	r1, [sp, #72]	; 0x48
   13b8c:	str	r3, [sp, #8]
   13b90:	ldr	r3, [sp, #164]	; 0xa4
   13b94:	mov	r0, fp
   13b98:	str	r3, [sp, #4]
   13b9c:	str	ip, [sp]
   13ba0:	ldr	r3, [sp, #24]
   13ba4:	bl	12408 <close@plt+0x14e0>
   13ba8:	mov	r4, r0
   13bac:	b	12cf0 <close@plt+0x1dc8>
   13bb0:	mov	r8, #2
   13bb4:	b	12ca4 <close@plt+0x1d7c>
   13bb8:	ldr	r2, [sp, #28]
   13bbc:	b	135e0 <close@plt+0x26b8>
   13bc0:	mov	r3, #0
   13bc4:	str	r3, [sp, #68]	; 0x44
   13bc8:	str	r3, [sp, #44]	; 0x2c
   13bcc:	str	r3, [sp, #72]	; 0x48
   13bd0:	str	r3, [sp, #28]
   13bd4:	mov	r4, r3
   13bd8:	ldr	r3, [pc, #-2500]	; 1321c <close@plt+0x22f4>
   13bdc:	mov	r2, #1
   13be0:	str	r2, [sp, #40]	; 0x28
   13be4:	str	r2, [sp, #32]
   13be8:	str	r2, [sp, #52]	; 0x34
   13bec:	str	r3, [sp, #60]	; 0x3c
   13bf0:	b	12500 <close@plt+0x15d8>
   13bf4:	bl	10d78 <__stack_chk_fail@plt>
   13bf8:	mov	r5, r3
   13bfc:	mov	r6, #0
   13c00:	b	129f4 <close@plt+0x1acc>
   13c04:	mov	r3, #0
   13c08:	mov	r2, #1
   13c0c:	str	r3, [sp, #44]	; 0x2c
   13c10:	str	r3, [sp, #72]	; 0x48
   13c14:	str	r2, [sp, #40]	; 0x28
   13c18:	b	12b10 <close@plt+0x1be8>
   13c1c:	bl	10f1c <abort@plt>
   13c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c24:	sub	sp, sp, #44	; 0x2c
   13c28:	mov	r6, r0
   13c2c:	mov	r4, r3
   13c30:	mov	sl, r1
   13c34:	mov	fp, r2
   13c38:	bl	10e5c <__errno_location@plt>
   13c3c:	ldr	r7, [pc, #364]	; 13db0 <close@plt+0x2e88>
   13c40:	cmp	r6, #0
   13c44:	ldr	r5, [r7]
   13c48:	ldr	r3, [r0]
   13c4c:	str	r3, [sp, #24]
   13c50:	blt	13dac <close@plt+0x2e84>
   13c54:	ldr	r3, [r7, #4]
   13c58:	mov	r8, r0
   13c5c:	cmp	r3, r6
   13c60:	bgt	13cac <close@plt+0x2d84>
   13c64:	cmn	r6, #-268435454	; 0xf0000002
   13c68:	bgt	13da8 <close@plt+0x2e80>
   13c6c:	add	r9, r6, #1
   13c70:	add	r3, r7, #8
   13c74:	cmp	r5, r3
   13c78:	lsl	r1, r9, #3
   13c7c:	beq	13d88 <close@plt+0x2e60>
   13c80:	mov	r0, r5
   13c84:	bl	14a20 <close@plt+0x3af8>
   13c88:	mov	r5, r0
   13c8c:	str	r0, [r7]
   13c90:	ldr	r0, [r7, #4]
   13c94:	mov	r1, #0
   13c98:	sub	r2, r9, r0
   13c9c:	add	r0, r5, r0, lsl #3
   13ca0:	lsl	r2, r2, #3
   13ca4:	bl	10e74 <memset@plt>
   13ca8:	str	r9, [r7, #4]
   13cac:	add	r3, r5, r6, lsl #3
   13cb0:	ldr	r1, [r4, #4]
   13cb4:	ldr	r7, [r3, #4]
   13cb8:	ldr	r9, [r5, r6, lsl #3]
   13cbc:	ldr	r2, [r4, #40]	; 0x28
   13cc0:	ldr	ip, [r4, #44]	; 0x2c
   13cc4:	str	r3, [sp, #28]
   13cc8:	ldr	r3, [r4]
   13ccc:	orr	r1, r1, #1
   13cd0:	add	lr, r4, #8
   13cd4:	str	r1, [sp, #36]	; 0x24
   13cd8:	str	r1, [sp, #4]
   13cdc:	str	r2, [sp, #12]
   13ce0:	str	r3, [sp]
   13ce4:	mov	r0, r7
   13ce8:	mov	r1, r9
   13cec:	str	ip, [sp, #16]
   13cf0:	str	lr, [sp, #8]
   13cf4:	mov	r3, fp
   13cf8:	mov	r2, sl
   13cfc:	str	lr, [sp, #32]
   13d00:	bl	12408 <close@plt+0x14e0>
   13d04:	cmp	r9, r0
   13d08:	bhi	13d74 <close@plt+0x2e4c>
   13d0c:	ldr	r3, [pc, #160]	; 13db4 <close@plt+0x2e8c>
   13d10:	add	r9, r0, #1
   13d14:	cmp	r7, r3
   13d18:	str	r9, [r5, r6, lsl #3]
   13d1c:	beq	13d28 <close@plt+0x2e00>
   13d20:	mov	r0, r7
   13d24:	bl	10d24 <free@plt>
   13d28:	mov	r0, r9
   13d2c:	bl	149c4 <close@plt+0x3a9c>
   13d30:	ldr	lr, [sp, #28]
   13d34:	ldr	ip, [r4, #44]	; 0x2c
   13d38:	ldr	r5, [r4, #40]	; 0x28
   13d3c:	mov	r3, fp
   13d40:	mov	r2, sl
   13d44:	mov	r1, r9
   13d48:	str	r0, [lr, #4]
   13d4c:	ldr	lr, [r4]
   13d50:	ldr	r4, [sp, #32]
   13d54:	str	ip, [sp, #16]
   13d58:	str	r4, [sp, #8]
   13d5c:	ldr	r4, [sp, #36]	; 0x24
   13d60:	str	r5, [sp, #12]
   13d64:	str	r4, [sp, #4]
   13d68:	str	lr, [sp]
   13d6c:	mov	r7, r0
   13d70:	bl	12408 <close@plt+0x14e0>
   13d74:	ldr	r3, [sp, #24]
   13d78:	mov	r0, r7
   13d7c:	str	r3, [r8]
   13d80:	add	sp, sp, #44	; 0x2c
   13d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d88:	mov	r0, #0
   13d8c:	bl	14a20 <close@plt+0x3af8>
   13d90:	ldr	r3, [pc, #32]	; 13db8 <close@plt+0x2e90>
   13d94:	mov	r5, r0
   13d98:	ldm	r3, {r0, r1}
   13d9c:	str	r5, [r7]
   13da0:	stm	r5, {r0, r1}
   13da4:	b	13c90 <close@plt+0x2d68>
   13da8:	bl	14c0c <close@plt+0x3ce4>
   13dac:	bl	10f1c <abort@plt>
   13db0:	strdeq	r7, [r2], -r4
   13db4:	andeq	r7, r2, r4, lsl #3
   13db8:	strdeq	r7, [r2], -ip
   13dbc:	push	{r4, r5, r6, lr}
   13dc0:	mov	r5, r0
   13dc4:	bl	10e5c <__errno_location@plt>
   13dc8:	cmp	r5, #0
   13dcc:	mov	r1, #48	; 0x30
   13dd0:	mov	r4, r0
   13dd4:	ldr	r0, [pc, #16]	; 13dec <close@plt+0x2ec4>
   13dd8:	ldr	r6, [r4]
   13ddc:	movne	r0, r5
   13de0:	bl	14bcc <close@plt+0x3ca4>
   13de4:	str	r6, [r4]
   13de8:	pop	{r4, r5, r6, pc}
   13dec:	andeq	r7, r2, r4, lsl #5
   13df0:	ldr	r3, [pc, #12]	; 13e04 <close@plt+0x2edc>
   13df4:	cmp	r0, #0
   13df8:	moveq	r0, r3
   13dfc:	ldr	r0, [r0]
   13e00:	bx	lr
   13e04:	andeq	r7, r2, r4, lsl #5
   13e08:	ldr	r3, [pc, #12]	; 13e1c <close@plt+0x2ef4>
   13e0c:	cmp	r0, #0
   13e10:	moveq	r0, r3
   13e14:	str	r1, [r0]
   13e18:	bx	lr
   13e1c:	andeq	r7, r2, r4, lsl #5
   13e20:	ldr	r3, [pc, #52]	; 13e5c <close@plt+0x2f34>
   13e24:	cmp	r0, #0
   13e28:	moveq	r0, r3
   13e2c:	add	r3, r0, #8
   13e30:	push	{lr}		; (str lr, [sp, #-4]!)
   13e34:	lsr	lr, r1, #5
   13e38:	and	r1, r1, #31
   13e3c:	ldr	ip, [r3, lr, lsl #2]
   13e40:	lsr	r0, ip, r1
   13e44:	eor	r2, r2, r0
   13e48:	and	r2, r2, #1
   13e4c:	and	r0, r0, #1
   13e50:	eor	r1, ip, r2, lsl r1
   13e54:	str	r1, [r3, lr, lsl #2]
   13e58:	pop	{pc}		; (ldr pc, [sp], #4)
   13e5c:	andeq	r7, r2, r4, lsl #5
   13e60:	ldr	r3, [pc, #16]	; 13e78 <close@plt+0x2f50>
   13e64:	cmp	r0, #0
   13e68:	movne	r3, r0
   13e6c:	ldr	r0, [r3, #4]
   13e70:	str	r1, [r3, #4]
   13e74:	bx	lr
   13e78:	andeq	r7, r2, r4, lsl #5
   13e7c:	ldr	r3, [pc, #44]	; 13eb0 <close@plt+0x2f88>
   13e80:	cmp	r0, #0
   13e84:	moveq	r0, r3
   13e88:	mov	ip, #10
   13e8c:	cmp	r2, #0
   13e90:	cmpne	r1, #0
   13e94:	str	ip, [r0]
   13e98:	beq	13ea8 <close@plt+0x2f80>
   13e9c:	str	r1, [r0, #40]	; 0x28
   13ea0:	str	r2, [r0, #44]	; 0x2c
   13ea4:	bx	lr
   13ea8:	push	{r4, lr}
   13eac:	bl	10f1c <abort@plt>
   13eb0:	andeq	r7, r2, r4, lsl #5
   13eb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13eb8:	sub	sp, sp, #24
   13ebc:	ldr	ip, [pc, #108]	; 13f30 <close@plt+0x3008>
   13ec0:	ldr	r4, [sp, #56]	; 0x38
   13ec4:	mov	r9, r2
   13ec8:	cmp	r4, #0
   13ecc:	moveq	r4, ip
   13ed0:	mov	sl, r3
   13ed4:	mov	r7, r0
   13ed8:	mov	r8, r1
   13edc:	bl	10e5c <__errno_location@plt>
   13ee0:	ldr	r3, [r4, #44]	; 0x2c
   13ee4:	mov	r1, r8
   13ee8:	ldr	r6, [r0]
   13eec:	str	r3, [sp, #16]
   13ef0:	ldr	r2, [r4, #40]	; 0x28
   13ef4:	add	r3, r4, #8
   13ef8:	str	r3, [sp, #8]
   13efc:	str	r2, [sp, #12]
   13f00:	ldr	r2, [r4, #4]
   13f04:	mov	r5, r0
   13f08:	str	r2, [sp, #4]
   13f0c:	ldr	ip, [r4]
   13f10:	mov	r3, sl
   13f14:	mov	r2, r9
   13f18:	mov	r0, r7
   13f1c:	str	ip, [sp]
   13f20:	bl	12408 <close@plt+0x14e0>
   13f24:	str	r6, [r5]
   13f28:	add	sp, sp, #24
   13f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f30:	andeq	r7, r2, r4, lsl #5
   13f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f38:	cmp	r3, #0
   13f3c:	sub	sp, sp, #44	; 0x2c
   13f40:	ldr	r4, [pc, #192]	; 14008 <close@plt+0x30e0>
   13f44:	mov	r6, r2
   13f48:	movne	r4, r3
   13f4c:	mov	r9, r1
   13f50:	mov	r8, r0
   13f54:	bl	10e5c <__errno_location@plt>
   13f58:	ldr	r3, [r4, #44]	; 0x2c
   13f5c:	ldr	r5, [r4, #4]
   13f60:	add	sl, r4, #8
   13f64:	cmp	r6, #0
   13f68:	orreq	r5, r5, #1
   13f6c:	mov	r1, #0
   13f70:	ldr	r2, [r0]
   13f74:	str	r3, [sp, #16]
   13f78:	ldr	r3, [r4, #40]	; 0x28
   13f7c:	stmib	sp, {r5, sl}
   13f80:	str	r3, [sp, #12]
   13f84:	ldr	r3, [r4]
   13f88:	mov	r7, r0
   13f8c:	str	r2, [sp, #28]
   13f90:	str	r3, [sp]
   13f94:	mov	r2, r8
   13f98:	mov	r3, r9
   13f9c:	mov	r0, r1
   13fa0:	bl	12408 <close@plt+0x14e0>
   13fa4:	add	r1, r0, #1
   13fa8:	mov	fp, r0
   13fac:	mov	r0, r1
   13fb0:	str	r1, [sp, #36]	; 0x24
   13fb4:	bl	149c4 <close@plt+0x3a9c>
   13fb8:	ldr	r3, [r4, #44]	; 0x2c
   13fbc:	mov	r2, r8
   13fc0:	str	r3, [sp, #16]
   13fc4:	ldr	r3, [r4, #40]	; 0x28
   13fc8:	str	r5, [sp, #4]
   13fcc:	str	r3, [sp, #12]
   13fd0:	str	sl, [sp, #8]
   13fd4:	ldr	ip, [r4]
   13fd8:	ldr	r1, [sp, #36]	; 0x24
   13fdc:	mov	r3, r9
   13fe0:	str	ip, [sp]
   13fe4:	str	r0, [sp, #32]
   13fe8:	bl	12408 <close@plt+0x14e0>
   13fec:	ldr	r2, [sp, #28]
   13ff0:	cmp	r6, #0
   13ff4:	str	r2, [r7]
   13ff8:	ldr	r0, [sp, #32]
   13ffc:	strne	fp, [r6]
   14000:	add	sp, sp, #44	; 0x2c
   14004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14008:	andeq	r7, r2, r4, lsl #5
   1400c:	mov	r3, r2
   14010:	mov	r2, #0
   14014:	b	13f34 <close@plt+0x300c>
   14018:	push	{r4, r5, r6, r7, r8, lr}
   1401c:	ldr	r6, [pc, #112]	; 14094 <close@plt+0x316c>
   14020:	ldr	r3, [r6, #4]
   14024:	ldr	r7, [r6]
   14028:	cmp	r3, #1
   1402c:	ble	14050 <close@plt+0x3128>
   14030:	sub	r5, r7, #8
   14034:	add	r5, r5, r3, lsl #3
   14038:	mov	r4, r7
   1403c:	ldr	r0, [r4, #12]
   14040:	add	r4, r4, #8
   14044:	bl	10d24 <free@plt>
   14048:	cmp	r4, r5
   1404c:	bne	1403c <close@plt+0x3114>
   14050:	ldr	r0, [r7, #4]
   14054:	ldr	r4, [pc, #60]	; 14098 <close@plt+0x3170>
   14058:	cmp	r0, r4
   1405c:	beq	14070 <close@plt+0x3148>
   14060:	bl	10d24 <free@plt>
   14064:	mov	r3, #256	; 0x100
   14068:	str	r4, [r6, #12]
   1406c:	str	r3, [r6, #8]
   14070:	ldr	r4, [pc, #36]	; 1409c <close@plt+0x3174>
   14074:	cmp	r7, r4
   14078:	beq	14088 <close@plt+0x3160>
   1407c:	mov	r0, r7
   14080:	bl	10d24 <free@plt>
   14084:	str	r4, [r6]
   14088:	mov	r3, #1
   1408c:	str	r3, [r6, #4]
   14090:	pop	{r4, r5, r6, r7, r8, pc}
   14094:	strdeq	r7, [r2], -r4
   14098:	andeq	r7, r2, r4, lsl #3
   1409c:	strdeq	r7, [r2], -ip
   140a0:	ldr	r3, [pc, #4]	; 140ac <close@plt+0x3184>
   140a4:	mvn	r2, #0
   140a8:	b	13c20 <close@plt+0x2cf8>
   140ac:	andeq	r7, r2, r4, lsl #5
   140b0:	ldr	r3, [pc]	; 140b8 <close@plt+0x3190>
   140b4:	b	13c20 <close@plt+0x2cf8>
   140b8:	andeq	r7, r2, r4, lsl #5
   140bc:	mov	r1, r0
   140c0:	ldr	r3, [pc, #8]	; 140d0 <close@plt+0x31a8>
   140c4:	mvn	r2, #0
   140c8:	mov	r0, #0
   140cc:	b	13c20 <close@plt+0x2cf8>
   140d0:	andeq	r7, r2, r4, lsl #5
   140d4:	mov	r2, r1
   140d8:	ldr	r3, [pc, #8]	; 140e8 <close@plt+0x31c0>
   140dc:	mov	r1, r0
   140e0:	mov	r0, #0
   140e4:	b	13c20 <close@plt+0x2cf8>
   140e8:	andeq	r7, r2, r4, lsl #5
   140ec:	push	{r4, r5, r6, lr}
   140f0:	sub	sp, sp, #56	; 0x38
   140f4:	ldr	r4, [pc, #68]	; 14140 <close@plt+0x3218>
   140f8:	mov	r6, r2
   140fc:	mov	r5, r0
   14100:	ldr	r3, [r4]
   14104:	add	r0, sp, #4
   14108:	str	r3, [sp, #52]	; 0x34
   1410c:	bl	12298 <close@plt+0x1370>
   14110:	add	r3, sp, #4
   14114:	mvn	r2, #0
   14118:	mov	r1, r6
   1411c:	mov	r0, r5
   14120:	bl	13c20 <close@plt+0x2cf8>
   14124:	ldr	r2, [sp, #52]	; 0x34
   14128:	ldr	r3, [r4]
   1412c:	cmp	r2, r3
   14130:	bne	1413c <close@plt+0x3214>
   14134:	add	sp, sp, #56	; 0x38
   14138:	pop	{r4, r5, r6, pc}
   1413c:	bl	10d78 <__stack_chk_fail@plt>
   14140:	andeq	r6, r2, r8, lsl #30
   14144:	push	{r4, r5, r6, r7, lr}
   14148:	sub	sp, sp, #60	; 0x3c
   1414c:	ldr	r4, [pc, #72]	; 1419c <close@plt+0x3274>
   14150:	mov	r6, r2
   14154:	mov	r7, r3
   14158:	ldr	ip, [r4]
   1415c:	mov	r5, r0
   14160:	add	r0, sp, #4
   14164:	str	ip, [sp, #52]	; 0x34
   14168:	bl	12298 <close@plt+0x1370>
   1416c:	add	r3, sp, #4
   14170:	mov	r2, r7
   14174:	mov	r1, r6
   14178:	mov	r0, r5
   1417c:	bl	13c20 <close@plt+0x2cf8>
   14180:	ldr	r2, [sp, #52]	; 0x34
   14184:	ldr	r3, [r4]
   14188:	cmp	r2, r3
   1418c:	bne	14198 <close@plt+0x3270>
   14190:	add	sp, sp, #60	; 0x3c
   14194:	pop	{r4, r5, r6, r7, pc}
   14198:	bl	10d78 <__stack_chk_fail@plt>
   1419c:	andeq	r6, r2, r8, lsl #30
   141a0:	mov	r2, r1
   141a4:	mov	r1, r0
   141a8:	mov	r0, #0
   141ac:	b	140ec <close@plt+0x31c4>
   141b0:	mov	r3, r2
   141b4:	mov	r2, r1
   141b8:	mov	r1, r0
   141bc:	mov	r0, #0
   141c0:	b	14144 <close@plt+0x321c>
   141c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   141c8:	mov	r4, r2
   141cc:	ldr	lr, [pc, #128]	; 14254 <close@plt+0x332c>
   141d0:	mov	r8, r0
   141d4:	mov	r9, r1
   141d8:	ldm	lr!, {r0, r1, r2, r3}
   141dc:	sub	sp, sp, #60	; 0x3c
   141e0:	add	ip, sp, #4
   141e4:	lsr	r6, r4, #5
   141e8:	stmia	ip!, {r0, r1, r2, r3}
   141ec:	add	r7, sp, #12
   141f0:	ldm	lr!, {r0, r1, r2, r3}
   141f4:	and	r4, r4, #31
   141f8:	ldr	r5, [pc, #88]	; 14258 <close@plt+0x3330>
   141fc:	stmia	ip!, {r0, r1, r2, r3}
   14200:	ldm	lr, {r0, r1, r2, r3}
   14204:	stm	ip, {r0, r1, r2, r3}
   14208:	mov	r2, r9
   1420c:	ldr	r3, [r7, r6, lsl #2]
   14210:	ldr	ip, [r5]
   14214:	mov	r1, r8
   14218:	mvn	r0, r3, lsr r4
   1421c:	and	r0, r0, #1
   14220:	str	ip, [sp, #52]	; 0x34
   14224:	eor	r4, r3, r0, lsl r4
   14228:	add	r3, sp, #4
   1422c:	mov	r0, #0
   14230:	str	r4, [r7, r6, lsl #2]
   14234:	bl	13c20 <close@plt+0x2cf8>
   14238:	ldr	r2, [sp, #52]	; 0x34
   1423c:	ldr	r3, [r5]
   14240:	cmp	r2, r3
   14244:	bne	14250 <close@plt+0x3328>
   14248:	add	sp, sp, #60	; 0x3c
   1424c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14250:	bl	10d78 <__stack_chk_fail@plt>
   14254:	andeq	r7, r2, r4, lsl #5
   14258:	andeq	r6, r2, r8, lsl #30
   1425c:	mov	r2, r1
   14260:	mvn	r1, #0
   14264:	b	141c4 <close@plt+0x329c>
   14268:	mov	r2, #58	; 0x3a
   1426c:	mvn	r1, #0
   14270:	b	141c4 <close@plt+0x329c>
   14274:	mov	r2, #58	; 0x3a
   14278:	b	141c4 <close@plt+0x329c>
   1427c:	push	{r4, r5, r6, r7, r8, lr}
   14280:	sub	sp, sp, #104	; 0x68
   14284:	ldr	r5, [pc, #120]	; 14304 <close@plt+0x33dc>
   14288:	mov	r6, r0
   1428c:	mov	r0, sp
   14290:	ldr	r3, [r5]
   14294:	mov	r7, r2
   14298:	str	r3, [sp, #100]	; 0x64
   1429c:	bl	12298 <close@plt+0x1370>
   142a0:	mov	ip, sp
   142a4:	add	lr, sp, #52	; 0x34
   142a8:	ldm	ip!, {r0, r1, r2, r3}
   142ac:	stmia	lr!, {r0, r1, r2, r3}
   142b0:	ldm	ip!, {r0, r1, r2, r3}
   142b4:	ldr	r8, [sp, #64]	; 0x40
   142b8:	stmia	lr!, {r0, r1, r2, r3}
   142bc:	mvn	r4, r8
   142c0:	ldm	ip, {r0, r1, r2, r3}
   142c4:	and	ip, r4, #67108864	; 0x4000000
   142c8:	eor	ip, ip, r8
   142cc:	str	ip, [sp, #64]	; 0x40
   142d0:	stm	lr, {r0, r1, r2, r3}
   142d4:	add	r3, sp, #52	; 0x34
   142d8:	mvn	r2, #0
   142dc:	mov	r1, r7
   142e0:	mov	r0, r6
   142e4:	bl	13c20 <close@plt+0x2cf8>
   142e8:	ldr	r2, [sp, #100]	; 0x64
   142ec:	ldr	r3, [r5]
   142f0:	cmp	r2, r3
   142f4:	bne	14300 <close@plt+0x33d8>
   142f8:	add	sp, sp, #104	; 0x68
   142fc:	pop	{r4, r5, r6, r7, r8, pc}
   14300:	bl	10d78 <__stack_chk_fail@plt>
   14304:	andeq	r6, r2, r8, lsl #30
   14308:	push	{r4, r5, r6, r7, r8, r9, lr}
   1430c:	mov	r6, r1
   14310:	ldr	lr, [pc, #132]	; 1439c <close@plt+0x3474>
   14314:	mov	r5, r2
   14318:	mov	r8, r0
   1431c:	mov	r9, r3
   14320:	ldm	lr!, {r0, r1, r2, r3}
   14324:	sub	sp, sp, #60	; 0x3c
   14328:	add	ip, sp, #4
   1432c:	ldr	r4, [pc, #108]	; 143a0 <close@plt+0x3478>
   14330:	stmia	ip!, {r0, r1, r2, r3}
   14334:	mov	r7, #10
   14338:	ldm	lr!, {r0, r1, r2, r3}
   1433c:	cmp	r5, #0
   14340:	cmpne	r6, #0
   14344:	str	r7, [sp, #4]
   14348:	stmia	ip!, {r0, r1, r2, r3}
   1434c:	ldm	lr, {r0, r1, r2, r3}
   14350:	ldr	lr, [r4]
   14354:	stm	ip, {r0, r1, r2, r3}
   14358:	str	lr, [sp, #52]	; 0x34
   1435c:	beq	14398 <close@plt+0x3470>
   14360:	add	r3, sp, #4
   14364:	ldr	r2, [sp, #88]	; 0x58
   14368:	mov	r1, r9
   1436c:	mov	r0, r8
   14370:	str	r6, [sp, #44]	; 0x2c
   14374:	str	r5, [sp, #48]	; 0x30
   14378:	bl	13c20 <close@plt+0x2cf8>
   1437c:	ldr	r2, [sp, #52]	; 0x34
   14380:	ldr	r3, [r4]
   14384:	cmp	r2, r3
   14388:	bne	14394 <close@plt+0x346c>
   1438c:	add	sp, sp, #60	; 0x3c
   14390:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14394:	bl	10d78 <__stack_chk_fail@plt>
   14398:	bl	10f1c <abort@plt>
   1439c:	andeq	r7, r2, r4, lsl #5
   143a0:	andeq	r6, r2, r8, lsl #30
   143a4:	push	{lr}		; (str lr, [sp, #-4]!)
   143a8:	sub	sp, sp, #12
   143ac:	mvn	ip, #0
   143b0:	str	ip, [sp]
   143b4:	bl	14308 <close@plt+0x33e0>
   143b8:	add	sp, sp, #12
   143bc:	pop	{pc}		; (ldr pc, [sp], #4)
   143c0:	push	{lr}		; (str lr, [sp, #-4]!)
   143c4:	sub	sp, sp, #12
   143c8:	mvn	ip, #0
   143cc:	mov	r3, r2
   143d0:	str	ip, [sp]
   143d4:	mov	r2, r1
   143d8:	mov	r1, r0
   143dc:	mov	r0, #0
   143e0:	bl	14308 <close@plt+0x33e0>
   143e4:	add	sp, sp, #12
   143e8:	pop	{pc}		; (ldr pc, [sp], #4)
   143ec:	push	{lr}		; (str lr, [sp, #-4]!)
   143f0:	sub	sp, sp, #12
   143f4:	str	r3, [sp]
   143f8:	mov	r3, r2
   143fc:	mov	r2, r1
   14400:	mov	r1, r0
   14404:	mov	r0, #0
   14408:	bl	14308 <close@plt+0x33e0>
   1440c:	add	sp, sp, #12
   14410:	pop	{pc}		; (ldr pc, [sp], #4)
   14414:	ldr	r3, [pc]	; 1441c <close@plt+0x34f4>
   14418:	b	13c20 <close@plt+0x2cf8>
   1441c:	andeq	r7, r2, r4, lsl #2
   14420:	mov	r2, r1
   14424:	ldr	r3, [pc, #8]	; 14434 <close@plt+0x350c>
   14428:	mov	r1, r0
   1442c:	mov	r0, #0
   14430:	b	13c20 <close@plt+0x2cf8>
   14434:	andeq	r7, r2, r4, lsl #2
   14438:	ldr	r3, [pc, #4]	; 14444 <close@plt+0x351c>
   1443c:	mvn	r2, #0
   14440:	b	13c20 <close@plt+0x2cf8>
   14444:	andeq	r7, r2, r4, lsl #2
   14448:	mov	r1, r0
   1444c:	ldr	r3, [pc, #8]	; 1445c <close@plt+0x3534>
   14450:	mvn	r2, #0
   14454:	mov	r0, #0
   14458:	b	13c20 <close@plt+0x2cf8>
   1445c:	andeq	r7, r2, r4, lsl #2
   14460:	mov	r2, #3
   14464:	mov	r1, #0
   14468:	b	14e74 <close@plt+0x3f4c>
   1446c:	push	{r4, r5, r6, lr}
   14470:	sub	sp, sp, #32
   14474:	cmp	r1, #0
   14478:	mov	r5, r0
   1447c:	ldr	r4, [sp, #48]	; 0x30
   14480:	ldr	r6, [sp, #52]	; 0x34
   14484:	beq	14514 <close@plt+0x35ec>
   14488:	strd	r2, [sp]
   1448c:	mov	r3, r1
   14490:	ldr	r2, [pc, #828]	; 147d4 <close@plt+0x38ac>
   14494:	mov	r1, #1
   14498:	bl	10e98 <__fprintf_chk@plt>
   1449c:	mov	r2, #5
   144a0:	ldr	r1, [pc, #816]	; 147d8 <close@plt+0x38b0>
   144a4:	mov	r0, #0
   144a8:	bl	10d6c <dcgettext@plt>
   144ac:	ldr	r3, [pc, #808]	; 147dc <close@plt+0x38b4>
   144b0:	ldr	r2, [pc, #808]	; 147e0 <close@plt+0x38b8>
   144b4:	str	r3, [sp]
   144b8:	mov	r1, #1
   144bc:	mov	r3, r0
   144c0:	mov	r0, r5
   144c4:	bl	10e98 <__fprintf_chk@plt>
   144c8:	ldr	r1, [pc, #788]	; 147e4 <close@plt+0x38bc>
   144cc:	mov	r2, #5
   144d0:	mov	r0, #0
   144d4:	bl	10d6c <dcgettext@plt>
   144d8:	mov	r1, r5
   144dc:	bl	10ce8 <fputs_unlocked@plt>
   144e0:	cmp	r6, #9
   144e4:	ldrls	pc, [pc, r6, lsl #2]
   144e8:	b	147c4 <close@plt+0x389c>
   144ec:	ldrdeq	r4, [r1], -r0
   144f0:	muleq	r1, r8, r5
   144f4:	andeq	r4, r1, r4, asr #11
   144f8:	strdeq	r4, [r1], -r8
   144fc:	andeq	r4, r1, r4, lsr r6
   14500:	andeq	r4, r1, r4, ror r6
   14504:			; <UNDEFINED> instruction: 0x000146bc
   14508:	andeq	r4, r1, ip, lsl #14
   1450c:	andeq	r4, r1, r4, ror #14
   14510:	andeq	r4, r1, ip, lsr #10
   14514:	str	r3, [sp]
   14518:	mov	r1, #1
   1451c:	mov	r3, r2
   14520:	ldr	r2, [pc, #704]	; 147e8 <close@plt+0x38c0>
   14524:	bl	10e98 <__fprintf_chk@plt>
   14528:	b	1449c <close@plt+0x3574>
   1452c:	ldr	r1, [pc, #696]	; 147ec <close@plt+0x38c4>
   14530:	mov	r2, #5
   14534:	mov	r0, #0
   14538:	bl	10d6c <dcgettext@plt>
   1453c:	ldr	r2, [r4, #32]
   14540:	ldr	r3, [r4, #28]
   14544:	ldr	r1, [r4, #24]
   14548:	str	r2, [sp, #28]
   1454c:	ldr	r2, [r4, #20]
   14550:	str	r3, [sp, #24]
   14554:	ldr	r3, [r4, #16]
   14558:	str	r1, [sp, #20]
   1455c:	ldr	r1, [r4, #12]
   14560:	str	r2, [sp, #16]
   14564:	ldr	r2, [r4, #8]
   14568:	str	r3, [sp, #12]
   1456c:	ldr	r3, [r4, #4]
   14570:	str	r1, [sp, #8]
   14574:	str	r2, [sp, #4]
   14578:	str	r3, [sp]
   1457c:	mov	r1, #1
   14580:	ldr	r3, [r4]
   14584:	mov	r2, r0
   14588:	mov	r0, r5
   1458c:	bl	10e98 <__fprintf_chk@plt>
   14590:	add	sp, sp, #32
   14594:	pop	{r4, r5, r6, pc}
   14598:	mov	r2, #5
   1459c:	ldr	r1, [pc, #588]	; 147f0 <close@plt+0x38c8>
   145a0:	mov	r0, #0
   145a4:	bl	10d6c <dcgettext@plt>
   145a8:	ldr	r3, [r4]
   145ac:	mov	r1, #1
   145b0:	mov	r2, r0
   145b4:	mov	r0, r5
   145b8:	add	sp, sp, #32
   145bc:	pop	{r4, r5, r6, lr}
   145c0:	b	10e98 <__fprintf_chk@plt>
   145c4:	mov	r2, #5
   145c8:	ldr	r1, [pc, #548]	; 147f4 <close@plt+0x38cc>
   145cc:	mov	r0, #0
   145d0:	bl	10d6c <dcgettext@plt>
   145d4:	ldr	r2, [r4, #4]
   145d8:	ldr	r3, [r4]
   145dc:	mov	r1, #1
   145e0:	str	r2, [sp, #48]	; 0x30
   145e4:	mov	r2, r0
   145e8:	mov	r0, r5
   145ec:	add	sp, sp, #32
   145f0:	pop	{r4, r5, r6, lr}
   145f4:	b	10e98 <__fprintf_chk@plt>
   145f8:	mov	r2, #5
   145fc:	ldr	r1, [pc, #500]	; 147f8 <close@plt+0x38d0>
   14600:	mov	r0, #0
   14604:	bl	10d6c <dcgettext@plt>
   14608:	ldr	r2, [r4, #8]
   1460c:	ldr	r3, [r4, #4]
   14610:	mov	r1, #1
   14614:	str	r2, [sp, #52]	; 0x34
   14618:	str	r3, [sp, #48]	; 0x30
   1461c:	ldr	r3, [r4]
   14620:	mov	r2, r0
   14624:	mov	r0, r5
   14628:	add	sp, sp, #32
   1462c:	pop	{r4, r5, r6, lr}
   14630:	b	10e98 <__fprintf_chk@plt>
   14634:	mov	r2, #5
   14638:	ldr	r1, [pc, #444]	; 147fc <close@plt+0x38d4>
   1463c:	mov	r0, #0
   14640:	bl	10d6c <dcgettext@plt>
   14644:	ldr	r1, [r4, #12]
   14648:	ldr	r2, [r4, #8]
   1464c:	ldr	r3, [r4, #4]
   14650:	str	r1, [sp, #8]
   14654:	str	r2, [sp, #4]
   14658:	str	r3, [sp]
   1465c:	mov	r1, #1
   14660:	ldr	r3, [r4]
   14664:	mov	r2, r0
   14668:	mov	r0, r5
   1466c:	bl	10e98 <__fprintf_chk@plt>
   14670:	b	14590 <close@plt+0x3668>
   14674:	mov	r2, #5
   14678:	ldr	r1, [pc, #384]	; 14800 <close@plt+0x38d8>
   1467c:	mov	r0, #0
   14680:	bl	10d6c <dcgettext@plt>
   14684:	ldr	r3, [r4, #16]
   14688:	ldr	r1, [r4, #12]
   1468c:	ldr	r2, [r4, #8]
   14690:	str	r3, [sp, #12]
   14694:	ldr	r3, [r4, #4]
   14698:	str	r1, [sp, #8]
   1469c:	str	r2, [sp, #4]
   146a0:	str	r3, [sp]
   146a4:	mov	r1, #1
   146a8:	ldr	r3, [r4]
   146ac:	mov	r2, r0
   146b0:	mov	r0, r5
   146b4:	bl	10e98 <__fprintf_chk@plt>
   146b8:	b	14590 <close@plt+0x3668>
   146bc:	mov	r2, #5
   146c0:	ldr	r1, [pc, #316]	; 14804 <close@plt+0x38dc>
   146c4:	mov	r0, #0
   146c8:	bl	10d6c <dcgettext@plt>
   146cc:	ldr	r2, [r4, #20]
   146d0:	ldr	r3, [r4, #16]
   146d4:	ldr	r1, [r4, #12]
   146d8:	str	r2, [sp, #16]
   146dc:	ldr	r2, [r4, #8]
   146e0:	str	r3, [sp, #12]
   146e4:	ldr	r3, [r4, #4]
   146e8:	str	r1, [sp, #8]
   146ec:	str	r2, [sp, #4]
   146f0:	str	r3, [sp]
   146f4:	mov	r1, #1
   146f8:	ldr	r3, [r4]
   146fc:	mov	r2, r0
   14700:	mov	r0, r5
   14704:	bl	10e98 <__fprintf_chk@plt>
   14708:	b	14590 <close@plt+0x3668>
   1470c:	mov	r2, #5
   14710:	ldr	r1, [pc, #240]	; 14808 <close@plt+0x38e0>
   14714:	mov	r0, #0
   14718:	bl	10d6c <dcgettext@plt>
   1471c:	ldr	r1, [r4, #24]
   14720:	ldr	r2, [r4, #20]
   14724:	ldr	r3, [r4, #16]
   14728:	str	r1, [sp, #20]
   1472c:	ldr	r1, [r4, #12]
   14730:	str	r2, [sp, #16]
   14734:	ldr	r2, [r4, #8]
   14738:	str	r3, [sp, #12]
   1473c:	ldr	r3, [r4, #4]
   14740:	str	r1, [sp, #8]
   14744:	str	r2, [sp, #4]
   14748:	str	r3, [sp]
   1474c:	mov	r1, #1
   14750:	ldr	r3, [r4]
   14754:	mov	r2, r0
   14758:	mov	r0, r5
   1475c:	bl	10e98 <__fprintf_chk@plt>
   14760:	b	14590 <close@plt+0x3668>
   14764:	mov	r2, #5
   14768:	ldr	r1, [pc, #156]	; 1480c <close@plt+0x38e4>
   1476c:	mov	r0, #0
   14770:	bl	10d6c <dcgettext@plt>
   14774:	ldr	r3, [r4, #28]
   14778:	ldr	r1, [r4, #24]
   1477c:	ldr	r2, [r4, #20]
   14780:	str	r3, [sp, #24]
   14784:	ldr	r3, [r4, #16]
   14788:	str	r1, [sp, #20]
   1478c:	ldr	r1, [r4, #12]
   14790:	str	r2, [sp, #16]
   14794:	ldr	r2, [r4, #8]
   14798:	str	r3, [sp, #12]
   1479c:	ldr	r3, [r4, #4]
   147a0:	str	r1, [sp, #8]
   147a4:	str	r2, [sp, #4]
   147a8:	str	r3, [sp]
   147ac:	mov	r1, #1
   147b0:	ldr	r3, [r4]
   147b4:	mov	r2, r0
   147b8:	mov	r0, r5
   147bc:	bl	10e98 <__fprintf_chk@plt>
   147c0:	b	14590 <close@plt+0x3668>
   147c4:	mov	r2, #5
   147c8:	ldr	r1, [pc, #64]	; 14810 <close@plt+0x38e8>
   147cc:	b	14534 <close@plt+0x360c>
   147d0:	bl	10f1c <abort@plt>
   147d4:	ldrdeq	r6, [r1], -r8
   147d8:	andeq	r6, r1, ip, ror #1
   147dc:	andeq	r0, r0, r2, ror #15
   147e0:	andeq	r6, r1, r0, asr #7
   147e4:	strdeq	r6, [r1], -r0
   147e8:	andeq	r6, r1, r4, ror #1
   147ec:	andeq	r6, r1, r8, asr #5
   147f0:			; <UNDEFINED> instruction: 0x000161bc
   147f4:	andeq	r6, r1, ip, asr #3
   147f8:	andeq	r6, r1, r4, ror #3
   147fc:	andeq	r6, r1, r0, lsl #4
   14800:	andeq	r6, r1, r0, lsr #4
   14804:	andeq	r6, r1, r4, asr #4
   14808:	andeq	r6, r1, ip, ror #4
   1480c:	muleq	r1, r8, r2
   14810:	strdeq	r6, [r1], -ip
   14814:	push	{r4, r5, lr}
   14818:	sub	sp, sp, #12
   1481c:	ldr	r5, [sp, #24]
   14820:	ldr	ip, [r5]
   14824:	cmp	ip, #0
   14828:	beq	14844 <close@plt+0x391c>
   1482c:	mov	lr, r5
   14830:	mov	ip, #0
   14834:	ldr	r4, [lr, #4]!
   14838:	add	ip, ip, #1
   1483c:	cmp	r4, #0
   14840:	bne	14834 <close@plt+0x390c>
   14844:	stm	sp, {r5, ip}
   14848:	bl	1446c <close@plt+0x3544>
   1484c:	add	sp, sp, #12
   14850:	pop	{r4, r5, pc}
   14854:	push	{r4, r5, r6, lr}
   14858:	sub	sp, sp, #56	; 0x38
   1485c:	ldr	r6, [pc, #88]	; 148bc <close@plt+0x3994>
   14860:	ldr	r5, [sp, #72]	; 0x48
   14864:	add	r4, sp, #8
   14868:	ldr	ip, [r6]
   1486c:	str	ip, [sp, #52]	; 0x34
   14870:	mov	ip, #0
   14874:	ldr	lr, [r5], #4
   14878:	cmp	lr, #0
   1487c:	str	lr, [r4, #4]!
   14880:	beq	14890 <close@plt+0x3968>
   14884:	add	ip, ip, #1
   14888:	cmp	ip, #10
   1488c:	bne	14874 <close@plt+0x394c>
   14890:	add	lr, sp, #12
   14894:	str	ip, [sp, #4]
   14898:	str	lr, [sp]
   1489c:	bl	1446c <close@plt+0x3544>
   148a0:	ldr	r2, [sp, #52]	; 0x34
   148a4:	ldr	r3, [r6]
   148a8:	cmp	r2, r3
   148ac:	bne	148b8 <close@plt+0x3990>
   148b0:	add	sp, sp, #56	; 0x38
   148b4:	pop	{r4, r5, r6, pc}
   148b8:	bl	10d78 <__stack_chk_fail@plt>
   148bc:	andeq	r6, r2, r8, lsl #30
   148c0:	push	{r3}		; (str r3, [sp, #-4]!)
   148c4:	mov	ip, #0
   148c8:	push	{r4, r5, r6, lr}
   148cc:	sub	sp, sp, #60	; 0x3c
   148d0:	ldr	r6, [pc, #100]	; 1493c <close@plt+0x3a14>
   148d4:	add	r5, sp, #8
   148d8:	add	r4, sp, #80	; 0x50
   148dc:	ldr	r3, [r6]
   148e0:	str	r4, [sp, #8]
   148e4:	str	r3, [sp, #52]	; 0x34
   148e8:	ldr	r3, [sp, #76]	; 0x4c
   148ec:	ldr	lr, [r4], #4
   148f0:	cmp	lr, #0
   148f4:	str	lr, [r5, #4]!
   148f8:	beq	14908 <close@plt+0x39e0>
   148fc:	add	ip, ip, #1
   14900:	cmp	ip, #10
   14904:	bne	148ec <close@plt+0x39c4>
   14908:	add	lr, sp, #12
   1490c:	str	ip, [sp, #4]
   14910:	str	lr, [sp]
   14914:	bl	1446c <close@plt+0x3544>
   14918:	ldr	r2, [sp, #52]	; 0x34
   1491c:	ldr	r3, [r6]
   14920:	cmp	r2, r3
   14924:	bne	14938 <close@plt+0x3a10>
   14928:	add	sp, sp, #60	; 0x3c
   1492c:	pop	{r4, r5, r6, lr}
   14930:	add	sp, sp, #4
   14934:	bx	lr
   14938:	bl	10d78 <__stack_chk_fail@plt>
   1493c:	andeq	r6, r2, r8, lsl #30
   14940:	push	{r4, lr}
   14944:	mov	r2, #5
   14948:	ldr	r1, [pc, #88]	; 149a8 <close@plt+0x3a80>
   1494c:	mov	r0, #0
   14950:	bl	10d6c <dcgettext@plt>
   14954:	ldr	r2, [pc, #80]	; 149ac <close@plt+0x3a84>
   14958:	mov	r1, r0
   1495c:	mov	r0, #1
   14960:	bl	10e80 <__printf_chk@plt>
   14964:	mov	r2, #5
   14968:	ldr	r1, [pc, #64]	; 149b0 <close@plt+0x3a88>
   1496c:	mov	r0, #0
   14970:	bl	10d6c <dcgettext@plt>
   14974:	ldr	r3, [pc, #56]	; 149b4 <close@plt+0x3a8c>
   14978:	ldr	r2, [pc, #56]	; 149b8 <close@plt+0x3a90>
   1497c:	mov	r1, r0
   14980:	mov	r0, #1
   14984:	bl	10e80 <__printf_chk@plt>
   14988:	ldr	r1, [pc, #44]	; 149bc <close@plt+0x3a94>
   1498c:	mov	r2, #5
   14990:	mov	r0, #0
   14994:	bl	10d6c <dcgettext@plt>
   14998:	ldr	r3, [pc, #32]	; 149c0 <close@plt+0x3a98>
   1499c:	pop	{r4, lr}
   149a0:	ldr	r1, [r3]
   149a4:	b	10ce8 <fputs_unlocked@plt>
   149a8:	andeq	r6, r1, r8, lsr r3
   149ac:	andeq	r6, r1, r0, asr r3
   149b0:	andeq	r6, r1, r8, ror #6
   149b4:	andeq	r5, r1, r4, lsr sp
   149b8:	andeq	r5, r1, ip, asr sp
   149bc:	andeq	r6, r1, ip, ror r3
   149c0:	andeq	r7, r2, r4, asr r1
   149c4:	push	{r4, lr}
   149c8:	mov	r4, r0
   149cc:	bl	10dfc <malloc@plt>
   149d0:	adds	r4, r4, #0
   149d4:	movne	r4, #1
   149d8:	cmp	r0, #0
   149dc:	movne	r4, #0
   149e0:	cmp	r4, #0
   149e4:	popeq	{r4, pc}
   149e8:	bl	14c0c <close@plt+0x3ce4>
   149ec:	push	{r4, r5, r6, lr}
   149f0:	umull	r4, r5, r0, r1
   149f4:	adds	r3, r5, #0
   149f8:	movne	r3, #1
   149fc:	cmp	r4, #0
   14a00:	blt	14a18 <close@plt+0x3af0>
   14a04:	cmp	r3, #0
   14a08:	bne	14a18 <close@plt+0x3af0>
   14a0c:	mul	r0, r1, r0
   14a10:	pop	{r4, r5, r6, lr}
   14a14:	b	149c4 <close@plt+0x3a9c>
   14a18:	bl	14c0c <close@plt+0x3ce4>
   14a1c:	b	149c4 <close@plt+0x3a9c>
   14a20:	adds	r3, r0, #0
   14a24:	movne	r3, #1
   14a28:	cmp	r1, #0
   14a2c:	movne	r3, #0
   14a30:	cmp	r3, #0
   14a34:	push	{r4, lr}
   14a38:	bne	14a60 <close@plt+0x3b38>
   14a3c:	mov	r4, r1
   14a40:	bl	10d84 <realloc@plt>
   14a44:	adds	r4, r4, #0
   14a48:	movne	r4, #1
   14a4c:	cmp	r0, #0
   14a50:	movne	r4, #0
   14a54:	cmp	r4, #0
   14a58:	popeq	{r4, pc}
   14a5c:	bl	14c0c <close@plt+0x3ce4>
   14a60:	bl	10d24 <free@plt>
   14a64:	mov	r0, #0
   14a68:	pop	{r4, pc}
   14a6c:	push	{r4, r5, r6, lr}
   14a70:	umull	r4, r5, r1, r2
   14a74:	adds	r3, r5, #0
   14a78:	movne	r3, #1
   14a7c:	cmp	r4, #0
   14a80:	blt	14a98 <close@plt+0x3b70>
   14a84:	cmp	r3, #0
   14a88:	bne	14a98 <close@plt+0x3b70>
   14a8c:	mul	r1, r2, r1
   14a90:	pop	{r4, r5, r6, lr}
   14a94:	b	14a20 <close@plt+0x3af8>
   14a98:	bl	14c0c <close@plt+0x3ce4>
   14a9c:	push	{r4, r5, r6, r7, r8, lr}
   14aa0:	subs	r7, r0, #0
   14aa4:	mov	r6, r1
   14aa8:	mov	r5, r2
   14aac:	ldr	r4, [r1]
   14ab0:	beq	14ae4 <close@plt+0x3bbc>
   14ab4:	mov	r1, r2
   14ab8:	ldr	r0, [pc, #104]	; 14b28 <close@plt+0x3c00>
   14abc:	bl	15354 <close@plt+0x442c>
   14ac0:	cmp	r0, r4
   14ac4:	bls	14b08 <close@plt+0x3be0>
   14ac8:	add	r3, r4, #1
   14acc:	add	r4, r3, r4, lsr #1
   14ad0:	str	r4, [r6]
   14ad4:	mul	r1, r5, r4
   14ad8:	mov	r0, r7
   14adc:	pop	{r4, r5, r6, r7, r8, lr}
   14ae0:	b	14a20 <close@plt+0x3af8>
   14ae4:	cmp	r4, #0
   14ae8:	beq	14b0c <close@plt+0x3be4>
   14aec:	umull	r0, r1, r4, r5
   14af0:	adds	r3, r1, #0
   14af4:	movne	r3, #1
   14af8:	cmp	r0, #0
   14afc:	blt	14b08 <close@plt+0x3be0>
   14b00:	cmp	r3, #0
   14b04:	beq	14ad0 <close@plt+0x3ba8>
   14b08:	bl	14c0c <close@plt+0x3ce4>
   14b0c:	mov	r1, r2
   14b10:	mov	r0, #64	; 0x40
   14b14:	bl	15354 <close@plt+0x442c>
   14b18:	cmp	r5, #64	; 0x40
   14b1c:	movls	r4, r0
   14b20:	addhi	r4, r0, #1
   14b24:	b	14aec <close@plt+0x3bc4>
   14b28:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   14b2c:	cmp	r0, #0
   14b30:	ldr	r3, [r1]
   14b34:	beq	14b58 <close@plt+0x3c30>
   14b38:	ldr	r2, [pc, #60]	; 14b7c <close@plt+0x3c54>
   14b3c:	cmp	r3, r2
   14b40:	bhi	14b74 <close@plt+0x3c4c>
   14b44:	add	r2, r3, #1
   14b48:	add	r3, r2, r3, lsr #1
   14b4c:	str	r3, [r1]
   14b50:	mov	r1, r3
   14b54:	b	14a20 <close@plt+0x3af8>
   14b58:	cmp	r3, #0
   14b5c:	bne	14b70 <close@plt+0x3c48>
   14b60:	mov	r3, #64	; 0x40
   14b64:	str	r3, [r1]
   14b68:	mov	r1, r3
   14b6c:	b	14a20 <close@plt+0x3af8>
   14b70:	bge	14b4c <close@plt+0x3c24>
   14b74:	push	{r4, lr}
   14b78:	bl	14c0c <close@plt+0x3ce4>
   14b7c:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   14b80:	push	{r4, lr}
   14b84:	mov	r4, r0
   14b88:	bl	149c4 <close@plt+0x3a9c>
   14b8c:	mov	r2, r4
   14b90:	mov	r1, #0
   14b94:	pop	{r4, lr}
   14b98:	b	10e74 <memset@plt>
   14b9c:	push	{r4, r5, r6, lr}
   14ba0:	umull	r4, r5, r0, r1
   14ba4:	adds	r3, r5, #0
   14ba8:	movne	r3, #1
   14bac:	cmp	r4, #0
   14bb0:	blt	14bc8 <close@plt+0x3ca0>
   14bb4:	cmp	r3, #0
   14bb8:	bne	14bc8 <close@plt+0x3ca0>
   14bbc:	bl	10cdc <calloc@plt>
   14bc0:	cmp	r0, #0
   14bc4:	popne	{r4, r5, r6, pc}
   14bc8:	bl	14c0c <close@plt+0x3ce4>
   14bcc:	push	{r4, r5, r6, lr}
   14bd0:	mov	r4, r1
   14bd4:	mov	r5, r0
   14bd8:	mov	r0, r1
   14bdc:	bl	149c4 <close@plt+0x3a9c>
   14be0:	mov	r2, r4
   14be4:	mov	r1, r5
   14be8:	pop	{r4, r5, r6, lr}
   14bec:	b	10d3c <memcpy@plt>
   14bf0:	push	{r4, lr}
   14bf4:	mov	r4, r0
   14bf8:	bl	10e50 <strlen@plt>
   14bfc:	add	r1, r0, #1
   14c00:	mov	r0, r4
   14c04:	pop	{r4, lr}
   14c08:	b	14bcc <close@plt+0x3ca4>
   14c0c:	ldr	r3, [pc, #44]	; 14c40 <close@plt+0x3d18>
   14c10:	push	{r4, lr}
   14c14:	mov	r2, #5
   14c18:	ldr	r1, [pc, #36]	; 14c44 <close@plt+0x3d1c>
   14c1c:	mov	r0, #0
   14c20:	ldr	r4, [r3]
   14c24:	bl	10d6c <dcgettext@plt>
   14c28:	ldr	r2, [pc, #24]	; 14c48 <close@plt+0x3d20>
   14c2c:	mov	r1, #0
   14c30:	mov	r3, r0
   14c34:	mov	r0, r4
   14c38:	bl	10de4 <error@plt>
   14c3c:	bl	10f1c <abort@plt>
   14c40:	strdeq	r7, [r2], -r0
   14c44:	strdeq	r6, [r1], -r0
   14c48:	andeq	r5, r1, ip, lsr #31
   14c4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14c50:	mov	r4, r0
   14c54:	mov	r6, r1
   14c58:	mov	r9, r2
   14c5c:	ldr	r1, [pc, #164]	; 14d08 <close@plt+0x3de0>
   14c60:	mov	r2, #5
   14c64:	mov	r0, #0
   14c68:	mov	r7, r3
   14c6c:	ldr	r8, [sp, #32]
   14c70:	bl	10d6c <dcgettext@plt>
   14c74:	mov	r1, r4
   14c78:	mov	r2, r0
   14c7c:	mov	r0, #0
   14c80:	bl	10de4 <error@plt>
   14c84:	mov	r2, #5
   14c88:	ldr	r1, [pc, #124]	; 14d0c <close@plt+0x3de4>
   14c8c:	mov	r0, #0
   14c90:	bl	10d6c <dcgettext@plt>
   14c94:	mov	r1, #0
   14c98:	mov	r2, r0
   14c9c:	mov	r0, r1
   14ca0:	bl	10de4 <error@plt>
   14ca4:	ldr	r3, [pc, #100]	; 14d10 <close@plt+0x3de8>
   14ca8:	mov	r2, #5
   14cac:	ldr	r1, [pc, #96]	; 14d14 <close@plt+0x3dec>
   14cb0:	mov	r0, #0
   14cb4:	ldr	r4, [r3]
   14cb8:	bl	10d6c <dcgettext@plt>
   14cbc:	mov	r3, r9
   14cc0:	mov	r2, r6
   14cc4:	mov	r1, #8
   14cc8:	mov	r5, r0
   14ccc:	mov	r0, #0
   14cd0:	bl	14144 <close@plt+0x321c>
   14cd4:	mov	r3, r8
   14cd8:	mov	r2, r7
   14cdc:	mov	r1, #8
   14ce0:	mov	r6, r0
   14ce4:	mov	r0, #1
   14ce8:	bl	14144 <close@plt+0x321c>
   14cec:	mov	r3, r6
   14cf0:	mov	r2, r5
   14cf4:	mov	r1, #0
   14cf8:	str	r0, [sp, #32]
   14cfc:	mov	r0, r4
   14d00:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14d04:	b	10de4 <error@plt>
   14d08:	andeq	r6, r1, r4, lsl #8
   14d0c:	andeq	r6, r1, r0, lsr #8
   14d10:	strdeq	r7, [r2], -r0
   14d14:	andeq	r6, r1, ip, asr #8
   14d18:	push	{r4, r5, r6, r7, r8, lr}
   14d1c:	sub	sp, sp, #8
   14d20:	mov	r6, r1
   14d24:	mov	r7, r2
   14d28:	mov	r8, r3
   14d2c:	mov	r5, r0
   14d30:	bl	15280 <close@plt+0x4358>
   14d34:	mov	r4, r0
   14d38:	bl	10e5c <__errno_location@plt>
   14d3c:	ldr	r0, [r0]
   14d40:	cmp	r0, #0
   14d44:	bne	14d54 <close@plt+0x3e2c>
   14d48:	mov	r0, r4
   14d4c:	add	sp, sp, #8
   14d50:	pop	{r4, r5, r6, r7, r8, pc}
   14d54:	str	r8, [sp]
   14d58:	mov	r3, r7
   14d5c:	mov	r2, r6
   14d60:	mov	r1, r5
   14d64:	bl	14c4c <close@plt+0x3d24>
   14d68:	mov	r0, r4
   14d6c:	add	sp, sp, #8
   14d70:	pop	{r4, r5, r6, r7, r8, pc}
   14d74:	push	{r4, r5, r6, r7, r8, lr}
   14d78:	sub	sp, sp, #8
   14d7c:	mov	r7, r1
   14d80:	mov	r8, r2
   14d84:	mov	r5, r3
   14d88:	mov	r6, r0
   14d8c:	bl	152fc <close@plt+0x43d4>
   14d90:	mov	r4, r0
   14d94:	bl	10e5c <__errno_location@plt>
   14d98:	ldr	r0, [r0]
   14d9c:	cmp	r0, #0
   14da0:	bne	14db0 <close@plt+0x3e88>
   14da4:	mov	r0, r4
   14da8:	add	sp, sp, #8
   14dac:	pop	{r4, r5, r6, r7, r8, pc}
   14db0:	sub	r5, r5, #1
   14db4:	str	r5, [sp]
   14db8:	mov	r3, r8
   14dbc:	sub	r2, r7, #1
   14dc0:	mov	r1, r6
   14dc4:	bl	14c4c <close@plt+0x3d24>
   14dc8:	mov	r0, r4
   14dcc:	add	sp, sp, #8
   14dd0:	pop	{r4, r5, r6, r7, r8, pc}
   14dd4:	push	{r4, r5, lr}
   14dd8:	sub	sp, sp, #12
   14ddc:	mov	r4, r0
   14de0:	bl	10e8c <fileno@plt>
   14de4:	cmp	r0, #0
   14de8:	mov	r0, r4
   14dec:	blt	14e68 <close@plt+0x3f40>
   14df0:	bl	10e14 <__freading@plt>
   14df4:	cmp	r0, #0
   14df8:	bne	14e34 <close@plt+0x3f0c>
   14dfc:	mov	r0, r4
   14e00:	bl	14fc0 <close@plt+0x4098>
   14e04:	cmp	r0, #0
   14e08:	beq	14e64 <close@plt+0x3f3c>
   14e0c:	bl	10e5c <__errno_location@plt>
   14e10:	mov	r5, r0
   14e14:	mov	r0, r4
   14e18:	ldr	r4, [r5]
   14e1c:	bl	10ea4 <fclose@plt>
   14e20:	cmp	r4, #0
   14e24:	mvnne	r0, #0
   14e28:	strne	r4, [r5]
   14e2c:	add	sp, sp, #12
   14e30:	pop	{r4, r5, pc}
   14e34:	mov	r0, r4
   14e38:	bl	10e8c <fileno@plt>
   14e3c:	mov	r3, #1
   14e40:	str	r3, [sp]
   14e44:	mov	r2, #0
   14e48:	mov	r3, #0
   14e4c:	bl	10db4 <lseek64@plt>
   14e50:	mvn	r3, #0
   14e54:	mvn	r2, #0
   14e58:	cmp	r1, r3
   14e5c:	cmpeq	r0, r2
   14e60:	bne	14dfc <close@plt+0x3ed4>
   14e64:	mov	r0, r4
   14e68:	add	sp, sp, #12
   14e6c:	pop	{r4, r5, lr}
   14e70:	b	10ea4 <fclose@plt>
   14e74:	push	{r1, r2, r3}
   14e78:	push	{r4, r5, r6, r7, r8, lr}
   14e7c:	sub	sp, sp, #12
   14e80:	ldr	r4, [pc, #300]	; 14fb4 <close@plt+0x408c>
   14e84:	ldr	r3, [pc, #300]	; 14fb8 <close@plt+0x4090>
   14e88:	ldr	r1, [sp, #36]	; 0x24
   14e8c:	ldr	r2, [r4]
   14e90:	cmp	r1, r3
   14e94:	add	r3, sp, #40	; 0x28
   14e98:	str	r2, [sp, #4]
   14e9c:	str	r3, [sp]
   14ea0:	bne	14f6c <close@plt+0x4044>
   14ea4:	ldr	r6, [pc, #272]	; 14fbc <close@plt+0x4094>
   14ea8:	add	r3, sp, #44	; 0x2c
   14eac:	str	r3, [sp]
   14eb0:	ldr	r3, [r6]
   14eb4:	ldr	r7, [sp, #40]	; 0x28
   14eb8:	cmp	r3, #0
   14ebc:	blt	14f00 <close@plt+0x3fd8>
   14ec0:	mov	r2, r7
   14ec4:	mov	r8, r0
   14ec8:	bl	10ebc <fcntl64@plt>
   14ecc:	subs	r5, r0, #0
   14ed0:	blt	14f7c <close@plt+0x4054>
   14ed4:	mov	r3, #1
   14ed8:	str	r3, [r6]
   14edc:	ldr	r2, [sp, #4]
   14ee0:	ldr	r3, [r4]
   14ee4:	mov	r0, r5
   14ee8:	cmp	r2, r3
   14eec:	bne	14fb0 <close@plt+0x4088>
   14ef0:	add	sp, sp, #12
   14ef4:	pop	{r4, r5, r6, r7, r8, lr}
   14ef8:	add	sp, sp, #12
   14efc:	bx	lr
   14f00:	mov	r2, r7
   14f04:	mov	r1, #0
   14f08:	bl	14e74 <close@plt+0x3f4c>
   14f0c:	subs	r5, r0, #0
   14f10:	blt	14edc <close@plt+0x3fb4>
   14f14:	ldr	r3, [r6]
   14f18:	cmn	r3, #1
   14f1c:	bne	14edc <close@plt+0x3fb4>
   14f20:	mov	r1, #1
   14f24:	mov	r0, r5
   14f28:	bl	10ebc <fcntl64@plt>
   14f2c:	subs	r2, r0, #0
   14f30:	blt	14f4c <close@plt+0x4024>
   14f34:	orr	r2, r2, #1
   14f38:	mov	r1, #2
   14f3c:	mov	r0, r5
   14f40:	bl	10ebc <fcntl64@plt>
   14f44:	cmn	r0, #1
   14f48:	bne	14edc <close@plt+0x3fb4>
   14f4c:	bl	10e5c <__errno_location@plt>
   14f50:	mov	r6, r0
   14f54:	mov	r0, r5
   14f58:	ldr	r7, [r6]
   14f5c:	mvn	r5, #0
   14f60:	bl	10f28 <close@plt>
   14f64:	str	r7, [r6]
   14f68:	b	14edc <close@plt+0x3fb4>
   14f6c:	ldr	r2, [sp, #40]	; 0x28
   14f70:	bl	10ebc <fcntl64@plt>
   14f74:	mov	r5, r0
   14f78:	b	14edc <close@plt+0x3fb4>
   14f7c:	bl	10e5c <__errno_location@plt>
   14f80:	ldr	r3, [r0]
   14f84:	cmp	r3, #22
   14f88:	bne	14ed4 <close@plt+0x3fac>
   14f8c:	mov	r2, r7
   14f90:	mov	r0, r8
   14f94:	mov	r1, #0
   14f98:	bl	14e74 <close@plt+0x3f4c>
   14f9c:	subs	r5, r0, #0
   14fa0:	mvnge	r3, #0
   14fa4:	strge	r3, [r6]
   14fa8:	bge	14f20 <close@plt+0x3ff8>
   14fac:	b	14edc <close@plt+0x3fb4>
   14fb0:	bl	10d78 <__stack_chk_fail@plt>
   14fb4:	andeq	r6, r2, r8, lsl #30
   14fb8:	andeq	r0, r0, r6, lsl #8
   14fbc:			; <UNDEFINED> instruction: 0x000272b4
   14fc0:	push	{r4, lr}
   14fc4:	subs	r4, r0, #0
   14fc8:	sub	sp, sp, #8
   14fcc:	beq	14fe8 <close@plt+0x40c0>
   14fd0:	bl	10e14 <__freading@plt>
   14fd4:	cmp	r0, #0
   14fd8:	beq	14fe8 <close@plt+0x40c0>
   14fdc:	ldr	r3, [r4]
   14fe0:	tst	r3, #256	; 0x100
   14fe4:	bne	14ff8 <close@plt+0x40d0>
   14fe8:	mov	r0, r4
   14fec:	add	sp, sp, #8
   14ff0:	pop	{r4, lr}
   14ff4:	b	10d18 <fflush@plt>
   14ff8:	mov	r3, #1
   14ffc:	str	r3, [sp]
   15000:	mov	r2, #0
   15004:	mov	r3, #0
   15008:	mov	r0, r4
   1500c:	bl	15020 <close@plt+0x40f8>
   15010:	mov	r0, r4
   15014:	add	sp, sp, #8
   15018:	pop	{r4, lr}
   1501c:	b	10d18 <fflush@plt>
   15020:	push	{r4, r5, r6, r7, r8, lr}
   15024:	sub	sp, sp, #8
   15028:	ldmib	r0, {ip, lr}
   1502c:	mov	r4, r0
   15030:	ldr	r5, [sp, #32]
   15034:	cmp	lr, ip
   15038:	beq	15050 <close@plt+0x4128>
   1503c:	str	r5, [sp, #32]
   15040:	mov	r0, r4
   15044:	add	sp, sp, #8
   15048:	pop	{r4, r5, r6, r7, r8, lr}
   1504c:	b	10eb0 <fseeko64@plt>
   15050:	ldr	lr, [r0, #20]
   15054:	ldr	ip, [r0, #16]
   15058:	cmp	lr, ip
   1505c:	bne	1503c <close@plt+0x4114>
   15060:	ldr	r8, [r0, #36]	; 0x24
   15064:	cmp	r8, #0
   15068:	bne	1503c <close@plt+0x4114>
   1506c:	mov	r6, r2
   15070:	mov	r7, r3
   15074:	bl	10e8c <fileno@plt>
   15078:	mov	r2, r6
   1507c:	mov	r3, r7
   15080:	str	r5, [sp]
   15084:	bl	10db4 <lseek64@plt>
   15088:	mvn	r3, #0
   1508c:	mvn	r2, #0
   15090:	cmp	r1, r3
   15094:	cmpeq	r0, r2
   15098:	beq	150b8 <close@plt+0x4190>
   1509c:	ldr	r3, [r4]
   150a0:	strd	r0, [r4, #80]	; 0x50
   150a4:	mov	r0, r8
   150a8:	bic	r3, r3, #16
   150ac:	str	r3, [r4]
   150b0:	add	sp, sp, #8
   150b4:	pop	{r4, r5, r6, r7, r8, pc}
   150b8:	mvn	r0, #0
   150bc:	b	150b0 <close@plt+0x4188>
   150c0:	push	{r4, r5, r6, r7, r8, lr}
   150c4:	subs	r7, r0, #0
   150c8:	ldr	r5, [pc, #108]	; 1513c <close@plt+0x4214>
   150cc:	sub	sp, sp, #8
   150d0:	mov	r8, r1
   150d4:	ldr	r1, [r5]
   150d8:	moveq	r7, sp
   150dc:	str	r1, [sp, #4]
   150e0:	mov	r0, r7
   150e4:	mov	r1, r8
   150e8:	mov	r6, r2
   150ec:	bl	10dd8 <mbrtowc@plt>
   150f0:	cmp	r6, #0
   150f4:	cmnne	r0, #3
   150f8:	mov	r4, r0
   150fc:	bhi	1511c <close@plt+0x41f4>
   15100:	ldr	r2, [sp, #4]
   15104:	ldr	r3, [r5]
   15108:	mov	r0, r4
   1510c:	cmp	r2, r3
   15110:	bne	15138 <close@plt+0x4210>
   15114:	add	sp, sp, #8
   15118:	pop	{r4, r5, r6, r7, r8, pc}
   1511c:	mov	r0, #0
   15120:	bl	11fd8 <close@plt+0x10b0>
   15124:	cmp	r0, #0
   15128:	moveq	r4, #1
   1512c:	ldrbeq	r3, [r8]
   15130:	streq	r3, [r7]
   15134:	b	15100 <close@plt+0x41d8>
   15138:	bl	10d78 <__stack_chk_fail@plt>
   1513c:	andeq	r6, r2, r8, lsl #30
   15140:	push	{r4, r5, r6, lr}
   15144:	mov	r4, r0
   15148:	bl	10dcc <__fpending@plt>
   1514c:	ldr	r5, [r4]
   15150:	and	r5, r5, #32
   15154:	mov	r6, r0
   15158:	mov	r0, r4
   1515c:	bl	14dd4 <close@plt+0x3eac>
   15160:	cmp	r5, #0
   15164:	mov	r4, r0
   15168:	bne	15194 <close@plt+0x426c>
   1516c:	cmp	r0, #0
   15170:	beq	1518c <close@plt+0x4264>
   15174:	cmp	r6, #0
   15178:	bne	151ac <close@plt+0x4284>
   1517c:	bl	10e5c <__errno_location@plt>
   15180:	ldr	r4, [r0]
   15184:	subs	r4, r4, #9
   15188:	mvnne	r4, #0
   1518c:	mov	r0, r4
   15190:	pop	{r4, r5, r6, pc}
   15194:	cmp	r0, #0
   15198:	bne	151ac <close@plt+0x4284>
   1519c:	bl	10e5c <__errno_location@plt>
   151a0:	str	r4, [r0]
   151a4:	mvn	r4, #0
   151a8:	b	1518c <close@plt+0x4264>
   151ac:	mvn	r4, #0
   151b0:	b	1518c <close@plt+0x4264>
   151b4:	push	{r4, lr}
   151b8:	mov	r0, #14
   151bc:	bl	10eec <nl_langinfo@plt>
   151c0:	cmp	r0, #0
   151c4:	beq	151dc <close@plt+0x42b4>
   151c8:	ldrb	r2, [r0]
   151cc:	ldr	r3, [pc, #16]	; 151e4 <close@plt+0x42bc>
   151d0:	cmp	r2, #0
   151d4:	moveq	r0, r3
   151d8:	pop	{r4, pc}
   151dc:	ldr	r0, [pc]	; 151e4 <close@plt+0x42bc>
   151e0:	pop	{r4, pc}
   151e4:	andeq	r6, r1, r4, ror r4
   151e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   151ec:	mov	r4, r0
   151f0:	mov	r8, r1
   151f4:	mov	r5, r2
   151f8:	mov	r7, r3
   151fc:	bl	10e5c <__errno_location@plt>
   15200:	mov	sl, #0
   15204:	mov	r9, r0
   15208:	b	1523c <close@plt+0x4314>
   1520c:	bl	10e50 <strlen@plt>
   15210:	add	r6, r0, #1
   15214:	mov	r0, r5
   15218:	bl	10e50 <strlen@plt>
   1521c:	subs	r8, r8, r6
   15220:	add	r4, r4, r6
   15224:	add	r0, r0, #1
   15228:	add	r5, r5, r0
   1522c:	sub	r7, r7, r0
   15230:	beq	15260 <close@plt+0x4338>
   15234:	cmp	r7, #0
   15238:	beq	15274 <close@plt+0x434c>
   1523c:	str	sl, [r9]
   15240:	mov	r1, r5
   15244:	mov	r0, r4
   15248:	bl	10df0 <strcoll@plt>
   1524c:	subs	r3, r0, #0
   15250:	mov	r0, r4
   15254:	beq	1520c <close@plt+0x42e4>
   15258:	mov	r0, r3
   1525c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15260:	adds	r7, r7, #0
   15264:	movne	r7, #1
   15268:	rsb	r3, r7, #0
   1526c:	mov	r0, r3
   15270:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15274:	mov	r3, #1
   15278:	mov	r0, r3
   1527c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15280:	cmp	r1, r3
   15284:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15288:	mov	r4, r1
   1528c:	mov	r5, r3
   15290:	mov	r6, r2
   15294:	mov	r7, r0
   15298:	bne	152b0 <close@plt+0x4388>
   1529c:	mov	r2, r1
   152a0:	mov	r1, r6
   152a4:	bl	10d60 <memcmp@plt>
   152a8:	subs	r8, r0, #0
   152ac:	beq	152ec <close@plt+0x43c4>
   152b0:	mov	r1, #0
   152b4:	ldrb	sl, [r7, r4]
   152b8:	ldrb	r9, [r6, r5]
   152bc:	add	r3, r5, #1
   152c0:	strb	r1, [r7, r4]
   152c4:	mov	r2, r6
   152c8:	strb	r1, [r6, r5]
   152cc:	mov	r0, r7
   152d0:	add	r1, r4, #1
   152d4:	bl	151e8 <close@plt+0x42c0>
   152d8:	strb	sl, [r7, r4]
   152dc:	strb	r9, [r6, r5]
   152e0:	mov	r8, r0
   152e4:	mov	r0, r8
   152e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   152ec:	bl	10e5c <__errno_location@plt>
   152f0:	str	r8, [r0]
   152f4:	mov	r0, r8
   152f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   152fc:	cmp	r1, r3
   15300:	push	{r4, r5, r6, r7, r8, lr}
   15304:	mov	r4, r1
   15308:	mov	r5, r3
   1530c:	mov	r6, r2
   15310:	mov	r7, r0
   15314:	bne	1533c <close@plt+0x4414>
   15318:	mov	r2, r1
   1531c:	mov	r1, r6
   15320:	bl	10d60 <memcmp@plt>
   15324:	subs	r8, r0, #0
   15328:	bne	1533c <close@plt+0x4414>
   1532c:	bl	10e5c <__errno_location@plt>
   15330:	str	r8, [r0]
   15334:	mov	r0, r8
   15338:	pop	{r4, r5, r6, r7, r8, pc}
   1533c:	mov	r3, r5
   15340:	mov	r2, r6
   15344:	mov	r1, r4
   15348:	mov	r0, r7
   1534c:	pop	{r4, r5, r6, r7, r8, lr}
   15350:	b	151e8 <close@plt+0x42c0>
   15354:	subs	r2, r1, #1
   15358:	bxeq	lr
   1535c:	bcc	15534 <close@plt+0x460c>
   15360:	cmp	r0, r1
   15364:	bls	15518 <close@plt+0x45f0>
   15368:	tst	r1, r2
   1536c:	beq	15524 <close@plt+0x45fc>
   15370:	clz	r3, r0
   15374:	clz	r2, r1
   15378:	sub	r3, r2, r3
   1537c:	rsbs	r3, r3, #31
   15380:	addne	r3, r3, r3, lsl #1
   15384:	mov	r2, #0
   15388:	addne	pc, pc, r3, lsl #2
   1538c:	nop			; (mov r0, r0)
   15390:	cmp	r0, r1, lsl #31
   15394:	adc	r2, r2, r2
   15398:	subcs	r0, r0, r1, lsl #31
   1539c:	cmp	r0, r1, lsl #30
   153a0:	adc	r2, r2, r2
   153a4:	subcs	r0, r0, r1, lsl #30
   153a8:	cmp	r0, r1, lsl #29
   153ac:	adc	r2, r2, r2
   153b0:	subcs	r0, r0, r1, lsl #29
   153b4:	cmp	r0, r1, lsl #28
   153b8:	adc	r2, r2, r2
   153bc:	subcs	r0, r0, r1, lsl #28
   153c0:	cmp	r0, r1, lsl #27
   153c4:	adc	r2, r2, r2
   153c8:	subcs	r0, r0, r1, lsl #27
   153cc:	cmp	r0, r1, lsl #26
   153d0:	adc	r2, r2, r2
   153d4:	subcs	r0, r0, r1, lsl #26
   153d8:	cmp	r0, r1, lsl #25
   153dc:	adc	r2, r2, r2
   153e0:	subcs	r0, r0, r1, lsl #25
   153e4:	cmp	r0, r1, lsl #24
   153e8:	adc	r2, r2, r2
   153ec:	subcs	r0, r0, r1, lsl #24
   153f0:	cmp	r0, r1, lsl #23
   153f4:	adc	r2, r2, r2
   153f8:	subcs	r0, r0, r1, lsl #23
   153fc:	cmp	r0, r1, lsl #22
   15400:	adc	r2, r2, r2
   15404:	subcs	r0, r0, r1, lsl #22
   15408:	cmp	r0, r1, lsl #21
   1540c:	adc	r2, r2, r2
   15410:	subcs	r0, r0, r1, lsl #21
   15414:	cmp	r0, r1, lsl #20
   15418:	adc	r2, r2, r2
   1541c:	subcs	r0, r0, r1, lsl #20
   15420:	cmp	r0, r1, lsl #19
   15424:	adc	r2, r2, r2
   15428:	subcs	r0, r0, r1, lsl #19
   1542c:	cmp	r0, r1, lsl #18
   15430:	adc	r2, r2, r2
   15434:	subcs	r0, r0, r1, lsl #18
   15438:	cmp	r0, r1, lsl #17
   1543c:	adc	r2, r2, r2
   15440:	subcs	r0, r0, r1, lsl #17
   15444:	cmp	r0, r1, lsl #16
   15448:	adc	r2, r2, r2
   1544c:	subcs	r0, r0, r1, lsl #16
   15450:	cmp	r0, r1, lsl #15
   15454:	adc	r2, r2, r2
   15458:	subcs	r0, r0, r1, lsl #15
   1545c:	cmp	r0, r1, lsl #14
   15460:	adc	r2, r2, r2
   15464:	subcs	r0, r0, r1, lsl #14
   15468:	cmp	r0, r1, lsl #13
   1546c:	adc	r2, r2, r2
   15470:	subcs	r0, r0, r1, lsl #13
   15474:	cmp	r0, r1, lsl #12
   15478:	adc	r2, r2, r2
   1547c:	subcs	r0, r0, r1, lsl #12
   15480:	cmp	r0, r1, lsl #11
   15484:	adc	r2, r2, r2
   15488:	subcs	r0, r0, r1, lsl #11
   1548c:	cmp	r0, r1, lsl #10
   15490:	adc	r2, r2, r2
   15494:	subcs	r0, r0, r1, lsl #10
   15498:	cmp	r0, r1, lsl #9
   1549c:	adc	r2, r2, r2
   154a0:	subcs	r0, r0, r1, lsl #9
   154a4:	cmp	r0, r1, lsl #8
   154a8:	adc	r2, r2, r2
   154ac:	subcs	r0, r0, r1, lsl #8
   154b0:	cmp	r0, r1, lsl #7
   154b4:	adc	r2, r2, r2
   154b8:	subcs	r0, r0, r1, lsl #7
   154bc:	cmp	r0, r1, lsl #6
   154c0:	adc	r2, r2, r2
   154c4:	subcs	r0, r0, r1, lsl #6
   154c8:	cmp	r0, r1, lsl #5
   154cc:	adc	r2, r2, r2
   154d0:	subcs	r0, r0, r1, lsl #5
   154d4:	cmp	r0, r1, lsl #4
   154d8:	adc	r2, r2, r2
   154dc:	subcs	r0, r0, r1, lsl #4
   154e0:	cmp	r0, r1, lsl #3
   154e4:	adc	r2, r2, r2
   154e8:	subcs	r0, r0, r1, lsl #3
   154ec:	cmp	r0, r1, lsl #2
   154f0:	adc	r2, r2, r2
   154f4:	subcs	r0, r0, r1, lsl #2
   154f8:	cmp	r0, r1, lsl #1
   154fc:	adc	r2, r2, r2
   15500:	subcs	r0, r0, r1, lsl #1
   15504:	cmp	r0, r1
   15508:	adc	r2, r2, r2
   1550c:	subcs	r0, r0, r1
   15510:	mov	r0, r2
   15514:	bx	lr
   15518:	moveq	r0, #1
   1551c:	movne	r0, #0
   15520:	bx	lr
   15524:	clz	r2, r1
   15528:	rsb	r2, r2, #31
   1552c:	lsr	r0, r0, r2
   15530:	bx	lr
   15534:	cmp	r0, #0
   15538:	mvnne	r0, #0
   1553c:	b	1559c <close@plt+0x4674>
   15540:	cmp	r1, #0
   15544:	beq	15534 <close@plt+0x460c>
   15548:	push	{r0, r1, lr}
   1554c:	bl	15354 <close@plt+0x442c>
   15550:	pop	{r1, r2, lr}
   15554:	mul	r3, r2, r0
   15558:	sub	r1, r1, r3
   1555c:	bx	lr
   15560:	cmp	r3, #0
   15564:	cmpeq	r2, #0
   15568:	bne	15580 <close@plt+0x4658>
   1556c:	cmp	r1, #0
   15570:	cmpeq	r0, #0
   15574:	mvnne	r1, #0
   15578:	mvnne	r0, #0
   1557c:	b	1559c <close@plt+0x4674>
   15580:	sub	sp, sp, #8
   15584:	push	{sp, lr}
   15588:	bl	155ac <close@plt+0x4684>
   1558c:	ldr	lr, [sp, #4]
   15590:	add	sp, sp, #8
   15594:	pop	{r2, r3}
   15598:	bx	lr
   1559c:	push	{r1, lr}
   155a0:	mov	r0, #8
   155a4:	bl	10cf4 <raise@plt>
   155a8:	pop	{r1, pc}
   155ac:	cmp	r1, r3
   155b0:	cmpeq	r0, r2
   155b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155b8:	mov	r4, r0
   155bc:	movcc	r0, #0
   155c0:	mov	r5, r1
   155c4:	ldr	lr, [sp, #36]	; 0x24
   155c8:	movcc	r1, r0
   155cc:	bcc	156c8 <close@plt+0x47a0>
   155d0:	cmp	r3, #0
   155d4:	clzeq	ip, r2
   155d8:	clzne	ip, r3
   155dc:	addeq	ip, ip, #32
   155e0:	cmp	r5, #0
   155e4:	clzeq	r1, r4
   155e8:	addeq	r1, r1, #32
   155ec:	clzne	r1, r5
   155f0:	sub	ip, ip, r1
   155f4:	sub	sl, ip, #32
   155f8:	lsl	r9, r3, ip
   155fc:	rsb	fp, ip, #32
   15600:	orr	r9, r9, r2, lsl sl
   15604:	orr	r9, r9, r2, lsr fp
   15608:	lsl	r8, r2, ip
   1560c:	cmp	r5, r9
   15610:	cmpeq	r4, r8
   15614:	movcc	r0, #0
   15618:	movcc	r1, r0
   1561c:	bcc	15638 <close@plt+0x4710>
   15620:	mov	r0, #1
   15624:	subs	r4, r4, r8
   15628:	lsl	r1, r0, sl
   1562c:	orr	r1, r1, r0, lsr fp
   15630:	lsl	r0, r0, ip
   15634:	sbc	r5, r5, r9
   15638:	cmp	ip, #0
   1563c:	beq	156c8 <close@plt+0x47a0>
   15640:	lsr	r6, r8, #1
   15644:	orr	r6, r6, r9, lsl #31
   15648:	lsr	r7, r9, #1
   1564c:	mov	r2, ip
   15650:	b	15674 <close@plt+0x474c>
   15654:	subs	r3, r4, r6
   15658:	sbc	r8, r5, r7
   1565c:	adds	r3, r3, r3
   15660:	adc	r8, r8, r8
   15664:	adds	r4, r3, #1
   15668:	adc	r5, r8, #0
   1566c:	subs	r2, r2, #1
   15670:	beq	15690 <close@plt+0x4768>
   15674:	cmp	r5, r7
   15678:	cmpeq	r4, r6
   1567c:	bcs	15654 <close@plt+0x472c>
   15680:	adds	r4, r4, r4
   15684:	adc	r5, r5, r5
   15688:	subs	r2, r2, #1
   1568c:	bne	15674 <close@plt+0x474c>
   15690:	lsr	r3, r4, ip
   15694:	orr	r3, r3, r5, lsl fp
   15698:	lsr	r2, r5, ip
   1569c:	orr	r3, r3, r5, lsr sl
   156a0:	adds	r0, r0, r4
   156a4:	mov	r4, r3
   156a8:	lsl	r3, r2, ip
   156ac:	orr	r3, r3, r4, lsl sl
   156b0:	lsl	ip, r4, ip
   156b4:	orr	r3, r3, r4, lsr fp
   156b8:	adc	r1, r1, r5
   156bc:	subs	r0, r0, ip
   156c0:	mov	r5, r2
   156c4:	sbc	r1, r1, r3
   156c8:	cmp	lr, #0
   156cc:	strdne	r4, [lr]
   156d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   156d8:	mov	r7, r0
   156dc:	ldr	r6, [pc, #72]	; 1572c <close@plt+0x4804>
   156e0:	ldr	r5, [pc, #72]	; 15730 <close@plt+0x4808>
   156e4:	add	r6, pc, r6
   156e8:	add	r5, pc, r5
   156ec:	sub	r6, r6, r5
   156f0:	mov	r8, r1
   156f4:	mov	r9, r2
   156f8:	bl	10cb0 <fdopen@plt-0x20>
   156fc:	asrs	r6, r6, #2
   15700:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15704:	mov	r4, #0
   15708:	add	r4, r4, #1
   1570c:	ldr	r3, [r5], #4
   15710:	mov	r2, r9
   15714:	mov	r1, r8
   15718:	mov	r0, r7
   1571c:	blx	r3
   15720:	cmp	r6, r4
   15724:	bne	15708 <close@plt+0x47e0>
   15728:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1572c:	andeq	r1, r1, r8, lsl r8
   15730:	andeq	r1, r1, r0, lsl r8
   15734:	bx	lr
   15738:	ldr	r3, [pc, #12]	; 1574c <close@plt+0x4824>
   1573c:	mov	r1, #0
   15740:	add	r3, pc, r3
   15744:	ldr	r2, [r3]
   15748:	b	10e68 <__cxa_atexit@plt>
   1574c:	muleq	r1, r8, r9

Disassembly of section .fini:

00015750 <.fini>:
   15750:	push	{r3, lr}
   15754:	pop	{r3, pc}
