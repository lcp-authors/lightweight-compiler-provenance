
raspbian-preinstalled/link:     file format elf32-littlearm


Disassembly of section .init:

00010b60 <.init>:
   10b60:	push	{r3, lr}
   10b64:	bl	10fc8 <abort@plt+0x244>
   10b68:	pop	{r3, pc}

Disassembly of section .plt:

00010b6c <calloc@plt-0x14>:
   10b6c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b70:	ldr	lr, [pc, #4]	; 10b7c <calloc@plt-0x4>
   10b74:	add	lr, pc, lr
   10b78:	ldr	pc, [lr, #8]!
   10b7c:	andeq	r4, r1, r4, lsl #9

00010b80 <calloc@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #20, 20	; 0x14000
   10b88:	ldr	pc, [ip, #1156]!	; 0x484

00010b8c <fputs_unlocked@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #20, 20	; 0x14000
   10b94:	ldr	pc, [ip, #1148]!	; 0x47c

00010b98 <raise@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #20, 20	; 0x14000
   10ba0:	ldr	pc, [ip, #1140]!	; 0x474

00010ba4 <strcmp@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #20, 20	; 0x14000
   10bac:	ldr	pc, [ip, #1132]!	; 0x46c

00010bb0 <fflush@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1124]!	; 0x464

00010bbc <free@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1116]!	; 0x45c

00010bc8 <_exit@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1108]!	; 0x454

00010bd4 <memcpy@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1100]!	; 0x44c

00010be0 <mbsinit@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1092]!	; 0x444

00010bec <memcmp@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1084]!	; 0x43c

00010bf8 <dcgettext@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1076]!	; 0x434

00010c04 <__stack_chk_fail@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1068]!	; 0x42c

00010c10 <realloc@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1060]!	; 0x424

00010c1c <textdomain@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1052]!	; 0x41c

00010c28 <iswprint@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1044]!	; 0x414

00010c34 <fwrite@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1036]!	; 0x40c

00010c40 <lseek64@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1028]!	; 0x404

00010c4c <__ctype_get_mb_cur_max@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c58 <__fpending@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c64 <mbrtowc@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c70 <error@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #996]!	; 0x3e4

00010c7c <malloc@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #988]!	; 0x3dc

00010c88 <__libc_start_main@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #980]!	; 0x3d4

00010c94 <__freading@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #972]!	; 0x3cc

00010ca0 <__gmon_start__@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #964]!	; 0x3c4

00010cac <getopt_long@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #956]!	; 0x3bc

00010cb8 <__ctype_b_loc@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #948]!	; 0x3b4

00010cc4 <exit@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #940]!	; 0x3ac

00010cd0 <strlen@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #932]!	; 0x3a4

00010cdc <__errno_location@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #924]!	; 0x39c

00010ce8 <__cxa_atexit@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #916]!	; 0x394

00010cf4 <memset@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #908]!	; 0x38c

00010d00 <__printf_chk@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #900]!	; 0x384

00010d0c <link@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #892]!	; 0x37c

00010d18 <fileno@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #884]!	; 0x374

00010d24 <__fprintf_chk@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #876]!	; 0x36c

00010d30 <fclose@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #868]!	; 0x364

00010d3c <fseeko64@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #860]!	; 0x35c

00010d48 <setlocale@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #852]!	; 0x354

00010d54 <strrchr@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #844]!	; 0x34c

00010d60 <nl_langinfo@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #836]!	; 0x344

00010d6c <bindtextdomain@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #828]!	; 0x33c

00010d78 <strncmp@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #820]!	; 0x334

00010d84 <abort@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #812]!	; 0x32c

Disassembly of section .text:

00010d90 <.text>:
   10d90:	push	{r4, r5, r6, r7, r8, lr}
   10d94:	mov	r5, r0
   10d98:	sub	sp, sp, #16
   10d9c:	ldr	r0, [r1]
   10da0:	mov	r4, r1
   10da4:	bl	11538 <abort@plt+0x7b4>
   10da8:	ldr	r1, [pc, #416]	; 10f50 <abort@plt+0x1cc>
   10dac:	mov	r0, #6
   10db0:	bl	10d48 <setlocale@plt>
   10db4:	ldr	r1, [pc, #408]	; 10f54 <abort@plt+0x1d0>
   10db8:	ldr	r0, [pc, #408]	; 10f58 <abort@plt+0x1d4>
   10dbc:	bl	10d6c <bindtextdomain@plt>
   10dc0:	ldr	r0, [pc, #400]	; 10f58 <abort@plt+0x1d4>
   10dc4:	bl	10c1c <textdomain@plt>
   10dc8:	ldr	r0, [pc, #396]	; 10f5c <abort@plt+0x1d8>
   10dcc:	bl	14528 <abort@plt+0x37a4>
   10dd0:	ldr	r1, [pc, #392]	; 10f60 <abort@plt+0x1dc>
   10dd4:	ldr	r2, [pc, #392]	; 10f64 <abort@plt+0x1e0>
   10dd8:	ldr	r3, [pc, #392]	; 10f68 <abort@plt+0x1e4>
   10ddc:	ldr	r1, [r1]
   10de0:	mov	r6, #0
   10de4:	str	r1, [sp]
   10de8:	mov	r0, r5
   10dec:	mov	r1, r4
   10df0:	str	r2, [sp, #8]
   10df4:	str	r3, [sp, #4]
   10df8:	ldr	r2, [pc, #364]	; 10f6c <abort@plt+0x1e8>
   10dfc:	ldr	r3, [pc, #364]	; 10f70 <abort@plt+0x1ec>
   10e00:	str	r6, [sp, #12]
   10e04:	bl	11458 <abort@plt+0x6d4>
   10e08:	str	r6, [sp]
   10e0c:	mov	r1, r4
   10e10:	mov	r0, r5
   10e14:	ldr	r3, [pc, #344]	; 10f74 <abort@plt+0x1f0>
   10e18:	ldr	r2, [pc, #304]	; 10f50 <abort@plt+0x1cc>
   10e1c:	bl	10cac <getopt_long@plt>
   10e20:	cmn	r0, #1
   10e24:	bne	10ea0 <abort@plt+0x11c>
   10e28:	ldr	r7, [pc, #328]	; 10f78 <abort@plt+0x1f4>
   10e2c:	ldr	r3, [r7]
   10e30:	add	r2, r3, #1
   10e34:	cmp	r2, r5
   10e38:	bge	10f0c <abort@plt+0x188>
   10e3c:	add	r2, r3, #2
   10e40:	cmp	r2, r5
   10e44:	blt	10e68 <abort@plt+0xe4>
   10e48:	add	r2, r4, r3, lsl #2
   10e4c:	ldr	r0, [r4, r3, lsl #2]
   10e50:	ldr	r1, [r2, #4]
   10e54:	bl	10d0c <link@plt>
   10e58:	cmp	r0, #0
   10e5c:	bne	10ea8 <abort@plt+0x124>
   10e60:	add	sp, sp, #16
   10e64:	pop	{r4, r5, r6, r7, r8, pc}
   10e68:	mov	r2, #5
   10e6c:	ldr	r1, [pc, #264]	; 10f7c <abort@plt+0x1f8>
   10e70:	mov	r0, r6
   10e74:	bl	10bf8 <dcgettext@plt>
   10e78:	ldr	r3, [r7]
   10e7c:	add	r3, r3, #2
   10e80:	mov	r5, r0
   10e84:	ldr	r0, [r4, r3, lsl #2]
   10e88:	bl	1379c <abort@plt+0x2a18>
   10e8c:	mov	r2, r5
   10e90:	mov	r1, r6
   10e94:	mov	r3, r0
   10e98:	mov	r0, r6
   10e9c:	bl	10c70 <error@plt>
   10ea0:	mov	r0, #1
   10ea4:	bl	1107c <abort@plt+0x2f8>
   10ea8:	bl	10cdc <__errno_location@plt>
   10eac:	mov	r2, #5
   10eb0:	ldr	r1, [pc, #200]	; 10f80 <abort@plt+0x1fc>
   10eb4:	ldr	r8, [r0]
   10eb8:	mov	r0, r6
   10ebc:	bl	10bf8 <dcgettext@plt>
   10ec0:	ldr	r3, [r7]
   10ec4:	mov	r1, #4
   10ec8:	add	r3, r3, #1
   10ecc:	ldr	r2, [r4, r3, lsl #2]
   10ed0:	mov	r5, r0
   10ed4:	mov	r0, r6
   10ed8:	bl	13440 <abort@plt+0x26bc>
   10edc:	ldr	r3, [r7]
   10ee0:	mov	r1, #4
   10ee4:	ldr	r2, [r4, r3, lsl #2]
   10ee8:	mov	r6, r0
   10eec:	mov	r0, #1
   10ef0:	bl	13440 <abort@plt+0x26bc>
   10ef4:	mov	r1, r8
   10ef8:	mov	r3, r6
   10efc:	mov	r2, r5
   10f00:	str	r0, [sp]
   10f04:	mov	r0, #1
   10f08:	bl	10c70 <error@plt>
   10f0c:	cmp	r3, r5
   10f10:	mov	r2, #5
   10f14:	blt	10f38 <abort@plt+0x1b4>
   10f18:	ldr	r1, [pc, #100]	; 10f84 <abort@plt+0x200>
   10f1c:	mov	r0, r6
   10f20:	bl	10bf8 <dcgettext@plt>
   10f24:	mov	r1, r6
   10f28:	mov	r2, r0
   10f2c:	mov	r0, r6
   10f30:	bl	10c70 <error@plt>
   10f34:	b	10ea0 <abort@plt+0x11c>
   10f38:	ldr	r1, [pc, #72]	; 10f88 <abort@plt+0x204>
   10f3c:	mov	r0, r6
   10f40:	bl	10bf8 <dcgettext@plt>
   10f44:	ldr	r3, [r7]
   10f48:	mov	r5, r0
   10f4c:	b	10e84 <abort@plt+0x100>
   10f50:	ldrdeq	r4, [r1], -ip
   10f54:	muleq	r1, r0, r7
   10f58:	andeq	r4, r1, r4, ror #13
   10f5c:	andeq	r1, r1, r0, lsl #7
   10f60:	andeq	r5, r2, r8, asr #1
   10f64:	andeq	r4, r1, r4, lsr #15
   10f68:	andeq	r1, r1, ip, ror r0
   10f6c:	muleq	r1, r4, r5
   10f70:	andeq	r4, r1, r0, ror #13
   10f74:	andeq	r4, r1, r4, lsl #11
   10f78:	andeq	r5, r2, r8, lsl r1
   10f7c:	andeq	r4, r1, r0, ror #15
   10f80:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   10f84:			; <UNDEFINED> instruction: 0x000147b4
   10f88:	andeq	r4, r1, r4, asr #15
   10f8c:	mov	fp, #0
   10f90:	mov	lr, #0
   10f94:	pop	{r1}		; (ldr r1, [sp], #4)
   10f98:	mov	r2, sp
   10f9c:	push	{r2}		; (str r2, [sp, #-4]!)
   10fa0:	push	{r0}		; (str r0, [sp, #-4]!)
   10fa4:	ldr	ip, [pc, #16]	; 10fbc <abort@plt+0x238>
   10fa8:	push	{ip}		; (str ip, [sp, #-4]!)
   10fac:	ldr	r0, [pc, #12]	; 10fc0 <abort@plt+0x23c>
   10fb0:	ldr	r3, [pc, #12]	; 10fc4 <abort@plt+0x240>
   10fb4:	bl	10c88 <__libc_start_main@plt>
   10fb8:	bl	10d84 <abort@plt>
   10fbc:	andeq	r4, r1, r4, lsr #10
   10fc0:	muleq	r1, r0, sp
   10fc4:	andeq	r4, r1, r4, asr #9
   10fc8:	ldr	r3, [pc, #20]	; 10fe4 <abort@plt+0x260>
   10fcc:	ldr	r2, [pc, #20]	; 10fe8 <abort@plt+0x264>
   10fd0:	add	r3, pc, r3
   10fd4:	ldr	r2, [r3, r2]
   10fd8:	cmp	r2, #0
   10fdc:	bxeq	lr
   10fe0:	b	10ca0 <__gmon_start__@plt>
   10fe4:	andeq	r4, r1, r8, lsr #32
   10fe8:	strheq	r0, [r0], -ip
   10fec:	ldr	r0, [pc, #24]	; 1100c <abort@plt+0x288>
   10ff0:	ldr	r3, [pc, #24]	; 11010 <abort@plt+0x28c>
   10ff4:	cmp	r3, r0
   10ff8:	bxeq	lr
   10ffc:	ldr	r3, [pc, #16]	; 11014 <abort@plt+0x290>
   11000:	cmp	r3, #0
   11004:	bxeq	lr
   11008:	bx	r3
   1100c:	andeq	r5, r2, r0, lsl r1
   11010:	andeq	r5, r2, r0, lsl r1
   11014:	andeq	r0, r0, r0
   11018:	ldr	r0, [pc, #36]	; 11044 <abort@plt+0x2c0>
   1101c:	ldr	r1, [pc, #36]	; 11048 <abort@plt+0x2c4>
   11020:	sub	r1, r1, r0
   11024:	asr	r1, r1, #2
   11028:	add	r1, r1, r1, lsr #31
   1102c:	asrs	r1, r1, #1
   11030:	bxeq	lr
   11034:	ldr	r3, [pc, #16]	; 1104c <abort@plt+0x2c8>
   11038:	cmp	r3, #0
   1103c:	bxeq	lr
   11040:	bx	r3
   11044:	andeq	r5, r2, r0, lsl r1
   11048:	andeq	r5, r2, r0, lsl r1
   1104c:	andeq	r0, r0, r0
   11050:	push	{r4, lr}
   11054:	ldr	r4, [pc, #24]	; 11074 <abort@plt+0x2f0>
   11058:	ldrb	r3, [r4]
   1105c:	cmp	r3, #0
   11060:	popne	{r4, pc}
   11064:	bl	10fec <abort@plt+0x268>
   11068:	mov	r3, #1
   1106c:	strb	r3, [r4]
   11070:	pop	{r4, pc}
   11074:	andeq	r5, r2, ip, lsr #2
   11078:	b	11018 <abort@plt+0x294>
   1107c:	ldr	r3, [pc, #652]	; 11310 <abort@plt+0x58c>
   11080:	push	{r7, lr}
   11084:	sub	sp, sp, #64	; 0x40
   11088:	ldr	r3, [r3]
   1108c:	subs	r6, r0, #0
   11090:	str	r3, [sp, #60]	; 0x3c
   11094:	beq	110d0 <abort@plt+0x34c>
   11098:	ldr	r3, [pc, #628]	; 11314 <abort@plt+0x590>
   1109c:	mov	r2, #5
   110a0:	ldr	r1, [pc, #624]	; 11318 <abort@plt+0x594>
   110a4:	mov	r0, #0
   110a8:	ldr	r4, [r3]
   110ac:	bl	10bf8 <dcgettext@plt>
   110b0:	ldr	r3, [pc, #612]	; 1131c <abort@plt+0x598>
   110b4:	mov	r1, #1
   110b8:	ldr	r3, [r3]
   110bc:	mov	r2, r0
   110c0:	mov	r0, r4
   110c4:	bl	10d24 <__fprintf_chk@plt>
   110c8:	mov	r0, r6
   110cc:	bl	10cc4 <exit@plt>
   110d0:	mov	r2, #5
   110d4:	ldr	r1, [pc, #580]	; 11320 <abort@plt+0x59c>
   110d8:	bl	10bf8 <dcgettext@plt>
   110dc:	ldr	r3, [pc, #568]	; 1131c <abort@plt+0x598>
   110e0:	ldr	r4, [pc, #572]	; 11324 <abort@plt+0x5a0>
   110e4:	ldr	r3, [r3]
   110e8:	mov	r2, r3
   110ec:	mov	r1, r0
   110f0:	mov	r0, #1
   110f4:	bl	10d00 <__printf_chk@plt>
   110f8:	mov	r2, #5
   110fc:	ldr	r1, [pc, #548]	; 11328 <abort@plt+0x5a4>
   11100:	mov	r0, r6
   11104:	bl	10bf8 <dcgettext@plt>
   11108:	ldr	r1, [r4]
   1110c:	bl	10b8c <fputs_unlocked@plt>
   11110:	mov	r2, #5
   11114:	ldr	r1, [pc, #528]	; 1132c <abort@plt+0x5a8>
   11118:	mov	r0, r6
   1111c:	bl	10bf8 <dcgettext@plt>
   11120:	ldr	r1, [r4]
   11124:	bl	10b8c <fputs_unlocked@plt>
   11128:	mov	r2, #5
   1112c:	ldr	r1, [pc, #508]	; 11330 <abort@plt+0x5ac>
   11130:	mov	r0, r6
   11134:	bl	10bf8 <dcgettext@plt>
   11138:	ldr	r1, [r4]
   1113c:	bl	10b8c <fputs_unlocked@plt>
   11140:	ldr	lr, [pc, #492]	; 11334 <abort@plt+0x5b0>
   11144:	add	ip, sp, #4
   11148:	ldm	lr!, {r0, r1, r2, r3}
   1114c:	stmia	ip!, {r0, r1, r2, r3}
   11150:	ldm	lr!, {r0, r1, r2, r3}
   11154:	ldr	r5, [sp, #4]
   11158:	stmia	ip!, {r0, r1, r2, r3}
   1115c:	cmp	r5, #0
   11160:	ldm	lr!, {r0, r1, r2, r3}
   11164:	addeq	r4, sp, #4
   11168:	stmia	ip!, {r0, r1, r2, r3}
   1116c:	ldm	lr, {r0, r1}
   11170:	stm	ip, {r0, r1}
   11174:	beq	111a4 <abort@plt+0x420>
   11178:	ldr	r7, [pc, #440]	; 11338 <abort@plt+0x5b4>
   1117c:	add	r4, sp, #4
   11180:	b	11190 <abort@plt+0x40c>
   11184:	ldr	r5, [r4, #8]!
   11188:	cmp	r5, #0
   1118c:	beq	111a4 <abort@plt+0x420>
   11190:	mov	r1, r5
   11194:	mov	r0, r7
   11198:	bl	10ba4 <strcmp@plt>
   1119c:	cmp	r0, #0
   111a0:	bne	11184 <abort@plt+0x400>
   111a4:	ldr	r4, [r4, #4]
   111a8:	mov	r2, #5
   111ac:	cmp	r4, #0
   111b0:	ldr	r1, [pc, #388]	; 1133c <abort@plt+0x5b8>
   111b4:	beq	1125c <abort@plt+0x4d8>
   111b8:	mov	r0, #0
   111bc:	bl	10bf8 <dcgettext@plt>
   111c0:	ldr	r3, [pc, #376]	; 11340 <abort@plt+0x5bc>
   111c4:	ldr	r2, [pc, #376]	; 11344 <abort@plt+0x5c0>
   111c8:	mov	r1, r0
   111cc:	mov	r0, #1
   111d0:	bl	10d00 <__printf_chk@plt>
   111d4:	mov	r1, #0
   111d8:	mov	r0, #5
   111dc:	bl	10d48 <setlocale@plt>
   111e0:	cmp	r0, #0
   111e4:	ldreq	r5, [pc, #332]	; 11338 <abort@plt+0x5b4>
   111e8:	beq	11204 <abort@plt+0x480>
   111ec:	mov	r2, #3
   111f0:	ldr	r1, [pc, #336]	; 11348 <abort@plt+0x5c4>
   111f4:	bl	10d78 <strncmp@plt>
   111f8:	ldr	r5, [pc, #312]	; 11338 <abort@plt+0x5b4>
   111fc:	cmp	r0, #0
   11200:	bne	112ec <abort@plt+0x568>
   11204:	mov	r2, #5
   11208:	ldr	r1, [pc, #316]	; 1134c <abort@plt+0x5c8>
   1120c:	mov	r0, #0
   11210:	bl	10bf8 <dcgettext@plt>
   11214:	ldr	r3, [pc, #284]	; 11338 <abort@plt+0x5b4>
   11218:	ldr	r2, [pc, #288]	; 11340 <abort@plt+0x5bc>
   1121c:	mov	r1, r0
   11220:	mov	r0, #1
   11224:	bl	10d00 <__printf_chk@plt>
   11228:	mov	r2, #5
   1122c:	ldr	r1, [pc, #284]	; 11350 <abort@plt+0x5cc>
   11230:	mov	r0, #0
   11234:	bl	10bf8 <dcgettext@plt>
   11238:	ldr	r2, [pc, #276]	; 11354 <abort@plt+0x5d0>
   1123c:	cmp	r4, r5
   11240:	ldr	r3, [pc, #272]	; 11358 <abort@plt+0x5d4>
   11244:	movne	r3, r2
   11248:	mov	r1, r0
   1124c:	mov	r2, r4
   11250:	mov	r0, #1
   11254:	bl	10d00 <__printf_chk@plt>
   11258:	b	110c8 <abort@plt+0x344>
   1125c:	mov	r0, r4
   11260:	bl	10bf8 <dcgettext@plt>
   11264:	ldr	r3, [pc, #212]	; 11340 <abort@plt+0x5bc>
   11268:	ldr	r2, [pc, #212]	; 11344 <abort@plt+0x5c0>
   1126c:	mov	r1, r0
   11270:	mov	r0, #1
   11274:	bl	10d00 <__printf_chk@plt>
   11278:	mov	r1, r4
   1127c:	mov	r0, #5
   11280:	bl	10d48 <setlocale@plt>
   11284:	cmp	r0, #0
   11288:	beq	112a0 <abort@plt+0x51c>
   1128c:	mov	r2, #3
   11290:	ldr	r1, [pc, #176]	; 11348 <abort@plt+0x5c4>
   11294:	bl	10d78 <strncmp@plt>
   11298:	cmp	r0, #0
   1129c:	bne	112e4 <abort@plt+0x560>
   112a0:	mov	r2, #5
   112a4:	ldr	r1, [pc, #160]	; 1134c <abort@plt+0x5c8>
   112a8:	mov	r0, #0
   112ac:	bl	10bf8 <dcgettext@plt>
   112b0:	ldr	r3, [pc, #128]	; 11338 <abort@plt+0x5b4>
   112b4:	ldr	r2, [pc, #132]	; 11340 <abort@plt+0x5bc>
   112b8:	mov	r4, r3
   112bc:	mov	r1, r0
   112c0:	mov	r0, #1
   112c4:	bl	10d00 <__printf_chk@plt>
   112c8:	ldr	r1, [pc, #128]	; 11350 <abort@plt+0x5cc>
   112cc:	mov	r2, #5
   112d0:	mov	r0, #0
   112d4:	bl	10bf8 <dcgettext@plt>
   112d8:	ldr	r3, [pc, #120]	; 11358 <abort@plt+0x5d4>
   112dc:	mov	r1, r0
   112e0:	b	1124c <abort@plt+0x4c8>
   112e4:	ldr	r5, [pc, #76]	; 11338 <abort@plt+0x5b4>
   112e8:	mov	r4, r5
   112ec:	mov	r2, #5
   112f0:	ldr	r1, [pc, #100]	; 1135c <abort@plt+0x5d8>
   112f4:	mov	r0, #0
   112f8:	bl	10bf8 <dcgettext@plt>
   112fc:	ldr	r2, [pc, #52]	; 11338 <abort@plt+0x5b4>
   11300:	mov	r1, r0
   11304:	mov	r0, #1
   11308:	bl	10d00 <__printf_chk@plt>
   1130c:	b	11204 <abort@plt+0x480>
   11310:	andeq	r4, r2, r8, lsl #30
   11314:	andeq	r5, r2, r0, lsr #2
   11318:	muleq	r1, ip, r5
   1131c:	andeq	r5, r2, r8, lsr r1
   11320:	andeq	r4, r1, r4, asr #11
   11324:	andeq	r5, r2, r4, lsr #2
   11328:	andeq	r4, r1, ip, ror #11
   1132c:	andeq	r4, r1, r8, lsr r6
   11330:	andeq	r4, r1, r8, ror #12
   11334:	andeq	r4, r1, ip, asr #10
   11338:	muleq	r1, r4, r5
   1133c:	andeq	r4, r1, r0, lsr #13
   11340:			; <UNDEFINED> instruction: 0x000146b8
   11344:	andeq	r4, r1, r0, ror #13
   11348:	strdeq	r4, [r1], -r0
   1134c:	andeq	r4, r1, ip, lsr r7
   11350:	andeq	r4, r1, ip, asr r7
   11354:	ldrdeq	r4, [r1], -ip
   11358:	andeq	r4, r1, r8, lsl r8
   1135c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11360:	ldr	r3, [pc, #4]	; 1136c <abort@plt+0x5e8>
   11364:	str	r0, [r3]
   11368:	bx	lr
   1136c:	andeq	r5, r2, r0, lsr r1
   11370:	ldr	r3, [pc, #4]	; 1137c <abort@plt+0x5f8>
   11374:	strb	r0, [r3, #4]
   11378:	bx	lr
   1137c:	andeq	r5, r2, r0, lsr r1
   11380:	ldr	r3, [pc, #180]	; 1143c <abort@plt+0x6b8>
   11384:	push	{r4, r5, r6, lr}
   11388:	sub	sp, sp, #8
   1138c:	ldr	r0, [r3]
   11390:	bl	14014 <abort@plt+0x3290>
   11394:	cmp	r0, #0
   11398:	beq	113c0 <abort@plt+0x63c>
   1139c:	bl	10cdc <__errno_location@plt>
   113a0:	ldr	r5, [pc, #152]	; 11440 <abort@plt+0x6bc>
   113a4:	ldrb	r3, [r5, #4]
   113a8:	cmp	r3, #0
   113ac:	mov	r4, r0
   113b0:	beq	113dc <abort@plt+0x658>
   113b4:	ldr	r3, [r0]
   113b8:	cmp	r3, #32
   113bc:	bne	113dc <abort@plt+0x658>
   113c0:	ldr	r3, [pc, #124]	; 11444 <abort@plt+0x6c0>
   113c4:	ldr	r0, [r3]
   113c8:	bl	14014 <abort@plt+0x3290>
   113cc:	cmp	r0, #0
   113d0:	bne	1141c <abort@plt+0x698>
   113d4:	add	sp, sp, #8
   113d8:	pop	{r4, r5, r6, pc}
   113dc:	mov	r2, #5
   113e0:	ldr	r1, [pc, #96]	; 11448 <abort@plt+0x6c4>
   113e4:	mov	r0, #0
   113e8:	bl	10bf8 <dcgettext@plt>
   113ec:	mov	r6, r0
   113f0:	ldr	r0, [r5]
   113f4:	cmp	r0, #0
   113f8:	beq	11428 <abort@plt+0x6a4>
   113fc:	ldr	r4, [r4]
   11400:	bl	135bc <abort@plt+0x2838>
   11404:	mov	r1, r4
   11408:	str	r6, [sp]
   1140c:	ldr	r2, [pc, #56]	; 1144c <abort@plt+0x6c8>
   11410:	mov	r3, r0
   11414:	mov	r0, #0
   11418:	bl	10c70 <error@plt>
   1141c:	ldr	r3, [pc, #44]	; 11450 <abort@plt+0x6cc>
   11420:	ldr	r0, [r3]
   11424:	bl	10bc8 <_exit@plt>
   11428:	mov	r3, r6
   1142c:	ldr	r1, [r4]
   11430:	ldr	r2, [pc, #28]	; 11454 <abort@plt+0x6d0>
   11434:	bl	10c70 <error@plt>
   11438:	b	1141c <abort@plt+0x698>
   1143c:	andeq	r5, r2, r4, lsr #2
   11440:	andeq	r5, r2, r0, lsr r1
   11444:	andeq	r5, r2, r0, lsr #2
   11448:	andeq	r4, r1, r4, lsl #17
   1144c:	muleq	r1, r0, r8
   11450:	andeq	r5, r2, ip, asr #1
   11454:	muleq	r1, r4, r8
   11458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1145c:	sub	sp, sp, #20
   11460:	ldr	r5, [pc, #184]	; 11520 <abort@plt+0x79c>
   11464:	ldr	r4, [pc, #184]	; 11524 <abort@plt+0x7a0>
   11468:	mov	r6, #0
   1146c:	ldr	ip, [r5]
   11470:	cmp	r0, #2
   11474:	ldr	r7, [r4]
   11478:	str	ip, [sp, #12]
   1147c:	ldr	sl, [sp, #56]	; 0x38
   11480:	str	r6, [r4]
   11484:	ldr	fp, [sp, #60]	; 0x3c
   11488:	beq	114b4 <abort@plt+0x730>
   1148c:	ldr	r0, [sp, #12]
   11490:	ldr	r3, [pc, #144]	; 11528 <abort@plt+0x7a4>
   11494:	ldr	r1, [r5]
   11498:	mov	r2, #0
   1149c:	cmp	r0, r1
   114a0:	str	r7, [r4]
   114a4:	str	r2, [r3]
   114a8:	bne	1151c <abort@plt+0x798>
   114ac:	add	sp, sp, #20
   114b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114b4:	mov	r8, r2
   114b8:	mov	r9, r3
   114bc:	str	r6, [sp]
   114c0:	ldr	r3, [pc, #100]	; 1152c <abort@plt+0x7a8>
   114c4:	ldr	r2, [pc, #100]	; 11530 <abort@plt+0x7ac>
   114c8:	bl	10cac <getopt_long@plt>
   114cc:	cmn	r0, #1
   114d0:	beq	1148c <abort@plt+0x708>
   114d4:	cmp	r0, #104	; 0x68
   114d8:	beq	11510 <abort@plt+0x78c>
   114dc:	cmp	r0, #118	; 0x76
   114e0:	bne	1148c <abort@plt+0x708>
   114e4:	ldr	r0, [pc, #72]	; 11534 <abort@plt+0x7b0>
   114e8:	add	ip, sp, #64	; 0x40
   114ec:	mov	r3, sl
   114f0:	ldr	r0, [r0]
   114f4:	mov	r2, r9
   114f8:	mov	r1, r8
   114fc:	str	ip, [sp]
   11500:	str	ip, [sp, #8]
   11504:	bl	13b9c <abort@plt+0x2e18>
   11508:	mov	r0, r6
   1150c:	bl	10cc4 <exit@plt>
   11510:	mov	r0, r6
   11514:	blx	fp
   11518:	b	1148c <abort@plt+0x708>
   1151c:	bl	10c04 <__stack_chk_fail@plt>
   11520:	andeq	r4, r2, r8, lsl #30
   11524:	andeq	r5, r2, r8, lsr #2
   11528:	andeq	r5, r2, r8, lsl r1
   1152c:	muleq	r1, r8, r8
   11530:	andeq	r4, r1, r8, asr #17
   11534:	andeq	r5, r2, r4, lsr #2
   11538:	push	{r4, r5, r6, lr}
   1153c:	subs	r4, r0, #0
   11540:	beq	115b4 <abort@plt+0x830>
   11544:	mov	r1, #47	; 0x2f
   11548:	bl	10d54 <strrchr@plt>
   1154c:	subs	r5, r0, #0
   11550:	beq	115a0 <abort@plt+0x81c>
   11554:	add	r6, r5, #1
   11558:	sub	r3, r6, r4
   1155c:	cmp	r3, #6
   11560:	ble	115a0 <abort@plt+0x81c>
   11564:	mov	r2, #7
   11568:	ldr	r1, [pc, #96]	; 115d0 <abort@plt+0x84c>
   1156c:	sub	r0, r5, #6
   11570:	bl	10d78 <strncmp@plt>
   11574:	cmp	r0, #0
   11578:	bne	115a0 <abort@plt+0x81c>
   1157c:	mov	r2, #3
   11580:	ldr	r1, [pc, #76]	; 115d4 <abort@plt+0x850>
   11584:	mov	r0, r6
   11588:	bl	10d78 <strncmp@plt>
   1158c:	cmp	r0, #0
   11590:	movne	r4, r6
   11594:	ldreq	r3, [pc, #60]	; 115d8 <abort@plt+0x854>
   11598:	addeq	r4, r5, #4
   1159c:	streq	r4, [r3]
   115a0:	ldr	r2, [pc, #52]	; 115dc <abort@plt+0x858>
   115a4:	ldr	r3, [pc, #52]	; 115e0 <abort@plt+0x85c>
   115a8:	str	r4, [r2]
   115ac:	str	r4, [r3]
   115b0:	pop	{r4, r5, r6, pc}
   115b4:	ldr	r3, [pc, #40]	; 115e4 <abort@plt+0x860>
   115b8:	mov	r2, #55	; 0x37
   115bc:	mov	r1, #1
   115c0:	ldr	r3, [r3]
   115c4:	ldr	r0, [pc, #28]	; 115e8 <abort@plt+0x864>
   115c8:	bl	10c34 <fwrite@plt>
   115cc:	bl	10d84 <abort@plt>
   115d0:	andeq	r4, r1, r4, lsl r9
   115d4:	andeq	r4, r1, ip, lsl r9
   115d8:	andeq	r5, r2, r0, lsl r1
   115dc:	andeq	r5, r2, r8, lsr r1
   115e0:	andeq	r5, r2, r4, lsl r1
   115e4:	andeq	r5, r2, r0, lsr #2
   115e8:	ldrdeq	r4, [r1], -ip
   115ec:	push	{r4, lr}
   115f0:	mov	r2, #48	; 0x30
   115f4:	mov	r4, r1
   115f8:	mov	r1, #0
   115fc:	bl	10cf4 <memset@plt>
   11600:	cmp	r4, #10
   11604:	beq	11610 <abort@plt+0x88c>
   11608:	str	r4, [r0]
   1160c:	pop	{r4, pc}
   11610:	bl	10d84 <abort@plt>
   11614:	push	{r4, r5, r6, lr}
   11618:	mov	r2, #5
   1161c:	mov	r5, r0
   11620:	mov	r6, r1
   11624:	mov	r1, r0
   11628:	mov	r0, #0
   1162c:	bl	10bf8 <dcgettext@plt>
   11630:	cmp	r5, r0
   11634:	mov	r4, r0
   11638:	beq	11644 <abort@plt+0x8c0>
   1163c:	mov	r0, r4
   11640:	pop	{r4, r5, r6, pc}
   11644:	bl	140d4 <abort@plt+0x3350>
   11648:	ldrb	r3, [r0]
   1164c:	bic	r3, r3, #32
   11650:	cmp	r3, #85	; 0x55
   11654:	bne	116b4 <abort@plt+0x930>
   11658:	ldrb	r3, [r0, #1]
   1165c:	bic	r3, r3, #32
   11660:	cmp	r3, #84	; 0x54
   11664:	bne	1172c <abort@plt+0x9a8>
   11668:	ldrb	r3, [r0, #2]
   1166c:	bic	r3, r3, #32
   11670:	cmp	r3, #70	; 0x46
   11674:	bne	1172c <abort@plt+0x9a8>
   11678:	ldrb	r3, [r0, #3]
   1167c:	cmp	r3, #45	; 0x2d
   11680:	bne	1172c <abort@plt+0x9a8>
   11684:	ldrb	r3, [r0, #4]
   11688:	cmp	r3, #56	; 0x38
   1168c:	bne	1172c <abort@plt+0x9a8>
   11690:	ldrb	r3, [r0, #5]
   11694:	cmp	r3, #0
   11698:	bne	1172c <abort@plt+0x9a8>
   1169c:	ldrb	r2, [r4]
   116a0:	ldr	r3, [pc, #156]	; 11744 <abort@plt+0x9c0>
   116a4:	ldr	r4, [pc, #156]	; 11748 <abort@plt+0x9c4>
   116a8:	cmp	r2, #96	; 0x60
   116ac:	movne	r4, r3
   116b0:	b	1163c <abort@plt+0x8b8>
   116b4:	cmp	r3, #71	; 0x47
   116b8:	bne	1172c <abort@plt+0x9a8>
   116bc:	ldrb	r3, [r0, #1]
   116c0:	bic	r3, r3, #32
   116c4:	cmp	r3, #66	; 0x42
   116c8:	bne	1172c <abort@plt+0x9a8>
   116cc:	ldrb	r3, [r0, #2]
   116d0:	cmp	r3, #49	; 0x31
   116d4:	bne	1172c <abort@plt+0x9a8>
   116d8:	ldrb	r3, [r0, #3]
   116dc:	cmp	r3, #56	; 0x38
   116e0:	bne	1172c <abort@plt+0x9a8>
   116e4:	ldrb	r3, [r0, #4]
   116e8:	cmp	r3, #48	; 0x30
   116ec:	bne	1172c <abort@plt+0x9a8>
   116f0:	ldrb	r3, [r0, #5]
   116f4:	cmp	r3, #51	; 0x33
   116f8:	bne	1172c <abort@plt+0x9a8>
   116fc:	ldrb	r3, [r0, #6]
   11700:	cmp	r3, #48	; 0x30
   11704:	bne	1172c <abort@plt+0x9a8>
   11708:	ldrb	r3, [r0, #7]
   1170c:	cmp	r3, #0
   11710:	bne	1172c <abort@plt+0x9a8>
   11714:	ldrb	r2, [r4]
   11718:	ldr	r3, [pc, #44]	; 1174c <abort@plt+0x9c8>
   1171c:	ldr	r4, [pc, #44]	; 11750 <abort@plt+0x9cc>
   11720:	cmp	r2, #96	; 0x60
   11724:	movne	r4, r3
   11728:	b	1163c <abort@plt+0x8b8>
   1172c:	ldr	r3, [pc, #32]	; 11754 <abort@plt+0x9d0>
   11730:	ldr	r4, [pc, #32]	; 11758 <abort@plt+0x9d4>
   11734:	cmp	r6, #9
   11738:	movne	r4, r3
   1173c:	mov	r0, r4
   11740:	pop	{r4, r5, r6, pc}
   11744:	andeq	r4, r1, r8, ror r9
   11748:	andeq	r4, r1, r4, lsl #19
   1174c:	andeq	r4, r1, ip, ror r9
   11750:	andeq	r4, r1, r0, lsl #19
   11754:	andeq	r4, r1, r8, lsl #19
   11758:	andeq	r4, r1, r4, ror r9
   1175c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11760:	sub	sp, sp, #124	; 0x7c
   11764:	ldr	ip, [pc, #3576]	; 12564 <abort@plt+0x17e0>
   11768:	str	r3, [sp, #24]
   1176c:	ldr	r3, [sp, #168]	; 0xa8
   11770:	ldr	ip, [ip]
   11774:	str	r3, [sp, #56]	; 0x38
   11778:	ldr	r3, [sp, #172]	; 0xac
   1177c:	ldr	r8, [sp, #160]	; 0xa0
   11780:	str	r3, [sp, #80]	; 0x50
   11784:	ldr	r3, [sp, #176]	; 0xb0
   11788:	mov	fp, r0
   1178c:	str	r3, [sp, #76]	; 0x4c
   11790:	mov	sl, r1
   11794:	str	r2, [sp, #36]	; 0x24
   11798:	str	ip, [sp, #116]	; 0x74
   1179c:	bl	10c4c <__ctype_get_mb_cur_max@plt>
   117a0:	ldr	r3, [sp, #164]	; 0xa4
   117a4:	ands	r4, r3, #2
   117a8:	movne	r3, #1
   117ac:	moveq	r3, #0
   117b0:	str	r3, [sp, #32]
   117b4:	str	r0, [sp, #64]	; 0x40
   117b8:	cmp	r8, #10
   117bc:	ldrls	pc, [pc, r8, lsl #2]
   117c0:	b	12f70 <abort@plt+0x21ec>
   117c4:			; <UNDEFINED> instruction: 0x00011bb8
   117c8:	andeq	r1, r1, r0, asr ip
   117cc:	andeq	r2, r1, r0, asr r2
   117d0:	andeq	r1, r1, r0, ror ip
   117d4:	andeq	r1, r1, r4, lsr #22
   117d8:	andeq	r1, r1, ip, ror #22
   117dc:	andeq	r1, r1, r8, ror #23
   117e0:	andeq	r1, r1, r0, lsr #24
   117e4:	strdeq	r1, [r1], -r0
   117e8:	strdeq	r1, [r1], -r0
   117ec:	strdeq	r1, [r1], -r0
   117f0:	cmp	r8, #10
   117f4:	beq	11818 <abort@plt+0xa94>
   117f8:	mov	r1, r8
   117fc:	ldr	r0, [pc, #3428]	; 12568 <abort@plt+0x17e4>
   11800:	bl	11614 <abort@plt+0x890>
   11804:	mov	r1, r8
   11808:	str	r0, [sp, #80]	; 0x50
   1180c:	ldr	r0, [pc, #3420]	; 12570 <abort@plt+0x17ec>
   11810:	bl	11614 <abort@plt+0x890>
   11814:	str	r0, [sp, #76]	; 0x4c
   11818:	cmp	r4, #0
   1181c:	movne	r4, #0
   11820:	beq	12c30 <abort@plt+0x1eac>
   11824:	ldr	r7, [sp, #76]	; 0x4c
   11828:	mov	r5, #0
   1182c:	mov	r6, #1
   11830:	mov	r0, r7
   11834:	str	r6, [sp, #40]	; 0x28
   11838:	str	r5, [sp, #68]	; 0x44
   1183c:	bl	10cd0 <strlen@plt>
   11840:	str	r6, [sp, #28]
   11844:	str	r5, [sp, #44]	; 0x2c
   11848:	str	r5, [sp, #72]	; 0x48
   1184c:	str	r7, [sp, #60]	; 0x3c
   11850:	str	r0, [sp, #52]	; 0x34
   11854:	str	r8, [sp, #160]	; 0xa0
   11858:	mov	r8, fp
   1185c:	ldr	fp, [sp, #160]	; 0xa0
   11860:	mov	r9, #0
   11864:	ldr	r3, [sp, #24]
   11868:	cmn	r3, #1
   1186c:	beq	11dd4 <abort@plt+0x1050>
   11870:	ldr	r3, [sp, #24]
   11874:	subs	r6, r3, r9
   11878:	movne	r6, #1
   1187c:	cmp	r6, #0
   11880:	beq	11dec <abort@plt+0x1068>
   11884:	ldr	r7, [sp, #28]
   11888:	ldr	r0, [sp, #36]	; 0x24
   1188c:	cmp	fp, #2
   11890:	moveq	r7, #0
   11894:	andne	r7, r7, #1
   11898:	add	r3, r0, r9
   1189c:	cmp	r7, #0
   118a0:	str	r3, [sp, #48]	; 0x30
   118a4:	beq	12290 <abort@plt+0x150c>
   118a8:	ldr	r2, [sp, #52]	; 0x34
   118ac:	cmp	r2, #0
   118b0:	beq	12574 <abort@plt+0x17f0>
   118b4:	ldr	r1, [sp, #24]
   118b8:	cmp	r2, #1
   118bc:	mov	r3, r2
   118c0:	movls	r3, #0
   118c4:	movhi	r3, #1
   118c8:	cmn	r1, #1
   118cc:	movne	r3, #0
   118d0:	cmp	r3, #0
   118d4:	add	r5, r9, r2
   118d8:	beq	118e4 <abort@plt+0xb60>
   118dc:	bl	10cd0 <strlen@plt>
   118e0:	str	r0, [sp, #24]
   118e4:	ldr	r3, [sp, #24]
   118e8:	cmp	r5, r3
   118ec:	bhi	12574 <abort@plt+0x17f0>
   118f0:	ldr	r2, [sp, #52]	; 0x34
   118f4:	ldr	r1, [sp, #60]	; 0x3c
   118f8:	ldr	r0, [sp, #48]	; 0x30
   118fc:	bl	10bec <memcmp@plt>
   11900:	cmp	r0, #0
   11904:	bne	12574 <abort@plt+0x17f0>
   11908:	ldr	r3, [sp, #32]
   1190c:	cmp	r3, #0
   11910:	bne	12e30 <abort@plt+0x20ac>
   11914:	ldr	r3, [sp, #48]	; 0x30
   11918:	ldrb	r5, [r3]
   1191c:	cmp	r5, #126	; 0x7e
   11920:	ldrls	pc, [pc, r5, lsl #2]
   11924:	b	121f4 <abort@plt+0x1470>
   11928:	andeq	r2, r1, r0, ror #1
   1192c:	strdeq	r2, [r1], -r4
   11930:	strdeq	r2, [r1], -r4
   11934:	strdeq	r2, [r1], -r4
   11938:	strdeq	r2, [r1], -r4
   1193c:	strdeq	r2, [r1], -r4
   11940:	strdeq	r2, [r1], -r4
   11944:	andeq	r2, r1, ip, lsr #3
   11948:	muleq	r1, ip, r1
   1194c:	muleq	r1, ip, r0
   11950:	andeq	r2, r1, r4, rrx
   11954:	strheq	r2, [r1], -ip
   11958:	andeq	r2, r1, r4, lsr #1
   1195c:	ldrdeq	r1, [r1], -r4
   11960:	strdeq	r2, [r1], -r4
   11964:	strdeq	r2, [r1], -r4
   11968:	strdeq	r2, [r1], -r4
   1196c:	strdeq	r2, [r1], -r4
   11970:	strdeq	r2, [r1], -r4
   11974:	strdeq	r2, [r1], -r4
   11978:	strdeq	r2, [r1], -r4
   1197c:	strdeq	r2, [r1], -r4
   11980:	strdeq	r2, [r1], -r4
   11984:	strdeq	r2, [r1], -r4
   11988:	strdeq	r2, [r1], -r4
   1198c:	strdeq	r2, [r1], -r4
   11990:	strdeq	r2, [r1], -r4
   11994:	strdeq	r2, [r1], -r4
   11998:	strdeq	r2, [r1], -r4
   1199c:	strdeq	r2, [r1], -r4
   119a0:	strdeq	r2, [r1], -r4
   119a4:	strdeq	r2, [r1], -r4
   119a8:			; <UNDEFINED> instruction: 0x000121b4
   119ac:	andeq	r2, r1, r8, asr #1
   119b0:	andeq	r2, r1, r8, asr #1
   119b4:	andeq	r2, r1, ip, asr #3
   119b8:	andeq	r2, r1, r8, asr #1
   119bc:	andeq	r2, r1, r8, ror #3
   119c0:	andeq	r2, r1, r8, asr #1
   119c4:	andeq	r1, r1, r8, lsl #30
   119c8:	andeq	r2, r1, r8, asr #1
   119cc:	andeq	r2, r1, r8, asr #1
   119d0:	andeq	r2, r1, r8, asr #1
   119d4:	andeq	r2, r1, r8, ror #3
   119d8:	andeq	r2, r1, r8, ror #3
   119dc:	andeq	r2, r1, r8, ror #3
   119e0:	andeq	r2, r1, r8, ror #3
   119e4:	andeq	r2, r1, r8, ror #3
   119e8:	andeq	r2, r1, r8, ror #3
   119ec:	andeq	r2, r1, r8, ror #3
   119f0:	andeq	r2, r1, r8, ror #3
   119f4:	andeq	r2, r1, r8, ror #3
   119f8:	andeq	r2, r1, r8, ror #3
   119fc:	andeq	r2, r1, r8, ror #3
   11a00:	andeq	r2, r1, r8, ror #3
   11a04:	andeq	r2, r1, r8, ror #3
   11a08:	andeq	r2, r1, r8, ror #3
   11a0c:	andeq	r2, r1, r8, ror #3
   11a10:	andeq	r2, r1, r8, ror #3
   11a14:	andeq	r2, r1, r8, asr #1
   11a18:	andeq	r2, r1, r8, asr #1
   11a1c:	andeq	r2, r1, r8, asr #1
   11a20:	andeq	r2, r1, r8, asr #1
   11a24:	ldrdeq	r1, [r1], -ip
   11a28:	strdeq	r2, [r1], -r4
   11a2c:	andeq	r2, r1, r8, ror #3
   11a30:	andeq	r2, r1, r8, ror #3
   11a34:	andeq	r2, r1, r8, ror #3
   11a38:	andeq	r2, r1, r8, ror #3
   11a3c:	andeq	r2, r1, r8, ror #3
   11a40:	andeq	r2, r1, r8, ror #3
   11a44:	andeq	r2, r1, r8, ror #3
   11a48:	andeq	r2, r1, r8, ror #3
   11a4c:	andeq	r2, r1, r8, ror #3
   11a50:	andeq	r2, r1, r8, ror #3
   11a54:	andeq	r2, r1, r8, ror #3
   11a58:	andeq	r2, r1, r8, ror #3
   11a5c:	andeq	r2, r1, r8, ror #3
   11a60:	andeq	r2, r1, r8, ror #3
   11a64:	andeq	r2, r1, r8, ror #3
   11a68:	andeq	r2, r1, r8, ror #3
   11a6c:	andeq	r2, r1, r8, ror #3
   11a70:	andeq	r2, r1, r8, ror #3
   11a74:	andeq	r2, r1, r8, ror #3
   11a78:	andeq	r2, r1, r8, ror #3
   11a7c:	andeq	r2, r1, r8, ror #3
   11a80:	andeq	r2, r1, r8, ror #3
   11a84:	andeq	r2, r1, r8, ror #3
   11a88:	andeq	r2, r1, r8, ror #3
   11a8c:	andeq	r2, r1, r8, ror #3
   11a90:	andeq	r2, r1, r8, ror #3
   11a94:	andeq	r2, r1, r8, asr #1
   11a98:	muleq	r1, r4, lr
   11a9c:	andeq	r2, r1, r8, ror #3
   11aa0:	andeq	r2, r1, r8, asr #1
   11aa4:	andeq	r2, r1, r8, ror #3
   11aa8:	andeq	r2, r1, r8, asr #1
   11aac:	andeq	r2, r1, r8, ror #3
   11ab0:	andeq	r2, r1, r8, ror #3
   11ab4:	andeq	r2, r1, r8, ror #3
   11ab8:	andeq	r2, r1, r8, ror #3
   11abc:	andeq	r2, r1, r8, ror #3
   11ac0:	andeq	r2, r1, r8, ror #3
   11ac4:	andeq	r2, r1, r8, ror #3
   11ac8:	andeq	r2, r1, r8, ror #3
   11acc:	andeq	r2, r1, r8, ror #3
   11ad0:	andeq	r2, r1, r8, ror #3
   11ad4:	andeq	r2, r1, r8, ror #3
   11ad8:	andeq	r2, r1, r8, ror #3
   11adc:	andeq	r2, r1, r8, ror #3
   11ae0:	andeq	r2, r1, r8, ror #3
   11ae4:	andeq	r2, r1, r8, ror #3
   11ae8:	andeq	r2, r1, r8, ror #3
   11aec:	andeq	r2, r1, r8, ror #3
   11af0:	andeq	r2, r1, r8, ror #3
   11af4:	andeq	r2, r1, r8, ror #3
   11af8:	andeq	r2, r1, r8, ror #3
   11afc:	andeq	r2, r1, r8, ror #3
   11b00:	andeq	r2, r1, r8, ror #3
   11b04:	andeq	r2, r1, r8, ror #3
   11b08:	andeq	r2, r1, r8, ror #3
   11b0c:	andeq	r2, r1, r8, ror #3
   11b10:	andeq	r2, r1, r8, ror #3
   11b14:	andeq	r1, r1, ip, lsr #25
   11b18:	andeq	r2, r1, r8, asr #1
   11b1c:	andeq	r1, r1, ip, lsr #25
   11b20:	andeq	r2, r1, ip, asr #3
   11b24:	cmp	r4, #0
   11b28:	moveq	r3, #1
   11b2c:	streq	r3, [sp, #28]
   11b30:	beq	1225c <abort@plt+0x14d8>
   11b34:	mov	r3, #0
   11b38:	mov	r4, r3
   11b3c:	mov	r2, #1
   11b40:	str	r2, [sp, #40]	; 0x28
   11b44:	str	r3, [sp, #68]	; 0x44
   11b48:	str	r2, [sp, #32]
   11b4c:	str	r2, [sp, #52]	; 0x34
   11b50:	ldr	r3, [pc, #2584]	; 12570 <abort@plt+0x17ec>
   11b54:	str	r4, [sp, #44]	; 0x2c
   11b58:	str	r4, [sp, #72]	; 0x48
   11b5c:	str	r4, [sp, #28]
   11b60:	str	r3, [sp, #60]	; 0x3c
   11b64:	mov	r8, #2
   11b68:	b	11854 <abort@plt+0xad0>
   11b6c:	cmp	r4, #0
   11b70:	bne	12dfc <abort@plt+0x2078>
   11b74:	cmp	sl, #0
   11b78:	beq	12bbc <abort@plt+0x1e38>
   11b7c:	mov	r3, #34	; 0x22
   11b80:	strb	r3, [fp]
   11b84:	ldr	r3, [pc, #2528]	; 1256c <abort@plt+0x17e8>
   11b88:	mov	r1, r4
   11b8c:	mov	r2, #1
   11b90:	str	r4, [sp, #68]	; 0x44
   11b94:	str	r2, [sp, #40]	; 0x28
   11b98:	mov	r4, r2
   11b9c:	str	r1, [sp, #44]	; 0x2c
   11ba0:	str	r1, [sp, #72]	; 0x48
   11ba4:	str	r1, [sp, #32]
   11ba8:	str	r2, [sp, #28]
   11bac:	str	r2, [sp, #52]	; 0x34
   11bb0:	str	r3, [sp, #60]	; 0x3c
   11bb4:	b	11854 <abort@plt+0xad0>
   11bb8:	mov	r3, #0
   11bbc:	str	r3, [sp, #68]	; 0x44
   11bc0:	str	r3, [sp, #44]	; 0x2c
   11bc4:	str	r3, [sp, #32]
   11bc8:	str	r3, [sp, #28]
   11bcc:	str	r3, [sp, #60]	; 0x3c
   11bd0:	mov	r3, #1
   11bd4:	str	r8, [sp, #72]	; 0x48
   11bd8:	str	r8, [sp, #52]	; 0x34
   11bdc:	mov	r4, r8
   11be0:	str	r3, [sp, #40]	; 0x28
   11be4:	b	11854 <abort@plt+0xad0>
   11be8:	mov	r3, #1
   11bec:	str	r3, [sp, #40]	; 0x28
   11bf0:	str	r3, [sp, #32]
   11bf4:	str	r3, [sp, #28]
   11bf8:	str	r3, [sp, #52]	; 0x34
   11bfc:	ldr	r3, [pc, #2408]	; 1256c <abort@plt+0x17e8>
   11c00:	mov	r2, #0
   11c04:	mov	r4, r2
   11c08:	str	r2, [sp, #68]	; 0x44
   11c0c:	str	r2, [sp, #44]	; 0x2c
   11c10:	str	r2, [sp, #72]	; 0x48
   11c14:	str	r3, [sp, #60]	; 0x3c
   11c18:	mov	r8, #5
   11c1c:	b	11854 <abort@plt+0xad0>
   11c20:	mov	r3, #0
   11c24:	mov	r2, #1
   11c28:	str	r2, [sp, #40]	; 0x28
   11c2c:	mov	r4, r3
   11c30:	str	r3, [sp, #68]	; 0x44
   11c34:	str	r2, [sp, #28]
   11c38:	str	r3, [sp, #44]	; 0x2c
   11c3c:	str	r3, [sp, #72]	; 0x48
   11c40:	str	r3, [sp, #32]
   11c44:	str	r3, [sp, #52]	; 0x34
   11c48:	str	r3, [sp, #60]	; 0x3c
   11c4c:	b	11854 <abort@plt+0xad0>
   11c50:	mov	r2, #1
   11c54:	mov	r3, #0
   11c58:	str	r2, [sp, #40]	; 0x28
   11c5c:	mov	r4, r3
   11c60:	str	r3, [sp, #68]	; 0x44
   11c64:	str	r8, [sp, #52]	; 0x34
   11c68:	str	r2, [sp, #32]
   11c6c:	b	11b50 <abort@plt+0xdcc>
   11c70:	mov	r3, #1
   11c74:	str	r3, [sp, #40]	; 0x28
   11c78:	str	r3, [sp, #32]
   11c7c:	str	r3, [sp, #28]
   11c80:	str	r3, [sp, #52]	; 0x34
   11c84:	ldr	r3, [pc, #2276]	; 12570 <abort@plt+0x17ec>
   11c88:	mov	r2, #0
   11c8c:	mov	r4, r2
   11c90:	str	r2, [sp, #68]	; 0x44
   11c94:	str	r2, [sp, #44]	; 0x2c
   11c98:	str	r2, [sp, #72]	; 0x48
   11c9c:	str	r3, [sp, #60]	; 0x3c
   11ca0:	mov	r8, #2
   11ca4:	b	11854 <abort@plt+0xad0>
   11ca8:	mov	r7, #0
   11cac:	ldr	r3, [sp, #24]
   11cb0:	cmn	r3, #1
   11cb4:	beq	127f0 <abort@plt+0x1a6c>
   11cb8:	ldr	r3, [sp, #24]
   11cbc:	subs	r3, r3, #1
   11cc0:	movne	r3, #1
   11cc4:	cmp	r3, #0
   11cc8:	sub	r2, fp, #2
   11ccc:	clz	r2, r2
   11cd0:	lsr	r2, r2, #5
   11cd4:	bne	11ed0 <abort@plt+0x114c>
   11cd8:	cmp	r9, #0
   11cdc:	bne	11ed0 <abort@plt+0x114c>
   11ce0:	ldr	r3, [sp, #32]
   11ce4:	tst	r3, r2
   11ce8:	bne	11ff0 <abort@plt+0x126c>
   11cec:	ldr	r3, [sp, #28]
   11cf0:	eor	r3, r3, #1
   11cf4:	orr	r3, r2, r3
   11cf8:	ldr	r2, [sp, #32]
   11cfc:	eor	r3, r3, #1
   11d00:	orrs	r3, r2, r3
   11d04:	beq	11d34 <abort@plt+0xfb0>
   11d08:	mov	r3, #0
   11d0c:	ldr	r1, [sp, #56]	; 0x38
   11d10:	cmp	r1, #0
   11d14:	beq	11d34 <abort@plt+0xfb0>
   11d18:	lsr	r2, r5, #5
   11d1c:	and	r0, r5, #31
   11d20:	uxtb	r2, r2
   11d24:	ldr	r1, [r1, r2, lsl #2]
   11d28:	lsr	r2, r1, r0
   11d2c:	tst	r2, #1
   11d30:	bne	11d3c <abort@plt+0xfb8>
   11d34:	cmp	r7, #0
   11d38:	beq	11f8c <abort@plt+0x1208>
   11d3c:	sub	r2, fp, #2
   11d40:	clz	r2, r2
   11d44:	lsr	r2, r2, #5
   11d48:	ldr	r3, [sp, #32]
   11d4c:	cmp	r3, #0
   11d50:	bne	1207c <abort@plt+0x12f8>
   11d54:	ldr	r3, [sp, #44]	; 0x2c
   11d58:	eor	r3, r3, #1
   11d5c:	ands	r3, r2, r3
   11d60:	beq	11d98 <abort@plt+0x1014>
   11d64:	cmp	sl, r4
   11d68:	movhi	r2, #39	; 0x27
   11d6c:	strbhi	r2, [r8, r4]
   11d70:	add	r2, r4, #1
   11d74:	cmp	r2, sl
   11d78:	movcc	r1, #36	; 0x24
   11d7c:	strbcc	r1, [r8, r2]
   11d80:	add	r2, r4, #2
   11d84:	cmp	r2, sl
   11d88:	add	r4, r4, #3
   11d8c:	movcc	r1, #39	; 0x27
   11d90:	strbcc	r1, [r8, r2]
   11d94:	str	r3, [sp, #44]	; 0x2c
   11d98:	cmp	r4, sl
   11d9c:	movcc	r3, #92	; 0x5c
   11da0:	strbcc	r3, [r8, r4]
   11da4:	add	r9, r9, #1
   11da8:	add	r4, r4, #1
   11dac:	cmp	r4, sl
   11db0:	ldr	r3, [sp, #40]	; 0x28
   11db4:	strbcc	r5, [r8, r4]
   11db8:	cmp	r6, #0
   11dbc:	moveq	r3, #0
   11dc0:	str	r3, [sp, #40]	; 0x28
   11dc4:	ldr	r3, [sp, #24]
   11dc8:	add	r4, r4, #1
   11dcc:	cmn	r3, #1
   11dd0:	bne	11870 <abort@plt+0xaec>
   11dd4:	ldr	r3, [sp, #36]	; 0x24
   11dd8:	ldrb	r6, [r3, r9]
   11ddc:	adds	r6, r6, #0
   11de0:	movne	r6, #1
   11de4:	cmp	r6, #0
   11de8:	bne	11884 <abort@plt+0xb00>
   11dec:	str	fp, [sp, #160]	; 0xa0
   11df0:	mov	fp, r8
   11df4:	ldr	r8, [sp, #160]	; 0xa0
   11df8:	ldr	r1, [sp, #32]
   11dfc:	cmp	r4, #0
   11e00:	sub	r2, r8, #2
   11e04:	clz	r2, r2
   11e08:	lsr	r2, r2, #5
   11e0c:	andeq	r3, r2, r1
   11e10:	movne	r3, #0
   11e14:	cmp	r3, #0
   11e18:	bne	12f04 <abort@plt+0x2180>
   11e1c:	eor	r3, r1, #1
   11e20:	ands	r2, r2, r3
   11e24:	beq	12e40 <abort@plt+0x20bc>
   11e28:	ldr	r3, [sp, #68]	; 0x44
   11e2c:	cmp	r3, #0
   11e30:	beq	12e44 <abort@plt+0x20c0>
   11e34:	ldr	r3, [sp, #40]	; 0x28
   11e38:	cmp	r3, #0
   11e3c:	bne	12ec0 <abort@plt+0x213c>
   11e40:	ldr	r3, [sp, #72]	; 0x48
   11e44:	adds	r3, r3, #0
   11e48:	movne	r3, #1
   11e4c:	cmp	sl, #0
   11e50:	movne	r3, #0
   11e54:	cmp	r3, #0
   11e58:	ldreq	r2, [sp, #68]	; 0x44
   11e5c:	beq	12e44 <abort@plt+0x20c0>
   11e60:	ldr	sl, [sp, #72]	; 0x48
   11e64:	str	r3, [sp, #68]	; 0x44
   11e68:	ldr	r3, [pc, #1792]	; 12570 <abort@plt+0x17ec>
   11e6c:	mov	r2, #39	; 0x27
   11e70:	mov	r4, #1
   11e74:	str	r3, [sp, #60]	; 0x3c
   11e78:	mov	r3, #0
   11e7c:	strb	r2, [fp]
   11e80:	str	r4, [sp, #52]	; 0x34
   11e84:	mov	r8, #2
   11e88:	str	r3, [sp, #32]
   11e8c:	b	11854 <abort@plt+0xad0>
   11e90:	mov	r7, #0
   11e94:	cmp	fp, #2
   11e98:	beq	127d0 <abort@plt+0x1a4c>
   11e9c:	ldr	r3, [sp, #52]	; 0x34
   11ea0:	ldr	r2, [sp, #28]
   11ea4:	ldr	r1, [sp, #32]
   11ea8:	cmp	r3, #0
   11eac:	andne	r2, r2, r1
   11eb0:	moveq	r2, #0
   11eb4:	cmp	r2, #0
   11eb8:	moveq	r5, #92	; 0x5c
   11ebc:	moveq	r3, r5
   11ec0:	bne	127dc <abort@plt+0x1a58>
   11ec4:	ldr	r1, [sp, #28]
   11ec8:	cmp	r1, #0
   11ecc:	bne	12f4c <abort@plt+0x21c8>
   11ed0:	mov	r6, #0
   11ed4:	b	11cec <abort@plt+0xf68>
   11ed8:	mov	r7, #0
   11edc:	cmp	fp, #2
   11ee0:	beq	12840 <abort@plt+0x1abc>
   11ee4:	cmp	fp, #5
   11ee8:	beq	12804 <abort@plt+0x1a80>
   11eec:	sub	r2, fp, #2
   11ef0:	mov	r6, #0
   11ef4:	clz	r2, r2
   11ef8:	mov	r5, #63	; 0x3f
   11efc:	lsr	r2, r2, #5
   11f00:	b	11cec <abort@plt+0xf68>
   11f04:	mov	r7, #0
   11f08:	cmp	fp, #2
   11f0c:	strne	r6, [sp, #68]	; 0x44
   11f10:	movne	r2, #0
   11f14:	movne	r5, #39	; 0x27
   11f18:	bne	11cec <abort@plt+0xf68>
   11f1c:	ldr	r3, [sp, #32]
   11f20:	cmp	r3, #0
   11f24:	bne	12c20 <abort@plt+0x1e9c>
   11f28:	cmp	sl, #0
   11f2c:	ldr	r3, [sp, #72]	; 0x48
   11f30:	clz	r3, r3
   11f34:	lsr	r3, r3, #5
   11f38:	moveq	r3, #0
   11f3c:	cmp	r3, #0
   11f40:	bne	12b54 <abort@plt+0x1dd0>
   11f44:	cmp	sl, r4
   11f48:	movhi	r3, #39	; 0x27
   11f4c:	strbhi	r3, [r8, r4]
   11f50:	add	r3, r4, #1
   11f54:	cmp	sl, r3
   11f58:	movhi	r2, #92	; 0x5c
   11f5c:	strbhi	r2, [r8, r3]
   11f60:	add	r3, r4, #2
   11f64:	cmp	sl, r3
   11f68:	movhi	r2, #39	; 0x27
   11f6c:	strbhi	r2, [r8, r3]
   11f70:	mov	r3, #0
   11f74:	cmp	r7, #0
   11f78:	add	r4, r4, #3
   11f7c:	str	r3, [sp, #44]	; 0x2c
   11f80:	str	r6, [sp, #68]	; 0x44
   11f84:	mov	r5, #39	; 0x27
   11f88:	bne	11d3c <abort@plt+0xfb8>
   11f8c:	ldr	r2, [sp, #44]	; 0x2c
   11f90:	eor	r3, r3, #1
   11f94:	and	r3, r3, r2
   11f98:	add	r9, r9, #1
   11f9c:	uxtb	r3, r3
   11fa0:	cmp	r3, #0
   11fa4:	beq	11dac <abort@plt+0x1028>
   11fa8:	cmp	sl, r4
   11fac:	movhi	r3, #39	; 0x27
   11fb0:	strbhi	r3, [r8, r4]
   11fb4:	add	r3, r4, #1
   11fb8:	cmp	sl, r3
   11fbc:	movhi	r2, #39	; 0x27
   11fc0:	strbhi	r2, [r8, r3]
   11fc4:	mov	r3, #0
   11fc8:	add	r4, r4, #2
   11fcc:	str	r3, [sp, #44]	; 0x2c
   11fd0:	b	11dac <abort@plt+0x1028>
   11fd4:	mov	r3, #114	; 0x72
   11fd8:	ldr	r1, [sp, #32]
   11fdc:	sub	r2, fp, #2
   11fe0:	clz	r2, r2
   11fe4:	lsr	r2, r2, #5
   11fe8:	tst	r2, r1
   11fec:	beq	11ec4 <abort@plt+0x1140>
   11ff0:	mov	fp, r8
   11ff4:	mov	r8, #2
   11ff8:	ldr	r3, [sp, #28]
   11ffc:	cmp	r3, #0
   12000:	movne	r8, #4
   12004:	ldr	r3, [sp, #164]	; 0xa4
   12008:	mov	ip, #0
   1200c:	bic	r3, r3, #2
   12010:	str	r3, [sp, #4]
   12014:	ldr	r3, [sp, #76]	; 0x4c
   12018:	str	r8, [sp]
   1201c:	str	r3, [sp, #16]
   12020:	ldr	r3, [sp, #80]	; 0x50
   12024:	ldr	r2, [sp, #36]	; 0x24
   12028:	str	r3, [sp, #12]
   1202c:	mov	r1, sl
   12030:	ldr	r3, [sp, #24]
   12034:	mov	r0, fp
   12038:	str	ip, [sp, #8]
   1203c:	bl	1175c <abort@plt+0x9d8>
   12040:	mov	r4, r0
   12044:	ldr	r3, [pc, #1304]	; 12564 <abort@plt+0x17e0>
   12048:	ldr	r2, [sp, #116]	; 0x74
   1204c:	mov	r0, r4
   12050:	ldr	r3, [r3]
   12054:	cmp	r2, r3
   12058:	bne	12f48 <abort@plt+0x21c4>
   1205c:	add	sp, sp, #124	; 0x7c
   12060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12064:	mov	r5, #110	; 0x6e
   12068:	ldr	r3, [sp, #32]
   1206c:	mov	r2, #0
   12070:	cmp	r3, #0
   12074:	mov	r6, r2
   12078:	beq	11d54 <abort@plt+0xfd0>
   1207c:	str	fp, [sp, #160]	; 0xa0
   12080:	mov	fp, r8
   12084:	ldr	r8, [sp, #160]	; 0xa0
   12088:	mov	r3, r2
   1208c:	ldr	r2, [sp, #28]
   12090:	and	r2, r2, r3
   12094:	str	r2, [sp, #28]
   12098:	b	11ff8 <abort@plt+0x1274>
   1209c:	mov	r5, #116	; 0x74
   120a0:	b	12068 <abort@plt+0x12e4>
   120a4:	mov	r5, #102	; 0x66
   120a8:	ldr	r3, [sp, #32]
   120ac:	cmp	r3, #0
   120b0:	bne	12c5c <abort@plt+0x1ed8>
   120b4:	mov	r6, #0
   120b8:	b	11d98 <abort@plt+0x1014>
   120bc:	mov	r5, #118	; 0x76
   120c0:	b	120a8 <abort@plt+0x1324>
   120c4:	mov	r7, #0
   120c8:	mov	r6, #0
   120cc:	b	11d08 <abort@plt+0xf84>
   120d0:	ldr	r3, [sp, #32]
   120d4:	cmp	r3, #0
   120d8:	bne	12ea0 <abort@plt+0x211c>
   120dc:	mov	r7, r3
   120e0:	ldr	r3, [sp, #44]	; 0x2c
   120e4:	sub	r2, fp, #2
   120e8:	eor	r3, r3, #1
   120ec:	clz	r2, r2
   120f0:	lsr	r2, r2, #5
   120f4:	ands	r3, r2, r3
   120f8:	beq	12b40 <abort@plt+0x1dbc>
   120fc:	cmp	sl, r4
   12100:	movhi	r1, #39	; 0x27
   12104:	strbhi	r1, [r8, r4]
   12108:	add	r1, r4, #1
   1210c:	cmp	sl, r1
   12110:	movhi	r0, #36	; 0x24
   12114:	strbhi	r0, [r8, r1]
   12118:	add	r1, r4, #2
   1211c:	cmp	sl, r1
   12120:	movhi	r0, #39	; 0x27
   12124:	strbhi	r0, [r8, r1]
   12128:	add	r1, r4, #3
   1212c:	cmp	sl, r1
   12130:	bls	12ba0 <abort@plt+0x1e1c>
   12134:	mov	r4, r1
   12138:	mov	r1, #92	; 0x5c
   1213c:	strb	r1, [r8, r4]
   12140:	mov	r1, r4
   12144:	str	r3, [sp, #44]	; 0x2c
   12148:	cmp	fp, #2
   1214c:	add	r4, r4, #1
   12150:	beq	12be8 <abort@plt+0x1e64>
   12154:	ldr	r0, [sp, #24]
   12158:	add	r3, r9, #1
   1215c:	cmp	r3, r0
   12160:	bcs	12178 <abort@plt+0x13f4>
   12164:	ldr	r0, [sp, #36]	; 0x24
   12168:	ldrb	r3, [r0, r3]
   1216c:	sub	r3, r3, #48	; 0x30
   12170:	cmp	r3, #9
   12174:	bls	12bf8 <abort@plt+0x1e74>
   12178:	mov	r5, #48	; 0x30
   1217c:	ldr	r3, [sp, #28]
   12180:	eor	r3, r3, #1
   12184:	orrs	r2, r2, r3
   12188:	mov	r3, r6
   1218c:	moveq	r6, r2
   12190:	beq	11d0c <abort@plt+0xf88>
   12194:	mov	r6, #0
   12198:	b	11d34 <abort@plt+0xfb0>
   1219c:	mov	r2, #0
   121a0:	mov	r6, r2
   121a4:	mov	r5, #98	; 0x62
   121a8:	b	11d54 <abort@plt+0xfd0>
   121ac:	mov	r5, #97	; 0x61
   121b0:	b	120b4 <abort@plt+0x1330>
   121b4:	mov	r3, r7
   121b8:	mov	r6, r7
   121bc:	mov	r2, #0
   121c0:	mov	r7, r3
   121c4:	mov	r5, #32
   121c8:	b	11cec <abort@plt+0xf68>
   121cc:	cmp	r9, #0
   121d0:	mov	r3, r7
   121d4:	bne	1279c <abort@plt+0x1a18>
   121d8:	mov	r6, r7
   121dc:	mov	r2, r9
   121e0:	mov	r7, r3
   121e4:	b	11cec <abort@plt+0xf68>
   121e8:	mov	r6, r7
   121ec:	b	11d08 <abort@plt+0xf84>
   121f0:	mov	r7, #0
   121f4:	ldr	r3, [sp, #64]	; 0x40
   121f8:	cmp	r3, #1
   121fc:	bne	12858 <abort@plt+0x1ad4>
   12200:	bl	10cb8 <__ctype_b_loc@plt>
   12204:	ldr	r2, [sp, #64]	; 0x40
   12208:	sxth	r3, r5
   1220c:	mov	ip, r2
   12210:	lsl	r3, r3, #1
   12214:	ldr	r2, [r0]
   12218:	ldrh	r3, [r2, r3]
   1221c:	and	r3, r3, #16384	; 0x4000
   12220:	cmp	r3, #0
   12224:	ldr	r3, [sp, #28]
   12228:	movne	r6, #1
   1222c:	moveq	r6, #0
   12230:	movne	r2, #0
   12234:	andeq	r2, r3, #1
   12238:	cmp	r2, #0
   1223c:	bne	12b68 <abort@plt+0x1de4>
   12240:	sub	r2, fp, #2
   12244:	clz	r2, r2
   12248:	lsr	r2, r2, #5
   1224c:	b	11cec <abort@plt+0xf68>
   12250:	cmp	r4, #0
   12254:	bne	12f14 <abort@plt+0x2190>
   12258:	str	r4, [sp, #28]
   1225c:	cmp	sl, #0
   12260:	bne	12f58 <abort@plt+0x21d4>
   12264:	ldr	r3, [pc, #772]	; 12570 <abort@plt+0x17ec>
   12268:	mov	r4, #1
   1226c:	str	r4, [sp, #40]	; 0x28
   12270:	str	r3, [sp, #60]	; 0x3c
   12274:	str	r4, [sp, #52]	; 0x34
   12278:	str	sl, [sp, #72]	; 0x48
   1227c:	str	sl, [sp, #68]	; 0x44
   12280:	str	sl, [sp, #44]	; 0x2c
   12284:	str	sl, [sp, #32]
   12288:	mov	r8, #2
   1228c:	b	11854 <abort@plt+0xad0>
   12290:	ldr	r3, [sp, #36]	; 0x24
   12294:	ldrb	r5, [r3, r9]
   12298:	cmp	r5, #126	; 0x7e
   1229c:	ldrls	pc, [pc, r5, lsl #2]
   122a0:	b	121f4 <abort@plt+0x1470>
   122a4:	ldrdeq	r2, [r1], -r8
   122a8:	strdeq	r2, [r1], -r4
   122ac:	strdeq	r2, [r1], -r4
   122b0:	strdeq	r2, [r1], -r4
   122b4:	strdeq	r2, [r1], -r4
   122b8:	strdeq	r2, [r1], -r4
   122bc:	strdeq	r2, [r1], -r4
   122c0:	andeq	r2, r1, r4, asr #9
   122c4:			; <UNDEFINED> instruction: 0x000124b0
   122c8:	andeq	r2, r1, r8, lsr #9
   122cc:	andeq	r2, r1, r0, lsr #9
   122d0:	andeq	r2, r1, r0, asr r5
   122d4:	andeq	r2, r1, ip, lsr r5
   122d8:	ldrdeq	r1, [r1], -r4
   122dc:	strdeq	r2, [r1], -r4
   122e0:	strdeq	r2, [r1], -r4
   122e4:	strdeq	r2, [r1], -r4
   122e8:	strdeq	r2, [r1], -r4
   122ec:	strdeq	r2, [r1], -r4
   122f0:	strdeq	r2, [r1], -r4
   122f4:	strdeq	r2, [r1], -r4
   122f8:	strdeq	r2, [r1], -r4
   122fc:	strdeq	r2, [r1], -r4
   12300:	strdeq	r2, [r1], -r4
   12304:	strdeq	r2, [r1], -r4
   12308:	strdeq	r2, [r1], -r4
   1230c:	strdeq	r2, [r1], -r4
   12310:	strdeq	r2, [r1], -r4
   12314:	strdeq	r2, [r1], -r4
   12318:	strdeq	r2, [r1], -r4
   1231c:	strdeq	r2, [r1], -r4
   12320:	strdeq	r2, [r1], -r4
   12324:	andeq	r2, r1, ip, lsr #10
   12328:	andeq	r2, r1, r8, lsl r5
   1232c:	andeq	r2, r1, r8, lsl r5
   12330:	andeq	r2, r1, r8, lsl #10
   12334:	andeq	r2, r1, r8, lsl r5
   12338:	andeq	r2, r1, r0, asr #4
   1233c:	andeq	r2, r1, r8, lsl r5
   12340:	andeq	r1, r1, r8, lsl #30
   12344:	andeq	r2, r1, r8, lsl r5
   12348:	andeq	r2, r1, r8, lsl r5
   1234c:	andeq	r2, r1, r8, lsl r5
   12350:	andeq	r2, r1, r0, asr #4
   12354:	andeq	r2, r1, r0, asr #4
   12358:	andeq	r2, r1, r0, asr #4
   1235c:	andeq	r2, r1, r0, asr #4
   12360:	andeq	r2, r1, r0, asr #4
   12364:	andeq	r2, r1, r0, asr #4
   12368:	andeq	r2, r1, r0, asr #4
   1236c:	andeq	r2, r1, r0, asr #4
   12370:	andeq	r2, r1, r0, asr #4
   12374:	andeq	r2, r1, r0, asr #4
   12378:	andeq	r2, r1, r0, asr #4
   1237c:	andeq	r2, r1, r0, asr #4
   12380:	andeq	r2, r1, r0, asr #4
   12384:	andeq	r2, r1, r0, asr #4
   12388:	andeq	r2, r1, r0, asr #4
   1238c:	andeq	r2, r1, r0, asr #4
   12390:	andeq	r2, r1, r8, lsl r5
   12394:	andeq	r2, r1, r8, lsl r5
   12398:	andeq	r2, r1, r8, lsl r5
   1239c:	andeq	r2, r1, r8, lsl r5
   123a0:	ldrdeq	r1, [r1], -ip
   123a4:	strdeq	r2, [r1], -r4
   123a8:	andeq	r2, r1, r0, asr #4
   123ac:	andeq	r2, r1, r0, asr #4
   123b0:	andeq	r2, r1, r0, asr #4
   123b4:	andeq	r2, r1, r0, asr #4
   123b8:	andeq	r2, r1, r0, asr #4
   123bc:	andeq	r2, r1, r0, asr #4
   123c0:	andeq	r2, r1, r0, asr #4
   123c4:	andeq	r2, r1, r0, asr #4
   123c8:	andeq	r2, r1, r0, asr #4
   123cc:	andeq	r2, r1, r0, asr #4
   123d0:	andeq	r2, r1, r0, asr #4
   123d4:	andeq	r2, r1, r0, asr #4
   123d8:	andeq	r2, r1, r0, asr #4
   123dc:	andeq	r2, r1, r0, asr #4
   123e0:	andeq	r2, r1, r0, asr #4
   123e4:	andeq	r2, r1, r0, asr #4
   123e8:	andeq	r2, r1, r0, asr #4
   123ec:	andeq	r2, r1, r0, asr #4
   123f0:	andeq	r2, r1, r0, asr #4
   123f4:	andeq	r2, r1, r0, asr #4
   123f8:	andeq	r2, r1, r0, asr #4
   123fc:	andeq	r2, r1, r0, asr #4
   12400:	andeq	r2, r1, r0, asr #4
   12404:	andeq	r2, r1, r0, asr #4
   12408:	andeq	r2, r1, r0, asr #4
   1240c:	andeq	r2, r1, r0, asr #4
   12410:	andeq	r2, r1, r8, lsl r5
   12414:	muleq	r1, r4, lr
   12418:	andeq	r2, r1, r0, asr #4
   1241c:	andeq	r2, r1, r8, lsl r5
   12420:	andeq	r2, r1, r0, asr #4
   12424:	andeq	r2, r1, r8, lsl r5
   12428:	andeq	r2, r1, r0, asr #4
   1242c:	andeq	r2, r1, r0, asr #4
   12430:	andeq	r2, r1, r0, asr #4
   12434:	andeq	r2, r1, r0, asr #4
   12438:	andeq	r2, r1, r0, asr #4
   1243c:	andeq	r2, r1, r0, asr #4
   12440:	andeq	r2, r1, r0, asr #4
   12444:	andeq	r2, r1, r0, asr #4
   12448:	andeq	r2, r1, r0, asr #4
   1244c:	andeq	r2, r1, r0, asr #4
   12450:	andeq	r2, r1, r0, asr #4
   12454:	andeq	r2, r1, r0, asr #4
   12458:	andeq	r2, r1, r0, asr #4
   1245c:	andeq	r2, r1, r0, asr #4
   12460:	andeq	r2, r1, r0, asr #4
   12464:	andeq	r2, r1, r0, asr #4
   12468:	andeq	r2, r1, r0, asr #4
   1246c:	andeq	r2, r1, r0, asr #4
   12470:	andeq	r2, r1, r0, asr #4
   12474:	andeq	r2, r1, r0, asr #4
   12478:	andeq	r2, r1, r0, asr #4
   1247c:	andeq	r2, r1, r0, asr #4
   12480:	andeq	r2, r1, r0, asr #4
   12484:	andeq	r2, r1, r0, asr #4
   12488:	andeq	r2, r1, r0, asr #4
   1248c:	andeq	r2, r1, r0, asr #4
   12490:	andeq	r1, r1, ip, lsr #25
   12494:	andeq	r2, r1, r8, lsl r5
   12498:	andeq	r1, r1, ip, lsr #25
   1249c:	andeq	r2, r1, r8, lsl #10
   124a0:	mov	r3, #110	; 0x6e
   124a4:	b	11fd8 <abort@plt+0x1254>
   124a8:	mov	r3, #116	; 0x74
   124ac:	b	11fd8 <abort@plt+0x1254>
   124b0:	sub	r2, fp, #2
   124b4:	mov	r3, #98	; 0x62
   124b8:	clz	r2, r2
   124bc:	lsr	r2, r2, #5
   124c0:	b	11ec4 <abort@plt+0x1140>
   124c4:	sub	r2, fp, #2
   124c8:	mov	r3, #97	; 0x61
   124cc:	clz	r2, r2
   124d0:	lsr	r2, r2, #5
   124d4:	b	11ec4 <abort@plt+0x1140>
   124d8:	ldr	r3, [sp, #28]
   124dc:	cmp	r3, #0
   124e0:	bne	120d0 <abort@plt+0x134c>
   124e4:	ldr	r3, [sp, #164]	; 0xa4
   124e8:	tst	r3, #1
   124ec:	bne	12b60 <abort@plt+0x1ddc>
   124f0:	ldr	r6, [sp, #28]
   124f4:	sub	r2, fp, #2
   124f8:	mov	r7, r6
   124fc:	clz	r2, r2
   12500:	lsr	r2, r2, #5
   12504:	b	11cec <abort@plt+0xf68>
   12508:	sub	r2, fp, #2
   1250c:	clz	r2, r2
   12510:	lsr	r2, r2, #5
   12514:	b	11cd8 <abort@plt+0xf54>
   12518:	sub	r2, fp, #2
   1251c:	mov	r6, #0
   12520:	clz	r2, r2
   12524:	lsr	r2, r2, #5
   12528:	b	11ce0 <abort@plt+0xf5c>
   1252c:	sub	r2, fp, #2
   12530:	clz	r2, r2
   12534:	lsr	r2, r2, #5
   12538:	b	11ce0 <abort@plt+0xf5c>
   1253c:	sub	r2, fp, #2
   12540:	mov	r3, #102	; 0x66
   12544:	clz	r2, r2
   12548:	lsr	r2, r2, #5
   1254c:	b	11ec4 <abort@plt+0x1140>
   12550:	sub	r2, fp, #2
   12554:	mov	r3, #118	; 0x76
   12558:	clz	r2, r2
   1255c:	lsr	r2, r2, #5
   12560:	b	11ec4 <abort@plt+0x1140>
   12564:	andeq	r4, r2, r8, lsl #30
   12568:	andeq	r4, r1, ip, lsl #19
   1256c:	andeq	r4, r1, r4, ror r9
   12570:	andeq	r4, r1, r8, lsl #19
   12574:	ldr	r3, [sp, #48]	; 0x30
   12578:	ldrb	r5, [r3]
   1257c:	cmp	r5, #126	; 0x7e
   12580:	ldrls	pc, [pc, r5, lsl #2]
   12584:	b	121f0 <abort@plt+0x146c>
   12588:	ldrdeq	r2, [r1], -r0
   1258c:	strdeq	r2, [r1], -r0
   12590:	strdeq	r2, [r1], -r0
   12594:	strdeq	r2, [r1], -r0
   12598:	strdeq	r2, [r1], -r0
   1259c:	strdeq	r2, [r1], -r0
   125a0:	strdeq	r2, [r1], -r0
   125a4:	andeq	r2, r1, r8, asr #15
   125a8:	andeq	r2, r1, r0, asr #15
   125ac:	muleq	r1, ip, r0
   125b0:	andeq	r2, r1, r4, rrx
   125b4:	strheq	r2, [r1], -ip
   125b8:	andeq	r2, r1, r4, lsr #1
   125bc:			; <UNDEFINED> instruction: 0x000127b4
   125c0:	strdeq	r2, [r1], -r0
   125c4:	strdeq	r2, [r1], -r0
   125c8:	strdeq	r2, [r1], -r0
   125cc:	strdeq	r2, [r1], -r0
   125d0:	strdeq	r2, [r1], -r0
   125d4:	strdeq	r2, [r1], -r0
   125d8:	strdeq	r2, [r1], -r0
   125dc:	strdeq	r2, [r1], -r0
   125e0:	strdeq	r2, [r1], -r0
   125e4:	strdeq	r2, [r1], -r0
   125e8:	strdeq	r2, [r1], -r0
   125ec:	strdeq	r2, [r1], -r0
   125f0:	strdeq	r2, [r1], -r0
   125f4:	strdeq	r2, [r1], -r0
   125f8:	strdeq	r2, [r1], -r0
   125fc:	strdeq	r2, [r1], -r0
   12600:	strdeq	r2, [r1], -r0
   12604:	strdeq	r2, [r1], -r0
   12608:	andeq	r2, r1, ip, lsr #15
   1260c:	andeq	r2, r1, r4, asr #1
   12610:	andeq	r2, r1, r4, asr #1
   12614:	muleq	r1, r0, r7
   12618:	andeq	r2, r1, r4, asr #1
   1261c:	andeq	r2, r1, r4, lsl #15
   12620:	andeq	r2, r1, r4, asr #1
   12624:	andeq	r1, r1, r4, lsl #30
   12628:	andeq	r2, r1, r4, asr #1
   1262c:	andeq	r2, r1, r4, asr #1
   12630:	andeq	r2, r1, r4, asr #1
   12634:	andeq	r2, r1, r4, lsl #15
   12638:	andeq	r2, r1, r4, lsl #15
   1263c:	andeq	r2, r1, r4, lsl #15
   12640:	andeq	r2, r1, r4, lsl #15
   12644:	andeq	r2, r1, r4, lsl #15
   12648:	andeq	r2, r1, r4, lsl #15
   1264c:	andeq	r2, r1, r4, lsl #15
   12650:	andeq	r2, r1, r4, lsl #15
   12654:	andeq	r2, r1, r4, lsl #15
   12658:	andeq	r2, r1, r4, lsl #15
   1265c:	andeq	r2, r1, r4, lsl #15
   12660:	andeq	r2, r1, r4, lsl #15
   12664:	andeq	r2, r1, r4, lsl #15
   12668:	andeq	r2, r1, r4, lsl #15
   1266c:	andeq	r2, r1, r4, lsl #15
   12670:	andeq	r2, r1, r4, lsl #15
   12674:	andeq	r2, r1, r4, asr #1
   12678:	andeq	r2, r1, r4, asr #1
   1267c:	andeq	r2, r1, r4, asr #1
   12680:	andeq	r2, r1, r4, asr #1
   12684:	ldrdeq	r1, [r1], -r8
   12688:	strdeq	r2, [r1], -r0
   1268c:	andeq	r2, r1, r4, lsl #15
   12690:	andeq	r2, r1, r4, lsl #15
   12694:	andeq	r2, r1, r4, lsl #15
   12698:	andeq	r2, r1, r4, lsl #15
   1269c:	andeq	r2, r1, r4, lsl #15
   126a0:	andeq	r2, r1, r4, lsl #15
   126a4:	andeq	r2, r1, r4, lsl #15
   126a8:	andeq	r2, r1, r4, lsl #15
   126ac:	andeq	r2, r1, r4, lsl #15
   126b0:	andeq	r2, r1, r4, lsl #15
   126b4:	andeq	r2, r1, r4, lsl #15
   126b8:	andeq	r2, r1, r4, lsl #15
   126bc:	andeq	r2, r1, r4, lsl #15
   126c0:	andeq	r2, r1, r4, lsl #15
   126c4:	andeq	r2, r1, r4, lsl #15
   126c8:	andeq	r2, r1, r4, lsl #15
   126cc:	andeq	r2, r1, r4, lsl #15
   126d0:	andeq	r2, r1, r4, lsl #15
   126d4:	andeq	r2, r1, r4, lsl #15
   126d8:	andeq	r2, r1, r4, lsl #15
   126dc:	andeq	r2, r1, r4, lsl #15
   126e0:	andeq	r2, r1, r4, lsl #15
   126e4:	andeq	r2, r1, r4, lsl #15
   126e8:	andeq	r2, r1, r4, lsl #15
   126ec:	andeq	r2, r1, r4, lsl #15
   126f0:	andeq	r2, r1, r4, lsl #15
   126f4:	andeq	r2, r1, r4, asr #1
   126f8:	muleq	r1, r0, lr
   126fc:	andeq	r2, r1, r4, lsl #15
   12700:	andeq	r2, r1, r4, asr #1
   12704:	andeq	r2, r1, r4, lsl #15
   12708:	andeq	r2, r1, r4, asr #1
   1270c:	andeq	r2, r1, r4, lsl #15
   12710:	andeq	r2, r1, r4, lsl #15
   12714:	andeq	r2, r1, r4, lsl #15
   12718:	andeq	r2, r1, r4, lsl #15
   1271c:	andeq	r2, r1, r4, lsl #15
   12720:	andeq	r2, r1, r4, lsl #15
   12724:	andeq	r2, r1, r4, lsl #15
   12728:	andeq	r2, r1, r4, lsl #15
   1272c:	andeq	r2, r1, r4, lsl #15
   12730:	andeq	r2, r1, r4, lsl #15
   12734:	andeq	r2, r1, r4, lsl #15
   12738:	andeq	r2, r1, r4, lsl #15
   1273c:	andeq	r2, r1, r4, lsl #15
   12740:	andeq	r2, r1, r4, lsl #15
   12744:	andeq	r2, r1, r4, lsl #15
   12748:	andeq	r2, r1, r4, lsl #15
   1274c:	andeq	r2, r1, r4, lsl #15
   12750:	andeq	r2, r1, r4, lsl #15
   12754:	andeq	r2, r1, r4, lsl #15
   12758:	andeq	r2, r1, r4, lsl #15
   1275c:	andeq	r2, r1, r4, lsl #15
   12760:	andeq	r2, r1, r4, lsl #15
   12764:	andeq	r2, r1, r4, lsl #15
   12768:	andeq	r2, r1, r4, lsl #15
   1276c:	andeq	r2, r1, r4, lsl #15
   12770:	andeq	r2, r1, r4, lsl #15
   12774:	andeq	r1, r1, r8, lsr #25
   12778:	andeq	r2, r1, r4, asr #1
   1277c:	andeq	r1, r1, r8, lsr #25
   12780:	muleq	r1, r0, r7
   12784:	mov	r6, r7
   12788:	mov	r7, #0
   1278c:	b	11d08 <abort@plt+0xf84>
   12790:	cmp	r9, #0
   12794:	mov	r3, #0
   12798:	beq	121d8 <abort@plt+0x1454>
   1279c:	mov	r6, #0
   127a0:	mov	r7, r3
   127a4:	mov	r3, r6
   127a8:	b	11d0c <abort@plt+0xf88>
   127ac:	mov	r3, #0
   127b0:	b	121b8 <abort@plt+0x1434>
   127b4:	mov	r7, #0
   127b8:	mov	r3, #114	; 0x72
   127bc:	b	11fd8 <abort@plt+0x1254>
   127c0:	mov	r5, #98	; 0x62
   127c4:	b	12068 <abort@plt+0x12e4>
   127c8:	mov	r5, #97	; 0x61
   127cc:	b	120a8 <abort@plt+0x1324>
   127d0:	ldr	r3, [sp, #32]
   127d4:	cmp	r3, #0
   127d8:	bne	12c20 <abort@plt+0x1e9c>
   127dc:	add	r9, r9, #1
   127e0:	ldr	r3, [sp, #44]	; 0x2c
   127e4:	mov	r6, #0
   127e8:	mov	r5, #92	; 0x5c
   127ec:	b	11fa0 <abort@plt+0x121c>
   127f0:	ldr	r3, [sp, #36]	; 0x24
   127f4:	ldrb	r3, [r3, #1]
   127f8:	adds	r3, r3, #0
   127fc:	movne	r3, #1
   12800:	b	11cc4 <abort@plt+0xf40>
   12804:	ldr	r3, [sp, #164]	; 0xa4
   12808:	ands	r3, r3, #4
   1280c:	beq	12830 <abort@plt+0x1aac>
   12810:	ldr	r2, [sp, #24]
   12814:	add	r3, r9, #2
   12818:	cmp	r3, r2
   1281c:	bcs	12830 <abort@plt+0x1aac>
   12820:	ldr	r2, [sp, #48]	; 0x30
   12824:	ldrb	r5, [r2, #1]
   12828:	cmp	r5, #63	; 0x3f
   1282c:	beq	12c94 <abort@plt+0x1f10>
   12830:	mov	r2, #0
   12834:	mov	r6, r2
   12838:	mov	r5, #63	; 0x3f
   1283c:	b	11cec <abort@plt+0xf68>
   12840:	ldr	r3, [sp, #32]
   12844:	cmp	r3, #0
   12848:	bne	12c20 <abort@plt+0x1e9c>
   1284c:	mov	r6, r3
   12850:	mov	r5, #63	; 0x3f
   12854:	b	11d34 <abort@plt+0xfb0>
   12858:	ldr	r3, [sp, #24]
   1285c:	cmn	r3, #1
   12860:	mov	r3, #0
   12864:	str	r3, [sp, #108]	; 0x6c
   12868:	str	r3, [sp, #112]	; 0x70
   1286c:	bne	1287c <abort@plt+0x1af8>
   12870:	ldr	r0, [sp, #36]	; 0x24
   12874:	bl	10cd0 <strlen@plt>
   12878:	str	r0, [sp, #24]
   1287c:	mov	r3, #0
   12880:	str	sl, [sp, #88]	; 0x58
   12884:	ldr	sl, [sp, #36]	; 0x24
   12888:	str	r5, [sp, #92]	; 0x5c
   1288c:	mov	r5, r3
   12890:	str	r7, [sp, #96]	; 0x60
   12894:	str	r4, [sp, #100]	; 0x64
   12898:	str	r8, [sp, #84]	; 0x54
   1289c:	ldr	r3, [sp, #24]
   128a0:	add	r4, r9, r5
   128a4:	add	r7, sl, r4
   128a8:	sub	r2, r3, r4
   128ac:	mov	r1, r7
   128b0:	add	r3, sp, #108	; 0x6c
   128b4:	add	r0, sp, #104	; 0x68
   128b8:	bl	13f94 <abort@plt+0x3210>
   128bc:	subs	r8, r0, #0
   128c0:	beq	12910 <abort@plt+0x1b8c>
   128c4:	cmn	r8, #1
   128c8:	beq	12c70 <abort@plt+0x1eec>
   128cc:	cmn	r8, #2
   128d0:	beq	12d90 <abort@plt+0x200c>
   128d4:	ldr	r3, [sp, #32]
   128d8:	cmp	fp, #2
   128dc:	movne	r3, #0
   128e0:	andeq	r3, r3, #1
   128e4:	cmp	r3, #0
   128e8:	bne	12a70 <abort@plt+0x1cec>
   128ec:	ldr	r0, [sp, #104]	; 0x68
   128f0:	bl	10c28 <iswprint@plt>
   128f4:	add	r5, r5, r8
   128f8:	cmp	r0, #0
   128fc:	add	r0, sp, #108	; 0x6c
   12900:	moveq	r6, #0
   12904:	bl	10be0 <mbsinit@plt>
   12908:	cmp	r0, #0
   1290c:	beq	1289c <abort@plt+0x1b18>
   12910:	ldr	r3, [sp, #28]
   12914:	mov	ip, r5
   12918:	eor	r2, r6, #1
   1291c:	ldr	r5, [sp, #92]	; 0x5c
   12920:	ldr	r7, [sp, #96]	; 0x60
   12924:	ldr	r4, [sp, #100]	; 0x64
   12928:	ldr	r8, [sp, #84]	; 0x54
   1292c:	ldr	sl, [sp, #88]	; 0x58
   12930:	and	r2, r2, r3
   12934:	cmp	ip, #1
   12938:	bls	12238 <abort@plt+0x14b4>
   1293c:	add	r1, ip, r9
   12940:	ldr	lr, [sp, #48]	; 0x30
   12944:	mov	r0, #0
   12948:	str	r6, [sp, #48]	; 0x30
   1294c:	mov	ip, #39	; 0x27
   12950:	ldr	r6, [sp, #44]	; 0x2c
   12954:	b	12a0c <abort@plt+0x1c88>
   12958:	ldr	r0, [sp, #32]
   1295c:	sub	r3, fp, #2
   12960:	cmp	r0, #0
   12964:	clz	r3, r3
   12968:	lsr	r3, r3, #5
   1296c:	bne	12b74 <abort@plt+0x1df0>
   12970:	eor	r0, r6, #1
   12974:	ands	r3, r3, r0
   12978:	beq	129a8 <abort@plt+0x1c24>
   1297c:	add	r0, r4, #1
   12980:	cmp	sl, r4
   12984:	strbhi	ip, [r8, r4]
   12988:	cmp	sl, r0
   1298c:	movhi	r6, #36	; 0x24
   12990:	strbhi	r6, [r8, r0]
   12994:	add	r0, r4, #2
   12998:	mov	r6, r3
   1299c:	add	r4, r4, #3
   129a0:	cmp	sl, r0
   129a4:	strbhi	ip, [r8, r0]
   129a8:	cmp	sl, r4
   129ac:	movhi	r3, #92	; 0x5c
   129b0:	strbhi	r3, [r8, r4]
   129b4:	add	r3, r4, #1
   129b8:	cmp	sl, r3
   129bc:	lsrhi	r0, r5, #6
   129c0:	addhi	r0, r0, #48	; 0x30
   129c4:	strbhi	r0, [r8, r3]
   129c8:	add	r0, r4, #2
   129cc:	cmp	sl, r0
   129d0:	lsrhi	r3, r5, #3
   129d4:	andhi	r3, r3, #7
   129d8:	addhi	r3, r3, #48	; 0x30
   129dc:	add	r9, r9, #1
   129e0:	strbhi	r3, [r8, r0]
   129e4:	and	r5, r5, #7
   129e8:	cmp	r9, r1
   129ec:	add	r5, r5, #48	; 0x30
   129f0:	add	r4, r4, #3
   129f4:	bcs	12b94 <abort@plt+0x1e10>
   129f8:	mov	r0, r2
   129fc:	cmp	sl, r4
   12a00:	strbhi	r5, [r8, r4]
   12a04:	ldrb	r5, [lr, #1]!
   12a08:	add	r4, r4, #1
   12a0c:	cmp	r2, #0
   12a10:	bne	12958 <abort@plt+0x1bd4>
   12a14:	eor	r3, r0, #1
   12a18:	and	r3, r3, r6
   12a1c:	cmp	r7, #0
   12a20:	uxtb	r3, r3
   12a24:	beq	12a38 <abort@plt+0x1cb4>
   12a28:	cmp	sl, r4
   12a2c:	movhi	r7, #92	; 0x5c
   12a30:	strbhi	r7, [r8, r4]
   12a34:	add	r4, r4, #1
   12a38:	add	r9, r9, #1
   12a3c:	cmp	r9, r1
   12a40:	bcs	12b88 <abort@plt+0x1e04>
   12a44:	cmp	r3, #0
   12a48:	beq	12bb4 <abort@plt+0x1e30>
   12a4c:	cmp	sl, r4
   12a50:	add	r3, r4, #1
   12a54:	strbhi	ip, [r8, r4]
   12a58:	mov	r7, #0
   12a5c:	cmp	sl, r3
   12a60:	strbhi	ip, [r8, r3]
   12a64:	add	r4, r4, #2
   12a68:	mov	r6, r7
   12a6c:	b	129fc <abort@plt+0x1c78>
   12a70:	cmp	r8, #1
   12a74:	beq	128ec <abort@plt+0x1b68>
   12a78:	add	r1, r4, #1
   12a7c:	add	r3, sl, r8
   12a80:	add	r1, sl, r1
   12a84:	add	r4, r3, r4
   12a88:	ldrb	r3, [r1], #1
   12a8c:	sub	r3, r3, #91	; 0x5b
   12a90:	cmp	r3, #33	; 0x21
   12a94:	ldrls	pc, [pc, r3, lsl #2]
   12a98:	b	12b24 <abort@plt+0x1da0>
   12a9c:	andeq	r2, r1, r0, lsr fp
   12aa0:	andeq	r2, r1, r0, lsr fp
   12aa4:	andeq	r2, r1, r4, lsr #22
   12aa8:	andeq	r2, r1, r0, lsr fp
   12aac:	andeq	r2, r1, r4, lsr #22
   12ab0:	andeq	r2, r1, r0, lsr fp
   12ab4:	andeq	r2, r1, r4, lsr #22
   12ab8:	andeq	r2, r1, r4, lsr #22
   12abc:	andeq	r2, r1, r4, lsr #22
   12ac0:	andeq	r2, r1, r4, lsr #22
   12ac4:	andeq	r2, r1, r4, lsr #22
   12ac8:	andeq	r2, r1, r4, lsr #22
   12acc:	andeq	r2, r1, r4, lsr #22
   12ad0:	andeq	r2, r1, r4, lsr #22
   12ad4:	andeq	r2, r1, r4, lsr #22
   12ad8:	andeq	r2, r1, r4, lsr #22
   12adc:	andeq	r2, r1, r4, lsr #22
   12ae0:	andeq	r2, r1, r4, lsr #22
   12ae4:	andeq	r2, r1, r4, lsr #22
   12ae8:	andeq	r2, r1, r4, lsr #22
   12aec:	andeq	r2, r1, r4, lsr #22
   12af0:	andeq	r2, r1, r4, lsr #22
   12af4:	andeq	r2, r1, r4, lsr #22
   12af8:	andeq	r2, r1, r4, lsr #22
   12afc:	andeq	r2, r1, r4, lsr #22
   12b00:	andeq	r2, r1, r4, lsr #22
   12b04:	andeq	r2, r1, r4, lsr #22
   12b08:	andeq	r2, r1, r4, lsr #22
   12b0c:	andeq	r2, r1, r4, lsr #22
   12b10:	andeq	r2, r1, r4, lsr #22
   12b14:	andeq	r2, r1, r4, lsr #22
   12b18:	andeq	r2, r1, r4, lsr #22
   12b1c:	andeq	r2, r1, r4, lsr #22
   12b20:	andeq	r2, r1, r0, lsr fp
   12b24:	cmp	r4, r1
   12b28:	bne	12a88 <abort@plt+0x1d04>
   12b2c:	b	128ec <abort@plt+0x1b68>
   12b30:	ldr	fp, [sp, #84]	; 0x54
   12b34:	ldr	sl, [sp, #88]	; 0x58
   12b38:	mov	r8, #2
   12b3c:	b	11ff8 <abort@plt+0x1274>
   12b40:	cmp	sl, r4
   12b44:	movls	r1, r4
   12b48:	bls	12148 <abort@plt+0x13c4>
   12b4c:	ldr	r3, [sp, #44]	; 0x2c
   12b50:	b	12138 <abort@plt+0x13b4>
   12b54:	str	sl, [sp, #72]	; 0x48
   12b58:	ldr	sl, [sp, #32]
   12b5c:	b	11f70 <abort@plt+0x11ec>
   12b60:	add	r9, r9, #1
   12b64:	b	11864 <abort@plt+0xae0>
   12b68:	ldr	r2, [sp, #28]
   12b6c:	mov	r6, #0
   12b70:	b	1293c <abort@plt+0x1bb8>
   12b74:	str	fp, [sp, #160]	; 0xa0
   12b78:	str	r3, [sp, #28]
   12b7c:	mov	fp, r8
   12b80:	ldr	r8, [sp, #160]	; 0xa0
   12b84:	b	11ff8 <abort@plt+0x1274>
   12b88:	str	r6, [sp, #44]	; 0x2c
   12b8c:	ldr	r6, [sp, #48]	; 0x30
   12b90:	b	11fa0 <abort@plt+0x121c>
   12b94:	str	r6, [sp, #44]	; 0x2c
   12b98:	ldr	r6, [sp, #48]	; 0x30
   12b9c:	b	11dac <abort@plt+0x1028>
   12ba0:	add	r4, r4, #4
   12ba4:	str	r3, [sp, #44]	; 0x2c
   12ba8:	mov	r6, #0
   12bac:	mov	r5, #48	; 0x30
   12bb0:	b	11d34 <abort@plt+0xfb0>
   12bb4:	mov	r7, r3
   12bb8:	b	129fc <abort@plt+0x1c78>
   12bbc:	ldr	r3, [pc, #-1624]	; 1256c <abort@plt+0x17e8>
   12bc0:	mov	r4, #1
   12bc4:	str	r4, [sp, #40]	; 0x28
   12bc8:	str	r4, [sp, #28]
   12bcc:	str	r4, [sp, #52]	; 0x34
   12bd0:	str	sl, [sp, #72]	; 0x48
   12bd4:	str	sl, [sp, #68]	; 0x44
   12bd8:	str	sl, [sp, #44]	; 0x2c
   12bdc:	str	sl, [sp, #32]
   12be0:	str	r3, [sp, #60]	; 0x3c
   12be4:	b	11854 <abort@plt+0xad0>
   12be8:	mov	r3, r6
   12bec:	mov	r5, #48	; 0x30
   12bf0:	mov	r6, #0
   12bf4:	b	11d34 <abort@plt+0xfb0>
   12bf8:	cmp	sl, r4
   12bfc:	movhi	r3, #48	; 0x30
   12c00:	strbhi	r3, [r8, r4]
   12c04:	add	r3, r1, #2
   12c08:	cmp	sl, r3
   12c0c:	movhi	r0, #48	; 0x30
   12c10:	strbhi	r0, [r8, r3]
   12c14:	add	r4, r1, #3
   12c18:	mov	r5, #48	; 0x30
   12c1c:	b	1217c <abort@plt+0x13f8>
   12c20:	str	fp, [sp, #160]	; 0xa0
   12c24:	mov	fp, r8
   12c28:	ldr	r8, [sp, #160]	; 0xa0
   12c2c:	b	11ff8 <abort@plt+0x1274>
   12c30:	ldr	r2, [sp, #80]	; 0x50
   12c34:	ldrb	r3, [r2]
   12c38:	cmp	r3, #0
   12c3c:	beq	11824 <abort@plt+0xaa0>
   12c40:	cmp	sl, r4
   12c44:	strbhi	r3, [fp, r4]
   12c48:	ldrb	r3, [r2, #1]!
   12c4c:	add	r4, r4, #1
   12c50:	cmp	r3, #0
   12c54:	bne	12c40 <abort@plt+0x1ebc>
   12c58:	b	11824 <abort@plt+0xaa0>
   12c5c:	str	fp, [sp, #160]	; 0xa0
   12c60:	mov	r3, #0
   12c64:	mov	fp, r8
   12c68:	ldr	r8, [sp, #160]	; 0xa0
   12c6c:	b	1208c <abort@plt+0x1308>
   12c70:	mov	ip, r5
   12c74:	ldr	r7, [sp, #96]	; 0x60
   12c78:	ldr	r5, [sp, #92]	; 0x5c
   12c7c:	ldr	r4, [sp, #100]	; 0x64
   12c80:	ldr	r8, [sp, #84]	; 0x54
   12c84:	ldr	sl, [sp, #88]	; 0x58
   12c88:	ldr	r2, [sp, #28]
   12c8c:	mov	r6, #0
   12c90:	b	12934 <abort@plt+0x1bb0>
   12c94:	ldr	r2, [sp, #36]	; 0x24
   12c98:	ldrb	r1, [r2, r3]
   12c9c:	sub	r2, r1, #33	; 0x21
   12ca0:	cmp	r2, #29
   12ca4:	ldrls	pc, [pc, r2, lsl #2]
   12ca8:	b	12d84 <abort@plt+0x2000>
   12cac:	andeq	r2, r1, r4, lsr #26
   12cb0:	andeq	r2, r1, r4, lsl #27
   12cb4:	andeq	r2, r1, r4, lsl #27
   12cb8:	andeq	r2, r1, r4, lsl #27
   12cbc:	andeq	r2, r1, r4, lsl #27
   12cc0:	andeq	r2, r1, r4, lsl #27
   12cc4:	andeq	r2, r1, r4, lsr #26
   12cc8:	andeq	r2, r1, r4, lsr #26
   12ccc:	andeq	r2, r1, r4, lsr #26
   12cd0:	andeq	r2, r1, r4, lsl #27
   12cd4:	andeq	r2, r1, r4, lsl #27
   12cd8:	andeq	r2, r1, r4, lsl #27
   12cdc:	andeq	r2, r1, r4, lsr #26
   12ce0:	andeq	r2, r1, r4, lsl #27
   12ce4:	andeq	r2, r1, r4, lsr #26
   12ce8:	andeq	r2, r1, r4, lsl #27
   12cec:	andeq	r2, r1, r4, lsl #27
   12cf0:	andeq	r2, r1, r4, lsl #27
   12cf4:	andeq	r2, r1, r4, lsl #27
   12cf8:	andeq	r2, r1, r4, lsl #27
   12cfc:	andeq	r2, r1, r4, lsl #27
   12d00:	andeq	r2, r1, r4, lsl #27
   12d04:	andeq	r2, r1, r4, lsl #27
   12d08:	andeq	r2, r1, r4, lsl #27
   12d0c:	andeq	r2, r1, r4, lsl #27
   12d10:	andeq	r2, r1, r4, lsl #27
   12d14:	andeq	r2, r1, r4, lsl #27
   12d18:	andeq	r2, r1, r4, lsr #26
   12d1c:	andeq	r2, r1, r4, lsr #26
   12d20:	andeq	r2, r1, r4, lsr #26
   12d24:	ldr	r2, [sp, #32]
   12d28:	cmp	r2, #0
   12d2c:	bne	12e30 <abort@plt+0x20ac>
   12d30:	cmp	sl, r4
   12d34:	movhi	r2, #63	; 0x3f
   12d38:	strbhi	r2, [r8, r4]
   12d3c:	add	r2, r4, #1
   12d40:	cmp	sl, r2
   12d44:	movhi	r0, #34	; 0x22
   12d48:	strbhi	r0, [r8, r2]
   12d4c:	add	r2, r4, #2
   12d50:	cmp	sl, r2
   12d54:	movhi	r0, #34	; 0x22
   12d58:	strbhi	r0, [r8, r2]
   12d5c:	add	r2, r4, #3
   12d60:	cmp	sl, r2
   12d64:	movhi	r0, #63	; 0x3f
   12d68:	strbhi	r0, [r8, r2]
   12d6c:	mov	r2, #0
   12d70:	add	r4, r4, #4
   12d74:	mov	r5, r1
   12d78:	mov	r9, r3
   12d7c:	mov	r6, r2
   12d80:	b	1217c <abort@plt+0x13f8>
   12d84:	mov	r2, #0
   12d88:	mov	r6, r2
   12d8c:	b	11cec <abort@plt+0xf68>
   12d90:	ldr	r0, [sp, #24]
   12d94:	mov	r1, r4
   12d98:	cmp	r1, r0
   12d9c:	mov	r2, r7
   12da0:	mov	r3, r5
   12da4:	mov	ip, r5
   12da8:	ldr	r7, [sp, #96]	; 0x60
   12dac:	ldr	r5, [sp, #92]	; 0x5c
   12db0:	ldr	r4, [sp, #100]	; 0x64
   12db4:	ldr	r8, [sp, #84]	; 0x54
   12db8:	ldr	sl, [sp, #88]	; 0x58
   12dbc:	bcs	12df0 <abort@plt+0x206c>
   12dc0:	ldrb	r6, [r2]
   12dc4:	cmp	r6, #0
   12dc8:	bne	12ddc <abort@plt+0x2058>
   12dcc:	b	12f0c <abort@plt+0x2188>
   12dd0:	ldrb	r6, [r2, #1]!
   12dd4:	cmp	r6, #0
   12dd8:	beq	12e94 <abort@plt+0x2110>
   12ddc:	add	r3, r3, #1
   12de0:	add	r1, r9, r3
   12de4:	cmp	r1, r0
   12de8:	bcc	12dd0 <abort@plt+0x204c>
   12dec:	mov	ip, r3
   12df0:	ldr	r2, [sp, #28]
   12df4:	mov	r6, #0
   12df8:	b	12934 <abort@plt+0x1bb0>
   12dfc:	mov	r3, #1
   12e00:	str	r3, [sp, #40]	; 0x28
   12e04:	str	r3, [sp, #32]
   12e08:	str	r3, [sp, #28]
   12e0c:	str	r3, [sp, #52]	; 0x34
   12e10:	ldr	r3, [pc, #-2220]	; 1256c <abort@plt+0x17e8>
   12e14:	mov	r2, #0
   12e18:	str	r2, [sp, #68]	; 0x44
   12e1c:	str	r2, [sp, #44]	; 0x2c
   12e20:	str	r2, [sp, #72]	; 0x48
   12e24:	mov	r4, r2
   12e28:	str	r3, [sp, #60]	; 0x3c
   12e2c:	b	11854 <abort@plt+0xad0>
   12e30:	str	fp, [sp, #160]	; 0xa0
   12e34:	mov	fp, r8
   12e38:	ldr	r8, [sp, #160]	; 0xa0
   12e3c:	b	12004 <abort@plt+0x1280>
   12e40:	mov	r2, r3
   12e44:	ldr	r3, [sp, #60]	; 0x3c
   12e48:	cmp	r3, #0
   12e4c:	moveq	r2, #0
   12e50:	andne	r2, r2, #1
   12e54:	cmp	r2, #0
   12e58:	beq	12e84 <abort@plt+0x2100>
   12e5c:	mov	r2, r3
   12e60:	ldrb	r3, [r3]
   12e64:	cmp	r3, #0
   12e68:	beq	12e84 <abort@plt+0x2100>
   12e6c:	cmp	sl, r4
   12e70:	strbhi	r3, [fp, r4]
   12e74:	ldrb	r3, [r2, #1]!
   12e78:	add	r4, r4, #1
   12e7c:	cmp	r3, #0
   12e80:	bne	12e6c <abort@plt+0x20e8>
   12e84:	cmp	sl, r4
   12e88:	movhi	r3, #0
   12e8c:	strbhi	r3, [fp, r4]
   12e90:	b	12044 <abort@plt+0x12c0>
   12e94:	mov	ip, r3
   12e98:	ldr	r2, [sp, #28]
   12e9c:	b	12934 <abort@plt+0x1bb0>
   12ea0:	str	fp, [sp, #160]	; 0xa0
   12ea4:	mov	fp, r8
   12ea8:	ldr	r8, [sp, #160]	; 0xa0
   12eac:	sub	r3, r8, #2
   12eb0:	clz	r3, r3
   12eb4:	lsr	r3, r3, #5
   12eb8:	str	r3, [sp, #28]
   12ebc:	b	11ff8 <abort@plt+0x1274>
   12ec0:	ldr	r3, [sp, #76]	; 0x4c
   12ec4:	mov	ip, #5
   12ec8:	str	r3, [sp, #16]
   12ecc:	ldr	r3, [sp, #80]	; 0x50
   12ed0:	ldr	r2, [sp, #36]	; 0x24
   12ed4:	str	r3, [sp, #12]
   12ed8:	ldr	r3, [sp, #56]	; 0x38
   12edc:	ldr	r1, [sp, #72]	; 0x48
   12ee0:	str	r3, [sp, #8]
   12ee4:	ldr	r3, [sp, #164]	; 0xa4
   12ee8:	mov	r0, fp
   12eec:	str	r3, [sp, #4]
   12ef0:	str	ip, [sp]
   12ef4:	ldr	r3, [sp, #24]
   12ef8:	bl	1175c <abort@plt+0x9d8>
   12efc:	mov	r4, r0
   12f00:	b	12044 <abort@plt+0x12c0>
   12f04:	mov	r8, #2
   12f08:	b	11ff8 <abort@plt+0x1274>
   12f0c:	ldr	r2, [sp, #28]
   12f10:	b	12934 <abort@plt+0x1bb0>
   12f14:	mov	r3, #0
   12f18:	str	r3, [sp, #68]	; 0x44
   12f1c:	str	r3, [sp, #44]	; 0x2c
   12f20:	str	r3, [sp, #72]	; 0x48
   12f24:	str	r3, [sp, #28]
   12f28:	mov	r4, r3
   12f2c:	ldr	r3, [pc, #-2500]	; 12570 <abort@plt+0x17ec>
   12f30:	mov	r2, #1
   12f34:	str	r2, [sp, #40]	; 0x28
   12f38:	str	r2, [sp, #32]
   12f3c:	str	r2, [sp, #52]	; 0x34
   12f40:	str	r3, [sp, #60]	; 0x3c
   12f44:	b	11854 <abort@plt+0xad0>
   12f48:	bl	10c04 <__stack_chk_fail@plt>
   12f4c:	mov	r5, r3
   12f50:	mov	r6, #0
   12f54:	b	11d48 <abort@plt+0xfc4>
   12f58:	mov	r3, #0
   12f5c:	mov	r2, #1
   12f60:	str	r3, [sp, #44]	; 0x2c
   12f64:	str	r3, [sp, #72]	; 0x48
   12f68:	str	r2, [sp, #40]	; 0x28
   12f6c:	b	11e64 <abort@plt+0x10e0>
   12f70:	bl	10d84 <abort@plt>
   12f74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f78:	sub	sp, sp, #44	; 0x2c
   12f7c:	mov	r6, r0
   12f80:	mov	r4, r3
   12f84:	mov	sl, r1
   12f88:	mov	fp, r2
   12f8c:	bl	10cdc <__errno_location@plt>
   12f90:	ldr	r7, [pc, #364]	; 13104 <abort@plt+0x2380>
   12f94:	cmp	r6, #0
   12f98:	ldr	r5, [r7]
   12f9c:	ldr	r3, [r0]
   12fa0:	str	r3, [sp, #24]
   12fa4:	blt	13100 <abort@plt+0x237c>
   12fa8:	ldr	r3, [r7, #4]
   12fac:	mov	r8, r0
   12fb0:	cmp	r3, r6
   12fb4:	bgt	13000 <abort@plt+0x227c>
   12fb8:	cmn	r6, #-268435454	; 0xf0000002
   12fbc:	bgt	130fc <abort@plt+0x2378>
   12fc0:	add	r9, r6, #1
   12fc4:	add	r3, r7, #8
   12fc8:	cmp	r5, r3
   12fcc:	lsl	r1, r9, #3
   12fd0:	beq	130dc <abort@plt+0x2358>
   12fd4:	mov	r0, r5
   12fd8:	bl	13d68 <abort@plt+0x2fe4>
   12fdc:	mov	r5, r0
   12fe0:	str	r0, [r7]
   12fe4:	ldr	r0, [r7, #4]
   12fe8:	mov	r1, #0
   12fec:	sub	r2, r9, r0
   12ff0:	add	r0, r5, r0, lsl #3
   12ff4:	lsl	r2, r2, #3
   12ff8:	bl	10cf4 <memset@plt>
   12ffc:	str	r9, [r7, #4]
   13000:	add	r3, r5, r6, lsl #3
   13004:	ldr	r1, [r4, #4]
   13008:	ldr	r7, [r3, #4]
   1300c:	ldr	r9, [r5, r6, lsl #3]
   13010:	ldr	r2, [r4, #40]	; 0x28
   13014:	ldr	ip, [r4, #44]	; 0x2c
   13018:	str	r3, [sp, #28]
   1301c:	ldr	r3, [r4]
   13020:	orr	r1, r1, #1
   13024:	add	lr, r4, #8
   13028:	str	r1, [sp, #36]	; 0x24
   1302c:	str	r1, [sp, #4]
   13030:	str	r2, [sp, #12]
   13034:	str	r3, [sp]
   13038:	mov	r0, r7
   1303c:	mov	r1, r9
   13040:	str	ip, [sp, #16]
   13044:	str	lr, [sp, #8]
   13048:	mov	r3, fp
   1304c:	mov	r2, sl
   13050:	str	lr, [sp, #32]
   13054:	bl	1175c <abort@plt+0x9d8>
   13058:	cmp	r9, r0
   1305c:	bhi	130c8 <abort@plt+0x2344>
   13060:	ldr	r3, [pc, #160]	; 13108 <abort@plt+0x2384>
   13064:	add	r9, r0, #1
   13068:	cmp	r7, r3
   1306c:	str	r9, [r5, r6, lsl #3]
   13070:	beq	1307c <abort@plt+0x22f8>
   13074:	mov	r0, r7
   13078:	bl	10bbc <free@plt>
   1307c:	mov	r0, r9
   13080:	bl	13d0c <abort@plt+0x2f88>
   13084:	ldr	lr, [sp, #28]
   13088:	ldr	ip, [r4, #44]	; 0x2c
   1308c:	ldr	r5, [r4, #40]	; 0x28
   13090:	mov	r3, fp
   13094:	mov	r2, sl
   13098:	mov	r1, r9
   1309c:	str	r0, [lr, #4]
   130a0:	ldr	lr, [r4]
   130a4:	ldr	r4, [sp, #32]
   130a8:	str	ip, [sp, #16]
   130ac:	str	r4, [sp, #8]
   130b0:	ldr	r4, [sp, #36]	; 0x24
   130b4:	str	r5, [sp, #12]
   130b8:	str	r4, [sp, #4]
   130bc:	str	lr, [sp]
   130c0:	mov	r7, r0
   130c4:	bl	1175c <abort@plt+0x9d8>
   130c8:	ldr	r3, [sp, #24]
   130cc:	mov	r0, r7
   130d0:	str	r3, [r8]
   130d4:	add	sp, sp, #44	; 0x2c
   130d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130dc:	mov	r0, #0
   130e0:	bl	13d68 <abort@plt+0x2fe4>
   130e4:	ldr	r3, [pc, #32]	; 1310c <abort@plt+0x2388>
   130e8:	mov	r5, r0
   130ec:	ldm	r3, {r0, r1}
   130f0:	str	r5, [r7]
   130f4:	stm	r5, {r0, r1}
   130f8:	b	12fe4 <abort@plt+0x2260>
   130fc:	bl	13f54 <abort@plt+0x31d0>
   13100:	bl	10d84 <abort@plt>
   13104:	ldrdeq	r5, [r2], -r0
   13108:	andeq	r5, r2, ip, lsr r1
   1310c:	ldrdeq	r5, [r2], -r8
   13110:	push	{r4, r5, r6, lr}
   13114:	mov	r5, r0
   13118:	bl	10cdc <__errno_location@plt>
   1311c:	cmp	r5, #0
   13120:	mov	r1, #48	; 0x30
   13124:	mov	r4, r0
   13128:	ldr	r0, [pc, #16]	; 13140 <abort@plt+0x23bc>
   1312c:	ldr	r6, [r4]
   13130:	movne	r0, r5
   13134:	bl	13f14 <abort@plt+0x3190>
   13138:	str	r6, [r4]
   1313c:	pop	{r4, r5, r6, pc}
   13140:	andeq	r5, r2, ip, lsr r2
   13144:	ldr	r3, [pc, #12]	; 13158 <abort@plt+0x23d4>
   13148:	cmp	r0, #0
   1314c:	moveq	r0, r3
   13150:	ldr	r0, [r0]
   13154:	bx	lr
   13158:	andeq	r5, r2, ip, lsr r2
   1315c:	ldr	r3, [pc, #12]	; 13170 <abort@plt+0x23ec>
   13160:	cmp	r0, #0
   13164:	moveq	r0, r3
   13168:	str	r1, [r0]
   1316c:	bx	lr
   13170:	andeq	r5, r2, ip, lsr r2
   13174:	ldr	r3, [pc, #52]	; 131b0 <abort@plt+0x242c>
   13178:	cmp	r0, #0
   1317c:	moveq	r0, r3
   13180:	add	r3, r0, #8
   13184:	push	{lr}		; (str lr, [sp, #-4]!)
   13188:	lsr	lr, r1, #5
   1318c:	and	r1, r1, #31
   13190:	ldr	ip, [r3, lr, lsl #2]
   13194:	lsr	r0, ip, r1
   13198:	eor	r2, r2, r0
   1319c:	and	r2, r2, #1
   131a0:	and	r0, r0, #1
   131a4:	eor	r1, ip, r2, lsl r1
   131a8:	str	r1, [r3, lr, lsl #2]
   131ac:	pop	{pc}		; (ldr pc, [sp], #4)
   131b0:	andeq	r5, r2, ip, lsr r2
   131b4:	ldr	r3, [pc, #16]	; 131cc <abort@plt+0x2448>
   131b8:	cmp	r0, #0
   131bc:	movne	r3, r0
   131c0:	ldr	r0, [r3, #4]
   131c4:	str	r1, [r3, #4]
   131c8:	bx	lr
   131cc:	andeq	r5, r2, ip, lsr r2
   131d0:	ldr	r3, [pc, #44]	; 13204 <abort@plt+0x2480>
   131d4:	cmp	r0, #0
   131d8:	moveq	r0, r3
   131dc:	mov	ip, #10
   131e0:	cmp	r2, #0
   131e4:	cmpne	r1, #0
   131e8:	str	ip, [r0]
   131ec:	beq	131fc <abort@plt+0x2478>
   131f0:	str	r1, [r0, #40]	; 0x28
   131f4:	str	r2, [r0, #44]	; 0x2c
   131f8:	bx	lr
   131fc:	push	{r4, lr}
   13200:	bl	10d84 <abort@plt>
   13204:	andeq	r5, r2, ip, lsr r2
   13208:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1320c:	sub	sp, sp, #24
   13210:	ldr	ip, [pc, #108]	; 13284 <abort@plt+0x2500>
   13214:	ldr	r4, [sp, #56]	; 0x38
   13218:	mov	r9, r2
   1321c:	cmp	r4, #0
   13220:	moveq	r4, ip
   13224:	mov	sl, r3
   13228:	mov	r7, r0
   1322c:	mov	r8, r1
   13230:	bl	10cdc <__errno_location@plt>
   13234:	ldr	r3, [r4, #44]	; 0x2c
   13238:	mov	r1, r8
   1323c:	ldr	r6, [r0]
   13240:	str	r3, [sp, #16]
   13244:	ldr	r2, [r4, #40]	; 0x28
   13248:	add	r3, r4, #8
   1324c:	str	r3, [sp, #8]
   13250:	str	r2, [sp, #12]
   13254:	ldr	r2, [r4, #4]
   13258:	mov	r5, r0
   1325c:	str	r2, [sp, #4]
   13260:	ldr	ip, [r4]
   13264:	mov	r3, sl
   13268:	mov	r2, r9
   1326c:	mov	r0, r7
   13270:	str	ip, [sp]
   13274:	bl	1175c <abort@plt+0x9d8>
   13278:	str	r6, [r5]
   1327c:	add	sp, sp, #24
   13280:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13284:	andeq	r5, r2, ip, lsr r2
   13288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1328c:	cmp	r3, #0
   13290:	sub	sp, sp, #44	; 0x2c
   13294:	ldr	r4, [pc, #192]	; 1335c <abort@plt+0x25d8>
   13298:	mov	r6, r2
   1329c:	movne	r4, r3
   132a0:	mov	r9, r1
   132a4:	mov	r8, r0
   132a8:	bl	10cdc <__errno_location@plt>
   132ac:	ldr	r3, [r4, #44]	; 0x2c
   132b0:	ldr	r5, [r4, #4]
   132b4:	add	sl, r4, #8
   132b8:	cmp	r6, #0
   132bc:	orreq	r5, r5, #1
   132c0:	mov	r1, #0
   132c4:	ldr	r2, [r0]
   132c8:	str	r3, [sp, #16]
   132cc:	ldr	r3, [r4, #40]	; 0x28
   132d0:	stmib	sp, {r5, sl}
   132d4:	str	r3, [sp, #12]
   132d8:	ldr	r3, [r4]
   132dc:	mov	r7, r0
   132e0:	str	r2, [sp, #28]
   132e4:	str	r3, [sp]
   132e8:	mov	r2, r8
   132ec:	mov	r3, r9
   132f0:	mov	r0, r1
   132f4:	bl	1175c <abort@plt+0x9d8>
   132f8:	add	r1, r0, #1
   132fc:	mov	fp, r0
   13300:	mov	r0, r1
   13304:	str	r1, [sp, #36]	; 0x24
   13308:	bl	13d0c <abort@plt+0x2f88>
   1330c:	ldr	r3, [r4, #44]	; 0x2c
   13310:	mov	r2, r8
   13314:	str	r3, [sp, #16]
   13318:	ldr	r3, [r4, #40]	; 0x28
   1331c:	str	r5, [sp, #4]
   13320:	str	r3, [sp, #12]
   13324:	str	sl, [sp, #8]
   13328:	ldr	ip, [r4]
   1332c:	ldr	r1, [sp, #36]	; 0x24
   13330:	mov	r3, r9
   13334:	str	ip, [sp]
   13338:	str	r0, [sp, #32]
   1333c:	bl	1175c <abort@plt+0x9d8>
   13340:	ldr	r2, [sp, #28]
   13344:	cmp	r6, #0
   13348:	str	r2, [r7]
   1334c:	ldr	r0, [sp, #32]
   13350:	strne	fp, [r6]
   13354:	add	sp, sp, #44	; 0x2c
   13358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1335c:	andeq	r5, r2, ip, lsr r2
   13360:	mov	r3, r2
   13364:	mov	r2, #0
   13368:	b	13288 <abort@plt+0x2504>
   1336c:	push	{r4, r5, r6, r7, r8, lr}
   13370:	ldr	r6, [pc, #112]	; 133e8 <abort@plt+0x2664>
   13374:	ldr	r3, [r6, #4]
   13378:	ldr	r7, [r6]
   1337c:	cmp	r3, #1
   13380:	ble	133a4 <abort@plt+0x2620>
   13384:	sub	r5, r7, #8
   13388:	add	r5, r5, r3, lsl #3
   1338c:	mov	r4, r7
   13390:	ldr	r0, [r4, #12]
   13394:	add	r4, r4, #8
   13398:	bl	10bbc <free@plt>
   1339c:	cmp	r4, r5
   133a0:	bne	13390 <abort@plt+0x260c>
   133a4:	ldr	r0, [r7, #4]
   133a8:	ldr	r4, [pc, #60]	; 133ec <abort@plt+0x2668>
   133ac:	cmp	r0, r4
   133b0:	beq	133c4 <abort@plt+0x2640>
   133b4:	bl	10bbc <free@plt>
   133b8:	mov	r3, #256	; 0x100
   133bc:	str	r4, [r6, #12]
   133c0:	str	r3, [r6, #8]
   133c4:	ldr	r4, [pc, #36]	; 133f0 <abort@plt+0x266c>
   133c8:	cmp	r7, r4
   133cc:	beq	133dc <abort@plt+0x2658>
   133d0:	mov	r0, r7
   133d4:	bl	10bbc <free@plt>
   133d8:	str	r4, [r6]
   133dc:	mov	r3, #1
   133e0:	str	r3, [r6, #4]
   133e4:	pop	{r4, r5, r6, r7, r8, pc}
   133e8:	ldrdeq	r5, [r2], -r0
   133ec:	andeq	r5, r2, ip, lsr r1
   133f0:	ldrdeq	r5, [r2], -r8
   133f4:	ldr	r3, [pc, #4]	; 13400 <abort@plt+0x267c>
   133f8:	mvn	r2, #0
   133fc:	b	12f74 <abort@plt+0x21f0>
   13400:	andeq	r5, r2, ip, lsr r2
   13404:	ldr	r3, [pc]	; 1340c <abort@plt+0x2688>
   13408:	b	12f74 <abort@plt+0x21f0>
   1340c:	andeq	r5, r2, ip, lsr r2
   13410:	mov	r1, r0
   13414:	ldr	r3, [pc, #8]	; 13424 <abort@plt+0x26a0>
   13418:	mvn	r2, #0
   1341c:	mov	r0, #0
   13420:	b	12f74 <abort@plt+0x21f0>
   13424:	andeq	r5, r2, ip, lsr r2
   13428:	mov	r2, r1
   1342c:	ldr	r3, [pc, #8]	; 1343c <abort@plt+0x26b8>
   13430:	mov	r1, r0
   13434:	mov	r0, #0
   13438:	b	12f74 <abort@plt+0x21f0>
   1343c:	andeq	r5, r2, ip, lsr r2
   13440:	push	{r4, r5, r6, lr}
   13444:	sub	sp, sp, #56	; 0x38
   13448:	ldr	r4, [pc, #68]	; 13494 <abort@plt+0x2710>
   1344c:	mov	r6, r2
   13450:	mov	r5, r0
   13454:	ldr	r3, [r4]
   13458:	add	r0, sp, #4
   1345c:	str	r3, [sp, #52]	; 0x34
   13460:	bl	115ec <abort@plt+0x868>
   13464:	add	r3, sp, #4
   13468:	mvn	r2, #0
   1346c:	mov	r1, r6
   13470:	mov	r0, r5
   13474:	bl	12f74 <abort@plt+0x21f0>
   13478:	ldr	r2, [sp, #52]	; 0x34
   1347c:	ldr	r3, [r4]
   13480:	cmp	r2, r3
   13484:	bne	13490 <abort@plt+0x270c>
   13488:	add	sp, sp, #56	; 0x38
   1348c:	pop	{r4, r5, r6, pc}
   13490:	bl	10c04 <__stack_chk_fail@plt>
   13494:	andeq	r4, r2, r8, lsl #30
   13498:	push	{r4, r5, r6, r7, lr}
   1349c:	sub	sp, sp, #60	; 0x3c
   134a0:	ldr	r4, [pc, #72]	; 134f0 <abort@plt+0x276c>
   134a4:	mov	r6, r2
   134a8:	mov	r7, r3
   134ac:	ldr	ip, [r4]
   134b0:	mov	r5, r0
   134b4:	add	r0, sp, #4
   134b8:	str	ip, [sp, #52]	; 0x34
   134bc:	bl	115ec <abort@plt+0x868>
   134c0:	add	r3, sp, #4
   134c4:	mov	r2, r7
   134c8:	mov	r1, r6
   134cc:	mov	r0, r5
   134d0:	bl	12f74 <abort@plt+0x21f0>
   134d4:	ldr	r2, [sp, #52]	; 0x34
   134d8:	ldr	r3, [r4]
   134dc:	cmp	r2, r3
   134e0:	bne	134ec <abort@plt+0x2768>
   134e4:	add	sp, sp, #60	; 0x3c
   134e8:	pop	{r4, r5, r6, r7, pc}
   134ec:	bl	10c04 <__stack_chk_fail@plt>
   134f0:	andeq	r4, r2, r8, lsl #30
   134f4:	mov	r2, r1
   134f8:	mov	r1, r0
   134fc:	mov	r0, #0
   13500:	b	13440 <abort@plt+0x26bc>
   13504:	mov	r3, r2
   13508:	mov	r2, r1
   1350c:	mov	r1, r0
   13510:	mov	r0, #0
   13514:	b	13498 <abort@plt+0x2714>
   13518:	push	{r4, r5, r6, r7, r8, r9, lr}
   1351c:	mov	r4, r2
   13520:	ldr	lr, [pc, #128]	; 135a8 <abort@plt+0x2824>
   13524:	mov	r8, r0
   13528:	mov	r9, r1
   1352c:	ldm	lr!, {r0, r1, r2, r3}
   13530:	sub	sp, sp, #60	; 0x3c
   13534:	add	ip, sp, #4
   13538:	lsr	r6, r4, #5
   1353c:	stmia	ip!, {r0, r1, r2, r3}
   13540:	add	r7, sp, #12
   13544:	ldm	lr!, {r0, r1, r2, r3}
   13548:	and	r4, r4, #31
   1354c:	ldr	r5, [pc, #88]	; 135ac <abort@plt+0x2828>
   13550:	stmia	ip!, {r0, r1, r2, r3}
   13554:	ldm	lr, {r0, r1, r2, r3}
   13558:	stm	ip, {r0, r1, r2, r3}
   1355c:	mov	r2, r9
   13560:	ldr	r3, [r7, r6, lsl #2]
   13564:	ldr	ip, [r5]
   13568:	mov	r1, r8
   1356c:	mvn	r0, r3, lsr r4
   13570:	and	r0, r0, #1
   13574:	str	ip, [sp, #52]	; 0x34
   13578:	eor	r4, r3, r0, lsl r4
   1357c:	add	r3, sp, #4
   13580:	mov	r0, #0
   13584:	str	r4, [r7, r6, lsl #2]
   13588:	bl	12f74 <abort@plt+0x21f0>
   1358c:	ldr	r2, [sp, #52]	; 0x34
   13590:	ldr	r3, [r5]
   13594:	cmp	r2, r3
   13598:	bne	135a4 <abort@plt+0x2820>
   1359c:	add	sp, sp, #60	; 0x3c
   135a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   135a4:	bl	10c04 <__stack_chk_fail@plt>
   135a8:	andeq	r5, r2, ip, lsr r2
   135ac:	andeq	r4, r2, r8, lsl #30
   135b0:	mov	r2, r1
   135b4:	mvn	r1, #0
   135b8:	b	13518 <abort@plt+0x2794>
   135bc:	mov	r2, #58	; 0x3a
   135c0:	mvn	r1, #0
   135c4:	b	13518 <abort@plt+0x2794>
   135c8:	mov	r2, #58	; 0x3a
   135cc:	b	13518 <abort@plt+0x2794>
   135d0:	push	{r4, r5, r6, r7, r8, lr}
   135d4:	sub	sp, sp, #104	; 0x68
   135d8:	ldr	r5, [pc, #120]	; 13658 <abort@plt+0x28d4>
   135dc:	mov	r6, r0
   135e0:	mov	r0, sp
   135e4:	ldr	r3, [r5]
   135e8:	mov	r7, r2
   135ec:	str	r3, [sp, #100]	; 0x64
   135f0:	bl	115ec <abort@plt+0x868>
   135f4:	mov	ip, sp
   135f8:	add	lr, sp, #52	; 0x34
   135fc:	ldm	ip!, {r0, r1, r2, r3}
   13600:	stmia	lr!, {r0, r1, r2, r3}
   13604:	ldm	ip!, {r0, r1, r2, r3}
   13608:	ldr	r8, [sp, #64]	; 0x40
   1360c:	stmia	lr!, {r0, r1, r2, r3}
   13610:	mvn	r4, r8
   13614:	ldm	ip, {r0, r1, r2, r3}
   13618:	and	ip, r4, #67108864	; 0x4000000
   1361c:	eor	ip, ip, r8
   13620:	str	ip, [sp, #64]	; 0x40
   13624:	stm	lr, {r0, r1, r2, r3}
   13628:	add	r3, sp, #52	; 0x34
   1362c:	mvn	r2, #0
   13630:	mov	r1, r7
   13634:	mov	r0, r6
   13638:	bl	12f74 <abort@plt+0x21f0>
   1363c:	ldr	r2, [sp, #100]	; 0x64
   13640:	ldr	r3, [r5]
   13644:	cmp	r2, r3
   13648:	bne	13654 <abort@plt+0x28d0>
   1364c:	add	sp, sp, #104	; 0x68
   13650:	pop	{r4, r5, r6, r7, r8, pc}
   13654:	bl	10c04 <__stack_chk_fail@plt>
   13658:	andeq	r4, r2, r8, lsl #30
   1365c:	push	{r4, r5, r6, r7, r8, r9, lr}
   13660:	mov	r6, r1
   13664:	ldr	lr, [pc, #132]	; 136f0 <abort@plt+0x296c>
   13668:	mov	r5, r2
   1366c:	mov	r8, r0
   13670:	mov	r9, r3
   13674:	ldm	lr!, {r0, r1, r2, r3}
   13678:	sub	sp, sp, #60	; 0x3c
   1367c:	add	ip, sp, #4
   13680:	ldr	r4, [pc, #108]	; 136f4 <abort@plt+0x2970>
   13684:	stmia	ip!, {r0, r1, r2, r3}
   13688:	mov	r7, #10
   1368c:	ldm	lr!, {r0, r1, r2, r3}
   13690:	cmp	r5, #0
   13694:	cmpne	r6, #0
   13698:	str	r7, [sp, #4]
   1369c:	stmia	ip!, {r0, r1, r2, r3}
   136a0:	ldm	lr, {r0, r1, r2, r3}
   136a4:	ldr	lr, [r4]
   136a8:	stm	ip, {r0, r1, r2, r3}
   136ac:	str	lr, [sp, #52]	; 0x34
   136b0:	beq	136ec <abort@plt+0x2968>
   136b4:	add	r3, sp, #4
   136b8:	ldr	r2, [sp, #88]	; 0x58
   136bc:	mov	r1, r9
   136c0:	mov	r0, r8
   136c4:	str	r6, [sp, #44]	; 0x2c
   136c8:	str	r5, [sp, #48]	; 0x30
   136cc:	bl	12f74 <abort@plt+0x21f0>
   136d0:	ldr	r2, [sp, #52]	; 0x34
   136d4:	ldr	r3, [r4]
   136d8:	cmp	r2, r3
   136dc:	bne	136e8 <abort@plt+0x2964>
   136e0:	add	sp, sp, #60	; 0x3c
   136e4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   136e8:	bl	10c04 <__stack_chk_fail@plt>
   136ec:	bl	10d84 <abort@plt>
   136f0:	andeq	r5, r2, ip, lsr r2
   136f4:	andeq	r4, r2, r8, lsl #30
   136f8:	push	{lr}		; (str lr, [sp, #-4]!)
   136fc:	sub	sp, sp, #12
   13700:	mvn	ip, #0
   13704:	str	ip, [sp]
   13708:	bl	1365c <abort@plt+0x28d8>
   1370c:	add	sp, sp, #12
   13710:	pop	{pc}		; (ldr pc, [sp], #4)
   13714:	push	{lr}		; (str lr, [sp, #-4]!)
   13718:	sub	sp, sp, #12
   1371c:	mvn	ip, #0
   13720:	mov	r3, r2
   13724:	str	ip, [sp]
   13728:	mov	r2, r1
   1372c:	mov	r1, r0
   13730:	mov	r0, #0
   13734:	bl	1365c <abort@plt+0x28d8>
   13738:	add	sp, sp, #12
   1373c:	pop	{pc}		; (ldr pc, [sp], #4)
   13740:	push	{lr}		; (str lr, [sp, #-4]!)
   13744:	sub	sp, sp, #12
   13748:	str	r3, [sp]
   1374c:	mov	r3, r2
   13750:	mov	r2, r1
   13754:	mov	r1, r0
   13758:	mov	r0, #0
   1375c:	bl	1365c <abort@plt+0x28d8>
   13760:	add	sp, sp, #12
   13764:	pop	{pc}		; (ldr pc, [sp], #4)
   13768:	ldr	r3, [pc]	; 13770 <abort@plt+0x29ec>
   1376c:	b	12f74 <abort@plt+0x21f0>
   13770:	andeq	r5, r2, r0, ror #1
   13774:	mov	r2, r1
   13778:	ldr	r3, [pc, #8]	; 13788 <abort@plt+0x2a04>
   1377c:	mov	r1, r0
   13780:	mov	r0, #0
   13784:	b	12f74 <abort@plt+0x21f0>
   13788:	andeq	r5, r2, r0, ror #1
   1378c:	ldr	r3, [pc, #4]	; 13798 <abort@plt+0x2a14>
   13790:	mvn	r2, #0
   13794:	b	12f74 <abort@plt+0x21f0>
   13798:	andeq	r5, r2, r0, ror #1
   1379c:	mov	r1, r0
   137a0:	ldr	r3, [pc, #8]	; 137b0 <abort@plt+0x2a2c>
   137a4:	mvn	r2, #0
   137a8:	mov	r0, #0
   137ac:	b	12f74 <abort@plt+0x21f0>
   137b0:	andeq	r5, r2, r0, ror #1
   137b4:	push	{r4, r5, r6, lr}
   137b8:	sub	sp, sp, #32
   137bc:	cmp	r1, #0
   137c0:	mov	r5, r0
   137c4:	ldr	r4, [sp, #48]	; 0x30
   137c8:	ldr	r6, [sp, #52]	; 0x34
   137cc:	beq	1385c <abort@plt+0x2ad8>
   137d0:	strd	r2, [sp]
   137d4:	mov	r3, r1
   137d8:	ldr	r2, [pc, #828]	; 13b1c <abort@plt+0x2d98>
   137dc:	mov	r1, #1
   137e0:	bl	10d24 <__fprintf_chk@plt>
   137e4:	mov	r2, #5
   137e8:	ldr	r1, [pc, #816]	; 13b20 <abort@plt+0x2d9c>
   137ec:	mov	r0, #0
   137f0:	bl	10bf8 <dcgettext@plt>
   137f4:	ldr	r3, [pc, #808]	; 13b24 <abort@plt+0x2da0>
   137f8:	ldr	r2, [pc, #808]	; 13b28 <abort@plt+0x2da4>
   137fc:	str	r3, [sp]
   13800:	mov	r1, #1
   13804:	mov	r3, r0
   13808:	mov	r0, r5
   1380c:	bl	10d24 <__fprintf_chk@plt>
   13810:	ldr	r1, [pc, #788]	; 13b2c <abort@plt+0x2da8>
   13814:	mov	r2, #5
   13818:	mov	r0, #0
   1381c:	bl	10bf8 <dcgettext@plt>
   13820:	mov	r1, r5
   13824:	bl	10b8c <fputs_unlocked@plt>
   13828:	cmp	r6, #9
   1382c:	ldrls	pc, [pc, r6, lsl #2]
   13830:	b	13b0c <abort@plt+0x2d88>
   13834:	andeq	r3, r1, r8, lsl fp
   13838:	andeq	r3, r1, r0, ror #17
   1383c:	andeq	r3, r1, ip, lsl #18
   13840:	andeq	r3, r1, r0, asr #18
   13844:	andeq	r3, r1, ip, ror r9
   13848:			; <UNDEFINED> instruction: 0x000139bc
   1384c:	andeq	r3, r1, r4, lsl #20
   13850:	andeq	r3, r1, r4, asr sl
   13854:	andeq	r3, r1, ip, lsr #21
   13858:	andeq	r3, r1, r4, ror r8
   1385c:	str	r3, [sp]
   13860:	mov	r1, #1
   13864:	mov	r3, r2
   13868:	ldr	r2, [pc, #704]	; 13b30 <abort@plt+0x2dac>
   1386c:	bl	10d24 <__fprintf_chk@plt>
   13870:	b	137e4 <abort@plt+0x2a60>
   13874:	ldr	r1, [pc, #696]	; 13b34 <abort@plt+0x2db0>
   13878:	mov	r2, #5
   1387c:	mov	r0, #0
   13880:	bl	10bf8 <dcgettext@plt>
   13884:	ldr	r2, [r4, #32]
   13888:	ldr	r3, [r4, #28]
   1388c:	ldr	r1, [r4, #24]
   13890:	str	r2, [sp, #28]
   13894:	ldr	r2, [r4, #20]
   13898:	str	r3, [sp, #24]
   1389c:	ldr	r3, [r4, #16]
   138a0:	str	r1, [sp, #20]
   138a4:	ldr	r1, [r4, #12]
   138a8:	str	r2, [sp, #16]
   138ac:	ldr	r2, [r4, #8]
   138b0:	str	r3, [sp, #12]
   138b4:	ldr	r3, [r4, #4]
   138b8:	str	r1, [sp, #8]
   138bc:	str	r2, [sp, #4]
   138c0:	str	r3, [sp]
   138c4:	mov	r1, #1
   138c8:	ldr	r3, [r4]
   138cc:	mov	r2, r0
   138d0:	mov	r0, r5
   138d4:	bl	10d24 <__fprintf_chk@plt>
   138d8:	add	sp, sp, #32
   138dc:	pop	{r4, r5, r6, pc}
   138e0:	mov	r2, #5
   138e4:	ldr	r1, [pc, #588]	; 13b38 <abort@plt+0x2db4>
   138e8:	mov	r0, #0
   138ec:	bl	10bf8 <dcgettext@plt>
   138f0:	ldr	r3, [r4]
   138f4:	mov	r1, #1
   138f8:	mov	r2, r0
   138fc:	mov	r0, r5
   13900:	add	sp, sp, #32
   13904:	pop	{r4, r5, r6, lr}
   13908:	b	10d24 <__fprintf_chk@plt>
   1390c:	mov	r2, #5
   13910:	ldr	r1, [pc, #548]	; 13b3c <abort@plt+0x2db8>
   13914:	mov	r0, #0
   13918:	bl	10bf8 <dcgettext@plt>
   1391c:	ldr	r2, [r4, #4]
   13920:	ldr	r3, [r4]
   13924:	mov	r1, #1
   13928:	str	r2, [sp, #48]	; 0x30
   1392c:	mov	r2, r0
   13930:	mov	r0, r5
   13934:	add	sp, sp, #32
   13938:	pop	{r4, r5, r6, lr}
   1393c:	b	10d24 <__fprintf_chk@plt>
   13940:	mov	r2, #5
   13944:	ldr	r1, [pc, #500]	; 13b40 <abort@plt+0x2dbc>
   13948:	mov	r0, #0
   1394c:	bl	10bf8 <dcgettext@plt>
   13950:	ldr	r2, [r4, #8]
   13954:	ldr	r3, [r4, #4]
   13958:	mov	r1, #1
   1395c:	str	r2, [sp, #52]	; 0x34
   13960:	str	r3, [sp, #48]	; 0x30
   13964:	ldr	r3, [r4]
   13968:	mov	r2, r0
   1396c:	mov	r0, r5
   13970:	add	sp, sp, #32
   13974:	pop	{r4, r5, r6, lr}
   13978:	b	10d24 <__fprintf_chk@plt>
   1397c:	mov	r2, #5
   13980:	ldr	r1, [pc, #444]	; 13b44 <abort@plt+0x2dc0>
   13984:	mov	r0, #0
   13988:	bl	10bf8 <dcgettext@plt>
   1398c:	ldr	r1, [r4, #12]
   13990:	ldr	r2, [r4, #8]
   13994:	ldr	r3, [r4, #4]
   13998:	str	r1, [sp, #8]
   1399c:	str	r2, [sp, #4]
   139a0:	str	r3, [sp]
   139a4:	mov	r1, #1
   139a8:	ldr	r3, [r4]
   139ac:	mov	r2, r0
   139b0:	mov	r0, r5
   139b4:	bl	10d24 <__fprintf_chk@plt>
   139b8:	b	138d8 <abort@plt+0x2b54>
   139bc:	mov	r2, #5
   139c0:	ldr	r1, [pc, #384]	; 13b48 <abort@plt+0x2dc4>
   139c4:	mov	r0, #0
   139c8:	bl	10bf8 <dcgettext@plt>
   139cc:	ldr	r3, [r4, #16]
   139d0:	ldr	r1, [r4, #12]
   139d4:	ldr	r2, [r4, #8]
   139d8:	str	r3, [sp, #12]
   139dc:	ldr	r3, [r4, #4]
   139e0:	str	r1, [sp, #8]
   139e4:	str	r2, [sp, #4]
   139e8:	str	r3, [sp]
   139ec:	mov	r1, #1
   139f0:	ldr	r3, [r4]
   139f4:	mov	r2, r0
   139f8:	mov	r0, r5
   139fc:	bl	10d24 <__fprintf_chk@plt>
   13a00:	b	138d8 <abort@plt+0x2b54>
   13a04:	mov	r2, #5
   13a08:	ldr	r1, [pc, #316]	; 13b4c <abort@plt+0x2dc8>
   13a0c:	mov	r0, #0
   13a10:	bl	10bf8 <dcgettext@plt>
   13a14:	ldr	r2, [r4, #20]
   13a18:	ldr	r3, [r4, #16]
   13a1c:	ldr	r1, [r4, #12]
   13a20:	str	r2, [sp, #16]
   13a24:	ldr	r2, [r4, #8]
   13a28:	str	r3, [sp, #12]
   13a2c:	ldr	r3, [r4, #4]
   13a30:	str	r1, [sp, #8]
   13a34:	str	r2, [sp, #4]
   13a38:	str	r3, [sp]
   13a3c:	mov	r1, #1
   13a40:	ldr	r3, [r4]
   13a44:	mov	r2, r0
   13a48:	mov	r0, r5
   13a4c:	bl	10d24 <__fprintf_chk@plt>
   13a50:	b	138d8 <abort@plt+0x2b54>
   13a54:	mov	r2, #5
   13a58:	ldr	r1, [pc, #240]	; 13b50 <abort@plt+0x2dcc>
   13a5c:	mov	r0, #0
   13a60:	bl	10bf8 <dcgettext@plt>
   13a64:	ldr	r1, [r4, #24]
   13a68:	ldr	r2, [r4, #20]
   13a6c:	ldr	r3, [r4, #16]
   13a70:	str	r1, [sp, #20]
   13a74:	ldr	r1, [r4, #12]
   13a78:	str	r2, [sp, #16]
   13a7c:	ldr	r2, [r4, #8]
   13a80:	str	r3, [sp, #12]
   13a84:	ldr	r3, [r4, #4]
   13a88:	str	r1, [sp, #8]
   13a8c:	str	r2, [sp, #4]
   13a90:	str	r3, [sp]
   13a94:	mov	r1, #1
   13a98:	ldr	r3, [r4]
   13a9c:	mov	r2, r0
   13aa0:	mov	r0, r5
   13aa4:	bl	10d24 <__fprintf_chk@plt>
   13aa8:	b	138d8 <abort@plt+0x2b54>
   13aac:	mov	r2, #5
   13ab0:	ldr	r1, [pc, #156]	; 13b54 <abort@plt+0x2dd0>
   13ab4:	mov	r0, #0
   13ab8:	bl	10bf8 <dcgettext@plt>
   13abc:	ldr	r3, [r4, #28]
   13ac0:	ldr	r1, [r4, #24]
   13ac4:	ldr	r2, [r4, #20]
   13ac8:	str	r3, [sp, #24]
   13acc:	ldr	r3, [r4, #16]
   13ad0:	str	r1, [sp, #20]
   13ad4:	ldr	r1, [r4, #12]
   13ad8:	str	r2, [sp, #16]
   13adc:	ldr	r2, [r4, #8]
   13ae0:	str	r3, [sp, #12]
   13ae4:	ldr	r3, [r4, #4]
   13ae8:	str	r1, [sp, #8]
   13aec:	str	r2, [sp, #4]
   13af0:	str	r3, [sp]
   13af4:	mov	r1, #1
   13af8:	ldr	r3, [r4]
   13afc:	mov	r2, r0
   13b00:	mov	r0, r5
   13b04:	bl	10d24 <__fprintf_chk@plt>
   13b08:	b	138d8 <abort@plt+0x2b54>
   13b0c:	mov	r2, #5
   13b10:	ldr	r1, [pc, #64]	; 13b58 <abort@plt+0x2dd4>
   13b14:	b	1387c <abort@plt+0x2af8>
   13b18:	bl	10d84 <abort@plt>
   13b1c:	strdeq	r4, [r1], -r8
   13b20:	andeq	r4, r1, ip, lsl #20
   13b24:	andeq	r0, r0, r2, ror #15
   13b28:	andeq	r4, r1, r0, ror #25
   13b2c:	andeq	r4, r1, r0, lsl sl
   13b30:	andeq	r4, r1, r4, lsl #20
   13b34:	andeq	r4, r1, r8, ror #23
   13b38:	ldrdeq	r4, [r1], -ip
   13b3c:	andeq	r4, r1, ip, ror #21
   13b40:	andeq	r4, r1, r4, lsl #22
   13b44:	andeq	r4, r1, r0, lsr #22
   13b48:	andeq	r4, r1, r0, asr #22
   13b4c:	andeq	r4, r1, r4, ror #22
   13b50:	andeq	r4, r1, ip, lsl #23
   13b54:			; <UNDEFINED> instruction: 0x00014bb8
   13b58:	andeq	r4, r1, ip, lsl ip
   13b5c:	push	{r4, r5, lr}
   13b60:	sub	sp, sp, #12
   13b64:	ldr	r5, [sp, #24]
   13b68:	ldr	ip, [r5]
   13b6c:	cmp	ip, #0
   13b70:	beq	13b8c <abort@plt+0x2e08>
   13b74:	mov	lr, r5
   13b78:	mov	ip, #0
   13b7c:	ldr	r4, [lr, #4]!
   13b80:	add	ip, ip, #1
   13b84:	cmp	r4, #0
   13b88:	bne	13b7c <abort@plt+0x2df8>
   13b8c:	stm	sp, {r5, ip}
   13b90:	bl	137b4 <abort@plt+0x2a30>
   13b94:	add	sp, sp, #12
   13b98:	pop	{r4, r5, pc}
   13b9c:	push	{r4, r5, r6, lr}
   13ba0:	sub	sp, sp, #56	; 0x38
   13ba4:	ldr	r6, [pc, #88]	; 13c04 <abort@plt+0x2e80>
   13ba8:	ldr	r5, [sp, #72]	; 0x48
   13bac:	add	r4, sp, #8
   13bb0:	ldr	ip, [r6]
   13bb4:	str	ip, [sp, #52]	; 0x34
   13bb8:	mov	ip, #0
   13bbc:	ldr	lr, [r5], #4
   13bc0:	cmp	lr, #0
   13bc4:	str	lr, [r4, #4]!
   13bc8:	beq	13bd8 <abort@plt+0x2e54>
   13bcc:	add	ip, ip, #1
   13bd0:	cmp	ip, #10
   13bd4:	bne	13bbc <abort@plt+0x2e38>
   13bd8:	add	lr, sp, #12
   13bdc:	str	ip, [sp, #4]
   13be0:	str	lr, [sp]
   13be4:	bl	137b4 <abort@plt+0x2a30>
   13be8:	ldr	r2, [sp, #52]	; 0x34
   13bec:	ldr	r3, [r6]
   13bf0:	cmp	r2, r3
   13bf4:	bne	13c00 <abort@plt+0x2e7c>
   13bf8:	add	sp, sp, #56	; 0x38
   13bfc:	pop	{r4, r5, r6, pc}
   13c00:	bl	10c04 <__stack_chk_fail@plt>
   13c04:	andeq	r4, r2, r8, lsl #30
   13c08:	push	{r3}		; (str r3, [sp, #-4]!)
   13c0c:	mov	ip, #0
   13c10:	push	{r4, r5, r6, lr}
   13c14:	sub	sp, sp, #60	; 0x3c
   13c18:	ldr	r6, [pc, #100]	; 13c84 <abort@plt+0x2f00>
   13c1c:	add	r5, sp, #8
   13c20:	add	r4, sp, #80	; 0x50
   13c24:	ldr	r3, [r6]
   13c28:	str	r4, [sp, #8]
   13c2c:	str	r3, [sp, #52]	; 0x34
   13c30:	ldr	r3, [sp, #76]	; 0x4c
   13c34:	ldr	lr, [r4], #4
   13c38:	cmp	lr, #0
   13c3c:	str	lr, [r5, #4]!
   13c40:	beq	13c50 <abort@plt+0x2ecc>
   13c44:	add	ip, ip, #1
   13c48:	cmp	ip, #10
   13c4c:	bne	13c34 <abort@plt+0x2eb0>
   13c50:	add	lr, sp, #12
   13c54:	str	ip, [sp, #4]
   13c58:	str	lr, [sp]
   13c5c:	bl	137b4 <abort@plt+0x2a30>
   13c60:	ldr	r2, [sp, #52]	; 0x34
   13c64:	ldr	r3, [r6]
   13c68:	cmp	r2, r3
   13c6c:	bne	13c80 <abort@plt+0x2efc>
   13c70:	add	sp, sp, #60	; 0x3c
   13c74:	pop	{r4, r5, r6, lr}
   13c78:	add	sp, sp, #4
   13c7c:	bx	lr
   13c80:	bl	10c04 <__stack_chk_fail@plt>
   13c84:	andeq	r4, r2, r8, lsl #30
   13c88:	push	{r4, lr}
   13c8c:	mov	r2, #5
   13c90:	ldr	r1, [pc, #88]	; 13cf0 <abort@plt+0x2f6c>
   13c94:	mov	r0, #0
   13c98:	bl	10bf8 <dcgettext@plt>
   13c9c:	ldr	r2, [pc, #80]	; 13cf4 <abort@plt+0x2f70>
   13ca0:	mov	r1, r0
   13ca4:	mov	r0, #1
   13ca8:	bl	10d00 <__printf_chk@plt>
   13cac:	mov	r2, #5
   13cb0:	ldr	r1, [pc, #64]	; 13cf8 <abort@plt+0x2f74>
   13cb4:	mov	r0, #0
   13cb8:	bl	10bf8 <dcgettext@plt>
   13cbc:	ldr	r3, [pc, #56]	; 13cfc <abort@plt+0x2f78>
   13cc0:	ldr	r2, [pc, #56]	; 13d00 <abort@plt+0x2f7c>
   13cc4:	mov	r1, r0
   13cc8:	mov	r0, #1
   13ccc:	bl	10d00 <__printf_chk@plt>
   13cd0:	ldr	r1, [pc, #44]	; 13d04 <abort@plt+0x2f80>
   13cd4:	mov	r2, #5
   13cd8:	mov	r0, #0
   13cdc:	bl	10bf8 <dcgettext@plt>
   13ce0:	ldr	r3, [pc, #32]	; 13d08 <abort@plt+0x2f84>
   13ce4:	pop	{r4, lr}
   13ce8:	ldr	r1, [r3]
   13cec:	b	10b8c <fputs_unlocked@plt>
   13cf0:	andeq	r4, r1, r8, asr ip
   13cf4:	andeq	r4, r1, r0, ror ip
   13cf8:	andeq	r4, r1, r8, lsl #25
   13cfc:			; <UNDEFINED> instruction: 0x000146b8
   13d00:	andeq	r4, r1, r0, ror #13
   13d04:	muleq	r1, ip, ip
   13d08:	andeq	r5, r2, r4, lsr #2
   13d0c:	push	{r4, lr}
   13d10:	mov	r4, r0
   13d14:	bl	10c7c <malloc@plt>
   13d18:	adds	r4, r4, #0
   13d1c:	movne	r4, #1
   13d20:	cmp	r0, #0
   13d24:	movne	r4, #0
   13d28:	cmp	r4, #0
   13d2c:	popeq	{r4, pc}
   13d30:	bl	13f54 <abort@plt+0x31d0>
   13d34:	push	{r4, r5, r6, lr}
   13d38:	umull	r4, r5, r0, r1
   13d3c:	adds	r3, r5, #0
   13d40:	movne	r3, #1
   13d44:	cmp	r4, #0
   13d48:	blt	13d60 <abort@plt+0x2fdc>
   13d4c:	cmp	r3, #0
   13d50:	bne	13d60 <abort@plt+0x2fdc>
   13d54:	mul	r0, r1, r0
   13d58:	pop	{r4, r5, r6, lr}
   13d5c:	b	13d0c <abort@plt+0x2f88>
   13d60:	bl	13f54 <abort@plt+0x31d0>
   13d64:	b	13d0c <abort@plt+0x2f88>
   13d68:	adds	r3, r0, #0
   13d6c:	movne	r3, #1
   13d70:	cmp	r1, #0
   13d74:	movne	r3, #0
   13d78:	cmp	r3, #0
   13d7c:	push	{r4, lr}
   13d80:	bne	13da8 <abort@plt+0x3024>
   13d84:	mov	r4, r1
   13d88:	bl	10c10 <realloc@plt>
   13d8c:	adds	r4, r4, #0
   13d90:	movne	r4, #1
   13d94:	cmp	r0, #0
   13d98:	movne	r4, #0
   13d9c:	cmp	r4, #0
   13da0:	popeq	{r4, pc}
   13da4:	bl	13f54 <abort@plt+0x31d0>
   13da8:	bl	10bbc <free@plt>
   13dac:	mov	r0, #0
   13db0:	pop	{r4, pc}
   13db4:	push	{r4, r5, r6, lr}
   13db8:	umull	r4, r5, r1, r2
   13dbc:	adds	r3, r5, #0
   13dc0:	movne	r3, #1
   13dc4:	cmp	r4, #0
   13dc8:	blt	13de0 <abort@plt+0x305c>
   13dcc:	cmp	r3, #0
   13dd0:	bne	13de0 <abort@plt+0x305c>
   13dd4:	mul	r1, r2, r1
   13dd8:	pop	{r4, r5, r6, lr}
   13ddc:	b	13d68 <abort@plt+0x2fe4>
   13de0:	bl	13f54 <abort@plt+0x31d0>
   13de4:	push	{r4, r5, r6, r7, r8, lr}
   13de8:	subs	r7, r0, #0
   13dec:	mov	r6, r1
   13df0:	mov	r5, r2
   13df4:	ldr	r4, [r1]
   13df8:	beq	13e2c <abort@plt+0x30a8>
   13dfc:	mov	r1, r2
   13e00:	ldr	r0, [pc, #104]	; 13e70 <abort@plt+0x30ec>
   13e04:	bl	142a8 <abort@plt+0x3524>
   13e08:	cmp	r0, r4
   13e0c:	bls	13e50 <abort@plt+0x30cc>
   13e10:	add	r3, r4, #1
   13e14:	add	r4, r3, r4, lsr #1
   13e18:	str	r4, [r6]
   13e1c:	mul	r1, r5, r4
   13e20:	mov	r0, r7
   13e24:	pop	{r4, r5, r6, r7, r8, lr}
   13e28:	b	13d68 <abort@plt+0x2fe4>
   13e2c:	cmp	r4, #0
   13e30:	beq	13e54 <abort@plt+0x30d0>
   13e34:	umull	r0, r1, r4, r5
   13e38:	adds	r3, r1, #0
   13e3c:	movne	r3, #1
   13e40:	cmp	r0, #0
   13e44:	blt	13e50 <abort@plt+0x30cc>
   13e48:	cmp	r3, #0
   13e4c:	beq	13e18 <abort@plt+0x3094>
   13e50:	bl	13f54 <abort@plt+0x31d0>
   13e54:	mov	r1, r2
   13e58:	mov	r0, #64	; 0x40
   13e5c:	bl	142a8 <abort@plt+0x3524>
   13e60:	cmp	r5, #64	; 0x40
   13e64:	movls	r4, r0
   13e68:	addhi	r4, r0, #1
   13e6c:	b	13e34 <abort@plt+0x30b0>
   13e70:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   13e74:	cmp	r0, #0
   13e78:	ldr	r3, [r1]
   13e7c:	beq	13ea0 <abort@plt+0x311c>
   13e80:	ldr	r2, [pc, #60]	; 13ec4 <abort@plt+0x3140>
   13e84:	cmp	r3, r2
   13e88:	bhi	13ebc <abort@plt+0x3138>
   13e8c:	add	r2, r3, #1
   13e90:	add	r3, r2, r3, lsr #1
   13e94:	str	r3, [r1]
   13e98:	mov	r1, r3
   13e9c:	b	13d68 <abort@plt+0x2fe4>
   13ea0:	cmp	r3, #0
   13ea4:	bne	13eb8 <abort@plt+0x3134>
   13ea8:	mov	r3, #64	; 0x40
   13eac:	str	r3, [r1]
   13eb0:	mov	r1, r3
   13eb4:	b	13d68 <abort@plt+0x2fe4>
   13eb8:	bge	13e94 <abort@plt+0x3110>
   13ebc:	push	{r4, lr}
   13ec0:	bl	13f54 <abort@plt+0x31d0>
   13ec4:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   13ec8:	push	{r4, lr}
   13ecc:	mov	r4, r0
   13ed0:	bl	13d0c <abort@plt+0x2f88>
   13ed4:	mov	r2, r4
   13ed8:	mov	r1, #0
   13edc:	pop	{r4, lr}
   13ee0:	b	10cf4 <memset@plt>
   13ee4:	push	{r4, r5, r6, lr}
   13ee8:	umull	r4, r5, r0, r1
   13eec:	adds	r3, r5, #0
   13ef0:	movne	r3, #1
   13ef4:	cmp	r4, #0
   13ef8:	blt	13f10 <abort@plt+0x318c>
   13efc:	cmp	r3, #0
   13f00:	bne	13f10 <abort@plt+0x318c>
   13f04:	bl	10b80 <calloc@plt>
   13f08:	cmp	r0, #0
   13f0c:	popne	{r4, r5, r6, pc}
   13f10:	bl	13f54 <abort@plt+0x31d0>
   13f14:	push	{r4, r5, r6, lr}
   13f18:	mov	r4, r1
   13f1c:	mov	r5, r0
   13f20:	mov	r0, r1
   13f24:	bl	13d0c <abort@plt+0x2f88>
   13f28:	mov	r2, r4
   13f2c:	mov	r1, r5
   13f30:	pop	{r4, r5, r6, lr}
   13f34:	b	10bd4 <memcpy@plt>
   13f38:	push	{r4, lr}
   13f3c:	mov	r4, r0
   13f40:	bl	10cd0 <strlen@plt>
   13f44:	add	r1, r0, #1
   13f48:	mov	r0, r4
   13f4c:	pop	{r4, lr}
   13f50:	b	13f14 <abort@plt+0x3190>
   13f54:	ldr	r3, [pc, #44]	; 13f88 <abort@plt+0x3204>
   13f58:	push	{r4, lr}
   13f5c:	mov	r2, #5
   13f60:	ldr	r1, [pc, #36]	; 13f8c <abort@plt+0x3208>
   13f64:	mov	r0, #0
   13f68:	ldr	r4, [r3]
   13f6c:	bl	10bf8 <dcgettext@plt>
   13f70:	ldr	r2, [pc, #24]	; 13f90 <abort@plt+0x320c>
   13f74:	mov	r1, #0
   13f78:	mov	r3, r0
   13f7c:	mov	r0, r4
   13f80:	bl	10c70 <error@plt>
   13f84:	bl	10d84 <abort@plt>
   13f88:	andeq	r5, r2, ip, asr #1
   13f8c:	andeq	r4, r1, r0, lsl sp
   13f90:	muleq	r1, r4, r8
   13f94:	push	{r4, r5, r6, r7, r8, lr}
   13f98:	subs	r7, r0, #0
   13f9c:	ldr	r5, [pc, #108]	; 14010 <abort@plt+0x328c>
   13fa0:	sub	sp, sp, #8
   13fa4:	mov	r8, r1
   13fa8:	ldr	r1, [r5]
   13fac:	moveq	r7, sp
   13fb0:	str	r1, [sp, #4]
   13fb4:	mov	r0, r7
   13fb8:	mov	r1, r8
   13fbc:	mov	r6, r2
   13fc0:	bl	10c64 <mbrtowc@plt>
   13fc4:	cmp	r6, #0
   13fc8:	cmnne	r0, #3
   13fcc:	mov	r4, r0
   13fd0:	bhi	13ff0 <abort@plt+0x326c>
   13fd4:	ldr	r2, [sp, #4]
   13fd8:	ldr	r3, [r5]
   13fdc:	mov	r0, r4
   13fe0:	cmp	r2, r3
   13fe4:	bne	1400c <abort@plt+0x3288>
   13fe8:	add	sp, sp, #8
   13fec:	pop	{r4, r5, r6, r7, r8, pc}
   13ff0:	mov	r0, #0
   13ff4:	bl	14088 <abort@plt+0x3304>
   13ff8:	cmp	r0, #0
   13ffc:	moveq	r4, #1
   14000:	ldrbeq	r3, [r8]
   14004:	streq	r3, [r7]
   14008:	b	13fd4 <abort@plt+0x3250>
   1400c:	bl	10c04 <__stack_chk_fail@plt>
   14010:	andeq	r4, r2, r8, lsl #30
   14014:	push	{r4, r5, r6, lr}
   14018:	mov	r4, r0
   1401c:	bl	10c58 <__fpending@plt>
   14020:	ldr	r5, [r4]
   14024:	and	r5, r5, #32
   14028:	mov	r6, r0
   1402c:	mov	r0, r4
   14030:	bl	14108 <abort@plt+0x3384>
   14034:	cmp	r5, #0
   14038:	mov	r4, r0
   1403c:	bne	14068 <abort@plt+0x32e4>
   14040:	cmp	r0, #0
   14044:	beq	14060 <abort@plt+0x32dc>
   14048:	cmp	r6, #0
   1404c:	bne	14080 <abort@plt+0x32fc>
   14050:	bl	10cdc <__errno_location@plt>
   14054:	ldr	r4, [r0]
   14058:	subs	r4, r4, #9
   1405c:	mvnne	r4, #0
   14060:	mov	r0, r4
   14064:	pop	{r4, r5, r6, pc}
   14068:	cmp	r0, #0
   1406c:	bne	14080 <abort@plt+0x32fc>
   14070:	bl	10cdc <__errno_location@plt>
   14074:	str	r4, [r0]
   14078:	mvn	r4, #0
   1407c:	b	14060 <abort@plt+0x32dc>
   14080:	mvn	r4, #0
   14084:	b	14060 <abort@plt+0x32dc>
   14088:	push	{r4, lr}
   1408c:	mov	r1, #0
   14090:	bl	10d48 <setlocale@plt>
   14094:	subs	r4, r0, #0
   14098:	beq	140c4 <abort@plt+0x3340>
   1409c:	ldr	r1, [pc, #40]	; 140cc <abort@plt+0x3348>
   140a0:	bl	10ba4 <strcmp@plt>
   140a4:	cmp	r0, #0
   140a8:	popeq	{r4, pc}
   140ac:	mov	r0, r4
   140b0:	ldr	r1, [pc, #24]	; 140d0 <abort@plt+0x334c>
   140b4:	bl	10ba4 <strcmp@plt>
   140b8:	adds	r0, r0, #0
   140bc:	movne	r0, #1
   140c0:	pop	{r4, pc}
   140c4:	mov	r0, #1
   140c8:	pop	{r4, pc}
   140cc:	andeq	r4, r1, r4, lsr #26
   140d0:	andeq	r4, r1, r8, lsr #26
   140d4:	push	{r4, lr}
   140d8:	mov	r0, #14
   140dc:	bl	10d60 <nl_langinfo@plt>
   140e0:	cmp	r0, #0
   140e4:	beq	140fc <abort@plt+0x3378>
   140e8:	ldrb	r2, [r0]
   140ec:	ldr	r3, [pc, #16]	; 14104 <abort@plt+0x3380>
   140f0:	cmp	r2, #0
   140f4:	moveq	r0, r3
   140f8:	pop	{r4, pc}
   140fc:	ldr	r0, [pc]	; 14104 <abort@plt+0x3380>
   14100:	pop	{r4, pc}
   14104:	andeq	r4, r1, r0, lsr sp
   14108:	push	{r4, r5, lr}
   1410c:	sub	sp, sp, #12
   14110:	mov	r4, r0
   14114:	bl	10d18 <fileno@plt>
   14118:	cmp	r0, #0
   1411c:	mov	r0, r4
   14120:	blt	1419c <abort@plt+0x3418>
   14124:	bl	10c94 <__freading@plt>
   14128:	cmp	r0, #0
   1412c:	bne	14168 <abort@plt+0x33e4>
   14130:	mov	r0, r4
   14134:	bl	141a8 <abort@plt+0x3424>
   14138:	cmp	r0, #0
   1413c:	beq	14198 <abort@plt+0x3414>
   14140:	bl	10cdc <__errno_location@plt>
   14144:	mov	r5, r0
   14148:	mov	r0, r4
   1414c:	ldr	r4, [r5]
   14150:	bl	10d30 <fclose@plt>
   14154:	cmp	r4, #0
   14158:	mvnne	r0, #0
   1415c:	strne	r4, [r5]
   14160:	add	sp, sp, #12
   14164:	pop	{r4, r5, pc}
   14168:	mov	r0, r4
   1416c:	bl	10d18 <fileno@plt>
   14170:	mov	r3, #1
   14174:	str	r3, [sp]
   14178:	mov	r2, #0
   1417c:	mov	r3, #0
   14180:	bl	10c40 <lseek64@plt>
   14184:	mvn	r3, #0
   14188:	mvn	r2, #0
   1418c:	cmp	r1, r3
   14190:	cmpeq	r0, r2
   14194:	bne	14130 <abort@plt+0x33ac>
   14198:	mov	r0, r4
   1419c:	add	sp, sp, #12
   141a0:	pop	{r4, r5, lr}
   141a4:	b	10d30 <fclose@plt>
   141a8:	push	{r4, lr}
   141ac:	subs	r4, r0, #0
   141b0:	sub	sp, sp, #8
   141b4:	beq	141d0 <abort@plt+0x344c>
   141b8:	bl	10c94 <__freading@plt>
   141bc:	cmp	r0, #0
   141c0:	beq	141d0 <abort@plt+0x344c>
   141c4:	ldr	r3, [r4]
   141c8:	tst	r3, #256	; 0x100
   141cc:	bne	141e0 <abort@plt+0x345c>
   141d0:	mov	r0, r4
   141d4:	add	sp, sp, #8
   141d8:	pop	{r4, lr}
   141dc:	b	10bb0 <fflush@plt>
   141e0:	mov	r3, #1
   141e4:	str	r3, [sp]
   141e8:	mov	r2, #0
   141ec:	mov	r3, #0
   141f0:	mov	r0, r4
   141f4:	bl	14208 <abort@plt+0x3484>
   141f8:	mov	r0, r4
   141fc:	add	sp, sp, #8
   14200:	pop	{r4, lr}
   14204:	b	10bb0 <fflush@plt>
   14208:	push	{r4, r5, r6, r7, r8, lr}
   1420c:	sub	sp, sp, #8
   14210:	ldmib	r0, {ip, lr}
   14214:	mov	r4, r0
   14218:	ldr	r5, [sp, #32]
   1421c:	cmp	lr, ip
   14220:	beq	14238 <abort@plt+0x34b4>
   14224:	str	r5, [sp, #32]
   14228:	mov	r0, r4
   1422c:	add	sp, sp, #8
   14230:	pop	{r4, r5, r6, r7, r8, lr}
   14234:	b	10d3c <fseeko64@plt>
   14238:	ldr	lr, [r0, #20]
   1423c:	ldr	ip, [r0, #16]
   14240:	cmp	lr, ip
   14244:	bne	14224 <abort@plt+0x34a0>
   14248:	ldr	r8, [r0, #36]	; 0x24
   1424c:	cmp	r8, #0
   14250:	bne	14224 <abort@plt+0x34a0>
   14254:	mov	r6, r2
   14258:	mov	r7, r3
   1425c:	bl	10d18 <fileno@plt>
   14260:	mov	r2, r6
   14264:	mov	r3, r7
   14268:	str	r5, [sp]
   1426c:	bl	10c40 <lseek64@plt>
   14270:	mvn	r3, #0
   14274:	mvn	r2, #0
   14278:	cmp	r1, r3
   1427c:	cmpeq	r0, r2
   14280:	beq	142a0 <abort@plt+0x351c>
   14284:	ldr	r3, [r4]
   14288:	strd	r0, [r4, #80]	; 0x50
   1428c:	mov	r0, r8
   14290:	bic	r3, r3, #16
   14294:	str	r3, [r4]
   14298:	add	sp, sp, #8
   1429c:	pop	{r4, r5, r6, r7, r8, pc}
   142a0:	mvn	r0, #0
   142a4:	b	14298 <abort@plt+0x3514>
   142a8:	subs	r2, r1, #1
   142ac:	bxeq	lr
   142b0:	bcc	14488 <abort@plt+0x3704>
   142b4:	cmp	r0, r1
   142b8:	bls	1446c <abort@plt+0x36e8>
   142bc:	tst	r1, r2
   142c0:	beq	14478 <abort@plt+0x36f4>
   142c4:	clz	r3, r0
   142c8:	clz	r2, r1
   142cc:	sub	r3, r2, r3
   142d0:	rsbs	r3, r3, #31
   142d4:	addne	r3, r3, r3, lsl #1
   142d8:	mov	r2, #0
   142dc:	addne	pc, pc, r3, lsl #2
   142e0:	nop			; (mov r0, r0)
   142e4:	cmp	r0, r1, lsl #31
   142e8:	adc	r2, r2, r2
   142ec:	subcs	r0, r0, r1, lsl #31
   142f0:	cmp	r0, r1, lsl #30
   142f4:	adc	r2, r2, r2
   142f8:	subcs	r0, r0, r1, lsl #30
   142fc:	cmp	r0, r1, lsl #29
   14300:	adc	r2, r2, r2
   14304:	subcs	r0, r0, r1, lsl #29
   14308:	cmp	r0, r1, lsl #28
   1430c:	adc	r2, r2, r2
   14310:	subcs	r0, r0, r1, lsl #28
   14314:	cmp	r0, r1, lsl #27
   14318:	adc	r2, r2, r2
   1431c:	subcs	r0, r0, r1, lsl #27
   14320:	cmp	r0, r1, lsl #26
   14324:	adc	r2, r2, r2
   14328:	subcs	r0, r0, r1, lsl #26
   1432c:	cmp	r0, r1, lsl #25
   14330:	adc	r2, r2, r2
   14334:	subcs	r0, r0, r1, lsl #25
   14338:	cmp	r0, r1, lsl #24
   1433c:	adc	r2, r2, r2
   14340:	subcs	r0, r0, r1, lsl #24
   14344:	cmp	r0, r1, lsl #23
   14348:	adc	r2, r2, r2
   1434c:	subcs	r0, r0, r1, lsl #23
   14350:	cmp	r0, r1, lsl #22
   14354:	adc	r2, r2, r2
   14358:	subcs	r0, r0, r1, lsl #22
   1435c:	cmp	r0, r1, lsl #21
   14360:	adc	r2, r2, r2
   14364:	subcs	r0, r0, r1, lsl #21
   14368:	cmp	r0, r1, lsl #20
   1436c:	adc	r2, r2, r2
   14370:	subcs	r0, r0, r1, lsl #20
   14374:	cmp	r0, r1, lsl #19
   14378:	adc	r2, r2, r2
   1437c:	subcs	r0, r0, r1, lsl #19
   14380:	cmp	r0, r1, lsl #18
   14384:	adc	r2, r2, r2
   14388:	subcs	r0, r0, r1, lsl #18
   1438c:	cmp	r0, r1, lsl #17
   14390:	adc	r2, r2, r2
   14394:	subcs	r0, r0, r1, lsl #17
   14398:	cmp	r0, r1, lsl #16
   1439c:	adc	r2, r2, r2
   143a0:	subcs	r0, r0, r1, lsl #16
   143a4:	cmp	r0, r1, lsl #15
   143a8:	adc	r2, r2, r2
   143ac:	subcs	r0, r0, r1, lsl #15
   143b0:	cmp	r0, r1, lsl #14
   143b4:	adc	r2, r2, r2
   143b8:	subcs	r0, r0, r1, lsl #14
   143bc:	cmp	r0, r1, lsl #13
   143c0:	adc	r2, r2, r2
   143c4:	subcs	r0, r0, r1, lsl #13
   143c8:	cmp	r0, r1, lsl #12
   143cc:	adc	r2, r2, r2
   143d0:	subcs	r0, r0, r1, lsl #12
   143d4:	cmp	r0, r1, lsl #11
   143d8:	adc	r2, r2, r2
   143dc:	subcs	r0, r0, r1, lsl #11
   143e0:	cmp	r0, r1, lsl #10
   143e4:	adc	r2, r2, r2
   143e8:	subcs	r0, r0, r1, lsl #10
   143ec:	cmp	r0, r1, lsl #9
   143f0:	adc	r2, r2, r2
   143f4:	subcs	r0, r0, r1, lsl #9
   143f8:	cmp	r0, r1, lsl #8
   143fc:	adc	r2, r2, r2
   14400:	subcs	r0, r0, r1, lsl #8
   14404:	cmp	r0, r1, lsl #7
   14408:	adc	r2, r2, r2
   1440c:	subcs	r0, r0, r1, lsl #7
   14410:	cmp	r0, r1, lsl #6
   14414:	adc	r2, r2, r2
   14418:	subcs	r0, r0, r1, lsl #6
   1441c:	cmp	r0, r1, lsl #5
   14420:	adc	r2, r2, r2
   14424:	subcs	r0, r0, r1, lsl #5
   14428:	cmp	r0, r1, lsl #4
   1442c:	adc	r2, r2, r2
   14430:	subcs	r0, r0, r1, lsl #4
   14434:	cmp	r0, r1, lsl #3
   14438:	adc	r2, r2, r2
   1443c:	subcs	r0, r0, r1, lsl #3
   14440:	cmp	r0, r1, lsl #2
   14444:	adc	r2, r2, r2
   14448:	subcs	r0, r0, r1, lsl #2
   1444c:	cmp	r0, r1, lsl #1
   14450:	adc	r2, r2, r2
   14454:	subcs	r0, r0, r1, lsl #1
   14458:	cmp	r0, r1
   1445c:	adc	r2, r2, r2
   14460:	subcs	r0, r0, r1
   14464:	mov	r0, r2
   14468:	bx	lr
   1446c:	moveq	r0, #1
   14470:	movne	r0, #0
   14474:	bx	lr
   14478:	clz	r2, r1
   1447c:	rsb	r2, r2, #31
   14480:	lsr	r0, r0, r2
   14484:	bx	lr
   14488:	cmp	r0, #0
   1448c:	mvnne	r0, #0
   14490:	b	144b4 <abort@plt+0x3730>
   14494:	cmp	r1, #0
   14498:	beq	14488 <abort@plt+0x3704>
   1449c:	push	{r0, r1, lr}
   144a0:	bl	142a8 <abort@plt+0x3524>
   144a4:	pop	{r1, r2, lr}
   144a8:	mul	r3, r2, r0
   144ac:	sub	r1, r1, r3
   144b0:	bx	lr
   144b4:	push	{r1, lr}
   144b8:	mov	r0, #8
   144bc:	bl	10b98 <raise@plt>
   144c0:	pop	{r1, pc}
   144c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   144c8:	mov	r7, r0
   144cc:	ldr	r6, [pc, #72]	; 1451c <abort@plt+0x3798>
   144d0:	ldr	r5, [pc, #72]	; 14520 <abort@plt+0x379c>
   144d4:	add	r6, pc, r6
   144d8:	add	r5, pc, r5
   144dc:	sub	r6, r6, r5
   144e0:	mov	r8, r1
   144e4:	mov	r9, r2
   144e8:	bl	10b60 <calloc@plt-0x20>
   144ec:	asrs	r6, r6, #2
   144f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   144f4:	mov	r4, #0
   144f8:	add	r4, r4, #1
   144fc:	ldr	r3, [r5], #4
   14500:	mov	r2, r9
   14504:	mov	r1, r8
   14508:	mov	r0, r7
   1450c:	blx	r3
   14510:	cmp	r6, r4
   14514:	bne	144f8 <abort@plt+0x3774>
   14518:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1451c:	andeq	r0, r1, r8, lsr #20
   14520:	andeq	r0, r1, r0, lsr #20
   14524:	bx	lr
   14528:	ldr	r3, [pc, #12]	; 1453c <abort@plt+0x37b8>
   1452c:	mov	r1, #0
   14530:	add	r3, pc, r3
   14534:	ldr	r2, [r3]
   14538:	b	10ce8 <__cxa_atexit@plt>
   1453c:	andeq	r0, r1, ip, lsl #23

Disassembly of section .fini:

00014540 <.fini>:
   14540:	push	{r3, lr}
   14544:	pop	{r3, pc}
