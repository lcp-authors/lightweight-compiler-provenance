
raspbian-preinstalled/bsd-write:     file format elf32-littlearm


Disassembly of section .init:

00010a74 <.init>:
   10a74:	push	{r3, lr}
   10a78:	bl	10f78 <__snprintf_chk@plt+0x304>
   10a7c:	pop	{r3, pc}

Disassembly of section .plt:

00010a80 <strcmp@plt-0x14>:
   10a80:	push	{lr}		; (str lr, [sp, #-4]!)
   10a84:	ldr	lr, [pc, #4]	; 10a90 <strcmp@plt-0x4>
   10a88:	add	lr, pc, lr
   10a8c:	ldr	pc, [lr, #8]!
   10a90:	andeq	r1, r1, r0, ror r5

00010a94 <strcmp@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1392]!	; 0x570

00010aa0 <getlogin@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1384]!	; 0x568

00010aac <getpwuid@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1376]!	; 0x560

00010ab8 <getuid@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #69632	; 0x11000
   10ac0:	ldr	pc, [ip, #1368]!	; 0x558

00010ac4 <signal@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #69632	; 0x11000
   10acc:	ldr	pc, [ip, #1360]!	; 0x550

00010ad0 <time@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #69632	; 0x11000
   10ad8:	ldr	pc, [ip, #1352]!	; 0x548

00010adc <ctime@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #69632	; 0x11000
   10ae4:	ldr	pc, [ip, #1344]!	; 0x540

00010ae8 <setutxent@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #69632	; 0x11000
   10af0:	ldr	pc, [ip, #1336]!	; 0x538

00010af4 <__stack_chk_fail@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #69632	; 0x11000
   10afc:	ldr	pc, [ip, #1328]!	; 0x530

00010b00 <fgetws@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #69632	; 0x11000
   10b08:	ldr	pc, [ip, #1320]!	; 0x528

00010b0c <__fxstatat@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1312]!	; 0x520

00010b18 <err@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1304]!	; 0x518

00010b24 <iswprint@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1296]!	; 0x510

00010b30 <putwchar@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1288]!	; 0x508

00010b3c <fwrite@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1280]!	; 0x500

00010b48 <gethostname@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b54 <puts@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b60 <__libc_start_main@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b6c <__gmon_start__@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b78 <open@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b84 <exit@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b90 <strlcpy@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b9c <iswspace@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1216]!	; 0x4c0

00010ba8 <ttyname@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1208]!	; 0x4b8

00010bb4 <warnx@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #69632	; 0x11000
   10bbc:	ldr	pc, [ip, #1200]!	; 0x4b0

00010bc0 <getopt@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1192]!	; 0x4a8

00010bcc <strncpy@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #69632	; 0x11000
   10bd4:	ldr	pc, [ip, #1184]!	; 0x4a0

00010bd8 <__printf_chk@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #69632	; 0x11000
   10be0:	ldr	pc, [ip, #1176]!	; 0x498

00010be4 <fileno@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #69632	; 0x11000
   10bec:	ldr	pc, [ip, #1168]!	; 0x490

00010bf0 <getutxline@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #69632	; 0x11000
   10bf8:	ldr	pc, [ip, #1160]!	; 0x488

00010bfc <endutxent@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #69632	; 0x11000
   10c04:	ldr	pc, [ip, #1152]!	; 0x480

00010c08 <setlocale@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #69632	; 0x11000
   10c10:	ldr	pc, [ip, #1144]!	; 0x478

00010c14 <errx@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #69632	; 0x11000
   10c1c:	ldr	pc, [ip, #1136]!	; 0x470

00010c20 <warn@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #69632	; 0x11000
   10c28:	ldr	pc, [ip, #1128]!	; 0x468

00010c2c <__wprintf_chk@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #69632	; 0x11000
   10c34:	ldr	pc, [ip, #1120]!	; 0x460

00010c38 <isatty@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #69632	; 0x11000
   10c40:	ldr	pc, [ip, #1112]!	; 0x458

00010c44 <freopen@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #69632	; 0x11000
   10c4c:	ldr	pc, [ip, #1104]!	; 0x450

00010c50 <strncmp@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #69632	; 0x11000
   10c58:	ldr	pc, [ip, #1096]!	; 0x448

00010c5c <abort@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #69632	; 0x11000
   10c64:	ldr	pc, [ip, #1088]!	; 0x440

00010c68 <getutxent@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #69632	; 0x11000
   10c70:	ldr	pc, [ip, #1080]!	; 0x438

00010c74 <__snprintf_chk@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #69632	; 0x11000
   10c7c:	ldr	pc, [ip, #1072]!	; 0x430

Disassembly of section .text:

00010c80 <.text>:
   10c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c84:	sub	sp, sp, #4096	; 0x1000
   10c88:	ldr	r3, [pc, #628]	; 10f04 <__snprintf_chk@plt+0x290>
   10c8c:	sub	sp, sp, #36	; 0x24
   10c90:	add	r2, sp, #4096	; 0x1000
   10c94:	ldr	r3, [r3]
   10c98:	add	r2, r2, #28
   10c9c:	mov	fp, r0
   10ca0:	mov	r4, r1
   10ca4:	mov	r0, #0
   10ca8:	ldr	r1, [pc, #600]	; 10f08 <__snprintf_chk@plt+0x294>
   10cac:	str	r3, [r2]
   10cb0:	bl	10c08 <setlocale@plt>
   10cb4:	mov	r1, #0
   10cb8:	ldr	r0, [pc, #588]	; 10f0c <__snprintf_chk@plt+0x298>
   10cbc:	bl	10b78 <open@plt>
   10cc0:	subs	r5, r0, #0
   10cc4:	blt	10de8 <__snprintf_chk@plt+0x174>
   10cc8:	bl	10ae8 <setutxent@plt>
   10ccc:	bl	10ab8 <getuid@plt>
   10cd0:	mov	r7, r0
   10cd4:	bl	10aa0 <getlogin@plt>
   10cd8:	subs	r8, r0, #0
   10cdc:	beq	10e38 <__snprintf_chk@plt+0x1c4>
   10ce0:	ldr	r2, [pc, #544]	; 10f08 <__snprintf_chk@plt+0x294>
   10ce4:	mov	r1, r4
   10ce8:	mov	r0, fp
   10cec:	bl	10bc0 <getopt@plt>
   10cf0:	cmn	r0, #1
   10cf4:	beq	10cfc <__snprintf_chk@plt+0x88>
   10cf8:	bl	1102c <__snprintf_chk@plt+0x3b8>
   10cfc:	ldr	r6, [pc, #524]	; 10f10 <__snprintf_chk@plt+0x29c>
   10d00:	ldr	r3, [pc, #524]	; 10f14 <__snprintf_chk@plt+0x2a0>
   10d04:	ldr	r0, [r6]
   10d08:	ldr	sl, [r3]
   10d0c:	bl	10be4 <fileno@plt>
   10d10:	bl	10c38 <isatty@plt>
   10d14:	cmp	r0, #0
   10d18:	beq	10df4 <__snprintf_chk@plt+0x180>
   10d1c:	ldr	r0, [r6]
   10d20:	bl	10be4 <fileno@plt>
   10d24:	bl	10ba8 <ttyname@plt>
   10d28:	subs	r9, r0, #0
   10d2c:	beq	10e94 <__snprintf_chk@plt+0x220>
   10d30:	mov	r2, #5
   10d34:	ldr	r1, [pc, #464]	; 10f0c <__snprintf_chk@plt+0x298>
   10d38:	bl	10c50 <strncmp@plt>
   10d3c:	add	r6, sp, #32
   10d40:	mov	r1, #1
   10d44:	str	r1, [sp]
   10d48:	sub	r3, r6, #12
   10d4c:	sub	r2, r6, #8
   10d50:	cmp	r0, #0
   10d54:	addeq	r9, r9, #5
   10d58:	mov	r1, r9
   10d5c:	mov	r0, r5
   10d60:	bl	11100 <__snprintf_chk@plt+0x48c>
   10d64:	cmp	r0, #0
   10d68:	bne	10e50 <__snprintf_chk@plt+0x1dc>
   10d6c:	ldr	r3, [r6, #-8]
   10d70:	cmp	r3, #0
   10d74:	bne	10d80 <__snprintf_chk@plt+0x10c>
   10d78:	ldr	r0, [pc, #408]	; 10f18 <__snprintf_chk@plt+0x2a4>
   10d7c:	bl	10bb4 <warnx@plt>
   10d80:	sub	r3, fp, sl
   10d84:	cmp	r3, #1
   10d88:	add	fp, r4, sl, lsl #2
   10d8c:	beq	10e58 <__snprintf_chk@plt+0x1e4>
   10d90:	cmp	r3, #2
   10d94:	bne	10cf8 <__snprintf_chk@plt+0x84>
   10d98:	ldr	r3, [fp, #4]
   10d9c:	mov	r2, #5
   10da0:	mov	r0, r3
   10da4:	ldr	r1, [pc, #352]	; 10f0c <__snprintf_chk@plt+0x298>
   10da8:	str	r3, [sp, #12]
   10dac:	bl	10c50 <strncmp@plt>
   10db0:	cmp	r0, #0
   10db4:	ldreq	r3, [sp, #12]
   10db8:	addeq	r3, r3, #5
   10dbc:	streq	r3, [fp, #4]
   10dc0:	ldr	r1, [fp, #4]
   10dc4:	ldr	r0, [r4, sl, lsl #2]
   10dc8:	bl	11070 <__snprintf_chk@plt+0x3fc>
   10dcc:	cmp	r0, #0
   10dd0:	beq	10ea0 <__snprintf_chk@plt+0x22c>
   10dd4:	ldr	r3, [fp, #4]
   10dd8:	ldr	r2, [r4, sl, lsl #2]
   10ddc:	ldr	r1, [pc, #312]	; 10f1c <__snprintf_chk@plt+0x2a8>
   10de0:	mov	r0, #1
   10de4:	bl	10c14 <errx@plt>
   10de8:	ldr	r1, [pc, #304]	; 10f20 <__snprintf_chk@plt+0x2ac>
   10dec:	mov	r0, #1
   10df0:	bl	10b18 <err@plt>
   10df4:	ldr	r6, [pc, #296]	; 10f24 <__snprintf_chk@plt+0x2b0>
   10df8:	ldr	r0, [r6]
   10dfc:	bl	10be4 <fileno@plt>
   10e00:	bl	10c38 <isatty@plt>
   10e04:	cmp	r0, #0
   10e08:	bne	10d1c <__snprintf_chk@plt+0xa8>
   10e0c:	ldr	r6, [pc, #276]	; 10f28 <__snprintf_chk@plt+0x2b4>
   10e10:	ldr	r0, [r6]
   10e14:	bl	10be4 <fileno@plt>
   10e18:	bl	10c38 <isatty@plt>
   10e1c:	cmp	r0, #0
   10e20:	bne	10d1c <__snprintf_chk@plt+0xa8>
   10e24:	add	r6, sp, #32
   10e28:	mov	r3, #1
   10e2c:	str	r3, [r6, #-8]
   10e30:	ldr	r9, [pc, #244]	; 10f2c <__snprintf_chk@plt+0x2b8>
   10e34:	b	10d80 <__snprintf_chk@plt+0x10c>
   10e38:	mov	r0, r7
   10e3c:	bl	10aac <getpwuid@plt>
   10e40:	cmp	r0, #0
   10e44:	ldrne	r8, [r0]
   10e48:	ldreq	r8, [pc, #224]	; 10f30 <__snprintf_chk@plt+0x2bc>
   10e4c:	b	10ce0 <__snprintf_chk@plt+0x6c>
   10e50:	mov	r0, #1
   10e54:	bl	10b84 <exit@plt>
   10e58:	sub	r3, r6, #4
   10e5c:	mov	r2, r3
   10e60:	str	r3, [sp, #12]
   10e64:	str	r7, [sp]
   10e68:	mov	r3, r9
   10e6c:	ldr	r1, [r4, sl, lsl #2]
   10e70:	mov	r0, r5
   10e74:	bl	111b0 <__snprintf_chk@plt+0x53c>
   10e78:	mov	r3, r8
   10e7c:	mov	r2, r9
   10e80:	ldr	r1, [sp, #12]
   10e84:	mov	r0, r5
   10e88:	bl	113c0 <__snprintf_chk@plt+0x74c>
   10e8c:	mov	r0, #0
   10e90:	bl	11058 <__snprintf_chk@plt+0x3e4>
   10e94:	ldr	r1, [pc, #152]	; 10f34 <__snprintf_chk@plt+0x2c0>
   10e98:	mov	r0, #1
   10e9c:	bl	10c14 <errx@plt>
   10ea0:	mov	r3, #1
   10ea4:	str	r3, [sp]
   10ea8:	sub	r2, r6, #8
   10eac:	sub	r3, r6, #12
   10eb0:	ldr	r1, [fp, #4]
   10eb4:	mov	r0, r5
   10eb8:	bl	11100 <__snprintf_chk@plt+0x48c>
   10ebc:	cmp	r0, #0
   10ec0:	bne	10e50 <__snprintf_chk@plt+0x1dc>
   10ec4:	cmp	r7, #0
   10ec8:	ldr	r1, [fp, #4]
   10ecc:	beq	10edc <__snprintf_chk@plt+0x268>
   10ed0:	ldr	r3, [r6, #-8]
   10ed4:	cmp	r3, #0
   10ed8:	beq	10ef0 <__snprintf_chk@plt+0x27c>
   10edc:	mov	r3, r8
   10ee0:	mov	r2, r9
   10ee4:	mov	r0, r5
   10ee8:	bl	113c0 <__snprintf_chk@plt+0x74c>
   10eec:	b	10e8c <__snprintf_chk@plt+0x218>
   10ef0:	mov	r3, r1
   10ef4:	ldr	r2, [r4, sl, lsl #2]
   10ef8:	mov	r0, #1
   10efc:	ldr	r1, [pc, #52]	; 10f38 <__snprintf_chk@plt+0x2c4>
   10f00:	bl	10c14 <errx@plt>
   10f04:	andeq	r1, r2, r0, lsl #30
   10f08:			; <UNDEFINED> instruction: 0x000115b8
   10f0c:	andeq	r1, r1, r4, asr #11
   10f10:	ldrdeq	r2, [r2], -r0
   10f14:	andeq	r2, r2, r0, asr #1
   10f18:	muleq	r1, r8, r6
   10f1c:	andeq	r1, r1, r8, asr #13
   10f20:	andeq	r1, r1, r0, ror r6
   10f24:	ldrdeq	r2, [r2], -r4
   10f28:	andeq	r2, r2, r8, asr #1
   10f2c:	andeq	r1, r1, r8, ror #12
   10f30:	andeq	r1, r1, r4, ror #12
   10f34:	andeq	r1, r1, ip, ror r6
   10f38:	andeq	r1, r1, r4, ror #13
   10f3c:	mov	fp, #0
   10f40:	mov	lr, #0
   10f44:	pop	{r1}		; (ldr r1, [sp], #4)
   10f48:	mov	r2, sp
   10f4c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f50:	push	{r0}		; (str r0, [sp, #-4]!)
   10f54:	ldr	ip, [pc, #16]	; 10f6c <__snprintf_chk@plt+0x2f8>
   10f58:	push	{ip}		; (str ip, [sp, #-4]!)
   10f5c:	ldr	r0, [pc, #12]	; 10f70 <__snprintf_chk@plt+0x2fc>
   10f60:	ldr	r3, [pc, #12]	; 10f74 <__snprintf_chk@plt+0x300>
   10f64:	bl	10b60 <__libc_start_main@plt>
   10f68:	bl	10c5c <abort@plt>
   10f6c:	muleq	r1, r0, r5
   10f70:	andeq	r0, r1, r0, lsl #25
   10f74:	andeq	r1, r1, r0, lsr r5
   10f78:	ldr	r3, [pc, #20]	; 10f94 <__snprintf_chk@plt+0x320>
   10f7c:	ldr	r2, [pc, #20]	; 10f98 <__snprintf_chk@plt+0x324>
   10f80:	add	r3, pc, r3
   10f84:	ldr	r2, [r3, r2]
   10f88:	cmp	r2, #0
   10f8c:	bxeq	lr
   10f90:	b	10b6c <__gmon_start__@plt>
   10f94:	andeq	r1, r1, r8, ror r0
   10f98:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   10f9c:	ldr	r0, [pc, #24]	; 10fbc <__snprintf_chk@plt+0x348>
   10fa0:	ldr	r3, [pc, #24]	; 10fc0 <__snprintf_chk@plt+0x34c>
   10fa4:	cmp	r3, r0
   10fa8:	bxeq	lr
   10fac:	ldr	r3, [pc, #16]	; 10fc4 <__snprintf_chk@plt+0x350>
   10fb0:	cmp	r3, #0
   10fb4:	bxeq	lr
   10fb8:	bx	r3
   10fbc:	strheq	r2, [r2], -ip
   10fc0:	strheq	r2, [r2], -ip
   10fc4:	andeq	r0, r0, r0
   10fc8:	ldr	r0, [pc, #36]	; 10ff4 <__snprintf_chk@plt+0x380>
   10fcc:	ldr	r1, [pc, #36]	; 10ff8 <__snprintf_chk@plt+0x384>
   10fd0:	sub	r1, r1, r0
   10fd4:	asr	r1, r1, #2
   10fd8:	add	r1, r1, r1, lsr #31
   10fdc:	asrs	r1, r1, #1
   10fe0:	bxeq	lr
   10fe4:	ldr	r3, [pc, #16]	; 10ffc <__snprintf_chk@plt+0x388>
   10fe8:	cmp	r3, #0
   10fec:	bxeq	lr
   10ff0:	bx	r3
   10ff4:	strheq	r2, [r2], -ip
   10ff8:	strheq	r2, [r2], -ip
   10ffc:	andeq	r0, r0, r0
   11000:	push	{r4, lr}
   11004:	ldr	r4, [pc, #24]	; 11024 <__snprintf_chk@plt+0x3b0>
   11008:	ldrb	r3, [r4]
   1100c:	cmp	r3, #0
   11010:	popne	{r4, pc}
   11014:	bl	10f9c <__snprintf_chk@plt+0x328>
   11018:	mov	r3, #1
   1101c:	strb	r3, [r4]
   11020:	pop	{r4, pc}
   11024:	ldrdeq	r2, [r2], -r8
   11028:	b	10fc8 <__snprintf_chk@plt+0x354>
   1102c:	ldr	r3, [pc, #28]	; 11050 <__snprintf_chk@plt+0x3dc>
   11030:	push	{r4, lr}
   11034:	mov	r2, #24
   11038:	mov	r1, #1
   1103c:	ldr	r3, [r3]
   11040:	ldr	r0, [pc, #12]	; 11054 <__snprintf_chk@plt+0x3e0>
   11044:	bl	10b3c <fwrite@plt>
   11048:	mov	r0, #1
   1104c:	bl	10b84 <exit@plt>
   11050:	andeq	r2, r2, r8, asr #1
   11054:	andeq	r1, r1, r0, lsr #11
   11058:	push	{r4, lr}
   1105c:	ldr	r0, [pc, #8]	; 1106c <__snprintf_chk@plt+0x3f8>
   11060:	bl	10b54 <puts@plt>
   11064:	mov	r0, #0
   11068:	bl	10b84 <exit@plt>
   1106c:			; <UNDEFINED> instruction: 0x000115bc
   11070:	push	{r4, r5, lr}
   11074:	sub	sp, sp, #404	; 0x194
   11078:	ldr	r5, [pc, #124]	; 110fc <__snprintf_chk@plt+0x488>
   1107c:	mov	r4, r0
   11080:	mov	r2, #32
   11084:	ldr	r3, [r5]
   11088:	add	r0, sp, #20
   1108c:	str	r3, [sp, #396]	; 0x18c
   11090:	bl	10bcc <strncpy@plt>
   11094:	bl	10ae8 <setutxent@plt>
   11098:	add	r0, sp, #12
   1109c:	bl	10bf0 <getutxline@plt>
   110a0:	cmp	r0, #0
   110a4:	beq	110d8 <__snprintf_chk@plt+0x464>
   110a8:	ldrsh	r3, [r0]
   110ac:	cmp	r3, #7
   110b0:	bne	11098 <__snprintf_chk@plt+0x424>
   110b4:	add	r1, r0, #44	; 0x2c
   110b8:	mov	r0, r4
   110bc:	bl	10a94 <strcmp@plt>
   110c0:	cmp	r0, #0
   110c4:	bne	11098 <__snprintf_chk@plt+0x424>
   110c8:	str	r0, [sp, #4]
   110cc:	bl	10bfc <endutxent@plt>
   110d0:	ldr	r0, [sp, #4]
   110d4:	b	110e0 <__snprintf_chk@plt+0x46c>
   110d8:	bl	10bfc <endutxent@plt>
   110dc:	mov	r0, #1
   110e0:	ldr	r2, [sp, #396]	; 0x18c
   110e4:	ldr	r3, [r5]
   110e8:	cmp	r2, r3
   110ec:	bne	110f8 <__snprintf_chk@plt+0x484>
   110f0:	add	sp, sp, #404	; 0x194
   110f4:	pop	{r4, r5, pc}
   110f8:	bl	10af4 <__stack_chk_fail@plt>
   110fc:	andeq	r1, r2, r0, lsl #30
   11100:	push	{r4, r5, r6, r7, r8, lr}
   11104:	sub	sp, sp, #104	; 0x68
   11108:	ldr	r5, [pc, #148]	; 111a4 <__snprintf_chk@plt+0x530>
   1110c:	mov	r8, r1
   11110:	mov	r4, #0
   11114:	ldr	ip, [r5]
   11118:	mov	r1, r0
   1111c:	mov	r7, r2
   11120:	mov	r6, r3
   11124:	mov	r2, r8
   11128:	str	r4, [sp]
   1112c:	add	r3, sp, #8
   11130:	mov	r0, #3
   11134:	str	ip, [sp, #100]	; 0x64
   11138:	bl	10b0c <__fxstatat@plt>
   1113c:	cmp	r0, r4
   11140:	blt	11178 <__snprintf_chk@plt+0x504>
   11144:	ldr	r3, [sp, #24]
   11148:	ldr	r2, [sp, #64]	; 0x40
   1114c:	mov	r0, r4
   11150:	lsr	r3, r3, #4
   11154:	and	r3, r3, #1
   11158:	str	r3, [r7]
   1115c:	str	r2, [r6]
   11160:	ldr	r2, [sp, #100]	; 0x64
   11164:	ldr	r3, [r5]
   11168:	cmp	r2, r3
   1116c:	bne	111a0 <__snprintf_chk@plt+0x52c>
   11170:	add	sp, sp, #104	; 0x68
   11174:	pop	{r4, r5, r6, r7, r8, pc}
   11178:	ldr	r3, [sp, #128]	; 0x80
   1117c:	cmp	r3, r4
   11180:	moveq	r0, #1
   11184:	beq	11160 <__snprintf_chk@plt+0x4ec>
   11188:	ldr	r0, [pc, #24]	; 111a8 <__snprintf_chk@plt+0x534>
   1118c:	mov	r2, r8
   11190:	ldr	r1, [pc, #20]	; 111ac <__snprintf_chk@plt+0x538>
   11194:	bl	10c20 <warn@plt>
   11198:	mov	r0, #1
   1119c:	b	11160 <__snprintf_chk@plt+0x4ec>
   111a0:	bl	10af4 <__stack_chk_fail@plt>
   111a4:	andeq	r1, r2, r0, lsl #30
   111a8:	andeq	r1, r1, ip, asr #11
   111ac:	andeq	r1, r1, r4, asr #11
   111b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111b4:	sub	sp, sp, #36	; 0x24
   111b8:	ldr	r8, [pc, #348]	; 1131c <__snprintf_chk@plt+0x6a8>
   111bc:	mov	r5, #0
   111c0:	str	r0, [sp, #8]
   111c4:	mov	r9, r5
   111c8:	ldr	r0, [r8]
   111cc:	mov	r6, r5
   111d0:	mov	r7, r1
   111d4:	mov	fp, r2
   111d8:	mov	sl, r3
   111dc:	str	r0, [sp, #28]
   111e0:	bl	10ae8 <setutxent@plt>
   111e4:	str	r5, [sp, #12]
   111e8:	bl	10c68 <getutxent@plt>
   111ec:	subs	r4, r0, #0
   111f0:	beq	11298 <__snprintf_chk@plt+0x624>
   111f4:	ldrsh	r3, [r4]
   111f8:	cmp	r3, #7
   111fc:	bne	111e8 <__snprintf_chk@plt+0x574>
   11200:	add	r1, r4, #44	; 0x2c
   11204:	mov	r0, r7
   11208:	bl	10a94 <strcmp@plt>
   1120c:	cmp	r0, #0
   11210:	bne	111e8 <__snprintf_chk@plt+0x574>
   11214:	add	r4, r4, #8
   11218:	str	r0, [sp]
   1121c:	mov	r1, r4
   11220:	add	r3, sp, #20
   11224:	add	r2, sp, #24
   11228:	ldr	r0, [sp, #8]
   1122c:	bl	11100 <__snprintf_chk@plt+0x48c>
   11230:	add	r6, r6, #1
   11234:	cmp	r0, #0
   11238:	bne	111e8 <__snprintf_chk@plt+0x574>
   1123c:	ldr	r3, [sp, #72]	; 0x48
   11240:	cmp	r3, #0
   11244:	beq	11254 <__snprintf_chk@plt+0x5e0>
   11248:	ldr	r3, [sp, #24]
   1124c:	cmp	r3, #0
   11250:	beq	111e8 <__snprintf_chk@plt+0x574>
   11254:	mov	r1, sl
   11258:	mov	r0, r4
   1125c:	bl	10a94 <strcmp@plt>
   11260:	cmp	r0, #0
   11264:	moveq	r5, #1
   11268:	beq	111e8 <__snprintf_chk@plt+0x574>
   1126c:	ldr	r3, [sp, #20]
   11270:	ldr	r2, [sp, #12]
   11274:	add	r9, r9, #1
   11278:	cmp	r3, r2
   1127c:	ble	111e8 <__snprintf_chk@plt+0x574>
   11280:	mov	r1, r4
   11284:	mov	r2, #4096	; 0x1000
   11288:	mov	r0, fp
   1128c:	str	r3, [sp, #12]
   11290:	bl	10b90 <strlcpy@plt>
   11294:	b	111e8 <__snprintf_chk@plt+0x574>
   11298:	bl	10bfc <endutxent@plt>
   1129c:	cmp	r6, #0
   112a0:	beq	112f8 <__snprintf_chk@plt+0x684>
   112a4:	cmp	r9, #0
   112a8:	bne	112dc <__snprintf_chk@plt+0x668>
   112ac:	cmp	r5, #0
   112b0:	beq	1130c <__snprintf_chk@plt+0x698>
   112b4:	mov	r1, sl
   112b8:	mov	r0, fp
   112bc:	mov	r2, #4096	; 0x1000
   112c0:	bl	10b90 <strlcpy@plt>
   112c4:	ldr	r2, [sp, #28]
   112c8:	ldr	r3, [r8]
   112cc:	cmp	r2, r3
   112d0:	bne	11308 <__snprintf_chk@plt+0x694>
   112d4:	add	sp, sp, #36	; 0x24
   112d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112dc:	cmp	r9, #1
   112e0:	beq	112c4 <__snprintf_chk@plt+0x650>
   112e4:	mov	r2, fp
   112e8:	mov	r1, r7
   112ec:	ldr	r0, [pc, #44]	; 11320 <__snprintf_chk@plt+0x6ac>
   112f0:	bl	10bb4 <warnx@plt>
   112f4:	b	112c4 <__snprintf_chk@plt+0x650>
   112f8:	mov	r2, r7
   112fc:	ldr	r1, [pc, #32]	; 11324 <__snprintf_chk@plt+0x6b0>
   11300:	mov	r0, #1
   11304:	bl	10c14 <errx@plt>
   11308:	bl	10af4 <__stack_chk_fail@plt>
   1130c:	mov	r2, r7
   11310:	ldr	r1, [pc, #16]	; 11328 <__snprintf_chk@plt+0x6b4>
   11314:	mov	r0, #1
   11318:	bl	10c14 <errx@plt>
   1131c:	andeq	r1, r2, r0, lsl #30
   11320:	andeq	r1, r1, r4, lsl #12
   11324:	ldrdeq	r1, [r1], -r4
   11328:	andeq	r1, r1, r8, ror #11
   1132c:	push	{r4, r5, r6, lr}
   11330:	ldr	r4, [r0]
   11334:	cmp	r4, #0
   11338:	popeq	{r4, r5, r6, pc}
   1133c:	mov	r5, r0
   11340:	ldr	r6, [pc, #116]	; 113bc <__snprintf_chk@plt+0x748>
   11344:	b	11384 <__snprintf_chk@plt+0x710>
   11348:	mov	r0, r4
   1134c:	bl	10b24 <iswprint@plt>
   11350:	cmp	r0, #0
   11354:	bne	11368 <__snprintf_chk@plt+0x6f4>
   11358:	mov	r0, r4
   1135c:	bl	10b9c <iswspace@plt>
   11360:	cmp	r0, #0
   11364:	beq	113a8 <__snprintf_chk@plt+0x734>
   11368:	mov	r0, r4
   1136c:	bl	10b30 <putwchar@plt>
   11370:	cmn	r0, #1
   11374:	beq	1139c <__snprintf_chk@plt+0x728>
   11378:	ldr	r4, [r5, #4]!
   1137c:	cmp	r4, #0
   11380:	popeq	{r4, r5, r6, pc}
   11384:	cmp	r4, #10
   11388:	bne	11348 <__snprintf_chk@plt+0x6d4>
   1138c:	mov	r0, #13
   11390:	bl	10b30 <putwchar@plt>
   11394:	cmn	r0, #1
   11398:	bne	11368 <__snprintf_chk@plt+0x6f4>
   1139c:	mov	r1, #0
   113a0:	mov	r0, #1
   113a4:	bl	10b18 <err@plt>
   113a8:	mov	r2, r4
   113ac:	mov	r1, r6
   113b0:	mov	r0, #1
   113b4:	bl	10c2c <__wprintf_chk@plt>
   113b8:	b	11378 <__snprintf_chk@plt+0x704>
   113bc:	andeq	r1, r1, r4, lsl #14
   113c0:	push	{r4, r5, r6, r7, lr}
   113c4:	sub	sp, sp, #6208	; 0x1840
   113c8:	sub	sp, sp, #28
   113cc:	ldr	lr, [pc, #308]	; 11508 <__snprintf_chk@plt+0x894>
   113d0:	ldr	r5, [pc, #308]	; 1150c <__snprintf_chk@plt+0x898>
   113d4:	ldr	r0, [pc, #308]	; 11510 <__snprintf_chk@plt+0x89c>
   113d8:	str	lr, [sp]
   113dc:	add	lr, sp, #6208	; 0x1840
   113e0:	ldr	ip, [r5]
   113e4:	add	lr, lr, #20
   113e8:	strd	r0, [sp, #4]
   113ec:	mov	r7, r3
   113f0:	add	r0, sp, #2128	; 0x850
   113f4:	mov	r3, #4096	; 0x1000
   113f8:	mov	r1, r3
   113fc:	str	ip, [lr]
   11400:	mov	r6, r2
   11404:	add	r0, r0, #4
   11408:	mov	r2, #1
   1140c:	bl	10c74 <__snprintf_chk@plt>
   11410:	ldr	r3, [pc, #252]	; 11514 <__snprintf_chk@plt+0x8a0>
   11414:	add	r0, sp, #2128	; 0x850
   11418:	add	r0, r0, #4
   1141c:	ldr	r1, [pc, #244]	; 11518 <__snprintf_chk@plt+0x8a4>
   11420:	ldr	r2, [r3]
   11424:	bl	10c44 <freopen@plt>
   11428:	cmp	r0, #0
   1142c:	beq	114f0 <__snprintf_chk@plt+0x87c>
   11430:	ldr	r1, [pc, #228]	; 1151c <__snprintf_chk@plt+0x8a8>
   11434:	mov	r0, #2
   11438:	bl	10ac4 <signal@plt>
   1143c:	ldr	r1, [pc, #216]	; 1151c <__snprintf_chk@plt+0x8a8>
   11440:	mov	r0, #1
   11444:	bl	10ac4 <signal@plt>
   11448:	add	r0, sp, #2064	; 0x810
   1144c:	mov	r1, #64	; 0x40
   11450:	add	r0, r0, #4
   11454:	bl	10b48 <gethostname@plt>
   11458:	ldr	r4, [pc, #192]	; 11520 <__snprintf_chk@plt+0x8ac>
   1145c:	cmp	r0, #0
   11460:	mov	r0, #0
   11464:	ldrlt	r3, [pc, #184]	; 11524 <__snprintf_chk@plt+0x8b0>
   11468:	strlt	r3, [sp, #2068]	; 0x814
   1146c:	bl	10ad0 <time@plt>
   11470:	str	r0, [sp, #16]
   11474:	add	r0, sp, #16
   11478:	bl	10adc <ctime@plt>
   1147c:	mov	r1, #0
   11480:	add	r3, sp, #2064	; 0x810
   11484:	add	r3, r3, #4
   11488:	mov	r2, r7
   1148c:	strb	r1, [r0, #16]
   11490:	add	r0, r0, #11
   11494:	str	r0, [sp, #4]
   11498:	str	r6, [sp]
   1149c:	ldr	r1, [pc, #132]	; 11528 <__snprintf_chk@plt+0x8b4>
   114a0:	mov	r0, #1
   114a4:	bl	10bd8 <__printf_chk@plt>
   114a8:	b	114b4 <__snprintf_chk@plt+0x840>
   114ac:	add	r0, sp, #20
   114b0:	bl	1132c <__snprintf_chk@plt+0x6b8>
   114b4:	ldr	r2, [r4]
   114b8:	mov	r1, #512	; 0x200
   114bc:	add	r0, sp, #20
   114c0:	bl	10b00 <fgetws@plt>
   114c4:	cmp	r0, #0
   114c8:	bne	114ac <__snprintf_chk@plt+0x838>
   114cc:	add	r3, sp, #6208	; 0x1840
   114d0:	add	r3, r3, #20
   114d4:	ldr	r2, [r3]
   114d8:	ldr	r3, [r5]
   114dc:	cmp	r2, r3
   114e0:	bne	11504 <__snprintf_chk@plt+0x890>
   114e4:	add	sp, sp, #6208	; 0x1840
   114e8:	add	sp, sp, #28
   114ec:	pop	{r4, r5, r6, r7, pc}
   114f0:	add	r2, sp, #2128	; 0x850
   114f4:	add	r2, r2, #4
   114f8:	ldr	r1, [pc, #44]	; 1152c <__snprintf_chk@plt+0x8b8>
   114fc:	mov	r0, #1
   11500:	bl	10b18 <err@plt>
   11504:	bl	10af4 <__stack_chk_fail@plt>
   11508:	andeq	r1, r1, ip, asr #11
   1150c:	andeq	r1, r2, r0, lsl #30
   11510:	andeq	r1, r1, r4, asr #11
   11514:	ldrdeq	r2, [r2], -r4
   11518:	andeq	r1, r1, r4, lsr r6
   1151c:	andeq	r1, r1, r8, asr r0
   11520:	ldrdeq	r2, [r2], -r0
   11524:	eorseq	r3, pc, pc, lsr pc	; <UNPREDICTABLE>
   11528:	andeq	r1, r1, r8, lsr r6
   1152c:	andeq	r1, r1, r0, lsl #14
   11530:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11534:	mov	r7, r0
   11538:	ldr	r6, [pc, #72]	; 11588 <__snprintf_chk@plt+0x914>
   1153c:	ldr	r5, [pc, #72]	; 1158c <__snprintf_chk@plt+0x918>
   11540:	add	r6, pc, r6
   11544:	add	r5, pc, r5
   11548:	sub	r6, r6, r5
   1154c:	mov	r8, r1
   11550:	mov	r9, r2
   11554:	bl	10a74 <strcmp@plt-0x20>
   11558:	asrs	r6, r6, #2
   1155c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11560:	mov	r4, #0
   11564:	add	r4, r4, #1
   11568:	ldr	r3, [r5], #4
   1156c:	mov	r2, r9
   11570:	mov	r1, r8
   11574:	mov	r0, r7
   11578:	blx	r3
   1157c:	cmp	r6, r4
   11580:	bne	11564 <__snprintf_chk@plt+0x8f0>
   11584:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11588:			; <UNDEFINED> instruction: 0x000109b4
   1158c:	andeq	r0, r1, ip, lsr #19
   11590:	bx	lr

Disassembly of section .fini:

00011594 <.fini>:
   11594:	push	{r3, lr}
   11598:	pop	{r3, pc}
