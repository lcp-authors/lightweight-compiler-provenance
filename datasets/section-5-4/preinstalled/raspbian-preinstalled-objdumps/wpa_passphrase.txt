
raspbian-preinstalled/wpa_passphrase:     file format elf32-littlearm


Disassembly of section .init:

000126c8 <.init>:
   126c8:	push	{r3, lr}
   126cc:	bl	1321c <BN_free@plt+0x240>
   126d0:	pop	{r3, pc}

Disassembly of section .plt:

000126d4 <BN_div@plt-0x14>:
   126d4:	push	{lr}		; (str lr, [sp, #-4]!)
   126d8:	ldr	lr, [pc, #4]	; 126e4 <BN_div@plt-0x4>
   126dc:	add	lr, pc, lr
   126e0:	ldr	pc, [lr, #8]!
   126e4:	andeq	r9, r1, r8, lsl #12

000126e8 <BN_div@plt>:
   126e8:	add	ip, pc, #0, 12
   126ec:	add	ip, ip, #102400	; 0x19000
   126f0:	ldr	pc, [ip, #1544]!	; 0x608

000126f4 <open@plt>:
   126f4:	add	ip, pc, #0, 12
   126f8:	add	ip, ip, #102400	; 0x19000
   126fc:	ldr	pc, [ip, #1536]!	; 0x600

00012700 <HMAC_CTX_new@plt>:
   12700:	add	ip, pc, #0, 12
   12704:	add	ip, ip, #102400	; 0x19000
   12708:	ldr	pc, [ip, #1528]!	; 0x5f8

0001270c <EVP_DigestInit_ex@plt>:
   1270c:	add	ip, pc, #0, 12
   12710:	add	ip, ip, #102400	; 0x19000
   12714:	ldr	pc, [ip, #1520]!	; 0x5f0

00012718 <qsort@plt>:
   12718:	add	ip, pc, #0, 12
   1271c:	add	ip, ip, #102400	; 0x19000
   12720:	ldr	pc, [ip, #1512]!	; 0x5e8

00012724 <daemon@plt>:
   12724:	add	ip, pc, #0, 12
   12728:	add	ip, ip, #102400	; 0x19000
   1272c:	ldr	pc, [ip, #1504]!	; 0x5e0

00012730 <strerror@plt>:
   12730:	add	ip, pc, #0, 12
   12734:	add	ip, ip, #102400	; 0x19000
   12738:	ldr	pc, [ip, #1496]!	; 0x5d8

0001273c <fileno@plt>:
   1273c:	add	ip, pc, #0, 12
   12740:	add	ip, ip, #102400	; 0x19000
   12744:	ldr	pc, [ip, #1488]!	; 0x5d0

00012748 <unsetenv@plt>:
   12748:	add	ip, pc, #0, 12
   1274c:	add	ip, ip, #102400	; 0x19000
   12750:	ldr	pc, [ip, #1480]!	; 0x5c8

00012754 <EC_KEY_free@plt>:
   12754:	add	ip, pc, #0, 12
   12758:	add	ip, ip, #102400	; 0x19000
   1275c:	ldr	pc, [ip, #1472]!	; 0x5c0

00012760 <abort@plt>:
   12760:	add	ip, pc, #0, 12
   12764:	add	ip, ip, #102400	; 0x19000
   12768:	ldr	pc, [ip, #1464]!	; 0x5b8

0001276c <EVP_aes_192_ecb@plt>:
   1276c:	add	ip, pc, #0, 12
   12770:	add	ip, ip, #102400	; 0x19000
   12774:	ldr	pc, [ip, #1456]!	; 0x5b0

00012778 <BN_set_flags@plt>:
   12778:	add	ip, pc, #0, 12
   1277c:	add	ip, ip, #102400	; 0x19000
   12780:	ldr	pc, [ip, #1448]!	; 0x5a8

00012784 <random@plt>:
   12784:	add	ip, pc, #0, 12
   12788:	add	ip, ip, #102400	; 0x19000
   1278c:	ldr	pc, [ip, #1440]!	; 0x5a0

00012790 <ERR_get_error@plt>:
   12790:	add	ip, pc, #0, 12
   12794:	add	ip, ip, #102400	; 0x19000
   12798:	ldr	pc, [ip, #1432]!	; 0x598

0001279c <EVP_CipherInit_ex@plt>:
   1279c:	add	ip, pc, #0, 12
   127a0:	add	ip, ip, #102400	; 0x19000
   127a4:	ldr	pc, [ip, #1424]!	; 0x590

000127a8 <BN_bn2binpad@plt>:
   127a8:	add	ip, pc, #0, 12
   127ac:	add	ip, ip, #102400	; 0x19000
   127b0:	ldr	pc, [ip, #1416]!	; 0x588

000127b4 <localtime@plt>:
   127b4:	add	ip, pc, #0, 12
   127b8:	add	ip, ip, #102400	; 0x19000
   127bc:	ldr	pc, [ip, #1408]!	; 0x580

000127c0 <BN_mod_mul@plt>:
   127c0:	add	ip, pc, #0, 12
   127c4:	add	ip, ip, #102400	; 0x19000
   127c8:	ldr	pc, [ip, #1400]!	; 0x578

000127cc <memcmp@plt>:
   127cc:	add	ip, pc, #0, 12
   127d0:	add	ip, ip, #102400	; 0x19000
   127d4:	ldr	pc, [ip, #1392]!	; 0x570

000127d8 <BN_is_odd@plt>:
   127d8:	add	ip, pc, #0, 12
   127dc:	add	ip, ip, #102400	; 0x19000
   127e0:	ldr	pc, [ip, #1384]!	; 0x568

000127e4 <clock_gettime@plt>:
   127e4:	add	ip, pc, #0, 12
   127e8:	add	ip, ip, #102400	; 0x19000
   127ec:	ldr	pc, [ip, #1376]!	; 0x560

000127f0 <__libc_start_main@plt>:
   127f0:	add	ip, pc, #0, 12
   127f4:	add	ip, ip, #102400	; 0x19000
   127f8:	ldr	pc, [ip, #1368]!	; 0x558

000127fc <BN_CTX_free@plt>:
   127fc:	add	ip, pc, #0, 12
   12800:	add	ip, ip, #102400	; 0x19000
   12804:	ldr	pc, [ip, #1360]!	; 0x550

00012808 <EVP_PKEY_get1_EC_KEY@plt>:
   12808:	add	ip, pc, #0, 12
   1280c:	add	ip, ip, #102400	; 0x19000
   12810:	ldr	pc, [ip, #1352]!	; 0x548

00012814 <BN_mod_inverse@plt>:
   12814:	add	ip, pc, #0, 12
   12818:	add	ip, ip, #102400	; 0x19000
   1281c:	ldr	pc, [ip, #1344]!	; 0x540

00012820 <BN_is_zero@plt>:
   12820:	add	ip, pc, #0, 12
   12824:	add	ip, ip, #102400	; 0x19000
   12828:	ldr	pc, [ip, #1336]!	; 0x538

0001282c <BN_mod_exp_mont_consttime@plt>:
   1282c:	add	ip, pc, #0, 12
   12830:	add	ip, ip, #102400	; 0x19000
   12834:	ldr	pc, [ip, #1328]!	; 0x530

00012838 <EVP_sha384@plt>:
   12838:	add	ip, pc, #0, 12
   1283c:	add	ip, ip, #102400	; 0x19000
   12840:	ldr	pc, [ip, #1320]!	; 0x528

00012844 <__gmon_start__@plt>:
   12844:	add	ip, pc, #0, 12
   12848:	add	ip, ip, #102400	; 0x19000
   1284c:	ldr	pc, [ip, #1312]!	; 0x520

00012850 <DH_get0_key@plt>:
   12850:	add	ip, pc, #0, 12
   12854:	add	ip, ip, #102400	; 0x19000
   12858:	ldr	pc, [ip, #1304]!	; 0x518

0001285c <DH_size@plt>:
   1285c:	add	ip, pc, #0, 12
   12860:	add	ip, ip, #102400	; 0x19000
   12864:	ldr	pc, [ip, #1296]!	; 0x510

00012868 <EC_POINT_is_at_infinity@plt>:
   12868:	add	ip, pc, #0, 12
   1286c:	add	ip, ip, #102400	; 0x19000
   12870:	ldr	pc, [ip, #1288]!	; 0x508

00012874 <EC_GROUP_new_by_curve_name@plt>:
   12874:	add	ip, pc, #0, 12
   12878:	add	ip, ip, #102400	; 0x19000
   1287c:	ldr	pc, [ip, #1280]!	; 0x500

00012880 <EVP_PKEY_CTX_new@plt>:
   12880:	add	ip, pc, #0, 12
   12884:	add	ip, ip, #102400	; 0x19000
   12888:	ldr	pc, [ip, #1272]!	; 0x4f8

0001288c <DH_compute_key@plt>:
   1288c:	add	ip, pc, #0, 12
   12890:	add	ip, ip, #102400	; 0x19000
   12894:	ldr	pc, [ip, #1264]!	; 0x4f0

00012898 <fclose@plt>:
   12898:	add	ip, pc, #0, 12
   1289c:	add	ip, ip, #102400	; 0x19000
   128a0:	ldr	pc, [ip, #1256]!	; 0x4e8

000128a4 <fgets@plt>:
   128a4:	add	ip, pc, #0, 12
   128a8:	add	ip, ip, #102400	; 0x19000
   128ac:	ldr	pc, [ip, #1248]!	; 0x4e0

000128b0 <EVP_PKEY_new@plt>:
   128b0:	add	ip, pc, #0, 12
   128b4:	add	ip, ip, #102400	; 0x19000
   128b8:	ldr	pc, [ip, #1240]!	; 0x4d8

000128bc <__printf_chk@plt>:
   128bc:	add	ip, pc, #0, 12
   128c0:	add	ip, ip, #102400	; 0x19000
   128c4:	ldr	pc, [ip, #1232]!	; 0x4d0

000128c8 <strchr@plt>:
   128c8:	add	ip, pc, #0, 12
   128cc:	add	ip, ip, #102400	; 0x19000
   128d0:	ldr	pc, [ip, #1224]!	; 0x4c8

000128d4 <putchar@plt>:
   128d4:	add	ip, pc, #0, 12
   128d8:	add	ip, ip, #102400	; 0x19000
   128dc:	ldr	pc, [ip, #1216]!	; 0x4c0

000128e0 <strcasecmp@plt>:
   128e0:	add	ip, pc, #0, 12
   128e4:	add	ip, ip, #102400	; 0x19000
   128e8:	ldr	pc, [ip, #1208]!	; 0x4b8

000128ec <HMAC_Update@plt>:
   128ec:	add	ip, pc, #0, 12
   128f0:	add	ip, ip, #102400	; 0x19000
   128f4:	ldr	pc, [ip, #1200]!	; 0x4b0

000128f8 <EC_KEY_get0_public_key@plt>:
   128f8:	add	ip, pc, #0, 12
   128fc:	add	ip, ip, #102400	; 0x19000
   12900:	ldr	pc, [ip, #1192]!	; 0x4a8

00012904 <calloc@plt>:
   12904:	add	ip, pc, #0, 12
   12908:	add	ip, ip, #102400	; 0x19000
   1290c:	ldr	pc, [ip, #1184]!	; 0x4a0

00012910 <DES_set_key@plt>:
   12910:	add	ip, pc, #0, 12
   12914:	add	ip, ip, #102400	; 0x19000
   12918:	ldr	pc, [ip, #1176]!	; 0x498

0001291c <BN_set_word@plt>:
   1291c:	add	ip, pc, #0, 12
   12920:	add	ip, ip, #102400	; 0x19000
   12924:	ldr	pc, [ip, #1168]!	; 0x490

00012928 <fopen@plt>:
   12928:	add	ip, pc, #0, 12
   1292c:	add	ip, ip, #102400	; 0x19000
   12930:	ldr	pc, [ip, #1160]!	; 0x488

00012934 <BN_bin2bn@plt>:
   12934:	add	ip, pc, #0, 12
   12938:	add	ip, ip, #102400	; 0x19000
   1293c:	ldr	pc, [ip, #1152]!	; 0x480

00012940 <mktime@plt>:
   12940:	add	ip, pc, #0, 12
   12944:	add	ip, ip, #102400	; 0x19000
   12948:	ldr	pc, [ip, #1144]!	; 0x478

0001294c <memset@plt>:
   1294c:	add	ip, pc, #0, 12
   12950:	add	ip, ip, #102400	; 0x19000
   12954:	ldr	pc, [ip, #1136]!	; 0x470

00012958 <EVP_DecryptInit_ex@plt>:
   12958:	add	ip, pc, #0, 12
   1295c:	add	ip, ip, #102400	; 0x19000
   12960:	ldr	pc, [ip, #1128]!	; 0x468

00012964 <EC_GROUP_free@plt>:
   12964:	add	ip, pc, #0, 12
   12968:	add	ip, ip, #102400	; 0x19000
   1296c:	ldr	pc, [ip, #1120]!	; 0x460

00012970 <EC_POINT_new@plt>:
   12970:	add	ip, pc, #0, 12
   12974:	add	ip, ip, #102400	; 0x19000
   12978:	ldr	pc, [ip, #1112]!	; 0x458

0001297c <EC_KEY_set_public_key@plt>:
   1297c:	add	ip, pc, #0, 12
   12980:	add	ip, ip, #102400	; 0x19000
   12984:	ldr	pc, [ip, #1104]!	; 0x450

00012988 <strrchr@plt>:
   12988:	add	ip, pc, #0, 12
   1298c:	add	ip, ip, #102400	; 0x19000
   12990:	ldr	pc, [ip, #1096]!	; 0x448

00012994 <EVP_md5@plt>:
   12994:	add	ip, pc, #0, 12
   12998:	add	ip, ip, #102400	; 0x19000
   1299c:	ldr	pc, [ip, #1088]!	; 0x440

000129a0 <perror@plt>:
   129a0:	add	ip, pc, #0, 12
   129a4:	add	ip, ip, #102400	; 0x19000
   129a8:	ldr	pc, [ip, #1080]!	; 0x438

000129ac <BN_num_bits@plt>:
   129ac:	add	ip, pc, #0, 12
   129b0:	add	ip, ip, #102400	; 0x19000
   129b4:	ldr	pc, [ip, #1072]!	; 0x430

000129b8 <EC_POINT_set_compressed_coordinates_GFp@plt>:
   129b8:	add	ip, pc, #0, 12
   129bc:	add	ip, ip, #102400	; 0x19000
   129c0:	ldr	pc, [ip, #1064]!	; 0x428

000129c4 <EC_POINT_invert@plt>:
   129c4:	add	ip, pc, #0, 12
   129c8:	add	ip, ip, #102400	; 0x19000
   129cc:	ldr	pc, [ip, #1056]!	; 0x420

000129d0 <EVP_DigestUpdate@plt>:
   129d0:	add	ip, pc, #0, 12
   129d4:	add	ip, ip, #102400	; 0x19000
   129d8:	ldr	pc, [ip, #1048]!	; 0x418

000129dc <DH_new@plt>:
   129dc:	add	ip, pc, #0, 12
   129e0:	add	ip, ip, #102400	; 0x19000
   129e4:	ldr	pc, [ip, #1040]!	; 0x410

000129e8 <BN_is_word@plt>:
   129e8:	add	ip, pc, #0, 12
   129ec:	add	ip, ip, #102400	; 0x19000
   129f0:	ldr	pc, [ip, #1032]!	; 0x408

000129f4 <PKCS5_PBKDF2_HMAC_SHA1@plt>:
   129f4:	add	ip, pc, #0, 12
   129f8:	add	ip, ip, #102400	; 0x19000
   129fc:	ldr	pc, [ip, #1024]!	; 0x400

00012a00 <usleep@plt>:
   12a00:	add	ip, pc, #0, 12
   12a04:	add	ip, ip, #102400	; 0x19000
   12a08:	ldr	pc, [ip, #1016]!	; 0x3f8

00012a0c <BN_sub@plt>:
   12a0c:	add	ip, pc, #0, 12
   12a10:	add	ip, ip, #102400	; 0x19000
   12a14:	ldr	pc, [ip, #1008]!	; 0x3f0

00012a18 <BN_rand_range@plt>:
   12a18:	add	ip, pc, #0, 12
   12a1c:	add	ip, ip, #102400	; 0x19000
   12a20:	ldr	pc, [ip, #1000]!	; 0x3e8

00012a24 <BN_cmp@plt>:
   12a24:	add	ip, pc, #0, 12
   12a28:	add	ip, ip, #102400	; 0x19000
   12a2c:	ldr	pc, [ip, #992]!	; 0x3e0

00012a30 <free@plt>:
   12a30:	add	ip, pc, #0, 12
   12a34:	add	ip, ip, #102400	; 0x19000
   12a38:	ldr	pc, [ip, #984]!	; 0x3d8

00012a3c <read@plt>:
   12a3c:	add	ip, pc, #0, 12
   12a40:	add	ip, ip, #102400	; 0x19000
   12a44:	ldr	pc, [ip, #976]!	; 0x3d0

00012a48 <access@plt>:
   12a48:	add	ip, pc, #0, 12
   12a4c:	add	ip, ip, #102400	; 0x19000
   12a50:	ldr	pc, [ip, #968]!	; 0x3c8

00012a54 <openlog@plt>:
   12a54:	add	ip, pc, #0, 12
   12a58:	add	ip, ip, #102400	; 0x19000
   12a5c:	ldr	pc, [ip, #960]!	; 0x3c0

00012a60 <gettimeofday@plt>:
   12a60:	add	ip, pc, #0, 12
   12a64:	add	ip, ip, #102400	; 0x19000
   12a68:	ldr	pc, [ip, #952]!	; 0x3b8

00012a6c <fseek@plt>:
   12a6c:	add	ip, pc, #0, 12
   12a70:	add	ip, ip, #102400	; 0x19000
   12a74:	ldr	pc, [ip, #944]!	; 0x3b0

00012a78 <EVP_PKEY_keygen_init@plt>:
   12a78:	add	ip, pc, #0, 12
   12a7c:	add	ip, ip, #102400	; 0x19000
   12a80:	ldr	pc, [ip, #936]!	; 0x3a8

00012a84 <EVP_PKEY_set1_EC_KEY@plt>:
   12a84:	add	ip, pc, #0, 12
   12a88:	add	ip, ip, #102400	; 0x19000
   12a8c:	ldr	pc, [ip, #928]!	; 0x3a0

00012a90 <DH_set0_pqg@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #102400	; 0x19000
   12a98:	ldr	pc, [ip, #920]!	; 0x398

00012a9c <BN_clear_free@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #102400	; 0x19000
   12aa4:	ldr	pc, [ip, #912]!	; 0x390

00012aa8 <EVP_DigestFinal@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #102400	; 0x19000
   12ab0:	ldr	pc, [ip, #904]!	; 0x388

00012ab4 <EVP_aes_256_ecb@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #102400	; 0x19000
   12abc:	ldr	pc, [ip, #896]!	; 0x380

00012ac0 <EC_POINT_get_affine_coordinates_GFp@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #102400	; 0x19000
   12ac8:	ldr	pc, [ip, #888]!	; 0x378

00012acc <EC_POINT_clear_free@plt>:
   12acc:	add	ip, pc, #0, 12
   12ad0:	add	ip, ip, #102400	; 0x19000
   12ad4:	ldr	pc, [ip, #880]!	; 0x370

00012ad8 <DES_ecb_encrypt@plt>:
   12ad8:	add	ip, pc, #0, 12
   12adc:	add	ip, ip, #102400	; 0x19000
   12ae0:	ldr	pc, [ip, #872]!	; 0x368

00012ae4 <fflush@plt>:
   12ae4:	add	ip, pc, #0, 12
   12ae8:	add	ip, ip, #102400	; 0x19000
   12aec:	ldr	pc, [ip, #864]!	; 0x360

00012af0 <EVP_PKEY_derive@plt>:
   12af0:	add	ip, pc, #0, 12
   12af4:	add	ip, ip, #102400	; 0x19000
   12af8:	ldr	pc, [ip, #856]!	; 0x358

00012afc <AES_unwrap_key@plt>:
   12afc:	add	ip, pc, #0, 12
   12b00:	add	ip, ip, #102400	; 0x19000
   12b04:	ldr	pc, [ip, #848]!	; 0x350

00012b08 <EC_GROUP_get_curve_GFp@plt>:
   12b08:	add	ip, pc, #0, 12
   12b0c:	add	ip, ip, #102400	; 0x19000
   12b10:	ldr	pc, [ip, #840]!	; 0x348

00012b14 <AES_set_encrypt_key@plt>:
   12b14:	add	ip, pc, #0, 12
   12b18:	add	ip, ip, #102400	; 0x19000
   12b1c:	ldr	pc, [ip, #832]!	; 0x340

00012b20 <EVP_PKEY_derive_set_peer@plt>:
   12b20:	add	ip, pc, #0, 12
   12b24:	add	ip, ip, #102400	; 0x19000
   12b28:	ldr	pc, [ip, #824]!	; 0x338

00012b2c <BN_add@plt>:
   12b2c:	add	ip, pc, #0, 12
   12b30:	add	ip, ip, #102400	; 0x19000
   12b34:	ldr	pc, [ip, #816]!	; 0x330

00012b38 <strlen@plt>:
   12b38:	add	ip, pc, #0, 12
   12b3c:	add	ip, ip, #102400	; 0x19000
   12b40:	ldr	pc, [ip, #808]!	; 0x328

00012b44 <EVP_des_cbc@plt>:
   12b44:	add	ip, pc, #0, 12
   12b48:	add	ip, ip, #102400	; 0x19000
   12b4c:	ldr	pc, [ip, #800]!	; 0x320

00012b50 <unlink@plt>:
   12b50:	add	ip, pc, #0, 12
   12b54:	add	ip, ip, #102400	; 0x19000
   12b58:	ldr	pc, [ip, #792]!	; 0x318

00012b5c <EC_POINT_cmp@plt>:
   12b5c:	add	ip, pc, #0, 12
   12b60:	add	ip, ip, #102400	; 0x19000
   12b64:	ldr	pc, [ip, #784]!	; 0x310

00012b68 <EC_POINT_set_affine_coordinates_GFp@plt>:
   12b68:	add	ip, pc, #0, 12
   12b6c:	add	ip, ip, #102400	; 0x19000
   12b70:	ldr	pc, [ip, #776]!	; 0x308

00012b74 <execv@plt>:
   12b74:	add	ip, pc, #0, 12
   12b78:	add	ip, ip, #102400	; 0x19000
   12b7c:	ldr	pc, [ip, #768]!	; 0x300

00012b80 <fdatasync@plt>:
   12b80:	add	ip, pc, #0, 12
   12b84:	add	ip, ip, #102400	; 0x19000
   12b88:	ldr	pc, [ip, #760]!	; 0x2f8

00012b8c <EC_KEY_new_by_curve_name@plt>:
   12b8c:	add	ip, pc, #0, 12
   12b90:	add	ip, ip, #102400	; 0x19000
   12b94:	ldr	pc, [ip, #752]!	; 0x2f0

00012b98 <memcpy@plt>:
   12b98:	add	ip, pc, #0, 12
   12b9c:	add	ip, ip, #102400	; 0x19000
   12ba0:	ldr	pc, [ip, #744]!	; 0x2e8

00012ba4 <BN_mod_sqr@plt>:
   12ba4:	add	ip, pc, #0, 12
   12ba8:	add	ip, ip, #102400	; 0x19000
   12bac:	ldr	pc, [ip, #736]!	; 0x2e0

00012bb0 <DH_generate_key@plt>:
   12bb0:	add	ip, pc, #0, 12
   12bb4:	add	ip, ip, #102400	; 0x19000
   12bb8:	ldr	pc, [ip, #728]!	; 0x2d8

00012bbc <EVP_MD_CTX_new@plt>:
   12bbc:	add	ip, pc, #0, 12
   12bc0:	add	ip, ip, #102400	; 0x19000
   12bc4:	ldr	pc, [ip, #720]!	; 0x2d0

00012bc8 <EVP_DecryptFinal_ex@plt>:
   12bc8:	add	ip, pc, #0, 12
   12bcc:	add	ip, ip, #102400	; 0x19000
   12bd0:	ldr	pc, [ip, #712]!	; 0x2c8

00012bd4 <ftell@plt>:
   12bd4:	add	ip, pc, #0, 12
   12bd8:	add	ip, ip, #102400	; 0x19000
   12bdc:	ldr	pc, [ip, #704]!	; 0x2c0

00012be0 <BN_value_one@plt>:
   12be0:	add	ip, pc, #0, 12
   12be4:	add	ip, ip, #102400	; 0x19000
   12be8:	ldr	pc, [ip, #696]!	; 0x2b8

00012bec <strtol@plt>:
   12bec:	add	ip, pc, #0, 12
   12bf0:	add	ip, ip, #102400	; 0x19000
   12bf4:	ldr	pc, [ip, #688]!	; 0x2b0

00012bf8 <waitpid@plt>:
   12bf8:	add	ip, pc, #0, 12
   12bfc:	add	ip, ip, #102400	; 0x19000
   12c00:	ldr	pc, [ip, #680]!	; 0x2a8

00012c04 <__vsnprintf_chk@plt>:
   12c04:	add	ip, pc, #0, 12
   12c08:	add	ip, ip, #102400	; 0x19000
   12c0c:	ldr	pc, [ip, #672]!	; 0x2a0

00012c10 <BN_new@plt>:
   12c10:	add	ip, pc, #0, 12
   12c14:	add	ip, ip, #102400	; 0x19000
   12c18:	ldr	pc, [ip, #664]!	; 0x298

00012c1c <__vfprintf_chk@plt>:
   12c1c:	add	ip, pc, #0, 12
   12c20:	add	ip, ip, #102400	; 0x19000
   12c24:	ldr	pc, [ip, #656]!	; 0x290

00012c28 <BN_is_one@plt>:
   12c28:	add	ip, pc, #0, 12
   12c2c:	add	ip, ip, #102400	; 0x19000
   12c30:	ldr	pc, [ip, #648]!	; 0x288

00012c34 <EVP_sha1@plt>:
   12c34:	add	ip, pc, #0, 12
   12c38:	add	ip, ip, #102400	; 0x19000
   12c3c:	ldr	pc, [ip, #640]!	; 0x280

00012c40 <EVP_PKEY_CTX_free@plt>:
   12c40:	add	ip, pc, #0, 12
   12c44:	add	ip, ip, #102400	; 0x19000
   12c48:	ldr	pc, [ip, #632]!	; 0x278

00012c4c <ERR_error_string@plt>:
   12c4c:	add	ip, pc, #0, 12
   12c50:	add	ip, ip, #102400	; 0x19000
   12c54:	ldr	pc, [ip, #624]!	; 0x270

00012c58 <EVP_CIPHER_CTX_set_key_length@plt>:
   12c58:	add	ip, pc, #0, 12
   12c5c:	add	ip, ip, #102400	; 0x19000
   12c60:	ldr	pc, [ip, #616]!	; 0x268

00012c64 <__snprintf_chk@plt>:
   12c64:	add	ip, pc, #0, 12
   12c68:	add	ip, ip, #102400	; 0x19000
   12c6c:	ldr	pc, [ip, #608]!	; 0x260

00012c70 <BN_get_rfc3526_prime_1536@plt>:
   12c70:	add	ip, pc, #0, 12
   12c74:	add	ip, ip, #102400	; 0x19000
   12c78:	ldr	pc, [ip, #600]!	; 0x258

00012c7c <fdopen@plt>:
   12c7c:	add	ip, pc, #0, 12
   12c80:	add	ip, ip, #102400	; 0x19000
   12c84:	ldr	pc, [ip, #592]!	; 0x250

00012c88 <EVP_CIPHER_CTX_new@plt>:
   12c88:	add	ip, pc, #0, 12
   12c8c:	add	ip, ip, #102400	; 0x19000
   12c90:	ldr	pc, [ip, #584]!	; 0x248

00012c94 <BN_CTX_new@plt>:
   12c94:	add	ip, pc, #0, 12
   12c98:	add	ip, ip, #102400	; 0x19000
   12c9c:	ldr	pc, [ip, #576]!	; 0x240

00012ca0 <__syslog_chk@plt>:
   12ca0:	add	ip, pc, #0, 12
   12ca4:	add	ip, ip, #102400	; 0x19000
   12ca8:	ldr	pc, [ip, #568]!	; 0x238

00012cac <close@plt>:
   12cac:	add	ip, pc, #0, 12
   12cb0:	add	ip, ip, #102400	; 0x19000
   12cb4:	ldr	pc, [ip, #560]!	; 0x230

00012cb8 <HMAC_CTX_free@plt>:
   12cb8:	add	ip, pc, #0, 12
   12cbc:	add	ip, ip, #102400	; 0x19000
   12cc0:	ldr	pc, [ip, #552]!	; 0x228

00012cc4 <EC_GROUP_get_order@plt>:
   12cc4:	add	ip, pc, #0, 12
   12cc8:	add	ip, ip, #102400	; 0x19000
   12ccc:	ldr	pc, [ip, #544]!	; 0x220

00012cd0 <fwrite@plt>:
   12cd0:	add	ip, pc, #0, 12
   12cd4:	add	ip, ip, #102400	; 0x19000
   12cd8:	ldr	pc, [ip, #536]!	; 0x218

00012cdc <EC_POINT_mul@plt>:
   12cdc:	add	ip, pc, #0, 12
   12ce0:	add	ip, ip, #102400	; 0x19000
   12ce4:	ldr	pc, [ip, #528]!	; 0x210

00012ce8 <EVP_PKEY_keygen@plt>:
   12ce8:	add	ip, pc, #0, 12
   12cec:	add	ip, ip, #102400	; 0x19000
   12cf0:	ldr	pc, [ip, #520]!	; 0x208

00012cf4 <EVP_aes_256_cbc@plt>:
   12cf4:	add	ip, pc, #0, 12
   12cf8:	add	ip, ip, #102400	; 0x19000
   12cfc:	ldr	pc, [ip, #512]!	; 0x200

00012d00 <EVP_des_ede3_cbc@plt>:
   12d00:	add	ip, pc, #0, 12
   12d04:	add	ip, ip, #102400	; 0x19000
   12d08:	ldr	pc, [ip, #504]!	; 0x1f8

00012d0c <setvbuf@plt>:
   12d0c:	add	ip, pc, #0, 12
   12d10:	add	ip, ip, #102400	; 0x19000
   12d14:	ldr	pc, [ip, #496]!	; 0x1f0

00012d18 <__ctype_b_loc@plt>:
   12d18:	add	ip, pc, #0, 12
   12d1c:	add	ip, ip, #102400	; 0x19000
   12d20:	ldr	pc, [ip, #488]!	; 0x1e8

00012d24 <BN_rshift@plt>:
   12d24:	add	ip, pc, #0, 12
   12d28:	add	ip, ip, #102400	; 0x19000
   12d2c:	ldr	pc, [ip, #480]!	; 0x1e0

00012d30 <__vsyslog_chk@plt>:
   12d30:	add	ip, pc, #0, 12
   12d34:	add	ip, ip, #102400	; 0x19000
   12d38:	ldr	pc, [ip, #472]!	; 0x1d8

00012d3c <strdup@plt>:
   12d3c:	add	ip, pc, #0, 12
   12d40:	add	ip, ip, #102400	; 0x19000
   12d44:	ldr	pc, [ip, #464]!	; 0x1d0

00012d48 <malloc@plt>:
   12d48:	add	ip, pc, #0, 12
   12d4c:	add	ip, ip, #102400	; 0x19000
   12d50:	ldr	pc, [ip, #456]!	; 0x1c8

00012d54 <EVP_aes_128_cbc@plt>:
   12d54:	add	ip, pc, #0, 12
   12d58:	add	ip, ip, #102400	; 0x19000
   12d5c:	ldr	pc, [ip, #448]!	; 0x1c0

00012d60 <__stack_chk_fail@plt>:
   12d60:	add	ip, pc, #0, 12
   12d64:	add	ip, ip, #102400	; 0x19000
   12d68:	ldr	pc, [ip, #440]!	; 0x1b8

00012d6c <__fprintf_chk@plt>:
   12d6c:	add	ip, pc, #0, 12
   12d70:	add	ip, ip, #102400	; 0x19000
   12d74:	ldr	pc, [ip, #432]!	; 0x1b0

00012d78 <fputc@plt>:
   12d78:	add	ip, pc, #0, 12
   12d7c:	add	ip, ip, #102400	; 0x19000
   12d80:	ldr	pc, [ip, #424]!	; 0x1a8

00012d84 <EVP_rc4@plt>:
   12d84:	add	ip, pc, #0, 12
   12d88:	add	ip, ip, #102400	; 0x19000
   12d8c:	ldr	pc, [ip, #416]!	; 0x1a0

00012d90 <getcwd@plt>:
   12d90:	add	ip, pc, #0, 12
   12d94:	add	ip, ip, #102400	; 0x19000
   12d98:	ldr	pc, [ip, #408]!	; 0x198

00012d9c <DH_set0_key@plt>:
   12d9c:	add	ip, pc, #0, 12
   12da0:	add	ip, ip, #102400	; 0x19000
   12da4:	ldr	pc, [ip, #400]!	; 0x190

00012da8 <strtok_r@plt>:
   12da8:	add	ip, pc, #0, 12
   12dac:	add	ip, ip, #102400	; 0x19000
   12db0:	ldr	pc, [ip, #392]!	; 0x188

00012db4 <DH_free@plt>:
   12db4:	add	ip, pc, #0, 12
   12db8:	add	ip, ip, #102400	; 0x19000
   12dbc:	ldr	pc, [ip, #384]!	; 0x180

00012dc0 <HMAC_Init_ex@plt>:
   12dc0:	add	ip, pc, #0, 12
   12dc4:	add	ip, ip, #102400	; 0x19000
   12dc8:	ldr	pc, [ip, #376]!	; 0x178

00012dcc <sleep@plt>:
   12dcc:	add	ip, pc, #0, 12
   12dd0:	add	ip, ip, #102400	; 0x19000
   12dd4:	ldr	pc, [ip, #368]!	; 0x170

00012dd8 <memmove@plt>:
   12dd8:	add	ip, pc, #0, 12
   12ddc:	add	ip, ip, #102400	; 0x19000
   12de0:	ldr	pc, [ip, #360]!	; 0x168

00012de4 <OPENSSL_cleanse@plt>:
   12de4:	add	ip, pc, #0, 12
   12de8:	add	ip, ip, #102400	; 0x19000
   12dec:	ldr	pc, [ip, #352]!	; 0x160

00012df0 <EVP_PKEY_derive_init@plt>:
   12df0:	add	ip, pc, #0, 12
   12df4:	add	ip, ip, #102400	; 0x19000
   12df8:	ldr	pc, [ip, #344]!	; 0x158

00012dfc <BN_mod_add_quick@plt>:
   12dfc:	add	ip, pc, #0, 12
   12e00:	add	ip, ip, #102400	; 0x19000
   12e04:	ldr	pc, [ip, #336]!	; 0x150

00012e08 <EVP_CIPHER_CTX_free@plt>:
   12e08:	add	ip, pc, #0, 12
   12e0c:	add	ip, ip, #102400	; 0x19000
   12e10:	ldr	pc, [ip, #328]!	; 0x148

00012e14 <puts@plt>:
   12e14:	add	ip, pc, #0, 12
   12e18:	add	ip, ip, #102400	; 0x19000
   12e1c:	ldr	pc, [ip, #320]!	; 0x140

00012e20 <EVP_MD_CTX_free@plt>:
   12e20:	add	ip, pc, #0, 12
   12e24:	add	ip, ip, #102400	; 0x19000
   12e28:	ldr	pc, [ip, #312]!	; 0x138

00012e2c <EVP_aes_192_cbc@plt>:
   12e2c:	add	ip, pc, #0, 12
   12e30:	add	ip, ip, #102400	; 0x19000
   12e34:	ldr	pc, [ip, #304]!	; 0x130

00012e38 <getpid@plt>:
   12e38:	add	ip, pc, #0, 12
   12e3c:	add	ip, ip, #102400	; 0x19000
   12e40:	ldr	pc, [ip, #296]!	; 0x128

00012e44 <EC_POINT_free@plt>:
   12e44:	add	ip, pc, #0, 12
   12e48:	add	ip, ip, #102400	; 0x19000
   12e4c:	ldr	pc, [ip, #288]!	; 0x120

00012e50 <RAND_bytes@plt>:
   12e50:	add	ip, pc, #0, 12
   12e54:	add	ip, ip, #102400	; 0x19000
   12e58:	ldr	pc, [ip, #280]!	; 0x118

00012e5c <AES_wrap_key@plt>:
   12e5c:	add	ip, pc, #0, 12
   12e60:	add	ip, ip, #102400	; 0x19000
   12e64:	ldr	pc, [ip, #272]!	; 0x110

00012e68 <closelog@plt>:
   12e68:	add	ip, pc, #0, 12
   12e6c:	add	ip, ip, #102400	; 0x19000
   12e70:	ldr	pc, [ip, #264]!	; 0x108

00012e74 <EVP_PKEY_free@plt>:
   12e74:	add	ip, pc, #0, 12
   12e78:	add	ip, ip, #102400	; 0x19000
   12e7c:	ldr	pc, [ip, #256]!	; 0x100

00012e80 <fork@plt>:
   12e80:	add	ip, pc, #0, 12
   12e84:	add	ip, ip, #102400	; 0x19000
   12e88:	ldr	pc, [ip, #248]!	; 0xf8

00012e8c <HMAC_Final@plt>:
   12e8c:	add	ip, pc, #0, 12
   12e90:	add	ip, ip, #102400	; 0x19000
   12e94:	ldr	pc, [ip, #240]!	; 0xf0

00012e98 <EVP_CIPHER_CTX_set_padding@plt>:
   12e98:	add	ip, pc, #0, 12
   12e9c:	add	ip, ip, #102400	; 0x19000
   12ea0:	ldr	pc, [ip, #232]!	; 0xe8

00012ea4 <BN_bn2bin@plt>:
   12ea4:	add	ip, pc, #0, 12
   12ea8:	add	ip, ip, #102400	; 0x19000
   12eac:	ldr	pc, [ip, #224]!	; 0xe0

00012eb0 <EVP_md4@plt>:
   12eb0:	add	ip, pc, #0, 12
   12eb4:	add	ip, ip, #102400	; 0x19000
   12eb8:	ldr	pc, [ip, #216]!	; 0xd8

00012ebc <BN_rshift1@plt>:
   12ebc:	add	ip, pc, #0, 12
   12ec0:	add	ip, ip, #102400	; 0x19000
   12ec4:	ldr	pc, [ip, #208]!	; 0xd0

00012ec8 <EVP_sha512@plt>:
   12ec8:	add	ip, pc, #0, 12
   12ecc:	add	ip, ip, #102400	; 0x19000
   12ed0:	ldr	pc, [ip, #200]!	; 0xc8

00012ed4 <EVP_CipherUpdate@plt>:
   12ed4:	add	ip, pc, #0, 12
   12ed8:	add	ip, ip, #102400	; 0x19000
   12edc:	ldr	pc, [ip, #192]!	; 0xc0

00012ee0 <EVP_sha256@plt>:
   12ee0:	add	ip, pc, #0, 12
   12ee4:	add	ip, ip, #102400	; 0x19000
   12ee8:	ldr	pc, [ip, #184]!	; 0xb8

00012eec <fread@plt>:
   12eec:	add	ip, pc, #0, 12
   12ef0:	add	ip, ip, #102400	; 0x19000
   12ef4:	ldr	pc, [ip, #176]!	; 0xb0

00012ef8 <fcntl@plt>:
   12ef8:	add	ip, pc, #0, 12
   12efc:	add	ip, ip, #102400	; 0x19000
   12f00:	ldr	pc, [ip, #168]!	; 0xa8

00012f04 <strncmp@plt>:
   12f04:	add	ip, pc, #0, 12
   12f08:	add	ip, ip, #102400	; 0x19000
   12f0c:	ldr	pc, [ip, #160]!	; 0xa0

00012f10 <EC_POINT_is_on_curve@plt>:
   12f10:	add	ip, pc, #0, 12
   12f14:	add	ip, ip, #102400	; 0x19000
   12f18:	ldr	pc, [ip, #152]!	; 0x98

00012f1c <gmtime@plt>:
   12f1c:	add	ip, pc, #0, 12
   12f20:	add	ip, ip, #102400	; 0x19000
   12f24:	ldr	pc, [ip, #144]!	; 0x90

00012f28 <EC_KEY_set_asn1_flag@plt>:
   12f28:	add	ip, pc, #0, 12
   12f2c:	add	ip, ip, #102400	; 0x19000
   12f30:	ldr	pc, [ip, #136]!	; 0x88

00012f34 <realloc@plt>:
   12f34:	add	ip, pc, #0, 12
   12f38:	add	ip, ip, #102400	; 0x19000
   12f3c:	ldr	pc, [ip, #128]!	; 0x80

00012f40 <EVP_EncryptFinal_ex@plt>:
   12f40:	add	ip, pc, #0, 12
   12f44:	add	ip, ip, #102400	; 0x19000
   12f48:	ldr	pc, [ip, #120]!	; 0x78

00012f4c <EVP_aes_128_ecb@plt>:
   12f4c:	add	ip, pc, #0, 12
   12f50:	add	ip, ip, #102400	; 0x19000
   12f54:	ldr	pc, [ip, #112]!	; 0x70

00012f58 <EC_POINT_add@plt>:
   12f58:	add	ip, pc, #0, 12
   12f5c:	add	ip, ip, #102400	; 0x19000
   12f60:	ldr	pc, [ip, #104]!	; 0x68

00012f64 <EVP_DecryptUpdate@plt>:
   12f64:	add	ip, pc, #0, 12
   12f68:	add	ip, ip, #102400	; 0x19000
   12f6c:	ldr	pc, [ip, #96]!	; 0x60

00012f70 <AES_set_decrypt_key@plt>:
   12f70:	add	ip, pc, #0, 12
   12f74:	add	ip, ip, #102400	; 0x19000
   12f78:	ldr	pc, [ip, #88]!	; 0x58

00012f7c <EC_GROUP_get_cofactor@plt>:
   12f7c:	add	ip, pc, #0, 12
   12f80:	add	ip, ip, #102400	; 0x19000
   12f84:	ldr	pc, [ip, #80]!	; 0x50

00012f88 <setenv@plt>:
   12f88:	add	ip, pc, #0, 12
   12f8c:	add	ip, ip, #102400	; 0x19000
   12f90:	ldr	pc, [ip, #72]!	; 0x48

00012f94 <strcmp@plt>:
   12f94:	add	ip, pc, #0, 12
   12f98:	add	ip, ip, #102400	; 0x19000
   12f9c:	ldr	pc, [ip, #64]!	; 0x40

00012fa0 <exit@plt>:
   12fa0:	add	ip, pc, #0, 12
   12fa4:	add	ip, ip, #102400	; 0x19000
   12fa8:	ldr	pc, [ip, #56]!	; 0x38

00012fac <__errno_location@plt>:
   12fac:	add	ip, pc, #0, 12
   12fb0:	add	ip, ip, #102400	; 0x19000
   12fb4:	ldr	pc, [ip, #48]!	; 0x30

00012fb8 <EVP_rc2_ecb@plt>:
   12fb8:	add	ip, pc, #0, 12
   12fbc:	add	ip, ip, #102400	; 0x19000
   12fc0:	ldr	pc, [ip, #40]!	; 0x28

00012fc4 <EVP_EncryptInit_ex@plt>:
   12fc4:	add	ip, pc, #0, 12
   12fc8:	add	ip, ip, #102400	; 0x19000
   12fcc:	ldr	pc, [ip, #32]!

00012fd0 <EVP_EncryptUpdate@plt>:
   12fd0:	add	ip, pc, #0, 12
   12fd4:	add	ip, ip, #102400	; 0x19000
   12fd8:	ldr	pc, [ip, #24]!

00012fdc <BN_free@plt>:
   12fdc:	add	ip, pc, #0, 12
   12fe0:	add	ip, ip, #102400	; 0x19000
   12fe4:	ldr	pc, [ip, #16]!

Disassembly of section .text:

00012fe8 <.text>:
   12fe8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12fec:	sub	sp, sp, #112	; 0x70
   12ff0:	ldr	r8, [pc, #436]	; 131ac <BN_free@plt+0x1d0>
   12ff4:	cmp	r0, #1
   12ff8:	ldr	r3, [r8]
   12ffc:	str	r3, [sp, #108]	; 0x6c
   13000:	ble	13178 <BN_free@plt+0x19c>
   13004:	cmp	r0, #2
   13008:	ldr	r9, [r1, #4]
   1300c:	ldrne	r7, [r1, #8]
   13010:	beq	130fc <BN_free@plt+0x120>
   13014:	mov	r0, r7
   13018:	bl	12b38 <strlen@plt>
   1301c:	sub	r3, r0, #8
   13020:	cmp	r3, #55	; 0x37
   13024:	bhi	130ec <BN_free@plt+0x110>
   13028:	mov	r1, r0
   1302c:	mov	r0, r7
   13030:	bl	13f3c <BN_free@plt+0xf60>
   13034:	subs	sl, r0, #0
   13038:	bne	13168 <BN_free@plt+0x18c>
   1303c:	mov	r0, r9
   13040:	bl	12b38 <strlen@plt>
   13044:	mov	r2, #32
   13048:	add	r3, sp, #12
   1304c:	mov	r1, r9
   13050:	str	r2, [sp, #4]
   13054:	str	r3, [sp]
   13058:	mov	r3, #4096	; 0x1000
   1305c:	ldr	r6, [pc, #332]	; 131b0 <BN_free@plt+0x1d4>
   13060:	add	r4, sp, #11
   13064:	add	r5, sp, #43	; 0x2b
   13068:	mov	r2, r0
   1306c:	mov	r0, r7
   13070:	bl	18764 <BN_free@plt+0x5788>
   13074:	ldr	r0, [pc, #312]	; 131b4 <BN_free@plt+0x1d8>
   13078:	bl	12e14 <puts@plt>
   1307c:	mov	r2, r9
   13080:	ldr	r1, [pc, #304]	; 131b8 <BN_free@plt+0x1dc>
   13084:	mov	r0, #1
   13088:	bl	128bc <__printf_chk@plt>
   1308c:	ldr	r1, [pc, #296]	; 131bc <BN_free@plt+0x1e0>
   13090:	mov	r2, r7
   13094:	mov	r0, #1
   13098:	bl	128bc <__printf_chk@plt>
   1309c:	ldr	r1, [pc, #284]	; 131c0 <BN_free@plt+0x1e4>
   130a0:	mov	r0, #1
   130a4:	bl	128bc <__printf_chk@plt>
   130a8:	ldrb	r2, [r4, #1]!
   130ac:	mov	r1, r6
   130b0:	mov	r0, #1
   130b4:	bl	128bc <__printf_chk@plt>
   130b8:	cmp	r4, r5
   130bc:	bne	130a8 <BN_free@plt+0xcc>
   130c0:	mov	r0, #10
   130c4:	bl	128d4 <putchar@plt>
   130c8:	ldr	r0, [pc, #244]	; 131c4 <BN_free@plt+0x1e8>
   130cc:	bl	12e14 <puts@plt>
   130d0:	ldr	r2, [sp, #108]	; 0x6c
   130d4:	ldr	r3, [r8]
   130d8:	mov	r0, sl
   130dc:	cmp	r2, r3
   130e0:	bne	131a8 <BN_free@plt+0x1cc>
   130e4:	add	sp, sp, #112	; 0x70
   130e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   130ec:	ldr	r0, [pc, #212]	; 131c8 <BN_free@plt+0x1ec>
   130f0:	bl	12e14 <puts@plt>
   130f4:	mov	sl, #1
   130f8:	b	130d0 <BN_free@plt+0xf4>
   130fc:	ldr	r0, [pc, #200]	; 131cc <BN_free@plt+0x1f0>
   13100:	bl	12e14 <puts@plt>
   13104:	ldr	r3, [pc, #196]	; 131d0 <BN_free@plt+0x1f4>
   13108:	add	r0, sp, #44	; 0x2c
   1310c:	mov	r1, #64	; 0x40
   13110:	ldr	r2, [r3]
   13114:	bl	128a4 <fgets@plt>
   13118:	cmp	r0, #0
   1311c:	beq	13198 <BN_free@plt+0x1bc>
   13120:	ldrb	r3, [sp, #44]	; 0x2c
   13124:	mov	r2, #0
   13128:	strb	r2, [sp, #107]	; 0x6b
   1312c:	cmp	r3, r2
   13130:	beq	13160 <BN_free@plt+0x184>
   13134:	cmp	r3, #10
   13138:	cmpne	r3, #13
   1313c:	add	r2, sp, #44	; 0x2c
   13140:	bne	13154 <BN_free@plt+0x178>
   13144:	b	13188 <BN_free@plt+0x1ac>
   13148:	cmp	r3, #10
   1314c:	cmpne	r3, #13
   13150:	beq	13188 <BN_free@plt+0x1ac>
   13154:	ldrb	r3, [r2, #1]!
   13158:	cmp	r3, #0
   1315c:	bne	13148 <BN_free@plt+0x16c>
   13160:	add	r7, sp, #44	; 0x2c
   13164:	b	13014 <BN_free@plt+0x38>
   13168:	ldr	r0, [pc, #100]	; 131d4 <BN_free@plt+0x1f8>
   1316c:	bl	12e14 <puts@plt>
   13170:	mov	sl, #1
   13174:	b	130d0 <BN_free@plt+0xf4>
   13178:	ldr	r0, [pc, #88]	; 131d8 <BN_free@plt+0x1fc>
   1317c:	bl	12e14 <puts@plt>
   13180:	mov	sl, #1
   13184:	b	130d0 <BN_free@plt+0xf4>
   13188:	mov	r3, #0
   1318c:	add	r7, sp, #44	; 0x2c
   13190:	strb	r3, [r2]
   13194:	b	13014 <BN_free@plt+0x38>
   13198:	ldr	r0, [pc, #60]	; 131dc <BN_free@plt+0x200>
   1319c:	bl	12e14 <puts@plt>
   131a0:	mov	sl, #1
   131a4:	b	130d0 <BN_free@plt+0xf4>
   131a8:	bl	12d60 <__stack_chk_fail@plt>
   131ac:	ldrdeq	fp, [r2], -r8
   131b0:	andeq	sl, r1, r8, lsr #7
   131b4:	andeq	sl, r1, ip, ror r3
   131b8:	andeq	sl, r1, r8, lsl #7
   131bc:	muleq	r1, r4, r3
   131c0:	andeq	sl, r1, r0, lsr #7
   131c4:			; <UNDEFINED> instruction: 0x0001a3b0
   131c8:	andeq	sl, r1, r8, lsr r3
   131cc:	strdeq	sl, [r1], -ip
   131d0:	andeq	ip, r2, r0, lsl r0
   131d4:	andeq	sl, r1, ip, asr r3
   131d8:	muleq	r1, r8, r2
   131dc:	andeq	sl, r1, ip, lsl r3
   131e0:	mov	fp, #0
   131e4:	mov	lr, #0
   131e8:	pop	{r1}		; (ldr r1, [sp], #4)
   131ec:	mov	r2, sp
   131f0:	push	{r2}		; (str r2, [sp, #-4]!)
   131f4:	push	{r0}		; (str r0, [sp, #-4]!)
   131f8:	ldr	ip, [pc, #16]	; 13210 <BN_free@plt+0x234>
   131fc:	push	{ip}		; (str ip, [sp, #-4]!)
   13200:	ldr	r0, [pc, #12]	; 13214 <BN_free@plt+0x238>
   13204:	ldr	r3, [pc, #12]	; 13218 <BN_free@plt+0x23c>
   13208:	bl	127f0 <__libc_start_main@plt>
   1320c:	bl	12760 <abort@plt>
   13210:	andeq	sl, r1, r8, lsl #5
   13214:	andeq	r2, r1, r8, ror #31
   13218:	andeq	sl, r1, r8, lsr #4
   1321c:	ldr	r3, [pc, #20]	; 13238 <BN_free@plt+0x25c>
   13220:	ldr	r2, [pc, #20]	; 1323c <BN_free@plt+0x260>
   13224:	add	r3, pc, r3
   13228:	ldr	r2, [r3, r2]
   1322c:	cmp	r2, #0
   13230:	bxeq	lr
   13234:	b	12844 <__gmon_start__@plt>
   13238:	andeq	r8, r1, r0, asr #21
   1323c:	andeq	r0, r0, ip, lsl #6
   13240:	ldr	r0, [pc, #24]	; 13260 <BN_free@plt+0x284>
   13244:	ldr	r3, [pc, #24]	; 13264 <BN_free@plt+0x288>
   13248:	cmp	r3, r0
   1324c:	bxeq	lr
   13250:	ldr	r3, [pc, #16]	; 13268 <BN_free@plt+0x28c>
   13254:	cmp	r3, #0
   13258:	bxeq	lr
   1325c:	bx	r3
   13260:	andeq	ip, r2, r0, lsl r0
   13264:	andeq	ip, r2, r0, lsl r0
   13268:	andeq	r0, r0, r0
   1326c:	ldr	r0, [pc, #36]	; 13298 <BN_free@plt+0x2bc>
   13270:	ldr	r1, [pc, #36]	; 1329c <BN_free@plt+0x2c0>
   13274:	sub	r1, r1, r0
   13278:	asr	r1, r1, #2
   1327c:	add	r1, r1, r1, lsr #31
   13280:	asrs	r1, r1, #1
   13284:	bxeq	lr
   13288:	ldr	r3, [pc, #16]	; 132a0 <BN_free@plt+0x2c4>
   1328c:	cmp	r3, #0
   13290:	bxeq	lr
   13294:	bx	r3
   13298:	andeq	ip, r2, r0, lsl r0
   1329c:	andeq	ip, r2, r0, lsl r0
   132a0:	andeq	r0, r0, r0
   132a4:	push	{r4, lr}
   132a8:	ldr	r4, [pc, #24]	; 132c8 <BN_free@plt+0x2ec>
   132ac:	ldrb	r3, [r4]
   132b0:	cmp	r3, #0
   132b4:	popne	{r4, pc}
   132b8:	bl	13240 <BN_free@plt+0x264>
   132bc:	mov	r3, #1
   132c0:	strb	r3, [r4]
   132c4:	pop	{r4, pc}
   132c8:	andeq	ip, r2, r8, lsl r0
   132cc:	b	1326c <BN_free@plt+0x290>
   132d0:	ldr	r0, [r0]
   132d4:	ldr	r3, [r1]
   132d8:	cmp	r0, #0
   132dc:	beq	132f0 <BN_free@plt+0x314>
   132e0:	cmp	r3, #0
   132e4:	beq	132f8 <BN_free@plt+0x31c>
   132e8:	sub	r0, r0, r3
   132ec:	bx	lr
   132f0:	mov	r0, #1
   132f4:	bx	lr
   132f8:	mvn	r0, #0
   132fc:	bx	lr
   13300:	sub	r3, r0, #48	; 0x30
   13304:	uxtb	r2, r3
   13308:	cmp	r2, #9
   1330c:	bls	13338 <BN_free@plt+0x35c>
   13310:	sub	r3, r0, #97	; 0x61
   13314:	cmp	r3, #5
   13318:	bls	13330 <BN_free@plt+0x354>
   1331c:	sub	r3, r0, #65	; 0x41
   13320:	cmp	r3, #5
   13324:	subls	r0, r0, #55	; 0x37
   13328:	mvnhi	r0, #0
   1332c:	bx	lr
   13330:	sub	r0, r0, #87	; 0x57
   13334:	bx	lr
   13338:	mov	r0, r3
   1333c:	bx	lr
   13340:	push	{r4, lr}
   13344:	mov	r1, r0
   13348:	ldrb	r0, [r0]
   1334c:	bl	13300 <BN_free@plt+0x324>
   13350:	subs	r4, r0, #0
   13354:	blt	13370 <BN_free@plt+0x394>
   13358:	ldrb	r0, [r1, #1]
   1335c:	bl	13300 <BN_free@plt+0x324>
   13360:	cmp	r0, #0
   13364:	blt	13370 <BN_free@plt+0x394>
   13368:	orr	r0, r0, r4, lsl #4
   1336c:	pop	{r4, pc}
   13370:	mvn	r0, #0
   13374:	pop	{r4, pc}
   13378:	push	{r4, r5, r6, r7, r8, lr}
   1337c:	mov	r7, r0
   13380:	sub	r5, r1, #1
   13384:	add	r8, r0, #18
   13388:	add	r6, r0, #15
   1338c:	mov	r4, r0
   13390:	mov	r0, r4
   13394:	bl	13340 <BN_free@plt+0x364>
   13398:	cmp	r0, #0
   1339c:	blt	133d8 <BN_free@plt+0x3fc>
   133a0:	cmp	r4, r6
   133a4:	strb	r0, [r5, #1]!
   133a8:	add	r4, r4, #3
   133ac:	beq	133cc <BN_free@plt+0x3f0>
   133b0:	ldrb	r3, [r4, #-1]
   133b4:	cmp	r3, #58	; 0x3a
   133b8:	bne	133d8 <BN_free@plt+0x3fc>
   133bc:	cmp	r4, r8
   133c0:	bne	13390 <BN_free@plt+0x3b4>
   133c4:	mov	r0, r4
   133c8:	pop	{r4, r5, r6, r7, r8, pc}
   133cc:	add	r4, r7, #17
   133d0:	mov	r0, r4
   133d4:	pop	{r4, r5, r6, r7, r8, pc}
   133d8:	mov	r4, #0
   133dc:	mov	r0, r4
   133e0:	pop	{r4, r5, r6, r7, r8, pc}
   133e4:	push	{r4, lr}
   133e8:	bl	13378 <BN_free@plt+0x39c>
   133ec:	clz	r0, r0
   133f0:	lsr	r0, r0, #5
   133f4:	rsb	r0, r0, #0
   133f8:	pop	{r4, pc}
   133fc:	push	{r4, r5, r6, r7, r8, lr}
   13400:	mov	r5, r2
   13404:	mov	r7, r3
   13408:	bl	13378 <BN_free@plt+0x39c>
   1340c:	subs	r6, r0, #0
   13410:	beq	13484 <BN_free@plt+0x4a8>
   13414:	ldrb	r8, [r6]
   13418:	cmp	r8, #0
   1341c:	beq	13470 <BN_free@plt+0x494>
   13420:	bl	12d18 <__ctype_b_loc@plt>
   13424:	lsl	r3, r8, #1
   13428:	ldr	r2, [r0]
   1342c:	ldrh	r3, [r2, r3]
   13430:	tst	r3, #8192	; 0x2000
   13434:	bne	13470 <BN_free@plt+0x494>
   13438:	cmp	r7, #0
   1343c:	sub	r4, r8, #47	; 0x2f
   13440:	clz	r4, r4
   13444:	lsr	r4, r4, #5
   13448:	moveq	r4, #0
   1344c:	cmp	r4, #0
   13450:	beq	13484 <BN_free@plt+0x4a8>
   13454:	mov	r1, r5
   13458:	add	r0, r6, #1
   1345c:	bl	13378 <BN_free@plt+0x39c>
   13460:	clz	r0, r0
   13464:	lsr	r0, r0, #5
   13468:	rsb	r0, r0, #0
   1346c:	pop	{r4, r5, r6, r7, r8, pc}
   13470:	mvn	r3, #0
   13474:	str	r3, [r5]
   13478:	strh	r3, [r5, #4]
   1347c:	mov	r0, #0
   13480:	pop	{r4, r5, r6, r7, r8, pc}
   13484:	mvn	r0, #0
   13488:	pop	{r4, r5, r6, r7, r8, pc}
   1348c:	push	{r4, r5, r6, lr}
   13490:	add	r4, r0, #2
   13494:	add	r6, r1, #6
   13498:	ldrb	r0, [r4, #-2]
   1349c:	bl	13300 <BN_free@plt+0x324>
   134a0:	subs	r5, r0, #0
   134a4:	blt	134d4 <BN_free@plt+0x4f8>
   134a8:	ldrb	r0, [r4, #-1]
   134ac:	bl	13300 <BN_free@plt+0x324>
   134b0:	add	r4, r4, #2
   134b4:	cmp	r0, #0
   134b8:	orr	r0, r0, r5, lsl #4
   134bc:	blt	134d4 <BN_free@plt+0x4f8>
   134c0:	strb	r0, [r1], #1
   134c4:	cmp	r1, r6
   134c8:	bne	13498 <BN_free@plt+0x4bc>
   134cc:	mov	r0, #0
   134d0:	pop	{r4, r5, r6, pc}
   134d4:	mvn	r0, #0
   134d8:	pop	{r4, r5, r6, pc}
   134dc:	push	{r4, r5, r6, r7, r8, lr}
   134e0:	mov	r5, r0
   134e4:	add	r6, r1, #6
   134e8:	mov	r4, r0
   134ec:	ldrb	r0, [r4]
   134f0:	sub	r3, r0, #45	; 0x2d
   134f4:	cmp	r0, #58	; 0x3a
   134f8:	cmpne	r3, #1
   134fc:	bhi	13514 <BN_free@plt+0x538>
   13500:	ldrb	r0, [r4, #1]!
   13504:	sub	r3, r0, #45	; 0x2d
   13508:	cmp	r0, #58	; 0x3a
   1350c:	cmpne	r3, #1
   13510:	bls	13500 <BN_free@plt+0x524>
   13514:	bl	13300 <BN_free@plt+0x324>
   13518:	subs	r7, r0, #0
   1351c:	blt	1354c <BN_free@plt+0x570>
   13520:	ldrb	r0, [r4, #1]
   13524:	bl	13300 <BN_free@plt+0x324>
   13528:	add	r4, r4, #2
   1352c:	cmp	r0, #0
   13530:	blt	1354c <BN_free@plt+0x570>
   13534:	orr	r0, r0, r7, lsl #4
   13538:	strb	r0, [r1], #1
   1353c:	cmp	r1, r6
   13540:	bne	134ec <BN_free@plt+0x510>
   13544:	sub	r0, r4, r5
   13548:	pop	{r4, r5, r6, r7, r8, pc}
   1354c:	mvn	r0, #0
   13550:	pop	{r4, r5, r6, r7, r8, pc}
   13554:	cmp	r2, #0
   13558:	beq	135a0 <BN_free@plt+0x5c4>
   1355c:	push	{r4, r5, r6, lr}
   13560:	mov	r4, r0
   13564:	mov	r5, r1
   13568:	add	r6, r1, r2
   1356c:	b	1357c <BN_free@plt+0x5a0>
   13570:	strb	r0, [r5], #1
   13574:	cmp	r6, r5
   13578:	beq	13598 <BN_free@plt+0x5bc>
   1357c:	mov	r0, r4
   13580:	bl	13340 <BN_free@plt+0x364>
   13584:	add	r4, r4, #2
   13588:	cmp	r0, #0
   1358c:	bge	13570 <BN_free@plt+0x594>
   13590:	mvn	r0, #0
   13594:	pop	{r4, r5, r6, pc}
   13598:	mov	r0, #0
   1359c:	pop	{r4, r5, r6, pc}
   135a0:	mov	r0, #0
   135a4:	bx	lr
   135a8:	push	{r4, r5, lr}
   135ac:	mov	r4, r1
   135b0:	sub	sp, sp, #60	; 0x3c
   135b4:	sub	r1, r3, #1
   135b8:	add	lr, r3, #5
   135bc:	ldrb	ip, [r1, #1]!
   135c0:	cmp	ip, #255	; 0xff
   135c4:	bne	1362c <BN_free@plt+0x650>
   135c8:	cmp	r1, lr
   135cc:	bne	135bc <BN_free@plt+0x5e0>
   135d0:	ldrb	r1, [r2, #5]
   135d4:	ldrb	r3, [r2, #3]
   135d8:	ldrb	lr, [r2, #4]
   135dc:	ldrb	ip, [r2, #2]
   135e0:	str	r1, [sp, #24]
   135e4:	ldrb	r1, [r2, #1]
   135e8:	ldrb	r2, [r2]
   135ec:	str	r3, [sp, #16]
   135f0:	ldr	r3, [pc, #192]	; 136b8 <BN_free@plt+0x6dc>
   135f4:	str	r1, [sp, #8]
   135f8:	str	r2, [sp, #4]
   135fc:	str	r3, [sp]
   13600:	str	lr, [sp, #20]
   13604:	str	ip, [sp, #12]
   13608:	mvn	r3, #0
   1360c:	mov	r2, #1
   13610:	mov	r1, r4
   13614:	bl	12c64 <__snprintf_chk@plt>
   13618:	mov	r0, #17
   1361c:	cmp	r4, r0
   13620:	mvnls	r0, #0
   13624:	add	sp, sp, #60	; 0x3c
   13628:	pop	{r4, r5, pc}
   1362c:	ldrb	r1, [r2, #5]
   13630:	ldrb	ip, [r2, #4]
   13634:	ldrb	lr, [r2, #3]
   13638:	str	r1, [sp, #24]
   1363c:	ldrb	r1, [r2, #2]
   13640:	str	ip, [sp, #20]
   13644:	ldrb	ip, [r2, #1]
   13648:	ldrb	r2, [r2]
   1364c:	str	lr, [sp, #16]
   13650:	str	r1, [sp, #12]
   13654:	ldrb	r1, [r3, #5]
   13658:	str	ip, [sp, #8]
   1365c:	ldrb	r5, [r3, #4]
   13660:	str	r2, [sp, #4]
   13664:	ldrb	lr, [r3, #3]
   13668:	ldrb	r2, [r3, #2]
   1366c:	str	r1, [sp, #48]	; 0x30
   13670:	ldrb	r1, [r3, #1]
   13674:	ldrb	ip, [r3]
   13678:	ldr	r3, [pc, #60]	; 136bc <BN_free@plt+0x6e0>
   1367c:	str	r2, [sp, #36]	; 0x24
   13680:	str	r3, [sp]
   13684:	str	r1, [sp, #32]
   13688:	mvn	r3, #0
   1368c:	mov	r2, #1
   13690:	mov	r1, r4
   13694:	str	r5, [sp, #44]	; 0x2c
   13698:	str	lr, [sp, #40]	; 0x28
   1369c:	str	ip, [sp, #28]
   136a0:	bl	12c64 <__snprintf_chk@plt>
   136a4:	mov	r0, #35	; 0x23
   136a8:	cmp	r4, r0
   136ac:	mvnls	r0, #0
   136b0:	add	sp, sp, #60	; 0x3c
   136b4:	pop	{r4, r5, pc}
   136b8:	strdeq	sl, [r1], -r0
   136bc:			; <UNDEFINED> instruction: 0x0001a3b4
   136c0:	subs	r1, r1, #1
   136c4:	bxmi	lr
   136c8:	ldrb	r3, [r0, r1]
   136cc:	add	r2, r0, r1
   136d0:	add	r3, r3, #1
   136d4:	uxtb	r3, r3
   136d8:	cmp	r3, #0
   136dc:	strb	r3, [r0, r1]
   136e0:	bxne	lr
   136e4:	mvn	r0, r0
   136e8:	cmn	r0, r2
   136ec:	bxmi	lr
   136f0:	ldrb	r3, [r2, #-1]!
   136f4:	add	r3, r3, #1
   136f8:	uxtb	r3, r3
   136fc:	cmp	r3, #0
   13700:	strb	r3, [r2]
   13704:	bxne	lr
   13708:	cmn	r0, r2
   1370c:	bpl	136f0 <BN_free@plt+0x714>
   13710:	bx	lr
   13714:	push	{r4, r5, lr}
   13718:	sub	sp, sp, #20
   1371c:	ldr	r5, [pc, #100]	; 13788 <BN_free@plt+0x7ac>
   13720:	mov	r4, r0
   13724:	add	r0, sp, #4
   13728:	ldr	r3, [r5]
   1372c:	str	r3, [sp, #12]
   13730:	bl	16840 <BN_free@plt+0x3864>
   13734:	ldmib	sp, {r0, r2}
   13738:	ldr	r1, [pc, #76]	; 1378c <BN_free@plt+0x7b0>
   1373c:	add	r3, r2, r2, lsl #5
   13740:	add	r1, r0, r1
   13744:	add	r3, r2, r3, lsl #1
   13748:	rev	r1, r1
   1374c:	add	r3, r2, r3, lsl #3
   13750:	lsr	r0, r2, #9
   13754:	rsb	r3, r2, r3, lsl #3
   13758:	str	r1, [r4]
   1375c:	add	r2, r0, r2, lsr #5
   13760:	ldr	r0, [sp, #12]
   13764:	ldr	r1, [r5]
   13768:	sub	r3, r3, r2
   1376c:	rev	r3, r3
   13770:	cmp	r0, r1
   13774:	str	r3, [r4, #4]
   13778:	bne	13784 <BN_free@plt+0x7a8>
   1377c:	add	sp, sp, #20
   13780:	pop	{r4, r5, pc}
   13784:	bl	12d60 <__stack_chk_fail@plt>
   13788:	ldrdeq	fp, [r2], -r8
   1378c:			; <UNDEFINED> instruction: 0x83aa7e80
   13790:	push	{r2, r3}
   13794:	push	{r4, r5, lr}
   13798:	sub	sp, sp, #20
   1379c:	ldr	r4, [pc, #100]	; 13808 <BN_free@plt+0x82c>
   137a0:	subs	r5, r1, #0
   137a4:	ldr	r2, [sp, #32]
   137a8:	ldr	r3, [r4]
   137ac:	str	r3, [sp, #12]
   137b0:	bne	137d8 <BN_free@plt+0x7fc>
   137b4:	mov	r0, #0
   137b8:	ldr	r2, [sp, #12]
   137bc:	ldr	r3, [r4]
   137c0:	cmp	r2, r3
   137c4:	bne	13804 <BN_free@plt+0x828>
   137c8:	add	sp, sp, #20
   137cc:	pop	{r4, r5, lr}
   137d0:	add	sp, sp, #8
   137d4:	bx	lr
   137d8:	add	ip, sp, #36	; 0x24
   137dc:	mvn	r3, #0
   137e0:	stm	sp, {r2, ip}
   137e4:	mov	r2, #1
   137e8:	str	ip, [sp, #8]
   137ec:	bl	12c04 <__vsnprintf_chk@plt>
   137f0:	cmp	r0, #0
   137f4:	blt	137b4 <BN_free@plt+0x7d8>
   137f8:	cmp	r0, r5
   137fc:	subcs	r0, r5, #1
   13800:	b	137b8 <BN_free@plt+0x7dc>
   13804:	bl	12d60 <__stack_chk_fail@plt>
   13808:	ldrdeq	fp, [r2], -r8
   1380c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13810:	sub	sp, sp, #20
   13814:	cmp	r1, #0
   13818:	ldrb	r8, [sp, #56]	; 0x38
   1381c:	moveq	r0, r1
   13820:	beq	13894 <BN_free@plt+0x8b8>
   13824:	cmp	r3, #0
   13828:	beq	138b0 <BN_free@plt+0x8d4>
   1382c:	mov	fp, r0
   13830:	add	r3, r2, r3
   13834:	ldr	sl, [pc, #128]	; 138bc <BN_free@plt+0x8e0>
   13838:	sub	r7, r3, #1
   1383c:	add	r9, fp, r1
   13840:	sub	r6, r2, #1
   13844:	mov	r5, fp
   13848:	b	13858 <BN_free@plt+0x87c>
   1384c:	cmp	r6, r7
   13850:	add	r5, r5, #3
   13854:	beq	1389c <BN_free@plt+0x8c0>
   13858:	ldrb	r3, [r6, #1]!
   1385c:	sub	r4, r9, r5
   13860:	str	r8, [sp, #8]
   13864:	str	r3, [sp, #4]
   13868:	str	sl, [sp]
   1386c:	mov	r1, r4
   13870:	mvn	r3, #0
   13874:	mov	r2, #1
   13878:	mov	r0, r5
   1387c:	bl	12c64 <__snprintf_chk@plt>
   13880:	cmp	r4, #3
   13884:	bhi	1384c <BN_free@plt+0x870>
   13888:	sub	r0, r5, fp
   1388c:	mov	r3, #0
   13890:	strb	r3, [r9, #-1]
   13894:	add	sp, sp, #20
   13898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1389c:	sub	r0, r5, fp
   138a0:	mov	r3, #0
   138a4:	strb	r3, [r5, #-1]
   138a8:	add	sp, sp, #20
   138ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138b0:	mov	r5, r0
   138b4:	mov	r0, r3
   138b8:	b	138a0 <BN_free@plt+0x8c4>
   138bc:	andeq	sl, r1, r0, lsl r4
   138c0:	cmp	r1, #0
   138c4:	beq	13944 <BN_free@plt+0x968>
   138c8:	cmp	r3, #0
   138cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   138d0:	add	r8, r0, r1
   138d4:	sub	sp, sp, #8
   138d8:	beq	13960 <BN_free@plt+0x984>
   138dc:	sub	r3, r3, #1
   138e0:	mov	r9, r0
   138e4:	ldr	sl, [pc, #124]	; 13968 <BN_free@plt+0x98c>
   138e8:	add	r7, r2, r3
   138ec:	sub	r5, r2, #1
   138f0:	mov	r4, r0
   138f4:	b	13904 <BN_free@plt+0x928>
   138f8:	cmp	r5, r7
   138fc:	add	r4, r4, #2
   13900:	beq	1394c <BN_free@plt+0x970>
   13904:	ldrb	r3, [r5, #1]!
   13908:	sub	r6, r8, r4
   1390c:	str	sl, [sp]
   13910:	str	r3, [sp, #4]
   13914:	mov	r1, r6
   13918:	mvn	r3, #0
   1391c:	mov	r2, #1
   13920:	mov	r0, r4
   13924:	bl	12c64 <__snprintf_chk@plt>
   13928:	cmp	r6, #2
   1392c:	bhi	138f8 <BN_free@plt+0x91c>
   13930:	mov	r3, #0
   13934:	sub	r0, r4, r9
   13938:	strb	r3, [r8, #-1]
   1393c:	add	sp, sp, #8
   13940:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13944:	mov	r0, r1
   13948:	bx	lr
   1394c:	sub	r0, r4, r9
   13950:	mov	r3, #0
   13954:	strb	r3, [r8, #-1]
   13958:	add	sp, sp, #8
   1395c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13960:	mov	r0, r3
   13964:	b	13950 <BN_free@plt+0x974>
   13968:	andeq	sl, r1, r8, lsr #7
   1396c:	cmp	r1, #0
   13970:	beq	139f0 <BN_free@plt+0xa14>
   13974:	cmp	r3, #0
   13978:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1397c:	add	r8, r0, r1
   13980:	sub	sp, sp, #8
   13984:	beq	13a0c <BN_free@plt+0xa30>
   13988:	sub	r3, r3, #1
   1398c:	mov	r9, r0
   13990:	ldr	sl, [pc, #124]	; 13a14 <BN_free@plt+0xa38>
   13994:	add	r7, r2, r3
   13998:	sub	r5, r2, #1
   1399c:	mov	r4, r0
   139a0:	b	139b0 <BN_free@plt+0x9d4>
   139a4:	cmp	r5, r7
   139a8:	add	r4, r4, #2
   139ac:	beq	139f8 <BN_free@plt+0xa1c>
   139b0:	ldrb	r3, [r5, #1]!
   139b4:	sub	r6, r8, r4
   139b8:	str	sl, [sp]
   139bc:	str	r3, [sp, #4]
   139c0:	mov	r1, r6
   139c4:	mvn	r3, #0
   139c8:	mov	r2, #1
   139cc:	mov	r0, r4
   139d0:	bl	12c64 <__snprintf_chk@plt>
   139d4:	cmp	r6, #2
   139d8:	bhi	139a4 <BN_free@plt+0x9c8>
   139dc:	mov	r3, #0
   139e0:	sub	r0, r4, r9
   139e4:	strb	r3, [r8, #-1]
   139e8:	add	sp, sp, #8
   139ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   139f0:	mov	r0, r1
   139f4:	bx	lr
   139f8:	sub	r0, r4, r9
   139fc:	mov	r3, #0
   13a00:	strb	r3, [r8, #-1]
   13a04:	add	sp, sp, #8
   13a08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a0c:	mov	r0, r3
   13a10:	b	139fc <BN_free@plt+0xa20>
   13a14:	andeq	sl, r1, r8, lsl r4
   13a18:	cmp	r3, #0
   13a1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a20:	add	r7, r0, r1
   13a24:	sub	sp, sp, #8
   13a28:	beq	13acc <BN_free@plt+0xaf0>
   13a2c:	add	r5, r0, #4
   13a30:	cmp	r7, r5
   13a34:	bls	13acc <BN_free@plt+0xaf0>
   13a38:	add	r3, r2, r3
   13a3c:	sub	r6, r3, #1
   13a40:	sub	r4, r2, #1
   13a44:	mov	r8, #92	; 0x5c
   13a48:	mov	r9, #114	; 0x72
   13a4c:	ldr	sl, [pc, #276]	; 13b68 <BN_free@plt+0xb8c>
   13a50:	b	13a90 <BN_free@plt+0xab4>
   13a54:	cmp	r3, #34	; 0x22
   13a58:	beq	13b34 <BN_free@plt+0xb58>
   13a5c:	cmp	r3, #92	; 0x5c
   13a60:	beq	13b20 <BN_free@plt+0xb44>
   13a64:	cmp	r3, #27
   13a68:	beq	13b08 <BN_free@plt+0xb2c>
   13a6c:	sub	r2, r3, #32
   13a70:	cmp	r2, #94	; 0x5e
   13a74:	strbls	r3, [r0], #1
   13a78:	bhi	13b48 <BN_free@plt+0xb6c>
   13a7c:	cmp	r4, r6
   13a80:	beq	13acc <BN_free@plt+0xaf0>
   13a84:	add	r5, r0, #4
   13a88:	cmp	r7, r5
   13a8c:	bls	13acc <BN_free@plt+0xaf0>
   13a90:	ldrb	r3, [r4, #1]!
   13a94:	cmp	r3, #13
   13a98:	beq	13adc <BN_free@plt+0xb00>
   13a9c:	bhi	13a54 <BN_free@plt+0xa78>
   13aa0:	cmp	r3, #9
   13aa4:	beq	13af0 <BN_free@plt+0xb14>
   13aa8:	cmp	r3, #10
   13aac:	bne	13a6c <BN_free@plt+0xa90>
   13ab0:	mov	r3, r0
   13ab4:	mov	r2, #110	; 0x6e
   13ab8:	cmp	r4, r6
   13abc:	strb	r8, [r3], #2
   13ac0:	strb	r2, [r0, #1]
   13ac4:	mov	r0, r3
   13ac8:	bne	13a84 <BN_free@plt+0xaa8>
   13acc:	mov	r3, #0
   13ad0:	strb	r3, [r0]
   13ad4:	add	sp, sp, #8
   13ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13adc:	mov	r3, r0
   13ae0:	strb	r8, [r3], #2
   13ae4:	strb	r9, [r0, #1]
   13ae8:	mov	r0, r3
   13aec:	b	13a7c <BN_free@plt+0xaa0>
   13af0:	mov	r3, r0
   13af4:	mov	r2, #116	; 0x74
   13af8:	strb	r8, [r3], #2
   13afc:	strb	r2, [r0, #1]
   13b00:	mov	r0, r3
   13b04:	b	13a7c <BN_free@plt+0xaa0>
   13b08:	mov	r3, r0
   13b0c:	mov	r2, #101	; 0x65
   13b10:	strb	r8, [r3], #2
   13b14:	strb	r2, [r0, #1]
   13b18:	mov	r0, r3
   13b1c:	b	13a7c <BN_free@plt+0xaa0>
   13b20:	mov	r2, r0
   13b24:	strb	r3, [r2], #2
   13b28:	strb	r3, [r0, #1]
   13b2c:	mov	r0, r2
   13b30:	b	13a7c <BN_free@plt+0xaa0>
   13b34:	mov	r2, r0
   13b38:	strb	r8, [r2], #2
   13b3c:	strb	r3, [r0, #1]
   13b40:	mov	r0, r2
   13b44:	b	13a7c <BN_free@plt+0xaa0>
   13b48:	str	r3, [sp, #4]
   13b4c:	str	sl, [sp]
   13b50:	mvn	r3, #0
   13b54:	mov	r2, #1
   13b58:	sub	r1, r7, r0
   13b5c:	bl	12c64 <__snprintf_chk@plt>
   13b60:	mov	r0, r5
   13b64:	b	13a7c <BN_free@plt+0xaa0>
   13b68:	andeq	sl, r1, r0, lsr #8
   13b6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b70:	mov	r3, #13
   13b74:	mov	r5, r2
   13b78:	mov	r8, r1
   13b7c:	ldrb	r4, [r2]
   13b80:	sub	sp, sp, #12
   13b84:	mov	r9, r0
   13b88:	mov	r6, #0
   13b8c:	mov	r1, #27
   13b90:	mov	r2, #9
   13b94:	mov	sl, #10
   13b98:	mov	fp, #92	; 0x5c
   13b9c:	cmp	r4, #0
   13ba0:	beq	13bd4 <BN_free@plt+0xbf8>
   13ba4:	add	r7, r6, #1
   13ba8:	cmp	r7, r8
   13bac:	bcs	13bd4 <BN_free@plt+0xbf8>
   13bb0:	cmp	r4, #92	; 0x5c
   13bb4:	add	r0, r5, #1
   13bb8:	beq	13bec <BN_free@plt+0xc10>
   13bbc:	strb	r4, [r9, r6]
   13bc0:	ldrb	r4, [r5, #1]
   13bc4:	mov	r6, r7
   13bc8:	mov	r5, r0
   13bcc:	cmp	r4, #0
   13bd0:	bne	13ba4 <BN_free@plt+0xbc8>
   13bd4:	cmp	r6, r8
   13bd8:	movcc	r3, #0
   13bdc:	mov	r0, r6
   13be0:	strbcc	r3, [r9, r6]
   13be4:	add	sp, sp, #12
   13be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bec:	ldrb	r4, [r5, #1]
   13bf0:	sub	ip, r4, #34	; 0x22
   13bf4:	cmp	ip, #86	; 0x56
   13bf8:	ldrls	pc, [pc, ip, lsl #2]
   13bfc:	b	13e3c <BN_free@plt+0xe60>
   13c00:	andeq	r3, r1, r4, lsr #28
   13c04:	andeq	r3, r1, ip, lsr lr
   13c08:	andeq	r3, r1, ip, lsr lr
   13c0c:	andeq	r3, r1, ip, lsr lr
   13c10:	andeq	r3, r1, ip, lsr lr
   13c14:	andeq	r3, r1, ip, lsr lr
   13c18:	andeq	r3, r1, ip, lsr lr
   13c1c:	andeq	r3, r1, ip, lsr lr
   13c20:	andeq	r3, r1, ip, lsr lr
   13c24:	andeq	r3, r1, ip, lsr lr
   13c28:	andeq	r3, r1, ip, lsr lr
   13c2c:	andeq	r3, r1, ip, lsr lr
   13c30:	andeq	r3, r1, ip, lsr lr
   13c34:	andeq	r3, r1, ip, lsr lr
   13c38:	strdeq	r3, [r1], -r8
   13c3c:	strdeq	r3, [r1], -r8
   13c40:	strdeq	r3, [r1], -r8
   13c44:	strdeq	r3, [r1], -r8
   13c48:	strdeq	r3, [r1], -r8
   13c4c:	strdeq	r3, [r1], -r8
   13c50:	strdeq	r3, [r1], -r8
   13c54:	strdeq	r3, [r1], -r8
   13c58:	andeq	r3, r1, ip, lsr lr
   13c5c:	andeq	r3, r1, ip, lsr lr
   13c60:	andeq	r3, r1, ip, lsr lr
   13c64:	andeq	r3, r1, ip, lsr lr
   13c68:	andeq	r3, r1, ip, lsr lr
   13c6c:	andeq	r3, r1, ip, lsr lr
   13c70:	andeq	r3, r1, ip, lsr lr
   13c74:	andeq	r3, r1, ip, lsr lr
   13c78:	andeq	r3, r1, ip, lsr lr
   13c7c:	andeq	r3, r1, ip, lsr lr
   13c80:	andeq	r3, r1, ip, lsr lr
   13c84:	andeq	r3, r1, ip, lsr lr
   13c88:	andeq	r3, r1, ip, lsr lr
   13c8c:	andeq	r3, r1, ip, lsr lr
   13c90:	andeq	r3, r1, ip, lsr lr
   13c94:	andeq	r3, r1, ip, lsr lr
   13c98:	andeq	r3, r1, ip, lsr lr
   13c9c:	andeq	r3, r1, ip, lsr lr
   13ca0:	andeq	r3, r1, ip, lsr lr
   13ca4:	andeq	r3, r1, ip, lsr lr
   13ca8:	andeq	r3, r1, ip, lsr lr
   13cac:	andeq	r3, r1, ip, lsr lr
   13cb0:	andeq	r3, r1, ip, lsr lr
   13cb4:	andeq	r3, r1, ip, lsr lr
   13cb8:	andeq	r3, r1, ip, lsr lr
   13cbc:	andeq	r3, r1, ip, lsr lr
   13cc0:	andeq	r3, r1, ip, lsr lr
   13cc4:	andeq	r3, r1, ip, lsr lr
   13cc8:	andeq	r3, r1, ip, lsr lr
   13ccc:	andeq	r3, r1, ip, lsr lr
   13cd0:	andeq	r3, r1, ip, lsr lr
   13cd4:	andeq	r3, r1, ip, lsr lr
   13cd8:	andeq	r3, r1, ip, lsr lr
   13cdc:	andeq	r3, r1, ip, lsr lr
   13ce0:	andeq	r3, r1, ip, lsr lr
   13ce4:	andeq	r3, r1, ip, lsr lr
   13ce8:	andeq	r3, r1, r4, ror #27
   13cec:	andeq	r3, r1, ip, lsr lr
   13cf0:	andeq	r3, r1, ip, lsr lr
   13cf4:	andeq	r3, r1, ip, lsr lr
   13cf8:	andeq	r3, r1, ip, lsr lr
   13cfc:	andeq	r3, r1, ip, lsr lr
   13d00:	andeq	r3, r1, ip, lsr lr
   13d04:	andeq	r3, r1, ip, lsr lr
   13d08:	andeq	r3, r1, ip, lsr lr
   13d0c:	ldrdeq	r3, [r1], -r0
   13d10:	andeq	r3, r1, ip, lsr lr
   13d14:	andeq	r3, r1, ip, lsr lr
   13d18:	andeq	r3, r1, ip, lsr lr
   13d1c:	andeq	r3, r1, ip, lsr lr
   13d20:	andeq	r3, r1, ip, lsr lr
   13d24:	andeq	r3, r1, ip, lsr lr
   13d28:	andeq	r3, r1, ip, lsr lr
   13d2c:	andeq	r3, r1, ip, lsr lr
   13d30:			; <UNDEFINED> instruction: 0x00013dbc
   13d34:	andeq	r3, r1, ip, lsr lr
   13d38:	andeq	r3, r1, ip, lsr lr
   13d3c:	andeq	r3, r1, ip, lsr lr
   13d40:	andeq	r3, r1, r8, lsr #27
   13d44:	andeq	r3, r1, ip, lsr lr
   13d48:	muleq	r1, r4, sp
   13d4c:	andeq	r3, r1, ip, lsr lr
   13d50:	andeq	r3, r1, ip, lsr lr
   13d54:	andeq	r3, r1, ip, lsr lr
   13d58:	andeq	r3, r1, ip, asr sp
   13d5c:	add	r3, r5, #2
   13d60:	mov	r0, r3
   13d64:	str	r3, [sp, #4]
   13d68:	bl	13340 <BN_free@plt+0x364>
   13d6c:	mov	r1, #27
   13d70:	mov	r2, #9
   13d74:	mov	r3, #13
   13d78:	cmp	r0, #0
   13d7c:	blt	13e78 <BN_free@plt+0xe9c>
   13d80:	strb	r0, [r9, r6]
   13d84:	add	r5, r5, #4
   13d88:	ldrb	r4, [r5]
   13d8c:	mov	r6, r7
   13d90:	b	13b9c <BN_free@plt+0xbc0>
   13d94:	strb	r2, [r9, r6]
   13d98:	add	r5, r5, #2
   13d9c:	ldrb	r4, [r5]
   13da0:	mov	r6, r7
   13da4:	b	13b9c <BN_free@plt+0xbc0>
   13da8:	strb	r3, [r9, r6]
   13dac:	add	r5, r5, #2
   13db0:	ldrb	r4, [r5]
   13db4:	mov	r6, r7
   13db8:	b	13b9c <BN_free@plt+0xbc0>
   13dbc:	strb	sl, [r9, r6]
   13dc0:	add	r5, r5, #2
   13dc4:	ldrb	r4, [r5]
   13dc8:	mov	r6, r7
   13dcc:	b	13b9c <BN_free@plt+0xbc0>
   13dd0:	strb	r1, [r9, r6]
   13dd4:	add	r5, r5, #2
   13dd8:	ldrb	r4, [r5]
   13ddc:	mov	r6, r7
   13de0:	b	13b9c <BN_free@plt+0xbc0>
   13de4:	strb	fp, [r9, r6]
   13de8:	add	r5, r5, #2
   13dec:	ldrb	r4, [r5]
   13df0:	mov	r6, r7
   13df4:	b	13b9c <BN_free@plt+0xbc0>
   13df8:	ldrb	r0, [r5, #2]
   13dfc:	sub	r4, r4, #48	; 0x30
   13e00:	sub	r0, r0, #48	; 0x30
   13e04:	uxtb	ip, r0
   13e08:	cmp	ip, #7
   13e0c:	addhi	r5, r5, #2
   13e10:	bls	13e44 <BN_free@plt+0xe68>
   13e14:	strb	r4, [r9, r6]
   13e18:	mov	r6, r7
   13e1c:	ldrb	r4, [r5]
   13e20:	b	13b9c <BN_free@plt+0xbc0>
   13e24:	mov	r0, #34	; 0x22
   13e28:	strb	r0, [r9, r6]
   13e2c:	add	r5, r5, #2
   13e30:	ldrb	r4, [r5]
   13e34:	mov	r6, r7
   13e38:	b	13b9c <BN_free@plt+0xbc0>
   13e3c:	mov	r5, r0
   13e40:	b	13b9c <BN_free@plt+0xbc0>
   13e44:	ldrb	ip, [r5, #3]
   13e48:	add	r4, r0, r4, lsl #3
   13e4c:	add	lr, r5, #3
   13e50:	sub	r0, ip, #48	; 0x30
   13e54:	uxtb	ip, r0
   13e58:	cmp	ip, #7
   13e5c:	addls	r5, r5, #4
   13e60:	movhi	r5, lr
   13e64:	addls	r4, r0, r4, lsl #3
   13e68:	strb	r4, [r9, r6]
   13e6c:	mov	r6, r7
   13e70:	ldrb	r4, [r5]
   13e74:	b	13b9c <BN_free@plt+0xbc0>
   13e78:	ldrb	r4, [r5, #2]
   13e7c:	mov	r0, r4
   13e80:	bl	13300 <BN_free@plt+0x324>
   13e84:	mov	r1, #27
   13e88:	mov	r2, #9
   13e8c:	mov	r3, #13
   13e90:	cmp	r0, #0
   13e94:	blt	13eac <BN_free@plt+0xed0>
   13e98:	strb	r0, [r9, r6]
   13e9c:	add	r5, r5, #3
   13ea0:	ldrb	r4, [r5]
   13ea4:	mov	r6, r7
   13ea8:	b	13b9c <BN_free@plt+0xbc0>
   13eac:	ldr	r5, [sp, #4]
   13eb0:	b	13b9c <BN_free@plt+0xbc0>
   13eb4:	subs	r2, r0, #0
   13eb8:	beq	13ed8 <BN_free@plt+0xefc>
   13ebc:	mov	r3, r1
   13ec0:	push	{r4, lr}
   13ec4:	mov	r1, #129	; 0x81
   13ec8:	ldr	r0, [pc, #24]	; 13ee8 <BN_free@plt+0xf0c>
   13ecc:	bl	13a18 <BN_free@plt+0xa3c>
   13ed0:	ldr	r0, [pc, #16]	; 13ee8 <BN_free@plt+0xf0c>
   13ed4:	pop	{r4, pc}
   13ed8:	ldr	r3, [pc, #8]	; 13ee8 <BN_free@plt+0xf0c>
   13edc:	ldr	r0, [pc, #4]	; 13ee8 <BN_free@plt+0xf0c>
   13ee0:	strb	r2, [r3]
   13ee4:	bx	lr
   13ee8:	andeq	ip, r2, ip, lsl r0
   13eec:	bx	lr
   13ef0:	cmp	r1, #0
   13ef4:	beq	13f2c <BN_free@plt+0xf50>
   13ef8:	ldrb	r3, [r0]
   13efc:	sub	r3, r3, #32
   13f00:	cmp	r3, #94	; 0x5e
   13f04:	bhi	13f34 <BN_free@plt+0xf58>
   13f08:	add	r1, r0, r1
   13f0c:	sub	r1, r1, #1
   13f10:	b	13f24 <BN_free@plt+0xf48>
   13f14:	ldrb	r3, [r0, #1]!
   13f18:	sub	r3, r3, #32
   13f1c:	cmp	r3, #94	; 0x5e
   13f20:	bhi	13f34 <BN_free@plt+0xf58>
   13f24:	cmp	r0, r1
   13f28:	bne	13f14 <BN_free@plt+0xf38>
   13f2c:	mov	r0, #0
   13f30:	bx	lr
   13f34:	mov	r0, #1
   13f38:	bx	lr
   13f3c:	cmp	r1, #0
   13f40:	beq	13f78 <BN_free@plt+0xf9c>
   13f44:	ldrb	r3, [r0]
   13f48:	cmp	r3, #127	; 0x7f
   13f4c:	cmpne	r3, #31
   13f50:	bls	13f80 <BN_free@plt+0xfa4>
   13f54:	add	r1, r0, r1
   13f58:	sub	r1, r1, #1
   13f5c:	b	13f70 <BN_free@plt+0xf94>
   13f60:	ldrb	r3, [r0, #1]!
   13f64:	cmp	r3, #127	; 0x7f
   13f68:	cmpne	r3, #31
   13f6c:	bls	13f80 <BN_free@plt+0xfa4>
   13f70:	cmp	r0, r1
   13f74:	bne	13f60 <BN_free@plt+0xf84>
   13f78:	mov	r0, #0
   13f7c:	bx	lr
   13f80:	mov	r0, #1
   13f84:	bx	lr
   13f88:	ldrb	r3, [r0]
   13f8c:	cmp	r3, #0
   13f90:	bne	13fa4 <BN_free@plt+0xfc8>
   13f94:	b	13fb8 <BN_free@plt+0xfdc>
   13f98:	ldrb	r3, [r0, #1]!
   13f9c:	cmp	r3, #0
   13fa0:	beq	13fb8 <BN_free@plt+0xfdc>
   13fa4:	cmp	r3, #13
   13fa8:	cmpne	r3, #10
   13fac:	bne	13f98 <BN_free@plt+0xfbc>
   13fb0:	mov	r0, #1
   13fb4:	bx	lr
   13fb8:	mov	r0, r3
   13fbc:	bx	lr
   13fc0:	push	{r4, r5, r6, lr}
   13fc4:	mov	r4, r1
   13fc8:	mov	r6, r2
   13fcc:	mov	r1, #0
   13fd0:	mov	r2, r4
   13fd4:	mov	r5, r3
   13fd8:	bl	1294c <memset@plt>
   13fdc:	cmp	r6, #0
   13fe0:	mov	r3, r0
   13fe4:	beq	14054 <BN_free@plt+0x1078>
   13fe8:	cmp	r4, r5
   13fec:	mov	r1, r6
   13ff0:	bls	14040 <BN_free@plt+0x1064>
   13ff4:	mov	r2, r5
   13ff8:	bl	12b98 <memcpy@plt>
   13ffc:	mov	r3, r0
   14000:	ldr	r2, [sp, #16]
   14004:	cmp	r2, #0
   14008:	moveq	r6, r5
   1400c:	beq	14038 <BN_free@plt+0x105c>
   14010:	ldr	r2, [sp, #20]
   14014:	add	r0, r3, r5
   14018:	add	r6, r5, r2
   1401c:	cmp	r6, r4
   14020:	subcs	r2, r4, r5
   14024:	ldrcs	r1, [sp, #16]
   14028:	ldrcc	r2, [sp, #20]
   1402c:	ldrcc	r1, [sp, #16]
   14030:	movcs	r6, r4
   14034:	bl	12b98 <memcpy@plt>
   14038:	mov	r0, r6
   1403c:	pop	{r4, r5, r6, pc}
   14040:	mov	r2, r4
   14044:	mov	r6, r4
   14048:	bl	12b98 <memcpy@plt>
   1404c:	mov	r0, r6
   14050:	pop	{r4, r5, r6, pc}
   14054:	mov	r5, r6
   14058:	b	14000 <BN_free@plt+0x1024>
   1405c:	push	{r4, r5, r6, lr}
   14060:	subs	r5, r0, #0
   14064:	moveq	r6, r5
   14068:	beq	14094 <BN_free@plt+0x10b8>
   1406c:	add	r0, r1, #1
   14070:	mov	r4, r1
   14074:	bl	12d48 <malloc@plt>
   14078:	subs	r6, r0, #0
   1407c:	beq	14094 <BN_free@plt+0x10b8>
   14080:	mov	r1, r5
   14084:	mov	r2, r4
   14088:	bl	12b98 <memcpy@plt>
   1408c:	mov	r3, #0
   14090:	strb	r3, [r6, r4]
   14094:	mov	r0, r6
   14098:	pop	{r4, r5, r6, pc}
   1409c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140a0:	mov	r7, r1
   140a4:	ldrb	r1, [r0]
   140a8:	mov	r4, r0
   140ac:	cmp	r1, #34	; 0x22
   140b0:	beq	141a0 <BN_free@plt+0x11c4>
   140b4:	cmp	r1, #80	; 0x50
   140b8:	beq	1412c <BN_free@plt+0x1150>
   140bc:	mov	r0, r4
   140c0:	bl	12b38 <strlen@plt>
   140c4:	tst	r0, #1
   140c8:	mov	r9, r0
   140cc:	bne	14120 <BN_free@plt+0x1144>
   140d0:	lsr	sl, r0, #1
   140d4:	add	r0, sl, #1
   140d8:	bl	12d48 <malloc@plt>
   140dc:	subs	r8, r0, #0
   140e0:	beq	14120 <BN_free@plt+0x1144>
   140e4:	cmp	sl, #0
   140e8:	beq	141d4 <BN_free@plt+0x11f8>
   140ec:	add	r6, r4, sl, lsl #1
   140f0:	mov	r5, r8
   140f4:	b	14104 <BN_free@plt+0x1128>
   140f8:	cmp	r4, r6
   140fc:	strb	r0, [r5], #1
   14100:	beq	141d4 <BN_free@plt+0x11f8>
   14104:	mov	r0, r4
   14108:	bl	13340 <BN_free@plt+0x364>
   1410c:	add	r4, r4, #2
   14110:	cmp	r0, #0
   14114:	bge	140f8 <BN_free@plt+0x111c>
   14118:	mov	r0, r8
   1411c:	bl	12a30 <free@plt>
   14120:	mov	r8, #0
   14124:	mov	r0, r8
   14128:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1412c:	ldrb	r1, [r0, #1]
   14130:	cmp	r1, #34	; 0x22
   14134:	bne	140bc <BN_free@plt+0x10e0>
   14138:	add	r4, r0, #2
   1413c:	mov	r0, r4
   14140:	bl	12988 <strrchr@plt>
   14144:	cmp	r0, #0
   14148:	beq	14120 <BN_free@plt+0x1144>
   1414c:	ldrb	r3, [r0, #1]
   14150:	cmp	r3, #0
   14154:	bne	14120 <BN_free@plt+0x1144>
   14158:	sub	r5, r0, r4
   1415c:	mov	r1, r5
   14160:	mov	r0, r4
   14164:	bl	1405c <BN_free@plt+0x1080>
   14168:	subs	r4, r0, #0
   1416c:	beq	14120 <BN_free@plt+0x1144>
   14170:	add	r5, r5, #1
   14174:	mov	r0, r5
   14178:	bl	12d48 <malloc@plt>
   1417c:	subs	r8, r0, #0
   14180:	beq	14194 <BN_free@plt+0x11b8>
   14184:	mov	r1, r5
   14188:	mov	r2, r4
   1418c:	bl	13b6c <BN_free@plt+0xb90>
   14190:	str	r0, [r7]
   14194:	mov	r0, r4
   14198:	bl	12a30 <free@plt>
   1419c:	b	14124 <BN_free@plt+0x1148>
   141a0:	add	r4, r0, #1
   141a4:	mov	r0, r4
   141a8:	bl	12988 <strrchr@plt>
   141ac:	cmp	r0, #0
   141b0:	beq	14120 <BN_free@plt+0x1144>
   141b4:	ldrb	r3, [r0, #1]
   141b8:	cmp	r3, #0
   141bc:	bne	14120 <BN_free@plt+0x1144>
   141c0:	sub	r1, r0, r4
   141c4:	str	r1, [r7]
   141c8:	mov	r0, r4
   141cc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   141d0:	b	1405c <BN_free@plt+0x1080>
   141d4:	mov	r3, #0
   141d8:	str	sl, [r7]
   141dc:	strb	r3, [r8, r9, lsr #1]
   141e0:	mov	r0, r8
   141e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141e8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141ec:	subs	r8, r1, #0
   141f0:	mov	r9, r0
   141f4:	beq	14308 <BN_free@plt+0x132c>
   141f8:	ldrb	r6, [r8]
   141fc:	cmp	r6, #0
   14200:	moveq	r7, r6
   14204:	beq	142e8 <BN_free@plt+0x130c>
   14208:	mov	r5, #0
   1420c:	mov	r6, #1
   14210:	lsl	r4, r6, #3
   14214:	mov	r1, r4
   14218:	mov	r0, r5
   1421c:	bl	12f34 <realloc@plt>
   14220:	mov	r2, #10
   14224:	mov	r1, #0
   14228:	subs	r7, r0, #0
   1422c:	mov	r0, r8
   14230:	beq	14300 <BN_free@plt+0x1324>
   14234:	bl	12bec <strtol@plt>
   14238:	sub	r4, r4, #8
   1423c:	mov	r1, #45	; 0x2d
   14240:	str	r0, [r7, r4]
   14244:	mov	fp, r0
   14248:	mov	r0, r8
   1424c:	bl	128c8 <strchr@plt>
   14250:	mov	r1, #44	; 0x2c
   14254:	add	r4, r7, r4
   14258:	mov	sl, r0
   1425c:	mov	r0, r8
   14260:	bl	128c8 <strchr@plt>
   14264:	cmp	sl, #0
   14268:	mov	r5, r0
   1426c:	beq	1428c <BN_free@plt+0x12b0>
   14270:	cmp	sl, r0
   14274:	movcs	r3, #0
   14278:	movcc	r3, #1
   1427c:	cmp	r0, #0
   14280:	moveq	r3, #1
   14284:	cmp	r3, #0
   14288:	bne	142cc <BN_free@plt+0x12f0>
   1428c:	cmp	r5, #0
   14290:	str	fp, [r4, #4]
   14294:	beq	142e8 <BN_free@plt+0x130c>
   14298:	adds	r8, r5, #1
   1429c:	beq	142e8 <BN_free@plt+0x130c>
   142a0:	ldrb	r3, [r5, #1]
   142a4:	mov	r5, r7
   142a8:	cmp	r3, #0
   142ac:	beq	142e8 <BN_free@plt+0x130c>
   142b0:	add	r6, r6, #1
   142b4:	lsrs	r3, r6, #29
   142b8:	beq	14210 <BN_free@plt+0x1234>
   142bc:	mov	r0, r7
   142c0:	bl	12a30 <free@plt>
   142c4:	mvn	r0, #0
   142c8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142cc:	add	r0, sl, #1
   142d0:	mov	r2, #10
   142d4:	mov	r1, #0
   142d8:	bl	12bec <strtol@plt>
   142dc:	cmp	r5, #0
   142e0:	str	r0, [r4, #4]
   142e4:	bne	14298 <BN_free@plt+0x12bc>
   142e8:	ldr	r0, [r9]
   142ec:	bl	12a30 <free@plt>
   142f0:	mov	r0, #0
   142f4:	str	r7, [r9]
   142f8:	str	r6, [r9, #4]
   142fc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14300:	mov	r7, r5
   14304:	b	142bc <BN_free@plt+0x12e0>
   14308:	mov	r7, r8
   1430c:	mov	r6, r8
   14310:	b	142e8 <BN_free@plt+0x130c>
   14314:	cmp	r0, #0
   14318:	bxeq	lr
   1431c:	push	{lr}		; (str lr, [sp, #-4]!)
   14320:	ldr	lr, [r0, #4]
   14324:	cmp	lr, #0
   14328:	beq	1435c <BN_free@plt+0x1380>
   1432c:	ldr	ip, [r0]
   14330:	mov	r3, #0
   14334:	add	r0, ip, #4
   14338:	ldr	r2, [ip, r3, lsl #3]
   1433c:	cmp	r2, r1
   14340:	bhi	14350 <BN_free@plt+0x1374>
   14344:	ldr	r2, [r0, r3, lsl #3]
   14348:	cmp	r2, r1
   1434c:	bcs	14364 <BN_free@plt+0x1388>
   14350:	add	r3, r3, #1
   14354:	cmp	r3, lr
   14358:	bne	14338 <BN_free@plt+0x135c>
   1435c:	mov	r0, #0
   14360:	pop	{pc}		; (ldr pc, [sp], #4)
   14364:	mov	r0, #1
   14368:	pop	{pc}		; (ldr pc, [sp], #4)
   1436c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14370:	sub	sp, sp, #28
   14374:	ldr	r8, [r0, #4]
   14378:	cmp	r8, #0
   1437c:	beq	14458 <BN_free@plt+0x147c>
   14380:	rsb	r8, r8, r8, lsl #4
   14384:	mov	r7, r0
   14388:	lsl	r8, r8, #1
   1438c:	mov	r0, r8
   14390:	bl	12d48 <malloc@plt>
   14394:	subs	r5, r0, #0
   14398:	str	r5, [sp, #20]
   1439c:	beq	14458 <BN_free@plt+0x147c>
   143a0:	ldr	sl, [pc, #196]	; 1446c <BN_free@plt+0x1490>
   143a4:	ldr	r9, [pc, #196]	; 14470 <BN_free@plt+0x1494>
   143a8:	add	r8, r5, r8
   143ac:	mov	r4, #0
   143b0:	b	143f4 <BN_free@plt+0x1418>
   143b4:	cmp	r4, #0
   143b8:	str	ip, [sp, #8]
   143bc:	ldr	ip, [pc, #176]	; 14474 <BN_free@plt+0x1498>
   143c0:	moveq	fp, sl
   143c4:	movne	fp, r9
   143c8:	str	lr, [sp, #12]
   143cc:	str	ip, [sp]
   143d0:	str	fp, [sp, #4]
   143d4:	bl	12c64 <__snprintf_chk@plt>
   143d8:	add	r4, r4, #1
   143dc:	cmp	r0, r6
   143e0:	bcs	14450 <BN_free@plt+0x1474>
   143e4:	ldr	r3, [r7, #4]
   143e8:	add	r5, r5, r0
   143ec:	cmp	r3, r4
   143f0:	bls	14460 <BN_free@plt+0x1484>
   143f4:	ldr	r3, [r7]
   143f8:	sub	r6, r8, r5
   143fc:	add	r2, r3, r4, lsl #3
   14400:	ldr	ip, [r3, r4, lsl #3]
   14404:	ldr	lr, [r2, #4]
   14408:	mov	r0, r5
   1440c:	cmp	ip, lr
   14410:	mvn	r3, #0
   14414:	mov	r2, #1
   14418:	mov	r1, r6
   1441c:	bne	143b4 <BN_free@plt+0x13d8>
   14420:	cmp	r4, #0
   14424:	ldr	r2, [pc, #76]	; 14478 <BN_free@plt+0x149c>
   14428:	moveq	r3, sl
   1442c:	movne	r3, r9
   14430:	str	ip, [sp, #8]
   14434:	strd	r2, [sp]
   14438:	mvn	r3, #0
   1443c:	mov	r2, #1
   14440:	bl	12c64 <__snprintf_chk@plt>
   14444:	add	r4, r4, #1
   14448:	cmp	r0, r6
   1444c:	bcc	143e4 <BN_free@plt+0x1408>
   14450:	ldr	r0, [sp, #20]
   14454:	bl	12a30 <free@plt>
   14458:	mov	r3, #0
   1445c:	str	r3, [sp, #20]
   14460:	ldr	r0, [sp, #20]
   14464:	add	sp, sp, #28
   14468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1446c:	andeq	sl, r1, ip, lsl #13
   14470:	andeq	sl, r1, r8, lsr #8
   14474:	andeq	sl, r1, r4, lsr r4
   14478:	andeq	sl, r1, ip, lsr #8
   1447c:	subs	r3, r0, #0
   14480:	beq	144a8 <BN_free@plt+0x14cc>
   14484:	ldr	r0, [r3]
   14488:	cmp	r0, #0
   1448c:	bxeq	lr
   14490:	mov	r0, #0
   14494:	ldr	r2, [r3, #4]!
   14498:	add	r0, r0, #1
   1449c:	cmp	r2, #0
   144a0:	bne	14494 <BN_free@plt+0x14b8>
   144a4:	bx	lr
   144a8:	mov	r0, r3
   144ac:	bx	lr
   144b0:	push	{r4, r5, r6, r7, r8, lr}
   144b4:	mov	r6, r0
   144b8:	ldr	r0, [r0]
   144bc:	mov	r7, r1
   144c0:	cmp	r0, #0
   144c4:	beq	14574 <BN_free@plt+0x1598>
   144c8:	ldr	r3, [r0]
   144cc:	cmp	r3, #0
   144d0:	beq	14574 <BN_free@plt+0x1598>
   144d4:	mov	r3, r0
   144d8:	mov	r5, #0
   144dc:	ldr	r4, [r3, #4]!
   144e0:	add	r5, r5, #1
   144e4:	cmp	r4, #0
   144e8:	bne	144dc <BN_free@plt+0x1500>
   144ec:	cmp	r7, #0
   144f0:	beq	14598 <BN_free@plt+0x15bc>
   144f4:	ldr	r4, [r7]
   144f8:	cmp	r4, #0
   144fc:	beq	14598 <BN_free@plt+0x15bc>
   14500:	mov	r3, r7
   14504:	mov	r4, #0
   14508:	ldr	r2, [r3, #4]!
   1450c:	add	r4, r4, #1
   14510:	cmp	r2, #0
   14514:	bne	14508 <BN_free@plt+0x152c>
   14518:	add	r1, r5, r4
   1451c:	add	r1, r1, #1
   14520:	lsrs	r3, r1, #30
   14524:	bne	14564 <BN_free@plt+0x1588>
   14528:	lsl	r1, r1, #2
   1452c:	bl	12f34 <realloc@plt>
   14530:	cmp	r0, #0
   14534:	beq	14560 <BN_free@plt+0x1584>
   14538:	sub	r5, r5, #-1073741823	; 0xc0000001
   1453c:	add	r4, r7, r4, lsl #2
   14540:	add	r5, r0, r5, lsl #2
   14544:	sub	r1, r7, #4
   14548:	ldr	r3, [r1, #4]!
   1454c:	cmp	r4, r1
   14550:	str	r3, [r5, #4]!
   14554:	bne	14548 <BN_free@plt+0x156c>
   14558:	str	r0, [r6]
   1455c:	pop	{r4, r5, r6, r7, r8, pc}
   14560:	ldr	r0, [r6]
   14564:	bl	12a30 <free@plt>
   14568:	mov	r3, #0
   1456c:	str	r3, [r6]
   14570:	pop	{r4, r5, r6, r7, r8, pc}
   14574:	cmp	r7, #0
   14578:	beq	145a0 <BN_free@plt+0x15c4>
   1457c:	ldr	r4, [r7]
   14580:	cmp	r4, #0
   14584:	moveq	r5, r4
   14588:	moveq	r1, #1
   1458c:	beq	14528 <BN_free@plt+0x154c>
   14590:	mov	r5, #0
   14594:	b	14500 <BN_free@plt+0x1524>
   14598:	mov	r1, r5
   1459c:	b	1451c <BN_free@plt+0x1540>
   145a0:	mov	r1, #4
   145a4:	mov	r5, r7
   145a8:	mov	r4, r7
   145ac:	b	1452c <BN_free@plt+0x1550>
   145b0:	push	{r4, lr}
   145b4:	subs	r4, r0, #0
   145b8:	popeq	{r4, pc}
   145bc:	ldr	r3, [r4]
   145c0:	cmp	r3, #0
   145c4:	beq	14644 <BN_free@plt+0x1668>
   145c8:	mov	r2, r4
   145cc:	mov	r3, #0
   145d0:	ldr	r1, [r2, #4]!
   145d4:	add	r3, r3, #1
   145d8:	cmp	r1, #0
   145dc:	mov	r1, r3
   145e0:	bne	145d0 <BN_free@plt+0x15f4>
   145e4:	mov	r2, #4
   145e8:	mov	r0, r4
   145ec:	ldr	r3, [pc, #88]	; 1464c <BN_free@plt+0x1670>
   145f0:	bl	12718 <qsort@plt>
   145f4:	ldr	r2, [r4]
   145f8:	mov	r0, r4
   145fc:	mov	r1, #0
   14600:	b	14620 <BN_free@plt+0x1644>
   14604:	ldr	r3, [r0, #4]!
   14608:	cmp	r3, #0
   1460c:	beq	14638 <BN_free@plt+0x165c>
   14610:	cmp	r3, r2
   14614:	addne	r1, r1, #1
   14618:	mov	r2, r3
   1461c:	strne	r3, [r4, r1, lsl #2]
   14620:	cmp	r2, #0
   14624:	bne	14604 <BN_free@plt+0x1628>
   14628:	add	r1, r4, r1, lsl #2
   1462c:	mov	r3, #0
   14630:	str	r3, [r1]
   14634:	pop	{r4, pc}
   14638:	add	r1, r1, #1
   1463c:	add	r1, r4, r1, lsl #2
   14640:	b	1462c <BN_free@plt+0x1650>
   14644:	mov	r1, r3
   14648:	b	145e4 <BN_free@plt+0x1608>
   1464c:	ldrdeq	r3, [r1], -r0
   14650:	push	{r4, r5, r6, lr}
   14654:	mov	r6, r0
   14658:	ldr	r0, [r0]
   1465c:	mov	r5, r1
   14660:	cmp	r0, #0
   14664:	beq	146ec <BN_free@plt+0x1710>
   14668:	ldr	r3, [r0]
   1466c:	cmp	r3, #0
   14670:	beq	146ec <BN_free@plt+0x1710>
   14674:	cmp	r1, r3
   14678:	popeq	{r4, r5, r6, pc}
   1467c:	mov	r2, r0
   14680:	mov	r1, #0
   14684:	b	14694 <BN_free@plt+0x16b8>
   14688:	cmp	r3, r5
   1468c:	mov	r1, r4
   14690:	popeq	{r4, r5, r6, pc}
   14694:	ldr	r3, [r2, #4]!
   14698:	add	r4, r1, #1
   1469c:	cmp	r3, #0
   146a0:	bne	14688 <BN_free@plt+0x16ac>
   146a4:	add	r1, r1, #3
   146a8:	lsrs	r3, r1, #30
   146ac:	bne	146dc <BN_free@plt+0x1700>
   146b0:	lsl	r1, r1, #2
   146b4:	bl	12f34 <realloc@plt>
   146b8:	cmp	r0, #0
   146bc:	beq	146d8 <BN_free@plt+0x16fc>
   146c0:	add	r3, r0, r4, lsl #2
   146c4:	mov	r2, #0
   146c8:	str	r5, [r0, r4, lsl #2]
   146cc:	str	r2, [r3, #4]
   146d0:	str	r0, [r6]
   146d4:	pop	{r4, r5, r6, pc}
   146d8:	ldr	r0, [r6]
   146dc:	bl	12a30 <free@plt>
   146e0:	mov	r3, #0
   146e4:	str	r3, [r6]
   146e8:	pop	{r4, r5, r6, pc}
   146ec:	mov	r1, #8
   146f0:	mov	r4, #0
   146f4:	b	146b4 <BN_free@plt+0x16d8>
   146f8:	cmp	r0, #0
   146fc:	bxeq	lr
   14700:	b	12a30 <free@plt>
   14704:	cmp	r0, #0
   14708:	bxeq	lr
   1470c:	b	12a30 <free@plt>
   14710:	push	{r4, lr}
   14714:	mov	r1, #6
   14718:	mov	r4, r0
   1471c:	bl	16b78 <BN_free@plt+0x3b9c>
   14720:	cmp	r0, #0
   14724:	movge	r0, #0
   14728:	ldrbge	r3, [r4]
   1472c:	mvnlt	r0, #0
   14730:	bicge	r3, r3, #1
   14734:	orrge	r3, r3, #2
   14738:	strbge	r3, [r4]
   1473c:	pop	{r4, pc}
   14740:	push	{r4, lr}
   14744:	mov	r1, #3
   14748:	mov	r4, r0
   1474c:	add	r0, r0, #3
   14750:	bl	16b78 <BN_free@plt+0x3b9c>
   14754:	cmp	r0, #0
   14758:	movge	r0, #0
   1475c:	ldrbge	r3, [r4]
   14760:	mvnlt	r0, #0
   14764:	bicge	r3, r3, #1
   14768:	orrge	r3, r3, #2
   1476c:	strbge	r3, [r4]
   14770:	pop	{r4, pc}
   14774:	cmp	r1, #0
   14778:	clz	r3, r2
   1477c:	lsr	r3, r3, #5
   14780:	moveq	r3, #1
   14784:	cmp	r0, #0
   14788:	moveq	r3, #1
   1478c:	cmp	r3, #0
   14790:	push	{r4, r5, r6, r7, r8, lr}
   14794:	bne	1480c <BN_free@plt+0x1830>
   14798:	ldr	r5, [r2]
   1479c:	mov	r6, r1
   147a0:	cmp	r5, #0
   147a4:	moveq	r5, r0
   147a8:	mov	r7, r2
   147ac:	ldrb	r1, [r5]
   147b0:	cmp	r1, #0
   147b4:	bne	147c8 <BN_free@plt+0x17ec>
   147b8:	b	1480c <BN_free@plt+0x1830>
   147bc:	cmp	r1, #0
   147c0:	mov	r5, r4
   147c4:	beq	1480c <BN_free@plt+0x1830>
   147c8:	mov	r0, r6
   147cc:	bl	128c8 <strchr@plt>
   147d0:	mov	r4, r5
   147d4:	ldrb	r1, [r4, #1]!
   147d8:	cmp	r0, #0
   147dc:	bne	147bc <BN_free@plt+0x17e0>
   147e0:	b	147f8 <BN_free@plt+0x181c>
   147e4:	mov	r0, r6
   147e8:	bl	128c8 <strchr@plt>
   147ec:	cmp	r0, #0
   147f0:	bne	14800 <BN_free@plt+0x1824>
   147f4:	ldrb	r1, [r4, #1]!
   147f8:	cmp	r1, #0
   147fc:	bne	147e4 <BN_free@plt+0x1808>
   14800:	str	r4, [r7]
   14804:	mov	r0, r5
   14808:	pop	{r4, r5, r6, r7, r8, pc}
   1480c:	mov	r5, #0
   14810:	mov	r0, r5
   14814:	pop	{r4, r5, r6, r7, r8, pc}
   14818:	push	{r4, lr}
   1481c:	mov	r4, r2
   14820:	bl	14774 <BN_free@plt+0x1798>
   14824:	cmp	r0, #0
   14828:	popeq	{r4, pc}
   1482c:	ldr	r3, [r4]
   14830:	ldrb	r2, [r3]
   14834:	cmp	r2, #0
   14838:	addne	r1, r3, #1
   1483c:	movne	r2, #0
   14840:	strne	r1, [r4]
   14844:	strbne	r2, [r3]
   14848:	pop	{r4, pc}
   1484c:	cmp	r2, #0
   14850:	cmpne	r0, #0
   14854:	beq	14910 <BN_free@plt+0x1934>
   14858:	cmp	r1, #0
   1485c:	push	{r4, r5, r6, r7, r8, lr}
   14860:	mov	r6, r3
   14864:	mov	r5, r2
   14868:	mov	r4, r0
   1486c:	ldrb	r7, [r0]
   14870:	beq	148e4 <BN_free@plt+0x1908>
   14874:	cmp	r7, #39	; 0x27
   14878:	sub	r2, r1, #1
   1487c:	beq	1493c <BN_free@plt+0x1960>
   14880:	cmp	r6, #0
   14884:	beq	148dc <BN_free@plt+0x1900>
   14888:	add	r3, r5, r6
   1488c:	mov	r0, #0
   14890:	ldrb	ip, [r4]
   14894:	cmp	ip, #39	; 0x27
   14898:	beq	14904 <BN_free@plt+0x1928>
   1489c:	cmp	ip, #92	; 0x5c
   148a0:	movne	r1, r2
   148a4:	bne	148bc <BN_free@plt+0x18e0>
   148a8:	cmp	r2, #0
   148ac:	sub	r1, r1, #2
   148b0:	beq	148dc <BN_free@plt+0x1900>
   148b4:	ldrb	ip, [r4, #1]
   148b8:	add	r4, r4, #1
   148bc:	cmp	r1, #0
   148c0:	add	r4, r4, #1
   148c4:	strb	ip, [r5], #1
   148c8:	add	r0, r0, #1
   148cc:	sub	r2, r1, #1
   148d0:	beq	14948 <BN_free@plt+0x196c>
   148d4:	cmp	r3, r5
   148d8:	bne	14890 <BN_free@plt+0x18b4>
   148dc:	mov	r0, #0
   148e0:	pop	{r4, r5, r6, r7, r8, pc}
   148e4:	bl	12b38 <strlen@plt>
   148e8:	cmp	r7, #39	; 0x27
   148ec:	mov	r1, r0
   148f0:	beq	14918 <BN_free@plt+0x193c>
   148f4:	cmp	r1, #0
   148f8:	sub	r2, r1, #1
   148fc:	bne	14880 <BN_free@plt+0x18a4>
   14900:	b	14920 <BN_free@plt+0x1944>
   14904:	mov	r3, #0
   14908:	strb	r3, [r5]
   1490c:	pop	{r4, r5, r6, r7, r8, pc}
   14910:	mov	r0, #0
   14914:	bx	lr
   14918:	cmp	r0, #0
   1491c:	bne	14938 <BN_free@plt+0x195c>
   14920:	cmp	r6, r1
   14924:	movhi	r3, #0
   14928:	movhi	r0, r1
   1492c:	strbhi	r3, [r5]
   14930:	movls	r0, r1
   14934:	pop	{r4, r5, r6, r7, r8, pc}
   14938:	sub	r2, r0, #1
   1493c:	add	r4, r4, #1
   14940:	mov	r1, r2
   14944:	b	148f4 <BN_free@plt+0x1918>
   14948:	mov	r1, r0
   1494c:	b	14920 <BN_free@plt+0x1944>
   14950:	cmp	r2, #0
   14954:	cmpne	r0, #0
   14958:	beq	14a14 <BN_free@plt+0x1a38>
   1495c:	cmp	r1, #0
   14960:	push	{r4, r5, r6, r7, r8, lr}
   14964:	mov	r6, r3
   14968:	mov	r4, r2
   1496c:	mov	r7, r0
   14970:	beq	149ec <BN_free@plt+0x1a10>
   14974:	sub	r1, r1, #1
   14978:	cmp	r6, #0
   1497c:	beq	14a0c <BN_free@plt+0x1a30>
   14980:	sub	ip, r7, #1
   14984:	mov	r5, #1
   14988:	mov	r0, #0
   1498c:	mov	r3, #92	; 0x5c
   14990:	b	149b4 <BN_free@plt+0x19d8>
   14994:	mov	r4, lr
   14998:	sub	lr, r7, ip
   1499c:	cmn	lr, r1
   149a0:	strb	r2, [r4], #1
   149a4:	beq	149fc <BN_free@plt+0x1a20>
   149a8:	cmp	r0, r6
   149ac:	add	r5, r0, #1
   149b0:	bcs	14a0c <BN_free@plt+0x1a30>
   149b4:	ldrb	r2, [ip, #1]!
   149b8:	mov	lr, r4
   149bc:	add	r0, r0, #2
   149c0:	cmp	r2, #39	; 0x27
   149c4:	beq	149d4 <BN_free@plt+0x19f8>
   149c8:	cmp	r2, #92	; 0x5c
   149cc:	movne	r0, r5
   149d0:	bne	14994 <BN_free@plt+0x19b8>
   149d4:	cmp	r6, r5
   149d8:	mov	lr, r4
   149dc:	bls	14a0c <BN_free@plt+0x1a30>
   149e0:	strb	r3, [lr], #1
   149e4:	ldrb	r2, [ip]
   149e8:	b	14994 <BN_free@plt+0x19b8>
   149ec:	bl	12b38 <strlen@plt>
   149f0:	cmp	r0, #0
   149f4:	sub	r1, r0, #1
   149f8:	bne	14978 <BN_free@plt+0x199c>
   149fc:	cmp	r6, r0
   14a00:	movhi	r3, #0
   14a04:	strbhi	r3, [r4]
   14a08:	pop	{r4, r5, r6, r7, r8, pc}
   14a0c:	mov	r0, #0
   14a10:	pop	{r4, r5, r6, r7, r8, pc}
   14a14:	mov	r0, #0
   14a18:	bx	lr
   14a1c:	sub	r0, r0, #1
   14a20:	cmp	r0, #30
   14a24:	movhi	r0, #0
   14a28:	movls	r0, #1
   14a2c:	bx	lr
   14a30:	push	{r4, r5, r6, r7, lr}
   14a34:	mov	r7, #0
   14a38:	ldr	r6, [pc, #212]	; 14b14 <BN_free@plt+0x1b38>
   14a3c:	sub	sp, sp, #12
   14a40:	str	r7, [r1, #32]
   14a44:	ldr	r3, [r6]
   14a48:	mov	r5, r1
   14a4c:	str	r3, [sp, #4]
   14a50:	bl	12d3c <strdup@plt>
   14a54:	subs	r4, r0, #0
   14a58:	beq	14b08 <BN_free@plt+0x1b2c>
   14a5c:	ldrb	r1, [r4]
   14a60:	cmp	r1, #34	; 0x22
   14a64:	beq	14ae4 <BN_free@plt+0x1b08>
   14a68:	mov	r1, #32
   14a6c:	bl	128c8 <strchr@plt>
   14a70:	cmp	r0, #0
   14a74:	strbne	r7, [r0]
   14a78:	mov	r1, sp
   14a7c:	mov	r0, r4
   14a80:	bl	1409c <BN_free@plt+0x10c0>
   14a84:	subs	r7, r0, #0
   14a88:	beq	14a98 <BN_free@plt+0x1abc>
   14a8c:	ldr	r2, [sp]
   14a90:	cmp	r2, #32
   14a94:	bls	14ad0 <BN_free@plt+0x1af4>
   14a98:	mov	r0, r4
   14a9c:	bl	12a30 <free@plt>
   14aa0:	mov	r0, r7
   14aa4:	bl	12a30 <free@plt>
   14aa8:	ldr	r0, [r5, #32]
   14aac:	clz	r0, r0
   14ab0:	lsr	r0, r0, #5
   14ab4:	rsb	r0, r0, #0
   14ab8:	ldr	r2, [sp, #4]
   14abc:	ldr	r3, [r6]
   14ac0:	cmp	r2, r3
   14ac4:	bne	14b10 <BN_free@plt+0x1b34>
   14ac8:	add	sp, sp, #12
   14acc:	pop	{r4, r5, r6, r7, pc}
   14ad0:	str	r2, [r5, #32]
   14ad4:	mov	r1, r7
   14ad8:	mov	r0, r5
   14adc:	bl	12b98 <memcpy@plt>
   14ae0:	b	14a98 <BN_free@plt+0x1abc>
   14ae4:	add	r0, r4, #1
   14ae8:	bl	128c8 <strchr@plt>
   14aec:	cmp	r0, #0
   14af0:	strbne	r7, [r0, #1]
   14af4:	bne	14a78 <BN_free@plt+0x1a9c>
   14af8:	mov	r0, r4
   14afc:	bl	12a30 <free@plt>
   14b00:	mvn	r0, #0
   14b04:	b	14ab8 <BN_free@plt+0x1adc>
   14b08:	mvn	r0, #0
   14b0c:	b	14ab8 <BN_free@plt+0x1adc>
   14b10:	bl	12d60 <__stack_chk_fail@plt>
   14b14:	ldrdeq	fp, [r2], -r8
   14b18:	push	{r4, r5, r6, lr}
   14b1c:	mov	r5, r0
   14b20:	mov	r0, r1
   14b24:	mov	r4, r1
   14b28:	bl	12b38 <strlen@plt>
   14b2c:	mov	r1, r4
   14b30:	mov	r2, r0
   14b34:	mov	r0, r5
   14b38:	bl	12f04 <strncmp@plt>
   14b3c:	clz	r0, r0
   14b40:	lsr	r0, r0, #5
   14b44:	pop	{r4, r5, r6, pc}
   14b48:	cmp	r0, #0
   14b4c:	beq	14b78 <BN_free@plt+0x1b9c>
   14b50:	cmn	r0, #110	; 0x6e
   14b54:	blt	14b70 <BN_free@plt+0x1b94>
   14b58:	cmp	r0, #0
   14b5c:	bgt	14b80 <BN_free@plt+0x1ba4>
   14b60:	add	r0, r0, #110	; 0x6e
   14b64:	lsl	r0, r0, #1
   14b68:	uxtb	r0, r0
   14b6c:	bx	lr
   14b70:	mov	r0, #0
   14b74:	bx	lr
   14b78:	mov	r0, #255	; 0xff
   14b7c:	bx	lr
   14b80:	mov	r0, #220	; 0xdc
   14b84:	bx	lr
   14b88:	push	{r4, lr}
   14b8c:	sub	sp, sp, #24
   14b90:	ldr	r4, [pc, #100]	; 14bfc <BN_free@plt+0x1c20>
   14b94:	add	r0, sp, #12
   14b98:	ldr	r3, [r4]
   14b9c:	str	r3, [sp, #20]
   14ba0:	bl	16840 <BN_free@plt+0x3864>
   14ba4:	ldr	r3, [pc, #84]	; 14c00 <BN_free@plt+0x1c24>
   14ba8:	ldr	r0, [r3]
   14bac:	ldr	r3, [sp, #16]
   14bb0:	cmp	r0, #0
   14bb4:	beq	14be4 <BN_free@plt+0x1c08>
   14bb8:	str	r3, [sp]
   14bbc:	ldr	r2, [pc, #64]	; 14c04 <BN_free@plt+0x1c28>
   14bc0:	ldr	r3, [sp, #12]
   14bc4:	mov	r1, #1
   14bc8:	bl	12d6c <__fprintf_chk@plt>
   14bcc:	ldr	r2, [sp, #20]
   14bd0:	ldr	r3, [r4]
   14bd4:	cmp	r2, r3
   14bd8:	bne	14bf8 <BN_free@plt+0x1c1c>
   14bdc:	add	sp, sp, #24
   14be0:	pop	{r4, pc}
   14be4:	ldr	r2, [sp, #12]
   14be8:	ldr	r1, [pc, #20]	; 14c04 <BN_free@plt+0x1c28>
   14bec:	mov	r0, #1
   14bf0:	bl	128bc <__printf_chk@plt>
   14bf4:	b	14bcc <BN_free@plt+0x1bf0>
   14bf8:	bl	12d60 <__stack_chk_fail@plt>
   14bfc:	ldrdeq	fp, [r2], -r8
   14c00:	andeq	ip, r2, r0, lsr #1
   14c04:	muleq	r1, r0, r4
   14c08:	ldr	r3, [pc, #12]	; 14c1c <BN_free@plt+0x1c40>
   14c0c:	ldr	r3, [r3, #4]
   14c10:	cmp	r3, #0
   14c14:	bxeq	lr
   14c18:	b	14b88 <BN_free@plt+0x1bac>
   14c1c:	andeq	ip, r2, r0, lsr #1
   14c20:	mov	r2, #24
   14c24:	push	{r4, lr}
   14c28:	mov	r1, #9
   14c2c:	ldr	r0, [pc, #20]	; 14c48 <BN_free@plt+0x1c6c>
   14c30:	bl	12a54 <openlog@plt>
   14c34:	ldr	r2, [pc, #16]	; 14c4c <BN_free@plt+0x1c70>
   14c38:	ldr	r3, [r2, #8]
   14c3c:	add	r3, r3, #1
   14c40:	str	r3, [r2, #8]
   14c44:	pop	{r4, pc}
   14c48:	muleq	r1, ip, r4
   14c4c:	andeq	ip, r2, r0, lsr #1
   14c50:	ldr	r3, [pc, #12]	; 14c64 <BN_free@plt+0x1c88>
   14c54:	ldr	r3, [r3, #8]
   14c58:	cmp	r3, #0
   14c5c:	bxeq	lr
   14c60:	b	12e68 <closelog@plt>
   14c64:	andeq	ip, r2, r0, lsr #1
   14c68:	push	{r4, r5, r6, r7, r8, r9, lr}
   14c6c:	sub	sp, sp, #4096	; 0x1000
   14c70:	ldr	r9, [pc, #440]	; 14e30 <BN_free@plt+0x1e54>
   14c74:	sub	sp, sp, #36	; 0x24
   14c78:	add	ip, sp, #4096	; 0x1000
   14c7c:	ldr	r3, [r9]
   14c80:	add	ip, ip, #28
   14c84:	add	r4, sp, #28
   14c88:	mov	r2, #4096	; 0x1000
   14c8c:	mov	r1, #0
   14c90:	mov	r0, r4
   14c94:	str	r3, [ip]
   14c98:	bl	1294c <memset@plt>
   14c9c:	mov	r1, #0
   14ca0:	ldr	r0, [pc, #396]	; 14e34 <BN_free@plt+0x1e58>
   14ca4:	bl	126f4 <open@plt>
   14ca8:	subs	r5, r0, #0
   14cac:	blt	14e1c <BN_free@plt+0x1e40>
   14cb0:	ldr	r2, [pc, #384]	; 14e38 <BN_free@plt+0x1e5c>
   14cb4:	mov	r1, r4
   14cb8:	bl	12a3c <read@plt>
   14cbc:	mov	r6, r0
   14cc0:	mov	r0, r5
   14cc4:	bl	12cac <close@plt>
   14cc8:	cmp	r6, #0
   14ccc:	blt	14e0c <BN_free@plt+0x1e30>
   14cd0:	mov	r0, r4
   14cd4:	add	r2, sp, #20
   14cd8:	ldr	r1, [pc, #348]	; 14e3c <BN_free@plt+0x1e60>
   14cdc:	bl	12da8 <strtok_r@plt>
   14ce0:	cmp	r0, #0
   14ce4:	beq	14d54 <BN_free@plt+0x1d78>
   14ce8:	ldr	r4, [pc, #336]	; 14e40 <BN_free@plt+0x1e64>
   14cec:	ldr	r8, [pc, #336]	; 14e44 <BN_free@plt+0x1e68>
   14cf0:	ldr	r6, [pc, #324]	; 14e3c <BN_free@plt+0x1e60>
   14cf4:	add	r2, sp, #24
   14cf8:	mov	r1, r4
   14cfc:	bl	12da8 <strtok_r@plt>
   14d00:	add	r2, sp, #24
   14d04:	mov	r1, r4
   14d08:	mov	r0, #0
   14d0c:	bl	12da8 <strtok_r@plt>
   14d10:	add	r2, sp, #24
   14d14:	mov	r1, r4
   14d18:	mov	r5, r0
   14d1c:	mov	r0, #0
   14d20:	bl	12da8 <strtok_r@plt>
   14d24:	cmp	r0, #0
   14d28:	beq	14d3c <BN_free@plt+0x1d60>
   14d2c:	mov	r1, r8
   14d30:	bl	12f94 <strcmp@plt>
   14d34:	subs	r7, r0, #0
   14d38:	beq	14d88 <BN_free@plt+0x1dac>
   14d3c:	add	r2, sp, #20
   14d40:	mov	r1, r6
   14d44:	mov	r0, #0
   14d48:	bl	12da8 <strtok_r@plt>
   14d4c:	cmp	r0, #0
   14d50:	bne	14cf4 <BN_free@plt+0x1d18>
   14d54:	ldr	r0, [pc, #236]	; 14e48 <BN_free@plt+0x1e6c>
   14d58:	bl	12e14 <puts@plt>
   14d5c:	mvn	r7, #0
   14d60:	add	r3, sp, #4096	; 0x1000
   14d64:	add	r3, r3, #28
   14d68:	ldr	r2, [r3]
   14d6c:	ldr	r3, [r9]
   14d70:	mov	r0, r7
   14d74:	cmp	r2, r3
   14d78:	bne	14e2c <BN_free@plt+0x1e50>
   14d7c:	add	sp, sp, #4096	; 0x1000
   14d80:	add	sp, sp, #36	; 0x24
   14d84:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14d88:	cmp	r5, #0
   14d8c:	beq	14d54 <BN_free@plt+0x1d78>
   14d90:	ldr	r3, [pc, #180]	; 14e4c <BN_free@plt+0x1e70>
   14d94:	add	r2, sp, #28
   14d98:	str	r2, [sp, #12]
   14d9c:	mov	r0, r2
   14da0:	str	r3, [sp]
   14da4:	mov	r2, #1
   14da8:	mov	r3, #4096	; 0x1000
   14dac:	ldr	r1, [pc, #132]	; 14e38 <BN_free@plt+0x1e5c>
   14db0:	str	r5, [sp, #4]
   14db4:	bl	12c64 <__snprintf_chk@plt>
   14db8:	ldr	r0, [sp, #12]
   14dbc:	mov	r1, #1
   14dc0:	bl	126f4 <open@plt>
   14dc4:	subs	r4, r0, #0
   14dc8:	blt	14dfc <BN_free@plt+0x1e20>
   14dcc:	ldr	r1, [pc, #124]	; 14e50 <BN_free@plt+0x1e74>
   14dd0:	bl	12c7c <fdopen@plt>
   14dd4:	ldr	r3, [pc, #120]	; 14e54 <BN_free@plt+0x1e78>
   14dd8:	cmp	r0, #0
   14ddc:	str	r0, [r3, #12]
   14de0:	bne	14d60 <BN_free@plt+0x1d84>
   14de4:	mov	r0, r4
   14de8:	bl	12cac <close@plt>
   14dec:	ldr	r0, [pc, #100]	; 14e58 <BN_free@plt+0x1e7c>
   14df0:	bl	12e14 <puts@plt>
   14df4:	mvn	r7, #0
   14df8:	b	14d60 <BN_free@plt+0x1d84>
   14dfc:	ldr	r0, [pc, #88]	; 14e5c <BN_free@plt+0x1e80>
   14e00:	bl	12e14 <puts@plt>
   14e04:	mvn	r7, #0
   14e08:	b	14d60 <BN_free@plt+0x1d84>
   14e0c:	ldr	r0, [pc, #76]	; 14e60 <BN_free@plt+0x1e84>
   14e10:	bl	12e14 <puts@plt>
   14e14:	mvn	r7, #0
   14e18:	b	14d60 <BN_free@plt+0x1d84>
   14e1c:	ldr	r0, [pc, #64]	; 14e64 <BN_free@plt+0x1e88>
   14e20:	bl	12e14 <puts@plt>
   14e24:	mvn	r7, #0
   14e28:	b	14d60 <BN_free@plt+0x1d84>
   14e2c:	bl	12d60 <__stack_chk_fail@plt>
   14e30:	ldrdeq	fp, [r2], -r8
   14e34:	andeq	sl, r1, ip, lsr #9
   14e38:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   14e3c:	andeq	sl, r1, ip, lsr #13
   14e40:	andeq	sl, r1, r8, ror #9
   14e44:	andeq	sl, r1, ip, ror #9
   14e48:	strdeq	sl, [r1], -r4
   14e4c:	andeq	sl, r1, r4, lsl r5
   14e50:	andeq	sl, r1, r0, asr r5
   14e54:	andeq	ip, r2, r0, lsr #1
   14e58:	andeq	sl, r1, r4, asr r5
   14e5c:	andeq	sl, r1, ip, lsr #10
   14e60:	andeq	sl, r1, ip, asr #9
   14e64:			; <UNDEFINED> instruction: 0x0001a4bc
   14e68:	push	{r4, lr}
   14e6c:	ldr	r4, [pc, #24]	; 14e8c <BN_free@plt+0x1eb0>
   14e70:	ldr	r0, [r4, #12]
   14e74:	cmp	r0, #0
   14e78:	popeq	{r4, pc}
   14e7c:	bl	12898 <fclose@plt>
   14e80:	mov	r3, #0
   14e84:	str	r3, [r4, #12]
   14e88:	pop	{r4, pc}
   14e8c:	andeq	ip, r2, r0, lsr #1
   14e90:	push	{r1, r2, r3}
   14e94:	ldr	r3, [pc, #312]	; 14fd4 <BN_free@plt+0x1ff8>
   14e98:	push	{r4, r5, r6, r7, r8, lr}
   14e9c:	sub	sp, sp, #12
   14ea0:	ldr	r5, [pc, #304]	; 14fd8 <BN_free@plt+0x1ffc>
   14ea4:	ldr	r2, [r3]
   14ea8:	add	r7, sp, #40	; 0x28
   14eac:	ldr	r3, [r5]
   14eb0:	cmp	r2, r0
   14eb4:	mov	r6, r0
   14eb8:	ldr	r4, [pc, #284]	; 14fdc <BN_free@plt+0x2000>
   14ebc:	str	r3, [sp, #4]
   14ec0:	str	r7, [sp]
   14ec4:	ldr	r8, [sp, #36]	; 0x24
   14ec8:	bgt	14efc <BN_free@plt+0x1f20>
   14ecc:	ldr	r3, [r4, #8]
   14ed0:	cmp	r3, #0
   14ed4:	beq	14f64 <BN_free@plt+0x1f88>
   14ed8:	sub	r3, r0, #1
   14edc:	cmp	r3, #4
   14ee0:	movhi	r0, #6
   14ee4:	ldrls	r2, [pc, #244]	; 14fe0 <BN_free@plt+0x2004>
   14ee8:	mov	r1, #1
   14eec:	ldrls	r0, [r2, r3, lsl #2]
   14ef0:	ldr	r3, [sp]
   14ef4:	mov	r2, r8
   14ef8:	bl	12d30 <__vsyslog_chk@plt>
   14efc:	ldr	r0, [r4, #12]
   14f00:	cmp	r0, #0
   14f04:	beq	14f44 <BN_free@plt+0x1f68>
   14f08:	mov	r3, r6
   14f0c:	ldr	r2, [pc, #208]	; 14fe4 <BN_free@plt+0x2008>
   14f10:	mov	r1, #1
   14f14:	str	r7, [sp]
   14f18:	bl	12d6c <__fprintf_chk@plt>
   14f1c:	mov	r2, r8
   14f20:	ldr	r3, [sp]
   14f24:	mov	r1, #1
   14f28:	ldr	r0, [r4, #12]
   14f2c:	bl	12c1c <__vfprintf_chk@plt>
   14f30:	ldr	r1, [r4, #12]
   14f34:	mov	r0, #10
   14f38:	bl	12d78 <fputc@plt>
   14f3c:	ldr	r0, [r4, #12]
   14f40:	bl	12ae4 <fflush@plt>
   14f44:	ldr	r2, [sp, #4]
   14f48:	ldr	r3, [r5]
   14f4c:	cmp	r2, r3
   14f50:	bne	14fd0 <BN_free@plt+0x1ff4>
   14f54:	add	sp, sp, #12
   14f58:	pop	{r4, r5, r6, r7, r8, lr}
   14f5c:	add	sp, sp, #12
   14f60:	bx	lr
   14f64:	ldr	r3, [r4, #4]
   14f68:	cmp	r3, #0
   14f6c:	bne	14f9c <BN_free@plt+0x1fc0>
   14f70:	ldr	r0, [r4]
   14f74:	cmp	r0, #0
   14f78:	beq	14fac <BN_free@plt+0x1fd0>
   14f7c:	ldr	r3, [sp]
   14f80:	mov	r2, r8
   14f84:	mov	r1, #1
   14f88:	bl	12c1c <__vfprintf_chk@plt>
   14f8c:	ldr	r1, [r4]
   14f90:	mov	r0, #10
   14f94:	bl	12d78 <fputc@plt>
   14f98:	b	14efc <BN_free@plt+0x1f20>
   14f9c:	bl	14b88 <BN_free@plt+0x1bac>
   14fa0:	ldr	r0, [r4]
   14fa4:	cmp	r0, #0
   14fa8:	bne	14f7c <BN_free@plt+0x1fa0>
   14fac:	ldr	r1, [pc, #52]	; 14fe8 <BN_free@plt+0x200c>
   14fb0:	ldr	r3, [sp]
   14fb4:	mov	r2, r8
   14fb8:	ldr	r0, [r1]
   14fbc:	mov	r1, #1
   14fc0:	bl	12c1c <__vfprintf_chk@plt>
   14fc4:	mov	r0, #10
   14fc8:	bl	128d4 <putchar@plt>
   14fcc:	b	14efc <BN_free@plt+0x1f20>
   14fd0:	bl	12d60 <__stack_chk_fail@plt>
   14fd4:	andeq	ip, r2, r8
   14fd8:	ldrdeq	fp, [r2], -r8
   14fdc:	andeq	ip, r2, r0, lsr #1
   14fe0:	andeq	sl, r1, ip, lsr r4
   14fe4:	andeq	sl, r1, r8, ror #10
   14fe8:	andeq	ip, r2, r4, lsl r0
   14fec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ff0:	mov	r8, r0
   14ff4:	ldr	r5, [pc, #784]	; 1530c <BN_free@plt+0x2330>
   14ff8:	sub	sp, sp, #20
   14ffc:	mov	r4, r2
   15000:	ldr	r0, [r5, #12]
   15004:	str	r1, [sp, #12]
   15008:	cmp	r0, #0
   1500c:	mov	r7, r3
   15010:	ldr	fp, [sp, #56]	; 0x38
   15014:	beq	1507c <BN_free@plt+0x20a0>
   15018:	str	r3, [sp, #4]
   1501c:	str	r1, [sp]
   15020:	mov	r3, r8
   15024:	ldr	r2, [pc, #740]	; 15310 <BN_free@plt+0x2334>
   15028:	mov	r1, #1
   1502c:	bl	12d6c <__fprintf_chk@plt>
   15030:	cmp	r4, #0
   15034:	beq	151a8 <BN_free@plt+0x21cc>
   15038:	cmp	fp, #0
   1503c:	ldr	r0, [r5, #12]
   15040:	beq	15208 <BN_free@plt+0x222c>
   15044:	cmp	r7, #0
   15048:	beq	15078 <BN_free@plt+0x209c>
   1504c:	add	r9, r4, r7
   15050:	ldr	sl, [pc, #700]	; 15314 <BN_free@plt+0x2338>
   15054:	sub	r9, r9, #1
   15058:	sub	r6, r4, #1
   1505c:	ldrb	r3, [r6, #1]!
   15060:	mov	r2, sl
   15064:	mov	r1, #1
   15068:	bl	12d6c <__fprintf_chk@plt>
   1506c:	cmp	r9, r6
   15070:	ldr	r0, [r5, #12]
   15074:	bne	1505c <BN_free@plt+0x2080>
   15078:	bl	12ae4 <fflush@plt>
   1507c:	ldr	r3, [pc, #660]	; 15318 <BN_free@plt+0x233c>
   15080:	ldr	r3, [r3]
   15084:	cmp	r3, r8
   15088:	bgt	15198 <BN_free@plt+0x21bc>
   1508c:	ldr	r3, [r5, #8]
   15090:	cmp	r3, #0
   15094:	beq	15110 <BN_free@plt+0x2134>
   15098:	add	r6, r7, r7, lsl #1
   1509c:	cmp	r4, #0
   150a0:	add	r6, r6, #1
   150a4:	beq	152b4 <BN_free@plt+0x22d8>
   150a8:	cmp	r7, #0
   150ac:	beq	151c4 <BN_free@plt+0x21e8>
   150b0:	cmp	fp, #0
   150b4:	beq	1528c <BN_free@plt+0x22b0>
   150b8:	mov	r0, r6
   150bc:	bl	12d48 <malloc@plt>
   150c0:	subs	r9, r0, #0
   150c4:	beq	152f8 <BN_free@plt+0x231c>
   150c8:	add	fp, r4, r7
   150cc:	ldr	sl, [pc, #576]	; 15314 <BN_free@plt+0x2338>
   150d0:	sub	fp, fp, #1
   150d4:	sub	r4, r4, #1
   150d8:	mov	r5, r9
   150dc:	ldrb	r2, [r4, #1]!
   150e0:	mov	r0, r5
   150e4:	mvn	r3, #0
   150e8:	str	r2, [sp, #4]
   150ec:	str	sl, [sp]
   150f0:	mov	r2, #1
   150f4:	mov	r1, #4
   150f8:	bl	12c64 <__snprintf_chk@plt>
   150fc:	cmp	fp, r4
   15100:	add	r5, r5, #3
   15104:	bne	150dc <BN_free@plt+0x2100>
   15108:	mov	r4, r9
   1510c:	b	151cc <BN_free@plt+0x21f0>
   15110:	ldr	r3, [r5, #4]
   15114:	cmp	r3, #0
   15118:	bne	151a0 <BN_free@plt+0x21c4>
   1511c:	ldr	r0, [r5]
   15120:	cmp	r0, #0
   15124:	beq	15228 <BN_free@plt+0x224c>
   15128:	str	r7, [sp]
   1512c:	ldr	r3, [sp, #12]
   15130:	ldr	r2, [pc, #484]	; 1531c <BN_free@plt+0x2340>
   15134:	mov	r1, #1
   15138:	bl	12d6c <__fprintf_chk@plt>
   1513c:	cmp	r4, #0
   15140:	beq	152bc <BN_free@plt+0x22e0>
   15144:	cmp	fp, #0
   15148:	ldr	r0, [r5]
   1514c:	beq	15298 <BN_free@plt+0x22bc>
   15150:	cmp	r7, #0
   15154:	beq	15184 <BN_free@plt+0x21a8>
   15158:	add	r7, r4, r7
   1515c:	ldr	r6, [pc, #432]	; 15314 <BN_free@plt+0x2338>
   15160:	sub	r7, r7, #1
   15164:	sub	r4, r4, #1
   15168:	ldrb	r3, [r4, #1]!
   1516c:	mov	r2, r6
   15170:	mov	r1, #1
   15174:	bl	12d6c <__fprintf_chk@plt>
   15178:	cmp	r4, r7
   1517c:	ldr	r0, [r5]
   15180:	bne	15168 <BN_free@plt+0x218c>
   15184:	mov	r1, r0
   15188:	mov	r0, #10
   1518c:	add	sp, sp, #20
   15190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15194:	b	12d78 <fputc@plt>
   15198:	add	sp, sp, #20
   1519c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151a0:	bl	14b88 <BN_free@plt+0x1bac>
   151a4:	b	1511c <BN_free@plt+0x2140>
   151a8:	ldr	r3, [r5, #12]
   151ac:	mov	r2, #8
   151b0:	mov	r1, #1
   151b4:	ldr	r0, [pc, #356]	; 15320 <BN_free@plt+0x2344>
   151b8:	bl	12cd0 <fwrite@plt>
   151bc:	ldr	r0, [r5, #12]
   151c0:	b	15078 <BN_free@plt+0x209c>
   151c4:	ldr	r9, [pc, #344]	; 15324 <BN_free@plt+0x2348>
   151c8:	mov	r4, r7
   151cc:	sub	r8, r8, #1
   151d0:	cmp	r8, #4
   151d4:	movhi	r0, #6
   151d8:	ldrls	r3, [pc, #328]	; 15328 <BN_free@plt+0x234c>
   151dc:	stm	sp, {r7, r9}
   151e0:	ldr	r2, [pc, #324]	; 1532c <BN_free@plt+0x2350>
   151e4:	ldrls	r0, [r3, r8, lsl #2]
   151e8:	mov	r1, #1
   151ec:	ldr	r3, [sp, #12]
   151f0:	bl	12ca0 <__syslog_chk@plt>
   151f4:	mov	r1, r6
   151f8:	mov	r0, r4
   151fc:	add	sp, sp, #20
   15200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15204:	b	14704 <BN_free@plt+0x1728>
   15208:	mov	r3, r0
   1520c:	mov	r2, #11
   15210:	mov	r1, #1
   15214:	ldr	r0, [pc, #276]	; 15330 <BN_free@plt+0x2354>
   15218:	bl	12cd0 <fwrite@plt>
   1521c:	ldr	r0, [r5, #12]
   15220:	bl	12ae4 <fflush@plt>
   15224:	b	1507c <BN_free@plt+0x20a0>
   15228:	ldr	r2, [sp, #12]
   1522c:	mov	r3, r7
   15230:	ldr	r1, [pc, #228]	; 1531c <BN_free@plt+0x2340>
   15234:	mov	r0, #1
   15238:	bl	128bc <__printf_chk@plt>
   1523c:	cmp	r4, #0
   15240:	beq	152e8 <BN_free@plt+0x230c>
   15244:	cmp	fp, #0
   15248:	beq	152d8 <BN_free@plt+0x22fc>
   1524c:	cmp	r7, #0
   15250:	beq	1527c <BN_free@plt+0x22a0>
   15254:	add	r7, r4, r7
   15258:	ldr	r5, [pc, #180]	; 15314 <BN_free@plt+0x2338>
   1525c:	sub	r7, r7, #1
   15260:	sub	r4, r4, #1
   15264:	ldrb	r2, [r4, #1]!
   15268:	mov	r1, r5
   1526c:	mov	r0, #1
   15270:	bl	128bc <__printf_chk@plt>
   15274:	cmp	r7, r4
   15278:	bne	15264 <BN_free@plt+0x2288>
   1527c:	mov	r0, #10
   15280:	add	sp, sp, #20
   15284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15288:	b	128d4 <putchar@plt>
   1528c:	ldr	r9, [pc, #160]	; 15334 <BN_free@plt+0x2358>
   15290:	mov	r4, fp
   15294:	b	151cc <BN_free@plt+0x21f0>
   15298:	mov	r3, r0
   1529c:	mov	r2, #10
   152a0:	mov	r1, #1
   152a4:	ldr	r0, [pc, #136]	; 15334 <BN_free@plt+0x2358>
   152a8:	bl	12cd0 <fwrite@plt>
   152ac:	ldr	r0, [r5]
   152b0:	b	15184 <BN_free@plt+0x21a8>
   152b4:	ldr	r9, [pc, #124]	; 15338 <BN_free@plt+0x235c>
   152b8:	b	151cc <BN_free@plt+0x21f0>
   152bc:	ldr	r3, [r5]
   152c0:	mov	r2, #7
   152c4:	mov	r1, #1
   152c8:	ldr	r0, [pc, #104]	; 15338 <BN_free@plt+0x235c>
   152cc:	bl	12cd0 <fwrite@plt>
   152d0:	ldr	r0, [r5]
   152d4:	b	15184 <BN_free@plt+0x21a8>
   152d8:	ldr	r1, [pc, #84]	; 15334 <BN_free@plt+0x2358>
   152dc:	mov	r0, #1
   152e0:	bl	128bc <__printf_chk@plt>
   152e4:	b	1527c <BN_free@plt+0x22a0>
   152e8:	ldr	r1, [pc, #72]	; 15338 <BN_free@plt+0x235c>
   152ec:	mov	r0, #1
   152f0:	bl	128bc <__printf_chk@plt>
   152f4:	b	1527c <BN_free@plt+0x22a0>
   152f8:	ldr	r1, [pc, #60]	; 1533c <BN_free@plt+0x2360>
   152fc:	mov	r0, #5
   15300:	add	sp, sp, #20
   15304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15308:	b	14e90 <BN_free@plt+0x1eb4>
   1530c:	andeq	ip, r2, r0, lsr #1
   15310:	andeq	sl, r1, r8, lsl #11
   15314:	andeq	sl, r1, ip, lsr #11
   15318:	andeq	ip, r2, r8
   1531c:	andeq	sl, r1, r0, lsl #12
   15320:	andeq	sl, r1, r4, lsl #13
   15324:	andeq	sl, r1, ip, lsl #13
   15328:	andeq	sl, r1, ip, lsr r4
   1532c:	andeq	sl, r1, r4, ror #11
   15330:	andeq	sl, r1, ip, asr r6
   15334:	andeq	sl, r1, ip, ror r5
   15338:	andeq	sl, r1, r4, ror r5
   1533c:			; <UNDEFINED> instruction: 0x0001a5b4
   15340:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15344:	sub	sp, sp, #20
   15348:	ldr	r5, [pc, #996]	; 15734 <BN_free@plt+0x2758>
   1534c:	mov	r8, r0
   15350:	mov	fp, r3
   15354:	ldr	r0, [r5, #12]
   15358:	ldr	r3, [sp, #56]	; 0x38
   1535c:	cmp	r0, #0
   15360:	mov	sl, r1
   15364:	mov	r4, r2
   15368:	str	r3, [sp, #8]
   1536c:	beq	153d4 <BN_free@plt+0x23f8>
   15370:	strd	sl, [sp]
   15374:	mov	r3, r8
   15378:	ldr	r2, [pc, #952]	; 15738 <BN_free@plt+0x275c>
   1537c:	mov	r1, #1
   15380:	bl	12d6c <__fprintf_chk@plt>
   15384:	cmp	r4, #0
   15388:	beq	1567c <BN_free@plt+0x26a0>
   1538c:	ldr	r3, [sp, #8]
   15390:	ldr	r0, [r5, #12]
   15394:	cmp	r3, #0
   15398:	beq	15698 <BN_free@plt+0x26bc>
   1539c:	cmp	fp, #0
   153a0:	beq	153d0 <BN_free@plt+0x23f4>
   153a4:	sub	r7, fp, #1
   153a8:	ldr	r9, [pc, #908]	; 1573c <BN_free@plt+0x2760>
   153ac:	add	r7, r4, r7
   153b0:	sub	r6, r4, #1
   153b4:	ldrb	r3, [r6, #1]!
   153b8:	mov	r2, r9
   153bc:	mov	r1, #1
   153c0:	bl	12d6c <__fprintf_chk@plt>
   153c4:	cmp	r7, r6
   153c8:	ldr	r0, [r5, #12]
   153cc:	bne	153b4 <BN_free@plt+0x23d8>
   153d0:	bl	12ae4 <fflush@plt>
   153d4:	ldr	r3, [pc, #868]	; 15740 <BN_free@plt+0x2764>
   153d8:	ldr	r3, [r3]
   153dc:	cmp	r3, r8
   153e0:	bgt	15550 <BN_free@plt+0x2574>
   153e4:	ldr	r3, [r5, #8]
   153e8:	cmp	r3, #0
   153ec:	bne	156b8 <BN_free@plt+0x26dc>
   153f0:	ldr	r3, [r5, #4]
   153f4:	cmp	r3, #0
   153f8:	bne	15558 <BN_free@plt+0x257c>
   153fc:	ldr	r0, [r5]
   15400:	ldr	r3, [sp, #8]
   15404:	cmp	r0, #0
   15408:	beq	1556c <BN_free@plt+0x2590>
   1540c:	cmp	r3, #0
   15410:	beq	156dc <BN_free@plt+0x2700>
   15414:	cmp	r4, #0
   15418:	beq	156f8 <BN_free@plt+0x271c>
   1541c:	str	fp, [sp]
   15420:	mov	r3, sl
   15424:	ldr	r2, [pc, #792]	; 15744 <BN_free@plt+0x2768>
   15428:	mov	r1, #1
   1542c:	bl	12d6c <__fprintf_chk@plt>
   15430:	cmp	fp, #0
   15434:	beq	15550 <BN_free@plt+0x2574>
   15438:	bl	12d18 <__ctype_b_loc@plt>
   1543c:	ldr	sl, [pc, #760]	; 1573c <BN_free@plt+0x2760>
   15440:	ldr	r8, [pc, #768]	; 15748 <BN_free@plt+0x276c>
   15444:	mov	r9, r0
   15448:	cmp	fp, #16
   1544c:	movcc	ip, fp
   15450:	movcs	ip, #16
   15454:	mov	r6, ip
   15458:	ldr	r3, [r5]
   1545c:	mov	r2, #4
   15460:	mov	r1, #1
   15464:	ldr	r0, [pc, #736]	; 1574c <BN_free@plt+0x2770>
   15468:	str	ip, [sp, #8]
   1546c:	bl	12cd0 <fwrite@plt>
   15470:	add	r3, r4, r6
   15474:	sub	r4, r4, #1
   15478:	sub	r7, r3, #1
   1547c:	mov	r6, r4
   15480:	str	r3, [sp, #12]
   15484:	ldrb	r3, [r6, #1]!
   15488:	mov	r2, sl
   1548c:	mov	r1, #1
   15490:	ldr	r0, [r5]
   15494:	bl	12d6c <__fprintf_chk@plt>
   15498:	cmp	r7, r6
   1549c:	bne	15484 <BN_free@plt+0x24a8>
   154a0:	cmp	fp, #15
   154a4:	ldrls	r6, [sp, #8]
   154a8:	bhi	154cc <BN_free@plt+0x24f0>
   154ac:	add	r6, r6, #1
   154b0:	ldr	r3, [r5]
   154b4:	mov	r2, #3
   154b8:	mov	r1, #1
   154bc:	mov	r0, r8
   154c0:	bl	12cd0 <fwrite@plt>
   154c4:	cmp	r6, #16
   154c8:	bne	154ac <BN_free@plt+0x24d0>
   154cc:	ldr	r3, [r5]
   154d0:	mov	r2, #3
   154d4:	mov	r1, #1
   154d8:	mov	r0, r8
   154dc:	bl	12cd0 <fwrite@plt>
   154e0:	ldrb	r3, [r4, #1]!
   154e4:	ldr	lr, [r9]
   154e8:	ldr	r2, [r5]
   154ec:	mov	r0, #95	; 0x5f
   154f0:	lsl	ip, r3, #1
   154f4:	mov	r1, r2
   154f8:	ldrh	ip, [lr, ip]
   154fc:	tst	ip, #16384	; 0x4000
   15500:	movne	r0, r3
   15504:	bl	12d78 <fputc@plt>
   15508:	cmp	r4, r7
   1550c:	bne	154e0 <BN_free@plt+0x2504>
   15510:	cmp	fp, #15
   15514:	ldrls	r4, [sp, #8]
   15518:	bhi	15534 <BN_free@plt+0x2558>
   1551c:	add	r4, r4, #1
   15520:	ldr	r1, [r5]
   15524:	mov	r0, #32
   15528:	bl	12d78 <fputc@plt>
   1552c:	cmp	r4, #16
   15530:	bne	1551c <BN_free@plt+0x2540>
   15534:	ldr	r1, [r5]
   15538:	mov	r0, #10
   1553c:	bl	12d78 <fputc@plt>
   15540:	ldr	r3, [sp, #8]
   15544:	ldr	r4, [sp, #12]
   15548:	subs	fp, fp, r3
   1554c:	bne	15448 <BN_free@plt+0x246c>
   15550:	add	sp, sp, #20
   15554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15558:	bl	14b88 <BN_free@plt+0x1bac>
   1555c:	ldr	r0, [r5]
   15560:	ldr	r3, [sp, #8]
   15564:	cmp	r0, #0
   15568:	bne	1540c <BN_free@plt+0x2430>
   1556c:	cmp	r3, #0
   15570:	beq	15708 <BN_free@plt+0x272c>
   15574:	cmp	r4, #0
   15578:	beq	15724 <BN_free@plt+0x2748>
   1557c:	mov	r2, sl
   15580:	mov	r3, fp
   15584:	ldr	r1, [pc, #440]	; 15744 <BN_free@plt+0x2768>
   15588:	mov	r0, #1
   1558c:	bl	128bc <__printf_chk@plt>
   15590:	cmp	fp, #0
   15594:	beq	15550 <BN_free@plt+0x2574>
   15598:	bl	12d18 <__ctype_b_loc@plt>
   1559c:	ldr	r7, [pc, #408]	; 1573c <BN_free@plt+0x2760>
   155a0:	ldr	r5, [pc, #416]	; 15748 <BN_free@plt+0x276c>
   155a4:	mov	r6, r0
   155a8:	cmp	fp, #16
   155ac:	movcc	r8, fp
   155b0:	movcs	r8, #16
   155b4:	ldr	r1, [pc, #400]	; 1574c <BN_free@plt+0x2770>
   155b8:	mov	r0, #1
   155bc:	bl	128bc <__printf_chk@plt>
   155c0:	add	r3, r4, r8
   155c4:	sub	r4, r4, #1
   155c8:	sub	sl, r3, #1
   155cc:	mov	r9, r4
   155d0:	str	r3, [sp, #8]
   155d4:	ldrb	r2, [r9, #1]!
   155d8:	mov	r1, r7
   155dc:	mov	r0, #1
   155e0:	bl	128bc <__printf_chk@plt>
   155e4:	cmp	sl, r9
   155e8:	bne	155d4 <BN_free@plt+0x25f8>
   155ec:	cmp	fp, #15
   155f0:	movls	r9, r8
   155f4:	bhi	15610 <BN_free@plt+0x2634>
   155f8:	add	r9, r9, #1
   155fc:	mov	r1, r5
   15600:	mov	r0, #1
   15604:	bl	128bc <__printf_chk@plt>
   15608:	cmp	r9, #16
   1560c:	bne	155f8 <BN_free@plt+0x261c>
   15610:	mov	r1, r5
   15614:	mov	r0, #1
   15618:	bl	128bc <__printf_chk@plt>
   1561c:	ldrb	r3, [r4, #1]!
   15620:	ldr	r1, [r6]
   15624:	mov	r0, #95	; 0x5f
   15628:	lsl	r2, r3, #1
   1562c:	ldrh	r2, [r1, r2]
   15630:	tst	r2, #16384	; 0x4000
   15634:	movne	r0, r3
   15638:	bl	128d4 <putchar@plt>
   1563c:	cmp	sl, r4
   15640:	bne	1561c <BN_free@plt+0x2640>
   15644:	cmp	fp, #15
   15648:	movls	r4, r8
   1564c:	bhi	15664 <BN_free@plt+0x2688>
   15650:	add	r4, r4, #1
   15654:	mov	r0, #32
   15658:	bl	128d4 <putchar@plt>
   1565c:	cmp	r4, #16
   15660:	bne	15650 <BN_free@plt+0x2674>
   15664:	mov	r0, #10
   15668:	bl	128d4 <putchar@plt>
   1566c:	subs	fp, fp, r8
   15670:	ldr	r4, [sp, #8]
   15674:	bne	155a8 <BN_free@plt+0x25cc>
   15678:	b	15550 <BN_free@plt+0x2574>
   1567c:	ldr	r3, [r5, #12]
   15680:	mov	r2, #8
   15684:	mov	r1, #1
   15688:	ldr	r0, [pc, #192]	; 15750 <BN_free@plt+0x2774>
   1568c:	bl	12cd0 <fwrite@plt>
   15690:	ldr	r0, [r5, #12]
   15694:	b	153d0 <BN_free@plt+0x23f4>
   15698:	mov	r3, r0
   1569c:	mov	r2, #11
   156a0:	mov	r1, #1
   156a4:	ldr	r0, [pc, #168]	; 15754 <BN_free@plt+0x2778>
   156a8:	bl	12cd0 <fwrite@plt>
   156ac:	ldr	r0, [r5, #12]
   156b0:	bl	12ae4 <fflush@plt>
   156b4:	b	153d4 <BN_free@plt+0x23f8>
   156b8:	ldr	r3, [sp, #8]
   156bc:	mov	r2, r4
   156c0:	str	r3, [sp, #56]	; 0x38
   156c4:	mov	r1, sl
   156c8:	mov	r3, fp
   156cc:	mov	r0, r8
   156d0:	add	sp, sp, #20
   156d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156d8:	b	14fec <BN_free@plt+0x2010>
   156dc:	ldr	r2, [pc, #116]	; 15758 <BN_free@plt+0x277c>
   156e0:	mov	r3, sl
   156e4:	str	fp, [sp, #56]	; 0x38
   156e8:	mov	r1, #1
   156ec:	add	sp, sp, #20
   156f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156f4:	b	12d6c <__fprintf_chk@plt>
   156f8:	str	fp, [sp, #56]	; 0x38
   156fc:	mov	r3, sl
   15700:	ldr	r2, [pc, #84]	; 1575c <BN_free@plt+0x2780>
   15704:	b	156e8 <BN_free@plt+0x270c>
   15708:	ldr	r1, [pc, #72]	; 15758 <BN_free@plt+0x277c>
   1570c:	mov	r3, fp
   15710:	mov	r2, sl
   15714:	mov	r0, #1
   15718:	add	sp, sp, #20
   1571c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15720:	b	128bc <__printf_chk@plt>
   15724:	mov	r3, fp
   15728:	mov	r2, sl
   1572c:	ldr	r1, [pc, #40]	; 1575c <BN_free@plt+0x2780>
   15730:	b	15714 <BN_free@plt+0x2738>
   15734:	andeq	ip, r2, r0, lsr #1
   15738:	andeq	sl, r1, r8, lsl r6
   1573c:	andeq	sl, r1, ip, lsr #11
   15740:	andeq	ip, r2, r8
   15744:	muleq	r1, r0, r6
   15748:			; <UNDEFINED> instruction: 0x0001a6b8
   1574c:			; <UNDEFINED> instruction: 0x0001a6b0
   15750:	andeq	sl, r1, r4, lsl #13
   15754:	andeq	sl, r1, ip, asr r6
   15758:	andeq	sl, r1, r0, asr #12
   1575c:	andeq	sl, r1, r8, ror #12
   15760:	push	{lr}		; (str lr, [sp, #-4]!)
   15764:	sub	sp, sp, #12
   15768:	mov	ip, #1
   1576c:	str	ip, [sp]
   15770:	bl	14fec <BN_free@plt+0x2010>
   15774:	add	sp, sp, #12
   15778:	pop	{pc}		; (ldr pc, [sp], #4)
   1577c:	ldr	ip, [pc, #24]	; 1579c <BN_free@plt+0x27c0>
   15780:	push	{lr}		; (str lr, [sp, #-4]!)
   15784:	sub	sp, sp, #12
   15788:	ldr	ip, [ip, #16]
   1578c:	str	ip, [sp]
   15790:	bl	14fec <BN_free@plt+0x2010>
   15794:	add	sp, sp, #12
   15798:	pop	{pc}		; (ldr pc, [sp], #4)
   1579c:	andeq	ip, r2, r0, lsr #1
   157a0:	push	{lr}		; (str lr, [sp, #-4]!)
   157a4:	sub	sp, sp, #12
   157a8:	mov	ip, #1
   157ac:	str	ip, [sp]
   157b0:	bl	15340 <BN_free@plt+0x2364>
   157b4:	add	sp, sp, #12
   157b8:	pop	{pc}		; (ldr pc, [sp], #4)
   157bc:	ldr	ip, [pc, #24]	; 157dc <BN_free@plt+0x2800>
   157c0:	push	{lr}		; (str lr, [sp, #-4]!)
   157c4:	sub	sp, sp, #12
   157c8:	ldr	ip, [ip, #16]
   157cc:	str	ip, [sp]
   157d0:	bl	15340 <BN_free@plt+0x2364>
   157d4:	add	sp, sp, #12
   157d8:	pop	{pc}		; (ldr pc, [sp], #4)
   157dc:	andeq	ip, r2, r0, lsr #1
   157e0:	push	{r4, r5, r6, lr}
   157e4:	subs	r4, r0, #0
   157e8:	beq	15864 <BN_free@plt+0x2888>
   157ec:	ldr	r5, [pc, #232]	; 158dc <BN_free@plt+0x2900>
   157f0:	ldr	r6, [r5, #20]
   157f4:	cmp	r6, #0
   157f8:	beq	1586c <BN_free@plt+0x2890>
   157fc:	mov	r1, r4
   15800:	mov	r0, r6
   15804:	bl	12f94 <strcmp@plt>
   15808:	cmp	r0, #0
   1580c:	bne	1586c <BN_free@plt+0x2890>
   15810:	mov	r0, r4
   15814:	mov	r2, #416	; 0x1a0
   15818:	ldr	r1, [pc, #192]	; 158e0 <BN_free@plt+0x2904>
   1581c:	bl	126f4 <open@plt>
   15820:	subs	r4, r0, #0
   15824:	blt	158a8 <BN_free@plt+0x28cc>
   15828:	mov	r2, #1
   1582c:	mov	r1, #2
   15830:	bl	12ef8 <fcntl@plt>
   15834:	cmp	r0, #0
   15838:	blt	15884 <BN_free@plt+0x28a8>
   1583c:	ldr	r1, [pc, #160]	; 158e4 <BN_free@plt+0x2908>
   15840:	mov	r0, r4
   15844:	bl	12c7c <fdopen@plt>
   15848:	cmp	r0, #0
   1584c:	str	r0, [r5]
   15850:	beq	158c0 <BN_free@plt+0x28e4>
   15854:	mov	r3, #0
   15858:	mov	r1, r3
   1585c:	mov	r2, #1
   15860:	bl	12d0c <setvbuf@plt>
   15864:	mov	r0, #0
   15868:	pop	{r4, r5, r6, pc}
   1586c:	mov	r0, r6
   15870:	bl	12a30 <free@plt>
   15874:	mov	r0, r4
   15878:	bl	12d3c <strdup@plt>
   1587c:	str	r0, [r5, #20]
   15880:	b	15810 <BN_free@plt+0x2834>
   15884:	bl	12fac <__errno_location@plt>
   15888:	ldr	r0, [r0]
   1588c:	bl	12730 <strerror@plt>
   15890:	ldr	r2, [pc, #80]	; 158e8 <BN_free@plt+0x290c>
   15894:	ldr	r1, [pc, #80]	; 158ec <BN_free@plt+0x2910>
   15898:	mov	r3, r0
   1589c:	mov	r0, #2
   158a0:	bl	14e90 <BN_free@plt+0x1eb4>
   158a4:	b	1583c <BN_free@plt+0x2860>
   158a8:	ldr	r2, [pc, #56]	; 158e8 <BN_free@plt+0x290c>
   158ac:	ldr	r1, [pc, #60]	; 158f0 <BN_free@plt+0x2914>
   158b0:	mov	r0, #5
   158b4:	bl	14e90 <BN_free@plt+0x1eb4>
   158b8:	mvn	r0, #0
   158bc:	pop	{r4, r5, r6, pc}
   158c0:	ldr	r1, [pc, #44]	; 158f4 <BN_free@plt+0x2918>
   158c4:	mov	r0, #5
   158c8:	bl	14e90 <BN_free@plt+0x1eb4>
   158cc:	mov	r0, r4
   158d0:	bl	12cac <close@plt>
   158d4:	mvn	r0, #0
   158d8:	pop	{r4, r5, r6, pc}
   158dc:	andeq	ip, r2, r0, lsr #1
   158e0:	andeq	r0, r0, r1, asr #8
   158e4:	andeq	sl, r1, r4, lsr r7
   158e8:	andeq	sl, r1, r0, asr r4
   158ec:	andeq	sl, r1, r0, lsl #14
   158f0:			; <UNDEFINED> instruction: 0x0001a6bc
   158f4:	andeq	sl, r1, r8, lsr r7
   158f8:	push	{r4, r5, r6, lr}
   158fc:	ldr	r4, [pc, #36]	; 15928 <BN_free@plt+0x294c>
   15900:	ldr	r0, [r4]
   15904:	cmp	r0, #0
   15908:	popeq	{r4, r5, r6, pc}
   1590c:	bl	12898 <fclose@plt>
   15910:	mov	r5, #0
   15914:	ldr	r0, [r4, #20]
   15918:	str	r5, [r4]
   1591c:	bl	12a30 <free@plt>
   15920:	str	r5, [r4, #20]
   15924:	pop	{r4, r5, r6, pc}
   15928:	andeq	ip, r2, r0, lsr #1
   1592c:	ldr	r3, [pc, #68]	; 15978 <BN_free@plt+0x299c>
   15930:	push	{r4, r5, r6, lr}
   15934:	ldr	r0, [r3, #20]
   15938:	cmp	r0, #0
   1593c:	moveq	r4, r0
   15940:	beq	15968 <BN_free@plt+0x298c>
   15944:	bl	12d3c <strdup@plt>
   15948:	subs	r5, r0, #0
   1594c:	beq	15970 <BN_free@plt+0x2994>
   15950:	bl	158f8 <BN_free@plt+0x291c>
   15954:	mov	r0, r5
   15958:	bl	157e0 <BN_free@plt+0x2804>
   1595c:	mov	r4, r0
   15960:	mov	r0, r5
   15964:	bl	12a30 <free@plt>
   15968:	mov	r0, r4
   1596c:	pop	{r4, r5, r6, pc}
   15970:	mvn	r4, #0
   15974:	b	15968 <BN_free@plt+0x298c>
   15978:	andeq	ip, r2, r0, lsr #1
   1597c:	ldr	r2, [pc, #16]	; 15994 <BN_free@plt+0x29b8>
   15980:	mov	r3, #0
   15984:	mov	r1, r3
   15988:	ldr	r0, [r2]
   1598c:	mov	r2, #1
   15990:	b	12d0c <setvbuf@plt>
   15994:	andeq	ip, r2, r4, lsl r0
   15998:	ldr	r3, [pc, #4]	; 159a4 <BN_free@plt+0x29c8>
   1599c:	str	r0, [r3, #24]
   159a0:	bx	lr
   159a4:	andeq	ip, r2, r0, lsr #1
   159a8:	ldr	r3, [pc, #4]	; 159b4 <BN_free@plt+0x29d8>
   159ac:	str	r0, [r3, #28]
   159b0:	bx	lr
   159b4:	andeq	ip, r2, r0, lsr #1
   159b8:	push	{r2, r3}
   159bc:	mvn	r3, #0
   159c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159c4:	sub	sp, sp, #156	; 0x9c
   159c8:	ldr	r7, [pc, #324]	; 15b14 <BN_free@plt+0x2b38>
   159cc:	ldr	r8, [sp, #192]	; 0xc0
   159d0:	add	r5, sp, #196	; 0xc4
   159d4:	ldr	ip, [r7]
   159d8:	mov	sl, r1
   159dc:	mov	r1, #0
   159e0:	mov	r2, #1
   159e4:	mov	fp, r0
   159e8:	str	r8, [sp]
   159ec:	mov	r0, r1
   159f0:	str	r5, [sp, #4]
   159f4:	str	ip, [sp, #148]	; 0x94
   159f8:	str	r5, [sp, #12]
   159fc:	bl	12c04 <__vsnprintf_chk@plt>
   15a00:	add	r6, r0, #1
   15a04:	mov	r0, r6
   15a08:	bl	12d48 <malloc@plt>
   15a0c:	subs	r4, r0, #0
   15a10:	beq	15b00 <BN_free@plt+0x2b24>
   15a14:	ldr	r9, [pc, #252]	; 15b18 <BN_free@plt+0x2b3c>
   15a18:	mov	r2, #0
   15a1c:	str	r5, [sp, #12]
   15a20:	ldr	r3, [r9, #28]
   15a24:	strb	r2, [sp, #16]
   15a28:	cmp	r3, #0
   15a2c:	beq	15a74 <BN_free@plt+0x2a98>
   15a30:	mov	r0, fp
   15a34:	blx	r3
   15a38:	cmp	r0, #0
   15a3c:	beq	15a74 <BN_free@plt+0x2a98>
   15a40:	ldr	r2, [pc, #212]	; 15b1c <BN_free@plt+0x2b40>
   15a44:	mov	r3, #130	; 0x82
   15a48:	add	r5, sp, #16
   15a4c:	str	r0, [sp, #4]
   15a50:	str	r2, [sp]
   15a54:	mov	r1, r3
   15a58:	mov	r0, r5
   15a5c:	mov	r2, #1
   15a60:	bl	12c64 <__snprintf_chk@plt>
   15a64:	cmp	r0, #129	; 0x81
   15a68:	movhi	r3, #0
   15a6c:	strbhi	r3, [sp, #16]
   15a70:	b	15a78 <BN_free@plt+0x2a9c>
   15a74:	add	r5, sp, #16
   15a78:	ldr	r3, [sp, #12]
   15a7c:	str	r8, [sp]
   15a80:	str	r3, [sp, #4]
   15a84:	mov	r2, #1
   15a88:	mvn	r3, #0
   15a8c:	mov	r1, r6
   15a90:	mov	r0, r4
   15a94:	bl	12c04 <__vsnprintf_chk@plt>
   15a98:	mov	r2, r5
   15a9c:	mov	r3, r4
   15aa0:	ldr	r1, [pc, #120]	; 15b20 <BN_free@plt+0x2b44>
   15aa4:	mov	r8, r0
   15aa8:	mov	r0, sl
   15aac:	bl	14e90 <BN_free@plt+0x1eb4>
   15ab0:	ldr	r5, [r9, #24]
   15ab4:	cmp	r5, #0
   15ab8:	beq	15ad4 <BN_free@plt+0x2af8>
   15abc:	str	r8, [sp]
   15ac0:	mov	r1, sl
   15ac4:	mov	r0, fp
   15ac8:	mov	r3, r4
   15acc:	mov	r2, #0
   15ad0:	blx	r5
   15ad4:	mov	r1, r6
   15ad8:	mov	r0, r4
   15adc:	bl	14704 <BN_free@plt+0x1728>
   15ae0:	ldr	r2, [sp, #148]	; 0x94
   15ae4:	ldr	r3, [r7]
   15ae8:	cmp	r2, r3
   15aec:	bne	15b10 <BN_free@plt+0x2b34>
   15af0:	add	sp, sp, #156	; 0x9c
   15af4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15af8:	add	sp, sp, #8
   15afc:	bx	lr
   15b00:	ldr	r1, [pc, #28]	; 15b24 <BN_free@plt+0x2b48>
   15b04:	mov	r0, #5
   15b08:	bl	14e90 <BN_free@plt+0x1eb4>
   15b0c:	b	15ae0 <BN_free@plt+0x2b04>
   15b10:	bl	12d60 <__stack_chk_fail@plt>
   15b14:	ldrdeq	fp, [r2], -r8
   15b18:	andeq	ip, r2, r0, lsr #1
   15b1c:	andeq	sl, r1, ip, lsr #15
   15b20:			; <UNDEFINED> instruction: 0x0001a7b4
   15b24:	andeq	sl, r1, r0, lsl #15
   15b28:	push	{r2, r3}
   15b2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b30:	sub	sp, sp, #20
   15b34:	ldr	r6, [pc, #208]	; 15c0c <BN_free@plt+0x2c30>
   15b38:	ldr	r5, [pc, #208]	; 15c10 <BN_free@plt+0x2c34>
   15b3c:	ldr	r8, [sp, #56]	; 0x38
   15b40:	ldr	r2, [r6, #24]
   15b44:	ldr	r3, [r5]
   15b48:	cmp	r2, #0
   15b4c:	str	r3, [sp, #12]
   15b50:	beq	15bd8 <BN_free@plt+0x2bfc>
   15b54:	add	r4, sp, #60	; 0x3c
   15b58:	mov	sl, r1
   15b5c:	mov	r1, #0
   15b60:	mvn	r3, #0
   15b64:	mov	r2, #1
   15b68:	mov	r9, r0
   15b6c:	str	r8, [sp]
   15b70:	mov	r0, r1
   15b74:	str	r4, [sp, #4]
   15b78:	str	r4, [sp, #8]
   15b7c:	bl	12c04 <__vsnprintf_chk@plt>
   15b80:	add	r7, r0, #1
   15b84:	mov	r0, r7
   15b88:	bl	12d48 <malloc@plt>
   15b8c:	subs	fp, r0, #0
   15b90:	beq	15bf8 <BN_free@plt+0x2c1c>
   15b94:	str	r4, [sp, #4]
   15b98:	mvn	r3, #0
   15b9c:	mov	r2, #1
   15ba0:	mov	r1, r7
   15ba4:	str	r8, [sp]
   15ba8:	str	r4, [sp, #8]
   15bac:	bl	12c04 <__vsnprintf_chk@plt>
   15bb0:	mov	r1, sl
   15bb4:	ldr	r4, [r6, #24]
   15bb8:	mov	r3, fp
   15bbc:	mov	r2, #0
   15bc0:	str	r0, [sp]
   15bc4:	mov	r0, r9
   15bc8:	blx	r4
   15bcc:	mov	r1, r7
   15bd0:	mov	r0, fp
   15bd4:	bl	14704 <BN_free@plt+0x1728>
   15bd8:	ldr	r2, [sp, #12]
   15bdc:	ldr	r3, [r5]
   15be0:	cmp	r2, r3
   15be4:	bne	15c08 <BN_free@plt+0x2c2c>
   15be8:	add	sp, sp, #20
   15bec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bf0:	add	sp, sp, #8
   15bf4:	bx	lr
   15bf8:	ldr	r1, [pc, #20]	; 15c14 <BN_free@plt+0x2c38>
   15bfc:	mov	r0, #5
   15c00:	bl	14e90 <BN_free@plt+0x1eb4>
   15c04:	b	15bd8 <BN_free@plt+0x2bfc>
   15c08:	bl	12d60 <__stack_chk_fail@plt>
   15c0c:	andeq	ip, r2, r0, lsr #1
   15c10:	ldrdeq	fp, [r2], -r8
   15c14:			; <UNDEFINED> instruction: 0x0001a7bc
   15c18:	push	{r2, r3}
   15c1c:	mvn	r3, #0
   15c20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15c24:	sub	sp, sp, #16
   15c28:	ldr	r7, [pc, #220]	; 15d0c <BN_free@plt+0x2d30>
   15c2c:	ldr	r8, [sp, #48]	; 0x30
   15c30:	add	r4, sp, #52	; 0x34
   15c34:	ldr	ip, [r7]
   15c38:	mov	r9, r1
   15c3c:	mov	r1, #0
   15c40:	mov	r2, #1
   15c44:	mov	sl, r0
   15c48:	str	r8, [sp]
   15c4c:	mov	r0, r1
   15c50:	str	r4, [sp, #4]
   15c54:	str	ip, [sp, #12]
   15c58:	str	r4, [sp, #8]
   15c5c:	bl	12c04 <__vsnprintf_chk@plt>
   15c60:	add	r5, r0, #1
   15c64:	mov	r0, r5
   15c68:	bl	12d48 <malloc@plt>
   15c6c:	subs	r6, r0, #0
   15c70:	beq	15cf8 <BN_free@plt+0x2d1c>
   15c74:	mvn	r3, #0
   15c78:	str	r4, [sp, #4]
   15c7c:	str	r8, [sp]
   15c80:	mov	r2, #1
   15c84:	mov	r1, r5
   15c88:	str	r4, [sp, #8]
   15c8c:	bl	12c04 <__vsnprintf_chk@plt>
   15c90:	mov	r2, r6
   15c94:	ldr	r1, [pc, #116]	; 15d10 <BN_free@plt+0x2d34>
   15c98:	mov	r8, r0
   15c9c:	mov	r0, r9
   15ca0:	bl	14e90 <BN_free@plt+0x1eb4>
   15ca4:	ldr	r3, [pc, #104]	; 15d14 <BN_free@plt+0x2d38>
   15ca8:	ldr	r4, [r3, #24]
   15cac:	cmp	r4, #0
   15cb0:	beq	15ccc <BN_free@plt+0x2cf0>
   15cb4:	str	r8, [sp]
   15cb8:	mov	r1, r9
   15cbc:	mov	r0, sl
   15cc0:	mov	r3, r6
   15cc4:	mov	r2, #1
   15cc8:	blx	r4
   15ccc:	mov	r1, r5
   15cd0:	mov	r0, r6
   15cd4:	bl	14704 <BN_free@plt+0x1728>
   15cd8:	ldr	r2, [sp, #12]
   15cdc:	ldr	r3, [r7]
   15ce0:	cmp	r2, r3
   15ce4:	bne	15d08 <BN_free@plt+0x2d2c>
   15ce8:	add	sp, sp, #16
   15cec:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   15cf0:	add	sp, sp, #8
   15cf4:	bx	lr
   15cf8:	ldr	r1, [pc, #24]	; 15d18 <BN_free@plt+0x2d3c>
   15cfc:	mov	r0, #5
   15d00:	bl	14e90 <BN_free@plt+0x1eb4>
   15d04:	b	15cd8 <BN_free@plt+0x2cfc>
   15d08:	bl	12d60 <__stack_chk_fail@plt>
   15d0c:	ldrdeq	fp, [r2], -r8
   15d10:	andeq	sl, r1, r0, lsr #18
   15d14:	andeq	ip, r2, r0, lsr #1
   15d18:	andeq	sl, r1, ip, ror #15
   15d1c:	push	{r2, r3}
   15d20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d24:	sub	sp, sp, #20
   15d28:	ldr	r6, [pc, #208]	; 15e00 <BN_free@plt+0x2e24>
   15d2c:	ldr	r5, [pc, #208]	; 15e04 <BN_free@plt+0x2e28>
   15d30:	ldr	r8, [sp, #56]	; 0x38
   15d34:	ldr	r2, [r6, #24]
   15d38:	ldr	r3, [r5]
   15d3c:	cmp	r2, #0
   15d40:	str	r3, [sp, #12]
   15d44:	beq	15dcc <BN_free@plt+0x2df0>
   15d48:	add	r4, sp, #60	; 0x3c
   15d4c:	mov	sl, r1
   15d50:	mov	r1, #0
   15d54:	mvn	r3, #0
   15d58:	mov	r2, #1
   15d5c:	mov	r9, r0
   15d60:	str	r8, [sp]
   15d64:	mov	r0, r1
   15d68:	str	r4, [sp, #4]
   15d6c:	str	r4, [sp, #8]
   15d70:	bl	12c04 <__vsnprintf_chk@plt>
   15d74:	add	r7, r0, #1
   15d78:	mov	r0, r7
   15d7c:	bl	12d48 <malloc@plt>
   15d80:	subs	fp, r0, #0
   15d84:	beq	15dec <BN_free@plt+0x2e10>
   15d88:	str	r4, [sp, #4]
   15d8c:	mvn	r3, #0
   15d90:	mov	r2, #1
   15d94:	mov	r1, r7
   15d98:	str	r8, [sp]
   15d9c:	str	r4, [sp, #8]
   15da0:	bl	12c04 <__vsnprintf_chk@plt>
   15da4:	mov	r1, sl
   15da8:	ldr	r4, [r6, #24]
   15dac:	mov	r3, fp
   15db0:	mov	r2, #1
   15db4:	str	r0, [sp]
   15db8:	mov	r0, r9
   15dbc:	blx	r4
   15dc0:	mov	r1, r7
   15dc4:	mov	r0, fp
   15dc8:	bl	14704 <BN_free@plt+0x1728>
   15dcc:	ldr	r2, [sp, #12]
   15dd0:	ldr	r3, [r5]
   15dd4:	cmp	r2, r3
   15dd8:	bne	15dfc <BN_free@plt+0x2e20>
   15ddc:	add	sp, sp, #20
   15de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15de4:	add	sp, sp, #8
   15de8:	bx	lr
   15dec:	ldr	r1, [pc, #20]	; 15e08 <BN_free@plt+0x2e2c>
   15df0:	mov	r0, #5
   15df4:	bl	14e90 <BN_free@plt+0x1eb4>
   15df8:	b	15dcc <BN_free@plt+0x2df0>
   15dfc:	bl	12d60 <__stack_chk_fail@plt>
   15e00:	andeq	ip, r2, r0, lsr #1
   15e04:	ldrdeq	fp, [r2], -r8
   15e08:	andeq	sl, r1, r0, lsr #16
   15e0c:	push	{r2, r3}
   15e10:	mvn	r3, #0
   15e14:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15e18:	sub	sp, sp, #16
   15e1c:	ldr	r7, [pc, #220]	; 15f00 <BN_free@plt+0x2f24>
   15e20:	ldr	r8, [sp, #48]	; 0x30
   15e24:	add	r4, sp, #52	; 0x34
   15e28:	ldr	ip, [r7]
   15e2c:	mov	r9, r1
   15e30:	mov	r1, #0
   15e34:	mov	r2, #1
   15e38:	mov	sl, r0
   15e3c:	str	r8, [sp]
   15e40:	mov	r0, r1
   15e44:	str	r4, [sp, #4]
   15e48:	str	ip, [sp, #12]
   15e4c:	str	r4, [sp, #8]
   15e50:	bl	12c04 <__vsnprintf_chk@plt>
   15e54:	add	r5, r0, #1
   15e58:	mov	r0, r5
   15e5c:	bl	12d48 <malloc@plt>
   15e60:	subs	r6, r0, #0
   15e64:	beq	15eec <BN_free@plt+0x2f10>
   15e68:	mvn	r3, #0
   15e6c:	str	r4, [sp, #4]
   15e70:	str	r8, [sp]
   15e74:	mov	r2, #1
   15e78:	mov	r1, r5
   15e7c:	str	r4, [sp, #8]
   15e80:	bl	12c04 <__vsnprintf_chk@plt>
   15e84:	mov	r2, r6
   15e88:	ldr	r1, [pc, #116]	; 15f04 <BN_free@plt+0x2f28>
   15e8c:	mov	r8, r0
   15e90:	mov	r0, r9
   15e94:	bl	14e90 <BN_free@plt+0x1eb4>
   15e98:	ldr	r3, [pc, #104]	; 15f08 <BN_free@plt+0x2f2c>
   15e9c:	ldr	r4, [r3, #24]
   15ea0:	cmp	r4, #0
   15ea4:	beq	15ec0 <BN_free@plt+0x2ee4>
   15ea8:	str	r8, [sp]
   15eac:	mov	r1, r9
   15eb0:	mov	r0, sl
   15eb4:	mov	r3, r6
   15eb8:	mov	r2, #2
   15ebc:	blx	r4
   15ec0:	mov	r1, r5
   15ec4:	mov	r0, r6
   15ec8:	bl	14704 <BN_free@plt+0x1728>
   15ecc:	ldr	r2, [sp, #12]
   15ed0:	ldr	r3, [r7]
   15ed4:	cmp	r2, r3
   15ed8:	bne	15efc <BN_free@plt+0x2f20>
   15edc:	add	sp, sp, #16
   15ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ee4:	add	sp, sp, #8
   15ee8:	bx	lr
   15eec:	ldr	r1, [pc, #24]	; 15f0c <BN_free@plt+0x2f30>
   15ef0:	mov	r0, #5
   15ef4:	bl	14e90 <BN_free@plt+0x1eb4>
   15ef8:	b	15ecc <BN_free@plt+0x2ef0>
   15efc:	bl	12d60 <__stack_chk_fail@plt>
   15f00:	ldrdeq	fp, [r2], -r8
   15f04:	andeq	sl, r1, r0, lsr #18
   15f08:	andeq	ip, r2, r0, lsr #1
   15f0c:	andeq	sl, r1, r8, asr r8
   15f10:	push	{r2, r3}
   15f14:	mvn	r3, #0
   15f18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15f1c:	sub	sp, sp, #16
   15f20:	ldr	r6, [pc, #220]	; 16004 <BN_free@plt+0x3028>
   15f24:	ldr	r8, [sp, #48]	; 0x30
   15f28:	add	r4, sp, #52	; 0x34
   15f2c:	ldr	ip, [r6]
   15f30:	mov	r9, r1
   15f34:	mov	r1, #0
   15f38:	mov	r2, #1
   15f3c:	mov	sl, r0
   15f40:	str	r8, [sp]
   15f44:	mov	r0, r1
   15f48:	str	r4, [sp, #4]
   15f4c:	str	ip, [sp, #12]
   15f50:	str	r4, [sp, #8]
   15f54:	bl	12c04 <__vsnprintf_chk@plt>
   15f58:	add	r7, r0, #1
   15f5c:	mov	r0, r7
   15f60:	bl	12d48 <malloc@plt>
   15f64:	subs	r5, r0, #0
   15f68:	beq	15fec <BN_free@plt+0x3010>
   15f6c:	mov	r1, r7
   15f70:	mvn	r3, #0
   15f74:	str	r4, [sp, #4]
   15f78:	mov	r2, #1
   15f7c:	str	r8, [sp]
   15f80:	str	r4, [sp, #8]
   15f84:	bl	12c04 <__vsnprintf_chk@plt>
   15f88:	mov	r2, r5
   15f8c:	ldr	r1, [pc, #116]	; 16008 <BN_free@plt+0x302c>
   15f90:	mov	r7, r0
   15f94:	mov	r0, r9
   15f98:	bl	14e90 <BN_free@plt+0x1eb4>
   15f9c:	ldr	r3, [pc, #104]	; 1600c <BN_free@plt+0x3030>
   15fa0:	ldr	r4, [r3, #24]
   15fa4:	cmp	r4, #0
   15fa8:	beq	15fc4 <BN_free@plt+0x2fe8>
   15fac:	str	r7, [sp]
   15fb0:	mov	r1, r9
   15fb4:	mov	r0, sl
   15fb8:	mov	r3, r5
   15fbc:	mov	r2, #3
   15fc0:	blx	r4
   15fc4:	mov	r0, r5
   15fc8:	bl	12a30 <free@plt>
   15fcc:	ldr	r2, [sp, #12]
   15fd0:	ldr	r3, [r6]
   15fd4:	cmp	r2, r3
   15fd8:	bne	16000 <BN_free@plt+0x3024>
   15fdc:	add	sp, sp, #16
   15fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   15fe4:	add	sp, sp, #8
   15fe8:	bx	lr
   15fec:	ldr	r2, [pc, #28]	; 16010 <BN_free@plt+0x3034>
   15ff0:	ldr	r1, [pc, #28]	; 16014 <BN_free@plt+0x3038>
   15ff4:	mov	r0, #5
   15ff8:	bl	14e90 <BN_free@plt+0x1eb4>
   15ffc:	b	15fcc <BN_free@plt+0x2ff0>
   16000:	bl	12d60 <__stack_chk_fail@plt>
   16004:	ldrdeq	fp, [r2], -r8
   16008:	andeq	sl, r1, r0, lsr #18
   1600c:	andeq	ip, r2, r0, lsr #1
   16010:	andeq	sl, r1, r4, ror #8
   16014:	muleq	r1, r0, r8
   16018:	ldr	r3, [pc, #4]	; 16024 <BN_free@plt+0x3048>
   1601c:	str	r0, [r3, #32]
   16020:	bx	lr
   16024:	andeq	ip, r2, r0, lsr #1
   16028:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1602c:	sub	sp, sp, #44	; 0x2c
   16030:	ldr	r6, [pc, #296]	; 16160 <BN_free@plt+0x3184>
   16034:	ldr	r8, [sp, #80]	; 0x50
   16038:	add	r4, sp, #84	; 0x54
   1603c:	ldr	ip, [r6]
   16040:	mov	r7, r1
   16044:	mov	r1, #0
   16048:	str	r0, [sp, #28]
   1604c:	mov	sl, r2
   16050:	mov	r0, r1
   16054:	mov	r2, #1
   16058:	mov	fp, r3
   1605c:	str	r8, [sp]
   16060:	mvn	r3, #0
   16064:	str	r4, [sp, #4]
   16068:	str	ip, [sp, #36]	; 0x24
   1606c:	str	r4, [sp, #32]
   16070:	bl	12c04 <__vsnprintf_chk@plt>
   16074:	add	r5, r0, #1
   16078:	mov	r0, r5
   1607c:	bl	12d48 <malloc@plt>
   16080:	subs	r9, r0, #0
   16084:	beq	1614c <BN_free@plt+0x3170>
   16088:	str	r4, [sp, #4]
   1608c:	mvn	r3, #0
   16090:	str	r8, [sp]
   16094:	mov	r2, #1
   16098:	mov	r1, r5
   1609c:	str	r4, [sp, #32]
   160a0:	bl	12c04 <__vsnprintf_chk@plt>
   160a4:	ldr	r3, [pc, #184]	; 16164 <BN_free@plt+0x3188>
   160a8:	ldr	r4, [r3, #32]
   160ac:	cmp	r4, #0
   160b0:	beq	160f4 <BN_free@plt+0x3118>
   160b4:	str	r0, [sp, #4]
   160b8:	str	r9, [sp]
   160bc:	mov	r3, fp
   160c0:	mov	r2, sl
   160c4:	mov	r1, r7
   160c8:	ldr	r0, [sp, #28]
   160cc:	blx	r4
   160d0:	mov	r1, r5
   160d4:	mov	r0, r9
   160d8:	bl	14704 <BN_free@plt+0x1728>
   160dc:	ldr	r2, [sp, #36]	; 0x24
   160e0:	ldr	r3, [r6]
   160e4:	cmp	r2, r3
   160e8:	bne	1615c <BN_free@plt+0x3180>
   160ec:	add	sp, sp, #44	; 0x2c
   160f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160f4:	cmp	r7, #0
   160f8:	beq	16138 <BN_free@plt+0x315c>
   160fc:	ldrb	r0, [r7, #5]
   16100:	ldrb	r1, [r7, #4]
   16104:	ldrb	r2, [r7, #3]
   16108:	ldrb	r3, [r7, #2]
   1610c:	str	r0, [sp, #12]
   16110:	str	r1, [sp, #8]
   16114:	str	r9, [sp, #16]
   16118:	str	r2, [sp, #4]
   1611c:	str	r3, [sp]
   16120:	ldr	r1, [pc, #64]	; 16168 <BN_free@plt+0x318c>
   16124:	ldrb	r3, [r7, #1]
   16128:	ldrb	r2, [r7]
   1612c:	mov	r0, #2
   16130:	bl	14e90 <BN_free@plt+0x1eb4>
   16134:	b	160d0 <BN_free@plt+0x30f4>
   16138:	mov	r2, r9
   1613c:	ldr	r1, [pc, #40]	; 1616c <BN_free@plt+0x3190>
   16140:	mov	r0, #2
   16144:	bl	14e90 <BN_free@plt+0x1eb4>
   16148:	b	160d0 <BN_free@plt+0x30f4>
   1614c:	ldr	r1, [pc, #28]	; 16170 <BN_free@plt+0x3194>
   16150:	mov	r0, #5
   16154:	bl	14e90 <BN_free@plt+0x1eb4>
   16158:	b	160dc <BN_free@plt+0x3100>
   1615c:	bl	12d60 <__stack_chk_fail@plt>
   16160:	ldrdeq	fp, [r2], -r8
   16164:	andeq	ip, r2, r0, lsr #1
   16168:	andeq	sl, r1, ip, ror #17
   1616c:	andeq	sl, r1, r4, lsr #18
   16170:			; <UNDEFINED> instruction: 0x0001a8b8
   16174:	cmp	r0, #5
   16178:	ldrls	r3, [pc, #12]	; 1618c <BN_free@plt+0x31b0>
   1617c:	addls	r0, r3, r0, lsl #2
   16180:	ldrls	r0, [r0, #60]	; 0x3c
   16184:	ldrhi	r0, [pc, #4]	; 16190 <BN_free@plt+0x31b4>
   16188:	bx	lr
   1618c:	andeq	sl, r1, ip, lsr r4
   16190:	andeq	sl, r1, r8, lsr r9
   16194:	push	{r4, lr}
   16198:	mov	r4, r0
   1619c:	ldr	r1, [pc, #148]	; 16238 <BN_free@plt+0x325c>
   161a0:	bl	128e0 <strcasecmp@plt>
   161a4:	cmp	r0, #0
   161a8:	popeq	{r4, pc}
   161ac:	ldr	r1, [pc, #136]	; 1623c <BN_free@plt+0x3260>
   161b0:	mov	r0, r4
   161b4:	bl	128e0 <strcasecmp@plt>
   161b8:	cmp	r0, #0
   161bc:	beq	16218 <BN_free@plt+0x323c>
   161c0:	ldr	r1, [pc, #120]	; 16240 <BN_free@plt+0x3264>
   161c4:	mov	r0, r4
   161c8:	bl	128e0 <strcasecmp@plt>
   161cc:	cmp	r0, #0
   161d0:	beq	16220 <BN_free@plt+0x3244>
   161d4:	ldr	r1, [pc, #104]	; 16244 <BN_free@plt+0x3268>
   161d8:	mov	r0, r4
   161dc:	bl	128e0 <strcasecmp@plt>
   161e0:	cmp	r0, #0
   161e4:	beq	16228 <BN_free@plt+0x324c>
   161e8:	ldr	r1, [pc, #88]	; 16248 <BN_free@plt+0x326c>
   161ec:	mov	r0, r4
   161f0:	bl	128e0 <strcasecmp@plt>
   161f4:	cmp	r0, #0
   161f8:	beq	16230 <BN_free@plt+0x3254>
   161fc:	mov	r0, r4
   16200:	ldr	r1, [pc, #68]	; 1624c <BN_free@plt+0x3270>
   16204:	bl	128e0 <strcasecmp@plt>
   16208:	cmp	r0, #0
   1620c:	mvnne	r0, #0
   16210:	moveq	r0, #5
   16214:	pop	{r4, pc}
   16218:	mov	r0, #1
   1621c:	pop	{r4, pc}
   16220:	mov	r0, #2
   16224:	pop	{r4, pc}
   16228:	mov	r0, #3
   1622c:	pop	{r4, pc}
   16230:	mov	r0, #4
   16234:	pop	{r4, pc}
   16238:	andeq	sl, r1, ip, lsr r9
   1623c:	andeq	sl, r1, r8, asr #18
   16240:	andeq	sl, r1, r0, asr r9
   16244:	andeq	sl, r1, r8, asr r9
   16248:	andeq	sl, r1, r0, ror #18
   1624c:	andeq	sl, r1, r8, ror #18
   16250:	push	{lr}		; (str lr, [sp, #-4]!)
   16254:	sub	sp, sp, #12
   16258:	mov	r2, r0
   1625c:	str	r1, [sp, #4]
   16260:	ldr	r1, [r0, #4]
   16264:	ldr	r3, [r0]
   16268:	str	r1, [sp]
   1626c:	mov	r0, #5
   16270:	ldr	r1, [pc, #4]	; 1627c <BN_free@plt+0x32a0>
   16274:	bl	14e90 <BN_free@plt+0x1eb4>
   16278:	bl	12760 <abort@plt>
   1627c:	andeq	sl, r1, r0, ror r9
   16280:	push	{r4, r5, r6, r7, r8, lr}
   16284:	mov	r6, r0
   16288:	ldr	r4, [r0]
   1628c:	mov	r5, r1
   16290:	cmp	r4, #0
   16294:	beq	16338 <BN_free@plt+0x335c>
   16298:	ldr	r1, [r4, #4]
   1629c:	ldr	r3, [r4]
   162a0:	add	r1, r5, r1
   162a4:	cmp	r1, r3
   162a8:	bls	162f4 <BN_free@plt+0x3318>
   162ac:	ldr	r3, [r4, #12]
   162b0:	ands	r7, r3, #1
   162b4:	beq	162fc <BN_free@plt+0x3320>
   162b8:	ldr	r0, [r4, #8]
   162bc:	bl	12f34 <realloc@plt>
   162c0:	subs	r6, r0, #0
   162c4:	beq	16364 <BN_free@plt+0x3388>
   162c8:	ldr	r0, [r4, #4]
   162cc:	mov	r2, r5
   162d0:	add	r0, r6, r0
   162d4:	mov	r1, #0
   162d8:	bl	1294c <memset@plt>
   162dc:	str	r6, [r4, #8]
   162e0:	ldr	r3, [r4, #4]
   162e4:	mov	r0, #0
   162e8:	add	r5, r3, r5
   162ec:	str	r5, [r4]
   162f0:	pop	{r4, r5, r6, r7, r8, pc}
   162f4:	mov	r0, #0
   162f8:	pop	{r4, r5, r6, r7, r8, pc}
   162fc:	mov	r0, r4
   16300:	add	r1, r1, #16
   16304:	bl	12f34 <realloc@plt>
   16308:	subs	r4, r0, #0
   1630c:	beq	16364 <BN_free@plt+0x3388>
   16310:	ldr	r0, [r4, #4]
   16314:	mov	r1, r7
   16318:	add	r0, r0, #16
   1631c:	add	r0, r4, r0
   16320:	mov	r2, r5
   16324:	bl	1294c <memset@plt>
   16328:	add	r3, r4, #16
   1632c:	str	r3, [r4, #8]
   16330:	str	r4, [r6]
   16334:	b	162e0 <BN_free@plt+0x3304>
   16338:	add	r0, r1, #16
   1633c:	bl	16e00 <BN_free@plt+0x3e24>
   16340:	subs	r3, r0, #0
   16344:	movne	r2, r3
   16348:	mvneq	r0, #0
   1634c:	strne	r5, [r2], #16
   16350:	strne	r2, [r3, #8]
   16354:	streq	r3, [r6]
   16358:	movne	r0, r4
   1635c:	strne	r3, [r6]
   16360:	pop	{r4, r5, r6, r7, r8, pc}
   16364:	mvn	r0, #0
   16368:	pop	{r4, r5, r6, r7, r8, pc}
   1636c:	push	{r4, lr}
   16370:	mov	r4, r0
   16374:	add	r0, r0, #16
   16378:	bl	16e00 <BN_free@plt+0x3e24>
   1637c:	cmp	r0, #0
   16380:	movne	r3, r0
   16384:	strne	r4, [r3], #16
   16388:	strne	r3, [r0, #8]
   1638c:	pop	{r4, pc}
   16390:	push	{r4, r5, r6, lr}
   16394:	mov	r5, r0
   16398:	mov	r0, #16
   1639c:	mov	r4, r1
   163a0:	bl	16e00 <BN_free@plt+0x3e24>
   163a4:	cmp	r0, #0
   163a8:	ldrne	r3, [r0, #12]
   163ac:	strne	r4, [r0]
   163b0:	orrne	r3, r3, #1
   163b4:	strdne	r4, [r0, #4]
   163b8:	strne	r3, [r0, #12]
   163bc:	pop	{r4, r5, r6, pc}
   163c0:	push	{r4, r5, r6, lr}
   163c4:	mov	r6, r0
   163c8:	add	r0, r1, #16
   163cc:	mov	r5, r1
   163d0:	bl	16e00 <BN_free@plt+0x3e24>
   163d4:	subs	r4, r0, #0
   163d8:	beq	16418 <BN_free@plt+0x343c>
   163dc:	mov	r3, r4
   163e0:	cmp	r6, #0
   163e4:	str	r5, [r3], #16
   163e8:	str	r3, [r4, #8]
   163ec:	beq	16418 <BN_free@plt+0x343c>
   163f0:	ldr	r1, [r4, #4]
   163f4:	add	r2, r5, r1
   163f8:	cmp	r5, r2
   163fc:	add	r3, r3, r1
   16400:	str	r2, [r4, #4]
   16404:	bcc	16420 <BN_free@plt+0x3444>
   16408:	mov	r2, r5
   1640c:	mov	r1, r6
   16410:	mov	r0, r3
   16414:	bl	12b98 <memcpy@plt>
   16418:	mov	r0, r4
   1641c:	pop	{r4, r5, r6, pc}
   16420:	mov	r1, r5
   16424:	bl	16250 <BN_free@plt+0x3274>
   16428:	push	{r4, r5, r6, lr}
   1642c:	mov	r6, r0
   16430:	ldr	r5, [r0, #4]
   16434:	add	r0, r5, #16
   16438:	bl	16e00 <BN_free@plt+0x3e24>
   1643c:	subs	r4, r0, #0
   16440:	beq	16480 <BN_free@plt+0x34a4>
   16444:	mov	r3, r4
   16448:	str	r5, [r3], #16
   1644c:	str	r3, [r4, #8]
   16450:	ldr	r1, [r6, #8]
   16454:	cmp	r1, #0
   16458:	beq	16480 <BN_free@plt+0x34a4>
   1645c:	ldr	lr, [r4, #4]
   16460:	ldr	r2, [r6, #4]
   16464:	add	r3, r3, lr
   16468:	add	ip, r2, lr
   1646c:	cmp	r5, ip
   16470:	str	ip, [r4, #4]
   16474:	bcc	16488 <BN_free@plt+0x34ac>
   16478:	mov	r0, r3
   1647c:	bl	12b98 <memcpy@plt>
   16480:	mov	r0, r4
   16484:	pop	{r4, r5, r6, pc}
   16488:	mov	r1, r2
   1648c:	bl	16250 <BN_free@plt+0x3274>
   16490:	push	{r4, lr}
   16494:	subs	r4, r0, #0
   16498:	popeq	{r4, pc}
   1649c:	ldr	r3, [r4, #12]
   164a0:	tst	r3, #1
   164a4:	bne	164b4 <BN_free@plt+0x34d8>
   164a8:	mov	r0, r4
   164ac:	pop	{r4, lr}
   164b0:	b	12a30 <free@plt>
   164b4:	ldr	r0, [r4, #8]
   164b8:	bl	12a30 <free@plt>
   164bc:	mov	r0, r4
   164c0:	pop	{r4, lr}
   164c4:	b	12a30 <free@plt>
   164c8:	push	{r4, lr}
   164cc:	subs	r4, r0, #0
   164d0:	popeq	{r4, pc}
   164d4:	ldr	r2, [r4, #4]
   164d8:	ldr	r0, [r4, #8]
   164dc:	mov	r1, #0
   164e0:	bl	1294c <memset@plt>
   164e4:	mov	r0, r4
   164e8:	pop	{r4, lr}
   164ec:	b	16490 <BN_free@plt+0x34b4>
   164f0:	push	{r4, lr}
   164f4:	ldm	r0, {r4, ip}
   164f8:	ldr	r2, [r0, #8]
   164fc:	add	lr, r1, ip
   16500:	cmp	lr, r4
   16504:	str	lr, [r0, #4]
   16508:	add	r2, r2, ip
   1650c:	bhi	16518 <BN_free@plt+0x353c>
   16510:	mov	r0, r2
   16514:	pop	{r4, pc}
   16518:	bl	16250 <BN_free@plt+0x3274>
   1651c:	push	{r4, r5, r6, r7, r8, lr}
   16520:	subs	r5, r1, #0
   16524:	beq	165fc <BN_free@plt+0x3620>
   16528:	cmp	r0, #0
   1652c:	mov	r6, r0
   16530:	ldr	r7, [r5, #4]
   16534:	beq	165d8 <BN_free@plt+0x35fc>
   16538:	ldr	r3, [r0, #4]
   1653c:	add	r7, r7, r3
   16540:	add	r0, r7, #16
   16544:	bl	16e00 <BN_free@plt+0x3e24>
   16548:	subs	r4, r0, #0
   1654c:	beq	165f4 <BN_free@plt+0x3618>
   16550:	mov	r3, r4
   16554:	str	r7, [r3], #16
   16558:	str	r3, [r4, #8]
   1655c:	ldr	r1, [r6, #8]
   16560:	cmp	r1, #0
   16564:	beq	1658c <BN_free@plt+0x35b0>
   16568:	ldr	lr, [r4, #4]
   1656c:	ldr	r2, [r6, #4]
   16570:	add	r3, r3, lr
   16574:	add	ip, r2, lr
   16578:	cmp	ip, r7
   1657c:	str	ip, [r4, #4]
   16580:	bhi	16614 <BN_free@plt+0x3638>
   16584:	mov	r0, r3
   16588:	bl	12b98 <memcpy@plt>
   1658c:	ldr	r1, [r5, #8]
   16590:	cmp	r1, #0
   16594:	beq	165c0 <BN_free@plt+0x35e4>
   16598:	ldr	r3, [r4, #4]
   1659c:	ldr	r2, [r5, #4]
   165a0:	ldr	lr, [r4]
   165a4:	add	ip, r2, r3
   165a8:	ldr	r0, [r4, #8]
   165ac:	cmp	ip, lr
   165b0:	str	ip, [r4, #4]
   165b4:	add	r0, r0, r3
   165b8:	bhi	16608 <BN_free@plt+0x362c>
   165bc:	bl	12b98 <memcpy@plt>
   165c0:	mov	r0, r6
   165c4:	bl	16490 <BN_free@plt+0x34b4>
   165c8:	mov	r0, r5
   165cc:	bl	16490 <BN_free@plt+0x34b4>
   165d0:	mov	r0, r4
   165d4:	pop	{r4, r5, r6, r7, r8, pc}
   165d8:	add	r0, r7, #16
   165dc:	bl	16e00 <BN_free@plt+0x3e24>
   165e0:	subs	r4, r0, #0
   165e4:	movne	r3, r4
   165e8:	strne	r7, [r3], #16
   165ec:	strne	r3, [r4, #8]
   165f0:	bne	1658c <BN_free@plt+0x35b0>
   165f4:	mov	r4, #0
   165f8:	b	165c0 <BN_free@plt+0x35e4>
   165fc:	mov	r4, r0
   16600:	mov	r0, r4
   16604:	pop	{r4, r5, r6, r7, r8, pc}
   16608:	mov	r1, r2
   1660c:	mov	r0, r4
   16610:	bl	16250 <BN_free@plt+0x3274>
   16614:	mov	r1, r2
   16618:	bl	16250 <BN_free@plt+0x3274>
   1661c:	push	{r4, r5, r6, r7, r8, lr}
   16620:	subs	r4, r0, #0
   16624:	beq	16638 <BN_free@plt+0x365c>
   16628:	ldr	r7, [r4, #4]
   1662c:	mov	r6, r1
   16630:	cmp	r1, r7
   16634:	bhi	16640 <BN_free@plt+0x3664>
   16638:	mov	r0, r4
   1663c:	pop	{r4, r5, r6, r7, r8, pc}
   16640:	add	r0, r1, #16
   16644:	bl	16e00 <BN_free@plt+0x3e24>
   16648:	subs	r5, r0, #0
   1664c:	beq	166b8 <BN_free@plt+0x36dc>
   16650:	mov	r3, r5
   16654:	sub	r2, r6, r7
   16658:	str	r6, [r3], #16
   1665c:	ldr	ip, [r5, #4]
   16660:	str	r3, [r5, #8]
   16664:	add	r1, r2, ip
   16668:	cmp	r6, r1
   1666c:	add	r3, r3, ip
   16670:	str	r1, [r5, #4]
   16674:	bcc	166cc <BN_free@plt+0x36f0>
   16678:	mov	r1, #0
   1667c:	mov	r0, r3
   16680:	bl	1294c <memset@plt>
   16684:	ldr	r1, [r4, #8]
   16688:	cmp	r1, #0
   1668c:	beq	166b8 <BN_free@plt+0x36dc>
   16690:	ldr	r3, [r5, #4]
   16694:	ldr	r2, [r4, #4]
   16698:	ldr	lr, [r5]
   1669c:	add	ip, r2, r3
   166a0:	ldr	r0, [r5, #8]
   166a4:	cmp	ip, lr
   166a8:	str	ip, [r5, #4]
   166ac:	add	r0, r0, r3
   166b0:	bhi	166d4 <BN_free@plt+0x36f8>
   166b4:	bl	12b98 <memcpy@plt>
   166b8:	mov	r0, r4
   166bc:	mov	r4, r5
   166c0:	bl	16490 <BN_free@plt+0x34b4>
   166c4:	mov	r0, r4
   166c8:	pop	{r4, r5, r6, r7, r8, pc}
   166cc:	mov	r1, r2
   166d0:	bl	16250 <BN_free@plt+0x3274>
   166d4:	mov	r1, r2
   166d8:	mov	r0, r5
   166dc:	bl	16250 <BN_free@plt+0x3274>
   166e0:	push	{r1, r2, r3}
   166e4:	push	{r4, r5, lr}
   166e8:	mov	r4, r0
   166ec:	ldr	r5, [pc, #136]	; 1677c <BN_free@plt+0x37a0>
   166f0:	sub	sp, sp, #16
   166f4:	ldm	r4, {r1, r3}
   166f8:	ldr	r0, [r0, #8]
   166fc:	ldr	r2, [r5]
   16700:	ldr	lr, [sp, #28]
   16704:	add	ip, sp, #32
   16708:	add	r0, r0, r3
   1670c:	sub	r1, r1, r3
   16710:	str	r2, [sp, #12]
   16714:	str	lr, [sp]
   16718:	str	ip, [sp, #4]
   1671c:	mvn	r3, #0
   16720:	mov	r2, #1
   16724:	str	ip, [sp, #8]
   16728:	bl	12c04 <__vsnprintf_chk@plt>
   1672c:	cmp	r0, #0
   16730:	blt	1676c <BN_free@plt+0x3790>
   16734:	ldrd	r2, [r4]
   16738:	sub	r2, r2, r3
   1673c:	cmp	r2, r0
   16740:	bls	1676c <BN_free@plt+0x3790>
   16744:	ldr	r1, [sp, #12]
   16748:	ldr	r2, [r5]
   1674c:	add	r3, r3, r0
   16750:	cmp	r1, r2
   16754:	str	r3, [r4, #4]
   16758:	bne	16778 <BN_free@plt+0x379c>
   1675c:	add	sp, sp, #16
   16760:	pop	{r4, r5, lr}
   16764:	add	sp, sp, #12
   16768:	bx	lr
   1676c:	mov	r1, r0
   16770:	mov	r0, r4
   16774:	bl	16250 <BN_free@plt+0x3274>
   16778:	bl	12d60 <__stack_chk_fail@plt>
   1677c:	ldrdeq	fp, [r2], -r8
   16780:	push	{r4, r5, r6, r7, r8, lr}
   16784:	mov	r6, r0
   16788:	bl	12b38 <strlen@plt>
   1678c:	ands	r7, r0, #1
   16790:	bne	167e8 <BN_free@plt+0x380c>
   16794:	lsr	r4, r0, #1
   16798:	add	r0, r4, #16
   1679c:	bl	16e00 <BN_free@plt+0x3e24>
   167a0:	subs	r5, r0, #0
   167a4:	beq	167e8 <BN_free@plt+0x380c>
   167a8:	mov	r1, r5
   167ac:	str	r4, [r1], #16
   167b0:	ldr	r2, [r5, #4]
   167b4:	str	r1, [r5, #8]
   167b8:	add	r3, r4, r2
   167bc:	cmp	r4, r3
   167c0:	add	r1, r1, r2
   167c4:	str	r3, [r5, #4]
   167c8:	bcc	16804 <BN_free@plt+0x3828>
   167cc:	mov	r2, r4
   167d0:	mov	r0, r6
   167d4:	bl	13554 <BN_free@plt+0x578>
   167d8:	cmp	r0, #0
   167dc:	bne	167f4 <BN_free@plt+0x3818>
   167e0:	mov	r0, r5
   167e4:	pop	{r4, r5, r6, r7, r8, pc}
   167e8:	mov	r5, #0
   167ec:	mov	r0, r5
   167f0:	pop	{r4, r5, r6, r7, r8, pc}
   167f4:	mov	r0, r5
   167f8:	bl	16490 <BN_free@plt+0x34b4>
   167fc:	mov	r5, r7
   16800:	b	167e0 <BN_free@plt+0x3804>
   16804:	mov	r1, r4
   16808:	bl	16250 <BN_free@plt+0x3274>
   1680c:	cmp	r0, #0
   16810:	push	{r4, lr}
   16814:	mov	r4, r1
   16818:	bne	16830 <BN_free@plt+0x3854>
   1681c:	cmp	r4, #0
   16820:	popeq	{r4, pc}
   16824:	mov	r0, r4
   16828:	pop	{r4, lr}
   1682c:	b	12a00 <usleep@plt>
   16830:	bl	12dcc <sleep@plt>
   16834:	cmp	r4, #0
   16838:	popeq	{r4, pc}
   1683c:	b	16824 <BN_free@plt+0x3848>
   16840:	push	{r4, r5, lr}
   16844:	sub	sp, sp, #20
   16848:	ldr	r5, [pc, #56]	; 16888 <BN_free@plt+0x38ac>
   1684c:	mov	r4, r0
   16850:	mov	r1, #0
   16854:	ldr	r3, [r5]
   16858:	add	r0, sp, #4
   1685c:	str	r3, [sp, #12]
   16860:	bl	12a60 <gettimeofday@plt>
   16864:	ldr	ip, [sp, #12]
   16868:	ldrd	r2, [sp, #4]
   1686c:	ldr	r1, [r5]
   16870:	cmp	ip, r1
   16874:	strd	r2, [r4]
   16878:	bne	16884 <BN_free@plt+0x38a8>
   1687c:	add	sp, sp, #20
   16880:	pop	{r4, r5, pc}
   16884:	bl	12d60 <__stack_chk_fail@plt>
   16888:	ldrdeq	fp, [r2], -r8
   1688c:	push	{r4, r5, r6, r7, r8, r9, lr}
   16890:	mov	r9, r0
   16894:	ldr	r5, [pc, #160]	; 1693c <BN_free@plt+0x3960>
   16898:	ldr	r6, [pc, #160]	; 16940 <BN_free@plt+0x3964>
   1689c:	sub	sp, sp, #20
   168a0:	ldr	r4, [r5]
   168a4:	ldr	r3, [r6]
   168a8:	mov	r8, #0
   168ac:	mov	r7, #1
   168b0:	str	r3, [sp, #12]
   168b4:	add	r1, sp, #4
   168b8:	mov	r0, r4
   168bc:	bl	127e4 <clock_gettime@plt>
   168c0:	cmp	r0, #0
   168c4:	beq	16914 <BN_free@plt+0x3938>
   168c8:	cmp	r4, #1
   168cc:	beq	16908 <BN_free@plt+0x392c>
   168d0:	cmp	r4, #7
   168d4:	beq	168fc <BN_free@plt+0x3920>
   168d8:	cmp	r4, #0
   168dc:	bne	168b4 <BN_free@plt+0x38d8>
   168e0:	mvn	r0, #0
   168e4:	ldr	r2, [sp, #12]
   168e8:	ldr	r3, [r6]
   168ec:	cmp	r2, r3
   168f0:	bne	16938 <BN_free@plt+0x395c>
   168f4:	add	sp, sp, #20
   168f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   168fc:	str	r7, [r5]
   16900:	mov	r4, #1
   16904:	b	168b4 <BN_free@plt+0x38d8>
   16908:	str	r8, [r5]
   1690c:	mov	r4, #0
   16910:	b	168b4 <BN_free@plt+0x38d8>
   16914:	ldr	r3, [sp, #8]
   16918:	ldr	r2, [pc, #36]	; 16944 <BN_free@plt+0x3968>
   1691c:	ldr	r1, [sp, #4]
   16920:	smull	ip, r2, r2, r3
   16924:	str	r1, [r9]
   16928:	asr	r3, r3, #31
   1692c:	rsb	r3, r3, r2, asr #6
   16930:	str	r3, [r9, #4]
   16934:	b	168e4 <BN_free@plt+0x3908>
   16938:	bl	12d60 <__stack_chk_fail@plt>
   1693c:	andeq	ip, r2, ip
   16940:	ldrdeq	fp, [r2], -r8
   16944:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   16948:	ldr	ip, [pc, #272]	; 16a60 <BN_free@plt+0x3a84>
   1694c:	push	{r4, r5, r6, lr}
   16950:	cmp	r0, ip
   16954:	ldr	r4, [pc, #264]	; 16a64 <BN_free@plt+0x3a88>
   16958:	movgt	ip, #0
   1695c:	movle	ip, #1
   16960:	sub	r1, r1, #1
   16964:	sub	sp, sp, #56	; 0x38
   16968:	ldr	lr, [r4]
   1696c:	cmp	r1, #11
   16970:	orrhi	ip, ip, #1
   16974:	cmp	ip, #0
   16978:	str	lr, [sp, #52]	; 0x34
   1697c:	ldr	r5, [sp, #72]	; 0x48
   16980:	ldr	lr, [sp, #76]	; 0x4c
   16984:	ldr	r6, [sp, #80]	; 0x50
   16988:	bne	16a54 <BN_free@plt+0x3a78>
   1698c:	sub	ip, r2, #1
   16990:	cmp	ip, #30
   16994:	bhi	16a54 <BN_free@plt+0x3a78>
   16998:	cmp	r3, #23
   1699c:	bhi	16a54 <BN_free@plt+0x3a78>
   169a0:	cmp	lr, #60	; 0x3c
   169a4:	cmpls	r5, #59	; 0x3b
   169a8:	movhi	ip, #1
   169ac:	movls	ip, #0
   169b0:	bhi	16a54 <BN_free@plt+0x3a78>
   169b4:	sub	r0, r0, #1888	; 0x760
   169b8:	sub	r0, r0, #12
   169bc:	str	r0, [sp, #28]
   169c0:	add	r0, sp, #8
   169c4:	str	ip, [sp, #32]
   169c8:	str	r1, [sp, #24]
   169cc:	str	r2, [sp, #20]
   169d0:	str	r3, [sp, #16]
   169d4:	str	lr, [sp, #8]
   169d8:	str	ip, [sp, #36]	; 0x24
   169dc:	str	ip, [sp, #40]	; 0x28
   169e0:	str	ip, [sp, #44]	; 0x2c
   169e4:	str	ip, [sp, #48]	; 0x30
   169e8:	str	r5, [sp, #12]
   169ec:	bl	12940 <mktime@plt>
   169f0:	str	r0, [sp, #4]
   169f4:	add	r0, sp, #4
   169f8:	bl	127b4 <localtime@plt>
   169fc:	cmp	r0, #0
   16a00:	beq	16a28 <BN_free@plt+0x3a4c>
   16a04:	bl	12940 <mktime@plt>
   16a08:	mov	r5, r0
   16a0c:	add	r0, sp, #4
   16a10:	bl	12f1c <gmtime@plt>
   16a14:	cmp	r0, #0
   16a18:	beq	16a28 <BN_free@plt+0x3a4c>
   16a1c:	bl	12940 <mktime@plt>
   16a20:	sub	r5, r0, r5
   16a24:	b	16a2c <BN_free@plt+0x3a50>
   16a28:	mov	r5, #0
   16a2c:	ldr	r3, [sp, #4]
   16a30:	mov	r0, #0
   16a34:	sub	r3, r3, r5
   16a38:	str	r3, [r6]
   16a3c:	ldr	r2, [sp, #52]	; 0x34
   16a40:	ldr	r3, [r4]
   16a44:	cmp	r2, r3
   16a48:	bne	16a5c <BN_free@plt+0x3a80>
   16a4c:	add	sp, sp, #56	; 0x38
   16a50:	pop	{r4, r5, r6, pc}
   16a54:	mvn	r0, #0
   16a58:	b	16a3c <BN_free@plt+0x3a60>
   16a5c:	bl	12d60 <__stack_chk_fail@plt>
   16a60:			; <UNDEFINED> instruction: 0x000007b1
   16a64:	ldrdeq	fp, [r2], -r8
   16a68:	push	{r4, r5, lr}
   16a6c:	sub	sp, sp, #12
   16a70:	ldr	r5, [pc, #116]	; 16aec <BN_free@plt+0x3b10>
   16a74:	str	r0, [sp]
   16a78:	mov	r0, sp
   16a7c:	ldr	r3, [r5]
   16a80:	mov	r4, r1
   16a84:	str	r3, [sp, #4]
   16a88:	bl	12f1c <gmtime@plt>
   16a8c:	cmp	r0, #0
   16a90:	beq	16ae0 <BN_free@plt+0x3b04>
   16a94:	ldrd	r2, [r0, #16]
   16a98:	ldm	r0, {r1, lr}
   16a9c:	ldr	ip, [r0, #8]
   16aa0:	add	r3, r3, #1888	; 0x760
   16aa4:	add	r3, r3, #12
   16aa8:	add	r2, r2, #1
   16aac:	str	r1, [r4]
   16ab0:	ldr	r1, [r0, #12]
   16ab4:	mov	r0, #0
   16ab8:	str	lr, [r4, #4]
   16abc:	strd	r2, [r4, #16]
   16ac0:	str	ip, [r4, #8]
   16ac4:	str	r1, [r4, #12]
   16ac8:	ldr	r2, [sp, #4]
   16acc:	ldr	r3, [r5]
   16ad0:	cmp	r2, r3
   16ad4:	bne	16ae8 <BN_free@plt+0x3b0c>
   16ad8:	add	sp, sp, #12
   16adc:	pop	{r4, r5, pc}
   16ae0:	mvn	r0, #0
   16ae4:	b	16ac8 <BN_free@plt+0x3aec>
   16ae8:	bl	12d60 <__stack_chk_fail@plt>
   16aec:	ldrdeq	fp, [r2], -r8
   16af0:	mov	r1, #0
   16af4:	push	{r4, r5, r6, lr}
   16af8:	mov	r4, r0
   16afc:	mov	r0, r1
   16b00:	bl	12724 <daemon@plt>
   16b04:	subs	r5, r0, #0
   16b08:	bne	16b50 <BN_free@plt+0x3b74>
   16b0c:	cmp	r4, #0
   16b10:	beq	16b48 <BN_free@plt+0x3b6c>
   16b14:	mov	r0, r4
   16b18:	ldr	r1, [pc, #64]	; 16b60 <BN_free@plt+0x3b84>
   16b1c:	bl	12928 <fopen@plt>
   16b20:	subs	r4, r0, #0
   16b24:	beq	16b48 <BN_free@plt+0x3b6c>
   16b28:	bl	12e38 <getpid@plt>
   16b2c:	ldr	r2, [pc, #48]	; 16b64 <BN_free@plt+0x3b88>
   16b30:	mov	r1, #1
   16b34:	mov	r3, r0
   16b38:	mov	r0, r4
   16b3c:	bl	12d6c <__fprintf_chk@plt>
   16b40:	mov	r0, r4
   16b44:	bl	12898 <fclose@plt>
   16b48:	mov	r0, r5
   16b4c:	pop	{r4, r5, r6, pc}
   16b50:	ldr	r0, [pc, #16]	; 16b68 <BN_free@plt+0x3b8c>
   16b54:	bl	129a0 <perror@plt>
   16b58:	mvn	r5, #0
   16b5c:	b	16b48 <BN_free@plt+0x3b6c>
   16b60:	andeq	sl, r1, r0, asr r5
   16b64:	andeq	sl, r1, r8, lsr #19
   16b68:	andeq	sl, r1, r0, lsr #19
   16b6c:	cmp	r0, #0
   16b70:	bxeq	lr
   16b74:	b	12b50 <unlink@plt>
   16b78:	push	{r4, r5, r6, lr}
   16b7c:	mov	r6, r0
   16b80:	mov	r4, r1
   16b84:	ldr	r0, [pc, #72]	; 16bd4 <BN_free@plt+0x3bf8>
   16b88:	ldr	r1, [pc, #72]	; 16bd8 <BN_free@plt+0x3bfc>
   16b8c:	bl	12928 <fopen@plt>
   16b90:	subs	r5, r0, #0
   16b94:	beq	16bc4 <BN_free@plt+0x3be8>
   16b98:	mov	r3, r5
   16b9c:	mov	r2, r4
   16ba0:	mov	r1, #1
   16ba4:	mov	r0, r6
   16ba8:	bl	12eec <fread@plt>
   16bac:	mov	r6, r0
   16bb0:	mov	r0, r5
   16bb4:	bl	12898 <fclose@plt>
   16bb8:	subs	r0, r4, r6
   16bbc:	mvnne	r0, #0
   16bc0:	pop	{r4, r5, r6, pc}
   16bc4:	ldr	r0, [pc, #16]	; 16bdc <BN_free@plt+0x3c00>
   16bc8:	bl	12e14 <puts@plt>
   16bcc:	mvn	r0, #0
   16bd0:	pop	{r4, r5, r6, pc}
   16bd4:			; <UNDEFINED> instruction: 0x0001a9b0
   16bd8:	andeq	sl, r1, ip, lsr #19
   16bdc:	andeq	sl, r1, r0, asr #19
   16be0:	b	12784 <random@plt>
   16be4:	subs	r1, r0, #0
   16be8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16bec:	beq	16c4c <BN_free@plt+0x3c70>
   16bf0:	ldrb	r3, [r1]
   16bf4:	cmp	r3, #47	; 0x2f
   16bf8:	movne	r8, r1
   16bfc:	movne	r5, #4
   16c00:	movne	r4, #128	; 0x80
   16c04:	beq	16c58 <BN_free@plt+0x3c7c>
   16c08:	mov	r0, r4
   16c0c:	bl	12d48 <malloc@plt>
   16c10:	mov	r1, r4
   16c14:	subs	r6, r0, #0
   16c18:	beq	16c4c <BN_free@plt+0x3c70>
   16c1c:	bl	12d90 <getcwd@plt>
   16c20:	subs	r7, r0, #0
   16c24:	bne	16c60 <BN_free@plt+0x3c84>
   16c28:	bl	12fac <__errno_location@plt>
   16c2c:	lsl	r4, r4, #1
   16c30:	ldr	r7, [r0]
   16c34:	mov	r0, r6
   16c38:	bl	12a30 <free@plt>
   16c3c:	cmp	r7, #34	; 0x22
   16c40:	bne	16c4c <BN_free@plt+0x3c70>
   16c44:	subs	r5, r5, #1
   16c48:	bne	16c08 <BN_free@plt+0x3c2c>
   16c4c:	mov	r4, #0
   16c50:	mov	r0, r4
   16c54:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c58:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c5c:	b	12d3c <strdup@plt>
   16c60:	add	r4, r6, r4
   16c64:	mov	r9, #0
   16c68:	strb	r9, [r4, #-1]
   16c6c:	bl	12b38 <strlen@plt>
   16c70:	mov	sl, r0
   16c74:	mov	r0, r8
   16c78:	bl	12b38 <strlen@plt>
   16c7c:	add	r5, sl, r0
   16c80:	mov	fp, r0
   16c84:	add	r0, r5, #2
   16c88:	bl	12d48 <malloc@plt>
   16c8c:	subs	r4, r0, #0
   16c90:	beq	16cc4 <BN_free@plt+0x3ce8>
   16c94:	mov	r1, r7
   16c98:	mov	r2, sl
   16c9c:	bl	12b98 <memcpy@plt>
   16ca0:	add	r5, r4, r5
   16ca4:	mov	r3, #47	; 0x2f
   16ca8:	add	r0, sl, #1
   16cac:	mov	r2, fp
   16cb0:	mov	r1, r8
   16cb4:	strb	r3, [r4, sl]
   16cb8:	add	r0, r4, r0
   16cbc:	bl	12b98 <memcpy@plt>
   16cc0:	strb	r9, [r5, #1]
   16cc4:	mov	r0, r6
   16cc8:	bl	12a30 <free@plt>
   16ccc:	b	16c50 <BN_free@plt+0x3c74>
   16cd0:	mov	r0, #0
   16cd4:	bx	lr
   16cd8:	bx	lr
   16cdc:	b	12f88 <setenv@plt>
   16ce0:	b	12748 <unsetenv@plt>
   16ce4:	push	{r4, r5, r6, r7, r8, lr}
   16ce8:	mov	r5, r1
   16cec:	ldr	r1, [pc, #196]	; 16db8 <BN_free@plt+0x3ddc>
   16cf0:	bl	12928 <fopen@plt>
   16cf4:	subs	r4, r0, #0
   16cf8:	moveq	r6, r4
   16cfc:	beq	16d78 <BN_free@plt+0x3d9c>
   16d00:	mov	r2, #2
   16d04:	mov	r1, #0
   16d08:	bl	12a6c <fseek@plt>
   16d0c:	cmp	r0, #0
   16d10:	blt	16d80 <BN_free@plt+0x3da4>
   16d14:	mov	r0, r4
   16d18:	bl	12bd4 <ftell@plt>
   16d1c:	cmp	r0, #0
   16d20:	blt	16d80 <BN_free@plt+0x3da4>
   16d24:	mov	r2, #0
   16d28:	str	r0, [r5]
   16d2c:	mov	r1, r2
   16d30:	mov	r0, r4
   16d34:	bl	12a6c <fseek@plt>
   16d38:	cmp	r0, #0
   16d3c:	blt	16d80 <BN_free@plt+0x3da4>
   16d40:	ldr	r7, [r5]
   16d44:	mov	r0, r7
   16d48:	bl	12d48 <malloc@plt>
   16d4c:	subs	r6, r0, #0
   16d50:	beq	16dac <BN_free@plt+0x3dd0>
   16d54:	mov	r3, r4
   16d58:	mov	r2, r7
   16d5c:	mov	r1, #1
   16d60:	bl	12eec <fread@plt>
   16d64:	ldr	r3, [r5]
   16d68:	cmp	r3, r0
   16d6c:	mov	r0, r4
   16d70:	bne	16d94 <BN_free@plt+0x3db8>
   16d74:	bl	12898 <fclose@plt>
   16d78:	mov	r0, r6
   16d7c:	pop	{r4, r5, r6, r7, r8, pc}
   16d80:	mov	r0, r4
   16d84:	mov	r6, #0
   16d88:	bl	12898 <fclose@plt>
   16d8c:	mov	r0, r6
   16d90:	pop	{r4, r5, r6, r7, r8, pc}
   16d94:	bl	12898 <fclose@plt>
   16d98:	mov	r0, r6
   16d9c:	mov	r6, #0
   16da0:	bl	12a30 <free@plt>
   16da4:	mov	r0, r6
   16da8:	pop	{r4, r5, r6, r7, r8, pc}
   16dac:	mov	r0, r4
   16db0:	bl	12898 <fclose@plt>
   16db4:	b	16d78 <BN_free@plt+0x3d9c>
   16db8:	andeq	sl, r1, ip, lsr #19
   16dbc:	push	{r4, lr}
   16dc0:	mov	r1, #0
   16dc4:	bl	12a48 <access@plt>
   16dc8:	clz	r0, r0
   16dcc:	lsr	r0, r0, #5
   16dd0:	pop	{r4, pc}
   16dd4:	push	{r4, lr}
   16dd8:	mov	r4, r0
   16ddc:	bl	12ae4 <fflush@plt>
   16de0:	cmp	r0, #0
   16de4:	bne	16df8 <BN_free@plt+0x3e1c>
   16de8:	mov	r0, r4
   16dec:	bl	1273c <fileno@plt>
   16df0:	pop	{r4, lr}
   16df4:	b	12b80 <fdatasync@plt>
   16df8:	mvn	r0, #0
   16dfc:	pop	{r4, pc}
   16e00:	mov	r1, r0
   16e04:	mov	r0, #1
   16e08:	b	12904 <calloc@plt>
   16e0c:	cmp	r2, #0
   16e10:	beq	16e6c <BN_free@plt+0x3e90>
   16e14:	add	r2, r0, r2
   16e18:	push	{r4, lr}
   16e1c:	sub	r4, r2, #1
   16e20:	mov	lr, r1
   16e24:	b	16e3c <BN_free@plt+0x3e60>
   16e28:	ldrb	ip, [r3, #-1]
   16e2c:	mov	lr, r3
   16e30:	cmp	ip, #0
   16e34:	strb	ip, [r0], #1
   16e38:	beq	16e60 <BN_free@plt+0x3e84>
   16e3c:	cmp	r4, r0
   16e40:	add	r3, lr, #1
   16e44:	bne	16e28 <BN_free@plt+0x3e4c>
   16e48:	mov	r3, lr
   16e4c:	mov	r0, #0
   16e50:	strb	r0, [r2, #-1]
   16e54:	ldrb	r2, [r3], #1
   16e58:	cmp	r2, #0
   16e5c:	bne	16e54 <BN_free@plt+0x3e78>
   16e60:	sub	r0, r3, r1
   16e64:	sub	r0, r0, #1
   16e68:	pop	{r4, pc}
   16e6c:	mov	r3, r1
   16e70:	ldrb	r2, [r3], #1
   16e74:	cmp	r2, #0
   16e78:	bne	16e70 <BN_free@plt+0x3e94>
   16e7c:	sub	r0, r3, r1
   16e80:	sub	r0, r0, #1
   16e84:	bx	lr
   16e88:	cmp	r2, #0
   16e8c:	beq	16ec4 <BN_free@plt+0x3ee8>
   16e90:	sub	r2, r2, #1
   16e94:	add	r2, r0, r2
   16e98:	sub	ip, r0, #1
   16e9c:	sub	r1, r1, #1
   16ea0:	mov	r0, #0
   16ea4:	push	{lr}		; (str lr, [sp, #-4]!)
   16ea8:	ldrb	r3, [ip, #1]!
   16eac:	ldrb	lr, [r1, #1]!
   16eb0:	cmp	r2, ip
   16eb4:	eor	r3, r3, lr
   16eb8:	orr	r0, r0, r3
   16ebc:	bne	16ea8 <BN_free@plt+0x3ecc>
   16ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ec4:	mov	r0, r2
   16ec8:	bx	lr
   16ecc:	push	{r4, r5, r6, lr}
   16ed0:	mov	r6, r0
   16ed4:	mov	r0, r1
   16ed8:	mov	r4, r1
   16edc:	bl	12d48 <malloc@plt>
   16ee0:	subs	r5, r0, #0
   16ee4:	beq	16ef4 <BN_free@plt+0x3f18>
   16ee8:	mov	r2, r4
   16eec:	mov	r1, r6
   16ef0:	bl	12b98 <memcpy@plt>
   16ef4:	mov	r0, r5
   16ef8:	pop	{r4, r5, r6, pc}
   16efc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f00:	add	fp, sp, #32
   16f04:	ldr	r6, [pc, #312]	; 17044 <BN_free@plt+0x4068>
   16f08:	sub	sp, sp, #12
   16f0c:	ldr	r3, [r6]
   16f10:	mov	r5, r0
   16f14:	mov	r9, r1
   16f18:	mov	r7, r2
   16f1c:	str	r3, [fp, #-40]	; 0xffffffd8
   16f20:	bl	12e80 <fork@plt>
   16f24:	subs	r4, r0, #0
   16f28:	blt	17030 <BN_free@plt+0x4054>
   16f2c:	beq	16f68 <BN_free@plt+0x3f8c>
   16f30:	cmp	r7, #0
   16f34:	bne	16f54 <BN_free@plt+0x3f78>
   16f38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16f3c:	ldr	r3, [r6]
   16f40:	mov	r0, r7
   16f44:	cmp	r2, r3
   16f48:	bne	17040 <BN_free@plt+0x4064>
   16f4c:	sub	sp, fp, #32
   16f50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f54:	mov	r2, #0
   16f58:	sub	r1, fp, #44	; 0x2c
   16f5c:	bl	12bf8 <waitpid@plt>
   16f60:	mov	r7, #0
   16f64:	b	16f38 <BN_free@plt+0x3f5c>
   16f68:	sub	sp, sp, #128	; 0x80
   16f6c:	mov	r0, r5
   16f70:	bl	12d3c <strdup@plt>
   16f74:	mov	r6, sp
   16f78:	mov	sl, r6
   16f7c:	mov	r8, r0
   16f80:	mov	r0, r9
   16f84:	bl	12d3c <strdup@plt>
   16f88:	mov	r9, #1
   16f8c:	str	r8, [r6]
   16f90:	mov	r7, r0
   16f94:	mov	r3, r0
   16f98:	cmp	r9, #29
   16f9c:	movgt	r2, #0
   16fa0:	movle	r2, #1
   16fa4:	cmp	r3, #0
   16fa8:	moveq	r2, #0
   16fac:	cmp	r2, #0
   16fb0:	beq	16ffc <BN_free@plt+0x4020>
   16fb4:	ldrb	r2, [r3]
   16fb8:	cmp	r2, #0
   16fbc:	beq	16ffc <BN_free@plt+0x4020>
   16fc0:	cmp	r2, #32
   16fc4:	bne	16fdc <BN_free@plt+0x4000>
   16fc8:	ldrb	r2, [r3, #1]!
   16fcc:	cmp	r2, #32
   16fd0:	beq	16fc8 <BN_free@plt+0x3fec>
   16fd4:	cmp	r2, #0
   16fd8:	beq	16ffc <BN_free@plt+0x4020>
   16fdc:	mov	r0, r3
   16fe0:	str	r3, [sl, #4]!
   16fe4:	mov	r1, #32
   16fe8:	bl	128c8 <strchr@plt>
   16fec:	add	r9, r9, #1
   16ff0:	subs	r3, r0, #0
   16ff4:	strbne	r4, [r3], #1
   16ff8:	b	16f98 <BN_free@plt+0x3fbc>
   16ffc:	mov	r4, #0
   17000:	mov	r1, r6
   17004:	mov	r0, r5
   17008:	str	r4, [r6, r9, lsl #2]
   1700c:	bl	12b74 <execv@plt>
   17010:	ldr	r0, [pc, #48]	; 17048 <BN_free@plt+0x406c>
   17014:	bl	129a0 <perror@plt>
   17018:	mov	r0, r8
   1701c:	bl	12a30 <free@plt>
   17020:	mov	r0, r7
   17024:	bl	12a30 <free@plt>
   17028:	mov	r0, r4
   1702c:	bl	12fa0 <exit@plt>
   17030:	ldr	r0, [pc, #20]	; 1704c <BN_free@plt+0x4070>
   17034:	bl	129a0 <perror@plt>
   17038:	mvn	r7, #0
   1703c:	b	16f38 <BN_free@plt+0x3f5c>
   17040:	bl	12d60 <__stack_chk_fail@plt>
   17044:	ldrdeq	fp, [r2], -r8
   17048:	andeq	sl, r1, r8, ror #19
   1704c:	andeq	sl, r1, r0, ror #19
   17050:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17054:	mov	r8, r1
   17058:	ldr	r9, [pc, #280]	; 17178 <BN_free@plt+0x419c>
   1705c:	sub	sp, sp, #12
   17060:	mov	r4, r0
   17064:	ldr	r1, [r9]
   17068:	mov	r6, r2
   1706c:	mov	r5, r3
   17070:	str	r1, [sp, #4]
   17074:	ldr	sl, [sp, #48]	; 0x30
   17078:	bl	12bbc <EVP_MD_CTX_new@plt>
   1707c:	subs	r7, r0, #0
   17080:	beq	1713c <BN_free@plt+0x4160>
   17084:	mov	r1, r4
   17088:	mov	r2, #0
   1708c:	bl	1270c <EVP_DigestInit_ex@plt>
   17090:	subs	r4, r0, #0
   17094:	beq	17144 <BN_free@plt+0x4168>
   17098:	cmp	r8, #0
   1709c:	subne	r6, r6, #4
   170a0:	subne	r5, r5, #4
   170a4:	movne	r4, #0
   170a8:	bne	170bc <BN_free@plt+0x40e0>
   170ac:	b	17100 <BN_free@plt+0x4124>
   170b0:	add	r4, r4, #1
   170b4:	cmp	r8, r4
   170b8:	beq	17100 <BN_free@plt+0x4124>
   170bc:	ldr	r2, [r5, #4]!
   170c0:	ldr	r1, [r6, #4]!
   170c4:	mov	r0, r7
   170c8:	bl	129d0 <EVP_DigestUpdate@plt>
   170cc:	subs	fp, r0, #0
   170d0:	bne	170b0 <BN_free@plt+0x40d4>
   170d4:	bl	12790 <ERR_get_error@plt>
   170d8:	mov	r1, fp
   170dc:	bl	12c4c <ERR_error_string@plt>
   170e0:	ldr	r1, [pc, #148]	; 1717c <BN_free@plt+0x41a0>
   170e4:	mov	r2, r0
   170e8:	mov	r0, #5
   170ec:	bl	14e90 <BN_free@plt+0x1eb4>
   170f0:	mov	r0, r7
   170f4:	bl	12e20 <EVP_MD_CTX_free@plt>
   170f8:	mvn	r0, #0
   170fc:	b	17124 <BN_free@plt+0x4148>
   17100:	mov	r1, sl
   17104:	mov	r2, sp
   17108:	mov	r0, r7
   1710c:	bl	12aa8 <EVP_DigestFinal@plt>
   17110:	subs	r4, r0, #0
   17114:	beq	1715c <BN_free@plt+0x4180>
   17118:	mov	r0, r7
   1711c:	bl	12e20 <EVP_MD_CTX_free@plt>
   17120:	mov	r0, #0
   17124:	ldr	r2, [sp, #4]
   17128:	ldr	r3, [r9]
   1712c:	cmp	r2, r3
   17130:	bne	17174 <BN_free@plt+0x4198>
   17134:	add	sp, sp, #12
   17138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1713c:	mvn	r0, #0
   17140:	b	17124 <BN_free@plt+0x4148>
   17144:	bl	12790 <ERR_get_error@plt>
   17148:	mov	r1, r4
   1714c:	bl	12c4c <ERR_error_string@plt>
   17150:	ldr	r1, [pc, #40]	; 17180 <BN_free@plt+0x41a4>
   17154:	mov	r2, r0
   17158:	b	170e8 <BN_free@plt+0x410c>
   1715c:	bl	12790 <ERR_get_error@plt>
   17160:	mov	r1, r4
   17164:	bl	12c4c <ERR_error_string@plt>
   17168:	ldr	r1, [pc, #20]	; 17184 <BN_free@plt+0x41a8>
   1716c:	mov	r2, r0
   17170:	b	170e8 <BN_free@plt+0x410c>
   17174:	bl	12d60 <__stack_chk_fail@plt>
   17178:	ldrdeq	fp, [r2], -r8
   1717c:	andeq	sl, r1, r0, asr #20
   17180:	andeq	sl, r1, r8, lsl sl
   17184:	andeq	sl, r1, r8, ror #20
   17188:	cmp	r0, #24
   1718c:	beq	171a8 <BN_free@plt+0x41cc>
   17190:	cmp	r0, #32
   17194:	beq	171b0 <BN_free@plt+0x41d4>
   17198:	cmp	r0, #16
   1719c:	beq	171ac <BN_free@plt+0x41d0>
   171a0:	mov	r0, #0
   171a4:	bx	lr
   171a8:	b	1276c <EVP_aes_192_ecb@plt>
   171ac:	b	12f4c <EVP_aes_128_ecb@plt>
   171b0:	b	12ab4 <EVP_aes_256_ecb@plt>
   171b4:	push	{r4, r5, r6, r7, r8, lr}
   171b8:	sub	sp, sp, #8
   171bc:	mov	r8, r0
   171c0:	mov	r4, r1
   171c4:	mov	r5, r2
   171c8:	mov	r7, r3
   171cc:	bl	12700 <HMAC_CTX_new@plt>
   171d0:	subs	r6, r0, #0
   171d4:	beq	17260 <BN_free@plt+0x4284>
   171d8:	mov	ip, #0
   171dc:	mov	r3, r8
   171e0:	mov	r2, r5
   171e4:	mov	r1, r4
   171e8:	str	ip, [sp]
   171ec:	bl	12dc0 <HMAC_Init_ex@plt>
   171f0:	cmp	r0, #1
   171f4:	bne	17258 <BN_free@plt+0x427c>
   171f8:	cmp	r7, #0
   171fc:	beq	1722c <BN_free@plt+0x4250>
   17200:	ldr	r3, [sp, #32]
   17204:	sub	r4, r3, #4
   17208:	ldr	r3, [sp, #36]	; 0x24
   1720c:	add	r7, r4, r7, lsl #2
   17210:	sub	r5, r3, #4
   17214:	ldr	r1, [r4, #4]!
   17218:	ldr	r2, [r5, #4]!
   1721c:	mov	r0, r6
   17220:	bl	128ec <HMAC_Update@plt>
   17224:	cmp	r4, r7
   17228:	bne	17214 <BN_free@plt+0x4238>
   1722c:	add	r2, sp, #44	; 0x2c
   17230:	ldr	r1, [sp, #40]	; 0x28
   17234:	mov	r0, r6
   17238:	bl	12e8c <HMAC_Final@plt>
   1723c:	mov	r4, r0
   17240:	mov	r0, r6
   17244:	bl	12cb8 <HMAC_CTX_free@plt>
   17248:	subs	r0, r4, #1
   1724c:	mvnne	r0, #0
   17250:	add	sp, sp, #8
   17254:	pop	{r4, r5, r6, r7, r8, pc}
   17258:	mov	r0, r6
   1725c:	bl	12cb8 <HMAC_CTX_free@plt>
   17260:	mvn	r0, #0
   17264:	b	17250 <BN_free@plt+0x4274>
   17268:	push	{r4, lr}
   1726c:	mov	r4, r0
   17270:	ldr	r0, [r0, #24]
   17274:	bl	12a9c <BN_clear_free@plt>
   17278:	ldr	r0, [r4, #20]
   1727c:	bl	12a9c <BN_clear_free@plt>
   17280:	ldr	r0, [r4, #16]
   17284:	bl	12a9c <BN_clear_free@plt>
   17288:	ldr	r0, [r4, #12]
   1728c:	bl	12a9c <BN_clear_free@plt>
   17290:	ldr	r0, [r4]
   17294:	bl	12964 <EC_GROUP_free@plt>
   17298:	ldr	r0, [r4, #8]
   1729c:	bl	127fc <BN_CTX_free@plt>
   172a0:	mov	r0, r4
   172a4:	pop	{r4, lr}
   172a8:	b	12a30 <free@plt>
   172ac:	push	{r4, r5, r6, r7, lr}
   172b0:	sub	sp, sp, #12
   172b4:	mov	r5, r1
   172b8:	mov	r6, r2
   172bc:	mov	r7, r3
   172c0:	mov	r4, r0
   172c4:	bl	12eb0 <EVP_md4@plt>
   172c8:	str	r7, [sp]
   172cc:	mov	r3, r6
   172d0:	mov	r2, r5
   172d4:	mov	r1, r4
   172d8:	bl	17050 <BN_free@plt+0x4074>
   172dc:	add	sp, sp, #12
   172e0:	pop	{r4, r5, r6, r7, pc}
   172e4:	push	{r4, r5, r6, lr}
   172e8:	mov	ip, #0
   172ec:	ldr	r4, [pc, #140]	; 17380 <BN_free@plt+0x43a4>
   172f0:	sub	sp, sp, #144	; 0x90
   172f4:	mov	r5, r0
   172f8:	mov	r6, r2
   172fc:	sub	r1, r1, #1
   17300:	ldr	r2, [r4]
   17304:	add	r0, sp, #132	; 0x84
   17308:	mov	r3, ip
   1730c:	str	r2, [sp, #140]	; 0x8c
   17310:	ldrb	r2, [r1, #1]!
   17314:	rsb	lr, ip, #7
   17318:	orr	r3, r3, r2, asr ip
   1731c:	lsl	r2, r2, lr
   17320:	add	ip, ip, #1
   17324:	orr	r3, r3, #1
   17328:	cmp	ip, #7
   1732c:	strb	r3, [r0], #1
   17330:	uxtb	r3, r2
   17334:	bne	17310 <BN_free@plt+0x4334>
   17338:	orr	r3, r3, #1
   1733c:	add	r1, sp, #4
   17340:	add	r0, sp, #132	; 0x84
   17344:	strb	r3, [sp, #139]	; 0x8b
   17348:	bl	12910 <DES_set_key@plt>
   1734c:	add	r2, sp, #4
   17350:	mov	r0, r5
   17354:	mov	r3, #1
   17358:	mov	r1, r6
   1735c:	bl	12ad8 <DES_ecb_encrypt@plt>
   17360:	ldr	r2, [sp, #140]	; 0x8c
   17364:	ldr	r3, [r4]
   17368:	mov	r0, #0
   1736c:	cmp	r2, r3
   17370:	bne	1737c <BN_free@plt+0x43a0>
   17374:	add	sp, sp, #144	; 0x90
   17378:	pop	{r4, r5, r6, pc}
   1737c:	bl	12d60 <__stack_chk_fail@plt>
   17380:	ldrdeq	fp, [r2], -r8
   17384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17388:	mov	sl, r1
   1738c:	ldr	r8, [pc, #304]	; 174c4 <BN_free@plt+0x44e8>
   17390:	sub	sp, sp, #36	; 0x24
   17394:	mov	fp, r0
   17398:	ldr	r1, [r8]
   1739c:	mov	r4, r2
   173a0:	mov	r9, r3
   173a4:	str	r1, [sp, #28]
   173a8:	bl	12c88 <EVP_CIPHER_CTX_new@plt>
   173ac:	subs	r5, r0, #0
   173b0:	beq	174b8 <BN_free@plt+0x44dc>
   173b4:	mov	r1, #0
   173b8:	bl	12e98 <EVP_CIPHER_CTX_set_padding@plt>
   173bc:	cmp	r0, #0
   173c0:	beq	17464 <BN_free@plt+0x4488>
   173c4:	bl	12d84 <EVP_rc4@plt>
   173c8:	mov	r6, #0
   173cc:	mov	r7, #1
   173d0:	mov	r3, r6
   173d4:	strd	r6, [sp]
   173d8:	mov	r2, r6
   173dc:	mov	r1, r0
   173e0:	mov	r0, r5
   173e4:	bl	1279c <EVP_CipherInit_ex@plt>
   173e8:	cmp	r0, r6
   173ec:	beq	17464 <BN_free@plt+0x4488>
   173f0:	mov	r1, sl
   173f4:	mov	r0, r5
   173f8:	bl	12c58 <EVP_CIPHER_CTX_set_key_length@plt>
   173fc:	cmp	r0, r6
   17400:	beq	17464 <BN_free@plt+0x4488>
   17404:	strd	r6, [sp]
   17408:	mov	r3, fp
   1740c:	mov	r2, r6
   17410:	mov	r1, r6
   17414:	mov	r0, r5
   17418:	bl	1279c <EVP_CipherInit_ex@plt>
   1741c:	cmp	r0, r6
   17420:	beq	17464 <BN_free@plt+0x4488>
   17424:	cmp	r4, #15
   17428:	add	r6, sp, #8
   1742c:	movhi	r7, #16
   17430:	bhi	17444 <BN_free@plt+0x4468>
   17434:	b	1748c <BN_free@plt+0x44b0>
   17438:	sub	r4, r4, #16
   1743c:	cmp	r4, #15
   17440:	bls	1748c <BN_free@plt+0x44b0>
   17444:	add	r3, sp, #12
   17448:	str	r7, [sp]
   1744c:	mov	r2, r6
   17450:	mov	r1, r3
   17454:	mov	r0, r5
   17458:	bl	12ed4 <EVP_CipherUpdate@plt>
   1745c:	cmp	r0, #0
   17460:	bne	17438 <BN_free@plt+0x445c>
   17464:	mvn	r4, #0
   17468:	mov	r0, r5
   1746c:	bl	12e08 <EVP_CIPHER_CTX_free@plt>
   17470:	ldr	r2, [sp, #28]
   17474:	ldr	r3, [r8]
   17478:	mov	r0, r4
   1747c:	cmp	r2, r3
   17480:	bne	174c0 <BN_free@plt+0x44e4>
   17484:	add	sp, sp, #36	; 0x24
   17488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1748c:	ldr	r3, [sp, #72]	; 0x48
   17490:	mov	r2, r6
   17494:	str	r3, [sp]
   17498:	mov	r1, r9
   1749c:	mov	r3, r9
   174a0:	mov	r0, r5
   174a4:	bl	12ed4 <EVP_CipherUpdate@plt>
   174a8:	clz	r0, r0
   174ac:	lsr	r0, r0, #5
   174b0:	rsb	r4, r0, #0
   174b4:	b	17468 <BN_free@plt+0x448c>
   174b8:	mvn	r4, #0
   174bc:	b	17470 <BN_free@plt+0x4494>
   174c0:	bl	12d60 <__stack_chk_fail@plt>
   174c4:	ldrdeq	fp, [r2], -r8
   174c8:	push	{r4, r5, r6, r7, lr}
   174cc:	sub	sp, sp, #12
   174d0:	mov	r5, r1
   174d4:	mov	r6, r2
   174d8:	mov	r7, r3
   174dc:	mov	r4, r0
   174e0:	bl	12994 <EVP_md5@plt>
   174e4:	str	r7, [sp]
   174e8:	mov	r3, r6
   174ec:	mov	r2, r5
   174f0:	mov	r1, r4
   174f4:	bl	17050 <BN_free@plt+0x4074>
   174f8:	add	sp, sp, #12
   174fc:	pop	{r4, r5, r6, r7, pc}
   17500:	push	{r4, r5, r6, r7, lr}
   17504:	sub	sp, sp, #12
   17508:	mov	r5, r1
   1750c:	mov	r6, r2
   17510:	mov	r7, r3
   17514:	mov	r4, r0
   17518:	bl	12c34 <EVP_sha1@plt>
   1751c:	str	r7, [sp]
   17520:	mov	r3, r6
   17524:	mov	r2, r5
   17528:	mov	r1, r4
   1752c:	bl	17050 <BN_free@plt+0x4074>
   17530:	add	sp, sp, #12
   17534:	pop	{r4, r5, r6, r7, pc}
   17538:	push	{r4, r5, r6, r7, lr}
   1753c:	sub	sp, sp, #12
   17540:	mov	r5, r1
   17544:	mov	r6, r2
   17548:	mov	r7, r3
   1754c:	mov	r4, r0
   17550:	bl	12ee0 <EVP_sha256@plt>
   17554:	str	r7, [sp]
   17558:	mov	r3, r6
   1755c:	mov	r2, r5
   17560:	mov	r1, r4
   17564:	bl	17050 <BN_free@plt+0x4074>
   17568:	add	sp, sp, #12
   1756c:	pop	{r4, r5, r6, r7, pc}
   17570:	push	{r4, r5, r6, r7, lr}
   17574:	sub	sp, sp, #12
   17578:	mov	r5, r1
   1757c:	mov	r6, r2
   17580:	mov	r7, r3
   17584:	mov	r4, r0
   17588:	bl	12838 <EVP_sha384@plt>
   1758c:	str	r7, [sp]
   17590:	mov	r3, r6
   17594:	mov	r2, r5
   17598:	mov	r1, r4
   1759c:	bl	17050 <BN_free@plt+0x4074>
   175a0:	add	sp, sp, #12
   175a4:	pop	{r4, r5, r6, r7, pc}
   175a8:	push	{r4, r5, r6, r7, lr}
   175ac:	sub	sp, sp, #12
   175b0:	mov	r5, r1
   175b4:	mov	r6, r2
   175b8:	mov	r7, r3
   175bc:	mov	r4, r0
   175c0:	bl	12ec8 <EVP_sha512@plt>
   175c4:	str	r7, [sp]
   175c8:	mov	r3, r6
   175cc:	mov	r2, r5
   175d0:	mov	r1, r4
   175d4:	bl	17050 <BN_free@plt+0x4074>
   175d8:	add	sp, sp, #12
   175dc:	pop	{r4, r5, r6, r7, pc}
   175e0:	push	{r4, r5, r6, r7, lr}
   175e4:	mov	r7, r0
   175e8:	sub	sp, sp, #12
   175ec:	mov	r0, r1
   175f0:	mov	r4, r1
   175f4:	bl	17188 <BN_free@plt+0x41ac>
   175f8:	subs	r6, r0, #0
   175fc:	beq	1765c <BN_free@plt+0x4680>
   17600:	bl	12c88 <EVP_CIPHER_CTX_new@plt>
   17604:	subs	r5, r0, #0
   17608:	beq	17638 <BN_free@plt+0x465c>
   1760c:	mov	r4, #0
   17610:	mov	r3, r7
   17614:	mov	r1, r6
   17618:	str	r4, [sp]
   1761c:	mov	r2, r4
   17620:	bl	12fc4 <EVP_EncryptInit_ex@plt>
   17624:	cmp	r0, #1
   17628:	bne	17644 <BN_free@plt+0x4668>
   1762c:	mov	r1, r4
   17630:	mov	r0, r5
   17634:	bl	12e98 <EVP_CIPHER_CTX_set_padding@plt>
   17638:	mov	r0, r5
   1763c:	add	sp, sp, #12
   17640:	pop	{r4, r5, r6, r7, pc}
   17644:	mov	r0, r5
   17648:	bl	12a30 <free@plt>
   1764c:	mov	r5, r4
   17650:	mov	r0, r5
   17654:	add	sp, sp, #12
   17658:	pop	{r4, r5, r6, r7, pc}
   1765c:	mov	r3, r4
   17660:	ldr	r2, [pc, #16]	; 17678 <BN_free@plt+0x469c>
   17664:	ldr	r1, [pc, #16]	; 1767c <BN_free@plt+0x46a0>
   17668:	mov	r0, #3
   1766c:	mov	r5, r6
   17670:	bl	14e90 <BN_free@plt+0x1eb4>
   17674:	b	17638 <BN_free@plt+0x465c>
   17678:	strdeq	sl, [r1], -r0
   1767c:	andeq	sl, r1, ip, lsl #21
   17680:	push	{r4, lr}
   17684:	sub	sp, sp, #16
   17688:	ldr	r4, [pc, #108]	; 176fc <BN_free@plt+0x4720>
   1768c:	mov	ip, #16
   17690:	mov	r3, r1
   17694:	ldr	lr, [r4]
   17698:	mov	r1, r2
   1769c:	str	ip, [sp]
   176a0:	add	r2, sp, #8
   176a4:	str	lr, [sp, #12]
   176a8:	str	ip, [sp, #8]
   176ac:	bl	12fd0 <EVP_EncryptUpdate@plt>
   176b0:	cmp	r0, #1
   176b4:	moveq	r0, #0
   176b8:	bne	176d4 <BN_free@plt+0x46f8>
   176bc:	ldr	r2, [sp, #12]
   176c0:	ldr	r3, [r4]
   176c4:	cmp	r2, r3
   176c8:	bne	176f8 <BN_free@plt+0x471c>
   176cc:	add	sp, sp, #16
   176d0:	pop	{r4, pc}
   176d4:	bl	12790 <ERR_get_error@plt>
   176d8:	mov	r1, #0
   176dc:	bl	12c4c <ERR_error_string@plt>
   176e0:	ldr	r1, [pc, #24]	; 17700 <BN_free@plt+0x4724>
   176e4:	mov	r2, r0
   176e8:	mov	r0, #5
   176ec:	bl	14e90 <BN_free@plt+0x1eb4>
   176f0:	mvn	r0, #0
   176f4:	b	176bc <BN_free@plt+0x46e0>
   176f8:	bl	12d60 <__stack_chk_fail@plt>
   176fc:	ldrdeq	fp, [r2], -r8
   17700:	andeq	sl, r1, r4, lsr #21
   17704:	push	{r4, r5, lr}
   17708:	sub	sp, sp, #28
   1770c:	ldr	r4, [pc, #128]	; 17794 <BN_free@plt+0x47b8>
   17710:	mov	r3, #16
   17714:	mov	r2, sp
   17718:	ldr	ip, [r4]
   1771c:	add	r1, sp, #4
   17720:	str	ip, [sp, #20]
   17724:	str	r3, [sp]
   17728:	mov	r5, r0
   1772c:	bl	12f40 <EVP_EncryptFinal_ex@plt>
   17730:	cmp	r0, #1
   17734:	beq	17754 <BN_free@plt+0x4778>
   17738:	bl	12790 <ERR_get_error@plt>
   1773c:	mov	r1, #0
   17740:	bl	12c4c <ERR_error_string@plt>
   17744:	ldr	r1, [pc, #76]	; 17798 <BN_free@plt+0x47bc>
   17748:	mov	r2, r0
   1774c:	mov	r0, #5
   17750:	bl	14e90 <BN_free@plt+0x1eb4>
   17754:	ldr	r2, [sp]
   17758:	cmp	r2, #0
   1775c:	bne	17780 <BN_free@plt+0x47a4>
   17760:	mov	r0, r5
   17764:	bl	12e08 <EVP_CIPHER_CTX_free@plt>
   17768:	ldr	r2, [sp, #20]
   1776c:	ldr	r3, [r4]
   17770:	cmp	r2, r3
   17774:	bne	17790 <BN_free@plt+0x47b4>
   17778:	add	sp, sp, #28
   1777c:	pop	{r4, r5, pc}
   17780:	ldr	r1, [pc, #20]	; 1779c <BN_free@plt+0x47c0>
   17784:	mov	r0, #5
   17788:	bl	14e90 <BN_free@plt+0x1eb4>
   1778c:	b	17760 <BN_free@plt+0x4784>
   17790:	bl	12d60 <__stack_chk_fail@plt>
   17794:	ldrdeq	fp, [r2], -r8
   17798:	andeq	sl, r1, ip, asr #21
   1779c:	strdeq	sl, [r1], -r4
   177a0:	push	{r4, r5, r6, r7, lr}
   177a4:	mov	r7, r0
   177a8:	sub	sp, sp, #12
   177ac:	mov	r0, r1
   177b0:	mov	r4, r1
   177b4:	bl	17188 <BN_free@plt+0x41ac>
   177b8:	subs	r6, r0, #0
   177bc:	beq	1781c <BN_free@plt+0x4840>
   177c0:	bl	12c88 <EVP_CIPHER_CTX_new@plt>
   177c4:	subs	r5, r0, #0
   177c8:	beq	177f8 <BN_free@plt+0x481c>
   177cc:	mov	r4, #0
   177d0:	mov	r3, r7
   177d4:	mov	r1, r6
   177d8:	str	r4, [sp]
   177dc:	mov	r2, r4
   177e0:	bl	12958 <EVP_DecryptInit_ex@plt>
   177e4:	cmp	r0, #1
   177e8:	bne	17804 <BN_free@plt+0x4828>
   177ec:	mov	r1, r4
   177f0:	mov	r0, r5
   177f4:	bl	12e98 <EVP_CIPHER_CTX_set_padding@plt>
   177f8:	mov	r0, r5
   177fc:	add	sp, sp, #12
   17800:	pop	{r4, r5, r6, r7, pc}
   17804:	mov	r0, r5
   17808:	bl	12e08 <EVP_CIPHER_CTX_free@plt>
   1780c:	mov	r5, r4
   17810:	mov	r0, r5
   17814:	add	sp, sp, #12
   17818:	pop	{r4, r5, r6, r7, pc}
   1781c:	mov	r3, r4
   17820:	ldr	r2, [pc, #16]	; 17838 <BN_free@plt+0x485c>
   17824:	ldr	r1, [pc, #16]	; 1783c <BN_free@plt+0x4860>
   17828:	mov	r0, #3
   1782c:	mov	r5, r6
   17830:	bl	14e90 <BN_free@plt+0x1eb4>
   17834:	b	177f8 <BN_free@plt+0x481c>
   17838:	andeq	sl, r1, r4, lsl #20
   1783c:	andeq	sl, r1, ip, lsl #21
   17840:	push	{r4, lr}
   17844:	sub	sp, sp, #16
   17848:	ldr	r4, [pc, #108]	; 178bc <BN_free@plt+0x48e0>
   1784c:	mov	ip, #16
   17850:	mov	r3, r1
   17854:	ldr	lr, [r4]
   17858:	mov	r1, r2
   1785c:	str	ip, [sp]
   17860:	add	r2, sp, #8
   17864:	str	lr, [sp, #12]
   17868:	str	ip, [sp, #8]
   1786c:	bl	12f64 <EVP_DecryptUpdate@plt>
   17870:	cmp	r0, #1
   17874:	moveq	r0, #0
   17878:	bne	17894 <BN_free@plt+0x48b8>
   1787c:	ldr	r2, [sp, #12]
   17880:	ldr	r3, [r4]
   17884:	cmp	r2, r3
   17888:	bne	178b8 <BN_free@plt+0x48dc>
   1788c:	add	sp, sp, #16
   17890:	pop	{r4, pc}
   17894:	bl	12790 <ERR_get_error@plt>
   17898:	mov	r1, #0
   1789c:	bl	12c4c <ERR_error_string@plt>
   178a0:	ldr	r1, [pc, #24]	; 178c0 <BN_free@plt+0x48e4>
   178a4:	mov	r2, r0
   178a8:	mov	r0, #5
   178ac:	bl	14e90 <BN_free@plt+0x1eb4>
   178b0:	mvn	r0, #0
   178b4:	b	1787c <BN_free@plt+0x48a0>
   178b8:	bl	12d60 <__stack_chk_fail@plt>
   178bc:	ldrdeq	fp, [r2], -r8
   178c0:	andeq	sl, r1, ip, lsr #22
   178c4:	push	{r4, r5, lr}
   178c8:	sub	sp, sp, #28
   178cc:	ldr	r4, [pc, #128]	; 17954 <BN_free@plt+0x4978>
   178d0:	mov	r3, #16
   178d4:	mov	r2, sp
   178d8:	ldr	ip, [r4]
   178dc:	add	r1, sp, #4
   178e0:	str	ip, [sp, #20]
   178e4:	str	r3, [sp]
   178e8:	mov	r5, r0
   178ec:	bl	12bc8 <EVP_DecryptFinal_ex@plt>
   178f0:	cmp	r0, #1
   178f4:	beq	17914 <BN_free@plt+0x4938>
   178f8:	bl	12790 <ERR_get_error@plt>
   178fc:	mov	r1, #0
   17900:	bl	12c4c <ERR_error_string@plt>
   17904:	ldr	r1, [pc, #76]	; 17958 <BN_free@plt+0x497c>
   17908:	mov	r2, r0
   1790c:	mov	r0, #5
   17910:	bl	14e90 <BN_free@plt+0x1eb4>
   17914:	ldr	r2, [sp]
   17918:	cmp	r2, #0
   1791c:	bne	17940 <BN_free@plt+0x4964>
   17920:	mov	r0, r5
   17924:	bl	12e08 <EVP_CIPHER_CTX_free@plt>
   17928:	ldr	r2, [sp, #20]
   1792c:	ldr	r3, [r4]
   17930:	cmp	r2, r3
   17934:	bne	17950 <BN_free@plt+0x4974>
   17938:	add	sp, sp, #28
   1793c:	pop	{r4, r5, pc}
   17940:	ldr	r1, [pc, #20]	; 1795c <BN_free@plt+0x4980>
   17944:	mov	r0, #5
   17948:	bl	14e90 <BN_free@plt+0x1eb4>
   1794c:	b	17920 <BN_free@plt+0x4944>
   17950:	bl	12d60 <__stack_chk_fail@plt>
   17954:	ldrdeq	fp, [r2], -r8
   17958:	andeq	sl, r1, r4, asr fp
   1795c:	andeq	sl, r1, ip, ror fp
   17960:	push	{r4, r5, r6, r7, lr}
   17964:	sub	sp, sp, #260	; 0x104
   17968:	ldr	r5, [pc, #128]	; 179f0 <BN_free@plt+0x4a14>
   1796c:	lsl	r1, r1, #3
   17970:	mov	r4, r2
   17974:	ldr	ip, [r5]
   17978:	add	r2, sp, #8
   1797c:	mov	r7, r3
   17980:	str	ip, [sp, #252]	; 0xfc
   17984:	ldr	r6, [sp, #280]	; 0x118
   17988:	bl	12b14 <AES_set_encrypt_key@plt>
   1798c:	subs	r1, r0, #0
   17990:	bne	179e4 <BN_free@plt+0x4a08>
   17994:	lsl	r4, r4, #3
   17998:	str	r4, [sp]
   1799c:	mov	r3, r7
   179a0:	mov	r2, r6
   179a4:	add	r0, sp, #8
   179a8:	bl	12e5c <AES_wrap_key@plt>
   179ac:	mov	r1, #244	; 0xf4
   179b0:	mov	r4, r0
   179b4:	add	r0, sp, #8
   179b8:	bl	12de4 <OPENSSL_cleanse@plt>
   179bc:	cmp	r4, #0
   179c0:	movgt	r0, #0
   179c4:	movle	r0, #1
   179c8:	rsb	r0, r0, #0
   179cc:	ldr	r2, [sp, #252]	; 0xfc
   179d0:	ldr	r3, [r5]
   179d4:	cmp	r2, r3
   179d8:	bne	179ec <BN_free@plt+0x4a10>
   179dc:	add	sp, sp, #260	; 0x104
   179e0:	pop	{r4, r5, r6, r7, pc}
   179e4:	mvn	r0, #0
   179e8:	b	179cc <BN_free@plt+0x49f0>
   179ec:	bl	12d60 <__stack_chk_fail@plt>
   179f0:	ldrdeq	fp, [r2], -r8
   179f4:	push	{r4, r5, r6, r7, lr}
   179f8:	sub	sp, sp, #260	; 0x104
   179fc:	ldr	r5, [pc, #132]	; 17a88 <BN_free@plt+0x4aac>
   17a00:	lsl	r1, r1, #3
   17a04:	mov	r4, r2
   17a08:	ldr	ip, [r5]
   17a0c:	add	r2, sp, #8
   17a10:	mov	r7, r3
   17a14:	str	ip, [sp, #252]	; 0xfc
   17a18:	ldr	r6, [sp, #280]	; 0x118
   17a1c:	bl	12f70 <AES_set_decrypt_key@plt>
   17a20:	subs	r1, r0, #0
   17a24:	bne	17a7c <BN_free@plt+0x4aa0>
   17a28:	add	r4, r4, #1
   17a2c:	mov	r3, r7
   17a30:	lsl	r4, r4, #3
   17a34:	str	r4, [sp]
   17a38:	mov	r2, r6
   17a3c:	add	r0, sp, #8
   17a40:	bl	12afc <AES_unwrap_key@plt>
   17a44:	mov	r1, #244	; 0xf4
   17a48:	mov	r4, r0
   17a4c:	add	r0, sp, #8
   17a50:	bl	12de4 <OPENSSL_cleanse@plt>
   17a54:	cmp	r4, #0
   17a58:	movgt	r0, #0
   17a5c:	movle	r0, #1
   17a60:	rsb	r0, r0, #0
   17a64:	ldr	r2, [sp, #252]	; 0xfc
   17a68:	ldr	r3, [r5]
   17a6c:	cmp	r2, r3
   17a70:	bne	17a84 <BN_free@plt+0x4aa8>
   17a74:	add	sp, sp, #260	; 0x104
   17a78:	pop	{r4, r5, r6, r7, pc}
   17a7c:	mvn	r0, #0
   17a80:	b	17a64 <BN_free@plt+0x4a88>
   17a84:	bl	12d60 <__stack_chk_fail@plt>
   17a88:	ldrdeq	fp, [r2], -r8
   17a8c:	push	{r4, r5, r6, r7, r8, r9, lr}
   17a90:	mov	r8, r1
   17a94:	ldr	r5, [pc, #240]	; 17b8c <BN_free@plt+0x4bb0>
   17a98:	sub	sp, sp, #44	; 0x2c
   17a9c:	mov	r7, r0
   17aa0:	ldr	r1, [r5]
   17aa4:	mov	r9, r2
   17aa8:	mov	r6, r3
   17aac:	str	r1, [sp, #36]	; 0x24
   17ab0:	bl	12c88 <EVP_CIPHER_CTX_new@plt>
   17ab4:	subs	r4, r0, #0
   17ab8:	beq	17b80 <BN_free@plt+0x4ba4>
   17abc:	mov	r3, #16
   17ac0:	str	r3, [sp, #16]
   17ac4:	str	r6, [sp, #12]
   17ac8:	bl	12d54 <EVP_aes_128_cbc@plt>
   17acc:	str	r8, [sp]
   17ad0:	mov	r3, r7
   17ad4:	mov	r2, #0
   17ad8:	mov	r1, r0
   17adc:	mov	r0, r4
   17ae0:	bl	12fc4 <EVP_EncryptInit_ex@plt>
   17ae4:	cmp	r0, #1
   17ae8:	beq	17b14 <BN_free@plt+0x4b38>
   17aec:	mvn	r6, #0
   17af0:	mov	r0, r4
   17af4:	bl	12e08 <EVP_CIPHER_CTX_free@plt>
   17af8:	ldr	r2, [sp, #36]	; 0x24
   17afc:	ldr	r3, [r5]
   17b00:	mov	r0, r6
   17b04:	cmp	r2, r3
   17b08:	bne	17b88 <BN_free@plt+0x4bac>
   17b0c:	add	sp, sp, #44	; 0x2c
   17b10:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17b14:	mov	r1, #0
   17b18:	mov	r0, r4
   17b1c:	bl	12e98 <EVP_CIPHER_CTX_set_padding@plt>
   17b20:	cmp	r0, #1
   17b24:	bne	17aec <BN_free@plt+0x4b10>
   17b28:	str	r6, [sp]
   17b2c:	mov	r3, r9
   17b30:	mov	r1, r9
   17b34:	add	r2, sp, #12
   17b38:	mov	r0, r4
   17b3c:	bl	12fd0 <EVP_EncryptUpdate@plt>
   17b40:	cmp	r0, #1
   17b44:	bne	17aec <BN_free@plt+0x4b10>
   17b48:	ldr	r3, [sp, #12]
   17b4c:	cmp	r6, r3
   17b50:	bne	17aec <BN_free@plt+0x4b10>
   17b54:	add	r2, sp, #16
   17b58:	add	r1, sp, #20
   17b5c:	mov	r0, r4
   17b60:	bl	12f40 <EVP_EncryptFinal_ex@plt>
   17b64:	cmp	r0, #1
   17b68:	bne	17aec <BN_free@plt+0x4b10>
   17b6c:	ldr	r6, [sp, #16]
   17b70:	adds	r6, r6, #0
   17b74:	movne	r6, #1
   17b78:	rsb	r6, r6, #0
   17b7c:	b	17af0 <BN_free@plt+0x4b14>
   17b80:	mvn	r6, #0
   17b84:	b	17af8 <BN_free@plt+0x4b1c>
   17b88:	bl	12d60 <__stack_chk_fail@plt>
   17b8c:	ldrdeq	fp, [r2], -r8
   17b90:	push	{r4, r5, r6, r7, r8, r9, lr}
   17b94:	mov	r8, r1
   17b98:	ldr	r5, [pc, #240]	; 17c90 <BN_free@plt+0x4cb4>
   17b9c:	sub	sp, sp, #44	; 0x2c
   17ba0:	mov	r7, r0
   17ba4:	ldr	r1, [r5]
   17ba8:	mov	r9, r2
   17bac:	mov	r6, r3
   17bb0:	str	r1, [sp, #36]	; 0x24
   17bb4:	bl	12c88 <EVP_CIPHER_CTX_new@plt>
   17bb8:	subs	r4, r0, #0
   17bbc:	beq	17c84 <BN_free@plt+0x4ca8>
   17bc0:	mov	r3, #16
   17bc4:	str	r3, [sp, #16]
   17bc8:	str	r6, [sp, #12]
   17bcc:	bl	12d54 <EVP_aes_128_cbc@plt>
   17bd0:	str	r8, [sp]
   17bd4:	mov	r3, r7
   17bd8:	mov	r2, #0
   17bdc:	mov	r1, r0
   17be0:	mov	r0, r4
   17be4:	bl	12958 <EVP_DecryptInit_ex@plt>
   17be8:	cmp	r0, #1
   17bec:	beq	17c18 <BN_free@plt+0x4c3c>
   17bf0:	mvn	r6, #0
   17bf4:	mov	r0, r4
   17bf8:	bl	12e08 <EVP_CIPHER_CTX_free@plt>
   17bfc:	ldr	r2, [sp, #36]	; 0x24
   17c00:	ldr	r3, [r5]
   17c04:	mov	r0, r6
   17c08:	cmp	r2, r3
   17c0c:	bne	17c8c <BN_free@plt+0x4cb0>
   17c10:	add	sp, sp, #44	; 0x2c
   17c14:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17c18:	mov	r1, #0
   17c1c:	mov	r0, r4
   17c20:	bl	12e98 <EVP_CIPHER_CTX_set_padding@plt>
   17c24:	cmp	r0, #1
   17c28:	bne	17bf0 <BN_free@plt+0x4c14>
   17c2c:	str	r6, [sp]
   17c30:	mov	r3, r9
   17c34:	mov	r1, r9
   17c38:	add	r2, sp, #12
   17c3c:	mov	r0, r4
   17c40:	bl	12f64 <EVP_DecryptUpdate@plt>
   17c44:	cmp	r0, #1
   17c48:	bne	17bf0 <BN_free@plt+0x4c14>
   17c4c:	ldr	r3, [sp, #12]
   17c50:	cmp	r6, r3
   17c54:	bne	17bf0 <BN_free@plt+0x4c14>
   17c58:	add	r2, sp, #16
   17c5c:	add	r1, sp, #20
   17c60:	mov	r0, r4
   17c64:	bl	12bc8 <EVP_DecryptFinal_ex@plt>
   17c68:	cmp	r0, #1
   17c6c:	bne	17bf0 <BN_free@plt+0x4c14>
   17c70:	ldr	r6, [sp, #16]
   17c74:	adds	r6, r6, #0
   17c78:	movne	r6, #1
   17c7c:	rsb	r6, r6, #0
   17c80:	b	17bf4 <BN_free@plt+0x4c18>
   17c84:	mvn	r6, #0
   17c88:	b	17bfc <BN_free@plt+0x4c20>
   17c8c:	bl	12d60 <__stack_chk_fail@plt>
   17c90:	ldrdeq	fp, [r2], -r8
   17c94:	push	{r4, r5, r6, r7, r8, r9, lr}
   17c98:	sub	sp, sp, #12
   17c9c:	mov	r6, r0
   17ca0:	mov	r7, r1
   17ca4:	mov	r4, r2
   17ca8:	mov	r5, r3
   17cac:	bl	12c94 <BN_CTX_new@plt>
   17cb0:	subs	r9, r0, #0
   17cb4:	beq	17d90 <BN_free@plt+0x4db4>
   17cb8:	mov	r1, r7
   17cbc:	mov	r0, r6
   17cc0:	mov	r2, #0
   17cc4:	bl	12934 <BN_bin2bn@plt>
   17cc8:	mov	r1, r5
   17ccc:	mov	r2, #0
   17cd0:	mov	r6, r0
   17cd4:	mov	r0, r4
   17cd8:	bl	12934 <BN_bin2bn@plt>
   17cdc:	mov	r2, #0
   17ce0:	mov	r5, r0
   17ce4:	ldrd	r0, [sp, #40]	; 0x28
   17ce8:	bl	12934 <BN_bin2bn@plt>
   17cec:	mov	r7, r0
   17cf0:	bl	12c10 <BN_new@plt>
   17cf4:	cmp	r5, #0
   17cf8:	cmpne	r6, #0
   17cfc:	mov	r8, r0
   17d00:	beq	17d20 <BN_free@plt+0x4d44>
   17d04:	cmp	r7, #0
   17d08:	clz	r3, r0
   17d0c:	lsr	r3, r3, #5
   17d10:	movne	r4, r3
   17d14:	moveq	r4, #1
   17d18:	cmp	r4, #0
   17d1c:	beq	17d58 <BN_free@plt+0x4d7c>
   17d20:	mvn	r4, #0
   17d24:	mov	r0, r6
   17d28:	bl	12a9c <BN_clear_free@plt>
   17d2c:	mov	r0, r5
   17d30:	bl	12a9c <BN_clear_free@plt>
   17d34:	mov	r0, r7
   17d38:	bl	12a9c <BN_clear_free@plt>
   17d3c:	mov	r0, r8
   17d40:	bl	12a9c <BN_clear_free@plt>
   17d44:	mov	r0, r9
   17d48:	bl	127fc <BN_CTX_free@plt>
   17d4c:	mov	r0, r4
   17d50:	add	sp, sp, #12
   17d54:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17d58:	str	r4, [sp, #4]
   17d5c:	str	r9, [sp]
   17d60:	mov	r3, r7
   17d64:	mov	r2, r5
   17d68:	mov	r1, r6
   17d6c:	bl	1282c <BN_mod_exp_mont_consttime@plt>
   17d70:	cmp	r0, #1
   17d74:	bne	17d20 <BN_free@plt+0x4d44>
   17d78:	ldr	r1, [sp, #48]	; 0x30
   17d7c:	mov	r0, r8
   17d80:	bl	12ea4 <BN_bn2bin@plt>
   17d84:	ldr	r3, [sp, #52]	; 0x34
   17d88:	str	r0, [r3]
   17d8c:	b	17d24 <BN_free@plt+0x4d48>
   17d90:	mvn	r4, #0
   17d94:	b	17d4c <BN_free@plt+0x4d70>
   17d98:	push	{r4, r5, r6, r7, r8, lr}
   17d9c:	sub	sp, sp, #32
   17da0:	ldr	r6, [pc, #212]	; 17e7c <BN_free@plt+0x4ea0>
   17da4:	mov	r5, r3
   17da8:	strb	r0, [sp, #23]
   17dac:	ldr	r3, [r6]
   17db0:	mov	r7, r1
   17db4:	mov	r0, r5
   17db8:	mov	r1, r2
   17dbc:	mov	r4, r2
   17dc0:	str	r3, [sp, #28]
   17dc4:	ldr	r8, [sp, #56]	; 0x38
   17dc8:	bl	16b78 <BN_free@plt+0x3b9c>
   17dcc:	cmp	r0, #0
   17dd0:	blt	17e70 <BN_free@plt+0x4e94>
   17dd4:	mov	r2, r4
   17dd8:	mov	r1, r7
   17ddc:	mov	r0, r5
   17de0:	bl	127cc <memcmp@plt>
   17de4:	mov	r2, r5
   17de8:	mov	r1, #1
   17dec:	str	r4, [sp, #24]
   17df0:	cmp	r0, #0
   17df4:	movgt	r3, #0
   17df8:	strbgt	r3, [r5]
   17dfc:	add	r3, sp, #24
   17e00:	str	r3, [sp, #12]
   17e04:	stmib	sp, {r4, r8}
   17e08:	str	r7, [sp]
   17e0c:	mov	r3, r4
   17e10:	add	r0, sp, #23
   17e14:	bl	17c94 <BN_free@plt+0x4cb8>
   17e18:	cmp	r0, #0
   17e1c:	blt	17e70 <BN_free@plt+0x4e94>
   17e20:	ldr	r2, [sp, #24]
   17e24:	cmp	r2, r4
   17e28:	movcs	r0, #0
   17e2c:	bcc	17e48 <BN_free@plt+0x4e6c>
   17e30:	ldr	r2, [sp, #28]
   17e34:	ldr	r3, [r6]
   17e38:	cmp	r2, r3
   17e3c:	bne	17e78 <BN_free@plt+0x4e9c>
   17e40:	add	sp, sp, #32
   17e44:	pop	{r4, r5, r6, r7, r8, pc}
   17e48:	sub	r4, r4, r2
   17e4c:	mov	r1, r8
   17e50:	add	r0, r8, r4
   17e54:	bl	12dd8 <memmove@plt>
   17e58:	mov	r2, r4
   17e5c:	mov	r0, r8
   17e60:	mov	r1, #0
   17e64:	bl	1294c <memset@plt>
   17e68:	mov	r0, #0
   17e6c:	b	17e30 <BN_free@plt+0x4e54>
   17e70:	mvn	r0, #0
   17e74:	b	17e30 <BN_free@plt+0x4e54>
   17e78:	bl	12d60 <__stack_chk_fail@plt>
   17e7c:	ldrdeq	fp, [r2], -r8
   17e80:	push	{r4, r5, lr}
   17e84:	mov	r5, r3
   17e88:	ldr	ip, [sp, #12]
   17e8c:	ldr	r4, [sp, #20]
   17e90:	ldr	lr, [sp, #24]
   17e94:	mov	r3, ip
   17e98:	ldr	ip, [sp, #28]
   17e9c:	ldr	r0, [sp, #16]
   17ea0:	str	r1, [sp, #12]
   17ea4:	str	r2, [sp, #16]
   17ea8:	mov	r1, r4
   17eac:	mov	r2, r5
   17eb0:	str	lr, [sp, #20]
   17eb4:	str	ip, [sp, #24]
   17eb8:	pop	{r4, r5, lr}
   17ebc:	b	17c94 <BN_free@plt+0x4cb8>
   17ec0:	push	{r4, r5, r6, r7, r8, r9, lr}
   17ec4:	mov	r5, r0
   17ec8:	sub	sp, sp, #12
   17ecc:	mov	r0, #8
   17ed0:	mov	r7, r1
   17ed4:	mov	r8, r2
   17ed8:	mov	r6, r3
   17edc:	bl	16e00 <BN_free@plt+0x3e24>
   17ee0:	subs	r4, r0, #0
   17ee4:	beq	18004 <BN_free@plt+0x5028>
   17ee8:	sub	r0, r5, #1
   17eec:	cmp	r0, #4
   17ef0:	ldrls	pc, [pc, r0, lsl #2]
   17ef4:	b	17ff8 <BN_free@plt+0x501c>
   17ef8:	andeq	r8, r1, r0, lsl r0
   17efc:	andeq	r8, r1, r4, lsr r0
   17f00:	andeq	r8, r1, r0, asr #32
   17f04:	andeq	r8, r1, ip, asr #32
   17f08:	andeq	r7, r1, ip, lsl #30
   17f0c:	bl	12d84 <EVP_rc4@plt>
   17f10:	mov	r9, r0
   17f14:	bl	12c88 <EVP_CIPHER_CTX_new@plt>
   17f18:	cmp	r0, #0
   17f1c:	str	r0, [r4]
   17f20:	beq	17ff8 <BN_free@plt+0x501c>
   17f24:	mov	r1, #0
   17f28:	bl	12e98 <EVP_CIPHER_CTX_set_padding@plt>
   17f2c:	cmp	r0, #0
   17f30:	beq	18058 <BN_free@plt+0x507c>
   17f34:	mov	r5, #0
   17f38:	ldr	r0, [r4]
   17f3c:	mov	r3, r5
   17f40:	str	r5, [sp]
   17f44:	mov	r2, r5
   17f48:	mov	r1, r9
   17f4c:	bl	12fc4 <EVP_EncryptInit_ex@plt>
   17f50:	cmp	r0, r5
   17f54:	beq	18058 <BN_free@plt+0x507c>
   17f58:	mov	r1, r6
   17f5c:	ldr	r0, [r4]
   17f60:	bl	12c58 <EVP_CIPHER_CTX_set_key_length@plt>
   17f64:	cmp	r0, r5
   17f68:	beq	18058 <BN_free@plt+0x507c>
   17f6c:	ldr	r0, [r4]
   17f70:	mov	r3, r8
   17f74:	str	r7, [sp]
   17f78:	mov	r2, r5
   17f7c:	mov	r1, r5
   17f80:	bl	12fc4 <EVP_EncryptInit_ex@plt>
   17f84:	cmp	r0, r5
   17f88:	beq	18058 <BN_free@plt+0x507c>
   17f8c:	bl	12c88 <EVP_CIPHER_CTX_new@plt>
   17f90:	cmp	r0, #0
   17f94:	str	r0, [r4, #4]
   17f98:	beq	17fe0 <BN_free@plt+0x5004>
   17f9c:	mov	r1, r5
   17fa0:	bl	12e98 <EVP_CIPHER_CTX_set_padding@plt>
   17fa4:	cmp	r0, #0
   17fa8:	beq	17fe0 <BN_free@plt+0x5004>
   17fac:	ldr	r0, [r4, #4]
   17fb0:	mov	r1, r9
   17fb4:	str	r5, [sp]
   17fb8:	mov	r3, r5
   17fbc:	mov	r2, r5
   17fc0:	bl	12958 <EVP_DecryptInit_ex@plt>
   17fc4:	cmp	r0, #0
   17fc8:	beq	17fe0 <BN_free@plt+0x5004>
   17fcc:	mov	r1, r6
   17fd0:	ldr	r0, [r4, #4]
   17fd4:	bl	12c58 <EVP_CIPHER_CTX_set_key_length@plt>
   17fd8:	cmp	r0, #0
   17fdc:	bne	18074 <BN_free@plt+0x5098>
   17fe0:	ldr	r0, [r4]
   17fe4:	bl	12e08 <EVP_CIPHER_CTX_free@plt>
   17fe8:	ldr	r0, [r4, #4]
   17fec:	cmp	r0, #0
   17ff0:	beq	17ff8 <BN_free@plt+0x501c>
   17ff4:	bl	12e08 <EVP_CIPHER_CTX_free@plt>
   17ff8:	mov	r0, r4
   17ffc:	bl	12a30 <free@plt>
   18000:	mov	r4, #0
   18004:	mov	r0, r4
   18008:	add	sp, sp, #12
   1800c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18010:	cmp	r6, #24
   18014:	beq	180a4 <BN_free@plt+0x50c8>
   18018:	cmp	r6, #32
   1801c:	beq	18098 <BN_free@plt+0x50bc>
   18020:	cmp	r6, #16
   18024:	bne	17ff8 <BN_free@plt+0x501c>
   18028:	bl	12d54 <EVP_aes_128_cbc@plt>
   1802c:	mov	r9, r0
   18030:	b	17f14 <BN_free@plt+0x4f38>
   18034:	bl	12d00 <EVP_des_ede3_cbc@plt>
   18038:	mov	r9, r0
   1803c:	b	17f14 <BN_free@plt+0x4f38>
   18040:	bl	12b44 <EVP_des_cbc@plt>
   18044:	mov	r9, r0
   18048:	b	17f14 <BN_free@plt+0x4f38>
   1804c:	bl	12fb8 <EVP_rc2_ecb@plt>
   18050:	mov	r9, r0
   18054:	b	17f14 <BN_free@plt+0x4f38>
   18058:	ldr	r0, [r4]
   1805c:	cmp	r0, #0
   18060:	bne	17ff4 <BN_free@plt+0x5018>
   18064:	mov	r0, r4
   18068:	bl	12a30 <free@plt>
   1806c:	mov	r4, #0
   18070:	b	18004 <BN_free@plt+0x5028>
   18074:	ldr	r0, [r4, #4]
   18078:	mov	r3, r8
   1807c:	str	r7, [sp]
   18080:	mov	r2, r5
   18084:	mov	r1, r5
   18088:	bl	12958 <EVP_DecryptInit_ex@plt>
   1808c:	cmp	r0, #0
   18090:	bne	18004 <BN_free@plt+0x5028>
   18094:	b	17fe0 <BN_free@plt+0x5004>
   18098:	bl	12cf4 <EVP_aes_256_cbc@plt>
   1809c:	mov	r9, r0
   180a0:	b	17f14 <BN_free@plt+0x4f38>
   180a4:	bl	12e2c <EVP_aes_192_cbc@plt>
   180a8:	mov	r9, r0
   180ac:	b	17f14 <BN_free@plt+0x4f38>
   180b0:	push	{r4, lr}
   180b4:	sub	sp, sp, #16
   180b8:	ldr	r4, [pc, #68]	; 18104 <BN_free@plt+0x5128>
   180bc:	ldr	r0, [r0]
   180c0:	str	r3, [sp]
   180c4:	ldr	ip, [r4]
   180c8:	mov	r3, r1
   180cc:	mov	r1, r2
   180d0:	add	r2, sp, #8
   180d4:	str	ip, [sp, #12]
   180d8:	bl	12fd0 <EVP_EncryptUpdate@plt>
   180dc:	ldr	r2, [sp, #12]
   180e0:	ldr	r3, [r4]
   180e4:	cmp	r2, r3
   180e8:	bne	18100 <BN_free@plt+0x5124>
   180ec:	clz	r0, r0
   180f0:	lsr	r0, r0, #5
   180f4:	rsb	r0, r0, #0
   180f8:	add	sp, sp, #16
   180fc:	pop	{r4, pc}
   18100:	bl	12d60 <__stack_chk_fail@plt>
   18104:	ldrdeq	fp, [r2], -r8
   18108:	push	{r4, lr}
   1810c:	sub	sp, sp, #16
   18110:	ldr	r4, [pc, #76]	; 18164 <BN_free@plt+0x5188>
   18114:	mov	ip, r3
   18118:	ldr	r0, [r0, #4]
   1811c:	ldr	lr, [r4]
   18120:	str	r3, [sp]
   18124:	mov	r3, r1
   18128:	mov	r1, r2
   1812c:	add	r2, sp, #8
   18130:	str	ip, [sp, #8]
   18134:	str	lr, [sp, #12]
   18138:	bl	12f64 <EVP_DecryptUpdate@plt>
   1813c:	ldr	r2, [sp, #12]
   18140:	ldr	r3, [r4]
   18144:	cmp	r2, r3
   18148:	bne	18160 <BN_free@plt+0x5184>
   1814c:	clz	r0, r0
   18150:	lsr	r0, r0, #5
   18154:	rsb	r0, r0, #0
   18158:	add	sp, sp, #16
   1815c:	pop	{r4, pc}
   18160:	bl	12d60 <__stack_chk_fail@plt>
   18164:	ldrdeq	fp, [r2], -r8
   18168:	push	{r4, lr}
   1816c:	mov	r4, r0
   18170:	ldr	r0, [r0]
   18174:	bl	12e08 <EVP_CIPHER_CTX_free@plt>
   18178:	ldr	r0, [r4, #4]
   1817c:	bl	12e08 <EVP_CIPHER_CTX_free@plt>
   18180:	mov	r0, r4
   18184:	pop	{r4, lr}
   18188:	b	12a30 <free@plt>
   1818c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18190:	mov	r4, #0
   18194:	ldr	r9, [pc, #420]	; 18340 <BN_free@plt+0x5364>
   18198:	sub	sp, sp, #20
   1819c:	mov	r7, r1
   181a0:	ldr	r3, [r9]
   181a4:	mov	sl, r0
   181a8:	str	r4, [r0]
   181ac:	ldr	r0, [r1]
   181b0:	str	r3, [sp, #12]
   181b4:	str	r4, [sp, #4]
   181b8:	str	r4, [sp, #8]
   181bc:	bl	16490 <BN_free@plt+0x34b4>
   181c0:	str	r4, [r7]
   181c4:	bl	129dc <DH_new@plt>
   181c8:	subs	r5, r0, #0
   181cc:	beq	182cc <BN_free@plt+0x52f0>
   181d0:	bl	12c10 <BN_new@plt>
   181d4:	mov	r6, r0
   181d8:	mov	r0, r4
   181dc:	bl	12c70 <BN_get_rfc3526_prime_1536@plt>
   181e0:	cmp	r6, r4
   181e4:	mov	r8, r0
   181e8:	beq	1832c <BN_free@plt+0x5350>
   181ec:	mov	r1, #2
   181f0:	mov	r0, r6
   181f4:	bl	1291c <BN_set_word@plt>
   181f8:	cmp	r0, #1
   181fc:	bne	182f4 <BN_free@plt+0x5318>
   18200:	cmp	r8, r4
   18204:	beq	18324 <BN_free@plt+0x5348>
   18208:	mov	r3, r6
   1820c:	mov	r2, r4
   18210:	mov	r1, r8
   18214:	mov	r0, r5
   18218:	bl	12a90 <DH_set0_pqg@plt>
   1821c:	cmp	r0, #1
   18220:	bne	182f4 <BN_free@plt+0x5318>
   18224:	mov	r0, r5
   18228:	bl	12bb0 <DH_generate_key@plt>
   1822c:	cmp	r0, #1
   18230:	bne	182e8 <BN_free@plt+0x530c>
   18234:	add	r2, sp, #4
   18238:	add	r1, sp, #8
   1823c:	mov	r0, r5
   18240:	bl	12850 <DH_get0_key@plt>
   18244:	ldr	r0, [sp, #8]
   18248:	bl	129ac <BN_num_bits@plt>
   1824c:	adds	r6, r0, #7
   18250:	addmi	r6, r0, #14
   18254:	asr	r6, r6, #3
   18258:	mov	r0, r6
   1825c:	bl	1636c <BN_free@plt+0x3390>
   18260:	subs	r4, r0, #0
   18264:	beq	182e8 <BN_free@plt+0x530c>
   18268:	ldr	r0, [sp, #4]
   1826c:	bl	129ac <BN_num_bits@plt>
   18270:	adds	fp, r0, #7
   18274:	addmi	fp, r0, #14
   18278:	asr	fp, fp, #3
   1827c:	mov	r0, fp
   18280:	bl	1636c <BN_free@plt+0x3390>
   18284:	subs	r8, r0, #0
   18288:	beq	18334 <BN_free@plt+0x5358>
   1828c:	mov	r1, r6
   18290:	mov	r0, r4
   18294:	ldr	r6, [sp, #8]
   18298:	bl	164f0 <BN_free@plt+0x3514>
   1829c:	mov	r1, r0
   182a0:	mov	r0, r6
   182a4:	bl	12ea4 <BN_bn2bin@plt>
   182a8:	mov	r1, fp
   182ac:	mov	r0, r8
   182b0:	ldr	r6, [sp, #4]
   182b4:	bl	164f0 <BN_free@plt+0x3514>
   182b8:	mov	r1, r0
   182bc:	mov	r0, r6
   182c0:	bl	12ea4 <BN_bn2bin@plt>
   182c4:	str	r8, [sl]
   182c8:	str	r4, [r7]
   182cc:	ldr	r2, [sp, #12]
   182d0:	ldr	r3, [r9]
   182d4:	mov	r0, r5
   182d8:	cmp	r2, r3
   182dc:	bne	1833c <BN_free@plt+0x5360>
   182e0:	add	sp, sp, #20
   182e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   182e8:	mov	r6, #0
   182ec:	mov	r8, r6
   182f0:	mov	r4, r6
   182f4:	mov	r0, r8
   182f8:	bl	12fdc <BN_free@plt>
   182fc:	mov	r0, r6
   18300:	bl	12fdc <BN_free@plt>
   18304:	mov	r0, r4
   18308:	bl	164c8 <BN_free@plt+0x34ec>
   1830c:	mov	r0, #0
   18310:	bl	164c8 <BN_free@plt+0x34ec>
   18314:	mov	r0, r5
   18318:	bl	12db4 <DH_free@plt>
   1831c:	mov	r5, #0
   18320:	b	182cc <BN_free@plt+0x52f0>
   18324:	mov	r4, r8
   18328:	b	182f4 <BN_free@plt+0x5318>
   1832c:	mov	r4, r6
   18330:	b	182f4 <BN_free@plt+0x5318>
   18334:	mov	r6, r8
   18338:	b	182f4 <BN_free@plt+0x5318>
   1833c:	bl	12d60 <__stack_chk_fail@plt>
   18340:	ldrdeq	fp, [r2], -r8
   18344:	push	{r4, r5, r6, r7, r8, lr}
   18348:	mov	r8, r0
   1834c:	mov	r7, r1
   18350:	bl	129dc <DH_new@plt>
   18354:	subs	r5, r0, #0
   18358:	beq	18424 <BN_free@plt+0x5448>
   1835c:	bl	12c10 <BN_new@plt>
   18360:	mov	r4, r0
   18364:	mov	r0, #0
   18368:	bl	12c70 <BN_get_rfc3526_prime_1536@plt>
   1836c:	cmp	r4, #0
   18370:	mov	r6, r0
   18374:	beq	18480 <BN_free@plt+0x54a4>
   18378:	mov	r1, #2
   1837c:	mov	r0, r4
   18380:	bl	1291c <BN_set_word@plt>
   18384:	cmp	r0, #1
   18388:	bne	1842c <BN_free@plt+0x5450>
   1838c:	cmp	r6, #0
   18390:	beq	18468 <BN_free@plt+0x548c>
   18394:	mov	r3, r4
   18398:	mov	r2, #0
   1839c:	mov	r1, r6
   183a0:	mov	r0, r5
   183a4:	bl	12a90 <DH_set0_pqg@plt>
   183a8:	cmp	r0, #1
   183ac:	bne	1842c <BN_free@plt+0x5450>
   183b0:	ldr	r1, [r8, #4]
   183b4:	mov	r2, #0
   183b8:	ldr	r0, [r8, #8]
   183bc:	bl	12934 <BN_bin2bn@plt>
   183c0:	ldr	r1, [r7, #4]
   183c4:	mov	r2, #0
   183c8:	mov	r8, r0
   183cc:	ldr	r0, [r7, #8]
   183d0:	bl	12934 <BN_bin2bn@plt>
   183d4:	cmp	r8, #0
   183d8:	clz	r4, r0
   183dc:	lsr	r4, r4, #5
   183e0:	moveq	r4, #1
   183e4:	cmp	r4, #0
   183e8:	mov	r7, r0
   183ec:	bne	18474 <BN_free@plt+0x5498>
   183f0:	mov	r1, r0
   183f4:	mov	r2, r8
   183f8:	mov	r0, r5
   183fc:	bl	12d9c <DH_set0_key@plt>
   18400:	cmp	r0, #1
   18404:	bne	1848c <BN_free@plt+0x54b0>
   18408:	mov	r0, r5
   1840c:	bl	12bb0 <DH_generate_key@plt>
   18410:	cmp	r0, #1
   18414:	movne	r7, r4
   18418:	movne	r8, r7
   1841c:	movne	r6, r7
   18420:	bne	18434 <BN_free@plt+0x5458>
   18424:	mov	r0, r5
   18428:	pop	{r4, r5, r6, r7, r8, pc}
   1842c:	mov	r7, #0
   18430:	mov	r8, r7
   18434:	mov	r0, r6
   18438:	bl	12fdc <BN_free@plt>
   1843c:	mov	r0, r4
   18440:	bl	12fdc <BN_free@plt>
   18444:	mov	r0, r7
   18448:	bl	12fdc <BN_free@plt>
   1844c:	mov	r0, r8
   18450:	bl	12a9c <BN_clear_free@plt>
   18454:	mov	r0, r5
   18458:	mov	r5, #0
   1845c:	bl	12db4 <DH_free@plt>
   18460:	mov	r0, r5
   18464:	pop	{r4, r5, r6, r7, r8, pc}
   18468:	mov	r7, r6
   1846c:	mov	r8, r6
   18470:	b	18434 <BN_free@plt+0x5458>
   18474:	mov	r4, #0
   18478:	mov	r6, r4
   1847c:	b	18434 <BN_free@plt+0x5458>
   18480:	mov	r7, r4
   18484:	mov	r8, r4
   18488:	b	18434 <BN_free@plt+0x5458>
   1848c:	mov	r6, r4
   18490:	b	18434 <BN_free@plt+0x5458>
   18494:	push	{r4, r5, r6, lr}
   18498:	subs	r4, r0, #0
   1849c:	beq	18510 <BN_free@plt+0x5534>
   184a0:	mov	r3, r1
   184a4:	mov	r2, #0
   184a8:	ldr	r1, [r1, #4]
   184ac:	ldr	r0, [r3, #8]
   184b0:	bl	12934 <BN_bin2bn@plt>
   184b4:	subs	r6, r0, #0
   184b8:	beq	18510 <BN_free@plt+0x5534>
   184bc:	mov	r0, r4
   184c0:	bl	1285c <DH_size@plt>
   184c4:	bl	1636c <BN_free@plt+0x3390>
   184c8:	subs	r5, r0, #0
   184cc:	beq	18500 <BN_free@plt+0x5524>
   184d0:	mov	r1, r6
   184d4:	mov	r2, r4
   184d8:	ldr	r0, [r5, #8]
   184dc:	bl	1288c <DH_compute_key@plt>
   184e0:	subs	r1, r0, #0
   184e4:	blt	18500 <BN_free@plt+0x5524>
   184e8:	mov	r0, r5
   184ec:	bl	164f0 <BN_free@plt+0x3514>
   184f0:	mov	r0, r6
   184f4:	bl	12a9c <BN_clear_free@plt>
   184f8:	mov	r0, r5
   184fc:	pop	{r4, r5, r6, pc}
   18500:	mov	r0, r6
   18504:	bl	12a9c <BN_clear_free@plt>
   18508:	mov	r0, r5
   1850c:	bl	164c8 <BN_free@plt+0x34ec>
   18510:	mov	r5, #0
   18514:	mov	r0, r5
   18518:	pop	{r4, r5, r6, pc}
   1851c:	cmp	r0, #0
   18520:	bxeq	lr
   18524:	b	12db4 <DH_free@plt>
   18528:	cmp	r0, #3
   1852c:	push	{r4, r5, r6, r7, r8, lr}
   18530:	mov	r6, r1
   18534:	sub	sp, sp, #8
   18538:	mov	r7, r2
   1853c:	beq	18560 <BN_free@plt+0x5584>
   18540:	cmp	r0, #5
   18544:	beq	185d4 <BN_free@plt+0x55f8>
   18548:	cmp	r0, #2
   1854c:	movne	r4, #0
   18550:	beq	185c8 <BN_free@plt+0x55ec>
   18554:	mov	r0, r4
   18558:	add	sp, sp, #8
   1855c:	pop	{r4, r5, r6, r7, r8, pc}
   18560:	bl	12c34 <EVP_sha1@plt>
   18564:	mov	r8, r0
   18568:	mov	r0, #4
   1856c:	bl	16e00 <BN_free@plt+0x3e24>
   18570:	subs	r4, r0, #0
   18574:	beq	18554 <BN_free@plt+0x5578>
   18578:	bl	12700 <HMAC_CTX_new@plt>
   1857c:	cmp	r0, #0
   18580:	mov	r5, r0
   18584:	str	r0, [r4]
   18588:	beq	185e0 <BN_free@plt+0x5604>
   1858c:	mov	r5, #0
   18590:	mov	r3, r8
   18594:	mov	r2, r7
   18598:	mov	r1, r6
   1859c:	str	r5, [sp]
   185a0:	bl	12dc0 <HMAC_Init_ex@plt>
   185a4:	cmp	r0, #1
   185a8:	beq	18554 <BN_free@plt+0x5578>
   185ac:	ldr	r0, [r4]
   185b0:	bl	12cb8 <HMAC_CTX_free@plt>
   185b4:	mov	r0, r4
   185b8:	mov	r1, #4
   185bc:	mov	r4, r5
   185c0:	bl	14704 <BN_free@plt+0x1728>
   185c4:	b	18554 <BN_free@plt+0x5578>
   185c8:	bl	12994 <EVP_md5@plt>
   185cc:	mov	r8, r0
   185d0:	b	18568 <BN_free@plt+0x558c>
   185d4:	bl	12ee0 <EVP_sha256@plt>
   185d8:	mov	r8, r0
   185dc:	b	18568 <BN_free@plt+0x558c>
   185e0:	mov	r0, r4
   185e4:	bl	12a30 <free@plt>
   185e8:	mov	r4, r5
   185ec:	b	18554 <BN_free@plt+0x5578>
   185f0:	cmp	r0, #0
   185f4:	bxeq	lr
   185f8:	ldr	r0, [r0]
   185fc:	b	128ec <HMAC_Update@plt>
   18600:	push	{r4, r5, r6, r7, r8, lr}
   18604:	sub	sp, sp, #8
   18608:	ldr	r7, [pc, #180]	; 186c4 <BN_free@plt+0x56e8>
   1860c:	subs	r5, r0, #0
   18610:	ldr	r3, [r7]
   18614:	str	r3, [sp, #4]
   18618:	beq	186b8 <BN_free@plt+0x56dc>
   1861c:	cmp	r1, #0
   18620:	clz	r0, r2
   18624:	lsr	r0, r0, #5
   18628:	mov	r4, r1
   1862c:	movne	r4, r0
   18630:	moveq	r4, #1
   18634:	cmp	r4, #0
   18638:	mov	r6, r2
   1863c:	ldr	r0, [r5]
   18640:	bne	18698 <BN_free@plt+0x56bc>
   18644:	ldr	r3, [r2]
   18648:	mov	r2, sp
   1864c:	str	r3, [sp]
   18650:	bl	12e8c <HMAC_Final@plt>
   18654:	mov	r8, r0
   18658:	ldr	r0, [r5]
   1865c:	bl	12cb8 <HMAC_CTX_free@plt>
   18660:	mov	r0, r5
   18664:	mov	r1, #4
   18668:	bl	14704 <BN_free@plt+0x1728>
   1866c:	cmp	r8, #1
   18670:	bne	186b0 <BN_free@plt+0x56d4>
   18674:	ldr	r3, [sp]
   18678:	mov	r0, r4
   1867c:	str	r3, [r6]
   18680:	ldr	r2, [sp, #4]
   18684:	ldr	r3, [r7]
   18688:	cmp	r2, r3
   1868c:	bne	186c0 <BN_free@plt+0x56e4>
   18690:	add	sp, sp, #8
   18694:	pop	{r4, r5, r6, r7, r8, pc}
   18698:	bl	12cb8 <HMAC_CTX_free@plt>
   1869c:	mov	r0, r5
   186a0:	mov	r1, #4
   186a4:	bl	14704 <BN_free@plt+0x1728>
   186a8:	mov	r0, #0
   186ac:	b	18680 <BN_free@plt+0x56a4>
   186b0:	mvn	r0, #0
   186b4:	b	18680 <BN_free@plt+0x56a4>
   186b8:	mvn	r0, #1
   186bc:	b	18680 <BN_free@plt+0x56a4>
   186c0:	bl	12d60 <__stack_chk_fail@plt>
   186c4:	ldrdeq	fp, [r2], -r8
   186c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   186cc:	sub	sp, sp, #20
   186d0:	mov	r5, r1
   186d4:	ldr	r7, [sp, #48]	; 0x30
   186d8:	ldr	r8, [sp, #52]	; 0x34
   186dc:	mov	r6, r2
   186e0:	mov	r9, r3
   186e4:	mov	r4, r0
   186e8:	bl	12994 <EVP_md5@plt>
   186ec:	mov	ip, #16
   186f0:	str	r9, [sp]
   186f4:	stmib	sp, {r7, r8}
   186f8:	mov	r3, r6
   186fc:	mov	r2, r5
   18700:	mov	r1, r4
   18704:	str	ip, [sp, #12]
   18708:	bl	171b4 <BN_free@plt+0x41d8>
   1870c:	add	sp, sp, #20
   18710:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18714:	push	{r4, r5, r6, lr}
   18718:	sub	sp, sp, #24
   1871c:	mov	r5, r1
   18720:	ldr	r6, [sp, #40]	; 0x28
   18724:	mov	r4, r0
   18728:	str	r2, [sp, #20]
   1872c:	str	r3, [sp, #16]
   18730:	bl	12994 <EVP_md5@plt>
   18734:	mov	lr, #16
   18738:	add	ip, sp, lr
   1873c:	add	r3, sp, #20
   18740:	str	r6, [sp, #8]
   18744:	stm	sp, {r3, ip}
   18748:	mov	r2, r5
   1874c:	mov	r1, r4
   18750:	str	lr, [sp, #12]
   18754:	mov	r3, #1
   18758:	bl	171b4 <BN_free@plt+0x41d8>
   1875c:	add	sp, sp, #24
   18760:	pop	{r4, r5, r6, pc}
   18764:	push	{r4, r5, r6, r7, lr}
   18768:	sub	sp, sp, #20
   1876c:	mov	r5, r1
   18770:	mov	r6, r2
   18774:	mov	r7, r3
   18778:	mov	r4, r0
   1877c:	bl	12b38 <strlen@plt>
   18780:	ldr	lr, [sp, #40]	; 0x28
   18784:	ldr	ip, [sp, #44]	; 0x2c
   18788:	str	r7, [sp]
   1878c:	mov	r3, r6
   18790:	mov	r2, r5
   18794:	stmib	sp, {ip, lr}
   18798:	mov	r1, r0
   1879c:	mov	r0, r4
   187a0:	bl	129f4 <PKCS5_PBKDF2_HMAC_SHA1@plt>
   187a4:	subs	r0, r0, #1
   187a8:	mvnne	r0, #0
   187ac:	add	sp, sp, #20
   187b0:	pop	{r4, r5, r6, r7, pc}
   187b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   187b8:	sub	sp, sp, #20
   187bc:	mov	r5, r1
   187c0:	ldr	r7, [sp, #48]	; 0x30
   187c4:	ldr	r8, [sp, #52]	; 0x34
   187c8:	mov	r6, r2
   187cc:	mov	r9, r3
   187d0:	mov	r4, r0
   187d4:	bl	12c34 <EVP_sha1@plt>
   187d8:	mov	ip, #20
   187dc:	str	r9, [sp]
   187e0:	stmib	sp, {r7, r8}
   187e4:	mov	r3, r6
   187e8:	mov	r2, r5
   187ec:	mov	r1, r4
   187f0:	str	ip, [sp, #12]
   187f4:	bl	171b4 <BN_free@plt+0x41d8>
   187f8:	add	sp, sp, #20
   187fc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18800:	push	{r4, r5, r6, lr}
   18804:	sub	sp, sp, #24
   18808:	mov	r5, r1
   1880c:	ldr	r6, [sp, #40]	; 0x28
   18810:	mov	r4, r0
   18814:	str	r2, [sp, #20]
   18818:	str	r3, [sp, #16]
   1881c:	bl	12c34 <EVP_sha1@plt>
   18820:	mov	lr, #20
   18824:	add	r3, sp, lr
   18828:	add	ip, sp, #16
   1882c:	str	r6, [sp, #8]
   18830:	stm	sp, {r3, ip}
   18834:	mov	r2, r5
   18838:	mov	r1, r4
   1883c:	str	lr, [sp, #12]
   18840:	mov	r3, #1
   18844:	bl	171b4 <BN_free@plt+0x41d8>
   18848:	add	sp, sp, #24
   1884c:	pop	{r4, r5, r6, pc}
   18850:	push	{r4, r5, r6, r7, r8, r9, lr}
   18854:	sub	sp, sp, #20
   18858:	mov	r5, r1
   1885c:	ldr	r7, [sp, #48]	; 0x30
   18860:	ldr	r8, [sp, #52]	; 0x34
   18864:	mov	r6, r2
   18868:	mov	r9, r3
   1886c:	mov	r4, r0
   18870:	bl	12ee0 <EVP_sha256@plt>
   18874:	mov	ip, #32
   18878:	str	r9, [sp]
   1887c:	stmib	sp, {r7, r8}
   18880:	mov	r3, r6
   18884:	mov	r2, r5
   18888:	mov	r1, r4
   1888c:	str	ip, [sp, #12]
   18890:	bl	171b4 <BN_free@plt+0x41d8>
   18894:	add	sp, sp, #20
   18898:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1889c:	push	{r4, r5, r6, lr}
   188a0:	sub	sp, sp, #24
   188a4:	mov	r5, r1
   188a8:	ldr	r6, [sp, #40]	; 0x28
   188ac:	mov	r4, r0
   188b0:	str	r2, [sp, #20]
   188b4:	str	r3, [sp, #16]
   188b8:	bl	12ee0 <EVP_sha256@plt>
   188bc:	add	ip, sp, #16
   188c0:	add	r3, sp, #20
   188c4:	mov	lr, #32
   188c8:	stm	sp, {r3, ip}
   188cc:	str	r6, [sp, #8]
   188d0:	mov	r2, r5
   188d4:	mov	r1, r4
   188d8:	str	lr, [sp, #12]
   188dc:	mov	r3, #1
   188e0:	bl	171b4 <BN_free@plt+0x41d8>
   188e4:	add	sp, sp, #24
   188e8:	pop	{r4, r5, r6, pc}
   188ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   188f0:	sub	sp, sp, #20
   188f4:	mov	r5, r1
   188f8:	ldr	r7, [sp, #48]	; 0x30
   188fc:	ldr	r8, [sp, #52]	; 0x34
   18900:	mov	r6, r2
   18904:	mov	r9, r3
   18908:	mov	r4, r0
   1890c:	bl	12838 <EVP_sha384@plt>
   18910:	mov	ip, #48	; 0x30
   18914:	str	r9, [sp]
   18918:	stmib	sp, {r7, r8}
   1891c:	mov	r3, r6
   18920:	mov	r2, r5
   18924:	mov	r1, r4
   18928:	str	ip, [sp, #12]
   1892c:	bl	171b4 <BN_free@plt+0x41d8>
   18930:	add	sp, sp, #20
   18934:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18938:	push	{r4, r5, r6, lr}
   1893c:	sub	sp, sp, #24
   18940:	mov	r5, r1
   18944:	ldr	r6, [sp, #40]	; 0x28
   18948:	mov	r4, r0
   1894c:	str	r2, [sp, #20]
   18950:	str	r3, [sp, #16]
   18954:	bl	12838 <EVP_sha384@plt>
   18958:	add	ip, sp, #16
   1895c:	add	r3, sp, #20
   18960:	mov	lr, #48	; 0x30
   18964:	stm	sp, {r3, ip}
   18968:	str	r6, [sp, #8]
   1896c:	mov	r2, r5
   18970:	mov	r1, r4
   18974:	str	lr, [sp, #12]
   18978:	mov	r3, #1
   1897c:	bl	171b4 <BN_free@plt+0x41d8>
   18980:	add	sp, sp, #24
   18984:	pop	{r4, r5, r6, pc}
   18988:	push	{r4, r5, r6, r7, r8, r9, lr}
   1898c:	sub	sp, sp, #20
   18990:	mov	r5, r1
   18994:	ldr	r7, [sp, #48]	; 0x30
   18998:	ldr	r8, [sp, #52]	; 0x34
   1899c:	mov	r6, r2
   189a0:	mov	r9, r3
   189a4:	mov	r4, r0
   189a8:	bl	12ec8 <EVP_sha512@plt>
   189ac:	mov	ip, #64	; 0x40
   189b0:	str	r9, [sp]
   189b4:	stmib	sp, {r7, r8}
   189b8:	mov	r3, r6
   189bc:	mov	r2, r5
   189c0:	mov	r1, r4
   189c4:	str	ip, [sp, #12]
   189c8:	bl	171b4 <BN_free@plt+0x41d8>
   189cc:	add	sp, sp, #20
   189d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   189d4:	push	{r4, r5, r6, lr}
   189d8:	sub	sp, sp, #24
   189dc:	mov	r5, r1
   189e0:	ldr	r6, [sp, #40]	; 0x28
   189e4:	mov	r4, r0
   189e8:	str	r2, [sp, #20]
   189ec:	str	r3, [sp, #16]
   189f0:	bl	12ec8 <EVP_sha512@plt>
   189f4:	add	ip, sp, #16
   189f8:	add	r3, sp, #20
   189fc:	mov	lr, #64	; 0x40
   18a00:	stm	sp, {r3, ip}
   18a04:	str	r6, [sp, #8]
   18a08:	mov	r2, r5
   18a0c:	mov	r1, r4
   18a10:	str	lr, [sp, #12]
   18a14:	mov	r3, #1
   18a18:	bl	171b4 <BN_free@plt+0x41d8>
   18a1c:	add	sp, sp, #24
   18a20:	pop	{r4, r5, r6, pc}
   18a24:	push	{r4, lr}
   18a28:	bl	12e50 <RAND_bytes@plt>
   18a2c:	subs	r0, r0, #1
   18a30:	mvnne	r0, #0
   18a34:	pop	{r4, pc}
   18a38:	b	12c10 <BN_new@plt>
   18a3c:	mov	r2, #0
   18a40:	b	12934 <BN_bin2bn@plt>
   18a44:	cmp	r1, #0
   18a48:	beq	18a50 <BN_free@plt+0x5a74>
   18a4c:	b	12a9c <BN_clear_free@plt>
   18a50:	b	12fdc <BN_free@plt>
   18a54:	cmp	r3, r2
   18a58:	bhi	18a64 <BN_free@plt+0x5a88>
   18a5c:	mov	r2, r3
   18a60:	b	127a8 <BN_bn2binpad@plt>
   18a64:	mvn	r0, #0
   18a68:	bx	lr
   18a6c:	push	{r4, lr}
   18a70:	bl	12a18 <BN_rand_range@plt>
   18a74:	subs	r0, r0, #1
   18a78:	mvnne	r0, #0
   18a7c:	pop	{r4, pc}
   18a80:	mov	r3, r2
   18a84:	push	{r4, lr}
   18a88:	mov	r2, r1
   18a8c:	mov	r1, r0
   18a90:	mov	r0, r3
   18a94:	bl	12b2c <BN_add@plt>
   18a98:	clz	r0, r0
   18a9c:	lsr	r0, r0, #5
   18aa0:	rsb	r0, r0, #0
   18aa4:	pop	{r4, pc}
   18aa8:	push	{r4, r5, r6, r7, lr}
   18aac:	sub	sp, sp, #12
   18ab0:	mov	r6, r0
   18ab4:	mov	r7, r1
   18ab8:	mov	r4, r2
   18abc:	bl	12c94 <BN_CTX_new@plt>
   18ac0:	subs	r5, r0, #0
   18ac4:	beq	18b00 <BN_free@plt+0x5b24>
   18ac8:	mov	r1, r4
   18acc:	mov	r3, r7
   18ad0:	mov	r2, r6
   18ad4:	str	r5, [sp]
   18ad8:	mov	r0, #0
   18adc:	bl	126e8 <BN_div@plt>
   18ae0:	mov	r4, r0
   18ae4:	mov	r0, r5
   18ae8:	bl	127fc <BN_CTX_free@plt>
   18aec:	clz	r0, r4
   18af0:	lsr	r0, r0, #5
   18af4:	rsb	r0, r0, #0
   18af8:	add	sp, sp, #12
   18afc:	pop	{r4, r5, r6, r7, pc}
   18b00:	mvn	r0, #0
   18b04:	b	18af8 <BN_free@plt+0x5b1c>
   18b08:	push	{r4, r5, r6, r7, r8, lr}
   18b0c:	sub	sp, sp, #8
   18b10:	mov	r6, r0
   18b14:	mov	r7, r1
   18b18:	mov	r8, r2
   18b1c:	mov	r4, r3
   18b20:	bl	12c94 <BN_CTX_new@plt>
   18b24:	subs	r5, r0, #0
   18b28:	beq	18b6c <BN_free@plt+0x5b90>
   18b2c:	mov	ip, #0
   18b30:	mov	r3, r8
   18b34:	mov	r2, r7
   18b38:	mov	r1, r6
   18b3c:	mov	r0, r4
   18b40:	str	ip, [sp, #4]
   18b44:	str	r5, [sp]
   18b48:	bl	1282c <BN_mod_exp_mont_consttime@plt>
   18b4c:	mov	r4, r0
   18b50:	mov	r0, r5
   18b54:	bl	127fc <BN_CTX_free@plt>
   18b58:	clz	r0, r4
   18b5c:	lsr	r0, r0, #5
   18b60:	rsb	r0, r0, #0
   18b64:	add	sp, sp, #8
   18b68:	pop	{r4, r5, r6, r7, r8, pc}
   18b6c:	mvn	r0, #0
   18b70:	b	18b64 <BN_free@plt+0x5b88>
   18b74:	push	{r4, r5, r6, r7, r8, lr}
   18b78:	mov	r4, r0
   18b7c:	mov	r7, r1
   18b80:	mov	r6, r2
   18b84:	bl	12c94 <BN_CTX_new@plt>
   18b88:	subs	r5, r0, #0
   18b8c:	beq	18bcc <BN_free@plt+0x5bf0>
   18b90:	mov	r0, r4
   18b94:	mov	r1, #4
   18b98:	bl	12778 <BN_set_flags@plt>
   18b9c:	mov	r1, r4
   18ba0:	mov	r3, r5
   18ba4:	mov	r2, r7
   18ba8:	mov	r0, r6
   18bac:	bl	12814 <BN_mod_inverse@plt>
   18bb0:	mov	r4, r0
   18bb4:	mov	r0, r5
   18bb8:	bl	127fc <BN_CTX_free@plt>
   18bbc:	clz	r0, r4
   18bc0:	lsr	r0, r0, #5
   18bc4:	rsb	r0, r0, #0
   18bc8:	pop	{r4, r5, r6, r7, r8, pc}
   18bcc:	mvn	r0, #0
   18bd0:	pop	{r4, r5, r6, r7, r8, pc}
   18bd4:	mov	r3, r2
   18bd8:	push	{r4, lr}
   18bdc:	mov	r2, r1
   18be0:	mov	r1, r0
   18be4:	mov	r0, r3
   18be8:	bl	12a0c <BN_sub@plt>
   18bec:	clz	r0, r0
   18bf0:	lsr	r0, r0, #5
   18bf4:	rsb	r0, r0, #0
   18bf8:	pop	{r4, pc}
   18bfc:	push	{r4, r5, r6, r7, lr}
   18c00:	sub	sp, sp, #12
   18c04:	mov	r4, r0
   18c08:	mov	r7, r1
   18c0c:	mov	r6, r2
   18c10:	bl	12c94 <BN_CTX_new@plt>
   18c14:	subs	r5, r0, #0
   18c18:	beq	18c60 <BN_free@plt+0x5c84>
   18c1c:	mov	r0, r4
   18c20:	mov	r1, #4
   18c24:	bl	12778 <BN_set_flags@plt>
   18c28:	mov	r2, r4
   18c2c:	mov	r3, r7
   18c30:	mov	r1, #0
   18c34:	str	r5, [sp]
   18c38:	mov	r0, r6
   18c3c:	bl	126e8 <BN_div@plt>
   18c40:	mov	r4, r0
   18c44:	mov	r0, r5
   18c48:	bl	127fc <BN_CTX_free@plt>
   18c4c:	clz	r0, r4
   18c50:	lsr	r0, r0, #5
   18c54:	rsb	r0, r0, #0
   18c58:	add	sp, sp, #12
   18c5c:	pop	{r4, r5, r6, r7, pc}
   18c60:	mvn	r0, #0
   18c64:	b	18c58 <BN_free@plt+0x5c7c>
   18c68:	push	{r4, r5, r6, r7, r8, lr}
   18c6c:	sub	sp, sp, #8
   18c70:	mov	r6, r0
   18c74:	mov	r7, r1
   18c78:	mov	r8, r2
   18c7c:	mov	r4, r3
   18c80:	bl	12c94 <BN_CTX_new@plt>
   18c84:	subs	r5, r0, #0
   18c88:	beq	18cc4 <BN_free@plt+0x5ce8>
   18c8c:	mov	r3, r8
   18c90:	mov	r2, r7
   18c94:	mov	r1, r6
   18c98:	mov	r0, r4
   18c9c:	str	r5, [sp]
   18ca0:	bl	127c0 <BN_mod_mul@plt>
   18ca4:	mov	r4, r0
   18ca8:	mov	r0, r5
   18cac:	bl	127fc <BN_CTX_free@plt>
   18cb0:	clz	r0, r4
   18cb4:	lsr	r0, r0, #5
   18cb8:	rsb	r0, r0, #0
   18cbc:	add	sp, sp, #8
   18cc0:	pop	{r4, r5, r6, r7, r8, pc}
   18cc4:	mvn	r0, #0
   18cc8:	b	18cbc <BN_free@plt+0x5ce0>
   18ccc:	mov	r3, r2
   18cd0:	push	{r4, lr}
   18cd4:	mov	r2, r1
   18cd8:	mov	r1, r3
   18cdc:	bl	12d24 <BN_rshift@plt>
   18ce0:	subs	r0, r0, #1
   18ce4:	mvnne	r0, #0
   18ce8:	pop	{r4, pc}
   18cec:	b	12a24 <BN_cmp@plt>
   18cf0:	b	129ac <BN_num_bits@plt>
   18cf4:	b	12820 <BN_is_zero@plt>
   18cf8:	b	12c28 <BN_is_one@plt>
   18cfc:	b	127d8 <BN_is_odd@plt>
   18d00:	push	{r4, r5, r6, r7, r8, r9, lr}
   18d04:	sub	sp, sp, #12
   18d08:	mov	r9, r0
   18d0c:	mov	r8, r1
   18d10:	bl	12c94 <BN_CTX_new@plt>
   18d14:	subs	r7, r0, #0
   18d18:	beq	18e14 <BN_free@plt+0x5e38>
   18d1c:	bl	12c10 <BN_new@plt>
   18d20:	mov	r5, r0
   18d24:	bl	12c10 <BN_new@plt>
   18d28:	cmp	r5, #0
   18d2c:	moveq	r4, #1
   18d30:	clz	r3, r0
   18d34:	lsr	r3, r3, #5
   18d38:	movne	r4, r3
   18d3c:	cmp	r4, #0
   18d40:	mov	r6, r0
   18d44:	beq	18d70 <BN_free@plt+0x5d94>
   18d48:	mvn	r4, #1
   18d4c:	mov	r0, r6
   18d50:	bl	12a9c <BN_clear_free@plt>
   18d54:	mov	r0, r5
   18d58:	bl	12a9c <BN_clear_free@plt>
   18d5c:	mov	r0, r7
   18d60:	bl	127fc <BN_CTX_free@plt>
   18d64:	mov	r0, r4
   18d68:	add	sp, sp, #12
   18d6c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18d70:	bl	12be0 <BN_value_one@plt>
   18d74:	mov	r1, r8
   18d78:	mov	r2, r0
   18d7c:	mov	r0, r5
   18d80:	bl	12a0c <BN_sub@plt>
   18d84:	cmp	r0, #0
   18d88:	beq	18d48 <BN_free@plt+0x5d6c>
   18d8c:	mov	r1, r5
   18d90:	mov	r0, r5
   18d94:	bl	12ebc <BN_rshift1@plt>
   18d98:	cmp	r0, #0
   18d9c:	beq	18d48 <BN_free@plt+0x5d6c>
   18da0:	str	r4, [sp, #4]
   18da4:	str	r7, [sp]
   18da8:	mov	r3, r8
   18dac:	mov	r1, r9
   18db0:	mov	r2, r5
   18db4:	mov	r0, r6
   18db8:	bl	1282c <BN_mod_exp_mont_consttime@plt>
   18dbc:	cmp	r0, #0
   18dc0:	beq	18d48 <BN_free@plt+0x5d6c>
   18dc4:	mov	r1, #1
   18dc8:	mov	r0, r6
   18dcc:	bl	129e8 <BN_is_word@plt>
   18dd0:	mov	r4, r0
   18dd4:	mov	r0, r6
   18dd8:	bl	12820 <BN_is_zero@plt>
   18ddc:	mvn	r1, #1
   18de0:	eor	r3, r4, #1
   18de4:	sub	r3, r3, #1
   18de8:	eor	r4, r4, r1
   18dec:	and	r3, r3, r4
   18df0:	asr	r4, r3, #31
   18df4:	and	r4, r4, r1
   18df8:	eor	r2, r0, #1
   18dfc:	sub	r2, r2, #1
   18e00:	eor	r0, r0, r1
   18e04:	and	r2, r2, r0
   18e08:	orr	r4, r4, r2, asr #31
   18e0c:	mvn	r4, r4
   18e10:	b	18d4c <BN_free@plt+0x5d70>
   18e14:	mvn	r4, #1
   18e18:	b	18d64 <BN_free@plt+0x5d88>
   18e1c:	sub	r0, r0, #19
   18e20:	push	{r4, r5, lr}
   18e24:	sub	sp, sp, #12
   18e28:	cmp	r0, #11
   18e2c:	ldrls	pc, [pc, r0, lsl #2]
   18e30:	b	18f6c <BN_free@plt+0x5f90>
   18e34:	andeq	r8, r1, r4, ror #28
   18e38:	andeq	r8, r1, ip, lsr #30
   18e3c:	andeq	r8, r1, r4, lsr pc
   18e40:	andeq	r8, r1, ip, ror #30
   18e44:	andeq	r8, r1, ip, ror #30
   18e48:	andeq	r8, r1, ip, ror #30
   18e4c:	andeq	r8, r1, ip, lsr pc
   18e50:	andeq	r8, r1, r4, asr #30
   18e54:	andeq	r8, r1, ip, asr #30
   18e58:	andeq	r8, r1, r4, asr pc
   18e5c:	andeq	r8, r1, ip, asr pc
   18e60:	andeq	r8, r1, r4, ror #30
   18e64:	ldr	r5, [pc, #288]	; 18f8c <BN_free@plt+0x5fb0>
   18e68:	mov	r0, #28
   18e6c:	bl	16e00 <BN_free@plt+0x3e24>
   18e70:	subs	r4, r0, #0
   18e74:	beq	18f20 <BN_free@plt+0x5f44>
   18e78:	str	r5, [r4, #4]
   18e7c:	bl	12c94 <BN_CTX_new@plt>
   18e80:	str	r0, [r4, #8]
   18e84:	mov	r0, r5
   18e88:	bl	12874 <EC_GROUP_new_by_curve_name@plt>
   18e8c:	str	r0, [r4]
   18e90:	bl	12c10 <BN_new@plt>
   18e94:	str	r0, [r4, #12]
   18e98:	bl	12c10 <BN_new@plt>
   18e9c:	str	r0, [r4, #16]
   18ea0:	bl	12c10 <BN_new@plt>
   18ea4:	str	r0, [r4, #20]
   18ea8:	bl	12c10 <BN_new@plt>
   18eac:	ldr	ip, [r4]
   18eb0:	cmp	ip, #0
   18eb4:	str	r0, [r4, #24]
   18eb8:	beq	18f74 <BN_free@plt+0x5f98>
   18ebc:	ldr	r3, [r4, #8]
   18ec0:	cmp	r3, #0
   18ec4:	beq	18f74 <BN_free@plt+0x5f98>
   18ec8:	ldr	r1, [r4, #12]
   18ecc:	cmp	r1, #0
   18ed0:	beq	18f74 <BN_free@plt+0x5f98>
   18ed4:	ldr	r2, [r4, #16]
   18ed8:	cmp	r2, #0
   18edc:	beq	18f74 <BN_free@plt+0x5f98>
   18ee0:	ldr	r2, [r4, #20]
   18ee4:	cmp	r2, #0
   18ee8:	cmpne	r0, #0
   18eec:	beq	18f74 <BN_free@plt+0x5f98>
   18ef0:	str	r3, [sp]
   18ef4:	mov	r3, r0
   18ef8:	mov	r0, ip
   18efc:	bl	12b08 <EC_GROUP_get_curve_GFp@plt>
   18f00:	cmp	r0, #0
   18f04:	beq	18f74 <BN_free@plt+0x5f98>
   18f08:	ldr	r2, [r4, #8]
   18f0c:	ldr	r1, [r4, #16]
   18f10:	ldr	r0, [r4]
   18f14:	bl	12cc4 <EC_GROUP_get_order@plt>
   18f18:	cmp	r0, #0
   18f1c:	beq	18f74 <BN_free@plt+0x5f98>
   18f20:	mov	r0, r4
   18f24:	add	sp, sp, #12
   18f28:	pop	{r4, r5, pc}
   18f2c:	ldr	r5, [pc, #92]	; 18f90 <BN_free@plt+0x5fb4>
   18f30:	b	18e68 <BN_free@plt+0x5e8c>
   18f34:	mov	r5, #716	; 0x2cc
   18f38:	b	18e68 <BN_free@plt+0x5e8c>
   18f3c:	ldr	r5, [pc, #80]	; 18f94 <BN_free@plt+0x5fb8>
   18f40:	b	18e68 <BN_free@plt+0x5e8c>
   18f44:	ldr	r5, [pc, #76]	; 18f98 <BN_free@plt+0x5fbc>
   18f48:	b	18e68 <BN_free@plt+0x5e8c>
   18f4c:	ldr	r5, [pc, #72]	; 18f9c <BN_free@plt+0x5fc0>
   18f50:	b	18e68 <BN_free@plt+0x5e8c>
   18f54:	ldr	r5, [pc, #68]	; 18fa0 <BN_free@plt+0x5fc4>
   18f58:	b	18e68 <BN_free@plt+0x5e8c>
   18f5c:	ldr	r5, [pc, #64]	; 18fa4 <BN_free@plt+0x5fc8>
   18f60:	b	18e68 <BN_free@plt+0x5e8c>
   18f64:	ldr	r5, [pc, #60]	; 18fa8 <BN_free@plt+0x5fcc>
   18f68:	b	18e68 <BN_free@plt+0x5e8c>
   18f6c:	mov	r4, #0
   18f70:	b	18f20 <BN_free@plt+0x5f44>
   18f74:	mov	r0, r4
   18f78:	bl	17268 <BN_free@plt+0x428c>
   18f7c:	mov	r4, #0
   18f80:	mov	r0, r4
   18f84:	add	sp, sp, #12
   18f88:	pop	{r4, r5, pc}
   18f8c:	muleq	r0, pc, r1	; <UNPREDICTABLE>
   18f90:	andeq	r0, r0, fp, asr #5
   18f94:	muleq	r0, r9, r1
   18f98:	andeq	r0, r0, r9, asr #5
   18f9c:	muleq	r0, sp, r3
   18fa0:	muleq	r0, pc, r3	; <UNPREDICTABLE>
   18fa4:	andeq	r0, r0, r3, lsr #7
   18fa8:	andeq	r0, r0, r5, lsr #7
   18fac:	cmp	r0, #0
   18fb0:	bxeq	lr
   18fb4:	b	17268 <BN_free@plt+0x428c>
   18fb8:	ldr	r2, [r0, #8]
   18fbc:	push	{r4, lr}
   18fc0:	ldr	r0, [r0]
   18fc4:	bl	12f7c <EC_GROUP_get_cofactor@plt>
   18fc8:	clz	r0, r0
   18fcc:	lsr	r0, r0, #5
   18fd0:	rsb	r0, r0, #0
   18fd4:	pop	{r4, pc}
   18fd8:	subs	r3, r0, #0
   18fdc:	bxeq	lr
   18fe0:	ldr	r0, [r3]
   18fe4:	b	12970 <EC_POINT_new@plt>
   18fe8:	push	{r4, lr}
   18fec:	ldr	r0, [r0, #12]
   18ff0:	bl	129ac <BN_num_bits@plt>
   18ff4:	adds	r3, r0, #7
   18ff8:	addmi	r0, r0, #14
   18ffc:	movpl	r0, r3
   19000:	asr	r0, r0, #3
   19004:	pop	{r4, pc}
   19008:	ldr	r0, [r0, #12]
   1900c:	b	129ac <BN_num_bits@plt>
   19010:	push	{r4, lr}
   19014:	ldr	r0, [r0, #16]
   19018:	bl	129ac <BN_num_bits@plt>
   1901c:	adds	r3, r0, #7
   19020:	addmi	r0, r0, #14
   19024:	movpl	r0, r3
   19028:	asr	r0, r0, #3
   1902c:	pop	{r4, pc}
   19030:	ldr	r0, [r0, #12]
   19034:	bx	lr
   19038:	ldr	r0, [r0, #16]
   1903c:	bx	lr
   19040:	cmp	r1, #0
   19044:	beq	1904c <BN_free@plt+0x6070>
   19048:	b	12acc <EC_POINT_clear_free@plt>
   1904c:	b	12e44 <EC_POINT_free@plt>
   19050:	push	{lr}		; (str lr, [sp, #-4]!)
   19054:	sub	sp, sp, #12
   19058:	ldr	ip, [r0, #8]
   1905c:	mov	r3, #0
   19060:	ldr	r0, [r0]
   19064:	str	ip, [sp]
   19068:	bl	12ac0 <EC_POINT_get_affine_coordinates_GFp@plt>
   1906c:	subs	r0, r0, #1
   19070:	mvnne	r0, #0
   19074:	add	sp, sp, #12
   19078:	pop	{pc}		; (ldr pc, [sp], #4)
   1907c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19080:	mov	r8, r0
   19084:	sub	sp, sp, #8
   19088:	ldr	r0, [r0, #12]
   1908c:	mov	sl, r1
   19090:	mov	r9, r2
   19094:	mov	r5, r3
   19098:	bl	129ac <BN_num_bits@plt>
   1909c:	adds	r4, r0, #7
   190a0:	addmi	r4, r0, #14
   190a4:	bl	12c10 <BN_new@plt>
   190a8:	mov	r7, r0
   190ac:	bl	12c10 <BN_new@plt>
   190b0:	cmp	r7, #0
   190b4:	cmpne	r0, #0
   190b8:	mov	r6, r0
   190bc:	beq	19138 <BN_free@plt+0x615c>
   190c0:	ldr	r3, [r8, #8]
   190c4:	mov	r1, sl
   190c8:	str	r3, [sp]
   190cc:	mov	r2, r7
   190d0:	ldr	r0, [r8]
   190d4:	mov	r3, r6
   190d8:	bl	12ac0 <EC_POINT_get_affine_coordinates_GFp@plt>
   190dc:	cmp	r0, #0
   190e0:	beq	19138 <BN_free@plt+0x615c>
   190e4:	cmp	r9, #0
   190e8:	asr	r4, r4, #3
   190ec:	beq	19100 <BN_free@plt+0x6124>
   190f0:	mov	r1, r9
   190f4:	mov	r2, r4
   190f8:	mov	r0, r7
   190fc:	bl	127a8 <BN_bn2binpad@plt>
   19100:	cmp	r5, #0
   19104:	beq	1911c <BN_free@plt+0x6140>
   19108:	mov	r1, r5
   1910c:	mov	r2, r4
   19110:	mov	r0, r6
   19114:	bl	127a8 <BN_bn2binpad@plt>
   19118:	mov	r5, #0
   1911c:	mov	r0, r7
   19120:	bl	12a9c <BN_clear_free@plt>
   19124:	mov	r0, r6
   19128:	bl	12a9c <BN_clear_free@plt>
   1912c:	mov	r0, r5
   19130:	add	sp, sp, #8
   19134:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19138:	mvn	r5, #0
   1913c:	b	1911c <BN_free@plt+0x6140>
   19140:	push	{r4, r5, r6, r7, lr}
   19144:	mov	r5, r0
   19148:	sub	sp, sp, #12
   1914c:	ldr	r0, [r0, #12]
   19150:	mov	r7, r1
   19154:	bl	129ac <BN_num_bits@plt>
   19158:	mov	r2, #0
   1915c:	adds	r4, r0, #7
   19160:	addmi	r4, r0, #14
   19164:	mov	r0, r7
   19168:	asr	r4, r4, #3
   1916c:	mov	r1, r4
   19170:	bl	12934 <BN_bin2bn@plt>
   19174:	mov	r1, r4
   19178:	mov	r2, #0
   1917c:	mov	r6, r0
   19180:	add	r0, r7, r4
   19184:	bl	12934 <BN_bin2bn@plt>
   19188:	mov	r4, r0
   1918c:	ldr	r0, [r5]
   19190:	bl	12970 <EC_POINT_new@plt>
   19194:	cmp	r6, #0
   19198:	clz	r3, r4
   1919c:	lsr	r3, r3, #5
   191a0:	moveq	r3, #1
   191a4:	cmp	r0, #0
   191a8:	moveq	r3, #1
   191ac:	cmp	r3, #0
   191b0:	mov	r7, r0
   191b4:	bne	19208 <BN_free@plt+0x622c>
   191b8:	ldr	r3, [r5, #8]
   191bc:	ldr	r0, [r5]
   191c0:	mov	r2, r6
   191c4:	str	r3, [sp]
   191c8:	mov	r1, r7
   191cc:	mov	r3, r4
   191d0:	bl	12b68 <EC_POINT_set_affine_coordinates_GFp@plt>
   191d4:	subs	r5, r0, #0
   191d8:	beq	191f8 <BN_free@plt+0x621c>
   191dc:	mov	r0, r6
   191e0:	bl	12a9c <BN_clear_free@plt>
   191e4:	mov	r0, r4
   191e8:	bl	12a9c <BN_clear_free@plt>
   191ec:	mov	r0, r7
   191f0:	add	sp, sp, #12
   191f4:	pop	{r4, r5, r6, r7, pc}
   191f8:	mov	r0, r7
   191fc:	bl	12acc <EC_POINT_clear_free@plt>
   19200:	mov	r7, r5
   19204:	b	191dc <BN_free@plt+0x6200>
   19208:	mov	r0, r6
   1920c:	bl	12a9c <BN_clear_free@plt>
   19210:	mov	r0, r4
   19214:	bl	12a9c <BN_clear_free@plt>
   19218:	mov	r0, r7
   1921c:	bl	12acc <EC_POINT_clear_free@plt>
   19220:	mov	r7, #0
   19224:	mov	r0, r7
   19228:	add	sp, sp, #12
   1922c:	pop	{r4, r5, r6, r7, pc}
   19230:	push	{lr}		; (str lr, [sp, #-4]!)
   19234:	sub	sp, sp, #12
   19238:	ldr	lr, [r0, #8]
   1923c:	mov	ip, r3
   19240:	str	lr, [sp]
   19244:	mov	r3, r2
   19248:	ldr	r0, [r0]
   1924c:	mov	r2, r1
   19250:	mov	r1, ip
   19254:	bl	12f58 <EC_POINT_add@plt>
   19258:	clz	r0, r0
   1925c:	lsr	r0, r0, #5
   19260:	rsb	r0, r0, #0
   19264:	add	sp, sp, #12
   19268:	pop	{pc}		; (ldr pc, [sp], #4)
   1926c:	push	{lr}		; (str lr, [sp, #-4]!)
   19270:	sub	sp, sp, #12
   19274:	ldr	lr, [r0, #8]
   19278:	mov	ip, r3
   1927c:	str	r2, [sp]
   19280:	mov	r3, r1
   19284:	str	lr, [sp, #4]
   19288:	mov	r1, ip
   1928c:	mov	r2, #0
   19290:	ldr	r0, [r0]
   19294:	bl	12cdc <EC_POINT_mul@plt>
   19298:	clz	r0, r0
   1929c:	lsr	r0, r0, #5
   192a0:	rsb	r0, r0, #0
   192a4:	add	sp, sp, #12
   192a8:	pop	{pc}		; (ldr pc, [sp], #4)
   192ac:	ldr	r2, [r0, #8]
   192b0:	push	{r4, lr}
   192b4:	ldr	r0, [r0]
   192b8:	bl	129c4 <EC_POINT_invert@plt>
   192bc:	clz	r0, r0
   192c0:	lsr	r0, r0, #5
   192c4:	rsb	r0, r0, #0
   192c8:	pop	{r4, pc}
   192cc:	push	{r4, r5, lr}
   192d0:	sub	sp, sp, #12
   192d4:	ldr	ip, [r0, #8]
   192d8:	mov	r4, r0
   192dc:	ldr	r0, [r0]
   192e0:	str	ip, [sp]
   192e4:	mov	r5, r1
   192e8:	bl	129b8 <EC_POINT_set_compressed_coordinates_GFp@plt>
   192ec:	cmp	r0, #0
   192f0:	beq	19318 <BN_free@plt+0x633c>
   192f4:	mov	r1, r5
   192f8:	ldr	r2, [r4, #8]
   192fc:	ldr	r0, [r4]
   19300:	bl	12f10 <EC_POINT_is_on_curve@plt>
   19304:	clz	r0, r0
   19308:	lsr	r0, r0, #5
   1930c:	rsb	r0, r0, #0
   19310:	add	sp, sp, #12
   19314:	pop	{r4, r5, pc}
   19318:	mvn	r0, #0
   1931c:	b	19310 <BN_free@plt+0x6334>
   19320:	push	{r4, r5, r6, r7, lr}
   19324:	sub	sp, sp, #12
   19328:	mov	r4, r1
   1932c:	mov	r7, r0
   19330:	bl	12c10 <BN_new@plt>
   19334:	mov	r5, r0
   19338:	bl	12c10 <BN_new@plt>
   1933c:	mov	r6, r0
   19340:	adds	r0, r0, #0
   19344:	movne	r0, #1
   19348:	cmp	r5, #0
   1934c:	moveq	r0, #0
   19350:	cmp	r0, #0
   19354:	beq	193f8 <BN_free@plt+0x641c>
   19358:	ldr	r3, [r7, #8]
   1935c:	ldr	r2, [r7, #12]
   19360:	mov	r1, r4
   19364:	mov	r0, r5
   19368:	bl	12ba4 <BN_mod_sqr@plt>
   1936c:	cmp	r0, #0
   19370:	beq	193f8 <BN_free@plt+0x641c>
   19374:	ldrd	r2, [r7, #8]
   19378:	mov	r1, r5
   1937c:	mov	r0, r5
   19380:	str	r2, [sp]
   19384:	mov	r2, r4
   19388:	bl	127c0 <BN_mod_mul@plt>
   1938c:	cmp	r0, #0
   19390:	beq	193f8 <BN_free@plt+0x641c>
   19394:	ldr	r3, [r7, #8]
   19398:	mov	r2, r4
   1939c:	str	r3, [sp]
   193a0:	mov	r0, r6
   193a4:	ldr	r3, [r7, #12]
   193a8:	ldr	r1, [r7, #20]
   193ac:	bl	127c0 <BN_mod_mul@plt>
   193b0:	subs	r4, r0, #0
   193b4:	beq	193fc <BN_free@plt+0x6420>
   193b8:	ldr	r3, [r7, #12]
   193bc:	mov	r2, r5
   193c0:	mov	r1, r6
   193c4:	mov	r0, r6
   193c8:	bl	12dfc <BN_mod_add_quick@plt>
   193cc:	subs	r4, r0, #0
   193d0:	beq	193fc <BN_free@plt+0x6420>
   193d4:	ldr	r3, [r7, #12]
   193d8:	ldr	r2, [r7, #24]
   193dc:	mov	r1, r6
   193e0:	mov	r0, r6
   193e4:	bl	12dfc <BN_mod_add_quick@plt>
   193e8:	subs	r4, r0, #0
   193ec:	movne	r4, r6
   193f0:	movne	r6, #0
   193f4:	b	193fc <BN_free@plt+0x6420>
   193f8:	mov	r4, r0
   193fc:	mov	r0, r5
   19400:	bl	12a9c <BN_clear_free@plt>
   19404:	mov	r0, r6
   19408:	bl	12a9c <BN_clear_free@plt>
   1940c:	mov	r0, r4
   19410:	add	sp, sp, #12
   19414:	pop	{r4, r5, r6, r7, pc}
   19418:	ldr	r0, [r0]
   1941c:	b	12868 <EC_POINT_is_at_infinity@plt>
   19420:	ldr	r2, [r0, #8]
   19424:	push	{r4, lr}
   19428:	ldr	r0, [r0]
   1942c:	bl	12f10 <EC_POINT_is_on_curve@plt>
   19430:	sub	r0, r0, #1
   19434:	clz	r0, r0
   19438:	lsr	r0, r0, #5
   1943c:	pop	{r4, pc}
   19440:	ldr	r3, [r0, #8]
   19444:	ldr	r0, [r0]
   19448:	b	12b5c <EC_POINT_cmp@plt>
   1944c:	ldr	r3, [r0]
   19450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19454:	mov	r7, r0
   19458:	sub	sp, sp, #20
   1945c:	ldr	r0, [r3, #12]
   19460:	mov	r9, r1
   19464:	bl	129ac <BN_num_bits@plt>
   19468:	mov	r4, r0
   1946c:	ldr	r0, [r7, #4]
   19470:	bl	12808 <EVP_PKEY_get1_EC_KEY@plt>
   19474:	subs	sl, r0, #0
   19478:	beq	19598 <BN_free@plt+0x65bc>
   1947c:	bl	128f8 <EC_KEY_get0_public_key@plt>
   19480:	subs	r3, r0, #0
   19484:	str	r3, [sp, #12]
   19488:	beq	19598 <BN_free@plt+0x65bc>
   1948c:	adds	r3, r4, #7
   19490:	addmi	r4, r4, #14
   19494:	movpl	r4, r3
   19498:	bl	12c10 <BN_new@plt>
   1949c:	asr	r4, r4, #3
   194a0:	cmp	r9, #0
   194a4:	moveq	fp, r9
   194a8:	mov	r8, r0
   194ac:	moveq	r0, r4
   194b0:	bne	19580 <BN_free@plt+0x65a4>
   194b4:	bl	1636c <BN_free@plt+0x3390>
   194b8:	cmp	r8, #0
   194bc:	clz	r5, r0
   194c0:	lsr	r5, r5, #5
   194c4:	moveq	r5, #1
   194c8:	cmp	r5, #0
   194cc:	mov	r6, r0
   194d0:	beq	19504 <BN_free@plt+0x6528>
   194d4:	mov	r0, r6
   194d8:	bl	16490 <BN_free@plt+0x34b4>
   194dc:	mov	r6, #0
   194e0:	mov	r0, r8
   194e4:	bl	12a9c <BN_clear_free@plt>
   194e8:	mov	r0, fp
   194ec:	bl	12a9c <BN_clear_free@plt>
   194f0:	mov	r0, sl
   194f4:	bl	12754 <EC_KEY_free@plt>
   194f8:	mov	r0, r6
   194fc:	add	sp, sp, #20
   19500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19504:	ldr	r2, [r7]
   19508:	ldr	r1, [sp, #12]
   1950c:	mov	r3, fp
   19510:	ldr	r0, [r2]
   19514:	ldr	r2, [r2, #8]
   19518:	str	r2, [sp]
   1951c:	mov	r2, r8
   19520:	bl	12ac0 <EC_POINT_get_affine_coordinates_GFp@plt>
   19524:	cmp	r0, #1
   19528:	bne	195a8 <BN_free@plt+0x65cc>
   1952c:	mov	r1, r4
   19530:	mov	r0, r6
   19534:	bl	164f0 <BN_free@plt+0x3514>
   19538:	mov	r2, r4
   1953c:	mov	r1, r0
   19540:	mov	r0, r8
   19544:	bl	127a8 <BN_bn2binpad@plt>
   19548:	cmp	r0, #0
   1954c:	blt	194d4 <BN_free@plt+0x64f8>
   19550:	cmp	r9, #0
   19554:	beq	194e0 <BN_free@plt+0x6504>
   19558:	mov	r1, r4
   1955c:	mov	r0, r6
   19560:	bl	164f0 <BN_free@plt+0x3514>
   19564:	mov	r2, r4
   19568:	mov	r1, r0
   1956c:	mov	r0, fp
   19570:	bl	127a8 <BN_bn2binpad@plt>
   19574:	cmp	r0, #0
   19578:	bge	194e0 <BN_free@plt+0x6504>
   1957c:	b	194d4 <BN_free@plt+0x64f8>
   19580:	bl	12c10 <BN_new@plt>
   19584:	subs	fp, r0, #0
   19588:	lslne	r0, r4, #1
   1958c:	bne	194b4 <BN_free@plt+0x64d8>
   19590:	mov	r6, fp
   19594:	b	194d4 <BN_free@plt+0x64f8>
   19598:	mov	r6, #0
   1959c:	mov	r0, r6
   195a0:	add	sp, sp, #20
   195a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195a8:	bl	12790 <ERR_get_error@plt>
   195ac:	mov	r1, r5
   195b0:	bl	12c4c <ERR_error_string@plt>
   195b4:	ldr	r1, [pc, #12]	; 195c8 <BN_free@plt+0x65ec>
   195b8:	mov	r2, r0
   195bc:	mov	r0, #5
   195c0:	bl	14e90 <BN_free@plt+0x1eb4>
   195c4:	b	194d4 <BN_free@plt+0x64f8>
   195c8:			; <UNDEFINED> instruction: 0x0001abb4
   195cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   195d0:	subs	r4, r1, #0
   195d4:	ldr	r8, [pc, #872]	; 19944 <BN_free@plt+0x6968>
   195d8:	sub	sp, sp, #20
   195dc:	mov	r7, r0
   195e0:	ldr	r1, [r8]
   195e4:	mov	r5, r2
   195e8:	str	r1, [sp, #12]
   195ec:	beq	19768 <BN_free@plt+0x678c>
   195f0:	lsr	r4, r3, #1
   195f4:	mov	r2, #0
   195f8:	mov	r1, r4
   195fc:	mov	r0, r5
   19600:	bl	12934 <BN_bin2bn@plt>
   19604:	ldr	r3, [r7]
   19608:	mov	r9, r0
   1960c:	ldr	r0, [r3]
   19610:	bl	12970 <EC_POINT_new@plt>
   19614:	cmp	r9, #0
   19618:	clz	r2, r0
   1961c:	lsr	r2, r2, #5
   19620:	moveq	r2, #1
   19624:	cmp	r2, #0
   19628:	mov	r6, r0
   1962c:	bne	19888 <BN_free@plt+0x68ac>
   19630:	add	r0, r5, r4
   19634:	mov	r1, r4
   19638:	bl	12934 <BN_bin2bn@plt>
   1963c:	subs	r5, r0, #0
   19640:	beq	198f4 <BN_free@plt+0x6918>
   19644:	ldr	r1, [r7]
   19648:	mov	r3, r5
   1964c:	mov	r2, r9
   19650:	ldr	r0, [r1]
   19654:	ldr	r1, [r1, #8]
   19658:	str	r1, [sp]
   1965c:	mov	r1, r6
   19660:	bl	12b68 <EC_POINT_set_affine_coordinates_GFp@plt>
   19664:	subs	r4, r0, #0
   19668:	beq	19914 <BN_free@plt+0x6938>
   1966c:	ldr	r3, [r7]
   19670:	mov	r1, r6
   19674:	ldr	r2, [r3, #8]
   19678:	ldr	r0, [r3]
   1967c:	bl	12f10 <EC_POINT_is_on_curve@plt>
   19680:	subs	r4, r0, #0
   19684:	beq	198c4 <BN_free@plt+0x68e8>
   19688:	ldr	r3, [r7]
   1968c:	ldr	r0, [r3, #4]
   19690:	bl	12b8c <EC_KEY_new_by_curve_name@plt>
   19694:	subs	r4, r0, #0
   19698:	beq	197fc <BN_free@plt+0x6820>
   1969c:	mov	r1, r6
   196a0:	bl	1297c <EC_KEY_set_public_key@plt>
   196a4:	cmp	r0, #1
   196a8:	bne	197fc <BN_free@plt+0x6820>
   196ac:	bl	128b0 <EVP_PKEY_new@plt>
   196b0:	subs	sl, r0, #0
   196b4:	beq	19908 <BN_free@plt+0x692c>
   196b8:	mov	r1, r4
   196bc:	bl	12a84 <EVP_PKEY_set1_EC_KEY@plt>
   196c0:	cmp	r0, #1
   196c4:	bne	1987c <BN_free@plt+0x68a0>
   196c8:	ldr	r0, [r7, #4]
   196cc:	mov	r1, #0
   196d0:	bl	12880 <EVP_PKEY_CTX_new@plt>
   196d4:	subs	fp, r0, #0
   196d8:	beq	198a0 <BN_free@plt+0x68c4>
   196dc:	bl	12df0 <EVP_PKEY_derive_init@plt>
   196e0:	cmp	r0, #1
   196e4:	bne	198a0 <BN_free@plt+0x68c4>
   196e8:	mov	r1, sl
   196ec:	mov	r0, fp
   196f0:	bl	12b20 <EVP_PKEY_derive_set_peer@plt>
   196f4:	cmp	r0, #1
   196f8:	bne	198a0 <BN_free@plt+0x68c4>
   196fc:	add	r2, sp, #8
   19700:	mov	r1, #0
   19704:	mov	r0, fp
   19708:	bl	12af0 <EVP_PKEY_derive@plt>
   1970c:	cmp	r0, #1
   19710:	bne	198a0 <BN_free@plt+0x68c4>
   19714:	ldr	r0, [sp, #8]
   19718:	bl	1636c <BN_free@plt+0x3390>
   1971c:	subs	r7, r0, #0
   19720:	beq	19824 <BN_free@plt+0x6848>
   19724:	ldr	r1, [sp, #8]
   19728:	mov	r0, r7
   1972c:	bl	164f0 <BN_free@plt+0x3514>
   19730:	add	r2, sp, #8
   19734:	mov	r1, r0
   19738:	mov	r0, fp
   1973c:	bl	12af0 <EVP_PKEY_derive@plt>
   19740:	cmp	r0, #1
   19744:	beq	19830 <BN_free@plt+0x6854>
   19748:	bl	12790 <ERR_get_error@plt>
   1974c:	mov	r1, #0
   19750:	bl	12c4c <ERR_error_string@plt>
   19754:	ldr	r1, [pc, #492]	; 19948 <BN_free@plt+0x696c>
   19758:	mov	r2, r0
   1975c:	mov	r0, #5
   19760:	bl	14e90 <BN_free@plt+0x1eb4>
   19764:	b	19824 <BN_free@plt+0x6848>
   19768:	mov	r1, r3
   1976c:	mov	r0, r2
   19770:	mov	r2, r4
   19774:	bl	12934 <BN_bin2bn@plt>
   19778:	ldr	r3, [r7]
   1977c:	mov	r9, r0
   19780:	ldr	r0, [r3]
   19784:	bl	12970 <EC_POINT_new@plt>
   19788:	clz	r5, r9
   1978c:	lsr	r5, r5, #5
   19790:	cmp	r0, #0
   19794:	moveq	r5, #1
   19798:	cmp	r5, #0
   1979c:	mov	r6, r0
   197a0:	bne	198e0 <BN_free@plt+0x6904>
   197a4:	ldr	r1, [r7]
   197a8:	mov	r3, r5
   197ac:	mov	r2, r9
   197b0:	ldr	r0, [r1]
   197b4:	ldr	r1, [r1, #8]
   197b8:	str	r1, [sp]
   197bc:	mov	r1, r6
   197c0:	bl	129b8 <EC_POINT_set_compressed_coordinates_GFp@plt>
   197c4:	subs	r4, r0, #0
   197c8:	bne	1966c <BN_free@plt+0x6690>
   197cc:	bl	12790 <ERR_get_error@plt>
   197d0:	mov	r1, r4
   197d4:	bl	12c4c <ERR_error_string@plt>
   197d8:	ldr	r1, [pc, #364]	; 1994c <BN_free@plt+0x6970>
   197dc:	mov	r7, r4
   197e0:	mov	sl, r4
   197e4:	mov	fp, r4
   197e8:	mov	r5, r4
   197ec:	mov	r2, r0
   197f0:	mov	r0, #5
   197f4:	bl	14e90 <BN_free@plt+0x1eb4>
   197f8:	b	19824 <BN_free@plt+0x6848>
   197fc:	bl	12790 <ERR_get_error@plt>
   19800:	mov	r1, #0
   19804:	bl	12c4c <ERR_error_string@plt>
   19808:	ldr	r1, [pc, #320]	; 19950 <BN_free@plt+0x6974>
   1980c:	mov	r7, #0
   19810:	mov	sl, r7
   19814:	mov	fp, r7
   19818:	mov	r2, r0
   1981c:	mov	r0, #5
   19820:	bl	14e90 <BN_free@plt+0x1eb4>
   19824:	mov	r0, r7
   19828:	bl	16490 <BN_free@plt+0x34b4>
   1982c:	mov	r7, #0
   19830:	mov	r0, r9
   19834:	bl	12fdc <BN_free@plt>
   19838:	mov	r0, r5
   1983c:	bl	12fdc <BN_free@plt>
   19840:	mov	r0, r4
   19844:	bl	12754 <EC_KEY_free@plt>
   19848:	mov	r0, r6
   1984c:	bl	12e44 <EC_POINT_free@plt>
   19850:	mov	r0, fp
   19854:	bl	12c40 <EVP_PKEY_CTX_free@plt>
   19858:	mov	r0, sl
   1985c:	bl	12e74 <EVP_PKEY_free@plt>
   19860:	ldr	r2, [sp, #12]
   19864:	ldr	r3, [r8]
   19868:	mov	r0, r7
   1986c:	cmp	r2, r3
   19870:	bne	19940 <BN_free@plt+0x6964>
   19874:	add	sp, sp, #20
   19878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1987c:	mov	r7, #0
   19880:	mov	fp, r7
   19884:	b	19824 <BN_free@plt+0x6848>
   19888:	mov	r4, #0
   1988c:	mov	r7, r4
   19890:	mov	sl, r4
   19894:	mov	fp, r4
   19898:	mov	r5, r4
   1989c:	b	19824 <BN_free@plt+0x6848>
   198a0:	bl	12790 <ERR_get_error@plt>
   198a4:	mov	r1, #0
   198a8:	bl	12c4c <ERR_error_string@plt>
   198ac:	ldr	r1, [pc, #160]	; 19954 <BN_free@plt+0x6978>
   198b0:	mov	r7, #0
   198b4:	mov	r2, r0
   198b8:	mov	r0, #5
   198bc:	bl	14e90 <BN_free@plt+0x1eb4>
   198c0:	b	19824 <BN_free@plt+0x6848>
   198c4:	ldr	r1, [pc, #140]	; 19958 <BN_free@plt+0x697c>
   198c8:	mov	r0, #5
   198cc:	mov	r7, r4
   198d0:	mov	sl, r4
   198d4:	mov	fp, r4
   198d8:	bl	14e90 <BN_free@plt+0x1eb4>
   198dc:	b	19824 <BN_free@plt+0x6848>
   198e0:	mov	r7, r4
   198e4:	mov	sl, r4
   198e8:	mov	fp, r4
   198ec:	mov	r5, r4
   198f0:	b	19824 <BN_free@plt+0x6848>
   198f4:	mov	r4, r5
   198f8:	mov	r7, r5
   198fc:	mov	sl, r5
   19900:	mov	fp, r5
   19904:	b	19824 <BN_free@plt+0x6848>
   19908:	mov	r7, sl
   1990c:	mov	fp, sl
   19910:	b	19824 <BN_free@plt+0x6848>
   19914:	bl	12790 <ERR_get_error@plt>
   19918:	mov	r1, r4
   1991c:	bl	12c4c <ERR_error_string@plt>
   19920:	ldr	r1, [pc, #52]	; 1995c <BN_free@plt+0x6980>
   19924:	mov	r7, r4
   19928:	mov	sl, r4
   1992c:	mov	fp, r4
   19930:	mov	r2, r0
   19934:	mov	r0, #5
   19938:	bl	14e90 <BN_free@plt+0x1eb4>
   1993c:	b	19824 <BN_free@plt+0x6848>
   19940:	bl	12d60 <__stack_chk_fail@plt>
   19944:	ldrdeq	fp, [r2], -r8
   19948:	andeq	sl, r1, r4, ror #25
   1994c:	andeq	sl, r1, r4, lsr #24
   19950:	muleq	r1, r0, ip
   19954:			; <UNDEFINED> instruction: 0x0001acbc
   19958:	andeq	sl, r1, r0, ror #24
   1995c:	andeq	sl, r1, ip, ror #23
   19960:	push	{r4, lr}
   19964:	subs	r4, r0, #0
   19968:	popeq	{r4, pc}
   1996c:	ldr	r0, [r4]
   19970:	cmp	r0, #0
   19974:	beq	1997c <BN_free@plt+0x69a0>
   19978:	bl	17268 <BN_free@plt+0x428c>
   1997c:	ldr	r0, [r4, #4]
   19980:	bl	12e74 <EVP_PKEY_free@plt>
   19984:	mov	r0, r4
   19988:	pop	{r4, lr}
   1998c:	b	12a30 <free@plt>
   19990:	push	{r4, r5, r6, lr}
   19994:	mov	r5, r0
   19998:	mov	r0, #8
   1999c:	bl	16e00 <BN_free@plt+0x3e24>
   199a0:	subs	r4, r0, #0
   199a4:	beq	19a78 <BN_free@plt+0x6a9c>
   199a8:	mov	r0, r5
   199ac:	bl	18e1c <BN_free@plt+0x5e40>
   199b0:	cmp	r0, #0
   199b4:	str	r0, [r4]
   199b8:	beq	19a78 <BN_free@plt+0x6a9c>
   199bc:	ldr	r0, [r0, #4]
   199c0:	bl	12b8c <EC_KEY_new_by_curve_name@plt>
   199c4:	subs	r5, r0, #0
   199c8:	beq	19aa4 <BN_free@plt+0x6ac8>
   199cc:	mov	r1, #1
   199d0:	bl	12f28 <EC_KEY_set_asn1_flag@plt>
   199d4:	bl	128b0 <EVP_PKEY_new@plt>
   199d8:	subs	r6, r0, #0
   199dc:	beq	19a44 <BN_free@plt+0x6a68>
   199e0:	mov	r1, r5
   199e4:	bl	12a84 <EVP_PKEY_set1_EC_KEY@plt>
   199e8:	cmp	r0, #1
   199ec:	bne	19a44 <BN_free@plt+0x6a68>
   199f0:	mov	r1, #0
   199f4:	mov	r0, r6
   199f8:	bl	12880 <EVP_PKEY_CTX_new@plt>
   199fc:	subs	r5, r0, #0
   19a00:	beq	19a54 <BN_free@plt+0x6a78>
   19a04:	bl	12a78 <EVP_PKEY_keygen_init@plt>
   19a08:	cmp	r0, #1
   19a0c:	bne	19a84 <BN_free@plt+0x6aa8>
   19a10:	add	r1, r4, #4
   19a14:	mov	r0, r5
   19a18:	bl	12ce8 <EVP_PKEY_keygen@plt>
   19a1c:	cmp	r0, #1
   19a20:	beq	19a60 <BN_free@plt+0x6a84>
   19a24:	bl	12790 <ERR_get_error@plt>
   19a28:	mov	r1, #0
   19a2c:	bl	12c4c <ERR_error_string@plt>
   19a30:	ldr	r1, [pc, #128]	; 19ab8 <BN_free@plt+0x6adc>
   19a34:	mov	r2, r0
   19a38:	mov	r0, #5
   19a3c:	bl	14e90 <BN_free@plt+0x1eb4>
   19a40:	b	19a54 <BN_free@plt+0x6a78>
   19a44:	ldr	r1, [pc, #112]	; 19abc <BN_free@plt+0x6ae0>
   19a48:	mov	r0, #5
   19a4c:	bl	14e90 <BN_free@plt+0x1eb4>
   19a50:	mov	r5, #0
   19a54:	mov	r0, r4
   19a58:	bl	19960 <BN_free@plt+0x6984>
   19a5c:	mov	r4, #0
   19a60:	mov	r0, r6
   19a64:	bl	12e74 <EVP_PKEY_free@plt>
   19a68:	mov	r0, r5
   19a6c:	bl	12c40 <EVP_PKEY_CTX_free@plt>
   19a70:	mov	r0, r4
   19a74:	pop	{r4, r5, r6, pc}
   19a78:	mov	r5, #0
   19a7c:	mov	r6, r5
   19a80:	b	19a54 <BN_free@plt+0x6a78>
   19a84:	bl	12790 <ERR_get_error@plt>
   19a88:	mov	r1, #0
   19a8c:	bl	12c4c <ERR_error_string@plt>
   19a90:	ldr	r1, [pc, #40]	; 19ac0 <BN_free@plt+0x6ae4>
   19a94:	mov	r2, r0
   19a98:	mov	r0, #5
   19a9c:	bl	14e90 <BN_free@plt+0x1eb4>
   19aa0:	b	19a54 <BN_free@plt+0x6a78>
   19aa4:	ldr	r1, [pc, #24]	; 19ac4 <BN_free@plt+0x6ae8>
   19aa8:	mov	r0, #5
   19aac:	bl	14e90 <BN_free@plt+0x1eb4>
   19ab0:	mov	r6, r5
   19ab4:	b	19a54 <BN_free@plt+0x6a78>
   19ab8:	muleq	r1, r8, sp
   19abc:	andeq	sl, r1, ip, lsr sp
   19ac0:	andeq	sl, r1, ip, ror #26
   19ac4:	andeq	sl, r1, ip, lsl #26
   19ac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19acc:	mov	r6, r2
   19ad0:	ldr	r2, [pc, #308]	; 19c0c <BN_free@plt+0x6c30>
   19ad4:	sub	sp, sp, #68	; 0x44
   19ad8:	mov	r4, #0
   19adc:	ldr	r2, [r2]
   19ae0:	mov	r7, r0
   19ae4:	mov	r0, r6
   19ae8:	mov	r9, r3
   19aec:	str	r2, [sp, #60]	; 0x3c
   19af0:	mov	r8, r1
   19af4:	strb	r4, [sp, #15]
   19af8:	bl	12b38 <strlen@plt>
   19afc:	ldr	r3, [sp, #104]	; 0x68
   19b00:	ldr	r5, [sp, #112]	; 0x70
   19b04:	str	r3, [sp, #32]
   19b08:	mov	r3, #1
   19b0c:	add	r2, sp, #15
   19b10:	cmp	r5, r4
   19b14:	str	r9, [sp, #20]
   19b18:	str	r6, [sp, #16]
   19b1c:	str	r2, [sp, #24]
   19b20:	str	r3, [sp, #36]	; 0x24
   19b24:	ldr	r9, [sp, #108]	; 0x6c
   19b28:	add	r0, r0, r3
   19b2c:	str	r0, [sp, #28]
   19b30:	beq	19bc4 <BN_free@plt+0x6be8>
   19b34:	cmp	r5, #19
   19b38:	movls	r6, r5
   19b3c:	addls	fp, sp, #16
   19b40:	addls	sl, sp, #28
   19b44:	bls	19bcc <BN_free@plt+0x6bf0>
   19b48:	add	fp, sp, #16
   19b4c:	add	sl, sp, #28
   19b50:	b	19b78 <BN_free@plt+0x6b9c>
   19b54:	ldrb	r3, [sp, #15]
   19b58:	add	r4, r4, #20
   19b5c:	cmp	r5, r4
   19b60:	add	r3, r3, #1
   19b64:	strb	r3, [sp, #15]
   19b68:	bls	19bc4 <BN_free@plt+0x6be8>
   19b6c:	sub	r6, r5, r4
   19b70:	cmp	r6, #19
   19b74:	bls	19bcc <BN_free@plt+0x6bf0>
   19b78:	add	r3, r9, r4
   19b7c:	str	r3, [sp, #4]
   19b80:	str	sl, [sp]
   19b84:	mov	r3, fp
   19b88:	mov	r2, #3
   19b8c:	mov	r1, r8
   19b90:	mov	r0, r7
   19b94:	bl	187b4 <BN_free@plt+0x57d8>
   19b98:	cmp	r0, #0
   19b9c:	beq	19b54 <BN_free@plt+0x6b78>
   19ba0:	mvn	r7, #0
   19ba4:	ldr	r3, [pc, #96]	; 19c0c <BN_free@plt+0x6c30>
   19ba8:	ldr	r2, [sp, #60]	; 0x3c
   19bac:	mov	r0, r7
   19bb0:	ldr	r3, [r3]
   19bb4:	cmp	r2, r3
   19bb8:	bne	19c08 <BN_free@plt+0x6c2c>
   19bbc:	add	sp, sp, #68	; 0x44
   19bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19bc4:	mov	r7, #0
   19bc8:	b	19ba4 <BN_free@plt+0x6bc8>
   19bcc:	add	r5, sp, #40	; 0x28
   19bd0:	mov	r0, r7
   19bd4:	str	sl, [sp]
   19bd8:	mov	r3, fp
   19bdc:	mov	r1, r8
   19be0:	str	r5, [sp, #4]
   19be4:	mov	r2, #3
   19be8:	bl	187b4 <BN_free@plt+0x57d8>
   19bec:	subs	r7, r0, #0
   19bf0:	bne	19ba0 <BN_free@plt+0x6bc4>
   19bf4:	mov	r2, r6
   19bf8:	mov	r1, r5
   19bfc:	add	r0, r9, r4
   19c00:	bl	12b98 <memcpy@plt>
   19c04:	b	19ba4 <BN_free@plt+0x6bc8>
   19c08:	bl	12d60 <__stack_chk_fail@plt>
   19c0c:	ldrdeq	fp, [r2], -r8
   19c10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c14:	mov	r6, r2
   19c18:	ldr	r2, [pc, #328]	; 19d68 <BN_free@plt+0x6d8c>
   19c1c:	sub	sp, sp, #92	; 0x5c
   19c20:	mov	r4, #0
   19c24:	ldr	r2, [r2]
   19c28:	mov	r8, r0
   19c2c:	mov	r0, r6
   19c30:	mov	r7, r3
   19c34:	str	r2, [sp, #84]	; 0x54
   19c38:	mov	r9, r1
   19c3c:	strb	r4, [sp, #19]
   19c40:	bl	12b38 <strlen@plt>
   19c44:	ldr	r3, [sp, #128]	; 0x80
   19c48:	ldr	r5, [sp, #136]	; 0x88
   19c4c:	str	r3, [sp, #48]	; 0x30
   19c50:	add	r3, sp, #60	; 0x3c
   19c54:	str	r3, [sp, #32]
   19c58:	mov	r3, #2
   19c5c:	str	r3, [sp, #52]	; 0x34
   19c60:	add	r3, sp, #19
   19c64:	str	r3, [sp, #36]	; 0x24
   19c68:	mov	r3, #1
   19c6c:	str	r6, [sp, #24]
   19c70:	rev16	r2, r5
   19c74:	add	r6, sp, #64	; 0x40
   19c78:	cmp	r5, r4
   19c7c:	str	r7, [sp, #28]
   19c80:	str	r4, [sp, #40]	; 0x28
   19c84:	strh	r2, [sp, #60]	; 0x3c
   19c88:	str	r6, [sp, #20]
   19c8c:	str	r3, [sp, #56]	; 0x38
   19c90:	ldr	r7, [sp, #132]	; 0x84
   19c94:	add	r0, r0, r3
   19c98:	str	r0, [sp, #44]	; 0x2c
   19c9c:	beq	19d44 <BN_free@plt+0x6d68>
   19ca0:	add	sl, sp, #40	; 0x28
   19ca4:	mov	fp, #20
   19ca8:	mov	ip, r4
   19cac:	b	19cf0 <BN_free@plt+0x6d14>
   19cb0:	cmp	r2, #19
   19cb4:	add	lr, r7, r4
   19cb8:	bls	19d4c <BN_free@plt+0x6d70>
   19cbc:	mov	ip, r6
   19cc0:	str	fp, [sp, #40]	; 0x28
   19cc4:	ldm	ip!, {r0, r1, r2, r3}
   19cc8:	str	r0, [r7, r4]
   19ccc:	ldr	r0, [ip]
   19cd0:	add	r4, r4, #20
   19cd4:	cmp	r5, r4
   19cd8:	str	r0, [lr, #16]
   19cdc:	str	r1, [lr, #4]
   19ce0:	str	r2, [lr, #8]
   19ce4:	str	r3, [lr, #12]
   19ce8:	bls	19d44 <BN_free@plt+0x6d68>
   19cec:	ldrb	ip, [sp, #19]
   19cf0:	add	ip, ip, #1
   19cf4:	mov	r2, #5
   19cf8:	str	r6, [sp, #4]
   19cfc:	str	sl, [sp]
   19d00:	add	r3, sp, #20
   19d04:	mov	r1, r9
   19d08:	mov	r0, r8
   19d0c:	strb	ip, [sp, #19]
   19d10:	bl	187b4 <BN_free@plt+0x57d8>
   19d14:	sub	r2, r5, r4
   19d18:	cmp	r0, #0
   19d1c:	beq	19cb0 <BN_free@plt+0x6cd4>
   19d20:	mvn	r3, #0
   19d24:	ldr	r2, [pc, #60]	; 19d68 <BN_free@plt+0x6d8c>
   19d28:	ldr	r1, [sp, #84]	; 0x54
   19d2c:	mov	r0, r3
   19d30:	ldr	r2, [r2]
   19d34:	cmp	r1, r2
   19d38:	bne	19d64 <BN_free@plt+0x6d88>
   19d3c:	add	sp, sp, #92	; 0x5c
   19d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19d44:	mov	r3, #0
   19d48:	b	19d24 <BN_free@plt+0x6d48>
   19d4c:	str	r0, [sp, #12]
   19d50:	mov	r1, r6
   19d54:	mov	r0, lr
   19d58:	bl	12b98 <memcpy@plt>
   19d5c:	ldr	r3, [sp, #12]
   19d60:	b	19d24 <BN_free@plt+0x6d48>
   19d64:	bl	12d60 <__stack_chk_fail@plt>
   19d68:	ldrdeq	fp, [r2], -r8
   19d6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d70:	tst	r1, #1
   19d74:	mov	r8, r1
   19d78:	ldr	r1, [pc, #488]	; 19f68 <BN_free@plt+0x6f8c>
   19d7c:	sub	sp, sp, #148	; 0x94
   19d80:	ldr	r1, [r1]
   19d84:	str	r0, [sp, #12]
   19d88:	str	r1, [sp, #140]	; 0x8c
   19d8c:	ldr	r7, [sp, #188]	; 0xbc
   19d90:	bne	19f5c <BN_free@plt+0x6f80>
   19d94:	add	fp, sp, #68	; 0x44
   19d98:	mov	r0, r2
   19d9c:	mov	r4, #16
   19da0:	mov	r6, r2
   19da4:	mov	r9, r3
   19da8:	str	r2, [sp, #24]
   19dac:	str	fp, [sp, #20]
   19db0:	str	r4, [sp, #32]
   19db4:	bl	12b38 <strlen@plt>
   19db8:	add	r8, r8, #1
   19dbc:	ldr	ip, [sp, #12]
   19dc0:	ldr	lr, [sp, #184]	; 0xb8
   19dc4:	lsr	r8, r8, #1
   19dc8:	add	r3, sp, #36	; 0x24
   19dcc:	mov	r1, r8
   19dd0:	str	r3, [sp]
   19dd4:	add	sl, sp, #100	; 0x64
   19dd8:	add	r3, sp, #24
   19ddc:	mov	r2, #2
   19de0:	str	fp, [sp, #4]
   19de4:	mov	r5, #20
   19de8:	str	lr, [sp, #40]	; 0x28
   19dec:	str	r6, [sp, #48]	; 0x30
   19df0:	str	lr, [sp, #64]	; 0x40
   19df4:	str	r9, [sp, #28]
   19df8:	str	r9, [sp, #52]	; 0x34
   19dfc:	str	sl, [sp, #44]	; 0x2c
   19e00:	str	r5, [sp, #56]	; 0x38
   19e04:	str	r0, [sp, #36]	; 0x24
   19e08:	str	r0, [sp, #60]	; 0x3c
   19e0c:	mov	r0, ip
   19e10:	add	ip, ip, r8
   19e14:	mov	r6, ip
   19e18:	str	ip, [sp, #8]
   19e1c:	bl	186c8 <BN_free@plt+0x56ec>
   19e20:	add	r3, sp, #60	; 0x3c
   19e24:	str	r3, [sp]
   19e28:	str	sl, [sp, #4]
   19e2c:	add	r3, sp, #48	; 0x30
   19e30:	mov	r0, r6
   19e34:	mov	r1, r8
   19e38:	mov	r2, #2
   19e3c:	bl	187b4 <BN_free@plt+0x57d8>
   19e40:	ldr	r3, [sp, #192]	; 0xc0
   19e44:	cmp	r3, #0
   19e48:	beq	19f3c <BN_free@plt+0x6f60>
   19e4c:	ldr	r3, [sp, #192]	; 0xc0
   19e50:	add	r9, r7, r3
   19e54:	sub	r9, r9, #1
   19e58:	sub	r7, r7, #1
   19e5c:	b	19e9c <BN_free@plt+0x6ec0>
   19e60:	cmp	r5, #20
   19e64:	mov	r6, r4
   19e68:	add	r4, r4, #1
   19e6c:	beq	19ef4 <BN_free@plt+0x6f18>
   19e70:	mov	r2, r5
   19e74:	add	r5, r5, #1
   19e78:	add	r3, sp, #144	; 0x90
   19e7c:	add	r2, r3, r2
   19e80:	add	r6, r3, r6
   19e84:	ldrb	r2, [r2, #-24]	; 0xffffffe8
   19e88:	ldrb	r3, [r6, #-60]	; 0xffffffc4
   19e8c:	eor	r3, r3, r2
   19e90:	strb	r3, [r7, #1]!
   19e94:	cmp	r7, r9
   19e98:	beq	19f3c <BN_free@plt+0x6f60>
   19e9c:	cmp	r4, #16
   19ea0:	bne	19e60 <BN_free@plt+0x6e84>
   19ea4:	ldr	r6, [sp, #12]
   19ea8:	add	r3, sp, #84	; 0x54
   19eac:	str	r3, [sp, #4]
   19eb0:	add	r3, sp, #32
   19eb4:	str	r3, [sp]
   19eb8:	mov	r2, #3
   19ebc:	add	r3, sp, #20
   19ec0:	mov	r1, r8
   19ec4:	mov	r0, r6
   19ec8:	bl	186c8 <BN_free@plt+0x56ec>
   19ecc:	mov	r3, r4
   19ed0:	mov	r0, r6
   19ed4:	str	fp, [sp]
   19ed8:	mov	r2, fp
   19edc:	mov	r1, r8
   19ee0:	bl	18714 <BN_free@plt+0x5738>
   19ee4:	cmp	r5, #20
   19ee8:	mov	r4, #1
   19eec:	mov	r6, #0
   19ef0:	bne	19e70 <BN_free@plt+0x6e94>
   19ef4:	add	r2, sp, #120	; 0x78
   19ef8:	add	r3, sp, #56	; 0x38
   19efc:	str	r2, [sp, #4]
   19f00:	str	r3, [sp]
   19f04:	mov	r2, #3
   19f08:	add	r3, sp, #44	; 0x2c
   19f0c:	mov	r1, r8
   19f10:	ldr	r0, [sp, #8]
   19f14:	bl	187b4 <BN_free@plt+0x57d8>
   19f18:	mov	r3, r5
   19f1c:	mov	r2, sl
   19f20:	str	sl, [sp]
   19f24:	mov	r1, r8
   19f28:	ldr	r0, [sp, #8]
   19f2c:	bl	18800 <BN_free@plt+0x5824>
   19f30:	mov	r5, #1
   19f34:	mov	r2, #0
   19f38:	b	19e78 <BN_free@plt+0x6e9c>
   19f3c:	mov	r0, #0
   19f40:	ldr	r3, [pc, #32]	; 19f68 <BN_free@plt+0x6f8c>
   19f44:	ldr	r2, [sp, #140]	; 0x8c
   19f48:	ldr	r3, [r3]
   19f4c:	cmp	r2, r3
   19f50:	bne	19f64 <BN_free@plt+0x6f88>
   19f54:	add	sp, sp, #148	; 0x94
   19f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f5c:	mvn	r0, #0
   19f60:	b	19f40 <BN_free@plt+0x6f64>
   19f64:	bl	12d60 <__stack_chk_fail@plt>
   19f68:	ldrdeq	fp, [r2], -r8
   19f6c:	ldr	ip, [pc, #412]	; 1a110 <BN_free@plt+0x7134>
   19f70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f74:	sub	sp, sp, #100	; 0x64
   19f78:	ldr	lr, [ip]
   19f7c:	ldr	ip, [sp, #144]	; 0x90
   19f80:	mov	r4, #2
   19f84:	add	r6, ip, #7
   19f88:	mov	r8, r0
   19f8c:	add	ip, sp, #52	; 0x34
   19f90:	mov	r0, r2
   19f94:	mov	r5, r3
   19f98:	str	r2, [sp, #24]
   19f9c:	mov	r9, r1
   19fa0:	str	lr, [sp, #92]	; 0x5c
   19fa4:	str	ip, [sp, #20]
   19fa8:	str	r4, [sp, #36]	; 0x24
   19fac:	bl	12b38 <strlen@plt>
   19fb0:	lsr	r6, r6, #3
   19fb4:	ldr	r2, [sp, #136]	; 0x88
   19fb8:	ldr	r1, [sp, #144]	; 0x90
   19fbc:	add	r3, sp, #56	; 0x38
   19fc0:	cmp	r6, #0
   19fc4:	str	r5, [sp, #28]
   19fc8:	str	r4, [sp, #48]	; 0x30
   19fcc:	strh	r1, [sp, #56]	; 0x38
   19fd0:	str	r2, [sp, #44]	; 0x2c
   19fd4:	str	r3, [sp, #32]
   19fd8:	ldr	r7, [sp, #140]	; 0x8c
   19fdc:	str	r0, [sp, #40]	; 0x28
   19fe0:	beq	1a0dc <BN_free@plt+0x7100>
   19fe4:	mov	r4, #1
   19fe8:	cmp	r6, #31
   19fec:	strh	r4, [sp, #52]	; 0x34
   19ff0:	bls	1a08c <BN_free@plt+0x70b0>
   19ff4:	sub	r3, r6, #32
   19ff8:	bic	r3, r3, #31
   19ffc:	str	r3, [sp, #8]
   1a000:	add	r3, r3, #32
   1a004:	str	r3, [sp, #12]
   1a008:	mov	r5, #0
   1a00c:	add	fp, sp, #20
   1a010:	add	sl, sp, #36	; 0x24
   1a014:	b	1a044 <BN_free@plt+0x7068>
   1a018:	add	r4, r4, #1
   1a01c:	add	r3, r5, #32
   1a020:	cmp	r6, r3
   1a024:	uxth	r4, r4
   1a028:	bls	1a0e0 <BN_free@plt+0x7104>
   1a02c:	ldr	r2, [sp, #8]
   1a030:	strh	r4, [sp, #52]	; 0x34
   1a034:	cmp	r5, r2
   1a038:	sub	r5, r6, r3
   1a03c:	beq	1a0a0 <BN_free@plt+0x70c4>
   1a040:	mov	r5, r3
   1a044:	add	r3, r7, r5
   1a048:	str	r3, [sp, #4]
   1a04c:	str	sl, [sp]
   1a050:	mov	r3, fp
   1a054:	mov	r2, #4
   1a058:	mov	r1, r9
   1a05c:	mov	r0, r8
   1a060:	bl	18850 <BN_free@plt+0x5874>
   1a064:	cmp	r0, #0
   1a068:	bge	1a018 <BN_free@plt+0x703c>
   1a06c:	mvn	r0, #0
   1a070:	ldr	r3, [pc, #152]	; 1a110 <BN_free@plt+0x7134>
   1a074:	ldr	r2, [sp, #92]	; 0x5c
   1a078:	ldr	r3, [r3]
   1a07c:	cmp	r2, r3
   1a080:	bne	1a10c <BN_free@plt+0x7130>
   1a084:	add	sp, sp, #100	; 0x64
   1a088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a08c:	mov	r5, r6
   1a090:	add	fp, sp, #20
   1a094:	add	sl, sp, #36	; 0x24
   1a098:	mov	r3, #0
   1a09c:	str	r3, [sp, #12]
   1a0a0:	add	r4, sp, #60	; 0x3c
   1a0a4:	str	sl, [sp]
   1a0a8:	mov	r3, fp
   1a0ac:	mov	r1, r9
   1a0b0:	mov	r0, r8
   1a0b4:	str	r4, [sp, #4]
   1a0b8:	mov	r2, #4
   1a0bc:	bl	18850 <BN_free@plt+0x5874>
   1a0c0:	cmp	r0, #0
   1a0c4:	blt	1a06c <BN_free@plt+0x7090>
   1a0c8:	ldr	r3, [sp, #12]
   1a0cc:	mov	r2, r5
   1a0d0:	mov	r1, r4
   1a0d4:	add	r0, r7, r3
   1a0d8:	bl	12b98 <memcpy@plt>
   1a0dc:	mov	r3, r6
   1a0e0:	ldr	r2, [sp, #144]	; 0x90
   1a0e4:	ands	r0, r2, #7
   1a0e8:	beq	1a070 <BN_free@plt+0x7094>
   1a0ec:	sub	r3, r3, #1
   1a0f0:	rsb	r1, r0, #8
   1a0f4:	ldrb	r2, [r7, r3]
   1a0f8:	mov	ip, #255	; 0xff
   1a0fc:	mov	r0, #0
   1a100:	and	r2, r2, ip, lsl r1
   1a104:	strb	r2, [r7, r3]
   1a108:	b	1a070 <BN_free@plt+0x7094>
   1a10c:	bl	12d60 <__stack_chk_fail@plt>
   1a110:	ldrdeq	fp, [r2], -r8
   1a114:	ldr	ip, [sp, #8]
   1a118:	lsl	ip, ip, #3
   1a11c:	str	ip, [sp, #8]
   1a120:	b	19f6c <BN_free@plt+0x6f90>
   1a124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a128:	mov	r6, r0
   1a12c:	ldr	r0, [pc, #240]	; 1a224 <BN_free@plt+0x7248>
   1a130:	sub	sp, sp, #108	; 0x6c
   1a134:	mov	ip, #32
   1a138:	ldr	lr, [r0]
   1a13c:	add	r5, sp, #36	; 0x24
   1a140:	mov	r0, r2
   1a144:	mov	r4, r3
   1a148:	str	r2, [sp, #16]
   1a14c:	mov	r7, r1
   1a150:	str	lr, [sp, #100]	; 0x64
   1a154:	str	ip, [sp, #24]
   1a158:	str	r5, [sp, #12]
   1a15c:	bl	12b38 <strlen@plt>
   1a160:	ldr	ip, [sp, #144]	; 0x90
   1a164:	add	r3, sp, #28
   1a168:	ldr	r8, [sp, #152]	; 0x98
   1a16c:	str	r3, [sp]
   1a170:	str	r5, [sp, #4]
   1a174:	mov	r1, r7
   1a178:	add	r3, sp, #16
   1a17c:	mov	r2, #2
   1a180:	str	r4, [sp, #20]
   1a184:	str	ip, [sp, #32]
   1a188:	ldr	sl, [sp, #148]	; 0x94
   1a18c:	str	r0, [sp, #28]
   1a190:	mov	r0, r6
   1a194:	bl	18850 <BN_free@plt+0x5874>
   1a198:	cmp	r8, #0
   1a19c:	beq	1a204 <BN_free@plt+0x7228>
   1a1a0:	mov	r4, #0
   1a1a4:	add	r9, sp, #68	; 0x44
   1a1a8:	add	fp, sp, #24
   1a1ac:	add	r3, sp, #12
   1a1b0:	mov	r2, #3
   1a1b4:	mov	r1, r7
   1a1b8:	str	r9, [sp, #4]
   1a1bc:	str	fp, [sp]
   1a1c0:	mov	r0, r6
   1a1c4:	bl	18850 <BN_free@plt+0x5874>
   1a1c8:	mov	r3, #32
   1a1cc:	mov	r2, r5
   1a1d0:	mov	r1, r7
   1a1d4:	str	r5, [sp]
   1a1d8:	mov	r0, r6
   1a1dc:	bl	1889c <BN_free@plt+0x58c0>
   1a1e0:	sub	r2, r8, r4
   1a1e4:	cmp	r2, #32
   1a1e8:	movcs	r2, #32
   1a1ec:	add	r0, sl, r4
   1a1f0:	mov	r1, r9
   1a1f4:	add	r4, r4, r2
   1a1f8:	bl	12b98 <memcpy@plt>
   1a1fc:	cmp	r8, r4
   1a200:	bhi	1a1ac <BN_free@plt+0x71d0>
   1a204:	ldr	r3, [pc, #24]	; 1a224 <BN_free@plt+0x7248>
   1a208:	ldr	r2, [sp, #100]	; 0x64
   1a20c:	ldr	r3, [r3]
   1a210:	cmp	r2, r3
   1a214:	bne	1a220 <BN_free@plt+0x7244>
   1a218:	add	sp, sp, #108	; 0x6c
   1a21c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a220:	bl	12d60 <__stack_chk_fail@plt>
   1a224:	ldrdeq	fp, [r2], -r8
   1a228:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a22c:	mov	r7, r0
   1a230:	ldr	r6, [pc, #72]	; 1a280 <BN_free@plt+0x72a4>
   1a234:	ldr	r5, [pc, #72]	; 1a284 <BN_free@plt+0x72a8>
   1a238:	add	r6, pc, r6
   1a23c:	add	r5, pc, r5
   1a240:	sub	r6, r6, r5
   1a244:	mov	r8, r1
   1a248:	mov	r9, r2
   1a24c:	bl	126c8 <BN_div@plt-0x20>
   1a250:	asrs	r6, r6, #2
   1a254:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a258:	mov	r4, #0
   1a25c:	add	r4, r4, #1
   1a260:	ldr	r3, [r5], #4
   1a264:	mov	r2, r9
   1a268:	mov	r1, r8
   1a26c:	mov	r0, r7
   1a270:	blx	r3
   1a274:	cmp	r6, r4
   1a278:	bne	1a25c <BN_free@plt+0x7280>
   1a27c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a280:	muleq	r1, r4, r9
   1a284:	andeq	r1, r1, ip, lsl #19
   1a288:	bx	lr

Disassembly of section .fini:

0001a28c <.fini>:
   1a28c:	push	{r3, lr}
   1a290:	pop	{r3, pc}
